in
test
or
mov
pop
mov
sbb
xchg
sbb
les
fistpl
mov
adc
mov
pusha
jle
lods
jg
sbb
popf
adc
cli
jnp
inc
mov
adc
pusha
shlb
sub
jle
pop
jmp
repz
push
test
mov
stos
repnz
xor
xor
pop
xchg
pop
mov
push
aad
faddl
mov
cmovno
or
lahf
inc
ja
sub
fnsave
jb
arpl
push
sbb
dec
pop
andb
dec
sbb
mov
aaa
gs
shlb
or
int
mov
adc
insl
mov
mov
push
lea
dec
add
mov
mov
scas
lret
fistps
jge
dec
pop
cmp
arpl
lock
xchg
mov
repz
push
cld
jmp
adc
push
xchg
fildll
pop
stos
outsl
mov
mov
movsl
nop
aaa
stc
add
push
sarl
pop
fcmovnb
push
ja
jmp
and
pop
jg
mov
shlb
inc
sbb
add
sub
push
xor
sahf
dec
xor
imul
leave
pop
mov
xor
int
lret
cmpsl
ret
flds
mov
cmpsl
pop
xchg
out
clc
cwtl
es
lods
mov
shl
inc
push
fwait
ret
dec
lahf
pop
es
inc
adc
xchg
lret
sbb
out
test
lods
sti
cmpsb
pop
xor
mov
lcall
lret
ret
lock
outsl
sbb
add
jp
imul
add
lret
movsl
dec
sbb
xlat
pop
sbb
test
jmp
push
mov
and
cmp
ror
inc
pop
cld
leave
sbb
jno
inc
fmuls
fmuls
jp
sbb
push
stos
jge
inc
lcall
jle
imul
negb
mov
sbb
jmp
cmp
int
cmp
js
mov
inc
sbb
aad
dec
shlb
dec
frstpm(287
or
adc
inc
adc
fsubr
dec
vpmullw
pop
rcll
fsubs
sar
jecxz
fnsave
inc
fwait
enter
mov
push
sbb
test
cmpb
push
rcll
pop
add
cwtl
dec
and
mov
mov
test
add
int
fs
mov
jns
mov
mov
pop
push
jle
pop
lock
into
sbb
add
pushw
cwtl
dec
or
nop
push
stos
mov
aaa
fadds
mov
movsl
mov
fcmovnu
ljmp
popf
lret
icebp
add
cmp
mov
xchg
fsts
sub
ficoml
cs
imul
aad
xor
xor
sbb
push
leave
jmp
or
xchg
into
xor
addl
mov
hlt
xor
jo
xchg
adc
stos
cmp
lret
xchg
pop
fnstenv
sub
xchg
push
sahf
push
jle
iret
xchg
pop
pop
je
cmp
xchg
push
jle
clc
enter
add
jle
xor
daa
hlt
xor
popf
outsl
dec
mov
loope
and
enter
xor
out
push
shlb
roll
mov
adc
setg
daa
push
inc
sti
lds
pop
and
mov
shll
pop
adc
add
fs
popf
pushf
cmpsb
xchg
and
insb
mov
and
in
mov
lret
lcall
sbb
mov
scas
xchg
bound
cwtl
nop
popf
mov
or
jp
xchg
or
shl
mov
adc
adc
cmp
mov
push
or
lahf
scas
pop
jno
in
rorl
sbb
andl
jmp
or
inc
pop
jmp
and
dec
mov
fptan
stos
cmc
mov
repz
inc
insl
out
jmp
or
cmp
clc
rolb
scas
inc
cltd
enter
push
adc
jp
sub
sub
out
jne
mov
mov
shlb
ret
cmp
and
mov
test
fwait
mov
inc
mov
cld
daa
fnstenv
mov
inc
sbb
inc
sbb
or
roll
lret
inc
sbb
daa
push
mov
pop
test
mov
pop
mov
jns
xchg
and
jae
push
clc
mov
mov
xchg
add
cmp
or
cmp
adc
lock
mov
mov
ljmp
jnp
sbb
jge
pop
xor
fwait
js
jp
mov
mov
cmc
cmp
add
xor
push
psllq
dec
sarb
clc
bound
pop
idivl
stc
repnz
or
add
mov
roll
mov
jnp
sbb
mov
in
int
xor
jb
add
and
sub
enter
aad
or
add
fdivrl
mov
loop
ljmp
xchg
div
cmp
xor
rcrl
add
mov
lahf
fcompp
inc
pop
cli
add
cltd
xchg
adc
clc
in
and
jmp
cwtl
cmc
xor
sbb
mov
scas
xchg
bound
cwtl
nop
popf
mov
or
jp
xchg
or
shl
mov
adc
adc
cmp
mov
push
or
lahf
scas
pop
jno
in
rorl
sbb
jl
clc
jle
je
jmp
or
inc
pop
jmp
and
dec
mov
fptan
stos
cmc
mov
repz
inc
insl
out
jmp
or
cmp
clc
rolb
es
cltd
enter
push
adc
jp
sub
sub
out
jne
mov
mov
shlb
ret
cmp
and
mov
test
cmc
lret
clc
cmp
inc
pop
pop
push
jns
mov
or
xlat
adc
sbb
test
xor
and
xor
stos
sub
push
mov
push
dec
sbb
pushf
cs
mov
sahf
das
xchg
stc
cli
in
test
or
ret
bound
and
xchg
ficoml
outsl
les
sbb
inc
cld
repnz
movsl
fstl
jnp
dec
je
into
xor
sbb
filds
adc
mov
andl
dec
adc
rorl
mov
pusha
mov
icebp
pop
ret
inc
gs
inc
or
and
add
int3
sbb
push
inc
cltd
enter
jo
dec
push
int3
insb
enter
adc
or
cmc
enter
xchg
push
adc
out
mov
or
pop
jp
arpl
pop
and
cmp
mov
cmp
pop
rol
cmp
insl
cltd
popf
sti
jecxz
arpl
inc
sbb
inc
aas
rolb
cmp
sbbb
inc
sbb
dec
sbb
inc
lods
push
and
leave
xchg
inc
sbb
dec
pop
inc
mov
bound
call
xor
push
sub
add
push
add
xchg
stos
sti
push
fimuls
mov
sarl
dec
xor
cmp
push
fcompl
jmp
mov
js
dec
xlat
push
mov
sbb
mov
in
aam
fdivs
aaa
rcr
xor
sbb
daa
adc
test
gs
inc
xchg
cwtl
inc
mov
pop
into
fmuls
mov
jne
jecxz
adc
add
inc
dec
lahf
cmc
iret
pop
stos
mov
out
aam
pop
pop
enter
mov
add
insl
sub
in
into
hlt
ja
in
xor
shll
pop
daa
dec
xchg
mov
sbb
in
dec
push
divb
push
imulb
and
mov
sbb
add
inc
in
cwtl
or
adc
mov
add
int3
xchg
sbb
pop
pop
repz
mov
cmpsl
xchg
test
inc
addr16
mov
xchg
add
pop
mov
adc
sub
mov
xor
lds
push
fsub
jmp
pushf
sahf
xchg
cmp
push
pushl
cmp
je
loope
into
inc
fnstsw
or
pop
inc
sbb
adc
iret
mov
test
adc
es
xor
xchg
sub
fdivrl
and
push
push
mov
mov
sbb
mov
test
inc
sub
sub
push
and
lahf
pop
pop
add
fucomi
pop
xchg
sbb
dec
xor
into
sbb
out
mov
sub
imulb
jo
pop
nop
push
popa
sbb
inc
pop
mov
les
in
popf
sti
xchg
lahf
cmp
lds
sti
lods
inc
sub
xlat
std
int3
jmp
repz
jo
shlb
push
cmp
add
add
inc
cmp
jmp
pop
scas
inc
jmp
dec
xchg
cs
pop
jg
pusha
mov
loope
cmp
mov
stc
sub
test
out
jo
dec
sbb
add
dec
mov
icebp
or
or
dec
into
inc
push
fidivrs
jge
imul
popf
cmp
imull
xlat
dec
js
cmp
fstl
sbb
push
loop
adc
sub
loop
decb
sbb
mov
sbb
out
and
sub
call
push
cmpl
lds
ds
imul
flds
push
dec
adc
mov
stos
mov
mov
mov
jb
dec
inc
std
movsl
rcll
loop
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
shlb
jo
add
aam
adcb
add
pop
push
xchg
ret
cltd
fcoml
pushf
scas
adc
jmp
push
jg
push
cwtl
mov
mov
xor
cmp
add
jecxz
sub
mov
dec
aam
pop
mov
and
adc
xchg
fists
push
loope
lods
insl
jbe
jp
enter
jg
movswl
jmp
std
mov
sti
and
test
sahf
add
or
imul
inc
cmp
pop
jg
inc
mov
and
mov
and
push
adc
mov
jns
mov
add
xor
add
lods
movsb
sbbb
inc
sbb
push
jmp
lds
out
stc
or
push
in
stos
inc
insb
ljmp
frstor
fisubrl
mov
jg
xchg
fmuls
jp
or
shl
cmc
mov
mov
sub
rcl
lahf
pushf
xchg
sbb
and
mov
inc
fdiv
adc
loop
inc
mov
pop
jb
movb
dec
rorl
xchg
pop
addr16
jb
mov
adc
movsb
inc
insl
xchg
popf
mov
mov
cltd
inc
test
sti
repz
mov
inc
inc
mov
sbb
data16
jne
ss
je
addr16
fidivs
cmp
pop
mov
xorl
clc
aaa
call
imull
mov
repz
cmp
or
mov
add
mov
jbe
sbb
mov
mov
sub
bound
xor
ja
xchg
iret
xchg
int3
les
pusha
std
fbstp
mov
lea
cmp
std
xchg
dec
bound
xchg
add
out
shll
lds
cmp
sbb
xor
and
or
jge
inc
push
dec
stc
dec
mov
out
push
fmul
mov
lret
inc
jecxz
rorb
add
sub
pushf
adc
xor
adc
adc
mov
sbb
cmovae
jge
mov
out
enter
enter
inc
in
jns
mov
test
sub
mov
ret
addr16
mov
push
jne
les
jns
pop
mov
test
add
mov
lock
loop
inc
sbb
xchg
test
ret
test
mov
or
lahf
in
leave
pop
dec
push
addb
pop
mov
mov
xchg
jmp
sub
mov
insl
in
mov
pop
sub
les
xchg
rcl
stc
dec
sbb
push
out
pop
mov
ret
cmp
pop
fs
lods
jno
rcll
fsub
repz
jnp
inc
mov
mov
adc
mov
mov
mov
mov
adc
std
inc
jp
adc
lret
xor
cmpsb
gs
lods
int
sbb
cmpb
je
test
cmpb
dec
mov
sub
out
and
push
xchg
mov
icebp
xorb
divb
mov
iret
ret
clc
shll
mov
add
sti
push
ss
xor
rcrl
cmpsl
mov
cli
pop
and
iret
inc
sbb
xor
leave
sbb
mov
pop
mov
mov
xchg
jmp
jno
xchg
andb
test
pop
xorb
flds
pop
lock
movsl
adc
push
inc
out
fsts
cltd
loopne
or
mov
mov
pushf
sahf
xchg
fwait
inc
loopne
sbb
loop
inc
mov
pop
jb
movb
add
xchg
pop
dec
rorl
pop
and
pop
and
and
fwait
cmp
fs
sub
cmpsb
fidivl
test
sub
test
cmpsb
jnp
clc
jno
jecxz
fldcw
addb
movl
lret
loopne,pn
push
negl
dec
adc
cld
call
xlat
test
cmp
fists
iret
int3
scas
hlt
mov
int
adc
mov
and
mov
sub
lods
xchg
sub
adc
inc
clc
cmpsl
sbb
dec
sbb
mov
mov
rclb
pop
lret
pop
imul
mov
prefetchnta
ljmp
mov
stos
std
cld
dec
mov
jecxz
loopne
fistl
popa
shrb
test
fidivs
test
ficoms
fwait
lods
and
scas
jg
stc
icebp
xor
inc
andl
into
rolb
dec
mov
pop
repnz
out
mov
or
in
mov
inc
insl
xchg
adc
jae
loopne
add
cmpsl
ret
mov
jmp
lret
gs
movsb
dec
sub
sbb
or
jne
mov
out
dec
cmp
fidivs
mov
cmpl
in
call
rclb
xchg
mov
xchg
jns
cld
divl
das
mov
inc
cmp
add
rcrl
dec
push
mov
out
and
repnz
into
stos
mov
jnp
inc
in
xlat
dec
sbb
mov
addr16
test
dec
mov
mov
fisttpll
test
or
cmp
sub
lods
and
imul
gs
dec
pop
mov
or
jno
pusha
mov
adc
icebp
sbb
bound
mov
or
sbb
or
lret
cwtl
sub
outsb
test
push
fsubs
xor
or
jge
mov
jmp
std
mov
sti
and
inc
scas
bound
mov
pop
mov
adc
enter
mov
add
insl
sub
ret
fwait
pop
loop
in
imul
movsl
sti
and
jns
roll
in
rol
dec
movd
mov
repnz
pop
xor
iret
inc
sub
nop
jg
repnz
aas
repnz
pop
mov
pop
stos
push
insb
fcmovne
sbb
inc
lahf
push
xchg
sub
jg
xchg
jmp
fdivl
push
repz
rcrl
test
roll
fsts
pop
packuswb
xor
pop
jo
movsl
sbb
cld
jp
add
sbb
and
pop
and
or
dec
mov
or
out
push
fmul
outsb
dec
out
or
dec
call
add
sub
pushf
xchg
test
push
xchg
adc
fs
xchg
and
mov
inc
sbb
cmovae
fsubs
xor
push
and
andl
test
lock
mov
sbbl
jle
addl
call
rclb
data16
mov
adc
movsl
add
mov
sbb
mov
cltd
inc
xor
mov
notl
add
inc
cli
cmpsl
adc
lret
mov
stc
mov
xchg
cmpb
icebp
add
inc
inc
retw
pop
mov
inc
scas
ja
add
mov
imul
movb
loope
fstl
pop
pop
rcrl
inc
cli
adc
jmp
mov
andl
sbb
push
mov
mov
fwait
jmp
loope
jp
adc
jp
mov
shrb
movsb
inc
add
pop
cltd
out
xchg
gs
jae
fcomi
call
mov
enter
int3
push
push
xchg
stos
sub
hlt
dec
adc
or
dec
sbbb
push
mov
pop
icebp
ss
lcall
into
xchg
jecxz
jnp
jge
xor
push
or
popa
mov
adc
lret
mov
inc
movsl
push
sbb
jecxz
cli
xor
jb
mov
inc
sub
mov
add
sahf
popf
in
xchg
inc
repnz
ja
aaa
ljmp
sbb
sbb
xchg
test
cmp
xchg
add
xor
xchg
int
xor
jb
loopne
or
mov
bound
sahf
xchg
fwait
push
bound
fsubl
andl
into
fs
add
mov
adc
or
in
orb
insl
xchg
adc
aaa
mov
xor
call
push
ret
lret
xor
cmc
enter
inc
pushf
hlt
mov
je
dec
nop
test
sub
cmp
ret
popl
adc
fsts
movsl
imul
mov
arpl
lds
cmp
adc
movsl
ret
cmp
outsb
insb
addl
fs
orb
mov
testb
in
popf
fmull
repnz
shrb
in
xlat
xor
in
lods
and
jne
std
inc
loop
jae
sbb
cmc
mov
rolb
loop
daa
sbb
lods
andb
imul
pop
jb
lods
jecxz
repz
jns
xchg
rorb
les
inc
pop
dec
sbb
popf
fimuls
fucomi
push
mov
jo
inc
xchg
mov
sub
xchg
xchg
cwtl
rcr
and
and
push
mov
inc
insl
xchg
les
gs
insl
cmovae
out
hlt
std
mov
sti
and
in
jecxz
mov
pop
mov
xchg
inc
data16
aad
imul
jl
fwait
pop
loop
cld
in
mov
movsl
sti
and
jns
roll
in
rol
dec
mov
repnz
pop
mov
or
sub
nop
jg
repnz
inc
sbb
push
jmp
lds
out
stc
ljmp
adc
fucom
cli
mov
cld
mov
mov
jno
inc
rorb
fmuls
lcall
adc
pop
sub
jp
add
or
lods
inc
pop
xor
xchg
cld
loop
mov
jmp
mov
andl
pop
adc
adc
rcr
mov
out
loope
fwait
xor
sbb
sub
and
xor
lods
mov
jnp
clc
jno
jecxz
mov
ror
sahf
sahf
push
or
shlb
dec
mov
lcall
lret
pop
pop
inc
shrb
xor
mov
cmp
jp
add
movsb
in
testb
lret
dec
push
leave
clc
mov
movsl
ret
insb
test
lahf
sbb
test
push
in
xor
pop
xor
mov
mov
mov
inc
dec
xchg
push
fsts
mov
pop
mov
jecxz
or
mov
aad
mov
add
dec
rcll
mov
xchg
fwait
test
fsubrl
popf
scas
jg
mov
xor
push
out
mov
mov
mov
or
lret
clc
xor
test
or
push
fisubl
push
fsubs
stos
cmp
jb
pop
mov
mov
shl
hlt
or
xchg
and
or
sub
mov
fadd
std
pop
aad
imul
mov
add
mov
movsl
sti
and
pop
lock
in
rol
dec
movl
pop
cmpsl
mov
cli
sub
inc
sbb
jbe
mov
inc
push
mov
dec
pop
xor
mov
xchg
jmp
push
aaa
jbe
imul
rcrl
test
roll
in
dec
sbb
inc
subl
leave
xchg
fwait
adc
sub
lcall
xchg
loope
dec
stc
aad
mov
jmp
lahf
adc
pusha
hlt
sbb
clc
and
mov
dec
mov
cmp
mov
fwait
xor
push
sub
and
jne
out
stc
fiadds
inc
mov
jmp
lret
das
and
mov
enter
dec
push
push
xchg
stos
fs
adc
or
mov
pop
push
mov
les
inc
mov
arpl
inc
and
jnp
jl
mov
inc
sbb
mov
inc
cmp
add
std
ss
aas
adc
mov
fs
out
in
jecxz
sbb
incl
push
test
cwtl
xor
in
loop
sbb
fisttps
lret
ja
cli
in
test
nop
sbb
dec
sbb
mov
add
lret
stos
xchg
fimull
cli
outsl
sub
pop
loopne
pop
cld
ret
cmp
dec
insb
jnp
scas
jg
leave
cwtl
std
adc
fbstp
add
inc
add
add
and
mov
dec
mov
xchg
and
and
push
mov
xchg
pop
leave
xchg
insb
mov
popa
jge
pop
in
leave
popa
inc
mov
in
xchg
enter
aam
sub
fidivl
lret
and
mov
jne
jnp
xchg
repz
ja
mull
mov
ret
loopne
mov
cli
into
clc
iret
fisttps
mov
jp
add
cmp
mov
cmpsl
push
sarb
imul
test
adc
push
sub
and
pop
dec
push
dec
push
dec
mov
pop
std
in
jmp
push
push
jl
sbb
cmp
or
stos
arpl
sarb
ljmp
fisttpl
loope
inc
mov
mov
jnp
jg
scas
loope
pusha
ljmp
mov
or
and
xor
adc
or
in
mov
jnp
inc
push
mov
repz
mov
mov
cltd
inc
pop
push
cwtl
outsl
movnti
imul
out
leave
cmpb
sbb
mov
cmp
push
xchg
xchg
jmp
cmpsb
dec
lahf
imul
fsubp
mov
dec
fisttpll
stc
shl
int3
add
dec
call
sbb
test
lahf
lds
add
mov
dec
addl
arpl
xor
dec
out
push
hlt
mov
nop
xlat
dec
sub
ret
push
bnd
loope
cmp
imul
scas
sti
aam
fidivs
loope
jb
dec
mov
sbb
sub
or
adc
xchg
fsts
addl
push
pop
xor
xchg
cld
loop
xor
jmp
mov
andl
add
inc
mov
xor
fsub
aad
xchg
adc
sub
inc
add
xchg
cltd
out
xchg
mov
xor
mov
shlb
inc
cld
divl
nop
test
sub
sub
inc
popl
adc
fsts
imul
out
mov
xor
mov
cmp
jp
add
insb
fs
push
sbbl
movsl
cltd
inc
xor
mov
testl
inc
test
push
in
dec
pop
dec
je
inc
std
pop
iret
push
lret
into
out
mov
sbb
mov
test
cmp
xchg
add
ljmp
aaa
lcall
inc
or
mov
sub
sahf
xchg
fwait
inc
out
aas
jg
adc
push
xchg
cwtl
add
adc
dec
jmp
adcl
dec
arpl
push
sub
movsl
fidivl
test
and
frstor
out
adc
jmp
and
mov
ror
pushf
cs
or
lea
fildll
dec
fnstenv
and
xor
fsubr
ja
pop
call
fucomip
hlt
cmp
fists
iret
int3
stos
hlt
movsl
ret
aaa
lods
inc
jne
adc
mov
and
mov
cmovbe
cmpsb
ret
popf
fmull
repnz
inc
stos
mov
jnp
inc
in
xlat
xor
test
xchg
mov
push
lret
into
stos
je
mov
sub
adc
sbb
jmp
das
mov
por
xchg
loopne
fistpl
cmp
scas
fidivs
test
pop
jmp
mov
out
js
mov
adc
rolb
outsb
mov
or
in
mov
jnp
inc
push
mov
mov
mov
xchg
popf
mov
mov
cltd
call
insl
popa
loop
jge
sub
push
andb
fs
add
xchg
popf
out
clc
mov
xchg
repz
add
mov
imul
in
ljmp
mov
jae
mov
cli
add
mov
orb
mov
testb
iret
lds
jno
clc
inc
add
inc
cli
cmpsl
sbb
dec
sbb
mov
cmp
rcrb
push
lret
pop
imul
mov
prefetchnta
xchg
in
inc
cmp
adc
add
cmp
stos
jecxz
or
mov
aad
mov
add
dec
jb
fs
ficoms
test
mov
xor
xor
mov
xor
adc
mov
dec
shlb
adc
mov
test
xor
cmpsl
ret
mov
jmp
popa
xchg
cmp
shlb
mov
dec
inc
mov
inc
out
mov
sub
and
add
cmp
test
cmp
mov
or
sbb
pop
sar
repz
mov
or
sbb
insl
movsl
push
cmpb
mov
inc
stos
cwtl
adc
mov
aaa
mov
or
sti
cmpsl
push
mov
sbb
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
inc
mov
pop
mov
dec
jge
dec
adc
xchg
fsts
cld
ret
cmp
inc
sbb
scas
popa
imul
sbb
loop
inc
mov
pop
jb
push
mov
in
icebp
inc
cmp
mov
dec
aam
stc
xor
loop
stc
sbb
adc
adc
xor
cmpsl
ret
mov
jmp
lret
es
mov
enter
dec
push
push
xchg
stos
outsl
sub
pop
xor
mov
pop
push
mov
clc
push
ja
lea
pop
and
mov
pop
push
dec
push
dec
mov
add
in
imul
add
fidivl
add
mov
divb
pop
lods
xchg
sub
adc
inc
in
xlat
mov
inc
and
inc
outsl
rcr
dec
pop
lret
pop
imul
mov
prefetchnta
les
dec
xor
inc
mov
inc
outsb
les
push
mov
xor
add
loopne
cmpsl
pop
push
fucomi
cmc
mov
enter
inc
mov
or
sbb
add
xchg
sub
testb
fsubs
xchg
imul
xchg
adc
sarb
inc
cmpsb
inc
test
jp
inc
mov
mov
sbbl
add
mov
mov
push
adc
adc
fptan
idivl
pop
loopne
in
mov
aad
fstl
movsl
sbb
jp
add
mov
sbb
mov
cltd
inc
out
xor
mov
xor
ror
jmp
inc
dec
and
stc
jmp
lahf
push
lock
add
mov
cld
mov
in
jno
add
xchg
dec
bound
push
dec
push
stos
loopne
xor
pop
stos
jne
vsubss
jle
mov
jp
lods
inc
pop
lcall
mov
in
mov
leave
loop
in
nop
xchg
sbb
ljmp
mov
pop
repnz
and
stos
mov
xor
adc
fs
enter
lcall
in
cmovae
fsubs
xor
push
and
addl
push
stc
dec
or
lods
sbbb
lahf
xor
fdivs
ljmp
pop
mov
ret
loopne
mov
push
cmc
lret
daa
ljmp
mov
dec
adc
add
inc
cmp
out
pushf
and
mov
xchg
fcmovnu
push
pop
ret
sbb
iret
notw
jae
test
dec
sub
push
lahf
push
sub
adc
jns
sti
sub
into
je
mov
sub
adc
lods
lret
add
jmp
stos
fnsave
out
mov
cmp
sub
xchg
cmpsl
pop
push
fucomi
cmc
mov
enter
adcl
inc
pop
sub
mov
adcl
and
or
in
mov
jnp
inc
push
mov
popf
add
sbb
sub
cmpsb
roll
cmp
dec
bound
cmpb
je
test
es
dec
dec
inc
mov
push
cmpb
lahf
xor
fdivs
ljmp
push
mov
ret
loopne
mov
push
cmc
lret
in
fucom
adc
dec
jns
mov
add
mov
inc
sbb
movsb
sbbb
aas
mov
imulb
js
insb
mov
inc
mov
stc
movsb
inc
fists
stos
add
in
mov
cld
mov
aad
jae
add
test
sub
xor
push
stos
push
stos
rcrb
jne
vsubss
jmp
ja
lods
loopne
and
jmp
popf
movsl
dec
out
bnd
lods
das
fbstp
adc
sbb
sbb
andl
inc
aam
shll
loope
fwait
xor
aam
sub
movsl
fidivl
test
sub
cltd
lods
mov
jnp
clc
jno
jecxz
cltd
push
add
sahf
dec
push
or
lea
dec
dec
mov
lcall
adc
sar
iret
cmpl
iret
sbb
xorb
enter
jp
add
movl
sbb
lds
dec
aad
aad
icebp
scas
inc
insb
dec
and
mov
test
adc
push
cmc
fisttpl
dec
aaa
in
je
sahf
das
xchg
stc
cli
in
test
nop
sbb
mov
adc
test
sub
lret
stos
xchg
fimull
cli
outsl
sub
into
lods
fmulp
ds
push
dec
in
aad
mov
jmp
lahf
adc
pusha
lock
sbb
js
or
inc
add
and
mov
and
inc
pusha
dec
and
sbb
mov
loopne
inc
and
cmpsb
pop
repz
in
cwtl
scas
cltd
dec
outsb
mov
add
lcall
or
sub
mov
mov
push
adc
sbb
fxch
idivl
pop
loopne
call
pop
mov
test
and
mov
lock
loop
inc
sbb
xchg
test
ret
test
mov
or
lock
pop
dec
push
cmp
test
and
inc
ja
rorb
lret
pop
imul
mov
prefetchnta
insb
in
dec
cmp
dec
xor
fcmovne
xchg
fwait
adc
loopne
fistl
fst
push
xor
xchg
cltd
ret
in
icebp
sbb
and
test
adc
pop
mov
adc
dec
mov
xchg
xchg
inc
push
mov
xchg
sbb
jle
xchg
push
pop
and
insl
push
inc
push
dec
mov
psubw
call
cltd
push
bound
insl
mov
je
sub
imul
lea
mov
ret
addr16
mov
push
jne
les
cmp
jp
pop
mov
in
ljmp
mov
jae
mov
xor
inc
inc
sbb
sahf
test
ret
test
ret
popf
fmull
repnz
fldcw
inc
in
xlat
dec
push
lret
sbb
mov
xchg
fmuls
lret
pop
imul
mov
prefetchnta
shl
inc
dec
popa
xchg
or
cmp
fcmovne
xchg
fwait
adc
loopne
cmp
or
jne
cltd
fmull
jnp
dec
push
mov
mov
jnp
loop
in
nop
xchg
sbb
mov
loop
add
dec
mov
pop
repnz
and
push
in
sbbl
mov
mov
mov
cltd
inc
insb
mov
mov
loopne
bound
cmpb
out
out
xlat
jns
dec
inc
mov
sbb
out
mov
mov
lcall
adc
std
mov
jns
into
push
jg
lahf
hlt
movsl
ret
aaa
lods
dec
mov
movsl
sbbl
inc
sbb
leave
clc
test
movsl
ret
insb
test
push
sbb
test
push
in
dec
pop
dec
aaa
in
je
sahf
das
xchg
stc
cli
in
test
mov
xlat
cmp
inc
sbb
or
stos
arpl
rorb
cmp
pop
jno
push
lahf
xchg
pop
inc
xor
xor
jnp
jg
scas
loope
pusha
clc
sti
and
pop
adc
inc
mov
fdivs
sub
or
cwtl
sub
mov
push
xchg
imul
adc
repnz
pop
pop
and
dec
pusha
test
pop
mov
mov
shlb
enter
inc
sbb
mov
je
cmp
dec
shlb
mov
fsubp
js
push
mov
shr
xor
pop
pop
lret
mov
xor
push
add
mov
push
andl
imul
xor
dec
out
movsl
call
mov
movsb
fidivrl
dec
and
jns
popf
inc
out
jae
sbb
in
repz
or
xchg
adc
xor
cmp
les
fistl
cltd
xchg
jb
sub
imul
popf
scas
jg
stc
icebp
xor
icebp
inc
fwait
sub
jecxz
rorb
add
sub
mov
push
xchg
adc
shlb
movsb
inc
add
ljmp
cltd
mov
mov
mov
cwtl
push
add
jae
rorb
jmp
adc
sub
js
test
or
pop
jg
xchg
sub
lea
pop
and
mov
pop
push
dec
push
dec
stc
jecxz
mov
imul
add
fidivl
add
mov
divb
adc
mov
nop
push
lcall
xlat
leave
mov
mov
mov
lcall
stos
dec
dec
lret
lds
mov
add
addb
stos
pop
lock
dec
sahf
push
fistl
mov
cltd
shrl
inc
mov
mov
sahf
xchg
fwait
inc
enter
movsb
leave
loopne
loop
inc
mov
pop
jb
movb
sub
push
sti
and
mov
out
loope
fwait
cmp
rclb
mov
xchg
sub
test
cmpsb
jnp
clc
jno
jecxz
cmp
subb
outsl
add
xchg
lds
loopne
push
negl
dec
adc
sbb
or
imul
jecxz
popl
mov
clc
add
mov
testb
jp
sub
loope
pop
adc
cmp
xchg
jo
jecxz
dec
sbbb
jne
clc
cli
push
xacquire
pop
xor
fisttps
lret
arpl
fnsave
push
repz
ljmp
inc
cmp
test
xchg
adc
xor
push
outsl
les
fistl
cltd
xchg
int
push
xor
xlat
or
scas
aaa
mov
cli
jnp
inc
mov
add
inc
rorb
add
cwtl
sar
sub
sub
adc
movsb
pop
jae
xchg
dec
aad
pop
rcll
fsubs
lahf
pop
sbb
sub
mov
in
xchg
enter
aam
sub
lret
cs
cld
addr16
jne
jnp
xchg
repz
pop
dec
push
pusha
sbb
adc
and
pop
mov
repz
cmp
mov
xlat
stos
pop
add
std
jbe
pop
adc
mov
fs
out
mov
dec
sbb
mov
popf
lods
leave
test
sub
arpl
scas
xor
ljmp
cmpb
imul
dec
scas
sahf
xchg
out
pop
mov
ret
xor
pop
js
enter
cmpsl
pop
push
fucomi
cmc
mov
pushf
repnz
sub
mov
jo
sbb
mov
adc
aam
out
mov
mov
mov
test
in
xchg
jmp
ret
xchg
and
cmpsb
out
jae
cmp
fnsave
inc
mov
push
hlt
inc
jo
inc
mov
mov
xchg
jmp
cmpsb
dec
push
imul
fsubp
cmpl
repz
dec
call
cmp
test
cmp
push
add
mov
or
jns
incb
push
aas
adc
insl
movsl
sbb
mov
xchg
sub
adc
xlat
idivb
and
pop
dec
push
dec
push
dec
mov
pop
std
in
jmp
push
or
test
stos
or
xchg
lcall
lret
out
mov
pop
jno
push
outsl
xchg
adc
xor
scas
std
fabs
cmp
xchg
out
js
mov
adc
rorb
sbb
mov
sbb
pop
xor
adc
and
mov
and
mov
xchg
in
cmovae
fsubs
xor
push
and
addl
push
push
or
mov
or
out
loope
dec
es
mov
lcall
loope
ljmp
dec
xor
mov
cmp
jp
add
negb
sbb
leave
inc
sbb
leave
clc
mov
movsl
ret
insb
test
ror
in
xchg
fwait
inc
lret
push
lret
xchg
mov
lcall
mov
fbstp
pop
or
inc
or
test
insl
inc
outsb
shrb
mov
xor
add
add
sub
scas
mov
lahf
jecxz
enter
adc
inc
call
adcb
and
cmp
sbb
mov
in
mov
mov
push
inc
sbb
cmpsb
mov
mov
mov
addr16
bound
cmpb
je
test
in
dec
iret
dec
inc
mov
cltd
sahf
push
xor
lea
cmp
pop
jg
adc
pop
and
mov
dec
push
dec
stc
out
sti
mov
imul
cmovbe
mov
add
lods
mov
sbb
loop
and
ja
xchg
pop
iret
xchg
insb
push
scas
mov
sti
fisubl
fisttps
lret
xchg
add
xchg
sbb
add
cwtl
stos
fsts
xchg
fisttpl
sahf
adc
add
ret
adc
pop
fs
lods
loopne
cmpsl
push
xchg
jmp
push
enter
inc
shlb
or
sbb
or
lret
cwtl
or
test
or
mov
mov
xchg
sbb
inc
mov
cltd
inc
jle
cmp
bound
cmpb
out
xchg
dec
mov
lods
lea
out
and
push
xchg
mov
pop
loopne
into
xchg
xchg
xor
into
sbb
mov
lock
cmp
outsb
jl
mov
or
add
leave
lds
dec
push
hlt
mov
sub
and
test
push
lcall
inc
push
rcrb
sbb
punpckhwd
mov
fimull
sbb
shrb
imul
arpl
xchg
or
sbb
pop
jno
push
jle
cwtl
fstl
pop
rclb
mov
scas
std
fabs
cmp
jno
jnp
inc
mov
add
inc
mov
test
jb
addr16
adc
flds
xchg
mov
mov
mov
and
movsl
pop
mov
fcoml
or
sub
mov
hlt
js
orb
int3
scas
jecxz
and
mov
push
adc
or
fadd
idivl
pop
loopne
mov
shll
jp
aas
in
mov
clc
outsl
cltd
mov
pop
sub
mov
adc
mov
sahf
adc
dec
cltd
nop
and
leave
rcrb
mov
movsb
fisubl
stos
inc
push
mov
fbld
cmpsb
dec
sbb
punpckhwd
mov
sbb
sbb
cs
dec
sub
mov
dec
imul
fistl
cltd
xchg
loope
push
xor
ficoms
xor
icebp
xor
jb
mov
xor
adc
mov
push
sarl
xchg
cmc
mov
push
imul
mov
fdivs
lahf
xlat
mov
fsubl
repz
mov
inc
inc
mov
ret
add
xchg
push
hlt
dec
xor
push
negl
dec
adc
mov
call
fucomip
hlt
cmp
fists
iret
int3
lret
aaa
out
lock
sbb
aaa
mov
inc
sub
movsl
and
popf
in
mov
lock
mov
cltd
push
mov
sub
cmp
sub
cmc
sbb
aas
dec
into
xchg
frstor
fisubl
or
mov
push
sbb
in
inc
movsl
or
or
rcl
cwtl
pushf
xchg
sbb
incb
mov
xor
scas
mov
lahf
jecxz
enter
adc
inc
enter
loope
xchg
adc
mov
jmp
sbb
mov
adc
add
adc
lret
xor
cmpsb
roll
mov
mov
pusha
andb
cmpb
je
inc
fst
lock
sbb
push
or
mov
cmc
clc
pop
mov
jmp
gs
filds
aam
cmc
fistl
dec
mov
mov
clc
sti
pop
es
rcr
repz
mov
pop
sbb
add
mov
and
rcrb
cli
push
xor
inc
push
mov
add
cli
cli
mov
cmpsl
lods
push
clc
mov
fidivl
xor
push
cmp
ret
add
sbb
mov
dec
outsb
les
push
mov
xor
add
add
jno
pusha
mov
fldt
icebp
sbb
pop
sahf
fwait
mov
repnz
in
xor
push
sti
and
mov
out
loope
fwait
xor
push
sub
and
sub
mov
cmpsb
jnp
clc
jno
jecxz
sbb
add
orb
test
aad
dec
lea
out
pop
fnstenv
adc
adc
std
call
test
cmp
fists
iret
int3
inc
hlt
mov
mov
inc
and
adc
mov
mov
sbb
leave
cmp
cld
insb
test
lret
inc
std
xlat
cmp
inc
and
inc
ja
pop
dec
push
lret
pop
imul
mov
prefetchnta
out
in
dec
xor
mov
mov
xchg
fwait
adc
or
daa
push
mov
mov
add
icebp
xchg
jp
ficoms
rorb
adc
pusha
lock
and
adc
inc
mov
fdivs
sub
adc
cmp
inc
inc
cwtl
inc
stos
add
movsb
fs
add
mov
and
es
repz
int3
xlat
xchg
mov
out
cli
hlt
mov
daa
sub
mov
push
dec
mov
or
dec
mov
repz
mov
imul
fldt
mov
repz
cmp
loope
mov
ret
mov
adc
lret
inc
sbb
movsl
or
std
sbb
iret
push
negl
sbb
test
dec
sub
push
lahf
push
lret
divl
lret
cmp
dec
sbb
in
push
cmp
sbb
cmp
sbb
or
stos
arpl
rcrb
data16
push
jbe
sub
jno
lds
jge
pop
xor
mov
mov
jecxz
loop
in
nop
xchg
sbb
mov
loop
add
dec
mov
pop
repnz
out
mov
add
dec
adc
inc
insl
xchg
adc
in
cmpsb
enter
lcall
out
push
ret
mov
dec
dec
or
cmc
cmc
mov
xchg
xchg
fwait
cmp
cmp
das
in
jmp
gs
filds
aam
neg
adc
dec
fistl
loope
in
mov
clc
sti
pop
es
rcr
repz
fadds
pop
sub
mov
mov
and
mov
inc
stos
pushf
adc
mov
pop
add
jne
sahf
les
inc
mov
test
sti
mov
shll
sbb
shrb
xchg
mov
scas
testl
rorl
insb
stos
orl
pop
xor
fwait
cmp
lahf
adc
pusha
repnz
mov
push
addl
or
cmp
arpl
inc
stos
sbb
fisubl
xchg
imul
sub
pop
into
clc
xor
lea
hlt
js
orb
and
sahf
sub
in
xlat
adc
int
ja
xor
mov
call
push
sahf
rorl
push
dec
sbb
sti
mov
imul
add
fidivl
add
mov
divb
adc
mov
nop
push
lcall
out
stc
jp
mov
ss
fucom
cli
test
cld
mov
aaa
ljmp
push
jl
ret
add
sbb
lcall
adc
loopne
cmp
add
jle
mov
push
lods
inc
pop
lcall
mov
mov
repz
loop
in
nop
xchg
sbb
or
lcall
lea
mov
repz
xchg
mov
insl
xchg
adc
sub
call
push
ret
lret
and
sbb
mov
jecxz
and
push
adc
enter
mov
add
insl
sub
ret
out
or
les
jg
ret
arpl
inc
aad
stc
pop
push
iret
sbb
mov
cltd
xor
std
imul
xor
fsubl
pmuludq
bound
adc
adc
inc
and
pop
jbe
mov
lahf
popf
ds
rcrb
pop
frstor
fisubrl
add
stc
inc
mov
das
or
xchg
ficoml
cs
stos
jge
imul
jecxz
fwait
cmpsb
enter
pusha
jle
lods
pop
icebp
leave
outsb
mov
fisttpl
clc
jle
add
sbb
xor
test
cmpsb
mov
xor
rol
xor
adc
adc
sub
mov
jae
call
push
ret
lret
aaa
and
mov
enter
mov
xchg
stos
in
push
adc
enter
mov
add
insl
sub
ret
incl
sahf
ret
mov
pop
test
cmp
mov
or
lret
sahf
repz
fadds
pop
sub
mov
data16
mov
mov
inc
stos
pushf
adc
mov
inc
add
rorb
lret
cwtl
stos
fildll
stc
mov
cs
pop
fisttpll
test
or
push
into
lods
sahf
adc
lcall
xchg
loopne
out
mov
pop
jno
push
jns
pop
fstl
pop
enter
lahf
scas
std
fabs
cmp
mov
orl
fdivs
sub
and
in
xchg
and
movsl
inc
push
mov
xchg
sbb
and
xchg
push
pop
and
jnp
enter
montmul
cmpsb
inc
test
inc
mov
or
and
addl
mov
dec
mov
ret
out
mov
push
jne
les
jmp
mov
jecxz
popl
lahf
dec
lahf
lds
add
mov
mov
or
rolb
sahf
test
ret
test
nop
fs
cmp
jg
shll
fisubl
movsb
jmp
pop
fucomp
je
push
lret
rcr
test
cmp
and
or
cld
jo
and
jp
rorl
xchg
out
sbb
add
cmp
ja
lods
loopne
and
jmp
popf
movsl
dec
loop
bnd
lods
das
fbstp
sub
pop
mull
mov
dec
mov
ljmp
xor
adc
sarb
movsb
inc
add
ljmp
fnstcw
mov
mov
cwtl
push
subb
sub
hlt
mov
daa
sub
mov
push
dec
mov
ret
ret
addb
pop
loopne
call
in
imul
inc
out
repz
cmp
movsl
ret
ret
out
into
and
mov
test
or
jge
or
cli
pop
dec
sbb
xlat
or
mov
jge
leave
test
outsl
cli
mov
cmp
xor
xchg
cwtl
nop
sbb
mov
inc
outsb
cmpsb
stos
pop
lock
dec
sahf
aad
xchg
fimull
insb
xor
shrl
test
scas
mov
lahf
jecxz
enter
inc
shlb
or
sbb
or
lret
cwtl
adc
outsb
test
mov
mov
xchg
sbb
inc
mov
cltd
inc
push
mov
lods
int
call
mov
cmc
lea
xchg
xchg
fwait
and
cmp
das
in
cmc
mov
sbb
xchg
mov
cmp
and
mov
test
lock
daa
in
in
mov
lock
loop
inc
sbb
xchg
test
ret
test
decl
iret
outsb
xor
sarl
test
gs
push
sub
and
inc
pusha
divb
sbb
dec
xchg
shl
in
sbb
sbb
and
or
stos
arpl
scas
cwtl
xor
mov
add
imul
shlb
jg
pop
xchg
cld
loop
dec
jg
adc
ja
adc
sbb
cwtl
add
push
mov
fwait
jmp
loope
jp
imul
push
jns
enter
cmpsb
fistl
mov
ret
insl
push
andb
cmp
or
cmp
xchg
sub
pushfw
push
mov
fsubp
mov
cmc
and
push
mov
imul
jecxz
popl
jle
lahf
lds
add
mov
adcl
sahf
test
ret
test
nop
daa
decl
sarb
mov
movsb
fisubl
movsb
jmp
stos
fucomp
je
push
lret
rcr
test
jg
push
cmp
and
or
test
push
stos
stos
rorl
xchg
fistl
fimull
add
cli
sbbl
push
imul
shlb
lret
xor
jnp
jg
scas
loope
pusha
loopne
and
adc
inc
mov
fdivs
sub
sbb
shlb
sbb
pop
xor
dec
imulb
and
xchg
das
pop
fsubl
cmp
fnsave
sub
je
or
and
mov
dec
dec
mov
in
lea
ret
cs
dec
fnstenv
and
xor
mov
or
mov
jno
mov
repz
pop
and
addb
mov
mov
mov
cwtl
or
xchg
loop
clc
or
lahf
inc
stc
cmpsl
adc
lret
mov
inc
fnstenv
popf
lret
mov
sub
test
inc
scas
ja
add
or
and
lods
jle
mov
aad
xor
xor
fwait
cmp
lahf
adc
pusha
loopne
add
inc
rorb
rorb
mov
mov
and
dec
or
xor
adc
fs
add
xor
inc
and
movsl
pop
repz
dec
xlat
xchg
mov
out
gs
mov
daa
sub
mov
push
dec
mov
int
or
outsl
stos
shrl
mov
mov
fdivl
lret
push
adc
mov
jns
mov
add
xor
add
lods
movsb
sbbb
aas
push
icebp
mov
cmpl
mov
inc
mov
lds
mov
push
mov
cmpsl
pop
push
clc
mov
fidivl
mov
jae
inc
push
cmp
and
or
test
stos
stos
rorl
xchg
out
leave
dec
jbe
jb
lods
rcrl
fisubrl
jns
inc
push
pushf
shr
adc
out
or
scas
loope
pusha
loopne
and
cmp
or
and
xor
adc
decl
cmp
faddp
sbb
and
and
movsl
in
and
cmp
clc
jb
pop
mov
mov
shlb
or
xchg
and
or
sub
mov
rol
cwtl
or
repz
in
sti
int
pop
lret
std
mov
loopne
lcall
iret
xchg
or
dec
mov
sbbb
cltd
subb
test
lcall
mov
sbbl
dec
sbb
xlat
or
lods
shrl
leave
test
imul
popf
mov
mov
mov
or
bound
sbb
stos
addb
test
popa
push
outsb
stos
push
fnsave
stos
push
mov
xor
jecxz
fwait
pushf
imul
lret
mov
cmpsl
xorb
in
and
inc
or
pop
mov
rcll
xchg
pop
addr16
jb
mov
sub
push
fsubs
and
std
bound
outsl
movnti
imul
out
leave
sbbb
sbb
es
push
mov
es
aad
dec
lea
aam
in
dec
fnstenv
stos
shl
pop
and
cmp
cld
divb
popa
or
jg
iret
ret
clc
jmp
pop
mov
repz
pop
and
addb
mov
adc
and
insl
movsl
mov
cwtl
or
fst
lret
mov
xor
and
jne
lds
pop
inc
cmc
sbb
mov
out
xchg
frstor
fisubl
or
xor
push
sbb
push
xchg
or
xor
inc
lcall
pusha
cmp
shl
adc
ret
scas
cs
icebp
leave
es
sbb
xchg
fisttpl
clc
jle
add
arpl
rclb
rcrl
xchg
xchg
cwtl
shll
add
jmp
adc
mov
and
mov
out
sti
xor
fsubl
cmp
mov
out
adc
dec
pop
push
sub
mov
fsubr
push
and
repnz
loopne
sbbl
neg
pop
dec
cmp
movsl
sbb
jp
add
xchg
push
lock
pop
xor
or
sub
nop
jg
repnz
aas
push
icebp
imulb
js
sub
and
stc
adc
fists
stos
add
mov
cld
mov
sbb
xchg
mov
dec
bound
push
inc
lcall
cld
stos
xchg
stos
jge
jns
adc
push
bound
test
pop
and
or
stc
jp
popf
fimuls
sti
out
push
rolb
loopne
sbb
mov
mov
adc
dec
and
inc
or
das
cmpsb
enter
leave
xchg
dec
pop
cmpsl
sti
ljmp
movnti
lock
push
add
and
sub
inc
or
mov
fsubp
lea
mov
shr
xor
pop
lock
lcall
mov
mov
cmp
jbe
mov
xor
adc
insl
movsl
clc
out
push
divb
nop
xlat
dec
sub
and
test
lahf
jno
sbb
mov
test
xor
mov
mov
mov
inc
dec
retw
pop
jae
inc
scas
ja
inc
xchg
jl
rorl
xchg
add
jp
add
pop
mov
lods
inc
sbb
scas
popa
addl
sbb
int
jo
mov
pop
jb
add
adc
insb
ja
and
fs
dec
aam
inc
fbstp
cmp
inc
out
or
and
into
clc
xor
popf
jb
xchg
add
sbb
daa
loopne
ljmp
cwtl
int
imul
jle
push
jp
dec
loopne
call
pop
mov
test
sbb
in
aas
ja
dec
lock
inc
sbb
pop
or
iret
mov
sbb
push
int
inc
sbb
loope
pop
gs
sub
adc
test
repnz
fiaddl
fxch
pop
mov
out
jae
fisttpl
mov
inc
fs
daa
icebp
add
push
cmp
ret
add
sbb
leave
or
inc
sub
fistl
jb
mov
pop
test
sbb
push
cli
int3
ss
pop
adc
push
std
pop
add
add
mov
in
ja
or
in
mov
jnp
inc
push
mov
or
dec
push
sub
movl
enter
jle
out
enter
mov
lea
pop
jb
dec
mov
arpl
mov
sbb
add
push
mov
jns
ss
jp
mov
mov
cmp
roll
enter
mov
ret
out
sbb
imul
test
fiaddl
test
test
xchg
jne
lahf
mov
mov
arpl
lock
aad
test
sbb
fcmovne
rorb
mov
aaa
div
jns
jae
into
lods
hlt
icebp
pop
cmp
enter
push
and
push
outsb
loope
lds
enter
and
jb
add
mov
fwait
push
dec
mov
xor
mov
jnp
inc
push
mov
xchg
sbb
dec
add
mov
jmp
std
mov
sti
and
push
leave
dec
inc
and
sub
cmp
call
mov
into
loopne
in
xor
pushf
divb
mov
lds
cmp
icebp
aaa
gs
xchg
enter
and
das
dec
sbb
add
insl
cwtl
ret
gs
push
lods
xchg
sub
adc
push
test
test
inc
pusha
pop
dec
push
dec
shrl
mov
lods
dec
inc
in
fs
pop
repz
adc
add
cmp
adc
lcall
enter
mov
imul
lcall
jge
pop
xor
fwait
out
jl
stos
int
and
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
xor
mov
int
cmp
push
aas
fwait
lret
in
mov
mov
xchg
cltd
out
js
mov
fdiv
addl
and
sub
cltd
adc
sbb
xchg
mov
cmp
and
mov
test
fwait
lahf
in
stc
add
loope
es
sub
sbb
test
lcall
dec
xor
jmp
pop
icebp
imulb
jno
stos
mov
loop
gs
adc
xchg
repnz
inc
inc
fildll
inc
push
sbb
jno
add
sub
inc
shlb
sbb
or
test
fwait
xor
xchg
int
xor
jb
fcoml
mov
push
lret
ret
mov
mov
xlat
outsb
bnd
popf
push
fiaddl
in
pop
dec
sti
jae
adc
lret
or
fwait
push
dec
mov
xor
mov
and
push
aas
fwait
lret
in
mov
mov
xchg
cltd
out
cmp
mov
pusha
insl
push
andb
cmp
or
cmp
xchg
sub
fsubr
mov
rolb
adc
lds
cmp
and
mov
test
fwait
lahf
in
mov
or
lods
es
sub
sbb
test
lcall
lahf
sub
cmpb
adc
inc
in
xlat
mov
fldenv
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
lods
mov
mov
arpl
movsl
sub
sbb
sbb
sbb
ret
xchg
mov
leave
lock
mov
test
mov
inc
cwtl
dec
and
sbb
sub
jnp
mov
js
call
iret
adc
ret
and
jo
not
fisttpll
sbb
mov
sub
and
lea
push
pop
pop
push
test
movsl
repz
and
lds
add
mov
cmp
jp
add
mov
dec
jecxz
cmp
imul
lods
insb
dec
mov
nop
xlat
arpl
fbstp
xor
dec
push
mov
fildll
movsl
int
pop
add
imul
inc
inc
jbe
pop
xchg
dec
inc
mov
pop
adc
mov
push
popa
dec
leave
test
adc
jle
les
lret
leave
scas
dec
xchg
jp
and
jmp
pop
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
subb
sahf
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
scas
clc
xor
cmpb
je
test
push
movsb
mov
aad
push
inc
test
mov
jno
popf
sti
push
add
lods
adc
dec
push
adc
mov
push
in
lock
popa
shrl
push
cmp
push
cmpb
mov
cmp
xor
sbb
loopne
mov
je
mov
push
xlat
imul
lods
mov
push
pop
call
imul
fsub
jbe
lods
push
outsl
sbbl
pushf
mov
out
fxch
loope
ror
ret
rcrl
fwait
lods
jle
dec
xor
pop
rcll
inc
pop
xor
cmp
repnz
fimull
cmp
xor
pusha
cmp
das
rorl
adc
sub
add
cmc
test
xchg
loopne
push
mov
lret
cmc
shrl
jbe
jp
fisubrs
ljmp
popa
push
jecxz
xorl
add
stc
mov
and
inc
push
inc
cmp
ret
mov
dec
in
pop
and
fmull
pop
outsl
cs
xor
add
ret
les
push
add
dec
cmpsl
cmp
sbb
aas
ja
int
push
inc
inc
add
mov
jne
gs
cwtl
ret
cmpsb
ljmp
and
and
sti
sbb
pop
jne
push
sahf
loope
lret
xor
jmp
mov
and
cmp
imul
or
xor
mov
jnp
push
xchg
jle
jmp
cmp
fcmovu
enter
jmp
cltd
movsb
fidivs
pop
aad
mov
push
movl
xchg
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
popf
or
hlt
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
adc
xor
ret
xorb
dec
push
adc
inc
mov
orb
push
inc
jg
xor
or
out
inc
sbbl
cmpsl
dec
or
xchg
mov
insb
sub
push
mov
mov
xchg
push
das
jno
xchg
add
pushl
sbb
sub
or
mov
arpl
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
adc
dec
movsb
aad
xor
xor
mov
bound
push
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
or
push
push
mov
push
xchg
dec
mov
push
lods
shrb
loope
call
fbstp
xor
mov
xor
enter
pop
int3
aaa
adc
psraw
push
push
adc
ret
test
pop
dec
dec
call
clc
test
adc
mov
hlt
xor
adc
ret
ficomps
mov
sub
roll
add
lcall
inc
mov
dec
push
jg
adc
test
push
jnp
pushf
dec
sbb
popf
dec
xlat
out
icebp
stc
sbb
pop
pop
xchg
iret
loope
pop
ret
adcl
cs
jl
xor
je
outsb
cmpsb
adc
dec
movsb
lcall
aam
push
iret
push
lret
ret
mov
xchg
jge
dec
push
jmp
jae
insb
repnz
mov
scas
adc
adc
pop
int
or
pop
pop
je
sbb
pop
push
inc
out
sub
xchg
inc
add
test
int3
inc
rcrb
js
mov
addr16
mov
cwtl
stc
add
mov
out
ret
xchg
cwtl
mov
xchg
mov
ffree
push
pop
push
xchg
sti
mov
fildl
ret
arpl
in
xor
mov
cmp
jp
add
mov
dec
jecxz
imul
cmpsl
ret
test
dec
mov
jl
mov
nop
xlat
arpl
fcomip
sbb
push
mov
dec
ljmp
and
call
repnz
cmpsb
sub
sub
add
push
adc
bound
outsl
nop
sub
je
sub
sub
pop
enter
lods
mov
outsl
lea
push
and
and
xchg
xchg
inc
jmp
cmp
das
push
roll
fsubrl
xchg
imul
mov
arpl
scas
xchg
dec
mov
ja
stos
dec
lods
inc
mov
inc
cmpsb
ret
flds
sbb
cmpsb
inc
inc
add
out
ret
cmp
hlt
xor
inc
push
ror
dec
lock
out
mov
std
adc
xlat
jge
clc
and
xchg
adc
sub
pop
adc
pop
inc
mov
mov
jp
iret
or
push
jl
outsb
scas
sbb
sbb
int3
cwtl
stos
add
leave
jo
paddd
pop
icebp
roll
lret
push
and
inc
push
into
sub
cmc
cli
and
aam
fisttps
cmp
ret
mov
in
mov
daa
mov
cli
and
mov
test
outsl
sub
test
add
sub
fstpt
loopne
adc
dec
mov
lds
adc
pop
dec
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
out
fsubs
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
aam
stos
dec
sbb
adc
into
test
and
ds
add
and
fists
add
lcall
popa
mov
mov
sti
add
je
mov
xor
dec
sbb
sub
es
aaa
stos
push
insb
sarl
adc
test
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
cmpsb
lds
imul
and
popa
xchg
into
and
das
scas
repz
in
test
pop
mov
sub
movswl
outsb
jno
sbb
sbb
ret
xchg
jg
sbb
cmpb
cmpsb
loopne
mov
outsl
arpl
cli
pop
xor
lret
scas
ljmp
push
loop
sbb
add
repnz
mov
xchg
mov
lock
xor
xor
daa
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
lds
mov
pop
jb
mov
iret
add
test
jns
push
xchg
xor
leave
add
mov
or
cmp
cmpsl
mov
arpl
lcall
push
mov
scas
shl
jae
pushf
pop
pop
pop
loope
std
lahf
and
adc
inc
cmp
fwait
push
sahf
jno
jecxz
fsubrs
ret
loop
cmp
addb
andl
hlt
cltd
pop
add
dec
loop
dec
push
mov
fcoml
dec
cltd
lods
je
int3
test
iret
mov
out
mov
lock
jle
dec
mov
loopne
push
repz
cmpb
int3
mov
idivl
outsl
outsl
and
lahf
xor
sub
in
sti
jnp
out
scas
mov
pop
fisttpll
mov
outsb
out
lahf
stc
cwtl
shll
or
add
insb
adc
fs
insb
mov
outsl
stos
sbb
cmpsb
ja
test
shlb
filds
movsl
push
mov
out
mov
clc
sti
jne
jp
mov
addb
jbe
push
aaa
scas
stc
aaa
sbb
insb
jne
inc
xor
imul
inc
ret
add
jnp
mov
es
test
sahf
cmpsl
mov
adc
enter
cmc
movsl
testb
in
aam
dec
mov
adc
lret
dec
sbb
adc
push
stos
fnsave
lds
ret
adc
mov
scas
adcb
mov
xor
cmc
xor
cmp
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
ljmp
repz
out
sarl
out
push
test
xchg
add
or
mov
sub
sbb
push
inc
roll
sbb
mov
cmp
push
addr16
or
and
cmp
sbb
sbb
xor
mov
daa
inc
lods
dec
jmp
decb
aad
aad
xchg
mov
leave
pushf
dec
and
adc
and
cmp
xor
into
ffreep
pop
xchg
pop
int3
inc
dec
popf
lret
fildl
cmp
inc
mov
mov
movsb
xchg
sub
pop
lcall
ss
mov
aas
stos
shrb
sub
btr
outsl
mov
mov
adc
sub
mov
shrb
mov
mov
aas
adc
loope
sti
jnp
or
cmpsl
sub
ljmp
xchg
xor
adc
cmpl
push
mov
aaa
xchg
fstpl
pop
xor
cmc
xchg
fcomps
mov
inc
movsl
adc
aaa
call
xor
adc
repz
fists
addb
rcrb
hlt
das
lock
mov
sbb
inc
push
pushf
cmpb
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
mov
shll
adc
adc
xchg
jnp
imul
outsb
lret
jbe
lahf
and
push
dec
call
xor
aas
scas
scas
data16
cmpsb
fucomi
repnz
mov
jecxz
cmpl
push
roll
bound
gs
jecxz
mov
in
dec
scas
repnz
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
and
jle
test
js
sbb
mov
in
dec
popa
pop
adc
mov
pop
adc
call
cmp
pushl
ficompl
popa
xchg
push
sbb
lods
stos
sbb
outsl
in
lods
add
fldcw
dec
lods
data16
sbb
jns
adc
call
mov
mov
fwait
test
mov
pop
in
mov
pop
in
jmp
push
xor
hlt
inc
mov
mov
mov
mov
fucompp
xchg
outsl
or
std
xor
adc
hlt
jle
jp
add
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
outsb
cwtl
add
and
mov
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
dec
dec
rcrb
jmp
lds
jmp
or
lret
roll
add
and
test
arpl
ss
loopne
lahf
cmpb
int3
push
xor
or
inc
xchg
mov
sarl
xchg
roll
mov
insl
lcall
push
out
fdivp
dec
xorb
sub
mov
push
fcoml
push
test
mov
lahf
cmp
pop
dec
sbb
add
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
lods
xchg
pop
test
lret
cmp
clc
add
rorl
scas
jbe
cltd
imul
test
scas
testb
call
aas
xor
push
jae
fidivrs
sahf
sub
adc
jg
pushf
mov
adc
aas
orb
adc
add
pop
movsl
addr16
sub
sub
add
addr16
adc
lea
adc
and
mov
ret
pop
inc
pusha
lods
in
xor
add
shlb
inc
test
dec
jecxz
sbbl
hlt
mov
mov
rcl
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
inc
sbb
jae
mov
mov
cmp
cmpsl
test
popf
imul
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
icebp
or
outsb
ds
je
xor
mov
call
mov
fsubl
jne
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
pop
mov
mov
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
leave
jl
adc
mov
mov
add
daa
insb
xor
mov
cmpsb
ret
xchg
xchg
push
xchg
ret
push
inc
push
mov
pop
or
cmc
cli
sbb
test
lret
sub
mov
lods
lret
dec
orl
sub
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
int3
scas
std
stc
inc
repz
lret
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
bound
fisttpll
ja
jecxz
xor
lret
xchg
jae
lods
fidivrs
push
sbb
dec
sub
mov
lock
mov
dec
push
cli
or
call
or
int
push
dec
add
or
cmc
and
mov
inc
out
mov
mov
fsts
inc
pop
cli
add
inc
mov
lds
and
mov
fidivs
fs
sub
cmc
sbb
mov
push
adc
push
jmp
lds
sbb
insb
or
out
cs
out
mov
mull
inc
pop
lcall
das
mov
in
mov
push
sub
int3
xor
repz
cmp
xchg
sbb
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
lock
mov
or
lahf
cltd
pop
adc
stos
clc
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
sub
push
sub
push
out
push
cmp
roll
aam
push
sti
cmpl
mov
das
inc
scas
dec
imul
test
movsl
sub
loopne
lret
inc
dec
push
adc
dec
xor
xor
div
call
nop
inc
cltd
mov
jl
sbb
xchg
add
and
inc
mov
scas
push
and
sub
es
adc
test
movsb
aaa
xchg
popa
cmp
pop
insb
out
mov
scas
pop
out
ret
cld
jae
js
in
rorl
mov
mov
push
mov
shlb
xchg
sarb
addr16
mov
aaa
adc
icebp
in
jns
mov
or
and
sub
inc
test
push
lock
sbb
rclb
adcl
push
in
daa
lahf
pop
movsl
ficomps
stc
xchg
std
pop
pop
leave
arpl
push
and
imul
adc
xchg
pop
adc
ret
sbb
cmc
in
pushf
cmp
sub
outsl
pop
mov
lods
jle
or
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
mov
pop
cltd
xchg
inc
dec
inc
jne
dec
inc
popf
aas
stos
shrb
sub
btr
outsl
jno
lahf
data16
mov
fdivl
imul
pop
out
pop
jge
sub
and
adc
mov
test
adc
push
in
lahf
adc
pop
jp
lea
dec
sahf
loope
es
jle
fildll
dec
ret
cmp
mov
sbb
jo
or
leave
or
and
dec
mov
shl
jae
sti
or
gs
ja
sbb
daa
mov
mov
ret
inc
stc
push
push
test
in
out
enter
adc
mov
hlt
or
cmpsl
mov
stos
push
mov
lret
cli
push
scas
jnp
stos
ret
fcoms
adc
and
ror
mov
lret
repz
mov
mov
inc
mov
jp
sub
jae
int3
push
stos
ja,pn
lds
test
sbb
enter
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
cmp
mov
mov
ret
push
jge
xchg
cmc
mov
cmp
movsb
ret
xor
cmpsl
mov
jae
mov
int
jno
jecxz
fcoms
mov
nop
pop
adc
add
sub
xchg
vsqrtss
add
notb
sub
addr16
std
mov
jno
jl
ficoml
adc
jmp
mov
push
jbe
add
cmp
dec
test
or
imul
mov
aam
mov
xchg
push
negl
in
lods
mov
fldenv
repnz
hlt
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
fidivrs
ret
int
lcall
cmp
dec
in
mov
sahf
mull
push
sub
and
scas
es
fwait
jmp
repz
bnd
outsb
or
test
sbb
lret
jl
fadd
xor
jp
in
outsl
inc
xchg
jnp
out
sti
out
decl
inc
push
popf
stos
stos
sbb
push
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
xchg
jmp
and
xchg
mov
cmp
and
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
stos
lret
movsl
mov
add
addr16
incb
inc
jecxz
xor
sbb
stc
push
inc
in
dec
mov
scas
dec
rcr
mov
and
mov
ret
adc
enter
dec
movsl
or
sbb
fistl
stos
jecxz
mov
xor
shll
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
outsb
cwtl
add
and
mov
mov
negb
bound
fisttpll
ja
jecxz
xor
les
dec
in
cmp
mov
cmpsl
inc
inc
les
xchg
or
shlb
ja
popf
cltd
mov
sbb
dec
pop
push
mov
jge
sub
push
xchg
cltd
popa
pop
call
push
aam
repz
into
inc
xchg
sub
idivb
rol
leave
and
fdivr
push
aam
dec
and
adc
out
mov
sub
push
add
loopne
mov
xchg
cmpsl
pop
sub
adc
clc
pop
cld
sub
cmc
sbb
inc
xchg
sbb
cltd
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
push
jnp
xchg
add
movsb
fisttps
mov
mov
mov
mov
pop
jb
add
mov
out
push
scas
shll
sub
add
lea
addr16
mov
fstl
pusha
in
loop
dec
push
loopne
or
push
xchg
loope
dec
lock
mov
dec
adc
inc
fxch
cli
sarb
inc
inc
insb
or
ja
xchg
jns
lret
xchg
sbb
mov
fwait
lahf
pop
stc
mov
lock
push
or
je
cs
mov
inc
ljmp
lcall
xlat
dec
sub
cmc
xor
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
mov
test
mov
movsl
por
pop
cld
mov
mov
ds
and
push
mov
pushf
and
mov
xchg
clc
insl
fsubs
ja
xchg
pop
ds
int3
fwait
nop
xchg
xor
gs
rcll
add
ds
sbb
mov
je
test
sub
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
sbb
shlb
mov
cmp
movsl
push
jno
lock
dec
push
inc
aas
mov
mov
insl
aam
lods
push
xchg
test
cs
stos
push
repnz
dec
adc
pop
sub
xchg
stos
dec
aad
pop
cltd
enter
in
int3
mov
flds
inc
jmp
leave
les
mov
sub
js
mov
pop
pop
inc
jg
out
aaa
dec
lock
mov
hlt
jbe
mov
call
stos
push
sub
scas
push
movl
in
jle
fildll
or
les
sbb
or
sub
inc
lret
mov
ret
mov
mov
mov
xor
in
icebp
push
aad
push
push
sbb
xchg
xchg
arpl
jl
ret
je
push
and
push
outsl
outsl
ja
inc
mov
xchg
xchg
push
xorl
or
and
push
std
rolb
mov
xor
sbb
sbb
out
aas
fdiv
lret
arpl
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
mov
inc
xchg
or
push
cli
cmp
stos
xor
xor
mov
mov
pushf
stos
js
inc
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
sub
je
pop
lods
addr16
fidivrs
cmpsl
inc
fld1
insb
icebp
mov
lahf
popa
cmpsb
push
imul
mov
or
dec
sarl
xchg
jno
dec
adc
mov
ret
mov
int
mov
nop
sbb
lods
xor
or
cmp
or
add
lock
add
mov
cmc
sub
xor
icebp
cli
jp
adc
repnz
jns
lds
nop
lds
mov
fldenv
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
sub
lods
dec
fisubrl
jo
fisttps
xchg
xchg
dec
xchg
stc
pop
mov
scas
pxor
cld
repz
cwtl
or
add
cmc
jl
das
dec
iret
shl
idivl
outsl
outsl
insb
incl
out
dec
loopne
stc
mov
or
shrl
jmp
arpl
cmp
icebp
or
mov
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
scas
sbb
pop
in
pop
pop
add
cmp
mov
lods
jns
push
xchg
xor
leave
add
mov
in
jg
cmpsl
xlat
cmc
push
mov
mov
outsb
xor
push
inc
push
push
or
and
das
push
jno
xlat
jbe
sbb
lock
iret
push
nop
sub
add
push
scas
mov
int
pop
dec
xchg
aam
jne
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
fs
in
mov
jmp
jecxz
xchg
cltd
js
dec
std
rorb
mov
cmc
push
sbb
mov
aaa
mov
in
push
aam
ret
inc
jge
imul
stos
cmp
sti
inc
jne
insl
add
test
add
sbb
add
andb
js
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
ret
jl
jg
fcomip
test
pop
mov
and
out
dec
mov
icebp
pushf
jle
sbb
mov
pop
adc
aas
movsl
hlt
imul
test
mov
ljmp
lret
fstl
out
scas
in
imul
ret
sub
mov
cs
data16
ss
push
mov
xchg
jl
shrl
test
fistl
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
cmp
mov
sahf
dec
dec
aam
je
mov
adc
test
popf
xor
add
jns
push
lret
mov
cmc
fcomi
lods
mul
fdivrs
pusha
push
dec
pop
es
push
movsb
xchg
dec
push
cmpsl
int
inc
xor
mov
jecxz
mov
sbb
adc
xchg
cltd
fmuls
and
xchg
out
loopne
test
orb
mov
jp
lods
outsb
inc
or
add
lcall
daa
and
iret
mov
sbb
xor
in
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
pop
dec
push
add
shl
je
sub
out
fldcw
out
dec
push
mov
mov
cltd
jb
sahf
pop
mov
cmpxchg
out
test
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
jmp
inc
mov
xlat
repz
mov
jge
and
fisubs
pusha
and
rorb
jmp
dec
mov
adc
jnp
jle
push
lcall
gs
std
aaa
fisubl
movsl
repz
jne
les
cmpl
sbb
imul
pop
adc
mov
jg
aad
pushf
ret
pop
mov
pop
adc
mov
test
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
add
nop
stos
adc
add
dec
push
je
sub
in
pop
sahf
dec
cmpsb
rcll
test
mov
cmc
push
leave
mov
jecxz
pop
lret
fistl
ss
arpl
pusha
mov
xlat
fmull
sti
add
or
shlb
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
cmp
xchg
imul
stc
mov
jmp
std
mov
sti
and
test
fildll
shrb
cmp
mov
popa
dec
mov
outsb
test
push
push
push
lds
je
and
add
enter
adc
xor
shrb
cmp
in
or
pop
hlt
je
push
sti
cmpl
scas
mov
vucomiss
out
dec
imul
aam
insb
and
movsb
jmp
pop
inc
jb
pop
jle
pushf
push
ret
pusha
mov
jge
shlb
jo
scas
pop
or
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
jg
xchg
test
jnp
inc
mov
add
adc
cwtl
add
and
mov
dec
cwtl
dec
and
adc
test
pop
xchg
mov
jbe
iret
test
mov
jae
jo
incb
jl
outsb
addl
sub
xor
imul
iret
jmp
dec
adc
mov
mov
sbbl
int3
loop
lods
imul
mov
into
add
push
sub
sbb
test
lcall
daa
popf
adc
mov
fst
dec
sub
and
loope
jne
mov
pusha
loop
ja
pop
adc
lret
inc
test
dec
mov
iret
fsubl
clc
in
es
or
sub
out
ljmp
and
sub
pop
jae
in
cmpsb
ret
mov
push
push
cli
mov
pop
mov
test
arpl
jl
ret
inc
add
arpl
add
cmp
mov
sub
dec
lret
fidivrs
cli
shrd
imul
fsubl
arpl
or
and
sbb
lret
dec
sbb
addl
mov
ret
mov
test
jl
or
int
rcrl
pop
xor
add
or
mov
scas
loope
leave
ss
jmp
hlt
inc
pop
adc
mov
adc
xor
in
inc
ficoms
sbb
lods
lret
hlt
rolb
cli
sbb
sub
dec
xor
push
jmp
push
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
cli
cmp
stos
xor
xor
mov
mov
fwait
scas
js
inc
mov
pop
jb
add
mov
outsb
rcll
cwtl
jge
jge
outsl
jg
std
xchg
xor
lret
scas
in
lock
test
das
inc
fidivrs
sahf
lret
xchg
lock
call
loope
lahf
stc
cwtl
shrl
pop
xchg
orb
fs
sub
stos
iret
mov
sbb
mov
and
sub
js
inc
shlb
int
insl
xchg
in
test
pop
inc
mov
popa
lahf
out
or
add
sbb
stos
xchg
mov
cmpsb
stos
mov
mov
push
scas
jnp
stos
inc
js
gs
stc
or
fcompl
pop
mov
add
movb
imul
xchg
mov
inc
iret
add
cmp
or
dec
fistl
or
lea
pop
lds
fucomip
pop
pusha
jle
das
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
mov
add
and
sub
cwtl
test
test
lds
int3
xchg
es
addl
pop
sbb
mov
and
adc
or
push
sub
push
xor
push
cmp
push
inc
jecxz
or
push
or
orb
icebp
dec
inc
add
mov
jecxz
sbb
dec
dec
and
and
mov
insb
movsl
sub
cmpl
fs
mov
dec
jno
jecxz
nop
std
pop
mov
ret
jb
jo
scas
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
mov
mov
les
pushf
jne
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
or
aas
fisttps
jnp
sahf
lods
xchg
loope
cwtl
ret
data16
push
xorb
xchg
mov
mov
cltd
jecxz
sbb
gs
std
aaa
mov
movsl
repz
jne
les
cmpl
sbb
imul
pop
adc
mov
add
ret
pop
mov
mov
sbb
sub
push
ja
inc
in
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
sub
dec
fcomp
xor
mov
xchg
aam
jne
insl
pop
fwait
enter
lods
xchg
xorl
push
xchg
push
pop
mov
and
int
and
push
stc
and
int
or
ret
jb
mov
stc
xor
or
cmp
jmp
or
jnp
testb
fucomi
hlt
std
mov
sti
and
test
insl
sbb
xchg
push
hlt
mov
xchg
test
push
lds
inc
dec
pop
pop
inc
mov
mov
adc
jmp
popa
xchg
fwait
jl
push
and
push
insl
sbb
nop
jle
sbb
dec
dec
xlat
insb
inc
or
lahf
xor
and
xchg
movsl
push
jno
rcrb
jne
cmc
fwait
inc
shrl
push
sahf
jns
loope
pop
pop
sub
fsub
ja
in
jg,pn
shl
je
sub
push
add
and
into
push
mov
xor
jae
xor
adc
repnz
xchg
jo
rcl
mov
aam
clc
xor
mov
adc
es
xchg
xchg
inc
push
mov
or
in
mov
repz
cmpsl
icebp
lods
sbb
fcomi
lods
divl
stc
into
add
and
rorb
ss
lock
or
add
mov
sub
or
mov
adc
and
push
dec
push
adc
jo
push
sbb
push
and
add
mov
and
shlb
out
inc
sbb
cmpsl
jb
mov
test
ds
jno
dec
mov
inc
push
call
adc
mov
pop
add
pop
cmpb
lock
shlb
lock
mov
movsl
mov
inc
add
fwait
xor
xchg
int
xor
jb
fisttpll
cmp
lds
jl
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
inc
pushf
out
es
jae
pushf
sub
call
lret
pop
jmp
fisttpll
jg
lahf
dec
xchg
clc
lahf
stc
cwtl
shll
or
add
push
rcll
dec
adc
pop
sbb
pop
inc
loopne
int
mov
lods
push
lsl
lahf
jmp
sbb
push
fists
add
ljmp
popa
mov
mov
sti
add
je
mov
xor
dec
sbb
sub
and
insb
sarl
adc
test
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
mov
pop
cltd
xchg
inc
dec
inc
jne
dec
inc
popf
aas
stos
shrb
pop
int
jge
pop
nop
data16
sbb
fwait
jl
fsubrs
push
roll
loope
daa
add
add
pop
cld
mov
inc
mov
xchg
testl
mov
out
inc
and
aas
int
fs
negl
mov
testb
pop
test
shrb
ret
jne
push
pop
add
mov
ret
pop
push
test
mov
or
call
sar
mov
pop
inc
inc
inc
rcl
jae
mov
je
test
or
popa
mov
cmp
and
jbe
sbb
jmp
addr16
cmp
shl
jmp
cmp
inc
xchg
pop
mov
mov
jne
jmp
clc
mov
gs
and
into
adc
mov
addb
push
fcmovne
fimull
lods
outsb
cmpsb
shl
dec
les
lds
aad
shll
pop
shr
adc
iret
pop
test
xor
popf
mov
mov
add
mov
fwait
push
dec
mov
sahf
dec
dec
aam
inc
mov
imul
sub
mov
jns
or
stos
aad
or
popf
add
cmc
arpl
out
add
pop
sub
jecxz
xchg
push
lock
or
mov
stos
into
cli
dec
imul
xor
out
dec
xchg
or
movsl
sbbl
jae
or
xchg
in
jns
add
cs
mov
mov
mov
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
vplzcntd
push
stos
fs
xchg
fimull
pop
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
mov
scas
bound
add
popa
mov
enter
clc
xor
ja
or
iret
hlt
ss
outsl
jae
fsubrp
cmp
out
out
fs
subb
imul
clc
int3
pop
into
lods
aam
enter
in
adc
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
xchg
dec
push
mov
les
jns
pop
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
push
xchg
movsb
data16
cmpsb
ret
adc
push
movsl
mulb
mov
hlt
and
ror
mov
in
cmp
push
cmpsb
ja
enter
arpl
dec
xlat
mov
cli
aad
test
ficoms
mov
test
sbb
cmp
flds
mov
scas
jb
sbb
pop
aad
bound
cmpb
add
and
es
fidivrs
mov
sub
add
inc
insl
jmp
mov
mov
fldcw
xchg
ds
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
push
sbb
ret
js
test
or
aas
test
fildl
add
mov
mov
ret
jl
jg
fbstp
test
pop
mov
jmp
popa
int
pop
fcomi
imul
push
stos
loop
sub
out
imul
push
stos
mov
imul
subl
clc
pop
cld
sub
cmc
cmp
rclb
add
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
jbe
pop
jp
mov
fisttps
mov
mov
fsubrl
and
lret
add
inc
pop
or
mov
addr16
sub
jo
mov
dec
mov
push
lods
shrb
jg
lahf
sti
xlat
fmull
pop
outsb
iret
lahf
icebp
es
clc
pop
int3
rcrl
adc
popf
or
nop
push
test
push
subl
inc
into
pop
daa
push
mov
pop
mov
rolb
sti
push
sbb
cld
cmpsl
adc
dec
roll
sub
xchg
push
push
sub
push
mov
mov
shlb
push
stos
lea
ljmp
fldt
int
jno
fildll
push
sahf
jns
loope
pop
in
mov
in
push
addl
mov
inc
lret
test
leave
adc
test
xor
xchg
stos
sbb
dec
repz
lods
cmp
pop
dec
out
cmp
xchg
inc
mov
inc
mov
fdivr
pop
sub
loop
inc
add
push
fldt
cmp
sbb
ss
xorb
cs
xor
jb
mov
xor
and
jmp
cmpsb
in
adc
pop
sbb
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
pop
leave
dec
call
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
orb
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
in
outsb
mov
in
jg,pn
xchg
xchg
sub
jne
sbb
push
inc
ficoml
jmp
mov
in
scas
aas
test
xchg
adc
sti
popf
scas
inc
lahf
outsb
fmull
push
divl
mov
imul
push
add
pop
es
push
les
xor
enter
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
sub
or
addr16
adc
add
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
sub
dec
dec
pop
insb
push
in
ficomps
fnstcw
sub
sub
mov
mov
inc
addb
stos
dec
push
sahf
jns
loope
fsubrs
rolb
mov
fsubrs
test
xchg
xchg
and
adc
xor
cmpsb
jmp
lret
arpl
fs
push
pushf
sub
cmp
sub
into
scas
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
pop
add
cmp
inc
jmpw
mov
lret
in
mov
mov
or
mov
add
push
std
bound
cltd
add
nop
dec
push
or
int
mov
mov
push
and
add
xchg
pop
xchg
dec
inc
xlat
leave
jnp
sahf
popa
jp
add
jmp
inc
mov
aad
std
test
push
push
cmp
xor
arpl
mov
test
incb
xlat
ret
aad
and
lret
movsl
mov
lret
lahf
mov
lea
leave
gs
mov
cld
mov
mov
xor
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
push
pop
mov
leave
xchg
fistpl
jo
cmp
cmp
push
add
mov
sahf
xchg
sbb
js
adc
scas
fwait
leave
xchg
cmp
adc
ljmp
mov
addb
mov
shrb
pop
das
aad
pop
outsl
dec
push
sti
add
push
push
rcl
jae
pushf
lods
pop
xchg
sub
sbb
sbb
jb
fucomp
mov
loope
jbe
xchg
mov
inc
adc
inc
aas
jnp
dec
mov
sbb
add
mov
mull
aam
jae
push
addl
sub
jmp
cmp
pop
add
add
add
mov
sbb
xchg
xor
mov
cld
movsb
fsubrl
stos
shl
xlat
jl
sub
jno
pop
cmp
jb
pop
adc
imul
push
outsl
and
xor
xchg
sub
jne
insl
outsb
mov
sub
xchg
clc
xor
jo
sub
cmpxchg
out
mov
jno
icebp
jle
scas
pxor
cld
repz
out
das
dec
je
inc
dec
addr16
sub
hlt
cmc
mov
mov
mov
lcall
movsb
cli
xor
daa
mov
cmp
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
xchg
fwait
rcrb
dec
lods
lock
mov
orb
daa
jb
sub
xor
divl
es
test
dec
jecxz
rol
and
js
or
push
pop
bound
push
cld
cwtl
in
outsb
xor
push
dec
repz
int
inc
ret
pop
mov
push
mov
jmp
mov
sub
pop
adc
or
xor
lret
jnp
jbe
mov
sbb
push
inc
ficoml
test
and
xchg
mov
mov
push
jb
es
add
xchg
fwait
test
rcrb
cld
inc
ret
jb
fs
push
out
and
gs
fwait
cmp
mov
aam
fdivrs
inc
out
push
mov
stc
test
xor
sti
sti
and
test
fisubrs
shrb
cmp
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
test
out
inc
mov
and
mov
sbb
bound
add
imulb
push
inc
dec
movsl
in
adc
inc
mov
or
out
jle
adc
dec
inc
sub
sub
or
stos
fs
orb
dec
pop
sbb
jp
jns
dec
lds
fwait
enter
lods
xchg
mov
pop
fiaddl
inc
imul
ss
ja
adc
or
gs
mov
and
add
push
aaa
leave
and
rclb
mov
fbstp
loopne
outsb
imul
push
mov
push
jne
dec
jp
movsl
rcrl
lods
lret
cmpsl
dec
add
or
lock
inc
cwtl
mull
sarb
xor
and
ja
fucom
cli
xor
roll
inc
test
std
xor
call
lret
jecxz
push
cmove
int
push
outsl
jne
jne
ret
fadd
cmp
mov
cltd
xor
out
cmc
sbb
les
mov
mov
mov
pop
xchg
shll
cmp
xchg
fisttps
dec
bound
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
pushf
jmp
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
adc
sub
add
cmc
test
xchg
loopne
stos
inc
movsl
pushf
out
jbe
jg
dec
push
cmc
daa
testl
lods
clc
adc
fwait
mov
lahf
mov
pop
loopne
rcll
or
out
es
mov
push
loop
xchg
ds
push
dec
mov
popf
negl
mov
mov
mov
test
add
inc
sbb
push
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
and
push
sti
popf
ficoms
shr
jae
pushf
ficoms
jno
pop
aas
adc
jns
push
sahf
jno
jecxz
push
enter
mov
pusha
pushf
mov
lret
not
or
andb
mov
test
fwait
dec
pop
stos
punpckhwd
sub
in
mov
scas
shrb
ret
mov
sbb
inc
cs
cmp
jl
jnp
repz
leave
or
push
jge
mov
mov
rorb
mov
push
jno
mov
mov
les
mov
in
push
test
fnsave
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
insb
cmpsl
out
jne
pop
mov
pop
dec
and
cmp
and
mov
test
add
inc
sbb
push
jecxz
movsl
mov
cltd
jo
bound
push
xchg
xchg
cltd
lret
movsl
mov
and
xchg
addr16
std
jmp
mov
mov
mov
adc
inc
mov
icebp
sahf
jle
and
lods
adc
in
and
shlb
dec
xchg
aam
jne
insl
bound
imull
in
jb
xlat
pop
mov
mov
scas
cmpsl
pop
icebp
cmp
jne
ret
pop
inc
add
jmp
and
jmp
cmp
es
dec
xor
and
adc
mov
aad
cmc
mov
mov
or
mov
add
push
std
bound
cltd
add
clc
inc
imul
inc
and
push
lcall
add
into
pop
stos
rcrl
cltd
loope
sbb
cmp
mov
jecxz
inc
out
mov
jecxz
pusha
sbb
mov
outsb
in
add
inc
mov
mov
insb
sub
pop
ficoml
xchg
addr16
mov
fwait
sahf
sbb
cld
mov
ror
jmp
dec
ds
je
fnstenv
aam
jl
ret
add
mov
scas
ja
test
cmpsb
xor
jb
fisttpll
cmp
lds
sbb
pop
pusha
jle
das
pop
icebp
or
cmp
fcmovne
loop
add
sub
addl
mull
lret
cmc
ret
fwait
push
lret
push
push
pop
and
xchg
dec
sahf
push
and
mov
jo
fidivrs
cmp
xchg
xchg
xor
add
or
dec
xchg
dec
fistpl
hlt
inc
or
push
jmp
cmpsl
pop
or
fldcw
leave
inc
rcl
lret
and
sarl
loope
add
pop
pop
mov
adc
mov
sbb
pop
int
push
sub
je
in
pop
mov
push
xchg
aad
sbb
int
jnp
and
out
lods
jmp
into
and
movb
cmpsl
je
or
or
or
cmp
adc
mov
adcl
jbe
sub
sub
sbb
das
fucomi
test
popf
scas
jg
popf
or
std
inc
and
enter
std
inc
fidivrs
int
push
inc
mov
leave
fldl
cmpsl
in
decl
inc
lret
scas
enter
lods
push
mov
adc
mov
cmovae
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
addb
lret
es
pop
dec
and
cmp
and
mov
test
add
inc
sbb
pop
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
ja
imul
mov
and
adc
inc
cmp
mov
pop
incb
shl
pop
pop
add
out
mov
xchg
mov
sub
dec
xchg
aam
jne
insl
jb
inc
fisubs
jbe
call
xchg
hlt
cmc
lret
mov
pause
xchg
incl
or
mov
dec
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
or
mov
popf
xor
jmp
std
mov
sti
and
test
mov
xchg
push
hlt
mov
fimuls
cmp
lods
into
pop
stos
movsb
lcall
push
pop
push
outsl
xlat
test
mov
push
mov
pusha
test
inc
inc
cld
push
dec
xchg
mov
js
cmpsl
push
leave
fsubrl
cltd
mov
insl
movsl
imul
test
push
inc
mov
mov
imul
cld
int3
es
mov
mov
insl
int3
imul
mov
xchg
cmpsb
xor
add
aam
adc
push
fimull
mov
clc
inc
add
or
pop
sbb
lahf
leave
pop
pop
or
js
in
xchg
jl
sbb
fistl
popl
push
jo
xor
push
rcrl
jb
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
int3
push
sub
cmp
pop
push
lds
imul
mov
add
and
pop
push
adc
inc
dec
daa
jp
or
xor
or
in
test
icebp
mov
je
and
rolb
out
inc
mov
movsl
add
xchg
fidivrl
stos
pop
push
in
addr16
rcrb
push
scas
shlb
pop
push
lods
stc
icebp
push
lret
inc
sarl
push
sar
lcall
pop
cmp
cli
xchg
add
mov
movsb
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
lcall
pop
jb
add
dec
sbb
add
or
push
mov
out
pop
int
pop
test
lret
xchg
mov
lahf
cmpsl
repz
in
aaa
lcall
jne
fucomi
adc
pop
imul
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
lcall
sti
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
xor
mov
test
sub
push
enter
jmp
dec
sbb
movsb
cmpsl
adc
movsb
fisubrs
cltd
jge
dec
inc
mov
hlt
lods
push
lods
jnp
mov
inc
aam
dec
pop
insl
sub
sahf
out
subb
cltd
das
mov
cwtl
xchg
cmp
ficoms
add
add
aad
jno
jae
mov
push
roll
scas
push
repz
imul
cs
mov
pop
out
js
mov
mov
nop
ja
loope
add
dec
mov
aam
int3
sub
adc
mov
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
ljmp
es
pop
dec
and
cmp
and
mov
test
add
inc
sbb
push
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
ja
imul
mov
xlat
sub
mov
fstl
movsb
xchg
xor
dec
inc
sub
sub
add
adc
add
add
test
imul
push
es
mov
sahf
sti
add
inc
mov
leave
pop
mov
in
xchg
jl
sbb
fistl
popl
push
jo
mov
mov
xor
xchg
xchg
inc
push
mov
or
in
insl
xchg
popf
pop
adc
out
fsubs
pop
mov
gs
sbb
push
stc
and
loopne
push
pop
pop
mov
mov
xor
ucomiss
jb
push
mov
adc
adc
movb
and
les
sbb
and
pop
pop
dec
push
jecxz
inc
mov
rolb
gs
rcrb
repnz
mov
int
inc
sbb
fwait
clc
mov
jnp
in
and
int3
xchg
sbb
std
fistpll
stc
mov
mov
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
gs
pop
xor
mov
cs
pop
cld
xor
cs
fadds
mov
dec
xchg
jge
xchg
or
test
dec
sub
movsl
fists
enter
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
in
dec
popa
pop
push
dec
push
mov
pop
adc
call
fistpl
inc
mov
dec
insl
add
inc
lock
loop
xlat
sbb
daa
xor
enter
outsl
xchg
or
cmpsb
push
push
cmpsb
outsb
and
cmpsb
shlb
push
pop
or
push
lea
push
lret
int
pop
sti
lea
jns
xchg
test
pop
sub
fsub
ja
in
cs
xchg
sub
add
ja
rolb
and
xor
nop
lcall
mov
sub
movzwl
outsb
jno
insb
negb
mov
jno
add
addl
pusha
das
inc
out
mov
movsl
out
cmp
scas
mov
pop
mov
fsubrl
mov
adc
incl
dec
mov
popa
and
cmpsb
stc
adc
enter
pop
dec
sbb
or
andb
nop
and
or
inc
orl
and
test
clc
xor
out
and
mov
icebp
add
cmp
inc
or
or
rol
dec
gs
jns
rolb
or
mov
mov
sbb
jle
jmp
adc
mov
push
movsb
jmp
push
ja
fs
movsl
mov
stc
mov
mov
test
jl
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
jmp
dec
bnd
popf
lds
push
jns
dec
sti
mov
dec
testl
ds
ja
fcomip
je
cmp
test
jns
ret
outsl
gs
dec
inc
lods
mov
jg
inc
jp
jle
fildll
shlb
dec
xor
repnz
inc
mull
outsl
stos
sbb
cmpsb
ja
test
shlb
clc
sarl
ret
xchg
add
lret
popf
ljmp
cmpsl
test
mov
or
jl
loop
fbstp
lea
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
cmp
movl
sti
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
add
shll
inc
leave
jae
fidivs
jb
sahf
fsubl
ja
in
movsb
movsbl
pop
xchg
cmp
andl
addl
mull
jl
das
jae
sti
mov
call
daa
jb
lock
sbb
pop
jnp
icebp
ljmp
outsb
jecxz
ficompl
or
and
rolb
ljmp
cltd
dec
push
in
mov
inc
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
movsl
add
add
mov
sbb
orb
xor
mov
test
sub
push
enter
lods
push
shrl
sbb
sub
cmpsl
adc
cmp
std
bound
sub
out
out
jb
push
adc
in
jg,pn
out
in
imul
push
xchg
stos
aam
xor
inc
lahf
jb
lods
mov
test
push
jb
adc
iret
jns
negb
orl
fldt
mov
fsubrs
rorl
repz
out
das
dec
lock
jl
das
dec
iret
shll
inc
int
fsubr
sti
mov
dec
and
mov
rorl
mov
rclb
lret
mov
mov
lods
cltd
hlt
mov
test
outsl
aad
add
lock
hlt
dec
movsb
adc
insl
int3
nop
mov
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
loopne
jg
cmpsl
xlat
in
sub
push
insl
mov
jne
pop
test
push
stos
xchg
sbb
push
jmp
imul
inc
jns
ds
movsb
ret
xor
dec
inc
sub
sub
inc
jb
insb
shlb
movsl
out
stc
add
mov
inc
lcall
cmp
cmpsb
cmp
pop
and
movsl
jge
jo
popf
dec
fistpl
jno
je
mov
pop
cmp
ret
cld
jae
cld
out
daa
dec
lock
jge
sub
jno
int
xchg
test
repz
jp
lds
out
stos
loopne
cmp
pop
jb
or
cmpb
repnz
dec
inc
inc
inc
pop
jle
or
and
dec
sbb
cmp
xorl
mov
fmul
call
mov
outsb
js
std
popa
mov
mov
cli
mov
inc
xchg
enter
xor
or
push
xorl
sbb
push
cmp
je
stos
ret
call
add
push
lret
popl
inc
popf
imul
xchg
mov
inc
mov
cmp
xchg
fistl
test
add
or
lea
pop
lds
fsubr
pop
pusha
jle
das
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
outsb
cwtl
add
and
mov
xchg
clc
cmpsb
fucomp
xchg
mov
sarl
jne
sbb
aas
add
jns
push
lret
mov
cmc
in
loop
adc
arpl
arpl
and
rolb
or
and
or
mov
xchg
adc
adc
mov
push
jo
push
sbb
push
xor
mov
out
mov
or
outsl
aam
dec
sbb
inc
push
xchg
mov
sub
mov
aaa
and
jo
cltd
mov
pop
subb
mov
push
and
enter
adc
jecxz
push
dec
cmc
add
or
lods
cmp
jecxz
adc
mov
lds
xchg
or
inc
fdivrs
into
icebp
leave
in
test
sahf
mov
mov
in
cmp
mov
mov
pop
jge
xchg
cmc
mov
cmp
movsb
ret
xor
cmpsl
mov
jae
mov
int
jno
jecxz
fcoms
mov
addr16
jmp
sbb
rclb
andb
das
ljmp
jmp
inc
jecxz
iret
xchg
mov
xchg
test
jecxz
mov
mov
push
imul
fisubrl
dec
out
mov
mov
cmp
dec
and
jp
sahf
int3
aam
push
mov
insb
cmp
fsubrp
les
xchg
rolb
add
inc
cmp
int
cwtl
mov
pop
inc
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fidivrl
dec
mov
cmc
mov
test
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
lcall
fisttps
stc
in
jns
test
inc
mov
xor
enter
pop
int3
aaa
adc
ja
rcll
add
mov
push
push
cmp
push
xchg
push
mov
cwtl
ja
mov
xchg
mov
decl
aas
cli
add
lahf
pushf
sbb
sbb
jae
mov
rorl
or
sub
aas
outsb
xor
test
ljmp
mov
sbb
fisttps
mov
sahf
das
xchg
stc
cli
in
test
or
fs
data16
or
cmp
pop
pop
mov
mov
repz
test
fsubl
ja
sub
insb
xchg
and
lods
test
mov
inc
cwtl
mov
filds
jno
popl
sub
sarl
outsl
push
and
xchg
mov
stos
bound
hlt
mov
enter
pop
lods
iret
xor
into
xchg
les
aam
add
jle
nop
add
add
mov
mov
std
aaa
pop
and
jne
les
cmpl
sbb
imul
pop
adc
mov
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
shll
in
dec
gs
jno
push
shll
push
push
xchg
aam
xor
dec
popa
push
in
ja
call
pop
les
sub
adc
aaa
jecxz
scas
add
jns
loop
dec
movsb
jecxz
mov
add
arpl
testl
push
in
imul
adc
iret
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
add
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
fmull
cwtl
dec
xlat
mov
and
scas
arpl
mov
jne
adc
cmp
push
xor
div
pop
addr16
dec
dec
test
sbb
xor
imul
jge
dec
inc
adc
push
jl
addl
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
imul
adc
in
cmp
mov
and
adc
sub
pop
jae
inc
insl
out
xchg
inc
test
daa
dec
stos
movsl
jno
pop
dec
add
outsl
add
data16
inc
addr16
xor
seto
sahf
imul
aam
xlat
leave
jnp
sahf
sbb
add
push
add
inc
fwait
sub
adc
popf
ret
out
push
cmp
and
fistpll
bound
imul
jbe
lea
push
xchg
fnstenv
pop
mov
sahf
cli
test
outsl
cli
mov
jne
mov
mov
sbb
lods
cmp
rcrl
xchg
mov
outsb
or
cmp
ret
int
sarb
xor
mov
jp
add
cmp
lds
fsubr
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
adc
sub
add
cmc
test
xchg
loopne
stos
movsl
fists
outsl
addr16
call
xchg
cld
or
fnsave
lahf
jno
jmp
mov
aam
mov
enter
lea
or
nop
push
mov
test
sbb
jp
incb
mov
cmp
dec
int
jle
pop
mov
add
add
out
in
imul
sub
jmp
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
fs
data16
scas
pop
rcl
ja
mov
sub
pop
popf
mul
sub
imul
fstl
pop
hlt
sub
cmc
cwtl
mov
dec
loop
and
xor
add
add
xchg
xchg
aas
enterw
cmp
mov
or
add
int3
mov
in
pop
insb
jbe
jg
sti
std
mov
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
out
test
push
push
xor
and
mov
jmp
aad
mov
or
cmp
rol
int
mov
xchg
rolb
inc
xor
sbbb
divb
fst
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
pop
jmp
lds
adc
mov
adc
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
and
test
xor
movl
fnsave
repz
and
mov
lret
ds
dec
call
call
mov
pusha
add
in
pop
in
mov
imul
push
or
cld
ret
mov
sbb
into
or
or
mov
out
stos
lcall
xlat
adc
or
scas
inc
xor
outsl
int
cmc
test
cmp
mov
lods
jns
push
xchg
xor
leave
add
mov
movsl
or
pop
into
push
inc
test
addr16
movsl
jne
pushf
jnp
and
movsl
adc
push
enter
or
ljmp
jmp
das
sub
sahf
jns
jmp
add
push
repnz
pop
xchg
je
sub
sub
and
int
jae
cmp
in
scas
aas
test
pop
jmp
jns
out
jno
insb
out
pop
mov
scas
pxor
js
inc
int3
cmpsl
dec
sbb
lock
xchg
jmp
pop
int3
inc
dec
mov
jp
lcall
sarb
push
or
sbb
xlat
push
jle
divl
and
es
fdivs
aaa
imul
pop
sbb
pop
sub
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
cmp
pop
push
mov
cmp
ja
xchg
movsb
enter
cmc
pop
push
fistl
addb
negb
and
mov
add
sub
pop
daa
sub
int3
sub
pop
push
leave
ret
cwtl
imul
jge
test
adc
push
jl
addl
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
imul
adc
in
cmp
mov
mov
push
pop
jge
xchg
cmc
mov
mov
dec
dec
pop
push
jne
dec
jp
movsl
rcr
out
pop
enter
jo
mov
dec
xchg
bound
fs
inc
lcall
cli
mov
and
popf
sub
push
popa
push
test
sahf
jge
pop
loopne
cld
mov
mov
push
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
mov
cmp
cmp
lret
jns
lds
nop
lds
mov
fldenv
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
mov
fistps
test
push
es
dec
push
leave
aas
test
mov
and
mov
pushf
rcrl
addr16
scas
push
repz
xchg
xchg
mov
scas
mov
out
dec
mov
jae
pushf
bound
push
loopne
jb
jb
jmp
mov
xor
adc
pushf
add
jmp
pop
inc
inc
push
push
inc
inc
mov
push
jne
in
out
dec
xchg
test
xchg
fimuls
jnp
cmpb
push
adc
int
mov
sbb
push
xor
mov
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
push
std
and
shrb
fsubl
mov
out
push
xchg
fimull
pop
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
mov
scas
bound
add
popa
mov
enter
adc
sbb
mov
rclb
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
pop
imul
push
hlt
mov
sahf
dec
mov
into
pop
stos
movsb
mov
push
pop
push
outsl
xlat
test
mov
push
mov
pusha
test
inc
inc
cld
push
dec
xchg
mov
or
pushf
sbb
ja
mov
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
call
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
dec
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
push
lds
xchg
dec
enter
ss
repnz
leave
mov
fmul
or
jp
xor
je
and
sub
and
xor
push
adc
pop
test
lcall
adc
mov
mov
mov
cmp
jp
add
add
mov
sbb
insb
cltd
orb
xor
mov
test
sub
push
enter
lods
push
shrl
sbb
sub
cmpsl
adc
cmp
std
bound
sub
out
out
jb
push
adc
in
jg,pn
out
in
imul
push
xchg
stos
aam
xor
inc
lahf
jb
lods
mov
test
push
jb
adc
iret
jns
negb
orl
fldt
mov
fsubrs
rorl
repz
out
das
dec
lock
jl
das
dec
iret
shll
inc
int
fsubr
sti
mov
dec
and
jno
call
inc
and
push
jb
fwait
fistl
inc
lret
out
test
addl
push
test
jmp
xchg
push
imul
out
in
pop
inc
cmpsb
jg
stos
arpl
sbb
ret
add
daa
out
mov
in
dec
sub
push
add
adc
push
leave
dec
jmp
decb
lahf
fwait
subb
mov
int3
imul
mov
into
sub
dec
pop
mov
xor
popf
clc
fistpl
outsl
xor
xchg
mov
dec
shlb
jo
scas
pop
or
pop
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
jg
xchg
test
jnp
inc
mov
add
adc
push
add
and
mov
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
fs
outsl
data16
add
and
sub
cwtl
test
test
lds
int3
xchg
es
addl
pop
sbb
mov
and
ret
lahf
sbb
int3
push
xor
push
cmp
insl
or
jmp
add
das
mov
paddusb
xchg
dec
les
test
pop
aaa
stos
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
rolb
fs
movsl
add
or
xor
jb
fisttpll
cmp
lds
lcall
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
add
mov
pop
sub
jne
inc
sub
in
ret
push
icebp
xor
inc
into
add
mov
int3
pop
into
mov
repz
in
adc
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
xor
mov
les
jns
pop
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
movsl
or
cmc
pop
into
push
dec
or
lret
movsl
gs
or
pop
push
stos
xchg
scas
lods
pop
imul
scas
mov
xchg
mov
lret
cmp
mov
rorl
pop
enter
clc
in
es
shlb
jns
inc
dec
xchg
jmp
jmp
dec
test
ss
stos
call
xchg
rcrl
ret
or
js
jle
daa
shl
leave
test
fisttpll
rcl
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
mov
mov
mov
inc
int
jns
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
inc
mov
idivl
inc
lret
dec
inc
inc
lahf
sub
push
movl
push
mov
jg
bound
dec
lds
xchg
movsl
aam
jge
mov
push
mov
mov
repnz
inc
push
int
add
decl
ret
fs
inc
fcomps
lds
sbb
mov
les
enter
mov
pop
nop
jbe
mov
into
jbe
pusha
mov
aam
xchg
test
xor
movsb
cmp
xchg
pop
or
or
scas
inc
fidivl
and
xchg
jb
insl
sub
mov
out
cmpsl
fsubl
jne
movsl
cmpsw
in
jle
mov
repz
push
movsl
int3
pop
push
pop
xchg
daa
loopne
hlt
jbe
jno
out
jnp
dec
adc
xlat
adc
int
int3
fwait
mov
in
and
xor
lcall
push
sub
divl
cwtl
roll
addr16
mov
sbb
insb
cltd
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
push
mov
outsl
mov
call
into
in
daa
push
jle
mov
mov
shrl
dec
sub
int
add
jmp
dec
and
data16
ss
clc
mov
aaa
outsb
ret
jge
dec
dec
add
imul
lea
jo
into
push
adc
push
add
scas
sar
sbb
pop
or
xchg
fnstsw
js
addl
add
pop
push
ja
mov
push
jns
lret
sbb
in
jp
movsl
iret
lods
xor
push
sbb
pop
inc
insl
hlt
xor
xchg
shl
data16
sbb
mov
orb
dec
mov
out
mov
shlb
xlat
push
int
sarl
ret
xchg
add
movl
lds
mov
push
mov
mov
push
leave
push
loopne
xchg
iret
cmpsl
insb
and
lods
mov
sub
push
add
inc
push
mov
lea
cmp
aaa
pop
jbe
dec
movb
clc
lahf
shll
xchg
add
mov
add
cwtl
mov
sub
lds
add
inc
pop
fmull
scas
dec
xchg
jp
and
jmp
pop
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
subb
xor
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
pop
or
int
imul
jmp
mov
daa
push
imul
inc
mov
das
mov
jo
push
jl
std
roll
ljmp
push
enter
lea
aad
fwait
scas
mov
les
cmpsb
mov
push
enter
lods
dec
adc
xchg
lahf
push
fwait
push
cmpsl
fwait
sahf
sbb
nop
sbb
ljmp
lret
into
jo
fnstenv
or
mov
jl
sbb
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
push
mov
mov
sahf
xchg
sbb
js
xchg
xor
test
xor
hlt
das
pusha
enter
bsr
adc
cmc
jmp
cmpsl
cs
inc
xor
je
jmp
pushf
jecxz
nop
loop
stos
mov
movsb
test
mov
outsl
cs
repnz
jns
outsb
jecxz
cli
cmpsl
or
les
aam
add
jle
incb
lock
pop
xor
negb
popf
divl
dec
xchg
sahf
sarl
add
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
pushf
daa
lahf
iret
push
hlt
mov
pop
push
fistl
addb
dec
add
loope
xlat
fisttpll
cmp
mov
bound
or
push
push
lock
mov
sub
and
lds
adc
xor
mov
ret
or
repz
sbb
loope
jecxz
xchg
das
ss
add
mov
imul
mov
pop
xchg
mov
push
out
mov
rolb
mov
pop
ds
fadd
mov
add
pop
std
bound
test
and
sub
popf
out
mov
cmp
mov
lods
insl
int
jg
ret
call
add
repz
sti
push
mov
lahf
lret
or
inc
xchg
dec
cmc
inc
daa
xchg
lret
add
jl
pop
test
addr16
xor
fsubrl
inc
push
push
lds
insl
lods
into
mov
pop
push
ljmp
lahf
icebp
push
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
sti
fmuls
xchg
fisttpl
add
jp
add
cmp
lds
fucomi
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
cld
jo
mov
lock
cmp
mov
loopne
testw
scas
xchg
out
cmpsl
mov
jg
sti
in
jns
outsb
out
sti
cwtl
inc
data16
add
add
jle
nop
inc
fs
inc
dec
adc
pop
sbb
test
and
sub
inc
int
add
ret
lods
adc
jmp
inc
cld
push
dec
xchg
mov
or
pushf
sbb
ja
mov
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
sub
fisttpl
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
scas
and
test
inc
sub
pop
mov
out
sar
jg
out
das
dec
lock
jge
mov
aaa
jge
outsl
outsl
call
push
shrl
scas
inc
leave
push
xor
icebp
in
jns
popf
iret
jle
add
sahf
pop
sub
mov
or
cmp
mov
pop
adc
lret
int3
ret
xchg
test
xor
mov
icebp
push
pushf
add
jmp
sbb
daa
push
into
mov
dec
orl
mov
push
add
pop
mov
mov
xor
push
sbb
les
mov
mov
mov
pop
xchg
shll
cmp
xchg
fimuls
dec
bound
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
jle
jbe
lods
inc
in
or
sbb
js
jle
mov
mov
stc
das
jg
iret
mov
jl
mov
mov
cmpsl
push
shll
push
push
divb
sbb
adc
sbb
mov
cs
icebp
cmp
mov
test
jo
mov
pop
push
addl
andb
stos
mov
xor
leave
bound
mov
and
adc
pop
cs
push
sub
push
xor
test
cmp
or
dec
push
fs
inc
xlat
repz
push
dec
mov
fdivp
dec
inc
popf
div
sbb
shrl
sbb
jne
addr16
flds
sub
sahf
fwait
sub
xchg
callw
jl
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
loopne
cmp
mov
push
or
push
jae
dec
adc
aad
mov
loopne
mov
outsl
jae
push
xor
lret
scas
out
xor
out
jmp
loopne
in
jl
cmp
sub
mov
mov
lods
cltd
hlt
mov
test
outsl
aad
add
lock
hlt
dec
movsb
adc
insl
int3
nop
mov
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
push
stos
and
dec
pop
push
mov
and
je
push
clc
lods
pop
imul
movsl
mov
and
call
iret
imul
xchg
cwtl
mov
mov
xor
add
push
dec
add
rorl
test
xchg
cmp
push
xor
xor
pop
ret
jge
or
ret
adc
sbb
rolb
inc
clc
or
fwait
push
dec
mov
mov
rclb
cmc
mov
mov
ja
out
fbstp
sub
ljmp
out
int3
lahf
testb
int3
push
sub
mov
mov
stos
arpl
cmovne
pop
pop
sbb
subb
mov
lods
loopne
jo
push
sahf
add
in
leave
xor
xchg
sub
cmpb
sti
xor
loope
ret
aad
shlb
add
mov
cmp
sbb
fs
rcrl
lds
test
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
sahf
pop
and
jle
test
cld
mov
pop
xor
addr16
dec
push
cmp
leave
lock
jl
das
dec
iret
shl
divl
adc
stc
jp
scas
scas
loope
sti
jnp
out
scas
mov
dec
scas
insb
lock
mov
mov
mov
xchg
adc
lret
or
and
nop
cs
bound
xchg
inc
cmpsb
jg
stos
les
fbstp
dec
daa
jp
or
xor
or
cmp
jns
fistpll
testl
cld
or
add
orb
sub
aad
imul
inc
daa
leave
sbb
inc
pop
mov
pop
cli
test
mov
negl
roll
mov
mov
jno
adc
test
mov
sbb
mov
push
test
mov
xchg
pushf
xchg
mov
jbe
popf
adc
gs
loop
loope
jg
pop
rcll
fcompl
adc
das
mov
clc
das
mov
cmp
push
mov
push
jge
shll
or
test
xchg
and
cmp
sbb
adc
xor
lret
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
sub
cmp
mov
push
aaa
inc
mov
push
aas
push
fwait
cltd
cmp
jmp
hlt
inc
pop
adc
mov
lahf
mov
fsubl
cmc
imul
ficoml
ret
lahf
pop
cmp
dec
dec
in
lret
adc
inc
ds
rcr
mov
and
mov
pop
ret
adc
enter
dec
movsl
or
sbb
fistl
mov
xor
shll
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
outsb
cwtl
add
and
mov
xchg
jne
pop
lret
inc
lods
xlat
xchg
mov
outsb
or
daa
loopne
js
xlat
mul
jle
mov
jecxz
mov
add
dec
mov
std
pop
push
lds
movsl
ds
push
hlt
gs
imul
test
and
mov
int3
inc
lds
cltd
jb
sub
jae
enter
gs
int
inc
adc
xlat
aas
add
fsubrl
ret
dec
lret
cltd
adc
sub
or
sbb
lahf
jne
sbb
cli
lds
sub
into
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
cmp
ret
int
lcall
cmp
stos
in
mov
jb
aaa
insb
into
or
xor
pop
rcll
push
pop
xor
cmp
inc
or
jmp
cmp
das
push
roll
jo
mov
sti
cs
xchg
mov
ljmp
cltd
xor
dec
enter
test
jae
loope
pop
fdivrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
adc
mov
loopne
add
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
pop
inc
roll
pop
test
push
ljmp
out
lods
mov
and
call
imul
push
rclb
roll
jg
out
out
sub
mov
pop
shll
ss
test
inc
and
std
pop
mov
popf
enter
js
outsl
sti
nop
adc
es
clc
mov
add
push
test
dec
je
mov
repnz
and
pushf
mov
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
mov
les
xor
push
cmp
roll
xorb
out
push
push
inc
int
and
or
and
lcall
js
jecxz
pop
adc
mov
adc
jecxz
cld
xchg
cmpsl
xchg
test
inc
inc
sbb
or
shlb
jns
inc
dec
xchg
aam
jne
insl
mov
sti
and
mov
add
test
in
adc
enter
popl
orl
adc
sbb
pushf
lcall
hlt
ja
scas
mov
xchg
out
jp
pop
pop
push
jo
jnp
jle
mov
and
in
neg
ss
lods
out
inc
scas
imul
mov
repz
js
sbb
add
outsb
push
cmpsl
int
jle
push
insl
test
cltd
sahf
xchg
rcll
dec
adc
out
dec
mov
pop
out
xchg
mov
mov
aaa
sbb
mov
xchg
aad
xchg
sub
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
cmp
inc
cmpl
jae
jecxz
cmp
ret
mov
in
dec
dec
fsubl
stos
fs
cmp
xchg
fcomps
stos
in
insl
ljmp
roll
dec
xchg
aas
stos
shrb
mov
sub
aam
jl
nop
xchg
incl
or
aas
shlb
dec
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
inc
fnstsw
int3
jnp
popf
cmc
hlt
std
mov
sti
and
sbb
lret
dec
sbb
fidivrl
addl
mov
ret
inc
jmp
add
sub
pushf
inc
push
push
call
dec
jl
jecxz
fwait
pusha
sbb
mov
mov
ja
sbb
dec
push
decb
adc
xor
in
inc
ficoms
sbb
ljmp
lcall
xor
rcrb
sub
sbb
and
or
nop
rorl
fsts
std
dec
jge
xchg
mov
mov
mov
jp
add
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fs
loop
out
lods
shlb
adc
ret
das
adc
sbb
pushf
lcall
hlt
jbe
scas
out
mov
ds
pop
push
jo
jp
cmp
sbb
and
in
repnz
inc
lods
iret
xor
into
orb
or
mov
dec
dec
mov
sbb
jb
mov
hlt
dec
add
xor
and
mov
rcrl
mov
into
fwait
cmp
pop
dec
sbb
stos
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
xor
in
scas
jge
dec
pop
mov
pop
inc
cmpsl
lret
fucomp
add
fldt
repnz
dec
inc
shll
adc
add
les
icebp
inc
scas
xchg
stos
cmc
adc
lods
nop
xchg
push
and
and
popa
xchg
hlt
inc
les
jecxz
cmpsl
dec
cwtl
loop
cs
fistl
outsl
xchg
and
in
ss
mov
out
and
mov
das
je
mov
sub
xchg
jbe
popf
push
sbb
add
rcll
movsb
cld
popa
xchg
repz
std
dec
data16
inc
aad
mov
pop
out
xchg
pop
loop
push
adc
and
lea
push
pop
pop
push
test
movsl
repz
and
lds
add
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
lds
sbb
mov
push
shl
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
push
or
int
imul
jmp
mov
daa
push
imul
inc
adcl
js
aad
mov
loopne
leave
xlat
pop
cmpsl
enter
inc
movsl
cltd
adc
stos
add
das
jo
ljmp
xlat
aas
add
lds
push
rcrb
sbb
inc
mov
adc
sub
pop
repz
pop
mov
sahf
sbb
dec
or
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
cmp
ret
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
xchg
mov
jo
in
out
xchg
loopne
xor
repz
inc
cmpsb
sarl
out
ud0
lock
fldl
cmp
xchg
ja
mov
mov
std
push
lret
mov
add
pop
dec
add
popf
loopne
fdivrl
sti
icebp
or
mov
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
scas
sbb
pop
in
rclb
jns
pop
mov
test
add
inc
sbb
pop
jecxz
movsl
mov
cltd
jo
bound
push
xchg
xchg
cltd
lret
movsl
mov
and
xchg
addr16
std
jmp
mov
mov
mov
adc
inc
mov
icebp
sahf
jle
and
lods
adc
in
and
shlb
dec
xchg
aam
jne
insl
bound
imull
in
jb
xlat
pop
mov
mov
jge
inc
adc
repnz
cmp
mov
stc
and
add
aas
js
or
push
icebp
or
pop
xchg
sbb
mov
cmc
cmp
push
aas
fwait
lret
in
mov
mov
or
pop
fsubl
jae
pop
inc
xor
aad
dec
fdivrl
sub
mov
push
xchg
imul
test
les
mov
iret
rcr
std
mov
test
mov
lret
mov
std
lcall
dec
xchg
mov
lds
mov
ret
insb
mov
out
mov
test
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
dec
mov
xor
push
mov
dec
pop
jo
lret
jbe
addr16
lret
xor
enter
jecxz
mov
mov
dec
mov
inc
sub
fmuls
sti
fbld
daa
or
into
pop
mov
xor
push
push
arpl
fwait
sub
sbb
mov
push
mov
adc
dec
pop
or
fnsave
sbb
fidivl
cmpsl
mov
push
out
jle
or
test
aam
mov
cmp
decl
add
inc
sbb
pop
jecxz
movsl
mov
xchg
inc
movsl
xchg
sub
pushf
ret
pop
mov
mov
sbb
sub
push
ja
inc
in
scas
cmp
inc
cmpl
in
ds
cmpsb
mov
sub
sub
dec
dec
mov
ret
loope
or
push
mov
gs
push
mov
xchg
nop
xchg
mov
outsl
xor
push
and
inc
cld
ja
adc
fadd
push
bound
cmpsl
xchg
scas
push
mov
add
in
inc
dec
cmp
push
mov
add
addr16
mov
pop
incb
cmp
sbb
adc
jmp
dec
push
add
add
andb
js
sbb
mov
dec
sbb
xchg
mov
pop
adc
mov
in
mov
bound
adc
xchg
pop
orl
addr16
fcoml
xchg
leave
arpl
cwtl
fcoml
icebp
cmpb
mov
shrl
pop
mov
insl
push
imul
test
push
pop
push
rclb
dec
mov
push
ret
movsb
fildll
loope
cld
sub
cmc
mov
or
xchg
sbb
cltd
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
jbe
pop
jp
mov
fisttps
fwait
movsb
pop
repz
bnd
lahf
inc
pop
inc
xchg
cmpl
add
dec
fistpl
and
das
lret
stos
sbb
scas
lahf
push
enter
mov
mov
pop
fstpl
dec
sbb
mov
adc
leave
ret
xchg
and
push
push
jb
scas
jmp
mov
inc
rcrb
push
dec
test
adc
lret
pushf
jne
aam
subl
imul
inc
in
lods
es
sub
sbb
test
lcall
inc
mov
xchg
and
mov
test
jmp
cmp
sahf
nop
aam
push
mov
push
push
imul
lods
adc
fsubl
cmpsb
xor
add
aam
adc
aad
sub
outsl
loop
adc
test
dec
scas
iret
dec
sbb
daa
push
mov
xchg
jne
ret
pop
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
subb
jmp
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
jecxz
int
imul
lcall
adc
mov
ret
add
stc
test
popa
shrl
push
cmp
lea
inc
push
push
decb
xlat
cwtl
jl
imul
inc
xchg
lods
hlt
xchg
sub
vandnps
push
mov
cld
mov
mov
xor
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
push
pop
mov
leave
xchg
sar
cmp
add
cmp
lds
cmp
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
shlb
das
adc
sbb
pushf
lcall
hlt
jbe
scas
out
mov
ds
pop
jbe
fs
scas
lods
add
cmpsl
ret
cs
jae
sbb
decl
aam
cli
cwtl
add
test
add
jmp
iret
movsl
mov
cmp
xor
push
in
nop
shll
fucom
cli
xor
roll
inc
test
lods
mov
cmp
and
sbb
lock
inc
adc
xchg
pop
adc
sbb
rorb
cwtl
ret
push
jnp
fistl
lret
lds
push
jns
lahf
cli
mov
cmp
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
or
test
cld
imul
outsb
cmpsb
sub
mov
inc
fimull
mov
pop
test
lods
cmp
dec
inc
leave
sub
scas
inc
fwait
lds
sub
repnz
inc
std
rorb
mov
in
sbb
mov
aaa
mov
in
push
aam
ret
inc
jge
imul
stos
cmp
cmp
fwait
insl
add
test
add
sbb
add
andb
js
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
int3
mov
xor
cmp
cmpl
ss
lea
pushf
push
nop
test
movsl
xor
test
stos
call
dec
movsl
and
mov
push
scas
mov
sub
mov
pop
xchg
movsb
lret
enter
and
dec
and
pop
cmpsl
lret
dec
movsl
push
add
adc
sub
push
popa
fsts
movsb
fstl
cld
test
xor
shll
pop
push
fdivrs
mov
aam
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
rolb
push
xor
mov
test
jae
push
xchg
ror
xor
fwait
shr
add
mov
dec
clc
jb
mov
loopne
lahf
fildll
shl
push
js
cli
dec
adc
jmp
mov
iret
adc
sbb
sub
mov
pop
aas
jle
lahf
dec
and
push
in
shl
mov
push
inc
push
pop
cmp
inc
insl
ret
sub
sbb
psubsw
test
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
mov
inc
xchg
or
push
cli
cmp
stos
xor
xor
mov
mov
fisubrl
and
lret
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
addb
xor
into
jae
ljmp
jae
push
test
push
andl
sub
stos
iret
cwtl
mov
mov
bound
mov
sub
mov
mov
pusha
push
pop
add
push
daa
sbb
mov
push
cmpb
test
inc
mov
mov
mov
and
adc
push
ja
inc
movsl
xchg
negl
fnstcw
aad
fisttps
or
in
dec
and
or
sbb
sbb
cmpsb
sub
decb
fwait
int
xor
jb
fisttpll
cmp
lds
fwait
out
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
lods
rcrb
adc
bnd
out
aas
dec
lock
jl
das
pop
iret
aad
cld
xchg
inc
outsl
arpl
stc
xchg
xor
lret
scas
loope
cmp
out
scas
mov
outsl
cs
jae
sbb
lahf
popa
xchg
lods
aam
xchg
adc
pop
dec
js
cwtl
add
mov
sub
divb
ffree
in
into
shrl
movsl
lea
add
pop
shrl
or
xlat
int
add
in
and
lahf
mov
popa
mov
add
insl
push
sub
pushf
ret
pop
mov
mov
sbb
sub
push
ja
inc
in
scas
jge
mov
mov
ds
cli
cmp
iret
je
in
mov
in
movsb
mov
pusha
cmpsl
push
mov
adc
insl
rcrb
push
cmp
pop
sub
outsb
add
dec
jb
int
sahf
pop
js
lahf
fstpt
push
aam
into
xchg
xlat
jg
xlat
sbb
jae
fcmovnu
lahf
adc
clc
cmp
shlb
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
popf
push
stos
icebp
mov
cli
ss
lds
mov
or
lahf
cltd
pop
adc
scas
clc
xor
cmpb
je
test
push
or
int
imul
jmp
mov
daa
push
imul
inc
movsb
ret
mov
pop
mov
cmp
pop
inc
in
seta
xor
lock
inc
adc
pop
adc
sbb
rorb
cwtl
ret
push
jnp
fistl
lret
lds
push
jns
lahf
cli
mov
cmp
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
or
test
jnp
sbb
cmpsb
sub
mov
mov
push
iret
sbb
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
das
push
sub
push
clc
mov
fsubrl
cmc
jl
fmul
adc
outsl
cmp
fld1
stc
jp
scas
scas
loope
sti
mov
cltd
mov
pop
cs
jae
sbb
lahf
lods
xlat
pop
sarl
dec
cmpl
adc
xor
push
inc
or
aaa
xorl
add
movsb
popf
xchg
sbb
push
mov
bound
nop
push
mov
xchg
jns
lret
subl
mov
pop
int3
push
test
sti
fwait
sti
jecxz
sbb
sbb
ja
fs
jmp
shlb
dec
xor
lods
dec
adc
xchg
lahf
push
fwait
push
mov
sub
sbb
ljmp
lret
into
jo
fnstenv
or
mov
jl
sbb
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
lds
lcall
pop
icebp
or
cmp
fs
loop
out
lods
sarl
push
cld
jb
mov
js
jl
leave
notl
lret
jg
scas
dec
cmc
adc
jno
lret
push
ret
adc
hlt
jp
mov
jne
sbb
mov
addr16
fcmovb
pop
or
lds
inc
iret
mov
dec
inc
leave
pushf
stos
mov
mov
add
dec
pop
mov
out
int
rcrl
pop
xor
add
jmp
jl
stc
adc
fsts
inc
pop
cli
add
inc
mov
lds
and
mov
fidivs
fs
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
add
pop
inc
xchg
stos
xchg
into
jns
lahf
cli
rolb
mov
xchg
push
mov
ret
lea
and
in
das
sbb
dec
lahf
jno
lahf
outsb
out
xchg
inc
cwtl
scas
ficoms
mulb
cltd
dec
push
dec
dec
lock
mov
mov
cmp
out
jae
pushf
lret
push
rcll
popf
lods
push
jae
fidivrs
sahf
sub
adc
jg
pushf
mov
pop
sarl
or
les
jae
fnsave
sbb
fidivl
aas
xorl
pop
add
inc
rolb
xor
sub
xor
out
dec
xchg
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
adc
rolb
adc
popa
push
sub
lods
xchg
sub
adc
std
and
push
ljmp
lret
jge
pop
push
push
repz
test
pop
fsub
fsts
inc
mov
xor
fidivs
inc
lds
cmp
xor
int
jae
cmp
sbb
sbb
ret
pop
inc
add
add
and
jmp
cmp
es
cld
dec
cmc
sbbl
and
adc
sub
aaa
addl
mov
mov
or
lahf
cltd
pop
adc
stos
clc
xor
cmpb
je
test
pop
or
int
imul
jmp
mov
daa
push
imul
inc
mov
das
mov
jo
push
jl
std
roll
ljmp
push
enter
mov
decb
adc
and
inc
xchg
mov
pop
dec
sbb
adc
jno
lds
inc
in
mov
pop
pop
sub
sbb
and
or
nop
rorl
fsts
std
dec
jge
jmp
jp
add
add
jp
add
cmp
lds
pop
out
pop
pusha
jle
das
pop
icebp
or
cmp
fcmovne
loop
addl
das
adc
sbb
pushf
lcall
sub
mov
dec
int
insb
decl
imul
shlb
fisttps
stc
in
jns
test
js
pop
or
and
adc
add
in
push
inc
test
mov
std
mov
xlat
mov
lods
xor
push
add
pop
das
or
addr16
stc
loope
mov
test
add
mov
faddl
stos
out
inc
mov
icebp
cwtl
add
insb
adc
mov
repnz
shlb
imul
lea
ljmp
and
call
imul
push
push
dec
in
clc
popa
mov
push
repnz
repnz
mov
fcmovb
xchg
mov
lods
mov
mov
in
scas
aas
test
fs
in
mov
jmp
jecxz
xchg
sbb
mov
filds
inc
shll
jecxz
cwtl
cwtl
popf
jmp
sub
mov
mov
out
inc
and
aas
int
and
loope
cs
sbb
les
aas
outsb
add
push
shll
inc
stos
jae
imul
mov
bound
pop
adc
push
xchg
cltd
popa
jle
mov
jmp
cmpsl
mov
inc
insl
test
push
pop
stos
gs
std
rolb
push
movsl
add
popf
jnp
sub
ja
mov
hlt
fcmovnbe
fst
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
pop
jmp
lds
adc
mov
adc
mov
push
mov
mov
xchg
pushf
xchg
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
dec
and
mov
outsl
addr16
adc
outsl
iret
fxtract
cmc
jge
outsl
dec
and
imul
mov
popa
stos
add
xor
jb
jmp
xlat
xchg
cmp
mov
xor
xor
daa
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
lds
mov
les
cmp
lock
inc
pop
jecxz
movsl
mov
cltd
jo
or
cmpsl
push
or
inc
jg
in
mov
repnz
pop
dec
xor
fcmovne
push
inc
push
and
cmp
das
push
lcall
repnz
int
cwtl
nop
std
pop
mov
ret
jb
jo
scas
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
rcr
ret
sahf
ficomps
jnp
inc
mov
add
adc
cwtl
add
and
mov
mov
negb
xor
jnp
jo
jae
fidivrs
mov
rcll
xor
adc
sbb
xchg
arpl
popa
inc
imul
inc
inc
push
push
and
negb
popf
divl
inc
xchg
sahf
sarl
add
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
mov
sbb
xor
in
scas
cmp
inc
cmpl
popa
les
push
mov
push
outsb
mov
sbb
arpl
push
mov
mov
faddp
mov
aam
out
jns
dec
mov
and
into
sub
das
cmpsb
repz
add
cmp
call
jb
add
roll
mov
sarb
mov
cmc
or
or
mov
fmull
pop
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
jecxz
lea
and
andl
fwait
ror
xchg
rolb
jb
inc
inc
pusha
ds
out
inc
xchg
jp
call
into
inc
xchg
sub
idivb
rol
leave
and
shlb
fsts
inc
pop
mov
insl
movsl
mov
jg
adc
mov
adc
sbb
mov
mov
mov
rcrl
shll
test
mov
sbb
mov
push
dec
pop
jl
rcl
lcall
sbb
cmp
mov
cmpl
mov
outsl
aad
stos
call
cmc
jg
out
xor
into
lock
dec
das
push
iret
lret
add
inc
call
xor
and
cmp
out
mov
js
cs
repnz
jns
outsb
ret
lahf
cli
cwtl
add
test
add
sbb
and
cwtl
push
and
andl
and
xchg
push
sbb
cli
xor
add
in
and
xor
repz
adc
and
jns
pushf
rcrb
sbb
sbb
or
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
push
mov
insl
aam
rol
mov
xchg
int3
js
rcrb
sbb
xchg
sub
insl
jle
mov
je
xor
inc
sbb
in
scas
aas
test
pop
aad
mov
pop
xchg
test
xor
jae
jle
scas
leave
test
cltd
scas
push
repz
jo
cwtl
ret
jg
ja
jecxz
sti
jge
outsl
outsl
call
stos
subl
out
scas
mov
pop
cs
icebp
pusha
stc
inc
iret
es
jl
cwtl
ret
test
inc
and
adc
aaa
mov
outsl
mov
jne
mov
aad
sbb
or
ljmp
insl
mov
daa
jo
push
sbb
inc
and
add
lahf
jmp
lock
sarl
clc
inc
mov
jmp
cmp
lds
cs
cmpsb
ret
outsb
xor
and
lods
pop
movsb
hlt
in
lods
jae
popf
jnp
inc
loop
cmp
and
fmuls
pop
sbb
sbb
les
pop
dec
dec
pop
pop
push
dec
fs
cwtl
push
mov
lods
xchg
push
es
and
mov
push
cmc
cwtl
fwait
and
dec
les
jle
dec
daa
or
scas
outsb
or
add
xor
das
loopne
incl
js
lock
dec
mov
adc
push
test
test
fidivl
addr16
inc
fcmovne
repnz
lods
fnstenv
mov
push
iret
mov
sub
cs
mov
cmp
xlat
adc
ret
test
mov
rorl
jmp
hlt
xor
adc
ret
ficomps
mov
sub
shll
testb
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
cmp
inc
cmpl
jge
pop
push
push
aad
and
jbe
lods
push
fmuls
xchg
test
push
push
fnstsw
dec
sub
stos
les
aam
add
mov
incb
inc
imul
ss
ja
orl
mov
daa
add
icebp
push
or
adc
sbb
xor
repnz
xor
mov
push
pop
pop
imul
add
mov
xchg
ds
cmovae
lret
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
add
dec
mov
shll
aad
mov
adc
push
leave
int
and
aaa
leave
fcoml
insl
movsl
cwtl
icebp
movd
jne
mov
push
scas
shlb
pop
push
lods
stc
icebp
push
lret
inc
sarl
push
sar
lcall
pop
cmp
cli
xchg
add
mov
movsb
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
cmp
and
lret
add
mov
outsb
rcll
cwtl
jge
jge
outsl
jg
std
xchg
xor
lret
scas
in
lock
mov
jnp
sahf
sub
ljmp
mov
shll
mov
mov
nop
lds
dec
dec
adc
test
adc
and
push
inc
push
call
int
push
sub
sbb
jl
inc
push
out
push
xor
add
sarl
xchg
roll
mov
insl
lcall
push
out
fdivp
dec
xorb
sub
mov
push
fcoml
push
test
mov
lahf
cmp
pop
dec
sbb
add
cmp
or
cmp
adc
mov
push
enter
rcl
lcall
sbb
movsb
inc
sbb
scas
mov
push
int
push
sbb
sbb
ret
xchg
mov
cmp
cmp
pop
mov
sub
fs
lcall
stc
in
mov
and
add
xchg
sbb
aas
pop
xor
xor
daa
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
adc
inc
mov
les
cmp
mov
cmp
xor
leave
add
mov
or
mov
fcomp
xor
cmp
jge
jge
adc
ret
scas
gs
mov
cmp
mov
xchg
repnz
push
in
sahf
jns
loope
pop
fcmovbe
add
in
jg,pn
shl
je
sub
out
test
aad
pop
cltd
enter
lods
mov
mov
in
scas
sub
fisubl
in
out
gs
out
sub
int3
out
movsb
andl
in
cwtl
add
les
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
mov
xchg
push
hlt
mov
movsl
pop
das
idivl
mov
adc
cmp
push
sbb
push
mov
push
xor
sbb
sbb
xor
mov
xor
inc
inc
push
inc
decb
aad
push
int3
mov
xchg
scas
sbb
outsb
xor
push
inc
ficoml
lea
mov
int
jns
adc
mov
mov
cs
cmp
mov
lret
outsb
movsl
cwtl
pop
inc
sbb
pop
out
push
mov
fcoml
dec
cltd
lods
je
les
cmp
push
sub
and
in
jge
xchg
mov
jnp
or
add
das
inc
iret
shl
ja
std
outsl
addr16
xchg
adc
and
mov
jnp
mov
lock
int3
add
popf
iret
out
aam
fwait
xchg
pushf
ret
addr16
sub
or
dec
cmp
or
inc
jge
je
aas
ja
inc
in
pusha
into
gs
xchg
movsb
mov
loope
inc
jg
pop
in
stc
xchg
ja
iret
push
lret
mov
sub
mov
cltd
mov
push
pop
ljmp
cmpsb
sub
ja
mov
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
fadds
fisttpl
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
inc
cli
and
out
jno
insb
out
pop
mov
leave
inc
out
cld
jb
mov
lock
aas
rclb
jge
pushf
mull
out
jo
pop
push
cmpl
jp
mov
sti
fucomip
andl
jo
in
adc
pop
mov
inc
mov
push
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
cmp
dec
call
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
push
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
xchg
lods
push
outsl
sbb
fmuls
or
shlb
jnp
xchg
and
mov
xchg
add
sti
and
add
inc
mov
leave
pop
sbb
js
in
xchg
jl
sbb
fistl
popl
push
jo
xor
push
rcrl
jb
mov
or
in
insl
xchg
popf
pop
adc
ljmp
repz
out
icebp
mov
xchg
sbb
ljmp
mov
stos
jae
nop
and
xchg
inc
gs
or
adc
inc
lret
mov
cs
jmp
cli
and
or
dec
xchg
mov
test
lcall
dec
test
cmp
cmpsl
mov
nop
pop
lret
cwtl
mov
aam
mov
xchg
push
negl
in
lods
mov
fldenv
cmpl
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
xchg
lcall
cmp
stos
in
mov
jb
aaa
insb
into
or
xor
pop
rcll
push
pop
xor
sub
repz
inc
mov
sbb
outsb
jo
xchg
sahf
sar
stos
ljmp
inc
xor
or
call
mov
sub
xchg
add
xor
sub
adc
xor
lods
iret
xor
into
xchg
and
rclb
xchg
loopne
or
push
mov
loop
enter
xchg
push
sbb
push
jle
jecxz
mov
adc
xchg
cltd
mov
ljmp
test
sbbb
mov
jp
add
insl
push
sub
pushf
ret
pop
mov
pop
adc
pop
jg
adc
test
push
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
add
adcb
jg
shl
je
outsb
test
dec
sub
scas
push
jnp
adc
cmpsl
insb
mov
lods
jbe
mov
fistl
push
fs
mov
mov
cmc
jge
fisttpll
rol
mov
pop
push
cmp
mov
in
aaa
sbb
mov
pop
xchg
enter
and
ss
lds
mov
or
lahf
cltd
pop
adc
stos
clc
xor
cmpb
je
test
push
or
int
imul
jmp
mov
daa
push
imul
xchg
arpl
jle
push
jmp
clc
jp
call
int3
cwtl
cltd
sti
in
aas
imul
inc
out
lds
xchg
movsl
aam
fisubrs
test
mov
mov
repnz
inc
push
int
add
decl
ret
fs
inc
fcomps
lds
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
stos
clc
dec
fnstsw
mov
sbb
scas
pop
adc
add
sbb
into
loop
jnp
jl
das
dec
iret
ror
jmp
push
je
out
dec
pushf
sub
adc
push
sbb
xor
icebp
in
jns
outsb
out
lahf
stc
cwtl
shrl
pushf
ret
addr16
sub
or
sub
adc
rcrl
dec
mov
jbe
into
cmp
jle
mov
push
sahf
sub
stos
nop
sbb
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
aad
inc
sub
inc
fs
push
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
jp
jge
scas
xchg
iret
stc
push
shlb
push
mov
rolb
jb
pop
push
aam
push
mov
and
mov
mov
push
movsb
lods
push
cmc
out
mov
or
pusha
aas
sahf
push
addl
inc
mov
pop
icebp
add
and
adc
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
lods
stos
loopne
hlt
js
and
cmpb
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
inc
pop
mov
or
aas
iret
fucomip
test
sti
mov
jb
jae,pn
cld
inc
daa
xchg
lret
bound
or
jo
iret
cmpsl
mov
adc
xchg
scas
insl
lret
sub
push
ja
inc
movsl
jecxz
sbb
fnstcw
aad
fisttps
or
in
dec
and
or
pop
imul
outsb
cmpsb
sub
decb
fwait
int
xor
jb
fisttpll
cmp
lds
fucomi
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
fwait
outsl
outsl
call
jae
daa
ja
mov
mov
fucomp
push
jg
lahf
lods
xlat
lret
cmpsl
leave
mov
add
jle
nop
lds
dec
pop
or
push
out
pop
adc
and
xchg
out
inc
ret
mov
xlat
pop
pop
inc
or
idiv
sti
add
test
sbb
daa
push
sahf
jbe
push
push
jle
sbb
stos
xchg
mov
cmpsb
stos
mov
outsb
mov
in
mov
shr
push
popf
mov
rcrb
jne
cmc
fwait
inc
rcrl
sbb
jae
les
sbb
or
dec
xchg
leave
add
push
out
mov
or
movsb
js
jbe
xor
frstor
mov
test
popf
adc
cli
jnp
inc
mov
add
adc
outsb
cwtl
add
and
mov
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
subl
outsb
add
jle
nop
inc
stos
jae
repnz
or
xor
ja
repnz
pop
movsl
jnp
enter
das
mov
xor
mov
push
test
popa
mov
mov
dec
and
int
sub
into
cltd
xchg
mov
ljmp
pop
cmp
dec
dec
cmp
aaa
pop
push
lods
loope
push
lret
inc
fidivs
jge
mov
lcall
adcl
cmp
cli
xchg
add
aas
or
pop
push
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
mov
mov
pop
jb
add
xchg
js
std
decl
mov
pop
push
pushf
jmp
jno
sbb
ss
in
cli
loopne
xchg
jle
leave
sahf
xor
jg
lahf
lods
xlat
xor
pshufw
rclb
push
dec
pop
mov
mov
sbb
push
ret
es
andl
leave
bound
test
cmpl
cmpsl
enter
mov
xchg
xor
daa
sub
push
dec
xchg
mov
js
cmpsl
xor
fsubrl
cltd
mov
insl
movsl
imul
sub
pop
test
lock
fcmovnbe
data16
sub
int
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
sarb
xchg
mov
fcompl
aad
xor
xor
fwait
movsb
pop
repz
loop
push
jae
fwait
cmp
leave
or
cli
mov
cmpb
sbb
insl
or
and
xchg
xor
icebp
iret
test
pop
nop
pop
aam
sbb
dec
mov
repz
inc
daa
fisubs
jge
movsl
push
je
xchg
mov
mov
faddl
jp
or
mov
cmp
and
dec
sbb
xchg
mov
imul
jns
pop
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
inc
and
nop
shrl
dec
popa
ret
ret
sbb
into
and
call
int3
mov
and
and
iret
push
mov
enter
sarl
stos
xor
sub
jae
in
dec
jg
sub
subl
fcmovb
sbb
pop
cmp
in
repz
pop
inc
add
lret
or
sbbl
cmp
es
dec
xor
and
adc
sub
ja
aas
call
mov
mov
or
mov
add
push
std
bound
cltd
add
mov
int3
out
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
test
call
iret
iret
shll
add
jae
and
mov
popa
jmp
mov
add
faddl
sbb
sarb
jno
rcrl
jns
leave
test
roll
push
fbstp
je
pop
iret
sbb
rcr
loopne
mov
xor
xchg
mov
cmp
adc
mov
push
test
mov
xchg
pushf
xchg
lcall
sbb
cmovns
and
inc
fwait
leave
cld
mov
das
and
bsr
adc
cmc
jmp
movq
clc
xchg
cmpsl
cwtl
incb
fnsave
divb
aas
xor
xchg
ret
fdivrp
pop
pop
iret
rorl
adc
or
stos
aam
enter
loopne
hlt
mov
xchg
mov
add
orl
sub
xchg
adc
pop
stos
pop
add
cwtl
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
push
xchg
movsb
data16
imul
movsl
and
push
into
sub
dec
pusha
in
dec
mov
jno
imul
adcl
mov
frstor
add
mov
fcmovb
xchg
and
fldenv
xchg
add
int3
jp
test
and
inc
cld
ja
adc
fadd
push
stc
and
int
or
ret
jb
mov
stc
xor
or
cmp
jmp
or
jnp
testb
fucomi
hlt
std
mov
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsl
aam
dec
sbb
sub
push
mov
insl
aad
insl
ficomps
fldcw
fists
push
aaa
mov
imul
fildll
push
bound
sub
xchg
pop
sub
stos
push
repnz
aam
adc
push
pop
xchg
enter
dec
scas
lds
sbb
into
xor
pop
add
push
cld
loop
ja
or
inc
or
push
xchg
add
cmp
repnz
xchg
out
scas
mov
cwtl
inc
stos
adc
imul
in
mov
mov
or
lahf
cltd
pop
adc
stos
clc
xor
cmpb
je
test
loope
and
arpl
es
inc
inc
and
push
idivl
int
loop
lret
and
push
sbb
and
add
mov
mov
add
outsl
hlt
jmp
decb
push
insb
jne
inc
xor
cmp
je
imul
call
mov
add
sbb
xchg
std
pusha
and
fmull
into
sahf
jg
stos
xorl
push
jg
shlb
jnp
lock
mov
data16
mov
in
in
xchg
paddusw
xchg
cmpsl
dec
cwtl
xchg
xor
fucomi
mov
adc
dec
repnz
sbb
inc
mov
imul
fstl
out
daa
mov
stc
fildll
ror
jg
dec
movl
jno
pop
rcrl
push
jecxz
in
fsts
out
mov
popf
jae
adc
adc
movsb
iret
out
xor
nop
lret
cmpsl
mov
sbb
cli
inc
mov
ja
sbb
test
loopne
inc
fcomip
fsubr
loopne
sbbl
ret
inc
mov
sbb
insl
rolb
gs
rcrb
repnz
mov
int
inc
sbb
fwait
clc
mov
jnp
in
and
int3
xchg
sbb
std
fistpll
stc
mov
mov
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
sahf
pop
and
jle
test
cld
mov
pop
xor
addr16
dec
push
cmp
leave
lock
jl
pop
je
sbb
pop
push
inc
out
out
jae
pushf
sub
lea
jae
fidivrs
sahf
sub
adc
jg
lahf
lods
xlat
pop
sarl
dec
cmpl
adc
xor
push
inc
or
fwait
sub
imul
cmpsb
mov
xor
dec
ja
or
mov
mov
jle
xor
aam
aaa
test
mov
hlt
push
aas
push
mov
adc
shl
adcl
lret
xchg
movsb
data16
cmpsb
ret
adc
sub
insl
into
sub
cs
in
mov
xchg
shr
cmp
xchg
dec
xor
ret
subl
inc
dec
xchg
push
mov
inc
mull
inc
lods
xchg
inc
sbb
loopne
fbstp
fists
pop
enter
pop
movsl
arpl
mov
xchg
iret
mov
sub
pop
mov
ficoms
ja
stos
inc
fimull
add
shll
pushf
inc
rcrb
repnz
mov
xchg
pop
sub
xor
sub
sub
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
lds
mov
pop
jb
mov
iret
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
sub
jne
mov
sub
push
enter
adc
push
or
insl
mov
aaa
jb
ficoml
movsb
shll
lock
inc
cs
xor
repnz
cs
stos
push
dec
jg
shl
mov
sub
mov
sti
mov
dec
stos
inc
in
pop
inc
sub
push
es
test
shr
pop
bnd
xchg
mov
out
pop
mov
and
std
flds
stos
bound
sbbl
mov
sbb
mov
shr
jmp
jnp
out
mov
out
loopne
js
xlat
cmp
lahf
lea
stc
testb
pop
test
mov
or
ret
imul
rorb
mov
repnz
movsb
dec
int
push
mov
out
mov
clc
sti
jne
pop
int3
fistl
and
daa
adc
subb
or
dec
pop
shll
mov
push
divb
push
daa
sub
test
push
push
sub
add
mov
popa
in
movb
imul
xchg
mov
inc
out
add
fwait
cmp
xchg
xchg
fistl
test
add
or
lea
pop
lds
pop
jmp
pusha
jle
das
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
outsb
cwtl
add
and
mov
mov
negb
ret
push
jae
lret
sub
inc
xchg
pop
xor
lods
cmp
jle
lods
out
std
inc
arpl
out
fxch
lds
add
inc
in
fcmovbe
mov
xchg
inc
xor
mov
or
pop
mov
lcall
seta
dec
rcr
or
xchg
sbb
repnz
adc
jl
clc
sub
int
inc
jmp
rcrb
ficompl
jne
mov
in
dec
sub
movsb
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
popf
imul
outsb
cmpsb
sub
mov
adc
mov
leave
ljmp
jae
in
mov
scas
shrb
mov
mov
test
mov
pop
xchg
data16
push
fisubs
jb
jo
inc
int
xchg
test
repz
jp
mov
movsb
inc
sbb
imulb
es
jb
or
lahf
lcall
adc
pop
pushf
inc
addr16
or
dec
cmpsb
dec
idivl
xor
xor
adc
and
push
inc
push
push
push
lds
mov
cmpsb
test
ljmp
jmp
mov
jo
outsl
add
mov
or
mov
push
stos
and
dec
pop
push
mov
and
je
push
clc
lods
pop
imul
or
pop
cmp
in
cmp
mov
popf
lret
out
leave
sub
dec
push
mov
ret
loope
push
orb
mov
stos
outsl
sub
dec
and
adc
dec
dec
push
jno
popa
cmpl
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
out
fsubs
pop
mov
gs
pop
sarl
out
push
test
xchg
add
or
mov
sub
sbb
push
inc
roll
sbb
mov
cmp
push
addr16
or
and
cmp
sbb
sbb
xor
mov
daa
inc
lods
dec
jmp
decb
aad
aad
xchg
mov
leave
pushf
dec
and
adc
and
cmp
xor
into
ffreep
pop
xor
fst
mov
je
mov
add
ret
sbb
xchg
pop
push
cmp
ret
adc
sbb
mov
push
xchg
lahf
lret
dec
push
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
cmpsb
sti
xlat
in
jns
fisttpll
icebp
cwtl
ret
data16
mov
add
xchg
imul
ja
and
or
inc
rolb
or
fsts
xchg
push
mov
pop
loopne
mov
cmp
or
mov
in
inc
rcrl
add
ljmp
or
int
nop
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
sbb
cltd
enter
lods
mov
mov
lods
into
fsubrl
sub
cmpxchg
out
jno
sbb
jno
arpl
out
rol
shrb
cmc
jl
das
dec
xor
mov
fwait
scas
fsubl
adc
push
rcl
ss
cmp
ja
mov
stc
in
loop
vaddsubps
mov
mov
inc
orb
ds
mov
jo
dec
mov
lcall
and
or
adc
popf
je
cwtl
mov
mov
jae
ljmp
add
add
mov
sbb
orb
xor
mov
cld
mov
shl
or
shrl
fsubl
sub
xor
sub
inc
ret
pop
daa
mov
aam
xchg
cli
adc
mov
lcall
sti
stos
xchg
add
xlat
loope
movsb
fstl
fsubl
cltd
jg
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
inc
dec
cld
or
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
out
fsubs
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
mov
mov
inc
and
or
loopne
cmp
adc
and
push
dec
push
xchg
push
movsl
mov
fwait
add
mov
mov
jo
xor
and
add
out
inc
mov
and
mov
data16
cmpsb
ret
mov
xor
xorl
jle
mov
and
je
fwait
int
xor
cmp
ret
adc
sbb
mov
push
xchg
sahf
lret
dec
push
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
mov
inc
out
add
clc
dec
mov
fs
mov
adc
jbe
je
pop
push
out
mov
iret
sahf
mov
fld1
insb
icebp
mov
lahf
popa
cmpsb
push
and
add
data16
test
mov
nop
inc
stos
jae
nop
and
push
data16
repz
mov
push
add
rcll
ret
aam
push
inc
movsb
jle
xor
mov
imull
adc
xor
sbb
cmc
in
pushf
cmp
sub
outsl
pop
lea
lods
jl
fcomip
xor
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
cmpsb
mov
aam
movsb
xor
jmp
sarb
stos
pop
xchg
repz
ret
cmpsl
inc
and
in
jge
pop
adc
in
add
iret
jne
cld
jae
sub
xchg
push
fcmove
xchg
hlt
ja
std
outsl
addr16
call
rcrl
mov
add
push
pop
into
vpshuflw
mov
lcall
cli
pusha
and
mov
mov
insb
je
scas
jge
fs
lret
cmpsl
mov
sbb
jp
out
outsb
jp
add
test
fnstenv
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
test
aas
movsb
lds
nop
lds
mov
fldenv
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
stos
sub
xchg
gs
outsb
pop
cltd
enter
lods
mov
mov
lods
into
fsubrl
sub
cmpxchg
out
jno
sbb
jno
arpl
out
rol
shrb
xchg
dec
iret
ror
cmc
arpl
xchg
mov
fistpll
mov
js
call
iret
adc
ret
and
popf
int
mov
mov
int3
pop
nop
xchg
test
popa
mov
xorl
subb
jmp
jnp
dec
cmpsb
mov
xor
dec
int
adc
test
xor
loope
iret
inc
filds
pop
mov
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
js
test
cld
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
out
adc
xchg
stos
aam
and
xor
roll
lea
scas
scas
data16
ljmp
xchg
cs
int3
push
lret
and
js
xchg
adc
sbb
mov
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
pop
imul
push
hlt
mov
popa
dec
mov
aas
test
xchg
jno
pop
mov
or
jno
adc
dec
popa
repz
and
adc
je
or
or
push
stos
data16
push
mov
push
cmpsb
ljmp
jnp
jne
and
lds
inc
in
aas
pop
mov
rcrb
sub
sbb
and
or
nop
rorl
fsts
std
dec
jge
out
mov
mov
jns
jp
add
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
xchg
and
add
out
call
jmp
loop
sbb
lods
adc
and
push
dec
push
adc
inc
mov
mov
pusha
fimull
push
lods
inc
rcr
cmp
add
outsl
hlt
sbb
push
inc
out
mov
xchg
scas
sub
int3
dec
pop
fwait
mov
and
loope
jne
mov
and
in
lret
cmp
subb
pop
imul
mov
shrl
cs
or
xchg
push
mov
inc
mull
inc
lods
xchg
inc
sbb
loopne
fbstp
fists
pop
enter
pop
movsl
arpl
mov
xchg
mov
filds
orb
sub
xchg
cwtl
cwtl
popf
jmp
dec
mov
mov
inc
add
test
in
xor
and
jmp
cmpsb
in
adc
pop
mov
inc
mov
push
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
cmp
dec
call
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
push
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
lds
sbb
mov
push
shl
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
cmp
push
jge
push
and
repnz
hlt
add
pop
ror
arpl
pop
xchg
inc
dec
inc
sahf
dec
mov
into
daa
mov
pop
xor
add
cmp
les
push
add
mov
pusha
imul
add
les
data16
xchg
iret
pop
xor
insb
cmp
je
imul
push
aaa
pop
push
lods
xchg
icebp
push
lret
inc
ficomps
jge
mov
lcall
adcl
cmp
cli
xchg
add
pop
or
pop
push
sub
push
test
or
stos
xor
xor
mov
mov
mov
mov
pop
jb
add
dec
sbb
add
or
push
mov
out
pop
int
inc
mov
jns
mov
xor
movl
call
pop
xor
cmc
lds
mov
sbb
mov
loope
insl
or
ljmp
push
mov
aam
push
dec
add
mov
cmp
jp
add
add
mov
sbb
cltd
orb
xor
mov
test
sub
push
enter
jmp
dec
sbb
movsb
cmpsl
adc
movsb
fisubrs
cltd
jge
dec
inc
mov
hlt
lods
push
lods
jnp
mov
mov
xchg
jno
mov
je
loop
pop
cltd
enter
fistl
xchg
push
mov
aas
test
cmp
and
stc
push
xor
arpl
das
push
sub
sbb
repz
out
das
dec
lock
jl
addr16
sub
jo
inc
int
dec
and
xchg
add
lods
repz
adc
sbb
test
cmp
push
adcl
decb
xor
xchg
inc
dec
aaa
or
dec
cmpsb
dec
idivl
shll
rcrl
or
cmc
imul
sub
repnz
add
inc
shlb
scas
jecxz
or
inc
aad
fwait
scas
mov
jno
das
and
mov
in
arpl
mov
jg
cmp
push
push
mov
sub
jne
stos
mov
pop
mov
mov
mov
jp
daa
push
or
arpl
inc
subl
out
xorl
sahf
repnz
mov
xor
scas
iret
dec
sbb
shlb
inc
addr16
inc
lock
jns
xor
mov
icebp
jbe
test
sbb
loop
mov
fidivs
ja
pop
inc
push
movsb
mov
adc
mov
xchg
push
mov
fsubl
jne
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
mov
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
mov
lock
ret
push
push
jle
sbb
ljmp
adc
int3
inc
mov
and
shrl
repz
aaa
stc
push
pop
fldt
sahf
jbe
and
inc
cmpsb
mov
shrb
icebp
push
mov
mov
repnz
daa
jne
insl
bound
sub
rsqrtps
ret
mov
sbb
or
js
fisubs
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
adcl
aad
cmpsb
ret
test
inc
inc
and
add
inc
and
adc
xor
in
inc
cltd
aas
ja
int
popf
mov
icebp
xchg
jle
sbb
roll
insl
cmc
imul
test
icebp
testb
dec
inc
add
dec
mov
jno
push
popf
dec
and
or
sbb
jnp
xchg
leave
or
pop
push
outsb
shlb
leave
jns
or
push
clc
lock
lods
jle
cltd
je
dec
enter
fisubrl
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
daa
xlat
shr
lock
xchg
int
jno
jecxz
shrb
rcrl
adc
add
invd
andl
gs
dec
and
or
xchg
jmp
sbb
push
mov
filds
call
into
pop
sbb
xor
adc
lock
adc
inc
inc
sbb
gs
ret
sub
lea
pop
sub
and
cltd
lret
lcall
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
mov
pop
cltd
xchg
inc
dec
inc
jne
dec
inc
popf
aas
stos
shrb
push
xchg
xlat
dec
les
jle
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jge
inc
mov
jle
outsb
ds
je
jbe
jg
dec
add
mov
xchg
sbb
int3
aaa
push
mov
rcr
pop
fidivrs
jnp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
xchg
adc
ret
subl
adc
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jecxz
shll
inc
cmp
cwtl
fcoml
das
xchg
shrl
fst
outsl
mov
imul
pop
xchg
dec
mov
ficoms
scas
shr
stc
popf
pop
push
pop
pop
aas
adc
mov
push
sahf
jno
jecxz
fmuls
or
repnz
and
sbb
movsl
iret
fsts
add
inc
lcall
cmp
sbb
xchg
jo
sub
repz
mov
lds
mov
pop
push
mulb
cltd
dec
push
adc
rorb
cmc
jge
mov
divl
out
jae
popf
add
sti
jnp
out
scas
mov
lret
xchg
in
icebp
in
jns
outsb
out
lahf
stc
cwtl
shll
or
sbb
push
data16
scas
sti
lret
mov
das
cmp
lret
xchg
jnp
enter
pop
movsl
pop
inc
sahf
xor
fbld
stos
into
jp
dec
xlat
cmp
sbb
stos
dec
les
pop
adc
mov
ret
xchg
movsb
sbb
and
pop
pop
loop
cmc
stos
push
push
mov
imul
pop
adc
xchg
sbb
pop
outsb
hlt
sub
sub
ret
dec
movsb
mov
adc
cmc
ljmp
cltd
lods
cmp
fsubs
push
xor
xor
pop
ret
jge
or
ret
adc
sbb
rolb
inc
clc
or
fwait
push
dec
mov
and
adc
cs
pop
jae
inc
insl
out
sbb
inc
add
pop
stos
ret
mov
jb
mov
aam
and
scas
xchg
sub
inc
mov
pusha
lock
lahf
out
xor
aam
adcb
shl
add
or
pop
mov
lcall
mov
cltd
lret
mov
pop
adc
sbb
rorb
cwtl
ret
push
jnp
fistl
lret
lds
push
jns
lahf
cli
mov
cmp
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
add
xchg
lcall
push
and
and
popa
xchg
jecxz
mov
imul
add
es
mov
inc
clc
nop
andl
mov
scas
adc
xchg
cmp
pusha
out
and
hlt
mov
mov
dec
mov
repnz
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
push
test
mov
cmpb
xchg
add
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
daa
and
mov
push
dec
cmpsl
sbb
mov
sbb
loop
mov
and
xor
dec
movsl
arpl
inc
test
scas
push
push
pop
loopne
sub
inc
ret
jnp
popa
jbe
lods
push
xchg
mov
inc
repnz
jns
inc
mov
and
push
js
push
cmpsl
pop
pop
mov
inc
xchg
dec
scas
iret
dec
movsb
ljmp
jp
push
shl
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
scas
clc
xor
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
cmp
ret
les
xor
push
cmp
roll
xorb
out
push
push
inc
int
and
pop
test
lret
sub
cmp
int3
mov
push
add
pop
lcall
divb
jo
xor
sbb
or
pop
adc
pop
sub
jp
add
cmp
push
push
xlat
mov
sahf
xchg
sbb
js
xchg
xor
test
xor
hlt
das
pusha
enter
bsr
adc
cmc
jmp
cmpsl
ds
int
incb
mov
addr16
imul
xlat
xor
imulb
mov
sub
adc
sbb
sbb
insb
pop
loopne
pushl
stos
popa
test
lds
xchg
mov
pop
cmpb
pop
mov
mov
jns
sub
inc
pop
pop
fwait
sahf
shrl
mov
pop
mov
test
add
in
mov
imul
cltd
jo
lock
jge
or
or
adc
push
cwtl
push
test
and
ja
lds
sub
mov
cmp
ljmp
fisubrs
addb
add
add
test
sub
test
mov
inc
ret
icebp
shlb
dec
les
test
sahf
movsb
push
sub
outsl
les
fs
mov
cmp
clc
lock
mov
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
popf
push
stos
icebp
mov
ret
cmpsb
mov
mov
jmp
std
mov
sti
and
test
jg
sbb
xchg
push
hlt
mov
xchg
test
push
lds
pop
repz
fwait
pusha
or
scas
adc
adc
sbb
cld
loop
inc
sbb
ljmp
outsl
aam
sub
jae
pop
push
mov
cmpsb
shlb
push
stos
lea
aad
lea
pop
mov
jne
cmc
fwait
inc
shrl
push
sahf
jns
loope
pop
fisubrl
inc
dec
fsub
ja
in
jg,pn
shl
je
sub
loope
leave
and
jmp
fimull
push
jecxz
iret
push
sbb
lahf
scas
jg
or
jg
pop
rcll
sbb
aas
cmpsl
sub
sub
push
stos
cmp
repz
push
xchg
lods
out
cmp
cwtl
push
scas
xor
and
cld
xor
stos
fldt
ror
cs
repz
jns
outsb
out
sti
cmpsl
dec
cli
and
sub
dec
ret
xchg
insb
adc
push
subb
xchg
dec
dec
xor
mov
repz
jnp
divl
jnp
pop
jno
xlat
xlat
faddp
ret
ret
xor
mov
je
add
int
pop
fcomi
imul
scas
inc
xor
in
mov
pushf
dec
and
mov
es
test
sahf
mov
in
mov
cli
fwait
lret
repz
or
adc
aad
sbb
bound
mov
and
sub
outsl
push
inc
fmuls
and
int
jae
cmp
ret
data16
scas
ret
test
cmc
cwtl
mov
std
jmp
and
mov
imul
xchg
incl
clc
hlt
lcall
or
or
push
test
in
xchg
pop
aad
repz
jne
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
and
movsl
adc
push
add
cmp
ret
les
xor
push
cmp
add
int
das
aad
stos
ds
hlt
movsb
dec
ja
push
xchg
fnstenv
pop
mov
test
sahf
jmp
jne
rcrb
aaa
xlat
xchg
cmp
mov
xchg
repz
cmp
icebp
add
push
cmp
sbb
int
or
fwait
xor
xchg
int
xor
jb
fisttpll
cmp
lds
pop
jmp
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
or
sbbl
inc
and
cltd
sbb
daa
adc
mov
addr16
inc
and
push
dec
push
adc
inc
mov
mov
inc
negl
xor
xor
mov
add
outsl
hlt
jmp
add
ds
hlt
movsb
dec
ljmp
stos
imul
pop
ret
inc
pusha
jnp
sbb
pusha
mov
out
inc
imul
ret
mov
in
inc
dec
fsubl
stos
inc
repnz
jns
mov
aam
out
jns
dec
call
into
sub
das
cmpsb
repz
insl
add
cmp
call
push
jg
leave
xor
les
xchg
sbb
sbb
mov
in
fidivrl
cmp
jmp
std
stos
mov
mov
jae
lahf
outsl
aas
addl
mov
sti
sti
and
test
fisubrs
shrb
cmp
mov
popa
dec
mov
into
scas
stos
shll
inc
xchg
in
mov
sub
test
mov
inc
mov
aaa
scas
stc
aaa
add
mov
push
ficompl
pushf
dec
and
mov
or
fisubl
cmp
inc
push
inc
dec
pop
adc
ret
mov
mov
pop
cmpsb
in
or
and
mov
mov
insb
in
push
and
movsl
push
xchg
lret
add
jge
sub
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
js
inc
mov
jne
mov
cmp
mov
and
adc
sub
pop
jae
inc
insl
out
pop
aad
jns
mov
call
sub
jge
pop
lods
test
sbb
xor
or
add
lock
or
add
mov
sub
or
dec
js
mov
bound
dec
cmp
push
mov
cld
mov
sbb
xchg
xchg
adc
sbb
xchg
and
daa
adc
mov
cmpsb
sbb
mov
sub
mov
xchg
sub
push
mov
mov
adc
imul
sub
push
aaa
push
lea
mov
ljmp
in
mov
mov
adc
sbb
insl
cwtl
and
pop
shrl
test
fistl
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
cmp
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
stos
ret
mov
jb
mov
aam
and
scas
xchg
sub
inc
mov
pusha
lock
lahf
out
xor
aam
adcb
shl
fwait
loopne
test
and
sub
jb
mov
cmc
cmp
cmc
out
pop
dec
push
lcall
adc
ljmp
and
jl
adc
and
mov
dec
sbb
mov
jg
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
lods
cmp
pop
dec
out
cmp
xchg
inc
jge
inc
insb
out
fwait
mov
test
bound
mov
into
iret
cmp
cs
push
pop
lcall
shlb
mov
pusha
add
mov
inc
jl
xchg
add
fadd
pop
loop
mov
inc
int
lods
repnz
nop
test
pop
mov
insl
movsl
xchg
cltd
sahf
or
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
test
fistl
xor
sbb
test
lcall
daa
and
iret
mov
sbb
sub
push
ja
inc
in
scas
cmp
inc
cmpl
movsb
mov
ret
xor
xchg
out
test
mov
in
movb
xchg
das
fcomp
push
jne
sahf
repnz
mov
jae
fs
xor
insl
cltd
roll
inc
fstl
sbb
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
mov
mov
hlt
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
scas
clc
xor
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
cmp
ret
les
xor
push
cmp
roll
das
aad
stos
ds
hlt
movsb
dec
ja
push
xchg
fnstenv
pop
mov
sahf
cli
test
outsl
cli
mov
jne
mov
mov
sbb
lods
cmp
rcrl
xchg
mov
outsb
or
fidivrs
ret
int
sarb
xor
mov
jp
add
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
mov
dec
iret
cld
inc
cs
test
dec
xlat
inc
call
scas
loope
sti
jnp
scas
iret
pop
ljmp
icebp
in
jns
sbb
icebp
into
add
outsb
add
add
fs
sub
in
or
shl
mov
inc
push
pop
push
test
xchg
mov
pop
pop
jl
dec
sub
push
cmp
push
pop
stos
gs
jl
loop
fbstp
gs
out
sbb
push
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
ficomps
jns
movl
sti
stc
cli
in
test
or
test
sbb
cmpsb
sub
mov
mov
dec
loopne
adcl
data16
cmpsb
xchg
fucomi
das
jnp
cs
sub
divl
sub
mov
jo
mov
xchg
sub
mov
push
xor
cmp
pop
inc
push
sbb
or
ret
jo
xor
popf
and
inc
cmp
jo
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
dec
pop
mov
or
scas
iret
fucomip
test
add
jb
jae,pn
cld
inc
and
mov
sbb
mov
arpl
ret
inc
inc
xchg
dec
les
test
pop
aaa
stos
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
rolb
fs
movsl
add
or
xor
jb
fisttpll
sbb
jl
adc
shlb
orl
inc
clc
repz
jo
dec
fstps
sub
adc
add
rolb
orps
adc
dec
push
pop
pop
push
jne
sbb
daa
mov
cmp
inc
ror
mov
push
je
rorb
mov
out
ret
cmpsl
push
hlt
cwtl
mov
xchg
mov
ffree
jle
push
adc
mov
mov
inc
push
add
mov
push
jp
jl
cmp
clc
jp
add
add
mov
sbb
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
lds
sbb
into
xor
push
lgdtl
loop
ja
or
inc
or
push
xchg
add
cmp
repnz
xchg
out
lods
mov
cwtl
inc
stos
adc
imul
in
mov
mov
or
pop
fsubl
xor
cli
mov
jge
xchg
add
or
add
sub
xchg
gs
imul
xor
push
adc
add
push
sbb
and
popf
ret
out
push
sbb
jge
popf
adc
mov
popf
cmp
cmpsl
mov
mov
jb
addr16
jo
push
mov
pop
movsb
xchg
test
cmp
arpl
mov
cmc
sub
shll
xchg
daa
push
push
sbb
lret
inc
rcrl
mov
push
pop
mov
leave
xchg
inc
mov
push
test
or
stos
xor
xor
mov
bound
push
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
aas
xchg
dec
in
rcl
cmpsl
mov
sbb
or
fists
cmp
cmpsb
iret
mov
das
shrl
jns,pt
popf
jae
into
orb
sub
add
ss
cmp
leave
jmp
xchg
pop
gs
pusha
pop
sbb
adc
icebp
cltd
loope
call
jg
lahf
cwtl
cmp
pop
xor
in
inc
cltd
aas
ja
int
int
inc
adc
dec
mov
lock
ret
dec
lret
cltd
adc
sub
or
sbb
lahf
jne
cmp
cld
mov
sti
cli
fs
jne
das
xchg
stc
cli
in
test
or
test
sbb
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
orl
icebp
jle
scas
ud0
add
jle
pusha
and
leave
lock
test
cwtl
jg
lods
xor
cmc
adc
xchg
push
shrl
scas
mov
sub
adc
mov
popa
xor
into
add
mov
pop
add
or
leave
xchg
add
mov
push
dec
mov
popf
pop
scas
cmp
outsb
clc
cmp
stos
jo
aaa
ljmp
jnp
adc
jno
or
js
sbb
sti
test
enter
roll
fcomps
je
cmp
pop
mov
mov
sbb
sub
push
ja
inc
in
scas
cmp
inc
cmpl
jae
jecxz
cmp
ret
mov
in
dec
dec
mov
push
stos
fs
orb
je
dec
cmpsb
dec
mov
adc
mov
jb
xor
das
mov
dec
jb
sahf
fisubl
imulb
lea
or
orb
mov
std
fdivrl
js
ret
dec
sbb
loop
mov
fidivs
ja
pop
inc
fimull
inc
xor
xor
sbb
ficoml
addr16
xchg
pop
ds
je
loopne
pushl
or
jecxz
test
je
test
cmpb
pop
mov
mov
jns
sub
inc
pop
xchg
mov
inc
mov
test
add
in
mov
lock
imul
icebp
sahf
adc
orl
adc
mov
insl
xchg
imul
test
les
cmp
imul
sub
push
push
aas
shrl
jl
xchg
pop
dec
mov
add
or
test
js
scas
mov
xchg
sub
add
dec
fidivrs
lods
mov
addr16
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
cwtl
add
and
mov
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
test
add
les
xor
fs
inc
data16
or
nop
and
setne
sbb
mov
and
sub
int3
push
xor
or
inc
xchg
dec
aad
or
dec
adc
push
and
fnstenv
rol
fiadds
xchg
adc
in
mov
outsb
mov
insl
and
mov
insb
movsl
sub
cmpl
fs
mov
dec
jno
jecxz
nop
std
pop
mov
ret
jb
jo
scas
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
push
fistpll
jg
pushf
jne
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fnstsw
outsb
iret
lahf
icebp
es
sbb
push
rclb
add
andb
and
fisubrs
fisttpl
inc
and
lretw
xchg
mov
push
pop
lahf
das
lea
mov
in
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
sbb
sbb
inc
mov
add
out
in
xlat
mov
fldenv
testl
rorl
arpl
jge
les
in
mov
xor
ret
std
les
or
stos
inc
lcall
hlt
inc
les
lret
leave
scas
dec
xchg
jp
mov
jne
ret
pop
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
subb
xor
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
push
movsb
mov
dec
push
dec
orl
or
xlat
mov
pop
pushf
pop
mov
call
push
add
jl
fbstp
dec
sbb
push
ret
enter
push
cmp
add
outsl
hlt
jmp
decb
push
insb
jne
lds
cs
mov
mov
dec
mull
imul
dec
and
iret
jae
xchg
rcr
mov
and
mov
ret
adc
enter
dec
movsl
or
sbb
fistl
js
and
shll
or
scas
aaa
mov
cli
jnp
inc
mov
mov
mov
cmp
ret
xchg
sub
and
adc
aas
test
mov
inc
scas
mov
sub
aad
mov
fdivl
and
lea
sbb
mov
cwtl
jmp
mov
imul
in
add
imul
ds
add
sub
insl
jnp
mov
add
stc
arpl
cwtl
sbb
in
outsb
subl
xchg
out
and
mov
insl
in
dec
imulb
sbb
stos
adcl
add
jns
rcrl
fimuls
jmp
lahf
jp
cltd
inc
cmpsl
mov
andb
add
push
sarb
dec
mov
mov
test
cmp
add
cmp
lds
sti
out
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
shlb
das
adc
sbb
pushf
lcall
lret
jle
inc
outsl
ja
filds
push
int
lea
cmpsl
int
xchg
xchg
insb
sub
inc
lods
mov
mov
int3
test
push
loope
dec
sub
nop
add
dec
adc
divl
ret
xorb
push
mov
inc
cmpsl
lcall
push
jb
pop
or
jl
imul
cmc
lret
inc
adc
lock
adc
inc
inc
sbb
gs
ret
sub
lea
pop
sub
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
stc
mov
mov
test
sbb
subb
imul
cmp
vsubss
xchg
cmp
push
mov
int3
xor
repz
cmp
xchg
sbb
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
scas
clc
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
push
leave
pop
jecxz
in
push
cmp
sbb
daa
adc
rcrb
mov
es
push
insl
aad
dec
and
stos
lea
push
gs
mov
loope
fwait
aad
lahf
cmpsl
jo
fnsave
ret
xchg
jnp
mov
leave
or
pop
push
outsb
shlb
leave
jns
or
push
clc
enter
jle
cltd
je
dec
enter
fisubrl
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fisttpll
icebp
cwtl
ret
leave
shlb
rclb
add
andb
xor
mov
jmp
jecxz
dec
ja
repz
in
inc
inc
xchg
and
ja
xor
adc
repz
fists
addb
rcrb
hlt
das
lock
mov
sbb
push
fcompl
jne
jns
lds
nop
lds
mov
fldenv
testl
push
xlat
and
mov
icebp
and
and
push
jecxz
loopne
or
aam
push
pop
insl
jb
sahf
enter
and
inc
dec
insb
test
scas
sbb
jbe
lods
lds
orl
mov
mov
add
xor
out
and
lret
jl
das
inc
iret
shl
aaa
jge
pushf
inc
sub
fidivl
add
xor
into
icebp
sbb
mov
ss
test
lds
xchg
mov
pop
cmpb
pop
mov
mov
jns
sub
inc
pop
ret
fwait
sahf
shrl
mov
inc
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
inc
push
cmpb
sub
mov
fildll
sub
dec
push
fsub
ja
cwtl
repnz
sub
out
lret
inc
arpl
enter
lods
mov
test
push
sbb
mov
xchg
xchg
cmp
inc
mov
leave
cld
icebp
in
inc
or
lds
sub
sbbl
push
iret
or
je
repz
mov
mov
sahf
jo
sub
ja
aas
cmp
mov
pusha
andl
stos
int
jmp
mov
add
test
bound
jns
ss
bound
mov
in
push
dec
daa
cmp
jp
add
add
mov
sbb
insb
cltd
orb
xor
mov
arpl
mov
jg
cmp
push
int
inc
mov
adcl
cmp
push
cmpsb
ja
xor
xor
mov
mov
popa
jle
push
addb
sub
mov
aam
je
sub
es
insl
jb
sahf
fsubl
jbe
lods
adc
enter
popf
sbb
xchg
arpl
jmp
mov
mul
in
mov
les
jg
xchg
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
int3
mov
pushf
lock
mov
fcmovnb
inc
sahf
mov
adc
das
movsl
xor
lret
scas
addr16
imul
ljmp
adc
movsb
lret
xor
dec
ret
jno
mulb
push
ret
insb
mov
xor
xchg
dec
mov
add
inc
pop
fisubl
or
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
cs
pop
jae
inc
insl
out
sbb
inc
add
pop
stos
ret
mov
jb
lods
out
std
into
add
xchg
sub
push
inc
inc
popa
pop
xor
or
mov
rol
xchg
out
stos
xor
push
xchg
cltd
loope
call
add
and
add
dec
xlat
cmp
sbb
stos
dec
les
adc
in
mov
xchg
sbbb
divb
fst
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
pop
jmp
lds
adc
mov
adc
mov
push
add
aad
pushf
xchg
pushf
xchg
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
repz
mov
push
sub
mov
inc
lock
fnstsw
cmc
rcrb
mov
out
ja
popf
loop
scas
inc
popa
mov
mov
cmp
inc
dec
lds
sbb
pop
into
inc
lret
call
add
sub
sbb
iret
mov
cmp
sub
test
cmc
xor
movsb
sbb
pop
add
mov
das
jne
les
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
cltd
orb
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
in
outsb
mov
in
jg,pn
xchg
xchg
sub
stos
inc
lcall
into
push
xchg
das
mov
pop
mov
loopne
xlat
jo
fs
in
mov
jmp
popa
sti
out
pop
dec
subb
shrb
jecxz
cmove
jns
xchg
adc
std
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
dec
mov
jne
cltd
pop
xlat
sbb
and
sbb
lret
dec
sbb
sarb
addl
mov
shll
rcrl
or
jmp
mov
rcrl
pop
xor
add
data16
xor
dec
stos
cmp
rol
pop
or
jl
loop
fbstp
lea
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
faddp
cmp
movl
sti
stc
cli
in
test
or
pop
sbb
outsb
or
cmp
ret
int
lcall
cmp
stos
in
mov
jb
aaa
insb
into
or
xor
pop
rcll
push
pop
xor
cmp
inc
or
jmp
cmp
das
push
roll
jo
mov
sti
cs
xchg
mov
ljmp
cltd
xor
dec
enter
mov
jae
loope
pop
fdivrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
adc
mov
loopne
add
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
and
pop
test
push
stos
lea
push
ljmp
movsl
rcrl
push
sahf
jns
loope
sub
add
push
adc
adc
filds
dec
xchg
jmp
imul
fwait
lods
pop
push
in
xchg
push
es
test
aaa
popf
mov
mov
mov
cmc
mov
jle
jno
sub
sbb
add
iret
cmp
cs
xchg
scas
out
dec
cli
ds
and
push
push
mov
xlat
daa
fyl2xp1
cmc
pop
push
popf
stos
stos
sbb
push
pop
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
xchg
jmp
and
push
mov
cmp
and
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
fcomp
xor
cmp
jge
jge
adc
ret
scas
gs
mov
cmp
mov
xchg
repnz
push
in
sahf
jns
loope
pop
fcmovbe
add
in
jg,pn
shl
je
sub
out
test
aad
pop
cltd
enter
lods
mov
mov
in
scas
sub
fisubl
in
out
gs
out
sub
int3
pop
inc
add
arpl
test
cmp
mov
sub
dec
lret
fidivrs
cli
shrd
imul
fsubl
mov
fcmovu
sti
sti
and
test
pop
insl
sbb
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
inc
and
mov
xor
inc
enter
jmp
daa
add
test
push
leave
cmpsl
inc
or
mov
pop
leave
cmp
xchg
divb
dec
xchg
addr16
mov
pop
push
ljmp
in
icebp
push
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
ret
fmuls
xchg
fisttpl
add
jp
add
sbb
jle
jbe
lods
jae
cltd
ret
push
xlat
shlb
repz
cmp
pop
dec
hlt
lds
mov
and
cs
bound
flds
lock
jl
and
loop
and
xchg
xor
sub
push
mov
sbb
sbb
xor
cmpsb
jo
lret
out
movsl
push
je
xchg
mov
mov
faddl
jp
or
mov
cmp
and
dec
sbb
xchg
mov
sbb
jns
pop
mov
test
add
in
mov
mov
dec
dec
aaa
pop
sub
imul
inc
jae
add
sbb
es
call
xchg
mov
imul
fisttps
je
out
cli
lret
pop
dec
out
push
xchg
mov
in
je
fstpt
dec
rcr
xchg
adc
cmp
xchg
dec
push
sbb
ret
adc
sub
mov
push
xchg
mov
test
mov
in
test
outsl
or
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sar
andl
mov
mov
and
xchg
jp
dec
sbb
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
popa
xchg
mov
sub
cmpsl
inc
and
call
cmp
enter
popl
lea
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
inc
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
out
or
int
imul
push
sub
jb
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
lea
sahf
out
mov
enter
sbb
xor
inc
add
fmuls
in
jne
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jge
mov
pop
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmp
fucomip
jl
cmp
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
mov
mov
inc
call
cmp
ret
loopne
dec
pop
inc
in
jmp
clc
sbb
and
jecxz
gs
gs
int
shll
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
mov
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
pop
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
pop
and
jbe
out
ret
mov
add
adc
cwtl
sub
das
mov
jne
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
stc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
push
movsl
mov
mov
stos
mov
ja
mov
push
cmp
pop
inc
fsubrp
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
lods
fildll
sub
mov
bound
dec
imul
xor
xchg
imul
nop
aas
fwait
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
jb
mov
mov
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
scas
test
xor
sbb
cmpsl
fucomi
jge
sarl
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
out
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
mov
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
vpshufhw
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
fcompl
xchg
cli
or
push
or
push
aas
cmp
mov
ret
xchg
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
sbb
mov
sbb
sbb
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
ljmp
test
xchg
mov
std
inc
and
call
cmp
cltd
enter
popl
lea
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lcall
mov
aaa
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
sti
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
fcompl
or
int
imul
push
sub
jbe
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jge
fisttpl
out
mov
enter
sbb
aas
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
fidivl
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
add
dec
inc
cmp
push
hlt
sub
push
and
ja
inc
in
mov
sbb
mov
and
sbb
xorl
pop
rcr
xor
rcrl
dec
pop
out
cltd
adc
test
mov
mov
xchg
int3
test
jns
dec
ret
or
lret
jno
aad
mov
aad
jmp
fxch
add
shlb
or
sarb
clc
jb
mov
jb,pt
xor
adc
mov
or
add
fisubl
pop
fidivrs
jnp
sbb
sbb
xchg
xchg
sti
and
sbb
ds
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
fucomip
jl
addl
enter
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
idivl
dec
call
cmp
ret
loopne
dec
pop
inc
ds
clc
sbb
and
lret
jecxz
gs
mov
int
add
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
cmpb
push
jb
mov
lds
cmp
xor
adc
stc
push
push
scas
arpl
lock
enter
add
push
popl
fcmovbe
sbb
fistpl
xchg
std
cmpb
jg
lret
jno
inc
xchg
fwait
out
js
inc
shlb
lds
test
jb
adc
adc
jmp
mov
imul
in
mov
lret
das
shrb
sub
mov
mov
mov
cwtl
mov
mov
xchg
sub
add
pop
sbb
idivl
cmp
repz
ret
loopne
dec
pop
inc
and
repz
sbb
and
lret
jecxz
gs
ja
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
xbegin
mov
push
sbb
sub
mov
lock
inc
insl
fwait
sbb
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
fwait
mov
pop
in
mov
add
sbb
roll
or
sbb
push
cwtl
sub
das
pop
pushf
dec
and
xchg
cmpsl
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
icebp
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
lret
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
or
mov
mov
stos
mov
ja
adc
cmp
inc
mov
shr
mov
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
jno
scas
mov
imull
mov
mov
bound
dec
sub
pop
sbb
addb
imul
nop
ss
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
sub
fisubrl
xchg
test
dec
mov
lahf
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
adc
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
fsubr
bnd
int3
xor
mov
popf
dec
stc
mov
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
rcrb
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
aam
fimull
lcall
inc
inc
fcmovnu
cwtl
inc
out
mov
mov
mov
sbb
push
outsb
sbb
sbb
sbb
lock
ss
fs
icebp
testb
sbb
pushl
xlat
mov
ds
leave
push
lret
cmpl
ljmp
ficoml
xchg
add
sbb
fdivs
cmpb
stos
inc
movsb
pop
sbb
jno
lods
push
cmp
ret
outsb
pop
dec
sbb
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
adc
jo
jb
dec
jmp
sarb
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
inc
popf
scas
inc
movsl
fcompl
xchg
and
addl
add
push
aas
push
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
sbb
mov
sbb
mov
xchg
jp
dec
adc
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
inc
xchg
mov
sub
pop
inc
and
call
cmp
enter
or
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
pop
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
sub
or
int
imul
push
sub
je
mov
out
repz
inc
or
mov
aas
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
lea
xchg
out
mov
enter
sbb
icebp
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
imul
and
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
lret
mov
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
mov
mov
repz
ret
loopne
dec
pop
inc
sub
repz
sbb
and
lret
jecxz
gs
adc
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
clc
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
inc
mov
pop
scas
mov
push
mov
mov
add
jbe
xor
pushf
dec
and
xchg
sub
in
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
lea
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
mov
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
adc
pop
lcall
sub
test
test
inc
mov
jl
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
movsl
mov
jns
sahf
popf
enter
in
ret
bound
cmp
fwait
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
adc
sbb
xchg
adc
data16
push
fidivrl
insl
mov
ret
or
inc
fcomps
and
cmpsb
fcomi
sti
jne
loope
enter
out
pop
ret
xlat
adc
test
mov
gs
das
in
cmc
hlt
or
pop
pop
mov
xor
cwtl
aam
imull
mov
iret
cmpl
mov
lds
add
jo,pn
fsts
inc
inc
or
add
lcall
jne
inc
and
lcall
sub
test
test
inc
mov
outsl
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
jecxz
scas
mov
imull
mov
mov
bound
dec
pop
sub
negl
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
push
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
insb
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
inc
movsb
pop
sbb
jno
add
cltd
push
adc
ret
outsb
pop
dec
cmpsb
jmp
xor
leave
loop
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
rcrb
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
aam
fimull
lcall
inc
inc
fcmovnu
cwtl
inc
out
mov
mov
mov
sbb
push
outsb
sbb
sbb
sbb
lock
ss
fs
icebp
testb
sbb
pushl
xlat
mov
ds
leave
push
lret
cmpl
ljmp
ficoml
xchg
add
sbb
fdivs
sub
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
ja
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
rcrb
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
aam
fimull
lcall
inc
inc
fcmovnu
cwtl
inc
out
mov
mov
mov
sbb
push
outsb
sbb
sbb
sbb
lock
ss
fs
icebp
testb
sbb
pushl
xlat
mov
ds
leave
push
lret
cmpl
ljmp
ficoml
xchg
add
sbb
fdivs
cmpb
stos
inc
movsb
pop
sbb
jno
push
push
cmp
ret
outsb
pop
dec
add
bnd
int3
xor
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
inc
loop
xchg
dec
shrl
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
ds
scas
inc
movsl
fcompl
xchg
movsb
or
pushf
add
jbe
dec
inc
push
aas
or
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
mov
jl
xchg
sbb
shll
xchg
jp
dec
repnz
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
and
xchg
sbb
sbb
in
aam
das
mov
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
xchg
sub
mov
filds
inc
or
test
fucomp
movsl
aam
mov
int
xlat
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
lret
pop
dec
rcr
shr
test
dec
shlb
jo
and
add
pop
mov
scas
sbb
fcoms
stc
leave
mov
lret
lea
xor
sbb
cwtl
cmp
xchg
test
jnp
inc
mov
cwtl
rorb
mov
int3
popl
add
mov
and
xchg
jp
dec
jg
push
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
pop
jne
jge
push
dec
test
sbb
mov
pop
cmp
call
ret
loopne
inc
adcb
in
xchg
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
clc
mov
testl
fldcw
ss
sbb
mov
mov
mov
lret
rcll
push
pop
jne
mov
sbb
pop
sub
mov
lds
mov
jecxz
sahf
sahf
xchg
cmp
js
jp
mov
mov
gs
pop
aaa
cwtl
rolb
sbb
mov
sbb
mov
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
push
xchg
mov
sub
push
inc
and
call
cmp
inc
mov
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
icebp
pop
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
add
imul
mov
inc
adc
sub
repnz
or
int
imul
push
sub
idivl
and
repz
les
jl
ss
sbb
imul
scas
jecxz
pop
mov
imul
xor
sbb
aas
xchg
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
mov
add
pop
mov
sti
enter
cmpsl
pop
insb
ja
ss
jno
pusha
jmp
stos
in
jno
cmc
mov
mov
in
rolb
ror
shlb
add
cmp
repnz
xor
xchg
xchg
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
inc
push
or
int
imul
push
sub
je
mov
out
repz
inc
or
mov
aas
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
add
fnsetpm(287
out
mov
enter
sbb
adc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
inc
sbb
fwait
push
jo
cmp
add
rcrl
jo
iret
cmpsl
mov
adc
push
hlt
sub
push
and
testl
push
in
dec
scas
fistl
or
mov
rcrl
fcoms
lahf
shlb
cmp
jge
dec
aam
popa
lea
outsl
cmp
pushf
pop
addr16
std
movsb
fbstp
aad
jne
mov
sti
fstps
pusha
das
popa
or
inc
mov
inc
inc
sbb
stos
pop
mov
and
xchg
cwtl
mov
xchg
cmc
mov
push
mov
cli
ss
lds
mov
or
pop
lea
jno
mov
mov
test
enter
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
add
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
fucomip
jl
sub
imul
bound
loop
ret
mov
add
dec
inc
cmp
push
hlt
sub
push
and
ja
inc
in
mov
sbb
mov
and
sbb
xorl
pop
rcr
xor
rcrl
dec
pop
out
cltd
adc
test
mov
mov
xchg
int3
test
jns
dec
ret
or
lret
jno
aad
mov
aad
jmp
fxch
add
shlb
or
sarb
clc
jb
mov
jb,pt
xor
adc
mov
or
add
fisubl
pop
fidivrs
jnp
sbb
sbb
xchg
xchg
sti
and
sbb
arpl
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
add
fucomip
jl
xorl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
js
repz
ret
loopne
dec
pop
inc
out
repz
sbb
and
lahf
lret
jecxz
gs
mov
int
leave
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
cmpsb
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
ret
push
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
scas
mov
pop
int3
mov
fimuls
cmp
add
inc
push
cwtl
sub
das
stos
pushf
dec
and
xchg
mov
pop
stos
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
xchg
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
xor
lcall
sub
test
test
inc
mov
das
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
rcr
scas
mov
imull
mov
mov
bound
dec
add
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
inc
lods
mov
mov
xchg
test
dec
mov
aad
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
xor
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xor
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
shr
js
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
lods
loop
xchg
dec
add
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jg
scas
inc
movsl
fcompl
xchg
mov
adc
roll
jbe
dec
out
push
aas
xchg
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
mov
mov
and
xchg
jp
dec
adc
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
hlt
xchg
mov
sub
cltd
inc
and
call
cmp
enter
push
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
rcrb
das
cmp
pop
bound
out
adc
sub
pop
push
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fstp
cmp
mov
mov
test
enter
sbb
dec
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
fnsave
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
orl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
sbb
jne
clc
call
cmp
ret
loopne
dec
pop
inc
mov
in
and
lahf
lret
jecxz
gs
sahf
enter
int
movsb
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
repz
mov
out
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
pop
gs
mov
xchg
mov
mov
add
cmp
cwtl
sub
das
inc
pushf
dec
and
xchg
fxch
pop
stos
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
insl
addb
xchg
pop
lock
aam
dec
mov
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
dec
movsb
add
dec
or
pop
sbb
mov
push
xchg
lahf
aam
jg
das
mov
inc
cwtl
imul
out
cmp
fdivrl
repz
mov
hlt
sbb
cmp
decb
rcll
int
cmp
mov
inc
sub
xor
and
pop
aam
jae
add
cmp
and
mov
cld
mov
bound
cmp
or
sbb
push
cwtl
sub
das
pushf
pushf
dec
and
xchg
pushf
lret
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
insl
addb
xchg
pop
lock
aam
dec
mov
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
dec
movsb
add
dec
or
pop
sbb
mov
push
xchg
lahf
aam
jg
das
mov
inc
cwtl
imul
out
cmp
fdivrl
repz
mov
hlt
sbb
cmp
decb
rcll
int
cmp
mov
inc
sub
xor
and
pop
aam
jae
add
cmp
and
ficomps
mov
mov
ret
mov
add
imull
cwtl
sub
das
je
dec
and
xchg
gs
fsubr
test
xchg
leave
pusha
aad
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
dec
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pushf
movsl
mov
mov
stos
mov
ja
sbb
cmp
pop
inc
outsl
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
or
mov
bound
dec
aam
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
es
sbb
int3
ficoms
loop
xchg
pop
jb
add
rcrl
or
divl
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
cmp
clc
push
into
dec
lret
rcll
dec
ret
mov
fldenv
divb
popa
imul
xor
hlt
cmp
test
sahf
js
lds
enter
push
repnz
mov
test
imulb
negb
push
pushf
cmpb
adc
fnstenv
test
cli
and
scas
mov
imull
mov
mov
bound
dec
bound
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
imul
pop
dec
les
jg
dec
mov
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
xchg
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
cmp
bnd
int3
xor
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
fucom
jo
jb
dec
in
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lea
pop
iret
xchg
dec
or
inc
add
jbe
dec
out
xor
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
mov
mov
mov
and
xchg
jp
dec
push
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
gs
mov
sub
and
lahf
jle
dec
fucomi
jb
js
cmp
inc
popf
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repz
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
out
push
or
int
imul
push
sub
jo
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
repnz
sahf
out
mov
enter
sbb
lods
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
inc
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
addl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
std
call
cmp
pop
inc
sub
repz
sbb
and
lahf
lret
jecxz
gs
mov
int
xchg
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
mov
imul
mov
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
pop
mov
pop
scas
mov
js
ret
mov
add
inc
push
cwtl
sub
das
sbbl
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
out
mov
mov
stos
mov
ja
outsb
test
test
inc
mov
pusha
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sahf
fildll
push
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
cmp
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
lods
mov
mov
xchg
test
dec
mov
xchg
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
stos
mov
stos
xchg
push
adc
push
dec
xchg
xor
sbb
inc
fucomi
jge
shl
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
fs
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sub
jo
jb
dec
cmp
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
pop
mov
jnp
inc
mov
mov
adc
out
mov
sbb
loopne
aad
outsl
add
dec
test
dec
movsb
lea
lfs
xchg
dec
loope
repz
push
imul
fwait
pop
in
ja
push
sti
call
jo
or
or
cltd
dec
or
xor
sbbb
xchg
sarl
sbb
push
repnz
movsb
fnstenv
dec
adc
mov
rcr
mov
xor
test
mov
ret
int
lcall
lods
mov
mov
and
or
pop
mov
cltd
lods
inc
and
lahf
scas
mov
mov
and
jo
jb
dec
pop
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
sbb
scas
inc
movsl
fcompl
xchg
pop
or
mov
add
push
aas
or
mov
ret
andl
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
mov
sahf
popl
out
mov
and
xchg
jp
dec
imul
inc
out
mov
ret
fld1
std
jge
andl
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
sub
sub
push
ds
and
call
cmp
enter
popl
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jge
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
mov
repz
lea
mov
inc
adc
sub
inc
push
or
int
imul
push
sub
icebp
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
sub
fildl
mov
mov
test
enter
sbb
dec
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
mov
or
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
xorl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
sbb
mov
cmp
sbb
or
loopne
dec
pop
inc
sub
repz
sbb
and
gs
out
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
or
cmc
push
inc
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
or
push
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
push
mov
pop
pop
mov
fmull
cmp
or
sbb
push
cwtl
sub
das
rcrl
lret
fsubr
test
xchg
leave
pusha
fsubrs
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
dec
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
or
pop
lcall
sub
push
cmp
pop
inc
int3
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sti
fildll
mov
pop
mov
bound
dec
cmpsl
sub
jg
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xchg
lods
mov
mov
xchg
test
dec
mov
jnp
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
outsl
test
xor
sbb
dec
fucomi
jge
rcll
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
fwait
jmp
xor
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
cmp
jo
jb
dec
cmp
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
dec
popf
scas
inc
movsl
fcompl
xchg
inc
or
mov
add
push
aas
popa
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
andl
mov
mov
and
xchg
jp
dec
jo
push
sub
cmp
sbb
push
ret
fld1
std
jge
dec
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pop
xchg
mov
sub
xchg
inc
and
call
cmp
cltd
enter
sbb
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jle
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
test
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
out
lea
fucom
mov
mov
test
enter
sbb
ds
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
je
mov
sub
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
cld
call
cmp
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
lahf
lret
jecxz
gs
push
int
mov
inc
enter
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
int3
mov
in
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
stos
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
ficomps
mov
and
ret
mov
add
addr16
cwtl
sub
das
push
jne
test
pop
stos
fsubr
test
xchg
leave
pusha
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
in
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cltd
movsl
mov
mov
stos
mov
ja
sbb
cmp
inc
mov
aas
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xchg
fildll
or
mov
bound
dec
push
shlb
or
imul
nop
cmp
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xor
fisubrl
xchg
test
dec
mov
nop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
push
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sbb
jno
pop
push
cmp
ret
outsb
pop
dec
int3
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
test
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
or
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lret
popf
scas
inc
movsl
fcompl
xchg
popa
or
add
add
push
aas
mov
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
sbb
mov
sbb
nop
and
xchg
jp
dec
jp
push
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
rclb
nop
sub
mov
cmovge
fdivrl
sbb
dec
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
scas
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
out
clc
jge
test
mov
ja
adc
lahf
popf
in
stc
jl
ret
push
sbb
inc
cld
cmc
mov
inc
mov
fcmovne
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
cmpsl
pop
mov
in
jge
mov
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
adc
sub
push
ds
inc
and
call
cmp
enter
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jb
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
ja
or
int
imul
push
sub
jae
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
dec
lea
and
mov
enter
sbb
mov
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
or
mov
scas
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
adcl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
mov
repz
ret
loopne
dec
pop
inc
cli
jmp
clc
sbb
and
lahf
mov
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
add
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
fwait
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
outsl
mov
pop
mov
mov
dec
mov
mov
add
ss
cwtl
sub
das
out
dec
and
xchg
mov
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
xlat
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
sub
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
aas
movsl
mov
mov
stos
mov
ja
ljmp
sub
fistps
inc
and
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
jp
scas
mov
imull
mov
mov
bound
dec
add
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
ljmp
cmpsl
xchg
test
dec
mov
sti
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
ss
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
jns
jle
xchg
sub
cs
or
mov
clc
push
fdivrs
aam
inc
and
lret
gs
repz
or
xor
fcoml
mov
rcll
adc
xchg
cltd
pop
inc
stos
dec
xlat
in
dec
pop
jnp
mov
call
mov
cmp
pop
sub
out
ds
jp
movsb
fnstenv
hlt
or
aad
or
and
nop
addr16
sbb
xchg
mov
rcrb
mov
inc
mov
sbb
scas
xchg
sbb
in
bound
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
out
test
xor
sbb
pop
fucomi
jge
roll
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
and
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
imul
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jbe
jo
jb
dec
leave
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
sahf
popf
scas
inc
movsl
fcompl
xchg
xor
addl
add
push
aas
out
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
sbb
mov
sbb
dec
and
xchg
jp
dec
push
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jbe
mov
sub
mov
and
call
cmp
inc
popl
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
jg
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lea
gs
mov
enter
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
subl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
dec
call
cmp
ret
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
lahf
insb
enter
int
jns
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
repz
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
jge
fsubrl
fnsave
push
test
lret
mov
repnz
stos
loopne
push
xchg
push
jae
cld
ret
pushf
pop
mov
xchg
test
cwtl
data16
xlat
insl
addb
xchg
pop
jo
movsl
or
xor
mov
xchg
dec
loopne
mov
push
fsts
push
jmp
scas
ficoms
xchg
addr16
add
jmp
js
or
cltd
dec
xchg
sbb
cwtl
int3
dec
and
test
pop
aam
stos
fdiv
dec
xor
push
pop
push
rep
icebp
mov
xor
insl
or
hlt
pop
mov
jmp
mov
sub
push
hlt
es
lea
cmp
lea
test
or
pop
mov
xor
sahf
jp
mov
stos
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
ljmp
xorl
shrl
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
fdivrs
pop
pop
mov
xchg
mov
mov
add
mov
hlt
das
fstpl
stc
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
cmp
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
stc
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
shll
jns
stos
mov
ja
call
push
cmp
inc
mov
or
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
movsl
mov
jns
sahf
popf
enter
in
ret
bound
cmp
fwait
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
adc
sbb
xchg
adc
data16
push
fidivrl
insl
mov
ret
or
inc
fcomps
and
cmpsb
fcomi
sti
jne
loope
enter
out
pop
ret
xlat
adc
test
mov
gs
das
in
cmc
hlt
or
pop
pop
mov
xor
cwtl
aam
imull
mov
iret
cmpl
mov
lds
add
jo,pn
fsts
inc
inc
or
add
lcall
jne
inc
andl
lahf
xlat
stos
mov
ja
in
test
test
inc
mov
push
cld
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xchg
fildll
int
fldt
arpl
ret
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
jecxz
mov
mov
xchg
test
dec
mov
and
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
pop
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
add
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
sub
bnd
int3
xor
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
and
xchg
dec
arpl
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jecxz
scas
inc
movsl
fcompl
xchg
push
or
loopne
add
push
aas
sub
mov
ret
je
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
sbb
mov
sbb
pop
and
xchg
jp
dec
addr16
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xchg
mov
sub
lea
lahf
jle
dec
fsubr
jb
js
cmp
enter
jbe
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
mov
mov
or
inc
inc
ficompl
pusha
mov
idiv
je
mov
adc
add
test
cmp
pop
outsl
les
std
lock
fistpl
lcall
cmp
stc
push
movl
imul
js
fistl
xchg
push
cmp
pminub
rclb
inc
cmpsb
pop
fwait
movsl
xchg
mov
sub
lret
lahf
jle
dec
or
jb
js
cmp
enter
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jge
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
inc
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
rcrl
or
int
imul
push
sub
std
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lea
mov
mov
mov
test
enter
sbb
nop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
and
mov
add
sti
mov
in
inc
inc
cmp
push
lock
shrl
or
mov
sub
pushf
dec
and
leave
pop
inc
add
repnz
jns
sbb
lahf
shlb
mov
ljmp
fnsetpm(287
leave
je
ret
cmp
or
mov
jne
dec
inc
pop
cltd
cmp
stos
jp
adc
jge
scas
stc
xchg
incl
adc
int3
scas
cmp
jnp
jg
xor
icebp
mov
sub
sbb
adc
xor
mov
cmp
rol
mov
adc
fidivrl
jp
pop
push
enter
xchg
pop
mov
xlat
or
mov
fstpt
je
arpl
jecxz
inc
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
arpl
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
in
mov
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
clc
call
cmp
loopne
dec
pop
inc
cwtl
jmp
clc
sbb
and
gs
call
int
mov
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
xchg
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
or
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sub
pop
dec
mov
gs
mov
add
push
cwtl
sub
das
mov
jne
mov
pop
stos
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
insl
addb
xchg
pop
lock
aam
dec
mov
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
dec
movsb
add
dec
or
pop
sbb
mov
push
xchg
lahf
aam
jg
das
mov
inc
cwtl
imul
out
cmp
fdivrl
repz
mov
hlt
sbb
cmp
decb
rcll
int
cmp
mov
inc
sub
xor
and
pop
aam
jae
add
cmp
and
mov
pop
mov
jbe
mov
cmp
sbb
push
cwtl
sub
das
sub
dec
and
xchg
int
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
pop
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
push
mov
mov
stos
mov
ja
sahf
test
test
inc
mov
lock
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
or
scas
mov
imull
mov
mov
bound
dec
lret
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
out
mov
mov
xchg
test
dec
mov
stc
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
cs
xor
sbb
lcall
call
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
shr
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
or
sub
or
cmp
sub
push
mov
rcrb
mov
das
xchg
mov
pop
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
sbbb
bound
stos
sub
addl
add
push
aas
adc
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
mulb
adc
test
sub
cmp
sbb
aas
ret
fld1
std
jge
hlt
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
daa
xchg
mov
sub
sbb
and
call
cmp
enter
pop
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
scas
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
out
clc
jge
test
mov
ja
adc
lahf
popf
in
stc
jl
ret
push
sbb
inc
cld
cmc
mov
inc
mov
fcmovne
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
cmpsl
pop
mov
in
jge
mov
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
repz
mov
sub
jbe
and
call
cmp
inc
cmp
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jo
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
ds
cmpsl
mov
fwait
lea
mov
inc
adc
sub
gs
or
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
and
fstp
jmp
mov
mov
test
enter
sbb
mov
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
lea
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
subl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
jecxz
repz
ret
loopne
dec
pop
inc
jecxz
repz
sbb
and
lret
jecxz
gs
loopne
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
jp
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
xor
mov
xor
mov
ja
ret
mov
add
out
xor
pushf
dec
and
xchg
inc
lret
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
adc
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
jp
mov
mov
stos
mov
ja
mov
cmp
pop
inc
in
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
scas
mov
imull
mov
mov
bound
dec
or
xchg
dec
inc
shlb
or
imul
nop
ds
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
je
mov
mov
xchg
test
dec
mov
and
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
icebp
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
test
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
es
xchg
dec
xchg
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
inc
popf
scas
inc
movsl
fcompl
xchg
and
addl
add
push
aas
out
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
or
push
sub
cmp
sbb
add
loope
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xor
sub
xchg
mov
add
and
call
cmp
cltd
enter
jnp
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
push
or
int
imul
push
sub
jo
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
lea
insb
out
mov
enter
sbb
fwait
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
and
mov
add
sti
mov
in
inc
inc
cmp
push
lock
shrl
or
mov
sub
pushf
dec
and
leave
pop
inc
add
repnz
jns
sbb
lahf
shlb
mov
ljmp
fnsetpm(287
leave
je
ret
cmp
or
mov
jne
dec
inc
pop
cltd
cmp
stos
jp
adc
jge
scas
stc
xchg
incl
adc
int3
scas
cmp
jnp
jg
xor
icebp
mov
sub
sbb
adc
xor
mov
cmp
rol
mov
adc
fidivrl
jp
pop
push
enter
xchg
pop
mov
xlat
or
rorb
fistpl
mov
mov
test
enter
sbb
insb
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
mov
adc
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
fwait
call
cmp
pop
inc
adc
repz
sbb
and
lahf
lret
jecxz
gs
mov
int
sub
inc
lret
leave
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
dec
and
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
ret
dec
mov
mov
out
ret
mov
add
mov
hlt
das
add
inc
lret
fsubr
test
xchg
leave
pusha
fisubrl
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
xor
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
gs
test
inc
mov
fucomip
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
dec
fildll
adc
pop
mov
bound
dec
jae
xchg
dec
inc
shlb
or
imul
nop
ss
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
adc
mov
mov
xchg
test
dec
mov
aad
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
popa
sub
inc
sarb
insb
add
jp
pop
repnz
rcrb
jmp
repz
mov
shll
adc
jb
pusha
repz
push
enter
mov
les
insl
out
push
adc
pop
cwtl
mov
hlt
js
xchg
icebp
scas
int3
sbb
scas
jns
fists
nop
mov
mov
cld
aas
in
and
cmc
mov
insl
xchg
sti
aaa
negb
adc
mov
sbb
ss
out
rcrl
cmpb
inc
xchg
mov
or
adc
sub
pop
push
dec
push
dec
or
sbb
pusha
mov
xchg
cmpsl
xchg
test
dec
mov
jns
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
mov
mov
adc
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
sti
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
fadds
jno
xchg
mov
je
aad
and
cmp
ljmp
lods
fnsave
xor
adc
jnp
mov
jns
outsl
inc
sbb
add
mov
mov
and
or
mov
adc
test
push
adc
cmc
sbb
pusha
rep
mov
mov
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
in
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
gs
xor
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
rcrb
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
aam
fimull
lcall
inc
inc
fcmovnu
cwtl
inc
out
mov
mov
mov
sbb
push
outsb
sbb
sbb
sbb
lock
ss
fs
icebp
testb
sbb
pushl
xlat
mov
ds
leave
push
lret
cmpl
ljmp
ficoml
xchg
add
sbb
fdivs
sub
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
es
xor
fwait
leave
loop
and
sub
inc
sbb
mov
lea
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jmp
jo
jb
dec
aam
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
xchg
popf
scas
inc
movsl
fcompl
xchg
add
addl
add
push
aas
sbbb
pop
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
shrl
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
int
mov
in
int
inc
sbb
pop
sbb
jo
mov
idivb
aad
mov
cs
iret
sbb
rclb
in
mov
testl
xchg
mov
xor
add
xchg
test
mov
jae
xor
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
sbb
pop
xchg
cmp
addl
add
push
aas
push
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
mov
mov
mov
and
xchg
jp
dec
fldt
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
ljmp
lds
xchg
mov
mov
and
call
cmp
inc
push
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jle
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
sbbb
addl
mov
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
scas
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
or
test
enter
sbb
adc
inc
xchg
fmuls
in
nop
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
add
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
inc
xlat
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
add
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
cmpl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jno
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
inc
push
cld
loop
test
scas
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
xchg
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
jne
lcall
rol
loopne
dec
pop
inc
jmp
clc
sbb
and
lret
jecxz
gs
cmp
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
and
push
dec
cmp
fwait
mov
insb
push
clc
sub
shr
inc
mov
imull
sbb
pop
icebp
add
jl
jae
mov
adc
iret
xlat
cwtl
pop
adc
pop
push
jmp
adc
or
mov
cmp
and
aaa
or
inc
sbb
into
scas
fcomip
cli
cmc
xor
jle
outsl
cltd
mov
sbb
jo
aam
ds
mov
aam
stc
repnz
cmp
xchg
popf
aad
aas
mov
test
jmp
imul
shufps
and
es
fcoms
add
sbb
fdivl
in
mov
dec
mov
mov
sbb
repz
ret
loopne
dec
pop
inc
or
repz
sbb
and
lahf
lret
jecxz
gs
sbb
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
add
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
aam
add
mov
int
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
adc
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
pusha
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
push
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
inc
push
jge
fwait
xchg
out
stos
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
fnstcw
pop
cwtl
mov
ja
ret
mov
add
xor
cwtl
sub
das
dec
pushf
dec
and
xchg
into
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
nop
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
inc
aad
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
adc
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
sub
xchg
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
nop
sub
or
xchg
adc
dec
mov
pop
lods
test
xorl
jns
sub
movsb
fidivl
push
gs
fwait
pop
call
pop
mov
fmuls
stos
loopne
xor
and
and
je
and
xor
je
mov
out
mov
ficomps
fstl
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
test
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
xchg
fmulp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
lock
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
push
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
push
movsl
mov
mov
stos
mov
ja
push
test
test
inc
mov
cmp
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
xchg
or
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
and
scas
mov
imull
mov
mov
bound
dec
in
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
push
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
nop
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
nop
lods
mov
mov
xchg
test
dec
mov
scas
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
fldcw
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jo
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
into
xchg
lahf
push
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
pop
dec
xchg
jmp
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
cmpsl
adc
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
orb
or
ret
mov
int3
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
in
jo
jb
dec
inc
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
dec
push
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
pop
rolb
stos
or
addl
add
push
aas
cwtl
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
arpl
mov
add
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
andl
mov
mov
and
xchg
jp
dec
dec
test
sub
cmp
sbb
fcmovnb
fld1
std
jge
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
shrb
insl
icebp
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
push
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
jae
xchg
mov
aas
inc
and
call
cmp
enter
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jne
mov
xor
ljmp
jae
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
or
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
dec
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
movsb
push
sub
aam
sbb
cmp
sbb
mov
in
jo
mov
int3
pop
add
inc
xor
or
inc
cmp
dec
sahf
dec
mov
fwait
test
popa
stos
ret
call
jae
cmp
add
into
push
adc
pusha
inc
out
mov
mov
mov
stos
lods
dec
add
add
movsb
js
cltd
lret
movsl
jle
hlt
dec
push
fst
xor
out
hlt
dec
sbb
adc
xor
mov
mov
mov
xchg
test
mov
test
inc
in
ret
xor
xchg
out
mov
push
movsl
push
push
lret
add
stos
lods
pop
ja
sub
hlt
jbe
pusha
test
ficomps
jp
out
fbstp
lcall
je
jmp
or
dec
mov
ds
sub
pop
mov
xchg
mov
dec
mov
mov
dec
clc
loope
pop
xchg
js
jb
mov
mov
enter
rorl
add
mov
mov
or
sub
adc
xchg
jg
imul
shlb
fisubs
sub
mov
ret
pop
jne
xchg
sbb
dec
sti
stc
sti
mov
sbb
out
inc
add
aad
or
scas
xor
dec
cld
xchg
popf
sti
sbb
lock
add
iret
or
push
pop
lods
dec
dec
and
repz
inc
and
cmp
fdivrl
enter
cwtl
cli
jp
cltd
mov
push
dec
cmpsl
push
ja
dec
jge
pop
add
mov
movsb
push
fcoms
lods
inc
pop
push
in
mov
push
in
xlat
mov
lcall
insb
adc
inc
mov
fdivs
stc
pushl
adc
aaa
xchg
int
mov
rcrl
mov
in
pop
pop
pusha
inc
mov
or
fsubl
pop
add
call
les
jmp
adc
int3
pop
add
les
jp
adc
fsubrs
rolb
cmp
popf
into
inc
mov
mov
sbb
inc
mov
fists
push
inc
out
mov
adc
jno
mov
inc
sub
push
sbb
jl
pop
ret
adc
cltd
int3
addr16
mov
fisubrl
dec
in
ficoml
cld
lret
push
leave
mov
sbbb
xchg
mov
into
das
test
sarl
movsl
cmp
stos
pushf
push
or
test
or
push
jne
xchg
ljmp
sbb
push
jle
cli
cmp
xchg
dec
test
push
fwait
push
rcrb
inc
xor
push
js
dec
push
pop
xor
lds
in
push
lret
stos
xlat
insb
jmp
inc
jno
lret
mov
jns
sbb
xchg
inc
cltd
enter
movsl
add
mov
dec
add
xchg
dec
sub
gs
inc
dec
cmp
test
inc
test
popa
xor
fldt
xchg
xor
int
xor
call
rclb
lods
nop
dec
sbb
rcrb
mov
cli
dec
out
push
test
push
iret
jmp
lret
js
shrl
dec
jl
push
dec
repz
cmp
rcrl
pop
xchg
inc
inc
pop
xor
imul
pop
jb
mov
movsb
push
lds
mov
out
sti
mov
scas
aaa
mov
cli
jnp
inc
mov
adc
push
mov
mov
lock
push
mov
mov
jo
je
mov
push
movsl
push
xchg
pop
mov
aad
push
ret
inc
mov
pop
mov
mov
sub
int
jecxz
dec
push
mov
enter
cmp
lcall
mov
cmp
and
mov
test
xor
mov
lret
jecxz
push
cwtl
xor
mov
mov
and
cmpsl
mov
nop
pop
cli
adc
ret
or
test
lcall
cmp
pop
add
ljmp
mov
fcoms
sbb
xchg
cltd
adc
scas
stos
movsl
or
movsb
pop
pop
scas
dec
fs
jle
sbb
sub
pop
insb
fisubl
lcall
jg
das
push
pop
cmc
and
pop
inc
add
addb
daa
test
xchg
incl
adc
sarb
stc
xchg
push
or
inc
scas
jb
insb
int3
mov
jae
push
insl
in
xchg
adc
call
sbb
and
or
loopne
je
dec
and
gs
xchg
sbb
jo
daa
jmp
adc
jo
lods
into
pop
stos
les
push
sahf
xor
test
lcall
mov
mov
mov
lret
mov
add
lret
cmpsl
cmp
cwtl
hlt
lods
ret
sbb
stos
dec
xchg
out
add
xchg
push
test
lods
sbb
mov
mov
stc
and
push
pop
in
leave
inc
cli
xchg
xor
dec
or
andb
outsl
dec
cmp
fwait
jne
movsb
lods
lds
xchg
jbe
lock
int3
scas
outsl
icebp
push
in
adc
cli
jnp
inc
mov
mov
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
fwait
mov
cltd
leave
mov
ret
mov
mov
jnp
fdivs
xchg
inc
adc
pop
sub
dec
mov
jecxz
sbb
mov
sbb
cmpl
sbb
andb
cmp
add
ja
pop
loopne
sbbl
subl
lock
rcrb
xor
lock
adc
mov
cltd
dec
addl
fnstsw
pop
ret
test
ret
movsb
push
cld
sub
pop
stos
push
loop
dec
push
test
in
push
jmp
test
cwtl
adc
sub
xchg
or
adcb
dec
sub
or
scas
cmp
mov
xchg
mov
add
pusha
cmp
in
int
out
xlat
fcoml
sti
and
xchg
add
mov
jns
xchg
fildll
dec
and
pusha
inc
pop
dec
sub
push
insl
jecxz
lea
mov
lret
push
mov
gs
loope
adc
jle
scas
add
xchg
test
pop
push
push
dec
mov
lcall
int3
sbb
or
sbb
int
pop
test
mov
clc
lds
out
pop
adc
xlat
pop
adc
popa
pop
rcll
add
subb
stos
push
lods
xchg
sub
adc
fsts
xor
sti
scas
cli
lret
mov
mov
rcr
lcall
pop
jo
mov
fmul
lret
and
and
mov
add
dec
dec
pop
sbb
xchg
pop
insb
dec
push
in
rcll
sbb
xchg
mov
std
cli
jnp
inc
mov
mov
sbbl
push
dec
mov
test
adc
test
mov
ljmp
xor
xchg
popa
stos
imul
ret
xchg
std
xchg
sbbb
cmpsb
inc
mov
jl
adc
mov
enter
pushf
popf
cs
rolb
orb
shl
mov
pop
push
mov
movsl
repz
cmp
in
mov
clc
daa
mov
sbb
mov
mov
addl
mov
mov
xor
in
dec
inc
dec
cmp
lret
sub
jne
test
lcall
lret
jbe
cmpsl
mov
popf
xor
test
dec
data16
shrb
es
fidivrl
push
jmp
jg
add
sub
pop
mov
xchg
mov
lods
inc
ja
pop
mov
scas
in
cld
or
sbb
mov
mov
mov
sub
or
ds
sar
and
rcr
inc
push
in
fucomp
adc
mov
add
mov
lahf
sbb
and
cmp
sub
mov
int3
fmull
enter
or
outsl
mov
mov
popa
mov
sub
call
mov
sbb
pop
xor
stos
in
lahf
sub
jae
mov
in
popf
fstpt
mov
cli
cmpsl
mov
jo
xchg
xchg
dec
push
fs
jae
mov
push
or
rol
cmp
outsl
mov
pop
push
xchg
stc
pop
fisttpll
mov
popf
into
arpl
add
xchg
sbb
mov
in
addb
test
fisubrl
pushf
lods
testb
fnsave
push
mov
mov
cmp
fmull
enter
lahf
scas
cmp
adc
cld
fwait
and
daa
xor
add
loop
mov
adc
xchg
rclb
add
xor
xchg
fsubrs
sub
xor
mov
dec
adc
add
shl
bound
mov
int3
pop
lods
jnp
les
addr16
out
int
and
xchg
pusha
inc
jmp
mov
shlb
call
shr
fcmovnbe
mov
insl
mov
sub
inc
inc
aas
push
clc
xor
loop
fwait
stc
push
mov
mov
nop
xor
push
mov
leave
and
inc
call
cmp
push
pop
mov
lahf
push
and
add
stos
fildll
rcll
out
testb
jae
add
jb
mov
mov
stos
lds
sbbl
pop
xchg
sbb
or
sbb
or
lahf
icebp
cli
xor
andl
jl
adc
xchg
popa
out
ficoml
test
sbb
insl
enter
sbb
cmp
jb
fcmovnbe
sbb
addl
and
sub
mov
xor
dec
test
int
int3
lcall
mov
lock
pop
adc
jae
mov
jecxz
dec
mov
sbb
add
test
sub
pushf
ret
pop
jl
mov
leave
push
mov
pop
out
clc
mov
negl
mov
gs
les
popf
push
jns
jg
mov
mov
test
mov
lock
add
xchg
push
xchg
mov
testl
sbb
fcomps
mov
fdivl
loope
pusha
push
fcmovnbe
popf
mov
xchg
dec
sbb
mov
push
xor
add
push
pop
adc
cmpl
xlat
sbb
push
gs
das
push
call
cmovae
pop
adc
push
mov
pop
aaa
or
in
lea
imul
push
andb
xchg
sub
add
jb
mov
pop
jne
icebp
sbb
in
mov
mov
xor
int3
cwtl
cltd
adc
or
add
or
outsl
xor
push
and
inc
mov
pop
mov
push
cltd
nopl
lahf
ljmp
mov
sbb
jnp
arpl
pop
sub
adc
imul
mov
stos
xchg
cmpsl
inc
popa
dec
mov
enter
adc
ret
outsb
pop
mov
jmp
xor
icebp
sub
and
popf
loope
or
pop
mov
addr16
xor
test
adc
xchg
movsl
ret
subb
mov
stos
xchg
hlt
pop
fld
clc
les
enter
das
adc
adc
xor
test
sub
jle
mov
out
xor
inc
lcall
adc
pop
mov
loopne
out
test
xchg
sti
inc
sbb
sbb
jecxz
mov
cltd
sub
mov
mov
xlat
xorb
and
fstl
dec
and
pop
stos
push
and
test
notb
dec
fbstp
mov
xor
xchg
les
sub
mov
or
mov
stos
mov
inc
lcall
movb
dec
cmp
jbe
movsb
xchg
scas
pop
icebp
imul
jmp
adc
inc
mov
adc
push
mov
mov
mov
jp
stc
hlt
sbb
out
push
test
mov
out
cmp
arpl
inc
mov
xlat
sbb
das
popf
iret
sbb
xchg
inc
inc
mov
sbb
and
inc
xor
imul
mov
sbb
dec
jbe
fsts
sbbl
jp
inc
xor
mov
mov
sar
add
push
sub
loop
ret
repz
cld
sarb
fs
loopne
dec
out
sbb
or
dec
jno
cmpsb
pop
and
inc
arpl
mov
popf
into
arpl
movsl
ss
or
mov
insl
test
outsb
fistpl
sub
and
hlt
jbe
xor
cmp
jl
lods
dec
mov
loop
mov
enter
or
jge
pop
push
pop
sub
cmp
imul
mov
jle
loopne
je
out
insb
push
sub
mov
cmpsl
ret
lcall
dec
inc
aaa
popf
pusha
xchg
idivb
pop
and
push
cli
sub
dec
sbb
pop
pop
mov
loopne,pn
push
push
mov
sub
fildl
mov
mov
pop
add
inc
push
std
or
hlt
rcrl
and
mov
mov
or
sbb
xor
mov
and
in
iret
add
aam
sbb
push
adc
push
inc
in
mov
leave
sahf
sbb
add
insl
mov
outsb
test
sbb
hlt
cmp
aad
jge
jns
pop
test
lahf
xor
sbb
sbb
sub
cmp
push
fwait
imul
rcrb
clc
jle
inc
sub
cwtl
clc
daa
js
inc
pop
pop
xor
lds
jmp
add
int3
scas
inc
jae
pop
lods
out
pop
cmp
dec
cmp
lcall
aas
movsl
push
mov
add
loopne
aas
lea
sbb
aam
or
loop
sarb
sub
fildl
les
fisubs
clc
sti
cmpsl
ss
lret
clc
jge
fisttpll
mov
add
sbb
cmc
cli
ds
and
in
sbb
fs
pmaxub
jmp
loop
mov
lret
out
int3
stc
inc
sbb
xor
cmpsl
adc
orl
scas
xchg
dec
mov
shl
idivb
insb
sub
cmp
lods
push
pop
sbb
pusha
mov
push
fsubrs
popf
outsb
pop
jno
cmpl
mov
dec
mov
rcrl
test
aas
fisubs
xor
cmp
mov
mov
stos
cmp
sub
sti
repz
ror
mov
cwtl
and
dec
inc
hlt
mov
jo
adc
mov
xchg
push
mov
bound
mov
pop
mov
xor
in
mov
sbb
mov
stc
sti
test
xor
mov
mov
dec
mov
pushf
sbb
subb
mov
and
jb
insl
movsl
add
out
fstp
leave
adc
pop
xchg
push
and
test
inc
mov
pop
fbstp
jns
mov
sbb
popl
les
repnz
aad
jge
imul
push
rorl
nop
mov
push
ret
mov
leave
mov
push
pop
adc
ret
pusha
mov
and
pop
or
mov
in
sbb
push
push
mov
sbb
int
and
lods
aad
dec
repz
outsb
je
jp
cmp
adc
ret
fwait
decb
mov
add
sbb
bound
mov
dec
inc
pop
ror
adc
and
mov
mov
loopne
call
jae
cmpl
loope
pop
push
adcl
clc
xor
cmc
lret
test
xor
enter
ffree
xor
add
push
xchg
leave
pop
lret
lock
lret
movsl
ret
sbb
cmc
aaa
sbb
les
mov
sbb
mov
mov
sar
loope
test
movsl
jge
cmp
dec
xchg
or
mov
adcl
jb
mov
xor
cltd
fstpl
icebp
and
jns
scas
dec
test
mov
call
mov
loope
xchg
mov
jmp
popf
dec
xor
in
mov
jnp
inc
push
mov
xchg
sbb
and
sbb
xor
movswl
jmp
std
mov
sti
and
test
push
add
icebp
mov
xchg
cmp
or
aas
ljmp
jae
adc
mov
mov
cmp
jp
add
mov
mov
pop
orb
mov
ret
push
lods
xchg
sub
adc
repz
sahf
ljmp
push
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
invd
mov
shlb
scas
xchg
ficoml
lcall
jge
pop
movsl
nop
aaa
mov
int
shr
rcrl
push
pop
lret
push
enter
cwtl
xor
add
pop
or
add
decl
jnp
inc
push
mov
pop
xor
gs
mov
inc
sbb
mov
jne
fnstcw
mov
mov
cwtl
mov
mov
cmpb
xchg
sub
sub
in
cmc
fisubrs
sub
out
and
sbb
and
inc
sahf
sub
mov
pop
add
xchg
xchg
lret
in
lds
sbb
movsl
xchg
sub
pushf
ret
pop
pushf
dec
test
xor
xlat
dec
sbb
xlat
or
push
cmp
fucom
jmp
ljmp
and
push
fsts
xchg
mov
sbb
lret
or
sbb
ja
lret
stos
add
cmp
pusha
jbe
mov
or
ficoms
ficompl
and
xor
add
js
sub
cmovne
repnz
cmp
push
mov
pop
xor
insl
in
imul
insl
fdivr
sbb
jmp
std
mov
sti
and
or
xlat
mov
insb
push
test
adc
lret
cmp
in
cmc
hlt
mov
mov
arpl
int
popf
sub
cmp
mov
les
movsl
add
mov
lock
lock
sub
jl
repnz
fwait
add
sub
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
movsl
dec
mov
mov
in
bound
or
sbb
fisttpl
outsb
les
pop
sbbl
jecxz
cmpsl
frstor
sub
mov
mov
in
jnp
cli
jnp
inc
mov
mov
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
add
xor
iret
gs
xchg
pushf
out
js
fdivrl
testb
je
dec
lea
shl
or
push
adc
insb
mov
dec
ret
push
idivl
les
push
mov
aas
mov
push
xchg
pop
and
frstor
dec
cmp
xor
shll
gs
add
aam
mov
dec
pushf
push
test
add
cli
dec
sbb
mov
popf
icebp
stc
inc
pop
pop
push
test
pushf
dec
shlb
push
sbb
cmp
jl
adc
scas
dec
mov
scas
adc
stos
or
cmp
stos
xor
xor
cwtl
push
push
xor
leave
loop
inc
mov
push
clc
inc
shlb
lock
in
mov
out
sbb
dec
and
xchg
imul
lods
out
inc
popf
jmp
pop
cmp
call
xchg
cwtl
fidivs
popf
iret
gs
sar
nop
jne
push
inc
mov
or
push
cltd
nop
dec
daa
jmp
pop
push
shl
mov
shll
andl
lahf
ss
add
xchg
cwtl
adc
cmp
mov
lock
mov
adc
jecxz
sbb
dec
fcoml
mov
dec
cltd
clc
mov
adc
scas
sar
inc
dec
adc
shlb
xchg
mov
adc
arpl
mov
xchg
test
and
and
loope
stos
jnp
jbe
mov
test
adc
push
scas
adc
adc
mov
fdiv
xchg
xchg
insb
push
dec
std
cmpsl
js
jb
pop
xchg
ficomps
push
fwait
sub
xchg
insb
inc
mov
sarb
xchg
xchg
sbb
push
out
mov
movsl
and
mov
fucomi
inc
adc
sbb
enter
sbb
push
adc
pop
sub
mov
movsb
adc
arpl
andb
lods
call
mov
sbb
clc
sti
mov
sbb
out
mov
or
cmc
lods
inc
inc
or
add
xchg
int3
addr16
shrb
arpl
dec
xor
out
out
sbb
push
dec
into
mov
mov
push
pushf
lds
mov
mov
outsl
mov
jae
or
idivb
mov
cmp
addr16
shll
call
xchg
dec
data16
arpl
cs
neg
ja
insb
ss
aas
cmpsl
xor
jmp
jmp
pop
ds
pop
cwtl
int3
mov
dec
and
or
adc
adc
enter
ret
out
std
mov
scas
jmp
cmc
lcall
sub
ljmp
cmpsb
dec
imul
sahf
loop
pop
push
xchg
mov
imul
imul
daa
and
adc
icebp
cmp
fcomps
add
mov
mov
cmp
shlb
pop
dec
int3
mov
fwait
addr16
scas
arpl
clc
scas
jl
xor
les
mov
cmp
sub
adc
xchg
xchg
negl
test
shll
xchg
or
mov
in
add
insb
mov
repnz
pcmpgtb
ret
lea
outsb
insb
scas
mov
call
mov
xor
adc
pop
xchg
mov
lcall
and
adc
xor
xchg
dec
daa
adc
inc
mov
mov
das
sbb
mov
dec
inc
mov
hlt
data16
pusha
jo
cmp
pop
fs
mov
push
push
lods
xlat
insb
jbe
mov
jo
pop
ds
xchg
int
je
pop
mov
js
pop
aas
cmpsl
xlat
in
idivl
mov
inc
pusha
push
cmp
or
mov
dec
fs
cmp
push
mov
push
push
pop
lods
shrb
fimull
pop
lods
pop
insb
push
cmp
outsb
push
mov
and
xor
adc
dec
mov
xor
dec
xor
sub
dec
mov
jne
pop
xor
and
dec
mov
mov
outsl
cmp
mov
pop
dec
mov
cmc
cld
jg
inc
inc
xor
adc
pop
add
inc
mov
xor
invd
inc
inc
xor
mov
jnp
inc
push
mov
or
mov
shlb
xchg
enter
ret
test
sti
std
mov
sti
and
ss
mov
adcl
gs
jb
mov
mov
imul
mov
das
push
xchg
cmp
call
fwait
cwtl
push
imul
cmc
cld
jg
inc
sbb
lret
movsl
mov
rcr
push
mov
sub
cmp
sub
cmc
sbb
repz
loopne
test
daa
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
stos
stos
inc
lcall
cmp
lods
push
push
pop
call
jg
mov
mov
fwait
leave
cmc
and
add
sti
insb
inc
ret
sbb
mov
jge
fisttpl
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
and
pop
out
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
cmovno
or
xchg
dec
inc
xor
inc
cmp
insb
sbb
mov
xor
sbbl
push
dec
sbb
pushf
aas
mov
jnp
hlt
leave
add
sbb
test
lcall
dec
test
icebp
ficomps
xor
stos
dec
pop
inc
test
dec
fistl
xchg
out
mov
dec
mov
xor
rcrl
std
in
leave
dec
stos
ja
fidivl
ret
jo
xchg
adc
jno
icebp
cld
out
stos
inc
jl
push
adc
pushf
mov
lods
mov
data16
jb
js
out
inc
fwait
leave
ss
sarb
lds
mov
test
xor
push
shl
pop
or
sbb
movsb
jp
mov
test
mov
inc
loop
in
or
mov
shl
test
out
push
hlt
mov
stos
je
sbb
inc
subb
push
inc
popf
jmp
lret
imul
fildl
cli
jmp
mov
arpl
xchg
xchg
inc
fwait
sbb
clc
cmp
jnp
test
pushf
mov
repnz
repnz
inc
sbb
arpl
adc
iret
fld
jg
adc
stos
test
flds
loop
hlt
push
mov
repnz
divb
stc
cli
in
test
or
cmp
les
or
pop
ret
popf
addr16
inc
mov
ljmp
inc
pop
lret
rcr
xchg
pop
xchg
jnp
xor
add
sub
sbb
js
das
sbb
loopne
mov
and
sbb
sbb
mov
clc
movsb
mov
pop
mov
fnstenv
cmp
pop
fsubs
fistl
cwtl
jne
xchg
push
mov
fsubp
test
mov
pop
ds
lret
gs
das
in
cmc
hlt
fsubs
xor
out
les
jns
pop
mov
test
add
int
adc
iret
mov
or
xor
rcrb
loope
cmp
adc
int
sbb
rcrb
popf
fildl
adc
sub
inc
inc
std
cs
sbb
xchg
or
sub
popf
pusha
popf
ljmp
mov
ret
pop
mov
cmp
push
fiaddl
pop
inc
imul
jge
lcall
xchg
fistl
mov
shrb
add
mov
jmp
movsl
ficoms
jle
mov
push
test
or
and
andl
cmp
xchg
adc
dec
aam
daa
les
jbe
mov
and
mov
xlat
or
pop
fdivrl
mov
call
hlt
int3
or
push
orb
jle
adc
sub
mov
sbb
ret
js
test
or
mov
call
enter
repnz
mov
in
mov
psubusb
sbb
xor
enter
lcall
dec
xchg
ror
mov
and
jg
stos
repnz
stos
xor
add
fildll
stc
inc
fldt
lcall
cli
pop
shll
xchg
movsl
add
or
xor
jb
fisttpll
sbb
xor
pop
fnstenv
movsl
bnd
enter
cltd
mov
orl
ret
sbb
add
adc
mov
test
xchg
stos
lea
int3
push
frstor
mov
xchg
sub
cmp
popa
jge
outsl
prefetch
jno
cltd
jns
pop
int3
daa
loopne
repnz
and
cmp
sbb
pop
mov
push
mov
dec
or
in
mov
mov
pop
pop
add
jecxz
pop
sub
dec
jmp
sub
add
rorb
jl
adc
mov
ret
and
js
in
jno
or
add
dec
and
insb
push
inc
mov
dec
pop
add
jecxz
xor
fcompl
xchg
dec
cmp
cld
jo
test
xchg
pop
add
cmpsb
fistl
mov
xor
xor
pop
iret
push
mov
cmp
cwtl
lock
sarb
and
mov
ja
mov
jg
int3
sbb
rcrb
push
ret
pop
imul
add
mov
clc
xor
int3
mov
mov
sahf
cmp
pop
hlt
leave
sbb
and
adc
inc
sub
lahf
adc
fildll
mov
dec
mov
pop
add
ljmp
ds
mov
stc
add
lods
jo
jp
mov
scas
dec
cmp
sbb
push
jne
mov
aaa
sub
jmp
sbb
xor
stos
dec
mov
pop
and
lret
lcall
and
cmpsb
jmp
int
add
inc
lret
push
daa
pop
mov
xor
cmp
stos
xor
xor
cwtl
sub
mov
leave
loop
das
arpl
ret
test
sbbl
das
sti
fsubrs
sbb
mov
push
xchg
imul
mov
mov
out
fnsave
xor
mov
je
cmp
add
xchg
pop
dec
xchg
fwait
int
imul
es
dec
mov
mov
adc
xchg
push
into
push
ficoms
or
and
xchg
rcr
dec
lahf
lret
or
add
mov
popa
pop
rcr
outsl
and
mov
xor
icebp
aaa
or
out
dec
inc
sbb
rcrb
outsl
sub
arpl
dec
sbb
push
dec
xor
dec
cmp
xchg
cmp
aad
enter
aam
sub
mov
scas
or
mov
inc
sbb
outsb
add
mov
je
xchg
das
or
call
xchg
pop
lock
lods
fcomip
push
xor
pop
aaa
cwtl
hlt
addl
inc
sti
addr16
pop
mov
test
fstl
push
fidivrl
dec
lahf
insl
or
push
and
cltd
jmp
and
and
dec
adcb
pop
mov
aas
adc
popf
das
imul
shl
xchg
dec
gs
xchg
cmp
je
fistpll
sbb
cmp
cmp
pushl
fildll
repnz
inc
sbb
das
cmp
popa
iret
fld
pop
xor
mov
test
xchg
cli
pusha
repnz
out
jge
mov
jns
stc
push
cli
xorl
jl
inc
dec
xchg
rcr
nop
pop
stos
pop
mov
sahf
inc
sub
imul
insl
mov
mov
xor
or
push
inc
je
out
aas
cmpsl
xlat
lds
shlb
test
pop
je
ret
bound
push
cmp
xchg
mov
pop
testb
call
aas
sti
sti
and
xor
jecxz
mov
adcl
imul
sub
mov
xchg
lea
shrl
push
mov
stc
stos
push
sbb
dec
clc
clc
sti
mov
sbb
add
aaa
aaa
mov
push
sbb
or
daa
pusha
mov
xchg
repnz
inc
sbb
fs
lret
pop
aam
push
dec
in
sbb
lods
stos
dec
adc
in
popf
mov
mulb
cmp
xchg
mov
movsl
idivb
or
dec
cmp
dec
jbe
jno
mov
in
sub
jno
or
cmp
in
adc
cli
jnp
inc
mov
mov
jmp
add
lret
jns
je
rcll
outsl
lret
movsl
cli
jg
inc
insl
std
imul
mov
push
mov
outsl
push
or
pop
fdiv
in
and
cmp
or
cmp
xchg
sub
adc
in
cmc
fcompl
mov
mov
inc
xchg
lret
fwait
jno
xchg
push
pop
mov
movsl
sti
pop
mov
xchg
ficomps
jae
sbb
in
dec
or
bnd
push
mov
repnz
shlb
adc
stos
iret
daa
pusha
mov
gs
imul
das
push
xor
mov
lahf
mov
jae
jno
rorl
inc
dec
dec
mov
xchg
lret
rcrl
mov
popf
lret
ret
jno
test
mov
or
jnp
push
mov
bound
mov
aam
stos
sti
mov
lods
jle
mov
adc
pushf
shr
fwait
sahf
sahf
adc
inc
loopne
adc
dec
mov
sarb
jp
arpl
int3
inc
dec
or
test
fwait
jmp
xchg
adc
push
fidivrs
cltd
jmp
dec
inc
mov
jns
fsubr
popf
lret
mov
jne
out
out
cltd
js
cmp
lret
inc
pushf
and
out
adc
mov
jecxz
adc
xor
and
sti
les
lahf
inc
aad
push
into
jmp
int
inc
push
dec
fld
pusha
hlt
add
es
fcoms
mov
add
lret
push
lods
xchg
sub
adc
leave
add
clc
mov
inc
mov
mov
movsl
xor
cmp
aaa
push
out
push
cmp
ret
xchg
nop
lret
add
dec
sbb
outsb
les
inc
jl
jnp
mov
jle
or
adc
jbe
mov
scas
mov
in
mov
push
mov
inc
stos
push
cmpl
xor
mov
rclb
dec
xor
shlb
mov
repz
insl
imul
xor
xabort
mov
movnti
out
or
adc
arpl
or
push
adc
ds
push
inc
mov
sbb
inc
push
enter
jbe
or
mov
inc
scas
aam
stos
pop
cmpsl
xchg
mov
pop
xchg
ficomps
and
pushf
sbb
aad
mov
lcall
dec
test
jno
sub
loop
dec
sbb
add
pop
and
leave
fiaddl
mov
lahf
sbb
jmp
insb
in
dec
or
leave
add
mov
stos
sub
or
bound
adc
cmp
mov
stos
test
mov
jmp
jmp
aaa
mov
cli
jnp
inc
mov
mov
sbbl
push
dec
mov
jno
dec
mov
push
in
xchg
rol
pop
test
out
xor
and
dec
jns
fs
or
bound
mov
sbb
outsb
mov
loope
cwtl
xchg
adc
xchg
jle
fldpi
mov
cmc
mov
add
dec
add
popa
push
xchg
int
cli
into
aam
imull
into
sbb
dec
pop
clc
sti
mov
jecxz
movl
ja
leave
and
jbe
mov
ret
push
inc
test
mov
mov
xchg
push
idiv
fsubrp
lods
test
pop
in
mov
xchg
xchg
and
pop
add
in
jns
cmpsl
xchg
test
mov
mov
sbb
cmp
call
jl
mov
and
in
push
test
sbb
cld
xchg
repz
pushf
lahf
xchg
data16
sub
push
mov
inc
inc
cmp
mov
stos
xchg
xchg
sub
mov
stc
in
movsl
ret
xor
sbb
xor
fsubl
movsb
push
fmuls
mov
jne
mov
aas
inc
cmc
cmp
cmp
int
inc
sbb
and
mov
mov
mov
arpl
mov
out
movsb
mov
loop
stc
in
sti
mov
adc
iret
aas
shlb
call
sbb
inc
cs
xchg
inc
stos
mov
mov
sbb
mov
push
ja
inc
in
dec
push
rolb
out
ror
stc
jp
aaa
pop
rcrl
roll
jmp
xlat
pop
xchg
push
sbb
or
pop
lds
stos
fwait
popa
cmp
loopne
lds
cmp
push
pushf
mov
out
cli
icebp
sbb
lds
ret
dec
dec
push
cwtl
mov
pop
or
ds
iret
xchg
push
mov
inc
aas
imul
ret
icebp
cld
mov
imul
stc
fld1
jb
pop
aam
aas
mov
bound
out
inc
cwtl
mov
rclb
mov
sub
imul
pusha
mov
lcall
lea
cmp
ret
mov
pop
push
dec
cwtl
repnz
add
pop
addl
sub
mov
xor
test
int
mov
pop
sub
pushf
jecxz
sbb
test
ret
and
adc
sub
fucomp
jae
pop
sbb
imul
sarl
mov
sbb
stos
sub
dec
movsl
adc
lcall
jae
ds
mov
pop
xor
cwtl
mov
mov
leave
loop
inc
mov
mov
sbb
stos
cwtl
xor
lret
xchg
sbb
pop
adc
xchg
jno
cli
pop
push
xor
push
mov
fld1
jb
cmp
jecxz
repz
enter
sbb
mov
add
xchg
dec
daa
fildll
cmp
pop
sbb
mov
sub
into
sbb
loopne
sti
mov
sub
cmp
mov
sub
pushf
ss
dec
lcall
dec
and
jg
stos
repnz
stos
xor
add
fildll
stc
dec
cmp
in
cmc
fsts
sbb
cmp
test
sub
lds
stos
inc
lcall
or
stos
xor
xor
cwtl
or
mov
leave
loop
das
jmp
clc
xor
je
stos
loop
xchg
add
inc
mov
mov
dec
lods
push
jmp
mov
aam
jbe
mov
iret
hlt
xchg
test
bound
lds
popa
fcompl
sbb
es
hlt
je
dec
dec
imul
cmp
js
test
xor
sbb
jp
repz
ret
mov
xlat
mov
cmp
mov
mov
cltd
sub
sbb
movsl
fiaddl
fsubrl
cwtl
push
imulb
xlat
pop
sbb
push
push
clc
stos
bnd
mov
pop
scas
mov
fisttpll
ss
sti
stc
cli
in
test
or
shlb
sub
mov
adc
addr16
push
fistl
pop
pushf
sub
inc
adc
dec
xchg
mov
mov
ss
xor
xchg
pop
adc
addl
or
inc
cwtl
in
or
pop
adc
xchg
mov
mov
cmp
dec
xchg
xchg
inc
cltd
enter
mov
enter
sbb
cwtl
test
imul
sahf
dec
sub
jg
into
pop
add
gs
mov
jne
aam
pop
pop
dec
pop
dec
cwtl
stc
sti
mov
imul
pop
mov
pushf
mov
hlt
sub
cwtl
lret
movsl
cltd
icebp
idiv
inc
pop
mov
test
xchg
sbb
repz
loopne
test
daa
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
scas
push
adc
mov
or
addb
add
dec
pusha
push
jg
jnp
xor
pushf
cli
and
cmp
fs
in
testl
aad
insb
mov
fsubrs
xchg
sub
push
test
push
lods
push
sub
scas
pop
and
jg
sti
std
mov
sti
and
or
cmp
xchg
sub
shlb
and
xor
js
repz
ret
mov
xlat
mov
cmp
mov
mov
cltd
js
mov
mov
mov
mov
fdivl
fs
dec
mov
jg
js
push
xchg
lret
mov
dec
sbb
clc
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
cmp
enter
mov
pop
pushl
popf
xor
or
fwait
pushf
adc
xchg
push
cltd
sub
jno
dec
and
fcomi
js
inc
bound
cld
add
add
add
inc
pop
jecxz
sti
fcmovu
rcr
mov
aam
stc
repnz
ljmp
int
int
cmp
jg
mov
cmp
fnstenv
xchg
xchg
inc
cltd
enter
mov
cmp
loop
jg
sub
adc
jmp
inc
sbb
dec
mov
iret
adc
fcompl
cmp
mov
test
sub
dec
lahf
lds
add
sub
push
sub
mov
rcll
orb
orb
push
jbe
out
movsl
add
sub
mov
dec
sbb
push
lahf
pop
sub
xchg
pop
rcr
repnz
push
sbbl
stc
and
lock
sbb
aas
mov
mov
mov
adc
gs
hlt
cli
enter
test
fstl
inc
pusha
ficoms
jg
cmp
mov
loop
xchg
sbbl
jne
pop
clc
xor
shll
repnz
xor
pop
sbbb
je
inc
cmp
enter
mov
daa
das
inc
and
jecxz
call
es
mov
pop
xor
add
scas
adc
jp
sub
lods
push
repnz
dec
daa
adc
adc
xor
cmp
mov
stc
mov
es
cmpb
pop
mov
jecxz
adc
pop
pop
sbb
xor
cmp
mov
jo
int3
addr16
mov
pushf
fs
xor
shrl
sub
mov
stc
mov
sub
cmpsl
xchg
cmpb
test
push
xchg
push
sbb
dec
sbb
mov
cmpsb
xor
jb
fisttpll
cmp
xor
jno
cmp
inc
shl
add
repz
sbb
in
sbbl
clc
jb
shrl
negw
mov
rcll
ja
movsl
cli
jg
test
sti
mov
into
mov
cwtl
flds
mov
mov
add
sbb
adc
addl
out
sub
in
shrl
movb
shr
jmp
out
mov
adc
or
in
push
dec
lods
sub
ljmp
sbb
adc
pop
sub
sbb
dec
xor
fisubrl
xor
mov
mov
mov
pop
stos
inc
or
lret
jae
mov
jmp
add
subl
mov
adc
cltd
or
adc
dec
mov
cmpsl
dec
push
xor
ret
mov
cld
loop
jge
mov
sbb
jo
sarb
rcrb
iret
and
adc
add
rol
sbb
loopne
fidivrl
cmp
mov
fldl
rcr
call
inc
cltd
enter
lret
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
divb
ficoml
cmp
ret
loopne
mov
jns
rcrl
inc
fdiv
sub
push
sbb
pop
sub
mov
repnz
xor
sbb
int
inc
sbb
cmpb
out
cmpsb
sub
mov
cli
mov
pop
ljmp
loop
mov
jae
cmp
dec
popf
scas
je
or
sub
cmp
or
cmp
adc
cltd
imul
stos
mov
add
mov
cwtl
jb
lods
jne
scas
dec
mov
addr16
popf
jbe
push
leave
xor
fadd
mov
jnp
shll
popl
xor
mov
or
xchg
mov
mov
fcomps
mov
cmpsl
ret
out
std
mov
pop
fdivrs
adcl
adc
ljmp
and
lret
inc
adc
adc
stos
sbb
push
sub
idivl
inc
imul
mov
or
into
sbb
and
xor
roll
mov
inc
sbb
add
dec
and
xor
dec
mov
push
push
lods
push
insb
test
push
in
mov
daa
jns
stc
xlat
xchg
dec
rcrl
jecxz
pop
sbb
jbe
jge
push
insl
sub
dec
mov
test
mov
push
cmp
movsl
mov
fwait
pusha
push
cmp
xor
stc
and
or
mov
movl
xchg
adc
or
xor
sbb
mov
and
fld
call
inc
or
jne
adcl
adc
lds
mov
adc
shlb
test
add
or
in
dec
gs
inc
xor
repz
push
aas
pop
movsb
xor
pop
dec
aaa
or
ja
pop
mov
cmp
pop
xor
dec
sbb
jno
movsb
dec
or
int3
sub
movsb
leave
lods
push
xchg
xchg
push
neg
fs
fbld
ror
lret
pop
out
cwtl
xchg
aas
pop
cmp
mov
xchg
add
xchg
add
mov
arpl
cmc
in
pop
test
lods
jle
test
push
cmp
pop
je
enter
cmp
sbb
imul
idivl
cmp
sti
std
pushl
adc
mov
mov
ret
push
jno
fidivrl
jno
sub
in
popf
xor
jmp
std
mov
sti
and
ds
mov
adcl
gs
jb
mov
mov
imul
mov
xor
adc
loope
dec
pop
add
jmp
clc
ds
and
fistpl
inc
inc
sbb
add
or
sub
test
sub
and
scas
leave
xor
sbb
cmp
stos
push
test
inc
adc
test
cmc
sbb
push
push
cld
sub
lret
shlb
mov
dec
mov
daa
sub
xor
mov
mov
mov
jb
xor
push
jae
adc
adc
lahf
scas
jg
pushf
jne
jnp
inc
mov
mov
inc
sbb
add
mov
test
adc
test
mov
ljmp
popf
addl
or
and
call
mov
inc
jmp
adc
into
fwait
aaa
pop
jb
sbb
pop
les
lea
cltd
jmp
inc
stos
daa
fwait
jge
mov
daa
pop
add
call
cmp
add
sbb
test
sbb
in
add
rcll
pop
sub
roll
fcomps
je
cmp
ss
into
pushf
ror
mov
and
push
nop
mov
fisubl
xchg
aaa
pop
mov
fildll
stos
jg
xchg
mov
popf
lret
mov
pop
mov
add
mulb
xchg
imul
fistl
cmp
gs
lods
inc
shll
scas
or
scas
aaa
mov
cli
jnp
inc
mov
mov
inc
sbb
add
mov
jno
dec
mov
push
in
xchg
rol
pop
test
inc
xchg
ljmp
lahf
jle
or
call
dec
cmpsl
cltd
out
call
cwtl
sub
xchg
mov
je
push
repz
pop
jne
adc
xor
mov
sub
fistpl
imul
sub
int
movsb
pop
cs
jge
nop
lods
lret
adc
in
lock
push
pop
fimull
imul
shll
stos
cmp
add
push
aad
test
mov
jne
lret
mov
dec
popf
ljmp
mov
nop
mov
xchg
cmpsb
dec
or
aad
mov
mov
xchg
jl
js
jbe
xor
pop
pusha
jp
xor
push
xor
fs
and
mov
adc
lahf
cs
insb
cmp
daa
xchg
int
sub
dec
and
cmp
xchg
mov
jle
ds
jmp
std
mov
sti
and
or
loopne
hlt
pop
and
cmp
inc
inc
cmp
mov
pop
fisubs
fdivs
mov
add
adc
mov
imul
lcall
pop
divl
push
fwait
mov
stc
popl
lock
negb
or
leave
nop
jg
adc
ret
popf
fsubl
les
push
cli
mov
mov
push
push
mov
pop
jae
fldt
test
xchg
test
test
mov
sbb
cltd
inc
sbb
inc
lcall
pop
test
lods
jne
enter
xchg
fucomi
repnz
add
out
js
lea
loopne
out
addb
or
aas
push
or
jp
imul
xchg
jmp
dec
out
ja
lret
lcall
cmp
or
ret
pusha
ds
sbb
inc
hlt
mov
xchg
test
imul
sarb
shl
mov
push
and
mov
mov
test
xor
mov
lret
jecxz
pop
cwtl
mov
js
repnz
xor
jo
les
xchg
in
cwtl
lret
movsl
adcl
lret
mov
into
sbb
pop
and
sahf
popf
int3
sarl
lret
gs
cmp
ret
sbb
inc
imul
arpl
stos
xchg
stos
sub
xchg
movsb
in
vpaddw
push
mov
mov
push
or
pop
popf
sbb
cwtl
pop
scas
add
jl
xchg
sbb
in
cs
xchg
and
les
lret
out
push
push
lods
xlat
push
call
iret
pusha
sbb
mov
jb
mov
out
adc
mov
shrb
mov
xchg
scas
mov
inc
push
adc
jl
push
sub
mov
in
repz
mov
test
xor
mov
lret
jecxz
pop
cwtl
scas
enter
js
repnz
xor
lds
push
adc
jecxz
sbb
stos
dec
xor
push
test
inc
mov
and
xchg
sbb
stc
pop
arpl
mov
ret
add
idivb
or
jns
cmpsl
push
jne
inc
pop
inc
scas
dec
fs
addr16
pop
loopne
cltd
loope
inc
mov
mov
int3
push
or
push
fstps
add
mov
jl
adc
and
std
decl
scas
ds
xchg
out
mov
mov
out
jecxz
stc
cmp
adc
add
ja
mov
pop
pop
pop
out
dec
mov
ret
dec
inc
xor
sarb
lods
sahf
dec
inc
mov
push
mov
sbb
mov
push
mov
clc
add
fs
lahf
fdivs
mov
mov
jecxz
gs
mov
mov
or
orl
loope
addr16
divb
outsl
sub
mov
cwtl
mov
aaa
jns
pop
and
xchg
std
adc
sub
cmpsl
xchg
cmpb
dec
mov
cmp
adc
cltd
movsb
add
stos
mov
add
mov
push
xor
ret
mov
fdivr
repz
int
mov
mov
add
mov
cmp
rcr
mov
test
inc
les
clc
pop
repz
cmp
xor
cmpsb
enter
push
dec
sahf
mov
fs
mov
dec
inc
xor
ds
or
xchg
xor
mov
cmp
xor
sbb
bound
pop
mov
mov
test
int3
mov
mov
sub
mov
stos
add
dec
dec
clc
jl
subb
push
pop
imul
or
sub
dec
push
cli
jne
pop
and
push
lcall
add
in
jns
cmpsl
xchg
test
mov
mov
sbb
mov
les
adc
inc
dec
loop
mov
adc
cmpsl
inc
fs
xor
push
fcomip
sbb
xor
inc
sbb
mov
fwait
push
dec
mov
adcl
xchg
inc
cwtl
dec
and
mov
fcomp
cmpsb
enter
scas
lcall
cmpsl
ret
xchg
mov
mov
clc
xor
fcompl
xchg
push
inc
mov
dec
dec
or
mov
dec
inc
sbb
pop
das
or
add
push
push
repz
adc
xchg
stc
pop
adc
dec
jnp
into
add
lock
mov
push
adc
xor
test
xchg
sub
lods
xchg
sub
adc
loopne
shll
inc
lock
xchg
cmp
mov
mov
stos
adc
sbb
popl
scas
sub
xchg
add
insl
mov
leave
xchg
jb
jge
jbe
sbb
adc
push
xor
sub
dec
pushf
mov
push
leave
data16
in
rorb
sub
or
mov
push
mov
lods
pusha
js
lods
repnz
xor
pop
cmp
lret
xchg
mov
aas
cmpsb
push
jbe
mov
jmp
xor
fld
call
inc
cltd
enter
lret
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
cli
jae
mov
xor
stos
jecxz
mov
fsts
mov
mov
add
hlt
mov
jbe
xor
int
sbb
iret
dec
notl
in
lods
push
add
xchg
mov
rcr
shll
jge
stos
inc
jae
pushf
jbe
lods
mov
pop
outsb
fsts
ds
sbb
imul
add
xor
sub
idivl
or
scas
aaa
mov
cli
jnp
inc
mov
add
or
cmp
rcr
sarb
call
adc
and
int
cmp
jg
mov
pop
mov
gs
das
scas
add
fdiv
addl
and
sub
popf
xchg
pop
mov
ret
adc
cwtl
dec
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
mov
mov
and
cmpsl
mov
nop
pop
sbb
cltd
mov
pushf
dec
xor
popf
dec
mov
mov
loop
leave
pop
fildll
xchg
cmp
in
mov
push
sbb
cmp
jl
inc
scas
movsb
xor
mov
cmpsb
xor
jb
loopne
sbb
cwtl
inc
sbb
mov
js
in
movsb
lahf
mov
sub
xchg
cmp
and
adc
rclb
adc
cmp
test
xchg
mov
stos
test
pop
sahf
cmpsb
enter
cmp
fwait
lea
xor
andb
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
fidivrl
pop
cmpl
mov
add
xorb
mov
mov
cmpb
sbb
fs
mov
sahf
push
test
test
movsb
fistps
je
sahf
das
xchg
stc
cli
in
test
cmp
leave
daa
add
or
fistps
sub
in
popf
mov
push
mov
lods
pop
pushf
sbb
adc
pop
pusha
pop
into
xor
fucomi
repnz
leave
loop
and
xlat
add
or
cmp
shr
sarb
test
lret
mov
adc
and
gs
mov
xor
push
iret
clc
jb
std
mov
sti
and
or
es
hlt
pop
sub
add
insl
imul
and
test
les
mov
ret
arpl
lds
aas
out
and
xor
mov
add
test
jp
lcall
jmp
ror
mov
and
jg
sub
pop
stos
push
sti
clc
jl
inc
add
push
lahf
jp
xor
fldt
jo
lea
sbb
repz
push
push
mov
stos
ja
add
pop
xchg
pop
lahf
lods
pop
test
push
mov
mov
sbb
js
popf
mov
fmulp
loop
and
push
cwtl
mov
sarb
jb
adc
in
xchg
sub
repz
mov
mov
push
adcl
xchg
std
cmp
mov
loopne
push
xor
mov
pop
mov
lcall
push
or
popa
mov
pop
push
mov
shll
lcall
cmp
and
mov
adc
les
enter
mov
inc
sub
xor
in
jl
jno
or
jmp
clc
lret
subb
mov
aaa
jns
pop
and
lret
or
jae
cmp
sub
jp
les
aas
inc
mov
outsb
cltd
sbb
push
cmpsb
cmp
ja
andl
fsts
scas
fcoml
mov
sbb
jmp
mov
and
stc
pop
inc
bound
mov
xor
push
ret
mov
idivl
inc
out
std
mov
pop
ds
dec
test
dec
loopne
mov
repz
mul
ja
stos
pop
lcall
fs
lret
jne
popf
stos
mov
sub
stc
inc
pushf
cmp
in
mov
add
xchg
cmp
or
filds
xchg
jae
mov
and
pop
cmpsl
fists
adcl
xchg
xor
jmp
sbb
insl
lcall
aas
in
popf
pop
mov
xchg
push
idivl
in
xlat
dec
lods
pop
push
lahf
push
and
mov
mov
clc
mov
call
add
push
mov
xor
push
fwait
or
mov
outsl
imulb
aad
fs
cmp
loop
mov
fstpl
jp
das
pop
ja
or
pushl
arpl
idivl
cwtl
pop
idiv
decl
daa
ds
xchg
xor
and
jb
push
sbb
movsl
xor
mov
push
test
es
and
push
mov
adc
inc
and
push
or
loope
jl
mov
mov
dec
ret
xorl
stos
shr
ss
cmp
mov
in
and
cmpl
dec
ret
incb
mov
mov
mov
xchg
pop
stos
push
lods
xchg
sub
adc
leave
push
push
clc
sub
sbb
dec
sbb
fnstsw
fistpll
gs
mov
pop
in
mov
leave
add
loopne
push
sbb
stos
sub
add
or
movsl
or
push
fcoml
mov
mov
add
cmp
xlat
fmull
sti
and
mov
pop
aam
daa
xor
rclb
dec
xchg
adc
data16
push
sbb
int
cmp
jne
mov
cmp
lret
fwait
xchg
xchg
inc
cltd
enter
mov
cmp
loop
jg
sub
adc
jmp
mov
xor
mov
pop
or
or
imul
pop
cmp
mov
inc
sbb
dec
aaa
or
sahf
fadds
repnz
pop
dec
rorb
hlt
test
cwtl
sub
sub
sbb
aaa
cli
icebp
and
repnz
mov
popf
jae
cmp
popf
lret
mov
jl
popl
scas
push
mov
lcall
push
push
adc
cmp
or
pop
test
xor
sub
sarl
lahf
ficomps
jnp
inc
mov
adc
inc
loop
mov
mov
or
pop
sub
sbb
loopne
fisubl
pop
jae
inc
movsl
xchg
jbe
mov
cmpsb
or
lcall
sarb
xor
rcll
add
fwait
aas
adc
jne
cmp
push
dec
lea
pop
push
or
js
dec
add
in
and
xor
pop
push
setae
dec
jae
orl
add
test
ss
sbb
push
pop
mov
sahf
mov
pop
dec
dec
pushf
dec
and
dec
sbb
stos
jnp
sub
mov
pop
movsb
leave
insb
inc
das
mov
dec
ljmp
lods
lahf
sbb
js
lock
cmp
repz
inc
sbb
leave
or
dec
sub
outsb
shlb
xor
sub
gs
lods
inc
sbb
cmp
js
cmc
add
fcompl
nop
pop
idivl
dec
inc
cmp
pop
ds
ror
mov
rorb
sub
push
sahf
jp
insb
jbe
cli
jne
mov
ret
fld1
fnsave
sti
sti
and
xchg
enter
mov
hlt
xchg
inc
ret
dec
inc
xor
mov
pop
ret
pop
mov
dec
sbb
jns,pt
sub
jg
into
xchg
sbb
sub
xchg
mov
jg
jo
dec
in
ja
inc
lcall
movsb
ret
inc
mov
icebp
ss
jne
pop
inc
add
fisubrl
inc
mov
and
mov
bound
add
outsb
jl
xlat
jg
push
sbb
test
jge
cmp
sbb
pop
pop
push
cmp
scas
hlt
mov
shll
and
or
xchg
cmp
rcrb
popa
or
jl
pop
into
out
std
decl
test
daa
xchg
inc
pop
addl
nop
dec
and
cmpsb
cmpsb
mov
cli
mov
mov
adcl
sbb
jle
mov
push
aas
adc
dec
pop
mov
inc
mov
gs
xor
mov
mov
fdivl
and
fisttpll
jae
stos
inc
mov
in
call
ss
add
scas
inc
add
cmc
cld
andl
pushf
sbb
cltd
inc
mov
out
shll
les
push
cld
mov
mov
out
jge
mov
push
add
xchg
dec
sbb
fldenv
imul
pop
sbb
cmp
jne
add
dec
fcompl
jb
scas
inc
mov
aad
xchg
pusha
push
cmp
push
mov
inc
xchg
pop
aas
cmpsl
es
or
loopne
mov
mov
sub
xchg
adc
sub
je
bnd
inc
insl
sti
sub
stos
xor
add
out
cld
dec
push
adc
int3
mov
sbb
enter
push
lret
xchg
aam
push
cmp
pop
fildl
inc
dec
jecxz
lret
pop
fnsave
cmp
aas
push
repz
or
add
pop
div
stos
sbb
cmp
mov
sbb
ja
pop
rcll
cmc
cld
jg
cmp
sbb
shrb
adc
dec
and
mov
movsb
sbb
mov
cmp
shr
fwait
add
mov
je
sub
imul
pop
pop
scas
dec
pop
pop
xchg
xchg
fwait
jnp
or
lahf
fisttps
inc
bound
dec
test
adc
xlat
in
andl
std
jp
rcrb
dec
xor
fucomp
push
push
lods
stos
scas
cmpsb
gs
cmpsb
pop
js
jo
jnp
clc
popa
lods
xchg
mov
lret
dec
inc
xor
fwait
inc
and
cwtl
cwtl
adc
jne
or
out
jg
int3
rcrb
lret
mov
xor
call
lods
mov
mov
cmp
ret
arpl
or
add
cmp
inc
sbb
mov
ret
test
pushf
lret
movsl
ret
sbb
push
dec
xor
pop
stos
inc
and
add
mov
jmp
xchg
pop
adc
shll
imul
pop
jno
add
aas
ljmp
xchg
dec
cmpsl
push
test
aad
fs
cmp
mov
loope
xchg
push
mov
jne
push
cmp
ja
jg
test
fs
cmc
stos
jl
aas
add
and
and
cs
test
loop
ds
xchg
xor
popl
rcl
jnp
xor
xchg
aam
imul
out
mov
xchg
mov
cltd
xlat
xchg
cld
lea
hlt
js
test
dec
inc
mov
loop
rcl
repz
xchg
dec
daa
cmpsl
cmp
repnz
pop
das
or
jbe
lret
or
in
push
fstpl
xchg
sbb
mov
hlt
jge
pop
dec
aaa
add
add
stos
dec
mov
movsl
sbb
and
pinsrw
sti
push
dec
xor
jns
test
stc
movsb
dec
mov
push
dec
sti
test
pop
and
ljmp
or
cltd
insl
mov
push
add
pop
jne
iret
dec
lret
sub
adc
mov
fcoml
cs
add
mov
push
or
pusha
adc
leave
sub
pop
js
cmp
lea
xor
lea
outsl
cmp
or
je
cli
mov
jb
sbb
out
mov
sbb
pop
outsb
dec
xlat
sbb
popf
iret
add
push
repnz
insb
aaa
sbb
or
loope
jl
lret
mov
sbb
out
cmc
xor
pop
das
or
dec
inc
jecxz
pop
pushf
in
sbb
test
and
cmpl
sbb
dec
cld
out
inc
sbb
fiadds
sbb
fwait
or
inc
movl
sbb
mov
sub
sub
pop
mov
dec
mov
mov
xor
shl
xor
stos
dec
mov
in
call
cltd
dec
mov
sub
shl
jge
pop
xchg
lcall
push
fistpl
jbe
sub
xchg
dec
jnp
ret
in
cmp
xchg
fwait
iret
pop
cld
jle
lods
mov
and
dec
or
jo
fadds
inc
test
inc
cmpl
mov
aad
aam
sbb
leave
movsb
jp
enter
cmpsl
jnp
mov
ret
inc
mov
mov
aam
mov
hlt
push
iret
sub
mov
and
or
mov
pop
xor
and
sti
and
cmp
add
xchg
std
roll
add
ret
mov
cmp
jl
or
mov
cld
jg
inc
sti
dec
test
adc
mov
cmp
aaa
mov
in
push
dec
mov
filds
jne
lahf
mov
push
dec
mov
decl
mulb
ret
popa
mov
in
push
call
cld
sub
mov
mov
fcompl
jbe
sub
aaa
mov
dec
jg
mov
pop
xlat
cli
js
rcrb
inc
pop
mov
test
dec
cmp
addr16
fwait
pop
popf
pop
cmp
push
in
movsl
mov
mov
pop
cmp
leave
inc
adc
out
jns
sbb
repnz
jno
int3
push
pop
mov
and
inc
mov
lds
pop
adc
aad
clc
in
inc
inc
jle
stos
lds
mov
pop
cmovs
sbb
mov
sub
pop
and
cwtl
push
les
cli
ret
mov
andl
ret
int
insb
cmp
test
sub
dec
jb
lcall
cmp
int3
pop
mov
cmp
repz
jge
sub
inc
and
xchg
fwait
sbb
jb
cmpsb
cmp
push
movb
jmp
and
stc
js
bound
mov
in
and
in
addb
mov
jo
pop
jns
or
adc
sbb
fisubl
bnd
repnz
out
push
mov
jo
cmp
dec
lock
sbb
imul
cmp
leave
cwtl
mov
shlb
mov
ret
das
or
jg
enter
inc
lock
call
test
add
ret
fstpl
push
cmp
sti
add
xlat
cmp
dec
rcrb
xor
jno
pop
mov
lret
xchg
sub
adc
out
shll
inc
lock
sub
mov
ffree
cmp
pop
sub
fdivl
or
cmp
les
std
lock
sbb
pop
pushf
or
sbb
adc
aas
lahf
scas
mov
mov
fdiv
repz
nop
xchg
sbb
mov
push
shlb
pop
mov
test
lret
rolb
mov
adc
cltd
sti
xchg
movsl
fs
xchg
test
sub
inc
dec
lahf
mov
outsl
shr
std
jge
jb
mov
ret
mov
mov
fsubrs
dec
leave
cwtl
mov
mov
int
push
jae
decb
test
or
push
lea
ss
imulb
push
fsubp
jns
jmp
xchg
lret
in
ret
mov
stos
add
movsb
rcrb
sub
jl
cmpsl
ret
das
and
movsl
lahf
cwtl
inc
arpl
out
lea
sbb
sti
dec
sbb
jl
aas
xor
push
jp
mov
stos
fbld
jl
fiaddl
mov
call
ficoml
cmp
adc
mov
shlb
mov
sub
and
dec
faddl
call
xchg
mov
std
cli
jnp
inc
mov
mov
inc
fisubs
push
mov
adc
inc
pop
mov
rcll
mov
leave
aam
sahf
cmpsb
shrl
fdivrs
cli
jae
inc
insl
fwait
sub
movsl
add
mov
inc
bound
inc
add
inc
dec
push
jb
mov
cltd
pop
inc
sub
scas
out
cmc
xor
pop
fildll
sahf
xor
push
mov
shl
mov
ja
sahf
jbe
sti
mov
cmp
jp
add
mov
sub
pop
pop
jne
lret
jp
jno
sbb
imul
aas
pop
xor
mov
ljmp
lret
fnstcw
dec
xor
push
jo
fistpll
sbb
xor
orl
push
in
mov
xchg
push
ficoml
outsl
les
mov
sub
cmp
dec
pushf
add
mov
stc
repnz
scas
aaa
mov
cli
jnp
inc
mov
popa
add
ret
pop
test
and
faddp
ss
push
or
jnp
inc
push
mov
inc
lret
xchg
push
mov
jae
clc
jecxz
mov
jmp
std
mov
sti
and
xchg
xchg
add
sbb
lea
fsubs
mov
dec
into
call
mulb
jae
fiaddl
test
cmp
mov
movsb
mov
lret
jecxz
push
cwtl
mov
out
repnz
adc
cmp
je
dec
mov
fsubrl
fnstsw
int3
fwait
ret
lock
vandnps
and
fisubrs
sbb
cmp
scas
ljmp
popf
sub
jecxz
xchg
mov
stos
sub
inc
pop
das
adc
test
jl
pop
sub
add
mov
xchg
test
es
andb
jge
addb
fists
sti
out
jl
xchg
mov
or
cmp
roll
int
pop
cmp
pop
add
adc
mov
inc
movsb
lahf
cmpsl
jnp
fdivs
inc
mov
gs
mov
pop
and
rolb
dec
into
mov
aaa
shlb
lret
sbb
gs
xor
shr
repz
divb
pop
adc
lret
lahf
pop
push
pop
sahf
sti
jnp
mov
in
pushf
out
fnstenv
add
test
scas
leave
fsubrl
jae
inc
sbb
orb
jno
lds
xlat
sub
jne
sbb
imulb
mov
mov
rcr
dec
mov
lods
sbb
sub
inc
shrl
add
lret
sub
jae
push
fldt
sub
movsl
xor
add
dec
adc
popf
mov
cmc
int
sti
sub
in
mov
adc
adc
es
xor
fmull
adc
aas
int
inc
inc
pop
in
or
insb
inc
and
call
xchg
dec
cltd
enter
fistpll
enter
jecxz
sbb
shr
adc
emms
movsb
std
push
insl
dec
cmp
in
push
dec
scas
shr
xchg
imul
dec
sub
sahf
dec
ret
or
or
add
test
mov
mov
loop
mov
sbb
jno
movsl
mov
fistpl
sbb
les
addr16
or
jae
les
dec
rcrl
pop
add
test
icebp
lret
scas
xchg
stos
dec
aaa
pop
mov
outsb
shrb
mov
les
xor
jnp
enter
pusha
jp
cs
xlat
fcomi
js
push
hlt
negl
nop
pop
filds
addb
sbb
das
mov
in
push
call
mov
clc
das
mov
dec
sbb
dec
push
fstps
cmp
sub
push
cltd
out
cmp
and
and
cwtl
dec
inc
enter
cmpsl
and
fiadds
aam
aad
dec
sahf
dec
lds
jb
fsubl
jle
popa
dec
test
dec
dec
sbb
movsl
xchg
and
js
movsl
mov
xlat
pmuludq
inc
pop
xchg
inc
insl
push
mov
cld
jno
inc
imul
bound
sar
hlt
test
inc
dec
sub
jmp
neg
dec
pop
lret
push
mov
bound
or
xchg
dec
les
dec
or
add
pop
pop
cmp
stos
inc
lcall
adc
sub
cmc
inc
test
adc
scas
pop
test
repnz
dec
scas
push
cld
call
mov
in
cmp
mov
jne
and
mov
inc
push
mov
or
cs
push
xor
insl
fsubs
push
into
xor
jne
sbb
popf
mov
mov
inc
dec
sub
fwait
cltd
or
or
mov
fsubr
mov
inc
sar
cmpsl
shl
pop
adc
inc
lods
ret
popa
push
test
mov
fisttpll
ds
jae
adcl
push
popf
push
sub
or
xor
jp
cli
adc
aam
pop
pop
insl
movsl
xchg
jae
adc
enter
cwtl
xor
lret
mov
mov
fs
jle
dec
or
pop
in
daa
sbb
push
add
sbb
inc
dec
ds
mov
add
popf
mov
add
adc
shrb
test
fidivs
pop
lds
inc
ljmp
xor
inc
cwtl
add
rolb
and
pop
push
mov
mov
mov
sbbb
mov
ror
push
lods
repz
xor
out
lahf
into
cmpsl
ret
fldenv
shl
int
inc
fisubrl
sbb
xchg
xor
or
sub
and
ljmp
push
jle
jecxz
xchg
xchg
sbb
push
push
adc
pop
adc
repz
jns
xchg
fwait
lahf
pop
jecxz
mov
mov
imul
pushf
sbb
ja
mov
hlt
or
fst
addr16
xchg
lahf
push
stc
out
mov
sbb
scas
mov
shl
and
dec
fimuls
lods
stc
cmpsl
mov
js
ret
test
push
in
inc
fwait
xchg
inc
mov
mov
mov
sbb
push
roll
xor
std
test
cmp
cld
xor
add
mov
inc
push
lea
xchg
pop
je
mov
call
xor
sahf
sbb
out
sbb
dec
mov
mov
adc
push
sbb
les
xchg
dec
pop
lods
pop
je
mov
adc
dec
xchg
cltd
inc
shl
mov
shl
mov
ja
repz
adc
sahf
ret
sbb
test
adc
repz
orb
add
test
mov
sbb
pop
repnz
dec
popf
mov
inc
adc
xchg
insl
imul
test
cli
and
inc
and
push
mov
stc
sbb
clc
and
aaa
mov
pushf
sbb
test
or
in
sbb
pop
push
mov
xchg
pop
mov
pop
jb
mov
repz
js
mov
scas
jle
cmp
adc
outsb
invd
jno
bnd
popf
scas
jg
jnp
add
popa
or
fcmovbe
cmp
xor
cmp
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
scas
fstps
call
pop
fimuls
int
pop
sub
dec
push
push
pop
inc
push
mov
xor
jle
pop
push
xchg
int3
fwait
mov
sub
xor
filds
jno
iret
sbb
repnz
loope
pop
add
std
pop
pop
lret
iret
les
add
xor
ret
push
test
lret
mov
shrl
leave
push
push
lahf
xchg
push
imull
fs
mov
ljmp
fsubrl
ret
add
inc
inc
scas
xchg
mov
pushf
push
test
add
popf
jb
xor
and
test
xchg
mov
jmp
in
add
loopne
inc
mov
cwtl
pop
std
andl
xchg
adc
pop
mov
jo
pop
ds
stos
lock
pop
mov
sbb
mov
xchg
mov
ja
fbld
push
setle
outsl
push
mov
std
mov
mov
inc
inc
mov
nop
pop
inc
mov
sbb
pop
sub
js
test
orb
and
dec
imul
repz
sti
mov
mul
xor
jo
or
inc
ret
sbb
fs
jg
fsts
int
call
in
jle
mov
xchg
xchg
sbb
cld
ss
aad
pop
mov
aaa
xor
or
cmp
lret
fists
sbb
or
stos
xor
incl
inc
pop
mov
xlat
sbb
jbe
popf
pop
cmp
cmp
loope
mov
ss
rcrb
ret
jo
shll
loope
pop
test
mov
je
xchg
sbb
mov
out
push
ljmp
out
out
inc
sbb
lcall
cmpsb
inc
xchg
enter
or
xor
push
inc
mov
and
adc
enter
mov
add
insl
sub
ss
into
hlt
mov
sub
sub
addb
je
and
ds
mov
sbb
movsb
push
test
pop
sbb
cmp
jle
pop
mov
repnz
movb
imul
ficompl
fisubl
mov
dec
into
sahf
or
push
adc
push
jmp
into
mov
pop
xchg
aad
cltd
mov
push
pop
push
sub
sbb
mov
aad
mov
dec
cltd
shll
sub
pusha
aaa
call
xchg
dec
xor
cld
and
adc
inc
pop
adc
fiaddl
test
xor
aaa
into
fildl
pop
push
pop
jb
and
mov
xchg
sbb
popf
iret
and
mov
and
pop
cwtl
dec
add
mov
mov
es
jge
lods
rclb
orb
push
mov
push
in
aaa
ljmp
cmp
jecxz
fisttps
inc
push
mov
mov
cmpsl
jecxz
dec
jg
pop
pop
push
lock
jae
imulb
sbb
adc
hlt
hlt
call
lods
out
int3
fnstenv
negl
add
aam
pop
pop
adc
jl
sbb
jp
cmp
imul
loope
fstl
fcompl
and
xchg
add
dec
bound
pusha
out
js
in
pop
rolb
or
incb
or
mov
push
or
fisttpl
mov
inc
fwait
sub
test
stc
into
clc
enter
fcomi
sbb
fwait
daa
enter
test
mov
addl
lret
sbb
das
loopne
jne
sbb
jbe
dec
jae
push
test
or
add
ret
clc
shll
mov
dec
or
inc
sbb
fiadds
jl
fwait
xchg
pusha
repz
add
mov
ret
es
sbb
add
lret
test
push
cld
sub
mov
push
in
mov
jae
mov
call
loope
cmp
sbb
add
push
sbb
or
stos
cmc
mov
mov
add
cwtl
mov
mov
pop
dec
leave
xchg
fwait
jnp
pop
xchg
sub
inc
pusha
fisttps
adc
dec
js
shlb
add
mov
push
dec
mov
push
fdivs
add
mov
lds
pop
dec
shrb
inc
pop
sbb
xchg
lret
inc
mov
mov
jne
and
and
es
sbb
dec
mov
lods
daa
fldenv
mov
nop
das
andl
jecxz
cmpsb
fnsave
add
xor
mov
fstpl
int
mov
sbb
push
jno
or
sub
cmp
mov
negl
jmp
mov
or
ret
in
dec
cltd
nop
repz
in
push
mov
cltd
repz
cmp
dec
add
pop
fmul
jmp
shll
cmp
mov
xchg
test
ret
add
mov
loope
lock
in
pop
scas
jbe
scas
pop
jno
aad
mov
add
orb
pushl
lret
mov
cmp
and
pop
lret
jmp
or
and
dec
cwtl
cld
dec
aam
jns
pop
xor
imul
xor
mov
fcomps
mov
out
outsl
scas
adc
mov
inc
pushf
out
push
rorl
popa
popf
xor
lds
pop
adc
inc
rcrl
jmp
out
push
shl
and
or
add
and
sub
adc
jmp
mov
ffreep
sbb
xchg
ss
ja
mov
les
std
std
roll
sub
mov
enter
jp
add
mov
movsb
mov
dec
aam
mov
enter
iret
inc
andl
in
jmp
xchg
cmpsl
inc
sbb
fistl
movsl
xchg
sbb
cmp
dec
xchg
jle
xor
mov
popf
mov
fwait
or
dec
out
mov
rcrl
ja
add
adc
jle
pop
lret
push
fidivrl
pop
mov
outsb
push
and
test
lods
je
mov
mov
add
add
mov
dec
roll
popf
adc
xchg
lods
sbb
in
dec
and
or
add
sbb
dec
sarl
mov
xor
push
xlat
bound
adc
ds
lahf
mov
lock
scas
in
cvtpi2ps
popf
sti
mov
ljmp
jne
mov
ss
pushf
dec
and
pop
stos
inc
in
cmpsl
dec
mov
jo
dec
pop
test
fldcw
pop
lods
movb
or
imul
mov
ret
jo
xchg
adc
lret
jo
les
sbb
sar
pop
rol
in
clc
mov
movsb
mov
pop
shll
rclb
enter
das
iret
pop
movsl
jb
test
ret
mov
jmp
dec
jecxz
mov
or
lock
fdivrs
repnz
test
fwait
pop
stos
xor
into
fcomp
outsb
movsb
xlat
pop
ds
fsubl
inc
int3
pop
sub
aas
mov
leave
test
mov
lret
mov
push
mov
and
scas
jo
dec
add
leave
inc
shl
mov
je
adc
push
subb
mov
inc
dec
ja
push
inc
jecxz
or
pushf
pop
and
je
ret
mov
int
mov
sub
push
enter
andb
mov
ja
mov
negb
outsb
xbegin
and
andl
pop
pop
testb
mov
mov
xor
jae
mov
mov
push
in
ret
rcrb
fisttps
pushf
arpl
inc
sarb
lds
ds
mov
add
mov
popf
jmp
inc
jb
out
mov
mov
movsb
test
cmpsb
fmul
pop
fldt
push
cltd
jmp
pusha
push
mov
sti
or
pop
push
or
cmpb
dec
mov
test
call
sarb
nop
dec
inc
decl
pop
mov
lds
imul
xchg
jo
cwtl
adc
mov
mov
xchg
out
pushf
mov
movsl
mov
aaa
push
pop
sbb
test
add
xor
mov
mov
int
mov
cld
mov
pop
stos
push
jg
out
aas
aaa
cmp
pusha
add
sbb
addb
push
xchg
pop
sub
mov
pop
iret
aad
xchg
in
push
test
pusha
mov
cld
cmpl
scas
pushl
dec
cmc
xor
adc
inc
andl
test
dec
xor
test
dec
dec
shlb
push
test
call
pop
rcr
popf
cmpsl
ret
inc
jmp
add
mov
jge
leave
js
mov
push
adc
push
add
int
pop
adc
xchg
lret
sbb
jb
ds
mov
lods
mov
imul
movsl
sti
pop
add
rcr
xor
mov
cmp
jp
add
cltd
cwtl
pop
lock
lock
add
xchg
cmpsb
sbbl
sub
pop
and
dec
adc
nop
ficoml
xchg
iret
mov
ss
lock
add
lods
jne
mov
stos
fisubrl
outsl
or
mov
sub
ret
outsl
jle
scas
fcmovnb
pop
test
fcoml
and
hlt
add
or
adc
add
popl
and
inc
push
adc
xchg
mov
jae
dec
lahf
xor
pop
adc
inc
fidivrl
jae
popa
insl
icebp
outsl
push
push
loope
jb
dec
lea
enter
mov
sub
and
insb
pop
adc
test
movsl
in
dec
sbb
ljmp
pop
push
inc
shrl
sti
mov
data16
xchg
jge
push
test
sbb
lods
jo
push
jmp
add
pop
rclb
shl
sbb
jbe
aad
dec
sbb
adc
push
inc
aad
inc
pop
sbb
jne
dec
sub
add
daa
jno
adc
test
mov
sbb
sti
jbe
mov
xchg
adc
shrb
jnp
xchg
pushf
shr
sbb
out
je
pop
ds
loop
sub
and
add
mov
adc
shlb
pop
cmc
stos
inc
cmpb
xor
push
pop
xor
sarl
xchg
std
fwait
mov
call
and
aaa
imul
mov
and
mov
and
fnstcw
and
push
repz
fcos
jl
loop
jmp
aas
pop
test
movsl
mov
icebp
lcall
rcrl
dec
leave
fdiv
and
mov
or
imul
pop
clc
sub
sbb
dec
pop
pop
dec
dec
shll
fldt
mov
rcrl
lods
add
push
xlat
stos
std
cld
sub
cwtl
pop
dec
xlat
mov
aas
jns
inc
aaa
cwtl
push
lret
mov
data16
mov
adc
xchg
jo
mov
sbb
or
andl
in
dec
or
fs
cli
jg
ss
sahf
cmpsb
fadd
pop
xchg
pop
out
cmp
fdivrs
lock
adc
adc
adc
dec
mov
push
cmpb
xor
pop
loopne
call
shrb
cmp
sti
fidivl
jns
pop
shrl
lds
pop
ljmp
inc
test
jns
lret
test
lahf
mov
sahf
sbb
sti
iret
lcall
popf
lret
push
rcr
adc
xor
mov
xchg
add
inc
cltd
movsl
adc
pop
dec
push
mov
pushf
xchg
popf
xchg
sbb
lret
mov
sub
mov
pushl
xor
mov
cld
and
xchg
inc
stc
inc
and
pmullw
stos
decl
jnp
inc
push
mov
or
mov
sub
aam
sbb
cmp
in
mov
pop
clc
or
xor
loop
je
enter
rcll
ret
inc
pop
xchg
mov
mov
cwtl
sbb
and
test
fucomp
daa
adc
adc
int3
bound
lods
imul
fisttps
inc
jnp
into
add
mov
mov
xchg
aas
add
sti
mov
sub
pop
dec
pop
fstpt
sub
push
sub
in
sbb
scas
dec
lcall
cmp
stos
fistps
jbe
mov
imul
inc
cmp
xchg
int
pop
mov
pop
xor
cmp
lock
movsl
mov
pop
cmp
jecxz
popl
in
int3
scas
hlt
jae
add
sahf
cld
loop
inc
mov
ret
faddp
mov
sti
cmp
shll
mov
or
jge
cltd
push
mov
cmp
in
jbe
inc
popa
lcall
sbb
call
inc
cltd
hlt
imul
xchg
enter
mov
gs
mov
fimuls
add
dec
inc
jne
cmp
or
push
or
lods
dec
pop
mov
gs
mov
add
push
jecxz
inc
mov
sbb
imul
xchg
repnz
jo
jg
repz
mov
test
mov
outsl
xlat
stos
mov
add
dec
mov
addl
and
or
dec
mov
lock
insl
sbb
imulb
pop
testb
cmpsl
push
jne
enter
push
lea
shlb
cmp
inc
inc
imul
shll
push
cmp
cmp
mov
hlt
cmp
mov
inc
and
int3
out
idiv
mov
and
fcompl
mov
rclb
jmp
lods
mov
pop
insl
inc
push
sahf
jecxz
pusha
jo
sbb
pop
cmpsb
in
out
call
mov
mov
adc
lock
dec
sbb
mov
dec
shl
stos
shl
and
call
stos
mov
das
adc
movsl
xchg
fwait
lahf
pop
leave
pusha
jnp
mov
hlt
clc
loope
ret
inc
in
dec
fs
or
push
adc
arpl
repz
sbb
mov
cmc
or
mov
fbstp
cmpsl
fwait
sbb
xor
mov
inc
cmp
mov
int
push
cmp
imul
scas
jbe
lea
mov
sbb
les
and
rcr
lahf
std
push
or
mov
jecxz
pop
aas
rorb
rorb
ds
icebp
js
in
jle
jecxz
jp
mov
xchg
jno
jp
sub
dec
sarb
mov
mov
sbb
add
movsl
xlat
or
mov
inc
jmp
shrb
arpl
imul
imul
pop
and
dec
fistpll
xchg
sbb
jge
dec
lahf
mov
mov
loope
jo
cmp
aam
sbb
dec
leave
mov
enter
push
icebp
inc
jb
mov
add
pop
out
fisubrl
xchg
dec
mov
fdivrl
test
xchg
lds
xchg
mov
push
sarb
cwtl
adc
aad
movsb
push
mov
pop
dec
mov
cmp
mov
or
inc
repnz
mov
cmp
lcall
mov
fisubl
mov
mov
inc
cwtl
mov
push
sbb
mov
dec
inc
iret
cmpsl
sti
fcoms
outsl
dec
movb
inc
pop
out
jp
int3
add
xor
repnz
pop
addr16
out
cltd
fwait
int
imul
mov
push
popf
scas
cmp
outsb
cli
scas
pop
xor
out
dec
add
jecxz
mov
inc
out
mov
mov
mov
mov
sbb
dec
leave
cmp
dec
movsl
ret
jl
js
push
dec
iret
push
stos
subl
sub
cmp
adc
xchg
mov
call
push
xchg
jle
or
lock
frstpm(287
testb
and
xchg
fwait
sbb
jbe
cmpsl
pop
movsb
push
rcrb
cmpl
xchg
loope
cmp
fmuls
into
scas
fbstp
arpl
mov
lds
mov
mov
mov
jle
loope
jp
cmp
push
sahf
jns
out
jbe
addr16
imul
xlat
sbb
rorb
loope
dec
mov
movsb
sub
arpl
jo
aaa
xchg
jae
push
test
repz
in
or
mov
int
xor
orl
jae
mov
cld
xor
scas
push
inc
xor
xor
enter
adc
outsb
ror
stos
sahf
sub
es
lret
movsl
iret
cmp
push
fistl
addb
dec
sbb
push
cltd
int
jmp
lret
js
pop
push
lret
push
inc
pop
in
push
adc
xlat
insl
pop
js
stos
repz
or
jo
push
lahf
data16
sbb
adc
mov
push
xchg
sbb
rolb
pop
callw
xchg
ds
ret
notl
outsb
dec
dec
scas
aad
jp
std
add
xor
loop
mov
adc
pop
jg
jbe
sbb
pop
push
fists
test
cmpsb
fwait
cmc
imul
repz
xchg
dec
xorl
mov
jl
out
repz
inc
fnstcw
push
sub
mov
pop
test
js
cmpsb
xchg
xchg
ds
aas
jns
hlt
stos
lahf
shl
lock
pop
adc
pop
adc
testl
scas
mov
test
in
nop
xlat
push
aaa
insb
pop
or
test
test
inc
mov
fucomp
jae
aad
adc
push
jmp
sub
in
cld
pop
ret
or
and
cmp
mov
fwait
mov
pop
test
loope
pop
inc
test
xchg
pop
cmp
cmp
aas
mov
imul
pushl
mov
lcall
jns
pop
and
ret
pop
xlat
sbb
cmp
mov
cmpsl
ret
jp
cmpsb
cmp
icebp
bound
idivb
dec
xchg
push
inc
mov
ds
or
movsb
cmp
clc
js
test
or
jl
dec
call
fimuls
pop
loopne
cli
xor
mov
mov
push
cs
lock
mov
in
popf
stc
mov
movsl
into
iret
inc
adc
inc
push
xor
imulb
cli
xlat
push
pop
mov
xchg
push
cmc
xor
sbb
in
sahf
das
xchg
stc
cli
in
test
or
lods
fcoms
or
imul
xor
add
push
out
ret
mov
adc
xchg
jo
dec
pop
xchg
fistpll
xchg
jl
jle
mov
scas
push
adc
hlt
jp
push
fistpll
cmp
insb
jbe
in
and
adc
dec
push
sarl
int3
bound
imul
cmc
dec
pop
inc
in
out
push
and
push
ss
in
mov
sub
pop
in
ss
movsl
sub
ffreep
cmp
stc
clc
jp
add
adc
dec
nop
dec
add
or
movsb
mov
repnz
int
insb
out
dec
subl
ljmp
pop
fs
sub
cmc
sbb
mov
popf
push
call
les
sbb
add
cltd
cmp
ret
xor
pop
js
xchg
loopne
lcall
jecxz
test
push
adc
lahf
inc
adc
inc
jmp
jno
fs
push
shl
or
imul
adc
mov
mov
imul
or
mov
pop
push
push
in
mov
mov
pusha
inc
mov
cmp
mov
cltd
enter
mov
int3
add
loop
jecxz
mov
inc
push
mov
cmp
mov
xor
mov
imul
cmp
mov
jp
cmp
mov
stos
aad
fdivs
add
mov
sub
adc
push
jmp
lds
shrl
mov
insl
fstl
mov
fwait
gs
mov
fwait
jb
mov
fistl
fiaddl
add
cld
jp
add
sbb
xor
pusha
jp
mov
out
bnd
popf
jecxz
cld
adc
add
jecxz
jno
fmuls
mov
and
xchg
jg
sbb
xchg
mov
ret
inc
gs
mov
mov
ja
sub
push
inc
jb
xor
mov
xor
je
test
js
sbb
ds
sub
jle
cmp
mov
mov
xor
xchg
jae
mov
clc
mov
mov
sbb
mov
mov
mov
lcall
dec
test
dec
lock
rcll
sub
push
test
mov
jecxz
jns
popf
jae
pop
mov
repz
out
cmpsl
mov
or
cmp
adc
mov
movsl
adc
lcall
or
stos
xor
xor
mov
in
lds
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
test
dec
aam
inc
les
clc
sbb
movsl
ret
inc
js
jmp
or
cmp
call
sti
xor
mov
xor
xor
mov
ret
add
xchg
popf
loope
negl
jle
xorl
scas
shr
ss
and
sahf
shll
sbb
adc
mov
xor
mov
add
insl
adc
aad
pushf
ret
pop
pop
dec
test
dec
sarb
sbb
inc
clc
ror
sbb
sub
xchg
pop
stos
repz
sub
cmp
mov
ret
or
addb
test
sbb
jl
fsts
mov
js
jbe
scas
fidivs
ljmp
cmp
mov
xchg
cmp
andl
sub
ror
fnstcw
jns
sub
inc
mov
adc
mov
cli
xor
and
hlt
std
mov
sti
and
test
stc
test
shr
mov
mov
fsubr
mov
cmc
mov
mov
pop
or
and
mov
mov
test
mov
js
fdiv
mov
xchg
pushf
jmp
sbb
pop
xor
or
sbb
std
mov
movsl
sub
adc
dec
in
xlat
mov
js
fildll
mov
xchg
stc
cli
in
test
pop
xor
test
std
stos
js
scas
xchg
ficoml
lret
mov
jp
add
sbb
mov
pop
fnstenv
movsl
and
js
enter
mov
and
sbb
or
sbb
clc
or
sbb
jns
mov
adc
imul
mov
pop
std
sub
mov
ret
pop
or
sub
cwtl
fldenv
mov
push
dec
mov
rcll
fstpl
repnz
movsl
imull
in
ljmp
iret
fwait
pop
push
rcrb
xchg
dec
sbb
adc
mov
nop
pop
xor
sub
adc
leave
push
mov
dec
dec
inc
lahf
mov
jns
xchg
inc
repnz
pop
fidivl
add
mov
or
dec
sbb
mov
cmpsb
xor
jb
fcoml
neg
mov
xor
xor
repnz
fwait
leave
loop
jb
adc
mov
adc
or
test
mov
in
mov
jnp
inc
push
mov
or
mov
aam
fdivrs
jp
call
push
or
lods
jp
xor
fwait
mov
mov
cwtl
cltd
add
adc
cmp
xchg
sub
popf
xchg
push
push
cwtl
mov
test
adcb
cmc
lods
int
pop
into
aam
addl
add
add
mov
cs
and
test
hlt
lods
push
jbe
and
int
add
xlat
stos
les
jmp
and
test
push
lret
dec
sub
xchg
aaa
loope
mov
sti
stc
cli
in
test
pop
xor
test
std
stos
sbb
xchg
ficoml
lret
mov
jp
add
xor
sub
mov
jg
js
in
lds
mov
ret
insl
sub
subl
rcll
es
add
xchg
and
inc
stc
inc
ljmp
inc
push
mov
cmpsl
adc
mov
shr
shrb
fnstcw
xchg
popf
fwait
mov
push
add
movsl
inc
jmp
mov
fadd
bound
cmc
mov
mov
cmc
jnp
dec
add
mov
inc
mov
jae
or
mov
lock
push
cmp
testb
subb
stos
push
lods
xchg
sub
adc
push
test
clc
dec
loop
jne
sub
popf
jae
stos
xlat
xor
mov
pop
sub
mov
mov
adc
lock
movsl
mov
cld
jp
add
sti
call
fstl
jnp
aad
mov
jmp
add
and
clc
imul
inc
mov
xor
fdivrs
aad
stc
xchg
and
mov
popf
in
jl
fwait
lea
xor
mov
sbb
or
and
in
mov
ret
mov
jmp
adc
or
push
adc
mov
negl
movsl
repz
loopne
xor
sbb
imul
or
mov
cmp
loop
inc
sbb
div
mov
mov
xchg
addr16
test
popf
pushf
fs
idivb
cltd
lret
lcall
sbb
inc
jmp
pop
dec
rcr
cmp
imul
adc
sub
dec
xchg
or
inc
sbb
add
xchg
fwait
pushw
rorl
and
mov
xchg
mov
pop
pop
mov
cmpl
sbb
mov
fwait
push
dec
mov
xor
test
xchg
cmc
mov
push
fdivrs
cli
jae
push
insl
jecxz
or
mov
mov
mov
cwtl
cltd
xor
or
subl
inc
cmpb
pop
ljmp
sub
mov
movsl
and
mov
mov
pop
out
xchg
mov
jb
lahf
lret
jecxz
popa
popf
rcl
or
jo
hlt
scas
and
add
fisubl
fnsave
push
and
xlat
dec
pop
inc
inc
mov
lds
ficoml
int3
mov
sbb
lock
aaa
sub
jl
lret
mov
cmp
es
xlat
stos
lds
adc
sub
pop
xchg
jb
in
fidivs
aad
ret
push
push
out
jmp
mov
xlat
fcoml
mov
mov
lds
inc
sarb
js
or
dec
icebp
or
aad
rclb
push
sbbl
imul
mov
sbb
push
and
push
xchg
jecxz
fldl
xchg
pop
addr16
mov
dec
sub
inc
push
sub
movsb
decb
mov
push
mov
dec
shll
mov
lods
pop
movsb
pop
push
sahf
xor
adc
inc
loope
lock
data16
add
scas
jo
leave
pushf
mov
mov
repnz
cmpsb
sbbb
push
repnz
pushf
fs
push
ja
inc
in
xor
mov
dec
out
jmp
mov
jp
popf
daa
arpl
add
or
and
movb
mov
fsubl
sbb
test
jns
dec
inc
mov
fstl
fcoml
dec
pusha
inc
pusha
ficoms
sbb
jno
jg
mov
xor
cs
and
enter
iret
inc
cmp
mov
fwait
ljmp
call
pop
xchg
rclb
in
jae
xchg
ss
fidivrl
pop
jae
gs
cltd
mov
mov
mov
rolb
test
add
sbb
popf
dec
add
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
or
shll
inc
mov
adc
mov
mov
inc
insb
push
sub
xchg
mov
jnp
rcrb
sbb
pop
cs
add
out
jge
dec
lahf
sub
xchg
movl
into
arpl
lds
or
mov
nop
mov
aad
jge
jns
adc
pop
xchg
ja
mov
jno
pusha
jmp
fwait
in
in
bnd
lods
scas
fbstp
loope
lea
xor
sub
mov
call
les
popf
jmp
adc
adc
lods
clc
mov
pop
fidivrl
pop
jae
gs
cltd
mov
mov
mov
inc
outsb
pop
sahf
jg
mov
hlt
je
nop
lea
imul
call
int
pop
mov
sbb
aam
ret
pop
add
push
mov
repz
ds
and
mov
xor
pop
lock
or
shl
xor
lods
movsl
add
ja
mov
dec
imul
lahf
cmp
repnz
sbb
fcmovne
mov
add
dec
ficoml
xor
jbe
js
push
push
fsts
imul
jnp
inc
sbb
pushf
lcall
xchg
jb
insb
arpl
pusha
mov
pop
add
mov
inc
xchg
cwtl
enter
push
inc
pop
rcll
sub
mov
stc
mov
xor
xchg
movsb
fdivs
test
gs
mov
mov
jb
std
cmp
xchg
enter
out
jmp
jecxz
pushf
lds
or
fisubrs
popf
popf
xlat
adc
adc
aad
sub
repnz
inc
xchg
out
dec
pop
or
repz
mov
inc
cwtl
lret
mov
enter
mov
inc
sub
push
jmp
or
sbb
nop
jg
lock
jg
shll
fisubl
and
test
pop
lods
mov
aaa
jns
in
mov
or
xchg
add
leave
jno
cmp
inc
orb
inc
xchg
pop
xchg
ja
cmp
fisttpll
pop
pusha
jp
cmp
pushf
pop
nop
jp
jge
mov
or
ret
sub
sbb
addl
mov
leave
stos
mov
fisttpll
movsl
cli
jg
pop
call
cli
sbb
stos
jb
fwait
outsl
or
aad
sub
fwait
adc
add
ficompl
push
add
adc
mov
mov
dec
sahf
dec
jo
idivl
shlb
mov
mov
sub
jnp
mov
insb
cmc
stc
ja
enter
mov
jle
sbb
sub
sbb
cmpsl
sbb
arpl
and
ror
lods
popf
cmp
cmp
repz
sbb
rclb
fists
sar
scas
in
daa
sbb
mov
jp
mov
imul
jbe
cmpl
cld
lcall
movsb
mov
js
jp
popl
test
mov
xchg
adc
addr16
fdivrs
xchg
xchg
sbb
fld
push
ljmp
add
mov
cmp
mov
test
test
stos
jae
sbb
or
mov
mov
mov
imul
ret
mov
pop
pop
add
repz
jno
lock
lahf
in
or
xor
int
pop
dec
mov
and
insb
or
mov
jo
js
dec
sbbb
jne
les
cli
cmp
shrl
mov
mov
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
ds
dec
push
stos
std
int3
insl
mov
std
mov
mov
lret
jns
dec
and
in
fiaddl
fidivrs
jge
push
xlat
pushf
adc
add
rcll
adc
xchg
mov
lds
pop
xchg
dec
or
outsl
lods
push
mov
repz
jne
mov
cmp
sub
jae
xchg
xchg
inc
cltd
enter
push
and
les
imul
mov
neg
imul
mov
mov
lcall
pushf
xchg
xor
mov
repz
cmp
sbb
mov
ljmp
push
xchg
subb
in
test
push
pop
imul
dec
xor
ja
int3
rorl
pop
add
adc
pop
fisubl
pop
es
or
sbb
sub
shrb
pop
addb
xor
xchg
int
xor
jb
loopne
sbb
cwtl
inc
sbb
sub
fucomi
mov
jp
scas
je
mov
xor
pop
sub
test
or
sub
push
xchg
xchg
cwtl
data16
push
fidivrl
gs
jmp
mov
popf
mov
jnp
enter
outsl
push
ret
sbb
cmpsb
addr16
cmpb
dec
es
jl
sbb
int
imul
fisttpl
mov
mov
xchg
fadds
dec
cmp
sub
sti
mov
sbb
cmp
sbb
sbb
sbb
push
or
or
xor
mov
sub
sbbl
aad
imul
mov
sbb
jge
fldenv
push
fbstp
jns
xchg
xchg
mov
jo
lret
sub
cmp
dec
data16
in
and
jp
sahf
or
stos
int
fwait
jne
mov
fstps
stc
aas
lahf
push
xchg
mov
insb
push
mov
sarb
aas
cmpsl
xlat
in
test
or
mov
stc
and
push
jmpw
mov
lret
in
mov
mov
cmp
pop
lds
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
add
addl
int
rclb
and
pop
stos
shll
int
fisubrs
and
sub
test
incb
sbb
dec
aaa
xchg
adc
mov
xor
sbb
insb
test
sahf
sti
stos
push
test
pop
sbb
loop
mov
repz
mov
repz
stos
cmp
xchg
test
lods
or
cmp
adc
mov
mov
push
ja
nop
mov
add
xor
mov
add
movsb
fisttps
jnp
push
lcall
out
addb
aas
fimuls
cwtl
hlt
pusha
sarb
mov
mov
lret
pop
shll
adc
or
push
lods
xlat
mov
xchg
sahf
sub
lahf
xchg
xchg
jle
call
jnp
jne
push
add
add
andb
js
sbb
mov
movsb
popf
in
mov
mov
xor
and
test
lods
aas
mov
movsl
or
mov
mov
cmp
jp
add
mov
lock
dec
sbb
add
jno
mov
test
xor
shrb
dec
stos
cmp
add
xchg
and
movsl
vsqrtss
pop
push
fucomp
jae
push
clc
sub
int
xchg
dec
sub
sub
fdivl
ficoml
mov
jno
or
pop
arpl
xchg
xchg
pop
cld
add
adc
mov
xchg
pop
jge
dec
dec
js
xchg
jg
adc
out
adc
fadds
mov
fdivs
inc
or
sub
outsb
mov
jp
push
cmp
mov
push
bound
imul
outsl
out
mov
jne
xchg
push
xchg
into
adc
inc
cwtl
es
hlt
sahf
and
cmp
pop
dec
cmp
or
daa
mov
mov
pop
push
sbb
xchg
pop
and
std
inc
cli
jno
lds
mov
in
clc
push
xchg
xchg
push
jbe
add
mov
aas
cli
or
ret
addr16
cltd
mov
sbb
arpl
adc
push
out
stos
lret
lcall
sbb
fs
sub
lret
sbb
nop
dec
mov
sub
ret
xor
or
mov
adc
pop
test
mov
mov
lds
fucomip
bnd
int3
mov
mov
cmc
cmp
mov
add
cmove
rcl
xchg
cmp
mov
cmpsl
mov
imul
sarb
sub
mov
xlat
pop
fdivs
sbb
cmp
xor
jne
cltd
jae
adcl
push
inc
mov
cwtl
mov
loop
jne
mov
and
xor
mov
in
fnstcw
loope
cld
jle
pop
aam
xchg
pop
xchg
lea
in
mov
mov
into
add
push
push
movsl
rcrl
sbbb
pop
dec
mov
jg
mov
and
sbb
mov
imul
mov
aaa
cmp
icebp
add
push
cmp
lret
xlat
rcrl
mov
cmp
xchg
stos
mov
jp
add
sbb
ja
sbb
scas
jg
sbb
imul
loop
xchg
adc
andl
inc
pop
inc
mov
pop
inc
mov
insl
sbb
inc
push
mov
or
mov
rolb
jg
sbb
cmpsb
jnp
sbb
pop
fsubl
xor
mov
enter
enter
int3
inc
pop
ret
mov
fcomps
cmp
cs
adc
dec
cmp
xor
pop
add
cmp
cmp
les
movsl
add
add
insl
adc
dec
jp
lcall
dec
test
loopne
fsubrl
cli
mov
pop
scas
mov
pop
pop
in
fwait
mov
cmp
out
or
test
or
invd
mov
shlb
pop
leave
xchg
push
outsb
sub
movsl
adc
mov
lods
pop
xor
cmp
inc
test
add
icebp
mov
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
pushf
xchg
inc
cwtl
dec
and
mov
fcomp
cmpsb
enter
scas
lcall
cmpsl
ret
xchg
frstor
inc
fimull
xor
loopne
hlt
push
cmp
shl
mov
shr
testb
push
and
dec
xchg
mov
int
cwtl
lods
rorl
out
iret
or
cmp
inc
inc
divl
pop
push
mov
mov
rcrl
cltd
or
loop
lret
movsl
mov
mov
fsubrl
push
les
loope
adc
stc
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
pop
xor
test
inc
cmp
leave
setae
nop
cmp
les
sbb
pop
cld
sub
xchg
xchg
fstl
cld
xchg
jp
xor
jns
sub
fcompl
stc
scas
rclb
es
and
aam
fmuls
adc
and
xor
mov
cmpsb
xor
mov
loope
fdivrl
cli
or
sub
cmp
test
cmp
fstpl
fcompl
xchg
enter
sbb
and
lret
sub
js
test
xor
sbb
push
repz
ret
mov
test
int3
mov
mov
sub
mov
mov
dec
sbb
mov
mov
dec
and
mov
fs
lret
push
icebp
push
rcrb
jbe
mov
cli
xor
enter
mov
dec
popf
lret
data16
daa
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
stos
stos
inc
lcall
cmp
xchg
mov
jle
popl
adc
in
test
dec
add
sti
insb
inc
ret
sbb
mov
jge
sti
sbb
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
sub
pop
out
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
aaa
sbb
inc
sbb
or
mov
mov
mov
das
or
pop
lea
fdivs
mov
je
test
fstl
inc
cmpl
imul
pop
add
ds
mov
inc
sbb
icebp
pop
dec
subb
adc
subl
push
jno
les
push
cmp
mov
jle
cld
std
xchg
leave
jo
cmp
sbb
inc
and
jnp
scas
xchg
stos
jge
sbb
inc
movsb
pop
pop
push
mov
lods
jle
sub
mov
inc
pushf
mov
fwait
sahf
push
xorl
push
adc
loop
xchg
mov
idivl
adc
es
add
xchg
add
jo
sbb
dec
and
push
fidivs
adc
inc
and
std
inc
sbb
out
shlb
out
xchg
enter
inc
xchg
mov
int
out
jne
jnp
mov
mov
sbb
inc
xor
les
das
mov
loopne
out
mov
adc
jle
dec
rcr
cmpb
rcr
aas
jb
loop
sbbl
repz
jbe
and
lea
sub
sub
mov
aaa
push
mov
test
mov
arpl
dec
sbb
aad
enter
aam
sub
ret
in
jge
scas
xchg
stos
insl
jbe
dec
cmpsl
push
mov
movsb
pop
pop
scas
dec
fs
push
xor
int3
xor
aad
lds
bnd
jg
xchg
and
xor
add
lret
adc
mov
xor
dec
mov
stc
mov
movsl
inc
push
mov
pop
xor
insl
in
js
leave
adc
inc
stos
cmp
jo
pop
mov
shlb
cmp
xor
cld
stos
cwtl
dec
add
mov
mov
xchg
xor
mov
cmp
xor
sbb
push
dec
pop
mov
mov
xlat
mov
cmp
mov
mov
cltd
js
mov
mov
mov
mov
fdivl
fs
dec
mov
jg
push
push
test
pop
cli
xchg
jbe
adc
dec
push
test
int3
imul
shll
test
mov
sbb
cltd
mov
adc
dec
mov
xor
add
cmp
ret
lahf
sahf
adc
mov
mov
xor
pop
aaa
cwtl
hlt
jl
pop
mov
pop
xchg
adc
mov
dec
and
inc
inc
sub
xchg
imul
pop
xlat
stc
xabort
pop
fidivrs
add
out
xchg
je
pop
push
int3
jecxz
and
sub
sub
out
jne
imul
mov
aam
jae
pop
divb
les
sti
jmp
in
repz
mov
xor
add
sbb
jl
mov
sub
pushf
ss
lret
mov
lret
mov
and
push
nop
xor
fisubl
xchg
aaa
pop
mov
fildll
mov
inc
fucomp
jmp
jl
lret
mov
sbb
lds
xchg
fwait
adc
sub
mov
sub
sbb
push
cmp
mov
xchg
fwait
out
pushf
scas
mov
adc
sbb
popl
mov
in
mov
jnp
inc
push
mov
or
lods
push
sub
mov
out
push
lods
xor
sahf
xor
outsl
push
dec
outsb
aaa
popf
mov
pop
add
inc
xor
add
mov
iret
sbbb
adc
cmpsl
inc
mov
xchg
bound
mov
fsubrl
lcall
repz
sti
fsubl
inc
mov
or
fstpl
sub
or
inc
sub
mov
dec
jno
ljmp
stos
push
lods
sub
jno
pop
sub
inc
pop
int3
and
lock
movsl
xor
gs
fadds
xchg
dec
scas
jo
mov
sbb
lahf
mov
aad
mov
or
lahf
inc
outsb
xchg
jle
add
and
sbb
xchg
inc
sbb
add
mov
jno
dec
mov
push
in
xchg
rol
pop
test
mov
out
enter
inc
jnp
mov
mov
lds
enter
insb
aaa
and
lds
xchg
fwait
int
push
fimuls
out
loop
mov
push
stos
add
xor
ds
add
xchg
adc
jae
mov
es
std
mov
adc
mov
cwtl
mov
fsubrl
aad
lahf
pop
icebp
xchg
dec
scas
aad
jmp
sahf
cmp
push
inc
lahf
mov
lret
xor
icebp
stc
inc
ficompl
test
sti
add
insb
cmp
dec
xchg
mov
pop
lods
fmuls
aad
push
mov
aaa
clc
add
sbb
int
dec
jecxz
inc
sbb
push
cmp
fildl
jl
sti
loope
lret
mov
cwtl
jnp
std
sti
cmp
mov
inc
hlt
jge
clc
sub
mov
mov
cmc
mov
pop
cmp
mov
pushf
insl
data16
out
jne
xor
mov
mov
in
lods
fildll
cmpsl
insb
cli
dec
mov
xor
stc
or
pop
mov
aaa
nop
cltd
aad
dec
repz
mov
cmp
call
sahf
mov
sbb
sbb
push
pop
sub
xor
dec
in
fsubrl
cli
sub
mov
stos
push
ja
into
in
lods
mov
xor
bound
test
mov
outsb
in
dec
or
push
cmp
ja
or
fwait
lods
push
pop
ds
mov
pop
xor
cwtl
inc
dec
xor
leave
loop
inc
mov
mov
sbb
stos
cwtl
xor
lret
xchg
xchg
sub
mov
ret
push
out
xor
push
insl
icebp
jle
or
mov
inc
cltd
enter
repz
int3
or
push
orb
adc
and
ret
cmp
call
shr
repz
inc
mov
test
clc
aas
fidivrs
jne
pop
dec
aaa
bound
pop
mov
mov
cld
jg
push
fwait
or
push
cwtl
push
shlb
fucomip
cmc
lret
pop
mov
pop
fimull
fildll
mov
std
mov
popf
lret
insl
xchg
push
cmp
xchg
test
inc
pop
xchg
mov
fldt
pop
stos
rsm
jecxz
addr16
dec
jecxz
sub
push
or
sahf
xchg
cmp
or
lods
loopne
inc
sarb
pop
push
mov
pop
add
dec
pushl
or
xchg
ds
je
cmpsb
pop
sub
push
test
lods
xchg
jbe
mov
pusha
jo
inc
clc
mov
sti
sti
and
cs
mov
adcl
gs
jb
mov
mov
imul
mov
arpl
inc
dec
fmuls
and
fucomip
repz
pop
addb
xor
mov
mov
adc
sahf
lock
sbb
mov
mov
dec
outsb
and
movsl
inc
mov
sub
add
push
cli
das
les
inc
mov
lret
mov
cld
sub
mov
jae
test
cmp
ret
add
or
fwait
xor
pop
int
xor
jb
loopne
sbb
outsl
and
mov
xor
mov
js
in
movsb
lahf
mov
sub
xchg
sbb
jb
sarl
js
mov
mov
and
inc
fsubs
xlat
insb
jbe
push
cmp
in
push
ret
fld1
jb
pop
hlt
or
and
cs
mov
adcl
gs
jb
mov
mov
imul
mov
gs
xorb
mov
in
mov
pop
mov
mov
mov
sbb
or
insl
fwait
dec
popf
cmp
sbb
sub
sbb
pop
push
in
lds
and
pusha
mov
lods
mov
push
in
in
xchg
test
test
mov
sbb
cltd
dec
or
inc
lcall
cmpsl
dec
push
xor
ret
mov
fdivrl
mov
fwait
leave
cmc
xor
adc
ret
subl
rcll
adc
test
cmp
jp
cmp
xchg
mov
xchg
fisubs
mov
insl
in
xchg
adc
call
sbb
and
sub
jecxz
mov
adcl
imul
sub
mov
xchg
lea
roll
pop
fbstp
decl
add
jmp
clc
sub
imul
sub
std
fdivrl
mov
jbe
shlb
out
movsl
negb
cltd
lods
pushf
dec
leave
mov
call
push
imul
inc
sub
pushf
das
pop
les
mov
mov
arpl
loopne
xchg
jmp
push
sbb
lret
or
cmp
push
fnsave
fwait
and
add
aad
rcrl
jmp
mov
cmp
iret
cmp
imul
xchg
mov
or
mov
xchg
xchg
sub
push
and
bound
clc
fcoms
cmp
pop
fdivrl
pop
mov
gs
mov
imul
movsb
pushf
hlt
das
xchg
dec
xorl
and
and
leave
and
mov
sbb
cmp
in
mov
or
mov
mov
cmp
jp
add
lods
ret
ret
mov
add
setl
push
mov
cmp
lods
mov
lret
push
sub
mov
iret
movsb
leave
test
mov
inc
push
jmp
fldcw
add
sub
mov
fsubrs
arpl
inc
sub
outsl
test
js
mov
fmul
push
inc
sbb
jo
and
push
mov
sub
push
push
mov
andl
rcr
adcb
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
sub
fld1
xor
pop
fisubs
ror
adc
jecxz
mov
test
and
dec
ret
or
fisttps
and
mov
imul
repz
out
mov
lock
mov
in
ja
loope
bound
shl
add
mov
mov
int3
addr16
mov
arpl
add
fistl
push
cli
xchg
fmul
adc
dec
mov
mov
mov
dec
mov
dec
pop
insb
fadds
jns
cld
cwtl
cmp
cmp
push
sbb
jb
xor
movsb
push
shl
es
mov
inc
pusha
sahf
sahf
sbb
or
test
ss
cmc
stc
cmp
aas
add
and
jl
rcrb
sub
lock
pop
push
inc
cmp
hlt
jp
fsts
xor
cmp
push
mov
mov
cld
fidivrs
shll
jb
inc
fdivl
popf
mov
mov
mov
add
inc
ret
add
aam
and
xchg
movsb
out
xlat
nop
dec
out
sub
or
faddp
add
lea
xchg
dec
sbb
inc
inc
xor
inc
iret
fwait
cmp
std
mov
mov
shrb
or
pop
stos
push
lods
xchg
sub
adc
in
jecxz
mov
dec
sbb
test
jge
into
push
add
inc
arpl
fldl
sbb
jo
or
cmp
jl
xchg
aaa
mov
dec
pushf
cmp
ret
out
sti
mov
scas
aaa
mov
cli
jnp
inc
mov
roll
cwtl
xchg
inc
sbb
add
out
mov
frstor
and
xchg
mov
jo
sub
gs
cmpsl
ret
fincstp
clc
les
mov
addr16
or
pop
add
cwtl
or
or
lea
sbb
push
adc
jle
mov
clc
mov
arpl
out
in
pop
mov
iret
add
in
mov
mov
sbb
outsl
xor
mov
inc
pop
sbb
mov
fs
mov
cli
adc
imulb
pop
add
cmpsl
pop
pop
pop
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
pop
xor
test
cwtl
xor
mov
jo
mov
leave
xchg
fistpl
jo
stos
push
shrl
dec
movsb
aad
xor
xor
mov
and
jg
int
xor
sbbl
adc
mov
lock
nop
addb
xor
push
jecxz
insl
xchg
imul
push
inc
jne
mov
pop
mov
gs
insl
mov
jge
out
sahf
in
das
xchg
dec
xorl
and
mov
xchg
cmp
adcb
ss
shlb
push
fsubrp
mov
adc
add
mov
jmp
hlt
nop
dec
add
adc
movsl
mov
inc
push
pushf
mov
lds
nop
lahf
push
aaa
pop
inc
in
xlat
dec
or
sbb
std
frstor
lret
pop
in
mov
enter
mov
mov
xchg
or
and
and
cmp
xor
sub
rcrb
lahf
shr
in
mov
out
js
popa
or
sub
add
add
cmp
push
mov
pop
xor
insl
xchg
imul
push
inc
jne
mov
pop
mov
gs
inc
push
ret
sbb
clc
and
adc
int
add
adc
xchg
and
lret
inc
adc
adc
lret
adc
rclb
cwtl
dec
and
mov
mov
test
mov
push
addl
adcb
lds
enter
mov
inc
sbb
inc
test
popa
xchg
dec
and
fisttps
or
cmp
sub
cmc
sbb
repz
loopne
test
daa
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
scas
push
inc
jp
cmp
lret
pop
test
mov
hlt
jbe
cmpsl
sbb
push
in
int
mov
and
sub
mov
insb
pop
xor
mov
and
push
cmp
pop
loope
mov
stos
icebp
mov
push
jle
fcom
lods
in
push
ret
fld1
jb
pop
hlt
or
and
push
and
mov
adcl
imul
cmpb
adc
cmp
xor
shrb
inc
inc
xor
sub
sti
mov
sbb
cmp
sbb
sti
or
or
mov
mov
loop
dec
movsl
mov
mov
lods
aad
jmp
lret
leave
inc
xchg
cli
sarl
insb
daa
fs
jae
jns
mov
dec
pop
jno
jl
cltd
insl
mov
push
loope
pop
repnz
mov
and
lahf
push
mov
dec
fs
stos
jno
jecxz
nop
push
mov
cmp
loope
lret
sub
mov
sub
aas
cmpsl
xor
and
std
add
xchg
int
mov
xor
cmp
test
mov
pop
lcall
fwait
lea
xor
mov
dec
hlt
rorl
pop
xor
mov
mov
adc
xor
xor
or
inc
sbb
mov
loopne
pop
or
jno
fadds
cmp
mov
clc
sub
int
inc
sbb
cmp
jg
pop
ret
dec
sbb
xor
dec
icebp
mov
xor
add
dec
mov
movsb
jmp
xor
adc
push
lea
pushf
cmp
xchg
sbbl
ss
popa
test
in
test
or
push
testl
xchg
call
xchg
dec
popfw
push
pop
xchg
insb
jp
ficomps
clc
push
or
push
fdivs
sbb
js
cltd
in
idivl
shlb
dec
mov
clc
dec
adc
xor
xchg
mov
sbb
push
lods
xlat
push
int
sbb
mov
pop
cmc
leave
fs
inc
cltd
enter
gs
insb
aaa
and
aas
adc
enter
pop
lfs
das
xor
mov
mov
mov
pop
pop
add
inc
dec
clc
fadds
inc
icebp
jmp
clc
mov
xor
nop
lock
cld
jg
xor
adc
cmp
test
lret
aaa
loope
pop
dec
push
cli
mov
fisttps
add
and
xchg
cld
xor
fcomps
add
fdivl
stc
jge
push
ja
inc
and
add
popf
jnp
pop
scas
jb
lods
pop
idivl
sbb
in
cmp
cmp
stc
cmp
push
cmp
inc
pop
std
xor
out
xchg
add
loop
ds
xchg
in
dec
in
mov
cltd
je
cmp
popf
jbe
mov
pusha
jo
dec
out
pop
call
jno
mov
sub
mov
hlt
jl
dec
mov
push
dec
cwtl
lret
cltd
cmp
mov
idivl
outsl
mov
rclb
aas
mov
cmp
mov
movsb
mov
lret
jecxz
push
cwtl
xor
mov
mov
and
cmpsl
mov
nop
pop
loop
imul
dec
xor
cmpsl
sub
fsts
push
lret
fucomp
jae
push
aam
ja
stc
cli
in
test
or
invd
mov
pop
daa
mov
inc
xchg
mov
fnsave
fwait
and
pop
pushf
cmp
cmp
jno
aad
jp
das
jg
loope
icebp
sbb
popa
je
cmp
rcrb
fsts
mov
mov
fwait
push
dec
mov
repz
mov
inc
aas
jmp
enter
jnp
pop
nop
dec
add
fwait
push
xchg
jle
xor
or
xor
cmp
leave
int3
inc
dec
mov
scas
xor
inc
sub
out
xlat
adc
cltd
mov
mov
push
cmp
xor
and
jmp
repz
push
cmp
cmp
stos
dec
mov
sbb
dec
and
leave
inc
add
imul
push
aaa
stc
inc
in
xchg
xchg
jp
mov
jne
pop
out
cld
and
mov
xchg
fcom
jp
cltd
sub
outsb
push
cld
js
mov
nop
aas
addr16
sub
sub
dec
mov
push
js
sub
sahf
cmp
lahf
ds
or
test
ss
cmc
mov
pop
aas
adc
stos
idivb
adc
or
add
xchg
int
decl
stos
adc
fidivrl
mov
insb
jbe
xchg
sub
xchg
ds
jb
fwait
outsl
adc
outsb
aaa
popf
mov
add
ss
leave
or
nop
test
jb
fsubr
xlat
adc
rol
pop
lds
xor
out
les
call
mov
mov
xchg
mov
push
sbb
mov
lock
jnp
out
push
imul
fsubrl
test
lods
push
push
std
xor
mov
mov
lret
fucomp
js
loope
xchg
mov
test
negb
sbb
lret
xlat
lcall
mulb
mov
mov
incl
xchg
dec
data16
cmp
push
jns
stc
adc
fbstp
sbb
idivl
cwtl
cmp
std
sti
cmp
pop
repz
daa
or
fcompl
in
push
test
daa
enter
out
push
jne
insl
in
ret
push
or
jmp
enter
popa
lret
mov
dec
out
mov
jne
cli
dec
daa
adc
mov
das
or
mov
std
jnp
or
stos
push
pop
mov
gs
mov
or
add
xchg
iret
rcrl
rclb
xchg
xor
xor
jg
inc
add
scas
mov
adc
or
sub
or
dec
mov
mov
dec
xor
cld
fildl
push
sti
pop
sar
dec
pop
insb
cmpl
mov
stos
mov
shrl
cmp
xchg
sarb
mov
pop
scas
dec
fcompl
jbe
ffree
cmp
push
jg
shl
jns
push
mov
pop
xchg
pop
aas
cmpsl
sub
arpl
pop
xor
ljmp
jle
out
jp
rol
ljmp
mov
in
jbe
leave
or
sub
fisubs
push
fldz
dec
jl
dec
inc
je
sbb
push
mov
adc
adc
sub
mov
inc
roll
inc
sbb
cmp
fldt
movsb
pusha
xor
int
test
inc
inc
jmp
mov
sbb
jbe
pop
lods
dec
jnp
cld
mov
inc
sbb
lret
movsl
mov
xor
mov
lret
lcall
sbb
mov
bound
test
pushf
fsubrl
cld
pop
daa
and
xor
and
xchg
fwait
xchg
pop
or
insl
mov
ficomps
push
mov
push
jp
xor
imul
pop
js
sub
sbb
mov
clc
cwtl
es
hlt
dec
pop
movsl
ds
retw
out
rcll
push
fdivrs
jp
sti
scas
xlat
insb
imul
jne
mov
adcl
xchg
jle
mov
mov
mov
rcll
inc
inc
ds
lret
dec
mov
daa
shlb
stos
jecxz
adc
add
int3
ret
enter
inc
jno
test
xlat
xrelease
mov
lock
nop
cld
jg
cmp
cmp
dec
icebp
mov
movsb
lds
nop
lds
clc
stos
repnz
or
mov
jae
or
dec
mov
negl
mov
inc
ret
pop
sub
mov
push
scas
jge
dec
sub
inc
mov
iret
popa
scas
jle
dec
lds
lret
or
cmp
jg
sub
popf
adc
cli
jnp
inc
mov
mov
inc
sarb
cmp
lret
and
fptan
fcomi
pop
je
cmp
pop
test
stos
sub
cmpsb
fmul
jmp
xchg
fxch
clc
int3
pop
fdivrs
mov
shlb
dec
jle
xor
inc
insb
jecxz
mov
test
inc
sub
jb
fstpl
jo
in
pop
jp
das
push
mov
loopne
adc
cmp
mov
pop
aas
in
and
mov
add
sub
pushf
ret
pop
mov
hlt
sub
imulb
cwtl
adc
sub
test
jns
lds
scas
dec
sub
lods
mov
ja
je
movsl
lods
cmp
fisttps
jl
cli
test
add
ror
or
xor
shlb
movsb
jb
push
ljmp
xor
xor
pop
iret
push
dec
xchg
add
fdivs
aad
insb
cmp
fwait
xor
mov
sub
fcom
push
fdivrl
mov
adcb
jne
jnp
or
pop
fidivrs
loopne
loop
je
call
and
sub
popf
xchg
push
mov
ret
cmp
adc
popa
jnp
push
addl
xchg
cmpl
iret
ret
sbb
stos
shr
mov
sub
pushf
ss
lret
lret
mov
and
jg
sub
clc
jl
inc
add
push
lahf
jp
xor
fldt
jo
lds
cmp
dec
mov
mov
ficompl
dec
test
inc
lcall
cmp
cwtl
test
rcrl
repz
ss
xchg
mov
and
into
pop
pop
popf
paddq
pop
cltd
fidivrs
pop
mov
xchg
mov
mov
out
pusha
stos
mov
adc
rcl
repz
test
mov
clc
hlt
jl
adc
add
lds
out
add
cmpsb
fdivl
sbb
and
adc
inc
insl
popf
add
subl
pop
mov
mov
jbe
add
dec
mov
and
inc
mov
dec
stc
into
jp
fstl
dec
sub
jnp
lahf
cwtl
test
mov
ja
inc
imul
mov
mov
in
in
or
mov
outsl
mov
imul
iret
sub
insl
movsl
int
sub
or
call
movsb
mov
xchg
xor
mov
xchg
cmp
bnd
jg
or
sti
andl
scas
xlat
in
or
adcb
dec
fdivrs
sarl
popf
jecxz
pop
mov
xor
clc
les
lods
out
push
movsl
divl
pop
cmp
or
cmp
leave
xlat
fwait
aas
xor
push
xor
outsb
aaa
sbb
cmp
mov
jle
adc
or
sub
xchg
pop
xorb
cmpsl
and
inc
inc
divb
shrb
jmp
clc
sbb
and
popa
lcall
popa
xchg
rcrl
mov
push
pop
pop
push
fcompl
jne
jns
lds
nop
clc
xor
shll
inc
lock
xchg
das
lret
fucomp
xor
mov
mov
js
fisttpll
xchg
and
fisttps
inc
scas
add
fisubrl
pop
jnp
shlb
aam
repz
lods
sahf
jno
adc
popf
fildll
sti
and
leave
or
shrb
add
add
shlb
add
fmuls
test
push
mov
popf
xor
push
mov
pop
insl
inc
push
popf
fwait
stos
cmp
cmp
jb
mov
in
add
ss
inc
pop
dec
dec
inc
mov
test
jle
mov
inc
sub
test
mov
lret
jne
mov
enter
mov
psrld
jne
mov
xor
mov
jb
inc
lahf
orb
das
push
mov
and
mov
mov
lds
scas
push
sub
lods
leave
jo
sub
adc
stos
lds
cmpsl
fcoms
std
mov
test
shlb
dec
sbb
mov
cmpsb
xor
jb
loopne
sbb
cwtl
inc
sbb
movsb
xlat
fucomi
mov
jp
scas
je
mov
xor
pop
sub
mov
mov
dec
mov
lock
inc
test
cltd
xor
test
sub
pop
dec
lahf
insl
push
or
fwait
out
push
mov
popf
fnclex
inc
or
jecxz
mov
aas
adc
adc
loopne
dec
daa
adc
inc
cmc
xor
mov
fscale
inc
jg
shr
ss
mov
je
popf
mov
cmp
jp
add
rol
ret
mov
add
setl
push
mov
test
test
push
test
test
mov
and
adc
pop
dec
sar
dec
pop
insb
fcoms
inc
shlb
sbb
or
mov
cmp
stos
ret
cltd
aas
cmp
clc
and
movsb
push
add
cli
push
sub
jp
mov
pop
xchg
pushl
xchg
push
mov
loopne
das
cmpsl
xlat
add
inc
pop
lret
jo
xchg
cwtl
mov
in
scas
addr16
popf
loope
pop
cmp
insb
jbe
pop
scas
sub
fidivrs
ret
mov
lcall
aaa
popf
testl
test
push
inc
mov
ds
sub
mov
push
dec
mov
xchg
flds
shl
pop
add
dec
mov
and
mov
test
xor
mov
lret
jecxz
pop
cwtl
cmp
js
repnz
xor
push
jmp
xor
stc
mov
outsl
xor
stos
xor
jno
lods
pop
cld
and
jae
fwait
mov
int
dec
lahf
lret
in
mov
pop
pop
sbb
mov
push
pop
repnz
mov
sub
mov
mov
mov
mov
fstpl
jb,pt
lahf
xchg
movsl
mov
and
cmc
mov
movsl
fcompl
js
pop
sbb
pop
ret
lods
lds
cwtl
xor
std
pushl
adc
xchg
int
mov
mov
mov
add
xor
mov
cmp
call
xlat
xchg
imul
mov
xchg
pop
shrb
aam
mov
decl
xor
jle
fidivrl
pushf
jmp
shlb
fdivrs
gs
mov
es
sbbb
pop
popf
mov
lcall
ret
pop
dec
nop
mov
cld
jg
xor
sbb
lret
movsl
adcl
mov
outsl
adc
es
fstl
mov
lahf
mov
bound
dec
add
bound
xor
les
rol
push
dec
or
imul
arpl
fiaddl
lret
pop
mov
rcl
ja
arpl
jns
jo
and
fchs
les
enter
mov
ret
jl
andl
push
daa
xchg
int
mov
jge
clc
pop
push
pop
cmp
xchg
js
dec
sbb
stos
cmp
pop
mov
test
mov
mov
dec
inc
aam
dec
jle
adc
add
imul
adc
mov
fwait
add
xor
mov
scas
mov
xor
mov
setnp
mov
movsl
xchg
aaa
rclb
fwait
pushf
mov
ret
mov
sbb
popf
xor
adc
mov
push
sub
dec
mov
mov
stos
inc
mov
pop
lahf
clc
es
scas
jae
into
pop
cld
mov
sbb
daa
sub
imul
sbb
or
dec
mov
pop
clc
popf
lds
pop
aad
stos
std
pushl
sub
add
mov
or
sub
push
sbb
sbb
out
or
pushf
sub
adc
jmp
jp
cmp
fcom
lods
in
push
ret
fld1
jb
pop
fidivrs
jle
mov
xchg
mov
ret
enter
cmpb
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
sub
pop
cmpl
sbb
add
add
shrl
inc
insl
cwtl
mov
fsubrl
aad
inc
mov
jg
sbb
les
cli
cmp
shrl
mov
mov
fldl2e
je
sahf
das
xchg
stc
cli
in
test
cmp
push
add
or
fistps
sub
in
popf
mov
push
mov
lods
pop
pushf
or
sbb
ficoms
mov
cmpsb
fbld
ss
mov
mov
add
push
push
cmp
rclb
mov
jmp
push
aas
fwait
lret
in
mov
mov
or
pop
shlb
jne
repz
ror
adc
jno
aas
adc
repnz
pop
lahf
scas
loopne
push
ret
sbb
clc
dec
or
sbb
mov
lods
pop
adc
jae
test
enter
sti
add
lods
jo
cmp
mov
int
sbb
pop
mov
mov
xchg
les
lcall
sbb
repz
loopne
test
les
sarl
xor
or
stc
out
pop
stos
xchg
fwait
popf
pop
mov
scas
push
lret
pop
test
cmpsb
jno
adc
cmp
add
ss
aas
cmpsl
aaa
cwtl
hlt
addl
mov
inc
sub
je
pop
push
les
cmpsb
xor
fdivrl
fbld
lods
dec
fdivs
pop
mov
in
jne
dec
inc
xor
sub
lea
inc
test
add
or
jae
adc
pop
or
int
jle
cmp
cmp
es
jne
push
jae
xchg
mov
cmc
call
sti
inc
fwait
sub
mov
nop
mov
sbb
add
lret
movsl
push
and
pop
mov
push
dec
pop
dec
add
sbb
cmc
mov
je
mov
aas
ljmp
pop
sbb
xchg
fcomp
or
sub
adc
cmp
repnz
jnp
stos
pushf
push
sbb
xchg
inc
fcmovnu
adc
pusha
push
jg
pop
repz
push
mov
inc
mov
or
mov
inc
test
jmp
test
xchg
sub
dec
and
xchg
fst
push
fisubs
iret
pop
test
pop
clc
loop
ds
jmp
std
mov
sti
and
push
and
mov
adcl
imul
sub
mov
and
fcoms
call
fidivs
sbb
cmpsl
iret
fucomip
repz
xchg
mov
cmc
pop
xor
cli
in
ja
inc
add
jecxz
cld
or
stos
dec
and
fs
movsl
mov
rcrb
sbb
scas
test
sub
dec
pop
inc
fildll
repnz
mov
mov
imul
clc
lods
outsb
rcr
dec
pop
insb
mov
dec
bound
or
cmp
and
gs
sbb
lock
cmp
in
cmp
lret
stos
xchg
lahf
cli
ss
sbb
sub
cwtl
jb
mov
dec
fwait
xchg
xor
dec
mov
fnstenv
lahf
adc
cmp
clc
or
sahf
rcll
or
lock
rcl
jne
cmpl
std
sbb
add
or
aam
lret
inc
mov
sbb
insl
mov
loop
push
fldenv
fcmovbe
inc
mov
inc
xor
inc
loope
push
mov
lar
xor
xor
mov
mov
adc
leave
mov
and
leave
inc
sbb
rolb
sbb
les
cli
cmp
shrl
fsts
fsubrl
xor
cli
out
leave
popf
stc
cli
in
test
cmp
leave
push
add
or
icebp
test
stos
jbe
outsl
sub
js
shrb
cltd
popf
sahf
sbb
lahf
pop
into
aaa
fucomi
repnz
sbb
xor
fsubr
idivl
and
std
mov
pop
ds
ja
in
test
fwait
mov
xchg
xchg
mov
imul
out
mov
mov
inc
imul
ret
pusha
and
mov
mov
repz
nop
sub
and
mov
adc
sahf
inc
sub
xor
movsb
mov
pop
sub
or
or
add
sbb
scas
call
mov
scas
ret
xor
cltd
mov
adc
test
popf
mov
aad
sub
push
push
sub
lods
inc
dec
fisttpl
or
dec
pop
lret
rcrl
lds
sub
ret
or
dec
push
xor
pop
stos
xchg
cmp
ret
movsb
pop
xchg
xor
jge
pop
xor
cwtl
dec
xor
inc
fwait
leave
loop
inc
mov
push
clc
inc
shlb
lock
in
mov
out
sbb
mov
out
je
cmp
movsl
xor
xchg
mov
cmc
sbb
andb
mov
mov
mov
dec
inc
pop
lret
dec
into
mov
cltd
cmp
sbb
push
or
popa
mov
xorb
sub
xor
cmp
mov
fdivl
adc
mov
mov
xor
mov
mov
aaa
pop
sbb
mov
negb
add
sub
popf
out
dec
in
xchg
mov
mov
in
mov
scas
xlat
xchg
in
cwtl
arpl
fcoms
loope,pt
and
cld
or
push
ficoml
iret
adc
mov
add
mov
add
jmp
xchg
in
cli
repz
push
xchg
adc
addl
int
je
rcr
inc
stc
inc
ljmp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
enter
jo
out
call
cmpl
enter
xchg
push
jl
or
mov
push
dec
lcall
sbb
jae
sub
or
or
imul
hlt
jns
sti
mov
stos
jnp
cmpsl
sbbb
dec
pop
inc
pop
jb
or
mov
mov
sub
or
pop
pop
outsl
sub
addr16
test
cwtl
mov
jno
sbb
lods
out
lcall
mov
fucomip
cmp
insl
mov
repnz
push
hlt
add
sub
sub
jne
cwtl
jne
and
pop
cld
and
jns
push
inc
mov
add
inc
roll
loop
add
inc
add
adc
ret
aad
dec
aam
jns
jnp
or
mov
pop
xchg
imul
insl
fwait
jmp
add
push
aaa
xchg
cltd
call
inc
cltd
enter
loopne
pushl
mov
adc
add
rorb
sub
js
test
xor
sbb
adc
repz
ret
mov
test
or
out
mov
add
rcrb
jg
adc
std
cmc
cld
jg
imulb
adc
neg
repnz
jno
lods
push
sub
add
sub
mov
stc
inc
fldt
sub
xchg
mov
push
push
inc
pop
repz
test
mov
stos
or
mov
pop
fisubrl
arpl
scas
inc
ja
pop
xor
mov
pushf
inc
sbb
jge
xchg
fsubrl
sub
xlat
in
idivl
mov
add
jo
or
pop
test
lcall
dec
fcoms
sub
add
imul
std
roll
pause
data16
lret
bound
adc
outsl
xchg
add
push
adc
push
dec
push
into
sub
jne,pt
js
leave
cs
aad
pop
mov
repz
pop
push
adc
les
inc
fsubrp
imul
imul
lret
jecxz
add
scas
sti
xor
rcll
add
test
pop
stos
push
lods
xchg
sub
adc
xchg
jecxz
mov
dec
sbb
xchg
daa
lret
fucomp
xor
mov
mov
jmp
mov
xchg
dec
mov
idivb
dec
mov
aad
mov
jae
fldenv
ja
sub
add
jbe
jmp
and
js
mov
pushf
mov
inc
loop
aas
cmpsl
xlat
mov
and
cmp
jns
mov
out
sarl
xchg
cmc
mov
movsl
xor
and
movsl
pop
xor
jge
jb
mov
xchg
sub
rorb
adc
je
shl
pop
aad
in
cmc
fiadds
shll
out
mov
pop
xor
pop
iret
arpl
mov
sarb
cmp
jns
add
int3
dec
add
push
popa
mov
or
orb
adc
jecxz
ret
popf
cmp
mov
adc
mov
aaa
jns
and
mov
sbb
arpl
inc
mov
aam
addr16
cli
in
test
cmp
mov
mov
or
icebp
test
stos
jbe
outsl
sub
js
shrb
cltd
popf
sahf
cwtl
jbe
lahf
pop
into
mov
cmc
sbb
xor
cltd
in
idivl
xchg
idiv
mov
pop
ds
ja
in
test
inc
push
ljmp
xor
mov
lods
jnp
sub
inc
leave
enter
mov
adc
jmp
mov
push
jecxz
shrb
mov
popf
xchg
dec
inc
mov
jge
dec
subl
xor
ficoml
loopne
jl
ret
sbb
ds
mov
icebp
add
mov
or
cltd
cmp
fisttpl
add
mov
movsb
inc
cltd
mov
and
mov
dec
add
or
orb
inc
lahf
push
sub
xchg
mov
lahf
cmp
ret
xor
pop
shll
xchg
or
mov
in
add
dec
cmp
sbb
sbb
mov
cwtl
inc
sbb
ds
fucomi
mov
jp
scas
je
out
push
jnp
adc
addl
ljmp
rcr
xor
repnz
mov
jne
lods
xlat
insb
imul
pop
xchg
pop
cmp
idiv
les
popf
and
shlb
inc
mov
xchg
mov
daa
dec
dec
lcall
adc
cmpsl
dec
dec
mov
push
cmc
imul
cltd
outsl
shl
mov
mov
pusha
std
jns
mov
jle
mov
ret
pop
mov
or
gs
lock
xchg
push
hlt
mov
faddl
adc
mov
or
cli
and
adc
and
mov
movsl
fsts
in
cwtl
arpl
aam
push
jl
xchg
add
xchg
lret
or
roll
outsl
xor
lret
xor
loope
cltd
lods
inc
sbb
aad
push
push
dec
mov
in
imul
jnp
inc
mov
fildl
cwtl
xchg
inc
sbb
add
mov
jno
dec
mov
loopne
call
push
sub
ja
fistpll
ret
fld1
jb
cmp
mov
or
jb
insb
aaa
sbb
or
loope
jl
sub
cmp
mov
dec
ret
das
or
pop
mov
call
jae
cmp
pop
add
mov
in
jecxz
push
xchg
mov
jbe
pushf
int
pop
dec
mov
cmp
cmp
mov
cwtl
lret
movsl
add
aas
ljmp
mov
std
add
insl
inc
out
mov
sti
stos
adc
mov
xor
push
cmp
add
cltd
or
pop
insl
mov
leave
xchg
fwait
sbb
jae
stos
cmp
push
mov
jge
push
cmp
js
jge
lods
push
idiv
cli
cwtl
cmp
mov
ljmp
or
cmpl
and
dec
aam
cltd
repnz
or
adc
push
fsubl
and
mov
mov
mov
inc
mov
ds
mov
and
mov
xchg
xchg
lods
mov
pop
pop
adc
pushf
add
xor
inc
enter
add
mov
cmp
jp
add
fcmovb
ret
mov
add
addr16
lods
icebp
mov
push
pop
jecxz
sbb
mov
stos
test
fiaddl
pusha
ja
int3
in
scas
mov
stc
inc
and
dec
mov
incl
adc
cmp
sub
mov
lods
cmp
pushf
test
jl
xor
fsubrs
jecxz
into
hlt
push
sbb
loop
cwtl
sub
xor
leave
loop
inc
mov
push
clc
inc
shlb
loopne
in
mov
out
sbb
or
int3
test
mov
or
int3
jmp
sub
idiv
les
popf
adc
mov
dec
inc
dec
mov
push
inc
insb
dec
inc
xor
les
dec
ret
pop
mov
fstl
or
in
xchg
daa
je
pop
mov
je
jae
mov
imul
sbb
cmp
xor
mov
faddl
dec
or
leave
mov
leave
cwtl
adc
mov
out
push
test
cli
mov
xchg
scas
push
xor
movsl
adc
and
dec
jae
mov
push
test
push
push
pop
push
lret
or
mov
mov
inc
loop
xor
jmp
repnz
lods
inc
inc
fsub
ljmp
or
and
repz
cmpxchg
rcll
push
addl
mov
mov
repnz
icebp
xchg
or
test
sbb
cmpsl
cmp
pop
bound
fwait
fistl
cmp
mov
xor
dec
inc
dec
push
or
dec
popa
add
aad
mov
or
popa
xor
fsub
add
push
mov
jle
sub
hlt
movsl
int
rcrb
clc
fwait
ret
mov
mov
scas
inc
stos
fldenv
and
scas
push
mov
imul
pop
pop
rcl
lahf
enter
xor
push
cmp
pop
nop
mov
mov
add
rolb
dec
fildll
or
add
sbb
hlt
push
movsb
ljmp
outsb
lret
addl
xor
push
mov
testl
orb
int
je
jne
mov
mov
test
xchg
cmp
mov
xor
fsubl
cmp
movsb
jmp
in
jae
push
dec
inc
xor
sarl
je
push
loope
call
mov
movsl
mov
sbb
pop
lcall
and
mov
or
adc
fistpll
std
aas
pop
lcall
mov
sub
clc
add
mov
rol
shr
sbb
mov
outsl
and
dec
xchg
lcall
dec
inc
mov
xchg
pop
fcompl
and
dec
shll
sti
pushf
dec
pop
or
mov
sub
or
xchg
arpl
push
sub
stos
lods
pop
test
xchg
mov
mov
push
pushf
repnz
js
jg
push
or
js
repz
jg
js
ret
dec
add
add
aam
adc
jp
sbb
je
push
xchg
ljmp
out
gs
sbb
xchg
rorl
int
test
dec
test
add
lcall
and
cltd
mov
fldpi
push
and
scas
mov
jns
xor
adc
mov
cmp
jae
xchg
sbb
stc
jnp
cltd
rol
or
pusha
mov
pop
inc
orl
or
popf
mov
inc
aam
testl
pop
in
int
test
adc
imul
aam
add
mov
xor
inc
fistpl
aad
addr16
test
push
and
cmp
push
dec
in
jbe
jmp
mov
js
jg
xor
icebp
cmp
aas
or
adc
add
mov
idiv
mov
push
or
sub
mov
push
imul
push
ficoms
push
mov
jecxz
pop
mov
mov
cwtl
dec
inc
cld
xor
lea
shl
or
mov
enter
int
add
xor
mov
call
pop
scas
shrb
inc
inc
xor
inc
inc
mov
scas
mov
cmp
ret
cmp
dec
pop
pop
dec
jno
imul
rorl
fisubrs
dec
sbb
pop
jg
inc
lock
push
inc
fcomip
pop
xchg
cs
je
mov
clc
sti
rcr
cmp
jbe
movsl
xchg
pushf
cmp
repnz
sub
push
jge
mov
pop
pop
jb
mov
push
lods
shll
pop
ret
mov
loopne
pop
sarb
mov
fs
pop
je
out
idivl
dec
out
idiv
mov
mov
cmp
or
fwait
inc
cwtl
dec
and
stos
movsb
test
sub
ss
test
fldenv
shl
pop
movsb
call
cmpsb
inc
cltd
out
lock
cmc
es
pushl
outsl
lds
gs
add
sub
cmc
hlt
push
inc
xor
vpmacsdql
sub
cmp
pop
lcall
test
jg
enter
insl
test
inc
and
dec
ret
cld
fdiv
jbe
jne
mov
pop
xor
pcmpgtd
stos
push
lods
inc
push
lret
push
pushf
repnz
and
pop
jns
push
test
bound
jle
subl
rol
inc
inc
pop
xchg
adc
sarb
es
ja
or
dec
mov
je
push
sub
push
lea
outsl
in
jae
fnstsw
repz
out
cwtl
inc
xor
push
add
or
or
push
dec
aam
pop
mov
and
inc
les
cltd
xor
test
sub
sub
pusha
jo
xchg
ds
fs
cmpsb
in
clc
xchg
xchg
sub
sbb
loop
or
add
mov
jne
call
popf
pop
sahf
gs
add
cwtl
dec
and
mov
mov
test
xor
mov
lret
jecxz
pop
cwtl
cmpsl
fcomps
js
repnz
xor
pop
in
add
lret
movsl
mov
mov
cmpl
dec
xor
jno
add
in
cmpsl
xchg
mov
lods
mov
popf
shr
pop
mov
jl
mov
data16
xor
lret
or
mov
lock
sbb
cmp
mov
lods
jle
jmp
sbb
mov
aad
mov
mov
jmp
test
fistps
inc
sub
idivl
repnz
adc
jae
cmp
xchg
adc
mov
sub
mov
pop
test
jmp
pop
dec
mov
push
sbb
out
mov
aam
jbe
sub
loope
jo
push
jb
cwtl
mov
in
jne
dec
mov
sbbl
call
pop
xchg
dec
add
mov
cmp
sti
mov
ret
addb
les
sbb
jbe
pop
int
jo
orb
mov
cmp
mov
dec
mov
push
stc
jae
push
dec
push
inc
push
fmull
pop
mov
repnz
mov
mov
in
aam
insb
push
xor
insl
cltd
lcall
push
dec
int3
xchg
pop
xlat
stos
inc
pop
mov
jb
scas
dec
out
shrb
xor
cmp
in
jecxz
fisttps
push
call
stc
jecxz
inc
fwait
out
pusha
add
test
je
clc
add
mov
add
mov
popf
aas
jp
mov
adc
push
cmpsb
push
lods
adc
dec
push
sbb
inc
test
enter
xlat
xchg
sbb
cmp
mov
cltd
fiadds
pop
shll
popf
jle
lods
inc
xor
push
into
lea
push
loop
inc
pusha
mov
into
inc
pop
adc
int
int
cmp
and
lds
jl
xchg
iret
mov
or
add
mov
loopne
adc
pop
adc
movsb
nop
sbb
xor
dec
mov
mov
sub
rclb
bnd
pop
push
ja
pop
out
lret
rcll
je
scas
xor
mov
outsb
dec
scas
mov
jge
push
push
jl
test
adc
lret
xchg
std
imul
push
js
jbe
mov
sbb
in
sub
and
icebp
or
popa
inc
sarb
fadd
shl
cwtl
je
std
pushl
adc
xchg
int
mov
mov
mov
add
xor
ja
out
mov
mov
fwait
fcmovnb
kandnb
pop
mov
int3
add
lcall
add
sbb
pop
mov
pop
fcomps
fbstp
test
je
hlt
into
xor
mov
clc
ds
mov
gs
arpl
in
jecxz
cld
mov
aam
xor
popa
mov
sub
test
mov
sahf
popf
mov
pushf
xor
adc
dec
mov
negb
std
push
jae
push
subl
sub
test
sub
cmc
inc
outsb
enter
inc
movsl
or
sbb
mov
and
pusha
jno
add
inc
mov
scas
movl
ss
inc
cmpsl
xlat
in
pop
dec
fstl
xorl
mov
xchg
sub
sub
sub
or
pop
cltd
mov
dec
cmp
pop
insb
xchg
pop
mov
adc
hlt
push
jmp
lea
mov
adc
cmpb
pop
mov
mov
cltd
sub
ljmp
jae
int3
cltd
mov
in
stos
push
mov
push
pop
add
lahf
xchg
xor
sbb
aaa
add
jbe
pop
rcrb
ss
push
fstps
inc
cltd
add
movsb
cs
lahf
enter
sbb
push
clc
mov
pop
and
adc
adc
rcrl
sahf
ud1
fsubrl
cld
ss
stos
int
insl
movsl
int
sub
fisubs
mov
lods
jle
lret
movsb
sub
fwait
call
cmp
dec
jmp
pop
add
fwait
add
or
adc
mov
sbb
mov
sub
or
xor
aam
fsts
adc
jmp
addr16
fld
fsubrs
ficomps
popf
iret
sbb
adc
aam
aaa
fs
adc
and
sbb
fldcw
out
ret
popa
popa
pop
das
xor
scas
negb
shrb
je
popf
mov
adc
xor
mov
jae
inc
sub
xor
mov
xor
inc
inc
sbb
pop
mov
pop
mov
jb
or
cmp
test
dec
cli
aaa
enter
enter
movsb
leave
cmp
lahf
xchg
push
testl
lret
push
fcoms
pop
jns
cli
push
aas
sub
and
sub
pop
mov
enter
xchg
fldenv
lock
outsl
cld
jo
fcmovnb
pop
in
cmp
out
jg
xor
jp
push
pop
or
push
roll
dec
aam
xchg
inc
cwtl
adcb
mov
mov
lahf
inc
pop
mov
adc
push
fdivs
fbld
xchg
mov
popa
mov
xor
lds
enter
insb
aaa
stos
mov
push
addr16
sbb
imul
in
mov
dec
aad
pop
ja
pop
movsl
sub
jne
shrb
add
or
lods
stos
fisttps
push
xchg
sbb
cmp
mov
push
stos
push
in
jno
inc
dec
pop
xor
negb
cmp
out
mov
dec
lods
pop
push
lahf
push
dec
push
dec
xor
decl
pop
icebp
lcall
pop
push
push
cmp
repz
popa
jecxz
adc
adc
jb
push
pushf
dec
mov
sarl
roll
lods
inc
sbb
int3
ljmp
push
dec
cmp
aad
ds
xchg
inc
pop
xor
add
dec
and
addr16
movsl
mov
pop
cmp
xchg
imul
testb
sub
push
cltd
out
mov
sbb
test
push
ds
dec
dec
mov
dec
imul
mov
mov
mov
push
mov
ret
imul
ja
stos
and
mov
or
dec
xchg
rol
push
jle
add
fildl
and
fidivrl
scas
inc
mov
scas
in
adc
push
dec
mov
and
and
outsl
push
mov
xor
lods
mov
mov
add
outsb
mov
or
inc
daa
push
jae
xor
mov
shll
jnp
inc
pop
mov
pusha
mov
push
inc
fwait
cmc
mov
inc
das
adc
fdiv
adc
sbb
popl
pop
push
in
push
fsubs
add
xor
clc
cmp
sbb
fbld
jo
xchg
shrd
jecxz
mov
add
mov
mov
ficoms
inc
imul
imul
pop
or
pop
movsl
mov
les
jnp
out
push
in
sbb
loop
divl
mov
add
lret
fwait
cmpb
adc
movl
push
mov
sub
lahf
add
sub
movsl
lds
jp
push
sub
xlat
aad
jmp
jae
into
jo
xlat
jmp
mov
add
dec
bound
lahf
inc
scas
xchg
ficoml
jp
movsl
adc
lcall
ja
cmpsl
push
imul
lret
or
mov
in
into
adc
cmc
cmp
pop
sub
rcrb
pushl
inc
sub
out
gs
pop
cmp
xor
inc
sbb
or
and
loope
mov
inc
pop
mov
jb
inc
xor
sbb
and
dec
push
and
pop
jne
fdivs
ret
cmp
mov
call
pop
mov
imul
ja
stos
and
clc
mov
call
mov
popa
movsl
push
and
or
movsl
ret
leave
cmp
sbb
cmpsl
cltd
xchg
lret
mov
push
mov
test
sahf
mov
cld
sub
into
jo
shll
lds
imul
jo
pushf
testb
sbb
jno
movsl
adc
lcall
push
pop
lahf
xor
lods
mov
aas
lahf
inc
jg
adc
int
scas
xchg
cld
cmp
addr16
nop
adc
push
mov
imull
test
cmpsb
gs
lahf
icebp
cmp
mov
dec
daa
sub
push
mov
pop
loope
xchg
pop
cltd
mov
bound
call
inc
cltd
out
and
je
aaa
sbb
outsl
adc
lock
push
insb
pop
mov
int
ret
cmp
mov
pop
pop
push
or
mov
push
mov
jnp
std
fwait
clc
fs
ss
xchg
jo
push
mov
mov
cmpsl
or
scas
inc
cld
push
xchg
nop
xchg
dec
les
push
push
push
dec
sub
test
arpl
fstpt
arpl
jge
stos
dec
xchg
lret
add
mov
mov
sbb
dec
lock
fildll
and
jbe
inc
lcall
loop
mov
add
pusha
mov
lods
loopne
jno
jno
fs
lahf
cmc
dec
cmp
aas
and
mov
inc
icebp
xor
xor
cwtl
or
ljmp
fsubs
sub
cmpsb
ljmp
pop
cmp
adc
in
pop
mov
std
mov
pop
push
mov
inc
loop
adc
dec
mov
sbb
gs
das
out
shll
pop
das
jo
pop
xor
cmp
je
adc
xor
ds
mov
in
lea
dec
ret
fisubrs
jns
xchg
mov
cmp
cmp
sub
mov
jle
nop
xlat
stos
sahf
das
add
jb
adc
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
or
invd
mov
fstps
xorb
add
xchg
and
mov
adc
push
lds
mov
fdiv
fistps
test
mov
mov
loop
xchg
xchg
add
jnp
clc
jb
popl
xchg
lahf
xor
aam
mov
jnp
inc
push
mov
or
mov
fcoms
mov
push
or
push
int3
test
jp
sub
pop
mov
inc
lea
mov
jge
pushl
insl
inc
repnz
pop
aam
loopne
xor
rcrb
xor
xchg
adc
adc
dec
adc
jp
add
fadd
ret
mov
add
setl
leave
fsubrl
push
mov
test
test
push
test
test
inc
mov
neg
je
pop
iret
push
xchg
decl
add
aaa
cmp
jae
add
lock
ficoml
cmpsl
add
jl
rcll
pushf
adc
push
dec
in
jb
adc
cld
push
lret
push
xchg
pushl
mov
inc
cmpsb
xlat
in
iret
and
lea
cmp
ja
rorb
test
pop
repz
xor
ja
out
mov
cmp
pop
jge
lea
jl
bound
out
adc
push
repz
sbb
add
and
js
popf
jecxz
lret
dec
mov
add
push
xchg
int
mov
adc
xchg
fnstcw
fnstenv
mov
sahf
loope
repnz
test
and
adc
gs
jge
fwait
imull
sbb
xor
xchg
ds
lods
push
es
sahf
mov
push
dec
jae
pop
mov
insl
sbb
in
addr16
xor
in
rorl
lret
addb
mov
dec
inc
movsl
or
gs
mov
pop
mov
fstpl
ds
aaa
aaa
lods
hlt
sub
aam
loopne
xchg
or
addl
add
mov
repnz
dec
cwtl
push
lock
fidivs
xor
aam
pop
jne
sub
mov
fs
aas
mov
popf
iret
sbb
pop
add
and
ss
mov
lret
sbb
in
aad
lret
or
push
xor
inc
inc
mov
fldl
pop
add
lcall
inc
in
xor
lock
push
nop
sub
mov
hlt
xor
aas
adc
cmpsl
mov
movsb
mov
sbb
imulb
es
add
in
xchg
lcall
or
push
xor
push
js
push
mov
cmp
std
subl
sbb
andl
dec
mov
sbb
mov
lods
jle
mov
or
fwait
mov
pusha
jle
mov
dec
sar
pop
ret
sbb
lea
mov
sbb
idiv
decl
cmp
sbb
out
cmpsl
mov
rcll
icebp
and
cmp
outsl
mov
fwait
pop
cltd
dec
clc
cmp
fdivp
inc
out
sbb
fsubrl
in
aam
jmp
inc
xor
ret
imul
inc
fnstenv
aas
das
or
inc
add
mov
imul
adc
pop
add
add
mov
sub
test
cli
mov
mov
loop
mov
dec
icebp
ss
imulb
inc
in
xchg
lcall
dec
cwtl
mov
aas
popa
xor
in
mov
ret
cltd
cmp
les
in
mov
aad
xchg
pop
stos
outsl
dec
cmp
fwait
cld
xchg
pop
xchg
xor
jge
pop
xor
jae
adc
add
loop
mov
xor
sub
mov
or
or
push
mov
adc
mov
adc
push
push
mov
cmpsl
ret
fld1
movsl
xor
cmp
int3
jno
cltd
push
push
add
fisubrs
dec
pushf
hlt
test
xchg
fdivrs
ss
imul
jo
push
and
mov
mov
test
add
and
out
in
add
rcrb
into
mov
stos
inc
mov
mov
jb
idivb
adc
jg
nop
in
push
adc
test
xor
sub
bound
sbb
jno
icebp
add
mov
jp
xor
mov
shrb
sbb
rorl
mov
mov
inc
sbb
mov
data16
inc
lahf
popa
cmpsl
pushf
pop
sti
and
push
mov
jbe
inc
cmp
ja
popl
mov
fptan
stos
xor
pop
icebp
lods
push
stos
icebp
mov
mov
fidivrs
jnp
jnp
cmp
popf
stos
mov
jle
or
in
aam
sub
cwtl
repnz
add
fprem1
add
lea
movsl
dec
add
in
movsl
push
popf
mov
push
add
ret
popa
lcall
push
lock
jbe
adc
filds
xchg
lods
push
xor
popa
and
shrl
std
push
stos
push
and
rolb
bound
scas
xchg
lahf
mov
mov
push
inc
sar
loope
aaa
loope
cmp
lret
ret
fwait
mov
inc
outsb
cmpsb
sub
mov
add
sbb
fnsave
test
lods
inc
sbb
outsl
imul
push
pop
or
nop
js
mov
stc
and
push
cwtl
lods
inc
shlb
es
add
aaa
cmpsl
test
jle
adc
and
jp
cmp
xchg
push
mov
popf
add
lahf
cmpsl
jnp
jp
mov
add
enter
or
clc
les
dec
inc
lahf
lret
inc
sub
lcall
xchg
int3
lcall
lods
mov
pop
pop
test
cli
sar
sti
pop
pop
inc
or
jns
mov
popf
mov
hlt
and
sub
ret
lds
hlt
mov
sbb
push
mov
mov
jge
aaa
call
sbb
xor
int
repz
je
cmc
jno
lea
pusha
nop
rorb
xchg
or
mov
mov
adc
cmp
aam
popf
mov
xchg
jb
mov
mov
aad
cmc
jg
notl
jg
or
mov
mov
inc
aam
fdivs
xchg
mov
fwait
jmp
in
mov
repz
jge
imul
mov
ret
mov
cmpsb
cmp
aaa
dec
and
loopne
push
je
sbb
popf
mov
dec
push
add
mov
fsubrs
imulb
in
dec
add
xchg
divl
idiv
xor
inc
sahf
mov
add
mov
clc
ds
and
sahf
cmp
mov
cmc
dec
sbb
lret
cltd
orb
scas
icebp
aaa
cltd
xor
ret
aas
mov
ss
mov
in
dec
sbb
and
mov
ja
pusha
in
cltd
dec
push
add
imul
mov
push
cld
jo
xchg
adc
xor
mov
scas
ja
inc
jl
fnstenv
ds
mov
pop
xor
fwait
dec
sbb
jl
stc
cmp
sbb
insb
std
jle
js
cmp
es
stc
xor
sub
lret
dec
aaa
push
lahf
lahf
hlt
push
cmp
inc
jge
sbb
xchg
cmp
cmpsl
sti
mov
lret
jne
dec
inc
and
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
out
pop
stos
nop
sbb
ljmp
xlat
fcoml
cmp
repz
sti
mov
jecxz
popa
xchg
lods
inc
sub
dec
popa
sahf
mov
sbb
shll
hlt
mov
mov
loop
dec
movsl
mov
mov
and
jne
loope
xchg
push
and
movsl
lcall
mov
jne
aad
fisttpl
mov
push
jg
lcall
inc
sbb
icebp
xor
stos
and
sbb
jo
push
dec
fisubrs
shll
fcoms
aaa
sub
lahf
inc
test
repnz
popf
mov
sbb
cwtl
repnz
adcl
add
sub
pushf
inc
push
xor
xor
adc
pop
xchg
adc
lahf
jne
mov
fs
inc
cltd
shr
int3
out
mov
jo
cmp
cmp
dec
inc
xor
out
ret
out
pop
das
xor
mov
mov
mov
jmp
cmc
cmp
pop
add
pusha
add
pop
sub
dec
add
add
sub
mov
mov
fisubrs
stos
mov
pop
mov
and
push
dec
dec
sbb
mov
das
pop
sub
sahf
dec
pop
xchg
test
dec
incl
inc
movsl
push
subb
xchg
lret
pop
orl
mov
mov
sbb
scas
jno
jae
in
ret
outsb
pop
int
push
or
mov
cld
lret
sahf
movsb
clc
mov
add
arpl
mov
std
jo
ficoms
jge
xchg
dec
cmpsl
sbb
cwtl
imul
insb
jae
jp
cmp
sbb
dec
xchg
mov
fcmovnbe
cmc
fst
mov
mov
dec
inc
aam
sbb
adc
test
xchg
dec
push
and
push
mov
sbb
and
push
sub
lahf
aas
push
fstpt
mov
push
mov
pop
test
mov
add
orl
xchg
xor
pushf
dec
and
mov
push
push
int3
mov
mov
jne
xchg
cmc
inc
pop
repz
xor
xchg
dec
push
aas
repz
outsb
in
in
pop
xor
xchg
into
xchg
jmp
pop
addr16
repnz
pop
outsl
test
ss
pushf
cli
in
push
test
sahf
mov
shl
and
jmp
xorb
inc
pushf
push
aas
cmpsl
push
or
jle
clc
mov
pushl
adc
sbb
addb
test
xchg
adc
sub
cmpsb
pop
test
sbb
test
sti
mov
lahf
iret
sbb
insb
aaa
dec
jb
sbb
adc
fsub
shl
mov
jmp
mov
dec
mov
into
pop
test
jne
jae
repz
add
aas
push
rorl
pop
jnp
ja
jmp
mov
mov
repz
mov
pop
shr
cmpsl
imul
sbb
pop
outsl
sub
xor
out
cmp
fldenv
pop
dec
in
stc
movsb
gs
cmc
or
inc
sub
adc
adc
xchg
ret
mov
std
inc
arpl
call
sbb
push
sub
loop
mov
movsb
mov
push
or
xchg
fwait
ss
mov
inc
addl
mov
jl
daa
jae
in
pop
mov
test
sbb
cmpsb
mov
aam
jbe
mov
pop
fdivrl
pop
in
movsb
lods
data16
jne
popf
stos
mov
sub
inc
xchg
push
jg
mov
adc
xchg
cmp
xor
sbb
push
mov
pop
mov
mov
test
clc
int3
mov
mov
sub
mov
mov
dec
sbb
gs
mov
int
mov
and
cmp
leave
push
fs
iret
sbb
test
dec
sub
push
lahf
mov
jns
sahf
cli
int3
push
jg
xchg
xchg
dec
popf
lret
int
mov
push
cmp
ret
add
adc
mov
ret
mov
mov
adc
insl
mov
xor
and
pusha
push
jg
mov
lahf
xchg
fwait
leave
loop
sub
adc
in
cmp
mov
rcrl
aam
sti
fwait
xor
scas
test
xchg
or
iret
movntq
out
jnp
sbb
data16
movsl
mov
imul
mov
test
mov
pop
ret
lcall
cmp
call
sbb
das
xor
jmp
jns
xchg
decl
lahf
lret
std
je
jecxz
enter
mov
ret
xchg
and
mov
pop
adc
dec
pop
xor
imul
sbb
adc
fisubrs
movsl
cmp
jmp
aaa
mov
arpl
jmp
mov
jmp
mov
adc
lcall
jecxz
std
loop
adc
mov
scas
jg
cmp
cmp
mov
xlat
push
push
bound
imull
add
aam
stc
xor
mov
fwait
cmp
clc
mov
xchg
imul
cmpsb
fcom
aaa
jo
ret
pop
fnsave
xor
cmpb
adc
add
sbb
ds
int
int
imul
sahf
pop
push
movsb
jne
mov
pop
push
mov
push
push
sub
iret
jl
mov
push
cs
andb
cwtl
fldenv
mov
mov
push
call
inc
sub
ss
arpl
xor
jno
dec
lcall
mov
test
mov
ss
ja
pop
push
test
rcr
xchg
mov
les
pop
icebp
cli
addb
add
xchg
push
shlb
out
sarl
clc
mov
insb
dec
push
clc
or
mov
jg
sarl
xchg
xchg
mov
mov
adc
subl
ljmp
sbb
es
test
adc
call
or
shrb
push
out
jae
cmp
gs
xchg
sbb
pop
sbb
enter
inc
mov
je
in
fwait
push
js
fiadds
test
js
test
or
pop
add
dec
scas
insl
jne
popf
mov
mov
stos
fdivrl
jg
out
cltd
mov
aad
dec
leave
ret
sbb
inc
xorb
lds
inc
adc
nop
in
in
dec
fwait
mov
ljmp
stos
outsl
mov
js
ds
popf
imul
push
jl
sbb
arpl
xchg
add
fsubs
and
leave
inc
jbe
sbbb
cmp
mov
scas
and
sbb
push
sbb
sub
js
mov
inc
icebp
aad
adc
rcrl
daa
cmp
imul
cmp
in
mov
mov
or
pop
fcompl
mov
mov
shlb
pop
dec
push
xor
mov
popf
test
orb
xchg
jae
call
inc
sbb
and
mov
push
popf
mov
cmp
jp
add
mov
mov
shrb
testl
xchg
sub
adc
leave
add
clc
mov
inc
mov
mov
movsl
xor
cmp
aaa
push
out
push
cmp
ret
xchg
nop
lret
add
dec
sbb
outsb
les
inc
jl
jnp
mov
pop
roll
add
pusha
mov
jmp
das
inc
cld
mov
jp
mov
lea
xor
or
mov
dec
adc
mov
ficompl
pop
int
test
or
xchg
jmp
or
adc
pop
ret
xchg
sti
mov
rcl
push
adc
cmp
or
hlt
xor
and
mov
js
mov
sahf
cmp
out
cmp
aad
les
pop
inc
aad
pop
xchg
into
int
pop
push
dec
sbb
lds
add
movsl
jo
sbb
imul
mov
movsl
sub
adc
leave
xor
clc
mov
pop
ficoml
mov
mov
xchg
fistl
jno
test
sbb
ret
or
mov
lock
lock
pop
inc
lock
inc
inc
mov
test
mov
pushf
mov
stc
inc
sbb
jae
or
or
add
cmp
test
lock
mov
xchg
jae
xor
mov
fldcw
cmpsb
jnp
clc
popa
jne
ja
sti
xor
gs
adc
fbstp
sbb
jecxz
push
je
shrl
in
jne
pop
mov
movsl
pop
adc
add
jecxz
pop
xchg
in
sbb
dec
dec
cmp
and
shrb
push
push
repz
inc
mov
dec
arpl
std
push
add
lods
mov
xor
ss
sbb
mov
fldenv
jne
stc
and
popf
shll
jno
int
pop
sbb
nop
repz
inc
sbb
lret
pop
shl
ficompl
xchg
int
xor
jb
fisttpll
sbb
xor
pop
fnstenv
movsl
cmc
lock
enter
cltd
mov
orl
ret
sbb
add
adc
mov
test
xchg
stos
lea
push
frstor
mov
xchg
sub
cmp
popa
jge
outsl
prefetch
jno
cltd
jns
pop
int3
daa
loopne
repnz
and
cmp
sbb
pop
mov
push
mov
dec
or
in
mov
mov
pop
pop
dec
sbb
jne
in
sbb
loope
or
cltd
mov
imul
inc
pop
ret
mov
pushf
mov
inc
sbb
int
sbb
incl
push
test
cwtl
mov
aaa
sbb
gs
or
cld
jmp
popf
in
push
jns
add
pop
rclb
dec
cmp
mov
enter
pop
lds
dec
adc
insb
xchg
jge
mov
popf
aaa
mov
cli
jnp
inc
mov
mov
pusha
sarb
xorl
mov
loopne
aam
jmp
mov
mov
decb
rcr
call
or
test
mov
cwtl
sbb
pop
lock
fildll
jae
fcomps
xchg
rclb
lret
sbb
pop
pop
dec
int
dec
or
and
out
movsb
out
ds
fnstcw
xchg
jnp
mov
jns
add
mov
jp
addb
mov
ss
aam
or
scas
jno
cmp
int
inc
sbb
jecxz
sbb
test
mov
lods
inc
repnz
sbb
sbb
sub
ffree
jmp
dec
popf
lret
or
or
data16
insl
mov
ljmp
add
mov
enter
cld
sbb
ja
mov
gs
push
xchg
mov
std
cli
jnp
inc
mov
filds
cwtl
xchg
inc
sbb
add
addr16
inc
xor
add
popf
xor
test
sub
mov
gs
outsl
mov
cmp
gs
xchg
mov
dec
add
push
inc
inc
nop
lds
push
mov
out
mov
jne
jns
lea
xchg
mov
push
fwait
popf
into
pop
stos
add
ss
shlb
push
fisubs
mov
adc
rcrl
mov
add
ret
iret
rorb
or
jno
repnz
jno
aad
outsb
mov
push
pop
repnz
push
ficoms
push
push
fdivrl
imul
mov
push
xchg
dec
popf
lret
cltd
insb
push
cmp
cmp
lret
sbb
push
mov
push
push
mov
lods
ja
mov
test
movsb
xchg
jbe
scas
pop
pop
cmpsl
fstps
inc
pusha
push
jne
pop
lock
shrd
adc
push
fstl
push
mov
fdivs
lea
xchg
in
test
push
jecxz
mov
sub
scas
enter
xchg
xchg
pop
call
das
mov
pop
out
adc
and
dec
push
add
es
ret
imul
fnstenv
das
or
mov
shlb
inc
sbb
pop
loopne
xchg
dec
pop
xchg
jmp
aas
pop
sbbb
mov
enter
mov
cld
jg
pop
ret
push
mov
hlt
mov
loop
dec
sbb
add
pop
and
leave
fiaddl
push
and
shr
lahf
incb
repz
cli
rclb
add
fadds
or
mov
or
imul
fadd
cmp
cmp
xor
xchg
cltd
aad
sti
jge
dec
xchg
enter
int3
aas
inc
fwait
out
clc
inc
shlb
pop
dec
js
inc
popa
pop
pop
rcrl
and
dec
cmp
pop
clc
mov
sti
and
xlat
insb
imul
inc
sahf
stos
fbld
imul
mov
xchg
ds
jno
out
mov
xchg
es
or
xchg
sub
and
in
jne
sub
add
out
xchg
fiadds
cmp
mov
imul
out
in
or
cmp
add
mov
aas
ljmp
popa
cmp
popa
cwtl
ret
sbb
adc
sub
jge
and
imul
adcl
fistpl
cli
in
test
cmp
mov
mov
or
fistps
sub
in
popf
mov
push
mov
lods
movb
push
pop
mov
pusha
mov
push
xchg
stos
inc
shrb
sarb
test
mov
roll
adc
fwait
xor
mov
sbb
jp
or
cmpsl
xchg
inc
cmpsb
sbb
shlb
stc
cli
data16
and
repnz
dec
sbb
pop
sub
js
test
xor
sbb
push
mov
pop
mov
mov
test
aad
in
clc
int3
mov
mov
sub
mov
add
popa
lcall
iret
inc
sbb
fdivrl
mov
idiv
repnz
dec
push
dec
jb
cli
adc
sar
stc
dec
inc
fistps
sbb
sub
or
mov
mov
inc
ret
pop
sub
nop
popf
push
or
popa
mov
stos
ja
or
fwait
lods
push
pop
ds
mov
pop
xor
sbb
bnd
mov
imul
push
sub
test
pop
mov
jo
mov
mov
cmp
xor
popf
lret
xor
cmp
insl
jbe
addr16
xor
xchg
xchg
ds
les
pusha
lahf
addr16
xor
stc
jae
jecxz
or
jmp
loop
call
jmp
and
int
mov
repz
mov
imul
cmp
shrb
and
adc
mov
push
mov
loop
and
or
mov
xchg
sub
adc
push
test
xchg
les
jge
mov
xor
bound
mov
mov
nop
out
dec
inc
test
int
call
cltd
rclb
pusha
gs
pushf
xchg
mov
les
sbb
cmp
xor
je
sbb
in
push
dec
or
mov
inc
mov
int
jmp
mov
xor
push
imul
jl
cmpsl
ret
pop
in
gs
inc
pop
int
test
and
adc
cmp
or
cmp
xchg
sub
push
dec
mov
pop
pop
mov
xor
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
test
xor
mov
data16
mov
sbbl
ljmp
fcmovne
cmp
loop
inc
inc
and
inc
push
mov
cmp
mov
xchg
enter
push
inc
cmp
sub
stos
movsl
adc
sbb
fcoml
sbb
add
dec
push
jle
leave
aad
mov
add
push
cld
cli
jae
mov
mov
cmp
mov
sub
adc
test
or
push
fidivrl
pop
jae
inc
gs
test
outsb
lahf
insl
and
mov
mov
xchg
fsts
daa
push
sub
adc
mov
cltd
pop
dec
aaa
shrb
out
pop
fld
pop
shl
pop
and
arpl
int
pop
lods
imul
ja
mov
iret
iret
adc
mov
adc
xor
enter
lcall
stos
cmp
aas
movsl
hlt
imul
repz
test
push
xor
xor
popf
mov
insl
push
and
cmp
ret
inc
jp
push
sbb
ja
fadds
xor
mov
xchg
add
daa
mov
in
rol
pop
fcoms
decl
repnz
fmulp
xchg
ljmp
into
xor
movsb
movsl
sub
mov
jmp
mov
pusha
jp
stc
test
or
outsl
cwtl
mov
loope
xchg
mov
jno
test
test
loopne
adc
cli
pop
xchg
in
mov
std
andl
inc
loope
lea
sbb
leave
sbb
and
fsubs
dec
mov
mov
xor
lock
fwait
scas
inc
push
aad
add
adc
xchg
and
mov
std
dec
add
mov
ss
test
mov
or
out
mov
lds
loopne
add
mov
scas
das
stos
lods
shrl
bound
inc
push
dec
loopne
fldt
jmp
dec
xchg
pop
mov
or
add
push
pop
mov
ljmp
push
clc
push
out
pop
pop
mov
orb
outsl
xchg
gs
add
js
popf
push
imul
inc
mov
or
sbb
xlat
subb
push
mov
lret
cmc
ret
pop
push
or
xchg
daa
and
sbb
lahf
mov
out
sbb
inc
cltd
jmp
and
cmpsl
je
call
mov
or
imul
shll
pushf
pop
insb
dec
rolb
mov
cmp
clc
mov
lahf
pop
sbb
addb
jb
test
cmova
sub
arpl
in
scas
sub
pop
aad
call
fwait
ror
lret
inc
sub
rcrb
sbb
test
mov
push
scas
mov
xchg
mov
jns
sub
push
popa
or
gs
dec
out
leave
sbb
cwtl
icebp
push
xchg
es
inc
pop
sarb
into
gs
inc
out
mov
and
push
pop
subb
insb
sti
jmp
dec
dec
xchg
push
push
jnp
xlat
mov
mov
adcb
pop
test
fsubr
push
fdivs
add
mov
lds
pop
dec
shrb
inc
pop
sbb
xchg
lret
inc
mov
mov
bound
out
les
push
add
mov
jb
mov
cltd
cs
cmc
testb
mov
in
and
pop
loopne
mov
repz
or
pop
xchg
jg
and
loopne
mov
sahf
rcrl
cmpsb
or
push
jae
inc
push
pushf
cmpb
adc
xor
hlt
test
fstps
pusha
jnp
ljmp
das
repz
or
push
test
cmp
xchg
dec
mov
lds
test
lret
ds
fcompl
enter
dec
pusha
mov
pop
pop
cli
cli
repz
dec
pushf
inc
sarb
andl
inc
cmp
push
test
xchg
adc
mov
dec
and
pop
inc
fwait
lret
in
mov
mov
cmp
xchg
mov
inc
cltd
enter
shll
dec
sub
dec
xchg
test
pop
cmp
pop
mov
mov
pop
adc
push
or
icebp
outsb
loopne
rclb
ja
adc
push
sbb
enter
mov
adc
out
leave
cmpb
pop
mov
fst
in
ficompl
mov
in
mov
push
lea
push
mov
xor
jmp
dec
and
mov
mov
mov
in
popa
in
imul
mov
pop
scas
dec
push
xchg
jmp
push
sbb
call
fisttpl
jp
popf
fimuls
mov
mov
pop
inc
loop
scas
out
ror
cmpsl
xchg
fdiv
jp
iret
out
fucomi
push
mov
scas
xlat
insb
ljmp
cmp
pop
in
mov
data16
fsubs
or
test
sub
ljmp
inc
inc
aam
daa
das
aam
mov
mov
inc
xor
mov
push
adc
fisubrs
and
adc
sub
push
repz
add
push
pop
fisubrl
inc
sbb
ljmp
xchg
mov
fisubrs
mov
lods
push
cmpsl
add
or
push
dec
jae
dec
mov
iret
pop
add
pushf
ja
lods
test
vpmaxsw
pop
xor
inc
scas
add
lret
dec
aam
push
lret
in
pop
scas
adcb
xchg
dec
data16
out
shlb
cs
inc
movsl
push
rcrl
xchg
scas
adc
push
sbb
jb
rcrl
xchg
out
out
enter
inc
jecxz
sub
pop
cmpsb
fldt
mov
mov
cmp
iret
insl
cmpsl
mov
pop
push
enter
dec
push
or
lds
scas
mov
shl
dec
mov
call
loopne
addr16
test
cmp
fisttps
push
push
pushf
icebp
adc
call
sahf
lret
xlat
cmp
push
leave
fadd
xor
or
faddl
imul
movsl
loop
loope
add
jnp
sbbb
mov
xchg
in
ss
jb
pop
outsb
mov
or
cmp
sub
push
push
gs
sbb
fcoms
xchg
lcall
mov
mov
mov
in
loop
fistl
push
pop
daa
popf
dec
std
add
lods
jno
pop
rcr
xor
sub
cmp
mov
sub
push
inc
lods
vcvttps2dq
pop
int3
cmpsl
ret
fld1
shlb
xlat
xchg
fiadds
fdivs
mov
and
sub
stc
cmc
cmc
mov
adc
cwtl
dec
and
mov
mov
test
jae
mov
add
mov
mov
dec
sbb
sub
push
sub
lods
xchg
sub
adc
push
inc
sbb
xchg
dec
adc
in
fbld
push
imull
testb
push
dec
in
xchg
dec
and
mov
sbb
mov
xor
xchg
push
imul
test
pushf
or
sbb
mov
cmpsl
sbb
jmp
xor
int
cmp
cmpl
inc
sbb
ret
xchg
js
scas
sbb
cmp
sub
mov
jge
loope
daa
imul
shll
imul
enter
push
adc
enter
xchg
inc
jl
mov
inc
aad
cmc
mov
pop
push
test
xor
mov
mov
cld
mov
jmp
sbb
jecxz
std
pop
dec
aaa
add
cmc
lret
pusha
push
push
cmpsb
sbb
into
in
movsl
xchg
ret
and
pop
or
les
pop
add
fwait
outsl
shll
mov
imul
xchg
fcoms
sbb
mov
push
shrb
stos
jge
sub
push
stos
ja
test
mov
add
enter
daa
dec
push
in
jb
sbb
repnz
mov
leave
xor
andl
inc
fisubs
and
imul
aam
repz
xor
clc
sarb
add
mov
cmpsl
jnp
fcom
adc
jecxz
adc
mov
leave
jecxz
mov
rcrb
fwait
int
insl
dec
aam
cmc
mov
shl
mov
dec
call
jne
movsl
cmc
movsl
loope
iret
ret
pusha
jecxz
mov
push
mov
cmp
mov
and
lret
cmpsl
mov
negb
xor
rcrb
mov
test
dec
ljmp
stos
scas
mov
cmpl
pushl
jo
test
add
inc
inc
pop
add
aam
mov
outsb
les
std
repnz
push
push
mov
das
fiadds
fisubl
mov
inc
sbb
scas
fucomi
jmp
mov
scas
jmp
movsl
sub
add
int3
fwait
cmp
xor
fsubrs
xchg
and
hlt
mov
leave
mov
fstl
pop
lret
adc
test
inc
push
rcrl
add
addr16
xor
shlb
jge
repnz
lods
push
and
shl
add
mov
sbbb
add
inc
rorl
add
sti
mov
sbb
add
or
cltd
mov
leave
enter
jnp
add
mov
es
xchg
sarl
lahf
lret
fildll
arpl
sbb
sub
jne
rorb
inc
scas
test
lret
xchg
fstpt
aad
sbb
arpl
sbb
pop
jno
push
push
aas
sbb
mov
shrb
jp
andl
or
or
ss
mov
jg
mov
ss
and
push
sbb
xorb
incl
mov
sbb
sbb
push
popf
lahf
aam
fldln2
inc
jge
sbb
xchg
lods
scas
cmpsl
jnp
stos
adc
out
fs
push
cltd
out
insl
xchg
or
cmp
xchg
sub
leave
cs
dec
popa
pop
add
hlt
testl
lcall
sbb
lret
fwait
inc
pop
icebp
mov
loope
mov
mov
sub
pushf
cltd
jno
pop
and
mov
sbb
adc
sub
out
xchg
loop
loop
jns
mov
xor
cli
out
lret
popf
stc
cli
in
test
or
lods
fcoms
or
mov
int3
dec
xor
push
pop
sbb
push
sbb
into
adc
push
inc
shrb
aam
pop
imul
cld
loop
and
sub
inc
sbb
ror
rorb
in
dec
fidivrl
loopne
scas
adc
movsb
test
mov
pop
pop
mov
pop
outsl
or
enter
push
push
sub
popl
pop
iret
mov
sbb
push
sub
imul
ljmp
aam
lea
inc
xor
in
icebp
jno
test
pusha
in
sbb
adc
xor
cmc
mov
ss
rcl
lret
sbb
mov
mov
lods
cmpsl
mov
hlt
shlb
or
jae
call
ret
inc
iret
mov
mov
int3
mov
and
push
jecxz
or
movsl
add
sti
add
dec
push
inc
fdivrs
mov
mov
xor
out
jb
jns
add
into
sbb
js
xlat
cmp
shlb
movzwl
icebp
xchg
jbe
popf
dec
nop
out
inc
insb
mov
push
mov
jae
outsl
lcall
ret
xchg
sub
fcoml
fucomi
scas
inc
sti
mov
cmpsl
adc
vsqrtss
jo
or
mov
xchg
inc
xchg
push
sub
ljmp
or
lahf
iret
cmpl
mov
cmp
jp
add
inc
mov
mov
dec
or
and
cmpsl
mov
pop
fs
jmp
add
jno
rclb
push
lahf
and
hlt
jp
adc
sub
dec
rcrl
ja
mov
cmp
or
loop
stos
clc
in
scas
xchg
fisttpl
or
mov
push
jae
mov
stc
cmp
jbe
mov
in
sub
sbb
or
xchg
push
pop
xchg
push
insl
or
js
stos
aas
sahf
ljmp
imul
js
les
seto
pop
push
ret
or
inc
inc
mov
push
pop
push
cmp
mov
sbb
dec
jb
jns
pop
jmp
cmpsb
dec
popl
ret
dec
dec
jmp
mov
das
or
inc
lahf
sti
outsb
dec
call
inc
lahf
adc
jmp
pop
add
adc
test
mov
push
or
fmuls
mov
mov
scas
nop
xlat
push
iret
test
sbb
ljmp
fbstp
pop
mov
add
shrb
rcl
and
andb
cmpsl
add
imul
test
mov
nop
outsb
sub
add
mov
test
scas
movsl
jo
mov
scas
and
pop
je
mov
push
loope
mov
ficoms
jl
std
outsb
dec
daa
inc
lret
bound
cwtl
jl
pop
jmp
jb
ret
xor
dec
mov
iret
jae
pop
inc
push
std
bound
popa
xchg
xchg
sbb
mov
mov
shr
pop
mov
jmp
mov
cwtl
sahf
cmpsl
cmp
fcmovnb
hlt
lret
daa
in
cmp
sahf
pop
inc
fistps
adc
sbb
push
pop
dec
test
fsubrp
mov
jbe
gs
xchg
sbb
inc
ds
insl
movsl
shlb
sbb
push
loop
repz
mov
cmp
mov
add
push
xor
popf
sbbb
in
jp
inc
jp
push
sarb
mov
mov
imul
hlt
into
cmpsb
outsb
and
jne
add
adc
jmp
sbb
lahf
leave
xchg
pop
or
js
fdivrl
shl
leave
call
fcompl
sbb
test
mov
jmp
mov
mov
mov
je
aas
cmp
adc
pop
pop
fwait
push
jecxz
sub
or
dec
cmp
dec
xchg
mov
cmp
and
dec
fdivp
mov
dec
pop
push
loop
inc
in
mov
xchg
movsb
mov
fsubrs
dec
into
sbbl
pop
cmpsl
imul
inc
into
add
lods
mov
mov
sbb
sbb
fwait
jae
cwtl
lret
mov
hlt
test
lods
popf
popf
inc
dec
fcom
push
adc
push
and
mov
xchg
cmp
inc
cwtl
push
mov
cmp
outsb
cltd
sbb
bnd
xchg
push
and
test
sub
outsl
xchg
push
loop
dec
sbbl
divl
jbe
loope
xlat
mov
adc
into
stc
mov
stos
mov
xchg
inc
repz
add
mov
shrl
aas
icebp
jno
adc
movsb
int
sarl
mov
inc
mov
pop
shlb
inc
mov
lds
aas
loopne
jmp
inc
jnp
shlb
xchg
les
add
inc
je
stos
jecxz
sbb
xchg
inc
xchg
xor
cmp
add
test
push
sarl
or
sub
mov
mov
pop
imul
lds
xchg
repz
cltd
fildl
pop
lret
mov
in
lcall
adc
adc
mov
call
add
imul
push
fadds
fcmovb
mov
xlat
inc
cmp
inc
stos
into
sbb
pop
addl
jne
ds
dec
rcrb
dec
lret
and
ss
andl
and
std
push
mov
lods
test
dec
aam
jns
sbb
gs
mov
sub
push
jae
push
movsl
jmp
pop
cmp
mov
inc
cltd
enter
repz
int3
xor
xor
xor
lret
pushf
dec
daa
inc
push
or
jno
pop
orb
mov
call
pop
and
mov
pop
pop
sbbb
add
out
mov
lock
push
adc
daa
mov
cli
jg
popf
mov
cmp
dec
mov
jp
add
adc
or
push
lds
js
mov
pop
mov
adc
dec
add
xor
add
or
shlb
dec
mov
insl
movsl
dec
mov
pop
imul
push
clc
hlt
or
lods
jae
outsb
cs
mov
push
arpl
popa
or
and
sti
std
jmp
mov
xor
int3
jg
fldl
cwtl
xor
pop
push
js
stos
fisubl
mov
mov
push
push
jecxz
dec
hlt
mov
movsl
inc
rcll
fdiv
shld
aad
sbb
sub
test
sbb
mov
dec
fsubl
shrl
adc
dec
lds
pop
aad
sub
lret
xchg
hlt
mov
xor
xlat
rol
xchg
test
ret
test
dec
cmp
dec
icebp
mov
out
outsl
sub
scas
das
stos
adc
sbb
mov
fnsave
dec
pop
js
test
shll
mov
fsubrl
mov
out
sub
ljmp
int3
clc
push
fs
negb
adc
dec
lahf
scas
std
stc
loope
aad
push
mov
js
aad
ljmp
and
popl
adc
jo
ret
int
jmp
sti
xchg
mov
mov
pop
lock
pop
cli
xor
addr16
call
cmpsb
int
bound
cmpb
jb
pop
aaa
sbb
or
sub
jl
imul
jae
dec
pop
mov
fldt
rolb
aas
push
repz
pop
add
push
inc
test
sbb
ret
ss
fdivp
mov
cmpsl
mov
dec
clc
mov
stos
cmpsb
mov
mov
orb
push
add
mov
jmp
inc
hlt
dec
stos
aad
aad
popf
xchg
movsb
ss
cmc
or
mov
fldenv
or
data16
shll
in
in
push
cmp
sub
fists
test
pop
test
push
dec
cld
jbe
jecxz
fistps
xchg
mov
sbb
mov
aas
inc
shlb
into
loop
sti
call
mov
mov
push
sbb
add
xor
enter
lods
aad
mov
divl
push
mov
addr16
push
jle
pop
in
add
sti
sub
jmp
lret
imul
fwait
or
in
or
xchg
and
inc
inc
dec
pop
mov
or
lsl
adc
jnp
std
pop
stc
cmp
add
sub
mov
xor
dec
idivl
adc
test
stos
lahf
lret
push
xor
mov
outsl
adc
sub
mov
cmp
dec
and
mov
icebp
enter
ja
repz
cmp
scas
push
mov
scas
sub
fisubrl
pop
pop
jo
mov
xchg
add
dec
scas
mov
stc
outsl
cs
in
iret
sub
push
aas
push
shll
add
add
adc
jmp
jmp
mov
out
sbb
in
push
jbe
loopne
movsb
das
imul
xchg
loope
in
push
inc
cmp
jb
ror
es
imul
mov
lods
repnz
mov
stos
adc
dec
mov
cltd
dec
add
add
adc
int3
mov
mov
pop
jno
xchg
fistpll
xor
sub
ljmp
in
cmpl
mov
pushf
in
imul
add
cmp
arpl
jne
dec
movsb
pop
cs
mov
gs
into
mov
jge
and
push
pop
push
std
adc
xchg
jmp
adc
dec
mov
js
or
xchg
inc
out
out
ret
andb
les
rcrl
jo
loop
das
cmpsl
xlat
mov
or
mov
fadds
xchg
hlt
jp
push
addr16
pusha
xor
lods
xlat
push
int3
xor
xor
inc
mov
insl
mov
push
xor
and
and
dec
rcrw
xchg
nop
push
mov
xchg
xor
inc
lahf
sti
push
call
pop
test
inc
dec
out
repz
into
mov
sbb
outsl
cltd
nop
xchg
dec
lds
adc
add
lret
xor
dec
lock
shrl
mov
test
cwtl
xor
and
xor
test
lods
sbb
pushf
loop
pop
insb
jecxz
arpl
sub
xchg
sbb
outsl
idivb
cli
gs
push
aaa
fwait
lods
push
imull
xchg
dec
or
xchg
adc
lahf
pop
lret
jo
xchg
mov
fwait
dec
ret
subl
jl
in
inc
dec
or
add
out
rorl
or
jle
pusha
ljmp
pop
xor
lods
es
add
push
cmp
popf
iret
cmpb
sub
xchg
enter
ret
loope
and
mov
int
adc
dec
lods
insl
mov
outsl
mov
or
pop
xlat
test
std
and
lahf
popf
mov
add
aad
loopne
and
adc
dec
leave
fsubrs
movsl
ret
jbe
aad
lret
add
sub
add
jmp
dec
xor
dec
mov
pop
mov
daa
daa
add
aas
inc
mov
outsb
cltd
sbb
ljmp
ficompl
inc
shrb
push
leave
dec
pop
inc
out
add
ja
cmp
test
ret
fwait
gs
mov
push
mov
xchg
and
adcl
setnp
mov
out
mov
mov
pop
loopne
push
sub
aad
push
rcll
clc
cmpsb
cmp
inc
repz
int3
inc
xor
cmp
leave
xchg
jns
jl
outsb
movsl
cmp
mov
dec
daa
adc
mov
popf
negl
inc
test
sub
shlb
ret
pop
jne
mov
ffreep
call
std
xchg
sbb
mov
notl
jecxz
mov
stos
sbb
cmp
mov
shlb
cltd
sbbb
icebp
je
lds
hlt
gs
dec
imul
movsb
mov
in
jecxz
mov
test
cld
sbb
sub
xor
pop
subl
xchg
mov
add
roll
lods
arpl
pusha
mov
test
cmpsl
pop
adc
enter
mov
inc
andl
lcall
pop
hlt
sbb
out
add
jno
fwait
aas
mov
cmp
xchg
imul
and
sbb
mov
jnp
clc
jne
out
es
add
fwait
cwtl
es
xchg
jmp
imul
mov
scas
inc
ret
daa
mov
repz
mov
inc
shlb
or
fsts
jmp
call
cmp
xor
sbb
and
out
into
push
cmc
inc
mov
or
cmp
in
adc
addr16
push
fldcw
mov
jne
out
out
fisttps
out
sahf
sub
mov
popf
xor
test
cmp
sub
xchg
stc
test
pop
enter
lods
pop
pop
push
aam
pop
sub
gs
in
repz
lahf
push
xchg
cmp
bnd
pop
int3
xor
sbb
aas
cmpsl
insl
or
js
stos
aas
sahf
ljmp
imul
js
les
seto
pop
push
ret
or
inc
inc
mov
push
pop
push
cmp
mov
sbb
dec
jb
jns
pop
jmp
cmpsb
dec
popl
or
shll
rcrl
or
jbe
jmp
cmpsb
repz
cld
dec
pop
jo
pop
add
cmpsl
xor
pop
jle
inc
sahf
lret
jecxz
pop
xchg
pop
call
mov
lret
pop
imul
sub
lods
int3
lret
sti
xchg
push
sbb
sub
ljmp
stos
shrl
mov
lds
jae
mov
lret
cld
ret
pop
clc
mov
and
pop
jo
scas
mov
test
lds
inc
gs
mov
cmpl
lret
jmp
rclb
pushf
and
add
or
push
in
or
fildll
mov
out
inc
adc
inc
push
popl
pop
pusha
dec
and
int3
into
inc
cmpsl
sub
inc
sub
out
mov
sbb
or
cmp
pop
mov
inc
mov
pushf
mov
iret
mov
in
out
pushl
hlt
mov
out
nop
fmuls
loopne
ret
mov
mov
sbb
inc
repz
pop
sarl
enter
or
popa
ds
inc
push
jo
mov
pop
inc
push
push
iret
out
in
jnp
pop
ss
cmpsb
test
icebp
pop
mov
mov
pop
cwtl
inc
and
mov
cltd
dec
add
xchg
add
movaps
cmpsb
cwtl
test
adc
fisubl
mov
out
cmpl
jns
push
arpl
mov
jge
adc
push
out
sarb
js
sbb
fisttps
inc
push
ds
cmc
jo
inc
stos
jo
sahf
push
mov
clc
mov
xchg
adc
test
sub
sub
fldl2t
call
pop
pop
sbb
ret
mov
adc
or
push
adc
mov
add
fdiv
cmp
inc
pop
push
arpl
push
inc
inc
inc
xchg
xchg
clc
cmp
sbbl
xchg
mov
jo
call
lcall
pop
ret
sbb
data16
xchg
dec
and
dec
fwait
sbb
add
test
jge
pop
dec
pop
xchg
stc
sub
sub
xchg
or
gs
imul
or
xchg
in
jbe
adc
fidivs
movsb
sub
mov
inc
scas
dec
fldt
mov
inc
fucom
ss
lahf
fsubp
sti
test
insl
aad
pop
inc
mov
cld
hlt
xchg
mov
ljmp
pop
dec
fnstsw
xchg
sub
fimuls
ds
sub
sub
push
and
cld
jno
xchg
das
inc
outsb
sahf
pop
js
orl
adc
pop
sub
push
je
sub
aam
xchg
and
dec
nop
in
mov
xor
mov
es
add
dec
insl
shl
idivl
in
jo
pop
dec
jp
jp
mov
lods
mov
xorb
ret
mov
stos
data16
scas
cmp
lret
mov
popf
mov
clc
mov
dec
push
arpl
inc
sbb
or
imul
rol
push
dec
pop
sar
dec
scas
push
mov
add
mov
ret
pushf
loop
dec
xorl
std
cmpb
cltd
xchg
push
xchg
or
pop
jae
pop
ss
callw
jge
pop
pop
in
jge
jnp
incb
test
push
fistpl
lods
mov
mov
or
aad
pushf
pop
mov
pop
mov
cltd
outsl
adc
ss
popf
add
pop
mov
adc
hlt
xchg
dec
mov
pop
fwait
mov
mov
sar
insl
mov
ds
arpl
pushf
loope
mov
push
test
mov
popa
sbb
adc
pop
mov
clc
mov
cmc
addr16
jmp
cmpsb
test
lret
pop
adc
ret
jbe
pop
xor
xor
xchg
jnp
inc
dec
cltd
cmp
xchg
shl
sti
into
scas
pushf
xor
and
ror
xor
inc
mov
cld
jbe
imul
outsb
hlt
mov
out
test
adc
mov
inc
sbbb
add
scas
jg
imul
inc
pop
js
jo
js
push
mov
ret
xchg
sbb
push
mov
inc
jmp
fucom
dec
aaa
fsubrs
pop
mov
ficompl
jmp
add
lods
xchg
out
in
jnp
push
fs
mov
sub
mov
cmpb
jl
xorl
jp
mov
sbbl
dec
push
inc
inc
ror
lahf
rcrb
gs
iret
in
cmp
add
dec
or
dec
ret
jg
adcb
rclb
cmpb
add
cmc
cld
add
out
sbb
mov
bound
push
push
mov
rorl
inc
mov
mov
icebp
mov
mov
mov
or
push
aas
sarl
pop
hlt
lds
pop
mov
pop
outsb
hlt
mov
nop
aaa
std
lcall
jnp
jnp
xchg
outsl
jp
mov
cmp
cltd
fists
inc
xchg
std
jl
rorb
shrl
mov
pop
mov
fists
fistps
adc
notb
sub
adc
mov
iret
repnz
cmp
fsubl
outsb
mov
shlb
push
or
mov
push
or
jno
dec
sbb
pushf
pop
das
gs
into
pop
dec
fldenv
addr16
rcrb
imul
aas
lahf
lret
loop
inc
xor
fs
and
pushf
sbb
jnp
xlat
stc
sbb
inc
lcall
lock
lret
mov
push
sti
fimull
ret
pop
frstor
or
rcr
inc
pop
insb
lcall
out
fld1
test
push
jge
pop
push
push
stos
imulb
outsb
sbb
lock
fs
rcrl
out
mov
xor
arpl
in
pop
aas
or
jmp
jno
fs
or
fwait
mov
in
cwtl
aas
shlb
dec
into
mov
pop
dec
es
dec
xor
lret
scas
push
lods
stos
dec
lods
jnp
out
stos
push
pop
out
xor
es
add
shll
pop
mov
scas
or
xor
xchg
enter
xchg
cli
fdivrl
mov
pushf
jle
das
fsubrs
shrb
adc
mov
mov
mov
repnz
xchg
mov
mov
jmp
fdiv
mov
popa
in
push
sub
out
and
daa
jcxz
add
int3
lds
jae
xchg
sbb
dec
jp
sahf
and
test
sub
test
xchg
daa
xor
test
sub
cmovl
adcb
xchg
pop
outsb
fmuls
pop
das
mov
push
mov
sub
mov
stc
out
cmp
sarb
cltd
popf
pop
lcall
lahf
pop
pop
xchg
mov
out
adcl
xchg
scas
out
jp
out
mov
inc
andl
repnz
mov
fbstp
lea
xor
test
mov
movsl
call
sbb
rcrb
xlat
dec
lret
xor
shrb
jecxz
aam
inc
and
dec
xchg
aad
and
andb
popa
xchg
in
dec
push
mov
adc
cmc
cmp
mov
sbb
jge
push
sub
cmpsb
jnp
pop
imul
inc
xchg
mov
imul
sub
movsl
iret
dec
push
inc
rclb
add
jmp
int
and
jne
inc
enter
lret
jnp
adcl
mov
dec
pusha
sbb
scas
xlat
stos
pop
xchg
sub
test
mov
mov
xor
addb
mov
sbbl
xchg
inc
jg
dec
xor
sbb
cwtl
fucom
in
mull
outsl
out
add
popl
sahf
push
mov
fwait
mov
stc
and
xchg
dec
jae
push
icebp
into
sub
inc
or
test
sbb
pop
mov
sti
dec
cmpsl
or
pop
xor
aam
arpl
hlt
xchg
inc
mov
jg
mov
mov
ret
insl
test
mov
ljmp
shlb
push
loope
mov
push
test
mov
popa
sbb
adc
pop
mov
clc
mov
cmc
addr16
jmp
cmpsb
test
lret
pop
adc
ret
jbe
pop
xor
xor
xchg
jnp
inc
dec
cltd
cmp
xchg
shl
sti
into
scas
pushf
xor
and
ror
and
inc
adcb
ss
jge
add
sub
lock
push
mov
out
test
adc
mov
inc
sbbb
add
scas
jg
pop
pop
xchg
pop
jo
js
push
mov
ret
xchg
sbb
mov
inc
jmp
fucom
dec
aaa
fsubrs
pop
mov
ficompl
jmp
add
lods
xchg
out
in
jnp
pop
xchg
fs
mov
daa
out
leave
cmpb
jl
xorl
jp
mov
sbbl
dec
push
inc
inc
ror
lahf
rcrb
gs
iret
in
cmp
add
dec
or
dec
ret
jg
adcb
rclb
cmpb
add
das
out
sbb
mov
jp
sub
dec
pop
adc
rorl
orb
js
mov
mov
mov
or
push
aas
lret
mov
pop
hlt
lds
pop
mov
pop
outsb
hlt
aas
push
mov
nop
aaa
std
lcall
jnp
jnp
xchg
outsl
jp
cmp
and
jmp
xchg
sti
nop
jle
inc
xchg
cli
jl
rorb
shrl
mov
sub
fsub
pushl
out
shrb
nop
test
xchg
ja
and
int
int3
xchg
lds
movsl
rclb
cmp
sbb
cmp
or
imul
mov
jl
inc
inc
shrb
les
add
int
lcall
data16
jle
addr16
jns
add
and
mov
mov
xchg
add
cltd
fwait
cmp
leave
cmp
ret
mov
xor
leave
test
enter
jne
cmpsl
fildll
je
cmpsl
mov
and
cmpsl
pop
cs
int3
or
lock
stc
mov
mov
cmp
inc
dec
fstpt
lahf
fcmovu
fwait
jnp
mov
or
je
xor
push
mov
loopne
jl
cmp
fsubl
jmp
mov
int
mov
addl
out
lret
stos
mov
icebp
push
mov
test
pop
bound
mov
fs
jb
stos
ja
outsb
sbb
mov
jle
aaa
int3
add
dec
sbb
inc
inc
pop
lock
stos
inc
cli
or
jecxz
in
cmp
pop
jae,pt
cmpsl
add
scas
loope
mov
fwait
inc
test
add
ja
mov
add
ret
mov
sbb
xor
sbb
in
into
push
add
or
mov
mov
mov
sub
push
add
inc
mov
icebp
mov
mov
push
fwait
mov
shlb
popa
mov
adc
hlt
cmp
and
call
ljmp
xchg
fmuls
push
jne
xchg
inc
mov
mov
dec
sub
push
aas
js
mov
mov
cmp
jbe
dec
out
xchg
int
mov
out
push
xor
mov
mov
pop
imul
out
and
jecxz
mov
aas
adc
test
aas
mov
decb
jno
in
into
mulb
or
mov
cmp
cmp
hlt
clc
pusha
mov
ds
lret
jecxz
inc
sbbb
jg
mov
je
icebp
int
lds
dec
stos
xchg
int3
adc
popf
popf
pushf
xchg
add
mov
cmc
or
mov
mov
lret
inc
jb
jge
rcrb
fldcw
stc
mov
repnz
inc
mov
add
sarl
or
sub
mulb
stos
gs
inc
test
std
and
adc
insb
pop
pusha
jnp
cmpsb
sub
mov
pop
into
scas
je
sub
cmp
xchg
sbb
jge
out
sbb
stos
rclb
add
push
jge
and
cwtl
mov
pop
mov
in
pop
cli
mov
mov
lahf
inc
add
or
lods
mov
pop
loopne
push
bnd
aaa
sbb
xor
je
in
icebp
jmp
jnp
dec
mov
sbb
xor
mov
mov
out
dec
xchg
fstps
sbb
imul
cmc
lret
lock
sbb
add
icebp
mov
cltd
adcb
pop
mov
and
xchg
dec
rcr
xlat
addr16
fwait
push
test
les
sub
push
push
jmp
and
mov
aam
push
cld
mov
jo
scas
pop
or
adc
and
mov
fs
fdivrl
dec
push
jno
movsb
gs
roll
inc
std
mov
sbb
jb
popl
test
add
cmpl
adc
lea
scas
addr16
add
sar
push
xor
insl
fsubs
push
lret
mov
popa
lods
cmpsl
ss
mov
out
sbb
xchg
push
xchg
sti
popa
test
cwtl
push
mov
in
push
repnz
push
jle
jecxz
movsl
xchg
sbb
leave
push
dec
ljmp
fisttpll
test
or
jno
xchg
fwait
lahf
pop
leave
int3
jnp
mov
hlt
call
add
imul
and
stc
sbb
inc
jle
loope
movsl
aam
cmp
movsb
and
push
inc
movsl
mov
sbb
fnstcw
rcrl
decb
jmp
movsl
bound
add
ret
jge
xor
in
sbb
repnz
out
sub
mov
cmc
cmp
int3
mov
popf
imul
or
ljmp
and
push
in
mov
fiaddl
sbb
inc
inc
cmp
jmp
jmp
adc
mov
fbstp
cltd
test
stc
lods
inc
jne
mov
and
adc
ljmp
imul
cmp
in
add
es
inc
into
mov
fs
icebp
or
or
andb
lahf
cmp
dec
sahf
inc
sub
xor
and
mov
add
push
mov
mov
cmp
and
mov
call
enter
add
jecxz
inc
movsb
in
mov
sahf
pop
xchg
adc
js
pushf
add
cld
cmp
and
jle
sbb
ljmp
mov
gs
add
adc
xlat
or
test
adc
and
and
mov
ljmp
cmpsl
add
sub
ret
jg
xlat
xabort
ss
lock
dec
mov
aaa
sbb
hlt
jle
inc
sbb
add
or
inc
scas
xchg
int
jmp
xchg
sbb
repz
push
in
sub
push
pusha
pop
subb
outsb
ja
stos
push
cmpb
jbe
cltd
out
mov
mov
inc
sub
inc
and
movsb
push
pop
sub
imul
jmp
mov
clc
int3
test
jbe
shlb
add
xor
sbb
popf
mov
mov
les
fsub
sbb
enter
dec
push
shrl
mov
aam
ret
pop
cli
lds
xchg
fwait
aaa
dec
push
or
mov
sahf
scas
ljmp
mov
inc
jno
in
dec
rorb
fmuls
cmp
mov
idiv
outsl
cmpsl
push
ja
leave
lods
mov
fnstenv
test
sub
jne
add
js
popf
push
imul
inc
mov
or
push
mov
jo
rcrb
dec
out
das
addr16
sbb
xchg
das
es
xchg
in
pop
cli
cmp
and
lods
dec
andl
push
or
sub
stos
dec
mov
movsb
dec
stc
push
inc
mov
pop
mov
pop
sub
call
adc
fwait
jmp
cmovns
repz
mov
sbb
add
xor
add
push
cmp
sbb
mov
arpl
sub
sbbb
enter
mov
jb
xchg
jne
cmp
add
mov
push
imul
imul
push
xor
imul
outsb
jle
sub
xchg
dec
jns
push
push
filds
lahf
mov
lods
mov
mov
aas
js
adc
dec
mov
out
sub
mov
test
sbb
repz
push
mov
push
mov
fisubl
lahf
inc
jnp
js
outsl
and
pop
test
xor
sarb
les
hlt
jl
movzbl
daa
sarb
mov
cmp
test
enter
divb
pop
std
push
jg
in
loope
inc
mov
enter
scas
insb
aaa
mov
pop
dec
lock
cmpsl
ret
ror
addr16
xor
arpl
cmc
jb
jp
push
sub
in
pop
push
fsubrl
dec
and
sbb
out
mov
and
ret
add
mov
scas
xchg
stos
mov
mov
push
mov
dec
faddl
mov
sbb
insb
jbe
jmp
jp
or
fcomip
sbb
js
sbb
cmpsl
xlat
mov
addr16
inc
cmpsl
dec
jae
cmp
fcoms
loope
dec
pop
xchg
orl
movsb
test
inc
filds
push
nop
mov
addr16
push
std
add
mov
mov
cmp
xchg
xchg
sub
xchg
push
popa
movsl
jo
sahf
insl
mov
inc
inc
jbe
dec
push
pop
or
mov
arpl
notl
jno
fadds
stos
pop
cld
jmp
int3
sbb
jecxz
icebp
cmp
dec
xlat
cs
cmp
outsb
pop
call
mov
adc
int3
inc
mov
cwtl
pushf
ds
and
ret
mov
stc
and
inc
test
js
sbb
and
add
xor
mov
enter
aas
outsb
ret
fmul
inc
pop
push
ds
cltd
lods
mov
mov
pusha
mov
lret
mov
addb
jb
pop
sti
sub
sbb
sahf
jo
dec
aad
push
jge
xchg
jae
cld
jecxz
sti
addr16
in
mov
cmp
rcl
ja
mov
mov
pop
sti
adc
fdivs
xor
int3
inc
cmp
mov
lret
outsb
dec
sbb
test
xchg
dec
sahf
loop
pop
xor
ljmp
cmp
inc
xor
jmp
clc
cmp
xor
jnp
cmpsl
insb
aaa
mov
mov
mov
leave
cmp
in
mov
xchg
push
inc
insl
push
fcompl
lret
adc
push
les
xlat
lret
push
ret
lods
dec
imul
aad
mov
insl
xchg
dec
imulb
sub
xchg
out
leave
pop
mov
cmp
or
int
fmull
jnp
leave
js
pusha
push
jg
mov
xchg
fcoml
loop
jl
nop
cltd
sbb
mov
mov
jle
daa
inc
sub
addr16
aam
jmp
lods
out
push
mov
out
inc
and
pop
lea
jmp
jno
jmp
sbb
fists
and
xchg
rorb
aam
mov
xchg
iret
mov
pop
or
or
inc
je
imul
sti
insl
xchg
dec
ret
std
mov
cmp
cld
xchg
in
ja
movsb
mov
mov
pop
dec
icebp
fisubrl
sbb
ret
jp
sbb
adc
ret
push
inc
ret
push
adc
mov
ret
ret
xchg
cmp
sub
cltd
lods
aad
loopne
loopne
iret
ficompl
xchg
sbb
add
jo
movsb
xchg
loopne
cld
cs
jbe
in
pop
scas
push
aad
push
mov
pop
jl
adc
pop
sahf
scas
cltd
js
stos
aas
xchg
insl
cmp
jno
icebp
xchg
in
cbtw
mov
pop
dec
push
pop
clc
ljmp
mov
lahf
scas
fistpll
push
stos
xorb
jb
cld
add
inc
mov
xor
pop
aas
adc
xchg
fnstsw
das
fsubrs
sarb
mov
aas
arpl
lea
aaa
js
mov
pop
add
or
shlb
mov
mov
mov
les
add
cmc
xchg
int3
addr16
movl
sbb
xchg
enter
inc
cmp
movsb
dec
subb
dec
into
sbb
or
mov
cld
jl
or
inc
pop
lret
push
mov
inc
add
push
inc
cmc
pop
jl
adc
sub
outsb
add
push
xchg
fisttpl
or
addr16
cli
dec
or
inc
das
xlat
in
addl
adc
ds
and
mov
sub
je
jp
scas
xor
pop
xchg
out
pop
shrb
pop
pop
mov
movsl
flds
es
popf
adc
jne
mov
mov
and
frstor
repz
and
rolb
clc
stos
jo
dec
fsubl
lfs
rcrl
int3
jae
cmp
fcoms
pop
test
clc
inc
mov
jmp
cmp
ret
ror
addr16
movsb
add
jae,pt
sbb
test
xor
xlat
imul
sub
stos
pushf
push
popf
mov
cmpsl
and
pop
hlt
sbbl
mov
xchg
pop
xchg
sub
dec
cmc
push
les
push
push
imul
jno
mov
push
aad
push
leave
dec
inc
xchg
lods
or
jae
xor
xchg
xlat
mov
or
movsb
test
out
add
lret
enter
dec
pop
loope
test
adc
xchg
stc
dec
in
bnd
mov
pop
push
scas
sub
je
sbb
inc
dec
inc
cmp
xchg
xor
push
xchg
jmp
faddl
inc
je
add
cltd
lahf
inc
lret
cwtl
hlt
inc
sbb
adc
cli
mov
adc
dec
icebp
inc
lcall
aaa
mov
pop
jp
and
add
jbe
lea
rolb
adc
test
es
dec
shlb
mov
iret
add
fldt
sbb
insb
push
sbb
adc
icebp
pop
push
sub
xchg
mov
lret
lahf
imul
push
cmpsb
pop
test
push
mov
orl
mov
jle
pop
sti
sub
sbb
sahf
jo
dec
aad
push
jge
xchg
jae
cld
jecxz
sti
addr16
in
mov
cmp
rcl
ja
mov
inc
cmp
inc
ljmp
cld
insb
aaa
es
imul
lret
bound
imul
stos
shr
pop
test
call
testl
jno
sbb
xchg
pop
dec
sbb
xchg
loop
outsl
insb
out
loopne
inc
cmpsl
pushf
pop
jg
in
cmp
jmp
scas
adc
in
cli
mov
jno
test
and
dec
dec
dec
js
fldt
push
in
sub
test
inc
pop
jecxz
push
push
add
sub
push
pop
sbb
add
xlat
dec
outsl
test
cs
cmp
mov
hlt
xchg
stos
addr16
xor
pop
psraw
ljmp
adc
xorl
pop
fimull
fdivs
repnz
push
je
pop
jbe
imul
push
sbb
mov
lahf
sbb
pop
ret
cmpsl
mov
hlt
pusha
xor
scas
pop
or
cltd
and
dec
pop
loop
adc
mov
and
mov
jge
cmp
inc
int
dec
out
add
pop
mov
shlb
push
inc
xor
inc
push
pop
fs
out
pop
stos
cmp
dec
cmc
mov
lret
pop
imul
mov
lds
popa
or
rorb
sbb
sub
and
mov
ds
hlt
dec
sub
jmp
push
mov
lcall
mov
test
test
or
jnp
xchg
adc
popa
mov
es
lahf
jns
jmp
or
pop
pusha
jp
mov
iret
lahf
cltd
push
fstpt
test
pop
aas
pop
stc
or
out
std
xchg
fistpll
pop
xchg
xor
loope
pop
adc
push
dec
inc
movsl
lahf
jae
mov
pusha
jo
lcall
pusha
into
cltd
enter
inc
or
icebp
aam
lret
mov
shrb
lods
xchg
and
shl
pop
mov
xchg
mov
jp
les
mov
out
movsb
cli
mov
mov
clc
sub
dec
lahf
lret
outsb
cmc
out
sbbl
pop
lods
xchg
icebp
mov
cltd
and
adc
outsb
push
xor
arpl
mov
and
stos
imul
and
dec
sbb
cmpsb
ret
xor
call
adc
adc
dec
cmpsb
push
push
in
mov
outsl
scas
dec
loope
xchg
pop
in
in
push
mov
jp
lods
mov
mov
or
jb
rcrb
in
testl
cmp
xchg
cltd
pop
mov
and
sbb
mov
ret
sbb
dec
mov
mov
cmpsl
or
adc
jb
inc
push
in
mov
adc
imul
cmc
test
loope
out
adc
imul
rcrl
or
mov
jmp
pop
or
mov
imul
jb
aas
fdivrl
shll
js
push
lods
sbb
jecxz
insl
or
add
popf
popf
pushf
xchg
les
mov
jne
mov
mov
mov
cwtl
pop
ffree
pop
test
push
dec
repz
cli
iret
cmpsl
icebp
sub
add
insb
xchg
inc
movsl
dec
repz
pop
adc
cmc
icebp
push
dec
pop
xchg
add
stc
or
clc
movsl
add
add
es
dec
pop
cwtl
mov
inc
orb
add
or
sbb
xchg
jge
sti
mov
dec
mov
test
push
sbb
addr16
push
push
adc
or
pop
test
daa
ja
sahf
inc
cmpsb
lret
xor
sub
adc
repz
hlt
jmp
shrl
fbstp
daa
inc
ljmp
cltd
js
je
mov
mov
dec
pop
test
repz
dec
dec
and
mov
nop
xchg
sub
cmp
repz
mov
in
mov
add
pop
lcall
xchg
xor
lcall
shll
mov
push
stos
dec
sub
lahf
sub
jno
scas
movl
pop
mov
push
cmp
imul
add
arpl
pop
mov
inc
jg
mov
repz
in
inc
in
push
adc
lahf
fistps
dec
or
push
xchg
leave
loop
inc
scas
pop
aas
cmpsl
adc
pop
xchg
loopne
mov
xor
add
pusha
in
jle
mov
pusha
nop
jno
dec
lret
fldcw
aad
pop
mov
int3
fsubl
push
fwait
xchg
cmpsl
arpl
or
faddl
inc
pop
inc
pop
mov
in
pop
xchg
cltd
adc
out
xchg
repnz
or
or
push
push
adc
or
inc
cmc
inc
pusha
and
clc
cmp
sbb
aas
ja
int
mov
cmc
mov
sarb
or
cmp
dec
cmp
out
pop
jp
movsl
lds
pop
adc
and
adc
push
pushf
dec
mov
pop
mov
jae
mov
pop
lcall
gs
push
lcall
dec
cltd
fs
andl
cwtl
mov
jge
in
and
test
and
fstl
testl
cmpsl
shr
cmp
jl
fs
xlat
fstl
mov
xchg
sbbl
pop
or
xchg
mov
fbstp
pop
lea
into
movsb
es
jne
into
dec
sbb
push
xchg
cltd
fs
inc
push
pushf
aam
js
in
pop
or
push
sbb
sub
pushf
mov
cmpl
repz
inc
pop
push
jecxz
add
mov
xor
rolb
test
or
dec
jns
lea
xchg
es
inc
stos
jno
test
addr16
mov
mov
mov
jno
mov
pop
sbb
push
dec
into
sbb
pop
fldl
push
cmp
or
inc
jo
push
pop
fwait
pop
stos
aad
inc
cltd
call
mov
adc
movsb
xchg
lcall
or
dec
data16
and
rorl
sbb
ss
aas
cmpsl
xlat
lds
add
or
imul
mov
std
test
jecxz
mov
jge
xor
pop
scas
xlat
insb
jbe
leave
out
ja
out
mov
cmp
pop
xor
push
cmpsb
inc
pushfw
ret
inc
inc
mov
pushf
jg
bswap
jecxz
mov
xchg
adc
cmp
mov
cmp
orl
pop
push
xchg
push
aaa
stos
shr
repz
push
stos
lds
mov
jae
ljmp
add
mov
faddp
add
pop
in
push
in
push
xlat
cmp
ret
or
adc
imul
add
dec
jge
inc
ja
inc
pop
lret
inc
mov
xor
mov
sti
lret
sbb
divb
inc
insb
xchg
inc
orl
inc
pop
rcl
neg
mov
imul
ljmp
pop
dec
rcrb
pop
sti
enter
pop
inc
xchg
lcall
daa
jno
mov
mov
jmp
mov
pusha
jp
stc
test
or
outsl
cwtl
mov
loope
xchg
mov
jno
test
test
loopne
adc
cli
pop
xchg
in
mov
std
andl
inc
loope
lea
sbb
pop
daa
xor
mov
push
imul
jne
sbb
or
pop
push
loopne
jae
fwait
xchg
adc
xor
loopne
nop
xor
mov
pushf
pop
push
test
cmc
jbe
inc
sti
mov
loop
mulb
dec
xor
in
stos
mov
mov
pop
adc
push
repnz
mov
sbb
xchg
or
data16
sbb
xchg
add
add
push
mov
pop
mov
xchg
inc
stos
mov
jmp
insl
or
push
mov
inc
frstor
les
dec
xchg
outsl
sti
and
push
cltd
sub
push
mov
shrl
mov
mov
test
jne
out
inc
stos
in
enter
loopne
jg
fwait
aas
xchg
jb
mov
or
in
cmpl
mov
cmp
repz
insb
sub
repz
or
subl
sbb
dec
mov
fnsave
mov
shll
pop
pop
mov
or
sub
pop
mov
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
shrb
mov
in
shll
xorl
and
inc
outsb
and
pop
rclb
inc
mov
flds
loop
jae
add
add
inc
xor
ljmp
push
mov
gs
jno
jl
stos
mov
mov
cwtl
rcrl
xor
and
cmp
hlt
xor
push
sahf
pop
push
xor
mov
or
dec
sbb
lret
int
shr
addr16
repz
sbb
addr16
cmp
adc
stc
adc
xor
aad
mov
ret
mov
rcll
inc
or
les
sbb
in
movsl
sbbl
int3
inc
push
cltd
mov
inc
inc
sbb
and
lret
nop
mov
push
gs
les
imul
mov
xchg
push
sub
mov
popa
cmc
test
ret
cmp
mov
adc
xor
pop
test
xor
mov
xor
in
push
ficompl
push
rorb
pop
mov
xor
mov
das
cmpsb
lods
jae
flds
sahf
jge
jl
push
inc
fisubl
sub
ljmp
loopne
clc
lcall
outsl
mov
aaa
jae
int3
mov
pop
or
ret
cltd
enter
cmc
mov
pop
lds
je
out
scas
rorb
or
xchg
mov
pusha
mov
inc
mov
test
push
addr16
out
jmp
mov
sbb
shl
or
dec
xlat
and
cli
sub
fildll
lret
ffree
stc
dec
repz
pop
dec
das
repz
das
pop
push
xchg
cmp
or
pop
mov
or
add
push
pop
mov
ljmp
push
clc
push
out
pop
pop
mov
orb
dec
push
iret
fildl
repz
inc
cwtl
and
rolb
fdivs
data16
rcr
or
test
sti
add
stos
and
fdivl
test
xchg
xchg
adc
push
dec
insb
push
stc
insb
dec
cmpsl
add
adc
test
test
cmp
inc
lds
repnz
push
push
and
add
je
add
cltd
lahf
inc
lret
cwtl
hlt
inc
sbb
adc
cli
mov
adc
dec
icebp
inc
lcall
enter
sub
xor
dec
lahf
push
sti
cmpl
scas
mov
vmovlps
js
pushf
jl
sbb
iret
sub
hlt
test
out
out
fisttps
mov
clc
jne
lods
movb
jge
pop
out
mov
adc
fstps
gs
fwait
pop
roll
and
mov
add
mov
fcmovbe
pop
jecxz
test
shl
fnstsw
pop
sarb
ret
mov
or
int3
mov
and
add
xor
mov
movsb
mov
mov
incl
dec
enter
stos
and
pushf
sbbl
lcall
mov
mov
add
inc
sub
mov
pusha
rol
fcompl
jae
fnsave
sbb
fidivl
push
sbb
insb
push
mov
popa
cmpsl
xor
push
ja
mov
and
gs
xor
cmp
push
inc
int3
sbb
push
mov
or
loop
jbe
sti
int3
sti
mov
gs
cmp
ja
mov
iret
fs
iret
sbb
sbb
or
cmp
dec
add
inc
add
cmp
push
loopne
xor
mov
xchg
negl
fstps
mov
and
popa
and
imul
sti
repnz
jne
imul
cli
jmp
sbb
arpl
dec
mov
cmpsb
lahf
fnstsw
xchg
or
bound
xor
mov
rclb
cmp
or
cmpsb
and
lret
adc
add
jno
fwait
popf
jmp
in
popa
test
test
enter
imul
les
sub
mov
gs
lds
or
sub
test
ss
xchg
out
cmpsb
push
sahf
hlt
xchg
jmp
cmp
shrb
bswap
xchg
sahf
rorl
sub
dec
inc
mov
into
mov
in
ss
sti
mov
in
mov
rcll
insl
aaa
adc
in
lods
scas
push
shll
jnp
rcrb
or
and
mov
push
sbb
ss
scas
ljmp
cld
xchg
pushl
sub
test
mov
sbb
add
xchg
mov
add
xchg
cmp
in
and
js
cmpl
jecxz
cmp
push
adc
ret
je
data16
cltd
jb
fcompl
add
lret
adc
enter
dec
addr16
and
inc
les
inc
mov
pop
orb
inc
test
daa
dec
enter
pop
xchg
mov
mov
out
insl
push
andb
cmp
or
cmp
xchg
sub
rorb
lea
jge
sbb
sahf
neg
adc
mov
clc
movsl
jmp
xlat
leave
jmp
clc
sti
fists
pushf
pop
bound
lds
stc
nop
mov
shl
enter
je
rcll
mov
push
mov
jmp
movsb
imul
lock
dec
movsl
cmp
and
into
testb
dec
pushf
mov
mov
sbb
stc
mov
mov
in
pusha
hlt
adcl
add
xchg
test
adcl
sbb
mov
stc
divl
xor
call
cmpsl
dec
icebp
pop
xchg
jmp
inc
xchg
jne
pop
and
cmp
or
inc
fstl
test
outsb
ret
test
push
mov
sbb
ret
aas
andl
jecxz
lods
jns
test
mov
dec
mov
lods
mov
or
dec
add
add
cld
es
adc
jno
or
gs
inc
push
out
or
ficoms
adc
inc
rorl
sahf
aad
cmp
pop
mov
sbb
int3
inc
jnp
mov
inc
ret
idivl
push
push
push
loope
orb
loop
fidivrs
cltd
mov
out
push
notb
mov
jo
push
xor
dec
mov
iret
fcoml
fcomi
dec
push
mov
and
inc
lods
in
mov
jmp
cmp
xor
sub
dec
jl
lds
dec
fadds
adc
inc
jl
sti
adc
push
pop
xchg
js
shrl
pop
cmpsl
cwtl
pop
std
scas
inc
cmc
jmp
in
aad
and
xchg
mov
enter
sbb
movsb
test
dec
or
mulb
das
jge
xchg
pop
cld
push
mov
movsl
test
repz
mov
stos
lahf
mov
movsl
mov
adc
add
cmc
dec
sbb
cltd
orb
xchg
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
movsl
xchg
and
xor
int
jae
cmp
mov
leave
mov
mov
xor
shr
xor
mov
test
add
adc
add
xchg
imull
add
lds
vreducesd
add
sbb
movsb
mov
movsl
adc
cltd
pop
or
push
cmpsb
sti
mov
scas
fsubrl
mov
pushf
call
rolb
xchg
cmp
int
jg
xchg
mov
jno
jbe
pop
arpl
xchg
jl
dec
inc
jmp
cwtl
push
ja
dec
out
fs
and
adc
inc
mov
aam
cmc
pop
frstor
add
ret
int
dec
scas
lods
into
je
add
push
mov
fildl
push
add
jnp
cmpsb
jno
add
sub
xchg
inc
movsl
dec
repz
pop
adc
cmc
icebp
push
dec
pop
xchg
add
stc
or
clc
movsl
add
add
es
dec
pop
cwtl
mov
inc
orb
add
or
sbb
xchg
jge
sti
mov
dec
mov
xchg
mov
test
sub
movsl
icebp
jno
mov
adc
popf
mov
fxch
clc
fsubl
fdivl
je
fsub
test
clc
xchg
ret
daa
jne
cwtl
mov
jne
pop
mov
mov
leave
addr16
aad
jno
xor
inc
insb
aam
sti
pop
push
mov
repz
popa
push
loopne
lods
sub
pushf
add
push
aam
dec
mov
pop
neg
adc
movsb
xchg
pop
movsb
adc
sahf
add
in
push
push
lock
test
stos
mov
movsl
or
jno
mov
mov
mov
dec
pushw
adc
popa
mov
mov
jge
push
fisttps
add
mov
dec
pop
jb
mov
pop
lods
shrb
enter
xchg
dec
mov
lahf
scas
pop
ss
ja
mov
inc
jg
xor
jle
in
jl
jnp
filds
add
jge
pop
xchg
xor
cld
loopne
test
faddl
fbstp
cld
sbb
popf
jmp
sub
bound
pop
jb
enter
and
sub
jbe
lret
dec
mov
push
mov
dec
ret
jno
je,pn
add
pop
push
out
ret
loopne
jae
cwtl
iret
inc
fsts
bound
add
xor
lods
out
sub
lock
mov
aam
and
lods
ret
inc
out
and
sti
sti
sbb
push
add
jno
rcrl
xor
mov
mov
add
imul
lret
add
xchg
sbb
xchg
or
inc
sub
std
lock
aaa
stc
add
add
jb
fistpl
ret
orb
shrb
scas
stc
sbb
in
push
sahf
mov
jo
lds
mov
pusha
mov
bound
pop
xchg
in
repnz
and
test
in
inc
dec
out
dec
loopne
std
aad
pop
push
sub
add
loope
pop
fsubs
xor
mov
fldenv
or
sbb
dec
mov
lods
daa
fldenv
mov
nop
das
andl
jecxz
cmpsb
fnsave
add
xor
mov
fstpl
int
mov
sbb
push
jno
or
sub
cmp
mov
negl
jmp
mov
xchg
in
lods
scas
push
push
icebp
das
push
mov
push
iret
test
sbb
mov
fucomip
mov
xchg
ljmp
sar
mov
les
jl
ret
mov
cmp
jae
addb
stos
jbe
mov
or
loope
lods
fstl
push
cltd
ficoms
sbb
loopne
sub
push
mov
adc
sbb
movsb
adc
stc
cmp
pop
leave
scas
addb
sub
push
jno
dec
cli
inc
test
push
fsubl
and
mov
mov
mov
sti
shl
std
xor
lock
mov
or
adc
sub
test
ret
add
xchg
popf
fcompl
mov
cmp
out
inc
xchg
enter
out
adc
inc
inc
pop
adc
test
jmp
les
sbb
sbb
cmp
xchg
lea
aaa
mov
lret
bound
mov
cwtl
xchg
rorb
popf
in
mov
pop
call
je
iret
jno
test
add
dec
mov
push
push
pop
pop
mov
sbb
or
or
mov
adc
xorl
dec
push
inc
add
adc
test
xor
xchg
cmp
xchg
dec
fimull
rorb
dec
in
rorb
mov
neg
sbb
repz
xor
lods
mov
ret
xchg
cmpsb
mov
test
daa
bound
clc
in
or
fwait
std
xchg
addr16
jmp
pusha
loop
sub
aaa
adc
pop
push
adc
subb
push
inc
xorl
nop
or
push
or
int
pop
movsl
fld1
aam
mov
lods
popf
pop
adc
gs
sbbb
xor
mov
adc
cmpsl
inc
mov
mov
and
test
dec
and
mov
les
push
cli
lods
pop
pop
in
mov
and
in
ffreep
mov
out
lret
out
xchg
test
inc
data16
and
xchg
inc
ljmp
pop
stos
xchg
cmpsb
jbe
pushf
cmpsb
mov
lock
es
rcll
inc
pusha
or
mov
aad
sbb
test
mov
lods
rcr
adc
sbb
sub
mov
and
ret
and
pop
ja
js
mov
lcall
scas
popf
call
jge
add
fnsave
out
add
and
jecxz
sbb
inc
aaa
lock
or
cmp
xor
xor
pop
push
xor
mov
adc
sbb
aam
sti
xlat
cmp
mov
xchg
ret
sahf
repz
fnsave
js
adc
xor
inc
mov
jmp
cmp
ret
inc
sbb
pusha
and
push
dec
sbb
add
cmp
hlt
test
movsl
pop
cmp
icebp
jmp
test
dec
pop
icebp
add
add
subl
fisubrl
addb
inc
jl
add
scas
mov
fwait
pushw
xchg
ret
fs
in
mov
inc
scas
mov
add
adc
psubd
jbe
lahf
js
add
nop
jp
xchg
jg
mov
loope
add
cmc
cli
arpl
jl
arpl
dec
fldcw
or
popf
xor
notl
cltd
enter
dec
or
push
xor
insl
adc
rcrb
andl
ja
mov
leave
push
push
jp
ss
insb
stos
jo
mov
sbb
cmpsl
pop
xchg
frstor
sub
popf
adc
fistps
push
xchg
add
xor
adc
mov
dec
xchg
out
mov
test
mov
fwait
lcall
cmc
fmull
jo
adc
xchg
add
movaps
cmpsb
cwtl
test
adc
fisubl
mov
out
or
push
stos
xor
xor
fcmovnb
js
xchg
cmpsl
mov
leave
in
and
cmove
jmp
cmp
cmpsl
and
or
push
test
dec
lods
test
add
data16
aas
fwait
lret
in
mov
mov
or
fwait
lea
jle
rcll
add
push
vextractps
push
jp
dec
mov
fisttpl
mov
cmp
and
xlat
sub
lret
js
in
mov
imul
ret
xlat
int
add
cmp
fwait
cmp
jns
xor
rcrb
xor
js
in
cld
scas
push
mov
inc
sbb
inc
inc
leave
xchg
sbb
jno
mov
hlt
lds
lret
mov
push
data16
je
fldt
jp
daa
add
jl
sbb
cltd
sub
sahf
inc
lcall
cmpsl
dec
push
xor
ret
mov
in
in
mov
ss
xchg
fbld
call
xor
or
mov
xchg
imul
push
data16
movsl
fisttps
js
mov
xchg
dec
insb
mov
cmpsl
ret
shr
jb
negl
inc
aad
mov
test
jecxz
mov
add
fiaddl
enter
mov
add
ljmp
ss
mov
insl
mov
jmp
lcall
mov
lock
add
rcrl
cmpsl
mov
cli
jp
shl
ss
mov
mov
push
fiaddl
xchg
cmp
xchg
lcall
out
pop
imul
mov
addb
push
sbb
xchg
cmp
jne
mov
cwtl
xchg
mov
adc
mov
jmp
in
inc
js
popf
scas
pushl
jb
xcrypt-cbc
cmpsl
xlat
in
testl
movsb
dec
gs
xchg
js
xchg
or
inc
mov
cmpsl
sub
xchg
xchg
sbb
sbb
fucomi
hlt
std
mov
sti
and
xchg
inc
inc
mov
ret
jl
xchg
movsl
xchg
mov
fadd
jle
pop
jge
xlat
sub
call
popa
or
adc
jae
scas
je
lahf
lds
icebp
add
mov
shr
mov
ss
andb
ret
inc
sbb
ss
mov
clc
sub
leave
cmc
out
lret
lahf
sub
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
xchg
dec
jae
fcoms
or
sti
sub
testl
hlt
adc
sub
pop
sbb
sbb
iret
jns
dec
sbb
mov
loop
xchg
adc
mov
in
pop
mull
xchg
inc
sbb
mov
inc
lcall
fimuls
into
mul
jle
out
loop
jnp
aaa
inc
and
and
pop
cmp
sbb
icebp
leave
std
xchg
xchg
adc
ljmp
fcoms
lret
inc
mov
inc
popf
into
push
stos
adc
xchg
in
lock
movsl
and
lock
and
and
adc
lock
aas
movl
mov
pop
jo
inc
jge
pop
mov
leave
leave
xor
jp
mov
cmp
lret
mov
popf
mov
clc
mov
dec
push
arpl
inc
sbb
or
imul
rol
push
dec
pop
sar
dec
scas
push
mov
add
mov
ret
pushf
loop
dec
xorl
mov
popf
adc
xchg
aaa
call
bnd
incb
or
sbb
cmp
mov
adc
push
push
mov
dec
pop
std
lock
out
xchg
das
pop
push
out
mov
xchg
in
jnp
push
jns
xrelease
or
cmpsb
std
icebp
sub
push
ljmp
mov
mov
cmpsl
mov
fdivrs
jbe
lods
add
or
enter
int
lahf
ret
sti
pop
mov
mov
mov
jl
xor
mov
into
jbe
test
out
or
lret
call
sub
arpl
cmp
jno
mov
lock
daa
dec
inc
es
fcoms
clc
xchg
cmp
rcl
push
test
inc
pop
and
xchg
je
ficoml
shll
cmpsb
push
test
dec
sbb
into
xchg
aas
mov
dec
in
mov
jbe
xor
sub
fidivrs
out
mov
scas
aaa
mov
cli
jnp
inc
mov
adc
push
mov
mov
cwtl
inc
and
adc
mov
adc
mov
mov
cmp
mov
ret
mov
sub
lds
mov
idivb
and
push
shrb
mov
xor
mov
pop
xor
scas
shr
repz
int3
lock
mov
out
mov
pop
jno
mov
lahf
frstor
inc
inc
add
mov
in
mov
mov
aam
or
sub
mov
cmpsl
es
movsl
ret
pop
jbe
mov
add
add
ret
sbb
lahf
sub
push
fildll
stc
sub
lods
mov
mov
xchg
test
dec
mov
das
sbb
dec
mov
xor
push
mov
inc
mov
sub
mov
fstps
ret
fcompl
or
inc
sarb
clc
mov
adc
mov
jb
adc
nop
jnp
test
dec
aam
jns
or
fs
call
clc
mov
ss
lds
mov
or
sbb
loopne
jmp
dec
pop
fsubp
mov
xchg
xor
test
ret
dec
mov
sub
ret
xchg
jbe
mov
jns
repnz
out
push
popf
mov
cmp
jp
add
and
lret
cltd
orb
sub
aaa
cltd
xor
jmp
cmpsl
add
dec
xor
test
imul
pop
clc
stos
jb
imul
pop
ljmp
popf
lret
sub
nop/reserved
in
jge
or
mov
test
jp
add
xor
sub
push
test
adc
int
repnz
scas
aaa
mov
cli
jnp
inc
mov
add
rclb
icebp
or
xchg
popa
cmp
jb
xor
icebp
mov
lret
in
mov
mov
pop
mov
gs
mov
inc
cltd
enter
inc
and
cmp
or
cmp
xchg
sub
and
in
jne
sub
add
out
xchg
fiadds
cmp
mov
jns
les
movsl
add
fadd
ret
mov
add
push
pushf
mov
pop
fs
xchg
mov
jmp
xlat
stos
mov
adc
les
sub
mov
cmp
jae
ret
mov
jbe
pop
in
push
jl
sbb
xor
inc
dec
xor
and
scas
fistl
mov
lods
xchg
xchg
xor
jge
pop
xor
mov
in
lds
xchg
test
jnp
inc
mov
add
xchg
incl
addl
sub
pop
fdivrs
jns
push
mov
mov
sbb
lea
sbb
in
aad
jne
dec
add
int3
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
ficomps
nop
sbb
ljmp
test
repz
xchg
pusha
aam
or
mov
lret
pop
rolb
push
cmc
mov
xor
or
add
add
dec
mov
mov
sbb
sub
adc
mov
mov
xchg
test
mov
jno
inc
push
cmp
lret
add
jb
movsb
stos
and
mov
fs
pop
test
sub
sub
mov
clc
adc
jg
or
enter
mov
andl
xchg
adc
ds
lock
adc
das
xchg
int
xlat
mov
inc
xchg
pop
adc
decl
stc
int
jbe
sbb
jae
fistps
cmp
pop
popa
mov
scas
fstpl
xor
mov
loope
pop
mov
mov
cltd
cmp
fcomp
cmc
or
mov
mov
pop
or
call
xorb
mov
repz
sti
jmp
adc
jmp
mov
sbb
test
lcall
push
loop
lret
mov
and
pop
nop
mov
pop
stos
adc
cli
mov
xor
pop
in
mov
lret
fucomp
jae
sbb
aad
dec
cmpsl
xchg
test
mov
outsb
fmuls
das
or
pop
jbe
pop
stos
xchg
stos
std
xor
mov
ret
and
cmp
pop
in
es
mov
jp
xor
and
jge
mov
fcompl
jno
andl
jl
cwtl
inc
push
cmp
jnp
fdivs
in
xor
mov
je
cli
pop
test
or
out
mov
scas
repz
lcall
je
loopne
xchg
pop
cli
mov
sbb
push
or
sub
dec
rcrl
repz
or
stc
or
or
lea
cmp
pop
cmp
and
and
jge
inc
inc
mov
ficomps
testb
xor
mov
lcall
iret
cmpsl
imul
in
popf
cmp
mov
sahf
mov
dec
add
ljmp
push
mov
jae
adc
shll
test
mov
sbb
cltd
and
adc
dec
mov
cmpsl
dec
push
xor
ret
mov
fdivr
repz
leave
loop
and
sub
mov
cmpsb
rcr
mov
test
inc
les
clc
pop
mov
sbb
sbb
push
dec
sahf
mov
fs
mov
dec
inc
xor
ds
or
xchg
xor
mov
cmp
xor
sbb
add
pop
mov
mov
test
int3
mov
mov
sub
mov
stos
add
dec
dec
jnp
cltd
subb
push
pop
imul
or
lods
push
dec
push
cli
jne
pop
and
push
lcall
add
in
jns
cmpsl
xchg
test
mov
mov
sbb
cltd
cmpsl
arpl
stos
mov
add
scas
cmpsl
dec
push
xor
ret
mov
fmull
sbb
js
sarb
rcrb
adc
and
add
mov
jp
adc
push
push
std
sub
cmovo
or
mov
out
in
and
daa
mov
pop
xchg
enter
hlt
xor
out
test
add
xchg
cmp
xor
sbb
add
pop
mov
mov
test
clc
int3
mov
mov
sub
mov
sbb
popa
mov
shrb
cmpsl
mov
negb
ret
popf
mov
clc
mov
idivl
push
ret
xchg
mov
in
mov
test
lahf
popf
mov
cld
push
sbb
ret
add
bnd
or
lcall
mov
stc
or
pop
test
pop
push
mov
jp
fisttps
jp
push
push
fwait
leave
jecxz
js
pop
aaa
add
mov
add
sbb
sti
add
mov
xchg
sub
dec
and
into
cmpsl
aad
test
int
jns
mov
mov
or
pop
fdivrl
lahf
fdivs
xchg
push
adc
add
popf
fwait
push
adc
push
jp
push
mov
mov
das
mov
les
mov
xchg
xchg
jb
sub
test
ret
cmp
mov
mov
lock
add
int
stos
movsb
lods
daa
adc
ret
dec
lret
adcl
imul
test
push
dec
pop
dec
pop
inc
and
std
movsl
dec
or
bound
inc
add
or
std
mov
aam
xor
or
fwait
pushf
adc
xchg
fwait
jnp
dec
pop
cmpsl
imul
jmp
mov
xchg
fldcw
iret
add
add
js
mov
ja
rcr
mov
test
push
mov
sub
jno
inc
and
jecxz
cmp
mov
sti
and
inc
and
mov
adcl
imul
ret
adc
mov
mov
pop
loopne
pop
adc
loopne
dec
pop
add
jmp
clc
ds
mov
mov
add
add
out
sub
xor
cmpb
insl
cwtl
ds
dec
and
mov
pop
test
lcall
sbb
cmc
movsl
xchg
xchg
mov
lret
mov
sbb
pushl
add
xchg
ficoml
lret
mov
jp
add
sbb
add
mov
cwtl
inc
sbb
lods
xlat
fucomi
mov
jp
scas
je
mov
xor
pop
sub
addl
mov
out
jmp
and
mov
popf
xor
push
out
xor
push
movsl
out
xor
mov
sti
dec
arpl
mov
dec
or
loop
ret
jle
sub
cmp
mov
pop
mov
push
or
mov
push
xchg
stos
mov
xor
inc
inc
divb
les
jg
push
jmp
call
sbb
cmp
nop
mov
in
ja
xchg
ds
push
cmpb
mov
mov
mov
adc
test
pop
sub
push
les
movsb
push
dec
arpl
mov
xchg
cmp
or
dec
mov
and
stos
pusha
leave
dec
mov
lds
mov
xchg
pop
xchg
jnp
mov
repnz
sbb
mov
xlat
in
jecxz
mov
fdiv
js
jns
dec
loope
or
fucomip
push
mov
movsb
cld
mov
pop
jnp
jo
test
mov
fs
dec
mov
bound
sbb
lea
mov
xchg
sub
mov
fsubr
push
and
rcrb
or
mov
fidivl
cmpl
or
cmp
sbb
cmp
mov
addl
jecxz
cld
xchg
ret
and
xchg
cmpl
adc
lods
push
jnp
add
and
scas
stos
inc
imul
pushf
loop
lock
movsl
inc
int3
mov
test
xor
subb
or
arpl
inc
sub
lcall
dec
in
sub
inc
cltd
and
jmp
cmpsl
jo
and
jno
adc
fdivl
or
inc
add
subl
or
inc
mull
int
shl
add
fldcw
or
shrl
push
pop
daa
hlt
dec
jmp
jnp
jp
jns
scas
fstpl
jmp
and
inc
mov
cli
fisttpl
pop
enter
mov
sbb
ja
ret
sbb
jns
mov
sbb
mov
lods
xchg
or
mov
xor
and
mov
fnstenv
pop
rcrl
mov
push
inc
clc
lds
jns
lds
nop
clc
xor
shll
inc
lock
xchg
mov
dec
sbb
mov
mov
js
fisttpll
xchg
shll
mov
mov
push
pop
insl
aaa
lret
jecxz
mov
pop
test
jae
in
scas
sub
out
xor
mov
out
int3
clc
jl
clc
dec
mov
or
jmp
rclb
dec
loopne
scas
addr16
sbb
fidivl
lods
iret
ss
mov
pusha
jo
pop
fdivp
clc
les
mov
dec
push
pop
cmpsl
je
cwtl
or
mov
cwtl
jns
mov
cltd
fxch
fldpi
mov
xchg
jnp
pop
das
mul
pushf
mov
cmp
call
jae
les
and
pushf
pop
mov
in
mov
aas
mov
cmpsl
mov
insb
and
or
into
addr16
xor
fldenv
aad
pop
subl
lods
leave
jl
sub
adc
cmpsl
xchg
es
sbb
lret
cld
jo
push
pop
shrb
jge
sbb
sub
pop
scas
dec
fwait
add
mov
lods
clc
mov
leave
or
push
ret
mov
or
rcll
pop
sub
std
andl
in
lock
mov
rcl
inc
out
push
push
lods
xlat
push
call
iret
gs
sbb
pop
std
mov
iret
sbb
mov
xchg
or
mov
adc
and
sbb
and
rcr
and
pop
or
int
mov
iret
aas
inc
movsb
push
pop
push
cmp
xchg
sbb
inc
add
inc
imul
cli
cmpsl
fnstenv
nop
insl
mov
sbb
outsb
sub
jl
js
sub
dec
repnz
pop
and
dec
pop
and
sbb
in
mov
idivb
movsl
inc
inc
lock
mov
lods
cmc
sbb
sub
mov
cmp
push
lret
movsb
push
sub
pop
mov
xor
mov
push
or
push
jp
pushf
sti
jl
js
fcmovb
xor
aaa
scas
out
mov
rol
cmp
cmpsb
pop
fucomi
push
imul
ss
mov
loopne
pop
fwait
xchg
cmp
cmp
aaa
popf
mov
stc
mov
mov
popf
push
test
add
xchg
cmp
xor
sbb
add
pop
mov
mov
test
or
out
mov
mov
mov
adc
add
adc
jp
ljmp
out
and
pop
stos
push
and
xchg
loop
cs
xchg
in
mov
fnstsw
mov
ja
dec
or
insb
push
cld
dec
cmp
dec
push
call
ficoml
pop
inc
adc
mov
pop
jb
mov
in
out
es
mov
inc
pusha
sahf
adc
idivb
inc
bound
iret
pushf
add
sub
push
sbb
mov
stos
mov
xchg
jecxz
mov
fucomp
xchg
test
xchg
mov
arpl
inc
jno
in
xor
pop
mov
mov
mov
fidivs
or
movsl
cmp
mov
cmp
xor
movsb
adc
test
xchg
arpl
sbb
and
and
jb
subl
mov
stos
mov
rcr
xor
dec
jno
sbb
decl
mov
jno
fisubrs
stos
sbb
mov
mov
mov
dec
lret
and
into
sbb
stos
dec
lahf
lret
add
sub
inc
cmp
adc
mov
popf
lock
stos
jne
vmaxss
scas
dec
fcompl
ja
cmpsb
mov
rcr
pop
adc
fcomip
cwtl
sbb
test
mov
std
paddq
or
daa
xchg
cmp
mov
rcll
cmp
mov
jp
jmp
aad
mov
jmp
dec
loop
outsb
or
fwait
sbb
popf
iret
dec
push
or
sti
mov
rcr
neg
mov
xor
bound
gs
sbb
int
jge
clc
rorb
inc
divb
imul
pop
mov
lahf
and
jae
mov
mov
in
hlt
add
and
mov
shlb
int
add
sub
insl
mov
insb
mov
xor
jns
movsl
adc
pop
mov
mov
jns
pushf
fsubrl
jo
inc
jb
repnz
stos
in
and
jp
shll
pop
pop
scas
dec
fs
outsb
jno
ret
in
dec
es
mov
shlb
xchg
cmp
repz
ss
adc
mov
mov
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
pop
xor
gs
mov
in
out
push
lds
jg
movswl
jmp
std
mov
sti
and
inc
and
mov
adcl
imul
sub
mov
xchg
lea
shrl
push
mov
stc
pop
mov
xchg
fiadds
push
mov
pop
incb
repnz
cmp
add
inc
cmp
nop
cmp
addr16
decl
dec
notl
fwait
jmp
and
xchg
and
fists
iret
pop
fbstp
jns
push
sbb
out
arpl
mov
or
pop
cmp
lret
add
inc
cmp
outsl
les
sub
imul
adc
mov
cmpsl
sbb
jmp
add
js
mov
add
sarb
test
sahf
mov
je
mov
ficoms
mov
pushf
push
fsubl
gs
insl
push
add
or
xlat
push
stc
out
xor
shlb
les
loop
je
sbb
xor
loopne
jne
dec
pop
pop
push
xchg
mov
xor
scas
inc
mov
ret
lret
sahf
imul
xor
insb
jne
pop
dec
aaa
pop
sub
mov
mov
mov
cmp
and
add
mov
loop
xchg
es
stos
inc
std
mov
fistps
and
mov
mov
push
dec
dec
popf
lret
mov
cmp
shll
mov
push
push
arpl
xchg
stos
std
lock
dec
pop
cld
shl
adc
adc
and
or
repnz
xchg
insl
adc
dec
fsubrl
push
mov
mull
cwtl
fmull
sbbl
mov
xchg
lahf
jmp
xor
xchg
fsubl
mov
pop
testb
fucomi
hlt
std
mov
sti
and
inc
and
mov
adcl
imul
sub
mov
xchg
lea
shrl
push
mov
stc
pop
mov
xchg
fiadds
push
mov
pop
incb
repnz
cmp
add
inc
cmp
nop
cmp
addr16
decl
dec
xor
mov
push
lods
push
jnp
mov
sbb
cld
mov
imull
fs
mov
lahf
adc
cmp
or
mov
xchg
adc
xchg
jl
ds
repnz
lcall
mov
lahf
dec
mov
sbb
dec
pushf
aas
lahf
scas
mov
sahf
push
pop
jns
sbb
rolb
add
push
xchg
jmp
test
sahf
mov
je
mov
fcoml
das
push
gs
or
stos
mov
call
inc
or
jne
loope
icebp
mov
cmp
lds
mov
adc
loopne,pn
jne
dec
pop
pop
push
xchg
mov
xor
scas
inc
mov
ret
lret
sahf
pop
cs
xor
insb
jne
pop
dec
aaa
pop
sub
mov
and
sbb
cmpsb
mov
adcb
imulb
sub
adc
test
cld
sub
aaa
dec
pop
lods
dec
push
add
pop
mov
adc
xor
test
sbb
xchg
loop
aad
push
adc
mov
sahf
pushf
mov
lret
lret
aam
sar
int3
inc
mov
push
xchg
pop
iret
pop
in
popf
jecxz
cld
repnz
xor
jle
or
push
pop
inc
shlb
push
dec
aam
dec
loope
xor
dec
aam
jns
dec
xor
cmp
enter
inc
sbb
cmp
fwait
lea
and
xchg
enter
cwtl
push
or
mov
fstl
dec
repnz
arpl
or
idiv
xor
loopne
cmp
inc
jnp
xchg
cld
adc
pop
dec
lea
jg
push
xor
out
add
xchg
pop
inc
push
or
nop
pop
stos
push
lods
xchg
sub
adc
jecxz
shrl
mov
lret
add
dec
or
bound
inc
add
or
aad
imul
jbe
outsl
sub
js
shrb
cltd
cwtl
subb
add
xchg
sub
pushf
popf
xchg
out
clc
sbb
adc
or
cmp
jl
daa
lret
stc
lret
jp
jg
notb
mov
sahf
jns
in
jbe
addr16
mov
and
dec
fidivs
cmp
mov
rorb
inc
test
inc
addr16
push
jp
adc
fsubs
mov
es
fildll
les
pop
rcrb
or
iret
ffreep
jns
ds
cmp
std
mov
dec
xor
in
dec
popa
sahf
lock
sbb
adc
lret
inc
sti
lret
pop
pop
test
mov
push
test
dec
add
inc
and
stos
dec
mov
movsb
leave
test
mov
mov
dec
sbb
rol
cmp
push
cmp
lds
mov
xchg
shrl
push
mov
jb
scas
pop
ja
sub
movb
jmp
and
jmp
leave
arpl
sbb
aas
cmpsl
xlat
or
mov
adc
test
xchg
out
add
fstpl
cmpsb
loope
cmp
sub
pop
scas
repz
cmp
xor
xor
dec
inc
mov
mov
adc
lret
nop
dec
daa
cs
or
jg
shl
mov
mov
xchg
pop
movsl
or
mov
mov
cmp
jp
add
test
or
rorb
pushf
mov
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
push
jnp
out
dec
test
mov
push
lods
in
jle
ror
xor
jl
popf
aad
dec
cmpsl
xchg
test
add
pop
mov
mov
rol
mov
jmp
arpl
sbb
add
cmp
pop
bound
dec
pushf
mov
fildll
iret
sub
push
aas
shrl
xor
sbb
rorb
mov
xchg
sub
mov
cltd
xor
or
fisubrs
push
sbb
call
rcrb
adc
outsl
or
or
call
into
aam
cmp
lret
int
and
adc
inc
cmp
push
adc
adc
mov
dec
add
arpl
div
xor
mov
ja
dec
push
jae
mov
div
dec
inc
jnp
movsb
sti
jo
dec
mov
movsb
lcall
pop
dec
int3
sbbb
dec
pop
dec
mov
mov
into
lahf
push
and
cmp
jne
inc
mov
aaa
in
je
sahf
das
xchg
stc
cli
in
test
cmp
xor
mov
or
fistps
sub
in
popf
mov
push
mov
lods
push
pop
jle
mov
mov
mov
aad
orl
lock
cmp
push
rcrb
pop
inc
and
int
mov
jo
or
rol
xor
adc
hlt
sbb
loopne
pop
cmpsb
xchg
outsb
cmpsb
sbb
cmpsl
gs
call
lods
data16
call
xor
sub
push
aaa
test
push
mov
lock
mov
add
mov
ja
jns
jbe
pop
and
or
pop
pop
mov
imul
or
pop
adc
iret
pop
adc
gs
cmp
je
add
ss
adc
cli
jns
lds
nop
lds
mov
pusha
push
clc
lods
loop
lcall
and
int3
fimuls
mov
insb
push
jl
pop
adc
mov
adc
fisttpl
mov
sub
jb
push
cli
cmp
stos
xor
xor
fcmove
push
leave
mov
or
sbb
mov
fwait
push
dec
mov
xor
dec
out
scas
addr16
xchg
xor
cmp
xor
aaa
dec
repnz
or
pop
pop
dec
sbb
sbb
bound
pop
cmp
mov
sub
cmp
fisubrl
rep
shl
pop
and
mov
loopne
adc
mov
push
pop
add
testb
in
lods
es
sub
sbb
test
lcall
outsb
xor
arpl
dec
xor
lods
pop
xchg
dec
sbb
and
lahf
cmp
jmp
push
ror
arpl
lods
insl
mov
xor
xchg
add
jno
gs
outsb
mov
lock
xor
dec
test
cmp
sbb
scas
jg
dec
ja
fs
xor
inc
sub
andl
push
cmp
mov
and
dec
cwtl
dec
and
jae
repnz
sbb
ret
push
pop
insl
push
inc
cs
lea
xchg
mov
lock
or
ret
mov
push
fisttpl
inc
xor
rcl
das
in
cmc
mov
aad
mov
std
jo
test
aaa
ljmp
mov
in
test
mov
sub
rol
or
aaa
xor
dec
ss
outsb
and
gs
mov
add
scas
push
test
clc
mov
pop
lods
mov
cld
std
stos
push
dec
mov
aad
push
pop
insb
push
xor
cmp
jae
test
pop
jnp
scas
add
cmpsb
push
push
inc
lcall
sub
dec
sub
inc
cmc
sbbb
mov
ljmp
scas
jl
adc
adc
loop
int
ds
cmpsb
mov
xor
into
aam
sbbl
xchg
clc
push
fdivrl
gs
insl
push
inc
test
add
fstpl
mov
pop
add
and
xor
cmc
test
inc
sub
jbe
mov
dec
mov
pop
stos
roll
testb
call
mov
ret
inc
inc
loop
and
inc
pusha
addr16
sub
pop
xchg
lea
sbb
add
jbe
xchg
adc
out
and
adc
aam
pop
mov
pop
stos
outsl
mov
inc
imul
push
inc
push
pushf
cmp
scas
cwtl
sbb
shrb
data16
mov
in
xchg
aad
sub
jg
cmpsb
push
push
sbb
sbbb
add
mov
int3
push
lahf
scas
loop
jmp
push
lahf
xchg
mov
jmp
loop
adc
inc
loopne
scas
out
adc
xchg
and
dec
outsl
mov
fwait
xor
lods
xlat
push
in
mov
out
push
mov
xor
test
sbb
fs
sbb
xor
inc
inc
sub
push
push
mov
call
xchg
dec
inc
pop
ret
or
out
shr
aaa
fsubrs
jne
add
cmp
push
add
into
inc
xchg
in
push
mov
sub
jp
lcall
outsb
xor
mov
fisubrs
dec
add
stos
push
lods
lods
push
dec
mov
sbb
adc
and
in
mov
cld
leave
inc
mov
xchg
mov
mov
mov
shrb
or
stos
lret
in
mov
pop
push
shrb
sbb
cmp
lahf
scas
std
leave
jmp
addr16
pop
cwtl
adc
mov
add
xor
or
mov
xchg
sub
and
push
mov
lock
adc
or
and
dec
pop
and
outsl
sti
xor
mov
int3
or
mov
dec
jb
repnz
ss
fcomp
mov
dec
int
mov
scas
pop
stos
enter
or
pop
xlat
fcoml
ret
cwtl
xor
xlat
repz
push
mov
jbe
pop
rcll
icebp
cld
jg
imulb
xor
sbb
loop
add
clc
or
shrl
xchg
mov
test
sti
dec
into
lret
xchg
xchg
sbb
pop
mov
dec
mov
dec
push
inc
imul
mov
xorl
mov
jns
inc
add
push
push
pop
lock
pusha
mov
mov
pop
xchg
aas
push
jo
subl
or
adc
push
pop
dec
xor
xlat
mov
jmp
lea
cmc
mov
mov
or
pop
out
xor
rorl
inc
mov
lahf
daa
mov
sbb
sub
lods
add
xchg
dec
cld
sub
inc
ss
add
lods
fistl
inc
mov
movsl
cmpl
movsl
icebp
data16
or
pop
dec
aaa
xor
add
int
add
cld
add
pop
test
mull
adc
pushf
fsts
scas
hlt
gs
pop
push
aad
push
mov
push
mov
sarb
mov
jg
mov
outsb
fsts
mov
xchg
lret
xchg
xor
std
xchg
push
mov
mov
sbb
fisubrs
int
sbb
jbe
lahf
mov
ficomps
cmp
or
inc
fwait
mov
aad
cmp
aas
sbb
sbb
andl
out
idiv
call
mov
ret
lock
test
in
push
pop
lods
xlat
push
int
sbb
jnp
fistps
xlat
adc
clc
cwtl
gs
adc
outsb
aaa
popf
pop
push
aam
and
lock
pop
adc
imul
inc
ret
bound
rcrb
or
jo
dec
inc
mov
mov
jne
xchg
jns
cs
mov
pop
dec
lock
and
cmp
pop
dec
push
pop
inc
cmp
aas
cmpsb
xchg
xlat
dec
dec
and
push
pop
stos
sti
mov
mov
mov
dec
iret
jae
mov
stc
cli
in
test
cmp
or
mov
or
icebp
test
stos
jbe
or
pop
test
push
mov
mov
sahf
xchg
pop
jo
xor
into
push
cmc
and
cmp
sbb
stos
daa
mov
xor
ret
addr16
cltd
xchg
adc
xchg
fnstenv
inc
insl
aad
aad
jns
mov
in
jb
pop
mov
jl
inc
nop
mov
inc
pushf
xor
mov
insb
or
inc
push
repnz
dec
daa
adc
or
popa
mov
pop
cmp
mov
adc
mov
inc
pop
add
pop
mov
and
cmp
aaa
gs
cmp
mov
or
iret
push
sbb
fmul
inc
test
movsl
add
mov
lods
push
sub
stc
dec
dec
mov
xchg
fs
sar
aam
shrb
ret
push
lock
cmp
adc
cltd
inc
adc
dec
mov
cmpsl
dec
push
xor
ret
mov
fmull
sbb
js
sarb
rcrb
iret
and
adc
paddw
fildll
mov
scas
push
jmp
lods
inc
gs
imul
es
pop
fidivrs
xor
loopne
mov
pop
xchg
enter
hlt
xor
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
dec
jae
mov
std
pop
jns
and
cs
dec
popa
sahf
dec
mov
cmc
adc
mov
pop
xor
lcall
test
scas
inc
in
dec
mov
and
add
adc
sub
mov
test
dec
sub
xor
out
movsl
inc
scas
ja
test
test
dec
mov
cwtl
mov
fisubrl
stos
xor
xor
cwtl
or
xor
leave
loop
inc
mov
mov
sbb
stos
cwtl
xor
lret
xchg
xchg
sub
repz
je
mov
xchg
mov
xchg
cmp
fsubl
fs
pop
mov
rcrl
int3
pop
sub
pusha
or
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
dec
aas
pop
cmpb
mov
add
push
and
mov
mov
mov
fdivl
fs
dec
mov
jg
push
push
nop
and
pop
mov
push
push
test
mov
fildl
scas
stos
dec
push
lods
push
cmp
stos
push
adc
jns
movsl
sbb
push
dec
mov
xchg
mov
sti
or
cmp
add
sti
jmp
aaa
mov
cli
jnp
inc
mov
lret
inc
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
jmp
xor
int
loope
pop
cmp
xabort
js
das
sbb
enter
repz
xor
dec
inc
mov
cmp
outsl
mov
sbb
je
and
mov
dec
test
pop
rol
mov
push
adc
cmp
pop
addb
adc
mov
xchg
lret
hlt
mov
pop
sub
mov
or
add
lcall
test
xchg
dec
and
push
nop
mov
test
fdivrs
add
scas
mov
xchg
fistpll
jns
mov
sub
insb
push
mov
mov
push
orb
mov
stos
xchg
fistl
mov
enter
pop
sub
adc
cmpsl
pop
xchg
std
push
fucomi
repnz
add
and
cmp
mov
inc
shlb
push
dec
shlb
dec
dec
mov
adc
mov
aad
mov
pop
ds
out
pop
fdivrl
sti
mov
out
out
and
cmp
or
cmp
xchg
sub
popf
xchg
push
adc
push
idivl
sub
xor
test
ds
or
cmp
lock
repz
or
lock
hlt
mov
or
add
fsubrl
sbb
hlt
mov
xchg
xor
dec
xor
rcll
mov
movsb
leave
test
cmp
push
and
mov
mov
mov
ret
sbb
xor
test
ret
dec
xlat
cld
mov
ret
adc
outsl
mov
lahf
lcall
push
data16
adc
lahf
inc
inc
fildll
js
jg
lahf
inc
mov
cli
or
xor
adc
fildll
mov
jmp
xlat
mov
inc
push
mov
or
lods
push
sub
cmp
cmp
push
jo
fwait
pop
xchg
and
dec
jne
or
test
xor
xchg
cwtl
lea
imul
es
cmp
mov
pop
pop
mov
lahf
imul
in
enter
pusha
xor
jge
mov
jns
ret
mov
add
and
loop
adc
sub
dec
lods
add
lds
orl
mov
sahf
das
xchg
stc
cli
in
test
cmp
xchg
dec
add
or
icebp
test
stos
jbe
or
pop
test
push
mov
sbb
clc
mov
sbb
sbb
aas
cmpsl
xlat
add
es
mov
out
rcl
cltd
cmp
push
cmp
adc
pop
out
mov
pop
fpatan
clc
les
pop
cmpsb
in
clc
call
mov
dec
inc
xor
or
out
inc
adc
and
mov
mov
popf
lea
shr
pop
pop
add
cmp
clc
aas
fisubs
mov
mov
jecxz
ret
mov
cmp
inc
add
sub
jle
mov
cmp
mov
stos
sbb
cmp
add
mov
xor
scas
xchg
sbb
sbb
pushf
mov
jae
and
cmpb
xchg
dec
cmpsl
fistps
stos
inc
lcall
lahf
mov
mov
adc
sub
ds
out
sub
sbb
mov
fwait
push
dec
mov
jmp
inc
cwtl
dec
and
mov
ret
adc
push
fisubl
in
rol
fld1
jb
pop
cwtl
pop
mov
inc
mov
sbb
dec
mov
hlt
jl
sub
mov
and
mov
pop
pop
shl
mov
sub
or
int
mov
sub
and
jns
jnp
or
pusha
xor
aaa
mov
sbb
xor
out
adc
cltd
pop
mov
inc
cmp
xor
dec
xor
xlat
pop
sbb
push
push
enter
jne
in
movsl
mov
sbb
ljmp
cmp
in
test
cmp
out
add
or
fistps
sub
in
popf
mov
push
mov
lods
pop
pushf
imul
mov
shll
and
js
pop
popf
daa
sbb
stc
ret
mov
hlt
jl
pop
mov
bsf
adc
or
fistl
mov
popf
jmp
jae
mov
out
mov
cmp
pop
gs
mov
or
push
in
std
sbb
jb
addl
lret
inc
sub
xlat
sbb
dec
mov
loop
stos
dec
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
mov
mov
and
cmpsl
mov
nop
pop
mov
lcall
test
test
je
test
int3
in
out
mov
stc
inc
and
dec
mov
fidivl
test
adc
sbb
sbb
inc
lcall
fisttpl
mov
daa
mov
xchg
adc
push
lds
sbb
sahf
pop
fucomi
bnd
jg
xchg
test
jnp
inc
mov
adc
inc
loop
scas
out
sbb
sub
mov
sbb
movsb
mov
or
push
or
xor
pop
insl
repz
ret
fld1
mov
fwait
rep
rcr
sahf
mov
jg
mov
jecxz
repnz
mov
repnz
rcr
xlat
or
mov
pop
xor
call
xchg
inc
xor
mov
mov
or
pop
dec
scas
add
add
pop
mov
or
mov
xchg
sub
adc
mov
shll
inc
lock
xchg
and
fucomp
xor
mov
mov
js
fisttpll
xchg
shll
mov
or
clc
out
push
sbb
jb
cmpsl
cmp
push
mov
mov
pop
or
lahf
cmp
sbb
aas
cmpsl
xor
add
mov
in
pop
mov
enter
sub
insb
jbe
ds
or
jle
or
pop
pop
in
sub
data16
jne
popf
stos
mov
sub
cltd
add
sbb
popf
cmpsb
outsb
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
dec
aas
pop
cmpb
mov
add
push
and
mov
mov
mov
fdivl
fs
dec
mov
jg
push
push
nop
and
pop
mov
push
push
test
mov
fildl
scas
stos
dec
sub
pushf
ja
lods
push
cmp
stos
push
adc
jns
movsl
sbb
into
dec
mov
xchg
mov
sti
or
cmp
add
sti
jmp
aaa
mov
cli
jnp
inc
mov
iret
inc
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
jmp
xor
int
loope
pop
cmp
xabort
js
das
sbb
enter
repz
xor
dec
inc
mov
cmp
outsl
mov
sbb
je
and
mov
dec
test
pop
rol
mov
push
adc
cmp
pop
addb
adc
mov
xchg
lret
hlt
mov
pop
sub
mov
or
add
lcall
xor
mov
mov
repnz
push
aam
dec
sbb
sbb
scas
mov
in
lods
fldt
push
popf
lret
sbb
sbb
cmpsl
cltd
adc
cmpsb
mov
or
sbb
jns
sub
in
shrl
mov
add
sti
add
out
pusha
jl
nop
xchg
incl
xchg
xchg
mov
shlb
addr16
sbb
arpl
lret
inc
gs
imul
int3
xchg
gs
xchg
out
or
mov
cmp
cmpsb
aam
imul
sub
ret
popa
inc
mov
popa
add
icebp
lea
mov
push
jae
mov
push
lcall
mov
dec
sbb
mov
ret
int3
lret
mov
dec
hlt
aad
cli
mov
push
stos
cmpl
sub
fildll
fs
sti
dec
into
cmp
loopne
xor
jae
fidivs
inc
add
stos
inc
fsubs
pop
add
mov
mov
push
adc
aam
jecxz
into
aam
jge
pop
xor
mov
into
das
leave
popa
icebp
loop
add
mov
andl
add
aam
adc
jp
sbb
data16
mov
xchg
xchg
push
mov
les
and
and
fidivrs
insl
out
sbb
pop
sahf
mov
lahf
mov
cmc
dec
inc
mov
cmp
lret
cmp
lret
pop
mov
inc
inc
jbe
or
or
int
je,pt
pop
test
cmp
fisttps
iret
pusha
xor
jnp
mov
sbb
dec
jo
pop
jg
cmpsb
pop
dec
sbbb
pop
dec
or
mov
in
xor
sub
dec
mov
jns
xchg
xchg
out
jnp
outsl
dec
sbb
mov
xchg
push
loopne
sub
cld
xor
or
cmp
push
inc
sti
mov
xor
movsb
push
sub
xor
das
jns
and
stc
inc
fwait
leave
jecxz
out
adc
sbb
add
add
std
cmpl
ds
xchg
int3
fwait
out
rcll
mov
bswap
sub
mov
cmp
fs
push
mov
dec
inc
je
enter
rorl
dec
loope
jl
and
dec
cwtl
fcoml
inc
cmc
mov
pop
das
or
or
arpl
lods
fcoms
inc
inc
ja
stos
in
aas
fsubl
mov
stos
aad
add
cltd
outsl
mov
sub
push
lock
into
addr16
add
adc
dec
inc
lods
push
dec
repnz
mov
add
jge
xchg
jp
jmp
dec
rolb
test
out
jge
outsb
cmpsb
sub
or
push
negl
mov
pop
fistpl
push
sub
sahf
std
jb
lahf
jnp
das
jg
leave
in
adc
loopne
mov
adc
adcb
mov
dec
mov
xor
push
ds
xor
test
insl
xrelease
lahf
cmpsl
ret
test
shll
fidivs
wrmsr
out
adc
jle
inc
inc
cltd
mov
cmp
cmp
dec
dec
sub
loopne
cmc
mov
mov
lods
xlat
mov
call
mov
aam
stc
pop
mov
dec
ds
sub
in
jns
add
daa
jo
call
sbb
les
or
sbbb
mov
rclb
mov
test
xor
sub
mov
xchg
jmp
rcr
mov
and
je
std
pop
fcoms
inc
xchg
test
xor
adc
fisubrl
pop
push
test
xor
mov
add
out
call
scas
das
pop
negl
or
andb
and
sbb
pop
mov
cmpsb
mov
xor
addr16
fwait
push
xchg
pop
cmp
push
fidivl
and
int
inc
pop
ljmp
dec
mov
push
jne
ljmp
aam
dec
inc
ret
jl
sub
sub
push
sub
dec
mov
das
pop
add
ss
mov
cmp
clc
add
iret
fwait
jp
inc
in
adc
pop
sub
add
aaa
outsl
mov
dec
adc
out
inc
cmp
mov
dec
dec
sarb
push
test
repnz
lods
and
bound
lret
mov
mov
popf
imul
nop
aas
pop
or
data16
sbb
push
cmp
cwtl
jns
aad
ljmp
xchg
cltd
pushf
sahf
pushf
pop
sub
mov
mov
test
sub
xchg
lahf
cmp
sbb
dec
mov
in
pop
mull
mov
dec
out
push
daa
xchg
and
les
in
push
xchg
in
jbe
fidivl
pop
mov
lock
cmp
mov
xlat
pop
clc
cld
and
and
mov
and
hlt
xor
nop
inc
int
inc
xor
jge
and
sahf
dec
mov
xor
popf
clc
lods
or
mov
mov
jae
ljmp
add
into
ret
ret
mov
add
addr16
cs
push
lret
loopne
xchg
jg
mov
cli
cmp
shrl
push
sub
cmp
xor
xchg
test
andl
or
cltd
insb
push
push
std
mov
aad
fs
cmp
lahf
jp
dec
popfw
sahf
fnstenv
lahf
sub
std
dec
jle
icebp
xlat
repz
sub
add
mov
sbb
idiv
decl
and
test
dec
dec
loopne
mov
add
movsl
ret
dec
mov
out
enter
and
pop
popa
jns
ja
sti
cmc
sbb
int3
pop
sub
mov
outsb
inc
or
xor
xchg
ret
daa
mov
das
or
xor
mov
jge
push
pop
add
leave
lret
repz
mov
cmp
jp
add
mov
lock
jo
sbb
hlt
jmp
sbb
subb
adc
ret
sbb
adc
stos
jb
sbb
test
lahf
mov
jns
cmpsb
pop
and
fstps
cld
stos
repz
cli
xor
mov
jl
ret
adcb
test
lods
cmp
pushf
test
inc
stos
push
mov
lods
jle
sub
mov
lods
inc
sbb
cs
fucomi
repnz
lret
std
cli
jnp
inc
mov
iret
inc
sbbl
push
daa
out
or
push
xchg
dec
test
and
adc
cmp
fidivl
dec
push
lods
test
cmp
std
bound
out
and
mov
cmp
or
dec
push
or
fiadds
in
adc
inc
cmc
mov
push
fldl
add
lea
or
jge
in
outsb
out
aad
jge
pop
dec
aaa
add
cmp
adcl
or
xor
sbbb
push
sarb
pop
jecxz
lret
dec
and
lds
sbb
mov
iret
mov
cmp
sbb
or
jmp
cmp
mov
and
cmp
popf
xchg
sbb
fs
jle
mov
std
cli
jnp
inc
mov
mov
inc
sarb
stos
gs
test
rcll
push
fdivrs
jge
imul
xor
fcomps
mov
js
movl
or
push
push
dec
dec
lea
fsubrs
test
cmc
xor
sub
cmc
mov
pop
or
test
ret
imul
fstpt
pop
add
add
int3
ret
ret
mov
add
addr16
lods
icebp
mov
push
pop
jecxz
sbb
mov
stos
test
fiaddl
inc
pop
movsl
or
fistps
add
ljmp
xchg
fisubrl
std
cmpsl
jno
lret
push
cmp
ret
xchg
or
cmp
lahf
stos
xchg
jle
lcall
cmp
mov
and
jae
ret
leave
ficomps
jnp
inc
mov
xor
mov
std
jg
icebp
mov
push
cmc
addr16
inc
sbb
or
pop
pop
js
or
mov
push
pop
xchg
call
jo
mov
jg
jb
xor
cmp
mov
dec
and
push
out
mov
jne
dec
lds
mov
aad
out
mov
sub
call
and
mov
jge
mov
jecxz
xor
dec
pushf
sbb
in
ja
push
sbb
or
mov
jbe
mov
leave
cltd
xor
ficompl
push
inc
push
pop
sbb
sbb
add
push
icebp
int
mov
popf
imul
push
mov
xor
push
fwait
or
mov
xor
xchg
pop
push
cmp
lods
cmp
cltd
ret
lahf
ficoms
fwait
shl
adc
loop
xchg
lea
jo
int
idiv
decl
cmp
or
adc
in
mov
xchg
mov
bound
add
insb
jbe
inc
sbb
pop
cmp
xlat
dec
cmp
ret
jge
push
loopne
inc
adcb
js
adc
dec
sbbl
push
fimuls
sub
adc
pop
dec
mov
mov
test
xchg
dec
push
or
ret
xchg
clc
jl
pop
je
in
or
dec
or
and
repnz
aad
inc
repz
jp
fnsave
pop
lret
cli
test
xor
mov
inc
stos
push
lock
or
adc
mov
mov
jno
inc
push
insl
sbb
and
adc
shrb
fisttpll
dec
mov
cmp
push
push
cmp
lahf
mov
cld
ljmp
ss
cltd
stc
xlat
in
testl
adc
test
out
jp
cltd
jns
fucomp
push
out
sub
mov
out
push
lods
mov
pop
jo
jb
data16
or
mov
and
cltd
js
mov
xchg
pop
xchg
dec
daa
sarb
xchg
xchg
pop
addb
mov
or
int
sbb
mov
add
inc
stos
ret
pop
pop
xor
mov
mov
sub
pushf
ss
das
in
ror
mov
and
push
nop
cmp
fisubl
xchg
aaa
pop
mov
fildll
mov
push
adc
pushf
dec
mov
test
and
jnp
scas
xchg
stos
std
xor
mov
mov
cmp
mov
int3
dec
lods
arpl
aad
mov
dec
les
xchg
cld
out
stc
or
pop
jle
aaa
sbb
jle
inc
sbb
add
daa
dec
cwtl
call
addr16
fwait
push
xchg
pop
cmp
push
fidivrl
add
mov
mov
popf
idivl
mov
sti
and
test
xor
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
or
add
iret
pop
jl
sbb
push
xchg
xor
mov
and
cli
or
mov
aaa
fnstenv
in
fnstsw
mov
pushf
fs
and
add
mov
dec
mov
mov
mov
lahf
cli
in
js
pop
insb
push
jp
ss
xor
inc
sbb
or
mov
dec
sbb
gs
push
cmp
xor
push
mov
test
pushf
ja
mov
cli
jnp
inc
mov
adc
inc
loop
mov
mov
imul
stc
hlt
stc
fucomp
push
test
sub
sub
cltd
cmpsl
ret
mov
fwait
shlb
lahf
addr16
fiadds
add
out
daa
dec
lods
daa
xchg
test
xchg
dec
xor
inc
or
popa
mov
shl
mov
sub
or
adc
sub
mov
repz
mov
push
clts
xchg
mov
xor
cwtl
or
fstpt
pop
ret
xchg
int3
addr16
mov
ror
push
add
add
lds
sbb
ss
mov
xchg
stc
cli
in
test
or
repnz
lds
push
stos
std
idiv
pop
scas
dec
push
inc
pop
test
and
mov
out
jo
shrb
data16
cmpsl
xlat
in
ja
fidivrs
inc
stos
and
inc
icebp
in
inc
daa
xchg
int
mov
addr16
adc
or
ret
xchg
cmp
cmpsl
jge
inc
jb
xor
popf
iret
cmpb
sbb
nop
or
pop
pop
aas
adc
xchg
mov
cmpsl
cmp
int3
imul
mov
or
mov
inc
inc
push
pop
fistl
arpl
cwtl
cld
aaa
pop
call
test
or
rorb
pushf
mov
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
mov
or
push
dec
mov
sbb
fldt
popa
cld
jne
test
dec
mov
push
xchg
jge
stos
mov
push
push
adc
stc
or
pop
test
pop
push
mov
jp
loop
cwtl
push
xor
leave
loop
inc
mov
mov
sbb
stos
cwtl
xor
lret
xchg
xchg
sub
repz
je
mov
xchg
mov
xchg
cmp
fsubl
cmp
xlat
data16
xor
fsubrs
dec
leave
sbb
and
sbb
fisubrs
subl
dec
cmp
decb
mov
daa
pop
cmpb
mov
push
inc
ret
and
insl
sbb
push
add
mov
mov
hlt
push
sbb
and
sub
arpl
test
push
stos
rcrl
jne
out
std
push
stc
dec
loope
dec
pop
pop
lret
cmpsl
imul
mov
push
mov
addr16
imull
mov
jae
mov
jno
lds
inc
fsubrl
mov
mov
test
inc
pushf
cmp
push
sub
or
pop
adc
or
add
jle
insl
pcmpeqb
lea
dec
pop
xchg
aas
lods
push
sub
pop
clc
jecxz
mov
jmp
std
mov
sti
and
jb
jecxz
mov
adcl
imul
sub
mov
xchg
lea
roll
jae
mov
xor
decb
clc
sti
mov
inc
jge
nop
lods
dec
aad
dec
popa
sahf
nop
xor
cmp
imul
mov
idivb
js
xorl
sub
dec
in
sbb
subl
jge
cmp
cmc
lret
cmpsl
mov
or
cmp
adc
cltd
inc
push
adc
dec
mov
cmpsl
dec
push
xor
ret
mov
fmull
sbb
js
sarb
rcrb
iret
and
adc
paddw
fildll
mov
scas
push
jmp
lods
inc
gs
imul
es
pop
fidivrs
xor
loopne
mov
pop
xchg
enter
hlt
xor
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
dec
jae
mov
pop
push
jns
and
cs
dec
popa
sahf
dec
mov
cmc
adc
mov
pop
xor
lcall
test
scas
inc
in
dec
mov
and
add
adc
sub
mov
test
dec
sub
xor
out
insb
inc
scas
ja
test
test
dec
mov
cwtl
mov
fisubrl
stos
xor
xor
cwtl
or
xor
leave
loop
inc
mov
mov
sbb
stos
cwtl
xor
lret
xchg
xchg
sub
repz
je
mov
xchg
mov
xchg
cmp
fsubl
fs
pop
mov
rcrl
int3
pop
sub
pusha
or
xchg
sub
xchg
jmp
mov
dec
mov
into
pop
stos
nop
sbb
ljmp
test
pause
jmp
pop
dec
repz
aaa
bound
ljmp
enter
xchg
scas
dec
repnz
int3
pop
imul
insl
sahf
mov
cmp
add
mov
jecxz
mov
push
dec
in
popf
arpl
add
insl
ret
add
or
fwait
xor
xchg
int
xor
jb
fisttpll
fwait
lock
or
shrl
lods
or
js
popf
lret
imul
jo
sbbl
push
cwtl
lock
aam
es
add
mov
fldpi
add
call
xor
insl
xchg
adc
or
push
insl
ljmp
jge
push
mov
int
rcll
ret
add
scas
and
sub
push
iret
xor
cmpsb
cmp
mov
mov
sarb
adc
into
pop
stos
cmp
jb
pop
xor
dec
mov
dec
pop
orb
daa
popf
icebp
clc
sbb
jl
mov
or
ja
insl
stos
cmp
lret
adcl
loop
push
inc
in
test
movsb
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
adc
add
inc
cmp
ret
pop
pop
lcall
dec
in
xor
das
bound
lcall
cmpsl
pop
push
mov
and
adc
arpl
cmovp
mov
pop
inc
push
adc
outsb
jno
popl
xchg
insl
addl
outsl
cs
adcb
movsl
mov
pop
js
or
push
pop
xchg
jle
jb
fwait
dec
jo
ds
inc
jecxz
scas
sbb
loopne
scas
lea
movsb
xchg
cmpsb
mov
mov
jmp
push
cwtl
andb
std
sub
jle
sub
aas
lahf
out
xlat
fsubrs
popf
mov
cmp
jp
add
lock
ret
mov
add
push
pushf
aaa
rcrl
test
xchg
mov
jmp
xlat
stos
mov
inc
pop
inc
test
jmp
push
lcall
adc
gs
std
mov
pop
xchg
in
mov
pop
nop/reserved
mov
cltd
or
fisubrl
sbb
lcall
gs
push
rcr
pop
pusha
jns
xor
pushf
or
js
jg
dec
cld
or
shlb
jno
fmuls
mov
inc
pop
fcom
mov
inc
push
mov
or
mov
in
fdivrs
insl
lahf
inc
scas
addb
bound
mov
lds
mov
sti
add
inc
ret
sbb
or
mov
sbb
movsb
xchg
lea
mov
mov
xor
lods
cmc
lods
int
pop
into
aam
cltd
pop
testl
lahf
push
insb
mov
mov
add
mov
pop
lcall
inc
test
shll
imul
repnz
mov
sbb
sbb
lods
lods
xchg
cli
out
jns
adc
shll
test
mov
sbb
cmp
mov
lret
xor
mov
sarl
sbb
jecxz
mov
push
xchg
mov
int3
mov
icebp
jmp
rclb
jnp
clc
jb
add
jno
cmp
xchg
adc
xor
enter
push
inc
sub
cmpsb
jnp
jnp
sub
out
or
mov
stc
or
leave
sbb
add
and
hlt
mov
cmpb
sbb
and
add
mov
mov
cmp
jp
add
jle
lret
shrb
xorl
fstps
pop
xor
ljmp
mov
ja
xchg
test
lret
cli
pusha
in
movsl
dec
push
mov
push
fcoms
cmp
xor
mov
push
daa
or
sub
mov
adc
pop
inc
lahf
xchg
fsts
sbb
lret
xor
inc
xor
pushf
jmp
daa
mov
mov
jno
idivl
dec
xor
call
dec
loop
int
or
mov
fcoml
mov
ret
pop
mov
lahf
in
or
mov
sahf
pop
mov
sbb
repnz
push
clc
pushl
imul
and
xorb
inc
xor
shr
push
cmp
je
pop
mov
clc
mov
cltd
push
push
jae
pop
rcll
in
ja
jle
in
sub
push
or
sub
pop
and
sarb
push
fildl
add
loop
mov
pop
jnp
imul
dec
mov
into
arpl
jbe
insl
mov
xchg
test
sbb
push
cmp
and
push
push
jge
dec
shrl
xchg
test
in
fimuls
aad
mov
jmp
push
mov
out
stos
adcb
mov
jmp
inc
mov
push
cmp
aam
fdivrs
insb
jbe
push
sbb
pop
inc
es
lea
fwait
lea
iret
sbb
std
outsb
test
je
xchg
nop
in
aad
push
loopne
shlb
adc
inc
xor
int3
lcall
int
cli
addr16
push
inc
mov
or
jnp
mov
jne
pop
dec
aaa
pop
sub
mov
or
cmc
cld
add
fsubrl
adc
mov
mov
xor
jno
iret
jge
stc
or
clc
mov
addr16
mov
fucomp
fs
mov
shll
je
cmc
pop
add
icebp
sbb
mov
pop
adc
dec
cmpsl
stos
xchg
stos
inc
loop
mov
fs
sahf
int
add
adc
repz
sahf
sahf
xchg
aas
idivb
mov
fmul
jo
xorl
lret
fsubl
clc
jb
je
mov
je
mov
xlat
push
sbbb
test
sub
ja
fistps
sub
mov
data16
pushf
mov
mov
cltd
push
or
leave
sbb
push
shr
inc
cltd
lcall
test
fidivl
mov
inc
inc
mov
mov
into
fiadds
mov
push
int
xor
jnp
mov
xchg
dec
popa
orl
lea
ss
inc
sbb
xor
dec
shll
fcmovu
outsl
sub
mov
addr16
xor
and
cmp
pop
insb
test
inc
inc
lock
mov
scas
xchg
dec
scas
mov
dec
cmpsl
push
hlt
xchg
add
mov
fs
jle
xchg
jbe
lods
fimuls
scas
push
fs
scas
pop
icebp
in
bnd
int3
das
fucomi
stc
or
pop
js
cmp
popf
mov
push
loop
jo
pop
ds
xchg
mov
mov
push
ljmp
stos
jbe
mov
mov
ficomps
andl
cltd
int3
pop
sub
sarb
mov
hlt
add
mov
cmpsb
jb
dec
daa
adc
loopne
pop
gs
adc
mov
test
mov
dec
call
ffreep
imul
fdivl
lar
xor
fwait
in
ja
push
add
cmc
cld
or
mov
lock
int3
addr16
mov
cwtl
fs
sub
xor
lods
push
sub
div
mov
mov
lea
adc
push
lret
pushf
mov
xchg
test
push
pop
outsb
push
inc
sbb
orb
test
and
rcr
xchg
ficoml
scas
dec
fs
mov
dec
inc
fstl
pop
es
jmp
pushf
fsubp
xchg
incl
inc
mov
jl
js
sbb
idivl
repnz
std
pushl
ljmp
jp
sbb
mov
out
push
call
inc
jge
imul
ja
test
es
lea
test
add
sbb
add
andb
js
sbb
cmp
fsubrs
out
cmc
hlt
dec
jb
push
inc
inc
ds
lcall
pop
movsb
cltd
std
pusha
idivl
lds
push
sbb
testl
cltd
adc
mov
pop
lret
addr16
ret
adc
fsubrl
sub
sahf
jp
and
mov
mov
movsb
loope
inc
cli
stos
pushf
mov
push
dec
pop
popf
lret
mov
insl
dec
mov
pop
jb
push
push
mov
push
jne
push
jl
fistpl
mov
arpl
in
subb
cmc
nop
cmp
push
mov
xchg
inc
adc
add
arpl
rclb
add
dec
and
addr16
aam
mov
xor
push
jbe
mov
add
mov
in
push
fidivrs
inc
sbb
pop
sub
or
hlt
jl
out
mov
cmp
adc
or
iret
mov
icebp
pop
mov
lods
xchg
mov
imul
xlat
fidivrl
jl
cmpsl
pop
rcrl
aas
jnp
add
adc
bound
out
sbbl
jg
cwtl
lret
movsl
mov
lds
pop
and
xor
pop
and
mov
fldl
jg
mov
mov
lret
cmpsl
push
jg
insl
mov
jecxz
mov
pop
lcall
jl
cmpsl
push
push
std
lock
les
jmp
mov
jmp
push
lahf
jle
insb
and
or
pushl
xchg
and
or
aas
add
add
popl
xor
lret
or
jle
out
push
push
lods
xlat
push
or
push
pop
pop
pop
stos
pop
xchg
pop
cmp
sarb
fdivs
add
xlat
call
xor
fidivl
sbb
push
hlt
xor
nop
inc
fisttpl
xor
dec
lret
pop
inc
push
loop
lock
or
arpl
mov
cmp
jmp
clc
sti
inc
pushl
mov
sbb
cmp
mov
pop
push
jle
icebp
pop
dec
mov
inc
jmp
or
mov
pushf
push
hlt
mov
fsubrl
adc
mov
mov
xor
cmp
movsb
xor
adc
rcl
inc
fists
in
jecxz
scas
aam
aaa
cmp
jae
les
jge
push
push
dec
cmpsl
adc
add
sbb
icebp
sti
pop
sub
sbb
enter
fstpt
or
sbbl
pusha
xchg
and
or
mov
pop
sub
les
and
bswap
inc
mov
sahf
fidivl
lcall
test
jnp
lahf
outsl
or
aad
push
inc
mov
xchg
mov
or
andb
js
sbb
push
dec
sub
or
and
pop
push
xchg
dec
xchg
adc
loopne
cmp
cmp
mov
add
incl
clc
lret
jecxz
pop
push
mov
cltd
adc
jbe
or
cs
and
sub
mov
xor
dec
pop
rcrb
cli
xchg
jp
push
add
adc
pop
push
addr16
mov
fucomp
movsb
mov
popf
lret
add
or
cmp
adc
cltd
dec
push
adc
dec
mov
xor
add
cmp
ret
lahf
sahf
adc
test
fcompl
js
pop
js
jmp
rorl
clc
jb
lret
xchg
std
and
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
std
mov
push
or
inc
bound
out
mov
flds
adc
cmpsl
mov
add
imul
xchg
stos
out
popf
testl
pop
ss
or
mov
in
push
or
jp
add
lock
ret
mov
add
addr16
lods
icebp
mov
push
pop
jecxz
sbb
mov
stos
test
fidivl
mov
and
dec
jae
sub
repz
fs
daa
mov
jl
ljmp
push
sbb
adc
mov
inc
push
imul
cmp
stos
xor
xor
cwtl
test
lcall
mov
mov
sbb
xchg
adc
dec
sbb
sahf
xlat
rcr
xor
addr16
test
xchg
mov
mov
decb
int3
xchg
fucom
mov
mov
popf
iret
sbb
lea
shlb
enter
add
add
orb
or
mov
clc
mov
jecxz
out
and
cmp
jp
pop
dec
outsb
aaa
push
ljmp
pop
cli
subl
xor
lcall
lods
mov
sbb
push
test
dec
sbb
xchg
out
mov
repnz
idivb
stc
cli
in
test
cmp
sub
mov
or
icebp
test
stos
jbe
outsl
sub
daa
shrb
cltd
popf
sahf
mov
into
xor
fucomi
repnz
push
shlb
adc
mov
pop
ds
mov
sbb
dec
enter
movsb
xlat
xor
mov
pop
fidivrl
out
ficomps
inc
mov
mov
mov
inc
mov
xchg
xor
and
test
push
dec
mov
mov
movsl
push
push
test
call
clc
je
pop
add
cmp
jmp
fcmovb
cmp
and
add
insl
adc
dec
jp
lcall
test
ror
mov
and
push
nop
mov
test
fdivrs
add
scas
mov
xchg
fisttps
jns
mov
popf
lret
jecxz
xlat
insb
xor
addl
daa
or
outsb
cmpsl
sub
popf
xor
cmpsb
push
jne
vsubss
fistl
mov
lock
adc
aad
icebp
jge
mov
iret
call
rol
pop
pop
mov
cmpl
sbb
mov
fwait
push
dec
mov
aad
mov
inc
push
mov
ret
adc
push
fisubl
mov
jl
fwait
lea
iret
add
es
pop
sub
sbb
mov
int
pop
push
push
dec
xchg
sbb
add
sbb
push
xor
mov
adc
inc
mov
ficomps
repnz
sub
add
ja
pop
lods
inc
or
add
cwtl
shll
imul
test
push
push
lods
outsb
jno
je
aaa
jns
data16
xchg
mov
sbb
fldt
pushf
dec
pop
jno
mov
mov
xchg
test
inc
cmp
jae
lods
push
fisubrl
mov
cld
jp
add
sbb
lods
fidivs
jp
sub
pop
dec
fnstcw
fistps
jno
ljmp
sbb
mov
fwait
push
dec
mov
test
dec
aam
fnstenv
push
popf
or
sub
mov
sbb
orl
mov
jmp
std
mov
sti
and
je
jecxz
mov
adcl
xor
dec
pop
pop
add
xchg
hlt
pop
stos
shr
aaa
loopne
jne
dec
movsl
mov
jns
aas
in
and
cmc
sti
mov
mov
mov
ss
add
mov
sbb
mov
jne
fs
movsl
mov
ret
outsb
xor
rorl
ljmp
rcrl
jne
jnp
int
cmpsl
mov
addr16
aam
or
inc
dec
retw
out
jg
lcall
pop
stos
add
jmp
sub
cmpsb
pop
sub
in
pop
xchg
std
push
fucomi
repnz
mov
cmp
sbb
mov
fwait
push
dec
mov
aad
mov
inc
aas
jecxz
cli
xor
or
cmp
inc
and
idiv
les
fstpl
je
clc
pop
inc
gs
dec
push
outsb
xchg
and
mov
xchg
cmp
xor
sbb
xor
repz
ret
mov
xlat
mov
cmp
mov
mov
cltd
je
mov
cli
jg
pop
dec
jno
mov
mov
pushf
das
xor
jns
sub
cmp
sub
cmc
sbb
repz
loopne
sti
mov
xor
hlt
lea
xchg
adc
cmp
pop
pop
scas
dec
fs
jle
jp
loope
cltd
lods
inc
sbb
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
mov
inc
sarb
dec
mov
jns
or
sarl
xor
adcl
or
fwait
cmpsb
fdivr
jmp
lea
aam
lock
ljmp
loopne
xlat
call
cltd
cwtl
add
cmp
je
test
cmpb
push
lret
sbb
in
pop
push
int
jg
dec
cmp
in
and
xor
or
mov
or
jp
add
cli
ret
ret
mov
add
push
pushf
rcrl
test
xchg
mov
jmp
xlat
stos
mov
adc
lds
push
repnz
fldt
loop
arpl
mov
jo
nop
dec
mov
dec
xchg
or
fisubrl
sbb
lcall
cmp
lds
lret
cld
fistps
test
scas
decl
mov
xchg
sahf
xchg
andl
mov
sub
push
or
les
cltd
xor
push
sub
cmpsb
fsubrs
jmp
mov
sbb
fwait
iret
sbb
xor
pop
inc
gs
dec
push
outsb
xchg
and
mov
xchg
cmp
xor
sbb
cmp
pop
mov
mov
xlat
mov
cmp
mov
mov
cltd
je
mov
cli
jg
pop
dec
jno
mov
mov
pushf
das
xor
jns
sub
cmp
sub
cmc
sbb
repz
loopne
sti
mov
xor
hlt
lea
xchg
adc
cmp
pop
pop
scas
dec
fs
jle
jp
loope
cltd
lods
inc
sbb
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
sti
inc
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
xchg
out
xor
and
fcmovnu
fldcw
daa
arpl
outsl
or
jne
push
adc
inc
sub
inc
inc
mov
dec
inc
pop
pop
dec
dec
lea
push
dec
add
mov
mov
pop
ljmp
cmp
add
ja
push
lahf
lahf
lret
jecxz
imul
dec
cmp
inc
movsl
xchg
sub
pushf
ret
pop
lahf
dec
test
jp
inc
push
nop
push
mov
jp
push
push
fldenv
push
xchg
fisttps
ret
jo
fnstenv
dec
inc
cs
sbb
adc
mov
insb
sub
mov
sbb
sub
movsb
aad
xor
xor
cwtl
iret
push
je
xchg
jo
movsb
cltd
xor
outsl
sbb
mov
adc
xchg
pop
lret
repz
addr16
les
push
jmp
scas
pop
jns
fsubl
jo
fdivl
cltd
lea
aad
add
int3
cmp
or
cmp
xchg
sub
push
dec
dec
jmp
popa
imul
inc
cmc
and
lods
neg
adc
inc
mov
mov
sbb
push
jo
inc
out
sbb
jmp
xor
cltd
add
mov
sbb
inc
adc
mov
jg
adc
ret
insb
mov
lret
inc
std
stos
dec
sbb
dec
stos
push
stos
sub
ljmp
stc
cli
in
test
or
adc
add
nop
in
sbb
jo
movsl
sbb
jl
fistpl
pop
nop
sub
mov
xchg
sti
lret
icebp
fabs
cmp
xlat
cld
add
inc
adcl
sub
addl
mov
outsb
mov
dec
les
imul
mov
mov
or
pop
fdivrl
xor
cmpl
jb
sbb
and
inc
push
xchg
pop
dec
xor
push
adc
inc
mov
mov
rolb
mov
inc
sahf
cmp
push
mov
mov
adc
cmp
mov
sub
pushf
ret
pop
jl
test
jp
inc
push
nop
push
mov
jp
push
push
jp
push
and
out
dec
push
xchg
fisttps
test
ret
fnstenv
or
lcall
sbb
adc
ss
and
sub
mov
sbb
sub
movsb
aad
xor
xor
mov
int3
xor
aad
xchg
jo
movsb
cltd
xor
outsl
sbb
mov
adc
xchg
pop
lret
repz
or
les
push
jmp
scas
pop
jns
fsubl
jo
fdivrl
in
sbb
jne
dec
add
int3
cmp
or
cmp
xchg
sub
or
in
jle
inc
rcl
jo
test
ljmp
sbb
incl
xchg
fimuls
adc
pop
adc
ret
ret
lock
inc
sbb
inc
sub
mov
inc
pop
cli
rorb
hlt
test
pop
enter
mov
sbb
fs
sub
cmc
sbb
push
rol
adc
out
outsb
cltd
lcall
xchg
ret
dec
xlat
push
pop
xchg
pop
dec
mov
ja
dec
movb
leave
jns
lret
inc
scas
fidivrl
jbe
lods
arpl
cmp
jp
mov
push
mov
scas
jg
mov
xchg
sub
and
sbb
mov
fwait
push
dec
mov
mov
sub
repz
outsl
push
mov
fisubs
repz
fnsave
sbb
and
std
mov
push
idiv
cwtl
fwait
lea
xor
jg
inc
hlt
rolb
inc
mov
addb
sbb
inc
sub
xor
test
call
mov
iret
nop
sti
pop
adc
rcrl
mov
add
ret
mov
iret
inc
aas
lret
into
into
cmpb
adc
iret
iret
rcrb
jne
enter
loop
jne
leave
iret
inc
fucomip
sub
lret
call
xor
lret
iret
sar
cmp
mov
add
or
or
or
pop
xor
or
sbb
fstps
mov
rol
inc
mov
rol
xchg
mov
stos
fadd
add
push
xorl
push
inc
and
sbbb
mov
mov
shll
add
movsl
lahf
add
movsb
sbb
mov
cmpsl
pushf
add
lds
pop
cmpsb
adc
loope
cmp
aas
add
push
jg
sub
and
mov
std
daa
mov
test
or
jl
push
pusha
push
push
in
lcall
ds
jne
in
mov
cmp
jnp
ja
pop
shll
sub
mov
add
jbe
mov
dec
pushf
in
inc
nop
xlat
stos
rol
sbb
movsl
sahf
andb
jp
jmp
mov
icebp
add
adc
jae
mov
ret
test
xchg
or
imul
mov
roll
adc
sbb
jnp
sbb
faddl
sbb
pushf
dec
stc
sub
cmp
ffree
inc
cmp
faddp
test
ffreep
les
cltd
xor
popf
shll
inc
fnstsw
test
test
add
mov
add
inc
dec
cltd
push
fimull
lahf
int
jle
push
sbb
ret
bound
lock
sub
imul
mov
int
xor
lds
mov
jne
add
pop
xor
xor
pop
aaa
mov
cmc
arpl
in
inc
cmp
and
jnp
sbb
and
cld
movsl
js
les
mov
mov
xor
outsb
cltd
lcall
xchg
ret
dec
xlat
push
pop
xchg
pop
dec
mov
ja
int3
movb
leave
jns
dec
inc
scas
fidivrl
jbe
lods
arpl
cmp
jp
mov
pop
mov
mov
xchg
sub
and
sbb
mov
fwait
push
dec
mov
mov
sub
repz
outsl
push
cli
push
fisubs
repz
loope
and
cmp
and
std
mov
push
ret
stc
sti
mov
jne
and
cmp
xchg
and
jge
les
xchg
adc
xchg
push
out
xlat
adc
ret
dec
push
mov
pop
sbb
pop
adc
push
add
cld
xchg
leave
imul
xor
inc
mov
ss
add
leave
dec
sbb
mov
mov
pushf
call
in
jnp
push
ss
add
ss
lea
ss
inc
arpl
push
ss
lea
cmp
rcl
sub
xchg
ret
test
imul
sahf
mov
inc
mov
mov
pusha
mov
dec
sub
lods
mov
ret
or
repnz
loop
nop
adc
repnz
adc
cwtl
adc
stos
aam
mov
jnp
inc
push
mov
or
shll
out
stos
fcom
pop
fisubl
pop
jae
gs
jb
sbb
divb
jle
test
addl
out
push
and
adc
cltd
xor
jle
imul
inc
cmc
dec
pop
jmp
inc
mov
mov
xor
adc
movsl
mov
jp
add
lods
inc
sub
add
pop
mov
sub
or
pop
mov
sub
or
push
mov
sub
push
mov
sub
push
mov
repnz
hlt
cmp
and
arpl
xor
test
pushf
xor
test
arpl
sbbb
inc
mov
cmp
stos
test
pusha
mov
call
and
lods
sub
ret
or
repnz
sub
scas
test
adc
mov
in
cmp
mov
mov
sub
repz
outsl
push
into
push
fisubs
repz
inc
insl
pushl
sbb
and
std
mov
push
ret
fdivr
mov
jne
and
daa
je
clc
test
es
hlt
sahf
sub
fwait
push
jecxz
mov
jb
stos
sbb
push
sub
pop
stos
mov
mov
andb
cld
ret
or
mov
adc
lret
lahf
lret
jecxz
gs
mov
add
mov
or
mov
adc
mov
sbb
movsb
push
mov
jecxz
jns
movsl
pop
repz
cmpsb
lahf
xor
xor
cmpsl
lahf
jae
jecxz
or
xchg
ret
mov
lret
mov
rolb
lods
mov
ficoml
push
loop
adc
es
adc
inc
loop
sbb
loop
and
daa
xor
adc
cmpsl
xchg
adc
xor
xchg
pop
mov
rorb
push
enter
int3
cwtl
mov
cmpsl
dec
pop
shll
pop
cmpsb
ret
adc
bound
jg
mov
call
xchg
and
dec
push
inc
mov
lea
cmp
ds
pusha
push
push
in
lcall
ds
jne
in
xchg
inc
cmp
fiaddl
ja
pop
shll
push
ret
fucomi
dec
sbb
gs
mov
in
popa
testb
dec
rorb
lds
mov
test
mov
lahf
jp
fs
rcll
out
cmc
lret
pop
pop
sub
stos
sub
aaa
inc
pop
jne
sbb
sahf
dec
mov
dec
jno
add
into
jno
adc
dec
jno
and
iret
mov
xor
dec
xor
push
aam
enter
push
lret
dec
repnz
push
into
push
leave
repnz
push
rcr
cmp
ret
test
fcomp
lret
xchg
adc
fdivr
dec
mov
movsl
adc
fcomps
adc
inc
inc
shlb
pusha
push
shrb
add
in
lds
out
jo
push
sub
mov
call
dec
ret
loop
mov
rcr
mov
int
adc
fidivl
mov
lea
add
xor
xor
shlb
mov
or
cmp
sub
cmp
cmp
jae
mov
stc
cli
in
test
or
in
rolb
stc
nop
in
sub
pushf
push
sub
cmp
sbb
cs
pop
mov
jecxz
inc
sbb
lock
icebp
xchg
xchg
pop
popf
scas
inc
add
repz
sbb
int
sub
jecxz
sub
fstpt
sbb
and
xor
sbbl
cs
inc
leave
pop
cmpsl
ret
lea
fwait
dec
cltd
enter
enter
test
inc
mov
dec
inc
dec
stos
cwtl
add
arpl
bts
inc
in
pop
push
shrl
subl
pop
inc
scas
fwait
add
pop
add
fwait
inc
arpl
fisubl
add
mov
or
mov
adc
mov
sbb
movsb
sahf
addl
sahf
ret
and
cmpsb
sahf
add
xor
cmpsl
pop
inc
arpl
add
es
cmp
test
andl
jge
add
mov
xor
stos
int
pusha
mov
dec
ret
enter
int3
andb
dec
inc
shl
and
scas
lret
add
loop
push
adc
call
andl
mov
aam
mov
jnp
inc
push
mov
or
shll
out
stos
fadds
jae
gs
jb
sbb
divb
jle
test
addl
hlt
xor
xchg
enter
jne
cmp
xor
mov
dec
sbbb
push
xchg
adcb
rcr
xchg
fwait
adc
and
mov
clc
iret
scas
fwait
adc
imul
add
mov
inc
sbb
cmpsl
mov
cmpb
imul
enter
xchg
and
leave
int3
inc
lahf
cli
sub
lret
ffreep
xor
lret
into
rcrl
roll
xor
add
sbb
or
and
add
sub
adc
pushf
push
loope
mov
les
mov
lds
mov
mov
mov
and
jae
sub
pop
mov
jge
xchg
jns
ficompl
popa
and
clc
adcl
mov
sbb
jb
sbbl
int
and
lds
mov
fnsave
mov
cmc
jno
mov
in
insl
sub
movsl
imul
pop
mov
test
xor
mov
lret
jecxz
push
cwtl
aaa
rcr
and
mov
mov
and
cmpsl
mov
nop
pop
mov
enterw
jno
les
jno
dec
push
cli
mov
fistps
add
ljmp
sar
pop
pop
lock
fs
dec
mov
cli
jge
push
push
mov
lret
xchg
fwait
adc
cmp
sbb
sbb
jnp
mov
shr
mov
pop
loope
cmp
adc
jle
orb
cmp
mov
adc
jns
sub
stc
repnz
ljmp
int
int
cmp
jne
mov
or
add
clc
into
dec
adc
adc
add
xor
push
adc
xchg
and
mov
test
js
test
or
aas
lea
push
lods
sbb
mov
adc
add
pop
pop
iret
adc
sub
fcom
mov
cmp
ss
dec
fcom
lret
mov
and
jg
sub
repz
or
popf
jecxz
jge
cmp
fucomp
jae
pop
hlt
test
imull
cmc
repz
pop
xor
sbb
inc
sbb
or
cmp
or
xor
fs
scas
push
lret
pop
test
push
mov
rcrl
fcmovnb
js
jle
ficomps
out
js
inc
cmp
dec
std
adc
pop
or
sub
pop
jecxz
pop
fidivrl
xchg
ficoml
pop
xchg
lahf
call
jns
fidivrl
fistps
mov
aas
js
xor
enter
lcall
bound
hlt
je
xchg
shrl
pop
cmp
mov
ret
pop
jg
pop
test
mov
mov
mov
test
pop
fucomip
jl
test
mov
sub
mov
in
ja
pop
rcrl
es
enter
mulb
or
fwait
and
mov
sbb
dec
or
lret
stos
jae
mov
stc
cli
in
test
cmp
dec
jns
mov
or
add
sbb
shll
inc
add
fstl
test
mov
jno
aad
jmp
scas
pop
mov
jge
lds
push
shlb
into
gs
ljmp
loope
push
pop
mov
jmp
xchg
adcb
pop
cmp
cmp
dec
jge
mov
xchg
fmulp
mov
shlb
inc
and
addr16
pop
les
sbbb
cs
ret
addr16
mov
out
adc
sub
mov
imul
fwait
mov
inc
mov
loope
adc
push
test
int
ret
sbb
aas
push
or
sbb
lret
movsl
mov
pushf
jecxz
cli
xlat
xchg
int3
dec
pop
stos
fsubr
lods
push
dec
mov
push
iret
mov
sbb
fsub
shll
test
ret
mov
xchg
add
mov
jp
sub
sub
push
sbb
adc
shlb
mov
ficoms
jnp
inc
mov
add
mov
fwait
push
dec
mov
xor
pop
mov
test
adc
cmpsb
mov
fwait
dec
fsubs
pop
fisubs
cmp
in
mov
xor
mov
and
and
out
push
and
jmp
or
imul
cltd
push
mov
adc
add
inc
loopne
repz
cmp
lea
jl
jbe
pop
sbbl
and
loop
jb
mov
mov
dec
sbb
jne
rcrl
add
ljmp
ljmp
sbb
test
xchg
ficoml
cmp
xchg
stos
jge
jns
push
jb
xor
sbb
ss
push
pushf
cmp
in
push
movl
imul
mov
pusha
mov
imul
cmp
pop
fldt
insl
mov
xor
push
aas
fwait
lret
in
mov
mov
sub
push
cmpsb
outsl
lret
enter
mov
int3
fsubl
push
push
cltd
add
movsb
lock
dec
sahf
dec
mov
lcall
cmp
loopne
mov
repz
sti
pop
adc
or
xchg
xor
pop
int
inc
pop
fimull
lret
inc
xchg
push
jbe
and
int
ret
popf
sti
pslld
mov
and
lds
jge
inc
mov
mov
pusha
stc
fstps
push
pushf
dec
shlb
mov
fs
movsl
add
or
xor
jb
fcoml
mov
into
jno
pusha
jmp
popf
in
icebp
fxam
xor
jmp
mov
in
cmp
mov
cmpsb
sbb
and
jp
sbb
xchg
mov
ret
iret
cmpsl
ret
or
push
add
add
mov
hlt
js
cwtl
adc
aaa
lds
or
das
int
imul
lret
dec
mov
repnz
xlat
fwait
add
iret
add
pop
scas
bound
jecxz
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
lret
movsl
mov
mov
repz
mov
test
inc
mov
std
dec
jae
fldt
arpl
cmpsl
insb
mov
mov
xchg
dec
out
jnp
xchg
dec
fwait
shrl
ficoml
xchg
push
xchg
mov
xorb
pop
aaa
test
and
cmpsl
lods
jmp
popf
fisubs
sti
addb
leave
loop
mov
fistl
or
pop
lea
mov
mov
xchg
test
shrb
inc
outsl
cltd
js
add
js
and
shl
call
cmpsb
inc
cltd
shlb
cltd
das
xchg
enter
cmp
push
scas
int
imul
pop
dec
mov
into
test
scas
icebp
fistl
xchg
repz
mov
in
std
sti
mov
jmp
gs
mov
inc
add
jo
f2xm1
clc
adc
jl
pop
shl
test
in
ret
pop
jbe
sbb
xchg
jae
push
mov
stc
rclb
sub
into
dec
mov
enter
mov
repz
mov
jno
add
lahf
xchg
mov
push
sub
cmp
test
sbb
mov
sbb
aam
sub
and
test
inc
out
fnstenv
push
sahf
or
adc
clc
sbb
clc
pminub
mov
mov
outsb
xchg
mov
cmc
add
in
shl
lods
push
insb
adc
int3
pop
or
and
mov
movl
mov
das
push
rolb
xor
add
dec
cltd
push
es
subb
inc
mov
mov
sti
in
test
test
call
fdivrs
add
mov
or
xchg
enter
add
adc
pop
sub
std
mov
leave
add
fcompl
dec
movsl
mov
mov
ss
push
movsb
sahf
mov
clc
imul
cltd
pop
fimuls
mov
lcall
fbstp
pop
popf
leave
lret
push
cmp
jo
push
dec
sbb
or
inc
clc
xchg
dec
push
imul
scas
push
pop
sbb
negb
jmp
adc
adc
jp
adc
jp
divl
or
pop
or
add
add
daa
sbb
inc
aaa
adc
inc
sub
adcl
stc
add
dec
lds
icebp
xchg
xor
mov
mov
outsb
ss
ja
push
push
push
mov
ficompl
inc
movsl
std
cmp
lret
pop
push
inc
in
scas
sbb
fcomps
pop
movsl
inc
mov
push
adc
mov
adc
add
add
cld
pop
lahf
pop
push
aad
cld
outsb
inc
rclb
in
stos
ret
sub
xor
xchg
imul
mov
xchg
pushf
into
jmp
stc
jnp
out
xchg
and
mov
shll
adc
mov
mov
addl
and
push
inc
loopne
mov
popa
lock
roll
rorb
gs
ret
mov
je
jecxz
inc
inc
shr
cmp
sbb
out
xor
mov
xor
aaa
cmp
inc
pop
lea
add
cmp
fs
mov
mov
ds
xor
push
and
xor
stos
loope
fstl
xlat
sbb
test
push
mov
sub
mov
jb
inc
rol
rorb
push
hlt
mov
rcrl
xor
mov
enter
push
push
push
rclb
sub
sub
ja
push
les
jmp
xchg
int3
hlt
outsl
pop
dec
subl
dec
mov
xlat
mov
sbb
fldcw
inc
dec
and
mov
inc
addb
int
xchg
dec
scas
lret
add
mov
sbb
push
xchg
hlt
popa
clc
shrl
stc
jae
adc
dec
lcall
stc
bnd
xlat
push
mov
push
imul
push
and
out
add
dec
neg
jb
inc
subl
cltd
jb
data16
fs
mov
mov
or
ss
push
ret
fldlg2
cld
push
pop
pop
sub
inc
fst
cmp
cmp
add
jl
rol
nop
aad
push
or
jne
repz
mov
in
pop
fcomi
mov
dec
mov
pop
dec
mov
aas
push
or
test
pop
or
pusha
stos
aad
jne
add
cwtl
xchg
lret
hlt
xchg
dec
fwait
jg
fcomip
subb
cmp
icebp
dec
push
repz
stos
mov
rep
andl
hlt
mov
ret
js
js
push
xor
and
arpl
mov
mov
sbb
lret
aad
mov
ds
cmpsl
insb
or
jmp
ret
popf
dec
mov
out
sbb
push
sub
mov
repz
shll
ror
and
faddl
out
cmpsl
jg
jb
inc
aad
adc
push
ret
pop
pop
push
daa
inc
pop
or
xor
sbb
in
jb
pop
sbb
lock
inc
adc
jg
jnp
add
pop
test
mov
sub
mov
jmp
sub
sahf
in
mov
dec
jl
inc
outsl
movsb
add
cmp
or
add
icebp
aam
inc
push
and
cmpsb
cld
jno
roll
dec
in
jnp
adc
mov
and
mov
sarb
inc
scas
mov
testl
les
xchg
mov
mov
jl
add
jb
imul
push
push
or
jl
jecxz
jnp
enter
lahf
jnp
mov
ja
xchg
mov
push
cmc
ds
les
push
aas
test
andl
sarl
xchg
andl
mov
sub
xchg
add
lahf
popl
pop
mov
xchg
iret
popf
iret
out
or
sub
sub
je
roll
lods
outsb
stos
mov
mov
cmpl
pop
or
repz
pop
scas
ret
loopne
inc
mov
clc
sti
jno
lret
push
shll
lods
pop
push
cmp
xor
sti
sub
add
scas
mov
shrb
imul
out
jge
add
mov
in
lds
pop
add
jmp
movsl
mov
pop
test
lret
cmp
mov
dec
add
cld
test
dec
leave
lods
or
ds
outsb
push
mov
fistl
lds
test
popf
pop
adc
add
lock
cwtl
xchg
mov
xchg
and
repnz
andl
paddq
mov
ljmp
data16
jl
sbb
cmpsb
ret
or
inc
inc
rorb
ss
imul
shll
stos
fs
cltd
out
nop
in
mov
inc
jle
insb
dec
mov
mov
dec
lods
push
sub
fisubrs
daa
jmp
push
cs
mov
cmpsb
pop
repz
je
test
add
xor
add
mov
shrb
test
scas
mov
stc
int3
outsb
leave
sbb
sub
adc
lds
sub
lds
add
mov
and
sbb
in
gs
mov
xor
dec
inc
imul
sbb
jp
mov
jns
int3
lret
and
in
add
test
frstor
js
dec
cmp
push
mov
sbb
or
inc
fwait
sbb
repz
por
and
js
sbb
out
in
rcl
jno
and
push
and
xchg
pop
js
inc
outsb
test
mov
sahf
jnp
outsl
outsb
add
filds
cmp
jecxz
fbstp
sbb
out
mov
inc
mov
lret
test
xor
repz
test
je
xor
ret
fsubrl
jg
enter
xchg
hlt
cmpsb
out
orb
xor
lock
or
sub
std
cmp
sbb
scas
fsub
leave
aaa
fiadds
mov
and
mov
inc
sub
mov
scas
pop
xchg
pusha
jmp
sbb
pop
jns
pop
sub
addb
imul
adc
mov
shr
mov
inc
lcall
idiv
loope
jecxz
mov
lds
in
insb
jp
mov
jecxz
pop
sti
in
adc
xlat
or
push
xor
dec
and
xchg
and
mov
rcll
sub
add
pop
or
push
inc
test
sbb
cmpl
sub
adc
jo
js
sub
test
and
mov
fsubr
xor
sahf
shll
sub
nop
in
jo
addr16
push
xchg
lods
adc
out
sti
mov
jecxz
andl
mov
bound
rolb
test
hlt
mov
rclb
and
pop
pop
and
push
dec
push
test
push
mov
and
cltd
push
lret
add
push
pop
outsb
pusha
inc
fsubrl
jns
adc
xchg
cs
xchg
fldcw
push
addb
mov
pop
stos
ja
ret
and
inc
push
xchg
rolb
mov
mov
test
pushf
test
mov
popf
jg
ret
lock
sti
test
fcmovne
add
bound
fcoms
inc
inc
movsl
gs
xchg
jno
jle
test
push
movsb
jmp
mov
mov
aad
sbb
xchg
ficoms
and
shl
push
and
cmpxchg
inc
sub
push
dec
int3
lods
mov
popf
je
mov
out
sub
mov
pop
jne
pop
mov
aad
leave
stos
push
scas
mov
dec
lahf
in
pushf
add
cmp
and
cwtl
mov
outsb
mov
lods
adc
lahf
push
cmp
lret
movsl
mov
scas
sti
xor
lret
or
or
test
outsl
mov
pop
pop
sbb
lods
mov
jmp
mov
aad
xor
pop
mov
aas
mov
in
stos
mov
call
push
lods
lock
es
push
aad
and
shl
inc
ljmp
or
mov
andl
cli
pop
ds
jno
out
cwtl
shll
push
sub
pop
push
lret
sbb
mov
ja
dec
pusha
sbb
mov
fwait
lea
or
test
dec
inc
les
xchg
jle
xor
into
jmp
lret
dec
lods
insl
fwait
xchg
mov
cmpsl
fwait
repz
mov
sti
mov
mov
and
sahf
outsl
xchg
jmp
sahf
add
jg
pop
push
ds
and
jnp
cmpsb
add
scas
xor
push
xor
sti
adc
add
test
lret
ffreep
pop
cmp
repnz
aad
xor
les
imull
sub
insl
and
idivb
iret
ja
xchg
jns
int3
lret
mulb
inc
xchg
out
sub
jp
mov
sub
xchg
inc
mov
pop
fiadds
loope
mov
test
xlat
mov
mov
popl
sbbb
adc
in
add
imul
fstps
enter
jmp
xor
clc
scas
rorb
lods
pop
fsts
jp
jns
xchg
ljmp
sbb
mov
or
icebp
push
imul
or
mov
inc
cmp
jo
arpl
add
mov
repnz
xor
jecxz
clc
test
sbb
pop
dec
or
mov
cmpsl
mov
aam
fbstp
mov
stos
clc
add
shrl
fstpl
dec
bound
mov
mov
icebp
mov
test
push
loop
aaa
sub
lcall
aam
mov
lahf
arpl
lcall
push
lock
and
das
mov
add
fmuls
rorb
pop
lea
cltd
push
adc
jne
subb
movsl
mov
xchg
mov
pop
inc
cmp
jae
insl
dec
add
adc
cmp
or
icebp
sub
xchg
xor
pop
mov
or
sub
mov
mov
jmp
add
pusha
push
xchg
mov
stos
sahf
inc
dec
call
pop
add
jnp
mov
in
fstps
add
leave
inc
jg
fadd
mov
call
pop
push
leave
push
add
imul
mov
lcall
test
mov
jl
sbb
inc
test
mov
xchg
fisttpl
outsb
add
or
cmpsl
push
cmc
adc
xchg
push
mov
ret
cmp
arpl
sub
fsts
xchg
inc
add
cmp
adc
push
inc
add
mov
cmp
in
jno
sub
xchg
mov
pushf
mov
xor
pop
movsb
sti
imul
push
mov
sbb
xor
les
out
push
hlt
cmp
hlt
clc
mov
fsts
in
xchg
push
fildll
sti
push
test
mov
inc
cmp
ds
pop
cltd
push
mov
enter
cwtl
ret
mov
sbb
leave
sbbb
nop
loope
popf
pop
fs
xor
stos
dec
dec
lret
arpl
xor
test
push
push
pushf
out
inc
mov
cli
sub
fs
push
adc
mov
in
jl
rcll
lret
add
mov
cmc
test
mov
sub
jbe
fucomi
in
stos
jge
inc
fbld
test
ret
cmpsl
repz
add
inc
xor
sbb
add
aam
fwait
iret
cwtl
inc
movsl
fnstcw
ret
xor
ret
fwait
lcall
inc
sbbl
pop
sbb
adc
divl
frstpm(287
push
shl
pop
xchg
or
push
inc
or
xor
dec
inc
mov
cmpb
lret
mov
push
hlt
dec
jo
jo
mov
test
adcl
mov
imul
add
and
push
push
nop
push
outsb
dec
add
fildl
mov
gs
or
lods
push
mov
hlt
mov
sahf
sub
and
mov
sub
add
mov
fucomp
fs
movsl
outsb
pusha
dec
call
cld
or
in
xchg
sbb
jo
mov
scas
mull
cmp
adc
push
jnp
mov
pusha
cmp
outsb
out
cmp
push
inc
fwait
out
push
inc
mov
pusha
add
xchg
loope
popa
pushf
push
push
sub
imull
and
pop
loop
mov
mov
pop
push
push
mov
inc
sbb
es
jmp
adc
add
and
dec
mov
xor
jb
jo
or
cmpsb
ficoms
inc
adcb
inc
adc
lcall
andl
fists
sti
aas
psubusb
hlt
xor
cltd
mov
jbe
add
and
adc
mov
leave
mov
mov
pushf
ret
mov
mov
test
mov
das
ljmp
mov
movsb
les
jo
sub
das
sbb
sbb
jbe
pop
push
mov
jns
inc
pop
mov
in
roll
lahf
mov
leave
in
stos
jg
pop
fsubr
icebp
xor
sub
jl
mov
sbb
neg
inc
pop
dec
mov
je
mov
adc
movsb
cli
jg
inc
outsb
lahf
inc
repz
and
jl
daa
ret
fld1
mov
add
popa
gs
out
outsl
pop
hlt
mov
xchg
mov
and
mov
pop
add
adc
push
test
xor
bound
pop
mov
inc
imul
mov
sahf
add
dec
sbb
call
mov
cld
test
sbb
fsubrl
int
inc
sub
cmp
push
vandnps
sbb
and
stos
mov
in
jae
das
sbb
xor
or
mov
pushf
das
sub
addr16
lods
stos
mov
std
call
xchg
fstpt
and
inc
mov
jmp
cltd
lret
mov
xchg
and
popa
or
jl
aas
jo
dec
sar
adc
out
test
mov
gs
je
or
jo
movsb
inc
add
mov
xchg
jle
clc
rcrb
cmp
stos
leave
gs
mov
xchg
or
xchg
enter
je
or
int
repnz
sahf
jecxz
mov
sub
js
je
stos
rcr
pop
pop
adc
addr16
lret
loope
fstl
addb
push
ret
hlt
mov
imulb
cltd
push
xor
sti
xchg
mov
mov
hlt
test
fsubrp
les
fs
clc
stos
in
jnp
mov
or
and
sub
mov
shrl
jae
add
sbb
popa
add
pop
add
fsubrs
sbb
push
fwait
pop
and
cmpsl
push
sub
mov
push
inc
push
lods
pop
cmp
sti
add
cli
jo
dec
cwtl
js
fisttpl
add
adc
pop
repnz
add
sbb
outsb
mov
lods
iret
aam
pop
inc
lock
lret
aad
lahf
stos
dec
xor
scas
fistpll
bound
pop
add
push
sbb
mov
aaa
pop
mov
stc
hlt
outsl
fcomps
dec
aas
shrb
mov
popf
icebp
adc
push
sahf
sub
jp
je
mov
imul
jg
repnz
fwait
mov
jecxz
les
cld
into
lret
mov
cld
nop
jbe
ret
push
sbb
sbb
addr16
rcrb
mov
int3
jnp
dec
dec
lret
mov
lret
xchg
lret
sbb
in
out
test
movsl
daa
add
and
fisubrl
addb
lcall
popf
sbb
sbb
rclb
rorb
cmpsb
test
sub
xchg
leave
lret
pop
test
nop
inc
push
scas
inc
cld
repnz
movsb
test
mov
push
nop
cmp
inc
inc
sbb
std
and
or
sub
lock
mov
pop
int3
mov
sahf
xchg
sti
jecxz
pop
ret
mov
rcll
or
vmovaps
sbb
push
fsubs
dec
mov
xorl
xor
or
jb
rolb
jecxz
ja
mov
adc
repz
jae
pop
mov
cmp
stos
push
test
cltd
jg
lahf
in
clc
add
mov
push
ljmp
sbb
add
jno
adc
clc
daa
cwtl
lret
inc
sbb
xorb
ss
sub
mov
sub
int
les
dec
dec
jnp
push
fs
xchg
dec
mov
add
mov
or
shll
clc
frstor
push
sub
pop
push
mov
jmp
fsts
jmp
jg
mull
push
cmpsl
add
or
fisubs
dec
dec
mov
and
or
add
pop
mov
jle
shrl
push
test
ret
nop
js
xchg
sbb
dec
pop
xor
in
rcr
iret
cmpsb
inc
shll
jle
and
cmpsb
jnp
add
sub
imul
sahf
mov
sub
dec
mov
lahf
inc
adc
add
push
xor
cmpl
xor
pop
sbb
mov
nop
cld
lds
leave
mov
in
xchg
leave
fsubl
sbbl
mov
pop
test
call
mov
scas
mov
testl
shll
fldl
mov
and
pop
or
xor
stos
cmp
dec
sub
rclb
jns
mov
mov
mov
jl
dec
test
cs
jmp
popf
scas
jg
icebp
add
inc
fdivrl
add
xor
add
mov
fwait
push
pop
fistl
add
imul
js
jp
mov
xor
inc
and
cmp
sbb
outsl
mov
das
and
aad
mov
ss
das
in
aam
mov
ret
loopne
sub
pop
stos
nop
mov
mov
lahf
lret
in
mov
or
mov
lock
mov
mov
dec
hlt
imul
out
pushf
les
push
xchg
cmp
jne
inc
sahf
sbb
xchg
push
xlat
and
xor
ds
in
fbstp
hlt
push
xor
addb
push
fwait
push
pop
test
mov
adc
test
mov
and
in
mov
stos
push
sbb
pop
jmp
sbb
outsb
and
xlat
pop
shlb
or
dec
add
in
rcr
mov
adc
xor
jnp
gs
repz
sbb
pop
mov
outsl
dec
out
cltd
cwtl
enter
jo
sub
daa
push
hlt
sbb
sub
or
push
inc
int
jb
jecxz
stos
mov
bound
push
adc
pop
movsb
xchg
pop
insb
jno
mov
ret
call
rcll
popl
cmpsl
rorl
imul
sbb
fcoml
out
dec
movsl
mov
idivb
sbb
add
sub
pop
push
pop
mov
adc
mov
sahf
das
fiadds
fcoms
mov
push
and
cmp
mov
xchg
add
loop
sub
pop
xchg
fisttpl
cltd
lods
jno
aaa
pusha
push
dec
xchg
push
lcall
insl
js
xchg
loope
xchg
loope
and
fbld
mov
mov
adc
push
cmp
or
scas
jle
fidivrl
sub
les
sbb
imul
ret
fnstenv
inc
test
sub
sbb
push
inc
pop
pop
lcall
clc
popf
jbe
dec
adc
push
adc
push
inc
sbb
sub
xor
fnstsw
bound
xchg
dec
shr
movsl
inc
arpl
in
and
push
jo
cwtl
pop
lret
std
je
and
xchg
and
push
mov
cltd
xor
iret
cli
cmp
dec
adc
iret
je
dec
inc
imul
pop
jb
cmpsb
rorb
sbb
and
scas
mov
add
rorl
xchg
xchg
imul
pop
cmc
insb
or
pop
xor
shll
push
es
outsl
sub
js
or
and
mov
mov
sub
or
scas
inc
dec
or
mov
or
fmuls
cmp
andb
je
cmpsb
or
popf
push
rcr
movsb
inc
inc
mov
inc
pop
fidivrl
mov
lret
mov
and
xor
mov
jb
pushf
jmp
push
adc
push
add
pop
mov
jbe
lea
xor
mov
fsubrl
cmp
sti
cmp
dec
lahf
in
nop
add
pop
pusha
lret
dec
add
xor
jg
and
iret
push
mov
nop
and
adc
mov
imulb
shl
iret
sbb
loop
pop
fucom
stc
push
pop
into
mov
sbb
test
inc
cmp
leave
stos
jne
dec
xchg
dec
mov
jae
cmp
lds
scas
jnp
test
in
aad
mov
enter
cmpsb
ffreep
enter
mov
test
ja
and
es
push
dec
push
sub
dec
popa
xchg
cli
scas
dec
fdivr
mov
aam
ret
subl
aad
mov
and
mov
mov
cwtl
aas
fld
ror
inc
mov
rcrb
les
mov
test
adc
push
add
mov
int
aaa
mov
and
dec
cmpl
push
sbbb
jbe
scas
xor
out
pop
cli
add
mov
pushf
and
es
stos
adc
adcl
push
hlt
stos
lret
subl
mov
mov
fwait
push
and
rorb
lods
iret
enter
fwait
shll
les
adc
arpl
pop
dec
ja
add
jmp
inc
and
imul
push
xor
imul
adc
arpl
aad
xor
fcoml
push
mov
or
rcr
loope
or
xor
xchg
dec
movsl
ret
sub
inc
mov
jle
inc
popf
sub
cmp
movb
mov
mov
addr16
enter
enter
stc
jb
aad
ret
fsubrs
jge
dec
mov
mov
fbld
dec
loopne
and
and
pop
and
or
neg
test
mov
pop
les
sbb
add
call
cmpsb
xchg
fisubl
sbb
sub
and
dec
sub
imul
sbb
in
imul
jae
lret
insb
add
ret
sub
fwait
shll
inc
pop
test
dec
aam
mov
mov
xor
pushf
pop
test
add
mov
xor
mov
push
hlt
arpl
loope
dec
push
mov
inc
adc
out
add
inc
cmpsl
gs
mov
dec
rclb
loopne
movsl
ret
stos
daa
enter
fisubs
push
dec
mov
jb
mov
lret
fs
movl
add
jns
jno
aaa
in
lea
sub
shrl
adc
jge
jbe
out
ljmp
fwait
iret
orb
pusha
sub
ja
lds
pusha
rcrb
sbb
mov
sbb
dec
mov
ret
inc
scas
mov
hlt
mov
push
test
cmp
fwait
mov
or
cltd
clc
testb
jmp
cmp
lret
dec
test
xor
cwtl
mov
pop
mov
pop
sub
arpl
fsts
and
pushf
xchg
lret
in
cwtl
daa
or
and
pushw
or
pop
adc
xorl
sbb
add
cld
xor
mov
dec
rcrl
mov
ret
sbb
loopne
sbb
fidivl
push
outsb
xchg
push
mov
je
pop
rcr
adc
ret
call
add
xor
hlt
clc
in
cs
hlt
sub
add
fistl
imul
imul
pop
idiv
cmp
sub
add
cld
scas
jo
or
or
lds
sbb
mov
mov
dec
sbb
or
dec
sahf
jp
inc
fsubrl
mov
fisttpll
mov
jge
jno
test
cmp
xor
stos
jge
lcall
jbe
mov
push
negb
data16
icebp
dec
es
icebp
push
cmp
xchg
rcr
cmc
out
or
sti
test
adc
push
adc
mov
mov
cli
xchg
mov
outsb
lahf
imul
ja
push
aam
fdivrl
adc
add
sub
jno
jg
and
jg
and
pop
mov
push
inc
push
xchg
movsb
jae
cmc
dec
sahf
imul
push
and
add
pop
fucomip
repz
mov
pop
loopne
mov
cmc
mov
sbb
or
ret
push
pop
cwtl
xor
lods
icebp
loop
loop
xor
aad
mov
mov
lock
shrb
cmp
stos
mov
test
test
mov
push
js
idivb
out
push
cmp
xchg
fistl
std
outsl
es
jb
xor
xchg
ja
sub
jmp
add
or
mov
xchg
adc
cmpl
xor
pushl
rclb
dec
xchg
and
repnz
xor
imul
add
sbb
sub
movsl
xchg
mov
loopne
jg
imul
loopne
hlt
cmc
sub
sbb
xchg
fdivrs
mov
cmp
inc
inc
xor
pop
ret
arpl
fnstcw
aas
movsl
jns
push
mov
cmpsl
icebp
std
jne
xorl
lock
sub
xlat
inc
pop
mov
mov
add
dec
lahf
sbb
dec
hlt
xchg
mov
mov
mov
js
repnz
flds
dec
jo
jbe
add
fldt
lock
xchg
stos
adcl
test
mov
cli
jg
sub
jne
test
lods
lods
xchg
arpl
push
mov
add
int3
repnz
loop
mov
add
jg
adc
xchg
test
mov
fisubrs
mov
mov
fildl
movsb
xchg
xchg
mov
cmpsl
add
jb
xor
cmpsb
pop
xor
fmull
mov
sbb
mov
nop
inc
and
mov
inc
daa
mov
xchg
pop
sub
jbe
sub
cmp
repnz
jge
mov
call
int3
std
cmp
cld
mov
das
pop
cmc
mov
or
mov
loopnew
ret
dec
xchg
leave
dec
fwait
jle
push
push
jecxz
xor
lds
jnp
mov
fldt
out
popf
push
dec
scas
mov
and
loope
les
les
sub
fwait
loopne
fcmovne
dec
dec
out
scas
lods
shrb
int3
lods
pop
dec
popf
shll
fs
push
mov
jge
inc
sti
out
fwait
xor
je
dec
mov
mov
outsl
neg
inc
inc
cmp
clc
push
mov
lods
xor
inc
ljmp
dec
movsl
out
loop
ret
mov
ljmp
jbe
xorl
fstl
dec
xchg
test
xor
mov
push
add
dec
out
sbb
pop
pop
aas
xchg
pop
jge
call
sarb
xchg
orb
fwait
lahf
pop
lret
jne
int3
sbb
lds
jg
adc
or
scas
xchg
mov
sub
nop
fwait
lods
mov
xlat
push
add
test
ja
and
pop
frstor
jg
and
push
lret
push
leave
pop
xchg
jl
jg
std
add
mov
or
aam
gs
xor
mov
sbb
xor
adc
jge
lahf
fdivrl
push
je
mov
shrb
xchg
cmp
or
xchg
iret
xor
inc
pop
stc
push
dec
testl
xlat
xchg
jecxz
or
rolb
jnp
fs
mov
test
and
mov
dec
xchg
ficoms
dec
xchg
aaa
sub
addl
xor
aam
push
hlt
dec
mov
pop
pop
dec
dec
call
filds
jge
rcll
iret
lods
xchg
cld
xor
jns
inc
ret
mov
cmp
subb
sbb
inc
jb
in
inc
test
lret
or
adc
push
cmpsl
mov
xor
fisttps
xlat
orb
lahf
popf
inc
loopne
lods
repnz
xor
xchg
mov
or
or
adc
fisttps
mov
mov
mov
mov
xor
add
loope
sub
jg
jns
std
rol
into
je
sbb
test
ret
xchg
jge
pop
aad
pop
adc
shrb
adc
dec
mov
lcall
test
adc
aam
cli
xor
mov
cmp
mov
arpl
or
lea
nop
das
xchg
enter
popa
push
or
push
cmpsb
jns
fldpi
mov
repnz
ja
push
ja
mov
call
pop
mov
imul
test
sub
inc
iret
lcall
cmpsl
cltd
pop
sub
inc
mov
add
fld
xchg
xor
imul
push
pop
push
add
or
add
dec
pop
add
and
xorl
add
repnz
ret
stos
sub
and
mov
mov
inc
push
aam
xor
xchg
cmp
test
ret
adc
mov
test
add
mov
inc
rcll
add
rcrb
sbb
xor
pop
test
lret
pop
inc
cwtl
xchg
iret
fwait
je
fwait
cmp
or
push
stos
loop
pop
push
es
lea
cltd
enter
mov
in
sub
ret
out
shrl
pop
cmpsb
push
outsl
mov
push
pop
es
movsl
jbe,pn
pop
movsl
aad
aad
jb
pop
and
jle
pop
movsb
push
push
push
jp
pop
and
shl
push
inc
pop
push
mov
inc
sbb
add
mov
dec
sbb
push
bound
mov
push
adc
inc
pop
pop
adc
push
fidivs
pop
adc
pop
repnz
es
dec
scas
rclb
fdivr
lcall
xor
push
outsl
iret
mov
dec
xor
iret
lret
int
ja
cmp
sbb
adc
and
idiv
stos
cmc
jno
inc
mov
sarl
jge
sub
iret
std
add
mov
xchg
push
xchg
rcrl
call
iret
xchg
pop
rcrl
aad
cmpsl
ret
or
jo
fwait
inc
js
aad
gs
in
pop
mov
push
mov
repz
icebp
cs
cmp
mov
lret
sub
dec
pop
mov
test
pop
aaa
xchg
sub
pop
mov
push
stos
cmp
out
sti
mov
jecxz
hlt
push
mov
mov
ss
mov
sbbb
sbb
xlat
stos
aad
test
mov
xchg
mov
int
ljmp
popf
lret
test
ja
jae
or
stos
inc
adcl
add
xchg
stos
out
push
adc
inc
push
xchg
inc
inc
fdivrl
outsl
fs
es
and
lcall
lds
or
mov
mov
adc
and
lods
test
testl
xchg
or
cmp
jnp
fdiv
push
mov
inc
mov
movsb
jns
imul
or
ret
pop
xlat
mov
shrb
mov
mov
jp
mov
hlt
jl
mov
enter
in
push
and
mov
rclb
rorl
sub
cwtl
es
push
stos
mov
sbb
jp
movsb
fsts
jecxz
daa
shrl
xor
push
xor
scas
addr16
push
lds
mov
adc
nop
or
lret
lea
mov
rcrb
xchg
xchg
int3
pop
cmpsl
sbb
mov
add
xchg
popf
icebp
add
lea
push
scas
adc
ret
cmpl
rcrb
call
rorl
push
sbb
je
pop
adc
lds
xchg
or
mov
mov
cmp
jnp
mov
test
or
pop
sub
jmp
add
in
pop
mov
daa
in
mov
xrelease
lahf
les
into
cld
je
pop
mov
cmp
pop
mov
lea
adc
clc
sti
and
pop
push
sbb
push
cld
cs
lds
stc
jmp
or
sub
das
dec
les
adc
push
sub
flds
repnz
cmp
fsubrl
pop
inc
cwtl
imul
sub
or
rorb
sub
push
movsb
fisubrl
rcll
adc
dec
mov
mov
lock
sub
or
xchg
pushf
mov
test
adc
push
adc
js
js
imul
insb
test
test
and
dec
out
daa
mov
xchg
mov
gs
aad
movsb
inc
sbb
cmp
in
push
roll
jge
mov
sub
dec
mov
mov
xchg
add
test
inc
pop
push
movsb
repz
dec
pop
call
cli
mov
iret
jo
push
loope
add
cmpsb
out
lahf
lret
xor
hlt
pop
loope
or
adc
ss
mov
fadd
xor
push
mov
das
lret
clc
mov
adc
sub
outsl
pop
dec
push
jns
divl
stos
cmp
xor
xchg
loopne
pushf
rcrl
inc
ja
in
push
xchg
lcall
inc
inc
pop
pop
pop
icebp
subb
xchg
sti
add
jmp
mov
pop
sbbb
icebp
cmp
mov
flds
add
or
in
rcr
sub
aad
insl
loope
dec
xor
ret
in
jl
frstor
xlat
nop
out
fld
fucomip
ljmp
mov
mov
je
jnp
push
mov
jnp
aas
iret
mov
dec
jle
adc
scas
xchg
lea
dec
mov
jg
scas
add
sarl
xor
lds
enter
das
lret
jecxz
jge
int3
imul
mov
das
inc
les
mov
and
xchg
and
sbb
mov
mov
jne
pop
scas
mov
dec
jp
pop
lods
mov
aaa
jns
xor
xchg
test
fcomps
sti
push
scas
xchg
out
add
or
mov
fwait
subl
lods
jle
out
jecxz
fwait
pusha
lahf
imul
mov
mov
xchg
bound
and
or
nop
pop
add
inc
pop
js
mov
test
rcr
mov
push
and
popf
mov
mov
mov
sbb
imul
mov
fwait
lea
xchg
jae
in
mov
stos
push
dec
loop
jecxz
fdivs
in
mov
outsl
mov
sti
dec
sahf
gs
cld
mov
test
outsb
dec
lea
and
sub
jmp
push
adc
fists
dec
fwait
es
add
cmp
jb
sbb
cmp
sahf
dec
add
and
sbb
push
push
test
mov
aam
ss
pop
pop
fsubr
mov
xor
inc
pop
xchg
arpl
ljmp
inc
sub
sub
movsl
and
lods
mov
mov
push
xchg
jnp
jnp
cmpsl
push
push
imul
xrelease
loop
ret
test
jo
arpl
push
popl
add
sbb
cmpb
cmpsb
aad
addr16
inc
sbb
popl
mov
jne
lcall
into
loop
test
out
sub
mov
or
loope
imul
jne
pop
xchg
stos
ret
shll
dec
inc
negb
psubsw
lds
in
mov
lret
repnz
pop
pop
mov
add
and
xchg
mov
pop
cwtl
lret
pop
mov
pop
in
push
in
xchg
js
cwtl
push
sbb
mov
xor
push
les
sarl
ret
sbb
adc
push
aam
dec
aas
xor
stos
add
mov
mov
mov
icebp
shrb
xchg
out
fildll
pusha
mov
call
ffreep
fninit
ror
mov
add
inc
out
sub
inc
shll
inc
cwtl
dec
test
movsb
leave
mov
jmp
dec
cltd
or
mov
inc
mov
and
push
jg
xchg
push
xor
aas
cmp
and
test
or
enter
js
xor
push
cmpsl
fwait
js
sahf
imul
jo
cmp
dec
inc
push
push
cmp
cmp
pop
arpl
sbb
sbb
sbb
cmpl
add
insb
repz
test
add
mov
aad
imul
pop
int
add
jae
cld
dec
imul
sarl
ret
lahf
xchg
stc
int
push
addb
mov
fdivrs
movsl
and
sub
inc
mov
mov
aam
cltd
lods
mov
stos
insl
arpl
lods
out
int3
sub
loop
lret
lods
arpl
pop
xchg
fcomi
sbb
add
inc
pop
pushf
lcall
xor
test
or
dec
fnstenv
sbb
and
testb
movsb
cmp
mov
aaa
sbb
jae
push
add
dec
cltd
jecxz
inc
cmp
mov
sub
fstpt
addl
mov
cs
inc
mov
shlb
lods
cmp
out
sti
mov
jecxz
add
in
enter
or
jo
iret
cmpsl
ret
dec
or
pushf
dec
fisttpll
lret
shr
pop
loopne
imul
sub
add
lods
mov
inc
in
mov
movsl
xor
iret
stos
or
dec
aas
xor
and
dec
movsl
test
lock
dec
jecxz
insl
lock
pop
cmp
push
mov
js
mov
cmc
and
sub
andl
add
dec
xchg
mov
mov
add
fwait
cmp
sti
in
cld
sbb
lahf
imul
pop
cmp
clc
mul
xchg
sub
enter
aam
stc
scas
shr
stos
push
outsb
imul
xacquire
pushf
dec
loope
sbb
and
loopne
cltd
test
fucomip
in
lcall
lret
jnp
cmpsb
loopne
xchg
jb
mov
mov
sar
adc
xchg
and
adc
test
popa
out
inc
mov
call
js
cwtl
push
adc
pop
call
lret
inc
xchg
cwtl
dec
mov
outsb
sbb
bound
popf
inc
scas
xchg
fimull
xor
mov
pop
or
and
clc
mov
lods
inc
inc
shlb
jp
sub
outsb
mov
xchg
loop
inc
xchg
mov
dec
mov
add
push
popl
or
dec
mov
fstl
imul
loop
jge
jp
inc
push
mov
or
adcb
jne
scas
sub
int3
pop
mov
sub
rep
scas
or
inc
cmp
mov
dec
jnp
mov
or
dec
or
mov
cmp
cmp
imul
mov
scas
call
add
or
sub
push
test
iret
dec
test
imul
sub
push
lea
push
xchg
and
mov
test
sbb
mov
cli
sti
and
addr16
lret
xor
inc
sub
mov
jmp
lods
movb
cli
loop
mov
inc
sbb
sub
loopne
sbb
clc
mov
ror
mov
xchg
and
repnz
lcall
and
sbb
dec
pop
adc
adc
in
pop
xor
mov
lret
lahf
pop
aas
xchg
lds
fwait
dec
jo
fsubs
adc
fs
sub
sbb
push
mov
movsb
push
mov
mov
mov
in
loop,pt
cld
in
icebp
mov
push
imul
jae
pop
or
clc
sti
pop
mov
lret
test
mov
pushf
push
mov
lock
sub
sbb
and
adc
mov
test
scas
lock
in
and
add
sub
les
sahf
fstl
and
xchg
sub
pop
mov
stos
nop
sarl
lret
add
dec
lret
dec
stos
xchg
fistl
pop
enter
js
mov
pop
pusha
jp
cmp
push
push
cmc
hlt
lds
jp
in
ja
js
or
add
scas
bound
mov
mov
add
add
imul
dec
xchg
lock
sub
mov
and
test
repnz
jnp
repz
loop
jne
fcmovne
mov
jno
xchg
xchg
jo
xor
push
mov
mov
shlb
mov
addr16
adc
das
pop
lds
push
mov
push
ret
sti
xor
jl
ret
std
inc
insl
adc
mov
mov
mov
outsl
add
testl
cmpsb
shrl
out
sbb
xchg
mov
lcall
push
dec
loope
mov
daa
mov
cmp
cmp
dec
mov
cmp
in
leave
push
cltd
lods
mov
adc
mov
repz
inc
fwait
out
mov
xor
adc
mov
cmpsl
dec
out
pop
jb
fisubrl
sub
add
push
mulb
pop
test
jge
push
xchg
sbb
jb
pop
cltd
and
pop
sub
out
cmp
mov
mov
inc
rcll
shrb
cmp
mov
test
cs
mov
iret
push
sbbb
add
adc
adc
adc
inc
sub
sub
adc
push
ret
mov
adc
les
enter
inc
jo
pop
and
pop
stos
xchg
imul
inc
ljmp
mov
repz
adc
pop
mov
and
dec
cmp
mov
inc
mov
faddl
xchg
negl
pusha
mov
test
jae
icebp
jmp
insl
pop
or
movb
popl
and
andb
leave
push
movsl
ret
inc
sub
scas
push
xchg
xchg
cmpsl
jbe
out
clc
pop
das
xor
cltd
enter
mov
pop
pop
and
cltd
mov
mov
sub
jmp
mov
movsl
jae
int
jg
and
int
fcmovbe
add
imul
sub
cmp
iret
mov
mov
nop
mov
add
movsb
lret
cmpsl
pop
cmpsl
push
leave
mov
pushf
inc
rcrb
fisttps
add
mov
dec
adc
mov
pop
lcall
test
mov
inc
push
ljmp
xor
mov
movsl
rcll
cmp
movsl
lock
lods
pop
cmpsl
xchg
aam
cltd
lods
inc
roll
jg
movl
mov
mov
add
addl
mov
xchg
mov
dec
xchg
and
sbb
sub
je
addl
es
pop
jns
xchg
sub
cltd
cmpsl
sti
pop
sarl
push
inc
fisubs
mov
adc
cmp
sbb
cwtl
ficoms
or
push
jnp
movsb
jns
test
or
dec
les
cmc
sbb
pop
push
push
ret
cmpsl
repz
xor
xchg
push
mov
repnz
pop
push
mov
repz
insl
xchg
lcall
cld
mov
or
cmp
pushf
sub
mov
cwtl
push
mov
sbb
jae
pop
sub
fsubrs
nop
mov
dec
in
inc
iret
xchg
pop
lock
lret
or
arpl
xchg
stos
flds
das
xor
jbe,pt
lods
sub
lods
hlt
popa
das
jle
lahf
xchg
jl
in
lea
cmp
or
inc
sbb
orb
cmp
jns
sbb
adc
scas
sbbl
lods
push
sahf
lds
scas
enter
movsb
inc
jns
jb
outsb
or
jnp
data16
jge
add
out
cmpsl
insb
cmc
sub
push
adc
arpl
sbb
mov
fistpll
les
mov
loop
dec
aas
pop
xlat
jmp
jl
stos
cmp
lahf
lret
sbb
xchg
es
jo
sti
addl
or
add
les
sbb
rcrb
hlt
stos
repnz
push
test
arpl
repnz
negl
sti
jg
push
cltd
inc
cli
test
mov
sbb
xchg
stos
jge
call
fwait
jge
sbb
cli
pop
xchg
arpl
jbe
lahf
jp
sub
sbb
popf
scas
rol
out
xchg
add
cmpl
mov
xchg
and
fmuls
xchg
movsl
inc
mov
cltd
xor
jp
mov
cmp
mov
into
pop
mov
test
cmp
bound
pop
sub
sbb
lock
daa
or
cwtl
pop
nop
xor
ja
or
dec
mov
ljmp
hlt
outsb
push
movsl
add
mov
je
pop
andb
sbb
mov
mov
cmc
adc
lds
sbb
les
sbb
stos
inc
in
xlat
dec
into
les
mov
adc
gs
test
pushf
dec
or
inc
test
sbb
cltd
ret
in
stos
lds
mov
push
jno
mov
xorb
mov
dec
hlt
push
or
loope
test
mov
sti
adc
mov
mov
push
loope
sbb
call
icebp
xor
and
jns
or
fwait
ret
push
movsl
ret
clc
mov
inc
stos
cmp
lahf
xlat
pop
mov
fsubrs
outsl
or
lds
mov
fsubp
mov
dec
mov
mov
inc
ds
dec
cwtl
loope
mov
lret
idivl
jmp
ss
sub
pop
mov
cmc
sarl
push
cmp
iret
lock
cmp
mov
ja
sbb
sub
ds
rcrb
xor
fdivrs
sbb
add
dec
ret
mov
std
ds
movb
dec
sbb
push
pushf
mov
test
jae
or
cld
add
jb
scas
lret
inc
lret
push
push
jge
mov
or
lods
inc
cltd
sub
push
xchg
and
pop
imul
xchg
or
sub
mov
add
pop
dec
add
ret
jb
inc
ret
outsl
or
cltd
ljmp
jno
jne
stos
sub
ja
xor
jo
add
stos
fs
nopl
xor
mov
ja
sub
pop
push
or
pop
fisubrs
push
cs
enter
jmp
movb
jmp
jnp
test
fucomip
out
cmpsl
cmp
js
mov
test
or
lret
test
flds
movsl
dec
jge
mov
mov
inc
mov
jbe
sbb
sub
std
rorl
or
dec
scas
mov
pop
daa
adc
jae
and
mov
push
sub
lcall
mov
push
sub
inc
sbb
cmc
lahf
scas
pop
jne
jmp
push
mov
ret
rolb
push
addl
mov
inc
mov
add
mov
sub
fcoms
ds
idivl
in
fisubrs
and
push
leave
pop
out
sub
dec
dec
sub
cwtl
push
mov
into
jmp
jbe
add
mov
sub
dec
mov
idiv
mov
in
lock
jns
repz
lret
sbb
add
pusha
mov
outsl
adc
mov
fs
mov
jb
cld
aas
push
cltd
jns
aad
xor
shrl
lock
sbb
lret
fisttpll
mov
pop
xlat
arpl
cmp
shrb
cmpsl
inc
fiaddl
sub
testl
sbb
mov
dec
int3
mov
stc
adc
and
loope
sarl
pop
sti
mov
push
mov
inc
sarb
dec
jecxz
push
xchg
pop
lret
xchg
lods
mov
pop
push
aas
xchg
push
jle
into
js
jmp
dec
inc
mov
repz
insl
outsb
inc
mov
fdiv
add
out
jle
loope
adcl
inc
int3
lea
pop
push
popf
jbe
inc
out
mov
mov
xchg
gs
es
add
rcrl
int
aas
mov
movsl
xchg
jno
addl
mov
pop
lds
sbb
mov
popf
mov
pop
loop
cwtl
adc
aam
aas
repnz
insb
inc
sbb
insl
adc
out
sbb
xchg
xlat
stos
shl
dec
in
and
mov
popf
mov
lea
jns
mov
iret
pop
inc
rcrl
scas
adc
dec
mov
ret
jo
pushf
test
xchg
pop
mov
pop
loope
in
inc
ficoms
lods
fimull
aad
xor
push
or
xor
jge
pop
add
add
cmp
xchg
jno
mov
add
xchg
fsts
aas
insb
cwtl
in
pop
and
bnd
jmp
jae
inc
imul
jg
cmpsb
fsubrs
fidivrl
mull
int
mov
loopne
xor
test
inc
jae
add
je
loopne
imul
out
cmp
shlb
add
les
push
mov
xchg
xlat
sahf
xor
out
sti
lock
jmp
xor
and
mov
imul
popf
cld
inc
test
mov
jne
xchg
pop
cli
outsb
fldcw
out
push
push
pop
ljmp
jae
add
in
or
fsts
mov
or
pop
add
cmp
mov
push
ret
jmp
lcall
rcl
cld
add
and
add
push
jb
adc
xor
dec
xor
mov
or
les
push
ror
dec
cmp
sub
fdecstp
shlb
pop
aas
in
call
icebp
repz
clc
insb
lea
inc
or
loop
pop
add
hlt
call
jp
xor
pop
adc
cmpsl
add
mov
jae
ja
adc
imul
lds
inc
push
int
inc
sbb
inc
adc
xor
lods
shll
jnp
dec
sbb
add
mov
mov
mov
pop
bound
popf
cmp
loope
das
inc
mov
lsl
adc
and
push
jge
dec
gs
iretw
jmp
pop
cmp
loop
dec
test
mov
shlb
lahf
mov
pushf
jp
xor
andl
ljmp
pop
mov
adc
cmp
popa
test
enter
sahf
addr16
cmp
fwait
cmpsb
fcompl
lods
ret
lcall
cmp
cwtl
dec
cmpsb
inc
cltd
addr16
mov
xor
sbb
outsb
mov
dec
inc
ds
add
ja
push
shr
mov
dec
mov
rcll
loopne
test
pop
xchg
push
jae
shrl
push
fists
mov
repz
jns
mov
mov
and
nop
dec
sbb
xchg
nop
or
xor
xor
call
inc
mov
cmp
stos
jb
mov
jae
sbb
jns
sahf
xchg
je
popf
inc
in
push
cmp
jnp
sbb
push
pop
xchg
push
xor
add
sub
sbb
jno
push
xchg
mov
lret
xchg
cwtl
inc
sbb
inc
xchg
fsub
icebp
sbb
lcall
push
cwtl
cld
cmp
adc
dec
pop
xchg
cltd
inc
fisubrs
subl
push
aam
jp
enter
or
imul
jb
outsl
test
inc
cltd
add
ja
inc
mov
ds
mov
mov
test
push
aam
xchg
out
imul
pop
jo
aaa
sbb
cmpsl
push
pop
add
or
jl
adc
rcll
test
jae
icebp
scas
adc
shl
inc
cmp
dec
test
scas
nop
jnp
test
lea
dec
mov
mov
mov
mov
pop
ficomps
mov
xchg
cmp
movsl
sub
out
inc
cmp
imul
adcl
mov
shrl
adc
push
dec
dec
push
in
sbb
lahf
cwtl
out
jmp
pop
inc
ret
or
xor
inc
icebp
inc
fidivrs
add
jge
xchg
sub
test
push
mov
mov
jle
push
push
pop
fisubl
fiaddl
jnp
xchg
fcmove
jno
cltd
shl
xor
ds
inc
dec
sub
mov
jg
fcom
mov
inc
pushf
in
pop
shl
mov
dec
in
mov
stc
lcall
aas
aas
bound
pop
inc
je
outsb
mov
mov
les
cmp
insb
mov
repnz
stc
xchg
inc
sbb
ss
sbb
out
jns
aaa
ret
loopne
sbb
sbb
arpl
jae
inc
jmp
repz
jo
lods
icebp
add
sbb
fwait
push
push
add
add
out
jae
jne
add
sbb
fldl
js
loop
and
push
mov
cmp
std
rolb
movsb
test
roll
addl
into
decl
inc
push
push
jmp
mov
rolb
lret
pop
aad
movsl
ret
fsubrs
movsb
cli
jae
pop
xchg
popf
fists
xor
cmp
popf
iret
and
and
add
or
loop
mov
adc
int3
fidivrs
lret
cltd
jge
pop
xor
jbe
xchg
sub
push
addl
mov
mov
ret
ficoms
lcall
out
fwait
arpl
mov
or
lds
and
mov
mov
dec
xor
adc
rclb
stos
sbb
xchg
mov
movsl
in
mov
cmp
cmpsl
cwtl
nop
cmp
adc
lret
mov
pop
outsb
iretw
leave
xchg
scas
cmpsb
ss
in
out
mov
push
mov
mov
fists
mov
mov
repz
mov
adc
xchg
jg
sbb
pop
push
cmp
jle
aam
cltd
mov
or
in
push
popf
insl
cmc
cmpsl
cwtl
ret
sub
cmc
loope
adc
jae
je
test
sbb
in
rcr
arpl
aad
xchg
pop
push
lods
push
sub
pushf
gs
jge
dec
add
inc
dec
fdivp
pop
imul
mov
cwtl
push
adc
stos
daa
add
mov
leave
lahf
test
sbb
pop
outsb
sub
add
sti
lret
pop
repnz
mov
test
ljmp
sbb
fdiv
pop
sub
and
or
xchg
sub
mov
bound
xor
aaa
mov
mov
lahf
mov
js
xchg
insb
push
dec
stc
pop
js
repz
mov
mov
stos
cltd
das
popl
jp
dec
ss
dec
testb
cld
mov
pop
sbb
pop
push
stos
xchg
adc
push
sti
pop
pushf
and
stc
movsb
inc
sub
insb
dec
subl
mov
icebp
je
push
fidivs
jmp
idivl
roll
xchg
inc
inc
mov
pop
and
mov
or
outsb
jge
dec
rol
mov
hlt
pop
fidivrs
shl
mov
sub
ljmp
cwtl
dec
lahf
inc
fstps
xor
test
xor
adcl
lret
fldl
xor
lret
sbb
test
movsl
imul
sub
int
mov
xchg
shrl
mov
nop
lea
lds
mov
movsl
repz
jmp
test
xchg
adc
aam
mov
mov
xor
mov
lret
imul
inc
pop
inc
mov
testb
outsl
inc
mov
rolb
and
sbb
mov
jo
lcall
enter
xchg
daa
cmpsl
into
mov
and
dec
mov
push
pop
stos
shrl
out
xor
mov
mov
fidivrl
icebp
popl
bound
cmc
js
inc
add
lods
roll
sbb
xor
repz
out
hlt
inc
mov
ds
or
nop
mov
iret
loope
out
mov
dec
xchg
cmp
lret
subl
arpl
mov
add
fsubrl
dec
xchg
add
mov
test
test
fcoms
sub
mov
mov
xor
iret
addr16
fwait
out
stc
cmp
push
mov
test
or
sti
mov
out
mov
jmp
and
je
mov
out
insl
inc
sbb
sarb
pop
lahf
jl
popl
ja
mov
pop
add
das
or
mov
int3
fisttpl
mov
lea
test
es
movsl
dec
scas
or
fmuls
jmp
repz
ret
roll
ret
subl
mov
jecxz
add
orb
nop
cmovl
xchg
xor
jno
lds
stos
mov
push
jnp
bnd
push
dec
adc
lret
dec
sbb
enter
fisttps
shll
sar
cmpsl
test
sarl
add
inc
outsb
les
mov
push
mov
xchg
stos
inc
push
jae
adc
push
push
sbb
cmovl
subl
jg
add
cltd
mov
adc
pop
nop
imul
and
sbb
xor
dec
mov
aam
pop
push
xor
fsubs
sar
pop
mov
das
push
ret
test
lea
mov
mov
int3
sbb
pop
sub
aas
and
jo
dec
add
mov
nop
mov
les
mov
push
mov
dec
call
lods
jno
mov
aaa
div
clc
cmp
mov
scas
and
rolb
adc
or
faddp
sbb
add
in
movsl
mov
nop
jnp
insl
das
dec
mov
lods
lret
xor
mov
jae
cmp
stos
mov
lret
lahf
xchg
mov
pop
sub
mov
push
mov
loop
mov
outsl
adc
ljmp
jns
and
lds
sub
cmp
and
out
jo
aad
aas
rorl
mov
adc
jg
xchg
ficomps
jp
add
mov
sbb
aad
cmp
outsl
outsb
cmp
cmpsb
mov
call
pop
mov
and
lret
xor
cld
jo
dec
xor
xor
ljmp
in
or
ja
call
pop
stos
fcoms
pop
pop
inc
sbb
push
sub
js
jmp
cmp
sbb
xchg
mov
mov
inc
sub
or
les
insb
scas
push
push
icebp
out
lds
outsb
aad
mov
and
test
or
imul
fisttps
mov
call
pop
lahf
jp
test
pop
insb
nop
clc
call
jno
add
shrb
dec
jnp
cs
outsb
add
dec
pop
cltd
push
push
mov
inc
pop
jmp
frstors
cmp
fisubrs
pushf
xor
inc
or
sub
es
sbb
shr
adc
aad
rcr
mov
dec
aam
iret
pop
xor
aam
adc
mov
xchg
mov
rolb
repz
insl
cltd
shl
sti
xor
mov
rcrb
enter
hlt
hlt
sub
int
adc
lds
or
add
push
ret
testl
inc
xchg
rcll
std
test
push
lea
adc
clc
mov
std
enter
lds
sahf
add
iret
cmpsl
into
or
fwait
mov
stos
loop
lret
dec
pop
sar
mov
test
ljmp
push
mov
mov
test
mov
sub
xor
push
xchg
pop
pop
sub
pop
mov
mov
test
lods
jle
sbb
mov
test
outsb
mov
fcompl
fwait
add
adc
in
xorb
rcrl
leave
outsb
adc
xchg
stos
test
push
mov
dec
outsb
ret
push
inc
xchg
leave
movsb
inc
push
xchg
dec
enter
ret
cmc
jmp
popa
pop
sbb
add
imul
dec
sub
ret
add
xchg
mov
pop
mov
jmp
fldcw
shl
pop
jno
pop
lea
or
mov
sbb
mov
clc
push
inc
cmp
jnp
mov
dec
aad
mov
adc
mov
jnp
rcrb
push
and
test
repnz
into
dec
das
cmp
add
scas
mov
inc
leave
mov
push
mov
popf
lret
gs
jns
mov
fsubrl
lds
sub
mov
cli
jae
orl
pop
push
jns
sbb
popf
jl
aam
dec
fwait
leave
xor
pop
mov
xchg
jne
adc
fistps
mov
or
mov
add
fidivrl
and
fiadds
js
or
push
cmp
cmpsb
inc
lret
inc
lahf
rclb
add
loopne
dec
pop
or
orb
mov
adc
int3
repnz
aam
jae
jl
stos
sahf
cmp
jp
imul
dec
sbb
inc
mov
xor
sub
jbe
adc
leave
shrb
data16
aaa
dec
sub
idivl
test
in
push
sub
dec
xchg
cmp
jle
std
and
lret
or
fistps
pop
adc
test
fisttpll
stos
cli
push
insb
fisttps
loope
add
pushf
jmp
add
addl
xchg
scas
xchg
outsl
add
push
rolb
pop
dec
add
mov
or
rcrb
pop
adc
xchg
sbb
bnd
sub
mov
es
shlb
push
std
inc
bound
dec
cmpsl
dec
dec
test
xchg
lahf
xchg
adc
dec
push
add
xor
daa
push
mov
rol
testl
jne
shlb
mov
movsl
subl
and
stos
and
sbb
mov
sbb
adc
js
jg
mov
cmpb
stos
mov
xor
fstl
sbb
bound
test
rorb
in
les
leave
or
iret
adc
ret
inc
stos
negb
xchg
fistl
cmp
and
push
pop
test
push
sub
jbe
loopne
pusha
or
jle
das
pop
popf
sbb
stc
lahf
popa
or
add
dec
test
mov
xor
push
push
xchg
std
push
push
xchg
push
mov
xchg
dec
jb
inc
inc
xchg
and
dec
jno
pop
dec
cwtl
or
push
sbb
sbb
push
fcmovnb
mov
inc
movsb
mov
je
xor
dec
lods
jecxz
jo
lahf
mov
das
mov
popa
jl
pop
movsl
loopne
cmp
inc
mov
repnz
cmovbe
or
sbb
xchg
imul
iret
cmpsl
dec
leave
int
xor
lcall
lret
shrb
insl
push
mov
sub
dec
inc
daa
xchg
clc
movl
icebp
sbb
cmpsl
stos
leave
inc
sbb
xor
jp
xchg
dec
rcr
adc
mov
pop
imul
mov
mov
mov
add
sub
andl
inc
sarl
or
dec
push
xchg
sub
test
mov
pushf
pop
mov
pop
call
cmpsb
jmp
std
cmp
popf
orl
mov
repz
sti
dec
inc
mov
inc
mov
push
cwtl
fdivs
mov
cltd
sahf
insl
mov
into
inc
add
arpl
fdivs
sbb
out
jmp
hlt
add
push
mov
jecxz
fldl
sbb
inc
leave
pop
cli
lods
push
dec
sbb
xchg
cmp
leave
ret
mov
pop
jg
push
sub
dec
fnstenv
int3
mov
sbb
push
mov
out
jo
movsb
out
out
lret
push
insb
or
fcomi
jbe
outsb
dec
push
mov
nop
imul
or
jns
xchg
sbb
push
insb
jae
mov
scas
adc
sti
cwtl
ss
mov
leave
or
clc
pop
dec
xchg
pop
mov
lods
dec
add
add
fsubrs
push
mull
sahf
sarl
cwtl
test
cmp
pop
mov
cwtl
xor
sbb
inc
cltd
fsubp
imul
aas
lret
mov
cmpsl
sbb
rclb
sbb
imul
mov
lcall
repz
sub
sti
jbe
iret
pushf
sbb
mov
ficoms
add
test
enter
mov
xchg
faddl
scas
xor
cli
cmp
lcall
popf
in
lods
cmpsb
test
test
cmp
jecxz
mov
jle
mov
shrl
mov
cltd
xchg
int
pop
adc
xchg
aad
mov
nop
dec
lods
stos
jne
xor
int
pop
adc
xor
xchg
mov
lret
jge
and
cmc
cmc
mov
xor
cmc
xor
orl
bound
fwait
push
dec
mov
sub
fsubs
fwait
jg
jge
scas
jno
adc
dec
hlt
or
mov
arpl
dec
mov
cltd
enter
es
mov
and
jae
mov
aas
lahf
inc
int
cmp
imul
mov
cmp
pop
loope
inc
dec
ret
lcall
dec
imul
lods
ja
add
clc
sti
mov
sti
jae
arpl
inc
mov
xor
or
cmpsl
mov
adc
movsl
mov
test
cmp
mov
or
mov
xchg
arpl
loop
push
fimull
xor
pop
sbb
or
cmp
push
inc
imul
mov
push
xchg
out
cmpsb
fcoms
jb
lods
popa
cs
mov
mov
rcrl
aas
outsb
iret
mov
stc
loope
data16
icebp
xchg
dec
xchg
in
gs
pop
mov
mov
sbb
mov
inc
mov
cmpsl
inc
test
jb
mov
imulb
push
jl
inc
inc
rcll
aam
xor
movsl
push
cld
push
push
push
leave
push
and
mov
sbb
arpl
sbb
cmp
fdivrl
or
inc
or
movl
push
push
xor
jl
xor
pop
das
push
mov
sbb
jle
adc
push
loop
mov
pop
dec
pop
dec
das
xchg
loopne
sbb
call
mov
dec
out
call
pop
dec
addr16
aad
push
mov
sub
adc
aad
xor
mov
push
test
jmp
cmp
stos
std
loopne
shlb
inc
sbb
add
stc
fbld
je
adc
cld
popa
and
test
test
pop
aad
movsb
lret
jge
inc
loopne
sbb
xor
fistps
out
int3
loope
out
inc
faddl
cmpl
hlt
lret
push
repnz
dec
mov
enter
ficoml
pop
aam
test
mov
xor
cld
jbe
add
sti
and
pop
jmp
lret
ret
arpl
aad
aaa
adc
cmp
and
inc
out
xor
dec
inc
dec
jns
lods
xor
mov
push
xor
push
mov
mov
mov
jae
sbb
jecxz
pushf
popa
add
je
add
pop
imul
sub
mov
js
jle
xchg
cli
loope
jp
cmp
lods
jg
shr
icebp
cltd
jle
mov
pusha
mov
andl
xchg
into
rorb
in
frstors
sbb
mov
jne
inc
stos
cmp
out
mov
dec
mov
and
xor
push
xchg
inc
shlb
push
and
ret
sti
jne
dec
ja
lods
inc
mov
jbe
jne
sbb
lods
cmp
movsl
dec
call
nop
scas
or
add
daa
cmp
jp
add
or
movsl
rcrl
imul
and
xchg
dec
and
sub
insl
sub
mov
mov
cmp
mov
in
mov
adc
ss
pop
sub
and
add
mov
mov
xchg
fwait
mov
push
cmp
jecxz
pop
iret
dec
and
stc
xor
clflush
mov
push
addl
and
test
adc
xor
arpl
leave
mov
pop
test
mov
dec
bound
dec
xlat
pop
cltd
and
lret
dec
jb
sbb
div
xor
loope
rolb
lahf
inc
pusha
adc
adc
mov
sub
mov
das
in
cmp
or
sbb
test
pop
loope
hlt
add
and
fldl
enter
mov
pusha
and
nop
or
xor
call
cmp
and
or
sarb
mov
sub
or
push
call
mov
sarl
xor
ret
xorl
imul
xor
pop
clc
push
inc
rorl
ja
fnsave
test
push
add
pop
mov
shl
jl
scas
ret
loop
inc
adc
push
addr16
call
sub
adc
inc
jmp
pop
imul
ljmp
mov
rol
cmp
pop
out
mov
fisubrs
inc
stos
adc
out
push
daa
xor
pop
add
ljmp
push
test
or
test
repz
inc
xor
je
insl
mov
into
repz
adc
dec
lahf
lret
in
lds
xor
pop
es
inc
cmp
add
ffree
test
jl
aaa
mov
sbb
mov
outsl
cmpsb
adc
jb
mov
dec
fimuls
fcmovnb
or
enter
sub
ss
ret
int3
pop
pop
adc
lret
xchg
pop
lret
pop
push
ljmp
pop
mov
xchg
mov
mov
ljmp
hlt
repnz
sbb
outsb
jno
stc
loope
bound
jo
out
adc
into
adc
lahf
aad
cmc
jp
sbb
or
mov
adcl
popf
mov
cmpsl
mov
jb
rcrl
cmpsb
or
and
inc
rcll
cmp
mov
int
mov
push
leave
push
cmp
mov
pop
mov
popa
rcrl
idivb
pop
mov
jno
pop
ds
mov
mov
in
lods
or
cld
pusha
xchg
xor
aaa
mov
adc
sbb
jle
adc
movsl
ds
js
divl
insl
cmpsl
aas
test
out
mov
inc
jmp
pop
inc
popa
mov
pop
cs
mov
mov
mov
pop
cwtl
dec
xchg
cli
sbbb
data16
scas
xchg
xchg
das
jle
lods
jmp
mov
addb
repnz
sub
ret
ret
lcall
vcvtps2pd
xchg
mov
push
cmp
mov
and
cmp
sub
test
ret
pop
lods
or
les
fisubrs
outsb
shl
pop
es
dec
cmc
and
jo
ja
fidivl
jmp
movsl
and
test
jmp
mull
scas
out
ds
incb
cmc
adc
or
jp
cwtl
dec
or
inc
push
cmp
lds
push
dec
int3
xchg
jmp
mov
clc
push
sahf
mov
sub
xorl
cmp
movsl
gs
pop
rcrb
insl
or
movb
negb
int3
fimuls
popf
xchg
xchg
test
leave
jp
xor
out
and
cmc
cld
inc
adc
sub
pop
fcomps
push
sub
add
push
jle
pop
inc
jne
test
xor
lcall
stos
xor
lock
or
rolb
jns
sbb
ficomps
push
dec
stc
jmp
sub
arpl
jb
mov
test
jbe
fcomp
out
movsb
jge
xchg
call
scas
fbstp
js
xchg
fucomip
in
dec
ret
lcall
push
out
mov
std
out
jne
icebp
or
stc
jecxz
in
mov
add
push
xchg
nop
mov
aaa
mov
cmpl
lds
push
sbb
out
mov
in
sarl
ret
inc
cltd
mov
clc
gs
push
insl
jmp
insl
jg
push
imul
sub
test
mov
sarl
and
lahf
insb
aad
mov
movl
xchg
loopne
sub
mov
cmp
repz
lds
sub
push
sub
lds
adc
daa
enter
lods
in
pop
or
add
aaa
push
jge
xchg
jne
and
and
mov
jp
xor
cs
push
ret
daa
pop
pop
push
inc
std
std
call
sub
and
xlat
sahf
mov
pop
addr16
dec
outsl
lret
push
sub
add
lds
jbe
xchg
jmp
repz
and
jne
in
out
shll
jno
aaa
xor
aas
sti
loop
movsb
and
int
jae
xorb
fwait
pop
mov
testl
xchg
mov
sub
in
mov
sub
movsb
je
xchg
adc
addr16
ret
sahf
xor
aam
stc
in
jmp
gs
hlt
insb
lcall
ja
sub
add
and
mov
aad
movsb
in
add
push
or
mov
adc
xchg
rcrb
dec
sahf
stos
int3
inc
sub
fcoml
movsl
lret
cmc
xor
out
sub
mov
jo
dec
push
sub
mov
push
stos
sbb
add
xlat
and
or
xor
scas
shr
je
mov
addr16
jno
push
xor
inc
test
push
jl
xchg
jge
sbb
ds
icebp
sti
jmp
incb
sbb
jecxz
push
sti
mov
das
push
pop
call
pop
out
in
addr16
xchg
ljmp
mov
inc
dec
push
pop
into
xchg
fcmovnu
ljmp
push
scas
xor
jns
repnz
inc
repnz
in
vandps
dec
fisubrl
push
lock
mov
sub
jnp
xchg
cmc
test
sbb
xchg
jge
dec
lahf
in
bnd
xor
imul
das
rol
inc
sbb
add
fcomps
jbe
jecxz
outsl
jle
pop
dec
sub
ret
xlat
es
xchg
aas
pop
popf
dec
jb
stc
and
push
pop
inc
fcompl
pop
lcall
pop
in
pop
cmpsl
fstpl
jle
neg
jae
dec
in
sub
pop
or
adc
les
lods
cmpsl
jle
ljmp
jge
popf
cs
xor
or
adc
or
add
jnp
adc
out
inc
push
lcall
push
add
fs
or
inc
lds
stos
mov
insb
push
lea
xchg
mov
ljmp
push
dec
jp
xchg
and
push
jae
and
add
mov
jmp
test
rcrl
or
push
jge
std
lds
and
sbb
jno
out
cmp
fstps
cwtl
push
pop
out
call
jns
dec
mov
js
lcall
fcomps
iret
sub
lcall
inc
xor
xor
jnp
jb
iret
adc
mov
inc
stos
xor
cmp
lods
mov
or
push
add
cmp
repnz
aaa
sbb
mov
dec
push
mov
je
loop
mov
xor
xor
pop
add
push
std
jecxz
arpl
mov
pop
add
nop
xlat
sahf
test
aaa
pop
inc
jne
pusha
inc
in
jnp
ja
sbb
pop
jg
pop
push
mov
arpl
xlat
data16
push
inc
inc
adc
pushf
sti
mov
stos
mov
lods
and
cmp
movsb
mov
stc
lret
stc
or
inc
or
ja
cmpsb
and
imul
mov
sub
in
dec
cmpsl
outsb
xorl
sub
out
in
or
test
jne
lahf
das
outsl
jo
push
orb
mov
dec
pop
data16
push
and
mov
push
cmp
or
or
sbb
int
repnz
mov
xor
out
push
xchg
aas
jns
inc
cli
add
in
push
out
mov
push
pop
xor
sub
ficomps
cmpsl
fstl
arpl
or
enter
adc
in
mov
or
arpl
test
pop
cwtl
pop
cmp
movsb
add
push
sub
bound
sarb
mov
bound
dec
jmp
cld
xchg
mov
shlb
or
sbb
add
int
inc
pop
adc
pop
pop
add
dec
dec
adc
sbb
push
sbb
popa
insl
ret
jbe
ss
mov
inc
push
fisttps
push
pop
hlt
add
test
aad
pop
pop
ljmp
shll
push
leave
xchg
cmp
xchg
sbb
in
rcll
cmp
cld
das
mov
inc
cli
mov
rcrl
out
in
loopne
inc
xlat
popf
lock
adc
mov
pop
int3
xchg
sbb
in
in
mov
jno
sahf
scas
das
push
aas
push
xchg
gs
inc
sbb
popf
iret
pusha
push
mov
es
xor
jbe
ss
push
and
aam
mov
or
leave
loopne
mov
or
jl
jecxz
mov
ret
outsl
push
adc
push
inc
ret
mov
outsl
lcall
fs
in
inc
imul
push
adc
pop
pop
push
enter
jne
push
out
push
mov
loope
shlb
adc
lock
movsl
pop
ja
fcoms
dec
std
idivb
hlt
mov
xor
rorb
dec
pop
js
sbb
lret
push
lds
gs
lahf
cmp
mov
subl
and
sub
add
cli
pusha
in
cmp
loopne
scas
push
out
cmovge
xchg
in
sarl
loop
es
or
or
lods
mov
pop
fwait
dec
cmp
sbb
sahf
scas
pop
dec
cmp
or
mov
mov
push
jno
cmpsb
pop
nop
lods
outsb
inc
or
bound
push
pop
aaa
dec
popf
jnp
or
out
aas
movsl
inc
or
imul
add
xchg
pop
pop
jo
cmpsl
pusha
inc
aam
sbb
ja
ror
push
jne
aad
push
int
xchg
lret
movsl
ret
dec
andl
mov
and
or
movsb
insb
inc
out
mov
push
and
fcompl
scas
fnstcw
int
mov
sub
int3
pop
sbb
ja
sbb
dec
fs
ss
push
adc
mov
push
jno
daa
loop
sub
fildll
adc
cmc
pop
jge
aas
and
repnz
add
mov
inc
ret
ljmp
push
mov
mov
out
and
ljmp
insb
imul
and
mov
xor
adc
subl
push
loope
cld
arpl
shlb
xor
insl
lret
fimuls
xchg
push
mov
loop
cli
notl
ss
pop
sbb
inc
pop
movsb
pop
dec
in
dec
push
lahf
test
add
sbb
lcall
or
stos
out
nop
icebp
out
sti
or
imul
mov
lds
andb
in
mov
mov
mov
and
divl
insb
inc
arpl
mov
ja
pop
outsl
dec
pusha
daa
sbb
imul
pop
scas
xor
mov
test
and
leave
xchg
cmp
pop
jns
or
mov
xor
js
ja
aaa
adc
pop
jne
incb
mov
cmpsl
test
inc
push
in
mov
push
out
cmp
loopne,pn
sbb
push
adc
xor
insl
mov
xor
iret
sub
std
mov
mov
jo
dec
mov
insb
inc
lret
dec
fistps
fidivrl
mov
pop
cmpsb
push
aam
sub
lock
nop
mov
out
mov
jp
dec
enter
movsb
mov
adc
andb
decl
adc
int3
aad
jp
sbb
adc
cld
jg
or
imul
sub
dec
in
adc
loop
and
mov
pop
and
dec
push
jmp
adc
push
pop
call
sub
adc
mov
notb
or
cmpb
mov
rol
add
negb
lods
mov
mov
xchg
stc
mov
xchg
fsubs
mov
sti
inc
cli
mov
rcrl
out
in
loopne
inc
xlat
popf
lock
adc
mov
pop
int3
xchg
sbb
in
in
mov
jno
sahf
scas
das
push
aas
push
xchg
gs
inc
sbb
popf
iret
pusha
push
mov
es
xor
jbe
ss
xchg
ss
and
dec
cli
jle
pop
dec
fbstp
test
outsb
in
inc
or
mov
mov
jl
enter
mov
in
sub
fdivl
add
sbb
rclb
negl
gs
loopne
fs
cmp
jmp
test
dec
shlb
scas
test
adcb
fmull
or
sub
sbb
ljmp
mov
sub
add
test
push
stc
loope
jecxz
arpl
jne
lahf
das
outsl
jge
mov
and
push
andl
roll
jo
popl
add
cli
sbb
pusha
jbe
lea
jle
pop
dec
sub
dec
pusha
jmp
add
pop
sbb
sbb
lcall
sbb
xchg
int3
data16
jl
pop
cmpsl
aam
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
dec
pop
mov
fildll
cs
mov
out
xor
push
mov
in
push
cmp
std
jne
popf
dec
aaa
and
xorl
or
dec
ss
dec
cmp
inc
mov
aaa
shrl
mov
addr16
fs
insb
popa
fmulp
inc
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
out
stos
xchg
ror
push
clc
daa
out
xchg
in
enter
movsb
jbe
outsl
in
xor
outsb
lods
cmp
orb
fisttps
jg
xor
test
xlat
add
sbb
std
decl
sub
std
push
cmp
add
sub
adc
sti
loopne
mov
scas
sahf
scas
das
pop
sub
rcr
push
fnstcw
jb
cmpps
mov
jp
or
data16
dec
lds
inc
jne
jge
xlat
sub
into
mov
pusha
pop
ss
jns
out
test
cld
and
stos
std
xor
fcoml
inc
lcall
inc
jp
in
gs
sbb
call
mov
add
mov
lahf
mov
addb
pushf
scas
scas
adc
push
mov
fs
cs
jge
pop
cs
cmp
push
es
ret
divb
mov
je
inc
mov
jmp
pop
and
mov
cmp
test
and
insl
and
push
sub
mov
std
lods
pop
pop
js
incl
inc
sub
outsl
jo
inc
jne
mov
dec
clc
sbb
je
rclb
out
add
call
pop
xchg
cmpsl
hlt
inc
test
pop
and
mov
adc
shlb
in
mov
jge
adc
aaa
mov
rol
mov
mov
loope
pushl
mov
mov
loope
push
inc
inc
mov
pushf
testl
shrb
add
aam
pop
ret
mov
sbb
in
ret
pusha
push
push
lahf
lds
mov
and
cmc
sub
dec
cld
sahf
mov
sub
push
rcrb
rcl
test
sub
sbb
xor
jmp
pop
xor
sbb
loop
sbb
int3
inc
jo
mov
dec
sub
push
icebp
xorb
std
rcrb
negl
adc
jl
inc
sub
jnp
out
jnp
push
lret
inc
mov
push
xchg
pop
mov
lods
dec
stos
das
fstpt
jno
cmp
repnz
js
gs
jns
out
dec
enter
lea
int3
inc
mov
shll
push
mov
or
out
es
fnstsw
inc
jbe
add
fisttpl
mov
pop
add
mov
les
pop
sub
mov
hlt
out
or
jo
daa
jg
sbb
cmpsb
movsb
jl
insl
xor
push
and
xchg
cmp
in
xor
mov
mov
jmp
mov
sub
mov
int
mov
mov
add
ljmp
push
mov
xor
mov
jns
sub
inc
in
xchg
sbb
dec
inc
testb
jo
mov
or
subl
outsl
pusha
shlb
nop
inc
and
out
or
cli
cltd
cmp
fstpl
jne
mov
inc
mov
jno
inc
stc
test
xlat
mov
cmc
cltd
inc
iret
and
or
sbb
pop
daa
popf
clc
popf
jbe
mov
loop
aas
aad
sub
pop
mov
jge
ret
jecxz
call
inc
inc
mov
movsb
jmp
jge
cmp
lret
xchg
fsubl
arpl
clc
movsb
into
pop
shl
and
add
adc
cld
jg
inc
mov
dec
test
arpl
push
mov
push
mov
loop
and
xor
stos
and
in
mov
cmpsl
jmp
test
push
pop
sbbb
pushf
testb
dec
scas
pop
out
in
xchg
ror
push
clc
daa
out
xchg
in
enter
test
outsl
in
repz
outsb
lods
aaa
push
ret
je
fisttps
jg
xor
test
xlat
add
sbb
std
decl
sub
sti
push
cmp
add
sub
adc
sti
loopne
mov
xor
dec
jno
aam
imul
add
mov
jo
loopne
jp
aaa
es
mov
push
xchg
movsb
mov
jnp
adc
js
ss
jns
out
test
cld
and
stos
std
xor
fcoml
inc
lcall
push
mov
stc
in
gs
sbb
call
mov
add
mov
lahf
mov
pushf
subl
scas
scas
adc
push
mov
fs
sbb
push
adc
pushf
dec
and
cmpsl
dec
and
xor
addl
sub
sbb
shrb
jbe
pop
dec
pop
jne
repz
xchg
add
mov
xchg
cmp
test
and
insl
and
push
sub
mov
std
lods
pop
pop
js
incl
inc
sub
outsl
jo
inc
jne
pop
xlat
insb
add
sbb
je
rclb
out
add
call
pop
xchg
cmpsl
jne
test
inc
and
mov
adc
shlb
in
mov
jb
dec
mov
jl
mov
es
xchg
test
jle
pop
dec
fistpll
or
iret
push
les
push
cmp
and
push
frstor
add
subl
cwtl
out
push
lcall
cmp
loopne
sbb
pop
ret
mov
sbb
in
ret
jle
push
lahf
and
popa
mov
and
cmc
sub
dec
cld
sahf
mov
sub
push
rclb
shll
pop
repnz
xor
jmp
scas
sub
xchg
pop
gs
out
cmpsl
dec
lods
shrl
lcall
fdivr
fdivrp
and
xchg
mov
cmc
jmp
js
out
fs
jnp
outsl
mov
dec
loope
aam
popf
jae
mov
jl
fs
cmp
aam
jne
dec
lods
pop
cmc
pop
mov
sbb
in
andb
sub
loope
out
int
inc
je
cmp
xchg
push
je
fadds
push
lods
popa
jns
adc
xor
fcomps
je
xchg
push
loopne
fstl
sbbb
cmp
bound
sarb
mov
insl
outsb
adc
pop
dec
jno
mov
sbb
es
shl
xor
mov
mov
jmp
mov
sub
mov
int
mov
mov
add
ljmp
push
mov
xor
xchg
sub
inc
in
xchg
sbb
dec
lcall
ja
sub
popl
sti
inc
ja
lahf
test
jl
dec
cli
sbb
xchg
loope
test
adc
loopne
sbb
push
inc
lock
mov
jno
inc
stc
test
xlat
mov
cmc
cltd
inc
iret
and
or
sbb
pop
daa
popf
loopne
jbe
or
loop
aas
aad
sub
pop
mov
jge
ret
jecxz
call
inc
inc
mov
movsb
jmp
jge
cmp
lret
xchg
fsubl
arpl
clc
movsb
into
pop
shl
icebp
or
mov
shl
jl
or
mov
add
in
cmpsb
sbb
lret
fwait
test
push
xor
popa
int3
xor
push
jmp
mov
pop
repz
in
adc
ljmp
imul
push
std
lock
inc
rolb
outsl
jo
push
orb
mov
hlt
leave
loop
add
mov
and
mov
adc
pusha
sti
sbb
int
ljmp
adc
xchg
aas
jle
inc
cld
add
decl
mov
push
pop
cmp
xor
cmpsl
push
daa
lea
jno
push
sbb
repnz
xor
popa
and
xor
ret
arpl
pop
and
push
xor
inc
mov
out
cmp
ret
pop
push
jle
inc
bound
adc
xchg
inc
imul
ficoml
pop
or
inc
sub
jns
mov
hlt
sub
mov
lods
push
mov
dec
sbb
push
sbb
popa
insl
ret
ret
adc
xor
jge
ror
push
cmpsl
push
push
adc
cmp
lods
ss
lea
aaa
dec
push
jne
hlt
jle
pop
jge
cli
pop
shl
jne
scas
pop
xchg
loopne
adcb
movsl
xchg
add
ds
adc
arpl
mov
mov
popf
popa
and
lds
movsl
mov
adcl
sbb
inc
fs
cmpsl
dec
shll
pop
cmpsb
or
bound
loop
xchg
xor
and
gs
mov
cmpsb
daa
mov
inc
cmpsb
sub
xor
sub
scas
sub
push
stos
ds
aas
ja
sti
lock
mov
adc
sbb
add
ss
and
mov
fiadds
mov
mov
xchg
mov
mov
push
bnd
loope
hlt
jp
jae
ljmp
mov
add
inc
pop
int3
mov
mov
push
xor
xlat
stos
jge
pop
movsl
sbb
jl
fsts
lcall
mov
pop
mov
or
xor
dec
and
scas
inc
xor
cmp
icebp
or
dec
std
dec
mov
jne
js
andb
adc
xor
imul
mov
sarb
iret
cli
xor
lds
jg
or
cmp
xor
push
cmpsl
jo
imul
sbb
in
aam
fcompl
cmp
push
hlt
imul
dec
jne
and
adc
inc
sub
fmuls
jbe
movsl
or
pop
fsts
into
push
pop
loopne
cmp
jae
mov
arpl
lahf
mov
mov
iret
push
and
and
pop
subb
pop
adc
jne
les
push
clc
aaa
shlb
cmp
int
mov
sbbl
pop
xor
pop
jmp
push
sbb
int
mov
mov
dec
les
fistl
xchg
ja
mov
fcmovnbe
ret
mov
loope
sar
push
mov
out
js
pop
xchg
decb
mov
mov
js
sti
add
rclb
fsubrs
sbb
rcll
int3
movsl
ret
test
push
fdivrs
and
iret
cmc
insl
pop
mov
jbe
out
cmp
mov
inc
push
adc
hlt
xor
xchg
sub
cmpsl
stos
jge
movsb
popf
in
inc
mov
xchg
dec
mov
jo
add
xorb
mov
dec
repz
enter
hlt
add
aas
jmp
add
xor
fildll
std
fwait
xchg
mov
add
filds
or
mov
jno
dec
push
fdivl
push
mov
xor
jge
mov
mov
ljmp
sbb
inc
in
in
popl
stc
jo
imul
add
jno
mov
mov
mov
or
jbe
gs
cwtl
movsb
fcmovnb
push
icebp
popf
cltd
in
inc
shlb
or
xor
pushl
inc
mov
dec
fsubs
insl
repnz
ret
shl
push
popf
inc
fldenv
xlat
das
ret
xor
push
sub
mov
enter
jl
mov
stos
xchg
mov
aam
push
aaa
into
pop
lea
imulb
repnz
or
jmp
ret
inc
jmp
mov
add
sbb
add
addb
std
mov
push
in
fldenv
and
ljmp
test
stos
fidivrs
jae
fwait
mov
cmp
adc
inc
mov
ds
xchg
rorl
addr16
rcrl
jmp
mov
movsb
mov
icebp
sub
cmp
fmul
xor
negl
mov
inc
add
lret
sub
pushf
inc
cwtl
dec
and
sub
call
movsb
cli
pop
cmpsb
enter
cmpsl
ret
fld1
gs
jg
aas
sti
sti
popa
and
movsl
or
test
rolb
rclb
cmpsl
push
or
sub
sahf
insl
stos
hlt
push
lock
call
jns
pop
mov
mov
call
dec
lahf
in
jnp
stos
xor
ret
mov
add
dec
xchg
fwait
lret
movsl
mov
jecxz
fcompl
push
add
push
js
xchg
dec
jns
test
movsb
or
mov
inc
ds
push
popf
adc
xchg
cmp
sti
test
sbb
push
pop
in
push
and
sub
pop
mov
pop
cwtl
lcall
mov
jge
fcmovnu
fcmovnbe
sti
push
or
mov
or
shl
lds
cmp
std
lock
rol
sub
stc
adc
adc
mov
lods
cli
xchg
and
scas
pop
or
decb
push
iret
cli
lea
fildl
pop
je
mov
mov
mov
int
fs
pusha
push
xor
fidivs
and
jl
xor
arpl
mov
idivb
aas
jae
xlat
out
jno
fisubl
inc
xor
hlt
mov
mov
mov
sub
pop
fdiv
mov
jnp
lret
movsl
mov
mov
or
jo
xchg
mov
mov
outsl
mov
fnstsw
pop
xor
dec
out
pop
dec
in
jg
loope
shl
and
inc
push
lret
dec
out
les
add
scas
jp
stos
insl
mov
xchg
jb
lret
jp
push
xchg
jb
push
jle
jbe
scas
es
sti
out
xor
fstpl
jno
jecxz
std
jno
adc
add
mov
add
fidivrl
and
add
ljmp
mov
mov
cmp
sub
jle
add
add
or
and
adc
aam
or
data16
into
enter
fs
xchg
and
cmpb
xor
mov
xor
inc
popa
push
inc
loope
leave
iret
xor
sarl
add
mov
mov
add
mov
sbb
cld
inc
cmp
push
pop
cmp
sahf
dec
cmp
push
imulb
xchg
in
scas
mov
les
sti
xor
xlat
adc
inc
sbb
pop
cmp
or
lret
cmpsl
push
into
fsubr
mov
inc
ret
ja
inc
cmp
xchg
xchg
sub
push
adc
and
fs
hlt
js
popf
add
xchg
xor
or
and
sbb
add
das
xchg
xor
dec
mov
mov
rclb
andl
inc
dec
les
pop
jb
adc
cmpsb
inc
cltd
aaa
mov
adc
or
mov
jnp
jo
push
jle
leave
mov
test
adc
out
adc
jmp
jbe
cmp
ret
adc
cmpb
imul
ds
mov
mov
sub
mov
adc
cmp
cmp
jl
cwtl
lret
pop
push
loope
inc
scas
xchg
xchg
push
mov
movsb
subb
lods
pop
scas
mov
jbe
fs
cmp
negb
les
inc
xor
push
or
outsb
insl
mov
mov
xchg
sub
sub
fcoms
mov
clc
mov
in
js
shl
push
into
xor
sahf
mov
inc
aaa
adc
ret
inc
popf
test
xchg
xor
fisttps
ss
out
call
movsb
rep
jmp
ret
rolb
popf
in
rcl
out
lcall
adc
int3
mov
add
add
jb
dec
shl
dec
daa
jmp
mov
jae
xor
mov
add
push
lea
add
fistpll
cmp
jl
xor
push
shl
push
sbb
cmp
dec
lock
cli
cmp
push
cmpsl
mov
in
popa
cmp
loopne
dec
cmp
divb
mov
dec
cmp
sbb
icebp
dec
mov
and
cs
mov
pop
lds
push
jns
aam
inc
out
aam
add
mov
test
dec
lods
inc
inc
dec
ret
pusha
mov
jmp
scas
lret
loop
xchg
and
mov
mov
fwait
pop
adc
movsl
mov
xlat
adc
pop
push
pop
xchg
xchg
pusha
inc
pop
xor
cmpsl
imul
fwait
lea
dec
push
lods
jno
in
sti
xor
jb
and
dec
add
fwait
sub
push
push
fidivs
imul
mov
cmp
movsb
loope
inc
dec
pushf
hlt
pop
loopne
std
iret
leave
lahf
jmp
mov
or
pop
aam
ss
xor
push
mov
vpmacsdql
cld
aaa
fldt
push
jmp
les
testl
sub
scas
cmp
daa
jnp
repz
or
lret
mov
cmp
add
daa
nopl
daa
sub
mov
mov
dec
sub
push
cmp
mov
jge,pn
sub
sbb
add
data16
xlat
and
add
add
shl
mov
push
add
xor
pop
sub
mov
jae
xchg
andl
mov
sub
pop
jb
fnsave
inc
dec
dec
insb
aaa
dec
push
pusha
test
sub
inc
lods
pop
adc
fcomps
nop
sub
repz
xor
or
xchg
imulb
repnz
in
ljmp
pop
mov
push
dec
mov
xor
sarb
ret
sbb
inc
pop
sbb
cmp
fistl
push
test
fidivl
mov
stos
mov
sbb
push
fbstp
mov
into
sbb
xchg
mov
shrb
xchg
adc
fstps
mov
and
subb
fcmovnbe
or
xchg
pop
dec
mov
xchg
xchg
xchg
xchg
movsl
pushf
rcr
jmp
mov
cltd
ret
sub
std
cmp
jle
aas
mov
sarb
push
cwtl
mov
mov
cltd
pop
dec
mov
cmc
sbbl
fcoms
push
adcb
pop
add
mov
push
sub
mov
sbb
mov
aaa
and
imul
cltd
mov
daa
adc
and
lods
cmc
adc
les
mov
call
mov
sbb
js
mov
ss
sti
mov
out
pop
enter
dec
pop
cmpsl
mov
insb
adc
test
jo
cmp
jmp
lds
inc
out
dec
mov
jae
inc
loopne
jae
out
and
sbbb
push
xchg
fcmovbe
js
xlat
cmp
or
inc
and
movsw
sbb
xchg
fimuls
jo
xchg
sbb
pop
sub
jbe
mov
hlt
cmc
iret
stc
fdivrl
fcomip
jo
adcl
inc
in
inc
sbb
adc
in
inc
xchg
popf
fidivrl
loopne
inc
cwtl
dec
out
pushf
push
scas
movsl
ret
dec
jne
adc
inc
stos
push
ss
xlat
lea
xor
mov
xchg
cmp
xchg
enter
dec
push
or
fimuls
dec
jmp
mov
xorb
sub
pop
stos
enter
mov
pop
add
pop
xchg
push
jne
mov
add
aam
jo
mov
or
popa
xchg
dec
sbb
iret
cltd
cmp
ret
ds
insl
movsl
add
mov
test
sbb
dec
adcb
sahf
fidivs
mov
jmp
pop
xor
xor
test
icebp
adc
test
loopne
cmp
jle
pop
stos
xchg
xchg
jns
addr16
sub
or
and
pop
les
pushf
xchg
push
js
lret
add
push
mov
mov
jmp
pop
mov
sti
jnp
rcr
mov
cmp
dec
lret
enter
test
pusha
stos
aam
int3
and
inc
and
aaa
pop
shrb
sbb
cltd
xchg
jle
mov
pop
sub
scas
jno
inc
enter
mov
xchg
pushf
imul
push
ja
push
idivl
outsb
gs
mov
xor
ffreep
adc
add
shr
pop
lret
repz
insl
scas
decl
mov
dec
cld
hlt
frstor
xor
and
scas
orb
fists
mov
xchg
cmp
mov
jae
cmp
roll
movsl
lds
xlat
arpl
sub
insl
cmp
xchg
mov
and
or
ja
test
test
stos
xchg
cmpl
mov
pop
xchg
push
pop
rorl
xchg
shr
mov
nop
js
jg
and
sbb
arpl
add
pop
mov
jmp
out
inc
sbb
mov
cwtl
test
dec
push
negb
xchg
bound
pop
or
xchg
mov
mov
jb
mov
aad
stos
testl
inc
shl
mov
jne
mov
icebp
cltd
xchg
or
inc
inc
mov
push
pop
lahf
out
mov
pop
cmpsb
popa
loopne
inc
xor
sti
mov
jns
mov
pop
enter
mov
mov
sbb
xchg
dec
sbb
repz
clc
mov
sbb
fists
fsubr
cli
mov
sbb
pop
in
aaa
xor
in
int3
leave
lods
stos
push
bound
sub
cmp
stos
mov
scas
xchg
cmp
dec
arpl
add
mov
inc
pop
fsubl
dec
lods
fsubrl
cmp
inc
mov
mov
or
lahf
enter
jmp
and
or
sub
in
and
sbb
and
inc
stos
cmp
adc
cs
jae
or
pop
icebp
jle
sbb
inc
test
data16
out
sub
or
imul
fisubs
jp
jae
inc
sbb
les
jle
mov
mov
xchg
dec
mov
add
movb
cwtl
jmp
hlt
test
mov
ret
pushl
loopne
orb
scas
dec
add
sub
ret
xor
push
insb
loop
mov
lcall
mov
test
inc
mov
fisttpll
into
jge
stos
sub
pushf
xor
clc
jo
and
rol
inc
pop
das
jg
push
cmp
sahf
je
fs
lcall
cmpsb
ja
cmp
lods
fsubrl
cmp
adc
or
sbb
bnd
or
neg
mov
nop
in
sub
enter
out
mov
add
push
xor
jmp
out
inc
fldt
pop
pop
xchg
mov
push
pop
test
and
push
mov
in
and
pop
sarb
lock
in
and
cmp
jno
fwait
gs
or
mov
cltd
addr16
xlat
fwait
mov
dec
sbb
xor
pop
push
insl
scas
mov
pop
or
lods
repz
rclb
jl
hlt
push
stc
fists
inc
inc
push
sub
jmp
sbb
out
hlt
cmp
push
shll
in
fcmove
fst
test
lcall
lods
in
filds
mov
fisubs
insb
push
dec
mov
into
stos
inc
mov
xchg
pop
roll
lds
xchg
stos
shlb
mov
fsubp
push
cmp
push
jmp
popf
lods
add
rorb
adc
and
popf
scas
jnp
leave
ss
sahf
and
idivl
addb
add
js
cmpl
rorb
mov
outsl
scas
xlat
insb
imul
pop
adc
pop
mov
and
enter
or
jecxz
jb
nop
push
add
lea
xor
and
test
mov
shr
fadds
outsl
or
rolb
jnp
lret
in
aad
mov
dec
mov
js
sbb
fwait
movsb
int
mov
fmulp
movsl
ret
int
out
mov
jbe
mov
push
movsl
outsb
mov
lret
mov
dec
xlat
out
cmp
ljmp
sti
stc
cli
jecxz
pop
push
jl
mov
sub
inc
pop
lret
mov
mov
mov
fistl
pop
hlt
jecxz
nop
cs
push
ja
rcrl
loope
test
movsl
cmc
cmp
xchg
test
je
js
roll
cmp
icebp
dec
aaa
lea
stc
cli
fmuls
fwait
mov
cmp
data16
lahf
pop
dec
iret
repz
cmp
test
and
imull
jp
fcomps
imulb
mov
mov
cmp
or
mov
popw
lahf
pop
out
in
inc
lock
xor
mov
cmp
jp
cmp
push
sti
shlb
orb
rcl
xchg
jp
imul
enter
xchg
jge
sbb
fistpll
incb
cld
mov
fisubl
xor
add
push
push
test
add
jl
aad
xchg
mov
fstl
cmp
adc
pusha
mov
jmp
pop
or
or
ja
sarb
test
mov
test
rorl
shrl
sub
mov
mov
cmpsl
or
movsb
mov
lahf
mov
out
call
xlat
dec
ficomps
out
out
cmp
pop
pop
bswap
xchg
and
dec
push
add
jo
and
cmpsl
xchg
mov
push
xchg
in
xor
mov
lea
aad
lret
rcrl
in
mov
sub
mov
out
int3
ret
mov
xchg
in
or
dec
lahf
dec
scas
pushf
push
es
pop
push
mov
sbb
mov
test
mov
enter
xchg
pop
test
popf
sbb
test
or
andl
scas
xchg
lcall
test
sbb
cmp
popf
cmpsb
inc
mov
jmp
sub
cli
js
jg
jg
mov
iret
pop
popf
in
idivl
dec
add
pop
add
pop
mov
mov
and
movsl
cli
jg
test
push
test
push
insl
fwait
dec
jno
fwait
out
cmp
sarb
inc
cmp
jne
fwait
push
xchg
lret
mov
adc
jge
xor
sub
and
mov
es
dec
lock
mov
pop
inc
mov
out
jno
push
pop
and
mov
ficoms
inc
fcomps
sbb
inc
enter
mov
mov
cmp
loop
clc
movsl
mov
mov
mov
xlat
push
or
andb
mulb
dec
lcall
xchg
and
pop
sub
data16
cmp
dec
scas
cli
insb
mov
stos
gs
gs
ljmp
int3
pusha
stos
sbb
jle
leave
cmp
enter
xchg
dec
xchg
mov
daa
rcrb
clc
stos
sbb
mov
mov
pop
in
dec
movsl
mov
pop
xchg
dec
jae
sbb
cmp
xchg
push
insl
jecxz
mov
ss
cmc
mov
cltd
enter
mov
add
mov
daa
ds
test
in
inc
test
mov
inc
mov
adc
pop
pop
and
cmp
sub
cmc
ficoml
pop
add
rol
stos
clc
sti
mov
imul
testl
mov
cmp
aam
or
and
iret
fs
inc
loop
xchg
hlt
sub
mov
in
dec
cwtl
dec
repnz
les
inc
test
cltd
stos
push
mov
repnz
add
xchg
test
popa
in
in
lret
jne
cmp
xchg
cmpsl
into
imul
pop
dec
lods
movb
ret
test
jle
imul
repz
and
push
popf
scas
rolb
mov
mov
dec
mov
inc
dec
rcr
sbb
mov
repz
cmp
or
ret
xchg
and
sbb
ret
pop
adc
pop
xor
mulb
or
movsl
dec
pop
or
dec
pop
pop
mov
lahf
inc
mov
mov
movsb
jns
test
int
cmp
sti
fcoml
inc
cwtl
sbb
pop
add
push
dec
ret
ds
ret
sub
dec
or
mov
cld
adc
andb
cld
inc
jne
mov
movsl
mov
jge
fsubrl
lcall
push
clc
scas
jb
dec
mov
push
sub
jae
inc
cli
xor
std
les
cld
mov
fidivl
ret
adc
mov
shlb
std
xchg
stos
inc
xchg
imul
mov
int3
ficoms
data16
cltd
sub
add
lahf
ficoms
dec
mov
cmc
jecxz
mov
dec
inc
mov
mov
xor
mov
insl
push
mov
mov
out
clc
xor
mov
adcl
xor
mov
lahf
or
jmp
fptan
aas
leave
mov
mov
int
notl
mov
cltd
ds
xchg
push
dec
inc
mov
aam
movsb
cmp
fstpl
cmpsl
mov
adc
test
xor
insb
cmp
mov
sub
mov
leave
fsubrl
aad
sbb
rcrb
cli
sbb
push
mov
jb
xor
pop
mov
push
push
adc
jne
jae
mov
xchg
jp
mov
push
jle
loope
xchg
mov
ret
fsubrl
mov
pop
adcb
aaa
bound
xchg
mov
adc
pusha
pop
jecxz
mov
in
sbb
cmp
mov
or
cwtl
cmp
repz
sbb
mov
jae
push
fcoms
aam
push
test
mov
pop
jae
inc
insl
jmp
mov
fbld
mov
sbb
lea
and
rcll
ret
adc
inc
inc
vphsubbw
jb
dec
dec
xchg
xchg
dec
jo
sbb
popa
mov
shl
mov
rcrl
mov
bound
sti
pusha
pushf
pop
cltd
push
lahf
leave
jge
lcall
xor
pop
xor
or
sbb
jne
mov
int3
inc
mov
test
scas
hlt
or
sbb
xor
cmc
mov
in
mov
jb
or
fiaddl
push
push
mov
mov
pop
subb
cmp
mov
mov
rcrb
jnp
dec
pop
or
popf
jp
mov
jno
dec
and
add
cld
add
sub
imul
and
adc
popf
mov
sbb
mov
aam
xchg
add
sahf
insl
inc
sbb
inc
fbld
pop
cwtl
xor
dec
stos
dec
movsl
std
sub
aaa
and
cli
dec
mov
rcll
mov
testl
xor
imul
mov
stc
sub
out
mov
push
lods
rcrl
bound
mov
fildl
mov
cmp
scas
shl
dec
das
mov
jp
leave
test
fisttpll
sub
push
stos
rclb
jae
in
ss
sub
cmpsl
mov
dec
mov
xchg
dec
dec
sub
mov
lret
lea
pop
or
lds
es
movsl
cwtl
push
ljmp
std
out
add
pop
and
pushf
in
sbb
sub
or
enter
arpl
jo
es
sarl
cmp
add
fwait
jmp
sub
int3
pusha
and
test
subl
xor
dec
push
insl
insl
out
xchg
in
faddl
push
loope
push
lods
xchg
leave
arpl
ss
inc
and
or
sbbl
cmp
cmp
inc
movsl
popf
push
pop
pop
dec
or
and
das
add
add
push
jae
in
mov
cmp
jmp
mov
fsubrl
mov
test
pushf
dec
xorb
or
sahf
pop
pushf
rcl
pop
int
push
push
cli
loopne
mov
stc
cli
xor
xchg
ret
jl
mov
mov
frstor
or
inc
cmpsb
enter
lcall
pop
lahf
and
mov
frstor
mov
push
or
and
lds
orl
movsl
das
sbb
into
cmovge
rcr
in
dec
cli
jge
cli
fadds
mov
cmp
mov
mov
jle
sahf
or
test
jg
pop
call
xchg
mov
test
xchg
mov
add
int
cmp
movsb
ds
test
pop
and
mov
mov
add
xchg
jns
jbe
aam
hlt
out
jb
pusha
xor
mov
inc
adc
jp
jecxz
adc
frstor
xor
rcll
mov
stos
enter
sbb
jbe
test
gs
jae
dec
mov
in
lret
test
cltd
mov
test
or
lea
leave
xchg
fildl
mov
mov
lcall
mov
lret
xchg
mov
pop
sbb
add
pop
jo
sahf
add
je
add
lret
cmpsl
aad
jp
movsl
clc
data16
push
js
add
jbe
negb
in
leave
stos
xchg
cmpsl
ret
lds
lods
mov
es
mov
sbb
inc
ret
add
repnz
xor
pop
sub
js
pop
aad
mov
jecxz
pop
xor
imul
aas
mov
loopne
clc
push
inc
xor
in
aam
pop
cmp
add
test
aaa
adc
movsb
fldt
pop
stos
push
lods
xchg
sub
cld
jg
xor
push
cltd
sbb
daa
movsb
jmp
xlat
push
lods
mov
in
mov
rcrl
sub
pop
add
push
fcmovbe
xor
xchg
js
inc
outsl
subb
ret
dec
jb
sub
mov
push
pop
inc
ljmp
xchg
filds
xchg
xchg
test
mov
imul
out
xchg
imul
mov
fnstsw
ror
les
or
nop
and
orl
shrl
pop
or
mov
mov
fsub
in
addb
mov
mov
das
ljmp
idivl
jge
pop
insb
lea
es
add
mov
mov
sbb
mov
in
ja
lock
cmp
cmc
push
ret
imul
sub
sbb
pop
lret
mov
jns
addr16
inc
or
mov
dec
sar
sub
push
repz
mov
bound
and
hlt
test
fs
push
fcmovnu
call
xchg
stos
faddl
mov
push
nop
push
push
or
mov
jno
aad
jp
pushf
xor
xchg
gs
sti
and
and
lret
loopne
cmp
aad
inc
xchg
outsl
mov
cmp
fs
inc
push
jns
mov
addr16
sub
fisubs
adc
in
sub
mov
xchg
ds
mov
xor
test
xchg
jne
insl
jo
jmp
stos
aad
imul
pop
test
push
jle
add
xchg
xor
popf
xchg
cmc
pop
pop
dec
negl
clc
sti
fisttpl
pop
cmp
jmp
push
es
imul
xlat
les
sbb
fwait
jno
mov
cmp
jne
sub
aaa
stos
dec
int3
pop
scas
mov
adc
mov
or
insl
ja
lods
mov
pop
sub
jno
fsubrl
mov
dec
cmpsl
sahf
push
and
jb
loopne
push
jecxz
or
xchg
dec
data16
leave
xchg
fsubrl
jecxz
mov
push
or
cld
loop
movsb
test
pop
push
int3
xchg
or
ret
adc
cmp
push
insb
xor
push
mov
adc
and
jae
hlt
xlat
stos
mov
pop
xor
sti
shlb
imul
stc
jbe
sahf
out
mov
aas
sub
mov
daa
adc
mov
popa
mov
mov
aam
in
cmp
cmp
add
ja
test
mov
xchg
jne
shll
test
push
jp
inc
jae
sarl
mov
fwait
sbb
cmc
into
xor
ss
and
mov
xchg
xchg
mov
es
xor
lds
repnz
inc
adc
test
int
into
push
out
xchg
dec
xchg
adc
xor
fwait
mov
mov
dec
fcmovne
nop
fldt
aad
cmpsb
push
mov
loopne
sbb
push
or
pushf
fisttps
scas
jg
pop
inc
cmc
jnp
pop
addb
inc
inc
sbb
fisubs
lahf
pop
mov
push
pop
push
dec
loopne
push
sub
aad
ja
cmpl
stc
mov
das
outsl
pusha
xor
mov
jnp
sub
stc
std
or
sbb
inc
mov
adc
fcoms
xchg
repz
fnstenv
cwtl
jbe
pop
add
es
repz
mov
pop
cmp
sar
loop
cmp
jmp
jns
adc
ret
int
cmpsb
mov
cmp
test
movsb
leave
pop
adc
adc
pop
shll
cli
in
stc
inc
shll
sbb
icebp
adc
cmpb
dec
lea
mov
subb
nop
sbb
rclb
shl
adc
and
pop
mov
lds
hlt
movsl
lods
push
jg
lret
pop
aaa
sahf
sub
andl
dec
push
fwait
int
push
je
aam
pop
xor
xchg
mov
jle
xchg
inc
sbb
pop
jle
clc
les
std
xchg
sti
out
inc
mov
lods
xchg
add
adc
dec
nop
xchg
xchg
inc
jae
imul
push
adc
test
bound
fistl
mov
sub
inc
in
or
dec
das
je
in
flds
test
bnd
and
std
cmc
jmp
jbe
xchg
and
push
xor
icebp
lret
xchg
mov
out
cmc
and
test
fwait
cmp
jg
fidivs
dec
into
pop
sbbl
insl
cmp
int
jge
ret
jne
inc
xchg
cvtpi2ps
add
jae
mov
in
sub
and
fsub
fistps
pop
mov
and
cmp
ret
in
negl
je
int3
sti
movsb
cld
add
je
jo
jno
sbb
inc
fsubs
fstl
mov
xchg
cmpsl
cltd
lods
into
xor
mov
lds
je
sbb
add
dec
insb
outsl
outsb
ret
jb
sub
pop
jns
les
mov
adc
xchg
jecxz
loope
rcr
mov
jmp
jae
orb
sarb
pop
clc
jbe
mov
or
and
push
inc
cmp
stos
clc
in
cltd
aad
mov
xchg
fwait
aaa
lcall
add
lods
xchg
sub
cld
dec
cmp
fstp
dec
cmp
test
arpl
mov
movsb
aaa
xor
in
pop
pop
jno
jl
mov
stos
cld
cmp
rcr
lea
add
enter
addr16
cmpsl
test
pop
dec
mov
inc
ficomps
xchg
lods
mov
and
inc
cltd
xchg
das
and
xor
dec
push
cmp
xchg
daa
addb
es
les
sbb
aas
pop
fldl
cmc
aad
add
jo
mov
gs
mov
rcr
inc
andl
test
pop
mov
inc
sub
mov
mov
sti
xchg
fildl
sub
cmp
mov
jge
cmp
sahf
divl
or
out
cmc
jne
lea
inc
in
pop
lds
push
mov
add
pop
mov
xchg
imul
rorb
leave
fdivrl
in
mov
das
movsb
lds
nop
jg
pop
jmp
clc
sti
mov
jmp
arpl
ret
pop
dec
out
pop
in
imul
add
adc
xchg
inc
stos
cmpsl
and
push
jp
jb,pn
addr16
aad
pop
inc
cmpsl
test
popf
or
and
cli
nop
stos
adc
jo
mov
mov
xchg
sbb
addb
adc
pop
mov
mov
cwtl
dec
and
mov
nop
lahf
mov
pop
mov
outsb
dec
pushf
inc
lahf
rcr
imul
jo
rolb
sub
sti
addl
pop
push
push
pop
fisubrs
mov
sbb
pop
lds
mov
inc
mov
mov
loopne
and
adc
pusha
lahf
xor
jo
stc
test
and
cld
fnstcw
add
dec
into
xor
and
dec
cli
xlat
lret
sub
in
sub
mov
jae
stos
pusha
std
stos
dec
jle
rcr
fidivrl
test
outsb
inc
arpl
mov
or
xchg
mov
mov
adc
scas
rcll
mov
mov
jmp
push
xchg
test
push
lds
sub
mov
inc
and
dec
ret
call
xchg
jge
sub
enter
and
cmp
mov
rorb
mov
lahf
pop
iret
jb
cmpsb
sub
cmpsl
jns
lods
mov
stc
mov
push
mov
inc
and
mov
adc
xchg
stos
bound
add
popa
xchg
mov
sahf
lds
test
mov
rorl
scas
jne
pop
fdivrl
loopne
fisubs
adc
push
add
mov
movl
mov
dec
ss
jl
in
dec
mov
xchg
lcall
sub
ja
xchg
mov
pop
inc
jae
fldt
jmp
pop
icebp
add
sbb
mov
mov
and
scas
fcmovnb
insl
mov
fisttpll
shrb
iret
aam
xor
aad
aad
pop
mov
sbb
js
sbb
leave
repz
mov
aas
cmpsl
aaa
cwtl
hlt
cld
jle
mov
push
dec
mov
lock
mov
test
mov
sub
mov
xchg
xor
mov
mov
int
adc
xor
ljmp
jns
mov
push
stos
in
lea
jle
imul
pop
mov
shl
in
mov
mov
mov
scas
ret
loopne
pop
pop
sbbl
adcl
add
lods
mov
iret
jae
sbb
jo
es
sahf
dec
hlt
lock
les
dec
test
xchg
xchg
fildll
jae
cmpsb
push
dec
mov
scas
and
popf
sub
es
push
push
inc
cmpsl
mov
mov
fldl
push
lock
movsb
xchg
pop
lret
xchg
jle
mov
imul
scas
mov
cld
fisubs
jo
fiadds
sbb
mov
cmp
call
hlt
imul
popa
or
adc
mov
mov
jmp
clc
jecxz
mov
or
or
jp
out
ffreep
mov
xor
or
mov
pop
adc
cmc
fxch
inc
push
push
mov
cmp
call
cmp
pop
xorb
fucomip
repz
sbb
jecxz
mov
fldt
stos
adc
pop
fwait
ret
sbb
paddb
test
pushf
fstps
mov
sbb
xchg
cmp
ljmp
outsl
cmpsl
je
or
shl
lock
cmp
xchg
fldcw
or
cltd
pusha
mov
add
call
lods
movb
add
inc
xchg
mov
mov
mov
push
add
leave
pop
jle
js
rcrb
sub
mov
mov
xchg
and
xchg
stc
out
push
test
shr
movsb
inc
shr
mov
ret
sahf
xchg
test
mov
enter
dec
test
mov
dec
sbb
test
adc
fsubr
mov
mov
andl
mov
mov
ret
loopne
dec
mov
fcompl
ds
dec
lahf
lret
mov
out
cltd
sti
push
mov
mov
fdivrs
inc
sub
mov
lcall
mov
fst
mov
pop
sbb
test
hlt
push
dec
pop
dec
inc
mov
fcompl
inc
ja
sti
sub
xor
jmp
dec
mov
outsb
sbb
cmp
jae
divl
xchg
jns
lret
popf
xchg
imul
cwtl
xchg
adc
lret
test
enter
lahf
adc
movb
xor
sub
cmc
bnd
jl
test
icebp
cli
loopne
adc
jb
sbb
inc
sub
imul
repz
les
xlat
push
cmpsb
lds
lcall
lret
bound
out
mov
pop
xor
test
xchg
mov
fidivrs
mov
pop
ss
cld
add
icebp
fsubs
ds
mov
jle
mov
jecxz
mov
mov
push
test
sub
jbe
js
pushf
inc
dec
pop
jae
mov
arpl
mov
jno
mov
repnz
mov
lds
and
lret
popf
push
mov
mov
fadds
mov
adc
scas
jl
and
jns
sahf
pop
js
cmp
icebp
cld
mov
push
dec
das
lahf
fnstsw
hlt
sub
jnp
cld
or
pop
sub
mov
out
mov
and
xor
lock
lret
cmp
repz
jno,pt
mov
sbb
cmp
cmp
int3
data16
pop
add
fsubp
inc
jle
enter
jnp
dec
sarl
aas
sub
xor
adc
inc
jne
dec
adc
arpl
mov
mov
inc
call
mov
mov
mov
adc
sub
add
rclb
fcomip
dec
and
out
mov
movsl
testb
mov
out
push
stos
jnp
lret
fucom
cmpsl
mov
push
jo
popf
scas
fs
xchg
sbb
pusha
ret
push
idivb
imul
mov
push
push
gs
dec
push
jge
push
add
lahf
fiadds
iret
call
fldl2t
icebp
jge
push
push
or
push
cwtl
add
cmp
fsubrs
adc
les
adc
mov
mov
sub
test
sub
fwait
ror
sbb
mov
enter
and
mov
repz
mov
inc
xor
sbb
mov
dec
call
icebp
arpl
mov
ret
xchg
jl
mov
mov
int3
sti
xor
pop
mov
ljmp
cmc
mov
int3
imul
int3
ljmp
call
loope
jno
imul
scas
mov
mov
sub
pop
sub
das
mov
insb
push
push
sbb
popa
fsts
pop
mov
stos
lds
data16
dec
inc
inc
std
jns
mov
push
shlb
and
leave
sbb
lahf
fsubrl
cmp
lahf
test
ret
cmp
inc
xchg
cli
cmc
out
add
ret
pop
divl
mov
sub
pop
and
add
enter
fcomps
mov
fs
cmp
push
push
cltd
sub
jnp
and
and
out
jl
lcall
ss
dec
aaa
and
xchg
mov
mov
inc
sub
xor
out
mov
loopne
les
jmp
adc
cmpsl
mov
jns
mov
in
mov
fnsetpm(287
dec
sbb
add
leave
cmpsl
add
pop
inc
or
dec
in
push
nop
xlat
stos
movsl
jne
xchg
pop
and
scas
and
pop
lods
lret
pop
imul
pop
xchg
xor
daa
sbb
sbb
or
pusha
outsb
enter
loopne
mov
inc
cwtl
test
dec
nop
add
cwtl
add
pusha
xchg
movsl
xor
mov
mov
jecxz
arpl
scas
xchg
stos
lds
ja
idivl
add
pop
bswap
into
pop
ds
jp
pop
leave
ret
addr16
sbb
push
test
enter
mov
xor
inc
fwait
imul
pop
mov
fdiv
dec
push
and
in
add
push
mov
ficoms
int
js
jmp
aam
or
push
add
pop
test
mov
repz
hlt
stos
mov
enter
cli
inc
adc
insl
sbb
aaa
inc
cmp
add
sbb
xor
bound
jle
lret
aas
repnz
jp
in
xchg
shll
fsin
int3
jb
lret
xor
sahf
xor
movsb
mov
or
sbbb
inc
loope
mov
sub
xchg
xchg
jae
fimull
aad
xchg
fwait
cmpb
lret
inc
cmp
dec
push
jno
push
arpl
mov
cmpsb
inc
bound
mov
subb
repnz
add
xor
push
loopne
mov
push
jbe
xlat
insb
imul
push
mov
and
call
sub
test
and
dec
xor
jmp
xor
jle
add
in
aam
into
cmpb
sub
ljmp
or
add
pop
sub
pop
add
dec
rcrl
mov
dec
jl
test
mull
add
jmp
or
hlt
or
int
mov
cmp
out
cs
jmp
sahf
jb
sti
and
mov
pushf
ret
push
jns
lcall
bsf
inc
push
ss
subps
mov
add
gs
leave
add
cwtl
addb
outsb
sbb
push
fwait
mov
jo
pushf
mov
fwait
js
push
xchg
mov
shll
push
and
ja
aas
cmpsl
dec
add
inc
push
mov
pop
dec
sbb
pop
stos
cmp
jge
jle
xor
jmp
mov
push
mov
imul
add
scas
pop
xlat
xchg
cmp
call
push
mov
orb
or
adc
mov
mov
repnz
aad
mov
shlb
cltd
pop
loope
mov
in
jl
std
mov
lock
cmpb
sub
mov
cld
cmp
push
add
in
mov
int3
in
repz
sbb
nop
xlat
dec
sub
push
scas
shr
dec
leave
cwtl
dec
xor
stc
pop
andl
cmp
gs
loope
test
or
loop
or
imul
push
mov
lret
pop
fmuls
adc
mov
adc
test
mov
stc
ds
inc
fwait
nop
sbb
add
sbb
das
xlat
cs
popf
pop
add
cmp
jp
dec
push
sub
movsl
ret
lret
js
popf
mov
mov
mov
lea
sbb
jge
rcrl
lahf
sbb
mov
aas
xchg
lds
imul
in
mov
nop
push
mov
push
mov
imul
idiv
stos
clc
cmp
stc
fsubs
sub
cltd
cli
jne
aad
dec
leave
pop
lock
out
jmp
test
mov
inc
stos
pushf
dec
imulb
push
imul
xchg
lock
pop
mov
test
mov
push
cs
popa
push
cmp
jp
rorl
cmpsl
xlat
add
sbb
xor
push
jle
or
adc
out
sub
js
push
repnz
xchg
subl
and
or
jne
gs
out
xchg
adc
mov
xchg
aad
pop
test
insl
in
into
pop
daa
lret
inc
and
pop
jne
xchg
in
mov
fldcw
xor
or
hlt
mov
out
enter
fsubr
aam
fcoms
mov
jne
jae
dec
int3
inc
mov
mov
mov
fisubs
out
cld
mov
push
jns
lcall
bound
or
pop
dec
adc
push
sub
sub
aad
insb
sub
push
dec
jb
mov
lods
push
dec
xchg
cmp
int
inc
sub
imul
cmp
pushf
pop
bnd
imul
sub
sub
xchg
rcl
lcall
mov
xor
aaa
mov
outsl
es
movsl
ret
push
nop
leave
jmp
mov
inc
mov
or
cld
jle
js
sbb
inc
stos
inc
push
cltd
xchg
int
dec
hlt
pop
stos
out
push
lret
scas
xlat
insb
mov
dec
out
inc
in
outsl
or
aam
int3
fwait
lea
iret
sbb
inc
test
and
hlt
and
xchg
call
or
xchg
dec
push
or
or
xor
sub
aaa
mov
cmp
cmp
test
and
test
fbstp
push
cmp
sbb
push
sbb
mov
xor
xchg
and
sbb
mov
lret
mov
stos
dec
jb
mov
sti
test
aas
cmp
cltd
push
mov
bound
mov
jmp
cs
mov
lcall
xor
rsm
lret
or
mov
sahf
pop
js
pop
roll
pushf
or
cmp
lahf
inc
pusha
pop
or
ret
xchg
fwait
leave
sbb
shlb
idivb
into
pop
sar
decl
and
dec
push
and
mov
imul
xchg
jmp
enter
mov
xchg
jns
in
pop
fldt
imul
adc
outsb
imul
mov
insl
cltd
or
rolb
cmp
add
add
xchg
divb
ds
add
lahf
ja
call
jbe
sarb
sbb
cmp
push
lds
repnz
jne
mov
push
xchg
adc
fstpt
movsb
rcrl
mov
dec
rcr
lret
cmc
push
cmp
mov
inc
jmp
int
dec
xor
addr16
ja
lahf
jle
push
cld
push
cmp
test
sbb
or
fcmovnu
icebp
cwtl
inc
sub
add
adc
fldl
scas
dec
jnp
adcl
jmp
pusha
mov
jmp
mov
es
jne
cld
add
mov
add
mov
xor
lds
fwait
mov
lods
pop
mov
push
mov
lahf
in
or
mov
lea
into
out
mov
and
ret
or
imul
hlt
dec
or
into
add
fdivs
pop
out
pop
push
jno
ret
loopne
dec
mov
sti
mov
std
je
mov
rorb
aas
lea
popf
sti
sub
rcrl
popf
xor
sbb
mov
in
dec
lahf
mov
adc
push
mov
dec
sub
inc
ljmp
jno
mov
ss
lret
sub
push
jno
add
mov
lods
inc
pop
outsb
cmp
jg
imul
sbb
or
push
cmpsb
js
rorl
fdivrl
cwtl
jb
popl
mov
out
mov
push
xorb
xor
inc
outsl
roll
mov
sub
push
repz
lcall
add
fistl
sar
sbb
rclb
sbbb
cmc
clc
or
sbb
cmpsl
or
fs
pop
push
jne
jae
bound
dec
xor
aad
mov
and
cltd
scas
or
push
repnz
pusha
bound
dec
add
or
test
stc
fstps
mov
xor
push
les
out
fwait
xor
jne
and
mov
mov
test
mov
gs
adc
push
lret
addb
imul
add
lret
jge
pop
scas
jbe
das
cmc
pop
push
mov
cltd
mov
or
add
inc
jge
inc
sbb
pop
mov
sub
loopne
ret
mov
clc
dec
fdivrs
jb
push
cmp
mov
mov
xchg
mov
sub
cmpsb
int
outsl
jae
cmp
popf
mov
enter
sbb
inc
mov
mov
pop
push
sbb
out
iret
lods
sahf
mov
aam
repnz
stos
jle
das
dec
mov
shll
dec
xchg
leave
clc
shrl
jmp
xchg
std
xchg
in
lahf
lret
push
aaa
gs
icebp
enter
cmc
inc
enter
cld
jg
popf
int
and
repnz
or
clc
mov
testb
xchg
lahf
inc
sahf
sbb
push
cli
dec
rorb
scas
mov
imul
aas
insl
lret
rcll
ret
sbb
imul
mov
insl
loopne
sbb
subb
aam
mov
push
insb
lret
cmp
xchg
mov
ss
aas
cmpsl
dec
mov
mov
popl
jecxz
cwtl
test
xchg
movsb
xchg
pop
incb
sti
ret
add
dec
insl
lahf
xchg
in
lds
sub
out
scas
popf
test
inc
inc
loope
sbb
add
adc
or
adc
sub
mov
jne
imul
mov
into
jae
cmp
scas
xchg
insb
lcall
mov
jge
loopne
les
inc
test
outsl
cmp
dec
lock
adc
or
int3
rorl
scas
inc
arpl
int
add
push
inc
test
and
incb
xor
xchg
scas
cmp
icebp
add
push
pop
pop
rorl
push
xor
stos
mulb
push
sub
lahf
pop
pop
mov
mov
cmpsb
sahf
xor
xor
lods
push
jnp
jns
dec
pop
jle
loop
mov
mov
bound
or
loopne
xor
push
xchg
adc
xchg
mov
shl
mov
int3
out
inc
inc
sbb
inc
dec
pop
iret
cmpsl
ret
xchg
std
ret
rcl
dec
cmpsb
inc
test
sub
dec
xchg
mov
hlt
js
inc
mov
pop
push
mov
std
into
pop
dec
imul
pop
mov
movsl
xchg
fnstsw
mov
lret
loope
mov
mov
clc
mov
cltd
orb
xor
in
pop
xchg
xlat
stos
push
mov
or
lret
sbb
out
ds
test
mov
notl
mov
pop
cmp
and
nop
jp
pop
or
xchg
pop
xor
fs
push
sar
mov
add
dec
push
sub
push
sbb
pop
mov
jge
inc
xchg
mov
fwait
push
sub
andl
std
jbe
push
pushf
cltd
imul
inc
cwtl
or
movsl
rcrb
lods
pop
cltd
pop
mov
mov
mov
xlat
pop
pop
test
int3
pop
sub
cmp
push
shr
mov
xor
pop
jmp
xchg
js
fwait
push
stos
shrl
lea
lea
inc
mov
push
clc
sti
mov
jns
add
enter
xlat
jl
sti
mov
scas
vaesenc
adc
mov
int
mov
adc
adc
xchg
jmp
test
dec
cmp
add
add
lret
cmpsl
imul
mov
add
mov
or
adc
cmp
test
sbb
scas
rcrb
fcom
inc
mov
xlat
loop
xchg
inc
idivl
int
cmc
sbb
push
sub
in
fistpll
stc
lods
dec
and
xchg
imul
mov
mov
scas
jnp
sti
jb
fwait
jns
cltd
enter
inc
inc
xor
xor
enter
inc
push
or
aad
xchg
dec
push
test
mov
addb
mov
rcrb
mov
clc
jnp
mov
lock
mov
push
inc
ret
mov
adc
lods
cmpsl
mov
cmpb
mov
test
lret
inc
in
mov
mov
gs
stos
flds
adc
lret
popf
bound
lret
gs
cmp
addr16
mov
lods
popa
push
cmp
and
add
movsl
xchg
mov
push
push
push
ret
addr16
pusha
or
icebp
xor
jge
fwait
leave
loop
les
aad
xorl
sbb
add
jl
mov
sbb
push
das
mov
pop
test
sbb
imul
xor
loope
out
jg
inc
cltd
out
mov
cwtl
xor
leave
sbb
sub
enter
dec
lret
dec
mov
mov
push
test
cmpsl
ss
sub
cmp
mov
test
and
clts
xchg
xor
testb
mov
test
aas
add
inc
xor
push
loop
mov
dec
lea
das
divb
out
js
xor
xchg
mov
and
push
inc
ds
add
lea
inc
push
ljmp
cmp
pop
stos
xchg
stos
jo
pop
jb
enter
jmp
lods
inc
ret
xchg
jle
push
jg
mov
push
push
jo
stc
and
adc
mov
add
inc
or
add
ja
mov
insb
xor
dec
mov
and
xchg
lds
rclb
fs
sbb
add
fnsave
sti
ret
or
inc
in
jo
shlb
cwtl
dec
push
or
aas
push
mov
lds
insb
xchg
imul
pop
xchg
ret
jecxz
je
imul
mov
iret
fbstp
aad
cmp
xchg
xor
movsb
dec
enter
mov
in
movb
cwtl
mov
mov
lcall
push
mov
and
test
mov
and
sub
mov
xchg
mov
dec
pushf
mov
xchg
dec
data16
adc
add
cmpsl
adc
aam
jae
mov
jg
shrb
add
jnp
lret
roll
mov
popf
leave
xchg
jnp
std
xlat
xchg
in
jge
push
pop
pop
mov
fisubl
sbb
pop
div
push
aas
scas
mov
stos
adc
and
dec
stc
pop
fwait
xlat
or
pop
mov
xor
add
xchg
push
out
sti
dec
pop
ret
push
aas
adc
pop
jge
cmp
add
dec
mov
popl
std
call
inc
adc
lods
cmp
test
mov
jecxz
jno
nop
fwait
lahf
frstor
in
sbb
addr16
mov
int
jecxz
cmp
mov
xchg
addr16
dec
sbb
cli
stos
scas
sbb
cwtl
push
sub
dec
sbb
and
lahf
sbb
mov
ja
jo
add
icebp
or
fdivl
sub
sbb
ljmp
mov
negl
pusha
loope
mov
adc
lahf
scas
je
imul
inc
add
xchg
fsubrs
jge
mov
add
pop
repnz
cmp
repnz
test
daa
cmpsb
jge
xlat
sub
push
gs
inc
lock
dec
sbb
nop
test
mov
dec
mov
fwait
enter
ret
add
mov
jb
sbb
fisttps
push
mov
cli
scas
mov
rcll
out
xor
and
iret
ret
lahf
lds
adc
jno
cld
inc
sbb
mov
cmp
sub
xor
xor
ja
int3
in
int
sbb
arpl
push
push
adc
stos
popf
jge
mov
mov
mov
gs
xor
xchg
stos
xor
arpl
fcomip
pop
lret
inc
cmp
jbe
ljmp
adc
xchg
pop
mov
inc
dec
scas
cmp
cltd
sub
or
roll
js
or
sub
sti
and
sbb
pushf
inc
inc
pop
pop
scas
pushl
shrb
movsb
push
rcll
mull
pop
cmp
in
cmp
pop
push
lods
cmp
and
mov
out
mov
mov
loope
mov
pop
cmp
lcall
mov
and
sub
pop
mov
sub
out
xor
cld
mov
mov
out
mov
idivl
ret
pop
dec
lock
add
inc
mov
in
fldenv
fcompl
stos
lret
divb
and
scas
imul
pop
push
lea
push
pop
lods
mov
mov
cmpsl
push
leave
cld
sbb
xchg
mov
jae
adc
pop
andb
inc
mov
pop
push
mov
add
cwtl
ljmp
xchg
jmp
lcall
scas
mov
push
mov
out
cwtl
push
andl
sbbl
pop
testl
inc
movsb
jne
xor
xchg
frstor
pop
test
add
mov
xor
add
js
dec
or
push
inc
jnp
bound
es
popf
sbb
or
and
or
jb
insl
addr16
adc
movsl
mov
mov
xor
sub
jge
mov
or
je
cmc
inc
xor
sti
mov
sti
jne
adc
jle
cmp
push
out
adc
xor
testb
cwtl
cwtl
scas
test
jns
dec
push
xchg
mov
push
pusha
sub
stos
mov
dec
test
cs
mov
mov
das
xor
mov
das
bound
data16
test
inc
xor
lds
ja
stos
inc
lcall
ret
or
lods
inc
inc
mov
rclb
xchg
arpl
popf
dec
sub
test
nop
pop
loop
xchg
push
adc
addl
jmp
fcompl
rcll
imul
sub
mov
and
popf
stc
and
imul
inc
mov
xor
xchg
cwtl
xchg
jmp
dec
push
sbb
stc
gs
dec
fisubrl
lds
xchg
mov
cmp
dec
mov
loopne
int
sbb
lock
sti
in
iret
sbb
add
imul
xchg
les
inc
pop
leave
sub
pop
ret
pop
mov
xor
imul
xchg
stos
pop
add
push
inc
jmp
mov
sbb
and
add
inc
lods
jb
mov
js
std
mov
mov
cmp
mov
daa
aas
jnp
les
rclb
xor
leave
xlat
xchg
xchg
xchg
mov
nop
dec
cmp
push
cmc
loopne
cmc
pop
mov
jo
jecxz
and
insl
sbb
mov
adc
bnd
popf
scas
int3
jl
mov
inc
xor
lcall
or
int3
pop
sub
push
or
cltd
cltd
sub
dec
push
add
int
hlt
pop
lods
ret
ret
out
movsb
mov
clc
cmp
jge
icebp
sar
imul
pop
jae
fsubl
cmp
push
in
scas
dec
shrb
sbb
imul
cli
imul
or
fldcw
aaa
or
cwtl
fmul
mov
jb
mov
mov
cmpsb
cmpsb
es
mov
add
sub
mov
jo
xchg
dec
push
ret
call
dec
and
fwait
sbb
sti
and
fildll
cmc
push
pop
add
daa
add
mov
jge
addr16
stos
sbb
jp
inc
push
popf
push
rol
pop
mov
pushf
popf
cli
pop
fs
pop
mov
movsb
clc
mov
add
or
xchg
sub
mov
xchg
sbb
mov
jbe
cmp
arpl
mov
les
sti
jmp
inc
addr16
repz
cmp
test
xor
outsl
test
sti
sbb
mov
dec
xchg
or
ficomps
mov
cmp
test
lds
cmp
push
mov
cmpsl
out
int3
xlat
loop
jl
dec
mov
pop
daa
rcr
mov
fisubrl
test
imul
mov
jae
shrb
lods
jne
xchg
jo
mov
popa
popa
mov
out
js
pop
and
pop
sub
ja
inc
ja
pop
cmpsl
add
test
or
dec
and
xchg
imul
pop
inc
mov
lods
out
dec
sbb
sub
fwait
outsl
jle
sahf
les
jecxz
mov
sub
loopne
pop
push
or
mov
push
rcr
jne
dec
sahf
push
mov
repz
xor
jg
cmp
repz
adc
add
and
adc
pop
push
dec
iret
sbb
lds
or
inc
push
leave
add
add
sbbl
insl
cwtl
insb
and
mov
aaa
sbb
xchg
mov
mov
dec
sbb
dec
sbb
fisttpl
inc
popf
lret
cwtl
nop
mov
ret
dec
jmp
test
in
add
repz
fdivl
mov
movsl
inc
sbbb
pop
mov
pushf
fsts
popf
in
test
aad
add
sarb
popa
repz
ret
rcrb
dec
inc
mov
adc
std
mov
fcoms
mov
adc
movsb
lcall
lret
pop
push
stos
aas
mov
iret
jp
gs
in
mov
int3
out
inc
fistpl
dec
inc
sbb
lock
adc
xor
mov
and
xor
mov
call
inc
outsl
imul
mov
cld
sti
mov
hlt
mov
add
jnp
add
insb
push
pushf
xor
jno
mov
rcr
or
pop
movsb
sub
dec
out
in
sbb
mov
fistps
mov
inc
cld
xorl
push
dec
shlb
jge
mov
je
pop
or
pop
scas
jbe
sub
pop
jl
and
sub
lds
mov
push
js
jle
mov
mov
and
aas
push
daa
or
mov
sbb
mov
fwait
xlat
mov
lret
mov
ret
cwtl
aam
mov
add
mov
loope
lcall
leave
cmpsb
inc
pop
out
mov
enter
add
hlt
sbb
lods
imul
mov
cmc
push
gs
fdivl
out
push
mov
aam
xchg
mov
dec
cmp
and
push
xchg
inc
mov
scas
lock
cltd
loope
pop
sub
xchg
stos
push
subb
lret
movsl
sbbl
stos
test
sbb
xchg
dec
sbb
lea
lret
fucomp
je
movsl
lods
rolb
in
jmp
cmp
pop
insl
cmp
mov
push
mov
mov
mov
sub
enter
pusha
jle
cs
jmp
fists
movl
fnsave
xor
rcll
sti
dec
push
add
hlt
rcrb
mov
ret
pop
jne
stos
mov
enter
lea
cmp
hlt
jne
xchg
dec
push
mov
test
je
enter
dec
fstps
mov
sbbb
call
sbb
imul
cwtl
lahf
lds
aas
insb
and
cltd
pop
dec
pop
sbb
xor
push
sub
or
scas
ficomps
adc
add
dec
and
sub
jp
jp
out
loopne
fwait
inc
mov
jb
sbb
mov
fistl
mov
push
movsl
push
cld
dec
inc
xchg
xchg
push
mov
push
push
sbb
or
pop
sub
loopne
sub
and
jmp
add
fadd
sti
mov
cmp
push
pop
xor
dec
ja
inc
shlb
xchg
dec
and
pop
test
sub
and
lods
movsl
ret
es
jae
adc
cmp
ret
cmp
jne
jecxz
push
dec
sbb
imul
out
adc
aaa
mov
out
mov
clc
insb
enter
mov
fdivs
mov
jecxz
lock
adc
mov
test
add
adc
mov
lahf
lret
jecxz
jns
rcrb
ds
pop
add
cwtl
xchg
ficoml
xor
movsl
mov
cs
sahf
pop
jno
dec
sub
test
imul
lods
dec
int3
sbb
push
dec
jae
cli
fs
lods
xchg
dec
pushf
dec
sub
dec
mov
inc
or
xor
sub
lcall
rol
lock
push
cltd
lods
rcl
lahf
inc
adc
pusha
inc
xchg
mul
das
jle
scas
mov
stc
jl
push
xchg
imul
jmp
mov
addb
sub
add
repz
mov
pop
popf
jbe
ret
pop
add
and
aam
aas
cltd
pop
cmpsb
loope
jecxz
and
and
mov
sbb
lock
adc
addl
lret
sbb
in
gs
fcmovnb
sbb
sti
call
pop
mov
incl
in
repz
mov
test
sbb
add
add
movl
mov
sub
cmpb
mov
mov
push
mov
mov
into
mov
xchg
mov
and
inc
push
lea
mov
scas
ret
dec
pushf
xchg
ret
dec
test
insl
mov
xchg
sbb
pop
dec
jge
mov
xchg
add
subl
add
and
dec
fs
xchg
mov
mov
inc
push
fisttps
and
jp
or
cmpsl
std
and
jle
rcrb
pushl
cmp
les
mov
adc
mov
xlat
insb
inc
pop
adc
mov
mov
es
gs
xchg
cmpsb
push
cltd
enter
mov
pop
rcrb
hlt
inc
cmp
aas
push
mov
inc
add
inc
cmp
cmp
mov
adcb
aas
xor
iret
fucomip
in
jl
mov
out
std
mov
adc
fistpll
add
fsubrl
rorb
mov
movsb
fwait
jne
enter
pop
jnp
push
imul
xor
int
cmp
xor
xchg
sbb
and
test
xchg
fsts
scas
lret
adc
mov
outsb
enter
stos
add
adc
jl
aas
pusha
pop
mov
sbb
add
hlt
and
insb
dec
cmp
dec
in
xor
cwtl
dec
cmp
mov
jo
popa
popl
ret
out
fwait
or
cmpsb
jge
mov
sbb
inc
fbld
pop
cwtl
sub
int
xor
hlt
js
insb
lea
adc
sti
dec
mov
mov
push
movups
loopne
addl
xlat
jbe
lret
les
pop
mov
pushf
out
inc
iret
and
in
inc
pop
mov
repz
pop
sbbb
sbb
adc
add
cmpsl
jmp
adc
inc
and
subb
cmp
add
adc
stos
shl
jle
or
lds
daa
mov
aad
pushf
fisubrl
sub
mov
xchg
mov
mov
mov
inc
lcall
sbb
lret
jnp
into
sbb
mov
mov
mov
loopne
inc
shlb
or
mov
mov
sar
mov
jle
mov
ret
data16
add
jnp
and
xchg
inc
xchg
or
and
call
addr16
cltd
imul
out
leave
inc
cli
sub
aam
or
int
mov
xlat
dec
mov
mov
repz
cmp
lahf
jmp
and
mov
mov
ret
pop
dec
add
fistps
push
push
mov
gs
hlt
jno
es
iret
dec
fsub
rcll
loope
adc
mov
mov
jecxz
push
dec
int
lret
pushl
fs
add
ret
pop
jge
push
stos
shll
fimuls
push
jbe
scas
mulb
mov
frstor
mov
rorb
jae
adc
jmp
js
dec
adc
sub
or
add
aas
les
mov
clc
iret
out
cmp
out
imul
push
ret
fld
clc
rolb
inc
mov
jp
cmp
mov
loopne
hlt
and
mov
sub
cmpsb
sub
movsl
cmp
xor
push
xchg
pop
enter
popf
je
adc
out
mov
pop
cmp
punpcklwd
cltd
fs
dec
pushf
pop
add
je
inc
sbb
fcoml
sbb
sarb
outsl
insl
mov
lods
frstor
pop
imul
jge
jbe
mov
repz
inc
ss
mov
adc
mov
fistps
mov
or
ja
shrb
jnp
adc
jbe
jg
xlat
paddd
aad
in
popf
scas
jmp
jmp
rcrb
loopne
jl
mov
dec
daa
mov
adc
dec
and
in
movsl
ret
inc
sub
mov
and
popa
mov
lea
iret
pop
mov
cld
mov
sbb
mov
adc
inc
lcall
add
popa
inc
sub
or
ds
stos
je
pop
ss
mov
xchg
in
lahf
adc
clc
in
inc
inc
mov
pop
sbb
xlat
pop
pop
inc
aad
pushf
cmp
mov
mov
scas
push
sarb
std
out
dec
subb
lea
popf
movsb
shrl
mulb
mov
dec
subl
mov
cmpsl
jno
and
sbb
mov
xchg
fisttpl
popa
mov
stos
ja
jl
out
push
inc
add
scas
push
sub
push
xchg
sub
fcmovne
mov
test
scas
dec
cmp
std
lret
add
dec
xchg
roll
or
add
xlat
and
mov
and
push
aam
ret
xchg
mov
pop
pop
enter
cmp
sti
push
shrl
sbb
arpl
mov
mov
fnstsw
mov
stc
pushf
lcall
aas
ficoms
divl
out
jbe,pt
mov
cmp
pop
and
inc
mov
cwtl
aas
stos
or
icebp
inc
adc
push
sti
mov
pop
test
pop
cld
cmc
jmp
mov
mov
cwtl
push
movsl
fsubrl
lcall
jle
int3
pop
jno
or
and
sarl
lds
jne
repnz
dec
leave
xor
inc
adc
dec
lcall
add
rorl
inc
lcall
dec
cmp
push
das
mov
mov
std
lcall
jmp
xchg
adc
inc
das
fdivs
push
xor
mov
dec
and
fsubrl
dec
aad
test
mov
fld1
gs
int
cmpsb
inc
cmc
fidivrs
xor
mov
xchg
mov
loopne
pop
push
jae
int
inc
xor
mov
mov
push
mov
mov
and
fstl
ret
inc
xchg
sti
dec
push
inc
aaa
lret
jecxz
add
and
jns
popf
lods
std
sbb
pop
mov
fidivs
mov
mov
mov
insl
xor
stos
pop
xor
cs
cmpsl
aad
jb
mov
jge
pushf
dec
data16
rorl
xchg
pop
push
insb
pop
sahf
push
add
jo
outsl
ret
jne
cmp
cli
jecxz
jecxz
inc
sbb
lods
dec
sub
fnstcw
and
xor
jl
dec
xchg
pop
out
push
icebp
and
test
dec
mov
dec
ss
scas
push
js
mov
pop
xchg
mov
je
cli
inc
out
and
xor
cli
pop
ret
add
mov
sub
hlt
mov
icebp
xchg
xchg
sub
jne
cwtl
lds
outsb
in
pop
jnp
in
mov
push
fwait
pop
cmp
insb
daa
adc
push
sub
call
lret
cli
add
mov
or
xchg
cmc
sarb
out
dec
movsl
or
iret
pop
sbb
adc
scas
mov
mov
int
inc
add
sbb
insl
xchg
lds
aas
aad
lods
movsl
push
repnz
and
popf
lret
out
or
bound
fs
adc
sub
jmp
or
mov
or
or
mov
jne
mov
adc
xchg
mov
cld
mov
or
xchg
push
jecxz
decb
js
xor
cli
sbb
adc
jae
and
jns
mov
inc
in
inc
cld
test
add
jns
mov
mov
fwait
insl
cmovae
nop
push
jae
mov
and
cmpsb
lcall
imul
dec
and
inc
xor
je
push
push
mov
inc
ret
pop
push
xchg
add
int
lahf
xchg
xchg
sub
iret
push
dec
sysret
add
into
add
in
clc
add
jo,pn
pop
xchg
or
mov
sahf
mulb
scas
cwtl
push
xchg
lret
stc
and
ror
sbb
imul
push
jne
faddl
lods
mov
in
outsl
and
lds
dec
push
mov
dec
mov
leave
dec
dec
adc
xor
sub
inc
inc
test
add
test
addr16
cmpsb
and
add
in
pop
or
inc
push
add
imul
mov
or
lea
mov
mov
jae
xor
jp
cmpsb
mov
cmp
mov
push
jge
insl
or
test
inc
mov
outsl
push
ret
add
xor
es
pop
decl
xchg
push
es
fsubp
inc
loopne
daa
push
inc
adc
add
repz
xor
ret
push
push
xor
jge
push
lods
arpl
insb
inc
inc
xor
clc
jmp
pop
mov
jo
jl
sbb
add
mov
imul
pop
roll
je
cli
lods
icebp
imul
les
cli
mov
movl
jb
lret
lods
dec
sbb
sbbl
enter
jae
add
cmp
lcall
and
ja
mov
mov
add
pushf
repnz
jmp
aad
jle
iret
clc
inc
js
jle
xor
xor
cmc
or
inc
jge
in
mov
inc
xor
adc
pop
mov
mov
out
ret
jb
and
pop
mov
or
clc
clc
outsb
lahf
push
ss
fwait
popf
out
cmp
icebp
bound
hlt
mov
inc
popa
mov
test
xchg
lcall
pop
jmp
test
pop
and
pop
and
int
aas
add
push
fwait
lahf
gs
fdivrl
sbb
and
mov
mov
test
divb
add
aad
jp
loop
arpl
in
movsl
xchg
or
jl
push
stos
push
test
xchg
les
mov
in
mov
bound
add
inc
enter
or
inc
add
push
adc
lock
pop
inc
fcmovnb
add
inc
pop
and
cltd
lods
adc
rorb
dec
loopne
mov
or
jo
jl
rcrl
rorl
push
cmp
xchg
aas
jno
ret
mov
cmp
pop
cmp
aas
push
and
das
daa
ja
jo
pop
fnsave
mov
sub
ss
pop
jno
xor
repz
jns
lret
sbb
fwait
cmp
fidivrs
addl
scas
xchg
ss
mov
add
pop
adc
pop
movsl
dec
sbb
aam
shll
dec
ret
pop
sbb
jo
sti
test
sbb
bnd
bound
aad
pop
push
in
dec
movsl
inc
push
stos
push
inc
shlb
mov
mov
lret
subl
stos
out
bound
ljmp
outsb
or
cltd
cmp
ljmp
mull
pop
fisubl
je
or
pusha
pop
or
xchg
dec
xchg
jbe
mov
jb
adc
popf
sbb
rolb
or
cwtl
add
pop
int3
hlt
imul
dec
movsl
cmp
mov
push
js
stos
fisubl
push
mov
sub
pop
jns
mov
std
bound
divb
lret
xor
cwtl
or
xor
aas
sub
cmpsb
aas
dec
cmpb
les
sbb
cmpb
xchg
mov
push
push
mov
pop
loopne
orl
je
or
shrl
dec
fsubs
rol
aad
push
xor
mov
sbb
int
inc
imul
sbbb
movsl
ret
fwait
xadd
out
aas
das
stos
sub
push
dec
leave
inc
lods
mov
push
lret
and
jge
mov
sbb
pop
test
xor
xchg
inc
int
add
pop
dec
scas
xchg
out
cltd
or
push
stos
scas
push
and
out
lods
cmp
call
add
inc
pop
shlb
mov
xchg
xchg
jmp
mov
or
cmpb
ds
jl
fwait
scas
out
jb
std
jne
add
out
into
nop
dec
and
xor
cmpsb
jge
xlat
jp
je
adc
jg
lahf
call
jbe
xchg
enter
lods
call
mov
xchg
subl
imul
pop
mov
xchg
rcr
cltd
pop
sub
lea
jl
das
mov
mov
add
pusha
push
lods
shrb
dec
mulb
add
xor
je
rcl
lret
pop
adc
test
and
stos
xchg
add
push
xchg
add
mov
xchg
mov
scas
mov
aad
inc
push
and
movl
arpl
repz
lahf
add
loopne
subb
xchg
adc
lret
mov
mov
xchg
push
clc
fmuls
cltd
cmp
mov
inc
lret
enter
enter
mov
lret
test
sarb
dec
cmp
dec
sarb
aam
push
sahf
shll
xchg
push
rcrb
inc
inc
pop
push
movsl
in
aaa
insl
fld1
jb
mov
aam
fsubrs
add
ss
test
jge
dec
nop
jne
mov
mov
pop
mov
jne
jae
cmp
fildl
jno
fsubrl
push
adc
rolb
push
in
mov
fimuls
fwait
lock
push
in
loop
adc
jle
pop
shrl
stos
test
ss
mull
ljmp
popa
outsb
xchg
push
inc
dec
fcmovu
insl
mov
pusha
add
fildl
stos
mov
xchg
stos
inc
push
push
sub
push
or
dec
test
xor
lahf
inc
leave
enter
push
mov
mov
std
sbb
imull
mov
icebp
cmp
lret
push
sbb
mov
stc
sbbb
sub
imul
dec
mov
cmpsl
push
mov
mov
imul
push
xchg
aaa
imul
lcall
test
sub
leave
movsb
iret
call
dec
call
cmp
pop
loopne
push
cmp
fwait
jecxz
lahf
xchg
movsb
mov
ljmp
jb
ja
xorb
ret
sbb
inc
adc
movq
xor
jl
lret
push
xchg
sti
jle
dec
sbb
mov
fwait
mov
nop
cmp
xor
sub
inc
lcall
push
scas
jno
popa
fimull
or
push
stos
jg
xor
push
dec
fisubrs
nop
dec
jno
jno,pn
fsub
fstps
push
daa
pushf
popf
movsb
mov
lds
rcrb
mov
jp
sahf
add
lahf
fdivrl
daa
xchg
pop
dec
and
mov
adc
lahf
fidivrl
cmp
movsb
js
cmc
fisubs
jmp
fdivrs
pop
sbb
push
cmpsb
jns
mov
xor
and
push
test
test
or
jge
arpl
aaa
jp
sahf
testl
mov
lods
jmp
repz
into
std
mov
jnp
ret
xchg
sti
jnp
cmp
stos
and
cld
mov
jo
leave
fwait
daa
les
repz
inc
mov
lret
mov
stos
jg
or
lods
push
jg
dec
sbb
cmp
xor
repnz
lds
and
bound
inc
addb
pop
ret
scas
lods
in
sbb
hlt
mov
sub
lods
mov
mov
arpl
sub
add
and
pusha
push
dec
inc
cmp
inc
fwait
xor
jl
js
fstps
enter
dec
push
pushl
mov
sbb
sub
inc
cwtl
mov
dec
cmp
movsl
dec
jg
lods
xlat
aas
call
mov
lahf
jo
jge
and
js
outsl
or
cmpsl
fstpl
push
mov
insb
aaa
xlat
xor
clc
push
test
cmp
dec
nop
idivl
das
fmuls
xchg
cmp
or
jg
jno
push
mov
dec
sbb
out
mov
jae
mov
mov
mov
lods
push
sbb
jbe
test
leave
aam
xor
dec
lret
repnz
pushf
dec
cmpl
iret
in
mov
mov
jg
dec
repz
pop
shlb
mov
mov
mov
or
stos
shll
mov
jno
inc
and
stos
sti
push
cmp
jp
ror
outsl
mov
cmp
xchg
imul
dec
xchg
push
popa
jecxz
cmp
orb
or
jo
test
fdivl
in
adc
add
dec
loop
mov
mov
push
xor
pop
lds
pop
adc
cmp
movsl
cli
imul
test
shll
stos
pop
outsl
inc
aad
stos
mov
scas
fwait
pop
push
dec
inc
mov
call
xor
pop
and
inc
mov
inc
outsl
aam
dec
adc
pop
xchg
mov
loope
mov
js
cld
xchg
lahf
lret
push
xor
sbb
test
lcall
cli
and
gs
pushf
lahf
pop
sbb
and
rcr
shlb
pop
mov
push
inc
in
popl
add
mov
mov
shll
into
stos
cld
push
cmp
adc
mov
fcmovne
aad
cmp
scas
outsb
dec
cmpsl
push
imul
xorb
loope
js
cmpb
mov
adcl
mov
push
in
call
and
cwtl
dec
movsl
jp
xchg
mov
sub
movsb
jno
cmpsb
clc
sub
jo
mov
rolb
iret
add
jnp
pop
sub
ret
jl
xchg
cmc
cwtl
xchg
mov
cli
mov
movsl
jmp
cmp
call
test
in
mov
test
sarl
js
ds
add
sub
insb
and
das
cmpsl
jecxz
cld
push
adc
jno
mov
lcall
into
lahf
push
and
mov
arpl
aaa
lret
test
ret
or
inc
pop
and
dec
xchg
outsb
push
inc
sbb
or
sahf
test
aad
pushf
test
popf
add
pop
cmpsl
fstl
pop
insl
pop
xchg
sub
cmpsb
fidivs
sub
or
cld
or
mov
stc
xor
pop
sub
lret
inc
sarb
add
adc
adc
outsl
mov
jae
xlat
push
mov
int3
and
pop
xlat
cmp
and
jnp
int3
bound
dec
sub
inc
add
cwtl
fldenv
loope
out
mov
std
cltd
andl
xor
ficoml
push
xchg
jae
mov
loopne
jl
cmp
jmp
nop
aad
pop
dec
inc
fwait
in
ja
inc
cmpsb
adc
fnsave
add
mov
xor
xchg
arpl
xor
or
das
dec
mov
movsl
or
adc
mov
fwait
pop
das
fadds
xchg
dec
mov
idivb
int
sbb
jns
aam
addl
cld
dec
fisttpll
pusha
push
inc
pop
push
cmp
or
ja
pusha
in
leave
sbb
sbb
repz
orl
lcall
lea
mov
add
and
adc
cmp
or
sub
lahf
pop
or
cmp
daa
sbb
es
sbb
aaa
sbb
and
sub
mov
mov
mov
add
pop
and
repnz
cmp
adc
out
mov
clc
push
xchg
xor
pop
xlat
outsb
sti
aad
pushf
cli
repnz
pop
out
hlt
pop
inc
or
jg
out
or
jl
insl
mov
jb
pushf
add
fistps
ljmp
hlt
jnp
ja
mov
xchg
xchg
test
cmp
or
lret
addb
adcb
stos
push
xor
jb
mov
lods
dec
cli
push
sub
inc
sbb
xchg
sahf
inc
pusha
test
mov
dec
shlb
jmp
stos
mov
pop
sub
push
inc
sbbb
pop
cmp
mov
fsubrs
sub
mov
adc
mov
cwtl
fisubrs
orb
xorl
rorb
les
pop
jb
push
inc
xrelease
aad
lret
sub
outsl
pop
aad
dec
sarb
xchg
enter
jns
xchg
movsl
pop
loopne
push
movsb
jne
cmp
xchg
scas
sbb
xchg
in
cmp
jmp
jge
mov
addb
test
jbe
sti
data16
lret
pushf
sbb
pop
xor
cltd
push
cmpsl
fnsave
stos
jmp
inc
pop
mov
dec
pop
rorb
inc
adc
shl
push
mov
pop
inc
sbb
or
js
jge
fwait
push
or
push
push
rol
pushf
mov
lods
out
dec
xor
fnstsw
inc
xor
js
clc
je
and
in
arpl
mov
mov
js
mov
cmp
jnp
out
stos
mov
popl
inc
push
xor
and
push
inc
ret
loopne
repz
aaa
pop
push
sub
pusha
fnstcw
lcall
out
fcom
adc
das
add
cmp
mov
adc
cmp
dec
inc
xor
push
adc
pop
das
or
outsb
sbb
sub
or
les
inc
cmp
movsl
sti
sub
mov
imul
dec
xor
inc
sbb
pop
dec
aaa
jo
mov
cli
mov
jne
je
rcl
lret
xor
jne
pop
push
cmp
mov
sbb
iret
test
pop
lds
mov
cmpsb
sbb
test
dec
insb
adc
mov
idiv
push
popa
inc
ret
push
xchg
mov
push
fisubl
push
mov
dec
and
data16
jmp
je
fidivs
cmp
cmp
jge
jp
stos
rcl
roll
cwtl
sub
or
sbb
mov
fwait
mov
mov
dec
xchg
sub
sti
xchg
inc
fstpt
ret
mov
mov
icebp
sti
std
mov
sti
mov
sbb
xchg
add
or
push
ss
repnz
push
leave
mov
sub
pop
hlt
std
pop
mov
xchg
ss
mov
xchg
stc
pop
out
ret
call
bound
pop
stos
es
sub
sbb
test
lcall
imul
xor
stos
mov
fbld
push
lcall
clc
rep
push
dec
popf
lret
adc
sub
inc
sbb
push
jl
push
mov
adc
std
mov
inc
pop
test
push
mov
jge
and
mov
dec
xchg
mov
mov
add
nop
sbb
add
and
je
decl
stc
fsubs
and
les
mov
inc
sbb
js
es
adc
pop
fidivrs
xor
mov
cmp
rcrb
mov
faddl
sub
pop
add
xor
ss
orl
inc
mov
jle
sbb
hlt
cmp
aas
jg
daa
je
mov
test
inc
jp
xchg
daa
aad
lock
adc
cltd
insb
insl
push
adc
test
dec
lret
sbb
scas
rol
fisttps
mov
xchg
imulb
cmpsl
xchg
test
add
push
xor
mov
mov
std
repnz
jns
orb
shl
pop
pop
xchg
cmc
movsl
jl
or
fisubs
cmp
cmp
popf
fists
les
or
add
cli
loop
sarb
fcomps
cmpsb
mov
xchg
aad
pop
test
jbe
lods
movsb
inc
pop
pop
push
out
xchg
xchg
ret
fld1
movsl
jbe
jmp
jo
les
inc
idivb
mov
pop
int3
scas
or
fisubrs
divb
mov
pop
aam
in
into
pop
stos
add
insl
pop
mov
daa
fsubl
and
sbb
aaa
in
loopne
pop
sub
icebp
cmp
std
pop
push
icebp
fisttps
leave
xor
ret
sbb
out
lods
xor
xor
or
scas
ret
test
shll
cmpsl
jne
dec
cmpb
cmpsl
arpl
cmpb
inc
xchg
xor
inc
test
and
fcmovu
xorl
aam
mov
pop
cmp
lret
pop
sbbb
hlt
fucom
or
inc
fsubl
js
fldenv
mov
dec
movsb
cmpl
xchg
popf
adcl
mov
fs
int
jmp
mov
xchg
ret
stc
mov
sti
pop
out
cwtl
call
inc
or
icebp
mov
mov
fbld
mov
add
arpl
or
inc
mov
arpl
inc
div
add
iret
inc
out
cmp
inc
adc
aaa
es
pop
out
fsubr
mov
dec
pop
daa
dec
jg
inc
sub
jp
mov
pop
mov
test
push
or
mov
mov
cmp
mov
popf
lret
rcrl
cmp
pop
mov
icebp
mov
cmp
cmc
scas
dec
aad
mov
mov
orb
mov
sbb
cmp
sti
inc
pop
and
xchg
ljmp
sbb
sar
pop
fldl
adc
int
mov
subb
or
mov
fsubs
pop
lret
mov
je
pop
fidivrs
in
push
sarl
in
orb
xor
sub
xchg
jae
popf
xchg
or
popa
call
int
pop
jle
pop
dec
mov
jno
jae
adc
sbbl
jnp
test
sbb
dec
aaa
xchg
and
fwait
jo
sub
mov
pop
rorb
jno
ret
sbb
push
push
mov
insl
test
js
js
jns
sub
push
and
jae
jp
sbb
mov
dec
sbbl
or
sub
nop
sbb
or
or
and
rcll
mov
clc
xchg
dec
pop
jl
addr16
lods
inc
sbb
adc
mov
push
mov
bound
rcl
pop
cmp
mov
rorb
in
jne
js
inc
pop
pop
xor
add
pop
xchg
cli
push
mov
inc
sbb
xchg
xchg
jg
rorb
loopne
insb
inc
fimuls
cmpsb
jg
dec
and
sub
adc
daa
push
andl
pop
and
lock
stc
jbe
or
cmp
bound
pop
sbb
jno
loopne
fdivl
or
insb
cltd
sti
and
pop
rcrl
scas
sbb
sub
sarl
dec
xchg
adc
pop
repz
lcall
or
les
mov
das
insl
adc
mov
bound
daa
dec
jp
stos
inc
push
adc
dec
and
mov
aad
mov
stos
ljmp
mov
inc
bound
dec
push
sbb
test
loopne
pop
and
pop
out
lret
movsl
arpl
push
push
xchg
test
fnstcw
cmpb
dec
mov
fdivrl
adc
and
js
cmpsb
in
imul
icebp
aam
sti
sbb
pop
add
fildll
xchg
mov
dec
subl
push
mov
and
push
sub
outsb
dec
xor
push
test
cmc
and
cmp
pop
adc
xchg
sbb
enter
clc
mov
sar
mov
mov
and
fucomi
insl
movsl
ret
inc
inc
xchg
leave
xchg
mov
andb
dec
filds
fimull
add
aas
imul
dec
es
mov
or
sub
ja
std
lods
inc
scas
cmpsl
dec
mov
inc
xor
jno
mov
stos
add
mov
inc
pop
sbb
pusha
pop
into
xor
and
or
xlat
xor
sbb
aad
push
clc
add
mov
adc
imul
bound
lods
addr16
adc
mov
or
pop
fdivl
inc
and
lahf
sub
sahf
jo
fs
popa
cltd
enter
fbstp
das
jnp
mov
mov
out
mov
jne
dec
mov
xchg
xlat
jnp
lods
jnp
xchg
icebp
pop
mov
mov
mov
sarb
je
and
mov
xchg
add
mov
adc
mov
ds
cmc
leave
popf
xor
fsubrl
pop
addr16
push
sub
std
icebp
nop
xlat
std
jns
outsl
lcall
sbb
lods
sub
dec
jg
les
icebp
mov
pusha
test
int3
sub
or
cmpsb
sub
lcall
test
movsl
cwtl
dec
popa
cmpb
aad
dec
test
jle
jb
jbe
out
and
jle
xchg
call
xchg
pop
push
enter
das
sbb
inc
je
sbb
jecxz
cmp
stos
add
pop
test
fisubs
fisubl
adc
dec
sbb
enter
mov
mov
mov
cwtl
mov
repz
test
adc
jne
dec
stc
daa
jmp
mov
adc
aam
idivl
lret
cwtl
jp
popf
inc
iret
adc
mull
xor
out
cltd
daa
mov
lahf
dec
pop
add
cmovae
es
pushf
sbb
adc
or
aad
push
sbb
sbb
sub
jae
mov
scas
pop
mov
lahf
hlt
dec
js
mov
cmp
das
cld
mov
jae
push
jp
mov
mov
scas
cli
mov
test
add
sbb
dec
xchg
dec
jns
in
leave
aad
out
mov
and
or
inc
pusha
xchg
data16
adc
jns
out
idivl
or
add
inc
jg
popf
icebp
lds
adc
mov
ret
cmpsb
cmp
cmpsl
cmp
enter
out
jp
pop
xchg
and
in
mov
mov
aad
xchg
mov
inc
mov
sahf
add
mov
sub
dec
scas
mov
loopne
test
and
cmp
popf
adc
lahf
sbb
jnp
mov
into
adc
cmp
dec
enter
lds
push
cmp
movsl
mov
fisttpl
stos
xor
imul
pushf
mov
sti
dec
popf
xor
or
aas
sarb
test
add
push
leave
sbb
add
pop
je
mov
and
adc
int3
in
or
mov
push
lds
and
push
sbb
dec
cli
and
into
push
lods
add
jo
mov
sub
lea
jmp
jns
mov
int3
mov
or
and
fnstenv
repnz
dec
push
popa
data16
popf
or
aam
inc
push
addl
ljmp
sbb
mov
ss
into
adc
mov
dec
pop
mov
mov
push
xlat
mov
jl
scas
sbb
jecxz
mov
xlat
cmpsl
add
jne
pop
xchg
push
mov
imul
sbbl
stos
mov
jl
ds
test
push
aad
int
rclb
xchg
in
mov
test
pop
adc
lods
add
pop
push
inc
xchg
dec
lcall
jge
inc
mov
movb
pusha
inc
xchg
dec
inc
sbb
dec
mov
jmp
xchg
cmpsb
mov
mov
rcrl
andl
rcr
insw
fwait
gs
add
mov
ret
pop
shll
push
mov
inc
sbb
or
xchg
jnp
cmp
lret
jbe
mov
push
inc
sub
or
lods
fisubrs
and
call
mov
popf
pop
push
add
jp
movsb
das
mov
arpl
inc
push
repnz
ds
mov
dec
mov
or
push
sbb
test
mov
sbb
mov
jne
pop
lods
leave
inc
shrl
dec
mov
jbe
cmc
cmp
mov
popf
lret
sti
jmp
xchg
add
sub
add
lods
scas
pop
lock
pop
out
push
sub
sub
xchg
add
inc
movsb
shll
sbb
outsl
fistpl
xchg
or
or
xor
jecxz
dec
cmpsl
aad
testl
add
xchg
sahf
inc
mov
jo
sbb
pop
and
mov
mov
mov
inc
or
inc
and
cld
jb
test
bound
and
sub
pop
xor
mov
stc
push
mov
repnz
xor
ret
pop
dec
mov
bound
sub
push
mov
mov
lds
cmp
and
rdpmc
test
enter
dec
add
add
aam
xor
mov
push
mov
dec
and
push
jnp
loopne
mov
into
pop
pop
push
call
std
ljmp
fxch
arpl
inc
sbb
or
int3
mov
lock
stos
pop
xor
mov
cmp
mov
add
cltd
lods
and
add
mov
bnd
popf
roll
lahf
orl
or
mov
pop
daa
xchg
int
dec
je
daa
daa
pop
repz
push
stos
mov
test
inc
aam
addr16
out
push
mov
fstp
testl
inc
inc
bound
popf
inc
jae
mov
test
pop
add
shrl
shr
xor
sub
fstl
cmpb
pop
xorb
repnz
xor
mov
dec
sbb
mov
loop
push
cltd
lret
movsl
mov
hlt
pusha
lods
insb
xchg
cli
sub
shrl
leave
jl
mov
jge
cmp
les
adc
nop
insb
add
sbb
pushf
ljmp
sub
mov
mov
mov
ja
test
xchg
ja
mov
roll
dec
sub
and
xor
lahf
jmp
mov
add
push
sub
mov
cmp
xor
cmp
aas
imul
das
leave
call
mov
mov
jb
out
aaa
pop
push
push
inc
enter
repnz
in
inc
or
mov
js
cli
mov
out
or
idivl
cmp
rcrb
sub
iret
or
pop
add
std
mov
repz
mov
pushf
int
and
push
nop
xor
push
icebp
es
and
rcl
fcomp
pop
stos
mov
sbb
pop
scas
mov
adcb
std
stos
xor
shll
jnp
les
enter
cwtl
sub
or
cmp
and
rclb
pop
sti
and
stc
add
jecxz
arpl
or
test
cmc
cmc
mov
aam
stc
and
imul
insb
out
ret
mov
mov
jae,pt
sub
push
test
xor
xor
mov
mov
imul
add
scas
cmpsl
ret
fnstcw
inc
add
mov
adc
fstpl
dec
dec
pop
adcb
xchg
and
hlt
and
in
and
mov
add
xor
inc
inc
fneni(8087
enter
jno
cwtl
xchg
imul
test
pop
sub
fcos
daa
mov
mov
cltd
xor
out
ret
inc
inc
push
cmp
xor
jbe
jae
push
dec
repnz
mov
and
mov
testl
dec
popf
lret
inc
sub
cmp
cmp
dec
or
add
fwait
sub
mov
in
imul
push
mov
push
sub
pop
sbb
xchg
pop
sahf
adc
ja
dec
xor
mov
in
shr
xchg
andl
jo,pn
cmpsl
push
xor
in
mov
mov
xchg
mov
mov
fs
push
mov
lahf
push
pop
xchg
sahf
call
mov
mov
mov
sub
mov
movsl
fwait
dec
lods
int
imul
rcrb
pop
adc
lds
xor
mov
movsl
popl
shl
or
jae
pop
hlt
mov
ja
mov
adc
add
push
lds
inc
orb
popf
cmp
fisubs
cwtl
add
add
jl
mov
int
inc
xchg
aas
lret
int3
scas
or
in
xor
lahf
daa
shlb
cmpsb
jo
fwait
or
or
mov
jns
xor
ss
ret
pop
sbb
lods
jl
leave
mov
add
jmp
test
mov
jmp
js
fsubl
pop
and
es
lcall
or
mov
cld
mov
lds
scas
pop
mov
bound
mov
cli
mov
insl
testl
sub
fidivrs
cmp
lret
xor
mov
sub
inc
les
inc
sbb
sub
dec
daa
sub
lods
lahf
fcoms
add
inc
mov
sahf
adc
push
mov
sti
lea
jmp
mov
dec
aaa
mov
daa
dec
inc
pop
mov
addr16
stos
cs
flds
mov
fstpl
mov
mov
lock
xchg
add
fucomp
je
ror
scas
sbb
cs
xchg
ficomps
sbb
or
aam
push
std
xor
mov
adc
xlat
je
jl
scas
inc
fcomp
adc
mov
jo
add
nop
mov
pusha
mov
or
xlat
in
mov
adc
jge
ljmp
out
int
dec
fdivl
inc
push
cbtw
test
dec
xor
pop
subl
stos
div
orb
sbb
jb
aas
cltd
nop
bound
out
mov
cwtl
pop
mov
jns
out
stos
pop
jne
stc
mov
ror
lret
sbb
gs
cmp
adc
jg
mov
mov
inc
fdivr
lahf
ror
mov
pop
adc
ret
ret
inc
xor
sbb
sub
iret
push
adc
fidivrs
lret
movsl
cmp
sub
in
dec
test
lcall
fcomps
mov
jnp
lods
mov
popf
lds
mov
sarb
rorl
adc
cmp
mov
into
push
mov
mov
push
in
popf
frndint
inc
imul
sbb
jg
mov
cld
or
pop
sub
add
adc
das
adc
mov
push
adc
push
test
mov
imul
ret
inc
mov
jge
cltd
pop
and
aaa
dec
rcrb
xchg
pop
aad
leave
jecxz
pop
add
or
test
or
xor
lcall
repz
cld
jae
aam
movsb
lea
movl
xchg
std
lret
arpl
pusha
inc
cli
dec
mov
sbb
ret
mov
sbb
pop
jl
lock
adc
stos
mov
stos
shrl
inc
dec
mov
test
inc
loopne
pop
adc
arpl
jbe
xchg
dec
mov
cmp
xchg
push
cmp
jp
or
popf
mov
mov
mov
mov
cmpsb
rcrb
ret
add
repnz
pop
popa
xchg
add
mov
sub
push
ret
xchg
pusha
xchg
cwtl
and
add
xchg
push
sbb
shrb
push
mov
sbb
addr16
call
pop
fs
addr16
mov
pop
xor
dec
sub
inc
mov
sub
test
jns
lds
mov
lock
sahf
mov
jge
in
push
sbb
loopne
fs
mov
cli
mov
rolb
sub
leave
pop
push
adc
cmp
test
cmpsl
pop
cli
mov
loop
jb
dec
push
mov
sub
cmp
test
mov
xor
or
dec
cwtl
mov
cmpsl
or
stc
jne
aas
xchg
lock
pop
mov
push
cmp
inc
aas
mov
insb
push
mov
je
push
cmp
jnp
rclb
pop
and
cmp
and
add
adcl
repz
idivb
adc
call
adc
jae
sub
dec
mov
fsubs
xlat
sbb
enter
pop
cmp
cld
jb
fwait
ja
sti
xor
cmp
mov
mov
sbbb
adc
cltd
pop
mov
adc
mov
sarb
jecxz
aam
pushf
dec
pop
mov
push
sahf
or
dec
add
mov
aaa
dec
inc
cmpsl
cmp
sbb
add
dec
pop
xor
inc
insl
xchg
add
arpl
xchg
dec
sbb
clc
sub
mov
xchg
rcl
jns
fmuls
inc
lcall
sbbl
add
mov
inc
mov
gs
fcmovne
push
jae
lods
sbb
jp
cmp
inc
in
bnd
shlb
popf
sub
mov
or
or
testl
mov
adc
pop
push
sub
out
push
sbb
pop
xchg
fsubs
call
or
int3
bound
and
movsb
leave
in
mov
adc
aaa
mov
outsl
mov
dec
outsl
mov
sub
call
fninit
dec
movsl
pop
in
in
mov
xchg
stc
jl
inc
fucomip
repz
push
mov
lock
sbb
sub
sbb
sbb
mov
lret
movsl
mov
sbb
sbb
adcl
cltd
pop
lret
cmp
adc
pushf
mov
ss
mov
loop
mov
push
dec
das
sbb
cmpsb
lret
or
push
sub
test
xchg
loop
cs
adc
mov
or
sub
or
add
out
jo
ret
xlat
sbb
add
pop
pop
cmpl
dec
xchg
mov
sti
jo
out
mov
sub
mov
rcll
inc
sbb
cltd
lods
out
inc
push
shr
mov
cmp
dec
sbb
xchg
ret
ja
insb
xor
adc
hlt
jl
sub
push
sub
fsubrs
sahf
push
pop
push
mov
sub
push
mov
lds
mov
rcll
push
ret
fs
pop
rcll
shr
ja
xchg
dec
lock
mov
inc
mov
push
decl
fisttps
xchg
push
test
push
test
sub
inc
mov
dec
pop
int
pop
jae
data16
push
cmp
cmp
jae
nop
dec
or
or
jmp
fcmove
ret
popf
push
push
std
pop
pop
adc
pop
dec
ret
push
pop
cmpsl
xor
movl
adc
and
ds
addl
push
mov
cmp
xor
shll
xor
btr
sub
stos
add
mov
arpl
out
sbb
push
xchg
leave
rolb
dec
push
or
fwait
xor
and
mov
xchg
mov
jns
sarb
mov
add
fld
xchg
cmp
cld
adc
in
mov
cmp
mov
int
test
adc
mov
push
xchg
mov
adc
stos
mov
and
adc
mov
xlat
or
jae
lahf
mov
pop
aam
bswap
cs
mov
mov
add
mov
enter
stos
add
fs
push
pop
fstl
mov
shlb
pushf
loope
js
addr16
repz
xchg
js
mov
pop
mov
movsb
pop
jmp
inc
hlt
lahf
xchg
pop
out
sarl
xlat
xchg
push
movsl
ret
pop
stos
and
xchg
cmc
out
jo
inc
sbb
inc
mov
popa
cltd
fmul
or
xor
mov
repz
jne
gs
inc
dec
adc
bnd
cmp
popf
inc
xor
faddp
gs
stc
sbb
mov
xchg
js
pop
inc
sub
clc
sti
mov
xor
add
mov
mov
add
sub
iret
cmpsl
mov
fwait
push
jne
lret
les
sbb
clc
ljmp
insb
push
lret
dec
fisubl
inc
aaa
or
std
daa
lods
sahf
repz
mov
pop
sub
fnstcw
mov
xor
and
or
lret
stos
xchg
fimull
fwait
pop
and
clc
mov
sub
hlt
inc
inc
mov
gs
sti
ret
cmp
cmc
cmp
mov
or
xchg
push
sbb
dec
jge
xchg
mov
mov
xchg
neg
sub
jmp
jle
mov
mov
xchg
in
cmovl
push
stos
fs
dec
push
sbb
int3
es
sbb
aaa
sbb
and
shr
cmc
xor
jns
dec
rolb
fcmovne
vmulpd
int3
icebp
and
idivl
mov
inc
sbbb
mov
pop
and
dec
jo
push
inc
mov
std
lret
ret
movsl
scas
test
dec
and
mov
test
fldenv
scas
ljmp
subl
cmpsl
xchg
in
movsl
std
cli
sub
xchg
push
adc
insl
cmpsl
filds
sub
cmpl
cmpsl
cwtl
dec
push
cmp
cs
dec
add
mov
lock
xchg
or
mov
jmp
and
sahf
push
xchg
mov
js
ljmp
push
call
dec
inc
ret
jecxz
insl
cmp
mov
outsl
mov
out
cmp
push
data16
sbb
inc
xor
or
aaa
mov
pushf
imul
ficoms
test
adc
cld
dec
pop
fdivr
addr16
fstl
cmp
scas
test
adc
ret
sahf
or
cmpsb
jecxz
sbb
mov
imul
cmp
clc
jno
jp
ror
clc
cli
jno
lret
xlat
stos
movsl
std
xchg
test
jnp
lret
cmp
cmpl
xor
xchg
fcmovb
mov
aam
cmp
lcall
or
movsl
xchg
pop
xchg
fistl
jb
sub
and
inc
jmp
sahf
fsubp
fwait
iret
push
jo
into
xor
adc
arpl
xor
and
aaa
scas
arpl
iret
add
add
movsb
push
mov
jmp
adc
repnz
les
ds
inc
repz
insl
jecxz
popf
fisttps
clc
out
lock
jl
jp
aaa
sub
push
mov
mov
pop
pop
fdivp
inc
adc
mov
pusha
push
ret
jo
xchg
push
icebp
int
xor
popf
arpl
into
push
dec
adc
cmp
repnz
pop
fldenv
lret
push
mov
add
add
jl
loope
or
xor
jp
aad
inc
pushf
or
outsl
xor
lock
push
and
les
inc
sbb
fldl2e
jae
push
test
std
lea
icebp
pusha
inc
push
push
lcall
das
pusha
dec
push
sub
dec
pop
cmp
xchg
add
push
jnp
les
cwtl
insb
or
mov
outsb
jp
fadd
fucomi
rep
dec
jg
shrl
mov
push
lds
sub
fsubs
mov
clc
push
test
fwait
xor
enter
inc
sbb
mov
pusha
sub
cmp
test
push
adc
mov
mov
dec
adc
dec
mov
mov
fsubr
push
sbb
pop
jb
pop
insl
mov
sbb
shrl
xchg
and
push
pop
nop
pop
pop
or
repnz
fstpt
adc
sahf
sub
std
xor
jno
sub
sbb
push
xlat
stos
mov
push
dec
fwait
out
dec
mov
add
mov
lret
or
mov
aad
mov
subb
xchg
xor
mov
push
test
mov
stos
push
inc
leave
dec
pop
lods
andb
sbb
adc
push
and
fildl
jle
sub
jmp
nop
orl
push
sbbb
mov
mov
xchg
sub
mov
mov
pop
xchg
push
and
mov
cmp
inc
les
mov
add
bound
and
lock
jmp
xchg
and
pop
pop
ljmp
pop
mov
xlat
inc
or
movsl
je
in
mov
mov
dec
daa
lods
pushl
cwtl
jmp
jb
pop
push
dec
pop
repnz
add
mov
sub
xor
mov
mov
mov
lret
aas
mov
xor
push
pop
inc
lahf
push
xchg
xor
jl
mov
scas
mov
fisttpll
mov
xor
pop
push
pop
push
or
xor
fucomp
and
xchg
push
xchg
std
lods
sub
jae
mov
jae
sub
es
fs
pop
test
fs
jno
sub
adc
mov
popa
pop
loop
movsl
jecxz
inc
mov
stc
dec
ja
int
pusha
xor
dec
movsb
movsb
add
or
or
and
and
pop
test
push
in
daa
jnp
dec
jb
fwait
lea
cmp
mov
int3
pop
jbe
fstp
lods
adc
imul
xor
fsubrs
dec
aad
xor
and
adc
orl
ret
leave
sub
sti
mov
std
lock
int3
ja
push
mov
orb
xor
lret
cltd
push
dec
pushf
pop
and
add
sbb
mov
sbb
lahf
cli
pusha
stc
decl
pop
xchg
flds
pop
inc
cltd
out
sbb
icebp
mov
cltd
jmp
imul
or
inc
shrb
mov
sub
jg
xchg
dec
and
add
cld
cmp
mov
pop
inc
fsubl
mov
add
jae
fsin
inc
shr
shrl
adc
mov
or
mov
push
fimuls
fcomi
mov
cltd
jo
cltd
push
sub
adc
jae
repnz
push
vpor
push
aam
pop
cmpb
and
push
mov
fdivrs
lahf
jne,pt
pop
mov
dec
lahf
lret
loop
lret
jo
leave
or
inc
mov
and
mov
sbb
mov
xchg
leave
test
clc
stos
adc
scas
pop
pop
cmp
daa
inc
cmp
sbb
ja
mov
arpl
sub
test
cmpsl
repz
inc
cmp
imul
add
pushf
dec
pop
sub
push
inc
lcall
push
push
push
fisubl
jb
dec
sahf
jns
cmp
ds
sbb
mov
lahf
xchg
sbb
push
je
aad
js
push
leave
add
mov
test
push
clc
test
test
xor
cli
cmpsb
sub
adc
and
call
repz
stos
mov
adc
call
mov
cwtl
lahf
pop
mov
xor
out
fstl
push
mov
popf
dec
or
les
jmp
sbb
jne
xor
xlat
fucomip
jnp
mov
sbb
into
inc
ret
clc
xchg
addr16
test
leave
fsubl
mov
in
jge
xlat
stos
les
cmp
cmp
inc
nop
pushf
pop
in
mov
mov
addr16
or
cs
or
or
xchg
mov
and
dec
sub
sub
test
sbb
fisubrs
inc
inc
jmp
jp
mov
pslld
and
dec
xchg
arpl
ret
mov
inc
cwtl
mov
gs
imul
cmp
cmpsb
lods
and
shll
jnp
enter
out
mov
lds
mov
les
mov
rclb
mov
push
push
push
mov
stc
fisubrs
aam
in
cmp
mov
pop
aad
cmpsb
rcll
dec
imul
sahf
jmp
xor
mov
adc
les
mov
or
add
pop
ret
dec
inc
adc
ljmp
popf
fstpl
dec
sbb
pushf
sub
xchg
pop
std
fdivrl
mov
repz
int3
les
stos
faddl
das
or
pop
mov
and
add
dec
rcr
xchg
mov
cmpsl
test
pushf
ret
pushf
int3
push
cmp
pusha
jle
dec
call
sub
xor
add
in
xchg
push
dec
pop
add
imull
rclb
idivl
out
bound
xchg
adc
data16
sbb
mov
add
mov
loopne
pop
xchg
mov
cmc
sub
mov
mov
mov
push
je
mov
lcall
loop
ljmp
inc
sbb
out
push
ret
sub
repz
mov
add
pop
ror
pop
pop
xlat
arpl
mov
inc
mov
in
aam
xor
add
icebp
jo
pop
jne
or
mov
pop
xchg
out
mov
dec
adc
jg
fwait
mov
xchg
push
mov
dec
call
xor
in
pop
in
jg
les
dec
popf
ljmp
inc
stos
cld
lcall
cmpb
enter
inc
mov
mov
lods
test
daa
jns
mov
cmpsl
jecxz
mov
clc
in
sub
mov
insb
in
add
add
sbb
addl
mov
dec
cmp
mov
and
xchg
jmp
jae
or
scas
mov
push
lods
xlat
mov
call
std
add
push
push
add
jp
leave
iret
cmp
dec
cmpsl
sbb
sub
andl
push
mov
je
adc
insl
inc
ja
fdivs
jnp,pt
shr
repz
cmc
push
mov
inc
int
jmp
clc
mov
test
popa
pushf
add
popf
cmp
pop
pop
imulb
or
test
movsb
mov
ret
pushf
fmul
xor
vpclmulqdq
lret
cmp
mov
bound
xchg
or
add
push
push
fsts
scas
jne
inc
xchg
fndisi(8087
mov
lds
mov
add
jmp
sahf
sahf
arpl
leave
cs
fyl2x
and
add
jge
and
and
sub
push
mov
dec
jae
and
movsl
ret
inc
out
jb
icebp
inc
mov
and
call
pop
insb
arpl
mov
sbb
adc
jecxz
mov
mov
mov
mov
xchg
in
enter
mov
mov
sarb
popf
add
pop
adc
mov
mov
loop,pt
add
shrl
lds
xchg
mov
or
mov
dec
das
stos
mov
or
mov
jns
xchg
jecxz
out
jnp
ja
stc
cli
out
subb
data16
and
xchg
movsl
sbb
xchg
push
pop
mov
movl
subb
add
adc
add
test
filds
mov
jne
outsb
dec
add
cmp
fs
adc
test
or
ret
jo
inc
test
and
orl
sub
adc
pop
jp
mov
hlt
mov
test
es
leave
roll
xchg
push
rolb
int
inc
push
popf
mov
mov
jnp
popf
popl
les
popf
sub
add
inc
hlt
inc
jmp
jl
jle
fcoms
cli
test
shlb
add
jae
adc
ret
sarl
and
or
jne
sub
ds
push
jbe
add
movsl
cmp
cmp
fists
pop
inc
jl
movsb
bound
lcall
xchg
dec
rorl
xchg
sti
lds
xchg
jle
pop
shrb
jnp
out
mov
adc
incb
into
sbb
aad
mov
sti
sbb
icebp
and
leave
xor
push
sub
dec
and
push
leave
iret
push
inc
pusha
jae
leave
lods
ljmp
cmpsb
xchg
outsb
ljmp
mov
scas
push
push
inc
dec
dec
inc
sarl
ss
out
lea
xor
jb
ret
clc
add
mov
mov
xor
ffreep
imul
jns
add
cltd
sub
lods
sbb
adc
leave
inc
sbb
dec
xor
int
lret
mov
mov
push
cmp
fistl
inc
xlat
pop
pop
xor
les
dec
jbe
pushf
lock
leave
mov
pop
outsb
fmuls
lcall
xchg
push
rolb
lods
dec
mov
sub
adc
lds
cmp
cmc
sbb
sbb
js
jg
scas
std
inc
loopne
ljmp
movsb
adc
xchg
mov
fxch
jp
jns
sbb
insl
jmp
mov
sbb
daa
das
add
lahf
popl
add
mov
jg
hlt
pop
psraw
mov
fidivrl
data16
lret
sbb
xchg
jmp
pop
addr16
imul
pop
pop
adc
xchg
adc
pop
loop,pt
ja
jg
add
imul
add
xor
push
dec
add
rclb
imul
in
sbb
mov
mov
outsl
test
int
dec
iret
mov
fidivs
inc
cli
out
or
add
mov
int
imulb
push
add
jo
ljmp
sti
dec
push
add
xchg
into
and
fisttps
xchg
or
jg
pop
fldcw
xchg
xor
push
jecxz
mov
jne
decl
retw
adc
xor
aam
pop
mov
ficoms
xchg
push
xor
shll
cmp
lods
push
fidivs
aam
sbb
or
fisubrs
fnstenv
sbb
add
mov
sbb
daa
jne
sti
loopne
ss
pop
adc
call
aam
stc
and
imul
xor
hlt
cmp
adc
vpsubsw
and
xchg
lret
bound
dec
sub
push
clc
mov
add
and
aas
jns
mov
in
fs
fmuls
push
test
jnp
pop
mov
push
aam
imul
mov
sbbl
jno
clc
pop
std
stos
lret
pop
andb
push
pop
push
jbe
int3
adc
std
test
mov
add
ret
jge
arpl
out
and
fs
pop
les
xchg
sub
jg
clc
neg
pop
cmp
in
movsb
mov
xchg
jo
ret
push
and
popf
mov
mov
lock
add
jb
loope
mov
cltd
mov
jns
xor
mov
rorl
adc
jle
imul
mov
inc
and
inc
inc
jmp
insb
jbe
push
fisttpll
rolb
stc
push
idiv
xor
repz
and
xlat
in
lret
out
jmp
lods
cli
aam
arpl
scas
pop
pop
lcall
cmc
fwait
in
mov
std
pop
sbb
mov
jge
scas
xchg
shl
movsl
add
dec
lcall
dec
pop
test
fmul
in
lret
gs
fstl
es
shrb
roll
mov
adc
pop
rorb
clc
call
mov
test
xchg
mov
icebp
hlt
loop
test
adc
cmp
out
subl
mov
sub
dec
outsb
jmp
shl
lods
test
insb
jb
fcompl
inc
adc
outsb
xor
lods
movsb
sti
int
gs
shr
sub
insb
mov
leave
sbb
subl
mov
in
sarl
lret
adc
outsb
cmp
xchg
mov
clc
mov
ret
jae
inc
inc
push
ret
dec
loopne
xlat
xchg
pop
stc
pop
movsb
aam
dec
sbb
into
cmpsb
dec
pop
mov
push
push
dec
scas
out
lds
sbb
enter
mov
in
jo
or
xor
inc
inc
pop
fcoml
mov
cltd
lods
push
mov
inc
xchg
bound
xlat
cld
adc
orl
insb
adc
and
sbb
mov
sub
add
dec
push
push
mov
xor
popa
mov
movsl
icebp
sub
inc
mov
mov
inc
enter
dec
xor
xchg
js
xor
popf
insb
mov
dec
xchg
loope
lret
dec
mov
fsts
mov
pop
imul
mov
ljmp
test
add
mov
adc
pop
mov
jg
movsl
mov
sbb
xor
sub
adc
sahf
cmp
mov
arpl
lea
fists
movsb
lahf
xor
data16
cld
mov
dec
xor
ret
int
lret
xchg
jp
cmp
stos
adc
popf
lods
xchg
sti
test
stos
sub
dec
shll
pop
fidivs
popf
popf
scas
je
pop
sbb
std
add
lcall
sbb
call
xor
xchg
stos
xchg
xchg
add
jno
xchg
add
sub
push
daa
jo
and
xor
lods
int
in
xor
mov
jl
dec
leave
push
inc
inc
imul
and
sub
sahf
loop
sbb
mov
stos
fcmovnu
mov
lea
cwtl
xchg
aam
cmp
mov
xbegin
pop
subl
or
mov
or
mov
jb
mov
cmp
adc
subb
mov
mov
lods
push
scas
xchg
xlat
mov
inc
pop
jnp
and
les
and
push
ret
mov
mov
das
xchg
pushf
lds
cmp
mov
push
notb
lret
push
push
and
outsl
ret
cmpsl
ret
fld1
add
cmp
lahf
and
mov
movsl
jo
adc
sbb
inc
ret
fisubs
jne
fcmovb
repnz
xor
scas
inc
lods
xchg
xchg
push
test
adc
xchg
dec
or
ret
clc
adc
cmp
mov
fcom
int
xor
repz
xor
inc
add
fwait
rcl
lret
push
inc
daa
adc
adc
dec
fcmovbe
idivl
ret
outsl
cmp
xor
cmp
add
scas
sbb
sbb
addr16
add
xor
mov
cmp
pop
out
popf
push
sarb
dec
icebp
cli
pop
xor
mov
cmp
rcrb
out
or
pop
xlat
out
repz
pop
push
bnd
lcall
es
xor
pop
fldl
sub
push
lds
pop
and
popf
mov
pop
stos
pop
sarl
sbb
stos
or
push
sub
jae
dec
adc
std
mov
fists
sbb
mov
enter
faddl
fwait
jae
inc
fmuls
jge
adc
fildll
cld
add
xchg
loop
int3
pop
cmpsl
ret
add
es
popa
addr16
iret
pop
mov
cwtl
clc
data16
aaa
pop
mov
mov
lcall
sbbb
les
clc
flds
das
or
lds
jmp
mov
and
cmc
lret
push
scas
loopne,pt
cmp
xchg
pop
cmpsl
add
sub
fnstcw
or
cmpsl
aad
sarb
xor
rol
popa
outsl
jle
mov
inc
lret
ja
mov
cltd
imul
aad
lret
fucomp
fs
shll
sub
in
fs
lret
xchg
xor
sbb
jno
imul
mov
mov
add
sbb
pop
push
ret
fs
sbb
inc
xchg
pop
xor
int3
mov
jg
in
stc
pushf
add
jb
call
loopne
adc
test
ficompl
test
or
frstor
imul
jbe
jp
enter
shlb
rep
cmpsb
cmp
rcrl
int
mov
and
inc
jp,pt
sarb
cltd
inc
sbb
sbb
clc
mov
std
pop
mov
adc
divl
adc
stc
add
mov
repz
adc
aam
dec
aaa
inc
cmp
aad
inc
scas
pop
mov
mov
int3
in
lds
enter
outsl
insl
test
popf
sbb
push
leave
dec
loop
add
test
pushf
sbb
lock
mov
ljmp
loop
js
pop
int3
sub
cmpsl
push
mov
mov
push
into
fmull
or
add
in
ljmp
push
sbb
or
fs
imul
inc
pop
sub
mov
mov
push
sti
icebp
stos
rcr
mov
xchg
sub
mov
mov
inc
cmpsb
push
push
in
cltd
push
fcoml
inc
cmp
xchg
clc
pop
inc
push
fnsave
xor
psubb
or
movsb
adc
mov
clc
mov
addb
inc
pop
fwait
or
sbb
xlat
leave
vmulpd
dec
loopne
arpl
jl
and
add
mov
andb
ds
mov
cld
jg
xchg
sub
outsb
aaa
and
fldenv
xor
lds
icebp
shl
fisttpll
jne
mov
pop
in
mov
mov
xchg
test
insb
mov
cmp
insb
ss
ret
dec
cmpsb
xchg
pop
fildl
mov
xchg
in
add
addl
incl
stc
repnz
fwait
leave
cmc
xor
sub
addl
inc
xchg
xchg
sbb
test
dec
mov
cmp
xor
xor
lahf
cmpsl
test
cli
sbb
outsl
scas
ret
add
mov
dec
dec
inc
cltd
add
inc
dec
sahf
hlt
arpl
fwait
cmp
gs
inc
push
xor
fisubs
hlt
fscale
inc
inc
stos
shr
adc
int
ds
aam
add
cmp
push
mov
out
xchg
pusha
xor
xor
hlt
jmp
fildll
in
jnp
mov
cmpsb
imul
xchg
nop
ret
xor
jne
loope
popa
adc
clc
ficompl
test
test
lods
jns
inc
rclb
ljmp
in
popf
arpl
and
mov
jl
adc
dec
sub
sub
nop
mov
insl
mov
rcl
cwtl
push
ljmp
hlt
mov
loopne
or
inc
fwait
leave
test
jp
clc
sub
idiv
test
rcll
lock
cmp
xchg
mov
xchg
test
push
sbb
roll
out
daa
lock
aad
repz
jns
sub
out
aam
mov
fwait
xor
xor
push
mov
cmp
xchg
adc
out
repz
fnstenv
cwtl
jbe
pop
add
es
repz
mov
push
enter
dec
stc
loop
jge
inc
movsl
push
sarb
imul
int
xor
jge
pop
scas
jne
and
adc
xchg
pushaw
push
pop
mov
mov
mov
cmp
sub
sub
pop
stos
ret
fisttpl
pushf
sub
xchg
inc
stos
js
leave
lret
andb
xchg
inc
xchg
or
and
cld
mov
mov
jmp
xchg
sub
inc
stos
into
pop
cmc
std
jmp
adc
pop
mov
mov
dec
inc
mov
es
inc
aad
ror
test
shr
enter
cmp
jmp
sub
sbb
ds
adc
mov
inc
and
push
jne
dec
pop
mov
mov
into
xchg
mov
jno
xor
fisttps
pushf
fdivrl
jns
pop
push
push
orb
mov
cwtl
shlb
into
iret
iret
mov
pop
aad
sbb
scas
scas
sbb
in
mov
sub
cmp
sbb
sub
cld
lods
cmp
nop
imul
xchg
sarb
add
push
xorb
mov
enter
add
add
jno
sub
add
fs
add
sub
inc
push
nop
sub
jb
add
and
mov
dec
xchg
dec
and
inc
stc
mov
frstor
adc
popf
cmp
sub
jbe
mov
xlat
dec
loopne
mov
mov
mov
inc
mov
mov
cwtl
pop
add
inc
sbb
push
adc
cltd
mov
cmc
jne
jb
jne
mov
xor
lods
mov
pop
andb
adc
lcall
std
jne
mov
mov
inc
jecxz
rcl
inc
cmpsl
mov
cli
sub
pop
icebp
out
jl
pop
test
mov
xor
mov
movsb
test
jge
xchg
lret
fucomp
out
scas
dec
ds
popf
scas
mov
scas
adc
ret
int
pop
stc
loop
and
jo
mov
arpl
adc
push
cmp
les
and
lahf
test
sbb
cmp
push
xor
ss
ret
mov
adc
sahf
fsubl
inc
popl
in
xchg
lret
dec
xor
aam
push
mov
mov
mov
nop
push
gs
inc
filds
popf
pop
xor
imul
out
leave
sbb
adc
inc
push
dec
push
dec
inc
cmc
clc
cmp
fs
pop
gs
xor
sarb
dec
mov
imul
adc
lods
ds
cmp
inc
push
or
filds
mov
fwait
and
or
xor
sbb
inc
mov
test
inc
outsl
out
xchg
mov
push
jae
pop
inc
movsb
pop
popf
lret
gs
daa
adc
xor
test
jae
dec
data16
stos
sub
popa
movsl
call
pop
mov
pop
iret
leave
aaa
dec
jbe
push
sbb
inc
mov
jg
fisubs
cmc
and
add
rolb
pop
flds
add
out
idivl
cmp
push
and
push
stos
in
mov
je
cli
xor
xchg
loopne
inc
push
xrelease
cmp
xchg
jae
hlt
mov
cltd
and
jns
out
ljmp
inc
dec
lds
xor
pop
into
pop
int
js
mov
xchg
jp
pop
jae
mov
sti
jnp
mov
pop
repnz
inc
insl
cmp
dec
or
mov
push
mov
sbb
rclb
sbb
jne
loope
mov
dec
cmp
sbb
out
mov
bound
or
mov
imul
add
movsb
adc
scas
jae
cltd
mov
mov
dec
mov
adc
lods
cmp
sub
insl
mov
push
xchg
sbb
shl
neg
sbb
inc
into
mov
add
pop
aas
push
add
push
push
fsubs
jmp
popa
push
xchg
aam
mov
inc
and
adc
cmovae
lock
sarl
out
mov
cmpsl
in
or
out
mov
sub
fistpl
test
movsl
sbb
inc
xor
inc
andb
cmpsl
cmc
aas
sbb
jae
fsubrp
fwait
cli
pop
jecxz
add
push
ja
push
pop
aas
sub
test
into
incb
sbb
jns
push
orl
mov
out
lret
sti
xchg
test
nop
xchg
add
and
xchg
dec
mov
stos
orl
mov
dec
mov
mov
add
arpl
mov
pop
aad
jge
test
sbb
push
nop
scas
mov
push
stos
xor
add
inc
lret
mov
je
inc
cmp
dec
push
adc
mov
dec
inc
mov
cld
push
pop
mov
fdivrl
shlb
int
test
dec
lods
dec
popf
ja
adc
dec
scas
loope
lods
out
test
lret
in
repnz
stc
sub
xor
ljmp
mov
jnp
mov
lods
sub
ja
std
movb
and
cld
jg
xor
outsb
ret
cmp
mov
xchg
cli
sarb
lods
sub
enter
test
loop
jo
sbb
inc
lea
and
movsl
pop
in
push
xor
dec
addr16
enter
mov
int
imul
lret
lds
mov
mov
add
mov
ljmp
xor
test
xor
or
arpl
jae
in
sbb
aam
xor
and
rcr
cmpsb
pop
xchg
mov
fisubs
les
add
mov
xor
lea
sarb
shlb
sbb
inc
imul
or
test
enter
mov
xlat
nop
mov
adc
cmp
mov
and
loopne
sub
xor
inc
call
or
inc
mov
lds
or
inc
push
dec
sbb
sbb
and
cli
jle
pop
dec
inc
xchg
push
cwtl
push
hlt
cs
fisttps
outsl
xor
add
lds
cmp
out
xchg
movsb
popa
outsl
pushf
xor
push
jl
das
xchg
iret
ja
push
test
cmp
or
ficoml
sti
sub
pop
outsl
xchg
int3
dec
push
lcall
cmp
jbe
ss
or
jne
fs
lea
arpl
daa
add
inc
push
sub
ja
test
js
sub
dec
jp
jo
pop
mov
outsl
cmpsl
jmp
out
xchg
or
inc
sbb
pop
dec
pusha
jo
jns
pop
pusha
mov
xlat
xchg
cwtl
mov
xor
mov
shrb
jo
stos
mov
iret
pop
pop
mov
mov
test
sahf
inc
mov
in
ja
cld
cmp
mov
pop
jne
arpl
stc
push
inc
call
psubusb
in
dec
jle
lock
stos
sbb
mov
mov
pushf
sbb
je
jno
push
sbb
mov
xor
jge
sbb
and
incb
cld
mov
fisubl
xor
and
lret
push
mov
repz
mov
std
jno
aam
or
push
sub
jae
mov
pusha
mov
push
or
xchg
jl
in
sti
and
fbld
jl
dec
mov
mov
adc
int
mov
nop
dec
bound
dec
sahf
xchg
ljmp
into
jo
cmp
enter
and
repz
pusha
xchg
scas
in
xor
jg
or
out
mov
jge
jne
adc
test
test
mov
les
adc
and
pop
repz
push
jecxz,pt
je
add
xor
cmpsb
in
ss
pop
jb
mov
fwait
jns
jecxz
add
lds
in
push
clc
xor
jp
cltd
jns
adc
xor
sub
mov
add
pop
push
sahf
ss
in
xor
pop
jnp
add
insl
inc
clc
shrb
lret
xchg
stos
lds
xchg
mov
lods
mov
dec
jle
dec
aad
mov
xchg
jp
mov
cmp
push
or
mov
cli
jnp
inc
nop
and
jmp
push
and
pop
jnp
daa
sub
int
iret
sub
ja
pushf
jb
int
cmp
jbe
cli
cmp
dec
stos
lahf
out
mov
dec
mov
inc
sbbl
mov
sbb
outsl
imul
aas
sbb
push
mov
mov
pop
jb
sub
pop
mov
je
pop
je
cmp
in
mov
scas
bound
pushf
pop
sub
jge
lods
adc
mov
lods
sbb
out
cmc
dec
or
mov
es
aad
pop
leave
mov
push
cmp
dec
fildl
and
pop
dec
jne
fldt
popa
testb
push
out
cmp
fidivrs
int3
add
lock
push
rolb
arpl
adc
push
ret
dec
cmp
lods
jne
gs
cmp
or
xchg
aam
cwtl
push
pop
aas
xchg
push
cli
push
add
pusha
jecxz
fst
push
push
dec
dec
or
mov
xor
cli
xchg
xchg
sahf
insl
inc
mov
ret
and
mov
cmp
dec
mov
xor
dec
out
cmp
and
xchg
lea
jbe
xchg
mov
in
aam
or
push
add
pop
add
sub
xchg
mov
sub
lock
xor
dec
mov
xchg
sbb
lock
shll
in
jns
adc
add
adc
cld
out
dec
repnz
insl
push
dec
push
mov
in
rorl
mov
sbb
sub
cmpsl
adc
cs
je
sub
mov
sub
hlt
xchg
jl
fdivs
rclb
ljmp
roll
test
jbe
adc
and
sbb
das
pushf
ret
push
clc
or
lcall
je
and
nop
push
sub
push
fisubs
xor
mov
inc
mov
inc
fisttpl
int3
cwtl
cmpsl
pop
cmp
add
ljmp
mov
and
push
xchg
mov
jae
orl
into
pop
stos
aam
idivl
shll
mov
icebp
lret
push
insl
fcom
rol
mov
sub
xchg
sub
jns
outsb
push
adc
cmp
mov
negb
mov
lods
stc
orl
push
mov
sbb
cld
int3
fstps
mov
into
xchg
pop
lock
adc
cld
jnp
adc
inc
lret
inc
sbb
cmp
mov
clc
and
lods
push
sbb
push
ficoms
mov
frstor
mov
add
cmp
adc
add
or
shlb
ret
movsl
daa
je
pop
dec
shlb
and
push
mov
sub
xchg
push
insl
xchg
cmc
data16
pop
gs
in
mov
mov
mov
fcoml
and
inc
xchg
push
and
stc
popa
mov
sbb
shlb
aam
mov
dec
call
clc
push
pop
loopne
cli
stos
fdivs
cs
sbb
xor
add
push
js
or
add
or
mov
outsl
adc
stos
bnd
sub
push
push
jge
movsb
fsts
dec
cld
iret
les
or
es
mov
insl
ret
fistpl
sarl
hlt
add
gs
jo
jle
scas
dec
jns
dec
inc
mov
mov
adc
hlt
fldl
sti
fbld
mov
das
jmp
cmpsb
sub
mov
test
rcll
push
jno
scas
add
sbb
retw
sub
and
jno
sahf
xchg
leave
movsb
inc
sbb
push
fists
out
inc
and
xlat
pop
test
scas
jle
dec
sbb
pop
mov
enter
mov
out
jns
lcall
les
cmpsb
xchg
cmp
mov
out
arpl
adc
xchg
in
movnti
sbb
jecxz
outsb
ja
movsb
insl
loop
jmp
fidivrl
sbb
xor
inc
add
lahf
sub
arpl
cmp
sti
jp
mov
divb
dec
mov
jmp
xor
xchg
xchg
lds
adc
xchg
bound
scas
jne
jnp
test
sub
pop
rclb
sahf
mov
in
enter
inc
xor
mov
mov
push
jb
mov
jo
lods
enter
mov
add
pop
js
std
adc
xchg
jns
out
shrb
fcomip
pop
out
push
push
js
sub
movsb
cli
daa
cmc
jge
mov
cs
iret
jle
mov
mov
dec
sbb
dec
mov
xchg
loopnew
mov
xchg
das
or
xchg
jge
xchg
repnz
pop
loopne
repnz
mov
sti
jl
dec
shrb
lds
xchg
mov
enter
subb
xchg
or
int
xlat
lret
lret
push
xchg
xor
fisubrs
ffree
stc
push
or
arpl
jp
lcall
sub
in
mov
scas
mov
jecxz
loopne
mov
xchg
int3
fldcw
mov
sub
mov
stc
sbb
mov
aad
jo
or
js
adc
adc
ret
cmpsl
scas
sbb
mov
mov
and
inc
mov
out
pop
mov
sub
cmp
das
sub
and
cmpsl
add
inc
jle
add
test
out
inc
sub
mov
shl
fisubrl
inc
adc
xor
scas
int
add
jge
xchg
sbb
push
pushf
in
pop
adc
nop
inc
sbb
arpl
test
cmp
fdivrl
mov
inc
mov
insb
add
inc
or
or
shll
repz
pop
mov
xlat
stos
dec
scas
sbb
dec
sbb
cmp
dec
shll
and
adc
repz
movsb
jae
cmp
add
push
stos
xchg
arpl
sub
je
lds
xchg
xchg
data16
pop
cmpsl
push
popf
fwait
pushw
pop
mov
cmp
stc
xchg
cmp
cmp
stc
push
outsb
sub
add
push
jne
cmpsl
push
fcmovb
and
pushf
jno
sbb
sahf
fisubs
mov
outsb
out
lock
mov
add
dec
inc
clc
inc
les
mov
hlt
jmp
xor
push
xchg
jmp
mov
nop
push
pop
adc
mov
inc
jbe
je
jne
inc
inc
repz
sub
mov
jecxz
jne
mov
ja
adc
push
in
inc
adc
sub
sbb
lret
stos
enter
fsts
push
push
or
nop
rcrl
mov
sbb
test
je
ret
popf
aas
or
push
pop
mov
or
inc
imul
and
push
roll
sbb
mov
aad
pop
cmpsl
lods
ja
iret
cwtl
mov
scas
cmp
shlb
lret
sub
js
dec
or
or
in
mov
pop
dec
cmp
adc
inc
cmpsb
cwtl
fcoml
dec
pop
popfw
fwait
ljmp
fdivrl
sbb
xor
sbbl
cmp
cmpsb
stos
and
lea
lds
dec
test
fsub
jae
pop
push
inc
mov
push
repnz
or
adc
sub
add
or
leave
mov
sbb
or
fwait
cli
dec
addr16
lods
xchg
scas
sub
add
sti
xchg
push
mov
jne
lret
sbb
jns
lds
pushf
dec
and
inc
bound
pushf
xor
and
fldt
cmp
cs
sbb
mov
xor
jno
je
lods
jnp
in
xor
pushf
xchg
movsl
popa
mov
int3
mov
sbb
into
js
rorb
dec
pop
mov
pop
pop
ds
es
mov
adc
out
inc
sbb
jle
sub
in
rcrb
mov
jecxz
outsl
sbbb
and
ret
sbb
xor
enter
movsl
cmc
dec
loope
jp
dec
mov
enter
daa
adc
movsl
xchg
lods
stos
add
xor
push
movsl
loopne
aad
cmp
cmp
mov
or
test
push
inc
add
pop
dec
lock
add
dec
dec
adc
cmc
mov
sbb
inc
sub
mov
pop
jl
aam
xor
negb
in
stos
jge
les
mov
scas
lahf
stos
cmpsl
lock
sub
shrl
arpl
addb
mov
pop
lret
push
push
or
gs
fstl
cmp
sub
inc
pusha
into
dec
mov
pop
sub
ljmp
cs
mov
add
loop
lds
mov
xchg
lock
ljmp
mov
jge
movsl
xor
cmp
pusha
outsl
aas
movb
jmp
sbb
inc
ror
sbb
call
xchg
sub
and
mov
push
mov
push
xchg
popa
mov
sub
sub
popf
ficoml
test
adc
sbb
jg
shll
cltd
mov
cmp
mov
ja
inc
cmc
fsubr
ja
nop
mov
lock
hlt
ss
sub
mov
mov
outsl
push
xchg
add
jmp
xchg
sub
sub
stos
lods
add
movb
jl
mov
mov
fmuls
leave
lret
jbe
jp
lcall
test
xorl
dec
aaa
mov
push
ljmp
repnz
dec
jne
inc
iret
enter
jo
subl
inc
sarb
mov
mov
and
mov
enter
or
xchg
insb
jbe
int
xchg
pop
and
pop
cwtl
les
mov
mov
dec
leave
sbb
bound
xchg
mov
adcb
and
hlt
test
mov
addr16
pop
mov
mov
stos
or
and
mov
add
fwait
mov
fdivrs
adc
mov
mov
daa
mov
es
fsubrl
out
xor
sub
shlb
push
xchg
add
mov
jbe
push
lds
pushf
dec
and
xchg
dec
mov
lods
mov
xlat
inc
mov
cmpsl
cs
sbb
lahf
or
sbb
or
push
ja
enter
inc
fsubr
ret
popa
or
push
cwtl
clc
mov
stos
into
jne
std
decl
test
inc
dec
and
inc
cwtl
dec
xchg
fnstenv
aam
js
pop
ficoms
xchg
push
sbb
repz
lea
mov
in
aaa
popf
inc
loope
jmp
mov
mov
ljmp
jmp
and
jmp
mov
out
lock
enter
mov
je
les
adc
rorb
xor
fdivl
aad
mov
jecxz
out
mov
ja
and
pushl
mov
push
mov
mov
test
loopne
xor
inc
and
lds
pushf
dec
pop
push
mov
mov
or
lret
jge
push
or
cmpsl
push
or
lret
pop
in
pop
scas
dec
push
cmpsb
dec
fmull
enter
lahf
inc
add
xchg
leave
pop
insb
sbb
dec
fimuls
sub
pushl
lods
dec
fmulp
int
je
sub
pop
in
fucomp
push
or
sub
pop
sub
scas
cmp
ljmp
data16
popf
xchg
adc
outsb
les
or
xor
mov
fsubr
mov
fcmovbe
mov
das
lods
lahf
mov
orl
ret
loopne
addr16
xor
adc
pusha
sti
mov
sbb
cmp
and
pop
sub
lds
dec
mov
mov
or
sti
pop
and
mov
fistl
arpl
stos
push
inc
mov
cltd
sbb
jnp,pt
scas
les
dec
pop
dec
popf
and
xor
xchg
daa
pop
ret
sahf
inc
lock
stos
adc
push
add
adc
xchg
ret
push
repnz
mov
in
jbe
ss
addr16
mov
dec
jnp
fwait
leave
loop
xchg
fsubs
adc
andl
push
fstps
add
pop
xchg
sbb
xor
mov
dec
mov
xchg
add
sbb
cmp
imul
in
sbb
push
xchg
mov
pop
hlt
jl
sub
mov
xchg
jmp
pop
sub
xchg
jae
or
jbe
cmc
test
imul
outsl
roll
dec
adc
loopne
sbb
das
add
lahf
mov
lock
cmp
add
out
leave
mov
shrb
mov
mov
aam
mov
sbb
lret
fucomp
cmpsl
mov
aaa
ss
imul
stos
xorl
roll
push
hlt
in
xchg
test
lea
adc
mov
les
fwait
loopne
sbb
icebp
xchg
dec
push
je
push
pushf
cmp
and
loop
aad
push
mov
in
pop
pop
aas
xchg
dec
add
inc
sbb
bound
add
adc
jecxz
mov
cmpsb
mov
fcoml
and
dec
mov
lods
cmp
dec
jne
fs
pop
ds
out
cmp
sub
inc
inc
mov
pop
pushf
test
js
dec
lret
cmpl
mov
ret
mov
pop
xor
xchg
les
mov
xor
fisttpl
xchg
orl
jo
mov
adc
cld
into
lock
cmp
orl
clc
in
testl
mov
push
ljmp
fisttpll
or
fbstp
popa
xchg
xchg
fucom
jmp
pop
sbb
sbb
sub
movsl
insl
lret
leave
add
inc
add
pop
test
dec
inc
in
leave
mov
pop
jmp
bound
xchg
in
imull
xlat
rcll
cs
jns
mov
fwait
roll
xor
pop
shll
pop
popf
jle
cmpsb
stos
add
out
jns
sub
xor
int3
mov
aaa
iret
mov
stos
mov
mov
sbb
sbb
rcl
mov
dec
daa
inc
push
jb
inc
pop
rcll
xor
or
xchg
imulb
sahf
push
iret
jl
push
adc
and
mov
in
in
pop
loop
xorb
sti
jmp
stc
jecxz,pn
mov
in
scas
aam
js
cwtl
icebp
fs
outsl
jnp
jnp
test
sub
test
shufps
pushf
cs
mov
mov
das
in
mov
test
repz
dec
push
cld
imul
sub
lret
stos
sbb
pop
test
mov
addr16
jmp
push
push
push
adc
dec
fisttpl
loop
test
fs
das
jecxz
iret
mov
movsb
call
adc
repz
xchg
lret
insl
shl
push
adc
or
pop
xlat
push
popf
mov
fptan
pop
and
popf
imul
cmc
jg
and
pop
das
dec
dec
mov
fstpl
outsb
adc
lret
ret
addl
push
push
and
cmp
lret
pop
jne
xor
inc
cmp
xor
and
mulb
ss
xlat
and
xchg
xor
jecxz
lods
xchg
xchg
cmp
ds
fiaddl
push
clc
cmpsl
lods
bound
jle
mov
std
mov
cmp
dec
pop
push
mov
inc
mov
sbb
popf
mov
sbb
aad
lahf
mov
adc
sbb
mov
inc
inc
push
and
mov
push
imul
leave
jbe
sbb
hlt
or
pop
test
or
or
orb
adc
jle
loopne
mov
xlat
push
mov
jbe
leave
xchg
jbe
in
bswap
mov
rcl
pop
loopne
mov
fwait
rcl
push
faddl
cmpsb
ljmp
inc
jge
pop
xor
sub
pop
inc
mov
repnz
sub
fcmovbe
mov
cmp
mov
mov
mov
stos
fildl
fucomp
ja
fwait
stc
push
jecxz
cld
cmc
mov
sti
and
cmc
packsswb
lahf
and
fstl
loop
mov
push
adc
imul
lahf
enter
jmp
in
pop
jae
pushf
jmp
adc
mov
shrb
jecxz
sub
je
enter
cwtd
jecxz
fstl
pop
popf
mov
inc
xchg
loope
jle
mov
adc
sbb
mov
inc
push
mov
call
fdivrs
sarb
xchg
push
les
adc
mov
xlat
sbb
dec
nop
lahf
cmpsl
jo
cmp
fs
enter
mov
cmpsl
mov
push
aam
loope
out
jo
mov
inc
dec
daa
inc
jecxz
sbb
scas
push
jne
shrb
mov
loopne
mov
inc
xor
pop
ss
pop
push
jnp
decl
add
shll
dec
lea
outsl
insb
adc
test
jno
jl
jmp
lds
dec
dec
cmp
frstor
aad
lea
mov
outsl
out
xchg
mov
je
sub
xchg
sbbb
add
xor
mov
imul
jecxz
sub
pop
jb
rorb
push
imul
jmp
popf
leave
jp
pushf
fisubrl
add
nop
sub
pop
push
scas
push
sub
adc
jge
dec
fdivl
je
out
and
inc
inc
ds
iret
negl
data16
insb
imul
add
and
sar
outsl
or
inc
xchg
roll
mov
mov
iret
daa
cld
jno
adc
in
imul
in
or
sbb
jns
inc
aas
scas
dec
push
add
jae
loop
mov
div
mov
cmp
shlb
mov
aas
push
loop
adc
inc
mov
mov
xor
dec
subl
das
cmpsl
pushf
ret
dec
pop
or
in
xchg
mov
ljmp
jecxz
sbb
popf
mov
dec
idivb
iret
roll
push
sub
push
out
sub
cmp
aam
pushf
fxch
xchg
jnp
mov
lahf
fst
fstpt
test
fcmovu
mov
sbb
xchg
adc
push
adc
rcr
nop
xor
mov
repnz
mov
and
loopne
test
mov
mov
es
repz
aaa
rolb
in
call
jb
addb
ds
add
push
xor
push
xchg
jmp
mov
and
and
arpl
ficoml
add
repz
call
sub
xor
popa
mov
adc
leave
cmp
test
imul
adc
scas
sahf
insl
jge
int
xchg
fisttpl
test
adc
add
add
int3
fcomps
mov
and
ret
sub
push
stc
sbb
stos
int
in
mov
daa
dec
lret
ljmp
mov
cltd
lret
pushf
cmp
adc
add
aad
xchg
jmp
andl
inc
mov
or
push
and
or
add
xchg
lahf
dec
cmp
xchg
call
into
sub
cli
rol
mov
aaa
popf
mov
in
fwait
divb
loope
dec
inc
adc
outsb
imul
and
lea
mov
sub
dec
jb
or
int
push
test
pop
jne
stos
pop
inc
stos
pop
add
out
fistpll
xor
lds
pop
rolb
lock
pop
adc
outsb
sub
rorb
lret
mov
test
fisttps
mov
dec
xor
jmp
aam
sbb
mov
outsl
mov
add
lret
pop
xor
mov
and
fistl
ret
fs
cmp
fmull
sbb
or
nop
dec
fists
js
ror
add
adc
int
mov
pushl
add
push
pop
xor
mov
sbbb
stos
sbb
or
inc
and
jmp
xor
adc
inc
add
loop
repz
cwtl
sbb
cmp
scas
test
aas
sub
jge
fsubr
mov
lret
stos
xorb
mov
int
test
aaa
jecxz
ljmp
jb
and
push
pop
sbb
pop
dec
aaa
jo
mov
lods
pop
sbb
dec
andl
fmulp
and
cmp
xor
test
and
mov
shll
pop
pop
sub
mov
sbb
cltd
mov
test
lcall
pop
and
push
jle
ja
das
imul
arpl
cmp
std
and
push
add
lahf
idiv
add
pop
xor
inc
or
fucomp
push
fidivl
adc
pop
xlat
and
loopne
rolb
stos
enter
lea
cmp
xor
int3
push
sub
cmp
jb
mov
dec
jge
loop
dec
daa
jbe
cmp
xor
mov
mov
mov
add
mov
jge
jmp
sbb
dec
jnp
cltd
dec
pop
mov
idivl
mov
dec
cmpsl
mov
cs
fwait
icebp
scas
push
js
push
scas
repnz
scas
inc
in
jle
jns
out
xchg
push
dec
push
lret
cli
jae
push
xchg
movb
xchg
iret
cwtl
push
cmp
push
or
les
ret
mov
outsl
aas
les
mov
loopne
aaa
mov
scas
cmp
in
inc
mov
in
sarb
mov
or
cmp
push
jnp
cwtl
xor
mov
scas
daa
xchg
cmp
daa
rorl
push
push
add
adc
cmp
mov
jnp
mov
mov
pop
cmc
mov
add
inc
loop
dec
inc
adc
outsb
xor
dec
dec
shrb
cmp
lods
imul
testb
pop
scas
les
in
sub
roll
inc
xchg
jmp
into
and
pmuludq
cltd
shll
pop
xor
jg
popf
shll
clc
mov
add
std
jnp
ret
leave
cmp
xchg
mov
push
dec
insl
aad
and
jle
xchg
std
xor
test
loope
shll
in
scas
addb
mov
ds
xchg
sarb
dec
fisttpll
jbe
jae
mov
mov
movsb
jns
ficoms
enter
test
mov
sbb
scas
adc
add
xchg
cmpsl
cwtl
push
dec
iret
fbstp
fucomp
push
nop
and
push
cmp
inc
sbb
xchg
daa
cltd
clc
jo
fwait
notl
jne
jge
adc
cmp
or
inc
sub
sub
lahf
movsl
in
popa
inc
sub
xor
adc
ret
pushf
push
mov
or
mov
std
adc
fbstp
test
pop
dec
pop
scas
or
hlt
call
rcrl
and
or
push
imul
mov
mov
arpl
adc
push
lret
push
add
mov
sub
push
cmp
xchg
mov
dec
or
ret
jo
cmpsl
and
cs
mov
scas
pop
test
or
lahf
xor
iret
jle
jg
sub
hlt
jo
mov
int
andl
cs
sti
shl
addr16
rclb
test
push
sbb
sbb
jnp
fwait
lea
iret
insl
mov
adc
mov
mov
inc
pushf
popf
scas
sub
sub
mov
dec
jae
cmp
rcrb
sub
roll
xchg
lret
aas
stos
idivl
jne
mov
cmp
jbe
jmp
sbb
mov
inc
stos
pushf
adc
test
mov
pop
push
sahf
xor
out
out
in
mov
popf
xor
sbb
stc
popf
inc
or
mov
inc
scas
push
mov
in
or
loope
add
clc
push
jle
leave
movsb
mov
fstl
cld
mov
jmp
rol
add
jmp
movsb
push
push
jno
std
bound
insl
xchg
out
into
sbb
in
xor
mov
fwait
in
add
shll
xorl
mov
lods
pop
insb
or
sub
inc
pop
ror
and
cmc
sbb
pop
or
mov
push
adc
mov
out
cmpl
call
std
jae
mov
mov
jg
mov
pop
into
test
pop
pushf
sub
cli
xor
cld
jge
cwtl
lret
movsl
mov
inc
adc
add
shrl
mov
mov
lods
ss
popf
pop
inc
pop
cmp
cmp
cmp
mov
cmp
dec
xchg
dec
cmpsl
ss
pop
fwait
lods
pop
mov
mov
outsl
and
ja
mov
dec
addr16
xchg
das
xor
or
fisubs
push
xlat
clc
adc
dec
mov
xchg
leave
jae,pt
int
mov
pop
roll
pop
dec
cmp
aas
jae
jno
insb
clc
cmp
mov
jmp
adcl
adc
mov
inc
push
or
lcall
adc
cmp
call
lret
mov
test
or
pop
pop
adc
xchg
fists
pusha
push
lret
cmpsl
dec
lahf
cmp
stc
cmpb
mov
fwait
loope
iret
imul
into
mov
das
xor
adc
sub
scas
movl
ds
jae
in
test
lock
testl
push
cmp
mov
push
inc
in
mov
xchg
jp
pop
dec
push
enter
mov
scas
jbe
cs
mov
rcrb
jnp
leave
pop
or
popf
pop
outsl
add
sbb
jno
jmp
int3
pop
inc
adc
andl
mov
mov
and
ror
and
cmpb
jp
fnstsw
adc
fnstsw
sub
or
lods
lods
mov
out
fwait
push
add
aaa
mov
dec
jl
push
adc
decb
mov
jo
xchg
xor
mov
pop
roll
pop
and
js
mov
cmpsl
xor
push
xor
popf
cmp
inc
arpl
add
int
dec
dec
or
mov
mov
xor
sub
jl
fwait
pop
jg
movsl
dec
push
shrl
fiaddl
push
mov
fldl2e
je
sahf
das
xchg
stc
cli
in
test
negl
sbb
daa
sub
stos
insl
lret
sub
jne
push
loop
stos
je
out
xchg
sbb
mov
jnp
dec
popa
cmp
test
jmp
inc
imul
rorl
cmp
sbb
sbb
or
mov
test
xchg
je
push
lods
repz
jp
ja
sub
cmp
sahf
xchg
dec
cmp
add
fdivs
and
inc
xchg
push
and
out
jnp
push
hlt
cwtl
movsb
popf
jecxz
adc
rcrb
pop
push
mov
call
inc
sahf
shll
mov
loop
xlat
je
std
je
jecxz
enter
stc
mov
mov
jno
or
aad
mov
and
sti
enter
push
mov
inc
mov
out
sbb
movsb
push
dec
pop
cmp
arpl
icebp
dec
inc
pop
xchg
cld
popf
insb
push
jnp
or
dec
rcrb
lcall
ret
push
cmp
outsb
scas
or
dec
inc
mov
jmp
cmpl
inc
mov
sarb
rcr
jecxz
cmp
repnz
sub
push
pop
pop
test
call
inc
test
in
rorl
jp
imul
pop
mov
jbe
inc
hlt
js
aas
aaa
pop
mov
clc
hlt
imul
sahf
xchg
adc
mov
aad
int
push
mov
fadds
add
cli
mov
mov
clc
cmp
movsl
lcall
rcrb
jmp
mov
pop
cmp
jne
pop
ss
int3
dec
push
cltd
aad
aas
mov
xor
mov
incl
divl
scas
and
mov
mov
es
lds
adc
cltd
xchg
sbb
mov
sub
mov
xchg
sub
or
inc
mov
jb
and
popa
mov
mov
loop
pop
in
aas
add
add
jl
pop
daa
imul
sub
jmp
or
fbstp
movsl
add
push
jg
pop
dec
aaa
pop
es
pusha
outsl
aas
addb
in
fwait
lea
mov
xchg
jns
jp
jo
shrb
mov
xlat
es
push
jo
popa
rcll
lret
arpl
fistpl
pop
push
loopne
jb
cwtl
and
cwtl
js
or
mov
sub
mov
push
sbb
mov
inc
mov
cmp
arpl
mov
mov
addr16
sbb
and
xor
scas
icebp
pop
dec
shrl
pop
jp
push
dec
cltd
pop
lret
jge
add
mov
mulb
add
mov
cmp
lret
cltd
xchg
adc
jbe
push
inc
jge
pop
mov
and
je
push
rolb
popa
or
xorl
and
or
ds
addr16
mov
jmp
mov
aam
sbb
or
pusha
fstps
mov
mov
sub
clc
fsubrs
mov
leave
jecxz
enter
pop
shrb
hlt
imul
xorb
into
pop
add
add
inc
mov
lods
cmp
test
and
jno
test
xor
lock
mov
jp
sahf
test
ret
test
sbb
ret
sahf
js
pop
dec
xor
dec
pop
cmp
inc
xchg
jmp
icebp
shr
and
sub
out
pushf
dec
push
test
orl
outsb
cmpsb
test
xor
pop
adc
push
cmpsl
pop
cwtl
ja
sub
push
lea
cmp
adc
inc
or
push
ds
xorl
stos
jne
call
inc
xchg
fdivr
incl
mov
je
cmp
test
andl
ret
pop
lods
jb
mov
push
out
mov
addr16
int3
mov
mov
sbb
sub
stos
push
inc
mov
or
or
lds
cmp
pop
je
dec
dec
pop
mov
iret
jl
pop
adc
frstor
add
mov
lahf
sbb
fisttpl
mov
adc
pop
xor
mov
das
xor
and
test
mov
dec
jecxz
imul
adc
bound
clc
jl
add
or
and
xchg
mov
ret
inc
cmpsl
cmp
fsubrl
lret
dec
movsl
cmp
and
bound
fwait
stc
loop
xchg
dec
pop
inc
in
mull
mov
out
sarl
pop
cltd
daa
mov
pop
mov
stos
xchg
or
fisttpl
cmpsl
pop
insb
jbe
and
cmpsb
int
neg
or
add
ljmp
push
mov
rol
sbb
pop
mov
dec
mov
arpl
clc
loopne
stos
fsubr
mov
lcall
fcmovnb
add
fwait
fwait
pop
shrb
pop
mov
and
inc
fcmovb
test
mov
in
add
fldt
mov
inc
xor
cwtl
dec
push
fadd
jecxz
fsubrl
lcall
jge
sub
cmc
sbb
cmp
rclb
rcr
lcall
fs
sbb
sub
add
sbbl
lock
ret
jne
pop
cmpsl
pop
dec
out
popf
adc
fstpt
sbb
icebp
add
fsubrl
and
mov
or
insl
mov
or
jl
cwtl
mov
and
imul
xchg
leave
movsb
inc
inc
popf
sti
or
into
cmp
fdivrl
fldt
shll
movsb
or
ficoms
adc
icebp
inc
push
cmp
inc
lds
push
and
pop
cmpsb
dec
call
loopne
or
es
dec
shl
jns
jnp
mov
mov
inc
mov
pop
ficomps
mov
xchg
ds
scas
mov
push
pop
jmp
ret
pop
fildl
xlat
pop
sbb
push
push
clc
sub
fucomip
mov
add
mov
in
jmp
icebp
mov
xchg
test
sbb
faddl
sub
imul
fnsave
stc
pop
or
pushf
xor
xor
shll
add
js
mov
icebp
xor
js
pop
cwtl
pop
stc
sbb
jecxz
frstor
or
daa
xchg
jne
mov
mov
inc
push
mov
cmpsl
jecxz
xchg
cmpsb
mov
fbld
call
int
mov
in
sarl
enter
pop
push
or
jle
and
xchg
test
mov
ja
ret
loopne
mov
lock
dec
rol
xchg
repz
mov
mov
sbb
mov
pop
cwtl
lret
movsl
mov
sbb
dec
lcall
add
lret
test
dec
mov
cmp
sub
mov
and
in
mov
mov
jb
stos
adc
call
faddl
mov
lods
cmp
mov
lahf
scas
movl
loop
xchg
inc
mov
mov
clc
jo
add
out
sbb
adc
sbb
fbld
xchg
mov
ja
data16
cmp
add
sti
sti
pop
jp
inc
mov
clc
jle
inc
les
mov
aam
xor
pop
sbb
push
daa
dec
add
or
xor
les
dec
push
sahf
xor
orb
jl
imul
xor
inc
xor
scas
sti
ret
ss
dec
cmpsl
mov
jne
rcl
lret
mov
lea
gs
jns
push
test
mov
mov
lret
scas
ljmp
bound
push
cmp
lods
mov
cmp
scas
push
scas
cmpsl
push
jge
and
dec
mov
and
push
sub
add
xor
dec
mov
stc
push
or
nop
cmp
or
mov
fisubrs
divl
outsl
test
stos
push
mov
mov
push
loopne
mov
dec
add
lcall
enter
mov
mov
sub
inc
enter
dec
inc
jle
push
add
test
incb
pop
das
pushf
jne
mov
and
mov
inc
mov
call
mov
mov
mov
xchg
data16
or
xchg
shll
cli
lea
xchg
xor
roll
mov
scas
mov
pop
stos
test
adc
mov
sbb
lods
scas
ljmp
fisubl
dec
pop
pop
rcll
mov
cwtl
ds
cltd
adc
fdivrs
lds
jl
sub
xorl
inc
movsb
jl
xchg
add
in
push
push
cwtl
lahf
mov
mov
or
inc
fs
cmp
xlat
clc
hlt
jl
frstor
or
mov
cmp
lods
jnp
and
cli
xchg
movsb
mov
cmpsb
sbb
lds
xchg
fcompl
mov
mov
iret
sbb
jae
in
jb
enter
dec
pop
and
and
das
cli
ret
push
pop
das
pop
dec
pop
jbe
out
jno
mov
dec
xchg
test
ds
ret
cmp
lahf
and
jno
cmp
cmc
movsl
sbbb
repz
cwtl
bound
pop
mov
popf
or
mov
dec
add
ss
rorl
int
push
sbb
bound
dec
dec
sbb
aas
mov
push
ljmp
xchg
lea
outsl
lret
ret
pop
jb
fadd
jnp
pop
je
dec
push
adc
int3
scas
cmp
or
cli
xor
test
pop
rcrl
lds
sbb
mov
cltd
lds
aam
jne
mov
mov
mov
fwait
jne
sahf
ror
fs
mov
xor
les
inc
fwait
dec
clc
jg
sbb
jno
jne
dec
lods
in
dec
inc
adc
xchg
cmc
adc
mov
fbstp
lret
imul
clc
mov
mov
lods
pop
xchg
aad
add
fwait
nop
aaa
mov
sbb
inc
pop
loop
fistpl
aad
pop
xor
push
nop
mov
testb
fsubp
jne
aad
int3
pop
les
aas
inc
inc
popa
test
sbb
xor
cmp
movsl
xchg
mov
fmuls
pop
sahf
and
adc
inc
rcll
fwait
lret
lcall
gs
andl
or
sub
jns
es
pop
std
je
cli
add
lods
es
aad
jo
lods
mov
xor
out
sub
movsb
sbb
dec
mov
aam
or
jo
aam
mov
sbb
pop
jl
addl
mov
push
push
mov
int3
and
mov
sub
fcmovnb
adc
shr
repz
sbb
mov
iret
and
pushf
lahf
fninit
lock
lods
dec
cli
aad
add
adc
mov
loop
in
jecxz
push
cld
arpl
xchg
mov
fucomp
test
dec
lods
lret
xchg
mov
jle
mov
cmpsl
js
sbb
xor
sbb
stc
test
bound
cmp
stos
lods
push
lcall
cmp
xchg
xchg
pop
push
cmp
push
mov
mov
add
cmp
xchg
cltd
push
adc
ss
mov
push
arpl
popl
js
pop
cmp
mov
pop
out
mov
inc
cmpsb
push
lods
pop
popf
ljmp
and
pop
cwtl
xor
mov
lods
data16
gs
jmp
push
add
popf
inc
inc
cld
adc
inc
push
fcoms
aam
push
adc
rcrb
pop
push
mov
sub
dec
lock
fistpl
adc
cwtl
jo
pop
add
mov
jnp
inc
dec
jbe
aad
pushf
add
fcomip
shlb
loop
fidivs
hlt
lods
push
add
or
out
clc
mov
pop
jnp
clc
cmpsl
lahf
fnstenv
sbb
movsl
and
xchg
push
repz
xchg
sbb
pop
jae
lret
inc
pop
jnp
and
arpl
xor
mov
pop
rcl
fs
xchg
mov
enter
jb
jl
rol
and
mov
iret
add
loop
xchg
mov
inc
xor
les
mov
mov
cltd
mov
pop
mov
xor
jae
es
jne
xchg
ja
sti
xchg
xor
in
xchg
inc
fwait
push
fs
push
insl
or
mov
imul
ret
push
out
das
xor
sub
repz
mov
mov
push
cltd
fstl
jnp
mov
sbb
lods
je
sub
roll
das
lock
mov
and
dec
push
cld
mov
cwtl
mov
movsb
fidivrl
mov
xchg
mov
and
jae
fldt
pushf
dec
arpl
xchg
add
std
bnd
push
lods
sub
fisubrl
sbb
fst
subl
mov
xchg
mov
push
cmp
pop
fstpt
popf
lcall
loope
xorl
add
push
notb
ljmp
dec
aam
adc
inc
mov
sub
cmp
xor
xchg
fbld
mov
mov
insb
es
bound
out
mov
aaa
and
push
mov
mov
fsubr
popa
lret
mov
sbb
fnstcw
movsb
mov
imul
popf
jnp
xor
in
sbb
lock
jns
rcll
shrl
aam
jg
mov
xchg
xor
mov
cmp
dec
lods
mov
stos
push
xor
in
lods
das
fdivs
dec
popf
adc
mov
mov
dec
adcb
cmc
idivb
int
popa
dec
or
movsl
xorl
jns
xor
xchg
push
sbb
push
jg
pop
xchg
mov
sub
mov
cld
in
xchg
shlb
jnp
add
cmp
xor
shrb
popf
lock
jecxz
jae
and
aad
test
pop
push
js
sub
movsb
jp
dec
inc
mov
fld1
gs
aad
push
or
sbb
fxch
pop
and
fdiv
mov
xchg
test
xchg
mov
fsubr
pop
jp
sarb
pop
and
mov
jae
loopne
enter
cld
imul
test
jecxz
movsl
mov
sbb
inc
mov
mov
push
rcll
or
and
adc
clc
cmpsl
cmpsb
adc
test
lods
push
xchg
dec
cmp
in
jne
fstpt
pop
mov
or
sbb
sbb
push
jbe
fistl
xchg
call
enter
dec
inc
sbb
in
xchg
xor
dec
rclb
std
bnd
jg
mov
pop
or
je
or
adc
inc
inc
sbb
les
mov
cmp
pop
mov
insl
lret
popf
jmp
and
loope
jns
sbb
fs
insl
mov
sbb
adc
mov
add
sub
into
imul
fwait
in
in
ja
cmp
out
cmp
arpl
out
in
in
pop
cli
fists
test
push
cli
jns
xorl
mov
dec
pop
jns
push
mov
neg
adcl
push
hlt
movsb
lret
xchg
js
xchg
negl
mov
mov
dec
popf
xor
mov
dec
mov
add
push
push
mov
sub
sub
shr
pop
xchg
sub
xchg
inc
mov
adc
fucomi
repnz
popa
xchg
push
inc
fwait
out
push
loopne
sub
or
movsb
cwtl
pushf
dec
xor
sbb
mov
push
iret
sub
pop
inc
inc
pop
xchg
jbe
lret
das
mov
pusha
fidivs
dec
pop
jmp
or
cltd
fsubs
faddp
enter
cli
jecxz
sub
xchg
sub
sub
in
push
sbb
mov
bound
shll
pushf
pushf
sbb
addr16
out
mov
lds
outsb
in
sub
lock
aas
rcll
adc
fs
or
xchg
xchg
popf
jle
cwtl
pmuludq
xlat
dec
sbb
les
in
lret
les
fadds
xor
icebp
xchg
jae
fs
sbb
cmp
cmp
arpl
sub
mov
dec
pop
scas
ss
lods
loope
xchg
in
mov
dec
dec
mov
and
icebp
cmp
cmp
ja
popf
ret
adcl
and
pop
or
or
mov
leave
insb
xor
dec
aam
repz
push
xchg
or
ret
mov
repnz
pop
ret
fxch
clc
pushf
sbb
add
enter
push
adc
push
xor
adc
pop
add
jns
dec
imulb
stos
std
push
adc
out
xchg
dec
xchg
frstor
insb
movsl
es
cmp
pop
mov
adc
xlat
ds
sahf
aas
mov
andb
out
fsubrp
mov
sbb
push
pop
sub
dec
movsl
mov
xchg
sub
push
aas
xchg
mov
shlb
mov
loop
ret
sarb
movb
shr
pop
pop
cmp
mov
dec
mov
dec
xchg
inc
push
lcall
stos
hlt
mov
rolb
les
and
mov
add
pop
rolb
icebp
jnp
cmp
mov
loop
and
xlat
in
divl
in
inc
je
sub
ljmp
lds
mov
xchg
ljmp
push
shlb
inc
push
popf
add
sbb
inc
pop
fnsave
cmp
jecxz
int3
push
push
loope
mov
mov
mov
ljmp
or
je
or
sub
ds
pop
inc
pop
mulb
push
dec
jecxz
scas
xor
cmp
js
cmp
clts
enter
adc
adc
fwait
cld
jg
stos
ret
inc
and
xor
cld
sarb
stos
rcll
scas
or
mov
fstpl
cli
lret
cmc
neg
xchg
push
repz
mov
icebp
inc
inc
out
xchg
outsb
push
jl
or
popf
push
mov
stos
jne
mov
mov
push
jne
pop
ret
cwtl
inc
mov
addb
sbb
bound
fwait
in
loop
xchg
mov
jne
fstps
jle
js
pop
aad
dec
mov
pop
lock
or
les
jnp
add
lds
push
mov
and
call
xlat
jae
flds
xor
scas
jnp
cmc
imul
push
int3
pop
gs
adc
or
loopne
lcall
mov
sbb
or
mov
daa
pop
andb
adc
icebp
sti
mov
xor
pop
dec
hlt
mov
es
add
jp
lahf
push
cwtl
lret
lahf
sub
arpl
cmp
jge
shll
jge
int3
loope
scas
mov
fldl
cmp
ss
xchg
lcall
dec
sub
jl
sbb
cmp
enter
les
push
fwait
mov
pop
test
lret
xchg
cmp
fisubrs
mov
jmp
ret
nop
dec
lods
push
pop
rclb
adc
divl
mov
push
mov
std
test
clc
add
mov
fwait
xchg
call
dec
sahf
mov
and
push
mov
jecxz
test
cmp
push
cmpsb
sbb
out
pop
inc
pop
and
and
pop
xchg
push
ds
sub
ret
lahf
call
and
sub
mov
sub
jns
adc
cmp
lret
repnz
inc
cmp
dec
scas
and
sbbb
jp
nop
pop
aaa
sbb
lods
ret
dec
sarb
push
clc
mov
or
scas
testb
leave
xchg
mov
mov
inc
mov
mov
imul
cmp
ret
adc
insl
cmpsl
add
cltd
mov
mov
inc
cmc
pop
rclb
sub
lods
inc
pop
jge
cmp
dec
addr16
push
jle
repz
aas
cmpsl
dec
xchg
pop
inc
pushf
and
mov
nop
inc
mov
cmp
sti
lcall
push
xor
sub
scas
cmpsl
ret
adc
insb
mov
out
shll
dec
lahf
mov
sub
fwait
xor
xor
inc
cmp
in
aad
lea
dec
int3
mov
aam
jecxz
inc
pop
jnp
pop
loopne
pop
aaa
decl
fsts
mov
js
lock
in
roll
or
stos
enter
adc
cltd
jne
dec
arpl
sub
cmpsl
fnsave
stos
aam
cmc
mov
push
in
lods
sbb
shrl
inc
fs
dec
jae
mov
pop
inc
xor
nop
es
mov
int3
sbb
jne
xchg
xor
scas
ss
xchg
fnsave
addr16
pop
push
pop
es
lahf
inc
jg
xchg
lret
pop
jg
inc
imul
mov
rcrl
lods
es
sbb
outsl
gs
std
jb
jmp
std
or
and
sbb
and
add
jecxz
mov
outsb
push
xlat
pop
fldenv
xor
insb
aaa
sbb
jbe
pop
xor
adc
adc
ret
jge
pop
das
mov
jbe
add
pop
dec
mov
lret
fldl
inc
into
fwait
pop
cmovae
jl
sub
lahf
lret
das
jnp
cmpsb
jge
mov
pop
ds
fs
inc
arpl
or
popa
lret
fsubrl
stos
lock
sbbb
dec
leave
idivl
mov
sbb
mov
and
lds
jnp
mov
xchg
outsb
push
loop
jo
adc
inc
rcrl
mov
push
push
or
test
fcoml
dec
jecxz
mov
jp
scas
je
cmp
mov
fwait
sub
add
add
inc
imull
adc
mov
sbb
cmp
mov
or
xor
fsubs
xor
popa
outsl
movnti
mov
mov
mov
ret
int
mov
inc
push
mov
incb
scas
mov
inc
inc
mov
jbe
inc
jbe
mov
inc
imul
inc
xor
int
aas
mov
mov
jbe
pop
rolb
test
dec
shrl
or
mov
test
adc
mov
mov
stos
add
fwait
and
lahf
cmp
fdivrl
cld
jmp
lret
fmuls
cltd
adc
or
loop
mov
leave
lahf
je
std
inc
dec
jnp
movsl
lea
mov
adc
add
inc
add
cmc
cmpb
or
sarb
bound
mov
or
enter
and
pop
jmp
cmpsl
xchg
sbb
pop
xchg
aam
push
ret
sub
xor
sahf
pushl
stos
mov
test
bound
add
jb
mov
sahf
and
and
xchg
in
dec
pop
and
sbbl
push
jne
jae
push
test
loopne
out
and
cmc
sub
pop
fisttps
lds
mov
xchg
inc
cld
xchg
lret
imulb
das
icebp
fildll
iret
mov
fldenv
inc
in
mov
and
stos
adc
add
jns
negb
sub
pop
popf
push
fcoms
pop
pop
mov
jo
cmp
ss
dec
mov
gs
std
cmp
push
fcoml
dec
dec
fst
jnp
decb
mov
les
test
test
jle
add
inc
sbb
mov
xchg
pop
test
stc
mov
es
fwait
adcb
push
pop
mov
fwait
insl
cltd
jge
add
cwtl
adcl
mov
outsb
pop
out
add
fsubr
lahf
outsb
xchg
enter
lock
jnp
lds
xchg
divb
push
add
lods
int
pop
sub
lcall
or
stc
inc
sbb
insb
iret
dec
sbb
dec
aaa
pop
imul
jecxz
mov
push
pop
mov
push
sahf
cwtl
icebp
ss
daa
imulb
fbstp
repz
imul
mov
and
lret
aad
std
fisttpll
or
cmpb
cmp
les
fdivs
les
push
cmp
mov
stos
lcall
or
gs
push
out
cmc
test
sbb
fabs
and
iret
popa
jno
andl
jg
stc
pop
push
pop
and
mov
and
icebp
mov
xor
jmp
inc
mov
add
ror
dec
xchg
out
std
lea
xor
mov
rolb
push
mov
add
jae
push
sub
jne
gs
cmp
sub
test
lcall
lea
cltd
fsubs
pop
stos
and
add
inc
ficoml
imul
and
test
pushf
dec
out
popf
das
sbb
push
in
mov
mov
inc
adc
xor
inc
jmp
lret
lahf
jne
mov
and
scas
or
push
loop
popl
lock
jno
add
imul
xchg
xchg
push
scas
push
gs
xchg
shrl
dec
movsb
aad
xor
aaa
xchg
lret
inc
pop
in
test
popf
insb
xor
out
std
rolb
mov
mov
clc
or
jmp
and
insb
mov
push
mov
mov
shlb
mov
test
movhps
mov
hlt
jo
fwait
push
shlb
fwait
mov
mov
mov
sti
sbb
dec
push
cmc
pop
gs
sti
pop
aaa
mov
test
sti
int
push
ror
push
xor
xor
jae
inc
xor
in
mov
imul
cli
les
or
cmp
pop
mov
enter
mov
rorb
shrl
mov
in
lret
add
mov
and
repnz
or
or
rclb
xchg
fimuls
pop
dec
add
and
into
push
aad
adcb
jne
xchg
leave
jge
movb
push
mov
idivl
pop
inc
fisubs
je
adc
push
xor
daa
rcll
out
push
icebp
jle
jmp
int3
jl
mov
jnp
xchg
movsl
and
mov
inc
outsl
mov
enter
sbb
jg
shr
nop
fcoms
or
fidivs
testl
sbb
pop
movsl
pop
in
pop
sbb
aam
sbb
add
jno
stos
sbb
rcrb
mov
lcall
xchg
sbb
ret
in
movsl
add
aas
mov
int3
lds
cmc
inc
dec
and
xlat
movsb
mov
dec
mov
mov
rcl
mov
xor
push
sbb
std
in
jns
pop
imul
fsubl
inc
movsb
push
jl
sbb
add
push
sbb
les
inc
les
icebp
cmp
or
and
cwtl
add
mov
fnstenv
cmpsl
sbb
sbb
cli
xor
mov
xorl
pop
pop
cltd
leave
sbb
and
jg
and
xor
push
adc
or
sub
daa
jne
in
leave
test
movsl
sbb
mov
imul
pusha
testl
or
loope
pop
in
add
nop
iret
mov
and
scas
movsl
mov
in
sub
inc
cli
mov
dec
data16
sbb
cmp
imul
fisubl
adcb
push
sbb
std
mov
fildl
inc
sub
aam
fwait
lods
movsb
jl
in
movsl
mov
mov
cmp
and
inc
dec
les
test
mov
dec
idivl
add
jge
je
or
jmp
pop
mov
xchg
mov
adc
jbe
pop
mov
xchg
adc
xor
jbe
xlat
bound
out
mov
aaa
and
imul
out
cmc
mov
mov
rorl
hlt
jmp
pop
dec
mov
ret
arpl
cmp
pop
or
sbb
xor
add
mov
jmp
cmc
mov
jg
divb
lahf
or
jmp
lds
fwait
cmpsl
mov
jns
push
pop
popa
scas
mov
or
repnz
scas
xchg
mov
lock
out
dec
cmpsl
addb
and
push
mov
dec
cld
sbb
cs
jbe
pop
dec
push
mov
add
xor
mov
or
adc
fsubl
jne
mov
xor
jge
data16
xchg
loope
aam
sbb
fists
xchg
pop
mov
fidivrs
xchg
rol
xor
dec
pop
dec
push
or
shrb
dec
fwait
shll
sbb
sbb
sahf
in
jecxz
ja
pop
mov
test
sub
lahf
lds
fucomip
xchg
cmp
out
jmp
add
mov
sbb
movsl
into
pop
xchg
cmpb
xchg
out
dec
xor
sbb
cmp
rclb
dec
mov
testb
int
les
aas
out
ret
js
gs
in
ret
sub
arpl
adc
lds
cmp
or
cmpsl
fdivrp
daa
sahf
pop
push
fsubr
clc
mov
mov
inc
jecxz
pop
and
test
mov
orb
fsubrs
adc
ret
filds
movsb
add
ret
inc
dec
fidivrs
adcl
cltd
cli
pop
jecxz
cmovnp
pop
repnz
paddq
sub
pop
pop
jp
jne
in
pop
xchg
das
cltd
jg
or
enter
lea
dec
mov
push
inc
mov
pop
ret
test
add
movb
aam
test
jmp
mov
xchg
iret
jb
filds
mov
loope
push
mov
xchg
sbb
and
cwtl
push
rcrl
in
cmpsl
inc
shlb
push
test
scas
mov
fbld
les
into
sbb
lods
fs
sub
sahf
push
outsb
adc
sbb
and
loop
mov
fistpl
test
jge
imul
sub
sbb
ficoms
fisttps
lret
jg
in
inc
jge
and
add
andps
adc
ds
xor
push
aas
mov
in
outsb
mov
shrl
ret
xchg
test
movsl
cmp
cltd
loope
fxam
shl
sbb
stc
jo
loop
test
xor
jecxz
sbb
push
xchg
rcrb
clc
dec
fldenv
dec
divl
lcall
movsb
cmp
add
ja
sbb
xor
pusha
cmp
ret
push
lock
ret
mov
insl
push
push
loope
cmp
push
ficompl
mov
push
out
cmp
arpl
les
fsts
stc
scas
jnp
or
jbe
movsb
mov
inc
lcall
js
mov
and
in
xchg
leave
cmp
and
jge
and
aaa
inc
iret
sarb
int
andl
ret
and
or
xor
jle
xchg
out
mov
mov
sbb
sti
xor
jecxz
jmp
mov
push
and
es
add
inc
jne
and
pop
dec
mov
test
mov
mov
or
das
cmp
mov
jae
sbb
cmp
test
lahf
lret
cmpsb
mov
mov
sti
push
or
aaa
adc
ljmp
push
cld
xchg
inc
push
dec
cmp
sbb
pop
out
jne
mov
dec
into
arpl
xor
test
jne
inc
bound
flds
xchg
int
mov
jae
jle
lcall
jns
pop
inc
and
imul
xchg
pop
fcompl
scas
iret
adc
data16
fisubs
loop
xor
xlat
add
adc
mov
add
aaa
and
cwtl
lahf
inc
fwait
lock
pop
pop
xor
loop
xor
xchg
movsb
test
pop
inc
xchg
pop
cmpsl
mov
xchg
fld
jno
popf
lods
ret
je
adcb
pop
aad
jb
xor
subb
sbb
imull
int
jg
jbe
add
stos
ja
mov
in
popf
pop
push
iret
mov
icebp
lret
fwait
lods
xor
lret
jecxz
movsl
inc
sbb
push
mov
pop
js
and
sbb
pop
push
stc
lret
pop
mov
andb
and
imul
repnz
xlat
sub
mov
ss
inc
and
jno
std
movsl
movsl
mov
popf
outsb
leave
dec
pop
fcoms
sbb
push
shll
jbe
das
sbb
xchg
adc
lret
iret
jns
or
ss
movb
cmp
loope
sahf
mov
gs
out
pushf
mov
popf
repz
js
pop
ret
add
and
call
mov
out
sub
or
daa
inc
gs
lahf
repz
mov
jae
push
repz
gs
out
sbb
test
push
dec
push
lret
mov
aam
repz
clc
rolb
sbbl
out
stos
std
jnp
in
rolb
lahf
mov
jae
cmp
fwait
cwtl
in
repnz
dec
mov
inc
aad
mov
ror
in
add
mov
int3
addr16
sbb
rcrb
in
addr16
stc
pop
dec
jmp
mov
imul
lock
jae
inc
popf
pop
pushf
lcall
pop
idivb
xchg
dec
enter
aas
push
lahf
idiv
movsl
insl
ret
jno
inc
call
jmp
decb
stos
push
cmpsl
or
xchg
popl
jg
lahf
mov
cmp
xchg
and
inc
pushf
adc
or
das
dec
stc
inc
xchg
inc
xor
pop
xor
mov
push
test
ret
out
lcall
adc
sbb
mov
repz
movsl
push
pop
cmp
in
lods
and
add
xlat
jecxz
test
xor
cmp
push
jb
bnd
jge
push
xchg
dec
lea
loopne
cmc
fwait
sbb
xchg
push
mov
sbb
cmp
and
cli
call
out
push
testb
mov
add
dec
push
sbb
aam
xor
rorb
xor
test
mov
dec
lods
mov
or
cmpsl
sbb
sub
rorl
lds
fdivp
cmp
xor
xchg
xor
add
fimull
pop
adc
or
jge
nop
jno
mov
push
pop
add
cltd
lods
cmc
fnsave
scas
jne
sub
or
jo
test
lock
mov
add
je
add
out
mov
stos
gs
push
cwtl
inc
call
cmp
jo
cmp
mov
xor
popf
bound
add
call
add
adc
add
xor
es
cld
mov
nop
repz
movsl
lock
ljmp
push
pop
mov
ljmp
mov
sarl
sbb
cld
into
or
dec
jecxz
push
fnstenv
nop
lret
add
ret
xor
into
dec
inc
mov
loope
fwait
stos
aad
sbb
or
mov
adc
out
adcl
dec
jecxz
pop
sbb
incl
in
pop
sub
push
inc
mov
cwtl
mov
inc
xchg
popa
jle
iret
push
ja
push
xchg
jbe
mov
gs
dec
fucomi
add
jge
dec
test
dec
sti
jb
and
dec
inc
int3
sbb
dec
jl
clc
test
imul
or
nop
dec
and
push
sbb
insb
lods
ja
addr16
jmp
lret
lods
xchg
add
mov
add
mov
push
adc
sub
mov
adc
pop
leave
fisubl
sbb
pop
sbb
mov
enter
ds
xchg
mov
es
mov
adc
mov
rcrb
or
and
cmp
popf
dec
and
jecxz
jmp
inc
inc
inc
push
outsb
dec
pop
xchg
pop
out
lods
dec
pop
test
pop
mov
jno,pt
lret
les
pop
les
das
push
lret
xor
dec
in
imul
lods
jle
cmp
ret
arpl
cmp
add
jg
xchg
mov
enter
push
jno
add
push
data16
inc
ret
jb
sbb
pop
xchg
gs
outsl
xlat
sti
xchg
jge
adc
into
push
lret
cld
cli
xchg
mov
pop
aaa
inc
ret
fldl2e
cmpb
test
out
adc
aaa
es
xor
push
jp
out
mov
pop
je
pop
ucomiss
mov
pop
outsb
pop
fs
and
mov
inc
orb
mov
iret
cmpl
repz
das
cmpps
ret
push
pop
adc
les
dec
and
add
pop
and
sbb
or
dec
push
pop
fldenv
mov
push
dec
shlb
std
xor
xchg
sub
loope
xor
dec
icebp
fucomi
and
roll
mov
xchg
ret
mov
adcb
jns
or
xchg
push
xchg
push
sahf
pop
int3
xor
leave
loop
sub
sbb
mov
mov
mov
and
push
aam
cmp
push
aam
jp
pop
cmc
iret
insb
fsubs
test
test
cmpsb
cmp
out
repz
cmpb
push
add
movsb
repnz
repnz
xchg
jnp
or
faddl
loop
mov
daa
divl
ljmp
movswl
jae
mov
fwait
lahf
out
adc
fnstsw
test
hlt
sub
sbb
xchg
cmp
cmp
insl
cmpsb
sbb
daa
mov
jge
sub
cmp
pop
adc
mov
xor
incb
mov
fistpll
loope,pt
adc
orl
adc
dec
or
outsl
ret
jo
mov
stc
stc
push
int
fdivr
sbb
in
xor
dec
lds
mov
ss
lea
pop
nop
xor
or
mov
add
dec
ficoml
xchg
pop
sub
jns
enter
fdivr
fadds
lds
lahf
jo
sbb
in
fidivrs
xchg
cmp
cld
xchg
add
loop
hlt
push
and
mov
lods
imul
mov
jl
filds
leave
cli
int3
rolb
enter
mov
xchg
cli
jmp
sbb
lret
loop
pop
in
ja
adc
ret
rorl
add
xchg
pop
inc
sbb
shrb
mov
daa
test
inc
cmp
mov
movsl
xor
jle
pop
jnp
ret
xor
lock
test
xor
and
fisubrl
pop
pop
cmc
jecxz
ret
scas
dec
fs
dec
pop
push
mov
dec
fwait
dec
mov
lahf
jp
sub
loope
mov
and
jg
xchg
pop
aas
cmpsl
rclb
out
test
jnp
add
dec
fdivs
arpl
and
bound
stos
inc
ss
test
out
out
ficompl
and
shl
jno
out
mov
mov
sti
aad
sub
jae
adc
lret
dec
mov
mov
xor
or
stos
out
xorb
prefetch
add
sbb
popf
sub
inc
fs
in
lds
add
div
cmp
inc
scas
arpl
and
dec
loop
lret
sbb
dec
inc
mulb
mov
negb
jo
test
add
jno
je
pop
hlt
mov
xchg
arpl
push
jne
int3
gs
or
jb
movsb
add
addl
orl
out
subl
and
icebp
xchg
xorl
mov
fmuls
cltd
lret
pop
rcll
mov
sbb
inc
mov
in
cmp
sbb
pushf
mov
bound
fwait
sub
sub
fucomi
mov
fmul
arpl
lcall
sub
or
imul
or
pop
and
and
inc
repz
andl
pop
sub
addl
leave
cltd
mov
push
aad
pop
rorl
sub
dec
mov
mov
jns
dec
lahf
pop
xlat
jb
ret
dec
sbb
push
test
xor
mov
sub
or
push
mov
cmp
or
dec
dec
int3
or
adc
jge
je
lahf
dec
aas
mov
bnd
mov
mov
xchg
mov
inc
cmp
or
enter
jne
xor
and
pop
dec
enter
push
insl
leave
dec
aaa
cli
leave
call
sahf
xchg
cld
les
int
movsl
mov
mov
or
mov
jbe
stos
aad
or
xor
sbb
ljmp
mov
xor
addr16
in
imul
dec
add
lods
inc
call
adcb
xor
mov
fsubr
adc
sub
mov
xor
sbb
mov
aam
mov
xchg
fsubl
pop
mov
xor
xchg
add
fisubrl
fisttpll
dec
xor
fs
xchg
repz
sub
lock
lods
dec
jg
mov
and
pop
hlt
sbb
in
idivl
inc
roll
call
and
xchg
xchg
mov
mov
lock
mov
sbb
xchg
pushf
in
mov
push
jns
popa
or
push
or
lods
hlt
je
xchg
xchg
mov
mov
pop
pop
xchg
mov
xchg
shlb
outsb
iret
sarb
and
mov
jno
xorb
lods
xor
jae
mov
lock
test
ja
xchg
lahf
clc
or
cmp
lock
add
cmpsl
jno
call
dec
ljmp
jnp
mov
scas
cmpsl
pushf
mov
cltd
pusha
push
sub
mov
loopne
sub
hlt
in
add
nop
ljmp
push
cmp
push
adc
mov
sub
movsb
push
dec
jmp
sbb
leave
lahf
add
fidivrs
fs
iret
inc
pop
jno
mov
loopne
push
jl
lret
add
stos
subl
fcomp
outsl
incl
xchg
sub
psllw
repnz
sub
adcl
fdivrl
in
fwait
lods
dec
push
mov
dec
inc
fcompl
pusha
enter
sbb
ljmp
push
add
inc
inc
imul
test
and
mov
cmpsl
or
xor
nop
and
add
in
xchg
es
ret
dec
aaa
cmpsl
add
cmp
cmpsb
jl
jbe
iret
or
ret
dec
test
stc
pop
insb
mov
es
lahf
pop
mov
test
mov
cmc
ljmp
popf
in
jmp
les
aas
dec
mov
outsb
fsts
jl
in
or
xchg
cltd
fists
mov
lods
js
gs
rorb
inc
into
mov
pusha
call
mov
mov
fmul
jno
andl
ljmp
inc
leave
push
xchg
xor
dec
mov
fldenv
inc
xor
imul
out
ja
jecxz
jmp
ret
mov
in
or
iret
inc
sub
ror
shlb
adc
adc
int
and
rorl
add
cmp
push
sub
mov
addr16
inc
sub
clc
inc
lds
jnp
jp
and
pusha
xor
stos
std
mov
push
js
roll
icebp
sbb
ljmp
pop
popa
int3
fisttpll
jg
pop
xchg
test
xor
cmpsl
dec
and
mov
mov
nop
imul
xlat
xor
orb
stos
dec
push
jo
cmpsl
outsl
xchg
fcmove
gs
or
and
xchg
or
sub
jecxz
lahf
mov
jmp
fildll
pushw
scas
xorl
and
push
in
dec
mov
iret
and
mov
imul
stc
clc
jle
addr16
test
mov
test
es
fisubrs
sbb
in
bound
out
imul
xchg
or
push
mov
rol
testb
push
mov
mov
repz
inc
rcrb
add
test
mov
sub
hlt
jns
jnp
mov
scas
ret
ja
or
shl
cmp
fwait
shl
stc
jno
lret
cli
lock
fsts
cwtl
or
and
outsl
sub
sahf
xchg
pop
jg
and
dec
cs
xchg
leave
pop
mov
sub
fninit
sbb
ja
lods
or
gs
inc
mov
jae
sbb
aam
inc
imul
stos
std
mov
jae
andl
mov
in
enter
lahf
adc
cmp
in
jp
dec
icebp
popf
sub
add
cmc
mov
inc
nop
addb
aam
std
jb
jmp
std
adcl
or
or
fisubs
fsts
cwtl
cmp
cltd
dec
add
mov
dec
inc
repnz
push
cwtl
lea
pop
mov
mov
out
divb
cmp
repz
xor
sbb
push
jno
test
fwait
lahf
xchg
dec
lcall
adc
jecxz
xor
cmpsl
mov
aad
inc
adc
jg
adc
push
cmp
out
pushf
stc
pop
cli
mov
loope
push
mov
repnz
pushf
xor
pop
fucom
stc
dec
loopne,pt
dec
mov
popa
push
adc
inc
sbb
xchg
stos
lds
jne
inc
add
mov
mov
jne
js
push
sbb
icebp
sub
into
scas
je
cmp
push
jg
enter
jno
js
and
xor
ret
arpl
lret
jo
test
inc
jns
dec
inc
jo
cltd
xchg
test
or
out
imul
xchg
pop
test
mov
mov
in
mov
xchg
sub
cmp
pop
pop
mov
dec
clc
jb
popf
cwtl
fidivs
adc
inc
adc
repnz
loope
movsl
cmp
mov
and
cmc
sub
call
fstpt
lock
aas
mov
scas
cs
xchg
fcomip
das
lock
and
insl
fwait
ret
mov
dec
inc
loopne
lods
push
xor
xor
mov
or
rol
bound
dec
pop
insb
iret
enter
inc
imul
mov
test
jl
aad
pop
sbb
sub
lods
mov
test
rclb
xchg
ret
xchg
pop
fistpl
andl
dec
inc
out
out
mov
inc
pushf
cltd
sub
into
sub
adc
in
push
outsb
ret
shl
and
leave
jp
fnsave
inc
into
dec
xchg
enter
mov
pop
jl
popf
push
inc
mov
es
adc
scas
inc
lahf
sbb
call
pop
je
out
addr16
xor
mov
xlat
jg
insl
sbb
aad
ja
jecxz
dec
sbb
mov
sahf
and
cltd
mov
das
movsb
ret
cld
dec
cmp
push
fwait
movsb
push
add
das
sbb
out
dec
arpl
fstl
sbb
test
stos
enter
xor
fneni(8087
adc
and
fs
push
mov
pop
pop
shrl
arpl
mov
inc
jg
leave
cmc
push
mov
out
sub
rolb
cmp
push
orl
in
aam
pop
and
movsb
out
dec
sub
or
cmp
jb
aaa
jo
repnz
mov
add
mov
mov
mov
or
jl
adc
adc
xchg
sahf
or
popa
mov
pop
dec
test
mov
imul
mov
clc
cmp
sbb
push
mov
fsubr
fwait
push
mov
cmc
mov
push
adc
push
jbe
jo
clc
ss
mov
push
repnz
push
and
xlat
hlt
xchg
dec
pop
lret
mov
inc
and
dec
inc
jns
lret
ficoml
lds
adc
push
mov
adc
dec
dec
movsb
fists
jne
cs
xchg
cltd
push
add
push
pusha
push
push
adc
jge
lds
push
mov
xchg
add
clc
xor
cmc
cmp
pop
std
mov
mov
loope
clc
sbb
xchg
cmpsl
clc
mov
stos
aad
push
fwait
in
push
or
outsl
push
inc
lds
inc
mov
repz
cmp
aas
inc
bound
fs
into
jmp
mov
das
mov
mov
rcrl
or
sbb
xlat
jmp
roll
popl
rol
pop
cld
mov
sub
std
mov
jl
rorb
and
test
testb
repz
orb
and
lods
loop
fldt
push
mov
jae
inc
jbe
jp
out
inc
cli
and
jne
adc
popa
gs
jmp
iret
adc
lret
pop
xchg
lret
and
cltd
lods
jle
fsub
lahf
fildll
ja
push
mov
fbld
xchg
mov
popf
dec
mov
mov
mov
lods
xchg
je
add
dec
and
call
in
fmulp
test
fbstp
xchg
test
nop
sbbb
ja
je
je
or
mov
inc
insb
mov
je
jno
mov
xchg
nop
lds
or
ja
sbb
sarl
jb
xor
movsb
ret
lahf
sbbb
fs
jp
orl
jo
popa
cmpsb
fistps
pop
and
and
cmp
sbb
mov
test
jo
mov
pop
movsb
test
repnz
lret
lahf
mov
push
in
inc
jp
mov
mov
roll
sbb
lret
lret
fsts
dec
dec
pop
jne
add
jl
push
and
das
and
lret
js
sbb
xchg
jl
xor
orb
adc
jl
jo
cs
dec
mov
xchg
xchg
cmp
rorb
mov
sahf
test
das
push
fdivrs
jp
dec
mov
inc
test
push
mov
sbb
cwtl
enter
je
clc
xchg
test
into
fiadds
jbe
or
loop
add
rcr
mov
dec
rorb
cmp
hlt
mov
out
movl
add
and
jp
push
dec
adc
clc
lds
test
lahf
rcrl
cwtl
add
idivb
xlat
or
mov
aaa
test
ret
sbb
fs
xlat
mov
dec
sub
mov
cs
shrb
jno
outsl
lahf
pop
fsin
std
xor
out
cmc
dec
mov
pop
or
lods
cmp
add
sbb
aas
sbb
dec
cmpsb
das
adc
aas
lods
shrb
sti
add
and
in
pop
mov
hlt
pushl
sbb
or
out
std
inc
lea
es
into
cmp
inc
adc
das
dec
jp
mov
movsb
adc
cmp
sbb
aam
xchg
inc
mov
and
adc
cmpsb
inc
pop
enter
jge
stos
pusha
daa
xchg
enter
mov
aaa
insb
push
out
mov
leave
jne
arpl
mov
sbb
jg
and
shrl
dec
jnp
mov
adc
sub
jno
pop
adc
push
icebp
loopne
add
jl
aas
fdivs
add
mov
add
jg
lahf
into
loopne
js
sahf
add
outsl
push
lcall
mov
pop
outsl
mov
fnsave
mov
and
mov
push
mov
test
sbb
neg
into
mov
xchg
dec
ds
adc
push
lahf
add
pop
scas
add
enter
and
scas
push
pop
dec
ljmp
cmc
lea
xor
je
pop
mov
mov
jnp
les
cwtl
repnz
fdivrs
jae
out
cltd
xor
xchg
pop
xchg
outsb
loop
cmp
mov
cmp
fimull
out
leave
cwtl
lcall
push
roll
or
xchg
in
fisubrs
adc
jne
les
fsts
int3
out
sbb
mov
push
mov
lahf
jle
fmul
in
sbb
shlb
in
mov
insl
jmp
or
sbbb
hlt
lods
push
xchg
dec
and
xor
push
jb
addb
popa
push
mov
pusha
imulb
xchg
test
aas
stos
pop
mov
xor
add
xchg
mov
pop
stos
pop
je
inc
adc
xchg
add
push
sub
adc
ficomps
cmpsl
add
iret
sbb
fwait
push
xchg
mov
sub
dec
xchg
mov
mov
or
push
dec
fdivrs
gs
nop
rcrb
dec
push
jmp
jge
out
mov
gs
leave
outsl
or
subl
out
scas
sub
adc
inc
pop
mov
cwtl
mov
call
mov
add
adc
mov
pop
mov
jl
mov
mov
pusha
movl
cld
inc
cmp
add
push
orb
es
jne
mov
pop
push
lods
outsl
jne
dec
push
pop
movsb
test
and
scas
mov
icebp
jmp
test
lds
jno
lret
push
fdivrl
sbb
pop
cs
inc
cltd
fcoml
push
dec
fwait
lods
mov
leave
sti
push
leave
loopne
push
in
inc
in
and
bnd
cld
mov
inc
xchg
inc
push
in
adc
imul
cmp
dec
adc
add
sub
inc
enter
cmp
rep
mov
jb
xchg
fdivs
inc
pop
dec
movsb
out
fistpll
mov
fmul
and
xchg
pop
enter
push
adc
push
mov
mov
mov
cmp
cmove
imul
xor
inc
adc
ss
mov
les
xor
or
inc
pushl
mov
jecxz
out
jo
mov
pop
sbb
inc
push
cld
lds
cmpsl
or
push
lock
das
rcrb
loop
jge
test
push
flds
in
push
xor
bound
sub
dec
arpl
pop
sub
enter
cmp
lds
sbb
xchg
dec
imul
add
xchg
out
xorb
in
xor
mov
cld
ret
ret
sub
jle
popf
test
addb
enter
xor
daa
and
mov
dec
mov
mov
mov
ret
cmpsb
mov
xchg
mov
out
cmp
ret
fnstenv
movl
fsts
repz
mov
pop
hlt
jl
push
ljmp
ja
cmpsb
sbb
shlb
ficomps
pop
rorl
sahf
jb
add
cwtl
vmwrite
cld
cltd
sbb
sbb
adc
pushf
int
loopne
dec
sbb
test
stc
dec
jl
adc
jge
lock
xchg
sbb
idivb
inc
std
dec
push
add
xor
dec
in
add
outsb
inc
rorl
cmp
leave
cmp
xchg
sbb
adc
or
add
fimull
movsb
xchg
push
mov
sub
mov
add
mov
and
cmp
mov
cmc
add
xchg
out
xchg
jecxz
popf
jl
iret
sbb
add
pop
inc
mov
dec
fdivrs
mov
mov
jb
xchg
shlb
inc
jb
movsb
out
mov
fnstenv
rcrb
sub
xor
sbb
sbb
mov
subb
inc
inc
cmpsb
mov
fistl
lcall
cwtl
test
ss
push
je
inc
add
ret
lds
sbb
mov
imul
stc
pop
pop
lock
sysenter
xchg
add
mov
jg
aaa
test
ret
sbb
dec
out
sub
mov
mov
xchg
jb
inc
mov
movsb
and
stc
dec
popa
sub
jbe
pushf
dec
arpl
ja
adc
mov
mov
and
push
push
dec
pop
scas
or
outsb
mov
sar
dec
ret
scas
roll
out
repnz
inc
inc
lahf
xchg
faddl
rclb
arpl
andps
ret
jge
jle
lcall
stc
xchg
fcompl
push
test
stc
movsb
dec
out
push
insl
jmp
jge
cmp
jne
mov
jecxz
ja
icebp
adc
jl
lret
out
fdivp
mov
mov
inc
mov
inc
jle
fcmovne
mov
cld
and
mov
pop
into
clc
xchg
fdiv
fwait
pop
repz
xor
mov
push
imul
or
sbbb
inc
sbb
inc
gs
lea
lods
mov
adc
jg
pop
mov
out
adc
stos
movsl
sub
adc
js
push
aaa
fdivs
loope
cmc
pop
sub
dec
fistpl
popf
xchg
cmp
dec
addb
ficoms
jge
fbstp
icebp
xor
pop
sub
subl
rcll
ds
fwait
cmc
xchg
jge
addr16
shl
dec
adc
pop
test
mov
pop
xor
dec
jge
xlat
ficomps
xor
inc
fwait
stc
xorb
ret
inc
cmp
xchg
jae
xchg
incl
cmc
cmp
mov
bound
test
imul
test
test
inc
loopne
insl
lcall
movsl
fdivrl
lods
movsl
and
cld
sbb
loope
inc
lock
or
inc
inc
adc
or
sub
pusha
or
and
mov
mov
gs
inc
xchg
mov
aaa
xchg
push
jp
mov
sub
and
pop
inc
sub
outsl
lahf
sub
aaa
jle
dec
mov
loopne
sti
mov
sbb
mov
mov
cmovae
movsb
push
arpl
test
sub
arpl
inc
pop
dec
lods
inc
stos
jb
fmull
js
jle
xor
repz
das
cmpsl
setne
inc
in
jae
dec
cwtl
jns
ljmp
stos
dec
fadds
lods
dec
mov
push
mov
lods
jecxz
in
adc
mov
pop
popf
iret
jle
addr16
xchg
mov
add
cmp
nop
inc
cli
or
dec
popf
mov
inc
enter
dec
pop
mov
jecxz
pushl
add
sti
sti
mov
jecxz
mov
adc
lds
jmp
push
adc
sub
pushf
push
nop
and
adc
jge
push
and
leave
mov
xchg
fxch
mov
fucomp
jae
fsubrs
cmc
out
inc
inc
xchg
test
dec
and
push
in
aam
test
pop
stos
xchg
je
fiaddl
pop
push
in
pop
js
arpl
hlt
push
mov
lahf
scas
test
loope
jge
popf
scas
inc
fwait
adc
mov
sub
jmp
andl
loope
ja
rcl
test
inc
cwtl
les
test
inc
lds
jge
cmpl
cmp
dec
bound
cmp
aad
and
mov
fwait
aad
mov
imul
xor
mov
push
sub
lods
dec
pop
test
or
imul
jmp
fwait
test
mov
xorl
mov
add
mov
cmpsb
pushf
mov
mov
test
lods
pop
mov
inc
movsb
test
sub
lods
mov
pusha
lds
lods
aaa
dec
popf
inc
in
or
scas
sub
xchg
sbb
addb
or
lcall
adc
or
imul
je
pop
ficompl
ret
jmp
outsb
pop
int
loop
xchg
pop
cld
pop
push
mov
je
rolb
jo
insl
xorl
xchg
dec
lods
mov
loopne
pop
xor
jl
mov
jmp
mov
or
pop
mov
or
lea
mov
out
or
int
inc
movsb
sbb
push
cmpsl
aam
repnz
dec
mov
add
out
jl
lock
mov
je
daa
imul
ficoms
mov
mov
adc
loop
pop
xchg
and
push
lret
nop
xlat
push
jne
or
or
mov
lods
in
out
fucomi
mov
lods
int3
divb
in
xchg
pop
cltd
adc
inc
push
lcall
mov
lcall
fisubrs
pusha
xor
mov
clc
mov
mov
inc
inc
xor
mov
imul
clc
cs
mov
add
or
xchg
sbb
inc
and
ret
pop
test
sbb
cmpsl
ret
rcr
adc
cmpsb
inc
cltd
enter
int
enter
les
push
sub
out
mov
sub
jmp
sub
idivl
ror
adc
dec
mov
mov
and
lahf
lret
jecxz
xor
andl
and
orb
xlat
push
std
cli
fmull
adc
xor
adc
xchg
adc
mov
stos
push
inc
ret
mov
lods
lret
test
xchg
xchg
pop
fucomp
shll
fldt
cwtl
ds
cmp
xchg
and
test
sbb
mov
lcall
jge
pop
outsb
stc
mov
and
inc
adc
addr16
scas
add
xchg
loopne
pop
jg
mov
jmp
sbb
xchg
andl
xchg
in
inc
orb
xchg
dec
pop
jl
test
or
mov
loopne
cmpsl
test
or
xor
xor
lret
push
xor
ret
lret
sbb
and
shl
mov
shr
mov
ja
lds
into
add
pop
shrl
cmc
or
add
dec
jo
push
push
pop
push
push
jns
jg
hlt
dec
inc
sbb
jmp
gs
xchg
repnz
dec
and
sbb
push
sub
fidivrs
int3
mov
lcall
or
les
add
test
mov
outsb
push
mov
scas
xchg
mov
mov
push
mov
mov
push
je
sbb
cmp
rol
pusha
mov
push
cmc
mov
mov
nop
sub
js
idivl
sbbb
stos
ret
or
pop
out
test
out
sub
test
xlat
stos
mov
pop
sbb
add
and
insb
mov
fstp
test
push
jb
inc
jmp
jbe
sbb
gs
adc
loop
das
int
mov
pop
leave
mov
rclb
cmp
mov
test
sub
js
adc
ljmp
and
shl
mov
outsb
xor
sub
add
stos
incl
push
clc
cmpsl
loopne
mov
data16
stc
jae
pop
add
out
out
and
test
xchg
jp
shlb
cwtl
stos
pop
dec
scas
xchg
sbb
adc
dec
aaa
enter
mov
lods
ret
insb
cmp
push
push
inc
xchg
mov
add
nop
inc
mov
jge
mov
stc
mov
mov
mov
and
inc
jg
pop
cmc
gs
inc
sub
into
push
arpl
xchg
loope
and
mov
scas
rorl
ret
inc
xchg
cmp
adc
call
vprotq
mov
jb,pn
adcl
adc
test
movsl
repnz
dec
inc
dec
pop
cmpsb
repz
sbb
fcoml
pop
loopne
dec
adc
and
ret
pop
inc
mov
or
cmp
mov
mov
adc
mov
aaa
mov
mov
pushf
mov
pop
mov
mov
repnz
xor
jbe
mov
fdivs
jae
cmp
and
or
cmp
pop
add
inc
cmp
dec
sub
jp
add
pop
lock
in
test
push
mov
iret
inc
imul
mov
push
out
jl
mov
cmpl
adc
xchg
inc
fbld
cwtl
cmpl
imul
adc
or
sarb
das
js
es
and
popf
mov
mov
mov
sbb
cmp
push
mov
lock
mov
jmp
and
sbb
dec
testb
std
mov
clc
outsb
add
iret
addb
je
mov
mov
shlb
sarb
xchg
jb
and
fwait
add
dec
or
gs
lahf
popf
les
sti
test
pop
pushf
in
movsb
push
insb
pop
lret
inc
insl
cmp
in
lcall
mov
jne
gs
xor
enter
push
das
xchg
dec
sti
add
mov
pusha
push
nop
mov
fwait
mov
jne
sbb
addb
sub
mov
xor
xchg
int
sub
pushf
dec
cmp
or
jecxz
pop
fiadds
fstl
pop
mov
cmp
enter
mov
jecxz
aaa
popf
inc
not
adc
mov
mov
sbb
ljmp
adc
and
jp
sbb
lret
les
cmp
call
ret
push
repz
mov
jle
add
and
or
imul
in
xor
aam
leave
mov
xor
inc
mov
test
mov
xlat
dec
dec
mov
movsl
loopne
mov
call
jne
std
mov
stos
jbe
outsl
sub
gs
push
or
pop
and
sub
icebp
sbbl
jo
xchg
inc
js
repz
es
sarl
add
sbb
push
icebp
rol
fsubs
shl
dec
lds
xchg
inc
push
in
pop
jp
cmp
repnz
fidivl
ror
xlat
adc
jae
fs
popw
fdivs
pushf
sarl
mov
sub
jle
cmpsb
mov
dec
sahf
dec
lds
imul
push
sahf
jp
gs
popa
mov
add
clc
and
mov
lock
add
add
lds
test
inc
mov
sbb
aas
inc
rorl
inc
push
mov
popa
xchg
mov
jge
push
ja
adc
gs
push
mov
mov
jl
or
cmp
xor
cmp
sbb
outsl
shlb
push
or
shrb
xor
dec
sub
hlt
dec
add
xchg
push
add
test
sbb
cli
or
jecxz
shl
sbb
sub
push
pop
mov
push
cltd
and
cmp
movsl
cli
cltd
cmpsb
mov
outsl
mov
stc
ljmp
xor
shll
mov
push
or
lcall
mov
fnstenv
call
mov
or
fstpt
int
pop
jg
pop
shr
hlt
add
add
mov
or
pusha
xor
adc
mov
mov
dec
add
imul
sarl
inc
pop
push
cmpsl
cltd
pop
frstor
jge
into
push
sbb
push
mov
add
ljmp
xlat
fistpl
mov
enter
movsb
repnz
stos
sbb
push
inc
jg
cmp
sbb
lret
mov
sub
pop
shr
adc
divl
mov
or
in
jno
fwait
mov
push
out
mov
test
mov
ja
enter
ret
mov
aaa
mov
and
cmp
cli
xchg
loope
nop
mov
andb
inc
testl
mov
inc
fiaddl
pop
rcl
add
aas
jae
test
inc
cli
mov
aaa
es
pop
ja
fildll
lods
pushf
sbb
cld
add
lds
outsb
call
insb
fistps
out
lods
push
xor
iret
pop
jne
stc
sbb
sub
and
xchg
mov
insb
push
cmp
imul
mov
cs
movsl
push
cmp
data16
lahf
xchg
and
dec
fcoml
or
inc
dec
jbe
cmpsl
mov
out
xchg
scas
inc
fwait
add
mov
inc
sbbl
ljmp
rcr
xchg
dec
and
iret
jge
fucomip
push
mov
ret
jmp
jne
lods
outsb
lahf
insl
mov
into
xchg
mov
stc
jle
es
cltd
mov
inc
iret
xchg
dec
inc
fsts
jp
insb
or
lods
outsl
pop
jmp
xchg
les
scas
inc
lahf
sahf
outsb
dec
call
loopne
xor
clc
inc
cmc
jno
test
sbb
pop
fiaddl
fwait
mov
jecxz
mov
rcrb
sub
sub
js
stos
mov
add
dec
mov
jne
test
loopne
xor
hlt
rcr
mov
pxor
mov
insb
push
negl
or
add
dec
repnz
lahf
adc
mov
mov
and
mov
lods
xchg
xor
or
fucomi
jae
cmp
jnp
lret
inc
fidivrl
addl
scas
and
xchg
int
je
mov
pop
rcr
dec
pop
xchg
lods
xlat
jb
aad
add
outsl
push
ret
inc
jmp
in
push
add
xchg
int3
add
std
push
or
xchg
inc
mov
aam
js
test
mov
cmp
mov
xchg
or
fnstenv
mov
pop
loopne
mov
or
mov
adc
outsl
adc
mov
mov
inc
or
mov
ret
mov
inc
jne
gs
sbb
imul
xor
lahf
cli
out
fwait
mov
adc
pop
movsl
daa
add
push
pop
mov
cmpsb
ja
les
out
repnz
jle
pop
push
es
xchg
data16
enter
adc
popf
enter
jae
in
int
add
popa
clc
push
sbb
dec
or
inc
iret
or
icebp
inc
cwtl
dec
push
inc
lahf
movsb
fs
leave
sbbl
mov
dec
sahf
cmpsl
push
repz
cmp
dec
fcmovnu
cmc
fnsave
xor
call
mov
rcl
std
lret
sbb
ljmp
sbb
mov
jnp
cmp
mov
sti
into
mov
mov
fisttpl
repz
stos
pop
enter
call
jecxz
repnz
mov
mov
and
xor
movsl
or
mov
fs
decl
movsb
jbe
loopne
pop
test
stos
icebp
or
jb
fsub
cmp
lea
arpl
mov
add
fwait
jb
in
popa
mov
push
push
mov
dec
clc
testl
insb
cmpl
pop
sub
sbb
testl
mov
mov
rcl
jecxz
xchg
imul
pop
cmpsb
test
xchg
dec
xor
out
ja
jae
sarb
dec
cmc
pop
xchg
sbbl
sub
dec
loope
mov
push
mov
pop
and
mov
scas
and
sbb
xchg
imul
dec
clc
jbe
inc
iret
xorb
sub
sub
pop
repz
pop
shrl
xor
stos
pop
jg
mov
dec
orb
stos
push
cmc
stc
mov
jge
mov
ljmp
jbe
mov
popf
cmp
pop
xchg
pushf
vpunpcklqdq
lret
mov
fwait
int3
sbb
mov
popf
xchg
cmpsl
push
ret
push
adc
fcoml
mov
lods
jne
inc
jne
add
in
mov
push
push
cmp
add
pop
cmp
dec
lea
rcrb
pushl
mov
pop
leave
sub
or
lahf
call
insl
fwait
popf
pop
adc
xchg
mov
sbb
pop
gs
mov
imul
xchg
inc
inc
mov
mov
cwtl
das
aas
push
mov
xor
push
and
mov
dec
fcompl
repz
movb
jp
inc
xchg
pop
adc
sbb
loopne
mov
mov
pop
dec
mov
mov
jmp
popfw
sti
mov
xchg
popf
jo
movsb
dec
mov
das
xor
adc
lods
aas
scas
movl
jmp
sbb
test
lock
testl
push
cmp
mov
push
inc
jbe
arpl
sbb
sub
sarb
scas
into
mov
rcrb
jnp
leave
pop
or
popf
pop
outsl
add
push
idiv
add
add
xor
outsb
dec
ficoml
sub
cld
mov
rclb
jne
mov
adc
fsubl
insb
jbe
ja
lahf
or
ret
sub
int3
fnsave
cwtl
cltd
and
inc
mov
notb
out
mov
pop
xor
pop
adc
popa
mov
push
int3
cmp
sub
pop
insl
jnp
mov
loopne
mov
or
cltd
mov
add
cmpsl
je
jle
int
mov
mov
cmp
cmc
lret
popf
hlt
jne
xchg
xor
ret
pop
push
mov
push
aad
aas
dec
popf
cmp
mov
dec
sbb
shrb
and
cli
cwtl
inc
pop
sbb
fidivl
test
jo
scas
es
sbb
ret
lahf
mov
lret
sub
fistl
movsl
fst
fcomps
xor
data16
mov
je
mov
push
sbb
inc
js
ss
and
push
addb
or
mov
shrl
jmp
mov
int3
cmp
movsl
daa
push
dec
push
jns
cs
pushf
sti
jnp
insb
fistps
loopne
insl
pop
mov
jo
ficomps
push
inc
iret
popf
mov
sbb
icebp
rclb
test
ret
lahf
call
inc
push
mov
xchg
push
hlt
pop
cmp
sti
mov
mov
subb
dec
rcl
in
lds
mov
mov
pop
sub
mov
mov
jbe
ljmp
pop
inc
dec
dec
pop
pop
push
mov
mov
mov
in
jbe
dec
lret
insl
ljmp
ljmp
jo
js
insl
cltd
adc
fsubs
xor
mov
cli
imul
adc
cmpsl
and
xor
aaa
repz
repnz
sbb
sub
inc
js
pop
cli
mov
jno
inc
sarl
je
leave
add
test
sub
lods
sbb
out
xchg
or
inc
sbb
int3
pop
or
rcrb
push
cltd
enter
loopne
xor
xchg
test
fidivrl
dec
jecxz
sbb
bound
cmp
movntq
dec
xchg
hlt
js
dec
call
inc
pop
jp
fdivrs
sub
sbb
jge
lods
stos
aad
add
inc
jno
cmc
xor
mov
xchg
pop
jo
in
mov
aas
ror
insl
insl
les
jno
test
push
addb
dec
jg
xchg
repnz
lods
jl
or
pop
push
cmp
or
xor
fnstsw
sbb
xchg
dec
fcmovne
xchg
int
cmp
ss
shrb
push
rcll
sbb
enter
xchg
xchg
mov
inc
mov
cmpsl
imul
cmc
push
rcll
js
stc
pop
inc
fisttpl
inc
mov
jmp
in
inc
jno
imul
xor
push
xor
lcall
xchg
mov
pop
or
enter
and
call
xor
pop
adc
inc
dec
push
dec
add
mov
mov
sahf
test
gs
test
mov
icebp
pop
pop
rol
mov
inc
repnz
inc
pushf
sub
push
dec
rorl
add
loop
into
mov
cmp
retw
mov
sub
push
dec
mov
add
sarl
sbb
clc
test
lods
adc
mov
in
mov
jo
inc
sub
mov
push
inc
scas
push
add
cmpsl
pop
mov
sbb
and
das
push
mov
test
fildll
shrl
setl
or
inc
shrl
dec
std
sub
mov
mov
pop
mov
pushl
dec
cmp
out
insb
fildll
insl
lahf
out
mov
inc
mov
add
movsb
pop
mov
insb
inc
adcb
inc
shl
add
jnp
clc
push
es
aam
cmpsb
cmp
sbb
xchg
pop
or
int3
ret
rcrl
stos
and
test
sbb
add
mov
fwait
sar
xchg
mov
mov
jecxz
inc
cmpb
xor
fidivl
mov
mov
addr16
cmpsb
mov
rorb
and
and
mov
aad
mov
loopne
cmp
xlat
push
jbe
in
or
fimull
mov
xor
dec
mov
jbe
dec
jo
dec
lds
xor
push
cmp
movsl
dec
or
add
lahf
addb
divl
mov
std
jge
dec
loop
int
push
dec
and
xchg
mov
mov
inc
sbb
std
cmpsl
es
cmc
and
popf
imul
or
out
test
jne
cltd
xchg
dec
es
jbe
and
push
outsl
lea
aaa
sub
add
aam
in
mov
dec
stc
jno
icebp
jbe
dec
mov
mov
fwait
push
test
cmc
adc
push
fcomps
into
pusha
lahf
adc
ror
lods
lea
cld
test
and
loop
js
cmp
pop
data16
icebp
movsl
cld
mov
add
bnd
or
pop
jo
xor
add
push
dec
push
jmp
shrb
bound
test
mov
js
jp
mov
add
popa
jg
sahf
jle
sbbb
mov
sub
arpl
sub
pop
lret
sub
daa
dec
sti
inc
sub
cmp
fs
lret
pop
sub
cmp
lock
es
add
ret
je
inc
fimuls
xor
pushf
sbb
mov
ret
push
inc
cmpsl
add
dec
imul
test
nop
add
sub
inc
xor
rcrl
dec
lds
test
lcall
cli
and
ret
mov
sbb
mov
shll
fisttpl
movsb
notb
jae
cli
fs
leave
test
inc
cmp
lret
nop
dec
mov
add
mov
cmpsb
xor
xchg
xchg
sub
js
cltd
lret
add
test
scas
fnclex
loop
and
jnp
out
push
in
cmp
push
pop
stos
aam
mov
jnp
test
or
fwait
lret
in
mov
fcmovnbe
mov
xchg
lcall
sbb
xchg
loop
and
add
or
stos
adc
jnp
jmp
mov
push
push
mov
pop
int3
icebp
mov
ret
pop
jg
mov
sahf
fdivrl
stos
xchg
loopne
mov
dec
loope
mov
sbb
add
jg
fdivr
xor
lret
lahf
and
push
aad
mov
in
test
shlb
inc
mov
mov
sahf
das
xchg
stc
cli
ficompl
js
add
pop
jmp
cwtl
arpl
or
cmp
fiadds
dec
mov
jg
mov
xchg
cltd
add
popf
fwait
push
cwtl
lahf
mov
mov
fwait
leave
loop
add
push
sub
out
testl
push
cltd
test
f2xm1
dec
and
xchg
fst
mov
cmpsl
lret
in
mov
fldt
push
les
fwait
dec
push
gs
enter
pop
mov
sbb
mov
mov
out
je
aad
jo
fcoms
or
mov
xor
mov
lods
loope
inc
dec
pop
mov
loopne
lods
aas
jecxz
jmp
mov
fxam
imul
push
mov
pop
sub
add
mov
pop
jg
pop
ret
jnp
pushf
sub
xor
aad
mov
sbb
lods
push
sub
lods
repnz
sbb
fbld
mov
jecxz
mov
xor
jnp
sbb
inc
push
sub
dec
sub
ja
pop
mov
fwait
lods
pop
sbb
xchg
test
jp
sub
mov
ret
repz
addl
test
add
dec
xor
pop
cmp
les
push
test
push
sub
and
pop
mov
jnp
cli
sbb
jl
xor
mov
dec
pop
mov
sbb
leave
rolb
les
cmp
fisubrs
nop
jmp
xor
or
jbe
cmp
das
repz
dec
pop
lods
push
in
mov
or
ds
iret
or
mov
sbb
mov
cld
or
jne
or
mov
ficomps
cwtl
xlat
lret
mov
adc
mov
sbb
scas
mov
adc
pop
or
cld
pusha
lods
fldcw
popf
insl
mov
sub
inc
mov
cmp
aas
adc
jne
pop
fcmovnbe
jns
test
shrb
cltd
lods
ficomps
inc
push
and
in
jle
sub
movsl
leave
insl
push
xchg
add
inc
icebp
add
bswap
push
pop
ds
fsubrl
sbb
test
test
and
push
movsl
in
pop
or
insb
jbe
into
inc
cltd
or
movsl
ret
fld1
popa
jo
cmp
cltd
iret
sbb
je
mov
mov
les
hlt
add
adc
movsl
into
out
push
shl
mov
pop
mov
mov
sub
bound
mov
xor
sarl
pop
fimuls
inc
sub
frstor
xor
fmull
mov
push
dec
jb
test
mov
pop
mov
sub
inc
sub
scas
out
dec
fisttpll
inc
and
mov
inc
xchg
sbb
pop
sub
inc
pop
mov
mov
clc
stc
mov
inc
lcall
dec
in
sub
add
cltd
dec
pusha
cmp
cli
mov
jl
sbb
cmpb
mov
pop
sbb
push
daa
xchg
and
add
mov
out
cmp
mov
ds
call
inc
xor
or
stos
xchg
add
movsl
cmp
sahf
imul
dec
inc
cmc
fsubs
hlt
cmc
dec
mov
popa
xlat
mov
pop
sbb
inc
into
inc
cmp
cld
sbb
lock
sbb
ljmp
lcall
fmull
stos
cmpsl
mov
fs
les
mov
mov
push
stos
dec
fldt
mov
mov
aad
or
pop
inc
mov
notb
test
imul
sarl
sarb
movsb
xchg
xchg
nop
sub
sbb
pusha
mov
leave
repnz
pop
arpl
ljmp
mov
xchg
and
shrl
inc
mov
lcall
std
inc
pop
or
insb
jbe
into
inc
cltd
or
lahf
mov
cltd
cmp
xchg
iret
sbb
je
mov
jl
push
sub
mov
daa
cs
or
xor
sub
mov
cmp
fwait
pop
aaa
push
repz
mov
data16
cltd
xchg
ja
aad
inc
push
mov
or
or
dec
cld
popa
and
arpl
cmc
mov
pop
test
lret
mov
dec
pop
push
dec
xor
leave
fs
leave
lods
dec
dec
or
mov
subl
mov
pop
daa
or
stos
imul
xchg
repnz
stc
lods
jle
lret
mov
movsl
push
or
dec
scas
ror
repnz
fimull
sti
in
shll
inc
dec
add
mov
mov
push
mov
add
mov
add
pop
movsl
mov
jae
movsb
and
movsl
inc
fdivrl
cmpsl
and
lds
sbb
inc
outsl
negl
int3
out
cmp
dec
mov
fmull
icebp
cwtl
pop
push
btc
jg
lahf
out
icebp
stc
jnp
sahf
pop
xchg
iret
int
ja
popf
ficoms
shr
jae
pushf
pop
pop
pop
loope
out
outsb
xor
xchg
dec
and
push
adc
adc
add
aad
dec
movsb
pop
in
xchg
pop
xchg
into
popa
mov
jmp
ficoml
push
test
adc
xlat
mov
rclb
mov
dec
mov
aam
sub
mov
addb
xlat
shr
lock
fisttpll
jno
fisttpl
imul
shlb
adc
insb
xor
or
xor
sub
mov
add
mov
adc
dec
test
inc
movsb
push
sub
dec
les
test
insl
pop
cmp
pop
cmpsb
cmp
popa
mov
iret
andb
cmp
or
gs
pop
mov
jb
mov
test
xchg
sub
imul
insl
mov
daa
sbb
out
mov
jecxz
and
pop
adc
cmp
add
sub
inc
xor
sub
inc
mov
and
mov
mov
push
xchg
mov
mov
sub
je
int
dec
cmpsb
aam
jne
test
push
stos
push
scas
push
lods
shrb
pop
sub
push
dec
mov
adc
out
ja
fldz
jne
stos
xor
or
js
sub
scas
inc
sbb
adc
in
pop
inc
nop
and
cmp
lds
xor
mov
cltd
mov
mov
mov
sub
and
shll
mov
mov
jle
jo
int3
pop
or
mov
mov
lea
cwtl
loopne
mov
das
mov
pop
or
inc
idivb
inc
stos
pop
xlat
repz
sti
fbstp
fmull
das
mov
scas
cmp
mov
sahf
dec
lock
movsb
mov
xor
mov
cwtl
sub
cmp
sub
icebp
sbb
sti
pushf
fldcw
sti
mov
xchg
lret
int3
or
pop
add
inc
test
xchg
add
mov
dec
mov
pop
test
sbb
ljmp
sbb
repnz
std
mov
scas
push
loop
mov
push
popf
orl
cli
mov
sbb
cmp
mov
push
pop
stos
aad
rcrb
cmpsl
lock
sub
enter
mov
fildl
sbb
fadd
lods
mov
mov
mov
dec
sahf
insl
pop
hlt
out
fnstenv
mov
push
stc
movsb
dec
ljmp
jns
push
dec
cmpsl
jmp
clc
aas
push
leave
faddp
jg
add
cmp
mov
or
or
scas
mov
lret
mov
pushf
insb
fwait
mov
mov
mov
test
sbb
dec
scas
fisttpl
mov
xchg
shll
cmp
push
add
sub
xchg
mov
test
inc
inc
inc
mov
aaa
push
enter
lahf
jp
sub
sbb
add
mov
in
push
jl
loop
mov
sti
jge
cs
inc
mov
add
or
xorb
adcb
mov
cmp
and
ljmp
test
repz
xor
cmc
cmpsb
push
xchg
nop
dec
push
leave
mov
lret
shlb
cmp
les
lods
lea
inc
iret
ret
and
mov
lcall
pushf
iret
iret
bound
xchg
out
dec
inc
es
insb
mov
fimull
out
call
icebp
inc
mov
cltd
dec
sub
pusha
mov
lods
mov
push
mov
jmp
subb
shrb
jl
jmp
xor
mov
cmpsb
xor
aaa
lcall
int3
xor
mov
mov
hlt
adc
inc
fwait
leave
insl
jbe
sub
rolb
lret
in
cmp
pop
push
pop
stos
aam
mov
jnp
inc
push
idivl
out
mov
movsb
inc
sbb
push
ret
test
into
sti
std
mov
sti
mov
xor
inc
aam
add
loop
sbb
test
arpl
jne
test
xchg
mov
repz
jge
jle
add
cmp
outsl
mov
dec
mov
adc
xchg
sbb
jo
pushf
mov
fs
jo
mov
cld
jg
adc
aad
aaa
div
sub
push
dec
scas
out
repz
xor
xchg
mov
mov
cmp
rcr
xor
insl
aaa
push
mov
inc
sbb
or
or
pop
cwtl
fiaddl
insl
lcall
addr16
adc
mov
cmp
inc
add
jg
in
cli
xor
cmpsl
pusha
andps
adc
daa
lds
pop
dec
dec
adc
fsubrp
aam
xor
inc
in
pop
dec
movsl
cmc
xor
nop
push
and
pusha
pop
mov
or
pop
xchg
lea
push
jae
sub
mov
xchg
loope
ja
inc
stos
insl
mov
scas
sbb
xor
jp
bound
pop
pop
test
stos
movsb
imul
clc
ljmp
cli
stos
pop
cli
inc
test
push
xor
xor
iret
pop
dec
scas
dec
cmpsl
xlat
out
xchg
pop
jo
out
jp
nop
pop
mov
pop
xor
xchg
ja
nop
push
push
mov
add
cwtl
ljmp
cmpsl
pop
fs
aam
inc
pop
mov
and
push
pushf
dec
lock
push
test
mov
adc
pop
push
adc
andl
ljmp
ds
inc
shrl
dec
fcoml
mov
mov
es
rcrl
jg
sub
pop
pop
mov
add
fldt
scas
stc
sub
aaa
fnstcw
push
pop
adc
enter
mov
inc
jne
or
sti
add
shlb
cwtl
jmp
pushf
push
in
cmpsl
inc
inc
dec
lahf
lds
in
in
sbb
cmp
mov
mov
sbb
mov
xchg
and
mov
and
les
loopne
mov
cmpsb
xchg
insb
inc
movl
fbstp
xor
add
fadds
mov
scas
idivb
int
sbb
mov
fcmovnu
xchg
std
addr16
mov
lods
mov
inc
push
pop
pushf
mov
test
fildll
adc
inc
cwtl
inc
add
jecxz
push
adc
andps
cmp
xor
cmp
xchg
mov
dec
jae
mov
popf
popf
push
jmp
mov
call
ret
jne
fwait
inc
push
cmpsb
cmc
adc
movsb
sub
dec
adc
jge
inc
ret
icebp
or
mov
mov
adc
mov
loopne
mov
add
pop
push
divl
inc
fwait
jge
pop
and
mov
out
sbb
out
jle
int
inc
sbb
xchg
repz
xor
mov
fs
sbb
imul
fbld
adc
lock
ss
movsl
cld
xorb
or
jbe
mov
fwait
nop
cmp
jns
xchg
mov
add
inc
xchg
aad
mov
cmp
nop
cmp
push
mov
mov
stc
adc
and
cwtl
add
push
leave
hlt
daa
mov
enter
ffree
push
mov
jge
pop
mov
adc
fdivl
inc
and
mov
mov
ja
cld
mov
fistl
and
cmp
jmp
cwtl
dec
fld
pop
or
pop
cld
pop
call
add
ret
sahf
add
push
xorl
add
popf
dec
lahf
cld
aad
cwtl
push
push
dec
jecxz
or
xchg
leave
fsubrl
lret
pusha
pop
sbb
sarb
popf
cmp
pop
lds
inc
pop
and
scas
mov
cs
cmpsl
pop
inc
sbb
mov
pop
sbb
mov
mov
mov
les
xor
out
add
cmp
sub
push
inc
cmc
inc
pusha
jle
scas
jg
incl
xchg
les
sti
jl
add
loopne
pop
repnz
in
inc
mov
mov
cmp
xor
xor
mov
call
pop
sti
ljmp
dec
and
xor
mov
fbstp
imul
and
jo
int
pop
movsl
out
pop
dec
aam
shll
test
sarb
adc
movl
add
sub
xor
jo
fnstenv
mov
test
jecxz
test
or
nop
or
in
fisubrs
divb
adc
imul
gs
dec
pushf
pop
adc
or
int3
ss
stc
xor
test
cs
dec
dec
mov
pop
fildl
mov
jns
dec
ret
xchg
insb
es
int
lds
dec
pop
push
sub
js
xchg
cmpsl
aas
int3
insb
ss
mov
xchg
and
andl
jge
jo
ds
push
pop
cltd
repnz
dec
jp
pop
sbb
fwait
cmpl
push
lods
mov
and
ror
bound
pop
dec
dec
jle
leave
outsl
mov
test
sbb
popf
xchg
cwtl
dec
push
dec
lahf
lret
in
cmp
mov
sbb
addb
add
imul
jns
push
shll
push
out
out
ja
repnz
addr16
jg
hlt
les
stc
lret
test
data16
fisubrs
mov
dec
and
test
pop
inc
cmp
and
mov
xchg
stc
cli
cmp
pop
fisubrl
add
cli
jge
imul
sbb
inc
adc
dec
mov
in
push
mov
ret
imul
inc
lahf
mov
call
rcr
ds
lret
push
pop
sahf
add
sbb
daa
pop
stos
aam
mov
jnp
fwait
xor
stc
dec
in
jbe
xchg
xchg
flds
jo
pop
inc
dec
fcomp
in
pop
xchg
push
outsl
sbb
dec
enter
mov
xchg
push
push
mov
inc
inc
pop
aas
das
fcomps
push
add
push
lea
arpl
mov
xchg
or
jae
inc
mov
lcall
mov
sbb
test
lcall
cltd
int3
adc
lods
mov
mov
fisubl
push
scas
push
fwait
push
scas
sbb
push
cs
mov
sahf
das
xchg
stc
cli
cmp
scas
xchg
inc
imul
test
or
pop
mov
mov
test
mov
enter
cmp
stos
xor
jmp
xchg
scas
pop
leave
fxam
repnz
add
xor
lcall
scas
out
fwait
lea
mov
inc
es
int
sub
sub
mov
mov
out
jnp
jecxz
lcall
fiadds
repz
stc
mov
add
hlt
sbb
addl
inc
xchg
ja
fdiv
mov
arpl
addl
stos
cmp
loop
jae
movsb
inc
mov
pop
jb
test
aas
mov
jge
jmp
lcall
push
cmp
stc
ficomps
jno
mov
pop
lods
imul
xor
jno
pop
sub
test
inc
lcall
cmp
lret
int
push
or
or
cmp
int
lods
xchg
sbb
dec
roll
jns
sbb
push
mov
mov
mov
mov
pusha
or
scas
aaa
mov
cli
jnp
and
in
subl
adc
dec
mov
mov
xchg
ret
call
fwait
lret
in
mov
fldt
aas
adc
fwait
mov
jne
fwait
jg
inc
mov
mov
test
lods
adc
pop
sub
js
pop
push
xchg
arpl
mov
xchg
or
jae
inc
mov
lods
mov
and
sbb
test
lcall
push
cmp
sbb
sbb
mov
pop
lods
imul
xor
jno
pop
sub
cwtl
roll
inc
or
dec
inc
add
mov
stc
sub
dec
cmp
dec
push
pop
shrb
or
ficoml
mov
test
mov
jb
sub
mov
lret
inc
mov
inc
mov
inc
test
and
std
cli
jnp
and
in
subl
adc
dec
mov
mov
movsl
cwtl
out
xchg
ret
cmp
aas
fwait
lret
in
mov
fldt
pop
adc
fwait
mov
jne
fwait
jg
inc
mov
lea
adc
pop
sub
js
pop
push
mov
arpl
int3
inc
pop
mov
in
mov
push
jae
mov
sbb
add
cmpsb
push
pop
inc
out
ja
repnz
bound
movsb
push
pop
add
ss
lock
cmp
xchg
mov
ret
inc
imul
xchg
jb
sub
mov
jl
sahf
dec
shll
test
mov
sbb
or
dec
roll
jns
sbb
push
mov
mov
xchg
mov
pusha
or
scas
aaa
mov
cli
jnp
and
in
subl
adc
dec
mov
mov
xchg
shr
cmp
aas
fwait
lret
in
mov
fldt
outsb
sbb
dec
inc
cmp
adc
sbb
xchg
push
push
mov
inc
jne
mov
adc
test
adcb
mov
insl
pop
addl
shll
mov
mov
mov
lods
sbb
xlat
push
mov
sub
lods
xchg
sub
jno
mov
add
and
mov
push
ljmp
mov
mov
scas
popf
insl
pop
popa
fsubrs
cmp
or
cmp
lret
or
push
mov
jge
mov
adc
sub
ja
lcall
xchg
out
leave
xor
sbb
mov
fwait
lea
mov
int
sub
mov
fwait
mov
cwtl
inc
mov
subb
dec
sahf
sub
outsl
bound
inc
mov
aaa
dec
inc
leave
or
sub
inc
sub
imul
pop
xchg
mov
imul
pusha
xor
dec
cmp
test
xchg
cmp
sbb
xor
mov
mov
dec
jle
pop
aad
fwait
inc
inc
data16
sti
xchg
adc
inc
inc
iret
test
jp
movsl
loop
fisubrl
sbb
test
movsb
push
xchg
mov
jecxz
pop
loopne
imul
testb
cmp
push
mov
sub
ficoml
fldcw
cwtl
mov
pop
dec
mov
add
popa
lock
mov
jae
add
pop
call
out
mov
jnp
fwait
xor
lods
mov
jns
cltd
stc
loope
xchg
enter
outsl
out
mov
jmp
xchg
mov
pop
bswap
pop
pop
inc
mov
dec
addb
dec
or
in
fmuls
mov
jle
enter
cmc
add
add
popf
fwait
outsl
clc
punpckldq
pusha
clc
jp
popa
xchg
mov
shr
add
rclb
pop
mov
ret
dec
sub
int
sti
pop
add
adc
inc
mov
jp
movsl
loop
fisubrl
jns
mov
cwtl
adc
mov
insb
fcoms
pop
daa
adc
add
sbb
outsb
out
pop
loopne
dec
cmpsl
outsb
mov
insb
pop
movsb
push
jle
cmp
in
lcall
jb
cmp
imul
mov
ss
and
in
andl
sbb
icebp
js
test
dec
sub
addr16
add
rorl
dec
mov
jp
lods
out
fldt
rcl
jnp
fwait
lea
mov
cwtl
fsubrs
movsb
cmp
jb
fwait
dec
lret
inc
cltd
inc
fsubl
adc
mov
dec
nop
add
add
cwtl
dec
and
mov
imul
rcl
cli
hlt
sti
mov
push
jnp
mov
in
dec
push
mov
enter
or
adc
fwait
inc
pop
data16
cmp
mov
dec
push
cmp
sub
sub
mov
fldt
sahf
cmp
xchg
xchg
inc
pushf
fisubrl
data16
jbe
lcall
inc
frstor
call
and
or
stos
xor
jmp
cmpsb
xchg
dec
add
or
lahf
mov
cmc
cmp
dec
mov
neg
stos
add
js
or
in
mov
jnp
fwait
mov
cwtl
inc
mov
subb
dec
stc
nop
out
cmp
pop
lods
data16
sti
mov
loopne
insb
inc
leave
mov
xchg
dec
icebp
dec
inc
xor
bound
or
int3
test
sbb
dec
mov
aam
adcl
int
in
scas
jno
sarl
sub
testl
cmp
leave
shr
cmp
jno
dec
andb
xchg
xchg
cmp
push
test
dec
sbb
movsb
fldcw
and
fs
leave
scas
pop
outsl
std
in
insb
mov
insl
lock
push
popa
inc
push
movsl
sbb
xchg
jo
movsb
push
ja
pop
fidivrl
pop
jb
cmp
sbb
data16
mov
bnd
push
dec
into
ss
ss
and
in
subl
adc
dec
mov
addb
out
xchg
fsubr
je
push
aas
fwait
lret
in
mov
fldt
lret
fsubs
cmc
inc
mov
iret
mov
mov
add
dec
and
dec
pushf
xchg
pushf
dec
push
dec
sahf
xchg
mov
addb
sub
push
popf
adc
pop
fwait
addb
or
pop
cltd
adc
xor
mov
test
nop
push
cmp
mov
dec
loop
adc
dec
ret
mov
and
mov
sub
sub
xlat
std
dec
and
push
mov
jno
or
or
jns
push
iret
cmp
xor
and
cmpsb
xor
adc
and
add
test
out
inc
lret
loope
push
int3
sbb
jo
jle
das
cmpsl
sbb
mov
fwait
mov
mov
inc
cmp
mov
pop
out
mov
xlat
iret
sahf
mov
jmp
jo
movswl
jmp
std
mov
sti
mov
xchg
insb
inc
leave
mov
xchg
mov
mov
mov
sbb
cwtl
dec
and
mov
imul
inc
std
sbb
jae
xchg
into
inc
xchg
imul
cld
mov
out
add
ds
cld
inc
or
movsb
push
arpl
addr16
mov
leave
lock
cmp
repnz
inc
sbb
push
sub
sub
outsl
mov
pop
mov
sahf
das
xchg
stc
cli
cmp
scas
xchg
inc
js
insl
ret
mov
xchg
or
pop
mov
mov
test
xchg
fwait
enter
cmp
stos
xor
jmp
mov
or
lahf
mov
cmc
cmp
dec
mov
neg
xchg
lock
or
in
mov
jnp
fwait
xor
lods
mov
or
mov
mov
outsl
pop
cli
cwtl
dec
and
cmp
or
cmp
dec
dec
fwait
xchg
cwtl
dec
push
dec
xchg
pop
push
lea
gs
mov
insl
cmp
sub
inc
setnp
insb
inc
and
lea
pop
mov
lods
cwtl
jne
pop
add
popf
xchg
int3
addr16
add
cmp
sub
loopne
stos
push
push
mov
pop
sub
es
iret
inc
imul
or
cmp
lret
or
dec
rorl
mov
fistl
lods
fstp
cmp
mov
add
test
out
inc
lret
loop
push
int3
cmp
jo
jle
das
cmpsl
sbb
mov
fwait
mov
mov
inc
ja
int
sub
mov
fwait
xor
sti
in
jbe
pop
cmp
out
lea
mov
enter
xor
pop
andb
sbb
add
andb
js
sbb
xchg
xchg
cwtl
dec
push
sarl
mov
movsb
inc
mov
sahf
clc
stos
pop
sub
sub
fsubrs
popf
mov
cmp
jp
popa
cwtl
mov
fldlg2
add
test
nop
push
cmp
lahf
imul
xchg
xchg
imulb
test
sub
cmp
sub
sub
mov
fldt
sahf
cmp
xchg
xchg
dec
xor
test
jbe
lcall
inc
xlat
cmpsb
push
mov
jno
push
and
or
stos
xor
in
sbb
or
int
xor
sbb
add
mov
push
cmp
in
sbb
mov
fwait
xor
add
pop
cmp
testb
pop
lea
pushl
adc
mov
aaa
test
sbb
xchg
xor
int3
mov
xchg
pop
mov
das
add
enter
inc
shlb
cmp
cmp
jmp
mov
pop
jb
test
ljmp
cmc
jb
pop
xor
push
decl
lods
xchg
sub
jno
mov
pop
lods
and
mov
push
ljmp
mov
adc
popf
insl
pop
js
insb
xor
cmp
or
cmp
lret
or
dec
roll
jns
sbb
push
mov
mov
mov
test
pusha
or
scas
aaa
mov
cli
jnp
and
in
andl
std
mov
pop
and
iret
mov
mov
es
maskmovq
in
jbe
mov
fldt
inc
pop
lea
add
popf
mov
cmp
insb
inc
inc
mov
dec
lds
movsb
push
out
inc
mov
push
inc
inc
jl
dec
call
loopne
pop
imul
dec
inc
sbb
jae
mov
xchg
sti
hlt
mov
mov
xchg
xor
sbb
xlat
inc
mov
sub
lods
xchg
sub
jno
mov
pop
lods
and
mov
push
sub
adc
inc
leave
mov
rcrb
sub
mov
sbb
or
dec
aad
lods
xchg
dec
or
nop
dec
leave
pop
sub
sahf
or
push
cmp
and
fcomps
jo
jle
das
cmpsl
sbb
mov
fwait
lea
mov
int
sub
mov
fwait
mov
cwtl
inc
mov
subb
dec
jl
cmp
jle
data16
sti
mov
dec
mov
dec
inc
leave
or
sub
xchg
xchg
dec
jmp
mov
and
mov
pop
xchg
mov
imul
pusha
xor
dec
cmp
xor
rdpmc
and
mov
mov
sub
pop
aad
fwait
inc
insb
data16
sti
xchg
adc
inc
jl
iret
test
jp
movsl
loop
fisubrl
mov
mov
sbb
pushf
cmp
insl
lds
push
mov
shrl
sbb
pop
and
mov
or
in
pop
and
dec
lretw
inc
lahf
sahf
inc
jge
mov
and
fsts
jo
jle
das
cmpsl
sbb
mov
fwait
mov
push
cmp
test
fwait
xor
lods
jmp
pushf
and
jne
pop
stos
mov
inc
das
mov
mov
add
sbb
add
andb
js
sbb
mov
ret
push
mov
jne
mov
push
mov
sub
lods
cmp
jae
fldt
sbb
cwtl
inc
scas
push
add
cmpsl
sub
and
sbb
test
lcall
cltd
int3
adc
lods
mov
mov
sbb
push
dec
xor
test
dec
repnz
jns
push
and
lcall
xor
adc
cwtl
test
lret
push
cmp
arpl
sub
enter
ret
sbb
movsb
dec
xchg
dec
xchg
cltd
xchg
xchg
xor
scas
xchg
dec
xchg
sbb
lahf
mov
cmc
cli
cmpsl
jl
aas
rorl
rcll
pop
clc
dec
sti
fs
cs
mov
pushf
mov
mov
lods
mov
or
pop
cmp
lret
mov
sti
lret
cmp
xchg
push
or
mov
mov
xchg
cmp
jl
dec
cwtl
xchg
cwtl
dec
push
sarl
jmp
mov
xchg
and
js
sub
or
cwtl
mov
mov
jmp
cmp
rcrl
ss
dec
loop
sbb
mov
add
hlt
test
mov
inc
lcall
xchg
cli
je
fwait
insb
push
cmp
or
jne
push
cld
dec
cli
in
fistl
and
xchg
xchg
xchg
mov
mov
sub
sahf
or
push
cmp
and
leave
cmp
cmpsl
lret
movsb
sbbl
dec
lahf
fwait
int
mov
js
lcall
adcl
jnp
call
es
adc
popf
mov
sbb
insb
inc
leave
mov
xchg
dec
cmc
dec
inc
xor
bound
or
int3
mov
sub
mov
mov
cmp
pop
addl
shll
mov
mov
mov
inc
mov
sub
lods
xchg
sub
jno
mov
pop
lods
and
jae
mov
adc
fisubl
adc
add
mov
icebp
sub
jl
lcall
in
inc
push
les
xor
adc
in
mov
cmp
pop
leave
fxam
repnz
and
add
xor
or
aad
out
sub
test
sahf
lahf
into
xchg
int
in
mov
jnp
popf
xor
lods
mov
or
pop
cmp
lret
mov
sti
lret
sub
xchg
push
int3
and
mov
xchg
or
jl
dec
addb
dec
fwait
xchg
mov
bound
mov
inc
int
ds
fsubs
xor
lret
lahf
xchg
push
outsl
test
mov
mov
xlat
inc
mov
sub
lods
xchg
sub
jno
or
lds
mov
dec
cltd
push
cmp
loopne
push
sub
or
xor
sbb
pop
dec
cmpsl
outsb
subb
testb
xchg
lods
lret
dec
sbb
xchg
imul
imul
jnp
lods
mov
cmpb
rcl
fidivrl
pop
dec
jns
scas
sbb
lcall
mov
sbb
push
lods
mov
or
mov
mov
outsl
pop
icebp
cwtl
dec
and
cmp
or
cmp
dec
dec
mov
jne
fcoms
xor
add
adc
scas
cmp
mov
fcmovb
pop
inc
xchg
push
add
and
add
stc
clc
jp
add
stc
dec
mov
lods
fmuls
pop
add
pop
popf
int3
addr16
cmp
mov
adcb
sub
rol
pop
inc
push
pop
and
test
xchg
mov
dec
sarb
mov
pop
xchg
sub
stos
aas
outsb
in
divb
subl
inc
mov
stos
rorl
inc
imull
sub
push
mov
pop
jmp
movsb
sti
dec
clc
sub
filds
mov
popa
call
rcll
pop
lret
sbb
jle
cs
pop
stos
aam
mov
jnp
fwait
push
mov
cmp
addr16
pop
int3
loopne
pop
pop
loope
mov
pop
fidivrs
fucom
repz
iret
and
and
mov
lret
xchg
lock
hlt
xchg
lea
xchg
movsb
push
popf
or
orb
dec
and
xor
and
cmp
ja,pt
pop
push
pop
add
cmpsl
sarl
sub
testl
cmp
and
aas
cmp
cmp
dec
push
loope
stos
push
push
cli
sub
pop
sbb
sub
adc
mov
jp
je
ret
jmp
test
aad
push
mov
or
cmp
ja
mov
jno
sub
bndldx
xchg
dec
push
mov
mov
xchg
sub
fisttpl
mov
std
cli
jnp
and
in
andl
sbb
icebp
js
test
dec
sub
addr16
add
rol
xor
dec
jg
into
sub
push
lods
out
fldt
lahf
adc
pop
stc
outsl
fyl2xp1
cltd
dec
enter
mov
xchg
push
push
mov
fldt
fcomps
push
dec
mov
push
mov
arpl
int3
push
jg
cwtl
sub
lret
call
add
call
dec
inc
cmp
jp
cmpsl
jecxz
lcall
xchg
int3
adc
ret
in
fstps
push
les
aad
std
addb
inc
ficomps
mov
stc
cli
cmp
scas
xchg
adc
shrb
add
idivb
test
movsl
adc
pop
mov
mov
mov
not
int3
xor
mov
xchg
sbb
adc
lahf
mov
cmc
cmp
dec
mov
neg
xchg
sbb
cmp
in
mov
jnp
popf
xor
lods
mov
adc
sti
repnz
int
popf
repz
mov
aaa
and
sub
sub
stos
push
scas
mov
popa
xchg
cmp
fimull
movsl
call
test
jne
lea
jnp
stos
mov
dec
sbb
cltd
push
dec
mov
sub
rcrl
dec
inc
pop
shrb
cmpsb
arpl
sbb
dec
push
lods
and
push
jge
sub
cmpsb
mov
iret
fisubl
adc
add
mov
je
push
dec
jl
push
dec
push
pop
jg
in
sbb
or
dec
rorl
mov
stos
pop
mov
lods
jo
das
jecxz
fwait
xchg
inc
pop
jp
mov
mov
ljmp
add
jle
popf
lret
dec
inc
cmp
fwait
out
negl
dec
enter
sub
sub
mov
mov
push
jg
jecxz
lcall
ficomps
repz
fwait
int
jecxz
insl
xchg
jmp
and
ret
jnp
and
cmpb
mov
loop
sub
xor
je
insb
sahf
addb
fldenv
jl
addb
pop
repz
mov
in
ja
xchg
lods
sbb
ljmp
data16
mov
leave
or
push
cmp
sub
add
cmp
shrl
loope
jg
cmp
push
movsl
pop
cmp
loopne
inc
and
jae
lods
push
sub
push
stos
fstpt
pop
scas
shrl
dec
movsb
aad
xor
roll
pand
js
jae
pop
xstore-rng
cmpsl
push
mov
addb
jmp
jp
das
xchg
inc
rcrb
fistpll
fucomip
icebp
mov
lret
in
mov
fldt
out
sbb
inc
idivb
popf
mov
push
shrb
mov
xchg
dec
stc
dec
inc
xor
bound
or
popf
mov
rolb
pop
sub
mov
mov
imul
inc
mov
mov
jnp
xchg
rcl
lea
dec
mov
sub
ret
cli
xchg
loop
sbb
dec
ret
mov
and
mov
sub
sub
mov
sbb
mov
mov
pushf
cmp
movsb
cmp
flds
cmp
cltd
add
dec
arpl
sub
mov
pop
cmp
movsb
lcall
jge
pop
jmp
mov
or
lahf
mov
cmc
cmp
dec
mov
neg
xchg
xchg
js
or
in
mov
jnp
fwait
xor
mov
jle
mov
sbb
adc
pop
stc
outsl
fprem1
cltd
dec
enter
mov
xchg
push
push
mov
scas
das
fcomps
push
int
popa
js
pop
push
mov
arpl
addl
mov
jae
mov
push
ljmp
mov
or
lret
stc
push
test
rcl
popf
sbb
scas
scas
cwtl
aas
jb
cmpsb
arpl
sbb
mov
pop
lods
and
mov
jno
sub
cmpsb
mov
iret
fisubl
popa
scas
lds
out
and
div
fsubrl
mov
int
mov
dec
shrl
push
mov
dec
fcompl
stc
push
sub
test
mov
ret
inc
xchg
lret
faddl
mov
stos
jecxz
sub
stc
fidivrs
pop
mov
fwait
lea
mov
inc
negb
pop
mov
imul
and
out
ljmp
ret
fs
iret
fiadds
into
sbb
inc
jns
push
inc
cmpb
dec
dec
addb
dec
addb
push
mov
arpl
int3
push
jg
cwtl
and
inc
into
mov
lret
call
add
call
dec
inc
pushf
out
mov
jp
cmpsl
jecxz
lcall
xchg
int3
adc
popl
mov
mov
inc
push
lods
and
les
sub
mov
lret
fisttpll
add
jbe
push
dec
mov
pop
ljmp
or
dec
shrl
push
mov
dec
fcompl
stc
push
sub
test
mov
ret
inc
xchg
lret
faddl
mov
mov
stc
pop
ds
mov
fwait
mov
mov
dec
call
mov
inc
iret
mov
cwtl
sbb
lods
mov
jns
cltd
jecxz
jo
xchg
enter
outsl
out
or
mov
inc
inc
jg
bswap
pop
pop
mov
dec
addb
dec
addb
push
mov
arpl
int3
push
jg
cwtl
and
lret
call
add
call
dec
inc
pop
cli
xchg
in
mov
into
pop
and
rcrl
mov
imul
inc
pop
jp
test
jp
movsl
loop
fisubrl
cmc
cmpsb
mov
iret
fisubl
push
dec
mov
jmp
push
dec
lcall
stos
in
sbb
or
dec
rorl
mov
fistpl
cltd
lds
iret
push
mov
mov
mov
and
dec
test
bound
mov
cli
jnp
and
fwait
mov
sbb
mov
dec
xchg
daa
inc
mov
sub
filds
out
push
test
stc
iret
ss
mov
fldt
mov
rcl
sbb
cmp
cmpsb
cmp
inc
xchg
faddp
pop
inc
sarb
cltd
das
sahf
lods
imul
or
clc
js
pop
push
lcall
push
cwtl
orl
mov
pop
int
in
mov
dec
push
setnp
divl
mov
cmp
inc
fwait
popf
int3
adc
fcompl
std
mov
inc
loop
lods
les
jno
fisttpll
add
cli
cmp
dec
fisubrl
add
jge
test
movsl
shlb
push
push
addr16
dec
fnstenv
push
in
pop
jmp
test
inc
pushf
push
or
sbb
mov
fdivrl
cmp
std
jle
add
mov
popl
jecxz
fstpt
pop
lret
mov
sub
cmc
mov
fldt
sahf
pop
lea
lahf
xor
sarb
mov
or
sub
addl
push
mov
xchg
aas
rolb
pop
dec
and
mov
imul
inc
loopne
or
shll
mov
mov
test
xlat
aaa
mov
sub
lods
xchg
sub
jno
mov
pop
lods
and
and
sub
cmpsb
mov
iret
fisubl
push
dec
mov
jmp
push
dec
clc
cmc
push
dec
push
pop
pop
stos
in
sbb
or
dec
roll
jns
sbb
push
mov
mov
mov
xlat
shlb
mov
scas
aaa
mov
cli
jnp
and
in
subl
adc
dec
mov
mov
xchg
cmpsb
call
fwait
lret
in
mov
fldt
and
lea
mov
jne
fwait
jg
inc
mov
mov
test
lods
jbe
dec
and
mov
xchg
cmp
xchg
arpl
mov
xchg
or
jae
inc
mov
mov
stos
lahf
insb
pop
inc
mov
sbb
test
lcall
xchg
int3
adc
or
cwtl
mov
pop
lods
and
daa
jno
sub
out
mov
mov
jno
inc
pusha
shrb
add
bnd
test
movsl
adc
pop
mov
mov
or
test
mov
mov
fisubrl
jnp
and
in
test
repz
lea
mov
inc
ficomps
lahf
dec
stos
mov
popf
xor
dec
imul
xor
jnp
lods
cmp
dec
jmp
lea
stos
xor
adc
sbb
xchg
push
push
mov
mov
adc
test
adcb
mov
imul
sar
dec
clc
mov
mov
inc
clc
add
ret
push
dec
ret
popf
out
lahf
cmpb
add
push
lods
xchg
sub
jno
mov
push
lods
and
mov
sub
and
mov
scas
xor
push
jo
dec
add
jge
or
inc
call
test
pop
fistpl
cltd
push
mov
jno
push
jg
or
sub
mov
shr
in
cmp
mov
push
dec
mov
out
lret
mov
es
maskmovq
negl
mov
lcall
test
jp
jg
inc
mov
mov
test
lods
je
dec
and
mov
xchg
cmp
xchg
arpl
mov
xchg
or
jae
inc
mov
lods
stc
stos
lahf
insb
pop
inc
mov
sbb
test
lcall
xchg
int3
adc
lods
mov
mov
fisubrl
fsubrl
scas
sbb
push
cs
mov
sahf
das
xchg
stc
cli
cmp
jo
insl
lds
bnd
or
dec
aad
scas
xchg
inc
mov
pop
fstl
mov
sub
inc
xor
jmp
xchg
scas
pop
leave
fxam
xor
push
mov
mov
cmpsb
out
pop
idivl
jle
fwait
mov
mov
int
mov
js
pop
jmp
mov
xlat
iret
mov
cmpsb
sbb
xlat
xchg
loopne
ds
jmp
std
mov
sti
mov
jl
insb
inc
leave
mov
xchg
mov
sbb
mov
mov
cmp
and
imul
sar
dec
clc
mov
mov
inc
clc
xchg
or
rorl
out
cmpb
lds
and
push
lods
xchg
sub
jno
mov
push
lods
and
adc
sub
call
mov
icebp
movsb
mov
cli
je
ret
pop
mov
mov
mov
mov
shrb
or
xor
adc
jns
sub
dec
adc
push
or
push
push
cwtl
sbb
add
inc
xchg
and
je
sbb
lahf
inc
add
repnz
push
aas
fwait
lret
in
mov
fldt
ret
adc
inc
xchg
cmp
inc
inc
shrb
mov
sub
inc
and
ret
sbb
mov
mov
inc
sbb
push
or
xor
insl
mov
imul
mov
cmp
jp
jecxz
js
adc
xchg
jbe
inc
cmp
pop
cmp
mov
xor
cmpsl
add
and
pop
push
cmp
sub
sub
cmp
mov
icebp
movsb
mov
cli
je
jmp
mov
mov
mov
repnz
or
xor
xchg
dec
fs
adc
push
xchg
dec
jnp
add
mov
mov
popf
dec
daa
loop
bound
cltd
sti
out
jle
xor
mov
mov
dec
pop
and
ficoml
je
scas
stos
stos
sub
aam
lods
movsl
xor
jnp
stos
mov
cmpsb
sbb
fsubs
int
mov
iret
mov
mov
jns
dec
or
nop
dec
lret
dec
test
in
push
repz
jb
mov
pop
dec
call
loopne
pop
adc
and
pop
fdivr
fdivp
pop
loop
ret
mov
aad
pusha
pop
xor
jg
hlt
lods
push
out
lret
imulb
or
and
jp
rorb
or
sbb
jno
push
js
fucomip
xchg
insb
lods
insl
cmp
in
divb
subl
inc
mov
stos
rorl
inc
xchg
scas
dec
mov
and
imul
mov
pushf
fisubs
and
jno
pop
mov
xchg
jg
scas
xlat
mov
in
cmp
push
push
jmp
mov
xchg
xor
call
xor
out
xchg
lods
out
lcall
adc
sti
sti
xchg
mov
jo
inc
test
imul
sub
jmp
sti
jne
cwtl
aad
lahf
push
mov
sarb
sub
xchg
mov
inc
cltd
es
ret
push
ja
and
stc
xchg
add
mov
jmp
jb
in
xor
push
ljmp
sub
jne
vandnps
mov
ss
mov
dec
or
mov
sub
and
xchg
ret
xchg
mov
push
ja
add
iret
scas
push
insl
mov
test
or
xchg
aad
xor
xor
popf
push
or
inc
jno
jnp
inc
mov
in
stos
stos
shrb
repnz
fwait
push
dec
mov
int
test
inc
mov
inc
pop
push
lods
mov
xchg
jne
mov
ret
adc
clc
jbe
mov
jbe
fdiv
addl
and
sub
xchg
jmp
mov
jno
sbb
xchg
mov
cmp
and
mov
test
iret
adc
xchg
bnd
pop
xor
sbb
test
lcall
jmp
lret
lahf
lcall
cwtl
sub
cmp
sub
cmc
sbb
sbb
cld
jg
ja
cli
in
test
dec
fs
insl
jmp
shlb
push
sbb
in
dec
sti
lahf
les
jo
cmp
gs
sub
inc
icebp
xchg
jp
mov
dec
cmp
call
cli
fwait
cmp
aas
and
les
pusha
xor
mov
push
mov
add
xlat
test
sar
pop
xor
push
fsubs
pop
lret
stos
call
cmpsb
jo
dec
mov
jg
or
push
xchg
imul
mov
lret
gs
mov
insl
test
mov
fbld
call
jne
movsl
cmc
lds
iret
xchg
mov
test
ret
inc
mov
sbb
js
mov
cwtl
pop
lahf
adcb
sarl
jo
mov
hlt
mov
adc
ja
push
adc
fiadds
lcall
movsl
pop
out
lret
inc
test
add
mov
lds
ljmp
and
xor
enter
lods
in
cwtl
and
fisubl
insl
std
inc
pop
inc
xlat
popf
stos
xor
or
dec
xchg
sbb
or
popf
jge
sbb
loope
cwtl
test
jo
fsubs
gs
jmp
mov
mov
lcall
mov
cmp
adc
scas
cwtl
sub
loop
push
pusha
mov
out
jnp
add
pop
mov
mov
jae
push
leave
cs
divl
enter
push
lcall
mov
clc
clc
mov
cmc
lret
test
xchg
jle
enter
int
mov
add
fsubl
mov
lcall
scas
pop
dec
enter
jns
cmp
xchg
shll
xorl
add
mov
xchg
fcomip
or
aam
adc
repz
inc
stos
div
call
or
and
ror
fs
xchg
test
cs
or
push
cmp
call
in
cltd
test
lods
mov
sub
pop
or
pop
stos
inc
test
mov
mov
popf
dec
xchg
cwtl
test
shrb
movsl
clc
lahf
mov
pop
sbb
and
cmpsl
lock
pushf
jne
out
pop
mov
mov
int3
jg
mov
pop
sbb
sub
cmpsl
cltd
lods
imul
pop
fs
popf
divl
dec
in
rorl
call
xor
fs
lret
jge
push
fwait
lahf
in
stc
sbb
mov
pop
ds
mov
cmp
jbe
gs
idivl
leave
nop
ds
push
and
pop
pop
fsubrl
mov
lcall
mov
pusha
mov
cmc
sub
mov
xchg
repnz
pop
inc
inc
sbbl
or
sub
shlb
loopne
or
and
mov
into
data16
push
sub
aas
mov
cld
loop
add
or
mov
adc
mov
push
or
aam
sub
mov
sbb
nop
dec
xchg
sbb
and
cmpsl
stc
cltd
icebp
out
cmp
test
push
pop
loopne
pushl
imul
sub
cmpl
push
int
aas
jnp
dec
mov
sbb
xchg
cmp
xor
mov
cwtl
jge
sbb
inc
fs
pop
icebp
sub
dec
push
dec
data16
outsl
adc
inc
xchg
sbb
sbb
pop
xor
testb
xchg
lret
imul
test
inc
xchg
pop
mov
pop
frstor
jns
pusha
mov
pushf
sar
mov
mov
mov
ret
jb
insb
or
call
mov
push
adc
dec
push
imul
sbb
mov
cld
loop
xchg
adc
xchg
jmp
add
mov
stos
dec
adc
test
mov
adc
into
sub
iret
push
or
mov
enter
or
xchg
dec
xchg
cltd
add
mov
negb
xchg
clc
cmp
cltd
movsb
push
in
mov
pop
xchg
jmp
sbb
lahf
mov
into
incl
lahf
push
mov
pop
loopne
cli
mov
lods
jmp
dec
mov
push
mov
out
adc
loope
jns
rorl
scas
iret
imul
addr16
xor
pushf
insb
cmp
hlt
cmp
test
in
mov
mov
jb
lret
xchg
mov
mov
andl
cwtl
cmp
ret
cwtl
adc
inc
jae
out
mov
movsl
test
adc
stos
jbe
cwtl
dec
sbb
imul
adc
sbb
push
and
leave
xchg
push
call
mov
inc
orl
mov
push
push
adc
dec
add
and
and
stos
dec
push
pop
mov
mov
movsb
jmp
push
lret
mov
adc
fsts
inc
aad
stos
jbe
mov
leave
dec
ss
sti
popa
stos
push
cwtl
push
mov
in
negl
mov
sub
call
cmp
mov
call
inc
mov
fcomps
sbb
jns
add
mov
cmp
xor
int
imul
addr16
xor
icebp
xor
dec
push
dec
dec
xlat
xlat
addr16
out
push
fwait
push
pop
sahf
sbb
cmp
pusha
pop
fcos
mov
test
add
push
jge
push
test
xorb
inc
adc
movsl
mov
jg
push
ds
imul
add
lret
jae
sub
mov
shl
ret
inc
inc
add
xchg
sbb
les
rclb
lock
fcoml
dec
add
rcrl
insb
ret
js
xchg
inc
add
adc
mov
push
call
jle
mov
xor
cmc
fnstsw
pop
stos
xchg
mov
lret
push
jb
jmp
scas
push
cltd
sahf
xchg
hlt
fwait
mov
call
pop
inc
mov
sbb
xchg
sarl
lds
jmp
sbb
xlat
cltd
orb
cmpsl
lods
scas
push
or
je
jp
sti
int
xlat
addr16
or
mov
or
pop
mov
lahf
popf
in
jns
test
test
dec
cmp
and
push
fwait
dec
add
xchg
cmp
mov
arpl
fcomps
or
lods
jl
nop
pop
pusha
arpl
call
je
or
push
adc
sbbl
jnp
test
dec
shlb
lock
gs
inc
add
mov
push
outsb
ret
adc
mov
fwait
inc
pop
test
std
bound
popa
lods
push
sbb
mov
shlb
out
repnz
mov
stos
push
sub
dec
mov
push
lcall
mov
clc
daa
popf
cmp
lock
xor
std
adc
and
inc
ds
insl
movsl
aam
clc
xchg
mov
scas
das
stos
and
xor
arpl
ret
jae
mov
jg
push
or
mulb
sbb
jnp
mov
nop
sbb
cwtl
cwtl
mov
outsb
pop
int
pop
xor
daa
xor
dec
les
inc
add
pop
std
imul
cltd
mov
push
cmp
and
scas
jge
sarb
pop
lahf
insl
mov
in
fs
mov
dec
in
mov
add
xor
jl
enter
mov
rclb
pushf
jne
inc
push
leave
and
bound
xchg
sub
jecxz
sbb
imul
out
or
shrb
xor
stos
fs
cmpsb
fdivrs
repz
jns
push
fwait
lahf
pop
jmp
repnz
xor
cmp
sbb
je
mov
mov
fst
lret
adc
imul
decb
sbb
push
fldenv
scas
ljmp
mov
std
cmpsl
pop
or
loope
xchg
jmp
inc
popa
inc
xlat
lret
scas
pop
or
popa
pop
mov
sub
outsl
mov
insl
pop
mov
fsubl
jne
inc
push
xchg
mov
mov
inc
add
in
pusha
cmp
mov
add
movsl
mov
movsb
sub
mov
pop
xchg
jmp
push
xchg
xchg
call
mov
xchg
jp
call
aaa
jmp
adc
int
mov
test
jge
or
data16
adc
sbb
jle
jecxz
movsl
push
sbb
leave
enter
in
test
mov
mov
xchg
in
lds
dec
rcrl
cmpsb
lret
adc
sbb
or
je
mov
popf
ja
cwtl
pop
popf
push
cmp
insb
clc
mov
xor
lret
adc
sbb
xor
inc
mov
rcrb
fsts
stc
mov
scas
mov
sub
or
test
xor
insb
or
popa
pop
mov
mov
arpl
mov
pop
mov
or
loopne
rcrb
mov
fcomps
or
insb
pop
hlt
jl
and
mov
gs
or
adc
push
movsb
xorl
adc
xor
mov
adc
js
pop
fs
pop
sub
movsb
jno
cli
lods
insl
lahf
in
push
xchg
shll
sti
add
add
popf
pop
testb
daa
hlt
mov
insb
or
pusha
or
mov
xchg
jmp
sbb
and
push
into
xchg
sub
repz
dec
movsb
mov
push
sbb
int
test
cs
lock
out
mov
xchg
jl
dec
push
pop
stos
call
ja
stos
dec
mov
sub
insb
clc
mov
lahf
mov
test
mov
ds
cld
mov
mov
popf
cmc
fcmovne
pop
mov
push
inc
aas
add
aam
inc
imul
mov
imul
jbe
mov
push
or
lret
orl
daa
mov
fdiv
dec
cmp
out
clc
sbb
mov
or
les
aaa
jb
fs
xchg
cmp
pop
lods
test
and
fs
dec
sub
movsb
js
xchg
fisubs
inc
mov
mov
and
dec
and
cmpsb
jo
imul
xchg
out
push
dec
xchg
mov
mov
pushf
mov
lock
in
dec
rcl
jecxz
mov
movsl
repz
dec
movsb
mov
jbe
adc
dec
mov
and
jecxz
inc
mov
or
pusha
xor
adcb
mov
idivl
dec
rcrb
sub
lock
mov
fwait
push
mov
sahf
sbb
cld
mov
cltd
imul
mov
popf
push
jns
sbb
test
add
and
cmp
xchg
inc
cmp
int3
adc
xchg
cmp
fidivrs
mov
xor
sub
pusha
fdiv
fcomi
dec
addr16
push
lret
xchg
xchg
sbb
dec
xchg
sbb
sbb
fdivs
sbb
shrb
dec
inc
add
adc
mov
adc
and
lods
and
cmpsb
jns
aad
xor
cmpsl
sbb
pop
loop
jg
imul
in
mov
jecxz
push
dec
pop
pop
dec
cmpsl
push
mov
dec
call
insl
mov
cld
idivl
sbb
inc
and
jecxz
xchg
jb
enter
into
ret
insl
adc
cmpsl
aas
add
fmull
push
cmp
cmp
xchg
push
fisubrs
out
scas
mov
mov
pop
lahf
popf
push
imul
xor
dec
jg
int3
xor
lds
divb
testl
ljmp
cmp
adc
push
pop
pusha
jnp
mov
test
dec
scas
je
sbb
jecxz
adc
aad
jg
dec
add
or
outsb
cmp
xor
movsl
imul
int3
sub
call
ret
xchg
mov
mov
jbe
bound
lods
push
sbb
cltd
test
loop
jbe
push
pop
shlb
xor
push
out
jle
fimull
neg
sbb
gs
rcll
xchg
je
xchg
xor
pushf
ss
in
lret
xchg
nop
out
jb
sti
je
std
adc
mov
sub
imul
mov
pop
mov
jo
mov
cwtl
mov
mov
mov
adc
dec
rcrl
mov
jnp
popl
sbb
mov
les
pop
ja
scas
xor
enter
pop
cmp
mov
or
fisubl
mov
enter
js
inc
mov
dec
mov
dec
dec
add
icebp
push
imul
jmp
xchg
inc
add
loop
push
sbb
scas
pop
fdivrs
cmpsl
push
add
test
and
adc
pop
mov
dec
pop
push
xor
test
mov
ja
push
shrb
cmpsl
fidivrs
dec
ljmp
fstpl
popf
shl
inc
shll
push
dec
push
lahf
adc
cwtl
testl
shlb
mov
aad
imul
xor
mov
jae
shll
int
mov
pop
pop
imul
ds
cmpsb
mov
sub
pop
icebp
dec
add
stos
or
jo
imul
inc
xchg
lcall
cld
fwait
mov
outsl
popf
imul
inc
fcomps
add
scas
hlt
mov
sbb
mov
lock
out
push
dec
rol
loop
and
aad
add
cmpsl
inc
stos
push
mov
pop
xchg
inc
add
mov
dec
sub
inc
push
inc
fnsave
sbb
out
js
ret
and
enter
cmp
aad
push
int
aas
jmp
int3
mov
dec
clc
push
mov
sbb
fldcw
dec
ljmp
and
jmp
jl
dec
or
mov
adc
xor
mov
sti
imull
aad
pushl
mov
out
dec
push
lock
cmp
in
gs
cmpsb
mov
jle
adc
mov
mov
jmp
and
mov
xchg
test
sbb
shlb
mov
aam
xchg
dec
add
sbb
mov
pop
xor
enter
scas
std
cltd
enter
lea
and
shlb
inc
and
test
add
inc
cmp
outsl
sub
xchg
mov
inc
sub
movsb
jno
jns
insl
lahf
inc
pop
lret
fnsave
mov
outsl
inc
push
or
or
push
xchg
sti
gs
push
cwtl
push
sub
mov
fdivs
xor
lds
ljmp
aam
stos
dec
into
xchg
ret
sarl
push
sbb
daa
stc
je
out
mov
lock
or
js
mov
je
in
int
lds
sahf
push
xor
repz
dec
add
stos
rcrl
pop
in
mov
mov
cmc
sbb
ret
arpl
xchg
andl
mov
cmp
jae
mov
adc
dec
test
popl
stos
out
fwait
mov
and
jecxz
add
sub
hlt
repnz
cmp
call
cli
fwait
or
and
les
jl
aam
repnz
fcoml
out
xchg
jno
stos
out
mov
ret
stos
pop
xor
push
fsubs
pop
lret
stos
call
cmpsb
jo
cmp
in
xchg
imul
lea
gs
mov
insl
cwtl
push
cltd
sahf
insl
mov
gs
pusha
pop
call
jne
movsl
cmc
mov
mov
test
ret
inc
mov
sbb
repnz
cwtl
sub
lods
fsubl
mov
hlt
dec
int
xlat
leave
adc
pop
xchg
push
adc
in
dec
test
inc
xlat
jns
rcrl
pop
call
adc
add
add
mov
test
pop
test
pop
stos
pop
or
jl
arpl
addl
xchg
or
fidivrl
insl
lea
inc
xlat
popf
stos
cmp
xor
dec
xchg
sbb
or
aam
sti
popf
dec
scas
sbb
lret
test
nop
sub
movsl
icebp
xor
gs
jmp
mov
inc
lcall
jae
cmp
adc
scas
dec
sub
loop
mov
or
out
jnp
or
mov
mov
jae
push
leave
stos
xchg
divl
in
rcr
jne
push
lcall
mov
clc
clc
scas
cmp
lret
test
test
enter
shl
cmpsl
inc
sub
add
fsubl
mov
lcall
scas
pop
dec
sub
mov
jne
lods
in
push
xchg
jno
dec
add
movl
hlt
or
aam
shrb
push
mov
div
imul
or
jl
repz
insb
das
mov
or
push
cmp
call
in
sbb
mov
xor
je
int
or
pop
stos
dec
test
mov
adc
sub
movsl
dec
xchg
cwtl
test
mov
fsubs
sub
fsubl
sbb
and
cmpsl
lock
pushf
jne
out
pop
mov
icebp
bound
jg
mov
pop
sbb
sub
cmpsl
dec
lods
imul
lret
jle
dec
dec
popf
divl
add
sahf
rorl
stos
jne
rorb
cmpsl
pushl
fs
lret
jge
push
fwait
lahf
in
stc
sbb
xor
mov
mov
xchg
xchg
jp
leave
nop
ds
push
and
pop
pop
adc
mov
lcall
mov
pusha
mov
cmc
cmp
mov
adc
inc
sbbl
or
sub
shlb
push
mov
cmc
jae
cmp
mov
or
mov
lea
push
sub
ds
cld
loop
add
or
daa
adc
add
ret
mov
push
or
aam
sub
mov
sbb
test
xchg
sbb
and
cmpsl
stc
cltd
int
cmp
gs
cltd
add
mov
loopne
pushl
ljmp
push
xor
int
aas
mov
sbb
xchg
cmp
xor
mov
pop
outsb
push
sub
dec
fs
pop
icebp
out
ja
push
or
mov
outsl
adc
inc
mov
sbb
pop
lahf
mov
testb
xchg
jbe
lret
imul
test
inc
xchg
pop
mov
frstor
jns
pusha
mov
pushf
out
pushl
pop
in
int3
sbb
test
jb
insb
or
nop
push
mov
jecxz
inc
inc
add
lret
xchg
aas
je
push
imul
sbb
mov
cld
loop
xchg
shrl
xchg
call
add
mov
mov
sub
das
push
mov
adc
into
xor
cmp
push
fsubrl
imul
lods
dec
xchg
cltd
add
lods
pop
loopne
negb
mov
cltd
inc
push
in
mov
pop
xchg
jmp
sbb
fistpll
ficompl
cmp
loopne
cli
mov
lods
jmp
dec
imul
inc
out
adc
loope
jns
ror
fwait
iret
imul
addr16
xor
pushf
insb
cmp
jae
mov
fildl
ja
and
lret
xchg
mov
mov
andl
cwtl
cld
sbb
test
cwtl
sub
inc
jae
sub
adc
stos
jbe
stos
dec
sbb
adc
fs
sbb
pop
sbb
push
shr
leave
xchg
mov
jo
cld
inc
orl
mov
aad
rcll
add
and
and
xchg
dec
push
pop
mov
aaa
sbb
push
lret
mov
adc
test
pushf
stos
jns
mov
lock
or
cmp
xchg
sub
xor
push
and
test
andb
xchg
push
dec
cmc
test
cmp
pop
mov
dec
jne
jp
add
in
sub
add
scas
inc
pop
xchg
int3
cmp
inc
mov
add
or
xor
addr16
dec
jp
sub
stos
pop
hlt
fistl
fs
jno
adc
test
mov
sbb
pop
xchg
dec
sti
mov
arpl
inc
cmp
ficoms
lret
lods
dec
gs
icebp
xchg
jp
mov
pop
push
or
inc
jno
jnp
inc
mov
in
stos
cltd
push
imul
mov
int
mov
imul
mov
dec
fcoml
mov
xchg
jne
mov
dec
pop
pop
lea
jae
sti
and
insb
imul
jno
hlt
add
xchg
sub
jnp
popa
jae
je
cmp
ficoml
mov
test
cmp
pop
mov
les
add
in
sub
add
dec
cltd
cmp
scas
cwtl
lret
movsl
mov
jbe
mov
inc
and
or
test
cmc
sbb
sbb
bound
insl
jmp
inc
popa
inc
lock
sbb
cmpsl
xchg
dec
sti
iret
inc
arpl
inc
cmp
es
sub
inc
icebp
xchg
jp
mov
cmpsb
push
or
inc
jno
jnp
inc
mov
in
stos
stos
adc
inc
repnz
fwait
push
dec
mov
int
mov
inc
mov
xchg
popf
push
js
xchg
outsb
cmpsb
sbb
sbb
popa
jo
mov
mov
sti
and
insb
imul
jno
hlt
add
xchg
sub
jnp
pusha
jae
je
cmp
and
popf
sub
dec
cmc
test
cmp
pop
fldt
dec
jne
jp
add
mov
je
cmc
roll
lds
or
cmpb
adc
mov
subl
push
and
je
jno
adc
test
mov
sbb
sbb
mov
dec
sub
mov
sbb
and
lds
fisubrl
jnp
inc
mov
cmp
stos
xor
call
fwait
jmp
push
mov
and
pop
inc
fwait
lret
in
mov
mov
cmp
ret
cltd
jae
xchg
xchg
inc
cltd
enter
out
cwtl
and
or
add
imul
in
dec
mov
sahf
cmp
mov
cmp
add
dec
fistpll
ljmp
lock
mov
push
adc
xor
aad
pushf
scas
inc
jb
int3
sbb
mov
cld
int
cmp
sub
cmc
sbb
repz
loopne
test
daa
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
testb
fnsave
icebp
lods
dec
push
or
shrb
fldenv
in
sbb
in
xchg
das
jge
nop
jle
sarb
aas
cmpsl
xlat
in
bound
imul
pop
mov
cli
xchg
or
sub
test
icebp
cltd
push
rolb
fdivs
sbb
dec
outsb
pop
pop
scas
adc
xchg
dec
xchg
lock
or
xchg
mov
movsb
mov
daa
inc
inc
mov
ss
cmp
dec
and
mov
or
xchg
inc
xor
mov
mov
dec
daa
cmp
jp
pop
enter
pop
ffreep
ret
push
sub
int3
dec
shrl
lret
push
sub
add
lahf
out
pop
sub
enter
lret
lcall
xchg
stc
cli
fcom
and
sbb
rorb
adc
push
stos
xor
pop
mov
cmp
push
es
xor
mov
push
cmp
stos
ds
cli
jnp
and
fiadds
jno
mov
fwait
push
dec
mov
xor
jmp
mov
dec
repz
mov
jp
fst
in
mov
mov
movl
cmp
mov
add
movsl
inc
jl
sbb
pop
sub
js
test
or
incl
roll
insl
mov
lods
scas
addb
sahf
je
popf
mov
cmp
jp
add
adc
inc
iret
mov
lods
lahf
cwtl
dec
jno
pop
mov
lods
xchg
sub
adc
push
ret
mov
lods
nop
dec
jae
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
cmp
cmpl
sbb
adcb
pushl
popf
xor
or
fwait
push
xchg
mov
push
mov
jns
pop
pusha
jl
sahf
xchg
pop
out
mov
or
or
aaa
cwtl
hlt
jl
pop
mov
dec
les
xchg
jns
fcmovu
cld
sub
push
or
mov
cltd
mov
fistpl
outsb
ret
xchg
js
fs
out
enter
or
mov
test
sub
enter
add
and
xor
lods
test
stos
fcomps
leave
jae
sub
test
xchg
je
in
ds
inc
jge
mov
or
lock
mov
ss
adc
cli
jns
adc
cmpsl
lods
das
stos
pop
pop
jmp
test
pop
cmpsl
insb
dec
jbe
fs
push
cmp
ret
xchg
fldcw
ljmp
sub
and
and
cmp
adc
mov
jp
xchg
xor
or
es
xor
cmpsl
cmp
dec
lock
cli
jnp
sbb
testb
lods
insb
movsb
sbb
ja
cmp
js
fsubrs
mov
adc
xchg
push
mov
adc
pop
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
shrl
lods
test
bound
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
sahf
movsb
pop
jl
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
