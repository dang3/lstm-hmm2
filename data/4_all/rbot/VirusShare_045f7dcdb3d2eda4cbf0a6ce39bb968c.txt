incl
push
outsl
imul
idiv
outsb
dec
gs
bound
jae
imul
jo
xor
cs
insb
call
push
push
ja
push
jb
jbe
insb
gs
insb
dec
outsl
fs
jne
cmp
dec
dec
xor
dec
xor
outsb
mov
cs
and
data16
popa
jb
pop
dec
imul
mov
sbb
pop
inc
jne
pop
outsb
je
imul
out
jl
outsl
outsb
pop
inc
jo
and
je
jae
pop
ja
inc
inc
push
jg
fs
std
jae
je
jo
pop
vmread
cmp
inc
mov
arpl
dec
dec
inc
add
bound
je
jnp
fistpl
pop
sub
adc
and
jmpw
add
sub
inc
inc
dec
dec
inc
out
insl
mov
inc
sub
dec
pop
push
add
jbe
and
push
dec
push
dec
addr16
data16
das
dec
in
mov
outsl
jmp
sub
and
outsl
jb
and
inc
outsl
jne
fsubr
imulb
outsb
jae
insb
push
and
and
outsl
pushl
push
push
inc
inc
dec
pop
push
push
push
jbe
iret
jne
inc
pcmpeqb
pop
add
cmp
out
pop
sti
ffree
gs
outsb
jg
xor
xor
mov
jl
dec
xor
inc
xor
test
cmp
dec
dec
push
inc
sahf
cmp
sbb
or
out
jae
popa
insb
jo
popa
inc
arpl
inc
pop
sti
mov
inc
outsl
pop
jae
dec
aas
adc
int
jle
pop
push
push
adcl
mov
jnp
fwait
dec
and
dec
jge
sbb
mov
incl
push
inc
dec
inc
pop
inc
dec
pop
imull
push
push
push
inc
add
dec
inc
icebp
ret
jae
add
je
aas
inc
cmp
pop
sbb
ljmp
imul
jl
fnsave
insb
ljmp
and
imul
push
and
sar
pop
imul
add
add
add
add
pop
or
or
out
decl
or
or
or
movups
adc
shll
aas
add
add
shll
push
jnp,pn
shll
pop
jle
aas
or
jl
cmp
add
add
xor
movhps
das
out
xor
jg
jg
xor
repz
add
rorl
or
xor
adc
std
jg
pusha
push
push
inc
push
inc
cwtl
xlat
jae
pop
dec
xchg
fcmovb
xor
and
adc
gs
fs
jo
bound
cld
jmp
sub
xor
cmp
jne
mov
sti
idiv
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
icebp
cmpl
fidivs
jle
push
dec
mov
pop
ret
add
lds
or
cmp
mov
je
aas
cmp
je
in
mov
inc
dec
jne
adc
adc
ja
sti
sub
mov
pop
cmp
adc
enter
dec
or
sub
add
jmp
dec
or
in
sbb
xor
insl
or
adc
idivb
mov
mov
add
div
outsb
mov
mov
add
cmp
and
je
mov
dec
sub
rclb
mov
je
lea
push
push
add
lods
push
push
adc
push
movl
add
shlb
insl
xor
call
add
pop
das
mov
mov
mov
pop
pop
call
in
out
dec
fadd
add
sbb
mov
pop
add
clc
add
jb
pop
fcmovnu
jge
push
dec
push
mov
adc
mov
push
push
adc
lret
jae
push
mov
mov
out
xlat
ss
sub
jle
popf
cmpl
mov
xchg
xor
push
ss
lahf
test
mov
in
xor
push
jbe
enter
lea
in
aaa
adc
add
cmp
inc
loope
jb
fisubrl
lock
loope
es
push
dec
pop
aaa
ret
sti
mulb
pop
jmp
cmp
je
movl
ds
cmp
and
xchg
and
aas
mov
and
imul
adc
or
ja
addr16
xchg
int
mov
jmp
mov
dec
jg
sbb
test
std
adc
int3
push
pop
mov
es
mov
fadd
sbb
aas
dec
inc
adc
pop
or
out
or
mov
fcomip
adcb
and
jmp
orb
fdivs
je
inc
movsbw
popa
or
push
daa
and
mov
fcmovnu
fdivrp
adc
adc
and
inc
add
and
fucomi
add
jo
jnp
pop
push
pop
xor
dec
repnz
inc
clc
ret
mov
xchg
jno
push
mov
shlb
and
sub
idivb
fimuls
mov
je
jmp
lock
je
sbb
mov
sbb
out
mov
fcmove
in
push
clc
in
ficoml
icebp
mov
notb
or
pushf
je
mov
mov
test
pop
mov
ss
cmp
popf
push
push
int3
mov
cmpb
pop
push
test
and
or
sbb
popa
or
push
or
jae
insl
sar
lea
pop
div
stos
stos
sbb
std
mov
into
ret
in
or
pop
mov
push
add
loopne
pop
adc
or
push
push
adc
mov
or
cwtl
mov
movsb
or
fs
cmp
mov
fsubrs
in
idiv
push
incl
jl
pop
jne
and
jecxz
add
fimuls
shll
push
loop
hlt
sbbb
sub
jge
pop
ret
sbb
mov
dec
push
fldenv
incl
jbe
pop
addr16
stos
test
and
ret
bound
sub
adc
jmp
and
pusha
mov
mov
mov
fadds
lret
icebp
xchg
lea
movsl
pop
fmuls
jne
adc
adc
mov
mov
std
pop
ss
fs
cmp
rcr
mov
cmp
add
in
adc
lea
adc
sbb
or
add
lods
lret
bound
push
jae
add
sbb
pop
dec
add
mov
pusha
mov
sbb
cmp
cld
and
mov
lret
enter
add
das
and
lea
cmp
sbb
xor
aaa
xor
mov
ret
mov
mov
add
imul
es
push
xor
mov
inc
pop
inc
lcall
xchg
and
ret
or
pop
jne
mov
je
push
dec
sub
add
inc
add
jne
jle
pop
or
cmpsb
in
pop
in
jne
cmp
add
orl
and
push
sarl
test
js
push
lcall
shll
sbb
adc
push
mov
shrl
jecxz
push
xchg
adc
or
lods
pop
add
or
pop
jge
pushf
or
push
mov
add
pop
pop
in
lea
sbb
and
int3
adc
add
inc
mov
add
mov
cld
push
test
cld
negb
sub
jle
push
add
push
into
xor
fucomi
adc
or
xor
ds
mov
iret
sbb
push
inc
mov
xchg
rorl
movb
rsqrtps
jg
jl
add
xchg
jo
iret
push
in
ss
dec
in
lock
mov
mov
ret
rcrb
imul
nop
add
xor
in
rorb
xchg
out
adc
mov
or
stos
jb
mov
adc
in
push
mov
loop
add
test
jnp
rcr
xchg
data16
push
jmp
cmp
fcomps
add
enter
and
mov
ficomps
testb
loop
mov
xor
jne
xrelease
xchg
or
pusha
xor
inc
push
jne
scas
ja
in
das
mov
test
jo
test
or
cs
neg
sbb
and
or
cmp
fnstsw
jbe
or
cmp
ja
push
add
xor
fcomps
ljmp
push
pop
roll
pop
push
push
or
leave
or
pop
dec
sbb
jl,pn
leave
push
sub
push
add
jb
incl
or
push
or
cmpl
sub
mov
mov
ja
lret
jmp
jno
inc
das
or
adc
mov
jne
pcmpeqb
add
arpl
int
inc
les
or
push
insl
cmp
data16
arpl
sbb
or
les
push
fmuls
adc
loopne
movb
aas
and
test
imul
pop
pop
pop
push
dec
lods
and
mov
fsub
adc
cmp
xor
call
enter
sbb
iret
mov
jl
test
jge
sbb
lahf
lock
dec
xlat
jns
xchg
add
in
sar
lock
push
xchg
and
or
rcll
ljmp
pop
les
hlt
sbb
scas
push
xchg
addr16
push
push
sub
js
insb
imul
or
mov
scas
mov
test
xor
push
pop
jl
push
or
mov
jo
hlt
out
jge
jge
hlt
mov
mov
test
testl
cmp
sbb
ljmp
sti
insl
or
in
push
mov
push
mov
cwtl
adc
les
les
xchg
test
adc
mov
movsl
xor
add
ja
push
push
lods
rcll
push
rcrb
push
movsl
ss
outsb
sbb
dec
outsb
incb
jno
add
ret
inc
xchg
pushl
mov
add
rolb
xorl
jl
aas
fadds
jl
add
or
mov
add
or
aas
pop
or
push
jne
cmp
sbb
sub
clc
orl
cmp
jl
fisubl
ss
rcll
jnp
and
pop
das
ds
and
jecxz
push
push
dec
aam
push
addb
aad
mov
clc
or
popa
push
test
or
mov
test
fnstcw
sbb
test
jbe
outsl
mov
je
lret
mov
dec
and
in
xchg
daa
and
xor
xor
enter
jne
mulb
fadds
xor
add
sbb
mov
scas
sbb
push
adc
rorl
inc
inc
jne
js
arpl
mov
cmp
mov
fisubs
loopne
psrlq
clc
xor
cmp
clc
mov
loope
mov
test
pop
std
mov
push
xchg
loop
xchg
andl
push
and
test
xor
out
xor
mov
flds
call
adc
sbb
push
push
daa
or
aam
lods
flds
lea
sbb
inc
adc
or
push
push
mov
nop
pop
jbe
jge
out
pop
push
pop
push
dec
outsb
lods
xor
fistpl
repnz
xor
lock
gs
std
stos
xchg
ljmp
ficoms
and
test
scas
xor
shrb
mov
pop
ds
lea
cvtpi2ps
pop
and
sub
jbe
and
std
jmp
xchg
or
push
cli
mov
insl
test
mov
cmp
jne
and
setp
sub
test
pop
int3
dec
shrl
push
testl
das
sbb
add
inc
ss
adc
movsb
jbe
orl
lods
add
pop
fsubrs
int3
fstps
inc
mov
xchg
inc
lock
or
insl
andl
loope
push
jp
leave
inc
push
sub
jnp
sbb
mov
test
sahf
popf
in
jbe
int
sbb
popa
test
mov
in
adc
jne
ds
sub
sub
adc
jb
fsubs
mov
dec
je
sub
enter
push
xchg
jne
push
jne,pn
or
aaa
or
jns
popf
jle,pn
in
ret
divb
jne
adc
cli
jmp
sbb
push
cmp
pop
rcrl
or
and
push
inc
push
sbb
push
loope
daa
adc
pop
or
inc
sbbl
xchg
push
es
dec
adc
or
and
stos
jmp
sbb
push
cmp
xchg
mov
jae
dec
test
decb
xchg
mov
fcompl
and
pusha
insb
or
dec
divb
adc
je
push
fcomp
int3
xchg
rorl
adc
push
adc
js
daa
inc
test
sbb
popf
leave
int3
movsb
rorb
mov
lds
imul
ret
push
nop
cmp
push
insb
push
and
lods
jne
adc
mov
pusha
adc
push
mov
adc
adc
or
jne
sbb
out
aaa
mov
cmp
nop
add
lret
adc
insl
andb
xor
add
mov
push
dec
ss
les
push
ret
add
or
pop
lods
pop
fistl
push
mov
jge
data16
shlb
fnstsw
testl
add
jbe
or
jmp
mov
xchg
push
mov
and
stos
add
imul
mov
ljmp
or
adc
push
lods
cltd
adc
int3
repnz
rcll
nop
adc
fdivr
das
jl
stos
aam
sub
aas
fmull
aam
pop
fcoms
comiss
jo
aas
sub
adc
sub
adc
adc
fsubrs
or
inc
or
or
lea
hlt
jp
push
sub
cltd
sub
sar
add
xchg
pop
jns
leave
pop
sti
aaa
mov
xor
sarb
push
sbb
or
cs
sub
and
or
cld
dec
rclb
xor
cmp
rorl
push
jecxz
pop
mov
push
cmp
cltd
wbinvd
rcr
mov
inc
int
imul
xor
pop
adc
mov
aas
cmp
je
and
cmp
popa
push
aam
cwtl
js
xchg
insl
push
add
jnp
call
jge
rep
mov
and
push
rep
dec
int3
ret
js
and
jl
orl
faddp
enter
test
subl
dec
jl
cmp
sbb
xchg
movsl
cmpb
psadbw
pop
je
or
je
push
movb
push
movb
sub
test
inc
xchg
out
push
sbbl
lret
sarb
lret
pop
out
mov
ja
push
jns
cmpb
neg
outsl
adc
jmp
cmp
cmp
shll
add
or
jmp
xor
pop
cmp
outsb
lret
mov
decl
dec
mov
mov
xchg
rclb
ljmp
or
rcrl
pop
dec
lea
shl
mov
sbb
dec
jne
mov
jnp
int3
or
xlat
cmp
jae
add
mov
shll
fmuls
add
jge
mov
jnp
lods
rcr
add
fiaddl
add
push
push
push
inc
or
loope
aam
andb
sub
mov
jg
xchg
add
xor
lea
cmp
push
dec
das
in
into
mov
mov
xor
push
pop
orb
call
inc
out
cmpl
sbb
mov
mov
jo
aaa
and
pop
imul
test
divl
andb
dec
mov
cmp
push
or
pop
ret
add
pop
in
cmp
inc
es
inc
cmp
ja
lds
xchg
add
mov
jmp
pushl
xor
sti
pop
repz
or
cmpl
xor
mov
mov
or
add
fidivrl
rorb
mov
gs
xor
or
push
pop
jmp
mov
mov
dec
mov
test
xlat
mov
dec
call
push
jl
jmp
mov
insb
sar
call
fidivrl
fsts
hlt
add
and
add
pop
xchg
adcl
arpl
lock
inc
inc
je
dec
daa
fwait
or
pop
jo
sti
sbb
or
sti
push
mov
jae
jbe
mov
mov
sub
imul
pop
bound
ret
or
ret
cwtl
insl
out
mov
mov
pop
or
insl
push
test
mov
jecxz
mov
inc
or
mov
push
or
mov
dec
xchg
mov
cmp
movsb
mov
ret
and
sbb
sti
inc
aad
push
pop
in
dec
mov
fdivrl
les
aaa
mov
out
pop
mov
lods
mov
mov
leave
scas
fnsave
test
add
dec
or
push
std
fidivl
pop
inc
jne
adc
int
mov
pushf
xchg
and
mull
and
inc
or
test
lds
jb
addb
xchg
sub
cmp
add
adc
inc
clc
adc
jno
mov
mov
out
push
andb
inc
push
cmpsl
bound
int3
and
push
mov
mov
mov
push
sti
out
and
jno
stos
jmp
push
scas
cmp
fs
jae
mov
xor
adc
icebp
sub
add
sub
popa
bound
or
test
pop
test
pop
lahf
aam
cmp
pop
outsb
das
dec
adc
or
or
cmp
aaa
jle
or
or
inc
mov
test
loopne
sbb
cmpb
add
inc
inc
cmp
out
jmp
mov
lret
fidivs
je
or
or
je
cmp
add
xor
mov
mov
aam
test
dec
pop
insl
pushf
jno
call
adc
mov
xor
mov
inc
ljmp
fdivs
cmp
jmp
inc
aad
xor
xchg
xor
xor
mov
cli
mov
imull
sbb
cmpsb
popa
pop
pop
je
jmp
lcall
pop
and
inc
add
inc
ja
add
xlat
into
mov
aas
jmp
xchg
mov
movb
and
inc
jmp
sbb
mov
adc
fiaddl
lea
mov
test
cltd
mov
rolb
cmp
lds
dec
sbb
popf
mov
ds
mov
push
add
mov
test
stos
cmpb
insb
or
add
pop
insb
mov
sarb
aas
inc
mov
dec
mul
neg
add
pop
inc
add
pop
sub
sbb
add
push
test
rol
mov
fwait
pop
outsb
or
mov
cmpl
push
mov
enter
mov
in
cmp
lea
sti
sbb
or
and
mov
dec
xchg
mov
jp
add
je
add
mov
and
adc
or
ja
imul
cmp
test
or
decb
adc
jmp
or
jmp
push
mov
jl
sub
xchg
scas
cmp
xchg
add
cvtpi2ps
push
lods
push
nop
arpl
daa
dec
daa
dec
cmp
fwait
lods
and
add
mov
xor
stos
push
cmp
sbb
adc
mov
and
cmp
sbb
testl
push
mov
push
pop
and
adc
je
or
movhps
mov
pop
nop
push
pop
loope
into
dec
out
fs
jp
and
add
lock
movsb
push
lret
sti
es
into
xchg
ljmp
mov
inc
mull
movsl
fcoms
popa
add
mov
movsb
or
and
add
pop
add
xchg
cwtl
sbb
fisttpl
mov
sub
in
xchg
mov
shlb
push
cltd
in
roll
or
pop
or
add
mov
or
pop
in
lds
pusha
mov
lret
fwait
out
xlat
xor
icebp
fcmovnu
xor
push
adc
in
adc
dec
xorb
rolb
adc
mov
fsubrs
pop
ret
add
adc
dec
in
pop
fsubrs
adc
xchg
and
movsb
adc
sbb
subb
ds
cld
pop
or
in
loopne
rcll
out
sbb
jmp
or
lock
mov
and
imull
dec
aam
add
jle
push
lods
xor
fcompl
cmc
sub
add
jne
xchg
xor
popf
incl
sbb
ja
fdivs
jb
mov
movsl
xchg
xchg
ds
iret
xchg
jle
addr16
jmp
andl
inc
pop
push
in
pop
push
sbb
add
aaa
jp
jecxz
neg
sbb
imul
and
add
add
outsl
fildl
cmp
ficoms
and
xchg
pop
adc
or
or
cs
cwtl
mov
add
add
and
add
das
inc
mov
lea
loopne
or
lods
or
pop
roll
lret
addl
push
add
in
cmp
out
out
xchg
mov
call
inc
push
and
push
cmp
mov
or
aam
ret
xchg
xchg
push
adc
mov
or
les
adc
test
icebp
loop
push
scas
or
pop
xchg
sub
fnsave
scas
movsb
and
push
mov
push
or
pop
xlat
push
lods
loopne
jl
pop
sbbb
sbb
shll
pop
mov
int
mov
cmp
hlt
in
xchg
inc
adc
cltd
into
xor
in
sbb
push
push
sub
jmp
dec
pop
xlat
adc
push
mov
mov
jo
and
movsb
rolb
fnsave
xor
push
add
jb
pop
jge
pop
pop
pop
jbe
cmp
mov
mov
fldpi
inc
shlb
leave
pop
fs
mov
addr16
inc
je
cmp
iret
jmp
mov
sbb
lret
xchg
push
lret
inc
add
pop
add
adc
or
jge
sub
jb
pop
or
adc
pop
shlb
addr16
mov
jnp
outsl
std
dec
or
jmp
lds
adc
iret
jo
in
mov
or
or
mov
data16
enter
cmpl
std
dec
sbb
rcrl
jbe
push
outsb
add
jge
or
stc
inc
pop
fs
mov
fldenv
push
ss
into
pop
std
jmp
test
pop
dec
push
inc
mov
inc
and
gs
lret
inc
or
das
adc
imul
pop
sarl
push
or
add
add
loope
sbb
sbb
fnstsw
dec
jmp
or
cmpsb
ja
and
push
stos
insl
xchg
xlat
fwait
or
push
lret
push
and
xor
int
mov
push
adc
sub
jb
mov
ret
sbb
jo
andb
or
test
daa
mov
push
test
add
xor
test
in
push
mov
or
lds
pop
add
mov
aaa
shl
or
jmp
and
incb
insb
mov
adc
mov
mov
pop
jle
push
mov
or
sub
lret
pop
imul
pop
addr16
lea
insl
mov
mov
or
sbb
jl
sub
or
pusha
add
popf
icebp
ret
push
jg
iret
cmpsb
inc
testb
jne
add
mov
outsl
roll
mov
xchg
mov
mov
les
or
cwtl
sub
push
xor
lea
aam
jmp
lock
sub
jo
inc
bound
adc
and
push
pop
nop
mov
fdiv
stos
xchg
mov
insb
das
push
xor
add
jb
in
shll
xor
rcrb
in
sbb
les
data16
pop
filds
or
inc
push
push
ja
sbb
adc
xor
or
jp
push
and
mov
mov
je
das
arpl
clc
mov
lret
pop
mov
push
push
test
lods
lock
nop
aaa
and
sbb
sti
xor
jmp
mov
mov
mov
aam
add
cwtl
les
push
adc
or
ret
xchg
or
test
ret
or
pop
lock
mov
xchg
fs
fistps
or
inc
inc
push
das
sbb
int
popa
popf
jmp
outsb
pushf
sbb
sub
jne
orb
dec
push
or
sub
rolb
sub
aas
mov
iret
lcall
aam
movl
out
sbb
repnz
lret
lods
jmp
sub
mov
mov
dec
dec
ljmp
cmp
adc
mov
mov
xchg
lahf
mov
mov
mov
cmpb
fcomps
je
inc
sbb
push
lock
add
pop
nop
xlat
adc
cmp
add
dec
add
pushf
and
fisttpl
sbb
mov
adc
and
mov
inc
fwait
aas
call
cmc
pop
inc
sbb
pop
pop
push
mov
xor
cmp
bound
adc
cmp
imul
push
push
add
test
icebp
jae
jae
sbb
push
xchg
mov
popf
jb
pop
test
out
mov
faddl
jne
fdivs
jae
inc
dec
jbe
mull
adc
xlat
xchg
in
hlt
xor
push
daa
adc
sub
imul
sbb
pop
cwtl
shl
inc
xor
add
leave
or
dec
add
add
testb
jg
sbb
rorb
pop
jmp
xchg
push
roll
lret
lcall
or
and
and
add
pop
xchg
outsb
cmp
jbe
lea
push
push
xchg
mov
jmp
xchg
arpl
sbb
sbb
loop
lea
fidivrl
pop
inc
pushf
sub
fwait
sub
or
sub
add
imul
add
pop
push
dec
mov
mov
aam
lea
cmp
add
push
sub
and
push
hlt
sub
dec
les
pop
sbb
movsb
lcall
rcr
dec
push
nop
fs
mov
xchg
mov
pusha
mov
int3
addr16
popa
and
adc
mov
xchg
aad
clc
sbb
push
push
sarb
cmpsb
lea
dec
mov
push
mov
xor
mov
fwait
mov
inc
pop
cmp
mov
fcmove
sub
and
adc
jb
imul
mov
insb
xchg
jae
mov
sbb
jb
mov
insb
cmpsb
adc
xor
cmp
jbe
add
notl
lds
dec
pop
cmp
inc
test
add
add
jo
lea
add
add
incl
add
xor
jbe
mov
mov
lea
adc
out
enter
sub
xor
sbbb
mov
jb
insb
fildll
rcrb
xchg
sbb
rcll
or
cmp
ss
cwtl
or
sbb
into
or
cmp
bound
adc
cmpl
dec
xchg
jbe
add
push
mov
cltd
fstl
outsb
test
xchg
shll
or
cmp
push
imul
add
lea
jmp
xor
xor
test
push
test
pop
sbb
and
cwtl
add
pop
inc
mov
dec
jge
ret
ja
xchg
cmp
aad
jbe
lret
adc
dec
mov
lds
in
inc
add
adc
aam
sahf
loopne
add
xor
inc
mov
push
icebp
notb
push
fcmovnu
pop
les
repnz
mov
add
out
xor
mov
mov
aaa
mov
inc
lds
add
xlat
mov
lret
inc
push
cltd
dec
mov
test
jge
push
mov
nop
fldcw
jl
fs
and
dec
sbb
jbe
push
cmp
stos
shl
insb
cmp
xor
arpl
rorl
pop
and
push
xchg
sbb
add
inc
push
or
sbb
or
aam
popf
jns
divb
mov
clc
std
mov
repz
or
stos
add
push
and
pop
mov
sub
add
sub
sub
fwait
mov
xor
xlat
stos
sbb
xor
sbb
adc
or
cmpl
mov
push
call
add
imul
xlat
cmp
mov
add
mov
jge
jmp
add
nop
inc
sahf
add
push
push
mov
sbb
sti
or
cmc
mov
add
pop
xchg
cmp
and
inc
jne
push
jmp
adc
loope
add
push
clc
sbb
jo
cmc
cmp
pop
inc
test
into
push
dec
jbe
test
inc
dec
call
lods
mov
jle
adc
testl
mov
insb
mov
sbb
rolb
ret
adc
mov
movsl
inc
cld
sbb
sbb
jne
out
xor
popf
xchg
sub
mov
fs
pop
jo
jo
clc
push
or
add
mov
sbb
sub
adc
cltd
xor
int3
push
mov
mov
add
daa
loopne
sub
xchg
jecxz
clc
jnp
xor
push
or
jl
xchg
inc
std
sub
push
sbb
inc
lock
xchg
cli
cmp
setne
daa
push
mov
xchg
cwtl
rcll
push
xchg
ret
sbb
mov
and
inc
hlt
je
cmpl
movl
push
adc
push
or
fmuls
pop
rorl
adc
int3
or
scas
push
mov
ret
and
add
mov
jmp
jp
jae
dec
mov
or
add
xchg
add
fwait
adc
cmp
cmp
pop
and
dec
imul
mov
outsl
or
je
or
sub
push
sarb
stos
sub
adc
ficompl
stc
mov
mov
mov
push
sbb
ljmp
fcomps
sbb
xor
pop
in
and
or
dec
data16
frstor
or
movaps
add
push
jle
mov
cmp
inc
fld
push
pusha
dec
add
orb
cmpsl
clc
mov
xor
mov
filds
push
scas
popf
lods
jbe
adc
hlt
adc
push
test
loope
cmp
push
je
inc
mov
call
clc
cmpsl
rcrl
rcll
pop
adc
mov
inc
xor
add
fsubrl
sbb
fcomp
in
mov
push
add
scas
or
pop
push
dec
lock
icebp
sbb
je
push
pop
jb
jne
mov
addr16
adc
adc
sub
andl
inc
sbb
mov
ds
xchg
dec
clc
mov
nop
or
cmp
or
lret
or
js
add
or
mov
and
mov
inc
cmpb
and
pop
aam
adc
dec
lea
push
rclb
mov
and
push
jg
or
adc
or
and
or
or
jle
xor
push
mov
rolb
lahf
jl
push
mov
sub
mov
les
notl
in
or
and
inc
mov
inc
add
lods
push
cwtl
dec
add
pop
adc
int
sub
mov
add
jmp
stos
rep
push
mov
in
lds
adc
sub
mov
dec
repnz
sbbb
mov
rol
aam
mov
pop
mov
adc
adc
cmp
xchg
inc
sbb
je
adc
daa
test
cmp
xor
jne
test
add
pop
push
pop
adc
jne
loop
pop
add
push
lods
pop
pushf
jne
dec
insl
cmp
and
lcall
rorl
dec
add
sarb
dec
inc
ss
mov
test
iret
jo
add
movsb
ja
sbb
mov
mov
mov
push
xor
shlb
cwtl
cmp
addr16
cmp
pop
int
insl
adc
addb
adc
or
les
sbb
or
push
mov
ljmp
je
ret
lret
sub
xchg
xor
pop
pop
insl
add
mov
inc
das
or
fsubl
push
inc
inc
movl
jbe
pop
add
mov
xchg
dec
mov
add
fwait
mov
dec
mov
int3
insl
dec
adc
addl
xlat
mov
inc
mov
dec
stc
pop
call
mov
inc
adc
sbb
mov
ror
loopne
outsl
repz
xor
adc
test
aam
xchg
sbb
xor
mov
mov
rclb
push
aam
sub
sbb
imul
xor
xchg
pop
ds
xor
push
dec
add
cmp
repnz
pop
pusha
inc
test
lret
pop
dec
adc
cmpsb
adc
cmp
xchg
stos
hlt
sub
inc
je
mov
js
daa
mov
ret
jmp
add
test
mov
or
xor
cwtl
lds
je
cltd
negl
loopne
mov
movsl
and
sbb
mov
xor
xchg
xor
das
jb
stc
insb
or
imul
xchg
xor
push
cmp
cmp
push
inc
cmp
sbb
push
adc
adc
test
add
out
sub
cmp
test
mov
lods
andl
cmp
push
addr16
dec
adc
mov
jg
and
push
dec
js
jecxz
dec
inc
int3
imul
fnstenv
or
mov
push
xor
cmp
pop
cmp
es
push
mov
pushf
cmp
out
adc
inc
pop
fwait
jo
lods
add
cmp
cmp
call
dec
xchg
cmp
nop
pop
sbb
push
add
sbb
xor
jne
jmp
or
popf
bound
cmpsl
cmp
and
inc
out
push
cmp
fiaddl
pop
ds
mov
fcompl
push
rolb
push
rolb
mov
dec
sub
push
push
ret
faddl
adc
orl
mov
enter
loopne
cmpb
cmp
mov
shrl
and
sbb
test
pop
dec
mov
lret
and
mov
add
sarl
jecxz
les
jne
or
xor
or
xchg
xor
ja
pop
push
or
xor
fcoms
mov
rcl
ds
adcl
jne
push
adc
int3
pop
or
fsts
adc
jne
jbe
mov
pop
call
popf
or
cwtl
enter
add
lods
hlt
pop
dec
in
mov
test
in
pmaxub
mov
popa
pop
cmp
inc
fistpl
jne
xchg
cmp
loopne
dec
mov
rcll
ss
mov
inc
add
sub
xor
inc
push
push
add
test
dec
and
adc
movsl
test
add
xchg
testl
dec
fsubrl
adc
xor
add
mov
sahf
insl
adc
in
pop
icebp
and
int
adc
es
jbe
push
int
push
pop
mov
mov
cs
jne
enter
fs
stos
mov
pop
lock
nop
pop
out
push
jns
repnz
mov
cmp
ss
mov
fsubrl
rclb
fs
jb
and
jl
mov
push
cmp
pop
stos
mov
rorl
add
enter
adc
fwait
inc
sarl
leave
jns
rcll
fsubrs
call
cs
sbb
push
shl
fs
sbb
hlt
cmp
or
adc
and
add
addb
sub
jb
lock
add
or
mov
sbb
push
cmp
sbb
pop
push
ret
lods
inc
ss
push
les
push
sbb
push
jno
ficoml
jmp
inc
mov
xchg
jnp
dec
xchg
jge
push
sahf
push
out
push
inc
and
pop
sub
push
xor
sbbb
pusha
scas
mov
das
inc
dec
sbb
pop
push
cmp
lahf
or
pop
outsb
negl
roll
dec
and
sarb
jbe
inc
andb
xchg
dec
jb
cmpsb
push
shrl
pop
mov
cwtl
out
push
arpl
stos
aam
dec
dec
mov
sub
push
push
push
or
and
push
adc
pop
jp
clc
pop
shlb
cmpsl
push
sbb
imul
sti
fistl
xorl
push
push
jnp,pt
bound
mov
je
or
pop
lods
loop
xchg
rcrb
imul
in
jae
push
pop
dec
in
adc
divps
ss
shlb
add
stos
aad
pop
popa
adc
inc
int
pop
add
pmaddwd
mov
sti
shrl
fisttps
into
adc
ja
inc
int3
jge
ss
pop
sbb
addr16
mov
movsl
shl
xchg
push
out
mov
push
push
lods
push
push
and
xchg
ret
inc
sub
pop
jnp
stos
xor
sbb
or
adc
call
or
les
pop
adc
adc
les
xor
cmp
adc
fs
hlt
push
aas
dec
and
test
insl
je
je
adc
mov
pusha
ss
stos
xchg
imulb
dec
aaa
scas
jns
xchg
movsl
pop
fs
das
cld
enter
icebp
mov
push
mov
ret
push
inc
test
jle
inc
mov
ss
pop
jnp
cmp
mov
test
sub
test
add
test
ds
mov
or
add
push
and
negb
cmp
mov
push
cwtl
adc
mov
dec
leave
add
nop
pop
inc
push
pop
jmp
pop
mov
sub
repnz
cmc
cmpb
adc
adc
jle
inc
or
jg
jmp
dec
rcrl
jg
and
mov
pop
pop
rolb
cmpl
fucomip
inc
in
and
pop
push
cmp
adc
cmp
jbe
add
ret
aaa
data16
in
addr16
test
inc
dec
iret
out
outsb
iret
dec
push
push
sahf
jo
enter
cld
xor
cmp
push
fs
lock
inc
hlt
xor
push
fmull
movb
adc
mov
push
not
mov
aam
ja
or
cmp
push
lea
xor
test
fdivr
outsb
aam
xchg
sar
inc
pushf
iret
popf
int3
mov
or
xchg
lock
push
in
rolb
movsl
mov
lret
mov
xchg
sub
fildl
pop
lea
in
lea
jge
inc
cld
or
push
aam
imul
inc
sar
xor
or
shlb
adc
lea
inc
sbb
into
idivb
inc
and
jl
pop
popf
pusha
dec
js
add
push
je
test
popa
movsb
jnp
cmp
jne
adc
jle
cmp
pop
int
pop
pop
rorb
adc
or
subl
cmp
push
pop
fcomps
mov
testl
jl
xor
ret
push
push
int
aas
pop
fldl
ja,pn
push
jne
shrl
and
push
adc
pop
jbe
sbb
mov
lods
ret
outsl
idivb
dec
ss
or
pop
cmpsb
jmp
scas
outsb
insl
inc
hlt
cmp
adc
mov
cli
add
pop
push
pop
cmp
sub
add
aam
loop,pn
je
push
sub
mov
pop
sub
dec
aaa
adc
or
call
jno
mov
aaa
sbb
and
push
mulb
mov
mov
pushl
or
leave
jmp
or
jl
add
cmc
mov
sub
cmp
jl
add
jg
shl
push
add
push
sub
push
xor
xor
leave
cmp
fistpll
sbb
push
or
push
fbstp
repnz
push
mov
jo
add
adc
fs
flds
or
jle
pop
sub
sar
hlt
push
push
fimull
pop
sub
mov
xchg
fwait
nop
call
leave
jge
fsubs
les
fs
mov
mov
bound
fdivs
and
mov
mov
lret
jmp
xchg
push
adc
xor
ja
cmpsb
pop
inc
jge
sub
push
cmp
sti
and
mov
and
mov
or
mov
mov
sbb
xchg
leave
and
inc
sub
push
lock
adc
add
popf
in
jae
and
or
in
inc
or
xchg
aas
pop
arpl
aaa
sbb
pop
jne
pop
in
rclb
jmp
lods
je
inc
lods
scas
pop
push
or
or
lock
mov
or
or
sbb
push
sub
push
sbb
push
pusha
or
stos
inc
cmp
loope
sbb
adc
loop
imul
adc
sub
jne
push
and
xor
add
hlt
lock
shll
and
push
jne
sbb
dec
push
mov
insl
add
pop
leave
js
mov
add
roll
mov
sub
insb
fisubl
ja
orl
push
add
sub
mov
adc
mov
lret
sbb
sbb
sbb
sti
mov
and
sub
mov
mov
fld
subb
cli
xadd
inc
aad
movsb
pop
dec
and
loope
jle
push
cmp
push
adc
and
mov
clc
and
pop
cmpl
in
push
or
add
adc
add
ss
jbe
in
mov
rorl
add
clc
pop
repz
cmpsb
push
cld
pop
decb
cmp
sti
add
add
pop
mov
loope
aad
addr16
arpl
movsb
mov
xchg
out
fcompl
mov
outsb
inc
dec
cmp
dec
jo
popa
push
or
push
sub
mov
leave
and
out
and
pop
je
cmp
je
mov
mov
inc
add
push
pop
flds
daa
inc
fsts
jo
push
movzwl
push
adc
sub
test
cli
rorl
ljmp
test
test
jbe
push
test
dec
xor
xchg
in
mov
bound
sahf
jbe
out
or
pop
xchg
push
pop
mov
dec
cmp
add
fnstenv
cmp
inc
mov
or
mov
cs
das
lahf
std
or
js
push
inc
dec
ficoml
jl
mov
add
cmp
ja
or
mov
clc
rcl
rolb
dec
sbb
pop
add
lahf
xchg
sbb
ret
pop
mov
or
das
mov
sti
or
or
inc
mov
mov
pushf
push
sbb
pop
sbb
push
or
push
aaa
push
or
or
or
and
and
or
mov
or
mov
cmp
push
std
push
push
adc
adc
cli
movsl
adc
jo
cmp
ljmp
mov
insl
add
adc
shlb
sub
pop
aad
les
add
leave
jne
lahf
ret
pop
faddl
dec
or
js
dec
or
fdivrs
sbb
js
lods
std
xchg
or
outsb
inc
js
lea
adc
xchg
pop
dec
jne
mov
mov
mov
fnsave
mov
cs
push
je
mov
xor
fiadds
jecxz
shll
dec
cwtl
cmp
pop
mov
sbb
testb
je
dec
je
add
adc
or
pop
stos
push
and
jnp
mov
jmp
or
mov
add
adc
rcrb
add
inc
mov
pop
filds
xchg
sub
mov
ror
rcll
xchg
cltd
movl
mov
fwait
pop
xchg
imul
jmp
push
add
shr
inc
cmp
pop
shl
lea
push
or
stos
fidivs
aad
xchg
insl
push
xlat
pop
push
push
add
cld
clc
cmp
jg
pop
push
cmp
je
inc
jmp
and
ds
pop
cmp
fcmovnbe
push
push
cmp
pop
sahf
add
push
or
pop
mov
and
jnp
fsubs
jbe
sbb
lock
fisubs
inc
call
or
sub
lea
sbb
adc
fmull
jbe
ret
add
lods
dec
push
int3
jmp
sub
or
sub
in
lds
sbb
aad
test
sbb
cltd
xchg
loope
icebp
xchg
ret
lea
mov
arpl
xchg
nop
mov
xor
dec
push
cltd
sub
push
mov
insb
xchg
fld1
fdivrl
insl
add
rorb
inc
imull
bound
pop
or
or
jo
or
ja
and
ret
pop
cmp
jg
fiaddl
fwait
stos
stos
mov
sbb
scas
les
sub
and
jne
sbb
divb
dec
std
das
sub
sub
in
test
and
or
and
jg
enter
pop
les
enter
inc
pop
and
add
dec
je
adc
inc
ss
mov
push
xchg
inc
pop
mov
add
inc
test
mov
push
loop
ret
cmp
push
into
pop
push
xchg
sub
mov
adc
es
pop
outsb
or
inc
push
lret
mov
icebp
cltd
push
push
arpl
cmc
sbb
outsl
inc
lcall
and
xor
clc
and
lea
jb
mov
loopne
lret
jbe
jg
adc
mov
add
add
sub
and
ss
cmpl
sbb
test
out
sbb
inc
sbb
pop
fs
sub
gs
lock
sbb
push
inc
cmp
mov
mov
shr
mov
dec
test
or
push
lea
pop
lea
or
mov
mov
xchg
xchg
movb
add
nop
insb
test
or
mov
push
or
je
mov
das
je
dec
loop
push
sub
push
pop
sbb
xor
sahf
and
adc
orb
flds
stos
fwait
push
or
jnp
scas
or
or
dec
ja
jmp
cmp
jne
daa
or
sbb
adc
dec
add
cmp
pop
or
add
push
sub
mov
out
push
pop
jno
adc
idivb
adc
pop
sub
sbb
mov
add
sub
bswap
outsl
xor
ja
mov
mov
out
mov
xchg
push
cld
loope
nop
sbb
scas
sub
je
adc
mov
jne
add
sbb
jecxz
insb
push
incl
aam
mov
mov
cmp
subb
adc
sub
data16
add
sahf
nop
mov
jmp
inc
inc
cs
movsb
addb
jp,pn
push
imull
fimuls
inc
mov
sbb
xor
cmpl
and
mov
inc
mov
or
inc
dec
addr16
and
inc
sbb
mov
mov
enter
dec
dec
jo
aad
inc
or
ljmp
push
jp
adc
mov
or
jae
add
mov
adc
cmovge
xor
push
rolb
and
add
arpl
push
sar
push
cmpl
je
jle
outsl
jge
ret
adc
jns
cmp
xchg
mov
xor
out
sbb
fdivrp
sahf
and
bound
adc
or
pop
cmc
xor
nop
push
roll
add
xor
outsl
movsb
mov
inc
addr16
jo
adc
test
je
pop
dec
cmpl
fnstenv
sbb
aaa
cmp
in
loopne
mov
lods
cmp
pop
cltd
fcomip
pop
loopne
inc
enter
mov
bswap
pop
dec
cmp
into
and
std
lods
mov
enter
push
cmp
addr16
sub
or
shrl
pop
in
xor
lods
movsb
mov
adc
fnstsw
xorl
cmp
mov
mov
mov
cmp
xor
pop
push
loope
pop
dec
add
fdivs
je
pop
js
sbb
ret
sub
lea
int3
adc
or
inc
mov
lods
push
jnp
clc
add
sub
lods
push
lea
or
or
or
push
jle,pt
mov
js
orl
out
shlb
push
xorl
mov
mov
jle
pop
stos
push
popa
hlt
adc
cmpsb
sbb
and
push
adc
mov
mov
loope
cltd
cmp
loope
daa
dec
into
push
ljmp
adc
lods
add
ret
sub
pop
insb
lods
xchg
lea
sbb
or
add
adc
add
push
push
mov
sbb
inc
addr16
or
jo
pushf
push
sub
and
pushf
push
xor
jle
cmp
pop
inc
and
xor
test
sbb
outsb
aas
inc
mov
je
mov
or
dec
jo
in
je
imul
jne
sbbb
and
loope
and
and
mov
adc
lock
jne
stos
push
sbb
dec
mov
mov
sahf
sbb
cmp
push
push
dec
jl
js
inc
push
inc
cld
pushl
daa
add
dec
ret
dec
fsts
insb
cmpl
ss
sahf
push
cmp
dec
pop
add
or
or
and
in
insb
dec
enter
push
pop
ja
fiaddl
mov
mov
adc
hlt
sub
mov
inc
adc
test
inc
ror
xchg
xor
mov
cltd
decb
gs
jle
pop
xchg
sub
adc
inc
or
shl
or
xor
dec
les
mov
in
scas
out
dec
je
add
dec
sub
shl
neg
loopne
sbb
mov
or
sub
or
xor
sbb
inc
lea
sbbl
aad
mov
push
loope
or
jl
mulb
xlat
lret
cmp
inc
adc
loopne
mov
imul
xlat
insl
sub
enter
sub
xchg
fnstenv
sub
and
mov
sbb
add
and
mov
push
in
adc
mov
jecxz
push
dec
inc
dec
inc
pushl
aam
insl
sub
outsl
jnp
or
sub
pop
sbb
xor
adc
enter
popa
mov
cmp
pop
outsb
in
aaa
inc
imul
inc
and
add
and
mov
sub
jle
mov
xlat
daa
mov
mov
add
movsb
cmpl
add
jo
outsb
in
jge
gs
lahf
fs
pushl
pop
andl
add
add
add
ret
and
jo
inc
ror
out
ja
ja
jno
push
mov
push
jecxz
cs
mov
adc
aad
sub
push
add
mov
mov
or
push
or
xchg
dec
add
je
or
sub
dec
jge
popa
ret
jae
test
sbb
xchg
sub
sub
aaa
and
enter
in
call
sub
and
and
and
enter
or
dec
incl
push
rcrl
push
jb
ret
sub
fcomps
pop
inc
add
mov
mov
enter
adc
shl
add
inc
cmp
mov
icebp
fldl
jl
fiadds
xchg
lods
pop
push
pop
lcall
cmpsb
and
imul
js
push
sub
aam
fdivp
push
or
mov
in
add
ljmp
push
jns
adc
or
rep
andl
xor
sub
jb
icebp
sub
sub
push
pop
adc
fdivr
adc
enter
sahf
add
ret
mov
and
adc
rolb
or
add
stc
mov
test
xchg
inc
enter
dec
addb
add
scas
std
sbbb
add
test
pop
iret
add
lea
lea
movsl
movsw
push
out
push
in
lock
mov
subl
lea
mov
lods
inc
decl
cmpb
jne
mov
or
sti
jae
mov
mov
and
sub
jg
call
fdiv
fstpt
fbstp
add
mov
js
cwtl
stos
in
std
cmp
mov
out
ret
or
test
mov
push
xchg
lret
mov
je
sahf
mov
xchg
je
cmpl
jl,pt
sbbl
cmp
cmp
or
aas
jne
or
pop
cs
or
aad
or
out
dec
movsl
lcall
dec
fadds
jg
mov
rclb
adc
mov
cmp
jnp
add
push
and
jge
je
adc
aaa
arpl
or
insl
xchg
in
jnp
add
add
add
rcl
push
clc
dec
popf
adc
mov
test
insb
xchg
outsb
fdivr
add
inc
push
sbb
cmp
je
xchg
mov
enter
lock
jno
mov
lea
fwait
arpl
mov
movsb
clc
inc
mov
movl
mov
mov
cmp
add
pop
add
pushf
jle
mov
popa
adcl
lret
btc
stc
add
jl
jmp
add
and
and
lea
mov
sub
inc
sub
das
cld
cmp
fnstcw
mov
dec
test
out
and
or
or
and
es
je
jne
inc
mov
fdiv
inc
lods
mov
cmp
jbe
push
push
mov
xchg
adc
mov
je
mov
out
jo
cmp
les
xor
mov
add
mov
xorl
rorb
add
mov
inc
adc
fsubl
mov
xor
loop
jle
sbb
icebp
mov
jno
incl
mov
jg
loop
jle
mov
add
mov
add
neg
mov
mov
or
dec
mov
dec
jg
inc
daa
inc
int3
lds
xor
out
dec
ljmp
mov
pop
push
sub
push
shr
test
mov
sub
cmp
clc
pop
push
mov
mov
rol
dec
mov
cmp
lret
aas
scas
cmp
jge
mov
mov
mov
inc
inc
and
mov
bound
inc
cmpb
or
outsl
mov
pop
mov
sub
add
mov
push
adc
dec
or
cmpsb
addl
mov
mov
orb
mov
jg
mov
sbb
in
inc
adc
add
or
sbb
loope
add
jno
push
add
add
sti
jnp
roll
mov
inc
add
xor
shlb
mov
jnp
mov
or
pop
jg
ss
cmp
push
mov
jne
xchg
lret
jge
negb
ljmp
movswl
jmp
mov
ljmp
jge
mov
orb
or
jl
add
mov
lock
pop
pushf
lcall
adc
test
or
cmp
pop
jp
sahf
inc
shr
jl
cmpl
jne
jbe
cmp
mov
sub
inc
cmp
jg
lods
hlt
sub
add
sbb
mov
mov
or
divb
cmp
loopne
inc
clc
mov
add
sub
pop
push
pop
sub
jns
divl
leave
xor
or
or
add
xorl
cmp
test
add
out
outsb
mov
mov
movsl
sub
xchg
movsl
stc
incl
jne
test
je
mul
daa
das
in
mov
lea
adc
mov
or
cmp
decl
enter
jl
inc
pop
add
mov
int
push
or
pop
dec
xor
lahf
inc
sar
cmp
mov
mov
jle
mov
mov
sahf
sub
enter
subl
mov
xlat
inc
outsb
cmpb
dec
test
mov
add
xchg
push
mov
inc
inc
sub
frstor
push
pusha
xchg
add
andl
inc
adc
or
imul
dec
adcb
or
mov
les
pop
or
inc
inc
sub
jl
and
mov
cmpsl
outsl
scas
xor
or
jge
pop
pop
mov
xor
inc
dec
test
cmp
dec
push
arpl
mov
mov
movsb
and
fsubs
hlt
add
dec
inc
pusha
rcrl
push
xchg
es
ljmp
mov
mov
das
dec
sbb
push
mov
xchg
fxtract
cmp
cltd
xchg
sbb
cmp
cmp
inc
cmp
jge
jnp
movsb
lea
xor
adc
xor
sbb
xor
sbb
aas
adc
sbb
mov
dec
in
in
sbb
cmp
and
pop
mov
aaa
cld
dec
adc
jg
xchg
imul
sbb
leave
or
adc
cld
jecxz
xchg
jbe
inc
inc
and
subl
std
jns
mov
mov
mov
xchg
jl
xlat
xchg
sbb
and
ret
cld
or
mov
cmp
sub
and
dec
in
cld
and
imul
push
and
in
loop
dec
shld
in
call
stc
and
xchg
stc
js
mov
inc
pop
mov
adc
mov
sub
inc
sub
push
arpl
repz
or
add
jno
sbb
or
and
adc
test
xor
aam
inc
leave
mov
cmp
or
pusha
leave
cmc
inc
and
and
lcall
jg
mov
cmp
xchg
adc
xchg
or
mov
ret
mov
inc
lea
and
adc
push
les
push
push
sub
pop
adc
add
jbe
sub
add
push
sub
sub
jg
xor
sbb
or
mov
ret
ret
mov
lcall
sub
imul
hlt
jnp
mov
add
or
jmp
push
add
sbb
or
dec
xchg
inc
jae
jp
dec
pop
or
adc
or
jg
add
stc
or
dec
ljmp
mov
popf
cli
faddl
sbb
in
or
push
sub
add
bound
mov
cld
mov
jp
jns
jecxz
or
push
xchg
cmp
orb
push
push
mov
jge
pop
dec
jle
mov
iret
into
inc
call
sub
push
enter
fadds
test
add
test
dec
pusha
mov
pop
cld
in
add
adcl
pushw
jmp
pusha
add
nop
ror
andb
jp
mov
outsb
cld
xchg
jb
lea
test
test
pushf
and
aad
loopne
out
mov
jle
mov
sub
or
cmpsl
add
mov
imul
xchg
pop
mov
mov
sti
loop
sbb
mov
mov
repz
sbb
or
xor
decb
fwait
inc
push
lods
dec
pop
fisttpl
mov
add
pop
insb
jmp
mov
pop
test
dec
scas
shll
jae
mov
enter
roll
and
mov
dec
dec
dec
lods
xchg
gs
dec
lret
mov
xchg
or
lret
inc
sub
fcmovne
adc
in
sub
push
jg
mov
jge
imul
sub
mov
rcr
jb
es
inc
rclb
jp
jne
add
and
fs
lods
pop
and
xor
lret
les
push
sub
rcll
jns
les
and
and
and
hlt
cmp
inc
mov
imul
orb
fs
adc
ret
sbb
out
mov
lret
xor
or
fidivrl
aas
sbb
mov
fs
jns
add
outsl
fidivl
mov
inc
mov
and
pop
rorb
das
sar
sbb
xchg
cltd
das
enter
fldt
inc
pop
jb
pushf
lcall
mov
dec
mov
or
dec
in
and
pop
adc
xchg
ja
dec
aas
lea
mov
xor
rorb
xchg
dec
stos
cld
clc
jbe
je
jae
xchg
cld
mov
mov
addr16
loopne
pop
add
xor
call
mov
ficoms
mov
data16
xchg
push
test
movsl
push
ss
adc
pop
orb
lahf
adc
mov
or
mov
xor
ror
jl
xor
mov
dec
dec
lock
xor
int3
dec
cwtl
xor
adc
jmp
xchg
xchg
cld
mov
dec
jge
test
dec
hlt
sub
and
sub
sub
aam
and
mov
roll
mov
sbb
lret
orl
je
cmpl
push
pushl
and
jno
cltd
call
sbb
sbb
and
shrb
decl
xor
adc
out
cmpl
mov
xor
out
mov
stc
push
xor
mov
xchg
xchg
mov
pop
je
inc
xor
dec
data16
add
mov
std
mov
inc
mov
pop
jae
xor
push
jae
sub
sbb
cmp
lds
ljmp
out
sbb
or
mov
add
shll
inc
add
ss
popl
cmp
lock
in
into
popf
adc
xor
rclb
jne
xor
add
sarb
mov
outsb
lea
icebp
ffree
and
inc
add
dec
and
dec
adc
add
adc
mov
adc
insb
insl
inc
push
data16
mov
pop
fidivs
adc
dec
arpl
sti
xchg
adc
mov
xor
or
or
popf
sbb
insb
ret
push
cmp
cli
sub
pop
adc
sbb
shrl
fsubrs
pushf
or
and
or
add
and
jl
jne
xchg
mov
insb
aaa
pop
add
sub
push
lds
idiv
jmp
dec
cmp
lods
xlat
mov
ret
mov
inc
fdivrl
pop
xchg
dec
lret
xor
std
mov
cmp
or
push
nop
pop
popf
pop
inc
mov
repnz
jge
mov
inc
xchg
mov
inc
mov
xor
and
test
das
jne
push
sub
mov
mov
add
arpl
cmp
imul
mov
push
sahf
in
xchg
mov
mov
pop
jne
stc
std
push
push
jne
and
jae
push
cmp
add
and
enter
cli
push
push
roll
inc
subl
cmpl
sbb
in
push
mov
sbb
insb
leave
jl
pop
and
xchg
fs
in
ret
inc
scas
or
lea
mov
int3
adc
test
sbb
shr
pop
in
xchg
push
mov
mov
mov
add
out
jl
movsb
inc
add
pop
jbe
cmpl
call
cs
xchg
ljmp
sbb
mov
push
add
mov
outsl
in
pushl
push
mov
sub
cmp
sbb
jb
lea
icebp
ja
inc
lret
loopne
shrl
jl
iret
shl
inc
dec
cmp
xchg
push
jbe
jne
sbb
sbb
in
mov
inc
das
mov
shr
inc
cmp
push
clc
jle
jmp
sub
mov
and
ror
jmp
push
loop
push
pop
mov
mov
test
ret
pusha
stos
shl
xchg
or
lds
add
cmp
les
lds
in
pop
pop
cmp
ja
or
call
outsl
pop
sub
mov
mov
aam
imul
add
adc
data16
push
jo
in
sub
mov
xlat
lods
inc
jecxz
insb
dec
test
push
or
cmp
sub
aad
sbb
loopne
enter
pop
adc
incl
or
add
add
add
xchg
out
dec
std
inc
inc
shl
and
jp
scas
push
in
jb
int3
addr16
loope
mov
mov
pop
xor
lods
mov
mov
pop
sbb
sbb
push
jbe
adc
lods
cld
lret
ja
add
mov
adc
jne
fistl
push
ficompl
mov
in
push
icebp
mov
mov
add
fimull
pop
mov
mov
and
and
inc
cli
inc
mov
add
pop
push
sub
insb
and
ficompl
dec
and
mov
ljmp
or
pop
sbb
cmp
bound
sbbl
aam
mov
add
mov
pop
or
mov
adc
and
test
xor
jae
mov
ret
xor
sub
jl
add
lock
mov
add
inc
test
lods
mov
sub
mov
jb
and
jmp
or
aaa
or
sub
mov
adc
mov
add
cld
fwait
push
enter
inc
dec
push
add
pop
mov
adc
gs
and
jae
popa
adc
out
or
outsb
push
arpl
and
xor
std
sub
out
dec
inc
dec
dec
cs
add
or
je
jo
imul
gs
fbstp
push
xchg
xor
inc
jb
mov
add
das
in
add
stos
inc
sbb
inc
testb
imul
je
fistl
or
pop
addl
in
sub
mov
dec
fnsave
jns
int
pusha
fsubs
pop
push
lahf
fnstsw
or
jae
popa
mov
inc
out
outsb
popa
stos
lret
sub
or
gs
out
pusha
push
popa
arpl
jae
pop
inc
jbe
sub
pop
arpl
test
fidivl
adc
cmp
and
fwait
cs
dec
and
mov
jbe
push
and
jle
insl
inc
fs
inc
arpl
add
add
aaa
mov
inc
mov
mov
add
pop
add
inc
add
push
add
out
mov
or
inc
adc
dec
add
inc
add
mov
pop
pop
push
adc
push
add
imul
pop
adc
add
dec
add
sti
pop
mov
inc
pop
push
add
sub
leave
fstl
push
add
push
dec
adc
push
sbb
jns
jmp
xlat
dec
push
pop
and
dec
xchg
and
jnp
or
push
add
out
xlat
lea
add
pop
xor
jbe
rcpps
fildll
add
orb
cli
add
push
and
arpl
add
jne
dec
fisttpll
or
and
push
add
and
push
pop
xchg
sub
mov
addb
sub
fsub
mov
add
popa
add
xlat
dec
fsubrs
xor
jbe
fcmovnu
xchg
sti
sub
adc
jo
adc
testl
jmp
push
push
fsts
daa
outsl
sbb
das
sub
adc
popa
popa
fcoms
cltd
cs
scas
fwait
cmp
and
xchg
xor
xlat
sbbl
inc
dec
jl
jnp
lds
stos
sub
popf
mov
insl
or
ret
pop
jmp
bound
das
mov
add
pop
arpl
jno
das
cmp
gs
daa
and
shll
imul
lea
daa
gs
cs
or
in
dec
xorl
testl
icebp
popf
sbb
mov
and
xchg
inc
es
sub
ja
mov
mov
call
sub
jns
and
jbe
leave
shll
rcll
mov
pop
push
icebp
xorb
add
and
imul
imul
adc
cmp
inc
das
fsubs
loope
sbb
mov
outsl
add
or
or
jb
sbb
push
data16
push
out
adc
js
out
inc
fadds
sbb
stos
add
xor
xor
xchg
scas
cmp
jb
mov
mov
mov
add
add
push
pop
add
or
lea
outsb
shll
lret
bswap
add
and
scas
inc
dec
cwtl
in
cmpsl
lds
push
add
pop
jecxz
jne
push
fistpll
insb
sub
and
add
add
in
sbb
or
das
pushf
and
xorl
or
jecxz
fistl
xchg
xor
arpl
cmpb
rolb
xchg
adc
es
outsl
inc
pop
pushl
aaa
and
inc
inc
xor
in
jb
dec
or
dec
inc
push
mov
imul
mov
gs
idiv
add
mov
int3
test
jnp
add
add
out
shrl
arpl
scas
jnp
xor
inc
dec
nop
pop
sti
js
xor
dec
add
add
sub
and
cmp
imul
ss
xchg
push
pop
aas
or
test
movl
out
into
add
pop
cmc
jbe
popa
or
aaa
mov
inc
sub
addl
enter
or
fildll
cmp
inc
jecxz
jns
daa
xchg
shlb
or
mov
pop
push
mov
arpl
cli
and
sub
xor
sub
idivb
filds
jne
enter
adc
cmp
push
sbb
cmpb
into
mov
cld
clc
fbstp
pop
addb
jmp
adc
in
ljmp
outsl
mov
xor
push
stos
insl
fwait
stos
push
push
mov
mov
add
inc
cld
pop
test
aas
aas
clc
cmp
mov
gs
out
fnsave
push
outsb
mov
test
fstl
jae
push
push
ret
adc
dec
jg
dec
xor
in
stc
pop
mov
daa
add
add
add
inc
push
pushl
or
xor
push
out
xchg
inc
and
pushl
jnp
fstps
repz
mov
sub
jg
xchg
inc
sub
aas
add
addr16
incl
in
call
xorb
xchg
xlat
push
mov
das
incl
stc
es
ret
data16
in
jbe
xchg
shl
aad
data16
das
data16
jmp
xchg
adc
sub
and
and
jg
cmpsb
into
stc
pushw
adc
inc
adc
shlb
jmp
movsl
cld
mov
ljmp
aaa
in
in
adcl
call
xchg
bound
mov
nop
lods
pop
daa
sbb
inc
push
and
and
cld
daa
lret
mov
insl
loop
mov
mov
js
pop
sti
xchg
pushl
mov
call
cmp
push
std
fistpll
idivl
inc
xchg
lcall
outsl
jb
clc
push
repz
outsl
lcall
jg
out
stc
pop
jmp
dec
mov
pop
xlat
sbb
test
jmp
pop
pop
sub
cld
cmc
repz
mul
ljmp
notb
or
dec
insl
push
ret
jae
pop
add
push
clc
cmc
pop
inc
add
push
inc
inc
std
aam
fsubrp
jmp
fisttpl
pop
or
loop
scas
fbstp
sub
and
popa
movsb
lcall
jg
in
inc
test
dec
pop
push
test
repnz
shrl
mulb
das
mov
sub
lret
lahf
jle
xor
xchg
lahf
jb
nop
push
loop
jne
shll
lcall
fisttpll
roll
sbb
iret
jg
in
shrl
lcall
add
lock
loop
sti
leave
aas
popa
outsl
loopne
idiv
pushl
mov
or
add
or
std
ucomiss
lcall
inc
incl
repz
clc
lahf
das
ljmp
in
sti
jae
jg
in
dec
jo
dec
out
cld
out
divb
cld
sti
data16
out
sbbl
pop
pusha
jo
outsl
cld
ficomps
pop
adc
imul
mov
adc
call
xor
jge
out
pop
mov
fldcw
call
test
leave
or
ljmp
cld
mov
lods
leave
sub
stos
mov
in
pop
fs
ret
dec
ret
push
pop
mov
add
mov
inc
dec
inc
mov
negl
aam
mov
push
mov
jmp
and
cld
out
xchg
cmp
test
xchg
dec
or
hlt
push
out
adc
jecxz
or
hlt
mov
push
shl
lahf
sub
lcall
pop
ljmp
bound
out
dec
int3
cs
xor
adcl
decl
enter
jge
xor
pop
dec
out
and
dec
dec
inc
dec
inc
pop
ficomps
div
jmp
jmp
jecxz
jl
lea
in
mov
or
adc
fsubp
inc
inc
ret
inc
lcall
inc
mov
and
and
aam
daa
or
aam
out
push
lahf
jne
mov
cmpsl
fs
inc
int
std
push
movsb
jae
je
or
enter
adc
jecxz
sbb
xchg
negb
cltd
inc
push
aad
jae
ds
mov
jl
enter
dec
mov
call
cmpb
or
call
mov
inc
cmp
lahf
orl
pop
adc
pop
mov
ljmp
mov
xchg
addl
fcmovnbe
jl
inc
lods
in
sub
cmc
add
idiv
decl
and
testb
mov
icebp
xor
repz
test
mov
cmp
jle
imulb
jle
mov
repnz
sbbl
int
pop
and
cld
in
enter
mov
insb
lcall
fsubrl
fdivrp
ljmp
push
ss
sar
cmc
fidivs
imul
mov
xchg
fiadds
pop
mov
inc
gs
std
int3
inc
daa
or
cli
jne
mov
test
and
inc
call
xchg
mov
xchg
cs
mov
sub
adc
lods
jae
aad
pop
dec
jmp
ljmp
lods
push
xchg
dec
inc
and
out
or
push
out
daa
aaa
shll
lea
aaa
inc
sub
cmp
decl
dec
or
shl
mov
dec
add
and
idiv
out
jg
ljmp
dec
add
push
insb
mov
fwait
or
out
shl
stos
lcall
call
roll
aaa
sbb
add
cmc
push
jecxz
mov
mov
cmp
gs
xor
cmp
test
stos
mov
jmp
mov
stos
xor
test
std
sti
test
mov
push
fistl
jo
and
jg
jno
xchg
outsl
data16
mov
push
repnz
mov
dec
and
jecxz
pushl
incb
fsubp
push
mov
test
adc
add
cli
movl
sub
divl
loope
push
push
aas
movsl
mov
iret
cmpsl
mov
lret
incl
mov
loop
cltd
ljmp
repnz
ficoms
call
ret
rol
popa
or
arpl
xor
out
mov
inc
dec
test
xchg
in
repnz
jmp
add
in
push
testb
xor
in
or
mov
test
fnstsw
stos
push
pop
cmpsl
xor
bound
adc
xchg
adc
inc
push
push
mov
ror
lcall
pushl
push
jmp
mov
movl
lock
jg
js
frstor
imul
fstpt
inc
lock
pop
pusha
jns
test
sub
inc
jp
or
xor
fnstsw
das
and
add
shl
hlt
or
int
dec
cli
pop
cli
fistpl
test
seto
out
in
movsb
pop
adc
lea
fwait
push
aam
std
xor
sbb
int
sbb
jmp
mov
mov
mov
mov
inc
cmp
out
pop
test
sti
pop
test
xchg
and
and
or
lahf
aaa
sarl
xor
enter
aam
mov
add
lcall
cwtl
loopne
lret
cmpsl
sbb
inc
mov
jae
cmp
xchg
aas
push
or
in
dec
aaa
ds
mov
inc
addr16
jbe
pop
sahf
jg
jg
push
mov
stc
les
hlt
add
stos
fwait
mov
pop
decl
fidivrs
adc
adc
popa
jne
dec
mov
scas
popa
clc
out
fidivs
lcall
ds
cmp
pop
cwtl
add
add
xor
outsl
and
xor
pushl
push
add
push
cmp
and
arpl
enter
jmp
fisttpl
mov
jp
sub
mov
mov
das
cld
mov
cmpsl
fldt
cld
dec
sbb
mov
or
std
aad
lret
stc
addr16
mov
int3
push
imulb
pushl
aad
nop
imul
orb
aam
pusha
cmovnp
test
xchg
mov
call
rcll
fcom
shll
lods
jnp
stc
inc
rcr
fisttps
pusha
jle
mov
mov
fimuls
mov
dec
sbb
cmp
mov
psrlw
cmp
shlb
sarl
mov
std
mov
jecxz
pop
sbb
inc
push
xchg
fsubrs
lock
int
mov
in
sti
iret
hlt
push
out
xchg
and
test
movsb
push
sarb
fmull
cmp
loope
lret
and
jmp
in
and
jne
int3
xor
and
inc
adcl
fwait
jle
xchg
sar
cmp
scas
push
pushl
lods
inc
sti
push
pop
loopne
mov
inc
xchg
gs
lcall
add
or
outsb
cmp
int
leave
mov
insl
lret
jp
insb
cld
mov
mov
mov
mov
or
ret
iret
adc
push
outsb
add
pusha
jmp
jmp
adc
imul
outsl
xchg
cmp
stos
sub
cmpsl
or
cwtl
pusha
jmp
popa
inc
mov
xor
xchg
pop
iret
or
and
in
pop
push
aam
loope
mov
add
int
jmp
sub
je
sub
shlb
shl
xchg
jmp
clc
lret
aad
jmp
es
popf
sahf
ja
insb
mov
sar
ljmp
fs
ret
add
jge
jb
adc
jp
jne
enter
ljmp
adc
xchg
loop
test
jle
mov
std
ret
decl
fsubrs
jg
enter
mov
xchg
pop
add
push
dec
loope
mov
jg
jmp
fiadds
push
pop
out
in
loope
mov
jge
mov
adc
pop
cli
mov
pop
sarb
aas
adc
out
mov
push
mov
jmp
or
xchg
sub
leave
std
jl
in
cmp
mov
inc
mov
xchg
push
pushl
cmpsl
sbbl
les
xchg
lahf
dec
pop
push
aas
loope
push
inc
jmp
pusha
mov
adc
inc
leave
add
mov
and
insb
ljmp
or
jecxz
cmpsb
push
enter
xlat
mov
mov
dec
mov
cmp
jg
sahf
cmpsb
xlat
nop
xor
cld
stos
add
fld
and
xchg
outsb
push
int
xor
repz
sbb
jl
call
jmp
out
mov
leave
lds
or
inc
imul
pushl
scas
idiv
and
mov
push
or
stos
movl
push
mov
sbb
jmp
hlt
mov
mov
push
and
mov
xchg
mov
mov
aam
insl
neg
enter
jbe
and
jp
ljmp
pushl
es
adc
jbe
mov
pusha
and
and
jmp
dec
or
dec
hlt
mov
cli
filds
xchg
cmp
xor
adc
shl
fcoms
cld
jg
push
push
fdivrp
sub
mov
inc
sbb
xchg
mov
mov
fnstsw
aad
cli
mov
or
cmc
dec
jp
or
jne
rol
decl
icebp
daa
fdiv
xlat
shl
subb
push
cmc
icebp
mov
popa
sbb
in
pop
mov
pushf
subb
lock
cmp
cli
into
jmp
add
fsts
arpl
leave
adc
fcmovnb
mov
mov
sub
dec
pop
subl
fcom
inc
inc
int3
sub
jp
inc
inc
or
add
cltd
insb
inc
fists
jg
jmp
out
insb
sbb
jns
pop
insl
mov
sub
decl
scas
or
mov
push
mov
jl
dec
sar
dec
fmull
push
neg
jle
sub
addr16
sarb
lret
inc
sarb
mov
inc
mov
shrl
decl
push
add
loope
add
movsl
push
mov
mov
cmp
out
dec
mov
mov
in
lcall
cld
aaa
push
jle
sar
cmp
rcl
xchg
mov
mov
outsb
or
cltd
and
in
and
jnp
sbb
inc
std
mov
dec
ret
in
sti
or
lret
lock
mov
pushl
or
jne
out
sbb
xor
pushf
test
outsb
xchg
jb
sbb
outsl
std
dec
jbe
and
es
call
mov
mov
mov
sahf
and
xor
loope
lcall
sar
ljmp
sti
jp
fwait
mov
dec
shrb
inc
mov
inc
fchs
or
lock
mov
pushf
ret
aad
or
push
mov
push
dec
cmc
icebp
ljmp
mov
push
cmp
es
fildll
call
stos
mov
pop
das
sbb
push
push
cmp
clc
pusha
sahf
lods
cmp
inc
jl
dec
push
jecxz
sti
clc
push
cmpsl
dec
outsb
mov
cli
aas
pop
mov
mov
add
lcall
pop
or
mov
pop
lcall
push
mov
cmp
cwtl
mov
jb
jb
icebp
call
mov
loop
imul
mov
and
fucomip
ljmp
ret
enter
out
cmc
mov
xor
addr16
jmp
dec
sub
ljmp
iret
ror
pop
xor
mov
mov
in
fisubl
lea
pop
push
in
adc
rcr
and
cmc
inc
add
add
mov
mov
pop
jl
int
mov
scas
mov
xchg
shlb
jecxz
loop
sub
mov
xchg
loopne
inc
enter
mov
sbb
outsb
sub
xor
loopne
subb
xchg
mov
pop
push
ror
cld
xchg
lcall
es
data16
addr16
pushf
or
mov
ret
mov
dec
call
in
push
mov
icebp
pop
jb
inc
jnp
sti
and
jg
jmp
jb
test
sbbl
das
outsb
jg
mov
push
addr16
mov
std
sub
ja
inc
jae
jb
sbb
cmc
insl
je
add
ljmp
icebp
cs
lea
sub
scas
xor
out
adc
call
dec
jb
shlb
pop
subb
xor
jbe
into
sbb
fstps
jmp
push
shl
popl
mov
rol
cmp
and
mov
addr16
push
jno
je
mov
call
fwait
dec
xchg
rcl
popf
inc
imul
adc
ja
mov
orl
mov
mov
ljmp
aam
insb
mov
add
ret
aad
mov
pop
adc
gs
lds
andl
cld
fisttps
cmpsl
cmpsl
rorb
shrl
push
lods
ljmp
push
add
mov
pop
imul
dec
or
arpl
mov
mov
ds
mov
cmp
jb
pop
les
aaa
lcall
cld
jmp
mov
jne
fdivl
sub
sbb
xor
pop
xchg
loopne
jmp
xor
sbb
idivl
scas
dec
dec
fisubs
fstpl
lock
rclb
or
mov
stos
sbb
adc
dec
dec
adc
pop
loope
fsubr
cmp
rcrl
push
incb
popf
mov
xchg
jg
lcall
adc
out
pusha
mov
jns
sbb
rcrb
mov
pushl
mov
or
ds
outsb
repz
or
jmp
ficompl
aas
push
lea
test
leave
or
sbb
jb
scas
mov
cld
daa
mov
or
out
xorb
outsl
lock
aad
xor
push
outsl
aas
ret
enter
ljmp
ret
push
add
out
mov
loop
mov
stos
decl
xor
lds
push
xchg
jg
inc
mov
andps
mov
pop
js
scas
sbb
inc
adcb
incl
jb
cmc
cmp
rcrl
push
cmp
add
decl
push
cmc
test
cmp
cltd
imul
nop
add
xchg
cwtl
dec
fwait
adcl
xchg
incl
hlt
fwait
aaa
adc
add
xchg
mov
fcoms
ljmp
adc
inc
rcll
sbb
pop
add
decl
fucomip
push
inc
push
and
push
fidivrl
in
push
imul
lcall
ljmp
cld
xchg
dec
fcoms
add
adc
testb
cltd
sbb
loop
inc
outsb
sahf
xchg
inc
out
xchg
decl
xchg
push
xchg
jmp
jno
xchg
das
jns
fstl
insl
add
clc
ljmp
inc
nop
out
fwait
sarl
clc
and
lea
sahf
mov
push
shlb
xchg
adc
sbbl
pop
pop
in
dec
or
outsl
cld
mov
movsl
mov
pop
and
mov
jg
shll
push
daa
shr
rol
aaa
fdivrs
sub
or
in
pop
sub
dec
daa
mov
xlat
ret
out
push
imull
and
aaa
jmp
sti
lock
lock
call
xor
and
pop
out
sub
subb
pop
add
adc
decl
sbb
push
sahf
pop
mov
orb
fstpl
inc
mov
pop
imul
xchg
lcall
mov
sub
ljmp
sbb
inc
mov
pop
cmp
push
sahf
push
mov
push
repz
jmp
dec
gs
out
stos
cmp
xorb
mov
mov
fucomip
jg
out
adc
jbe
fdivrl
sarl
dec
sbb
and
push
dec
mov
lret
mov
out
lret
sub
in
pop
out
fstps
mov
mull
or
repnz
push
or
orl
jg
fsubr
add
orb
ds
or
push
sub
ljmp
lcall
aas
or
in
fistpll
mov
mov
into
stos
into
or
jo
out
mov
mov
arpl
andb
fdivrl
stos
stc
shll
pop
adc
jg
idiv
je
les
mov
rcrb
scas
ljmp
jg
xchg
push
xchg
pop
enter
test
cld
add
lcall
xchg
cld
inc
ds
mov
fistl
inc
sbb
aas
aas
fiaddl
sti
xchg
add
jns
std
decl
int3
mov
pop
pop
icebp
xchg
pop
or
mulb
stc
in
sbb
xchg
dec
lcall
pushl
add
inc
fnstsw
int
testb
divb
xchg
sub
push
push
cld
jmp
je
clc
lahf
mov
arpl
inc
xor
and
imul
or
dec
repnz
cwtl
mov
out
popl
or
sub
orb
mov
xchg
scas
stos
xchg
mov
cmp
lods
push
call
mov
lahf
sbb
xchg
jbe
xchg
mov
xchg
js
inc
xlat
in
mov
ljmp
sti
sarl
mov
rcrb
push
xchg
push
daa
inc
jge
mov
fdivr
jmp
cltd
pop
mov
add
mov
out
lret
mov
cltd
out
scas
xor
repnz
das
sar
pop
sub
sbb
jo
pusha
mov
outsb
jp
test
add
jmp
shlb
and
dec
xchg
int3
mov
mov
push
mov
mov
adc
cs
dec
push
lret
in
ljmp
lock
rolb
mov
mov
imul
xchg
xchg
fstpl
xor
test
dec
pop
nop
mov
ljmp
das
es
push
icebp
add
loope
repz
out
int3
and
inc
xor
cltd
pop
xchg
or
or
jnp
ljmp
arpl
jg
xchg
adc
inc
push
pop
and
scas
fidivrs
mov
lahf
in
jmp
loop
pop
iret
test
sti
ljmp
cmp
xchg
aam
adc
loop
dec
and
add
stc
outsb
mov
mul
mov
ljmp
lods
jbe
add
xchg
mov
out
sub
imul
pand
pop
inc
lret
mov
adc
incl
cmpsb
adc
arpl
test
xlat
sbb
mov
xor
decl
mov
or
xor
std
mov
pop
mov
push
add
cmp
push
dec
sbb
jmp
inc
push
inc
gs
insl
jb
ljmp
pushf
cld
xchg
clc
fsubs
pusha
fwait
xchg
inc
addr16
imul
jl
dec
and
ljmp
imul
scas
leave
lds
xor
mov
sbb
and
xchg
adc
lcall
cmc
pop
enter
insb
test
adc
dec
mov
int
pop
xor
push
pop
in
ljmp
incl
xchg
and
xor
daa
out
inc
add
testl
in
test
movsl
pop
jmp
or
inc
call
xor
xchg
in
jbe
in
filds
test
sar
std
dec
push
iret
stos
jl
pop
inc
mov
xchg
and
sti
jecxz
jge
add
lret
jnp
mov
push
push
cmpb
jnp
mov
lock
xchg
clc
inc
pushl
and
cmc
mov
adc
nop
pushl
inc
shlb
mov
fs
std
pop
call
dec
jmp
ret
inc
ds
in
sbb
fiaddl
jne
xchg
inc
fadds
ds
mov
pop
pop
call
adc
outsb
in
iret
nop
mov
mov
mov
mov
popf
adc
xchg
sub
es
sbb
mov
pop
inc
mov
repnz
arpl
jmp
sbb
sbbl
or
fdivl
mov
in
cmp
mov
dec
fstpl
add
pop
jecxz
jmp
pop
cs
imul
ret
test
sbb
imul
mov
jecxz
jo
xor
push
xor
rolb
pop
mov
in
adc
lret
cltd
and
dec
int3
sbb
icebp
decl
iret
inc
dec
add
mov
out
mov
xchg
enter
ljmp
movsl
js
sub
imul
xor
mov
or
adc
outsl
cmc
aaa
iret
or
mov
pop
clc
xor
dec
hlt
pushl
lahf
fwait
push
lds
push
ja
cwtl
cmp
in
sub
add
push
ljmp
arpl
sub
int3
jno
xor
lea
jg
mov
add
mov
fists
add
imul
mov
rolb
push
mov
shr
lock
movsb
out
dec
out
cmc
enter
pop
notl
leave
movb
test
decl
xchg
idivb
mov
cmp
mov
add
ss
call
mov
dec
dec
sbb
fnstcw
ja
xchg
cmpsl
lcall
add
jmp
ljmp
mov
jb
call
cmp
aaa
clc
jg
lahf
ss
lods
mov
mov
and
add
ljmp
and
fistpll
lcall
fidivrl
lods
outsb
shrl
xor
jae
arpl
push
je
jb
sbb
stos
pop
or
inc
test
mov
jg
decl
lods
pop
mov
pushf
call
addr16
mov
or
mov
dec
es
addr16
outsl
sbb
mov
jecxz
into
ds
xchg
xor
pop
xchg
fadds
inc
xchg
lret
fucomip
pop
ds
js
jbe
popa
hlt
xor
cli
inc
sbb
movsb
mov
sti
mov
push
movsb
mov
and
aas
jl
push
jge
cwtl
sub
mov
xchg
ljmp
out
ss
xchg
cmp
pushf
fstpt
mov
xchg
dec
addl
and
xchg
jmp
mov
mov
and
xchg
inc
mov
ljmp
out
inc
push
mov
mulb
pushf
pop
jp
lcall
int
loop
inc
enter
push
adc
or
adc
std
pop
sbb
lcall
jmp
je
dec
ss
lret
xchg
out
push
mov
ljmp
andl
lea
pop
hlt
lahf
jmp
mov
sbb
add
xchg
movsl
jg
pushl
jb
imul
mov
mov
mov
or
sub
repz
xchg
lea
dec
movups
in
outsb
neg
call
mov
cmpsl
jns
mov
popf
hlt
test
xchg
pop
out
inc
test
and
jae
out
je
xchg
icebp
mov
or
sar
mov
cmp
orb
out
cmp
popf
negb
mov
aaa
loopne
mov
sub
sbb
insb
xor
arpl
dec
aaa
stos
int
or
jmp
xlat
lret
pushf
xor
fistpll
pusha
test
jg
pop
or
adc
sti
jg
ret
mov
les
add
gs
sbb
jge
hlt
je
rorl
js
ljmp
das
adc
mov
or
mov
jns
pop
jno
inc
and
push
imul
jbe
stos
fstpt
sub
cmp
nop
test
out
cmp
pop
ljmp
xchg
test
xchg
dec
test
cli
mov
mov
pop
lcall
jae
popl
loope
push
cs
decl
mov
stos
add
test
mov
jmp
add
jl
addl
push
sub
test
leave
jp
sub
dec
push
mov
daa
pop
sar
mov
movsl
dec
mov
pandn
mov
and
pushl
mov
mov
mov
add
mov
mov
std
fucomi
rcrl
outsb
outsl
jp
hlt
xchg
aam
outsb
xor
cmc
push
rcr
sub
lcall
xlat
mov
mov
imul
jecxz
jne
mov
enter
inc
decl
idivb
sbb
lods
enter
mov
mov
das
std
das
cmc
cld
adc
aaa
push
scas
cmp
ror
push
jmp
bound
roll
jge,pn
data16
jle
cmp
scas
jle
mov
add
icebp
std
test
test
mov
push
andl
mov
pushf
mov
mov
loope
jge
or
loopne
dec
mov
sub
call
call
lods
mov
add
mov
add
out
or
arpl
lock
fwait
scas
and
in
mov
adc
push
rcrl
ss
aad
clc
pushl
push
xchg
call
and
sbb
jge
lret
movsb
outsl
push
pop
in
jge
inc
loop
lock
mov
rcl
sbb
shrb
dec
dec
sbbb
outsb
and
inc
pushl
js
sub
in
jmp
or
repz
mov
cltd
pop
jb
cmp
jg
cmp
int
pop
in
push
mov
nop
xchg
or
fdivrl
xor
mov
cmp
loope
hlt
das
sub
notb
adc
lock
scas
xchg
aas
incb
jnp
imulb
cld
sub
sbb
into
cmp
push
cmc
mov
pop
xor
loopne
lock
and
scas
push
jl
dec
pusha
shl
dec
cmpsl
rclb
lcall
jecxz
xor
loopne
icebp
loopne
sti
cld
mov
push
jmp
bnd
je
stos
jb
testl
mov
xchg
sbb
xlat
push
add
fsts
dec
jno
lock
and
xchg
or
jno
push
sbb
inc
rorl
xchg
outsl
pushl
arpl
mov
adc
mov
andb
xor
and
inc
jns
aaa
scas
pop
rorb
in
push
xchg
subl
loop
push
lock
fsub
xor
fcmovu
incl
test
sub
aam
lret
sbb
jo
inc
jno
mov
jmp
mov
enter
add
dec
out
mov
pop
cld
cli
fimuls
ljmp
aad
ret
add
sahf
leave
or
adc
pop
inc
xchg
xchg
outsl
xchg
sbb
lcall
jmp
repnz
and
aaa
xchg
xor
ret
rep
in
pop
das
std
decl
lcall
addr16
mov
daa
dec
popf
mov
test
ljmp
fsubl
mov
fidivrl
dec
testb
or
hlt
mov
test
lcall
sub
inc
jne
adc
shlb
xchg
push
loop
mov
sub
arpl
mov
mov
push
ss
pop
pop
or
mov
push
or
fdivrs
cmc
je
clc
pop
inc
sbb
ss
lea
jp
or
xor
lahf
and
stc
sti
mov
lcall
ret
pop
pop
outsl
adc
mov
jmp
or
xor
call
mov
pop
jae
xor
stc
test
lcall
rcrl
mov
shl
add
jae
cmpb
aas
sbb
xor
sbb
mov
ret
inc
pop
mov
push
add
out
pop
jge
ljmp
lds
jmp
imul
sbb
sub
in
es
pushl
jge
pusha
push
in
enter
mov
or
xlat
xor
into
data16
call
dec
inc
inc
mov
das
outsl
int3
fldenv
cmpl
mov
scas
jns
dec
dec
ljmp
dec
ror
int
mov
ror
xchg
jle
and
gs
sti
push
ljmp
xor
divb
insl
push
pop
jno
ror
aam
in
pushl
sub
ja
shl
pop
mov
stos
rorb
test
call
shlb
sbb
jge
jge
js
dec
lcall
pushl
mov
jecxz
sub
stc
add
push
pop
cli
jmp
mov
shll
shl
popf
sub
pop
add
ljmp
fcomi
mov
fistpll
xchg
mov
cmp
push
scas
jle
mov
movsl
cltd
mov
xchg
gs
lidtl
scas
sahf
jbe
xor
jle
popa
in
mov
insl
jp
jg
cmpb
aas
addr16
or
jecxz
les
cmp
mov
cmp
jne
lret
mov
repz
jl
setp
insl
jg
fildl
push
mov
lcall
push
cmp
ljmp
lcall
mov
pop
and
das
out
dec
mov
jge
dec
lods
rcll
repz
cmp
sbb
dec
cli
bound
pop
jne
sbb
dec
in
pushf
in
dec
pop
imul
inc
lock
shrb
mov
insb
ja
bound
clc
pop
clc
lahf
sarl
mov
rolb
and
jl
adc
pushl
sub
sarl
or
fcmovb
std
xlat
cmp
mov
mov
inc
std
shlb
push
jg
fstpt
and
addr16
loope
fwait
iret
enter
clc
dec
mov
mov
mov
mov
pop
or
cld
pushl
xor
shrb
arpl
xchg
adc
jne
pop
adc
ljmp
nop
out
inc
push
sti
xor
js
mov
xor
push
andb
incl
cmp
xor
das
pop
sarb
pop
int
sbb
mov
mov
push
add
insl
xchg
inc
lcall
clc
jg
dec
iret
call
mov
xchg
lcall
pop
cmpsb
sub
lcall
icebp
insb
inc
dec
dec
lea
popa
fisttpl
sbb
shrb
das
mov
mov
lds
xchg
push
xchg
xchg
or
jmp
imul
fs
sarl
mov
call
pop
inc
and
out
mov
out
popa
xor
jmp
mov
fldcw
mov
or
imul
notb
ret
mov
call
decl
ret
pop
sbb
lea
repz
fildll
fisttpl
mov
incl
adc
sub
mov
push
xchg
jae
jnp
cmp
sub
xchg
lret
mov
fwait
jecxz
mov
sahf
add
and
jg
push
mov
jns
shll
das
cmc
pushl
out
mov
cwtl
dec
mov
cmp
sub
adc
pushl
cli
divb
pop
and
and
mov
xchg
pushf
pop
or
clc
fbstp
mov
dec
dec
sahf
fcmovnu
cmp
sub
mov
jmp
mov
or
adc
loopne
int3
ss
add
fcomi
cmp
incl
roll
stos
fwait
lcall
js
ljmp
sbb
sub
std
in
ljmp
shrl
and
adc
and
scas
dec
push
xchg
das
cmc
incl
dec
mov
sarl
jge
xor
dec
jp
test
popa
fsts
decl
decl
or
cltd
jb
stc
ss
popa
rcrl
sbb
mov
clts
cli
das
lock
push
aaa
andl
test
mov
idiv
sbb
lds
lcall
add
sbb
lcall
xor
mov
push
add
sbb
cmpsl
inc
dec
incl
sub
test
adc
imul
sbb
cmpsb
cmpsl
or
dec
test
add
sub
add
push
jp
ja
inc
push
inc
fistpll
pushl
cli
call
xchg
mov
in
fisttpl
aad
lods
xchg
call
test
push
cmpsb
in
sbb
imul
lock
jecxz
mov
adc
jg
cmp
loope
push
pop
jmp
dec
daa
sbb
mov
xlat
push
inc
sbb
mov
mov
insl
xor
mov
dec
pop
cli
decl
fisubrl
cltd
push
jle
inc
pop
push
repz
push
cmpsb
nop
icebp
ret
incl
popf
jle
xor
ljmp
or
sbbb
xor
fnstsw
jg
cmp
or
hlt
daa
movsb
fiadds
jb
push
fimull
int
in
or
cld
mov
or
push
inc
jp
add
pushf
outsb
cmp
cli
adc
int
dec
aad
add
pop
loop
jnp
xor
ds
outsl
cld
incl
scas
jns
and
jbe
insl
mov
add
xor
lock
incl
andl
or
or
or
pop
and
outsl
in
or
sbb
pop
aad
idivl
in
adc
decl
std
pusha
ror
inc
mulb
out
rol
xlat
push
pop
imul
ror
fnstsw
dec
fst
pusha
bound
mov
pop
push
cwtl
lods
cmpsl
or
pushl
or
ss
addr16
ljmp
sub
lea
ljmp
sub
push
xchg
sar
orb
xchg
int
inc
scas
lds
pop
call
fimull
jmp
inc
dec
pop
pop
loopne
push
inc
sti
mov
or
jg
leave
test
push
int
sahf
mov
daa
loope
lods
mov
cmc
mov
pop
mov
adc
mov
mov
bound
sbb
cmc
rcl
xchg
int3
clflush
and
js
xchg
mov
jns
rcrl
sbb
sub
fdivrs
cmp
rol
ljmp
icebp
outsl
push
xchg
cld
jmp
cltd
push
addr16
xor
lret
lock
add
mov
pusha
pop
nop
mov
rcrl
shrb
pop
out
jmp
sub
or
cmpsb
inc
stos
jne
xchg
xor
aaa
dec
jecxz
cmc
shld
les
push
fdivl
ljmp
loopne
jo
and
add
sbb
jge
sbb
dec
pop
rcrl
leave
aam
call
in
lahf
imul
ret
mov
flds
pop
mov
and
sub
lret
roll
mov
test
incl
fnstsw
mov
dec
adc
into
mov
psraw
call
aad
fidivrs
mov
repnz
dec
pop
inc
mov
inc
repnz
out
cld
pop
std
mov
cmp
or
les
dec
cmp
adc
pop
lret
insb
es
dec
repnz
rcrb
cmpsb
incl
pop
loop
iret
pop
mov
fs
cmp
jnp
lods
pushf
imul
pushl
and
jno
mov
jmp
xlat
mov
xor
push
push
or
xchg
fucomip
inc
add
rclb
jg
jl
insl
sahf
dec
lcall
mov
mov
sbb
lds
add
lock
xchg
push
jmp
popaw
sbb
pop
dec
adc
sti
xchg
movsl
cwtd
inc
push
cmpl
ss
cli
incl
mov
aad
xchg
xor
or
mov
xchg
loope
arpl
repnz
cwtl
ss
int
outsl
jle
out
movsl
add
sbb
lcall
orb
stos
std
inc
iret
cltd
jns
mov
lret
mov
hlt
jbe
outsl
lods
jg
pop
clc
fists
pop
cmp
jbe
or
sti
jle
add
lcall
pushl
pusha
jbe
lcall
mov
lcall
mov
push
adc
orl
add
incl
pop
cld
xchg
out
cmc
nop
sub
test
decl
rclb
stc
stos
fimuls
cltd
stos
ljmp
iret
mov
jg
jmp
movsl
fdiv
push
testl
frstor
mov
enter
test
addr16
pushl
test
test
out
pop
add
push
pop
cld
fstps
stos
mov
cs
icebp
decl
lret
rcll
enter
cld
ror
jecxz
jmp
jnp
lahf
cmp
add
aas
stos
xchg
add
aam
fnstcw
jl
push
aad
imul
aad
inc
es
cmpl
cmp
out
lods
aad
decl
cmc
cli
push
jmp
xchg
fidivs
fdivrs
dec
ljmp
das
cmp
pop
mov
mov
jae
xor
add
jg
test
jns
lcall
repz
jae
loop
inc
lcall
inc
ret
jno
push
incl
add
jl
ljmp
cwtl
jne
cwtl
jae
int3
xchg
add
iret
jne
jmp
jg
mov
sbb
cmp
insb
ret
jne
imull
mov
outsb
loope
into
notl
int3
mov
mov
and
negl
jle
std
incl
incl
jb
loop
outsl
mov
out
es
push
cmp
xchg
mov
mov
push
lret
adc
cmp
and
cli
adc
mov
push
fstps
or
dec
pop
sub
shrb
xor
call
cmp
cmpsb
pushf
mov
inc
je
into
daa
jbe
xor
mov
jge
loop
or
inc
mov
fcoml
in
push
jge
jg
in
cmc
leave
push
pop
mov
mov
les
into
outsb
pop
les
sahf
lret
and
std
ljmp
adc
inc
mov
dec
cli
cs
ds
mov
enter
sbb
incl
or
divl
enter
lea
leave
add
mov
adc
jnp
mov
mov
out
xchg
pop
adc
add
ss
mulb
mov
loop
cmp
shll
mov
mov
xchg
lds
movsb
rcrb
mov
cmc
push
mov
jmp
dec
add
and
inc
insl
or
mov
or
mov
pushf
inc
fldenv
xchg
int
sub
lods
mov
add
les
repnz
jg
push
int3
shrl
adc
xchg
lcall
xchg
cmp
jg
cmp
fisubl
daa
push
pop
testl
or
call
dec
dec
outsl
cmp
xchg
sub
inc
pop
mov
cmp
mov
pushl
icebp
or
jns
sub
out
lds
gs
jmp
ja
pop
ljmp
sbb
das
pop
lahf
das
mov
adc
jmp
loope
sub
test
xor
xchg
shlb
call
sub
ljmp
jmp
divl
mov
inc
push
mov
sub
lcall
mov
jg
cmp
fdiv
jnp
mov
rcrl
lods
xor
test
repz
lcall
call
xor
or
lcall
push
divb
aas
mov
lods
call
pop
xlat
mov
dec
stos
dec
test
flds
inc
data16
fcmovnu
aas
xor
std
insl
mov
xlat
xchg
sub
push
adc
jae
pop
mov
pop
push
push
ja
adc
pop
pop
push
jge
mov
aam
push
test
cmp
and
mov
not
mov
fistpll
jnp
frstor
adc
imul
mov
dec
ljmp
inc
mov
imul
movsl
fiaddl
jp
mov
mov
push
xor
out
pop
xor
sahf
jg
lods
mov
adc
cli
outsl
in
ds
je
xchg
lea
addr16
mov
call
mov
cltd
pop
aas
xor
imul
pop
fs
std
pushf
lcall
cld
mov
cmp
dec
iret
lods
sbb
iret
fmul
sbb
sbb
jmp
mov
cmp
sbb
iret
orb
or
and
pusha
ljmp
jb
lahf
inc
mov
lcall
lret
dec
sub
mov
aas
insb
sti
inc
mov
jnp
pusha
or
ljmp
sub
push
repnz
xchg
movsb
add
adcl
shll
mov
ljmp
and
repnz
std
push
sub
imul
in
fnsave
sti
pop
fcompl
repz
xchg
cmp
fldt
movsl
cmp
lock
xchg
jnp
icebp
lcall
pop
or
cwtl
fs
into
cli
fildll
push
pusha
xor
cmp
ljmp
imul
insl
je
fs
sbb
jg
jne
sbb
mov
jns
lods
movsb
gs
fiadds
jg
filds
shr
sbb
and
mov
imul
das
ret
decl
int
clc
xchg
cmp
mov
test
mov
ss
or
lock
decl
into
in
adc
call
repz
cwtl
or
xchg
cmpsl
call
xorl
xchg
mov
icebp
pop
mov
push
xor
into
cmp
cmpsl
mov
icebp
jl
lcall
loope
repz
call
ljmp
cwtl
mov
dec
cmp
test
outsl
mov
outsl
and
sub
ret
dec
popa
push
adc
lret
stos
in
mov
repz
lcall
mov
addr16
xorb
mov
ret
xor
jmp
pop
add
ljmp
das
mov
les
jne
xor
mov
daa
push
mov
sbb
fildll
sub
cwtl
sub
adc
and
inc
mov
in
decl
hlt
xchg
cld
pushf
push
add
or
roll
jecxz
sbb
out
lcall
inc
std
ficomps
fldt
push
ss
mov
loop
call
ljmp
xor
icebp
mov
mov
jae
push
addr16
sub
jp
mov
lcall
push
stos
jnp
scas
stc
sti
pop
mov
push
rcr
cmp
ret
int3
outsl
int
lcall
test
lret
test
enter
leave
std
int
jae
mov
mov
std
pop
call
jecxz
mov
cmp
mov
and
ljmp
inc
lret
sarl
and
mov
lcall
clc
push
sub
mov
cltd
scas
pop
xlat
mov
xchg
xchg
aad
leave
push
mov
lods
into
icebp
pop
mov
xchg
pop
popf
xchg
test
int
add
fsub
incl
je
mov
dec
mov
data16
cmc
fistl
or
sbb
adcl
outsb
dec
or
repnz
arpl
inc
adc
insb
mov
dec
subb
stc
fstl
jmp
cmp
cld
dec
pop
mov
cmp
jp
jge
sti
out
mov
xchg
add
jg
pop
cld
inc
das
outsl
aaa
mov
fadd
test
dec
dec
or
sbb
incl
jno
je
iret
cwtl
bound
int
aam
es
xor
cmp
jg
cmp
mov
xor
sub
call
and
pusha
test
cmpl
mov
mov
ljmp
fidivl
rcl
movsb
imul
jno
decl
xchg
jmp
jno
xorl
sarl
out
add
fimull
lcall
aam
dec
pop
pushf
add
mov
cmpsb
push
adc
jg
call
cmpsb
imul
lods
gs
in
stc
popa
fucomp
xor
inc
decl
add
and
cmp
pushf
push
push
jns
mov
xlat
sub
divl
ljmp
push
out
movsb
cmp
or
stc
shlb
rcr
aaa
cli
pushl
movsb
mov
sub
or
rclb
test
outsl
or
xchg
lcall
popf
andl
cmp
xchg
inc
cmp
ljmp
lds
repz
loope
jno
and
mov
in
or
pushl
add
decb
jmp
repz
pusha
mov
outsl
addr16
jg
dec
mov
lret
shll
into
je
rorb
and
lahf
outsb
std
call
mov
pop
mov
fistps
pop
shl
lods
dec
cmp
push
pop
push
loopne
dec
sub
xchg
movsl
sbbb
mov
sahf
scas
ljmp
call
jmp
dec
jle
or
sbb
xor
mov
push
mov
cmpsl
adc
mov
push
aad
push
icebp
out
call
xor
adc
test
xor
ds
mov
filds
dec
fcos
sbb
decl
cltd
and
or
int3
xor
xchg
outsb
scas
ja
mov
add
lcall
ja
lcall
inc
jae
in
out
or
cmp
mov
jne
jmp
dec
xor
imul
mov
fcmovnu
dec
mov
inc
adc
int3
dec
popf
jmp
stc
inc
hlt
mov
call
ret
shll
sbb
add
dec
les
dec
jecxz
stos
dec
cmpb
mov
or
lea
int
lea
nop
repnz
jle
adc
xor
mov
jmp
cmc
cmp
cs
adc
ljmp
jmp
xchg
iret
test
iret
pop
pop
add
out
clc
mov
das
out
jg
mov
ret
mov
adc
outsb
xchg
pop
test
lock
mov
lods
sbb
sub
and
mov
out
inc
jge
gs
sar
call
push
int3
push
das
fsts
scas
aam
xor
mov
dec
decl
shlb
pop
jne
lcall
shr
sub
pop
mov
jge
add
lcall
push
out
inc
inc
cli
cmp
test
ficompl
jbe
xor
aaa
imul
test
loopne
mov
xor
cld
incl
addr16
nop
pushf
dec
cltd
es
push
add
test
mov
lock
jbe,pn
int3
aas
test
sbb
gs
push
xor
js
push
mov
or
mov
testl
mov
mov
jnp
jge
mov
jns
xchg
ja
incl
mov
add
pushf
loope
xlat
add
lahf
mov
shl
daa
add
incl
pop
lret
pop
pop
pusha
into
mov
sti
mov
jmp
lahf
dec
ja
pop
insl
stc
insb
and
cmp
inc
int3
enter
enter
loope
jb
incl
xchg
xor
mov
test
stos
sbb
scas
mov
inc
adc
mov
and
rclb
or
xchg
scas
pushw
shll
stos
ret
dec
inc
aam
les
ficomps
in
jp
or
inc
pmaddwd
test
xchg
jne
das
mov
xor
js
addr16
insl
scas
dec
inc
loope
pushl
fadd
sbb
jnp
fidivrl
fstpt
pop
dec
cmp
push
jl
incl
outsl
orl
push
adc
or
clc
mov
incl
movsl
fildl
inc
inc
stos
sbb
pop
pop
out
mov
jg
shl
fnstenv
test
push
mov
push
sbb
lock
inc
fmuls
sbb
mov
pop
dec
cmp
rcll
les
jg
mov
push
cli
call
cmp
leave
xchg
pop
ljmp
xor
jne
gs
mov
dec
aam
or
popw
jp
ss
inc
insb
jno
jg
jmp
push
pop
cli
dec
fmull
pop
inc
push
mov
repnz
ljmp
out
aaa
adc
adc
xorb
icebp
lcall
vfnmsubpd
aas
push
pop
outsb
cmp
sbb
stos
sti
lods
test
ljmp
pushf
hlt
xchg
adc
loopne
jecxz
outsl
std
jnp
stc
jno
out
fcmovne
or
movsl
stc
pusha
xchg
mov
int
cmp
stos
mov
or
mov
inc
ljmp
mov
aaa
sub
jecxz
lods
std
dec
adc
sar
lcall
dec
dec
in
mov
imul
push
adc
std
lds
out
xchg
int
dec
cmp
mov
add
cmp
xchg
call
adcb
and
add
dec
adc
jg
mov
push
cmc
movsl
lcall
outsl
dec
into
sbb
scas
je
inc
mov
mov
pop
int3
inc
fstpl
iret
hlt
fcompl
lea
aad
ljmp
hlt
ljmp
pop
ss
ficomps
pop
js
inc
inc
xchg
xchg
inc
test
scas
mov
push
cmp
lods
dec
mov
js
imull
ss
xor
add
inc
add
fucomip
fildll
jp
xchg
mov
mov
fldl
push
inc
add
push
scas
leave
fldenv
sbb
pushf
outsb
xor
lahf
in
adc
inc
dec
rcrb
or
aaa
decl
das
sbb
cltd
sbb
jo
lock
pushl
sub
int
pop
aas
cmp
shufps
or
stc
inc
popf
pop
and
push
sub
ljmp
scas
stc
ds
mov
jno
shlb
push
inc
stos
xchg
push
xor
sbbl
incl
incl
and
xor
test
pusha
sub
push
lock
or
mov
push
mov
cld
or
dec
jno
mov
mov
mov
out
leave
inc
mov
sub
mov
push
inc
imul
incl
aas
jns
mov
jno
cmp
and
fs
sti
or
ds
out
xor
fnstsw
call
lock
int3
cmp
lock
fisttpll
insb
ss
mov
pop
xor
sar
mov
adc
fcomi
adc
incl
inc
and
mov
push
jnp
rcr
ret
cld
ljmp
push
fwait
dec
lret
pop
aaa
jle
mov
loop
and
push
xchg
test
js
testl
loop
xchg
push
call
mov
lcall
loopne
jge
cmpsb
arpl
mov
mov
or
ret
out
paddd
push
in
xlat
jl
push
into
outsl
and
ljmp
fcomi
lods
or
push
inc
xchg
xchg
push
int
call
ficomps
and
cld
lds
incl
pop
std
sub
mov
mov
ja
in
adc
fidivrs
add
mov
pop
loop
and
lods
setge
enter
xchg
popf
mov
loope
mov
mov
mov
cli
pop
insb
xor
fldl
incl
jge
nop
mov
sbb
jecxz
pop
cmc
push
pop
lcall
inc
loope
pusha
and
gs
sbb
xorb
add
ljmp
xchg
sti
mov
scas
js
in
ror
in
les
in
or
enter
cli
sub
push
mov
jl
hlt
ds
sub
sar
pop
loopne
insb
add
sahf
daa
insl
fildll
jno
fidivrs
adc
incl
icebp
jo
subb
cli
xlat
aaa
cmp
push
pop
jmp
mov
pusha
push
pop
out
sub
aam
inc
push
pop
test
mov
pop
xchg
rcl
insl
ret
fucomip
call
cmp
roll
mov
xor
shll
pop
xchg
mov
pop
movb
jmp
xchg
cmp
sbb
scas
sahf
xchg
iret
adc
incl
rolb
movsb
mov
or
mov
sbb
sti
shl
push
addr16
movsb
and
pusha
mov
cs
lret
push
rol
mov
mov
test
decl
cld
pushf
dec
nop
and
cmp
jecxz
es
inc
scas
xor
popa
cmpsl
call
shll
fsubrp
xor
sbb
outsb
and
xor
daa
out
lea
adc
stos
adc
leave
clc
sub
inc
filds
outsb
lret
pop
lods
scas
into
or
or
jbe
add
cmp
mov
dec
cmpsl
imul
outsl
inc
decl
jmp
int3
add
inc
xor
test
sub
je
lods
adc
cmp
cmp
ja
push
pop
jle
jb
movsl
inc
loope
cs
fldt
pop
jbe
dec
or
mov
call
sub
fildl
sbb
call
mov
mov
mov
mov
out
lods
jae
pop
in
mov
mov
cwtl
stc
or
mov
pop
jge
mov
push
and
jns
mov
fwait
loop
fwait
enterw
ds
fnstcw
jb
in
lret
loopne
stos
cmp
in
push
jmp
incl
adc
or
loope
subb
daa
cltd
cmp
call
sub
push
push
pop
test
divb
mov
add
call
incl
nop
imul
in
in
enter
cmp
das
clc
mov
insl
pop
adc
call
xchg
fcompl
push
pushf
in
cmc
jg
aaa
pop
aad
cld
ja
sub
mov
stos
cmp
fistps
std
sub
dec
mov
inc
mov
insb
mov
data16
lcall
aas
mov
rorl
xchg
or
cmp
jecxz
adc
adc
add
lcall
lea
bound
dec
xor
dec
js
pushf
cmc
sbb
mov
popa
lahf
loop
or
fnstcw
cli
in
mov
or
adc
mov
or
mov
pushf
pop
or
rol
jo
lret
movsl
lods
or
jne
inc
adc
fs
sbb
pushl
je
pop
add
adc
mov
mov
in
xor
icebp
out
cltd
cwtl
mov
imul
mov
aam
cmp
lcall
incl
sahf
push
dec
stos
dec
rolb
inc
xchg
imul
cmpsl
adc
daa
pushl
jmp
jb
pushl
int3
out
jle
mov
adc
clc
fisubrs
mov
jne
dec
mov
mov
xor
jbe
lds
ljmp
js
inc
mov
fbld
push
xor
icebp
fdiv
inc
notl
push
adc
decl
ds
pop
push
les
mov
mov
lods
jne
push
adc
ljmp
out
push
loope
fadd
dec
sbbb
xchg
xchg
pop
push
pop
inc
lcall
shr
dec
xor
fildll
arpl
fiadds
daa
ds
fcoms
pusha
dec
aaa
in
imul
inc
push
add
lcall
sbb
jo
cld
test
push
cwtl
cmpsb
mov
push
ja
in
add
add
call
or
cmp
push
cwtl
mov
xchg
xchg
ds
inc
lahf
mov
stc
add
mov
push
jg
adc
mov
imul
sub
decl
lahf
int3
lods
iret
fwait
lea
das
mov
ss
idivl
mov
xchg
xchg
call
jno
mov
xor
add
imull
adc
push
out
lods
lret
das
mov
push
lahf
fs
jecxz
dec
inc
xchg
das
fldt
adc
jne
pop
clc
jmp
movsl
je
push
popa
scas
not
movsl
test
incl
pop
sub
adc
sub
iret
ret
lea
xor
fsubrl
fdivrl
cli
ds
sbb
dec
xchg
inc
pushf
lret
sbb
jbe
cmp
test
inc
inc
call
scas
sub
adc
jne
jl
aad
enter
jae
call
mov
movsb
add
gs
loopne
fwait
test
fisubl
fisttps
loope
dec
filds
nop
fdivr
push
incl
or
imul
aam
call
add
incl
push
mov
call
in
mov
inc
jae
mov
jno
icebp
push
fnstenv
jne
in
fistpl
iret
cmp
call
mov
lea
sbb
xchg
cli
ret
adc
je
or
mov
inc
lods
pushf
push
and
or
aas
cmp
lods
xchg
push
decl
lock
repz
ljmp
fisubrl
mov
mov
scas
xchg
or
mov
lahf
out
jg
mov
lods
add
cmpsl
sub
shl
add
push
push
pop
jmp
dec
jb
mov
mov
mov
jge
jb
push
sub
lcall
divb
lcall
adc
dec
leave
xor
push
ds
mov
jnp
into
pop
lock
popf
shll
dec
addr16
inc
lcall
loop
movsb
sbb
cmpsl
push
jns
cmc
cld
js
insb
out
jae,pn
call
cli
sub
lods
push
mov
pop
scas
adc
scas
out
stc
jb
ja
cld
push
mov
dec
lock
sub
pop
lret
inc
pop
hlt
add
mov
jae
js
clc
xchg
mov
jno
pop
leave
fisubrs
mov
out
ret
cmp
sbb
jo
fnstsw
or
sub
add
dec
xor
mov
pushl
call
mov
push
shlb
jg
xorb
pop
js
sbb
mov
icebp
jno
fildl
adc
inc
aad
adc
neg
ud0
pushl
iret
test
sbb
leave
sub
push
xchg
xchg
push
inc
movsb
out
popf
cmp
cmpsl
jg
fnstsw
push
cmp
and
aam
sub
jnp
adc
xchg
lret
test
mov
es
pop
mov
xchg
cmpsb
push
jo
mov
dec
scas
aam
jmp
xchg
and
jb
lds
mov
imul
mov
aas
lds
repnz
inc
xchg
sbb
data16
and
loop
scas
jno
rcrb
inc
es
or
dec
jnp
jne
pop
inc
movsl
jmp
push
or
ss
dec
bound
pop
cmp
in
leave
xor
mov
les
jmp
jnp
enter
sub
icebp
sbb
imul
mov
cs
je
pop
xor
jecxz
cld
stc
sbb
insl
jg
aad
inc
cli
and
enter
sbb
in
jl
jmp
add
sbb
aad
idivb
or
xchg
insl
aaa
add
xor
std
scas
in
mulb
or
mov
sbb
or
jp
add
leave
push
lret
jg
pushf
int
mov
repnz
iret
sub
adc
popf
nop
or
lret
mov
xor
mov
sbb
or
sub
jnp
cmpsl
loope
add
sub
sbb
jg
jnp
mov
sti
cmpsl
loop
cmpsb
sbb
jg
aaa
fdivrl
shll
xor
idiv
xlat
pushf
add
cmp
push
outsb
ds
xchg
pop
jo
mov
jnp
out
jo
decl
jl
jbe
pop
and
pop
call
jg
mov
cld
neg
mov
cmp
outsl
xor
lock
std
int3
inc
jg
pushl
sub
mov
mov
and
pop
mov
pushl
mov
mov
lds
lcall
dec
ss
xchg
sbbl
lcall
mov
cmpsb
xchg
sbb
iret
mov
inc
jo
nop
lret
mov
nop
rol
sub
cmp
cmp
orps
inc
jp
shlb
push
outsb
mov
jno
add
repz
jg
jmp
dec
cli
popa
mov
push
dec
jbe
mov
cwtl
int
jbe
pop
dec
pop
std
pushl
shrb
mov
popf
call
sbb
lcall
add
push
lea
mov
cmpsb
popf
aaa
pop
or
pop
pop
mov
in
insl
dec
in
std
pushl
mov
jno
mov
and
in
dec
aaa
fstps
mov
fildll
aam
xorl
mov
jmp
jg
jbe
pop
mov
imul
push
cli
popf
mov
incl
sub
out
or
xor
push
cmp
push
xor
push
cmp
sbb
mov
inc
lods
roll
call
sub
jo
and
sbb
fldt
std
sbb
idiv
andb
imul
ljmp
call
lea
lods
mov
es
lcall
fdivl
pop
insb
mov
mov
mov
int3
leave
jl
gs
int3
call
and
mov
mov
xor
loop
fsubr
cwtl
push
mov
in
loop
call
mov
push
fimull
ja
in
insl
mov
jmp
cmp
push
mov
xor
jmp
fstpl
incl
xchg
inc
cltd
fidivrl
add
mov
xorl
leave
das
lock
lcall
lcall
mov
xchg
outsl
sarl
stos
outsb
loop
and
fldcw
cmp
jle
jp
fisttpl
inc
push
dec
daa
and
cmp
mov
testl
stc
or
xchg
and
pop
loop
dec
add
hlt
pop
les
rdmsr
imul
cmpsl
movsl
jle
ljmp
jo
mov
inc
jge
ljmp
js
adc
xor
sbb
call
cmp
jno
call
roll
lods
pushf
fisttps
push
lcall
lock
pushl
pop
or
ja
and
inc
mov
call
outsb
call
cltd
insb
and
push
test
rclb
xchg
sub
push
rol
jno
dec
insl
stc
sbb
xchg
pushl
das
adc
add
push
push
inc
aad
pop
loope
fstpt
call
dec
jae
xlat
push
imul
je
mov
mov
inc
iret
and
cmpsb
jns
std
or
loop
xchg
push
and
add
cs
pop
xchg
mov
call
imul
in
ret
loopne
pop
push
or
mov
pop
jle
mov
cmp
push
sbb
xor
dec
pop
fcmovnb
outsl
aaa
jmp
iret
push
jb
dec
mov
xor
and
icebp
pushl
pop
rcrl
add
pop
sub
jnp
aaa
aaa
decl
imul
cmpsb
or
mov
scas
test
push
in
shll
fbld
add
loop
cli
jmp
enter
imul
ljmp
adc
mov
jae
adc
andl
mov
jmp
pop
pushf
out
push
into
inc
and
pop
call
cli
movl
out
inc
jbe
mov
dec
xchg
jbe
jo
jle
sbb
enter
stos
leave
nop
sub
filds
out
enter
mov
rorl
add
stc
pop
icebp
pop
push
decl
adc
cli
test
hlt
addr16
push
lcall
mov
ffreep
pop
lods
ds
or
and
or
jp
idivl
jmp
outsb
icebp
in
jbe
orb
adc
scas
and
jo
or
jnp
add
jo
dec
or
lret
jg
mov
ja
and
inc
ret
push
and
outsb
jae
fisubrs
addr16
in
xchg
push
add
out
lods
dec
roll
loope
adc
pop
bound
sub
push
enter
outsl
les
mull
decl
sbb
es
das
lahf
adc
inc
mov
cmp
sbb
popa
add
mov
xchg
jg
xor
cmp
push
lahf
mov
lcall
mov
pushl
jnp
aad
rorl
xor
mov
lea
lds
pop
aad
mov
dec
push
mov
into
mov
push
popf
iret
sbb
push
cld
pop
push
jp
addr16
push
movsb
and
pop
sub
mov
mov
cmp
fisttpll
dec
dec
mov
popf
shll
mov
and
mov
call
inc
daa
mov
lcall
xchg
inc
and
ljmp
mov
or
jno
fxtract
lret
jae
mov
inc
cmp
mov
fmul
sbbb
les
cmpsl
mov
movsb
fcomps
incl
xchg
cmpsl
iret
cmp
in
lods
in
dec
xchg
pushl
pushf
rcr
mov
xchg
repnz
out
hlt
lahf
mov
shr
icebp
mov
xchg
cld
sti
sar
call
mov
jge
cmp
mov
aad
and
call
hlt
jb
pop
cmp
fnstenv
.byte
inc
test
incl
push
outsl
imul
idiv
outsb
dec
gs
bound
jae
imul
jo
xor
cs
insb
call
push
push
ja
push
jb
jbe
insb
gs
insb
dec
outsl
fs
jne
cmp
dec
dec
xor
dec
xor
outsb
mov
cs
and
data16
popa
jb
pop
dec
imul
mov
sbb
pop
inc
jne
pop
outsb
je
imul
out
jl
outsl
outsb
pop
inc
jo
and
je
jae
pop
ja
inc
inc
push
jg
fs
std
jae
je
jo
pop
vmread
cmp
inc
mov
arpl
dec
dec
inc
add
bound
je
jnp
fistpl
pop
sub
adc
and
jmpw
add
sub
inc
inc
dec
dec
inc
out
insl
mov
inc
sub
dec
pop
push
add
jbe
and
push
dec
push
dec
addr16
data16
das
dec
in
mov
outsl
jmp
sub
and
outsl
jb
and
inc
outsl
jne
fsubr
imulb
outsb
jae
insb
push
and
and
outsl
pushl
push
push
inc
inc
dec
pop
push
push
push
jbe
iret
jne
inc
pcmpeqb
pop
add
cmp
out
pop
sti
ffree
gs
outsb
jg
xor
xor
mov
jl
dec
xor
inc
xor
test
cmp
dec
dec
push
inc
sahf
cmp
sbb
or
out
jae
popa
insb
jo
popa
inc
arpl
inc
pop
sti
mov
inc
outsl
pop
jae
dec
aas
adc
int
jle
pop
push
push
adcl
mov
jnp
fwait
dec
and
dec
jge
sbb
mov
incl
push
inc
dec
inc
pop
inc
dec
pop
imull
push
push
push
inc
add
dec
inc
icebp
ret
jae
add
je
aas
inc
cmp
pop
sbb
ljmp
imul
jl
fnsave
insb
ljmp
and
imul
push
and
sar
pop
imul
add
add
add
add
pop
or
or
out
decl
or
or
or
movups
adc
shll
aas
add
add
shll
push
jnp,pn
shll
pop
jle
aas
or
jl
cmp
add
add
xor
movhps
das
out
xor
jg
jg
xor
repz
add
rorl
or
xor
adc
std
jg
pusha
push
push
inc
push
inc
cwtl
xlat
jae
pop
dec
xchg
fcmovb
xor
and
adc
gs
fs
jo
bound
cld
jmp
sub
xor
cmp
jne
mov
sti
idiv
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
icebp
cmpl
fidivs
jle
push
dec
mov
pop
ret
add
lds
or
cmp
mov
je
aas
cmp
je
in
mov
inc
dec
jne
adc
adc
ja
sti
sub
mov
pop
cmp
adc
enter
dec
or
sub
add
jmp
dec
or
in
sbb
xor
insl
or
adc
idivb
mov
mov
add
div
outsb
mov
mov
add
cmp
and
je
mov
dec
sub
rclb
mov
je
lea
push
push
add
lods
push
push
adc
push
movl
add
shlb
insl
xor
call
add
pop
das
mov
mov
mov
pop
pop
call
in
out
dec
fadd
add
sbb
mov
pop
add
clc
add
jb
pop
fcmovnu
jge
push
dec
push
mov
adc
mov
push
push
adc
lret
jae
push
mov
mov
out
xlat
ss
sub
jle
popf
cmpl
mov
xchg
xor
push
ss
lahf
test
mov
in
xor
push
jbe
enter
lea
in
aaa
adc
add
cmp
inc
loope
jb
fisubrl
lock
loope
es
push
dec
pop
aaa
ret
sti
mulb
pop
jmp
cmp
je
movl
ds
cmp
and
xchg
and
aas
mov
and
imul
adc
or
ja
addr16
xchg
int
mov
jmp
mov
dec
jg
sbb
test
std
adc
int3
push
pop
mov
es
mov
fadd
sbb
aas
dec
inc
adc
pop
or
out
or
mov
fcomip
adcb
and
jmp
orb
fdivs
je
inc
movsbw
popa
or
push
daa
and
mov
fcmovnu
fdivrp
adc
adc
and
inc
add
and
fucomi
add
jo
jnp
pop
push
pop
xor
dec
repnz
inc
clc
ret
mov
xchg
jno
push
mov
shlb
and
sub
idivb
fimuls
mov
je
jmp
lock
je
sbb
mov
sbb
out
mov
fcmove
in
push
clc
in
ficoml
icebp
mov
notb
or
pushf
je
mov
mov
test
pop
mov
ss
cmp
popf
push
push
int3
mov
cmpb
pop
push
test
and
or
sbb
popa
or
push
or
jae
insl
sar
lea
pop
div
stos
stos
sbb
std
mov
into
ret
in
or
pop
mov
push
add
loopne
pop
adc
or
push
push
adc
mov
or
cwtl
mov
movsb
or
fs
cmp
mov
fsubrs
in
idiv
push
incl
jl
pop
jne
and
jecxz
add
fimuls
shll
push
loop
hlt
sbbb
sub
jge
pop
ret
sbb
mov
dec
push
fldenv
incl
jbe
pop
addr16
stos
test
and
ret
bound
sub
adc
jmp
and
pusha
mov
mov
mov
fadds
lret
icebp
xchg
lea
movsl
pop
fmuls
jne
adc
adc
mov
mov
std
pop
ss
fs
cmp
rcr
mov
cmp
add
in
adc
lea
adc
sbb
or
add
lods
lret
bound
push
jae
add
sbb
pop
dec
add
mov
pusha
mov
sbb
cmp
cld
and
mov
lret
enter
add
das
and
lea
cmp
sbb
xor
aaa
xor
mov
ret
mov
mov
add
imul
es
push
xor
mov
inc
pop
inc
lcall
xchg
and
ret
or
pop
jne
mov
je
push
dec
sub
add
inc
add
jne
jle
pop
or
cmpsb
in
pop
in
jne
cmp
add
orl
and
push
sarl
test
js
push
lcall
shll
sbb
adc
push
mov
shrl
jecxz
push
xchg
adc
or
lods
pop
add
or
pop
jge
pushf
or
push
mov
add
pop
pop
in
lea
sbb
and
int3
adc
add
inc
mov
add
mov
cld
push
test
cld
negb
sub
jle
push
add
push
into
xor
fucomi
adc
or
xor
ds
mov
iret
sbb
push
inc
mov
xchg
rorl
movb
rsqrtps
jg
jl
add
xchg
jo
iret
push
in
ss
dec
in
lock
mov
mov
ret
rcrb
imul
nop
add
xor
in
rorb
xchg
out
adc
mov
or
stos
jb
mov
adc
in
push
mov
loop
add
test
jnp
rcr
xchg
data16
push
jmp
cmp
fcomps
add
enter
and
mov
ficomps
testb
loop
mov
xor
jne
xrelease
xchg
or
pusha
xor
inc
push
jne
scas
ja
in
das
mov
test
jo
test
or
cs
neg
sbb
and
or
cmp
fnstsw
jbe
or
cmp
ja
push
add
xor
fcomps
ljmp
push
pop
roll
pop
push
push
or
leave
or
pop
dec
sbb
jl,pn
leave
push
sub
push
add
jb
incl
or
push
or
cmpl
sub
mov
mov
ja
lret
jmp
jno
inc
das
or
adc
mov
jne
pcmpeqb
add
arpl
int
inc
les
or
push
insl
cmp
data16
arpl
sbb
or
les
push
fmuls
adc
loopne
movb
aas
and
test
imul
pop
pop
pop
push
dec
lods
and
mov
fsub
adc
cmp
xor
call
enter
sbb
iret
mov
jl
test
jge
sbb
lahf
lock
dec
xlat
jns
xchg
add
in
sar
lock
push
xchg
and
or
rcll
ljmp
pop
les
hlt
sbb
scas
push
xchg
addr16
push
push
sub
js
insb
imul
or
mov
scas
mov
test
xor
push
pop
jl
push
or
mov
jo
hlt
out
jge
jge
hlt
mov
mov
test
testl
cmp
sbb
ljmp
sti
insl
or
in
push
mov
push
mov
cwtl
adc
les
les
xchg
test
adc
mov
movsl
xor
add
ja
push
push
lods
rcll
push
rcrb
push
movsl
ss
outsb
sbb
dec
outsb
incb
jno
add
ret
inc
xchg
pushl
mov
add
rolb
xorl
jl
aas
fadds
jl
add
or
mov
add
or
aas
pop
or
push
jne
cmp
sbb
sub
clc
orl
cmp
jl
fisubl
ss
rcll
jnp
and
pop
das
ds
and
jecxz
push
push
dec
aam
push
addb
aad
mov
clc
or
popa
push
test
or
mov
test
fnstcw
sbb
test
jbe
outsl
mov
je
lret
mov
dec
and
in
xchg
daa
and
xor
xor
enter
jne
mulb
fadds
xor
add
sbb
mov
scas
sbb
push
adc
rorl
inc
inc
jne
js
arpl
mov
cmp
mov
fisubs
loopne
psrlq
clc
xor
cmp
clc
mov
loope
mov
test
pop
std
mov
push
xchg
loop
xchg
andl
push
and
test
xor
out
xor
mov
flds
call
adc
sbb
push
push
daa
or
aam
lods
flds
lea
sbb
inc
adc
or
push
push
mov
nop
pop
jbe
jge
out
pop
push
pop
push
dec
outsb
lods
xor
fistpl
repnz
xor
lock
gs
std
stos
xchg
ljmp
ficoms
and
test
scas
xor
shrb
mov
pop
ds
lea
cvtpi2ps
pop
and
sub
jbe
and
std
jmp
xchg
or
push
cli
mov
insl
test
mov
cmp
jne
and
setp
sub
test
pop
int3
dec
shrl
push
testl
das
sbb
add
inc
ss
adc
movsb
jbe
orl
lods
add
pop
fsubrs
int3
fstps
inc
mov
xchg
inc
lock
or
insl
andl
loope
push
jp
leave
inc
push
sub
jnp
sbb
mov
test
sahf
popf
in
jbe
int
sbb
popa
test
mov
in
adc
jne
ds
sub
sub
adc
jb
fsubs
mov
dec
je
sub
enter
push
xchg
jne
push
jne,pn
or
aaa
or
jns
popf
jle,pn
in
ret
divb
jne
adc
cli
jmp
sbb
push
cmp
pop
rcrl
or
and
push
inc
push
sbb
push
loope
daa
adc
pop
or
inc
sbbl
xchg
push
es
dec
adc
or
and
stos
jmp
sbb
push
cmp
xchg
mov
jae
dec
test
decb
xchg
mov
fcompl
and
pusha
insb
or
dec
divb
adc
je
push
fcomp
int3
xchg
rorl
adc
push
adc
js
daa
inc
test
sbb
popf
leave
int3
movsb
rorb
mov
lds
imul
ret
push
nop
cmp
push
insb
push
and
lods
jne
adc
mov
pusha
adc
push
mov
adc
adc
or
jne
sbb
out
aaa
mov
cmp
nop
add
lret
adc
insl
andb
xor
add
mov
push
dec
ss
les
push
ret
add
or
pop
lods
pop
fistl
push
mov
jge
data16
shlb
fnstsw
testl
add
jbe
or
jmp
mov
xchg
push
mov
and
stos
add
imul
mov
ljmp
or
adc
push
lods
cltd
adc
int3
repnz
rcll
nop
adc
fdivr
das
jl
stos
aam
sub
aas
fmull
aam
pop
fcoms
comiss
jo
aas
sub
adc
sub
adc
adc
fsubrs
or
inc
or
or
lea
hlt
jp
push
sub
cltd
sub
sar
add
xchg
pop
jns
leave
pop
sti
aaa
mov
xor
sarb
push
sbb
or
cs
sub
and
or
cld
dec
rclb
xor
cmp
rorl
push
jecxz
pop
mov
push
cmp
cltd
wbinvd
rcr
mov
inc
int
imul
xor
pop
adc
mov
aas
cmp
je
and
cmp
popa
push
aam
cwtl
js
xchg
insl
push
add
jnp
call
jge
rep
mov
and
push
rep
dec
int3
ret
js
and
jl
orl
faddp
enter
test
subl
dec
jl
cmp
sbb
xchg
movsl
cmpb
psadbw
pop
je
or
je
push
movb
push
movb
sub
test
inc
xchg
out
push
sbbl
lret
sarb
lret
pop
out
mov
ja
push
jns
cmpb
neg
outsl
adc
jmp
cmp
cmp
shll
add
or
jmp
xor
pop
cmp
outsb
lret
mov
decl
dec
mov
mov
xchg
rclb
ljmp
or
rcrl
pop
dec
lea
shl
mov
sbb
dec
jne
mov
jnp
int3
or
xlat
cmp
jae
add
mov
shll
fmuls
add
jge
mov
jnp
lods
rcr
add
fiaddl
add
push
push
push
inc
or
loope
aam
andb
sub
mov
jg
xchg
add
xor
lea
cmp
push
dec
das
in
into
mov
mov
xor
push
pop
orb
call
inc
out
cmpl
sbb
mov
mov
jo
aaa
and
pop
imul
test
divl
andb
dec
mov
cmp
push
or
pop
ret
add
pop
in
cmp
inc
es
inc
cmp
ja
lds
xchg
add
mov
jmp
pushl
xor
sti
pop
repz
or
cmpl
xor
mov
mov
or
add
fidivrl
rorb
mov
gs
xor
or
push
pop
jmp
mov
mov
dec
mov
test
xlat
mov
dec
call
push
jl
jmp
mov
insb
sar
call
fidivrl
fsts
hlt
add
and
add
pop
xchg
adcl
arpl
lock
inc
inc
je
dec
daa
fwait
or
pop
jo
sti
sbb
or
sti
push
mov
jae
jbe
mov
mov
sub
imul
pop
bound
ret
or
ret
cwtl
insl
out
mov
mov
pop
or
insl
push
test
mov
jecxz
mov
inc
or
mov
push
or
mov
dec
xchg
mov
cmp
movsb
mov
ret
and
sbb
sti
inc
aad
push
pop
in
dec
mov
fdivrl
les
aaa
mov
out
pop
mov
lods
mov
mov
leave
scas
fnsave
test
add
dec
or
push
std
fidivl
pop
inc
jne
adc
int
mov
pushf
xchg
and
mull
and
inc
or
test
lds
jb
addb
xchg
sub
cmp
add
adc
inc
clc
adc
jno
mov
mov
out
push
andb
inc
push
cmpsl
bound
int3
and
push
mov
mov
mov
push
sti
out
and
jno
stos
jmp
push
scas
cmp
fs
jae
mov
xor
adc
icebp
sub
add
sub
popa
bound
or
test
pop
test
pop
lahf
aam
cmp
pop
outsb
das
dec
adc
or
or
cmp
aaa
jle
or
or
inc
mov
test
loopne
sbb
cmpb
add
inc
inc
cmp
out
jmp
mov
lret
fidivs
je
or
or
je
cmp
add
xor
mov
mov
aam
test
dec
pop
insl
pushf
jno
call
adc
mov
xor
mov
inc
ljmp
fdivs
cmp
jmp
inc
aad
xor
xchg
xor
xor
mov
cli
mov
imull
sbb
cmpsb
popa
pop
pop
je
jmp
lcall
pop
and
inc
add
inc
ja
add
xlat
into
mov
aas
jmp
xchg
mov
movb
and
inc
jmp
sbb
mov
adc
fiaddl
lea
mov
test
cltd
mov
rolb
cmp
lds
dec
sbb
popf
mov
ds
mov
push
add
mov
test
stos
cmpb
insb
or
add
pop
insb
mov
sarb
aas
inc
mov
dec
mul
neg
add
pop
inc
add
pop
sub
sbb
add
push
test
rol
mov
fwait
pop
outsb
or
mov
cmpl
push
mov
enter
mov
in
cmp
lea
sti
sbb
or
and
mov
dec
xchg
mov
jp
add
je
add
mov
and
adc
or
ja
imul
cmp
test
or
decb
adc
jmp
or
jmp
push
mov
jl
sub
xchg
scas
cmp
xchg
add
cvtpi2ps
push
lods
push
nop
arpl
daa
dec
daa
dec
cmp
fwait
lods
and
add
mov
xor
stos
push
cmp
sbb
adc
mov
and
cmp
sbb
testl
push
mov
push
pop
and
adc
je
or
movhps
mov
pop
nop
push
pop
loope
into
dec
out
fs
jp
and
add
lock
movsb
push
lret
sti
es
into
xchg
ljmp
mov
inc
mull
movsl
fcoms
popa
add
mov
movsb
or
and
add
pop
add
xchg
cwtl
sbb
fisttpl
mov
sub
in
xchg
mov
shlb
push
cltd
in
roll
or
pop
or
add
mov
or
pop
in
lds
pusha
mov
lret
fwait
out
xlat
xor
icebp
fcmovnu
xor
push
adc
in
adc
dec
xorb
rolb
adc
mov
fsubrs
pop
ret
add
adc
dec
in
pop
fsubrs
adc
xchg
and
movsb
adc
sbb
subb
ds
cld
pop
or
in
loopne
rcll
out
sbb
jmp
or
lock
mov
and
imull
dec
aam
add
jle
push
lods
xor
fcompl
cmc
sub
add
jne
xchg
xor
popf
incl
sbb
ja
fdivs
jb
mov
movsl
xchg
xchg
ds
iret
xchg
jle
addr16
jmp
andl
inc
pop
push
in
pop
push
sbb
add
aaa
jp
jecxz
neg
sbb
imul
and
add
add
outsl
fildl
cmp
ficoms
and
xchg
pop
adc
or
or
cs
cwtl
mov
add
add
and
add
das
inc
mov
lea
loopne
or
lods
or
pop
roll
lret
addl
push
add
in
cmp
out
out
xchg
mov
call
inc
push
and
push
cmp
mov
or
aam
ret
xchg
xchg
push
adc
mov
or
les
adc
test
icebp
loop
push
scas
or
pop
xchg
sub
fnsave
scas
movsb
and
push
mov
push
or
pop
xlat
push
lods
loopne
jl
pop
sbbb
sbb
shll
pop
mov
int
mov
cmp
hlt
in
xchg
inc
adc
cltd
into
xor
in
sbb
push
push
sub
jmp
dec
pop
xlat
adc
push
mov
mov
jo
and
movsb
rolb
fnsave
xor
push
add
jb
pop
jge
pop
pop
pop
jbe
cmp
mov
mov
fldpi
inc
shlb
leave
pop
fs
mov
addr16
inc
je
cmp
iret
jmp
mov
sbb
lret
xchg
push
lret
inc
add
pop
add
adc
or
jge
sub
jb
pop
or
adc
pop
shlb
addr16
mov
jnp
outsl
std
dec
or
jmp
lds
adc
iret
jo
in
mov
or
or
mov
data16
enter
cmpl
std
dec
sbb
rcrl
jbe
push
outsb
add
jge
or
stc
inc
pop
fs
mov
fldenv
push
ss
into
pop
std
jmp
test
pop
dec
push
inc
mov
inc
and
gs
lret
inc
or
das
adc
imul
pop
sarl
push
or
add
add
loope
sbb
sbb
fnstsw
dec
jmp
or
cmpsb
ja
and
push
stos
insl
xchg
xlat
fwait
or
push
lret
push
and
xor
int
mov
push
adc
sub
jb
mov
ret
sbb
jo
andb
or
test
daa
mov
push
test
add
xor
test
in
push
mov
or
lds
pop
add
mov
aaa
shl
or
jmp
and
incb
insb
mov
adc
mov
mov
pop
jle
push
mov
or
sub
lret
pop
imul
pop
addr16
lea
insl
mov
mov
or
sbb
jl
sub
or
pusha
add
popf
icebp
ret
push
jg
iret
cmpsb
inc
testb
jne
add
mov
outsl
roll
mov
xchg
mov
mov
les
or
cwtl
sub
push
xor
lea
aam
jmp
lock
sub
jo
inc
bound
adc
and
push
pop
nop
mov
fdiv
stos
xchg
mov
insb
das
push
xor
add
jb
in
shll
xor
rcrb
in
sbb
les
data16
pop
filds
or
inc
push
push
ja
sbb
adc
xor
or
jp
push
and
mov
mov
je
das
arpl
clc
mov
lret
pop
mov
push
push
test
lods
lock
nop
aaa
and
sbb
sti
xor
jmp
mov
mov
mov
aam
add
cwtl
les
push
adc
or
ret
xchg
or
test
ret
or
pop
lock
mov
xchg
fs
fistps
or
inc
inc
push
das
sbb
int
popa
popf
jmp
outsb
pushf
sbb
sub
jne
orb
dec
push
or
sub
rolb
sub
aas
mov
iret
lcall
aam
movl
out
sbb
repnz
lret
lods
jmp
sub
mov
mov
dec
dec
ljmp
cmp
adc
mov
mov
xchg
lahf
mov
mov
mov
cmpb
fcomps
je
inc
sbb
push
lock
add
pop
nop
xlat
adc
cmp
add
dec
add
pushf
and
fisttpl
sbb
mov
adc
and
mov
inc
fwait
aas
call
cmc
pop
inc
sbb
pop
pop
push
mov
xor
cmp
bound
adc
cmp
imul
push
push
add
test
icebp
jae
jae
sbb
push
xchg
mov
popf
jb
pop
test
out
mov
faddl
jne
fdivs
jae
inc
dec
jbe
mull
adc
xlat
xchg
in
hlt
xor
push
daa
adc
sub
imul
sbb
pop
cwtl
shl
inc
xor
add
leave
or
dec
add
add
testb
jg
sbb
rorb
pop
jmp
xchg
push
roll
lret
lcall
or
and
and
add
pop
xchg
outsb
cmp
jbe
lea
push
push
xchg
mov
jmp
xchg
arpl
sbb
sbb
loop
lea
fidivrl
pop
inc
pushf
sub
fwait
sub
or
sub
add
imul
add
pop
push
dec
mov
mov
aam
lea
cmp
add
push
sub
and
push
hlt
sub
dec
les
pop
sbb
movsb
lcall
rcr
dec
push
nop
fs
mov
xchg
mov
pusha
mov
int3
addr16
popa
and
adc
mov
xchg
aad
clc
sbb
push
push
sarb
cmpsb
lea
dec
mov
push
mov
xor
mov
fwait
mov
inc
pop
cmp
mov
fcmove
sub
and
adc
jb
imul
mov
insb
xchg
jae
mov
sbb
jb
mov
insb
cmpsb
adc
xor
cmp
jbe
add
notl
lds
dec
pop
cmp
inc
test
add
add
jo
lea
add
add
incl
add
xor
jbe
mov
mov
lea
adc
out
enter
sub
xor
sbbb
mov
jb
insb
fildll
rcrb
xchg
sbb
rcll
or
cmp
ss
cwtl
or
sbb
into
or
cmp
bound
adc
cmpl
dec
xchg
jbe
add
push
mov
cltd
fstl
outsb
test
xchg
shll
or
cmp
push
imul
add
lea
jmp
xor
xor
test
push
test
pop
sbb
and
cwtl
add
pop
inc
mov
dec
jge
ret
ja
xchg
cmp
aad
jbe
lret
adc
dec
mov
lds
in
inc
add
adc
aam
sahf
loopne
add
xor
inc
mov
push
icebp
notb
push
fcmovnu
pop
les
repnz
mov
add
out
xor
mov
mov
aaa
mov
inc
lds
add
xlat
mov
lret
inc
push
cltd
dec
mov
test
jge
push
mov
nop
fldcw
jl
fs
and
dec
sbb
jbe
push
cmp
stos
shl
insb
cmp
xor
arpl
rorl
pop
and
push
xchg
sbb
add
inc
push
or
sbb
or
aam
popf
jns
divb
mov
clc
std
mov
repz
or
stos
add
push
and
pop
mov
sub
add
sub
sub
fwait
mov
xor
xlat
stos
sbb
xor
sbb
adc
or
cmpl
mov
push
call
add
imul
xlat
cmp
mov
add
mov
jge
jmp
add
nop
inc
sahf
add
push
push
mov
sbb
sti
or
cmc
mov
add
pop
xchg
cmp
and
inc
jne
push
jmp
adc
loope
add
push
clc
sbb
jo
cmc
cmp
pop
inc
test
into
push
dec
jbe
test
inc
dec
call
lods
mov
jle
adc
testl
mov
insb
mov
sbb
rolb
ret
adc
mov
movsl
inc
cld
sbb
sbb
jne
out
xor
popf
xchg
sub
mov
fs
pop
jo
jo
clc
push
or
add
mov
sbb
sub
adc
cltd
xor
int3
push
mov
mov
add
daa
loopne
sub
xchg
jecxz
clc
jnp
xor
push
or
jl
xchg
inc
std
sub
push
sbb
inc
lock
xchg
cli
cmp
setne
daa
push
mov
xchg
cwtl
rcll
push
xchg
ret
sbb
mov
and
inc
hlt
je
cmpl
movl
push
adc
push
or
fmuls
pop
rorl
adc
int3
or
scas
push
mov
ret
and
add
mov
jmp
jp
jae
dec
mov
or
add
xchg
add
fwait
adc
cmp
cmp
pop
and
dec
imul
mov
outsl
or
je
or
sub
push
sarb
stos
sub
adc
ficompl
stc
mov
mov
mov
push
sbb
ljmp
fcomps
sbb
xor
pop
in
and
or
dec
data16
frstor
or
movaps
add
push
jle
mov
cmp
inc
fld
push
pusha
dec
add
orb
cmpsl
clc
mov
xor
mov
filds
push
scas
popf
lods
jbe
adc
hlt
adc
push
test
loope
cmp
push
je
inc
mov
call
clc
cmpsl
rcrl
rcll
pop
adc
mov
inc
xor
add
fsubrl
sbb
fcomp
in
mov
push
add
scas
or
pop
push
dec
lock
icebp
sbb
je
push
pop
jb
jne
mov
addr16
adc
adc
sub
andl
inc
sbb
mov
ds
xchg
dec
clc
mov
nop
or
cmp
or
lret
or
js
add
or
mov
and
mov
inc
cmpb
and
pop
aam
adc
dec
lea
push
rclb
mov
and
push
jg
or
adc
or
and
or
or
jle
xor
push
mov
rolb
lahf
jl
push
mov
sub
mov
les
notl
in
or
and
inc
mov
inc
add
lods
push
cwtl
dec
add
pop
adc
int
sub
mov
add
jmp
stos
rep
push
mov
in
lds
adc
sub
mov
dec
repnz
sbbb
mov
rol
aam
mov
pop
mov
adc
adc
cmp
xchg
inc
sbb
je
adc
daa
test
cmp
xor
jne
test
add
pop
push
pop
adc
jne
loop
pop
add
push
lods
pop
pushf
jne
dec
insl
cmp
and
lcall
rorl
dec
add
sarb
dec
inc
ss
mov
test
iret
jo
add
movsb
ja
sbb
mov
mov
mov
push
xor
shlb
cwtl
cmp
addr16
cmp
pop
int
insl
adc
addb
adc
or
les
sbb
or
push
mov
ljmp
je
ret
lret
sub
xchg
xor
pop
pop
insl
add
mov
inc
das
or
fsubl
push
inc
inc
movl
jbe
pop
add
mov
xchg
dec
mov
add
fwait
mov
dec
mov
int3
insl
dec
adc
addl
xlat
mov
inc
mov
dec
stc
pop
call
mov
inc
adc
sbb
mov
ror
loopne
outsl
repz
xor
adc
test
aam
xchg
sbb
xor
mov
mov
rclb
push
aam
sub
sbb
imul
xor
xchg
pop
ds
xor
push
dec
add
cmp
repnz
pop
pusha
inc
test
lret
pop
dec
adc
cmpsb
adc
cmp
xchg
stos
hlt
sub
inc
je
mov
js
daa
mov
ret
jmp
add
test
mov
or
xor
cwtl
lds
je
cltd
negl
loopne
mov
movsl
and
sbb
mov
xor
xchg
xor
das
jb
stc
insb
or
imul
xchg
xor
push
cmp
cmp
push
inc
cmp
sbb
push
adc
adc
test
add
out
sub
cmp
test
mov
lods
andl
cmp
push
addr16
dec
adc
mov
jg
and
push
dec
js
jecxz
dec
inc
int3
imul
fnstenv
or
mov
push
xor
cmp
pop
cmp
es
push
mov
pushf
cmp
out
adc
inc
pop
fwait
jo
lods
add
cmp
cmp
call
dec
xchg
cmp
nop
pop
sbb
push
add
sbb
xor
jne
jmp
or
popf
bound
cmpsl
cmp
and
inc
out
push
cmp
fiaddl
pop
ds
mov
fcompl
push
rolb
push
rolb
mov
dec
sub
push
push
ret
faddl
adc
orl
mov
enter
loopne
cmpb
cmp
mov
shrl
and
sbb
test
pop
dec
mov
lret
and
mov
add
sarl
jecxz
les
jne
or
xor
or
xchg
xor
ja
pop
push
or
xor
fcoms
mov
rcl
ds
adcl
jne
push
adc
int3
pop
or
fsts
adc
jne
jbe
mov
pop
call
popf
or
cwtl
enter
add
lods
hlt
pop
dec
in
mov
test
in
pmaxub
mov
popa
pop
cmp
inc
fistpl
jne
xchg
cmp
loopne
dec
mov
rcll
ss
mov
inc
add
sub
xor
inc
push
push
add
test
dec
and
adc
movsl
test
add
xchg
testl
dec
fsubrl
adc
xor
add
mov
sahf
insl
adc
in
pop
icebp
and
int
adc
es
jbe
push
int
push
pop
mov
mov
cs
jne
enter
fs
stos
mov
pop
lock
nop
pop
out
push
jns
repnz
mov
cmp
ss
mov
fsubrl
rclb
fs
jb
and
jl
mov
push
cmp
pop
stos
mov
rorl
add
enter
adc
fwait
inc
sarl
leave
jns
rcll
fsubrs
call
cs
sbb
push
shl
fs
sbb
hlt
cmp
or
adc
and
add
addb
sub
jb
lock
add
or
mov
sbb
push
cmp
sbb
pop
push
ret
lods
inc
ss
push
les
push
sbb
push
jno
ficoml
jmp
inc
mov
xchg
jnp
dec
xchg
jge
push
sahf
push
out
push
inc
and
pop
sub
push
xor
sbbb
pusha
scas
mov
das
inc
dec
sbb
pop
push
cmp
lahf
or
pop
outsb
negl
roll
dec
and
sarb
jbe
inc
andb
xchg
dec
jb
cmpsb
push
shrl
pop
mov
cwtl
out
push
arpl
stos
aam
dec
dec
mov
sub
push
push
push
or
and
push
adc
pop
jp
clc
pop
shlb
cmpsl
push
sbb
imul
sti
fistl
xorl
push
push
jnp,pt
bound
mov
je
or
pop
lods
loop
xchg
rcrb
imul
in
jae
push
pop
dec
in
adc
divps
ss
shlb
add
stos
aad
pop
popa
adc
inc
int
pop
add
pmaddwd
mov
sti
shrl
fisttps
into
adc
ja
inc
int3
jge
ss
pop
sbb
addr16
mov
movsl
shl
xchg
push
out
mov
push
push
lods
push
push
and
xchg
ret
inc
sub
pop
jnp
stos
xor
sbb
or
adc
call
or
les
pop
adc
adc
les
xor
cmp
adc
fs
hlt
push
aas
dec
and
test
insl
je
je
adc
mov
pusha
ss
stos
xchg
imulb
dec
aaa
scas
jns
xchg
movsl
pop
fs
das
cld
enter
icebp
mov
push
mov
ret
push
inc
test
jle
inc
mov
ss
pop
jnp
cmp
mov
test
sub
test
add
test
ds
mov
or
add
push
and
negb
cmp
mov
push
cwtl
adc
mov
dec
leave
add
nop
pop
inc
push
pop
jmp
pop
mov
sub
repnz
cmc
cmpb
adc
adc
jle
inc
or
jg
jmp
dec
rcrl
jg
and
mov
pop
pop
rolb
cmpl
fucomip
inc
in
and
pop
push
cmp
adc
cmp
jbe
add
ret
aaa
data16
in
addr16
test
inc
dec
iret
out
outsb
iret
dec
push
push
sahf
jo
enter
cld
xor
cmp
push
fs
lock
inc
hlt
xor
push
fmull
movb
adc
mov
push
not
mov
aam
ja
or
cmp
push
lea
xor
test
fdivr
outsb
aam
xchg
sar
inc
pushf
iret
popf
int3
mov
or
xchg
lock
push
in
rolb
movsl
mov
lret
mov
xchg
sub
fildl
pop
lea
in
lea
jge
inc
cld
or
push
aam
imul
inc
sar
xor
or
shlb
adc
lea
inc
sbb
into
idivb
inc
and
jl
pop
popf
pusha
dec
js
add
push
je
test
popa
movsb
jnp
cmp
jne
adc
jle
cmp
pop
int
pop
pop
rorb
adc
or
subl
cmp
push
pop
fcomps
mov
testl
jl
xor
ret
push
push
int
aas
pop
fldl
ja,pn
push
jne
shrl
and
push
adc
pop
jbe
sbb
mov
lods
ret
outsl
idivb
dec
ss
or
pop
cmpsb
jmp
scas
outsb
insl
inc
hlt
cmp
adc
mov
cli
add
pop
push
pop
cmp
sub
add
aam
loop,pn
je
push
sub
mov
pop
sub
dec
aaa
adc
or
call
jno
mov
aaa
sbb
and
push
mulb
mov
mov
pushl
or
leave
jmp
or
jl
add
cmc
mov
sub
cmp
jl
add
jg
shl
push
add
push
sub
push
xor
xor
leave
cmp
fistpll
sbb
push
or
push
fbstp
repnz
push
mov
jo
add
adc
fs
flds
or
jle
pop
sub
sar
hlt
push
push
fimull
pop
sub
mov
xchg
fwait
nop
call
leave
jge
fsubs
les
fs
mov
mov
bound
fdivs
and
mov
mov
lret
jmp
xchg
push
adc
xor
ja
cmpsb
pop
inc
jge
sub
push
cmp
sti
and
mov
and
mov
or
mov
mov
sbb
xchg
leave
and
inc
sub
push
lock
adc
add
popf
in
jae
and
or
in
inc
or
xchg
aas
pop
arpl
aaa
sbb
pop
jne
pop
in
rclb
jmp
lods
je
inc
lods
scas
pop
push
or
or
lock
mov
or
or
sbb
push
sub
push
sbb
push
pusha
or
stos
inc
cmp
loope
sbb
adc
loop
imul
adc
sub
jne
push
and
xor
add
hlt
lock
shll
and
push
jne
sbb
dec
push
mov
insl
add
pop
leave
js
mov
add
roll
mov
sub
insb
fisubl
ja
orl
push
add
sub
mov
adc
mov
lret
sbb
sbb
sbb
sti
mov
and
sub
mov
mov
fld
subb
cli
xadd
inc
aad
movsb
pop
dec
and
loope
jle
push
cmp
push
adc
and
mov
clc
and
pop
cmpl
in
push
or
add
adc
add
ss
jbe
in
mov
rorl
add
clc
pop
repz
cmpsb
push
cld
pop
decb
cmp
sti
add
add
pop
mov
loope
aad
addr16
arpl
movsb
mov
xchg
out
fcompl
mov
outsb
inc
dec
cmp
dec
jo
popa
push
or
push
sub
mov
leave
and
out
and
pop
je
cmp
je
mov
mov
inc
add
push
pop
flds
daa
inc
fsts
jo
push
movzwl
push
adc
sub
test
cli
rorl
ljmp
test
test
jbe
push
test
dec
xor
xchg
in
mov
bound
sahf
jbe
out
or
pop
xchg
push
pop
mov
dec
cmp
add
fnstenv
cmp
inc
mov
or
mov
cs
das
lahf
std
or
js
push
inc
dec
ficoml
jl
mov
add
cmp
ja
or
mov
clc
rcl
rolb
dec
sbb
pop
add
lahf
xchg
sbb
ret
pop
mov
or
das
mov
sti
or
or
inc
mov
mov
pushf
push
sbb
pop
sbb
push
or
push
aaa
push
or
or
or
and
and
or
mov
or
mov
cmp
push
std
push
push
adc
adc
cli
movsl
adc
jo
cmp
ljmp
mov
insl
add
adc
shlb
sub
pop
aad
les
add
leave
jne
lahf
ret
pop
faddl
dec
or
js
dec
or
fdivrs
sbb
js
lods
std
xchg
or
outsb
inc
js
lea
adc
xchg
pop
dec
jne
mov
mov
mov
fnsave
mov
cs
push
je
mov
xor
fiadds
jecxz
shll
dec
cwtl
cmp
pop
mov
sbb
testb
je
dec
je
add
adc
or
pop
stos
push
and
jnp
mov
jmp
or
mov
add
adc
rcrb
add
inc
mov
pop
filds
xchg
sub
mov
ror
rcll
xchg
cltd
movl
mov
fwait
pop
xchg
imul
jmp
push
add
shr
inc
cmp
pop
shl
lea
push
or
stos
fidivs
aad
xchg
insl
push
xlat
pop
push
push
add
cld
clc
cmp
jg
pop
push
cmp
je
inc
jmp
and
ds
pop
cmp
fcmovnbe
push
push
cmp
pop
sahf
add
push
or
pop
mov
and
jnp
fsubs
jbe
sbb
lock
fisubs
inc
call
or
sub
lea
sbb
adc
fmull
jbe
ret
add
lods
dec
push
int3
jmp
sub
or
sub
in
lds
sbb
aad
test
sbb
cltd
xchg
loope
icebp
xchg
ret
lea
mov
arpl
xchg
nop
mov
xor
dec
push
cltd
sub
push
mov
insb
xchg
fld1
fdivrl
insl
add
rorb
inc
imull
bound
pop
or
or
jo
or
ja
and
ret
pop
cmp
jg
fiaddl
fwait
stos
stos
mov
sbb
scas
les
sub
and
jne
sbb
divb
dec
std
das
sub
sub
in
test
and
or
and
jg
enter
pop
les
enter
inc
pop
and
add
dec
je
adc
inc
ss
mov
push
xchg
inc
pop
mov
add
inc
test
mov
push
loop
ret
cmp
push
into
pop
push
xchg
sub
mov
adc
es
pop
outsb
or
inc
push
lret
mov
icebp
cltd
push
push
arpl
cmc
sbb
outsl
inc
lcall
and
xor
clc
and
lea
jb
mov
loopne
lret
jbe
jg
adc
mov
add
add
sub
and
ss
cmpl
sbb
test
out
sbb
inc
sbb
pop
fs
sub
gs
lock
sbb
push
inc
cmp
mov
mov
shr
mov
dec
test
or
push
lea
pop
lea
or
mov
mov
xchg
xchg
movb
add
nop
insb
test
or
mov
push
or
je
mov
das
je
dec
loop
push
sub
push
pop
sbb
xor
sahf
and
adc
orb
flds
stos
fwait
push
or
jnp
scas
or
or
dec
ja
jmp
cmp
jne
daa
or
sbb
adc
dec
add
cmp
pop
or
add
push
sub
mov
out
push
pop
jno
adc
idivb
adc
pop
sub
sbb
mov
add
sub
bswap
outsl
xor
ja
mov
mov
out
mov
xchg
push
cld
loope
nop
sbb
scas
sub
je
adc
mov
jne
add
sbb
jecxz
insb
push
incl
aam
mov
mov
cmp
subb
adc
sub
data16
add
sahf
nop
mov
jmp
inc
inc
cs
movsb
addb
jp,pn
push
imull
fimuls
inc
mov
sbb
xor
cmpl
and
mov
inc
mov
or
inc
dec
addr16
and
inc
sbb
mov
mov
enter
dec
dec
jo
aad
inc
or
ljmp
push
jp
adc
mov
or
jae
add
mov
adc
cmovge
xor
push
rolb
and
add
arpl
push
sar
push
cmpl
je
jle
outsl
jge
ret
adc
jns
cmp
xchg
mov
xor
out
sbb
fdivrp
sahf
and
bound
adc
or
pop
cmc
xor
nop
push
roll
add
xor
outsl
movsb
mov
inc
addr16
jo
adc
test
je
pop
dec
cmpl
fnstenv
sbb
aaa
cmp
in
loopne
mov
lods
cmp
pop
cltd
fcomip
pop
loopne
inc
enter
mov
bswap
pop
dec
cmp
into
and
std
lods
mov
enter
push
cmp
addr16
sub
or
shrl
pop
in
xor
lods
movsb
mov
adc
fnstsw
xorl
cmp
mov
mov
mov
cmp
xor
pop
push
loope
pop
dec
add
fdivs
je
pop
js
sbb
ret
sub
lea
int3
adc
or
inc
mov
lods
push
jnp
clc
add
sub
lods
push
lea
or
or
or
push
jle,pt
mov
js
orl
out
shlb
push
xorl
mov
mov
jle
pop
stos
push
popa
hlt
adc
cmpsb
sbb
and
push
adc
mov
mov
loope
cltd
cmp
loope
daa
dec
into
push
ljmp
adc
lods
add
ret
sub
pop
insb
lods
xchg
lea
sbb
or
add
adc
add
push
push
mov
sbb
inc
addr16
or
jo
pushf
push
sub
and
pushf
push
xor
jle
cmp
pop
inc
and
xor
test
sbb
outsb
aas
inc
mov
je
mov
or
dec
jo
in
je
imul
jne
sbbb
and
loope
and
and
mov
adc
lock
jne
stos
push
sbb
dec
mov
mov
sahf
sbb
cmp
push
push
dec
jl
js
inc
push
inc
cld
pushl
daa
add
dec
ret
dec
fsts
insb
cmpl
ss
sahf
push
cmp
dec
pop
add
or
or
and
in
insb
dec
enter
push
pop
ja
fiaddl
mov
mov
adc
hlt
sub
mov
inc
adc
test
inc
ror
xchg
xor
mov
cltd
decb
gs
jle
pop
xchg
sub
adc
inc
or
shl
or
xor
dec
les
mov
in
scas
out
dec
je
add
dec
sub
shl
neg
loopne
sbb
mov
or
sub
or
xor
sbb
inc
lea
sbbl
aad
mov
push
loope
or
jl
mulb
xlat
lret
cmp
inc
adc
loopne
mov
imul
xlat
insl
sub
enter
sub
xchg
fnstenv
sub
and
mov
sbb
add
and
mov
push
in
adc
mov
jecxz
push
dec
inc
dec
inc
pushl
aam
insl
sub
outsl
jnp
or
sub
pop
sbb
xor
adc
enter
popa
mov
cmp
pop
outsb
in
aaa
inc
imul
inc
and
add
and
mov
sub
jle
mov
xlat
daa
mov
mov
add
movsb
cmpl
add
jo
outsb
in
jge
gs
lahf
fs
pushl
pop
andl
add
add
add
ret
and
jo
inc
ror
out
ja
ja
jno
push
mov
push
jecxz
cs
mov
adc
aad
sub
push
add
mov
mov
or
push
or
xchg
dec
add
je
or
sub
dec
jge
popa
ret
jae
test
sbb
xchg
sub
sub
aaa
and
enter
in
call
sub
and
and
and
enter
or
dec
incl
push
rcrl
push
jb
ret
sub
fcomps
pop
inc
add
mov
mov
enter
adc
shl
add
inc
cmp
mov
icebp
fldl
jl
fiadds
xchg
lods
pop
push
pop
lcall
cmpsb
and
imul
js
push
sub
aam
fdivp
push
or
mov
in
add
ljmp
push
jns
adc
or
rep
andl
xor
sub
jb
icebp
sub
sub
push
pop
adc
fdivr
adc
enter
sahf
add
ret
mov
and
adc
rolb
or
add
stc
mov
test
xchg
inc
enter
dec
addb
add
scas
std
sbbb
add
test
pop
iret
add
lea
lea
movsl
movsw
push
out
push
in
lock
mov
subl
lea
mov
lods
inc
decl
cmpb
jne
mov
or
sti
jae
mov
mov
and
sub
jg
call
fdiv
fstpt
fbstp
add
mov
js
cwtl
stos
in
std
cmp
mov
out
ret
or
test
mov
push
xchg
lret
mov
je
sahf
mov
xchg
je
cmpl
jl,pt
sbbl
cmp
cmp
or
aas
jne
or
pop
cs
or
aad
or
out
dec
movsl
lcall
dec
fadds
jg
mov
rclb
adc
mov
cmp
jnp
add
push
and
jge
je
adc
aaa
arpl
or
insl
xchg
in
jnp
add
add
add
rcl
push
clc
dec
popf
adc
mov
test
insb
xchg
outsb
fdivr
add
inc
push
sbb
cmp
je
xchg
mov
enter
lock
jno
mov
lea
fwait
arpl
mov
movsb
clc
inc
mov
movl
mov
mov
cmp
add
pop
add
pushf
jle
mov
popa
adcl
lret
btc
stc
add
jl
jmp
add
and
and
lea
mov
sub
inc
sub
das
cld
cmp
fnstcw
mov
dec
test
out
and
or
or
and
es
je
jne
inc
mov
fdiv
inc
lods
mov
cmp
jbe
push
push
mov
xchg
adc
mov
je
mov
out
jo
cmp
les
xor
mov
add
mov
xorl
rorb
add
mov
inc
adc
fsubl
mov
xor
loop
jle
sbb
icebp
mov
jno
incl
mov
jg
loop
jle
mov
add
mov
add
neg
mov
mov
or
dec
mov
dec
jg
inc
daa
inc
int3
lds
xor
out
dec
ljmp
mov
pop
push
sub
push
shr
test
mov
sub
cmp
clc
pop
push
mov
mov
rol
dec
mov
cmp
lret
aas
scas
cmp
jge
mov
mov
mov
inc
inc
and
mov
bound
inc
cmpb
or
outsl
mov
pop
mov
sub
add
mov
push
adc
dec
or
cmpsb
addl
mov
mov
orb
mov
jg
mov
sbb
in
inc
adc
add
or
sbb
loope
add
jno
push
add
add
sti
jnp
roll
mov
inc
add
xor
shlb
mov
jnp
mov
or
pop
jg
ss
cmp
push
mov
jne
xchg
lret
jge
negb
ljmp
movswl
jmp
mov
ljmp
jge
mov
orb
or
jl
add
mov
lock
pop
pushf
lcall
adc
test
or
cmp
pop
jp
sahf
inc
shr
jl
cmpl
jne
jbe
cmp
mov
sub
inc
cmp
jg
lods
hlt
sub
add
sbb
mov
mov
or
divb
cmp
loopne
inc
clc
mov
add
sub
pop
push
pop
sub
jns
divl
leave
xor
or
or
add
xorl
cmp
test
add
out
outsb
mov
mov
movsl
sub
xchg
movsl
stc
incl
jne
test
je
mul
daa
das
in
mov
lea
adc
mov
or
cmp
decl
enter
jl
inc
pop
add
mov
int
push
or
pop
dec
xor
lahf
inc
sar
cmp
mov
mov
jle
mov
mov
sahf
sub
enter
subl
mov
xlat
inc
outsb
cmpb
dec
test
mov
add
xchg
push
mov
inc
inc
sub
frstor
push
pusha
xchg
add
andl
inc
adc
or
imul
dec
adcb
or
mov
les
pop
or
inc
inc
sub
jl
and
mov
cmpsl
outsl
scas
xor
or
jge
pop
pop
mov
xor
inc
dec
test
cmp
dec
push
arpl
mov
mov
movsb
and
fsubs
hlt
add
dec
inc
pusha
rcrl
push
xchg
es
ljmp
mov
mov
das
dec
sbb
push
mov
xchg
fxtract
cmp
cltd
xchg
sbb
cmp
cmp
inc
cmp
jge
jnp
movsb
lea
xor
adc
xor
sbb
xor
sbb
aas
adc
sbb
mov
dec
in
in
sbb
cmp
and
pop
mov
aaa
cld
dec
adc
jg
xchg
imul
sbb
leave
or
adc
cld
jecxz
xchg
jbe
inc
inc
and
subl
std
jns
mov
mov
mov
xchg
jl
xlat
xchg
sbb
and
ret
cld
or
mov
cmp
sub
and
dec
in
cld
and
imul
push
and
in
loop
dec
shld
in
call
stc
and
xchg
stc
js
mov
inc
pop
mov
adc
mov
sub
inc
sub
push
arpl
repz
or
add
jno
sbb
or
and
adc
test
xor
aam
inc
leave
mov
cmp
or
pusha
leave
cmc
inc
and
and
lcall
jg
mov
cmp
xchg
adc
xchg
or
mov
ret
mov
inc
lea
and
adc
push
les
push
push
sub
pop
adc
add
jbe
sub
add
push
sub
sub
jg
xor
sbb
or
mov
ret
ret
mov
lcall
sub
imul
hlt
jnp
mov
add
or
jmp
push
add
sbb
or
dec
xchg
inc
jae
jp
dec
pop
or
adc
or
jg
add
stc
or
dec
ljmp
mov
popf
cli
faddl
sbb
in
or
push
sub
add
bound
mov
cld
mov
jp
jns
jecxz
or
push
xchg
cmp
orb
push
push
mov
jge
pop
dec
jle
mov
iret
into
inc
call
sub
push
enter
fadds
test
add
test
dec
pusha
mov
pop
cld
in
add
adcl
pushw
jmp
pusha
add
nop
ror
andb
jp
mov
outsb
cld
xchg
jb
lea
test
test
pushf
and
aad
loopne
out
mov
jle
mov
sub
or
cmpsl
add
mov
imul
xchg
pop
mov
mov
sti
loop
sbb
mov
mov
repz
sbb
or
xor
decb
fwait
inc
push
lods
dec
pop
fisttpl
mov
add
pop
insb
jmp
mov
pop
test
dec
scas
shll
jae
mov
enter
roll
and
mov
dec
dec
dec
lods
xchg
gs
dec
lret
mov
xchg
or
lret
inc
sub
fcmovne
adc
in
sub
push
jg
mov
jge
imul
sub
mov
rcr
jb
es
inc
rclb
jp
jne
add
and
fs
lods
pop
and
xor
lret
les
push
sub
rcll
jns
les
and
and
and
hlt
cmp
inc
mov
imul
orb
fs
adc
ret
sbb
out
mov
lret
xor
or
fidivrl
aas
sbb
mov
fs
jns
add
outsl
fidivl
mov
inc
mov
and
pop
rorb
das
sar
sbb
xchg
cltd
das
enter
fldt
inc
pop
jb
pushf
lcall
mov
dec
mov
or
dec
in
and
pop
adc
xchg
ja
dec
aas
lea
mov
xor
rorb
xchg
dec
stos
cld
clc
jbe
je
jae
xchg
cld
mov
mov
addr16
loopne
pop
add
xor
call
mov
ficoms
mov
data16
xchg
push
test
movsl
push
ss
adc
pop
orb
lahf
adc
mov
or
mov
xor
ror
jl
xor
mov
dec
dec
lock
xor
int3
dec
cwtl
xor
adc
jmp
xchg
xchg
cld
mov
dec
jge
test
dec
hlt
sub
and
sub
sub
aam
and
mov
roll
mov
sbb
lret
orl
je
cmpl
push
pushl
and
jno
cltd
call
sbb
sbb
and
shrb
decl
xor
adc
out
cmpl
mov
xor
out
mov
stc
push
xor
mov
xchg
xchg
mov
pop
je
inc
xor
dec
data16
add
mov
std
mov
inc
mov
pop
jae
xor
push
jae
sub
sbb
cmp
lds
ljmp
out
sbb
or
mov
add
shll
inc
add
ss
popl
cmp
lock
in
into
popf
adc
xor
rclb
jne
xor
add
sarb
mov
outsb
lea
icebp
ffree
and
inc
add
dec
and
dec
adc
add
adc
mov
adc
insb
insl
inc
push
data16
mov
pop
fidivs
adc
dec
arpl
sti
xchg
adc
mov
xor
or
or
popf
sbb
insb
ret
push
cmp
cli
sub
pop
adc
sbb
shrl
fsubrs
pushf
or
and
or
add
and
jl
jne
xchg
mov
insb
aaa
pop
add
sub
push
lds
idiv
jmp
dec
cmp
lods
xlat
mov
ret
mov
inc
fdivrl
pop
xchg
dec
lret
xor
std
mov
cmp
or
push
nop
pop
popf
pop
inc
mov
repnz
jge
mov
inc
xchg
mov
inc
mov
xor
and
test
das
jne
push
sub
mov
mov
add
arpl
cmp
imul
mov
push
sahf
in
xchg
mov
mov
pop
jne
stc
std
push
push
jne
and
jae
push
cmp
add
and
enter
cli
push
push
roll
inc
subl
cmpl
sbb
in
push
mov
sbb
insb
leave
jl
pop
and
xchg
fs
in
ret
inc
scas
or
lea
mov
int3
adc
test
sbb
shr
pop
in
xchg
push
mov
mov
mov
add
out
jl
movsb
inc
add
pop
jbe
cmpl
call
cs
xchg
ljmp
sbb
mov
push
add
mov
outsl
in
pushl
push
mov
sub
cmp
sbb
jb
lea
icebp
ja
inc
lret
loopne
shrl
jl
iret
shl
inc
dec
cmp
xchg
push
jbe
jne
sbb
sbb
in
mov
inc
das
mov
shr
inc
cmp
push
clc
jle
jmp
sub
mov
and
ror
jmp
push
loop
push
pop
mov
mov
test
ret
pusha
stos
shl
xchg
or
lds
add
cmp
les
lds
in
pop
pop
cmp
ja
or
call
outsl
pop
sub
mov
mov
aam
imul
add
adc
data16
push
jo
in
sub
mov
xlat
lods
inc
jecxz
insb
dec
test
push
or
cmp
sub
aad
sbb
loopne
enter
pop
adc
incl
or
add
add
add
xchg
out
dec
std
inc
inc
shl
and
jp
scas
push
in
jb
int3
addr16
loope
mov
mov
pop
xor
lods
mov
mov
pop
sbb
sbb
push
jbe
adc
lods
cld
lret
ja
add
mov
adc
jne
fistl
push
ficompl
mov
in
push
icebp
mov
mov
add
fimull
pop
mov
mov
and
and
inc
cli
inc
mov
add
pop
push
sub
insb
and
ficompl
dec
and
mov
ljmp
or
pop
sbb
cmp
bound
sbbl
aam
mov
add
mov
pop
or
mov
adc
and
test
xor
jae
mov
ret
xor
sub
jl
add
lock
mov
add
inc
test
lods
mov
sub
mov
jb
and
jmp
or
aaa
or
sub
mov
adc
mov
add
cld
fwait
push
enter
inc
dec
push
add
pop
mov
adc
gs
and
jae
popa
adc
out
or
outsb
push
arpl
and
xor
std
sub
out
dec
inc
dec
dec
cs
add
or
je
jo
imul
gs
fbstp
push
xchg
xor
inc
jb
mov
add
das
in
add
stos
inc
sbb
inc
testb
imul
je
fistl
or
pop
addl
in
sub
mov
dec
fnsave
jns
int
pusha
fsubs
pop
push
lahf
fnstsw
or
jae
popa
mov
inc
out
outsb
popa
stos
lret
sub
or
gs
out
pusha
push
popa
arpl
jae
pop
inc
jbe
sub
pop
arpl
test
fidivl
adc
cmp
and
fwait
cs
dec
and
mov
jbe
push
and
jle
insl
inc
fs
inc
arpl
add
add
aaa
mov
inc
mov
mov
add
pop
add
inc
add
push
add
out
mov
or
inc
adc
dec
add
inc
add
mov
pop
pop
push
adc
push
add
imul
pop
adc
add
dec
add
sti
pop
mov
inc
pop
push
add
sub
leave
fstl
push
add
push
dec
adc
push
sbb
jns
jmp
xlat
dec
push
pop
and
dec
xchg
and
jnp
or
push
add
out
xlat
lea
add
pop
xor
jbe
rcpps
fildll
add
orb
cli
add
push
and
arpl
add
jne
dec
fisttpll
or
and
push
add
and
push
pop
xchg
sub
mov
addb
sub
fsub
mov
add
popa
add
xlat
dec
fsubrs
xor
jbe
fcmovnu
xchg
sti
sub
adc
jo
adc
testl
jmp
push
push
fsts
daa
outsl
sbb
das
sub
adc
popa
popa
fcoms
cltd
cs
scas
fwait
cmp
and
xchg
xor
xlat
sbbl
inc
dec
jl
jnp
lds
stos
sub
popf
mov
insl
or
ret
pop
jmp
bound
das
mov
add
pop
arpl
jno
das
cmp
gs
daa
and
shll
imul
lea
daa
gs
cs
or
in
dec
xorl
testl
icebp
popf
sbb
mov
and
xchg
inc
es
sub
ja
mov
mov
call
sub
jns
and
jbe
leave
shll
rcll
mov
pop
push
icebp
xorb
add
and
imul
imul
adc
cmp
inc
das
fsubs
loope
sbb
mov
outsl
add
or
or
jb
sbb
push
data16
push
out
adc
js
out
inc
fadds
sbb
stos
add
xor
xor
xchg
scas
cmp
jb
mov
mov
mov
add
add
push
pop
add
or
lea
outsb
shll
lret
bswap
add
and
scas
inc
dec
cwtl
in
cmpsl
lds
push
add
pop
jecxz
jne
push
fistpll
insb
sub
and
add
add
in
sbb
or
das
pushf
and
xorl
or
jecxz
fistl
xchg
xor
arpl
cmpb
rolb
xchg
adc
es
outsl
inc
pop
pushl
aaa
and
inc
inc
xor
in
jb
dec
or
dec
inc
push
mov
imul
mov
gs
idiv
add
mov
int3
test
jnp
add
add
out
shrl
arpl
scas
jnp
xor
inc
dec
nop
pop
sti
js
xor
dec
add
add
sub
and
cmp
imul
ss
xchg
push
pop
aas
or
test
movl
out
into
add
pop
cmc
jbe
popa
or
aaa
mov
inc
sub
addl
enter
or
fildll
cmp
inc
jecxz
jns
daa
xchg
shlb
or
mov
pop
push
mov
arpl
cli
and
sub
xor
sub
idivb
filds
jne
enter
adc
cmp
push
sbb
cmpb
into
mov
cld
clc
fbstp
pop
addb
jmp
adc
in
ljmp
outsl
mov
xor
push
stos
insl
fwait
stos
push
push
mov
mov
add
inc
cld
pop
test
aas
aas
clc
cmp
mov
gs
out
fnsave
push
outsb
mov
test
fstl
jae
push
push
ret
adc
dec
jg
dec
xor
in
stc
pop
mov
daa
add
add
add
inc
push
pushl
or
xor
push
out
xchg
inc
and
pushl
jnp
fstps
repz
mov
sub
jg
xchg
inc
sub
aas
add
addr16
incl
in
call
xorb
xchg
xlat
push
mov
das
incl
stc
es
ret
data16
in
jbe
xchg
shl
aad
data16
das
data16
jmp
xchg
adc
sub
and
and
jg
cmpsb
into
stc
pushw
adc
inc
adc
shlb
jmp
movsl
cld
mov
ljmp
aaa
in
in
adcl
call
xchg
bound
mov
nop
lods
pop
daa
sbb
inc
push
and
and
cld
daa
lret
mov
insl
loop
mov
mov
js
pop
sti
xchg
pushl
mov
call
cmp
push
std
fistpll
idivl
inc
xchg
lcall
outsl
jb
clc
push
repz
outsl
lcall
jg
out
stc
pop
jmp
dec
mov
pop
xlat
sbb
test
jmp
pop
pop
sub
cld
cmc
repz
mul
ljmp
notb
or
dec
insl
push
ret
jae
pop
add
push
clc
cmc
pop
inc
add
push
inc
inc
std
aam
fsubrp
jmp
fisttpl
pop
or
loop
scas
fbstp
sub
and
popa
movsb
lcall
jg
in
inc
test
dec
pop
push
test
repnz
shrl
mulb
das
mov
sub
lret
lahf
jle
xor
xchg
lahf
jb
nop
push
loop
jne
shll
lcall
fisttpll
roll
sbb
iret
jg
in
shrl
lcall
add
lock
loop
sti
leave
aas
popa
outsl
loopne
idiv
pushl
mov
or
add
or
std
ucomiss
lcall
inc
incl
repz
clc
lahf
das
ljmp
in
sti
jae
jg
in
dec
jo
dec
out
cld
out
divb
cld
sti
data16
out
sbbl
pop
pusha
jo
outsl
cld
ficomps
pop
adc
imul
mov
adc
call
xor
jge
out
pop
mov
fldcw
call
test
leave
or
ljmp
cld
mov
lods
leave
sub
stos
mov
in
pop
fs
ret
dec
ret
push
pop
mov
add
mov
inc
dec
inc
mov
negl
aam
mov
push
mov
jmp
and
cld
out
xchg
cmp
test
xchg
dec
or
hlt
push
out
adc
jecxz
or
hlt
mov
push
shl
lahf
sub
lcall
pop
ljmp
bound
out
dec
int3
cs
xor
adcl
decl
enter
jge
xor
pop
dec
out
and
dec
dec
inc
dec
inc
pop
ficomps
div
jmp
jmp
jecxz
jl
lea
in
mov
or
adc
fsubp
inc
inc
ret
inc
lcall
inc
mov
and
and
aam
daa
or
aam
out
push
lahf
jne
mov
cmpsl
fs
inc
int
std
push
movsb
jae
je
or
enter
adc
jecxz
sbb
xchg
negb
cltd
inc
push
aad
jae
ds
mov
jl
enter
dec
mov
call
cmpb
or
call
mov
inc
cmp
lahf
orl
pop
adc
pop
mov
ljmp
mov
xchg
addl
fcmovnbe
jl
inc
lods
in
sub
cmc
add
idiv
decl
and
testb
mov
icebp
xor
repz
test
mov
cmp
jle
imulb
jle
mov
repnz
sbbl
int
pop
and
cld
in
enter
mov
insb
lcall
fsubrl
fdivrp
ljmp
push
ss
sar
cmc
fidivs
imul
mov
xchg
fiadds
pop
mov
inc
gs
std
int3
inc
daa
or
cli
jne
mov
test
and
inc
call
xchg
mov
xchg
cs
mov
sub
adc
lods
jae
aad
pop
dec
jmp
ljmp
lods
push
xchg
dec
inc
and
out
or
push
out
daa
aaa
shll
lea
aaa
inc
sub
cmp
decl
dec
or
shl
mov
dec
add
and
idiv
out
jg
ljmp
dec
add
push
insb
mov
fwait
or
out
shl
stos
lcall
call
roll
aaa
sbb
add
cmc
push
jecxz
mov
mov
cmp
gs
xor
cmp
test
stos
mov
jmp
mov
stos
xor
test
std
sti
test
mov
push
fistl
jo
and
jg
jno
xchg
outsl
data16
mov
push
repnz
mov
dec
and
jecxz
pushl
incb
fsubp
push
mov
test
adc
add
cli
movl
sub
divl
loope
push
push
aas
movsl
mov
iret
cmpsl
mov
lret
incl
mov
loop
cltd
ljmp
repnz
ficoms
call
ret
rol
popa
or
arpl
xor
out
mov
inc
dec
test
xchg
in
repnz
jmp
add
in
push
testb
xor
in
or
mov
test
fnstsw
stos
push
pop
cmpsl
xor
bound
adc
xchg
adc
inc
push
push
mov
ror
lcall
pushl
push
jmp
mov
movl
lock
jg
js
frstor
imul
fstpt
inc
lock
pop
pusha
jns
test
sub
inc
jp
or
xor
fnstsw
das
and
add
shl
hlt
or
int
dec
cli
pop
cli
fistpl
test
seto
out
in
movsb
pop
adc
lea
fwait
push
aam
std
xor
sbb
int
sbb
jmp
mov
mov
mov
mov
inc
cmp
out
pop
test
sti
pop
test
xchg
and
and
or
lahf
aaa
sarl
xor
enter
aam
mov
add
lcall
cwtl
loopne
lret
cmpsl
sbb
inc
mov
jae
cmp
xchg
aas
push
or
in
dec
aaa
ds
mov
inc
addr16
jbe
pop
sahf
jg
jg
push
mov
stc
les
hlt
add
stos
fwait
mov
pop
decl
fidivrs
adc
adc
popa
jne
dec
mov
scas
popa
clc
out
fidivs
lcall
ds
cmp
pop
cwtl
add
add
xor
outsl
and
xor
pushl
push
add
push
cmp
and
arpl
enter
jmp
fisttpl
mov
jp
sub
mov
mov
das
cld
mov
cmpsl
fldt
cld
dec
sbb
mov
or
std
aad
lret
stc
addr16
mov
int3
push
imulb
pushl
aad
nop
imul
orb
aam
pusha
cmovnp
test
xchg
mov
call
rcll
fcom
shll
lods
jnp
stc
inc
rcr
fisttps
pusha
jle
mov
mov
fimuls
mov
dec
sbb
cmp
mov
psrlw
cmp
shlb
sarl
mov
std
mov
jecxz
pop
sbb
inc
push
xchg
fsubrs
lock
int
mov
in
sti
iret
hlt
push
out
xchg
and
test
movsb
push
sarb
fmull
cmp
loope
lret
and
jmp
in
and
jne
int3
xor
and
inc
adcl
fwait
jle
xchg
sar
cmp
scas
push
pushl
lods
inc
sti
push
pop
loopne
mov
inc
xchg
gs
lcall
add
or
outsb
cmp
int
leave
mov
insl
lret
jp
insb
cld
mov
mov
mov
mov
or
ret
iret
adc
push
outsb
add
pusha
jmp
jmp
adc
imul
outsl
xchg
cmp
stos
sub
cmpsl
or
cwtl
pusha
jmp
popa
inc
mov
xor
xchg
pop
iret
or
and
in
pop
push
aam
loope
mov
add
int
jmp
sub
je
sub
shlb
shl
xchg
jmp
clc
lret
aad
jmp
es
popf
sahf
ja
insb
mov
sar
ljmp
fs
ret
add
jge
jb
adc
jp
jne
enter
ljmp
adc
xchg
loop
test
jle
mov
std
ret
decl
fsubrs
jg
enter
mov
xchg
pop
add
push
dec
loope
mov
jg
jmp
fiadds
push
pop
out
in
loope
mov
jge
mov
adc
pop
cli
mov
pop
sarb
aas
adc
out
mov
push
mov
jmp
or
xchg
sub
leave
std
jl
in
cmp
mov
inc
mov
xchg
push
pushl
cmpsl
sbbl
les
xchg
lahf
dec
pop
push
aas
loope
push
inc
jmp
pusha
mov
adc
inc
leave
add
mov
and
insb
ljmp
or
jecxz
cmpsb
push
enter
xlat
mov
mov
dec
mov
cmp
jg
sahf
cmpsb
xlat
nop
xor
cld
stos
add
fld
and
xchg
outsb
push
int
xor
repz
sbb
jl
call
jmp
out
mov
leave
lds
or
inc
imul
pushl
scas
idiv
and
mov
push
or
stos
movl
push
mov
sbb
jmp
hlt
mov
mov
push
and
mov
xchg
mov
mov
aam
insl
neg
enter
jbe
and
jp
ljmp
pushl
es
adc
jbe
mov
pusha
and
and
jmp
dec
or
dec
hlt
mov
cli
filds
xchg
cmp
xor
adc
shl
fcoms
cld
jg
push
push
fdivrp
sub
mov
inc
sbb
xchg
mov
mov
fnstsw
aad
cli
mov
or
cmc
dec
jp
or
jne
rol
decl
icebp
daa
fdiv
xlat
shl
subb
push
cmc
icebp
mov
popa
sbb
in
pop
mov
pushf
subb
lock
cmp
cli
into
jmp
add
fsts
arpl
leave
adc
fcmovnb
mov
mov
sub
dec
pop
subl
fcom
inc
inc
int3
sub
jp
inc
inc
or
add
cltd
insb
inc
fists
jg
jmp
out
insb
sbb
jns
pop
insl
mov
sub
decl
scas
or
mov
push
mov
jl
dec
sar
dec
fmull
push
neg
jle
sub
addr16
sarb
lret
inc
sarb
mov
inc
mov
shrl
decl
push
add
loope
add
movsl
push
mov
mov
cmp
out
dec
mov
mov
in
lcall
cld
aaa
push
jle
sar
cmp
rcl
xchg
mov
mov
outsb
or
cltd
and
in
and
jnp
sbb
inc
std
mov
dec
ret
in
sti
or
lret
lock
mov
pushl
or
jne
out
sbb
xor
pushf
test
outsb
xchg
jb
sbb
outsl
std
dec
jbe
and
es
call
mov
mov
mov
sahf
and
xor
loope
lcall
sar
ljmp
sti
jp
fwait
mov
dec
shrb
inc
mov
inc
fchs
or
lock
mov
pushf
ret
aad
or
push
mov
push
dec
cmc
icebp
ljmp
mov
push
cmp
es
fildll
call
stos
mov
pop
das
sbb
push
push
cmp
clc
pusha
sahf
lods
cmp
inc
jl
dec
push
jecxz
sti
clc
push
cmpsl
dec
outsb
mov
cli
aas
pop
mov
mov
add
lcall
pop
or
mov
pop
lcall
push
mov
cmp
cwtl
mov
jb
jb
icebp
call
mov
loop
imul
mov
and
fucomip
ljmp
ret
enter
out
cmc
mov
xor
addr16
jmp
dec
sub
ljmp
iret
ror
pop
xor
mov
mov
in
fisubl
lea
pop
push
in
adc
rcr
and
cmc
inc
add
add
mov
mov
pop
jl
int
mov
scas
mov
xchg
shlb
jecxz
loop
sub
mov
xchg
loopne
inc
enter
mov
sbb
outsb
sub
xor
loopne
subb
xchg
mov
pop
push
ror
cld
xchg
lcall
es
data16
addr16
pushf
or
mov
ret
mov
dec
call
in
push
mov
icebp
pop
jb
inc
jnp
sti
and
jg
jmp
jb
test
sbbl
das
outsb
jg
mov
push
addr16
mov
std
sub
ja
inc
jae
jb
sbb
cmc
insl
je
add
ljmp
icebp
cs
lea
sub
scas
xor
out
adc
call
dec
jb
shlb
pop
subb
xor
jbe
into
sbb
fstps
jmp
push
shl
popl
mov
rol
cmp
and
mov
addr16
push
jno
je
mov
call
fwait
dec
xchg
rcl
popf
inc
imul
adc
ja
mov
orl
mov
mov
ljmp
aam
insb
mov
add
ret
aad
mov
pop
adc
gs
lds
andl
cld
fisttps
cmpsl
cmpsl
rorb
shrl
push
lods
ljmp
push
add
mov
pop
imul
dec
or
arpl
mov
mov
ds
mov
cmp
jb
pop
les
aaa
lcall
cld
jmp
mov
jne
fdivl
sub
sbb
xor
pop
xchg
loopne
jmp
xor
sbb
idivl
scas
dec
dec
fisubs
fstpl
lock
rclb
or
mov
stos
sbb
adc
dec
dec
adc
pop
loope
fsubr
cmp
rcrl
push
incb
popf
mov
xchg
jg
lcall
adc
out
pusha
mov
jns
sbb
rcrb
mov
pushl
mov
or
ds
outsb
repz
or
jmp
ficompl
aas
push
lea
test
leave
or
sbb
jb
scas
mov
cld
daa
mov
or
out
xorb
outsl
lock
aad
xor
push
outsl
aas
ret
enter
ljmp
ret
push
add
out
mov
loop
mov
stos
decl
xor
lds
push
xchg
jg
inc
mov
andps
mov
pop
js
scas
sbb
inc
adcb
incl
jb
cmc
cmp
rcrl
push
cmp
add
decl
push
cmc
test
cmp
cltd
imul
nop
add
xchg
cwtl
dec
fwait
adcl
xchg
incl
hlt
fwait
aaa
adc
add
xchg
mov
fcoms
ljmp
adc
inc
rcll
sbb
pop
add
decl
fucomip
push
inc
push
and
push
fidivrl
in
push
imul
lcall
ljmp
cld
xchg
dec
fcoms
add
adc
testb
cltd
sbb
loop
inc
outsb
sahf
xchg
inc
out
xchg
decl
xchg
push
xchg
jmp
jno
xchg
das
jns
fstl
insl
add
clc
ljmp
inc
nop
out
fwait
sarl
clc
and
lea
sahf
mov
push
shlb
xchg
adc
sbbl
pop
pop
in
dec
or
outsl
cld
mov
movsl
mov
pop
and
mov
jg
shll
push
daa
shr
rol
aaa
fdivrs
sub
or
in
pop
sub
dec
daa
mov
xlat
ret
out
push
imull
and
aaa
jmp
sti
lock
lock
call
xor
and
pop
out
sub
subb
pop
add
adc
decl
sbb
push
sahf
pop
mov
orb
fstpl
inc
mov
pop
imul
xchg
lcall
mov
sub
ljmp
sbb
inc
mov
pop
cmp
push
sahf
push
mov
push
repz
jmp
dec
gs
out
stos
cmp
xorb
mov
mov
fucomip
jg
out
adc
jbe
fdivrl
sarl
dec
sbb
and
push
dec
mov
lret
mov
out
lret
sub
in
pop
out
fstps
mov
mull
or
repnz
push
or
orl
jg
fsubr
add
orb
ds
or
push
sub
ljmp
lcall
aas
or
in
fistpll
mov
mov
into
stos
into
or
jo
out
mov
mov
arpl
andb
fdivrl
stos
stc
shll
pop
adc
jg
idiv
je
les
mov
rcrb
scas
ljmp
jg
xchg
push
xchg
pop
enter
test
cld
add
lcall
xchg
cld
inc
ds
mov
fistl
inc
sbb
aas
aas
fiaddl
sti
xchg
add
jns
std
decl
int3
mov
pop
pop
icebp
xchg
pop
or
mulb
stc
in
sbb
xchg
dec
lcall
pushl
add
inc
fnstsw
int
testb
divb
xchg
sub
push
push
cld
jmp
je
clc
lahf
mov
arpl
inc
xor
and
imul
or
dec
repnz
cwtl
mov
out
popl
or
sub
orb
mov
xchg
scas
stos
xchg
mov
cmp
lods
push
call
mov
lahf
sbb
xchg
jbe
xchg
mov
xchg
js
inc
xlat
in
mov
ljmp
sti
sarl
mov
rcrb
push
xchg
push
daa
inc
jge
mov
fdivr
jmp
cltd
pop
mov
add
mov
out
lret
mov
cltd
out
scas
xor
repnz
das
sar
pop
sub
sbb
jo
pusha
mov
outsb
jp
test
add
jmp
shlb
and
dec
xchg
int3
mov
mov
push
mov
mov
adc
cs
dec
push
lret
in
ljmp
lock
rolb
mov
mov
imul
xchg
xchg
fstpl
xor
test
dec
pop
nop
mov
ljmp
das
es
push
icebp
add
loope
repz
out
int3
and
inc
xor
cltd
pop
xchg
or
or
jnp
ljmp
arpl
jg
xchg
adc
inc
push
pop
and
scas
fidivrs
mov
lahf
in
jmp
loop
pop
iret
test
sti
ljmp
cmp
xchg
aam
adc
loop
dec
and
add
stc
outsb
mov
mul
mov
ljmp
lods
jbe
add
xchg
mov
out
sub
imul
pand
pop
inc
lret
mov
adc
incl
cmpsb
adc
arpl
test
xlat
sbb
mov
xor
decl
mov
or
xor
std
mov
pop
mov
push
add
cmp
push
dec
sbb
jmp
inc
push
inc
gs
insl
jb
ljmp
pushf
cld
xchg
clc
fsubs
pusha
fwait
xchg
inc
addr16
imul
jl
dec
and
ljmp
imul
scas
leave
lds
xor
mov
sbb
and
xchg
adc
lcall
cmc
pop
enter
insb
test
adc
dec
mov
int
pop
xor
push
pop
in
ljmp
incl
xchg
and
xor
daa
out
inc
add
testl
in
test
movsl
pop
jmp
or
inc
call
xor
xchg
in
jbe
in
filds
test
sar
std
dec
push
iret
stos
jl
pop
inc
mov
xchg
and
sti
jecxz
jge
add
lret
jnp
mov
push
push
cmpb
jnp
mov
lock
xchg
clc
inc
pushl
and
cmc
mov
adc
nop
pushl
inc
shlb
mov
fs
std
pop
call
dec
jmp
ret
inc
ds
in
sbb
fiaddl
jne
xchg
inc
fadds
ds
mov
pop
pop
call
adc
outsb
in
iret
nop
mov
mov
mov
mov
popf
adc
xchg
sub
es
sbb
mov
pop
inc
mov
repnz
arpl
jmp
sbb
sbbl
or
fdivl
mov
in
cmp
mov
dec
fstpl
add
pop
jecxz
jmp
pop
cs
imul
ret
test
sbb
imul
mov
jecxz
jo
xor
push
xor
rolb
pop
mov
in
adc
lret
cltd
and
dec
int3
sbb
icebp
decl
iret
inc
dec
add
mov
out
mov
xchg
enter
ljmp
movsl
js
sub
imul
xor
mov
or
adc
outsl
cmc
aaa
iret
or
mov
pop
clc
xor
dec
hlt
pushl
lahf
fwait
push
lds
push
ja
cwtl
cmp
in
sub
add
push
ljmp
arpl
sub
int3
jno
xor
lea
jg
mov
add
mov
fists
add
imul
mov
rolb
push
mov
shr
lock
movsb
out
dec
out
cmc
enter
pop
notl
leave
movb
test
decl
xchg
idivb
mov
cmp
mov
add
ss
call
mov
dec
dec
sbb
fnstcw
ja
xchg
cmpsl
lcall
add
jmp
ljmp
mov
jb
call
cmp
aaa
clc
jg
lahf
ss
lods
mov
mov
and
add
ljmp
and
fistpll
lcall
fidivrl
lods
outsb
shrl
xor
jae
arpl
push
je
jb
sbb
stos
pop
or
inc
test
mov
jg
decl
lods
pop
mov
pushf
call
addr16
mov
or
mov
dec
es
addr16
outsl
sbb
mov
jecxz
into
ds
xchg
xor
pop
xchg
fadds
inc
xchg
lret
fucomip
pop
ds
js
jbe
popa
hlt
xor
cli
inc
sbb
movsb
mov
sti
mov
push
movsb
mov
and
aas
jl
push
jge
cwtl
sub
mov
xchg
ljmp
out
ss
xchg
cmp
pushf
fstpt
mov
xchg
dec
addl
and
xchg
jmp
mov
mov
and
xchg
inc
mov
ljmp
out
inc
push
mov
mulb
pushf
pop
jp
lcall
int
loop
inc
enter
push
adc
or
adc
std
pop
sbb
lcall
jmp
je
dec
ss
lret
xchg
out
push
mov
ljmp
andl
lea
pop
hlt
lahf
jmp
mov
sbb
add
xchg
movsl
jg
pushl
jb
imul
mov
mov
mov
or
sub
repz
xchg
lea
dec
movups
in
outsb
neg
call
mov
cmpsl
jns
mov
popf
hlt
test
xchg
pop
out
inc
test
and
jae
out
je
xchg
icebp
mov
or
sar
mov
cmp
orb
out
cmp
popf
negb
mov
aaa
loopne
mov
sub
sbb
insb
xor
arpl
dec
aaa
stos
int
or
jmp
xlat
lret
pushf
xor
fistpll
pusha
test
jg
pop
or
adc
sti
jg
ret
mov
les
add
gs
sbb
jge
hlt
je
rorl
js
ljmp
das
adc
mov
or
mov
jns
pop
jno
inc
and
push
imul
jbe
stos
fstpt
sub
cmp
nop
test
out
cmp
pop
ljmp
xchg
test
xchg
dec
test
cli
mov
mov
pop
lcall
jae
popl
loope
push
cs
decl
mov
stos
add
test
mov
jmp
add
jl
addl
push
sub
test
leave
jp
sub
dec
push
mov
daa
pop
sar
mov
movsl
dec
mov
pandn
mov
and
pushl
mov
mov
mov
add
mov
mov
std
fucomi
rcrl
outsb
outsl
jp
hlt
xchg
aam
outsb
xor
cmc
push
rcr
sub
lcall
xlat
mov
mov
imul
jecxz
jne
mov
enter
inc
decl
idivb
sbb
lods
enter
mov
mov
das
std
das
cmc
cld
adc
aaa
push
scas
cmp
ror
push
jmp
bound
roll
jge,pn
data16
jle
cmp
scas
jle
mov
add
icebp
std
test
test
mov
push
andl
mov
pushf
mov
mov
loope
jge
or
loopne
dec
mov
sub
call
call
lods
mov
add
mov
add
out
or
arpl
lock
fwait
scas
and
in
mov
adc
push
rcrl
ss
aad
clc
pushl
push
xchg
call
and
sbb
jge
lret
movsb
outsl
push
pop
in
jge
inc
loop
lock
mov
rcl
sbb
shrb
dec
dec
sbbb
outsb
and
inc
pushl
js
sub
in
jmp
or
repz
mov
cltd
pop
jb
cmp
jg
cmp
int
pop
in
push
mov
nop
xchg
or
fdivrl
xor
mov
cmp
loope
hlt
das
sub
notb
adc
lock
scas
xchg
aas
incb
jnp
imulb
cld
sub
sbb
into
cmp
push
cmc
mov
pop
xor
loopne
lock
and
scas
push
jl
dec
pusha
shl
dec
cmpsl
rclb
lcall
jecxz
xor
loopne
icebp
loopne
sti
cld
mov
push
jmp
bnd
je
stos
jb
testl
mov
xchg
sbb
xlat
push
add
fsts
dec
jno
lock
and
xchg
or
jno
push
sbb
inc
rorl
xchg
outsl
pushl
arpl
mov
adc
mov
andb
xor
and
inc
jns
aaa
scas
pop
rorb
in
push
xchg
subl
loop
push
lock
fsub
xor
fcmovu
incl
test
sub
aam
lret
sbb
jo
inc
jno
mov
jmp
mov
enter
add
dec
out
mov
pop
cld
cli
fimuls
ljmp
aad
ret
add
sahf
leave
or
adc
pop
inc
xchg
xchg
outsl
xchg
sbb
lcall
jmp
repnz
and
aaa
xchg
xor
ret
rep
in
pop
das
std
decl
lcall
addr16
mov
daa
dec
popf
mov
test
ljmp
fsubl
mov
fidivrl
dec
testb
or
hlt
mov
test
lcall
sub
inc
jne
adc
shlb
xchg
push
loop
mov
sub
arpl
mov
mov
push
ss
pop
pop
or
mov
push
or
fdivrs
cmc
je
clc
pop
inc
sbb
ss
lea
jp
or
xor
lahf
and
stc
sti
mov
lcall
ret
pop
pop
outsl
adc
mov
jmp
or
xor
call
mov
pop
jae
xor
stc
test
lcall
rcrl
mov
shl
add
jae
cmpb
aas
sbb
xor
sbb
mov
ret
inc
pop
mov
push
add
out
pop
jge
ljmp
lds
jmp
imul
sbb
sub
in
es
pushl
jge
pusha
push
in
enter
mov
or
xlat
xor
into
data16
call
dec
inc
inc
mov
das
outsl
int3
fldenv
cmpl
mov
scas
jns
dec
dec
ljmp
dec
ror
int
mov
ror
xchg
jle
and
gs
sti
push
ljmp
xor
divb
insl
push
pop
jno
ror
aam
in
pushl
sub
ja
shl
pop
mov
stos
rorb
test
call
shlb
sbb
jge
jge
js
dec
lcall
pushl
mov
jecxz
sub
stc
add
push
pop
cli
jmp
mov
shll
shl
popf
sub
pop
add
ljmp
fcomi
mov
fistpll
xchg
mov
cmp
push
scas
jle
mov
movsl
cltd
mov
xchg
gs
lidtl
scas
sahf
jbe
xor
jle
popa
in
mov
insl
jp
jg
cmpb
aas
addr16
or
jecxz
les
cmp
mov
cmp
jne
lret
mov
repz
jl
setp
insl
jg
fildl
push
mov
lcall
push
cmp
ljmp
lcall
mov
pop
and
das
out
dec
mov
jge
dec
lods
rcll
repz
cmp
sbb
dec
cli
bound
pop
jne
sbb
dec
in
pushf
in
dec
pop
imul
inc
lock
shrb
mov
insb
ja
bound
clc
pop
clc
lahf
sarl
mov
rolb
and
jl
adc
pushl
sub
sarl
or
fcmovb
std
xlat
cmp
mov
mov
inc
std
shlb
push
jg
fstpt
and
addr16
loope
fwait
iret
enter
clc
dec
mov
mov
mov
mov
pop
or
cld
pushl
xor
shrb
arpl
xchg
adc
jne
pop
adc
ljmp
nop
out
inc
push
sti
xor
js
mov
xor
push
andb
incl
cmp
xor
das
pop
sarb
pop
int
sbb
mov
mov
push
add
insl
xchg
inc
lcall
clc
jg
dec
iret
call
mov
xchg
lcall
pop
cmpsb
sub
lcall
icebp
insb
inc
dec
dec
lea
popa
fisttpl
sbb
shrb
das
mov
mov
lds
xchg
push
xchg
xchg
or
jmp
imul
fs
sarl
mov
call
pop
inc
and
out
mov
out
popa
xor
jmp
mov
fldcw
mov
or
imul
notb
ret
mov
call
decl
ret
pop
sbb
lea
repz
fildll
fisttpl
mov
incl
adc
sub
mov
push
xchg
jae
jnp
cmp
sub
xchg
lret
mov
fwait
jecxz
mov
sahf
add
and
jg
push
mov
jns
shll
das
cmc
pushl
out
mov
cwtl
dec
mov
cmp
sub
adc
pushl
cli
divb
pop
and
and
mov
xchg
pushf
pop
or
clc
fbstp
mov
dec
dec
sahf
fcmovnu
cmp
sub
mov
jmp
mov
or
adc
loopne
int3
ss
add
fcomi
cmp
incl
roll
stos
fwait
lcall
js
ljmp
sbb
sub
std
in
ljmp
shrl
and
adc
and
scas
dec
push
xchg
das
cmc
incl
dec
mov
sarl
jge
xor
dec
jp
test
popa
fsts
decl
decl
or
cltd
jb
stc
ss
popa
rcrl
sbb
mov
clts
cli
das
lock
push
aaa
andl
test
mov
idiv
sbb
lds
lcall
add
sbb
lcall
xor
mov
push
add
sbb
cmpsl
inc
dec
incl
sub
test
adc
imul
sbb
cmpsb
cmpsl
or
dec
test
add
sub
add
push
jp
ja
inc
push
inc
fistpll
pushl
cli
call
xchg
mov
in
fisttpl
aad
lods
xchg
call
test
push
cmpsb
in
sbb
imul
lock
jecxz
mov
adc
jg
cmp
loope
push
pop
jmp
dec
daa
sbb
mov
xlat
push
inc
sbb
mov
mov
insl
xor
mov
dec
pop
cli
decl
fisubrl
cltd
push
jle
inc
pop
push
repz
push
cmpsb
nop
icebp
ret
incl
popf
jle
xor
ljmp
or
sbbb
xor
fnstsw
jg
cmp
or
hlt
daa
movsb
fiadds
jb
push
fimull
int
in
or
cld
mov
or
push
inc
jp
add
pushf
outsb
cmp
cli
adc
int
dec
aad
add
pop
loop
jnp
xor
ds
outsl
cld
incl
scas
jns
and
jbe
insl
mov
add
xor
lock
incl
andl
or
or
or
pop
and
outsl
in
or
sbb
pop
aad
idivl
in
adc
decl
std
pusha
ror
inc
mulb
out
rol
xlat
push
pop
imul
ror
fnstsw
dec
fst
pusha
bound
mov
pop
push
cwtl
lods
cmpsl
or
pushl
or
ss
addr16
ljmp
sub
lea
ljmp
sub
push
xchg
sar
orb
xchg
int
inc
scas
lds
pop
call
fimull
jmp
inc
dec
pop
pop
loopne
push
inc
sti
mov
or
jg
leave
test
push
int
sahf
mov
daa
loope
lods
mov
cmc
mov
pop
mov
adc
mov
mov
bound
sbb
cmc
rcl
xchg
int3
clflush
and
js
xchg
mov
jns
rcrl
sbb
sub
fdivrs
cmp
rol
ljmp
icebp
outsl
push
xchg
cld
jmp
cltd
push
addr16
xor
lret
lock
add
mov
pusha
pop
nop
mov
rcrl
shrb
pop
out
jmp
sub
or
cmpsb
inc
stos
jne
xchg
xor
aaa
dec
jecxz
cmc
shld
les
push
fdivl
ljmp
loopne
jo
and
add
sbb
jge
sbb
dec
pop
rcrl
leave
aam
call
in
lahf
imul
ret
mov
flds
pop
mov
and
sub
lret
roll
mov
test
incl
fnstsw
mov
dec
adc
into
mov
psraw
call
aad
fidivrs
mov
repnz
dec
pop
inc
mov
inc
repnz
out
cld
pop
std
mov
cmp
or
les
dec
cmp
adc
pop
lret
insb
es
dec
repnz
rcrb
cmpsb
incl
pop
loop
iret
pop
mov
fs
cmp
jnp
lods
pushf
imul
pushl
and
jno
mov
jmp
xlat
mov
xor
push
push
or
xchg
fucomip
inc
add
rclb
jg
jl
insl
sahf
dec
lcall
mov
mov
sbb
lds
add
lock
xchg
push
jmp
popaw
sbb
pop
dec
adc
sti
xchg
movsl
cwtd
inc
push
cmpl
ss
cli
incl
mov
aad
xchg
xor
or
mov
xchg
loope
arpl
repnz
cwtl
ss
int
outsl
jle
out
movsl
add
sbb
lcall
orb
stos
std
inc
iret
cltd
jns
mov
lret
mov
hlt
jbe
outsl
lods
jg
pop
clc
fists
pop
cmp
jbe
or
sti
jle
add
lcall
pushl
pusha
jbe
lcall
mov
lcall
mov
push
adc
orl
add
incl
pop
cld
xchg
out
cmc
nop
sub
test
decl
rclb
stc
stos
fimuls
cltd
stos
ljmp
iret
mov
jg
jmp
movsl
fdiv
push
testl
frstor
mov
enter
test
addr16
pushl
test
test
out
pop
add
push
pop
cld
fstps
stos
mov
cs
icebp
decl
lret
rcll
enter
cld
ror
jecxz
jmp
jnp
lahf
cmp
add
aas
stos
xchg
add
aam
fnstcw
jl
push
aad
imul
aad
inc
es
cmpl
cmp
out
lods
aad
decl
cmc
cli
push
jmp
xchg
fidivs
fdivrs
dec
ljmp
das
cmp
pop
mov
mov
jae
xor
add
jg
test
jns
lcall
repz
jae
loop
inc
lcall
inc
ret
jno
push
incl
add
jl
ljmp
cwtl
jne
cwtl
jae
int3
xchg
add
iret
jne
jmp
jg
mov
sbb
cmp
insb
ret
jne
imull
mov
outsb
loope
into
notl
int3
mov
mov
and
negl
jle
std
incl
incl
jb
loop
outsl
mov
out
es
push
cmp
xchg
mov
mov
push
lret
adc
cmp
and
cli
adc
mov
push
fstps
or
dec
pop
sub
shrb
xor
call
cmp
cmpsb
pushf
mov
inc
je
into
daa
jbe
xor
mov
jge
loop
or
inc
mov
fcoml
in
push
jge
jg
in
cmc
leave
push
pop
mov
mov
les
into
outsb
pop
les
sahf
lret
and
std
ljmp
adc
inc
mov
dec
cli
cs
ds
mov
enter
sbb
incl
or
divl
enter
lea
leave
add
mov
adc
jnp
mov
mov
out
xchg
pop
adc
add
ss
mulb
mov
loop
cmp
shll
mov
mov
xchg
lds
movsb
rcrb
mov
cmc
push
mov
jmp
dec
add
and
inc
insl
or
mov
or
mov
pushf
inc
fldenv
xchg
int
sub
lods
mov
add
les
repnz
jg
push
int3
shrl
adc
xchg
lcall
xchg
cmp
jg
cmp
fisubl
daa
push
pop
testl
or
call
dec
dec
outsl
cmp
xchg
sub
inc
pop
mov
cmp
mov
pushl
icebp
or
jns
sub
out
lds
gs
jmp
ja
pop
ljmp
sbb
das
pop
lahf
das
mov
adc
jmp
loope
sub
test
xor
xchg
shlb
call
sub
ljmp
jmp
divl
mov
inc
push
mov
sub
lcall
mov
jg
cmp
fdiv
jnp
mov
rcrl
lods
xor
test
repz
lcall
call
xor
or
lcall
push
divb
aas
mov
lods
call
pop
xlat
mov
dec
stos
dec
test
flds
inc
data16
fcmovnu
aas
xor
std
insl
mov
xlat
xchg
sub
push
adc
jae
pop
mov
pop
push
push
ja
adc
pop
pop
push
jge
mov
aam
push
test
cmp
and
mov
not
mov
fistpll
jnp
frstor
adc
imul
mov
dec
ljmp
inc
mov
imul
movsl
fiaddl
jp
mov
mov
push
xor
out
pop
xor
sahf
jg
lods
mov
adc
cli
outsl
in
ds
je
xchg
lea
addr16
mov
call
mov
cltd
pop
aas
xor
imul
pop
fs
std
pushf
lcall
cld
mov
cmp
dec
iret
lods
sbb
iret
fmul
sbb
sbb
jmp
mov
cmp
sbb
iret
orb
or
and
pusha
ljmp
jb
lahf
inc
mov
lcall
lret
dec
sub
mov
aas
insb
sti
inc
mov
jnp
pusha
or
ljmp
sub
push
repnz
xchg
movsb
add
adcl
shll
mov
ljmp
and
repnz
std
push
sub
imul
in
fnsave
sti
pop
fcompl
repz
xchg
cmp
fldt
movsl
cmp
lock
xchg
jnp
icebp
lcall
pop
or
cwtl
fs
into
cli
fildll
push
pusha
xor
cmp
ljmp
imul
insl
je
fs
sbb
jg
jne
sbb
mov
jns
lods
movsb
gs
fiadds
jg
filds
shr
sbb
and
mov
imul
das
ret
decl
int
clc
xchg
cmp
mov
test
mov
ss
or
lock
decl
into
in
adc
call
repz
cwtl
or
xchg
cmpsl
call
xorl
xchg
mov
icebp
pop
mov
push
xor
into
cmp
cmpsl
mov
icebp
jl
lcall
loope
repz
call
ljmp
cwtl
mov
dec
cmp
test
outsl
mov
outsl
and
sub
ret
dec
popa
push
adc
lret
stos
in
mov
repz
lcall
mov
addr16
xorb
mov
ret
xor
jmp
pop
add
ljmp
das
mov
les
jne
xor
mov
daa
push
mov
sbb
fildll
sub
cwtl
sub
adc
and
inc
mov
in
decl
hlt
xchg
cld
pushf
push
add
or
roll
jecxz
sbb
out
lcall
inc
std
ficomps
fldt
push
ss
mov
loop
call
ljmp
xor
icebp
mov
mov
jae
push
addr16
sub
jp
mov
lcall
push
stos
jnp
scas
stc
sti
pop
mov
push
rcr
cmp
ret
int3
outsl
int
lcall
test
lret
test
enter
leave
std
int
jae
mov
mov
std
pop
call
jecxz
mov
cmp
mov
and
ljmp
inc
lret
sarl
and
mov
lcall
clc
push
sub
mov
cltd
scas
pop
xlat
mov
xchg
xchg
aad
leave
push
mov
lods
into
icebp
pop
mov
xchg
pop
popf
xchg
test
int
add
fsub
incl
je
mov
dec
mov
data16
cmc
fistl
or
sbb
adcl
outsb
dec
or
repnz
arpl
inc
adc
insb
mov
dec
subb
stc
fstl
jmp
cmp
cld
dec
pop
mov
cmp
jp
jge
sti
out
mov
xchg
add
jg
pop
cld
inc
das
outsl
aaa
mov
fadd
test
dec
dec
or
sbb
incl
jno
je
iret
cwtl
bound
int
aam
es
xor
cmp
jg
cmp
mov
xor
sub
call
and
pusha
test
cmpl
mov
mov
ljmp
fidivl
rcl
movsb
imul
jno
decl
xchg
jmp
jno
xorl
sarl
out
add
fimull
lcall
aam
dec
pop
pushf
add
mov
cmpsb
push
adc
jg
call
cmpsb
imul
lods
gs
in
stc
popa
fucomp
xor
inc
decl
add
and
cmp
pushf
push
push
jns
mov
xlat
sub
divl
ljmp
push
out
movsb
cmp
or
stc
shlb
rcr
aaa
cli
pushl
movsb
mov
sub
or
rclb
test
outsl
or
xchg
lcall
popf
andl
cmp
xchg
inc
cmp
ljmp
lds
repz
loope
jno
and
mov
in
or
pushl
add
decb
jmp
repz
pusha
mov
outsl
addr16
jg
dec
mov
lret
shll
into
je
rorb
and
lahf
outsb
std
call
mov
pop
mov
fistps
pop
shl
lods
dec
cmp
push
pop
push
loopne
dec
sub
xchg
movsl
sbbb
mov
sahf
scas
ljmp
call
jmp
dec
jle
or
sbb
xor
mov
push
mov
cmpsl
adc
mov
push
aad
push
icebp
out
call
xor
adc
test
xor
ds
mov
filds
dec
fcos
sbb
decl
cltd
and
or
int3
xor
xchg
outsb
scas
ja
mov
add
lcall
ja
lcall
inc
jae
in
out
or
cmp
mov
jne
jmp
dec
xor
imul
mov
fcmovnu
dec
mov
inc
adc
int3
dec
popf
jmp
stc
inc
hlt
mov
call
ret
shll
sbb
add
dec
les
dec
jecxz
stos
dec
cmpb
mov
or
lea
int
lea
nop
repnz
jle
adc
xor
mov
jmp
cmc
cmp
cs
adc
ljmp
jmp
xchg
iret
test
iret
pop
pop
add
out
clc
mov
das
out
jg
mov
ret
mov
adc
outsb
xchg
pop
test
lock
mov
lods
sbb
sub
and
mov
out
inc
jge
gs
sar
call
push
int3
push
das
fsts
scas
aam
xor
mov
dec
decl
shlb
pop
jne
lcall
shr
sub
pop
mov
jge
add
lcall
push
out
inc
inc
cli
cmp
test
ficompl
jbe
xor
aaa
imul
test
loopne
mov
xor
cld
incl
addr16
nop
pushf
dec
cltd
es
push
add
test
mov
lock
jbe,pn
int3
aas
test
sbb
gs
push
xor
js
push
mov
or
mov
testl
mov
mov
jnp
jge
mov
jns
xchg
ja
incl
mov
add
pushf
loope
xlat
add
lahf
mov
shl
daa
add
incl
pop
lret
pop
pop
pusha
into
mov
sti
mov
jmp
lahf
dec
ja
pop
insl
stc
insb
and
cmp
inc
int3
enter
enter
loope
jb
incl
xchg
xor
mov
test
stos
sbb
scas
mov
inc
adc
mov
and
rclb
or
xchg
scas
pushw
shll
stos
ret
dec
inc
aam
les
ficomps
in
jp
or
inc
pmaddwd
test
xchg
jne
das
mov
xor
js
addr16
insl
scas
dec
inc
loope
pushl
fadd
sbb
jnp
fidivrl
fstpt
pop
dec
cmp
push
jl
incl
outsl
orl
push
adc
or
clc
mov
incl
movsl
fildl
inc
inc
stos
sbb
pop
pop
out
mov
jg
shl
fnstenv
test
push
mov
push
sbb
lock
inc
fmuls
sbb
mov
pop
dec
cmp
rcll
les
jg
mov
push
cli
call
cmp
leave
xchg
pop
ljmp
xor
jne
gs
mov
dec
aam
or
popw
jp
ss
inc
insb
jno
jg
jmp
push
pop
cli
dec
fmull
pop
inc
push
mov
repnz
ljmp
out
aaa
adc
adc
xorb
icebp
lcall
vfnmsubpd
aas
push
pop
outsb
cmp
sbb
stos
sti
lods
test
ljmp
pushf
hlt
xchg
adc
loopne
jecxz
outsl
std
jnp
stc
jno
out
fcmovne
or
movsl
stc
pusha
xchg
mov
int
cmp
stos
mov
or
mov
inc
ljmp
mov
aaa
sub
jecxz
lods
std
dec
adc
sar
lcall
dec
dec
in
mov
imul
push
adc
std
lds
out
xchg
int
dec
cmp
mov
add
cmp
xchg
call
adcb
and
add
dec
adc
jg
mov
push
cmc
movsl
lcall
outsl
dec
into
sbb
scas
je
inc
mov
mov
pop
int3
inc
fstpl
iret
hlt
fcompl
lea
aad
ljmp
hlt
ljmp
pop
ss
ficomps
pop
js
inc
inc
xchg
xchg
inc
test
scas
mov
push
cmp
lods
dec
mov
js
imull
ss
xor
add
inc
add
fucomip
fildll
jp
xchg
mov
mov
fldl
push
inc
add
push
scas
leave
fldenv
sbb
pushf
outsb
xor
lahf
in
adc
inc
dec
rcrb
or
aaa
decl
das
sbb
cltd
sbb
jo
lock
pushl
sub
int
pop
aas
cmp
shufps
or
stc
inc
popf
pop
and
push
sub
ljmp
scas
stc
ds
mov
jno
shlb
push
inc
stos
xchg
push
xor
sbbl
incl
incl
and
xor
test
pusha
sub
push
lock
or
mov
push
mov
cld
or
dec
jno
mov
mov
mov
out
leave
inc
mov
sub
mov
push
inc
imul
incl
aas
jns
mov
jno
cmp
and
fs
sti
or
ds
out
xor
fnstsw
call
lock
int3
cmp
lock
fisttpll
insb
ss
mov
pop
xor
sar
mov
adc
fcomi
adc
incl
inc
and
mov
push
jnp
rcr
ret
cld
ljmp
push
fwait
dec
lret
pop
aaa
jle
mov
loop
and
push
xchg
test
js
testl
loop
xchg
push
call
mov
lcall
loopne
jge
cmpsb
arpl
mov
mov
or
ret
out
paddd
push
in
xlat
jl
push
into
outsl
and
ljmp
fcomi
lods
or
push
inc
xchg
xchg
push
int
call
ficomps
and
cld
lds
incl
pop
std
sub
mov
mov
ja
in
adc
fidivrs
add
mov
pop
loop
and
lods
setge
enter
xchg
popf
mov
loope
mov
mov
mov
cli
pop
insb
xor
fldl
incl
jge
nop
mov
sbb
jecxz
pop
cmc
push
pop
lcall
inc
loope
pusha
and
gs
sbb
xorb
add
ljmp
xchg
sti
mov
scas
js
in
ror
in
les
in
or
enter
cli
sub
push
mov
jl
hlt
ds
sub
sar
pop
loopne
insb
add
sahf
daa
insl
fildll
jno
fidivrs
adc
incl
icebp
jo
subb
cli
xlat
aaa
cmp
push
pop
jmp
mov
pusha
push
pop
out
sub
aam
inc
push
pop
test
mov
pop
xchg
rcl
insl
ret
fucomip
call
cmp
roll
mov
xor
shll
pop
xchg
mov
pop
movb
jmp
xchg
cmp
sbb
scas
sahf
xchg
iret
adc
incl
rolb
movsb
mov
or
mov
sbb
sti
shl
push
addr16
movsb
and
pusha
mov
cs
lret
push
rol
mov
mov
test
decl
cld
pushf
dec
nop
and
cmp
jecxz
es
inc
scas
xor
popa
cmpsl
call
shll
fsubrp
xor
sbb
outsb
and
xor
daa
out
lea
adc
stos
adc
leave
clc
sub
inc
filds
outsb
lret
pop
lods
scas
into
or
or
jbe
add
cmp
mov
dec
cmpsl
imul
outsl
inc
decl
jmp
int3
add
inc
xor
test
sub
je
lods
adc
cmp
cmp
ja
push
pop
jle
jb
movsl
inc
loope
cs
fldt
pop
jbe
dec
or
mov
call
sub
fildl
sbb
call
mov
mov
mov
mov
out
lods
jae
pop
in
mov
mov
cwtl
stc
or
mov
pop
jge
mov
push
and
jns
mov
fwait
loop
fwait
enterw
ds
fnstcw
jb
in
lret
loopne
stos
cmp
in
push
jmp
incl
adc
or
loope
subb
daa
cltd
cmp
call
sub
push
push
pop
test
divb
mov
add
call
incl
nop
imul
in
in
enter
cmp
das
clc
mov
insl
pop
adc
call
xchg
fcompl
push
pushf
in
cmc
jg
aaa
pop
aad
cld
ja
sub
mov
stos
cmp
fistps
std
sub
dec
mov
inc
mov
insb
mov
data16
lcall
aas
mov
rorl
xchg
or
cmp
jecxz
adc
adc
add
lcall
lea
bound
dec
xor
dec
js
pushf
cmc
sbb
mov
popa
lahf
loop
or
fnstcw
cli
in
mov
or
adc
mov
or
mov
pushf
pop
or
rol
jo
lret
movsl
lods
or
jne
inc
adc
fs
sbb
pushl
je
pop
add
adc
mov
mov
in
xor
icebp
out
cltd
cwtl
mov
imul
mov
aam
cmp
lcall
incl
sahf
push
dec
stos
dec
rolb
inc
xchg
imul
cmpsl
adc
daa
pushl
jmp
jb
pushl
int3
out
jle
mov
adc
clc
fisubrs
mov
jne
dec
mov
mov
xor
jbe
lds
ljmp
js
inc
mov
fbld
push
xor
icebp
fdiv
inc
notl
push
adc
decl
ds
pop
push
les
mov
mov
lods
jne
push
adc
ljmp
out
push
loope
fadd
dec
sbbb
xchg
xchg
pop
push
pop
inc
lcall
shr
dec
xor
fildll
arpl
fiadds
daa
ds
fcoms
pusha
dec
aaa
in
imul
inc
push
add
lcall
sbb
jo
cld
test
push
cwtl
cmpsb
mov
push
ja
in
add
add
call
or
cmp
push
cwtl
mov
xchg
xchg
ds
inc
lahf
mov
stc
add
mov
push
jg
adc
mov
imul
sub
decl
lahf
int3
lods
iret
fwait
lea
das
mov
ss
idivl
mov
xchg
xchg
call
jno
mov
xor
add
imull
adc
push
out
lods
lret
das
mov
push
lahf
fs
jecxz
dec
inc
xchg
das
fldt
adc
jne
pop
clc
jmp
movsl
je
push
popa
scas
not
movsl
test
incl
pop
sub
adc
sub
iret
ret
lea
xor
fsubrl
fdivrl
cli
ds
sbb
dec
xchg
inc
pushf
lret
sbb
jbe
cmp
test
inc
inc
call
scas
sub
adc
jne
jl
aad
enter
jae
call
mov
movsb
add
gs
loopne
fwait
test
fisubl
fisttps
loope
dec
filds
nop
fdivr
push
incl
or
imul
aam
call
add
incl
push
mov
call
in
mov
inc
jae
mov
jno
icebp
push
fnstenv
jne
in
fistpl
iret
cmp
call
mov
lea
sbb
xchg
cli
ret
adc
je
or
mov
inc
lods
pushf
push
and
or
aas
cmp
lods
xchg
push
decl
lock
repz
ljmp
fisubrl
mov
mov
scas
xchg
or
mov
lahf
out
jg
mov
lods
add
cmpsl
sub
shl
add
push
push
pop
jmp
dec
jb
mov
mov
mov
jge
jb
push
sub
lcall
divb
lcall
adc
dec
leave
xor
push
ds
mov
jnp
into
pop
lock
popf
shll
dec
addr16
inc
lcall
loop
movsb
sbb
cmpsl
push
jns
cmc
cld
js
insb
out
jae,pn
call
cli
sub
lods
push
mov
pop
scas
adc
scas
out
stc
jb
ja
cld
push
mov
dec
lock
sub
pop
lret
inc
pop
hlt
add
mov
jae
js
clc
xchg
mov
jno
pop
leave
fisubrs
mov
out
ret
cmp
sbb
jo
fnstsw
or
sub
add
dec
xor
mov
pushl
call
mov
push
shlb
jg
xorb
pop
js
sbb
mov
icebp
jno
fildl
adc
inc
aad
adc
neg
ud0
pushl
iret
test
sbb
leave
sub
push
xchg
xchg
push
inc
movsb
out
popf
cmp
cmpsl
jg
fnstsw
push
cmp
and
aam
sub
jnp
adc
xchg
lret
test
mov
es
pop
mov
xchg
cmpsb
push
jo
mov
dec
scas
aam
jmp
xchg
and
jb
lds
mov
imul
mov
aas
lds
repnz
inc
xchg
sbb
data16
and
loop
scas
jno
rcrb
inc
es
or
dec
jnp
jne
pop
inc
movsl
jmp
push
or
ss
dec
bound
pop
cmp
in
leave
xor
mov
les
jmp
jnp
enter
sub
icebp
sbb
imul
mov
cs
je
pop
xor
jecxz
cld
stc
sbb
insl
jg
aad
inc
cli
and
enter
sbb
in
jl
jmp
add
sbb
aad
idivb
or
xchg
insl
aaa
add
xor
std
scas
in
mulb
or
mov
sbb
or
jp
add
leave
push
lret
jg
pushf
int
mov
repnz
iret
sub
adc
popf
nop
or
lret
mov
xor
mov
sbb
or
sub
jnp
cmpsl
loope
add
sub
sbb
jg
jnp
mov
sti
cmpsl
loop
cmpsb
sbb
jg
aaa
fdivrl
shll
xor
idiv
xlat
pushf
add
cmp
push
outsb
ds
xchg
pop
jo
mov
jnp
out
jo
decl
jl
jbe
pop
and
pop
call
jg
mov
cld
neg
mov
cmp
outsl
xor
lock
std
int3
inc
jg
pushl
sub
mov
mov
and
pop
mov
pushl
mov
mov
lds
lcall
dec
ss
xchg
sbbl
lcall
mov
cmpsb
xchg
sbb
iret
mov
inc
jo
nop
lret
mov
nop
rol
sub
cmp
cmp
orps
inc
jp
shlb
push
outsb
mov
jno
add
repz
jg
jmp
dec
cli
popa
mov
push
dec
jbe
mov
cwtl
int
jbe
pop
dec
pop
std
pushl
shrb
mov
popf
call
sbb
lcall
add
push
lea
mov
cmpsb
popf
aaa
pop
or
pop
pop
mov
in
insl
dec
in
std
pushl
mov
jno
mov
and
in
dec
aaa
fstps
mov
fildll
aam
xorl
mov
jmp
jg
jbe
pop
mov
imul
push
cli
popf
mov
incl
sub
out
or
xor
push
cmp
push
xor
push
cmp
sbb
mov
inc
lods
roll
call
sub
jo
and
sbb
fldt
std
sbb
idiv
andb
imul
ljmp
call
lea
lods
mov
es
lcall
fdivl
pop
insb
mov
mov
mov
int3
leave
jl
gs
int3
call
and
mov
mov
xor
loop
fsubr
cwtl
push
mov
in
loop
call
mov
push
fimull
ja
in
insl
mov
jmp
cmp
push
mov
xor
jmp
fstpl
incl
xchg
inc
cltd
fidivrl
add
mov
xorl
leave
das
lock
lcall
lcall
mov
xchg
outsl
sarl
stos
outsb
loop
and
fldcw
cmp
jle
jp
fisttpl
inc
push
dec
daa
and
cmp
mov
testl
stc
or
xchg
and
pop
loop
dec
add
hlt
pop
les
rdmsr
imul
cmpsl
movsl
jle
ljmp
jo
mov
inc
jge
ljmp
js
adc
xor
sbb
call
cmp
jno
call
roll
lods
pushf
fisttps
push
lcall
lock
pushl
pop
or
ja
and
inc
mov
call
outsb
call
cltd
insb
and
push
test
rclb
xchg
sub
push
rol
jno
dec
insl
stc
sbb
xchg
pushl
das
adc
add
push
push
inc
aad
pop
loope
fstpt
call
dec
jae
xlat
push
imul
je
mov
mov
inc
iret
and
cmpsb
jns
std
or
loop
xchg
push
and
add
cs
pop
xchg
mov
call
imul
in
ret
loopne
pop
push
or
mov
pop
jle
mov
cmp
push
sbb
xor
dec
pop
fcmovnb
outsl
aaa
jmp
iret
push
jb
dec
mov
xor
and
icebp
pushl
pop
rcrl
add
pop
sub
jnp
aaa
aaa
decl
imul
cmpsb
or
mov
scas
test
push
in
shll
fbld
add
loop
cli
jmp
enter
imul
ljmp
adc
mov
jae
adc
andl
mov
jmp
pop
pushf
out
push
into
inc
and
pop
call
cli
movl
out
inc
jbe
mov
dec
xchg
jbe
jo
jle
sbb
enter
stos
leave
nop
sub
filds
out
enter
mov
rorl
add
stc
pop
icebp
pop
push
decl
adc
cli
test
hlt
addr16
push
lcall
mov
ffreep
pop
lods
ds
or
and
or
jp
idivl
jmp
outsb
icebp
in
jbe
orb
adc
scas
and
jo
or
jnp
add
jo
dec
or
lret
jg
mov
ja
and
inc
ret
push
and
outsb
jae
fisubrs
addr16
in
xchg
push
add
out
lods
dec
roll
loope
adc
pop
bound
sub
push
enter
outsl
les
mull
decl
sbb
es
das
lahf
adc
inc
mov
cmp
sbb
popa
add
mov
xchg
jg
xor
cmp
push
lahf
mov
lcall
mov
pushl
jnp
aad
rorl
xor
mov
lea
lds
pop
aad
mov
dec
push
mov
into
mov
push
popf
iret
sbb
push
cld
pop
push
jp
addr16
push
movsb
and
pop
sub
mov
mov
cmp
fisttpll
dec
dec
mov
popf
shll
mov
and
mov
call
inc
daa
mov
lcall
xchg
inc
and
ljmp
mov
or
jno
fxtract
lret
jae
mov
inc
cmp
mov
fmul
sbbb
les
cmpsl
mov
movsb
fcomps
incl
xchg
cmpsl
iret
cmp
in
lods
in
dec
xchg
pushl
pushf
rcr
mov
xchg
repnz
out
hlt
lahf
mov
shr
icebp
mov
xchg
cld
sti
sar
call
mov
jge
cmp
mov
aad
and
call
hlt
jb
pop
cmp
fnstenv
lcall
iret
cli
sarb
out
sbb
imul
mov
sbb
adc
loopne
add
and
hlt
lcall
mov
rcl
or
aad
mov
and
pop
pop
pop
loop
pop
ljmp
jl
popl
in
mov
push
bound
or
dec
popa
jns
pushl
jns
repnz
xor
cmp
idivb
mov
jbe
andps
xchg
mov
xor
shl
pop
jl
pop
ret
sar
aaa
decl
add
push
movb
fsts
xchg
loop
adcb
fldl
fidivl
loope
jg
jo
mov
mov
push
shll
outsb
adc
incl
imul
out
lds
jg
xchg
dec
outsb
inc
fimuls
stc
aad
add
cmp
fsubs
nop
fs
mov
adc
jnp
pop
ja
cli
nop
pusha
lahf
dec
into
sti
adc
dec
out
out
xor
push
pop
xchg
xchg
xor
jp
mov
out
dec
out
ja
shlb
fstpt
mov
mov
ljmp
cmc
rep
imul
test
mov
mov
js
or
ja
outsl
sbb
jecxz
call
sub
or
pop
divl
xchg
les
out
lcall
lcall
leave
jmp
push
in
sub
fldt
scas
dec
mov
xor
loop
mov
call
movsb
jge
out
arpl
in
push
enter
orl
fimuls
shll
fmull
int
jo
and
cmp
xor
movsl
fsubrs
addb
mov
inc
loop
lcall
adc
mov
lods
shrb
repz
lcall
decl
lds
jl
fadds
jo
cmp
xor
mov
jp
sbbb
or
cld
pop
imul
pusha
mov
jp
or
int3
aam
pop
in
js
xchg
or
mov
cmpsl
in
inc
clc
mov
call
ror
mov
lret
out
xchg
cmp
sbb
cmp
jp
jle
jnp
in
subl
rol
inc
ds
and
jge
or
jo
rcrb
xchg
or
sbb
push
mov
sub
cwtl
daa
mov
pop
lea
call
lds
mov
ljmp
push
inc
bound
cs
sar
insb
sub
dec
int
xchg
jl
mov
adc
push
in
lods
cmp
fcomps
js
lret
addb
mov
pusha
icebp
xchg
cs
and
sarl
jg
or
fwait
adc
adc
jl
adc
lods
pusha
push
loopne
pop
pop
mul
xor
push
call
xchg
cmp
xor
negl
gs
mov
test
mov
stos
pop
sub
fistpll
ds
mov
and
push
mov
pop
cld
inc
fwait
in
cli
xchg
sbb
cltd
add
inc
jmp
add
outsb
lcall
in
lds
das
cld
roll
pushl
clc
fwait
xor
inc
shlb
popa
test
pop
mov
lods
mov
aad
sub
mov
cld
jne
cmpsl
mov
cmp
decl
adc
jns
pop
lea
loopne
mov
cmp
leave
lret
pop
inc
out
imul
fiadds
pop
mov
lcall
inc
xor
and
gs
sub
sub
mov
mov
movsb
adc
inc
dec
ja
test
ror
mov
cld
call
dec
mov
movsb
les
lahf
jl
mov
jb
cmp
mov
pop
addl
cli
jnp
rcrl
push
mov
mov
pushl
scas
call
stos
push
lahf
shll
out
mov
or
movsb
dec
or
sbb
inc
push
adc
pop
xchg
jo
pushl
mov
inc
xor
les
dec
and
jg
popa
in
push
or
popf
popf
xlat
mov
loop
outsl
sti
mov
mov
decl
sub
xchg
mov
pop
mov
xor
jmp
call
mov
lcall
call
and
xchg
mov
jnp
call
push
cmp
jmp
std
cmp
repz
xor
mov
push
push
xor
sub
loop
inc
sbb
aas
out
jecxz
or
fs
add
jne
hlt
cmc
jmp
call
repz
jnp
sti
cld
out
clc
jno
add
mov
lcall
incl
pop
pusha
leave
cmpsl
ljmp
and
and
and
and
sar
jmp
cmp
xchg
fbstp
stos
jbe
mov
push
sbb
in
insb
movb
add
dec
xchg
mov
inc
in
or
movsb
xlat
daa
or
test
cwtl
into
cmc
movsl
xor
cli
decl
pop
aaa
imul
iret
out
fs
xor
xor
pop
ds
ret
bnd
and
pop
idivb
roll
cs
ljmp
ljmp
or
jo
stos
adc
mov
jge
push
fs
aad
lcall
adc
jnp
pop
fwait
cmp
xor
push
adc
mov
xchg
sti
decl
popa
lods
out
and
dec
xchg
push
out
inc
repnz
testl
repz
cmc
xchg
mov
ss
inc
adc
push
dec
adc
cmp
mov
icebp
cmp
aad
sub
sbb
incl
adc
dec
dec
mov
mov
incl
pop
cs
mov
mov
clc
shrb
dec
pop
fimuls
ljmp
jnp
adc
aaa
cwtl
xchg
out
jl
adc
test
aad
xchg
add
jbe
faddl
out
sbb
add
sahf
xchg
call
inc
jmp
repnz
jb
inc
setb
jge
jg
scas
inc
leave
lret
addr16
ljmp
cmp
sbb
mov
loopne
ja
jbe
push
stc
fwait
add
test
test
decl
aaa
or
jmp
dec
pop
ljmp
cmp
mov
and
enter
cli
test
jg
out
insl
jge
hlt
inc
stos
adc
adc
mov
or
incb
xchg
lahf
pop
iret
icebp
rcrl
aas
test
stos
fildll
jg
aaa
mov
lret
mov
jl
mov
mov
jb
cld
inc
pop
pop
mov
icebp
xlat
shll
xor
std
dec
sbb
insb
inc
xchg
fs
repnz
adc
loop
addr16
dec
mov
jo,pn
in
lcall
loopne
xchg
adc
jno
xchg
sbb
push
mov
fnsave
xor
push
jge
adc
mov
xchg
sub
xchg
inc
mov
subl
call
mov
outsb
movsl
add
data16
cmp
addr16
out
inc
xor
ljmp
cld
jle
cmpsb
cmp
clc
mov
scas
cmpsl
cmp
mov
cli
incl
jmp
xor
jns
call
in
outsl
aam
orb
fistps
cmp
cmp
sbbb
repz
adc
mov
cmp
mov
dec
pushl
push
out
mov
jmp
fstpl
mov
adc
loop
frstor
adc
jg
mov
jge
into
outsb
je
fistl
popf
cmpsb
add
jge
adc
xchg
ja
mov
xorl
push
movsb
and
rcrb
gs
sbb
fbld
mov
movsl
xchg
nop
sub
xchg
incl
xchg
mov
fsubrp
std
mov
sarb
js
movsl
aas
scas
xchg
fwait
mov
add
pushf
lcall
xlat
insl
loopne
rolb
out
inc
pop
jmp
pop
dec
push
add
jl
shlb
call
xchg
lock
inc
sbb
mov
xor
out
or
pop
shl
cmp
decl
mov
cs
adc
push
sbb
sbb
pop
mov
cmpsb
mov
cmp
xor
cli
mov
in
inc
daa
icebp
xor
decl
int3
lea
sbb
and
pop
jmp
jnp
jno
jnp
adc
aad
sti
push
mov
in
aad
jg
incl
inc
iret
or
push
or
xor
nop
jno
addr16
pop
std
mov
lahf
sbb
enter
bound
xchg
lcall
jg
mov
arpl
sti
jo
loopne
aam
fisubrl
shll
sar
adc
sbb
aaa
xor
or
cmp
movsb
insb
mov
lcall
out
and
jbe
leave
pop
and
gs
pop
bound
xor
inc
inc
jb
jmp
pop
pop
mov
idiv
stos
movsb
push
mov
add
push
mov
ja
jb
out
pop
jmp
adc
mov
or
test
mov
xchg
jne
test
aad
ljmp
pop
jb
mov
or
sub
dec
cmpsb
jnp
mov
add
mov
enter
lock
std
jno
adc
xchg
lcall
repnz
test
push
ljmp
xchg
and
sub
icebp
jecxz
jmp
jg
sub
inc
add
push
ds
sub
xchg
jns
mov
in
pushl
mov
shl
cld
daa
sbb
icebp
xchg
or
mov
inc
dec
cwtl
test
inc
leave
mov
incl
pushf
scas
dec
ss
je
mov
fisttps
pop
call
jge
aam
jecxz
cmp
nop
inc
pop
jae
dec
add
dec
cld
lcall
js
xor
mov
out
mov
mov
jbe
xchg
push
fistpl
and
hlt
inc
ror
es
out
hlt
test
sbb
ret
xor
clc
ljmp
mov
xor
add
jae
sbb
push
in
xor
xchg
jl
dec
les
dec
jle
push
mov
dec
call
push
cmp
aaa
ss
jbe
ret
adc
cmpsl
out
jnp
push
cwtl
jmp
jae
in
mov
clc
jne
push
inc
pop
leave
xchg
popa
jle
xchg
pushl
incl
lret
mov
jmp
fs
mov
cmp
mov
stos
xchg
psubd
decl
inc
arpl
sub
lcall
lds
hlt
icebp
test
sub
mov
mov
lods
or
in
pushf
test
xchg
cli
mov
ret
jae
lret
rcll
cmc
cmp
sub
call
push
and
push
call
lret
in
jmp
aam
rcrl
decl
fdivrs
in
sbb
lcall
fistpll
xlat
cmpsb
inc
jae
mov
fists
sub
dec
and
pop
jle
cmp
outsb
add
inc
ds
mov
loope
rcl
dec
mov
cli
add
xchg
dec
bound
in
lock
jg
ljmp
mov
mov
mov
mov
mov
jp
dec
inc
push
loopne
pop
sbb
andl
jmp
pop
ret
mov
and
loopne
testb
test
lds
mov
mov
xchg
call
incb
lods
dec
faddl
mov
sar
dec
sub
push
rcll
jp
mov
std
mov
cmp
repz
decl
fists
incb
xchg
mov
sub
cmc
push
xchg
pop
xlat
dec
pop
jmp
nop
dec
inc
adc
push
xlat
pop
sbb
pop
aad
stos
mov
call
clc
dec
stos
aad
inc
sub
int3
inc
cmc
dec
fnstcw
loope
lcall
jge
xchg
cmp
inc
leave
imul
jg
pop
mov
and
mov
adc
mov
mov
out
in
mov
add
dec
cmp
sbb
mov
and
out
pop
lret
pushf
cs
int
dec
vminss
ljmp
imul
or
movsl
mov
addr16
sub
loop
jmp
hlt
pop
xor
cmc
mov
xchg
in
jp
ret
dec
xchg
xor
pushl
jo
adc
ret
testb
jge
pop
icebp
pop
test
mov
call
inc
into
psrlq
jnp
adc
xchg
ficomps
stos
stc
sbb
cmpsb
sbb
xchg
or
adc
xchg
mov
push
icebp
idiv
call
jne
ja
mov
test
sbb
inc
push
inc
enter
fistpl
int3
jmp
mov
cmpsl
push
or
fistpll
jg
aaa
inc
shrb
add
sub
daa
jmp
cltd
rcr
mov
ljmp
loope
aaa
fld
mov
mov
hlt
les
pop
pop
jnp
mov
sub
iret
sbb
loopne
jp
pop
dec
pusha
int
cmp
outsb
or
repz
xchg
sbb
jg
fists
xlat
jecxz
fistpl
dec
pop
das
jae
pop
cmpsl
xchg
push
test
repnz
decl
or
das
mov
pop
mov
jg
cmpsl
pop
pop
sbb
mov
dec
loope
adc
repnz
push
sbbb
add
xor
sub
decl
ljmp
lods
int3
pop
jle
rolb
inc
cmp
mov
xor
stos
test
ljmp
sbbb
inc
dec
nop
xlat
out
fldl2t
in
call
incb
test
jg
in
mov
jo
notl
add
cmc
xor
sti
test
jle
cmpb
jnp
mov
pop
jae
insb
jecxz
repnz
dec
std
loopne
fistps
jbe
in
imul
aam
das
cmc
ljmp
xchg
xorl
pop
xchg
mov
add
pop
ljmp
inc
inc
inc
dec
pop
popa
jmp
in
ljmp
hlt
mov
mov
xor
stos
sarl
xchg
mov
pop
cli
pushl
icebp
pusha
mov
or
lods
stos
pop
repz
or
lcall
jmp
fimuls
sahf
pop
out
mov
outsl
sarb
adc
cmp
ljmp
mov
xor
cmp
mov
jnp
mov
ss
cld
incl
jecxz
jle
adc
cmpsl
sub
pop
mov
push
into
push
xor
pop
nop
insl
decl
loop
lahf
mov
sarl
sti
cmp
mov
call
pop
mov
push
jne
lods
ljmp
hlt
jbe
push
pushl
adc
pop
push
out
xchg
sti
sub
pop
outsl
stos
sbb
shrb
call
mov
das
inc
jo
ljmp
add
jl
cmp
jne
fld
div
jb
repz
or
push
cmp
mov
out
out
jbe
fbstp
out
jbe
bound
aam
push
cltd
mov
es
add
sbb
mov
push
mov
mov
ljmp
les
aad
pop
push
sub
mov
xchg
test
ljmp
push
jg
call
andl
inc
lea
lret
out
aam
and
or
fildl
cmp
cmpsb
cwtl
mov
inc
cs
push
pushf
movsb
out
sbb
daa
cmp
fldl
dec
push
jg
arpl
je
pop
xchg
outsl
push
xchg
cltd
cmp
clc
inc
insl
jl
xor
cmp
pop
mov
cwtl
push
mov
mov
pop
cmc
data16
mov
cmp
cmc
jo
repnz
nop
dec
lahf
lods
lret
outsl
decl
pushl
adc
jmp
fadds
adc
pop
add
jg
scas
shrl
aaa
fwait
aaa
xchg
inc
dec
pop
add
mov
and
pushf
fidivrs
xor
mov
xchg
call
push
mov
sbb
mov
sbb
cmp
incl
cs
lea
sahf
pop
pop
insl
clc
lods
adc
jns
sarb
jnp
jmp
arpl
add
fistl
mov
cmp
sub
ret
pushl
inc
cmc
out
in
ljmp
dec
jnp
mov
lock
cmp
mov
call
mov
or
imul
sbb
outsl
icebp
das
lock
jbe
out
cld
fxch
push
jecxz
and
push
push
ljmp
faddl
or
pop
imul
fs
aas
incl
xchg
add
movsl
push
mov
push
mov
fiadds
sbb
jg
decl
aad
and
jle
jle
push
lcall
mov
pop
adc
jmp
fsubl
xor
aam
mov
fisubrs
push
push
rorb
sahf
cli
into
stos
decl
loopne
jmp
lods
fwait
out
cmp
clc
call
loopne
add
idivl
fdiv
mov
popa
out
sar
pushl
pop
dec
lods
outsl
cmp
xor
cmp
shrb
xor
jno
mov
and
sbb
icebp
adc
sahf
pop
movsl
lcall
pushl
jmp
in
out
and
xor
lods
ss
push
call
fs
jae
pusha
cmp
sub
test
outsl
fstpl
sbb
push
push
mov
dec
inc
jmp
ss
inc
jns
mov
mov
cmp
in
es
xchg
add
lret
fstpl
jmp
int3
in
mov
cltd
int
out
mov
mov
mov
xchg
mov
inc
mov
cli
call
rcrb
in
adc
nop
dec
fstpt
or
nop
aam
inc
repz
icebp
sub
xchg
adc
mov
jp
jmp
push
jbe
mov
mov
ds
xchg
sub
inc
loop
add
inc
les
cmpsl
pop
fisttpl
jecxz
cs
push
xor
jl
call
les
inc
leave
jns
and
ljmp
lock
sub
jmp
mov
test
ret
sub
fistpll
pop
dec
or
sub
inc
int
lea
dec
outsl
mov
pop
outsb
mov
out
jl
pop
and
std
lret
mov
imull
xor
fimull
and
sbb
fnstsw
jg
pop
inc
lahf
shll
cmp
jo
mov
into
in
pop
out
pop
mov
incl
and
or
fbld
jmp
sbb
test
cmp
iret
pop
cmp
xor
outsb
out
aaa
std
pop
test
nop
cmp
pop
xlat
imul
add
enter
fnsave
adc
pop
mov
adc
mul
jo
cmp
enter
jmp
notb
hlt
outsb
xchg
mov
call
lcall
add
addb
pop
mov
aas
xchg
in
pop
cli
push
pop
mov
cli
push
xchg
sbb
clc
incl
aas
out
jp
lods
lret
cld
jg
and
sti
loopne
fbstp
cmp
cmp
cmp
jae
incl
pop
mov
and
incl
xor
mov
clc
sub
cltd
adc
pop
out
repz
jmp
mov
adc
loopne
addr16
loopne
cmpsl
xor
decl
jbe
dec
fwait
push
or
or
cmp
stc
leave
call
jbe
mov
int
in
scas
lahf
sbb
ljmp
push
jge
repnz
div
aas
incl
scas
dec
or
dec
daa
negl
jge
pop
cld
cmp
or
call
das
arpl
add
std
out
mov
xchg
mov
pop
loope
mov
mov
cmp
aad
pop
jmp
popa
mov
or
div
adc
dec
add
push
inc
sub
jg
cld
ret
and
mov
and
pop
out
mov
test
enter
inc
das
pop
nop
clc
lret
jmp
and
in
lock
ljmp
push
mov
les
std
mov
inc
sub
out
xlat
roll
xchg
mov
lods
ds
sbb
push
pushl
xor
lcall
jg
xchg
push
xchg
scas
adc
in
decl
dec
push
out
lcall
xchg
decl
push
mov
imul
jne
repnz
das
xchg
jno
jo
cmp
xchg
cli
inc
rcrl
xchg
push
push
and
sbb
ds
and
dec
cld
adc
inc
les
dec
adc
push
filds
daa
xor
push
jmp
sbb
mov
inc
aas
loopne
icebp
xor
ljmp
cmp
push
mov
lcall
push
outsl
fdivr
mov
loopne
repnz
xchg
adc
pop
sti
xchg
or
incl
mov
mov
mov
lahf
pop
jp
pop
or
jle
aaa
push
mov
dec
push
lret
xor
es
clc
sbb
lods
inc
push
scas
inc
cltd
imul
call
jge
jl
pop
xor
lds
imul
pop
incl
jns
mov
ljmp
fildl
jmp
int3
mov
xor
cs
xor
dec
scas
inc
mov
push
cmpsb
mov
inc
mov
jnp
or
cmp
cwtl
jmp
inc
and
jg
push
popf
popa
sub
dec
adc
unpckhps
adc
movsl
jle
sub
cmp
aaa
clc
mov
pop
pop
enter
cwtl
and
cmp
pop
lret
cli
sub
cld
and
xor
in
hlt
xchg
cltd
sub
bound
sti
dec
in
fimuls
cli
jl
lea
bound
mov
mov
push
dec
jmp
add
icebp
rol
dec
xchg
repnz
fnstcw
mov
popa
ret
pop
into
mov
pop
testl
mov
sub
mov
inc
out
xchg
incl
test
add
xor
ret
std
int3
pop
sar
push
mov
xor
daa
call
lds
inc
loope
pusha
sbb
mov
sahf
cwtl
sarl
sub
inc
hlt
fwait
jb
pop
das
cld
mov
int3
dec
dec
scas
xchg
das
int3
std
jp
sbb
fistps
push
adc
ss
das
hlt
decl
push
stos
call
jns
mov
aas
arpl
ja
xchg
hlt
mov
pushl
lret
aas
or
outsw
cmc
imul
or
push
adc
and
in
mov
cmpsb
cld
pop
in
in
stos
lcall
xchg
jb
mov
adc
sti
mov
lea
mov
mov
xchg
adc
pushl
jns
mov
fistps
shrb
lds
mov
cmpb
in
ljmp
cmp
pop
or
xor
bound
mov
lahf
lds
mov
js
iret
jp
loop
rorb
and
aam
push
aas
or
ds
fs
mov
inc
push
sbb
sub
push
push
jg
pop
inc
mov
shll
test
fmul
lock
mov
pop
stos
hlt
xchg
mov
fs
ljmp
js
out
xor
jmp
dec
enter
lret
cwtl
pop
test
arpl
add
imul
push
rolb
cmp
test
mov
xchg
mov
cmp
cli
decl
jle
dec
daa
test
xor
mov
push
rcrl
sar
rcrl
mov
iret
inc
lea
pop
add
aaa
add
incb
pop
fisttpll
mov
ror
int3
lea
push
jne
jg
repnz
and
std
lods
cmp
std
mov
insb
lret
insb
and
pop
sti
pop
mov
sbb
or
test
pop
cmpl
ja
addl
pushl
mov
add
rcr
loope
fcmovnu
mov
mov
aad
ss
push
xchg
aas
ljmp
outsl
ret
das
cmp
jle
rcll
into
add
lcall
jecxz
jg
lea
arpl
and
jle
mov
mov
decl
dec
mov
push
push
mov
std
xor
mov
ljmp
pop
imull
mov
bound
sub
les
lahf
mov
lcall
cld
cld
in
mov
frstpm(287
pop
lods
aas
gs
cld
jg
sbbb
lock
imul
mov
fldl
mov
dec
call
mov
std
fistpll
jb
dec
dec
cmpsl
sarl
insb
cld
ljmp
xchg
jg
hlt
shlb
ds
ds
ljmp
movsb
cmp
lcall
or
adc
mov
jg
fmulp
pop
jg
jg
and
push
jg
outsl
imul
fcoml
testl
sub
clc
out
neg
pop
cmp
ljmp
lods
jbe
mov
jmp
pmaxub
shlb
adc
inc
inc
pop
mov
loop
fcompl
push
insb
sar
jg
arpl
and
inc
xchg
stc
out
add
sub
out
mov
ja
lds
leave
mov
sbb
cmp
ljmp
ret
mov
pop
das
adc
mov
jp
nop
jg
psubw
lcall
and
loop
mov
notl
cmp
pop
or
lret
out
pushl
mov
xchg
cmpsl
stc
out
or
hlt
mov
mov
pusha
cld
sti
jnp
std
cmp
call
incl
inc
aas
dec
repz
cmp
outsb
or
adc
mov
or
mov
orl
popl
out
cld
xchg
pushf
mov
xor
and
mov
bound
popf
icebp
clc
daa
outsl
incl
jno
mov
movsl
mov
adc
jmp
or
fbstp
xchg
mov
lcall
jmp
mov
adc
sti
rcr
pusha
mov
hlt
out
adc
adc
jg
int
jg
dec
dec
ffree
mov
mov
lock
or
adc
mov
cmc
jne
sub
cld
cmc
mov
incl
pop
mov
fidivs
push
pop
cld
icebp
lock
mov
mov
out
pop
xor
mov
jg
push
pop
jg,pt
clc
dec
movsb
sar
fmul
adc
fbld
push
call
xchg
mov
or
repz
repnz
sti
imul
call
pop
pop
add
mov
incb
mov
repz
pushl
cli
lock
ljmp
test
jmp
in
inc
xchg
mov
hlt
into
mov
xor
dec
jmp
or
mov
fdivrp
aas
ds
fcos
lcall
lret
loop
imull
pushl
cmp
decb
cli
arpl
addr16
xchg
js
mov
push
loop
popf
loop
mov
jg
mov
mov
pop
dec
xchg
inc
mov
adc
or
dec
incl
outsl
and
mov
addr16
sub
decl
jg
sub
out
inc
push
inc
pop
cmp
add
shlb
inc
js
ljmp
push
test
bound
cmp
iret
rolb
push
sbb
jae
sar
lcall
out
mov
push
shrl
inc
jmp
push
shlb
inc
fildll
sub
push
xchg
dec
test
mov
stc
ljmp
jnp
ret
in
dec
arpl
mov
adc
pop
mov
and
lods
sbb
push
mov
push
jmp
nop
bound
bts
fsts
or
jg
shrl
std
pop
lret
adc
adc
cwtl
mov
sub
jge
mov
xchg
clc
jmp
dec
mov
mov
and
pop
and
aam
shrb
call
dec
clc
inc
xor
dec
mov
lcall
pusha
in
and
inc
dec
pop
add
dec
jne
mov
loopne
daa
fnstenv
push
ljmp
cmp
add
cmp
stos
push
jbe
aad
in
jp
in
pop
jl
push
ret
mov
es
push
lcall
jp
cli
jp
fimuls
dec
sbb
aaa
pop
ja,pt
push
push
popa
outsb
pop
and
mov
add
stos
cmp
out
mov
mov
arpl
inc
nop
std
pop
mov
es
mov
subl
and
and
leave
fsub
push
clc
fidivrs
xchg
pop
xchg
pushf
scas
xchg
mov
dec
mov
jbe
sub
mov
mov
call
and
ljmp
lods
sarl
xchg
fimull
ss
ljmp
xor
fsubr
push
rorl
int
inc
cmp
cltd
push
or
mov
out
fs
push
loopne
lea
push
pop
and
pop
jbe
jae
arpl
or
pop
jb
rol
and
push
dec
cs
lods
dec
stos
out
fs
out
or
and
cmp
pop
std
or
mov
and
ljmp
call
push
add
lods
vshufpd
jo
sub
pushf
mov
insl
sub
lcall
pop
ss
or
fisubrl
push
jnp
and
frstor
xchg
push
mov
insb
sub
loope
xor
push
jecxz
push
cmp
popf
push
aad
in
call
lcall
sti
mov
popa
inc
fimull
push
es
std
or
loop
in
dec
inc
jns
push
cmp
jmp
lret
sbb
loope
int3
call
xchg
rcrb
push
stc
jbe
pop
mov
xchg
fistps
or
sub
sub
mov
in
mov
fucomip
fisubs
lret
xor
shll
xor
sub
dec
adc
jae
decl
dec
pusha
mov
adc
add
std
adc
stos
rcll
mov
push
fwait
xchg
lods
mov
mov
das
dec
jne
mov
mov
push
jno
call
inc
jae
icebp
stos
sub
mov
cli
mov
arpl
int3
adc
repnz
jmp
jmp
stc
xchg
rcrb
lods
push
jmp
mov
inc
mov
movsl
pop
jp
call
call
add
pop
push
aad
pop
dec
ss
dec
js
push
xchg
cwtl
mov
inc
push
adc
jmp
icebp
mov
jecxz
mov
xchg
cmpsb
cmp
or
or
mov
push
call
inc
xor
push
jle
jge
and
fnstcw
add
mov
lcall
in
popf
pusha
cmp
ds
pop
xchg
imul
inc
fwait
and
repnz
push
sar
and
cmp
leave
push
test
mov
repz
mov
enter
xor
or
cld
pop
int
inc
push
movsb
aas
lcall
std
jne
jp
aas
cmc
jp
movsl
loope
or
cmp
dec
ss
adc
call
cltd
sbb
or
jecxz
nop
lcall
pop
jle
fwait
das
cmp
jg
lea
xchg
in
jle
cli
lock
inc
push
ljmp
sbb
mov
dec
jl
xchg
pushf
or
insl
mov
roll
inc
ja
xchg
push
push
mov
inc
dec
shlb
xchg
cmp
shlb
jecxz
ds
enter
ljmp
ret
pop
sbb
daa
mov
mov
hlt
xor
scas
mov
ffreep
xor
rorl
cmp
iret
mull
lds
sbb
lock
jg
inc
sbb
outsb
les
mov
iret
add
and
int
loop
fnstsw
mov
xor
in
lcallw
xchg
jmp
jbe
out
repnz
jb
push
out
imul
pushf
imul
jne
inc
jl
adc
mov
repz
jl
lahf
int3
jbe
add
scas
xchg
shll
or
xchg
lret
fsubl
pop
inc
sub
jecxz
ret
adc
faddl
jl
in
cwtl
lock
std
decl
adc
and
xor
dec
mov
sub
jmp
les
and
decl
sub
mov
and
fwait
add
out
sub
ss
fdivs
or
pop
mov
and
dec
push
fadds
mov
mov
loopne
xchg
clc
add
inc
xor
and
or
xor
pop
sbb
fbstp
das
dec
bound
xor
fimull
stc
ror
iret
and
fidivrs
cmpsb
push
mov
lcall
pusha
cltd
jnp
clc
cli
inc
inc
sbb
shll
es
inc
js
scas
inc
outsl
xor
or
lods
mov
clc
incl
and
int3
adc
sub
scas
or
pop
or
mov
cmp
mov
pop
dec
or
dec
ljmp
mov
xor
lods
gs
pop
popa
mov
mov
pushl
in
sbb
sub
cs
lcall
xchg
jmp
pop
push
incl
cmpsl
out
lea
inc
sub
sbb
in
push
mov
icebp
mov
pop
into
mov
movsb
fnstsw
decl
inc
adc
cmc
mov
rcl
into
push
imul
fmul
mov
dec
and
push
sti
movsl
pop
xchg
inc
movsb
mov
out
imul
push
cld
ss
inc
mov
ficoml
daa
pop
cld
xlat
movsl
testl
jae
mov
pminub
call
popa
jae
ret
addr16
push
movsl
jp
adc
mov
hlt
imul
jae
into
les
ljmp
sub
ljmp
push
jno
jmp
mov
xchg
dec
push
pop
xor
push
loopne
xor
and
mov
inc
aad
cmp
decl
mov
mov
pop
scas
aam
mov
mov
scas
popf
ljmp
dec
outsl
add
push
adc
and
xor
leave
lock
dec
mov
call
xchg
adc
dec
in
jnp
mov
xchg
bound
sahf
xchg
xchg
push
mov
dec
xchg
jbe
sti
hlt
popa
pop
jl
sbb
fsubl
in
or
inc
xlat
pop
daa
sub
jg
cld
incl
test
cwtl
adc
jo
sbb
vpackssdw
sti
cmp
std
jg
xchg
sub
jb
das
pop
test
or
sbb
xor
mov
imul
jns
outsb
cs
repz
add
cmpsl
and
mov
enter
clc
fistpll
adc
and
sbb
mov
or
adc
xchg
jp
sbb
and
repz
push
mov
add
sbb
inc
xchg
or
push
shl
sub
xchg
das
add
mov
cmpsl
mov
push
iret
mov
pop
loop
incl
pop
in
jae
dec
jl
nop
dec
icebp
inc
mov
add
loop
xchg
insl
mov
sti
adc
ficomps
syscall
mov
jb
inc
mov
xchg
fwait
incl
push
and
gs
out
out
imul
push
push
sti
adc
out
stc
shll
rcrl
jmp
fcomi
incl
les
xchg
ret
xchg
nop
push
arpl
iret
notb
std
cmp
decl
andl
mov
cmp
add
cmpsl
push
les
loopne
pop
int3
pop
fildll
hlt
ret
aam
rcrl
subb
jmp
mov
jne
jecxz
fcmovnbe
pop
push
push
sbb
adc
mov
jg
nop
dec
dec
es
push
rcrb
rorb
adc
xor
in
jle
push
sbb
push
xchg
pop
xor
cmc
add
sahf
pop
mov
std
or
adc
cli
or
inc
outsb
sahf
push
mov
call
inc
clc
fprem1
test
push
stc
xchg
aad
lods
mov
icebp
mov
inc
push
decl
push
sahf
jns
mov
or
and
in
and
insb
cmpb
inc
lds
and
outsl
repz
rclb
fwait
jnp
mov
xor
ficoms
pcmpeqb
inc
inc
cmp
mov
and
iret
pop
xchg
insl
leave
sti
mov
xor
pop
fiadds
sbb
mov
add
push
fbld
add
adcl
jb
push
push
jle
jae
push
hlt
pop
mov
and
fcomps
xlat
xchg
fisttps
fnstsw
sub
clc
das
icebp
movsl
push
cbtw
mov
mov
roll
push
popl
pop
in
cmp
mov
pop
and
mov
call
push
cmp
inc
jmp
cmp
mov
sbb
gs
ljmp
cld
iret
nop
cmpsb
fists
jecxz
add
insb
dec
je
neg
loop
sub
pop
and
cmp
cld
mov
loopne
mov
movsb
repz
imul
pop
in
cmp
lcall
add
scas
adc
jmp
popf
add
xchg
test
dec
jg
xchg
cmp
add
and
in
cmpsb
adc
push
sbb
mov
call
movsl
lahf
or
mov
fdivrs
mov
and
lret
sub
dec
stc
sub
lods
jne
cmpsb
jae
inc
adc
ja
inc
sub
hlt
mov
lcall
mov
dec
call
popa
jno
int3
cmpsb
sbb
and
jle
enter
out
ljmp
adc
cs
jge
or
inc
mov
or
mov
and
jmp
cs
mov
sub
fildl
xor
fmuls
jl
mov
jo
inc
lret
push
call
mov
ret
cmp
pop
std
test
and
icebp
jmp
mov
popa
jne
repz
addr16
xor
iret
lea
pop
lds
mov
mov
or
pusha
sbbl
jecxz
mov
fs
repz
stos
ret
repz
inc
movsb
lods
or
insb
daa
push
shll
ljmp
outsb
cmpl
loopne
ljmp
xchg
icebp
adc
cmp
insb
inc
pushl
dec
xchg
add
movsb
pop
adc
sub
push
mov
ja
rcr
incl
out
out
cltd
cs
clc
lods
mov
push
ljmp
dec
testl
and
pop
sbb
lock
adc
and
fildl
rclb
addr16
dec
sbb
dec
rol
jns
js
cltd
jecxz
lock
shlb
das
out
test
xchg
mov
test
jae
and
adc
dec
dec
push
sbb
jno
sarl
outsl
or
jb
aad
cltd
popl
sub
push
fmull
std
popf
jmp
fs
dec
leave
pop
inc
dec
cs
fidivrl
push
pop
inc
jmp
pop
outsb
aad
push
loopne
push
pop
push
sbb
inc
sub
test
incl
mov
popf
dec
outsb
pop
fwait
push
cmp
sbb
pop
aad
mov
loop
mov
fwait
ljmp
fcompl
hlt
xor
sbb
pop
ret
shlb
daa
popa
das
push
and
lds
mov
ss
lds
aam
inc
ja
std
enter
das
fwait
inc
sarb
mov
lahf
or
out
jo
arpl
xchg
negb
lcall
adc
jnp
jmp
lods
pop
lea
cmp
into
mov
ljmp
ljmp
push
xchg
and
push
icebp
mov
push
lods
cld
xchg
scas
sub
ja
test
dec
cmp
js
pushf
cmp
xchg
mov
mov
fs
loopne
call
dec
insl
rolb
jae
fsubrs
icebp
jmp
dec
dec
dec
lcall
pop
mov
xor
xorps
dec
and
mov
lret
popa
loop
adc
mov
test
call
jp
test
lcall
cmpsl
mov
stos
test
xchg
cmpsb
xor
into
repnz
out
cmpsl
and
lods
pop
in
pop
adc
pushl
test
loop
cmpsb
mov
test
in
add
jp
fs
jg
mov
notb
sbb
ficomps
repz
stc
sbb
push
pop
call
push
pop
mov
pushl
mov
dec
test
roll
sbb
mov
push
mov
mov
out
cmp
dec
cltd
daa
repnz
outsl
icebp
push
ret
dec
out
xor
loope
lcall
jb
je
mov
push
divl
pop
push
lret
push
mov
cltd
sub
pusha
cmp
lcall
fimuls
in
adc
pavgb
push
and
xor
dec
or
sub
mov
popf
in
mov
jns
aad
mov
lcall
mov
mov
insl
repz
xchg
ds
mov
xor
ljmp
icebp
mov
shll
lcall
xor
pop
int3
out
aam
sar
mov
pop
cmp
push
lret
in
xchg
scas
jle
lahf
add
scas
jmp
jne
call
sbb
mov
cmp
mov
sub
call
lods
js
mov
sub
mov
loopne
insl
jns
sub
mov
xchg
inc
xchg
pop
cmpsl
out
stc
sbb
sub
cmp
xchg
clc
mov
inc
cmp
aad
cmp
push
adc
sub
in
or
cmc
decl
cmp
das
ja
cmp
mov
jae
outsb
xchg
clc
outsl
icebp
das
sub
sbb
cmp
int3
sar
aaa
jecxz
and
ss
cld
es
loope
dec
jg
dec
push
pop
jle
mov
fbstp
jne
lahf
xchg
lods
pushl
stos
in
mov
cmp
je
daa
loopne
aas
add
mov
mov
int3
popa
inc
int3
mov
loope
cmp
imull
mov
bound
dec
cltd
mov
loope
pop
test
rclb
lock
cld
sub
andb
cmp
andl
lods
out
sbb
test
sbb
pop
mov
add
das
cld
pushl
pop
cmc
adc
dec
cld
cmp
repnz
pop
aas
test
shrl
rolb
std
decl
mov
xchg
call
dec
sbb
lcall
pop
adc
dec
sbb
dec
lds
jbe
jne
jno
ret
and
in
jns
mov
mov
jne
cli
mov
int3
test
add
add
cmp
or
cmp
clc
xor
cmp
aam
jg
jmp
call
adc
push
jmp
xchg
movsl
add
cli
shrb
mov
or
icebp
dec
pop
jo
adc
ljmp
call
into
inc
in
mov
cmp
fidivrl
ja
sbb
pushl
pop
dec
outsb
lret
push
pop
sub
push
jle
movsb
out
in
xchg
dec
adc
jle
lcall
push
fdivrs
xchg
xchg
mov
pushf
arpl
lods
pushl
ret
arpl
xor
jle
repz
fcoml
mov
insb
push
xchg
cli
incl
sbb
jne
dec
stc
les
or
call
sbb
or
out
sbb
xor
std
test
lahf
jl
pop
ljmp
icebp
push
cmpsl
loope
mov
ljmp
xchg
jmp
clc
adc
in
mov
in
imul
xor
push
decl
fidivs
nop
sub
pop
sbb
mov
addr16
push
fbld
lock
dec
sahf
ret
xchg
mov
sbbb
sbb
test
repnz
sar
jo
pop
pop
mov
repnz
mov
and
lea
adc
jg
lcall
pop
sti
cmpsl
adc
lods
lcall
jg
decl
add
xor
mov
ret
loope
mov
inc
xchg
ljmp
mov
ror
mov
xchg
loop
repz
pop
add
pusha
push
sub
push
dec
push
imul
test
mov
pop
push
scas
xor
in
test
roll
push
loope
xchg
add
ret
inc
lahf
mov
jnp
cmp
jge
inc
arpl
pushl
clc
incl
imul
jb
in
imul
dec
add
repz
lcall
arpl
fmull
inc
popf
fnstcw
pop
ret
out
addb
inc
xchg
not
adc
mov
jae
mov
mov
repnz
push
test
jnp
xor
add
outsb
std
jg
mov
jno
xor
ficomps
adc
popf
and
mov
cmp
xor
cmp
push
jmp
sti
fcompl
out
cmpl
push
or
lcall
mov
mov
je
xchg
xchg
pusha
mov
inc
je
cmc
xchg
pop
sub
jecxz
jnp
pushl
divl
insl
fcompl
xlat
sbb
jge
in
std
jmp
adcl
push
mov
adc
fwait
xlat
or
lock
pushl
ror
and
pop
or
aad
xor
jg
mov
shl
cmpsb
mov
ds
jg
xchg
pop
lock
fwait
or
dec
call
dec
daa
aam
jne
sbb
jno
mov
cmp
fildll
jne
mov
inc
in
ficoms
fmul
push
fdivs
nop
shl
jp
in
incl
push
dec
and
sahf
mov
jl
ret
jg
negb
test
cmpsl
sbbl
ljmp
jo
jbe
ss
mov
addr16
scas
cmpb
lcall
xchg
rcrb
fcoms
cmc
sbb
out
lock
jns
pusha
ljmp
jmp
xchg
cltd
scas
xchg
sbb
ds
imul
lcall
fidivrs
sarb
and
inc
add
cmp
xchg
jg
insb
mov
jns
push
das
cld
pushl
add
mov
push
mov
stos
mov
andb
jmp
mov
shl
mov
lcall
jge
stos
and
fildl
pop
loop
call
adc
lock
popa
pushf
or
test
jmp
sub
dec
in
xchg
xchg
pop
aad
xchg
xor
call
cli
push
and
cmc
or
or
mov
lret
jg
xlat
js
xchg
push
out
out
push
push
push
mov
fs
mov
ret
xor
das
mov
mov
das
hlt
jmp
dec
bound
or
sbb
fsubrs
jle
js
mov
and
mov
mov
fcmovne
lret
dec
imul
jne
jecxz
in
movsl
pushl
es
outsl
aaa
push
imul
dec
outsl
icebp
adc
aaa
cmp
sbb
clc
andb
push
popa
adc
scas
pop
popa
je
das
sbb
hlt
lahf
aaa
add
sbb
push
xor
dec
aam
mov
push
inc
fldl
pop
ret
data16
push
xchg
sub
lock
adc
aaa
clc
jmp
test
jecxz
xlat
cmc
popa
mov
xchg
and
xor
stos
pop
shll
cld
adc
sar
gs
jno
cmp
leave
inc
sub
sbb
inc
jecxz
push
incl
stc
call
ljmp
int
incl
gs
aam
xlat
mov
push
lcall
int
xor
scas
out
imul
dec
cli
cltd
rcrl
pop
push
xchg
in
fidivl
fwait
hlt
pop
mov
pop
sbb
loope
or
xor
and
je
cmp
cmp
sub
fnsave
es
fidivrs
mov
adc
jg
stos
adc
lods
into
mov
outsl
jns
jg
mov
sbb
shll
fistpll
loop
mov
xchg
out
movsb
jae
add
jno
mov
sbb
insl
sub
pop
xchg
call
test
repz
mov
inc
push
roll
daa
jae
aaa
jl
invd
pop
sub
hlt
jmp
lcall
add
repz
sub
into
or
or
fucomip
push
xchg
outsb
pusha
jmp
jp
imul
adc
aam
mov
mov
in
sub
outsb
repnz
push
cmp
decl
jae
test
pop
or
mov
sti
cwtl
push
daa
js
test
xchg
outsl
fmulp
jl
fiaddl
stos
out
sub
sarl
addr16
add
pop
sarl
jae
fcmovu
jl
and
xchg
pop
jg
outsl
lock
push
cmpsb
pop
cwtl
mov
pop
test
cmp
pushl
jge
dec
jno
mov
fnstcw
push
inc
jae
sbb
jge
jg
rclb
fcoml
push
fwait
lods
mov
adc
cmp
xchg
decl
call
jbe
mov
cltd
das
imul
lock
das
pop
imul
rclb
movsb
add
sarl
cli
jmp
push
dec
pop
add
cmc
ja
dec
xor
cwtl
mov
pop
in
lcall
outsb
inc
inc
xor
lret
jo
aas
cmp
hlt
pop
mov
mov
outsl
jnp
sub
call
jbe
daa
icebp
pushf
xchg
daa
mov
lods
jge
jl
out
sbb
sahf
clc
call
add
aas
ja
frndint
jle
ds
mov
xor
jnp
fists
jns
call
xor
dec
add
int
jae
insb
push
mov
push
cmc
inc
pushl
cmp
xchg
sub
inc
sub
mov
mov
mov
repnz
cmp
out
cmc
mov
xor
cmpsl
and
xchg
cmp
push
into
fs
jmp
mov
rorb
push
stos
sbb
xor
adc
dec
cld
mov
aas
aaa
and
push
xchg
fsubrp
mov
stc
popf
outsb
nop
or
pop
cwtl
push
push
xor
jg
jecxz
mov
lret
and
add
adcb
xor
jno
fisttps
sbbl
jge
enter
ret
jge
inc
loope
jg
pushf
pop
dec
sti
jnp
jmp
cmp
mov
scas
or
icebp
mov
sar
jg
fdivl
fisttpl
lret
aad
outsb
aaa
scas
mov
xorb
mov
js
xlat
outsb
mov
pop
gs
jp
out
mov
xlat
mov
lods
das
std
mov
test
sbb
out
push
push
mov
mov
aaa
sub
stc
arpl
mov
in
mov
xchg
xor
push
pop
int
mov
cmpsb
scas
dec
dec
sbb
hlt
jmp
sbb
or
aas
rcrl
je
incl
push
lret
sbb
and
arpl
mov
or
sbb
mov
incl
roll
jmp
and
fs
lcall
das
cld
call
out
subl
inc
aaa
mov
sbb
and
outsb
mov
xor
clc
jl
fdivl
adcl
push
mov
cmpsb
sub
lret
cld
cmp
out
mov
xchg
shlb
inc
orl
shr
lds
ljmp
ds
shrb
movsl
cwtl
clc
ja
pop
pop
jnp
test
xchg
popa
add
and
out
faddl
jl
in
outsl
ret
fcomip
or
mov
repz
insb
mov
or
jmp
test
jle
test
or
add
mov
dec
sbbl
fidivs
pop
mov
cmc
scas
icebp
add
cmp
fildll
adc
aad
sub
jmp
stos
loope
outsb
dec
mov
jne
mov
push
lcall
lret
repnz
mov
loopne
rorb
call
or
decb
je
push
ret
sbb
std
lcall
std
out
insl
or
push
and
adc
jmp
xorl
mov
ljmp
pop
rcll
fucomip
incl
test
push
jle
ss
out
pop
inc
cmp
push
cli
push
jbe
lcall
pop
insl
loopne
sbb
outsb
jne
pop
rcrl
push
inc
pushl
mov
mov
scas
jecxz
xchg
cmp
cmpsl
mov
and
push
sbb
outsl
sbb
std
ljmp
loope
leave
rdtsc
dec
adc
cmp
std
and
xor
sar
pop
decl
ds
and
sbb
xchg
jp
sbb
out
jl
and
ljmp
xor
addl
ja
sti
push
insb
fdivs
cli
xchg
std
mov
add
in
leave
call
ljmp
insl
dec
faddl
xchg
pop
pop
sub
repz
push
andl
xor
inc
push
mov
jns
mov
rorl
into
lea
cwtl
jns
pop
cltd
pop
cli
mov
ljmp
movsl
sub
pop
lcall
sub
jns
lock
jmp
out
pop
nop
int3
sbb
lret
addb
mov
out
ljmp
lret
cmp
xorb
fnstcw
aad
int
into
cmp
aad
leave
movsl
or
dec
jmp
aam
loopne
dec
xchg
out
sub
aam
lock
mov
data16
adc
jno
jge
leave
js
mov
imul
sub
lahf
dec
inc
ja
lcall
xor
adc
xchg
xor
and
clc
pushl
fistl
xlat
rcll
daa
push
sbb
mov
imul
lcall
pop
or
loopne
and
loope
sarb
xchg
sahf
in
rclb
loopne
jns
add
pop
jge
inc
es
imul
sbb
jb
popl
imul
xchg
xchg
jmp
or
popa
in
cmp
test
ret
xchg
scas
mov
cmpsb
test
push
sti
incl
xchg
ja
lock
movsl
idivb
mov
icebp
in
aad
mov
mov
cli
cmp
adc
xchg
mov
je
fnstenv
push
gs
ret
imul
xchg
fwait
popfw
push
push
xchg
in
xor
cmp
cli
pop
push
lret
add
adc
decb
cmp
pop
iret
jnp
lahf
jmp
inc
popa
sti
cmp
cmp
incl
mov
scas
imul
cld
lret
in
mov
jne
sub
dec
mov
cmp
roll
cmc
decl
push
mov
test
movsb
jg
or
dec
in
inc
mov
sub
mov
popf
jnp
cmp
xor
jp
sub
jge
mov
push
push
jnp
sbb
clc
aam
pop
ss
pushf
or
mov
jg
xlat
xor
sbb
jg
mov
jno
ds
add
mov
sti
or
insw
mov
ret
clc
div
pop
call
dec
dec
aaa
fstpt
cmp
jo
xor
mov
push
imul
cmp
pop
sbb
or
decl
in
cli
dec
lods
stc
add
pop
loopne
dec
movsb
xor
test
aaa
aas
sti
jb
sbb
pop
xor
outsb
test
xor
leave
daa
add
lcall
mov
inc
adcl
and
cmp
xor
dec
loope
add
jns
cmp
or
pop
mov
pop
data16
sbb
ljmp
stc
js
nop
push
insb
insl
jbe
xchg
mov
cmp
ds
dec
vdivss
xor
daa
push
mov
neg
inc
addr16
push
jns
push
mov
outsl
lock
push
push
cmp
or
jmp
jb
mov
add
jg
jg
jo
cmpsl
sbb
or
and
xchg
call
lcall
push
popa
fdivrs
enter
sub
stc
pop
pop
cmp
add
push
add
cmpsb
call
mov
and
inc
and
lret
pushl
out
inc
mov
loope
adc
inc
pop
out
pop
pop
jecxz
dec
mov
fldenv
lret
lcall
pop
dec
push
dec
aas
jbe
shll
loope
adc
or
scas
sbb
pop
dec
pop
push
aas
xchg
dec
sar
lcall
pushl
test
mov
add
adc
pop
ss
test
ljmp
mov
aas
clc
insl
clc
outsl
adc
ret
adc
jnp
dec
outsl
cmp
jb
sbb
lcall
inc
mov
imulb
mov
adc
cmp
cli
cmpsb
lahf
popa
push
pop
pop
movsl
pop
adc
jmp
push
sub
adc
lret
les
repz
loope
jne
jmp
xchg
sbb
and
or
cmp
dec
rolb
int3
push
add
ficoms
popa
jmp
lcall
mov
aas
jle
arpl
cmpsl
mov
fldl
xchg
pop
mov
sar
aas
jns
lahf
xlat
das
ffreep
push
cmp
add
lods
fisttpl
jmp
add
cmc
dec
push
icebp
or
mov
or
xor
jbe
lahf
arpl
dec
mov
ja
cwtl
les
adc
and
jmp
cmp
cmp
mov
shlb
and
and
imul
fists
add
les
fnstsw
call
inc
adc
cli
popa
test
idiv
sub
daa
xchg
cmpsb
divb
rolb
sub
xchg
ljmp
add
xchg
not
mov
sbb
pop
fistpl
scas
mov
in
in
loopne
xchg
adc
lcall
jge
push
lods
rolb
repnz
or
sbbl
pop
cmp
filds
inc
call
jbe
push
js
cs
xor
sub
scas
cmpsb
inc
gs
sahf
ss
stos
push
mov
lret
cmp
pop
and
push
jno
out
fs
pop
ja
stos
shll
jge
jmp
mov
shll
lods
jne
fmull
das
mov
out
in
cltd
out
mov
xor
sub
aad
outsb
arpl
ret
rcr
sbb
mov
dec
stos
jae
aad
arpl
imul
repnz
push
fcomp
cld
pushf
inc
pushl
pop
je
pop
loope
dec
mov
das
cs
mov
cld
into
outsl
arpl
sub
ljmp
add
jp
xchg
jbe
push
add
xlat
inc
lret
mov
test
test
mov
mov
incl
ret
sub
adc
xor
pop
or
dec
mov
outsl
stos
pop
call
arpl
cmp
cmp
cmpsb
adc
and
ret
pop
push
pop
test
mov
push
or
ljmp
out
out
loope
mov
sahf
and
loop
sbb
sbb
mov
xchg
lcall
std
ds
jge
rcr
mov
sub
test
mov
lahf
xchg
rorb
jmp
adc
dec
cmpl
or
int
cmp
incl
sahf
insl
jne
dec
loop
icebp
pushf
add
ss
rorl
adc
add
ret
dec
mov
jne
mov
pushl
mov
cmpsb
movsb
dec
scas
imul
jb
sub
push
pop
cmp
sbbl
clc
call
cmp
std
notl
iret
jecxz
pop
imul
mov
hlt
jmp
leave
cmpsb
hlt
push
nop
repnz
dec
adc
sahf
ret
pushl
or
lahf
sub
loopne
dec
jbe
hlt
jp
pop
mov
std
hlt
jmp
fsts
std
or
mov
xchg
insb
aas
clc
jg
das
popa
xchg
jmp
sbbb
adc
call
fnstcw
dec
movsb
inc
sbb
pop
je
sbb
pop
mov
rorl
enter
xor
shlb
mov
fcoms
decl
inc
iret
push
call
mov
mov
push
call
call
xchg
fiaddl
test
xchg
inc
mov
jae
pop
mov
ffreep
loop
lcall
jge
mov
or
or
jge
lock
ret
aad
out
add
dec
pop
inc
maxps
loope
ja
mov
and
daa
outsb
and
call
ljmp
adc
inc
fstpl
popf
decl
xor
cmp
or
push
adc
jb
pop
mov
call
push
sbb
rcrb
add
aad
push
and
push
js
mov
jge
jle
and
insl
cmpsb
lret
decl
pusha
or
mov
inc
dec
out
jmp
scas
nop
fldenv
cs
xor
std
dec
jl
je
hlt
add
dec
pop
adc
push
clc
imul
ljmp
call
mov
xchg
or
loopne
pushl
xbegin
faddl
mov
xor
mov
incb
mov
pop
imul
xlat
bound
cmp
scas
or
orb
cmc
pop
mov
adc
mov
ljmp
fldl
mov
mov
lcall
sbb
movsb
xor
sub
and
push
push
push
icebp
mov
add
jg
ljmp
xchg
push
dec
mov
and
addr16
cmp
mov
mov
push
cmp
jnp
sbb
adc
jl
and
fstl
mov
push
dec
faddp
mov
mov
incl
mov
fiadds
or
cmpsl
pop
int3
sub
sub
pop
cld
lcall
into
mov
ja
orb
fprem1
shl
pop
jge
jle
dec
fmul
mov
or
insl
sub
pop
imul
push
xchg
cmc
pushl
mov
xor
rorb
jb
xchg
loopne
mov
aaa
xchg
and
adc
sbb
in
cmpsl
ficomps
dec
pop
xchg
xchg
aas
dec
xor
xor
inc
jno
decl
inc
push
dec
lock
pop
xchg
add
je
jb
or
orb
call
sbb
pop
adc
dec
xchg
pop
mov
xchg
push
lea
es
cmp
cwtl
or
fsubr
dec
dec
inc
and
xor
data16
fwait
ljmp
mov
mov
imul
dec
iret
mov
out
ss
add
outsl
hlt
std
ja
popa
xchg
scas
popf
push
xor
cmp
mov
or
mov
fcomps
js
loop
push
jge
hlt
das
cmc
int3
mov
mov
arpl
jmp
adc
ds
int3
push
int
push
inc
fnstsw
or
sahf
lods
test
repz
ljmp
inc
sbb
iret
imull
mov
int
rcr
test
subl
pop
sbb
mov
dec
les
push
imul
jnp
fistpll
xor
inc
adc
pop
adc
mov
pushl
mov
mov
test
cmp
inc
inc
sbb
stos
xchg
sub
decb
add
mov
mov
jmp
cmp
inc
mulb
imul
xor
xchg
lock
fisttps
dec
mov
fstl
push
in
pop
pop
popw
mov
xchg
cmc
inc
jbe
adc
loop
call
les
and
mov
xor
pop
std
lcall
jae
repnz
cmp
xor
js
add
icebp
cmp
sar
dec
insb
jmp
push
mov
mov
jbe
jg
mov
fnsave
inc
idiv
rcrl
or
jg
or
call
jle
repnz
pushl
bound
jle
add
adc
cmp
les
mov
cli
lcall
stc
pop
sub
mov
mov
sub
xor
das
hlt
push
fcoml
iret
das
add
or
nop
loop
mov
mov
mov
data16
mov
inc
sub
cs
mov
mov
bound
or
pushl
arpl
outsl
ret
dec
mov
xlat
fimuls
mov
leave
jmp
jo
addl
out
stos
movsb
push
js
int3
and
jg
lcall
ds
jns
and
xor
dec
jmp
idiv
inc
xor
imul
daa
pop
push
xchg
fistps
xchg
clc
pop
jp
mov
loop
sbb
mov
lret
mov
outsl
jp
fdivrp
lds
cs
lahf
mov
stc
pop
dec
sbb
out
xor
push
inc
pushf
push
cmp
mov
inc
inc
in
pop
out
fnstenv
loop
jg
call
dec
fwait
jp
icebp
xor
mov
dec
das
mov
jnp
adc
lahf
lods
out
sbb
aaa
inc
cli
incl
xchg
mov
inc
fwait
ret
sub
mov
inc
mov
jge
pushl
adc
ljmp
rcrl
inc
sti
mov
inc
loop
fidivs
xor
out
xchg
sbb
or
inc
aam
call
push
sbb
dec
cmpsl
mov
fs
xchg
mov
xor
lcall
ret
jae
mov
jge
jge
in
imul
inc
adc
cli
aaa
push
jg
repnz
test
push
push
jg
clc
les
mov
sbb
decl
clc
push
stc
and
or
and
push
movl
sti
jg
ljmp
xchg
into
ss
push
dec
ja
pop
inc
pop
mov
stos
out
hlt
mov
enter
pcmpgtw
sarb
lahf
pop
clc
pop
sbb
ljmp
lock
cmp
daa
dec
mov
mov
mov
xor
mov
push
pop
sub
xchg
pusha
insb
pushf
aad
iret
aam
mov
sbb
div
mov
bound
inc
fbld
pop
mov
sbb
ja
aad
xor
cmpsb
lods
les
lcall
aas
jae
popf
insl
lea
inc
gs
lcall
mov
mov
cld
incl
dec
add
aaa
lcall
test
test
jae
push
pop
rcrb
call
scas
inc
pop
cltd
outsl
out
and
pop
cmpsb
sbb
outsl
push
les
mov
or
cmp
call
sbb
add
xor
adc
loopne
je
add
push
decl
xor
int3
insl
gs
lods
stc
ljmp
push
pop
mov
ds
sub
xchg
andl
pusha
dec
in
sbb
les
and
sub
sahf
out
les
mov
daa
cmp
lea
mov
pop
popf
popf
popa
mov
das
icebp
and
and
call
add
js
call
sub
repz
imul
xchg
mov
call
cltd
fwait
gs
decl
xlat
aaa
and
out
ret
mov
shll
adc
incl
pushl
rorb
xchg
jae
jb
xor
int
int3
pop
cltd
aaa
sahf
nop
lcall
jnp
xchg
ja
mov
jno
pop
stc
cmp
arpl
jns
decl
std
dec
jne
mov
mov
adc
das
sub
xchg
call
mov
mov
sbb
mov
mov
fisubs
ss
cmp
pushl
dec
push
cli
push
stos
push
push
jne
sahf
mov
out
push
lret
add
sbb
mov
jmp
test
jns
mov
call
jno
sbb
mov
arpl
add
adc
call
cli
add
hlt
mov
and
jl
out
fs
mov
xchg
sbb
decl
ljmp
xchg
jne
rcrb
push
cmc
mulb
inc
inc
or
jno
mov
test
stc
movsl
pop
call
add
push
out
imul
incl
lret
outsl
mov
cmp
fstps
dec
jle
push
and
xchg
push
clc
mov
or
inc
iretw
or
cmpsb
add
call
xchg
or
pusha
jae
test
int
les
xchg
inc
decl
std
ljmp
lock
xlat
inc
inc
or
mov
sub
ljmp
jnp
pop
push
mov
lods
clc
sub
jle
out
aam
dec
and
jl
fiadds
xchg
pusha
xor
rcrl
push
fsubs
addr16
rcl
add
push
mov
in
out
cmc
jge
mov
movzbl
mov
or
adc
sub
xchg
jnp
bound
jae
jp
into
mov
jg
sub
lret
jns
push
xor
jp
or
dec
and
into
pop
testl
lock
hlt
push
mov
je
push
ret
cmp
xor
push
pop
data16
mov
jo
lds
outsl
icebp
mov
push
in
xor
nop
or
cmc
sbb
shll
sub
popa
jp
cs
jnp
pop
iret
cld
loopne
aaa
in
mov
ljmp
std
clc
inc
enter
jle
mov
dec
out
int3
inc
push
fcmovnu
xchg
ret
xchg
shrl
push
adc
call
pop
jnp
mov
mov
mov
jg
in
mov
fistps
in
fisubl
lods
push
xchg
push
mov
sti
out
pushf
inc
jmp
out
sarb
mov
fcmove
jb
cmc
mov
jmp
in
mov
lret
faddl
xchg
cmp
sbb
aad
pop
pop
iret
std
cmp
and
cmpsl
imul
aaa
or
movl
sub
inc
ds
cmpsb
movsb
add
mov
xlat
push
je
neg
mov
mov
popf
mov
dec
mov
fmulp
lahf
mov
and
outsl
popa
cli
arpl
les
adc
shlb
cmp
push
adc
out
enter
ljmp
mov
add
fdivl
inc
mov
cmp
cmpsl
std
orb
or
les
shl
add
imul
das
je
lds
fistl
xchg
incl
xor
popf
ret
lods
add
mov
arpl
mov
pop
sub
mov
xor
xor
clc
jno
pop
mov
lock
inc
andl
call
or
sub
outsl
std
jmp
push
rcrl
lret
daa
movsl
leave
mov
mov
cli
lods
icebp
sbb
subl
ja
in
dec
inc
mov
sti
rorb
in
push
cmc
jae
push
and
inc
dec
sbb
loope
lcall
andb
fwait
pop
cmp
cmc
cltd
xchg
lods
scas
ficoms
js
clc
les
ss
mov
stos
jo
xlat
in
lcall
mov
iret
sub
pop
outsb
inc
sub
mov
das
movsb
in
jle
cltd
out
fmul
test
push
jg
sub
mov
sbb
sahf
decl
mov
or
call
sbb
dec
sub
test
in
fnstsw
lock
mov
xor
imul
mov
mov
popa
dec
mov
aam
repz
cld
fcmovnbe
inc
dec
or
jg
repz
out
hlt
jns
mov
mov
jmp
scas
int
or
and
sub
xor
jb
lcall
inc
xor
xchg
jbe
adc
add
add
mov
inc
test
add
call
mov
call
cmp
movsb
inc
add
mov
sbb
inc
fstpl
movsl
arpl
decl
pop
mov
test
push
cmp
dec
pop
xchg
aam
movsb
jmp
add
lcall
adc
cmpsb
imul
mov
sub
lahf
ror
ss
insl
fsubp
lcall
adc
mov
jl
clc
push
mov
dec
call
call
mov
sbb
push
jp
leave
repz
add
jle
sbb
call
div
or
adc
xchg
mov
lahf
xor
mov
inc
out
bound
inc
cltd
mov
adc
int
cmp
sub
push
iret
xchg
dec
rcrl
cld
pop
add
insl
addr16
shrb
jbe
sar
lcall
mov
mov
mov
fs
nop
out
pop
sahf
lahf
cmp
add
mov
xchg
add
inc
cld
ds
fdivp
mov
std
test
pmulhuw
ss
fwait
jbe
cli
movsl
or
scas
ret
mov
cld
xor
pop
aad
sub
jno
adc
icebp
jnp
mov
aas
pop
or
scas
imul
lcall
aam
mov
lret
sbb
xor
ds
and
mov
out
idivb
mov
sub
mov
jnp
mov
incl
call
fwait
jne
repnz
push
jb
or
mov
and
arpl
jmp
stos
push
outsl
loopne
add
mov
push
mov
scas
mov
loope
add
call
lahf
adc
xor
jp
jbe
gs
out
or
sub
adc
call
pop
mov
dec
cmc
mov
shlb
xlat
xchg
call
mov
fcompl
lahf
adc
cmpsb
mov
push
mov
pop
and
push
incl
pop
pop
sti
push
fistps
jmp
cmc
sub
or
outsl
std
pop
fs
daa
outsb
test
jb
add
xchg
loop
or
repz
out
lcall
cld
in
loop
gs
lret
mov
mov
inc
leave
cmp
lcall
shl
arpl
dec
call
inc
negl
cmpsb
jns
lds
jp
or
dec
pushf
mov
decl
push
and
aas
jg
dec
xorb
dec
outsl
mov
clc
je
add
xor
adc
aam
pop
mov
push
ljmp
decl
and
fs
fistpl
orl
inc
cwtl
mov
clc
das
hlt
incl
pop
icebp
lods
out
dec
sti
or
mov
outsl
add
in
and
clc
lods
int3
adc
mov
cmp
sbb
push
mov
jecxz
dec
mov
mov
lret
scas
ret
test
xchg
lret
enter
arpl
push
pushl
pop
xchg
xchg
lcall
mov
scas
adc
xor
xchg
jnp
mov
outsl
hlt
and
loope
into
lds
sti
jge
jo
stos
mov
dec
incl
pop
pop
jbe
pop
jge
sub
daa
imulb
daa
pop
lea
xchg
push
push
cmpsl
jnp
lcall
jnp
in
rorb
repnz
stc
loope
pop
dec
ja
outsb
push
cld
and
pop
cltd
icebp
pushl
sbb
data16
bound
sti
xor
xchg
xchg
int3
adc
in
push
daa
ljmp
test
dec
push
push
pop
dec
and
test
ljmp
cmc
jmp
fisttpl
into
xor
mov
decl
test
cli
out
sti
pop
ficompl
int
ljmp
cmc
jnp
xor
stos
cwtl
jge
cmp
jecxz
mov
push
lret
ficompl
inc
scas
inc
cmp
jmp
push
mov
jo
xchg
sahf
lods
je
lret
test
mov
jne
or
out
jbe
mov
xorb
and
jmp
xor
jmp
mov
xchg
lock
in
adc
sbb
adc
cs
inc
scas
sub
cmp
ljmp
sbb
mov
mov
add
pushf
sbb
cmp
decb
jmp
outsl
lock
mov
and
adc
jnp
xchg
lret
cmpsb
mov
inc
sbb
in
adc
sbb
push
mov
jmp
aaa
cli
jmp
std
adc
into
test
sub
es
fcompl
push
cli
xchg
jmp
jg
jg
xorl
jnp
out
daa
rclb
sub
sbb
cmpsl
out
ss
lcall
pop
adc
mov
add
cld
loop
gs
lea
ljmp
jmp
mov
stos
insl
pop
inc
mov
and
std
lds
or
cld
cmc
xor
mov
push
sti
mov
rolb
lds
stos
pop
lahf
mov
ljmp
insl
xchg
jae
sub
std
sahf
mov
repz
hlt
js
lds
out
stos
dec
call
sti
or
clc
dec
in
dec
mov
mov
cmp
scas
nop
daa
ja
adc
out
decb
std
js
pop
jb
add
mov
xor
xchg
jg
cmc
jne
cmp
jg
pushl
outsb
popa
sub
ret
insl
jne
pop
ds
mov
push
mov
shll
test
cmp
sub
adc
jg
add
dec
jl
lret
mov
xchg
andb
loop
aaa
clc
adc
shll
cli
das
xchg
pushf
sbb
push
call
fistps
rcl
cmp
jns
cmp
stos
loope
clc
jg
test
pop
idivl
xabort
mov
inc
jmp
jmp
add
dec
repnz
dec
pop
stc
cwtl
xchg
aad
push
mov
icebp
push
jmp
cmpsl
bound
mov
cmp
lock
mov
dec
std
mov
lock
mov
cltd
popf
jl
fwait
lahf
mov
xorb
mov
push
adc
test
ficompl
mov
aas
fiaddl
inc
mov
push
scas
xor
pop
fbld
call
xchg
rcrl
dec
push
shl
and
xchg
aaa
jmp
aaa
and
adc
jbe
adc
scas
notb
lods
jno
mov
movsb
pop
or
test
dec
xchg
mov
push
fwait
jecxz
das
pusha
or
in
in
loop
inc
jo
stos
std
mov
xchg
cli
jmp
loop
xor
jecxz
cmpsl
inc
mov
sub
dec
ss
fdivl
dec
ljmp
inc
ret
repnz
and
lret
and
imul
ljmp
add
dec
aam
sti
stc
xchg
cmp
das
je
ds
and
adc
mov
ljmp
int3
pushf
test
int3
xchg
push
or
xor
jmp
lds
lcall
ljmp
in
ret
jbe
adcb
icebp
push
pop
incl
push
pop
loope
scas
jle
mov
sarl
pop
into
lahf
popl
mov
pop
add
out
mov
pop
inc
aad
sub
jp
cmp
imul
decl
xchg
push
mov
push
outsb
cmp
push
dec
popa
enter
hlt
lret
jg
mov
xchg
cwtl
jbe
sbb
jp
mov
les
adcl
ljmp
ret
lods
dec
std
inc
jb
sub
mov
mov
pop
addr16
pop
lcall
pop
jns
adc
jmp
push
jo
xchg
cmp
fcompl
outsl
fstl
adc
and
je
dec
adc
mov
jg
lea
or
add
aaa
push
sub
or
scas
pop
cmp
popf
test
xchg
jmp
push
in
push
mov
cld
inc
sub
dec
les
scas
push
pop
fs
inc
or
std
mov
mov
sbb
xor
pop
insb
aas
fcomps
xor
outsb
popa
push
mov
sarb
enter
or
push
xor
test
mov
ja,pn
sti
push
jmp
jmp
mov
fwait
movb
or
out
mov
push
ljmp
fisubrs
mov
inc
sbb
pop
stos
jg
mov
lcall
test
cltd
rcrb
push
xor
add
mov
cmp
lods
decl
dec
es
popf
pop
xlat
push
cmp
mov
xchg
aam
pushl
mov
dec
push
dec
cli
int
lds
mov
mov
fnstenv
lahf
jns
lahf
cmpsl
jae
fisttps
jne
push
addr16
jecxz
sarb
mov
ret
or
xchg
test
out
rorl
jg
pushl
in
icebp
stc
lret
mov
rclb
fstpl
fldcw
clc
incl
sbb
fcmovbe
add
dec
daa
mov
int3
cmp
cltd
enter
loop
push
pop
call
xchg
pop
mov
or
jmp
in
push
xchg
fisubl
loop
push
push
repnz
in
dec
mov
jg
dec
pop
mov
test
mov
jns
lds
mov
ss
ljmp
std
ljmp
nop
cmp
mov
adcb
cld
not
dec
decl
cld
inc
lret
sub
sub
xchg
push
xchg
out
lcall
lods
mov
jns
cs
push
fwait
mov
lcall
je
repnz
mov
push
jge
das
mov
ret
mov
std
je
pop
inc
jmp
jg
dec
arpl
mov
xchg
jb
and
ficomps
mov
inc
pop
xor
aam
loope
jmp
enter
andb
jge
pop
movsb
pop
xor
ljmp
cld
pushl
mov
icebp
lock
cltd
pop
jmp
nop
push
dec
add
inc
ljmp
lock
mov
fcompl
sahf
pop
adc
cmpsb
stc
xor
add
mov
ds
and
or
int3
mov
jge
xor
inc
out
test
add
add
mov
dec
dec
cmp
lcall
mov
sub
clc
push
jp
sti
sahf
pop
jmp
xor
lret
ljmp
subb
shld
insl
push
fcoms
daa
pop
jmp
jg
mov
sbb
sub
xchg
fyl2x
in
mov
xchg
lock
jge
xchg
jo
aas
test
and
repz
int
sbb
jecxz
js
ljmp
adcb
ret
sti
pop
call
rol
sub
sar
pop
xchg
inc
lock
pop
repz
mov
pushl
jmp
fs
test
push
stos
sub
pop
xchg
call
xchg
fldt
and
mov
pusha
lcall
fists
imul
push
push
xchg
adc
addr16
sahf
mov
cmp
push
call
jae
xor
bound
in
orl
sub
cmp
jne
in
call
mov
pop
jl
mov
decl
inc
cmp
fists
inc
popf
sbb
push
fwait
jns
stc
push
call
sbb
cmp
lret
fs
or
push
add
std
les
inc
mov
mov
add
rcll
jns
sbb
pushl
cli
xor
ret
add
dec
xchg
popfw
iret
pop
leave
mov
mov
fucomip
xor
xlat
and
xor
jnp
xor
dec
cmp
roll
fiadds
mov
pop
mov
or
jae
std
pop
cli
in
scas
xchg
clc
inc
cmpsl
out
cmpsb
push
cmp
jnp
gs
mov
clc
mov
outsl
mov
xor
lahf
ljmp
sub
pushl
pop
std
pop
orl
insb
pop
incb
cmp
mov
lea
pop
dec
push
ret
sub
jb
outsl
sti
cltd
sbb
call
rcr
stc
insl
push
pop
out
ret
pop
mov
lahf
mov
jmp
inc
mov
insl
xchg
rolb
sub
call
or
mov
sub
mov
sbb
lcall
sbb
push
sbb
inc
fneni(8087
jge
mov
mov
jno
push
inc
add
cld
ljmp
scas
scas
inc
cltd
jnp
ret
sub
jle
jbe
pop
xor
decl
inc
out
outsl
enter
mov
das
inc
jns
jg
decl
jmp
loopne
cwtl
loope
jmp
call
rorb
stos
std
xor
adc
lret
mov
jmp
mov
arpl
push
pusha
push
push
insl
lods
movsl
ret
sub
int3
mov
into
fisttpll
les
adc
jg
pop
std
call
adc
adc
stc
mov
call
jecxz
cmp
loop
incl
dec
mov
dec
jle
mov
pop
cli
push
cmpsb
cltd
pushl
push
rclb
mov
dec
enter
xor
out
shr
mov
adc
push
ds
or
jmp
mov
fbld
testb
fs
add
fnsave
enter
incl
out
xlat
fdivrs
mov
jl
adc
icebp
cs
mov
movsb
mov
dec
sbb
clc
mov
and
pop
jne
test
mov
ja
stos
scas
jno
gs
cwtl
js
and
mov
jmp
push
cmp
idivb
hlt
rcll
aas
fisttpll
lcall
pop
out
popa
gs
daa
lahf
inc
test
jae
xor
aam
pushl
imul
fstpt
enter
stos
incl
lock
mov
in
ret
out
cmp
mov
loop
mov
fwait
jl
cltd
lods
add
cmpsb
shlb
push
hlt
adc
cmp
frstor
pop
mov
xor
adc
xor
mov
mov
mov
stos
xor
call
lret
in
inc
int
jge
ficoms
and
loop
xlat
lahf
clc
nop
pop
call
lcall
jae
pop
leave
adc
xchg
repnz
mov
andb
shlb
inc
mov
sub
dec
mov
mov
cmp
js
dec
cld
jmp
dec
les
arpl
aam
notl
mov
jp
ficompl
mov
xchg
cld
jns
push
gs
inc
pusha
cli
xchg
sarl
stos
mov
mov
movsl
xor
lea
ret
fdivrl
xchg
shrb
loopne
ljmp
sbb
cmp
popa
and
call
mov
jmp
call
dec
in
pushf
mov
int
lods
mov
inc
lods
adc
test
std
jmp
mov
popl
push
push
xchg
or
imul
fbld
lds
push
ja
fisubrl
sbb
decl
rcrl
push
sub
hlt
inc
mov
pushf
out
inc
lcall
sbbl
es
jmp
push
js
mov
out
pop
jecxz
jmp
xchg
mov
movb
mov
ret
pop
nop
mov
fidivrs
xchg
sbb
loopne
xlat
and
stc
rcr
dec
outsl
jmp
mov
jmp
jecxz
pushl
cli
or
jae
out
outsb
scas
scas
outsl
or
lahf
push
push
jno
fmul
mov
push
mov
mov
mov
cmpsl
rorb
ljmp
adc
xor
scas
cltd
lds
pop
mov
pop
nop
mov
dec
sbb
or
mov
cmp
push
loop
mov
call
xlat
pop
cli
incl
dec
push
push
mov
ret
arpl
clc
decl
mov
xor
or
dec
ja
cltd
js
pop
nop
out
mov
pushl
dec
xchg
add
pushf
cmp
ds
ss
notb
filds
lret
jbe
aad
lds
mov
dec
dec
and
ja
dec
jmp
mov
stos
int3
ljmp
sub
lahf
mov
ret
push
aam
and
mov
lds
out
sti
sbb
out
dec
cmovle
sub
mov
cmp
mov
lea
cltd
loope
iret
jmp
test
mov
test
pop
clc
fcoml
xor
jl
imul
adc
fildll
push
and
mov
incl
ljmp
fsub
loop
pop
mov
mov
inc
lahf
fwait
sbb
das
frstor
pusha
imul
in
and
fnsetpm(287
push
adc
mov
xor
jne
mov
push
pop
sahf
ret
cli
adc
fidivl
add
out
sub
adc
push
hlt
incl
add
sbb
imul
pop
sbb
xchg
outsb
cmp
stos
test
in
adc
je
ss
mov
pop
pop
and
insl
dec
mov
mov
mov
mov
pop
fcmovb
xor
stos
js
sbb
sub
mov
inc
iret
in
cmpsl
mov
xchg
xor
sub
aaa
fwait
mov
and
lret
push
or
js
sbb
or
adc
rorb
cltd
fcmovbe
inc
gs
push
dec
or
fsts
and
jae
nop
jle
stc
es
or
sbb
sbb
cmc
and
sti
sub
jmp
lret
jmp
rcll
test
cmc
mov
xor
push
repz
sub
and
loope
clc
outsl
mov
push
mov
call
int3
pop
sbb
pop
jl
pop
lahf
lcall
push
shl
out
lret
cmp
xchg
mov
xlat
or
fistpl
jae
movsb
in
dec
insl
inc
push
out
fists
pop
jae
cmp
ss
test
rcrl
pushl
cwtl
test
and
movsl
scas
dec
cltd
cmp
sub
incl
popa
stos
push
test
pop
sub
mov
aas
or
xchg
adc
negl
add
jg
decl
mov
test
icebp
jg
idiv
sbb
clc
insl
or
push
addr16
insl
cmc
ljmp
sub
fsubl
adc
or
jge
pop
stos
outsb
cwtl
gs
clc
xchg
dec
push
push
sbb
sbb
pop
jg
decl
call
dec
or
jns
mov
cmp
adc
lcall
mov
mov
jg
pop
incl
mov
subb
movsb
sar
jbe
dec
push
push
lcall
add
inc
cs
mov
dec
sub
fsts
sub
jmp
sahf
scas
xchg
push
ljmp
mov
sar
lcall
add
in
sub
test
mov
mov
mov
ljmp
cld
sbb
mov
push
lahf
lahf
dec
ljmp
test
int
std
ret
lret
scas
lret
ret
sti
ret
scas
xchg
dec
stc
and
pop
shrl
out
and
pop
add
gs
jge
test
testl
rcrl
cmp
and
mov
ret
sub
inc
outsl
lock
call
adc
fcompl
mov
outsb
jle
gs
popf
mov
jmp
lds
clc
jns
and
sbb
sbb
add
adc
pop
fdivr
pop
jg
ds
mov
es
xchg
loope
jns
decl
hlt
xchg
push
sti
push
xlat
popf
mov
pop
lea
mov
mov
push
rcll
xchg
repnz
in
mov
lds
or
xchg
outsb
mov
nop
ds
call
xchg
ljmp
mov
pop
or
ret
adc
and
decl
jne
sar
push
inc
push
mov
rcl
jb
mov
lret
fmull
mulb
push
or
aad
sub
mov
scas
arpl
jno
je
stos
jg
incl
rolb
in
inc
jmp
mov
arpl
jg
loop
into
sbb
mov
stos
les
dec
mov
sub
mov
jl
sub
push
jnp
and
jmp
jle
movsb
movsb
test
outsl
outsl
in
sub
outsl
push
adc
sub
and
pusha
cmp
inc
aaa
decb
cld
sub
dec
cli
ja
add
add
and
div
jg
decl
stc
test
jle
adcb
cli
sbb
and
push
mov
rcrl
mov
imul
mov
mov
lds
lods
jae
sub
push
call
pop
lret
dec
loopne
test
mov
push
leave
mov
loope
inc
push
mov
shlb
fisttps
bound
neg
push
int
ljmp
out
xor
dec
inc
repz
rcrl
or
dec
pop
pop
mov
pop
loop
xorl
data16
add
jns
andb
mov
pop
leave
cld
das
icebp
jmp
and
push
stc
pop
mov
pop
cli
lcall
cli
jno
cmc
loop
int3
mov
jns
fs
hlt
inc
lcall
rol
dec
push
adcb
pop
call
mov
loopne
jo
ss
pop
cmp
clc
mov
popa
shl
push
inc
pop
loop
lods
data16
mov
ljmp
add
jnp,pt
rcr
xchg
cmp
shlb
cli
outsl
mov
mov
add
int
notb
ret
loopne
add
add
jg
das
lret
xor
cbtw
push
pushf
loope
icebp
and
in
cmp
cmp
frstor
mov
das
sbb
lcall
test
mov
sbb
out
lods
test
dec
sub
cmp
jnp
mov
mov
enter
in
push
inc
sarb
je
jg
xor
std
lds
mov
cltd
outsl
data16
push
mov
dec
mov
mov
adc
cmp
push
or
sti
fisubrl
xor
nop
rorl
loopne
pop
test
xchg
sub
lods
flds
dec
pop
incl
jp
xor
daa
subl
mov
jmp
cld
fisttpll
fucomip
mov
mov
jae
movsl
ds
jg
mov
pop
addr16
inc
rolb
mov
mov
movswl
inc
xchg
sbb
lcall
pop
xor
xor
stos
lcall
adc
cli
test
mov
pop
out
subl
jne
mov
enter
addl
nop
shrl
daa
ffree
mov
mov
xchg
stos
sub
data16
lahf
pop
mov
sub
fnstsw
incl
lahf
insl
pop
divl
push
dec
inc
push
cmp
xchg
outsl
inc
sub
push
inc
xchg
pop
mov
ljmp
jo
jne
or
and
imul
adc
lcall
jle
mov
mov
xor
ficomps
pushl
jnp
dec
hlt
into
fcompl
jnp
hlt
scas
dec
jne
lea
mov
xor
cltd
insl
incl
ss
cmp
xchg
mov
cmp
jo
cmp
xor
sbb
push
add
push
lcall
lods
adc
and
dec
jne
jecxz
leave
ficoml
sub
notb
lahf
push
decl
arpl
mov
test
push
std
adc
mov
out
inc
or
decl
lock
dec
gs
nop
add
repnz
mov
xor
mov
lret
fldl
xor
fildll
sub
jo
outsl
hlt
ds
fincstp
arpl
daa
dec
mov
scas
fbld
sub
sub
test
add
pushf
jo
cltd
fwait
pop
cmp
std
in
jnp
inc
test
xchg
xor
xor
loopne
pop
ljmp
aas
hlt
stos
xchg
mov
push
mov
jnp
jp
pop
incl
sbb
jo
and
push
scas
add
or
daa
xor
ret
push
jge
clc
sti
sahf
push
jmp
mov
or
add
mov
xchg
cli
call
mov
in
jmp
mov
cmc
jb
ljmp
lock
fwait
mov
call
aad
cmp
jmp
or
or
decl
arpl
sti
xchg
push
rcr
mov
mov
or
in
push
pop
xchg
orb
into
divb
fwait
cli
iret
fwait
dec
lea
cmp
lea
jmp
ljmp
je
jge
ja
shll
push
mov
mov
mov
ljmp
sbb
push
cmc
push
sub
mov
les
rcrl
xchg
pop
xchg
adc
push
lock
pop
js
jns
stos
fisubl
sbb
or
mov
pop
std
fistpl
push
xchg
das
mov
cmpsb
jle
or
shr
cmp
jge
lcall
fistl
lea
not
dec
adc
jp
xor
pop
pushf
sti
insb
in
lds
ljmp
decl
aam
icebp
in
or
jle
fdivrp
test
cmp
xchg
xchg
cs
jmp
leave
dec
cltd
xor
daa
pop
mov
or
out
jecxz
jle
push
pushf
xchg
inc
inc
mov
jne
jns
pop
sbb
fcoml
fisttpll
jmp
adc
popa
int3
lcall
repz
pop
jp
xchg
add
mov
add
or
fdivrs
das
lock
mov
loop
and
mov
or
loop
outsl
std
or
sbb
xchg
add
jge
jg
or
ljmp
push
stos
xor
cltd
mov
lahf
stos
xor
xchg
push
movsl
push
fistpll
mov
sbb
mov
fcomip
pop
std
adc
xor
into
jbe
lahf
aam
int3
or
out
fistl
rolb
mov
test
imul
or
cmc
inc
jle
ds
in
incl
js
jbe
push
mov
xchg
mov
das
out
and
add
daa
adcl
and
cli
cmp
call
add
dec
fwait
js
out
dec
jae
fwait
roll
mov
outsl
jno
decl
loope
push
int3
shll
loopne
pop
add
negb
or
xor
stos
adc
adc
out
sahf
hlt
inc
cmp
jbe
sub
test
orl
push
xchg
clc
xor
cltd
mov
mov
dec
pop
stos
test
jg
into
aam
mov
loop
outsl
adc
jnp
fdivrl
xchg
adc
jg
dec
dec
loopne
dec
inc
std
cmc
mov
adc
fdiv
push
and
call
scas
jbe
pop
push
jns
adc
pop
adcl
fisttpl
shrb
jmp
stc
in
jns
jmp
dec
xchg
push
scas
les
in
mov
icebp
lcall
jecxz
jecxz
jns
cmp
js
repnz
pushf
push
addb
call
mov
stc
sub
lcall
add
leave
ljmp
std
pop
in
add
or
mov
adc
in
cmpl
aam
xchg
out
pop
in
pop
jno
sbb
and
pushl
cmp
loopne
or
inc
pop
and
xor
push
test
pop
lea
mov
mov
aaa
jne
fdivrl
out
jg
dec
push
jp
insl
jmp
pop
mov
imul
or
and
jo
incl
decl
call
mov
xchg
adc
shlb
subl
push
rorl
push
and
sub
ljmp
cmc
mov
cmpsl
pop
mov
and
cmc
mov
call
ret
decl
or
dec
ret
pop
insl
std
popf
mov
mov
sub
push
jae
jge
inc
leave
fildl
lret
movsl
mov
fldl
mov
dec
cltd
fsubrl
sbb
dec
in
mov
jo
scas
scas
mov
pop
xor
push
fwait
out
pop
and
scas
into
jecxz
ret
ret
enter
xchg
pop
dec
test
std
addr16
mov
jg
call
jo
bound
jmp
into
pusha
mov
mov
call
popa
test
fnsave
fnstsw
call
ret
cmpsb
mov
out
lcall
ja
outsl
dec
cld
incl
lds
add
sub
out
cmp
cmc
ljmp
clc
cmp
jnp
mov
add
xchg
je
dec
arpl
jmp
std
rorl
sub
jl
mov
lock
pmuludq
or
jg
out
cmp
sbb
gs
push
and
dec
xchg
sarl
xchg
sub
decl
adc
sbb
and
xchg
jle
xor
aad
inc
jg
in
inc
fsubrl
mov
mov
js
inc
popa
aad
rcr
pop
jmp
incb
jmp
push
mov
movb
sarb
cmp
jmp
mov
decl
push
out
jmp
cltd
cmp
shlb
pop
cmp
loopne
pop
cmp
mov
ret
ljmp
fwait
xor
cmpsl
fs
and
cmc
pop
push
or
sti
mov
mov
incl
lahf
das
int
lds
mov
dec
sbb
ljmp
mov
mov
add
dec
fsubr
lods
bound
test
rolb
cmpsl
ljmp
jmp
scas
enter
xchg
cli
and
adc
sti
and
out
incl
incl
sbb
pop
rclb
adc
call
jmp
std
sbb
aad
xor
jns
repnz
cmpsb
in
sbb
xor
jmp
mov
pop
repz
inc
xor
xor
fwait
mov
lahf
sbbl
mov
test
mov
fwait
mov
cltd
loopne
in
or
sub
aad
cli
ljmp
adc
inc
cmpsl
pop
xchg
dec
pusha
cmp
mov
push
push
insl
test
mulb
xchg
jb
sub
dec
push
cmpsb
mov
aad
pushl
mov
jmp
fisubrs
hlt
xchg
pop
aam
faddp
rcll
lahf
xor
or
push
adc
lahf
testb
das
hlt
lret
insl
mov
rolb
cwtl
xor
call
pop
xor
clc
push
jp
adc
call
rclb
pushl
sbb
ss
mov
sar
ljmp
std
lcall
push
popf
bound
cmp
stos
and
orl
fistpll
dec
fs
sub
cmc
jmp
pop
push
stos
in
idivb
outsb
and
mov
lcall
inc
fcmovnbe
test
inc
js
nop
fiaddl
adc
or
popf
test
loope
imul
pcmpgtw
sbb
mov
and
or
jns
data16
addr16
add
dec
fimuls
xchg
push
pop
mov
mov
lods
adc
les
pushl
xchg
int
sbb
or
jg
pusha
jbe
lods
mov
mov
inc
cmp
add
loope
mov
xor
lcall
jns
stos
or
mov
test
or
xor
inc
push
pop
out
mov
insl
mov
pusha
lock
inc
pshufw
je
add
sub
popa
lds
outsl
add
push
jnp
cmpsl
fdivr
cmc
das
icebp
mov
inc
mov
mov
fwait
pop
mov
push
dec
stos
and
scas
insb
in
add
andl
popf
dec
int3
cli
mov
mov
divl
std
mov
fiaddl
inc
ret
lock
lahf
mov
in
std
cs
rcl
sahf
insb
out
into
mov
add
jmp
insb
mov
and
hlt
mov
mov
sahf
mov
insb
das
das
in
scas
cmp
pushl
add
loop
adc
cmp
outsl
mov
iret
and
xchg
mov
cli
hlt
or
rcr
add
dec
leave
mov
lea
mov
mov
mov
imul
pushf
mov
sbb
call
orl
or
push
fsubs
cmp
int
pop
pop
mov
pop
and
xchg
mov
insl
leave
dec
cwtl
incb
dec
fs
fisubs
iret
imul
ret
test
movsb
push
push
cmp
fcomip
pushf
imul
movsb
add
xchg
imul
imul
scas
jmp
cli
cs
out
dec
stos
dec
sbb
xchg
aas
aaa
cld
popa
movsb
filds
fnstsw
call
in
or
data16
call
sub
xor
call
push
pop
clc
rol
jl
pop
rorl
mov
in
dec
test
pushl
mov
or
sbb
push
mov
push
scas
xor
hlt
lds
mov
das
lock
sbb
inc
sbb
push
or
inc
incl
fistps
push
out
je
mov
ret
jno
jecxz,pn
outsl
std
incl
hlt
cmovle
xlat
sahf
ljmp
jmp
push
mov
scas
mov
push
enter
dec
mov
lods
shrb
decl
std
push
cltd
xchg
sahf
push
dec
sub
dec
push
lea
ficoms
lcall
xlat
sub
rolb
mov
sbb
cmpl
or
call
out
in
out
fidivl
and
call
xor
push
decl
add
repnz
adc
sbb
out
jb
lock
ljmp
dec
xor
ret
pop
enter
out
and
sub
sub
hlt
mov
ljmp
add
ret
xorl
inc
jecxz
mov
xchg
mov
xchg
cli
mov
sbb
clc
hlt
bswap
or
idivl
incl
pushl
stos
sti
sub
movsl
mov
lock
sub
push
jp
sbb
decl
cs
leave
leave
mov
pop
or
pop
hlt
and
adc
aad
mov
push
inc
std
jg
mov
xchg
xchg
pop
mov
inc
mov
outsl
test
lcall
pop
push
loope
mov
mov
outsb
mov
pop
call
and
or
pop
mov
and
and
push
lods
sahf
pushl
and
jae
dec
xlat
push
scas
pop
jge
mov
insb
call
repnz
mov
test
inc
sar
cli
cmp
mov
inc
lock
ret
nop
or
and
mov
outsb
in
pushf
ret
jmp
xchg
cmp
pop
sbbl
push
pop
fdivr
mov
ljmp
js
shlb
call
divl
cmp
mov
push
negl
incl
ljmp
dec
and
ljmp
decl
or
mov
pop
cmp
xchg
cmp
call
clc
pop
aad
jne
stos
jp
inc
cmp
mov
mov
cli
jg
push
adc
pusha
sbb
xchg
mov
dec
test
scas
lea
jmp
mov
pop
pop
xor
xchg
sarl
sahf
sub
cmpl
or
sub
cmpsl
lea
sbb
jmp
subb
xor
jecxz
cmp
mov
gs
addr16
movsb
xor
test
or
jne
leave
aaa
xor
das
lock
rcrb
insl
pop
in
cmpsl
mov
leave
lods
jne
mov
sub
cmp
add
lock
ljmp
shr
or
sub
inc
nop
loop
mov
xchg
aaa
aad
ss
mov
int
inc
std
sbb
cmp
sbb
mov
ljmp
pop
dec
adc
xchg
or
imul
hlt
lret
mov
loopne
clc
jle
push
push
inc
sub
stc
testl
imul
clc
jmp
ret
mov
sbb
cld
aaa
or
mov
sti
mov
ljmp
push
fabs
push
lahf
clc
push
loopne
jle
mov
out
cltd
adc
movsl
fisubrl
into
cmpsb
ret
sub
mov
incl
inc
jo
insl
xlat
je
mov
in
mov
mov
jnp
ret
outsl
cld
fisttpl
cld
negb
sub
adcl
outsb
dec
push
dec
cmp
push
xchg
clc
call
shll
das
les
xchg
movsl
cmp
jnp,pt
das
push
loop
push
sbb
mov
push
lea
mov
sbb
fldenv
push
cwtl
sub
dec
jb
push
mov
mov
fildll
std
mov
xchg
les
mov
arpl
push
cmpb
mov
adc
add
aaa
pushl
jge
divb
mov
inc
adc
iret
dec
mov
scas
sub
in
fwait
adc
jle
push
mov
cmp
aas
jns
jo
and
lock
ret
lcall
xor
ret
pop
outsl
mov
lods
inc
int3
cmpb
lds
test
xchg
call
mov
jmp
mov
popf
xchg
je
sbb
popa
inc
jg
cmp
jmp
mov
sbb
pop
cmc
push
aaa
rcr
jg
push
out
sub
xorb
inc
cmp
push
shr
jge
xchg
mov
ss
and
push
push
jo
jno
xchg
test
fiadds
push
fs
call
cmpsl
xor
into
xchg
cli
arpl
xor
adc
dec
cli
pop
sub
sbb
idivl
push
or
decb
ljmp
js
pop
ljmp
out
and
xor
fidivs
pushf
repnz
mov
les
clc
xor
dec
mov
jb
lock
arpl
loopne
xor
lds
fbstp
xor
mov
fimuls
jno
push
mov
xchg
cmc
pushf
xchg
and
jne
sbb
cmp
loop
mov
loopne
cmc
adc
fstpt
sub
sahf
insb
add
xchg
pushf
cli
pop
push
mov
sbb
pop
and
add
dec
imulb
add
call
fucomi
push
cmc
bound
pop
rcrl
fwait
xchg
das
call
lds
roll
pushl
lea
filds
ret
nop
enter
pop
sahf
fcmovb
aam
mov
loope
mov
lcall
mov
clc
es
mov
lret
repz
adc
jp
lcall
loop
ss
and
pop
inc
mov
mov
test
pop
mov
stos
adc
decl
xchg
cmp
or
cmp
xchg
clc
jmp
add
insl
sahf
test
sub
sub
push
mov
jge
cmp
adc
pop
mov
mov
inc
icebp
dec
mov
rcrb
daa
jns
dec
push
or
andb
lcall
ljmp
push
jecxz
xor
fs
and
sbb
xchg
mov
divl
imul
aas
mov
int3
push
cmp
or
push
jns
ds
cmp
mov
push
in
push
vmread
cmp
cli
pop
call
imull
sbb
mov
adc
jg
sub
scas
mov
jnp
aad
mov
dec
ret
add
jg
cli
push
mov
add
test
cmp
int
and
cmp
xchg
mov
ret
inc
popa
rcl
xchg
push
orb
adc
xchg
rorl
xchg
roll
pop
pop
jns
sub
bound
dec
cmpsl
stos
mov
dec
fstpt
or
shl
push
sbb
rcll
pop
sbb
mov
in
and
inc
icebp
imul
sub
jmp
fs
adc
xchg
stc
stc
in
push
mov
pop
cld
out
pop
leave
mov
addl
lcall
pushf
sar
xor
nop
xchg
jge
pop
xor
pop
fdivl
adcl
cmp
cmp
inc
out
xchg
cmp
les
pop
and
add
add
into
push
shl
push
mov
xor
inc
lret
sbb
mov
dec
xchg
xor
cmpsb
aas
clc
mov
test
pop
jmp
sarb
movsl
mov
pop
test
add
dec
xor
xor
inc
sbb
outsl
xchg
add
xlat
pop
xor
or
sgdtl
aaa
add
jo
push
std
test
gs
add
fisubrl
or
call
or
fsts
arpl
fcmovnbe
add
adc
insb
outsb
inc
sbb
outsl
fs
rorb
lods
add
rclb
insl
mov
add
inc
imul
adc
insb
arpl
or
mov
imulb
inc
pop
push
jb
sub
mov
push
outsl
dec
add
sub
sbb
jae
shlb
dec
inc
or
adc
jae
daa
addb
bound
fstpt
jo
cmp
jbe
outsl
outsb
insl
mov
push
sbb
bound
mov
add
push
outsb
add
mov
pop
jbe
or
ror
fcmovu
push
dec
andb
out
push
add
add
popa
in
ret
dec
xchg
nop
ret
test
jo
fcoml
insl
outsl
jbe
add
outsl
inc
inc
cmp
dec
gs
addr16
sub
push
dec
or
add
inc
add
cmp
add
and
popa
faddl
fs
neg
mov
std
mov
push
imul
ja
mov
fs
movsl
jnp
push
xlat
insl
lcall
cmp
jb
push
imul
push
push
outsl
sbb
pop
fisttpl
push
push
lret
push
gs
or
sti
mov
loope
fisttpll
popa
cmp
pop
mov
iret
push
outsl
insb
jne
xchg
ret
or
mov
pop
insl
les
or
popa
loopnew
outsl
inc
add
jnp
addl
xchg
popa
dec
push
or
sub
ss
cmp
jp
dec
xchg
sub
xlat
jl
dec
loopne
push
jbe
pop
rcrl
push
push
dec
notb
daa
pop
lret
dec
fwait
stc
pop
xchg
inc
vmwrite
rol
xorb
adc
scas
adcl
pop
dec
dec
and
pop
sbb
add
outsb
lds
or
leave
imul
xor
xchg
bswap
pop
adc
sti
inc
jae
and
scas
push
cmpsl
call
sub
fs
jle
cs
adc
or
shll
push
bound
push
xchg
call
outsb
push
cmc
dec
fdivrs
cmp
addr16
lods
sub
dec
sbb
int3
imul
rcll
and
flds
sub
xchg
dec
imul
jno
insb
or
push
sbbb
pop
adc
sub
sbb
mov
push
jae
and
dec
inc
push
mov
arpl
push
addr16
add
sub
dec
gs
cmp
pusha
sbb
push
cmp
sub
loop
mov
xor
mov
xor
int
adc
add
adc
push
dec
mov
jmp
pop
gs
push
mov
and
jae
cmc
mov
jo
jmp
test
jo
sub
ret
pop
mov
pusha
or
cmpsl
jb
in
ss
aam
add
cli
arpl
je
je
sub
jecxz
imul
rclb
cltd
in
push
sbb
dec
push
lods
mov
mov
sub
or
dec
fldcw
push
push
popa
popa
out
in
in
inc
inc
out
mov
cmp
popa
cmp
insb
addr16
fmuls
xor
orb
fadds
add
cmp
fsubrl
or
sti
ss
mov
xor
insl
lcall
ss
fwait
jne
gs
push
fs
sbb
sub
insl
add
leave
or
jbe
fcoml
arpl
xor
inc
mov
and
roll
inc
and
inc
sub
fwait
addr16
inc
add
add
jnp
inc
and
loopne
sidtl
add
or
lcall
adc
cmp
out
add
mov
or
std
fwait
mov
test
add
push
out
mov
cmp
nop
lahf
ret
cmpsl
xor
add
sbb
ret
xor
push
je,pn
outsl
mov
imul
fdiv
xchg
mov
and
fs
je
sbb
jo
mov
and
pop
stos
pop
lcall
call
xchg
mov
add
fists
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
