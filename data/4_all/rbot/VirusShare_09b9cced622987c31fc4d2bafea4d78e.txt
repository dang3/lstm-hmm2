jmp
ss
call
jmp
test
fistl
add
push
and
jmp
filds
add
jmp
hlt
xor
jmp
std
popf
ret
jmp
lcall
xchg
pushl
jmp
fisttpl
mov
jmp
daa
jmp
jmp
aas
xor
jmp
test
add
add
jmp
aam
jmp
jmp
push
into
call
jmp
jle
mov
add
xchg
fxch
jmp
sbb
clc
push
add
jmp
mov
mov
fsubrp
cmp
add
movsl
int
push
inc
cmp
lret
ret
adc
in
mov
sub
movsl
into
jno
pop
repnz
mov
jmp
imul
nop
sbb
sbb
pusha
loop
inc
mov
push
ljmp
enter
aam
arpl
in
inc
aaa
repz
pop
stos
into
in
pop
test
xchg
xorl
stc
xor
cmc
mov
out
test
push
inc
aaa
jecxz
mov
aas
jle
dec
bound
xor
add
shrb
not
outsl
push
addl
js
mov
or
in
xor
adc
add
push
in
sti
xchg
xlat
push
int
dec
inc
into
dec
cmp
mov
cmp
dec
or
or
xchg
icebp
sahf
repnz
ss
outsl
lea
mov
push
adc
imul
or
lock
jp
lods
pop
hlt
movsl
dec
sbb
or
stos
push
inc
cmp
andb
movsb
outsl
jno
push
fistpl
dec
mov
testl
push
icebp
sbb
inc
std
loope
jecxz
dec
imul
mov
xchg
insl
scas
mov
je
or
cmp
loopne
iret
jge
into
arpl
or
jge
jo
int
incl
mov
jge
mov
add
mov
mov
out
sub
sarl
push
inc
aaa
mov
pop
xor
gs
adc
or
jae
sub
pop
rcrl
dec
sbb
pop
das
ds
test
or
sub
in
bts
mov
jmp
bound
aas
out
fs
pop
aam
push
shlb
outsl
jge
jp
lods
jmp
add
xchg
lods
cmc
xor
test
jmp
sbb
cmp
je
inc
or
cmp
sbb
mov
or
mov
into
adc
arpl
jbe
sub
push
xchg
mov
outsl
cmc
aad
jbe
mov
xor
pop
dec
loopne
dec
or
dec
scas
lods
leave
jbe
filds
fstps
ljmp
packuswb
pop
adc
pop
push
sub
sbb
push
sub
std
nop
lods
xchg
call
orb
jmp
pop
cmpsl
fimuls
dec
lea
std
cmp
fistps
outsb
push
jmp
js
popf
sbb
scas
or
addb
xchg
or
fnsave
fdivrs
iret
push
bound
aas
je
inc
mov
subl
hlt
mov
pop
loop
out
fucomip
arpl
mov
jb
jecxz
cltd
fldl
stos
int
xchg
push
jno
sbb
outsl
mov
mov
insb
stos
imul
repz
mov
fisubrs
popf
xor
enter
mov
add
xchg
mov
inc
fstps
pop
push
cmpsl
inc
add
fcoml
fcoms
cmpsl
lret
xchg
fwait
cmp
lock
sub
mov
push
push
pop
cmc
das
sbb
negw
out
mov
test
roll
icebp
mov
cmpsl
repnz
sub
pop
cmp
cmpsb
icebp
sbb
stos
ss
xchg
push
inc
imul
movsl
or
and
test
mov
cwtl
adc
sbb
inc
cmc
movsl
inc
inc
dec
js
lds
fldcw
cmp
loop
stc
cmp
push
test
les
enterw
adc
je
imull
in
pop
lds
pmullw
movsl
movsl
daa
jle
inc
push
call
inc
xchg
mov
cmp
movsl
subb
dec
xor
repnz
aad
bound
xor
rolb
jmp
ficoms
js
fcoml
sbb
pop
inc
add
aad
add
add
int3
std
xor
cmc
xchg
test
dec
cmpsl
lea
loopne
loopne
dec
cltd
mov
lds
out
jg
test
out
xchg
push
leave
lcall
sub
or
or
xor
icebp
mov
push
inc
imul
mov
notb
fisttps
fst
test
andl
lods
xchg
or
xchg
pop
iret
ret
jno
sub
cli
pop
and
enter
movsl
dec
push
push
and
fdivr
daa
push
fs
je
pop
movsb
fidivs
and
lcall
pop
mov
cmp
jecxz
or
pop
std
xchg
mov
and
mov
mov
ljmp
cmpsb
gs
dec
dec
push
adc
std
xchg
inc
sti
es
std
enter
xchg
pop
xchg
shlb
adc
pop
inc
lds
cmp
lret
push
lcall
test
rcrb
in
and
int3
movsb
mov
pop
push
pop
enter
mov
incl
push
icebp
push
nop
add
mov
pushw
int
push
push
xor
scas
orb
scas
mov
popf
push
or
sub
mov
add
jae
mov
push
outsb
inc
mov
sti
adc
in
lcall
mov
imul
lahf
cmp
testb
xorl
and
adcl
xor
subb
sti
mov
fldl
dec
pop
xor
mov
jo
sub
lret
cld
jae
sbb
add
lea
fdivr
fsubrs
cmp
pop
pop
sbb
aam
imul
push
cmp
movsb
mov
mov
mov
xlat
adc
push
addl
xchg
cmp
cmpsb
mov
stos
inc
cmp
out
scas
imul
cltd
in
hlt
bnd
mov
adc
sbb
push
pop
push
push
mov
add
jg
out
and
stos
and
lock
stc
loope
add
je
jns
push
mov
xor
cwtl
mov
add
push
and
ret
rclb
mov
pop
sbb
clc
cmp
sub
popa
xchg
in
add
sub
scas
imul
and
push
into
mov
loopne
aaa
mov
mulb
xchg
pop
out
and
hlt
pop
jle
ret
push
insl
jle
popf
adc
sbb
jne
xchg
les
lods
pop
test
push
fcoml
jecxz
into
adc
cmp
inc
and
outsl
into
ss
into
mov
int3
cli
fisubl
ja
xchg
jle
adc
setno
cmp
inc
and
sbb
out
mov
pushf
cmpl
jmp
jp
shll
movsl
adc
pop
push
outsl
rcrl
inc
xor
pop
xor
dec
gs
xor
sbb
fdivl
dec
add
push
mov
subb
js
jae
aas
sbb
cmp
insb
andb
rorl
lock
pop
test
inc
sub
lcall
adc
cmp
in
ds
pop
insb
outsb
js
mov
inc
getsec
movswl
cwtl
jge
mov
and
decl
aad
mov
inc
jge
sbb
mov
dec
cmp
sbb
adcb
ljmp
std
cltd
jns
jae
fs
fidivrl
jae
inc
adc
iret
jge
mov
cwtl
in
mov
mov
pop
lods
iret
mov
xchg
mov
fistpll
into
xchg
cmp
sub
add
inc
mov
sbb
sbb
loopne
stos
dec
mov
sbb
out
mov
jle
insl
or
addr16
lcall
cmp
nop
xchg
sbb
ja
jle
insb
pop
stos
push
cmp
repnz
mov
xchg
enter
mov
cmp
dec
xchg
aad
fwait
sbb
adc
xchg
fs
popf
lret
or
pop
sub
pop
les
push
mov
mov
movsb
push
out
outsl
xor
pop
adc
jmp
outsb
frstor
push
xchg
mov
pop
je
xchg
mov
subl
test
out
push
xor
outsl
cmp
inc
mov
cmpsb
je
mov
loope
aad
rclb
add
and
cmpsl
and
or
mov
arpl
gs
stos
push
dec
fcoms
dec
push
jb
xchg
or
sub
jmp
aam
xor
movsb
cmp
push
and
adc
xchg
mov
push
jno
mov
ret
stos
icebp
push
out
jno
imul
push
xor
outsl
cmp
inc
mov
cmpsb
je
mov
loope
aad
rolb
mov
out
pushl
fwait
and
or
mov
arpl
add
cmp
data16
dec
sub
xchg
or
sub
jmp
aam
xor
movsb
cmp
push
and
adc
xchg
mov
push
jno
mov
mov
add
pop
inc
inc
out
push
xor
outsl
cmp
inc
mov
cmpsb
je
mov
loope
aad
rolb
mov
out
pushl
fwait
and
or
mov
arpl
gs
stos
mov
fcoms
dec
dec
sub
xchg
or
sub
jmp
aam
xor
movsb
cmp
sbb
cmp
adc
adc
mov
push
jno
mov
ret
stos
icebp
push
out
jno
imul
push
xor
outsl
cmp
inc
mov
cmpsb
je
mov
loope
aad
rolb
mov
out
pushl
fwait
and
or
mov
arpl
gs
stos
mov
fcoms
dec
dec
sub
xchg
or
sub
jmp
aam
xor
movsb
cmp
push
and
adc
xchg
mov
push
jno
mov
ret
stos
icebp
push
out
jno
imul
push
xor
outsl
cmp
inc
mov
cmpsb
je
mov
loope
aad
rolb
mov
out
pushl
fwait
and
or
mov
arpl
gs
stos
out
push
fcoms
shl
fcmovnb
mov
xchg
sub
push
add
rorl
xchg
iret
xor
mov
adc
das
lock
lods
xchg
test
xor
sub
sahf
push
mov
inc
jle
stc
pop
mov
inc
xor
arpl
mov
inc
lods
not
popf
push
jnp
sbb
xchg
dec
add
push
shlb
add
scas
mov
dec
cmp
jne
jecxz
dec
icebp
test
loop
xchg
lods
jp
stos
fcmovnbe
out
push
ss
scas
or
addl
mov
rcrl
add
adc
ss
mov
pushl
nop
neg
movsb
ficoms
mov
jp
mov
or
xor
aas
xchg
sub
jl
or
sahf
jmp
jl
orl
insl
inc
adc
fisubs
dec
xchg
mov
mov
cwtl
incb
or
lea
sbb
lock
xchg
jl
sarl
and
push
call
and
shrl
pop
dec
mov
outsl
xor
and
enter
mov
int
addr16
inc
and
dec
je
test
adc
dec
ret
xchg
push
or
in
add
push
ret
cmc
dec
mov
fcomps
loop
pop
pop
and
lds
cwtl
xor
mov
lahf
and
sbb
out
sub
sbb
xchg
cmpsl
or
pop
fsubs
xchg
push
lds
in
inc
inc
subl
add
enter
pop
sub
mov
jp
into
mov
sub
loopew
gs
mov
adc
imul
sub
ss
rcr
es
and
jne
fisubrl
sbb
loopne
and
sub
adc
sub
jb
inc
jo
or
aam
pop
or
push
cmp
pop
mov
xor
fabs
cmpsl
jmp
ss
add
repz
mov
jne
mov
dec
mov
lret
push
push
daa
add
adc
dec
or
inc
nop
pop
cwtl
ja
mov
das
xlat
cmpsl
sbb
xor
xor
pop
stc
inc
aas
sub
cmc
push
divl
loopne
ss
and
lcall
es
rorb
jge
sbb
xchg
pop
pop
imul
adc
mov
sub
pop
cmp
and
lret
add
pop
in
pusha
pop
dec
aam
mov
or
jo
js
add
dec
ja
ljmp
movsb
inc
test
sub
pop
dec
jmp
insl
out
loopne
repnz
sti
cmp
cmpsb
mov
in
lods
lret
loop
cmp
dec
inc
cmp
arpl
sub
inc
les
and
testb
jmp
inc
cmp
cmpl
pop
cmp
xchg
sub
xchg
inc
adc
push
in
iret
mov
nop
mov
cld
add
lea
pop
data16
xchg
scas
pop
fstps
lret
and
pop
or
out
xchg
dec
lock
sbb
scas
lret
mov
cmpsl
js
fsubrp
mov
pusha
mov
or
xor
lcall
fstps
and
mov
dec
cmp
mov
or
push
int3
std
jne
adc
xor
lock
push
jmp
or
jae
and
jg
and
inc
nop
lea
sbb
ss
xchg
xor
sub
pop
xor
push
es
jg
fistps
mov
sarb
test
js
jg
add
lahf
sub
pop
xchg
in
xorb
xor
push
adc
mov
xchg
xchg
insl
stos
push
xchg
add
cmpsl
jmp
xor
pusha
cmpsb
pop
repz
adc
mov
loop
cmpsl
ljmp
jge
in
scas
xor
inc
cmp
dec
or
lahf
inc
dec
inc
inc
cmp
inc
in
negl
loop
movsb
inc
cld
out
and
ljmp
jecxz
xchg
lcall
in
xchg
push
cmpsb
js
rolb
mov
pushf
ret
mov
add
loope
imul
push
adc
daa
gs
xor
js
aaa
aam
iret
push
mov
lret
xor
dec
xchg
cmp
in
sub
add
stc
sbb
repnz
mov
insb
mov
sbb
dec
inc
push
sarl
mov
dec
push
test
pop
mov
push
mov
sti
mov
push
adc
adc
or
xor
add
cmp
inc
and
xchg
hlt
jbe
cmp
sbb
fs
dec
int
jne
cmp
xchg
inc
sub
shll
xchg
inc
lds
ret
js
and
and
dec
mov
jo
fcoml
daa
jb
iret
mov
jecxz
sbb
xor
pop
jle
ljmp
cmp
ffreep
fsubs
out
xchg
xor
mov
aad
roll
mov
xorl
push
push
test
sahf
fisttps
leave
negl
sbb
xor
adc
xchg
adc
movsb
cltd
gs
sub
cmp
xchg
sbb
shlb
ss
inc
mov
jno
xor
stos
pushl
push
jne
movsb
or
stos
jne
out
jecxz
push
imul
push
repnz
ljmp
pop
cld
xchg
call
les
cmp
cmpsl
mov
sti
mov
lods
nop
cmp
shlb
stos
pop
dec
push
enter
or
movsb
inc
fimuls
pop
xchg
add
inc
sarl
mov
jbe
sbb
jne
in
scas
and
adc
repnz
push
scas
fdivrl
inc
cmpsl
sti
sbb
and
pop
lods
cltd
in
ss
in
pop
xchg
lods
xor
dec
jo
cmp
lds
add
dec
dec
sbb
lea
filds
pop
lock
pop
test
adc
scas
sub
test
ja
sub
cmp
lahf
pop
add
adc
cmpsl
jl
fstl
mov
into
rcl
sbb
rcl
mov
fidivs
aam
lods
pop
daa
sub
aaa
push
js
xchg
bound
outsb
xor
ss
dec
jle
pop
repnz
lret
testb
mov
adc
cwtl
or
test
push
push
rcl
loop
jns
shl
aad
aad
fwait
jb
stos
dec
and
sahf
mov
lods
mov
sbb
jg,pt
and
ljmp
in
sub
xor
movsb
adcb
cld
xor
pop
popf
xchg
in
jns
inc
mov
xorb
sub
inc
mov
jle
push
inc
pop
mov
out
pop
fldl
lret
mov
mov
iret
subl
ljmp
lods
lds
inc
nop
pushf
xchg
cli
into
hlt
jp
dec
out
into
addr16
icebp
xor
popf
mov
pop
add
movsl
mov
add
mov
lock
sub
scas
mov
mov
stos
jbe
mov
dec
dec
sbb
pop
mov
push
notrack
sbbb
leave
xchg
icebp
ficoml
incl
imul
aam
gs
adc
sbb
or
dec
xor
call
or
mov
lea
and
xorb
les
push
adc
js
clc
jecxz
test
xchg
mov
add
xchg
lret
jbe
in
stos
mov
imul
les
les
cmp
xchg
fwait
in
mov
rcrb
pop
inc
fwait
ret
cmp
mov
mov
mov
pop
cmc
pop
push
jne
lahf
xchg
mov
add
mov
or
fnsave
sbb
sbb
pop
aam
ficoml
adc
sbbl
test
imul
je
cmp
lods
sub
mov
pop
dec
int
popa
std
fistpll
ficoml
xor
scas
push
ret
jp
iret
xor
jns
ljmp
pop
xchg
mov
stc
sbb
and
xchg
mov
std
sarb
mov
jge
and
cmc
cld
stos
ret
out
sbb
cmp
orb
rorl
adc
mov
loope
xor
inc
dec
and
jns
pop
jg
cwtl
lea
jmp
xchg
lret
insl
stc
int
stos
cmp
sub
in
scas
sub
sub
fstps
fildl
xchg
lods
mov
mov
cmp
push
pop
scas
aad
jmp
insb
inc
ljmp
scas
xchg
outsb
fwait
xchg
or
aam
and
xchg
aad
sti
aas
sbb
and
lds
ss
hlt
jge
es
or
icebp
sbb
add
pop
mov
push
adc
mov
add
jae
scas
pop
pop
lea
mov
rol
push
daa
adc
jae
data16
shrl
sub
sub
stos
stc
fidivl
xor
leave
shl
or
movsl
or
or
xor
pushf
xlat
jmp
lods
aas
pop
push
cmpsb
pop
test
out
mov
dec
out
aam
push
sbb
aam
stc
int
jge
dec
inc
sbb
and
add
push
inc
jbe
insb
jnp
js
ss
scas
out
mov
stos
imul
bound
ds
cmc
das
jmp
pop
pop
sub
daa
push
loopne
xchg
leave
mov
push
mov
xor
cld
mov
mov
pusha
stc
xlat
cwtl
daa
xor
pop
lods
or
pushf
into
sub
jmp
hlt
frstor
jae
lret
aaa
mov
cmp
or
or
test
sti
sbb
jae
fucom
mov
push
jnp
test
jle
mov
jle
into
pop
dec
iret
int3
push
lcall
inc
daa
pop
cmp
inc
or
outsb
rclb
iret
leave
inc
push
mov
dec
test
pushf
xor
ret
jno
xchg
test
adc
leave
dec
das
shr
cltd
enter
add
push
push
fwait
pxor
addb
lret
jl
cmp
cmp
adc
add
mov
sbb
sub
inc
outsl
jge
idivl
push
pop
inc
pop
fmull
dec
pop
orl
jecxz
xor
jecxz
sahf
push
sbb
dec
sub
addr16
mov
fmul
lds
pop
in
and
das
inc
stos
xlat
mov
xlat
je
int
das
pop
jecxz
popl
popf
pop
fadds
mov
lcall
ja
imul
mov
fs
mov
aam
notb
fisttps
std
rorl
pop
or
test
lock
movsb
cmp
rcr
dec
and
xlat
sbb
push
mov
fstps
popf
loopne
fdivrs
push
fnsave
mov
or
mov
mov
cli
movsb
adc
xor
filds
pop
insl
mov
jb
mov
pop
fnstcw
ss
cmp
dec
add
mov
or
ds
das
adc
push
xor
in
sbb
lods
pop
adc
or
or
xchg
inc
adc
rcrl
out
repz
and
xchg
add
pop
into
es
adc
add
sbb
cwtl
ss
mov
or
mov
add
and
call
jne
xchg
jnp
mov
pop
and
add
and
xchg
pop
nop
inc
jo
lcall
dec
sub
out
test
ss
js
jg
repnz
pop
ffree
xchg
rcll
pop
inc
jge
xchg
xchg
pop
rcr
pop
push
test
and
cmpsb
inc
fisubl
lret
andl
or
dec
lret
cmp
pushf
mov
scas
and
inc
lock
sub
cmp
je
mov
sbb
add
inc
cmp
jo
lock
dec
lods
mov
mov
add
xchg
stos
mov
mov
in
insl
dec
fwait
clc
jmp
mov
outsl
add
cmpsb
add
xchg
jecxz
out
fdivs
pop
mov
mov
lds
movsl
xor
stc
in
nop
cs
ror
xchg
ds
into
lds
lea
dec
mov
adc
fwait
insb
xor
mov
push
jecxz
xor
jns
fimuls
dec
in
jmp
fwait
sub
dec
insb
insl
cmpsb
mulb
fsubl
dec
loope
dec
adc
test
or
fadd
xor
jecxz
mov
addr16
cs
shll
and
mov
stos
jmp
add
cmpsb
mov
adc
adc
loope
sbb
fs
mov
ljmp
xchg
mov
fucomi
and
test
dec
aam
xchg
int3
cmp
pop
xlat
xor
cmp
mov
pop
std
mov
mov
lahf
pop
xchg
mov
inc
sbb
imul
gs
add
ja
cli
or
mov
pusha
dec
mov
fildl
mov
es
arpl
xchg
xor
push
test
aas
fwait
xor
cmp
cmp
adc
dec
mov
sub
mov
movsl
jo
fadd
clc
cmp
inc
lret
gs
mov
sbb
out
imul
xor
lods
inc
out
mov
sti
in
pop
pop
push
and
adcb
adc
mov
jbe
lock
rcll
out
es
mov
divl
mov
adc
xchg
ds
sahf
mov
hlt
ljmp
mov
cmp
stos
push
icebp
push
repnz
mov
xchg
in
sub
sbb
inc
aad
jae
xor
mov
icebp
push
cmp
dec
inc
or
push
in
cltd
add
pop
cmpl
xor
mov
mov
add
and
xchg
sbb
cmp
je
mov
fsubs
fmuls
jns
test
add
sbb
jge
into
bound
mov
push
dec
sub
push
rclb
cmc
xchg
mov
or
jl
add
outsl
fimull
popa
inc
outsb
mov
jb
or
insl
mov
addb
mov
cmc
enter
test
aad
lods
add
rorl
or
mov
clc
pop
shlb
dec
mov
aad
jae
jecxz
pop
cli
cli
popf
pop
gs
cli
xor
cmp
push
xchg
std
adc
loopne
addr16
push
insb
mov
and
mov
jae
aam
push
arpl
xor
sub
inc
adc
and
push
call
les
clc
inc
adc
clc
orl
xchg
and
and
mov
sbb
cmp
pop
adc
mov
cmp
fsts
xor
call
popf
xor
and
adc
xor
inc
hlt
dec
jnp
ds
inc
xor
fisttpl
insl
xchg
adc
adcb
jl
jo
stc
lret
rorb
clc
aaa
mov
data16
aas
movsl
mov
loope
pop
lods
lret
push
xchg
imul
mov
sub
adc
test
rcr
cmp
cli
lods
lods
ds
dec
lahf
shrl
mov
add
and
cmp
dec
xor
or
jo
stos
stos
movsl
jb
sbb
daa
sbb
dec
jb
cmp
in
mov
and
sub
in
orb
int3
cmpsl
ljmp
fldl
mov
xlat
jo
aaa
fcmovnu
lret
jmp
jecxz
leave
sub
sbb
mov
add
jb
sbb
push
sub
xor
scas
loop
iret
ljmp
push
cmpsb
fwait
into
rolb
aam
xchg
ss
cmpsb
mov
xor
and
pop
gs
int
adc
mov
sbb
mov
cmpsb
gs
aaa
int
popa
stc
lahf
push
xor
loopne
hlt
out
gs
cli
pop
pop
je
sub
sub
xchg
jne
div
loopne
cmpsl
or
mov
ja
outsl
aaa
cld
in
cmp
mov
ja
pop
lcall
mov
cmp
imull
leave
addr16
ret
adc
push
sub
jns
inc
mov
add
xor
jns
nop
adc
fs
sub
je
loopne
outsl
mov
roll
or
jle
add
mov
or
cmp
sahf
inc
jmp
gs
leave
add
fisttps
pavgb
icebp
dec
test
cmp
test
ljmp
inc
sub
pop
es
pop
jns
push
sti
mov
inc
jle
cmpsb
sbb
dec
nop
xchg
mov
xor
repz
mov
mov
jmp
jns
sbb
jno
jns
fists
in
jge
lret
push
ljmp
aad
fsubr
adc
pop
test
fnsave
das
sbb
repz
das
int3
dec
icebp
clc
inc
ss
int3
movsl
push
pop
scas
insl
cmc
nop
stc
aaa
out
ja
sub
dec
pusha
lahf
fmulp
pop
cmove
ror
clc
cmpsb
lds
adc
loopne
fsub
popf
push
sbbb
mov
or
mov
ja
test
pop
inc
inc
xor
mov
sahf
sub
mov
loopne
jg
cmc
xchg
pop
mov
sahf
call
mov
into
mov
ret
pusha
dec
adc
inc
push
inc
int3
and
cmpsb
inc
cmp
jnp
xor
enter
lret
pop
jo
push
mov
lea
in
adc
xchg
push
loopne
mov
fwait
cmpl
hlt
mov
mov
push
cmpsl
out
fidivrs
sub
xchg
cmc
adcb
jle
pop
testl
add
cwtl
out
jg
popf
stos
pop
inc
push
dec
add
jae
pop
jg
pop
iret
test
std
mov
sub
cmpsb
test
stc
int3
sub
mov
stos
xchg
xchg
scas
cmc
test
fwait
ret
icebp
bound
sti
out
add
jb
push
push
mov
fbstp
in
or
popa
and
pop
sarl
xchg
scas
or
or
xchg
xchg
push
mov
out
mov
xor
cmp
icebp
aad
xchg
addr16
out
ffreep
das
test
aam
sbb
jl
dec
jp
das
xor
xchg
sti
sbb
js
xchg
lcall
xor
hlt
je
mov
mov
insb
cmp
divb
scas
adc
pop
out
in
and
ja
mov
xchg
lahf
insl
aaa
jp
add
outsb
adcb
insb
mov
push
ljmp
mov
pop
in
pop
push
popf
mov
aam
mov
pop
mov
jg
and
das
mov
sbb
sub
aas
addr16
out
lahf
jne
subl
adc
cs
mov
add
loopne
xchg
dec
repnz
adc
testl
lahf
mov
or
test
cwtl
xchg
repnz
dec
mov
push
orb
ret
fmull
xchg
add
mov
and
push
push
stc
and
fldl
fs
inc
cwtl
xor
fsubr
sbb
dec
mov
in
pop
aas
shll
in
aaa
cli
out
add
xor
adc
inc
dec
lock
data16
mov
pop
pop
sbb
outsl
loopne
cmp
jae
insl
lahf
jb
shrb
jae
jg
sti
hlt
stos
push
loopne
imul
xchg
and
mov
or
jecxz
xchg
adc
popf
and
or
cmpsl
in
xor
insb
clc
jmp
aas
mov
sbb
fldcw
imul
fildl
adc
mov
and
stos
fisubs
and
or
mov
gs
stos
sbb
ja
inc
jg
mov
mov
xlat
imul
xchg
test
fucomi
push
fstpl
xchg
dec
sti
sub
out
cmc
iret
out
movsb
in
out
testl
dec
mov
inc
pushf
push
dec
mov
xchg
sub
ljmp
popa
in
xor
out
fdivl
mov
jnp
xchg
imul
test
fstpt
insl
arpl
push
xor
std
push
lea
int3
jmp
bound
dec
jge
aam
or
jle
and
mov
xchg
aaa
adc
inc
loope
aas
sub
adc
mov
push
cmp
enter
inc
movsb
lret
pop
mov
sbb
and
xchg
sub
aad
adc
add
pop
cmpsb
loope
mov
push
cwtl
popf
ficomps
clc
in
enter
lret
xor
mov
inc
data16
imul
pop
cmpsb
xor
mov
or
jmp
xchg
or
push
movsb
lods
xlat
xor
iret
mov
xor
sar
and
test
mov
jno
or
push
jg
xchg
fsts
out
test
xchg
cltd
popf
pop
cwtl
lcall
inc
add
sti
negl
movsl
data16
xor
xlat
push
cmp
jbe
dec
nop
enter
daa
sbb
ja
insb
pushf
lods
ret
mov
sahf
push
lock
jle
push
add
aaa
sub
cld
arpl
fdivl
lods
push
sbb
adc
cs
mov
sbb
and
fldcw
ret
mov
push
jno
adc
lahf
ljmp
inc
dec
inc
cmp
jmp
add
xchg
xchg
es
cmp
repz
sub
or
xor
loop
jg
jl
cmpsb
add
into
outsb
ss
ret
xor
pop
mov
and
xchg
sbb
xchg
and
or
jae
sbb
jle
xchg
xchg
subl
in
push
inc
sbb
inc
push
sub
mov
dec
insb
mov
or
sarb
mov
lcall
insb
aad
mov
adc
and
jle
and
mov
call
imul
mov
xchg
xchg
arpl
xchg
add
xor
xor
pop
je
mov
dec
mov
sbb
xchg
inc
cld
es
in
loop
or
jecxz
jno
and
iret
push
ficoml
movsl
pop
mov
push
xchg
or
aaa
mov
iret
cs
xor
xchg
or
add
cmp
pusha
icebp
xchg
fildl
in
mov
jne
jbe
icebp
inc
jae
loopne
not
jp
sahf
leave
mov
dec
incl
lods
mov
fimull
ss
mov
mov
dec
pusha
das
sbb
sub
xor
je
test
imul
or
cmc
mov
sub
popf
jp
xchg
cltd
mov
mov
decb
cs
pop
mov
cmp
int3
or
cmp
out
test
or
jp
clc
dec
lahf
rcr
fwait
jns
ja
popa
add
push
imul
mov
dec
sub
mov
insl
addr16
stc
popa
inc
dec
jns
addr16
outsl
inc
add
stos
pusha
icebp
test
popa
pop
push
iret
sub
lahf
mov
lcall
mov
jb
mov
adc
lret
or
orl
dec
fldl
std
lret
inc
fcmove
repz
push
ror
add
clc
into
jnp
popa
fidivrs
xor
dec
jno
rcll
or
adcb
jmp
mov
in
xor
xchg
mov
ja
hlt
in
dec
jae
sbb
pop
loop
shll
ljmp
into
jns
js
lcall
sbb
jns
mov
push
lods
mov
fimuls
push
or
divl
shlb
repnz
sbb
data16
jle
ret
cmp
ficompl
lret
push
addr16
and
dec
or
loop
subl
in
insl
and
and
sbb
xchg
jo
inc
pop
cwtl
test
pop
pop
loopne
xor
dec
or
fisttps
shlb
xchg
out
xlat
cmp
popf
call
dec
mov
jb
pop
or
or
and
aaa
call
clc
jae
pop
pop
mov
movb
stc
jb
inc
data16
fdivs
movl
clc
jae
repz
outsb
ljmp
jae
cmp
sub
push
clc
jae
sub
inc
in
add
clc
jae
fadd
add
rorb
jmp
fisubrl
rorl
subl
stc
jb
add
jae
mov
clc
jae
pop
movsl
mov
rolb
inc
pusha
ror
sub
jne
clc
jae
in
or
popa
stc
jb
call
ret
lds
fs
fwait
xor
sbb
adcl
pusha
inc
xchg
jo
jae
push
loope
dec
jnp
pushf
dec
mov
jp
insb
mov
inc
jle
test
mov
sub
out
imul
mov
lods
test
add
mov
rcrb
test
clc
xor
mov
push
or
outsl
xchg
jbe
test
ja
inc
mov
scas
decl
jecxz
jg
mov
pushl
adc
add
mov
fidivrl
push
lahf
xor
repnz
lret
mov
mov
sbb
cmpsl
lcall
mov
mov
adc
lret
cmp
jb
adc
dec
jo
xchg
repz
pop
sbb
hlt
mov
jl
mov
fistpl
lea
scas
adc
fistpll
test
push
add
inc
sbb
fdivs
cmpsb
xlat
lock
popa
inc
sbb
xchg
les
and
outsb
jp
js
imul
sub
pop
mov
cli
ss
inc
test
jmp
sub
fdivrs
call
sub
mov
jmp
sub
or
cmpsb
xlat
aas
dec
mov
std
and
xchg
fimuls
pop
jae
ret
jg
mov
sub
push
jno
fisttpll
sub
adcl
pushf
pop
mov
lahf
sub
subl
filds
and
xchg
aam
add
push
cli
jo
nop
sub
xor
enter
fdivrl
ja
sti
stc
stos
int
pop
and
dec
not
sub
in
sbbb
outsb
or
lock
or
dec
jecxz
scas
sahf
sub
pop
orb
mov
lods
out
imul
xchg
xchg
mov
pop
sarb
push
dec
cltd
fsts
mov
in
cli
leave
and
outsl
xchg
arpl
xchg
es
daa
sbb
inc
jge
lds
and
gs
or
lcall
test
jae
sahf
loopne
dec
stos
adc
in
rcrb
sbb
sub
push
push
jno
or
test
test
adcl
dec
push
push
shrl
pushf
sahf
inc
cmp
ret
das
push
loope
rolb
loopne
add
add
add
add
push
push
out
cs
jns
out
cwtl
loope
inc
sbb
xchg
int3
jle
push
outsb
fadds
sub
or
lds
jns
insb
call
xchg
mov
jp
mov
or
loop
xchg
notl
mov
sub
fcmovu
adc
cmp
popa
hlt
in
int3
mov
and
mov
repnz
and
addr16
jg
insl
js
cmp
gs
fdivrl
jle
add
xchg
out
mov
movsl
pop
out
call
sub
xor
mov
xchg
pop
ret
push
add
lahf
add
add
add
add
mov
jl
loop
daa
aaa
outsl
lcall
or
sbb
ror
xor
and
dec
dec
dec
lcall
jl
mov
pop
and
jae
pusha
mov
mov
int3
and
xchg
cmp
cmp
push
add
pop
mov
cmp
cmpsl
pop
xchg
in
fdivl
fstps
fidivs
in
cld
add
mov
xor
lock
dec
xchg
adc
xor
scas
enter
scas
out
in
ret
nop
add
js
cltd
std
xlat
jne
and
stos
iret
sub
inc
lret
out
xchg
insl
jge
pop
inc
inc
leave
xchg
cwtl
push
dec
xchg
mov
sub
sti
faddl
dec
dec
das
test
mov
leave
pop
mov
adc
jmp
rcrb
lods
xchg
in
dec
int
xor
sarl
lcall
int
and
or
mov
inc
into
adc
sub
movsl
popf
int
loopne
push
mov
lahf
and
cmpsl
out
shrl
es
ss
pop
sub
push
bound
adc
dec
sub
mov
xor
push
shl
add
inc
mov
jg
cld
sbb
jo
mov
aaa
inc
frstor
aad
cs
enter
fs
mov
adc
inc
fisttpl
sbb
xchg
xchg
movsl
roll
jmp
pop
lahf
addr16
sahf
or
mov
mov
stc
or
insl
mov
inc
call
sub
sub
inc
mov
sub
jmp
xor
sbb
loope
pop
mov
inc
imul
push
jecxz
xchg
pop
and
scas
xor
aas
inc
lds
mov
or
ja
sbb
gs
nop
add
dec
dec
std
or
cwtl
adc
xor
mov
inc
daa
inc
cmpsb
sbb
jmp
push
ljmp
sub
icebp
mov
mov
inc
sub
mov
into
add
jae
sub
adc
pushf
inc
lahf
mov
mov
ss
mov
mov
xor
push
data16
jno
das
in
xchg
add
shrl
arpl
negl
ja,pt
aam
inc
xchg
mov
je
lds
cmp
lea
adc
push
pop
movsb
mov
mov
pop
push
popa
lds
jo
lods
enter
adc
mov
pop
out
mov
add
subl
pushf
and
dec
sbb
mov
es
dec
out
int3
push
or
push
jbe
inc
mov
imul
pusha
test
mov
mov
and
mov
in
cmp
sub
testl
cmpsl
jns
push
add
leave
daa
jbe
sbb
pop
push
jbe
mov
daa
dec
jnp
mov
mov
cmp
popa
mov
mov
add
shlb
cmp
fdivl
xchg
xor
adc
cmp
clc
inc
xchg
hlt
add
pop
out
mov
mov
sub
inc
fildl
pusha
in
sbb
int3
in
insl
xlat
inc
fwait
mov
dec
fmull
add
pop
adc
xchg
sbb
mov
inc
loopne
addl
stos
into
push
ret
lods
adc
imul
dec
popf
test
pop
push
fwait
gs
sbb
xor
nop
pop
mov
sbb
mov
jecxz
xlat
popa
fwait
daa
or
insl
dec
fs
dec
lods
sub
ss
shl
fstl
xor
loop
comiss
add
shl
testl
pop
cmpsb
or
push
mov
jb
xchg
addl
add
xchg
and
arpl
addr16
sbb
lret
call
push
cmp
xchg
push
pop
and
and
shrb
ds
test
mov
mov
shrl
jnp
inc
add
adc
call
int3
dec
adc
addl
imul
xor
inc
in
jb
push
push
hlt
test
js
jno
xchg
inc
pop
stc
fwait
loope
xchg
lea
xor
push
mov
pop
inc
pop
inc
mov
outsb
out
dec
out
fisttpl
repz
daa
jns
sbb
pop
xchg
cltd
decb
test
or
sub
jne
xchg
test
push
fiaddl
sub
sub
lahf
add
incl
add
add
cmpb
arpl
popa
jecxz
repz
daa
inc
mov
stos
fnsave
mov
out
add
out
rorl
test
sub
dec
lcall
push
inc
pop
sub
std
loope
mov
das
mov
xlat
xor
popf
cwtl
jmp
mov
arpl
inc
pop
sub
cmpsl
or
insb
popl
popf
and
aad
xchg
cld
pop
fwait
mov
sbb
or
cltd
fs
rcl
arpl
xchg
add
mov
adc
mov
fcmovnu
mov
xlat
push
cmpsb
repz
lahf
mov
mov
sbb
loope
cld
inc
or
dec
sub
mov
dec
int
cli
add
xor
subb
ljmp
mov
popa
insl
jbe
les
pop
es
jae
xor
scas
lock
inc
mov
cltd
add
mov
fistl
and
mov
addr16
repnz
aas
imul
pop
dec
lea
xchg
ret
adc
jns
popa
insl
jbe
ja
mov
movsb
int
jns
aas
xchg
or
push
inc
cmp
stc
inc
shlb
jo
dec
jns
repz
xor
ja
movsb
push
repz
sub
fsubl
jne
push
add
mov
insb
push
mov
loop
incl
pop
jmp
mov
inc
adc
in
cmp
pop
addb
lods
and
test
lret
jmp
sarb
lcall
jle
popf
stos
test
sbb
add
mov
ds
scas
jecxz
aad
enter
push
cmp
into
inc
jle
gs
pop
push
daa
push
sub
sbb
daa
xor
stc
add
or
push
adc
sbb
loope
cmp
movsl
jns
jmp
addb
jo
sub
xor
mov
insb
outsl
jle
pop
fwait
xchg
push
pop
jbe
nop
mull
push
xchg
mov
stos
imul
aaa
sahf
out
cmp
dec
pop
xchg
adc
aad
pop
pushf
lods
outsl
ud2
test
xor
fisttpll
xor
add
loope
int3
fdivr
jmp
outsb
sahf
lret
mov
loopne
arpl
stos
dec
and
cwtl
leave
or
ret
in
fwait
xchg
adc
jge
jmp
int3
cmpsl
cmc
out
sub
mov
cmp
mov
or
or
fists
icebp
push
cmp
xor
cltd
sbb
lret
add
lret
inc
cmp
mov
dec
nop
cld
sub
imul
or
pop
sbb
int3
cmp
xchg
mov
adc
pop
call
or
enter
cmp
mov
mov
cmpsb
cmp
out
das
repz
fcoml
mov
in
aam
divb
aam
or
adc
pop
jmp
jo
push
pop
sarl
inc
test
mulb
mov
movsb
push
pop
repnz
test
inc
lret
out
mov
aas
jne
pop
pop
cltd
mov
mov
pop
adcb
or
fbld
fcompl
aam
mov
xor
cmp
and
sbb
sub
popl
add
xor
pop
clc
xchg
mov
dec
mov
shrl
pop
cwtl
aas
push
pop
mov
xchg
fucom
pusha
movsl
jp
mov
add
or
mov
xchg
out
fistpll
mov
jnp
inc
mov
push
inc
cmp
adcb
sbbl
out
jle
mov
mov
adc
ret
subl
mov
inc
xchg
cwtl
out
cmc
mov
ret
xor
and
call
sbb
and
xor
movsb
in
adc
test
insl
push
call
add
xchg
imul
cmp
filds
jo
mov
jno
dec
icebp
cld
pop
dec
into
and
xchg
xor
and
adc
sbbl
out
jle
mov
mov
sub
hlt
inc
xchg
or
fisttpll
xor
add
mov
jp
xor
jne
ret
xchg
repnz
cmp
dec
addl
or
jmp
adc
push
dec
out
pop
cwtl
push
add
jle
pop
test
push
int
js
ds
pushf
add
imul
jae
cmp
sbb
sarl
xchg
pop
mov
inc
pop
movsb
testl
pop
ret
sub
jb
jge
out
push
adc
cmp
mov
push
adc
push
aad
enter
push
ficoml
and
inc
cltd
jmp
mov
lahf
lock
pop
add
jo
jb
add
jnp
addb
jb
aam
or
add
movsb
mulb
rclb
jbe
test
ror
push
xor
mov
ljmp
adc
out
mov
inc
lcall
xchg
or
in
sbb
add
out
sbb
mov
insl
in
sbb
or
stos
sbb
fnstsw
mov
bound
iret
add
inc
push
ja
jecxz
mov
push
es
and
int3
xchg
pop
pop
lea
js
jp
jno
mov
or
out
ljmp
in
shrb
xor
loopne
jbe
xchg
rolb
cmc
inc
pop
jne
xchg
pop
andb
jbe
or
ret
ret
mov
fistpll
fstp
adc
and
mov
faddl
in
outsl
clc
mov
mov
addr16
xchg
test
fwait
push
push
push
xchg
cmp
in
outsl
and
fwait
push
sbb
dec
mov
movsl
icebp
inc
push
in
pop
mov
outsb
inc
or
push
call
insl
fistps
inc
xor
adc
dec
in
jecxz
andb
jbe
or
ret
ret
mov
fistpll
fstp
adc
and
mov
faddl
in
outsl
clc
mov
mov
addr16
xchg
test
fwait
push
push
push
xchg
cmp
in
outsl
and
fwait
push
sbb
dec
mov
movsl
icebp
inc
push
in
pop
mov
outsb
inc
or
push
call
insl
fistps
inc
leave
testl
andb
jbe
or
ret
ret
mov
fistpll
fstp
adc
and
mov
faddl
in
outsl
clc
mov
mov
addr16
xchg
test
fwait
push
push
push
xchg
cmp
in
outsl
and
fwait
push
sbb
dec
mov
movsl
icebp
inc
push
in
pop
mov
outsb
inc
or
push
call
insl
fistps
inc
nop
notl
je
pop
and
icebp
sar
aam
sarl
popf
iret
push
mov
dec
mov
inc
aas
jmp
inc
scas
xor
fdivl
cmc
das
sub
adc
lock
push
push
push
xchg
outsl
mov
ret
xchg
popl
cmp
mov
jmp
popf
xor
sti
adc
and
pop
push
pop
adc
push
adc
or
ret
ret
mov
fistpll
fstp
adc
and
mov
xchg
call
loope
out
mov
lds
push
or
pop
lahf
incb
mov
call
fsubr
das
stc
andl
loope
je
dec
shll
les
push
sbb
loop
push
data16
insl
pop
loopne
inc
cmpsb
outsl
fwait
or
cltd
pop
jl
adc
mov
or
lahf
stos
xchg
mov
pop
sub
lods
sbb
cmp
sbb
sub
mov
cltd
jb
fxtract
in
rcrl
mov
scas
adc
push
fdiv
repnz
mov
cwtl
cmp
xchg
add
repnz
mov
dec
or
add
out
fwait
fucomp
gs
cmc
xor
scas
add
in
jo
das
shll
js
es
adc
decb
push
lea
push
mov
adcl
clc
lock
xchg
cltd
cmp
add
shlb
les
or
rclb
cmp
ret
adcb
xchg
cli
out
addr16
jp
mov
jae
and
in
sbb
add
out
sbb
mov
insl
in
sbb
or
xchg
test
je
js
int3
push
mov
loopne
dec
mov
sti
repnz
jo
shll
and
aas
out
mov
jle
lahf
aad
xor
push
mov
mov
pop
push
data16
insl
pop
loopne
inc
cmpsb
outsl
fwait
or
cltd
pop
jl
adc
mov
or
lahf
stos
xchg
mov
pop
sub
dec
les
jmp
fmuls
dec
mov
shl
sarl
divl
hlt
in
rcrl
mov
scas
adc
push
fdiv
repnz
mov
cwtl
cmp
xchg
add
repnz
mov
dec
or
add
out
fwait
or
mov
std
cmpsl
test
es
pop
xchg
mov
es
adc
decb
push
lea
push
mov
adcl
clc
lock
xchg
cltd
cmp
add
shlb
and
ljmp
fwait
hlt
aaa
xchg
cli
out
addr16
jp
mov
jae
and
in
sbb
add
out
sbb
mov
insl
in
sbb
or
xor
adc
pop
shlb
jo
lret
cmpsb
mov
and
mov
and
fistpl
sti
stos
addr16
movsl
lods
xor
add
pop
popa
push
lock
movsl
cmp
sbb
lret
sahf
out
sub
pop
pop
jns
mov
enter
outsl
and
fwait
push
sbb
dec
mov
lret
aad
cmp
sub
jnp
cld
popa
inc
xchg
sbb
mov
cli
ret
mov
bound
xchg
inc
jbe
jo
jo
inc
inc
out
cmp
mov
repnz
jns
pop
inc
xchg
pop
daa
push
pop
inc
pop
push
inc
inc
xchg
fdivr
gs
add
cmpsb
xchg
es
adc
decb
push
lea
push
mov
adcl
jne
mov
shlb
addr16
psubsb
sbb
xlat
sub
test
jns
mov
repnz
jns
cwtl
xor
xor
out
fs
xchg
mov
sbb
movsl
daa
enter
add
push
cmp
mov
das
in
outsl
and
fwait
push
sbb
dec
mov
lret
aad
cmp
sub
jnp
cld
popa
inc
xchg
sbb
mov
cli
ret
mov
bound
xchg
inc
jbe
jo
jo
inc
inc
out
cmp
mov
repnz
jns
pop
outsb
pop
imul
cmpsb
dec
int
addb
fistps
xchg
arpl
jl
inc
pop
imul
loope
jp
cmp
pop
aam
dec
lcall
gs
loope
mov
dec
push
fnsetpm(287
xchg
mov
xor
mov
mov
clc
js
mov
cmp
out
shll
xor
lods
mov
and
inc
int
and
idivl
lock
jp
mov
fnstsw
sbb
lret
jb
fxtract
in
rcrl
mov
scas
adc
push
fdiv
repnz
jle
arpl
popf
sub
cmp
inc
xlat
adc
jo
enter
mov
je
xchg
aaa
dec
fnstcw
inc
mov
adc
shrb
in
jo
das
shll
js
es
adc
decb
push
lea
push
mov
adcl
cmp
mov
fstl
fsubs
pop
loope
jns
jne
lods
loopne
sahf
xchg
push
dec
jae
adc
add
les
pushf
push
movsb
xor
fisubs
repz
and
int3
xchg
pop
pop
lea
js
jp
pop
push
xor
adc
cmp
xor
imul
xchg
rcrb
mov
inc
dec
mov
pop
or
fbstp
dec
xchg
gs
sbb
push
inc
shl
xchg
sbb
out
sbb
mov
insl
in
sbb
or
or
cwtl
ds
push
fsubrl
jne
inc
or
add
cwtl
pop
int3
testl
sub
pop
cld
enter
or
sub
sbb
cmp
scas
or
sub
adc
mov
enter
outsl
and
fwait
push
sbb
dec
mov
lock
xchg
imul
test
add
fistpl
mov
mov
dec
test
ljmp
inc
cmp
xchg
fstpt
imul
es
adc
decb
push
lea
push
mov
adcl
cmp
mov
fstl
fsubs
pop
loope
jns
jne
lods
xor
in
or
push
jmp
loop
arpl
pushw
iret
ss
popa
jb
ja
pushf
push
movsb
xor
fisubs
repz
and
int3
xchg
pop
pop
lea
js
jp
pop
push
xor
adc
cmp
xor
imul
xchg
rcrb
mov
outsl
lock
cli
dec
and
dec
mov
cmp
not
in
sbb
add
out
sbb
mov
insl
in
sbb
or
or
cwtl
ds
push
fsubrl
jne
inc
or
add
cwtl
pop
int3
testl
sub
lret
sbb
xor
cmp
imulb
sbb
adc
mov
enter
outsl
and
fwait
push
sbb
dec
mov
std
aaa
xor
out
enter
sbb
lods
xor
sbb
mov
inc
xchg
outsl
cmp
pop
inc
stos
xchg
inc
jbe
jo
jo
inc
inc
out
cmp
or
or
insb
pop
push
dec
jae
cmc
mov
and
ret
aad
xor
push
mov
mov
pop
push
data16
enter
xor
mov
push
and
jecxz
in
inc
jno
mov
dec
add
fwait
les
lret
push
nop
xor
mov
loopne
pop
pop
mov
lahf
or
cmpsb
jmp
xor
add
fs
xor
xor
sub
stc
push
or
fwait
xchg
popf
xorb
dec
push
shl
xchg
sbb
out
sbb
mov
insl
in
sbb
or
stos
sbb
fnstsw
mov
bound
iret
add
inc
pop
bound
insb
cmp
adc
sahf
add
dec
sti
stos
addr16
movsl
lods
xor
add
rclb
dec
mov
inc
lds
add
negl
shll
push
mov
mov
pop
push
data16
enter
xor
mov
push
and
jecxz
in
inc
jno
mov
dec
add
fwait
les
lret
push
nop
xor
mov
loopne
pop
pop
mov
lahf
or
cmpsb
jmp
xor
add
fs
xor
movsl
je,pn
pop
imul
dec
push
ret
pop
outsl
int3
notb
xlat
sub
sbb
addr16
dec
mov
and
pushf
jg
add
jp
cwtl
aam
jae
das
sub
jnp
xchg
xchg
in
outsl
push
js
sub
and
shlb
ljmp
xlat
sahf
pushf
mov
inc
mov
xchg
or
insb
adc
cmpsb
mov
mov
inc
imul
hlt
arpl
je
mov
outsb
mov
int3
sbb
inc
xor
or
mov
sbb
movsl
xor
outsb
aam
mov
add
inc
pop
outsb
popf
xorl
push
icebp
insl
dec
movsb
sar
es
insl
jmp
mov
dec
mov
cmpsb
imul
lock
and
mov
insl
jnp
arpl
mov
xchg
push
mov
mov
iret
mov
insb
or
adc
pop
imul
mov
mov
rcll
ret
mov
push
mov
enter
push
jl
loop
mov
xlat
and
cmp
push
cmpb
fmulp
adc
aam
into
int3
sub
sub
push
sub
ret
out
aad
je
mov
mov
adc
add
cmp
push
popf
or
push
mov
push
add
fcoml
or
cmp
lret
xchg
pop
or
sbb
fsin
push
repz
scas
jmp
hlt
cltd
shll
in
dec
cmpsl
pop
dec
clc
in
push
pop
xor
jp
out
out
fldt
mov
cmp
lcall
sub
dec
and
dec
rcrl
cmpsb
movsl
dec
jno
adc
dec
cmp
data16
leave
leave
jmp
call
pop
cli
cmpl
jo
sub
movsb
aam
push
int
push
pop
sub
pop
or
xchg
dec
jnp
cmp
cmp
xchg
fcmovne
xchg
xchg
adcl
xlat
movsl
mov
sub
inc
jle
adcb
mov
add
ret
or
repz
icebp
sub
clc
xchg
scas
test
xchg
mov
fwait
leave
loope
arpl
xchg
mov
mov
loope
mov
sub
mov
pop
mov
data16
and
fisttpl
and
jb
inc
leave
out
int
cmp
dec
mov
push
inc
mov
cmp
or
or
xchg
lcall
call
mov
fiadds
xchg
push
mov
mov
add
lret
mov
sub
bound
fdivr
stos
add
leave
shrb
cltd
popa
push
dec
gs
add
dec
lret
jge
fadds
popf
xchg
ret
ljmp
mov
out
mov
ljmp
popa
test
in
es
sahf
addr16
cmpsl
enter
sub
adc
mov
lods
adc
dec
inc
fwait
dec
mov
xchg
pop
into
jo
rorl
lds
xchg
xor
mov
and
dec
dec
testl
cmp
dec
call
cwtl
and
adc
mov
xchg
aas
fisubl
xor
movsb
addr16
fstps
cmp
sbb
nop
cld
inc
out
and
decl
rcr
nop
mov
jecxz
mov
inc
xchg
add
jne
daa
mov
test
in
adc
les
lock
fisubrl
test
movsb
mov
inc
mov
cmc
stos
imul
orb
xchg
movsl
xor
and
pop
je
dec
xchg
or
sarl
shr
inc
and
cwtl
jmp
sti
pop
and
push
ja
scas
dec
cs
or
enter
rorb
stc
lcall
fwait
mov
sub
dec
push
fwait
mov
push
ret
and
push
push
inc
mov
movsl
pop
cmpb
mov
adc
mov
pop
lret
div
sub
repz
add
push
pop
out
sub
pushl
ljmp
arpl
mov
insb
leave
insl
sub
sbb
mov
cmc
enter
pop
imulb
push
shrb
movsl
add
popa
mov
lret
jns
cmp
imull
int3
subl
push
xchg
cltd
lcall
xchg
les
cmp
cwtl
mov
xchg
hlt
push
and
ret
cmp
movsb
out
jo
push
scas
pop
jecxz
jns
stos
jo
push
ja
aas
nop
mov
enter
jae
xchg
dec
ljmp
das
pop
push
data16
sbbb
dec
movsl
mov
pop
adc
adc
mov
push
repnz
mov
mov
pop
js
cmp
xor
cltd
jnp
pop
roll
xchg
sbb
fadds
scas
jno
in
jecxz
inc
imul
jnp
mov
repz
lret
push
sahf
mov
cs
rol
icebp
fcoms
ret
cmp
lock
inc
pop
add
pop
mov
repz
shr
mov
xchg
sub
or
cmp
outsb
mov
and
inc
mov
movsl
adc
lock
lods
out
rorb
cltd
dec
fistpl
jae
aad
outsb
push
jno
jl
and
clc
push
ja
cmpsb
shlb
and
hlt
adc
adc
adc
or
jne
jnp
cmp
sub
jecxz
cli
pop
cmp
jmp
or
or
cmp
mov
cld
jl
mov
add
mov
fisubrl
add
sti
xchg
pop
xchg
and
dec
pop
add
lret
jae
xor
dec
jp
in
loop
rcrl
pop
les
and
dec
adc
flds
sti
mov
add
inc
mov
dec
out
cltd
mov
mov
jns
xchg
inc
adc
push
mov
xchg
or
test
adc
push
mov
idivl
or
imul
cmc
push
icebp
out
lcall
or
jo
aas
cmp
lods
mov
sub
push
ja
add
jnp
jo
pop
out
out
fistpll
ret
add
adc
movsl
das
outsl
push
jo
jae
iret
stos
lret
push
in
arpl
dec
out
cmp
iret
mov
repnz
mov
nop
shlb
sahf
out
push
push
into
push
shl
dec
rcll
call
and
test
dec
ds
in
dec
jmp
scas
ret
lea
push
leave
mov
sbb
add
mov
xchg
fdivrl
shlb
dec
mov
push
xchg
push
adc
insl
in
loope
pop
adc
cwtl
hlt
scas
mov
jo
jmp
scas
addl
inc
orps
shrb
mulb
pop
inc
push
cltd
xchg
jns
mov
jl
sbb
sbb
fcmovne
jmp
push
mov
push
arpl
outsb
dec
jmp
xor
push
adc
pop
test
pop
mov
out
sub
lods
movsb
cmpb
jecxz
je,pt
sarl
jecxz
lea
jo
xlat
lods
push
cmp
sub
negl
push
xchg
jae
jp
sub
push
pop
fwait
les
in
mov
lods
cmp
sbb
xor
push
lcall
lea
sbb
scas
xor
push
dec
incb
mov
test
cltd
cmpsl
pop
mov
dec
mov
sti
sbb
mov
dec
xchg
push
dec
int
in
sub
scas
pusha
test
inc
mov
stos
or
ljmp
call
pop
fcoml
inc
stc
jle
cld
push
ds
scas
out
and
jo
out
cltd
pop
pop
out
int3
xor
dec
sub
dec
sbb
or
les
inc
jp
hlt
lahf
cmp
in
sub
test
xorl
idivb
dec
out
in
fsubrl
sub
out
into
rorl
jl
clc
insl
dec
pusha
cmp
repz
jo
and
mov
jge
shll
mov
and
test
mov
ja
loopne
jnp
clc
inc
mov
test
mov
mov
call
adc
push
arpl
xchg
and
xchg
inc
mov
cvtpi2ps
leave
fstps
ljmp
inc
fadd
stos
dec
imull
or
xchg
inc
add
mov
adc
mov
mov
out
aaa
dec
push
xor
pop
iret
out
lret
and
mov
das
das
and
lret
mov
xchg
in
cli
dec
data16
push
in
in
test
aad
test
push
cmpsb
leave
test
sbb
fimuls
mov
push
and
xchg
cmp
mov
fldt
pushf
lea
ret
jno
mov
lock
mov
or
leave
dec
ficoms
dec
lea
cmp
cmc
mov
jae
cmp
xchg
les
arpl
lret
pop
pop
jmp
stc
cs
dec
ja
test
scas
and
push
add
es
jl
ret
pop
mov
sbb
andb
or
jecxz
add
sbb
les
add
xor
xchg
lahf
and
push
mov
leave
xor
dec
bound
into
xlat
jo
movsb
mov
xchg
or
fidivrl
jl
push
in
pop
ret
lahf
out
jnp
loopne
mov
dec
stc
shll
fwait
mov
and
dec
cs
fbstp
scas
pop
xchg
pop
aas
mov
inc
scas
mov
outsb
cmp
in
cmpsb
call
negb
sub
inc
loopne
pop
cmp
xchg
sbb
fldt
data16
xor
sub
jo
mov
imul
push
mov
int
clc
lret
ja
sbb
divb
dec
adc
pop
xor
pusha
out
pop
jo
dec
push
call
inc
pop
adc
xchg
incl
push
addr16
cmp
add
sarb
cmp
sub
mov
mov
dec
fcomip
push
push
aaa
xchg
les
xor
cmp
cld
mov
cld
sbb
pusha
in
out
das
fisttps
dec
rclb
or
addl
aam
aam
inc
mov
mov
cltd
xchg
xchg
bound
mov
and
mov
cs
mov
ss
out
pop
test
pop
repz
into
cmp
push
stos
jmp
push
ficoms
cmp
movsl
ficomps
popf
xchg
add
les
push
outsl
mov
in
sete
push
mov
pop
std
mov
mov
cmc
push
adc
cmp
mov
popl
pop
inc
orb
std
sbb
fnsave
mov
cltd
es
rorl
not
bound
push
jnp
and
daa
lret
lret
ja
mov
jbe
jle
cmp
push
jbe
sub
shll
pop
mov
jo
inc
xchg
test
lods
xor
cltd
sahf
shlb
inc
push
dec
test
pop
inc
fistpl
stc
xor
jbe
test
loop
mov
jmp
sbb
mov
aaa
cmp
pop
mov
mov
inc
test
mov
and
push
loopne
rcll
jno
jb
mov
sbb
fsubrl
arpl
push
ljmp
stos
pop
out
iret
mov
in
lahf
and
pushf
popf
jle
jl
cwtl
nop
jne
fists
fsubrs
jno
mull
pushf
jl
in
xor
shlb
incb
in
or
fisttpll
int
push
lock
bound
xor
mov
lods
pop
or
jne
out
ljmp
sti
pop
sbb
ficompl
int3
dec
pop
pushf
xchg
cmpsl
lods
fisttpll
lahf
movsb
scas
or
pop
adc
or
push
addl
repnz
hlt
add
mov
fistps
xor
cwtl
mov
jae
in
imul
add
adc
loope
lcall
add
cmpsb
dec
xor
les
and
fidivrs
xchg
pushf
leave
sbb
ds
sbb
insb
int3
aaa
popa
arpl
add
push
mov
repnz
test
dec
stc
sbb
push
add
pop
arpl
daa
cmp
xchg
and
xor
fistpl
lcall
stos
bound
movsb
inc
adc
shlb
push
sub
mov
mov
fs
cmp
es
int3
lret
xchg
addl
lods
push
hlt
sbb
jp
cmp
aas
dec
or
sahf
adc
leave
fs
fisubl
jg
mov
sbb
mov
mov
rolb
and
dec
sbb
mov
shlb
mov
mov
mov
add
mov
inc
stos
inc
mov
sbb
cmp
dec
or
movsl
lret
xor
ret
cmc
mov
push
pusha
xchg
subb
push
scas
das
call
cmpsb
sbb
jbe
add
test
sbb
shr
adc
inc
mov
ret
pushf
push
shlb
xchg
ja
jb
pop
js
out
call
popf
fdivl
xor
enter
std
sbb
popf
aam
dec
addr16
xchg
fcmovnb
in
mov
add
fisttpl
in
cli
filds
xor
mov
adc
insb
and
call
push
jmp
add
outsl
push
sbb
mov
sahf
cltd
push
clc
pushl
daa
ja
dec
jecxz
inc
lock
pop
pusha
ret
out
push
nop
jns
xchg
push
mov
mov
in
sbb
mov
in
stos
lahf
outsb
test
mov
mov
jmp
sub
in
mov
out
pop
lret
dec
cmp
call
push
ljmp
enter
and
shlb
subb
jo
fndisi(8087
sti
cltd
stc
aas
popf
out
pop
loop
mulb
cli
mov
cmpsl
fldt
pop
dec
sbb
call
push
mov
pop
jnp
sub
scas
add
int3
sub
notb
xor
sub
lret
fs
add
jmp
sbb
mov
push
lahf
clc
stos
mov
and
mov
jne
shrb
mov
cs
lahf
imul
dec
lods
insb
flds
stos
xorb
arpl
shr
mov
dec
out
jmp
int
loop
dec
test
cmp
xchg
mov
jle
adc
and
rorl
xor
add
cmp
lret
cmp
xchg
loope
pavgw
adc
into
lods
es
sti
fsubrl
les
mov
jae
ss
push
mov
jnp
mov
test
cmp
rorb
dec
dec
and
cmc
or
int3
push
jae
jmp
aad
sbbb
sbb
imul
out
cmc
mov
outsl
xchg
mov
shll
aaa
js
shl
daa
out
lods
cmpsb
loopne
add
dec
sti
out
ret
scas
mov
lock
test
lock
shlb
mov
lcall
sbb
insl
out
dec
mov
addr16
nop
imul
mov
add
sub
and
stc
sub
dec
setnp
push
xchg
jbe
push
xchg
stos
fsubs
adc
sbbb
mov
in
add
sbb
push
shrb
or
and
ficompl
aaa
sbb
int3
jge
and
std
jae
popf
adc
scas
push
sti
or
movsl
leave
push
call
and
mov
sbb
aaa
popf
mov
xor
gs
cmpl
aam
shrl
sahf
loopne
repz
dec
fnstcw
inc
aad
lods
movsb
outsl
ret
and
jns
jp
mov
loop
jne
rolb
xchg
push
fstl
mov
push
insl
rorl
and
int3
movsb
and
sbb
lcall
jo
jae
dec
jne
xor
rep
jmp
adc
and
enter
dec
ds
test
adc
ss
shrb
mov
shl
cmpb
leave
sarb
lahf
pop
orb
xlat
aad
mov
mov
and
outsl
sub
or
push
or
inc
sahf
test
cs
or
xchg
daa
jecxz
mov
pop
jle
and
mov
and
pop
add
cmpsb
push
jbe
sub
dec
or
cmp
call
stos
push
sbb
test
insl
lds
or
mov
or
mov
fninit
jmp
sahf
mov
sbb
cs
jp
inc
inc
adc
mov
mov
jns
iret
inc
mov
orb
mov
data16
or
sbb
fcomps
push
bound
adc
sbb
cwtl
mov
in
xchg
daa
add
les
lret
fcomip
inc
mov
fdivrl
mov
ss
push
dec
cmp
xchg
push
aam
adc
out
fcomi
lret
pop
add
gs
mov
addr16
les
jns
dec
cmc
sub
adc
mov
js
popf
scas
add
mov
arpl
in
in
insl
sbb
rcrl
lea
repnz
mov
mov
sbb
pusha
nop
rclb
js
hlt
pop
xchg
push
ss
pop
and
xor
loopne
inc
and
sarb
aas
popa
and
insb
shrb
movsb
insb
adc
data16
dec
shrl
adc
push
jae
jns
push
sti
clc
ljmp
xchg
pop
cmp
mov
jp
push
xchg
shrl
int
out
into
fidivl
les
mov
addr16
inc
shrb
ret
popf
cli
ljmp
or
idivl
mov
rolb
dec
xchg
pushf
icebp
mov
fcomps
test
xchg
rorb
and
and
add
scas
and
cmpsb
mov
stos
lcall
mov
pop
ljmp
lds
stos
xchg
mov
lcall
fdiv
xchg
in
imul
xor
dec
rcrl
pop
in
cld
lret
mov
add
sbb
imul
mov
daa
std
das
cli
cltd
mov
cwtl
dec
sti
pop
xchg
sbb
mov
ret
and
cmp
fldt
push
push
xor
pushf
sbb
jnp
mov
sbb
mov
loope
aas
and
bound
xchg
cltd
sbbb
cld
xchg
jmp
dec
push
popa
sub
add
adcl
faddl
fs
pop
xchg
int
push
pop
sub
xchg
mov
xor
adc
pusha
ja
call
cmp
and
jle
mov
jmp
pop
test
hlt
jg
push
cmp
sub
xchg
sbb
lock
and
cmc
nop
outsb
inc
pop
inc
pop
scas
jo
das
add
into
ds
pushf
nop
mov
arpl
cmp
stc
jg
and
push
and
push
popf
or
cmc
cmp
jbe
jae
adc
stos
cmp
sar
dec
lods
xchg
xchg
cld
decl
loopne
cmp
mov
mov
mov
dec
inc
push
mov
loopne
cmc
cmp
enter
jne
addr16
je
push
shlb
repz
or
push
jg
push
pop
repnz
add
jnp
in
mov
and
js
aas
hlt
lds
cwtl
push
rclb
int
mov
scas
sti
cmp
std
cmp
orl
push
xlat
sbb
scas
scas
mov
cs
lret
jo
popa
adc
pop
inc
push
jns
xor
scas
add
hlt
sti
ljmp
xchg
and
pop
ja
add
cli
or
jo
mov
fiaddl
xor
mov
fstl
dec
cmp
das
inc
dec
into
cmp
cmpsb
in
stos
mov
and
dec
out
rol
in
clc
pusha
cli
xor
inc
mov
loope
adc
xchg
lods
ljmp
inc
aas
leave
mov
push
xchg
fstps
shlb
ret
jle
ss
or
jecxz
test
inc
mov
inc
inc
pop
jns
xchg
les
int3
outsl
orb
mov
sbb
int3
sti
fimull
cmp
repnz
push
dec
and
xor
fildl
cli
dec
or
mov
add
add
xor
mov
orl
lret
jbe
ss
mov
mov
add
aam
xchg
je
jg
andl
push
jno
loop
or
bound
and
xor
xchg
es
jle
mov
rcll
or
and
sub
int
jnp
sbb
xchg
test
pop
je
rcll
shll
fcoms
scas
push
loop
cmp
or
and
cmp
stos
mov
popa
mov
mov
inc
rclb
push
mov
and
mov
xchg
push
add
jg
dec
xchg
lods
jb
pmaxub
aaa
xor
fs
jmp
in
cmpsb
or
push
jbe
cmp
jg
loop
jecxz
or
je
sti
mov
fnstenv
or
and
cli
mov
add
lods
mov
mov
out
inc
xchg
xor
pop
movb
call
lret
sbb
icebp
mov
adc
pop
push
in
popf
mov
adc
jno
mov
gs
test
pop
fcompl
sub
cli
test
mov
dec
in
jg
es
mov
addr16
mov
mov
mov
int3
cmp
mov
mov
push
pop
lcall
lcall
lret
lods
mov
aas
cmpsb
subb
cwtl
pushf
push
mov
stos
lock
push
in
xchg
mov
leave
pop
cmc
mov
pop
mov
sub
aad
jg
adc
je
in
popf
std
dec
xorb
push
add
in
les
pop
loope
out
cmp
xor
pop
dec
adc
test
mov
push
inc
pop
pop
cmp
pushf
adc
mov
dec
xlat
dec
mov
and
mov
test
pop
out
jns
mov
rcr
mov
js
in
pop
xor
ret
rorl
gs
mov
ds
xchg
das
cmpsl
push
cmp
jl
cld
jne
xor
xchg
shrl
fists
jle
rorl
dec
decb
movsl
jno
fs
js
imul
ret
ss
outsb
icebp
mov
mov
push
pop
sub
daa
push
mov
lret
fs
jmp
aad
and
pusha
mulb
sti
loope
repz
outsb
stc
mov
xor
mov
rol
mov
shl
sbb
pop
mov
repnz
fwait
jbe
outsb
pop
pop
cltd
scas
iret
dec
aad
icebp
sahf
lcall
dec
mov
jb
xor
mov
push
sub
push
shlb
dec
movsl
lahf
sub
stos
nop
fdiv
mov
shr
stc
sub
pop
repnz
sbb
les
lds
in
push
scas
dec
adc
out
cltd
xlat
dec
fildll
lret
mov
pop
sub
pop
popf
cs
scas
pop
jecxz
jl
ljmp
lret
clc
popl
andl
or
enter
sbb
loope
rorl
out
lea
xlat
nop
jne
jge
out
jl
ss
loope
int3
pop
fcoms
fs
xor
jmp
xor
push
mov
push
scas
ret
cmp
js
aas
test
icebp
js
pop
xor
jb
repz
cli
jl
loopne
xor
insb
aas
lret
lea
cmc
cmp
mov
pop
pop
ret
mov
mov
jae
and
daa
mov
inc
pop
into
fwait
cmp
pop
in
dec
lcall
mov
or
sar
push
pop
sub
mov
mov
inc
je
xchg
mov
shr
push
or
jge
mov
pusha
out
orb
sbb
mov
stos
push
ja
mov
repnz
lods
data16
and
mov
xchg
mov
or
cmpsl
in
inc
and
ljmp
mov
bnd
cmp
lods
jb
dec
iret
push
mov
xchg
inc
loop
or
mov
data16
pop
js
insl
js
lcall
jecxz
pop
std
and
outsb
jp
jnp
leave
and
pop
sub
jl
xlat
mov
cli
add
mov
arpl
lret
push
push
and
mov
xor
cmc
mov
inc
iret
pop
jno
les
enter
aaa
jno
push
int3
inc
jnp
xor
mov
lret
or
rorl
jne
icebp
sub
mov
pop
inc
mov
adc
orl
popf
and
daa
pop
adc
xchg
adc
stos
mov
pop
pushf
ljmp
cmc
push
lds
std
dec
push
movsl
das
and
and
and
xor
pop
lods
mov
xchg
daa
popf
push
xchg
mov
daa
push
data16
or
cmp
ret
js
or
sti
ds
aam
loope
add
test
jp
and
loop
movsl
or
adc
push
jge
fstl
mov
jo
mov
movsb
mov
in
in
ds
xchg
or
and
cmp
jp
cmc
push
arpl
and
dec
or
scas
movsl
pop
pop
stos
frstor
js
pop
lods
test
ljmp
stos
jg
movsl
push
ss
cmpl
cli
int
loope
dec
bound
inc
cmp
xor
shlb
fstps
rol
adc
xchg
std
adc
lret
insl
xchg
push
test
push
shlb
mov
adc
dec
movsl
popa
nop
mov
inc
dec
ljmp
inc
sbb
mov
not
lock
scas
sti
sbb
mov
insb
cwtl
fadds
movl
sub
adc
adc
incl
pop
pop
cmp
movsl
inc
adc
std
outsl
push
outsb
sub
pop
aas
cltd
dec
iret
jo
mov
out
lret
push
xchg
pusha
jbe
sahf
fwait
cmp
or
ret
dec
ja
aaa
in
push
mov
jp
rcll
shrl
adc
popa
cltd
sub
sbb
jns
ret
mov
in
lret
mov
adc
push
jns
pushf
rcll
out
mov
mov
xor
ret
or
jns
test
in
cld
mov
popf
fstpt
adc
inc
lea
sbb
cld
loopne
push
ja
push
imul
jecxz
jmp
lcall
pop
cmpsl
push
cmp
sti
hlt
push
fistl
or
arpl
imul
sub
into
repnz
jecxz
or
sbb
add
jecxz
xchg
ret
push
and
negb
cli
gs
mov
and
aad
dec
pop
iret
or
outsl
inc
dec
iret
mov
cmc
jg
movsl
or
mov
push
mov
imulb
outsb
pop
sub
pusha
sub
pushf
sub
sbb
sbb
cmp
popf
shrl
add
in
pop
mov
sub
push
cmp
mov
das
push
xchg
pop
lret
in
test
scas
pop
cmpb
std
fnstcw
jecxz
cmp
mov
jo
push
xchg
outsb
inc
mov
out
sub
pop
inc
mov
hlt
gs
pop
push
or
jo
sub
pop
add
shl
jmp
xchg
out
mov
push
jb
pushf
imul
test
pop
cmp
repz
mov
jl
enter
xchg
sub
push
xor
in
mull
outsb
cli
stos
int
mov
xor
testl
push
xchg
add
pusha
jnp
mov
adc
cmc
inc
adc
xchg
sbb
sub
pop
scas
orb
mov
xor
push
pop
xchg
pop
inc
pop
aam
and
jl
sbb
jns
push
mov
xor
mov
nop
cmp
rcrb
xchg
jo
inc
jl
and
in
fwait
shr
ret
adc
jb
mov
jne
ss
clc
mov
jne
pop
cmp
and
stc
cmp
lret
fdivrp
insl
shr
loope
fmuls
mov
loopne
mov
es
fs
push
add
inc
xor
stos
dec
aas
jo
dec
jecxz
mov
pop
int3
out
and
repnz
icebp
test
dec
outsl
out
and
fidivs
in
sub
and
fsubr
sub
xchg
cld
shll
stc
mov
cmp
sbb
mov
or
push
or
fwait
imul
pop
xor
mov
clc
jecxz
leave
and
add
imul
mov
es
sub
adc
jne
aaa
adc
mov
fsubl
mov
pushf
ror
add
sbb
jmp
in
xchg
or
ja
xchg
loop
mov
mov
jmp
les
dec
push
mov
mov
sar
sbb
pop
xlat
jne
pushf
xchg
mov
sti
mov
sbb
adc
push
mov
repz
adc
mov
hlt
adc
rclb
nop
pop
test
pmaxub
lret
mov
and
xor
sti
cmp
sub
or
sub
rcll
push
pop
adc
sbb
fsub
push
lahf
test
sub
jno
lahf
dec
push
jecxz
out
addr16
mov
jbe
pop
adc
stos
jbe
pop
cmp
std
cmp
les
stos
fadds
push
pop
pop
scas
rorl
ljmp
and
cmpl
stos
pop
sub
jo
mov
fiadds
cmc
inc
test
filds
jno
jmp
add
fwait
ss
sbb
mov
pop
gs
mov
sbb
fnstsw
jp
call
ss
fisubrl
cmpsb
jmp
jbe
cmp
das
sbb
xchg
imul
insl
xor
or
movsb
iret
aam
xor
fdivl
pop
xchg
shlb
xchg
push
push
test
shll
filds
mov
cmpb
mov
shll
bound
mov
jle
pushf
pop
movsb
je
aad
inc
movsl
addr16
and
testl
outsl
push
das
mov
js
add
push
sub
andb
lret
mov
outsl
into
jbe
call
and
pusha
push
int3
mov
jo
out
xchg
dec
adc
movsb
dec
cld
ja
in
scas
popf
add
jg
out
push
mov
or
mov
push
jge
shll
call
xor
das
hlt
xchg
sbb
rcrl
push
popf
add
pop
mov
in
push
mov
movsl
add
jnp
sbb
jle
mov
xor
fcoms
mov
or
mov
sbb
pop
outsl
push
xchg
cltd
mov
add
fwait
out
pop
aas
fistpll
nop
dec
fildll
hlt
lods
mov
rcr
dec
cmp
or
test
jno
divb
je
fmull
lods
cmp
pop
inc
stc
je
or
iret
fsubr
jb
lock
test
and
sub
sbb
pop
xchg
dec
popa
mov
sbb
mov
call
loop
into
adc
push
mov
clc
cwtl
xor
bound
jnp
stc
cwtl
xchg
stos
jmp
xor
movsl
fdivr
call
mov
mov
push
movsl
out
jno
cmp
cmp
std
push
fdiv
or
sbb
mull
out
dec
jbe
push
cmpsb
jne
in
stc
into
or
dec
testl
and
stos
fcoml
scas
out
mov
inc
dec
aad
aaa
pop
in
in
mov
and
inc
push
add
outsb
sbb
lock
dec
movsb
jecxz
idivl
cmp
jo
in
rcr
shrl
fs
adc
ds
lock
mov
adc
cmp
adc
mov
xchg
mov
repnz
jae
lcall
xchg
xchg
ret
mov
test
xor
mov
pop
or
jo
insb
insl
xor
shlb
dec
inc
dec
dec
xchg
and
sbb
addr16
imul
mov
mov
mov
cld
push
dec
outsl
rclb
or
jae
aam
push
rcl
jg
sbb
or
out
ss
movsl
pop
arpl
or
or
repz
add
add
xchg
jns
mov
and
lea
mov
xlat
sbb
xchg
mov
out
fists
sbbl
repz
sub
dec
cmc
or
into
adc
fdivs
pop
mov
adc
movsb
cwtl
mov
in
scas
push
shrb
and
pop
cld
xor
adc
cmp
imul
add
mov
loope
je
data16
jbe
push
push
inc
push
sub
pop
imul
dec
in
sub
and
aam
data16
mov
pop
loope
les
jmp
pop
jle
mov
mov
mov
orl
adc
inc
adc
imul
inc
mov
scas
arpl
mov
sbb
pop
shll
and
lods
sbb
ja
mov
dec
lods
inc
insl
stc
mov
sub
dec
cmpsl
clc
sbb
negb
out
dec
loope
aaa
pop
jg
nop
xor
xor
or
cmp
movsl
cmp
icebp
and
test
loope
mov
push
test
add
mov
mov
stos
jg
lret
ss
jmp
jmp
shl
mov
popf
jecxz
cmpsb
xchg
or
pop
jns
pop
xchg
xchg
push
je
test
jae
push
and
cld
mull
sub
stc
cmp
or
into
fisttps
jns
inc
popa
in
dec
inc
push
mov
andl
ret
mov
sub
imul
jne
inc
jns
jge
andl
xlat
jle
out
mov
push
xor
cli
int
and
pop
aad
loop
pop
scas
xor
jns
incb
lret
mov
stc
add
inc
cmp
dec
and
cmp
and
mov
test
lret
shll
mov
fldt
mov
cmpsb
fldt
inc
gs
pop
adc
push
pop
leave
add
jp
hlt
cmp
je
out
sub
pop
add
cmp
addb
xor
ja
ss
jo
mov
xchg
lret
adc
cmc
jb
sahf
fisttpl
mov
gs
int3
outsb
js
inc
push
inc
xchg
fsubrs
xchg
loopne
cmp
jp
insb
leave
push
push
test
int
nop
mov
xlat
xor
dec
xor
dec
hlt
xchg
adc
lds
ror
mov
nop
jmp
lahf
jle
cs
mov
fs
sbb
pop
and
inc
xchg
dec
mov
pop
dec
test
movsb
sub
es
xor
cs
add
add
add
jne
sbb
scas
ljmp
push
xchg
sarb
and
lcall
xor
flds
jb
repz
jmp
cmp
fadds
lea
xor
add
jae
enter
stc
fcomip
mov
add
imulb
jno
and
fdivrs
addr16
pop
popf
lds
xchg
pusha
pushf
fcmovnb
jo
dec
pop
stc
lods
jae
mov
movsl
jb,pt
notrack
and
push
out
ja
insl
enter
mov
add
orb
clc
out
inc
dec
mov
clc
ljmp
fst
jmp
dec
and
sbbb
insb
hlt
das
jg
fdivr
xor
aas
sbb
addl
imul
add
sub
lahf
add
mov
xchg
icebp
rcl
call
jg
xor
out
pop
cmp
scas
push
inc
sahf
sbb
push
push
or
nop
cmp
fwait
xor
out
add
popf
jae
cld
add
adc
xor
addl
mov
movsl
ror
xchg
mov
cwtl
bound
mov
pop
mov
dec
inc
fisubs
pop
sbb
sbb
cmp
ds
mov
sbb
sahf
in
negl
into
dec
std
mov
push
out
push
jmp
mov
je
inc
cmpsb
jmp
add
je
mov
test
pop
ds
lock
add
subb
dec
pop
aad
sbb
or
xlat
fs
enter
xor
sub
mov
xchg
jbe
rorl
sbb
jle
test
xchg
hlt
cmc
xchg
dec
xchg
dec
daa
jmp
les
mov
pushf
jmp
dec
or
dec
jne
fsubl
icebp
subl
ficoms
push
in
sbb
jns
or
xor
push
jb
ficoml
fs
lea
pop
xchg
aaa
and
in
inc
test
inc
xlat
in
fstpt
test
pop
and
enter
addr16
subb
push
cwtl
ljmp
mov
icebp
jmp
les
lods
arpl
je
xchg
mov
scas
and
fidivs
cmp
mov
insb
cld
adc
into
pop
fs
scas
xchg
lock
cmpsl
test
sbb
pop
push
shrb
fildll
pusha
push
insl
loop
xchg
lds
xchg
xchg
roll
cld
adc
sbb
mov
cmp
lds
xlat
sbb
xchg
jno
or
mov
lea
lahf
aad
cmpsl
sbb
ljmp
pop
jae
cmpsl
dec
mov
xchg
push
mov
adc
call
std
or
xchg
xor
xor
mov
dec
add
jae
mov
fs
mov
dec
fucomip
inc
repz
aam
jnp
pop
mulb
call
cmp
mov
int
orl
cld
test
sub
lret
cmpsl
sub
arpl
ret
lahf
fisubrs
jo
or
idivl
jmp
inc
or
scas
inc
mov
mov
mov
rorl
out
and
or
mov
sbb
mov
dec
adc
addr16
ljmp
ja
stos
scas
test
lahf
faddl
insb
xchg
mov
adc
ficompl
inc
mov
xchg
pop
add
out
cmpsb
adc
insb
push
insl
mov
push
sbb
jns
jo
aad
mov
clc
arpl
adc
push
pop
push
subb
rcl
mov
or
ret
xor
out
das
dec
mov
rcl
mov
pop
scas
mov
pop
loope
push
in
scas
mov
add
or
sbb
mov
cmp
and
mov
ret
push
jo
or
adc
xchg
pushf
les
dec
testl
xor
push
lret
pop
or
test
lods
cmpsl
pop
cmp
pop
or
xor
sahf
into
in
mov
push
pop
dec
push
push
add
test
adc
add
xor
shl
aas
scas
inc
jmp
aas
loopne
clc
pop
stos
mov
add
add
jl
xchg
xadd
push
rolb
inc
inc
jp
cld
sysexit
pop
jae
sub
mov
and
cmp
and
mov
dec
cwtl
data16
subl
pop
enter
shlb
mov
into
fbstp
xchg
aas
ss
lcall
std
stos
inc
push
mov
ret
adc
push
aad
mov
sub
push
call
cltd
lret
lcall
in
mov
out
or
mov
add
push
xor
js
push
iret
shrl
add
nop
add
mov
lret
outsb
mov
fildll
mov
iret
adc
enter
push
mov
mov
cld
rol
movsl
mov
pop
adc
sarb
test
and
fstpt
gs
mov
fnstenv
test
pop
mov
es
ja
test
mov
push
fstps
enter
and
lret
hlt
push
jecxz
sbb
add
sub
lahf
add
add
add
add
das
mov
adc
and
jge
jge
jle
inc
leave
mov
jo
jmp
loopne
icebp
sbb
gs
inc
into
rcrb
lret
rclb
sbb
and
push
sub
jae
scas
xor
mov
or
and
loop
clc
fldl
jns
xor
push
insl
pop
xchg
imul
inc
pop
push
dec
inc
xor
inc
pop
jo
mov
repz
xchg
enter
mov
push
or
stos
jecxz
inc
ja
and
mov
lock
shl
loop
repz
lret
and
dec
cmpb
pop
add
lock
push
xor
sbb
mov
in
jge
add
xor
cwtl
and
ret
jmp
jno
aas
pop
punpckldq
lret
inc
jns
sub
or
std
mov
mov
xchg
adc
movsb
movsl
fcomps
jge
push
aaa
enter
push
test
scas
das
lret
push
mov
sahf
push
aaa
rcrb
xor
dec
leave
test
popa
push
jns
push
movsbl
cltd
pop
mov
and
or
ds
les
adc
pop
mov
add
test
and
jb
add
add
popa
and
mov
repz
xchg
enter
xor
loop
in
mul
roll
icebp
xor
aad
or
inc
cltd
xchg
in
lea
imul
inc
ret
flds
std
push
sub
push
mov
popf
mov
adc
mov
cmp
mov
sub
pop
in
xor
insl
sbb
mov
filds
cmp
jp
cmp
repz
leave
dec
mov
add
lock
push
xor
sbb
mov
mov
mov
scas
or
push
cltd
outsb
cs
jmp
jno
aas
pop
punpckldq
lret
inc
jns
sub
or
std
mov
and
call
or
add
push
aaa
enter
push
test
scas
das
lret
push
mov
sub
clc
mov
popl
adc
jo
jno
push
into
xor
jns
push
movsbl
cltd
pop
mov
and
push
inc
aad
pop
add
out
mov
cmp
add
lret
cltd
pop
mov
mov
popf
add
pop
jb
and
inc
aam
sub
jne
shlb
xchg
enter
xor
loop
in
mul
roll
icebp
xor
push
cltd
xchg
in
lea
imul
inc
ret
flds
std
push
sub
push
mov
mov
movsb
outsb
xchg
rorb
lock
cmp
mov
push
test
jae
jne
fiadds
int
mov
int
cmpsl
jns
xor
xchg
outsl
repnz
push
scas
xor
mov
mov
mov
sbb
repz
sub
or
test
in
mov
int
and
mov
and
xor
out
jg
popa
pop
cli
repnz
test
push
aaa
enter
xchg
imul
and
add
cmpsb
std
mov
cli
cmpsb
test
or
mov
fsubl
sub
xor
push
inc
pop
mov
popf
add
pop
jb
push
mov
cmp
cmp
pop
and
lods
adc
jmp
lret
add
add
es
mul
roll
icebp
xor
cmp
cmpl
out
push
sub
jge
cmp
aaa
mov
push
lock
mov
push
sub
push
mov
rcll
adc
jle
imul
xor
outsl
test
test
cltd
push
outsb
imul
cmp
daa
xlat
or
hlt
fdiv
ljmp
and
lahf
pop
negl
and
mov
mov
mov
scas
or
pop
sbb
add
push
sub
out
sbb
jbe
sub
or
std
mov
ss
xor
jno
cld
jg
mov
repnz
cmp
cmp
mov
je
inc
ret
push
add
rorl
and
add
inc
loope
addr16
out
insb
jmp
insb
outsb
lods
and
sub
lcall
int
push
jle
repnz
dec
pushf
mov
fsubl
sub
xor
push
inc
pop
mov
popf
add
pop
jb
push
jg
xlat
inc
adc
adc
lea
fidivs
sub
scas
push
es
mul
roll
icebp
xor
jnp
jl
sub
addr16
jge
cmp
aaa
mov
push
lock
mov
push
sub
push
mov
dec
add
mov
imul
xor
outsl
test
test
cltd
push
outsb
imul
jb
push
sub
and
dec
sub
mov
mov
xorb
pop
ljmp
mov
and
mov
bound
jnp
lret
push
mov
xchg
sub
shl
pop
or
inc
sbb
scas
mov
xor
popf
lods
aaa
repnz
ficompl
incb
scas
dec
mov
adcb
fbld
sbb
inc
pop
pop
sub
cmp
pop
std
addl
adc
sub
sub
aad
push
sub
sbb
test
sub
or
push
lds
pop
inc
mov
or
lods
push
adc
xor
adc
and
aam
fcmove
mov
repz
dec
and
rcrl
cmp
fwait
mov
enter
mov
lds
or
push
xlat
loop
mov
ret
ss
into
mov
imulb
lods
dec
mov
xorb
pop
ljmp
and
bswap
xchg
loope
add
mov
bound
jnp
lret
push
mov
xchg
adc
into
xor
xchg
xor
sbb
sub
in
xchg
pop
fs
icebp
adc
stc
adc
add
cmp
ret
adc
sub
sbb
inc
push
xor
cmp
cmp
insb
inc
out
adc
movsb
out
xchg
insl
out
popf
in
fcomp
and
fdivp
jnp
pop
lret
push
fdivs
les
dec
sub
mov
add
shll
push
mov
push
sarl
xor
or
or
mov
pop
and
cmp
ret
mov
sbb
push
cmp
lea
aaa
enter
add
mov
into
mov
cmp
adc
jae
xchg
jb
push
mov
add
lods
leave
push
test
clc
adc
repnz
in
lret
mov
lcall
sbb
lret
test
inc
and
jbe
xor
mov
push
cltd
cli
out
ds
push
push
push
xchg
test
mov
inc
push
das
or
sbb
jns
nop
or
lock
out
fcoml
rcrb
cmp
sar
fst
int
aas
adc
lods
xchg
xor
push
test
enter
xor
and
jo
faddl
fwait
jo
jnp
lock
popa
pop
sub
inc
mov
or
adc
pusha
out
push
sbb
notl
rcll
incb
pop
outsb
push
push
outsb
pop
loope
roll
pop
push
cmp
xor
outsl
pusha
test
jb
divl
mov
add
aas
inc
int3
xor
push
daa
mov
push
xlat
jns
cmp
jle
test
jns
push
fiadds
sar
clc
test
lods
push
jmp
mov
lcall
sbb
lret
test
inc
and
adc
loope
pusha
out
insb
cmp
rcrb
test
movsl
push
push
xchg
test
mov
inc
push
dec
cld
das
dec
add
mov
xor
or
jge
out
fcoml
rcrb
cmp
sar
fst
int
aas
adc
or
and
push
test
enter
xor
and
jo
faddl
enter
sbb
pop
inc
mov
in
stos
inc
mov
or
adc
pusha
out
push
ss
pushf
sub
test
repnz
push
push
outsb
pop
loope
roll
pop
push
cmp
xor
push
iret
dec
in
inc
mov
nop
divl
mov
add
aas
inc
int3
xor
push
daa
mov
pop
shll
dec
aad
lret
jg
lds
cmc
jae
lods
fnstsw
xor
push
xor
push
push
imul
sahf
mov
je
fisubrl
mov
or
lahf
nop
pop
ja
fs
xor
loopne
cmp
pop
pop
xchg
dec
cmp
pop
mov
add
inc
fdivl
xchg
push
fsubrs
pop
inc
jne
sti
cmp
mov
cwtl
xchg
add
pop
ret
pop
add
add
loopne
add
add
add
add
jge
xchg
lcall
mov
or
lret
sbb
add
movsl
lret
shr
xchg
push
pop
mov
stos
cwtl
mov
popl
adc
js
add
xorb
dec
repz
pop
test
or
sbb
pop
loope
xor
dec
mov
leave
notb
and
aas
jae,pt
cmp
les
mov
or
dec
add
cmpb
loopne
cli
mov
lret
rcrl
loopne
mov
jmp
pop
das
push
sbb
pushf
lods
pop
ret
mov
mov
daa
ljmp
xchg
enter
pop
cmp
push
jb
jne
pushf
xchg
pusha
lahf
xchg
pop
push
leave
xor
divl
xor
mov
scas
rcl
iret
xchg
add
cmp
fucom
ds
jnp
mov
lock
ret
xchg
mov
lods
pop
cli
repnz
icebp
outsb
nop
jmp
rcll
mov
daa
xchg
mov
fisubrs
divb
call
aad
dec
push
mov
mov
mov
aad
lock
lret
inc
andb
movsbl
cmc
xor
mov
insb
in
les
sbb
lods
ret
mov
ficompl
std
mov
ds
xor
out
mov
push
frstor
mov
dec
mov
repz
mov
scas
out
outsl
fadds
in
cmp
in
rol
stos
js
mov
cmp
sarb
mov
push
test
inc
sbb
jne
out
fwait
and
xor
mov
cmp
popa
roll
subl
sub
pop
jne
pop
mov
push
xchg
sbb
pop
xchg
insb
aad
jmp
and
dec
pop
dec
test
add
imul
xorb
pop
xor
cld
mov
ret
lods
stos
ss
xchg
xchg
pop
sub
dec
sub
mov
adc
ret
movsl
sbb
sbb
popf
icebp
dec
jb
fs
mov
dec
mov
pop
add
mov
ret
mov
lret
mov
mov
adcl
shrb
notb
lods
or
fstpt
outsl
push
lcall
pop
dec
filds
mov
sub
xchg
out
leave
inc
and
pushf
lret
fidivs
rolb
xchg
pop
ds
sub
popa
mov
pop
aad
sub
xchg
push
jge
movsb
das
lods
scas
mov
insb
inc
adc
and
and
inc
push
push
dec
fisttps
xchg
cmp
mov
xchg
jo
daa
imul
mov
fldl
sub
iret
dec
cmp
not
cmpsb
sbb
frstor
jle
std
push
jae
sbb
stos
cwtl
fwait
push
inc
je
cmpsb
out
or
jecxz
in
push
cmp
mov
test
jo
sbb
ss
push
jae
cmp
int3
movsb
mov
adc
cwtl
outsb
fwait
mov
pushf
cmp
mov
loop
mov
loop
cmp
leave
pop
sbb
sub
sbb
lret
pop
loope,pn
jecxz
ret
dec
ds
arpl
aad
dec
ds
arpl
aad
dec
ds
arpl
aad
dec
ds
arpl
aad
dec
mov
sub
cmp
fcmovnbe
jne
sahf
sub
fucomi
mov
pop
cltd
sub
ficoml
pop
in
sub
and
sbb
push
and
insl
outsb
in
mov
xor
idiv
nop
lret
xchg
sbb
cmp
daa
inc
push
int
pop
popa
movsb
sti
idivl
jle
loop
pusha
cmp
mov
mov
jns
xchg
stos
fnstenv
repnz
mov
mov
and
lret
mov
jno
jp,pt
mov
mov
add
dec
xor
test
test
jnp
in
or
mov
push
loope
in
xor
dec
sub
xor
fistps
inc
cmp
add
sub
lahf
add
add
add
add
lods
push
mov
adc
mov
insb
popl
loope,pt
hlt
rol
jae
aad
add
popf
mov
rcl
data16
fdivp
daa
aad
or
dec
dec
insb
mov
cmp
mov
and
outsb
mov
sbb
pop
repnz
xor
inc
mov
pop
mov
lods
jae
into
testb
das
adc
mov
or
std
sub
test
push
pop
je
cli
inc
lods
in
mov
jbe
mov
bound
pop
xchg
lea
mov
nop
adc
in
dec
mov
fmul
dec
push
push
das
stc
add
jo
imul
ja
pop
insl
lds
out
stos
imul
repnz
bts
sbb
xlat
adc
test
or
sub
fisubs
cmp
add
hlt
jmp
loope
fst
fdivrs
pop
push
ds
test
or
rcrl
xor
je
add
fistpl
mov
push
sub
push
pushl
jmp
xchg
pop
mov
js
dec
shl
mov
inc
adc
pushf
or
pushf
xor
jae
add
mov
cwtl
add
cmpsb
rcll
pop
es
jle
lcall
sbb
or
fsubl
test
sahf
push
xlat
inc
stos
jae
into
mov
and
aam
pop
lahf
jae
or
inc
sbb
mov
aas
les
sbb
in
push
jo
js
and
xchg
in
push
dec
sbb
cmp
xchg
or
mov
iret
shrl
movsb
cmp
mov
repnz
jmp
mov
mov
cmp
and
pop
add
aam
in
insb
gs
rcr
add
inc
sub
sbb
pusha
xor
push
sbb
dec
pop
shll
repnz
mov
aaa
mov
mov
sub
jne
repz
fwait
xor
dec
dec
mov
cmpsl
lds
je
mov
mov
dec
sahf
sbb
clc
mulb
sbb
sbbb
push
pushf
cmp
jbe
push
dec
xlat
sbb
mov
ret
push
pop
add
sub
lahf
add
add
add
add
mov
cmp
jecxz
jecxz
and
jle
sub
loop
inc
ds
sbb
shll
fbstp
add
jle
pop
mov
mov
lcall
mov
adc
mov
bound
mov
inc
test
nop
xchg
dec
rorl
fidivrl
mov
sbb
fcomps
lret
inc
add
lret
push
addl
je
call
push
sbb
cltd
mov
sub
push
sub
xor
pop
std
nop
scas
inc
xor
out
or
fldln2
int
test
mov
cmp
enter
fistps
ss
and
add
dec
dec
insl
stos
shll
jb
push
xchg
arpl
mov
sahf
scas
mov
test
xor
sub
jno
or
stc
ret
movsb
push
mov
lahf
ljmp
sti
dec
dec
das
pop
and
jge
sahf
jp
push
adc
iret
icebp
adc
xor
pop
fnstenv
pop
mov
int3
jmp
inc
fidivs
in
jb
cmc
outsl
bound
push
sbb
adc
inc
jp
fdivrs
daa
dec
mov
jecxz
je
sti
int
je
aad
mov
mov
cmp
subl
cli
push
pop
lret
mov
xchg
pop
dec
pop
in
daa
and
xor
jmp
inc
or
sub
std
jge
push
lds
sub
jp
xchg
cli
jnp
inc
loopne
jnp
push
cli
test
scas
pop
arpl
out
iret
test
mov
pusha
pop
fidivrs
cmpb
xor
jle
mov
fiaddl
out
loope
jnp
sbb
ljmp
sbb
add
mov
jno
inc
loop
iret
testl
inc
sub
ljmp
jl
xor
lods
nop
sbb
subb
or
aaa
or
into
movsb
sbb
cmpsb
jecxz
inc
gs
in
push
fidivl
xlat
mov
xor
add
arpl
les
les
adc
mov
mov
icebp
adc
mov
sub
int3
push
icebp
icebp
or
outsb
cmc
xor
sbb
mov
ud2
outsl
movsb
and
sbb
sub
call
lds
scas
dec
movsl
les
out
cmpsl
loope
jmp
mov
add
add
xor
jmp
adc
push
inc
xchg
add
mov
dec
outsl
adc
inc
cmpsb
jp
rolb
jbe
leave
adc
pop
cmp
jl
mov
in
outsb
loop
sub
lods
rcrl
in
loope
jmp
orb
clc
jns
ficoml
jae
ljmp
into
jo
punpcklbw
xor
cmpsl
out
push
shr
leave
test
jo
pop
push
pusha
imul
sbb
mov
call
cwtl
inc
rol
fwait
jg
dec
xchg
fsubrl
lock
cmp
stc
aaa
jmp
pop
sti
addr16
mov
shl
movsb
jns
adc
pop
cltd
lods
or
dec
jne
mov
out
outsb
sti
push
test
dec
cmp
jbe
jp
scas
mov
dec
dec
fcmovbe
fldl
lret
or
pop
repnz
or
movsb
pop
mov
and
stc
dec
jbe
xchg
dec
fmulp
pop
stc
cmpsb
adc
jmp
mov
sub
xchg
jbe
addr16
xorb
xor
mov
movntq
aad
das
stos
sbb
mov
scas
repnz
leave
ja
repz
xor
xchg
ljmp
xchg
pop
dec
adc
push
push
testl
pusha
sub
je
or
and
push
ret
cmp
push
cmp
enter
cvtpi2ps
sub
mov
inc
fdivr
pop
aad
cld
add
push
jge
jbe
cmpl
jge
pop
lret
pop
jg
outsl
jl
imul
adc
mov
ret
stos
out
inc
andl
pop
inc
cmp
or
inc
orb
inc
sarb
and
and
or
arpl
mov
mov
add
xor
pusha
or
jg
enter
xchg
movsl
fldcw
push
add
xor
xchg
xchg
in
pop
out
sub
cwtl
pop
pop
jb
imul
mov
popf
stc
imul
mov
mov
std
pop
call
sbb
adc
aam
and
lret
xchg
dec
pop
aas
xorl
jle
and
stc
fiaddl
add
bswap
sarl
dec
dec
popa
popf
adc
icebp
and
push
loope
add
aas
pusha
pslld
mov
dec
es
push
xchg
aas
lahf
inc
sub
into
and
hlt
xor
fucom
inc
sbb
sbb
sub
call
pop
fwait
pop
mov
sbb
xor
pop
dec
adc
rcl
mov
jns
jns
les
dec
insl
jno
loop
xchg
jle
inc
iret
aaa
cs
loop
fnstsw
fimull
dec
stos
mov
add
sub
add
flds
int3
aas
loop
dec
cmp
jo
movb
jp
mov
cld
inc
ret
ljmp
dec
sbb
push
addps
mov
mov
add
cmpsl
lea
ficoms
jnp
roll
push
xor
jae
stos
cld
mov
decl
fs
jp
mov
xchg
repnz
mov
sub
enter
adc
ficoml
std
stos
cltd
push
out
insb
addr16
inc
call
jo
xchg
repnz
jno
scas
sti
mov
adc
cwtl
jns
lock
xchg
dec
add
test
nop
jl
cmp
mov
popf
fistpl
fsubr
sub
xchg
in
test
cmpsl
rclb
inc
ljmp
iret
mov
cmp
aaa
insl
out
jle
mov
adc
cltd
sti
xor
jp
shl
inc
leave
cmc
daa
scas
in
and
in
loopne
push
pusha
daa
mov
and
loope
dec
sti
or
rolb
cmp
aaa
scas
shrb
cmc
sub
jo
lds
jbe
dec
jg
sbb
mov
pop
in
lahf
push
cmp
lcall
scas
sub
mov
mov
test
cpuid
in
cmp
fsubl
mov
in
add
dec
sbb
nop
sub
push
mov
lea
call
sarb
cli
push
pop
dec
jecxz
roll
mov
out
dec
shlb
pop
sbb
xchg
mov
dec
mov
jo
lds
imul
test
push
fiadds
popa
loope
dec
arpl
push
inc
or
js
in
out
and
cli
fbld
les
and
mov
enter
jecxz
jns
shl
fdivrl
mov
xlat
insl
inc
cs
push
rcl
mov
push
cld
jp
fstps
adc
jo
loope
mov
dec
test
dec
loopne
sahf
push
ret
adc
arpl
pcmpeqb
pop
cli
pop
iret
xchg
insl
xchg
mov
or
or
aaa
xchg
and
sub
inc
xlat
sub
insl
scas
test
add
xor
add
ffreep
or
push
jne
xchg
or
fidivrl
mov
lods
mov
cli
cmp
out
mov
pop
or
mov
lahf
cmc
or
jmp
mov
mov
pop
mov
outsl
jle
mov
adc
movsb
dec
sbb
and
cli
mov
mov
pushf
test
dec
xchg
popa
insb
lock
jp
int
add
fiadds
sbb
not
push
outsb
dec
jecxz
cwtl
popf
pop
movsl
out
dec
cmp
lods
adc
in
xchg
xchg
leave
and
int3
movsl
jnp
push
jl
jge
push
data16
mov
test
push
decl
rcl
test
xchg
mov
fistpl
inc
mov
cmp
aam
cmp
push
ret
jnp
xor
insb
shll
jle
repnz
cltd
sbb
sub
add
rcrl
les
mov
les
inc
mov
mov
push
add
leave
outsl
cmp
mov
je
xor
repz
loop
es
jno
add
jp
adc
xchg
cmp
pop
mov
xchg
jge
and
xchg
mov
jo
mov
mov
xor
stos
ljmp
stc
test
xadd
xchg
xor
cmp
lret
loopne
lcall
mov
leave
sbb
mov
and
fmuls
sub
ds
mov
mov
xchg
dec
push
ljmp
mov
fs
inc
xor
or
enter
popf
stos
movb
mov
inc
adc
mov
loopne
sbb
push
adc
add
xor
jmp
jecxz
mov
jg
and
add
inc
mov
jp
gs
mov
adc
or
dec
add
roll
jge
das
mov
jae
or
rclb
rcll
sub
push
jae
insb
imul
xor
into
adc
addr16
mov
dec
xor
sbbb
mov
xor
inc
stos
lea
pop
shlb
insb
xchg
sub
fisubs
xchg
test
mov
and
mov
pushf
xchg
cmp
push
xchg
cmpsl
xorl
or
in
xchg
sub
out
lock
xchg
cwtl
in
daa
mov
mov
dec
mov
fdivr
stos
nop
mov
rolb
xor
cltd
xchg
jecxz
or
jns
xchg
dec
pushf
punpcklwd
mov
and
popf
inc
jl
andb
cs
fnstenv
cmp
push
enter
sbb
mov
adc
xor
iret
mov
mov
mov
jle
and
leave
push
and
fnsave
scas
mov
sub
loopne
pop
aad
shrl
in
jbe
dec
je
fidivrs
add
xor
sub
jg
lret
add
cmp
into
adc
push
add
sbb
in
test
dec
subl
or
inc
mov
or
push
je
add
dec
dec
test
xor
ret
jae
popf
adc
testb
pop
flds
lods
cmp
dec
aam
dec
jns
xor
or
sti
daa
adc
xchg
and
and
addl
mov
in
mov
xchg
js
mov
arpl
jg,pt
cmp
push
fadds
ss
sti
jle
inc
inc
inc
mov
mov
test
int
popf
or
std
nop
lahf
mov
je
jo
icebp
out
pop
outsb
add
fildl
idivl
les
into
test
mov
mov
pop
xchg
adc
jo
and
fwait
or
dec
mov
inc
movsl
mov
imul
dec
sarb
int3
fcoml
popa
sti
dec
lret
mov
outsl
pop
xchg
out
pop
and
fs
and
xlat
mov
sub
xchg
push
push
int3
mov
sub
xchg
cmpsb
dec
jns
sub
jo
adc
cmc
push
repz
sub
int
cmp
loopne
sbb
mov
xor
and
out
shlb
int
je
jno
loopne
jl
daa
aam
icebp
cld
sub
jbe
adc
cmp
cmc
cs
fisttps
ljmp
dec
scas
inc
ljmp
mov
add
call
cmpsl
or
mov
xchg
movsl
mov
lock
je
jbe
mov
out
mov
cs
outsb
cmpsl
push
cli
dec
pop
dec
les
add
and
test
movsb
bound
lock
imul
int3
xor
sbb
sub
test
mov
cmp
xchg
inc
xor
stos
or
mov
sub
fxch
and
cmp
adc
loopne
rcrl
cmp
xor
jne
fwait
cmpsl
push
and
lods
std
push
push
cmp
leave
in
add
fmul
add
sub
shll
push
ror
lcall
test
lcall
pop
xor
sbb
imul
xchg
sbb
mov
and
cs
inc
cmp
jle
sub
int
inc
sahf
mov
in
dec
dec
imul
aaa
test
ss
out
fistpl
pop
cmc
inc
daa
icebp
sub
arpl
popa
jno
movsb
or
prefetch
add
inc
inc
std
xchg
inc
rorb
or
std
inc
pop
xchg
stos
cmp
inc
popa
sbb
lgs
inc
shl
aam
enter
jge
mov
xlat
push
pushf
lret
nopl
lahf
adc
ret
dec
xlat
sti
jg
imul
push
mov
test
in
sbb
arpl
sbb
mov
imul
push
pop
mov
nop
xchg
in
sbb
nop
insb
imul
out
lret
pop
sub
xchg
jbe
sub
jo
rcrl
ds
stos
cmp
adc
pop
loope
mov
adc
inc
jbe
mov
out
ret
stc
sbb
cwtl
jecxz
cld
sti
out
ret
add
lea
movb
pushf
ja
cmp
add
xchg
jne
es
insl
popa
hlt
lods
dec
jno
mov
mov
pop
arpl
jnp
jb
aam
add
insb
ret
jns
cmpsl
ret
push
xchg
notb
es
cmpsl
andb
leave
mov
or
pop
fsubr
loope
xchg
testb
fs
or
gs
mov
enter
iret
jne
mov
aam
xor
and
ja
pop
scas
test
pop
push
add
lea
dec
icebp
negl
lods
mov
sub
push
hlt
push
cmp
fildll
mov
cmp
idiv
lods
in
dec
jle
hlt
fdivp
pop
add
jl
sub
cmc
repnz
movsb
dec
ret
loope
outsl
push
insl
gs
mov
pop
in
iret
xor
or
ja
push
inc
sub
mov
mov
iret
les
cmpsl
dec
or
mov
stos
jne
sub
dec
cmc
insb
sbb
test
test
xchg
insl
jbe
cmc
sbbl
in
fdiv
cmp
outsb
cli
cld
or
dec
adc
js
xchg
jno
pop
sub
ss
inc
loopne
jo
mov
dec
fimuls
mov
popf
fwait
mov
andl
mov
nop
jmp
adc
jp
mov
lret
and
dec
mov
filds
or
mov
push
out
sub
negb
xchg
repz
imul
dec
fwait
jo
fcomps
dec
rcr
mov
xchg
jle
cmp
cmc
fstp
push
clc
cmp
fs
insb
cmp
lock
popa
pop
outsl
in
push
ja
fcmovnbe
iret
or
popl
lock
push
ffree
popa
incb
das
and
mov
ljmp
add
xchg
ljmp
push
mov
mov
add
test
pop
test
cwtl
popf
jne
xchg
loope
sub
push
sti
arpl
shlb
cmc
xor
push
push
out
sub
add
cltd
test
pop
and
out
jmp
adc
addr16
pop
adc
in
sbb
xor
mov
neg
leave
lods
inc
orl
inc
decl
movsl
call
dec
adc
push
or
enter
dec
inc
inc
leave
pop
popf
and
cmp
sub
inc
ffreep
pop
pusha
push
decb
movsb
lock
dec
movsl
lods
adc
loop
push
sub
sti
in
inc
movsl
add
mov
outsl
rclb
push
lods
adc
push
insb
das
jbe
fisubrl
out
fsts
das
rorb
xchg
jle
ljmp
rol
lret
mov
cmp
sbb
incl
mov
adc
mov
stos
adc
aam
rorb
test
pop
dec
addr16
xchg
mov
aam
jbe
xor
pop
iret
enter
jbe
movsb
lret
push
dec
mov
in
ret
in
dec
lock
sbb
jg
pop
int
test
push
ss
and
sbbb
in
push
stos
fisubl
push
nop
clc
mov
in
loopne
add
push
push
xor
hlt
mov
mov
std
dec
jae
mov
mov
or
dec
inc
xlat
adc
xor
ss
or
loopne
dec
outsb
add
adc
pminub
push
mov
sbb
or
push
pusha
mov
fdivs
inc
loope
aas
fildl
jae
call
adc
xor
sub
xchg
jl
es
test
or
cmp
push
scas
adc
cmpsb
xchg
mov
insb
push
adc
jmp
ljmp
cs
push
cld
mov
pop
int3
push
outsl
inc
dec
in
call
ret
gs
sbb
in
and
mov
test
out
cs
lods
inc
xor
fstpt
add
out
sub
mov
pop
cmp
jp
pop
mov
sti
jecxz
cltd
mov
in
scas
add
sbb
xchg
stos
sbb
insb
adc
jl
subb
mov
idivb
test
add
int
flds
mov
fiadds
arpl
fucom
imul
cmc
jne
insl
or
iret
movsb
adc
repnz
mov
jns
cmp
pop
rcrl
sub
negl
and
mov
rcrb
outsb
mov
mov
xchg
lds
fmulp
or
push
fldl
sub
imul
loop
aas
cmp
jb
push
and
test
push
std
es
sub
test
sub
in
fcomip
sub
inc
sub
movsb
rcrl
cmpsl
mov
test
arpl
ljmp
sbb
add
adc
lcall
daa
jle
mov
or
cltd
clc
popa
shrl
in
insb
inc
pop
xorb
push
and
xchg
adc
xchg
push
sub
cmp
sbb
sarl
xchg
dec
adc
mov
xchg
mov
jg
push
inc
addr16
or
lcall
aaa
aam
repz
fcmovnbe
rcl
rorl
ret
inc
repnz
adc
and
stos
movsl
mov
and
dec
and
mov
adc
les
mov
ja
hlt
sti
out
push
mov
arpl
xor
das
loopne
dec
or
dec
testl
loope
cmp
dec
sbb
push
loope
scas
inc
ficomps
pop
xchg
mov
cmp
adc
and
std
enter
in
push
movsl
cmc
and
xchg
jle
jecxz
fsts
mov
stos
aad
cmp
xor
loope
cmpb
dec
icebp
nop
adc
and
push
rclb
scas
pop
lcall
sbb
fiadds
mov
xchg
das
das
jbe,pn
andl
push
sbb
jno
push
xchg
sub
cs
xor
cmc
or
pop
scas
push
leave
adc
adc
xorl
mov
shl
pop
mov
dec
mov
sbb
sbb
aaa
push
inc
mov
stos
mov
pop
xchg
and
mov
xor
cmp
hlt
dec
rcrb
mov
cltd
cmp
inc
adc
add
adc
inc
lods
addl
push
adc
or
lret
mov
fmull
clc
inc
mov
cli
xchg
pop
cwtl
cmp
xchg
test
repnz
adc
cmp
adc
aam
pop
fldl
xlat
shrb
pop
orl
xchg
sahf
or
inc
mov
sti
fs
stos
cmp
mov
push
shll
xchg
sub
pop
pop
dec
adc
imul
imul
inc
jp
cltd
das
inc
or
xchg
shlb
mov
jecxz
stos
dec
xor
lods
jg
out
incb
sbb
and
jbe
mov
rorb
adc
add
insl
out
jg
dec
or
add
loopne
add
add
xchg
xor
pop
ljmp
and
push
adc
imul
pushf
stos
leave
in
fisubrl
scas
pop
lcall
push
push
mov
movsl
lods
pop
push
mov
pop
xchg
adc
adc
out
mov
test
movsl
cltd
imul
sarl
pop
mov
mov
or
inc
in
xchg
js
xchg
lods
mov
inc
cmp
out
js
inc
out
xchg
mov
addl
sbb
sti
test
mov
iret
and
pop
sbb
push
hlt
xchg
dec
cmpsl
les
movsb
jns
mov
and
xchg
cld
pop
les
inc
icebp
push
mov
cmp
cwtl
pop
aad
xchg
inc
bound
sub
ja
or
testb
cmp
cmpsb
sti
pushf
mov
rcl
or
movsl
incl
sbb
xor
es
push
nop
and
dec
in
add
jecxz
ljmp
push
inc
inc
aam
jae
push
std
xchg
dec
sbbl
xchg
xlat
out
adc
lcall
fldcw
outsl
xchg
mov
in
and
mov
jge
scas
mov
xlat
and
insl
push
mov
aaa
lock
sub
sbb
lock
imul
fidivrs
mov
ret
xchg
jp
mov
outsl
cmp
in
lock
adc
xchg
rol
orl
pop
dec
call
xor
aas
aas
pop
sbb
jbe
mov
aam
fldl
daa
xchg
outsb
sub
aam
pop
inc
push
jl
push
mov
sub
dec
push
repnz
or
loope
cli
test
push
fdiv
fdivrs
clc
aad
adcb
mov
cmpsb
xlat
iret
xchg
dec
loopne
sti
and
push
sub
loope
arpl
pop
leave
rorb
arpl
out
cmp
nop
jecxz
fbstp
scas
inc
mov
adc
push
cmpsb
fadds
pop
xor
ret
add
or
fistps
pop
dec
scas
xlat
or
push
bound
ret
push
je
push
fsts
inc
iret
mull
xchg
repnz
xor
adc
rcrb
xlat
aas
pop
movsb
jb
aas
mov
frstor
int3
jb
pop
call
adc
xor
pop
and
adc
lcall
stos
lods
sar
ret
sahf
jbe
lods
sub
aad
in
push
arpl
inc
div
add
pop
jns
movsb
xlat
aam
pop
fdivrl
test
sub
or
xor
add
dec
xchg
movsb
enter
pop
inc
xor
push
sub
xor
sarb
adc
lret
mov
out
mov
ja
mov
test
orl
outsl
or
adc
mov
stos
mov
jb
cmp
xor
je
fnsave
xchg
push
pop
mov
or
jmp
addr16
xchg
jbe
add
mov
mov
mov
dec
insl
int
enter
mov
int3
adc
add
loope
push
leave
sbb
push
bound
sub
and
shll
mov
or
jae
movsb
mov
repnz
test
sub
inc
fiadds
push
fisubrs
iret
xor
divb
nop
sbb
jns
test
fdivl
jmp
out
lock
ljmp
pop
std
push
dec
inc
mov
jo
jp
pushf
js
add
push
inc
fcoms
popa
fwait
xor
lahf
dec
adc
je
mov
jb
and
mov
xor
xchg
jl
ret
mov
push
pop
and
and
or
std
push
and
push
adc
int
dec
loope
ss
aaa
in
jno
and
mov
jo
mov
jb
and
loopne,pn
mov
daa
inc
dec
fs
cmp
adc
mov
mov
roll
addr16
notl
xor
mov
xor
data16
bnd
xchg
pop
sbb
add
adc
jge
int3
cld
decb
cmp
pusha
dec
sub
jl
cmpsl
adc
pop
dec
je
inc
shl
sbb
mov
push
mov
cmc
pop
fcoml
clc
mov
and
push
stc
adcb
dec
popa
xor
mov
enter
lahf
mov
scas
imul
mov
les
insb
dec
pusha
outsb
pop
icebp
insb
mov
jae
stos
jp
lcall
gs
std
pop
popf
subb
push
push
mov
scas
repz
inc
stc
lcall
jnp
cmc
and
iret
pop
nop
xlat
rcrb
int3
dec
adc
rolb
popf
push
gs
sub
lods
stc
loope
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
dec
mov
add
add
add
add
sub
lahf
add
add
add
add
add
imul
push
aam
lret
push
ss
mov
icebp
and
shlb
test
loopne
ja
enter
fildl
js
les
loope
add
sub
ljmp
dec
jle
cmpsb
leave
in
cmp
dec
into
leave
mov
ljmp
pop
adc
mov
adc
add
xchg
cltd
jae
pushf
cli
mov
mov
mov
ds
pop
leave
shrl
cli
pushf
lea
faddl
mov
sahf
aas
push
jmp
xor
stc
add
das
jmp
loop
out
xor
pop
in
mov
test
sbb
sbb
fistps
mov
mov
dec
xchg
dec
movl
popa
xchg
icebp
filds
leave
dec
jbe
xor
ret
mov
dec
adc
sub
enter
adc
divb
cmc
stc
in
inc
or
cmp
loop
mov
and
addb
cmp
movhps
mov
repz
xchg
fnstenv
repnz
adcl
sub
sti
test
mov
pop
mov
xor
mov
popf
add
pop
cmp
or
or
cmpl
pop
mov
std
das
and
cwtl
aam
stos
sbb
push
push
ss
adc
jge
dec
in
xchg
dec
lret
push
pop
push
test
mov
adc
cmp
scas
dec
cmc
cmpb
into
push
xchg
sub
and
in
lods
push
ljmp
xchg
jne
pop
sti
fsts
in
sbb
cltd
push
aad
fstpl
pop
sbb
pop
push
xor
and
xor
push
xor
mov
jecxz
mov
and
icebp
mov
xchg
push
push
int3
push
jecxz
jge
fisubs
or
and
mov
and
ss
aad
sub
pushf
xor
aaa
imul
push
stc
dec
sar
sbb
dec
cld
mov
rclb
mov
lock
stos
dec
xor
inc
out
hlt
xchg
jle
xchg
jno
daa
sub
sbb
pop
lahf
dec
mov
xor
push
push
lds
scas
cmp
dec
add
xchg
cwtl
mov
mov
jl
lcall
push
mov
dec
xor
add
pop
jecxz
stos
jb
lcall
mov
imul
dec
pop
sub
int3
add
notl
xchg
inc
jno
dec
loopne
js
adc
mov
push
sub
xor
xchg
mov
inc
in
fcomp
cmp
push
repz
push
test
aaa
out
cmpsl
jns
stc
shll
add
xchg
sarb
and
cmp
ror
adc
pop
test
or
mov
fldl
sub
xor
push
lahf
lods
jbe
sbb
imul
stc
pop
lods
cmpsl
add
jno
ret
inc
xor
mov
mov
jne
scas
mov
push
xorb
xchg
xor
test
jnp
mov
inc
mov
addr16
push
iret
dec
inc
addr16
fldenv
push
je
or
inc
mov
pop
aaa
lret
test
les
and
jg
xchg
push
push
fimull
jg
add
out
pop
je
paddusw
fisubrs
aam
jno
lret
enter
xchg
lock
push
pop
sub
mov
sub
lea
lods
cmc
push
gs
lea
lods
cmc
push
gs
lea
lods
cmc
push
gs
lea
lods
cmc
push
gs
lea
lods
cmc
push
gs
lea
lods
cmc
push
gs
lea
lods
cmc
push
gs
lea
lods
cmc
push
gs
lea
lods
cmc
push
gs
lea
lods
cmc
push
gs
lea
lods
cmc
push
cmp
addr16
shl
lds
out
inc
shrl
test
imul
cmp
in
inc
mov
sbb
scas
add
fistpl
and
add
add
add
loopne
add
incl
add
add
mov
imul
loop
jo
mov
or
movsl
jne
iret
sbb
loopne
fs
pandn
sbb
pop
addr16
and
out
xchg
xchg
out
stos
xor
dec
push
inc
adc
adc
lahf
lret
jns
jb
add
insb
lahf
jl
adc
xor
push
js
out
add
mov
xchg
xor
adc
cmp
fstl
xor
movsl
mov
lahf
cmpsb
xor
repnz
movsb
in
dec
dec
sub
pop
sub
in
push
push
icebp
dec
cltd
jb
test
jno
pop
lea
repz
scas
mulb
je
addl
call
add
add
loopne
add
incl
add
add
ret
push
push
scas
loop
mov
rcrb
lea
cmpsl
push
and
gs
loope
mov
and
scas
cmp
mov
cmpsb
jae
daa
xchg
xlat
sub
iret
dec
in
movsl
test
fstps
insl
cmpsb
pop
mov
fs
out
mov
cltd
mov
jmp
cmc
jmp
cmp
js
into
je
mov
mov
lret
xchg
imul
sbb
fdiv
sbb
dec
mov
mov
ds
adcl
movsl
jle
mov
ffree
loopne
and
fnstcw
xchg
adc
lds
leave
mov
xor
dec
pop
mov
pushf
add
add
loopne
add
incl
add
add
call
pop
in
cli
stos
sub
in
adc
sub
bound
mov
loope
sbb
sub
adc
cwtl
cs
rclb
xor
sbb
sar
rcrb
lea
sub
lea
sub
jp
sub
clc
push
js
test
mov
pop
dec
popa
add
sub
or
dec
scas
wbinvd
jle
xor
and
adc
loope
push
popa
add
sub
or
imul
insb
push
mov
out
pop
sub
ret
add
add
loopne
add
add
add
add
sub
rclb
and
cmp
fisttpl
sbb
xor
mov
push
and
mov
sbbb
mov
ret
dec
iret
aad
in
out
test
pop
mov
mov
add
test
gs
jb
pushf
cmp
and
push
popa
mov
pop
imul
cmp
and
pushf
pop
sub
mov
xor
lods
loopne
cmp
mov
lds
test
aad
adc
mov
dec
lahf
andb
cmc
pop
lods
cmc
sbb
cmp
arpl
jb
sub
iret
stc
mov
sbb
mov
pushf
stos
and
dec
cli
pop
mov
xor
shr
cmp
mov
pusha
and
pop
ret
movsb
lahf
aam
in
imull
and
lret
inc
lahf
xchg
hlt
dec
sub
loope
inc
adc
pop
xor
jo
and
fs
jo
in
insb
xchg
lods
mov
adc
cmpsl
std
es
rclb
mov
xchg
lock
pop
fsubrs
leave
inc
or
popl
pop
jg
jbe
orb
jmp
mov
pop
daa
xor
mov
stc
xchg
mov
pushf
rorl
xchg
not
leave
or
jl
insb
mov
adc
cmp
test
dec
push
mov
and
cli
lahf
dec
xchg
xor
adc
xor
imul
out
aad
popf
xor
mulb
or
xorb
mov
mov
sbb
mov
cmp
mov
jae
pop
jbe
out
sbb
cld
push
push
lret
std
sub
mov
fwait
inc
addr16
xchg
or
fistl
sub
push
jnp
add
xchg
cli
jg
pushf
jne
sbb
imul
pop
enter
jbe
aad
cmpb
icebp
fcmove
adc
pop
jg
stc
xchg
mov
sub
inc
add
leave
dec
mov
adc
xor
mov
loop
mov
fdivs
movsl
jle
mov
inc
fwait
insb
xchg
push
mov
cmp
xor
mov
cli
ds
cmp
in
ret
jb
adc
in
xor
sbbl
fdivr
push
xor
call
inc
das
xor
push
jbe
add
popf
mov
out
loope
pop
in
push
mov
mov
xor
mov
and
in
jp
std
mov
pop
test
xchg
shr
and
fildl
loope
int
stos
je
daa
mov
pop
pop
mov
popa
mov
inc
mov
loopne
stc
push
xchg
nop
jmp
test
ja
ljmp
mov
addb
int
mov
xchg
sbb
xchg
cld
mov
fwait
std
into
pop
xchg
dec
lret
test
push
sbb
xor
mov
mov
insb
pop
dec
sti
rolb
ret
and
xchg
or
xor
xchg
into
aas
cmpsb
fdivs
xor
xchg
popa
or
stos
xchg
daa
data16
add
adc
mov
mov
jns
repnz
out
aas
mov
xor
imul
push
and
gs
repz
fadd
in
cmp
push
ret
ret
cmc
lcall
aaa
dec
in
push
adc
test
fldenv
mov
lahf
jg
ljmp
popf
inc
jne
mov
xor
sub
xchg
test
pushf
adc
mov
push
push
lret
push
xchg
mov
test
scas
cli
pop
test
add
sub
lahf
add
add
add
add
pop
or
lcall
pop
xchg
icebp
cmp
lods
push
out
movsl
pop
stc
mov
mov
ljmp
mov
loopew
pop
fcomip
xchg
and
push
jno
or
xchg
or
xchg
cmp
loopne
lods
xor
mov
pop
sub
sub
jl
push
push
or
jg
dec
fldenv
inc
test
sub
or
xor
adc
subl
mov
fs
pop
pop
stos
xor
mov
icebp
xor
cs
pop
inc
add
mov
cltd
insb
hlt
inc
jl
jg
dec
xchg
addr16
in
fwait
mov
stc
pop
stos
push
and
xor
ror
ret
lods
flds
loop
jns
mov
je
in
movl
aaa
push
mov
cmp
inc
mov
mov
mov
icebp
call
inc
mov
cs
mov
and
jbe
push
inc
jmp
shlb
clc
push
mov
xchg
jbe
mov
test
lods
icebp
bound
lea
sti
dec
and
in
pop
fucom
loop
mov
xchg
mov
outsl
pop
lret
repnz
inc
cs
push
push
sbb
dec
cmp
je
or
push
inc
sub
adc
xor
imul
xchg
add
pop
stc
pop
mov
cmpsb
mov
shll
sub
push
xchg
push
dec
xchg
sub
cmp
ret
or
lahf
out
shl
out
xor
add
sub
lahf
add
add
add
add
stc
gs
pop
faddl
ret
sbb
jg
sub
sub
loopne
xchg
pop
cs
cmp
aam
dec
jmp
pusha
nop
adc
pop
and
es
and
push
sbb
push
pop
cmc
sahf
std
test
mov
pop
fisttps
jp
fimuls
inc
imul
mov
push
ret
rcll
pop
fstps
sbb
stc
outsl
sti
pop
mov
outsl
into
sahf
mov
mov
addr16
scas
stc
cmc
mov
xor
mov
jnp
cli
sbb
out
leave
ljmp
cld
or
icebp
bnd
cmp
jg
adc
rolb
loope
daa
mov
pop
and
push
sub
cli
int3
pusha
popf
imul
xchg
test
lret
notl
stc
push
std
mov
imulb
mov
mov
in
cmp
rorl
sbb
sti
xchg
incb
jbe
enter
sub
in
loopne
clc
sti
or
jnp
in
in
mov
mov
dec
scas
jo
mov
sub
jno
ret
xchg
popf
in
popf
cmp
in
mov
fs
ljmp
popf
addr16
pop
pop
fcmovb
xchg
push
add
jge
add
xor
data16
pop
lahf
sub
push
fmull
mov
lods
cmp
cltd
jne
jnp
mov
out
mov
pushf
xlat
cwtl
idiv
sub
mov
fsubrs
xchg
sbb
mov
gs
pop
and
js
cmc
adc
aaa
push
cmp
aaa
xchg
cmp
push
fmull
adcl
xchg
jp
or
jne
aas
mov
arpl
or
pop
dec
cmp
jbe
pop
mov
repnz
outsl
dec
jge
out
or
mov
in
int
adc
mov
negb
shll
adc
mov
int
pop
xchg
add
aaa
ret
test
inc
mov
rorl
sbb
stos
pop
lods
jns
mul
enter
xchg
pop
jle
lahf
adc
jne
inc
mov
mov
popf
push
aam
xor
mov
imul
push
add
adc
sbb
mov
test
paddusw
or
lds
aas
jns
ror
insl
or
mov
popf
mov
and
shlb
shrl
mov
jl
cmc
sbb
cmp
mov
arpl
jno
sub
ss
mov
fcmovnbe
mov
mov
pop
sub
shlb
dec
and
enter
or
imul
inc
fnstenv
cli
aad
adc
out
mov
std
jno
fs
add
stos
sbb
mov
mov
and
sub
push
or
add
loopne
add
add
add
add
dec
jp
popa
pop
mov
fcom
pop
push
out
mov
xchg
mov
mov
sbb
and
sub
xchg
pop
je
mov
aam
add
sub
and
lret
mov
sub
jo
jno
xor
push
mov
notb
jg
into
push
fisttps
cmp
mov
adc
lcall
push
or
ret
jp
push
popa
mov
adc
inc
fidivrl
push
inc
mov
xor
jb
mov
mull
adc
adc
mov
ficoms
jg
lods
arpl
jnp
mov
inc
mov
mov
dec
fsubp
push
scas
jge
das
add
xor
into
jns
es
test
addr16
adc
sarl
icebp
ja
orl
ds
xchg
push
adc
test
out
fistpl
hlt
cmp
mov
lods
sbb
scas
js
dec
adc
dec
and
and
jno
sub
cmp
lret
mov
rclb
mov
and
mov
push
dec
mov
paddsb
cwtl
mov
xchg
mov
jnp
test
movsl
push
dec
mov
out
hlt
popa
sti
pop
jl
mov
fidivrl
mov
mov
cld
cmp
scas
outsl
ljmp
inc
repz
adc
xchg
push
mov
cmp
mov
and
push
into
subl
mov
dec
and
mov
loope
idivb
xor
add
pop
mov
out
dec
addr16
stc
jmp
mov
xchg
call
push
sti
movsl
dec
inc
insb
ss
cmp
mov
push
push
rolb
ds
or
ja
jmp
cli
push
adc
incl
mov
xchg
sub
dec
xchg
adc
enter
cmp
inc
int3
icebp
inc
imul
mov
sbb
out
cwtl
pop
leave
mov
adc
add
xlat
add
xor
repz
test
movsl
aas
fsub
sub
ret
and
xchg
xlat
push
cmp
inc
mov
iret
leave
mov
pop
push
mov
fiadds
push
insl
push
add
cli
daa
inc
mov
xor
and
sbb
mov
or
adc
pop
jns
clc
cmp
lods
aaa
xlat
fdivr
xor
aam
fiaddl
mov
arpl
xlat
fcompl
mov
hlt
aad
push
mov
mov
dec
add
jne
inc
push
xor
stc
xchg
push
push
xchg
jge
and
xchg
loope
fadds
cwtl
xchg
or
rclb
inc
pop
mov
ret
subl
fcomp
add
cltd
add
lods
push
addb
stc
lods
pop
adc
mov
and
and
and
dec
mov
sbb
sbb
loopne
mov
push
dec
jnp
mov
inc
data16
frstor
decl
mov
mov
adc
xor
push
adc
fbstp
les
add
adc
and
push
sti
or
mov
inc
cli
dec
cmp
movsl
mov
mov
rorl
iret
cltd
aad
mov
or
mov
pop
sbb
out
hlt
out
pusha
push
sub
adc
pop
mov
push
push
loope
pop
push
jae
or
adc
jp
imul
cmp
mov
addps
mov
movsb
jno
pusha
cltd
and
outsb
and
xchg
jno
and
pusha
fistl
add
fldl2t
push
cmc
mov
mov
ds
jae
cmpsb
jecxz
hlt
mov
add
and
data16
dec
push
adc
inc
sub
inc
pop
test
insl
cmpsl
scas
bound
jle
aaa
pop
das
arpl
out
ss
mov
add
dec
scas
addl
sub
fisubs
dec
mov
xor
sub
jns
push
aas
cwtl
push
mov
xchg
dec
fwait
inc
push
sbb
mov
inc
adc
pop
leave
add
jge
sub
xchg
push
lret
dec
addr16
xor
adc
mov
gs
mov
test
cld
sbb
cmp
cmp
aas
and
loop
sub
enter
mov
jmp
lcall
sti
in
jno
rclb
lods
popf
aad
dec
lea
enter
mov
or
vpshaw
lea
or
dec
insl
inc
mov
or
mov
lret
aas
push
lods
test
mov
mov
push
aam
pop
ja
shll
push
lds
adc
lret
into
cltd
test
mov
outsb
cmp
cli
pop
cmpsl
jge
mov
mov
aam
subb
mov
int3
adc
loope
and
aad
stc
and
fldcw
mov
add
push
stos
lods
cmp
or
inc
test
cmp
xlat
test
push
and
pusha
js
pop
jle
insl
lea
xchg
or
mov
mov
dec
pop
scas
stc
jge
jo
xchg
lea
pop
sbb
sbb
jl
ja
and
mov
push
pop
fdivs
mov
das
xor
inc
das
add
addr16
ret
adc
leave
lret
dec
xor
insl
xlat
and
or
jb
cltd
jae
pop
sub
in
ss
pusha
mov
iret
aaa
and
cmc
pop
scas
pop
xor
imul
movsb
in
lock
repnz
gs
and
mov
test
sub
clc
mov
sbb
js
loope
push
jb
decb
jle
jge
notl
jno
inc
loop
fistl
fwait
mov
fsubp
andl
rorl
out
out
nop
in
int3
sub
xchg
sahf
aad
loope
nop
lret
pop
adc
mov
jge
mov
out
data16
sbb
push
in
mov
stos
pop
lcall
or
add
add
lret
test
mov
mov
cltd
mov
mov
push
sbb
mov
sub
imul
add
xchg
push
insb
sbb
sbb
inc
stos
cli
pop
fiadds
mov
dec
mov
mov
test
es
jne
cmpsb
sahf
sbb
jl
jmp
cmp
pop
cmpsl
stos
movsl
out
jge
mov
scas
and
xor
pop
lods
das
mov
pusha
sub
sub
mov
arpl
mov
and
popf
fnstenv
or
pop
sahf
fwait
mov
xlat
ds
pop
xchg
push
pop
and
mov
scas
mov
out
mov
mov
loopne
fsubrl
mov
mov
mov
ljmp
mov
adc
inc
flds
in
sub
inc
mov
fldl
jp
mov
xorl
sbb
jp
or
pop
dec
adc
fisttpl
daa
shll
and
inc
int3
cmc
sbb
add
andb
lret
cmpsl
test
jno
mov
jmp
imul
or
mov
adc
dec
popa
jae
cld
cwtl
xchg
fdisi(8087
mov
aaa
nop
std
into
out
sarb
jno
sub
jecxz
sbb
mov
jne
sbb
dec
jl
cmp
hlt
xor
push
sub
push
jmp
add
jp
mov
push
lcall
cmp
cmp
add
add
loopne
add
incl
add
add
and
test
dec
outsb
mov
stos
add
test
inc
ds
xor
nop
lods
dec
mov
insb
data16
out
cmp
push
lea
mov
sbb
testl
or
and
mov
popf
xchg
pushf
jmp
aad
sbb
or
cmp
scas
pushf
negb
mov
js
sub
dec
xlat
and
stc
sbb
sub
fs
pop
ret
pop
add
add
loopne
add
add
add
sub
or
insl
loop
setl
cmp
rclb
lret
sbb
and
mov
mov
push
lods
ljmp
adc
pop
cli
shrb
inc
je
imul
testb
sti
xchg
mov
push
mov
xchg
sub
inc
add
add
loopne
add
incl
add
add
mov
push
dec
rorl
stos
fwait
aad
loope
mov
jno
inc
sar
outsl
cmp
fs
sbbb
sbb
adc
inc
mov
pmaxsw
xor
and
and
push
fmulp
jo
popa
add
add
loopne
add
decl
xlat
dec
jp
gs
sub
push
shrl
aam
and
pop
mov
in
push
or
or
mov
cltd
push
mov
insb
push
lret
cmp
ret
sahf
int3
adc
aaa
aad
pop
popf
lcall
outsb
pop
out
test
jno
adc
inc
sahf
jl
jle
sub
mov
xchg
mov
xchg
jge
sub
adc
cmp
push
icebp
pop
pusha
ja
sahf
repnz
mov
jmp
test
dec
jne
pop
andl
and
push
push
pop
mov
add
test
push
bound
call
jnp
mov
cmpsb
sub
out
cld
xlat
pop
cmp
data16
push
gs
pop
xchg
inc
out
push
rcll
insb
mov
rclb
push
in
in
sbb
ficomps
inc
and
das
loope
loopne
es
add
call
lret
insl
arpl
and
movsb
rcr
mov
pushf
int
stos
enter
mov
mov
insb
insl
xchg
mov
xor
test
add
adc
mov
das
mov
clc
mov
inc
sub
jp
or
mov
sbb
xchg
mov
sub
xchg
xchg
push
add
loopne
add
incl
cmp
cmpsl
cli
inc
cmp
cmpsl
push
out
mov
arpl
mov
add
scas
pop
lods
jp
jle
or
sti
or
cmp
cmp
nop
out
int3
adc
aam
cli
imul
enter
out
iret
lahf
adc
gs
jl
outsl
test
cmp
jnp
mov
xchg
adc
dec
push
fnstenv
adc
dec
ss
xchg
sarl
mov
jl
les
mov
cld
xchg
aas
mov
push
sbb
nop
repz
mov
cmc
pushl
testb
xchg
mov
inc
out
mov
add
lcall
jae
call
dec
cltd
dec
addb
pop
xchg
jnp
push
into
mov
bound
or
adc
es
and
std
xchg
lock
outsb
inc
outsb
adc
insb
add
cwtl
leave
sahf
sbb
or
or
hlt
mov
mov
mov
dec
inc
sbb
mov
sub
loope
scas
pop
push
jbe
decl
cld
mov
dec
daa
aam
cmc
xchg
aaa
out
shll
dec
ljmp
stc
mov
cmp
aad
push
or
push
pusha
loop
insl
dec
mov
pop
mov
stc
or
mov
aad
mov
mov
xor
mov
pop
jae
xchg
cli
xor
mov
fstpl
movsl
jne
add
pop
mov
xor
test
jo
xorl
fsts
js
enter
scas
cmpsl
dec
xor
push
xor
mov
and
sbb
sti
mov
jge
in
js
call
mov
xchg
hlt
jo
pusha
loope
rcrb
push
add
lods
cmpsl
cmp
lret
jge
adc
push
fsub
dec
addr16
pop
mov
mov
repz
inc
cld
test
test
dec
xlat
je
movsl
inc
movsb
mov
fs
push
sbb
cmp
fcomps
xor
fprem
cmp
push
imul
js
out
je
xchg
mov
out
popf
xchg
dec
ljmp
arpl
lret
fmul
popa
imul
push
fstpt
out
je
hlt
push
dec
push
mov
arpl
xchg
jns
and
mov
sub
mov
mov
adc
or
push
clc
dec
sarl
inc
or
push
aam
mov
into
outsl
cmpsl
mov
fcoms
cmp
sbb
add
sahf
imul
cmpsl
pusha
test
sub
inc
mov
mov
cmc
push
pop
roll
mov
or
add
lcall
jae
imul
insb
xor
jbe
mov
add
push
add
fistpll
xchg
push
xchg
add
add
loopne
add
incl
outsb
sbb
lods
loope
cli
dec
lahf
fisubrs
xchg
dec
cmp
pop
jbe
sub
inc
xor
push
rorb
dec
filds
std
jae
std
faddl
orl
insl
xchg
fcomip
and
mov
mov
push
loop
leave
stos
mov
jb
adc
cmp
cli
enter
push
scas
idivb
pop
inc
mov
mov
add
in
or
shr
clc
adc
loop
inc
jmp
mov
jns
xchg
lock
clc
pop
or
inc
sub
sbb
push
inc
sub
sarb
sub
mov
je
push
test
mov
pop
cmc
jmp
ds
cltd
orl
inc
lret
lods
aam
cmpsl
out
push
popf
movb
mov
scas
add
push
jb
fdivr
xchg
ss
je
aas
ljmp
jecxz
inc
mov
cwtl
mov
sub
test
movsb
cli
cmc
xchg
lds
mov
dec
xchg
and
test
cmpsl
insb
mov
icebp
xor
rcll
lret
mov
jp
sahf
fstp
popf
xorl
in
dec
loop
inc
lods
scas
cmp
and
or
pushf
mov
jbe
fists
mov
sarl
ret
imul
fcomp
sti
xor
aad
inc
stos
push
xlat
into
or
daa
cvtdq2ps
sbb
dec
adc
insb
push
inc
add
add
add
loopne
add
incl
add
add
cli
es
call
and
mov
push
sbb
loop
fldt
lahf
imul
xchg
pop
jge
lods
xor
js
sarl
les
push
xchg
aad
add
and
xchg
mov
cmp
stc
mov
repz
lcall
ja
lods
insb
push
out
add
mov
fs
push
out
add
aad
xor
mov
adc
inc
sub
xorps
jbe
das
lods
adc
sbb
fdiv
push
in
inc
adc
adc
jle
pusha
jno
mov
jne
aas
scas
std
mov
jno
lock
mov
call
stos
mov
call
stos
mov
call
stos
mov
call
stos
mov
call
stos
mov
call
movb
add
