out
jl
and
rolb
add
das
cmp
loopne
movsb
aam
mov
xchg
lcall
cmpps
inc
mov
push
daa
push
xor
sbb
in
inc
ss
or
xchg
sbb
mul
inc
and
int3
jb
jmp
dec
sbb
jb
out
xor
jmp
scas
push
xor
sti
enter
push
push
iret
idivl
sub
jbe
xchg
or
or
add
jbe
icebp
out
lcall
int3
mov
scas
cvtpi2ps
adc
idivl
divl
pop
addb
add
pop
dec
aad
mov
sti
out
es
jmp
lahf
xchg
lret
xchg
sbb
and
rcr
das
push
xor
adc
daa
je
inc
xor
stc
sbb
int
fists
loop
jle
ss
xor
xor
fistpll
nop
mov
jmp
mov
aam
cmc
adc
mov
repnz
popl
sbb
lds
fcmovbe
lret
push
add
push
xor
insl
dec
aam
or
jno
xor
and
mov
xor
stc
jge
ljmp
movsl
loopne
cld
mov
sbb
sbb
into
std
and
push
call
or
xor
rcrb
cs
cs
das
out
add
lods
sarb
push
jbe
es
imul
inc
cmp
sti
call
xchg
mov
div
clc
shlb
aaa
ljmp
sub
inc
mov
push
aaa
mov
and
sbb
jle
int3
mov
fadds
jns
fisubrl
mov
mov
fcompl
sub
inc
cmp
outsb
push
imulb
add
xchg
cmpsb
nop
xchg
aaa
sbb
sbb
push
pop
inc
les
leave
scas
cmp
pop
adcl
hlt
mov
popf
mov
sub
jo
jne
sub
push
scas
in
jo
mov
xchg
cwtl
xchg
push
aas
addr16
aaa
push
xor
jge
cmpsb
mov
stos
xor
les
adc
mov
lcall
int
dec
and
in
imul
test
xchg
loop
cs
mov
fmulp
popa
push
in
xor
icebp
xchg
stos
xchg
sahf
adc
data16
pusha
mov
stos
mov
mov
and
pusha
lods
fmul
sbb
and
sti
cmpsl
xchg
adc
xlat
dec
mov
mov
xchg
stos
mov
in
addr16
inc
nop
xlat
mov
inc
cmpsl
scas
dec
jb
adc
cmp
insl
cmpsb
inc
loopne
xchg
scas
sbb
jmp
ss
inc
hlt
addr16
loope
pop
loope
xchg
push
xchg
xor
sub
mov
xchg
test
inc
je
inc
push
loope
mov
mov
inc
outsl
mov
add
hlt
jmp
mov
mov
mov
xchg
mov
adcb
adc
sti
sub
lock
mov
sub
xlat
pop
outsb
xorb
std
add
repz
mov
fstps
mov
sbb
andl
sub
test
fldt
sbb
sub
pop
scas
cmovnp
fwait
aaa
jmp
jb
data16
inc
addb
and
outsb
pop
cmp
add
out
dec
gs
adc
in
push
movsb
pop
pop
and
jo
push
fisubs
mov
das
fdivl
sub
stc
push
nop
xor
xchg
loope
xchg
out
pushf
popa
jmp
cmc
imul
add
cld
adc
dec
xor
ds
arpl
enter
ss
leave
or
test
or
stos
mov
in
fucom
add
les
adc
cmp
shll
ret
push
sbb
in
push
mov
sub
and
lea
push
adc
pop
andb
mov
xor
ret
xchg
sub
adc
xlat
adc
movsb
jmp
movsb
adc
movsb
pop
mov
cmp
cli
xlat
mov
daa
int3
cltd
pusha
mov
push
mov
and
mov
push
dec
jne
adc
inc
pop
daa
orb
popf
adc
arpl
iret
lcall
jle
aaa
arpl
xor
add
pop
lret
scas
ret
adc
or
push
push
into
ja
mov
and
jl
xchg
mov
mov
jmp
es
cmc
push
cld
pop
pusha
or
jp
jge
not
not
cld
test
nop
clc
lea
push
add
or
stc
push
sub
pop
push
add
pop
mov
push
dec
pop
add
push
push
pop
pop
push
push
jno
and
pop
pop
clc
cld
cmc
call
push
jb
push
push
and
pop
pop
pop
stc
mov
nop
stc
mov
inc
inc
inc
inc
jno
push
jge
rol
pop
not
not
jo
push
or
pop
clc
clc
push
add
mov
pop
cmp
cld
lea
cmp
sub
push
add
push
pop
pop
jmp
mov
mov
lret
mov
push
sbb
and
out
or
loope
and
mov
bound
cmp
call
pop
testl
jne
jmp
shl
or
lea
push
push
sar
pop
pop
add
push
or
pop
clc
push
add
pop
push
jo
push
shl
pop
pop
push
rol
pop
push
add
cld
cmc
xor
push
and
pop
jb
jno
push
or
pop
nop
push
xchg
pop
push
pop
xchg
pop
push
call
jp
sub
fcomp
or
mov
mov
sbb
push
push
pop
jmp
lds
add
sbb
rol
mov
pop
add
jge
push
jb
add
pop
push
push
mov
pop
pop
shl
and
cld
dec
jne
cld
push
add
pop
push
mov
pop
test
inc
dec
rol
jmp
int
pop
js
sub
xor
add
push
and
add
fsubl
scas
jns
cmpsb
loopne
mov
xor
cmp
icebp
cli
aad
icebp
jmp
or
mov
loop
jecxz
or
out
xor
jge
mov
pop
mov
pop
aad
sbb
imul
mov
cmc
mov
adc
scas
push
mov
testb
hlt
js
cwtl
push
xchg
jo
fdivs
push
sti
add
fucomip
adc
int
adc
clc
into
add
inc
push
push
aaa
xchg
adc
inc
jmp
ret
cltd
outsb
gs
cmp
cmpsb
shr
and
or
xchg
inc
jb
sub
test
or
in
nop
mov
xchg
jb
xchg
cmpsl
rorl
mov
mov
pop
jae
and
jo
getsec
int
xchg
mov
jo
sarb
in
mov
mov
jbe
dec
and
pop
pmaxsw
jge
jg
clc
sbb
jecxz
sti
inc
push
sbb
cmp
mov
fwait
in
ss
in
loope
xchg
cmp
xor
fisubrl
sub
bound
fcoml
fsts
ss
fldcw
sub
fnsave
push
jnp
pop
push
gs
pop
inc
mov
xchg
cmpsl
xchg
scas
add
jbe
xlat
push
ss
and
popf
lock
sbb
inc
cmp
ljmp
dec
in
aad
and
jno
jg
adcl
cmpsb
sar
cmp
jmp
pushf
xchg
ss
jmp
pop
das
mov
shll
icebp
push
repz
mov
xchg
shl
cltd
mov
mulb
xchg
xchg
outsl
mov
push
lods
es
mov
push
andb
push
aaa
and
mov
push
cmpsb
cmp
lahf
mov
andb
scas
adc
mov
mov
and
lcall
and
lret
lea
adc
xchg
cmp
loop
adc
mov
mov
and
and
push
sub
fwait
rcl
stos
sbb
bound
lods
cmp
scas
or
lcall
and
push
jmp
fisubrl
cmp
popa
lea
sbb
push
sbb
and
aas
pop
mov
add
mov
in
loope
or
bound
shl
flds
push
push
and
cli
adc
mov
jp
fidivrl
sub
add
mov
sbb
and
pop
xchg
lret
mov
dec
out
pop
mov
fidivl
call
add
mov
lcall
push
xlat
mov
inc
inc
and
je
sbb
nop
sub
test
add
lods
and
or
test
push
sbb
mov
cltd
mov
push
sbb
jp
and
jp
pop
andl
sub
xor
and
pusha
es
xchg
or
lcall
and
mov
push
push
fisubl
adc
mov
mov
daa
lcall
mul
adcl
ficoml
inc
sbb
lcall
and
jo
pop
nop
adc
bound
mov
lcall
fsubl
mov
adc
mov
and
lahf
xchg
or
mov
and
sub
sbb
xor
bound
je
pop
mov
jo
mov
mov
lcall
movsl
xchg
adc
lahf
mov
loop
adc
lcall
cmp
mov
inc
mov
cwtl
jo
fiaddl
xor
pop
xchg
xchg
adc
mov
sbbl
loop
and
mov
hlt
fsts
mov
cmc
loope
sub
lcall
out
je
bound
lock
pop
stos
mov
adc
xchg
xchg
inc
sbb
adc
popa
movsb
andb
mov
sub
cmpsb
sub
lcall
and
mov
adc
xchg
pop
fisubl
jp
popa
mov
add
pushf
cli
sub
adc
and
adc
pop
lods
outsb
fstl
jl
mov
and
pop
adc
shlb
sarb
addb
loop
pop
xor
ficoml
pop
lahf
pop
pop
and
inc
adc
mov
or
jns
mov
sub
jmp
sub
out
inc
gs
mov
sbb
xchg
aas
cmp
movsb
and
dec
insl
sbb
lret
movsl
loopne
pop
loopne
mov
es
es
adc
loopne
xor
or
pusha
push
add
cltd
or
sub
sub
shlb
pop
leave
jbe
pusha
call
xchg
test
pop
loope
cmp
push
lahf
out
push
adc
sub
pop
aaa
adc
lret
mov
mov
push
and
adc
lahf
pop
ret
out
dec
lahf
cmp
aam
sub
push
add
pusha
and
add
sbb
mov
out
mov
cmp
mov
xlat
pushf
push
movsl
sbb
fidivrl
mov
cmp
pushf
loope
sbb
xor
cmp
add
and
es
push
test
cwtl
pop
pop
dec
mov
ficomps
out
shrl
sub
xchg
stc
rclb
inc
mov
aam
pop
divb
push
inc
data16
mov
add
aad
pop
xchg
xor
aam
lcall
xchg
pop
sbb
lea
sbb
pop
xor
sub
cmp
and
jns
mov
in
sbb
aam
or
scas
mov
dec
jmp
push
loopne
mov
cmp
outsl
fsub
movb
int
mov
jmp
lock
add
sbb
movsb
ljmp
adc
call
insl
adc
inc
jmp
push
lcall
fstpl
add
ret
adc
sub
push
adc
fdivrl
js
aam
shr
loop
out
add
pop
cmpsl
pop
das
rcr
jp
lcall
in
ficoml
test
test
fsub
jns
fs
xor
sbb
fadd
popf
add
pop
sbbb
pop
rolb
sub
loopne
rcll
xchg
dec
dec
js
fisttpll
push
das
pop
mov
cmp
bts
dec
stc
bound
pop
or
jnp
std
mov
add
int3
jl
call
dec
or
adc
jg
rcll
rcrb
jmp
leave
fdivrs
je
xor
jbe
mov
call
pushf
jae
jg
pop
push
shrl
aad
frstor
fildll
jecxz
lds
outsb
pop
fisubrs
pop
shl
push
repz
in
pop
fisubs
outsb
pusha
mov
sub
test
xchg
scas
mov
in
push
jno
jbe
pop
xchg
push
inc
inc
jnp
xchg
mov
aas
cmp
sarl
icebp
testl
in
stos
loop
dec
pop
lods
enter
js
dec
and
iret
pop
call
jl
mov
adc
cwtl
hlt
fisubs
mov
cmp
mov
pop
and
es
iret
test
dec
and
cmpsb
mov
js
pop
or
rorl
add
mov
lret
jge
sarb
xchg
and
shl
push
mov
out
push
xor
push
cmpsb
movsb
inc
sbb
popf
mov
test
jecxz
jo
mov
xor
shl
aaa
test
fmuls
and
jl
sub
and
out
dec
jmp
rcrl
in
xor
jle
loopne
into
adc
jnp
lods
nop
cwtl
mov
add
pop
arpl
pop
xchg
clc
and
nop
or
xchg
mov
out
pop
repz
ret
cmp
jle
mov
pushf
jp
fadds
jecxz
mov
jbe
popa
dec
mov
aad
loopne
mov
dec
fsubp
and
jle
mov
xor
lea
pushf
xchg
xchg
pop
jae
js
cmpsb
push
test
shll
mov
subl
sub
loope
adc
loopne
lds
shll
fbstp
sbb
xor
adc
call
stc
insl
sbb
movsb
sub
mov
lret
mov
stos
arpl
aam
pop
mov
test
mov
rolb
aad
xchg
xchg
ljmp
out
mov
and
pop
xor
sub
incl
jge
scas
scas
les
xchg
es
pop
jl
daa
iret
sarb
call
cmpsl
lea
dec
roll
sub
or
fiaddl
in
adc
xchg
dec
and
lcall
xchg
inc
xchg
scas
imul
rorl
loop
push
out
pushf
dec
int
pop
mov
dec
les
or
shl
nop
add
in
ja
sbb
push
test
out
out
cmc
cmp
inc
subl
mov
add
stos
adc
sbb
fdivs
fldt
decl
es
fstps
dec
add
popw
jbe
pop
mov
sbb
mov
rorb
adc
push
mov
xor
mov
stos
push
aaa
pop
adcb
push
clc
xor
mov
add
test
out
mov
xor
fwait
insb
mov
orl
sub
jmp
mov
mov
push
sbb
ljmp
fdivr
fsubr
std
jmp
push
clc
add
mov
clc
and
outsb
or
cmc
in
add
mov
add
mov
xchg
jle
imul
aad
fisubs
scas
dec
push
xchg
loopne
mov
enter
movsl
int3
in
imul
subl
insb
les
and
mov
fs
adc
js
insb
cli
sbb
popf
add
pop
mov
stos
insb
lret
cmp
lcall
lock
pop
ds
iret
ret
cmpsl
add
sbb
cmp
inc
mov
jbe
aam
sbbb
nop
subps
adc
test
lea
inc
subb
pop
ds
cmpsb
mov
mov
call
jmp
mov
cmpsb
jmp
insb
or
push
dec
enter
aas
fldl
lods
int3
stos
je
aam
mov
xchg
mov
add
mov
or
test
jmp
or
mov
mov
inc
jge
inc
xlat
hlt
xor
mov
adc
movsb
nop
aas
mov
xor
sub
pop
insb
mov
andb
test
add
jp
add
sbb
pop
adc
pop
ss
pop
int3
clc
mov
xchg
cli
adc
iret
rcrl
adc
xchg
cli
fwait
stc
sbb
adc
insb
xlat
adcb
and
mov
data16
aaa
in
out
jp
xor
jp
cmpsl
push
xor
in
xchg
mov
mov
lret
push
rcrb
adcl
push
mov
insb
shrb
cmp
pop
jmp
and
test
jl
sti
inc
nop
sbb
add
jl
mov
adc
imul
xchg
ds
test
ret
cmp
jo
nop
xchg
mov
add
xchg
insb
fstps
fsubr
cmpsl
mov
cwtl
cltd
test
std
fcmovnu
pop
mov
mov
adc
loope
push
mov
mov
mov
jl
fisubrs
mov
xlat
imul
dec
jno
jnp
std
pop
int
std
cli
mov
xchg
addr16
int
imul
out
loope
loop
sbb
out
jle
ds
aam
push
or
or
pop
pop
into
cmp
notb
lds
ljmp
jne
xor
test
and
icebp
push
std
pop
push
or
rorl
mov
bound
insb
pusha
pop
insl
sti
rcr
insb
rcll
or
pop
jmp
push
dec
mov
jbe
cli
mov
and
or
push
lea
sbb
icebp
stos
sub
aam
and
cmp
aam
pop
ss
adc
call
push
pushf
adc
mov
adcb
fnsave
pop
pop
jl
mov
mov
rorb
xchg
sbbl
shrl
jns
jg
add
mov
pop
pop
into
push
out
shrl
loopne
mov
push
popl
test
dec
out
fnstcw
das
lock
cmp
dec
std
fs
inc
or
sar
addr16
inc
test
adc
lahf
mov
mov
loopne
cmp
loope
outsb
popl
stc
sbbl
sti
adc
aas
xchg
ljmp
outsl
mov
rcll
insb
sub
jo
cli
stos
push
pop
xor
inc
inc
xor
add
push
lahf
out
jp
cmp
arpl
call
push
sahf
add
pop
flds
std
test
scas
sub
inc
movsb
arpl
cmp
roll
sbb
into
xor
aas
mov
xor
psubsw
mov
lea
xor
add
push
xor
outsl
dec
push
adc
insl
rcr
sahf
pop
rcr
mov
sub
push
in
cmpsb
jnp
xchg
loopne
out
test
jmp
test
loope
ficoms
push
inc
dec
push
lret
hlt
roll
mov
mov
mov
popf
ficoml
data16
xchg
insl
in
mov
mov
fildl
movsl
fs
test
jns
mov
xor
jno
inc
ret
cmp
and
fwait
repnz
inc
icebp
jne
fucomip
mov
shrl
jg
or
cmpsl
das
icebp
test
sbb
fmulp
jg
sub
xchg
je
mov
or
jbe
aas
or
movsb
xchg
add
inc
jnp
mov
fucomp
sahf
fisttpl
stc
imul
push
clc
pop
lods
in
adc
rclb
sub
orb
in
sub
call
in
pop
out
mov
dec
stos
jae
out
cmp
and
add
lret
cwtl
inc
adc
cwtl
je
inc
or
push
jae
push
or
loopne
push
into
mov
adc
movsb
popa
adc
push
cwtl
fcoml
popa
cmpl
and
dec
dec
xchg
xorl
stc
cmp
fisttps
lahf
push
dec
mov
js
pop
andb
lock
sbb
add
lods
into
push
loope
sbb
mov
mov
aam
cld
sub
jmp
add
in
xlat
sub
mov
jno
mov
pop
cli
gs
popf
je
jg
pop
pop
in
repnz
ss
lret
in
mov
xor
or
add
jae
add
pop
testb
test
lret
add
addr16
daa
mov
call
add
cli
stc
aam
enter
lcall
push
popf
repz
cmc
shrb
cwtl
ja
icebp
out
jb
dec
mov
sbb
or
pop
ficoms
xchg
ficoml
add
mov
pop
lea
addr16
movsl
push
cmp
jecxz
iret
or
inc
stc
mov
mov
xchg
notl
mov
jbe
inc
add
pop
cmpb
gs
pop
and
cs
sbb
pop
jg
dec
test
inc
mov
push
mov
scas
adcb
stos
push
testb
cwtl
xchg
gs
mov
inc
sbb
jbe
aad
and
and
ja
pop
sbbb
cmp
sbb
and
fs
pop
fs
mov
mov
testb
sub
pop
xchg
add
addb
mov
aas
in
lcall
inc
out
and
mov
je
mov
push
mov
push
insl
aas
mov
scas
pop
scas
push
sbb
into
out
xchg
or
jp
pop
sbb
adc
push
mov
cmc
add
mov
psadbw
loopne
sub
jno
mov
xor
xchg
sbb
dec
mov
les
insb
nop
xor
push
mov
and
enter
mov
repnz
and
mov
fucom
adc
xor
fwait
sbb
into
rcr
mov
sbb
test
pushf
push
fidivs
push
mov
mov
mov
fcmovne
and
mov
jge
rorb
ret
jl
addl
fldcw
lea
xchg
mov
push
inc
dec
lret
adc
jge
xor
popf
imul
repnz
rcr
pop
lahf
movsl
or
sbb
adc
and
not
inc
push
pop
hlt
sub
leave
pop
mov
push
mov
mov
mov
xor
cmc
out
sub
inc
jmp
pop
addr16
and
inc
enter
bound
ret
mov
testl
jl
cmc
push
and
jne
sbb
jmp
xor
test
inc
push
rol
xchg
pop
and
dec
mov
pop
add
pop
cli
add
clc
adc
fisubs
inc
push
push
lret
jmp
pop
nop
inc
in
jmp
out
fdivrp
mov
pop
nop
and
repz
mov
pushf
nop
lret
jbe
sahf
mov
imul
or
ja
loop
loopne
clc
add
pop
push
pop
movsb
push
push
mov
ds
into
xchg
dec
mov
rcrb
xor
fsubrl
inc
mov
add
push
mov
mov
addr16
jmp
sub
ja
shll
cmp
aaa
cs
imul
movsb
lock
lea
push
leave
test
sub
je
mov
mov
and
adc
mov
aam
rcrb
les
jge
mov
and
jo
xchg
test
adc
pop
or
incl
ret
das
cmc
mov
insb
leave
push
fidivs
adc
sbb
jg
xchg
mov
push
bound
sbb
icebp
outsb
dec
mov
cmp
pop
cmpb
cltd
xchg
daa
jnp,pn
insl
cwtl
cmpsl
out
or
push
dec
sub
lds
cld
xchg
inc
jne
fdiv
mov
and
ljmp
mov
xchg
test
lcall
push
hlt
sub
ds
jns
dec
stc
repz
repnz
push
shlb
subb
outsb
and
dec
dec
test
and
popf
aad
or
rorl
push
xchg
outsl
pop
push
and
or
pop
add
add
out
sbb
pop
ds
aad
and
out
or
mov
or
jp
lahf
stos
imul
xchg
outsl
aad
dec
push
mov
and
lds
mov
les
movsl
mov
xchg
or
push
mov
add
repz
aad
test
sub
lock
jl
xor
mov
push
cmpsb
out
insl
fimuls
movsl
or
mov
popf
dec
jp
shrl
cwtl
ljmp
movsb
mov
sub
aad
lret
pop
xchg
push
jmp
dec
pop
mov
mov
push
cmp
shl
mov
stc
fcomps
mov
mov
ja
dec
rorl
test
ja
mov
les
in
inc
les
or
adc
mov
icebp
jecxz
mov
ret
fisubrs
gs
enter
gs
in
mov
push
and
xor
pop
push
lret
pop
mov
insb
dec
sbb
cltd
test
push
out
sub
mov
cmp
movsl
leave
cmp
add
dec
clc
inc
mov
fs
mov
fcmove
inc
shrl
dec
push
adc
mov
mov
pop
ret
in
fisttpl
ljmp
js
sbbb
jmp
push
rcr
lahf
jb
test
bound
mov
push
push
pop
hlt
scas
mov
sub
popa
push
jbe
cmp
or
sbb
lcall
fsubl
leave
mov
adc
test
aad
mov
and
or
sub
sub
push
jl
and
js
enter
xchg
nop
xor
xor
scas
or
sbb
leave
imul
dec
pop
shl
rcrb
add
or
inc
mov
iret
jno
les
rol
or
sbb
dec
cltd
pop
dec
pop
or
or
fisubrl
adcl
adc
jno
xchg
or
setno
test
sti
rorb
push
aas
sub
imul
out
sti
sub
cs
jae
lea
and
loopne
rcrl
sbb
icebp
repz
fdivrl
fs
fsubl
add
xchg
push
stc
js
adc
hlt
inc
mov
pop
jne
mov
mov
shrb
adc
andb
scas
mov
xchg
out
rcrb
loope
pop
jmp
pushf
adc
cmp
push
in
pop
and
adc
lock
scas
jo
jecxz
stos
popf
rcrb
cmpsl
push
adc
xor
shrl
xchg
out
sbb
mov
addr16
adcl
shr
outsl
mov
jnp
in
scas
cmp
hlt
dec
loop
mov
ljmp
ror
xlat
popa
rcrb
push
lds
pop
xchg
xchg
arpl
enter
mov
sbb
inc
lods
repz
cmp
push
stos
into
jecxz
cmc
repz
fistl
ret
aaa
or
outsb
xchg
mov
das
scas
in
icebp
fdivs
andb
push
xchg
inc
pop
sti
clc
fwait
es
cltd
test
pusha
push
xor
xor
sbb
fistps
xchg
inc
push
mov
fiaddl
sub
enter
daa
or
jmp
adc
negb
into
into
push
popf
sbb
test
fmulp
sbb
jle
sub
mov
inc
neg
inc
adc
lds
ret
lret
nop
cwtl
mov
mov
iret
push
fisubs
arpl
call
outsl
push
stos
xor
sub
xlat
sub
arpl
repnz
xchg
hlt
incb
mov
bound
jno
and
xor
push
cmp
inc
bound
mov
jge
stos
inc
cmp
pop
or
fldcw
int
fldl2e
xorb
inc
shll
push
xor
popf
lods
pop
test
gs
mov
clc
cli
push
mov
push
pushaw
cmp
stos
dec
xchg
in
or
jb
push
fsqrt
arpl
xchg
std
nop
test
adc
stos
jo
inc
cs
push
mov
insl
lcall
scas
mov
mov
mov
mov
nop
adc
cld
out
fisubrs
popf
mov
inc
sarb
mov
ja
pop
and
mov
lock
fisubs
pop
add
adc
cmp
pop
enter
lret
movsb
sub
push
test
sub
xchg
inc
sarl
xchg
mov
dec
sbb
cmp
pop
mov
add
sahf
sbb
and
sub
je
xchg
jl
pop
pop
icebp
pop
lods
sub
lock
sbb
inc
in
fs
jmp
les
stos
cltd
sbb
out
and
mov
jp
cli
loope
mov
and
es
mov
stos
lods
pop
push
mov
and
movsb
pop
pop
push
das
jl
inc
xchg
subb
and
dec
dec
lock
cmp
addb
push
mov
push
cmpb
stc
les
mov
mov
mov
shl
sbb
cmpsb
lods
fadds
loopne
adc
outsb
mov
loop
inc
ja
dec
pop
mov
adc
cmp
dec
push
mov
xchg
sbb
mov
push
test
es
loopne
push
jmp
test
push
cwtl
mov
scas
sbb
repz
cmp
stos
movsl
cmp
mov
bound
add
enter
mov
xchg
sbb
push
push
mov
cmp
adc
nop
xor
lea
ret
orl
cmp
dec
sbb
cmp
lods
mov
xor
xchg
lea
fs
xchg
imul
call
test
lea
cld
test
fiadds
repnz
bnd
pusha
pushf
enter
das
gs
testl
insb
cmp
mov
mov
iret
sbb
daa
and
mov
insb
rcll
loop
cs
push
cwtl
in
mov
mov
xor
insb
lds
jg
js
in
test
rolb
scas
hlt
pop
outsb
cltd
cmc
in
lret
dec
lods
cltd
sbb
add
mov
xor
icebp
stc
scas
mov
cmovle
jle
inc
out
test
je
xchg
mov
cmp
int3
push
adc
xor
mov
ljmp
sub
mov
add
mov
and
pop
jge
cltd
adc
popf
mov
call
inc
scas
xchg
dec
push
stc
xchg
jmp
scas
nopl
leave
xchg
jnp
cmp
movsb
scas
lds
add
mov
les
mov
inc
les
adc
mov
pop
popl
sti
push
mov
nop
test
pop
rcrl
call
cmc
rcrb
pop
mov
hlt
push
mov
xchg
clc
in
xchg
je
movsl
nop
push
in
xchg
int
fcomi
push
jbe
pop
ja
pop
dec
jno
shr
filds
push
lahf
stc
je
aas
mov
cwtl
adc
mov
fcoml
and
out
outsl
cmp
sub
js
sahf
je
sub
mov
mov
insb
mov
sahf
dec
dec
xchg
popa
add
mov
sbb
or
es
bnd
sbb
push
stos
repz
fildl
rcll
stos
test
loope
sbb
fldl2e
cld
addl
xor
fdivp
gs
sub
into
mov
sbb
fmuls
js
aad
sbb
dec
and
jbe
out
lock
xchg
imul
jns
cmp
sub
mov
std
xor
push
icebp
cmp
daa
lret
push
repnz
xchg
mov
cmp
aas
xchg
icebp
repnz
add
adc
mov
cmp
push
mov
sbb
adc
dec
xchg
cld
aad
ljmp
dec
mov
idivb
dec
jmp
push
adcb
cmp
jp
test
dec
in
rolb
ss
arpl
lea
hlt
test
popa
push
and
inc
test
pop
stos
fneni(8087
mov
call
inc
imul
outsb
daa
adc
mov
shlb
scas
push
pop
jb
or
sar
push
jnp
jecxz
and
or
ja
add
test
ljmp
and
inc
and
cmp
inc
popa
fsubl
xchg
pop
sar
adc
mov
push
notb
xor
hlt
mov
repz
mov
sti
sbbb
arpl
std
clc
mov
fldenv
pop
arpl
adc
data16
push
push
mov
mov
and
jne
xchg
sbb
or
fstpl
cltd
mov
lock
popa
mov
in
pop
sub
mov
push
ljmp
sbb
dec
int3
into
xchg
insl
mov
std
mov
jecxz
imul
mov
ds
scas
push
cmpsl
in
lock
testb
cs
inc
cwtl
lods
adc
mov
lock
loope
rolb
in
nop
das
pop
add
int3
xchg
mov
ret
popf
push
push
sub
iret
xchg
xchg
out
xchg
subb
fs
shrb
mov
xchg
push
inc
add
loop
mov
lret
into
fiaddl
f2xm1
int3
mov
mov
aam
and
lahf
cs
and
fwait
xchg
and
iret
dec
ror
mov
mov
lock
dec
outsb
sbb
cmpsb
jo
imull
fsubr
mov
inc
adc
jnp
mov
daa
int3
popa
cmp
rclb
dec
xchg
mov
cmp
xlat
xor
outsb
and
enter
addr16
scas
sti
push
add
stc
xchg
jl
xor
push
push
fcomps
or
lds
stos
push
in
pusha
stos
mov
mov
pop
outsb
sub
subl
test
mov
dec
and
cmp
mov
xor
sub
adc
jle
xchg
pop
test
jns
xor
push
mov
sub
loope
das
sbb
aas
mov
and
loopne
jno
push
dec
adc
xchg
mov
shll
leave
dec
into
cmc
sub
fnstcw
idiv
xchg
clc
xchg
js
mov
mov
xchg
pop
lods
jb
stos
movb
xor
movsl
lret
fwait
mov
push
lahf
les
mov
int
xor
inc
cs
cmpsb
dec
in
mov
imull
icebp
jae
icebp
and
push
std
sbb
inc
aad
push
je
aam
or
sbb
icebp
ss
jns
fwait
shlb
out
mov
scas
mov
xor
imul
adc
push
dec
cmpxchg
ret
ljmp
hlt
loop
push
inc
pop
mov
push
jg
add
mov
fmuls
pop
mov
les
sub
sbb
cmp
mov
loopne
cld
popf
jnp
jle
lock
lahf
add
sbb
mov
daa
ja
repnz
cmp
in
pushf
jno
adc
adc
sbb
addl
add
mov
cs
inc
call
clc
pop
loop
pop
cmpsl
xchg
shll
aam
mov
push
lcall
fimuls
xchg
imul
mul
pop
ss
mov
push
rcrb
iret
addl
iret
push
sbb
xchg
dec
sbbl
fldenv
add
lods
mov
pop
mov
cmpsb
jge
loop
mov
inc
iret
xchg
xlat
sbb
btr
jl
stos
cmp
pusha
cmp
in
inc
outsl
adc
popf
push
adc
movsb
lcall
outsb
imul
sti
sub
mov
mov
xchg
aam
cltd
add
dec
fs
enter
test
into
mov
dec
push
aam
repz
fmull
jnp
push
es
jb
jbe
mov
mov
lcall
ja
push
push
in
int
cld
call
sub
pop
and
adcl
cld
mov
xchg
jge
mov
adc
cmpsb
xchg
icebp
xchg
not
fstl
sbb
insl
test
repz
icebp
out
clc
jae
mov
stos
pop
dec
leave
pop
hlt
mov
cmp
jo
dec
ss
outsb
mov
mov
mov
repz
test
lret
cltd
loope,pt
pop
push
xchg
daa
cmp
mov
sbb
or
jmp
adc
sbb
inc
flds
add
or
outsb
or
test
and
mov
test
mov
push
adc
xchg
xor
out
nop
incb
mov
mov
cmp
in
ret
dec
enter
call
and
insl
mov
jb
inc
jo
mov
stc
and
incl
loope
imul
sbb
scas
icebp
insl
adc
pop
xchg
stos
jmp
repz
pushf
xchg
arpl
xchg
lds
add
ja
xchg
xlat
test
mov
mov
jp
xchg
mov
adc
lock
test
fwait
bound
push
xorl
andl
repz
shll
cld
ljmp
test
sbb
mov
jg
cli
out
out
add
lret
mov
inc
imul
fwait
push
fsubrl
xor
pop
ja
in
mov
nop
cmp
sbb
mov
movsl
pop
nop
fidivrs
jb
fnstsw
jbe
jl
mov
pop
mov
mov
xchg
jge
jg
insb
testl
insb
cwtl
dec
xchg
loope
icebp
ret
icebp
pop
cmp
dec
sub
xchg
into
inc
sub
jp
fistpl
scas
mov
test
gs
cmp
daa
out
push
pop
mov
int3
data16
add
mov
mov
fldenv
jge
lods
xchg
fildl
testl
or
xor
std
out
jno
jne
sti
push
mov
sbb
enter
mov
add
into
xor
inc
push
mov
mov
ror
mov
inc
inc
xor
cmp
test
and
and
sub
mov
insb
inc
test
push
mov
jb
add
mov
insl
cmp
sar
nop
xchg
aaa
mov
inc
mov
jecxz
mov
sub
pop
pop
outsb
mov
psubd
inc
and
dec
repz
scas
pop
popf
mov
shr
mov
jo
and
xchg
push
jecxz
in
fadd
ret
and
sub
scas
sbb
cli
dec
es
popf
dec
mov
rorl
adc
andb
insb
jno
cmp
push
mov
test
dec
addr16
fidivl
dec
sub
lcall
cmp
enter
xor
scas
lahf
pop
fistps
mov
add
dec
ja
shl
jp
mov
adc
mov
fsubp
lods
mov
push
mov
es
std
cmp
add
cmp
xchg
call
into
xchg
aas
sarb
sbb
call
mov
mov
cmp
sbb
arpl
std
jns
mov
lret
sti
mov
movsb
mov
insl
or
cli
lds
and
lock
jbe
inc
inc
ljmp
ljmp
mov
in
and
pushf
adc
imul
jl
aaa
adc
xchg
adc
mov
push
enter
pusha
add
xor
push
enter
cmc
lahf
cmp
fcoml
int
adcb
sub
outsl
xlat
out
pop
mov
jns
xchg
or
cli
divl
cmp
lea
cmp
shlb
int
cmp
or
push
mov
sub
clc
jne
cmc
cmc
pop
rclb
pop
in
stos
std
repz
inc
add
jl
fisubrl
push
movsl
pop
outsl
xchg
push
inc
cmpsl
xor
test
nop
hlt
mov
xchg
cs
push
in
sub
mov
add
push
movlps
xor
and
inc
scas
adc
nop
dec
xchg
popl
repz
push
jecxz
jg
push
cmpsb
or
pop
jbe
mov
xor
pop
leave
cmp
hlt
std
loop
sub
push
xchg
push
pop
dec
lcall
ds
xor
rcll
addl
mov
cmpsb
fbstp
out
rclb
mov
out
and
adc
lret
lock
decb
add
cmpsb
mov
nop
repz
jo
mov
jp
mov
mov
push
leave
push
ljmp
cmp
mov
js
and
lahf
cmpsl
jmp
jp
cli
jecxz
mov
cld
mov
loope
das
test
lret
xorb
cmp
mov
jo
fimull
fucomip
jns
andb
dec
xchg
pop
loop
inc
cli
loop
jbe
arpl
jge
xorl
mov
ja
clc
scas
jmp
mov
push
jnp
or
test
inc
push
sub
lahf
pusha
mov
push
cwtl
push
out
orb
psubw
stos
xchg
push
test
dec
lret
cmpb
cmp
pop
imul
cmp
pop
rclb
add
enter
add
mov
pop
xchg
daa
lock
sbb
out
in
outsl
mov
test
push
outsb
call
or
fiadds
or
fcom
inc
dec
stos
jae
divl
mov
dec
popa
popa
pop
adc
mov
in
add
int
dec
sbb
push
lret
push
sbb
js
es
xchg
repz
iret
jmp
enter
iret
in
mov
vmovss
jp
adc
jmp
xor
fndisi(8087
xchg
mov
scas
mov
dec
test
add
and
je
or
lods
or
pop
sbb
inc
xchg
loop
in
mov
test
pop
push
lahf
sub
icebp
xchg
fldl
dec
cmpsl
inc
loope
cmp
inc
cltd
pusha
sbb
out
arpl
or
adcb
jle
add
sbb
mov
mov
cmp
push
bound
cmovge
notb
fidivrs
or
dec
addr16
outsb
push
cmpsl
push
lds
and
xadd
add
shlb
sbb
push
ret
bound
adc
inc
dec
cmpb
ja
sbb
int
shrb
je
int
lea
sub
repz
sbbl
mov
mull
jne
or
cmp
fs
ret
enter
outsb
sti
ds
xchg
mov
fsts
cwtl
cwtl
push
sahf
mov
mov
aaa
jns
in
jg
sub
push
ret
add
push
pop
daa
cld
out
mov
adc
or
or
lea
jge
in
mov
popa
enter
mov
cmp
add
add
scas
xchg
addl
data16
and
movsb
push
dec
mov
test
cli
loop
jbe
pop
fmulp
push
pop
fildl
pop
pop
adc
mov
sti
jl
cmpb
and
mov
into
adc
aam
adc
push
stos
js
dec
jmp
jg
jg
daa
mov
ret
add
enter
cltd
test
and
test
mov
test
fwait
mov
or
outsb
mov
insb
rorl
mov
xor
test
sub
and
filds
ss
rolb
mov
arpl
dec
xchg
iret
fisubl
adc
fadds
fidivrl
lds
es
pop
push
dec
or
imul
call
jmp
sbb
add
cwtl
mov
push
inc
cld
pusha
pop
outsl
lcall
mov
dec
in
scas
imul
stos
sarb
testl
sbb
hlt
int3
sbb
lods
sbb
lret
outsb
or
jl
cmp
pop
test
push
mov
popf
mov
xchg
cmp
int
aad
add
addr16
sub
mov
mov
jno
outsb
frstor
mov
jecxz
int
shrb
inc
mov
bound
jg
out
inc
mov
cmp
and
cmp
test
inc
sbb
loope
data16
les
mov
mov
add
jae
mov
mov
shll
nop
int3
push
dec
or
test
dec
mov
call
sbb
lods
or
sbb
ja
gs
pop
jp
mov
push
mov
xlat
mov
jmp
xor
jno
jl
daa
sbb
lahf
cwtl
cmp
orb
fcoms
arpl
cmc
popf
and
xchg
rclb
insl
iret
mov
mov
jp
lods
pop
adc
jno
cltd
mov
mov
pushf
xor
in
lods
arpl
pushf
pop
lock
ds
cmp
ljmp
movsb
inc
popf
inc
adc
test
jae
dec
sbb
xor
jnp
dec
inc
daa
addb
sub
fidivrs
jmp
cmp
dec
xchg
mov
shlb
imul
ret
pop
xor
mov
loope
xchg
ds
inc
cld
mov
inc
and
in
ja
lods
pop
jae
pop
fsubs
in
lret
lds
arpl
loop
mov
sbb
mov
push
lods
ficompl
dec
stos
and
iret
or
push
stos
sarb
loopne
icebp
enter
mov
dec
mov
or
shrl
adc
push
data16
mov
mov
ljmp
into
cwtl
pushf
dec
pushf
loopne
pop
rcrb
cmc
push
mov
sahf
daa
ds
jecxz
mov
push
xlat
or
lcall
lret
stos
mov
and
jmp
out
fs
push
or
jl
testl
hlt
ret
insl
mov
push
sub
jbe
mov
xchg
mov
xor
mov
add
ss
cwtl
xchg
dec
fildll
sub
sbb
push
insl
or
adc
int
jge
jmp
push
hlt
mov
int
inc
in
jo
fcomps
xlat
les
xchg
add
and
jmp
xlat
icebp
cmp
push
jo
xlat
cmp
sub
xor
scas
aaa
mov
aas
mov
ja
and
fadd
xchg
jb
rolb
sahf
sbb
push
movsl
and
inc
aas
mov
add
sti
aad
lods
in
out
jae
or
push
jno
leave
popa
les
loopne
mov
inc
xor
xchg
adc
and
out
dec
lahf
cmp
cmpsb
stc
clc
rcr
call
push
aas
mov
sahf
mov
into
popa
adc
ljmp
pop
jb
push
jnp
mov
mov
les
test
fwait
lds
add
inc
imul
pop
stc
mov
sbb
mov
and
jns
adc
or
rolb
and
shrl
flds
adc
lods
adc
jae
or
jmp
or
out
movsb
ficoml
adc
or
fs
cmc
push
ret
icebp
mov
in
arpl
push
rorb
in
mov
jp
out
cmpsl
sub
les
call
fwait
sbb
xor
cmp
pop
es
pop
push
fmull
mov
test
add
add
mov
popf
test
cmp
lret
ja
adc
pop
aad
mov
popw
inc
cs
fsts
push
mov
lea
sarb
add
xchg
mov
insl
or
les
jecxz
aas
dec
xchg
adc
mov
xchg
push
push
fisttpll
xchg
mov
stos
dec
jecxz
push
pop
in
int
hlt
pop
xchg
outsl
movsl
aad
jmp
sbb
scas
in
mov
repnz
pusha
das
xor
shrl
mov
mov
clc
adc
adc
pop
or
stos
lret
call
stos
push
fcompl
mov
fdivr
and
inc
sbb
std
cmpsl
mov
lahf
lods
ret
sub
mov
cmp
adc
andb
cmpsb
leave
test
or
jns
and
inc
in
add
movsb
jo
int
js
mov
icebp
jl
xchg
mov
jno
sub
pop
addb
ja
push
adc
xchg
incl
jmp
test
scas
inc
inc
xor
or
lds
mov
pop
outsb
and
push
or
divb
mov
jp
mov
lock
shll
inc
subl
iret
fcmovbe
nop
je
daa
or
lds
or
dec
outsb
sub
sbb
insl
sbb
into
push
pop
and
mov
mov
je
repnz
pop
sbb
cmc
ret
pop
and
jg
xor
scas
sbb
mov
rcrb
mov
cmp
inc
out
sub
ds
lock
dec
dec
add
lea
clc
ds
cmp
iret
mov
add
pop
jge
movsl
lret
repz
pop
andb
cmp
in
sub
sub
dec
pusha
cld
out
push
call
sbb
mov
popf
pop
and
xchg
iret
mov
test
jle
and
xlat
cmp
and
aam
jb
pop
aad
or
in
cld
mov
mov
mov
ja
xor
xor
adc
enter
ret
jae
cltd
arpl
in
jno
scas
leave
mov
jle
data16
jge
mov
ds
lcall
jg
stos
mov
cmp
sub
lods
fsubrl
pushf
xlat
popf
cld
xchg
xor
xlat
mov
mov
cmp
mov
pop
jl
push
paddd
ds
mov
pop
mov
pusha
inc
aaa
out
iret
jae
push
arpl
fprem
adc
xlat
lods
push
icebp
xchg
xchg
addl
jbe
lahf
jmp
flds
dec
fsts
and
dec
mov
std
insl
jne
repz
fidivs
adc
pop
movsl
test
push
pop
mov
dec
push
stos
lahf
sbb
lahf
fnstenv
icebp
inc
cmpsb
add
adc
dec
in
icebp
daa
xor
jns
ss
inc
push
xchg
add
adc
push
mov
mov
cmp
xor
mov
sub
sbb
pop
pop
mov
iret
cmp
aad
jno
std
das
in
mov
mov
mov
mov
mov
sti
fbld
xchg
aam
pop
data16
repz
int
xor
cwtl
aam
int3
mov
lahf
xchg
sarl
cs
jbe
jecxz
pop
xchg
icebp
mov
xlat
lods
jecxz
push
pusha
mov
sbbb
imul
pop
inc
sbb
mov
test
inc
sti
mov
jmp
sub
subb
sbb
mov
jl
pop
popa
insl
xchg
arpl
test
xor
push
ret
sub
cmp
sub
leave
gs
mov
and
pop
push
sti
mov
push
pop
aad
add
inc
enter
int3
ret
js
bnd
cld
clc
mov
mov
mov
stos
idiv
pop
fiadds
mov
mov
stos
cld
xchg
fcmovb
in
mov
adc
add
loop
repz
and
inc
mov
fadds
sbb
cmp
jp
fdivrp
data16
dec
xor
fdivl
mov
dec
test
lods
aam
rclb
lret
lds
mov
movsb
xor
push
mov
mov
sub
ja
mov
andl
mov
mov
push
outsl
outsl
jmp
pusha
clc
push
dec
or
pop
int
cmp
movsl
jp
add
fcoms
push
mov
jbe
and
inc
in
xchg
pop
rorl
aad
mov
dec
test
mov
xchg
jl
fstpt
xor
in
jo
hlt
xor
in
inc
inc
push
add
lcall
xlat
dec
cld
push
fsubl
cs
lret
push
push
aad
sbb
jmp
lret
xchg
pop
cwtl
sub
in
pusha
dec
sub
sub
cwtl
xchg
mov
push
mov
mov
dec
lcall
mov
fwait
push
pop
add
pushf
jns
and
dec
xchg
mov
dec
sub
stos
ja
xor
negl
cs
fs
or
sub
clc
jmp
bound
jge
adc
adc
stos
cmp
push
nop
jb
test
jne
and
cmc
std
int
mov
fs
in
rcrl
sbb
xchg
mov
nop
xor
sbb
mov
shll
lock
push
shlb
incb
bound
sbb
cld
shrl
pop
cmpsl
lds
sub
andl
cmp
cld
adc
cmpsl
popf
jl
scas
jmp
idivl
aam
loop
icebp
lods
xchg
je
popf
btr
pop
lock
aaa
cwtl
mov
pop
fwait
cmpsl
repz
and
sbb
fcmovnb
or
mov
std
ja
fsts
cs
mov
sarl
push
das
pop
ljmp
adc
add
pop
ret
ret
outsb
fimuls
leave
sbb
pop
xchg
push
pop
xchg
mov
sbb
dec
push
push
subl
loop
xchg
movsb
faddl
bound
add
or
cmpsl
arpl
es
adcb
pusha
fstl
or
mov
lret
iret
xchg
or
add
test
outsb
in
mov
iret
sbb
pop
mov
push
clc
lods
ss
cli
xchg
pop
lea
sbb
dec
pusha
xchg
add
or
xlat
scas
sub
mov
movsl
mov
cli
test
lods
scas
adcb
add
cmp
jbe
mov
faddp
dec
pushf
jecxz
push
pushl
xor
xor
addr16
movsl
fwait
pop
out
scas
adc
lcall
ljmp
lock
jno
mov
pop
scas
adc
int
inc
test
cltd
leave
in
jne
adc
xor
mov
cmp
jg
jbe
testb
mov
cltd
push
addl
outsl
jb
pop
add
cwtl
mov
pop
fsubp
outsl
add
enter
sub
outsb
cmp
adc
call
push
add
lods
dec
loope
xchg
int
adc
in
rcl
xchg
jno
push
pop
fistpl
push
pop
js
int
adc
repz
testl
add
mov
repnz
jns
mov
mov
rorl
mov
lret
xchg
aas
sahf
adc
xchg
mov
jne
int
push
dec
xor
lods
fadds
orb
out
test
faddp
cli
jmp
push
out
leave
mov
mov
and
pop
aam
mov
scas
shlb
call
and
pop
std
xchg
push
sti
mov
rcr
and
sbb
lea
pop
nop
mov
iret
adc
call
add
push
notb
rolb
sbb
pop
clc
dec
idivl
mov
cmp
rorl
xor
ds
movsb
jecxz
xor
xlat
adc
pop
sahf
inc
cmp
adc
mov
leave
movsl
pop
notb
int3
mov
lea
jae
xor
mov
out
test
int
mov
scas
cmpsl
les
adc
mov
pusha
sti
xchg
jge
xor
adc
jg
call
repnz
sbb
test
xchg
sbb
add
aad
sbb
and
movsl
movsl
decb
bound
in
clc
xchg
adc
cmp
insb
inc
insb
push
dec
sahf
cmpsb
rcrl
add
dec
cmpsl
or
sub
loop
in
and
push
sub
stos
shrb
leave
ret
cmp
jo
mov
inc
jmp
ja
and
mov
mov
mov
and
xchg
and
push
add
mov
mov
adc
sbb
std
push
scas
cmc
stos
leave
lods
dec
cltd
xchg
lock
xor
int
lcall
dec
push
imul
mov
outsb
or
push
mov
aam
les
jne
xchg
movsl
inc
ljmp
repz
repz
or
sahf
sar
push
mov
es
inc
or
add
jns
push
push
loope
adc
test
pop
mov
pop
popf
pop
aam
test
xchg
scas
mov
loopne
ljmp
cwtl
xchg
xchg
inc
pop
push
inc
call
shlb
jo
call
es
inc
mov
dec
sub
mov
mov
xchg
add
xchg
loop
cmp
addr16
addl
pushf
and
mov
int
rolb
or
push
scas
sub
xchg
fwait
adc
int
pop
pop
sub
xchg
fucomip
jmp
cld
sub
aas
test
ljmp
and
push
ds
popl
stos
mov
or
mov
push
mov
es
mov
dec
mov
stos
das
out
mov
cmp
movsl
pop
mov
ret
mov
mov
arpl
adc
aas
neg
mov
xchg
push
inc
andb
push
jno
scas
movsb
hlt
pop
pusha
mov
lcall
add
jne
js
sbb
sahf
mov
ljmp
push
fisubl
addr16
inc
xchg
push
dec
xor
std
les
jns
or
cmpsl
jp
jmp
xor
ljmp
aaa
adc
ja
lock
pop
push
adc
repnz
sbb
push
mov
or
mov
sbb
cmp
out
xorb
out
pop
xlat
iret
rcrl
out
cmpsb
addb
imul
jne
cmp
mov
inc
mov
sahf
xorb
push
shlb
sti
cmovns
inc
xor
and
jle
icebp
jns
mov
pop
adc
inc
outsb
nop
fiaddl
cmpsb
ja
jb
mov
mov
mov
jle
pop
rorl
cmpb
or
inc
fbstp
jae
outsb
repnz
pop
ja
hlt
cmp
movsl
ds
cmp
call
ljmp
pop
in
pop
push
fmull
push
cs
cmp
mov
loop
scas
cmp
sahf
movsb
push
out
mov
cld
cmp
rorb
mov
imul
mov
inc
fiaddl
pop
mov
pop
xlat
push
mov
sub
or
jecxz
out
cwtl
icebp
test
aam
ret
das
fistps
rol
mov
nop
add
test
hlt
or
mov
pop
int3
lock
pop
cltd
cli
xchg
push
xlat
arpl
call
xlat
dec
jb
jg
inc
cld
inc
push
imul
shll
ljmp
aas
xchg
jl,pt
xor
nop
mov
aam
xchg
lahf
sub
es
pop
xor
jmp
fdivr
enter
mov
bound
ret
jecxz
inc
fildl
or
mov
or
inc
cmp
repnz
lea
imul
pushf
mov
ss
dec
xor
stos
xor
and
iret
fiadds
dec
gs
cmp
stos
xor
push
xor
sti
rolb
push
mov
xchg
ret
jne
add
lcall
aaa
lds
add
mov
jp
in
divl
mov
ja
fld
xchg
or
and
mov
bound
rcrl
push
lods
cli
out
test
xor
dec
inc
mov
lret
cltd
cmc
stos
loopne
cwtl
xchg
pop
fistps
add
mov
sahf
out
leave
lret
dec
mov
fwait
xor
jae
cmpsl
mov
push
out
add
cmpsl
jl
loopne
xchg
rclb
ss
out
mov
xchg
in
repz
or
sbb
mov
inc
outsb
pop
xlat
gs
add
or
push
xchg
pop
insb
pusha
sbbl
mov
scas
mov
call
or
push
popf
add
cmpsb
jno
shll
or
mov
mov
and
sbb
cmp
and
gs
adc
sti
xor
mov
fcmovnu
jle
mov
lret
adcl
and
mov
fsubrs
inc
cltd
jne
cmc
loope
test
sbb
scas
mov
outsl
xlat
mov
cmpsl
add
xchg
lock
fs
or
test
jnp
lahf
lcall
iret
jle
jno
and
je
add
xchg
addr16
mov
js
mov
push
or
cmp
nop
push
sub
or
jge
jae
aas
mov
dec
push
stos
outsl
sti
and
add
fcomp
test
scas
ds
sbb
mov
out
divb
adc
test
cmpsb
dec
arpl
test
jns
mov
inc
pop
add
arpl
neg
inc
out
xor
mov
loop
sbb
daa
out
sub
mov
mov
sahf
pop
fnstenv
xor
dec
jnp
aaa
aam
stos
sbb
dec
aaa
lock
jmp
fimull
jmp
popa
sbb
add
int3
pushf
adc
repz
or
jmp
sbb
pushf
fstpt
add
sbb
popa
fstps
dec
jp
sbb
mov
ret
pusha
dec
js
inc
jns
mov
int3
mov
sarl
clc
add
insl
daa
inc
imul
int
out
push
fcomps
inc
dec
mov
mov
or
popf
sbb
xchg
les
cltd
mov
adc
mov
ret
and
lcall
or
adc
inc
scas
mov
popa
les
out
into
dec
clc
sub
xchg
mov
into
and
cmc
mov
repz
push
mov
inc
mov
xor
pusha
and
rcl
out
fcomps
xor
pop
and
push
jge
xchg
lock
jno
jnp
movsb
loop
pop
or
ret
or
mov
popa
popa
fcmovnb
mov
cmpsb
and
in
les
ljmp
add
jle
push
add
inc
mov
pushf
mov
jb
sub
cwtl
es
or
dec
inc
movsl
cmp
xchg
mov
or
mov
loope
sbb
sub
jmp
mov
pusha
out
daa
pop
mov
jecxz
mov
test
jne
mov
repnz
push
cmpsl
cmp
mov
inc
xchg
in
movsb
jl
roll
movsb
sbb
repz
mov
mov
add
xchg
aam
mov
inc
xchg
push
inc
add
pushf
jno
out
pop
mov
cmp
jo
fnstsw
mov
dec
and
and
xchg
aas
mov
pop
add
fwait
or
sub
jl
xlat
or
sbb
jnp
es
pop
pop
inc
popf
sbb
aaa
ss
sbb
test
dec
mov
push
sub
out
adc
mov
jne
divl
or
inc
pop
adc
sbb
sub
aas
insl
xor
sbb
mov
es
std
or
nop
insl
jb
in
mov
in
sbb
pop
mov
lods
pop
int
rclb
addr16
adc
in
ja
mov
or
push
in
dec
int3
mov
cmp
mov
xor
xchg
stos
add
lret
cs
out
xor
push
js
or
popa
arpl
xchg
mov
pop
mov
roll
dec
mov
mov
pop
adc
cltd
lods
mov
aad
arpl
pop
add
adc
sbb
mov
sbbb
cmpsl
cld
insl
fisttpl
pop
shll
mov
jae
pop
pop
popa
lods
popf
and
sahf
shrl
out
mov
clc
scas
sub
jnp
mov
cmpsl
inc
jle
imul
ss
jecxz
or
out
repnz
add
xorb
jnp
add
xchg
xor
aad
outsl
jo
push
insb
jno
inc
mov
inc
inc
lret
das
push
nop
add
fisttps
mov
inc
push
mov
dec
movl
mov
hlt
xor
pop
insl
mov
jno
pop
add
mov
jle
sub
sahf
inc
into
and
test
ss
shlb
rcrl
or
mov
jle
es
adc
enter
xor
push
insb
or
and
rclb
xchg
jg
jp,pn
push
or
xchg
mov
mov
dec
rep
popa
mov
or
data16
or
jg
rolb
idivb
xchg
stos
cmp
imul
cmc
pop
test
cltd
cwtl
and
aad
push
sub
xor
je
xchg
aad
mov
icebp
fldt
mov
icebp
shll
cwtl
cmp
mov
inc
adc
hlt
lock
testb
dec
in
cld
aad
cmpsl
sub
imul
insl
aaa
arpl
dec
lcall
jns
fnstcw
ss
loopne
mov
jl
inc
sbb
divw
popa
jl
cmp
add
xchg
cmpsl
pop
mov
bound
sub
idivb
pushf
xchg
push
xlat
pop
pop
fwait
pusha
sahf
ljmp
sbb
fs
adcl
pop
lds
pop
scas
ds
fisttps
pop
ret
push
leave
sub
dec
push
mov
mov
sub
mov
aas
in
xchg
incl
je
xor
sti
or
int3
lahf
xor
push
cmp
int
cmp
cmpsl
xor
in
pushf
mov
hlt
adcl
arpl
test
xor
mov
in
mov
mov
xor
int
in
js
inc
xchg
lock
xchg
push
inc
into
dec
mov
push
sub
xor
lock
adc
enter
sahf
arpl
mov
pop
movsb
iret
mov
scas
lds
push
cmp
mov
sar
cmp
xor
inc
out
aad
push
out
ds
daa
int3
fidivl
mov
xchg
enter
in
jns
clc
cmp
and
lret
cmp
nop
xchg
bound
dec
sbb
test
lret
cmpsb
fmuls
lds
inc
mov
mov
sbb
pushf
dec
ficomps
pop
xor
mov
gs
xchg
movb
sub
call
mov
mov
sub
leave
ffreep
xor
sbb
stos
jl
sub
adc
push
fdivl
push
jo
fistps
cli
dec
push
ja
mov
sbb
int
xor
mov
xor
mov
push
pushf
in
andb
fstpl
call
mov
iret
adc
stos
ss
jb
adc
in
add
orb
into
hlt
ja
mov
jecxz
data16
lods
ret
cmpsl
out
dec
xchg
mov
adc
and
mov
mov
cmp
ror
xlat
jle
and
out
push
sbb
pop
dec
mov
push
jecxz
sbb
data16
dec
add
add
aam
mov
cmp
stos
popf
daa
jp
out
shl
sub
sub
lahf
daa
in
add
pop
in
idiv
ficoms
sbb
bound
and
inc
fadds
push
sbb
or
hlt
icebp
jb
in
orl
lods
in
pusha
out
fidivrs
add
sub
insb
in
push
xchg
pusha
mov
add
inc
pxor
push
mov
and
icebp
and
inc
pop
push
aaa
sbb
cmovnp
or
ja
test
insb
inc
decb
pop
ja
jl
aam
pop
xchg
dec
std
lcall
fwait
out
push
lods
dec
or
aad
xorb
ljmp
lcall
pop
xchg
jecxz
sbb
fstp
shll
adc
hlt
imull
jmp
sarb
fdiv
test
int
jp
aaa
jmp
push
push
mov
dec
dec
jae
out
movsb
sub
rol
push
or
rcr
mov
jge
loopne
cld
mov
outsb
fcoms
mov
sub
mov
jno
mov
cli
aaa
cmpsb
push
ja
movb
cmp
mov
mov
std
sbb
push
or
popa
sub
adc
inc
ret
mov
cmp
mov
or
ds
fidivl
inc
push
je
jne
mov
jg
pop
adc
lds
out
cmp
xor
sar
adc
mov
lret
dec
jge
mov
shlb
negl
jg
pop
push
mov
ss
mov
movsl
rorl
jecxz
cltd
cld
xor
cld
or
push
fmul
xor
adc
in
lret
pushf
sbb
push
shlb
test
dec
call
subl
inc
pushf
sub
sbb
jle
mov
mov
xor
cwtl
pusha
xchg
or
nop
pop
mov
into
popl
incl
scas
push
add
push
and
mov
sbb
xchg
or
fstl
or
mov
jmp
mov
xchg
mov
and
shlb
sbb
arpl
outsl
pop
fnstcw
sub
arpl
mov
push
shll
iret
push
push
lods
loop
cmp
test
movsb
mov
xchg
mov
sub
sti
in
mov
sahf
movsb
mov
jle
inc
pop
call
mov
outsl
pop
ds
mov
lods
pop
mov
icebp
idivb
mov
cli
insb
add
ljmp
and
mov
add
fwait
xchg
pop
cltd
jae
sbb
mov
mov
lcall
das
mov
fs
mov
out
sbb
push
out
jnp
and
mov
sbbb
mov
inc
sub
add
nop
sbb
sbb
fldcw
xor
mov
add
xchg
mov
scas
xor
daa
or
shrl
arpl
mov
lcall
xchg
sahf
es
inc
push
sub
fs
inc
xor
push
jnp
ljmp
lods
pop
inc
jb
mov
jno
jg
addl
int
mov
pushf
pusha
sahf
push
pop
dec
mov
jl
subl
imul
shll
dec
clc
in
aas
pop
adc
jmp
cmp
shrl
out
cmp
or
add
in
fs
and
fwait
mov
divb
adc
std
int3
pop
cld
sub
pop
push
jo
adc
pop
fstpt
out
fnstcw
or
sbb
orb
push
loopne
mov
xchg
pop
dec
jno
dec
enter
jae
pop
adc
sahf
cmp
hlt
lock
xchg
mov
fwait
mov
pop
push
add
imul
rorl
jg
aad
aas
xchg
cs
xor
fdivr
inc
cli
or
fcoml
jno
aaa
ds
xchg
push
out
bound
mov
repz
xor
mov
xlat
mov
mov
pop
mov
sbb
xchg
stc
push
jo
lcall
cmp
mov
je
icebp
cmc
les
or
test
leave
push
and
arpl
sbb
mov
add
mov
cmpl
arpl
iret
mov
pop
or
cmp
inc
out
mov
mov
xchg
add
mov
mov
repz
addr16
rol
in
stc
pop
pop
adc
cwtl
mov
int3
mov
jnp
or
xor
fnstcw
stos
pushl
mov
inc
out
or
sub
je
out
add
xchg
cli
cmp
cmp
sbb
adc
aam
jne
xor
push
sub
repnz
not
rolb
mov
scas
sarl
iret
xor
jno
out
loope
jecxz
bnd
insb
sbb
push
mov
mov
and
add
mov
and
pop
dec
je
sbb
dec
sahf
shll
lods
and
fidivs
mov
lahf
iret
inc
stos
mov
xor
and
repnz
or
cmp
dec
xor
lods
jnp
int
nop
adc
jmp
int3
dec
jne
inc
dec
sub
test
idivl
or
xchg
xchg
jmp
push
lret
dec
xchg
int3
cmp
mov
ljmp
insb
jnp
out
push
xchg
xchg
sbb
mov
je
and
add
aas
stos
out
icebp
push
lea
shrl
in
fadds
shll
sub
test
fnstsw
mov
lods
in
cld
dec
idivb
data16
xchg
and
sub
add
aas
cmc
int3
ljmp
popa
lcall
mov
lcall
lds
mov
mov
add
pop
pusha
jnp
js
add
fsubp
inc
pop
mov
cmp
rorl
cli
xchg
push
sub
es
xor
int
js
pop
sbb
cmc
cwtl
cld
cltd
adc
inc
jg
orb
adc
pop
add
pop
movsl
xchg
dec
repz
add
mov
sbb
cmc
fisubrs
sbb
mov
test
adc
loop
fs
dec
xchg
mov
adc
into
lret
orb
push
pop
scas
mov
mov
push
jge
xchg
loop
mov
pop
in
lds
mov
icebp
test
adc
out
mov
enter
push
ljmp
and
inc
lret
cmp
jae
sub
in
dec
pop
pop
cmp
arpl
inc
inc
jg
jg
jne
jae
xor
lahf
push
mov
xchg
or
jbe
and
scas
dec
lock
add
push
mov
je
mov
dec
sbb
xchg
data16
xchg
fstpt
pop
sub
mov
sar
and
inc
lods
push
mov
clc
push
pop
mov
stos
lahf
std
pop
pop
js
push
movsb
xlat
add
push
rcrl
inc
cmpsl
mov
cmpsb
in
xor
mov
pop
jmp
cld
push
in
loope
xor
leave
sbb
pop
dec
add
mov
jl
in
ljmp
jge
test
jp
sti
aam
mov
repz
or
int
fisubl
out
push
cmp
mov
outsb
push
les
push
test
pop
mov
test
push
mov
fnstenv
pop
xlat
lods
push
and
sbb
push
es
inc
mov
or
jmp
test
into
filds
adc
movl
pop
jnp
mov
mov
test
in
and
inc
mov
mov
cmp
inc
jbe
mov
xor
nop
idivl
lods
hlt
pop
jns
inc
cmp
sbb
or
jmp
imul
cmp
xchg
mov
test
pop
mov
cmp
push
bound
sbb
comiss
jle
and
lds
jne
xor
stos
lock
sub
cmpsb
dec
in
cmpsb
mov
lret
inc
inc
mov
push
outsl
mov
popf
inc
mov
dec
adc
mov
out
mov
xchg
dec
pop
lea
int3
rcrb
cmp
je
fldl
inc
or
hlt
call
test
inc
xlat
mov
cwtl
sub
pop
pop
cwtl
movsl
imul
jne
daa
fldcw
and
leave
ja
inc
mov
xchg
xchg
mov
mov
cmp
jno
pop
lods
push
mov
mov
popf
inc
jbe
cltd
mov
jae
into
or
stos
sub
ficompl
in
pop
or
test
xor
lods
dec
jmp
rolb
fcmovb
clc
inc
sbbl
lds
or
push
pop
mov
push
ss
sahf
cmp
js
and
gs
xor
and
stos
xchg
push
sbb
dec
dec
insb
les
or
dec
cli
addb
aaa
pop
cmp
or
push
data16
dec
mov
mov
inc
xchg
test
pop
nop
inc
pop
enter
sub
xor
pop
jae
lods
adc
sbb
inc
out
mov
mov
icebp
xor
xor
outsl
mov
test
aad
dec
rep
addr16
je
stos
subb
icebp
dec
repnz
pop
push
pop
pop
jns
push
inc
icebp
aad
add
pop
mov
adc
icebp
dec
hlt
cwtl
fiadds
imul
mov
xchg
in
es
mov
fs
push
test
hlt
inc
adc
mov
mov
imul
ss
popa
xor
pop
lock
inc
push
adc
dec
fistps
fdivrl
lret
ja
movsb
or
pop
leave
repz
repnz
sub
mov
mov
add
cmp
andb
jne
jno
or
out
test
fadds
insb
js
adc
fisttpll
sarb
lds
fs
in
in
mov
jp
push
cmpsl
fcoml
push
jbe
orl
imulb
movsb
dec
mov
fisttpll
sahf
or
push
and
and
inc
outsb
mov
std
and
sub
mov
dec
jl
mov
xor
mov
lods
scas
or
sub
jle
aam
insl
xchg
jg
inc
mov
lret
test
aad
xor
sarb
push
sub
or
enter
and
add
int3
aad
loope
xor
das
jae
push
jb
test
dec
sub
cmpsl
and
mov
sbb
push
xlat
xchg
sub
jae
mov
xchg
sti
in
das
ret
out
and
pop
aam
pop
dec
inc
loopne
add
pop
jne
outsl
mov
xor
push
xchg
or
jns
pop
sbb
movsb
inc
dec
adc
jne
cmc
push
fwait
inc
divl
fisubs
lods
shll
int3
mov
mov
adc
mov
lcall
pop
jl
pushf
mov
push
jl
inc
cmc
mov
enter
mov
push
mov
adc
mov
popa
pop
pop
lods
fucomp
gs
fsub
xchg
mov
sbb
test
rcll
js
loopne
add
cld
mov
dec
lock
mov
and
xor
cmpsl
aam
ljmp
xchg
shll
lcall
or
mov
cmp
xor
movsl
xor
out
into
fsubl
repz
mov
cmp
fwait
stos
dec
lock
fwait
mov
dec
push
cmp
out
aam
cmp
sbb
xchg
lock
push
stc
mov
imulb
in
ret
imul
sbb
add
dec
ljmp
sub
and
xor
hlt
jno
stc
lods
pop
mov
cmp
pop
mov
call
imul
wrmsr
ss
aaa
mov
fcoms
push
mov
out
mov
lahf
pop
lock
pusha
mov
xor
xchg
fucomp
js
and
cmp
sub
and
xor
inc
xor
xchg
cmpsl
push
xchg
adc
sbb
lock
cmpsl
incb
sub
lods
push
pop
pop
pop
cmp
ss
push
in
mov
push
lahf
mov
in
pop
cltd
jo
dec
mov
fsubr
xchg
setl
and
lcall
idivb
xchg
loop
int3
popf
aad
mov
dec
ljmp
or
mov
imul
scas
pop
mov
roll
fwait
cwtl
or
aaa
adc
mov
mov
pushf
mov
aas
push
push
xor
es
incb
jmp
ds
sbb
cmp
mov
in
jmp
fxch
inc
xchg
push
inc
pop
mov
push
adc
jae
push
pop
aam
pop
xor
pusha
mov
pop
pop
sbb
dec
jne
xchg
mov
stos
cmp
scas
inc
stos
inc
lods
mov
push
mov
add
stos
push
xor
xchg
mov
inc
pusha
negl
push
push
xlat
or
push
ljmp
dec
pop
cmp
hlt
push
jl
insb
xorb
push
subl
jne
add
shll
add
mov
cmp
pushf
incb
loope
jnp
pop
inc
push
xchg
add
int3
ss
dec
mov
xchg
pop
xchg
inc
imul
push
mov
aam
sub
push
jecxz
sbb
shrl
test
mov
imul
xor
xchg
inc
js
mov
mov
adcb
ds
or
pop
cmpsl
push
mov
lods
cmp
push
imul
inc
test
cmp
mov
cli
or
xchg
in
dec
cmp
fldt
ret
mov
movsb
mov
adc
les
push
popf
push
sub
das
sarb
arpl
fildl
add
enter
adc
sbb
pop
and
pop
sub
lods
mov
jae
enter
loop
push
test
popa
add
fists
mov
dec
ret
add
mov
fadds
sarl
into
add
pop
clc
inc
xchg
sbb
cmp
je
in
pop
push
sub
cmpsl
xchg
xchg
lods
js
pop
lock
push
jbe
subb
mov
push
scas
pop
xlat
xchg
cld
int3
xor
cwtl
jo
push
dec
inc
pop
adc
mov
in
adc
lock
sub
cs
sbb
int
stc
fistpl
out
filds
mov
stos
pop
jae
pop
imul
shll
test
push
sahf
fdivrp
rcr
mov
mov
div
and
inc
test
or
inc
or
xchg
ja
cmp
cld
xchg
dec
ret
ds
pop
mov
sbb
dec
mov
and
ja
xchg
cmp
mov
es
pop
cli
mov
mov
out
adc
jo
xchg
ret
push
add
imul
sbb
fildl
sub
adc
pop
loop
aad
jmp
mov
js
pop
pushl
fldt
std
cli
add
pop
sbb
loopne
pop
test
in
mov
mov
push
jb
sub
lods
sub
cmovle
push
andb
xor
test
stos
and
orb
cmp
cmc
subl
mov
inc
or
movsl
enter
cmp
sahf
xlat
fcmovne
mov
mov
inc
int3
lret
mov
int
pop
lods
adc
loop
flds
xlat
jmp
push
movsl
ds
shrb
push
mov
or
mov
xchg
push
incl
sahf
in
or
int3
testl
loopne
lods
sarl
xor
and
icebp
and
cmpsl
rorb
iret
repnz
shrb
mov
and
xor
pusha
cli
sub
push
xlat
fstl
scas
call
cmp
jns
sbb
or
dec
adc
mov
push
lds
call
inc
dec
enter
push
dec
jle
jne
pop
aam
in
lods
push
xchg
das
push
in
outsb
push
mov
imul
js
mov
fsubrl
pop
in
les
rclb
xchg
lock
mov
lock
into
sub
loope
sbb
pusha
sbb
add
int
xchg
or
mov
xlat
cmpl
outsb
mov
push
sub
into
add
stc
sub
push
xchg
sbb
mov
test
ja
or
mov
xor
xchg
jg
rcr
in
and
jb
xor
mov
insb
add
mov
inc
call
mov
inc
mov
add
incb
jl
adc
sub
adc
adc
scas
cmc
add
mov
dec
xor
scas
add
les
test
jmp
add
jg
je
mov
enter
stos
pushf
fs
fistps
hlt
rcrl
mov
rolb
addb
adcl
sarl
sub
adc
or
dec
cmovb
ja
leave
jle
scas
bound
test
imul
pop
or
xchg
inc
xchg
mov
jge
sub
aas
xchg
mov
cmc
es
bts
push
rorl
cmp
flds
aad
jo
mov
mov
jecxz
mov
stos
imul
dec
repz
sub
adc
js
popa
jg
xchg
jg
icebp
adc
aas
icebp
xor
mov
and
push
cli
lods
xchg
xchg
mov
sbb
imul
fadds
xlat
fldcw
and
mov
in
daa
cmc
xchg
and
popa
scas
sbb
aam
out
ret
pushf
cmp
push
fists
mov
sti
push
aaa
nop
loopne
sbb
pusha
lea
mov
dec
push
xchg
mov
jle
imul
xchg
jbe
mov
jo
dec
dec
mov
rcl
sahf
into
popf
cmp
lcall
shll
pop
inc
scas
sub
int
cs
inc
insb
cmp
fcompl
xchg
fneni(8087
aad
insl
pop
daa
mov
jo
cmp
xchg
test
push
mov
test
cmp
pop
or
mov
jp
sbb
daa
push
sti
mov
jg
inc
popa
pushf
mov
sub
popf
push
shl
les
pushf
push
int3
cs
shll
mov
ja
xchg
test
jae
mov
insb
clc
leave
xor
cmp
sub
std
inc
jo
push
xchg
xchg
shll
in
shlb
xor
in
aas
xchg
es
fldt
and
and
lret
jecxz
lcall
cmp
in
mov
iret
orl
add
mov
pop
or
fld
push
mov
and
xor
mov
or
pop
mov
call
mov
jmp
in
jbe
push
in
ficomps
xchg
cltd
dec
clc
or
mov
push
jno
in
inc
mov
dec
ret
fadd
inc
notl
inc
dec
rol
mov
aad
adc
jle
fs
sub
test
rorb
nop
arpl
stc
cmpl
les
int3
sub
mov
jno
mov
sub
jg
sbb
fs
and
ja
mov
pop
int3
jg
outsb
rcrb
loopne
mov
gs
mov
fimuls
mov
jnp
push
adc
lret
mov
imul
arpl
jno
pushf
jmp
data16
sbb
inc
or
inc
add
sub
jmp
jle
or
popa
fisubs
aas
flds
pop
hlt
rcr
inc
rcr
jno
and
jae
lret
mov
test
adc
lahf
lds
dec
xchg
std
jnp
sub
frstor
outsl
mov
test
iret
shlb
aas
ja
rcll
call
fldt
push
inc
lea
out
adc
push
mov
mov
aad
jl
outsb
cmpsb
add
xor
lret
jne
xlat
sbb
adc
dec
push
addr16
xor
orl
popa
imul
jle
jge
mov
jmp
loopne
jmp
gs
mov
mov
insb
jb
add
out
sti
cltd
out
push
lcall
lea
mov
inc
and
aad
and
sti
mov
in
jno
bound
and
std
jbe
push
aaa
lahf
jb
popf
sbbl
pusha
adc
jo
imul
or
cld
outsl
cmc
cmp
pusha
sbb
scas
aam
mov
xchg
pusha
insb
push
fnstcw
cmp
in
xchg
andl
in
subl
and
mov
testb
and
bswap
ficoms
or
fstl
mov
lds
rcrb
push
mov
roll
pop
ja
mov
or
shrl
add
daa
out
mov
aas
sub
ds
mov
fwait
cmpsl
cmp
sub
das
push
pusha
stos
mov
or
or
push
cmp
cmpsl
jb
jg
jnp
lods
xchg
cli
pop
fists
lahf
addr16
inc
xchg
mov
clc
inc
sti
mov
jge
xchg
mov
mov
or
xor
loope
mov
inc
add
loope
div
cld
fstl
lods
add
inc
mov
mov
loope
push
test
mov
call
mov
repz
cld
or
out
cmp
cld
push
mov
and
pop
call
je
or
xchg
ss
push
fiaddl
loop
movsb
and
jb
jg
lret
sbb
jns
mov
xchg
mov
dec
mov
dec
mov
adc
pop
icebp
cmp
cmpsb
leave
fidivrl
nop
cmp
lea
mov
jns
out
stos
popf
mov
mov
push
pop
mov
pop
repz
mov
and
shr
icebp
mov
inc
push
adcl
subb
enter
shlb
addr16
mov
or
fbstp
fdivs
jmp
cmp
mov
pushf
inc
ja
dec
div
mov
xchg
imul
movsb
imul
lcall
shr
mov
cltd
xchg
cld
fildl
mov
sbb
shlb
call
ja
cmpl
pop
adc
inc
out
xchg
pusha
in
adc
mov
cmp
cmp
sbb
inc
lahf
jo
sub
jmp
xorl
gs
popa
cmp
or
mov
stc
mov
pop
push
add
cmp
push
data16
in
sub
aad
mov
lcall
aad
push
inc
or
stc
cmp
decb
dec
cmp
shll
xchg
aas
adc
rclb
jg
xchg
imul
iret
loop
fnstenv
divl
push
in
cmpsl
mov
jle
sub
mov
data16
or
dec
xchg
mov
xor
movsb
mulb
out
call
int
cltd
pop
lret
or
xor
dec
pop
sbb
in
cltd
sbb
dec
jne
out
shrl
fwait
cmp
add
lods
int3
mov
jb
ret
add
mov
pop
fsubl
inc
pusha
cmpl
jb
ret
jbe
aam
push
sbb
jg
fldcw
loop
xchg
adc
mov
adc
pop
jns
leave
jb
movsl
or
and
fcmovnbe
pop
shrl
push
and
stc
outsb
scas
jle
rcll
fs
jns
arpl
jle
add
call
subl
test
cmp
pop
or
outsb
rorl
je
mov
add
sub
mov
push
out
dec
xor
jle
movsb
repnz
pop
lcall
jp
xchg
mov
xchg
outsb
push
test
inc
aam
popf
and
cwtl
adc
js
mov
daa
stos
push
xor
pop
lret
call
outsl
inc
xor
int
sbb
pop
test
cmpsb
push
out
mov
enter
test
xchg
xchg
out
dec
jbe
movb
inc
adc
pop
repnz
jb
mov
inc
popf
or
ljmp
neg
rcr
adc
cmp
cs
jle
aas
jnp
loop
adc
aad
push
cmp
and
cmp
test
or
jne
jmp
inc
test
dec
mov
xchg
push
cmp
cltd
or
addb
mov
sbb
cwtl
push
jmp
dec
push
cmp
std
mov
jl
push
jnp
push
outsl
push
dec
lock
js
mov
ret
fs
pop
cmc
mov
adc
outsl
jmp
fsts
pop
repz
das
jmp
adc
xor
fs
stc
jmp
adc
cmp
btc
loop
dec
int
sub
push
hlt
mov
cmpsl
mov
pop
add
push
nop
mov
test
mov
jb
daa
int3
gs
iret
orb
mov
add
add
data16
sbb
jl
cmpb
pop
test
sbb
xchg
sbb
stc
cmp
loopne
mov
xchg
cmp
sub
mov
cmp
dec
mov
dec
inc
lds
rolb
int3
rorb
mov
sbb
in
sahf
and
or
sahf
scas
sub
arpl
aas
cli
out
pusha
or
mov
mov
xor
mov
and
cmpsb
inc
jbe
imul
mov
bound
into
fbld
push
jg
push
mov
sbb
sbb
adc
mov
sbb
mov
and
cli
fistpll
mov
jl
sbb
jbe
scas
ret
cli
ljmp
ds
dec
cmp
insb
insl
cmovno
cwtl
jno
push
and
jmp
pop
lock
insl
and
cmp
data16
movsl
mov
jo
fstl
xor
xchg
sahf
pushf
ret
repz
jne
enter
lea
xchg
repnz
xor
cltd
dec
dec
ret
xchg
lret
pop
pushf
popl
call
xor
into
pop
dec
nop
fisubs
lock
imul
adc
jge
cltd
inc
lahf
inc
jl
adc
mull
loopne
fisttps
in
xor
push
mov
cltd
jne
aam
repnz
dec
into
and
stos
enter
les
in
push
pop
adc
psubsw
int
popf
xchg
subb
and
xchg
xchg
orl
pop
jge
decb
inc
loope
movsb
in
fidivl
xchg
or
lahf
push
insb
rolb
cmc
xchg
add
outsb
pop
sbb
dec
fsub
mov
cld
adcb
loope
push
sub
leave
mov
dec
das
sti
lds
lods
faddp
push
dec
shl
stos
movb
cmc
out
scas
sbb
stos
push
test
and
mov
mov
rolb
push
test
fstpt
arpl
pop
fsubs
sub
dec
xor
cmc
push
add
push
push
dec
movsl
pop
adc
mov
call
cmp
in
lods
dec
cli
bound
pop
scas
les
adc
xchg
push
push
adc
dec
shlb
sub
loop
jge
lock
shr
iret
pop
out
xchg
xchg
xor
lods
xlat
ljmp
add
cmp
mov
xor
add
mov
test
mov
inc
pop
scas
and
inc
and
inc
jno
outsl
mov
mov
stos
rorl
and
es
outsl
cmp
or
loop
lods
and
bound
test
mov
dec
movsl
fbld
rcr
andl
jbe
call
xchg
rorl
pop
push
aam
ja
sub
out
pop
push
and
ja
clc
jmp
mov
push
jo
and
cmp
test
inc
and
cmp
jmp
fadds
push
pop
cmp
je
xchg
mov
fisttps
xor
cld
push
fadds
pop
inc
push
jb
stos
pop
and
out
cmp
mov
jo
adcb
fiaddl
cs
daa
fdivr
sub
loope
pop
jo
movsl
inc
adc
jo
sub
jne
mov
inc
mov
ljmp
xor
mov
cmc
xchg
testb
shl
stos
or
fwait
jmp
pushf
cwtl
mov
dec
mov
dec
aam
outsl
jmp
cmp
sbb
clc
jecxz
pop
cmp
mov
pop
and
fsts
push
adc
pop
mov
push
ljmp
movsb
push
mov
inc
shlb
mov
mov
cmp
sbb
lcall
jae
stos
rcr
jg
xchg
hlt
rcl
xlat
mov
pop
rcl
mov
push
xor
add
into
cmp
jge
xchg
mov
cmp
dec
dec
lock
outsb
mov
sbbl
add
pusha
dec
jns
fildl
fwait
inc
push
pop
loopne
push
xchg
push
mov
cld
cmp
dec
pop
xchg
xor
xchg
cmpsl
xchg
mov
addr16
push
lahf
call
fcmovbe
mov
repnz
pop
xlat
pusha
and
jmp
lcall
movsb
mov
adc
adc
xchg
adc
mov
inc
xchg
ljmp
adc
sbb
nop
aam
dec
ret
les
xchg
scas
xchg
movsb
icebp
inc
notl
adc
stc
movzbl
loope
or
ljmp
jmp
push
sahf
outsb
sub
outsl
mov
stos
lds
dec
cmpsl
ret
inc
or
int
fisubrs
xchg
push
mov
dec
movsl
in
xchg
xchg
cmpsb
sbb
js
cli
call
mov
pop
mov
or
rolb
stos
ss
push
inc
xchg
dec
lock
adc
cmp
push
and
in
and
xor
out
push
sti
and
inc
jmp
or
jae
sbb
or
mov
push
fwait
popf
xchg
into
mov
test
std
jg
push
jle
gs
and
fistpll
cmp
loop
arpl
lea
mov
mov
xlat
and
out
jmp
mov
ja
cmc
mov
fs
test
cvtps2pi
add
imul
add
rclb
mov
dec
cmp
daa
in
shl
xchg
cmp
push
jl
sbb
sub
pop
aam
jmp
dec
stos
cmpsl
movsb
pop
pop
xor
push
shl
inc
loope
pop
sub
pop
and
add
out
fsubrl
nop
add
xchg
sub
cmpsb
fldt
push
cwtl
repz
test
jo
fisubl
push
ja
push
cwtl
outsl
js
gs
sub
out
js
and
push
xor
fcomps
and
notl
loope
sbb
and
and
call
mov
repz
cli
mov
in
in
pop
int3
stos
and
cmp
rol
mov
testb
cwtl
add
mov
fsubrl
sbb
jecxz
push
loope
sub
pop
pop
cmp
sub
popf
push
lahf
mov
dec
and
cmc
jecxz
inc
push
push
sbb
fs
icebp
mov
and
cld
cmp
jmp
sbb
or
mov
rolb
jnp
ja
out
lcall
dec
sbb
or
lods
mov
mov
pop
arpl
sub
inc
roll
xorl
lahf
xchg
int3
movsl
sbbl
cltd
xor
sub
cld
popa
jne
inc
push
loopne
aas
inc
jae
daa
cmpl
pop
call
in
test
inc
mul
push
or
roll
cmp
mov
xchg
push
addb
xor
fisubl
lods
jbe
in
ret
mov
addr16
add
loop
inc
lahf
xchg
mov
test
mov
lahf
or
pmuludq
xchg
shl
out
pop
out
mov
scas
aad
cwtl
popf
stc
jp
loopne
xchg
jmp
push
andb
fidivl
sbb
pop
adc
into
in
inc
out
inc
rdtsc
lock
cmp
jmp
aam
push
fsubrl
mov
add
test
mov
inc
icebp
popl
js
mov
call
jle
mov
fldl
movl
xchg
adc
out
xorb
push
sbb
inc
or
xchg
add
aaa
mov
jmp
sub
adc
add
aad
cld
jns
insb
out
cltd
mov
adc
subl
xor
jne
fisubrs
dec
inc
icebp
test
mov
adc
jl
dec
pop
movsb
lods
scas
cmpsl
add
pop
or
add
mov
xor
or
lods
xchg
aam
mov
or
push
das
jb
popf
jns
mov
adc
test
xchg
imul
fidivrs
mov
push
jg
add
pop
mov
push
popa
stc
outsb
outsl
xchg
cmp
pop
push
mulb
das
mov
mov
or
stc
xor
mov
mov
repnz
pop
sbb
sbb
or
sahf
jge
dec
xlat
add
inc
ss
lret
shlb
or
dec
jge
lea
notl
je
std
popa
jbe
in
mov
aad
pop
bound
mov
addr16
sarb
push
les
xchg
cltd
scas
jns
sub
inc
push
loopne
sbb
mov
push
cmp
insb
sub
test
in
mov
jns
push
inc
cltd
push
pop
aaa
inc
sub
fwait
inc
add
lea
out
shrb
enter
inc
push
fldpi
out
add
mov
test
xor
xchg
int
mov
lods
mov
js
xchg
push
fisubl
xor
pop
lods
rcr
loope
addb
pop
int3
xchg
sahf
and
jl
int3
inc
insl
dec
imull
xchg
adc
and
push
in
sbb
and
add
insl
mov
cmp
adc
ficompl
out
mov
mov
aam
jmp
mov
dec
je
cmc
xchg
push
orb
not
pop
xor
push
xlat
mov
popa
jmp
jge
cmpsb
je
mov
cwtl
aaa
test
adc
repz
or
test
mov
add
jecxz
cmp
push
dec
push
in
and
mov
inc
mov
loop
adcb
xchg
xor
test
imul
lock
xchg
xchg
sbb
fdivrl
mov
les
jle
mov
mov
repnz
dec
out
jl
test
lock
xor
fwait
cmp
repz
mov
ret
adc
test
sbbb
stos
push
bound
and
pavgb
iret
mov
xor
mov
xor
mov
mov
inc
jbe
mov
iret
dec
mov
dec
fsubrs
pop
les
jp
mov
mov
popl
add
adc
push
mov
adc
mov
xor
mov
imul
wbinvd
in
cmp
xchg
fimull
fdivrl
cltd
pop
push
mov
jp
fwait
pop
jne
shr
movsb
hlt
and
xor
xchg
push
out
add
xchg
movsl
add
and
andl
cmp
mov
jne
stos
xlat
mov
mov
xchg
fstl
or
rol
and
push
jbe
mov
scas
vxorps
inc
xchg
sbb
fiaddl
sub
ljmp
sahf
and
or
addr16
sarl
sbb
arpl
test
and
int
shl
jae
fwait
and
xchg
test
hlt
push
test
out
fdivrl
mov
push
outsl
gs
xchg
or
mov
sahf
lods
xor
lock
xor
daa
inc
pushf
int3
seto
shll
mov
cmp
mov
pop
jge
pop
outsl
in
pop
fldl
pop
or
ljmp
repz
and
loopne
xchg
insb
lret
sarl
sbb
pop
mov
mov
push
mov
push
ror
aam
into
mov
dec
push
pop
or
pop
orl
filds
in
loopne
imul
sbb
mov
cwtl
inc
mov
cltd
push
test
xchg
sub
cmp
es
cs
fcmovnu
cwtl
movsb
inc
iret
pop
pop
out
dec
push
in
and
movb
std
add
pop
imul
add
pop
sahf
jge
cmp
sbb
test
addr16
imul
or
out
inc
not
cmpb
and
mov
push
fimull
out
pop
cwtl
test
cld
cmp
fldt
fimull
push
and
in
shlb
mov
cmp
addl
add
insb
mov
push
inc
pop
push
or
cwtl
add
inc
aas
aad
jle
sti
stos
jp
mov
je
rcrb
hlt
sub
sbb
call
imul
test
push
push
scas
insb
fbld
scas
sbb
or
mov
or
mov
mov
hlt
or
sub
fcom
scas
adc
cmpsl
in
scas
cs
imul
sbb
fs
repz
subl
dec
call
les
inc
push
lds
sbb
mov
aam
sbb
mov
lahf
lock
repnz
out
xchg
rolb
mov
inc
xchg
push
test
mov
xchg
popa
out
movsl
lea
arpl
mov
push
mov
xchg
mov
stc
add
push
cld
es
es
adc
test
xor
mov
scas
mov
sub
cmc
mov
sti
cld
mull
shlb
pop
nop
jbe
inc
pop
pop
pop
add
jg
jecxz
xchg
mov
xor
dec
xchg
repnz
mov
pop
mov
add
fdivr
popa
insb
lret
xchg
inc
push
popf
push
int3
shrl
adc
aad
test
mov
add
jne
aaa
xor
test
lcall
cmp
dec
and
xchg
xor
add
inc
in
out
push
jmp
in
jae
inc
lds
stc
lea
mov
addl
in
stos
popf
test
out
in
pushf
cmpsl
mov
cmp
xor
idivb
mov
dec
xchg
test
xchg
add
hlt
xchg
lret
xorb
and
or
pop
xor
mov
outsl
sar
aas
xor
cmp
loope
jp
int
mov
lret
lcall
mov
inc
pop
xor
mov
div
je
and
lret
sbb
cmp
pop
mov
in
xor
lods
cltd
sbb
push
inc
dec
sub
mov
xchg
in
lds
int3
aad
lds
mov
es
arpl
ret
push
pop
jecxz
jno
pop
adc
ljmp
inc
xor
pop
bound
mov
loopne
jno
or
sbb
test
adc
push
stos
push
push
adc
mov
pusha
ss
xchg
les
aas
mov
mov
hlt
sbb
mov
adcb
loope
loope
xor
or
mov
mov
sub
xchg
in
mov
cld
adc
mov
mov
jnp
rcll
push
mov
mov
ljmp
adc
add
sbbb
hlt
jo
icebp
pop
lret
icebp
mov
test
lds
pusha
stc
adc
jmp
xlat
neg
and
test
movsb
sbb
jno
in
mov
dec
cmp
sbb
nop
and
mov
push
imul
out
push
and
cmp
mov
mov
jae
pop
data16
pop
mov
inc
nop
push
aaa
or
arpl
test
adc
mov
jmp
stc
push
insb
loopne
and
popf
inc
push
pop
sarb
movups
cltd
stos
mov
sbb
mov
ds
jnp
imulb
incl
mov
fmuls
lods
lods
das
sarl
or
jp
sub
sub
pop
mov
gs
imul
lods
repnz
insl
mov
or
xor
cmp
jo
addr16
dec
xchg
xchg
mov
and
outsb
push
inc
adc
inc
push
mov
jne
jl
movsb
xchg
fsubrs
xchg
pushf
and
xlat
and
pop
test
jp
das
ret
test
xor
or
push
loope
bound
js
inc
or
mov
addr16
int3
movsl
aas
xchg
mov
sarl
rcrl
imul
jbe
jne
inc
mov
sbb
das
rcr
test
cmpsb
aaa
fsubrl
dec
clc
pop
gs
cs
sahf
jo
lds
stos
inc
pop
pop
fdivrs
test
push
out
xchg
cmp
lock
push
in
int3
mov
xchg
inc
lcall
insb
xchg
inc
push
inc
mov
push
jg
ljmp
xchg
mov
cmp
ret
out
or
mov
inc
data16
cmp
popf
add
pop
in
lahf
cld
lock
ds
aam
mov
cld
jecxz
dec
jg
mov
jge
pushf
clc
pop
out
sbb
sub
dec
adc
int
push
fisttpll
push
iret
loopne
adc
lret
out
mov
sbb
lret
mov
ljmp
loopne
push
push
sbb
shlb
loope
loope
es
pop
xor
push
in
jns
fimull
inc
xor
gs
cmpsb
add
sub
xchg
lea
fldpi
and
stc
ss
test
or
hlt
inc
outsl
hlt
test
mov
sbb
push
loope
inc
pushf
imul
pop
sbb
ret
xor
insl
jge
push
clc
ljmp
pusha
pushf
mov
test
inc
fdivrs
js
xor
cmpsb
daa
push
xlat
ja
add
sti
into
inc
mov
call
loopne
push
mov
int
jb
in
sbb
insl
cmpsl
sbb
popf
fcompl
cmpsb
fistps
and
pop
push
mov
add
jns
lock
jno
or
mov
fistpll
pop
inc
rcr
add
mov
add
arpl
xorb
out
cmp
popf
xchg
dec
sub
nop
jns
xor
ret
dec
jg
bound
pop
ret
mov
cmp
repnz
loope
addr16
mov
dec
xchg
je
cltd
insl
sbbl
or
int3
mov
mov
cli
fwait
ja
mov
shll
lret
negl
adc
aam
ds
mov
mov
jecxz
xchg
jge
and
rcll
mov
fwait
sbb
test
out
mov
out
inc
cwtl
test
dec
mov
jmp
mov
pop
adc
test
cs
lock
stos
mov
hlt
push
and
fidivs
jecxz
sbb
hlt
inc
add
push
xchg
mov
das
or
test
push
mov
and
lahf
push
jp
and
sub
iret
xor
gs
imul
out
add
mov
adc
push
push
cmpsb
loope
stc
pop
sti
adc
mov
mov
jo
xchg
sub
xchg
xchg
outsb
xchg
xchg
lods
lahf
into
aaa
rorl
inc
andl
cmp
enter
and
xchg
mov
stos
aam
call
fs
and
mov
dec
cld
sarl
test
inc
gs
sti
lahf
out
and
dec
xchg
sub
sub
inc
aaa
cltd
int
lcall
inc
shrl
jle
mov
ljmp
mov
lret
popa
adc
push
jmp
loop
dec
pop
sbb
xchg
push
mov
cmp
pusha
iret
aad
repz
jae
shlb
push
and
aaa
jns
xor
cmp
std
lods
mov
xchg
fldenv
xchg
cmp
sub
dec
out
pop
xchg
es
vxorps
cltd
sti
aam
add
push
sahf
push
jns
add
sbb
frstor
mov
and
pop
mov
adc
out
mov
es
cmpsb
pop
or
in
inc
out
fsubrs
ficoml
fldenv
mov
mov
dec
mov
jg
adc
mov
pop
xchg
loope
sarb
cmp
fbstp
add
addb
xchg
jmp
cmpsb
scas
out
movsl
or
cmp
sbb
icebp
or
fidivl
push
mov
shrb
daa
cmp
or
lahf
stos
lock
lea
cmp
rorb
insb
mov
lret
mov
mov
insb
test
pushf
pop
inc
mov
les
push
xchg
or
imul
xchg
jp
pop
mov
or
das
cmpsb
test
adc
repnz
pop
rcrb
clc
xchg
mov
fsubrp
enter
xor
push
inc
inc
xchg
inc
inc
xchg
fnstsw
cmp
mov
out
sub
pop
hlt
out
and
xchg
xlat
repz
ret
repnz
testl
cmpsb
and
adc
ds
dec
cs
xchg
jns
mov
dec
test
cwtl
popf
lods
gs
or
inc
push
mov
nop
inc
lahf
in
dec
jmp
mov
dec
or
pop
push
and
pop
pop
cwtl
lods
mov
push
lcall
inc
subb
mov
and
popf
or
mov
adc
push
scas
push
arpl
sahf
outsl
test
scas
sbb
fadd
and
sub
aam
push
xor
aad
insb
fs
inc
sbb
jnp
mov
xchg
mov
push
lods
dec
sbb
mov
mov
or
imul
or
cli
sub
hlt
push
ljmp
mov
es
jle
xchg
arpl
pushf
nop
ret
jmp
xor
pop
andb
xchg
shll
dec
cmp
jg
sti
aas
jmp
dec
fbstp
add
sbb
mov
sub
adc
mov
test
prefetcht0
les
inc
test
mov
xchg
jnp
push
adc
scas
or
adc
aad
imul
cmp
scas
inc
push
cmp
in
aam
adc
push
pop
ret
mov
js
jne
mov
vunpckhps
jp
add
in
inc
shlb
add
push
cmp
scas
repnz
push
mov
test
ljmp
pop
sub
lods
xor
xchg
fsub
in
jecxz
mov
mov
cmc
mov
cmp
gs
add
pop
inc
out
popf
push
xor
xchg
jae
cmpsl
xor
jl
adc
orl
push
pusha
mov
pusha
or
mov
push
loop
jecxz
pop
scas
call
push
dec
popf
add
jns
and
in
fcoml
and
jecxz
into
mov
ficompl
or
icebp
jl
fs
pop
inc
scas
xchg
jmp
out
xor
mov
shrl
fimull
sbb
das
adc
lcall
fucomp
into
fwait
scas
les
testl
dec
jne
pusha
jg
mov
sub
add
jmp
loop
mov
xor
out
xchg
repz
jns
mov
iret
fadds
xchg
jg,pt
pop
xchg
jge
add
jl
sbb
mov
fldcw
lret
push
out
stos
scas
xchg
mov
pushf
rcll
test
loope
rcr
fs
cmp
call
out
aam
test
out
pusha
popf
xor
jne
arpl
add
lcall
fwait
xor
push
fwait
stos
paddusw
sbb
sarb
adc
aas
xor
push
pop
fwait
lcall
xchg
jo
gs
movsl
sbb
bnd
fiaddl
push
out
dec
ret
cs
jb
mov
loop
ficoml
out
mov
mov
enter
leave
fwait
dec
push
push
scas
xchg
int3
xor
jnp
lahf
dec
inc
jmp
repnz
xor
jbe
jo
add
sub
test
cs
cmp
dec
repnz
sbb
std
push
outsl
mov
mov
xorl
or
fwait
std
xchg
std
or
inc
mov
dec
aaa
inc
sbb
icebp
and
jne
xchg
adc
movsb
es
push
out
dec
cmp
pushf
jnp
cmove
mov
and
cltd
push
jmp
rorl
sbbb
cli
add
xchg
xchg
stos
test
or
xor
mov
pop
insl
movsl
push
sub
cld
pmulhuw
add
or
push
and
cmp
adcl
cwtl
inc
rcrb
push
mov
repz
and
mov
out
dec
mov
mov
pop
andb
pushf
pop
test
push
pop
cli
mov
insb
sbb
jmp
jb
xor
xchg
inc
loope
je
in
mov
dec
stos
ljmp
xchg
cmp
or
xchg
insb
shlb
or
push
movsb
sub
in
gs
and
fwait
jae
xor
cmp
mov
fs
push
xor
xchg
into
pop
clc
imul
push
loop
mov
fldl
sub
mov
push
dec
insb
in
cltd
cwtl
jmp
pushf
pusha
push
mov
jp
movsl
arpl
mov
inc
insb
stc
xchg
aas
jb
adc
inc
and
add
pop
jmp
call
leave
cmp
into
push
repz
popf
xor
repnz
shll
inc
lahf
xchg
addr16
cld
adc
pop
mov
pop
test
xor
xchg
add
lret
repz
xchg
adc
enter
je
pop
fsqrt
jb
mov
es
lock
fimull
loope
in
pushf
mov
xor
cld
cmp
stos
or
xor
arpl
mov
mov
sbb
jns
add
test
leave
jl
cmp
fstps
test
lret
shll
cmpsl
adc
testb
mov
cmp
mov
push
xchg
stos
xor
pop
ret
dec
js
xlat
and
and
mov
mov
jae
mov
mov
push
dec
sbb
in
jno
out
aad
stos
xchg
mov
das
push
movsb
loop
push
and
aaa
test
fisttpl
xor
rcl
sub
or
hlt
push
cmp
in
test
dec
aam
icebp
insl
ror
fdivr
xor
jmp
loopne
push
lcall
sbb
jl
add
das
jns
xchg
int
xchg
pop
pushf
adc
in
mov
mov
sbb
jae
dec
lahf
scas
in
mov
xchg
cmp
sbb
stos
aam
hlt
idivb
out
mov
mov
movsl
and
sbb
jo
or
aas
mov
loop
jo
rorb
xchg
andl
hlt
int3
jmp
neg
enter
sub
mov
fsubrs
xor
xchg
mov
mov
push
xchg
mov
daa
les
mov
ror
cld
dec
and
mov
movsl
hlt
cmp
loopne
xlat
orl
or
inc
lret
pop
popa
aad
jno
mov
bound
mov
aad
xchg
stos
das
and
cltd
mov
sahf
test
and
popa
stos
loop
xor
loop
mov
jo
cmp
jb
xchg
lock
push
pop
cs
adc
daa
push
adc
adc
jle
cmpl
andl
mov
sub
mov
jmp
test
sbb
cmp
mov
sahf
cmp
test
cmp
icebp
mov
sub
rolb
popa
test
icebp
shlb
xchg
jnp
push
push
test
xchg
jmp
lret
jle
pusha
jae
mov
aas
push
mov
mov
fimuls
sbb
dec
jmp
pusha
or
pop
idivl
dec
push
je
sbb
mov
jp
adc
sbb
add
ret
xchg
fstpt
inc
adc
adc
adc
mov
lret
sub
xchg
fcoms
sbb
notl
xlat
leave
hlt
cs
stos
mov
add
divl
aam
imul
pop
gs
pop
data16
dec
jg
movsb
mov
lds
lcall
add
lock
add
loope
mov
shl
mov
in
inc
mov
shr
lock
xchg
adc
ljmp
out
lcall
dec
in
cs
cwtl
inc
imul
clc
mov
pusha
or
in
pushf
sbb
push
mov
fcmovnbe
lret
popa
jno
xchg
stos
stc
icebp
push
pushf
bound
les
imul
pop
ret
inc
dec
mov
mov
insb
jp
mov
es
mov
arpl
xchg
mov
mov
inc
mov
xchg
pop
inc
adc
xor
nop
mov
lds
fmuls
mov
lds
jae
arpl
mov
sbb
cmp
or
or
pop
lds
pop
mov
rorb
mov
xchg
or
stc
shl
add
add
iret
mov
jbe
daa
aam
fnstcw
ljmp
cmp
fistpl
mov
pop
in
pop
inc
cmp
push
stc
dec
xor
into
mov
loop
das
movsl
stos
sub
ret
ret
stos
pop
test
pop
lea
in
cmpsl
mov
cmp
adc
shlb
sbbl
dec
aad
movsb
subl
in
mov
addr16
and
pop
xchg
mov
sbb
cmp
loope
fstl
lret
cmp
call
stc
iret
dec
das
cmp
mov
dec
sbb
fidivrs
lahf
movsl
repz
mov
and
and
lahf
std
imul
add
shr
cmp
and
lock
pop
fs
sub
cld
addr16
movsl
inc
movsb
ret
sub
push
xchg
mov
xchg
push
icebp
pop
sti
mov
mov
pop
test
sub
sbb
mov
adc
xor
or
test
ja
in
fwait
lea
aas
and
cltd
pop
mov
push
addb
insl
and
aaa
sbb
sbb
sub
lea
in
cwtl
pusha
ds
xchg
pushl
jmp
push
inc
add
adc
ret
add
mov
sbb
pusha
fs
cmp
cwtl
push
movsl
sub
shll
mov
test
dec
sbb
pusha
sub
ret
push
xchg
jmp
loopne
cmpl
popf
jae
add
jmp
mov
xor
mov
jae
cmc
int3
push
sbb
stos
lret
loopne
rorl
adc
lcall
sbb
jecxz
out
pop
lea
jle
clc
xchg
add
mov
bound
add
mov
test
icebp
jbe
mov
int
fldt
jbe
imul
or
stc
shl
mov
mov
mov
xor
jae
dec
inc
sbb
fimuls
bound
adc
repnz
xchg
iret
jp
mov
dec
cmp
shlb
orl
cmp
les
ret
add
syscall
xchg
inc
jno
int3
jae
ret
dec
inc
inc
fidivl
jns
lret
fidivl
out
push
inc
stos
xchg
mov
aad
pop
aad
lods
mov
leave
xlat
cmc
nop
and
fstpl
xchg
mov
add
mov
popa
leave
pop
xchg
std
loope
push
push
loope
xchg
cld
nop
js
roll
hlt
repnz
loopne
cmpsb
cltd
fcomps
xlat
or
notl
cltd
push
dec
xchg
cwtl
sahf
mov
inc
or
sub
xchg
imul
fistl
push
stos
add
jge
jge
stos
jg
cltd
arpl
repz
icebp
dec
aaa
lcall
add
sub
pop
cmp
push
pop
dec
scas
out
loope
and
shrb
push
movsb
aas
in
dec
clc
rorb
fwait
adc
icebp
insl
sti
sti
sub
mov
push
negb
push
mov
in
and
push
sub
or
scas
pop
imul
cmp
sbb
mov
faddl
jle
inc
push
xchg
shrl
dec
add
aad
or
inc
and
mov
jo
jns
popf
cmc
push
test
dec
cmpsl
aad
outsb
in
loop
jg
or
adc
popf
adc
dec
fadds
pop
jmp
lcall
enter
jnp
dec
cmpsb
clc
jmp
aad
fstps
lea
mov
and
pushf
sahf
aaa
or
fstps
jo
xor
shlb
icebp
fdivs
sub
out
inc
pop
inc
out
mov
nop
adcb
cmc
scas
cli
inc
xchg
dec
xor
xor
sub
mov
push
push
pop
shr
repz
lock
sub
jo
push
pop
fsub
cwtl
adc
ss
out
cmpsb
scas
std
icebp
mov
hlt
pop
aaa
sbb
mov
cli
push
push
mov
and
lret
insl
jae
mov
and
lods
mov
lret
imul
sub
stos
jg
sbb
mov
mov
popf
sbb
mov
jl
mov
pop
pushf
lret
xchg
mov
cmp
lock
fadd
xchg
loop
cli
mov
add
mov
mov
mov
test
ret
scas
xchg
jns
div
sbb
sti
and
cs
jge
inc
mov
sbb
cli
or
push
xor
xor
mov
sarl
cli
cmp
mov
mov
lods
pop
mov
fldl
loopne
lods
enter
jecxz
popa
scas
push
sahf
inc
xor
loop
fmuls
jp
mov
aam
add
sub
cmp
add
movsl
xchg
movsb
nop
or
data16
push
xlat
pop
in
popf
push
add
and
dec
push
adc
adc
add
aaa
js
lahf
enter
inc
pop
jle
pop
aam
push
xor
mov
sbb
in
cmp
cmp
sbb
test
scas
xor
imul
insl
add
int
cmp
lea
aas
or
xchg
paddusb
mov
sbb
fdivrl
and
sub
js
stos
insl
jno
inc
pop
mov
jne
ja
mov
clc
cmp
sti
lret
in
add
andl
mov
aam
pop
in
or
jo
shll
mov
and
in
enter
inc
enter
xchg
outsb
push
in
push
hlt
cwtl
jge
int3
out
lret
cmp
into
mov
bound
pavgb
rorl
rcl
aad
rcll
sbb
sbb
mov
daa
fld
pop
cltd
loopne
jge
xchg
or
in
push
js
pop
ret
mov
outsl
adc
lods
lret
adc
push
jns
dec
push
push
ljmp
divb
fstl
leave
cli
addl
cmp
sbb
andl
and
jae,pt
fidivrl
movsl
dec
fsin
fstl
pop
cmp
ret
sub
repz
push
imul
cld
imul
and
aas
add
pushf
jo
mov
inc
xor
or
stc
sti
cmp
mov
mov
mov
mov
movsb
loopne
std
iret
add
mov
xchg
xchg
movsl
xor
dec
into
push
mov
lret
xchg
xchg
hlt
or
lds
aad
adc
out
mov
xor
mov
pop
les
dec
sbb
and
mov
sub
andl
mov
mov
rcll
jecxz
lahf
or
lock
xor
and
mov
add
int3
push
test
mov
mov
stos
js
and
insl
jns
xchg
pusha
or
insb
inc
mov
shlb
push
bound
roll
push
lret
xchg
and
inc
mov
inc
movsb
clc
sub
jne
adc
sbb
push
orb
mov
arpl
mov
xor
xor
lret
lds
stos
lods
sarl
mov
shll
push
clc
ja
mov
cli
out
push
jmp
push
js
mov
inc
popa
push
sbb
das
iret
sub
adc
fstps
mov
xor
jmp
or
mov
mov
and
or
shrl
xchg
ljmp
aaa
cmp
fmuls
sbb
xorl
cwtl
cmpb
inc
add
mov
das
cmp
andb
loope
mov
loopne
int
inc
gs
clts
sub
jp
mov
push
or
test
mov
stos
adc
pop
in
xchg
push
mov
jg
mov
lret
sbb
fsubrs
xchg
add
cwtl
lret
pop
mov
add
ror
stos
inc
cmpsl
insl
mov
in
ja
stc
sub
aad
xchg
mov
shlb
popf
flds
xor
xor
dec
pop
inc
inc
cs
outsb
inc
popf
and
xor
or
enter
test
nopl
xchg
sub
int3
fmull
cmp
dec
les
inc
push
les
push
mov
ljmp
sbb
jne
ss
sbb
xchg
cmp
jb
je
repz
ja
jmp
into
jne
mov
xor
mov
jo
mov
fs
sub
mov
jp
popa
adc
add
outsl
test
fiadds
fmull
test
aaa
out
les
push
sub
dec
xor
inc
mov
jge
mov
mov
dec
ret
xchg
cwtl
mov
fld1
jmp
cmp
pop
sti
jne
stos
add
sbb
subb
adc
test
movsb
les
cmp
in
movsb
orb
imul
push
inc
sub
jg
shlb
lret
popa
push
xor
jecxz
xchg
lea
xadd
mov
iret
lods
and
mov
jle
add
xchg
or
test
add
xor
mov
push
adc
and
inc
loope
dec
dec
adc
stos
addr16
in
cli
repnz
mov
iret
inc
mov
loope
inc
xchg
mov
test
out
xchg
push
xor
cmp
into
mov
xchg
scas
mov
iret
push
jbe
aas
push
loop
nop
shrl
clc
xchg
xlat
mov
in
lods
mov
mov
adc
lods
in
nop
lods
stc
int3
int3
int3
lret
icebp
jle
inc
push
out
pop
mov
les
xchg
sbb
rcr
xor
cmp
jle
adcb
pushf
pop
int
popa
jmp
in
fistps
xchg
mov
shl
lock
fwait
inc
addr16
and
rcr
sarb
xor
in
xchg
adc
lock
idivb
cmc
popa
clc
jl
xchg
sar
push
mov
leave
mov
outsb
sub
push
xchg
scas
dec
mov
cmp
jno
mov
add
inc
dec
cmp
mov
xchg
mov
ja
stos
cmp
in
pop
ret
scas
push
les
cld
mov
xor
addb
and
cltd
sbb
xchg
mov
push
js
and
add
push
xchg
mov
jae
xor
daa
gs
fsubr
lahf
push
test
imul
cltd
loop
xor
push
pop
std
fwait
jl
lock
and
inc
cmp
xchg
loopne
sub
inc
callw
add
jg
adc
pop
or
lds
add
jae
out
mov
clc
ja
lods
subl
test
cld
ds
adc
scas
out
mov
dec
jmp
enter
leave
gs
insl
adc
dec
mov
or
jnp
xor
scas
jle
or
int
sbb
aaa
into
adc
add
sahf
push
and
lods
sub
imulb
aam
adc
gs
adc
fcomp
fwait
jno
jmp
pop
outsl
fs
xchg
sbb
test
cmp
jg
xlat
cmp
xlat
lret
mov
pushf
mov
outsb
mull
cli
fisttps
jne
loop
bound
mov
outsl
xor
ljmp
push
dec
aas
jg
mov
mov
pop
xchg
mov
js
incl
sbb
cld
or
add
lock
inc
cwtl
rolb
cli
stos
sbb
xchg
pusha
bound
xor
lds
int3
cmpsl
cmpsb
xor
jge
aam
and
leave
decb
in
jo
rclb
dec
xor
jge
adc
inc
icebp
cli
ja
cmp
adc
ja
enter
and
xchg
in
enter
addr16
rcll
lret
sbb
adc
push
cmpsl
push
mov
push
pop
push
add
jp
scas
add
cmp
pushf
cmp
clc
sub
mov
pop
mov
cmp
je
push
mov
outsl
push
jbe
sarl
hlt
dec
push
negl
stc
inc
pop
aaa
ljmp
js
xchg
cmc
pop
in
sub
out
hlt
inc
loopne
sub
call
and
lea
xchg
xchg
mov
cmp
mov
inc
lds
or
push
add
jns
cld
add
mov
xchg
int3
insl
add
dec
fisubl
mov
inc
push
pusha
clc
cmp
in
ret
scas
mov
cmp
call
mov
bound
dec
add
cltd
nop
mov
mov
push
pop
jp
dec
mov
ja
cmc
inc
sub
sub
ficompl
mov
fs
or
add
pop
xor
and
adc
or
xchg
hlt
push
rcl
jge
test
mov
frstpm(287
xor
stc
inc
cmc
mov
xor
into
dec
test
push
jae
mov
mov
int
sub
das
orb
xchg
mov
mov
rolb
iret
shl
das
jge
negb
aad
fists
push
dec
sahf
sti
scas
stos
jb
mov
cwtl
or
push
pop
aaa
cmp
mov
sub
pop
pushf
mov
pop
jg
int
pop
push
dec
pusha
xchg
inc
pusha
ja
lret
xchg
movsb
std
push
in
aam
ret
push
cs
out
aas
inc
pop
sbb
add
jl
dec
mov
cli
loopne
testb
add
cmp
pop
and
jno
pop
ud1
cmp
add
add
test
xlat
out
adc
pusha
xor
xor
xchg
jno
scas
dec
xchg
popf
ds
jecxz
mov
mov
push
sub
ljmp
sar
loope
push
inc
jmp
sbb
sub
sub
nop
pop
fcmove
js
xor
mov
push
fsubr
cltd
add
push
push
dec
icebp
mov
jle
push
das
icebp
aaa
add
testb
rorb
jne
cmp
pop
and
int3
out
mov
lds
cmp
mov
mov
xchg
jle
add
out
or
in
cmp
add
xlat
and
pop
mov
ficoml
adc
mov
push
pop
imul
mov
and
xor
xchg
jnp
pop
fisubl
mov
pushf
jle
fsts
dec
mov
and
push
jb
ljmp
es
sub
cltd
mov
out
pop
int
inc
pop
out
sub
dec
lock
aad
mov
loopne
jecxz
insl
xchg
sub
aad
add
negl
xchg
jle
jle
mov
push
cmpb
cmp
dec
mov
ficompl
and
fs
inc
rcll
inc
pop
inc
mov
push
xor
pop
sbb
fdivs
in
xchg
ss
ss
imul
sub
stc
inc
cmc
add
cmpsb
iret
stc
cmpsl
add
arpl
dec
sub
fwait
xor
and
jp
adc
xor
push
mov
mov
push
in
call
xchg
enter
mov
pop
ds
xor
fistpll
notb
enter
mov
pop
test
push
cmp
add
cmp
mov
fdivl
push
and
out
hlt
stos
insb
mov
mov
xlat
jmp
lea
sub
push
aad
outsb
sub
jp
pop
jae
sbb
inc
sub
loop
mov
in
cmp
testb
out
ja
cli
idivb
into
xor
lea
imulb
sub
jno
sahf
sysenter
mov
test
fwait
jb
inc
push
or
cmp
ret
stos
test
xchg
push
pop
jns
sbb
jno
pop
xor
mov
mov
adc
fbstp
adc
jecxz
fsubrp
lds
add
movsl
dec
sub
pusha
int
and
les
ja
xchg
sbb
xlat
ljmp
add
mov
hlt
adc
push
push
jmp
sub
lock
mov
out
jae
inc
pop
rcll
ret
add
adc
test
clc
mov
mov
cltd
std
mulb
lret
mov
cmp
push
mov
data16
int
add
pop
jno
adc
aam
xchg
xor
xchg
or
mov
cmpsl
lret
xlat
in
call
test
and
mov
fstpt
pop
push
imul
icebp
imul
mov
sub
out
pop
jmp
cld
xorl
sahf
repnz
mov
sub
pop
cwtl
frstor
jbe
test
in
pushl
mov
shll
mov
in
cmp
push
sti
push
mov
cmp
mov
dec
data16
push
or
push
inc
inc
sbb
in
test
cmp
pop
cli
mov
add
jp
adc
inc
sahf
test
and
inc
icebp
xchg
inc
call
inc
lahf
aam
lock
adc
pop
roll
mov
and
repz
mov
sub
adc
add
dec
adc
jecxz
mov
mov
pop
mov
adcl
push
fwait
sbbl
jmp
mov
ljmp
and
pop
xchg
or
cmp
jmp
scas
dec
xchg
data16
jnp
addb
stos
mov
jbe
push
idivb
sbbb
cmp
jbe
daa
dec
cmp
push
cltd
mov
loopne
mov
dec
jae
pop
lahf
int
into
dec
push
data16
negb
jg
mov
repz
add
test
adc
psllq
cmpl
std
inc
shll
xorb
dec
sar
sbb
mov
fwait
mov
xlat
or
ljmp
les
inc
push
adc
ret
add
lret
xchg
xchg
loopne
inc
cltd
gs
or
pop
bound
sti
dec
xchg
cmp
leave
adc
dec
dec
idivb
mov
and
cmpsl
xchg
js
push
cltd
lods
inc
repnz
fistl
lret
sahf
pop
inc
mov
xchg
nop
ret
add
sbb
in
out
daa
adc
dec
dec
jo
nop
cltd
cmp
stos
orl
or
imul
push
pmullw
stc
or
jnp
mov
sub
inc
pop
repnz
pushf
xchg
add
adc
add
loopne
bound
std
mov
jp
pop
pop
iret
push
sbb
cmpsb
jo
cmc
cmp
call
add
test
shll
nop
fistps
jnp
lret
sbbb
negl
jns
xchg
in
xchg
mov
js
pop
jle
int
xchg
add
adc
movsb
popa
mov
call
in
in
jl
add
mov
or
fs
inc
add
pop
lcall
sub
xor
jl
hlt
sub
cmpsb
roll
shr
cli
inc
mov
xchg
stos
sti
mov
bound
mov
setnp
fcompl
cltd
inc
add
sar
nop
mov
mov
enter
mov
leave
scas
inc
cmc
mov
test
inc
pop
ja
in
pop
cmp
ret
rcll
sahf
mov
push
cli
and
lahf
adc
fcomi
fbld
mov
pop
pop
imul
sub
sbb
dec
clc
int3
ret
jbe
fiaddl
mov
jne
sbb
jmp
xlat
adc
jns
push
sahf
inc
in
rcrb
mov
xorl
sbb
pushf
scas
mov
mov
stos
push
xor
lds
lret
pop
jns
sbb
mov
inc
outsl
call
xchg
cwtl
xorb
movsb
push
mov
inc
sub
fsubl
pop
lret
sbb
add
xor
into
inc
aad
pop
loop
inc
mov
inc
dec
sarl
iret
sub
call
mov
mov
or
dec
mov
je
mov
js
or
add
or
push
shl
push
mov
pop
loop
push
into
add
xchg
pcmpgtw
push
lcall
push
aas
shlb
test
jns
fisttps
jo
adc
xlat
sub
arpl
jnp
jecxz
vandnps
sarb
insl
dec
repnz
test
repz
jnp
jle
fnstenv
dec
push
cmp
inc
push
cmp
fs
ret
aad
lret
ss
aam
xlat
xor
rcrl
repz
xor
sbb
inc
jnp
pusha
sub
or
jl
sbb
push
ret
inc
dec
movsb
pushf
lcall
mov
fmuls
mov
lock
inc
jl
xchg
dec
mov
and
jp
jg
arpl
rorb
xor
repz
and
aad
into
and
pop
or
test
add
ja
xchg
in
mov
dec
add
clc
rorl
xchg
arpl
orb
fsubrs
fbstp
popa
cmp
shrb
xor
lcall
sbb
pop
nop
movsb
in
out
insb
xchg
lahf
jmp
adc
out
ret
rcrl
mov
cltd
lock
js
stos
cwtl
adc
and
ljmp
aam
sbb
or
xchg
rcll
repz
fcompl
movsl
out
stos
pop
in
inc
dec
inc
mov
mov
sbb
push
adc
sbb
fmull
sbb
aaa
inc
and
ds
xchg
mov
ljmp
or
adc
and
nop
gs
adc
and
mov
sbb
out
cmpsb
fdivp
fisubl
jp
push
mov
cmc
inc
loopne
and
mov
pop
sub
fadds
cmpsl
mov
out
and
push
adc
or
push
push
lds
insb
push
xchg
lea
jae
push
mov
hlt
lcall
add
cmp
addb
mov
inc
les
stos
adcb
rolb
xchg
xlat
popf
out
test
jno
shlb
incl
shr
hlt
ret
adc
lret
movsl
adc
mov
leave
lcall
push
xchg
jae
flds
push
cmp
xchg
jae
data16
pop
popa
cmp
paddd
inc
cwtl
or
adc
cmc
mov
movl
shl
subl
or
jmp
add
cmp
pop
fldenv
cmp
clc
mov
and
ret
inc
rorb
cwtl
jp
mov
xor
and
imul
pushf
aam
pop
cmpsb
daa
push
xorb
xor
mov
frstor
cmpsl
mov
cmpsb
adc
pop
or
test
sub
fnsave
imul
les
adc
xchg
mov
mov
in
mov
and
andb
cmpb
nop
push
pop
icebp
jbe
push
sbb
hlt
push
add
je
ss
xchg
dec
push
out
jge
popf
jmp
imul
addb
xchg
int
dec
jns
dec
sbb
adc
push
hlt
or
jo
jnp
lock
ss
mov
test
xlat
dec
fnstsw
xchg
mov
mov
fdivl
pushf
int3
andl
adc
add
cwtl
push
bswap
lcall
mov
movsl
es
movsb
mov
pop
sub
or
fsubrs
arpl
cmp
cmpb
les
jle
dec
leave
push
popa
divl
and
sub
inc
add
push
adc
lock
out
loopne
adc
xor
mov
xor
adc
insl
sub
xchg
outsb
dec
cld
sub
mov
sbb
lahf
mov
sub
mov
mov
or
push
out
clc
leave
xchg
out
insl
jo
push
mov
mov
repz
mov
adc
clc
aad
push
cli
sub
test
pop
hlt
in
in
std
inc
mov
sbb
movsb
loopne
xor
test
shlb
dec
dec
pop
or
mov
aam
xchg
lcall
and
mov
pop
enter
jmp
shlb
jne
pop
jb
mov
xchg
fsts
cmpsb
nop
mov
or
mov
pusha
or
mov
pop
and
adc
pop
jnp
mov
fdiv
lcall
daa
sbb
push
add
mov
out
jge
xlat
mov
pushf
mov
hlt
mov
sub
insl
std
add
clc
pop
lret
mov
adc
dec
stc
sbbl
sub
repnz
push
scas
xor
jmp
scas
int3
inc
fs
mov
adc
fstpt
inc
sbb
inc
ja
out
test
inc
enter
inc
cltd
rol
mov
sbb
pop
bound
pop
cmp
xchg
pop
stc
and
cmpsl
pusha
pop
xor
push
mov
pop
mov
inc
xchg
ret
fiadds
rcrb
pop
pushf
inc
popf
jno
mov
call
cwtl
push
addl
cmp
mov
fcom
mov
shlb
inc
lea
popf
rorb
cmpsb
xor
xor
jno
cmp
jns
inc
ficompl
in
aad
xchg
sbb
dec
push
jns
push
inc
aad
mov
xchg
out
inc
mull
rolb
addr16
pop
push
push
movsl
scas
mov
jg
lret
insb
pushf
sbb
out
aas
inc
adc
shll
sub
repnz
inc
cmpsb
sub
loopne
push
les
mov
mov
jno
loope
lret
lods
leave
and
int3
movsb
xor
call
pop
sbb
mov
mov
dec
jo
mov
and
popf
adc
jmp
jle
lods
xchg
aad
stos
mov
popa
jmp
or
out
xchg
cli
xor
adc
jl
jmp
cs
or
mov
dec
gs
repnz
jo
pop
push
push
cmc
cmp
jmp
dec
stos
mov
mov
les
jns
mov
inc
mov
xor
and
pusha
gs
mov
fists
stos
fcmovu
pusha
xchg
sub
mov
push
push
psrad
loop
cmpl
cld
cmc
lret
je
xchg
push
imul
out
cli
push
imul
mov
xchg
mull
dec
lock
fisttps
dec
xor
popa
push
cmp
incl
add
inc
sbb
roll
push
icebp
push
dec
sbb
add
xor
out
sbb
aam
call
sub
xchg
bound
test
nop
add
arpl
testl
lods
out
loope
insb
sbb
cmp
adc
xlat
xlat
pushf
or
call
mov
xchg
mov
jecxz
loope
imul
or
fistpll
xchg
xchg
negb
bound
mov
cmc
mov
lds
fiadds
or
jne
lcall
or
mov
rorl
rcl
subl
add
mov
mov
add
jno
xchg
xor
xchg
ret
sbb
or
jbe
in
cmp
xor
repz
mov
movb
push
mov
mov
xchg
and
push
cmp
mov
sbb
xchg
loopne
inc
or
data16
iret
and
out
push
loope
mov
das
mov
cmp
xorl
lea
push
inc
lret
cmp
lret
fst
xchg
inc
push
sbb
sub
fldl
stos
addr16
and
fucomi
into
mov
xrelease
mov
jge
es
xchg
and
dec
xchg
push
dec
cmp
cwtl
cmp
pop
cmp
or
shr
xchg
lcall
addr16
and
jbe
inc
addr16
pop
inc
sub
sahf
ja
mov
movsl
shrb
loopne
adc
push
cli
mov
call
jno
cmp
test
sbb
or
add
aaa
push
inc
add
push
adc
out
movsl
jecxz
mov
xchg
je
inc
js
loopne
mov
sub
aas
cmp
arpl
inc
ds
test
jmp
rcl
call
pop
push
xchg
add
ja
icebp
push
sbb
aad
mov
and
jecxz
inc
jge
pop
dec
mov
push
in
lahf
daa
repnz
test
ret
inc
daa
leave
pop
adc
icebp
call
inc
xchg
insb
cmc
cmpsl
call
pusha
cmp
adc
inc
mov
sub
and
gs
cwtl
loope
xchg
aad
hlt
mov
test
mov
cli
movsl
mov
jg
test
orb
in
push
cmc
leave
adc
in
adc
sbb
aad
idivb
repnz
roll
test
popf
iret
sub
jl
leave
clc
fistps
or
test
clc
ja
in
arpl
pop
xchg
xchg
ret
popf
stos
lock
iret
add
xchg
scas
movsb
imul
notl
and
fsub
std
xchg
addr16
adc
pop
add
or
cmpb
je
gs
jge
fisubrl
pusha
cld
fwait
jns
push
jle
clc
cltd
mov
fldl
out
fdivs
shlb
dec
jge
jo
add
add
aas
scas
push
aas
pop
or
in
inc
xchg
jmp
mov
push
sbb
std
push
out
cmp
ret
fwait
sub
sub
adc
jl
xchg
in
js
lret
fstpl
adc
add
sub
inc
pop
in
ljmp
jns,pn
and
mov
std
xchg
pop
cmp
sti
push
jb
mov
pop
cwtl
mov
mov
lret
insb
jns
rcll
push
mov
repz
int
aad
xor
aas
icebp
and
sbb
sub
sub
sbb
mov
jl
cwtl
mov
sbb
cmpl
repnz
inc
outsb
xor
or
xor
ret
jg
push
adc
jb
lea
xor
stos
int3
nop
mov
xor
adc
fidivs
icebp
adc
or
sub
jmp
pop
xchg
xor
repnz
mov
or
adc
aad
mov
and
das
mov
ret
xchg
iret
push
or
and
mull
xlat
rorb
ja
push
repnz
push
in
fwait
andl
or
test
or
test
xor
mov
jne
fs
loop
call
dec
fdivl
sub
push
fsts
push
jbe
fstps
mov
cltd
pop
ret
jp
rclb
xchg
in
push
xor
cmc
pop
or
into
mov
mov
mov
mov
jp
enter
mov
push
test
push
push
push
mov
pop
jb
mov
stos
or
pop
push
loop
cmp
pusha
inc
shl
stc
clc
cli
mov
jecxz
pop
push
jl
push
dec
xor
mov
cmpsl
ja
scas
ss
xchg
and
out
mov
loop
xlat
cmp
or
cmc
fcoms
sarb
pop
mov
dec
dec
and
in
ss
mov
addr16
jg
dec
sahf
mov
pop
jg
cmc
pop
mov
xchg
dec
aam
in
mov
mov
ss
jl
jae
xchg
pop
jno
ja
test
mov
xor
mov
fimull
sbb
jg
and
inc
es
xchg
adc
fidivs
pop
aad
dec
popa
sti
call
and
xor
jb
inc
xor
shlb
je
xor
xchg
mov
mov
mov
les
lds
cld
popa
loope
aad
mov
and
dec
popf
jns
xor
or
mov
mov
xchg
les
jecxz
jp
sub
loope
dec
int
into
or
mov
adc
insb
add
pop
xor
fdivl
leave
push
adc
repz
and
ud2
or
mov
sbb
inc
out
fiaddl
dec
scas
inc
ret
cmpsb
jge
mov
stos
sub
sbb
cs
and
cmc
in
loop
push
jb
shrl
add
pop
mov
rcl
les
int
and
imul
jmp
mov
adc
sarl
jp
aad
xor
push
pop
or
jae
mov
enter
xchg
fdivr
inc
es
fwait
mov
add
es
test
cld
sub
std
notb
movsb
xor
mov
lock
mov
pop
aas
lea
fwait
lods
xchg
sbb
out
sbb
insl
nop
jp
clc
fmull
lock
mov
fsts
jns
data16
and
mov
loope
pop
mov
ja
pop
test
ret
lock
inc
mov
imul
popa
dec
idiv
outsb
mov
dec
mov
inc
sbb
test
mov
jae
adc
xchg
fsubr
dec
mov
jns
les
lcall
mov
inc
inc
hlt
insl
adcb
jl
cld
popf
pop
in
andl
aaa
mov
pop
mov
jp
xor
popf
dec
sub
xchg
pop
mov
enter
cs
mov
enter
cld
push
imul
out
out
mov
in
pop
ss
daa
shl
sub
adc
fidivrl
cld
inc
xchg
mov
xchg
ja
jg
push
nop
mov
sub
lea
inc
mov
cmpsl
or
push
cmp
mov
mov
ds
out
sahf
sbb
rolb
daa
sti
shll
fildll
and
outsl
xor
lahf
ds
mulb
ret
sbbb
cmp
idivl
fmulp
stc
into
and
jmp
mov
sahf
jae
shlb
mov
jp
pop
dec
inc
out
fdivrs
xchg
sbb
mov
lahf
shl
pop
arpl
sbb
adc
mov
push
stc
into
sbb
mov
jno
xchg
jno
cli
mov
add
mov
loop
sti
les
sub
loope
lds
mov
pop
fcmovb
loop
fnop
sub
pop
add
jb
out
scas
call
aas
cmpsb
ret
inc
out
mov
sbb
out
lahf
pop
mov
rclb
and
fmulp
sarl
int3
inc
xor
in
mov
subb
pusha
loopne
out
data16
sub
mov
std
aaa
push
adcl
clc
pop
je
lret
jle,pn
mov
cwtl
sub
iret
movsl
add
shl
shr
mov
lds
cmpsb
lahf
insl
adc
mov
mov
fstl
mov
outsl
push
mov
decl
inc
pop
outsl
xchg
lock
mov
aaa
sub
and
popf
testb
scas
cmp
mov
jecxz
sbb
mov
out
lods
shrl
add
jmp
and
rcll
enterw
jo
mov
pop
xorb
or
fdivrl
add
inc
cli
icebp
out
dec
xchg
adc
popf
mov
jg
adc
cmp
cli
pop
mov
punpckhdq
mov
int3
adc
mov
mov
sub
mov
xor
cmp
pop
bound
fsts
aad
adc
sbb
xor
xchg
or
clc
mov
ret
mov
gs
sbb
xchg
jno
or
subl
movsl
dec
pop
pushf
pop
or
bound
loop
and
sub
xorb
popf
into
mov
dec
mov
mov
in
roll
cmp
inc
and
cmp
movsl
scas
xchg
pop
jae
cmpsl
push
inc
dec
into
inc
sbb
dec
cs
add
pop
lret
rcr
aas
repnz
cmpsl
push
xor
inc
into
mov
test
testl
pop
push
push
or
jl
fucom
mov
dec
jl
movsl
mov
sbbb
or
or
fistpll
in
lods
add
inc
adc
adc
adcb
add
dec
iret
jb
dec
mov
and
popa
push
jbe
jle
sub
sahf
jae
jp
jbe
lret
pop
sti
test
cmp
xchg
sbb
insb
aas
repz
daa
push
dec
daa
in
jb
push
add
dec
sub
adc
adc
into
jg
push
stc
int3
and
pop
fistps
lret
dec
xor
ret
push
pushf
inc
sti
lret
sub
sub
cmp
and
rorl
lret
xor
js
aaa
fimuls
loope
sub
sahf
cltd
xchg
add
adc
in
imul
andb
jbe
stos
fs
dec
dec
mov
jnp
aaa
xor
cmp
push
ja
iret
test
push
xchg
xchg
fs
arpl
and
ftst
xchg
sbb
mov
push
pop
xor
cli
adc
outsb
add
xchg
push
sarl
ljmp
clc
dec
loopne
sahf
std
mov
aas
nop
ds
ja
js,pt
int
xchg
adc
imul
xor
clc
mov
pop
push
std
pusha
jg
mov
mov
lds
dec
mov
stc
or
lods
mov
pop
stos
or
fisubrl
mov
cmp
pop
cltd
js
sub
call
push
mov
push
mov
dec
or
loop
pop
in
fwait
xor
das
push
mov
loopne
jns
sub
push
xor
shl
jle
xor
jo
pop
sbb
in
mov
lock
aad
cltd
orb
push
bound
ficoml
mov
aam
nop
imul
mov
pop
add
clc
jb
lods
lods
push
cmp
adc
mov
pop
cmpsl
mov
popf
xchg
pusha
inc
mov
push
pop
add
nop
xor
icebp
mov
jp
sbb
subb
popf
xor
dec
jnp
sbb
sub
test
in
test
jl
mov
test
das
sub
clc
add
add
mov
push
mov
jecxz
cmpsb
loopne
out
and
addl
lds
xchg
xlat
inc
cmp
inc
mov
jns
adc
pop
lcall
out
jnp
rclb
push
das
das
cmp
in
sbbb
cli
in
inc
sbb
loope
jmp
ret
xchg
movsb
cmp
js
cmpl
adcb
lods
sub
lahf
stos
call
add
mov
add
push
or
in
xor
addl
cs
or
daa
mov
and
fcmovnbe
and
ja
xor
fbld
xchg
mov
fisubrs
mov
jp
adc
or
sub
out
das
jge
test
pop
sub
sub
repnz
xchg
imul
sbb
fstpt
push
lods
inc
loopne
jle
cmc
stc
mov
fwait
push
push
ret
xchg
sbb
and
pop
outsl
into
mov
les
xor
xchg
shl
and
adc
roll
into
xchg
xchg
mov
and
mov
ret
inc
cmp
pop
stc
jne
adc
popf
inc
loope
out
cmpsl
mov
lcall
push
mull
cmpsl
pop
andl
sbb
sub
loop
sbb
incl
pop
jbe
or
lcall
mov
fildl
shll
inc
in
push
jp
dec
fnstcw
das
dec
sbb
xor
or
mov
pusha
int3
out
aam
mov
insb
mov
in
fidivrs
aaa
fs
sub
push
adc
in
pop
and
fsubrs
pop
push
mov
jo
std
iret
addl
and
enter
std
jb
mov
lret
mov
addr16
xchg
inc
sbb
aaa
mov
lcall
pop
pusha
adc
dec
cs
mov
push
std
dec
adc
jmp
push
cmovl
test
ret
push
push
or
push
cwtl
jmp
call
cmpsb
dec
cmp
inc
daa
pusha
or
int3
mov
loopne
mul
and
orb
fmull
inc
push
mov
xlat
inc
inc
fidivrl
shrb
shrb
mov
das
jl
jmp
nop
jne
pop
pop
mov
push
inc
jg
call
ss
push
decl
popa
outsl
loope
fwait
movsb
mov
fucom
push
scas
and
fwait
jle
leave
and
xor
jecxz
test
gs
ror
jns
xchg
ret
adc
stos
push
lcall
lea
aad
repnz
divps
outsl
popf
loopne
loope
dec
fisttps
call
jge
lock
enter
ljmp
push
aad
dec
adc
loop
sbb
adc
pop
sbb
mov
cmp
test
xor
lds
add
js
std
cmp
jb
jl
sub
inc
xchg
arpl
mov
pushf
and
rorl
add
sbbl
aad
lahf
mov
in
test
xor
mov
dec
jmp
cltd
xchg
aaa
iret
xchg
adc
push
cmpsb
xchg
jmp
gs
test
shr
sahf
push
xchg
jle
sbbl
xor
into
xor
and
jle
sbb
pop
loop
pop
movsl
sub
lahf
or
or
fbld
or
fidivl
sbb
mov
xor
jnp
cmp
adc
lods
jecxz
xchg
xor
sarb
pushf
jmp
insb
dec
xor
popf
inc
in
das
lea
sarl
ds
inc
fisttps
lret
mov
mov
pop
push
sub
int
add
lock
popa
insb
mov
jae
sub
mov
sahf
out
adc
rcrb
or
mov
push
xchg
push
mov
clc
lea
pop
jae
loope
mov
and
fsubs
pop
movsl
jle
rorl
fisubl
mov
inc
imul
lds
pop
fdivr
adc
inc
ljmp
aaa
int
cmp
and
or
std
in
mov
lcall
rorl
cmp
jmp
inc
sub
stos
clc
stos
sub
mulb
xor
inc
pop
daa
mov
and
call
rclb
dec
hlt
addr16
lods
test
dec
push
into
push
cs
mov
xchg
mov
sub
sub
cmp
rcrl
in
mov
sbb
scas
sbb
test
or
fldenv
les
xor
mov
rol
rcrl
je
pushf
hlt
dec
or
in
sbb
jl
pop
out
movsb
xchg
and
push
push
leave
jmp
outsl
mov
shll
mov
sarl
lods
subb
mov
inc
imul
mov
and
das
int
notb
test
mov
cmp
test
xchg
inc
xlat
cwtl
rcll
jmp
stc
mov
and
pop
jg
mov
stos
mov
mov
xor
jne
aaa
and
pop
aad
std
or
pop
pop
add
inc
lahf
pop
in
movsb
into
mov
outsb
fisttps
iret
lds
mov
jmp
loopne
outsb
mov
push
movsb
cmp
ljmp
ljmp
cwtl
rcrb
jb
dec
fdivrp
mov
lret
xchg
popf
stc
xor
iret
nop
mov
dec
fmul
in
fimuls
jo
fsubrs
mov
test
das
fnsave
dec
jne
push
xor
clc
es
sbbl
or
bound
adc
and
mov
adc
xor
inc
push
rcl
repnz
movsb
imul
ljmp
push
cmp
mov
mov
pushf
clc
mov
pop
loopne
jnp
out
icebp
xchg
sbb
cmpsb
arpl
dec
lcall
jne
add
lret
enter
iret
xchg
popf
mov
xor
push
lea
lods
pusha
jno
jb
adc
push
shrd
test
insl
lea
mov
clc
or
test
inc
scas
cmp
xor
pop
fbstp
fcompl
fimull
test
fimuls
cmp
add
negb
jmp
sbb
sbb
mov
add
mov
arpl
mov
iret
lahf
xor
mov
aam
test
inc
stc
aam
insb
mov
push
sbb
shr
popf
dec
in
push
push
cmp
adc
xchg
ret
test
rolb
shlb
mov
push
pushf
dec
roll
xorb
inc
inc
je
flds
xchg
sti
popa
bound
pop
stos
jo
inc
adc
fcoml
pop
std
inc
fdivrl
test
xor
and
mov
sbb
ds
inc
js
in
jg
cmp
push
mov
jno,pn
xor
ret
mov
push
sub
dec
sub
outsl
add
cltd
inc
imul
scas
sub
push
xchg
aam
loop
fiadds
notl
mov
xlat
enter
jbe
jp
push
add
mov
xchg
cmp
cwtl
lea
mov
mov
rcrb
xchg
out
pop
rorl
xchg
movsl
push
mov
repz
mov
or
outsb
sahf
sbb
adc
mov
pop
push
rorl
movsb
push
lods
jno
out
cmp
xor
push
je
pop
pop
mov
xor
fcomps
fdivl
out
mov
cmp
mov
sbbb
sbb
and
dec
jge
mov
push
addr16
nop
push
or
pop
push
xor
movsb
dec
xor
test
mov
jmp
outsl
xlat
mov
pop
daa
push
cmc
std
jmp
cmp
lahf
scas
push
push
mov
pop
xchg
cmpl
add
push
sub
cld
fdivs
cli
xchg
faddp
je
sub
cltd
inc
jg
cmpsl
sbb
sub
data16
xchg
sub
pop
pop
xor
stos
andl
mov
sahf
lret
imul
jns
and
cwtl
in
pop
aam
push
cmp
mov
jle
repnz
inc
insl
mov
addr16
xchg
rcrl
xor
lret
add
addr16
xor
push
mov
inc
lds
jo
loop
xchg
clc
push
mov
lahf
int3
fsubr
insb
pushf
push
cltd
pop
push
enter
adc
test
jge
cmpsl
call
adc
mov
scas
push
addr16
pop
bt
test
dec
add
and
xchg
movsl
icebp
movsb
pop
fsts
frstor
or
loopne
daa
xchg
lret
xor
rcrl
xor
fxch
sub
cltd
into
stc
xlat
lock
dec
test
lock
cmp
addr16
lahf
inc
cltd
xchg
rclb
lea
loopne
sbb
push
pusha
xchg
xchg
dec
sub
xlat
jg
les
jmp
mov
leave
call
and
push
hlt
and
mov
loopne
pop
mov
idivl
and
mulb
push
pushf
fnstenv
or
fnstcw
pop
pop
push
mov
in
jb
xor
je
inc
push
pop
scas
and
xchg
test
sbb
fldcw
jecxz
loopne
and
mov
gs
mov
sub
xchg
popf
sbb
mov
je
xchg
stos
push
addr16
push
xor
mov
and
or
pop
sbb
mov
xchg
inc
jbe
and
or
test
imul
ss
push
or
pop
hlt
sub
imul
mov
mov
pop
fchs
bound
push
out
and
pop
push
or
inc
mov
mov
or
fsubl
out
mov
fucomp
addb
stc
sub
frndint
jbe
dec
enter
sub
iret
dec
and
lods
add
lcall
inc
testl
cmp
xchg
jae
test
das
outsb
mov
leave
into
into
inc
xchg
push
sub
call
fimuls
test
les
shrl
hlt
adc
sbb
outsb
sbb
loopne
mov
xlat
push
lods
xchg
in
pop
outsb
mov
jle
mov
inc
inc
mov
adc
cltd
in
mov
pop
aas
cmp
jl
or
xchg
jne
orl
dec
sub
xor
sub
ss
xchg
gs
push
test
cmpsl
stos
sub
and
jg
push
addr16
and
repnz
jmp
xor
adc
push
push
fsts
and
mov
push
les
pop
mov
sbb
xor
mov
add
inc
dec
imul
pop
xchg
jnp
cmp
stos
mov
push
and
ljmp
xor
lods
cmpsl
clc
add
adc
in
push
xchg
adc
xor
mov
mov
inc
mov
add
clc
jns
scas
pop
mov
mov
movsl
out
jl
bound
jae
pusha
movsb
fiadds
push
js
inc
pop
les
lcall
xor
fsubrs
add
pop
mov
bound
push
pushf
pusha
ret
cli
rcll
out
imul
bnd
and
rcrb
aaa
pop
mov
fcomps
mov
out
lods
mov
insl
nop
je
xor
std
mov
fcompl
adc
cmp
push
or
lret
lock
shll
lods
fnstcw
ja
xchg
fistps
dec
mov
cwtl
sbb
scas
test
pop
push
dec
jmp
mov
push
inc
mov
popf
pop
push
jle
inc
shll
jmp
fists
rcrb
out
xchg
sbb
dec
mov
sub
mov
stos
in
arpl
aam
jno
ss
andb
adc
jp
addr16
push
dec
xlat
icebp
xor
mov
xor
sbb
stc
inc
mov
add
std
cmpb
sbb
jno
arpl
icebp
bound
lds
pusha
ja
pop
fdivrs
addr16
pop
adcb
sub
push
pop
and
add
and
add
or
push
and
aaa
iret
mov
lret
imul
repnz
ljmp
in
rolb
loop
inc
inc
in
push
mov
xchg
fdivrl
mov
mov
stos
add
push
adc
adc
sbb
jno
inc
repz
frstor
icebp
add
loop
sub
add
mov
pop
in
fcomi
cmpl
mov
testb
xchg
movb
lea
mov
or
sub
inc
out
mov
dec
popf
sbb
int
daa
shll
addr16
jne
cmp
sub
ja
sbb
imul
inc
outsl
jmp
mov
or
add
jae
sbb
cs
xchg
add
lods
leavew
sbb
in
inc
mov
popa
mov
inc
cmp
lock
mov
dec
dec
sbb
pop
dec
push
mov
sbb
out
int3
sub
mov
scas
xchg
daa
cmp
jge
jp
add
imul
mov
jmp
cld
mov
test
or
sbb
mov
mov
cmp
fsubrs
inc
add
int3
xor
into
pop
jnp
and
sahf
cmpsb
cmp
xchg
loope
je
sub
cmp
inc
or
nop
out
out
jnp
mov
int
xchg
fwait
mov
popa
sbb
jle
jecxz
int
pushf
test
daa
ja
dec
addr16
jp
pop
cld
out
pop
fidivs
cltd
addl
inc
mov
or
shl
imul
daa
mov
xor
jmp
cmpsb
stos
push
xchg
loop
or
push
cmp
xor
lcall
loop
xchg
out
pop
xchg
repz
stos
roll
testl
add
out
js
xchg
loope
sub
fnstsw
leave
push
ja
movsl
jecxz
in
lods
test
jmp
adc
jecxz
rclb
in
adc
fldenv
cli
mov
mov
cmp
mov
in
xchg
fcmovnu
addl
aas
xchg
jp
sub
mov
or
sbb
pop
add
rcrl
push
inc
imul
add
add
stc
lcall
push
data16
pushf
and
pop
pushf
iret
mov
xchg
mov
ds
dec
pop
hlt
mov
dec
iret
icebp
xchg
mov
ljmp
dec
icebp
sbb
mov
pop
pop
mov
mov
hlt
mov
hlt
pop
mov
add
pop
aam
rcl
out
jge
cmpsl
jno
jle
dec
xchg
mov
dec
mov
mov
and
push
lret
push
icebp
dec
daa
mov
mov
int3
inc
je
xor
and
les
push
dec
repz
xchg
inc
xor
rolb
sarl
std
xlat
data16
sub
or
xchg
movsl
test
mov
fcompl
idivl
call
push
fwait
scas
xchg
pop
xlat
out
ds
mov
inc
inc
inc
fwait
int3
pushf
jns
sub
cmp
mov
dec
lret
out
mov
xchg
lods
imul
mov
adcl
inc
lock
mov
xchg
mov
nop
fsubs
in
add
std
jmp
es
out
or
jb
out
outsl
ja
mov
sub
jp
xor
icebp
inc
add
insl
dec
add
je
shll
jg
push
jo
cmc
paddusw
iret
enter
cmpsb
dec
sub
jmp
incb
mov
lock
mov
mov
in
pop
adc
inc
cld
push
enter
and
push
pop
add
dec
into
bound
cmpsb
pop
or
adcb
popa
and
inc
mov
into
mov
add
lock
lret
pop
xchg
push
lret
mov
jo
hlt
dec
and
cwtl
in
cmpsl
pop
mov
fdiv
int
lea
mov
popf
mov
hlt
roll
mov
fisubrs
out
add
push
jmp
push
lock
or
jae
dec
push
fsubrs
stos
js
aaa
pop
pop
push
movsb
ds
add
jb
add
jmp
add
mov
inc
inc
lret
ror
subb
loop
push
adc
jl
xor
xchg
sarl
xchg
xor
mov
test
lds
add
std
sbb
xchg
dec
and
iret
and
ds
lods
or
xchg
jl
aas
xchg
cltd
shr
pop
add
push
xlat
pand
int
into
insb
pop
add
inc
xchg
mov
xchg
dec
in
pop
jbe
adc
push
enter
enter
into
xchg
xlat
sbb
aad
mov
jmp
cmpsb
pushf
xorb
mov
xchg
and
adc
or
dec
adc
std
add
and
push
inc
jmp
sti
pusha
cld
in
shll
pushf
ja
cbtw
rcll
popa
cmpsl
ss
mov
mov
arpl
les
jp
dec
int
frstor
jne
fs
lcall
adc
iret
aas
int
mov
jg
in
mov
dec
xchg
mov
inc
shrl
clc
pop
insl
or
inc
mov
sub
add
mov
add
push
cmp
inc
mov
das
mov
pop
shlb
outsb
inc
xor
dec
jo
lret
push
and
gs
int3
loope
fsubl
inc
add
in
mov
add
dec
inc
xor
adc
in
out
idiv
in
in
mov
jp
push
or
mov
ss
adc
xor
sti
out
cmpsl
fcomi
out
call
nop
fldenv
iret
mov
scas
nop
jmp
pop
ret
lahf
cld
jle
outsl
cmpsl
xchg
cmpsl
or
cs
add
cmp
iret
push
mov
dec
xchg
mov
jb
mov
arpl
or
aam
add
pop
leave
mov
jae
jae
push
std
push
pop
test
mov
xchg
mov
stc
nop
pop
jbe
add
cmc
stos
push
pop
gs
sub
icebp
dec
out
mov
jmp
lods
cltd
sbb
or
mov
test
sub
cmc
ja
mov
ja
fisttpl
sub
and
xor
sbb
sti
outsb
cmp
xchg
adc
dec
inc
mov
add
jp
mov
cld
pop
jne
and
adc
cli
push
jno
lods
adc
jmp
movsl
dec
sbb
xchg
divb
or
ret
cmp
xorl
clc
inc
mov
mov
leave
lcall
xchg
mov
ret
adc
or
xor
enter
mov
loop
xlat
bound
mov
fnsave
hlt
push
popa
pop
out
mov
xor
xchg
cmc
xor
pop
xor
scas
cwtl
lock
fcmovb
rcrb
xor
add
cmc
lret
movl
jno
movq
lods
neg
xchg
cmp
cltd
push
popf
push
xchg
ficoml
pusha
call
aas
mov
or
and
sbb
inc
mov
push
mov
inc
adc
sbb
js
loop
mov
sub
xchg
mov
and
test
sbb
or
imul
test
mov
sbb
hlt
outsb
aas
out
xchg
adc
aam
jae
push
je
test
testb
mov
imul
outsb
sub
movsl
or
sub
mov
adc
xchg
lret
adc
sub
or
repz
xor
incl
andl
mov
jge,pt
jge,pn
jl
inc
stos
icebp
sbb
lock
and
mov
mov
xorl
pusha
or
sbb
mov
jne
mov
neg
pop
or
cmp
jmp
gs
dec
ret
push
test
lret
sbb
xor
popf
popa
xor
mov
divl
ss
jecxz
inc
push
push
pushf
outsl
imul
shl
lcall
repz
jmp
inc
jmp
pushw
and
lret
adc
xchg
sub
adc
mov
aaa
sbb
push
mov
mov
xchg
or
arpl
pop
lcall
mov
mov
loop
aas
cs
push
loopne
pop
and
cmp
push
or
adc
pop
jle
int
jb
test
cs
mov
mov
add
jge
cmc
aad
mov
stc
dec
xchg
sub
pushf
test
push
xlat
and
dec
inc
pop
into
aas
subb
pop
and
push
inc
fimull
jbe
bound
loop
add
fstl
mov
fcmovb
testb
xorl
stc
dec
mov
fwait
lcall
test
jmp
ret
lods
std
pop
push
pop
sbb
pop
mov
xchg
rorb
ds
xor
shrl
ret
test
mov
pop
icebp
mov
loopne
mov
pop
loopne
cs
jns,pn
out
pop
out
loope
sbb
mov
inc
sbb
pop
cmp
add
lock
addr16
outsb
sbb
jns
out
cmp
repnz
aas
jb
or
js
lea
gs
mov
mul
std
test
insl
mov
jmp
mov
int3
pop
fnstenv
jmp
cmp
jno
fisubrs
ret
test
out
idivb
aad
xor
push
fcmovb
ret
push
push
lds
movsb
ss
dec
mov
ret
jmp
xchg
nop
pop
mov
iret
adc
sub
xchg
mov
pop
dec
push
jno
sbb
xchg
mov
mov
int3
bound
out
in
movsl
mov
sbb
cmp
jge
or
or
xor
xchg
xor
mov
sbb
ja
cmp
mov
sbb
pushf
loopne
adc
js
xchg
andl
sbb
mov
int
popa
push
pop
rcr
mov
pop
test
lret
leave
cld
inc
xchg
xor
lods
add
in
dec
aaa
jmp
ds
pop
call
sbb
mov
dec
and
movsb
push
mov
fidivl
call
xchg
das
xor
fidivl
lahf
das
mov
ja
add
xchg
adc
cmp
fidivl
mov
jbe
fnstsw
add
or
mov
add
xlat
arpl
sbb
cmp
adc
xor
xchg
js
pop
inc
add
pushf
scas
call
pop
adc
pop
dec
in
mov
lahf
lcall
das
jne
out
cli
jb
stos
stc
sbb
cmpsb
dec
cmp
imul
rolb
enter
and
pusha
add
xchg
mov
xor
dec
push
dec
hlt
sbb
sbb
mov
lods
sub
js
xlat
mov
push
and
sbb
inc
stos
cwtl
in
lcall
fwait
lret
cmp
pop
push
aas
loope
mov
mov
lret
xchg
cmp
pop
pusha
rsqrtps
in
xchg
test
loop
jae
dec
pop
or
rorl
ljmp
fidivl
in
dec
cli
icebp
cmc
push
mov
jno
sub
bound
pop
call
dec
je
loope
out
cmpsb
mov
nop
and
cwtl
jmp
mov
mov
and
xchg
push
push
lds
inc
fmuls
pmaxsw
fldcw
ds
jle
shl
test
popa
sbb
sbb
push
sub
pop
cmp
fidivs
icebp
sbb
lods
es
rorb
dec
sahf
dec
insb
pop
pop
mov
sti
sbb
leave
out
cmpsb
test
mov
decb
and
pop
xlat
cmp
sub
ficomps
sbb
inc
pop
pop
aad
sub
cmp
in
outsb
loopne
sub
scas
mov
aam
cmp
leave
jo
aad
stc
push
jecxz
lds
negl
push
or
out
paddb
and
loop
push
adc
ds
or
xor
icebp
test
inc
inc
in
push
xor
mov
adc
das
fisubl
jb
ret
cmp
mov
cmpsb
mov
push
or
fsts
fstpl
pop
push
mov
arpl
les
out
fmuls
rclb
mov
pop
push
pop
add
push
pushf
inc
sbb
mov
pop
into
arpl
loop
xchg
mov
pop
pop
adc
adc
mov
or
jo
orl
dec
aad
fdivrl
pop
xchg
and
insl
ret
adc
jl
xchg
push
xchg
ret
jnp
mov
cmp
xor
pop
sar
jl
sbb
push
cmp
inc
add
push
inc
xor
pop
pop
shlb
repz
pop
inc
lret
fnstcw
and
jg
inc
orb
dec
cmp
dec
fnsave
jb
call
ja
in
lret
xchg
mov
fnstenv
jo
es
sti
fs
sub
popl
and
cmpsb
call
cmc
cltd
sbb
jns
out
mov
xchg
add
mov
popf
adc
ret
mov
mov
aas
xor
jb
rclb
jmp
inc
shrl
push
je
inc
xchg
inc
int3
inc
inc
int3
cltd
xchg
sbb
test
mov
out
int
and
outsb
rorb
movsl
aaa
or
scas
or
out
imul
mov
cmp
and
insb
shl
lods
jmp
add
and
out
xor
jo
add
xlat
inc
call
mov
aam
pusha
xchg
fst
pusha
inc
pop
jb
cs
cltd
nop
frstor
pop
xchg
or
sahf
popa
jecxz
cmp
ss
inc
adc
fninit
push
movsl
int
loope
adc
xor
push
clc
adc
mov
mov
xor
or
mov
stos
int3
mov
mov
loopne
adc
pop
stos
aas
sbb
cmp
xor
fcoms
pop
inc
push
push
push
cmp
add
stc
mov
dec
pop
lcall
ficoml
test
sti
icebp
test
outsb
ret
cmovae
mov
jle
ljmp
fldl
scas
xor
pop
mov
and
dec
data16
cltd
jbe
mov
push
pop
sub
mov
push
ja
inc
jg
int3
repz
rorl
movsb
div
jns
xor
push
cmc
shrl
pop
mov
push
rcr
jge
adc
jmp
ret
sbb
ljmp
inc
shlb
fsubp
or
sub
jg
ds
inc
aas
mov
pop
adc
clc
leave
repz
aaa
pop
jns
repnz
adc
dec
cltd
fisttpl
jge
fsubs
call
incb
popa
je
dec
jle
or
sbb
add
xchg
imul
inc
mov
pop
fadds
inc
sbb
ficomps
sub
stos
lods
mov
dec
sbb
ficompl
mov
jmp
pop
dec
cwtl
into
pop
cmp
inc
mov
sub
xor
dec
fistps
inc
idivl
mov
xchg
and
push
jmp
inc
push
xor
cmp
fisubrs
push
jmp
add
loopne
push
adc
and
push
ret
or
cmpsl
inc
movsl
sbb
xchg
jo
cli
mov
movsl
inc
mov
jne
icebp
fisubrl
cmc
push
and
push
lret
sub
xor
stos
xchg
xor
cmc
xlat
insl
cs
cwtl
sbb
out
and
jb
xchg
xor
xor
jp
aaa
xchg
push
or
mov
loope
mov
add
andb
daa
push
sbb
pusha
xor
cmpsb
and
inc
in
xor
lcall
dec
mov
aam
sub
push
sub
daa
mov
out
mov
js
loopne
push
push
in
cmovle
rcrb
dec
or
je
add
scas
adcl
stos
xor
sub
lahf
and
or
cld
sbbb
into
outsl
sahf
push
pop
cltd
add
cli
dec
inc
adc
testl
movl
sarb
out
add
pop
jp
mov
fdivrs
xlat
aas
jb
es
enter
sbb
rol
adc
das
int
mov
pop
mov
jo
ljmp
cli
dec
and
inc
aam
subb
cmp
mov
push
sub
dec
es
lret
fnsave
mov
lods
aad
xchg
movsl
into
sti
lds
scas
jae
dec
cmpsl
pop
in
lods
dec
lods
fwait
ds
pop
cmp
inc
test
mov
js
adc
mov
pop
inc
lret
sbb
and
add
inc
fiadds
mov
inc
push
jmp
sbb
jmp
mov
out
out
pop
adc
out
mov
and
mov
shl
dec
sbb
scas
add
fimull
push
into
andl
cmp
cltd
dec
into
in
add
fcoms
mov
fsubrs
jns
xchg
subl
pusha
lock
pop
cld
mov
add
clc
inc
push
mov
adc
scas
scas
xchg
sbb
in
call
aaa
sbb
cmpl
mov
ficoms
es
test
sbb
xor
adc
jno
fsubs
in
mov
xchg
or
roll
jmp
outsl
add
loop
pop
dec
mov
and
int
xchg
inc
shll
outsl
cld
lcall
jne
shrl
or
inc
lods
in
lret
cmp
jbe
dec
cli
or
subb
mov
js
in
add
test
cmp
xchg
dec
inc
jae
inc
scas
cld
dec
add
jmp
push
adc
fiaddl
cmpsb
add
and
dec
shll
rcrb
out
scas
les
mov
lea
jb
leave
mov
mov
cltd
lahf
ds
xor
fnstcw
insb
add
mov
adc
push
imul
dec
xchg
rcr
or
push
fcomps
and
push
int
jae
loopne
aaa
mov
xor
sbb
sbb
outsb
mov
xchg
sbb
fstps
jno
push
push
popa
add
loop
xchg
test
shrl
cmp
xor
into
call
xchg
sbb
insb
mov
xchg
mov
cmp
dec
sbb
ret
or
and
fisubs
in
mov
andb
xchg
jge
scas
jne
into
dec
clc
dec
loope
jmp
inc
jmp
int
mov
xchg
imul
sbb
mov
cmp
into
iret
mov
dec
pop
pop
imul
mov
sub
push
cmp
ds
xchg
imul
aad
xlat
outsb
inc
sti
aam
imul
push
out
and
mov
mov
pop
mov
adc
cli
mov
dec
test
inc
dec
dec
sbb
add
push
dec
cmp
cmp
dec
rclb
fcomps
rcr
and
mov
dec
gs
jae
xchg
insl
rcr
adc
out
push
adc
adc
pop
or
mov
ja
loope
xor
sub
scas
push
inc
lret
test
push
mov
lahf
and
sub
mov
pop
arpl
mov
push
js
push
dec
loopne
dec
lods
sub
inc
mov
hlt
call
daa
cwtl
inc
jbe
mov
jmp
mov
out
jne
mov
push
outsb
bnd
push
xchg
adc
lret
in
leave
mov
adc
shlb
push
out
inc
xchg
movsb
popa
fcmovb
lcall
fnsave
cmovne
sti
xchg
sarl
and
in
dec
ljmp
push
sbb
cmp
mov
sub
or
mov
and
xchg
inc
adc
rorb
loop
push
hlt
inc
xchg
xchg
insb
mov
pop
sub
and
aam
cld
lcall
jp
lahf
out
and
nop
add
pop
std
push
test
push
jb
les
ss
xchg
push
jp
fsub
jmp
sbb
cmpsl
mov
pop
aas
mov
xorl
jmp
push
mov
sub
inc
push
clc
adc
mov
data16
and
seto
xor
xchg
inc
sahf
jne
std
cltd
mov
mov
push
cmp
idivl
bound
inc
cld
mov
mov
lock
add
int3
mov
out
xor
pusha
pop
idiv
outsb
cwtl
jae
and
mov
and
xor
enter
adc
jno
mov
lods
cmpsl
mov
leave
pop
push
xor
fsubs
fbld
xlat
pop
xchg
nop
xor
bound
insl
lea
ja
cwtl
jo
and
add
loopne
inc
jmp
push
xor
push
lret
xchg
push
dec
jmp
pop
adc
pusha
je
dec
mov
push
push
cmc
jno
mov
cmp
mov
pop
in
mov
adc
jno
adc
lcall
dec
cmpsl
fiadds
jbe
or
adc
push
rclb
inc
xchg
fwait
xor
int3
es
dec
mov
jno
push
push
and
jg
sbb
xor
loope
jle
jge
xchg
ror
and
dec
xchg
push
testl
ljmp
add
and
pop
test
and
fstpt
int3
jne
insl
data16
inc
lahf
out
movsb
add
jmp
or
clc
adc
mov
jmp
jecxz
jne
jecxz
movsb
pop
dec
mov
dec
jne
jo
lds
bound
jnp
js
xchg
frstor
cmpsl
sub
pop
imul
inc
fldenv
scas
cmp
mov
mov
and
fisubl
mov
lea
test
adcb
stc
int
mov
cli
pop
fwait
mov
jp
in
je
xor
mov
icebp
and
adc
in
arpl
std
mov
scas
or
pop
mov
nop
add
fnstcw
cld
enter
adc
adc
xchg
clc
jle
mov
pop
inc
push
xor
xor
dec
int3
test
push
sahf
or
fsts
xchg
ds
int
adc
add
dec
fldl
ljmp
mov
mov
adc
mov
pop
insb
cli
adc
sti
in
pop
ret
push
mov
les
pop
mov
sbb
daa
dec
jnp
fdivrs
fs
sub
xor
jmp
lcall
push
clc
mov
sub
in
pop
pop
rcr
mov
scas
and
and
fld1
loopne
movsl
xchg
or
jbe
cmp
pop
adc
sarl
push
pop
mov
pop
addr16
add
xor
push
call
nop
dec
or
xsaveopt
fcoml
cmp
or
mov
stos
mov
and
mov
call
pop
sbb
test
insl
popa
xor
xchg
sub
out
out
or
jbe
lock
dec
fs
movsl
sub
cwtl
push
push
insl
xor
cltd
loopne
loope
lods
rorl
stos
mul
pop
fsubrs
stos
mov
sub
pushf
jnp
cltd
imul
mov
filds
mov
cmp
fstpt
dec
jne
or
ret
out
cmp
fmul
sbb
adc
adc
push
cld
adc
inc
lahf
push
mov
cwtl
pop
jmp
xor
popl
mov
mov
call
add
push
push
ss
mov
xlat
mov
lret
cld
icebp
leave
push
nop
fisttpl
rcll
mov
sahf
add
mov
mov
repnz
push
mov
test
inc
xlat
test
adc
ds
xor
xchg
bound
jecxz
aad
ret
dec
xchg
dec
or
ja
add
jnp
inc
sub
add
mov
fistpl
stos
lods
sbb
push
pop
lahf
mov
mov
insb
lahf
jne
sub
or
fs
lods
push
pop
dec
jge
mov
out
lods
gs
dec
mov
mov
and
and
inc
mov
mov
xchg
mov
xorb
pop
pusha
sub
imul
fcomps
jmp
xchg
xabort
mov
inc
sbb
push
pop
jb
xchg
fcomip
enter
addr16
lret
pop
jmp
adc
sub
xchg
mov
ffree
pop
aas
stc
jb
add
mov
or
daa
mov
sub
lret
scas
mov
adc
and
dec
mov
mov
jl
pop
or
push
loop
sub
sub
mov
mov
fisubs
cmpsl
or
pop
outsl
mov
pop
sub
stos
mov
sti
stc
mov
mov
popf
mov
ss
mov
aam
pop
ds
sti
call
shlb
test
popa
xchg
frstor
mov
fiadds
pop
popf
push
inc
pop
push
mov
mov
pop
push
xchg
testl
insl
sub
lea
je
faddp
stos
mov
dec
jns
cwtl
gs
cmpsl
push
fcmovu
mov
adc
in
movsl
push
aad
ljmp
pusha
cmp
jge
leave
xlat
adc
adc
xchg
or
les
shl
xor
fs
mov
mov
or
les
mov
add
xchg
je
roll
popa
aad
mov
mov
xchg
movsl
and
cmp
mov
pushf
fdiv
xor
adc
sub
adc
or
pop
adc
fistps
mov
jo
xlat
cmp
push
test
push
add
dec
push
jge
aad
lods
pop
dec
mov
rcrb
pop
xchg
cmc
nop
and
and
mov
mov
inc
dec
inc
fisubrl
and
jecxz
test
jge
fldt
pop
cvtps2pd
ret
inc
and
out
and
and
cmpsl
push
stc
push
ret
or
repnz
shr
or
mov
stos
inc
mov
cmp
xchg
jg
andl
stos
leave
mov
xchg
out
add
xchg
adc
jo
pop
mov
mov
push
movsl
gs
inc
stos
out
inc
and
fisttpll
cmp
push
fldenv
cmp
xchg
fwait
and
jns
scas
sbb
cs
fwait
pop
aaa
jo
sbb
repnz
std
cmpsb
xchg
inc
in
sbb
mov
sbb
test
pushf
xchg
dec
pop
pop
sub
xor
lcall
sub
ret
test
gs
into
mov
imul
push
add
fcmovnbe
cmp
push
mov
sarb
aas
pop
in
outsb
pop
mov
sarl
call
loope
jmp
cld
pop
out
sbb
call
fimuls
scas
jmp
lret
and
fstps
xor
push
addr16
mov
sub
or
scas
push
stc
add
rcl
cmp
adc
outsl
cmp
push
and
push
loop
jne
test
inc
mov
shrl
nop
jp
data16
mov
mov
jg
pop
jecxz
push
stos
sti
icebp
mov
sti
push
pop
cmpsb
rorb
stc
sbb
pop
push
and
push
push
shl
jecxz
imul
xchg
rorl
mov
ljmp
push
test
mov
stos
outsl
rcrl
shlb
lods
cmp
orb
aaa
dec
pop
mov
enter
mov
mov
sub
mov
pop
push
std
xchg
inc
loopne
adc
or
fs
stos
mov
out
push
push
gs
test
arpl
sahf
adc
fs
shll
mov
mov
mov
xchg
jno
mov
fidivrs
push
push
mov
jl
cmp
pop
xor
fcomp
imul
popf
push
dec
push
push
movsb
fistps
scas
neg
aas
or
loop
insl
insb
jp
fists
inc
mov
test
jbe
std
flds
mov
sbb
xchg
movsl
add
ljmp
sbb
out
dec
stos
cmpsb
push
loopne
fdivrl
jnp
pop
mov
xchg
jmp
sbb
push
ljmp
adc
dec
pop
dec
inc
rcll
mov
xor
xchg
rcl
ljmp
ja
repz
test
inc
xor
mov
xor
mov
jbe
data16
daa
cmpsb
pop
mov
jno
xor
mov
in
lahf
add
pushf
mov
in
negl
add
cmp
adc
and
mov
cmp
shrb
es
mov
pop
mov
repz
pop
nop
add
add
inc
and
mov
rorl
cltd
pop
ffreep
cltd
je
rclb
outsb
pop
cmp
les
movsl
cmp
mov
les
repnz
aam
sbb
xchg
fwait
rcrl
call
jae
dec
jb
or
pop
icebp
daa
repz
lcall
pusha
add
test
test
inc
inc
and
sub
clc
fisttpl
icebp
jae
fwait
jmp
repnz
cmp
xor
cmp
hlt
or
and
popl
les
test
sub
lods
or
hlt
sub
stos
add
mov
fimull
push
out
and
jnp
jnp
xor
fisubl
push
mov
inc
mov
sub
mov
lods
xchg
shll
ss
mov
ja
loope
adc
testl
push
mov
lret
inc
mov
pop
ja
aad
leave
jg
aas
xorb
rorl
jb
and
jbe
push
gs
ja
inc
sub
xchg
pop
scas
jg
add
lds
fs
jg
sbb
andl
movsl
ljmp
xchg
addr16
mov
daa
pop
sbb
mov
inc
xor
stc
imul
push
fstpl
mov
push
xchg
mov
lock
pop
inc
inc
ljmp
sbb
sbb
aam
ds
insb
iret
xchg
sub
mov
or
ret
and
mov
arpl
jae
or
xchg
xchg
mov
push
xchg
lret
sub
data16
mov
push
aaa
js
jl
into
sbb
mov
mov
bound
adc
stos
pop
dec
sub
jo
subb
mov
sbb
loop
jge
xlat
popa
pop
in
dec
aam
in
adc
add
jb
mov
dec
cltd
jp
or
xchg
xor
filds
push
sti
sahf
ror
scas
enter
mov
sahf
arpl
cmp
movsb
out
xchg
mov
sub
clc
jmp
repnz
lret
dec
popa
mov
int3
or
xor
push
fidivl
fisttpl
and
enter
mov
and
mov
mov
out
repnz
xlat
dec
lds
or
test
aaa
popa
mov
add
mov
inc
pushf
jge
or
insb
cmp
es
jmp
shl
shrb
test
data16
and
jne
dec
lret
nop
fs
mov
ja
mov
movsl
mov
or
repz
mov
push
cmp
mov
jno
cltd
test
xchg
enter
inc
sub
pop
ds
in
pop
mov
test
aaa
pop
push
inc
fsubs
fidivrs
loope
add
icebp
jo
mov
pop
inc
xor
daa
repnz
out
pusha
jmp
scas
jno
gs
adc
pusha
leave
jae
popa
jnp
mov
xor
pushf
mov
movsl
sbb
out
or
sub
loope
sbb
mov
jg
scas
into
or
fisttps
add
xchg
inc
lods
fcoml
popa
lret
test
cmc
adc
das
pushf
dec
xor
inc
sbb
test
loopne
aad
xlat
test
pop
sbbl
out
ljmp
push
add
sti
jb
out
loop
sahf
fstp
in
inc
cs
xchg
icebp
sub
rclb
je
test
test
sti
loopne
push
cwtl
mov
lods
insb
xor
mov
insl
pop
fnstcw
test
jo
jecxz
sbb
into
popa
arpl
adc
xorb
mov
xchg
mov
ss
pop
enter
sbb
enter
or
sub
outsl
adc
jbe
sbb
pushl
xor
dec
or
cs
pop
sbb
cmp
pop
in
jge
jno
lahf
and
pop
pusha
fistpll
stc
pop
cmc
popf
pop
jb
mov
fs
enter
jb
mov
call
dec
sub
cmp
add
les
sub
imul
hlt
sti
lret
imul
xor
pop
int3
jmp
cmc
add
divl
pop
sub
hlt
inc
or
aas
testl
mov
hlt
popa
movsl
mov
repz
cs
push
ffreep
pop
int
das
push
cld
pop
stc
lea
sbb
negl
mov
fisubl
jl
mov
jb
loope
flds
stc
add
sahf
mov
jl
pop
sub
push
mov
pop
rcrb
imul
xor
sbb
pop
inc
pop
jle
inc
adcb
cli
shr
or
inc
mov
or
xlat
int
enter
popf
xor
leave
jecxz
mov
mov
push
mov
fwait
xchg
outsb
jg
je
mov
xchg
adc
in
mov
cmp
mov
jbe
insb
dec
ja
mov
sbbb
sbb
fwait
call
jbe
jno
pop
push
xchg
aaa
inc
cmp
mov
dec
ljmp
bound
and
pop
mov
pop
test
imul
cmp
ret
insl
inc
cmp
inc
mov
and
call
inc
mov
sbb
imul
mov
cli
cli
pop
pushf
jg
sub
sbb
sbb
repz
dec
xor
or
xor
adc
lret
adc
insb
insb
faddl
push
mull
mov
nop
out
cmp
sbb
data16
adc
sar
testl
lods
andl
inc
das
cmp
xor
xlat
jp
test
pop
ljmp
jns
fidivl
jmp
notl
mov
iret
sar
dec
and
xchg
into
and
push
cmp
arpl
mov
adc
xlat
pop
sbb
sub
inc
cmp
dec
inc
out
shlb
and
pop
pop
sarl
cmp
mov
jnp
es
fildl
cld
pop
push
loopne
dec
stos
push
adc
cmpsb
sub
push
ret
daa
cmp
mov
divb
sbb
pushf
push
mov
dec
rorl
dec
ja
jg
or
aas
test
fdivs
aas
pop
jge
and
imul
addl
adc
pop
sbbl
pop
mov
mov
aaa
jno
data16
cli
add
sub
cmpl
enter
iret
shlb
add
mov
in
cltd
popa
cmpsb
roll
adc
sbb
lret
cwtl
mov
and
xchg
lea
inc
push
cmp
and
pop
mov
hlt
cwtl
sbb
jne
dec
jb
fwait
int3
rcll
and
arpl
std
mov
xor
cwtl
int
aaa
mov
push
cmp
dec
cmp
call
into
adcl
mov
dec
mov
aas
and
xchg
adc
ficompl
cmp
mov
mov
xor
std
addl
mov
mov
mov
pop
mov
and
mov
jmp
mov
arpl
xor
adc
mov
repz
imul
jg
je
pushf
xor
rcll
inc
adc
sub
xchg
cld
and
les
mov
test
or
andb
sub
xchg
push
hlt
dec
xchg
xchg
dec
test
cmp
popa
cmpb
loope
jmp
idiv
mov
js
rolb
lds
fildll
jg
fsubl
mov
ja
lretw
push
out
xor
testb
dec
cmp
lock
jo
cltd
outsl
addr16
into
mov
idivb
test
mov
stos
push
cmpsl
and
sbb
inc
jbe
pop
jne
cld
movsb
imul
std
shll
leave
cli
mov
inc
loop
adc
xor
mov
mov
sbb
jno
movsb
jmp
into
or
push
sub
xchg
aam
popf
mov
popa
insl
mov
fcoms
adc
pop
repnz
aad
jg
and
shll
mulb
mov
je
xchg
jge
into
push
int
jns
and
add
push
loop
dec
pop
ja
push
aad
lds
loop
cmp
sahf
sub
mov
push
push
pop
in
punpcklbw
shrl
leave
gs
fdivrs
inc
sbbb
pop
out
mov
std
outsb
movsb
push
cmpl
addr16
inc
roll
cmc
dec
xchg
xchg
xchg
dec
pop
aam
psllw
outsb
test
aad
mov
pop
inc
cs
lret
jecxz
pushf
jecxz
or
mov
jge
negb
fs
sti
fwait
mov
aad
push
aam
xor
adc
adc
mov
cltd
xor
adc
testl
mov
fwait
jmp
and
fistpll
xchg
aaa
jge
xchg
mov
and
add
jo
cmp
inc
int
xor
and
aaa
xchg
jge
pop
jmp
xchg
dec
test
push
insl
adc
pop
mov
leave
or
lcall
enter
fsubs
mov
aas
add
mov
hlt
cmp
les
popl
jo
je
push
jo
xchg
push
or
pop
mov
hlt
push
mov
rcrl
sbb
xchg
aad
call
jae
roll
lcall
cltd
mov
or
fsub
popa
xchg
pop
ret
push
jb
jo
rorl
jg
or
test
jmp
pop
xor
lds
clc
or
mov
push
fisttps
mov
enter
int
xchg
call
push
mov
mov
mov
pop
add
incb
mov
test
out
fists
cmc
call
fwait
add
jp
cltd
fcmovnb
dec
shlb
xchg
pusha
je
or
pop
mov
std
daa
mov
data16
mov
and
rclb
push
test
out
scas
sbb
sar
xor
out
cmp
mov
mov
stos
cs
inc
stos
xlat
inc
cmp
outsl
out
aad
je
shll
or
pushf
inc
out
pop
add
dec
push
fucomip
mov
inc
mov
inc
xchg
pop
mov
pop
inc
shrl
pusha
insl
movups
or
push
sbb
pop
lods
mov
jno
sbb
andl
jle
jb
cld
push
daa
push
test
icebp
mov
fistps
mov
mov
pop
ss
fcom
nop
rcrb
sbb
jae
inc
mov
push
lds
ss
mov
sbb
fldcw
loop
fcomps
dec
push
out
dec
pop
hlt
imulb
sbb
rolb
orl
dec
cmp
add
popa
xchg
mov
sub
inc
test
pop
jno
rol
push
adc
push
add
push
rcl
cwtl
jg
xchg
sub
std
adc
lahf
in
pop
scas
loopne
xor
in
daa
ss
pop
lods
dec
adc
movsb
test
and
jle
jl
imul
adc
imul
mov
pop
xchg
xchg
cli
lahf
insb
fiaddl
pusha
and
push
mov
or
push
or
mov
mov
scas
sbb
cs
mov
sbb
lcall
inc
js
dec
and
mov
movsl
pop
xor
mov
jns
das
adc
and
movsb
push
cmp
adc
mov
es
cmp
mov
mov
ja
inc
loopne
adc
outsb
push
pop
inc
pop
push
xlat
lahf
in
push
mov
dec
mov
xlat
dec
in
push
or
pop
insl
shlb
fildl
mov
push
sahf
push
mov
mov
adc
xor
test
rorb
das
in
mov
inc
outsb
mov
cmp
out
aaa
dec
push
adc
sti
insb
dec
pop
shlb
dec
sbb
mov
jne
iret
cltd
ljmp
imul
mov
dec
scas
mov
mov
dec
scas
jnp
xchg
sahf
pushf
or
in
jbe
test
rcll
push
in
inc
in
aas
lret
pop
mov
jbe
lahf
lods
xchg
enter
ret
ds
sub
mov
test
xor
stc
fcmovb
imul
ljmp
hlt
clc
pop
pushf
ljmp
cmc
inc
adc
push
and
andl
push
dec
int
fiadds
jbe
les
lea
cmp
arpl
jle
pop
inc
mov
jecxz
iret
in
add
arpl
inc
ljmp
mov
repnz
arpl
push
push
push
imul
rorb
jns
adc
mov
add
xchg
mov
aaa
ret
sbb
ds
loop
icebp
js
lds
ret
icebp
ja
bound
jbe
and
mov
jb
fsts
loopne,pt
iret
xchg
into
xor
xorl
aam
lahf
cmp
sub
xchg
fistpll
cli
cltd
mov
xchg
and
xor
repz
xor
add
push
mov
xor
dec
mov
sbb
add
loopne
add
scas
fisubrs
push
fcomi
cld
jmp
and
jae
out
aam
mov
and
clc
push
cwtl
mov
jl
data16
push
mov
shlb
xor
mov
push
pop
in
adc
addr16
bound
mov
les
adc
inc
jno
push
hlt
aas
cmpsl
sbb
or
push
ret
dec
hlt
cwtl
fdivrl
fstp
xlat
shlb
mov
vpsraw
addr16
in
mov
push
dec
push
in
cmpsb
mov
xlat
fmul
mov
movsl
mov
les
aas
pop
xchg
leave
and
pop
dec
adc
and
jmp
xchg
testb
sbb
enter
or
mov
stc
dec
sysenter
push
fs
int3
ja
pop
or
adc
pop
mov
rcll
xchg
popa
ret
fcmovne
push
mov
push
je
cmc
maxps
mov
rol
dec
aas
push
pop
pop
mov
nop
xlat
cltd
push
pop
mov
jne
or
mov
leave
stc
dec
add
pop
cmp
cmp
sahf
push
xchg
cmp
sbb
or
rorl
push
or
inc
pushf
outsb
std
sbb
rol
aad
loope
mov
mov
sub
mov
mov
sbbl
dec
pop
aas
in
mov
jne
dec
movsl
push
jle
icebp
dec
bound
addl
xor
fcomip
mov
and
jp
insl
mov
cmp
mov
mov
jle
jp
fistpll
inc
fsubp
cmpsb
dec
pop
jl
out
call
popa
xor
lret
adc
sub
xchg
xlat
pop
sbb
adc
push
jne
xchg
fistpl
enter
pop
mov
xchg
call
sub
imul
stc
xchg
cmc
fcompl
aaa
mov
mov
inc
xor
nop
or
lods
jg
lock
ljmp
jmp
push
inc
call
sub
mov
sub
inc
sbb
sub
adc
dec
xchg
or
or
hlt
repnz
xor
xor
das
mov
xorb
cltd
in
dec
cli
jle
lock
push
cmp
sub
mov
gs
rclb
imul
aas
push
cwtl
xor
dec
lods
aas
add
pop
aaa
or
int3
pop
imul
xor
add
repz
scas
xor
stc
xchg
jp
pop
dec
push
sbb
mov
aaa
cmovns
fcompl
mov
mov
mov
movsl
push
jae
insb
popa
push
in
dec
sbb
lods
add
pop
mov
mov
or
mov
subb
xor
inc
sbb
jecxz
inc
fcoml
test
stos
imul
js
adc
je
in
sbb
mov
push
jg
add
sbb
pop
ret
pop
cltd
js
nop
sbb
xlat
xor
nop
fs
sbb
cltd
sbb
fdivrs
dec
xlat
stos
mov
pusha
dec
pop
gs
std
movb
jno
xor
rcrl
shl
in
in
sbb
cmp
cwtl
xchg
daa
pop
iret
popa
cli
inc
into
gs
push
cmovge
push
jno
adc
in
test
push
mov
xchg
rcrl
mov
in
mov
xchg
push
and
xor
xor
and
sub
pop
adc
imul
mov
or
hlt
cmp
sbb
cmpsb
push
incl
lods
xchg
lahf
fstpl
or
es
push
push
mov
lods
bound
aad
ret
inc
mov
sub
mov
mov
xchg
movsb
out
cwtl
jl
cli
pop
lea
push
mov
rclb
mov
into
push
cwtl
jp
repnz
insl
sbb
sub
shlb
sarl
jns
add
ja
hlt
dec
and
int3
ret
orl
sub
insl
jmp
cmpl
insl
jne
mov
jns
mov
imul
loopne
mov
sbb
or
cli
mov
gs
out
leave
push
ds
sbb
inc
test
mov
loopne
stc
xchg
movsl
lret
lock
cltd
das
mov
fwait
dec
sub
sub
leave
cmp
leave
add
out
mov
push
insl
pop
jnp
popf
call
fnstcw
add
mov
inc
xchg
mov
cli
cmp
call
sarb
add
adc
inc
pop
sahf
xor
push
pop
ds
cli
pusha
add
gs
aam
xor
ds
ficompl
jo
jns
xor
xchg
or
or
sahf
loope
add
mov
push
mov
push
std
or
fsubrl
gs
lods
jbe
xor
insl
popf
cmpsl
xchg
cs
xchg
mov
inc
shlb
dec
jo
fsubrs
repz
mov
or
pop
dec
lods
imul
add
out
repnz
xchg
cmp
mov
add
mov
loopne
fisubrl
push
jge
enter
adcb
inc
and
rcrl
cmp
cltd
aaa
add
fidivs
neg
setp
push
mov
xchg
out
pop
mov
xor
lcall
jle
rcl
sub
xor
mov
dec
stos
pop
leave
xchg
jmp
jae
hlt
sub
repnz
jg
xchg
clc
pop
and
or
into
int3
mov
insl
lcall
mov
xchg
pop
mov
sbb
daa
mov
loop
jge
jns
cmp
xchg
mov
stc
pop
cli
sbb
and
clc
pop
adc
stos
mov
mov
mov
cmpsb
jle
jbe
imul
in
and
push
mov
icebp
and
inc
mov
mov
lea
cs
dec
scas
cltd
sub
or
fnstcw
fildll
cld
fxch
pop
mov
in
sub
out
inc
div
xchg
push
or
insl
mov
sti
lret
jle
jnp
inc
mov
in
enter
sbb
in
sub
push
xor
cmp
aad
pop
dec
bound
lcall
sahf
pop
pop
gs
in
shlb
cmp
inc
jecxz
mov
sub
dec
xchg
xor
out
testl
test
bound
ljmp
aas
cmpsb
xor
cmp
push
sbb
pop
mov
aad
ret
mov
ret
shll
push
daa
shlb
fcomp
or
mov
rclb
and
scas
aaa
sbb
in
push
ds
cld
cmpsb
add
push
inc
xlat
pop
lcall
xchg
lahf
sub
mov
or
fldcw
fdivs
test
cwtl
cmp
jecxz
test
test
das
dec
mov
xor
xlat
adc
pop
filds
loop
mov
iret
pop
jb
and
and
xchg
cmc
xchg
inc
ret
pushf
sub
lahf
pop
cmp
lret
mov
mov
sub
adcb
cmp
lcall
loopne
inc
pop
ds
je
jge
fs
hlt
pop
es
fcoms
loope
inc
jge
add
cli
xchg
fcompl
imul
pushf
xchg
push
mov
and
out
clc
lret
xchg
mov
xchg
mov
mov
mov
outsl
push
lock
pop
sub
sub
lea
pop
je
xlat
incb
jne
xor
dec
aam
pop
and
cmpsb
aas
movsl
stos
dec
lcall
add
push
mov
out
mov
aad
stos
sahf
fwait
jl
rcrl
push
add
push
dec
inc
mov
inc
test
sbb
loopne
add
push
sti
and
jb
xor
aad
pusha
inc
sub
mov
arpl
repnz
adc
lcall
cmp
inc
push
aam
aas
popa
rorl
iret
jg
stos
sub
lcall
lcall
or
or
stc
adc
clc
les
mov
dec
andl
lret
outsb
sahf
adc
cli
insb
leave
repnz
adc
xor
icebp
sbb
xchg
loop
mull
lea
shll
jl
sarb
scas
sbb
xor
call
sub
inc
sub
loop
xchg
xchg
cmp
in
int
les
ror
xchg
mov
push
push
jmp
xchg
jle
and
arpl
je
xor
in
mov
fcomi
pop
inc
ret
push
ljmp
inc
fstps
adc
lahf
ficompl
jge
ljmp
xor
call
pop
pop
clc
ret
clc
sub
out
dec
jle
xor
push
icebp
push
gs
push
jp
lds
roll
or
hlt
mov
mov
subl
clc
mov
lock
out
lret
cmp
or
mov
int3
imul
mov
arpl
lret
jnp
add
inc
enter
addr16
mov
inc
leave
push
sub
outsb
addl
scas
mov
and
mov
mov
push
fiaddl
push
dec
mov
adc
jmp
jg
cltd
xchg
rclb
cmp
bound
subb
icebp
mov
dec
lcall
pop
insb
mov
push
xchg
sarl
fcomip
int
rcr
pop
xor
mov
dec
mov
pusha
fwait
subb
inc
cwtl
out
inc
mov
xor
and
cmpsb
inc
data16
aad
and
xor
adc
inc
cli
adc
push
movsl
push
dec
pusha
dec
dec
or
or
cmp
lahf
inc
pop
loop
jno
and
adc
mov
inc
add
mov
test
lcall
imul
and
or
stc
xchg
or
test
mov
lcall
pop
orl
pop
pop
dec
mov
mov
mov
outsl
ljmp
add
clc
cmpl
mov
in
fsub
jnp
push
dec
push
add
iret
daa
adc
sub
sbb
nop
push
inc
fmuls
outsl
and
and
repz
mov
xchg
jno
cmpsb
add
mov
test
xchg
sub
jmp
fisttpll
sub
test
pop
cmp
or
rcll
pop
dec
into
cmc
sub
add
je
js
pop
loop
or
or
sar
push
push
mov
push
out
sbb
xchg
push
dec
insl
in
pop
pop
popa
sbb
push
imulb
jbe
repnz
lcall
mov
add
ds
shr
jp
inc
movsb
mov
cmpsl
scas
pusha
std
lret
push
and
mov
adc
sub
out
ja
fs
test
xchg
adc
stc
in
dec
jns
adc
je
pop
shll
pop
hlt
sub
xchg
scas
jecxz
imul
ret
cmpl
cmp
push
mov
inc
outsb
repnz
loope
sbb
jno
and
popf
aad
sbb
sbb
outsl
aaa
fildl
adc
test
xor
out
add
ret
dec
xbegin
jl
sbb
cmpsl
sti
xor
mov
inc
cli
mov
inc
sub
pop
adc
fsubl
stos
push
adc
arpl
xchg
xchg
aad
shll
call
xor
push
les
mov
pop
ss
sbb
xchg
or
movsb
in
int
fcoml
jnp
fwait
movsb
ds
fnstenv
cmc
popa
xchg
and
mov
shlb
mov
insb
sbb
insl
in
push
bound
push
bound
and
bound
cmp
insl
xchg
cwtl
sbb
dec
mov
clc
jbe
insl
or
outsl
pop
test
rcrb
xlat
xchg
mov
dec
iret
jns
xchg
pop
cmp
dec
push
insb
jo
sarb
insb
pushf
inc
push
jae
inc
mov
push
dec
sbb
add
int3
test
into
ret
adc
and
jmp
pop
in
fldenv
imul
test
mov
dec
cs
out
pop
nop
adc
into
fcmovbe
mov
inc
inc
cmp
icebp
push
adc
jg
jmp
enter
or
add
mov
les
and
psubb
hlt
mov
in
cmp
les
xor
push
clc
sahf
shll
mov
xchg
push
aas
xchg
sub
mov
outsl
shrb
rcrl
add
imul
sbb
cltd
out
or
lea
cmp
stos
push
enter
fcmovbe
inc
jl
mov
mov
cmpsb
aam
add
ffreep
enter
popa
insb
loope
ds
dec
mov
mov
notb
adc
scas
lcall
jl
jnp
sbb
pop
loop
or
sub
jb
add
and
in
std
push
dec
imul
movsl
cli
jge
push
in
jb
jb
and
ja
adc
dec
xchg
mov
imul
xchg
test
bound
ja
nop
inc
and
stos
into
sub
lahf
rcll
and
icebp
push
sub
scas
inc
sub
dec
sub
fadds
into
xchg
divl
cmp
mov
cld
mov
cli
addb
js
es
sbb
push
out
insl
pop
pusha
nop
push
inc
inc
addr16
shl
js
fbstp
adc
dec
cmp
mov
cmp
jb
loop
jae
dec
jle
jb
mov
lret
sbb
and
or
sub
and
add
add
aam
and
jecxz
lret
int3
mov
pop
pop
dec
ja
rorl
mov
lret
mov
je
or
scas
repnz
cwtl
andb
pushf
bound
ljmp
lds
mov
cmp
mov
cmp
add
rcrb
lods
scas
sub
sahf
add
jno
push
xlat
push
fwait
inc
lods
adc
or
aaa
int
mov
test
jne
xchg
out
das
roll
orl
push
sarb
push
icebp
or
jno
cmp
bound
fnsave
orb
fcoml
jge
aad
lea
xchg
pop
push
scas
or
mov
into
xchg
inc
jmp
jbe
loopne
clc
test
imul
sbb
mov
jecxz
adc
das
daa
jno
sub
or
dec
mov
jg
rcll
rclb
push
sbb
loopne
mov
push
pusha
inc
in
hlt
mov
pop
mov
cltd
dec
pop
rcrb
jl
daa
jg
ret
mov
mov
call
or
jge
jg
inc
cs
loop
inc
mov
insl
sub
dec
loope
sbb
dec
cld
cmp
cld
out
repnz
sbb
dec
xchg
sbb
pop
in
jg
xchg
inc
daa
shrl
sub
ljmp
lock
sbb
sbb
add
repz
mov
fimull
push
inc
pushf
jg
dec
fucomp
xor
xor
mov
jg
xor
js
adc
mov
shl
or
add
mov
es
test
repnz
lods
lcall
aad
sbb
sbb
scas
or
std
ljmp
aas
dec
fstpt
cmp
repnz
ljmp
stos
fsubrl
add
mov
mov
jae
jno
mov
shlb
or
jnp
mov
int3
pop
pop
inc
cmpsl
sub
cli
hlt
imul
xchg
xor
dec
add
mov
mov
shlb
loop
dec
jne
adc
loop
mov
test
jecxz
lcall
sbb
cmpsl
scas
int
jl
inc
fstp
rolb
out
filds
sub
mov
je
pop
dec
pop
mov
sub
lret
fisubs
mul
lret
out
jmp
imul
or
insl
repz
cmp
fs
adc
add
pop
sar
jo
add
sbbb
push
push
leave
fwait
pushf
lret
add
mov
hlt
jb
jge
pusha
inc
xchg
xor
cld
fidivrl
or
inc
mov
mov
icebp
fcoml
dec
js
mov
aaa
push
mov
fdiv
sbb
adc
or
or
jb
imul
ljmp
into
test
loope
scas
cld
sbb
cs
sahf
adc
xchg
mov
stc
test
in
mov
std
in
mov
in
dec
jae
xchg
aaa
jecxz
or
outsl
push
std
filds
mov
or
mov
xor
sbb
aad
pop
pop
pop
xchg
rclb
test
xchg
test
jle
jne
jecxz
push
stc
fcoml
shrb
xor
adc
adc
push
rol
lret
mov
xor
inc
or
rorb
and
adc
les
js
push
arpl
adc
std
push
arpl
cmpsb
mov
cmpsb
jmp
or
push
push
dec
dec
jge
cmp
int
xchg
or
mov
cmp
int3
xchg
jmp
je
mov
cmp
xchg
out
sub
into
out
test
shrl
add
xor
fldcw
fnsave
sbb
xchg
inc
inc
data16
adc
cs
pop
aas
sbb
push
push
add
sbb
add
sti
mov
push
clc
aam
clc
in
aad
dec
jp
fisubl
fnstsw
dec
inc
push
mov
into
and
outsb
push
sti
xor
mov
xor
loop
shlb
cmp
popa
or
lcall
sbbb
adc
sti
lea
fcompl
icebp
xchg
add
cli
push
pop
mov
cmp
add
andl
pop
daa
aam
push
movsl
fstl
stos
mov
popl
lods
mov
int3
or
inc
add
cmp
nop
es
negl
mov
rcl
inc
pop
and
or
ds
incb
pop
push
and
add
lcall
lret
scas
enter
lds
push
aad
cmp
call
jge
aas
push
mov
pop
scas
xchg
add
sbb
jg
fsubl
test
or
sbbb
loopne
pop
jne
push
scas
sub
into
lea
jg
push
xchg
cmpb
sub
xchg
mov
std
les
mov
jge
inc
push
inc
push
loop
pop
into
movsb
add
dec
mov
xchg
fadds
push
setns
mov
or
es
dec
push
insl
scas
mov
into
aad
sti
lahf
or
adc
insl
fisubs
sbb
dec
mov
nop
ficoms
xor
dec
rcrb
imul
dec
pop
into
ror
nop
fists
bound
adc
js
loop
inc
xor
push
jp
sub
fs
data16
mov
jecxz
std
std
jle
aas
jno
xor
jb
into
aaa
pop
shll
dec
sub
mov
gs
inc
or
aaa
mov
adc
jp
inc
fstpl
mov
jecxz
inc
inc
adc
or
cwtl
mov
jno
inc
push
jg
inc
or
insl
ja
ljmp
push
scas
outsl
inc
sbb
push
jbe
ja
cmovge
pop
fistps
cltd
fwait
and
cmp
jle
push
mov
mov
mov
mov
jne
test
lods
mov
mov
lods
sbb
lret
pop
sarl
scas
or
aaa
pop
mov
jecxz
icebp
cmp
xor
les
popa
xchg
jle
imul
das
push
or
imul
leave
mov
int
test
dec
clc
roll
or
jle
addr16
push
push
loopne
adc
fsubrs
add
mov
cwtl
xchg
xor
popf
mov
stos
push
lds
insb
mov
test
sub
cmc
cmp
push
and
movsb
test
pushf
lods
in
jnp
les
sti
or
rclb
jg
fmuls
sbb
les
push
push
out
lcall
or
or
test
mov
out
cmp
mov
pop
cmp
addl
and
fdiv
push
xchg
inc
and
and
cmp
lock
inc
enter
mov
loop
and
mov
mov
sbb
add
fsubp
cmpsb
or
sub
fadds
push
mov
or
push
push
je
xor
aaa
dec
xchg
jno
dec
xchg
cld
gs
in
loopne
movsl
loope
adc
inc
add
mov
addr16
stos
test
test
clc
inc
mov
dec
aas
mov
faddl
sub
or
int3
lds
inc
call
sar
aad
add
outsl
cmp
cmc
push
mov
cwtl
jnp
xor
adc
add
ror
int3
or
pop
mov
leave
xchg
jb
sbb
inc
xor
dec
mov
movsb
jmp
cwtl
ljmp
fs
sarl
es
sub
mov
xchg
in
push
inc
push
aam
push
aaa
xchg
shll
sbb
ror
mov
jecxz
js
int
fildl
stc
push
adc
or
daa
movsb
jb
mov
adc
push
xor
dec
insl
jmp
mov
sub
fsubrl
jge
lret
loop
leave
push
xor
cs
push
int3
inc
inc
mov
flds
xchg
mov
mov
dec
cld
pop
stos
xchg
mov
arpl
in
jle
adc
pop
out
sahf
mov
lret
mov
mov
pop
jno
or
test
add
mov
jge
cmp
movsl
sbb
daa
or
jecxz
xchg
add
es
mov
icebp
insb
push
inc
mov
jno
push
cmp
lods
je
push
push
push
pop
ja
mov
jno
add
mov
and
mov
lds
sub
sbb
jle
xchg
mov
clc
lahf
ret
mov
or
inc
fdiv
fistl
xchg
roll
and
test
dec
pop
int3
movsl
push
push
cmc
mov
call
push
push
ds
test
fstpl
xor
inc
jg
imul
lret
data16
xor
imul
xlat
add
out
xlat
cli
mov
jae
push
jg,pn
imul
dec
ficoms
or
testb
enter
mov
xchg
add
mov
push
stos
push
hlt
lea
in
sub
lods
rolb
mov
repnz
int
xor
push
adcb
pop
out
inc
divb
enter
pusha
mov
jo
dec
outsl
xor
das
xrelease
repnz
in
cltd
inc
dec
or
or
test
inc
flds
inc
xchg
mov
push
mov
inc
scas
arpl
arpl
jb
or
sahf
xchg
adc
insl
pop
imul
pushf
loopne
sub
aad
sbb
mov
repz
in
les
rcrl
dec
cmp
call
lds
or
jne
int
pusha
mov
pop
push
test
out
movsb
add
xchg
adc
mov
cld
pop
mov
jge
add
dec
cmp
mov
aaa
push
dec
into
add
mov
dec
out
movd
xchg
loope
mov
cmp
adcb
mov
sub
rcll
test
fnstcw
mov
jg
scas
fisubrs
ldmxcsr
into
out
mov
push
nop
push
mov
insl
mov
imul
add
stos
push
popa
ds
hlt
cs
adc
mov
push
mov
sub
pop
xor
adc
rclb
xchg
dec
or
int
mov
mov
fnstenv
jl
jl
pop
cmp
ja
jg
imul
and
cltd
inc
mov
jg
jbe
mov
shlb
adc
rclb
out
pop
inc
fsubr
add
test
sbb
leave
jmp
movsl
inc
cmpsl
and
xchg
daa
and
les
mov
and
sub
std
js
in
lret
call
and
mov
lret
pop
outsb
pop
insb
mov
inc
enter
sbb
push
scas
jg
mov
or
push
mov
fs
mov
mov
shld
xchg
sbbb
push
adc
fmuls
dec
and
sbb
mov
pop
mov
sub
push
mov
fmul
xor
mov
xor
in
ficomps
std
adc
stos
push
rclb
pop
nop
and
mov
sbb
stc
movsb
adc
add
fistpll
mov
aam
mov
xchg
dec
push
clc
xor
gs
sub
cmp
push
fcoml
dec
dec
dec
es
mov
stos
pop
in
pop
lcall
xor
xchg
fildll
not
loopne
xor
imul
adc
sahf
cltd
aad
jo
cmpsb
test
ds
js
mov
xlat
test
int3
push
xchg
push
es
fsubrl
jp
out
shll
xchg
int3
jg
or
mov
mov
insb
popf
mov
scas
mov
fisubrl
btc
xor
das
pop
cmp
jmp
pop
jp
aad
lahf
gs
aam
cmp
xchg
cmp
inc
inc
inc
xor
pop
mov
xchg
mov
je
fld
xchg
loope
inc
pusha
fmull
jg
cmpsb
mov
dec
loope
data16
sbb
add
outsb
jns
mov
dec
shlb
push
not
mov
in
das
hlt
clc
dec
jle
aam
repnz
xchg
repnz
ds
call
push
enter
mov
das
fmulp
push
ret
je
push
push
adc
inc
or
in
sbb
decb
dec
ffree
add
mov
dec
iret
pop
jl
gs
and
jecxz
ret
cmc
and
and
fsubs
mov
lods
aam
arpl
push
ljmp
bound
xchg
jp
insb
in
xchg
dec
sti
xchg
rorb
sbb
daa
adc
inc
test
mov
mov
imul
and
mov
cmp
outsl
mov
cmp
and
shlb
fwait
les
add
or
add
xor
sahf
lock
sub
xchg
add
pop
test
js
int
cmp
mov
mov
dec
and
out
add
push
mov
mov
loope
mov
ret
dec
cwtl
sbb
stc
cmp
movsl
enter
out
mov
mov
pusha
xor
out
jns
pushf
outsb
xchg
hlt
daa
les
push
pop
mov
inc
mov
int
xchg
hlt
mov
xchg
insl
cs
ds
push
rcl
dec
lds
mov
jg
and
jecxz
cmpps
dec
mov
aad
hlt
imul
xchg
jmp
jno
mov
movsb
insl
mov
rcrb
ljmp
xor
popf
push
movl
pushf
adc
loop
inc
mov
rcrb
inc
inc
sub
movsb
jne
into
inc
sub
push
pop
pop
cwtl
adc
lcall
movsb
mov
inc
jl
mov
call
mov
test
sbbb
push
imul
inc
mull
ja
negb
into
gs
fisubrl
subb
mov
cwtl
mov
fistpll
pop
cmovns
iret
mov
add
inc
xor
mov
lock
lds
jbe
xchg
add
dec
push
jo
fs
lcall
sub
sbb
and
cltd
daa
push
cmpsl
jb
adc
cmpsb
cmp
arpl
cmp
in
pop
int
cwtl
mov
jbe
and
add
loope
int
into
cmp
or
mov
sbb
pcmpeqd
cmova
mov
xchg
adc
in
stc
lods
pop
mov
push
lret
pop
push
inc
rorb
cmp
cmp
mov
arpl
pop
loopne
xlat
out
xchg
push
xor
pop
lcall
ret
std
sbb
pop
cmp
sbb
sbb
push
lret
gs
arpl
adc
popa
inc
jle
jg
leave
mov
jb
fimuls
adc
jge
lock
add
push
repnz
movsb
movsb
popf
repnz
dec
xlat
outsb
bound
mov
clc
ja
ss
fists
add
dec
push
leave
ss
adc
scas
out
pushl
add
adc
mov
dec
push
adc
push
fcomps
cmpsb
stos
adc
lret
cmpsl
lret
loopne
in
pushf
js
dec
pop
lods
test
inc
jle
push
dec
daa
cmc
mov
sbbl
ficoml
bound
iret
push
mov
scas
inc
sbb
insb
lret
sbb
ret
repnz
data16
xchg
popf
lret
xor
in
mov
jbe
push
in
jmp
inc
push
clc
cmp
aam
es
add
enter
inc
xchg
enter
sarl
movsb
xor
leave
sbb
loop
movsb
int3
imul
or
scas
mov
insl
ret
je
cmpsl
xor
stos
fwait
xchg
inc
addl
pop
xchg
jge
add
fmul
xor
sbb
stos
test
cmp
subl
scas
push
cld
jl
mov
sbb
sub
pop
movsl
pop
sbb
sbb
in
cmp
fsub
mov
pop
adc
push
les
push
pop
push
icebp
pop
lds
add
push
insl
inc
lock
repnz
sahf
das
dec
pop
test
xchg
lcall
add
jge
arpl
inc
fisubs
aam
scas
or
lock
cmp
pop
cmp
stos
adc
add
lcall
add
subl
add
test
sbb
out
cmp
and
inc
repnz
out
lret
rcrb
push
xchg
dec
fbld
dec
push
add
add
mov
and
sbb
push
sub
pop
mov
hlt
in
sub
jo
pop
mov
jle
xchg
dec
movsl
or
test
outsb
popa
incl
das
repz
pop
fcomps
pop
les
sbb
mov
push
leave
adc
or
test
adc
rcll
xlat
test
xchg
shr
inc
inc
cld
mov
add
int
fstpl
inc
add
aaa
repz
dec
cmp
pop
stos
mov
in
and
xchg
xchg
insb
aas
jp
pop
or
mov
sub
inc
mov
lods
dec
or
movsl
clc
les
xor
pop
jle
adc
sub
inc
inc
mov
push
jbe
xor
test
cmp
pop
mov
pop
and
inc
fxam
mov
and
inc
dec
ret
mul
loop
pop
jns
and
mov
ljmp
push
push
popa
imul
mov
arpl
jae
mov
lret
out
adc
push
xlat
out
test
fcmovu
push
pop
mov
and
rcrb
xor
push
mov
int
pop
sbb
in
addr16
repz
insb
jl
pop
mov
xor
xor
pop
mov
adc
popf
int3
call
sbb
leave
and
shrb
mov
dec
daa
adcb
pop
scas
push
fisubl
outsl
inc
jl
test
scas
push
push
insl
xchg
lock
dec
cmp
insb
lea
or
data16
lea
rclb
xchg
cs
or
jmp
insl
pop
leave
test
fistpll
adc
ss
cmp
adc
add
test
push
jmp
mov
sti
mov
xchg
jns
loope
cmpsb
xchg
pop
push
js
or
pushf
imul
adc
push
lcall
xchg
mov
out
lods
scas
lock
xchg
ret
xchg
cmc
mov
movsb
mov
xchg
jo
mov
push
incl
mov
out
idivb
inc
into
jecxz
push
push
cld
xor
pushf
sub
test
loopne
push
pop
ljmp
enter
shll
int
and
jg
inc
xchg
daa
jge
stc
aad
inc
mov
push
sub
xchg
shll
lock
dec
push
data16
ds
not
stc
stos
mov
nop
lds
lock
or
inc
sahf
and
ror
push
jmp
int3
andb
cmp
loopne
xchg
xchg
xchg
sbbb
sbb
lcall
cwtl
lds
inc
cwtl
dec
call
cmp
add
mov
lods
push
out
daa
fcomps
mov
shl
sbb
dec
pop
push
clc
jmp
insb
mov
mov
clc
lock
push
mov
adcl
jo
push
push
dec
pop
and
pop
xor
push
dec
inc
cmp
mov
and
adc
ret
fsubl
call
popa
mov
enter
hlt
out
fcmovbe
subl
sub
or
rolb
rcrb
xchg
jo
in
cmpsl
in
xor
mov
adc
lret
fimull
inc
fcomps
pop
add
int3
filds
jp
sub
jo
insl
push
dec
fadds
or
fnstcw
pop
adc
enter
or
sbb
push
sbb
or
insb
test
push
leave
jno
pop
mov
mov
outsl
xchg
push
leave
sbb
and
inc
jl
aad
fdivs
cwtl
out
mov
stos
stos
xor
clc
lods
aam
push
sub
and
cli
and
fmuls
repnz
daa
push
add
loopne
jecxz
and
lea
inc
sub
mov
ret
in
cmp
mov
add
add
out
pop
pop
mov
mov
add
cmpsl
lds
test
jg
or
and
ss
xchg
xor
lods
test
xchg
pop
lock
and
xor
or
test
out
and
inc
out
push
inc
push
movsb
fidivrs
int
leave
out
lcall
xor
imul
sbb
jecxz
dec
mov
and
push
lock
cmpb
adc
sub
dec
es
push
shlb
ret
jge
pop
push
fwait
mov
testb
mov
cmp
ds
enter
cmpsb
out
push
jns
notl
xchg
sub
mov
iret
pushl
lret
lret
insb
adc
bswap
setbe
pop
cwtl
adc
mov
lea
sbb
movsb
test
sbb
mov
adc
mov
outsb
pushf
cmc
ret
enter
push
aad
jae
jecxz
fsubrl
xor
jle
pop
jae
enter
jmp
imul
negl
dec
out
mov
mov
clc
jecxz
jmp
sbb
pop
int3
fidivl
pusha
inc
cmp
js
cmpl
mov
adc
jae
nop
addr16
jle
dec
adc
idiv
bswap
cmc
xor
out
or
adc
jns
imulb
xchg
outsl
jg
push
inc
push
popf
adc
pusha
pop
cmp
push
jecxz
mov
nop
or
fdivrl
fucomip
lods
and
fcoml
lcall
sbb
mov
fldenv
push
inc
cmpsl
cmc
or
fnstcw
pop
dec
cmpsl
call
mov
cwtl
fdivrs
push
xor
cmpb
mov
repnz
adc
jg
jne
gs
adc
nop
cmc
loop
out
mulb
jo
or
dec
dec
jno,pn
insb
push
cmp
push
out
mov
xor
flds
xchg
mov
push
rorb
mov
aad
push
int3
out
pop
cld
std
and
lock
or
xor
movsb
aam
cmp
sbb
jb
xchg
rcr
xchg
dec
xchg
pop
ds
or
pop
test
ror
jae
push
mov
retw
shrb
ret
push
mov
sbb
movb
lcall
inc
add
push
clc
pop
lods
int
xchg
or
cmp
dec
pop
add
mov
xor
pop
mov
jp
arpl
sbb
and
fldcw
outsb
push
pop
stos
push
cmc
iret
adc
mov
mov
test
test
ja
pop
sbb
dec
adc
sub
imul
fdivl
test
xchg
aad
mov
cmc
xor
movsl
int3
ficoml
fwait
outsl
pop
jb
orl
imul
arpl
push
clc
ja
and
or
lods
in
or
mov
jae
add
into
push
xchg
mov
pop
or
aaa
clc
xchg
xchg
pushf
mov
addps
shlb
and
pop
bound
sub
xchg
stos
es
lret
mov
int
pop
cld
lret
push
mov
mov
cmp
sub
push
inc
mov
icebp
xchg
mov
dec
icebp
sub
mov
adc
std
push
std
fisubrl
fdivs
hlt
fists
sub
out
mov
mov
cli
test
into
dec
arpl
push
xchg
or
pushl
adc
dec
lea
push
dec
mov
pushf
push
jbe
cli
fsub
inc
mov
jp
push
lds
fstpt
bound
test
test
cmpsl
xor
mov
fbld
fwait
orb
jge
mov
aas
mov
xlat
push
sahf
into
pop
bswap
push
arpl
je
leave
andl
sub
push
adcl
iret
sbb
cmp
mov
sbb
add
lahf
mov
into
lods
test
sub
and
push
xchg
jae
in
ret
dec
sti
fmuls
xlat
flds
sahf
adc
fsubr
push
fldl
test
mov
push
jnp
push
or
sbb
push
outsb
or
test
xchg
lret
test
xchg
out
ljmp
push
xor
xchg
jmp
addr16
leave
xchg
fbstp
mov
pop
pop
stc
sbb
cwtl
js
pop
mov
and
rclb
inc
leave
rorb
inc
sbb
push
xchg
aas
jnp
imul
pop
or
mov
in
sbb
mov
cs
je
addr16
aaa
lods
sahf
sarl
or
test
xor
mov
aaa
xor
cmp
lret
mov
fwait
mov
cmc
rorb
js
sbb
lcall
lock
sbb
in
test
push
inc
xchg
sbb
mov
and
lods
push
mov
adc
pop
cs
std
or
push
in
jno
fsts
subb
ret
gs
dec
cld
mov
dec
cmp
loope
int
into
sbb
dec
call
arpl
xlat
test
outsb
pop
fwait
dec
outsb
sub
cli
lea
xchg
and
cmp
cmp
sbb
cltd
dec
dec
in
lret
jge
jle
cltd
sub
aam
and
gs
sahf
mov
xchg
push
pop
dec
pop
pop
shll
lods
jbe
mov
push
out
rcrl
icebp
js
cmp
aaa
pushf
and
push
shlb
mov
mov
adc
pusha
daa
sbb
and
loop
shl
xchg
lcall
out
pop
add
xchg
sub
lock
dec
push
jae
dec
jecxz
enter
icebp
sbb
aad
repz
rorb
cmc
fstps
insb
push
shrl
inc
arpl
cmp
sti
mov
sub
arpl
ljmp
jnp
push
pop
icebp
and
push
sahf
cwtl
shlb
test
outsb
mov
int3
call
gs
in
ret
jns
pop
push
insl
push
mov
lods
cmpsb
add
stos
in
pusha
mov
xchg
xor
clc
out
lret
sub
nopl
int3
sub
je
cmpl
sub
ficoms
xlat
cmp
mov
adc
mov
arpl
pop
out
jnp
sbb
push
mov
mov
lea
movsl
push
aaa
lods
inc
push
pop
out
loopne
or
test
or
jmp
sub
mov
popf
lret
push
ss
test
jno
push
sub
repnz
mov
loopne
jmp
stc
push
or
adcl
cld
dec
iret
xchg
cs
insl
mov
mov
jge
mov
movsl
push
test
xlat
lahf
aad
movsl
inc
mov
add
xchg
sti
push
jle
int3
mov
mov
cli
insb
push
add
lock
dec
repnz
loop
adc
cld
fsubrs
movsl
add
xchg
addl
xchg
orl
in
sbb
sar
popa
pop
push
and
sbb
or
lods
addb
push
xor
jle
push
sub
dec
jne
mov
out
cs
mov
stc
mov
xchg
dec
cwtl
lods
push
loop
push
es
jno
inc
mov
int3
adc
movsb
jb
fsubl
mov
pusha
push
or
ret
sarb
xchg
jae
into
jg
jo
lea
jle
stc
aas
adc
subl
call
aad
pop
loop
mov
push
inc
call
leave
inc
hlt
inc
inc
adc
outsl
leave
mov
mov
push
adc
lahf
ja
fdivrl
jge
and
ljmp
xchg
in
out
push
mov
fiadds
test
push
mov
cmp
cltd
xchg
xor
fldenv
fcmovu
cltd
test
orb
nop
pop
pusha
test
jle
xchg
add
sahf
sub
mov
fidivl
mov
and
cmc
push
jge
add
nop
and
xchg
scas
shrb
sahf
js
inc
mov
cs
sub
mov
ret
scas
in
js
sbb
push
stos
mov
jbe
iret
mov
daa
mov
fmuls
pop
insl
sub
add
icebp
mov
clc
sbb
add
adc
dec
call
mov
jnp
into
cmp
frstor
lcall
sbb
sub
adc
xchg
push
fcmovnbe
leave
push
in
loope
fcoms
inc
fistpll
scas
sub
int3
adc
mov
jns
push
lock
pop
or
cmpsl
nop
mov
inc
xor
in
push
aad
clc
and
push
xchg
jae
rcll
inc
mov
inc
pop
jecxz
test
loope
fstpl
lods
inc
sbb
add
lds
fs
lock
popf
cmp
ret
push
mov
lcall
test
fdivr
shll
dec
repz
pop
mov
aas
or
jnp
popa
popa
xchg
aad
in
ret
push
clc
mov
mov
jnp
sbb
inc
inc
pop
rolb
test
sub
daa
mov
sub
or
xchg
cmpsb
aam
jle
fbld
sbb
fisubl
les
lret
shl
cwtl
mov
xchg
push
pushf
out
pop
sub
xchg
inc
push
cli
cmc
push
enter
xchg
sbbb
cltd
data16
enter
and
dec
inc
or
mov
scas
rcl
xchg
pop
shrb
stos
mov
jns
cld
in
std
and
sub
mov
insl
rorl
adc
enter
push
aaa
sbb
push
rclb
and
push
mov
ss
xchg
pushf
data16
cli
bswap
add
mov
insb
pusha
call
jbe
rclb
mulb
xor
inc
lds
bound
xchg
xor
push
clc
rorb
popf
sbb
mov
lcall
cld
daa
pop
jle
pop
lahf
pop
mov
into
fiadds
xchg
mov
popa
push
xchg
repnz
push
aad
adc
add
mov
xchg
dec
mov
adc
leave
mov
mov
out
popf
outsl
jecxz
and
inc
imul
push
in
cld
adc
filds
int3
or
mov
int
adc
or
sti
or
add
or
sti
lret
sub
mov
jb
stc
push
arpl
cltd
push
iret
dec
das
push
shrb
testb
scas
cld
hlt
push
sarb
dec
sub
mov
popf
dec
popa
xchg
ss
inc
mov
dec
js
cmp
inc
adc
pop
std
imul
inc
xchg
ret
jg
or
push
xchg
or
jo
or
push
scas
push
inc
mov
and
arpl
jp
push
movsb
ss
xor
fsubl
outsb
add
mov
xor
fldenv
xlat
inc
push
out
dec
lret
mov
lods
cmp
cmp
shrl
call
dec
inc
out
add
jg
cmpb
rorl
int
mov
sbb
ds
pushl
into
insl
fldenv
xor
push
rcrb
sbb
mov
xor
sbb
push
xlat
daa
fmull
adc
pusha
adc
mov
les
or
push
push
mov
dec
aad
sbbb
cltd
aas
xchg
sbb
xchg
xchg
cbtw
stc
fisttpll
dec
jo
lahf
mov
test
pop
add
jbe
lea
lahf
bound
pop
shrl
cmp
loope
shrl
xchg
xor
inc
movsl
add
and
or
push
mov
push
or
ja
shlb
or
inc
popf
icebp
sub
or
cmp
and
dec
loope
mov
in
xchg
pop
xorb
fmulp
mov
and
jbe
jns
pop
cs
inc
pop
test
pop
ds
dec
cwtl
fnsave
or
mov
mov
jo
mov
cltd
xchg
add
adc
ss
mov
sub
xchg
mov
arpl
mov
imul
out
xchg
xor
ss
push
cld
mov
hlt
xor
add
xor
das
add
inc
fsubs
fisttpl
dec
xor
push
and
rol
mov
jmp
lock
xchg
sub
movsl
aad
pusha
sti
adc
outsb
insb
mov
fimuls
mov
jmp
mov
cmp
xchg
push
fs
int3
mov
lods
cmpsl
nop
ljmp
xlat
mov
mov
mov
and
dec
js
insl
insl
xchg
inc
mov
cmp
pop
aam
gs
sub
jno
outsb
mov
or
mov
testl
pop
or
adc
mov
and
push
push
jmp
jae
orb
push
pop
sarb
subl
mov
pop
mov
mov
add
insl
arpl
xchg
xchg
movsb
nop
mov
mov
je
sar
xchg
mov
inc
pop
fdivl
dec
addb
push
sbbl
xchg
xchg
xor
test
mov
jae
call
mov
subb
repz
sub
sbb
xor
push
pop
push
or
out
leave
fldcw
and
jb
pop
pop
int
add
je
cmp
and
mov
mov
push
sti
inc
push
mov
fwait
adc
mov
or
pop
imul
push
std
lods
sahf
lcall
inc
dec
push
fsubl
inc
in
adc
and
mov
inc
std
push
cs
push
jne
test
pop
jl
ljmp
sbb
adc
daa
jb
add
pop
pop
test
call
mov
sbbb
jge
cmp
xchg
sub
push
dec
sub
sub
cmp
jbe
push
mov
stc
pop
inc
dec
dec
cmp
loopne
xchg
pop
lea
mov
and
in
sub
xchg
push
sahf
je
in
aad
push
xlat
pop
pop
mov
arpl
js
mov
filds
and
mov
sub
or
out
sbb
and
dec
loopne
lret
lret
inc
mov
lds
mov
loopne
mov
imul
and
adc
mov
enter
xchg
push
dec
cli
insb
pushf
aas
fstl
dec
adcl
in
mov
inc
mov
push
mov
aam
add
cmpsb
iret
pop
out
test
push
test
inc
xor
jp
rolb
out
inc
lods
lret
or
mov
and
dec
stos
push
add
cmp
stos
pop
imul
dec
inc
aaa
cwtl
pop
loop
jge
lea
lock
shrl
dec
mov
int
mov
lcall
and
cmpsb
mov
jmp
iret
cmp
sbb
xorb
test
sub
xchg
cltd
sub
lds
les
loope
clc
rorb
push
lods
in
insl
mov
xlat
cld
xorl
lds
or
popa
cmp
cltd
bound
cmp
repz
jo
and
dec
das
jbe,pn
lret
hlt
inc
inc
iret
testb
sub
pusha
pop
bound
jle
pushf
push
add
mov
int3
pop
jbe
les
lock
scas
push
inc
xlat
cltd
scas
lret
cld
pop
jmp
or
leave
push
xchg
dec
and
pop
mov
in
out
sahf
std
dec
cltd
dec
mov
and
push
xor
and
stc
sbb
add
mov
jecxz
dec
outsl
push
xchg
into
xchg
pop
into
inc
and
push
push
popa
dec
pop
push
mov
jb
lahf
adc
jmp
sbb
xchg
cmpsl
dec
xchg
mov
and
in
push
xchg
repnz
sub
jge
push
ss
mov
or
imul
mov
shll
push
jb
aam
xchg
push
jno
fsubr
adcb
out
in
mov
int
sahf
cwtl
cmp
loopne
std
push
ror
mov
lds
loope
jns
ljmp
push
sub
cmc
xor
add
push
and
cli
push
mov
xchg
lods
inc
icebp
dec
pop
iret
jg
inc
push
sub
aad
jne
mov
iret
mov
pop
xchg
leave
jne
fs
in
xor
sbb
mov
cmpl
mov
aaa
inc
and
scas
imul
dec
inc
mov
and
inc
jp
pop
fs
lcall
cltd
jge
lss
sub
mov
push
and
mov
and
sbb
fcompl
scas
loopne
jno
aam
loope
test
in
mov
xchg
pop
pop
ffreep
inc
fsubrs
dec
loope
jne
jecxz
out
jle
in
jl
adc
out
adc
mov
jge
and
movsb
pop
je
cmp
jl
xchg
push
in
xchg
sbb
testl
dec
cmpsl
adc
fstl
int3
fistps
mov
or
dec
mov
jns
push
sbb
push
sbb
fcmovb
aas
cli
pop
and
dec
test
jge
cltd
icebp
js
aas
xor
mov
jmp
loop
mov
add
and
inc
pop
inc
in
dec
fdivrp
push
enter
clc
jg
pop
addr16
push
dec
xchg
cld
inc
jae
xor
rep
ds
cmp
sbbl
movsb
insb
loopne
cmp
xchg
xchg
sahf
inc
pop
jo
dec
arpl
add
mov
mov
cld
xchg
lods
pop
lret
out
scas
repz
mov
lret
int3
outsb
mov
mov
push
mov
push
pop
jnp
mov
shrb
pop
xchg
pusha
cmpl
stos
mov
dec
arpl
mov
jo
mov
and
xchg
nop
mov
loop
lahf
fwait
dec
jo
orl
sub
jle
add
add
sbb
push
test
fistpl
fstl
loopne
jecxz
lods
and
icebp
in
sub
pop
jbe
and
mov
add
cli
xchg
push
popa
stos
mov
stc
test
inc
xchg
shlb
xchg
rcrl
aas
mov
mov
jbe
divl
movsb
test
dec
loope
outsl
xchg
or
add
xchg
cltd
dec
in
add
es
cmp
push
stc
sbb
inc
cmp
mov
inc
xor
sti
dec
xor
int
cmp
inc
or
sahf
hlt
lods
inc
xor
iret
sbb
jbe
loop
inc
add
cmp
sarl
fs
lds
jno
testl
aad
es
leave
rcl
sarb
mov
sar
pop
push
jb
test
cs
or
enter
mov
ja
inc
sub
inc
sbb
sti
call
mov
scas
scas
cmc
xchg
xchg
or
test
arpl
stos
cld
push
jmp
dec
test
mov
fidivrs
stos
popf
popa
inc
or
std
imul
dec
adc
ljmp
stos
pop
fwait
sub
shll
mov
sub
test
pop
test
pop
inc
mov
call
push
xor
scas
push
dec
dec
sti
loope
les
push
pop
push
ss
lcall
ds
sub
ficompl
sub
cmp
lea
shll
std
cmp
adc
insb
daa
das
outsb
leave
push
jmp
push
ljmp
pop
repnz
add
stos
cwtl
dec
lock
sti
popa
movsb
mov
hlt
scas
dec
inc
cmp
xchg
sbb
fwait
in
cmp
inc
mov
cmp
negb
scas
rorl
adc
adc
cmp
ror
fwait
push
xor
or
push
xor
xchg
xchg
jmp
lret
or
stc
jae
aad
lds
or
jns
xchg
outsb
or
cli
inc
sti
jmp
enter
fsubrp
pop
mov
push
or
add
sub
into
mov
aam
xchg
daa
add
or
decl
cmpl
dec
xor
pop
pop
ret
xor
adc
jp
lret
mov
scas
xchg
mov
sub
sti
call
and
dec
mov
mov
mov
mov
sbb
hlt
xchg
push
push
mov
movsb
push
mov
mov
ret
xchg
fadd
jns
inc
mov
cmp
pop
cmp
jae
out
out
testl
out
jns
pusha
mov
outsb
cltd
sbb
aaa
jge
testb
mov
sbb
mov
inc
pop
ds
rcrl
sarl
mov
mov
and
mov
sbb
movsb
dec
inc
adc
cmp
lahf
sub
push
xlat
adc
mov
or
je
sbb
inc
or
imul
xorl
inc
nop
sarl
pop
lea
sti
daa
jb
rclb
mov
lock
int3
pop
cmp
fidivrl
jne
fidivs
inc
xchg
adc
sahf
daa
outsb
lret
pop
outsl
std
in
push
sbb
das
outsb
repnz
xchg
or
mov
inc
mov
push
pop
cmp
adc
cmc
lcall
enter
push
inc
and
lahf
lods
mov
iret
pop
mov
fs
shlb
dec
ret
sub
daa
ror
lods
xchg
pop
scas
movsl
pop
rorb
jle
mov
and
jecxz
fdivrp
outsl
mov
mov
lock
sahf
sbb
and
lret
pop
inc
stos
add
ss
push
mov
adc
test
dec
pop
mov
push
jg
pop
leave
movsl
aas
sarb
cmp
orb
ret
int3
mov
aaa
mov
adcl
inc
fdiv
and
lcall
popf
cmp
jne
cmp
or
movsb
mov
jge
pop
loopne
ret
cmp
mov
cmp
xor
cmpsl
cmp
arpl
inc
sti
mov
scas
pushf
unpcklps
popa
sahf
cmp
daa
shlb
rol
dec
pop
inc
push
mov
fsts
sbb
rorl
push
fwait
sahf
push
cld
fldcw
or
add
inc
lcall
dec
jge
outsl
js
out
and
lret
dec
xchg
sar
lods
int3
push
pop
addr16
int
fldcw
ljmp
lahf
icebp
flds
sub
loope
je
mov
mov
pop
xchg
push
imul
push
out
pop
inc
push
mov
lahf
rorl
jmp
pop
xor
adc
push
and
movsb
int3
adc
cmp
xor
jle
test
out
orps
push
cvtdq2ps
inc
mov
mov
call
in
stos
adc
mov
rorb
jbe
inc
or
and
movsb
or
lods
popa
jae
jecxz
divl
inc
js
notb
shl
jbe
popf
test
into
inc
xor
sbb
adc
push
pop
or
iret
sub
mov
icebp
push
enter
add
xchg
xor
adc
pop
adc
imul
sub
push
jle
mov
sar
roll
xor
stos
jns
mov
lahf
xchg
imull
je
rorl
lret
push
pop
adc
xor
cmpb
mov
stos
sti
jg
test
into
xor
aas
clc
mov
or
dec
add
sub
mov
imul
loope
orb
jg
or
popa
mov
fstpl
dec
lods
add
add
es
jmp
pop
mov
int3
xor
jle
jp
into
inc
and
mov
pop
add
xchg
loopne
test
cmp
inc
sahf
out
es
dec
push
cmp
js
push
adc
inc
adc
mov
fcomip
gs
and
ret
cmpsl
leave
mov
push
cld
int3
dec
insl
adc
testb
push
outsl
insl
sub
js
aaa
inc
pop
xchg
xor
cli
lret
sahf
mov
lods
insl
jno
jp
lock
dec
fsts
pop
dec
mov
in
and
dec
add
mov
movsl
dec
test
dec
dec
shl
sar
add
jl
adc
fidivs
sbb
sbb
mov
push
enter
jg
hlt
dec
jne
sbb
jns
jecxz
outsb
rcrl
fnsave
and
sahf
es
call
mov
rcr
test
into
movsl
stc
xlat
push
and
repz
imul
int3
cli
cld
iret
push
sbb
sbb
sbb
or
push
push
popf
mov
decl
jne
mov
push
js
sub
popf
jno
xchg
jg
dec
pushf
xor
notl
or
cwtl
sub
pop
arpl
cmp
ja
xchg
xor
or
push
cmpsl
int
shlb
inc
stos
xchg
insl
arpl
sahf
aas
xor
xchg
dec
xchg
mov
sbb
negb
bound
sub
push
bswap
shrl
mov
ds
stos
mov
icebp
lock
popa
xchg
fs
push
gs
or
jae
out
ljmp
cmpsl
adc
mov
and
ret
and
jb
mov
xchg
punpckhdq
jg
pusha
int
imul
jb
pop
icebp
repz
nop
mov
loopne
mov
mov
mov
jbe
sbb
add
adc
sub
test
inc
xchg
jb
mov
or
loope
fs
jl
or
sbb
lea
loop
aas
loop
cmpsl
push
xor
and
cwtl
jp
popa
ret
jmp
xchg
or
je
dec
shl
dec
xor
cmp
xchg
leave
inc
mov
mul
adc
fiaddl
addr16
xchg
lret
push
pusha
inc
sbb
sbb
pop
pop
pop
jno
push
scas
fiadds
push
ja
mov
test
leave
in
mov
repz
xor
add
adc
jle
fnstsw
xchg
das
cmp
xlat
pop
push
jp
jno
xchg
ja
data16
test
or
jae
imulb
fisttpl
push
aam
or
into
cmc
add
xchg
sub
dec
jnp
jecxz
xchg
aad
cmpsl
lea
leave
xor
in
xor
test
cmpsl
and
rep
int3
into
dec
jb
inc
sbb
sbb
loope
or
add
insb
test
push
mov
sahf
push
lea
mull
daa
dec
lds
lods
mov
jne
xor
or
cmp
outsb
dec
sub
push
add
push
adc
loope
mov
jl
shlb
mov
pusha
cmc
scas
and
pusha
xchg
mov
loope
xor
push
mov
or
and
ret
scas
pop
popa
lahf
aad
icebp
add
mov
outsl
add
lods
or
adc
pop
jecxz
rcr
mov
mov
cmc
xor
adc
push
movb
scas
shll
and
pusha
pop
fcoml
mov
jnp
in
pushf
xor
jge
or
pop
jns
xchg
push
push
cmpb
xchg
mov
pop
pop
xor
std
sti
mov
leave
data16
lods
popf
mov
pop
or
cmp
test
int3
cmpsl
cmp
aaa
or
and
ja
rcll
sbb
cmp
faddp
jecxz
lret
mov
and
dec
dec
data16
mov
ljmp
js
pop
sub
xchg
mov
xchg
test
mov
push
or
test
xchg
ljmp
pop
nop
sub
dec
ss
ja
fisubrs
add
fildll
notl
sahf
pop
mov
mov
test
test
iret
add
pop
mov
cs
push
cltd
call
pop
loopne
fsubl
push
xchg
scas
cmpsb
add
outsb
cld
or
cmpsb
mov
mov
or
mov
inc
sub
mov
or
and
xor
inc
or
adc
in
cltd
dec
inc
ficoml
popf
imul
andl
and
lods
sbb
add
dec
adc
sti
jae
popa
or
add
inc
insb
xchg
loope
mov
test
xor
pop
fildll
sbb
push
bound
or
jo
shlb
incb
mov
add
mov
xor
add
pop
cmp
jns
push
or
cmp
xchg
xchg
mov
mov
lcall
in
xor
dec
sub
dec
pop
push
jl
test
out
cmp
mov
inc
test
mov
jle
stc
jbe
push
sub
dec
fcompl
xchg
push
aas
push
jae
sbbb
es
in
adc
ret
nop
imul
movsb
pop
add
lock
jge
mov
ret
add
shr
shr
cmpsl
daa
hlt
fwait
outsl
mov
loopne
pop
jo
jl
pop
pop
roll
in
jnp
cld
inc
scas
xor
ja
sub
fstl
inc
mov
dec
jno
jne
in
ljmp
ror
add
and
xor
xlat
movsb
fyl2x
adc
pop
push
add
movsb
test
dec
int
xchg
enter
sub
subl
inc
or
pop
xor
xor
lret
mov
pop
cmp
popf
jle
pop
mov
pushf
adc
mov
icebp
or
mov
sbb
loop
adc
hlt
int
xor
xcrypt-cfb
cmpsl
cmpsb
mov
ret
push
pushf
loop
cmc
xchg
pop
mov
outsb
xor
add
add
sub
add
dec
fistpll
cmp
jecxz
pop
xor
aad
mov
scas
lods
aas
lahf
test
cmc
ficoms
push
cmp
xor
inc
mov
or
test
sub
pop
push
mov
mov
test
imul
adcl
mov
dec
dec
mov
je
ss
loop
mov
out
or
pop
nop
push
aaa
lods
inc
loopne
and
pop
lods
push
mov
dec
dec
loop
push
sahf
imul
mov
push
adc
jo
insl
popf
notl
pop
sub
stos
mov
mov
mov
fstpt
js
lods
pop
test
outsl
push
negl
test
and
jbe
jo
mov
sbb
mov
les
jl
fdivrl
mov
test
xor
lret
mov
pop
dec
push
add
inc
add
frstor
push
inc
insl
jmp
jecxz
sub
adcl
and
mov
lret
xchg
popa
outsb
mov
js
lret
jo
flds
or
pop
adc
mov
insl
cmp
or
sub
js
in
aad
jae
and
dec
push
in
push
mov
imul
add
clc
sub
pop
sbb
push
mov
ret
call
aas
das
dec
mov
push
sarl
dec
pop
and
fbstp
lret
test
mov
in
fnstenv
fs
js
lret
mov
pop
sub
xchg
adc
cmp
xor
mov
int3
lods
push
mov
es
fcomps
xlat
xchg
push
fs
cld
addb
mov
movsl
pop
sahf
int3
xor
out
in
xchg
jmp
pop
loopne
mov
pop
and
xor
adcl
hlt
fiadds
mov
rclb
arpl
dec
setne
sbbb
mov
or
mov
rcr
data16
cmp
fwait
sti
cmpsb
lea
push
mov
nop
or
insb
inc
fistpll
dec
call
sarl
adc
popf
je
shl
xlat
test
test
cmc
cmpsl
insb
sbbb
pop
mov
cltd
adc
sahf
ss
mov
pop
sub
lcall
cmpsb
call
mov
sub
imul
cmp
inc
gs
fdiv
adc
dec
dec
in
jg
fidivrs
push
loopne
dec
inc
xchg
in
stc
repnz
stc
test
push
push
lds
or
mov
repnz
cwtl
xor
or
push
icebp
sbb
into
movl
ret
adc
mov
in
mov
sub
lods
mov
inc
arpl
adc
push
sub
cmp
lcall
or
adc
adc
mov
xor
dec
es
dec
mov
push
xorb
push
add
imul
das
xchg
push
push
adc
jmp
and
or
sbb
cmp
repnz
mov
push
fisttps
and
stos
sub
inc
ret
mov
sub
enter
in
call
or
sub
mov
lods
sub
nop
mov
add
adc
xorb
enter
xchg
arpl
inc
outsl
into
adc
mov
mov
popa
movb
adc
dec
add
and
push
dec
into
outsb
flds
add
loop
mov
jo
imull
sbb
and
dec
adc
dec
pop
in
mov
xchg
inc
aaa
int
in
inc
nop
fstl
push
lds
adcl
inc
adc
fdivrl
mov
jno
push
push
idivb
fbld
int3
add
loope
scas
bndstx
ficoml
cmp
out
or
pop
jo
xchg
fwait
xor
push
test
push
fisubrl
mov
nop
pop
jo
mov
mov
sbb
inc
xor
rorl
into
daa
jg
mov
xlat
pop
xchg
xchg
push
cmp
jl
aam
xor
adc
or
xor
add
mov
mov
inc
lcall
cltd
push
inc
jl
repz
movsl
sbb
lahf
daa
xchg
and
cmp
sbb
and
lea
sub
xchg
mov
lds
fdivr
or
xchg
pop
pop
jl
lods
xchg
adc
clc
adc
dec
scas
xchg
sar
cmp
lock
mov
jno
jmp
cwtl
mull
lahf
xchg
pop
int3
sbb
mov
and
cmp
testl
jno
loope
test
mov
pop
dec
pop
mov
or
stos
aad
adc
push
js
mov
out
mov
xchg
mov
sub
push
and
rol
push
pop
push
push
jne
ja
movl
pop
dec
mov
test
fistpl
mov
in
in
inc
push
pushf
clc
flds
shrl
popa
enter
mov
inc
fisubl
jmp
lret
mov
icebp
inc
adc
and
sti
in
testl
aaa
mov
lods
loopne
rol
cmp
add
outsb
movsl
fnstenv
add
iret
jl
lock
cld
pop
push
ret
pop
push
sbb
popa
shrb
adc
bound
lock
rolb
jmp
sbb
gs
xchg
fildll
call
popf
inc
mov
addr16
iret
fwait
jns
mov
jae
pop
dec
dec
jl
mov
in
and
imul
cmc
and
inc
movsb
mov
sti
mov
decl
in
push
push
add
cmpsb
jb
or
outsb
pop
or
ret
out
cltd
idiv
jno
mov
cmp
xorb
clc
mov
out
cwtl
pop
stos
add
inc
leave
imul
mov
stos
add
sub
stos
cmpsl
push
jnp
and
pushf
mov
pop
sbb
inc
adc
cmp
jne
sbb
dec
mov
push
shlb
pop
fwait
lret
add
mov
nop
aas
push
cmp
das
xor
push
dec
fisttpl
push
cmp
jp
lcall
pop
std
dec
mov
jge
loopne
mov
stos
int3
dec
pop
inc
xchg
cmp
arpl
lods
imul
cwtl
adcl
leave
pop
test
mov
rolb
nop
clc
mov
push
cwtl
and
inc
jge
loope
int
rolb
lods
jbe
scas
shr
stos
lahf
stos
inc
jecxz
cld
push
out
adc
popf
shl
mov
cmp
adc
xchg
scas
adc
ljmp
fldl
cld
in
pop
pop
out
lret
jmp
sbb
call
xor
cmp
or
mov
xorb
mov
jg
ja
in
vphaddbd
sub
cld
dec
inc
dec
jnp
arpl
push
cld
add
push
repnz
cmc
inc
inc
scas
cmpsb
es
add
pop
mov
jmp
es
sahf
add
pusha
jmp
mov
jbe
dec
xor
and
fs
cmp
mov
xchg
fnstenv
and
adc
jmp
outsl
shll
and
jne
adc
push
push
in
pop
xlat
xchg
or
pop
sbb
mov
pushf
and
jnp
bound
aam
lcall
adc
cmp
insb
add
cmp
pop
addr16
jp
add
cmp
call
and
and
sarl
jl
adc
cwtl
adc
mov
mov
punpckldq
imul
xchg
xchg
push
lcall
adc
sbb
std
fld1
push
pop
mov
sahf
lahf
cld
xor
push
lods
cltd
cltd
push
es
inc
adc
pop
push
movsb
aas
das
cmp
inc
lock
jmp
and
icebp
test
clc
cmc
aad
loop
dec
mov
and
fwait
mov
in
cmpsb
or
fs
xor
xchg
ficompl
inc
or
lahf
clc
xchg
lds
pop
mov
ret
inc
push
jmp
sub
lds
imull
mov
and
xlat
out
negl
sbb
mov
lock
push
jbe
mov
pop
mov
dec
cmp
outsb
xchg
das
push
ret
mov
sub
pop
dec
lret
xchg
sub
mov
pop
push
inc
xchg
and
push
mov
pop
subb
adc
daa
rcll
out
pop
xchg
inc
pushf
mov
jge
jns
sub
xlat
js
hlt
sub
aam
rcrb
jp
pusha
xchg
mov
imul
lods
inc
add
std
pop
dec
mov
ud2
lahf
in
mov
add
mov
xchg
leave
xor
rclb
cmpl
pop
lahf
inc
cli
or
stos
or
out
enter
repz
mov
fildl
pop
sti
adc
and
inc
mov
sbb
ret
das
sub
lcall
fs
std
test
xchg
jle
mov
into
and
arpl
sub
mov
dec
mov
pop
sbb
ror
fistpl
orl
int3
mov
cmp
or
mov
or
mov
out
dec
push
scas
push
hlt
adc
add
mov
out
mov
mov
data16
xchg
repz
or
nop
sub
cmc
mov
xchg
sbb
sub
mov
sbb
nop
imul
adc
ret
mov
lock
stos
or
sub
repnz
mov
dec
loopne
jb
push
sub
repnz
mov
xchg
inc
pop
xchg
jecxz
inc
jbe
and
jecxz
pop
mov
pop
mov
jno
xchg
cmp
fs
sbb
subb
popf
pop
out
jmp
lods
enter
adc
rclb
bound
sbb
dec
sub
arpl
cmpb
rolb
lret
xorl
lock
jns
iret
xchg
xor
clc
cltd
out
bound
dec
lods
lock
out
cwtl
test
xor
cmp
or
jno
mov
aam
rorb
clc
fs
sub
hlt
sub
lcall
inc
inc
mov
je
mov
loop
fisubrl
jmp
sub
not
jle
ret
inc
fdiv
gs
mov
pop
into
and
lret
mov
inc
inc
xor
pop
daa
sbb
lret
push
imul
lahf
and
es
test
dec
push
in
push
inc
sbbl
sub
add
stc
popa
notb
dec
xorb
ret
adc
inc
mov
xor
testb
ss
ljmp
js
add
jne
pop
add
sub
mov
mov
cld
fwait
or
and
lret
mov
ja
cmpsb
mov
xchg
les
adc
leave
inc
loope
fsubl
dec
xor
xor
outsl
mov
add
ret
push
popf
adc
insb
inc
xor
dec
pop
lret
enter
xchg
jbe
mov
out
mov
hlt
sub
mov
add
xor
cmp
and
adcb
rcl
inc
ret
sbb
adc
xchg
or
mov
cli
push
mov
cltd
shl
imul
clc
popa
mov
dec
xchg
shrb
xorb
out
data16
inc
inc
or
inc
lock
out
push
pushf
in
cmpsb
pop
sbb
scas
popa
sbb
inc
cmp
jl
imul
mov
in
mov
push
orb
rcl
sub
lea
popa
sub
shlb
cli
pop
fiadds
les
roll
loop
addb
push
loopne
dec
dec
add
xor
mov
notl
jne
sbb
xchg
xor
shrb
mov
xorl
dec
fsubl
insb
xchg
adc
xchg
test
das
loope
cmp
data16
mov
mov
and
test
jl
cmp
addr16
xchg
rclb
inc
fnstsw
push
cltd
loope
mov
lds
pop
addr16
push
aad
rolb
test
push
dec
arpl
cli
sub
inc
adc
lods
les
mov
imul
cmpsl
or
cli
lret
pop
insl
out
lds
add
xor
inc
mov
push
stos
test
mov
movl
lcall
outsl
mov
mov
das
sti
imul
arpl
in
push
and
mov
cld
test
stc
xor
inc
and
loope
xlat
into
or
lahf
cld
inc
xchg
rol
add
popf
arpl
xchg
mov
push
loope
xchg
cld
jnp
aad
xchg
mov
les
push
sbb
push
insb
shll
add
adc
push
jecxz
jbe
push
loopne
jecxz
sbb
cmp
xor
ret
js,pn
loop
xlat
sub
les
adc
pop
jg
xchg
loopne
xchg
xor
dec
lret
lock
pop
pop
xchg
push
dec
adc
hlt
push
cmpsb
adc
mov
outsl
fsubrs
inc
pop
pop
mov
jo
enter
and
jae
xor
popf
mov
repz
add
cmc
jecxz
cld
aas
rcrl
sbb
dec
cltd
push
lods
mov
mov
paddusw
roll
mov
push
fs
pusha
adc
dec
add
lods
fisubl
or
lods
sbb
pop
aam
decb
out
mov
js
in
es
push
mov
push
sbb
cmp
jnp
xchg
inc
addr16
pop
mov
mov
adc
into
fwait
jne
pop
cltd
mov
add
stos
in
mov
xchg
mov
xchg
stos
xor
jmp
les
xor
jbe
cmp
mov
xor
fiadds
addl
fs
adc
xchg
and
push
das
xchg
lods
mov
adc
jmp
jp
add
push
mov
cld
pop
mov
mov
leave
mov
xor
in
push
push
mov
lds
ja
ss
rolb
jmp
call
mov
mov
and
sub
ficoml
sbb
push
popa
fisttps
and
fcomip
sub
mov
mov
add
aad
icebp
ret
aas
cmc
pop
adc
ret
jae
inc
sub
cmp
push
mov
cmp
aam
dec
push
mov
rclb
popf
cmp
sub
movl
or
lret
scas
push
dec
js
and
int
insl
or
pop
jne
push
lods
mov
int3
xchg
insb
pushf
and
lcall
fbld
lahf
or
ja
pop
faddl
xor
jns
or
jp
xor
jo
sub
addr16
loop
jle
xchg
dec
adc
inc
xlat
or
aam
adcb
pop
arpl
out
push
pop
cmp
xchg
xchg
add
into
addr16
adc
jl
xchg
cld
imull
iret
xchg
cld
pop
vpmacsww
dec
gs
mov
cli
jb
jae
add
pop
xchg
test
xchg
stos
shrb
in
shr
add
push
stc
pusha
rcll
arpl
je
aas
mov
mov
les
mov
loope
xchg
lret
repnz
outsb
loop
jno
dec
fcmovnbe
xor
push
stos
sbb
xchg
ja
out
cmpsb
xchg
std
inc
fmuls
mov
mov
xchg
fldlg2
and
mov
push
adc
add
lods
lcall
loope
sarl
mov
mov
stc
pushf
and
lea
repz
or
jo
lcall
stos
mov
push
cld
sbb
lret
xchg
aaa
jle
and
adc
xor
jg
cmpsl
cmpsl
loop
pop
jnp
hlt
inc
xor
mov
mov
fisttpl
imul
push
sar
dec
es
data16
mov
mov
add
loop
pop
mov
mov
pop
xor
sub
jne
fs
fisubrs
jl
jl
sub
push
ds
loop
inc
subb
in
dec
sahf
adc
mov
jl
in
cmp
sub
shll
insl
insb
das
shl
xchg
sbb
fildll
cli
ss
in
ja
mov
jo
fcmovbe
jg
clc
fnstcw
out
sbb
xchg
enter
xor
jmp
mov
xchg
out
mov
mov
fstpl
icebp
mov
bound
cmpsl
mov
into
fbld
mov
sub
xchg
push
mov
shll
ja
and
fstps
mov
jecxz
dec
xorb
pop
lcall
clc
loopne
movsb
xor
scas
pop
cmc
and
stos
xchg
lock
dec
lret
xchg
lods
cmp
and
mov
mov
rcrl
sbb
loopne
leave
sub
pop
xchg
mov
sbb
push
push
mov
test
lock
pop
stos
pop
or
mov
mov
arpl
loope
xchg
or
lcall
pop
mov
xor
bound
je
pop
scas
adc
fnstcw
sbb
add
test
sbb
xchg
out
xchg
xchg
mov
push
dec
out
std
push
adc
pusha
or
loop
sahf
xchg
sub
pop
shll
and
mov
shll
sbb
mov
into
jae
jg
xlat
mov
push
adc
add
loope
mov
fidivrl
xor
and
je
and
lock
xchg
cli
scas
mov
xchg
cli
or
mov
push
mov
mov
mov
sbb
mov
sbb
mov
bound
ror
pop
nop
xor
sbb
xor
popa
mov
mov
sbb
mov
mulb
mov
add
mov
or
loope
sub
bound
mov
cltd
mov
lcall
mul
pushf
lock
pop
sub
mov
mov
hlt
repnz
mov
loopne
loop
or
mov
cwtl
mov
mov
cmpsb
mov
sbb
xor
pop
scas
pop
mov
loop
fcmove
pop
mov
shr
push
aaa
and
or
lcall
cld
loope
lock
xchg
cvtps2pd
adc
and
fdivr
cltd
mov
cvtps2pd
adc
loop
xor
pop
xchg
xchg
adc
lcall
mov
cmpsb
lret
mov
les
xchg
adc
mov
out
loope
adc
sbb
pushf
testl
sub
or
add
add
add
or
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
