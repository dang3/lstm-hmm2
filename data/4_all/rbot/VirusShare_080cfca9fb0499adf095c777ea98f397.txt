push
cwtl
movsl
adc
cltd
sub
inc
mov
cmc
hlt
loop
mov
icebp
pop
std
rol
or
mov
lret
cmp
and
mov
and
push
ja
or
jle
mov
nop
pop
orl
out
dec
adc
fcomi
pop
lahf
sub
out
stc
aaa
fsts
ja
xchg
inc
mov
cmp
fbld
scas
rcl
flds
outsb
jp
es
mov
adc
test
xor
stos
ss
aam
and
and
dec
sbbb
jne
cmpsb
fisubl
and
xchg
pop
pop
cli
xchg
clc
or
data16
lcall
and
mov
xor
outsl
mov
fwait
inc
jl
fwait
bound
adc
cltd
loopne
jno
sahf
arpl
push
jne
and
push
loope
repnz
push
push
jno
adc
popf
aaa
ss
loopne
loopne
or
xor
push
int
shrb
pop
and
into
mov
mov
icebp
cs
faddl
pop
loop
stc
scas
xchg
lods
std
bnd
inc
xor
into
add
movsl
fwait
sbb
mov
adc
mov
lds
mov
insl
insb
add
bound
mov
push
es
iret
xor
shll
stos
lods
test
push
dec
adcl
test
jnp
aas
fwait
scas
pop
lds
loop
inc
daa
out
mov
lahf
fs
into
jmp
sbb
lea
test
cli
pop
mov
outsl
aam
xlat
aam
fxch
jbe
fcmovbe
dec
call
mov
mov
pop
or
stos
stos
pop
cmovnp
lods
lret
push
fstps
push
adc
pop
sbb
addl
stos
rorl
mov
lea
mov
ret
jg
sub
pusha
scas
mov
cld
jae
xchg
dec
popa
or
mov
cs
ret
adc
jo
pop
mov
inc
fwait
cmp
stc
js
dec
lret
loope
loop
fwait
popf
divb
pop
mov
push
fstpl
push
xor
mov
in
push
and
xor
jo
rcrb
fwait
pop
push
rcr
adc
js
ret
in
cli
xor
xor
add
sbb
pop
dec
stc
adc
cmp
xchg
nop
dec
add
lods
stos
lods
ror
les
inc
sbb
xor
bound
mov
adc
hlt
add
jecxz
mov
pop
and
dec
xlat
int3
mov
lret
fistps
enter
ret
sub
xor
dec
fbstp
xlat
adc
push
jno
dec
jl
pop
adc
aas
cs
lret
lock
cmc
shrl
and
lds
push
testl
std
stos
das
mov
cltd
mov
icebp
mov
mov
lea
pop
pop
repz
push
push
or
pop
push
push
lcall
outsb
mov
stc
aaa
mov
xchg
cmp
ljmp
loopne
mov
jne
jle
andl
fldenv
into
pop
xor
jl
or
mov
or
mov
sub
sbb
or
ret
mov
repz
sbb
repnz
loope
xlat
adc
or
lret
cmp
pop
push
dec
xchg
daa
xchg
adc
enter
mov
mov
pop
pop
inc
jmp
rcll
rcll
jns
sbb
cmp
cmpsb
aam
push
punpcklwd
aam
sub
adc
lods
aam
or
lods
in
cmp
and
in
and
lock
dec
add
les
pop
mov
lret
and
mov
push
jae
sarl
fs
movsb
test
fstp
xchg
push
ficoml
add
add
loop
jno
mov
xor
add
nop
shl
push
mov
or
cwtl
adc
xchg
xor
mov
jle
sub
fisubrs
xchg
leave
imul
aas
scas
imul
je
lahf
shrl
pop
inc
mov
gs
pop
and
mov
imul
jns
fisttps
out
mov
add
cwtl
je
dec
and
dec
int
dec
jecxz
lea
sub
add
insl
flds
insb
das
movsb
adc
or
lret
pop
cmp
dec
gs
jle
outsb
popa
frstor
es
mov
inc
mov
push
xor
mov
mov
dec
mov
and
sub
inc
inc
out
mov
faddl
sti
movsb
and
cmpb
jp
cmp
cs
test
dec
in
les
stos
xorb
xor
nop
jo
pop
data16
in
pop
mulb
or
loope
mov
push
push
arpl
adc
and
push
lods
test
add
mov
addr16
pop
testl
cltd
movsb
mov
push
xchg
inc
sub
xor
mov
inc
les
dec
jp
cmpsb
jp
loop
fidivrl
adc
ds
es
ja
and
dec
xor
xor
adc
or
and
mov
orl
enter
sub
sub
dec
mov
push
cwtl
cmp
ss
jb
pushf
mov
icebp
add
bnd
or
mov
cmc
leave
add
and
xchg
lods
fwait
sub
adc
shl
jp
cmc
inc
pop
and
mov
js
jle
jb
push
xchg
mov
sbb
cmp
negl
faddl
mov
push
pop
sbb
nop
xchg
sbb
jno
xor
lret
in
push
xchg
lcall
fs
dec
or
repz
adc
mov
into
das
rclb
enter
mov
mov
xchg
fsubl
push
dec
push
jp
les
adc
and
jns
bsr
cmp
hlt
sub
test
loope
or
xor
test
push
scas
lods
bound
rol
push
les
popf
mov
mov
call
cmp
ret
sar
test
lods
mov
ret
or
enter
add
or
pop
push
push
or
pop
pop
and
nop
cmc
push
push
push
push
lea
push
push
push
push
sub
cmc
jns
jge
push
push
pop
pop
push
sub
pop
jo
rol
ror
lea
push
pop
push
xor
pop
mov
mov
loop
jecxz
fbstp
xchg
or
and
xchg
jl
push
dec
inc
pop
jno
sub
jo
push
or
pop
push
mov
pop
push
xor
pop
cmc
stc
cld
jmp
jmp
call
sub
push
call
adc
sub
sar
out
cmpsb
dec
jl
mov
icebp
mov
push
xchg
jle
les
mov
inc
inc
inc
inc
jmp
movsl
movaps
lods
mov
pop
fistpll
or
fnstcw
push
jmp
test
repz
adc
test
mov
push
add
mov
pop
jno
jnp
xor
push
add
pop
and
clc
push
inc
pop
std
cld
rol
lea
loop
jecxz
daa
pop
lods
xchg
jmp
rorb
into
cwtl
pop
fimull
popa
dec
addl
js
jge
aaa
or
nop
push
inc
push
inc
pop
push
add
push
pop
pop
ror
rol
nop
mov
jne
cmp
loop
jecxz
pop
mov
mov
push
jle
inc
ss
scas
mov
jg
push
add
pop
test
test
cld
xchg
test
jne
jmp
cld
push
mov
add
pop
jmp
std
adc
pusha
push
ja
test
inc
add
sub
xor
jbe
lret
test
mov
adc
mov
stos
sbb
or
jecxz
xchg
xchg
stc
roll
push
mov
xor
pop
cmc
mov
inc
inc
inc
inc
add
push
push
pop
add
pop
push
movzbl
push
jnp
cmp
pop
push
pop
jae
test
jnp
add
push
push
ror
pop
pop
jno
jp
sub
ror
and
cld
loop
pop
push
call
outsl
lcall
cmp
pushf
mov
in
sbb
cmp
pop
inc
inc
imul
jecxz
and
lret
iret
movsb
pop
or
fiadds
mov
mov
sbb
xchg
sbb
pop
dec
cwtl
xor
push
xchg
push
add
push
insb
or
jo
leave
push
in
pushf
loopne
mov
cld
jecxz
pop
push
mov
sti
mov
insb
imul
call
je
add
xor
out
aad
mov
pop
xchg
pop
lret
lea
out
pop
adc
or
sbb
sub
loope
pop
mov
jmp
dec
mov
mov
test
test
in
sub
filds
pusha
sti
push
insb
push
sarb
mov
mov
cmp
stos
cmp
cmp
cmp
mov
push
add
add
movsl
jge
jmp
leave
std
xchg
mov
add
mov
cmp
mov
arpl
and
stos
sti
mov
mov
pop
imul
sbb
mov
or
pop
popf
rcll
lds
sub
lock
daa
xor
mov
fs
pop
jmp
ret
jnp
cmp
pop
popf
cmc
int3
aaa
or
lret
or
out
rclb
or
jmp
mov
pop
test
pop
shlb
push
dec
and
mov
ficompl
push
lahf
pop
or
scas
in
addr16
ficompl
mov
js
pop
out
lods
xchg
pop
sub
sub
ljmp
daa
lods
iret
xchg
inc
xchg
jno
arpl
stos
jge
xchg
dec
mov
sahf
push
mov
testb
pop
outsb
or
and
add
push
add
mov
fdivrs
jmp
fsub
iret
dec
out
jne
or
mov
or
les
icebp
sbb
inc
mov
xor
fdivr
mov
das
sbb
jbe
or
pusha
aaa
jno
inc
mov
adcb
pop
adc
inc
insb
xlat
movsl
and
xchg
xchg
mov
xlat
hlt
adc
push
cmp
sbb
not
pop
es
cmc
mov
out
lock
cmpsb
push
imul
sbb
addb
and
dec
popa
pusha
aaa
pushf
hlt
scas
xchg
mov
and
mov
lahf
mov
jb
outsl
sub
aad
ds
sbb
jl
jge
jb
test
jmp
icebp
mov
sub
xor
add
stos
inc
adc
fdivl
clc
xor
inc
or
sbb
jo
mov
leave
stos
jmp
sbb
bound
adc
adc
adc
imul
mov
mov
das
loope
inc
xor
xchg
xchg
pop
push
stc
cmc
in
std
cmp
dec
cmp
add
or
sahf
xor
xchg
js
loopne
test
filds
rorb
pop
mov
pop
into
ror
or
in
inc
cwtl
jnp
and
fstps
fdivs
je
inc
adc
outsb
jmp
movsl
aad
mov
mov
dec
mov
sahf
jbe
pop
mov
xor
dec
in
inc
or
add
or
outsl
addl
mov
lods
dec
lahf
test
and
jb
push
cmpsl
fcoml
pop
mov
add
push
inc
pop
mov
mov
jo
push
adc
and
add
push
test
add
jb
mov
and
orb
fidivrl
ja
inc
fs
pusha
mov
ffreep
xlat
add
pop
cmpb
push
int3
js
or
cli
xchg
stos
xchg
bnd
push
push
in
dec
inc
adc
add
notb
xchg
lock
jg
or
pop
cld
or
movsl
cli
mov
pop
mov
rol
mov
xor
fcom
pop
mov
pop
sub
dec
adc
pop
das
cmc
sbb
pop
and
aad
cld
push
pushf
outsb
aaa
ljmp
roll
rorl
lret
mov
mov
jns
inc
in
jl
pop
fdivp
xchg
and
mov
lahf
mov
fdivr
pop
dec
push
lret
mov
pop
push
cwtl
mov
movsl
sarl
sub
mov
and
loop
rcrb
sub
sbb
mov
movsb
jmp
mov
shll
out
sahf
pop
cltd
fadds
popa
pop
sub
xor
cmp
sub
push
pop
mov
cmp
pop
cmp
lahf
jnp
lahf
xchg
push
adc
dec
gs
test
leave
lcall
pushf
and
rclb
aas
sub
clc
pavgw
pop
mov
rsqrtps
test
mov
leave
enter
test
out
pop
shrb
xchg
addr16
push
std
mov
dec
mov
cli
test
jmp
inc
jp
shll
sbb
movsb
int3
sbb
and
mov
push
scas
xor
lock
iret
fldt
mov
sub
adc
mov
inc
xchg
xchg
aaa
push
adc
and
dec
jp
xor
ficoml
retw
jo
mov
inc
sub
jb
shrb
push
mov
sub
mov
flds
cmpl
ja
jae
ret
adc
jno
push
pusha
inc
xorl
xchg
mov
xor
lcall
add
int3
mov
das
cmp
inc
inc
xor
test
adc
sub
shlb
cltd
cld
insb
xor
in
movsb
shlb
add
sahf
or
sbb
mov
push
fs
push
inc
mov
cltd
jb
mov
adc
leave
test
ret
xor
sbb
push
fbld
popf
push
xor
or
imul
mov
out
in
xor
idivl
ret
aas
orb
cltd
and
notb
insl
jecxz
fistl
lcall
push
std
aas
jecxz
enter
mov
xor
sub
mov
dec
rcr
in
xor
std
jno
push
pop
mov
test
pushf
pushf
sti
jns
into
shll
inc
shl
pop
xor
loopne
inc
in
fmull
loope
shll
repz
adc
or
pushf
xchg
fwait
loope
lock
shrb
and
add
inc
sarl
add
and
and
pop
mov
popa
xor
repz
dec
push
js
pop
mov
shrb
popa
out
jnp
int
dec
stos
jne
push
cld
test
outsb
mov
xchg
es
rorb
dec
pop
movd
das
push
add
hlt
xor
jle
mov
push
jnp
cmp
cmc
adc
out
xchg
ds
icebp
add
pop
mov
or
pop
push
shlb
mov
int3
aas
stos
xor
xor
inc
mov
jns
mov
sbb
mov
sub
repz
js
cmp
lea
scas
das
repz
cmp
mov
test
jge
mov
int3
pop
outsb
bound
mov
xor
insb
dec
mov
mov
insl
test
dec
jo
push
push
push
xchg
jae
pop
fstpt
pusha
mov
cltd
xor
adc
inc
es
push
xor
sbb
test
loop
xlat
mov
into
mov
mov
imul
je
testl
xchg
mov
mov
pop
clc
in
inc
mov
lock
pushf
mov
hlt
jae
mov
and
mov
pop
addr16
negl
jg
lret
add
pop
sub
push
cltd
sti
lret
cmp
pop
pop
lds
jnp
push
cs
and
adc
lods
xlat
push
clc
ja
mov
ljmp
test
lock
daa
mov
fwait
sub
or
ljmp
mov
aad
je
ret
ja
mov
adc
outsl
cmp
les
cltd
hlt
in
cltd
pop
repz
movsb
nop
test
jae
pop
xor
jbe
dec
mov
cli
adcb
push
arpl
dec
orl
repnz
pop
add
fcmovbe
push
test
jno
nop
jge
ret
add
imul
fwait
and
push
lcall
xchg
xor
pop
aam
movsb
cmp
gs
cmp
iret
loop
push
push
sahf
in
sbb
cwtl
fsubp
jns
jge
jmp
jge
lods
sbb
adcl
imull
cmp
xchg
add
fidivrl
cmp
cmp
sbb
sub
cmp
inc
les
imul
mov
loope
jb
fdivrl
lock
scas
je
adc
jb
into
stc
xor
aad
int3
lock
adc
push
jge
cld
popf
or
mov
out
mov
bound
inc
ja,pt
out
jp
mov
ficomps
pop
cltd
add
mov
nop
pop
cmpsl
lods
push
adc
pop
in
mov
filds
xchg
data16
inc
or
push
or
popa
lret
les
fcmovbe
sahf
mov
sbbl
mov
loope
faddl
in
inc
or
cmp
push
xor
xchg
mov
in
add
sbb
sbbl
cmp
push
jle
add
clc
lahf
popa
jbe
sbb
jb
lds
mov
js
enter
std
ret
pop
sahf
test
incb
and
xorb
test
lock
mov
sub
add
fsubs
add
push
bound
push
adc
fdivrl
mov
movb
pop
data16
stc
mov
add
and
mov
cmp
std
inc
in
bound
cmpsl
fdivrs
inc
out
stos
cmp
int
in
add
adc
fs
mov
sbb
jmp
movsb
mov
xor
adc
lret
ja
lods
sub
sbb
pop
mov
filds
fsubl
cmpl
clc
rdpmc
xorl
testl
lock
mov
cmpsl
push
enter
and
js
mov
nop
stos
mov
add
sub
mov
into
sahf
cld
push
push
fs
xor
fs
push
sub
mov
lods
pusha
incb
push
or
mov
in
xlat
adc
jl
into
scas
xchg
cs
stc
cli
inc
pop
add
push
or
mov
andl
inc
arpl
std
or
and
imul
out
xchg
dec
enter
xlat
jp
bound
and
fdivs
ret
jbe
adc
scas
xchg
test
cltd
adcl
and
and
ret
cmp
xchg
mov
std
jp
repz
cwtl
aaa
mov
xchg
les
add
mov
fmul
xor
push
jmp
add
push
adc
lcall
fldl
or
cwtl
cs
xor
xchg
out
enter
in
adc
cli
pop
sub
lods
rorl
dec
scas
jo
fcomp
and
out
icebp
scas
dec
in
pop
repz
push
fcmovbe
fldl
mov
adc
int3
jo
mov
pop
inc
cltd
adc
andb
jbe
int
adc
pop
sbb
faddl
xchg
mov
adc
pusha
sbb
inc
hlt
stos
sbb
and
clc
fcom
or
mov
cmc
insl
and
jl
sar
mov
cs
mov
and
hlt
push
or
jg
dec
jge
cmp
cmp
dec
fnstsw
sbb
mov
mov
xor
setno
sbb
lock
add
pop
xchg
pop
cmc
aam
push
int3
js
inc
daa
jo
out
lea
inc
or
pusha
aam
pop
push
subl
dec
clc
adcl
pop
jno
mov
mov
xchg
ret
sahf
jp
scas
movsl
jl
cmpsl
pop
cwtl
and
fistpll
divb
inc
pop
subb
mov
mov
pop
mov
adc
sbb
xchg
mov
xor
push
test
ss
andb
inc
lock
xor
mov
ss
mov
out
stos
or
and
mov
jbe
icebp
mov
data16
pop
or
imull
pop
mov
and
lods
xchg
dec
lret
cmpsl
ljmp
popa
jge
subb
aad
or
sbb
iret
stc
jle
xchg
add
sbb
sbb
mov
pushf
mov
and
cmp
popf
cmp
mov
mov
adc
jge
sub
outsl
pop
xchg
push
pop
jae
add
test
mulb
mov
and
mov
pop
jbe
sarl
or
xlat
lods
xchg
pop
sbb
jmp
cmp
pop
js
cmp
jae
popa
divl
call
cmp
cltd
mov
lods
clc
sbb
and
or
add
rcl
push
xchg
lret
or
lcall
mov
jnp
sahf
je
das
sbb
push
gs
add
adc
jmp
loop
mov
inc
cmc
add
imul
inc
mul
lea
inc
push
xor
or
xchg
hlt
mov
jge
mov
cmc
push
inc
mov
sti
or
sti
movsb
jbe
cltd
push
sub
lock
arpl
sbb
stos
push
les
je
dec
test
aad
lcall
shrb
mov
adc
mov
outsb
fcomp
push
or
mov
add
xchg
les
push
jecxz
fstpt
mov
rorb
xlat
lahf
mov
add
mov
arpl
cmp
dec
inc
sbbb
andl
cmp
fnsave
icebp
sub
adc
jle
adc
fs
cmpb
movb
mov
and
sbb
stos
in
mov
xchg
xorl
jbe
test
repz
jno
repz
push
aaa
xchg
push
cmpsl
aas
mov
scas
in
loope
pusha
cmp
je
addr16
mov
dec
pop
adcb
jo
push
aad
jae
adcl
adc
and
mov
insb
cmpb
cli
sub
inc
mov
adc
pop
orb
xor
dec
adc
push
and
mov
jecxz
or
pop
out
stc
ja
pop
and
sbb
pop
insl
dec
leave
inc
sbbl
xor
pushf
insb
inc
sub
insl
xchg
or
sbb
sarl
cli
xor
push
out
pop
adc
pop
adc
and
loope
jnp
mov
addr16
cmpsb
mov
inc
into
jae
or
scas
xchg
outsl
out
int3
cmpsl
push
push
fcompl
outsb
lret
out
push
scas
adc
jo
fcompl
into
pop
iret
pop
mov
insl
inc
pop
jle
imul
pop
cmpsb
cmp
xchg
loop
in
dec
fucomip
sti
xor
sarb
xchg
cmpsl
pop
sbb
mov
adc
inc
std
cmc
mov
sbb
incl
loope
push
add
cmc
pop
les
xor
icebp
movsb
test
pop
lods
or
push
mov
ds
add
pop
fildl
out
sbb
ljmp
mov
xor
rcll
mov
daa
mov
popa
sub
add
cld
add
or
push
arpl
and
icebp
addr16
loope
cwtl
push
xchg
push
dec
mov
push
fisttps
sbb
pop
movsb
outsb
cmp
in
xor
mov
sub
sti
xchg
stos
pop
stos
xchg
movsl
mov
sub
mov
repnz
mov
popf
test
inc
sbb
int
push
fcoms
push
sbb
xchg
mov
push
mov
mov
enter
std
aam
fwait
xor
inc
aaa
mov
lods
cmp
mov
jno
dec
mov
adc
mov
in
jl
shr
sub
or
sahf
adcl
js
test
fwait
pop
dec
pop
add
js
movsb
call
mov
sbb
outsb
pop
sub
jmp
jnp
pop
pop
add
add
inc
or
dec
or
int
hlt
cli
jb
or
xchg
nop
loop
leave
or
nop
sub
faddl
ret
or
nop
xchg
dec
sarb
pop
mov
xchg
inc
shlb
ss
mov
sahf
and
lret
add
into
mov
pop
mov
gs
dec
jo
imul
clc
sbb
or
dec
add
repnz
sub
cmc
leave
and
pop
arpl
int
rolb
sub
and
dec
push
lahf
shll
xchg
adc
shrl
icebp
xor
pop
das
inc
stc
jge
and
sub
fadds
sbb
imul
mov
es
jp
pop
rcrl
test
das
xchg
xor
mov
loope
add
jle
stos
xor
push
mov
dec
adc
sbb
jbe
lahf
pop
sbb
pop
int3
shl
stos
jno
sub
adc
insl
cwtl
enter
inc
jmp
push
test
push
mov
call
jp
das
cmpsb
cmp
icebp
fists
out
pop
nop
cmp
mov
cmp
mov
js
dec
xchg
shrb
sahf
lods
xor
sbb
movsb
call
aas
scas
push
mov
inc
popa
call
xor
xor
ljmp
pop
cld
sbb
in
fwait
adc
adc
or
lahf
jne
add
sub
cwtl
xor
jae
loopne
dec
stos
andl
mov
mov
clc
jbe
int
dec
fisttpl
clc
add
pop
inc
and
pop
jl
fwait
inc
arpl
cmpsl
adc
jno
adc
push
mov
cmp
adc
mov
dec
pop
scas
sti
aad
les
pop
lods
push
or
sbb
rclb
pop
xchg
lods
test
aaa
xchg
mov
lret
into
fucomi
inc
into
or
mov
inc
or
sbb
dec
cmp
mov
std
adc
imul
daa
clc
xchg
test
in
aaa
loop
adc
data16
mov
insb
loope
stos
sti
popf
inc
jnp
icebp
das
mov
jl
popl
or
mov
inc
or
xchg
fistps
mov
mov
addr16
lea
inc
leave
lods
in
mov
ds
jns
in
test
sbb
sbb
mov
or
inc
maxps
cmp
xor
stc
scas
push
lret
cmpsl
add
dec
cmp
int
jecxz
sahf
sbb
stos
jge
cld
addr16
mov
mov
int
pop
or
sub
fsubrs
jmp
ret
mov
pop
adc
mov
test
testb
lock
xchg
aam
lods
mov
icebp
jp
bound
jbe
int3
outsb
stos
mull
out
rorl
test
addl
movsl
add
adc
adc
xor
ja
arpl
cltd
test
jl
sbb
xchg
in
in
fsubl
mov
mov
add
daa
cmp
int3
push
sub
or
pop
mov
clc
leave
int3
jl
dec
cmp
cwtl
xlat
rcl
mov
imul
lock
mov
jbe
and
jge
clc
movsb
test
xchg
mov
jl
pop
call
sub
jno
flds
test
rcr
inc
adc
je
inc
fwait
cmp
add
arpl
mov
sub
fimull
xchg
dec
movzbl
inc
lea
pop
imul
iret
clc
lods
test
iret
sub
cmp
int3
mov
test
rcrl
jbe
ror
jnp
sub
cs
add
shr
sbb
fwait
nop
and
ret
ficoms
xchg
scas
out
adc
or
shlb
xlat
dec
dec
inc
pop
cmp
pushf
push
mov
mov
mov
push
jnp
mull
hlt
jg,pn
add
ljmp
in
ret
movsb
shlb
je
nop
cmp
ja
or
xchg
mov
test
fsubr
scas
jmp
cwtl
and
outsl
jbe
fdivrs
xchg
push
lcall
sbb
out
xchg
sbb
xchg
xchg
ja,pn
and
push
scas
adc
out
mov
and
leave
xchg
repnz
in
push
lock
popf
imul
das
fisubl
out
pop
xchg
cwtl
sbbl
dec
mov
mov
outsl
shrl
sbb
jae
sbbb
pop
lds
push
jp
xor
test
mov
lcall
cli
cwtl
cmp
ret
movsb
cmp
ret
rep
cmp
pop
pushf
xor
into
and
aas
adc
repz
mov
pusha
rcll
xlat
jno
lret
cmp
push
jnp
and
stc
cs
dec
testl
pop
pop
addr16
jnp
cli
inc
daa
xor
lret
lret
pop
int
push
test
dec
sbb
mov
enter
lock
jns
dec
lods
enter
sbb
mov
ja
jb
mov
inc
out
mov
je
jg
or
cmc
mov
push
and
movsl
inc
testl
das
cmp
add
mov
jecxz
push
repz
in
xor
in
mov
mov
scas
sub
rcr
js
ss
add
xor
mov
sti
js
adc
cmpsl
loope
ret
dec
xchg
mov
rcll
mov
fisttpll
jmp
push
inc
xor
mov
pop
loope
mov
or
cmp
push
jl
push
rclb
shrb
push
mov
je
cltd
mov
sub
out
cmc
and
push
test
mov
int3
jmp
push
pusha
repz
jge
fisubrs
out
lea
mov
cmp
xor
jg
mov
adc
insb
xor
jge
testb
out
lock
mov
lds
in
test
call
jnp
pushf
add
je
and
test
fildll
jmp
pop
loopne
pop
in
stos
mov
add
test
loopne
ficompl
adc
xchg
mov
pop
ss
jns
xor
ja
insl
mov
aas
out
idivb
stos
aaa
xchg
cmp
jle
sub
arpl
les
and
lcall
mov
jl
in
notb
add
or
mov
ja
lds
leave
insb
or
cmc
mov
aas
test
add
cmc
pop
cmp
xlat
mov
pop
loop
sub
ds
fcmovnb
aaa
fcom
sbb
sub
popf
imul
xchg
ficompl
fnsave
mov
mov
lret
stos
inc
lds
test
ljmp
addl
jg
mov
xchg
sahf
lea
lock
jecxz
mov
mov
sahf
mov
dec
mov
out
adc
cli
or
out
call
sti
nop
mov
adc
or
mov
push
dec
scas
int
xchg
flds
popf
insb
or
and
adc
jmp
in
mov
inc
lret
fwait
sbb
cltd
test
add
sub
cwtl
adcb
add
popf
push
jp
sub
ja
inc
inc
jne
and
inc
mov
xor
es
cmp
pop
dec
pop
fnstcw
in
jbe
fldenv
mov
daa
gs
roll
and
sub
sbb
stos
jbe
inc
testb
add
loopne
mov
and
adc
push
mov
lahf
cmp
aam
or
push
push
popf
andl
mov
js
adc
cmpsl
leave
inc
dec
iret
pop
jbe
gs
cmp
mov
cmp
shll
mov
pop
pop
shll
jb
negb
imul
lcall
mov
fdivrs
mov
cltd
fdivl
cmp
mov
int3
push
xchg
or
bound
outsb
stc
ds
jl
inc
lods
outsl
andb
aam
add
push
lcall
push
addr16
cltd
aas
and
jnp
std
repnz
jnp
popf
jne
mov
sub
cltd
fsts
cmp
data16
inc
pop
push
or
sti
cld
dec
pop
xchg
mov
outsl
test
imul
jne
xor
or
jle
mov
jp
or
fmull
inc
add
jecxz
push
cltd
or
inc
hlt
in
cmpsb
mov
xchg
mov
adc
lret
adc
push
dec
jecxz
repz
stc
shl
pop
push
sub
call
out
test
aaa
or
leave
xor
and
movsl
sub
in
push
idivb
cli
jae
das
cmp
pop
dec
mov
and
cmc
imul
and
gs
cmpsl
jne
lods
sbb
xchg
and
arpl
fisubs
ret
add
push
test
faddl
sbb
mov
jo
jl
rcrb
push
xchg
es
shrb
mov
mov
fs
idivb
je
jbe
sbb
xor
lcall
add
in
in
bound
aaa
ds
aaa
cmp
add
sbb
imul
sbb
add
fsubp
mov
sahf
pop
xchg
push
sub
rcr
mov
xor
or
mov
enter
xchg
xor
add
xor
pop
jl
test
push
call
add
mov
cmc
in
add
cmc
ds
cmpsb
or
mov
loop
jno
push
cwtl
mov
hlt
cld
jnp
add
jl
insb
das
js
push
push
mov
insb
push
popf
lret
cli
mov
pop
xchg
je
sbb
adc
adc
orb
into
icebp
jne
pop
sbb
out
mov
mov
mov
mov
dec
ljmp
imul
nop
pop
rol
dec
lcall
sbb
and
adc
xor
add
dec
bound
cmpsl
push
inc
fs
std
adc
inc
jle
xor
mov
jge
ljmp
ret
inc
xor
sbb
stc
mov
sub
cmp
imul
lds
cli
sbb
cmp
sub
stos
cmp
fbld
int
stos
popf
fadds
xchg
or
sbb
insl
fwait
pop
adc
jb
mov
mov
test
ss
lods
xchg
addb
loopne
mov
scas
xchg
shrl
mov
loope
sub
push
das
lods
mov
enter
push
mov
fwait
mov
roll
out
inc
dec
mov
sub
je
repz
push
aaa
addr16
flds
pusha
mov
data16
aam
xor
mov
fsub
ret
dec
fsub
jb
xchg
lods
push
in
push
add
cwtl
mov
lcall
or
js
fmull
or
push
fiadds
add
and
out
jge
loopne
mov
pop
popa
and
jo
clc
dec
aad
orb
cmpsl
out
mov
shrl
addr16
cltd
sbb
mov
scas
mov
push
or
call
mov
mov
jbe
addb
negb
popa
adc
loope
pop
pusha
adc
xchg
pushf
mov
fbstp
test
rorb
jecxz
outsl
pop
jecxz
dec
call
mov
pop
jle
adcl
int3
jg
inc
inc
stos
fcomps
push
or
lea
add
pop
cmp
push
cmp
rclb
insl
addb
aas
pop
xlat
cmpps
mov
sub
sub
mov
jnp
aam
ret
mov
xor
add
in
mov
pop
and
cmpl
mov
in
inc
jo
rcll
mov
rclb
add
push
sub
or
dec
jl
dec
fimull
xor
loopne
or
push
arpl
inc
dec
jl
and
jnp
mov
stos
mov
xor
ret
mov
aaa
or
hlt
lods
idivb
push
xor
movsb
pop
sbb
add
add
sbb
sbb
rorb
xchg
cmc
cmp
jae
cs
cld
sti
clc
sub
adc
jno
adc
inc
shlb
pop
jmp
sub
js
scas
adc
divb
dec
nop
xor
sub
or
aad
jecxz
repz
push
ss
insb
and
add
ja
jmp
push
cmp
jge
jnp
push
push
and
in
dec
xchg
and
mov
xchg
lea
sub
cmpsl
in
std
inc
dec
out
ds
cmp
or
push
stos
inc
dec
insl
fcmovu
push
or
sahf
gs
push
push
pop
ficompl
adc
or
or
xor
dec
imul
popf
nop
mov
cmp
sbbb
mov
mov
jb
pop
test
xor
mov
icebp
pop
cmc
cld
movsl
mov
sti
adc
mov
das
adc
je
fistps
daa
xlat
mov
xchg
or
fdivs
fimull
aam
adc
lret
sti
scas
loop
sqrtps
scas
or
je
shlb
dec
cld
jo
jbe
mov
add
cmc
and
push
sub
inc
adc
enter
jo
mov
decl
dec
les
mov
pusha
outsb
xor
cmp
into
inc
cmc
inc
xchg
inc
xor
xchg
sub
bound
push
fadds
xor
loopne
aas
and
pop
sbb
dec
jle
sub
and
mov
sbb
js
outsl
mov
scas
mov
movsl
mov
negl
sub
sub
loope
xor
xlat
call
cmpsb
lea
push
dec
push
jle
pop
push
push
lahf
cmp
pop
fisttps
in
sahf
out
lods
sbb
push
inc
jg
and
sti
fisttps
sbb
cmp
sbbl
or
rcrl
mov
push
push
lfs
mov
aam
push
testb
add
push
sbb
jne
mov
jle
add
cmpl
sti
pop
aad
fs
push
jns
in
cwtl
punpckldq
stos
push
jmp
and
leave
sub
cmp
test
inc
scas
inc
movsb
jg
xor
fs
mov
lret
movb
inc
lods
jmp
hlt
or
shlb
fmull
insb
das
inc
jno
or
cmpsb
pop
bound
mov
fmuls
les
push
addr16
inc
mov
and
lahf
xchg
jo
dec
test
int
mov
mov
jmp
add
push
mov
pop
push
add
and
jg
adc
pop
scas
pop
lret
pop
jp,pt
lcall
push
popf
out
sub
pop
enter
in
popa
aam
sbb
rorb
into
sbb
pop
mov
js
cltd
dec
mov
add
stc
leave
dec
xor
arpl
mov
sub
cli
fisttpll
sbb
out
gs
and
dec
jle
std
cmp
cmp
mov
cmp
ds
sbb
xchg
dec
rcrl
outsl
in
xor
inc
aam
outsl
pop
pop
adc
inc
mov
inc
daa
add
faddp
xchg
push
cltd
xchg
mov
sub
and
inc
mov
mov
add
push
aam
scas
lcall
leave
xchg
sbb
push
mov
add
gs
sbb
sbb
scas
pop
pop
xor
dec
lods
testl
inc
dec
aaa
ljmp
ds
add
cmp
pop
mov
xchg
lcall
fdivrl
mov
mov
ret
jle
lds
dec
push
ds
jmp
test
fcoms
sub
in
pop
mov
jl
dec
jo
jae
flds
lods
cmc
fildll
dec
adc
mov
aad
xorb
and
jno
lret
adc
adc
outsl
dec
push
aad
or
sbb
adc
fildll
aaa
lock
roll
xor
shl
nop
inc
add
xor
jmp
push
or
popa
inc
sub
cmp
mov
dec
mov
adc
ds
aas
push
lea
push
mov
les
dec
int
sub
int
in
ss
xchg
sub
push
lods
jg
jmp
add
add
mov
push
push
sub
pop
push
fistpl
pushf
mov
pop
push
cli
push
pop
sbb
test
stos
dec
inc
mov
popa
sbb
fistpll
sahf
in
sub
sub
dec
addr16
lds
jge
test
int
push
stc
jl
adc
loopne
lods
sub
fdivrp
pushf
pop
sahf
pusha
push
out
mov
cmpsl
das
arpl
stos
cld
sub
imull
pushf
rcll
adc
test
jns
push
out
in
jle
push
push
subl
cltd
and
das
hlt
popf
loopne
gs
push
cmp
mov
in
adc
mov
dec
fstpl
xchg
ss
shll
movsl
loopne
sub
sahf
mov
ret
adc
aam
data16
loop
outsl
test
cmpsb
subb
xchg
cmpsl
lahf
pop
jcxz
clc
loope
int3
sbb
rolb
or
xor
sbb
addr16
dec
xor
pop
sub
push
dec
adcl
dec
sbbb
xchg
arpl
cmp
mov
cmp
or
push
hlt
in
dec
pushf
sbb
mov
jl
repz
pop
in
sub
push
and
push
mov
iret
inc
pushf
xlat
rcrl
push
sbb
dec
out
scas
sub
xchg
in
lahf
or
mov
mov
sti
cli
dec
sbb
xorl
and
jecxz
mov
pop
push
cmc
bound
xchg
ja
cmpsb
push
and
int
jns
popf
call
or
mov
jae
cmp
ss
vpsubw
aad
sub
lock
cmp
ss
enter
or
gs
adc
cs
out
mov
pop
push
jne
shll
hlt
and
fildl
pop
sbb
bound
xchg
ret
in
and
insl
fists
add
mov
popf
je
fs
nop
jns
mov
push
out
test
jmp
out
dec
filds
push
cmp
adc
xchg
pop
ret
cli
mov
sbb
callw
stc
lods
addr16
fimuls
aas
dec
lahf
jecxz
in
mov
repz
testb
neg
insl
pop
insl
jns
stos
inc
test
xlat
vminpd
jns
movsl
cmp
mov
jno
outsb
mov
popf
push
es
pop
inc
aaa
cmpsl
xor
push
cmpsl
mov
xorl
and
mov
roll
sub
js
jbe
ja
insb
test
pop
shlb
and
push
das
push
or
dec
dec
jb
inc
arpl
jge
mov
mov
sti
aas
inc
arpl
and
sti
mov
mov
mov
mov
stc
pop
or
add
mov
leave
mov
leave
iret
cmpl
clc
mov
mul
aas
cmpsl
xor
sub
and
or
fildl
leave
aam
lods
push
and
xchg
lods
data16
sub
cmpsb
stos
pop
inc
jae
pop
push
and
jmp
xchg
mov
fdivs
shrb
adc
xor
mov
adc
mov
nop
movsl
push
adc
sbb
ret
fbld
push
dec
bound
xor
nop
outsl
mov
sub
push
jge
add
insl
ficompl
lret
pop
iret
jns
aam
out
jb
xchg
mov
aas
add
jns
fisttpl
cs
pop
sub
out
int
pop
jle
inc
test
xor
sub
inc
sbb
lcall
add
rcr
add
pushf
push
out
ds
pop
push
das
and
mov
sbb
xorb
xor
fwait
jnp
push
mov
test
mov
testl
or
cli
xor
mov
mov
xor
cmp
adc
cld
repnz
and
in
test
xor
cmp
inc
push
mov
test
int
insb
mov
nop
push
outsb
test
pop
cmp
adc
scas
add
xchg
jmp
inc
loopne
aam
xor
inc
cmp
data16
ret
push
xorb
icebp
adc
add
pop
xchg
imull
movsb
mov
sub
enter
cld
fs
test
nop
or
fdivrl
push
insl
or
mov
lds
bound
adc
add
jmp
mov
push
adc
push
mov
add
jecxz
inc
dec
jae
jp
push
mov
xor
and
jp
fsubrs
enter
lea
xlat
inc
jnp
das
clc
outsb
or
pop
iret
sar
pop
adcl
cmp
ja
ja
jecxz
xor
loop
cmpsl
nop
mov
sbb
pop
push
xchg
xor
or
pusha
aaa
cwtl
jnp
jp
and
lcall
pop
jns
mov
out
cs
push
jge
push
lea
cmp
dec
inc
test
jmp
je
and
stc
pop
repnz
mov
and
das
sub
pop
mov
cmp
jecxz
aas
test
jle
or
loope
leave
fst
adc
mov
mov
cmp
mov
leave
pop
add
xchg
adc
jl
xchg
inc
xor
cli
ds
push
sub
frstor
xor
repz
inc
hlt
pop
js
push
outsb
aad
jg
dec
in
mov
xor
fidivs
or
add
or
movsbl
xchg
lahf
pop
push
add
push
mov
stos
test
and
movl
rcrb
add
adc
mov
xor
lock
rorl
dec
and
in
ret
mov
loopne
jmp
movsl
std
lock
mov
out
xor
aad
jne
mov
jmp
dec
mov
insl
dec
lods
popa
lock
hlt
push
loope
or
inc
mov
test
fadd
in
hlt
mov
test
sub
out
add
andl
mov
inc
sub
loope
pop
jmp
cmc
movsb
out
dec
adc
sahf
insl
fldcw
sti
nop
movsl
cmc
jae
cltd
push
lods
inc
fdivrl
and
call
mov
and
movsb
push
mov
xlat
xchg
inc
or
popf
stc
pop
sub
xchg
fyl2xp1
mov
in
push
cltd
push
or
cs
in
dec
outsl
bound
cmp
jg
add
add
mov
xchg
inc
push
movsb
add
subb
sarl
inc
sub
mov
loopne
sub
mov
cltd
es
into
push
scas
jns
sahf
subb
test
add
dec
adc
pop
push
lret
repz
dec
cmpsb
and
stos
mov
inc
insb
int3
hlt
push
or
or
xor
mov
mov
test
cmpb
xor
stos
cwtl
lea
push
xchg
test
dec
add
call
xor
fstps
xchg
dec
sub
sbb
adc
xchg
rorb
xor
das
jg
mov
lahf
loopne
jecxz
cmpsl
cmp
mov
inc
sub
loop
or
and
pop
cmpsb
pop
adc
mov
add
js
and
sarb
loope
into
cmc
add
push
and
addr16
iret
sahf
cltd
addr16
stc
out
jb,pn
in
sub
rclb
pop
dec
icebp
add
cmp
icebp
xchg
fwait
test
dec
dec
outsb
adc
xchg
mov
xor
dec
out
aas
sbb
xchg
sbb
divb
jmp
lret
cmpsl
cmc
imul
or
testb
cmp
daa
and
sub
xor
xchg
dec
neg
bound
fcomps
sub
fbld
cmpsb
push
fs
inc
xor
fidivrl
xchg
popf
orl
lods
in
mov
mov
rorb
mov
movsb
in
stos
lods
adc
inc
xchg
mov
lock
sub
out
add
xor
cmp
out
popa
mov
mov
rcrb
shll
cmpsl
add
push
and
mov
push
jae
jp
inc
ss
or
shl
mov
jns
ss
inc
jns
push
xor
incl
repz
mov
add
push
test
pop
in
sub
fmul
jge
out
std
xchg
pop
into
inc
inc
dec
xchg
sub
mov
inc
fsts
jns
xchg
sar
and
lods
lret
mov
sarl
lods
stc
cmp
popa
cld
out
sub
push
shr
mov
imul
rclb
xor
xor
sbb
jo
outsb
cmp
les
in
mov
out
sbb
sahf
push
es
cltd
jnp
mov
mov
outsl
rcr
repnz
cs
push
push
cltd
jp
cs
stos
jg
inc
loope
xlat
hlt
inc
bnd
ss
lods
add
hlt
mov
adc
stc
mov
sub
mov
dec
push
cmp
and
jecxz
inc
imul
push
daa
aaa
imul
dec
shll
sub
adc
fdivl
mov
adc
mov
daa
fidivrs
in
adc
inc
xchg
pop
sub
cmpsl
add
imul
into
popa
mov
dec
scas
mov
int
xor
test
ja
rolb
mov
xchg
sub
or
pop
xchg
jmp
sti
mov
es
push
cmpsl
ret
mov
xor
sahf
or
movsb
bound
cmp
push
mov
inc
mov
pop
push
xchg
xchg
add
mov
imul
xchg
fwait
int
jecxz
bound
in
mov
xchg
outsl
ljmp
stc
xchg
pop
sbb
in
shlb
push
std
cmp
aaa
xchg
pop
ret
ficompl
mov
or
jecxz
add
pop
dec
adc
cmp
test
jmp
repnz
push
jno
outsb
clc
mov
call
jge
hlt
inc
pop
push
insl
test
xchg
push
xchg
out
and
sub
insb
pop
gs
and
ja
dec
daa
in
adc
push
mov
push
incb
std
inc
rclb
fiaddl
adc
cld
std
jae
fptan
mov
into
cli
daa
data16
or
mov
ss
or
xchg
dec
ret
sbb
ds
mov
pop
push
add
sub
imul
pop
stos
popa
in
pop
enter
jge
lock
cmpsb
fcompl
in
or
sbb
scas
fcmovb
jbe
addr16
pop
dec
dec
mov
pop
fwait
movups
scas
icebp
call
in
repnz
jae
mov
and
outsl
lret
rcr
xor
or
mov
test
xor
inc
or
cmp
jle
inc
or
loop
mov
fbstp
sub
scas
sahf
sbbl
je
out
xor
mov
push
xchg
jle
pop
adc
sub
adc
pop
jbe
sub
mov
das
sub
pop
imul
idivb
test
cmc
inc
mov
das
cmc
aam
adc
dec
test
sarl
std
mov
mov
push
insl
fldl
gs
xlat
inc
imul
adc
es
mov
adc
mov
lea
jns
jo
push
cmc
pop
dec
loope
sub
inc
dec
shrb
es
rolb
iret
add
sbb
sbb
leave
push
xlat
xchg
inc
fninit
mov
or
pop
mov
lcall
shll
out
push
out
cmc
xor
lret
inc
inc
stos
test
sbb
mov
adc
or
mov
sarl
mov
sub
push
sub
sbb
sbb
repnz
or
rcll
fsubrs
jae
xor
jp
mov
cmpsb
data16
xor
push
ret
sbb
das
jns
js
insl
mov
popf
or
xlat
repnz
das
out
mov
pop
dec
test
fs
das
jae
adc
sbb
cs
mov
lret
cltd
jecxz
inc
loop
mov
stos
mov
shlb
add
pop
repz
jb
jae
nop
push
push
jp
inc
outsb
inc
aad
aam
cli
mov
push
in
add
push
push
int
mov
out
and
cmpb
and
aaa
mov
jno
fcoml
and
popf
dec
xchg
xchg
sbb
xchg
xor
push
sbb
outsl
push
out
inc
clc
and
fdiv
sub
xor
std
adc
stc
dec
xor
mov
sub
push
rcrb
xorb
adc
pop
lea
shrb
inc
or
push
or
pushw
and
pushf
frstor
je
jnp
in
adc
mov
sbbb
xlat
inc
scas
sbb
jl
out
movsl
pop
outsl
xchg
test
xchg
arpl
xor
mov
aas
insb
xlat
lds
jecxz
rorb
jle
mov
cmp
pop
sbb
aas
cmp
adc
push
sbb
mov
and
jne
inc
pop
sbb
inc
jne
popf
jb
push
das
mov
jecxz
or
inc
pop
fcompl
add
xchg
mulb
jnp
mov
scas
mov
push
dec
inc
orl
mov
sub
loope
cmp
lock
mov
xor
push
cmpsl
dec
aam
mov
mov
pop
and
addr16
mov
insl
cwtl
xchg
dec
lret
loopne
loope
pop
pop
dec
mov
dec
sbb
and
jbe
fistpl
pop
jbe
xorb
sti
gs
push
adc
movhlps
ret
mov
decl
jecxz
pop
fidivl
ds
aad
int
popa
mov
mov
inc
push
push
repnz
fstl
cmp
nop
adc
shrd
test
jmp
and
mov
adc
imul
add
fists
pop
popf
popa
xlat
jmp
div
mov
ficoml
dec
mov
jne
or
adc
sub
popa
pop
imul
cmpsl
out
sbb
jecxz
test
mov
scas
cmp
leave
lcall
in
jle
test
ss
scas
test
sub
sbb
lea
push
sahf
xchg
add
and
mull
ficomps
out
fwait
ljmp
adc
push
pushl
dec
aad
fsubs
testl
sub
test
aam
cmpsl
mov
sbb
push
jb
jp
ficomps
adc
or
imul
fnstsw
pop
ljmp
pop
pop
sub
fbld
push
call
pop
loopne
shrb
sbb
push
fcomps
orb
in
mov
scas
xchg
ret
in
int
adc
add
adc
dec
pop
adc
shl
inc
cmp
xor
or
movsb
pop
aad
dec
or
jne
insl
push
lret
or
dec
push
movsb
aas
insb
dec
jecxz
int
rcrb
push
sbb
imul
fisubrl
pop
mov
sub
testl
jecxz
int3
dec
dec
mov
movsl
mov
push
push
cmp
stos
popa
cmc
adc
aam
lods
nop
sub
jmp
out
sub
ret
push
divb
sbb
inc
mov
cld
outsl
add
int3
lcall
push
cmpl
sub
jp
shll
pop
jge
cmp
xchg
sbb
ljmp
and
int3
enter
cwtl
pop
fcomps
mov
imul
sbb
mov
mov
scas
test
inc
inc
rcrl
bound
mov
test
xchg
sbb
mov
jae
jmp
stos
sub
bound
insb
push
leave
mul
or
adc
nop
inc
push
sub
xchg
xchg
jge
jl
mov
stc
xchg
sarb
sub
mov
mov
popf
cwtl
imul
ficoms
inc
mov
sti
es
pop
std
dec
or
dec
mov
inc
lahf
test
mov
fs
mov
and
cmp
or
jle
daa
push
mov
cmp
es
fbld
out
sub
xchg
in
cmp
xor
lods
or
cld
mov
cmp
shlb
push
hlt
jmp
pop
cmpsl
enter
inc
pop
inc
mov
sbb
xor
lret
fistl
cmp
add
lock
cld
jmp
lock
pusha
not
xchg
xor
int
xchg
lret
xchg
addr16
loopne
aad
xor
sub
cmp
int
and
je
loop
in
stos
pop
inc
push
xchg
ret
jae
mov
dec
jle
sub
inc
jo
mov
scas
sbb
das
sub
mov
loopne
push
daa
jecxz
cli
fdivs
loop
test
push
jb
pop
cmpsl
lea
sub
xchg
push
push
inc
pusha
and
push
fcompl
mov
push
jl
rcrl
int3
or
out
dec
loop
std
ds
mov
push
dec
jl
stos
and
pop
stos
mov
icebp
nop
add
pop
testb
popa
lods
cld
out
dec
shrb
mov
or
adc
mov
sti
mov
xor
jne
xchg
inc
or
cmp
sub
add
aaa
sub
int3
dec
xchg
ljmp
dec
roll
cmpsb
mov
xor
xor
pop
clc
adc
rorb
mov
jno
lea
inc
xlat
aad
or
dec
ret
dec
inc
pusha
mov
cld
cmp
fdivl
cmp
dec
xor
mov
and
es
mov
dec
jge
call
sub
repnz
ja
dec
xchg
into
stc
or
xchg
cmpsl
lret
nop
adc
sbb
xchg
in
fimuls
aam
sub
mov
jae
push
in
sbb
sub
mov
xchg
sub
pop
push
inc
sarl
aam
mov
iret
dec
sahf
push
and
fcoml
xor
mov
cs
into
lcall
cmp
adc
jnp
daa
and
pop
leave
enter
inc
lret
and
bound
inc
pushf
adc
movsb
add
pop
insl
xchg
sub
out
add
out
cmp
iret
aad
out
push
xor
or
or
in
mov
mov
xchg
cmc
std
bound
into
sbb
fisttpll
mov
mov
fucomp
imul
mov
mov
clc
mov
fisubrl
ss
xchg
adc
xor
sbb
jecxz
push
sti
ja
mov
loope
adc
inc
cmp
xlat
sbbb
scas
mov
hlt
divb
sbb
xchg
mov
test
push
fldln2
adc
add
xor
sbb
daa
leave
mov
loope
lds
jns
mov
outsl
jbe
sub
mov
mov
in
pop
pop
cmp
add
dec
das
fsubl
gs
jp
xchg
push
xor
inc
inc
push
mov
fs
cli
or
push
arpl
adc
mov
pop
stc
adc
xor
mov
pushf
dec
jns
mov
gs
out
in
aam
jnp
je
lock
fstpl
push
jmp
cmpsl
jmp
mov
xchg
push
stos
push
jo
rol
stc
sub
lods
mov
mov
or
cli
movsb
insl
jo
jmp
sbb
mov
inc
jno
mov
xchg
add
or
and
inc
push
pop
in
lret
dec
push
ljmp
cmp
xor
adc
cwtl
mov
fcoms
add
gs
cmp
insb
jmp
pop
aas
shrb
dec
out
push
stos
pop
cld
and
jb
pop
shrb
leave
jle
pop
dec
into
popf
in
mov
jbe
sbb
stos
addb
popa
jno
push
lahf
cmc
jecxz
and
sbb
leave
in
push
jne
sbb
shl
pushf
sti
fdivrl
mov
xorb
push
test
sbb
dec
jbe
aaa
push
int
xchg
lods
pushf
sbb
in
xor
and
les
mov
loop
cmp
xchg
dec
fsubrs
movsl
mov
sbb
sub
xchg
dec
inc
lea
cld
jmp
hlt
jecxz
mov
mov
daa
sbb
push
lahf
xchg
clc
push
jne
mov
jne
sub
out
push
push
mov
dec
fs
dec
adc
and
adcb
fs
add
add
lds
xchg
jae
jp
rcll
hlt
jp
jg
inc
pop
loop
sub
add
cld
outsb
inc
imul
mov
insl
jge
shll
xor
cli
push
add
nop
sub
out
cmpsl
gs
in
andb
out
add
jl
sarb
sahf
aad
jae
adc
xor
sarl
movsb
gs
lods
dec
int
stos
ret
les
jb
and
sub
imul
js
push
pusha
cwtl
ljmp
insl
mov
mov
push
mov
shr
push
ljmp
mov
inc
popf
mull
test
fldt
idiv
jmp
push
cmpsl
cltd
insl
ds
in
inc
inc
insl
pop
pop
rcrl
pop
add
jecxz
insl
adc
or
lock
jb
mov
inc
shll
or
sahf
das
lea
push
jno
loopne
push
loop
inc
ret
lea
mov
xchg
in
enter
xchg
sub
movsl
and
xchg
ss
aam
orl
push
cs
int
xor
pushf
in
outsb
lock
lock
cmpsl
or
xor
call
ficoml
into
jno
das
out
sbb
daa
sub
nop
repnz
pop
xor
mov
not
lods
sbb
add
std
jp
push
cli
xchg
lods
mov
ret
cmp
mov
xchg
inc
outsl
ljmp
shll
in
dec
imulb
cmp
cmp
or
sub
fists
mov
jp
inc
inc
pop
inc
push
jle
enter
inc
push
stos
nop
jl
stos
mov
dec
adc
sbb
cmpsb
stos
je
mov
cmp
stc
xchg
movsl
shr
lea
xchg
mov
fcom
jmp
cmpsb
xor
call
test
aam
idivb
out
idivl
nop
xchg
nop
mull
add
popf
jp
mov
push
fistl
jle
xorb
adc
pop
loopne
int
push
xchg
push
xor
dec
xchg
mov
dec
idiv
xor
mov
pop
jl
fisubrs
mov
popf
roll
aad
cli
cmp
add
les
push
dec
aam
add
cmp
testl
icebp
cmp
scas
jb
and
mov
mov
test
mov
xchg
int3
mov
mov
pop
in
fisubl
sbb
loope
test
inc
sub
and
push
pusha
mov
sbb
mov
mov
shlb
xchg
push
xchg
test
test
dec
sbb
out
subb
inc
xchg
jns
dec
ret
adc
outsb
das
add
lahf
ret
push
or
cmpsb
test
push
mov
pushf
movsb
repnz
mov
movsl
cltd
or
fwait
out
adc
sbb
ds
and
or
or
push
sub
nop
cmp
cmp
iret
adc
sub
mov
xor
ret
mov
lods
jle
xor
push
aas
mov
mov
sub
aas
andb
int3
inc
sub
jmp
fidivs
fisttpll
imul
icebp
fadds
add
cmpsl
in
cmpl
rorb
cmp
xor
fisubs
sub
sbb
rcr
inc
icebp
cli
xor
rcr
mov
sti
imul
sub
adc
jae
mov
cmpsb
shrd
pop
sub
aaa
stos
mov
inc
clc
jl
loope
call
pop
aad
mov
popf
call
jne
jecxz
mov
ss
cwtl
test
pop
mov
scas
push
shll
fadds
cmpsl
out
mov
xchg
outsl
imul
adc
je
adc
jb
cmp
or
jp
int
xchg
pop
xchg
hlt
cmpsl
xchg
and
pop
dec
lcall
mov
sub
outsl
lcall
dec
das
lods
inc
jae
in
movsl
push
mov
add
add
sbb
loopne
jg
push
push
push
add
cld
xchg
or
jb
data16
or
push
lods
sub
dec
ficompl
push
loope
loop
ljmp
in
dec
pop
shll
out
add
stos
popa
pushl
hlt
inc
imul
js
adc
pop
mov
mov
popa
lret
cmp
adc
jne
mov
mov
jecxz
mov
stc
jno
add
out
inc
sbb
or
mov
iret
push
or
jns
js
xchg
xor
movsb
sub
pop
int3
ret
add
sbb
in
mov
test
js
inc
xchg
adc
push
ljmp
out
mov
in
cwtl
adc
xchg
xorb
push
mov
pusha
jmp
xchg
movsb
imul
and
mov
movsb
les
lret
mov
cmc
std
mov
mov
inc
mov
lahf
popa
lcall
inc
jp
roll
imul
xor
mov
dec
sbbb
js
fcompl
mov
pop
roll
xchg
jbe
hlt
shll
pop
lea
mov
in
arpl
std
jmp
inc
nop
mov
cltd
dec
cs
cli
stos
mov
repz
dec
sub
jno
jbe
inc
add
loope
jmp
prefetchw
cld
or
add
pop
sbb
and
jne
cmp
gs
xchg
in
fadds
into
gs
mov
outsl
or
cmp
dec
pushf
sahf
aaa
mov
insl
rcl
ja
adc
xor
or
jle
lods
neg
and
cmp
dec
aaa
clc
mov
sahf
or
xchg
xchg
xor
push
mov
movsb
xchg
cmp
inc
lods
movsb
push
stc
js
rclb
xor
mov
stc
jnp
scas
loope
adc
lods
daa
dec
sub
cmc
das
jne
cmp
mov
lods
xchg
and
mov
sarb
inc
fdivs
fwait
into
push
jle
sbb
imul
xor
sub
mov
push
inc
fwait
jge
adc
mov
adc
lcall
push
push
shl
xor
adc
stc
xchg
push
mov
mov
adc
js
cmp
imul
mov
out
gs
jnp
or
xchg
inc
sub
ja
or
add
push
rcll
push
popf
dec
dec
mov
rcrl
in
inc
mov
shll
test
jmp
int
pop
dec
aad
fnstenv
pop
inc
cmpsb
idivl
adc
faddl
shrl
dec
imul
sbb
xor
shl
jg
mov
mov
leave
ds
and
in
mov
aad
repnz
sbb
sbb
mov
mov
cmpsl
dec
xor
sbb
es
mov
shrl
flds
push
dec
pop
stos
sbbl
ja
xchg
push
sub
and
sub
sbb
jnp
roll
bound
push
loop
in
mov
dec
jle
imul
sub
add
rcr
cmc
adc
test
pop
xor
lock
jp
mov
insl
sahf
outsl
sub
test
jb
jno
adcb
sbb
pusha
pop
xchg
or
add
btr
pop
dec
pop
pop
add
das
mov
test
lcall
aas
out
mov
xorb
inc
arpl
inc
mov
in
pop
jnp
jge
inc
es
icebp
mov
adc
inc
movl
inc
sbb
paddq
mov
mov
jb
xor
cmp
sub
insl
out
mov
pop
dec
testb
testl
fwait
adc
jo
add
push
and
pop
add
mov
push
jbe
icebp
inc
adc
sahf
mov
shll
dec
hlt
push
ds
leave
mov
cwtl
shll
xchg
xor
out
pop
push
loope
push
cmpb
inc
sub
or
stos
jb
push
in
lcall
xorl
inc
pop
test
push
out
frstor
or
sbb
lcall
outsb
dec
and
mov
jge
cmp
sahf
pop
cmp
repz
or
fst
in
dec
aad
push
je
or
xchg
aas
mov
push
pop
add
dec
xor
cli
sbb
jae
xor
sarb
fucom
stc
push
dec
test
fwait
sbb
or
loop
test
or
lcall
fbld
sub
adc
imul
into
andb
pop
lret
add
push
fwait
lea
jo
stos
dec
sub
xchg
mov
sti
mov
jge
sub
or
sub
cmpsl
shrl
call
hlt
and
push
push
loop
xor
add
les
shrl
sub
out
test
mov
into
aaa
leave
sbb
jmp
lret
cltd
xor
xchg
dec
cs
mov
push
out
out
push
pusha
out
pushf
daa
cmp
mov
cmp
dec
mov
inc
mov
jae
sbb
imul
push
jge
cmp
push
out
add
ret
stc
add
pop
loop
adc
stos
into
inc
or
lcall
or
ret
enter
and
mov
xor
mov
lock
inc
adc
push
cmp
daa
or
scas
nop
out
outsl
ljmp
mov
mov
and
cmpsl
ja
mov
pop
adc
cmp
stos
pop
add
or
pop
rol
bound
pop
inc
adc
stos
add
jb
sbb
adc
hlt
jmp
cwtl
xor
or
cwtl
lods
add
mov
cmpsl
push
test
scas
pop
mov
sub
daa
cmpsl
add
out
xchg
mov
mov
xchg
sbb
fnstcw
xchg
mov
push
inc
insl
push
mov
sub
lret
or
push
push
xor
and
and
shll
xor
lds
push
orb
add
lahf
daa
sti
in
add
mov
mov
sbb
mov
and
dec
fldl
and
add
push
jne
adc
add
icebp
mov
test
out
arpl
sbb
je
outsl
jge
fisttpl
xchg
cmp
mov
and
jb,pt
std
pop
xchg
in
insb
mov
decl
aaa
outsb
pop
clc
inc
push
test
enter
inc
lock
mov
lds
lret
sbb
jb
mov
xchg
cli
ret
test
or
inc
and
rcr
mov
sbb
jae
push
adc
mov
jo
pushf
jmp
loopne
sbb
pop
arpl
mov
and
test
push
pop
enter
push
cmp
imul
push
push
fld
in
xor
cmp
push
rclb
mov
stos
std
pop
mov
enter
lea
nop
stos
jne
jmp
scas
mov
cltd
int3
cmp
pop
rcrb
jbe
fs
and
inc
dec
mov
mov
jae
cld
cltd
sti
cmp
cmp
mov
pushf
movsl
dec
arpl
xchg
adc
addr16
cltd
enter
pusha
inc
stc
add
scas
add
clc
imul
bound
addl
in
mov
dec
pop
out
jp
jno
add
mov
jle
pop
push
jg
shl
test
mov
xchg
popf
dec
xchg
popa
out
pop
mov
es
and
movsl
sbb
cld
test
jno
in
mov
aad
jo
push
push
fisubrl
btc
ds
test
cmpsl
notb
movsl
lds
pop
int3
hlt
mov
in
mov
lret
inc
cmpsb
cld
in
stc
pop
or
or
stos
pusha
movsl
sahf
test
loop
aam
jl
and
mov
sbb
push
stc
adc
inc
cli
notb
sub
js
jo
movsl
clc
lea
mov
adc
bound
std
adc
push
lea
mov
push
nop
lods
cld
roll
push
pop
add
adc
jae
xorl
iret
movsl
cmpsl
fs
push
push
into
and
push
lcall
nop
int
or
mov
mov
es
mov
push
jmp
inc
pop
add
lcall
push
into
cld
repnz
or
clc
lret
rorb
nop
sub
xor
mov
sbb
jbe
jne
dec
push
dec
lods
mov
scas
test
jb
pop
sub
lret
xchg
popf
ficompl
int3
lcall
call
add
js
into
add
orl
inc
and
mov
inc
dec
push
icebp
adc
ljmp
scas
and
cs
add
icebp
fwait
pop
mov
jg
sbb
fldenv
push
sbb
mov
and
push
cmp
sbbb
shlb
shll
push
pop
add
and
mov
out
pop
addr16
xor
adc
jge
stos
sbb
sahf
aad
xchg
mov
aaa
mov
jle
dec
das
inc
add
lea
jge
fimuls
xor
cmpb
pop
mov
mov
js
insl
aaa
mov
adc
mov
xchg
mov
jecxz
sub
push
mov
enter
pop
call
jb
adc
outsb
xor
or
pop
sub
rol
sbb
adc
xchg
or
icebp
cmpsb
pop
jle
xchg
jecxz
pusha
sub
movsl
outsl
pop
outsb
mov
adc
pop
sbb
jle
cmpsl
mov
mov
add
push
inc
jle
aas
mov
mov
rcrl
out
std
mov
mov
icebp
int
jne
out
test
in
ret
scas
dec
lea
ds
stos
cmp
fnstcw
aas
xchg
bnd
sbb
cmc
cltd
push
sbb
xchg
adc
pusha
out
and
sarl
cmp
imul
push
in
addb
mov
call
mov
sub
mov
adc
int3
lret
sub
enter
in
jmp
cmpsb
adcl
rcrb
rorb
or
mov
lds
aaa
aam
push
addb
pop
lock
inc
xor
xchg
xor
adc
inc
mov
aam
aas
xchg
sti
pop
push
inc
pop
rclb
cmp
shll
inc
movsb
add
mov
ljmp
icebp
inc
adc
adc
gs
push
repnz
cmp
pop
sub
dec
jle
xorl
mov
add
ret
sbb
cmp
testl
xchg
inc
sbb
xchg
fildl
adc
fwait
pop
add
movb
adc
and
mov
dec
leave
js
jle
add
xlat
ud2
xchg
push
and
fisttpl
fnstenv
add
jae
jg
adc
mov
jp
cmp
shll
inc
scas
iret
jae
std
and
popl
repz
es
cld
lods
mov
sahf
popf
add
out
hlt
dec
imul
xor
in
fmul
cs
ss
fsub
int3
or
and
aaa
hlt
insl
bound
pop
dec
adc
xorb
mov
dec
add
popa
adc
aas
xchg
pusha
lret
lds
aad
inc
andl
arpl
sti
jmp
inc
mov
adc
fistpl
push
hlt
add
dec
pop
xchg
jl
adc
inc
add
xchg
in
xor
sub
and
push
cltd
xchg
xchg
dec
xlat
add
mov
inc
mov
repz
mov
lret
test
mov
sbb
inc
adc
lds
add
xchg
jbe
mov
pop
lret
or
test
cmp
sub
push
adc
xchg
and
bound
jge
xchg
add
cwtl
shl
call
stos
add
and
pop
mov
lds
aam
insb
jnp
dec
lds
hlt
int
loope
inc
insl
js
push
hlt
stos
cmp
adc
sub
cmp
mov
ror
sbb
outsb
and
out
sub
xchg
dec
jle
add
lea
ja
aam
lret
ja
loopne
fadd
mov
mov
mov
lods
cli
sbb
mov
cmp
jno
rcrb
jns
fistl
mov
nop
lahf
adc
adc
pop
popf
push
ja
xchg
pusha
popf
fisubl
pop
mov
pusha
pushf
ficomps
test
mov
push
fiadds
sub
xlat
pop
mov
cmp
sbb
jecxz
sub
stc
decb
xchg
pop
js
test
dec
xor
stos
jmp
dec
fisttpll
adc
scas
pushf
lods
or
lock
jns
add
imull
mov
clc
pushf
mov
test
push
sub
xchg
loopne
cmp
test
ud1
insl
mov
out
add
ljmp
cmp
push
in
leave
adc
or
and
cmpsb
lahf
mov
mov
dec
sub
jae
add
sub
pop
mov
ss
lods
fistpll
stc
inc
outsl
xchg
jne
or
std
and
jmp
inc
movb
push
lock
shlb
ret
lods
es
jno
aam
aad
lock
and
sbb
adcl
shrl
adc
pop
jbe
dec
add
lret
add
sub
shl
loope,pn
repnz
jle
or
push
inc
adc
jne
data16
idivb
mov
mov
lds
loop
int3
cwtl
and
dec
jb
mov
xor
ss
inc
push
cmp
lret
mov
mov
pop
pop
xchg
inc
pop
sbbb
jae
mov
pushf
mov
push
jge
xchg
xchg
lret
or
dec
std
imull
inc
xor
mov
jmp
cmp
aaa
jae
jo
fsubrp
inc
lahf
loop
mov
sub
insb
jge
xchg
mov
sbb
movsl
cmpsb
int
adc
inc
sbb
stos
sarl
jne
inc
lea
inc
xor
popa
fcmovu
insb
mov
aad
test
mov
xor
lgdtl
inc
nop
leave
imul
sub
sub
inc
mov
mov
adc
add
mov
aaa
jle
xor
ss
sub
subl
jae
jg
jp
pop
xor
cli
stos
mov
loopne
dec
lcall
xor
add
xor
xor
andb
scas
cld
xchg
scas
sbb
mov
mov
sbb
mov
adc
loope
sub
out
adc
mov
mov
fidivrs
add
xor
cli
adc
sar
dec
arpl
xlat
sbb
and
fisubrl
inc
pop
stos
adc
mov
sub
arpl
push
inc
add
outsb
mov
pop
push
fs
les
cmp
add
outsb
lock
cwtl
int
hlt
ljmp
loop
xlat
push
add
test
add
jle
decl
daa
adc
je
pop
mov
push
inc
stc
fwait
dec
je
push
clc
add
mov
lcall
adc
lahf
push
test
fsubr
sub
fidivl
xchg
xlat
inc
xchg
mov
pusha
jp
les
mov
sbb
mov
rorb
mov
lods
pop
inc
push
inc
mov
xchg
dec
shl
or
push
inc
pop
jle
fsub
out
sbb
movsb
fnstsw
les
int3
jb
lcall
or
ficomps
mov
or
push
and
mov
lock
add
ret
dec
pop
scas
cld
mov
dec
push
jae
mov
out
mov
xchg
jno
mov
pushf
enter
xchg
fwait
aam
add
jns
loope
mov
scas
add
mov
int
jae
or
pop
test
arpl
dec
lret
je
xchg
mov
jl
pop
lret
sbb
imul
sub
dec
scas
test
jb
fs
insl
jmp
cmp
cwtl
or
popa
fmul
xchg
pop
nop
cld
ror
mov
lret
jecxz
in
jo
divb
lret
fmull
enter
dec
or
nop
loop
pop
testb
fiadds
mov
cmp
enter
leave
repz
bound
ret
lds
rcrl
hlt
adc
pop
shr
hlt
cmpl
adc
dec
mov
test
pop
pop
bound
iret
insl
in
mov
mov
sbb
sbb
sarb
xchg
push
sbb
call
xchg
mov
mov
sbb
mov
pushf
mov
mov
lock
jne
mov
cmp
xchg
and
add
les
les
or
lahf
push
test
fisttpl
add
xor
dec
sub
xor
and
cmp
outsb
loopne
je
out
dec
pushf
dec
pushf
pop
lret
mov
inc
loope
mov
sub
mov
les
not
idivl
pusha
cmp
adc
adc
pop
inc
pusha
and
scas
in
push
repnz
adc
inc
insb
test
adc
in
mov
movb
nop
push
xor
xor
fcoms
test
add
test
mov
ss
xchg
lea
cmc
mov
shlb
cmc
ffree
xchg
lds
out
xor
insb
pop
popf
jge
push
hlt
dec
cli
dec
mov
xor
in
cs
stc
pusha
clc
inc
iret
xor
or
adc
xchg
push
jle
fmuls
jl
mov
sub
sub
rorb
xlat
aam
mov
sbb
add
pop
jmp
stos
adc
dec
lahf
or
mov
push
clc
or
push
jecxz
inc
out
push
push
xor
test
xchg
test
pop
pop
pop
adc
test
popa
inc
fst
fisubs
sbbb
outsb
jb
mov
orl
imul
add
daa
fcompl
pop
aas
mov
ss
inc
cmp
lock
adc
movsl
mov
test
pop
bound
fsubl
cmp
outsb
outsb
pop
fdivrs
test
and
aaa
xor
je
lahf
divl
scas
gs
insb
or
out
imul
popa
in
sbb
mov
mov
lahf
push
popf
leave
mov
sti
cli
cmp
mov
pop
lea
mull
mov
pop
and
fisttps
or
ja
mov
mov
in
clc
push
in
sbb
jnp
push
sbb
je
and
inc
mov
lds
aad
popa
inc
int
pop
subb
out
sub
lods
push
xor
loop
mov
sbb
jbe
mov
adc
push
cmp
sub
bound
pushf
pop
int
in
pusha
aad
aas
enter
sbb
xchg
movsl
sti
pushf
xchg
dec
ja
sub
fbld
es
es
dec
and
push
or
xchg
sbb
je
xor
lret
in
clc
lahf
rcll
stos
mov
push
aad
mov
dec
cli
js
xchg
xchg
xor
arpl
pop
pop
mov
xchg
or
jns
pop
out
push
pushf
push
inc
jecxz
leave
aad
icebp
xchg
stc
sbb
sbb
ffreep
jle
ljmp
jge
inc
outsl
aas
lret
std
xor
add
pop
icebp
daa
push
ss
out
enter
imul
test
test
scas
lahf
cmp
or
sub
insl
lods
sahf
inc
stc
nop
and
push
add
dec
mov
adc
pusha
add
arpl
scas
test
bound
mov
rorb
ret
dec
and
and
push
cmpsl
xlat
and
adc
sbb
jle
mov
leave
leave
sbb
lea
fbld
hlt
adc
xchg
jg
test
outsl
movsb
mov
cwtl
push
repnz
scas
stos
movsl
push
lret
sahf
inc
jno
cmp
pushf
add
pushf
sbbl
loop
in
shrb
dec
push
cmpsb
push
or
sub
cmp
xchg
loop
loop
dec
test
add
fstpl
sarl
cmp
mov
dec
push
push
inc
movsb
xchg
mov
dec
push
sub
jmp
pop
cmp
mov
dec
dec
pop
outsl
jl
cmp
xchg
cmp
fadds
ret
add
lahf
enter
aam
cmp
hlt
cmp
aas
add
cmp
mov
jne
xchg
adc
insl
leave
lods
inc
mov
or
sub
js
xor
out
mov
adc
mov
loop
xchg
insl
test
xchg
adc
and
pop
fidivl
imul
add
bound
fnstenv
mov
std
mov
sub
into
jae
out
sbb
jge
out
push
sub
mov
dec
leave
shrl
xor
sbb
jbe
sub
neg
jae
or
fldl
inc
push
jo
mov
test
aas
lcall
ret
sub
int
mov
sbb
dec
les
stc
jmp
out
ds
adc
int
aaa
leave
es
call
fs
lods
adc
pop
jnp
std
out
xor
pushf
dec
jge
mov
jle
cwtl
inc
jne
ret
in
cld
push
sub
mov
mov
aam
xchg
xchg
xchg
jmp
or
lods
xchg
sub
adc
fs
scas
xlat
jge
add
mov
out
inc
xor
repnz
repnz
mov
ja
aas
aaa
sub
int3
jmp
repnz
arpl
popl
push
push
ficomps
gs
mov
pop
mov
dec
in
pop
pop
xor
sub
nop
out
sub
ja
pop
pop
ret
xchg
sbb
arpl
test
adcl
aad
and
insb
sub
push
jmp
and
xlat
into
jns
or
inc
cltd
or
pop
push
xlat
adc
lods
fcomi
pop
xchg
decl
adc
pop
mov
push
test
adc
sbb
and
push
push
adc
push
pop
call
lods
shll
loopne
addr16
ss
sbb
rcrb
and
mov
shl
stos
dec
adc
inc
test
or
mov
xchg
bound
xchg
pop
pop
xchg
lcall
mov
xchg
jno
int3
dec
xchg
scas
cmp
mov
dec
pop
ja
icebp
pop
je
daa
in
fisubs
addb
nop
jo
jo
insl
lods
stos
or
testl
out
out
in
and
jbe
xor
in
inc
imulb
sbb
daa
xchg
fcmovnb
xchg
fiadds
mov
dec
imul
cwtl
sub
inc
mov
fidivl
or
mov
mov
gs
out
stc
data16
jb
scas
js
inc
dec
out
int3
outsl
clc
sbb
mov
cmp
cs
sar
out
inc
repz
and
push
jmp
inc
mov
mov
mov
arpl
js
push
add
xchg
sub
divl
mov
lock
loopne
inc
vmovsd
adc
sbb
fcos
xor
mov
xchg
adc
stos
adc
xchg
dec
cmp
or
mov
hlt
pop
jmp
aad
lock
or
iret
es
lods
ljmp
sti
jb
xchg
fwait
cmp
xor
sub
cs
gs
dec
not
push
adc
jmp
lea
call
sbb
inc
das
dec
das
push
add
mov
xchg
enter
fsubl
or
sub
notl
popl
push
jbe
rcll
xchg
inc
jle
sub
or
push
dec
pop
in
out
or
jl
mov
mov
mov
or
sahf
rcl
mov
push
mov
add
xlat
adc
orl
popl
pop
cs
xchg
pushl
mov
mov
xor
push
lret
lcall
jb
loopne
cmovns
jge
cmp
arpl
sub
mov
lret
push
lock
mov
pusha
out
out
or
add
dec
inc
xchg
xchg
mov
lret
fmulp
lods
sub
das
pop
push
lods
mov
fisttpll
xchg
xchg
or
lock
and
mov
xor
sub
xchg
jl
aas
add
sarl
mov
pop
pop
mov
pop
in
imul
xchg
jno
shll
int3
outsb
inc
arpl
sbb
push
adc
stos
cs
xchg
jns
pop
xchg
fists
inc
orb
cmp
xor
adc
pop
imul
stos
js
mov
add
pop
cmc
inc
sub
cmp
xchg
adc
sarb
push
adc
fwait
test
pop
xchg
cwtl
and
pop
ss
pcmpgtd
cmp
data16
lods
cli
out
xor
sti
gs
pop
out
insb
testb
mov
mov
hlt
and
mov
sub
pop
cmpsl
pop
inc
shll
cwtl
cwtl
or
inc
mov
pop
sbb
mov
pop
out
or
scas
xchg
subb
add
aam
sbb
shrd
cli
fnstsw
jmp
mov
mov
push
fdivs
xor
ds
dec
pop
cmp
adc
add
movb
aas
add
and
out
add
outsl
out
out
or
aam
and
lods
sub
clc
pop
in
or
movsl
gs
repz
mov
cmp
bnd
add
and
xchg
pop
sub
push
cmp
ja
add
cmp
cmc
test
cmp
scas
fcomps
pop
lods
mov
rcrl
jne
mov
push
sbb
gs
pop
movsb
pop
jne
cltd
pop
sbb
hlt
push
das
jle
adc
mov
jmp
lret
aas
das
xchg
mov
xlat
push
fstpt
xchg
ret
pop
xchg
ja
sbb
and
cmp
in
subb
push
inc
mov
pop
cli
lods
stos
clc
loopne
les
jg
or
push
and
fcompl
pop
inc
imul
and
inc
or
mov
xor
in
mov
push
int
out
into
sarb
sub
pop
bound
faddp
test
sub
xor
in
push
sbb
cmp
test
and
scas
mov
int
ds
xchg
push
std
fiaddl
loop
mov
fdivr
or
outsb
or
cmpsl
inc
repz
mov
sub
outsb
mov
and
lods
mov
xchg
pop
mov
mov
sub
mov
mov
lahf
fs
cmp
adc
rorl
sub
iret
movsl
mov
and
lcall
jmp
mov
or
loop
mov
xor
push
mov
jns
adcl
jp
mov
xchg
push
push
push
xor
xchg
sbb
xlat
lahf
iret
pop
cmp
and
xor
adc
movb
xor
xchg
jno
ficompl
jle
jge
jne
push
xor
push
outsl
jb
rorl
loope
sarb
dec
data16
test
stos
dec
into
ljmp
fcoml
sbb
dec
push
xor
divl
adc
mov
push
xchg
insb
inc
shr
mov
jle
jbe
push
inc
sbb
dec
mov
out
fdivl
cld
scas
fildl
xlat
aas
popf
xchg
jbe
cmp
cmp
cli
jp
pop
ja
xor
push
int3
cmpsl
xchg
cmp
scas
and
push
adc
add
leave
fsts
ljmp
inc
xor
jge
xchg
les
jmp
cltd
xor
mov
jp
aas
xchg
fadds
fcmovbe
xchg
in
in
jl
and
mov
jecxz
jmp
orl
push
push
sub
pop
lea
mov
mov
mov
inc
push
imul
push
mov
dec
jb
sti
stos
adc
and
mov
sti
push
dec
fstps
movsl
test
and
test
xchg
cmp
lret
xlat
hlt
push
pushf
aad
loop
outsb
mov
add
out
adc
mov
daa
lret
sub
aaa
aas
adc
cwtl
imul
fsub
ja
movsb
lret
add
stos
add
lock
or
aas
call
xchg
aad
sbb
aaa
test
sbb
mov
into
scas
or
aas
sti
jge
xor
inc
shll
inc
out
inc
sub
mov
shr
pop
xchg
push
push
test
mov
mov
xchg
cwtl
icebp
xchg
or
ds
out
jge
sbb
divb
out
pop
loopne
sub
inc
sarb
xchg
test
inc
rcrb
in
mov
out
ds
outsl
jne
test
ret
in
je
out
inc
icebp
push
xor
aad
jg
movsb
and
sbb
mov
inc
cmp
into
jae
jp
ljmp
out
mov
jno
les
sub
jecxz
ret
es
xor
jp
mov
xor
in
mov
xor
stc
add
sti
push
push
pop
int
stos
jno
movsl
sahf
mov
xchg
jne
push
mov
imul
hlt
mov
out
mov
cmp
sub
sbb
xchg
mov
push
mov
or
adc
in
test
xorb
ret
test
sarb
mov
push
mov
dec
cltd
xor
out
outsl
pop
jbe
adc
and
mov
xchg
xor
dec
mov
test
pushf
bound
testl
push
mov
xchg
cli
jno
jbe
pop
cltd
mov
in
mov
mov
stos
xchg
lahf
pop
roll
mov
inc
jnp
iret
stos
sbb
gs
xchg
repnz
out
dec
out
xchg
adc
nop
push
pop
and
jg
mov
push
mov
mov
test
pop
push
xchg
cmpxchg8b
int3
adcb
add
fcoml
push
lea
leave
jae
test
push
vlddqu
jp
movsl
sub
xchg
dec
push
pop
jp
loope
scas
shl
xor
scas
pop
and
push
xchg
push
fstl
pop
mov
mov
mov
jle
xlat
jmp
adc
pop
jae
imul
cmpsl
mov
jnp
out
cld
cmpsl
inc
xorl
aam
mov
or
loop
sbb
fldl
xchg
fldenv
pop
sub
push
out
and
dec
setno
push
xchg
pmaxub
mov
testb
push
aas
mov
cltd
adc
clc
adc
mov
cmp
incb
jnp
call
gs
lea
jbe
sti
out
ja
push
test
xchg
xchg
cmc
lret
jp
jle
push
pushf
dec
dec
rolb
cmp
xlat
out
mov
aam
in
pop
pop
bound
test
ljmp
inc
adc
outsl
lds
lds
push
push
mul
cmpsl
dec
mov
out
leave
dec
out
jl
cltd
push
pop
data16
jbe
add
mov
and
dec
and
cmc
sbb
in
or
dec
push
jge
insl
cmp
push
ror
mov
sbb
scas
test
test
xlat
xchg
pushf
filds
mov
or
inc
pop
ja
stc
repnz
rolb
aam
in
or
mov
push
sahf
jbe
xor
cmp
into
aas
xchg
loope
and
dec
pop
add
push
xorb
add
jecxz
pop
sub
xor
out
fwait
inc
jl
lds
mov
out
scas
dec
adc
pop
pop
xchg
aas
or
mov
push
cmpsl
push
or
pop
jg
js
dec
rol
pop
data16
in
call
mov
push
cmp
int
pop
jmp
push
xchg
popl
ffree
fiaddl
fildl
int
xchg
mov
mov
or
and
cmp
mov
fs
scas
push
mov
dec
dec
insl
push
mov
and
mov
push
mov
lahf
ss
xchg
adc
mov
inc
outsb
sti
enter
dec
fstpt
pop
lock
repz
daa
scas
aam
lods
pusha
test
popa
push
jbe
inc
sbb
sub
and
aad
and
push
addr16
mov
inc
cltd
mov
or
lods
out
aaa
movsb
xchg
lret
jge
sub
mov
cld
aaa
mov
cld
adc
icebp
or
sbb
sti
std
jnp
enter
call
sub
test
or
aad
out
out
mov
out
push
dec
or
scas
cmpsb
or
or
rcrl
in
xchg
sbb
cmc
add
jbe
lahf
mov
mov
fwait
xchg
std
aam
pop
sub
jg
push
cmpsl
daa
pusha
outsl
movsl
dec
push
add
rclb
repnz
dec
mov
stc
int3
movsl
mov
pop
inc
add
ja
inc
in
loopne
xor
pop
mov
mov
jo
add
test
into
jb
push
lcall
adc
or
mull
xchg
push
jle
jge
insb
movsl
xchg
push
rcrl
sbb
jb
push
push
mov
incb
pop
cmp
pop
mov
pop
xchg
pop
pop
jl
inc
mov
cmp
push
add
mov
push
jno
jecxz
inc
inc
or
sub
popa
imul
xchg
mov
repnz
pop
or
lret
sbb
sbb
inc
mov
xor
loope
add
lret
insb
dec
fwait
ret
mov
add
inc
mov
sbb
pop
fadds
cmp
stc
mov
sbb
ret
pusha
add
xor
dec
inc
inc
sub
sbb
add
adc
sub
mov
hlt
rorb
cmpsl
xchg
loop
int3
fiaddl
bound
aas
jb
stc
pop
xchg
hlt
aam
dec
shll
lea
jmp
adc
jg
cmp
fs
mov
cli
adcl
inc
mov
mov
ds
pusha
push
fldenv
inc
pop
push
out
dec
in
inc
int
fnstsw
xor
loop
sub
xor
insb
push
pop
cmpsl
dec
sub
loop
aam
dec
fnstenv
hlt
scas
negb
shrb
jmp
rcr
imul
lods
xor
mov
xor
test
lret
mov
pop
push
shll
int
popa
sub
outsb
dec
jo
mov
fstpl
cmp
mov
push
insl
fwait
push
push
dec
xlat
loop
lods
and
jle
push
hlt
pusha
idivl
ss
add
test
js
cltd
mov
rolb
push
jae
sti
cmp
test
adc
roll
test
jg
jge
das
popa
fwait
jle
pushf
xor
push
mov
ljmp
into
mov
xlat
nop
and
jbe
jl
jo
or
adc
pop
dec
mov
sti
push
ss
ljmp
fs
xor
jb
flds
f2xm1
test
sub
xchg
outsl
fcoml
iret
ret
add
fstps
dec
lret
inc
pusha
push
xchg
dec
push
mov
lahf
cli
dec
loope
xor
shrl
xchg
push
xor
fdivr
adc
push
fcompl
bound
sub
das
sar
push
ror
lds
xor
push
and
push
ds
dec
jo
cs
mov
mov
mov
in
inc
and
mov
arpl
push
daa
lock
std
cs
mov
xchg
cwtl
lcall
mov
push
pop
xchg
and
jmp
test
add
sub
aam
or
bound
xchg
rorl
push
out
pop
mov
xchg
je
out
xor
mov
popf
add
fs
mov
pop
pop
sub
and
push
dec
fnstcw
int
push
lret
stos
inc
into
push
xor
data16
pop
push
int3
fyl2x
sbb
xchg
jp
cmc
in
int
test
mov
mov
mov
push
lods
sbb
hlt
jge
outsb
fnstsw
jno
lods
nop
fistpl
sbb
sub
mov
test
daa
hlt
sarl
pop
mov
lock
and
push
mov
test
ret
ljmp
ret
cmp
lahf
xchg
jae
outsl
daa
ds
mov
popf
mov
push
add
ja
movsl
xor
mov
xor
andb
mov
icebp
inc
mov
lcall
xor
test
xlat
cmp
getsec
nop
roll
pop
lcall
sbb
jbe
cmp
inc
lods
mov
insb
pop
adc
push
adcb
sub
ljmp
inc
pop
faddp
sub
sbb
sbb
xchg
lcall
xor
xchg
fists
ds
push
jl
add
pop
inc
xor
aam
mov
xor
mov
imul
jbe
adc
adc
sti
dec
bound
jge
mov
scas
scas
and
push
jne
mov
push
sub
loope
ljmp
cld
add
or
je
lret
cs
adc
test
or
mov
jnp,pt
xchg
mov
imul
je
pop
daa
push
scas
mov
test
iret
loopne
into
jbe
sub
jno
xor
pop
jns
dec
out
dec
pop
mov
jg
push
add
adc
and
sbb
jecxz
lods
fcoml
test
cwtl
push
sbbb
inc
fstpl
loopne
mov
or
push
clc
pop
pop
mov
mov
xor
or
jmp
out
and
pop
xor
out
mov
xchg
xor
sub
fwait
addb
push
clc
scas
je
sub
outsb
mov
in
mov
int
lea
dec
lds
lcall
cmp
idivb
push
xor
xchg
inc
in
and
ja
lcall
cmp
xchg
jns
cmp
cmc
mov
lock
lds
orl
mov
iret
pop
pop
lods
scas
popa
ja
push
cmpsb
out
pushf
add
jg
push
sarb
sbb
je
mov
pop
or
std
inc
dec
ss
pusha
std
stos
notl
scas
cmp
gs
or
fildll
imul
popf
inc
in
pusha
lock
fnstsw
test
dec
mov
nop
bound
out
sbb
bound
insl
das
mov
sbb
cld
rorb
les
jae
jns
out
xor
jo
ljmp
pop
insl
push
pop
push
stc
cmp
clc
mov
mov
std
inc
scas
adc
fisubl
or
imul
sub
add
test
mov
cmpsl
mov
adc
cmp
imul
jo
push
cld
leave
je
inc
add
inc
xchg
test
mov
rorl
sbb
fildl
cs
dec
stos
lods
xchg
je
mov
fs
bound
xor
in
cs
aaa
jp
lods
jno
push
add
or
jmp
out
sbb
pop
add
aam
repnz
dec
inc
shll
or
mov
sub
sbb
cmpsb
int
fwait
test
test
aas
or
cld
xchg
inc
mov
adc
pop
pushf
test
stc
mov
xor
test
paddusw
lcall
in
mov
xchg
lcall
mov
inc
mov
cmp
cltd
xchg
and
push
mov
jp
sbb
pop
lahf
addr16
outsb
sbb
push
adc
jge
xchg
and
iret
jae
cmp
inc
pop
out
nop
jg
aad
or
cmp
add
decl
jg
xor
imul
scas
xlat
jmp
jb
inc
rolb
ja
dec
add
stos
mov
or
add
imul
xchg
cmp
leave
arpl
cmp
cli
pop
inc
test
sub
sbb
mov
push
xor
fstps
dec
cltd
cmpsl
outsl
icebp
mov
sbb
ss
xchg
xchg
push
mov
cmp
mov
ror
daa
pop
mov
data16
xor
or
sub
jb
cmp
mov
or
rclb
sub
xchg
cltd
stos
add
or
inc
inc
mov
sub
jae
cmp
jl
js
mov
push
mov
push
jmp
mov
push
xchg
push
mov
push
std
xor
test
push
loopne
sub
pop
adc
mov
cli
insl
test
fists
adc
xlat
enter
aaa
sahf
inc
flds
push
in
xchg
mov
mov
lret
mov
loop
xor
jg
mov
xchg
aad
rorl
std
mov
js
jle
push
sbb
inc
dec
rorl
out
push
int
xchg
mov
cltd
dec
out
jnp
and
sbb
or
xchg
loopne
je
clc
loopne
insb
shr
call
dec
sbb
or
mov
rorb
inc
push
mov
sbb
fidivl
jno
out
mov
test
xor
add
imul
adc
nop
pop
lahf
and
mov
sbb
pusha
shl
repnz
xor
or
xor
pusha
mov
pop
and
loop
xchg
inc
or
call
popf
incl
lahf
ss
clc
pop
aas
or
add
int3
inc
jbe
andb
movsb
repnz
aad
imul
jp
repz
xorb
das
rorb
push
movsb
add
mov
bound
ds
rol
sbb
pop
iret
ljmp
xor
pop
gs
jnp
mov
xlat
push
lock
or
mov
cmp
out
in
jbe
mov
outsl
add
test
xor
or
addb
pop
ljmp
ds
push
push
or
or
pop
inc
mov
adc
jp
and
aaa
cli
idivb
lret
fiadds
add
ficoms
inc
cmpsb
sbb
mov
shlb
mov
mov
mov
test
xor
fxch
leave
and
pop
add
shl
mov
mov
mov
ljmp
inc
push
std
cld
xlat
ret
push
pop
xchg
or
xchg
icebp
mov
or
test
mov
push
pop
insb
xchg
stos
ss
ja
in
cmpsb
sub
fidivl
xorb
daa
dec
loopne
sub
xor
popf
inc
cmp
jnp
xorl
in
mov
sbb
jg
ficomps
dec
xchg
sub
push
sarl
mov
adc
fldl
jne
pop
popf
out
jae
daa
into
cltd
movsl
rcrb
mov
mov
cmp
xor
push
and
pop
divb
xor
xor
and
call
jl
dec
ffree
add
adc
cmpsb
iret
push
dec
inc
and
scas
xchg
roll
daa
fisubl
mov
nop
cmp
lret
add
pop
daa
xor
inc
and
divb
in
mov
je
lods
les
je
pop
stos
daa
xchg
adc
lret
mov
dec
jge
xor
jo
xchg
xor
inc
test
mov
inc
gs
or
xor
rcrb
gs
shl
clc
sub
gs
out
push
jbe
lret
xor
mov
jecxz
outsl
mov
rolb
mov
enter
fistl
aaa
cli
rcrb
je
jo
test
lahf
jb
adc
lock
fs
push
mov
add
and
xchg
jl
pushf
lods
cmc
insb
pushf
cmp
lock
lahf
imul
cmp
bound
or
scas
mov
jl
jae
bound
orb
lahf
popa
push
cmpsb
pop
leave
push
lock
repz
lret
pushf
mov
xor
jb
ror
aad
and
cs
mov
stc
aas
mov
cmpsl
lret
xchg
and
sub
mov
inc
cld
or
in
push
xchg
adc
shlb
or
lods
lahf
jmp
sbb
or
addr16
sbbb
test
sbb
xchg
mov
fwait
gs
add
dec
push
insl
mov
adc
rcrb
fadd
cmpsl
jae
and
scas
sbb
out
cld
into
pop
sub
add
imul
mov
shrb
xchg
mov
xchg
pop
mov
inc
test
dec
mov
les
mov
loopne
aaa
ficomps
xchg
dec
jp
mov
pop
push
jnp
mov
dec
pop
pop
or
jecxz
jne
leave
insl
mov
add
and
lret
or
faddl
scas
ljmp
dec
or
sbb
sbb
out
and
add
inc
or
cmp
fldcw
rorb
sub
ja
test
sbb
bound
int
movsb
jbe
mov
cwtl
jl
push
fwait
and
mov
inc
or
insl
call
pop
hlt
jb
mov
inc
xor
dec
inc
sub
push
cmc
shr
test
xchg
pushf
or
adc
mov
lcall
sub
mov
pusha
inc
jp
pop
out
arpl
cmc
xor
shl
and
sub
sub
push
xchg
jecxz
aas
cmpsl
lcall
jp
sbb
in
fists
and
cwtl
xor
lret
daa
mov
jg
mov
scas
jge
call
mov
sbb
add
fstl
iret
mov
push
sahf
cmp
add
out
or
and
inc
mov
xchg
or
mov
lds
add
xchg
pop
mov
insl
cld
lret
xchg
mov
mov
enter
xor
lds
fistpl
jb
jle
cwtl
inc
pop
addr16
outsb
and
push
aas
fcompl
adc
and
mov
mov
shlb
inc
pop
sub
popf
xchg
pop
cmp
mov
jbe
mov
push
ret
fsubrl
sbb
adcb
dec
pop
push
movsb
fildl
jo
pop
adcl
dec
popl
scas
dec
cmpsb
xor
add
sub
clc
add
sti
xlat
aam
mov
rorb
scas
cmp
add
arpl
or
xor
dec
dec
xchg
ficomps
add
sbb
jb
in
inc
mov
push
sar
dec
fwait
divb
test
dec
ljmp
xor
out
mov
stos
jo
adc
mov
lret
dec
jl
and
ret
pop
mov
js
cmc
jmp
mov
jns,pn
pop
push
mov
and
cmp
sbbl
mov
sbb
push
mov
sub
mov
mov
cs
or
xchg
cmp
stos
es
mov
and
lea
outsb
in
adc
aam
test
in
imul
test
cmpsl
cmp
adc
cmovl
mov
xchg
push
flds
cli
js
test
je
adc
push
arpl
and
add
jbe
xchg
push
in
push
jne
xor
xor
fimull
push
movsb
int
out
fbstp
jp
in
mov
push
mov
pop
push
xor
pop
leave
and
stos
cwtl
dec
aaa
push
out
mov
xor
sub
fidivl
addr16
sub
sub
lock
push
pushf
and
pop
fwait
push
or
jge
lret
mov
test
sub
lret
mov
fnstsw
popf
popf
mov
sbb
aas
je
inc
stos
xchg
mov
mov
mov
inc
xor
lds
and
fs
outsb
mov
std
inc
dec
dec
add
cmpsb
jle
pop
or
add
in
imul
out
lods
subb
sub
lock
pop
jnp
je
ds
int
loope
hlt
fwait
icebp
or
or
or
sub
cld
add
xor
test
shl
cmp
fcmove
or
adc
in
xlat
pushf
jmp
sbb
adc
xor
pop
xchg
repnz
push
leave
testb
push
xor
jbe
jbe
mov
push
jp
int
jnp
dec
sti
or
add
imulb
dec
cld
pop
jmp
jmp
in
scas
stos
lods
sbb
cmpb
sbb
rolb
outsb
adc
jbe
cmp
xor
push
clc
es
and
pop
inc
outsl
incb
fiadds
sub
dec
fs
imul
dec
fcmovu
xlat
and
cmpsl
jne
jge
and
dec
mov
loope
lods
mov
mov
in
loop
sbbl
sbb
add
cmp
dec
push
xchg
jbe
pop
call
push
mov
mov
shlb
xchg
sub
outsl
test
adc
icebp
int3
sub
push
in
shl
jnp
xor
imul
mov
push
movb
and
out
mov
xchg
outsb
jecxz
sahf
and
push
xor
sbb
mov
jmp
out
int
dec
or
shlb
fildll
push
jns
sub
push
stos
in
cmpsb
sbb
xor
xchg
sub
push
cmp
ja
push
dec
inc
fstpt
mov
fisttpl
gs
sub
arpl
loop
and
repz
scas
push
cmp
dec
xor
xchg
or
popl
inc
push
lahf
mov
sbb
jg
sub
cmp
je
scas
jne
mov
push
add
arpl
sbb
adc
mov
pop
iret
fdivrs
sub
test
lret
clc
sbb
xor
sahf
scas
mov
aaa
dec
inc
fldl2e
sub
fistps
jp
mov
fsubrs
xchg
inc
mov
cmp
iret
dec
inc
xchg
adc
and
mov
js
push
nop
pusha
je
insl
insl
add
out
xor
arpl
xchg
lcall
mov
sti
fisttpl
and
fs
iret
sbb
cmp
daa
aam
inc
jo
mov
shlb
stos
lea
sbb
xorl
rcll
and
dec
cmp
in
mov
test
cld
or
add
insb
pop
pop
mov
into
pop
xchg
lods
daa
mov
push
testb
fwait
mov
loope
fdivr
dec
jg
fsts
int
adc
mov
xor
sbb
cmp
sbb
std
into
xchg
gs
out
outsb
xlat
push
or
xor
xchg
lcall
add
jp
cmp
pop
rcr
push
lds
pop
mov
inc
jl
cmc
cmp
xchg
jo
enter
mov
bound
in
or
pop
jg
sub
pop
test
enter
ret
mov
lods
enter
push
xor
jbe
pusha
outsb
xor
push
dec
addb
stc
dec
and
insb
int
mov
addl
cmp
xor
out
or
push
jge
jae
push
jmp
lds
pushf
lcall
or
mov
push
sbb
adc
dec
test
sbb
cmp
aad
ljmp
scas
sub
mov
dec
popf
xor
ss
aad
pop
sbb
test
cmpsb
push
shll
cmp
xor
mov
xor
js
mov
test
pop
xor
ret
mov
or
jbe
push
mov
cmpsb
add
aaa
cli
adc
jae
sbb
adc
and
scas
inc
test
pushf
mov
sbb
cmp
cwtl
sbbl
inc
ss
jno
test
xor
sbb
inc
insb
dec
mov
adc
inc
sub
loopne
ljmp
push
push
sarl
outsb
adc
sub
jnp
stos
aaa
and
mov
clc
lds
in
out
fbld
lea
lret
stc
and
shrl
ljmp
sbb
cmpl
mov
mov
leave
insb
xchg
fcomip
popf
mov
jae
cmp
mov
adc
and
popa
cmp
xchg
adcb
decl
or
popa
fbstp
dec
and
pop
dec
fyl2x
out
xorl
push
sbb
jbe
sbb
pop
pop
jg
add
stc
mov
inc
mov
inc
and
bound
lahf
push
lods
pop
cmp
loope
dec
xchg
pop
movsb
or
and
mov
push
lret
mov
adc
enter
mov
testb
insw
pop
jns
jmp
cltd
xchg
adc
mov
dec
ja
clc
adc
push
adc
popf
jp
pop
and
fwait
xchg
repz
add
adc
cmp
jg
mov
xchg
lock
sub
mov
mov
stos
mov
jmp
pushw
push
bound
adc
or
in
stos
stos
pop
cmp
dec
ss
out
neg
out
xlat
in
push
js
ja
xchg
push
push
add
xchg
enter
bnd
jmp
dec
int
in
lahf
push
rol
orb
test
je
out
push
or
xorl
dec
arpl
push
test
xor
popl
jmp
dec
inc
cli
cmp
mov
cli
leave
addr16
mov
jb
popf
cwtl
sub
dec
lcall
mov
enter
in
rcrl
add
arpl
xchg
fsubrp
out
or
mov
pop
pop
pop
dec
or
lcall
mov
repnz
lock
ficomps
test
out
lcall
andl
mov
mov
mov
lock
push
addl
out
sub
imul
cltd
push
fdivr
ficompl
in
dec
pop
addr16
pusha
leave
jne
fidivrs
ss
adc
or
in
jo
sbb
popf
dec
lahf
leave
jge
ds
pop
mov
outsb
push
xchg
into
in
cmpsb
jne
popa
testl
xchg
mov
jnp
int
call
out
aaa
push
pop
loopne
mov
xchg
push
es
addr16
add
pop
push
jp
adcl
mov
and
hlt
mov
leave
mov
rcll
and
sbb
in
jb
aam
mov
in
add
add
idivl
ret
cmp
push
jecxz
int
mov
mov
adc
inc
mov
pop
jae
jne
cli
repnz
iret
mov
sahf
cmpsb
sbb
xor
je
pusha
insl
push
sbb
jg
mov
test
dec
lret
gs
aas
xchg
sti
fdivl
mov
xor
test
sarb
jmp
cmpsl
inc
enter
aad
std
jge
je
lods
in
dec
insb
shll
stos
imul
xchg
in
testb
push
xchg
int3
popa
int
lds
pusha
xchg
sbb
movsl
mov
mov
mov
cltd
mov
inc
push
xor
leave
test
fisubs
out
push
scas
lock
lret
dec
addb
xchg
inc
dec
out
or
adc
cmpl
js
arpl
pop
adc
push
pop
repz
push
inc
ljmp
cwtl
and
jae
mov
sbb
es
mov
sub
xchg
lea
dec
xor
sub
ljmp
or
mov
mov
jnp
rcl
mov
jmp
sub
mov
inc
push
shll
int
sub
movsb
jecxz
inc
sbb
mov
adc
scas
pop
orb
sbb
out
insb
cmp
and
pop
push
cmp
fwait
adc
imul
pushf
push
xchg
mov
adc
add
xor
lret
addr16
jbe
mov
pop
inc
cmp
scas
jmp
xchg
fstpt
cltd
jge
rcrb
jb
xor
in
fdiv
andb
lcall
mov
out
inc
add
inc
cmpsl
negb
xchg
inc
mov
and
pusha
jl
std
lock
iret
movsb
lds
sub
scas
sti
inc
pusha
push
pop
cli
or
fstpl
call
mov
inc
cmpsb
xchg
xchg
movsb
in
jbe
xchg
shll
cmp
aaa
daa
into
adc
and
loop
sbb
jmp
nop
and
push
cmp
mov
stc
or
pop
test
cmpb
cli
pop
stos
inc
xorb
in
inc
scas
sbb
jnp
sbb
add
cmp
mov
sahf
mov
mov
rcrb
pop
xchg
popa
xchg
adc
jge,pn
gs
pop
cwtl
repz
mov
enter
xor
dec
test
mov
popl
ss
sahf
push
adc
repz
je
fwait
dec
fisubrl
icebp
test
mov
xchg
push
add
cmp
and
dec
xor
es
fs
jo
fcmovu
int3
or
dec
xor
xorl
cli
in
pop
mov
mov
test
mov
cltd
mov
pop
movsl
mov
ja
notl
pop
lcall
cmpl
xchg
sbb
jmp
mov
sub
div
mov
adc
stos
divl
pop
ret
adc
sbb
sub
fildl
lock
jo
js
std
sbb
push
stc
sbb
adc
mov
sub
cmp
add
inc
mov
push
out
imul
fiadds
arpl
push
push
push
add
mov
sbb
popf
sub
adc
les
gs
shll
jns
rorl
notl
aaa
sub
rorb
inc
xor
sbb
jb
push
adc
cli
adc
les
loop
ss
cltd
sahf
out
loopne
push
iret
jecxz
ljmp
mov
lret
fwait
xchg
stc
and
xchg
mov
inc
xchg
adc
insl
adcb
stc
adc
pop
push
clc
or
les
leave
out
mov
flds
lock
gs
push
gs
loop
cmp
push
xlat
sub
out
divb
and
movsb
push
mov
mov
cmp
pop
inc
jl
lods
fbld
sbb
loopne
test
push
inc
mov
dec
decl
mov
pushf
push
sbb
repnz
adc
loope
stc
int3
dec
push
xchg
mov
inc
insl
sbb
fimuls
ror
inc
xor
add
jbe
lods
adc
pop
lds
mov
insl
push
repz
stos
mov
xor
std
lret
fisubrs
jp
incb
subb
fdivrs
mov
arpl
and
push
nop
cmpsl
ja
sub
jne
aad
mov
mov
mov
je
or
mov
inc
int3
inc
sub
push
xchg
jno
xor
aas
mov
inc
push
lcall
jne
insl
mov
movsb
mov
rclb
cmpsl
xchg
mov
or
and
xorb
ljmp
icebp
lods
gs
push
data16
or
cmp
pop
sahf
xor
loopne
test
dec
test
aaa
mov
imul
add
pop
out
aaa
mov
pushf
inc
pop
scas
add
cmp
push
push
arpl
xchg
xchg
push
push
xor
stos
lods
std
jecxz
mov
sbb
push
fistl
shrl
mov
lods
mov
fwait
or
int3
pushf
aaa
jb
addb
pop
jmp
add
dec
mov
jmp
mov
jle
xorl
fsincos
mov
push
jb
test
jbe
std
sbb
repz
stc
ret
out
xchg
sub
xlat
stos
dec
push
adc
inc
cmp
adc
cmp
int3
movsb
lock
jbe
mov
fsubrp
test
shll
pop
mov
jns
or
cld
cmp
cmp
dec
xorl
jno
dec
mov
int
and
psadbw
sbb
sbb
xor
clc
movsl
lods
fidivl
xor
div
cmp
mov
mov
in
cli
push
sbbb
or
pop
lds
jmp
xchg
add
mov
outsl
mov
push
jbe
lahf
xchg
or
insb
push
mov
xchg
or
mov
adc
sti
or
clc
pop
xorl
xchg
pop
mov
or
add
sub
setp
andl
add
sbb
test
add
xchg
cmp
adc
sti
ret
stc
setae
test
jp
imul
cmp
int
pop
and
pusha
dec
sub
pop
rclb
incb
mov
clc
jle
add
pop
or
addr16
push
push
mov
sbb
ret
ret
and
imul
movl
nop
mov
and
hlt
lock
arpl
sub
and
mov
mov
imul
mov
pop
xchg
cmp
rol
adc
gs
cmp
js
sub
cli
pop
pusha
cmp
push
jl
lods
add
sti
stc
mov
mov
add
ss
and
pop
outsb
add
ret
jns
xchg
xor
sub
add
out
lods
mov
inc
fidivrs
hlt
int3
aas
repnz
xadd
out
sbb
insb
in
add
pusha
xchg
push
ljmp
rorb
daa
adc
sahf
dec
dec
cmpsb
lcall
sbb
and
adcb
xor
es
pop
clc
push
cmp
filds
icebp
cmp
inc
inc
divl
cltd
jb
inc
cmpsb
cs
or
aaa
push
scas
aas
test
movsb
in
jecxz
sti
pop
push
jae
lahf
sarw
push
daa
inc
mov
add
xor
cmpsl
pushf
sbb
fmul
mov
test
jl
push
incb
or
inc
jb
fimuls
addr16
mov
adc
lock
lret
push
int3
je
out
cwtl
in
add
dec
sti
xor
add
adc
jecxz
inc
lods
inc
shr
adc
enter
and
rorl
repz
leave
push
ss
cli
inc
shl
add
aam
ljmp
mov
push
push
insl
in
ja
addr16
orl
cs
int
push
leave
popf
cmpsl
add
setg
and
rcrl
lahf
pushf
inc
adc
shrb
inc
outsl
call
mov
xor
inc
and
sub
sub
xor
push
in
xor
loope
or
adc
jno
jb
mov
jo
sbb
cmp
push
xchg
lods
daa
movsl
imul
and
dec
add
nop
in
cmp
ficoms
push
mov
mov
call
adcl
mov
sahf
adc
out
xor
scas
mov
pusha
push
icebp
pushf
out
mov
leave
lods
sub
aaa
addr16
mov
xor
add
adc
je
xchg
inc
sub
sbb
cmp
arpl
or
or
lret
out
jmp
sarl
pop
out
movsb
sbb
xor
icebp
xchg
push
cmp
sbb
js
pushf
add
enter
rcrl
inc
addr16
sahf
xor
mov
cli
lret
in
xlat
lahf
mov
outsb
enter
sub
sub
and
sub
and
loope
shr
pop
js
nop
jo
fiaddl
pushf
xlat
rolb
orl
inc
dec
rorb
push
movsb
and
jecxz
ror
cmp
scas
push
adc
je
clc
fldenv
daa
jae
aam
sbb
push
daa
gs
pusha
adc
fadds
add
xor
dec
test
or
add
jo
ja
add
bound
mov
mov
sbb
jge
or
in
mov
sub
pop
lcall
xlat
loope
xor
fists
fstl
mov
incb
add
cmp
cli
leave
daa
lret
mov
loop
inc
dec
cmp
sbb
push
lock
mov
inc
adc
sti
pop
mov
push
mov
insb
lcall
mov
xor
sbb
adc
negl
or
pop
popf
or
mov
jge
sub
pop
cmp
sub
in
xchg
inc
in
cmp
popf
ret
mov
icebp
jl
push
sahf
and
pop
lock
mov
mov
out
int
sub
mov
orb
pop
lret
lret
jecxz
iret
idivl
sub
popa
out
push
add
sub
xchg
mov
sbb
and
xchg
lcall
jl
mov
xchg
lea
pop
roll
paddw
or
fstl
sbb
inc
es
inc
pop
arpl
jns
imul
xchg
dec
insl
push
leave
push
adc
jae
fs
jbe
mov
stos
jg
lds
or
xchg
pushf
mulb
push
pop
and
hlt
stc
pop
roll
fidivs
dec
adc
mov
adc
jno
xor
sub
jecxz
xor
jbe
cld
lahf
cmp
repz
mov
xor
std
aas
pop
sti
pop
fstps
aam
sbb
pusha
pop
and
imul
test
push
data16
je
test
out
mov
out
mov
lea
daa
call
test
or
xchg
xchg
inc
movsb
out
xchg
cmp
mov
cmp
nop
cmp
daa
pop
xor
jmp
out
mov
xchg
sub
push
jle
mov
lods
jns
test
negl
xor
int
mov
lods
aam
fwait
daa
ds
adc
ljmp
sub
test
int
xchg
sbb
cmp
inc
and
in
rolb
fcom
sahf
fwait
cmp
mov
dec
fwait
jns
std
mull
adc
mov
push
jae
mov
push
fnsave
scas
je
mov
and
sbb
xor
jne
pop
cli
lock
mov
inc
jnp
popf
arpl
outsb
lret
stos
push
mov
imul
out
daa
cmp
mov
mov
shl
push
repnz
sub
inc
inc
cltd
xchg
pushw
ljmp
dec
lea
test
jp
outsb
and
pop
lcall
inc
je
lret
int
mov
jae
cld
in
lods
divl
mov
pop
cli
loop,pn
jl
and
jecxz
inc
cmp
pop
or
dec
stc
test
sahf
push
cmp
ss
mov
in
dec
jle
push
adc
or
stos
xchg
sarl
fdiv
or
xchg
stos
lea
subb
sbb
es
cmp
roll
lret
fcoml
add
jnp
xor
cs
push
sbb
xor
adc
xchg
testb
xor
cmp
mov
shlb
out
push
mov
div
sub
int3
cs
fldenv
shlb
pop
movzwl
pop
pushw
in
inc
sub
enter
lds
mov
pop
or
into
xor
lret
je
mov
jmp
push
loopne
or
push
inc
addr16
mov
push
xchg
add
xchg
and
and
inc
or
bound
mov
mov
sub
fimull
cmpsl
std
xor
jecxz
ret
pushf
enter
inc
cmpsl
sbb
xchg
adc
out
dec
cltd
jne
jmp
imul
lods
push
call
popa
cs
scas
leave
adc
inc
and
xchg
ds
sti
or
insb
pop
push
adc
test
push
dec
outsb
dec
jmp
adc
les
sbb
stos
movsb
mov
adc
aad
scas
addr16
pop
sbb
cld
mov
mov
and
shr
pop
mov
or
jg
xor
xchg
add
push
cmpsl
jp
andb
aam
and
insb
icebp
push
cmc
or
in
push
cld
pop
dec
mov
sub
mov
xor
bound
adc
lret
cmp
cmpsb
test
ds
jecxz
add
call
pop
mov
test
cmc
in
pop
repnz
dec
add
fcmovbe
movsl
or
adc
cmp
mov
push
push
mov
mov
push
jmp
push
push
pusha
adc
push
pop
aam
push
xchg
aam
out
mov
mov
and
sub
add
loope
test
mov
mov
stc
ja
pop
push
loope
push
or
mov
lret
loope
inc
sahf
lods
jne
leave
lods
cmp
mov
sub
xchg
int3
ret
ja
jge
adc
enter
sub
fwait
inc
add
xchg
xor
and
sub
shlb
xchg
fistl
sub
subl
rcr
fidivs
mov
psubw
inc
and
lock
jl
jmp
dec
and
inc
cmp
call
movsl
sub
sub
mov
jne
int
lret
sub
sti
sub
stos
cmp
jne
or
and
insb
add
push
mov
dec
imul
inc
jle
in
xchg
or
iret
add
push
push
sub
cwtl
add
sub
inc
and
push
pop
lock
out
lea
out
jb
push
sub
adc
into
xorl
inc
xor
scas
loopne
lds
mov
jae
mov
or
sub
add
inc
inc
sub
mov
loopne
ss
repz
in
pop
arpl
jl
and
shlb
push
lret
mov
lcall
push
push
clc
lcall
subb
jmp
jns
pop
jmp
frstor
in
push
pusha
push
repz
popa
roll
mov
cmp
inc
cmp
lcall
mov
xor
fcompl
push
cmpsl
imul
pushf
xor
js
jmp
sbb
cmp
jae
adc
cmp
sub
ds
pushf
mov
jae
test
pop
int3
repz
pop
mov
test
push
sub
scas
inc
lods
sbb
fimuls
mov
mov
loop
aad
sub
sub
mov
dec
aam
ja
ret
pushf
loop
push
lcall
enter
sub
lea
mov
sub
xlat
add
and
pusha
xchg
dec
or
xlat
push
dec
mov
pop
add
sbb
fdivs
fisttps
insb
add
add
rcll
cmp
in
popa
test
mov
or
push
pop
stos
fcomi
clc
mov
xchg
aam
arpl
pop
push
fsts
pop
push
rcl
mov
jno
jnp
iret
cmp
cs
push
xchg
push
fstpl
out
add
mov
push
inc
cmpsl
enter
jp
dec
test
ss
repz
push
ficompl
mov
push
bound
and
inc
aam
push
inc
pop
gs
and
rorl
xor
mov
aas
and
push
inc
add
sub
fstpt
cli
mov
lret
stos
mov
add
lea
clc
je
test
inc
sub
mov
pop
hlt
mov
in
or
lds
inc
test
out
mov
add
inc
mov
shrl
cli
cmpsl
sbb
adc
test
lcall
ficomps
dec
mov
out
enter
lea
jmp
sbb
pop
sub
sub
pop
inc
cmp
push
dec
mov
mov
mov
xor
jmp
xor
cld
inc
std
dec
outsb
movsb
or
pusha
test
mov
out
inc
mov
cwtl
fisubrs
repz
insl
mov
mov
shl
mov
push
in
sahf
jge
dec
ret
pop
and
pop
cs
sti
lock
xor
lods
adc
or
or
or
in
inc
stos
push
test
test
ret
repnz
fmuls
pushf
lods
nop
sub
fcmovnu
cwtl
mov
sub
out
sub
mov
sbb
mov
xor
shrb
hlt
pop
fistpll
and
imul
mov
repz
push
add
push
pop
hlt
repz
pop
js
jo
mov
into
dec
loop
outsb
fistpl
mov
subl
jmp
mov
es
fucom
out
movsl
mov
xchg
jg
inc
pop
jmp
imul
pop
jg
pop
cmp
add
es
or
mov
and
add
jg
fsubs
dec
jo
hlt
imul
inc
inc
pop
mov
adc
and
shlb
sub
mov
inc
repnz
je
push
lock
lret
pushf
cmc
daa
sub
adc
aad
push
inc
mov
jmp
loope
pusha
leave
xchg
push
push
mov
stc
faddl
add
cmp
adc
adc
sarl
pop
imul
lcall
sbb
adc
fs
aas
mov
push
stos
sarl
cli
push
mov
and
add
outsb
fsubrl
push
mov
jae
aad
lahf
ss
dec
test
js
arpl
push
push
outsl
xchg
add
xor
cmpsl
inc
rcl
sub
out
ret
adc
xchg
add
mov
adc
push
sub
rcl
xchg
cld
es
jl
dec
clc
leave
int
js
add
and
jmp
push
iret
xor
mov
xchg
mov
sub
mov
xchg
add
cltd
aaa
loop
dec
arpl
fcmovne
lcall
pop
pop
fmul
cmp
mov
xor
dec
lea
push
lds
cmp
pop
dec
lcall
xor
xchg
inc
adc
in
les
inc
fwait
fwait
add
ja
add
or
popf
mov
inc
andb
test
lods
push
adc
or
test
mov
cmp
cld
add
fcoms
lret
mov
and
lds
sbb
push
arpl
jmp
mov
add
adc
pop
push
adc
mov
es
fstl
and
or
cltd
adc
pop
pop
adc
mov
xor
cmp
gs
insb
sbb
cwtl
mov
jmp
push
jae
mov
mov
std
pop
std
fcmovnbe
sar
jo
bound
cltd
clc
xchg
ljmp
pop
cltd
clc
je
sbb
xchg
loopne
push
sub
mov
sbb
mov
xchg
xchg
add
and
xor
inc
sub
xorb
xchg
idivb
lret
outsl
subl
aaa
or
lcall
adc
push
aam
mov
pop
push
out
lock
bound
push
test
jmp
scas
jmp
sbb
jp
out
jecxz
mov
sbbl
in
jg
negl
mov
lcall
sub
mov
mov
sbb
jbe
fistps
inc
cmp
cltd
addr16
xchg
and
xchg
fs
inc
xchg
ret
lock
lahf
fbstp
and
adc
push
scas
jmp
into
jne
sub
and
sbb
das
mov
scas
cld
adc
push
add
mov
roll
xchg
sbb
pop
and
ficompl
ss
jecxz
cwtl
int3
sbb
or
push
es
and
dec
xchg
popa
mov
jns
push
repnz
pop
and
add
lock
xchg
cmc
push
jle
pop
stos
jmp
iret
jbe
mov
mov
cmp
fwait
pop
pop
aam
sub
push
stos
xchg
lahf
in
sbb
xchg
cwtl
icebp
shrl
mov
lock
adc
pop
inc
xchg
clc
insl
dec
and
or
lret
outsb
sub
into
push
cmp
push
fucomp
cmp
cld
dec
pushf
mov
jne
clc
dec
mov
arpl
js
push
mov
loope
or
call
push
push
cmp
loop
jns
pop
adc
xor
inc
je
cmc
addl
sbbb
jecxz
pop
insl
pushf
cli
ffree
fwait
jg
icebp
mov
addr16
mov
or
push
stos
lods
mov
shll
and
test
xchg
adc
lods
mov
ficoms
adc
mov
out
int3
jae
adc
in
dec
cmpsb
sti
dec
les
pop
add
loop
fwait
adc
cmpsl
add
mov
mov
ret
add
xchg
sahf
xor
xor
shl
jle
xchg
shrb
or
les
testb
adc
fcoml
arpl
or
gs
xchg
sub
call
push
loope
arpl
and
in
inc
add
int
sbb
insl
das
xchg
stc
fldl
inc
pop
rclb
cltd
sbb
movsl
cmc
out
test
inc
add
push
mov
mov
xor
inc
pmuludq
std
int3
cli
pushf
popa
push
jo
sarb
cmpsl
out
leave
movsb
push
lods
jbe
xor
sahf
adc
fimuls
pop
aad
test
sub
jbe
xchg
in
mulps
pop
lea
push
loop
mov
push
or
arpl
ss
les
push
xchg
mov
mov
mov
hlt
jl
call
dec
xor
push
cmp
mov
fcoms
cli
push
and
pop
push
jbe
jb
and
push
mov
mov
jmp
jnp
push
and
mov
mov
test
outsb
cmc
push
cltd
xchg
jmp
push
clc
pop
lahf
mov
push
pop
dec
add
dec
imul
ss
pop
adc
ffree
stos
mov
adcl
test
adc
in
fildll
lcall
push
repnz
daa
scas
stos
xlat
mov
mov
mov
sub
adc
ds
xchg
pop
shll
aad
shl
vmovntps
int3
gs
outsl
pop
cld
in
jp
mov
out
mov
inc
pop
jne
out
out
jp
xchg
xchg
xchg
jle
loope
div
inc
push
scas
and
idivl
xchg
adc
or
mov
or
cwtl
repz
or
shrl
in
loope
mov
sbb
jnp
rcll
out
cmp
shll
adc
xchg
mov
sbb
sbb
jp
sub
imul
push
mov
sarb
jno
xor
stos
and
cltd
pusha
int
or
imul
push
pop
lds
add
les
inc
mov
insl
aad
repnz
repz
add
cmp
inc
das
and
push
dec
sub
pop
push
mov
sub
inc
out
ret
addr16
cwtl
gs
inc
lahf
je
push
sub
or
inc
aad
cld
adc
mov
and
popa
and
repz
fildl
pop
mov
push
out
jae
sub
addr16
jo
mov
mov
mov
jge
scas
sub
test
mov
xor
lods
stc
push
dec
mov
push
pusha
jns
sbb
test
inc
addl
xchg
insl
adc
pop
xor
lea
gs
sbb
adc
dec
aaa
push
push
fadd
dec
movsl
aas
push
mov
jb
stos
jnp
push
or
outsb
mov
pop
xor
dec
fs
sbb
dec
loop
fsub
enter
xlat
mov
into
jno
movsb
or
xchg
mov
add
loope
and
push
arpl
fnstcw
imul
repnz
test
arpl
je
jmp
into
inc
scas
int3
sub
sbb
pop
mov
adc
inc
inc
fisubrs
adc
mov
das
clc
cwtl
icebp
das
push
icebp
rcrb
movsb
dec
in
cwtl
in
dec
push
xchg
fs
dec
cmp
shll
nop
add
xor
es
les
pop
mov
push
dec
adc
pop
adc
cwtl
pop
je
movsl
imul
lret
test
pop
or
cmp
xchg
or
cli
xchg
jo
push
lahf
pop
mov
sbb
xchg
jb
das
mov
xchg
test
jb
cwtl
pop
es
or
loop
icebp
xor
xchg
stos
notb
mov
add
xchg
xor
aam
cmpsb
xor
add
inc
into
jle
and
out
int3
les
push
movsl
cld
sub
pop
sbb
rcrb
ret
leave
mov
mov
fwait
lret
push
pop
mov
fucomip
dec
mov
fsubs
add
cs
sub
jns
cs
das
ficoml
mov
or
sbb
rcr
mov
push
lods
hlt
out
pop
or
jno
iret
mov
mov
xchg
lahf
dec
popf
fimull
mov
add
inc
mov
xor
ds
fnstcw
out
cmp
dec
int
or
lcall
and
cmp
mov
pop
jg
jo
cmp
or
imul
in
mov
inc
and
popl
xchg
dec
pop
and
shll
popf
outsl
ss
dec
rolb
ja
leave
add
fdecstp
pop
pop
loope
int
test
and
and
adc
fs
xchg
neg
loopne
mov
icebp
scas
shl
adc
push
push
subl
mov
cmp
adc
xchg
mov
pop
push
out
mov
lods
mov
xchg
cltd
scas
adc
fisubrl
outsl
mov
cld
fnstenv
push
loopne
fldcw
inc
push
dec
mov
xor
cs
adc
jg
adc
es
int3
mov
repz
xchg
push
loope
jo
imul
idivb
push
mov
scas
insl
popf
clc
mov
adc
cmp
andl
sub
and
sbb
repnz
pop
gs
or
jmp
dec
popl
sahf
xor
and
dec
fiadds
sub
loope
sub
adc
xchg
fiadds
out
dec
aaa
insl
ds
push
cmp
fbld
xlat
dec
repnz
pop
pushf
fwait
dec
shl
xabort
jae
stos
and
pop
icebp
idiv
les
xlat
bound
jns
arpl
jmp
daa
mov
dec
mov
xchg
loope
pop
lret
push
subl
fucomp
mov
fs
jno
xor
ret
push
xchg
lret
xor
rorb
fnstenv
or
and
mov
data16
jle
shl
add
jg
loope
or
jne
add
jno
data16
popa
xchg
pop
and
rcl
out
out
xchg
call
mov
cmp
jg
cmp
insl
ffreep
jne
pop
repnz
pop
dec
jg
imul
jg
cltd
hlt
pop
pushf
iret
mov
add
jge
lock
mov
lea
je
shrb
jg
insb
sub
mov
and
data16
mov
loope
data16
push
out
push
push
fmull
test
call
mov
gs
push
es
je
or
pop
sub
cmpb
inc
fnstenv
fsubrs
popf
lea
das
andb
rclb
ret
and
sbb
mov
cld
rclb
pop
lret
mov
ss
jae
xor
cmp
mov
jne
push
jno
adc
stc
out
add
add
ds
and
data16
cmp
jge
repz
sub
push
rcrb
push
jo
stc
outsb
das
jae
in
mov
jecxz
push
imul
outsl
mov
pop
cmp
add
xor
xchg
popf
notb
jae
ss
xchg
jno
xchg
aad
mov
or
push
pop
es
xchg
adc
fnsave
pop
icebp
inc
jg
mov
mov
aas
movsb
out
cmp
push
cs
negl
ss
imul
push
mov
jg
test
adc
sub
fisubl
cmc
popf
jnp
xchg
dec
sbb
andl
gs
sbb
push
mov
inc
cmp
into
out
pop
sar
and
add
adc
scas
sbb
jno
mov
sub
in
inc
mov
mov
adc
ror
out
lods
xchg
int
jae
and
notb
xchg
dec
sub
inc
js
xchg
int3
pop
jno
call
scas
dec
clc
std
fsubrp
push
inc
jne
into
sbb
add
pop
cmpsl
xor
push
push
pop
ret
push
shrl
jne
pop
jmp
push
pusha
loopne
or
imul
push
sbb
sbb
iret
loope
sub
test
out
movsb
jno
imul
adc
inc
aam
inc
fsubrl
sub
data16
or
dec
xchg
aaa
lea
fucomip
fs
cmp
cmpsl
lock
fwait
cwtl
lea
xchg
lcall
cmp
mov
mov
jbe
pop
dec
xchg
cmc
mov
add
mov
mov
movsb
ret
popf
jg
sahf
aaa
push
cmp
out
push
xchg
addr16
mov
popa
setle
and
iret
ficomps
jne
lods
fiadds
mov
xchg
iret
dec
lods
push
push
in
jne
sub
cmp
and
jnp
jl
jg
lods
cmpsl
mov
aad
lahf
popa
aad
mov
jp
pusha
test
pop
shlb
fnsave
mov
cli
jo
je
into
jmp
xor
mov
adc
push
and
sub
mov
xchg
mov
pop
daa
leave
pop
xlat
insl
or
lret
loope
ficomps
sbb
or
je
fcoml
cmp
inc
nop
add
pop
cli
clc
testl
push
sbb
dec
mov
jmp
and
idivb
pop
aam
mov
sub
push
mov
mov
fsubs
jl
ret
test
out
loop
pop
test
sub
mov
mov
and
jge
cmp
push
scas
daa
cmp
mov
inc
xor
imul
inc
cmpsb
int3
add
xchg
mov
mov
out
iret
sub
in
xchg
popf
sub
jge
in
dec
jae
mov
xchg
subb
or
ret
cmp
enter
adc
adc
into
cmc
jbe
adc
push
out
shlb
enter
int
lds
mov
xor
ss
mul
inc
push
dec
les
in
ror
in
pop
dec
jmp
inc
cltd
push
sub
pop
mov
aam
movsb
xchg
mov
clc
test
xor
loopne
daa
ret
xchg
push
pop
pop
in
rorb
or
mov
stc
cld
and
push
outsb
shrb
inc
out
add
dec
cmp
pop
pop
push
dec
loopne
sar
adc
jmp
jno
push
stos
xchg
cmp
jne
sub
fsub
inc
lds
aad
add
push
push
jb
stc
shlb
out
push
sub
movsl
push
mov
mov
fdiv
push
sbb
inc
repnz
outsb
jno
test
out
iret
pop
aad
mov
xchg
ds
push
std
rcl
sbb
and
dec
lret
add
xor
sarl
cmp
cmc
idivb
jne
aaa
push
mov
mov
fildl
insb
inc
dec
xor
out
xor
cmp
xchg
mov
pop
pop
daa
arpl
test
mov
rorl
push
arpl
gs
ret
ds
enter
rcll
jg
mov
repnz
lcall
fwait
xchg
add
adcb
int3
mov
out
xrelease
bnd
jae
add
pop
or
mov
pusha
mov
jb
ret
xchg
jg
fucomp
jmp
jge
into
jg
iret
push
mov
dec
movb
pop
or
jne
push
or
xorb
sbb
push
mov
sub
xor
insb
or
cmpsb
push
fstpl
push
shrl
xor
call
and
aad
xor
or
dec
push
pop
pop
push
xchg
jo
repnz
stc
push
scas
xchg
mov
mov
or
icebp
sub
push
jg
aam
test
push
imul
std
repz
push
cwtl
mov
adcb
shlb
pop
sub
stos
jmp
sti
movsl
xlat
mov
popa
test
pop
dec
jno
lock
lret
adc
push
fwait
and
cmp
mov
mov
or
adc
pop
insb
jecxz
mov
fildl
lret
xchg
enter
push
inc
mov
mov
scas
and
mov
popf
div
lret
scas
dec
fcoml
xlat
test
sbb
push
add
push
pop
add
lock
jmp
loopne
or
fistps
fwait
popf
ds
scas
and
and
add
push
xlat
mov
repz
push
dec
scas
addr16
xor
and
lcall
in
into
add
rolb
filds
lock
jns
jns
inc
mov
mov
leave
je
movb
sub
xchg
nop
cvtpi2ps
movsb
leave
in
xchg
adc
dec
lock
mov
mov
add
dec
sbb
mov
adc
xorb
push
push
hlt
or
sti
push
int3
mov
loop
rclb
fdivl
mov
dec
cmp
leave
lret
int3
in
orb
fs
daa
sbb
dec
adc
arpl
jae
call
inc
push
in
xchg
fldcw
push
inc
inc
int
imul
cmpl
push
adc
xchg
push
icebp
out
mov
or
test
sbb
pop
leave
xor
lahf
repnz
add
sbb
jo
mov
fimuls
mov
jno
mov
insl
adc
sti
popa
pusha
mov
adc
cmp
push
pop
push
sub
mov
rcl
in
cld
inc
cmp
xchg
lret
inc
add
or
cli
inc
mov
ss
shlb
test
lea
std
pop
mov
mov
mov
cmp
in
jle
pop
or
lods
jnp
mov
inc
jg
out
mov
ds
xor
xor
jg
xchg
ds
stos
test
or
dec
push
mov
inc
add
adc
mov
sahf
and
jne
stos
mov
int
mov
add
push
pop
push
ja
and
arpl
punpcklbw
lcall
lea
addl
push
cld
xor
int
or
mov
sbb
sub
jl
or
icebp
push
lods
sbb
mov
jmp
loopne
fwait
jp
jmp
or
push
nop
sub
cmpsl
adc
mov
or
scas
mov
aam
and
mov
mov
dec
notb
xchg
sti
mov
push
push
dec
jb
mov
pop
adcb
mov
stos
loopne
mov
repz
mov
sub
movb
inc
xchg
hlt
mov
pop
push
pop
dec
or
enter
cmp
js
subb
dec
es
mov
and
addr16
xchg
sbb
aaa
xor
mov
pop
pop
pop
cwtl
adc
add
pop
scas
mov
lahf
and
fs
orl
dec
xor
mov
sub
pop
mov
pop
mov
or
int
sbb
sub
fdivrs
outsb
aam
addr16
rclb
push
push
iret
adc
mov
lahf
into
cmp
lock
enter
mov
mov
not
inc
es
rorb
mov
push
push
sub
out
imul
test
jae
insl
lods
insb
pop
pusha
cmpsl
mov
flds
stos
insl
mov
std
mov
out
and
into
or
jmp
out
sub
mov
lret
and
push
cmp
add
lea
dec
cmp
in
je
sarl
dec
stc
ret
mov
adc
pop
pusha
dec
adc
and
sub
xchg
fiaddl
lret
pminub
repz
or
jg
faddl
jns
cmp
dec
cld
dec
jecxz
or
or
daa
add
test
daa
mov
and
xchg
mov
pop
lods
sbb
mov
fisubl
stc
jne
lods
mov
inc
test
jno
xchg
mov
mov
fmul
lods
ds
cmc
das
fcoms
pop
outsl
mov
jecxz
jge
stos
test
into
xchg
es
lret
sbb
lods
mov
pop
mov
repz
icebp
dec
in
rcr
fs
push
sub
testl
shll
jg
fimull
dec
rorl
test
xor
push
imul
fxch
popa
cwtl
lret
sbb
add
mov
test
mov
mov
pop
gs
das
inc
out
movsl
and
add
xchg
or
sbb
je
dec
out
jb
sbb
mov
cmp
mov
daa
inc
out
bound
push
es
xorb
sahf
enter
std
pushf
or
pop
shll
pop
repnz
loop
lcall
adc
inc
sbb
jg
xor
push
dec
ror
dec
mov
pop
push
imul
cmp
xchg
xlat
or
popf
iret
jne
sar
xor
enter
pop
int
mov
inc
xor
int3
xor
clc
outsb
sub
xchg
das
iret
rclb
bound
addl
in
pop
jcxz
mov
dec
int3
sahf
fistl
mov
and
mov
fs
icebp
inc
aaa
sarl
inc
arpl
inc
mov
inc
xchg
xor
fstpl
js
mov
push
jl
dec
sub
orl
int3
sbb
jmp
jl
dec
int3
jns
push
decl
xchg
or
push
mov
jns
lahf
bound
testl
sbb
fadds
fwait
cwtl
movsb
mov
popa
ret
aad
jp
mov
int
loop
or
je
xor
mov
ss
sarb
lahf
js
fcompl
movsl
xor
pop
mov
mov
testb
ss
cmpsl
mov
jne
data16
cs
jns
xchg
popf
test
mov
push
sbb
lock
fscale
cmp
out
mov
and
repz
cld
std
dec
test
push
cmpsl
xchg
lods
push
subl
gs
mov
xor
push
mov
in
and
pop
pop
orl
fs
jb
fucomip
ret
xchg
cwtd
lret
mov
and
mov
ss
mov
and
mov
dec
sub
and
cmp
jg
sbb
repnz
or
mov
inc
sub
jmp
or
xor
xor
mov
add
sub
lea
lret
cmp
fisttpll
push
jnp
adc
mov
inc
cld
push
daa
lret
insb
xchg
cli
in
sbb
loopne
ja
test
fisttpll
hlt
clc
nop
add
inc
aam
ja
les
inc
sub
mov
pop
push
fwait
rcrl
dec
push
dec
loope
data16
insb
push
mov
inc
adcl
sbb
inc
or
sti
xor
add
pop
mov
test
jecxz
push
xchg
push
stos
or
fcmovbe
fbld
popw
cmp
test
cmp
sarl
mov
mov
out
in
out
dec
fildl
mov
pop
xchg
sbb
jb
jne
xchg
gs
jnp
mov
mov
ja
mov
sub
ret
cmp
fldenv
and
in
jg
push
je
mov
lcall
je
stc
mov
sbb
cmp
mov
scas
std
in
adc
lods
push
orb
dec
cli
mov
dec
sahf
out
aad
ret
cltd
add
push
inc
lret
mov
int3
cmpb
xchg
aam
or
push
or
sub
mov
mov
lds
pop
xor
andl
js
sub
cwtl
sbb
xor
push
jb
ss
je
lds
push
pop
and
and
dec
sarl
add
push
adc
insb
stos
testb
adc
jbe
das
fsubp
lcall
int
sti
loope
or
out
jecxz
sbb
mov
jmp
nop
jno
push
or
lahf
sub
lds
cltd
adc
cmc
cmp
mov
jmp
sub
popa
sbb
addl
clc
push
mov
or
sbb
inc
mov
iret
inc
mov
test
shrb
jns
add
adc
mov
sarl
ret
pop
dec
shll
xchg
push
mov
test
dec
std
aam
push
arpl
test
xchg
or
jne
push
pop
add
jne
add
arpl
mov
cwtl
mov
pop
xor
mov
mov
leave
rorb
sti
pushf
and
fwait
insb
mov
add
cmp
xchg
push
add
or
jge
xchg
in
sbb
or
push
fistps
in
shlb
jbe
repz
adc
rorb
je
and
add
stos
sub
and
daa
jp
inc
cmpsb
jmp
push
add
dec
jb
fldcw
fcmovu
dec
mov
shr
repnz
inc
bound
pop
jp
sbb
out
xchg
cmpb
lret
jo
mov
int
lods
lret
add
lds
cmp
scas
inc
mov
lods
fsubrs
pop
enter
mov
bound
mov
fbstp
imul
xor
movsl
cwtl
inc
push
test
mov
test
out
inc
mov
sub
out
inc
test
add
add
aam
or
jbe
inc
int3
insb
shrl
sub
cltd
gs
mov
test
cmpl
and
jo
pop
push
pushw
jmp
lea
fs
mov
cmc
xchg
fwait
push
test
sahf
push
inc
mov
iret
lahf
stc
test
jecxz
mov
sbb
xor
test
rcr
sub
leave
sub
mov
xchg
addr16
addr16
mov
mov
dec
mov
jo
xor
push
pop
data16
ljmp
jl
cmpb
or
mov
mov
or
stc
xchg
add
sarl
in
xchg
mov
es
stc
je
addr16
popf
dec
sbb
stos
fisubrl
push
jno
xchg
aam
out
inc
jg
ss
js
xor
xlat
insl
push
stos
ljmp
insl
jbe
jmp
les
ds
insl
ret
addl
or
mov
aam
lcall
jp
incl
ja
stos
mov
dec
fldenv
add
out
adc
jecxz
addr16
lahf
aas
pusha
sub
fcoms
test
add
inc
fstl
insl
mov
movb
psrld
push
jo
rcrl
enter
in
in
nop
jp
inc
pop
jb
mov
add
int3
ljmp
adc
add
sets
inc
xor
adc
inc
cmp
pop
and
das
push
mov
loope
jmp
stos
inc
cmp
mov
icebp
sbb
shrb
jg
in
outsb
pop
out
jnp
call
repnz
pop
les
outsb
mov
fiaddl
jbe
pop
dec
sbb
in
cli
cmpsl
mov
das
sub
repz
pop
int
mov
fnsave
into
mov
sahf
pop
pop
das
jb
cld
cmp
cmp
loope
sbb
leave
pop
lea
enter
or
pusha
das
test
jle
cmpsl
arpl
push
sub
mov
imul
out
jns
inc
cs
mov
jae
xorl
or
adc
leave
cltd
cltd
sbb
ljmp
enter
enter
xchg
in
adc
push
ss
or
stc
mov
divl
sti
or
nop
aaa
pop
ss
mov
shlb
jle
or
insl
jne
pop
es
jg
loopne
insb
std
sub
inc
pop
int3
aad
lret
into
xlat
mov
sub
xor
cld
insb
xor
mov
sub
push
adc
adc
adc
sbb
inc
dec
jecxz
dec
ljmp
or
js
into
lock
mov
cmpsb
andb
repnz
popf
cmp
rorl
inc
inc
adc
adc
push
lds
push
loope
or
outsb
fbstp
int3
pop
and
jg
shl
clc
aaa
or
dec
imul
xor
mov
pop
jnp
or
lods
mov
pop
cmp
xchg
sub
jge
ret
sti
jl
test
xchg
push
test
out
movb
cltd
stos
push
xlat
dec
data16
mov
mov
sub
push
lea
xchg
add
cmc
loopne
jae
ds
xorl
or
stc
jecxz
into
adc
imul
push
and
dec
sub
xor
push
scas
pushf
and
out
subb
and
pop
inc
mov
inc
scas
push
jae
cmc
lret
lahf
xor
fwait
stc
jne
aaa
mov
inc
mov
jb
cwtl
pop
inc
bnd
xor
xchg
mov
dec
mov
scas
test
call
fidivl
daa
push
jb
sub
movsl
ljmp
or
or
mov
jl
cmp
addr16
or
mov
sarb
add
jmp
into
lret
inc
loope
ret
daa
lcall
cmp
fstl
data16
xchg
ljmp
dec
std
int3
mov
mov
xchg
out
mov
lea
ja
fmull
fdivl
into
xor
std
faddl
pop
aaa
xchg
sub
cmp
push
xchg
mov
daa
leave
ret
dec
fucomp
dec
insb
push
jle
pop
shlb
movsb
fsubr
lods
scas
daa
sbb
cmpsb
dec
jle
aas
scas
mov
mov
cli
xchg
jno
shr
mov
jne
sub
dec
and
stc
jnp
push
out
outsl
xchg
mov
das
mov
pop
push
lret
popa
cmpb
xor
pop
adc
popa
xchg
hlt
inc
rcrl
popf
enter
scas
adc
sbb
dec
fmull
clc
rolb
cmp
loope
dec
ja
sub
jge
call
repnz
rorl
clc
rcrl
scas
insb
add
shlb
adc
stc
jg
mov
cmp
js
lds
jb
nop
in
cwtl
push
xor
add
and
rclb
xchg
ss
out
sbb
js
es
ficoms
cmpsl
dec
repz
lea
jge
js
arpl
dec
mov
cld
sub
in
rcl
aad
loope
addr16
lret
stos
push
lahf
pop
in
shlb
std
add
int3
inc
bound
sbb
xchg
push
pushf
mov
pop
inc
das
push
jg
inc
pushf
jp
sbb
pop
sub
mov
aam
push
fdivrl
xor
sub
insl
jp
xchg
repnz
mov
sbb
and
test
jl
jnp
push
mov
test
popf
push
adcl
daa
inc
outsl
adc
xor
test
ss
xor
push
cwtl
negb
push
leave
push
xor
fmul
jno
dec
dec
lcall
inc
push
sub
mov
out
sbb
pop
iret
cmpsl
call
jg
out
add
icebp
loop
sbb
pop
int3
repz
lret
pop
jae
inc
aaa
es
jmp
adc
das
dec
pop
xchg
mov
fiaddl
popa
push
es
cmpsb
xor
jg
jnp
cmpsb
push
insb
fsub
xchg
push
out
in
sbb
out
sahf
xchg
pop
jnp
cli
mov
sarl
xchg
pop
icebp
rcrl
sbb
pop
inc
cli
ret
or
pusha
or
incb
jg
test
add
fimuls
pop
add
push
fwait
mov
repz
fstps
ret
jbe
push
cmp
xor
mov
insb
lds
icebp
stc
fisttps
into
in
roll
inc
push
daa
icebp
sub
jns
mov
out
stos
dec
lret
loop
lcall
js
call
dec
jae
jle
mov
xchg
mov
sti
or
jmp
cmpsl
cld
jo,pn
fsubs
es
mov
pop
pop
out
mov
ljmp
insl
fadd
in
xor
pop
sub
sub
pop
push
cmp
sub
sub
add
jne
shl
mov
out
loope
and
mov
push
sbb
adc
lea
and
out
xchg
push
mov
pop
pop
jl
mov
lods
test
mov
push
adc
cmp
add
in
inc
dec
aam
out
push
pushf
push
cs
push
mov
fiaddl
fsub
pop
shrl
lret
stos
inc
cmp
movb
int3
adc
mov
jne
jne
scas
leave
push
mov
cmp
jmp
dec
adc
ljmp
stc
add
call
or
stos
fmull
dec
mov
jp
clc
fdivr
repz
repz
or
inc
jb
add
xchg
add
sti
test
sub
or
sti
shr
inc
pop
push
adc
sub
cli
decl
adc
sub
and
outsb
sub
jp
insl
mov
mov
dec
loope
pop
push
aas
gs
mov
dec
mov
sbb
inc
or
sbbb
mov
stos
xchg
sbb
icebp
in
inc
iret
shrb
add
xchg
pop
jmp
and
repz
dec
push
mov
stos
adc
add
cli
cmp
sub
ds
mov
mov
cmpsl
stc
mov
cmp
ficoml
mov
inc
frstor
fwait
cwtl
sbb
shrb
and
cmp
sbb
push
adc
std
inc
xchg
and
mov
sbb
mov
push
gs
push
std
jge
inc
jle
mov
rcrb
repz
xchg
sub
adc
mov
adc
fs
ljmp
out
cmp
es
fwait
aad
jmp
add
sbb
xchg
das
outsl
sbb
sbbl
les
and
mov
cmp
pushf
ljmp
rcrl
pop
sub
sbb
icebp
push
cwtl
rorl
mov
fsubrl
cmpl
jb
fs
lcall
dec
rcll
inc
pop
and
aas
jae
shlw
test
dec
cmc
je
fldenv
add
sub
mov
lret
ds
inc
cmp
dec
es
fnsave
xchg
jbe
pop
cmp
jge
dec
into
lds
push
ds
inc
scas
je
rorl
add
lret
shlb
pushf
aam
sub
mov
loopne
jno
ss
in
adc
cmp
outsb
mov
ds
dec
out
lods
mov
aad
jae
xor
test
xor
lock
mov
cwtl
adc
push
mov
cmp
cmp
aam
mov
pop
add
or
jno,pt
arpl
aad
cmpsb
repz
outsb
xlat
lods
jae
xor
jo
enter
cmp
jle
cmp
aas
pop
int3
mov
daa
sahf
pushf
sbb
cmc
and
aad
fistl
mulb
sbb
test
push
mov
cmp
or
sbb
and
out
push
shr
sub
stos
xchg
pop
dec
jnp
sbbb
leave
out
xchg
cmp
jl
pop
shl
jge
push
jnp
add
xor
mov
add
cmp
jecxz
movsl
add
push
push
rcr
adc
popf
out
add
mov
push
adcl
xor
fsubrs
imull
add
shr
mov
xor
xor
popa
mov
sub
das
idivb
enter
fisubrs
das
ret
jae
insl
mov
rol
push
sub
fcmove
cmpsb
xor
jge
loop
test
data16
into
push
stos
call
orb
cmc
stos
mov
aas
pushw
and
pop
jp
stc
cwtl
cli
rcll
shl
and
popa
jbe
rolb
sub
dec
inc
pop
and
sub
test
nop
and
mov
xor
iret
pusha
inc
push
pusha
mov
imul
pop
mov
mov
andb
movsl
int
push
push
sbb
popf
sub
into
sbb
xchg
jle
or
xchg
mov
jnp
frstor
pop
repnz
outsl
mov
push
lods
fdiv
inc
pop
sbb
adc
sbb
out
mov
and
in
lcall
movsb
pop
dec
push
das
dec
xor
mov
imul
jge
and
pushf
pop
cmpsb
jl
or
jae
xchg
lahf
js
jl
sbb
sub
out
jge
mov
faddl
iret
nop
sub
out
xor
push
scas
add
lcall
gs
out
jbe
in
daa
inc
repnz
pop
loope
ja
rcr
loop
out
cmp
fucomi
sti
or
mov
inc
dec
loop
pop
cld
fwait
das
scas
mov
cld
jne
add
shll
int3
aam
fisubrs
cmc
mov
inc
add
fcmovb
cltd
adcl
mov
add
pop
mov
jb
cmp
sub
cwtl
mov
and
xchg
icebp
shlb
inc
pop
cld
add
cmp
in
or
out
mov
loope
cmpsb
aas
mov
pop
aad
into
push
jbe
cmp
or
pop
cmp
add
movsb
xor
adcl
sahf
in
mov
mov
xchg
dec
sbb
scas
adc
in
jl
outsb
ror
lahf
iret
rcr
sbbb
scas
inc
adc
push
jo
inc
pop
out
out
cwtl
and
dec
arpl
ja
fcomp
adc
jmp
pop
and
sahf
fldl
jp
cmpsl
mov
jecxz
xchg
inc
add
sti
sbb
push
loop
lds
adc
fimull
sbb
or
dec
mov
pusha
push
mov
push
in
dec
out
jecxz
or
movsb
add
lods
outsb
fimull
fidivl
cs
out
xchg
cmp
insb
out
sbb
mov
popf
adc
out
test
fistps
cwtl
push
dec
pop
cltd
test
je
xchg
adc
xchg
push
jge
and
jnp
mov
add
jecxz
cmpsl
and
mov
aas
into
outsl
scas
sbb
pop
dec
sbb
rclb
mov
pop
shrl
ret
incb
mov
mov
push
inc
jg
orb
cmp
aad
stc
je
xor
mov
and
fcomps
push
jne
shrb
andl
and
js
lahf
aaa
je
xorb
xchg
sbb
mov
fnstcw
push
in
and
dec
xorb
hlt
in
sti
xchg
ja
dec
cmp
das
stos
stos
sbb
shlb
mov
fdivrs
pusha
adc
push
lods
loop
push
push
and
shrb
data16
xchg
loopne
xchg
arpl
mov
andnps
int3
pop
mov
in
add
dec
xor
jle
xchg
adc
pop
outsb
pushf
shlb
clc
sbb
ret
fstpt
inc
nop
jne
icebp
mov
jecxz
insb
arpl
mov
adc
lea
loope
insl
cmp
int3
xor
cld
push
or
sub
inc
popa
push
mov
clc
mov
mov
gs
adc
xchg
mov
inc
aas
xor
or
pop
or
or
adc
outsl
mov
adc
test
sub
or
inc
imul
cmp
jmp
push
lret
adc
mov
icebp
add
jbe
int3
insb
ret
orl
dec
frstor
scas
jge
sbb
jb
lret
mov
jns
sbb
ds
push
fiadds
ja
dec
mov
std
insl
pop
xchg
push
adc
popa
mov
jae
jp
mov
aas
add
adc
mov
outsb
test
imul
lods
repz
nop
lret
dec
fsubp
inc
sbb
cld
cwtl
or
mov
xchg
sbb
popf
push
gs
add
add
fs
scas
or
or
test
add
cld
sbb
mov
subb
movsl
ret
aas
repz
pop
mov
bound
adc
or
out
gs
and
out
pushf
add
decl
mov
shrl
jnp
xchg
inc
popf
ds
push
in
dec
test
fdivs
lock
mov
pop
dec
es
cli
sahf
dec
enter
cmp
rorb
xchg
xchg
fs
pushf
mov
pop
push
and
dec
sub
andl
hlt
push
cmc
push
pop
sbb
repnz
ror
rclb
xchg
xor
jg
mov
test
dec
out
jle
xchg
iret
rolb
pop
xor
in
imul
and
xor
cmp
pop
or
or
jno
mov
sub
xor
roll
hlt
add
loope
jno
enter
popf
push
sub
sbb
inc
cmpsb
out
mov
mov
test
cmp
xorb
adc
lods
ss
sahf
in
xor
inc
jp
loopne
test
sub
push
lret
cltd
push
aam
xchg
lds
fstpt
fwait
repnz
or
xchg
daa
mov
lods
stos
std
mov
xor
dec
xor
mov
je
in
mov
out
and
test
sbb
push
adc
dec
inc
pop
dec
jmp
fdivp
cmp
cmp
fwait
out
lock
mov
add
add
mov
xchg
mov
arpl
sub
imul
insb
pop
es
ds
aas
lfs
sbb
insl
push
jle
jge
xor
sbb
lea
in
rcl
shl
mov
adc
mov
inc
hlt
sub
lods
into
mov
adc
push
pop
mov
inc
jo
mov
pop
xchg
jae
sbb
sahf
andb
adc
fldenv
fsubrp
testb
aaa
dec
pushf
pop
adc
fwait
pop
or
pusha
vandpd
add
and
fdivrs
aas
daa
add
out
sub
test
fisttps
mov
mov
cmpsl
scas
xchg
pop
mov
jg
ja
sub
inc
jae
xchg
je
fiadds
lret
ret
sbbl
inc
dec
clc
inc
ljmp
jge
aaa
fimull
cmp
pop
sti
call
dec
and
outsb
test
fstl
jno
int
and
sbb
or
test
pop
push
pop
jae
add
and
pop
fists
or
add
jbe,pt
ficompl
scas
xlat
aam
dec
mov
in
cmp
xchg
out
jge
pop
stos
mov
lcall
jmp
cmp
xchg
loopne
scas
dec
lea
xor
mov
rorl
popa
cld
sub
or
outsl
mov
aaa
arpl
imul
ret
les
test
add
cmp
sbb
cmpsb
aad
xchg
dec
xchg
or
xor
ss
inc
or
lcall
or
mov
push
push
push
push
lcall
imul
jp
sub
loopne
lret
insb
dec
out
leave
sub
imul
aad
sbb
lods
or
hlt
and
cwtl
mov
dec
leave
fistps
inc
insb
jmp
ss
into
stos
cmp
mov
in
add
in
mov
imul
dec
std
cmp
xlat
stos
mov
js
and
popf
cmpsl
idivl
sub
rcr
call
stc
pusha
xor
xlat
or
scas
movsl
inc
sarl
rorl
cs
jp
add
jg
sub
and
test
mov
fs
mov
neg
test
outsl
cmp
sub
push
cmpsb
push
call
scas
cmp
cli
inc
inc
push
push
out
dec
adc
fs
daa
in
push
cmp
in
pop
mov
cli
push
fcmovne
xchg
mov
negl
mov
rcrb
cmp
and
push
push
or
mov
int3
mov
bound
push
adc
and
movsb
movsl
sbb
cmp
pop
push
add
jg
cld
test
mov
leave
mov
enter
stos
sub
lods
xchg
sbb
leave
cltd
rcll
popa
scas
addb
gs
lods
lods
push
xchg
in
cwtl
stos
shrl
popf
roll
pop
pop
dec
push
test
testl
out
jo
jecxz
jle
ja
xchg
xor
and
mov
mov
xor
jg
pop
mov
and
jne
push
test
jno
or
test
mov
pop
xor
inc
xchg
idivl
sbb
mov
sbb
outsb
adc
xor
add
dec
mov
arpl
sub
mov
pop
jno
dec
aaa
icebp
pop
push
fstps
jae
jns
xchg
aad
int3
sub
sbb
mov
out
std
cmp
jl
xchg
pop
and
xor
ret
sub
into
mov
or
push
shll
shlb
sub
pop
aaa
jecxz
or
ret
mov
inc
cmpsb
out
rorl
jecxz
mov
imul
pop
das
xor
mov
hlt
repnz
or
rcll
jge
jae
shrb
shrl
stos
or
jecxz
xchg
lret
mov
pop
pop
pop
inc
mov
loop
sub
jne
mov
adc
add
shl
sarb
sub
je
jmp
mov
mov
sub
lock
pop
add
test
sub
and
outsl
sti
push
add
xchg
hlt
jg,pn
inc
push
inc
cmp
or
loope
mov
clc
rcl
add
adc
lret
sub
mov
das
mov
jno
stc
fs
jae
push
jo
jne
sbb
or
in
out
cmp
insb
in
clc
shlb
push
popf
dec
ljmp
adc
dec
pop
mov
jge
call
leave
cwtl
jno
in
outsb
cmc
push
das
jno
leave
fs
jae
lods
dec
call
pusha
mov
cli
adc
loop
add
popf
xor
movsl
popf
mov
cmp
fxam
fnstenv
mov
add
cmp
xchg
mov
out
test
out
inc
ja
jae
outsb
push
notl
fdiv
inc
xor
xchg
cld
adc
mov
fwait
pop
mov
mov
aam
out
push
scas
sub
popa
pop
call
fists
fsubr
xchg
dec
outsb
outsl
adc
pop
lret
and
mov
or
sbb
pop
int3
cmp
repz
nop
ds
cmp
sbb
push
ret
inc
lahf
cmp
testb
iret
xor
pop
dec
push
jp
push
mov
sbb
popa
lret
push
mov
std
insl
dec
dec
icebp
adc
lds
aaa
inc
fnstcw
or
fcompl
mov
in
nop
xchg
mov
ret
jae
ljmp
jne
iret
divb
addr16
jbe
nop
ret
cltd
mov
cmp
lret
out
imul
jb
fwait
mov
sub
xchg
fs
cmpsb
es
xor
mov
pushf
or
test
push
ljmp
movsb
sub
mov
push
push
addl
dec
cmpsb
stos
daa
imul
pop
inc
scas
cmp
movl
mov
lcall
or
jb
dec
dec
ds
sbb
mov
push
out
xchg
out
and
jb
cmpsl
fs
hlt
sbb
xchg
iret
xor
sbb
imul
inc
add
lock
cmp
adc
call
jge
mov
xor
push
xor
or
push
xor
xchg
mov
push
xor
fs
cmpsl
pushf
or
imulb
and
dec
dec
jns
push
iret
jmp
and
dec
or
ret
std
mov
cmp
adc
or
in
std
sub
mov
lahf
inc
push
adc
inc
in
mov
addr16
mov
addr16
stos
sub
or
xchg
sbb
and
gs
mov
jb
popa
push
enter
pop
int
jecxz
stos
mov
or
das
out
xor
adc
cmp
movsl
mov
pop
jl
nop
fmull
mov
mov
stc
jbe
add
adc
das
lret
mov
xchg
icebp
or
pop
xchg
pop
mov
jmp
in
int
sbb
mov
jge
loop
jmp
jbe
or
fbld
into
in
jp
test
pushf
pusha
mov
adc
xor
lcall
mov
add
nop
cmpsl
and
or
test
outsb
addr16
out
and
out
aas
in
stos
iret
add
push
js
adc
jne
dec
jmp
or
in
or
and
and
test
sub
jecxz
sahf
insl
std
scas
cmp
or
scas
pop
dec
or
frndint
jge
inc
mov
sbb
sub
xor
aas
fadds
aam
cmc
add
dec
lahf
xchg
mov
or
push
jle
adc
jbe
adc
xor
loope
pushf
xchg
dec
xchg
mov
jnp
pop
jl
cmp
jle
add
adc
lret
fsubrl
push
xchg
xchg
mov
mov
std
cmp
xor
popf
test
shlb
sbb
mov
rorl
sub
popf
push
jge
push
into
jg
cmpsb
fimuls
fcoml
int
or
push
out
test
cwtl
push
ss
and
xchg
ss
les
lods
jb
dec
cmpsb
and
adc
call
push
mov
fwait
adc
insb
xor
jne
adc
xlat
add
sub
ret
push
in
clc
or
mov
xor
add
cwtl
push
in
adc
int3
icebp
icebp
std
xor
and
push
ds
pop
outsl
mov
pop
and
test
cmpsb
rclb
imul
add
out
in
in
ret
cwtl
mov
mov
movsb
popa
push
push
push
decl
xor
je
insb
and
or
mov
lret
cmp
stos
scas
lds
in
cmp
stos
inc
add
out
xor
out
adc
testb
adc
mov
mov
or
dec
dec
cwtl
push
jne
dec
jae
es
aas
subl
sbb
xor
daa
scas
and
sbb
aas
jae
xchg
repnz
mov
or
jnp
mov
sub
adc
imul
into
or
dec
clc
lds
pop
and
jb
cmp
add
push
scas
add
inc
das
sbb
jmp
stos
out
cmp
clc
jge
fs
jmp
int
movsl
inc
adc
mov
sbb
mull
pop
mov
push
or
bound
fistpl
xchg
or
addl
sbb
faddl
mov
in
xor
inc
mov
mov
arpl
test
and
movsb
add
test
mov
lock
sahf
mov
idivl
jno
cmpb
in
lcall
mov
mov
push
lds
push
dec
mov
out
push
ja
pop
sbb
add
iret
jecxz
stc
inc
push
mov
add
adc
scas
mov
dec
or
sub
xchg
jl
xor
xor
and
cld
push
imul
clc
cmp
jbe
call
addl
sub
push
daa
adc
sbb
mov
out
jno
insb
xchg
mov
jne
pop
xor
adc
cmp
sbb
mov
dec
loopne
hlt
gs
add
jmp
jne
push
mov
je
sti
outsb
mov
lahf
pop
data16
mov
inc
bound
adc
cli
insl
fs
push
sahf
inc
add
jo
fs
sbb
lcall
jb
mov
fwait
inc
lcall
dec
push
xchg
sub
ret
push
inc
mov
loopne
fcoms
enter
or
xchg
or
das
sahf
fildl
xor
sbb
test
inc
sbb
fidivl
movsb
sbb
xor
dec
mov
fadd
sti
xchg
jnp
pop
or
jbe
ficoml
sub
and
lock
js
add
out
xchg
cmp
leave
shlb
push
aad
xor
add
sbb
stos
jg
sbb
test
mov
out
imul
stos
mov
stos
nop
insb
lret
mov
and
cwtl
pushf
das
inc
sub
and
ljmp
sbbb
fldt
cmc
mov
push
insl
sbb
sub
dec
pop
mov
adc
pop
cmp
popa
jo
add
enter
mov
scas
cmc
bound
sub
insl
punpckhdq
xchg
imul
ljmp
jecxz
add
sbb
sahf
mov
stos
push
cmpsl
xchg
out
push
test
mov
leave
fidivrl
xor
enter
hlt
leave
push
adc
cs
jp
insl
fidivl
jl
mov
lret
fistps
mov
out
mov
pop
insl
pop
fldl
xchg
daa
push
clc
ljmp
mov
dec
cli
fnstcw
int3
xchg
jp
add
sbb
adc
daa
sub
pusha
ds
and
loop
lock
addr16
mov
pusha
insl
mov
dec
orb
loope
mov
shl
and
sub
adc
lods
scas
pop
jmp
mulb
inc
jmp
dec
iret
repz
or
dec
fwait
ret
jmp
cmp
lcall
rclb
or
jl
add
pusha
cs
int3
rorl
fldl
icebp
adc
lea
fnstenv
test
jbe
idivl
jle
xchg
xchg
scas
cmc
fdivp
cld
or
lret
sub
imul
cmc
pop
xchg
outsl
inc
adc
pop
shll
sbb
mov
fnstsw
push
sub
loopne
adc
pop
mov
sbb
mov
mov
jns
aam
fnstenv
lods
das
xor
ds
fcoms
add
js
hlt
cmp
push
das
mov
in
je
stos
dec
lods
fldt
or
call
push
mov
imul
fstpt
lret
jns
fcmove
cs
aam
add
cli
or
lock
jmp
inc
sub
ret
xor
jbe
xor
mov
cld
push
push
jbe
sub
inc
outsb
jge
rorb
ja
test
dec
sub
enter
cmpsb
pop
ss
cmc
sbb
adc
inc
out
fidivrl
aaa
incl
pop
clc
nop
mov
xchg
outsb
aaa
inc
dec
mov
adc
mov
popa
idivb
and
cmp
sti
pop
xor
push
cltd
lods
add
pop
lahf
push
xorl
iret
and
pop
es
jmp
inc
clc
sub
int3
add
mov
rcll
nop
push
xor
clc
pop
gs
add
mov
or
es
cmpsl
shlb
into
xchg
mov
lret
cmp
ror
xor
cmpsb
adc
inc
push
inc
es
mov
and
sti
xchg
mov
mov
je
out
xchg
xchg
sub
jge
xlat
jmp
das
mov
mov
mov
or
lods
loopne
mov
sahf
ret
mov
in
inc
add
xchg
sbb
xor
mov
js
cmc
jg
mov
imul
push
fmull
cld
mov
jmp
or
rolb
and
push
mov
cmpl
sbb
mov
add
out
addl
push
aas
mov
cmp
dec
addl
cmp
out
push
iret
mov
fwait
push
das
je
cmp
sub
sub
push
xor
fidivl
insl
adc
cmp
call
cmp
fnstenv
xor
adc
dec
xor
mov
fldt
adc
mov
test
mov
loop
out
adc
mov
fsubrl
jb
pop
lods
fldt
mov
adc
mov
cmpsb
add
sbb
les
pop
dec
fildl
cld
mov
out
mov
stos
cld
out
sbb
push
es
outsb
test
jno
pop
lahf
test
dec
in
push
xor
mov
pushf
push
add
lret
fstpt
and
cmp
outsb
insb
mov
cmpl
enter
in
xlat
dec
sub
jle
mov
inc
fbstp
sub
cmp
sub
dec
pop
ss
dec
mov
fstl
test
mov
pushl
mov
add
out
rorb
stos
lret
cld
aas
out
stos
cmpsb
mov
stos
and
and
sub
inc
inc
shrl
push
repnz
fldt
mov
mov
push
lods
imul
ret
mov
xor
xchg
mov
mull
pop
popa
and
sub
cs
insl
and
or
xchg
jle
sub
scas
insb
mov
leave
jae
jg
fldcw
add
ret
out
in
adc
cmp
arpl
cld
or
scas
mov
sub
xchg
pop
movsb
sbb
sub
leave
xor
sbb
dec
lret
ficoms
push
pop
aad
test
stos
in
mov
xor
inc
pusha
xchg
int
rcrb
jecxz
and
jnp
inc
stos
testb
pushf
icebp
mov
lret
or
ja
test
addl
aas
mov
addr16
sub
mov
jns
pop
jge
inc
ljmp
cmp
in
shlb
test
push
lret
cmp
clc
mov
and
push
ret
pop
and
je
and
jle
aas
fwait
adc
or
mov
xchg
jle
fisttpl
push
ficomps
or
outsb
sahf
xor
ret
aad
popf
xlat
xchg
cmp
inc
stc
jno
aad
dec
jle
push
xchg
fisttps
xlat
dec
ror
jbe
xchg
lods
jnp
sub
sbb
out
jg
test
lods
adc
jecxz
in
lcall
mov
push
mov
sahf
test
lock
in
jge
jo
cmc
push
cmp
add
pop
cmp
or
xlat
cmpl
jle
sti
jb
filds
xchg
stos
cmp
inc
mov
in
xor
jle
inc
pushf
lea
or
aaa
jg
xchg
jns
xlat
pop
mov
push
addr16
pusha
mov
fstp
cmp
std
or
xchg
cli
into
aaa
mov
stos
shlb
adc
inc
sbb
popa
mov
lods
dec
movsb
cmp
ss
mov
xchg
rolb
mov
and
sbbb
inc
sbb
fdivs
aaa
lods
and
mov
dec
mov
or
das
jge
popa
and
fildll
dec
mov
int3
out
xor
mov
shlb
push
ret
jo
add
xchg
repnz
adc
mov
sub
mov
mov
inc
lahf
aaa
inc
cmp
lea
dec
or
or
lock
loope
xor
cmp
push
xor
jp
nop
popf
mov
jo
push
sbb
ds
sub
cmp
jns
icebp
loopne
bound
in
xor
ss
or
or
mov
shl
xchg
into
aam
hlt
aam
int
jbe
nop
aaa
lock
sbb
aas
pushf
cmc
test
dec
stos
rcrl
or
roll
pop
xor
sar
push
out
cmp
shll
inc
sbb
cmpsb
push
scas
das
jmp
sbb
jge
imul
sbb
xchg
lods
scas
pop
mov
cltd
fucomip
adc
lods
je
ret
xchg
cmp
shl
pop
pop
xor
repnz
inc
in
push
sbb
jns
and
or
mov
mov
or
movsl
clc
icebp
out
cmp
push
ja
fiaddl
in
pusha
sbb
mov
push
lret
das
jg
mov
cmp
dec
lcall
popf
add
jmp
inc
movsb
jmp
adc
sub
out
ret
inc
and
xchg
push
dec
mov
shrb
jae
pop
mov
mov
cmpb
setl
sub
push
add
ljmp
mov
test
icebp
mov
inc
push
adc
mov
inc
in
mov
mov
inc
mov
mov
nop
stos
or
popa
pop
push
adc
cwtl
adc
js
out
mov
inc
int
sub
lods
pop
test
or
leave
fnsave
sbb
js
nop
cmp
inc
inc
jb
sbb
push
xor
cmp
push
data16
push
add
insl
iret
dec
jnp
std
stos
cmp
scas
sbb
lods
jns
jl
scas
nop
idivb
jmp
mov
jl
or
fwait
xchg
jns
fs
das
and
adc
mov
fstpl
xor
or
insl
adc
and
inc
mov
jg
mov
dec
out
sbb
sub
subl
push
shrl
dec
mov
inc
or
mov
movsb
iret
fstl
sub
imul
sbb
inc
ret
movsb
jb
dec
sbb
pusha
push
or
push
scas
fucomi
and
xlat
int
bound
and
mov
cmp
jbe
cltd
adc
dec
jle
std
stos
shr
or
aaa
sbb
add
ljmp
movsb
fsubrl
fldenv
sub
int
mov
inc
sub
test
pop
ds
push
inc
sti
dec
jnp
leave
fbstp
push
or
sahf
les
test
dec
and
cmp
adc
stc
and
xchg
pushf
dec
cmpsb
sub
stos
push
test
lods
leave
cs
sbb
daa
pop
out
jmp
int3
je
ds
mov
jnp
adc
mov
pushf
cmpsb
mov
js
jb
mov
pop
xchg
mov
pcmpgtb
pop
and
push
mov
icebp
dec
outsl
cmpsb
push
dec
jb
stos
cs
daa
pop
ss
test
in
mov
jecxz
mov
and
in
xchg
fidivs
pop
sti
sub
scas
lcall
xor
pushl
pop
push
xor
cmc
inc
loop
and
push
rolb
into
lds
leave
enter
dec
orb
and
cmp
addr16
dec
out
and
pusha
mov
flds
jmp
push
in
fimull
mov
fdivrs
or
rorb
push
popa
pop
jle
cld
fwait
sbb
rcll
arpl
arpl
subb
sbb
pop
ficomps
test
cld
and
je
or
dec
sub
add
sub
nop
pop
cwtl
mov
jnp
icebp
cmp
dec
addb
and
xor
aad
jae
xor
mov
iret
mov
sbb
and
jb
or
into
fiadds
inc
jp
loope
mov
stc
enter
mov
and
nop
insb
cs
call
and
lds
mov
outsb
or
and
cld
aaa
addr16
add
and
xor
arpl
loop
push
stos
ficoml
add
les
mov
out
vsqrtss
sbb
sbb
idiv
add
add
jecxz
dec
enter
fs
mov
add
cmp
fsubl
pop
adc
sbb
or
xorl
decb
loope
pop
mov
sub
iret
decl
jmp
icebp
or
int
cmpsl
mov
xchg
push
and
and
cmp
xchg
mov
pop
jmp
sub
jg
hlt
fisttpl
inc
dec
cmpb
adc
rol
mov
or
lods
and
jge
jge
divb
jmp
jae
sub
loope
ja
xlat
xchg
and
xor
sub
lret
orb
xchg
leave
ja
cmp
pushf
or
sahf
scas
xor
into
inc
lock
dec
xor
inc
xlat
fisubl
push
sub
pop
pop
jge
mov
and
jns
add
adc
sub
sbb
aad
jae
dec
mov
jle
leave
fisttpl
clc
mov
dec
sub
or
in
loope
or
mov
pop
and
dec
xchg
pop
jmp
cmp
push
jl
jl
insl
shll
aam
sub
mov
js
insl
and
xorl
mul
xor
mov
inc
jecxz
test
ja
popa
push
jns
xor
aaa
cld
add
inc
mov
pop
insl
fildl
popf
xchg
pop
cmpsb
iret
mov
fs
cs
je
clc
bound
pop
and
inc
xchg
jle
mov
enter
jmp
xlat
pop
add
sbb
nop
pop
loop
pop
ljmp
cltd
xor
mov
test
mov
das
pop
push
push
ss
fdiv
adc
mov
mov
fisubl
jae
jg
sub
insl
inc
cwtl
dec
mov
test
ffreep
and
push
movsb
and
dec
scas
jecxz
repz
rolb
cmp
dec
sti
cmp
add
sbb
fdiv
cli
mov
mov
mov
out
int3
jp
and
adc
bound
adc
js
adc
sub
stos
pop
mov
loop
add
xchg
in
out
gs
rorl
rclb
fidivrl
dec
inc
lret
ljmp
jmp
pop
mov
cmp
pop
push
daa
lret
mov
xchg
js
xchg
lods
sub
push
mov
fbld
std
mov
xchg
movsl
inc
xor
mov
inc
push
in
or
ds
or
fwait
test
test
push
jnp
dec
mov
add
jl
lret
xchg
je
mov
cmp
insl
lea
je
add
jns
jp
out
sbb
in
or
mov
cwtl
push
mov
loopne
pop
in
adc
xchg
push
clc
dec
jo
add
sbb
mov
xor
push
fldenv
inc
xor
push
xchg
cmp
jmp
pop
pop
sbb
popf
jb
xor
and
add
scas
and
scas
sbb
lret
les
push
or
mov
sbb
std
rep
fsin
xchg
xor
scas
pop
in
add
nop
gs
sbb
lock
fldt
imul
sti
out
lock
sub
inc
dec
xchg
pop
pop
mov
xchg
mov
add
sarl
imul
xorl
push
int3
or
add
mov
mov
cmp
dec
lock
nop
lea
push
jle
jg
push
adc
data16
add
inc
jl
iret
dec
add
pushf
lret
add
mov
ror
pusha
stos
xorb
dec
je
and
scas
xchg
dec
mov
dec
mov
jle
sbb
dec
sbb
lds
jmp
fidivrs
cwtl
and
xor
fistps
loopne
movsl
ds
mov
jp
mov
mov
std
lods
std
lret
jle
aaa
addl
cmp
repnz
xchg
sbb
add
or
xchg
mov
push
and
stc
ret
rclb
jne
adc
sahf
xchg
mov
mov
aam
cld
sbb
sub
call
nop
ja,pn
lret
pop
and
mov
ja
orl
popf
ss
xor
dec
out
test
stos
ja
inc
sub
xchg
push
pop
sub
xlat
inc
stc
mov
add
movb
lods
popf
insl
adc
ja
jmp
std
dec
and
push
sbb
mov
fwait
and
jl
ljmp
jnp
jl
pushf
orb
insb
lea
cmp
imul
push
pop
pusha
xchg
cmp
push
je
in
sbb
and
popa
pusha
fiaddl
ljmp
int
sbb
rol
push
jge
and
ret
add
fldt
mull
movsl
sbb
jp
pop
xor
xchg
test
mov
mov
jp
mov
lea
cmp
std
cwtl
add
movb
xor
jp
or
mov
nopl
dec
mov
push
les
xabort
dec
mov
add
je
pop
mov
mov
sub
scas
scas
ds
sub
add
jb
popf
fucomip
pop
fcompl
pop
sbb
hlt
leave
in
add
mov
push
adc
mov
cmp
scas
int3
pop
sbb
clc
sbb
xchg
pusha
mov
ret
xchg
mov
jecxz
push
adc
adc
out
fstl
cmc
cs
shl
dec
and
mov
stos
xor
movsb
loopne
or
or
cwtl
ja
mov
push
adc
dec
jb
cld
pop
push
jecxz
int
call
push
les
mov
pop
sbb
mov
roll
outsb
sub
sbb
int
lock
or
lds
out
fbstp
fimull
jno
mov
inc
push
add
inc
dec
sub
test
push
arpl
out
cmp
and
adc
xchg
jg
dec
cltd
add
loope
out
les
mov
xchg
adc
pop
jmp
jle
rorb
loop
pop
push
xchg
ss
dec
xor
nop
arpl
gs
fdivrs
push
inc
aad
repz
sbb
mov
out
cmpsl
fistpl
out
xor
xchg
push
xlat
outsb
test
leave
addl
insl
fwait
lcall
jns
xchg
popa
fdivl
mov
sub
push
arpl
xchg
int
sub
mov
ja
hlt
xchg
xor
cmp
inc
and
inc
out
in
sbb
push
icebp
addr16
mov
lds
or
xchg
mov
mov
fistpl
addr16
xchg
js
or
mov
jge
fwait
notl
stc
or
adc
dec
loope
xchg
inc
sbb
cmp
aaa
cmp
jmp
adc
in
repnz
xchg
cmp
imul
daa
outsb
rclb
mov
outsl
xor
mov
dec
sub
push
sub
mov
sbb
movsl
lcall
leave
rorb
push
iret
lea
sti
bound
xor
les
cmp
sub
jmp
aad
mov
lcall
ret
pop
mov
cld
cmp
add
dec
dec
jae
fs
rorl
dec
dec
xor
test
sahf
popa
add
or
pop
mov
sbb
cwtl
data16
das
lods
mov
inc
sbb
subl
popf
or
xor
jle
dec
jb
mov
test
insb
cmp
popa
scas
ficoms
movsl
mov
or
cmp
stos
mov
fsubs
scas
mov
js
test
ret
fisubrs
cmpb
mov
or
and
xchg
std
data16
inc
popf
sub
sub
pop
ret
jo
xchg
in
push
scas
jne
imul
lea
and
roll
mov
adc
jns
inc
pop
bound
bnd
stos
call
xor
arpl
push
adc
cmp
sub
push
cmc
out
cmp
and
dec
je
mov
pushf
pop
jnp
pop
shll
jbe
push
push
mov
mov
call
xchg
pop
movsb
add
xchg
sbb
or
push
mov
xchg
fisttpl
fsubl
push
lahf
out
ret
insl
sub
shr
push
and
pop
sub
outsl
mov
pop
mov
xchg
pop
push
sbb
mov
sub
iret
jne
xchg
pop
jae
mov
or
push
not
insl
push
sbb
sbb
vprotb
lods
imul
mov
jbe
adc
arpl
xchg
out
ret
out
movsl
dec
lods
cmpb
mov
mov
xor
enter
repnz
or
pop
push
in
sub
test
sbb
mov
jae
icebp
jns
scas
pop
icebp
outsl
sbb
mov
pop
cmpsl
lods
inc
xchg
pop
xchg
test
add
popa
add
or
test
cmp
dec
cmc
push
rcl
pop
sbb
popa
rcrl
sbb
sub
lds
mov
inc
decl
mov
adc
push
movsb
mov
mov
movsb
pushf
lods
jecxz
les
jle
inc
test
in
mov
sbb
push
popa
mov
sbb
idivb
pop
adc
pop
xor
lock
and
xchg
mov
pop
xchg
lret
adc
fdivrl
jle
stos
pop
movsl
test
jl
and
loop
lret
shll
insb
subb
gs
dec
inc
inc
ja
cmp
scas
popf
and
fwait
nop
mov
jg
movsl
loop
subl
push
push
jb
fs
sbb
in
int3
push
push
outsl
xchg
movsb
fisttps
jle
gs
sbb
sbb
adc
add
mov
or
or
jmp
add
out
insb
ret
pop
xchg
imul
xchg
push
scas
jl
add
jl
test
or
mov
pop
xchg
cmpsl
xor
repz
push
mov
inc
arpl
nop
push
std
aam
sqrtps
movsl
and
mov
ja
dec
rcl
js
adc
push
push
bound
inc
xor
adc
ja
out
jge
jl
fmuls
mov
pop
scas
lret
jecxz
inc
fistps
xchg
mov
fstpl
mov
mov
push
loop
inc
xchg
arpl
hlt
movsl
lods
push
ret
ss
xor
call
out
imul
xor
popa
pop
cmp
sbb
xchg
sub
cs
xor
std
enter
dec
inc
pop
fcoml
xchg
pop
mov
sbb
pop
enter
sub
xor
and
sbb
out
sub
movsl
popa
lret
int3
sub
int3
adc
inc
fimuls
mov
sbb
or
pop
frstor
pop
leave
xchg
xchg
fs
adc
sbb
jecxz
mov
pop
cmp
loope
xchg
fdivl
lahf
sub
in
xchg
shr
mov
mov
cwtl
loope
lcall
mov
scas
inc
mov
adc
pop
cmp
out
xchg
add
popf
fwait
sub
inc
fs
mov
cmpsl
repz
xor
push
fwait
xor
fisubrs
aad
sbb
out
sarb
ret
or
call
sub
je
fwait
mulb
hlt
inc
cmp
push
dec
and
and
lcall
not
insl
jmp
and
int
push
lods
jns
jg
out
ja
jecxz
add
lret
repnz
adc
push
ljmp
jo
xchg
fcoml
mov
sbb
jle
leave
sarb
aad
pop
pop
lea
xchg
cld
test
arpl
adc
mov
or
mov
mov
sub
adc
dec
jb
pop
inc
push
fidivl
cmp
sbb
outsl
dec
es
lods
cmp
test
mov
jbe
mov
jns
in
adc
mov
and
mov
inc
movsl
mov
popa
sbb
std
dec
mov
in
inc
add
pop
fidivrs
test
cmp
mov
mov
inc
mov
xlat
mov
sbb
inc
pop
pushf
fldt
bound
inc
dec
sbb
mov
loope
inc
jmp
inc
mov
out
cs
jnp
pushf
scas
loope
mov
push
xor
xchg
daa
push
sub
shrb
adc
mov
push
inc
and
pop
popf
rcrb
sbb
jle
and
cmp
clc
fsubrp
int3
xchg
popf
xchg
or
outsl
loopne
roll
js
jle
sbb
sub
pop
cs
push
cltd
mov
enter
outsl
sub
scas
nop
mov
lock
mov
xchg
bound
loopne
xor
or
mov
pop
pop
lcall
dec
jae
mov
call
das
inc
sub
jo
inc
loope
arpl
loope
jge
es
mov
push
pop
and
outsl
iret
jb
test
jo
into
inc
cmpsl
xchg
jmp
lahf
mov
mov
cld
insb
xchg
mov
lods
adc
add
andb
push
xorl
ljmp
or
mov
jecxz
out
jp
repz
mov
push
or
mov
clc
roll
out
lock
mov
cmpb
cmp
jl
sbb
jge
sti
sub
or
mov
jbe
rcl
and
insl
lcall
cmp
and
mov
ljmp
push
mov
lods
movsb
add
adc
push
push
mov
stc
mov
mov
push
mov
mov
dec
cmp
xchg
and
fnstsw
scas
outsl
mov
sub
fcomip
sub
lds
scas
mov
mov
push
dec
out
mov
jb
push
out
and
fimull
lcall
fmul
fidivrl
xor
outsl
and
mov
jae
ret
sbb
arpl
fisubs
or
inc
enter
xchg
out
inc
push
ficompl
dec
xor
arpl
fadd
and
or
aas
mov
mov
in
ss
lahf
lcall
add
adc
test
push
xlat
mov
push
dec
mov
or
lret
mov
rcl
adc
adc
daa
cmp
fwait
out
stos
data16
je
rcrl
pop
rcll
cmp
push
mov
sbb
nop
ja
mov
cmpsl
and
sub
mull
sub
pop
ficompl
jmp
mov
daa
pop
xchg
cmp
xor
pusha
jmp
gs
mov
push
pop
rorl
cli
push
sub
popa
stos
je
andl
movsl
testb
xchg
adc
or
sbb
test
inc
rorl
add
jno
dec
cmp
repz
lret
lds
push
mov
stos
xchg
adc
popa
inc
negb
ljmp
add
xchg
int3
or
xchg
push
inc
add
xor
sti
and
stc
dec
not
jnp
imul
sahf
sbb
ret
mov
sub
sbb
nop
or
scas
movsl
std
sub
movsl
jle
adc
or
cmp
rorb
push
mov
fdivs
pop
out
pop
ljmp
sub
or
inc
mov
scas
inc
push
imul
lcall
mov
cld
int3
cmp
mov
dec
cmc
or
repnz
xchg
loope
rcl
loope
pop
dec
pop
push
pop
fs
adc
out
xlat
lock
fninit
addr16
mov
inc
or
ljmp
cmp
stos
xchg
pop
sbb
jns
ficomps
pop
fs
mov
adc
cmp
xchg
jge
inc
sub
adc
and
xchg
bound
mov
push
mov
xchg
orb
insl
push
lods
cwtl
cli
pop
xor
adc
std
dec
lds
je
insl
inc
ds
jmp
mov
mov
insb
stc
pushf
fmull
mov
gs
sbb
hlt
imul
add
pop
pusha
and
lods
fwait
cmp
mov
popf
mov
call
mov
pop
inc
movsl
or
jno
cmpsl
test
aad
jbe
movsb
aaa
mov
sbb
packssdw
cwtl
or
add
jno
or
int3
push
inc
mov
dec
sti
jmp
shrb
pop
leave
pop
imul
std
shrl
popl
mov
mov
jae
pop
lock
dec
aas
fnsave
ret
outsl
sub
sbb
sbb
mov
loope
add
pushf
or
jbe
push
test
jmp
push
jp
add
inc
fnstenv
push
push
xchg
int3
test
xchg
jo
xchg
sub
and
inc
xchg
jnp
je
lock
add
lret
xlat
adc
push
repz
scas
enter
xchg
int3
push
sub
sbb
shlb
pop
or
subl
outsl
sbb
ror
cmp
lahf
jbe
xor
leave
stos
fwait
lods
and
les
push
clc
aam
lret
imul
pushf
mov
add
xchg
adc
imul
mov
add
cli
push
dec
jae
icebp
push
mov
push
ja
push
outsb
arpl
jge
rcrl
inc
xlat
jns
pop
inc
and
sbb
add
sbb
sbbb
cmp
mov
add
test
mov
stc
jmp
or
popa
aad
scas
and
mov
cmc
test
sub
and
sub
jbe
in
jl
cmp
xor
inc
dec
sbb
insl
aam
stc
jge
js
jbe
lahf
sub
xor
sbb
orl
pusha
pusha
mov
notb
shrb
scas
sbbb
lret
dec
mov
mov
mov
mov
xchg
lret
adc
int
inc
adc
repnz
dec
add
mov
mov
cltd
xor
jno
mov
int
mov
pop
sbb
jb
dec
les
pop
adc
jae
jecxz
mov
ret
push
mov
pushf
xor
pusha
aaa
rolb
lods
insb
out
jns
fildl
jmp
add
jl
outsb
jle
mov
pop
negl
fistpl
js
scas
fsin
pop
push
cmp
sbb
pop
add
dec
maskmovq
testl
mov
imul
inc
pushf
and
jge
stos
aaa
and
lret
je
mov
adc
call
dec
jno
test
cmp
icebp
ss
imul
aaa
movsb
lret
push
cmpsb
xchg
mov
or
jge
outsl
sti
mov
cltd
add
daa
jno
push
dec
adc
add
clc
cmpsb
out
addr16
or
mov
shrl
jg
or
push
xchg
cmp
sbb
aad
mov
dec
sub
fidivrs
push
mov
xor
push
les
shll
xor
and
test
loope
or
mov
repnz
mov
stos
repnz
sbb
mov
push
xchg
jge
test
xor
add
jmp
mov
in
in
push
cltd
adc
mov
mov
adc
fisubrs
jns
fiaddl
fisubrs
dec
jl
jecxz
icebp
mov
lods
mov
cmp
sub
rol
cltd
push
xchg
nop
cmc
sbb
stos
and
mov
pushf
js
mov
or
inc
sub
aaa
sub
and
adc
popf
mov
inc
inc
xchg
pop
aas
test
dec
mov
xchg
stos
addr16
dec
leave
dec
fcomp
pop
icebp
mov
mov
jge
mov
pop
sub
inc
cwtl
or
push
sarb
test
int3
jge
pop
dec
mov
sbbl
inc
xchg
lcall
or
sbb
gs
push
stc
mov
js
jae
jne
ret
out
push
mov
jl
and
rcrb
stos
cmc
in
mov
sbbl
inc
inc
stos
outsl
cmp
jbe
xor
cmpsb
push
sub
or
mov
out
aam
fwait
pusha
or
in
mov
xor
mov
mov
cwtl
popa
lds
sahf
mov
fistpl
fdivr
ds
or
sahf
jp
into
mov
ljmp
jo
cmc
pop
in
fcmovu
mov
mov
movsl
push
icebp
mov
add
push
dec
mov
test
mov
cld
movsb
mov
sub
pop
or
idivb
sbb
mov
jo
mov
pop
xor
decl
adc
mov
bound
mov
lods
cmp
test
mov
mov
push
cmp
mov
jl
dec
or
jmp
and
cmc
cli
arpl
in
test
or
lds
fildll
pop
add
or
mov
in
flds
rcrb
aaa
xchg
sbb
out
push
daa
xchg
mov
adc
iret
adc
jle
lret
inc
pop
jbe
and
dec
mull
sbbl
out
cmc
or
add
mov
in
popa
xchg
fdivs
push
dec
popa
jmp
inc
sbb
mov
cwtl
imul
jmp
pop
in
dec
inc
fwait
jae
and
in
data16
push
loop
insb
into
cmp
mov
clc
push
or
cltd
cmp
xchg
icebp
sub
push
scas
jecxz
xor
mov
fwait
mov
movsb
jo
loopne
clc
int
sub
jo
push
mov
push
mov
mov
push
jns
dec
mov
enter
out
cmp
ds
pop
pusha
aaa
lea
ret
stc
das
jg
fstp
xlat
adc
daa
sub
push
pushl
adc
and
cltd
xchg
mov
sbb
in
int
jb
adcl
pop
aas
sbb
add
mov
outsb
mov
int
and
leave
and
sbb
shl
xchg
mov
sbb
mov
fldt
or
jmp
testb
stos
stos
int
call
xor
repz
out
aad
clc
inc
inc
mov
mov
sub
jnp
jp
fisttpll
mov
and
dec
imul
lcall
icebp
cmp
add
out
sub
mov
int3
mov
call
jle
mov
dec
pop
adc
mov
inc
das
push
and
mov
sub
into
pop
cld
insb
aaa
xlat
into
adc
mov
insl
push
inc
cmp
cmpsb
insb
xlat
aas
jmp
cmpsb
test
hlt
adcl
out
or
cmp
cmp
cmp
rorb
mov
dec
pushf
xor
xchg
xor
or
rclb
cmpsl
seta
xlat
lret
adcb
mov
add
cld
mov
icebp
imul
xor
test
das
sub
mov
jg
inc
jl
xor
test
pop
int3
inc
and
sbb
sub
sti
sub
jbe
shrb
push
pop
xor
ret
fcmovnu
push
xchg
xchg
xor
mov
inc
inc
jbe
adc
cmp
cwtl
mov
and
pop
cs
sbb
js
jns
mov
cmp
les
aaa
repnz
insb
jmp
jno
lods
jle
mov
add
adc
jns
loopne
mov
sbb
icebp
dec
inc
inc
jo
and
sub
pop
ret
bnd
cmpsb
ret
and
xchg
cld
int3
xchg
jnp
jp
ret
mov
mov
mov
in
cld
nop
popa
jl
rolb
fdivrs
jle
sbbl
pop
aas
aas
adc
insl
xchg
orb
sub
sar
mov
xor
pop
int3
out
shll
sub
leave
ss
les
inc
push
in
jle
xor
mov
sbb
cld
jmp
xor
loope
inc
divl
jle
data16
xor
jmp
sub
inc
in
mov
mov
add
es
mov
bound
pop
sub
cmp
and
jbe
fdivrs
xor
lret
out
lea
pop
jg
lea
in
loope
inc
mov
dec
mov
lea
lcall
fsub
fstpl
dec
mov
outsl
stc
cld
mov
scas
lahf
mov
leave
xchg
mov
mov
mov
pop
nop
cmp
icebp
loope
and
cli
push
xor
in
faddl
scas
shrl
rcrb
mov
cwtl
sbb
sub
sbb
ljmp
xchg
jmp
adc
push
push
popa
cmc
mov
or
enter
mov
aad
lahf
push
xor
jbe
xor
ss
inc
test
arpl
lahf
nop
sub
test
aaa
mov
mov
loopne
jl
scas
dec
and
inc
cwtl
fwait
cmpsb
cld
xor
add
movsb
rol
out
imul
add
call
or
mov
mov
scas
call
mov
dec
sub
aaa
xor
shrb
aas
push
push
cmp
push
inc
xor
int
add
cmp
and
sub
sbb
or
loope
repz
or
ret
int
enter
outsl
lcall
xor
mov
jo
cmpsl
jmp
cmp
outsl
clc
and
xchg
int
dec
push
mov
lock
clc
rol
data16
out
hlt
or
outsb
mov
test
int
pop
pop
jp
mov
xchg
in
mov
out
pop
jo
adc
loope
cmp
into
jg
stc
pop
mov
mov
mov
ljmp
xor
loope
sub
or
popf
push
cltd
push
jle
cmp
stc
and
pop
shrl
mov
aas
sahf
gs
jecxz
fstpl
jle
pop
insb
std
pop
mov
jecxz
shll
stos
inc
stc
je
lods
add
lcall
xchg
cli
jecxz
movl
ds
test
fwait
sahf
xor
add
addr16
imull
and
jmp
push
stc
xchg
pop
sbb
adc
shll
iret
inc
and
push
sbb
push
jno
fadds
lock
iret
sti
and
std
or
push
add
jne
jb
xor
mov
mov
jmp
data16
sbb
or
ret
and
jb
sbb
xor
aad
ret
imul
btrl
insl
repz
xor
out
push
pop
jmp
out
cmp
xchg
dec
adc
les
fcompl
and
lcall
push
add
jecxz
je
cld
push
movsb
imul
xchg
call
stos
imul
pushf
xchg
add
test
push
jl
push
add
add
nop
cs
sbb
hlt
add
nop
push
es
jp
sub
aaa
popf
stc
cmp
pop
inc
in
fs
and
mov
inc
std
popf
mov
into
and
sbb
iret
sbbl
into
orb
inc
push
int
inc
stc
jbe
mov
icebp
xor
push
insl
pop
ljmp
push
in
push
mov
mov
jae
cwtl
add
mov
xor
and
mov
sbb
mov
outsl
out
mov
and
leave
sbb
pop
or
fs
loopne
and
loop
out
mov
test
dec
int3
mov
arpl
cli
test
mov
or
inc
pop
hlt
xor
jnp
mov
outsb
jge
stos
iret
mov
xor
stc
test
xchg
mulps
cmp
sub
jb
or
mov
inc
mov
mov
mov
int3
adc
jno
sub
jmp
nop
fucom
sbb
cmp
ret
pop
inc
or
inc
add
xor
pop
mov
int3
xchg
add
ret
inc
push
dec
idiv
mov
inc
inc
mov
add
mov
xchg
dec
add
into
cmp
mov
loopne
int
lret
cld
ret
popa
jle
outsb
pop
fldl
xlat
into
mov
gs
add
add
icebp
cmpb
or
mov
xchg
mov
and
xchg
mov
loopne
cmp
enter
mov
lea
adc
push
adcl
push
xor
mov
mov
leave
jl
xor
push
adc
xchg
inc
jo
lret
ror
cmp
adc
ret
push
jae
scas
cmp
mov
mov
loopne
scas
ret
inc
add
push
and
loopne
stos
pop
pop
jo
xchg
mov
popa
shrl
int3
push
pop
cld
pop
jge
cmpsl
je
arpl
xlat
mov
sub
adc
push
outsb
pushf
fidivrl
outsl
ja
sbb
push
xchg
cmp
popf
fidivrl
mov
test
pushf
fstps
pop
call
scas
fstl
and
mov
mov
dec
or
jae
adc
outsl
cmp
cli
adc
insl
mulb
pusha
or
jno
adc
xchg
fstl
sti
push
jno
mov
sbb
add
ret
mov
inc
push
sti
leave
mov
pop
arpl
mov
lahf
cmc
push
dec
and
cmp
push
mov
pop
cmpsl
fs
dec
aas
dec
int
aaa
fnstenv
negl
arpl
or
fwait
dec
mov
xchg
mov
mov
lret
push
mov
xor
add
out
out
xor
jmp
dec
pop
mov
xchg
and
pop
mov
pop
jae
jle
lods
cmpsl
lods
pop
push
mov
popf
mov
push
loop
sbb
xchg
rcrl
rcll
pushf
fstps
mov
cld
sub
cmp
sbb
sub
fs
push
loop
imul
xchg
jae
lock
mov
roll
mov
mov
mov
mov
jmp
clc
std
mov
fildl
mov
scas
lret
cmp
seta
jcxz
scas
push
pushf
dec
jmp
pop
pop
pushl
mov
xchg
insb
movl
dec
cmp
mov
loopne
mov
jg
into
ss
jae
pop
push
mov
jle
in
jl
mov
sarb
fmulp
mov
xor
sahf
xor
sub
stc
fisttps
lret
push
js
movsb
push
xor
ret
xchg
fsts
jb
or
mov
dec
push
mov
stc
arpl
iret
ret
xchg
outsb
testl
pop
sbb
mov
mov
stc
jne
push
xor
repz
ret
cmp
or
push
dec
inc
dec
cmp
icebp
push
ss
xlat
inc
adc
add
mov
mov
mov
add
test
orl
pop
ss
imul
mov
out
outsl
dec
fnstenv
cmp
xchg
fstps
nop
out
jmp
popf
fwait
in
mov
pop
xchg
mov
xor
push
pop
test
xchg
nop
jnp
lock
lds
aaa
xor
mov
addr16
out
test
xor
mov
movsb
rol
push
ror
int3
mov
add
pop
addb
sbb
mov
pop
xor
ss
push
scas
inc
out
add
into
mov
lods
mov
mov
cmp
jmp
call
pop
mov
stos
xor
mov
das
int
push
pop
out
cld
std
sbb
pop
xchg
sub
loope
xchg
div
and
jns
push
sbb
jmp
dec
or
out
sarb
sbb
cmp
clc
clc
loopne
and
and
pop
mov
aam
lock
xor
cmovno
adc
lods
iret
jge
jns
loop
ret
jmp
and
dec
mov
fwait
xor
sbb
xor
cwtl
cli
test
jno
stos
cmpsl
fldcw
loope
push
or
mov
outsb
das
lods
das
sub
and
fcoms
out
mov
loope
dec
data16
add
sbb
daa
mov
mov
mov
mov
jp
push
xor
sti
repnz
cld
std
jp
ja
ljmp
imul
cltd
dec
gs
loopne
mov
lret
xchg
inc
shr
or
xchg
js
in
rorb
and
rcrb
scas
and
add
in
mov
ja
popa
inc
jae
dec
scas
pop
int3
mov
lret
mov
inc
cmpsl
xchg
sbb
cmp
sbb
lahf
movsb
jecxz
imull
inc
jns
jle
mov
push
rolb
add
movsb
jle
into
push
aam
mov
outsl
pop
pusha
imul
les
cli
pop
pop
fadds
cmp
xchg
faddl
es
leave
outsl
movsl
inc
int3
cs
sti
cmp
jno
pushf
lds
jns
iret
cmp
jmp
out
mov
daa
jecxz
add
int
push
or
jnp
dec
jle
mov
loopne
xchg
subl
pop
and
ds
cmc
mov
shll
popa
repz
inc
test
test
pop
mov
fcmovbe
mov
pop
dec
lahf
aaa
or
mov
dec
xchg
in
imul
out
cwtl
xor
xchg
mov
into
fisubrl
xor
outsb
mov
lock
iret
mov
xor
mov
lcall
add
sub
nop
mov
sub
sub
pop
jl
repnz
push
leave
or
das
push
pop
mov
or
aad
ss
xor
jo
ret
sub
xor
icebp
cmc
shll
mov
xlat
ja
popa
mov
scas
aas
xchg
jge
fxch
mov
shr
jae
and
mov
xchg
cmp
in
call
fcomps
add
dec
sbb
sub
push
fcoml
push
xor
xlat
lret
add
or
lods
mov
in
data16
xchg
cld
add
inc
dec
test
cltd
xor
push
ret
push
add
test
jns
cld
push
push
out
cmpsl
andb
f2xm1
and
mov
cmp
mov
pop
xor
xchg
hlt
adc
mov
movsb
mov
mov
xor
fdivs
sub
push
enter
test
jne
js
ja
inc
xchg
mov
out
jecxz
mov
ss
or
aaa
bound
jecxz
pop
mov
insl
pop
into
cmp
pusha
cmp
or
dec
mov
mov
jne
pop
or
xchg
add
addr16
mov
mov
adc
ret
push
pop
pop
cmp
dec
enter
or
cmp
jo
lret
ficoms
sbb
adc
aas
xor
jmp
pop
iret
cmc
pop
jp
popa
or
lret
sbb
out
push
popa
dec
mov
fisubs
ffreep
aaa
jne
mov
sbb
or
test
inc
lods
xlat
std
lods
cmpsb
sub
adc
dec
lock
dec
xlat
lret
mov
nop
dec
mov
repnz
push
mov
int
lea
fistps
jl
or
dec
sub
bnd
inc
xor
aaa
push
pusha
aaa
sub
jae
mov
jmp
sbb
ds
add
jbe
mov
dec
int3
lret
adc
pop
xchg
push
or
aam
imul
out
fwait
js
mov
mov
scas
icebp
test
fdivs
data16
scas
jle
and
dec
out
inc
lret
cli
ja
aam
dec
mov
je
lahf
fcompl
and
loopne
sbb
lods
xor
addr16
inc
or
mov
dec
sub
popa
mov
pop
movb
mov
inc
scas
or
mov
lret
addl
add
xchg
cmp
scas
fsubrp
ljmp
ja
mov
cmpsl
mov
lret
popfw
sti
nop
push
jne
xchg
lea
xchg
and
and
ss
icebp
std
mov
lret
stc
pop
push
cmp
ja
xchg
popa
mov
sub
mov
push
pop
movsl
inc
add
mov
in
das
mov
mov
aad
xor
dec
add
scas
cld
int3
ss
lock
push
xchg
ja
mull
aam
dec
fdivrs
mov
adc
and
mov
adc
inc
sbb
sbb
mov
cmp
rcll
sub
outsl
dec
mov
sbb
jb
push
insl
stc
xchg
and
jmp
scas
dec
loop
js
mov
movsb
cmp
pop
push
dec
mov
in
mov
or
push
sub
mov
aad
sbb
push
mov
ret
xchg
insl
pop
ja
aam
sbb
stos
xor
adc
ljmp
fs
xor
ret
out
jne
scas
lcall
mov
nop
jg
adc
outsb
das
push
test
je
jns
lods
inc
cmp
inc
arpl
jne
clc
add
add
mov
push
lea
mov
cwtl
mov
loop
pop
into
out
inc
adc
mov
std
push
aad
out
lret
pop
push
and
xchg
inc
ds
xchg
and
sbb
pusha
mov
punpckhdq
lret
out
int
bound
lods
fisttpl
out
pop
or
pop
push
push
inc
call
hlt
fidivl
mov
push
cmc
jno
fiadds
push
addr16
push
add
stos
mov
orb
inc
popa
mov
pusha
or
out
mov
loop
dec
ret
push
adc
add
test
roll
pop
scas
lahf
in
cmp
dec
jge
int3
mov
sub
inc
mov
das
in
mov
or
unpckhps
mov
mov
add
push
sub
mov
incb
sbb
jae
xor
cmp
inc
push
in
pop
cmpsb
pop
push
cmp
dec
pop
stos
imul
inc
pop
cmp
in
adc
aad
repnz
test
sub
out
inc
mov
add
or
push
or
daa
out
xor
push
pop
sub
xor
aam
inc
mov
insb
rcr
imul
fwait
push
clc
aam
je
mov
cmp
mov
xchg
lret
in
icebp
push
lcall
cld
jecxz
jmp
lret
push
call
dec
and
xchg
int3
sub
pop
fwait
jae
rorb
xchg
mov
insl
mov
std
out
addr16
addr16
mov
enter
xor
cmp
js
or
cmp
cmpsb
aaa
sti
into
leave
and
xor
jl
es
in
push
cwtl
ja
mov
cld
jl
aaa
sbbb
cmp
ds
imul
rcrb
and
adc
pop
fbstp
mov
jb
sub
adc
lods
jp
insb
insl
jo
xchg
cmp
cwtl
pop
add
jae
or
pop
loope
mov
rol
sub
out
sbb
pop
pushf
pop
std
mov
dec
out
or
stc
and
rol
fucomp
inc
jecxz
loopne
sub
pop
cmc
and
iret
mov
andl
pop
sti
cs
pop
insl
adc
cmpsl
fsubrl
or
ds
sbb
mov
ret
sbb
movsb
xchg
aam
call
mov
dec
cs
shlb
lahf
rolb
test
scas
mov
stc
out
xchg
aas
sbb
pop
movb
inc
lock
shll
fstps
mov
dec
mov
and
les
stc
stc
jno
inc
out
sbb
out
jns
jae
add
pop
daa
stos
jno
inc
sub
pop
cltd
and
dec
in
sahf
xor
mov
pop
sbb
fimull
repnz
fmull
neg
or
sbb
pusha
sub
shll
push
js
xor
fwait
mov
repnz
mov
jbe
push
aas
mov
mov
lea
aad
xchg
cld
inc
mov
stc
mov
pop
adc
mov
dec
sarb
cwtl
sbb
movsb
nop
das
mov
outsb
in
out
inc
es
lock
xor
movsl
xchg
or
jo
mov
out
loopne
fdiv
fidivrs
xchg
enter
jp
lods
or
pop
pop
shlb
xchg
ret
js
xlat
lods
mov
cmp
mov
lret
mov
int3
and
xchg
add
pop
popl
dec
mov
lock
mov
sbb
out
push
stos
repnz
subl
pop
scas
les
cmp
cmp
out
pop
scas
add
jb
stc
push
loopne
inc
cmp
jno
test
pushf
mov
or
test
cwtl
xchg
imul
xor
ret
xchg
cltd
loope
out
xor
cmp
fimuls
lcall
mov
cwtl
mov
out
and
imul
or
in
push
xchg
inc
dec
outsb
xchg
fcmovnb
sbb
hlt
jecxz
lahf
ja
sbb
xlat
xor
mov
out
and
jnp
sbb
push
push
pop
outsl
or
popa
shrl
add
xor
dec
out
dec
std
cmpsl
dec
sbb
mov
gs
repz
sahf
popa
arpl
jecxz
mov
lock
xchg
mov
push
sbb
ljmp
jl
lret
mov
or
jmp
adc
xchg
ja
pusha
cmp
adc
push
mov
cmpsl
and
adc
inc
xor
dec
pop
pushf
push
popf
iretw
pop
dec
arpl
sbb
xchg
dec
xchg
fsubl
or
loope
clc
in
dec
leave
into
dec
mov
stos
push
xchg
add
rclb
mov
insl
in
out
push
push
imul
fdivrl
lahf
aas
dec
mov
sub
in
pop
lahf
out
fisubl
fidivs
jp
sbb
mov
clc
jb
mov
dec
sbb
pop
adc
imul
cs
jae
dec
clc
negb
call
nop
scas
mov
aaa
das
ja
pop
bswap
ret
scas
dec
gs
clc
ja
add
sarb
cld
rcl
sbb
lcall
lahf
xchg
fiaddl
testb
lds
fsubrl
int3
fbstp
cmp
xlat
xor
and
mov
cli
into
xor
xlat
xor
scas
mov
mov
adc
jnp
pop
xor
cmp
mov
mov
and
mov
cltd
js
nop
out
jle
and
in
test
jle
jecxz
push
push
popf
outsl
fwait
add
aaa
insl
ret
and
arpl
mov
loopne
mov
lock
push
mov
mov
divl
xchg
jbe
addr16
sub
out
jo
aaa
jl
dec
mov
push
push
sbb
fidivl
pop
push
jle
cwtl
loopne
dec
bound
cmp
mov
xchg
adc
inc
xchg
push
mov
sub
into
fisubrl
rclb
gs
push
lods
shlb
cwtl
cmc
sub
imul
lret
sub
add
stc
rolb
pop
ja
aaa
push
pop
inc
mov
subl
repnz
shll
add
mov
mov
stc
movsl
stos
cltd
xchg
mov
cmp
test
mov
xchg
push
mov
into
test
sbb
test
jp
popa
xor
pop
cmp
inc
in
jmp
imulb
fs
inc
jp
fwait
mov
inc
cmp
xchg
mov
push
clc
inc
add
push
stos
ljmp
sub
sbb
orl
mov
into
fwait
mov
cmp
popa
and
insb
pop
enter
das
jb
aad
dec
or
xor
sti
sub
inc
inc
lds
lret
shr
mov
and
xchg
mov
mov
addl
addl
fisubs
je
adc
add
pop
shrb
xchg
fcoml
imul
stc
cwtl
movsl
sbb
dec
fmull
pusha
mov
int3
cmpsb
cmc
fsts
hlt
test
add
pushf
or
jle
and
jl
add
mov
push
adc
bswap
sbb
sti
in
inc
mov
push
mov
inc
icebp
adc
test
pop
pop
push
es
xchg
orb
inc
faddl
cmp
cmpsb
jae
sbb
enter
sbb
sti
call
imul
mov
pop
gs
addl
and
lods
push
adc
mov
mov
xchg
cmpsb
popa
test
jnp
xchg
mov
push
jmp
or
loopne
outsb
loop
pop
in
mov
and
mov
dec
jle
xor
fidivrl
jp
xor
sub
cmp
neg
sub
sbb
xor
add
movsb
push
push
or
shll
and
fidivrs
xor
xor
cmp
pusha
test
lret
pop
add
push
movsb
adc
xor
and
jnp
int
cmpsl
cmp
jae
scas
xchg
mov
xchg
add
addr16
cmp
cmp
push
sahf
je
pop
mov
repnz
lods
jnp
movb
xor
jne
cli
sbb
mov
dec
mov
testb
rcr
sbb
sub
jl
jecxz
inc
mov
sub
movsl
out
int
mov
or
jns
aaa
scas
push
mov
sub
lcall
dec
cltd
mov
int3
mov
or
mov
push
and
push
popf
in
out
jbe
lret
dec
jmp
aam
hlt
int
jl
sub
lds
xchg
cmp
stos
rcrb
test
jbe
stos
fdivp
jb
outsl
iret
jmp
aaa
push
mov
and
push
sub
into
int3
rcll
testb
xor
xchg
pop
or
xchg
pop
repz
js
lods
push
jle
in
out
add
mov
aas
dec
dec
es
mov
jecxz
xchg
notb
sti
xchg
jns
imul
aad
cmp
mov
or
cmp
mov
loopne
lods
or
mov
sub
in
imul
nop
lret
sub
lods
xchg
test
mov
ja
pop
xchg
xor
and
lret
mov
push
pop
push
jb
cmpl
sub
loope
cwtl
adc
or
ret
dec
or
mov
add
or
int3
lock
je
cwtl
push
in
pop
adc
sub
in
mov
mov
push
in
fs
inc
dec
mov
pop
fldl
mov
xchg
ret
icebp
push
cmp
and
pusha
cld
call
xchg
add
sbb
mov
mov
fcoml
or
ret
xchg
and
push
les
rcrb
xor
pop
adc
insl
sub
push
add
movsb
xor
aad
and
rclb
mov
in
scas
insb
test
out
ret
ds
sbb
jecxz
out
pushf
dec
lret
mov
bound
mov
jmp
out
das
and
loop
pop
sbb
xchg
lret
loop
ret
or
lcall
cltd
mov
es
cmp
mov
fs
mov
cld
sbb
das
in
jo
insb
in
sub
lcall
mov
gs
dec
add
jecxz
pop
std
jp
xchg
add
dec
xchg
push
mov
stc
test
rorb
inc
pop
mov
mov
rorl
and
jno
fwait
rorl
add
push
push
lods
dec
pop
lcall
mov
fadds
push
std
in
push
shlb
mov
inc
fwait
scas
mov
enter
call
mov
mov
jns
adc
addb
pop
push
dec
loope
pop
stc
mov
int3
sub
out
cmp
lret
das
or
ljmp
mov
push
xor
daa
hlt
adc
add
adc
std
lret
je
mov
mov
mov
cmp
jp
outsb
mov
mov
cld
mov
popw
mov
xor
and
sub
xor
add
pop
shrb
inc
mov
jmp
mov
jl
lret
ffree
repz
popa
enter
gs
sub
inc
cld
movsb
or
jl
adc
dec
mov
bound
inc
orps
loopne
outsl
inc
dec
test
lods
xchg
pop
stos
insb
fbstp
cmc
pop
jle
jbe
in
xchg
cmp
call
mov
sbb
or
int
adcl
lcall
sub
push
ret
xchg
inc
int
cmp
mov
or
daa
fwait
xchg
iret
adc
mov
fwait
cmc
xchg
dec
dec
scas
adc
dec
clc
dec
addr16
dec
inc
add
in
or
add
fucom
dec
sub
das
pop
sbb
imul
or
dec
xchg
jg
cwtl
popa
enter
inc
add
sbb
sbb
mov
cltd
adc
cmp
push
shl
push
dec
and
mov
pusha
imul
ja
filds
lahf
ficoml
push
push
aam
paddw
arpl
mov
ficompl
mov
add
mov
das
in
out
add
mov
jns
inc
push
clc
xchg
sbb
movsb
dec
mov
or
bound
sbb
es
adc
mov
lcall
out
mov
jbe
xor
or
cmpsb
lea
scas
insl
ja
inc
sub
jmp
adc
arpl
stc
sub
mov
mov
inc
adc
out
jecxz
mov
lret
mov
pop
and
outsb
popa
les
mov
outsl
inc
fs
dec
mov
cmpsl
mov
and
gs
mov
add
fisttps
mov
in
xlat
ja
lret
insb
int
push
outsb
jle
cmc
mov
jecxz
pop
inc
stos
sbb
out
dec
mov
sub
dec
push
xchg
ficoms
adc
mov
sahf
dec
mov
loop
or
inc
js
rorl
fldl
inc
sub
lods
aam
cli
int
cmc
xchg
mov
or
sbb
pop
jge
push
and
cmp
aaa
dec
bnd
pushf
fsts
icebp
or
cld
pop
jo
ja
out
outsb
popa
push
add
push
dec
add
mov
lahf
loop
ret
jno
scas
fwait
rclb
sub
aad
cmpsl
movsb
sbb
popa
pop
mov
dec
clc
push
lcall
lret
sti
sbb
sub
push
jl
sub
inc
mov
sbb
cmp
jmp
pop
adc
mov
inc
mov
pushf
lods
lcall
xor
jl
xchg
sbb
loopne
movsb
push
mov
mov
jo
mov
jae
lahf
jecxz
fcmovb
aad
imulb
and
fsubrl
ret
inc
fwait
jbe
mov
or
loope
mov
lock
adc
push
ret
sqrtps
pusha
xor
fwait
xor
aaa
dec
xchg
or
fs
sub
add
mov
push
xchg
pop
sti
out
pushf
xorb
mov
pop
nop
sbb
out
push
fadds
pop
jb
je
adc
dec
in
mov
xchg
mov
inc
push
neg
cwtl
es
sbb
mov
xchg
fcomi
les
decl
stos
jmp
dec
push
jge
and
cmp
xor
divl
insb
or
inc
sub
mov
sarl
sbb
shlb
ss
xchg
cmp
jne
lock
push
es
mov
xchg
inc
xchg
pop
jno
sbb
pop
mov
arpl
pop
idiv
dec
mov
sub
add
xchg
arpl
pop
xor
xchg
xor
or
inc
xchg
add
mov
je
push
push
insb
mov
fnstenv
inc
pop
inc
or
mov
lock
cmp
fsubrl
movsb
icebp
pop
sti
arpl
adc
pop
fsubrs
and
in
cmp
movsl
ss
sti
push
icebp
jns
jae
stc
das
leave
mov
cld
cmc
je
xchg
xchg
into
hlt
fwait
push
loope
dec
fwait
int
mov
aad
pop
and
jmp
pop
stos
test
mov
push
and
sub
lahf
decb
xchg
psubsb
jnp
adc
fsts
mov
adc
xor
add
xor
or
xchg
pop
cwtl
add
xchg
test
mov
and
xor
pop
pop
push
fimull
lods
imul
push
outsl
cli
xor
sub
dec
push
aas
mov
jno
and
ja
lahf
mov
jns
add
mov
ja
icebp
mov
cmp
shrb
cld
arpl
adc
imul
cmp
xchg
mov
nop
add
push
sub
push
lahf
cld
or
ljmp
sub
and
and
gs
jb
cmp
pop
fisubs
and
andl
not
mov
xchg
xor
cmp
push
fidivs
loop
ds
das
ljmp
push
data16
cmp
lock
adc
hlt
add
jb
and
popa
cmp
sahf
inc
and
loopne
fisubl
mov
stc
jo
and
inc
int3
in
int3
mov
dec
fnstcw
and
ljmp
mov
stos
sub
sahf
mov
jns
notb
rorl
call
xchg
pop
xor
inc
mov
sbb
push
cmp
or
lods
outsb
mov
or
mov
stos
sahf
pop
bound
sbb
shrb
js
loope
jo
jge
ret
jge
cld
aad
rcrb
jmp
dec
jne
mov
in
outsb
mov
loopne
push
out
shl
mov
inc
insl
pop
jle
xchg
and
es
inc
test
fwait
inc
inc
das
ljmp
fsubs
dec
imul
jl
movsb
scas
or
sbb
push
mov
mov
jge,pt
call
mov
sub
sbb
mov
jo
pop
pop
test
jl
push
repz
dec
xchg
cmp
or
test
dec
hlt
out
and
pop
lods
sbbb
pusha
stc
mov
push
cmpb
out
scas
scas
and
inc
xchg
cld
rolb
jb
add
bound
repz
sbb
mov
imul
imul
and
xor
insb
btc
pushf
shl
pusha
decb
test
push
xor
sti
xor
outsl
jae
stos
jno
jg
xor
xchg
sbb
iret
xor
mov
xor
xor
test
lods
or
fidivs
push
inc
bound
add
xchg
cmp
jns
push
mov
incl
ja
in
fwait
loopne
mov
insl
and
scas
cmp
in
pop
cs
push
xor
or
sub
out
fs
xor
add
cli
repnz
clc
xchg
adc
lret
jno
mov
add
cmp
aas
jmp
mov
mov
xlat
or
mov
adcb
stc
aam
in
dec
dec
mov
mov
xlat
push
pop
mov
ss
mov
movsl
add
dec
and
sti
daa
xor
xchg
mov
scas
dec
dec
or
ret
and
movsl
loope
imul
mov
mov
popa
inc
out
pusha
cmp
mov
push
ja
xor
xor
scas
iretw
lret
test
arpl
bnd
ljmp
or
mov
xor
sub
sar
and
xchg
cmp
jmp
insl
add
push
jp
shll
jge
and
push
addr16
inc
pop
xchg
lods
or
inc
pop
sbb
xchg
stos
fcmovbe
push
popf
push
dec
jne
sbb
jb
jns
dec
orb
sub
lret
push
push
in
bound
and
arpl
inc
mov
and
out
inc
jle
stos
dec
out
sbb
out
xchg
push
pop
hlt
dec
std
sbb
push
adc
push
adc
cmp
or
mov
std
iret
cmp
int3
inc
pop
roll
add
std
inc
inc
mov
data16
mov
movsl
jl
mov
xchg
mov
sbb
fildl
pop
inc
fbstp
ret
fdivl
in
mov
movsl
mov
cltd
push
into
push
inc
jne
add
add
add
xchg
call
pop
daa
xor
aaa
cmp
mov
bnd
inc
popf
negb
pop
cli
sbb
cld
lret
push
dec
inc
arpl
repz
scas
leave
ret
hlt
cld
add
lret
sub
fisttpl
hlt
cmc
jb
cli
movsl
mov
rorb
dec
xchg
fsts
je
sbb
sub
mov
mov
jbe
add
jmp
push
xchg
loopne
mov
mov
and
push
iret
sub
xor
loop
cltd
pop
arpl
mov
notl
sti
mov
pop
lods
push
arpl
and
cmp
or
dec
xor
jle
mov
xchg
in
mov
imulb
sub
push
add
pop
stos
push
sbb
in
rolb
cltd
or
pusha
xor
mov
scas
scas
sub
sbb
shll
cmp
aam
popa
jno
and
dec
jp
arpl
xor
rcrb
sub
rcrl
inc
decl
aas
push
mov
imul
cwtl
dec
pop
push
sar
sbb
inc
fnstsw
rcrb
ror
jns
sahf
leave
pop
das
mov
outsb
push
push
dec
jb
lahf
or
dec
inc
popa
lcall
lds
xlat
mov
jg
insb
fs
or
fcmovnbe
icebp
scas
pop
sarb
mov
decl
sahf
mov
mov
out
cmpsb
jns
insl
push
jae
aam
cmpsb
mov
cli
fwait
ret
xchg
ss
lock
sbb
jg
in
jmp
popf
adc
shlb
pop
mov
lock
fists
sub
ficompl
addl
movsb
xor
das
fs
mov
imul
add
repz
inc
outsb
lds
mov
and
lods
stos
shl
shrb
add
fildl
sahf
and
movsl
mov
fistps
jno
mov
fadd
mov
in
repz
mov
adc
fnstcw
stos
es
mov
aaa
xor
mov
pop
test
dec
fisubs
outsb
push
push
mov
loope
pop
cmpsl
mov
les
or
xlat
test
mov
insl
stos
stc
cs
lcall
add
cmp
mov
ucomiss
imul
or
inc
lock
popf
test
jo
cmp
sub
fcoml
jb
in
fstl
lahf
jge
icebp
pop
and
loop
call
mov
fs
nop
mov
nop
scas
filds
pop
imul
in
pop
sahf
cmp
loope
cmp
pop
popf
xor
sbb
pop
arpl
mov
inc
out
mov
and
push
add
out
repnz
push
xor
sub
ss
jp
mov
mov
xlat
in
dec
pop
clc
or
outsl
gs
les
movhps
imul
dec
mov
int
addr16
popf
imull
add
cmp
add
add
lret
pop
mov
mov
iret
pushf
mov
push
lahf
loopne
sub
test
sahf
call
xchg
out
adc
fs
mov
daa
mov
int
lds
add
dec
and
insl
sbb
lret
out
mov
mov
push
pop
sbb
lock
insb
test
stc
jae
das
cmpb
negb
push
dec
fwait
mov
fisttpl
enter
add
das
mov
xor
outsl
iret
and
sub
icebp
gs
cmp
sub
cmc
sbb
outsb
jae
out
cmc
xchg
sub
add
sub
mov
nop
or
gs
cld
cwtl
lods
pusha
and
and
imul
mov
push
mov
pushf
mov
idivl
jmp
cli
inc
les
out
movsl
fdivs
sbb
pop
fidivl
jo
es
fnstsw
cmp
aaa
int
imul
repz
pop
mov
shl
xor
call
cwtl
dec
mov
cmp
dec
nop
mov
sbb
jmp
hlt
or
imul
and
inc
fsubs
jne
cmpsb
js
xor
aaa
cld
mov
cltd
mov
hlt
lret
inc
stos
ja
and
loopne
mov
mov
adcb
mov
cmp
int3
insb
int3
frstor
or
jne
cwtl
nop
addr16
mov
icebp
pop
ja
clc
pop
xor
pop
pop
xchg
rol
or
jmp
sbb
int
push
jne,pt
mov
xor
mov
loopne
in
cs
iret
fdivp
xor
aad
dec
int
sti
push
push
test
nop
cmpsb
inc
add
ficoms
xchg
roll
xor
sbb
jge
cmp
stos
loop
es
adc
test
pop
mov
dec
jae
xchg
mov
stc
into
sub
andb
bnd
iret
mov
loopne
sahf
lret
mov
outsb
or
ljmp
xchg
xor
aad
inc
imul
lret
js
sub
inc
mov
in
jns
jl
pushl
sbb
mov
stos
daa
jge
mov
sub
mov
xchg
mov
loope
mov
push
xor
jmp
stos
push
pop
cli
cmpsb
xchg
xor
sahf
ljmp
pushf
das
lahf
aad
lret
repnz
std
es
add
cs
fs
lods
xor
arpl
jmp
mov
mov
mov
add
adc
pop
rcll
ja
add
ds
repz
mov
test
mov
xchg
xlat
mov
pop
nop
inc
xchg
mov
clc
fdivs
arpl
pop
mov
sbb
inc
vdivss
dec
sarl
mov
mov
aad
mov
dec
lds
pop
adc
push
outsl
cmp
xchg
push
add
fwait
xor
mov
dec
mov
push
out
inc
inc
lock
outsb
mov
xor
mov
das
in
adc
daa
pop
lcall
notl
pop
gs
mov
mov
pop
and
pusha
jl
add
push
pop
sub
rcll
mov
nop
rol
push
xchg
sub
stos
jge
clc
lea
jb
add
mov
insb
inc
pop
insb
push
mov
mov
mov
aas
outsl
sar
bound
mov
std
pop
mov
ds
push
push
cmp
mov
jl
js
int3
mov
inc
or
in
xchg
mov
pop
inc
and
sbb
outsb
sbb
mov
outsl
gs
push
push
push
fdiv
pushf
bnd
inc
test
in
icebp
scas
adc
and
fdiv
dec
dec
loopne
xor
loopne
lock
and
dec
in
pop
scas
add
neg
lods
inc
inc
psrld
sti
lcall
xor
mov
push
inc
mov
fmul
das
mov
fwait
aad
mov
nop
cs
and
leave
sbb
adc
mov
push
mov
sub
mov
inc
sahf
int
outsl
push
dec
jmp
fstps
pop
cltd
les
pop
lcall
xchg
xchg
cltd
lcall
aad
outsl
pushf
mov
push
mov
jo
es
es
loop
push
sub
cltd
hlt
push
pop
test
mov
out
imul
jbe
in
clc
adc
lods
enter
jns
out
xor
loop
xor
aad
pop
nop
cltd
add
pop
cmp
inc
enter
lret
sub
jmp
jmp
sbb
lahf
hlt
and
push
mov
inc
sti
pop
inc
lods
dec
rcl
ret
jae
mov
add
aaa
int3
jle
lret
dec
cwtl
fistps
cmp
and
loope
loop
jecxz
icebp
xchg
ret
sub
iret
leave
lods
adc
or
aaa
ja
cli
inc
add
sub
mov
shll
mov
fadd
mov
add
pusha
insb
xchg
jmp
jecxz
fstpl
aad
mov
aaa
adc
int
mov
inc
outsb
insl
mov
pop
xor
adc
pusha
clc
lea
mov
jnp,pt
lcall
adc
dec
add
in
push
into
dec
jge
testb
jns
mov
push
fcompl
pop
repnz
or
adc
inc
sub
push
mov
outsb
out
clc
leave
jg
pop
mov
xchg
mov
iret
mov
test
add
int3
lea
loop
jbe
push
and
ja
out
push
push
movsl
test
addl
orb
incb
push
lods
push
mov
and
stc
enter
inc
pop
add
jg
into
mov
xor
and
push
xor
add
sbb
xor
in
xchg
movsl
movsl
pop
lahf
pop
aaa
mov
mov
mov
dec
fs
fldz
push
xchg
dec
enter
jns
aam
xchg
es
ds
leave
movsb
xor
test
jae
pop
lock
xchg
jecxz
push
stos
ss
fmuls
sarl
push
lds
bnd
fimull
ror
test
leave
push
idivb
mov
lret
or
imul
int3
jo
xor
adc
call
sahf
cmp
popa
pop
mov
mov
pop
loope
imul
aad
sub
incl
in
xchg
or
add
mov
imul
cltd
xchg
pop
fsubrp
das
insb
jb
js
dec
xlat
icebp
jge
notl
jae
adc
xchg
ja
pop
sub
mov
push
stos
inc
ret
test
mov
pop
mov
jge
lods
jbe
cmp
xchg
hlt
aad
fucomi
jl
out
subb
xchg
lcall
pop
jge
jb
and
push
or
sub
jl
das
pop
dec
hlt
in
fildl
adc
jl
out
mov
gs
repnz
mov
aad
xchg
scas
add
xor
mov
orl
mov
shll
add
jl
lea
mov
loopne
loop
add
inc
in
popf
add
stos
pusha
mov
or
pusha
add
sbb
mov
and
pop
addr16
adc
test
jnp
inc
in
sar
push
cmpsl
fistpl
pop
jne
xor
cmp
push
xor
pop
das
jp
stos
jge
lods
cmp
outsb
mov
cmpsb
jb
mov
adc
loope
sub
inc
lock
inc
pop
or
out
lods
repnz
mov
cmp
mov
jmp
cmpsl
inc
jmp
cmp
push
negb
stos
sub
pop
and
adc
inc
hlt
hlt
adc
pop
inc
roll
shlb
insl
mov
mov
dec
cld
inc
cli
or
and
inc
lcall
lods
jnp
sbb
push
mov
loope
test
jb
jae
pop
xchg
jg
hlt
repnz
dec
mov
dec
mov
adc
and
add
sarl
loop
xchg
mov
int
add
mov
inc
inc
shl
lock
xor
dec
out
and
xorl
jnp
push
mov
cmp
stos
jnp
fimuls
push
scas
iret
push
pop
jl
xchg
mov
rorl
push
mov
sub
lahf
xlat
xchg
push
inc
in
outsl
test
js
jnp
mov
add
pusha
movsb
rol
sar
cmpsl
xor
repz
out
sbb
dec
pop
push
mov
leave
dec
xor
jb
dec
popf
pslld
push
xchg
cmpsb
and
rcr
sti
pop
adc
mov
fiadds
mov
jns
dec
mov
pushf
test
stos
aam
ret
scas
inc
lea
dec
inc
ret
frstor
adcb
pop
xchg
subl
xchg
push
or
roll
push
scas
lock
inc
mov
sub
and
fcmove
xchg
mov
mov
loopne
cmp
aam
cmp
mov
aas
jl
in
mov
adc
push
push
ds
ret
jo
adc
jns
or
es
loope
shl
dec
out
push
dec
cli
jo
lds
cmp
mov
mov
popf
jmp
jg
sarl
cmp
rcr
push
and
jmp
inc
stos
int3
sub
pushf
stc
sub
ss
ljmp
mov
inc
sub
mov
push
subl
xor
jp
shll
out
scas
sahf
mov
add
ss
inc
fiaddl
movsb
or
psrad
ljmp
mov
bound
cmp
cmpsl
and
rorb
inc
pop
in
xchg
or
ljmp
mov
pop
lahf
sbb
mov
and
cmp
nop
sub
outsb
cmp
jae
mov
mov
shlb
lock
stc
popf
mov
mov
cmpsl
cmc
cltd
cltd
sarb
push
es
dec
repz
xchg
cmpsb
mov
push
rclb
xchg
in
fldl
mov
lret
pusha
push
lcall
fdivrs
mov
or
lods
mov
mov
sub
jns
mov
repnz
lahf
shll
jecxz
pop
sub
add
shrl
mov
jo
adc
adcl
push
mov
shll
xchg
dec
loopne
into
xchg
sbb
adc
xor
inc
inc
jge
push
pusha
and
addr16
out
push
lret
popf
repnz
ret
jecxz
mov
bound
mov
rcll
adc
out
div
divb
push
cmp
jl
xor
inc
mov
pop
adc
imul
fcmovbe
jle
insl
pop
mov
bound
shll
hlt
cmp
dec
fwait
xchg
mov
mov
jae
fcompl
mov
inc
mov
sahf
mov
mov
lds
sbb
out
dec
jp
insl
push
pop
cmp
cmp
mov
in
fs
ljmp
rol
imul
jnp
cli
das
mov
pmaddwd
mov
dec
and
xchg
insb
mov
scas
xchg
iret
out
lret
bound
loope
es
push
inc
push
mov
test
jno
dec
dec
sar
sbb
ds
push
daa
loope
repnz
or
sub
mov
xchg
cmc
mov
or
pusha
scas
sub
adc
jae
leave
mov
js
jmp
inc
subb
lds
enter
pop
xchg
mov
add
orl
loope
xor
jo
daa
mov
jnp
pop
cmp
jbe
pop
mov
xchg
lods
mov
fs
push
aad
or
insl
ficomps
cmp
stos
imul
cmp
mov
or
jg
pop
mov
or
lea
mov
mov
jmp
jo
inc
out
and
mov
pop
sbb
mov
scas
mov
cmp
cmp
push
pop
ljmp
bt
insl
notb
and
out
xchg
sbb
xor
test
sub
mov
add
push
or
xor
pop
icebp
pop
ret
les
jo
cli
out
sub
fstps
scas
nop
in
sub
dec
and
pushf
or
ss
and
push
jns
std
mov
fldt
cs
push
pop
inc
sbb
bts
push
xchg
or
std
outsl
ficomps
dec
sub
mov
cmp
cli
and
mov
sti
je
or
lret
xor
cmp
iret
xor
idiv
inc
sbb
jnp
jge
pop
push
pop
xor
inc
cmp
fsubrs
fldl
dec
ficoms
iret
add
pop
ss
jl
in
mov
cmp
sahf
cs
js
inc
daa
jbe
inc
xchg
decb
inc
pop
xor
lock
adc
sets
std
je
dec
sbb
insb
mov
sbb
jns
arpl
cmc
stos
pop
fnsave
dec
mov
or
jg
mov
jno
inc
inc
dec
cmp
xor
cli
lods
aad
insl
jp
dec
in
jecxz
fwait
mov
movsb
aam
les
pushf
clc
sbb
push
into
mov
push
sahf
inc
pusha
int
mov
add
int3
xor
pop
mov
sbb
out
fdivrs
in
addr16
push
xchg
data16
bound
repz
pusha
xor
xchg
rolb
cmp
in
push
push
subl
sub
adc
sbb
jo
push
push
repz
sbb
push
adc
pushf
xor
loop
or
or
push
fcompl
inc
jg
jbe
fldcw
std
icebp
or
pop
pop
sub
add
cltd
or
scas
push
jge
lret
lret
fisubrl
fsts
push
cmpsb
mov
lods
xchg
das
push
inc
popf
xor
pcmpeqd
mov
les
scas
jns
out
cmp
pop
mov
cli
add
icebp
jbe
sbb
mov
cmc
fistpll
mov
aad
iret
jmp
packssdw
js
sahf
pop
scas
les
in
cmp
stos
push
cld
mov
sub
leave
les
jnp
mov
adc
cmp
das
sbb
xchg
adc
mov
fbstp
pop
sbb
mov
dec
inc
fnstsw
xchg
xchg
jle
stc
scas
adc
mov
jp
in
inc
add
pushf
xor
jno
xor
imul
out
inc
shlb
xchg
pop
mov
add
jecxz
scas
imul
mov
xor
imul
and
test
sub
inc
jle
fcmovb
xchg
loopne
dec
subl
aas
and
xchg
push
cmp
add
xlat
scas
into
scas
mov
jnp
xor
lret
add
scas
pop
inc
das
rorl
stc
cmp
or
push
lret
aas
mov
or
out
insl
xor
cltd
hlt
mov
sub
pop
jae
mov
jmp
mov
fwait
push
pop
pushf
inc
aas
js
test
movsb
mov
mov
cmpl
dec
ljmp
leave
stos
cmp
pop
cmpsl
cs
dec
xor
int3
xchg
int3
test
std
push
orb
lret
fs
jg
jno
fisubrl
xchg
and
movsl
pop
push
push
aaa
pop
sub
sbb
fidivrs
fbstp
imul
xchg
mov
js
xor
std
pop
mov
pop
jecxz
xchg
cmpsb
mov
fs
add
dec
or
inc
imulb
xlat
push
cmc
imul
xor
mov
stos
pop
pop
dec
jecxz
ss
mov
out
cmc
addr16
cs
lods
xlat
cmpl
test
int
mov
mov
vaddsubps
lds
xchg
arpl
aam
and
in
pop
sbb
push
mov
inc
sbb
mov
mov
cmp
dec
nop
inc
fmull
jae
and
dec
sbb
adc
outsb
repz
mov
pusha
push
int3
xchg
sbb
ss
push
sub
fmull
movsl
xor
dec
sub
pop
daa
xchg
ja
inc
sub
in
push
xchg
cmp
aam
je
iret
inc
xchg
mov
push
repnz
clc
jmp
mov
rolb
jbe
stc
lods
add
jno
sub
push
inc
shll
and
dec
mov
mov
cmpsb
cmp
ret
into
ja
jecxz
mov
repz
jmp
fucomp
outsl
sub
push
loop
xchg
jl
ja
adc
dec
pop
xchg
add
xor
imul
or
shrb
aad
add
mov
out
mov
push
and
mov
dec
or
cli
pop
sub
adc
aad
inc
aam
incl
xor
push
outsl
push
xchg
adc
and
inc
add
inc
stos
cmp
adc
cmp
mov
jle
out
push
push
das
cltd
inc
outsl
fsubs
jge
popf
and
iret
lret
mov
push
xor
pop
popa
aaa
imul
aas
xchg
push
and
ja
out
jb
jp
pop
mov
nop
xchg
les
mov
adc
sbb
pop
lret
xchg
andb
test
mov
dec
testl
xchg
push
xor
cmp
lea
mov
sbb
inc
push
in
cmpsl
mull
std
add
lods
enter
imul
push
mov
fsubl
out
out
aam
xchg
scas
pop
add
lcall
xor
sbbb
mov
bound
xchg
inc
inc
sbb
dec
xchg
divb
inc
inc
fildl
xor
mov
sahf
lret
cwtl
insl
les
int
or
push
jl
stos
ja
sbb
call
ds
shlb
inc
pop
mov
lds
cmp
pop
cmp
mov
testl
or
imul
popf
add
bound
clc
push
mov
xor
out
in
add
xor
jno
xor
or
push
lods
xor
into
clc
cmpsl
pop
mov
mov
lret
shl
mov
sbb
fiadds
and
hlt
aas
jmp
cmp
xchg
inc
or
push
fldcw
lcall
adc
lods
test
mov
and
mov
int3
adc
jbe
cltd
or
cmpsb
cld
movsb
sbb
das
std
mov
enter
inc
xchg
dec
dec
push
fwait
into
xor
arpl
xchg
in
xchg
add
jge
test
xlat
inc
or
loop
loop
mov
outsb
mov
pop
outsb
xor
jno
and
scas
arpl
cwtl
outsb
mov
inc
sahf
mov
mov
out
addr16
enter
dec
mov
popf
shl
fcomps
mov
mov
jbe
sub
sub
xlat
fisubs
jge
lods
int
dec
addr16
pusha
cmp
adc
jmp
xchg
movsl
rol
and
and
mov
sbb
repz
mov
stos
sub
lret
sarb
fiadds
mov
sahf
xchg
adc
mov
jno
inc
pop
xchg
xchg
xor
lods
hlt
jp
sbb
lock
jle
je
fisttpl
in
jmp
ficoml
jl
iret
sub
aaa
fsubl
or
mov
mov
xor
sub
fwait
cmp
mov
sti
icebp
addr16
adc
leave
mov
inc
lret
sbb
in
ret
adc
sbb
rcrl
test
aam
shrb
imul
popf
and
int
pop
ja
mov
or
insb
push
jp
xchg
lods
jbe
push
cmpsl
push
mov
lret
cmp
push
hlt
fisttpl
lret
rorl
ret
out
xchg
pop
sub
hlt
test
sub
mov
lcall
or
ljmp
mov
pop
mov
imul
std
add
rcl
int
out
ljmp
push
daa
inc
xchg
xchg
imul
xchg
cmp
dec
scas
clc
pop
mov
sbb
xchg
push
xor
inc
addr16
mov
std
or
sub
jmp
aas
jbe
jns
iret
mov
repnz
jne
ret
scas
jle
jl
mov
mov
dec
mov
das
stc
movl
xchg
push
outsl
sbb
stos
sbb
int3
inc
insl
addr16
shr
pop
sub
push
mov
pusha
mov
clc
sub
mov
std
xchg
or
jecxz
je
std
rcrl
and
das
gs
je
pop
mov
mov
lret
jae
push
data16
call
mov
mov
ja
ret
sub
mov
jb
imul
iret
lods
or
sahf
cmc
lcall
fimuls
dec
and
sub
and
sub
xchg
xor
adc
aam
push
jge
mov
ljmp
imul
filds
add
stos
es
sbb
jbe
mov
imul
in
shr
in
rolb
xchg
lret
ret
js
push
cmp
fcmovu
mov
dec
xchg
and
das
sti
mov
enter
jno
add
int
cmp
mov
mov
mov
cmp
out
cwtl
xor
jb
aad
call
je
sub
sahf
cs
testl
movsb
insl
cmpsb
mov
inc
test
lahf
loop
cmp
icebp
pop
cmp
jecxz
sti
xchg
sti
orb
pop
sahf
test
xchg
cmp
shll
dec
dec
push
xlat
jp
gs
or
movsl
popf
mov
sarb
imull
cmp
sbb
inc
sahf
xlat
pop
push
out
fiaddl
lret
sbbl
outsb
arpl
and
jbe
mov
pop
mov
jmp
cli
inc
inc
js
dec
in
mov
mov
and
mov
mov
push
mov
dec
sti
mov
xlat
push
push
dec
inc
or
mov
jp
nop
int3
in
dec
insl
push
leave
mov
and
push
adc
fcomps
and
mov
ficoms
lods
in
xor
xor
stos
sbb
push
mov
mov
dec
aad
sub
mov
mov
xor
movsb
cmp
and
outsl
rol
add
jl
xchg
insb
push
inc
mov
sarb
and
fnstenv
cmp
sub
subl
ljmp
idivb
fldcw
push
pop
shrb
enter
pop
in
mov
inc
sbb
iret
loopne
add
mov
clc
push
call
jge
add
pop
xchg
test
ljmp
mov
insl
sub
or
jno
pop
sbb
push
sahf
pop
pop
aaa
test
ret
inc
loop
jle
sub
je
mov
jl
ja
movsb
inc
inc
test
lods
cld
xchg
xor
fs
sub
fmuls
fdivp
xchg
and
adc
aad
dec
mov
push
mov
insl
call
lret
mov
scas
adc
mov
scas
dec
out
push
mov
leave
dec
jb
ret
mov
or
insb
fwait
pushf
scas
inc
pop
stos
or
pop
xchg
cmc
pop
fstpt
xor
push
nop
push
ss
leave
das
popa
cmp
sbb
imul
mov
xor
andb
gs
jno
outsl
lods
rorl
jp
mov
mov
lock
pop
sub
and
popl
lret
add
aas
es
mov
pop
push
add
push
mov
sbb
pop
lock
adc
cmp
cs
popa
lods
cmpsl
movl
sar
add
xchg
mov
mov
ret
xor
cmp
cmp
or
jmp
sbb
xchg
insl
nop
repz
jbe
cltd
adc
dec
in
sbb
and
dec
sbb
jecxz
xchg
mov
pop
jecxz,pt
shll
add
cmpb
aas
fs
jns
mov
xchg
xchg
cmpb
insb
sbb
sub
int
shlb
ss
imul
sti
jno
pop
shl
repz
aam
fcmovu
xchg
mov
push
xor
xchg
rcll
outsl
xor
inc
jp
mov
jb
lret
insl
cmc
and
fmuls
dec
out
outsb
push
and
or
xchg
adc
pop
add
leave
and
or
dec
sti
loopne
xchg
mov
jb
inc
shlb
or
shll
arpl
aas
or
xchg
pushf
movsb
cmp
jo
or
add
xchg
movl
mov
nop
or
rcll
in
mov
filds
sahf
push
dec
mov
ror
push
cltd
mov
fstp
jo
enter
outsl
ret
addr16
and
mov
loope
inc
out
push
jmp
xor
inc
in
stos
psubq
xchg
out
sbb
and
in
cmc
adc
gs
or
cmp
stos
aad
scas
jl
clc
push
sahf
mov
dec
adc
mov
fistl
dec
sbb
dec
roll
outsb
loope
xor
cmp
mov
loop
sub
cli
int3
and
xchg
mov
xchg
or
mov
mov
mov
inc
fwait
int3
and
adc
movsl
lods
arpl
and
mov
outsl
jp
sub
js
dec
ds
mov
xchg
add
mov
jle
or
pop
push
inc
dec
cmp
mov
add
pop
repnz
push
jns
out
loopne
inc
aad
add
mov
std
je
xlat
inc
fwait
mov
cmovae
add
fidivrl
adc
ja
mov
cmc
mov
lret
pop
jno
xchg
add
testl
adc
daa
jns
scas
arpl
dec
sbb
cmp
in
inc
cltd
sbb
adc
arpl
movsb
dec
sub
inc
sbb
mov
ljmp
loopne
int
pop
lahf
xor
ret
mov
cli
loopne
sub
add
add
add
inc
mov
add
or
dec
mov
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
