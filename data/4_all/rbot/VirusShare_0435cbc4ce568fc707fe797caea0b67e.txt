push
call
pop
mov
sub
sub
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
fbstp
sar
call
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
ds
data16
xchg
sbb
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
mov
lret
mov
aad
inc
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
das
ljmp
mov
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
and
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
cli
xchg
jb
les
adc
iret
mov
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
rep
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jo
jl
and
and
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
rorl
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
pop
lret
mov
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
stos
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
adcb
aaa
mov
inc
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
adc
pusha
inc
add
cmp
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fcmovnb
mov
js
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fdivp
lds
aas
outsb
lods
call
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
inc
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
imul
rorb
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
ja
xor
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
cwtl
inc
sahf
cmp
inc
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
fistpll
popf
rcrb
add
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
push
inc
mov
and
jmp
fildll
pop
fistps
imul
add
jo
fistps
add
popf
jmp
jmp
push
call
pop
scas
dec
mov
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
jmp
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
add
mov
enter
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
or
sub
sub
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
cmp
push
pop
std
push
add
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
adc
lret
and
inc
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
inc
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
js
jp
mov
mov
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
adc
aas
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
out
ret
inc
jge
aas
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
pop
sbb
in
mov
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
out
inc
adc
mov
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jecxz
hlt
inc
adc
xchg
sub
dec
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
xor
add
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jno
xor
fistpll
dec
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
or
inc
fldl
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jecxz
pushf
imul
test
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
rorb
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
shrb
adc
aas
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
cmp
mov
pusha
inc
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
icebp
mov
fcoml
ret
enter
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
stos
mov
fsubl
sub
mov
pop
inc
add
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
inc
sti
mov
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
cld
push
dec
mov
jmp
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
out
leave
popa
inc
js
cli
mov
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
xor
add
xchg
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
in
and
inc
leave
mov
jmp
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
pop
and
mov
jo
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
repnz
loopne
fs
test
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
loop
push
cmpsl
dec
push
mov
mov
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
and
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
inc
fildll
pop
fistps
imul
add
jo
fistps
add
popf
jmp
jmp
push
call
mov
enter
movb
jmp
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
push
add
aas
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sbb
std
inc
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
orl
nop
xchg
ljmp
dec
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
xor
das
and
test
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
jnp
adc
jmp
fildll
pop
fistps
imul
add
jo
fistps
add
popf
jmp
jmp
push
call
lods
dec
cs
jmp
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
repz
inc
xchg
sub
dec
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fsubrp
push
xor
test
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
repz
jne
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
arpl
cltd
int3
test
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
leave
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
sbb
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
cwtl
mov
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
popa
mov
je
xlat
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
nopl
lahf
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
sub
sbb
add
aas
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
rep
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
or
inc
fildll
pop
fistps
imul
add
jnp
fistps
add
popf
jmp
jmp
push
call
in
imul
jo
jae
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
or
mov
sarl
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
notrack
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
inc
nop
mov
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
pop
pop
sahf
sbb
in
jge
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jae
sti
xchg
mov
mov
jmp
fildll
pop
fistps
bnd
fistpll
fistps
add
popf
jmp
jmp
push
call
popf
aam
inc
jnp
aas
fildll
pop
fistps
bnd
fbstp
fistps
add
popf
jmp
jmp
push
call
cs
ret
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
call
movsl
xchg
mov
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
cs
jmp
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
pop
andl
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
hlt
xor
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
xchg
xchg
iret
and
add
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jae
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
popa
xor
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
icebp
sub
pop
xor
add
inc
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sub
jae
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
cwtl
loopne
mov
xor
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
daa
call
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
nop
les
insb
sbb
cmpl
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
aaa
inc
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
fcomps
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
dec
scas
jmp
fildll
pop
fistps
imul
add
jnp
fistps
add
popf
jmp
jmp
push
call
fnstsw
call
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
xchg
test
scas
dec
stc
mov
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
repz
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sub
in
push
jne
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
cs
sbb
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
stos
cltd
enter
jmp
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jmp
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
stos
lock
icebp
mov
call
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
or
dec
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
lcall
push
loop
jmp
jmp
jmp
fildll
pop
fistps
in
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
push
xchg
adc
xchg
push
add
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
adc
aas
rol
jmp
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
adc
mov
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
or
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
xchg
adc
aas
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
test
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
sub
out
adc
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
movsb
inc
popf
mov
add
add
cmp
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
lahf
mov
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
lret
inc
pop
sub
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
push
push
daa
std
pop
inc
imul
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
pop
xor
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
aad
mov
inc
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
lahf
adc
call
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sbb
jae
cmp
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jno
cltd
inc
lods
lods
out
cld
jae
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
subb
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
out
jge
push
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
jae
test
inc
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
pop
enter
add
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
sub
inc
jb
das
dec
or
cmp
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
push
inc
bound
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
pop
jmp
fildll
pop
fistps
imul
add
jae
fistps
add
popf
jmp
jmp
push
call
repz
out
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
arpl
push
add
std
sti
jmp
fildll
pop
fistps
imul
add
jnp
fistps
add
popf
jmp
jmp
push
call
jbe
xchg
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
lds
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
xchg
sbb
call
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
int
lahf
jmp
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
and
lcall
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
fcomps
out
and
xchg
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
mov
inc
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
push
mov
rep
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
sub
push
mov
inc
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
test
inc
and
push
idiv
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
and
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
pop
and
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
mov
push
movd
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
inc
cmp
outsl
mov
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sahf
xchg
push
inc
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
pop
adc
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
cmpb
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
into
sbbl
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
idivb
xor
fldpi
inc
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
push
inc
sbb
leave
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fs
sahf
mov
or
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
inc
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jmp
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
pop
stc
es
daa
lret
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
into
out
scas
leave
cmc
aas
and
leave
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
and
test
dec
dec
call
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jb
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
test
ret
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jmp
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
xlat
sarb
mov
jl
sub
aas
fildll
pop
fistps
bnd
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
or
cmp
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
shlb
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
clc
lea
jns
ret
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
movb
add
add
add
pop
add
or
add
faddl
add
or
add
and
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
or
arpl
xchg
nop
mov
add
add
add
add
cmp
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
cmp
loop
or
loop
or
loop
or
add
add
mov
or
mov
or
mov
or
add
add
add
inc
popa
je
insb
inc
js
je
xchg
nop
add
or
add
add
add
lock
add
mov
cmpl
pop
call
push
push
add
fucomi
gs
add
and
pop
mov
je
push
mov
push
add
push
lea
jmp
jl
call
push
sti
dec
dec
mov
add
into
les
jle
pop
jne
pop
pushl
or
inc
inc
xor
push
aas
jno
and
pop
jno
adc
daa
push
icebp
jne
push
cwtl
or
or
cmp
jo
and
rorl
sbb
leave
ret
gs
push
call
test
pop
jle
add
lds
adc
xor
push
jne
sub
or
jmp
push
nop
movsb
enter
movsl
jns
repnz
sbb
pop
sub
ja
add
xor
cmp
inc
cmp
or
je
sarb
cmp
pusha
and
push
call
cmp
xor
inc
mov
push
mov
push
push
mov
mov
pushf
xor
add
inc
mov
push
push
call
sbb
cwtl
mov
andl
inc
ds
mov
jns
sbb
push
sub
add
sub
xor
enter
sbb
std
fistl
push
push
adc
xchg
or
push
push
sbb
mov
fisttpl
xor
mov
cld
inc
lds
jge
sbb
push
mov
mov
imul
cmp
mov
sbb
add
lock
jmp
mov
cwtl
ret
lock
push
add
and
or
push
push
xchg
push
or
add
pop
into
int3
je
or
push
rclb
fmuls
inc
push
and
cwtl
pop
aaa
push
inc
fisubl
lea
sub
mov
in
adc
and
call
pop
mov
test
mov
inc
pop
mov
or
dec
ret
adc
dec
or
pop
pop
inc
cmc
adc
and
and
dec
mov
and
add
std
pop
xor
hlt
push
and
fnsave
dec
push
mov
fxch
sti
sbb
dec
cmpsl
arpl
outsb
sub
bound
outsl
or
movsb
sub
bound
pop
fs
cli
into
ljmp
ss
push
inc
clc
cld
xor
cltd
inc
mulps
xor
xor
jno
lock
dec
fists
mov
lods
and
push
daa
or
sbb
outsl
rcrb
clc
adc
pop
or
add
dec
jmp
lock
out
add
sbb
or
and
clc
inc
push
lods
sbb
sbb
sub
push
in
mov
xor
inc
cmp
ja
push
mov
push
adc
lock
movsb
popf
sti
and
ja
xor
add
call
xchg
adc
mov
push
jle
add
push
xchg
outsb
jo
mov
aaa
sbb
ds
adc
push
rorb
adc
cmp
jb
mov
mov
adc
push
push
adc
clc
xchg
jg
jg
cmp
cmp
lahf
xchg
pop
pop
sub
mov
push
inc
nop
pop
lea
movsl
fdivs
sub
mov
fmuls
inc
mov
icebp
test
aam
mov
adc
movsl
xchg
jge
xor
je
test
int3
push
and
stc
inc
into
mov
mov
les
mov
std
adc
and
mov
dec
xor
mov
aas
sbb
daa
sub
xor
mov
or
sub
add
loopne
xor
xor
movsl
sub
fs
adc
pusha
in
subb
adc
call
aas
mov
adc
xchg
mov
aad
rol
cmpsb
and
cmp
and
mov
jmp
push
clc
push
add
es
xor
clc
sbbb
adc
push
cmpsb
andb
or
push
mov
call
and
add
xor
add
xor
ss
pushf
adc
mov
mov
das
inc
imul
mov
frstor
push
push
jl
mov
cmp
xchg
push
loopne
test
ja
dec
out
push
pop
push
inc
adc
adc
int3
add
mov
dec
lock
and
in
mov
dec
test
xchg
fs
dec
inc
test
cmpsb
mov
call
and
dec
addb
adc
mov
and
jecxz
or
pop
or
dec
mov
dec
es
adcl
jne
push
xchg
sbb
les
call
xor
inc
mov
add
faddp
out
loopne
add
xor
push
sbb
imul
enter
add
imul
orb
lcall
and
fsubrs
cltd
repz
iret
call
dec
cmp
xor
fcoms
gs
sbb
push
aam
mov
pop
adc
rcl
inc
cmp
jbe
sti
shlb
pop
lock
inc
ljmp
and
cs
je
imul
out
aad
je
mov
iret
in
add
push
inc
push
lret
stos
push
js
xchg
and
pop
mov
xor
gs
or
in
hlt
and
shrl
xchg
or
nop
and
or
call
push
lret
push
add
andl
cmc
push
mov
mov
loopne,pt
pop
push
sbb
inc
pop
cmp
pop
inc
jg
out
or
testl
lds
sub
inc
cmp
inc
xchg
bound
ss
jae
in
push
push
xchg
stos
adc
fcmovne
and
add
pop
mov
cld
push
pop
cmp
xchg
dec
adc
and
in
xor
xor
xor
lea
sbb
push
sub
sbb
fildl
cmp
inc
mov
xchg
stos
inc
pop
mov
pushf
sub
and
mov
dec
or
and
loope
add
push
loop
xchg
push
je
pushf
add
fistpll
fimuls
jge
movzwl
adc
add
adc
mov
test
mov
xchg
insb
sub
ljmp
mov
dec
and
adc
movsb
push
adc
pop
mov
mov
add
fwait
jl
add
dec
and
push
mov
jne
push
pushl
sti
xchg
or
add
call
xor
and
pop
les
adcl
mov
adc
jne
test
adc
or
ss
or
sahf
pop
sbb
xor
xchg
lea
pop
in
xor
jno
sarl
add
push
lock
cld
int3
mov
jne
push
or
gs
cmpb
das
jb
loope
push
sub
test
mov
sub
mov
outsb
dec
shrb
test
cltd
insb
cwtl
out
push
jge
movsb
mov
cmp
sbb
sbb
adc
inc
ret
sbb
push
jbe
push
jb
mov
pop
fbstp
cmpsb
push
in
add
dec
popf
call
xor
or
sbb
pop
call
mov
sbb
inc
xchg
mov
int3
aaa
nop
shlb
idivb
and
lcall
pushl
mov
in
inc
pop
push
adc
jge
je
fs
xor
mov
push
push
push
sbb
adc
movsb
or
aam
pop
or
inc
sub
adc
jb
cmp
test
push
test
adc
lds
outsl
nop
sbb
pop
lret
aad
mov
fnstsw
clc
mov
add
decb
test
sub
push
stos
dec
in
iret
adc
faddl
sub
movsl
test
jmp
push
cmp
cmp
mov
test
test
or
fsts
ret
mov
add
push
inc
xor
out
adc
adc
cld
adc
or
and
sub
test
repz
pop
cli
jno
cmp
push
mov
sbb
push
jbe
rcr
and
rcll
jns
ds
adc
mov
mov
movsb
das
inc
cld
and
adc
mov
xchg
dec
push
inc
pop
cld
jl
mov
cmpsl
mov
outsb
and
mov
cmp
inc
xor
popf
pushf
out
mov
jmp
dec
add
add
outsb
ljmp
pop
adc
jmp
sub
pop
dec
xchg
push
pop
ja
pop
add
cltd
popa
xchg
push
dec
out
jecxz
mov
mov
jo
xchg
or
or
hlt
roll
adc
push
sub
add
push
xchg
and
dec
mov
cltd
sbb
test
lock
subb
rcrl
or
stos
mov
push
jne
push
inc
nop
xchg
sbbl
mov
push
mov
call
inc
and
cmp
push
lds
scas
idiv
stos
sub
inc
sbb
sbb
je
sti
sbb
fcoms
clc
cmp
scas
mov
or
clc
ret
push
sarl
add
mov
pop
push
cmp
add
push
push
fcmove
and
xlat
popf
aad
xor
inc
dec
loope
rolb
jne
cltd
or
and
lods
lds
mov
mov
mov
cs
add
xchg
enter
cli
xor
inc
es
pusha
lea
xchg
push
or
cmp
pop
push
xor
xchg
sub
dec
adc
rcll
push
sbb
sbb
scas
adc
testb
in
int3
daa
mov
notb
or
sub
adc
stos
push
xchg
xor
push
cmp
inc
test
lods
xchg
adc
push
mov
cltd
sbb
or
in
dec
and
outsb
nop
sti
or
jne
movsb
jmp
or
or
or
xchg
les
or
cmp
push
fisubs
jmp
int3
push
push
push
cmp
and
adc
push
in
cld
xchg
and
or
dec
add
leave
call
mov
sub
adc
sub
and
repz
jmp
cltd
outsl
adc
dec
in
cwtl
cmp
jno
adc
jg
mov
adc
lds
mov
dec
add
inc
dec
or
je
push
adc
js
and
and
or
inc
mov
sub
sub
push
push
jno
mov
xchg
push
cmp
adc
and
push
lret
call
int3
jno
or
or
sbb
mov
jmp
stc
cld
push
mov
ss
xor
jo
add
cld
ret
aam
notb
lret
push
push
dec
stc
or
push
in
popa
in
sbb
pop
xchg
lret
dec
dec
dec
dec
stc
enter
dec
inc
adc
mov
add
pop
push
es
mov
push
push
dec
in
mov
add
inc
push
imul
cmc
push
jae
jns
int3
pop
pop
pop
inc
xor
aam
or
dec
push
hlt
ds
xchg
pop
adc
xor
adc
sbb
push
dec
inc
ds
jbe
push
scas
lods
mov
call
sbb
inc
or
aas
mov
imul
movsb
dec
test
adc
subl
or
or
push
mov
ret
das
xor
jbe
inc
and
popf
sbb
adc
adc
cltd
movsb
xchg
je
mov
out
les
mov
int3
push
or
cld
push
call
adc
sbb
dec
xchg
push
int3
pop
push
jo
or
adc
nop
mov
mov
mov
mov
clc
and
adc
mov
jmp
push
cmp
dec
daa
xchg
inc
je
stos
or
adcb
pop
push
jno
adcb
faddl
inc
and
adc
push
inc
mov
pop
sub
es
dec
dec
adc
leave
xlat
sbb
aas
lret
jmp
xchg
out
dec
adc
inc
mov
inc
xchg
sub
and
sbb
addb
xchg
scas
orb
mov
mov
shl
jb
sbb
mov
cmpsb
and
in
cmp
ret
sahf
out
or
add
test
pop
dec
je
or
out
add
pop
not
pop
pop
ret
push
adc
push
notb
jns
dec
ret
dec
add
popa
mov
sub
fdivrl
clc
pop
jae
daa
jne
rcll
xor
xchg
test
fs
push
mov
inc
add
or
testb
je
dec
push
push
outsb
lret
lahf
xor
iret
dec
pop
cmpsb
pop
imul
insb
dec
mull
test
mov
gs
or
fstpt
add
call
dec
shlb
add
inc
in
es
int
insl
out
mov
mov
add
aas
and
adc
push
xor
and
and
mov
push
rcll
inc
fadds
xchg
pop
in
add
test
fs
pop
dec
mov
insb
sbb
push
push
jbe
lret
pop
xchg
sbb
es
mov
or
cltd
add
add
push
pop
f2xm1
ja
repnz
add
jg
push
repz
out
inc
add
sub
inc
test
loopne
push
push
mov
out
aas
icebp
fidivs
call
std
or
in
pop
ljmp
inc
mov
add
test
loopne
sub
xchg
cmp
jns
and
cs
push
loopne
int
inc
jbe
in
mov
fdivr
sahf
jcxz
jbe
imul
stos
mov
inc
in
roll
in
and
lret
stc
add
and
dec
popf
fwait
cmp
call
ret
dec
call
push
push
or
leave
fs
push
mov
adc
xor
xchg
cwtl
pushf
jg
jp
repnz
cmp
mov
movsb
paddw
and
mov
jge
xchg
sub
pop
inc
dec
mov
mov
push
fcoml
push
xor
add
and
nop
add
mov
in
shrl
xchg
test
mov
sti
or
inc
inc
jg
sbb
cmpsb
add
lahf
push
dec
dec
mov
sbb
push
push
or
imul
je
xor
inc
sub
outsb
push
mov
adc
outsl
jno
and
lods
inc
xor
pop
lods
fldenv
out
sub
pop
nop
push
bnd
mov
push
popa
inc
inc
pop
aas
outsb
lcall
decb
stos
dec
pushf
out
dec
popf
int
push
dec
lret
into
xchg
dec
mov
push
adc
jle
xor
popf
jge
subl
sbb
mov
push
cs
or
dec
add
js
or
add
jne
jne
sub
test
aad
ss
push
pop
inc
sub
adc
push
je
xchg
pop
sbb
xor
hlt
push
enter
dec
cmp
adc
push
repnz
addr16
je
sahf
imul
inc
or
mov
lock
sahf
push
and
or
push
fldpi
add
ds
movsb
mov
and
mov
imull
and
dec
sbb
mov
push
inc
cmovge
add
pop
scas
dec
push
mov
push
inc
lods
add
cmp
clc
xor
push
xchg
sbb
dec
cwtl
insb
addr16
dec
inc
out
adc
jmp
cmp
adc
mov
push
jle
mov
cli
sub
es
ficompl
test
push
and
pop
push
in
pop
fxtract
xor
push
mov
or
js
and
test
sbb
jb
and
sarl
jne
imul
je
lods
pop
mov
adc
mov
loop
adc
mov
and
cmp
ret
adc
mov
ljmp
mov
add
sub
lods
mov
push
push
mov
dec
fidivl
and
ljmp
push
jmp
rclb
fildl
ja
add
ret
lcall
aam
xchg
outsw
jl
xor
jnp
cmp
int
jbe
sarb
or
lods
rol
adc
shlb
decb
clc
inc
lds
jns
mov
jne
push
xorb
movsbl
rorb
sub
inc
lret
loop
jbe
int
scas
nop
mov
push
inc
mov
ljmp
push
das
cmp
shlb
xor
cs
fs
push
mov
jo,pn
jnp
jo
adc
pcmpgtb
cld
sbb
inc
sbb
cmp
push
dec
adc
and
and
stos
inc
or
enter
jne
int3
push
pop
add
daa
lahf
rcrb
xchg
adc
cmpsl
test
push
and
andb
push
dec
dec
adc
and
push
and
out
mov
aas
mov
inc
inc
jne
push
xchg
sahf
jg
cmp
jmp
cmp
insb
jecxz
cmp
mov
js
cmp
and
mov
adc
jmp
mov
movsb
repz
fmuls
push
daa
adc
loopne
daa
dec
sub
xchg
sbb
adc
adc
mov
dec
ss
stos
sbb
lock
mov
popa
adc
aas
pusha
ret
jl
cld
or
mov
test
dec
mov
jbe
dec
sub
push
test
xchg
and
inc
into
or
mov
xor
in
xchg
cwtl
movsb
dec
movsb
lcall
les
xor
daa
pop
out
jb
ret
mov
add
and
fwait
mov
push
jg
push
inc
stos
divl
aad
mov
adc
lcall
les
arpl
inc
push
movsb
or
dec
and
std
mov
sub
pop
fwait
test
nop
xchg
enter
mov
dec
adc
lahf
adc
jae
cmp
jne
pop
mov
dec
push
pop
xchg
inc
fistl
xchg
jo
pop
or
inc
inc
jnp
cwtl
loopne
dec
xchg
in
inc
push
stc
or
das
lcall
sti
inc
or
sbb
adc
adc
enter
ds
adc
add
ljmp
jnp
ss
mov
cmp
or
cmc
das
hlt
mov
inc
mov
subb
movsl
repnz
push
push
adc
xlat
xchg
fcompl
pop
cmp
les
int
loopne
inc
mov
scas
mov
sub
jl
sbb
mov
mov
inc
and
nop
sbb
cmp
adc
dec
cmp
test
pop
sub
adc
push
or
fsts
xchg
fnsave
add
pop
inc
inc
jl
hlt
mov
lds
mov
lods
xlat
shl
retw
inc
shlb
mov
rep
jb
mov
mov
inc
sbb
int3
arpl
fadds
or
cld
push
mov
push
fstps
dec
rorl
dec
add
lret
roll
jne
xchg
cmovs
test
ret
fnstcw
enter
sbb
or
pushf
add
mov
popf
xchg
scas
sbb
push
mov
dec
loop
fnsave
inc
fldcw
pop
lods
jecxz
loop
xlat
test
in
push
sbb
jbe
add
icebp
les
adc
or
pop
xor
test
adc
loop
inc
cwtl
aaa
add
xor
xchg
push
xchg
push
test
xchg
mov
fcoml
jle
iret
pop
sbb
and
rorl
mov
mov
adcb
insb
inc
insb
push
xchg
dec
fbstp
aaa
in
mov
adc
daa
push
arpl
adcb
sub
mov
xlat
shr
mov
jl
jbe
push
test
ss
je
xor
add
movb
push
pop
idiv
fdivr
or
jne
xor
int3
lods
stos
sbb
adc
rolb
adc
or
mov
xchg
cwtl
fldenv
dec
push
mov
sub
fs
add
pusha
xchg
int
mov
pop
popa
jecxz
xor
test
daa
mov
push
inc
dec
pop
ret
mov
cmp
clc
dec
mov
out
and
adc
cmp
or
inc
pop
pop
sbb
sbb
sub
sar
xchg
pusha
fs
dec
mov
xor
mov
outsl
push
enter
xor
test
push
enter
xor
add
cwtl
dec
cmp
fcoms
ret
push
sub
push
mov
aam
mov
das
ret
pop
cmp
pop
and
lods
ljmp
add
or
repnz
cwtl
inc
inc
inc
inc
adc
push
jbe
and
dec
arpl
add
fnsave
and
iret
movsl
jnp
and
add
sbb
sbb
lds
into
jecxz
xchg
clc
imul
popa
sarl
les
push
dec
enter
bound
and
dec
rorl
or
jb
cwtl
cwtl
mov
pop
push
push
xor
dec
std
cmpb
repnz
lock
test
add
les
ret
jmp
mov
push
scas
jmp
xchg
hlt
push
push
sbb
mov
push
mov
sub
mov
xor
sbbl
js
push
sub
jmp
or
jno
sbb
push
orl
aaa
and
xchg
cmp
sahf
sbb
das
sbb
fcoml
les
test
inc
cmp
insl
aas
cltd
sbb
sub
dec
dec
inc
loope
sti
push
out
inc
xchg
repz
scas
jmp
js
jge
lds
push
adc
pop
push
je
mov
jmp
push
enter
adc
pop
push
dec
sub
cld
jmp
scas
sub
call
pop
push
outsb
xchg
dec
jmp
dec
adc
pop
test
std
dec
bound
xor
testb
and
adc
push
inc
inc
dec
push
jl
fsubrp
push
mov
xor
daa
or
inc
xor
int3
mov
jo
lods
dec
mov
and
xchg
in
int3
sbb
data16
in
jmp
mov
repnz
ja
inc
xor
inc
out
xchg
mov
sub
outsl
movsb
aad
push
mov
lods
les
int
out
dec
movsl
push
push
inc
inc
push
xchg
cmp
and
sub
push
rclb
in
adc
and
aaa
jno
and
fisubrs
lcall
push
or
mov
push
cli
xor
xor
and
and
insb
push
push
in
mov
rolb
cwtl
push
or
out
adc
hlt
in
adc
cld
push
and
jo
mov
sbb
mov
adc
insl
mov
jmp
mov
es
shl
fs
mulb
int
jnp
mov
adc
sbb
loope
cs
or
imul
and
incb
test
sub
in
jo
xor
fldt
ja
lock
movsl
dec
xchg
jmp
and
adcb
in
insl
les
sbb
sti
push
pop
hlt
inc
std
jle
outsb
xchg
add
or
sbb
jb
orb
stos
push
xchg
sbb
pop
outsb
mov
test
mov
das
mov
inc
sti
adc
fcmovu
mov
or
and
xorb
adc
push
loopne
push
dec
ret
pop
mov
mov
push
jecxz
ja
push
incl
push
mov
test
cmpsb
pop
and
push
inc
mov
mov
push
jge
inc
dec
jle
in
pop
dec
push
lods
dec
xchg
mov
test
addr16
mov
adc
jge
add
mov
aam
or
pushw
sbb
push
pop
fdivrl
sub
push
mov
cltd
mov
stc
push
xchg
sbb
adc
repz
sub
dec
loopne
call
rcr
xor
jmp
push
fisubrs
sbb
inc
lock
cmp
push
and
test
cltd
mov
hlt
sub
add
sbb
and
loopne
mov
push
xchg
push
movsl
lods
xchg
cli
in
push
sar
push
adc
push
pop
into
sbb
aas
pushf
mov
and
cltd
push
mov
push
insl
add
pop
push
pop
adc
jo
int3
lret
cld
mov
adc
add
push
scas
pop
jg
imul
cmp
out
stos
unpckhps
push
push
sbb
sbb
stc
lahf
mov
dec
test
and
push
add
nop
add
xchg
push
sub
mov
sbb
push
lods
shll
or
subl
int
mov
push
sbb
push
loope
cmp
xor
dec
les
cmp
mov
mov
push
scas
inc
int
inc
xor
add
ss
pop
xor
dec
mov
adc
push
scas
sub
int3
mov
inc
adc
add
cmp
enter
jl
in
clc
adcb
and
cmp
bound
out
mov
cld
mov
jmp
jno
add
repnz
and
and
fisubs
pop
cmp
addr16
adc
lock
pop
mov
xor
pop
lock
inc
and
push
sarl
lea
mov
push
dec
cld
enter
cld
fmul
add
loop
stos
out
inc
inc
xor
in
inc
nop
mov
mov
cmp
sbb
inc
adc
and
subb
mov
and
mov
and
mov
mov
adc
xchg
popa
dec
test
xor
cli
or
mov
std
xchg
adc
icebp
aad
scas
xorb
pop
test
mov
rolb
push
pop
ss
adc
outsl
and
and
fcoms
or
flds
subb
adc
mov
pop
mov
push
lahf
mov
mov
pop
nop
push
sti
jae
and
push
sub
xor
push
mov
jp
rcr
aaa
jge
scas
jno
add
aas
mov
shr
push
cltd
dec
mov
daa
add
jge
add
sbb
add
mov
daa
xor
ja
loop
push
aaa
je
mov
imul
push
mov
sub
les
aam
xor
mov
sub
sbb
icebp
sbb
rcll
adc
dec
or
call
add
pop
je
out
xchg
loope
stc
push
pop
mov
test
adc
mov
xor
and
dec
in
dec
adc
add
mov
dec
stc
and
ret
mov
insl
sub
test
fnsave
sbb
and
dec
mov
jg
es
sbb
pop
bound
ror
cld
ror
cmpsb
adc
pop
jmp
add
pushf
stos
movsb
jo
int3
sub
enter
icebp
test
cmp
outsl
jle
mov
rcll
and
sub
dec
adc
and
mov
rolb
push
inc
sub
sbb
add
xchg
and
insb
mov
adc
push
out
test
xor
jecxz
dec
das
xchg
cmp
iret
data16
and
push
sub
repnz
in
ljmp
pop
shrb
sub
adc
sub
add
scas
adc
mov
roll
pop
mov
pushf
and
sbb
jb
add
leave
stos
pop
mov
jle
mov
xor
inc
cmp
and
aad
push
push
call
cmpsl
push
mov
lret
cmp
or
mov
sbbb
fsubl
out
aaa
and
or
cmc
addb
xor
mull
ret
or
push
imul
pop
cltd
negl
stc
test
jo
push
or
jmp
or
mov
mov
add
lea
cmp
jae
repz
insb
mov
xchg
and
aas
nop
outsl
sbb
call
fsubrl
repz
and
sbb
push
cs
xchg
fadds
and
nop
enter
mov
mov
sbb
enter
iret
jl
push
lock
and
push
cld
mov
cld
lock
or
icebp
jg
adc
push
mov
clc
rep
pop
notb
add
ja
repz
in
pop
dec
mov
mov
xchg
fs
hlt
xor
mov
mov
imul
dec
das
js
xchg
leave
push
mov
mov
push
sub
lock
pop
fs
ljmp
dec
loop
daa
inc
cld
clc
and
pusha
adc
into
push
pop
jmp
mov
out
push
lds
xor
imul
sbb
pusha
repnz
or
adc
lret
loopne
sahf
push
pop
loop
jo
std
insl
sbb
or
imul
jle
xor
dec
sub
push
cld
mov
push
test
sti
xchg
lds
jmp
cs
jae
pop
mov
mov
fs
insb
ss
cmp
push
push
dec
rep
test
and
mov
into
es
xor
adc
repz
mov
popf
fdivs
lea
jo
mov
imulb
bnd
clc
push
push
adc
cmp
add
je
push
daa
outsl
daa
push
fistpl
adc
dec
inc
leave
sbb
cmp
es
sarb
sbbb
jne
rcrl
mov
push
pop
add
mov
mov
call
cmpsb
rcrl
dec
sbb
shll
jbe
and
imul
or
pop
push
sbb
lahf
jne
pop
mov
movsb
std
inc
movl
fsubrs
mov
or
shll
xchg
test
lds
stos
gs
out
and
lods
or
mov
push
imul
daa
and
inc
pop
push
test
cwtl
mov
and
adc
adcb
shr
add
fs
sbb
stos
ljmp
push
cmpsl
sbb
xchg
jl
push
ret
in
sub
or
and
mov
pop
pop
adc
and
lret
sbb
cli
push
adc
test
repz
and
aam
fs
adc
enter
and
mov
enter
dec
pop
pop
daa
pop
popf
sti
stos
pop
mov
les
or
and
shll
ja
int3
sub
push
and
push
dec
add
mov
dec
sbb
xor
xchg
lcall
js
mov
mov
dec
xlat
icebp
outsl
xchg
mov
jno
sbb
cmpb
enter
ss
xchg
or
in
imul
xchg
push
mov
repnz
push
lds
push
push
push
sbb
jg
or
sub
enter
in
dec
fs
jbe
test
lods
xchg
cmpsb
push
dec
out
push
std
push
scas
xchg
clc
push
test
test
test
xchg
xchg
push
mov
mov
and
adc
push
lret
pop
mov
mov
mov
pushf
add
in
xor
mov
xor
call
call
repz
cmp
add
and
popa
test
call
add
mov
shrb
xor
push
add
hlt
arpl
lods
and
and
clc
gs
push
test
sbb
in
lea
call
jecxz
push
rcrb
lods
jae
mov
repnz
repnz
adc
jg
test
inc
pop
call
cmp
add
mov
out
sub
sahf
push
mov
dec
pop
sti
and
inc
and
sub
push
xor
inc
repnz
add
add
repnz
push
hlt
mov
daa
inc
xor
sbb
jns
movsb
and
pusha
fs
div
je
insb
mov
pop
jmp
push
xchg
js
movsb
push
mov
sarl
xchg
mov
add
stc
rorl
fstps
and
xor
push
push
inc
test
and
je
cmp
popa
call
cmp
cs
es
adc
jl
fnstenv
test
stos
sub
mov
push
push
xor
sbb
xor
add
sbb
push
xor
fnstsw
inc
cmp
rclb
addw
or
lods
adc
xchg
inc
add
ret
jns
gs
pusha
push
loop
pop
xchg
inc
adc
aaa
pop
push
stc
insb
and
jne
rorl
mov
subl
push
jno
xchg
jbe
xor
and
pop
lods
xchg
ret
std
jne
in
rolb
pop
movsb
pop
mov
orl
rclb
and
and
popa
sbb
das
or
test
out
sti
sbb
jb
pop
popf
outsb
fisubs
jmp
out
je
sbb
test
add
fists
dec
movsb
lret
push
js
cwtl
inc
or
jnp
xor
cmp
pop
cwtl
and
mov
and
fcmovbe
nop
clc
sbb
xchg
add
or
std
jg
pop
shll
jmp
push
mov
jne
jae
pop
xor
sarb
enter
test
push
and
adc
rcll
clc
fmull
add
dec
roll
daa
jno
dec
movsl
dec
sbb
mov
adc
pop
je
test
loop
inc
add
out
add
jb
jmp
xchg
das
imul
mov
adc
je
and
xor
sbb
sbb
jl
shr
and
mov
sub
jnp
push
add
inc
sbb
mov
test
cmp
add
inc
cmp
repnz
pop
shl
lock
mov
pop
hlt
pop
mov
daa
and
add
andl
push
dec
mov
les
sarb
xchg
hlt
adc
andl
and
je
push
xchg
inc
outsl
add
push
sarb
in
outsb
sahf
mov
cld
and
cmp
in
jbe
and
push
addr16
xlat
mov
imul
gs
in
push
movsb
inc
inc
xchg
and
addr16
push
out
inc
addr16
xchg
lea
pop
je
jg
add
mov
mov
mov
cmp
enter
in
sub
xchg
clc
inc
subl
test
mov
and
sbb
xor
mov
add
cmp
mov
nop
add
or
pop
sub
xchg
sub
lea
inc
inc
stc
jle
mov
les
lret
or
leave
push
pushl
sbb
ja
ret
lea
push
sub
dec
cwtl
sbb
lcall
test
push
mov
lods
push
lock
dec
les
cwtl
dec
lods
push
xchg
enter
lret
dec
xchg
jmp
xchg
in
mov
push
mov
lcall
in
call
sub
hlt
lods
test
es
cmpsl
push
xor
clc
add
cmpl
je
mov
test
mov
xor
jns
xor
mov
and
jge
jle
jbe
inc
jecxz
popa
mov
mov
jb
xor
popf
sub
jg
push
sbb
aam
sbb
fs
hlt
sbbl
sub
jl
in
sbb
mov
jp
jle
mov
cmp
sub
je
inc
cmp
idivl
cmp
ret
or
add
clc
jno
dec
adc
inc
call
popf
push
push
dec
push
je
xchg
sbb
push
scas
push
repz
out
arpl
xor
sbb
shrb
int3
iret
pop
shl
or
daa
rclb
xchg
lock
sbb
je
push
mov
sub
push
daa
and
fstps
push
jb
loope
mov
mov
or
movsl
pushf
mov
adc
fists
pop
xchg
mov
jne
jle
pop
in
push
inc
inc
ret
xchg
cmp
mov
nop
add
inc
xchg
or
popa
daa
call
test
inc
or
fsubrl
ret
sbb
and
sbb
ja
mulb
mov
push
ret
pop
jmp
or
sub
lock
mov
adc
nop
xor
mov
adc
fcoml
push
insl
sub
test
subb
sbb
rcrl
test
cmp
mov
mov
xchg
pop
xchg
cmpsl
adc
jp
lahf
dec
or
in
pop
inc
sub
ret
ficomps
mov
fsubs
inc
cwtl
cs
or
push
sbb
incb
stc
dec
vunpcklpd
or
and
pop
or
or
xchg
mov
test
jne
data16
sbb
xlat
adc
pusha
enter
clc
out
sub
lret
cmp
lea
inc
cmp
jb
or
jne
cmp
jae
mov
inc
test
inc
xor
jmp
data16
xchg
or
movsl
mov
sbb
mov
adc
sub
jg
mov
jle
and
repz
inc
test
cmp
cmp
push
jmp
mov
pushf
mov
lea
push
shll
xchg
xchg
xchg
push
nop
icebp
dec
push
pop
call
cmpsl
ret
jp
and
mov
adc
cmp
jns
push
xor
xchg
push
mov
mov
insb
sub
dec
adc
fcoml
add
ss
xor
loope
or
mov
xchg
sbb
jl
jmp
das
test
pop
cmp
lahf
cli
pop
fs
xor
notb
mov
jae
mov
call
clc
pop
jb
jmp
push
mov
dec
push
or
xor
jmp
and
scas
fs
ljmp
push
cmpsl
test
adc
add
add
leave
jae
dec
mov
dec
insb
mov
sub
adc
lods
rcl
dec
popa
inc
call
mov
fdivrl
mov
mov
lcall
jmp
clc
test
adc
push
or
aas
xor
jne
push
es
sbb
lahf
lods
in
call
test
mull
es
cmp
ret
or
mov
cmc
adc
mov
repz
cmp
push
jno
adc
mov
cvtpi2ps
call
adc
cmp
ljmp
addr16
js
jg
mov
icebp
cwtl
inc
mov
inc
or
mov
lahf
mov
push
sub
inc
mov
xchg
mov
aaa
cwtl
or
or
mov
mov
xor
push
aas
jmp
jmp
stc
mov
push
test
lret
push
pop
pop
and
sti
lahf
out
and
push
imulb
or
stc
lret
dec
adc
dec
shl
lret
leave
xor
and
xlat
push
or
les
divb
test
inc
stc
call
mov
and
push
inc
nop
hlt
xchg
movb
cmpsb
lock
call
xchg
cmovg
mov
pop
enter
stos
jle
scas
sub
xor
es
or
cmpb
adc
sbb
adc
sub
addl
cs
mov
negl
and
inc
repz
gs
pusha
sub
push
nop
dec
cmc
sahf
das
and
or
mov
cli
or
xchg
les
push
sub
sub
test
data16
or
les
lds
jmp
mov
addr16
movsl
pop
testb
mov
and
xchg
cmp
cmp
jnp
mov
data16
push
push
pop
jne
pop
adc
mov
rcrb
fists
insl
push
ja
mov
inc
mov
out
add
sbb
sar
movsl
cld
fwait
xor
jmp
imul
jmp
dec
push
mov
imul
bound
insb
outsl
xchg
lret
mov
pop
push
jecxz
dec
loope
push
pop
jecxz
dec
shll
testl
mov
fs
es
xlat
push
sbb
pushf
fs
lret
clc
int
cmp
sub
mov
cltd
dec
mov
nop
leave
test
mov
ret
xchg
jns
inc
cmp
and
or
cwtl
sbb
mov
sbb
pop
xchg
pusha
lock
xchg
pushw
dec
add
insb
cli
add
add
mov
fistl
inc
push
rorl
mov
and
sub
inc
push
pop
sbb
test
jmp
push
push
je
mov
test
xor
push
add
leave
pop
pop
fldlg2
dec
dec
mov
push
push
int
mov
jnp
xor
adc
xchg
test
push
add
sub
adc
sahf
pushf
dec
inc
andl
fisttps
sbb
jno
or
mov
lods
iret
push
add
mov
lcall
sub
and
jo
aas
test
sbb
test
bound
or
pusha
cmpb
das
cld
add
jne
inc
push
cltd
xchg
mov
mov
movsl
cmpsb
sub
mov
jns
mov
push
in
mov
js
inc
inc
mov
or
call
push
push
jle
jmp
pop
mov
inc
push
and
xchg
jo
sbb
in
mov
daa
aad
mov
popf
popa
nop
mov
jno
push
sar
mov
adc
mov
cs
scas
xchg
xchg
mov
cmp
mov
xchg
push
fwait
push
or
dec
repnz
fimull
test
ja
push
or
adc
iret
int
fadd
cld
pop
or
mov
std
test
pop
and
adc
add
xchg
xchg
loope
xchg
imul
pop
pop
int3
mov
sub
xchg
adc
or
scas
cltd
enter
aas
test
pop
sub
inc
setae
ret
inc
jbe
xchg
sub
adc
xor
jge
push
jg
xchg
jmp
clc
push
pop
dec
js
pop
mov
rcrl
push
push
mov
pop
xchg
jg
leave
or
divb
sbb
add
jmp
cmp
pop
push
insb
push
jns
push
jb
jmp
cld
and
call
jecxz
and
and
rcll
ds
or
mov
daa
or
inc
or
out
inc
or
pop
pop
cmp
inc
and
pop
xchg
out
call
test
pusha
mull
xchg
sbb
es
push
push
dec
push
call
dec
cltd
jno
push
shlb
fistps
xchg
sub
and
xor
loope
xor
nop
sbb
mov
lret
sbb
jecxz
les
mov
je,pn
push
mov
adc
fs
aad
inc
bound
add
jmp
aas
shr
sub
stos
xor
pop
push
mov
xchg
fadds
cmpb
and
orl
ret
mov
sub
sarb
clc
pusha
outsb
or
push
das
neg
rolb
push
inc
cld
imul
das
pop
dec
push
movsb
cmpsl
stc
ret
jecxz
or
push
xchg
sub
and
inc
movsl
je
inc
or
mov
sahf
adcb
cmp
pop
jne
add
jbe
das
push
inc
call
xchg
ljmp
enter
push
pushf
ljmp
cltd
pop
rorb
stc
andb
call
in
sub
je
jo
sub
and
punpckhdq
xchg
lock
and
push
and
mov
test
mov
mov
in
dec
or
xor
push
pop
push
and
bound
pop
pop
loop
cmp
add
dec
insl
adc
sbb
fisttpl
adc
mov
sti
sub
popf
push
inc
stc
pop
leave
inc
sbbb
movsl
std
movsb
dec
pushf
push
mov
sub
fs
sti
adc
xor
lock
push
sbb
call
mov
inc
inc
popa
inc
add
scas
and
loopne
pop
mov
cmc
test
lock
gs
jne
jns
pusha
xor
ja
and
add
dec
jno
negl
imul
dec
push
lret
aad
lods
orl
movsb
enter
gs
test
inc
push
lahf
jno
lret
mov
sbb
test
clc
jmp
sbb
movb
adc
cltd
pop
aam
mov
sbb
push
fs
sbb
mov
mov
call
adc
jecxz
adc
movsl
bound
dec
or
pop
jmp
xchg
nop
sbb
adc
sub
mov
js
and
int3
mov
clc
add
stc
mov
insb
and
lock
jae
push
xchg
xchg
es
sub
mov
imul
push
push
push
mov
dec
mov
mov
fwait
daa
int3
outsb
jns
lahf
addr16
adc
div
cmp
rclb
jbe
push
out
stc
imul
push
lods
cmp
enter
jne
fsubr
adc
push
out
pop
and
fst
daa
cld
adc
pop
mov
test
sarl
adc
sbb
cmc
aam
mov
lret
sbb
aad
jne
out
bound
sbb
jbe
ljmp
call
pop
inc
inc
dec
dec
fdivr
mov
add
test
jno
mov
push
fs
inc
call
inc
adc
out
dec
push
fdivs
popf
lahf
pushf
mov
lock
push
into
scas
xor
pop
mov
jnp
adc
inc
xor
fistps
inc
mov
jb
push
loope
loop
test
std
inc
or
and
sbb
push
sqrtps
sub
lahf
ss
dec
sub
sbb
sbb
xchg
sbb
fbld
add
pop
adc
imul
jae
dec
sub
subb
cmp
fidivs
jmp
ja
xchg
int
mov
les
fldz
sbb
loopne
adc
popf
mov
add
adcl
dec
sub
jle
outsb
adc
pop
daa
leave
aam
je
pop
cmpsb
daa
pushf
dec
pop
pop
mov
jge
stc
adc
dec
inc
inc
jne
jbe
psubd
insb
insl
imul
lock
pop
test
pop
fmul
or
test
fucomp
xchg
jns
and
cli
aam
mov
sbb
rorl
sub
lock
push
lods
sub
adc
cmp
imul
or
adc
mov
mov
shrb
jmp
cli
lret
aam
jno
call
mov
cmp
pushf
mov
aaa
movsl
jne
mov
jl
lret
dec
jecxz
rcll
sub
push
xchg
in
adc
adc
or
mov
mov
adc
adc
or
push
or
leave
jb
fisubrs
fnsave
sti
test
std
sti
arpl
sub
push
repz
adc
insb
into
pop
xchg
dec
in
push
test
and
lds
je
jns
insb
faddp
and
pop
psubq
push
dec
jp
xchg
mov
sub
cld
push
lea
xchg
movsb
cmp
adc
sub
push
adc
xor
or
call
mov
js
mov
test
adc
sbb
not
adc
mov
call
or
adc
test
adc
xor
push
or
sarb
sub
and
cmp
enter
push
adc
add
and
xor
mov
lods
xor
adc
call
or
jne
andb
jno
cmp
jnp
inc
push
imul
or
pop
pop
push
pop
mov
test
sub
clc
xor
push
bound
stc
dec
xchg
addr16
push
ja
loope
and
adc
add
popf
or
push
add
add
in
pop
xchg
pushf
cli
shr
adcl
adc
pop
push
subl
adc
jge
mov
decb
sbb
lcall
call
cmp
inc
or
repnz
jge
scas
mov
outsb
cli
adc
inc
push
cmp
mov
daa
movsl
xor
scas
lock
xchg
jae
daa
fsubr
pop
jmp
push
leave
imul
xchg
and
cmp
ret
rcll
stos
lret
loopne
pop
add
rorl
sbbb
cmp
push
add
xchg
lret
adc
daa
inc
pop
int3
inc
and
repnz
call
pop
out
push
or
dec
push
sub
std
int
xor
xor
adc
outsl
nop
mov
push
xor
jl
imul
cwtl
mov
sbb
sbb
rorl
leave
push
sbb
mov
dec
or
les
sbb
add
stos
sub
mov
test
imul
and
mov
or
call
inc
push
push
push
dec
divl
ret
mov
xor
lock
repz
gs
rcrb
add
push
inc
inc
pinsrw
jg
mov
inc
jmp
pop
cmp
out
adc
shlb
cmp
or
jle
inc
jne
test
test
add
hlt
mov
mov
mul
push
mov
notb
push
dec
adc
cld
dec
std
out
jne
and
push
dec
inc
sub
inc
and
orb
push
adc
dec
inc
shl
add
pop
not
adc
aam
ss
dec
in
adc
andl
sti
je
clc
add
push
mov
push
dec
push
cmpsl
inc
and
cld
test
sar
and
or
das
mov
push
xor
sub
push
push
aad
iret
pop
add
stc
gs
mov
repz
ret
or
sbb
mov
mov
or
inc
outsb
and
fs
fcomps
xchg
xchg
sub
push
daa
mov
sbb
sbb
push
jge
cmp
insb
or
jae
sub
test
fadds
lds
mov
adc
mov
or
jb
adc
sub
mov
push
pusha
sbb
sub
xor
sub
push
in
mov
es
cmp
inc
sub
int3
adc
adc
enter
xor
jo
mov
push
cmp
and
nop
fs
jge
pop
lock
ds
cmp
inc
adc
jo
cmp
pop
mov
mov
sub
jo
xor
pusha
xor
xor
dec
jp
test
and
push
dec
or
orb
and
or
in
xor
mov
mov
sub
inc
sbb
fcoms
or
sbb
clc
insl
adc
outsb
xchg
es
loop
outsl
and
in
bound
loop
inc
xor
enter
movsl
push
dec
and
sbb
out
dec
test
inc
enter
inc
mov
xchg
jle
push
push
scas
and
inc
jge
dec
or
and
add
sub
dec
out
js
mov
mov
mov
mov
repz
scas
shl
insb
cltd
filds
dec
xchg
mov
cmp
adc
push
mov
nop
xor
or
out
mov
inc
lods
and
jo
sbbb
outsb
xchg
and
adc
xor
mov
lods
adc
mov
cld
or
adc
push
push
loope
xchg
adc
mov
sbb
inc
outsb
mov
sbb
push
movsl
add
loopne
cmpsb
sub
or
xchg
and
pusha
adc
imul
or
sbb
sbb
xchg
or
or
enter
sbb
and
adc
movsb
outsb
or
xchg
and
xor
xor
addb
or
add
dec
sbb
bound
nop
sbb
cld
and
dec
mov
or
and
jl
adc
inc
in
and
xchg
and
add
pop
nop
lahf
and
add
and
nop
add
stc
adc
cld
push
sbb
sbb
push
or
sbb
push
and
sbb
dec
mov
sbb
movsl
fs
cltd
sbb
lea
movsb
insb
inc
je
dec
adc
sbb
int3
or
orb
addl
push
adcl
shll
cld
xchg
dec
iret
or
jl
mov
out
mov
dec
and
adc
lret
hlt
mov
mov
outsb
sub
mov
outsl
fs
in
cwtl
test
push
or
js
outsb
and
xchg
jo
sbb
sbbb
inc
xor
inc
push
es
scas
adc
inc
insb
xchg
adc
lret
mov
jo
orb
xor
push
mov
dec
sbb
lods
das
sub
dec
imul
in
dec
sbb
aam
inc
hlt
sub
or
sub
ret
adc
push
mov
xchg
nop
pushf
adc
or
inc
call
outsl
fs
xor
dec
xchg
jg
or
xchg
rorb
aas
jg
outsb
js
mov
and
call
mov
arpl
arpl
les
pop
adc
pop
push
cld
lret
ficoms
cmc
or
aam
dec
test
xchg
mov
push
in
js
adc
xchg
dec
adc
insb
push
mov
ds
repz
and
push
or
shlb
test
or
or
and
jno
or
test
and
adc
add
fmull
adc
test
push
arpl
aam
push
movsb
flds
or
sub
inc
movsb
adc
outsb
enter
jae
movsb
les
cmp
lock
sub
xor
sbb
test
mov
test
xchg
enter
ja
mov
and
fsub
push
pop
inc
pop
sti
sub
or
dec
or
xor
loope
je
stc
js
pop
in
dec
ret
inc
daa
iret
sub
movsb
adc
loop
or
pop
jmp
sti
and
xor
push
inc
sub
push
xchg
mov
ljmp
cmp
and
inc
inc
jb
sbb
and
out
mov
dec
and
add
lret
adc
cmp
cmp
pop
and
and
loop
sbb
lock
push
and
test
insb
fucom
les
mov
sbb
xchg
test
push
inc
push
mov
cmp
sbb
test
xchg
push
enter
in
mov
and
adc
enter
inc
cmp
dec
pop
adc
adc
push
lock
or
pop
jecxz
enter
jmp
xchg
jbe
xchg
cmp
adc
mov
movsl
mov
repnz
scas
jo
inc
sub
pop
push
mov
ss
adc
push
andb
call
mov
xor
in
or
lcall
push
xor
sti
xchg
test
xor
out
pop
mov
arpl
cmpl
inc
outsb
and
rcr
or
rorl
imul
cli
ret
jl
lahf
xlat
leave
add
sub
mov
push
cmp
je
or
or
rolb
enter
xor
inc
jle
jle
dec
xor
xchg
dec
ljmp
cmp
or
cmp
inc
cmp
jl
cmp
xor
jae
jle
inc
inc
cmp
aad
cltd
xchg
jno
scas
push
aad
or
out
adc
mov
rep
lea
cmpl
cmp
mov
inc
scas
adc
lock
cmp
jle
pop
or
inc
cmp
ss
add
pop
jl
ljmp
or
or
adc
cld
mov
jmp
nop
push
rcll
std
mov
push
adc
leave
sbb
dec
mov
jmp
pop
rcrl
push
fcomps
or
or
scas
rorb
push
or
clc
push
jg
push
test
or
sub
movd
add
add
jg
mov
sub
dec
adc
cmc
xchg
jl
dec
pusha
dec
orl
xor
jg
mov
add
imull
jle
add
push
lea
stos
int3
push
mov
pop
push
fldcw
adc
push
inc
inc
mov
pop
mov
or
das
or
dec
and
dec
jecxz
sbb
sub
sbb
or
jl
das
inc
push
push
mov
push
or
sbb
pop
jmp
outsl
sbb
lret
daa
sarb
sahf
fs
xchg
push
pop
out
adc
mov
dec
sbb
scas
mov
pop
mov
mov
mov
mov
push
push
mov
and
call
xor
mov
push
addb
hlt
push
xchg
push
shr
xchg
adc
ja
pop
gs
push
enter
push
insb
test
inc
leave
lea
test
cmp
mov
pop
inc
or
sub
das
fisubrs
push
das
jae
les
or
mov
xor
and
sub
lds
cwtl
jae
icebp
xchg
repz
dec
mov
sbb
sub
jg
mov
shrl
cmc
mov
ss
jmp
out
push
int3
int3
mov
dec
ljmp
push
push
roll
or
jno
or
jmp
je
and
jne
scas
or
pushf
aad
in
sub
lret
push
and
jb
push
mov
pop
jnp
adc
jns
movsl
fisubrs
jp
dec
adc
xchg
push
and
mov
adc
loopne
xchg
clc
repz
sbb
push
dec
fstps
leave
and
xor
lcall
push
and
dec
out
adc
aas
jge
mov
adc
outsl
icebp
cs
mov
or
adc
push
push
add
or
movsb
adc
aam
and
mov
data16
mov
mov
rclb
std
sub
sahf
aas
dec
or
add
daa
jg
scas
adc
mov
nop
cmpsb
push
mov
daa
push
mov
rorb
jae
xchg
mov
clc
jb
mov
nop
push
in
hlt
mov
xlat
in
clc
add
jne
push
jp
aam
test
in
add
dec
data16
pop
inc
adc
leave
data16
xor
cmp
jmp
push
mov
mov
xchg
shl
and
add
push
je
dec
cmp
push
cmp
insl
or
push
jmp
inc
cmc
push
and
cmp
push
sbb
icebp
loopne
scas
and
jo
pop
push
sub
ljmp
cli
je
aad
mov
lock
sub
jo
cmp
pop
call
popa
mov
mov
sbb
jle
fcomps
xchg
cmpsb
xchg
fimuls
std
jns
xchg
sub
or
lea
push
push
aaa
and
cmp
and
rol
push
dec
dec
sbb
and
dec
mov
pop
dec
aaa
push
pop
dec
mov
mov
int3
pop
or
fnop
or
sub
jb
sar
push
and
sar
or
dec
loopne
popa
cmpsl
scas
mov
push
dec
jb
aad
push
mov
dec
in
mov
in
daa
std
cvtps2pd
mov
or
daa
and
xor
cmpsb
cs
mov
movsb
or
push
pop
mov
fimull
outsl
ja
cmp
or
fidivrs
ljmp
adc
mov
pop
popa
test
add
add
fnstcw
iret
in
je
pop
push
mov
aam
sub
mov
movsl
mov
mov
jmp
push
popf
in
xchg
and
cli
pop
dec
mov
movsb
adc
cmp
adc
mov
negb
call
push
out
pop
aas
pop
pop
in
mov
out
in
loope
loop
scas
sub
jp
adc
cwtl
dec
loop
xchg
int3
dec
xchg
pop
sub
fsub
or
mov
or
jecxz
inc
jge
jp
inc
lods
rorb
out
jge
and
and
dec
mov
test
sbb
jp
cwtl
sub
test
je
inc
fstpl
mov
jmp
cmp
dec
add
and
cmp
adc
orl
fcompl
lods
or
sbb
or
cs
aaa
dec
mov
cs
pushf
test
xchg
sub
jne
jnp
psubusb
jb
test
add
dec
dec
stos
enter
mov
xchg
dec
lods
mov
clc
test
sub
add
jle
aaa
push
push
jg
cmp
popf
adc
sub
xor
push
sbb
xor
adc
pop
adc
xchg
adc
dec
daa
inc
insb
push
movsb
pop
dec
pop
mov
add
and
ja
repz
xorl
and
push
jmp
fldt
xor
and
push
jecxz
or
adc
or
cmc
xlat
inc
or
inc
ret
and
mov
and
ja
movsl
sub
xor
and
adc
cli
mov
mov
and
jge
sub
jle
jae
mov
test
hlt
mov
ja
je
lea
ds
adc
jge
inc
loope
and
bound
push
andb
iret
comiss
mov
and
repnz
sbb
inc
pop
adc
mov
pop
lret
mov
pop
sub
aas
out
je
inc
dec
fldl2e
and
popa
movb
mov
mov
xchg
int3
fiadds
out
enter
ljmp
adc
or
sbb
add
add
add
aad
mov
add
push
or
push
jmp
int
daa
push
aas
faddp
jns
lret
pop
hlt
xor
or
or
xchg
cmc
mov
pop
xor
les
outsl
mov
adc
test
pop
mov
mov
js
mov
inc
or
cltd
push
cmp
xor
or
pop
adc
mov
cli
pop
inc
ret
and
inc
pop
sub
hlt
mov
std
or
std
or
std
or
pop
js
xor
rcr
loope
adc
lods
push
push
movsb
jne
lock
cmp
push
fiaddl
dec
je
pusha
lds
inc
loopne
and
out
jl
clc
inc
mov
adc
mov
sbbl
ret
sbb
mov
lcall
fimuls
pop
out
push
xor
dec
cmpl
adc
jne
push
push
call
jnp
sub
push
pop
scas
leave
flds
add
pusha
loop
pop
jne
loope
jns
push
inc
xlat
push
sbb
sub
cmpsl
xor
sbb
lods
and
mov
scas
and
lret
push
push
pop
ret
aam
ljmp
pop
push
push
out
inc
inc
mov
push
mov
sub
sbb
xlat
testb
mov
jne
adcb
and
adc
push
pop
mov
jb
pushl
xor
mov
pop
xchg
and
sbb
and
adc
loopne
hlt
pop
adc
mov
and
gs
cmp
loopne
int3
sub
push
sbb
cld
jmp
daa
clc
imul
mov
into
cmp
test
xor
and
dec
dec
cld
jecxz
add
out
clc
lea
add
mov
pop
pop
add
sbb
pop
jno
das
in
push
popf
pop
mov
mov
repz
cld
or
stos
adc
xor
loopne
lahf
test
add
mov
dec
pop
sub
jmp
mov
xor
les
fsubs
sti
sbb
cld
lods
not
push
testb
int3
sbb
loopne
cmp
xor
pop
mov
inc
std
or
jp
or
push
gs
je
fadd
xlat
mov
insl
pop
sub
jb
mov
jbe
mov
xchg
xchg
or
mov
add
lea
daa
sbb
push
in
jb
push
jns
in
aam
xchg
pop
mov
sbb
push
pusha
sbb
lds
push
test
outsl
adc
and
and
ficomps
in
stos
lahf
xchg
pop
std
add
cmp
sub
xchg
sbb
daa
je
pop
push
mov
inc
dec
add
iret
and
sbb
pop
das
les
cmp
adc
daa
xchg
es
cmc
jmp
gs
imul
mov
mov
mov
leave
pop
jo
loope
pushf
daa
fwait
ljmp
daa
cld
shll
push
and
sbb
and
sub
leave
and
outsb
dec
mov
icebp
mov
fdivl
add
in
in
aad
or
mov
adc
adc
faddl
call
hlt
cmp
dec
dec
stos
xchg
addr16
or
and
les
std
icebp
jo
pop
jle
pop
adc
push
push
xor
cmp
cmpsb
aam
and
lahf
stc
lcall
xchg
fcoml
sub
rolb
jl
mov
nop
mov
sbb
push
push
adc
jo
dec
xor
inc
int3
dec
sub
pop
sub
fs
push
or
sbb
les
cmp
jns
mov
pop
mov
adc
adc
pop
out
mov
ja
outsb
sub
or
and
les
sbb
and
push
mov
cmpsb
jns
adc
hlt
jnp
and
aam
int3
adc
loopne
mov
sar
arpl
and
sub
cmp
sbb
push
adc
and
movsb
enter
roll
fs
sub
mov
jl
pop
adc
cmp
inc
rcr
popa
inc
xor
pop
sbb
fs
inc
sbb
cmp
xchg
mov
dec
nop
sbb
ss
and
rclb
push
sub
pushf
in
jno
jp
jecxz
iret
enter
and
es
outsl
push
aam
sub
enter
popa
ret
ds
xchg
je
sub
movsl
aam
mov
xor
mov
xor
stc
aad
into
mov
fs
inc
jl
adc
cwtl
jg
dec
sarl
cmp
push
popf
or
jns
adc
sti
pusha
daa
hlt
je
dec
cmp
mov
mov
test
mov
mov
sub
push
push
sub
xorb
mov
inc
push
lods
inc
nop
dec
aam
pop
movl
pop
adc
ret
jmp
and
push
xor
sbb
sbb
inc
or
dec
and
cld
mov
push
sub
pop
mov
insb
stos
lret
nop
je
cmp
and
rolb
ret
mov
xor
clc
jnp
pop
je
cmp
add
shlb
pop
xor
and
xor
leave
pop
enter
fisttpll
pushf
mov
test
and
mov
and
adc
je
daa
sub
sbb
js
and
cld
jle
adc
jmp
mov
mov
ffreep
xor
lods
mov
test
jne
aam
and
dec
test
pop
dec
inc
mov
jge
ds
adc
sub
into
notb
lods
pop
or
lock
push
jl
sbb
pop
mov
or
loope
cli
sbb
pshufw
dec
xor
enter
loop
pop
loop
daa
call
in
xor
or
and
decb
xchg
jecxz
sub
dec
or
push
dec
mov
les
xor
pop
bound
adc
movsb
mov
sarl
jl
or
jg
mov
or
sub
and
out
sub
push
pop
sub
push
push
mov
sub
push
sbb
bound
shll
cmpsb
cs
push
stos
aad
xor
ret
js
es
int3
inc
cmpsl
inc
add
imul
or
scas
xchg
pop
int
test
cmp
or
in
cmp
cmp
push
pop
in
inc
insb
pop
mov
fs
movsb
clc
sti
gs
dec
inc
xchg
mov
lds
inc
xchg
adc
xchg
js
xor
sub
or
jle
int
jnp
sti
and
cmp
jne
push
pop
cmpsl
dec
jp
pop
and
fidivrs
push
and
push
inc
push
mov
andb
inc
sbb
inc
inc
dec
mov
mov
sbb
pop
test
pop
sahf
inc
leave
add
mov
push
mov
jmp
in
cmp
xor
pop
ja,pt
adc
repz
push
inc
sbb
inc
icebp
lahf
mov
fld1
pusha
aas
shrl
pusha
ljmp
mov
shrb
add
xchg
and
sbb
inc
fcompl
rcl
and
mov
jmp
mov
in
mov
loope
mov
aas
mov
clc
dec
test
lahf
mov
xchg
inc
popf
xor
adc
test
sbb
bound
enter
sbb
cltd
add
int
ds
aam
sti
or
inc
jbe
mov
cmp
mov
and
jbe
cmpl
je
push
rclb
mov
pop
aam
fs
lcall
rorb
out
nop
pop
call
dec
shrb
sbb
dec
mov
add
mov
jne
push
testb
fmuls
cltd
jmp
popa
repz
and
dec
add
fs
fsts
pop
fcoml
or
jb
aam
push
shrb
lods
jle
movsl
fbstp
lret
inc
inc
int3
add
mov
and
push
push
xchg
xorl
leave
xor
repz
add
mov
adc
pop
mov
test
sub
cmp
cmp
and
jne
mov
lock
cmp
clc
aaa
jbe
and
aas
test
mov
std
xor
rcll
mov
push
int
fcoml
xor
and
fadds
rorl
arpl
popa
jno
mov
ja
add
push
cmpsb
cli
cmp
cld
je
jno
dec
fsubrl
mov
sub
sbbl
ja
inc
push
popl
cmp
sub
mov
mov
add
ja
loope
in
pusha
pop
cmp
jne
mov
push
lret
je
insl
push
mov
cs
adc
cmp
jle
pop
sbb
or
dec
fs
and
mov
paddw
jmp
xchg
push
scas
popa
mov
sbbl
lods
push
es
ljmp
adc
inc
aam
dec
stc
or
cmp
adc
push
roll
add
xor
or
push
xor
push
xor
mov
pop
into
mov
cld
subb
adc
hlt
xorl
xchg
movb
xor
filds
dec
in
cli
pop
popa
mov
movb
pop
add
push
mov
ds
push
sbb
je
pop
call
or
fwait
movsb
data16
sbb
nop
fadd
mov
xor
adc
inc
fwait
and
cmp
loopne
and
pop
cmp
pop
loope
lret
or
dec
add
adc
inc
scas
dec
mov
sbb
fstpl
xchg
lock
hlt
bound
adc
jno
les
cmp
mov
or
clc
lret
mov
xor
ret
jl
js
mov
dec
or
pop
push
out
cld
mov
negb
xlat
cltd
or
popf
test
ret
ss
push
pop
and
jo
pop
cmpsb
pop
inc
mov
mov
out
bound
xchg
popl
mov
adc
scas
sub
cmp
shrb
mov
mov
push
mov
mov
xchg
shlb
insb
cwtl
lret
shrb
adc
sti
mov
in
mov
leave
jbe
pop
and
xchg
mov
xor
xchg
stos
aam
test
pop
push
or
dec
sbb
xor
fxch
neg
nop
popf
xchg
sub
cmp
adc
test
xor
push
pop
aaa
lret
rcll
adc
daa
and
cli
xchg
push
push
popf
les
subb
cwtl
cmp
test
mov
mov
aam
test
fs
mov
lret
adc
pop
rorl
lods
in
pop
roll
dec
mov
mov
outsl
pop
push
mov
lea
out
and
ret
enter
mov
push
push
subl
fstpt
out
fs
lret
sub
movlhps
int
ljmp
lods
adc
add
loope
jo
adc
pusha
outsl
push
inc
addr16
clc
clc
mov
add
jns
in
enter
je
sub
flds
lahf
adc
and
outsb
jne
mov
decl
pop
push
xlat
dec
gs
cmpsb
scas
test
lock
lea
loopne
sub
ror
push
dec
pop
add
mov
jbe,pt
adc
loopne
and
cmp
jb
icebp
jmp
push
enter
pop
imul
add
and
leave
mov
loope
int3
imulb
pusha
jl
popf
nop
stc
adc
mov
dec
pop
or
xlat
xor
xchg
out
es
jns
lods
xchg
dec
fsub
movzbl
repz
mov
jp
enter
lock
mov
pop
xchg
jns
ret
ret
ret
lock
add
jle
lea
push
shll
inc
fsubrp
or
out
and
mov
ds
inc
and
negb
fs
or
push
add
mov
scas
nop
sarl
adc
jle
out
loope
mov
bound
test
stos
lcall
mov
stos
sub
jp
test
out
inc
pushf
adc
scas
bound
lcall
lea
mov
cld
cld
cli
loope
add
mov
das
sbb
scas
mov
mov
add
add
jg
mov
dec
in
mov
xor
xchg
pop
sbbl
cmp
sbb
xchg
jno
insb
and
nop
dec
lret
or
sub
imul
int3
ljmp
lcall
ds
mov
mov
jne
push
jmp
jo
xchg
mov
outsb
les
rolb
sti
add
dec
push
push
jno
sbb
cmp
mov
xchg
test
and
out
xchg
aas
les
ret
jns
scas
rcrl
loopne
inc
das
fs
push
sti
aas
rclb
mov
push
stc
mov
mov
sbb
xchg
ret
jb
xchg
in
push
xchg
arpl
pushf
sbb
mov
arpl
xchg
ret
and
pop
in
adc
loop
sbb
sub
adc
dec
test
outsl
mov
push
loopne
idivb
je
gs
jae
push
and
nop
and
stc
test
popa
pop
push
push
and
push
push
movsl
push
adc
pop
popa
jne
pop
push
push
xchg
inc
mov
cli
std
cmp
mov
pop
int
and
push
pop
mov
jmp
or
in
xor
push
add
hlt
scas
fildll
push
mov
mov
sub
rcr
push
dec
outsb
mov
adc
rolb
and
or
ficoml
xor
sbb
mov
push
cmpl
cs
mov
mov
inc
inc
or
mov
imul
dec
sbb
notl
sar
mov
jecxz
mov
push
rorb
jno
pop
pushf
mov
iret
or
out
mov
cld
jmp
mov
loopne
call
jno
mov
inc
sarl
inc
or
xlat
or
push
cmpsb
popa
lret
mov
sti
imul
cmp
sarb
or
inc
mov
and
push
adc
add
stc
mov
mov
mov
loope
xchg
dec
in
jle
push
pop
mov
mov
xchg
jne
aaa
and
adc
movsb
fiadds
adc
jge
dec
xorb
shlb
int3
or
inc
mov
pushw
loopne
lds
test
mov
cs
fsubrl
cs
mov
stc
aaa
inc
push
cmp
fistpll
jb
movsl
adc
call
mov
les
xlat
mov
fadds
jne
icebp
and
sbb
sbbb
aam
xchg
xor
sub
jmp
bound
or
mov
call
xchg
pop
push
out
push
xchg
jno
movsl
ss
sbb
dec
in
push
stos
loope
call
repnz
cmp
jg
movsl
mov
cmp
adc
mov
mov
sbb
icebp
clc
cmp
push
out
cmpsb
lret
dec
data16
adc
mov
or
je
inc
aas
or
divl
pop
mov
stos
shll
adc
mov
jle
pop
push
add
push
mov
push
jno
test
aam
or
pop
adc
mov
mov
and
outsb
inc
push
fldl
cmp
std
lar
je
adc
sub
push
dec
sub
jne
push
inc
cli
adc
fs
out
ss
dec
or
decb
mov
inc
cmpsb
mov
dec
or
dec
movsb
pop
adc
adc
or
cs
push
shrb
je
and
xor
sub
mov
and
out
xor
mov
mov
gs
cli
add
mov
jp
cwtl
jne
xor
sub
sbb
mov
push
cmp
jb
out
nopl
adc
in
xchg
push
mov
mov
shll
cli
jle
push
adc
mov
mov
push
xchg
xchg
cli
pusha
xchg
call
clc
pusha
mov
int
sub
adc
xor
dec
sbb
mov
or
std
inc
sbb
ds
cmpl
and
push
lds
pusha
test
xchg
adc
and
stos
sub
mov
or
scas
iret
adc
push
leave
es
push
pop
jnp
rorl
ret
test
add
das
shlb
sbb
repnz
test
test
jmp
adc
xchg
fnstcw
das
mov
lret
push
xor
jg
and
xor
ja
mov
cmp
int
adc
stos
cmp
inc
std
jo
or
dec
xchg
push
movsb
sbb
lahf
dec
loop
lahf
mov
and
or
ret
push
cmp
mov
push
fadds
lds
push
cmpsl
mov
inc
and
push
xchg
scas
test
psubb
mov
pop
cltd
cwtl
push
adc
orl
sahf
icebp
mov
and
xor
push
dec
xchg
jp
mov
imul
adc
loopne
repz
or
adc
cmpsb
xorb
dec
mov
pop
mov
orb
push
pop
cltd
xor
or
adc
pop
out
scas
pop
sbb
xchg
fmull
and
iret
imul
clc
sahf
mov
outsb
jno
mov
mov
lds
pop
pop
fsubs
js
and
adc
leave
sbb
sub
je
fcomp
pop
mov
jbe
xor
mov
and
push
pop
pop
mov
cmp
orl
cmp
push
push
stos
hlt
jle
push
test
out
xor
pushf
mov
scas
mov
gs
mov
and
aaa
into
mov
fs
xor
shrl
jne
es
fcoml
in
cld
xchg
in
clc
mulps
mov
jle
loop
notl
pop
pop
arpl
fcomps
sub
cmc
mov
and
or
or
notl
adc
std
stos
int
imul
out
sub
push
and
mov
stos
aaa
fld
sti
xor
mov
pusha
repnz
pop
adc
mov
xor
imul
mov
mov
push
mov
mov
jle
jnp
and
in
mov
and
and
frstor
das
mov
mov
sub
adc
dec
and
and
movsb
mov
sub
add
xor
cmp
cli
fmull
sub
movsb
mov
add
call
movsb
or
movsl
pop
mov
fbstp
pop
push
sbb
repnz
inc
les
cwtl
daa
pop
movsb
lods
ds
jne
decl
arpl
sub
outsl
push
mov
adc
sub
mov
loope
pcmpeqb
add
xchg
movsb
call
add
bound
push
into
dec
sub
cmpsl
gs
lret
lods
pop
pop
push
mov
or
rolb
adc
jle
sbb
call
push
clc
adc
popa
inc
and
pop
or
pop
test
xor
movsb
sbb
jl
adc
xor
or
adc
xor
in
push
and
sub
sbb
pop
dec
aaa
orb
imul
xchg
inc
sub
cmp
sub
push
jo
and
mov
push
cmp
outsl
leave
aaa
and
dec
outsb
out
sub
imul
xor
sbb
or
inc
xchg
and
push
sub
add
jg
shr
sbb
enter
aad
call
test
subl
adc
and
imul
mov
cs
push
ret
adc
and
dec
and
mov
sub
test
lret
pop
cwtl
or
fxch
pop
clc
adc
fdivrs
stos
add
jmp
jbe
xchg
cmp
add
dec
cld
push
mov
and
push
jl
fisttpl
and
das
sarl
jno
dec
mov
scas
mov
lods
sub
jmp
cmp
sub
dec
mov
lods
mov
popa
dec
mov
repnz
push
mov
or
sub
mov
mov
push
bound
pop
les
jmp
fldenv
add
jno
jge
ret
outsb
mov
mov
jmp
mov
in
aam
cmp
adc
sbb
xor
out
lods
imul
jae
int3
xor
sbb
roll
or
mov
imulb
push
daa
dec
mov
mov
das
test
mov
sbb
popa
bnd
sub
sub
mov
mov
and
mov
jo
push
sub
jbe
push
dec
ds
aam
push
pop
dec
hlt
fsubrp
iret
aaa
sub
mov
add
es
adc
call
push
pop
cmc
add
add
movsl
push
mov
nop
jo
sbbb
icebp
push
adc
sbb
notb
ret
pop
stos
cwtl
stos
test
test
push
pop
mov
and
adc
stos
int
mov
das
stos
xchg
dec
push
pop
pusha
fisttpl
push
fsubr
icebp
adc
sbb
aas
movsb
stos
repnz
xlat
outsb
divb
mov
pop
iret
sahf
dec
jmp
cmc
sub
dec
pop
push
fs
hlt
inc
fs
lds
pop
scas
rcrb
lahf
push
inc
ljmp
cmp
pop
dec
mov
sub
jle
les
mov
je
or
aad
add
orl
enter
xchg
lret
pop
add
inc
mulb
pop
test
out
mov
mov
adc
scas
and
out
mov
scas
xor
or
dec
add
out
rcll
inc
movsb
sbb
sub
xchg
pop
daa
mov
pop
fldl
mov
inc
ss
jno
and
dec
movsb
push
lahf
imul
adc
fwait
jbe
inc
mov
mov
xchg
adc
and
add
xor
push
mov
out
das
xor
xchg
mov
outsl
add
lds
jo
inc
jl
mov
test
mov
xchg
sbb
loop
bound
inc
pop
add
pop
lea
jbe
add
cmpb
inc
xchg
mov
mov
movb
xchg
daa
pop
mov
jns
mov
lahf
aaa
je
mov
or
xchg
daa
cs
cmpb
mov
les
cmp
mov
int
sub
and
xchg
or
push
mov
and
outsl
fcompl
lds
inc
jp
rcrl
jp
and
movsl
xor
test
sub
jo
inc
mov
shlb
xchg
lods
or
inc
and
add
ret
pop
sbb
mov
scas
enter
jo
sub
mov
mov
lods
adc
or
push
sub
call
xor
jbe
adc
fidivrl
das
push
mov
call
loop
and
add
mov
jmp
stc
in
and
jns
icebp
xchg
and
lret
movsl
outsl
test
push
or
inc
inc
inc
add
pop
idivl
ftst
mov
push
mov
push
inc
inc
sub
push
cmp
je
xchg
xchg
out
sbb
xchg
popf
flds
mov
inc
adc
jo
mov
jle
push
cwtl
xor
scas
roll
dec
sbb
enter
push
and
jnp
push
addr16
and
stos
pop
cmpsl
pop
mov
in
sbb
rolb
jmp
inc
and
mov
lahf
xchg
fildll
inc
loopne
or
and
das
pop
jns
mov
adc
push
rcrb
je
rol
jle
movb
inc
inc
test
lret
xchg
in
jns
rcll
aam
test
dec
push
or
add
sub
and
push
push
pop
or
dec
lret
pop
dec
movsl
dec
shr
cmpsl
ret
and
fdivrl
pop
sub
mov
ljmp
adcl
or
into
popf
jae
scas
adc
or
test
imul
cmp
ja
inc
inc
shl
sub
add
push
push
xchg
dec
in
flds
movsl
push
sbb
fisttpll
mov
adc
sbbb
and
mov
jne
scas
inc
adc
loop
scas
cmp
and
ficomps
cmp
jo
andl
aam
adc
add
or
add
jmp
push
and
test
aaa
push
and
and
push
je
ret
sbb
mov
pop
mov
or
push
std
xor
mov
jno
imul
pop
and
cmp
test
or
pop
push
rcl
cmc
gs
adc
aam
es
sahf
and
test
arpl
push
xor
cwtl
and
ficoml
add
gs
pop
adc
lea
mov
add
les
add
clc
inc
mov
push
or
ficomps
xchg
daa
push
pop
mov
test
sub
stos
sbb
rclb
jl
or
stc
xor
adc
and
lods
testb
cld
adc
jns
test
mov
enter
out
jb
adc
inc
xchg
or
mov
outsb
xor
push
fwait
push
push
xor
add
lea
sub
and
arpl
cmpsl
mov
jne
push
sbb
inc
add
mov
pop
adcb
rclb
cmpsl
add
and
lret
mov
and
jmp
movsl
sbb
sbb
xor
aam
and
cltd
aam
cmpsl
bound
xor
insl
popf
bound
push
jnp
fs
leave
movsb
scas
jno
or
inc
cli
cmpsb
adc
or
push
lea
fcompl
mov
test
or
push
push
or
mov
lcall
mov
and
inc
mov
mov
into
cli
or
dec
xchg
mov
imull
insl
bound
sub
push
mov
or
inc
and
subl
int
push
call
sbb
or
mov
addr16
adc
cs
fstpl
or
xchg
inc
xor
adc
cs
aas
clc
stc
mov
xor
dec
cmp
xchg
test
adc
movsb
adc
dec
add
int3
sub
mov
add
aas
inc
lret
pusha
xchg
lret
and
aam
movsb
cmp
mov
fldt
bound
jne
push
mov
mov
clc
xchg
je
mov
lea
mov
dec
sub
mov
xor
je
xorl
cmp
jmp
pop
xor
sahf
stos
sub
fsqrt
dec
push
lods
mov
inc
xor
into
adc
nop
mov
in
stos
stc
push
push
or
and
stos
and
sub
cmp
adc
jl
lods
sar
mov
mov
or
adc
jno
sub
push
cmp
pop
or
pop
add
inc
hlt
lods
jle
pop
ja
ficoml
je
push
push
cmp
lahf
jno
push
or
das
jo
sub
push
sbb
push
pop
out
pushf
xor
aas
sbb
add
movsl
pop
shl
lea
dec
mov
mov
or
push
sbb
adc
or
cmpl
test
cmpsb
lea
dec
or
sub
xor
sbb
and
mov
push
mov
xchg
mov
xor
push
movsl
out
test
mov
pop
push
sbb
sub
jne
push
inc
mov
test
test
mov
adc
or
push
dec
leave
or
lods
pushf
repnz
push
nop
or
mov
nop
xor
or
cmp
push
cltd
sub
pop
pushf
fstp
push
dec
lds
adc
mov
jmp
jge
mov
lcall
in
movsb
and
into
aaa
mov
dec
mov
das
and
rolb
movsb
push
push
dec
test
orb
mov
fmuls
inc
adc
mov
push
mov
js
push
fwait
adc
dec
xor
pop
push
add
shll
dec
and
sbb
pop
push
push
sbb
das
pop
ljmp
fistl
test
cld
into
xor
fnsetpm(287
notb
mov
add
fstpt
mov
cmp
lea
jbe
xor
roll
orb
sub
mov
ja
mov
adc
sbb
xchg
sub
nop
sub
sbb
adc
pop
dec
or
test
enter
and
push
and
dec
adc
push
pop
fmuls
inc
mov
dec
inc
clc
and
lahf
or
lea
or
insb
jge
fmul
outsb
in
lods
fmuls
jmp
test
mov
xor
or
xchg
and
test
testb
mov
sbb
mov
adc
or
mov
adc
fs
and
adc
and
or
test
loope
push
or
xor
sub
push
enter
sub
push
push
sub
test
adc
mov
inc
cmp
fs
jno
sub
dec
or
test
dec
scas
sub
test
adc
xchg
adc
popf
mov
jmp
push
or
xchg
mov
pop
nop
orb
js
insb
test
and
xchg
lods
pop
nop
mov
xchg
sub
bound
cli
mov
adc
mov
cmp
and
sub
push
inc
sbb
and
sbb
lock
or
test
mov
fldt
xchg
and
fs
xor
adc
add
pushf
pop
filds
loope
xchg
mov
jb
jne
fsts
mov
out
jecxz
psubb
setbe
movsb
out
mov
sub
xchg
cwtl
and
aad
cmc
nop
movsb
mov
and
test
inc
lods
and
mov
test
negb
adc
or
and
pop
inc
test
je
nop
or
mov
fscale
or
les
js
inc
jne
jl
arpl
dec
test
cmp
xchg
or
fs
fcomps
or
test
cli
lcall
in
nop
pop
enter
sub
xchg
pushf
sub
gs
or
cmpsb
pop
imul
push
inc
adc
enter
sub
xchg
and
push
enter
sub
inc
and
adc
or
test
adc
xchg
push
cltd
sub
mov
lock
outsl
inc
idivl
mov
pop
sub
dec
jne
push
lcall
adcb
xchg
mov
mov
sarl
push
jns
mov
dec
xchg
xor
lret
roll
jno
xor
xor
movsb
adc
mov
cmp
inc
cmp
inc
fs
and
loope
mov
mov
inc
cmpsb
and
in
xchg
sbb
test
mov
and
adc
xchg
pop
cmpsl
or
test
les
or
or
mov
and
adc
sbb
dec
push
jnp
or
xchg
cli
sahf
xchg
leave
pop
sbb
inc
mov
xchg
sub
mov
push
xchg
push
aaa
or
call
dec
xor
cs
mov
ret
jne
ss
adc
lods
push
outsl
repnz
pop
mov
in
add
lock
adc
mov
adc
test
sub
mov
and
outsl
xor
aam
adc
orb
mov
adc
in
or
iret
pop
push
xor
stc
inc
pop
mov
mov
xor
mov
inc
mov
imul
inc
pop
and
xor
cwtl
test
enter
and
push
inc
lods
adc
jb
mov
adc
mov
xchg
test
sbb
mov
jb
add
mov
mov
iret
xor
js
inc
enter
and
inc
sbb
insb
adc
test
dec
or
xchg
nop
pusha
mov
pop
inc
sbb
test
enter
and
push
and
das
adc
xchg
sub
mov
and
in
xor
mov
inc
inc
cmpsl
sub
inc
sub
mov
cmp
jns
xchg
xor
sub
bound
mov
and
scas
sub
and
xor
xchg
cwtl
enter
sub
inc
sub
adc
push
mov
cmp
out
inc
xchg
je
xor
adc
pop
push
outsl
test
or
mov
add
push
adc
mov
into
jbe
popa
mov
mov
adc
std
cmp
push
inc
or
jbe
daa
lods
mov
sbb
push
test
jne
mov
movb
fstpl
mov
and
hlt
in
push
mov
add
std
jbe
loop
cld
sbb
mov
fsubl
mov
std
sbb
mov
fstl
push
push
decb
subl
nop
xchg
movsb
test
or
adc
or
mov
dec
xchg
mov
add
adc
and
movsl
mov
fwait
or
hlt
jno
add
mul
jae
adcb
add
or
cmp
mov
add
mov
je,pn
mov
xchg
fstl
outsb
cmp
mov
dec
and
je
dec
jno
scas
aaa
push
xor
sbb
call
inc
cmc
or
inc
cmc
sub
in
push
xor
pop
pop
test
cmp
imul
mov
leave
mov
andl
imul
sbb
jge
test
pop
adc
enter
mov
jae
mov
mov
or
adc
gs
out
leave
or
mov
test
xchg
lods
pop
cwtl
sub
adc
das
xchg
mov
or
pop
je
or
or
pop
or
push
ja
pop
call
push
or
hlt
popa
jne
mov
dec
and
inc
or
call
fsubrs
xor
lcall
mov
mov
mov
add
fmul
xor
insb
mov
sub
sbb
jmp
xor
jo
adc
mov
adc
sbb
push
popa
push
jmp
mov
sbb
jmp
ss
pop
mov
inc
cmp
popf
nop
xchg
imul
lds
or
add
adc
scas
or
push
mov
nop
mov
enter
or
and
push
xchg
mov
enter
xchg
scas
push
out
push
cwtl
cmp
xchg
pusha
lods
je
popf
loopne
jmp
sub
sub
adc
adc
loopne
push
sub
ja
ljmp
cmp
inc
cmp
inc
mov
mov
xchg
jmp
mov
sub
sub
int3
shl
cmp
mov
addl
in
inc
mov
inc
lea
mov
sbb
test
les
and
inc
pop
sub
mov
cltd
leave
mov
cmp
insb
push
lret
adc
mov
and
out
pop
and
xorb
add
dec
test
mov
incb
and
mov
cmp
rolb
test
and
xchg
mov
cmp
jnp
xchg
or
inc
fs
mov
and
out
xor
test
pop
sub
mov
or
test
icebp
mov
fwait
sbb
pop
mov
mov
ret
push
inc
inc
and
adc
xchg
test
and
inc
mov
mov
sbb
loopne
inc
push
enter
and
push
and
sbb
aam
and
sbb
test
les
fs
sub
cmpsb
pop
push
les
stc
or
test
scas
sub
inc
pop
and
cmp
rcll
les
and
adc
cmp
xchg
lods
and
sbb
lds
jg
mov
xchg
adcb
mov
dec
and
sub
inc
adc
rclb
into
mov
cmp
or
jl
adc
adc
adc
mov
sub
inc
adc
inc
pop
enter
and
orb
jb
adc
or
bound
mov
mov
sbb
test
or
pop
or
sub
mov
and
sub
mov
cltd
and
adc
mov
inc
jp
sub
test
inc
arpl
insl
out
push
mov
pop
mov
and
adc
or
or
int3
add
xchg
inc
fldcw
mov
and
lds
xor
or
fadds
push
int3
cmp
cmp
std
xchg
xchg
andb
inc
les
mov
mov
jecxz
sbb
sahf
push
shl
adc
das
push
scas
mov
mov
adc
loopne
and
inc
out
clc
pop
mov
imul
cmpsl
sti
xor
mov
movl
data16
sbb
sbb
dec
fs
lcall
xlat
add
scas
cmp
lea
fdivrl
mov
test
aam
xchg
loopne
arpl
ret
sbbb
cmc
jmp
jns
jg
orps
push
xchg
icebp
jg
dec
adc
mov
or
imulb
xor
or
add
and
and
test
add
pop
inc
pop
iret
push
inc
movsb
mov
mov
cmp
inc
lods
sahf
or
add
lds
repnz
jne
or
lods
jns
or
nop
sub
xor
rol
sbbl
or
mov
or
les
fildll
dec
push
loope
push
std
and
call
lds
xor
lock
pop
mov
sbb
lahf
fs
sbb
mov
popf
inc
in
mov
inc
lods
cmp
push
jo
push
pop
mov
sbb
das
je
dec
mov
enter
push
jmp
das
rolb
mov
daa
or
mov
sub
or
fisttps
cmc
push
pusha
das
pop
pop
xor
sbb
mov
sub
call
inc
ja
insl
xor
pop
jns
jmp
mov
hlt
sbb
test
push
or
iret
adcl
lods
sbb
pushf
scas
inc
mov
and
and
test
test
bound
cmp
sti
mov
or
pushf
jne
out
adcl
movsl
cli
repz
adc
or
enter
xor
cmp
incl
cs
mov
test
dec
and
cmp
push
sub
push
and
pop
mov
xor
jle
mov
cmc
push
or
nop
or
pop
outsl
mov
adc
push
mov
xchg
aad
inc
idivb
xchg
mov
mov
lods
mov
loop
cmc
sbb
push
jo
jl
pop
cmpsl
cld
mov
cld
scas
adc
cmp
adc
inc
mov
mov
sub
stc
jo
clc
push
add
test
jmp
and
jl
jl
test
fidivl
pushf
movsb
push
sbb
xchg
inc
lea
cwtl
movsb
jb
pop
push
cli
lcall
out
ret
lea
das
lret
jge
push
push
test
mov
or
dec
adc
mov
inc
les
or
jno
loop
sti
sbb
sub
and
or
test
pop
or
popa
xchg
sbbb
test
jbe
ljmp
push
aas
por
pop
das
imul
push
or
xor
cmp
inc
aaa
and
movsb
cmp
lock
inc
sbb
sbb
push
cwtl
inc
insb
and
js
mov
push
mov
test
add
and
inc
addl
cmp
bound
dec
push
push
sbbb
loope
jl
jmp
push
xchg
inc
orl
pop
add
sub
enter
jae
push
adc
sahf
inc
cmp
cmp
jbe
dec
lea
incb
mov
or
movsb
adc
orl
jne
ja
cs
stos
adc
or
mov
push
add
fsubrs
adc
es
xor
popf
pop
mov
fucomip
sbb
enter
imul
cmp
test
and
inc
push
jne
les
mov
dec
cmpb
mov
jge
je
pop
aas
and
sarl
xchg
xor
lock
icebp
lds
sub
cli
sbb
rclb
mov
sbb
mov
adc
lret
and
stc
stos
or
pop
push
out
out
scas
lret
or
xor
push
testb
add
out
dec
mov
mov
and
mov
lea
bound
xor
jl
push
mov
push
clc
sub
sbb
mov
jle
mov
js
shll
add
ja
incb
nop
sbb
cmp
jl
push
int
fs
push
jecxz
dec
adc
cmc
psubsb
jae
js
cmpsb
imul
pusha
push
push
jle
cmp
add
push
push
adc
data16
sub
jge
mov
sub
es
or
cmp
jne
push
loop
mov
dec
jge
adc
mov
test
cmp
mov
push
sbb
imul
pop
push
pop
push
push
mov
jno
test
or
pop
arpl
pop
or
pusha
cli
inc
inc
stc
sbb
movss
mov
inc
in
test
bndldx
add
pop
cmp
test
repz
push
push
outsb
jnp
push
jnp
xchg
stos
or
dec
cwtl
mov
add
adc
mov
or
pop
test
mov
hlt
jne
rcrb
or
testb
mov
sub
shrl
les
and
ljmp
cmp
sub
adc
lcall
je
sbbb
clc
xchg
rdpmc
test
outsb
gs
ljmp
stos
pop
shlb
out
loop
ja
int
adc
jge
adc
sub
inc
jp
cmp
lock
test
sub
jl
sub
lds
cli
test
ja
xchg
inc
jl
mov
or
inc
jl
inc
and
add
ja
jo
mov
mov
in
or
aaa
movsl
add
push
lds
sbb
fsubrs
shlb
je
jo
pop
cld
inc
xchg
in
or
push
and
push
xlat
sbb
ss
lods
scas
mov
aam
xchg
jmp
pop
es
or
cld
xchg
sub
adc
jns
mov
out
lods
and
loopne
nop
leave
jmp
mov
inc
aas
lods
out
stos
cli
and
inc
pusha
out
push
clc
fadd
pop
call
int3
xchg
and
fs
hlt
pop
push
sub
dec
push
or
sbb
push
sub
mov
push
aam
test
out
jb
imul
cmp
in
sbb
lea
call
stos
and
sbb
clc
out
sbb
sahf
sub
frstor
call
adc
or
sub
adc
cld
popf
and
cmpsb
ret
xchg
pop
xchg
mov
push
sub
out
adcl
push
adc
mov
dec
and
push
jns
cwtl
sbb
mov
xchg
aad
dec
mov
adc
ficoml
data16
or
nop
test
xchg
fwait
movsb
adc
cmp
cli
or
push
cmp
or
orb
out
inc
inc
cmp
inc
repnz
adc
add
aam
adc
add
in
shll
mov
adc
out
or
mov
ret
mov
adc
out
aam
iret
xor
mov
dec
or
lds
jns
out
cld
xor
mov
daa
jne
sub
out
and
or
and
loop
out
or
test
xor
sbb
ret
loop
and
jo
sbb
in
and
cwtl
sbb
in
out
cmpsl
daa
push
and
adc
and
in
sbb
sbb
movsb
test
outsl
dec
shlb
cmp
test
inc
loop
xor
in
les
enter
dec
iret
movsl
xchg
or
add
sbb
inc
in
jmp
and
aam
arpl
adc
outsl
mov
and
aas
test
and
or
push
ljmp
sub
pop
adc
cmp
jb
sub
sbb
xor
pop
and
lods
cwtl
in
mov
shrb
pop
adc
adc
sbb
jmp
shr
xor
sub
fdivr
test
icebp
js
jmp
dec
jne
or
dec
jbe
mov
sub
test
xchg
push
push
movsb
testl
cmp
clc
mov
je
int
dec
mov
or
test
mov
inc
or
inc
pusha
and
and
inc
mov
lods
lock
fsubl
mov
sub
pop
jmp
jl
pop
cmp
imul
sbb
test
xchg
mov
icebp
xor
push
scas
mov
push
jae
add
int3
lods
rorb
pop
ret
jae
outsb
sbb
je
mov
jns
cltd
les
inc
in
inc
call
xchg
mov
inc
loope
mov
pop
sub
int3
in
mov
adc
jb
hlt
adc
sub
dec
jae
sbb
add
fstpt
or
in
push
cmp
xchg
insb
dec
dec
ds
pinsrw
cmp
inc
insb
adc
int3
push
sbb
lret
sub
rcl
xchg
cmp
out
pandn
adc
popf
xchg
sarb
jne
lahf
mov
adc
add
mov
js
mov
lods
add
rorl
xchg
bound
in
push
icebp
sub
sbb
movsl
pop
add
shlb
aam
mov
dec
test
sub
jno
sub
pop
pop
cmpsl
notb
cmp
mov
imul
ja
cmpl
xor
inc
push
adc
sub
ds
repnz
repnz
in
in
cmp
fldl
mov
inc
jb
push
inc
imul
cmp
fwait
sbb
loop
enter
pop
in
sbbb
sbb
mov
adc
push
xchg
cmpsb
sub
mov
movsb
sub
or
jne
das
sub
gs
xor
clc
cmpsb
movsb
leave
daa
movsb
imul
rorl
sbb
ja
jmp
sbb
cmc
fldl
das
mov
push
push
and
add
inc
jmp
adc
sbb
jo
loope
stos
out
jns
outsl
je
inc
stc
or
outsl
push
sub
cmp
outsl
lods
mov
icebp
mov
imul
sbb
adc
and
mov
sbb
loop
sub
add
outsl
movsb
adc
cs
pop
push
push
pop
cli
jo
mov
push
pop
jno
sbbb
push
cmp
push
jmp
movsl
dec
lea
pusha
dec
mov
xchg
jmp
xchg
sbbb
test
loop
fs
shrl
adc
sbb
or
out
inc
leave
sub
lods
test
mov
ja
xchg
adc
mov
sbb
add
addr16
sbb
dec
sahf
mov
mov
adc
loope
dec
aas
jmp
cmp
and
jno
adc
xlat
ret
pushf
and
imul
outsb
test
mov
and
inc
int
push
mov
xchg
and
sarl
loop
aaa
jp
push
dec
fisubs
cwtl
shll
xor
and
mov
cmp
pop
xchg
mov
pop
cli
lock
mov
or
call
cmc
dec
sub
pop
or
and
jb
adc
add
cltd
cld
leave
jns
mov
gs
lds
imul
cmp
jbe
jmp
ret
movl
std
jno
xor
pop
mov
mov
adc
adc
jg,pn
mov
jno
out
loop
push
xchg
add
xchg
les
das
int3
je
insb
in
push
pop
push
and
lds
pop
push
adc
pop
push
push
imul
shll
gs
andb
mov
adcb
lock
mov
test
add
fiadds
mov
inc
int3
cmp
pop
dec
or
repz
popw
lods
popa
daa
movsl
mov
lret
push
xchg
pop
xor
pusha
in
cmp
pop
in
pop
fsts
fistl
jp
lret
repnz
mov
pop
and
movsb
ja
in
fidivrs
data16
mov
inc
arpl
dec
movsl
sub
dec
inc
notl
mov
sbb
sbb
mov
xchg
ds
lods
popa
inc
push
je
push
fs
gs
dec
pop
jecxz
or
jl
cmp
push
push
ss
dec
or
inc
imul
mov
adc
dec
inc
adcl
pop
adc
out
push
fisttpll
and
iret
mov
popf
dec
sbb
mov
and
sarb
mov
roll
fists
les
cmp
aaa
cmp
popa
test
lods
lods
sub
movsl
mov
and
push
or
and
sub
push
cld
popa
xor
xor
mov
and
or
mov
adc
movsb
mov
mov
add
pop
sarb
and
insl
mov
sub
and
movsl
sub
ret
test
aam
test
popf
xlat
popa
mov
pop
mov
popa
pop
outsb
adc
popf
mov
out
mov
mov
push
mov
hlt
test
mov
jmp
dec
push
ret
push
xchg
sbb
pop
daa
dec
pop
and
adcb
ffreep
inc
inc
ret
pop
xchg
test
clc
inc
inc
arpl
cmpsb
or
adc
rol
cmp
mov
pop
or
subl
adc
out
pusha
movsl
push
mov
xlat
pusha
in
iret
lds
out
inc
pop
shr
xchg
rep
push
mov
adc
sub
mov
out
mov
cmp
mov
mov
loop
lea
enter
sub
adc
dec
jg
xor
mull
push
out
lcall
test
lret
pop
xor
mov
fimuls
mov
adc
test
mov
adc
and
pop
mov
popa
pop
lea
jmp
invd
mov
push
movsl
fs
cmp
and
data16
dec
test
xor
mov
mov
daa
inc
pop
inc
xor
jl
mov
pop
stos
pop
dec
test
and
push
push
push
mov
sub
mov
frstor
sub
inc
jmp
lahf
icebp
mov
je
add
icebp
xor
sub
xor
xor
xchg
adc
mov
lods
mov
adc
js
push
mov
push
jmp
push
add
mov
add
cld
mov
cltd
jmp
add
jp
dec
cld
scas
or
test
inc
scas
mov
cmp
push
and
xchg
inc
adcb
or
xor
cmp
test
std
fs
es
and
sbb
pop
push
mov
adc
hlt
dec
adc
fcoml
mov
push
mov
lcall
xor
repz
pop
cmpsb
push
and
inc
js
dec
xlat
dec
and
cmp
sbb
mov
negl
movsl
sub
xchg
mov
data16
ret
and
cmp
in
imul
and
mov
inc
lahf
adc
mov
add
jmp
inc
mov
sbb
arpl
xchg
jns
lret
les
ret
pop
in
jg
cmp
les
cmp
jb
cmp
mov
arpl
lcall
test
jne
add
xor
adc
cwtl
pop
mov
test
xor
nop
jg
add
jnp
sbb
mov
mov
testb
bsr
test
mov
popa
or
loopne
hlt
jle
decl
jo
pop
in
mov
popa
jae
mov
xor
imul
pop
lcall
dec
xchg
or
sahf
mov
sub
repz
sbb
dec
mov
fists
sub
pop
fmulp
push
jo
mov
sub
enter
inc
outsl
stos
movhlps
pop
mov
xlat
xchg
fsts
add
popf
cmp
dec
xor
pop
int3
pop
dec
in
lahf
cwtl
dec
popf
inc
repz
sysenter
je
inc
dec
enter
pop
pop
lahf
pop
add
pushf
xchg
and
and
or
add
pop
inc
in
or
xor
ret
inc
push
and
jo
sahf
mov
and
fdivrl
lock
dec
pusha
inc
fcompp
or
jmp
mov
aam
adc
and
popf
sbb
push
jo
lds
jo
sub
push
clc
icebp
in
push
sbb
add
xchg
pusha
out
cltd
xchg
inc
cmp
and
add
pop
jne
xchg
mov
xor
movsl
shl
or
dec
sbb
pop
test
in
les
mov
and
jnp
fisttps
inc
and
add
mov
rol
repnz
out
xchg
pop
pop
inc
cwtl
repnz
or
xchg
xor
ss
jg
outsl
jecxz
mov
sub
jne
stc
das
shl
add
pop
shll
inc
and
push
inc
test
hlt
scas
imulb
or
cmc
pop
sbb
cld
repz
inc
dec
inc
xor
mov
ret
fisttpll
insb
orl
aaa
and
xchg
inc
sahf
and
push
push
and
adc
push
dec
xrelease
cmc
sub
sub
inc
inc
rcrb
push
jno
bound
and
iret
push
jmp
ljmp
test
mov
and
adc
pop
clc
jnp
sbb
dec
or
inc
jl
adc
test
xorb
outsb
and
sbb
and
mov
and
pusha
movsl
mov
es
fsubrl
sub
jno
inc
jg
and
aad
sub
inc
cmp
add
inc
xor
xchg
jno
test
push
out
cmpsl
push
pop
call
mov
pushf
mov
dec
sub
adc
jge
pop
and
mov
in
jo
push
xchg
adc
push
mov
adc
xchg
sbb
xchg
or
sti
xor
dec
aaa
dec
gs
add
mov
cmp
js
mov
add
jae
adcl
mov
call
les
and
test
push
out
mov
mov
subl
sahf
sbb
cwtl
fisubrs
sub
and
sbb
les
int3
inc
arpl
mov
push
shlb
inc
scas
mov
xchg
mov
mov
jo
jl
lret
cmp
or
xor
lret
lods
adc
bound
sbb
adc
and
inc
jl
sbb
ds
adcb
loopne
test
jge
adc
cli
or
enter
inc
push
imul
push
jp
pushf
xor
lcall
mov
lods
aaa
xchg
pop
inc
mov
xor
rcll
cmp
inc
das
cwtl
sub
adc
negl
sub
xchg
test
and
jle
bound
lea
mov
lret
xchg
xor
in
sub
mov
lahf
incb
insl
push
and
vaddsd
dec
dec
call
inc
sarl
test
addr16
xor
push
inc
out
xor
xchg
in
push
mov
inc
out
cmc
and
testl
inc
inc
fidivrl
pop
sub
xchg
fwait
and
pop
xor
cmp
pushf
lods
insb
xchg
clc
add
jecxz
push
outsl
adc
adc
and
sti
push
outsl
mov
std
and
sbb
movsl
or
xchg
pop
pop
inc
lret
and
mov
push
jecxz
mov
and
es
inc
mov
and
sti
test
inc
cmp
or
lcall
js
mov
lea
mov
jne
add
jb
stos
cld
lds
js
test
inc
and
inc
xor
pop
mov
push
or
gs
sbb
sbbb
xor
dec
adc
mov
adc
or
jmp
cmpsb
sub
cmc
insb
mov
xor
mov
and
push
mov
push
nop
cmp
xchg
lret
std
add
lods
stos
outsl
add
jmp
mov
insl
push
and
sub
adc
adc
dec
leave
xor
stos
jl
push
xchg
pusha
cld
inc
adc
packsswb
call
jecxz
daa
pop
rorl
mov
mulb
movsl
sbb
pop
pushf
mov
xor
cwtl
mov
psubsb
dec
aam
push
xchg
imul
jae
jmp
inc
mov
adc
jg
int3
sbb
inc
inc
mov
mov
daa
test
sub
adc
sub
push
sbb
std
sub
imul
outsl
push
imul
dec
dec
xor
movsb
push
mov
or
dec
js
xlat
lock
adc
adc
aas
ror
ss
inc
aas
sub
fs
and
loopne
daa
mov
in
inc
xchg
add
push
and
popf
or
push
inc
push
jle
add
mov
out
add
loope
lea
jg
addr16
mov
aas
cmpsb
xor
lods
dec
add
mov
push
push
or
dec
lods
in
out
jno
mov
test
jmp
lahf
aas
push
pusha
jmp
push
gs
inc
pop
addb
mov
ret
nop
pushf
xchg
xor
js
adc
pop
inc
dec
dec
or
lret
stc
adc
jmp
repnz
jo
dec
stc
les
fdivs
test
repz
xlat
add
pop
push
mov
cwtl
rcpps
dec
sbb
ja
movsl
pop
cli
ja
sbb
adc
popa
pop
je
pop
in
push
push
in
test
dec
cmp
mov
mov
das
ss
xor
xor
adc
sub
mov
xchg
mov
andb
mov
add
jge
or
js
and
inc
dec
repnz
jmp
xchg
jnp
or
lds
pop
roll
sub
xor
jg
cwtl
dec
daa
push
dec
inc
sub
cwtl
xchg
loopne
lea
adc
adcl
idiv
inc
fs
sub
dec
jge
nop
mov
mov
js
js
dec
or
cmp
andb
add
sbb
popf
pop
inc
ret
dec
hlt
adc
notb
enter
dec
mov
mov
out
sti
loopne
jge
cld
cli
sub
or
dec
rolb
pop
push
popa
xchg
fisubrs
test
cmpsl
mov
adc
xchg
fmulp
adc
and
pop
enter
sti
jb
je
shlb
mov
ror
inc
fdiv
lret
push
mov
mov
mov
pop
push
adc
rcrb
les
adc
lock
mov
cmp
push
test
push
cmp
mov
dec
les
jb
adc
in
addl
add
movsl
xor
sub
dec
push
or
ret
test
rep
ret
mov
call
js
dec
clc
add
mov
shlb
leave
dec
inc
outsl
and
outsb
sub
mov
and
repz
call
loope
mov
in
lahf
test
sahf
push
shll
or
inc
jmp
test
out
mov
pop
xchg
mov
in
int
rorl
popf
inc
xchg
mov
int3
cwtl
or
mov
in
fs
inc
loope
dec
mov
cmp
pop
mov
xchg
mov
lea
xchg
stc
lds
push
push
or
in
jb
jne
filds
push
stc
jecxz
dec
rcl
sti
loopne
dec
mov
hlt
xchg
lds
bound
es
push
sbb
sub
pop
lret
mov
iret
or
mov
mov
dec
divb
fstpl
or
pop
imul
ret
jnp
insb
xchg
sub
sub
dec
jl
fsubs
out
ss
jl
and
aam
gs
fsubr
lcall
and
inc
sbb
sbb
sbb
andl
in
call
icebp
adc
repnz
outsb
icebp
cmpsb
outsl
cmpsb
ret
test
mov
mov
jmp
mov
dec
jns
push
dec
divl
dec
push
adc
call
test
and
movsl
pop
mov
sub
jb
ret
xor
mov
ret
pop
scas
sbb
mov
cmp
divl
rcrl
or
jg
jp
scas
mov
insl
mov
and
adc
dec
fucom
mov
dec
sub
sti
sti
cmc
and
push
adc
xor
add
stc
fwait
sub
xor
pusha
je
cmpl
lds
cltd
fdivs
fldpi
popf
mov
gs
ds
push
add
je
inc
cmp
enter
lds
inc
pop
sub
xchg
and
cmp
test
pop
push
and
dec
nop
push
jmp
nop
xchg
jmp
push
bound
addb
mov
scas
cmp
imul
xor
and
xor
sub
pop
mov
pop
adc
xchg
and
and
sbb
add
xchg
imulb
mov
les
sub
fimull
xor
mov
fisttpl
sub
cmp
call
cwtl
dec
xchg
aam
lret
sbbl
add
cltd
jl
xlat
jmp
les
mov
jbe
mov
leave
mov
dec
lahf
mov
std
xor
sbb
jns
cld
or
lcall
mov
or
jle
lret
aad
sbb
add
cbtw
mov
or
xor
mov
sahf
lock
mov
clc
or
or
cmp
mov
dec
adc
jecxz
add
xor
call
push
pop
push
pop
dec
sub
and
decl
push
out
adc
dec
push
jbe
xchg
movsl
pop
pop
pushf
inc
xchg
daa
movsl
fimuls
dec
sbb
and
pop
dec
dec
mul
lds
aam
mov
and
sub
push
jle
xchg
fsubl
jo
xchg
inc
lea
mov
sub
aas
daa
or
xchg
cs
mov
or
fnstenv
pop
test
mov
aaa
push
jno
pop
and
dec
mov
addb
cmc
sbb
and
test
pop
leave
adc
lcall
sub
push
outsb
outsb
je
and
add
lahf
out
xor
or
imul
int
sub
cmpsl
cmp
inc
por
push
adc
mov
mov
lds
fcomps
and
push
mov
jle
fists
push
int
xchg
bound
push
cmp
adc
mov
sbb
rcr
in
adc
and
and
mov
inc
xor
test
mov
xchg
push
mov
add
jge
cwtl
and
inc
decl
je
test
pop
pop
ret
sub
xchg
adc
pop
and
out
sub
push
or
ret
push
into
pop
sbb
inc
sub
sub
and
movsb
add
xor
std
jg
repnz
scas
roll
adc
in
sbb
mov
mov
loopne
rcrl
inc
sub
sbb
bound
inc
and
addr16
outsl
pop
sbb
and
xchg
jo
push
enter
pushf
inc
mov
out
rorb
push
and
loop
in
repz
enter
movsb
push
in
inc
adc
movsl
mov
push
dec
out
shl
push
add
adc
xchg
mov
lock
and
or
call
shlb
mov
jb
jns
sub
push
mov
and
jle
loop
inc
into
mov
pushf
enter
lret
int
in
sti
sbb
jecxz
aas
adc
push
adc
adc
push
push
or
xor
mov
pop
mov
outsl
push
stos
repnz
and
jmp
enter
std
inc
mov
mov
dec
mov
sti
and
sub
mov
add
in
stos
test
leave
or
fists
inc
ljmp
pop
or
aam
ret
jnp
in
or
mov
shr
mov
mov
pop
add
push
call
inc
xchg
adc
xor
jle
ret
dec
mov
mov
daa
mov
sbb
jl
notl
and
push
pusha
cmp
jge
xor
adc
out
hlt
repnz
push
xor
call
iret
pusha
adc
inc
cmp
jl
fisubs
jo
mov
inc
adcl
dec
xchg
loopne
and
out
mov
or
adc
inc
mov
dec
std
or
rorl
inc
push
hlt
jle
xor
cltd
test
push
insl
sub
dec
cmp
xor
dec
push
cmpl
call
in
or
and
mov
mov
add
sbb
adc
pop
cmp
push
adc
cld
and
add
arpl
mov
daa
or
pop
mov
add
ds
push
adc
cltd
push
mov
and
adc
add
test
sbb
and
pushf
pop
jecxz
inc
and
mov
inc
xor
pop
sbb
mov
pushf
add
es
mov
iret
dec
lock
and
fs
dec
or
call
arpl
adc
mov
adcb
mov
sarb
dec
cmp
mov
cmpb
jbe
fisubrl
cmc
nop
inc
les
loope
dec
mov
dec
pop
mov
jecxz
rolb
adc
sti
sbb
dec
shr
lock
push
push
jmp
mov
push
cmp
push
insb
orb
inc
mov
jb
cmp
xchg
jge
stos
in
inc
push
inc
pop
pop
ret
jne
fwait
adc
mov
sbb
xchg
lcall
mov
lock
mov
cmp
es
aad
add
pop
add
fs
je
pop
ljmp
loop
rclb
or
imul
cmc
nop
push
call
sarb
sub
insl
rcrl
jnp
push
push
int
xor
cmp
test
repz
and
int3
push
divb
ret
int3
lods
aam
mov
mov
inc
rcll
cmp
test
fdivr
loop
xlat
pop
lret
inc
ja
idiv
cmp
stc
xor
pop
cmp
les
insb
jmp
sub
hlt
mov
stos
out
jns
mov
sti
mov
test
mov
and
cmp
pop
je
fstps
ds
and
and
xchg
xchg
clc
ljmp
mov
sub
call
add
ljmp
push
sti
fldenv
ja
enter
sbb
xor
mov
cmp
js
mov
jl
mov
data16
push
mov
stc
test
shlb
es
push
xor
pop
orb
popf
jbe
pop
lcall
inc
mov
lret
ss
push
daa
adc
lods
movsb
pop
add
jne
decb
in
jge
xchg
or
cmp
test
dec
ret
aam
in
sbb
inc
je
insl
push
mov
scas
xor
int3
ret
into
pushf
lock
clc
sbb
fs
and
lods
jp
push
cmpsl
mov
cmp
jbe
loop
arpl
test
repnz
xlat
fs
jmp
leave
aad
les
scas
and
enter
je
std
adc
mov
ret
add
push
sub
inc
jne
jecxz
lock
push
and
stos
test
fbstp
lea
or
and
jmp
xor
fildl
add
subb
ds
rcrb
inc
push
and
jne
push
xor
pop
jne
push
sti
push
push
out
xor
ss
nop
and
ret
loope
cmp
in
dec
sub
cmp
leave
jge
xor
cmp
in
aad
inc
fists
ret
xor
pop
gs
xchg
pop
push
and
pop
inc
sbb
lea
inc
inc
pop
adc
add
push
xor
cmc
sbb
push
and
adc
or
cmp
adc
movsl
xor
and
ret
sbb
loopne
cmp
ss
loopne
insl
icebp
mov
and
fisttps
sbb
inc
or
push
and
in
pop
mov
lret
and
and
pop
dec
push
in
pop
call
or
sbb
ljmp
gs
pop
loopne
ficoms
push
dec
sarl
cmc
popf
jnp
ljmp
adc
jb
rcrl
and
mov
mov
push
loopne
cmp
cwtl
xor
das
lcall
xor
rol
mov
push
and
and
adc
loop
das
enter
jne
arpl
lods
xor
pop
jge
mov
and
cld
pusha
pop
cmp
cmc
jl
push
cmp
push
ret
shrl
mov
and
fdivl
xchg
push
xor
dec
pop
sbb
cmp
mov
icebp
mov
daa
add
or
push
imul
aam
add
add
dec
in
lock
cmp
or
std
out
jl
daa
mov
adc
aas
test
xlat
mov
stc
clc
outsl
push
orl
outsl
jmp
mov
fiaddl
cmc
push
frstor
jbe
aas
xchg
andl
lock
int3
adc
in
orl
and
push
push
sub
sub
je
jae
outsl
sub
aad
test
lds
dec
and
dec
push
push
xlat
enter
jmp
or
sub
dec
clc
sbb
or
cmp
push
xor
or
or
add
dec
out
or
cli
sub
jo
dec
pop
jmp
sbb
insl
sbb
cmp
mov
negl
sbb
add
sbb
jle
push
fcomps
imul
call
movsb
jle
loop
push
iret
test
mov
add
or
adc
js
call
jmp
js
dec
or
adc
test
outsb
outsl
and
aam
push
jne
cmpl
aas
sub
xor
mov
add
dec
notl
mov
lods
mov
loopne
push
adc
dec
sar
push
inc
test
les
push
mov
xor
dec
xor
jge
pop
lcall
dec
or
jne
xchg
mov
xor
cltd
lods
push
mov
mov
les
rclb
sbb
push
fmull
fidivrl
in
xor
enter
test
push
cld
in
sti
mov
or
mov
and
and
dec
pop
hlt
cwtl
add
pop
lock
push
dec
mov
jmp
push
mov
sbbl
pop
imul
mov
sub
xor
jmp
ljmp
xor
call
or
mov
stc
or
je
movb
inc
mov
sarl
and
mov
pop
or
cltd
jle
sbb
dec
mov
and
or
cmpl
and
es
rorb
jno
ret
loopne
imull
jmp
adc
dec
xchg
sbb
or
enter
pushf
jbe
stos
or
hlt
je
out
jg
push
divl
or
sub
std
jecxz
push
es
fwait
sbb
or
pop
cmp
or
push
add
ss
mov
inc
cmp
jne
dec
adc
frstor
inc
pop
enter
repz
dec
enter
and
add
push
cli
lret
mov
jne
sub
cmpsl
ja
add
inc
je
xor
jmp
sbb
hlt
sub
or
out
int3
or
lock
mov
push
orb
popl
xchg
xor
xor
inc
rcr
das
dec
ret
popf
jl
cwtl
shrl
inc
das
or
dec
lret
jne
leave
repnz
ds
and
mov
mov
in
lea
and
cld
xchg
sbb
and
sub
push
mov
dec
sub
movsl
xchg
or
sbb
and
push
nopl
js
sub
pop
imull
test
sub
les
adc
push
lret
and
push
or
sub
scas
divl
sti
cltd
cmp
jno
leave
filds
rorl
dec
call
pop
dec
cmp
jmp
push
int3
xor
arpl
jbe
xor
inc
cs
pusha
push
sub
ret
pop
out
sub
stc
and
loopne
xor
pop
and
dec
call
jne
inc
mov
not
cmpsb
jae
ljmp
cmc
dec
adc
push
je
sub
jp
pop
shlb
inc
mov
add
jbe
mov
shll
into
dec
or
dec
push
adc
jle
dec
add
push
call
mov
les
jmp
mov
cwtl
movsl
test
adc
mov
xor
enter
or
pusha
ret
ds
cmp
jb
in
mov
ja
push
push
inc
or
xor
sub
fsts
push
mov
jbe
and
inc
cmp
inc
sbbl
xor
add
mov
adc
repnz
mov
and
adc
and
sub
dec
pop
stos
int3
pop
push
sbbb
xchg
cmp
das
push
popf
adcl
out
gs
rcr
push
xchg
imulb
js
test
push
test
mov
sub
mov
mov
loopne
push
xchg
mov
daa
sbb
mov
jbe
ljmp
aas
inc
push
mov
les
mov
aam
mov
lods
stos
insl
and
enter
pop
push
adc
push
and
sbb
fisubrs
clc
in
jp
sub
or
popa
or
dec
scas
test
fmull
andl
xor
xchg
lea
lock
mov
push
pop
sub
enter
call
xor
push
inc
lea
dec
lods
nop
sbb
mov
xchg
std
xor
xor
push
push
subb
adc
cmpsb
push
mov
adc
imul
add
lds
inc
jg
cmpb
mov
in
xor
inc
xor
add
inc
cmp
je
mov
imul
out
jp
push
popa
xchg
push
mov
inc
leave
call
ljmp
mov
push
pop
cs
pusha
pushf
push
push
pop
push
lret
sub
in
sbb
xchg
sub
enter
mov
sub
xchg
sbb
data16
mov
pop
adc
lret
cmp
jno
push
inc
shl
pop
call
lret
inc
push
sarb
mov
mov
pop
or
sbb
dec
sbbb
sub
and
daa
cs
sub
dec
pop
and
cmp
lahf
pop
ffree
mov
mov
int
icebp
cld
xor
cmp
inc
cmp
jb
out
or
mov
test
cli
test
sbb
mov
sbb
stos
sub
adc
push
jle
lds
xor
ret
fnstenv
pop
pusha
movsb
push
xchg
insl
orl
dec
ds
sub
jnp
in
xorb
cmc
out
push
sbb
push
inc
movsl
or
mov
pop
or
cmp
icebp
ljmp
push
mov
in
enter
imul
stos
lret
iret
xchg
stos
rclb
xor
popf
jmp
mov
std
in
jp
cmp
push
jb
popf
pop
or
ror
jg
inc
cmp
lock
xor
and
ss
fcomp
movsb
adc
or
scas
or
std
movsb
insl
and
js
clc
xor
int3
mov
xor
jne
cmpsb
cmp
xlat
insb
rol
mov
mov
je
push
dec
mov
pop
xchg
test
and
inc
jae
push
sub
les
or
jp
push
movsl
xor
daa
or
inc
pop
leave
test
jp
cs
scas
lods
inc
les
dec
xchg
jns
xchg
sbb
arpl
cld
pop
shlb
fst
stos
sbb
cld
push
mov
lret
hlt
adc
pop
cmp
int
push
sbb
lods
mov
adc
cmpsb
pop
xchg
xchg
inc
cltd
cs
push
mov
mov
adc
xor
or
sbb
cs
arpl
je
push
dec
sbb
mov
shll
sub
cs
adc
push
dec
cmpsb
adc
adc
and
lcall
aam
lret
pop
xchg
mov
xor
jl
sbb
adc
mov
sbb
xor
xor
rcrl
in
pop
std
cwtl
cmp
inc
add
mov
and
movl
jo
pop
cli
mov
stos
sub
inc
leave
pop
sbb
mov
add
cmp
stos
cmp
mov
sbb
xchg
and
int3
push
lods
jne
push
jge
adc
inc
orb
add
mov
push
push
mov
in
mov
js
adc
shll
sub
mov
adc
and
or
nop
jmp
lock
std
dec
into
sub
cmp
push
pop
or
add
fiaddl
ficoms
shlb
les
sahf
xor
bound
call
jg
into
lahf
int3
into
dec
and
iret
inc
pop
and
shrb
adc
clc
lock
push
xchg
jg
rcll
in
lods
mov
pop
mov
push
test
sbbl
ja
and
sub
jl
pusha
sbb
stos
cld
shll
push
cmp
ss
and
test
hlt
sbb
aas
jns
test
cmp
stos
cld
shlb
enter
test
mov
and
inc
xor
lret
sub
shl
decl
inc
and
jl
push
ret
and
hlt
stos
cld
int3
mov
sbb
lcall
adc
mov
cmp
sub
sub
lock
in
or
test
push
pop
push
jne
push
les
xchg
push
xchg
sbb
add
shld
pop
test
dec
imul
cmp
cmc
fcoml
inc
je
jmp
xchg
outsb
out
xchg
pop
add
xor
jae
sub
sbb
out
dec
inc
shl
sub
filds
mov
hlt
pop
pop
xchg
cld
cltd
movsb
inc
cmpl
xor
ljmp
mov
sub
push
sbb
rcll
mov
xor
test
ja
addl
mov
jb
add
leave
or
incb
ja
adc
orl
jae
push
and
popf
and
adc
mov
and
inc
xor
sub
and
adc
mov
xchg
sbb
pop
ret
sub
pop
add
roll
ret
adc
push
push
insb
ret
ja
or
xor
push
pop
or
push
outsl
icebp
mov
or
cmp
push
push
jp
xchg
adc
es
and
insl
addr16
dec
inc
test
jne
mov
jo
sub
sbb
nop
and
push
gs
and
pop
and
adc
pop
aam
and
adc
add
and
xchg
push
je
movsb
xchg
jne
cmp
daa
fldl
xchg
pop
lods
jp
and
loope
sbb
mov
subb
lock
repz
loopne
clc
adc
pop
lock
mov
ja
rcrb
imull
in
js
stos
xchg
adc
push
mov
mov
out
ja
pop
mov
popf
stos
popa
sbbb
jae
icebp
add
inc
jmp
xchg
pop
push
cli
xchg
ljmp
cwtl
sbb
pop
mov
test
hlt
add
pop
addr16
cltd
xor
and
xchg
dec
in
adc
or
cwtl
notb
or
cmc
push
rorl
clc
push
fidivrs
stc
adc
enter
faddl
in
daa
pop
in
push
cli
test
pop
and
loop
jg
mov
push
push
cmp
inc
cmp
push
jge
mov
loopne
call
aad
jne
and
adc
shrb
dec
pop
lret
cmp
mov
inc
nop
push
icebp
pop
mov
add
push
pop
mov
adc
push
aaa
or
jne
aam
sbb
clc
cmp
sub
push
or
cwtl
adc
sbb
orl
push
push
or
jmp
nop
fstpl
out
mov
xchg
call
push
cli
in
sub
or
decl
inc
pop
ja
sub
js
push
mov
pushf
jecxz
inc
add
push
test
mov
das
mov
xchg
popa
cmp
mov
mov
inc
andl
fs
push
sti
out
and
adc
mov
lods
js
pop
cltd
jne
push
movsb
sbb
sub
mov
add
cmpsl
sbb
jmp
xchg
sbb
mov
cmp
sub
sahf
mov
jne
pop
mov
inc
push
lods
sub
adc
or
js
pop
cmpsb
jno
dec
and
aad
jo
mov
jo
or
inc
cwtl
sbb
cli
add
repnz
shrb
shr
sub
popa
add
xchg
xchg
and
addr16
in
mov
pop
fidivrl
fdivl
je
call
rol
out
cmp
adc
aaa
sbb
push
jno
jl
jbe
xchg
mov
dec
cmp
or
xor
scas
mov
mov
ljmp
sbb
in
fsubrs
test
mov
pop
daa
arpl
dec
les
lds
mov
dec
and
adc
cmp
xchg
xchg
and
out
jae
lock
and
arpl
mov
lret
testb
and
adc
push
dec
aaa
cli
or
and
and
push
dec
push
mov
adc
sti
lods
push
pop
sbb
repnz
push
xor
push
aam
scas
xor
xchg
fidivs
mov
or
mov
icebp
adc
dec
inc
inc
fidivrs
mov
repnz
ljmp
scas
loope
sbb
add
sbb
push
inc
jbe
cld
xlat
in
mov
and
stc
fisubl
fiaddl
pop
adc
and
enter
and
pop
mov
xchg
addb
ljmp
xchg
sub
iret
or
mov
mov
je
clc
sbb
in
movsl
dec
out
add
mov
repnz
psllq
popf
fs
adcb
sub
nop
add
adc
mov
add
out
les
test
pushf
sbb
adc
and
cmp
push
test
imull
xchg
mov
data16
cwtl
jae
shll
dec
push
popa
repz
push
test
lds
jmp
fistl
xchg
jl
sar
fs
lock
and
add
call
dec
loop
inc
mov
mov
ret
bound
cwtl
inc
jb
out
jmp
mov
mov
pop
mov
int3
pop
add
enter
jnp
cmp
or
push
in
in
inc
ljmp
mov
mov
iret
mov
les
adc
mov
jno
movsb
fisubrs
mov
push
inc
popf
ficoms
or
xlat
outsb
adc
test
or
ja
push
popf
sub
xchg
adc
sub
mov
test
in
popa
push
notb
and
dec
xor
adc
adc
dec
pop
into
sub
rorl
mov
inc
push
or
sub
cmp
push
fstpl
push
into
mov
adcl
call
fisttpl
push
int3
rol
add
popf
push
insb
or
aam
pop
push
jecxz
inc
gs
and
jge
fiaddl
mov
add
push
imul
movsb
jns
or
pop
movsl
xchg
mov
adc
aam
push
cmp
lock
addr16
add
mov
sub
and
cmp
add
or
shlb
es
sub
or
push
lea
xor
orb
push
leave
jne
mov
dec
push
dec
test
cmp
dec
and
sbb
sub
dec
loope
insb
scas
test
mov
lds
sti
jmp
fmul
or
dec
adc
hlt
sbb
push
xchg
es
jg
jb
orb
rolb
cmp
addr16
scas
lahf
mov
fsts
sti
imul
ret
mov
dec
jge
push
syscall
mov
mov
jl
out
jmp
push
mov
notb
imul
mov
enter
inc
and
andl
rorl
xor
nop
pop
andb
push
pop
test
daa
ret
fistpl
mov
xchg
call
adc
xor
push
stc
sbb
int
push
aaa
inc
adc
xchg
or
add
adc
ret
and
addr16
jne
mov
sub
push
dec
adc
aaa
sbb
decb
push
push
nop
and
in
cmp
jle
xchg
ss
mov
xor
lock
aaa
xchg
out
cmp
je
inc
mov
sahf
sub
cmp
push
sbb
test
add
mov
push
sub
inc
sub
push
pop
inc
popf
sbb
push
pop
add
lds
pop
mov
call
popa
ret
mov
mov
inc
mov
fmull
mov
cld
mov
cmp
cwtl
jne
test
jle
cmp
loopne
push
call
add
xchg
dec
inc
add
add
ret
testl
call
daa
jbe
stc
mov
outsb
jmp
movsb
sub
and
adc
ret
mov
sar
xchg
cmpsl
shlb
and
or
adc
dec
out
sti
fistps
and
sub
hlt
clc
bound
push
sub
xor
test
in
lcall
cmp
shrl
mov
idiv
bound
les
daa
pop
sbb
and
xchg
or
and
daa
je
nop
inc
push
sbb
nop
add
aam
roll
rep
orb
dec
sbb
xchg
mov
cmp
and
aas
and
jecxz
ja
in
and
inc
jmp
por
mov
push
adc
inc
inc
mov
loope
call
in
repnz
jne
test
lret
test
mov
or
cmpsl
imul
sbb
test
std
pop
ror
push
mov
mov
popa
mov
std
dec
mov
leave
jp
inc
or
enter
pop
add
pop
or
es
inc
mulps
imul
enter
add
xchg
icebp
adc
iret
cld
add
xchg
or
xor
push
cwtl
and
dec
mov
cld
incl
cmc
sbb
lods
in
jae
ret
jo
daa
mov
cs
jp
dec
sub
pop
push
loop
mov
movsb
cld
xor
and
je
mov
jb
mov
xchg
in
stos
call
inc
cmp
push
push
jge
inc
inc
cmp
adc
xchg
push
push
inc
mov
and
lods
push
jns
int3
out
inc
test
pop
sti
fs
call
push
sbb
das
jo
dec
jecxz
ljmp
cwtl
dec
hlt
xchg
call
imul
movzwl
rcrb
out
fwait
and
aam
stos
push
adc
sbb
cmpsl
int3
adc
xor
test
rcll
ret
xchg
sbb
xchg
ja,pn
inc
xchg
push
mov
test
xchg
pop
cmp
movsl
icebp
jl
shr
adc
xor
dec
mov
mov
push
add
in
lret
dec
cli
pop
aad
into
dec
das
ljmp
push
jl
adc
inc
test
jne
jmp
pop
push
sbb
setae
and
sub
sbb
xchg
xchg
sbb
movsb
cli
adc
faddl
cld
and
push
mov
outsl
test
and
or
mov
jae
js
movsl
and
and
adc
or
dec
int3
pop
out
scas
fcompl
xchg
jg
or
push
xchg
lret
and
test
mov
push
mov
sbb
and
add
or
inc
xchg
fs
push
daa
sbb
in
testl
call
loope
loop
sbb
hlt
jmp
fs
and
in
lock
mov
das
adc
jecxz
adc
jle
cmp
aaa
push
sub
cltd
mov
add
mov
neg
nop
lea
js
xchg
cwtl
inc
test
adc
dec
lea
or
aaa
jl
mov
sti
jb
mov
pop
aaa
nop
inc
add
or
mov
sub
enter
lods
push
cmp
jb
sub
scas
push
cmp
shr
add
dec
jo
lea
popl
das
cmc
ret
and
adc
jns
xor
loopne
add
push
jg
xchg
adc
and
pop
sbb
movsl
pop
aaa
jo
movsb
rcll
and
lods
loope
daa
pop
sbb
push
add
jge
hlt
dec
pop
icebp
xor
push
in
mov
cmp
add
addb
and
xor
or
flds
test
sar
arpl
or
jb
loopne
loop
cmp
std
test
inc
mov
pop
push
mov
scas
cli
fdivrs
add
mov
test
je
sbb
sub
aas
jmp
dec
cmp
mov
jle
jns
sub
fisttps
call
mov
jmp
stos
sub
adc
fdivl
inc
inc
mov
cmp
mov
cmpb
mov
push
das
adc
leave
fcom
lock
and
pop
jle
lret
aad
mov
push
jmp
dec
shl
and
clc
inc
cmpb
hlt
loopne
dec
inc
enter
pop
pusha
sub
sbb
cmp
icebp
lahf
sbb
scas
push
add
mov
xor
cmp
jge
sbb
pop
je
scas
rolb
sbb
fnstcw
fcomps
or
xor
sbb
les
add
cmp
stos
leave
lcall
xchg
cmp
push
and
js
sub
dec
jne
orl
and
cli
and
ss
adc
popf
xor
cmp
sbb
shl
inc
repnz
add
adc
shll
icebp
sbb
jge
push
push
inc
or
pop
pop
push
ret
sarl
jne
pop
pop
mov
lea
arpl
or
int3
dec
or
xorl
jmp
mov
dec
mov
jo
or
es
faddl
int3
cmpsl
add
push
test
pop
jns
das
lock
or
movl
cmpsb
push
pop
inc
test
ljmp
cmpsb
mov
mov
mov
aam
add
test
je
mov
cmp
cmp
aam
xchg
setp
add
dec
jmp
sub
aad
xchg
or
std
imul
rcrb
and
sbb
dec
jmp
mov
inc
lcall
dec
and
push
jmp
xor
lret
subl
add
fildl
pop
dec
add
cvtdq2ps
lock
fwait
adc
sbb
adc
push
mov
push
mov
movsb
xor
jnp
mov
ret
push
adc
inc
data16
xor
or
xor
mov
dec
xchg
pop
mov
xchg
outsl
lods
js
inc
push
fimull
jg
inc
pop
lea
mov
js
fs
andb
sbb
cmc
out
and
xorl
rolb
notl
or
std
adc
cmp
push
fs
jne
mov
xchg
mov
je
and
push
es
jb
mov
or
and
dec
push
and
push
or
jecxz
push
and
dec
dec
push
push
out
fs
or
mov
insb
xor
mov
jne
scas
testb
inc
or
jmp
stos
mov
pop
and
inc
cmc
lods
imul
or
mov
test
xor
jle
mov
adc
roll
add
cmp
jbe
add
movsl
mov
adc
push
and
test
or
lods
mov
and
pop
jo
leave
sarb
cmp
mov
xor
xor
adc
les
rorb
mov
aad
iret
ss
scas
adc
mov
adc
bound
es
mov
xchg
nop
and
inc
inc
inc
mov
xor
cmp
or
sub
mov
adc
or
add
mov
mov
call
and
shlb
pop
and
shlb
pop
push
lea
xor
add
leave
clc
and
sahf
sub
cmp
or
cmpsb
fists
sahf
sub
cli
lret
movsb
movsb
push
fimull
mov
lea
sarb
pushf
andb
or
icebp
lock
cwtl
loope
data16
cmpsb
lock
nop
inc
stc
bound
adc
jo
and
jno
or
sub
inc
push
xchg
faddl
sbb
loopne
dec
sub
ficompl
sbb
push
out
and
mov
gs
sub
jno
jne
dec
scas
xor
mov
lods
pop
sbb
and
adc
sub
sbb
xor
sbb
xchg
and
adc
cs
and
adc
cs
and
daa
cwtl
xchg
and
or
sbb
movsb
mov
mov
test
adc
mov
mov
mov
std
inc
nop
jns
add
push
rcll
adc
ljmp
icebp
mov
in
stc
ja
pop
jmp
inc
and
push
inc
add
shll
adc
add
fs
nop
pcmpeqw
push
add
fiaddl
shll
and
bound
sbb
add
int
lea
push
sub
clc
jmp
test
push
mov
pop
test
jge
test
shrl
cli
cwtl
bound
dec
pop
dec
lret
sub
xchg
loope
enter
xchg
sbb
lret
mov
stos
fnsave
dec
dec
sub
out
push
cmp
les
movsl
adc
jmp
add
jae
pusha
lds
loope
out
inc
add
ret
xchg
nop
mov
add
cmp
fsubrs
or
sahf
adc
shr
xchg
sbb
inc
adc
cli
dec
push
fwait
ret
hlt
rorb
adc
push
fcomps
adc
inc
mov
es
sbb
inc
mov
inc
int
loopne
notb
test
fidivl
dec
lret
dec
rcll
sti
and
inc
aad
adc
adc
or
lret
push
in
xchg
leave
into
push
sub
pop
push
jo
push
test
add
cmp
cmp
mov
xchg
sub
mov
mov
jo
or
shrb
aaa
outsl
sar
mov
stc
add
add
adc
or
jo
push
push
inc
adc
mov
inc
inc
andb
inc
xor
iret
andl
ret
jne
mull
fcomps
lahf
pop
leave
stos
call
jae
out
dec
mov
and
mov
xorb
cmp
rolb
mov
mov
cmp
cld
cmc
cmp
jmp
push
push
movsl
xchg
out
outsl
adcb
or
les
je
mov
shl
andb
in
inc
xor
inc
jmp
push
cmp
sbb
or
add
jne
rorb
push
lea
add
dec
or
xchg
push
iret
jl
mov
test
pusha
pop
sub
cmp
jb
cmp
sub
jns
sub
ret
divl
mov
leave
mov
mov
add
dec
clc
pop
push
aas
ret
sbbl
cmp
bound
popa
inc
sub
jno
dec
dec
lock
mov
js
sub
loope
xchg
inc
adc
pop
sub
and
mov
mov
pop
std
jge
lret
push
lret
sub
mov
loop
and
xor
scas
das
push
add
je
sub
in
cmp
or
es
adc
out
sti
movsb
mov
jnp
lods
cld
call
lods
xchg
mov
lahf
xchg
push
adc
inc
adc
cld
fcomps
bound
add
and
and
data16
mov
sub
or
xor
and
or
jmp
ja
mov
and
ret
lahf
pop
sub
add
lock
jmp
push
pop
pop
adc
es
int
int3
sub
cmp
mov
cmc
cmp
add
mov
subb
outsl
pop
push
or
loopne
or
inc
xor
enter
out
inc
ljmp
jbe
out
inc
pushf
or
add
fs
fs
popf
ljmp
dec
push
jo
mov
cmc
movsb
cld
push
push
pop
add
jge
jecxz
rolb
pop
mov
push
mov
add
mov
and
mov
jecxz
inc
add
xorb
andl
push
push
xchg
adc
pusha
push
lock
into
pusha
pop
push
shl
shr
add
fnstenv
pop
mov
in
fiaddl
push
and
push
dec
adc
sahf
adc
and
and
dec
lock
daa
ret
inc
xchg
mov
and
sarb
inc
out
out
movsb
and
or
imul
fcomps
sub
mov
inc
cmp
roll
in
sbb
fcoms
shl
adc
orb
fnstenv
jns
divl
lret
addb
icebp
dec
decl
iret
leave
movb
loope
push
test
and
pop
pushl
ds
pop
les
inc
cld
cmp
bound
out
xchg
test
mov
out
mov
daa
adc
xchg
jmp
pop
lods
mov
aam
pop
and
adc
xchg
and
and
sti
jg
scas
cs
adc
shrb
or
popa
dec
add
pusha
xchg
nop
and
add
mov
pop
and
fwait
je
push
pop
pop
lods
imul
push
jne
sbbb
gs
pop
orl
dec
lock
push
mov
or
pop
rsqrtps
jno
loopne
dec
mov
test
inc
cmp
xor
or
add
pop
stos
loop
pop
lock
jmp
jle
shll
push
int
pop
and
cmp
xchg
xchg
inc
add
sbb
rcr
jmp
fsubs
mov
es
inc
lcall
ret
fs
jne
pop
sbbb
popa
add
fwait
xor
gs
or
add
es
mov
xchg
xor
mov
sbb
outsb
xchg
add
loope
in
test
testw
jg
ljmp
inc
mov
push
push
sbb
sub
xor
enter
mov
sar
push
sbb
cli
repz
sub
sub
jle
xor
filds
fbstp
add
dec
adc
cs
cwtl
adc
je
shlb
fcmovb
adc
push
push
mov
or
inc
jmp
aaa
sub
jmp
add
imul
push
loop
sub
pop
hlt
lods
mov
outsb
repnz
cs
imul
and
and
ss
orb
and
in
cli
push
filds
sti
pop
adc
addb
cltd
fdiv
inc
adc
adc
xchg
pushl
cli
rcrl
ret
and
sbb
in
adc
leave
jnp
xor
push
ss
xchg
mov
clc
push
pop
inc
cld
dec
and
push
mov
outsl
fcompl
sub
mov
je
shr
inc
mov
dec
and
push
inc
dec
and
mov
adc
lahf
aad
imul
add
jne
and
loop
subb
lcall
inc
out
pop
rorb
xchg
push
adc
and
ja
adc
jbe
dec
test
push
daa
pop
sub
lods
adc
call
fadds
sub
dec
inc
jnp
pop
mov
shll
mov
fnstcw
outsb
fsubrl
xchg
inc
sub
xor
jno
xchg
xor
ret
mov
cmpsl
mov
leave
ss
adc
call
gs
mov
adc
jl
pslld
and
lds
sbb
add
jmp
jnp
xchg
adc
and
dec
push
imul
jne
sarl
xchg
pop
addb
push
jb
fisubs
dec
push
repz
push
repz
fldenv
adc
xor
push
aas
jns
sbb
or
std
and
or
pusha
sbb
mov
shlb
arpl
jmp
add
ficoms
insb
loope
popa
xor
loopne
jmp
jb
push
or
movb
or
or
sarl
mov
fs
and
mov
loope
add
sub
fadds
dec
add
jecxz
lret
sub
out
test
pop
jp
inc
insb
or
sbb
cmp
mov
mov
enter
je
ds
aas
pop
mov
cmp
jb
lds
mov
or
je
call
dec
cmpsb
xchg
mov
test
aam
xlat
in
fisubs
int
push
sub
cli
mov
enter
js
cmp
inc
ljmp
bound
loop
inc
aaa
xor
adc
pop
cmpsb
ret
fwait
insl
dec
loopne
or
or
or
inc
adc
loope
or
jns
push
out
inc
adc
xchg
or
loopne
pop
lds
call
fs
adc
or
jo
and
test
mov
mov
js
sti
fs
dec
cmp
jecxz
mov
xor
pop
jmp
lock
inc
sbbl
add
addb
push
jbe
in
imul
jmp
cld
sub
imul
push
sbb
icebp
repnz
sbb
out
push
push
lret
adc
ds
push
ljmp
cmp
jmp
add
or
jne
div
sub
enter
out
add
jb
cmp
ja
cmp
popa
pop
jbe
dec
scas
lcall
mov
outsl
push
stos
outsl
xchg
sub
sbb
push
outsl
and
inc
or
xchg
enter
or
dec
insb
or
les
jbe
sub
adc
fadds
add
push
push
push
xor
mov
popa
test
mov
push
andl
in
lods
sbb
sbb
les
pop
adc
cwtl
inc
shll
push
fnstcw
daa
enter
sub
mov
sub
subb
inc
pop
pop
aad
pop
add
and
inc
das
movsl
jp
add
pop
cld
jne
jge
sub
mov
cmp
or
and
pop
ljmp
mov
movsl
mov
add
mov
adc
clc
mov
pop
daa
aad
jmp
push
jmp
sub
push
xor
inc
pop
cmp
outsb
mov
xchg
mov
stos
jne
sti
outsb
imul
sarl
and
add
xor
mov
cmp
jne
adc
dec
sbb
sar
inc
lock
jnp
jae
leave
adc
xchg
call
ret
nop
and
loopne
nop
sub
pop
cmpsl
jecxz
insl
cmp
mov
inc
cmc
xchg
jmp
sbb
add
rcrb
pushl
push
in
or
lret
enter
out
loopne
push
adc
loop
push
cmp
int
sbb
or
inc
fcoml
inc
inc
out
mov
push
lret
lock
jecxz
pop
pop
cmpsb
popa
jge
cmp
sbb
inc
jl
pop
repnz
push
mov
jmp
xchg
fsubl
push
add
fistps
and
imul
ljmp
addr16
and
cmpl
inc
adc
enter
and
gs
mov
mov
out
sbb
pop
jmp
push
outsb
sbb
popf
loope
push
sub
adcb
push
jno
xlat
inc
or
scas
cmp
jne
pop
mov
xor
pop
loope
or
call
aas
movsl
inc
cli
dec
or
mov
cli
mov
jb
adc
aas
mov
inc
aas
scas
and
sub
shrl
clc
dec
imulb
mov
jmp
hlt
sub
in
xchg
fmuls
clc
dec
push
ficoml
sub
xchg
mov
enter
call
test
inc
mov
jno
xchg
mov
pop
pop
or
xor
push
bound
mov
mov
push
cwtl
ljmp
jp
cs
sub
in
outsl
sub
lret
rorb
xor
jnp
xchg
sub
mov
cmc
dec
loope
test
ficoms
push
sub
stc
push
fs
das
jmp
lods
lret
or
jg
mov
sbb
cltd
hlt
aas
rorb
add
subl
imul
daa
addb
shrb
mov
or
push
into
xchg
std
add
invd
inc
mov
pop
add
ficoms
and
fs
nop
xchg
pop
cmp
adc
or
hlt
sbb
push
push
popa
sbb
sbb
dec
mov
or
mov
lea
cmp
jb
stc
push
pop
cwtl
cmpl
add
xor
pop
push
adc
adc
ffree
sub
adc
sbb
test
pop
mov
mov
das
cli
xor
mov
mov
pop
loope
add
stos
movsb
les
in
mov
gs
out
xor
mov
lea
daa
addr16
adc
test
pop
fs
xchg
fisubrl
jbe
push
add
jmp
jecxz
dec
insl
stos
pop
orl
out
sbb
sub
xor
adc
aam
and
addr16
push
ds
jne
pop
xor
leave
push
or
xor
sbb
and
adc
push
cs
cmp
jne
fstl
adc
and
inc
lods
pop
add
or
push
cmp
add
mov
adc
sahf
cmp
xor
xchg
in
xor
push
push
adc
inc
pop
and
push
inc
dec
ret
nop
add
pop
inc
mov
cmp
adc
ja
hlt
jb
push
or
lahf
leave
lret
add
bound
lahf
clc
mov
mov
jmp
cmp
divl
rorl
test
ds
xorb
dec
sub
xchg
jne
adc
add
ds
lret
or
xorb
adc
imulb
pop
push
mov
cltd
je
clc
pusha
pop
adc
mov
pusha
testb
sbb
notl
fwait
mov
imul
neg
aam
adc
dec
mov
xor
pop
in
xor
xchg
inc
mov
mov
shrb
leave
dec
cmp
and
stos
add
es
divb
scas
test
sub
repz
mov
sub
and
and
sbb
inc
not
mov
jo
dec
leave
fstps
cmp
subl
push
sbb
js
or
daa
add
cmc
sub
sbb
xor
mov
pop
xor
insl
icebp
test
aas
pop
xor
inc
jmp
push
or
gs
add
or
lds
lea
ljmp
dec
or
movsb
pop
pop
scas
push
add
jbe
aam
loopne
inc
mov
dec
sar
aaa
aam
gs
sub
dec
mov
xor
hlt
or
rorl
lret
lods
sub
adc
imulb
add
mov
stc
xor
xchg
xor
mov
inc
and
insl
gs
aaa
jns
or
lea
inc
movsb
push
xor
push
call
adc
push
xchg
pop
dec
dec
aam
dec
or
cmp
pushf
push
sbb
inc
sbb
insl
inc
mov
jg
adc
add
inc
lahf
xchg
xor
inc
enter
pop
aas
mov
imul
in
call
in
repz
rolb
xchg
push
adc
es
xchg
aas
daa
les
nop
mov
clc
aaa
repz
mov
scas
add
andl
adc
xor
and
decb
push
sbb
inc
pop
out
sahf
add
test
cmp
mov
adc
jne
or
jmp
out
popf
xchg
mov
add
push
xchg
add
dec
xor
mov
dec
sub
adc
xchg
push
push
dec
and
push
out
inc
test
clc
xor
pop
pop
ljmp
xlat
enter
js
push
enter
and
xchg
sbb
cmp
dec
aaa
mov
pop
cld
xchg
arpl
jge
pop
ret
xchg
xchg
xor
push
sbb
xor
push
dec
xor
pop
cwtl
or
mov
inc
push
add
and
dec
lock
inc
aas
rolb
jl
sti
and
or
push
cmpsl
mov
mov
and
add
roll
inc
mov
ja
pop
and
xchg
imul
inc
loopne
cmp
fadds
sub
in
popf
or
push
sub
dec
jg
adc
aas
je
or
push
movsb
or
inc
inc
cmp
mov
lret
adc
in
or
push
sub
xchg
jle
cmc
cli
inc
cltd
mov
adc
jb
jg
jmp
mov
cwtl
inc
inc
shrb
jmp
mov
in
add
mov
lock
add
lret
push
mov
jmp
je
or
inc
and
dec
or
dec
std
xchg
xchg
mov
or
lret
cmpb
jne
adc
jg
xor
push
inc
cmp
xchg
js
insb
test
mov
xor
xchg
sbb
into
ret
cmc
rol
movsl
adc
jg
dec
mov
push
int3
aam
sbb
data16
jmp
push
clc
addr16
sbb
jns
push
gs
xchg
loope
xchg
pop
and
clc
and
adc
sbb
call
xchg
outsb
data16
insb
and
add
inc
cld
xor
jne
dec
shll
ds
mov
pushf
in
and
fbld
incb
or
or
sbb
dec
es
cmpsl
daa
jecxz
nop
dec
test
aam
in
xchg
adc
cmp
jmp
inc
int3
or
addb
mov
movsl
aaa
jge
iret
xor
ds
inc
jmp
xchg
js
xchg
call
faddl
pushf
add
mov
test
ljmp
aam
je
or
ljmp
jmp
dec
add
cmp
jle
clc
jmp
or
mov
jns
xchg
mov
js
pop
sub
push
xor
sub
call
jmp
stc
dec
cli
scas
cmp
sbb
pushf
push
or
xor
pushl
ret
mov
adcl
mov
ss
sbb
push
mov
push
sbb
mov
jno
add
out
incb
mov
and
pop
inc
pop
adc
je
xor
jne
xchg
cmp
loope
bound
push
call
pop
cld
pop
add
imul
inc
add
lds
xor
sub
leave
insl
inc
enter
jmp
jns
adc
mov
sbb
out
in
icebp
lds
popl
lock
ds
pop
dec
dec
pop
mov
je
pop
mov
stos
add
les
jmp
dec
and
cmp
and
das
and
pop
data16
or
add
imul
and
mov
cltd
inc
jnp
push
push
pusha
je
push
cmp
or
or
and
or
enter
mov
icebp
mov
mov
jo
or
cmpsl
test
inc
or
rolb
je
inc
in
pop
jl
ret
or
jo
stc
sub
push
cli
jmp
mov
or
js
add
out
xchg
mov
cld
flds
testl
imul
lds
out
pusha
and
cltd
push
push
das
push
push
fcmove
add
out
lods
or
ret
xor
mov
and
sti
cmp
pop
data16
clc
and
sbb
jmp
mov
push
cmpb
xor
stos
xor
cwtl
dec
inc
and
add
aaa
cltd
push
fsub
outsl
ficoms
cld
test
shll
stos
jo
xchg
mov
sub
or
in
or
add
or
stos
clc
mov
sub
pop
push
hlt
xchg
xor
jns
test
and
mov
jecxz
das
ljmp
dec
push
lods
pop
aas
mov
add
xor
call
mov
xor
mov
dec
popl
clc
lea
inc
fiadds
inc
into
xchg
enter
arpl
mov
xor
xchg
sbb
push
or
shr
adc
mov
call
lods
add
pop
cmpsb
sub
mov
data16
rclb
add
adc
repnz
pop
and
dec
lea
push
and
data16
mov
dec
or
dec
push
add
push
mov
mov
jl
mov
or
jb
xor
add
ret
mov
bound
bound
fsubs
sbb
or
or
lods
sarl
pop
movsb
and
mov
xchg
mov
jb
gs
lret
insl
adc
mov
cmpsb
aaa
inc
aas
insb
push
outsl
loop
pop
mov
loope
mov
or
sub
sbb
cmp
les
add
sub
jmp
dec
push
rcll
rclb
or
in
outsb
pop
lret
ss
lea
or
or
xor
mov
and
push
movl
pop
inc
fcoml
mov
xchg
out
cmpb
inc
mov
or
dec
jmp
pop
ljmp
je
xchg
loopne
hlt
pop
repz
rorb
sub
rorl
xchg
adc
pop
cmp
jo
cli
jmp
gs
add
je,pt
and
popl
push
or
xchg
or
jne
dec
jmp
sbbb
add
fsubrs
add
lea
and
mov
orl
and
pop
push
mov
xchg
icebp
jmp
jns
push
mov
inc
loopne
jge
vpsubusw
xor
push
insl
push
mov
jmp
int3
mov
sub
ljmp
mov
push
fstpl
cmpb
aaa
xchg
xchg
add
out
inc
lret
into
jae
xor
outsb
add
sub
adc
adc
jnp
paddusw
ja
popa
sub
fcompl
loopne
jbe
push
sub
inc
loopne
or
and
pop
iret
outsw
and
adc
add
adc
and
add
mov
packuswb
lret
or
in
jecxz
fwait
push
inc
add
mov
vphaddbd
push
pop
test
inc
jle
subl
adc
lea
ss
sub
cmp
ret
push
bound
dec
mov
in
xchg
mov
xor
or
test
mov
pop
lcall
dec
mov
adcl
pop
adc
fsubrl
in
mov
inc
pop
and
mov
mov
jb
pop
scas
and
mov
sub
outsb
neg
ja
add
or
in
arpl
shlb
or
and
or
push
gs
inc
lret
cwtl
imul
daa
push
push
sub
sub
shrb
push
lods
cmpsl
mov
push
je
adc
or
cwtl
sub
dec
pop
jb
xchg
mov
dec
add
dec
adc
es
cmp
or
je
enter
dec
ret
sub
sub
push
jne
pushl
mov
cmpsb
ljmp
or
mov
andl
mov
repz
outsl
xor
xchg
mov
ret
cs
loope
loop
cld
fcoms
cmp
cmpsl
cli
aas
adc
mov
add
xchg
and
jmp
mov
fcos
push
cmpb
dec
jo
mov
imul
test
xchg
and
and
inc
pop
rorl
add
adc
push
push
sti
xor
je
xchg
sbb
cmp
adc
sub
and
push
outsl
pop
jmp
cmp
cmp
popa
nop
add
pop
jmp
or
pop
pusha
mov
xchg
adc
and
iret
dec
lods
cmp
rcr
sbb
sbb
pop
test
mov
and
int
imul
ss
les
shlb
inc
cmp
jae
add
shr
ret
adc
and
rolb
inc
mov
in
add
loope
mov
mov
inc
dec
jne
xor
jmp
rolb
mov
scas
pop
or
cltd
add
dec
test
xchg
dec
popf
sub
or
xchg
sbb
call
sbb
xor
test
shll
test
mov
xor
sbb
push
lret
pop
xor
sbb
stc
pusha
add
dec
or
test
je
mov
jne
push
or
xchg
dec
inc
xor
xor
cltd
loopne
data16
add
jge,pn
mov
fnsave
leave
or
sub
mov
cmc
cmp
cmp
dec
mov
sahf
dec
aam
sahf
jb
adc
or
add
cmp
shld
jae
into
jg
add
je
jb
xchg
xchg
andl
cmpsb
pusha
inc
adc
pop
pop
mov
lret
push
xchg
adc
add
out
xchg
cmp
pop
dec
xchg
add
icebp
jmp
ds
xchg
pop
repnz
adc
mov
mov
push
pop
mov
push
fsubl
pop
sub
shl
aaa
push
mov
cmp
pop
jge
sub
push
mov
lock
jne
adc
push
push
nop
add
cmpb
faddl
jecxz
stos
pusha
dec
mov
cltd
add
adc
stos
and
xchg
ss
jmp
call
jl
in
jmp
mov
jo
fisubrs
stos
les
mov
or
aas
or
cmp
jbe
inc
or
insb
shl
jmp
lea
cmp
sarl
xchg
dec
push
out
out
sbb
insb
cld
call
dec
in
fiaddl
lea
mov
fs
cmp
inc
add
inc
mov
stos
movsl
sbb
into
ret
es
push
data16
adc
and
xchg
add
dec
sbb
adc
repz
cld
cmp
dec
stc
pop
or
pop
jle
inc
ljmp
dec
leave
pop
xchg
jle
jp
dec
push
sub
pushf
mov
int3
sub
push
enter
push
lahf
out
rcr
mulb
mov
inc
nop
lock
test
jo
push
xor
pop
les
add
mov
pop
mov
sbb
xchg
sbb
jl
movsl
adc
cmp
lea
shlb
jbe
jle
mov
sbb
push
jbe
sub
adc
js
xorl
cltd
ret
cld
mov
decl
js
aam
ljmp
or
jae
sbb
je
push
or
dec
cmpsb
ja
mov
push
dec
call
cli
or
out
lods
lds
add
stc
cld
adc
mov
pop
inc
jmp
sbb
xor
cli
and
inc
cld
orb
mov
outsl
inc
icebp
rcrb
add
std
jo
pop
sbb
gs
push
in
in
sbb
out
clc
test
and
and
jl
jb
fidivs
xor
sti
and
push
push
inc
sbb
adc
or
and
push
das
cmpb
je
add
in
inc
sbb
insb
xchg
cwtl
xchg
sti
outsl
and
and
push
cmp
and
add
push
rep
stos
in
and
add
xchg
xor
lcall
jne
insl
and
or
cmp
incb
pusha
and
movsl
push
xor
enter
add
rcrl
inc
or
je
mov
add
push
cli
push
cmp
ja
add
cld
mov
nop
inc
sbb
jbe
jno
mov
fimuls
push
ret
xchg
rcrl
in
push
push
mov
cltd
xchg
adc
movsl
mov
dec
mov
cmpl
cli
ljmp
or
inc
cmp
popa
inc
mov
push
sub
push
sti
inc
or
ret
dec
xor
cmp
add
in
cmp
rorl
sti
fld
pusha
cltd
and
popa
adc
adc
and
mov
inc
dec
add
stc
popf
push
sbb
sub
and
jne
or
add
ret
mov
adc
adc
and
test
les
pushf
insl
stos
scas
mov
sbb
push
les
cmpsb
into
push
adc
stos
bound
incl
cltd
or
push
pop
jl
dec
mov
lock
addl
jb
mov
in
test
roll
lea
popa
mov
dec
call
sbb
sub
outsl
leave
and
mov
stos
inc
mov
jne
pop
pop
push
icebp
je
ljmp
push
push
cltd
lock
divl
pop
sti
fucom
dec
push
push
scas
pop
cmc
dec
xor
and
cld
mov
sub
stos
mov
push
pop
lret
jecxz
jae
mov
sub
dec
sti
or
mov
and
jmp
add
and
xor
mov
cmp
jmp
push
jmp
sbb
pop
bound
shll
repnz
dec
pop
xor
popa
jb
or
push
push
dec
addr16
push
jmp
mov
pop
xchg
mov
test
push
call
cmp
loopne
cmp
jp
push
push
jne
dec
shll
pop
lret
jmp
pusha
adc
ret
pop
clc
add
ja
pop
xchg
mov
je
fldl
xor
push
and
adc
lret
loopne
jne
lock
cmc
pop
or
or
pop
bound
push
add
cmc
shll
mov
lret
mov
inc
add
pop
mov
or
or
clc
orb
add
mov
sbb
aam
add
mov
jmp
leave
imul
sbb
add
adc
imul
xchg
clc
sub
or
adc
rol
dec
push
inc
js
xchg
inc
int3
andb
popf
mov
mov
popa
jl
cmpl
icebp
inc
jle
pop
in
nop
inc
push
enter
call
movsb
sub
sbb
xor
call
int
inc
adc
inc
sbb
inc
mov
push
movsl
loopne
ds
sub
inc
shrl
inc
mov
enter
loopne
bnd
mov
jmp
cmp
push
jp
das
xchg
loope
pusha
clc
xor
into
or
test
push
add
cwtl
mov
loope
push
jle
mov
xchg
add
xchg
nop
jb
push
push
cld
adc
adc
add
je
call
sti
add
pop
jne
push
mov
ret
jne
hlt
pop
or
scas
pop
push
daa
jnp
xchg
push
pop
cmp
je
push
enter
jmp
xchg
add
sub
xchg
adc
pop
arpl
in
or
or
or
mov
orb
or
adc
bound
jl
cmp
pop
mov
xchg
out
xchg
scas
imul
or
cli
iret
inc
jae
incb
jns
shr
ret
leave
add
loope
mov
dec
and
dec
stos
sbb
adc
popa
out
xor
aas
out
hlt
xchg
push
call
adc
loopne
or
jle
push
cli
add
addl
pop
mov
cmp
and
sub
add
jmp
dec
add
testl
decb
jne
stos
sbb
xchg
jmp
and
lds
push
xchg
or
cld
movsb
aaa
add
pop
jp
repnz
xor
push
xchg
cld
adc
xchg
lret
sbb
jnp
popf
dec
xchg
hlt
push
stc
jo
sub
and
ss
daa
dec
pop
pop
cmp
jbe
mov
lcall
je
in
fisubrl
arpl
mov
add
sti
sbbb
add
shr
not
and
dec
add
jne
lcall
loopne
pop
sbb
inc
mov
jno
xchg
mov
dec
movsb
or
pop
clc
xor
jle
mov
int
and
pop
and
add
sub
pop
jo
sbbl
dec
mov
dec
push
or
push
sbb
and
push
push
pusha
in
or
mov
inc
scas
sbb
sub
xchg
es
push
and
cwtl
mov
test
enter
imul
add
testl
repz
or
xor
shl
add
cmp
rcll
dec
and
xor
or
adc
andl
decb
or
iret
cmpb
inc
push
pusha
add
scas
adc
js
cmpsl
sub
push
sbb
jo
mov
adc
adc
mov
int3
hlt
add
add
or
enter
add
push
ljmp
test
mov
or
and
dec
push
insl
or
inc
mov
pop
cld
pmulhw
int
or
idivb
loope
inc
and
stc
add
jmp
and
dec
dec
decl
dec
cmc
out
data16
in
mov
not
call
mov
fistps
sbb
cmp
decb
iret
jle
popa
ret
pop
adc
arpl
jb
pop
adc
mov
cmc
fmuls
daa
adc
out
xor
pop
dec
jae
clc
jnp
lcall
mov
or
adc
call
test
ret
cmp
sti
fidivl
pop
pop
mov
inc
subb
jp
insl
sub
sub
cli
enter
pop
rorb
out
inc
movsl
mov
aaa
imul
add
ret
dec
cli
or
mov
lock
sarb
cmp
xlat
je
fmuls
cwtl
cs
popa
cli
loope
dec
test
addr16
or
test
jl
roll
loope
jmp
mov
push
stc
mov
sub
pop
shufps
dec
addl
leave
out
jp
xchg
or
and
add
call
mov
adc
std
test
cmp
push
test
pop
and
jl
push
pcmpeqw
mov
and
jmp
lret
adc
xor
push
outsl
nop
cltd
cmpsb
sub
mov
push
jnp
mov
jns
in
sbb
fcoml
out
cmc
adc
stos
jl
mov
mov
push
xchg
push
and
xor
rolb
incb
ret
jle
mulb
add
shr
or
mov
jl
or
das
sub
lea
dec
loopne
leave
push
jnp
pop
lea
xchg
fs
sub
incl
mov
sub
cld
movsl
xor
cltd
jne
fst
xchg
inc
add
adc
cld
pop
mov
jns
and
bound
cmp
ficomps
pop
insb
jo
and
add
or
pop
cli
or
shll
pop
mov
jo
scas
clc
lret
sub
aad
fadds
pop
fwait
movsl
xchg
leave
lcall
jmp
pop
mov
push
xor
xor
fwait
hlt
pop
push
adc
in
fdivs
adc
adc
cli
shl
out
jge
dec
and
jp
sbb
imul
push
jmp
mov
push
adc
inc
es
cmp
imul
xor
mov
push
sbbl
inc
xchg
out
fnstsw
or
and
adc
bound
xchg
and
or
cli
ja
cmpsb
inc
lock
dec
repz
mov
maxps
mov
inc
f2xm1
adc
inc
push
xchg
hlt
add
dec
add
sub
and
sub
mov
daa
add
pop
dec
popf
add
adc
inc
popf
xchg
inc
int
xor
pop
sarb
dec
add
or
mov
not
and
cs
mov
or
std
push
dec
adc
lea
sub
ljmp
ud2
test
dec
cmp
pop
inc
sub
cmp
sbb
mov
cmp
in
test
adc
fsts
or
icebp
lds
xchg
mov
and
les
mov
in
sbb
and
pop
push
mov
lea
and
nop
adc
sbb
sbb
and
pushf
nop
jae
dec
insb
cmpsl
mov
gs
xor
adc
into
add
loopne
fidivrs
stos
pop
mov
pushl
add
mov
js
pushf
sti
inc
pop
pmuludq
sbb
adc
sub
fistl
or
sbbb
sbb
mov
mov
jne
add
pop
or
xchg
adc
jnp
xchg
iret
rcll
mov
jmp
movsl
and
les
out
mov
roll
popf
push
inc
xor
or
xchg
jns
cld
inc
fsubs
sub
jmp
fldl
jge
fildll
pop
mov
xor
pop
xor
not
push
mov
mov
cmpsb
and
mov
dec
gs
cmp
jo
insb
and
and
push
jp
push
push
dec
push
ja
movsb
out
jp
ja
jno
xor
xchg
or
jmp
out
inc
jnp
xorl
jno
imul
sahf
scas
dec
sbb
bound
xlat
cmp
xchg
into
and
adc
out
and
bound
pop
add
cmpsl
insb
test
roll
rol
dec
mov
jmp
negb
hlt
add
mov
mov
jo,pn
inc
inc
sub
fists
iret
xor
sub
add
push
push
xor
add
mov
jne
in
or
sbb
xchg
mov
mov
mov
adc
xor
sub
insb
cwtl
xchg
xor
dec
sbb
dec
pusha
jmp
mov
in
mov
rolb
ret
and
cltd
inc
mov
dec
jb
push
cmp
jecxz
or
call
je
add
ret
cmp
jae
orb
and
add
sbb
fmull
mov
dec
mov
movsb
lods
pop
je
mov
pop
xchg
lcall
xor
cmp
sub
push
adc
out
and
push
rcll
cmpsb
test
cmpsl
push
das
lock
fisubs
xchg
jmp
mov
ror
xor
push
je
test
dec
sub
fists
xchg
stos
hlt
mov
clc
dec
fmuls
and
jle
loop
testl
out
fadds
and
add
sub
jns
imul
and
out
or
adc
or
movsb
or
imul
gs
clc
les
inc
sub
lret
adc
adc
adc
idivl
or
je
jmp
test
jne
cwtl
push
dec
mov
call
and
inc
cmpsb
or
and
pop
push
loope
fprem
xor
inc
jno
xchg
jge
jp
das
fiaddl
sub
or
or
enter
push
mov
andb
cwtl
cmp
adc
inc
add
pop
add
incl
test
and
add
sub
or
les
pop
jl
push
mov
mov
or
subl
pop
adc
sub
gs
mul
sbb
ret
stc
xor
cmp
add
jl
cmp
jbe
adc
add
mov
mov
movsl
xchg
mov
cmp
roll
nop
inc
sub
test
jle
es
cwtl
test
ja
jge
sbb
push
or
call
cltd
imul
jb
xchg
inc
ss
mov
adc
mov
aad
jmp
pop
mov
jg
shr
xchg
or
test
jle
aas
adc
pop
jmp
pop
pop
out
dec
jmp
not
out
test
decb
out
ja
add
adc
and
cmp
xlat
nop
add
dec
pusha
pop
jne
xchg
jne
adcb
mov
mov
jle
mov
mov
hlt
sbb
mov
cltd
xchg
inc
pushf
adc
inc
dec
popf
dec
push
sub
jne
sub
and
inc
cmp
jae
mov
cmp
repnz
shlb
push
inc
or
rorl
adc
cmp
add
inc
mov
inc
xchg
jg,pt
mov
jp
divl
sub
sbb
jbe
ficoml
sub
insb
push
dec
and
sub
lea
scas
loop
xchg
aam
in
xchg
adc
add
cmp
lea
pop
and
movsb
cmpsb
add
add
sub
popa
js
pop
push
mov
jmp
mov
imul
aad
cli
add
lea
cmp
add
mov
test
jne
mov
jae
pop
pop
push
mov
inc
inc
jmp
mull
clc
mov
cli
pop
mov
cmp
adc
sub
add
inc
addr16
mov
divl
aaa
notb
push
xchg
jne
movsl
pop
lcall
sbb
mov
lods
sbb
stos
xchg
cltd
repz
mov
xchg
ret
daa
add
jae
sub
imul
ret
rolb
mov
adc
sub
inc
mov
inc
mov
mov
dec
and
and
or
inc
imul
cmpsb
lea
sbb
or
mov
add
aam
mov
jmp
pusha
jae
sub
mov
jb
shll
push
jae
push
push
jne
shl
out
inc
insb
mov
mov
in
shlb
sub
jbe
sub
mov
decb
pushw
inc
cmpb
pop
or
stos
inc
arpl
add
in
rclb
add
pmullw
arpl
sub
xchg
mov
cmp
addl
jg
sbb
jg
sbb
inc
testb
add
call
dec
pop
cmp
mov
call
mov
sti
sbb
adc
ljmp
or
es
in
cmp
jge
fildl
pop
subb
in
add
call
jmp
orb
in
stos
xor
jmp
sub
pop
sbb
add
addr16
fs
jbe
mov
or
pop
sub
js
pop
or
insb
adc
mov
add
inc
or
sbb
neg
inc
test
dec
sub
xchg
jmp
jp
pop
enter
stc
inc
call
or
xor
nop
adc
push
push
cmp
pop
icebp
or
nop
cltd
xorb
std
in
pop
mov
push
mov
push
fisubs
mov
or
es
lret
sbb
test
cmp
jle
mov
mov
and
mov
xor
adc
add
push
call
movsb
or
es
adc
fidivl
mov
jne
or
cmp
cmp
cmpl
icebp
mov
push
scas
dec
jne
mov
add
mov
sbb
ret
mov
sbb
out
push
out
gs
and
mov
add
xorb
push
xor
push
shrl
inc
cmp
sbb
mov
or
loope
or
pop
push
lock
fsubr
jb
jle
in
call
hlt
mov
mov
dec
shrl
ds
xor
xchg
les
inc
and
xchg
mov
mov
dec
lock
popa
cmp
jb
cmp
ja
out
addr16
mov
fisttps
fwait
or
dec
adc
add
pop
mov
mov
ret
cmc
sbb
shll
ret
push
jg
jle
popf
call
sbb
add
popa
fmuls
lcall
xchg
inc
into
outsl
add
mov
adc
push
mov
jge
pop
dec
cwtl
es
adc
sbb
push
pop
cld
and
xorl
cmpb
jne
or
jb
lret
push
call
and
pop
or
nop
adc
ds
cmp
aas
lahf
enter
scas
int
cmp
xor
pop
pop
test
into
shl
jmp
ljmp
faddl
movsb
aad
mov
inc
add
in
xor
cld
cmp
lret
jge
jnp
sbb
dec
dec
mov
nop
addr16
add
sbb
or
dec
adc
xchg
adc
test
out
and
push
jle
pop
mov
psubb
je
and
inc
sahf
es
adc
pop
std
add
in
jmp
mov
ljmp
shl
sub
js
cli
or
fidivl
repnz
cmp
je
jno
fprem1
push
lock
fsubr
idiv
insb
out
cs
mov
stc
mov
nop
es
mov
lds
and
mov
cmpsl
fnsave
mov
mov
dec
imul
push
ror
sbb
scas
or
lret
add
daa
adc
xchg
daa
inc
cs
repnz
or
adc
out
fnstenv
cmp
or
pop
js
divl
test
push
jno,pt
dec
insl
mov
xor
pop
loop
xchg
mov
mov
lds
enter
aad
std
hlt
aad
or
aas
decl
mov
and
mov
in
mov
movsb
clc
adc
push
in
push
dec
test
into
mov
sbb
ret
or
push
sbb
sub
jb
das
dec
pop
cs
sbb
dec
xchg
xor
adcl
jmp
or
mov
jae
int3
mov
adc
hlt
aad
roll
adc
je
sub
lret
dec
shlb
rcrb
pop
mov
or
inc
xor
dec
jne,pt
xorb
jmp
xlat
pushf
clc
jp
call
sbbb
add
js
stos
xchg
cmp
or
cmp
dec
pop
sub
push
jnp
in
js
sub
aam
dec
inc
out
leave
stos
outsb
fstl
lcall
loopne
and
orl
xchg
icebp
pop
test
add
inc
test
out
leave
push
lock
loopne
push
hlt
push
sub
dec
lods
xor
lds
mov
shll
or
cmp
pop
cld
cmp
sub
sub
xlat
movsb
lods
adc
xor
adc
mov
inc
das
mov
pusha
sbb
xchg
mov
cmp
repnz
cmp
icebp
es
push
and
jns
pushf
xor
out
sub
or
mov
rcll
dec
fisubrs
xchg
add
je
ret
imul
hlt
add
jno
xor
sbb
dec
mov
or
lea
mov
test
shrb
add
pushf
xchg
mov
dec
dec
in
xor
inc
and
mov
int
adc
inc
mov
or
popa
stc
add
dec
or
call
push
mov
fldl
imul
nop
fdivl
insb
dec
push
insl
fistps
fucomi
push
lahf
repz
loopne
jbe
js
mov
xlat
negb
js
pop
cmc
insl
dec
adc
jmp
and
call
stos
add
adc
adc
sub
mov
mov
aas
test
arpl
add
rorl
pop
mov
inc
mov
rorl
or
repz
push
mov
enter
je
icebp
call
cmp
aad
sbb
or
sub
dec
in
or
xor
cli
pop
adc
mov
sbbl
push
testb
mov
mov
jmp
sub
mov
push
call
sar
cmc
xor
xchg
jmp
sub
adc
inc
xor
sbb
or
and
cmp
adc
mov
xor
pop
lahf
add
setg
push
xchg
cmp
sarx
jne
add
lcall
sbb
call
leave
pop
push
ficompl
inc
sbb
subl
fidivl
inc
add
xchg
lret
and
stc
adc
push
negl
inc
cmp
adc
or
popa
add
inc
dec
sbb
adc
adc
or
enter
pop
mov
adc
or
add
mov
lock
daa
push
cmp
pop
add
jns
mull
sub
jl
adc
idiv
loope
sarl
das
or
xchg
es
sub
decb
in
mov
add
mov
sbb
xor
ret
mov
and
ds
cmp
mov
xchg
adc
or
and
or
inc
add
ret
push
or
lds
add
pusha
sti
jo
lock
or
adc
leave
push
call
ret
divl
mov
add
sbb
jbe
call
dec
add
loope
idivb
pop
scas
je
negl
fsubrp
push
or
fnstcw
inc
push
pop
dec
mov
pop
scas
std
adc
xlat
bound
cld
and
test
and
movsl
mov
sub
cli
xchg
and
or
imul
jmp
mov
mov
cmp
mov
adc
cs
adcb
sbb
pop
and
and
decb
repnz
pop
xchg
jmp
push
push
adc
and
cmpsl
movsl
minps
pop
sub
add
fldenv
andb
or
daa
cmp
push
and
out
sub
jge
roll
or
data16
jmp
sbb
adc
jge
push
sbb
mov
mov
adc
js
cld
mov
fisttpl
int
push
sbb
xor
cli
add
push
rclb
les
mov
cmpsl
adc
je
mov
in
lock
hlt
movsl
dec
in
stc
adc
jb
or
sbb
add
aad
push
mov
stc
in
jb
adc
lret
mov
mov
cld
pop
pop
pushl
pop
mov
fs
cmp
jne
mov
push
push
xchg
lahf
stc
dec
mov
sub
and
inc
push
stos
sbb
fs
jmp
sub
daa
cmp
fisubrl
xlat
ljmp
sbb
scas
lret
dec
jmp
hlt
shrl
stc
ret
lods
call
and
or
mov
or
cmp
cld
mov
cli
shlb
js
sub
test
mov
les
pop
adc
lahf
jmp
adc
jb
hlt
je
popaw
jbe
aad
pop
aad
xor
bound
pop
add
cmp
pusha
xor
inc
cmp
sbb
repnz
cmp
jg
push
fistl
xchg
pop
and
popl
xorb
enter
add
or
gs
mov
ret
xor
inc
aam
cltd
mov
or
mov
lret
push
nop
xorl
lea
mov
fmull
dec
jno
jp
sub
insb
pop
xchg
jo
xchg
and
dec
pop
push
jo
addl
repz
xor
test
push
into
movsl
dec
mov
push
xchg
cltd
shlb
int3
sub
ret
std
das
mov
scas
sbb
pop
inc
add
jne
cmpl
lea
dec
push
nop
push
jne
subb
mov
add
inc
adc
dec
add
or
push
add
pop
or
adc
fwait
es
orw
adc
and
cli
push
popa
add
cs
adc
add
lock
fsubl
out
sub
xchg
jmp
cmp
or
pop
adc
inc
inc
mov
pop
and
cwtl
movsb
scas
fcoms
jp
cmpsb
or
sbbl
sub
add
adc
mov
adc
xchg
mov
stc
xchg
dec
hlt
mov
adc
cmp
outsb
and
mov
sub
sbb
xor
push
cmp
xor
arpl
xchg
mov
jne
jne
into
notl
cmp
mov
dec
aam
movsl
jbe
dec
push
add
adc
leave
push
mov
push
sti
cmc
cld
and
std
lea
push
lock
jge
ja
inc
pop
push
popl
add
call
push
scas
nop
test
jp
cwtl
xor
ret
out
sub
hlt
sarb
leave
fsub
fdecstp
ret
pop
clc
lock
cld
fisubrs
sar
cmp
xchg
xchg
fcoms
fiaddl
pop
sub
sarl
shlb
repnz
add
inc
jmp
jge
notb
xchg
jnp
inc
jmp
pop
jp
filds
mov
testb
adc
les
and
xchg
subb
add
pop
leave
rol
cmp
xchg
xor
jecxz
push
imul
mov
inc
inc
fs
xchg
and
jae
ret
mov
dec
mov
fnstenv
das
cld
test
dec
dec
mov
or
out
mov
in
inc
lods
nop
jge
addr16
inc
dec
popf
xor
mov
lahf
leave
push
push
xchg
pop
or
pop
add
int3
pusha
or
faddl
xchg
or
test
inc
xchg
push
xchg
dec
test
cmp
test
push
adc
inc
sti
adc
rcll
lret
lea
jp
rorl
clc
hlt
inc
arpl
or
jne
mov
cmp
dec
sub
jo
nop
movsl
adc
xchg
push
inc
test
dec
cmp
aaa
and
and
popl
cmp
mov
cwtl
test
or
jmp
dec
sti
push
shlb
dec
push
ljmp
add
pop
pop
push
mov
in
adc
cmp
inc
push
je
out
scas
in
nop
mov
fistps
add
adc
rorl
mov
fiaddl
je
adc
or
or
into
or
jne
decl
sbb
ja
ss
adc
sbb
das
out
sti
or
ds
or
and
mov
mov
je
add
jmp
aad
push
pop
sbb
mov
fadds
cmp
je
cmp
roll
cli
sarb
movsb
sbbl
mov
lret
xlat
leave
pop
test
mov
mov
xchg
mov
inc
cmp
pcmpeqb
push
push
dec
mov
sbb
aas
xchg
and
daa
shrb
dec
iret
push
das
nop
push
dec
and
add
add
jo
leave
pop
cli
fwait
test
mov
mov
adc
adc
mov
mov
stc
jg
rcrl
adc
aam
mov
cmp
jle
adc
scas
fcoms
mov
and
out
mov
xchg
push
mov
mov
push
dec
xchg
fisubrl
call
push
adc
mov
mov
ucomiss
adc
jno
and
jne
jl
dec
mov
stos
and
mov
ss
add
add
cli
and
jmp
cmpsl
dec
dec
ds
add
adc
or
or
push
into
or
repnz
jmp
inc
adc
inc
mov
repnz
sbb
mov
or
fwait
adc
xor
mov
jbe
sbb
aaa
sahf
or
ret
or
push
sbb
enter
mov
call
mov
xchg
pop
jne
inc
mov
sub
add
xchg
and
loopne
js
and
ret
leave
jo
cli
mov
sbb
xchg
sbb
or
jmp
mov
dec
mov
push
push
inc
mov
push
mov
adc
adcl
adc
mov
imul
sub
jecxz
push
cltd
and
sbb
cmovno
mov
add
jmp
xor
ljmp
andl
adc
loopne
dec
cmpsb
dec
add
dec
lock
aad
shl
shrb
jne
or
cli
and
mov
push
pop
sub
mov
ja
xchg
leave
jge
xchg
sbb
adc
insl
push
enter
xchg
or
cltd
push
ret
cmp
mov
mov
adc
jne
pop
inc
repnz
das
sti
and
clc
xor
pop
or
shlb
xlat
ss
xorl
sub
sbb
cmp
mov
out
imul
mov
inc
pop
orl
das
push
and
xchg
test
popa
test
cld
mov
add
into
lea
and
mov
mov
and
lock
jo
mov
pop
mov
jp
pop
and
call
ret
aas
sbb
xchg
mov
ret
in
jo
xlat
add
mov
sbb
aam
add
inc
add
sahf
sahf
or
loop
lods
decb
or
and
icebp
jno
repnz
or
pop
mov
sbb
xchg
mov
cmp
add
mov
pop
ret
xor
cmp
pop
lea
sbb
inc
or
sarl
test
movsl
push
mov
xor
add
decl
cld
shll
jg
or
jne
test
lret
push
fmuls
iret
lods
mull
or
movl
jl
cwtl
push
lods
in
pop
cmp
decl
test
nop
add
add
mov
push
pop
jmp
mov
dec
stc
push
test
stc
out
call
or
nop
jae
ds
roll
adc
mov
or
or
cmp
add
mov
adc
dec
int3
lea
fbld
xchg
push
cmp
adc
and
mov
jne
mov
push
lds
pandn
ss
add
and
add
movsl
cmpl
mov
and
out
jo
or
mov
cmp
xchg
sub
add
or
mov
xor
jl
xorb
push
out
arpl
call
jmp
popl
cli
loop
pop
fs
lods
subl
or
fnstsw
movsb
jne
add
daa
mov
xor
pop
and
imul
pop
ret
mov
xor
pop
jmp
and
repz
or
inc
in
sti
xor
inc
clc
sub
fidivrs
inc
jae
jnp
ret
lea
cmp
test
sbb
test
add
dec
push
ljmp
push
nop
sbb
int
outsl
jg
sbb
and
push
pushf
lods
or
jns
sub
in
xor
jmp
mov
sbb
mov
push
sbbb
jno
sub
call
sbb
popf
or
or
jns
push
test
dec
lea
or
cmp
xchg
and
mov
sbb
mov
pop
pop
adc
xchg
cmp
mov
ffree
mov
ljmp
or
mov
addb
negb
xchg
push
mov
out
add
xchg
sbb
sbb
add
insl
scas
stc
push
push
cwtl
push
cmp
icebp
push
lea
push
jecxz
dec
scas
and
or
cs
shll
push
adc
or
xchg
pushf
or
pop
int3
cmp
sub
mov
pop
push
dec
cwtl
insb
push
jecxz
push
test
xchg
mov
je
test
in
add
cli
mov
push
xlat
pop
loop
xchg
stos
aam
mov
push
adc
pop
movsl
sub
dec
push
sub
pop
jmp
mov
aad
outsl
inc
dec
ss
lea
hlt
mov
cmp
test
jnp
call
mov
cmc
adc
orl
sub
sbb
jmp
sbb
das
cmc
adc
xor
xchg
sbb
mov
push
push
dec
push
push
xchg
jb
sbb
pop
inc
push
ret
push
inc
mov
or
inc
ret
mov
push
mov
and
jge
loope
mov
sub
stos
outsb
cwtl
and
push
mov
sbb
stc
dec
sbb
or
call
aam
mov
mov
int
inc
movsb
sar
fidivrl
xchg
ljmp
ret
int
ja
fs
lock
adc
push
add
or
bound
jle
dec
nop
rclb
pop
ret
call
cmpb
add
push
imul
pop
and
pop
sbb
jo
popf
ja
push
push
pop
pop
ss
leave
pop
andl
pop
cld
lods
xlat
scas
pop
add
mov
dec
sarl
sub
or
or
das
repnz
xchg
mov
cmp
fisubrl
push
je
movsl
jl
scas
fdivs
bound
sbb
call
je
data16
pop
jmp
sub
jbe
in
xor
dec
mov
jle
cmp
xor
scas
or
push
pop
inc
sub
mov
cwtl
sub
jb
negb
xchg
push
xchg
mov
stos
ds
sub
jo
jns
inc
lret
testl
pop
dec
cld
add
inc
sub
xchg
push
cmp
jae
or
add
shld
shl
aaa
dec
ror
repz
shl
std
fs
xchg
stc
lock
loopne
push
daa
je
push
pop
and
lock
fidivrl
cmp
and
aad
gs
std
lds
xor
sub
divb
or
xor
xor
and
adc
mov
out
pop
inc
dec
test
loope
xor
rorb
enter
push
push
dec
movsl
inc
lcall
pop
dec
push
leave
add
and
cmp
sub
sti
push
adcl
inc
inc
in
and
frstor
add
cmp
push
movsb
xor
jmp
adc
sbbb
out
mov
and
cmp
sbb
arpl
loope
xor
iret
cwtl
sbb
mov
push
add
cwtl
xor
or
jne
mov
ds
xor
loopne
push
pusha
push
push
in
cmpsl
xchg
and
or
lea
out
xchg
mov
and
nop
fisttpl
inc
fsubrl
or
data16
lock
repnz
js
fsubr
js
fsubl
subps
push
and
dec
inc
xchg
cmp
xor
sub
repnz
icebp
pushf
adc
pop
adc
test
sbb
mov
ficomps
or
std
and
adc
test
or
or
and
inc
in
mov
adc
fisubrs
and
or
xchg
dec
pop
cld
and
xchg
xor
add
mov
mov
jl
add
sbb
or
aam
cmpsl
jo
pop
icebp
or
sub
clc
scas
adc
repz
or
cmp
push
inc
repz
or
outsl
cwtl
out
inc
xor
dec
jecxz
push
push
mov
xchg
scas
adc
pop
and
add
jmp
shl
fucomip
adc
sti
bound
jno
test
push
test
in
jmp
xor
dec
pop
mov
call
jae
notb
rcpps
jmp
or
aad
add
loope
cwtl
adc
xor
pop
mov
fs
or
dec
inc
cmp
pop
and
fs
cli
dec
divb
outsb
push
imul
dec
sbbl
roll
leave
in
and
daa
mov
cmc
iret
lods
cld
xorl
cmp
pop
jns
sub
aas
nop
rcll
je
loopne
decl
lahf
pop
lds
sub
cmp
push
jl
mov
jl
cmp
push
test
push
aas
lods
jp
call
in
mov
adc
or
not
addr16
adcl
sarb
fiaddl
dec
sbb
call
push
add
pop
and
sub
std
sub
push
adc
sbb
add
xor
hlt
and
inc
in
sbb
clc
xor
and
daa
dec
xor
mov
cmp
or
jne
lods
mov
das
pop
movsb
popl
and
lret
popa
enter
push
outsl
lret
or
jecxz
das
adc
movsb
jecxz
xchg
sbb
clc
dec
aaa
enter
cs
inc
add
pop
adc
xor
add
push
movsb
or
xchg
addl
movsb
push
aam
shll
and
adc
lods
jl
inc
test
test
adc
dec
les
add
or
mov
lods
pop
pop
or
and
scas
or
call
arpl
iret
adc
fists
dec
insb
repnz
adc
pushf
dec
jmp
push
lock
mov
flds
lret
push
xchg
cmp
jne
xchg
pop
sbb
xlat
dec
inc
daa
and
mov
movsl
pop
push
nop
pushf
nop
dec
or
push
mov
mov
repz
add
mov
int
and
aas
movsl
dec
lock
push
add
js
sbb
add
outsb
push
push
sahf
hlt
out
in
notl
jne
xorl
dec
xor
aas
outsb
adc
add
jle
jmp
fisubrl
notl
sbb
mov
or
sti
adc
pop
andl
jne
les
aad
pop
imul
addr16
cmp
je
ret
add
gs
fnstcw
stos
dec
sub
std
and
and
divl
shlb
invd
scas
adc
or
clc
cld
stc
rcr
insl
jmp
inc
push
and
push
and
fdivl
daa
push
shll
adc
add
mov
jnp
adc
cwtl
adc
and
stc
cli
decl
xlat
add
mov
push
mov
sarl
arpl
mov
jns
mov
cmpl
xor
lds
mov
dec
sub
sub
int
rorb
subb
test
pop
stos
pop
push
js
mov
es
xchg
pop
mov
adc
add
and
push
lea
dec
int3
sub
fs
cmp
roll
or
outsb
or
add
imul
pop
ss
dec
push
cwtl
sub
iret
inc
ret
push
subl
leave
dec
adc
xor
int
lock
in
pop
cli
lock
pop
adc
sub
adcl
add
inc
call
adc
jnp
cmp
xchg
push
sbb
cmc
mov
jl
mov
shrb
icebp
pushl
cwtl
jne
mov
pop
pop
bound
shl
inc
cltd
aaa
call
sub
sbb
cmp
add
add
inc
adc
push
mov
loope
dec
testl
pop
mov
test
ret
pop
cltd
xor
or
mov
rclb
sub
pop
sub
pop
pop
and
lret
fucomip
xchg
test
push
or
dec
dec
push
cld
jmp
sub
fsubrp
and
xchg
or
rcll
dec
inc
popf
addb
jno
dec
pop
ss
push
cmp
mov
and
dec
mov
scas
xchg
in
xchg
iret
fs
add
mov
dec
test
dec
and
out
cmpb
incl
pop
les
push
xchg
hlt
aad
fmuls
xor
cs
out
ficoml
loopne
enter
fcmovnb
and
or
cmc
mov
clc
mov
dec
push
out
jne
xchg
cwtl
hlt
push
mov
or
fstpl
scas
ret
inc
push
adc
incb
dec
add
sub
sbb
ljmp
push
sti
mov
fsubr
mov
mov
das
and
jmp
aas
push
sbb
shl
sti
add
xchg
pop
cmpsl
movsl
loopne
hlt
xor
aas
push
iret
and
cpuid
rcr
inc
lock
hlt
and
pop
pop
sarl
or
sub
pop
and
movsb
and
push
cli
xor
add
dec
inc
mov
enter
dec
add
test
cmp
jg
aas
sub
cmp
xor
push
adc
xchg
dec
and
std
lds
xchg
movsl
pop
and
cwtl
jmp
pop
sub
pop
push
push
xor
orb
adc
pop
ja
cmp
add
pop
mov
mov
shl
jg
and
repz
adc
and
adc
mov
bound
xor
icebp
scas
clc
fdivrs
incl
or
xlat
mov
and
and
xor
popa
jl
push
cmpb
sub
mov
and
mov
aad
xchg
push
jmp
xor
and
cmpsl
sub
xchg
cmp
jle
movb
aas
test
mov
jns
xchg
jp
mov
jl
mov
pop
mov
inc
incl
out
jne
outsl
xchg
clc
faddp
push
jl
jae
xor
push
hlt
fisttps
push
cmp
jl
xor
incl
clc
adc
push
call
lods
rorb
test
jmp
push
imul
popf
cmp
pop
jmp
aaa
shrb
sahf
pop
and
sbb
cld
movsl
pop
data16
call
mov
sbb
in
orb
cli
mov
test
jnp
data16
sbb
mov
mov
pop
push
data16
pushl
cmp
and
add
and
icebp
int
xor
fldenv
xorb
subb
pop
sub
es
jno
sbb
push
push
pop
test
lea
in
dec
enter
ret
mov
adc
enter
cvtpi2ps
ja
xchg
dec
lret
and
add
fcmovb
jmp
or
lea
adc
loopne
xchg
lret
jmp
push
lcall
popa
pop
mov
add
push
mov
mov
mov
jne
jne
pop
andl
ret
add
inc
test
cmc
dec
cld
add
pop
int3
nop
inc
fiaddl
push
js
hlt
add
sbb
push
pop
movsl
ja
add
je
push
int3
inc
or
jbe
sqrtps
and
mov
mov
push
push
adc
mov
push
add
aam
dec
pop
int3
int
pop
clc
stos
and
xlat
bound
fcompl
push
pop
ja
inc
mov
enter
pop
cld
dec
mov
add
leave
aad
add
dec
dec
inc
dec
dec
ficomps
fbstp
fwait
adc
push
leave
and
aas
push
pop
out
stos
jl
jne
and
dec
enter
int3
out
pop
sbb
mov
mov
outsb
loop
or
in
mov
cmc
orb
bound
testb
bound
xor
jl
stos
and
xor
call
inc
or
or
mov
sbb
and
scas
jmp
orb
cmp
or
scas
ret
testb
pop
cld
dec
dec
lock
push
call
cltd
or
jmp
add
push
test
sub
loopne
xchg
fimuls
mov
xchg
adc
pop
cwtl
xchg
cmp
pop
jge
aas
push
movsb
sub
lret
or
dec
xchg
jmp
fildl
add
mov
lods
push
sbb
jge
les
adc
fcmovnu
loop
mov
das
test
loop
imul
decb
xor
xchg
inc
mov
imul
mov
sub
icebp
jg
jmp
in
mov
mov
mov
rolb
jb
into
pop
jae
xor
adc
mov
jl
in
std
push
sub
fcmovu
xchg
or
ret
inc
jg
adc
iret
add
inc
or
pop
fnsave
xor
xchg
xchg
or
ret
js
mov
add
jg
sahf
xor
popa
sti
pusha
fcomi
std
popa
ret
int
cld
jo
cli
ljmp
pop
shrl
negb
repnz
out
cmp
or
mov
sbb
ljmp
rcrb
je
icebp
or
jne
xchg
pop
adc
sbb
adc
jbe
push
out
inc
shl
lea
movsl
jecxz
cwtl
call
sbb
push
loopne
sub
adc
cmp
push
gs
call
adc
and
sbb
cmp
push
sbb
enter
lods
adc
mov
dec
adc
pop
xchg
push
out
mov
cmp
push
cmp
incb
jmp
mov
adc
xchg
hlt
fnstsw
data16
fstpl
orb
inc
xchg
pop
cld
orl
adcb
pop
ja
pop
pop
call
push
inc
fsub
adc
or
pop
in
hlt
pop
out
rcll
or
jae
add
inc
add
out
add
mov
pusha
imul
or
xchg
or
and
xor
add
test
cmp
xorl
push
jg
inc
inc
imul
dec
sbb
aam
xchg
insb
lahf
mov
nop
pop
push
fmul
or
cmpsl
std
or
sahf
lahf
andl
dec
mul
dec
fldenv
mov
popf
or
and
inc
jle
inc
jle
push
arpl
jnp
gs
jb
push
sub
enter
push
or
rclb
cmpsb
or
dec
dec
push
lcall
mov
mov
mov
cmp
ret
enter
sahf
insb
lods
clc
mov
outsl
jp
lret
aam
add
jae
adc
inc
jmp
or
push
cmpsb
popf
dec
mov
cli
mov
or
lock
xchg
divb
pop
or
jne
out
jmp
add
repz
and
scas
jno
or
lea
mov
mov
inc
aam
sbb
jmp
push
in
popa
and
sub
and
decb
inc
daa
enter
or
or
gs
and
add
addr16
insb
arpl
adc
or
sub
jg
jb
add
dec
jmp
jne
inc
jmp
int
and
je
mov
mov
shlb
inc
push
pop
pop
jmp
inc
sbbl
cmp
movsl
xchg
mov
outsl
shll
sbb
cmpsl
daa
xor
sub
cmpsl
aas
les
sbb
xchg
and
iret
int3
add
jp
ret
into
mov
sub
dec
les
push
cmp
jae
pop
add
mov
inc
movsb
fldenv
push
pop
cmp
cmpb
jl
jnp
in
gs
mov
jmp
adc
adc
xchg
or
sbb
daa
aaa
repnz
or
sub
outsb
loop
das
in
mov
add
neg
add
xchg
and
sbb
sub
sbb
cmp
out
mov
jnp
jo
push
out
enter
pusha
xor
mov
dec
mov
push
dec
pushf
pop
cmp
scas
dec
mov
adc
add
xchg
ret
push
lret
jmp
jb
sar
inc
xchg
stos
or
lahf
push
sub
xor
jecxz
pop
mov
gs
add
lcall
mov
out
testl
sbb
add
inc
and
or
dec
and
inc
mov
lds
sub
add
mov
sbb
leave
push
mov
and
or
mov
adc
and
dec
jmp
inc
in
in
mov
sti
sub
mov
mov
sub
cmp
or
mov
outsl
or
test
sbb
add
addb
jmp
pop
or
mov
shrl
xchg
maskmovq
sub
sti
push
incb
xchg
je
cmpl
sub
sbb
and
popa
sbb
lea
xor
add
outsb
cmp
push
es
addl
iret
pop
and
jmp
dec
jns
sub
or
lahf
lea
and
push
cli
imul
jge
shll
inc
repz
add
movswl
xor
push
xchg
test
shlb
cmpl
and
in
sbb
lahf
jmp
push
jecxz
nop
xor
jge
insl
dec
add
jl
or
icebp
sub
jge
and
sub
add
cli
sub
sti
push
inc
sbbl
pop
clc
inc
jnp
sbb
jne
xchg
xorb
neg
orl
dec
sbb
repz
cld
push
ficoml
lcall
adc
jne
pushf
adcl
lea
clc
jecxz
jns
adc
or
cltd
sti
adc
lret
pop
dec
inc
add
or
push
add
mov
mov
mov
lea
jl
xor
shll
sbb
push
adc
icebp
mov
decl
mov
sub
sub
mov
std
cmpb
add
push
ret
dec
popa
or
xor
rcll
add
nop
xor
popa
jmp
rorl
mov
popf
push
push
sbb
stos
ds
xchg
mov
cmp
loope
or
push
jle
cmp
adc
leave
sub
cli
push
mov
and
add
push
pop
mov
push
jmp
fwait
jge
xor
and
das
out
loop
or
jae
xchg
dec
in
jae
in
es
push
and
clc
cmp
ret
and
and
es
pop
add
jae
cmp
psubd
mov
mov
fdivrs
mov
jg
xor
xorb
js
les
inc
mov
add
jmp
add
or
push
push
push
cmp
jne
dec
add
dec
lods
adc
xchg
jmp
push
xchg
cld
add
or
dec
mov
add
push
inc
fistpll
mov
cs
cli
pop
fnstenv
adc
into
sbb
adc
fildll
rcrl
sub
push
push
xor
xor
push
cmpsl
mov
inc
insl
hlt
movsb
xor
jne
int
cld
adc
pop
jg
addl
pop
arpl
jle
add
lds
mov
cmp
push
loop
sub
push
stos
push
out
cwtl
not
push
or
add
mov
sahf
jl
daa
cli
xchg
push
in
inc
mov
dec
xor
jno
xor
push
inc
ja
mov
xchg
mov
icebp
sbb
xor
sub
sbb
adc
pop
outsb
sbb
je
inc
and
scas
cmp
jnp
push
jmp
sbb
adc
xor
and
jae
sbb
pusha
test
rclb
push
cmp
or
in
rcrb
or
jmp
divl
ljmp
sbbb
andl
push
inc
add
sar
inc
fbld
and
je
arpl
sarl
cld
daa
mov
adc
add
push
push
inc
add
jl
adc
or
pop
cmp
sub
pop
xor
adc
adc
jb
fs
test
cli
mov
push
test
jg
ret
xchg
push
add
jmp
scas
sub
inc
imul
or
ret
and
inc
cmc
pop
xchg
shlb
mov
aaa
xchg
push
into
jmp
jl
xchg
rorl
cs
push
stos
cmp
call
sbb
jge
in
inc
adc
pop
mov
mov
addb
sub
pop
push
out
xchg
ljmp
add
jb
je
mov
pop
lea
aas
mov
dec
adcb
xchg
or
leave
mov
cltd
push
push
movsl
sub
xor
addl
mov
inc
sahf
imul
loope
adc
loop
xlat
xchg
aad
adc
cwtl
cmp
or
test
idivb
xor
push
inc
mov
mov
stc
test
mov
mov
adc
pop
adc
inc
mov
add
cmp
add
outsl
fwait
jbe
hlt
mov
cmpsl
inc
push
cwtl
mov
lahf
add
jmp
scas
jb
not
jb
aaa
scas
jnp
lcall
test
mov
and
mov
adcl
xchg
push
pushf
sbb
in
cmp
mov
in
jae
or
push
push
push
xchg
popa
pop
dec
repnz
and
fwait
pop
icebp
inc
cs
lods
push
sbb
and
xchg
and
xchg
mov
test
xchg
test
in
repz
divl
data16
jp
adc
std
mov
ud0
pop
pop
or
into
fildll
mov
sar
mov
rorb
add
or
mov
xor
push
or
and
mov
push
call
sbb
jne
xchg
insb
mov
xor
mov
and
clc
mov
incl
cmp
push
jno
loop
movsb
aaa
push
pop
fs
xchg
or
test
sbb
and
add
es
fs
data16
jne
sub
test
inc
dec
mov
fildl
test
lret
movsb
ret
dec
xchg
lea
add
cmpsb
pop
inc
jmp
cmc
mov
push
enter
in
sbb
rolb
jae
and
pop
mov
push
outsb
adc
dec
stos
shl
fmuls
repnz
pop
cmp
adc
adc
inc
xchg
adc
adc
jbe
xchg
imul
add
lock
movsb
movsl
jnp
mov
mov
sub
dec
add
add
or
xchg
sbb
push
sbb
xlat
dec
in
lods
jp
add
xchg
js
jl
jbe
pop
xor
test
push
add
pop
push
popf
in
jg
adc
gs
cmp
jle
mov
cmp
and
jecxz
fimuls
adc
outsb
add
mov
cmp
in
es
stos
mov
lcall
test
mov
xchg
sar
push
add
mov
push
sub
jp
pop
mov
movsl
add
dec
lret
mov
or
sub
call
xor
xlat
jl
xor
add
jb
push
dec
fsubrl
cld
adc
add
push
pushf
cmp
or
pop
or
rolb
xchg
jns
bsf
pusha
lret
test
sahf
add
test
push
sbb
mov
mov
test
std
cwtl
in
lcall
mov
rcrb
xchg
movl
jb
push
add
push
add
xchg
add
sbb
push
lock
ja
inc
jne
inc
inc
rolb
inc
dec
pop
inc
ror
inc
dec
cmp
add
pop
add
pop
push
adc
rolb
paddq
mov
ds
sub
addl
in
add
add
addl
ja
sub
add
movl
xchg
add
add
xor
pop
xor
add
xor
dec
in
add
pop
psraw
rcll
test
mov
or
outsb
pusha
iret
out
repz
add
aam
push
dec
pop
add
pop
dec
jl
jecxz
mov
sbb
int3
or
mov
xchg
add
and
subb
cmp
cmp
mov
in
add
pop
ret
xor
push
das
stc
mov
shl
loopne
adc
cwtl
test
mov
aas
je
xor
sti
flds
arpl
mov
add
lods
pop
mov
fimuls
add
je
data16
test
add
push
lods
xchg
add
leave
dec
dec
mov
add
jb
xor
rolb
scas
push
push
hlt
pusha
gs
cmp
inc
je
xlat
flds
mov
pop
in
add
jg
or
ret
xchg
xor
nop
enter
out
loopne
cmp
add
pop
icebp
lock
seta
jo
mov
in
sbb
shl
aas
xor
testl
adc
sti
dec
nop
lds
pop
les
testl
lods
ret
repz
add
out
iret
mov
sbb
mov
sbb
mov
pop
pop
and
cmc
mov
nop
adc
add
pop
sub
test
in
add
fmull
mov
inc
shll
sub
xchg
sub
mov
jl
add
jo
xchg
jbe
ret
jb
jle
popa
xorl
aam
xor
mov
fnstenv
or
sbb
cmp
inc
sti
cwtl
stc
mulb
add
imul
fcmovne
mov
sbb
in
lcall
scas
stos
adcb
test
inc
out
mov
dec
push
lods
je
rolb
xor
sbb
sbb
inc
idiv
push
mov
push
push
push
int3
cmpsb
pop
and
jg
test
push
jle
dec
mov
pop
add
mov
push
rcrl
mov
popa
add
xchg
push
fwait
add
test
stos
lret
add
faddl
add
insl
scas
imul
jns
fwait
out
mov
and
cltd
sbb
mov
movsb
lea
repz
jno
xor
jecxz
popa
testb
imul
loope
scas
cmp
ja
fcmovu
adc
imul
pop
sbbb
adc
fucomip
cmp
jae
fidivrs
add
fnsave
inc
les
add
addr16
mov
movsb
adc
or
xorb
pop
fmulp
cmp
in
dec
lret
jno
mov
jo
add
out
sub
sub
jl
cmp
jge
lods
add
adc
mov
in
sub
das
push
inc
adc
add
ret
add
cmc
test
clc
lret
add
sti
or
lock
test
adc
or
dec
add
in
push
imul
and
dec
add
add
xchg
mov
pushf
loop
add
sahf
sbbb
mov
cmp
add
or
lods
and
sub
or
inc
push
out
mov
fcomi
mov
sub
repz
jl
inc
cmove
sub
cld
mov
scas
mov
cmp
xchg
loopne
popf
jnp
dec
test
jae
add
cmp
jbe
rcrl
sub
inc
cmp
inc
cli
mov
cmp
sub
xchg
xor
cmc
push
loop
sub
add
add
stc
in
add
nop
jmp
cmp
insb
out
adc
add
je
push
dec
enter
andl
hlt
stc
dec
add
inc
lock
test
jle
adc
ret
add
or
inc
pop
out
cmpsb
add
js
sub
pop
add
lret
leave
xor
inc
fcmovnbe
adc
jg
mov
outsl
das
mov
xchg
ds
xlat
pop
data16
ss
sbb
dec
ds
sbbl
in
lock
js
stos
test
cmc
jo
scas
xchg
das
add
cmpsl
filds
mov
addr16
cmp
sti
icebp
add
loopne
mov
add
bound
add
lock
sbb
in
jo
xor
or
xor
or
mov
incb
scas
dec
pop
das
dec
dec
lock
roll
inc
pop
jb
add
call
mov
push
jo
xchg
cltd
out
cmpsb
leave
pop
xor
gs
aam
add
addr16
or
mov
add
xor
or
push
sahf
test
popf
ljmp
sub
push
pop
sub
shr
or
mov
add
vdivsd
imul
or
daa
cmp
add
jp
mov
dec
nop
aas
aaa
adc
add
push
pushf
daa
lods
aad
push
add
movsl
mov
lock
sbb
jle,pn
test
inc
fdivr
sti
add
jecxz
xchg
out
je
fiadds
clc
sbb
push
scas
inc
aaa
inc
int
xchg
aad
aam
lds
or
leave
stos
subb
add
inc
cmp
sbb
xor
or
js
mov
enter
jo
push
cmp
sub
pop
add
push
jae
cmpsl
jae
add
loop
push
ds
pop
add
loope
push
jge
shrb
or
inc
mov
jl
mov
ljmp
filds
lods
pop
cmp
ret
add
mov
mov
xor
add
aam
dec
lock
aad
aaa
inc
sbbb
ja
shl
sahf
fldl
sbb
push
aaa
or
sub
pop
jns
push
adc
movsl
out
sbb
sub
stos
ds
jo
pusha
and
mov
push
push
sub
mov
loopne
mov
fwait
cltd
daa
and
loopne
int3
sar
push
lock
in
in
add
sbb
push
jecxz
cmp
xlat
xor
or
add
pop
jle
iret
and
add
hlt
or
into
daa
dec
hlt
test
sub
push
mov
dec
push
sbb
inc
ss
pop
sarb
jb
push
sbb
jl
sub
add
insb
arpl
pop
sub
xor
cmp
push
or
adc
add
jg
sbb
andb
test
or
cmc
inc
jae
and
nop
mov
fistps
sbb
test
iret
cld
in
pusha
mov
ficoms
int3
mov
sbb
stc
mov
fsubrl
or
stc
std
xchg
mov
in
cmp
popl
adc
push
pop
cmp
push
arpl
and
push
and
inc
lock
xor
add
pop
push
push
add
mov
sub
out
pop
jne
rclb
sub
mov
cs
pop
mov
cmp
xor
pop
shll
sbb
test
std
loopne
stc
shr
rorb
add
in
lret
std
inc
iret
mov
daa
lock
ret
mov
addb
imul
adc
or
push
addb
lcall
add
das
jl
cmp
addb
add
and
ja
add
mov
add
add
repnz
dec
jno
mov
and
pop
ljmp
push
ret
cmpsl
test
loopne
jmp
sbb
shl
notb
xor
xlat
aaa
push
mov
mov
mov
mov
cli
pop
mov
and
mov
aad
add
add
inc
leave
cmpsb
mov
pop
subb
cmp
sub
inc
lcall
scas
pop
jbe
add
push
push
pop
mov
push
mov
add
imul
jo
mov
aas
mov
push
mov
add
mov
push
fcmovu
str
xor
clc
and
ljmp
stos
loop
mov
sbb
data16
ret
add
sub
inc
movsb
mov
bound
push
ds
add
sbb
fucom
add
pop
sub
insb
testl
test
adc
jl
add
cmp
cs
jmp
xchg
popf
cmpsl
cmp
hlt
popf
push
mov
adc
add
sbb
adc
and
add
in
fimuls
cs
dec
add
sub
add
add
popf
test
mov
dec
popl
add
daa
jg
movsl
adc
pmuludq
gs
rolb
and
out
xor
add
stos
push
pop
dec
je
rclb
cli
push
pushf
lret
and
or
movb
dec
sub
faddl
and
test
pop
sbb
lods
dec
enter
add
jns
std
cmp
sub
int
shll
pop
adc
xchg
xchg
and
push
push
inc
jecxz
xor
or
lds
xchg
xchg
and
xchg
ljmp
and
jg
andb
xor
push
jno
add
cld
cmpb
jge
adc
or
je
push
cmp
jl
into
add
lods
int
mov
add
repnz
fists
or
add
jae
std
shlb
test
out
xchg
or
ljmp
mov
add
jo
jbe
add
add
add
xchg
add
add
xor
dec
jbe
cli
or
xrelease
push
or
mov
or
or
pop
or
rclb
mov
and
adc
mov
lds
pop
xchg
and
and
and
and
and
jae
orb
inc
jno
fcmovb
addl
jl
or
imul
pop
lock
push
add
cmp
sub
repz
jp
and
push
outsb
add
loop
xchg
mov
sbb
cltd
test
add
push
xor
jmp
addr16
push
or
sbb
out
es
mov
cli
sub
mov
loope
adc
ret
mov
xchg
and
or
rcrb
in
shl
testb
push
push
or
shll
add
test
sub
xchg
and
pop
mov
sbb
sub
adcb
adc
adc
addb
mov
das
sbb
add
xchg
mov
add
xor
in
sbb
sbb
rolb
sub
jmp
mov
xchg
je
add
sbb
xor
cmovnp
jl
fiadds
repz
call
cmp
adc
test
sbb
sub
jnp
xchg
push
and
bound
cmp
or
scas
xchg
add
pop
jge
aas
push
jno
mov
clc
gs
pop
add
rolb
data16
in
push
mov
lret
sti
adc
aas
dec
fdiv
add
sbb
mov
arpl
adc
cmp
repz
add
fwait
mov
or
adc
mov
jmp
add
or
push
or
cmp
inc
jnp
push
mov
add
pop
adc
add
mov
fwait
loop
mov
and
sbb
lock
add
scas
and
mov
add
dec
mov
pop
movsb
add
iret
or
or
dec
enter
in
sub
and
addr16
std
daa
pop
call
sbb
jne
ja
sub
enter
in
daa
mov
push
cwtl
add
cmp
add
negb
mov
test
dec
or
add
mov
add
inc
add
test
ds
and
push
je
mov
stc
xor
add
in
and
sub
outsl
sbb
lret
cld
add
xor
leave
es
testl
mov
xor
add
mov
xchg
out
xchg
mov
fsubrs
loopne
loop
add
add
adc
rclb
pop
loopne
add
push
cs
dec
lea
adcb
add
daa
jno
es
pusha
and
sbb
push
add
mov
push
adc
enter
add
adc
std
incb
xchg
es
test
std
pop
and
in
lret
in
or
fwait
test
add
ss
add
jecxz
xchg
sbb
insb
fldl
fidivrl
add
out
pop
out
repnz
xor
sbb
f2xm1
ret
addr16
aaa
push
mov
rolb
adc
xor
or
mov
dec
outsb
data16
add
jb
loope
movsb
xor
inc
aas
sbb
jnp
cmp
xor
pop
jae
add
mov
sahf
sbb
sub
cmc
mov
add
or
mov
fsubp
pop
les
xor
xchg
mov
cmp
pop
pop
mov
jmp
mov
jae
cs
inc
add
insl
lds
or
jmp
insb
outsl
add
rcrb
push
fs
mov
cmp
adcl
push
add
sbb
aaa
adc
les
cmp
mov
mov
bswap
inc
andb
jecxz
popa
mov
int3
subb
sub
insl
int
loope
out
bndldx
and
aad
pop
add
lret
xor
pusha
add
add
or
add
and
push
add
or
add
add
lds
xor
jg
mov
js
add
data16
xor
add
and
sbb
je
mov
cmp
adc
movsl
add
in
inc
push
cs
mov
ret
loop
xor
add
int
stc
fbstp
sarb
xor
mov
xchg
in
pop
sahf
lea
add
mov
sbb
das
je
xchg
sbb
pop
or
addl
imul
mov
loopne
mov
fs
xor
rdpmc
dec
and
pop
push
jl
mov
jae
add
sub
and
out
movl
cs
mov
add
add
push
add
test
cmc
xchg
lock
and
xorb
pop
sbb
add
add
shlb
add
insb
jmp
cmp
add
sbb
hlt
add
pop
sbb
pavgb
push
pop
je
and
and
insb
xor
add
xor
sub
addb
or
adc
sbb
add
imul
push
xchg
add
and
mov
jecxz
and
fsubr
cmc
in
push
sbb
add
rorb
push
add
subl
ret
cmp
xor
cld
mov
aas
mov
test
push
test
add
pusha
add
add
xchg
mov
mov
dec
data16
sbb
pop
or
pop
inc
daa
loop
or
add
cmpsl
mov
ret
sub
push
aas
push
hlt
sbbb
es
loope
daa
shl
add
cld
jl
mov
aas
inc
fbstp
out
addb
adc
sbb
and
fmull
pop
call
nop
repz
jne
and
in
fdivl
xchg
clc
mov
push
in
aaa
dec
movsb
insb
add
sbb
loope
mov
loopne
cmp
call
mov
push
jno
push
add
add
mov
cmp
push
add
ret
mov
mov
pushf
and
and
inc
je
lods
sti
jo
push
jne
movb
enter
adc
inc
add
xchg
clc
in
mov
add
idivb
fdivrl
push
mov
sbb
add
cmp
xchg
or
pusha
add
xorb
loope
sbb
jno
xor
dec
jo
pop
sub
mov
in
je
push
add
stos
pop
xor
and
aad
pop
and
sbb
add
rcll
nop
mov
sub
add
sarb
mov
pop
ror
sbb
add
xor
hlt
mov
add
out
rcr
sub
cmc
out
add
movsb
arpl
cmp
out
sbb
mov
pushf
pmulhuw
rorl
dec
xor
out
push
xor
adc
xchg
add
or
mov
push
mov
mov
or
push
adc
jle
mov
push
add
arpl
and
je
or
mov
cmp
les
mov
xor
pop
lcall
aam
out
cmp
add
out
rorl
movsb
pop
inc
add
mov
inc
add
mov
mov
lea
ja
add
pop
push
fs
xchg
mov
aas
jmp
pushf
je
insb
mov
in
xor
ja
add
pusha
xchg
sbb
add
add
or
mov
mov
iret
repnz
rolb
mov
or
xchg
add
xlat
std
sbb
dec
roll
in
les
add
adc
xchg
xchg
movsl
add
cmp
int3
cmp
sub
lcall
bound
test
inc
mov
sub
shrb
bound
outsl
jae
dec
add
gs
mov
dec
movsb
inc
cmpsl
adc
outsb
je
popa
jae
xor
push
aam
cmp
sarb
arpl
adc
xor
add
aad
sarl
insl
mov
cmp
mov
stos
adc
add
xor
xor
je
add
xor
inc
push
lods
mov
add
adc
dec
push
adc
lahf
cmp
cltd
add
bound
js
insb
xor
xchg
sbb
cmp
test
jns
outsl
call
inc
adc
or
nop
dec
loopne
outsl
jo
imul
add
push
or
inc
jne
outsb
lret
push
push
jb
mov
sub
arpl
mov
sarb
mov
insb
gs
and
mov
js
cmp
insl
gs
inc
jb
or
add
sub
add
popa
outsb
xor
dec
pop
or
xchg
js
jae
bound
movsb
or
aam
mov
mov
inc
outsl
cs
push
je
insb
cmp
and
adc
jae
adc
push
adc
and
pop
push
inc
inc
dec
pop
add
jo
insb
outsl
imul
push
arpl
inc
sbb
shr
xlat
xchg
nop
repz
xor
gs
bound
inc
inc
outsb
ss
push
xchg
pop
push
pop
dec
push
fadds
popa
nop
xchg
arpl
je
pushf
nop
data16
cmc
fidivs
sub
or
outsl
cld
ds
cmpb
test
insb
mov
mov
outsl
aam
stos
cld
inc
insl
imul
adc
pop
rcll
cmp
xor
addr16
push
sbb
in
lea
mov
xchg
sbb
push
loopne
jne
stos
dec
sarl
outsb
cmp
bound
pop
out
push
jo
es
mov
push
push
insb
rolb
sub
xor
test
jae
push
lcall
incw
adc
ss
sbb
jae
aam
inc
shll
mov
or
ja
sbb
lcall
mov
test
mov
jb
test
and
push
es
mov
sub
popa
sbb
fdivrl
pop
aam
and
sub
or
jb
pop
mov
dec
dec
sbb
push
loope
lods
fsubl
es
imul
stos
jo
icebp
leave
cs
sbb
addr16
mov
int3
mov
dec
or
xchg
add
jmp
sub
add
or
cmp
sub
mov
adc
add
das
xor
and
mov
leave
test
add
pop
jo
das
sbb
cmp
xchg
les
dec
pop
push
push
dec
inc
pop
push
push
jo
outsl
ja
inc
subb
cmp
cmp
andb
mov
push
jl
enter
and
jb
ds
cmp
aam
sbb
shlb
xchg
stc
push
adc
sbb
mov
or
aaa
sbb
mov
movsb
xor
sbb
fs
jl
mov
loopne
push
stos
sbb
lds
cwtl
mov
enter
jl
inc
xor
pop
in
jl
mov
pop
adc
mov
and
xor
inc
mov
adc
adc
xor
cmp
adc
xor
int3
or
or
dec
sbb
test
xor
adc
push
sub
sbb
call
adc
sbb
xchg
or
sub
and
or
push
xchg
or
or
in
sub
aam
rcr
pushf
xchg
or
dec
adc
add
lock
fs
adc
xchg
or
enter
jl
mov
dec
add
cmp
mov
jno
sub
mov
sub
pop
fs
dec
pop
push
sahf
push
sbb
and
imul
enter
push
pop
popa
cwtl
push
cmp
jbe
sub
test
outsb
ja
arpl
fsubrl
push
inc
imulb
adc
sub
jo
push
xchg
insb
ja
gs
pop
or
sbb
xor
imul
in
mov
xor
imul
insl
out
flds
insb
fs
add
outsb
xchg
dec
pop
iret
sub
bound
call
fldenv
dec
outsb
arpl
out
push
or
cmp
xchg
out
xchg
dec
iret
xor
push
clc
outsb
xor
into
mov
cmp
adc
pop
xor
jne
push
and
sahf
imul
dec
cmp
insl
adc
fs
dec
jl
imul
sbb
insb
push
dec
pop
dec
pop
movsl
and
testb
outsb
mov
inc
add
repz
dec
or
inc
loope
inc
je
cmp
and
aam
call
fbld
mov
push
dec
in
sub
call
bound
dec
sbb
lea
cmpsb
and
adc
mov
xchg
jnp
mov
sbb
cmp
add
inc
push
inc
dec
push
dec
dec
ljmp
loope
jb
xchg
cltd
xor
adc
dec
insb
push
test
jbe
mov
and
adcl
mov
dec
push
fsub
jl
or
dec
mov
mov
loope
inc
dec
xchg
inc
xchg
andl
popf
ds
pushf
loope
pop
xlat
outsl
mov
jbe
adc
inc
add
fsubrs
mov
mov
push
inc
pop
dec
sahf
push
imul
inc
repnz
jecxz
lret
ljmp
or
cwtl
test
sub
inc
xchg
add
push
jne
jae
imul
insb
jg
dec
dec
es
jmp
mov
xor
stos
or
jae
popa
jne
je
cmp
fs
insb
cmc
imul
in
jl
inc
inc
jb
mov
addr16
subb
pop
test
lds
inc
or
bound
imul
pop
mov
dec
cmp
inc
dec
push
insb
pop
pop
test
dec
icebp
sahf
out
inc
outsl
lods
lahf
pop
or
cmp
js
xchg
inc
rclb
outsl
sub
dec
outsl
inc
dec
pushf
sub
jo
movsl
push
push
push
mov
inc
insb
popa
jne
inc
sub
push
pusha
push
ficompl
repz
and
or
outsb
testb
sub
push
push
mov
cmp
xor
mov
je
lds
xor
xchg
sbb
scas
push
test
xchg
popa
push
jne
std
movsb
adc
adc
push
mov
sub
sar
dec
dec
inc
data16
in
sti
ljmp
out
mov
xchg
cmp
and
lret
stc
xor
xor
jbe
cltd
push
pop
imul
pushf
stos
and
std
idivb
push
outsb
jmp
int3
xchg
and
pop
scas
adc
xor
and
sbb
addr16
mov
pop
sbb
push
push
xor
xor
dec
mov
jae
and
or
ret
push
js
and
dec
dec
and
dec
shrb
xor
xor
sarl
loopne
sahf
dec
push
out
and
push
push
adc
jns
fidivrl
dec
cmp
sub
pop
fbld
icebp
xchg
dec
xor
insl
mov
mov
jb
pop
jo
ss
sets
sub
cld
jbe
and
out
xchg
push
mov
pop
inc
cmpsl
xchg
pop
rcrb
andl
sub
inc
cmp
rcr
mov
inc
jne
jb
sub
push
mov
xchg
daa
xchg
cmp
sub
ret
icebp
lods
dec
pushf
mov
inc
daa
jns
insl
inc
mov
and
pop
inc
sub
lea
sub
inc
stos
add
cmpsb
das
movsb
lods
les
clc
aad
push
or
inc
out
mov
test
sbb
fs
jb
or
adc
add
cmc
sub
or
cwtl
or
adc
pop
dec
xor
mov
xorb
pop
loop
jmp
call
jo
cwtl
cld
ret
add
xchg
imul
xor
fsts
pop
movsl
lcall
jp
jg
add
lea
cmc
cmpsb
sbbb
repz
shrb
in
xchg
add
pop
popf
fdivrl
ret
adc
adc
mov
js
pop
stos
push
push
cmp
ficomps
ss
push
test
adc
pop
xchg
lock
fcompl
xchg
lret
push
iret
data16
gs
shlb
repz
es
add
cwtl
cld
fwait
int3
sub
sub
sahf
jae
add
pop
adc
popf
xrelease
into
lret
ss
rorb
sbb
inc
xor
adc
test
jnp
cmpsb
fbld
jns
sub
fimuls
add
pop
andl
mov
lods
xor
enter
dec
ret
or
xor
add
bound
loopne
cld
in
leave
pop
jmp
cli
fdivr
push
ficomps
clc
jns
mov
fsub
lock
fistps
lahf
mov
out
ljmp
cmpsl
mov
mov
lock
jl
loope
cli
sahf
fs
dec
dec
and
scas
or
ja
push
dec
pop
dec
out
cmpsb
pusha
popa
bound
jne
je
pop
xor
cs
fs
inc
pop
or
sbb
repz
insb
pop
sbb
stc
pop
mov
pop
idivb
sar
stos
jno
pushf
inc
pop
aad
pusha
andl
jo
insb
hlt
xchg
push
or
fistpl
adc
ja
ret
imul
jbe
sbb
jne
or
es
cltd
jae
fwait
add
jae
xor
jb
fsubs
push
stc
dec
icebp
je
enter
sub
gs
fwait
pop
pop
xor
mov
or
aaa
xorb
add
ds
std
dec
add
aad
call
jp
jo
cmp
inc
xor
pop
xor
xor
cmp
stos
add
nop
movsl
xchg
cmp
ja
out
sbb
test
inc
push
dec
mov
inc
adc
stc
inc
inc
jecxz
insl
mov
insl
push
ds
sar
mov
sub
mulb
test
sub
jae
arpl
and
mov
or
std
lea
sub
xchg
das
lret
or
out
bound
inc
dec
sub
push
cmpsl
inc
ret
js
out
cwtl
imul
sub
dec
mov
add
out
outsl
int3
outsb
daa
push
scas
js
xor
adc
outsl
xchg
and
js
jl
out
mov
cld
aam
repnz
push
inc
and
inc
dec
in
imul
and
daa
into
pop
and
or
icebp
mov
popa
sub
sub
xchg
inc
push
cmp
xor
sbb
pushf
add
shll
inc
rclb
add
hlt
out
cltd
add
shlb
mov
adc
adc
add
or
dec
aam
xor
push
push
xchg
xchg
add
and
std
int3
inc
fs
add
sub
rclb
int
sbb
jl
mov
pop
adcb
adc
cmpsb
push
and
inc
cld
inc
push
push
inc
xor
or
or
add
dec
push
add
sub
movsl
rol
xor
push
sub
or
adc
std
dec
pop
enter
test
fdivrs
lret
int3
ret
les
int
fs
sbb
stos
lods
adc
inc
movsb
enter
pop
push
je
enter
nop
and
and
xor
int3
xchg
fmul
push
orl
add
push
pusha
and
add
sub
pop
movsb
sub
add
push
or
dec
sbb
jo
cwtl
jb
add
adc
into
and
or
pop
in
sbbl
adc
and
add
clc
adc
repnz
lds
add
orb
dec
cltd
adc
mov
adc
test
pusha
outsb
inc
sbb
fimull
push
or
sub
or
xchg
sub
or
xor
push
dec
movsb
js
mov
and
in
sub
pop
faddl
fs
xor
xorl
idiv
jo
jo
push
arpl
and
sub
add
sbb
cli
xchg
aam
roll
jns
pop
add
push
jg
add
sub
push
push
out
popf
adc
xchg
pusha
dec
add
lea
hlt
dec
and
pop
loop
scas
cmp
adc
cmpl
insl
popa
jb
jb
cmp
call
xor
inc
cmpl
testl
xor
out
add
loopne
pop
add
dec
je
mov
scas
jmp
add
aaa
cltd
xor
xchg
lret
adc
add
and
sub
aam
dec
add
jl
mov
ja
out
call
inc
add
cld
push
pop
inc
sub
fs
mov
je
mov
mov
daa
inc
das
js
xchg
or
and
pop
shll
push
into
cmp
dec
sbb
insl
dec
or
sbb
sub
aas
adc
mov
dec
ret
push
dec
mov
inc
addl
push
loop
xchg
dec
ja
push
sub
push
jo
shlb
pop
and
jne
outsb
dec
popf
in
sub
lret
ja
shll
push
cmp
xor
les
mov
sarl
pop
dec
leave
test
pop
ret
shrl
fs
push
push
mov
pop
fldt
pop
sahf
xor
inc
push
dec
popf
mov
push
lea
and
in
pop
dec
pushf
jae
inc
mov
arpl
dec
in
cmp
pop
cwtl
iret
jp
rcr
dec
jo
pop
fstl
mov
mov
outsl
jne
fs
and
push
flds
ds
repnz
les
les
mov
lods
scas
and
aas
rclb
gs
sbb
dec
dec
jecxz
dec
dec
sub
adc
movsb
pcmpeqb
pop
data16
push
or
movsl
jge
ucomiss
xchg
stc
jmp
insl
push
xchg
adc
stos
and
decb
jns
sbb
cmp
addb
inc
or
insb
xor
out
push
and
scas
je
adc
arpl
jb
repnz
sahf
adc
inc
push
mov
jno
imul
jne
push
lods
mov
out
lret
jbe
pop
dec
shlb
dec
out
lods
arpl
test
jae
cmpsb
dec
inc
cs
daa
pop
icebp
mov
cltd
dec
jl
xchg
fldcw
push
adc
das
inc
mov
jp
nop
pop
sub
cli
int3
shrb
out
insl
mov
es
fisubrl
adc
or
adc
xchg
imul
int3
xor
push
loope
push
push
cwtl
add
dec
loope
out
inc
xchg
test
ret
sbb
sbb
xor
scas
adc
je
cmp
cmp
or
pop
aam
test
xor
push
jne
fsubl
inc
movsb
data16
push
sbb
dec
adc
sbb
dec
mov
and
inc
mov
push
cmp
scas
mov
sub
push
inc
dec
pop
or
lock
cmp
movsb
fsubl
in
adcb
outsl
mov
sub
dec
dec
mov
mov
xor
add
inc
xor
mov
xchg
or
xchg
call
mov
call
inc
loopne
rclb
add
push
add
jge
pop
adc
mov
mov
in
mov
xchg
add
lret
rclb
test
add
push
mov
mov
push
sbb
stos
jns
arpl
test
sub
dec
bound
leave
cmc
je
mov
xchg
popf
push
or
inc
inc
push
ficoms
cmpb
xor
xor
dec
ds
push
inc
test
jns
xor
cli
aas
lods
sub
insb
mov
mov
inc
ss
nop
xor
and
xor
std
adc
inc
cmp
cld
push
jns
jo
aam
mov
lods
xor
imul
jo
and
lock
aam
dec
sub
xchg
shr
pop
inc
xor
and
in
insb
sub
imul
shr
adc
fs
xchg
fisubrs
out
and
jae
mov
lock
push
fdivr
jno
insl
jecxz
negl
mov
or
pop
cmpsl
aaa
add
and
jg
lahf
das
iret
cmp
gs
je
insl
mov
lahf
das
push
mov
cmp
cmp
push
cmpsl
sub
dec
jbe
jnp
add
xchg
xor
or
fmull
xchg
mov
popa
sbb
sbb
fbld
xor
cmp
push
ds
or
and
dec
pop
push
jmp
xor
ds
mov
sbb
push
inc
inc
dec
push
inc
or
dec
inc
push
pop
or
dec
dec
out
dec
push
push
cs
push
movsb
movsb
push
inc
cmp
adc
pusha
gs
sub
mov
or
cli
imul
cltd
jmp
adc
xchg
push
in
cwtl
pop
movsl
sub
and
dec
push
inc
movsl
rcl
pop
scas
xor
imul
into
adc
lods
inc
sti
test
xor
jae
es
sub
pop
dec
lock
lret
jns
test
sub
adc
cmp
xor
push
pop
xchg
clc
fs
cmpsb
sbb
mov
jle
cwtl
sbb
xchg
jl
cmp
lea
das
push
imul
aam
cmp
inc
dec
xchg
or
ret
ss
cmc
data16
movsl
rorl
popa
fcoml
dec
mov
sahf
xchg
or
mov
addr16
pop
lcall
dec
mov
daa
mov
xchg
and
push
test
xor
icebp
adc
jb
sbb
and
pusha
lods
push
fsubrl
pushf
xor
mov
adc
jnp
dec
pop
dec
mov
daa
jne
gs
sarb
pop
dec
xor
mov
jb
or
xchg
dec
sbb
mov
int3
or
or
dec
push
icebp
movsl
dec
push
mov
pop
das
jo
lret
icebp
cmc
lods
inc
mov
fistpll
insl
inc
cli
hlt
push
pushf
xchg
sti
xchg
sub
gs
jp
ja
dec
mov
lcall
inc
pop
xchg
sbb
jp
sub
cs
scas
mov
push
xor
fistpl
push
fdivrs
movsl
mov
jnp
push
mov
xor
nop
ret
push
popf
xchg
outsb
clc
adc
nop
hlt
aam
or
dec
mov
dec
mov
cmp
test
cmc
out
or
push
cmp
mov
inc
outsl
xchg
push
mov
pop
imul
push
adc
sbb
inc
push
inc
pop
scas
pop
lret
add
mov
xor
cmpsl
or
jne
mov
sbb
rolb
cltd
add
or
xchg
add
xor
jne
or
xchg
add
ds
rolb
cltd
add
or
push
mov
jge
movsl
pop
xor
jns
lods
xor
mov
adc
inc
js
inc
jnp
xor
ret
daa
shr
into
add
lret
insb
add
loope
xor
adc
xor
add
jo
mov
add
add
in
ss
jo
mov
add
add
in
ss
jo
mov
add
gs
dec
add
add
add
loope
xor
adc
mov
cmp
xor
sub
or
scas
pop
leave
add
clc
lcall
dec
or
inc
addr16
cmp
and
or
xchg
push
jne
xor
cmp
stos
and
push
cmpsb
add
push
imul
or
or
push
or
movsb
push
sub
push
add
test
or
pop
dec
add
aam
or
sub
outsb
sub
data16
or
add
or
movsl
push
add
add
or
or
dec
sub
imul
add
or
outsb
dec
sarl
cmp
fisubs
bound
adc
pop
adc
or
add
dec
ljmp
push
arpl
xchg
add
pushf
ljmp
pop
out
mov
dec
adc
or
insl
or
sub
mov
adc
mov
sub
inc
aas
and
inc
pop
cmp
adc
pop
inc
push
push
dec
pop
mov
dec
lock
cs
test
pop
movsl
bound
fsubr
pop
frstor
pop
xchg
sub
push
or
pop
int3
add
dec
dec
imul
pop
iret
mov
jmp
icebp
call
inc
lods
pop
mov
push
iret
in
gs
addr16
rolb
lods
pop
jmp
inc
in
mov
movsb
ror
idiv
ljmp
inc
inc
jge
lods
pop
mov
pop
push
insb
add
push
xor
pop
aam
stc
call
data16
jmp
pop
xchg
pop
mov
sbb
mov
pop
insl
pusha
out
push
imul
sub
pusha
mov
popa
push
outsb
lock
and
lock
and
lock
and
lock
and
lock
ret
dec
inc
pop
sub
jnp
jecxz
cmp
fs
cmp
shlb
fwait
je
dec
test
sbb
cmpsb
adc
fwait
mov
xor
inc
push
cmp
push
xor
xor
cmpsl
arpl
mov
cs
js
dec
andl
pop
scas
mov
sarb
in
jo
inc
inc
loope
sbb
aaa
sub
adc
ss
jbe
dec
repnz
ljmp
xchg
adc
popa
sub
adc
push
outsl
arpl
int3
and
cli
out
or
xor
je
pop
inc
outsb
jbe
out
ljmp
ja
cmova
jb
push
dec
mov
dec
outsl
mov
and
mov
adc
lcall
outsb
imul
cmpsb
mov
push
adc
call
jecxz
sub
adc
ss
cmpb
dec
std
test
shll
stos
adc
mov
push
push
and
addl
cmpsb
xchg
xchg
out
rcrb
cmpsl
and
xor
inc
ss
push
fwait
add
dec
push
fwait
movsb
sbbl
jne
insl
or
mov
sbb
push
or
dec
ret
inc
cltd
inc
inc
test
dec
pop
gs
dec
xchg
jecxz
outsl
bound
adc
mov
pop
test
or
sub
sbb
mov
dec
arpl
sub
les
lret
and
inc
mov
pusha
cmp
outsl
jp
sub
popa
das
xor
mov
leave
dec
imul
dec
jp
adc
loope
cli
dec
dec
sub
lock
hlt
insb
push
inc
adc
movsl
rorb
dec
adc
and
jne
dec
and
fucomip
int3
movsl
jle
lret
xor
adc
cmp
inc
je
test
decl
cmp
jno
sbb
mov
xor
test
xchg
int
ret
fcmovb
insl
push
lods
sub
push
sbb
insb
inc
test
adc
or
push
mov
cmp
mov
leave
stos
jbe
push
push
or
and
mov
mov
xor
jae
mov
inc
insb
push
adc
pop
scas
movsb
stos
or
push
push
aam
cmp
xchg
or
pop
add
push
inc
scas
aam
ret
test
js
adc
test
dec
push
xor
lods
movl
stos
sub
cld
dec
aas
arpl
enter
push
ja
or
sub
jmp
int3
dec
bound
je
adc
imul
push
movsl
and
and
decl
pusha
adc
stos
adc
pop
dec
inc
cmp
lods
pop
push
movsb
adc
ja
arpl
mov
fs
inc
int3
lods
xchg
test
push
push
mov
test
jns
mov
outsl
pop
dec
adc
jae
pop
imul
lcall
adc
xchg
adc
xor
jne
shrb
imul
xorb
call
repnz
imul
sbb
jae
dec
outsl
test
adc
stos
push
scas
dec
movsb
stos
xor
xor
or
mov
rcrl
push
inc
xor
push
adc
andl
xor
sub
mov
scas
jge
and
inc
imul
mov
jne
jne
sub
sub
push
and
mov
xor
int
pop
adc
xor
lret
insb
rorb
or
fs
inc
push
jmp
in
and
and
notl
loopne
or
inc
leave
push
add
adc
les
jbe
xor
mov
sub
aas
inc
pop
xchg
cltd
adc
xchg
sbb
push
insl
daa
int3
pusha
xchg
fisubl
ror
fstpl
imul
icebp
mov
pop
clc
xchg
lret
dec
sbbl
test
xchg
dec
dec
outsl
push
das
mov
jae
xchg
xchg
fldenv
dec
fnstcw
adc
dec
mov
xchg
outsb
lret
inc
sbb
push
ss
test
shr
lock
mov
jmp
in
gs
out
pop
leave
jno
loop
xchg
sbb
push
lret
inc
push
xor
mov
mov
sbb
cmp
push
sbb
push
pop
adc
pushf
push
pop
push
rclb
jecxz
int
gs
pop
ljmp
jl
xor
dec
jae
lahf
shl
rorb
dec
push
inc
inc
dec
gs
push
dec
lds
mov
dec
aam
adc
push
fstpt
xor
jae
cmp
and
fimuls
and
or
or
imul
and
rcll
push
imul
packuswb
pop
mov
jae
stos
pushf
sbb
bound
dec
sahf
in
test
sub
sub
stc
das
jnp
dec
inc
jb
jle
mov
mov
ds
fs
add
sbb
daa
ds
xor
and
sbb
mov
mov
xorb
cmp
xor
sub
adc
adc
dec
add
add
insl
imul
addl
pop
ret
nop
movsb
arpl
sub
les
mov
and
add
js
insb
xchg
add
adc
ljmp
scas
sbb
jp
fs
and
add
lods
or
or
std
jns
pusha
or
pop
xchg
fs
daa
test
fs
lods
push
dec
sub
pop
fnstsw
into
adc
rcrb
lret
leave
or
sub
xchg
xchg
lcall
test
ds
outsb
pop
cmpsb
pop
pop
lea
dec
cmc
push
jno
int3
dec
xor
push
jbe
mov
lods
inc
jne,pn
ja
mov
test
mov
jmp
pop
jb
or
hlt
arpl
or
movsb
ss
cld
mov
lods
mov
adc
outsb
dec
std
push
and
andb
imul
imul
lret
dec
cld
loope
pop
mov
xchg
stc
sbb
and
push
cmp
lods
aad
mov
test
jle
lret
fisubrl
xchg
into
les
jne
jne
mov
xor
and
dec
pop
test
inc
pop
int
popa
xchg
xchg
xor
sbb
sbb
movsb
inc
data16
insl
subl
scas
movsb
daa
pop
pusha
xchg
dec
jl
in
mov
fs
in
dec
fs
push
xchg
je
mov
insb
das
leave
outsb
out
mov
jne
lea
pop
outsl
and
out
daa
add
mov
imul
xchg
into
loopne
sbb
jo
fsts
test
cmpsl
imul
daa
or
repnz
test
mov
xor
mov
pop
xor
shrb
or
and
test
mov
jmp
push
lds
cs
dec
inc
les
in
test
push
dec
jns
xor
mov
cs
sub
dec
das
or
rep
xchg
dec
js
dec
fs
mov
xor
mov
lcall
pop
lods
xor
ficoms
and
sub
into
add
mov
or
push
data16
xchg
mov
sbb
dec
mov
or
cmpsb
lds
cmp
pop
cmp
stos
xor
mov
fsubrp
mov
cmp
jge
cs
fwait
stos
dec
cmp
cmp
cmpsl
sbb
shrb
mov
push
push
ss
or
mov
or
sub
mov
mov
leave
inc
leave
movsb
sbb
add
aad
add
push
dec
stos
ficoml
imul
sub
lret
imul
sbb
ljmp
cmp
jo
popf
cmp
mov
sub
cs
mov
dec
inc
mov
daa
push
dec
clc
sbb
jne
das
adc
lret
add
sub
mov
in
dec
dec
mov
dec
out
push
adc
mov
inc
sbb
push
cmp
lret
dec
pop
sbb
in
xlat
sub
pusha
xchg
stc
mov
push
jnp
test
adc
inc
mov
sub
or
push
push
mov
dec
outsl
mov
sub
jne
mov
shrl
bound
push
arpl
jbe
add
movsb
imul
adc
mov
inc
fidivl
push
and
adc
add
push
clc
in
dec
adc
lds
icebp
dec
movsb
mov
dec
mov
push
mov
imul
dec
je
xor
lahf
call
pushf
lret
mov
orb
cmp
cmp
push
out
mov
mov
xchg
scas
in
dec
mov
test
dec
aaa
aam
pop
jb
mov
cmp
jo
sub
repnz
inc
daa
add
outsb
mov
sub
shlb
xlat
adc
xchg
and
cs
movsl
jo
cmp
adc
insl
in
cmp
sub
movsb
decl
fwait
jb
shr
push
jne
cmp
sahf
pop
jns
mov
popa
pop
insl
sub
jmp
cmp
mov
out
push
sbb
aam
dec
call
and
mov
cmpsb
and
fs
insl
lret
xchg
insl
pop
cmp
in
mulb
daa
xchg
push
and
dec
rorb
mov
in
iret
inc
push
lods
xlat
push
stos
sub
das
rcll
ss
aad
lea
das
icebp
pop
aas
lret
sbb
js
dec
iret
dec
fs
xchg
dec
mov
lcall
pop
dec
mov
sbb
cmp
jne
sbb
gs
push
cmp
sub
call
test
xchg
pop
int3
mov
sub
sbb
xchg
ss
push
xor
add
add
pop
ja
adc
xor
test
xchg
jb
and
adc
xchg
imul
pop
mov
mov
adc
aas
push
or
xor
xchg
fsub
addr16
and
xor
or
xchg
inc
dec
push
xor
mov
or
leave
into
pop
hlt
rcrb
test
xchg
push
inc
movsb
lock
pop
jge
adc
dec
nop
test
dec
push
push
push
dec
call
imul
xlat
test
faddl
pop
mov
push
pop
mov
push
push
jge
cli
cs
sub
pop
dec
inc
cwtl
xchg
jo
push
jns
xchg
lea
out
sub
sub
xor
push
push
cmc
loop
sub
mov
nop
sbb
lods
xchg
inc
dec
popa
lds
sub
and
inc
push
loop
cltd
or
in
pop
daa
fs
and
mov
lds
cmp
or
jg
sbb
aad
test
and
ljmp
adc
adc
imul
xor
cmp
lods
push
mov
jno
out
cmp
addr16
mov
je
and
lods
outsb
cmpsl
xor
xchg
xor
dec
sub
jp
adc
rorl
test
push
sub
mov
push
inc
push
push
dec
hlt
ljmp
out
jbe
sub
jl
push
dec
inc
push
mov
sub
fldl
dec
and
out
push
and
jp
xlat
xlat
fucomp
lods
push
add
xor
nop
and
inc
cmp
lods
loope
test
js
cmp
sbb
cld
and
in
aas
and
es
sub
sub
das
cld
pop
xchg
cmp
daa
bswap
pusha
jle
jle
and
mov
popa
arpl
test
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
add
sbb
and
and
enter
pop
repnz
nop
sub
sub
and
stc
pop
bswap
cmp
daa
pop
nop
pusha
cld
jle
in
aas
das
cs
jbe
test
mov
pop
nop
and
mov
push
movsl
pusha
dec
sbb
cs
dec
inc
stc
dec
sbb
and
inc
and
mov
jle
and
and
movsl
sbb
and
and
and
adc
jl
dec
dec
dec
cld
test
jp
or
pop
dec
sbb
push
xchg
movsl
pop
dec
sbb
mov
int3
je
test
push
push
movsl
dec
inc
add
fwait
push
sbb
jo
jns
push
jl
add
dec
sbb
sub
jo
inc
and
lret
clc
pusha
mov
mov
loope
dec
sbb
in
push
adc
xor
push
inc
dec
test
aaa
inc
lea
sub
xor
arpl
cmpsb
mov
pop
cmpsb
sarb
mov
xchg
jo
rcll
lods
pop
jl
mov
popf
xor
push
ficoms
add
or
add
sbb
push
dec
and
test
sub
pop
push
inc
push
push
jb
inc
mov
xor
cs
push
push
imul
inc
imul
cs
loop
enter
xor
push
imul
subb
jo
push
mov
scas
pushf
push
sub
mov
das
mov
cmpsl
daa
js
push
insb
dec
jne
pop
arpl
cli
jo
dec
insl
mov
mov
push
jge
in
loope
push
daa
sub
outsl
jecxz
imul
mov
mov
cli
into
mov
int
dec
xor
mov
or
dec
inc
xor
push
out
dec
lods
cmp
add
dec
jae
xchg
fcoms
inc
enter
and
sbb
clc
jb
adc
or
or
or
dec
fcoml
les
mov
mov
dec
test
pushf
mov
jl
js
je
jo
mov
and
dec
dec
xchg
inc
and
sub
mov
adc
and
pop
and
clc
xchg
cwtl
sbb
adc
xchg
or
and
inc
int3
dec
lods
iret
adc
lods
enter
pushf
and
jl
jo
push
push
mov
cmp
xor
sub
and
sbb
adc
mov
adc
adc
cld
xchg
and
inc
hlt
lock
adc
and
dec
rclb
mov
adc
mov
nop
xchg
mov
adcb
and
push
dec
and
dec
xor
sub
and
sbb
mov
or
add
cld
xchg
or
or
mov
fcoms
rorb
inc
les
xchg
push
and
mov
adc
jae
mov
push
xor
pop
or
dec
inc
xchg
inc
and
inc
xor
mov
sbb
adc
or
or
test
xchg
into
dec
dec
pusha
dec
xor
pop
popa
xlat
xchg
sbb
adc
dec
test
int
imul
adc
rorb
jo
mov
fs
push
pop
in
mov
and
xchg
inc
dec
arpl
insl
lcall
sbb
jno
inc
pusha
outsl
xchg
adc
xor
mov
or
mov
adc
test
mov
lcall
xor
adc
push
les
loop
pop
mov
mov
jne
or
mov
data16
imul
sbb
shrb
cmpsl
clc
je
sub
bnd
and
test
cltd
int3
imul
lret
dec
inc
mov
adc
dec
jge
movsb
jp
pushw
cmp
xchg
nop
xchg
xor
sub
popa
dec
cmp
push
or
insl
fidivrs
adc
fldt
inc
les
insl
imul
xchg
rcl
xchg
inc
mov
cs
jb
jno
ja
mov
mov
clc
dec
mov
dec
or
xor
cmp
sbb
and
push
ret
mov
inc
or
divb
or
or
push
leave
js
scas
or
xchg
popa
mov
sbb
fildl
or
sbb
inc
lcall
jb
inc
mov
mov
outsb
je
adc
and
sub
shl
and
outsl
aas
notb
sub
cmp
xlat
out
lock
push
xchg
and
mov
or
test
ret
or
sbb
xor
insb
lods
push
jo
ja
dec
les
xor
xchg
scas
push
or
cmp
les
lahf
clc
outsb
cltd
hlt
cmp
adc
in
data16
fs
and
push
clc
stc
sti
dec
xor
pop
in
ja
inc
mov
pop
into
xchg
data16
xchg
pop
loopne
hlt
cld
pop
pushf
or
fsubr
dec
sbb
push
outsl
cmp
cmc
mov
jbe
ss
dec
or
loope
xor
aam
loop
aas
xchg
xor
and
inc
sub
fdivs
inc
cmpsb
ficoml
cmp
testl
push
ja
and
pop
and
and
cmp
out
lcall
mov
in
ficoms
mov
mov
divps
in
dec
dec
aad
pop
adc
outsb
ss
push
xchg
outsb
test
pop
sbb
sub
int
test
popf
pop
aas
aam
mov
stos
xor
and
inc
cli
mov
cmp
and
xchg
jae
test
push
dec
xchg
mov
push
lods
inc
jmp
sub
xchg
sub
rcl
sub
push
mov
jle
or
rorl
cmp
jg
mov
jmp
and
sbb
hlt
inc
cmp
test
stos
stos
das
sub
test
push
push
shlb
imul
xchg
cmp
iret
or
movsb
push
cmp
test
dec
dec
xor
lods
pop
push
sub
mov
xchg
out
sub
sub
out
inc
push
xchg
roll
cmp
push
dec
xor
adc
xor
mov
and
mov
and
pop
push
test
aad
mov
fs
insl
mov
xchg
adc
adc
sbbl
jmp
or
cmp
sub
dec
pop
insb
jnp
push
push
dec
cs
jb
xlat
imul
lret
outsl
lods
mov
frstor
mov
cmp
insl
sub
inc
xchg
add
mov
dec
cmp
cmc
xchg
imulb
jg
and
aam
push
sarl
mov
push
hlt
lret
insb
shl
lods
and
jnp
pusha
dec
inc
mov
jmp
mov
imul
jb
mov
movsl
inc
in
cmp
gs
aad
xor
xor
and
mov
mov
inc
cmp
data16
inc
pop
popl
sub
dec
dec
popf
neg
adc
jo
sub
dec
jo
push
stos
dec
sub
mov
dec
cmp
dec
add
push
mov
push
call
pop
xor
je
mov
xchg
xor
cmp
ljmp
imul
mov
pop
test
mov
and
cmp
pop
and
insb
das
into
nop
dec
sub
pop
lret
leave
popa
ja
push
push
mov
adc
fnstenv
insl
dec
cmp
dec
outsl
lcall
mov
out
adc
dec
pop
sub
cmpsb
xchg
jns
adc
jl
push
push
imul
rcrb
dec
jecxz
mov
movsl
sub
inc
fisubl
sub
shrb
xchg
jle
pop
dec
rcpps
jb
call
lret
push
fistps
aas
jno
or
lcall
mov
movsl
fs
jns
and
stos
dec
adc
dec
pop
pop
cmpsl
inc
pop
or
push
fmul
pushf
sub
jp
gs
sub
mov
cld
lret
call
je,pn
mov
and
push
dec
push
xchg
push
xchg
outsb
cmpsl
push
and
cmp
fsubs
test
test
shr
jns
sbb
mov
pop
cld
shl
cld
dec
xor
fisubrl
push
adc
adc
jno
les
enter
cmpsb
mov
xchg
movsb
addb
push
rcrl
jne
inc
jle
sbb
outsb
jbe
hlt
subb
icebp
shll
test
mov
aad
push
cmp
mov
outsb
inc
ljmp
jae
loop
clc
xchg
push
stos
adc
and
mov
xor
push
dec
ljmp
xor
js
insb
sub
sub
push
pushf
push
fs
pushf
sub
rclb
out
fistpll
pop
adc
aas
mov
sahf
dec
scas
in
xor
mov
mov
sahf
loopne
jl
push
stos
js
mov
fisttpll
push
cs
repnz
out
es
mov
imul
sub
adc
addr16
cmp
sbb
sti
aad
test
inc
adc
insb
and
push
cli
push
push
dec
push
mov
jp
or
inc
inc
dec
repz
hlt
test
mov
xchg
cmp
sbb
cmp
test
movsl
and
cmp
pop
push
call
lods
mov
sub
jge
xchg
push
dec
scas
fs
cmpsl
call
movsb
mov
mov
mov
rclb
inc
push
pop
inc
sub
fidivs
daa
shl
cs
and
cmpsl
sarl
arpl
adc
dec
dec
xor
out
lret
hlt
sub
pop
daa
jne
jle
addr16
pop
push
cmc
cmp
out
aaa
mov
sbb
dec
mov
std
cmpsl
mov
test
sub
pop
mov
dec
in
cmp
mov
dec
jle
addr16
xor
push
mov
fdivl
mov
jecxz
push
mov
adc
mov
lret
inc
int
je
pop
sub
out
xor
mov
jmp
enter
xor
rcl
cmp
popa
pop
push
pop
dec
dec
pop
mov
xor
pop
shr
insl
fdivrs
decb
enter
mov
pop
out
or
dec
or
jg
lahf
into
test
xor
inc
mov
pop
loop
shrb
add
dec
dec
inc
push
cmc
xchg
jge
sub
in
std
jb
outsl
and
fnstsw
pop
std
cmc
mov
pop
adc
lahf
sub
dec
dec
xchg
scas
mov
ror
add
stos
stos
lahf
aas
ret
rcll
mov
jne
scas
cmc
and
mov
dec
and
cmp
push
mov
stos
push
dec
jecxz
jo
mov
sub
mov
push
sbb
movsb
mov
xor
sti
push
xor
dec
popf
aam
mov
mov
push
fwait
rorb
out
mov
push
fwait
in
push
movsb
xor
or
add
hlt
jle
jne
inc
mov
jmp
push
cmp
inc
mov
xchg
and
mov
aas
loop
fsubl
fldcw
pop
fmull
push
sarb
ljmp
mov
mov
inc
inc
cli
mov
inc
cmp
xchg
xor
xchg
xlat
xchg
sub
cs
dec
xchg
and
dec
push
jo
push
data16
lahf
test
jns
notb
push
sti
movsl
push
jo
push
pop
outsl
dec
xor
sub
and
clc
inc
pushf
inc
inc
sub
xchg
mov
cmpsl
add
inc
or
xchg
in
aad
leave
imul
imul
jge
adc
sub
movsb
or
pop
inc
ret
xlat
jp,pt
xchg
or
mov
lods
nop
imul
or
arpl
push
jp
in
jl
jne
xor
ja
pop
shlb
cmpsl
push
imul
je
add
insb
inc
push
dec
mov
inc
add
jo
jb
popa
ret
mov
pop
jbe
pushf
cmp
sub
pop
cwtl
sbb
cmpsb
or
pop
push
sub
push
js
adc
stos
lea
mov
add
insb
sahf
arpl
cltd
xchg
pop
pushf
loope
or
jmp
lea
push
cltd
stos
push
jp
fwait
jo
add
ss
stos
add
mov
mov
insl
or
push
add
jb
or
cs
mov
movsb
jns
or
insl
je
lds
or
jb
mov
test
or
cltd
xor
add
subl
inc
adc
mov
dec
js
addr16
sub
mov
jmp
pop
ljmp
xor
repnz
imul
sbbb
movsl
sub
dec
sbb
cmp
and
dec
lods
mov
sbb
xor
sub
sbb
cmpsl
bound
lret
xchg
sub
das
sarb
fdivrs
sbb
mov
movsl
call
aam
movsb
out
adc
jne
fs
and
push
dec
stos
imul
push
mov
aam
mov
repnz
cmc
cmpsb
jno
push
imul
sub
lret
shl
dec
pop
movsl
xor
inc
push
leave
js
clc
je
int
xor
inc
inc
push
cmp
jbe
push
gs
sub
movsb
mov
repnz
aam
mov
shrb
in
in
sarb
pop
jb
add
inc
fs
mov
add
ja
into
imull
lea
adc
sbb
jmp
and
int
or
sbb
addr16
in
xlat
and
xchg
inc
imul
cltd
mov
jo
or
adc
outsb
add
daa
pop
dec
xchg
movsl
aam
xor
push
jo
mov
movsl
or
or
dec
cltd
push
cmp
ja
xor
aad
test
add
dec
jo
dec
lods
out
fisubrl
clc
les
int3
inc
arpl
jp
cmpsb
or
movsl
mov
mov
pushw
xchg
sti
movsl
push
int3
cmp
inc
xor
nop
mov
mov
jo
aam
les
lea
push
cli
movsb
pop
dec
inc
pop
in
push
mov
adc
jp
fsubrs
xchg
jmp
lock
push
pop
iret
sub
fwait
ret
sahf
adc
cmp
push
repnz
sub
adc
cwtl
into
jne
setbe
mov
stos
test
fs
test
mov
inc
or
insl
or
loope
dec
xor
mov
inc
pop
ds
or
xor
or
pop
dec
or
pop
inc
sub
adc
or
cs
nop
mov
loop
sahf
inc
popf
push
or
sbb
mov
stos
xchg
xchg
inc
clc
in
int
jno
ss
push
lock
add
into
lea
or
xor
or
sbb
ja
sahf
or
sbb
sub
in
jae
sbb
or
dec
popf
dec
inc
and
dec
inc
outsb
sahf
sub
and
push
imul
or
xchg
adc
insb
mov
lods
adc
insb
dec
idivb
cmpsl
mov
icebp
insl
sub
or
lcall
adc
nop
mov
sahf
shrb
and
pop
push
sbb
mov
nop
rorl
iret
nop
imul
and
push
adc
aad
mov
jo
aam
out
jo
je
xor
insb
xchg
test
je
xor
push
adc
in
jp
loope
or
or
adc
sbb
jp
adc
xchg
xchg
xor
xchg
leave
xchg
and
mov
idivl
aaa
adc
pop
xor
sub
sub
jne
push
fnsave
xchg
and
pop
call
push
ds
cmp
dec
cmpsl
lock
sub
cmp
in
xchg
das
dec
cmp
nop
lret
ret
push
or
inc
push
and
pop
push
add
lock
xchg
mov
push
ret
push
les
lahf
aaa
adc
or
rcll
adc
adc
sbb
jle
push
mov
adc
or
xor
xor
aam
icebp
sub
in
call
xor
popf
mov
add
call
sbb
jo
outsl
sbb
jne
and
sbb
repz
loope
imul
cli
inc
mov
dec
inc
lahf
jns
aaa
out
fistpl
std
mov
je
aam
cmp
push
push
dec
jle
pop
popf
subb
push
cld
scas
or
pop
jle
mov
cs
leave
push
pop
int
xchg
dec
negl
pop
xchg
or
pop
jne
cmpsl
xchg
push
in
pop
pop
sub
add
mov
sub
test
out
dec
mov
sub
les
cld
cmp
inc
mov
pushf
cmpsb
xor
call
lcall
sub
lret
mov
push
or
mov
pusha
pop
popf
stc
pop
int
mov
dec
or
and
or
imulb
mov
sahf
shrl
and
sub
adc
fcmovne
in
mov
stos
cli
pop
mov
sub
aaa
pop
push
pop
aam
leave
dec
jecxz
ja
pop
je
addr16
mov
pop
bound
xchg
and
inc
pop
in
pop
stc
imul
dec
sub
imul
inc
imul
pop
sub
cld
lock
daa
xor
jne
out
lret
loopne
int
xchg
sub
mov
or
xor
push
das
inc
imul
sbb
jbe
and
add
xor
cld
and
fcoms
or
adc
mov
and
xor
in
in
in
ss
xchg
push
jmp
mulb
inc
jb
mov
pop
sub
xor
inc
es
or
mov
pop
and
xor
shlb
inc
aam
xchg
ficoml
popf
rcll
shl
xchg
jnp
sub
sub
out
dec
jns
and
jge
shll
xchg
pop
pop
loop
push
push
xor
push
sbb
shll
sarl
dec
mov
dec
out
pop
hlt
xchg
sub
das
dec
dec
cmp
and
lds
movsl
mov
mov
jl
cmc
and
and
push
push
cmpl
mov
inc
jnp
jmp
test
sbb
sbb
and
jne
inc
outsb
inc
adc
es
ljmp
adc
pop
adc
movsb
imul
lcall
fisttpll
imul
sahf
pop
cmp
test
rcrb
pop
pop
loopne
push
dec
xor
and
cwtl
cwtl
jae
in
or
out
mov
adc
pop
dec
xchg
repz
fimuls
inc
dec
push
mov
pop
insb
sub
fs
jo
mov
sub
out
push
cmp
adc
cmp
mov
mov
pusha
hlt
das
jno
sbb
xor
or
xchg
pop
arpl
jmp
and
add
leave
mov
xorb
inc
loop
cmpsl
sbb
addb
shlb
jg
jne
ret
push
jo
lods
or
or
or
xor
lea
or
jecxz
add
or
lahf
dec
js
inc
and
ljmp
or
cmpl
add
xor
push
add
pop
cmp
in
cmp
xchg
incl
add
enter
call
cmp
scas
cmpsl
adc
pcmpeqw
ret
sbb
inc
lock
ret
test
mov
pop
or
in
push
lahf
add
aam
repz
push
push
les
in
rorb
les
ret
stos
sub
and
hlt
idivl
sub
jns
mov
add
push
aam
xchg
xor
push
sarb
sub
outsb
xchg
push
push
mov
pop
cmp
imul
push
inc
push
xor
dec
inc
pop
push
push
mov
shr
pop
in
xor
xor
scas
cmp
sbb
aas
xor
jmp
and
clc
ljmp
ljmp
insl
adc
xchg
or
insl
sub
pusha
sbb
dec
pop
arpl
push
aas
xorl
jp
ret
cmpl
lds
adc
pop
sub
scas
sbb
push
call
int3
aaa
dec
xchg
loop
ja
cmp
mov
inc
dec
jne
push
jl
dec
mov
pop
inc
sbb
pop
popf
shl
dec
sub
lods
sbb
sub
xchg
adc
push
imul
push
lahf
add
fwait
dec
add
jns
or
popa
pop
aam
imul
movsb
incl
test
jno
jne
stos
fimull
push
dec
jge
dec
adc
daa
sub
gs
mov
mov
xchg
pop
jp
push
cmc
gs
pop
xchg
dec
loopne
push
pop
jp
mov
scas
xor
pop
sub
add
das
jb
xchg
aam
pop
movsl
fnsave
aad
and
add
xchg
dec
jns
cmpsl
push
addr16
aad
clc
das
cld
loope
xchg
and
stc
push
std
inc
pop
les
pop
mov
pop
fyl2x
cmp
insl
imul
stos
leave
cmc
xor
fwait
push
daa
dec
mov
lahf
adc
cltd
dec
aad
cs
repnz
aam
leave
popa
inc
cltd
adc
push
in
xor
or
cmpsl
insb
dec
test
rclb
aam
pop
mov
das
add
in
adc
cmp
js
insl
insb
pop
loop
and
ret
mov
lret
popf
movb
insl
imul
addr16
inc
inc
inc
push
std
arpl
mov
sub
sbb
popa
mov
lcall
sub
xor
sub
cmc
xlat
out
jge
jle
and
notl
xchg
jnp
inc
cwtl
pop
push
inc
pop
inc
push
inc
dec
and
adc
xchg
or
pop
subb
test
inc
sub
int3
sub
sub
or
add
rolb
cmc
mov
mov
adc
inc
subl
inc
push
addb
add
cmp
shlb
jo
pusha
adc
add
mov
or
jns
and
or
mov
loopne
adc
inc
xorb
popa
shll
cmp
push
mov
in
inc
mov
cmp
in
call
nop
mov
or
ficompl
rcrb
test
cs
fcomp
loopne
add
jle
cmp
dec
sbb
roll
inc
pusha
sub
add
xchg
add
dec
pop
sbb
cmc
add
add
aaa
std
jp
push
add
add
xchg
add
sbb
mov
adc
and
dec
or
or
or
or
sbb
push
push
push
cmp
or
cmpsb
pop
push
adc
adc
add
sbb
mov
adc
inc
xchg
inc
lret
gs
xor
push
cltd
or
pusha
pop
cmpsb
jl
insb
sbb
insl
inc
and
sbb
jb
lods
push
dec
xor
or
andb
or
dec
fs
dec
sub
in
xor
cmp
and
adc
pop
bound
xchg
fs
push
inc
lea
mov
enter
mov
in
cmp
xchg
and
dec
incl
inc
or
sbb
movsl
and
fwait
add
fmull
mov
cmp
mov
adc
xor
adc
rolb
sub
test
sbb
xchg
sbb
cmp
mov
or
and
loopne
mov
cmp
rcr
cwtl
push
sbb
imul
fwait
add
xor
mov
xchg
add
cld
ljmp
cld
add
inc
sbb
pushf
cmp
enter
inc
or
dec
pushf
or
push
ret
inc
cmpps
adc
adcb
and
leave
sbb
in
int3
into
arpl
rorl
and
sahf
add
lds
pop
std
and
sbb
jmp
add
xlat
xchg
inc
push
add
sahf
cmp
mov
adc
sarb
pop
js
shrb
mov
jmp
xchg
test
add
testl
sbb
fdivrp
popf
add
jmp
stos
push
inc
mov
int3
repnz
test
adc
stos
clc
scas
ljmp
jmp
aam
not
loope
add
iret
inc
gs
xchg
add
cmpsb
scas
mov
jge
pop
pop
or
addl
in
xchg
cmp
xor
push
mov
lds
pop
jp
add
push
movsl
mov
aaa
popa
sar
mov
fsubs
xchg
clc
repz
mov
subb
add
push
pusha
les
and
int3
add
add
add
jno
or
mov
loopne
cmp
fisttps
xchg
outsb
adc
shrl
mov
shl
add
mov
inc
sbb
lods
lds
cmpsl
out
add
mov
insb
scas
add
jmp
xor
in
xchg
mov
std
into
popa
add
loopne
dec
pop
add
dec
les
clc
xchg
lock
pop
cmp
int
jecxz
scas
loopne
addr16
lods
push
mov
fnstsw
and
aas
loop
cmpl
popa
mov
inc
push
pop
sarl
push
jl
mov
das
add
adc
xchg
ljmp
lods
mov
inc
add
fstl
arpl
int3
add
push
ja
call
add
sbb
and
lods
cmp
mov
cmp
add
xlat
cmp
mov
add
mov
jecxz
cmpsb
add
movb
jne
fildl
cmp
jno
shlb
loopne
out
add
pop
cmp
push
fisubl
xor
push
push
lahf
inc
pop
mov
adc
xor
dec
push
scas
into
imul
rcr
jge
call
out
pop
push
xchg
cmp
add
and
dec
dec
bound
add
adc
pop
ficomps
fstl
cmpsb
fmuls
jnp
mov
jmp
push
fwait
jne
ljmp
xor
inc
add
add
add
adc
lock
lods
add
inc
mov
imulb
and
xor
jl
add
ret
ss
mov
add
into
mov
imul
and
mov
icebp
push
dec
cld
inc
pop
lret
sub
loopne
sbb
dec
xchg
sar
shrb
add
cmp
and
daa
in
or
pop
xchg
adc
js
pop
call
xor
xchg
and
fs
hlt
leave
out
mov
inc
cmp
cmpsb
aam
test
push
inc
cwtl
rorb
adc
push
pop
bsr
clc
jbe
lahf
mov
pushf
pusha
fwait
aas
pop
js
setns
push
cmpsl
insb
dec
or
mov
pop
xchg
add
mov
add
or
inc
push
xchg
or
inc
mov
imul
add
fisubl
out
jns
icebp
sub
addr16
fldt
fwait
mov
pop
cmp
pop
orl
std
xchg
fdivrs
outsl
adc
mov
push
xchg
and
daa
add
int
xchg
cmp
inc
add
inc
cwtl
mov
andb
add
mov
xor
or
jle
mov
adc
inc
loop
es
addr16
xor
fsubs
rclb
out
ljmp
push
inc
jno
add
jl
push
push
adc
fdivrs
movsl
add
xchg
mov
push
dec
xchg
rclb
aad
xor
cmp
into
pop
xor
push
lret
decl
jnp
push
aaa
pusha
pop
sbb
jns
sbbb
imul
jg
dec
pop
nop
or
clc
jbe
add
dec
push
addb
iret
push
fistpll
rorl
inc
mov
in
inc
add
xchg
jbe
and
dec
add
or
push
adcl
daa
push
xchg
sbbl
xor
xor
xor
xor
inc
add
sub
cmpsl
xchg
in
push
pop
mov
aaa
add
ljmp
mov
mov
test
enter
add
add
scas
mov
add
pop
xchg
mov
add
adc
loopne
push
add
and
pop
push
cmova
int
add
fwait
sti
xchg
std
dec
setp
push
add
stos
xchg
testl
out
bound
sub
mov
inc
loope
add
sub
xchg
ss
scas
cmp
jae
jns
and
or
sbb
shlb
outsl
ja
xchg
jg
mov
jmp
push
lods
out
jge
sub
cmpsl
dec
js
add
push
mov
loopne
or
test
fwait
mov
sbb
shlb
sbb
jae
mov
mov
fimuls
mov
add
sub
pushf
adc
add
pop
inc
mov
push
xorb
add
loope
addl
rorb
lods
iret
cld
xchg
inc
adc
inc
push
fstps
stc
add
mov
xor
mov
lret
mov
inc
push
cmp
ss
test
fisttpl
cmpl
jae
repz
insb
ss
jecxz
lahf
lds
jmp
cmp
mov
push
dec
add
divb
cmpsl
enter
add
lahf
cli
imul
cmp
aas
pop
in
cmpsl
xlat
mov
pop
mov
cmpsb
mul
push
call
sub
stos
mov
call
sarl
add
ljmp
scas
ds
jb
push
xlat
nop
fiaddl
jo
fbld
popl
mov
push
sahf
adc
mov
aad
outsl
add
fwait
cmc
testl
lcall
add
sub
xorb
sub
mov
add
cltd
cmp
adcb
mov
clc
test
sub
aas
dec
popa
xorb
xchg
cmp
add
push
or
dec
dec
rolb
das
xor
or
mov
mov
out
sbb
and
cwtl
test
sub
add
fiaddl
mov
sub
sbb
movsb
xchg
add
xchg
cmpsl
cmpb
inc
cmp
push
inc
enter
sbb
adc
push
add
fcompl
add
dec
pop
add
mov
loope
mov
jns
mov
addb
add
lods
popf
jno
adc
sub
and
mov
popl
sti
cmp
nop
test
in
popf
loop
add
and
loop
rcrl
out
call
jae
sub
sbb
in
mov
add
jno
scas
add
inc
xchg
xchg
mov
cltd
sbb
dec
stos
jae
add
mov
cmp
aad
xchg
add
xor
sbb
es
daa
sub
add
imul
or
xchg
inc
jbe
add
lods
push
aaa
shll
imul
pop
aad
sub
push
ljmp
xor
xchg
add
stos
add
shlb
mov
mov
inc
out
inc
mov
push
out
outsl
mov
test
jns
xchg
das
orb
pop
push
divb
add
pop
enter
or
retw
insl
test
xchg
mov
xchg
push
adc
cmp
push
lsl
test
nop
outsb
sar
mov
add
daa
fsubs
dec
cmovb
or
add
mov
outsl
popl
jns
stos
sub
dec
lea
ds
xchg
xchg
mov
sbbl
cld
pop
pop
pop
std
jbe
adc
inc
or
add
xor
or
jmp
sbb
mov
add
sub
addr16
popa
add
jo
mov
pop
aam
push
in
push
and
pop
sbb
js
and
enter
add
or
pusha
decl
in
arpl
cmp
and
inc
xchg
leave
sahf
push
pop
lahf
add
push
inc
mov
xor
push
or
add
jle
inc
mov
or
jns
lret
into
mov
inc
test
push
add
loop
push
addb
inc
fwait
jge
repnz
push
adc
mov
lds
cmpl
xor
cwtl
push
jle
rolb
push
pop
pushf
pop
inc
dec
addr16
arpl
outsb
fwait
sbb
imul
shr
add
adc
sahf
adcl
shrb
jns
lcall
xchg
dec
in
pop
cmpsl
push
add
xchg
test
and
add
das
lea
add
fwait
xchg
jns
les
jno
mov
inc
sbb
mov
or
xor
pop
jbe
rcll
mov
and
aas
stos
xchg
sbb
adc
fidivs
sub
pop
jo
pop
pop
add
lock
push
push
leave
mov
xchg
inc
pop
repz
and
cmpb
mov
adcb
rorl
adc
shlb
or
push
sbb
jns
or
pushf
sbb
mov
ficompl
cs
sarl
pop
andl
add
not
int
js
outsb
in
repz
sbb
mov
sbb
sbbl
int3
into
cmpsb
xchg
popl
fildll
dec
sbb
xlat
dec
cmpsl
add
sbbl
adc
and
mov
add
repnz
jns
xchg
xor
inc
add
xlat
js
mov
pop
mov
pop
pop
sbb
mov
stos
jae
push
add
jne
test
cli
push
push
sub
pop
add
add
std
shll
add
mov
and
pop
sub
dec
pop
mov
test
je
out
fdivs
xchg
iret
sahf
xor
pop
mov
cltd
add
mov
lds
add
jle
popa
pop
sahf
xor
push
out
fs
lcall
ja
test
enter
push
push
pop
addl
mov
mov
adc
rcrb
jns
jp
add
enter
pop
stos
mov
out
addr16
lret
mov
mov
mov
int3
clc
xor
dec
fiaddl
test
sub
pop
mov
add
cltd
fsubs
fsubl
testb
sbbl
mov
hlt
clc
pop
jg
mov
inc
and
fdivl
pop
sbb
lock
mov
addb
sti
test
std
shld
imul
inc
mov
and
pop
outsl
icebp
add
xchg
jmp
pop
adc
push
dec
or
add
in
ret
iret
in
lea
mov
popf
pusha
idivb
push
add
xchg
fwait
movsl
ret
pushf
mov
jg
addb
jbe
pop
and
lret
popf
insl
push
cmp
rclb
ja
out
clc
mov
jnp
mov
icebp
divl
pop
mov
addb
xor
jp
xor
fsubrs
pop
cwtl
cmp
xchg
sbb
leave
add
add
xchg
mov
add
fucomi
mov
mov
pop
adc
in
xchg
add
sub
or
mov
cmp
sysenter
aam
xor
or
ja
mov
add
test
aaa
ss
adc
rorb
or
mov
push
adc
js
xchg
and
xor
cmc
pop
fwait
mov
and
add
mov
xor
dec
add
fstpl
enter
dec
mov
imul
les
add
movb
xchg
int3
rclb
xchg
add
lcall
push
xchg
cmp
push
inc
dec
sbb
push
xor
out
add
fstpt
adc
ja
stc
imul
push
pop
lods
scas
cmpxchg
loopne
adc
lock
pop
call
lods
int3
add
mov
add
sarb
rol
fsubp
cmpsb
add
mov
movl
adcl
xchg
shlb
push
jg
dec
pop
and
in
ljmp
enter
and
movsl
mov
mov
add
fsubs
dec
bnd
cmc
sbb
mov
pop
and
pop
lea
fiadds
cmp
add
aad
add
cmovnp
movsb
inc
sarl
lcall
jnp
enter
sub
out
add
sarb
testb
dec
add
jmp
jecxz
addb
mov
nop
push
and
addr16
lret
sar
or
and
ret
outsl
loopne
cli
add
pop
out
cmpsb
test
add
imul
lahf
mov
add
mov
cmp
pop
jge
add
decb
rolb
mov
pop
jp
daa
sub
mov
xchg
aad
inc
in
in
aaa
add
lods
cmp
pop
cld
das
scas
shrl
inc
loop
add
cld
call
into
push
subb
mov
lods
xchg
mov
and
add
in
mov
mov
ds
les
loopne
cmp
pop
lds
out
push
sbb
iret
and
stos
mov
cmp
sti
pause
ljmp
mov
add
lea
add
jp
sahf
sub
xlat
enter
into
cltd
pop
iret
fisttpll
mov
popa
mov
data16
adc
fbld
int
dec
pop
imul
mov
xchg
sub
enter
mov
add
mov
add
lods
andb
lret
or
loope
add
add
push
inc
test
xor
mov
addb
roll
cli
lcall
pop
add
xchg
mov
pop
cmp
jo
xchg
aaa
loopne
fsub
add
adc
daa
add
addr16
push
add
cmp
mov
pop
fwait
xchg
mov
bswap
adc
outsl
out
daa
sub
add
mov
insl
pushf
cmp
xchg
imull
xchg
adc
add
movsb
cltd
mov
add
insl
mov
pop
xor
add
push
cmpsb
mov
pop
xorl
pop
add
stos
bsr
pop
mov
incl
push
mov
add
mov
mov
dec
pop
sbb
or
mov
add
xchg
add
ret
into
insl
adc
popa
pop
push
or
pop
add
cmp
dec
add
mov
sbbl
pop
popa
add
scas
push
jmp
pop
test
push
fldt
arpl
cmp
xor
cltd
adc
aaa
or
jg
jo
cmpsl
fimull
xchg
mov
add
xchg
out
mov
add
aaa
or
and
outsl
pop
scas
adc
push
sbb
sub
cmp
and
adcb
sbbb
sbb
or
test
gs
xlat
sbb
push
xor
add
f2xm1
pop
add
dec
pop
jp
push
jno
add
inc
popa
sahf
pop
addb
movsl
dec
add
jge
outsl
add
or
add
mov
pop
pop
and
pop
add
or
mov
mov
push
pop
sbb
jno
pop
xchg
les
xlat
fstpt
hlt
lds
pop
popf
sbb
scas
add
mov
cld
mov
mov
in
popa
xchg
xor
pusha
add
mov
pop
add
fcoms
mov
mov
sub
inc
pop
mov
or
add
das
and
xchg
jmp
xor
fiaddl
inc
push
adcl
or
add
arpl
cmp
add
movl
inc
add
pop
mov
movsl
lea
xchg
mov
sti
sub
xchg
cmpsb
pop
scas
popa
andb
adc
jge,pn
gs
inc
jne
or
inc
pop
dec
add
out
sub
sahf
mov
xchg
shll
xlat
out
pop
pop
push
mov
mov
in
js
add
or
pop
push
cmp
xorb
jo
ficomps
xchg
add
and
add
adc
fcoms
movsb
add
clc
sbb
xlat
les
mov
pop
jmp
addb
adc
fs
lods
push
call
cmp
ficompl
push
mov
jmp
add
das
push
cmp
add
pop
xchg
push
cmp
push
fiadds
je
jg
aas
pop
iret
and
cmpsb
pop
cwtl
dec
mov
and
pop
jl
pop
jecxz
in
rolb
xchg
pop
cmc
jb
adc
xor
fildll
cmpsl
lea
jl
mov
inc
mov
add
adc
rorl
into
rcr
out
mov
fs
push
push
push
add
xchg
enter
add
pop
lahf
cmp
mov
dec
aas
add
les
push
push
push
mov
sti
lret
add
xorl
fldl
pop
xchg
bound
adc
aad
sub
mov
adc
enter
and
rclb
push
daa
lea
jno
mov
ljmp
mov
aad
push
add
inc
add
add
add
dec
stc
and
pop
test
stc
outsb
pushf
add
nop
and
xchg
adc
sub
and
xchg
pop
add
pop
pop
popf
cltd
mov
dec
mov
out
adc
test
das
rcrl
enter
adc
add
sbb
or
add
cmpsl
or
push
add
rorl
jg
mov
sti
xorl
and
pop
jl
inc
aaa
pop
or
jp
sbb
mov
inc
out
into
aad
xchg
add
test
push
nop
push
loope
scas
add
mov
sub
push
or
fsubrs
cmp
lods
xchg
dec
dec
jl
add
push
mov
adc
call
je
push
in
aas
add
fcompl
in
call
xchg
and
push
or
pop
pop
cmp
rclb
jmp
and
pop
xchg
mov
or
jl
add
mov
cmp
repz
out
shr
pop
lock
add
push
mov
mov
test
mov
and
mov
repz
mov
xor
add
scas
xlat
push
mov
jg
nop
andb
cmp
add
cmp
or
jl
pop
das
push
dec
roll
add
dec
push
pop
das
xor
mov
adc
fimuls
rcr
jno
jle
stc
rol
add
shll
test
add
out
inc
jns
mov
fwait
ret
cwtl
add
shl
push
loope
lcall
sub
arpl
movb
jle
and
das
pop
loopne
in
add
daa
stos
in
sub
ds
dec
dec
and
loope
jmp
adc
add
rcrl
scas
arpl
add
popa
in
mov
sub
inc
shll
fists
outsl
add
inc
sbb
loopne
adc
xor
xchg
xchg
xor
sub
pop
xchg
pop
xlat
xchg
push
imul
push
cltd
cmpsl
sbb
add
pop
push
adc
fbstp
mov
pop
scas
out
sub
dec
dec
jl
add
jecxz
imul
adc
clc
jg
mov
jmp
xor
dec
pop
mov
add
stos
mov
adc
sub
sub
rolb
push
ja
nop
inc
mov
pop
cmp
test
add
xchg
aad
or
and
xor
sbb
mov
pop
mov
push
mov
dec
lods
mov
pusha
add
push
add
repnz
imul
push
push
add
mov
nop
cltd
xchg
mov
fidivrs
stos
lcall
push
ss
mov
jns
add
xchg
xlat
paddusw
push
sub
push
cmp
xchg
fcoms
ljmp
xchg
insl
mov
push
roll
jnp
fstpl
dec
add
sbb
push
add
incb
add
pop
pop
lods
xlat
shrb
dec
aaa
adc
push
out
arpl
push
addb
imul
or
rorb
or
jg
popa
add
jns
push
mull
nop
and
add
pop
fs
idivb
clc
add
dec
sub
test
icebp
add
push
push
add
lds
daa
das
popa
xchg
repz
add
cwtl
or
aam
sub
pop
aad
sti
mov
les
jno
and
mov
mov
pop
fs
add
lds
add
jecxz
push
lahf
xchg
mov
add
ja
or
jns
loope
mov
xchg
dec
sub
icebp
add
cmp
pop
sub
test
faddl
mov
adc
movsb
sub
leave
cmpsb
sbb
or
lock
sub
shlb
or
and
mov
test
add
stos
or
lock
dec
add
dec
adc
jp
or
adc
sub
mov
push
adc
clc
testl
in
je
push
mov
shll
icebp
cmpsb
and
and
push
and
add
cs
xchg
mov
jae
shll
iret
jmp
adc
inc
jg
repz
xorb
out
addr16
mov
std
mov
mov
push
cli
cmp
or
test
dec
addr16
fnstcw
cmp
leave
rolb
outsb
lods
xchg
enter
add
jmp
frstor
xchg
inc
mov
or
add
lods
sbb
xchg
dec
test
xor
add
negb
add
cld
push
cwtl
sbb
les
int3
ja
pop
js
dec
daa
fs
add
int
and
and
jns
mov
movb
int3
sub
add
mov
adc
cld
cmpsb
loope
stos
cwtl
vunpcklps
push
or
xchg
call
cmp
push
jne
mov
push
inc
pop
aas
add
mov
dec
sarb
xchg
sbb
jne
push
add
rcr
inc
call
mov
insb
jns
add
pop
jno
push
fxsave
mov
jecxz
sahf
mov
xor
cmp
leave
lock
cmp
std
andb
or
add
add
inc
sbb
jle
sub
cs
int3
or
movsb
clc
push
out
jbe
xor
fs
inc
mov
retw
push
test
daa
push
roll
mov
mov
dec
lock
cltd
add
jnp
subb
roll
mov
orl
xor
or
pop
nop
daa
shrb
aam
mov
call
pop
sbb
notl
mov
add
mov
js
and
and
and
mov
into
fistpl
enter
ret
xchg
add
add
pop
sbb
jle
popf
mov
movsl
inc
mov
push
cmpb
add
jle
addr16
cmp
add
iret
imul
push
lcall
xchg
ds
mov
inc
jl
ss
add
push
imul
fwait
cmp
jb
mov
pushl
xchg
adc
or
cmp
icebp
pushf
andl
nop
xchg
push
int3
popa
arpl
and
dec
repz
mov
add
inc
dec
push
enter
in
aas
xor
mov
adc
inc
sbb
arpl
enter
pop
sbb
or
pop
cltd
jb
add
mov
pop
xchg
pop
in
add
daa
add
cmp
mov
add
int
xchg
lahf
test
lea
jns
iret
rorb
dec
lods
add
pop
bound
push
pop
mov
icebp
fwait
sbb
in
adc
movsb
xor
sub
jo
mov
dec
add
stc
fisttpl
add
jne
shlb
lods
jge
or
ss
xor
es
scas
add
cltd
lods
fimuls
lea
test
xchg
imul
repz
xchg
test
in
dec
js
pop
add
xchg
push
bsr
jns
loopne
leave
lahf
mov
and
xlat
outsl
fistpll
stc
add
add
add
test
cld
out
bound
add
adc
or
xchg
dec
fisttpll
add
push
test
pop
popf
ds
xlat
add
test
mov
aaa
inc
fxch
jnp
add
mov
lods
mov
sbb
push
mov
adc
and
mov
popa
add
mov
lds
aas
rolb
loop
sub
mov
sahf
pop
xor
add
pop
push
cmc
roll
add
rcrb
sub
sub
aaa
push
add
pop
jmp
push
xchg
add
movsl
test
sub
hlt
cld
pop
cmova
cmp
cmp
movsb
subl
mov
scas
popf
xchg
mov
add
aas
xlat
add
push
imul
cmp
adc
test
sar
sbb
xchg
mov
ss
jnp
mov
push
fistps
sahf
sbb
js
push
fidivrl
sub
clc
out
ja
mov
fisttps
lret
add
mov
dec
test
les
xchg
xlat
add
add
data16
movsl
ret
pop
fimull
xchg
mov
lea
mov
jecxz
or
out
ljmp
faddl
mov
sbb
lods
mov
mov
and
in
ja
lods
sbb
loopne
lret
sbbb
add
sbb
xor
adc
sbb
push
subl
pop
xchg
add
sub
add
add
movsb
dec
test
filds
aam
jmp
mov
ret
sbb
add
add
adc
ret
dec
data16
idivl
push
adc
pop
ja
add
cmpsl
push
mov
inc
iret
add
mov
cwtl
add
or
filds
es
adc
xchg
sub
add
pop
mov
mov
cmpsb
pop
test
adc
ds
ja
sbb
scas
adc
bound
xor
add
cmpl
and
jne
jns
and
je
cld
push
call
cmpsb
adc
out
push
add
aad
jno
mov
cmc
mov
push
aas
push
ret
icebp
dec
das
add
idivb
inc
and
mov
pop
sahf
push
insb
repz
mov
add
or
iret
ds
stos
addb
or
cltd
into
sbb
into
xchg
xor
addl
leave
add
mov
movsl
add
xchg
push
fwait
dec
jp
dec
pop
bswap
xor
movl
xor
sbb
orl
lret
jb
or
add
sti
and
fldl
daa
or
cmp
add
lods
sbb
in
or
add
mov
jmp
shl
xchg
sub
cmp
pop
test
out
test
stc
imul
xor
hlt
xchg
add
gs
add
jge
push
jae
add
mov
mov
pop
dec
scas
mov
movsb
mov
into
mov
ds
and
mov
push
mov
incb
or
inc
xlat
mov
addr16
add
adc
data16
mov
and
push
rol
add
shrl
sbb
call
push
adc
mov
inc
add
push
test
mov
or
inc
aas
mov
mov
mov
dec
ja
add
pop
sbb
adc
add
mov
lret
xlat
jno
faddl
dec
jmp
test
pop
inc
add
lret
mov
mov
inc
mov
rclb
loope
sub
dec
int
cmp
test
add
and
in
loopne
stos
push
stos
jne
les
push
sub
inc
popa
sarl
fucom
dec
jecxz
loop
mov
bound
fcoms
cmp
dec
fiadds
add
mov
test
les
sub
dec
mov
jnp
xchg
or
push
shll
pushf
push
in
fdivrs
add
nop
sbb
mov
dec
add
imul
shlb
dec
in
mov
add
mov
xchg
iret
add
sahf
cmp
fs
cmp
outsl
add
push
mov
loop
lret
pop
mov
loope
pop
xchg
mov
mov
lds
add
imul
xor
jecxz
aam
or
sysenter
add
sbb
cli
movl
mov
xchg
add
outsl
aaa
add
popa
ja
prefetchnta
xchg
sbb
daa
das
cmp
or
test
xchg
push
and
aad
subl
sub
lods
sahf
mov
pop
jbe
pop
sbb
fstps
bound
jno
mov
lds
test
add
mov
and
pop
rclb
jnp
stos
arpl
enter
add
std
adc
icebp
addl
or
sub
sub
add
adc
pop
or
mov
add
jbe
cmp
ret
jg
jge
out
add
andl
lds
fnstsw
pop
icebp
add
add
pop
add
cld
movsb
aad
pop
pop
rolb
roll
fwait
arpl
mov
mov
jno
mov
stos
mov
push
push
add
xor
inc
xchg
jnp
stos
sbb
mov
imul
pop
ret
push
out
adc
push
push
push
add
imul
jle
addr16
adc
xor
sbbb
das
cmpb
cltd
test
addb
iret
dec
gs
nop
cmp
push
pop
adc
adc
mov
sub
mov
hlt
or
outsb
sub
adc
pusha
popf
dec
or
add
push
mov
mov
add
leave
pop
cmp
jmp
sbb
test
cld
inc
mov
inc
and
push
or
mov
add
in
insb
adc
mov
mov
insb
xor
sub
les
mov
popa
add
rorw
xchg
inc
test
out
push
sbbb
mov
jne
sarb
mov
pushf
mov
inc
mov
dec
pop
sbb
jbe
add
scas
test
push
xchg
test
shlb
adcb
inc
add
add
adc
push
or
add
jb
sbb
lea
jnp
lods
add
sbb
rcrw
int3
add
cmpsb
push
and
pop
dec
std
add
mov
test
adc
add
les
scas
lock
adc
jg
aas
xor
ja
icebp
sub
loopne
mov
insl
and
movsl
sahf
add
dec
inc
mov
jg
sub
sub
add
ds
movsl
sub
mov
adc
inc
jno
cmp
imul
sbb
dec
inc
adc
push
sbb
out
xchg
imul
clc
xchg
sub
loopne
out
loop
add
aaa
arpl
sbb
int
shrb
popl
out
push
push
rolb
mov
mov
and
leave
xchg
outsb
pop
add
mov
fstl
nop
add
bound
sbb
xor
mov
andl
das
mov
mov
in
jecxz
nop
jne
jnp
push
les
dec
pop
mov
add
and
dec
adc
dec
lods
add
std
test
inc
xchg
pop
add
clc
jle
std
add
les
insb
ss
push
add
imul
xchg
add
dec
das
scas
add
dec
add
cmp
add
or
aas
add
add
fs
lcall
push
mov
and
pop
pushf
add
pop
int3
stos
sbb
add
and
std
add
add
sti
gs
and
ljmp
sub
add
sbb
dec
clc
mov
mov
cmp
sbb
xor
cwtl
mov
pop
sbb
arpl
add
aam
adc
xor
rcrb
pop
mov
int3
test
mov
inc
add
movsl
bound
les
adc
cmp
add
or
sub
xor
add
dec
sub
add
sub
mov
test
es
sahf
lods
dec
add
pop
js
add
daa
outsl
add
cmpsl
sbb
sub
adc
lods
rorb
push
add
sahf
and
jo
testb
push
mov
test
cmp
adc
imul
js
jns
add
leave
lret
in
in
call
xor
mov
outsl
mov
dec
flds
xchg
stos
call
push
jle
xchg
xlat
sarb
pusha
in
lods
add
les
iret
or
call
mov
dec
btr
and
add
les
cs
add
test
jne
adc
add
fwait
jnp
cmp
adc
jmp
mov
xor
sub
stos
jecxz
jge
shl
mov
ffreep
icebp
sbb
sub
add
adc
or
add
sbbb
mov
pop
dec
jae
icebp
add
cmp
jg
push
add
mov
sub
fldl
std
push
adc
inc
push
or
roll
pop
out
xchg
stos
sub
push
or
jmp
push
mov
repnz
push
mov
test
int
adc
add
and
out
adc
add
add
fistps
and
or
or
sub
sub
jns
lea
dec
mov
adc
sub
ret
xchg
add
xor
xor
repnz
lock
sbb
dec
add
stos
mov
arpl
mov
or
dec
lahf
lret
nop
jbe
add
push
adc
ud1
push
add
dec
mov
add
in
scas
jle
xchg
inc
add
leave
subb
xchg
cmp
out
jmp
stos
mov
mov
in
insl
aas
call
dec
testl
add
sbbb
or
add
add
js
push
mov
dec
scas
sbb
mov
shrl
jp
sbb
xlat
flds
fcom
sbb
inc
adc
nop
cs
insl
add
add
add
arpl
dec
mov
add
sbb
or
dec
pushf
loope
fadds
mov
push
mov
or
add
xlat
rolb
mov
xchg
inc
das
stc
lock
and
cmpsl
pop
mov
lods
sbb
inc
rcrl
mov
pop
fistpl
add
cli
add
loopne
pop
sbb
and
inc
mov
sub
stos
fdiv
add
mov
and
adc
push
push
xchg
jae
aas
pushf
add
stc
mov
sub
dec
dec
push
popa
sti
std
adc
ljmp
mov
fcomps
addl
or
out
pop
add
mov
jmp
add
add
lcall
xor
std
push
addl
or
cmp
add
js
cmp
push
cld
in
jg
pop
mov
inc
outsl
addb
mov
add
jb
popf
lods
test
data16
mov
pop
mov
ja
add
aaa
mov
pushf
ds
sbb
dec
push
add
cmpsl
xchg
add
inc
and
adc
outsl
rcl
jg
push
add
adc
or
loop
cwtl
pop
aad
leave
push
add
pop
clc
add
ds
or
mov
fwait
cmp
pop
dec
dec
add
addr16
mov
add
sbb
adc
mov
sahf
cmpsl
cld
jge
or
add
std
dec
and
pop
sub
add
cmpsb
std
shll
rorb
sbb
incb
bound
push
and
sbb
sub
shlb
pop
sbb
push
xlat
pop
stos
inc
ss
mov
adc
testb
add
xchg
mov
sbb
sarb
adc
pusha
cmp
mov
xchg
xor
add
ret
or
jne
or
fadds
ret
testb
outsb
mov
jle
add
jmp
pushf
repnz
cmpsl
rorl
into
inc
sbb
mov
xchg
nop
and
sbb
add
lock
lods
test
xchg
mov
shlb
adc
sub
xor
cwtl
aam
dec
jl
paddw
pop
mov
adc
or
jmpw
adc
xor
or
jnp
popa
cmp
cltd
popf
in
add
and
or
fistpl
test
cmp
mov
add
mov
mov
add
jp
sub
pmuludq
iret
xchg
sbbl
push
xor
sub
and
and
cmp
movb
mov
sbb
testl
and
rolb
ja
push
andl
iret
fucomip
repz
dec
rclb
add
pop
stos
shr
repz
mov
loopne
mov
add
fisubrs
fsubr
mov
add
dec
mov
inc
add
adc
add
fildll
ljmp
popf
lret
mov
stos
mov
add
push
test
test
add
iret
cmpsl
mov
fsubrl
xor
pushf
dec
and
add
mov
mov
or
mov
jmp
inc
pop
fwait
leave
loop
mov
lods
pop
test
cltd
lods
inc
sbb
xchg
stos
mov
mov
pop
add
mov
test
dec
mov
sbb
addb
cmpsl
ret
fld1
jb
fwait
or
cmp
xchg
mov
push
sub
sbb
fsubs
mov
stos
mov
pop
fcomps
fadds
mov
sarb
stc
add
fnsave
es
add
mov
lret
enter
add
xor
jl
ljmp
arpl
jmp
inc
ret
call
repnz
xor
ss
sub
outsb
fstps
sub
xchg
fiaddl
roll
scas
add
stc
loope
push
in
lods
sub
or
inc
mov
dec
addr16
jle
test
jns
repz
rorb
insb
sub
add
mov
frstor
push
outsl
mov
insb
test
or
sbb
call
mov
xor
xor
sub
aaa
add
sarl
pop
and
aas
jmp
imul
jmp
add
and
mov
xchg
leave
pop
lahf
mov
add
add
pop
std
xchg
xor
call
lea
mov
pop
or
in
out
pop
push
cmp
jl
bound
add
mov
pop
sub
add
fwait
push
cmpsb
push
cmp
insb
xchg
ret
lahf
std
idivl
loopne
pop
mov
pop
cli
stos
inc
xchg
sub
hlt
pop
imul
inc
orb
xchg
stc
sub
pushf
add
aad
dec
test
jg
sbb
pop
inc
push
add
inc
xchg
pop
sub
add
pop
mov
sti
stos
fildl
shl
or
imul
cmc
das
int3
add
inc
or
inc
push
mov
sbb
loop
stos
jno
daa
movsb
adc
add
pop
lret
cwtl
add
inc
bound
sbb
cwtl
pop
push
xor
sub
leave
add
xchg
cmp
add
pop
cld
pop
adc
dec
dec
add
jg
cmp
push
pop
add
fwait
int
pusha
mov
mov
xlat
aam
test
or
mov
orb
mov
faddl
jno
inc
sbb
and
and
xchg
mov
xor
mov
adc
leave
or
mov
jnp
add
out
mov
mov
mov
stc
mov
sbb
ljmp
add
pop
call
inc
mov
or
lret
popa
xor
or
rclb
test
add
push
addr16
add
dec
mov
add
push
lods
and
mov
nop
out
in
mov
cli
addb
adc
mov
mov
cmp
mov
add
xchg
stc
push
xchg
sarl
or
ret
call
push
add
dec
xchg
rclb
stos
xchg
add
add
test
and
pop
adc
or
daa
push
clc
ret
add
adc
sahf
loope
icebp
jne
sbb
fiadds
jns
cwtl
inc
sub
test
pop
lea
add
dec
inc
test
inc
dec
xchg
add
add
mov
and
adc
pop
pop
dec
adc
rolb
cmpsl
sub
outsl
xchg
nop
inc
inc
pop
std
xor
out
test
push
popf
inc
add
pop
notl
adc
mov
push
and
mov
xchg
cwtl
add
nop
aam
sub
mov
cli
and
adc
jo
push
add
adc
inc
das
nop
sub
xor
jne
add
jnp
in
in
jno
cmp
out
push
add
cmpsl
popa
fildl
lret
mov
pop
mov
test
pop
cmp
les
add
sub
xor
inc
mov
adc
adc
lods
and
psrlw
add
das
xchg
inc
mov
push
sbbl
lret
lahf
add
scas
fldl
leave
add
test
ss
cld
ja
xchg
and
cmp
rolb
fxch
push
scas
xchg
add
inc
test
sub
and
and
lcall
popa
mov
daa
cmpsl
jg
add
mov
add
pop
mov
add
xchg
sti
ja
add
or
test
push
xchg
add
add
movsbl
ret
or
xchg
and
nop
clc
mov
add
mov
pop
inc
add
or
push
add
add
inc
push
leave
out
add
test
scas
mov
mov
sarb
shl
clc
imul
sub
nop
mov
lcall
outsl
popf
mov
popa
push
push
add
or
adc
push
or
rorb
repnz
xor
adc
adc
or
mov
add
mov
add
test
dec
mov
sti
jmp
pop
mov
lock
add
cwtl
stos
sub
jb
xchg
enter
dec
jno
add
mov
movsb
lret
adc
add
add
cmp
fbld
imul
lods
out
hlt
les
mov
arpl
inc
inc
mov
andb
cmp
sbb
adc
test
stos
mov
and
pop
cmc
testb
call
or
rcrb
sbb
inc
push
loopne
les
or
add
aaa
add
insl
loopne
cmp
mov
jne
jae
or
stc
scas
jne
add
sub
mov
jle
enter
sbb
inc
mov
sub
push
mov
mov
mov
out
inc
dec
and
mov
popf
add
aaa
imul
cwtl
dec
pop
pop
out
mov
xchg
add
xchg
cmp
test
mov
xchg
inc
mov
icebp
xor
in
out
mov
xchg
add
sbb
aad
in
cmp
int3
cltd
add
xchg
add
push
xor
rcrb
mov
adc
das
fnstenv
dec
inc
add
sub
sub
in
in
mov
cmp
les
or
sub
bound
xlat
testb
xchg
jb
stos
xchg
movb
and
ret
mov
and
pushf
sub
lods
dec
inc
sbb
jge
aad
enter
jmp
daa
es
cmpsl
add
loope
inc
push
fcomi
add
dec
rorl
xchg
mov
cmpb
ret
pop
xchg
sbb
test
mov
sbb
nop
call
add
add
mov
mov
and
mov
sub
cmp
adc
and
inc
inc
add
dec
dec
push
pusha
xchg
lods
add
stc
cltd
mov
lea
xchg
test
push
sbbb
inc
movsl
push
push
push
or
cltd
mov
dec
adc
inc
jp
push
testb
sub
test
add
stos
das
push
js
jge
lahf
dec
add
or
test
cmp
push
add
or
adc
aaa
insl
mov
mov
inc
cmp
pushf
enter
adc
sbb
push
aam
addr16
cmp
cmc
dec
outsb
sti
add
jne
je
hlt
xchg
pop
mov
push
pusha
mov
das
rorb
loop
push
test
in
add
mov
add
outsl
mov
jg
pop
inc
icebp
ret
jnp
mov
add
movsl
adc
cmp
xchg
leave
sub
popf
popa
add
sbb
inc
ss
loopne
pop
xchg
pop
mov
nop
cmpsb
xorl
sub
popa
pop
dec
add
stos
cwtl
call
popf
enter
nop
mov
xor
adc
sub
push
inc
add
popf
mov
jno
push
test
inc
add
or
in
add
and
aam
add
lcall
adc
ja
add
gs
mov
in
adc
cs
sbb
mov
mov
mov
mov
xchg
int
in
add
add
test
mov
jnp
movb
pop
or
sbb
or
dec
add
add
or
lods
js
adc
adc
mov
scas
sahf
fcoml
mov
mov
mov
aam
mov
mov
dec
xor
sub
fucom
call
imul
rclb
test
insb
adc
ret
fucomi
add
inc
inc
hlt
cs
roll
clc
lahf
enter
bound
or
add
xchg
lret
aas
insl
clc
movsl
jno
mov
mov
and
mov
cmp
mov
sti
fisubs
in
sub
add
sub
stos
sub
xchg
adc
roll
cmp
push
dec
cmp
add
insl
mov
mov
jbe
cs
gs
mov
mov
aaa
leave
cwtl
jo
dec
cmpsl
repz
inc
es
adcb
push
add
roll
xchg
roll
mov
xchg
adc
shlb
xchg
ds
adc
or
sub
mulb
and
repz
or
add
jp
pusha
pop
in
cmp
add
and
adc
mov
cltd
mov
add
mov
mov
jns
inc
pushf
adc
adc
aad
add
dec
push
pop
jae
dec
xor
add
int
sbb
inc
adc
add
sbb
inc
je
sahf
sti
and
push
inc
gs
fmuls
xchg
inc
add
mov
and
add
test
add
cmp
inc
adc
sub
int
xor
dec
mov
add
rclb
dec
lods
or
add
push
push
data16
cmc
repnz
out
mov
adc
push
outsb
xor
push
add
repz
add
jle,pn
adc
push
mov
outsb
inc
and
faddl
rorl
outsl
add
or
rorb
rolb
or
xchg
jbe
push
push
mov
rcrb
pop
dec
mov
int3
xchg
adc
punpcklbw
and
and
pusha
fstpl
adc
hlt
inc
or
or
addps
aad
lock
cs
add
mov
mov
xchg
add
xlat
pushw
inc
mov
cmpsl
cmp
std
subl
in
cwtl
cmp
rolb
add
imul
cmpsb
cwtl
cmp
mov
adc
and
add
testl
xor
dec
mov
jecxz
adc
push
adc
adc
adc
add
mov
add
das
rcll
cmp
out
rorb
test
add
lods
push
adc
push
xchg
sub
lea
and
pop
pushf
ret
push
psubusb
lret
ja
push
sub
or
idiv
cmp
add
cmp
outsl
shlb
pop
add
aam
add
lret
leave
enter
lock
repz
sbb
ds
mov
cmpsw
cmp
mov
push
xchg
add
lahf
and
and
or
inc
mov
ret
push
add
arpl
jl
pop
dec
mov
je
bound
or
xor
icebp
xchg
ljmp
pop
pop
out
pop
shll
push
sub
ret
dec
push
jecxz
jbe
jb
inc
shlb
cmp
ds
and
mov
jne
fadds
fdivr
sub
mov
mov
push
add
notl
pop
mov
test
lods
adc
jge
add
sbb
add
int
inc
pop
incl
or
sbb
cltd
adc
daa
mov
pop
mov
add
or
mov
test
mov
aam
push
daa
cmpsl
movsl
sbb
cld
test
jns
or
int3
add
inc
lock
inc
pusha
mov
out
mov
cmc
sbb
fadds
cmpsb
test
mov
fdivrs
adc
pushf
sub
mov
lock
add
jp
mov
call
rorl
pop
add
lcall
xchg
cmp
and
push
loope
sub
and
shll
push
pop
dec
aam
ret
sub
and
ret
fdivl
outsl
add
jecxz
in
insb
testb
test
pop
adc
jo
mov
dec
add
and
pop
sbb
adc
and
mov
pop
jns
push
mov
enter
mov
xchg
add
dec
sbb
pusha
mov
pop
lods
or
lods
insl
les
cmp
fsubrs
out
jmp
out
ja
push
mov
add
in
movsl
push
xchg
call
cmc
ljmp
xchg
mov
pop
mov
add
aaa
jbe
aas
lret
sub
jle
pop
sahf
sti
adc
ds
jne
jp
inc
cwtl
add
xor
xchg
lods
stos
bound
adc
int3
ljmp
jl
add
jnp
add
leave
add
mov
addr16
cmpsb
fbstp
in
add
mull
xor
adc
push
movsb
push
add
add
stos
fists
xchg
cmpsl
mov
dec
leave
inc
pusha
and
add
push
jno
add
push
lea
xchg
mov
faddl
les
and
adc
mov
add
fiadds
xchg
sbb
add
push
sti
dec
dec
and
faddl
scas
mov
sub
adc
push
push
lods
mov
loopne
imul
pop
add
test
bound
adc
lods
push
roll
icebp
mov
push
sbb
adc
cmp
cltd
mov
dec
mov
cmp
and
inc
cs
cmp
add
dec
leave
push
add
mov
ja
xor
in
nop
pop
lea
add
push
inc
push
pop
jl
add
out
daa
add
jae
add
data16
add
adc
stos
sbb
xlat
nop
xor
mov
sub
push
add
ja
ds
jmp
add
cmp
mov
pusha
jp
sub
add
int
repnz
pop
rolb
jecxz
adc
mov
sub
xchg
mov
inc
sub
lahf
mov
push
add
or
add
push
mov
out
faddl
aaa
pop
xchg
rcrb
scas
add
js
push
cmpsb
cli
fsubrs
sbb
ret
or
sbb
and
out
loopne
dec
cmp
test
sbb
add
and
es
daa
cwtl
repz
test
mov
mov
or
fsubl
mov
adc
mov
cmp
or
add
rcrb
sbb
push
sub
daa
cli
out
pop
cmpsl
sub
aas
pop
xchg
out
ljmp
gs
int3
cltd
jecxz
and
or
fildl
adc
mov
ficomps
mov
mov
scas
mov
and
jno
pusha
icebp
cld
cmp
and
dec
add
add
dec
and
cmp
sub
incb
loopne
jecxz
mov
mov
enter
mov
nop
lock
test
aaa
sub
filds
add
clc
cmp
or
add
sbbl
pop
mov
adc
enter
pop
cmp
xchg
jle
pop
sub
push
enter
fiaddl
sub
add
mov
add
cmp
insb
xchg
int
pusha
add
and
cmc
cltd
add
or
clc
orb
adc
add
adc
sub
pop
fchs
iret
aad
add
test
add
cmp
mov
mov
fucom
or
lods
pop
icebp
cmpsb
das
or
and
push
add
fmull
lds
testb
push
adc
mov
out
jbe
mov
test
imul
fnsave
add
jne
push
jmp
xorl
outsl
mov
aam
jle
add
add
hlt
add
movsb
and
adc
test
lods
xchg
js
stc
add
or
adc
sbb
xchg
add
add
and
push
mov
sub
fsts
mov
jno
mov
in
aam
jo
cmp
mov
cmpsb
outsl
xor
cld
add
mov
pop
arpl
jmp
incl
rclb
fcomi
out
xor
jbe
pop
hlt
xor
add
cmpb
loope
add
adcl
cmp
xorb
add
leave
xchg
das
add
xchg
add
js
pop
cmovnp
push
push
add
cmp
lods
jge
or
rclb
adc
mov
or
inc
jb
iret
cld
popl
jle
push
imul
xor
and
xchg
cmpsl
test
lret
idiv
fisttps
addr16
add
inc
repnz
addb
jns
sub
roll
mov
mov
jbe
sub
shll
push
repz
mov
ficomps
loop
or
cld
add
sbb
inc
dec
test
xchg
mov
push
sub
outsl
dec
add
add
push
and
sbb
pop
pop
aaa
in
imul
pusha
sahf
nop
aas
mov
add
iret
popf
insb
sub
xchg
add
mov
push
cmovb
iret
add
cs
outsl
add
xor
je
jns
mov
adc
mov
dec
adcl
push
or
xchg
inc
std
clc
sub
pop
fdivs
xor
jg
std
or
add
cld
add
enter
js
cmp
divb
add
push
sub
rcl
stos
cs
in
adc
add
and
jo
mov
mov
add
ss
inc
cmp
sub
mov
sbb
ljmp
loope
cmp
or
mov
sbb
inc
aam
loopne
je
fstpl
jecxz
adc
mov
cld
shlb
cmp
mov
sub
out
inc
or
push
pop
jno
add
mov
inc
pop
mov
dec
test
mov
jmp
add
out
scas
jbe
pop
add
add
cwtl
add
push
mov
add
inc
adc
loope
scas
jno
mov
adc
cmp
ljmp
popa
aas
adc
shll
mov
and
adc
lods
add
pop
out
fldcw
inc
dec
mov
std
add
incb
bound
mov
or
cmpsl
fadds
aad
inc
pushf
mov
mov
out
data16
leave
in
jno
cmp
iret
imul
add
mov
dec
int
push
sub
xlat
mov
or
add
subl
out
mov
mov
fisttps
pop
in
ss
movsl
jg
mov
adc
or
cli
and
mov
outsb
enter
data16
arpl
xor
adc
add
lock
jae
sub
int3
add
jb
add
or
add
and
cli
mov
pusha
cs
scas
xor
push
lcall
int
sarb
pop
pop
je
fsubrl
and
push
adc
js
mov
adc
rolb
add
es
iret
jbe
or
loopne
jmp
push
add
dec
xchg
scas
sbb
inc
ret
movsb
adc
lods
stc
pop
cmp
or
push
outsl
mov
testl
lods
outsl
repz
add
adc
inc
faddl
bound
adc
cmp
adc
imul
pop
add
lea
fstpl
sub
pusha
sub
cmpsl
incb
es
and
and
lock
in
add
dec
das
shl
add
sbb
test
loopne
lods
add
mov
scas
push
int3
add
mov
mov
cmp
mov
push
xor
adc
adc
add
mov
inc
movb
es
xchg
or
xor
xchg
xor
push
out
repnz
daa
lret
sets
xor
jae
outsb
sbb
sbb
mov
sub
cmc
xchg
push
pusha
shlb
xchg
mov
add
movsl
sbb
inc
pusha
sarl
push
pop
roll
mov
push
add
or
out
and
adc
int
lds
lods
xor
cmp
adc
andl
cmpb
and
test
jecxz
fsubr
fiadds
les
adc
rol
sti
es
outsl
add
sub
add
add
test
add
sub
ror
mov
adc
xchg
ret
enter
adc
testl
hlt
jne
push
add
lcall
fidivrl
sub
dec
sahf
add
xchg
mov
inc
pop
add
sbb
cs
push
sbb
xorb
dec
lret
cmp
adc
out
popa
add
adc
sub
in
add
xor
cmpsl
pop
add
xor
das
adc
clc
add
add
test
mov
xchg
add
jnp
enter
mov
mov
add
add
nop
mov
jae
imul
or
jae
xor
nop
sub
sub
ja
add
add
mov
and
stc
outsb
add
sub
cmp
fwait
pop
popa
aad
rcll
or
add
xchg
gs
mov
loope
dec
test
sbb
and
mov
jns
daa
xchg
push
or
imull
sub
xor
xchg
or
sbb
shr
das
mov
out
mov
xchg
push
add
in
aad
xchg
jno
nop
mov
cwtl
pop
or
jg
sbb
aaa
scas
mov
sbb
jg
pop
test
xchg
mov
inc
or
out
and
add
adc
ficoms
add
xor
stc
mov
les
add
sub
and
mov
or
lods
push
add
mov
lods
dec
push
fwait
in
add
and
mov
popa
repz
ds
adc
mov
pusha
out
adc
jl
inc
sti
mov
mov
cltd
cmp
stos
in
xor
cmpsb
popf
add
sti
adc
add
adc
and
pop
flds
add
andl
dec
cmpsb
fcmovnb
add
arpl
cwtl
jno
insb
repnz
add
enter
or
mov
inc
and
iret
pop
and
jl
pop
lods
into
xor
mov
or
inc
rcl
rcr
add
dec
test
into
popa
pop
adc
lods
ficoms
jns
inc
mov
jns
cmp
inc
pop
mov
sti
roll
filds
cwtl
add
test
sbbb
mov
nop
add
xor
stos
xor
jmp
lods
sub
movsb
loopne
ljmp
or
xlat
dec
pushl
add
or
xlat
mov
mov
add
shr
adc
cmpl
pop
add
lea
add
cwtl
or
pop
dec
int3
add
mov
push
outsl
add
fisubs
out
and
and
fcomps
pop
add
xor
add
adc
or
xor
jb,pn
or
mov
mov
adc
stc
push
and
adc
push
in
outsb
or
mov
outsl
call
push
daa
mov
mov
mov
cmp
mov
and
scas
push
add
fucomip
daa
pop
js
out
cwtl
sbb
stos
lahf
data16
add
std
and
dec
push
les
cmp
lods
add
addr16
cmp
sub
ror
inc
mov
add
mov
add
lock
add
xlat
repz
mov
xor
inc
mov
fstpl
sarb
jg
cwtl
add
sbb
mov
daa
dec
dec
push
add
jmp
cmp
add
xchg
adc
sbb
adc
sub
mov
add
cwtl
adcl
mov
jle
fidivl
lcall
scas
jnp
add
dec
fisttps
pop
dec
and
inc
add
adc
sub
inc
mov
test
mov
inc
adc
and
push
lds
mov
ja
jnp
mov
sarb
insb
inc
xor
mov
and
and
adc
xor
add
add
jg
add
testl
sbb
add
and
adc
data16
cs
test
or
mov
push
add
icebp
loopne
pop
int
add
cmp
add
je
sarb
je
xchg
sub
pop
js
inc
out
and
ss
mov
mov
push
add
inc
and
pop
mov
dec
out
daa
inc
jne
add
lret
rcrl
sub
cwtl
mov
cwtl
add
inc
push
mov
sbb
add
ficoml
or
and
pop
lahf
xor
push
or
dec
fiaddl
or
add
rcll
add
adc
out
fwait
mov
data16
clc
lahf
or
sub
add
pop
sbb
add
adc
test
mov
sub
and
cwtl
add
test
mov
in
xchg
push
fwait
addb
add
and
add
scas
jo
or
js
stc
or
cwtl
push
std
ja
add
or
pusha
aas
bound
lcall
adc
lods
add
sbb
mov
push
and
cmp
inc
pusha
mov
push
scas
add
mov
mov
add
push
repz
mov
popa
aam
in
dec
int3
mov
adc
adc
jmp
mov
pop
xor
roll
fsubs
add
in
xor
pop
add
xchg
mov
push
xchg
fildl
mov
add
int3
std
sub
xchg
or
pop
jl
ret
repz
aaa
jb
sarb
out
int
in
adc
mov
add
xchg
roll
cmp
jne
mov
mov
add
and
add
aas
imul
dec
cwtl
pop
mov
test
dec
xor
lods
in
sbb
mov
orb
add
insb
sub
jl
pop
mov
testb
jle
xchg
adc
sub
add
mov
pop
pusha
xchg
ss
xor
adc
es
mov
add
stos
cs
xor
push
or
test
ret
push
mov
cwtl
add
test
xchg
pop
adc
cltd
loope
and
add
push
and
mov
add
add
add
adc
xlat
stc
cltd
in
cmpsl
mov
icebp
cmpsb
and
pop
adc
lods
sbb
ret
mov
adc
lods
or
lret
or
pop
pop
cmp
xorb
mov
pop
add
addr16
add
cmpsl
adc
out
xor
mov
inc
cld
shrb
add
pop
xchg
mov
fdivrl
fwait
adc
mov
je
xchg
or
xlat
in
mov
lods
and
add
cmp
mov
in
xchg
and
nop
dec
lret
enter
cs
or
cwtl
xor
add
inc
jge
sub
ds
das
push
mov
bound
add
add
inc
mov
add
dec
push
and
pop
mov
mov
sbb
push
mov
or
pusha
fcmovbe
pop
add
cwtl
je
mov
je
add
mov
inc
dec
popf
sub
mov
and
sahf
leave
dec
push
out
xchg
push
pop
sbb
xchg
sub
add
inc
inc
into
mov
jg
add
pop
mov
mov
mov
sbb
inc
sahf
and
daa
jnp
mov
sbb
cmp
sarb
dec
xchg
jno
add
inc
dec
jle
out
lods
jne
add
pop
std
adc
out
and
cmp
lcall
enter
add
mov
xchg
push
dec
stc
mov
icebp
inc
gs
cmp
add
imul
jle
les
xor
xchg
and
dec
mov
add
orb
add
outsb
xor
and
add
mov
inc
add
mov
scas
add
sbb
movb
lock
cmpsb
enter
movsb
pop
push
imul
std
add
add
lea
mov
add
or
jmp
loopne
push
sub
add
or
lock
ret
sti
add
xor
decb
test
mov
in
mov
mulb
xor
sbb
jp
add
out
es
stc
add
pop
lods
mov
xchg
fdiv
add
je
rcll
and
repz
mov
push
adc
sub
add
jle
cmp
fwait
mov
or
cmp
mov
aad
ds
add
push
mov
add
sbb
pop
dec
add
test
or
pop
cwtl
add
inc
test
mov
and
test
lods
or
add
test
aaa
test
shlb
pop
pop
das
add
stos
dec
push
dec
jg
add
or
test
or
add
adcl
sub
xor
daa
out
jo
push
add
pop
sub
sbb
data16
pop
or
add
inc
cmp
lods
add
add
rorb
imul
fcomps
adc
rclb
test
or
mov
sbb
inc
push
mov
sub
or
mov
mov
and
or
pusha
ja
jo
inc
cmpsb
loopne
pop
inc
sub
adc
stc
in
mov
add
lahf
cs
cli
bound
lret
or
lret
cmpsb
aad
imul
push
or
mov
dec
add
les
pop
scas
lahf
dec
rcll
mov
pop
fstpt
cmp
mov
push
add
cli
out
outsb
pop
popa
call
add
xor
inc
and
std
xor
nop
mov
or
lods
adc
xchg
cmpsb
xor
ret
and
dec
in
fiadds
shl
pop
inc
addb
out
xchg
pop
faddl
jg
mov
jecxz
das
mov
cmp
pop
add
dec
and
jge
dec
add
add
test
mov
cli
xchg
daa
sub
jle
les
daa
adc
fs
pop
daa
or
push
add
lcall
hlt
push
in
add
mov
mov
jb
shl
in
xchg
cmc
ret
test
lcall
jg
test
roll
lret
mov
pop
mov
je
jge
sub
out
add
aaa
popf
daa
mov
push
loop
add
mov
das
mov
lahf
inc
roll
inc
mov
push
fiadds
cmp
and
push
pop
pop
sbb
xchg
mov
shlb
lods
js
xor
cmp
cmp
stos
add
fsts
jbe
dec
imul
and
xchg
and
pop
mov
add
xchg
add
add
mov
pop
mov
mov
jae
aad
push
add
push
cmpsl
mov
inc
decb
and
adc
or
pop
adc
add
add
pushf
lcall
jne
mov
or
mov
cmp
push
cmpsl
cld
add
pop
lret
push
mov
add
repz
jecxz
adc
xchg
adc
pop
jns
or
push
aas
out
adc
lods
adc
cmpl
adcl
enter
add
rclb
sub
xor
cltd
and
stc
or
mov
push
and
test
pop
ja
orl
mov
sbb
xorb
and
pop
adc
add
cwtl
mov
cmp
xor
dec
mov
aaa
rorl
iret
sbb
sub
mov
push
pop
sub
bound
jo
jl
rcrb
inc
pop
mov
adc
push
adc
mov
mov
mov
push
mov
and
and
and
add
mov
stos
dec
push
test
lret
add
imul
daa
mov
push
push
sahf
test
add
mov
jmp
add
aaa
or
mov
or
lret
sbb
adc
ret
sti
rclb
fimull
pop
cmp
jns
xchg
into
inc
roll
jge
cmp
jmp
sbb
xchg
fucomip
movsb
add
mov
add
rcll
ret
div
sub
pop
inc
add
and
jo
pusha
sub
adc
clc
loope
push
icebp
mov
inc
popf
in
add
and
roll
mov
add
mov
lret
inc
xchg
nop
jbe
test
mov
adc
in
add
cmp
stos
lods
insl
push
cmp
jg
jo
dec
mov
cwtl
add
cmpsl
mov
aad
pop
xchg
add
adc
mov
outsb
ret
push
mov
add
push
repz
outsb
es
data16
ds
andl
mov
sub
add
or
and
pop
xchg
pop
push
mov
adc
adc
xchg
sahf
mov
aaa
xchg
enter
add
jp
jbe
or
movsb
pushf
hlt
sub
inc
sbb
pop
cli
bound
xchg
in
sub
inc
stc
mov
lahf
pop
add
push
push
cmp
fldl
imul
pop
fmuls
mov
cs
dec
or
int3
add
adc
add
push
add
and
out
or
loop
inc
mov
adc
or
mov
add
add
ret
sub
in
add
xchg
inc
pusha
cmp
stc
sub
pop
les
xlat
test
sarb
add
sub
mov
inc
xchg
mov
add
push
sbb
add
adc
or
ds
out
and
in
and
cmpsb
pop
sub
pop
pop
repz
arpl
or
test
loopne
sbb
dec
mov
or
mov
jg
popa
mov
jne
xor
popa
mov
dec
cmpsl
or
xor
add
add
jle
ss
fisubs
add
out
insl
and
stos
pop
xchg
dec
add
les
and
out
mov
lret
mov
cwtl
add
test
imul
or
add
ds
jnp
mov
sbbl
nop
js
fldenv
dec
mov
and
xchg
adc
cwtl
add
in
adc
push
imul
test
add
and
jo
and
cmp
rclb
fldt
fidivrs
push
ja
jmp
jno
mov
pushf
mov
adc
add
fwait
inc
adcl
push
jns
bts
cmpsb
fsts
add
adc
mov
jnp
shrb
and
pop
pushf
jo
mov
icebp
add
cmp
testb
adc
and
mov
or
sbb
dec
test
add
mov
jno
imul
pop
rcr
xchg
pushf
test
cltd
cwtl
add
scas
rorb
pop
out
loop
add
pop
sbb
pop
jmp
std
jnp
add
testl
lods
dec
xchg
mov
adc
xlat
adc
add
lock
notb
imul
int
add
jbe
adc
loop
xchg
pop
and
add
mov
and
pop
xchg
or
inc
mov
and
and
add
push
pop
lds
mov
mov
mov
cmp
arpl
adc
jle
shufps
cmpsl
sbb
mov
mov
stos
pop
dec
mov
jp
add
int
mov
insb
fmull
inc
hlt
movsb
sbb
add
jno
inc
mov
cld
faddl
and
xor
or
add
pop
mov
into
ret
xchg
add
inc
imul
dec
sub
add
ss
xor
lods
xor
int3
sbb
ds
fisubrs
data16
mov
and
fstpl
and
adcl
sti
cmpsl
add
data16
stos
xor
mov
inc
add
mov
push
pop
jns
mov
inc
inc
sub
jecxz
sbb
nop
mov
pop
add
mov
out
add
inc
and
daa
push
cwtl
pop
and
testb
cmp
and
adc
push
mov
push
stc
fiadds
iret
cwtl
sbbb
rcrb
dec
mov
clc
add
pushf
pushf
cmp
lahf
insb
add
and
pop
push
mov
inc
mov
mov
das
sub
pop
add
aas
jp
or
pop
add
cmp
dec
mov
rclb
push
mov
icebp
and
in
roll
leave
lock
dec
inc
mov
in
or
push
dec
push
jg
add
and
push
add
xor
negl
lea
mov
mov
mov
int
adc
imul
adc
add
je
sub
add
xor
fstps
fsubs
mov
pop
or
js
cmc
insb
add
and
repz
ss
mov
test
cmpsb
loopne
shrl
xor
add
in
add
inc
inc
mov
add
imul
jne
add
cmp
mov
les
aaa
xlat
push
pop
sbb
mov
xor
fildll
xchg
cmp
iret
lcall
movsb
sahf
loop
push
mov
sub
add
push
sub
jge
mov
scas
pop
push
xchg
mov
jbe
and
ja
push
jno
das
adc
les
pop
xlat
cmp
adc
mov
cmpsb
in
iret
fnstsw
test
adc
mov
js
mov
aas
dec
add
je
push
cwtl
add
jle
ja
jp
mov
lock
add
cmc
faddl
in
pop
and
je
push
aas
les
mov
xchg
xorl
iret
xchg
in
push
lods
aaa
or
mov
in
add
int3
pushf
jo
mov
pop
add
int
pushf
lods
mov
filds
call
add
pop
js
jp
ja
add
mov
ret
and
mov
mov
movsb
sub
lock
jecxz
xor
negl
loopne
cmp
aas
adc
sbbb
testb
divl
adc
bound
xchg
adc
xchg
xlat
sub
mov
xor
lahf
shrb
add
lret
fmuls
pop
pop
sub
mov
and
cmpsb
aam
aas
push
jmp
adc
stc
add
xorb
push
add
lret
add
sbb
push
sbb
add
add
xor
or
in
aas
add
push
add
loop
fsubs
fnstcw
mov
mov
cld
add
testb
lahf
dec
xchg
imul
xchg
movsb
push
cmc
sahf
xor
std
add
fbstp
add
xorl
lret
mov
add
mov
pop
inc
test
call
je
inc
and
mov
add
js
xchg
sbb
les
and
push
cld
lods
jb
je
add
push
jnp
add
test
cld
adc
fisubrs
lods
add
adc
mov
mov
imul
pop
sub
push
cld
push
add
lret
mov
ret
sbb
ret
and
cmp
addb
sub
jnp
push
push
xor
push
push
fcmovnu
or
pop
std
mov
nop
or
add
or
pop
pop
push
pushf
cmp
test
or
mov
add
jns
hlt
add
divb
iret
out
and
add
push
sbbb
outsb
jne
add
rol
xlat
cmp
data16
out
add
and
iret
mov
mov
add
jmp
aaa
push
add
out
and
cmp
add
lcall
scas
and
or
mov
cmp
popf
xor
mov
xchg
add
mov
shlb
dec
fiaddl
xchg
or
add
push
hlt
push
ja
jmp
imul
andb
lock
dec
inc
add
orl
imul
aam
test
push
jmp
add
mov
sti
insl
add
aaa
add
sub
fiaddl
xchg
inc
std
add
mov
mov
add
mov
xor
jo
adc
fwait
add
pop
or
xchg
loope
movsb
sub
jae
stos
mov
ret
add
push
add
sub
xor
jnp
add
mov
dec
ja
fwait
nop
out
popf
insb
add
sbb
jg
mov
cmp
pop
or
jecxz
add
out
jb
rorb
les
xor
loopne
cwtl
test
inc
jmp
cmpsb
pmulhuw
pusha
sub
lcall
add
daa
or
lea
aad
jo
add
dec
pop
mov
push
movb
fidivrl
xlat
out
imul
lds
jne
bound
sub
pop
std
xchg
mov
popa
mov
mov
lds
adc
or
xor
mov
cmp
pop
add
pop
popf
xchg
hlt
mov
mov
cmpsl
pop
lcall
sub
add
xor
cmp
inc
scas
out
mov
adc
les
inc
cmp
lods
out
in
pop
scas
cmp
xchg
mov
aad
fwait
and
mov
popa
jl,pt
adc
ret
sbb
push
add
mov
ja
add
cltd
add
out
stos
add
imul
call
dec
add
dec
mov
movsl
add
jl
push
or
xorb
mov
loope
adc
dec
call
mov
and
add
cli
js
mov
adc
add
popf
test
je
mov
pop
jbe
add
ret
add
std
cmpsb
sbb
int3
push
ds
xlat
iret
loop
mov
pop
add
sbb
cmpsl
rol
cltd
pop
add
in
jp
add
test
jecxz
pop
addb
add
sub
sub
les
lahf
addb
sub
ret
sbb
addb
sub
test
add
mov
mov
xchg
out
add
lret
mov
ficomps
add
xchg
movlps
push
add
shlb
das
adc
roll
mov
mov
sub
push
cmp
adcb
rorl
sub
xor
add
mov
pop
test
leave
jbe
out
pop
rol
arpl
in
add
insb
push
fldl
nop
inc
xorl
test
std
add
daa
scas
jl
test
dec
scas
add
cli
jo
rorl
mov
add
loopne
lods
gs
in
pusha
int
stc
pushf
sti
add
int3
jo
add
and
mov
dec
je
mov
mov
and
outsl
out
cmp
jae,pt
imul
inc
sub
scas
xor
xor
shll
xor
sar
add
push
loopne
call
inc
adc
sub
lcall
add
in
stos
pop
movsb
xlat
mov
mov
adcb
xchg
jmp
fwait
scas
mov
movl
insl
mov
jg
add
add
xor
add
mov
jmp
sbb
pop
addr16
push
sbb
add
loopne
cwtl
mov
and
scas
xor
lea
enter
xchg
popa
loopne
sahf
xor
adc
push
mov
sub
add
dec
lock
and
mov
adc
addb
jo
lcall
add
or
fists
adc
jbe
fs
mov
insb
xchg
lock
add
mov
inc
subl
xchg
sbb
icebp
add
add
and
mov
out
or
cli
push
mov
cmpsl
mov
mov
jnp
mov
scas
jge
add
jae
sbb
fsubrl
sti
imul
mov
int3
push
xchg
push
push
clc
testb
outsl
into
mov
dec
lds
mov
sub
add
push
xchg
nop
aad
outsb
insl
add
dec
notl
add
and
repz
sbb
rol
pop
sub
mov
xor
xor
add
dec
mov
dec
inc
enter
push
addb
clc
add
fwait
into
inc
mov
mov
add
les
rcll
sar
add
call
lahf
push
xchg
lcall
mov
and
std
out
ror
sbb
add
push
xor
add
push
test
jle
icebp
add
sub
sbb
mov
lret
add
pop
and
cmc
lea
mov
push
clc
lret
iret
xor
repnz
addr16
jle
add
int3
and
push
xchg
cld
fwait
sbb
pop
int
cmpsb
add
pop
mov
inc
lock
xchg
in
sbb
lods
sub
add
adc
add
cmp
jle
xor
pop
mov
xchg
mov
leave
jge
dec
hlt
sub
fyl2x
rol
popf
repz
test
push
loopne
and
xlat
jae
subl
sub
pusha
repnz
repz
int
jmp
add
in
aam
sub
add
sti
push
ja
cs
inc
push
push
add
xchg
mov
inc
mov
inc
push
into
out
sub
add
inc
pop
mov
aad
adc
add
daa
xchg
jb
pop
pusha
add
arpl
xchg
cmove
movsb
adc
in
mov
inc
ds
sarb
std
rorb
faddl
cmp
push
pop
pop
sub
add
aam
cmpsb
add
and
push
testb
push
frstor
addl
or
adc
pop
pop
fs
test
cmp
mov
pop
insl
mov
add
sbb
mov
add
inc
mov
and
imul
add
cmp
pushf
idivl
xorl
fsts
roll
add
hlt
imul
jl
add
cmpsl
jo
add
lea
dec
js
fs
out
xor
mov
xchg
add
push
lret
jmp
add
movsl
dec
inc
stos
fcmovnu
push
adc
sub
int3
in
inc
xor
adc
add
orb
lods
fstpt
aad
fisubrs
and
xchg
push
loope
nop
ds
mov
mov
sbb
ja
and
arpl
jo
repnz
add
sub
int3
fxch
add
xor
fsubrs
inc
add
mov
ja
cltd
push
fadd
jbe
in
psrlq
mov
jns
test
mov
outsl
popa
fisttps
lods
add
mov
and
inc
repnz
add
jmp
xor
es
dec
inc
jae,pt
fidivrl
daa
cwtl
clc
xchg
jg
sbb
repz
jp
data16
adc
add
xor
pop
and
inc
cld
add
in
pop
jne
add
test
or
lods
ja
out
jmp
xlat
mov
sbb
push
js
add
push
jo
pusha
add
xor
fnstsw
popf
icebp
add
in
shl
add
lcall
xchg
mov
pop
push
push
mov
jae
sti
fadds
lret
test
pop
test
add
stos
or
dec
shl
jle
add
and
push
add
ja
add
sbb
cmpsl
or
stc
pushf
pop
dec
lods
stos
aas
push
shl
lods
insb
add
shrb
sbb
inc
cwtl
dec
dec
or
inc
jmp
hlt
add
cmp
shll
jne
clc
adc
test
inc
mov
in
orb
jnp
mov
jns
or
mov
xor
andl
jp
data16
mov
out
pop
dec
cmp
cmovno
adc
xor
repnz
jo
fidivrs
add
shrl
add
mov
aas
mov
adc
cwtl
add
add
mov
xchg
adcl
inc
imul
js
jae
lods
add
lods
inc
fsqrt
sub
sub
repnz
ja
mov
add
insb
dec
mov
add
inc
dec
mov
lds
hlt
jp
nop
jecxz
pushf
add
push
scas
lret
das
mov
add
xchg
fadds
mov
gs
lret
mov
push
xor
dec
lock
jp
lds
cmc
or
mov
clc
popf
add
pop
fadds
push
jne
xorb
cmp
inc
cmpsl
add
mov
add
push
mov
xchg
aam
add
pop
in
add
sbb
mov
aam
icebp
push
inc
test
mov
lods
sub
jp
or
cmp
pop
test
cwtl
xchg
mov
add
or
or
aam
sub
cmp
out
add
in
xor
or
add
insb
and
mov
mov
sbb
and
inc
bts
cmova
bound
jmp
cmp
push
or
add
jl
jnp
jle
xchg
dec
out
cmpsb
dec
pop
or
push
add
leave
cli
push
add
push
clc
movsl
roll
dec
inc
sub
lods
xor
add
push
sub
pop
jno
addr16
cmp
or
shlb
int
add
pop
lret
aaa
mov
add
adc
enter
add
cmpb
scas
adc
cmp
arpl
add
pop
repz
add
jg
inc
adc
add
mov
test
and
sti
jp
pop
shrb
movsb
sbb
aaa
mov
push
popf
lea
push
lcall
adc
add
loope
mov
mov
mov
sbb
xchg
fisttpll
add
in
in
jge
mov
push
ja
pop
mov
mov
std
mov
fnstenv
pushf
add
inc
push
loope
adcb
jno
add
xor
popl
jo
mov
add
aas
add
inc
out
lods
push
clc
xchg
mov
pop
mov
push
mov
popf
jbe
add
scas
fcomps
sub
xor
int3
les
add
cwtl
insb
dec
jne
hlt
pusha
sub
add
in
sti
add
cmpsb
inc
xchg
rclb
out
dec
jnp
das
insb
add
cmp
mov
lods
add
pop
inc
sub
or
add
adc
sbb
or
ss
add
pusha
and
outsl
nop
add
mov
or
sahf
sub
sub
jecxz
lods
sub
mov
add
xor
sub
pop
lea
loop
xor
sub
cmpb
sti
xor
push
test
aas
cs
mov
add
arpl
xchg
inc
add
aas
adc
add
add
fldenv
add
rclb
and
cmp
jecxz
sti
xchg
movb
insl
mov
mov
lea
jge
pop
xchg
dec
int3
sub
mov
testb
outsl
fimull
in
aaa
add
xchg
pop
add
adc
xchg
xchg
mul
dec
sub
add
mov
test
add
ret
outsl
fbld
lock
dec
test
sar
push
mov
fnsave
add
xor
cli
or
add
push
lahf
pop
jne
push
mov
cmp
sbb
pushf
add
inc
imul
cmp
push
rol
movsb
add
popf
iret
and
cmp
jecxz
dec
lahf
pop
add
push
add
adc
fistpll
xorl
jbe
fwait
daa
dec
gs
popf
je
add
mov
lods
xlat
sub
and
mov
cmc
out
mov
add
jle
xchg
mov
add
pop
or
inc
jno
adc
sub
lea
sti
int3
add
leave
jnp
add
ljmp
stos
push
sub
lods
inc
pop
cmpsb
imul
add
adc
add
in
repnz
aad
div
add
ret
add
add
mov
mov
add
xchg
add
scas
xchg
or
mov
jp
pop
push
xlat
popa
jle
push
sbb
test
les
add
mov
sbb
and
mov
das
xchg
mov
and
adc
cwtl
xor
int3
sub
aad
jbe
mov
fsubs
pop
out
mov
pop
push
int3
add
je
jecxz
addr16
das
mov
jns
cmp
xchg
in
xchg
dec
ljmp
add
call
lods
xchg
sbb
add
jo
sub
ds
out
mov
add
or
in
add
mov
cld
sti
fildl
loopw
inc
in
iret
mov
add
aas
andb
test
add
in
mov
sub
sub
test
cmp
ret
sub
fidivl
mov
add
or
xchg
dec
add
add
stos
in
arpl
mov
push
xor
push
bound
int3
add
cmp
and
add
adc
add
jg
cltd
add
push
pop
lcall
cmp
clc
das
pop
mov
adc
push
xorb
dec
stos
fwait
add
jge
in
jp,pn
sti
pop
shll
mov
jb
loop
add
add
arpl
mov
jno
jmp
add
and
or
add
bound
dec
es
enter
dec
adc
add
add
mov
lea
sbb
sbb
sub
stos
add
cmp
xor
adc
xlat
inc
xchg
adc
cmp
adc
add
jge
xchg
addr16
mov
add
clc
mov
mov
push
jne
jmp
movb
pop
add
stos
push
cmpb
sbb
xchg
and
fidivl
adc
jno
xchg
das
xorb
or
inc
jp
aaa
stos
add
lds
loope
add
hlt
add
inc
imul
rcl
iret
popf
scas
lret
cmp
cld
sbb
sahf
push
inc
mov
mov
outsb
add
mov
cwtl
push
adc
cmp
pushf
std
lea
jnp
mov
pop
xchg
scas
roll
dec
cmp
add
sub
pop
add
enter
jae
add
push
jle
addr16
cmp
mov
dec
in
add
outsl
add
pushf
xlat
cltd
sahf
insb
mov
inc
int
dec
cmpl
sub
test
flds
mov
xchg
cmpsl
es
in
and
stos
pop
enter
and
dec
jecxz
into
dec
and
rorb
sbb
pop
orb
clc
add
std
cmp
mov
les
ja
xchg
leave
nop
add
aam
int3
cmp
out
cmc
fmul
xor
addb
sbb
dec
mov
cld
cltd
in
sarl
shl
mov
xchg
jno
mov
jl
arpl
xlat
pusha
fdivs
adc
btc
nop
xchg
push
xor
bound
adc
or
loop
rolb
fwait
mov
mov
orb
dec
mov
fldl
mov
pushf
push
xchg
or
in
add
arpl
fs
push
add
push
call
into
jnp
add
cld
dec
and
pushf
add
add
aad
add
adc
adc
and
mov
sbb
add
adc
cmc
jmp
or
nop
cwtl
adc
xchg
and
std
adc
outsb
add
lods
push
sub
adc
pop
xchg
sti
repz
xor
adc
add
add
cmp
enter
cmp
out
xor
scas
jg
inc
mov
sar
add
js
push
add
out
mov
sbb
mov
mov
mov
dec
or
xchg
xor
enter
ljmp
xor
mov
faddl
adc
repz
cli
ss
sti
adc
scas
icebp
das
mov
add
or
mov
add
scas
inc
inc
shrl
int3
inc
loope
shrl
je
inc
sub
xchg
or
ret
mov
adc
mov
enter
cltd
lahf
push
add
sbb
in
sub
mov
sub
xchg
enter
iret
add
add
bound
inc
pusha
arpl
mov
stos
movsb
or
and
scas
in
jb
sub
sub
outsb
dec
leave
int
cwtl
add
stos
fsubrl
xor
scas
inc
and
push
fsubs
adc
cwtl
lods
loopne
testb
push
das
adc
adc
add
stc
in
dec
add
fst
cmp
inc
cmpsb
iret
xchg
push
jp
out
fistps
adc
push
dec
mov
cmpb
push
inc
or
push
and
test
rclb
xor
test
nop
jp
xor
mov
adc
lds
dec
out
sti
aaa
add
sbb
add
adc
in
adc
cmp
jbe
stos
add
add
inc
xchg
subb
scas
jae
sub
or
mov
lds
mov
je
loopne
add
into
jp
movb
aam
fistl
or
outsl
push
or
in
test
mov
sub
insb
add
aad
int3
xor
or
push
add
inc
add
mov
and
sub
pop
ja
push
addl
mov
push
bound
xchg
adc
out
sbb
jb
cmovae
xchg
pop
pop
push
sub
xorb
add
sahf
add
mov
jecxz
mov
sbb
xchg
test
sbb
or
aaa
mov
mov
add
dec
decb
or
jns
lods
pop
lds
nop
xchg
mov
add
addl
jae
lods
ja
les
lret
jg
push
movsl
push
push
add
daa
dec
fists
lods
push
jno
xchg
add
mov
mov
jne
inc
jno
add
pop
subb
add
loop
mov
into
inc
out
cwtl
mov
xor
lret
mov
add
aam
inc
dec
or
nop
cwtl
movsl
add
push
xchg
add
cltd
mov
mov
sbb
add
cmpsl
dec
jo
loope
leave
sub
in
lods
xor
pushf
push
dec
cld
ljmp
push
mov
xor
cmpsl
insl
add
popf
sbb
sbb
xor
andb
adc
dec
mov
add
jb
hlt
add
enter
mov
sbb
ja
push
aad
pop
dec
sub
add
xchg
and
add
sub
jl
add
push
iret
rolb
or
jne
add
clc
sbb
add
movsl
jmp
pop
scas
loopne
out
pop
fdivs
add
lcall
and
adc
inc
cmp
fs
pop
xchg
push
inc
add
xor
ss
vcvtsd2si
sub
add
sti
and
or
test
jge
mov
or
dec
push
and
add
cmp
push
cmp
mov
sub
scas
lret
test
inc
add
adc
loop
and
adc
add
and
jno
inc
jbe
pop
inc
bound
ret
adc
les
sbb
push
jl
or
loopne
adc
pop
sbb
mov
testl
lods
popf
jecxz
pushf
add
inc
push
call
xlat
mov
mov
add
or
add
ljmp
mov
add
mov
add
pop
sbb
xchg
pop
adc
stc
mov
xlat
inc
add
sub
add
das
inc
push
mov
add
ljmp
or
jns
add
and
or
cltd
or
mov
mov
add
jb
pop
mov
enter
mov
pusha
mov
daa
pop
fdiv
add
pop
test
add
out
nop
inc
shll
xor
jb
push
fidivrl
jno
ds
pop
add
push
xchg
jp
in
mov
ljmp
repnz
and
lahf
addb
ljmp
add
stc
or
mov
mov
pop
stos
dec
dec
cmc
xchg
add
daa
and
xchg
das
jmp
xchg
jl
mov
push
fsub
mov
inc
cmp
xchg
dec
ljmp
data16
push
add
add
adc
imul
inc
call
ss
add
mov
mov
daa
pushf
and
mov
jp
roll
sbb
mov
shll
mov
inc
pop
pop
inc
add
clc
outsl
mov
jne
imul
xchg
leave
lret
pushl
xchg
mov
or
adc
je
add
sbb
loopne
add
fiadds
mov
inc
test
dec
jmp
aas
xchg
std
add
inc
mov
mov
fistpl
xlat
test
mov
xchg
mov
and
push
adc
mov
int3
add
aaa
pusha
and
iret
jb
adc
add
daa
pop
xchg
xor
xchg
aaa
loopne
add
add
orb
add
xchg
inc
gs
push
test
push
dec
push
dec
leave
sbbl
sbb
adc
aas
mov
das
push
xlat
popf
imul
cmp
sbb
xchg
sub
inc
out
add
dec
cmp
push
pop
ds
add
pusha
adc
sbbb
cmp
adc
dec
ss
in
mov
lods
xchg
dec
testb
lret
aaa
add
mov
pop
mov
aas
repnz
mov
sti
xor
mov
je
rolb
cmp
sub
dec
pop
les
arpl
add
sub
lcall
iret
pop
clc
loop
push
loope
inc
loop
fiaddl
out
add
cmp
fst
add
rorl
rcrl
inc
scas
les
push
jmp
push
gs
es
adc
adc
push
sbb
pop
and
mov
add
jnp
dec
add
ja
pushf
add
jmp
xchg
iret
mov
lcall
sub
cmp
aad
push
test
je
popa
pop
shll
add
sbb
mov
in
jmp
push
xchg
xchg
xorb
cmpb
sbb
das
push
jns
dec
rclb
jbe
fs
adc
rcrb
in
push
out
dec
xchg
repz
mov
add
xchg
sbb
xor
add
stos
sti
add
and
mov
mov
adc
fstl
paddd
xchg
std
inc
sbb
pop
xor
add
add
jecxz
pop
scas
jnp
sahf
or
and
sub
data16
add
idivl
ret
add
insl
adc
dec
out
push
mov
int3
loopne
adc
mov
int3
add
mov
add
movsb
divb
sub
iret
xchg
les
loopne
and
mov
xlat
adc
test
cmp
hlt
add
xchg
inc
pushf
sbb
xor
add
mov
mov
dec
mov
es
mov
cs
xor
test
pop
add
test
in
ds
add
movsb
sbb
add
cmpsl
repnz
sbbb
aad
icebp
add
xchg
std
sahf
pop
out
imul
jmp
jmp
pop
inc
test
inc
push
jne
repz
add
stos
jecxz
adc
loopne
jae
and
push
mov
cmp
mov
add
mov
add
jno
pop
xor
outsb
insb
add
pop
ja
ds
cmp
pushf
mov
or
stos
iret
and
add
push
fwait
unpckhps
lock
fwait
add
pop
xor
jb
mov
and
lcall
test
dec
mov
loopne
sbb
mov
leave
xchg
cmp
jne
mov
add
pop
aas
test
mov
call
or
inc
jbe
out
xchg
mov
inc
je
test
add
jae
sarl
dec
pusha
pop
jnp
rol
imul
xor
push
mov
push
imul
cwtl
add
adc
xlat
call
add
adc
and
mov
ljmp
mov
add
add
xchg
and
rolb
push
pop
outsl
mov
lcall
sub
movsl
mov
sub
mov
inc
inc
aaa
ficomps
pusha
lret
fstpl
cwtl
pop
dec
sbb
ja
add
add
sbb
shrb
fistpll
cli
movsl
adc
push
int
inc
test
mov
shll
mov
or
hlt
push
ljmp
xchg
mov
adc
xchg
inc
add
and
adcb
inc
imul
lods
or
push
add
mov
push
adc
pop
add
jbe
push
inc
leave
popf
add
movsl
inc
rorb
add
add
push
stos
lods
adc
pop
in
jns
add
inc
sub
mov
and
add
jbe
adc
add
shrb
xchg
into
loope
icebp
fdivrl
mov
adc
push
xchg
call
ficoms
inc
add
xor
mov
or
add
mov
arpl
aad
jp
add
adc
adc
add
pop
dec
jp
les
cmp
fiaddl
dec
cmpsl
fwait
sub
add
pop
dec
push
add
add
mov
jne
add
sahf
pop
mov
ret
sub
xchg
mov
mov
add
add
iret
add
inc
mov
sbb
es
lret
ljmp
add
inc
cld
ret
ds
or
push
add
and
push
ret
xorb
mov
add
pop
mov
mov
repz
sbb
cs
fiaddl
loopne
add
mov
cmpsb
add
mov
inc
inc
mov
rcll
movsb
repz
and
js
pusha
mov
jl
and
rorl
push
mov
add
jo
outsb
ds
add
mov
fistl
mov
add
ss
or
inc
push
dec
cmp
jbe
lret
add
sub
inc
add
movsb
mov
cmp
add
aaa
add
sub
int
add
lcall
cmp
sahf
add
dec
pop
pop
les
mov
xchg
out
mov
insl
add
jo
pop
or
aaa
add
rcl
jmp
add
test
fcoms
test
dec
loopne
jp
mov
inc
pop
js
lcall
sbb
add
outsl
mov
and
call
in
or
add
int
lret
dec
dec
add
xchg
out
ret
pop
adc
das
ljmp
push
add
mov
lea
inc
add
mov
cmpsl
jge
mov
add
stos
jnp
xlat
sbb
add
shll
mov
es
lea
popf
mov
cltd
xor
push
dec
call
xlat
add
cld
inc
sbb
inc
ja
add
sbb
add
fildl
push
and
inc
test
les
xor
dec
xlat
leave
std
pop
int3
add
and
addb
stc
or
out
jno
daa
outsl
adc
jle
add
mov
fwait
add
add
mov
add
out
jecxz
insl
pop
dec
add
and
fcomps
les
adc
sub
mov
movsb
movsl
add
notl
loope
cltd
mov
and
xchg
loopne
jno
and
fistpl
shlb
sbb
rorl
les
inc
ss
out
mov
adcl
aaa
mov
pop
xorb
loopne
push
std
imul
cvtps2pd
cwtl
or
lcall
mov
dec
sub
jne
mov
dec
es
mov
addr16
sarl
test
inc
mov
xchg
aas
pop
add
in
add
jo
add
dec
insb
outsb
sub
mov
jl
xchg
cmp
repnz
mov
mov
add
loop
cmp
int
je
pop
int
add
sbb
add
jg
sbb
push
add
out
pop
jnp
pop
in
xor
in
adc
and
dec
jle
fadds
std
inc
stc
or
jae
arpl
mov
movsb
test
loopne
inc
pop
add
popa
jbe
shlb
add
jnp
mov
filds
inc
inc
jmp
jecxz
dec
movl
pop
fstpl
in
fadds
xchg
aam
xchg
pop
add
mov
mov
les
bound
and
sti
loop
mov
arpl
cli
test
mov
test
and
repnz
xor
std
popa
jo
mov
mov
das
bound
dec
adc
add
sub
or
adc
mov
stos
pop
and
adc
loop
mov
add
scas
and
xor
add
jle
sbb
dec
xchg
stos
ret
xor
add
repz
arpl
shll
pop
add
jge
add
push
mov
loopne
cmp
push
add
pop
icebp
cltd
scas
push
insl
in
push
and
adc
dec
js
add
sbb
jne
scas
add
push
out
add
xchg
mov
pop
mov
or
add
dec
cmp
nop
pushf
stos
push
scas
mov
aam
sti
std
mov
xchg
jo
or
je
and
add
adc
xchg
pop
add
pop
inc
inc
ljmp
add
inc
shlb
mov
in
cmpsl
js
ret
inc
sbb
add
xchg
pop
xchg
add
mov
ret
jo
and
add
shrb
mov
or
dec
mov
cmp
mov
fwait
jae
test
cs
sub
fiadds
fimuls
jp
incb
call
add
lods
ret
jg
mov
popf
sarb
jl
fs
pop
inc
lret
jg
add
jl
and
ss
jnp
inc
pop
adc
adc
mov
adc
jno
lods
or
jle
loop,pn
mov
cmpsl
iret
or
mov
pop
testl
jge
mov
adc
aad
fcomps
fidivrs
shrb
arpl
add
inc
and
rol
mov
push
jbe
add
jmp
call
xchg
inc
dec
mov
or
fisttps
repz
jb
loopne
out
js
add
call
and
or
cmp
push
add
icebp
or
add
or
lds
add
test
or
mov
aad
inc
add
jmp
add
ja
xlat
adc
jg
loopne
daa
ret
pop
sbb
push
add
sub
loope
add
loopne
or
xchg
les
mov
aas
stos
enter
adc
movsb
fptan
stos
xor
adc
fadds
lahf
add
sbb
lcall
inc
xor
push
add
dec
add
add
popa
ss
jl
cmpl
addr16
adc
push
or
xor
add
test
adc
arpl
mov
cli
scas
xor
pusha
adc
add
or
aad
stos
aam
test
pop
inc
xor
loopne
pop
sbb
add
test
cmpsl
add
or
loopne
dec
popl
loopne
insl
adcl
pop
jo
mov
adc
or
addb
mov
inc
js
sub
pop
jns
loope
movsl
js
test
addb
add
xchg
dec
sbb
lea
mov
cli
add
and
ja
push
pop
add
mov
inc
inc
xchg
add
hlt
daa
test
lgs
inc
add
cld
sbb
daa
adc
xlat
sbb
jle
dec
test
hlt
and
adc
lret
xor
cli
ret
dec
outsb
xlat
sub
insb
daa
jmp
test
adc
jne
dec
stos
dec
shrl
cltd
ds
add
add
inc
push
repnz
fcomp
fwait
dec
add
das
mov
add
jb
and
add
ja
out
and
and
das
pop
ljmp
dec
mov
lock
movsb
mov
pop
cs
cli
push
pop
and
je
jae
lods
pop
add
or
add
stos
imul
add
dec
out
lahf
out
push
cli
shl
test
add
out
xlat
out
inc
mov
sahf
mov
ficoms
dec
xor
xor
mov
xor
or
jnp
movsl
fwait
out
mov
adc
sub
pop
loop
mov
dec
mov
inc
fldt
inc
repz
jecxz
lret
repz
es
fisubrl
add
pushf
mov
es
shrb
push
inc
jno
mov
lods
jb
aas
test
jmp
mov
or
lcall
ret
mov
scas
inc
pop
fisubrs
add
int3
sti
cmpsb
leave
into
xor
mov
fs
pop
mov
testb
mov
fdivs
in
push
add
loopne
cmp
mov
jmp
in
stos
test
xchg
sbb
and
pop
add
push
mov
sub
xor
sub
dec
mov
xchg
inc
jmp
or
mov
cmp
push
and
nop
sahf
popa
pop
mov
sub
arpl
es
std
mov
cmp
xor
enter
pusha
and
insl
mov
popf
jmp
inc
maskmovq
testl
lds
add
dec
mov
pop
test
scas
push
cmpb
dec
add
int3
add
inc
test
dec
mov
jae
fadds
xor
add
jp
xchg
faddl
mov
push
fs
xor
iret
int3
and
push
add
jecxz
and
or
push
jne
add
ds
sub
das
jl
fldl
fistps
iret
sub
pop
sahf
test
mov
push
ljmp
test
call
pop
pop
lds
pop
loopne
dec
je
add
mov
mov
dec
pop
les
sbb
mov
cmp
inc
mov
jne
dec
add
pop
sbb
cli
push
mov
jp
mov
cmp
mov
and
dec
or
cmp
pushl
jns
test
dec
leave
cmc
rolb
jp
hlt
pop
stc
iret
sbb
mov
pop
test
add
add
aaa
and
fsubr
notl
xor
lahf
add
std
xlat
test
testl
cli
ret
fst
add
adc
jnp
nop
mov
cwtl
or
add
inc
push
xchg
add
enter
dec
aad
add
aam
push
cmp
pusha
lods
pop
fwait
lahf
loope
fistps
mov
dec
add
add
pop
adc
outsb
sbb
bound
adc
movsb
mov
ret
lret
and
add
shll
ds
enter
sub
xchg
jbe
test
jmp
dec
xor
mov
adc
scas
push
xor
xchg
cmp
mov
and
cmpsb
dec
pusha
sbb
mov
add
jg
jns
mov
ja
mov
add
aaa
adc
lods
mov
cmpb
fxch
jge
mov
or
lahf
jle
push
sbb
incb
mov
insb
add
jp
pusha
xchg
adc
jb
fiaddl
push
push
lods
int3
add
jl
sti
cmp
push
adc
faddl
fiadds
rcrb
out
jmp
or
lds
mov
jge
cmp
sub
testb
cld
cli
fdivr
inc
push
dec
add
and
pop
shrb
pop
add
push
rolb
movsb
jns
jmp
js
jle
add
jg
scas
dec
jmp
adc
hlt
and
adc
movl
mov
fiadds
cmpsl
adc
jle
rclb
mov
stos
bound
xor
add
jns
rcrb
jmp
mov
sarl
out
push
add
cmp
jnp
pop
fcmovne
sti
test
les
push
push
lods
orb
mov
sar
adc
inc
sbb
negl
mov
aam
int
daa
push
xor
cmpb
add
add
mov
pop
mov
add
mov
and
inc
jno
test
pop
mov
xor
lods
adc
shll
lods
aas
filds
dec
mov
jbe
xor
push
fiaddl
imul
xor
fistpl
lret
pop
add
or
mov
fiadds
cld
add
jl
inc
and
adc
mov
inc
cmp
cld
popf
inc
add
repnz
and
push
add
jl
add
add
into
movsl
adc
shr
nop
je
add
fsubrl
jns
cld
add
and
rolb
not
jne
sub
push
mov
js
ss
adc
fchs
and
test
insb
dec
dec
mov
bound
js
or
orl
repnz
jbe
xchg
out
pusha
adc
js
xchg
add
jecxz
mov
sub
fnstenv
test
sub
add
sub
lock
add
xchg
mov
js
mov
push
add
aaa
and
pop
add
pop
nop
incl
enter
bound
pop
adc
add
mov
pop
add
add
mov
mov
aaa
rcll
bound
movsb
cmp
push
or
les
idivl
add
mov
es
int
inc
movq
add
mov
add
bsr
lock
mov
idiv
les
inc
lods
add
jge
js
repz
and
sub
add
xlat
sbb
std
add
sub
xor
mov
test
inc
gs
mov
sub
ror
add
jnp
imul
pop
pop
add
and
pop
flds
pop
sub
sbb
sub
mov
and
fcoms
mov
mov
fldl
pop
and
adc
mov
push
imul
les
loopne
pop
sahf
loope
mov
fistl
lods
stos
or
mov
and
sbb
add
fnstsw
lock
mov
push
fwait
arpl
add
pop
ret
mov
add
jmp
dec
add
sub
jb
test
loop
in
js
add
cld
insb
jl
fisttpll
cmp
leave
repz
mov
push
mov
cli
push
aad
sbb
jnp
add
cmp
dec
add
fidivrs
out
push
xchg
adc
cmp
adc
sbb
pop
pop
movsb
mov
fdiv
div
les
add
stos
xor
jb
cltd
idivb
rolb
sub
repz
mov
add
xor
or
shl
push
add
or
jle
jb
sahf
add
movsb
inc
push
adc
sbbl
andb
stos
mov
dec
cmp
sub
add
jo
clc
add
mov
add
jno
sbbb
ret
xchg
mov
aaa
pop
int
add
push
out
mov
mov
lret
call
pop
mov
sub
xchg
dec
lret
adc
add
add
pop
adc
std
add
inc
sub
mov
push
lea
add
sub
xchg
jno
mov
inc
push
aaa
sbb
add
mov
sbb
mov
pop
psubq
push
gs
lahf
mov
sarb
add
lods
cmp
lret
add
xchg
inc
push
in
leave
adc
inc
mov
daa
push
loop
test
fldenv
add
push
adc
rolb
hlt
cmp
or
dec
iret
enter
decb
mov
mov
cs
lods
std
add
add
popf
add
xor
sbb
add
cli
enter
orb
add
push
negl
mov
test
add
scas
pop
push
sbb
sahf
or
mov
mov
outsb
xchg
add
or
dec
add
add
sbb
nop
xor
mov
mov
shlb
add
cmpsb
dec
inc
dec
jbe
add
push
sub
or
mov
add
inc
in
loope
push
out
add
je
add
pop
ror
lods
orb
roll
mov
aam
lock
add
enter
pop
jge
add
xchg
cmp
pop
stos
sub
insl
mov
mov
add
scas
fucom
sub
mov
add
xchg
xlat
int
lods
clc
add
aad
lds
jge
stos
lock
or
cmp
aad
add
and
pusha
add
roll
xchg
dec
sbb
add
in
mov
jl
dec
jg
call
mov
mov
out
sbb
cmpsl
nop
add
int
addl
push
push
sub
dec
add
and
iret
insl
inc
pop
xor
mov
push
outsb
push
add
test
add
insb
std
jns
outsl
dec
xorb
add
iret
ror
or
pop
test
add
add
data16
stos
jmp
ds
add
das
mull
sbbl
test
addl
sar
fsubl
xchg
push
xor
add
stos
aad
add
or
xchg
push
push
cs
add
push
mov
add
mov
add
cmp
dec
rorb
fsub
mov
push
stc
add
rcrb
cmpl
add
sbb
add
or
mov
pop
pop
stc
imul
ficompl
out
add
add
push
and
lock
lea
imul
lods
cmp
jno
fiadds
mov
mov
or
xchg
ja
aaa
movsl
xor
dec
add
jnp
orl
shl
inc
rolb
mov
push
das
pusha
add
pop
add
sbb
adc
stc
add
scas
mov
cltd
or
stos
jnp
popf
mov
testl
fwait
mov
js
xchg
xlat
xchg
clc
enter
pop
and
leave
and
cltd
aaa
pop
add
mov
mov
mov
mov
inc
out
das
stc
add
cld
rorb
cltd
xchg
cwtl
test
test
out
dec
adc
lods
mov
adc
add
fistps
pop
inc
push
pop
cmp
lock
test
cmp
adc
mov
fisubs
in
mov
xchg
add
mov
ret
scas
mov
and
frstor
add
add
test
scas
add
pop
mov
out
mov
add
fnstenv
mov
lret
mov
dec
pop
dec
outsb
nop
cmp
add
lods
dec
or
or
sub
jle
or
js
popf
mov
jo
fwait
push
sbb
loope
add
dec
sbb
add
ss
push
stos
fcompl
sbb
loop
add
or
inc
sbb
pop
call
cld
add
stos
in
sub
add
fsubs
inc
out
mov
cmpsb
fcmovb
lcall
insl
xor
mov
dec
sub
pusha
or
aaa
pop
cmp
adc
dec
dec
add
add
call
and
pop
nop
dec
andb
aas
popf
mov
inc
pop
rorl
test
push
int3
fyl2x
sbb
and
test
jecxz
jb
adc
dec
push
or
add
cli
mov
push
in
dec
sbb
cwtl
add
fwait
push
arpl
lahf
add
test
add
or
in
daa
inc
testb
sub
sbb
lahf
inc
pop
test
sar
ret
or
xchg
cli
add
pop
cmp
mov
loopne
fistps
adc
in
add
test
leave
add
sub
inc
inc
inc
addl
adc
mov
int3
or
add
fstl
sub
jb
hlt
cmp
outsb
xorl
push
sbb
lock
cmpsb
scas
out
test
lods
in
sbb
dec
dec
popa
add
add
xlat
jae
push
jae
and
rcrb
add
sarb
inc
icebp
mov
nop
movsb
mov
push
add
mov
leave
out
jns
test
sbb
js
mov
outsb
pusha
add
mov
add
pop
and
lods
adc
inc
not
pop
imul
mov
fldcw
add
cwtl
hlt
lea
and
or
push
or
cmp
mov
sbb
mov
add
das
adc
add
mov
bound
out
push
mov
sub
jne
xchg
xor
movb
pop
in
add
arpl
stc
pop
sbb
cmpsl
fcoml
cmp
stos
add
decl
data16
ja
sbb
jp
testb
sub
xor
adc
add
imul
movsb
and
dec
or
pop
cltd
jle
push
mov
pusha
push
pop
add
nop
and
push
loopne
outsl
inc
jl
dec
xchg
aad
packsswb
pusha
call
add
xor
dec
xor
faddl
add
imul
rcll
out
mov
xor
cmp
movsb
add
je
pop
mov
cmp
pop
jae
push
test
in
xchg
dec
add
and
mov
addl
pop
mov
loopne
movsb
sub
add
xchg
fldcw
jmp
pusha
push
leave
add
pop
or
add
daa
or
stos
sub
push
sbb
cmp
test
add
mov
fcmove
cmpsl
xchg
cld
ds
jno
mov
and
add
jb
ja
add
push
adcb
adc
or
bound
cld
adc
or
mov
sbb
jno
lahf
adc
cwtl
jmp
daa
or
or
adc
mov
add
mov
cmp
rclb
lea
push
dec
sub
mov
stos
add
mov
push
loop
clc
cs
jne
add
aam
pop
jge
jmp
push
jns
movsb
fistpll
mov
xor
scas
and
in
loopne
pusha
ss
add
inc
add
popf
push
xchg
add
cmp
aaa
or
roll
add
dec
pushf
pusha
push
std
sbb
fs
add
and
shlb
add
bound
xchg
adc
pop
mov
mov
jo
add
rcll
cwtl
and
es
jnp
inc
push
or
add
push
pop
mov
mov
roll
jnp
sub
xor
outsl
mov
inc
mov
add
pop
stc
push
cld
loop
addr16
dec
aad
adc
imul
jno
nop
gs
pop
mov
rclb
out
cmp
mov
jns
push
or
daa
movsb
add
mov
lret
add
ffree
xchg
mov
add
mov
cld
xchg
jmp
inc
pop
or
int3
add
fstpl
lds
xlat
cmp
cmp
add
push
xchg
dec
lods
stos
pop
mov
jb
mov
jnp
pop
cmp
add
fcmovne
adc
test
jo
add
dec
scas
sti
jle
mov
pop
sbb
xchg
shrb
mov
jg
add
scas
or
pop
leave
call
enter
xchg
cwtl
mov
in
stos
xor
stos
nop
mov
xor
fiaddl
add
lret
ret
sub
adcb
xor
inc
imul
pusha
enter
flds
nop
loop
cmpsb
pusha
bound
cmp
rorb
dec
lds
inc
movsb
inc
xor
xchg
sti
add
cld
inc
pop
inc
push
mov
xchg
lods
ret
dec
ljmp
fs
addb
cmp
cmp
add
test
pushf
mov
inc
add
push
pusha
icebp
push
nop
push
add
stos
mov
iret
add
add
xor
mov
or
mov
jge
sub
sbbl
push
push
add
cmp
mov
sub
pushf
shlb
xor
roll
std
add
pop
call
fisttpll
pop
adc
mov
pop
inc
mov
nop
add
lcall
pop
cld
pandn
add
adc
sub
mov
test
adc
jge
push
jbe
dec
data16
fidivrl
fcoml
mov
adc
mov
add
mov
test
ss
add
outsw
add
icebp
inc
dec
pop
mov
xor
int
adc
pop
or
fsubr
dec
cmp
ret
fdivr
cmpsl
jp
xchg
mov
adc
testl
ficomps
cmp
add
xchg
sbb
jmp
add
adc
stos
rolb
mov
push
in
lret
cmp
mov
or
inc
add
aam
adc
pop
dec
mov
xchg
scas
nop
add
inc
test
aas
ja
and
add
int
sub
jne
rclb
push
sub
insb
jmp
push
out
add
cmp
rolb
jecxz,pn
lea
data16
repnz
add
jno
mov
mov
lods
inc
lahf
fadds
lods
inc
dec
add
cli
add
rcr
sub
mov
fidivs
xchg
scas
pop
add
inc
and
nop
sahf
inc
dec
push
xor
ljmp
add
lcall
sbb
loopne
and
loope
jg
or
mov
add
mov
and
push
das
daa
or
icebp
mov
mov
lret
adc
add
adc
push
add
mov
push
popa
cmp
cmp
add
ret
jo
push
stc
or
or
and
add
mov
enter
add
push
into
pop
or
leave
add
rolb
add
ljmp
pushf
adc
pop
popa
dec
cltd
adc
mov
add
aaa
fmuls
and
mov
loopne
pusha
add
push
aam
or
mov
dec
xor
mov
cwtl
or
xchg
mov
pusha
add
jb
in
pop
cmp
and
mov
adc
xchg
pusha
call
scas
sbbb
and
ja
add
stos
dec
push
pop
stos
xor
xor
push
adc
orb
into
inc
int
push
or
mov
adc
adc
sub
mov
push
cmp
das
cli
sub
add
fsubl
xor
push
addb
lret
sarb
mov
fwait
sahf
fstpt
pop
push
in
add
test
add
fs
jp
iret
add
movsb
in
add
xchg
lcall
push
out
in
jns
ret
lret
push
adc
xchg
out
and
push
and
addr16
daa
sbbl
jp
mov
inc
mov
add
sbb
out
add
mov
dec
cmp
sub
push
sbb
adc
push
xchg
jb
in
fs
sub
cld
scas
add
mov
das
sbb
inc
test
xor
add
ss
daa
inc
decb
xchg
inc
dec
and
cmc
pop
jns
or
cwtl
add
or
repz
add
jmp
add
dec
pop
loopne
jmp
dec
repnz
add
xor
faddl
stos
mov
lods
add
and
cmp
scas
jns
push
add
int3
sbb
add
imul
add
sub
sbb
ja
leave
add
sbb
lds
or
jmp
loop
jbe
daa
dec
add
add
cli
imul
sbb
sub
fstpl
mov
push
imul
push
data16
jl
sbb
andb
inc
push
movsl
jp
punpckldq
stc
out
sub
add
push
mov
inc
ds
in
xor
ja
mov
adc
xorb
push
cmpsl
dec
daa
pop
sahf
xor
fwait
mov
inc
push
pop
psubsw
mov
addb
and
or
sub
mov
sbb
dec
insb
and
sbb
test
push
mov
cltd
test
cli
or
add
sub
mov
sahf
hlt
add
add
mov
cwtl
popa
add
mov
into
ficompl
add
sub
xchg
out
dec
sbb
lods
dec
sti
scas
stos
mov
roll
add
pop
xchg
fiaddl
sub
daa
add
imul
sub
lds
stos
faddl
cmp
and
mov
xor
enter
clc
or
add
mov
mov
mov
add
int3
pop
push
sub
pop
add
mov
or
pop
adc
inc
add
jo
or
sbb
mov
push
int3
ret
sti
and
add
out
xchg
mov
popa
or
mov
lcall
jp
pop
sbb
add
dec
cltd
punpckhbw
inc
imul
adc
subb
push
cmp
add
lock
popa
xor
xchg
aam
xchg
add
add
ficompl
and
mov
add
sbb
push
pop
ljmp
std
subb
int3
mov
add
out
mov
add
mov
fadds
test
sbb
add
or
adc
cmp
add
cmc
adc
pop
dec
adc
cmp
add
fdivr
jbe
push
imul
scas
push
in
das
and
add
ljmp
es
xchg
cld
out
or
xor
addr16
imul
int3
xor
std
xor
cli
add
cmpsl
push
inc
mov
and
cmpb
imul
add
pop
xchg
enter
push
test
insb
add
scas
pop
shlb
pop
xchg
push
aam
and
add
cmp
pop
xchg
das
int3
add
inc
inc
aaa
inc
xchg
add
subb
cmp
add
jecxz
or
jno
in
jle
pop
gs
popa
add
jns
add
xor
or
js
sbb
fisttpl
scas
pop
and
adc
fcomps
or
popa
add
add
mov
ret
or
and
lahf
pop
add
addr16
loope
js
insb
adc
or
shl
pushl
cli
fistpl
lret
loop
inc
xor
add
bound
repz
clc
and
dec
add
pop
push
or
add
add
push
stos
scas
jecxz
mov
fs
and
aad
add
mov
push
repnz
add
xor
sbb
notl
dec
add
adc
add
push
dec
das
and
add
pop
lea
pop
jae
jge
jb
ja
nop
xchg
andb
xchg
into
xor
fs
test
lods
mov
add
add
in
addl
movl
cmp
xchg
adc
add
adc
pop
loopne
add
testl
add
std
mov
adc
ret
add
hlt
daa
and
fistpl
pop
mov
adc
ret
add
add
inc
mov
das
es
xor
jns
sub
sub
nop
add
mov
in
hlt
add
mov
add
xchg
mov
out
rclb
mov
push
popf
stos
xchg
movl
outsb
mov
imul
add
adc
mov
push
lods
and
fiaddl
pop
call
add
sbb
add
mov
in
dec
sub
add
clc
jb
ljmp
stc
out
and
jp
cmp
mov
inc
pusha
rolb
mov
je
cld
add
mov
std
add
adc
scas
adc
lahf
jb
daa
sti
mov
add
xchg
cld
add
test
add
in
hlt
adc
loope
jl
rorb
xor
push
mov
bound
mov
add
call
xchg
test
cs
jae
dec
adc
adc
sbb
outsl
lods
jp
add
mov
ficompl
push
jo
mov
push
or
add
or
push
das
cltd
xor
add
xchg
add
test
push
insb
ret
xchg
inc
je
sbb
into
mov
cmp
jl
sar
add
sbb
ljmp
mov
pusha
jno
add
push
or
stos
data16
sbb
mov
mov
sahf
adc
pop
cmp
mov
lods
stos
sbb
mov
jns
push
inc
add
and
push
testw
out
dec
ljmp
aas
xor
dec
add
and
mov
pop
nop
add
sbb
sti
cmc
sub
add
lret
stos
add
or
inc
inc
dec
push
xchg
mov
cmp
and
xlat
and
je
mov
pop
les
pop
loopne
push
inc
add
or
in
cwtl
jge
add
and
adc
pop
lret
xchg
add
mov
push
adc
out
add
xor
daa
inc
push
sarl
mov
add
mov
dec
mov
std
jns
mov
test
and
sti
inc
loopne
xor
xchg
std
arpl
mov
pop
fwait
lods
add
stos
inc
add
pop
mov
pusha
add
fsubp
in
test
out
dec
fldt
inc
js
mov
mov
xorb
add
in
jnp
lock
mov
call
add
push
add
push
mov
lahf
push
add
xchg
inc
jge
sbb
add
mov
scas
adc
jg
imul
and
in
add
sub
je
sbb
and
add
inc
bound
pop
dec
add
cmc
xor
pusha
movl
or
test
sbb
ret
movsl
dec
sub
add
out
sub
aam
sahf
sub
mov
stos
incb
add
int3
xor
adc
xchg
add
pop
push
mov
xor
rorb
enter
add
dec
mov
loopne
lds
inc
enter
stc
add
cli
rolb
inc
pusha
jo
bound
xchg
subb
shr
add
sbb
mov
imul
lret
call
cmc
nop
and
and
and
push
lods
lret
out
js
jge
inc
sti
out
andb
paddb
fs
mov
fnstsw
arpl
inc
ffree
shlb
jmp
xchg
loope
imul
add
mov
inc
int3
fisubs
pop
rol
or
test
add
dec
mov
mov
out
cmp
lret
or
add
add
outsb
add
enter
inc
add
inc
dec
ds
leave
adc
add
popf
scas
adc
lods
popl
gs
movsb
sub
mov
add
and
pop
cmp
sbb
add
inc
mov
add
xchg
addr16
fsub
shll
stos
imul
fwait
ds
push
add
inc
outsl
push
addb
test
mov
inc
scas
add
mov
int3
add
test
loopne
repnz
add
inc
int3
clc
ds
push
or
add
jge
add
and
pop
cli
inc
loopne
in
dec
mov
popa
add
sbb
jo
leave
loopne
test
or
and
jl
lahf
inc
insl
xor
daa
mov
adc
mov
icebp
mov
jecxz
sub
mov
hlt
add
movsb
or
loope
sub
imul
cmp
in
xchg
mov
mov
and
mov
and
adc
pop
stc
add
mov
das
and
add
mov
adcb
push
inc
mov
cmp
add
pop
inc
arpl
jle
pop
add
mov
jns
test
inc
xlat
and
ljmp
fbld
popa
add
jns
jg
or
sub
pop
nop
in
ret
pop
adc
add
clc
stos
add
dec
adc
add
pop
pop
mov
cmp
inc
jl
lret
scas
push
test
add
or
push
enter
les
and
repnz
pop
xor
mov
cmpl
add
mov
clc
test
lret
jle
mov
out
es
or
push
jnp
rorb
lcall
mov
lock
out
arpl
testb
push
or
dec
mov
mov
mov
add
scas
lea
outsl
out
jo
sub
mov
test
and
push
imul
add
mov
mov
push
inc
add
and
pop
addl
and
cwtl
imul
hlt
add
inc
adc
data16
add
push
and
add
shlb
mov
add
cmpsl
add
imul
icebp
xchg
inc
subb
add
pop
xor
test
call
clc
push
pop
jno
ds
add
pop
test
mov
pop
out
fs
push
mov
add
sub
aad
sub
out
call
add
leave
and
cli
mov
ret
add
or
xor
adc
adc
dec
or
rcrb
or
adc
mov
sub
sub
add
xchg
sub
add
mov
rorl
mov
lcall
ss
ficoms
pop
mov
scas
mov
mov
shrb
add
outsb
loop
fmuls
inc
and
nop
push
pop
and
mov
push
iret
add
out
adc
add
shrl
data16
push
call
mov
mov
adc
sbb
fadds
jb
add
inc
push
pavgb
and
dec
lcall
repz
loopne
stos
sbb
add
jl
not
xchg
add
mov
and
js
add
cmpsl
mov
add
mov
dec
ss
mov
shll
stos
cmp
adc
lods
and
push
add
gs
lea
jnp
jle
add
dec
add
stc
and
adc
dec
mov
add
aam
push
pcmpeqw
sbb
pushl
or
xor
ds
add
rolb
sbb
push
pop
iret
xor
xor
pop
add
push
or
leave
dec
push
mov
testl
mov
sub
and
mov
mov
dec
mov
adc
rclb
add
xchg
call
add
add
and
jno
in
jp
or
out
sbb
in
pop
xchg
sub
jae
push
jne
add
into
adc
pop
inc
add
jae
and
add
daa
out
in
push
or
jnp
pop
jb
pop
test
mov
lods
repnz
add
addr16
mov
dec
mov
push
add
cwtl
aas
dec
push
test
mov
mov
pusha
shl
repz
call
cli
cwtl
add
dec
xlat
jl
testb
in
test
or
ret
add
mov
cmpsl
add
add
and
add
or
inc
push
dec
mov
cmp
cmp
and
pop
sbb
inc
jb
or
push
add
pop
mov
pop
repz
inc
lret
pusha
and
dec
or
nop
mov
enter
pop
push
cmp
sbb
xchg
out
add
push
hlt
xor
and
lahf
test
cmpsl
add
cmp
gs
jns
xor
and
mov
test
bound
ja
in
add
and
adc
xor
xor
inc
jle
sub
lcall
add
mov
and
sbb
popf
cmp
mov
outsl
mov
add
inc
adc
lret
stos
xor
adc
sub
insb
pcmpeqw
hlt
and
pop
jl
add
jno
adc
lods
ljmp
repz
ja
mov
push
cli
jl
inc
add
add
bound
test
sbb
push
addr16
xlat
fildl
shl
cs
add
inc
push
mov
cltd
dec
mov
fstpl
add
aam
pusha
mov
or
lds
aam
ret
and
rcll
xor
mov
arpl
adc
fwait
repnz
sub
lods
xchg
fmuls
jnp
jno
stos
pop
add
shlb
faddl
in
and
pop
add
sub
and
add
les
lds
add
cmp
fwait
lods
cld
cltd
xchg
cmp
cmovne
int3
mov
stc
add
gs
and
adc
hlt
rcll
mov
pop
add
bound
sub
xchg
filds
mov
inc
xchg
repz
push
cmp
add
push
push
icebp
lahf
push
cmp
xchg
call
dec
adc
aas
clc
rolb
sti
testl
in
lods
add
stos
dec
enter
add
push
cmp
mov
inc
cmp
xchg
jb
sub
and
jle
clc
mov
sbb
xchg
sti
mov
mov
clc
jle
cwtl
add
sbbb
mov
movsl
inc
add
shrb
mov
jns
repz
jb
xchg
inc
and
push
or
lret
pop
add
je
pushf
sti
adc
add
push
imul
sbb
cmpsl
sti
popa
add
adc
fcompl
sub
cmp
add
add
nop
hlt
arpl
add
inc
mov
faddl
divb
and
cmpsl
adc
mov
enter
sub
ret
test
add
das
mov
testl
mov
adc
lods
ret
shl
xchg
and
test
inc
shlb
fcomps
dec
or
outsb
call
add
int3
fldl
leave
dec
push
clc
cmp
adc
sub
add
jns
andl
mov
inc
inc
sti
adc
loop
repnz
mov
leave
sub
pop
pop
mov
fists
and
mov
cld
aam
inc
add
lret
nop
xor
jmp
sbb
xchg
xchg
dec
shlb
push
sbb
lret
icebp
pop
fstl
loopne
inc
jne
jns
outsl
cs
adc
dec
lahf
jge
add
dec
add
jmp
lods
add
mov
aaa
sub
inc
enter
xor
xchg
inc
out
add
cli
sbbb
and
aas
dec
scas
jns
imul
adc
push
adc
pop
sti
filds
push
mov
adc
mov
cmpsl
enter
add
aas
push
aaa
sbb
add
adc
cmp
add
xchg
add
push
jno
jmp
pushf
adc
lods
xchg
into
stos
int3
add
test
mov
cltd
shlb
push
add
or
outsl
dec
dec
movb
xor
jecxz
adc
ljmp
xor
adc
cli
add
cmp
add
push
mov
dec
jg
fists
xchg
sub
add
lahf
add
cmpl
pop
dec
das
bound
repnz
or
idivl
add
sub
aam
das
bound
sbb
mov
shrb
add
mov
mov
je
lds
and
pop
and
inc
jb
and
and
add
repz
inc
add
rcll
data16
clc
or
fwait
add
sbb
or
fidivl
jne
add
sarl
cld
jge
add
stos
imul
push
aas
jecxz
test
scas
ljmp
inc
lods
addl
xor
add
adc
dec
mov
add
jl
xlat
jne
add
loop
notl
add
jecxz
adc
lret
sbb
add
dec
adc
in
movsl
jmp
fwait
notb
ss
mov
push
pushf
sbb
add
mov
dec
add
and
pop
xchg
fiaddl
pop
test
add
inc
xchg
mov
add
adc
push
lods
sbb
or
or
xor
out
push
cmp
and
les
je,pt
or
pushl
push
add
test
inc
sbb
push
outsl
add
or
add
aad
scas
pop
add
jecxz
ret
popl
pop
movsl
into
pop
or
ret
daa
cmp
lods
push
xor
jg
dec
jo
add
rclb
cmpsl
out
filds
add
push
add
leave
push
cmpsb
fdivs
dec
add
out
loope
fs
pop
pop
add
xchg
mov
jmp
lock
inc
outsb
mov
xchg
decl
in
add
cmp
out
add
sub
add
xor
adcb
or
sar
mov
add
inc
test
shl
add
fmull
std
out
add
int
inc
inc
mov
pop
adc
sbb
mov
stc
add
loopne
js
xchg
fildl
adc
pop
outsl
add
fisttpll
add
dec
xchg
mov
cs
add
js
inc
mov
loope
movsl
cs
pop
adc
mov
clc
add
ficoms
fmull
jl
icebp
add
or
inc
jae
sub
cmp
dec
das
cli
ja
add
sbb
xor
int3
push
int
and
dec
xchg
add
test
out
das
push
or
mov
inc
add
andb
add
and
push
add
hlt
les
lods
mov
mov
daa
mov
cltd
insl
push
push
sbb
mov
dec
test
daa
movsb
cmp
add
or
and
mov
cli
dec
and
mov
jecxz
add
cwtl
push
add
push
lods
movsl
xor
rcll
adc
stos
or
pop
pop
add
and
ficompl
add
mov
imul
push
out
sbb
add
or
add
subb
pop
lock
dec
jle
add
jo
add
jae
sub
sub
mov
jnp
add
adc
aad
ret
inc
ljmp
and
add
stos
les
jae
pop
lahf
mov
leave
sub
incl
and
add
loopne
xor
jbe
jae
mov
add
sti
pushf
add
push
add
push
cmc
dec
int3
sub
clc
popf
roll
adc
lods
sbbb
test
mov
sbb
xchg
gs
jecxz
mov
add
add
push
bound
push
outsb
aad
lcall
lahf
push
add
or
add
ds
mov
push
or
test
scas
cmc
rolb
xchg
add
add
in
add
mov
dec
jo
mov
dec
dec
xchg
inc
call
add
mov
mov
sbb
cli
mov
jl
jecxz
rclb
loopne
rorl
lret
imul
mov
push
jbe
pop
aam
add
out
push
lret
and
add
movsb
test
notl
das
divl
add
adcb
pop
cld
add
aaa
mov
scas
ret
scas
testl
jo
add
mov
repnz
outsb
push
push
add
xor
dec
sbb
add
or
sarb
add
int3
inc
adcb
mov
pop
out
lods
jne
jbe
lds
push
or
fadds
xor
push
sbb
xchg
arpl
sub
hlt
add
xchg
mov
leave
mov
arpl
xor
mov
push
leave
andb
pop
mov
adc
aad
dec
mov
add
fbstp
add
mov
add
add
iret
dec
mov
out
and
adc
rolb
repnz
out
loopne
add
faddl
ret
and
adc
sbb
push
add
ja
dec
in
mov
and
cmp
inc
mov
add
sub
adc
lods
sbb
outsb
xchg
test
dec
out
lret
pusha
push
push
mov
mov
cs
dec
xchg
out
mov
dec
or
fcoms
mov
mov
cmpsl
add
roll
mov
sbb
shl
fstp
add
or
cmp
arpl
xor
lock
jnp
es
pop
add
pop
sub
cmpsb
hlt
into
nop
pop
std
jns
nop
out
fstl
hlt
add
jg
push
xor
xchg
bound
js
or
xchg
cli
test
jmp
mov
add
dec
bound
movb
mov
pop
sbb
sub
jbe
lea
push
cltd
lock
clc
fiadds
lret
jb
push
lock
daa
sbb
jge
add
test
xor
jbe
mov
add
xor
and
add
int3
mov
xchg
dec
int
cli
out
mov
test
mov
jg
add
shrl
imul
test
outsl
inc
pop
and
add
and
adc
shlb
inc
mov
push
popf
movsb
inc
iret
test
sub
add
lds
inc
sti
xor
pop
add
and
outsb
sub
mov
stos
adc
mov
aas
fldt
or
add
add
push
btc
cmpsb
nop
loop
sbb
cmpsl
movsl
mov
mov
push
or
xchg
out
inc
sub
mov
int
adc
popa
and
addb
add
js
stos
xor
jl
pop
xor
sub
shlb
sbb
push
aam
cli
bound
push
adc
sub
cli
sbb
xchg
mov
mov
xor
mov
mov
adc
jge
sub
test
mov
or
push
cmp
sbb
xchg
testl
mov
mov
sbb
call
fadds
inc
test
mov
sbbl
sbb
adc
and
dec
adc
imul
mov
push
test
call
and
adc
mov
inc
loope
inc
sbb
inc
testl
lahf
fadds
dec
jnp
fiadds
mov
test
int3
sti
mov
shll
fst
pop
clc
add
sbb
dec
fwait
std
lds
inc
pop
stc
push
adc
das
push
xchg
ljmp
mov
fsubrl
adc
into
movsl
loopne
push
aad
bound
test
push
inc
test
sub
push
popa
cmp
mov
jbe
pop
aaa
inc
shll
iret
scas
add
shll
pushf
loope
push
lods
sub
sbb
adc
and
lods
mov
add
shll
mov
adc
cld
push
add
jl
fildl
mov
add
lods
and
jl
mov
add
dec
fldl
testl
mov
add
and
adc
xchg
sbb
in
outsl
lods
or
inc
cld
mov
xor
ja
push
xchg
lahf
pop
add
cld
mov
push
add
popa
out
insl
dec
mov
or
jbe
add
jge
and
outsl
pop
adc
and
add
fisubrl
push
pop
fldenv
lods
xlat
jns
xchg
or
outsl
add
mov
add
sub
movsl
mov
or
rcr
fmull
mov
jno
sbb
stc
add
mov
jle
out
inc
dec
and
lods
faddl
dec
inc
xchg
pushf
inc
fs
ret
mov
add
imul
adc
sahf
insl
push
push
add
push
add
add
dec
mov
push
add
rcrb
add
mov
inc
jb
inc
out
mov
push
aam
cmpl
test
insl
mov
call
inc
cs
pop
fcmovnbe
add
js
xor
mov
add
or
mull
je
in
daa
cwtl
and
cmp
outsl
mov
daa
scas
in
data16
and
jo
roll
inc
stos
hlt
cs
adc
pop
lods
int3
add
fdivs
std
add
cltd
xor
add
jecxz
shrb
add
in
add
je
inc
fisttps
sub
mov
dec
fildl
out
in
cmpsl
add
mov
add
push
or
and
es
imul
enter
sub
cmp
popf
jp
mov
add
sub
xor
add
push
addr16
inc
dec
adc
inc
shrl
add
subb
add
std
xchg
dec
add
repz
fiadds
mull
xlat
adc
adc
pop
fnsave
lock
pushf
dec
add
sarb
inc
jo
xor
xchg
add
dec
sub
fimuls
stos
fadds
cmp
push
mov
sub
and
out
nop
fwait
mov
ret
js
xchg
out
testb
inc
leave
or
lods
cmp
jns
loope
or
imul
and
in
das
mov
add
sti
scas
fiaddl
pop
mov
dec
mov
xchg
mov
push
xchg
jne
add
les
fistpll
add
ljmp
pop
test
add
or
pushf
aam
testb
sti
adc
lock
jg
jmp
stc
add
sub
in
mov
push
push
mov
subl
mov
inc
jnp
xor
push
xchg
imul
clc
inc
sub
add
ret
or
add
or
add
mov
add
mov
add
adc
sub
push
fcompl
fnstsw
adc
or
inc
sbb
adc
mov
pop
call
add
inc
mov
xchg
xlat
repnz
repz
aas
adc
lods
dec
or
int
roll
sbb
test
out
repnz
mov
jg
pop
lods
stos
xor
movsb
adc
or
cld
in
divl
rcrl
add
jge
add
add
in
adc
into
stos
test
add
sub
xor
int3
jl
add
addr16
pop
test
xor
push
dec
inc
ljmp
jl
push
add
add
aas
test
inc
ds
sub
iret
add
cmp
and
xchg
pushl
or
roll
or
push
add
flds
and
add
clc
fcoml
adc
add
ljmp
inc
mov
test
shlb
cmc
adc
inc
sub
sub
add
adc
daa
nop
sti
dec
push
scas
fiadds
orb
fisttpll
or
pop
pop
std
iret
add
push
pop
jg
pop
add
sbb
add
add
ljmp
lods
sbb
or
push
cltd
inc
aaa
adc
lods
into
add
inc
out
les
outsb
cmp
add
cmpsl
pop
in
dec
out
aad
sbb
jmp
inc
push
sub
ror
pop
loopne
mov
imul
add
push
incb
hlt
add
fidivl
mov
add
mov
mov
cld
mov
xchg
out
add
je
rolb
jp
test
sbb
adc
sub
adc
adc
jb
out
inc
sbb
cwtl
add
mov
fistpl
add
ljmp
push
fildll
jge
add
icebp
xor
ss
repnz
stc
add
dec
dec
xor
mov
push
inc
test
pop
shlb
lods
addb
mov
pop
sbb
add
sub
or
mov
add
enter
outsw
add
or
or
xchg
xor
das
pop
pop
andl
movsl
adc
addb
imul
push
mov
add
bound
ficoml
sbb
jnp
test
xor
rcr
add
mov
iret
fadds
addr16
mov
inc
ja
fldenv
dec
bound
popa
mov
adc
std
or
push
xchg
dec
mov
clc
pop
adc
push
lahf
add
mov
add
ret
popa
adc
push
lds
inc
out
mov
inc
pop
or
xorb
jns
push
pop
hlt
add
xchg
cmpsb
mov
cmp
mov
test
ret
cmp
fucomi
cwtl
add
inc
mov
nop
inc
jo
fcoms
insb
inc
dec
movsl
out
jne
mov
push
sub
push
fldcw
push
inc
inc
sub
xchg
fisttpl
jl
das
sub
imulb
or
add
or
loopne
hlt
add
mov
mov
inc
lods
pusha
add
orb
movsl
xchg
pop
add
xor
and
mov
and
sub
cmp
jno
popf
cltd
add
xor
and
cmp
sbb
push
add
rorl
int
dec
mov
jbe
or
add
and
inc
jae
addl
add
or
cltd
add
jb
add
outsl
cmp
mov
xor
cmp
or
add
in
sahf
and
mov
jg
push
clc
add
jne
iret
add
pop
add
add
pushf
mov
adc
data16
xor
sbbb
lods
add
mov
das
mov
adc
mov
jns
inc
pusha
and
jae
in
mov
pop
insb
mov
cli
jg
add
test
jmp
pushf
lods
pop
add
pushf
dec
je
outsb
jno
mov
sub
imulb
jg
stos
loope
das
push
cmc
pop
add
add
icebp
test
dec
or
dec
mov
enter
ss
out
sub
popa
add
adc
aaa
or
push
ret
fisttpl
adcb
scas
pusha
xchg
sbb
mov
test
mov
mov
xchg
sub
test
iret
out
rorb
cmpsl
fdivs
leave
adc
movb
jo
test
adc
nop
imul
adc
add
mov
adc
pop
or
lret
mov
push
add
lods
lds
mov
add
aaa
and
loope
mov
repz
push
add
movl
mov
add
xchg
aad
scas
jmp
mov
out
xchg
dec
mov
sbb
les
and
outsl
dec
test
aad
or
mov
cwtl
sbb
mov
testb
into
fildl
sti
jp
add
and
sub
out
loopne
popf
in
sbb
pop
and
add
sarl
add
stos
testb
add
cs
add
or
mov
minps
adc
adc
sub
add
mov
in
add
fidivl
out
sub
and
std
xchg
imul
call
xchg
in
jle
pop
adc
add
faddl
push
add
lods
shll
lea
rclb
jge
sub
add
mov
lret
stos
shr
fadds
js
mov
test
scas
fst
add
rol
pusha
or
add
jg
add
mov
scas
jecxz
cs
call
cs
add
push
or
mov
out
xchg
in
add
and
dec
add
and
pop
sbb
roll
add
jge
add
sub
mov
dec
sbb
jge
add
mov
push
add
fildll
add
add
pop
pop
add
in
sbb
and
jb
add
shlb
jne
add
pushf
add
ficoml
mov
sub
adc
adc
or
scas
shr
lds
call
aam
xchg
fbstp
loope
push
stos
adc
test
dec
mov
and
mov
or
outsl
test
add
mov
sub
add
mov
add
in
inc
or
mov
faddp
icebp
and
mov
jb
addb
adcl
xor
out
xor
mov
adc
sub
hlt
adc
lahf
pop
add
scas
popa
add
or
jg
mov
roll
loope
andb
mov
push
sbb
dec
jl
jo
test
loop
push
inc
and
and
jne
add
hlt
mov
mov
push
scas
and
jge
inc
mov
jmp
jmp
add
mov
iret
test
inc
cld
jb
fistpll
add
ljmp
add
call
test
loop
inc
cwtl
out
add
rolb
hlt
add
fbstp
fdivr
ljmp
cwtl
add
ficompl
or
add
lea
add
and
jae
add
dec
dec
dec
clc
and
sbb
add
or
add
popf
jns
xlat
cmp
and
or
push
lahf
inc
test
add
cwtl
add
hlt
mov
mov
and
push
outsl
lret
insb
pop
inc
imul
xor
or
add
add
sub
adc
sbb
rorb
rclb
es
rolb
cmp
add
sub
and
ja
vpsubusw
fadds
or
insl
add
imul
int
inc
sbbb
les
arpl
insl
ja
and
inc
data16
test
fs
dec
add
add
add
pop
cmp
imul
dec
stos
jl
imul
jl
and
add
stos
sub
add
dec
imul
xor
cmpsb
and
negl
xor
and
adc
xchg
and
sar
jbe
and
push
sbb
in
inc
in
dec
aaa
jmp
add
mov
mov
mov
xchg
test
bound
pop
dec
add
mov
pop
dec
pop
add
js
fnstsw
outsl
cmp
add
outsb
jne
mov
add
outsw
popf
add
test
adc
add
std
add
push
mov
imul
adc
jnp
mov
cmp
incl
adc
dec
adc
sub
or
add
mov
in
sarb
cmpsl
jbe
and
and
mov
divps
add
mov
repz
fildll
or
jge
add
inc
loop
les
dec
stos
cld
add
xchg
mov
sarb
scas
roll
loope
loop
pop
cwtl
inc
mov
jo
pop
and
into
mov
insb
scas
add
pop
dec
in
add
add
daa
pop
add
daa
inc
test
cwtl
mov
add
cltd
dec
lods
dec
dec
jmp
xorl
fwait
and
popa
add
fistps
add
xor
mov
add
adc
ljmp
fadds
sbb
in
mov
jae
jmp
add
xor
repz
cwtl
pusha
or
les
fscale
pop
in
nop
jmp
inc
mov
and
add
daa
and
add
in
cltd
clc
add
aad
test
lcall
data16
aaa
out
cmp
pop
sub
and
pop
or
ret
repz
cmp
xchg
or
push
jl
xlat
cltd
or
shrl
sti
push
out
inc
jg,pn
outsb
and
and
sub
lods
add
pop
dec
imul
xchg
subb
sahf
mov
rcll
rclb
add
and
jmp
xlat
jo
jp
adc
pushf
add
push
add
test
inc
push
mov
call
pop
test
call
add
icebp
add
cmp
mov
or
inc
mov
push
inc
jb
jae
shrl
and
cmpb
dec
sahf
out
adc
sub
orl
push
or
sbb
mov
add
cmp
pop
mov
fdiv
add
orb
cmpb
inc
in
sub
mov
add
mov
add
std
je
out
roll
jg
add
orb
in
bnd
inc
lods
cs
mov
cmp
icebp
adc
mov
mov
adc
adc
inc
add
jmp
xchg
mov
adc
in
push
add
sbb
jle
test
dec
mov
adc
or
cmc
mov
loope
sub
dec
adc
test
xchg
roll
mov
mov
cltd
ret
push
add
push
popf
repz
adc
or
sub
sub
add
incl
add
imul
jne
cld
int3
add
flds
mov
pop
add
xchg
and
adc
xchg
add
sub
fstpt
mov
out
dec
cmc
out
outsl
jno
push
adc
setno
dec
ret
rolb
andb
add
dec
cmp
fstp
lret
das
pushf
add
jno
add
ds
pop
and
inc
sbb
mov
fs
fwait
and
repz
lods
xlat
mov
add
cmpb
push
cmc
add
jg
and
scas
adc
fsts
xchg
pop
inc
pop
add
mov
call
lods
outsb
sub
xchg
xchg
inc
cmp
push
aaa
jge
add
dec
out
inc
add
adc
mov
jne
add
fisubl
lret
mov
out
lcall
pop
xchg
xor
and
sbb
sbb
je
and
aas
push
cmpsl
mov
add
sbb
add
int
stos
mov
add
and
add
xchg
out
pop
cmpsl
outsl
ss
imul
orl
mov
add
adc
dec
call
inc
mov
add
inc
jle
fstpt
loopne
cmp
mov
add
sub
das
leave
push
sub
xlat
jle
mov
lret
call
lock
mov
adc
push
dec
jae
inc
add
jbe
adcb
loopne
push
sbb
in
int3
ljmp
data16
sub
out
inc
mov
cld
add
pop
jecxz
clc
mov
xchg
adc
jno
std
leave
and
testl
sbb
inc
mov
movsb
test
push
aam
pop
adc
ret
xor
popa
add
xchg
out
inc
pop
mov
xchg
add
adc
push
inc
xor
insl
or
sbb
ja
add
and
add
xchg
inc
dec
jns
cwtl
add
push
jle
pop
mov
cwtl
add
test
mov
sbb
and
scas
add
shrb
mov
add
incb
sub
inc
enter
add
pop
lea
daa
outsb
mov
cmp
cmovb
in
std
sub
hlt
andb
push
mov
pop
add
aad
add
dec
shlb
add
outsl
jl
cmp
test
imul
jb
popa
cmp
mov
les
shrb
jae
leave
jecxz
enter
adc
jecxz
pop
mov
pop
loope
mov
mov
pop
negb
out
and
adc
add
pop
inc
not
add
aad
mov
loop
cmp
or
sub
les
and
add
ljmp
and
push
cltd
call
mov
add
pop
pushf
adc
pop
add
mov
dec
sbb
dec
mov
sbb
jecxz,pt
mov
les
sbb
cli
add
sbb
add
jl
cmp
repz
and
lcall
addr16
bound
mov
sbb
cmp
rolb
arpl
cs
loop
lods
lds
das
pop
xor
add
xchg
in
ror
ret
push
hlt
push
insl
jecxz
adc
shlb
shll
je
fistps
dec
mov
adc
push
jno
inc
or
ss
add
test
xchg
add
nop
inc
xchg
cmp
add
int
stos
or
pop
imul
movsl
inc
test
jb
or
adc
dec
aad
add
nop
call
pop
or
xchg
movl
insl
mov
jmp
inc
add
add
jl
push
push
inc
cmp
cltd
mov
dec
test
movsl
sub
xor
mov
mov
in
add
add
out
dec
jbe
notl
pushf
imul
les
scas
jecxz
jp
dec
mov
add
push
xor
out
sub
adcl
jnp
add
lods
and
add
adc
test
mov
cmpsl
xchg
add
dec
hlt
adc
mov
mov
push
add
ljmp
push
add
adc
cmp
push
scas
out
pusha
and
fs
and
std
enter
pop
cmpsl
adcb
arpl
add
add
push
loope
xchg
test
dec
stc
add
loopne
sbb
loop
mov
push
loopne
xor
pop
pusha
repz
xchg
push
xor
push
fisttps
and
add
xor
add
call
and
nop
add
nop
mov
in
lahf
cli
idivb
adc
into
jmp
loop
popf
cmp
inc
adc
jle
ds
mov
lods
dec
pusha
mov
dec
dec
mov
or
or
mov
jmp
add
nop
popa
popf
cwtl
mov
mov
jae,pn
mov
in
add
rclb
into
push
add
mov
or
pop
cmp
push
add
stos
sbb
sahf
mov
add
fs
adc
js
dec
out
mov
push
cmp
cmp
negl
add
add
dec
cs
inc
mov
xor
xchg
jno
inc
dec
and
inc
add
push
xchg
dec
or
or
add
ja
stc
push
and
leave
add
mov
arpl
scas
rolb
mov
mov
sub
adcl
int3
mov
add
fmull
mov
imul
and
jo
les
aaa
pusha
out
mov
clc
sub
negb
lods
or
xlat
dec
add
arpl
fcoml
sbb
mulb
adc
mov
sub
cltd
cmp
jno
xchg
arpl
add
ret
pop
add
xor
add
clc
push
add
in
dec
jl
ss
push
jmp
xor
add
mov
xlat
or
add
or
cmc
in
add
flds
add
andl
add
jae
bound
mov
pop
jo
adc
dec
movzwl
jne
incb
enter
add
test
out
jmp
xor
rcrb
int
cltd
mov
add
adc
stc
push
and
ja
ret
mov
pop
and
jp
lret
loopne
sahf
add
insl
les
cli
xchg
test
mov
add
aad
or
add
inc
inc
mov
pop
sbb
rolb
mov
std
daa
adc
push
dec
in
add
push
mov
and
add
testl
movb
push
dec
jmp
add
mov
addb
ljmp
mov
clc
cmpb
loopne
mov
jg
fdivrs
dec
add
mov
mov
dec
push
scas
lcall
in
sbb
es
andb
add
fwait
mov
stos
testl
pop
xchg
mov
je
add
test
jb
mov
xchg
leave
shrb
sarl
jae
add
mov
mov
inc
dec
in
mov
aaa
and
aas
and
into
fnsetpm(287
jo
add
clc
test
sub
add
adc
add
cld
add
idivb
add
xor
rcrb
outsl
orb
pushf
add
test
mov
ret
add
inc
xchg
or
add
adc
loopne
cwtl
cmpsb
or
or
aad
add
mov
or
dec
add
add
cltd
loope
fiaddl
mov
loopne
jp
ds
bound
dec
test
adc
inc
dec
or
dec
loop
add
rorl
sub
xor
jne
add
or
adcb
nop
jmp
stos
aam
out
push
cmp
and
bound
mov
jne
mov
mov
shlb
out
dec
cmp
ss
add
bnd
addb
jmp
xchg
jo
js
xchg
push
je
sub
jle
out
sbb
jl
pop
cs
adc
add
push
adc
add
cmp
xor
add
sub
stos
cwtl
fwait
mov
mov
pop
rorb
out
cmp
test
outsl
cmpsl
add
pop
pop
out
imul
test
stos
cmpl
in
add
hlt
adc
mov
ljmp
dec
movsb
decb
add
fsubrs
lret
add
sarb
subb
mov
mov
test
or
sbb
test
xor
or
and
outsb
adc
add
and
and
jae
sbb
test
adc
xchg
ds
in
cli
mov
subb
flds
jae
cmc
test
mov
dec
add
mov
mov
jne
mov
pop
mov
mov
cli
insb
push
in
cmp
pop
scas
xlat
pop
lods
cmp
mov
inc
roll
out
push
pop
mov
cmp
jns
mov
mov
and
pop
inc
pop
shlb
dec
xchg
add
fadds
and
add
and
and
loopne
mov
jl
loopne
add
add
sti
repz
pop
add
pusha
fwait
ret
in
push
mov
shll
or
sbb
adc
sbb
xchg
ret
xchg
out
adc
push
inc
sbb
lahf
repz
sub
add
jle
add
loopne
scas
mov
mov
out
stos
xor
cmpsl
jae
add
sbbl
pop
adc
pusha
jo
add
mov
int3
insb
push
scas
ja
push
add
popf
and
pavgb
jp
and
ds
cmc
outsb
jo
mov
cmp
dec
cmpsb
add
xchg
cld
adc
call
mov
inc
mov
cmp
pop
jno
mov
pop
or
lcall
fistps
jp
add
mov
and
aad
jl
mov
cwtl
and
addl
mov
mov
stos
sbb
or
addl
mov
jle
enter
lock
add
jmp
add
ja
add
js
adc
inc
add
sub
orl
xlat
mov
mov
xchg
add
xor
fstpl
sbb
push
jp
inc
es
push
xchg
add
aas
mov
dec
loopne
testb
pop
xor
das
xchg
pop
addl
push
xchg
pusha
mov
inc
add
xor
push
je
mov
ret
ljmp
clc
popf
or
jne
fiadds
mov
jae
or
cs
fildll
jmp
ljmp
adc
xor
stos
mov
cmc
add
push
jmp
enter
lret
inc
jl
incb
jne
mov
movsb
xor
dec
ja
xchg
rcrb
out
xchg
test
dec
xor
insb
add
cs
fiadds
lods
inc
enter
incl
mov
xor
jno
or
ljmp
add
xlat
sub
add
push
push
mov
add
mov
movsl
imul
and
icebp
test
ja
sbb
push
repz
sub
movsl
mov
fs
cmp
xchg
loopne
add
lahf
mov
add
mov
jp
xchg
shll
jbe
inc
push
add
stos
sbb
mov
mov
sbb
adc
sahf
mov
hlt
ss
stos
or
in
loopne
sub
or
pushf
dec
add
add
pusha
out
sbb
or
push
ret
fiadds
lcall
mov
mov
imul
jo
inc
test
scas
cs
mov
adc
xchg
or
and
mov
les
mull
test
sub
add
xor
decb
mov
into
in
dec
jmp
andb
jno
add
test
mov
mov
lock
xchg
adcb
add
mov
aaa
pop
mov
cmp
addb
mov
xlat
aas
cmp
add
imul
lods
sbb
dec
mov
add
imul
xchg
pushf
pop
stc
out
leave
cmpsb
pop
loopne
jns
pop
fsubl
jne
adc
emms
bound
pusha
insb
in
cltd
adc
lods
mov
pop
test
out
or
xchg
and
add
pop
push
xchg
mov
lods
lcall
cmc
frstor
mov
sahf
dec
sbb
dec
popf
sub
pop
fwait
jns
rclb
jno
xorl
mov
add
xchg
loopne
add
mov
rorl
pop
pop
int
insb
inc
adc
mov
sbb
mov
jmp
decb
jge
inc
add
push
mov
add
out
andb
mov
mov
sbb
cmp
out
cmp
xor
test
sbb
mov
sbb
mov
push
inc
pop
lret
jge
lock
dec
stos
add
or
add
shll
sbb
jge
arpl
clc
mov
lahf
cmp
adc
add
je
negl
inc
pop
imul
push
cmpb
fiadds
clc
mov
loopne
mov
jno
cmp
jnp
test
xor
jb
add
test
in
out
mov
adc
or
enter
jne
les
cmp
push
sbbb
jae
rol
pop
adc
loop
add
and
jmp
adc
add
lcall
cmpsl
lret
aad
or
std
aas
xlat
mov
inc
push
or
xor
cs
cmc
cld
lahf
mov
and
rcll
xchg
add
movsb
fstpt
xchg
cmpb
cmp
repnz
std
jne
mov
inc
mov
add
xchg
pop
lods
add
push
adc
dec
out
nop
fisttpll
int3
loopnew
jecxz
leave
and
sbbb
xor
dec
push
xlat
arpl
imul
add
jne
dec
stos
daa
adc
cmp
out
add
xor
add
pop
add
xchg
or
ljmp
mov
sbb
xchg
mov
mov
mov
int
js
add
pop
loopne
add
jmp
mov
fsubs
enter
in
and
dec
xchg
pushf
add
pop
call
dec
mov
or
lret
add
adc
mov
stos
xor
add
sub
popf
jecxz
rolb
or
adc
out
add
jns
repz
cmpsb
xchg
xchg
inc
out
inc
jo
inc
mov
xorb
xor
sub
rorl
jmp
into
add
dec
in
clc
add
idivl
hlt
jecxz
cmpb
pop
sub
inc
dec
xlat
cwtl
or
add
addl
mov
aas
movsb
mov
aad
sarb
test
mov
out
mov
mov
push
insl
cmp
or
dec
out
lahf
jmp
enter
lods
cmpsb
xchg
int3
das
icebp
add
or
mov
enter
add
or
nop
imul
sbb
adc
mov
cmp
inc
std
fcoms
loopne
push
add
mov
fldl
pop
sbb
cmp
add
push
movsb
addl
and
out
pop
les
addr16
loopne
clc
pop
popf
je
add
mov
and
scas
xchg
addl
pop
sub
cmpsl
add
xor
cmp
jl
test
ds
mov
add
xchg
xor
adc
addb
lahf
push
fsub
notb
lods
mov
test
popa
add
fcoml
repnz
movsl
sahf
add
mov
dec
daa
or
add
mov
les
insl
and
and
fdivs
movsb
or
mov
add
mov
cmpsl
aam
sub
mull
add
xchg
jbe
lods
aas
fsubs
xchg
xor
call
out
jb
mov
mov
pop
hlt
and
mov
jno
jnp
jecxz
and
fisubrs
inc
mov
es
in
add
add
add
push
mov
test
mov
pop
add
notl
call
cs
cli
add
mov
sub
inc
xchg
mov
sbb
add
pop
lret
daa
add
jnp
scas
hlt
leave
add
add
add
std
rorb
xor
jb
mov
add
and
cmpsl
add
sbb
test
ret
add
sub
lcall
push
push
test
loop
hlt
add
jnp
fists
and
cli
pop
fcmovne
movsb
add
lret
int
mov
loopne
testl
ret
jge
loop
xchg
add
lods
push
loope
nop
clc
add
mov
cwtl
add
xor
sbb
lret
lods
or
cli
std
hlt
fmuls
jne
and
out
mov
pushf
adc
and
push
sbb
adc
jne
in
add
sub
jns
sbb
mov
aas
xchg
fiadds
fwait
ret
add
test
adc
sub
or
or
insb
push
cmp
dec
addr16
loopne
enter
push
rcr
inc
inc
and
add
gs
sbb
jbe
cmpsb
push
add
cwtl
sub
sbb
or
ret
fistpll
xor
cmpsb
scas
add
out
xchg
popf
add
cltd
jle
inc
pop
rclb
fwait
sbb
dec
add
inc
xchg
pop
xor
gs
pop
add
or
xchg
div
rcr
add
push
sbb
dec
pusha
push
mov
jae
add
ret
jbe
bound
add
mov
push
jb
add
push
add
sub
loopne
or
add
push
push
jae
and
lcall
pusha
cmpl
add
jne
imul
pusha
sbb
cmp
sahf
mov
lods
rcrl
pop
rorb
sbb
push
cltd
or
scas
xchg
add
fildl
in
mov
insb
xchg
inc
repnz
rcrl
ret
in
add
sub
mov
cmp
call
add
cmp
js
xor
mov
xchg
stos
mov
ja
xchg
xchg
inc
lahf
in
into
add
pop
scas
sub
mov
add
cld
mov
cmpsl
ljmp
jnp
imul
push
pop
sub
add
pop
movsb
xchg
inc
pop
or
int
into
xor
scas
pop
fiaddl
xchg
sub
and
sub
cmp
ss
cs
mov
fwait
add
add
mov
xchg
cmp
fxch
nop
jbe
in
sbb
imul
je
jp
mov
call
jae
addl
mov
arpl
dec
ror
inc
or
dec
jmp
lret
leave
push
icebp
add
jo
test
inc
aas
loopne
xchg
pushf
cmovle
subl
js
repz
add
cmp
or
addr16
and
inc
mov
add
jmp
movsb
push
pop
and
repnz
sarb
push
lret
neg
jae
scas
mov
xor
cmp
jg
push
imul
popf
repz
cmp
mov
addb
cli
out
sub
pop
mov
inc
inc
cmpsb
add
pop
sbbb
pop
call
jg
lods
inc
xchg
push
push
push
mov
dec
sub
stc
add
inc
lods
lret
jl
repz
cmp
add
rcrb
test
mov
insl
mov
hlt
cli
flds
cs
xchg
push
mov
cltd
outsb
xor
inc
sbb
sub
or
xorb
insl
inc
pop
popf
add
pop
out
adc
leave
add
jbe
fisttpl
jns
pop
xchg
je
pop
sub
lret
mov
je
add
mov
pusha
xabort
mov
repz
test
xchg
pop
add
mov
loop
add
xchg
mov
nop
pop
data16
lods
push
pop
or
jns
mov
mov
daa
dec
cmp
add
adc
dec
out
dec
mov
add
out
inc
lds
rcl
add
setp
sbb
sahf
and
add
or
push
fcoms
add
dec
shrb
aas
in
aam
ror
pop
loopne
mov
loop
jb
shlb
or
imul
fiaddl
sti
dec
push
add
inc
pop
lods
lahf
pop
fdivs
add
jae
ret
aaa
hlt
fstl
je
push
mov
push
test
jg
rolb
test
dec
add
sbb
or
dec
xchg
dec
or
jo
jne
add
and
add
mov
add
cmp
aaa
cltd
adcb
sbbb
std
cli
cmpsb
add
mov
push
adc
cld
insb
add
jns
jne
dec
aaa
insl
imul
out
add
pop
and
pop
push
jo
add
js
bound
pushf
mov
sbb
dec
xor
ljmp
mov
jmp
fs
mov
ret
cwtl
scas
imulb
hlt
jecxz
mov
stc
or
adc
add
fadds
mov
inc
mov
xor
cmp
mov
shr
jecxz
and
cmpsl
add
iret
add
add
lock
add
cmp
adc
rorl
addr16
test
add
jno
pop
dec
add
es
jmp
cmpl
mov
jg
adc
jge
mov
push
xchg
sbb
pop
loope
call
iret
adc
js
or
arpl
push
jnp
xchg
push
call
lds
xor
sbb
fcomps
add
or
popf
loopne
add
hlt
cmp
in
imul
add
sarb
repnz
ret
int
adc
pop
jmp
add
or
arpl
andl
and
jno
mov
es
lds
lret
or
jl
pusha
cmpsl
prefetcht0
dec
dec
movsl
mov
orb
jecxz
push
jnp
or
add
mov
scas
fmulp
jl
add
mov
add
fadd
add
pop
xchg
pop
outsl
sahf
hlt
fxrstor
sbbb
add
cmp
mov
cltd
sbb
pop
sub
aaa
mov
jne
mov
sbb
lods
repnz
inc
fidivrl
add
fs
adc
pusha
int3
fwait
xchg
call
push
addr16
shll
dec
push
push
ud1
test
or
pop
xchg
sahf
add
inc
sbb
add
loopne
adc
cmc
rolb
movsl
scas
fidivs
popf
push
add
lret
add
out
dec
add
in
cmp
popf
add
xchg
int
cmp
mov
dec
inc
add
jecxz
mov
push
fsubl
shll
xor
cmp
movsb
sarb
mov
cmp
mov
les
push
push
add
push
into
negb
mov
cmp
fwait
push
lahf
mov
fcom
add
push
ret
add
pushf
pop
cmp
mov
xor
add
and
lock
push
mov
inc
subl
hlt
fisubrl
jp
mov
jns
add
imul
ret
add
push
repnz
add
cltd
xor
add
out
movsl
and
mov
mov
xchg
loope
dec
imul
sub
add
mov
cmp
jg
mov
orb
call
fadds
les
movsb
sub
rcl
inc
jp
sarb
test
xchg
dec
wbinvd
mov
add
call
xchg
push
cli
sahf
data16
mov
or
frstor
mov
push
adc
int3
cli
fildll
xchg
scas
add
lret
cltd
in
icebp
adc
test
mov
pop
add
gs
add
xchg
push
pop
add
scas
andl
movsb
orl
pop
lahf
lods
add
out
enter
sub
add
add
loop
ds
jne
enter
dec
push
add
mov
mov
outsl
hlt
xchg
rcrl
xchg
xor
sub
jns
fwait
sbb
mov
cwtl
mov
outsl
mov
add
rorb
pusha
or
call
ret
add
push
adc
mov
fsubr
cmpb
add
jo
stos
cmp
int
pop
enter
or
fisttps
and
rcl
mov
mov
xchg
xorb
jl
pop
cmp
rorb
fisubrl
add
or
pop
mov
xchg
mov
sbb
add
clc
dec
mov
mov
sub
jbe
rcrl
dec
movsb
push
jl
add
dec
mov
out
mov
jo
add
mov
orb
adc
sbb
in
hlt
call
jmp
ss
xor
lods
add
xchg
xchg
sahf
add
or
pop
shl
sbb
ret
add
sahf
pop
xchg
lock
int
test
fisubrl
out
cmpsb
dec
cmp
std
cmpb
cld
adc
mov
aam
movsb
pop
xor
bound
test
loope
clc
shrb
mov
cmpsb
popw
sub
sbb
clc
int3
jle
add
mov
str
or
das
jp
cltd
push
push
pop
mov
mov
xchg
pushf
add
inc
lock
arpl
jle
add
push
adc
push
push
cmp
add
pop
scas
pop
mov
loopne
shlb
xor
add
cmc
jl
add
lcall
sahf
push
ja
cmc
mov
or
jmp
and
popa
jl
scas
lods
or
aad
sbb
mov
push
shrd
add
xchg
jmp
out
sub
rcrb
and
sbb
add
dec
inc
mov
fidivl
cmp
call
cmpsl
xorb
pushf
fimuls
jge
pop
mov
push
ja
orl
ret
popa
mov
adc
movsb
pop
hlt
sarb
ds
dec
jae
outsl
repnz
or
sub
xor
add
rorb
pop
add
jno
dec
pop
loopne
filds
fs
cwtl
xchg
adc
lods
jp
add
mov
jecxz
jge
rolb
add
sarl
add
xorb
inc
cltd
ret
stc
jnp
call
push
rorb
add
add
xchg
mov
dec
jo
es
or
xchg
ss
loopne
jb
dec
jl
mov
sar
mov
push
arpl
mov
fwait
shr
inc
iret
mov
adc
mov
push
cmovb
jle
imul
or
cmp
xlat
pop
mov
add
add
or
mov
adcl
ficoml
add
add
lahf
add
addl
push
sbb
das
pop
cmpsb
mov
jo
incl
ret
jns
adc
add
fisubs
fstp
mov
add
pop
stc
mov
mov
adc
xchg
nop
push
or
add
add
adc
out
add
sbb
add
add
xorb
adc
test
and
leave
data16
add
outsb
mov
scas
mov
je
add
in
sub
jecxz
push
cmp
rorb
cmpsb
jp
add
leave
ret
inc
add
out
sub
clc
lret
fidivs
in
add
addb
xor
movsb
xchg
inc
iret
jl
ljmp
mov
test
clc
jb
fstps
xchg
inc
lock
dec
ret
add
pop
push
add
movsl
lds
call
je
sbb
ret
fistpl
add
push
inc
sub
jmp
and
add
hlt
rcrb
pop
mov
push
push
into
orb
test
mov
cmc
pop
add
mov
shr
xchg
push
js
xchg
cmpsl
adc
sbb
cmp
data16
pop
sti
add
cmpsb
jno
jp
adc
inc
imul
jo
inc
or
cmpsb
mov
pmuludq
pop
sbbb
sub
add
iret
out
outsb
or
adc
or
shlb
mov
add
loope
addr16
aad
inc
into
ds
push
add
rcr
cmp
into
cmpl
adc
shlb
inc
sbb
cld
pop
or
das
mov
xchg
and
mov
push
je
cwtl
or
add
dec
lret
shlb
dec
jp
pop
faddp
add
jg
decl
gs
xchg
pop
sub
inc
dec
shl
mov
cmpsl
add
popf
orps
pop
xchg
mov
and
sbb
xchg
jg
and
cltd
mov
cmc
jnp
mov
xor
xchg
sarl
mov
xor
aam
sub
popl
pop
mov
push
lret
pop
shrl
popf
stos
in
pop
fcompl
and
ljmp
add
iret
mov
pop
into
mov
xchg
lods
mov
and
jbe
add
dec
shr
mov
incb
leave
popf
xor
cmp
xchg
add
add
mov
pop
pusha
sbb
sarb
and
mov
pop
ljmp
out
cmp
sahf
aas
add
cmc
leave
xor
and
rclb
push
add
mov
jecxz
add
add
pop
adc
fstps
push
xor
test
andb
pushf
add
sub
pop
sub
jnp
cld
add
xchg
add
mov
lock
in
or
imul
jmp
add
hlt
pop
push
test
mov
int3
stos
inc
fiadds
dec
scas
xchg
jl
cmpsb
test
mov
rcll
add
cmp
mov
xor
jbe
in
int
adc
mov
daa
pusha
lret
test
aas
xlat
adc
push
cltd
out
rclb
addr16
movsl
mov
loopne
and
jno
stc
mov
mov
add
popa
and
mov
mov
pop
mov
adc
lods
pslld
mov
and
cvtpi2ps
xchg
inc
jmp
add
mov
or
push
xor
cmc
sahf
cmp
imul
dec
add
adc
nop
sbb
cld
add
hlt
stc
cmpsl
add
dec
addr16
fs
mov
inc
mov
mov
fnstenv
push
add
mov
out
xchg
add
xor
inc
push
daa
cmp
xor
arpl
jno
mov
scas
mov
add
repnz
mov
lods
sbb
mov
add
and
push
lcall
int3
xlat
mov
sar
add
mov
push
mov
and
ret
mov
mov
inc
xor
add
lods
shl
adc
pusha
sub
in
aad
jmp
faddl
ljmp
xlat
test
pop
rorb
push
aaa
cmp
mov
loope
inc
adc
in
lret
std
adc
mov
sbb
nop
stos
cmp
push
pcmpeqd
dec
and
cmp
add
push
cmp
mov
xchg
mov
and
xchg
xchg
jecxz
stos
add
add
sub
xor
add
into
ret
mov
jo
add
mov
mov
lcall
jnp
iret
inc
imul
hlt
and
add
sti
int
test
in
dec
push
loope
add
addl
mov
hlt
mov
fsub
es
adc
shrb
dec
pop
add
stos
mov
popf
inc
orl
add
out
loopne
cmc
cmp
dec
mov
xlat
sbb
sub
add
je
cmc
ds
in
test
dec
jp
mov
sub
sbb
add
and
push
and
outsl
fwait
dec
mov
push
cmp
jbe
mov
pop
add
jns
dec
popa
lock
or
out
test
scas
add
movsl
loopne
sbb
mov
ljmp
sbbb
and
mov
push
xor
in
rolb
dec
cwtl
add
clc
add
enter
jno
and
std
mov
add
mov
pop
or
or
inc
out
push
dec
add
movsb
mov
pmullw
movsl
shl
outsb
jnp
add
inc
push
pop
add
mov
pop
lret
aas
gs
pop
sub
adc
xorb
pop
add
fptan
jecxz
xchg
lods
aaa
filds
dec
jmp
cmp
into
repz
in
add
mov
dec
cmc
mov
add
fwait
mov
push
add
jo
pop
icebp
cmc
add
add
push
std
push
roll
fnstsw
sahf
xchg
and
negl
mov
xchg
mov
lret
lock
sub
imul
bound
adc
cmp
cltd
lds
and
add
inc
je
add
adc
lods
cmc
lahf
add
or
or
push
push
pushf
pop
add
push
or
push
popa
out
pop
adc
shl
je
mov
das
add
out
mov
add
sub
mov
into
pop
jb
loopne
out
sub
add
jecxz
rorl
jg
add
mov
rcll
add
inc
sbb
push
jmp
add
testb
stos
or
out
adc
lahf
push
jle
stos
movsb
lock
ret
jle
sbb
addr16
push
scas
dec
popa
sahf
mov
in
pushw
fmul
nop
ret
xchg
int
lahf
lock
ret
pop
lahf
or
push
push
test
call
inc
mov
jno
mov
nop
stos
in
lock
add
mov
sbb
jmp
jg
ss
xchg
xor
loope
inc
imul
shll
pop
movsb
scas
insl
add
cltd
mov
hlt
mov
xor
fisttpll
pop
fxch
loopne
pusha
add
mov
cld
jae
cmp
adc
mov
mov
sbb
popl
imul
xchg
scas
ficomps
or
push
pop
dec
test
dec
sub
loopne
repz
cmp
aas
pop
clc
and
pop
loope
mov
outsb
ljmp
fdivr
sbb
or
cmp
imul
fs
sub
mov
and
jl
cmp
ds
mov
mov
cmp
movsl
out
add
and
push
xchg
hlt
jmp
ret
pop
js
add
ja
icebp
adc
popa
int
cmpsb
cwtl
inc
mov
sarl
leave
fwait
push
mov
insl
add
xor
mov
add
jns
call
add
sbb
add
dec
mov
sbb
jb
test
push
add
fildl
pop
push
stos
inc
add
adc
pop
jg
sbb
inc
testl
jbe
gs
mov
add
clc
mov
mov
sbb
push
sbb
insl
rolb
sbb
add
sub
jmp
jge
clc
rclb
stc
add
orb
xchg
mov
add
fadds
push
cmc
loopne
iret
rolb
jmp
fidivs
fbld
add
pop
cmp
sbb
dec
mov
add
push
sbb
or
arpl
xchg
nop
in
xchg
mov
sbbb
sub
out
add
sahf
popf
push
add
outsl
push
cmc
jae
inc
dec
fwait
out
add
mov
sbb
iret
add
xor
arpl
xor
or
add
cmp
aam
add
pop
mov
in
add
mov
sub
add
mov
xor
faddp
lcall
int3
hlt
jmp
ja
lsl
mov
jmp
jmp
cmc
mov
cmp
es
js
add
outsl
imul
out
push
mov
test
cwtl
loopne
in
jb
inc
cmp
dec
cs
or
divb
insl
add
data16
outsl
xchg
mov
pop
adc
sahf
cmp
insl
cwtl
pop
push
sub
ja
call
pop
mov
mov
roll
jmp
cmp
lods
shlb
or
lahf
lret
js
jg
add
push
add
out
add
movsb
push
jns
add
imul
cmp
enter
xlat
mov
fadds
add
push
dec
adc
cwtl
outsl
cmp
xorb
mov
out
ljmp
jns
add
bound
cmp
mov
add
and
add
fdivl
outsl
pop
add
and
aas
add
sub
xor
sbb
call
cmp
pusha
sub
push
add
inc
mov
shlb
fadds
jle
inc
pushf
and
push
cmp
movsb
lret
xchg
into
in
sbb
mov
inc
loope
dec
outsl
cmp
inc
add
addb
xor
daa
push
stos
add
loopne
jecxz
and
push
jp
and
dec
scas
stos
adc
pop
xor
sub
addr16
js
add
mov
stos
shll
xchg
std
outsl
orl
js
add
loop
jbe
dec
ljmp
test
dec
add
pop
decl
add
negl
jne
dec
out
ret
jmp
xchg
sbb
jne
les
rcl
cmp
insb
add
fcoms
mov
int3
cmp
sbb
inc
dec
sbb
add
test
andb
xor
sbb
loop
into
mov
ss
fmuls
mov
cmp
dec
mov
add
xorb
mov
stos
add
lea
pop
shlb
pop
add
pop
jl
lods
mov
rorl
xchg
add
aad
and
mov
xor
and
add
pop
fisubl
pop
mov
xor
xor
mov
dec
mov
mov
dec
in
adc
ljmp
cmp
insb
add
cmpsb
or
punpckldq
sbb
icebp
sub
clc
ret
cmp
loop
lea
add
mov
mov
pop
sub
jno
repnz
add
rol
bound
test
inc
fsubrs
mov
lods
inc
jmp
or
xor
jo
add
push
sahf
add
dec
lret
mov
cli
add
loopne
outsb
pop
mov
dec
imul
fisubl
iret
mov
or
sub
sub
je
xchg
xor
mov
add
rol
pop
scas
xchg
mov
add
mov
pop
xchg
push
shlb
es
add
sbb
insb
pusha
sahf
cltd
add
je
ljmp
pop
dec
pop
push
adc
cmpsl
in
mov
cwtl
dec
add
movsl
mov
push
add
mov
mov
mov
insl
jl
rolb
jge
add
xchg
adc
pop
mov
lods
sbb
adc
les
add
es
jae
push
pusha
jp
push
and
test
jns
add
pop
inc
in
xor
ficoml
mov
je
fs
pusha
ret
add
andb
push
push
mov
hlt
pop
out
nop
xchg
punpckhwd
cs
insb
push
add
sub
and
pop
sbb
or
sbbb
cmp
xor
fistl
lahf
incb
mov
and
mov
jle
add
cli
pop
mov
cmp
gs
loopne
mov
xchg
add
jae
push
cwtl
in
mov
jnp
xchg
ja
pop
add
dec
insl
outsb
shl
xchg
clc
roll
leave
adc
pusha
fwait
mov
push
dec
xor
add
movsb
hlt
mov
inc
add
dec
or
rdpmc
pop
mov
pop
inc
xor
push
repz
mov
jae
iret
jecxz
aas
and
pop
jb
cwtl
aad
push
jns
negl
and
mov
sbb
incl
or
ds
lea
fisubs
add
push
jnp
sub
arpl
inc
ss
out
xchg
cwtl
jb
test
push
or
iret
inc
mov
das
add
xchg
cmp
mov
pop
cld
push
add
push
testl
pop
outsb
add
sbb
imul
lods
ja
mov
push
aas
cmp
mov
bound
cld
sub
cmp
and
add
ret
cmp
mov
adc
lock
pop
aad
sbbb
loop
add
xchg
dec
xchg
add
testb
icebp
test
or
fbld
dec
xor
stos
incb
lcall
add
pop
jmp
xchg
add
xor
add
lret
sbb
lret
rcl
mov
inc
icebp
add
dec
nop
out
push
mov
aam
imul
call
cwtl
adc
lret
jle
add
mov
pusha
loope
and
sub
mov
add
mov
mov
vmread
mov
mov
popa
xchg
jbe
add
out
loop
push
sub
push
inc
push
lret
cmpb
pop
add
sbb
lea
lahf
sub
add
cld
xlat
xorb
aas
cmpsl
popl
roll
inc
pop
lret
out
icebp
imulb
xor
mov
clc
add
shll
cmp
cmpsl
push
add
out
push
cld
rcrb
or
push
add
inc
popa
sbb
ret
add
js
ja
mov
inc
jg
sti
cs
jp
add
mov
fnstsw
push
in
cmp
mov
pop
add
and
lods
in
jnp
mov
pop
addl
or
jge
cmp
add
mov
in
xor
or
and
les
out
adc
mov
and
insl
je
add
subb
xor
adc
adc
adc
test
add
pop
icebp
mov
ds
xchg
add
mov
jno
loopne
cmp
dec
mov
pop
inc
popa
inc
cmovle
fwait
outsl
ret
subb
cmp
cmp
xor
mov
dec
jecxz
out
add
ds
sub
push
add
scas
test
add
push
aad
adc
or
add
lods
rclb
or
lock
test
fdivl
mov
out
inc
sub
add
idivl
fldenv
sti
mov
pop
or
dec
je
mov
repz
jbe
or
sbb
out
add
stos
sahf
sbb
bound
push
jl
addr16
fptan
add
adc
xchg
movsb
dec
or
or
movsl
fsubrs
lret
jmp
add
or
int3
test
push
sbb
loop
imul
mov
lock
xorb
xchg
jl
mov
push
addr16
push
add
pop
mov
jge
add
push
rcrl
rolb
mov
mov
pop
hlt
in
add
adc
jle
movsl
jecxz
mov
das
push
mov
xorb
push
cmp
loope
mov
loopne
sti
mov
mov
je
mov
aam
mov
add
arpl
es
mov
mov
push
outsb
sbb
mov
jno
cmp
ret
jmp
data16
push
xor
mov
hlt
int
inc
fcoms
int3
sbb
sub
cmp
stc
add
fnsave
loopne
pop
add
test
scas
cmp
add
testl
movsl
xchg
mov
push
pop
add
pop
loop
call
imul
adc
mov
test
fcoms
cmp
lock
mov
cld
add
push
mov
add
inc
jb
cld
call
loop
mov
mov
daa
jp
outsb
inc
add
jbe
ds
sub
out
jb
adc
div
pop
add
adc
mov
rclb
cwtl
ds
mov
mov
outsl
hlt
bound
sbb
packssdw
sub
add
ret
test
mov
clc
out
xor
add
inc
cmp
sahf
xor
inc
jbe
xchg
mov
sbb
and
je
xor
add
and
cmc
add
xchg
aam
dec
and
add
pop
jbe
jge
into
std
in
ds
mov
jno
add
cmp
popa
sbb
jo
mov
push
stos
testl
das
dec
add
push
inc
inc
push
shrb
rcl
cmpxchg
adc
mov
ret
sub
add
add
xchg
xchg
movsl
dec
jnp
add
and
pop
inc
insl
add
icebp
inc
adc
test
or
add
jg
sbbb
roll
imul
or
out
or
out
aaa
shll
cltd
dec
jp
or
sbb
int
out
lret
lods
and
pop
mov
mov
jb
adc
sbb
adc
iret
outsb
nop
mov
add
jmp
test
leave
cwtl
out
loopne
jno
nop
add
and
add
scas
push
xlat
add
xchg
in
test
mov
enter
xchg
sub
jno
or
inc
dec
repnz
push
lock
mov
pop
pinsrw
pop
add
in
cmp
xor
xor
pusha
stc
rcr
or
jnp
mov
fists
pushf
mov
jbe
inc
sbb
out
insb
fidivrs
aad
xor
popf
sbb
daa
js
add
sub
enter
iret
add
cmp
arpl
mov
mov
push
das
call
xorb
lcall
iret
pusha
pop
mov
xor
jno
add
jns
push
dec
sbb
call
and
sub
push
enter
flds
sub
adc
and
push
insb
dec
mov
aad
in
push
jno
add
cld
ds
inc
cmp
js
scas
dec
mov
xbegin
flds
or
mov
movsb
xchg
popa
idivl
dec
sbb
sbb
int
cmpsl
iret
lock
cmp
pop
push
inc
sub
orl
jle
xorb
cltd
add
inc
aam
sbb
lods
rclb
arpl
lret
movsl
pop
outsl
imul
movl
rol
jne
shr
pop
incb
in
mov
cltd
andb
stos
sbb
mov
push
xchg
roll
sbbl
xchg
mov
ss
mov
jl
clc
enter
mov
adc
or
insb
imul
pop
ss
mov
mov
aad
xlat
jmp
bound
add
negb
lods
mov
mov
mov
adc
lcall
insb
add
xchg
lds
mov
inc
jl
xchg
pop
sub
sbb
mov
add
xchg
loope
adc
push
add
fldcw
pop
mov
add
popf
mov
adc
xor
aaa
sbb
mov
stos
adcl
clc
xchg
and
xchg
dec
sub
loopne
inc
addr16
jle
insl
pop
adc
leave
cmpsb
test
pop
push
popa
sbb
push
ret
pop
stos
gs
push
sahf
adc
out
mov
cli
fnsave
add
shll
nop
sub
fsubl
mov
xor
je
inc
add
les
dec
dec
mov
add
in
lea
loop
call
jo
orb
xlat
xchg
pop
addl
cmp
mov
cli
cltd
adc
imul
fwait
push
in
lods
jae
test
shl
jb
hlt
sbb
push
dec
add
lcall
add
int3
mov
fwait
scas
testb
pop
aas
and
pop
std
cld
push
adc
jbe
push
mov
mov
pop
stc
inc
add
xchg
test
adc
and
jl
adc
sti
es
in
test
xchg
inc
add
add
and
cmp
add
xor
dec
sub
les
addr16
add
stos
push
sbb
rcrl
outsl
repnz
shl
fldl
sbb
int3
daa
cmp
push
add
cmc
hlt
add
dec
clc
pop
xor
inc
dec
bound
int3
in
adc
pop
sub
pop
xchg
push
push
insl
add
addl
jo
add
and
mov
std
dec
add
lcall
pop
sub
pop
pushl
add
ds
add
sbb
je
iret
cmp
data16
fwait
add
aam
add
bswap
push
loope
push
push
add
outsl
int
popf
dec
mov
dec
mov
icebp
test
xchg
call
aaa
ror
out
add
sarl
das
fbld
movl
imul
inc
mov
movsl
fs
and
sbb
js
loopne
dec
and
sub
cwtl
pushf
sbb
xor
loopne
dec
add
lock
notl
out
push
ret
imul
push
jmp
cmp
rolb
push
xchg
pop
jg
cmpsl
ljmp
add
fucomip
imul
test
rorl
add
imul
jnp
clc
cmp
pop
test
xor
cmp
pusha
cmp
cwtl
repz
pushf
push
and
imul
jnp
xor
test
ret
xchg
cwtl
adc
ljmp
push
in
mov
scas
test
mov
bound
lds
fcomps
cmpsl
xchg
pop
loopne
jecxz
cmp
outsb
ljmp
add
imul
xor
not
add
cmp
test
adcl
mov
mov
pop
add
ljmp
lahf
sbb
out
xchg
sub
jg
cmp
push
jb
add
mov
rolb
dec
xchg
movsl
repz
cmpsb
es
ltr
ja
mov
ret
pop
and
loopne
dec
scas
aaa
add
movsl
xor
dec
mov
jo
clc
js
add
fs
test
add
or
pop
push
lds
pop
ffreep
mov
setge
and
push
adc
mulb
sub
dec
mov
xlat
roll
mov
fst
adc
add
pusha
mov
aam
add
ficompl
pop
push
subb
cs
ljmp
lahf
cmpsl
pop
jl
sbb
mov
scas
cmp
dec
and
dec
sbb
or
stos
pop
cmpl
or
nop
jge
cwtl
out
loop
xchg
es
aas
add
add
sbb
rclb
inc
call
ret
sahf
inc
mov
and
ljmp
add
sbb
dec
jge
cmp
push
push
fldcw
add
test
add
cmp
pop
fistl
jl
bound
sub
add
fs
push
repz
or
fimull
rcrl
fisttpl
popf
orb
pop
push
inc
rclb
fstps
pop
add
xor
add
andb
push
pop
xchg
cmp
add
inc
mov
arpl
pushf
leave
fldl
je
pop
sbb
pop
test
pop
jo
loope
or
call
out
jb
sbb
mov
js
push
push
xor
add
test
ret
and
add
sub
clc
add
xchg
push
dec
inc
cmp
add
iret
adc
out
adc
dec
xchg
xor
sbb
jge
loope
mov
sbb
cmp
lcall
cmp
xchg
add
pushf
lret
jmp
cld
mov
push
cmpb
inc
test
pushl
sarl
xchg
jb
mov
push
enter
mov
test
fistpll
add
xor
jo
lret
in
subl
pusha
push
cmp
roll
in
cltd
loop
pop
xor
adc
les
xchg
fincstp
in
add
int3
sbb
cs
pop
sbb
jle
and
std
xchg
fidivl
mov
sub
loopne
xchg
pop
xchg
test
cli
mov
add
ds
stos
sbb
mov
mov
mov
pop
adcb
add
iret
stos
dec
add
aas
test
sbb
enter
adc
inc
add
pushf
dec
lds
mov
jo
insb
ja
push
jnp
cwtl
mov
adc
add
mov
inc
movsb
xorl
lods
dec
stos
pop
mov
jl
dec
je
cltd
push
add
cs
out
in
mov
rcl
pop
cmp
in
add
add
xchg
cmp
out
add
adc
shrl
or
cld
jmp
inc
inc
lahf
add
pop
fdiv
push
stc
push
out
jns
add
popf
pop
xor
add
leave
out
push
inc
movsl
xor
test
add
xor
lahf
add
nop
das
or
xor
xor
pop
shlb
mov
lea
add
stos
pop
mov
cmp
xchg
add
push
imul
pop
testb
xlat
out
cmp
fiaddl
jmp
movl
and
dec
ret
out
lock
pushf
test
xlat
add
mov
sub
out
dec
add
inc
fistpl
scas
inc
lret
inc
fstp
or
out
cmpb
jl
outsl
xchg
loope
cli
test
insl
push
pop
enter
sub
adc
xor
dec
fdivrl
je
lea
xchg
pop
add
adc
mov
mov
in
mov
sbb
lock
rep
stos
add
pop
cltd
inc
sarb
add
outsb
icebp
rolb
or
fldcw
cmp
lcall
sub
xor
clc
dec
inc
rcll
call
or
push
sbbb
xadd
fdivrl
dec
mov
or
cmp
cmp
cltd
push
sbb
sbb
sarl
mov
stos
stos
jbe
mov
add
movsb
movsl
xchg
dec
bound
dec
mov
mov
insb
ljmp
lahf
add
test
divl
sub
mov
add
add
in
dec
mov
or
dec
dec
lcall
lods
imul
in
es
ss
pop
jp
push
jle
add
rorl
out
and
mov
movsb
popa
mov
aaa
lahf
es
and
add
movsl
icebp
jno
out
cmp
cmp
ficomps
cmpsb
test
in
xor
xor
lret
lods
out
mov
xchg
jg
adc
shlb
fstpt
mov
cmp
enter
jo
add
aas
pop
loopne
pop
stos
and
dec
push
test
mov
mov
add
or
cmp
sub
mov
mov
std
jg
mov
push
mov
add
inc
add
cmp
outsb
add
rcrb
fmuls
je
mov
inc
rcrb
or
add
loope
inc
repnz
enter
in
aam
xlat
pusha
lret
pop
jb
movsb
es
jbe
xchg
jmp
add
dec
push
addb
rclb
das
add
je
dec
xor
es
andl
xor
jmp
xchg
into
pop
push
mov
dec
pop
cmp
xchg
mov
mov
shrb
or
push
jno
ss
insb
sub
call
addb
fistps
mov
mov
stos
inc
mov
pop
hlt
mov
nop
xor
outsl
cmc
dec
xchg
sbb
outsb
vmwrite
bound
xor
int3
lcall
stc
mov
pop
cmp
mov
repz
pop
jo
push
cld
adc
ret
sbb
add
xchg
lds
fidivl
sbb
fstp
add
pop
test
ret
add
out
mov
cli
scas
mov
inc
sbb
subb
lret
dec
int
pushf
pop
mov
lcall
in
sbb
ja
roll
stos
pop
daa
mov
call
jecxz
add
in
jle
jo
xchg
div
mov
add
sbb
jp
std
inc
in
clc
push
lea
ror
dec
push
fsubp
sub
fstpl
add
pop
xchg
cmpsb
out
sbb
mov
inc
add
imul
sub
pop
xor
orb
loope
add
out
mov
flds
xchg
jnp
mov
sub
loop
inc
sub
add
mov
xchg
mov
add
es
outsb
or
rolb
out
loop
idiv
inc
add
arpl
fcomip
loopne
in
add
test
pushf
sbb
hlt
ds
mov
faddl
addr16
ret
add
imul
rorb
adc
add
inc
ljmp
popf
mov
enter
les
pop
sti
jno
stc
add
pop
movsb
nop
pop
xchg
add
sbb
rol
dec
mov
jnp
mov
ljmp
cmp
inc
stc
jp
inc
les
xor
in
pop
ret
test
lock
jo
std
add
aad
xchg
add
stos
in
push
or
shrl
add
js
push
pusha
mov
fsubl
add
xchg
xor
aas
jecxz
loope
and
jbe
add
push
fmull
out
add
int
add
push
inc
push
clc
or
cmpsb
and
adc
cwtl
cld
cmpsl
or
inc
jb
rclb
mov
fwait
ja
cwtl
js
xchg
add
mov
out
sbb
push
mov
adc
pop
pop
shll
mov
fcmovne
out
push
xor
mov
ljmp
add
push
adc
scas
lock
mov
flds
and
stos
add
int
fwait
js
xor
ret
adc
add
out
mov
add
sti
popa
xor
lcall
xlat
sbb
ret
stos
pop
adc
shlb
add
stos
jmp
cmc
add
sbb
pop
out
add
mov
pop
js
add
pop
sbb
test
push
mov
loopne
leave
mov
popa
sarb
add
test
orb
lock
add
dec
pushf
aad
call
loopne
jmp
push
and
jae
shlb
add
dec
inc
aas
fwait
popf
divl
popa
add
push
mov
loopne
lret
cld
clc
jno
xchg
sbb
xlat
imul
xor
push
add
xor
mov
cmpsb
add
mov
jle
add
dec
roll
add
and
mov
sbbl
jns
add
and
push
add
sbb
rol
and
sbb
push
dec
and
add
stos
xor
clc
inc
testl
jle
inc
xchg
pop
ss
mov
loopne
outsl
int3
add
add
ret
sti
add
pop
add
xchg
es
fildll
add
pop
in
dec
pextrw
cwtl
jle
add
cmp
add
sbb
or
addr16
adc
cs
dec
and
int3
xor
fsubp
adcb
or
idivb
jl
push
enter
add
cmpsl
fcmovne
mov
mov
addb
ss
and
or
ret
cs
add
mov
xchg
add
xor
cmp
add
sahf
mov
cmp
jnp
pop
sbb
mov
ja
xlat
jnp
inc
dec
pop
shll
and
jmp
xchg
rolb
push
inc
add
jmp
push
aaa
add
dec
sahf
fcompl
or
push
xor
mov
pushf
test
push
xchg
xchg
into
nop
das
pop
sbbl
lret
jbe
add
ficoml
add
rorl
add
in
or
push
shlb
inc
es
sarl
pushf
mov
add
dec
adc
add
add
add
jl
in
jno
pop
push
and
mov
gs
test
stc
fildll
out
xchg
fcoml
cmp
add
push
cmpsb
push
cltd
lahf
add
mov
or
movsb
testb
ror
jge
add
aaa
xor
add
inc
js
add
rorb
pop
stos
adc
fldenv
pop
pusha
cmp
jb
and
out
add
pushf
and
add
lea
mov
pop
sbb
enter
lods
push
and
les
and
jae
mov
ret
add
inc
repz
dec
mov
fdivrl
mov
faddp
push
mov
pop
adcl
add
stc
fs
sub
dec
adc
and
adc
sub
lahf
add
and
dec
jb
fwait
add
mov
xchg
adc
movsl
sub
and
cmp
mov
xor
pop
and
add
pop
fists
add
push
mov
add
inc
mov
sti
jecxz
mov
push
testl
add
or
popf
mov
ret
dec
out
int
in
fidivrs
add
jno
dec
add
das
pop
mov
nop
mov
xor
and
pop
jae
fildl
xorl
add
pop
cmp
xchg
shl
cmpsb
sbb
pop
loopne
xor
lods
pushf
mov
pop
imul
mov
sbb
add
in
jecxz
sub
mov
fwait
int3
loop
mov
sub
mov
filds
ret
std
stos
xor
pushl
stos
add
and
xchg
lods
mov
lahf
add
jb
fwait
add
arpl
add
push
sbb
dec
inc
add
bt
fmuls
sti
mov
inc
add
sub
dec
add
pushf
add
mov
add
fistpll
repz
sti
loope
nop
dec
add
mov
rcrl
or
lods
pop
pop
outsb
add
std
fiadds
mov
add
or
int
add
mov
addl
movsl
mov
jae
cltd
test
mov
pop
pop
aas
push
cwtl
shll
mov
and
pop
mov
fsubrl
xor
lret
mov
and
push
mov
pop
add
mov
sbb
mov
hlt
add
fcmovnu
bnd
add
sbb
shlb
add
mov
stos
scas
mov
cmp
gs
in
pop
cmp
jge
sbb
xorb
sbb
repnz
cmpsb
sahf
cltd
nopl
xchg
mov
push
adc
filds
std
xchg
cmp
popf
and
xor
sub
add
pushl
xor
jle
pop
sti
adc
mov
pop
div
mov
dec
repz
and
add
add
mov
jp
mov
daa
pop
in
cs
adc
andb
push
xchg
mov
frstor
mov
cmpsl
popf
or
rolb
es
cld
mov
cmp
cs
fsubrl
fcmovne
add
mov
pushf
lea
rol
add
adc
and
cmpsb
jp
add
lds
or
xchg
scas
mov
lods
add
pop
outsb
shl
mov
lods
btc
lahf
ret
aas
int3
add
in
stos
dec
lcall
test
lock
sbb
mov
cmpsb
cmpsl
and
es
test
lret
and
xchg
lea
mov
dec
sbb
mov
inc
lock
cs
add
es
add
andl
adc
call
out
mov
or
add
cwtl
sti
xchg
les
dec
xor
hlt
add
sub
adc
stc
jnp
call
cli
sbb
out
push
subl
test
dec
lcall
push
aam
mov
lods
ret
in
cwtl
jbe
pop
jb
icebp
sub
xchg
aaa
aam
and
add
sbb
inc
or
out
push
sub
mov
dec
into
dec
add
aad
pop
and
add
mov
add
mov
pop
add
lods
add
mov
lret
jecxz
cmp
mov
cmp
adc
scas
adc
add
dec
test
and
and
add
call
jae
and
push
aas
mov
pop
movl
pusha
bound
mov
sbb
mov
mov
inc
mov
xor
inc
mov
sbb
sub
adc
stc
repnz
cmp
lods
add
in
loop
mov
stos
add
pop
pop
shrb
lods
add
ret
cmp
sbb
mov
add
inc
lcall
test
aam
mov
int3
mov
cli
in
das
add
mov
out
push
cmp
orb
pop
outsl
movsb
int3
add
cmpsb
jne
xlat
adc
fadds
dec
pop
add
jbe
add
fbld
push
mov
cmpsb
adc
lock
vmread
sbb
inc
adc
ret
clc
push
inc
fidivl
cmp
pop
xor
dec
mov
mov
dec
ljmp
out
push
jmp
cs
scas
jle
cmp
add
or
jb
aaa
or
push
jg
pop
xor
xchg
popl
add
mov
cmp
add
mov
in
add
shrl
arpl
and
nop
loop
or
ljmp
mov
negb
jmp
inc
bound
loopne
add
pop
jle
int3
test
call
mov
mov
ljmp
jp
fs
jmp
icebp
xchg
or
add
push
xchg
pop
mov
sbbb
sub
add
inc
sbb
pusha
push
add
jl
aas
cmp
stos
sub
add
cwtl
lcall
add
add
add
jmp
daa
js
add
jmp
fildll
pop
rcrb
jp
jp
jle
lret
adc
loope
or
lock
fwait
or
xchg
insb
xchg
addl
inc
cmc
js
lock
je
pslld
xor
hlt
push
mov
and
loope
icebp
lods
or
shlb
jp
adc
or
pop
mov
or
inc
adc
jnp
add
sub
jns
mov
cmp
push
inc
ljmp
add
lea
ret
sub
inc
sub
add
inc
mov
test
sbb
adc
mov
adc
push
inc
bnd
add
je
icebp
les
lret
adc
pop
nop
mov
inc
jp
jo
mov
fbstp
inc
mov
inc
xchg
or
mov
push
adc
fsubrs
hlt
test
hlt
xchg
jne
or
push
jno
jno
inc
jo
sub
sub
xor
insb
loop
leave
cmp
cmp
hlt
or
lcall
xchg
add
add
xchg
mov
test
ret
cmp
in
inc
pop
dec
sbbl
mov
adc
pop
or
push
and
aas
jp
add
xor
cmp
rolb
shlb
aaa
add
xchg
lea
xchg
clc
repz
in
sub
inc
mov
pop
mov
aas
fiaddl
xchg
mov
mov
or
jp
sub
mov
pop
lock
cmpb
sub
addr16
stos
inc
jb
jae
jl
pop
add
hlt
cmp
adc
cmp
dec
xchg
cs
push
cld
add
mov
cmp
xor
mov
test
xchg
cmp
cmc
sub
cmp
cltd
or
mov
jne
add
std
adc
mov
adc
jle
add
or
cmpsb
sub
add
jns
repz
mov
iret
repnz
xor
testb
rol
jge
add
cwtl
mov
je
jmp
dec
rol
je
cmp
xchg
pop
ret
movl
sub
sbb
scas
sub
and
pop
pop
add
or
loopne
nop
addr16
push
testb
addr16
cmp
jns
inc
js
inc
scas
arpl
sub
aas
loopne
push
inc
sub
jb
and
pop
mov
push
fsubr
cmp
jle
add
mov
sbbl
add
push
pop
bound
jae
xor
test
mov
or
icebp
add
mov
add
ficoml
adc
popa
sub
je
cmc
jne
lock
jmp
dec
loopne
mov
add
out
xchg
adc
jmp
jmp
ret
in
and
pop
cmp
test
inc
popa
xchg
jne
cmpsl
or
mov
inc
sub
ljmp
add
pop
mov
sub
es
lcall
sbb
push
and
jmp
xlat
cld
add
sub
add
movzwl
les
sbbb
mov
lods
adc
push
in
jno
stos
fidivl
cltd
or
ss
int3
es
stos
cld
cmp
stos
sub
jg
inc
loopne,pt
mov
adcb
inc
in
jnp
xchg
add
adc
lahf
rol
push
jb
clc
push
pusha
ret
adc
ss
adc
lret
cmp
cld
dec
cmp
aas
cltd
cld
add
repnz
fs
std
inc
aaa
sub
and
xchg
dec
mov
jns
push
mov
arpl
push
mov
imul
ds
ja
scas
es
inc
jp
jmp
mov
and
adc
lods
nopl
mov
jmp
test
sub
ds
jl
add
test
cli
mov
jne
push
sbb
lea
jo
or
scas
push
jl
pusha
aas
push
mov
inc
mov
add
lds
aad
in
mov
cmp
dec
ret
and
adc
int3
xor
popa
rorb
rolb
pop
pusha
inc
push
add
jg
xchg
call
cmp
loopne
pushf
pop
les
xor
jl
fistl
adc
jnp
fsub
outsl
and
pop
adc
jp
js
inc
jle
add
inc
or
nop
loopne
or
clc
roll
inc
enter
js
outsb
xchg
push
dec
inc
jnp
add
cli
cs
sbb
mov
jle
push
mov
adc
out
mov
mov
adc
sub
mov
jo
xor
xchg
dec
inc
out
mov
sti
aad
push
push
jg
shlb
cmpb
int3
lods
inc
data16
add
adc
cmp
addb
cld
hlt
xchg
pop
jg
cmc
lcall
insl
push
jo
and
adcb
jle
and
repnz
add
inc
mov
adc
into
in
test
fcoml
cmp
push
cmpsl
icebp
lock
ljmp
enter
enter
or
mov
in
mov
mov
or
push
add
dec
pop
std
inc
cmp
and
stos
adc
in
sbb
rcrb
into
inc
push
jnp
jae
pop
mov
jp
jnp
add
test
push
cs
aam
pop
mov
sbb
mov
insb
loop
dec
fisubl
jb
or
fcoms
cmpsb
clc
js
fs
dec
inc
jle
cli
dec
mov
push
inc
fistl
jne
and
data16
cmpsl
add
mov
cmpsl
cmc
add
aad
cmp
mov
cmpsl
mov
cmp
xchg
movsb
fsubp
cmp
push
test
xchg
inc
jle
add
mov
mov
xchg
xchg
sbb
fwait
sub
inc
pushf
in
cmpsl
sub
ss
nop
add
lret
add
jmp
cld
cmp
mov
mov
inc
imul
stos
xchg
xor
push
inc
lods
nop
adc
or
inc
and
pop
cmpb
sbb
out
sub
ficompl
sbb
inc
cmp
in
pusha
add
adc
cmc
mov
clc
add
mov
push
or
ret
in
and
icebp
iret
adcl
mov
cmp
in
push
imul
add
nop
inc
aas
fistpll
xchg
pushf
imul
sub
dec
mov
jno
js
call
pop
and
cmp
or
xchg
lock
dec
add
pop
xchg
cmpsl
inc
out
cs
or
jmp
sub
es
mov
mov
movsl
adc
pop
push
add
jmp
mov
popa
ret
sub
xchg
aas
stc
aad
es
cmp
cld
xor
push
cmc
inc
pop
cmc
andb
mov
cmp
dec
ljmp
pop
push
add
dec
mov
or
inc
xchg
adc
ds
pop
dec
pop
lret
insl
adcb
into
pop
jmp
pop
ljmp
mov
xchg
mov
adc
pop
mov
mov
pop
xchg
sti
jl
jne
mov
pop
aas
addl
sub
add
rcrb
add
lds
xor
mov
aad
add
fldt
jg
add
mov
mov
push
notb
icebp
lods
addb
insb
cmpsl
stos
bound
sbb
cmp
cld
or
fsts
add
sti
and
push
aam
ds
add
inc
in
lret
dec
mov
out
std
loopne
iret
lods
fs
inc
loop
ds
xchg
mov
orb
mov
fld
leave
icebp
sbb
fadd
add
rcl
adc
mov
mov
dec
data16
or
inc
aad
arpl
in
add
sub
out
add
lahf
mov
pop
push
jl
insb
cs
or
xchg
repnz
dec
daa
cmp
ds
or
or
or
in
add
pop
xchg
mov
sti
sbb
ret
jo
mov
sbb
sahf
add
dec
dec
iret
mov
test
jecxz
lret
add
ficoms
sarl
aas
mov
shl
lcall
jle
bound
ds
pop
lret
and
testl
add
ret
loopne
and
ror
gs
mov
jge
lretw
xor
loopne
in
lahf
mov
and
dec
and
out
outsb
shlb
mov
iret
cli
shr
and
sti
sti
xor
xchg
push
add
mov
mov
xor
dec
add
mov
iret
cmpb
mov
jg
add
sub
xchg
outsl
xchg
adc
ss
add
sub
add
add
and
cld
pop
out
cmp
ror
test
add
lds
and
sub
call
pop
add
jmp
push
les
sub
fcompl
test
inc
cmpsl
xor
arpl
fcoms
and
pop
ret
rcll
leave
out
aad
test
lea
cmp
mov
push
mov
sbb
adcb
pop
add
jo
lea
fildl
push
or
xor
xchg
popa
aaa
adc
xor
adc
lock
dec
inc
cmp
orl
inc
scas
push
icebp
or
pop
pop
xchg
nop
or
pop
sbb
pop
push
and
dec
test
cmpxchg8b
sbb
push
sbb
mov
mov
pop
int
mov
les
imul
int3
popa
insl
icebp
leave
jne
je
bound
inc
outsb
out
jns
icebp
hlt
push
imul
or
sub
test
popa
inc
or
shrb
insb
inc
adc
loopne
mov
loopne
lret
adc
inc
test
cmp
pop
gs
cmp
add
movsl
dec
cmp
adcb
or
push
inc
push
mov
nop
sub
iret
jne
