xchg
cmpsl
xchg
cltd
clc
popf
mov
sbb
cmpsl
jle
mov
mov
cmpsl
mov
sub
jl
jmp
aam
int
fidivs
enter
and
xchg
add
jb
arpl
mov
jp
sub
pop
xchg
jle
or
dec
mulb
ljmp
hlt
ss
hlt
aas
sahf
gs
jge
and
divl
aam
or
imul
pop
mov
leave
adc
cmp
sub
iret
aam
inc
aad
aam
cmp
mov
xchg
mov
out
sbb
daa
lcall
cmp
jg
dec
cmp
cmp
and
cmpsb
imul
filds
ljmp
cmp
cmp
add
daa
fimuls
fmulp
push
jbe
xchg
test
add
notl
sar
lods
out
mov
cmp
mov
popa
cmc
mov
mov
jecxz
dec
jb
loop
nop
mov
mov
aas
jmp
enter
data16
add
into
cmp
jle
push
int
xchg
in
popf
mov
jecxz
adc
imul
nop
gs
aad
in
fnstsw
scas
pop
xchg
jb
repz
push
jle
in
sub
sub
insb
in
inc
cmp
adc
popa
cld
cmp
cmpsb
sbb
cmp
fdivs
movl
popl
dec
movl
pusha
call
mov
popl
ret
in
xor
fimull
cmpsb
stos
cs
decb
test
pusha
adcb
mov
xor
mov
leave
fnstcw
clc
shll
ja
stos
scas
sti
sub
imull
and
cmpsb
inc
ss
iret
mov
clc
scas
repz
or
in
push
mov
xor
es
add
popf
shll
mov
pop
cmpb
push
jp
aam
jb
mov
sub
mov
push
adc
jns
jle
and
pop
dec
jmp
in
mov
push
or
xor
aas
daa
pop
mov
pop
cmp
push
aam
jne
adc
sub
dec
jnp
imul
out
adc
jne
inc
push
sub
imull
sub
dec
sbb
fidivs
lret
mov
aaa
addl
xor
sub
popa
mov
push
loopne
and
push
push
mov
push
rcll
pop
dec
xchg
iret
add
lahf
add
stos
cwtl
in
test
mov
mul
iret
mov
jmp
adc
xchg
dec
sub
nop
out
mov
and
mov
sbb
es
hlt
aad
in
sbb
test
and
xor
lods
pop
and
in
lahf
rcll
and
mov
inc
mov
imul
scas
call
sbb
test
inc
mov
xchg
or
mov
es
xchg
add
sub
and
inc
ds
imul
cmp
into
jne
mov
xor
roll
movsb
stos
mov
inc
add
xchg
bound
std
lahf
pusha
lock
fdivs
pop
jmp
adcl
mov
loope
adc
xchg
inc
mov
pop
lods
and
push
pop
cmpl
cs
rolb
jo
sar
ljmp
popa
inc
cmpsl
dec
in
pop
mov
sbb
xlat
pop
ss
inc
iret
test
add
or
addr16
add
das
or
jecxz
xchg
pop
cmp
jo
cwtl
dec
ret
pop
inc
and
inc
sub
lret
loope
dec
pop
push
shlb
push
inc
inc
xchg
les
cwtl
dec
mov
mov
enter
adc
out
popf
into
loope
leave
mov
sub
out
out
and
mov
xchg
xchg
cli
es
repnz
jge
sbb
pop
jmp
and
mov
push
int3
ds
jne
aad
inc
dec
addr16
jmp
push
inc
lea
or
ret
call
cmp
lcall
push
push
adc
aad
push
fimuls
xor
xor
mov
ds
cmp
xchg
sub
adc
mov
xor
xchg
pop
dec
xchg
add
rorl
das
rcll
mov
arpl
or
lahf
pushf
xchg
cmp
inc
js
xchg
popf
test
jbe
mov
cmp
push
cmp
sub
jae
xlat
adc
sub
cmc
mov
pusha
dec
push
sub
stc
xchg
pop
push
les
mov
fsubl
test
flds
jns
lods
mov
test
and
or
jge
mov
sbb
sbb
repnz
pop
aam
mov
adc
adc
hlt
dec
or
js
shlb
sub
cmpsb
popa
lcall
xlat
inc
cs
jne
fiadds
stos
aaa
gs
inc
mov
rorb
adc
or
cmp
adc
std
and
adc
dec
mov
inc
ret
sbb
ds
and
shll
xchg
lcall
lock
mov
push
lods
jns
mov
repz
out
jne
cld
lods
mov
mov
test
enter
jp
jo
test
nop
push
push
push
push
lea
push
push
push
push
push
rol
pop
push
mov
pop
sar
push
push
push
mov
pop
pop
pop
xor
clc
push
pop
push
push
pop
cmp
je
cmp
jne
int3
test
loop
pop
shl
stc
shr
add
nop
test
stc
stc
and
mov
jle
xor
mov
loop
jecxz
sub
mov
mov
push
sti
xor
das
pusha
in
rcll
push
push
pop
cmp
je
cmp
jne
int3
je
stc
clc
jae
push
push
push
pop
pop
pop
stc
jbe
push
add
clc
add
js
push
and
pop
cld
clc
loop
pop
xor
stc
push
inc
dec
pop
add
mov
and
nop
mov
jmp
xlat
xchg
clc
mov
fldcw
adc
pop
push
jno
and
sub
jmp
inc
cmp
inc
lock
mov
xchg
and
push
mov
add
jle
popa
xor
cmp
insb
faddl
call
imul
movaps
pop
add
add
idiv
call
dec
add
add
xchg
les
jo
adc
and
inc
repnz
cmp
lcall
cld
iret
imull
sub
mov
sbb
mov
adc
jbe
mov
shlb
mov
dec
dec
dec
pop
mov
push
add
pop
mov
add
push
add
nop
sub
push
push
push
push
lea
pop
pop
pop
pop
and
cmc
and
nop
cld
test
stc
stc
push
add
push
pop
pop
test
jo
jge
cmp
push
call
insl
xchg
outsl
adc
stos
push
inc
stos
ret
in
stc
enter
dec
push
or
push
xor
xchg
push
add
xchg
xor
mov
mov
movsb
pop
pop
mov
xchg
loop
jecxz
adc
icebp
xor
test
leave
lods
xchg
sbb
inc
jno
insb
or
rorl
pop
push
xlat
mov
cmp
inc
leave
jne
xor
fwait
cmc
jecxz
lcallw
popf
daa
mov
and
icebp
cmp
xchg
cwtl
and
ret
or
xor
mov
mov
xchg
pop
push
js
jns
add
pop
push
add
pop
push
xor
pop
loop
jecxz
sti
lret
dec
fdivs
jl
test
jle
or
test
enter
sub
jne
jns
cmp
push
push
push
or
pop
pop
pop
cmp
push
call
mov
mov
sub
shll
outsb
cmp
ret
add
pop
lea
mov
shr
push
or
pop
push
push
and
pop
pop
cmp
jo
js
push
mov
pop
mov
push
add
mov
shr
test
je
and
push
js
and
pop
jmp
adc
sarl
in
icebp
push
mov
sti
movsl
cs
imul
int
mov
outsb
dec
mov
pop
xchg
sub
mov
fidivs
pop
movsb
jbe,pt
adc
mov
leave
cmp
jg
and
inc
add
jl
and
fistpl
inc
xor
push
mov
add
pop
loop
jecxz
in
test
mov
cmc
xchg
fs
js
and
ffree
or
stos
test
ret
lcall
sbb
in
fists
insb
jno
dec
inc
pop
jl
aad
leave
ret
aas
dec
add
rorl
sbb
call
jle
jb
les
push
pop
push
cmp
cmp
movsb
cli
outsb
sbb
adc
cli
mov
pop
pop
xor
push
mov
pop
loop
jecxz
cwtl
fs
mov
sub
and
add
das
pop
xchg
xchg
lock
mov
dec
mov
adc
sahf
mov
stc
ja
mov
inc
jb
enter
push
fdivrs
jge
jle
xor
cmp
nop
cmc
mov
inc
inc
inc
inc
jge
clc
clc
nop
push
push
pop
add
pop
push
movzbl
nop
je
and
jl
jge
jle
sar
xchg
and
push
push
push
sub
pop
pop
pop
push
jno
add
pop
push
je
or
pop
push
shr
pop
sub
clc
jnp
add
jnp
push
add
jg
push
rol
pop
test
clc
push
cmp
pop
push
push
pop
pop
clc
loop
pop
test
push
inc
pop
loop
jecxz
mov
lahf
in
shll
mov
pusha
aas
out
outsl
dec
addb
les
pop
clc
cld
jo
test
nop
nop
rol
dec
jne
loop
jecxz
loope
fldlg2
insl
aam
in
push
inc
inc
push
rol
pop
jb
push
push
xor
pop
pop
loop
jecxz
aaa
inc
loop
jecxz
sbb
xchg
or
cmp
or
sbb
popf
sbb
jo
mov
xchg
xchg
mov
push
pop
scas
xor
xlat
xor
jae
das
in
push
cmp
enter
xor
jae
cmp
arpl
inc
mov
hlt
mov
and
mov
pop
jno
mov
xchg
pop
cmc
mov
andb
ss
hlt
fs
jns
jecxz
xchg
cmp
push
cmp
xchg
imul
imul
imul
cmp
xchg
icebp
cmp
sbb
bnd
testb
ljmp
add
ret
orb
pop
bound
adc
std
pop
and
fstp
xor
pop
imul
sub
gs
repz
stc
pop
loope
mov
sbb
shll
icebp
mov
mov
cld
lock
push
ja
test
pop
loop
jecxz
insl
pop
out
sti
es
movsb
xorb
fwait
cmpsl
mov
insl
repnz
sub
mov
jecxz
dec
xlat
xchg
xchg
loopne
gs
in
add
cmp
lcall
mov
mov
inc
test
xor
xor
mov
das
dec
pop
cld
sbb
popf
xor
pop
or
cmp
dec
or
adc
jecxz
sbbl
pop
sbb
cmp
das
or
mov
ljmp
mov
xchg
andb
jo
lcall
or
push
push
shlb
and
push
popf
xchg
sub
jecxz
cltd
dec
cltd
or
pop
jle
imul
cmp
inc
mov
xchg
ds
out
or
mov
out
mov
jnp
ror
cmc
push
je
push
cmp
pop
pop
cmp
stc
dec
jne
jbe
test
nop
cld
cld
push
das
stos
nop
or
adc
xchg
leave
jp
imul
push
imul
sbb
test
gs
mov
mov
push
aas
mov
xchg
mov
lahf
into
add
cmp
sub
lods
daa
adc
or
fucom
rcrl
addr16
xchg
nop
popfw
cld
mov
add
sub
push
loope
mov
and
imul
mov
and
nop
int
push
push
sub
nop
sub
ret
cmpsl
pop
push
jae
pop
mov
dec
jne
mov
stos
jle
jae
pop
filds
mov
movsl
jecxz
pop
add
mov
jnp
test
rcll
or
ret
add
mov
pop
std
fldt
sub
sub
push
mov
inc
ret
mov
call
push
push
lahf
stos
fiadds
icebp
mov
inc
pop
das
cmp
cs
scas
push
jmp
sti
pop
dec
push
sub
ficomps
push
mov
roll
and
cmpsl
sti
xchg
loop
add
dec
out
sbb
or
in
push
out
push
popf
push
fldcw
xor
xchg
inc
jge
hlt
cmp
lds
mov
shl
mov
cmp
in
cwtl
mov
call
pusha
mov
push
lahf
ss
mov
lds
jo
out
push
pop
inc
inc
add
testl
dec
pusha
mov
ret
pop
cmp
push
test
mov
mov
xchg
xchg
xchg
mov
fistps
cmpsl
mov
jecxz
sub
fbld
lods
shll
fmuls
mov
fbld
mov
jb
xchg
mov
movsb
push
mov
sbb
ja
in
arpl
js
inc
daa
cmovb
cmc
xor
imul
cmp
mov
enter
pop
xchg
outsl
repnz
pop
movl
addb
in
arpl
shll
inc
fbld
mov
jecxz
imul
roll
mov
mov
inc
hlt
xchg
rcl
sbb
inc
pop
mov
jo
cltd
ret
dec
js
xchg
test
sub
inc
mov
dec
int
rcr
cmp
pop
inc
lahf
or
xchg
jge
test
lahf
xor
pop
lahf
cmp
mov
xchg
pop
pop
ja
out
shlb
jge
inc
adc
mov
rcpps
cs
xchg
cmp
mov
dec
or
fisttps
out
sbb
fcmovnbe
xor
jg
bound
or
sahf
mov
in
imul
lds
xlat
jmp
mov
flds
scas
repz
sbb
popa
mov
gs
std
pop
inc
pop
leave
or
adc
sahf
imul
adc
mov
popf
out
lcallw
jno
xchg
or
pop
outsl
mov
adc
mov
fbld
pop
mov
xchg
push
repnz
cmpsl
shl
mov
rorl
push
dec
mov
inc
je
ret
xlat
cwtl
jp
push
fs
mov
mov
fwait
mov
outsb
lahf
inc
jb
cmpsl
fcoms
xchg
fwait
add
push
xchg
add
mov
mov
mov
dec
inc
call
in
mov
mov
cmpsb
fcmovnb
fwait
xchg
fistl
jae
in
scas
push
out
in
fisttpl
mov
xlat
sbb
xlat
lods
xchg
inc
mov
into
mov
ret
gs
xbegin
std
stos
mov
mov
jae
inc
inc
push
pop
aam
scas
sbb
sahf
and
lea
sti
pop
pop
and
inc
pop
xchg
mov
mov
dec
mov
jb
mov
add
jb
xchg
xchg
push
mov
ret
adc
jl
jecxz
push
fbstp
inc
out
and
sbb
cmp
mov
fldt
mov
out
and
test
scas
ret
sbb
popf
mov
cmp
pop
xlat
sarl
xlat
repz
fwait
xchg
pusha
cmpsl
sbb
popa
test
aas
iret
xchg
dec
stos
push
xchg
fcoml
pop
push
insb
ljmp
clc
xchg
fildll
cltd
add
jb
mov
xchg
pop
stc
cmp
add
add
imul
jo
adc
jmp
add
loop
lcall
lods
and
sti
sbb
push
movsb
mull
mov
stos
ss
inc
fmuls
sbb
insb
cmp
repz
mov
loop
and
adc
xchg
jmp
js
out
xchg
sti
scas
repz
xchg
test
adc
mov
jne
and
in
icebp
mov
js
mov
pop
insb
loope
cmp
inc
sarb
insl
aam
ss
adc
adc
xor
gs
stos
out
out
sub
mov
mov
cmp
lods
add
aas
xchg
inc
push
push
push
add
jmp
push
in
xchg
or
xor
xlat
inc
xor
adc
stc
clc
pop
nop
or
in
xchg
jnp
jp
repnz
jne
add
mov
mov
or
gs
cmpsl
outsl
sbb
jo
mov
mov
push
cmp
mov
cmp
sub
cs
xchg
cmp
mov
add
fucomi
add
inc
jo
jmp
pushf
data16
mov
jns
mov
stos
pop
pop
xchg
or
xlat
xor
stos
in
sbb
pusha
clc
cld
jne
lds
hlt
cmp
fs
mov
pop
xor
mov
stos
pop
icebp
mov
jle
jno
movsb
test
fadd
add
and
cmpsb
es
in
js
sub
lret
mov
mov
jmp
cmp
xchg
daa
cmpsl
fcmovnb
ja
xor
popf
fcmove
add
add
leave
fmull
popa
cmc
xchg
or
xchg
lea
or
add
and
adc
xchg
xor
stos
or
daa
dec
imul
mov
ret
push
psadbw
lret
scas
or
lahf
rclb
add
mov
nop
push
popf
frstor
sbb
adc
push
inc
xlat
les
iret
aaa
into
ja
inc
push
sbb
and
je
mov
mov
mov
lods
xchg
popa
imul
insl
mov
jp
jo
inc
cld
sub
xchg
out
and
in
out
ljmp
pop
dec
pop
cld
inc
loopne
fcomip
iret
mov
inc
and
cltd
sub
movl
movsb
cmp
add
das
mov
jmp
mov
inc
out
fdivs
sbb
dec
mov
dec
clc
sbb
fists
xchg
add
adc
mov
pop
sbb
push
xchg
clc
pop
adc
mov
lahf
mov
popa
fisubl
shlb
inc
ror
mov
cltd
dec
cmp
pusha
pop
mov
pop
sti
loop
or
pop
inc
fistl
mov
scas
int
nop
cld
push
leave
or
fldlg2
cltd
mov
dec
push
ret
jnp
adc
inc
add
in
enter
scas
or
and
jl
jno
pop
and
imul
or
fstpt
and
lahf
sub
cmp
push
testl
aam
inc
inc
pop
pusha
out
stc
mov
outsb
cmp
mov
stc
in
in
cli
pusha
jmp
pop
xchg
push
push
aaa
pushf
fdivrl
loop
adc
jge
push
mov
push
sub
out
pushf
into
ret
fadds
xor
push
mov
jb
lcall
adc
scas
lahf
mov
jnp
shrl
pop
mov
out
mov
pop
cmpsl
popf
mov
cld
adc
xchg
cmp
aas
mov
sahf
mov
jae
movsb
inc
sub
cltd
push
xchg
stos
std
in
xchg
sbb
insb
sub
jb
cmpsb
aad
mov
adc
jne
mov
dec
stc
jns
enter
mov
dec
aaa
les
mov
or
push
out
cmp
call
xchg
shll
leave
lret
pop
pop
cli
aas
xor
fldcw
mov
cmp
mov
cwtl
movsb
dec
mov
cmp
into
clc
or
jg
cmc
xchg
cs
pop
ret
jb
cltd
pop
dec
add
lret
xor
dec
scas
cmp
jbe
inc
stc
jbe
arpl
xchg
pop
mov
cs
mov
sbb
jb
mov
or
mov
in
fsts
mov
jge
pmaxub
ds
inc
jnp
insl
in
loop
sub
and
inc
push
push
out
jl
mov
fnstenv
pop
jg
sbb
xchg
aas
out
arpl
mov
fsincos
push
or
scas
push
lret
xchg
and
rcr
test
sahf
pop
add
shrb
adcl
in
test
sub
popf
cld
aas
adc
xor
je
addl
adc
xor
mov
push
jnp
ret
cs
pusha
out
push
mov
cli
adc
inc
fsub
mov
call
aas
repnz
sub
sahf
jnp
ja
push
mov
push
imul
xchg
fsubr
inc
cmp
test
sbb
sbb
or
fdecstp
cmpsb
iret
sub
out
jmp
jl
and
xor
jne
mov
and
mov
jne
and
dec
mov
pop
mov
pop
sahf
test
jge
push
shll
int
mov
sbb
sbb
mov
aaa
lret
nop
sub
adc
pop
das
gs
push
pop
inc
mov
xchg
lret
data16
push
int3
lahf
es
add
lds
lea
into
outsl
filds
das
or
in
xchg
mov
inc
pop
jp
and
pop
jbe
cli
jb
add
mov
nop
and
pushf
cmpsl
jle
and
mov
sub
out
jb
dec
jno
pop
hlt
xchg
lea
int3
cmp
shrb
dec
movsl
out
or
sub
xchg
and
mov
stos
adc
movsb
fcom
push
mov
inc
iret
pusha
notb
movsl
jb
sbb
mov
mov
and
pop
out
push
shrb
movsb
lods
mov
add
iret
inc
test
movsb
dec
push
lods
push
ljmp
cmp
daa
push
inc
outsl
addl
insb
fsubrl
fimull
ret
fdivr
or
jmp
fwait
cli
pop
leave
pop
cli
xchg
pop
fstps
movsl
cmp
dec
call
fsub
popa
push
xor
mov
jmp
push
pushf
shll
or
xor
scas
adc
lcall
mov
dec
inc
ror
int
inc
xchg
xchg
addr16
call
cmp
cmpsl
cmp
cltd
imul
xor
stc
mov
mov
xor
pop
aaa
popa
es
out
popf
popa
lret
in
lcall
test
mov
mov
pop
adc
in
out
lods
sbb
mov
clc
cmp
stos
decl
lret
idiv
imul
insl
pusha
push
or
xchg
rcrb
inc
and
mov
ret
test
mov
test
shlb
jmp
fsubp
push
enter
push
push
cmc
or
jp
arpl
add
push
mov
jae
cmc
mov
dec
test
repz
ja
rcll
sub
sbb
push
push
jno
mov
sub
test
les
rorb
adcb
adc
test
mov
int
leave
rcr
rep
rcrb
test
fbstp
ret
lahf
push
mov
dec
cld
add
pop
xlat
rorl
ror
mov
aas
loopne
push
jne
dec
fnsetpm(287
wrmsr
cmpsl
lcall
xchg
adc
lock
aas
aas
xor
scas
imul
sti
sub
mov
inc
mov
cmp
mov
nop
mov
push
popf
jo
jge
int
ljmp
push
push
pop
dec
ss
mov
cwtl
aas
ljmp
sahf
sahf
or
pusha
mov
in
pop
mov
ss
jo
lock
sti
mov
xchg
pop
insb
int
and
push
test
popf
scas
pushf
lds
dec
cld
test
add
add
lods
inc
push
dec
nop
push
gs
adc
push
push
movsb
pusha
mov
fistpll
jae
xor
std
inc
and
mov
xchg
push
push
add
scas
xlat
inc
mov
cmp
xchg
in
les
cmp
rclb
push
mov
out
jb
or
push
add
pop
lahf
mov
fisubrl
mov
int3
mov
add
mov
int3
fildl
addr16
test
or
loopne
imul
cmp
lahf
outsl
lock
pop
ret
push
push
fstpl
data16
shll
sub
js
push
adc
mov
jae
data16
jnp
mov
int
pop
stos
mov
mov
mov
cmc
loop
mov
adc
fwait
dec
lea
add
cmpsb
fbld
xchg
insl
pop
push
fstps
icebp
mov
xchg
loop
out
inc
insl
je
xor
repz
testb
addr16
add
dec
jg
clc
mov
addr16
popa
cltd
fisubl
mov
fnstsw
scas
xor
scas
jg
ret
mov
xchg
std
push
andl
xchg
fisttpll
push
cltd
ljmp
cwtl
in
add
test
std
dec
ljmp
xor
in
imul
mov
aaa
out
add
ret
cmc
pop
fs
enter
jge
mov
sahf
mov
fiaddl
xchg
cld
xchg
mov
stos
push
add
inc
jae
in
arpl
fwait
test
fdivrs
sbb
popa
aad
sub
fdivrl
frstor
and
jbe
pop
xor
pop
iret
imul
test
test
shrd
jo
fstpl
lods
imul
imul
mov
int
cmp
sub
pop
or
in
add
pusha
movsb
clc
inc
out
push
sbb
sub
hlt
mov
and
rcrl
mov
mov
jno
scas
lds
cmp
cli
mov
dec
cwtl
jno
jns
push
xor
dec
das
or
dec
sbb
bswap
inc
and
push
aam
mov
stos
xchg
xchg
dec
fmuls
cmp
mov
hlt
cwtl
and
ror
dec
sub
mov
aaa
mov
ret
jecxz
aam
lds
movsl
imul
pop
sahf
ljmp
sub
jnp
xchg
cs
xchg
and
mov
data16
cmp
mov
xor
mov
pop
inc
push
mov
push
and
sub
hlt
jmp
int3
rcrb
cmp
fs
jmp
mov
mov
notl
mov
fwait
loope
sbb
mov
popa
stc
scas
ret
add
mov
inc
sarl
je
sub
mov
aas
xchg
dec
icebp
shl
xor
aas
xchg
cmpsl
xchg
inc
ljmp
xor
stos
test
int3
pop
repnz
orb
pop
stos
cmpsb
pop
xor
dec
xor
stos
pop
mov
cwtl
pusha
or
sbb
lods
addr16
aaa
cltd
and
xchg
jne
inc
adc
test
and
push
icebp
mov
insl
sub
arpl
imul
leave
jo
sub
lods
mov
lods
ljmp
push
mov
pushf
pop
sub
push
int
sbb
inc
dec
das
cmp
add
out
shl
aas
or
mov
lds
xor
clc
jno
adcl
test
xorl
je
fsubl
xchg
mov
notl
jo
pop
inc
pop
xchg
push
out
scas
mov
sbb
mov
daa
push
hlt
jmp
ja
scas
push
int3
popf
into
cmp
pop
jge
std
dec
fwait
scas
jl
fmulp
sbb
mov
sub
scas
cmp
gs
cmpsl
arpl
shlb
mov
mov
xor
int
inc
test
pop
ja
sbb
fwait
sub
cwtl
mov
mov
push
shl
and
sub
cmc
push
jbe
into
jbe
dec
jnp
jne
jp
es
out
subb
outsl
add
aam
loop
fsub
mov
push
hlt
add
pop
iret
or
fildll
jbe
out
lods
and
push
imul
adcb
pop
js
jmp
data16
cld
push
aaa
and
mov
and
cmpl
mov
in
popa
push
inc
mov
and
xor
lds
pop
pop
cmpsl
fnstenv
aaa
shr
mov
movsb
pop
pop
arpl
sub
mov
dec
jb
cli
js
lahf
cmp
add
inc
lock
pushf
xchg
in
mov
rcll
mov
cld
xchg
div
pusha
inc
clc
adc
pop
dec
xorl
ret
clc
cmp
mov
push
cmp
mov
xchg
inc
les
icebp
iret
push
dec
mov
xchg
cmp
fstl
sar
jne
sbb
dec
aas
test
add
jl
sub
test
cmc
mov
add
lds
loope
nop
adc
xchg
hlt
jne
fwait
shlb
mov
icebp
mov
roll
fs
cwtl
daa
inc
inc
adc
jp
lea
mov
sub
fnstcw
in
rol
clc
mov
cmpsl
pop
bound
dec
bound
cmp
stos
push
cmpsb
add
clc
xor
js
leave
pushf
movsl
sub
add
insl
mov
dec
mov
cmc
or
pop
sahf
xor
mov
pusha
in
adc
cmc
mov
and
call
movsl
inc
int
lock
notb
dec
das
arpl
movsb
add
push
js
leave
xchg
call
mov
pop
pop
push
pop
mov
xchg
pushfw
andb
stos
shl
add
pop
test
shrb
add
stos
fimull
fadds
push
fistpl
sahf
out
ljmp
inc
fdivp
xor
mov
and
ljmp
orb
leave
ja
add
mov
xchg
mov
into
push
sub
push
pop
or
shlb
arpl
xchg
and
fistpll
movsb
loop
xor
fsubrl
ror
int
mov
negl
popa
xchg
lcall
out
pop
dec
jae
lock
push
fldt
mov
jecxz
add
out
or
pop
bnd
cmp
jbe
test
xchg
pop
iret
pop
xor
movsl
clc
push
lcall
push
roll
stc
popf
mov
xchg
inc
cmp
andl
jae
pop
call
mov
xchg
adc
mov
push
das
xor
scas
mov
mul
daa
xor
pop
cs
out
scas
test
jo
ljmp
ljmp
mov
xor
lea
decl
inc
lret
dec
adc
cli
insb
bnd
into
mov
push
sub
test
push
mov
ljmp
push
std
push
cmp
inc
push
dec
lret
nop
movsb
add
pop
sub
mov
and
pop
outsb
add
pop
shlb
pusha
mov
sti
imul
sub
out
add
lret
dec
fisubs
gs
cli
cmp
mov
sub
xchg
xchg
cpuid
loope
pop
hlt
addr16
sbb
xlat
mov
fbstp
pop
icebp
and
and
loopne
xor
dec
hlt
add
inc
loopne
dec
or
mov
mov
add
jo
std
sbb
xchg
mov
mov
inc
adc
push
insl
sub
pop
jbe
or
in
aaa
cli
add
mov
popf
out
jne
das
jns
jmp
fs
inc
sbb
orb
dec
or
das
inc
jle
ret
repz
inc
xchg
jmp
das
fcoms
push
out
std
loope
mov
out
dec
mov
cld
pop
call
push
jo
cmpsb
test
test
out
les
add
sbb
call
pop
fiaddl
jle
inc
push
insl
dec
or
jmp
ror
cmp
lret
jb
out
les
add
daa
aam
and
pop
shlb
xchg
adc
mov
andb
out
arpl
push
cmpsb
mov
outsb
insl
popf
and
in
subb
imul
testl
imul
hlt
mov
add
jle
pop
test
jae
daa
mov
adc
jne
scas
stos
lret
pop
push
mov
adc
mov
enter
mov
lods
aas
mov
mov
aaa
idivb
andl
adc
int
xchg
xchg
mov
mov
pop
fwait
add
or
adc
jns
pop
es
xchg
xor
addl
mov
sbb
popf
xor
lods
and
dec
movsl
inc
adc
sbb
scas
sbb
loopne
xchg
mov
jae
adc
insb
nop
mov
mov
adc
mov
les
xchg
roll
lret
xchg
insb
or
cld
sti
cmp
mov
push
cltd
rclb
incl
jb
add
mov
aas
scas
imull
stos
mov
insb
dec
fisubs
jmp
dec
xchg
rolb
inc
fcomp
push
xchg
scas
cmp
add
jmp
scas
cmp
mov
ficoms
push
and
dec
add
hlt
mov
popa
xor
std
and
xor
outsb
movsb
and
mov
mov
jecxz
add
cli
inc
sub
movsb
lods
in
and
or
push
fcompp
mov
pop
aas
jecxz
sub
xchg
lcall
and
xor
insb
or
stc
test
mov
push
mov
mov
movsl
aas
dec
fldenvs
mov
in
sub
xlat
and
xchg
test
shrb
push
or
shrl
jns
out
dec
out
loope
add
arpl
test
xchg
jb
push
insl
jne
cmc
sti
fimull
sub
fwait
nop
lret
aas
xchg
push
add
xor
mov
inc
ficoml
add
sti
ds
jbe
and
mov
das
inc
dec
jno
jle
enter
icebp
sarb
gs
mov
ret
push
mov
rorb
xor
xchg
dec
mov
sbbb
ficomps
test
cmpsl
cld
iret
inc
sub
fs
hlt
fidivl
pop
ljmp
test
pop
pop
mov
cld
cld
in
or
inc
cs
std
data16
adc
and
mov
pop
mov
rcr
xchg
mov
comiss
push
popf
insl
test
add
dec
nop
repz
cmc
gs
pop
test
cltd
fcmovnb
and
out
pop
jge
push
sbbb
scas
inc
hlt
iret
pop
push
lds
push
push
stos
mov
jl
adc
mov
repnz
dec
jmp
adc
dec
mov
mov
cld
out
mov
call
shl
subl
xchg
mov
pop
das
add
sldt
sbb
imul
jl
and
mov
jmp
mov
pop
mov
and
shrl
jae
and
dec
test
ja
push
jne
in
xchg
iret
mov
pop
scas
mov
mov
insl
pusha
push
add
sub
inc
and
pop
mov
pop
mov
pusha
push
out
es
xorl
pop
inc
cmpsl
push
and
xchg
adc
les
push
dec
push
adc
jle
pop
cli
pop
iret
outsl
loopne
bound
push
pushf
or
jmp
add
shll
adc
les
or
mov
or
arpl
jb
cmp
pushf
test
fistpl
mov
mov
push
jge
pop
dec
outsb
add
adc
mov
mov
nop
jmp
sti
es
dec
and
loopne
push
dec
sahf
icebp
stos
mov
xor
dec
sarl
mov
xchg
sub
jb
mov
ret
pop
inc
xchg
xor
pusha
rcl
adc
addr16
std
push
push
mov
dec
int
icebp
ret
fs
cmpsl
shrb
xor
mov
push
push
jle
test
dec
test
sti
ljmp
mov
popf
stos
into
fldt
movsb
push
insl
push
and
shr
add
add
enter
or
sbb
dec
lret
test
mov
outsl
es
or
fcoms
add
mov
cmc
xchg
push
insl
push
cmp
push
sub
cmp
cmp
lds
stos
clc
jno
xor
push
mov
dec
cmp
movsb
mov
loopne
stc
cmp
movsb
faddl
sahf
add
dec
pop
std
addb
ja
ss
cmpb
cmp
out
jl
sarb
rcr
sub
mov
sbb
pusha
add
rcrl
mov
xor
lret
bound
pop
xchg
mov
cli
cmp
mov
cmp
gs
mov
mov
and
cs
stos
idivb
fs
sbb
jno
sub
daa
test
inc
or
icebp
push
loopne
xchg
std
outsl
in
mov
adc
dec
inc
dec
xor
inc
fptan
int
call
mov
cmc
rcrb
or
loopne
dec
sub
out
aas
and
mov
icebp
fs
add
mull
jge
loopne
pop
loopne
cli
cmpsl
inc
add
int3
add
les
mov
xor
cs
stos
loopne
push
mov
jp
cltd
pop
xor
add
movsb
jle
test
push
pop
jbe
pop
inc
dec
sub
rorb
mov
sbb
imul
das
sub
cmpsb
rol
jo
xchg
mov
push
movsl
shlb
and
lods
imul
pusha
mov
pop
fwait
xchg
xchg
adc
xchg
dec
aaa
hlt
mov
fildll
mov
and
sub
lret
fsubrl
rorb
into
sbb
mov
clc
cmp
mov
mov
adc
stos
loopne
fcomps
pop
cmp
mov
add
test
xchg
xor
xchg
imul
pop
and
push
lea
or
mov
dec
inc
ss
push
and
pop
push
adc
clc
mov
jb
iret
fisttpll
and
repnz
cmp
cmp
icebp
fcoms
arpl
and
lods
imul
or
sahf
repz
inc
push
fmull
cwtl
xchg
enter
jns
adc
rol
mov
adc
cli
in
mov
jge
push
ret
jae
xchg
test
mov
sti
aas
mov
nop
inc
or
push
stos
jns
push
dec
push
push
pop
aad
out
sbb
xor
jnp
or
outsb
shr
mov
push
loop
sbb
add
inc
push
mov
lsl
icebp
es
jl
mov
in
and
add
xlat
decb
sahf
lret
pop
enter
push
scas
or
loopne
and
ret
aad
mov
sub
xchg
and
xor
jmp
mov
add
xor
cwtl
in
repnz
mov
adcl
cmc
mov
pop
and
mov
mov
mov
in
mov
push
dec
inc
xor
ret
insb
sbb
js
or
popa
ja
and
cmp
adc
sub
rcrl
jp
sub
ss
jmp
lods
mov
jns
or
fisttpll
jle
pop
movsl
pop
pop
out
add
pop
dec
mov
lea
cmp
inc
movsl
mov
insl
add
fnstsw
dec
mov
push
xor
add
in
cmc
xchg
in
sarb
cmp
adc
xchg
push
fs
inc
fmuls
test
push
pushf
dec
or
mov
test
cmp
addr16
cmp
adc
sbb
popa
dec
movsb
mov
cmovg
pop
xchg
mov
in
dec
push
push
daa
and
or
or
int
pop
mov
adc
xlat
dec
cmp
and
cmpsl
mov
mov
xchg
inc
push
add
sbb
cld
ds
inc
sub
sbb
arpl
mov
adc
and
mov
sub
push
and
and
cs
jl
push
pop
nop
test
sbb
xor
insb
lcall
aad
sub
adc
xchg
lea
aaa
out
cmp
js
cmc
sub
push
fildl
sub
jns
dec
pop
add
loop
pushf
mov
and
push
sahf
push
push
push
adc
mov
add
insl
ret
lahf
xchg
xchg
dec
pop
sbb
outsb
out
insb
les
das
pusha
lcall
sbb
fcompl
sarb
icebp
sbb
out
adc
ds
fdivs
test
fnstenv
mov
sub
cmc
xlat
fdivs
popf
pop
shr
mov
inc
jecxz
adc
out
les
xchg
aaa
addr16
popa
mov
movsb
pop
add
int
xor
pop
inc
into
jb
popa
in
in
imul
mov
xor
icebp
fsubrl
push
lcall
jg
cmp
sbb
pushf
jae
dec
mov
aad
cmp
dec
out
sbb
add
fisttpll
push
sbb
jg
js
xor
cmc
inc
inc
arpl
xor
xchg
jo
div
jecxz
mov
fsubs
sub
js
arpl
mov
cmpsb
push
xchg
or
push
popf
inc
pop
and
xchg
cltd
cwtl
loope
jmp
add
test
ror
test
and
shl
ljmp
sbb
pop
fcmovnb
ret
imul
in
call
push
rolb
faddl
shlb
fdivr
push
mov
mov
sbb
sbb
and
iret
jle
daa
mov
xchg
push
xchg
bound
cmpl
ja
imul
cmp
jle
pop
sbb
lods
sbb
mov
stos
js
xor
cmpsl
adc
push
cmp
notb
mov
jecxz
aaa
mov
and
out
ljmp
xchg
push
adcl
mov
adc
cmp
loop
ja
je
cltd
int3
enter
out
sahf
ja
sub
mov
add
pop
in
xchg
and
adc
or
dec
or
in
or
push
xchg
cli
sbbl
jno
xchg
rorl
rorl
fldt
dec
push
jnp
in
int
testb
or
or
push
mov
mov
push
sbb
jne
jp
sbb
in
ret
pusha
aaa
push
sbb
std
push
lods
ss
sti
cld
cltd
stos
push
or
sbb
jb
lea
adc
repnz
in
bound
xor
sub
add
imul
int
cmp
push
inc
push
and
mov
out
jbe
stos
sbb
and
sub
xchg
xor
ja
pusha
fimuls
pop
xlat
jmp
fidivrs
xchg
jae
add
mov
push
fdivs
or
dec
xchg
adc
xor
push
insl
push
mov
enter
lock
push
inc
xlat
mov
lea
mov
sbb
cmp
pop
mov
bound
xchg
adc
in
lcall
gs
aam
dec
icebp
mov
ds
repz
repz
bound
imul
push
pop
loopne
js
jp
sbb
divb
lcall
pop
fwait
sbb
mov
cmc
sub
inc
lret
es
xchg
dec
inc
mov
or
jne
enter
decb
add
fisubrs
loopne
add
insb
jns
pusha
xchg
decb
push
imul
xor
sub
aam
sbb
dec
pushf
jge
jno
int3
lret
clc
lret
pop
ret
push
mov
out
pop
movsl
inc
ficomps
or
gs
rclb
aam
jp
mov
orb
in
mov
dec
popf
test
rcrl
lea
xlat
scas
mov
xor
jle
mov
nop
lods
inc
cs
mov
aaa
stos
aas
jge
xchg
and
insl
or
es
test
mov
imul
sub
cmp
mov
inc
dec
jmp
ss
enter
xchg
enter
movsb
inc
inc
out
cmp
mov
mov
aaa
xor
mov
fidivl
or
pop
cmp
mov
add
rorb
mov
mov
jge
jmp
adc
addb
mov
adc
aas
adc
aas
and
stos
add
pop
repz
lret
dec
ret
clc
lods
cltd
xor
pushf
lret
mov
xchg
jge
dec
lret
inc
gs
sahf
mov
mov
mov
mov
mov
lret
mov
xchg
xchg
int3
sarb
sahf
cmp
or
push
pop
mov
xchg
and
mov
bswap
mov
popf
push
jge
xor
out
mov
sub
sub
adc
pop
pop
inc
mov
inc
pop
mov
test
jle
sbb
ja
ror
cld
je
ja
aad
out
ljmp
sbb
dec
push
test
mov
or
push
push
mov
daa
jge
pop
pop
sbb
jmp
or
jb
sbb
xor
lahf
pop
shlb
aam
pop
in
movsb
xchg
add
adc
jae
scas
call
sbb
push
pop
inc
fmuls
pop
mov
fisttpl
ss
jl
xchg
adc
xor
inc
sahf
int
push
loope
test
das
fistl
stos
out
dec
add
inc
jae
mov
subl
or
sbb
pop
or
mov
jge
adc
dec
jmp
in
cmpsb
or
mov
mov
or
rcrl
loop
out
int
pushf
stos
xchg
arpl
cltd
outsl
mov
fimuls
xor
pop
subb
in
add
pop
sub
dec
mov
add
into
fs
sbb
xor
mov
aas
cmp
fbstp
dec
mov
fildll
cmp
or
jne
jg
lea
and
inc
sbb
inc
into
sub
sub
imul
or
pusha
mov
jge
in
mov
dec
popa
test
pop
popf
pop
ss
iret
inc
in
test
add
into
adc
dec
fwait
inc
fldl
test
mov
sbb
sbb
fisttpl
cwtl
adc
aaa
pop
cmp
xor
cmp
cld
cmp
xorb
and
xchg
mov
xchg
pusha
mov
lods
mov
dec
xchg
lds
rclb
out
mulb
add
out
insl
js
into
lret
leave
dec
int
mov
mov
push
xor
stos
or
pushf
fs
sub
jge
into
mov
cmp
loopne
and
lcall
popf
mov
call
jle
mov
loop
dec
xchg
notl
test
mov
jae
fnstsw
or
sbb
cmp
jbe
inc
inc
jno
jle
loop
shrl
into
fldcw
pushf
or
in
mov
hlt
outsb
cmpb
das
mov
scas
mov
jnp
mov
mov
loope
test
jmp
stc
test
imul
addr16
xchg
and
movsl
sbb
dec
fsubrl
stos
sub
out
mov
jb
test
xchg
push
xchg
push
push
pop
dec
mov
fs
mov
scas
cli
arpl
jl
push
stc
dec
sbb
ficompl
dec
js
jns
nop
int
imul
xchg
loope
mov
push
outsl
pop
dec
stc
fnclex
outsb
push
mov
adc
push
pop
iret
adcb
mov
inc
and
jmp
jne
sub
shll
outsl
sahf
insl
cmpsl
repz
lahf
xchg
inc
leave
rcll
lret
mov
dec
andl
rorl
mov
pushl
cpuid
and
mov
mov
sbb
sub
xor
pop
xchg
push
jmp
cmp
std
push
fildll
outsl
lret
jge
pop
mov
jo
mov
jb
test
xor
sub
pop
enter
cmc
repz
into
or
das
dec
mov
xchg
jmp
or
ds
les
fildl
jns
add
lret
mov
bound
xchg
cs
jmp
fisttps
out
adc
out
test
mov
inc
dec
sub
or
shll
xchg
push
mov
test
in
arpl
iret
cmp
add
jmp
push
aas
addr16
js
mov
test
sbbb
jb
call
xchg
daa
imul
test
add
xor
pop
aad
or
subb
jg
enter
mov
inc
pop
stc
xchg
fdivp
push
dec
cmp
inc
test
fstpl
dec
mov
mov
and
nop
mov
adc
enter
dec
lret
mov
iret
testb
sbb
mov
mov
js
icebp
movsb
jmp
jo
fnstcw
push
pop
pop
lret
in
aam
lods
cs
xlat
and
mov
jns
test
jns
xor
iret
fmull
sub
fisubl
and
inc
push
call
imul
stos
dec
mov
ljmp
addr16
or
inc
adc
jge
pop
mov
repnz
int3
push
inc
mov
add
movsb
or
mov
mov
pop
lcall
add
or
scas
out
sahf
jae
mov
cmp
js
addr16
mov
inc
dec
jmp
dec
inc
ljmp
out
xchg
shll
mov
sbb
neg
mov
popf
ret
cld
or
test
pop
xor
insb
sbb
add
add
out
xchg
sbb
or
cmp
leave
mov
movsl
fisubrl
mov
xchg
mov
fcoms
mov
out
jns
jp
mov
mov
in
push
push
ds
pop
cltd
pop
jo
adc
mov
movsl
je
inc
cmpsb
sub
in
gs
cwtl
lods
test
sbb
mov
ret
fwait
or
adc
lock
mov
out
add
mov
ljmp
add
in
in
mov
jl
scas
xchg
mov
sbb
cmp
cmp
les
enter
dec
imul
mov
push
movsb
jle,pt
je
pop
sbbl
mov
xor
jge
pop
push
fistps
sbb
fsts
inc
ficomps
mov
inc
mov
lret
scas
jno
jb
sahf
addr16
mulb
clc
mov
xchg
rol
jo
test
mov
inc
or
xor
mov
add
sbb
jno
inc
push
sub
iret
pop
jge
fcomps
adc
and
mov
cmc
adc
xor
fiaddl
xchg
sbb
outsb
leave
lods
cmpsb
pop
shrb
enter
mov
and
mov
mov
jne
outsb
pushf
inc
mov
out
int
test
test
mov
std
loopne
mov
cmp
orl
ja
loopne
push
cmpsb
sbb
fnstsw
fimull
add
and
sbb
stc
push
rcl
add
pop
hlt
pop
push
bound
cmp
lret
pop
adc
jp
stc
imul
cld
mov
mov
out
aaa
out
test
cmp
xchg
dec
or
inc
mov
push
pop
sub
arpl
das
rcl
inc
mov
or
pusha
xor
ja
js
xchg
jecxz
inc
mov
ret
pop
insl
imul
mov
jmp
stos
jno
jmp
jae
fs
lock
jnp
mov
cwtl
cmp
xchg
and
pop
or
call
sbb
xchg
lret
aas
roll
push
andb
inc
mov
insl
imul
aas
ss
cli
test
and
loop
lock
add
xchg
cld
pop
ljmp
jb
sbb
pop
push
mov
cmp
nop
roll
lock
fwait
push
mov
shll
cmpsl
inc
and
jge
outsb
mov
jae
mov
inc
xchg
push
cmp
jmp
xor
shrl
lcall
stos
incl
fildll
mov
xchg
mov
dec
shll
push
negb
dec
or
sub
lds
cmp
jo
imul
jg
push
ljmp
cli
pop
das
cmpsb
mov
mov
dec
mov
jns
mov
adc
aas
enter
lods
inc
dec
fsts
orb
stos
dec
jbe
rorl
bound
pop
ficoms
adc
out
xbegin
inc
cmpsb
addl
rcl
jnp
jmp
cmpsb
cmp
call
pop
dec
pop
xchg
xchg
test
add
mov
aad
cmp
inc
or
push
mov
pusha
fcmovne
lods
call
movsb
add
imul
jle
mov
imul
ss
sub
xchg
cmpsl
add
leave
sub
inc
push
das
adc
pop
sub
and
mov
aam
mov
jecxz
inc
stc
lea
cwtl
shll
inc
in
movsb
dec
sbb
stos
clc
xchg
jnp
lock
mov
sti
pop
mov
pop
inc
sub
push
sub
xor
adc
add
jge
or
mov
sub
jbe
mov
xchg
cmp
arpl
dec
or
and
lea
mov
xchg
scas
cmpsl
into
repnz
enter
adc
inc
adc
ds
call
push
fisttpl
incl
pusha
push
cltd
push
and
aam
mov
je
pop
xchg
jb
cmp
scas
jp
and
or
insb
dec
std
loop
mov
cmc
fcompl
cmovne
loope
dec
loopne
xlat
sbb
ficomps
arpl
aad
xor
fistl
lock
sbb
imul
fs
cmc
cwtl
lret
mov
pop
aam
sub
popf
xchg
dec
fisubrl
xchg
inc
dec
mov
or
and
xor
push
repnz
mov
int3
popa
xor
sub
loopne
inc
negl
jge
rcrl
iret
mov
mov
outsb
push
std
ja
push
dec
lret
ss
push
cmp
int3
rolb
push
xor
mov
lret
and
cltd
sub
jg
inc
cmp
or
jmp
or
outsl
or
in
lahf
loop
sub
subb
xchg
inc
pop
lock
xchg
mov
jo
call
outsl
xchg
out
xchg
and
dec
out
xor
in
jge
ljmp
inc
mov
loope
adc
push
in
pop
inc
adc
xchg
pop
push
or
mov
shlb
jmp
fistpll
fimull
iret
jmp
xchg
jp
rclb
sub
push
cli
jae
lods
ss
mov
int3
xchg
xchg
mov
js
mov
das
inc
sarl
data16
mov
dec
cmp
add
sub
lea
and
loopne
dec
mov
xlat
loopne
outsb
ss
xchg
lret
mov
xchg
push
jg
add
cmpsb
pop
lock
in
jns
rcrb
fs
stc
ja
jle
cmpsb
pusha
jne
jecxz
arpl
repz
push
aam
movsb
cmp
push
pop
stc
bound
sbb
xchg
addr16
into
mov
cmp
xchg
loope
int3
js
cltd
outsb
in
push
cmp
push
xlat
mov
cmpsl
push
lods
popf
mov
inc
into
mov
lea
pop
xor
add
mov
inc
or
repz
in
pop
int
pop
pushf
fistl
inc
jge
mov
fidivs
lcall
test
shll
stc
jne
dec
ss
push
dec
cmp
mulb
pop
inc
xor
push
xchg
cmp
lahf
lds
inc
cmp
pop
adc
repnz
xor
addb
outsb
scas
dec
leave
dec
pop
cmpsl
xchg
pusha
inc
sub
es
test
and
cmp
mov
or
or
mov
mov
inc
les
gs
mov
mov
fcom
sarl
mov
movsl
imul
jno
out
push
cmc
lea
jmp
pop
popfw
mov
mov
fstpl
sbb
add
pop
cli
sbb
mov
mov
sub
inc
jnp
push
lret
add
test
xor
sbb
pop
jg
js
shlb
adc
ficompl
cmp
cmp
mov
in
mov
jno
push
daa
leave
repz
and
cmpsl
sbb
pushf
pop
mov
or
dec
inc
es
inc
sbb
stos
daa
out
sbb
dec
cld
pusha
push
cmp
ss
shrl
outsb
loopne
cld
movsb
xchg
gs
jle
dec
jl
mov
ds
mov
stos
aas
repz
inc
shlb
xchg
sbb
loopne
pop
jb
pop
rorl
fnstcw
les
jnp
xor
adc
subl
data16
add
jne
mov
loope
stos
pop
inc
push
cltd
push
push
xchg
inc
add
test
les
pop
mov
jmp
add
jp
mov
push
xchg
adc
stos
test
sbb
sub
bound
in
or
xchg
push
mov
mov
loope
mov
cld
xchg
mov
aam
mov
mov
fdivr
adc
inc
mov
adc
into
outsl
inc
out
adc
pushf
mov
and
orl
pop
mov
jno
jae
out
xchg
jnp
lret
or
add
ret
add
lea
out
inc
int3
mov
cmp
outsl
aaa
mull
inc
cwtl
cltd
add
dec
pop
mov
cli
arpl
xchg
xchg
sahf
xchg
push
add
mov
daa
js
fisttpll
cltd
setle
repz
mov
xchg
fs
jo
repnz
fsub
push
pop
mov
aas
insl
xchg
mov
insb
sub
enter
or
mov
fs
jo
repnz
xchg
test
mov
stc
pop
mov
ja
pop
call
fsubrl
fcompl
jb
bnd
xchg
jbe
add
cmp
out
xchg
daa
mov
xchg
mov
pop
or
sbb
push
push
leave
inc
int3
adc
imul
aas
adcb
mov
adc
adc
jb
jge
dec
xchg
movsl
dec
push
push
mov
hlt
xor
test
adc
out
outsb
loop
and
push
inc
orl
stos
push
call
ficoml
nop
xchg
pushl
dec
xor
pop
fwait
or
stos
repnz
sar
fmulp
fldcw
fstpt
gs
jl
mov
popf
sub
rcrb
in
mov
mov
pop
adc
pusha
and
push
lods
insb
mov
lret
lea
push
push
cmpsb
jno
dec
stos
mov
add
push
jae
dec
cmpsl
and
cmp
clc
and
push
mov
out
dec
push
dec
xor
ss
cmc
fisttpll
std
imul
adc
outsl
movsl
outsb
fimuls
in
std
repz
cmp
jnp
xchg
aaa
lcall
movsb
sbb
pop
aad
leave
stc
add
mull
push
xchg
inc
imul
cmpsl
push
xor
data16
les
sahf
xor
xchg
mov
push
pushf
xchg
add
jns
lods
or
mov
push
jae
mov
mov
hlt
test
lret
cwtl
and
js
jnp
sub
adc
sub
in
mov
addr16
mov
sbb
out
outsl
push
adc
or
cmp
xchg
inc
cmc
jmp
jb
aad
idivl
icebp
sti
lods
and
sub
inc
xchg
push
fisttpl
sbb
ss
mov
dec
test
sub
loopne
sub
and
pop
bound
jo
out
xor
lret
enter
push
lahf
sti
fnstsw
push
fs
dec
nop
aas
stos
incl
inc
lods
mov
hlt
add
xchg
outsb
adc
and
jnp
loope
dec
and
test
std
dec
in
ficomps
mov
or
jp
shll
mov
inc
rolb
mov
push
gs
pop
nop
jg
inc
mov
movsb
aaa
lret
xor
xorb
idiv
in
test
mov
mov
jno
push
lret
xor
and
inc
into
fldenv
jnp
xor
cmc
lds
and
cwtl
jmp
add
or
ss
push
in
fisubrl
mov
in
sub
sub
xchg
scas
push
dec
arpl
aam
divl
jo
inc
clc
sub
loop
mov
insb
mov
jmp
cwtl
jo
inc
mov
sub
test
mov
or
ret
lock
cmp
pop
push
into
pop
or
sbb
andl
mov
dec
add
xchg
or
mov
xor
push
sub
mov
mov
mov
pop
cld
subb
rcrl
pop
push
push
dec
cwtl
fldenv
rorb
or
fisttps
and
cmpsl
and
dec
ret
les
rcrb
in
or
dec
push
not
push
adc
nop
push
pop
inc
push
insl
lock
sarl
pop
sahf
inc
pop
pushf
and
push
int
dec
int3
adc
icebp
xlat
pop
xor
rcr
mov
dec
adc
pusha
insl
jns
dec
movsb
pop
sarl
loop
stc
push
jl
dec
mov
iret
int
inc
lcall
movsl
pop
mov
xchg
pushf
fisttpll
pop
xor
push
xchg
out
testl
daa
fisubrl
push
daa
rolb
jp
push
xchg
les
cmp
sar
sub
ss
sbb
mov
mov
test
mov
push
iret
push
repz
sti
sbb
sbb
xor
out
mov
dec
negl
sub
mov
ret
pop
sbb
push
xchg
sti
repz
pop
xchg
cld
lods
push
pop
pop
imul
insb
mov
hlt
rep
shrb
aam
cmp
fwait
dec
jno
int
test
mov
push
dec
mov
lret
out
sbb
out
cmc
nop
into
daa
idivl
adc
dec
jl
hlt
icebp
out
rorl
jl
push
mov
mov
fldt
jbe
testb
jecxz
adc
outsb
ja
push
and
aad
loop
sahf
and
fiaddl
pop
popa
push
repz
sub
loopne
nop
xor
xchg
aam
mov
sbb
add
out
outsl
ljmp
inc
cmp
test
and
movsb
lods
cmpsb
addr16
fists
negb
push
aaa
push
or
add
push
ret
dec
out
mov
add
adc
mov
sub
imul
jle
cmp
pop
cmpl
cmp
xchg
sarl
or
pop
iret
lds
push
add
adc
sbb
fs
jns
dec
pusha
and
xchg
out
cltd
out
std
sbb
cwtl
fistl
enter
hlt
cwtl
and
sbb
mov
hlt
stos
loopne
inc
jecxz
gs
out
test
popa
cmp
addr16
sub
push
cltd
cmpsl
gs
lcall
outsb
xchg
mov
push
lahf
jmp
fs
rcrl
in
xchg
and
push
jle
inc
adc
jbe
inc
insl
push
mov
sti
inc
mov
ss
mov
test
cmp
pop
inc
ret
mov
mov
add
sub
sbb
insl
sub
popf
fmull
xchg
fldenv
and
pusha
xchg
out
gs
sbb
dec
dec
clc
pop
or
sub
dec
and
dec
lret
stos
cmp
jb
outsb
or
or
roll
scas
sbb
push
test
and
icebp
in
into
ret
push
repnz
loopne
in
adc
fidivrl
add
pop
test
loope
xor
sbb
rorb
adc
js
mov
mov
xchg
or
out
sbb
and
cmp
pop
movsb
scas
repnz
pop
fs
mov
jno
push
ret
arpl
loopne
fcoml
add
mov
xor
mov
dec
and
and
cmp
inc
inc
iret
push
imul
in
sbbb
addr16
fbld
idivb
pop
jns
addr16
mov
scas
mov
lods
jb
jae
inc
xor
jl
repz
cli
dec
iret
stos
sub
lods
cmc
lock
inc
mov
adc
jmp
leave
fisubrs
jecxz
pop
and
push
cmpsb
xchg
adc
mov
pop
jecxz
dec
xchg
popa
sbb
movsb
dec
hlt
arpl
or
loop
jbe
xor
xor
xor
repz
pop
push
dec
sti
add
or
cs
pop
push
scas
mov
xor
mov
aam
jp
or
fsubrs
jecxz
insl
sahf
and
mov
or
xchg
mov
mov
dec
sbb
ds
ds
xor
in
hlt
adc
sub
lods
lods
iret
cmp
cmpb
adc
jns
xchg
std
repz
lods
lret
jle
push
lahf
mov
sub
fcoms
cmpsl
push
jns
adc
test
push
mov
mov
inc
lcall
inc
adc
mov
hlt
and
clc
jbe
imul
je
jb
xchg
jo
outsl
clc
shlb
das
subb
test
ljmp
jbe
add
mov
dec
push
adc
adc
pop
lea
aaa
dec
notl
lea
and
or
mov
out
push
imul
sub
shlb
lret
in
aad
gs
push
arpl
bound
incl
push
adc
mov
in
scas
push
mov
and
mov
adc
sub
xchg
and
loopne
inc
add
mov
ret
adc
jecxz
mov
jge
mov
push
into
jl
in
sahf
movsb
sti
cmpsb
jl
lods
pop
xor
adc
lahf
loop
cmp
aam
mov
cmp
int3
mov
mov
mov
fnstcw
cs
or
pop
jp
sti
cmp
or
cmp
jmp
xchg
mov
sbb
jae
add
iret
adc
mov
test
dec
adc
xchg
mov
cmc
mov
sti
xchg
pop
mov
bound
sbbb
and
mov
push
pop
ljmp
adc
cmova
pusha
ljmp
mull
add
and
mov
xor
adc
xor
stos
test
jo
and
outsb
mov
push
out
dec
loop
adc
data16
cli
jnp
push
mov
call
scas
hlt
push
lea
addr16
or
cmp
lods
cmpsl
popf
add
jg
jno
pop
xor
lret
orb
push
test
xchg
push
cmpsl
shr
mov
lock
inc
mov
gs
adc
xchg
out
sbbb
inc
xchg
arpl
fidivrs
dec
test
ljmp
add
mov
inc
jno
jmp
xchg
fcmovb
adc
rolb
int
test
pop
sbb
add
movsb
and
test
xchg
adc
pop
push
sub
loopne
cli
mov
je
jp
fwait
popa
ja
xchg
inc
sar
pop
shl
lea
fsub
or
lock
adc
aas
ss
xor
or
test
stos
pop
mov
mov
or
mov
xchg
sub
jns
insl
sbb
or
adc
mov
cmpsl
mov
mov
sbb
inc
mov
jae
aam
add
and
dec
cmpsb
in
scas
jge
and
shrl
mov
test
sbbb
movsb
insl
lcall
cltd
dec
mov
push
ficomps
loope
mov
jno
and
int3
out
mov
xor
cmp
mov
pop
xorb
jg
ficomps
pop
jmp
cmp
add
aaa
mov
repnz
cmpsl
test
ds
push
push
xlat
pop
mov
call
rolb
outsl
sub
inc
nop
sub
popf
aad
pop
repnz
in
push
adc
sub
adc
push
ljmp
fsubs
inc
push
imul
icebp
pop
mov
adc
xchg
jg
xchg
std
repz
outsl
iret
jbe
testb
pusha
or
dec
js
fisubs
xchg
dec
mov
mov
inc
jp
sub
iret
dec
mov
arpl
or
call
dec
repz
mov
pop
push
xor
fisttpll
into
cmp
jno
lea
pushf
mov
movsl
mov
in
in
sub
mov
cmc
push
adc
jecxz
push
sahf
push
fsubrl
lods
sti
test
inc
pop
adc
or
cwtl
rorb
pusha
cmp
xlat
aam
fcmovnu
and
or
sub
rcr
lret
leave
hlt
out
or
incb
inc
add
mov
adc
mov
inc
sbb
xor
jg
sbb
inc
push
fsub
sub
test
pop
or
and
adcl
sub
push
inc
or
xlat
mov
imul
inc
push
jmp
pop
rorl
js
xchg
ror
daa
add
insb
cmp
rcrb
mov
or
mov
call
mov
sub
xor
mov
mov
mov
les
lds
mov
adc
push
icebp
push
pop
xchg
mov
addr16
cmp
pop
xchg
inc
mov
push
mov
mov
movsb
xchg
out
inc
out
sahf
rep
and
push
or
in
jno
pushl
dec
mov
inc
mov
push
je
clc
xchg
sub
jae
xor
jns
leave
enter
push
adc
push
lds
scas
lock
out
pushf
pop
gs
scas
adc
leave
inc
push
paddsb
cmp
jmp
aad
fcomps
xchg
push
or
mov
aas
lds
scas
push
cmpsb
sbb
outsb
cwtl
push
movq
and
push
pand
mov
adc
gs
rcrl
pop
popf
jne
and
xor
sbb
mov
sub
lds
pop
sub
mov
lcall
aad
std
mov
call
scas
lcall
mov
jl
or
fidivs
jo
ret
enter
mov
cld
xchg
jp
fsubrs
cmpsl
cmpsb
push
inc
jecxz
arpl
add
add
push
imul
les
int3
add
and
dec
push
pop
mov
je
cld
loope
jle
lds
stos
scas
dec
outsl
pop
fstps
sbb
xchg
xor
cltd
out
or
add
mov
pop
popa
adc
push
push
push
lahf
fwait
enter
dec
pcmpgtw
mov
or
pop
addr16
cmp
xlat
push
mov
les
xchg
outsb
push
add
sti
shrl
jl
iret
push
cbtw
sub
mov
mov
sub
jb
push
sahf
dec
pop
adc
dec
or
test
lods
pop
sbb
out
loopne
add
mov
pop
stc
in
and
jle
dec
add
jbe
xchg
pop
mov
shl
hlt
push
adc
sti
add
push
cwtl
lock
mov
imul
flds
arpl
into
pop
lret
push
or
clc
pusha
jae
xchg
xchg
dec
xchg
and
sbb
or
xchg
fs
enter
pusha
jne
inc
cmc
jno
jle
add
and
lret
mov
cmc
sahf
leave
push
repnz
fldl
leave
or
xor
mov
stc
mov
cli
adc
sub
mov
sti
push
aaa
xchg
sub
fbld
xor
adc
rcr
inc
mov
jb
add
push
add
cwtl
or
adc
cmp
out
in
stc
int3
pop
mov
imul
and
push
je
mov
xchg
arpl
mov
push
lea
sbb
insl
push
js
adc
ret
int3
icebp
les
xchg
jmp
jmp
sbb
mov
dec
orb
repnz
or
mov
pusha
shld
mov
rcl
mov
pushf
ja
and
adc
cmp
in
rolb
sysenter
ret
std
movsb
sar
xlat
sbb
fldt
xor
mov
lods
xchg
sub
andl
add
lea
test
daa
mov
or
test
add
inc
mov
or
pop
adc
mov
icebp
shr
das
sub
mov
subl
imul
push
sbb
fidivrl
in
sbb
inc
pop
mov
int
outsl
mov
orl
jmp
rorb
push
sbb
mov
and
setp
dec
pusha
scas
in
cmpsl
pop
test
add
shll
out
pop
loop
lods
lock
adc
sub
sub
iret
je
mulb
cmp
ja
fcomps
mov
daa
jne
in
rorb
xor
enter
in
cmpsl
loopne
inc
inc
loopne
insb
andl
mov
jno
loop
mov
out
int3
or
test
sub
sub
in
xchg
ret
fwait
dec
mov
jnp
cmpl
mov
cmpsb
lods
push
dec
inc
adc
adc
inc
and
inc
inc
or
add
insl
cs
outsl
dec
das
mov
mov
xchg
mov
lods
xchg
mov
xor
push
jb
arpl
nop
pushf
stc
xor
nop
movsb
push
imul
in
jb
dec
push
out
cmp
sti
xor
xchg
jns
dec
mov
cmc
xor
pop
mov
and
into
ret
dec
es
mov
fsubs
das
icebp
call
pushf
outsl
adc
inc
hlt
pop
cmp
jne
jnp
stc
rcrl
or
xchg
xchg
cmp
testb
ret
ljmp
pop
int3
mov
int
dec
inc
mov
cmp
sbb
and
pop
data16
outsl
jmp
push
dec
stos
adc
or
out
sahf
jmp
addl
inc
sbb
sbb
lcall
sub
and
xchg
rcr
idivl
out
adc
arpl
inc
shll
push
decl
pushf
mov
cltd
xor
pop
add
add
mov
ds
mov
mov
add
xchg
inc
fwait
jle
cwtl
sahf
mov
out
adc
jae
rcl
mov
adc
icebp
mov
mov
fisttpll
sub
iret
adcl
dec
mov
adc
loopne
push
sarl
sbb
dec
shrd
pop
mov
xchg
adc
sub
rcll
sahf
cmpsl
clc
inc
inc
sub
xor
movsb
mov
movsb
outsb
inc
jmp
xor
iret
push
cmpsl
mov
pop
cmp
xchg
addr16
loope
dec
enter
inc
lea
dec
xor
dec
and
roll
push
push
ss
adc
js
sbb
push
mov
icebp
repz
add
ss
scas
sub
mov
mov
inc
adc
pop
int
ja
lods
movsb
test
test
mov
sbb
fwait
push
inc
fwait
scas
fwait
or
faddl
mov
jg
dec
imul
xchg
std
das
jns
add
jle
mov
add
sub
xor
or
adc
fmull
mov
pop
pop
aas
mov
mov
sub
in
lret
dec
lret
mov
inc
rorb
bound
inc
adc
xor
mov
sbb
outsb
gs
xchg
je
scas
fimuls
inc
pop
cs
in
lea
je
push
mov
add
adc
aaa
fwait
arpl
sbb
xor
sahf
sbb
shlb
pushl
jae
popa
pop
ret
inc
mov
push
idivl
dec
out
mov
mov
xlat
rorb
or
call
pop
mov
std
fmull
pop
dec
imul
cltd
add
jne
pop
push
jbe
jae
cs
mov
cmpsb
push
and
xchg
jbe
cld
sahf
cltd
fucomip
jae
repz
pop
fisttps
test
insb
push
sbb
and
adc
imul
std
jge
in
mov
mov
inc
mov
or
cmovne
and
das
int
lds
arpl
loop
inc
daa
addr16
cmpsl
enter
ficoms
fimull
mov
xchg
repz
test
xor
pop
mov
or
sub
fdivrl
cwtl
std
mov
jae
xchg
lret
aaa
lcall
rolb
ja
dec
or
scas
cwtl
daa
push
xchg
addr16
and
pop
popf
les
mov
das
imul
jbe
popf
fisubl
fdivrs
push
push
xchg
enter
pop
pop
sbb
orb
add
dec
inc
mov
outsb
fsub
popa
stos
push
push
lahf
fimull
xchg
sbb
xlat
cs
dec
mov
test
icebp
out
mov
popf
inc
lds
out
mov
mov
nop
bound
cmp
outsb
mov
fdivrl
mov
cld
cmpsl
mov
pop
or
es
nop
cmp
add
in
fmuls
ret
iret
lds
dec
inc
jmp
pop
lcall
popf
mov
push
daa
loop
mov
xchg
mov
addr16
push
sbb
adcb
fwait
xlat
xchg
mov
and
or
pop
shl
mov
fsub
lock
repnz
gs
pop
mov
lock
mov
lods
ficomps
jmp
fstl
rol
mov
pop
dec
stos
data16
insl
stos
adc
cwtl
sbb
cmpsl
xchg
ret
push
fwait
mov
popf
mov
lds
jmp
jle
cmp
fdiv
mov
jo
stos
ret
sbb
mov
test
imul
jmp
push
inc
cli
lcall
xchg
push
cld
out
rclb
imul
test
mov
jge
int
mov
push
je
js
sti
push
push
push
mov
jae
loopne
mov
les
repnz
cmp
jo
dec
test
call
sub
push
adc
movsl
xchg
stc
xchg
mov
add
add
lret
dec
movsl
inc
jmp
add
ficoml
roll
mov
test
daa
iret
mov
push
push
cmc
rclb
sbb
pop
pop
subl
ds
shll
adc
jmp
add
pop
push
adc
mov
cmp
pop
pop
push
ss
scas
push
mov
add
mov
add
ljmp
pop
out
push
push
mov
mov
cmp
adc
je
fld
xchg
adc
ret
jecxz
shrl
shlb
add
mov
fs
jno
mov
jl
cmc
lret
mov
fcoml
shl
xchg
push
sbb
pop
pop
lds
mov
imul
mov
cld
push
add
in
popf
enter
xchg
jmp
xlat
das
sub
cld
outsl
jnp
jbe
rcrl
iret
dec
cmp
sbb
or
shlb
test
and
cmpsl
iret
shll
jne
cmp
xor
repnz
std
mov
pop
bnd
mov
imul
int
inc
adc
es
sahf
lods
out
roll
jmp
iret
xor
add
arpl
mov
flds
hlt
mov
inc
pop
adc
or
push
jle
push
insl
push
popa
inc
adc
aam
loopne
push
clc
push
jnp
loope
outsb
out
mov
cltd
pop
rol
enter
xadd
mov
rcrl
test
scas
mov
pop
cmpsb
pop
dec
rolb
mov
fidivl
add
jp
mov
dec
loop
add
in
ja
sar
lock
sub
test
add
mov
scas
sar
xlat
loope
cmp
sbb
std
idivb
outsl
dec
or
ljmp
ret
std
stos
or
popf
sbb
test
js
inc
mov
xchg
nop
push
jbe
lcall
fdivs
rorb
hlt
repnz
pushf
and
ljmp
pop
cs
fs
xchg
stc
push
daa
icebp
and
jge
adc
mov
pop
mov
cltd
movsb
imul
pusha
scas
aam
push
movsb
arpl
pop
or
inc
test
outsb
in
xchg
mov
dec
sbb
cwtl
adc
pusha
pop
push
or
mov
popa
iret
icebp
pop
and
lods
scas
sub
xor
gs
pop
out
mov
or
add
cmp
inc
mov
lahf
inc
shrb
pop
fistpll
insb
cmp
jne
pusha
fisubs
es
popa
and
mov
std
mov
xorl
inc
fsubs
mov
imul
loop
sbb
ja
jns
adc
push
faddl
insl
sub
dec
std
popf
test
sbb
pop
fimull
insb
dec
jo
mov
mov
push
fs
sbb
inc
sub
dec
rdtsc
mov
sub
push
xor
jp
add
dec
inc
cli
inc
push
inc
std
mov
jnp
cmp
cmpl
dec
flds
mov
push
movsb
sahf
push
push
movb
pop
add
mov
add
inc
and
push
in
dec
mov
lds
dec
pop
js
sbb
xchg
stos
test
mov
pop
mov
pushf
mov
sbb
imul
jecxz
int3
and
ljmp
adc
jnp
xchg
pusha
mov
and
out
inc
sbb
lret
icebp
pop
jae
push
and
xchg
hlt
push
push
xor
cld
mov
ret
and
pop
pcmpgtw
fdivrl
call
push
mov
mov
jns
dec
lcall
push
sbb
popf
ss
or
sbb
fsubl
aam
sub
dec
inc
xor
vsubsd
jmp
jecxz
out
dec
shrb
je
adc
imul
daa
inc
mov
shr
cmpsb
fwait
ja
xlat
sub
lock
das
sub
mov
fdivrl
cmp
push
insb
xor
jnp
push
adc
lret
out
jge
mov
lret
sahf
out
pushl
inc
cmpsl
jmp
arpl
lcall
push
cld
push
xchg
das
pop
fwait
int
push
in
mov
push
ret
mov
mov
adc
jae
test
mov
lret
mov
xor
aaa
lret
inc
adc
repnz
ret
jl
ja
or
outsb
je
jbe
push
inc
xchg
push
test
enter
outsl
mov
lahf
add
mov
xchg
xor
or
and
xlat
jne
dec
or
mov
outsb
js
add
mov
jbe
push
adc
and
jae
clc
gs
fdivrs
mov
movsb
mov
cs
xchg
clc
sahf
scas
inc
sub
mov
fsubl
nop
and
sub
fsub
inc
loope
add
fldt
adc
or
je
scas
xchg
lret
jo
or
filds
repz
and
add
push
xor
out
or
cmpsb
lahf
repz
mov
xchg
mov
ljmp
dec
loopne
std
mov
lret
addr16
xor
fdivrs
pop
add
inc
leave
mov
ss
lods
or
call
add
pushf
mulb
inc
mov
push
xor
out
in
arpl
bound
cmp
xchg
or
scas
rcll
xor
xor
add
pop
lods
pop
aam
cli
out
mov
mov
imul
in
dec
cwtl
and
cmp
js
push
enter
mov
adc
pop
add
repz
xor
adc
push
cmp
push
out
test
cmp
jl
stos
outsl
lahf
setbe
sub
mov
repz
fldcw
adc
out
ffreep
into
jecxz
test
je
push
mov
repnz
mov
pushl
js
dec
movsl
dec
js
lods
lcall
ljmp
das
jp
xor
rdtsc
cmc
mov
mov
fs
fisubrs
push
cmp
sti
jmp
and
movsb
pop
push
fbld
xchg
push
fwait
into
scas
sti
xor
je
mov
sub
test
cvttps2pi
jns
push
test
outsb
lods
push
mov
adc
xchg
push
fsts
mov
je
xchg
jmp
jae
daa
js
push
mov
pop
mov
or
pushl
add
mov
andnps
inc
je
mov
or
pop
push
push
shrl
in
sbb
cmp
xchg
andl
xchg
fistpll
inc
cld
mov
sbb
pop
adc
inc
xchg
ret
xor
and
mov
dec
insb
lcall
lock
mov
das
sbb
dec
xor
lahf
xorl
jns
jo
push
xchg
hlt
jge
test
push
pushf
xchg
sub
lahf
push
inc
cli
cmp
push
cli
lods
or
push
sub
call
popf
cmpsb
subb
dec
inc
fs
adc
sbb
mov
pop
adc
jmp
cmp
mov
inc
aas
imul
ss
das
sbb
incb
mov
mov
insl
pop
sahf
and
aam
outsb
scas
into
jbe
jae
xor
daa
cmpsb
clc
jge
jg
icebp
mov
popf
mov
mov
or
inc
pop
inc
pop
outsb
adc
push
sub
xchg
leave
loopne
jne
xchg
stc
push
xchg
jns
lock
leave
mov
mov
icebp
in
sbb
fadds
cmp
sub
and
push
mov
xchg
test
imul
aad
xchg
adc
adc
test
scas
in
insb
dec
mov
xor
ds
adc
jmp
test
jb
adc
mov
adcb
into
or
rorb
incl
js
and
xchg
pop
into
adc
shld
mov
cwtl
iret
gs
test
stos
sub
lret
cwtl
mov
mov
cmpb
and
and
add
jmp
mov
cmp
iret
mov
xchg
push
pop
and
push
scas
xor
mov
inc
sbb
test
mov
mov
jge
insl
test
push
cmp
mull
insl
xchg
lcall
xchg
push
pop
stc
sbb
adc
xchg
mov
push
cmp
sub
dec
nop
sahf
sub
outsl
int
std
jp
add
mov
in
mov
cmp
mov
mov
mov
shrl
add
sub
arpl
dec
cmp
lcall
adc
sahf
and
cmp
dec
lahf
xorb
mov
outsb
pop
in
inc
pushf
addr16
fistpl
jmp
aad
aad
adc
arpl
movsl
ror
mov
mov
or
mov
addr16
andb
xchg
add
inc
adc
icebp
mov
bndldx
rclb
jnp
test
addr16
sub
fldenv
sub
shlb
cmp
sbb
out
dec
sbb
or
or
sub
and
and
add
add
cltd
and
cmpsl
repnz
lods
push
sub
mov
push
xchg
mov
cmpb
sbb
push
xchg
inc
cwtl
sub
rcrl
cmp
insb
inc
shlb
cwtl
jb
insb
add
jg
hlt
push
xchg
dec
stc
inc
sbb
mov
dec
push
push
sbb
add
cmp
adc
xchg
mov
mov
in
repz
ss
stos
jo
arpl
mov
lods
and
in
cmpl
dec
inc
lret
sbb
mov
aas
loope
jmp
mov
add
leave
inc
sbb
clc
cmp
cmpsb
adc
imul
sarl
sub
inc
push
rolb
das
test
test
xlat
test
pusha
adc
in
out
stc
pop
das
lahf
xchg
fimuls
xor
popf
notl
jle
movsl
xchg
and
cmp
test
mov
mov
cs
jne
lea
jg
mov
leave
bound
psubsw
in
stos
cmpsl
and
push
push
testl
out
mov
xor
mov
out
and
dec
add
push
test
jae
xchg
lret
add
fistpll
pop
jne
sbb
test
mov
sub
out
or
or
lods
mov
jp
int3
xchg
dec
push
push
jno
cmp
aam
std
shll
xchg
test
adc
xchg
popa
mov
js
iret
pop
pushf
dec
insb
aam
dec
mov
fildll
fsubs
test
xchg
mov
ds
pop
push
out
std
pop
pushf
pop
sub
pop
mov
adc
jno
andl
int3
mov
xor
fs
jmp
cmpb
clc
sbb
sub
daa
and
inc
scas
orb
fisubs
fwait
out
shl
inc
mov
jmp
and
shlb
insl
repz
inc
xor
movsb
push
mov
incb
lret
insb
mov
or
and
xor
jb
imul
es
inc
mov
xchg
clc
daa
fisubs
icebp
pop
dec
xchg
sbb
rcrb
fsubrl
lret
cmpsb
jne
mov
sbbb
cwtl
pop
movsl
int
div
jno
aad
lahf
int
pusha
subl
adc
fwait
inc
movsb
inc
and
cltd
push
call
mov
repz
mov
scas
imul
das
jp
into
mov
push
shrb
adc
daa
sbb
repnz
add
mov
pop
sbb
mov
mov
dec
adc
pop
cmpsl
inc
or
fdivrl
mov
mov
mov
mov
push
lret
cmp
js
mov
jbe
push
fisubrs
ja
adc
adc
add
in
std
jnp
andb
sbb
or
pushaw
and
cmpsb
je
mov
orb
mov
jns
jnp
dec
fisubl
sbb
dec
xchg
mov
mov
xlat
mov
push
dec
rorl
js
loope
pop
dec
decl
mov
ds
dec
lcall
xor
cmp
pop
and
lds
call
in
sbb
jo
jle
sbb
arpl
outsb
or
andl
jmp
xchg
jge
push
hlt
test
push
inc
int3
fldl
ret
xchg
sub
repz
std
jne
mov
fnstcw
mov
cmp
shll
adc
inc
mov
mov
adc
or
pusha
stc
sbb
loope
push
dec
sub
inc
pop
xor
stos
repnz
dec
pop
arpl
nop
push
inc
scas
aas
sbb
sub
fistpl
and
in
mov
or
jae
push
scas
lcall
cmc
or
add
lea
dec
rcll
mov
cmpsl
aas
popf
xor
or
xchg
sbbl
mov
dec
cld
shrb
dec
pushf
lods
iret
pushl
pop
inc
push
imul
xchg
mov
testb
repz
cmpsl
adc
in
fwait
popf
fwait
ret
leave
or
sub
or
inc
dec
and
inc
lods
sarb
push
sbb
xor
inc
mov
or
jp
repz
mov
mov
aas
pop
inc
rcrl
mov
inc
xlat
shl
cld
xor
imul
dec
insb
xor
outsb
data16
imul
movsb
xor
mov
pop
mov
into
or
repnz
cmp
mov
fdiv
aas
add
adc
rclb
mov
enter
sub
pop
hlt
insl
lea
js
inc
xchg
xlat
movaps
xchg
jle
sahf
dec
nop
ja
in
sarl
sti
mov
push
jb
mov
call
adc
and
hlt
popa
repz
mov
addl
cmpsl
nop
inc
dec
pop
add
sbb
mov
push
mov
jecxz
jno
outsb
mov
and
hlt
paddusw
mov
aad
test
push
add
lea
jbe
addr16
fisttpl
and
mov
fcmovnb
out
outsl
push
cwtl
mov
aad
mov
mov
mov
lret
bound
mov
test
mov
das
mov
scas
pop
and
mov
xchg
mov
adc
mov
adc
pop
cmp
sub
dec
negb
sub
pushf
jecxz
and
pop
sbb
mov
or
je
mov
lcall
jp,pt
cwtl
pop
in
dec
xorl
loopne
push
mov
xchg
ljmp
int3
rorb
and
xorb
cmc
dec
addr16
sbb
addl
call
orb
add
jmp
mov
xchg
mov
in
and
gs
shlb
xorb
jns
fiadds
outsl
bound
dec
imul
jnp
mov
mov
adc
mov
mov
aad
xchg
stc
dec
lcall
sbb
mov
pop
negb
mov
push
mov
test
rolb
loopne
es
mov
mov
jge
gs
pop
imul
cmpsb
xchg
loopne
xchg
fprem1
dec
cmp
mov
mov
mov
popa
inc
cld
int3
xchg
pop
arpl
leave
daa
cmp
movsl
es
push
mov
arpl
xchg
xor
out
es
shlb
xchg
jae
sarl
mov
add
sub
sbb
sub
push
mov
inc
popf
add
out
bound
lock
cmc
dec
jo
adc
mov
xchg
dec
add
inc
icebp
imul
dec
sbb
pop
push
testb
outsl
cmp
in
out
aaa
lds
int3
cmp
fwait
xchg
or
xchg
xor
xchg
cmp
add
dec
fdivl
pop
loopne,pt
pop
jg
sti
and
stos
frstor
mov
outsb
jge
xlat
and
sbb
adc
insl
icebp
lods
and
add
and
aas
imul
cmp
in
sub
cmp
outsb
icebp
xor
mov
aad
subb
xchg
stos
lret
fwait
test
divl
sub
push
arpl
repnz
dec
outsl
clc
mov
push
add
or
mov
shlb
fldln2
sub
push
fisubl
and
xlat
cmp
adc
das
cmc
jnp
clc
rorb
jmp
jp
adc
adc
cmp
push
jbe
ds
add
imul
add
dec
enter
dec
fs
sbb
xor
mov
ljmp
jp
addr16
cmp
jne
sub
mov
ret
mov
enterw
insl
jno
inc
cmp
js
adc
lret
fidivrs
adc
inc
mov
repnz
xchg
fistpl
mov
push
adc
in
inc
outsl
cmpsl
mov
jno
sarb
dec
jo
push
or
sub
aad
ja
xlat
mov
inc
shr
or
sub
xor
push
sub
dec
mov
iret
mov
aam
fsubl
push
mov
xchg
fstpt
imul
xor
sbb
jge
aaa
fwait
adc
test
inc
push
xchg
in
loop
mov
cli
fldl
addb
imul
jnp
dec
pop
inc
jp
xchg
mov
int
adc
test
test
gs
aas
mov
adc
arpl
inc
mov
es
jmp
inc
aad
jp
stos
mov
sarb
pop
sbb
ret
adc
cmc
add
out
lods
push
pop
sub
sbb
xor
movsb
cmp
adc
xchg
mov
aam
mov
cwtl
ljmp
xchg
cmpsl
jo
mov
dec
loop
mov
mov
sub
mov
mov
into
jns
mov
clc
dec
cmp
popa
mov
or
mov
in
pop
pop
xchg
jl
push
push
push
push
iret
enter
pop
cmp
pushf
adc
sub
shrl
shll
addr16
adc
inc
out
pusha
ss
mov
pop
dec
repz
adc
pop
jge
pop
jmp
seto
call
arpl
aas
sti
adc
mov
fsubrs
arpl
xchg
pushf
sub
mov
pop
pusha
dec
mov
push
enter
lret
roll
movsb
lods
pushl
ss
jnp
addr16
cmp
in
lods
mov
je
fimull
xchg
mov
inc
or
pop
jp
xlat
adc
mov
mov
pop
test
push
add
or
loopne
pop
popa
cltd
adc
fisttpl
nop
sbb
je
cwtl
xchg
imul
inc
fs
or
jno
or
xchg
cli
cmp
sbb
pushf
cmp
mov
sub
aad
test
negb
mov
sub
cmpl
jle
inc
dec
rorl
div
insb
popf
iret
dec
push
mov
outsb
je
push
arpl
pop
jl
mov
mull
in
bound
xchg
sbb
cwtl
pusha
dec
bound
jmp
pop
int
mov
fidivs
ljmp
out
mov
mov
or
rcrb
push
mov
sahf
push
cmp
fildl
sub
xchg
pusha
push
mov
pushf
xchg
and
es
out
dec
popa
push
mov
xor
mov
or
sub
xor
add
mov
cmc
or
sbb
filds
xchg
mov
add
jg
rolb
hlt
icebp
mov
pusha
je
jb
inc
popa
adc
or
loopne
xor
es
sub
fistl
push
cmc
cmpsl
sti
cmpsb
cmp
test
sarb
jo
out
mov
xchg
push
pop
jns
orl
xchg
mov
mov
cwtl
rcr
cmp
test
cwtl
int
movsb
arpl
adc
ret
cmc
into
mov
lds
mov
inc
inc
movsb
adc
and
loop
mov
pop
lods
xchg
mov
push
mov
pop
sub
in
mov
pop
iret
dec
xchg
lcall
push
xor
outsl
rorb
cmp
pop
mov
push
sbb
push
popf
push
sbb
in
push
xchg
xchg
jo
inc
cmpb
mov
rcrb
add
loope
push
xchg
mov
jbe
mov
es
xor
inc
out
fiaddl
and
sub
int3
xchg
test
leave
push
das
repnz
dec
lods
shlb
divb
out
sub
mov
xchg
movsl
add
and
jbe
or
adc
shrl
into
les
imul
jg
mov
fcomps
andb
idivl
dec
imul
jne
xor
imul
sub
jne
aas
or
mov
cmp
xchg
adc
gs
out
stos
mov
mov
cmp
inc
add
pop
out
sti
add
stos
jmp
sbb
sub
and
mov
fsubrl
mov
lods
cmpsl
or
jne
fisubrs
pop
repnz
insb
enter
pop
popa
or
js
mov
popa
nop
xchg
cmp
aam
andl
push
out
push
xor
mov
ljmp
dec
mov
les
cltd
jae
andl
jne
ja
adc
push
mov
xlat
gs
icebp
dec
ss
mov
jmp
idivl
jo
push
inc
insb
clc
mov
push
lretw
dec
cmp
outsb
cmp
insb
clc
daa
mov
ds
aam
andb
adc
sbb
fiadds
mov
gs
push
je
rcr
mov
frstor
sahf
xor
mov
mov
inc
and
xchg
leave
int3
mov
idiv
in
jbe
addr16
xlat
sub
cli
dec
push
sbb
adcb
mov
stos
adc
mov
jb
xorl
stos
movsb
mov
icebp
dec
inc
mov
cmp
inc
jns
mov
pop
and
fcmovnu
cli
sbb
clc
inc
inc
cwtl
cltd
stc
rorl
les
fistl
div
ficoml
xlat
in
pushf
xor
inc
jge,pn
or
test
nop
data16
int
dec
testl
sub
inc
icebp
test
add
sbb
repnz
clc
fstpt
sbb
xchg
xchg
ret
cltd
or
sarl
push
mull
adc
and
pop
lcall
clc
xlat
pusha
mov
into
ljmp
filds
bound
iret
jl
sub
fmull
dec
lds
inc
pop
sub
and
dec
push
mov
sbb
mov
fsubl
pop
add
mov
rorl
arpl
loopne
xchg
xor
test
pop
stos
in
in
imul
rorb
inc
cmp
bound
test
pop
fildl
rorb
andb
movsb
addb
xor
adc
mov
pop
andb
pusha
outsb
pushf
movsb
adc
push
adcl
leave
jg
insb
ret
stc
add
dec
push
imul
jge
cmpsb
rcrl
xor
popl
in
jnp
mov
mov
int
iret
adc
mov
push
cmpsl
cmp
lods
test
movsl
mov
xchg
mov
inc
mov
scas
popf
pop
mov
sbb
and
cmp
cmc
mov
in
popa
push
mov
das
mov
sbb
cmp
not
mov
sbb
and
insb
shrl
cs
les
int3
jbe
cmp
lret
hlt
or
out
int3
and
dec
jns
push
aam
pop
sub
push
pop
jge
adc
call
andb
inc
pop
enter
faddp
int3
fs
out
push
and
or
bound
mov
xchg
iret
sbb
mov
popf
mov
xlat
cmc
shrb
icebp
insl
push
dec
dec
ss
push
sub
hlt
scas
fcoml
pop
jb
and
cs
xchg
sub
or
int
sub
insl
lea
sbb
adc
or
enter
data16
push
xchg
inc
dec
pop
std
pop
jne
rcll
ss
inc
and
and
inc
hlt
aam
and
sub
jo
ja
mov
mov
mov
insl
shrb
scas
js
pushf
xor
cmc
jge
pop
mov
clc
mov
mov
dec
push
mov
lret
pop
jg
xor
es
out
and
nop
popf
push
mov
mov
dec
aaa
lods
in
fldt
cmpsl
push
movsb
push
js
and
rclb
push
dec
rorb
loopne
push
dec
pop
mov
sub
adc
dec
adc
mov
pop
xchg
cmpb
xchg
bound
mov
push
mov
xorb
xlat
outsl
sbb
or
dec
lods
xor
xchg
rcr
sbb
pop
lods
mov
je
in
ret
push
ror
xor
fistl
inc
inc
fidivl
jb
and
jbe
ret
stc
std
jne
insb
xchg
xchg
outsl
notl
mov
aad
sub
push
pop
in
add
pop
pushf
add
imull
clc
sbb
push
out
fisubs
sub
aas
sub
xchg
shlb
loop
loopne
aaa
and
inc
xlat
fiadds
ror
fldt
sbb
dec
push
call
mov
push
jnp
jae
cmp
pop
repz
xchg
icebp
xor
out
ds
add
mov
cmpl
pop
mov
mov
fcompl
pop
test
lods
mov
or
add
adc
add
or
jno
sub
imul
xchg
popa
outsl
imul
and
ljmp
outsl
jecxz
mov
pop
outsb
in
xchg
sbb
mov
testl
out
mov
sbbb
int3
lds
out
cwtl
scas
add
int
adcl
mov
lods
xor
push
mov
pop
ret
mov
ret
out
mov
jmp
iret
cs
aaa
push
mov
test
test
outsl
mov
rorb
arpl
mov
add
lret
das
dec
mov
lahf
push
adc
shrb
sbb
sbb
xlat
into
adc
add
sahf
cs
jae
lret
jne
icebp
lea
sahf
push
mov
adc
cltd
mov
aad
scas
cli
std
push
sub
icebp
jle
arpl
dec
pop
inc
ret
call
xorb
mov
jnp
push
mov
fs
adc
fdivp
push
or
sub
out
jg
sub
mov
lock
add
xchg
mov
iret
mov
bound
inc
jmp
and
jnp
inc
jecxz
cmp
lahf
mov
push
mov
cmp
push
xor
shll
jae
ja
add
icebp
stc
adc
push
dec
push
inc
sti
add
jle
out
ljmp
popf
fcmovu
divb
dec
lods
loope
rclb
xor
imul
ss
fmuls
xchg
push
lods
inc
cld
pop
lds
mov
mov
dec
cmp
enter
insb
out
mov
bound
cli
imul
push
in
std
push
leave
into
in
rcll
pop
jp
ljmp
fs
andl
shlb
xor
inc
sbb
mov
hlt
jnp
sub
mov
mov
clc
xorb
clc
xchg
lock
pop
add
out
flds
scas
mov
xor
test
pop
into
mov
inc
test
sahf
xorl
in
cmp
test
push
nop
mov
movsl
outsb
and
aas
mov
jnp
loop
out
shll
adc
push
sarb
mov
fsubs
mov
sbb
into
push
sbb
sub
mov
mov
subl
mov
cmp
and
lods
bound
insb
imul
and
aad
cmp
push
and
mov
pop
imul
add
je
out
mov
adc
and
repnz
aaa
js
mov
or
mov
inc
jae
adc
test
es
loopne
cmpsl
jae
pushf
sbb
out
jns
push
jp
imul
notl
cmc
leave
nop
into
cmpsb
mov
sahf
in
push
pusha
jle
std
in
bound
or
push
xchg
push
push
lret
addr16
insl
add
jae
mov
adc
roll
mov
cmc
adc
mov
pop
mov
mov
nop
cmc
aaa
subl
orb
mov
loope
imul
pop
mov
inc
cmp
sahf
xor
mov
shll
mov
std
push
jg
adc
jb
xchg
rorb
xchg
lea
pop
lock
rolb
add
xchg
cs
mov
int
scas
adc
hlt
add
iret
sbb
xchg
jnp
js
mov
roll
jo
scas
add
lcall
popf
jnp
add
cmp
xchg
cmp
lods
pop
or
arpl
xor
pop
pop
enter
sbb
pop
stos
cmp
cmpsb
pop
xor
inc
push
pop
xchg
push
dec
jl
jge
call
ret
sub
cmpsl
adc
cld
mov
xor
jne
adc
sub
mov
dec
fnstcw
mov
sub
jmp
les
bnd
mov
add
xor
mov
les
dec
movsl
cli
xor
hlt
cltd
lock
mov
pop
popf
ret
lcall
fwait
aaa
repz
int
xchg
insb
dec
test
dec
clc
xchg
je
jge
xor
das
push
pop
sbb
xor
inc
xor
mov
pop
es
aas
mov
pop
xor
sbb
xchg
jp
mov
pushf
xchg
adc
mov
les
leave
sbb
dec
pop
cld
sahf
mov
inc
and
inc
in
push
aas
movl
cmp
clc
pop
cmp
xor
mov
dec
lds
in
stos
leave
or
enter
mov
push
test
sbb
ss
pusha
mov
mov
negl
cmp
mov
push
sbb
test
sbb
cmp
lcall
inc
xor
xchg
fsub
push
xor
in
ljmp
push
xchg
jg
cmp
popa
out
jle
in
xchg
and
das
or
fldlg2
or
addr16
subl
jnp
pop
xor
mov
lods
hlt
mov
xor
xchg
rcll
repz
scas
push
adc
inc
push
sub
adc
and
jo
pop
popf
mov
pushf
mov
xor
sbb
xchg
pslld
idivl
jb
bnd
int3
aam
mov
out
test
bound
call
cmp
jmp
ret
adc
js
xchg
call
cld
push
mov
push
fiadds
js
xchg
pop
push
shrb
hlt
outsl
mov
sub
cmp
fs
outsl
les
xor
test
call
jmp
cmp
andb
aad
es
rol
push
add
fistpll
in
xor
pop
xchg
push
lret
xor
nop
sbb
push
push
xor
xchg
adc
jo
fidivs
pop
xchg
mov
mov
cmp
int
dec
fcoms
repz
das
inc
outsb
or
aaa
sub
enter
mov
adc
lcall
add
hlt
jno
lock
adc
aas
js
popf
push
ljmp
lods
mulb
mov
cmp
xor
inc
cmpsb
mov
xlat
popa
testl
fmulp
mov
mov
mov
arpl
iret
lock
inc
xor
adc
pop
jne
and
push
or
mov
sahf
addr16
shll
jne
inc
stos
sti
jmp
insb
in
loope
cmp
xor
jl
xchg
add
dec
mov
dec
inc
int3
xor
or
das
hlt
insb
subb
ss
dec
jl
rcll
sti
pushf
loopne
fadds
mov
mov
mov
xor
pop
mov
enter
adc
iret
iret
in
push
inc
pop
jg
out
aam
es
jns
pusha
adc
fbld
call
and
dec
stos
push
sti
into
test
push
xchg
jge
daa
mov
inc
imul
pop
lock
out
mov
adc
or
inc
ret
imulb
or
push
mov
mov
push
andl
fnstenv
mov
push
sti
and
sub
inc
and
pop
mov
sbb
gs
test
negl
jmp
push
push
movsb
mov
out
add
cwtl
sbb
ds
fwait
mov
and
cmc
sbb
rorb
pop
repz
push
das
insb
cmp
int
outsl
jle
pusha
fidivs
inc
bound
inc
ret
orb
inc
lret
into
scas
aas
ja
dec
loopne
lea
in
aaa
std
sub
daa
jl
add
cmp
sbb
rolb
push
loopne
clc
xchg
add
pop
mov
call
shll
sbb
jbe
icebp
pop
mov
xlat
dec
test
push
dec
inc
aas
cmpsl
adc
testl
push
pushf
adc
in
test
or
and
mov
cli
xor
jbe
mov
pop
pop
lods
pop
lock
incl
push
sbb
pop
scas
hlt
daa
pusha
stc
repnz
or
imul
loopne,pn
mov
sub
neg
mov
ljmp
shl
out
lea
cmp
sub
xor
rcrb
xor
jbe
mov
jnp
lahf
xchg
leave
inc
adcl
pop
cltd
cmp
jp
ret
mov
loopne
xchg
std
ljmp
ret
xor
cmp
popf
xchg
cmp
ds
shr
and
push
jg
or
mov
inc
sbb
mov
xor
xchg
mov
push
iret
push
mov
xchg
dec
mov
jb
or
inc
sbb
shr
xchg
sbb
loope
test
cs
xorb
push
adc
pusha
icebp
mov
adc
ret
push
sahf
or
negl
or
mov
lea
xor
ret
push
cmovs
xchg
cmc
into
ret
bound
jmp
fists
and
push
mov
inc
pop
shll
xor
mov
xlat
push
jnp
pop
ds
fldenv
insl
addl
popa
lret
fists
mov
push
jb
sub
jg
inc
inc
pushf
negl
imul
adc
push
mov
lcall
pop
mov
mov
shlb
bound
mov
mov
pop
loopne
or
inc
dec
push
xchg
mov
adcb
dec
rcr
ljmp
push
inc
in
jae
int3
clc
in
rclb
leave
enter
insb
mov
push
pusha
sub
outsl
and
inc
insl
in
es
cld
das
mov
mov
or
test
dec
sub
pop
mov
rcrl
popa
push
ja
or
scas
enter
cmp
in
sahf
into
sbb
je
sbbl
pop
js
pop
cmc
xchg
cwtl
or
stc
arpl
int3
add
or
das
fwait
cs
loopne
xchg
sahf
lret
push
das
cmp
fcoml
lock
cmpsb
ret
sub
jl
mov
cmp
push
jae
mov
movl
jg
out
inc
add
shlb
sbb
adc
cmpsl
test
out
pop
ss
andb
jo
mov
jns
outsb
jo
ret
loope
or
mov
cmp
mov
adc
cmp
lods
push
or
gs
stos
insl
fwait
pushf
insl
repnz
pop
leave
cs
push
pushf
fsubrs
push
sub
dec
jmp
cmp
ret
sbb
xchg
ljmp
cmpsb
je
mov
add
iret
cld
push
mov
test
jbe
stos
xor
adc
push
jl
mov
xchg
lcall
xchg
insl
loop
pop
in
push
jbe
xor
xor
or
iret
ror
scas
popf
daa
mov
popa
int
and
or
movsb
sbb
cmc
inc
cmc
pop
lods
fistl
les
sbb
ficoms
mov
xchg
daa
mov
xorb
inc
mov
mov
call
or
out
in
iret
add
arpl
ficompl
into
pushf
push
cmovge
in
inc
cmpsb
push
inc
mov
push
pop
xchg
sub
sbb
pop
cmp
push
cmp
dec
shrl
add
int3
sbb
xchg
mov
sarl
or
out
mov
aad
cmpsb
call
ljmp
pop
pop
rep
shl
mov
mov
in
and
call
rorb
xorl
enter
mov
int
mov
cmp
or
xor
movsl
pop
xchg
daa
stc
cld
push
mov
sub
fwait
popf
cmp
fwait
sbbl
repnz
push
mov
mov
mov
cmp
jnp
push
les
xchg
adc
out
mov
lock
rcrl
mov
popa
mov
jb
sub
shl
test
rep
cmc
je
loop
mov
cmp
cmpsb
sar
mov
add
pop
dec
or
aad
add
pusha
push
adc
mov
aam
mov
ljmp
pop
and
into
jecxz
dec
jecxz
call
ljmp
lcall
std
mov
lock
jnp
test
sub
mov
inc
mov
aas
mov
outsl
pop
pop
addl
int3
incb
popf
mov
lret
dec
mov
cmp
push
ficomps
add
cmp
pop
cmpsl
mov
imul
sbb
test
xchg
std
adc
mov
cmpsl
xchg
lret
lds
popf
inc
cli
pushf
incb
in
lods
and
add
push
test
inc
repz
pop
mov
or
cmp
stos
or
push
inc
sahf
lods
shr
outsb
sub
jp
popf
fisttpll
rcll
lock
out
ss
pop
mov
mov
shlb
mov
pop
cmp
sub
push
sub
mov
imul
xchg
int3
mov
mov
mov
mov
shl
call
gs
xchg
aas
lods
aad
data16
cmp
aam
dec
ja
adc
cmp
test
into
or
jae
aam
jno
arpl
sbb
sub
out
xchg
test
test
inc
or
and
sub
cmp
stos
fs
lock
das
sahf
jb
mov
mov
arpl
fwait
xchg
mov
loop
loope
sbb
in
add
daa
sahf
adc
test
pop
testb
xor
out
gs
int
or
lock
leave
mov
loopne
jmp
out
and
sub
or
sub
mov
es
lods
xchg
ret
and
push
mov
gs
hlt
mov
mov
rcrb
xchg
mov
popa
dec
or
pushfw
js
jge
mov
xchg
and
loopne
and
in
add
add
sarb
adc
xor
data16
or
push
nop
ja
push
fcom
mov
scas
pop
loop
mov
sti
pop
or
popf
fsubs
lret
mov
inc
sub
daa
cmc
iret
push
mov
or
xlat
std
cmp
pop
pop
push
cmp
mov
jp
sub
push
adc
daa
or
inc
aam
icebp
push
data16
pushf
icebp
test
sbb
dec
add
pop
cmp
test
mov
mov
mov
hlt
out
sub
pop
addr16
hlt
inc
in
adc
pushf
mov
cld
add
bound
fimull
clc
shlb
pop
sbbl
jg
sti
and
mov
mov
lcall
push
js
or
test
lock
enter
sbb
in
stc
faddl
fistpll
mov
ss
xor
mov
mov
xor
push
cmc
sbb
cs
dec
cmp
dec
lock
mov
pusha
push
arpl
fistpl
aaa
push
sbb
lock
int
mov
ffreep
aaa
shll
mov
pushf
std
cmp
daa
enter
imul
data16
fs
cs
jno
pop
mov
sahf
je
sub
clc
inc
addl
enter
dec
aad
mov
push
jne
add
and
mov
mov
xor
pop
pop
pushf
pop
int3
add
mov
test
shr
stos
aas
mov
cmpsb
adc
clc
nop
inc
mov
jne
clc
push
test
out
leave
push
adc
add
cmpsl
lea
dec
cmp
jmp
inc
jmp
leave
push
jo
adc
cmp
icebp
dec
add
outsb
jg
outsl
cltd
cld
test
sahf
pop
jns
sbb
or
mov
xor
push
add
xor
test
popa
daa
lcall
test
add
sbb
cmp
imul
sbb
push
dec
stos
cmpl
mov
pusha
fcmovu
inc
mov
jle
shlb
sbbl
mov
jecxz
push
add
mov
je
fbld
push
fstpl
xor
dec
enter
dec
xor
push
or
repz
orl
jmp
dec
leave
inc
xor
and
inc
in
test
insl
or
aas
fnstsw
push
fidivrl
int3
sub
aad
inc
dec
or
bound
adc
xchg
sub
cmc
mov
clc
pop
add
mov
fldenv
pusha
push
jp
and
inc
adc
cmp
aam
sub
sub
mov
fdivrs
sub
add
mov
jp
mov
notb
ds
mov
cltd
mov
bound
mov
fistl
jbe
xor
sbb
and
sti
mov
xor
pop
out
movsb
and
lods
mov
repz
mov
sbb
pop
sub
in
movsb
das
pop
mov
pop
xchg
dec
inc
ret
fwait
lock
ljmp
dec
sahf
ret
scas
insl
mov
loopne
sub
inc
out
pop
pushf
scas
add
add
mov
mov
adc
jo
sbb
bound
cmp
or
jg
jno
xlat
clc
and
gs
popf
push
pop
pop
mov
mov
int
sbb
pop
das
push
fisubs
cmp
scas
cwtl
lods
daa
inc
dec
aaa
movsb
fists
std
xchg
daa
jb
aam
jnp
test
push
addr16
es
nop
push
lcall
mov
xchg
xchg
stc
aas
and
pop
xor
cmpsl
cmp
or
adc
or
mov
out
loopne
stos
dec
xor
push
fcompl
iret
pop
int3
mov
push
insl
push
int3
cltd
xchg
mov
out
mov
test
xor
cmp
or
xchg
and
add
arpl
mov
fs
jo
lahf
adc
outsl
test
fst
xchg
lahf
rolb
and
dec
sub
in
arpl
cltd
mov
insl
das
sbb
sub
insl
subl
fcmovnb
add
and
or
cli
mov
aaa
subl
iret
stos
or
int3
popa
and
push
cmpsl
adc
jbe
stos
mov
popa
add
mov
add
xchg
pop
pop
icebp
jbe
xor
or
jno
dec
mov
xor
dec
or
xlat
mov
subb
lret
stc
add
rorl
jne
cmp
xchg
leave
decl
or
in
loopne
loop
popa
ja
xor
mov
inc
rclb
jl
ret
and
pusha
xorb
call
popf
fbld
in
lods
int
cmp
test
jecxz
clc
lods
data16
fsub
cmp
sahf
jne
pop
ljmp
push
adc
jl
test
in
inc
pextrw
sbb
test
ja
andl
add
addr16
mov
lock
mov
jo
and
sbb
and
in
xlat
jp
xlat
inc
clc
lret
xchg
pop
push
or
cmp
xchg
xchg
in
dec
or
rcl
push
fdivrl
sub
dec
sbb
inc
dec
pop
imul
cmp
push
push
pop
addr16
aad
mov
and
push
xchg
loopne
jne
and
aam
jmp
inc
mov
mov
movsl
lret
and
mov
cmp
adc
aam
mov
xchg
mov
lds
pop
pslld
pop
pop
test
jp
pop
or
push
add
pop
add
test
int
xchg
popl
push
rolb
pop
movsl
mov
ret
adc
jno
or
jne
insb
or
cltd
lahf
lock
mov
sub
or
movsb
lods
and
dec
push
mov
mov
out
mov
imul
mov
pop
xchg
stos
movsl
loop
inc
cmp
lods
mov
sbb
sbb
xor
fstps
popa
enter
jae
jg
sahf
mov
xchg
or
pop
adc
stos
cmp
stos
insb
lahf
mov
popa
jns
mov
xorb
insl
pop
mov
xorb
and
sbb
imull
loopne
pop
cmp
xor
cmp
js
pop
sarl
es
pop
mov
xor
add
mov
ret
call
jge
pop
lods
xor
push
leave
fmuls
imul
in
add
loopne
jne
add
xchg
pop
pop
arpl
dec
mov
lret
cmp
mov
imul
popa
jo
and
fnsave
sub
pop
mov
dec
sbb
mov
cmp
out
rorb
cmc
push
fwait
xchg
and
std
and
fcomps
fiaddl
xchg
jmp
out
outsl
outsl
and
repz
call
rorb
inc
cld
fsubrs
sbb
daa
fstpl
dec
dec
pop
add
mov
push
arpl
jo
cli
mov
test
mov
cli
dec
cmp
mov
inc
scas
dec
pusha
scas
lret
in
inc
adc
std
or
lods
or
mov
addl
jns
cli
fwait
pushf
test
mov
xor
pop
xor
cmp
fmul
das
fwait
adc
cmpsl
or
xchg
xchg
jnp
enter
mov
adc
loopne
mov
cmp
out
lret
jmp
inc
or
adc
adc
call
jmp
push
cmpl
adc
mov
xor
adc
mul
sbb
dec
dec
add
mov
mov
in
push
into
and
xchg
mov
xor
or
mov
lods
add
pop
sbb
mov
cmpsl
inc
xor
into
lret
imul
mov
adc
shl
and
lods
add
lods
mov
dec
daa
js
push
add
inc
mov
fwait
push
imul
mov
pop
inc
dec
andb
xlat
xchg
jle,pt
shrl
das
lds
int
je
pop
and
xchg
rcrl
mov
sbbb
sbb
arpl
dec
adc
insl
fistpll
out
call
mov
ds
push
rcll
outsl
adc
xchg
fwait
out
pop
mov
fwait
loope
es
or
int3
mov
cmpsl
sahf
stos
xor
dec
add
dec
mov
in
das
pop
les
sbb
test
shrl
popl
mov
dec
lea
mov
mov
sbb
sbb
aad
adc
shll
fidivs
mov
push
jb
out
adc
push
cmp
fisubrs
push
shll
pop
imul
roll
adc
add
mov
xor
scas
outsb
xchg
leave
popa
or
subw
mov
fisubrs
vphaddbd
mov
mov
jbe
dec
scas
xchg
repz
fbstp
mov
es
sub
lret
and
loope
orl
xorl
mov
test
sbb
shll
mov
ljmp
cmp
in
lock
dec
out
fs
mov
mov
pop
out
jl
insb
stc
or
push
movsb
mov
ret
divb
pushf
jp
clc
std
sub
jae
pop
dec
imul
jno
stos
and
mov
add
pop
fcmovnb
mov
ret
xchg
in
repnz
and
inc
subl
cmpsb
into
cmp
in
mov
add
push
mov
mov
sub
lods
cmpsb
test
cmp
lods
cmp
mov
fildl
xor
add
or
mov
push
loop
je
mov
mov
inc
ljmp
push
mov
mov
cwtl
pop
nop
pop
out
rcr
lods
and
cmp
repnz
cld
ja
cmc
stos
inc
lods
mov
and
jmp
jns
repnz
out
lds
mov
icebp
xlat
cmpsl
sub
adc
inc
add
xchg
fiadds
mov
jp
lcall
xor
ret
arpl
mov
fyl2xp1
xchg
or
mov
jecxz
jmp
add
cwtl
cmpsb
add
mov
xor
mov
filds
je
sub
sub
sub
fs
jnp
pop
fstl
push
je
daa
out
adc
pop
popf
nop
sahf
rol
sbb
xor
mov
aaa
bound
cmp
inc
out
adc
leave
mov
int3
imul
mov
repz
push
in
sub
in
adc
mov
pop
adc
scas
loope
cli
pop
adc
adc
lret
or
aam
mov
rcr
push
bound
fwait
out
dec
cld
pop
add
xchg
or
xor
xchg
pop
mov
jecxz
mov
mov
dec
mov
std
and
inc
mulb
push
sub
cmp
push
dec
aas
cltd
mov
aad
sbb
mov
shl
call
pop
test
popf
mov
fisubrs
not
cmp
dec
loopne
popf
out
mov
repz
icebp
jge
out
mov
cld
mov
subl
lea
std
imul
mov
test
adc
dec
scas
lret
jge
lods
inc
or
outsl
mov
mov
jmp
in
mov
outsb
mov
jnp
mov
pop
mov
xchg
cwtl
sub
jp
je
push
lods
sti
mov
mov
and
xchg
aad
or
test
sbb
sbb
pop
push
es
test
xchg
test
mov
jno
xchg
arpl
popa
xchg
mov
enter
sbb
cltd
push
idivb
incl
testl
push
add
pop
das
sarb
test
dec
call
enter
stos
sub
inc
jo
jecxz
jae
pop
clc
and
dec
dec
ret
or
daa
mov
push
inc
es
cmpsl
jl
pop
popf
sarl
aam
adc
imul
decl
test
call
cld
clflush
leave
lods
fcmovu
mov
mov
xchg
lahf
leave
or
cmp
sbb
or
mov
and
dec
push
jle
icebp
leave
daa
cmp
not
sahf
sarb
pop
pop
in
ja
lods
fwait
pop
lods
add
in
mov
sub
sub
sub
dec
mov
sub
mov
idivb
xchg
shll
sub
flds
in
cld
cmp
xchg
cmp
mov
sub
into
or
cs
stos
mov
or
lds
adc
and
lea
leave
xor
test
movsl
mov
jno
jno
mov
xchg
aam
or
pushf
addr16
add
and
shll
shlb
push
dec
adc
pop
push
adc
mov
mov
cmpsl
mov
test
std
xchg
xchg
adc
adc
test
ficoml
ds
add
scas
lahf
cmp
jbe
jnp
pop
aaa
out
xor
pop
cmc
stc
cmp
popa
pop
rolb
imul
sti
nop
adc
outsb
test
dec
mov
inc
jle
shr
jmp
out
ret
stc
jb
or
mov
stos
add
xchg
aam
add
es
ds
sahf
test
fwait
mov
imul
mov
xchg
shll
sub
dec
imul
xchg
adc
out
cmpsb
lret
xor
mov
pop
push
xor
mov
inc
inc
stos
jge
push
lods
xchg
lods
push
or
pop
repz
jg
mov
pop
push
test
scas
nop
mov
dec
addr16
cmp
iret
push
sbb
sub
add
jmp
cs
pop
push
icebp
stos
scas
push
add
mov
dec
or
int3
ds
pusha
lock
mov
pop
lahf
pop
adc
add
add
sbb
jae
jno
icebp
fisubs
cmp
es
fmul
cltd
fs
xchg
mov
push
test
stos
jmp
bound
popf
mov
mov
sub
dec
aam
adc
pop
xchg
pop
mov
jae
inc
dec
repnz
mov
movsb
adc
in
or
push
movsb
cltd
xchg
mov
push
pop
push
sbb
test
push
pop
and
in
cmp
add
dec
mov
xlat
pop
jne
pop
lds
outsl
shlb
xchg
xor
lock
popf
xchg
pushf
stc
add
lods
aam
nop
paddsb
lea
add
icebp
sarb
mov
jecxz
sti
daa
push
inc
icebp
jns
shll
cltd
xor
fldenv
ret
rclb
je
ret
fadd
add
xor
push
xor
xor
xchg
xchg
push
ret
add
nop
and
std
iret
xlat
inc
push
mov
pop
sub
mov
push
push
imul
std
mov
pop
pop
std
ror
inc
and
out
negb
insl
xor
add
xchg
sub
ret
fyl2xp1
test
lret
mov
cmp
dec
iret
pop
fdivp
xor
icebp
scas
add
into
jno
add
push
out
test
push
jp
push
cmp
mov
pop
sti
je
les
mov
mov
mov
push
pop
mov
scas
outsl
dec
jnp
push
push
out
xor
sbb
xlat
loopne
test
jbe
out
sub
imul
data16
repz
lods
sti
jecxz
cmpsb
push
addl
add
jle
mov
pop
sbb
xor
stos
inc
push
jle
hlt
or
and
and
mov
adc
jno
hlt
xchg
mov
enter
loope
jae
sbb
sbb
or
cmp
lret
repz
in
bound
add
add
rorl
es
adc
sbb
mov
jle
shll
stc
in
addr16
lods
fwait
aam
mov
sbb
mov
or
push
loopne
mov
test
cmp
mov
fcomi
push
cli
es
inc
imul
or
dec
cwtl
mov
jg
push
decl
inc
inc
clc
push
jns
vmovaps
mov
subl
stc
sar
add
std
ja
jns
mov
jl
popf
mov
jbe
sub
lock
pop
sti
and
and
add
fwait
mov
aam
jnp
inc
or
bound
hlt
xor
movsb
outsb
inc
lret
sbb
in
aas
sahf
int3
mov
scas
dec
outsl
enter
xor
push
push
xchg
gs
loope
fsts
cmp
scas
repz
mov
movsl
xchg
shl
imul
xchg
fcompl
lret
xor
fprem1
dec
sti
sub
pusha
mov
mov
test
fs
ffree
pop
adc
into
add
orl
dec
movb
mov
xor
jo
lcall
sti
aam
pop
jmp
xchg
pop
in
mov
add
sub
andl
movsb
xchg
lea
and
and
rcrb
push
cmp
dec
daa
add
js
sub
int
push
cmp
sub
ret
in
sti
push
call
enter
aas
dec
pop
fwait
addr16
cmp
push
andb
add
jae
xchg
fldcw
pop
ret
push
pushf
fsubrs
outsb
jmp
adc
mov
mov
data16
jl
jle
fs
das
mov
add
jmp
dec
pop
mov
arpl
sahf
sbb
mov
fsubr
stos
nop
out
cmp
xchg
cmp
gs
movsb
cli
mov
xor
xchg
outsl
inc
dec
cmpsb
mov
xor
add
adc
loop
xchg
pusha
and
roll
mov
sub
aas
mov
hlt
out
mov
sub
push
in
jg
inc
stos
xor
and
sbb
lds
mov
push
xor
daa
xchg
fwait
jecxz
shl
dec
int
ljmp
ss
pop
adc
mov
mov
ret
mov
push
sbb
fists
in
sub
mov
testb
pushf
jge
mov
or
inc
int
roll
cmp
out
ja
movsb
rclb
xchg
inc
andb
fucomp
jnp
jae
mov
adc
aas
fisttps
push
imul
call
clc
cltd
jno
push
movsb
loop
or
out
mov
pop
dec
loopne
iret
andl
jmp
push
or
fs
out
hlt
mov
cmp
mov
dec
inc
rclb
lods
and
jg
pop
das
lock
call
pop
sarl
and
xchg
cmp
movsl
mov
cs
mov
sbb
pop
and
pushf
adc
cmp
sub
pop
les
sub
push
lea
pop
ror
sbb
xchg
jb
cmpsb
mov
xor
popa
or
mov
add
sub
cmp
repnz
lods
mov
stos
shll
mov
dec
push
cmp
iret
int3
adc
sbb
negl
pop
jl
mov
pop
and
int3
in
push
das
sub
add
jae
insl
mov
int
dec
dec
and
sbb
mov
pop
int
out
jmp
in
lock
cmpsl
rorl
jmp
insl
fldcw
add
out
add
push
lods
mov
sbb
popf
nop
mov
sub
fstpt
ljmp
adc
jecxz
dec
adc
lret
loop
ljmp
jecxz
dec
addr16
add
and
mov
or
and
cld
ds
gs
cmpb
nop
int
dec
or
mov
std
jnp
and
int
jnp
sbb
popa
adc
sub
daa
pop
sbb
pusha
in
dec
mov
push
stos
add
popa
scas
sbb
inc
mov
xor
icebp
add
jnp
lret
jge
xor
dec
test
xlat
pop
pushf
js
outsb
ret
jb
loopne
pop
push
cli
insb
mov
dec
jp
mov
stos
mov
or
mov
xlat
xchg
out
xchg
sub
xor
push
aad
movsb
aas
cltd
enter
jmp
jno
pop
lea
jbe
inc
fisubrl
lret
fistl
jecxz
inc
jecxz
and
ja
lods
stos
popl
xor
in
ja
test
loop
xor
pushf
lods
sbb
add
rorl
dec
hlt
or
dec
lock
test
mov
add
notb
or
pop
inc
out
test
cmp
xchg
mov
xor
push
lods
into
dec
cmp
cld
jb
mov
pop
and
test
inc
push
stos
or
out
cmp
jo
in
in
sub
push
sub
jae
mov
in
mov
add
imul
push
cmc
les
roll
push
sub
lcall
lock
ss
flds
nop
ret
mov
ret
testl
xchg
lahf
popf
out
xchg
jl
popa
jle
or
jb
mov
dec
insb
and
push
sahf
jo
cmp
add
movsb
jmp
movsb
ret
je
jg
dec
clc
outsl
sahf
gs
cmp
inc
pop
popa
xor
fmull
fwait
dec
dec
inc
cwtl
daa
mov
mov
cmp
rcl
and
cwtl
testb
test
cmp
dec
sbb
icebp
or
push
mov
xor
pop
dec
das
loopne
mov
cmpsb
sub
push
shll
movsb
out
sbb
scas
popa
xchg
out
jne
fisubrl
xor
lahf
aaa
fs
out
loopne
bswap
xchg
sub
add
pop
sahf
lds
in
mov
pushf
jnp
das
jge
test
xor
adc
rcrb
jge
hlt
movsb
fsub
idivb
jns
jmp
in
inc
lea
out
mov
push
mov
mov
data16
xor
jno
es
pop
js
nop
lret
mov
mov
les
xchg
subb
test
popf
insb
push
stos
dec
nop
mov
stos
inc
fmul
inc
into
pop
imul
loop
les
rolb
int
inc
fs
std
in
shl
adc
mov
scas
and
aam
cmp
xchg
je
jns
aam
mov
and
jl
fcomps
shlb
cmpsb
fistpl
sub
dec
jno
mov
data16
pop
push
ret
insb
cmp
xlat
fiaddl
xchg
push
mov
sub
cmp
popf
lods
insl
adc
fbstp
adc
pop
add
aaa
outsl
sbb
cwtl
fimuls
push
std
sbb
fimull
and
cwtl
aad
pop
jae
xor
push
and
lret
xlat
mov
push
mov
xor
stc
pop
ljmp
je
push
xchg
xor
xlat
out
cltd
pop
icebp
add
xlat
push
push
mov
mov
sbb
lds
sub
scas
mov
push
jb
cmp
sub
jns
mov
xor
sub
loop
aas
push
cmpb
mov
jl
mov
addr16
dec
test
repnz
or
cmp
inc
push
cmp
mov
adc
jo
sub
mov
dec
stc
jg
into
adc
repz
sbb
adc
inc
jecxz
sub
arpl
fldl
sbb
sub
xor
cmp
daa
adc
loopne
xchg
mov
stc
call
mov
lds
jbe
cmp
repz
outsl
es
fwait
push
jne
js
and
aam
inc
dec
ds
cmp
lds
gs
xlat
xchg
mov
xchg
mov
cmpsb
adcl
insb
out
dec
pusha
mov
jl
adc
adc
int3
xchg
xchg
pop
fdivrl
pop
mov
sarb
cmp
pop
out
cld
test
clc
mov
mov
pop
jb
scas
inc
hlt
cld
mov
sbb
sbb
jmp
jo
jecxz
mov
outsl
lock
decl
jb
dec
fcmovnb
mov
mov
pcmpgtb
loop
adc
out
add
and
add
sbb
and
lret
inc
enter
pop
test
pop
outsb
loopne
jle,pn
mov
lds
and
jg
fld
in
decb
test
scas
ds
imul
addr16
es
frstor
lods
fdiv
dec
mov
xlat
xchg
rorb
jb
idivl
and
test
pop
mov
sarl
xchg
xor
mov
popa
aaa
mov
orl
ficoms
data16
ss
cwtl
inc
lods
inc
icebp
icebp
add
push
outsl
fimull
adcl
or
cltd
es
inc
aas
adc
inc
faddp
mov
or
pusha
cmp
fisttps
cld
in
leave
inc
sbb
enter
bound
pop
jbe
into
push
mov
push
js
scas
ljmp
jno
mov
fldt
dec
lea
in
fbld
ljmp
mov
lods
inc
xchg
ror
inc
and
insb
rclb
and
mov
pop
xchg
pop
bound
jbe
cltd
cmp
shrb
or
test
jo
inc
repz
pop
push
xchg
xlat
scas
mov
xchg
mov
sbb
in
les
imul
inc
push
mov
or
daa
cs
push
xchg
jle
cltd
push
out
dec
sub
dec
sub
out
xchg
or
push
add
in
out
sub
sub
stc
jbe
movsl
mov
out
lea
xchg
out
lea
xchg
push
jne
add
imul
daa
or
insl
push
cmpsb
sbb
pop
mov
sub
and
lcall
and
sbb
fadds
cwtd
es
inc
dec
clc
arpl
cmpsb
mov
rcrb
leave
add
leave
sbb
mov
inc
push
cs
xor
cmp
stos
data16
out
and
je
dec
sti
fcomps
fistpl
mov
lret
xor
cmp
out
xor
hlt
bswap
mov
lods
cmp
xchg
sahf
add
ja
lret
dec
clc
faddl
in
xchg
shlb
jg
mov
cmp
pop
sti
out
fadds
pop
xlat
mov
mov
and
lret
jge
mov
popa
push
fwait
stc
pop
cli
sahf
cmc
ja
jo
push
out
imul
test
push
and
pop
aaa
xlat
stos
rcrl
cmpb
flds
data16
pop
popa
out
inc
xchg
cmp
fdivrs
test
sub
cmp
test
das
xor
or
fs
dec
out
cmp
mov
add
jmp
fsubrp
jb
insb
pop
inc
jg
pop
mov
dec
inc
push
clc
enter
xor
ds
out
insl
jge
insl
push
xchg
dec
adc
int
mov
pop
gs
not
sbb
mov
mov
lods
in
sub
aam
int3
inc
and
pop
popa
add
cmovb
mov
sbb
xlat
sti
data16
ss
mov
shrl
xchg
mov
dec
push
mov
es
daa
cs
les
inc
jge
test
jno
repnz
or
pop
shll
jmp
mov
shl
push
mov
das
push
imul
xchg
xchg
lds
mov
mov
dec
pushf
pop
mov
pop
js
xor
xchg
lahf
int
xchg
out
pop
mov
or
and
jbe
xchg
mov
xlat
fsubrl
adc
xor
mov
adc
pushf
daa
lock
ss
fstl
fstl
rorb
mov
pop
cs
and
mov
mov
ss
ss
icebp
add
add
jp
mov
stos
or
dec
out
mov
sti
or
or
outsb
imul
aad
push
adc
call
mov
int
bound
loop
jno
xchg
into
pop
xor
fucomi
sbb
mov
lcall
mov
cmp
ss
pop
cmpsl
das
mov
js
int
orb
cmpl
into
adc
in
in
and
adc
lods
call
inc
cmp
inc
clc
cmp
sahf
cli
stos
mov
outsb
hlt
sbb
jne
rol
jbe
ljmp
repnz
dec
mov
jns
dec
cmp
inc
mov
sti
or
inc
mov
stos
pop
loopne
loope
gs
and
cltd
subb
mov
fsubrl
mov
test
pop
popa
inc
in
loop
fwait
into
movsb
cmp
rol
cmpb
in
rol
cld
int
jns
and
popf
int3
std
aad
adc
push
sahf
mov
sbb
scas
xor
xor
ljmp
rorl
iret
lods
sub
sub
test
mov
push
in
out
mov
pop
fstps
insl
in
or
rcr
nop
and
pop
ja
push
push
pop
mov
aas
fldl
xchg
repz
jp
sbbb
sbb
movsl
cmpsb
sbb
dec
in
imull
pusha
lods
ljmp
or
xlat
loopne
xlat
mov
les
clc
adc
dec
push
imul
insl
and
lahf
inc
fidivl
fiadds
xchg
cmp
shll
and
stc
pop
daa
cmp
and
cmp
mov
int3
inc
adc
pop
lret
inc
sarb
fcomp
int
iret
or
xchg
icebp
mov
in
lret
adc
dec
outsb
fsubrl
push
xor
xchg
jle
ds
out
jb
pop
inc
xor
sbb
pop
mov
jmp
fsts
and
insl
dec
fs
adc
sti
dec
stos
inc
sbb
into
dec
push
stos
test
and
pop
jb
les
jl
dec
sub
push
inc
xor
shlb
test
xor
faddp
cmp
dec
and
fdivl
js
fidivs
push
or
mov
mov
mov
xchg
jmp
adc
mov
out
popa
sbb
xor
lds
in
xor
mov
sbb
jp
lahf
cmc
lea
xor
cld
add
jae
xchg
pop
sub
cs
push
ljmp
sbb
lret
add
or
inc
in
clc
xorl
outsb
pushf
scas
out
hlt
aaa
fcoms
loope
mov
mov
addr16
push
in
outsl
les
add
sbb
dec
adc
fs
rcr
addr16
adc
aaa
push
adc
loope
popa
pop
mov
rcrb
fstps
xor
aam
out
ret
sbb
add
pushf
mov
lret
add
sti
aam
stos
cli
push
lds
out
xor
scas
int3
mov
dec
test
popf
and
int
xchg
and
pop
filds
push
add
mov
fistpl
test
outsb
push
cli
fcmovu
add
stos
mov
cmp
mov
sbb
clc
mov
xor
cld
dec
push
or
fists
and
jae
int3
sbb
int3
xor
jg
subb
ret
xor
stc
test
mov
movd
mov
stos
cwtl
mov
in
push
xor
fmull
sub
sub
lret
cld
scas
add
jl
mov
jb
push
mov
lock
adc
fmull
sbb
pop
out
and
cmp
insl
jge
cs
jnp
fcmovne
xchg
fdiv
add
add
mov
mov
adc
call
mov
popf
xchg
inc
dec
mov
out
ficompl
cmpsb
loopne
xchg
xor
pop
pop
in
std
aaa
loop
cmp
ret
xchg
call
mov
xchg
psraw
push
aaa
pop
inc
aaa
ret
adc
push
loopne
pop
enter
out
add
ljmp
loop
dec
push
fsubr
inc
sbb
popa
and
inc
inc
xor
dec
ja
sti
push
and
int
subl
sbb
sti
fs
aad
int
jl
int3
jo,pn
sbb
sub
push
mov
sarl
add
xchg
roll
and
shlb
sbb
iret
dec
mov
daa
in
fidivrs
aam
xchg
fldpi
repnz
call
lods
lods
dec
pop
insb
pop
inc
mov
insb
mov
pslld
lret
addr16
in
cmp
inc
and
xor
testl
out
repz
push
cmpsb
adc
subl
pop
jl
mov
int
iret
rcrb
mov
call
lea
or
loop
loope
lea
gs
mov
and
add
xchg
mov
iret
add
xchg
inc
rcrb
pop
loopne
add
jmp
and
dec
xor
test
iret
test
mov
push
int
lret
cmp
cmp
outsb
xchg
daa
into
out
add
cltd
mov
inc
popf
and
out
in
mov
repnz
popf
ds
xchg
mov
out
dec
dec
pop
push
stos
dec
inc
or
stos
xor
loope
add
sub
dec
icebp
inc
fwait
test
das
lahf
pusha
stos
sub
dec
xchg
adc
int3
push
sbb
jo
flds
pop
test
in
xlat
clc
cwtl
jb
pop
mov
jae
dec
cwtl
repnz
sub
out
inc
mov
int3
insb
cwtl
pop
rcrb
add
insl
cmp
adc
mov
popa
add
pop
jnp
jp
iret
sbb
aas
stc
push
jo
loope
popf
lock
loope
pop
or
imul
adc
mov
pop
add
cmp
popa
mov
push
jl
movsb
push
iret
leave
mov
lret
addr16
ret
adc
and
sub
sahf
add
out
lcall
clc
cld
shl
clc
fcos
fsubrs
out
fdivl
push
pop
sbb
jne
sahf
shrl
pop
roll
sub
push
sbb
fwait
sub
mov
xchg
ljmp
in
hlt
push
sbb
enter
repnz
popa
cltd
aad
aam
fstpl
in
push
dec
cli
inc
and
pop
mov
test
sub
out
jnp
push
xor
test
cmpsl
repz
xor
mov
iret
lret
out
shlb
adcb
mov
inc
sahf
sub
int3
cmp
idivl
stos
pop
movsb
mov
mov
pop
push
dec
loopne
or
loop
das
mov
xlat
imul
clc
jno
sti
jno
inc
pusha
loop
jbe
push
popf
loopne
or
inc
push
pop
rcrb
ja
mov
cmp
into
dec
dec
aaa
fists
jo
outsb
mov
xor
add
or
jb
lea
inc
filds
leave
dec
mov
scas
xchg
mov
mov
dec
in
adc
lret
insl
sub
add
or
out
aad
pop
in
mov
sbb
int
xchg
mov
jo
leave
xchg
xchg
mov
pop
push
sarl
or
xchg
mov
jl
cs
lds
xor
int3
xor
cmp
aas
push
and
pop
sub
adc
outsb
sbb
pop
icebp
imul
xchg
push
push
cs
sarl
or
test
les
dec
cmp
ljmp
adc
and
dec
xor
cmp
dec
fstpt
lods
test
test
inc
fcmovu
int
insb
in
xor
fwait
cvtps2pd
das
insl
jp
out
jge
jmp
stc
cld
push
je
out
imul
enter
sbb
xchg
sub
adc
jno
xor
lsl
out
sbb
rclb
push
stos
out
flds
adc
ss
mov
push
daa
jmp
into
insb
cmc
cmp
mov
fcompl
gs
fimuls
and
mov
addr16
cmp
cmp
or
cmp
or
push
jp
adc
xchg
repz
jno
ja
fwait
arpl
insl
sub
push
inc
fcomip
loop
mov
fisubrs
mov
and
xchg
scas
ds
dec
out
cmp
xor
addr16
xchg
mov
or
lahf
mov
mov
sti
xor
add
xchg
js
xchg
sbb
push
jmp
xchg
cmp
sbb
dec
addb
xchg
sub
subl
int3
jmp
cmp
sub
xchg
xchg
sbb
mov
ret
ficoms
sub
lock
int3
outsl
repnz
mov
daa
lds
in
pop
aad
add
push
ret
add
arpl
test
repz
imul
pop
and
xchg
test
inc
xchg
fwait
ret
push
pusha
mov
pop
arpl
insb
pop
ljmp
pop
pop
lret
push
inc
dec
aas
mov
lret
repz
repz
mov
push
mov
je
mov
scas
in
mov
loopne
inc
cmpsl
ja
push
xor
add
lea
popf
cmp
int
mov
mov
jnp
xchg
stos
fistpl
add
fcom
mov
daa
sub
insl
lea
pop
popa
mov
in
jnp
mov
movsb
fisubs
ret
fstpl
dec
xchg
push
sbb
mov
sub
xor
mov
or
out
jle
mov
pop
out
stc
push
add
sti
or
or
jno
adc
ss
xchg
lcall
pop
jns
outsl
sub
mov
mov
fs
push
add
inc
push
icebp
jne
mov
xor
mov
mov
incb
push
popf
inc
inc
xor
scas
cwtl
adc
xchg
xchg
inc
dec
xchg
or
dec
rcrb
jb
push
rcr
xor
and
subl
lea
push
pushf
and
and
frstor
adc
and
mov
add
insb
jg
aas
mov
lret
fldcw
and
cmpsl
sub
repz
xlat
ljmp
inc
mov
mov
mov
dec
ror
push
cltd
add
aad
movsb
mov
out
roll
mov
mov
daa
adc
jae
dec
lret
cwtl
cmp
int
jbe
sub
outsl
add
pop
sub
pop
fcoml
in
push
push
sbb
in
cmp
inc
aaa
fcmovbe
xchg
addr16
mov
dec
stc
pmulhuw
cmp
push
sahf
jge
xchg
decl
mov
xor
in
mov
dec
loopne
lea
mov
dec
mov
sarl
mov
nop
inc
mov
xchg
mov
ja
dec
lea
fdivl
mov
imul
push
test
sub
jno
push
es
jecxz
mov
mov
mov
addl
pop
and
sbb
leave
push
jl
dec
daa
rep
test
xchg
xchg
sbb
mov
pop
aas
pop
mov
mov
mulb
movl
mov
adc
outsb
pop
xlat
int
fildll
cmpsl
pusha
xchg
jecxz
push
je
incb
mov
shll
icebp
pop
mov
je
mov
ret
xchg
cmpsl
outsb
mov
rol
rorl
xchg
shl
fs
jns
push
lahf
or
mov
fwait
lods
fwait
mov
movsl
rclb
testb
arpl
iret
rcrl
out
mov
xchg
and
fidivrl
jge
pop
add
xchg
fcmove
push
idivl
cmp
outsb
sarl
int3
mov
mov
int3
fstpt
sub
dec
call
sub
adc
scas
andl
rolb
icebp
ja
jns
ljmp
sub
incb
lods
mov
mov
test
es
dec
mov
jp
push
das
ret
jecxz
and
push
push
pop
add
mov
scas
ror
jns
cli
arpl
fisttpll
out
pop
mov
out
iret
pop
mov
sub
xor
lock
push
int3
pop
mov
add
xor
mov
cmpsb
adc
rcl
clc
sub
outsb
jns
out
pcmpeqd
je
or
lret
mov
push
mov
mov
adc
shrb
cmp
jp
jno
lret
rol
lahf
jbe
lock
das
daa
popf
mov
mov
dec
add
mov
fists
std
push
mov
aam
aam
jne
pop
inc
idiv
mov
repz
inc
call
or
rcrl
push
or
pushf
push
adc
popa
dec
cmpb
mov
push
ss
daa
xchg
fs
pushl
sti
cmp
mov
scas
mov
mov
dec
int
mov
mov
inc
stos
sbb
cli
sub
dec
or
insb
jnp
xor
int
pop
les
and
sbb
das
stos
xchg
inc
das
int
aas
xchg
mov
sti
lcall
jmp
scas
xchg
adc
mulb
mov
setle
popf
into
loope
addb
lods
inc
enter
sub
int3
sub
and
cmpsb
jae
mov
jo
bound
and
xor
push
dec
pop
sbb
imul
mov
inc
mov
ss
cwtl
pop
cmp
sub
dec
cmpb
sbbb
jo
sub
stos
xchg
or
jge
cli
dec
xor
xchg
xor
fimull
xchg
jg
mov
and
push
loopne
out
addr16
jg
out
das
in
cwtl
dec
out
movsb
sbb
pop
sub
pop
imul
stos
test
in
mov
js
mov
in
jl
push
push
sub
repnz
or
mov
loop
aam
push
or
mov
sbb
pusha
dec
fimuls
and
xchg
dec
xchg
jnp
popa
xchg
mov
push
test
and
mov
sub
and
lcall
inc
mov
xor
leave
rcll
pop
enter
pop
xchg
add
ficompl
stos
sbb
push
pop
icebp
das
push
add
aaa
adc
push
js
pop
xchg
mov
mov
mov
add
push
mov
roll
das
xchg
dec
add
out
loopne
xor
jecxz
adc
movsl
lcall
fstpt
inc
and
push
jnp
movsb
js
lods
dec
daa
sub
aaa
out
aad
xchg
or
inc
insb
mov
rcll
popa
xor
test
mov
repnz
adc
clc
xor
push
lods
fwait
sub
mov
ficompl
sbb
int3
push
lods
sbb
aad
jb
and
mov
das
fwait
mov
jmp
ds
pop
pop
in
mov
xlat
test
cmp
xor
mov
rol
cmp
mov
inc
sti
mov
jg
ljmpw
cmc
cmp
push
push
sub
stos
arpl
inc
lods
sbb
pop
ljmp
jnp
inc
add
sbb
es
ret
adc
add
mov
pusha
lock
stc
mov
inc
dec
cs
cmp
cmp
call
rclb
mov
mov
inc
scas
xor
cmp
cwtl
sbb
ds
xorb
add
lods
icebp
sub
fucomp
mov
mov
flds
add
dec
lret
je
mov
or
pop
adc
push
cmp
mov
mov
mov
add
mov
iret
out
test
test
loopne
sub
dec
shlb
std
sub
rorb
iret
mov
dec
dec
jg
rorl
divl
jmp
mov
sub
sub
rolb
xor
jle
xchg
ret
ljmp
add
scas
and
fldt
sub
fwait
sbb
xlat
stos
pop
cmpsb
adc
cli
test
xor
pop
test
cmp
scas
fstps
loopne
dec
mov
sub
stos
xchg
lahf
lds
outsl
and
test
popf
lods
xorb
fcmovb
adc
fsubrs
imul
sbb
pop
push
adc
fs
push
or
inc
mov
pop
xchg
cmp
inc
dec
add
add
and
jp
imul
ret
fldl
xor
inc
leave
sbb
icebp
or
in
cmc
into
enter
jb
add
test
sub
mov
mov
dec
add
mov
or
test
sub
fimull
xor
fcompl
jne
and
inc
add
xorl
mov
mov
mov
xchg
out
push
faddl
mov
and
mov
scas
out
sahf
lahf
cltd
pop
mov
fidivl
outsb
adc
and
inc
aam
fdivs
push
sbb
psllq
add
mov
mov
mov
jg
inc
loop
negl
xor
ffreep
xchg
icebp
test
mov
addr16
fnstenv
xchg
add
in
mov
add
push
gs
mov
add
mov
ret
loope
mov
gs
push
push
sub
ss
insl
sub
push
out
dec
xor
cmp
xchg
push
clc
lods
dec
and
lods
push
cmp
in
xor
add
and
sub
sub
push
and
and
es
dec
or
push
bound
test
out
mov
stos
test
ret
clc
push
adc
stc
cwtl
push
xchg
insb
jmp
aad
gs
push
jmp
mov
mov
xor
jecxz
iret
lods
aaa
jle
fldenv
aad
dec
lret
movsb
enter
lock
imul
push
popf
cmp
hlt
cmp
cs
xchg
es
add
pop
jp
mov
lds
push
dec
pop
iret
outsl
mov
jo
push
pop
sub
lret
push
sub
cmp
dec
mov
cmc
test
bound
mov
cmp
inc
test
ja
into
rolb
stos
mov
icebp
or
lds
lods
sbb
mov
xlat
insb
daa
mov
je
iret
fldt
xchg
jae
xor
sub
jae
out
dec
xchg
mov
stos
push
ret
in
mov
xchg
inc
inc
ret
inc
pop
pop
fst
stc
clc
mov
into
inc
imul
xchg
push
push
mov
mov
pop
mov
lock
xchg
insl
jo
mov
dec
outsl
jno
jge
pushf
mov
or
jo
mov
mov
xlat
les
and
push
ret
add
mov
test
into
testb
xchg
mov
cmc
mov
sub
xchg
mov
in
ret
stos
mov
cmp
lds
push
outsb
inc
xlat
in
ja
cmc
push
movsl
mov
cs
cmpb
rorb
or
shll
push
out
cmpsl
pop
jle
add
nop
flds
cmp
mov
push
jne
mov
sub
jo
adcl
lea
ss
cli
nop
jp
orb
xor
dec
inc
fs
dec
dec
push
cmp
loop
mov
aaa
outsb
movsl
ss
gs
stos
mov
mov
scas
lock
jno
adc
jmp
jae
add
or
cltd
sbb
cld
mov
xchg
mov
les
mov
inc
add
cwtl
cld
sub
adc
mov
or
fisubrl
gs
inc
sti
add
xor
jae
outsb
jmp
aam
shlb
mov
push
imul
in
or
int3
sbb
sbb
imul
ja
sbb
shl
xor
and
dec
xchg
xchg
fwait
or
in
sub
cmc
repz
shl
mov
cmp
ret
in
imul
stos
jo
sbb
push
imul
jmp
arpl
fsubrl
cmpsl
add
add
imul
mov
test
mov
dec
aam
mov
insb
xor
test
in
push
push
pushl
aam
lret
cmp
mov
mov
pop
shr
pop
mov
push
push
and
jmp
daa
lods
add
repnz
mov
add
movsb
or
fs
hlt
mov
mov
aam
adc
les
fs
rorl
push
pop
outsl
jp
sub
lock
inc
or
pop
aad
dec
andb
ficompl
stos
pop
or
mov
jmp
and
sub
ud0
idiv
fnstsw
hlt
push
clc
cmp
xchg
mov
mov
pop
roll
mov
pop
inc
jge
das
push
push
arpl
mov
cmpsl
pop
rolb
jnp
scas
inc
out
mov
out
imul
mov
cld
or
dec
stos
dec
les
dec
mov
jnp
push
in
inc
xchg
das
fadds
sbb
inc
jbe
adc
hlt
in
insb
cwtl
out
add
dec
cmp
jns
loopne
lcall
cmpsb
pop
inc
imul
das
rcll
and
in
mov
push
add
scas
bound
mov
inc
push
cs
xor
and
push
xchg
cmp
pop
scas
mov
addr16
addr16
dec
mov
cmc
jno
or
lret
data16
mov
loope
and
int3
lret
std
push
icebp
xchg
hlt
inc
adc
jno
insl
fildl
into
pop
std
rolb
mov
jl
xlat
movsl
int
or
lcall
sub
fsubp
xchg
jo
scas
outsb
std
xlat
fsubrl
addb
sbb
daa
adc
mov
inc
mov
or
cmpl
xor
jae
movsb
fisubrl
mov
filds
xor
pop
jno
push
push
xchg
xchg
fcomip
dec
push
cwtl
test
lahf
fidivrl
sbb
outsl
stos
xchg
pushf
push
scas
push
xchg
xor
dec
fs
in
movsb
adc
hlt
jge
jns
out
fs
sbb
ds
or
ja
add
data16
mov
ljmp
and
mov
sarb
sbb
pop
scas
in
mov
repnz
pusha
xchg
imul
pushf
inc
sbb
movsb
sahf
shlb
lret
adc
dec
pop
xchg
and
pop
push
sub
push
ret
or
mov
lock
pop
jge
or
out
pop
aad
movsb
cwtl
cmpsb
mov
mov
xor
hlt
inc
push
inc
or
je
jecxz
sbb
dec
arpl
icebp
mov
add
aad
jge
cwtl
std
mov
repz
mov
push
jge
popl
sub
mov
faddl
out
dec
js
adc
popa
fwait
xor
inc
orl
cmp
lods
repnz
cld
stos
fucom
paddusb
rep
mov
mov
or
int
flds
shrb
test
xor
movsl
adc
or
or
dec
xchg
das
ss
ljmp
sbb
dec
loop
clc
pop
les
dec
inc
pop
mov
cltd
std
ljmp
jmp
jnp
lcall
push
ret
mov
adc
xchg
cld
movsb
out
imul
insb
iret
lock
mov
mov
and
cmpsl
out
test
loopne
lcall
xlat
or
inc
xchg
hlt
cmp
dec
dec
sbb
out
stc
pop
leave
enter
add
jbe
pop
xchg
jne
inc
cmp
mov
inc
cmp
add
push
in
jge
push
mov
sub
scas
jno
pop
movsl
adc
imull
inc
push
test
lret
push
mov
xor
xchg
cli
pop
xor
mov
clc
or
sahf
sbbb
mov
pusha
push
jp
sti
or
inc
adc
or
push
adc
out
imul
mov
inc
out
shrb
xlat
pusha
xor
data16
xor
sbb
dec
adc
mov
and
out
sub
test
repz
adc
xchg
fldcw
imul
xchg
pop
aad
pop
outsb
xlat
fidivrl
aam
out
mov
pop
sbb
shufps
mov
push
cmp
xchg
shll
int
pushf
pop
and
pushl
pusha
hlt
arpl
mov
dec
pop
call
popf
sbb
and
inc
cld
jno
add
cli
mov
xor
and
fs
dec
xchg
cmp
and
jecxz
in
cmp
cmc
sahf
add
jle
les
xchg
stos
out
pop
ljmp
movsb
in
pop
xchg
xchg
out
clc
fbld
out
jb
sub
push
daa
icebp
xchg
jl
dec
icebp
notb
inc
hlt
mov
dec
jmp
and
arpl
repz
mov
in
xorl
cmp
das
fisttps
dec
sahf
push
add
or
lea
into
pop
xor
sub
dec
pushf
pop
or
and
jbe
add
dec
jp
insl
push
out
xor
inc
ja
jne
mov
mov
in
jle
je
enter
xchg
push
scas
fldcw
jns
inc
mov
jmp
and
or
fcoms
sbb
inc
adc
push
test
mov
push
xchg
sub
mov
mov
mov
or
jb
fs
lret
dec
aad
outsl
push
xorps
int3
add
sbb
insb
add
subb
lods
push
jle
sub
sub
f2xm1
in
add
push
xchg
cmovns
into
mov
adc
cs
or
mov
out
add
jae
test
xchg
shrb
cmp
sub
stos
pop
rcll
mov
arpl
xchg
dec
or
or
pop
push
movsl
xchg
xchg
cmpl
adc
dec
inc
adc
sub
mov
pop
inc
mov
das
imul
in
cs
nop
imul
pop
lret
cld
mov
jge
mov
sub
fists
fnstcw
dec
in
loopne
lahf
cmp
sbb
jae
aad
or
cmp
or
or
gs
dec
in
xchg
mov
and
aaa
movsb
or
cmp
and
dec
fs
fdiv
jno
into
sub
sbb
scas
jo
rorb
pushl
lds
add
sti
add
daa
mov
popa
cmp
inc
sub
mov
imul
fwait
or
mov
sub
mov
dec
push
cli
pop
cld
scas
sbb
or
mov
xor
sbb
cmpsl
cmp
adc
xchg
dec
insl
inc
pop
pop
loop
icebp
cmpsb
jb
ljmp
xor
cli
cmp
lds
lods
jb
push
mov
loopne
inc
mov
daa
adc
ja
push
aam
dec
ror
jo
stc
faddl
daa
sbb
in
inc
aas
jno
xchg
or
dec
sbb
xchg
daa
dec
popf
lods
repnz
or
in
fldenv
push
int
push
pop
xchg
notl
loop
daa
mov
ret
xor
xor
je
cltd
scas
xchg
fisubrs
mov
fs
movsl
and
out
mov
mov
dec
mov
in
faddl
popf
outsb
jb
adcb
xchg
pop
test
cmp
cmpsl
hlt
pop
int
push
push
std
inc
push
filds
xchg
aas
outsb
sbbl
ljmp
fsubr
sbb
mov
cmpsb
jae
aam
cmc
rcrl
out
sub
push
pop
mov
cld
imul
xor
jg
aaa
mov
rcll
iret
jo
or
push
imul
imul
mov
push
xchg
cwtl
dec
cmpsb
mov
sub
scas
sub
iret
jbe
rcrl
pop
outsl
lahf
lcall
push
pop
cwtl
dec
sbb
push
imul
lock
jmp
gs
pop
movsl
loopne
or
notb
frstor
cmpl
pop
cli
push
pop
xchg
imul
lret
pop
adc
ja
pop
das
xor
xchg
lods
push
loop
sub
shrl
push
xchg
aas
mov
scas
sub
fldt
cli
xchg
and
adc
in
ja
outsb
mov
mov
mov
cmp
xor
scas
mov
in
loop
mov
lods
pop
sub
loopne
sub
mov
inc
and
lods
cld
push
mov
test
sbbb
out
sbb
sbb
xchg
jae
mov
lods
stc
out
outsb
adc
mov
cld
xchg
jne
dec
mov
mov
int3
loop
in
jo
push
mov
xor
mov
cs
jmp
mov
insb
adc
frstpm(287
orb
fcmovnb
jae
aad
les
sub
das
ja
imul
mov
jno
data16
cltd
inc
popa
mov
movsl
push
jmp
xchg
imul
in
push
pop
js
ljmp
in
push
xlat
rcll
into
cmp
dec
cmc
loope
pop
xor
sahf
inc
mov
and
lfs
cli
inc
or
xchg
sbb
aaa
jnp
cmp
pop
mov
movsb
lahf
repnz
jne
inc
popa
stos
ret
aaa
dec
sbb
jmp
sarb
xchg
jae
jnp
lahf
add
mov
add
das
sub
test
jne
cmc
or
stc
test
mov
push
mov
dec
test
xor
in
pop
call
js
push
mov
ret
adc
loop
and
and
stos
add
dec
xor
mov
xor
inc
mov
stc
stos
pop
daa
push
inc
dec
je
cmpsl
sti
mov
and
sbb
mov
arpl
into
idivl
mov
add
add
stos
or
lea
xor
daa
movsb
icebp
mov
inc
pushf
outsl
test
cmp
jg
sbb
nop
shrb
mov
test
stc
pop
mov
cmc
add
outsb
movsl
or
mov
mov
fdiv
jbe
leave
push
and
dec
loopne
lret
mov
adc
mov
sbb
inc
mov
loop
shrb
inc
stos
mov
rorl
int
inc
dec
xchg
test
loope
andb
clc
in
xor
xor
jne
and
enter
outsb
inc
push
push
xor
mov
inc
and
js
xchg
push
or
and
es
or
jb
iret
mov
pusha
int3
gs
xchg
in
jo
lea
cli
dec
push
mov
mov
andb
idivl
pusha
mov
mov
fnstcw
pop
jno
jbe
pop
adc
xchg
xchg
adc
mov
lret
stc
mov
loopne
sub
xchg
cs
fnstcw
into
pop
lret
sbb
pop
add
xchg
xchg
dec
ja
arpl
in
aam
push
or
bound
xlat
stos
subb
jmp
aad
or
pop
filds
dec
jb
push
xor
aam
lret
sub
jne
stc
mov
das
cs
dec
xchg
xchg
sti
icebp
scas
das
movsl
sbb
cmp
push
mov
pop
popf
arpl
mov
in
or
int3
fwait
in
je
add
push
sub
add
cs
imulb
pop
pop
dec
jbe
icebp
and
ret
ret
adc
xchg
sarl
insl
and
je
ljmp
sbb
jo
or
daa
int3
ds
movb
mov
jno
pop
enter
mov
push
stos
inc
pusha
pushf
gs
inc
or
popf
adc
xor
fisubs
hlt
cmpxchg
js
and
scas
movsb
sub
fdivrl
out
mov
cmpsb
or
rclb
or
scas
or
cmc
inc
icebp
out
lea
out
lds
inc
mov
es
or
fimull
movsl
repz
mov
call
stos
mov
popa
fidivs
icebp
jne
or
mov
jne
mov
scas
incl
jno
pop
lcall
dec
adc
or
imul
sub
stos
mov
ja
enter
sbb
xor
test
lret
mov
iret
out
sarb
insl
dec
sbb
mov
out
push
insl
and
andb
arpl
lds
add
movsb
push
jae
or
fildl
sbb
mov
hlt
jp
bound
pusha
mov
mov
inc
sub
or
test
cltd
mov
adc
fadds
mov
mov
jmp
test
mov
inc
leave
pop
or
and
test
lret
arpl
outsb
cmc
jns
xlat
divl
sbbl
fstpl
adc
in
out
rcr
cmp
call
pop
rorb
and
insl
fstl
jecxz
xor
in
mov
push
sub
push
and
pop
lea
lcall
dec
lcall
push
and
and
data16
inc
jo
in
dec
pop
inc
lret
hlt
mov
outsb
pop
dec
outsl
scas
pop
xchg
pop
xchg
sti
dec
inc
jecxz
sbb
mov
ja
add
push
dec
movsl
dec
sbb
inc
int
bound
jno
xor
sti
repz
sbb
aam
fisttps
js
jecxz
sbb
push
mov
aas
xlat
cld
fisubrl
mov
mov
push
dec
xchg
mov
fbstp
jo
add
pop
xlat
je
mov
fwait
sahf
and
lahf
sub
mov
cmpsl
push
push
fwait
ljmp
xchg
or
push
xchg
mov
inc
xchg
mov
pop
push
mov
mov
mov
inc
fildll
pop
jecxz
shrl
push
cmpsb
mov
mov
xchg
shll
dec
outsl
xlat
mov
pop
mov
rcll
movl
sbb
add
rcrl
bound
mov
cmc
mov
out
xchg
and
outsl
pop
or
pop
pop
lahf
mov
adc
pusha
lcall
sti
arpl
jle
mov
mov
pop
push
dec
pop
stos
test
fcmovne
sahf
outsl
fistps
pop
out
inc
mov
fistl
push
js
stos
mov
inc
lock
xlat
aam
mov
mov
in
and
mov
and
jb
mov
adc
fwait
outsb
jmp
cmpsl
add
jle
lahf
daa
hlt
lahf
fwait
mov
insb
xchg
in
test
dec
xor
pop
mov
andb
mov
jg
aaa
subb
iret
out
jno
repz
in
mov
push
fwait
test
popa
xchg
lret
jge
cwtl
nop
int
xor
push
jne
mov
dec
or
dec
sbbl
mov
rcrb
es
lods
pop
pop
pop
or
int
loopne
popw
fwait
push
or
fsts
inc
mov
sub
sbb
jl
subl
and
mov
xchg
pop
out
cs
cmpsl
add
jns
pop
cmc
jns
popl
aas
mov
inc
pop
into
inc
sbb
mov
xchg
push
hlt
cld
pop
clc
out
push
movl
cli
inc
pop
inc
enter
test
ret
mov
mov
pop
mov
dec
repnz
sub
sub
cld
dec
cld
mov
sub
ss
incl
xchg
fimuls
xchg
cmc
jbe
lds
push
add
jl
sti
sbb
jmp
xor
adc
aad
pushf
addb
adc
sahf
xor
loopne
aam
jge
jg
cmp
leave
add
loop
out
cld
inc
dec
xor
aaa
fincstp
add
mov
dec
inc
jle
xor
addr16
and
mov
mov
adc
fsubl
js
rcr
sbb
add
cmpsb
xor
sbb
jl
lods
cwtl
sbbb
daa
or
xchg
sub
sbb
cld
fists
xchg
dec
mov
pushf
add
or
or
sub
ds
push
std
lods
rol
cli
mov
out
and
sbb
les
dec
cmp
mov
inc
mov
jae
jp
jb
loop
les
out
sub
stos
out
test
stos
xchg
in
outsl
out
into
jo
jle
fiadds
scas
or
sub
dec
mov
pop
mov
or
sub
ja
and
out
sti
cmpsb
fcoml
or
jle
pop
aas
mov
push
lcall
sbb
stos
xorl
popf
push
imul
int
test
push
xor
push
cmp
adc
out
dec
ja
loop
sbb
sub
insl
push
popa
pop
in
aam
call
mov
sti
aam
add
cld
add
data16
pop
push
arpl
ficomps
clc
push
outsl
insl
add
dec
fisubs
repnz
aad
pushf
pop
mov
adc
or
outsl
mov
xchg
cmc
or
mov
test
add
cltd
sub
lcall
sub
xor
mov
pop
das
cmp
mov
test
jp
inc
stos
pop
inc
jecxz
mov
pop
fs
ds
jns
and
mov
xchg
jmp
xchg
add
and
jb
rorb
dec
mov
sub
cmp
ljmp
repnz
stos
jns
push
jmp
inc
nop
popf
outsl
cld
adc
enter
sti
cs
test
in
ficoms
inc
lods
cld
rcll
fnsave
ret
mov
sbb
mov
jns
lods
or
imul
sahf
pop
cli
jp
push
pop
inc
pushf
daa
rol
lcall
push
sbb
pop
fnstsw
imul
or
pop
pop
fmuls
inc
std
push
mov
call
scas
fmull
andl
shl
add
ficoml
dec
outsl
push
xor
push
mov
das
sbb
and
mov
jg
xchg
lret
sti
jnp
gs
mov
out
cmp
js
xor
int3
cmp
xor
fisubl
or
and
pop
aas
jnp
in
or
cmpsl
enter
xlat
mov
cmp
cld
aaa
adc
push
dec
stos
pop
enter
pop
fdivs
insl
adc
xchg
sbb
rcr
call
fdivrs
or
xchg
or
pusha
cmp
imul
push
out
add
loop
mov
dec
and
mov
pop
and
mov
test
push
popf
shlb
mov
int3
pusha
sbb
add
fsubrl
xchg
popf
xor
add
pusha
movsl
push
dec
fsubl
test
out
xchg
fisubrs
cmp
imul
loope
cli
inc
call
inc
outsb
lahf
popa
xor
fsubrl
jge
push
dec
dec
testb
shl
xor
xor
mov
jns
pop
jmp
shrb
jne
mov
popl
xor
popf
repnz
sub
sbbl
shrl
loope
popa
pop
and
inc
cltd
stc
arpl
dec
into
mov
popf
mov
or
das
mov
xor
jmp
pop
test
adc
ret
jmp
jo
cmp
xchg
dec
lcall
mov
popf
mov
xorl
cmpl
mov
xor
pop
gs
fistpl
out
fstl
out
lea
je
mov
lret
adc
mov
mov
jnp
subb
adc
add
mov
push
and
inc
inc
mov
int
xor
loopne
andl
into
push
xor
pop
jb
fstpt
shr
inc
jae
in
push
stos
dec
push
fwait
xor
adc
jnp
cmp
leave
push
call
and
lods
loop
xlat
lods
shll
push
in
mov
push
adc
and
addr16
movsl
scas
stos
add
mov
insb
adc
dec
xchg
scas
mov
jbe
push
sbb
jecxz
push
inc
nop
mov
mov
or
aam
dec
in
test
icebp
inc
dec
xor
data16
inc
stc
xchg
int
pop
push
sub
lea
dec
testb
icebp
cmc
mov
in
lea
imul
xchg
sbb
adc
jg
add
push
js
and
rep
cltd
push
pop
leave
sbb
xor
push
and
es
adc
data16
xchg
popf
pop
or
sbb
cltd
push
out
jge
mov
out
xchg
cs
lds
push
subb
cmp
out
movsl
jnp
and
cmp
sub
inc
shlb
int
lds
pop
jecxz
mov
mov
sbbb
jl
adcl
mov
mov
sub
ss
loopne
add
sub
dec
add
je
cmpsb
stc
cwtl
popf
and
lock
jbe
fimuls
and
in
push
lock
xchg
mov
pushf
and
aad
mov
shr
outsl
dec
xor
xchg
xchg
out
add
adc
daa
ror
mov
fildll
and
es
xor
gs
jp
je
test
sub
jecxz
insl
sahf
push
sub
lods
add
repz
jno
test
fucomi
inc
mov
inc
mov
sub
push
push
or
std
rclb
cwtl
aad
loop
mov
push
push
add
jns
add
lds
daa
shr
sub
lahf
sbb
ret
jnp
jp
xor
insb
push
xor
gs
sahf
movsb
dec
jle
in
push
bound
pop
add
in
insl
das
test
jge
push
mulb
subl
xchg
xchg
ljmp
test
adc
rorb
sbb
call
stos
subl
gs
xor
fwait
js
lcall
cltd
movswl
leave
aam
repnz
andnps
nop
gs
sub
mov
outsb
testb
cmpsb
jne
jno
jno
repz
xchg
adc
pop
inc
ficomps
movsb
sub
jb
jecxz
std
xor
pop
and
int
adc
jns
lods
or
mov
or
mov
or
push
xor
scas
push
scas
cmp
mov
hlt
test
cmp
push
jle
jmp
test
sti
fstl
mov
pop
adc
lods
mov
lahf
xchg
inc
cld
insl
mov
mov
or
cli
pop
int3
out
sub
push
mov
or
fisttpl
inc
mov
ficomps
sbb
movsb
jno
xor
push
mov
sub
daa
ja
xchg
xchg
cmpsl
and
lods
rcrb
cmp
sbb
aam
cli
lea
adc
stos
aam
inc
jge
addl
cmpsb
push
arpl
jle
out
cmpb
xor
shl
adc
sbb
scas
jmp
and
bsr
les
dec
add
fldcw
aam
add
adc
js
icebp
loope
mov
and
cmp
das
cmp
push
cld
mov
add
dec
daa
cli
in
sub
jnp
jns
jns
fucom
icebp
daa
mov
push
mov
fisttpll
stos
inc
addl
mov
test
mov
movsl
cld
inc
mov
lcall
pusha
testl
or
cmp
stc
repz
and
or
aad
and
mov
daa
jne
addb
inc
jne
aas
push
lret
mov
fisubrl
push
dec
mov
mov
scas
enter
aad
jmp
lahf
pop
xor
sarl
scas
mov
loop
pop
into
ret
mov
mov
pop
adc
test
push
divl
into
or
fs
and
aad
dec
mov
mov
and
fs
movl
mov
inc
xor
ficoms
fimull
fstps
idivl
mov
repz
jb
jns
call
and
add
je
aad
mov
cld
cmp
jl
addr16
repnz
sbb
sbb
fdivp
rcr
pushf
sar
popf
rolb
push
stos
cwtl
push
xor
dec
into
jb
call
mov
aas
adc
aam
sbb
mov
test
jg
imul
lret
lds
push
pop
test
mov
xchg
les
das
in
mul
sub
outsb
lret
stc
sarb
dec
push
inc
ret
lea
or
push
pop
xor
xor
and
mov
inc
inc
lods
cmp
addb
lods
negl
out
jns
pop
lret
cmp
inc
mov
push
jo
sbb
mov
jge
or
out
lret
push
loop
clc
out
lret
es
xchg
mov
fcoml
cmp
xchg
roll
into
dec
push
adcl
cmp
xchg
jle
xlat
mov
mov
pop
sub
pop
cmpsb
ljmp
das
xchg
add
in
sub
inc
fnsave
movsl
out
xchg
adc
cmp
lds
cwtl
nop
xor
shll
cmp
sub
or
mov
fisttps
repnz
pushl
movsl
add
lods
repnz
and
adcb
insb
sarl
or
dec
stc
icebp
adc
popa
add
leave
loop
inc
fidivrs
jle
outsl
jmp
outsl
aad
mov
lcall
mov
jno
mov
dec
shlb
mov
adc
shl
sbb
lock
pop
fists
sbb
loopne
call
sub
sbb
stos
dec
enter
mov
dec
dec
mov
push
or
adc
iret
jp
jns
adc
sar
cmpsb
arpl
dec
ja
fildll
aaa
lcall
jae
adc
dec
subb
push
cld
out
lahf
adc
je
adc
xchg
sub
inc
add
pop
jnp
mov
mov
out
mov
xor
inc
push
leave
scas
mov
les
cmp
test
inc
repz
loope
or
icebp
nop
mov
mov
scas
js
xchg
mov
adc
push
pop
mov
jmp
xchg
pop
add
and
int
jmp
aam
fistps
lea
pop
test
adc
shlb
out
xor
scas
fs
outsl
popa
pop
cltd
push
neg
mov
cmp
or
dec
stc
cmc
jmp
xlat
adc
xlat
ud2
inc
xlat
mov
push
lea
pop
rorb
data16
rcll
xlat
xchg
mov
fwait
inc
mov
cmpsl
shll
data16
std
mov
xchg
pop
and
mov
dec
pop
sbb
mov
aad
daa
xor
sahf
hlt
sub
or
xchg
xor
xchg
lret
jmp
dec
and
push
mov
in
xor
mov
push
bound
fldcw
sub
mov
jmp
pop
ss
cli
xchg
roll
cmp
mov
mov
add
sbb
popa
leave
push
out
pop
mulps
mov
es
sbb
rcl
dec
clc
fsubl
stc
sub
or
rolb
in
xor
mov
dec
in
push
mov
pop
sub
push
ret
jae
jne
sahf
jecxz
pop
mov
xor
outsl
xlat
xchg
pop
xlat
lcall
lock
pop
sub
das
mov
das
jne
push
mov
push
lret
rcrb
rorl
fiadds
in
dec
sbb
cmpsl
daa
cs
xor
lret
loopne
jg
jae
test
jbe
ret
lods
lods
cwtl
mov
ror
xor
gs
dec
pop
push
sub
or
in
loopne
and
mov
mov
jl
arpl
lret
sub
push
adcb
jp
jecxz
xor
inc
inc
insl
rorl
mov
cmp
sbb
ljmp
addl
outsl
pushf
mov
bound
out
div
jb
sbb
xchg
mov
sub
push
cmc
sbb
lret
out
sbb
adc
lock
sbb
subb
xchg
lret
sbb
push
loope
arpl
rcl
mov
fstpt
adc
mov
dec
mov
lcall
lock
mov
xor
lea
rorb
add
fidivl
fwait
push
sahf
adc
inc
jnp
mov
mov
cmp
sbb
push
push
ret
and
cwtl
jmp
movsl
xor
xchg
push
inc
loop
dec
jno
cli
push
cmp
decb
mov
flds
sbb
dec
sbb
std
jb
xchg
pushf
push
adc
jmp
mov
or
dec
cmp
pop
out
xor
cld
insl
fldenv
std
add
sarb
jne
or
jo
mov
decl
sub
add
push
ja
lock
aas
inc
xchg
and
jge
mov
addr16
xlat
mov
mov
stc
fistl
mov
jnp,pn
stos
or
fbstp
test
repnz
jno
inc
jae
cmp
pop
enter
push
out
lods
xor
ror
aas
cs
imulb
cmp
sbb
js
mov
push
fstps
mov
cmp
xor
xchg
and
js
cmp
add
and
cmp
jp
testb
sub
push
sub
mov
mov
in
lock
lret
fcmove
xor
std
pop
cmp
roll
js
or
sub
inc
xlat
ret
inc
dec
fidivrs
pop
mov
sti
push
je
push
push
gs
dec
lods
test
sahf
imul
mov
testl
loop
or
jp
adc
imul
fs
inc
imul
out
push
dec
jno
aas
out
push
adc
rcrb
js
pop
ljmp
sub
sub
or
fists
in
rclb
pop
ret
aas
mov
inc
je
loope
fcomps
pop
bound
stc
test
rcr
dec
push
inc
mov
fisubl
mov
inc
insl
mov
xchg
pop
into
fwait
repz
push
sbb
sarl
inc
mov
sbb
aas
mov
mov
out
sbb
pop
sarb
adc
and
rclb
mov
insb
jns
stos
fldcw
ds
cmp
dec
imul
ljmp
insl
xor
lods
sub
ds
cld
sahf
scas
mov
out
cltd
fwait
mov
adc
lahf
stos
test
jb
jbe
ret
cmp
dec
mov
jo
fistpl
xor
pop
jmp
and
xor
jns
jnp
or
fsts
inc
das
jne
rcr
xchg
repnz
and
lods
lds
jne
lods
sub
cmp
aad
mov
les
jg
in
mov
or
jl
mov
into
push
mov
push
pop
scas
jnp
aaa
add
cld
add
sbb
pop
icebp
sub
mov
dec
cmpl
arpl
xchg
loopne
ret
inc
jae
ror
lahf
sub
push
idivb
sbb
push
add
or
jns
jnp
push
mov
movsl
movsb
ret
cmp
jg
adc
pop
jg
xlat
icebp
xor
roll
jae
stos
cmp
daa
ds
pusha
test
xlat
xor
push
inc
pop
add
movsb
mov
xchg
insl
adc
or
fldcw
mov
add
push
pop
xchg
jno
fistps
out
jns
out
es
fildll
mov
sarl
pusha
xlat
or
dec
mov
js,pn
ret
lds
push
mov
jp
popf
rcll
jecxz
xlat
movsb
or
xor
lahf
sub
mov
jg
dec
lahf
repnz
xchg
sbb
jbe
scas
and
dec
mov
rol
popf
ret
addr16
mov
mov
xchg
sbb
mov
filds
pop
ret
push
fldl
fbld
mov
xlat
xchg
and
nop
mov
dec
outsb
pop
loopne
mov
mov
cltd
and
sub
dec
xlat
ret
mov
sbb
mov
jmp
in
popa
outsb
sbb
dec
pop
xchg
xchg
stos
adc
repz
leave
add
icebp
mov
out
lcall
out
stos
movsb
cmc
push
pop
dec
cmp
loopne
enter
jg
jne
xchg
and
jo
lahf
jp
lods
std
addb
pop
xchg
mov
adc
outsl
scas
inc
and
aam
inc
bnd
sbb
dec
mov
mov
mov
push
mov
sarl
pop
lock
ffreep
adc
xlat
push
add
andb
decb
inc
and
sbb
shrb
cmp
popa
stos
mov
or
pop
cltd
lods
dec
mov
pop
frstor
in
xchg
jo
sbb
test
and
lret
pop
bound
pusha
icebp
fmuls
push
vpshld
sub
xlat
sbb
stos
movsl
jne
mov
pop
push
outsb
ds
xor
xor
jne
stc
ret
lods
lods
xchg
imul
sbb
inc
pop
and
push
rdpmc
das
xor
inc
dec
cltd
push
loop
add
sbb
mov
push
notl
dec
pop
jge
push
xchg
adc
stos
ljmp
xchg
add
add
mov
xchg
test
std
adc
push
push
aas
sarb
mov
add
add
adc
mov
mov
mov
adc
popa
xlat
mov
inc
out
cld
xor
nop
and
mulb
dec
clc
test
sub
div
cmp
xor
shl
pop
addr16
push
pop
jno
lret
stos
out
stos
xchg
cmp
and
popa
mov
out
jmp
adc
adc
inc
mov
int
movsl
pushf
xchg
shrl
cmp
xchg
bound
xchg
inc
pop
roll
mov
lods
xor
jg
test
fwait
in
aaa
inc
pop
add
xchg
aaa
frstor
lea
fdiv
sub
or
leave
inc
repnz
push
xor
scas
mov
call
fcmove
les
imul
gs
xchg
mov
add
mov
xchg
add
fldcw
cmpsl
notl
or
int3
popf
cltd
lea
cmp
pop
imul
cmovne
aas
add
pop
or
ret
test
icebp
and
scas
test
pop
loop
xor
gs
xchg
pop
rolb
incl
push
xchg
out
repnz
packssdw
dec
cmp
in
outsl
mov
lock
push
add
xchg
hlt
and
jge
fdivrl
out
adc
xchg
mov
jbe
outsl
add
push
ss
lods
test
push
es
and
push
int3
xor
iret
xchg
clc
imul
lods
sub
push
pop
cs
cs
ljmp
out
sub
add
dec
dec
or
xchg
cmp
idivb
mov
push
mov
pushl
testl
push
fildll
lods
aaa
or
shlb
popa
push
xor
mov
dec
add
pop
and
imul
rcll
movsb
int3
mov
sbb
mov
fldcw
lahf
jmp
mov
sub
loop
in
cmp
stos
movsb
xorb
iret
adc
out
aad
cmp
mov
dec
inc
fistpll
mov
pop
cli
or
dec
fstpl
mov
jmp
pushf
jb
adc
mov
loope
scas
lret
ror
and
mov
sub
push
mov
jle
in
arpl
pop
pop
inc
aas
outsb
sbbl
cmovs
nop
les
mov
inc
idivb
int
imul
popf
xchg
rol
aaa
aas
jl
xchg
push
cmpsl
jo
mov
cltd
mov
mov
push
sbb
inc
loope
sbb
push
loop
ljmp
test
int
sar
inc
xlat
xor
loopne
push
mov
push
dec
adc
lcall
sbb
xlat
adc
add
mov
cltd
sbb
jb
loopne
pop
mov
pop
imul
jp
or
mov
xchg
je
iret
movsb
mov
outsl
out
xor
cmc
ret
pop
arpl
loopne
subl
push
mov
repz
fimuls
in
mov
ja
adc
pop
in
cmc
dec
and
pop
inc
in
bound
jecxz
test
stc
sbb
push
sbb
cld
ret
push
push
xor
add
jp
fs
pop
cltd
xor
test
fcmovbe
lcall
pop
mov
leave
sahf
inc
jmp
test
pop
test
popf
push
sub
adc
mov
ljmp
fcomi
adc
pop
ds
arpl
icebp
push
or
imul
rcl
add
in
mov
ds
xor
out
xchg
neg
xchg
jle
mov
mov
push
lret
lock
xchg
or
pushf
dec
cmp
cmp
sub
stos
pop
and
sub
rcll
cmpsb
fwait
test
popf
movsb
mov
pop
aas
data16
push
rorl
aam
xchg
sti
or
pop
pop
pop
punpckldq
leave
mov
sub
into
mov
cld
mov
sahf
cmc
lahf
xchg
mov
mov
stos
mov
dec
cli
inc
and
xchg
pop
aas
test
jns
stos
push
daa
orb
dec
jge
mov
xchg
pop
cmpsb
mov
add
pop
dec
mov
loop
imul
push
in
dec
dec
lret
lock
cltd
push
fldcw
add
adc
leave
shr
or
sub
repnz
jbe
push
cmp
jmp
or
sbb
xrelease
jnp
pushf
add
imul
cmp
rorb
ret
add
stos
rorb
mov
mov
jnp
pop
and
outsb
mov
sub
arpl
mov
jecxz
sbb
cwtl
sub
cltd
jle
test
pop
cmpsl
adc
mov
ss
cmpsl
insb
mov
jg
into
fcoms
data16
push
and
mov
mov
pop
xchg
jno
scas
jle
movsb
test
std
adc
out
mov
int
jo
popf
sbb
mov
sbb
and
addl
mov
ljmp
in
insl
cmp
xchg
les
and
sbb
fdivrl
dec
je
mov
jg
mov
adc
jb
inc
xorl
pushf
pop
cmp
xorb
adc
adc
and
add
roll
outsl
stos
push
pushf
and
mov
insl
pop
into
dec
or
push
pop
dec
mov
add
and
pop
leave
fldcw
jg
pop
das
test
mov
ss
stos
scas
mov
inc
lcall
cmp
icebp
push
and
pop
mov
sub
lds
mov
sbb
and
xor
outsb
aaa
push
xor
push
clc
roll
sbb
add
xchg
jae
scas
dec
dec
dec
push
int3
ljmp
xchg
xchg
or
pop
xchg
xor
ljmp
lahf
jb
and
xchg
iret
inc
mov
xor
jbe
xor
scas
mov
cmp
test
jmp
sbb
lods
push
cli
mov
push
mov
xchg
cwtl
dec
or
fistl
lock
xchg
cs
xorl
push
mov
xor
dec
adc
cli
popa
aas
out
arpl
adc
js
adc
mov
xor
imul
sbbl
repnz
push
push
add
cmp
inc
mov
daa
inc
aas
xchg
pop
mov
mov
stc
sub
lahf
lods
jecxz
ret
dec
sbb
jecxz
dec
cmpsl
int3
sub
add
inc
mov
pop
adc
xchg
jl
push
or
mov
jle
nop
mov
test
pop
ret
aaa
mov
dec
mov
test
pop
daa
test
push
sub
sarl
dec
xlat
mov
shlb
in
mov
icebp
pop
adc
std
sbb
or
sbb
repz
jecxz
cmp
mov
adc
xlat
sti
push
jl
or
mov
push
fistpll
test
push
cltd
sarl
sub
mov
pushf
push
movsl
ret
sub
rorl
mov
stos
rcll
mov
ljmp
jg
jl
mov
ss
jge
int
pop
shll
jnp
je
call
add
movsl
sub
and
jbe
mov
sbb
xlat
orl
fistps
mov
adc
adc
cld
jl
xlat
xchg
xor
into
jae
out
add
mov
jb
xchg
mov
je
pop
xlat
or
aad
xchg
mov
fnstcw
and
fmul
fisubl
sti
ret
rep
cmp
push
sbb
mov
negw
add
cmc
mov
sbb
aas
cltd
or
insl
in
xchg
loop
jb
xchg
dec
xor
lods
mov
push
dec
rcrb
fldenv
push
fisttps
jae
shll
inc
jbe
aad
cmp
sub
jbe
mov
cwtl
xchg
pop
xlat
sub
cltd
sarl
and
jae
outsb
xchg
aad
jg
fwait
sbb
fwait
int
dec
in
add
fs
jns
imul
sub
mov
cmp
test
fs
cmp
cwtl
adc
pop
mulb
mov
and
repz
fildll
pop
mov
mov
popa
mov
xor
mov
mov
jns
xchg
mov
xchg
sub
dec
cli
pop
pop
fcompl
sbb
lcall
mov
pop
sub
inc
pop
mov
clc
mov
loope
insb
mov
or
mov
sahf
cmpsb
xchg
ret
sub
dec
push
mov
lret
adc
js
jmp
data16
inc
out
ficompl
in
insb
popa
dec
xlat
popa
xchg
mov
push
rclb
lods
cmp
cltd
mov
inc
xchg
fnstcw
inc
xlat
insb
test
fwait
sti
int
fwait
mov
cmpsl
and
push
test
inc
mov
xchg
jno
dec
xchg
add
lret
out
sub
test
lock
shll
mov
scas
sti
dec
lods
test
mov
jnp
jbe
pop
push
in
lods
fadds
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
