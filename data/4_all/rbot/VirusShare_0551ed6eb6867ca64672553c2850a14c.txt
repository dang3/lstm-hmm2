je,pn
js
add
add
mov
add
adc
add
mov
add
add
add
add
add
rolb
add
add
add
or
add
add
rolb
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
adc
add
add
add
add
in
loopne
add
loopne
add
loope
add
loope
add
loopne
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
mov
add
adc
add
add
add
mov
add
rolb
add
sahf
and
add
add
pop
mov
sub
lea
mov
cmp
je
lea
mov
cmp
je
movl
mov
mov
sub
mov
add
lea
add
mov
mov
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
add
push
pushl
push
push
call
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
inc
xchg
add
rolb
add
sub
xor
bound
sbb
in
push
sbb
out
mov
test
pop
lock
rorl
cltd
push
cmp
inc
stos
adc
cmp
shll
mov
push
testb
push
fmuls
adc
sbb
mov
inc
insl
out
nop
movsl
lahf
and
jl
in
sub
or
in
push
mov
mov
xor
iret
push
fidivs
dec
jp
out
shrb
dec
sysenter
ret
loop
mov
xor
ljmp
cmp
test
lahf
call
inc
mov
js
leave
push
dec
arpl
gs
loop
scas
enter
enter
pop
clc
dec
xlat
sub
and
pop
stc
adc
sub
fnstsw
or
in
in
divb
jg
frstor
jl
mov
mov
test
xor
fsts
clc
push
mov
in
data16
jne
mov
imul
sbb
pop
xchg
pop
pop
sub
add
insl
push
aam
test
jb
xchg
jno
and
push
scas
and
dec
aad
sub
sbb
icebp
out
push
rcl
xchg
in
test
pop
adcl
mov
adc
ds
tzmsk
popa
xchg
fwait
call
xor
imul
jmp
sub
flds
or
or
daa
stos
jo
out
loopne
or
test
bound
out
pop
cmp
loop
pop
shl
lods
inc
jp
sbb
push
push
mov
ret
movsb
mov
pop
in
adc
out
outsb
add
pop
je
push
jne
and
test
test
dec
daa
mov
mov
push
sub
cld
jne
sub
xchg
pop
pop
jge
icebp
or
dec
hlt
add
dec
cmp
jp
jmp
xor
repz
jp
mov
les
jg
mov
sbb
popa
jp
jb
inc
jo
jl
out
fdivrl
je
mov
aam
and
fidivrl
cmp
rep
cmp
fmuls
cld
ret
cmp
add
or
lret
fldenv
js
pop
stos
jne
int3
insl
sbb
mov
jne
adc
test
and
mov
and
mov
and
jns
dec
dec
push
and
xor
out
xchg
data16
jbe
mov
xchg
push
sbb
jecxz
dec
clc
adc
into
scas
addr16
jae
add
mov
or
mov
xchg
adc
or
aad
stc
lods
xor
push
clc
jl
cmpsb
pop
popa
fs
enter
push
pop
mov
icebp
adc
out
arpl
sub
in
loopne
inc
out
mov
mov
fdiv
jle
lock
dec
mov
out
cmpsl
mov
dec
rcrb
sarb
mov
mov
cld
sahf
stc
push
sti
nop
icebp
stc
pop
jecxz
mov
sbb
jo
cmp
gs
in
lret
inc
push
rcrb
sbb
stos
xor
shll
aaa
lret
divl
push
sbb
mov
cli
mov
xchg
jns
inc
clc
mov
cmp
ret
sarb
push
inc
imul
add
xor
adcb
cli
jle
in
rcrl
dec
add
dec
inc
inc
mov
or
adc
inc
dec
mov
nop
sbb
add
pop
mov
adcl
sbb
test
ljmp
out
test
icebp
mov
insl
xchg
stc
into
mov
mov
ret
loop
push
in
sbb
cmp
cmp
xchg
or
cmpb
out
push
or
ja
lret
cltd
daa
movsb
or
rcrl
sti
dec
daa
dec
add
jno
jns
enter
jmp
mov
xchg
fisubrs
pop
push
ljmp
and
and
subl
mov
ljmp
jle
test
lret
mov
aas
and
repnz
jb,pt
data16
repnz
cmp
sub
xorb
out
add
push
popa
popa
ljmp
push
mov
adc
dec
loop
repnz
sahf
clc
pop
xchg
mov
mov
adc
pop
dec
imul
fwait
inc
and
push
add
mov
stc
cs
enter
sbb
pushf
add
imul
and
je
insb
arpl
adc
sahf
and
rolb
repz
inc
rclb
adc
cmpb
nop
icebp
dec
sub
imul
sub
in
insb
sbb
lea
xor
loopne
mov
jb
dec
inc
arpl
lahf
nop
loopne
fwait
ja
pop
jns
or
movsb
xor
sub
fists
arpl
sbb
stc
pop
push
insb
pop
pop
xlat
popf
test
inc
dec
sbb
outsl
mov
fidivrl
push
mov
sbb
or
xor
or
es
jg
pop
shll
sbb
jo
icebp
lock
cmpl
sub
push
xor
mov
sub
ret
pop
mov
enter
insb
or
push
inc
jl
mov
arpl
mov
push
mov
pop
and
shr
and
scas
mov
cwtl
daa
std
jno
adc
in
in
mov
icebp
outsl
das
cmp
popa
xorl
or
push
push
add
aad
fs
dec
cmpsb
and
mov
clc
addb
xor
scas
scas
outsb
jp
adc
into
aam
fcmovnu
pop
add
mov
pop
fwait
lods
decb
sti
iret
aad
xchg
sbb
bound
push
roll
push
push
push
scas
sub
fmulp
sbb
lods
push
fadds
and
cmp
lock
cmp
mov
scas
adc
movsb
popa
int3
popf
pusha
jle
out
lahf
data16
je
xchg
mov
ret
cmp
cmp
jecxz
pop
ficoml
xchg
lods
sbb
out
ret
in
movsl
push
push
les
jo
aad
adc
push
rcr
cmc
lcall
ljmp
jb
das
cmp
and
push
mov
aaa
inc
pusha
ljmp
push
fisttpl
lds
fistps
mov
aaa
cmp
rclb
ret
inc
sar
aaa
sbb
mov
imul
in
insb
data16
out
hlt
inc
sbb
nop
push
int3
cmc
or
xchg
xchg
rcll
incl
test
push
in
adc
sub
lret
mov
push
and
jg
popf
dec
sbb
xorb
ss
push
pop
dec
inc
cli
mov
ljmp
mov
repnz
sbb
jg
out
sar
jl
xchg
cltd
jp
fs
xor
call
add
insl
sub
mov
pop
mov
inc
shlb
sbb
fcomi
jns
and
out
cmp
repnz
shlb
mov
test
shrl
jne
sub
emms
xchg
gs
movsb
xchg
xor
pop
imul
mov
mov
jbe
pop
fwait
or
movsl
lds
movsl
push
cmpb
lcall
jae
test
add
push
or
push
in
sbb
or
cwtl
or
mov
mov
sbb
outsb
pop
add
xorb
rorl
jmp
loopne
rcll
pop
mov
and
xor
ljmp
cmp
repz
enter
stos
mov
xchg
sub
out
notl
dec
in
xor
out
sbb
shlb
sarl
xor
jl
stos
lcall
dec
stc
sbb
enter
add
aad
xchg
push
jle
adc
cs
adc
push
jl
jb
adc
mov
add
xor
dec
and
cmp
mov
sub
inc
adc
jge
cmpsb
pop
adc
xor
mov
xchg
ds
negl
in
xchg
push
pop
cmp
cmc
push
cmp
mov
sbb
xchg
lods
fadd
jle
into
sbb
insl
js
cwtl
test
sub
lret
f2xm1
cld
sti
incb
pop
andl
call
mov
or
sti
insb
mov
aas
cmpl
inc
adc
push
xor
push
push
jge
std
ljmp
imul
adc
pop
cmp
sti
mov
push
repnz
xchg
int
ret
arpl
or
jb
das
ljmp
lock
push
or
cmp
dec
xchg
pop
xchg
sub
out
jle
mov
aad
cmc
mov
ds
es
or
xchg
and
in
fcomi
insl
test
xchg
add
in
cmpsl
mov
stc
or
ffree
add
mov
sbb
loope
out
lds
pop
int
aas
fs
adc
loop
mov
out
xchg
mov
jnp
pop
and
dec
jns
jle
js
addr16
stos
fwait
lret
leave
sub
push
mov
scas
inc
jmp
add
jbe
push
mov
jbe
add
not
shll
mov
inc
insl
aaa
push
add
out
pusha
mov
xchg
subb
cwtl
lock
pop
test
ds
xchg
inc
adcl
in
and
aad
mov
lcall
jle
stc
loopne
mov
cmp
mov
push
mov
xor
fnsave
and
add
adc
jae
mov
lods
adc
cwtl
pop
xchg
pop
mov
dec
adc
ja
lds
sub
inc
iret
rcr
int
std
rcrb
mov
mov
loop
jne
pop
sbb
mov
adc
fistpl
in
sbb
rcrl
pop
int3
jmp
xchg
fdivl
out
mov
push
stos
aad
mov
jo
in
jae
pusha
bound
stc
add
mov
stos
aad
mov
jle
add
fiadds
pop
cmp
dec
sub
sahf
xchg
stos
sbb
inc
pop
lahf
daa
out
repnz
pusha
inc
imull
imul
push
xchg
push
into
movsl
mov
and
fwait
mov
stos
xchg
frstor
adc
xchg
inc
les
sti
movsb
aaa
adc
push
stos
cld
jne
fs
and
pop
pushl
sub
adc
mov
pop
mov
test
lea
add
lods
aas
push
mov
gs
std
xchg
xchg
adc
mov
inc
fldl
subb
js
into
add
cmp
mov
mov
cmpsb
lcall
insl
inc
test
decl
add
adc
pop
cmp
shrl
jae
cli
push
mov
mov
mov
icebp
insl
icebp
sbb
or
adc
cmp
and
jle
inc
xor
rol
int3
mov
push
loope
ljmp
xchg
sub
mov
xlat
cmp
fsubr
or
js
jl
inc
psrld
rcl
inc
jg
jnp
ficoml
ficoml
fsubp
shrl
mov
adc
lods
notl
cmp
loopne
push
mov
aad
pop
mov
cli
movl
addr16
xor
jae
push
in
mov
div
mov
sub
pop
bnd
jb
lods
popa
inc
and
fstl
ret
fwait
in
fs
ja
stos
and
push
lea
xchg
mov
add
ds
dec
nop
out
mov
lock
mov
outsb
insl
inc
daa
sbb
xor
inc
xor
sbb
neg
xchg
pop
cmp
push
cmc
lcall
outsb
and
sbb
mov
mov
cmc
jp
enter
pusha
or
cmp
popa
xchg
inc
sub
adc
cmp
loopne
sub
das
pop
dec
test
fidivrs
je
ss
add
xchg
out
aad
scas
cmc
xor
scas
jmp
imul
movsb
jmp
aad
fldenv
scas
dec
xchg
nop
mov
insb
and
enter
pop
mov
mov
xchg
xor
add
into
mov
cmp
fwait
daa
sub
std
rol
xchg
pop
cmpsl
adc
xchg
or
aam
mov
mov
stos
pop
mov
jg
je
aaa
sbb
into
push
mov
push
mov
jnp
and
xchg
loope
iret
adc
les
pop
cld
insl
dec
iret
push
pop
test
xchg
sub
and
jle
cwtl
pop
jl
fidivrl
sub
and
fs
stc
repnz
adc
out
mov
sbb
cmp
adc
repnz
add
clts
dec
or
stc
and
rol
daa
fwait
hlt
pushl
cld
flds
xor
out
jno
mov
orl
aaa
scas
sbb
pop
in
sti
pop
out
popa
lods
sbb
mov
inc
inc
jl
jg
mov
dec
jae
test
cwtl
sarb
inc
sbb
mov
xor
je
cld
iret
and
popa
and
or
sbb
lahf
or
pop
pop
iret
mov
push
stc
or
imul
mov
repz
inc
fwait
xor
jb
xlat
push
mov
loop
push
pop
repz
out
mov
jns
sbb
rcr
pop
dec
mov
lret
pop
or
int
sub
enter
mov
jbe
inc
clc
ss
sub
push
test
mov
les
cmc
lods
xor
dec
scas
aas
mov
adc
and
shrl
or
lea
insl
jl
inc
push
mov
and
mov
add
js,pn
lcall
int3
inc
outsl
scas
lret
inc
sti
enter
inc
or
pop
jg
bnd
push
loope
push
lds
add
int
and
add
inc
dec
lea
sete
addr16
jbe
and
ss
mov
cmp
popl
mov
insb
push
int3
and
and
jns
cmp
lahf
stc
ret
adc
inc
dec
out
sub
or
pop
leave
repnz
add
pop
sahf
mov
jnp
ret
subl
test
repnz
mov
iret
cwtl
in
sbb
lds
pop
add
or
test
pop
mov
jb
mov
loope
stos
jns,pt
into
dec
imul
popf
sbb
ljmp
push
mov
sar
adc
ficomps
test
test
dec
jno
loope
mov
xor
ljmp
call
imulb
xlat
stos
test
hlt
mov
jle
ror
mov
jb
outsb
dec
movsl
inc
popa
scas
adc
mov
ss
subb
xor
popf
mov
sbb
mov
mov
nop
ss
adc
dec
dec
mov
dec
mov
pop
rclb
add
xchg
mov
push
mov
in
mov
fabs
cmp
sahf
mov
daa
test
test
jnp
mov
add
call
push
xchg
cltd
and
push
jecxz
rcrb
sbb
and
lds
add
test
dec
dec
mov
jge
adc
inc
jo
cmp
push
mov
sbb
add
cmp
mov
and
cmpb
pop
mov
push
scas
insb
mov
dec
lret
jo
gs
les
out
xchg
xor
or
mov
push
xchg
add
sbb
jle
pop
inc
mov
or
cmp
push
inc
std
xor
adc
xor
mov
movsb
insb
pop
xor
adc
aad
aaa
data16
out
and
or
cmpsl
inc
xchg
xor
cmpsb
mov
mov
fndisi(8087
push
out
add
xor
out
in
push
dec
movl
bound
out
popf
mov
sbbl
dec
fs
mov
dec
pop
cmpsl
and
push
subl
or
push
js
pop
mov
and
sub
movsl
and
or
xchg
push
gs
push
idiv
xchg
xchg
sti
dec
push
mov
jl
xor
lods
cltd
std
fsubrl
je
ret
or
inc
jl
pop
leave
cmp
and
fdivs
lds
sbb
popa
mov
push
hlt
adc
mov
cmp
push
cltd
push
pop
out
in
out
in
data16
enter
fadd
jmp
int3
xlat
imul
xchg
repnz
mov
pop
leave
pop
lock
xchg
rcrb
imul
insw
std
mov
je
mov
push
cmp
hlt
leave
scas
dec
adc
jns
test
dec
out
fisubs
cwtl
xchg
outsl
push
mov
sti
ljmp
or
enter
xchg
xchg
pushf
cltd
popa
xchg
dec
cmp
adc
xor
sbb
xchg
xchg
pop
loopne
xor
clc
jae
scas
fistl
add
pop
popa
fwait
mov
imul
adc
cmp
mov
add
cmc
std
sbb
inc
mov
push
dec
or
push
lock
imul
push
mov
test
stos
xchg
test
sarb
xchg
sub
inc
pop
inc
js
inc
cli
call
cmp
or
cmp
mov
sbb
xlat
bndstx
ud0
pop
or
cmp
cmp
rorl
push
pop
mov
lahf
push
and
out
lods
lret
cmp
scas
mov
call
sbb
jb
push
sbb
sbb
stos
daa
dec
jp
sahf
in
test
jge
scas
add
sub
pop
push
and
jl
add
mov
into
or
push
into
jne
fstpt
xchg
dec
aaa
adc
xchg
cmp
fsts
in
add
or
mov
mov
jecxz
xor
xchg
repnz
cmp
mov
xchg
test
xlat
outsb
add
sbb
test
js
aas
lcall
ret
jne
scas
jmp
mov
data16
call
push
pushf
ds
ljmp
sti
enter
roll
dec
push
mov
js
jae
les
scas
mov
xchg
aad
push
mov
mov
jmp
xor
call
stc
cmpsl
insl
enter
push
fs
fstpt
or
dec
mov
adc
mov
or
mov
push
popa
cs
call
pop
fisubs
loop
sub
and
shl
sbb
xor
inc
xor
aad
clc
pop
in
inc
jecxz
movsb
inc
test
sbb
cmpsb
adc
cmpsb
sti
cmp
xchg
mov
xor
inc
or
jbe
shl
mov
pop
aaa
fsubrp
dec
pop
hlt
inc
into
rorb
cmc
out
stc
add
mov
push
movsl
dec
es
cmp
xorb
and
lds
movsl
jmp
fcomps
xor
mov
cmpsl
test
push
xchg
xorb
aad
mulb
mov
and
and
dec
push
xchg
pop
sub
in
shlb
in
xchg
adc
xchg
frstor
test
enter
hlt
sbb
call
inc
icebp
cmp
xchg
incl
sbb
mov
shl
mov
ficomps
repnz
xchg
sbb
add
cmpsb
mov
mov
insl
dec
les
dec
pop
mov
out
xor
testb
xor
std
and
iret
fisubrs
movsb
outsb
cmp
popf
inc
loope
sbb
mov
sarl
dec
mov
cmp
mov
xchg
or
push
jo
and
ja
mov
jp
push
pop
inc
pop
sbb
mov
jbe
dec
mov
xchg
das
cs
mov
or
ja
mov
jle
ficompl
loopne
rolb
push
fstpl
pop
notb
in
xor
call
rorl
lea
scas
inc
js
adcl
pusha
loope
mov
cli
mov
add
notb
and
pop
inc
stos
int
and
ds
sub
add
xchg
inc
mov
inc
inc
mov
mov
xor
dec
xchg
xor
pop
ljmp
les
jae
xchg
xor
rcrb
fsubrl
push
cmp
jnp
inc
in
enter
xor
es
notl
pop
ljmp
mov
xchg
cmpsl
imul
dec
jne
imul
bnd
inc
in
pop
pop
add
je
push
xchg
ret
stc
inc
shlb
adc
xchg
push
pop
pushf
bound
cltd
cmp
add
nop
jge
lahf
pop
mov
dec
gs
ljmp
and
idiv
sbb
lret
mov
mov
mov
pop
ret
or
jle
push
es
les
leave
movsl
sbb
and
mov
mov
test
fldenv
mov
stos
pop
dec
ss
push
sub
inc
xor
cmp
movsb
mov
jne
fidivl
adc
call
adc
cmpsb
insb
lock
hlt
nop
or
jo
mov
sarb
dec
dec
js
dec
push
das
movsb
cmc
mov
imulb
rcrl
add
jle
sbb
xchg
testb
xorl
or
test
jl
pop
ds
mov
inc
orl
xchg
enter
das
ljmp
sti
shl
adc
daa
add
mov
shlb
testl
adc
cmp
jle
loope
sub
daa
dec
repnz
or
int3
mov
cmp
jp
inc
je
ljmp
fldl
es
loop
fidivl
mov
inc
xchg
or
jmp
or
rcll
mov
movsl
mov
or
iret
sti
or
sbb
sahf
mov
fisttpl
sbb
pop
add
mov
xor
jecxz
cmpsl
inc
push
add
outsb
aas
push
xorl
pop
aad
iret
repnz
inc
les
scas
iret
add
loop
loope
data16
cmp
call
leave
cmp
adc
push
adc
aad
pop
sti
dec
aad
sub
sbb
xchg
or
loope
loop
push
inc
dec
shlb
imull
es
fsubr
outsl
push
jae
pop
nop
test
sub
dec
or
xchg
inc
sbb
fyl2xp1
push
es
mov
xchg
pop
add
jbe
fcomi
stos
push
add
jl
pop
push
sbb
loopne
inc
dec
pop
les
jl
mov
shl
cmp
inc
push
lods
cmc
lods
stos
aam
rcr
sti
xchg
cltd
mov
test
cmp
jecxz
jne
lea
sarb
ljmp
clc
call
cmc
lcall
inc
ret
repz
and
sbb
std
test
scas
jb
fsubs
jge
push
mov
cmp
xchg
mov
lock
and
fldenv
or
dec
incb
inc
cmpsb
dec
and
popa
pushf
or
add
imul
mov
daa
ret
fnstenv
cs
pop
sahf
lret
mov
insb
repnz
inc
fildl
shr
divl
jmp
test
mov
pushf
xor
out
pop
test
inc
icebp
mov
out
sbb
xchg
mov
sbb
or
in
mov
sbb
outsl
add
sub
stos
and
mov
shlb
mov
ss
adc
test
push
cmp
and
pop
add
fdivr
cwtl
pop
loope
mov
shrl
lea
or
pop
rolb
mov
cmp
sub
mov
lret
outsb
add
push
xchg
cwtl
xor
sub
and
lds
adc
scas
cmp
jmp
notl
sahf
lahf
dec
dec
sub
or
cli
fisubl
cltd
loopne
jbe
push
mov
repz
pop
popw
cmp
lcall
sbb
cs
add
mov
cmp
sub
stc
pop
mov
lret
jo
pop
out
popa
in
test
sub
mov
mov
mov
pop
in
sub
sbb
pushf
testl
sub
int
dec
push
mov
addl
test
mov
subb
nop
movsb
mov
jg,pn
orl
aam
xchg
xchg
push
adc
cmpsl
sti
jecxz
fdivrp
test
nop
jns
lea
push
mov
mov
jmp
jmp
jbe
inc
inc
xchg
je
push
out
rorb
xchg
scas
mov
in
xchg
popa
mov
call
mov
lret
cmpsb
cmp
inc
in
adc
cld
dec
jae
sbb
pop
paddusb
pop
jmp
xchg
pop
cmc
jecxz
dec
jge
int3
jo
clc
shrb
jl
shlb
push
cltd
hlt
and
rol
push
loop
into
jmp
das
lret
bound
sub
aam
adc
gs
scas
sbb
adc
jmp
jl
out
push
jge
mov
idivl
stc
sti
push
xlat
mov
andb
jne
mov
shll
cmc
push
inc
add
pusha
push
push
lcall
and
ljmp
mov
mov
popa
push
clc
sbb
fadd
add
or
jmp
cwtl
jb
icebp
and
push
adcb
mov
sub
xchg
push
rcrb
push
jnp
add
insb
cmpsl
fdivp
jo
repz
leave
push
lods
fstl
inc
adc
xchg
jae
nop
xlat
pop
pop
ja
inc
cmp
cmp
mov
cmp
fistpll
jmp
addr16
jb
xor
jmp
decl
les
ss
dec
cli
push
insl
fistpll
addb
call
je
xchg
into
jmp
fsts
ret
jae
and
jge
lcall
jns
sbb
jge
ds
gs
mov
cmp
rcl
cmp
sub
jmp
jnp
sahf
icebp
flds
int
paddsw
xchg
lock
loop
fisubs
dec
outsb
xchg
mov
clc
inc
repz
cmpxchg8b
int
lods
mov
sbb
or
out
cmp
jg
push
push
adc
adc
out
xchg
dec
sbb
cmp
xchg
out
fmull
test
add
movsl
pop
push
sbb
pop
and
or
add
lea
iret
push
sub
sbb
clc
ret
scas
hlt
pop
add
outsl
loope
jo
gs
data16
sbb
xchg
sub
xor
inc
rclb
std
pop
pop
sub
fistl
mov
dec
push
fbstp
add
je
adcb
or
jo
stos
icebp
jmp
push
jg
push
lahf
mov
fcoml
out
jns
sbb
data16
jae
outsb
sbb
cmp
insb
add
leave
iret
adc
jp
or
mov
and
xchg
mov
lahf
push
mov
ds
gs
cltd
jl
inc
add
jno
popf
xor
mov
insb
push
and
push
mov
mov
mov
xchg
jmp
arpl
inc
xchg
and
insl
xchg
ljmp
call
push
imul
mov
add
insb
cld
decb
enter
cmpsl
cmp
mov
mov
sti
imul
daa
or
xchg
je
sub
jo
cs
notb
mov
mov
fstl
shlb
xchg
sbb
cmpsl
or
jp
and
lods
adc
fucomip
pop
dec
xchg
push
fstl
test
push
lock
and
lods
mov
sbbl
adc
adc
lea
rcrl
xor
in
sub
jmp
or
fwait
pop
mov
sbb
lret
push
pop
subl
push
into
pop
ja
jb
and
mov
pop
sbb
mov
orb
mov
push
inc
adc
cli
sub
cmp
adc
sub
pushf
push
loop
out
sub
xchg
mov
scas
dec
jl
jl
sbb
push
addr16
fdivrl
jecxz
stos
icebp
mov
test
push
int3
or
jnp
jl
shl
add
sbb
xor
pop
into
inc
inc
sbb
cs
mov
loop
xor
fisubrl
inc
xchg
pop
inc
push
xor
into
hlt
call
adc
int3
or
and
lock
sub
mov
jge
push
push
ljmp
add
mov
push
sbb
outsb
push
out
inc
and
or
and
pop
jge
stos
inc
jnp
xchg
add
add
and
fidivrl
xchg
call
lret
jle
inc
jge
out
pop
mov
and
stc
popa
lret
mov
inc
mov
neg
arpl
clc
lock
faddl
jl
subb
add
mov
add
aas
jbe
sarl
loopne
sub
inc
leave
imul
clc
mov
mov
mov
nop
imulb
dec
push
les
popf
outsb
inc
xchg
std
nop
mov
jp
add
out
xchg
xchg
jle
jg
pop
fists
dec
es
pop
mov
sub
xchg
dec
aaa
mov
sti
loopne
xchg
mov
dec
lahf
dec
mov
gs
pop
mov
inc
lods
cwtl
mov
mov
jecxz
or
push
repnz
and
stos
push
inc
xor
or
test
pusha
xchg
sbb
inc
xchg
loop
punpcklbw
cmp
inc
push
movsl
jns
stos
xchg
loop
jo
or
or
pop
jbe
jne
dec
jp
jle
ficoms
outsl
lret
pop
in
dec
xor
insl
pop
cmp
add
push
push
and
cld
sub
sub
aas
es
fisubl
clc
loop
inc
pop
pop
xor
iret
loop
enter
sarb
push
das
aad
divl
ret
pop
mov
jg
or
adc
rcr
inc
icebp
lods
xchg
loope
test
jmp
mov
in
mov
mov
lock
outsb
loop
roll
mov
stc
cs
sbb
mov
push
ret
call
addr16
jns
add
sti
ret
dec
add
loopne
icebp
inc
popw
lds
aas
or
cmp
jle
inc
xor
sbb
jnp
bound
inc
push
xchg
das
adc
cmp
std
mov
jge
dec
pop
xor
dec
cmpsb
xchg
mov
add
jmp
inc
addr16
lock
icebp
aas
push
sub
vmovmskps
fcomip
les
push
insb
xchg
add
test
sahf
or
sbb
inc
imul
mov
dec
jb
dec
std
mov
xor
movsb
cmp
in
aaa
loop
push
imul
popa
lock
cmp
shl
adc
test
mov
nop
sbb
sub
rclb
loope
jp
add
mov
add
or
jb
fbld
sub
fcom
xchg
push
rcrb
aad
sarl
xor
or
jne
into
sahf
fs
pushf
nop
inc
add
ds
int
adc
ljmp
and
lahf
or
lock
stos
pop
xor
xchg
test
or
data16
sub
scas
imul
inc
xchg
fstl
fs
in
insl
push
sub
or
int
loope
aaa
mov
lods
xor
inc
das
mov
enter
rcrl
loopne
std
xor
notb
aam
jmp
or
inc
out
popa
xchg
dec
fs
andl
cmp
mov
test
adc
jns
xchg
or
mov
and
cs
xchg
in
and
dec
fistpll
loop
fs
adc
loop
jp
cmp
and
mov
movsl
xor
gs
and
jp
adc
sub
in
lahf
jge
test
inc
xchg
adc
xchg
nop
int
mov
mov
pop
xor
push
clc
insl
cwtl
sbb
movsb
mov
aad
jge
inc
sub
loope
sub
jae
scas
sbb
mov
sti
adc
jecxz
bound
jl
adc
lods
dec
cs
inc
inc
daa
js,pt
inc
jp
lods
scas
lock
jae
adc
adc
mov
aad
popa
popf
adc
jp
inc
std
mov
mov
or
sarl
call
sahf
imul
sti
std
sbb
test
bnd
lret
jae
xchg
rep
sub
das
mov
das
insb
fisttpll
roll
cmp
imull
or
movsb
xchg
mov
das
sub
push
cmp
pop
mov
imul
in
or
lcall
push
push
lahf
pop
inc
cs
jmp
mov
aam
inc
movsb
aas
xor
xor
mov
push
pop
jae
add
call
in
cwtl
or
out
dec
mov
lgs
cli
cmp
xor
je
pop
pop
sub
shlb
shrl
lods
mov
mov
je
or
rolb
les
or
xorb
aas
cmp
popf
push
scas
sub
stos
jecxz
sbb
imul
pop
mov
or
sbb
jb
cli
gs
or
imul
pop
icebp
pop
pusha
in
pop
orl
adc
lods
xchg
test
mov
cli
ret
xlat
xor
les
lods
popf
js
adc
mov
cmpsl
sahf
fistpl
pushf
stos
lock
repz
adc
sbb
clc
xor
sbb
pusha
push
clc
fildll
and
in
push
mov
into
out
inc
ja
xor
arpl
jmp
xor
aaa
loop
loope
pop
jo
sbb
cmp
lea
cmp
and
das
jg
popf
sti
cmpsl
sub
daa
out
xorl
and
decl
cld
pusha
imul
jle
lods
sub
xor
test
cmp
inc
lcall
popa
xchg
call
fwait
std
pop
jle
sbb
fcmovb
inc
clc
or
push
mov
shlb
and
push
dec
int
mov
or
mov
je
fld
or
sbb
sarb
inc
pop
out
lds
dec
hlt
adc
xchg
paddusb
idivb
pop
jb
mov
xor
outsl
or
or
mov
ffreep
loopne
mov
je
enter
and
ss
cmp
ja
mov
dec
or
xchg
aas
cltd
or
daa
je
popa
cmp
sbb
ficompl
xchg
push
jo
int3
cli
and
cmp
pop
or
ljmp
sbb
ss
xor
mov
test
dec
std
dec
aaa
and
jb
pop
cmp
imulb
cmpsb
or
lret
or
lcall
pop
inc
inc
add
subps
popf
pop
sbb
add
jo
mov
shll
imul
enter
cwtl
jno
ja
jg
ret
adc
sub
jge
mov
mov
cmp
std
add
outsl
add
mov
out
clc
dec
adc
or
scas
xchg
push
pop
lods
inc
ja
inc
dec
jp
xlat
jno
cld
bswap
xor
ss
add
adc
cmc
mov
dec
jne
cmc
sbb
dec
jmp
pop
mov
loop
mov
mov
and
outsb
pop
or
xor
repnz
jecxz
mov
mov
call
push
fisubrl
lea
xorb
test
jmp
xchg
pusha
mov
push
jge
addr16
inc
add
pop
mov
cmp
mov
jns
les
mov
dec
scas
pusha
add
insb
ret
and
int3
orb
pop
shll
dec
movsl
stc
pop
gs
inc
push
decl
mov
pop
aam
mov
push
negl
inc
ja
pushf
sysenter
stos
rcrb
push
es
sub
aaa
xchg
add
ret
fbstp
std
mov
scas
cmpsl
and
xchg
mov
cmp
movsb
fiaddl
lret
loopne
mov
loope
mov
xor
adc
cmpsl
sbb
jg
adc
cld
loope
cmp
gs
sub
mov
pop
imul
repz
fstpl
int
lods
daa
jg
dec
xor
icebp
imul
push
and
insl
xor
pushf
mov
inc
adc
jo
mov
push
arpl
or
imul
adc
dec
sbb
or
mov
aam
mov
mov
dec
mov
or
and
repnz
cmpl
loopne
aaa
pushf
add
xchg
add
ja
mov
sub
hlt
mov
sub
push
xchg
mov
je
jbe
pop
jl
mov
or
test
dec
mov
xchg
ret
mov
push
add
jo
in
jecxz
adc
and
repnz
div
cmp
mov
adc
sbb
fcomps
cmp
decb
je
mov
in
dec
inc
loopne
mov
xchg
xchg
and
xor
pop
xchg
jmp
push
lods
and
push
inc
fildll
sbb
mov
dec
sub
cmpsl
ret
imulb
cmpsl
cs
xor
aad
idivb
loope
xchg
outsl
push
cmp
push
into
fistps
push
push
mov
dec
sbb
arpl
into
js
fistps
jg
lea
inc
out
pushf
mov
sti
or
out
add
sbb
sub
dec
inc
mov
or
addr16
dec
fwait
adc
leave
inc
sbb
das
push
mov
mov
decl
dec
xchg
sahf
mov
xchg
cmp
fwait
mov
pop
sub
sbb
lret
pushf
mov
into
mov
push
fistps
sub
cs
cwtl
pop
pop
in
pop
gs
aaa
or
ret
jecxz
and
rorl
aam
repnz
cmc
jle
mov
add
cmc
test
ret
mov
cmpsl
xchg
lahf
pop
popa
addr16
in
sub
and
addr16
push
mov
sbb
or
pop
shl
cmp
hlt
outsl
lret
sbb
adc
shl
mov
xor
icebp
push
aaa
cmp
sub
pusha
mov
outsl
or
cmp
ljmp
movsl
pop
aaa
xor
ret
and
out
sbb
fidivs
scas
cmpsl
fwait
cmpsl
inc
out
int3
xchg
sbb
dec
or
pop
aad
roll
in
dec
insl
pop
adc
aad
andb
fistpl
and
mov
stos
inc
js
mov
test
leave
mov
sarl
jb
into
ror
cmp
sub
cmc
sub
fs
sub
mov
notl
in
stos
loope
cmp
cmc
cmpsb
sbbl
cmp
ja
movsl
in
add
ret
loopne
repz
divb
mov
roll
js
cltd
fadds
add
mov
pusha
lcall
mov
inc
movl
or
pop
movsl
inc
pop
dec
call
inc
repz
xchg
bound
xchg
ret
gs
sub
push
mov
cmp
fisttps
loopne
pop
ja
cld
pop
sbb
loop
mov
cltd
adc
sbb
data16
lahf
lock
inc
mov
push
xchg
push
mov
dec
les
or
ss
or
shr
inc
sub
cltd
sahf
push
push
jge
in
xchg
xchg
xor
mov
lahf
js
shl
cmp
mov
movsl
mov
jmp
mov
add
lds
pop
ja
mov
mov
add
add
mov
ljmp
insb
fnstenv
xchg
or
xchg
push
fdivrl
jne
push
dec
aas
ret
fs
hlt
mov
adc
jmp
orb
repz
fbstp
xor
sub
add
shl
lock
cltd
mov
pop
sub
fnstcw
repnz
in
mulb
pop
and
lret
pop
mov
pop
outsl
push
js
xchg
lods
pop
shl
in
mov
dec
gs
jb
in
pop
ss
dec
arpl
ss
sar
xor
mov
adc
xor
mov
jmp
adc
repnz
mov
aam
push
jnp
cwtl
sbb
popa
shr
inc
mov
push
aad
and
jbe
mov
sbb
or
add
rcl
ret
sub
xor
add
ffree
jp
push
jnp
cmp
xchg
inc
clc
cmpb
xlat
jno
dec
add
out
aaa
mov
pop
mov
cmp
pop
add
sub
jl
std
stos
fbld
lods
push
cmpsl
xchg
mov
inc
incl
loopne
cmp
xchg
mov
clc
cmp
xor
fistps
into
cmp
fistpl
inc
movb
insl
into
out
jle
push
call
cmp
sbb
rep
jmp
mov
mov
push
sub
lret
mov
mov
fs
dec
fucomip
sbb
lods
dec
jle
in
fldl
and
dec
fcmovnbe
loopne
iret
adc
imulb
mov
sbb
int3
mov
sub
ss
dec
push
mov
jl
in
jnp
cmpb
cwtl
scas
and
pop
cmp
mov
cwtl
fnsave
orl
mov
or
mov
data16
int
mov
in
cmc
and
jge
icebp
mov
mov
mov
mov
sti
aad
xchg
bound
inc
xchg
sbb
sbb
ds
cld
sbb
nop
cs
stos
inc
or
shlb
imul
or
push
dec
cmpsl
xchg
adc
push
out
movsl
insl
jl
cmp
cmpsb
in
popa
mov
cwtl
pusha
fidivs
mov
and
dec
add
dec
test
cmp
and
ljmp
stos
std
int
or
popa
pop
cmp
fneni(8087
xor
loope
mov
andl
cmp
jl
jmp
movsl
push
leave
lahf
cmpsb
outsb
push
sbb
jp
ds
sub
sbb
dec
sub
sbb
mov
mov
jp
inc
xor
std
pop
insb
cmp
lcall
push
adc
mov
sbb
ljmp
sub
mov
dec
loopne
xchg
jl
pusha
fistpl
addr16
leave
shrb
fiaddl
nop
pusha
mov
rorb
imul
pushf
xor
cwtl
ret
or
xchg
jp
inc
sbb
lods
pop
add
iret
and
pushf
xor
push
xchg
xor
out
jecxz
addr16
xlat
ret
pop
adc
imul
pop
jge
scas
bswap
adcl
ret
dec
mov
outsb
rclb
adc
xchg
adc
enter
sbb
jl
mov
fst
das
rep
or
pop
imul
fwait
mov
je
aad
push
call
rorb
cltd
push
les
roll
sbb
shr
push
fdivs
fs
pushl
nop
insb
inc
lcall
sbb
test
xchg
fisttpl
loop
or
or
pop
int
mov
fmuls
and
push
cld
popa
mov
jle
sbb
outsl
out
mov
adc
mov
adc
out
sub
sub
fnstcw
cmp
pop
xchg
gs
iret
ds
scas
adc
cmpsl
and
xchg
popf
jle
push
jl
push
dec
push
jne
jle
fists
cltd
sub
cmp
repnz
mov
cs
mov
or
cmc
lds
jbe
adc
popf
push
push
lret
nop
jns
loope
out
loop
mov
sbb
add
popa
mov
lds
gs
test
in
mov
iret
jno
test
xchg
jns
cmp
ret
jp
out
popa
xchg
lret
and
fsubrs
mov
in
push
mov
daa
scas
xchg
dec
inc
inc
mov
adc
fstps
jmp
iret
cmp
or
sub
fcompl
mov
or
jo
movsb
cmp
mov
ss
sbb
cmp
jmp
icebp
mov
out
stc
aam
cmpb
out
mov
lea
in
jecxz
pop
scas
pop
mov
sbb
movsl
jmp
arpl
aas
push
push
cltd
pop
loope
lahf
pop
imul
xor
inc
sub
rorl
mov
sbb
mov
xor
or
sub
xor
dec
xchg
pop
outsl
sahf
mov
dec
mov
add
add
loopne
dec
mov
or
push
jb
std
dec
test
out
xchg
sub
outsl
cmp
sbb
mov
xchg
insl
inc
push
outsb
xor
lcall
sub
and
mov
adc
shrl
pop
iret
cs
add
repz
loope
ret
cmc
jp
scas
mov
or
sbb
add
sbb
cmp
ss
xchg
imul
loop
jp
cwtl
ret
jae
push
mov
mov
xchg
imul
xchg
movsl
add
add
repnz
mov
ret
and
call
es
mov
fcomi
pop
mov
scas
mov
in
jo
out
or
add
jbe
sbb
add
add
lds
fdivs
fcmovne
stos
sti
enter
scas
mov
ret
loopne
sub
shr
in
add
cwtl
xchg
lcall
lods
dec
jns
aam
cmp
out
rsm
mov
sbb
out
xchg
inc
jmp
testl
mov
push
push
test
fs
mov
sbb
shll
cwtl
std
dec
and
ret
fs
mov
push
lret
outsl
or
pop
dec
test
es
mov
or
imul
stc
and
repz
lods
cmp
push
cmp
ds
or
mov
fimuls
and
and
pop
xchg
xchg
lds
mov
dec
sub
cmp
jmp
in
out
mov
test
sbb
xchg
mov
inc
mov
popa
cs
cmp
push
out
bound
pop
fs
ror
dec
pop
add
or
call
push
xchg
add
and
push
pusha
addl
mov
cli
scas
xor
push
lock
scas
ret
adc
cmp
int
adc
and
mov
lcall
jg
push
push
mov
popa
and
inc
ret
jnp
pop
ljmp
xchg
popf
imul
into
mov
and
bound
cmc
cmpsl
lret
jno
leave
call
and
bound
push
or
fwait
popf
cmp
mov
sbb
outsb
lret
sbb
dec
cld
fbld
xor
js
aad
fldl
scas
xor
or
pop
out
or
xor
mov
mov
ds
xchg
out
sbb
shlb
xor
mov
fstpl
dec
loopne
and
iret
adc
adc
testl
mov
call
jecxz
mov
fs
push
pop
mov
jb
ss
mov
dec
bound
aam
xchg
jmp
repz
out
adc
sbb
hlt
int3
sub
sbbl
fisubrs
in
int
inc
lcall
push
xlat
ret
cltd
shrl
sahf
xchg
lcall
lcall
xchg
xor
int
pop
repz
scas
adc
in
ljmp
xor
lahf
pushf
scas
xlat
xchg
dec
pop
sub
pop
lds
jge
hlt
repz
and
iret
in
mov
into
bound
xchg
ljmp
xchg
pop
ja
cmp
nop
dec
jp
fwait
test
out
les
xchg
nop
addb
or
lock
or
inc
jo
mov
aaa
push
mov
roll
loope
or
test
xchg
xchg
movsl
or
ror
mov
popf
rol
das
push
lret
mov
mov
pop
repz
hlt
lds
je
add
dec
stos
rcll
jmp
mov
out
fsubrs
add
push
jecxz
adc
ja
xchg
out
dec
cmp
fiadds
xchg
cld
or
xchg
ja
test
inc
push
aam
jle
push
es
lcall
das
xchg
mov
mov
dec
xor
mov
and
nop
test
cld
jge
movsb
je
mov
subb
jns
stos
jb
inc
cmc
out
das
mov
fisttps
aas
mov
add
cmp
xor
in
popf
pushf
pop
in
fucom
dec
mov
mov
pusha
pushaw
stos
outsb
or
push
cmpsl
inc
sub
in
mov
inc
mov
jl
repz
jecxz
mov
jle
orl
push
flds
std
into
stos
xchg
repnz
fisubs
outsb
xchg
jl
in
iret
aas
cmp
cmp
mov
add
or
mov
pop
fldt
sbb
cltd
pop
clc
jne
aam
mov
jno
arpl
adc
jb
mov
sahf
push
push
lahf
cmp
scas
dec
in
xchg
ficomps
add
fsubrs
xchg
dec
and
add
daa
mov
jg
or
mov
xor
gs
push
outsl
lods
pop
data16
int3
dec
scas
mov
mov
push
ffree
cmp
jbe
mulb
sarb
clc
mov
in
pop
ss
inc
mov
xor
mov
push
xchg
movsb
xor
out
lds
inc
cmp
xchg
mov
adc
das
aad
sub
ret
push
fstpl
fidivl
and
stos
lds
shlb
dec
sub
mov
andb
pop
mov
dec
in
das
fdivs
cmp
dec
js
cs
or
std
clc
push
dec
add
and
sbb
aad
es
dec
xor
in
dec
mov
sub
mulb
mov
sub
ret
sti
or
test
ret
pop
xlat
dec
push
dec
lods
lret
jae
test
stc
rol
inc
jo
xor
lods
mov
dec
test
pop
or
mov
mov
stos
xor
les
insl
sbb
fwait
push
sahf
add
jns
stc
popf
sub
lea
fwait
xchg
add
adc
add
out
test
jecxz
push
dec
push
sbb
xchg
cmp
xchg
std
add
and
add
jb
incb
and
pop
fwait
lea
dec
cmp
xlat
or
mov
add
pop
sub
pop
outsl
cwtl
mov
scas
pop
ja
scas
mov
push
mulb
jp
mov
pop
and
js
cmp
cmpsb
jae
aas
dec
pop
xchg
dec
mov
rolb
ds
movsl
adc
mov
xlat
jnp
sti
loopne
out
push
xchg
mov
test
aad
lcall
in
lret
icebp
scas
ss
cwtl
aad
cld
outsl
lret
fimull
mov
xor
push
mov
out
in
xchg
cmc
int3
icebp
mov
stc
loop
jmp
push
mov
insb
cmp
xor
repz
mov
cmp
xchg
lahf
pop
mov
or
mov
sbb
or
xchg
clc
xor
mov
cld
xchg
fisttpll
das
bound
mov
dec
cs
push
cs
or
int3
test
aam
sti
in
cmp
lea
hlt
mov
jge
outsb
std
mov
fs
out
movsb
add
mov
add
mov
push
loop
ret
int3
adc
mov
cmp
adc
dec
jne
lea
cmp
xlat
xchg
push
pop
jg
mov
cmp
jg
test
mov
cmp
pop
ja
xchg
fs
rclb
lcall
pop
sub
sbb
push
dec
enter
xor
lods
or
lahf
pop
inc
nop
dec
std
ret
dec
and
jle
ljmp
rcll
pop
pop
stos
leave
xchg
lock
inc
cmpsb
dec
mov
fsubl
xchg
lret
or
xchg
mov
loop
negl
inc
lock
bound
aaa
dec
push
data16
int3
jmp
mov
mov
jp
inc
xchg
adc
push
movsb
and
jp
adc
scas
call
inc
pop
adc
frstor
stos
mov
dec
mov
lds
xor
xchg
and
inc
push
dec
faddl
es
adc
push
ljmpw
hlt
stc
cmp
lret
loope,pn
adc
or
nop
jge
shl
cmpsb
adc
jl
loopne
fs
cmpsl
push
mov
push
or
stc
mov
pop
or
dec
push
imull
stos
imul
mov
inc
js
inc
push
bound
ret
sarl
cmp
cmp
test
sub
mov
push
outsl
mov
adc
mov
mov
push
arpl
xor
xor
repnz
push
pop
lcall
outsl
sbb
psubd
sbbb
xor
mov
shl
lds
jp
sub
dec
in
mov
dec
dec
jecxz
test
adcl
loopne
push
sahf
adcb
push
jl
or
mov
and
jns
jns
jbe
fisubs
je
test
jg
xor
push
cmpsb
not
mov
xorb
rclb
jp
lret
fnstcw
daa
add
bound
rolb
sahf
test
fs
xor
and
fucomp
movsl
xorl
mov
leavew
shl
xchg
jl
dec
ljmp
xor
je
mov
add
sub
sub
sub
sar
mov
enter
repz
inc
les
cmpsb
pop
add
out
sbb
jmp
fwait
aas
push
mov
dec
pop
sbb
dec
in
enter
add
call
lcall
mov
dec
ja
fldcw
jmp
pop
xor
lods
and
fdivs
jecxz
call
xor
add
mov
or
push
in
das
repz
insb
dec
pop
movsl
loopne
movsl
mov
sub
mov
xor
sbbl
sbb
pop
hlt
inc
clc
fwait
cmp
xchg
fcoms
or
push
fs
ret
and
push
dec
fmull
dec
into
dec
fsubs
mov
inc
popa
push
rcrl
cltd
in
daa
jecxz
loop
jo
mov
pxor
pop
mov
stc
cwtl
mov
sbb
lret
gs
insl
jmp
call
mov
rcrl
push
jbe
mov
mov
das
push
pusha
xor
cwtl
movl
sahf
mov
inc
in
data16
cmc
aaa
jo
ja
xchg
cmp
xchg
add
scas
sbb
loope
xchg
mov
xor
mov
add
mov
dec
sbb
dec
dec
outsb
jns
sbb
mov
notw
add
push
int
jmp
imul
sub
hlt
ljmp
jbe
lret
dec
mov
xchg
mov
out
mov
lods
leave
push
fdivl
sbb
xorl
push
jl
inc
inc
mov
out
sbb
and
jl
dec
js
loop
mov
loop
lret
out
orb
ja
sub
std
repz
push
insb
fnsave
out
es
or
dec
dec
push
cmp
call
push
inc
in
sbb
jl
and
cmp
leave
and
sub
pop
shrb
stos
xlat
and
repz
sub
or
cmp
popa
aaa
dec
pop
inc
call
cmc
cmpsb
add
adc
aad
rolb
xchg
add
jns
out
push
or
shlb
jbe
das
lret
pop
push
bound
popa
adc
mov
in
mov
fwait
push
shlb
pushf
pop
pop
rcll
mov
fisubrl
push
aad
ljmp
dec
pop
or
jmp
cmpsl
xchg
add
shlb
clc
shl
or
adc
pop
cmp
imul
and
jne
loop
out
push
dec
outsb
inc
mov
or
adc
js
add
cmpsb
xor
xchg
sarl
out
ficoms
jnp
xchg
cltd
in
cmpsl
mov
push
fstl
fstpt
push
fists
mov
stos
dec
out
push
adc
test
ljmp
dec
or
roll
in
mov
add
lahf
xor
cmpsl
add
mov
loope
or
and
pop
sbbb
cmp
pop
jmp
aad
in
repz
cmp
mov
clc
fwait
push
add
stc
pop
pop
dec
out
js
scas
loopne
adc
xor
out
cmpsl
mov
gs
mov
adc
push
mov
push
lods
mov
daa
rclb
mov
mov
fsubl
push
bound
int
mov
sub
push
adc
cmpsl
xchg
and
stos
les
nop
fwait
stc
mov
pop
imul
or
sbb
xor
fnstcw
mov
dec
pop
push
das
xor
sbb
ljmp
insl
shrb
mov
adc
stos
mov
adc
pop
test
fmul
in
cmpsb
pop
fnsetpm(287
loope
test
popa
dec
imul
sbb
mov
sbb
das
nop
mov
cmc
lret
movsl
and
adc
lahf
test
push
cmp
mov
leave
lea
into
decl
cmpsl
inc
clc
sbb
enter
loop
lcall
ljmp
scas
and
lea
pop
jae
aaa
dec
lcall
popf
int3
or
jge
pusha
lret
add
jecxz
mov
push
cmpb
fdivs
jne
jno
jle
cmp
sub
test
xchg
in
mov
shlb
sub
data16
fisttps
mov
xchg
xor
and
imul
mov
mov
dec
push
sbb
or
loopne
xor
push
rcll
xchg
stos
dec
xor
inc
imul
cmpsb
add
out
mov
sarl
and
jle
ljmp
xor
aam
jne
pop
sbb
push
xor
inc
ret
popa
bound
cli
out
test
xor
inc
jg
pop
sub
cmpsl
inc
or
jo
sbb
repnz
push
push
enter
sub
jno
add
push
ficoms
jmp
lret
pop
loop
pmuludq
jmp
add
out
jecxz
sbb
test
mov
xor
mov
cmp
pusha
std
jae
pop
popf
out
push
mov
dec
imul
adc
loop
cs
xchg
jno
mov
mov
mov
popf
mov
stc
adc
jl
je
jl
iret
mov
int
in
and
fidivrs
movsl
pop
pop
sub
jle
pop
sub
icebp
insl
pop
or
mov
pushf
leave
sbb
mov
mov
mov
test
mov
pop
cli
scas
cmp
sub
in
stos
cwtl
insl
cmp
aad
inc
lods
lret
int3
xor
dec
rorl
addr16
fdivl
in
push
std
hlt
test
add
jg
repnz
in
aam
push
inc
cltd
mov
sbb
ja
cwtl
jecxz
push
ret
pop
loope
push
dec
daa
je
cmp
push
lods
dec
dec
add
pop
pop
cmp
cmpsb
rorl
pushf
lret
pop
add
cli
cmp
push
lret
pop
scas
xchg
subl
dec
and
dec
sbb
sbb
mov
cs
aaa
gs
cld
cld
push
push
add
lods
dec
mov
mov
pop
loope
and
jae
sti
jb
pop
in
scas
inc
mov
rcr
movsb
jae
xor
and
pushf
ja
mov
fldenv
pop
fs
mov
xchg
fisubl
sarl
repnz
leave
mov
xor
xchg
mov
ljmp
inc
test
cld
je
test
fcmovb
sahf
mov
repnz
sbbb
or
jns
ja,pn
mov
sub
call
aad
incl
pop
outsl
cmc
loop
add
popa
out
jae
pop
mov
xor
sti
xchg
cmp
dec
jle
lea
add
cmpsb
outsb
sbbb
mov
mov
daa
fstpt
int3
sbbb
jb
add
inc
enter
setnp
ret
movsl
cmp
pop
lret
lea
and
cmpsl
xor
ljmp
rol
add
mov
mov
test
mov
sar
int3
das
mov
mov
rorb
stc
in
sbb
es
lods
sub
dec
sub
in
notl
ret
bound
adcb
cmp
es
int
cmp
ret
cmp
movsl
ret
inc
cmp
daa
gs
enter
adc
call
inc
cmp
add
push
fistpll
or
mov
pop
push
out
inc
pop
ret
push
fdivrp
cs
sbb
pop
out
outsl
inc
stos
adc
lock
add
div
push
sub
adc
sahf
stc
shrb
loope
hlt
pusha
add
jmp
dec
stos
jae
gs
dec
andl
aaa
in
jbe
paddsb
push
push
and
jecxz
mov
scas
mov
push
idivl
adc
push
cwtl
sbb
mov
xchg
mov
adc
rolb
cmp
pop
test
sti
xor
pop
or
push
jae
shrl
hlt
shlb
je
pop
test
testl
call
lds
leave
xlat
mov
ret
cmp
sbb
mov
jmp
cmp
nop
movsb
ljmp
sbbb
stos
mov
pop
bound
loopne
jo
flds
add
scas
sub
sbb
push
outsl
xor
lods
aas
push
jle
shll
fmull
dec
dec
std
cmp
sbb
movsl
subl
xchg
adc
mov
pop
sub
cmpsl
sub
pop
movsb
jmp
sub
sub
popf
mov
dec
aaa
outsb
stos
shl
popa
mov
xor
lcall
fcmovu
add
mov
xor
jae
cs
out
pop
add
arpl
gs
sbb
mov
ret
inc
mov
cmp
shr
mov
sbb
jge
ret
push
add
mov
xchg
jle
mov
jo
arpl
repnz
add
inc
sub
and
jno
mov
inc
lods
sbb
stos
repz
xor
pop
outsb
adc
in
adc
xchg
test
cmpsb
stos
cs
shrl
pop
pop
stc
lret
movsl
mov
sub
sub
cmp
cmpsl
push
loopne
repnz
mov
pushf
adc
sbb
push
jl
pop
pop
add
ja
inc
repz
or
pop
jecxz
xchg
shr
cmp
mov
xor
dec
sti
xor
bound
cs
sbbl
inc
lahf
dec
mov
sarl
xlat
lods
cld
push
fisubs
cmp
fwait
or
ret
xorl
shrl
cmp
jge
jl
subl
jo
pop
mov
icebp
mov
jle
mov
lods
inc
iret
mov
mov
xor
sbb
xorb
cltd
jecxz
sbb
inc
lock
lahf
mov
pusha
push
jbe
ret
addr16
dec
jle
movsl
sbb
inc
pop
push
mov
mov
bound
adc
divl
push
push
and
imul
dec
mov
pushf
adc
or
mov
cmpsl
scas
mull
cwtl
imul
push
xchg
mov
push
in
pop
fsubrp
xor
and
sub
cmp
mov
mov
test
std
inc
and
out
fldl
lods
adc
sarb
aas
outsl
add
int
dec
mov
cmp
dec
js
subb
loop
add
mov
mov
arpl
loope
out
imul
jne
jne
arpl
int
into
inc
push
mov
pop
mov
sbb
pushf
and
ljmp
mov
lea
inc
push
mov
add
cmpl
mov
scas
ja
mov
scas
mov
push
out
dec
leave
mov
sub
mov
lods
jb
scas
pushl
inc
mov
sarb
inc
nop
sub
lcall
scas
js
or
test
mov
pushf
loopne
pop
mov
xor
ret
inc
sbb
push
nop
mov
data16
or
mov
jo
test
addr16
into
cmp
xlat
jecxz
repnz
clc
cmp
pop
pop
pop
push
jnp
mov
fsubrl
push
and
sub
push
arpl
lock
mov
cmpsl
or
add
or
stos
addr16
sbbl
add
sahf
push
and
xorl
stos
and
pop
pushl
xor
push
add
data16
out
and
jns
sbb
imul
ret
rolb
pop
inc
xchg
pop
pop
jnp
sbb
and
cmpsl
pop
imul
dec
mov
push
pusha
lods
shr
rcrb
cwtl
add
sar
fidivs
cld
pop
std
push
daa
sbb
jns
out
out
scas
sub
fnsave
mov
imul
rolb
adc
xchg
cmp
loope
les
or
inc
push
xchg
outsl
cmp
fidivrs
and
js
mov
cltd
mov
xor
notl
in
xor
std
and
ret
loop
jno
lcall
fcomps
or
and
sbb
das
push
pop
cmp
scas
xchg
dec
mov
and
mov
movsl
jge
lret
dec
insb
or
mov
xor
jl
mov
xor
or
lods
popa
jne
stos
jne
add
in
fimuls
add
inc
mov
pop
dec
loope
xor
call
mov
pop
lahf
les
sbb
rcr
xor
out
cmp
cmp
add
adc
je
cmp
ljmp
nop
xchg
pop
fwait
icebp
ja
loop
leave
sbb
mov
mov
push
fwait
xor
inc
pop
pop
sahf
std
sbb
in
mov
xor
jno
jg
mov
add
cmc
loope
jnp
add
adc
mov
mov
fnstenv
cmp
aam
popf
pusha
push
loope
inc
xor
dec
pop
mov
mov
xchg
test
or
cmp
jle
adc
mov
lret
jno
add
enter
pop
fwait
icebp
mov
xor
sub
fisubl
mov
insl
push
insl
iret
insb
sahf
adc
and
leave
mov
dec
sti
add
jbe
cli
jns
leave
pop
sub
mov
pushl
and
adc
mov
push
pop
xlat
lcall
incl
popa
leave
hlt
icebp
shlb
out
stc
std
call
repz
fsubrs
add
out
lcall
xor
ret
aad
cmp
push
cld
sub
xchg
mov
mov
or
shrl
in
sbb
testl
aaa
inc
lods
or
push
stc
imul
adc
add
popf
mov
int
insb
cmp
rol
push
enter
fcom
and
gs
xchg
and
test
push
rcrl
outsb
es
dec
mov
xchg
cmp
mov
adc
roll
gs
cmp
jne
mov
jge
insl
add
outsb
and
jo
test
sti
in
lcall
push
push
ret
cli
fcoml
rorl
out
mov
adc
add
adc
cmp
add
mov
pushf
call
sub
sub
sub
push
fidivs
sub
push
rcrb
pop
push
orl
sbb
jae
aad
sar
push
lret
aam
mov
cmpsb
jo,pt
sub
sbb
decl
rorb
and
push
dec
lods
inc
mov
jge
xchg
in
add
mov
jno
xchg
jl
xchg
adc
and
dec
jg
adc
push
mov
cmpl
out
mov
inc
pop
repnz
jl
movsb
dec
sub
fsts
pop
lock
xor
lds
subl
mov
fbstp
loope
sbb
fs
aad
int3
mov
sbb
jecxz
and
addr16
sarl
cwtl
push
cmp
sub
jns
push
inc
cmpb
mov
sub
std
clc
fsub
pushf
sub
into
insl
std
sbbl
push
gs
iret
sar
sub
add
sbb
fdivl
scas
adc
sub
es
and
insl
inc
push
repz
push
test
mov
pop
call
mov
mov
nop
sti
mov
enter
outsl
addb
sub
in
sub
sti
xor
mov
jb
fsts
fists
imul
dec
add
xchg
or
and
sub
cmp
xor
ret
cli
sub
mov
lret
cmp
aam
jg
xchg
int
pop
push
sbb
dec
mov
and
cld
out
inc
dec
popa
pop
fists
lods
sbb
dec
add
fwait
cwtl
movzwl
jge
and
or
adc
icebp
or
sub
mov
clc
xchg
mov
lock
shlb
lret
sarb
or
adc
push
daa
xlat
adc
insb
jns
xor
inc
in
sub
push
mov
sbb
sub
fsubrs
inc
adc
rorb
sti
outsl
pop
and
pop
int3
iret
xor
outsb
sbb
notb
xor
pop
ja
cmp
fwait
bound
insb
aam
jle
fwait
cltd
es
clc
out
mov
inc
adc
test
sbbl
mov
mov
xchg
loopne
loop
pushf
ret
xor
in
scas
xchg
mov
add
je
push
pop
in
pop
stos
fisubrs
mov
loopne
cmc
jmp
out
inc
jl
push
jb
and
outsl
scas
xchg
xchg
in
dec
xchg
inc
sub
and
int
addr16
xchg
leave
xchg
cld
push
sbb
xor
mov
xlat
sti
sbb
arpl
xchg
aas
ror
lods
and
lcall
into
test
out
iret
jp
sub
cmp
or
sbb
outsl
imul
negl
fsubs
test
lcall
xchg
inc
or
js
test
rclb
sbb
test
outsb
addr16
xchg
mov
push
call
std
lret
mov
into
mov
add
ss
imul
daa
iret
jno
or
xchg
adc
cmp
imul
or
jp
dec
add
stos
insl
xchg
pop
sub
movsb
cmp
inc
addr16
cmp
jg
mov
xor
cmpsb
daa
mov
dec
add
in
or
pop
sarb
sub
adcb
xchg
jbe
fsts
pop
popf
push
sarb
mov
clc
or
lea
loopne
pop
and
and
mov
aas
jp
pop
pop
lahf
rclb
inc
movsb
scas
into
ja
xchg
aam
sbb
xor
pop
or
xlat
mov
xor
jp
clc
push
insl
aam
leave
mov
stos
push
arpl
js
cvtps2pi
xchg
push
dec
loope
int
dec
inc
cmc
xlat
and
mov
adc
mov
nop
enter
lock
inc
xchg
cmp
jbe
xchg
inc
int
or
ficompl
je
mov
cmp
jb
fidivl
scas
jo
insl
xor
xor
inc
sarl
sub
cmp
jg
sbb
add
nop
aas
in
sbb
neg
jmp
push
cmc
fildll
push
or
inc
jns
xchg
dec
ss
imul
fbstp
into
cmpsb
js
or
dec
jp
pusha
stc
xchg
scas
fbld
xchg
add
sub
and
cli
hlt
cltd
outsl
jno
sbb
in
jbe
clc
je
push
fadd
mov
aas
inc
aam
lods
sub
data16
push
jle
lahf
jb
mov
lods
jne
push
test
inc
movsl
xchg
cmp
sub
pop
sarl
cmp
insl
pop
jns
mov
jno
sub
pop
and
sbb
add
imul
xlat
pop
or
nop
add
dec
cli
push
in
repz
ret
adc
out
xor
lods
lret
sub
mov
clc
xorl
repz
mov
or
jb
stos
outsb
imul
ja
pop
mov
pushw
notb
lcall
clc
jg
lea
xchg
aam
sbb
fsubl
jecxz
adc
pop
test
pop
lea
rcl
repz
std
es
stos
pop
imul
roll
mov
sbb
xchg
js
pop
mov
test
sbb
push
popf
xor
sub
mov
xor
xchg
iret
xchg
shr
ds
jmp
mov
mov
lret
xor
mov
ja
inc
sub
xchg
xchg
jl
ret
pop
xchg
sbbl
int3
bound
rcrb
ret
icebp
loopne
mov
pop
mov
mov
mov
sub
test
jo
iret
scas
mov
lret
or
mov
icebp
lret
insb
mov
mov
loope
push
jnp
les
stc
xor
loop
repz
pop
insb
fwait
mov
adc
ret
adc
lret
mov
imul
inc
fsubl
jp
ljmp
arpl
rcll
xor
mov
popa
push
sti
mov
jecxz
test
adc
and
gs
out
push
lret
mov
xchg
sbb
xor
addr16
push
push
cmpsb
mov
test
imul
scas
inc
push
dec
mov
or
out
dec
lods
or
lods
out
xchg
xor
clc
mov
mov
add
cwtl
cld
cmp
fs
mov
sub
mov
ficoml
mov
and
and
mov
or
test
aad
or
lret
inc
pop
xor
jbe
fmull
mov
mov
fucomi
sbb
lea
loope
rcrl
pop
mov
adc
and
out
sub
push
mov
jne
enter
testl
cmp
popa
icebp
mov
add
push
jmp
lock
sbb
fs
and
sbb
lret
fwait
sbb
dec
or
and
mov
nop
fnsave
pop
mov
mov
pop
leave
shrb
jge
call
lret
pop
int
pop
call
ret
mov
inc
mov
clc
and
mov
repz
cmp
imul
sarl
sbb
into
es
decl
mov
mov
ficoms
pop
adc
inc
ja
repz
scas
shl
imul
pop
lods
inc
jb
ror
or
aaa
aam
fwait
cltd
xchg
lret
xchg
xchg
pop
sub
inc
test
pop
inc
and
and
push
les
lahf
or
cmc
into
out
add
mov
shrl
jno
lds
cmp
adc
dec
add
push
push
jo
push
aas
stos
mov
popa
popf
mov
outsl
cltd
in
adc
test
mov
mov
dec
addr16
adc
ret
repz
scas
add
xor
icebp
mov
jge
cld
sub
sbb
aad
and
mov
pop
fdivrs
out
ds
loop
sbb
mov
or
shll
xor
xlat
aam
gs
lods
movsb
and
jns
mov
jbe
add
sahf
fmuls
mov
sbb
stos
jmp
into
and
push
loopne
add
or
div
cmp
xor
ret
jmp
cmp
xor
push
leave
std
iret
movsb
aaa
out
inc
adc
les
imul
aam
testl
into
push
dec
sbb
mov
inc
out
test
pop
xchg
adc
cltd
mov
fwait
iret
repnz
test
push
inc
es
rolb
lea
in
aaa
add
add
sub
and
mov
in
xchg
and
cmp
cmp
dec
cs
loopne
adc
jmp
icebp
lods
movsb
adc
xor
lret
jecxz
jbe
xchg
xchg
rcll
push
fucom
push
or
cwtl
repz
jle
adc
sub
fdivrl
push
mov
das
sbb
sbb
into
ret
sbb
hlt
mov
ljmp
test
pop
xlat
cmp
mov
or
mov
mov
into
sbb
in
or
xchg
jno
sbb
jb
sub
test
jmp
comiss
es
inc
subl
push
sub
mov
inc
dec
xor
mov
push
cmc
xchg
mov
and
lods
test
pop
mov
mov
jbe
sub
adc
andl
push
fld
lahf
push
pop
sbb
movsl
sub
addb
and
in
test
sbb
in
lods
adc
jmp
xlat
scas
lock
call
lret
mov
lds
ret
pop
pop
mov
jecxz
mov
fs
sbb
mov
mov
inc
in
or
fwait
and
xor
cmpsl
lea
inc
repz
cmp
jp
adc
add
arpl
shlb
push
and
ljmp
push
sbb
mov
mov
fldt
repnz
push
out
adc
inc
dec
and
ret
loop
ror
daa
cmc
pop
mov
iret
ss
popf
or
xchg
xchg
cmpsl
cmpsb
push
inc
repnz
in
lods
push
filds
mov
cmp
mov
out
fs
sub
xchg
call
mov
enter
lret
xor
mov
sub
mov
fisubl
cli
int
jmp
scas
push
mov
xlat
testb
incl
cmp
lret
imul
pop
xor
fisttpll
decl
mov
jae
dec
mov
nop
xor
imul
lcall
xchg
pop
and
dec
jo
jae
add
fdivs
icebp
mov
test
mov
mov
pop
iret
nop
mov
data16
mov
push
sbb
shlb
lcall
pop
fisubrl
rolb
je
mov
mov
xor
xchg
test
out
push
fidivs
arpl
push
mov
inc
jecxz
ljmp
daa
sahf
mov
or
dec
frstor
popf
les
push
inc
dec
bound
inc
lock
xorb
pop
cmpsl
mov
mov
pop
in
mov
loop
mov
mov
imul
xchg
adc
jae
mov
jae
xchg
decb
outsb
gs
xchg
stos
xor
stos
mov
inc
xor
gs
ljmp
cli
jo
mov
xchg
clc
or
sbb
jns
xor
jbe
ret
call
enter
aas
negb
mov
fldt
call
insl
fcomip
push
dec
subl
insl
jge
adc
xchg
in
push
xor
inc
push
imul
aas
sbb
loope
mov
jae
sub
les
ljmp
xchg
aad
subl
add
popa
xor
push
dec
push
sbb
adcl
jg
push
addb
mov
mov
mov
or
test
imul
rolb
and
jae
cld
xchg
fwait
rcrb
xor
xchg
cmpsl
cltd
test
push
shl
sub
jb
push
mov
aam
lret
pop
cld
fnstenv
iret
movsb
aad
flds
push
shrl
sub
mov
sahf
xchg
int
dec
mov
stos
ret
xchg
mov
push
leave
jbe
lods
or
xchg
adc
out
aaa
adc
mov
inc
aad
pop
mov
scas
cmp
icebp
es
sahf
pop
rolb
mov
sbb
idivl
dec
ss
in
adc
das
inc
cli
mov
std
xchg
gs
xor
nop
pop
jb
loope
push
xor
shl
pop
das
inc
xchg
sbb
lods
sets
mov
js
cs
jnp
pop
sbb
mov
pop
sbb
cmp
mov
mov
out
fsubrl
aam
leave
mov
adc
scas
std
data16
jecxz
xor
scas
sub
mov
mov
cltd
add
xchg
cmp
sub
nop
out
and
icebp
cmp
pop
xor
mov
insb
data16
push
mov
jo
and
test
iret
jmp
lret
enter
sahf
lret
xor
mov
int3
cmc
sbb
daa
adc
jnp
xchg
mov
into
std
nop
lret
jecxz
std
orb
xor
fstps
inc
stos
push
shl
fptan
es
push
and
mov
pop
enter
jge
aas
and
popf
std
sbb
test
sbb
add
sub
push
enter
loop
insb
inc
imul
loop
bound
pop
imul
pushf
mov
pop
int
jecxz
or
jl
mov
inc
int
iret
mov
leave
adc
movsb
cli
loope
push
sub
imul
sub
mov
pop
aam
cmpsb
or
mov
xchg
sbb
pop
and
push
js
sbb
bnd
fmul
mov
mov
leave
push
mov
test
out
xor
dec
mov
push
cmpl
xchg
and
cmp
push
fildll
mov
lods
fisubl
pusha
add
rorb
xchg
jp
lretw
mov
pop
cmp
mov
out
and
outsl
fwait
sbb
pop
iret
mov
movsl
cmp
stos
fs
ja
push
xchg
adc
ds
jns
lock
subb
mov
sbbl
sbb
lret
lock
mov
dec
or
pop
icebp
ror
xchg
not
pop
pop
inc
subl
negl
dec
xchg
into
mov
aas
stos
inc
bnd
xlat
in
lcall
cwtl
test
inc
jno
mov
pop
jle
out
jl
std
adc
push
push
mov
out
lods
dec
push
movsb
push
cmpsl
and
jo
adc
sarb
pop
jne
fsts
xchg
pop
fwait
lcall
xor
fidivrl
gs
pop
popa
andb
icebp
pop
jle
cmp
mov
ja
subb
sbb
lods
stos
sti
add
rolb
nop
pop
xlat
xchg
and
ret
stos
loop
mov
jno
and
jp
faddp
vpshufhw
in
inc
subb
mov
pop
mov
push
pusha
test
push
jno
inc
ljmp
mov
inc
pop
lret
push
inc
and
sbb
ss
inc
or
aaa
fs
ja
test
xchg
outsb
addr16
cmpsl
test
mov
mov
sub
int3
jae
mov
test
mov
ljmp
outsb
in
popa
std
jae
mov
lcall
gs
xor
inc
scas
jo
pop
test
out
jle
aaa
jmp
jg
imul
xchg
arpl
xchg
into
ljmp
out
pushf
loope
jo
pop
lods
cmp
mov
lods
test
vpextrw
add
arpl
push
movsl
cli
rcrl
xchg
ficoms
fdivs
test
xlat
dec
rcrb
call
fisubrl
lds
stos
les
rcrl
push
mov
mov
cmc
push
sbb
push
pop
lea
sbb
jbe
xor
scas
outsb
adc
out
mov
push
pop
mov
mov
adc
or
out
popa
cld
push
inc
mov
mov
dec
pandn
xchg
jno
in
lret
adc
fwait
addr16
mov
adc
repz
pusha
xchg
dec
add
lret
ror
adc
pusha
mov
std
icebp
das
shlb
std
rclb
loopne
jbe
cmp
scas
jns
pop
push
movsb
insb
out
popf
stos
pusha
outsb
xor
out
inc
and
xchg
sub
jns
enter
xchg
data16
lahf
loope
in
fmull
aad
push
enter
xor
in
push
iret
adc
mov
sub
or
add
ret
mov
cs
xor
or
ret
and
mov
push
xlat
push
add
adc
pop
pusha
int
jne
xchg
adc
loope
cmp
xor
xchg
inc
and
push
cwtl
ds
dec
iret
notl
jns
arpl
mov
fnstsw
dec
rorl
mov
ficoms
enter
jl
or
leave
lahf
fmuls
dec
push
jecxz
or
add
or
sbb
and
daa
pop
jmp
or
adc
rol
in
push
xlat
sarb
mov
mov
sbb
mov
cmpsb
or
and
fsubrs
test
push
adc
fsubrl
cmpsl
and
jo
stc
mov
out
or
xor
cmp
cwtl
pop
adc
ret
lods
retw
subb
cmp
in
loope
or
sarb
ret
mov
nop
repnz
dec
lock
push
sub
cmc
inc
push
jae
jne
mov
xchg
jmp
movsb
mov
fstl
cmpsl
shrl
fwait
xchg
std
xchg
js
out
dec
cmp
test
pusha
lock
mov
in
or
push
pusha
ret
or
push
lock
push
or
mov
and
sub
addl
xchg
scas
aaa
and
dec
stc
inc
mov
imul
scas
insb
or
mov
jb
cwtl
dec
popa
jnp
and
xlat
push
jg
xor
sbb
cmp
sub
mov
addr16
scas
in
mov
std
enter
sbb
sbb
push
mov
jne
js
lods
mov
pop
pop
or
fstpt
out
xchg
jl
imul
pop
movsb
in
xchg
int3
jnp
leave
pushf
adc
repnz
pop
dec
xchg
lcall
jae
test
lods
inc
mov
fisubs
cmp
ret
loopne
std
rcll
shlb
mov
mov
add
add
lods
xchg
jo
dec
cltd
cmpsl
jl
cmp
mov
push
cld
out
jb
das
push
jo
inc
xor
pop
mov
mov
mov
call
and
mov
clc
or
ficoml
lret
xor
stos
jmp
sbb
fistpll
mov
aas
fisttpl
lea
movsb
aad
sub
aad
subl
cmp
ret
movsb
stos
stos
pop
fidivs
cmp
cmp
jne
psrad
data16
and
repnz
scas
call
add
xor
push
repnz
jo
hlt
sub
xor
lcall
std
push
insl
add
rcr
lods
push
xor
push
in
adc
add
imul
leave
scas
and
jl
into
hlt
push
dec
iret
insb
push
test
xor
call
inc
push
imull
push
adc
jecxz
pusha
sti
mov
fildl
sti
cmpsb
dec
aad
stos
call
mov
repz
addr16
add
lcall
ja
ss
test
fsubs
cwtl
jmp
lea
out
push
mov
dec
ret
sbb
sbb
cli
mov
xor
mov
out
les
ja
xchg
stos
dec
jg
data16
cld
add
pop
stos
repz
add
fucomip
lahf
adc
andl
cltd
stos
bound
in
mov
jl
jb
add
adc
idivl
rorl
and
fdiv
push
loopne
jle
jbe
jo
mov
jnp
inc
jae
mov
mov
out
in
xor
mov
out
data16
in
cs
inc
jg
adc
xor
add
push
loopne
mov
sarl
push
push
push
scas
add
popf
xorl
pushf
pop
cmpsb
mov
test
mov
clc
ss
inc
mov
adc
mov
push
mov
lds
add
iret
outsl
xchg
mov
and
add
or
mov
repz
sbb
orb
jecxz
mov
dec
test
and
ljmp
inc
xorb
push
xchg
femms
in
push
sbb
dec
in
inc
or
dec
pop
daa
mov
pushf
mov
pop
xchg
imul
mov
iret
push
cmp
xor
xlat
frstor
mov
addr16
cltd
std
xorl
mov
mov
fwait
aam
movsb
icebp
pop
ljmp
sub
pop
lock
insb
lock
add
add
cmpsb
stc
movsb
cmp
out
cwtl
ret
jno
mov
jne
or
jno
push
insl
std
xchg
jl
inc
outsl
mov
push
inc
out
fists
fs
daa
insb
lods
fcmovbe
mov
and
in
mov
psadbw
push
mov
xchg
aas
loopne
jp
inc
jne
xor
mov
sbb
out
pop
ja
and
cmc
shlb
jl
adc
sahf
push
ret
fcoml
iret
fistl
outsl
int3
movsb
fadds
pop
pop
jb
orl
enter
je
and
or
or
mov
shlb
and
pop
cld
add
repnz
and
mov
aam
jg
loope
mov
pop
jnp
imul
xchg
leave
popf
lods
cmp
add
sbb
jl
and
mov
mov
out
stos
pop
xor
popf
bnd
ret
mov
clc
adc
sub
lods
push
cmp
std
lret
sbb
pop
add
mov
cmp
and
jle
dec
inc
push
inc
xor
mov
dec
mov
in
jae
imul
inc
sar
jl
xchg
lods
xor
in
leave
mov
popf
dec
clc
pop
imul
xor
cld
inc
dec
jbe
or
and
dec
sbb
mov
test
mov
xor
and
push
arpl
notl
jb
adc
jecxz
enter
js
push
xchg
mov
mov
ds
lea
or
xchg
mov
xor
in
fs
stos
fwait
insl
icebp
testl
mov
jno
pop
jmp
lods
mov
ja
imul
and
jg
push
or
mov
sti
outsb
adc
xchg
add
pop
pop
pop
insl
jns
sub
enter
loop
lds
jns
cld
or
test
pop
mov
mov
jg
adc
scas
mov
add
cmpb
inc
icebp
lods
or
cmp
loope
mov
xchg
sub
fidivrs
jb
jbe
mov
outsb
lret
or
test
je
mov
mov
lds
cs
outsl
and
push
pop
mov
fimull
fistpl
fwait
sbbl
xchg
jg
sbb
shrb
jp
je
mov
sbb
shrb
mov
add
gs
nop
scas
xor
xorl
les
lods
xchg
fisttpl
cli
jmp
in
lret
fsubr
adc
sbb
add
insl
xchg
scas
mov
movsb
cmc
sbb
iret
sbb
jnp
pop
cmp
push
les
pop
pop
xorl
and
cmpsl
mov
lock
dec
gs
loope
jecxz
add
mov
add
addb
dec
xor
out
jg
icebp
inc
xor
notb
bound
xor
fmull
or
push
sub
sub
cltd
mov
movsl
enter
aam
arpl
ja
inc
lea
xor
enter
aad
mov
xor
jno
mov
or
adc
imul
icebp
nop
aad
xchg
out
fisubl
inc
adc
xor
pushf
cld
ds
pop
fwait
lea
adcl
push
mov
lods
cmp
imul
daa
push
movsb
stos
sbb
mov
cli
jmp
pushf
push
jae
mov
jbe
mov
xor
int3
pop
test
cmp
push
adc
add
push
mov
addl
jp
shlb
adc
jg
jae
xchg
mov
xor
movsl
data16
cmp
xchg
dec
jb
inc
setbe
jle
ds
stos
inc
cli
imul
pop
in
inc
cmpsb
adc
mov
dec
cmp
mov
xlat
dec
add
push
icebp
fwait
mov
scas
fsubr
pop
popa
call
mov
loopne
aas
xchg
mov
inc
out
jne
lcall
or
jb
mov
push
inc
nop
stc
rolb
xchg
in
jmp
xchg
sti
inc
sub
out
into
mov
sbb
jle
jae
scas
into
pop
inc
fwait
inc
cwtl
pop
pop
pop
in
pop
sbb
repz
imul
lock
ucomiss
adc
mov
xor
sbb
pop
in
into
mov
sub
jne
inc
dec
add
aam
pop
imul
add
sar
mov
sub
adc
aas
loope
adc
es
sub
cs
into
fisttps
xchg
sub
mov
xor
xchg
mov
in
xlat
enter
mov
dec
bound
pop
and
inc
cmp
lods
icebp
push
add
fwait
xor
fldenv
sbb
scas
mov
mov
or
icebp
sbb
xchg
int
imul
mov
nop
jb
sub
je
cmpsl
jmp
fbld
loop
jp
jnp
dec
mov
xchg
mov
or
xchg
orb
pop
cmp
out
inc
dec
add
out
shlb
sti
ret
lret
jmp
lods
jmp
dec
sub
xlat
and
in
mov
movl
add
aas
push
cmpsb
test
cmp
jae
mov
mov
pop
fldt
push
jmp
xorl
push
fldcw
cmp
mov
subb
and
cmp
sbb
or
rcll
xchg
bound
inc
xchg
cli
pop
lds
lcall
popa
mov
mov
pop
jne
dec
xchg
jns
mov
jmp
push
pop
pusha
je
mov
push
insb
test
xchg
aas
outsb
hlt
popl
and
push
cmp
or
xlat
or
dec
ret
dec
adc
dec
jno
sti
add
jmp
mov
add
mov
scas
shll
add
shl
cli
and
mov
je
sbb
mov
xchg
fsts
dec
push
inc
push
add
sub
pop
and
and
insl
mov
mov
push
ljmp
and
aad
inc
sti
dec
sahf
inc
es
sub
repnz
bound
cmpl
sub
je
pushf
sahf
mov
push
xchg
les
xchg
mov
cltd
loopne
iret
adc
jns
iret
dec
fsub
mov
in
mov
push
push
in
sarl
movsb
movb
adc
xor
outsl
ljmp
xchg
jbe
fwait
lret
testl
xchg
stos
or
xchg
adc
dec
push
dec
cld
arpl
pop
sti
sub
adc
push
lcall
jecxz
repnz
ret
cmp
gs
xor
out
adc
mov
int3
sbb
pushf
sub
pushf
mov
test
outsl
mov
outsl
sbb
imul
fldl
mov
or
mov
es
and
rclb
jecxz
stc
xchg
dec
js
sbb
mov
popl
jmp
clc
sbbl
out
dec
push
ja
sub
test
sahf
int3
inc
jb
push
mov
dec
loopne
cmp
jne
add
arpl
hlt
imul
fisttpl
imul
mov
adcb
cmp
mov
xchg
dec
mov
adc
inc
add
cli
inc
jle
jp
sub
xchg
sarl
fmull
inc
pop
jno
xor
sarl
sbb
jge
inc
loop
mov
test
add
cmc
scas
sbb
jbe
sub
xor
dec
shlb
in
mov
popa
testb
test
dec
sub
jae
mov
sar
dec
test
outsl
dec
push
jecxz
mov
sbb
arpl
mov
pop
aam
pop
icebp
mov
test
je
sub
xchg
lret
mov
push
ljmp
bound
scas
pushf
jnp
inc
push
xchg
outsl
inc
int
rcl
inc
in
ret
add
mov
xlat
sub
stos
mov
testb
pop
add
scas
xor
jmp
mov
mov
mov
fadd
andl
ret
pop
movsl
cwtl
test
push
cmpb
in
inc
pop
int
mov
je
insl
and
jl
or
daa
sub
aam
mov
pop
sub
dec
imul
in
in
cmc
sub
sarl
cmp
adc
inc
arpl
or
mov
adc
xor
lahf
inc
add
leave
outsl
pop
dec
nop
dec
jbe
out
stc
inc
in
sub
fld
cmp
lret
ds
enter
cmpsb
xlat
ljmp
negl
push
data16
sar
jge
ret
fs
inc
cs
or
sbb
sbb
push
out
sbb
adc
pusha
fcmove
es
cmpb
adc
dec
cmp
aas
pop
gs
push
adc
and
enter
inc
or
imul
stos
clc
mov
lahf
pop
and
xlat
cld
adc
sub
mov
rcrl
scas
icebp
insb
lock
icebp
dec
aas
loope
jecxz
outsl
mov
fadd
fnstcw
or
stos
sub
out
fildl
test
add
aam
add
and
pushf
jno
add
out
iret
inc
hlt
fisubs
incl
push
pop
addr16
fdivrl
or
out
push
sub
xchg
mov
sub
lret
xchg
cmc
mov
daa
and
xchg
stos
sub
and
cmp
cli
pop
ljmp
popf
sbb
test
dec
lods
cmp
xor
adc
xchg
lock
mov
xor
mov
bound
xor
mov
dec
pop
lods
bound
sub
jns
cmc
sbb
mov
mov
dec
jb
inc
and
ds
mov
imul
fldcw
push
in
mov
das
sub
out
and
dec
cmpsb
add
sub
adc
pop
ret
rol
mov
jge
in
push
dec
fiadds
mov
inc
jp
ja
daa
push
cltd
xor
fidivrl
mov
push
dec
cmp
les
mov
shl
push
jns
test
in
dec
push
add
das
xchg
mov
mov
and
inc
xchg
repnz
mov
cld
pop
sub
imul
out
in
inc
jg
pop
bound
fisttpll
mov
fdivr
in
pop
mov
cmp
adc
mov
mov
and
int
fcoms
add
rolb
aad
inc
inc
lock
ror
sub
pop
fucomp
mov
mov
mov
dec
call
add
rcl
dec
sbb
iret
hlt
cmp
dec
divl
fstpt
jnp
es
add
inc
outsl
mov
xlat
jns
pop
mul
xchg
imul
lcall
inc
xor
movsb
cltd
insl
and
movsl
xchg
rclb
sbb
lods
jge
ret
mov
loope
dec
push
push
lods
dec
cld
inc
repz
outsb
mov
scas
aas
sub
clc
or
xor
insb
cwtl
int
jae
es
insb
jle
inc
mov
repnz
icebp
mov
adc
loop
adc
mov
sub
sub
pop
dec
dec
mov
xor
cltd
fiaddl
dec
bound
ss
les
dec
in
jno
lea
lea
jns
popf
adc
iret
add
sbb
testl
push
clc
mov
leave
xchg
mov
test
not
jg
pop
lds
pop
lock
or
cli
mov
push
xor
xorl
jae
xchg
dec
pop
xor
cs
loope
pop
jno
dec
jle
push
jge
inc
out
test
iret
ret
pop
xor
push
sbb
les
and
sub
sub
cs
int
mov
scas
sahf
xchg
cmpsl
add
lea
outsl
push
in
or
mov
in
jg
inc
dec
ror
sbb
out
shl
cwtl
sbb
lea
sti
addr16
mov
je
jmp
adc
pop
push
jo
mov
mov
pop
insb
push
add
mov
les
leave
add
negb
jbe
ds
or
cmpsl
pop
mov
jbe
pop
xchg
in
hlt
push
mov
and
jae
dec
iret
in
out
adc
sub
scas
mov
push
fsubl
or
enter
pop
jae
xchg
scas
push
scas
adc
sbb
push
jg
jns
out
mov
jecxz
mov
orl
cmpsb
nop
sbb
inc
idivl
popf
xor
pop
xchg
std
fwait
dec
push
inc
sub
xor
push
or
or
pop
and
scas
mov
push
jp
aaa
jae
inc
mov
fsubs
in
iret
sti
loopne
enter
mov
fisttpll
movsb
dec
out
enter
xor
xchg
pusha
mov
fwait
mov
in
fidivs
or
lock
push
ret
or
jg
add
fildl
fsts
fwait
stos
outsb
mov
xor
ss
aam
cmpsl
pop
das
pop
inc
sbb
mov
sbb
das
mov
mov
scas
addr16
int
xor
add
call
add
push
adc
out
lock
push
aaa
pop
push
mov
push
clc
inc
test
fisttpl
sub
sbb
xchg
xchg
lods
mov
adc
dec
stos
movsb
or
mov
sahf
sbb
sbb
out
jno
cs
xor
xchg
mov
dec
add
inc
clc
push
outsb
mov
push
ret
and
test
cs
addr16
fnstenv
outsb
jae
hlt
movsl
cmp
dec
mov
orl
xor
mov
push
enter
xor
sbb
test
iret
test
out
sub
pusha
jge
mov
mov
fdivrl
pusha
ret
or
push
out
inc
mov
inc
rorb
push
xchg
adc
adc
xchg
es
and
imull
mov
push
mov
sti
push
mov
int3
xor
std
test
pusha
cld
arpl
cmpsb
sahf
xor
nop
dec
push
pop
cwtl
xchg
cmpb
pop
mov
shl
pop
and
add
into
in
push
jnp
sbb
dec
in
cli
mov
scas
out
jo
outsb
ret
dec
inc
push
mov
lret
lods
and
mov
push
inc
insb
outsl
daa
clc
lret
jg
rorl
and
sub
test
pop
cmpsl
out
cmp
xor
pop
inc
xchg
lret
stos
cmpsb
mov
fsts
in
andb
pop
dec
sbb
mov
arpl
das
andl
sbb
call
lret
lea
xor
push
mov
push
insl
inc
enter
mov
xchg
cmpsb
cs
push
inc
jmp
and
rcrl
dec
sbb
mov
jbe
adc
in
mov
sub
aas
cmc
mov
sahf
in
addr16
arpl
loope
jae
notl
jg
std
aas
stc
add
in
push
aad
xor
xchg
test
ret
iret
leave
daa
add
push
sti
enter
sub
gs
popa
ret
fisttps
pop
dec
cmp
jle
mov
xor
leave
add
jmp
shll
jl
mov
out
pop
adc
lds
out
test
mov
sub
fdivrp
mov
lahf
jne
and
js
xchg
scas
cwtl
ljmp
or
xchg
xchg
int
and
cwtl
xchg
std
or
adc
or
adc
adc
push
in
inc
lret
hlt
jb
mov
das
rcrl
inc
pop
xchg
lcall
data16
mov
subb
jne
cmpsl
data16
fs
cmp
adc
push
in
sarb
pop
lds
push
sub
and
xchg
call
adc
push
test
jne
pop
ss
xor
adc
push
xchg
int
sub
add
cmc
je
pop
adc
lcall
dec
xor
pusha
mov
inc
jae
test
mov
or
jge
xor
pop
stos
mov
xor
fcomps
jmp
push
nop
lods
xchg
jl
lods
or
loop
in
negl
pop
mov
sub
xor
mov
xchg
xchg
iret
mov
push
push
cmp
or
xchg
movsl
cwtl
mov
andb
ficoms
out
mov
shlb
imul
jmp
xchg
pop
es
int3
mov
jl
mov
movsl
sbb
pop
mov
pop
stos
xchg
lret
mov
ss
dec
push
nop
inc
mov
outsb
test
cmpsb
adc
in
cld
dec
dec
or
jg
fildll
sub
push
outsl
xchg
nop
dec
popa
xor
imul
test
enter
dec
and
lcall
push
fsts
addl
xor
rcr
adc
sbb
call
push
push
jecxz
stos
jo
lret
push
cld
jbe
rcrl
cwtl
fcoms
xor
lea
and
and
lahf
cmp
inc
pop
cmpsl
les
push
sub
add
sti
xor
mov
xchg
inc
jmp
popl
fucomp
adc
mov
shr
xchg
gs
fwait
mov
push
jecxz
movsl
push
xor
mov
cmp
cs
mov
lcall
movsw
jae
mov
jg
add
sti
leave
jnp
push
movl
jp
data16
negl
push
mov
push
test
gs
leave
xchg
pop
inc
stc
in
scas
lock
dec
xor
jecxz
push
std
add
xchg
test
popa
adc
fnsave
int
inc
ret
push
dec
push
into
xchg
aad
inc
mov
jnp
cmpsb
xchg
clc
pop
pushf
mov
cmpsb
repz
lahf
dec
aad
dec
mov
hlt
cmp
mov
mov
out
dec
ficomps
xchg
movsl
cs
cs
lock
out
stos
fcomps
push
faddl
lock
call
hlt
push
dec
shrb
jmp
fsts
and
jle
add
jnp
test
jg
sub
xchg
sub
adc
into
in
mov
ss
adc
or
test
sub
sub
add
or
shlb
int3
subb
aas
je
push
lret
and
xchg
jne
pop
pop
cmp
sub
dec
jns
mov
inc
jae
sbb
mov
and
data16
and
mov
in
daa
sub
mov
sbb
aas
in
push
sub
outsl
lods
es
mov
dec
ss
cs
dec
or
fimull
repnz
mov
divb
aas
inc
outsl
inc
mov
out
mov
or
jns
out
leave
jmp
inc
adc
loope
inc
ja
and
hlt
or
dec
enter
hlt
hlt
mov
shlb
repz
inc
rorl
push
mov
in
jmp
fwait
shrl
pop
sub
mov
popf
mov
mov
test
mov
das
mov
icebp
lea
mov
mov
stos
dec
insl
mov
ret
xor
push
cmp
clc
adc
sti
fs
xchg
mov
jp
lahf
loopne
mov
jnp
add
movsl
divb
and
popa
add
add
stos
outsb
sbb
stos
lcall
scas
pop
pop
adc
cwtl
pop
push
in
lret
sub
movhps
xor
push
in
repz
mov
xchg
js
xorl
rcll
icebp
jge
test
outsl
cmp
pop
jmp
icebp
popf
faddl
xchg
fildll
repz
aas
mov
and
clc
test
cmp
cmc
sti
fadd
add
and
or
test
cmp
cwtl
aaa
ffreep
push
repnz
leave
cmp
icebp
push
sbb
xor
fidivl
orb
pop
mov
pushf
ja
mov
sbb
aam
adc
push
test
gs
test
adc
std
pop
lcall
push
add
outsb
xchg
sub
lea
test
sbb
push
adc
popa
push
sub
lds
jne
fcoml
cli
push
test
cmpsb
loopne
call
out
xor
inc
fmull
or
and
mov
fisubl
or
or
push
add
insb
scas
jle
stc
fidivrl
jl
pop
or
jne
push
mov
insl
inc
shll
or
push
imul
add
loope
pop
sbb
adc
xlat
jbe
pushf
popl
or
and
cld
xchg
xchg
lods
sbb
push
pop
add
cmp
and
testb
mov
call
mov
sbb
add
or
pop
mov
mov
sbb
stc
mov
sub
add
mov
cmpb
pop
or
popf
test
sbb
lahf
push
xchg
adc
es
dec
adc
lcall
aaa
dec
int3
cmc
add
sub
div
xlat
or
xchg
jb
mov
icebp
dec
sbb
push
and
and
lahf
gs
and
cmp
add
jge
xlat
mov
xchg
push
push
or
push
cmc
repz
fiadds
shll
push
out
icebp
int3
popa
scas
sub
xchg
or
loope
popa
sub
mov
in
push
adc
out
add
aam
jne
pop
popf
enter
jbe
adc
inc
lds
xchg
jnp
pushf
mov
out
mov
rol
fnstcw
call
mov
sub
pop
int3
mov
stos
cmp
lods
into
inc
and
arpl
test
push
inc
addb
push
shlb
out
push
shll
andb
mov
test
jge
test
mov
cmpsb
arpl
xchg
hlt
xorb
jp
rolb
cmp
or
cltd
and
dec
fimull
ja
cltd
cmc
je
pop
orb
xchg
add
dec
test
fldt
subb
dec
push
mov
mov
jp
sub
sbb
sahf
cltd
jb
cmp
mov
jg
and
jmp
jge
xchg
sbb
mov
push
jae
push
stc
in
and
fmuls
dec
rcr
mov
andl
movsl
mov
fildll
lret
or
popa
xor
sbb
push
das
inc
jnp
cs
lcall
stc
sub
jle
mov
jecxz
fidivl
imul
or
jo
pusha
cmp
pusha
push
jl
xor
xchg
daa
pop
lock
and
addr16
mov
frstor
mov
movsl
leave
pop
aad
loopne
inc
cmpsl
jae
arpl
push
test
flds
subb
imul
inc
and
dec
out
sub
push
lods
cmp
xor
pop
jmp
push
pusha
daa
adc
push
cmc
int3
out
insl
sahf
mov
adc
and
xor
cmp
push
lods
jbe
loopne
lcall
mov
fwait
cmp
out
sub
push
and
lcall
iret
sbb
add
add
lds
or
ret
cwtl
rorb
pop
lods
push
pop
add
xchg
push
out
cld
ret
movsl
sub
adc
sbb
or
sti
mov
inc
mov
repz
mov
insl
inc
subb
adc
fnstsw
inc
dec
jb
jno
and
cmp
aad
aas
divb
hlt
pop
and
sbb
fisttpl
dec
test
imul
or
jp
mov
cmp
sub
xchg
cmp
add
pop
lcall
jb
or
add
mov
das
clc
repz
cld
xchg
jnp
jl
xor
jnp
fsin
test
inc
mov
inc
mov
xor
jle
dec
sub
mov
or
data16
movsl
mov
cmpb
aaa
jmp
mov
out
and
adc
fimuls
outsl
cmp
sbb
jno
pop
sbb
mov
adc
mov
add
push
call
mov
fs
aad
adc
movsl
mov
push
les
lcall
lods
daa
or
push
sbb
repz
push
cmc
push
dec
sbb
pop
or
stos
insl
or
mov
icebp
add
jle
ds
cli
jno
movsl
mov
xchg
jo
and
inc
xchg
push
and
repz
insb
cmp
mov
jge
inc
mov
out
scas
push
add
out
xchg
xor
mov
aad
adc
shlb
pop
nop
pushf
mov
xor
push
xlat
sub
pushf
fsts
dec
jle
jg
shll
sbb
nop
aaa
sbb
shrl
adc
popa
xchg
mov
push
adc
out
int
jbe
dec
xor
xchg
pop
and
cltd
add
dec
sub
adc
out
js
imulb
pop
js
sbb
vpaddb
dec
outsb
shl
or
rcrl
aam
popf
sub
dec
pop
jecxz
xchg
insb
jl
push
pop
popf
lods
sbb
jbe
sub
popa
lock
cli
ja
lret
mov
dec
inc
mov
int3
sbb
mov
rorl
sub
xchg
test
sub
add
cmp
in
cmpsb
mov
push
dec
add
cmp
ljmp
fiadds
adc
push
je
aam
shrl
mov
in
or
pop
fs
push
jge
or
inc
subl
sahf
pop
sub
pop
lods
sub
sbb
sbb
cmp
out
fisttpll
xor
pop
int
arpl
xchg
sub
inc
movhps
jl
sub
cmp
push
popf
aas
push
fst
cmp
fcmovnb
mov
insl
pop
shlb
lea
hlt
and
sbb
call
push
xchg
mov
ret
test
ret
repnz
shll
add
jp
inc
fcomps
mov
or
xor
incl
pop
std
jb
inc
mov
clc
fistpl
in
push
out
lret
push
mov
pop
push
jo
clc
pusha
and
and
adc
jne
push
enter
ja
mov
ret
fnstenv
adc
test
adcb
aas
xor
mov
push
cld
add
jne
nop
ljmp
add
add
jge
pop
dec
aad
xchg
adc
inc
testl
loope
pop
jae
mov
cmpsl
jg
faddp
iret
loop
popf
sbb
mov
rcr
nop
inc
sbb
dec
dec
andb
inc
and
mov
mov
clc
cs
xchg
int3
es
mov
push
push
mov
rol
or
xchg
inc
in
call
mov
mov
mov
hlt
dec
sbb
cmp
adc
xor
add
add
ret
nop
mov
mov
lret
pop
dec
out
cli
mov
xchg
mov
sbb
sahf
imul
dec
leave
xor
push
pop
jnp
push
inc
bound
inc
lcall
ficoms
nop
and
jno
aam
ljmp
sub
stos
mov
mov
in
sub
push
sti
gs
sbb
int3
test
mov
data16
xor
sub
push
xor
cmp
sub
add
mov
xchg
adc
leave
ja
lret
fs
push
in
mov
adc
lods
dec
mov
cmpsl
push
jnp
jo
lods
insb
mov
rcrb
or
inc
popa
adc
mov
inc
negb
in
jnp
pop
iret
push
xlat
test
mov
jnp
and
testl
push
xchg
outsb
inc
xlat
mov
pop
xor
mov
xchg
mov
cld
add
pushf
jb
pop
test
and
int
mov
lret
mov
int3
and
jge
repnz
imul
bound
mov
cmp
pop
sbb
arpl
xchg
or
fnstenv
and
jb
pop
imulb
lods
jg
and
jp
xlat
ret
mov
data16
jecxz
jmp
dec
pop
or
cmc
sbb
mov
adc
dec
stc
pop
or
and
xor
jbe
cmc
xchg
mov
jge
inc
sar
mov
dec
inc
mov
adc
mov
xorb
push
xchg
mov
push
inc
popf
push
inc
gs
jnp
push
jnp
push
jg
or
in
add
inc
rcrb
adc
jno
push
pushf
push
add
xor
mov
mov
jge
outsl
ficoml
ret
or
into
nop
pop
jecxz
lahf
das
jnp
pop
push
sarb
jne
mov
xchg
jecxz
enter
jno
mov
rclb
xor
cvtpi2ps
mov
push
jb
dec
push
sbb
add
cmp
aas
mov
fnsave
mov
pop
inc
push
pop
int
jmp
dec
sub
xor
adc
cld
movsl
mov
ja
jl
xchg
pop
mov
mov
adc
ficoms
sti
mov
loopne
jbe
arpl
sbb
movsl
add
cmpsl
ret
icebp
or
mov
cmpsb
xor
das
insb
stc
and
xchg
or
jne
jp
or
imul
pop
pop
xchg
add
push
movsl
outsb
jge
or
sub
mov
in
dec
mov
mov
lea
push
dec
test
push
repz
jp
ljmp
mov
test
mov
pop
pcmpeqd
mov
cmp
inc
jmp
test
and
mov
jp
iret
js
mov
arpl
and
or
out
sub
popa
fs
push
popa
cmpsl
sbb
roll
syscall
push
and
jnp
xor
aam
and
jl
push
push
das
into
fisttps
loopne
sbb
lods
loopne
mov
mov
out
call
sub
push
orl
test
push
gs
sub
fadd
xor
and
adc
stc
icebp
and
addr16
pop
imul
sbb
in
test
ss
mov
or
xor
adc
pop
or
nop
test
dec
xchg
or
adc
pusha
fisubrl
fisubl
test
add
inc
enter
xchg
mov
inc
xor
out
jns
int
xchg
jnp
ret
pop
and
cmp
fisubrs
mov
mov
cs
jecxz
mov
les
ljmp
fdivrp
mov
test
lahf
lock
lret
incb
pop
daa
mov
ljmp
cli
push
mulb
out
xor
iret
in
lock
mov
mov
jg
in
lret
insb
repnz
pushf
push
xor
ja
push
in
pop
fmuls
pop
test
fimull
or
push
mov
mov
cmp
notl
mov
push
js
clc
fiaddl
push
xchg
sbb
ja
xor
daa
shr
push
add
pusha
outsb
stos
jg
std
and
loope
push
jnp
inc
scas
je
rorb
mov
xchg
jbe
and
repz
popf
loope
jl
fistps
in
jmp
cmc
ror
out
test
mov
subb
sub
and
jne
xor
jbe
jg
adc
adc
jns
scas
dec
mov
std
ja
add
push
loope
or
out
dec
ret
call
incb
sbbb
inc
in
and
jae
xchg
jb
jns
push
pop
jns
stos
mov
sbb
stos
daa
std
fists
xchg
push
inc
ljmp
les
sbb
mov
mov
or
jp
mov
imul
cmp
mov
insl
sub
stc
negl
pushw
sbb
pop
stc
enter
mov
push
pusha
adc
dec
leave
jp
adc
adc
mov
out
inc
push
pop
flds
xchg
lods
addr16
ficompl
pop
cmpsl
int3
sub
mov
pop
popa
fwait
nop
pushf
add
sti
adc
arpl
push
cmp
pusha
shlb
dec
jno
cmp
cmp
clc
dec
icebp
mov
jp
jg
lods
push
cmp
pusha
adc
mov
mov
pop
cs
push
aam
inc
jp
call
shlb
sbb
cmp
jge
adc
inc
or
test
mov
push
cmp
mov
cld
jle
call
push
inc
pop
hlt
ss
out
into
scas
es
insl
das
push
pushf
and
push
cmpsl
ds
xchg
hlt
sbb
inc
loop
xchg
nop
shlb
xchg
add
in
test
in
xchg
pushf
mov
mov
js
jle
test
add
lahf
shl
and
jecxz
sahf
xor
xchg
push
movsb
inc
xchg
ds
mov
test
loop
popa
cmpsb
enter
jbe
mov
rcrb
cmc
adcl
iret
jmp
mov
aam
jmp
cmp
ret
fcmovbe
icebp
movsl
inc
cmp
mov
insb
lea
adc
inc
clc
out
shll
sub
xchg
xchg
aam
push
dec
or
mov
lret
adc
stos
insb
ficompl
mov
mov
sahf
cmpsb
pop
les
js
and
das
sub
adcb
cmp
rcrl
push
sub
int3
mov
add
scas
lcall
cmpl
dec
ds
cmp
xlat
xor
in
sbb
das
push
and
addr16
out
sbb
pop
fs
jb
sub
stc
fsubl
xchg
pop
rol
or
ljmp
mov
jl
sbb
shlb
jae
orb
scas
fstpt
push
dec
pop
cmp
jae
push
movsl
jae
mov
adc
adc
cltd
adc
jecxz
push
or
cmp
push
cwtl
fst
mov
inc
in
fcompl
mov
repz
syscall
fistl
push
nop
cmc
mov
stc
push
jmp
xchg
push
hlt
adc
out
inc
mov
lods
dec
push
out
sarb
mov
cmp
mov
xchg
jl
xor
stos
xchg
xor
push
push
cmp
pop
imul
fldt
pop
xchg
sub
xor
jmp
adc
out
jbe
xor
cmpsl
pop
js
dec
or
imul
adc
jg
js
xchg
xor
pusha
jecxz
sbb
stos
push
mov
iret
pop
aam
adc
fisubrl
insb
sbb
testl
in
or
push
ret
mov
shl
cld
imul
test
cmp
jle
sub
movsb
sti
in
fsubl
fisubs
jb
sub
xor
fidivrs
ja
inc
fs
insl
mov
mov
and
cmp
loopne
shr
xchg
out
aad
fdiv
add
ret
cli
fidivrs
mov
adc
orb
sub
inc
shll
int3
and
xchg
mov
add
das
cmp
mov
xchg
sbb
dec
jne
cld
loop
mov
xlat
lea
addr16
leave
sti
mov
and
cmp
repnz
test
call
lcall
mov
xchg
out
push
adc
rcrb
mov
adc
enter
add
in
daa
jno
lahf
add
pop
mov
inc
ret
xlat
enter
aas
lock
decl
sbb
sub
ljmp
jp
lret
mov
mov
fists
jb
movsb
sbbb
insb
push
jbe
jmp
mov
pop
test
cli
loop
movsl
test
sub
out
int
popf
pop
xchg
lock
lcall
jno
rorl
ficoml
idivl
push
repz
push
mov
call
stc
daa
sbb
push
imul
bts
inc
mov
imul
push
fimull
xchg
scas
xchg
xor
mov
outsb
cmp
push
cs
pop
cli
js
call
mov
lods
mov
jmp
dec
dec
xor
aas
daa
frstor
xchg
into
inc
and
aad
adc
sbb
int
push
dec
mov
xchg
lea
pop
xchg
lret
fistpl
aas
iret
mov
popa
stc
cmp
dec
aas
arpl
jmp
dec
jno
sbb
jbe
call
lods
pop
lods
mov
jns
mov
mov
rol
fldt
mov
test
cwtl
add
adc
pop
push
aad
pop
xchg
xor
mov
out
cmp
mov
pop
pusha
aam
fs
decb
and
pop
dec
insl
loopne
or
addb
push
fwait
mov
into
popa
add
pop
pop
outsb
adc
xchg
inc
mov
inc
jl
dec
pushf
outsl
loopne
adc
inc
insl
or
arpl
mov
fsts
adc
sbb
mov
ret
xchg
adc
in
xchg
mov
xor
push
cmp
ljmp
mov
inc
stos
out
or
xor
stc
sbb
daa
mull
xchg
add
ret
mov
bound
pusha
mov
les
stos
sub
in
mov
lahf
push
movsl
inc
imul
xchg
ja
stc
hlt
sbb
test
cmp
cmp
jns
cmp
xor
push
fmull
out
insl
xlat
and
inc
pop
xchg
fidivl
movl
add
push
dec
in
adc
inc
push
mov
or
jae
cli
mov
lods
xor
mov
pop
outsl
push
jl
mov
cmpsb
mov
xchg
jns
int3
stc
daa
mov
outsb
daa
icebp
cli
sub
shll
sbb
dec
popa
mov
stc
cs
sbb
inc
fwait
imulb
testl
inc
ror
mov
cs
jg
mov
or
ret
mov
jg
scas
in
cs
pop
push
mov
scas
stos
fs
fsubs
insl
call
xor
xor
fcomps
lds
insl
inc
shlb
pop
xchg
cmp
mov
out
xor
rcrb
pop
sub
or
sbb
andb
jge
xor
clc
xor
imul
idivl
and
stc
inc
lods
jmp
inc
push
fwait
and
or
sub
in
jle
sbb
cmp
jecxz
clc
imull
mov
aam
cmp
or
arpl
pusha
js,pn
pop
std
jno
scas
push
jmp
xchg
or
gs
addr16
ror
lock
or
mov
int
je
jmp
mov
pop
mov
jnp
jbe
cwtl
sub
jns
mov
mov
sbb
push
imulb
gs
jmp
push
sub
out
leave
lods
sub
pop
add
inc
mov
leave
mov
xor
mov
jg
xor
out
movl
pop
jb
test
rcrl
pop
fwait
out
das
mov
mov
bound
or
pop
arpl
mov
mov
xor
insl
add
push
jp
sbb
cmp
divb
insl
fwait
and
cs
or
imul
add
jmp
sub
roll
sbb
ljmp
and
pop
adc
add
in
std
push
fwait
test
enter
xor
inc
add
in
sub
fisubrs
sub
inc
mov
sub
sub
cmp
fdivl
flds
in
xor
adcb
sahf
imul
and
push
mov
sti
sub
cltd
cmpsb
inc
jmp
gs
fs
jmp
sti
iret
dec
xchg
rolb
sbb
hlt
mov
test
lds
test
xor
mov
pop
pop
cmp
mov
dec
jg
js
fndisi(8087
cwtl
iret
repz
jmp
sub
aas
negl
pop
xchg
in
push
push
dec
dec
inc
roll
add
add
notb
and
jg
cmp
mov
fwait
push
or
sbb
xlat
cmc
pop
mov
mov
lds
test
lods
xor
movsl
fcos
loop
jne
xchg
inc
or
or
mov
push
adc
sarb
mov
lret
lock
sub
fwait
pop
adc
fimull
mov
pop
dec
arpl
out
std
in
jmp
jge
fnstsw
cmc
cmp
push
or
int3
push
mov
dec
je
jnp
sbbl
sbb
or
push
lret
shrl
mov
das
inc
je
xchg
cmpb
lods
sbb
scas
push
sub
mov
out
shlb
loopne
int3
adc
jl
addb
or
push
jne
nop
sbb
sub
pushf
jecxz
xchg
dec
out
sbb
ja
shrl
pop
xchg
fs
mov
push
cmp
pop
xchg
loop
into
jle
mov
push
outsb
mov
shll
ljmp
ljmp
sub
xchg
daa
pop
int3
jne
dec
xor
fisubrs
inc
xor
push
or
mov
mov
push
sub
sbb
aam
jnp
sbb
or
push
mov
addr16
xor
rclb
adc
jle
cli
pop
les
cmp
sbb
sbb
fistps
lods
in
stc
repnz
mov
push
out
fwait
push
xchg
shr
fisttps
test
jno
sar
and
stc
outsl
mov
leave
fisttpl
or
mov
adc
pop
pop
lret
movsb
shrb
nop
push
and
lret
or
lds
addr16
mov
fdivl
xchg
shrl
push
push
imul
aaa
mov
cmp
jmp
mov
sub
aam
nopl
mov
int
cmp
push
xor
inc
sahf
dec
jnp
and
shl
sbb
cmp
lds
cmp
pop
lret
sub
pop
mov
orb
or
stc
fdivr
mov
jne
ds
dec
mov
test
inc
adc
and
je
mov
int
or
xchg
adc
cli
xor
mov
outsb
inc
sbb
aam
out
scas
adc
pop
sub
movsb
decb
into
shl
jne
sbb
loop
sub
mov
push
aam
call
imul
shl
dec
test
mov
sub
movsl
adcb
and
dec
and
js
adc
push
test
sbb
dec
fcmove
lods
imul
or
xor
ljmp
mov
rolb
in
stos
mov
ss
inc
and
dec
mov
inc
test
rorb
xor
or
sbb
mov
and
xchg
inc
cmp
hlt
or
push
arpl
sub
mov
adc
ds
shlb
adc
cli
inc
jne
add
cmc
cli
mov
sti
call
mov
adc
ret
test
dec
or
hlt
or
push
scas
lret
dec
or
shrb
popf
das
mov
jle
int3
inc
push
pop
jmp
movsb
shll
cmpsb
mov
daa
daa
cmp
push
bnd
mov
and
push
xor
adc
call
push
xchg
fwait
mov
loopne
cmp
jle
or
fcom
dec
mov
lods
mov
arpl
cmp
xchg
loope
mov
in
fwait
sbb
lea
jp
test
stc
push
fst
pop
filds
mov
xchg
jo
pop
fisubl
frstor
out
fs
mov
pop
sub
lahf
jecxz
lahf
mov
xchg
popf
nop
add
jnp
les
stos
sub
xchg
push
addr16
cmp
cmpsl
out
pop
lcall
pop
bound
jecxz
cmp
ss
inc
into
xor
sbb
jnp
sbb
mov
out
jp
push
int3
sbb
int
cmc
insl
xchg
ds
jg
sbb
jae
cmpsl
aaa
sar
out
mov
mov
mov
aas
mov
stc
cwtl
xlat
stos
arpl
adcb
inc
aaa
adc
daa
lods
imul
in
fimuls
add
test
pusha
mov
aaa
jae
sbb
repz
repz
xacquire
pop
scas
xchg
jmp
sbb
mov
divb
cmp
mov
dec
stos
inc
cmp
pop
mov
push
lds
fdivrp
lods
push
lods
arpl
adc
jle
pop
xchg
mov
adc
mov
and
mov
xchg
test
js
mov
mov
xor
push
push
pusha
cmp
mov
fbstp
adc
es
sbb
pop
mov
mov
push
lods
xchg
fcoml
mov
out
adc
jb
pop
std
je
icebp
mov
and
into
repz
in
lahf
les
jmp
adc
mov
cmp
push
test
mov
xchg
lret
jno
mov
pop
xchg
fimuls
cmp
jmp
pop
push
shlb
lods
pop
dec
xor
cmc
mov
jbe
rcll
aas
xor
jae
mov
out
mov
dec
jae
mov
out
cmpsl
addr16
arpl
addb
jnp
aad
sahf
ret
cli
fistl
push
inc
mov
mov
stos
push
scas
pop
popa
fldt
inc
mov
sbb
fdivr
lds
std
xor
cwtl
popa
mov
aas
xor
mov
repz
mov
xchg
aam
sbb
inc
jbe
mov
dec
xchg
or
imul
jmp
sub
jae
fimuls
push
sarl
inc
sahf
inc
fwait
adc
xchg
mov
inc
fucom
mov
pushf
jmp
mov
int3
std
jmp
gs
inc
inc
shr
push
repnz
sub
test
cmp
inc
and
fmul
adcb
push
xlat
bound
aad
out
ret
call
js
popa
repz
inc
nop
mov
das
jbe
inc
rolb
dec
dec
roll
cmp
xor
jecxz
mov
mov
outsl
xor
cld
mov
fbld
notl
dec
add
cmp
dec
shll
cmpl
cmp
mov
mov
or
scas
ret
iret
jle
xrelease
xor
mov
sbb
mull
jp
mov
in
imul
or
inc
pop
add
mov
push
jl
xor
mov
adc
fucom
and
jg
pop
inc
pop
movsl
xchg
ljmp
repnz
ror
dec
cmp
lds
push
mov
push
lds
fildll
pusha
js,pt
pop
adc
lcall
mov
lret
or
mov
xchg
nop
add
jmp
sbb
mov
popl
sub
adc
out
dec
mov
jbe
repz
mov
aam
into
or
push
xchg
lods
push
leave
jbe
fstl
addl
mov
lock
shll
call
in
push
add
or
std
inc
test
add
pusha
adc
lods
pop
fdivrs
pop
jecxz
cmp
dec
enter
into
fidivs
cmp
ljmp
xchg
in
imul
mov
push
mov
push
and
ja
ss
out
push
lods
shl
mov
scas
jle
stos
aam
or
fwait
ret
jnp
sbb
jno
test
dec
rcrb
add
dec
mov
pushf
mov
dec
mov
or
movsl
xor
pop
sarb
mov
pop
bound
jg
into
cltd
lcall
int
jno
cmp
jmp
loopne
ja
push
test
mov
movsb
jle
out
cltd
popf
xlat
sub
pop
sbb
repz
mov
sub
fsubrs
leave
pop
pop
ljmp
fdivrs
mov
mov
jb
jge
rol
int3
adc
jns
mov
dec
loop
jle
cmp
mov
fucomip
ljmp
sbb
btc
cmpsb
sarb
cli
add
sbb
and
shl
cli
adc
mov
mov
in
scas
daa
aad
push
testl
mov
cmpsl
addr16
inc
rorl
xchg
andb
jle
dec
push
stos
mov
das
or
add
or
or
sub
in
or
loopne
ficoml
add
std
mov
mov
cmp
cmp
int3
cltd
mov
ds
in
xor
fisttpll
xchg
orb
dec
in
in
xor
add
ret
icebp
dec
enter
or
cmp
mov
fisttps
push
insb
inc
pop
int3
mov
dec
in
stos
or
movsb
sbb
into
and
std
push
xlat
xor
divl
mov
dec
adc
push
scas
cwtl
push
push
lret
dec
sbb
mov
pop
xchg
xor
outsb
js
pusha
ret
lret
imul
ret
cmp
sarl
jp
testb
hlt
lock
jmp
push
or
add
or
cmp
inc
push
jmp
xlat
mov
loopne
daa
insb
scas
mov
mov
mov
dec
and
mov
ds
dec
add
loope
aaa
in
mov
or
sbb
dec
cmc
movsl
lret
aaa
add
cmpsb
outsl
out
bound
arpl
mov
lods
pop
push
inc
imull
nop
xchg
repnz
and
jbe
push
js
lea
jmp
cmpsl
addr16
mov
dec
dec
cwtl
sbb
out
pop
or
test
push
mov
sub
stos
insl
sahf
xchg
inc
dec
fiaddl
push
lods
push
lds
cld
fadd
shr
xchg
ds
bound
movsb
xlat
mov
push
lods
pop
mov
mov
and
negl
xchg
push
push
in
cmpsb
jbe
sub
and
mov
inc
inc
and
mov
push
xchg
lret
mov
inc
jl
jl
ljmp
inc
adc
stos
cmp
scas
inc
xchg
mov
adc
aaa
jne
cwtl
pop
add
mov
mov
shr
jo
insl
in
out
sarb
cmp
shl
and
push
xor
lahf
sub
push
sub
and
adc
pop
cmp
sbb
lea
push
xorl
outsb
int
pop
xchg
xor
xor
dec
xor
filds
jbe
in
cs
mov
out
fs
cld
mov
and
jecxz
leave
scas
push
out
lahf
shlb
sub
out
mov
shll
cmp
dec
fbstp
cmp
sbb
das
inc
inc
icebp
shll
pop
cmp
cmp
add
cwtl
dec
push
jg
int
cs
push
fstl
adc
add
or
push
mov
mov
loope
lock
add
or
adc
inc
inc
cwtl
inc
xchg
sub
xor
pop
loopne
mov
repz
sbb
lcall
jmp
dec
mov
jmp
sarb
sti
push
in
jp
inc
aaa
psubb
not
subb
test
xor
nop
mov
pushl
loopne
int3
xor
xchg
sub
aad
pop
jne
inc
outsl
jle
in
movsl
push
lea
push
pushf
sub
imul
hlt
xchg
cs
jp
dec
repz
daa
das
lods
test
mov
shll
cmp
jno
xor
mov
or
insb
out
add
fisttpll
ja
jecxz
mov
int
les
sub
mov
mov
add
int3
addr16
inc
js
js
or
cmc
dec
in
repz
sbbl
rolb
sbb
xor
fwait
push
inc
and
add
cmp
and
or
cld
int
jb
xchg
xor
jge
jl
jl
ret
movsb
movsl
mov
xchg
mov
jb
sub
jne
imul
cmp
jns
push
idivb
jbe
vpcmpgtw
xor
negl
mov
push
inc
add
sub
jno
les
scas
cmpsl
adc
fs
cmp
xchg
test
mov
addl
repnz
shrl
mov
fsubrs
mov
mov
mov
movsb
cmp
xor
dec
es
inc
loop
lods
dec
int
pusha
xor
test
inc
int
scas
in
lods
cld
cmp
add
das
data16
xchg
mov
add
push
gs
cmc
push
jecxz
jp
pushf
sub
ja
xchg
jg
popa
sbb
jnp
outsl
xchg
pop
subb
icebp
daa
and
add
cmpsb
movd
xchg
inc
mov
shl
fmull
bound
fs
dec
xchg
int
cmc
mov
inc
flds
out
or
jge
int
nop
arpl
incl
and
insl
inc
xchg
and
mov
lea
or
test
xor
fdivrp
lahf
nop
mov
pop
leave
test
xor
mov
mov
fs
sbb
push
arpl
push
sub
dec
lods
jbe
add
out
mov
push
aaa
xor
inc
loop
lret
in
jmp
cld
pop
and
jbe
mov
pop
cmp
inc
pusha
scas
add
aas
xlat
pop
sbb
insl
fs
mov
pop
or
and
sub
dec
fdivs
jbe
xlat
dec
mov
int
aaa
lcall
jmp
mov
out
pusha
or
rol
jnp
cmp
in
adc
pop
mov
nop
lcall
mov
icebp
sbb
pop
sbb
cmc
xchg
mov
and
leave
and
xchg
dec
mov
pop
int
sbb
push
insb
cmp
sub
inc
loope
push
mov
pop
push
loope
ds
lcall
and
jne
jno
clc
jmp
pusha
pushf
pop
xor
pop
lods
jo
data16
testl
shrl
jp
ds
std
inc
xchg
cld
jle
cwtl
insl
sbb
pop
int
jne
mov
cld
mov
and
fstps
fcmovbe
dec
mov
into
pop
lock
out
mov
lahf
mov
inc
adc
inc
inc
notl
push
and
push
pop
mov
clc
sbb
and
lahf
push
mov
data16
sbb
push
fs
imul
outsb
mov
jo
lahf
push
jnp
cmp
sbb
and
inc
or
out
xchg
or
and
imul
imul
jo
xor
and
imul
aad
iret
pop
jle
jp
ljmp
cmp
xchg
xor
test
std
or
dec
jns
mov
sti
sahf
popf
push
sbb
mov
ss
push
aaa
dec
js
push
leave
imul
cmpsb
nop
test
call
in
adc
inc
in
xlat
mov
xor
jns
xlat
cs
push
sbb
jo
jp
and
xor
stos
and
scas
mov
stos
out
jo
lret
out
jbe
fbld
bound
add
enter
push
jmp
sahf
scas
movsb
pop
loop
and
mov
stos
adc
scas
push
imul
jl
push
or
pushf
addr16
movsb
xchg
ficoml
sar
mov
push
xchg
imul
xchg
and
rol
out
aas
pop
aaa
pushl
retw
add
jle
ss
int3
pop
and
mul
xor
xchg
cltd
jne
mov
pop
out
cmpsl
js
inc
inc
addl
cmp
jle
aam
xorl
stos
jge
lcall
or
push
inc
in
xor
lods
xchg
mov
pop
sbb
aam
leave
or
push
xor
dec
lret
push
hlt
out
mov
test
loopne
and
xchg
int3
or
stc
push
sbb
cwtl
xor
out
addb
mov
aam
xor
add
cltd
inc
lods
popf
and
loopne
push
int3
push
in
pop
cmp
std
in
pop
push
fsub
jno
ret
xchg
jae
dec
pop
add
mov
add
add
jmp
les
sub
dec
xchg
dec
sbb
or
cld
dec
in
adc
dec
decl
aad
js
or
in
cwtl
cs
inc
scas
and
inc
iret
mov
mov
mov
cmp
and
fwait
mov
xor
clc
mov
imul
mov
out
jae
sub
push
sub
xchg
jne
call
gs
dec
cmp
imul
jp
gs
mul
cmp
inc
cmp
aad
ret
stc
outsb
call
push
ds
cs
jne
std
mov
dec
icebp
je
push
imul
pop
mov
mov
loopne
outsb
xchg
fldenv
mov
jne
push
out
jnp
dec
pop
mov
int
test
cmp
jle
push
cmc
test
fisubs
xchg
fs
sub
cmp
sub
xchg
push
shrb
sub
ljmp
in
cmpl
in
arpl
inc
movsb
aaa
std
dec
sti
ds
fildll
ss
in
push
ljmp
pop
std
fadd
mov
mov
pop
push
aam
mov
roll
fs
js
out
fmuls
seto
test
dec
jge
lret
pop
ffree
cmpsb
mov
in
inc
cmp
sub
popf
and
sbbb
lahf
mov
push
in
inc
and
insl
sub
ret
jle
cmp
xchg
cmpl
mov
mov
pusha
xor
sub
jecxz
jno
loope
insl
sub
lea
fcmovne
add
jb
cltd
sbb
pop
mov
sub
sub
or
pop
adc
pop
inc
jae
leave
lcall
popa
sahf
lret
dec
in
pusha
jb
add
push
pop
jle
cltd
imul
ja
jae
pop
mov
jle
hlt
sub
outsb
inc
cmc
jmp
pop
fdiv
lret
jae
faddl
dec
cmp
sub
daa
add
inc
sbb
mov
dec
and
jo,pn
or
inc
xor
pop
mov
test
pop
sti
aas
icebp
push
mov
mov
cmp
inc
jns
inc
inc
fwait
lods
push
mov
jnp
loope
fwait
out
sub
popa
mov
scas
xchg
sbb
push
jno
hlt
push
insb
pop
nop
adc
fstps
or
and
lock
in
mov
outsb
or
xchg
cmp
mov
mov
jo
xor
xchg
hlt
push
and
sbb
jmp
inc
loop
sub
test
xchg
cmc
jmp
mov
fwait
jp
pop
lcall
in
lods
into
pop
adc
jecxz
sub
pop
and
jbe
dec
mov
loop
mov
jmp
aad
mov
xor
xor
dec
idivb
out
lods
pmaddwd
or
mov
pop
mov
ret
lea
sbb
xchg
stc
fidivs
jg
out
jae
cli
sub
pop
push
fstpl
inc
mov
cmp
movsl
pop
and
addb
cld
popf
add
cmp
cmp
into
pop
fcompl
sub
mov
xchg
loopne
insb
mov
push
add
and
jp
jns
push
daa
add
popl
xorb
mov
loope
add
test
outsb
push
jno
sbb
sub
mov
pop
shr
mov
test
and
lret
adc
mov
in
lcall
stos
and
or
push
fwait
xchg
out
add
xchg
mov
sbb
mov
xor
lcall
jnp
mov
xor
lcall
dec
iret
jge
loopne
addr16
and
cmpsl
std
sbb
adc
icebp
shrl
jne
xchg
mov
stc
lock
sub
cmpsl
scas
lods
xchg
mov
mov
ss
inc
mov
sbb
test
gs
xlat
pop
xchg
mov
movsl
test
mov
sbb
lahf
mov
cmp
and
mov
or
sbb
cld
jl
adc
push
cmp
js
in
loopne
test
xchg
loope
xor
jecxz
cmpsl
out
out
cmp
mov
push
sub
adc
xchg
cwtl
pop
cmpsb
mov
mov
push
shrl
pop
enter
stos
movsb
adc
adc
push
pushf
or
in
sub
add
stos
mov
or
cli
ljmp
inc
push
das
mov
pop
fidivrs
je
mov
leave
cmpsb
push
gs
lret
aad
cmp
or
push
sub
ret
in
in
push
inc
out
inc
jae
lods
xchg
add
orb
fldl2e
out
push
and
mov
out
xchg
sub
pop
repz
jae
mov
sub
xor
es
in
outsl
into
push
arpl
dec
pop
jmp
sbb
push
dec
sub
pop
sbb
and
rorb
jl
decb
sbb
xor
ret
popl
jg,pt
mov
cmp
cltd
fistps
xchg
mov
mov
xchg
xchg
in
ss
aad
jmp
adc
push
jecxz
mov
negb
and
imul
inc
push
dec
mov
cmpsb
inc
int3
mov
push
loop
insl
mov
enter
mov
push
sub
or
lods
mov
shl
int
push
andl
dec
lock
lea
or
push
dec
mov
fdivl
iret
insb
jb
ljmp
rclb
pop
call
scas
clc
pusha
sub
or
stos
cmp
imul
jecxz
fwait
mov
in
outsb
jecxz
movsl
in
adc
xchg
test
add
lcall
xchg
mov
or
sbb
inc
mov
aaa
sti
es
mov
ljmp
or
mov
cmp
incb
inc
movhps
push
or
adc
mov
std
bound
inc
popa
cmp
pushf
aas
rorl
stos
add
aad
cli
neg
xchg
add
sub
das
lods
mov
mov
or
pop
jae
adc
sub
mov
rcrl
pop
and
add
in
mov
mov
cmpsl
daa
cltd
pop
gs
sbb
cmpsl
cltd
xchg
mov
sar
push
sub
out
jmp
in
inc
jg
mov
or
mov
and
and
adc
jle
dec
mov
movsl
aas
sbb
pop
js
mov
orl
cmpsl
outsl
stc
or
xchg
push
mov
aam
ds
adc
sbb
jmp
xchg
ljmp
nop
mov
inc
pusha
jbe
fcomps
call
mov
sbb
sub
cmp
pop
mov
int3
in
test
jl
or
push
mov
out
out
jle
pop
idiv
adc
fidivl
psubw
xchg
popa
jno
mov
dec
das
les
scas
push
jbe
mov
in
mov
push
outsb
cli
pop
leave
fldl
sbb
arpl
jecxz
xchg
nop
cmp
pop
daa
mov
cmp
mov
ss
rorl
inc
into
movsl
mov
jecxz
mov
mul
lahf
fildl
xor
or
xchg
lds
in
sub
scas
lea
in
lock
mov
mov
imul
inc
popf
loopne
lahf
cmpb
mov
enter
lahf
inc
jle
cmp
push
jmp
test
xchg
sbb
adc
sub
push
pushf
call
sbb
int3
or
xlat
test
clc
mov
jp
ret
lock
mov
sub
push
jno
pop
int
jnp
and
addb
adc
fsubrl
les
hlt
cmp
adc
and
cli
jo
xor
scas
ja
and
and
mov
fwait
add
cld
xor
icebp
xor
popa
mov
cmovae
ss
add
in
push
jmp
sbb
call
mov
leave
mov
lcall
sbb
mulb
add
xchg
mov
in
push
addr16
xchg
pop
dec
imul
fcmovnu
out
adc
aas
movsb
sti
int3
movsb
or
int3
sub
xchg
fwait
xor
and
adc
add
andb
mov
shll
test
push
jl
push
popa
in
jmp
jmp
es
adc
xchg
decl
jg
lods
jmp
push
pop
mov
enter
xor
sub
cmpsb
out
pop
inc
stc
stos
stc
lahf
sbb
fmuls
scas
imul
pop
negl
sahf
mov
enter
and
jmp
xchg
in
sbb
mov
adc
and
ds
xor
push
out
out
xchg
test
lret
sub
jnp
sbb
mov
dec
jne
rcll
mov
xor
shlb
jmp
or
or
mov
shrl
cmp
add
out
insb
fs
adc
jp
test
scas
arpl
movsl
mov
dec
es
mov
adc
cmpsl
fisubl
mov
inc
in
lods
mov
or
aas
lcall
imul
push
pop
and
shrl
push
adc
xor
add
scas
cmpsb
xchg
popa
cmp
jl
mov
xchg
int3
rorb
adc
adc
xlat
pop
mov
cmp
sbb
stc
pop
loope
int
jae
hlt
add
outsb
xor
and
cmp
xchg
mov
gs
push
push
jmp
inc
lret
stc
inc
std
sub
stc
scas
jecxz
push
push
jle
or
loope
sbb
loop,pt
adcl
mul
loopne
mov
push
jnp
in
inc
pusha
jns
in
adc
pop
xchg
mov
push
hlt
lahf
loope
lret
pusha
push
stc
test
rolb
mov
test
rcrl
ja
je
scas
addr16
test
ljmp
repz
mov
icebp
cmpsb
pop
dec
js
jmp
sbb
xor
mov
pop
cmpsl
mov
cltd
enter
lahf
mov
fcoms
fdiv
mov
dec
jecxz
aam
push
and
insb
lock
loope
test
or
ljmp
mov
dec
mov
sbb
mov
popa
inc
sub
cmc
and
add
fisubs
aaa
popl
jbe
pop
mov
call
es
imulb
push
mov
adc
out
and
mov
cmpsl
inc
enter
movsl
jns
popa
add
xor
xlat
adc
mov
outsl
xchg
fs
jo
jp
sub
sahf
dec
insb
enter
add
out
scas
lret
fstcw
add
xchg
pop
lods
lret
fistl
mov
jne
add
mov
stc
pop
js
add
sar
sbb
aam
cmp
sub
lahf
bound
xchg
imul
add
and
xchg
inc
mul
pop
add
insb
bound
sahf
ffreep
lret
mov
gs
in
pushf
mov
mov
imul
in
mov
ss
mov
pop
add
test
hlt
or
out
int
mov
lret
dec
sbb
pop
pushl
clc
inc
gs
les
int3
mov
push
popf
inc
loop
imul
das
or
xchg
jmp
sbb
int
push
fidivrl
out
cmc
cmpsb
mov
mov
rolb
in
sub
fs
popf
je
or
sbb
adc
jl
xchg
pop
cmp
pop
sbb
pop
dec
mov
mov
jae
jle
jbe
jle
js
fsubrl
inc
mov
xor
sbbb
jno
les
jae
daa
insb
mov
mov
push
enter
vshufps
nop
leave
push
fstpl
out
data16
jecxz
mov
insb
imul
insl
aaa
lret
imulb
shll
sub
je
push
or
scas
test
cld
jmp
loopne
jno
mov
cmp
es
or
lea
test
outsb
iret
out
xor
xchg
inc
dec
xor
mov
cmp
inc
subb
push
ljmp
lcall
popa
and
int
inc
mov
jnp
iret
aam
fs
mov
jp
jle
fidivl
xchg
jb
call
xchg
xchg
cwtl
cwtl
fwait
dec
inc
js
cmpsl
mov
fcomi
mov
and
jns
mov
dec
test
test
jnp
rorb
mov
or
or
adc
lea
sbb
fnstsw
fidivrl
pop
jbe
push
aam
push
test
stc
test
or
incl
adc
mov
or
xchg
roll
mov
shll
repz
jmp
push
movsb
mov
xchg
arpl
and
sbb
push
and
dec
test
sub
data16
rorb
dec
stos
rcll
pusha
cmp
js
mov
xchg
mov
or
shrl
aad
jl
dec
insl
pop
mulb
pop
pop
dec
shll
sahf
inc
mov
and
pop
aas
pusha
and
mov
mov
lahf
shrl
fucomp
lods
dec
mov
nop
jnp
jge
sub
pop
fs
dec
sti
cmp
sub
cmpsl
ss
mov
pop
pop
push
or
dec
popa
jbe
sub
push
or
mov
std
subb
movaps
enter
inc
call
mov
sbb
orb
push
rclb
jno
push
out
or
pop
gs
popl
mov
jb
movw
sub
shrl
bound
and
ret
lods
lahf
jmp
mov
pop
jne
fwait
addr16
in
test
mov
mov
xchg
pop
inc
pop
jle
push
mov
test
subb
pop
mov
stos
leave
int
jle
xor
add
dec
decl
mov
pop
ss
in
psrlq
or
lcall
mov
test
ja
sbb
imul
ljmp
bnd
push
xor
fcompl
mov
cmp
out
jcxz
pop
pop
rcl
or
daa
incb
ja
sub
mov
scas
cltd
in
iret
fwait
stos
cli
mov
repnz
into
arpl
ljmp
push
popf
nop
xor
jb
test
in
shll
mov
adc
pop
popl
xor
loopne
adc
int3
mov
aas
and
or
pop
repz
pushl
rorl
pop
jg
lcall
xchg
lods
push
xor
fdivrl
aaa
movsb
scas
sbb
inc
iret
cs
xchg
je
fwait
insb
lea
and
mov
sub
dec
sbb
push
cwtl
scas
jg
pop
aaa
mov
ljmp
addl
jecxz
into
inc
mov
mov
mov
sub
enter
lods
xor
popf
mov
cmpsl
push
lods
and
or
bound
scas
and
dec
sub
pop
inc
popa
dec
hlt
cld
stos
jmp
jns
dec
sub
mov
inc
loope
test
lea
mov
push
mov
mov
dec
divl
int3
inc
mov
leave
inc
fiaddl
mov
adc
sub
add
mov
xor
test
add
addb
sbb
fwait
or
push
mov
in
jno
xlat
jo
div
push
pop
inc
xchg
cmp
test
dec
aam
sub
adc
push
dec
xlat
or
inc
fsubrs
sub
lcall
or
dec
popa
inc
xor
pushf
negl
loope
add
mov
push
out
pop
xchg
xor
inc
dec
xchg
adc
jecxz
std
sbb
cmpsl
fimull
inc
sub
dec
ljmp
out
or
sbb
fadds
aaa
dec
outsl
or
adc
add
call
push
cmp
test
xor
rclb
sub
mov
outsb
push
sub
cwtl
inc
imul
popaw
cltd
add
data16
callw
push
insb
jo,pn
xlat
icebp
flds
mov
push
jns
lret
adc
add
rorb
mov
and
stc
mov
pushf
movsl
in
lret
scas
inc
popf
or
scas
pop
adc
scas
iret
cltd
cmp
push
dec
sbb
mov
mov
pushf
ja
adc
adc
push
ret
dec
mov
es
hlt
and
rorb
add
xchg
aas
fs
fyl2xp1
add
pop
mov
fisubl
inc
dec
shlb
or
lock
xchg
test
sarb
test
xchg
or
lods
mov
popa
enter
enter
dec
lret
xchg
add
shlb
mov
mov
cmpsb
mov
xor
je
and
jnp
xchg
add
ja
shrd
sbb
fsubl
stos
mov
out
aam
mov
jecxz
sbb
xchg
sti
lock
ficompl
orl
lock
lahf
adc
lret
and
add
repz
ss
pop
aas
pop
aas
mov
pop
aas
das
popf
dec
mov
xor
arpl
lea
adc
add
cld
pop
push
ja
movsl
or
test
or
mov
cmp
les
cmp
xchg
adc
into
es
push
iret
ljmp
iret
jae
sub
mov
xchg
xchg
adc
mov
sbb
sub
shlb
mov
mov
mov
mov
xchg
mov
clc
cmp
add
fwait
stc
add
jp
push
pop
mov
mov
in
outsb
pop
push
push
test
out
in
jbe
pop
push
fldt
adc
mov
mov
lret
jnp
inc
in
pop
call
dec
mov
cmp
jno
push
xchg
sahf
and
jmp
lcall
clc
pop
add
jmp
push
arpl
push
xchg
imul
mov
cmpb
or
test
jp
popf
inc
sub
mov
xor
fxch
xchg
mov
out
push
cltd
hlt
dec
sbb
or
sbb
std
dec
cwtl
lahf
pop
or
imul
lea
jge
mov
jb
sti
orl
mov
sub
jmp
orl
mov
sub
rcll
xchg
fistps
sbb
dec
or
fildl
mov
mov
js
jecxz
sub
cmp
sub
pusha
and
mov
fcmovnbe
rorb
scas
insl
pop
aam
xchg
mov
shll
repnz
andl
jp
mov
or
in
sub
cli
or
ja
jbe
add
ds
daa
fidivrs
push
movsl
xchg
int
gs
add
inc
mov
inc
mov
and
jae
cmp
js
lahf
push
iret
and
movsb
pop
fs
and
lods
cld
jbe
mov
fstp
cmp
lret
ss
in
jmp
lea
push
push
cmpsl
add
xchg
xchg
test
mov
sub
add
cmpsb
xchg
or
ret
jae
cmpsl
inc
js
xor
popf
mov
cmpsb
rol
inc
aad
pop
xor
rclb
pop
dec
movsb
mov
add
insb
push
sahf
inc
adc
pop
sti
dec
xchg
js
test
sbb
test
aaa
jmp
into
xchg
sbb
jle
mov
and
adc
dec
rorl
or
sti
add
push
xchg
mov
icebp
push
les
adc
cwtl
pop
mov
loop
push
scas
xor
jge
aad
in
inc
xlat
push
inc
xchg
mov
ss
sti
dec
jns
adc
cmc
mov
jecxz,pt
out
inc
push
pusha
sub
add
pop
stos
arpl
push
mov
jmp
or
pop
cld
xchg
loope
xchg
jg
ds
xor
pop
mov
sbbb
call
dec
and
nop
inc
jle
add
mov
jp,pt
pop
inc
push
push
push
ds
sub
dec
adc
add
out
push
js
sar
cmp
es
sbb
out
repz
test
mov
push
pop
arpl
sbb
push
in
out
popl
popa
cmp
cmpsb
push
xchg
add
test
mov
decl
jge
pusha
adc
rcrl
outsl
mov
push
call
sbb
push
insb
xchg
jge
in
xchg
popa
push
outsb
push
mov
frstor
pop
add
sub
test
stc
xchg
push
mov
mov
push
fs
ret
mov
ret
jbe
jle
sub
dec
bnd
int3
fidivl
push
mov
jne
pop
cli
jg
pop
ljmp
and
shlb
or
lret
js
je
cmp
outsb
pop
fdivr
push
add
cmpsl
int3
cmp
cmp
inc
rorl
addl
inc
rol
sbb
in
inc
jno
clts
sub
outsb
lea
enter
mov
imul
scas
dec
jge
cmp
mov
dec
lret
out
sub
push
or
stos
loope
dec
sub
ja
mov
or
pop
xor
inc
mov
pop
mov
call
rolb
mov
sbb
mov
inc
mov
out
add
int3
lea
xorl
jmp
push
add
sti
das
jle
test
adcl
xor
outsb
add
loop
jp
or
pop
ja
lock
mov
mov
mov
cmp
fdivs
mov
or
lret
imul
fcmovne
rol
bound
mov
int
xchg
enter
inc
mov
xor
jae
cmpl
xchg
push
imull
out
adc
outsb
fsubrl
or
sbbl
push
lret
push
xchg
xchg
insl
insl
call
sub
scas
ja
stos
pop
jmp
loope
unpckhps
jbe
cmp
and
shll
sarl
clc
add
leave
icebp
test
xor
xchg
jbe
jbe
sbb
jbe
inc
jge
out
pause
xor
out
movsb
addr16
push
or
cmp
test
cmp
xor
js
jns
cmc
mov
xor
mov
dec
pop
jle
movsb
pop
clc
das
add
cltd
mov
push
jo
out
pop
rcrb
pusha
xchg
mov
pop
cmp
fcompl
push
sbb
or
int3
xchg
out
cmpsl
mov
rorb
out
and
pop
xchg
js
aad
push
jp
sub
mov
pop
dec
pop
mov
xor
ljmp
cmc
dec
nop
ret
inc
xchg
cmp
jl
faddl
xor
cmp
push
clc
cmp
arpl
add
adc
scas
xor
imul
insl
inc
out
sahf
and
lahf
mov
lods
std
inc
cmc
xor
shll
cmpl
wbinvd
xchg
push
jo,pn
pop
addr16
cmp
in
jp
mov
lock
mov
mov
jecxz
sarb
or
jbe
repz
add
push
rcl
idivl
add
pop
dec
ffree
adc
sub
int
inc
adc
sbb
push
xchg
fcomp
add
repnz
jne
inc
sub
pop
int
or
ficoml
ljmp
into
test
sahf
jge
and
jge
dec
clc
rcr
or
mov
addr16
jmp
sbb
lods
negb
xor
mov
es
cmp
dec
mov
cmp
jp
ror
aaa
xchg
shlb
pop
bound
mov
test
arpl
or
loope
fyl2x
ficomps
xlat
fadd
cmpb
jae
xchg
mov
pop
sub
add
mov
lret
outsl
mov
push
xor
pop
mov
aaa
or
pop
jecxz
sahf
sti
xor
xor
add
mov
push
inc
jmp
cmp
xchg
daa
fwait
enter
adc
push
out
movsb
arpl
inc
jno
xor
in
mov
test
loop
push
jp
movsl
adc
push
enter
jmp
cld
cmp
jno
cmp
sbb
lret
mov
mov
mov
cmp
mov
roll
sub
arpl
xor
lret
sbb
lods
hlt
sbb
jecxz
hlt
dec
xor
mov
adc
sbb
rcrb
ret
mov
enter
inc
xor
push
pop
das
shlb
loopne
insb
scas
sbb
inc
lret
pusha
cmp
add
xorl
adc
arpl
push
adc
ja
fnstenv
xor
mov
icebp
insb
imul
inc
mov
ds
insl
sub
dec
bound
sub
and
or
fildl
cmovbe
sbb
inc
fs
fcoms
xchg
pop
test
cwtl
sbb
and
xlat
push
test
pop
jns
cltd
enter
adc
addl
int
xor
fisubrs
xor
add
rclb
imul
xorb
shr
mov
xor
or
sbb
cmp
popa
add
push
cmpsb
lds
mov
mov
sbbb
daa
inc
ror
inc
pop
mov
mov
push
leavew
sahf
mov
test
lret
xor
cld
inc
jnp
popf
sub
andb
enter
lea
ss
push
add
push
lcall
shll
mov
out
fisubrs
lcall
adc
movsl
inc
loope
mov
inc
cld
daa
push
mov
pop
jne
fs
mov
sti
and
andb
dec
call
dec
fldenv
sbb
outsb
push
inc
out
into
int3
cli
sahf
lahf
enterw
jl
push
xchg
fmull
insb
or
xor
cmp
popf
fcmovu
push
out
scas
sub
jge
xchg
pop
test
arpl
push
jae
jp
std
pop
xor
inc
movsl
in
int
mov
lock
sbb
sub
sub
cmp
sub
jns
sti
imul
fdivp
mov
negl
pop
idivb
aaa
sbb
add
lea
adc
or
mov
mov
rcrl
dec
jmp
stc
mov
scas
enter
or
sub
cs
mov
dec
mov
pop
mov
cmp
sahf
push
mov
pop
pop
xor
jmp
cmp
push
js
sub
sub
push
add
test
adc
add
mov
fldl
inc
add
in
scas
addr16
push
xchg
xor
lea
or
pop
les
dec
xchg
mov
jl
pop
rcr
push
icebp
lds
pop
mov
or
xchg
into
push
push
push
and
cmp
stos
mov
xchg
push
std
rcll
aas
loope
and
adcl
pop
gs
jge
enter
cmp
int
cmp
nop
mov
or
test
into
xchg
sti
ds
jno
jl
mov
inc
and
jns
lahf
push
sbb
xchg
fwait
mov
mov
jg
call
push
inc
int3
add
xor
popa
lods
dec
sahf
xchg
sub
inc
out
ja
adc
sbbl
mov
test
je
je
cld
std
xor
or
das
movsl
cmp
pop
mov
stos
or
scas
xor
fs
xchg
jecxz
add
jbe
sub
jg
daa
movsb
repnz
lret
push
dec
lods
add
push
test
jae
and
xchg
jno
jmp
arpl
rol
dec
out
or
subl
pop
stos
movsb
sti
sub
scas
stos
sub
movsb
mov
rcl
or
pushf
imul
lods
mov
cld
aam
and
les
les
sbb
add
call
cld
icebp
push
dec
mov
movsl
push
ljmp
fisubrl
cs
sub
push
lods
ffree
out
mov
rcl
jno
in
pop
push
or
cmp
aaa
rcrb
loopne
lret
jo
sub
fdiv
aam
addl
sahf
add
pop
pop
xchg
repz
test
xor
xor
xor
jge
mov
rcrl
stos
stos
mov
shlb
sub
mov
mov
fadds
dec
aaa
cltd
and
jmp
lret
inc
xchg
mov
ss
fldcw
aas
mov
gs
sub
loop
or
shrb
add
cltd
cmpsb
std
mov
inc
dec
sub
jb
insb
xor
push
notl
fsqrt
imul
stc
and
adc
scas
stos
enter
pop
sub
push
push
pop
lea
push
push
or
mov
aaa
mov
dec
mov
cmp
fsubp
xor
mov
push
xor
fcmovnu
inc
js
hlt
cli
adc
mov
jp
and
sub
sbb
nop
dec
fwait
outsb
clc
mov
cmp
xor
outsb
cmp
sarl
push
aad
mov
js
sbb
les
jle
cli
dec
xlat
addl
and
add
and
dec
insl
aam
cmp
dec
icebp
fsubp
cmpb
in
push
into
out
jns
cmpsb
outsb
movsl
cmp
dec
xchg
inc
aad
and
inc
jno
pop
sub
push
pop
repz
pushf
sar
sub
xor
push
sbb
sub
push
pop
xor
pushaw
jno
sub
dec
push
pop
ror
and
das
andb
inc
pop
mov
lahf
fisubrs
xlat
shl
or
jmp
xorb
adc
cmc
sub
lods
out
xchg
mov
mov
adc
lahf
ljmp
cmp
jno
fmulp
mov
jnp
push
notl
mov
fscale
inc
xchg
sarl
pop
mov
aad
cmpb
mov
pop
loope
data16
fwait
cltd
cmp
out
push
popf
dec
inc
jp
adc
adc
xor
pop
mov
push
lret
mov
outsl
add
cmpsb
ja
notl
bound
fistl
xor
xchg
aaa
adc
xor
in
mov
imul
push
cld
mov
mov
xor
cwtl
sbbl
ljmp
pop
es
inc
jnp
fisubrl
push
sarb
push
iret
and
and
enter
gs
mov
xlat
sarb
adc
mov
mov
or
clc
dec
loop
cmp
imul
out
push
adc
clc
xor
mov
inc
movsl
add
inc
scas
mov
int
mov
dec
fidivrs
dec
sub
mov
xor
jno
pop
outsl
movsl
sarl
xchg
fdivrl
aad
and
into
dec
outsl
dec
leave
xor
dec
and
mov
into
adc
mov
mov
call
cmp
and
push
fisubrl
test
push
seta
jbe
cli
push
scas
mov
leave
inc
lea
or
add
ja
das
iret
lock
movsl
out
sbb
mov
xchg
cltd
inc
loopne
test
pop
adc
lahf
arpl
mov
pop
sub
aas
call
out
mov
and
in
pop
syscall
pop
sahf
or
ret
in
and
fisttpl
loopne
lret
xchg
es
sbb
sarb
stos
mov
cmp
and
push
mov
scas
sub
sub
and
dec
pop
shll
or
mov
cmp
mov
pop
mov
movsb
test
pop
outsb
jb
and
adcb
hlt
dec
out
adc
pop
in
sbb
sub
push
int
push
jle
pop
xchg
imul
and
jno
jecxz
repz
daa
mov
stos
fildll
xor
lock
xor
fstp
repnz
mov
outsl
rcrl
test
das
aad
popa
pop
leave
lods
xchg
mov
jb
cld
push
arpl
sbb
jbe
and
lret
ljmp
and
mov
insl
pop
push
outsb
inc
ja
adc
ljmp
dec
int
into
outsl
fsubrs
adc
call
cwtl
rclb
in
je
dec
mov
sbbb
mov
inc
popa
pop
insl
sub
inc
push
cmp
rorb
ja
mov
fstpl
fwait
es
mov
mov
cmp
ds
lret
sbb
sbb
dec
jnp
out
sarb
lds
add
adc
lcall
test
adc
fistps
jmp
push
adcb
push
push
ret
fsubp
sub
fidivs
pop
add
mov
pop
mov
or
xchg
ret
sub
inc
xor
rol
divb
lcall
lock
jecxz
ret
cs
sub
xchg
jnp
xchg
push
inc
sub
nop
enter
xor
jge
mov
pop
push
jne
xchg
fsubrs
je
dec
pop
pop
fildl
push
xchg
insb
sbb
sbbb
sub
cld
cmpsl
aam
pop
xchg
mov
ret
in
ljmp
popa
pop
add
jp
lods
inc
std
mov
cmp
sbb
lock
xlat
call
jecxz
sbb
mov
lahf
lcall
mov
sbbb
testb
mov
lds
mov
push
xor
insb
dec
dec
fwait
rcrb
adc
fcomps
pop
cmp
je
enter
inc
in
and
cld
repnz
fwait
push
out
movsl
test
mov
in
lret
lods
roll
mov
imul
inc
sub
outsb
or
pusha
ret
inc
pop
aam
lea
das
sti
sub
lcall
or
hlt
lahf
mov
xchg
sbb
loopne
cwtl
cld
scas
mov
push
in
and
icebp
lea
mov
sub
pop
pop
pop
and
cmp
lds
push
lds
ss
pop
and
test
sbb
addr16
add
cld
imul
mov
out
inc
cmpsl
movsl
and
aas
cs
jbe
pop
lea
jne
lods
push
jne
or
orb
xchg
out
sbb
xchg
test
lret
or
ret
mov
adc
in
sub
callw
inc
mov
dec
xor
test
insb
inc
adc
jb
jecxz
out
cli
push
mov
iret
xchg
in
push
mov
inc
mov
mov
mov
imul
xchg
pop
cli
xor
or
mov
push
sub
xchg
push
ret
mov
bound
rcll
popa
cmpsl
adc
addr16
mov
loopne
and
test
cmp
mov
cmp
loopne
sub
sbbl
jl
xchg
outsl
cmpsb
lahf
ss
and
cmp
xchg
mov
int
popa
ret
jae
cmpb
and
xchg
sbb
fdivrs
imul
in
xor
imul
aad
mov
pushf
xchg
pop
mov
sub
aam
std
ror
inc
mov
inc
shll
pushf
dec
cmc
xchg
je
jnp
call
dec
cmpxchg
sub
push
mov
out
in
sbb
inc
cmc
jge
into
or
add
push
xchg
lods
jno
push
imul
adc
xchg
lahf
xchg
minps
arpl
gs
pop
popa
dec
cmp
pop
iret
stc
scas
sub
inc
pop
push
std
xchg
ss
push
sub
test
push
cmp
adc
mov
push
add
cltd
stc
xor
in
mov
mov
push
push
cmp
pop
mov
and
inc
ja
xor
sahf
mov
stos
cmp
insl
jle
test
out
data16
nop
inc
imul
add
jno
adc
mov
push
mov
jne
lea
pop
cmp
cmp
and
mov
xor
test
test
push
mov
fmuls
adc
adc
mov
ds
cmp
rorb
nop
jle
cmpsl
mov
add
lods
out
jl
sub
sarb
iret
lds
mov
mov
adc
sub
fsubrs
loopne
fs
or
sub
jbe
push
sub
mov
dec
mov
bound
push
lods
jge
clc
mov
loope
sbb
rcrb
and
jb
xor
push
bnd
jns
imul
xchg
imulb
icebp
xchg
or
adc
repnz
iret
inc
in
mov
movsl
cvtps2pd
push
or
inc
adc
cmpsl
and
mov
scas
xor
cmpsb
test
das
outsb
and
mov
mov
test
mov
mov
mov
jp
push
inc
mov
js
inc
inc
adc
js
mov
push
sub
lret
mov
mov
jbe
or
pushf
clc
aam
outsl
rcrb
gs
adc
pop
mov
inc
cmp
xchg
jbe
bound
add
pop
jcxz
cmpl
rcrl
daa
movlps
jb
cmp
and
push
mov
mulb
into
mov
decl
pop
mov
mov
inc
addr16
insb
adc
imul
lock
loop
test
dec
mov
idiv
and
in
jne
test
push
repz
mov
jp
cs
pop
push
inc
js
nop
negl
mov
fwait
sub
lahf
mov
cmp
add
mov
mov
push
and
icebp
stc
hlt
or
dec
cs
pop
or
insl
or
adc
insl
mov
subl
sti
dec
mov
jb
scas
rcll
ja
ja
and
sub
push
sahf
aaa
cmp
out
sbb
dec
mov
std
xchg
std
pop
mov
repnz
test
jmp
ljmp
pop
cmp
pop
and
loopne
test
mov
xchg
inc
call
sub
push
idivl
mov
dec
cmp
clc
mov
jl
rdtsc
jno
popf
frstor
out
xchg
sub
push
cmp
in
paddd
mov
in
xchg
adc
in
and
cmp
inc
or
notb
ja
aas
cwtl
adc
loope
pop
push
pusha
js
movsb
xorl
into
adc
pop
jg
outsb
pop
and
inc
imul
fisubl
fisttps
imul
inc
xor
fcoms
xchg
jmp
incl
addr16
xchg
xchg
inc
rolb
ja
aam
mov
push
pusha
adcb
pusha
lock
xchg
subb
out
test
or
dec
cmp
imull
pusha
lea
lret
jle
push
out
shll
into
orl
loop
pop
fistl
mov
stos
scas
push
mov
dec
addb
divb
jl
cmpl
dec
jge,pn
test
jl
pop
lea
mov
sbb
rcrl
orl
sub
loop
add
xchg
cld
nop
mov
lret
jmp
or
ja
push
dec
dec
out
sub
repz
stc
mov
add
in
mov
neg
stos
pop
push
es
xchg
adc
xor
insl
pop
repnz
xorl
adcb
inc
loope
lret
or
mov
jge
pop
push
lea
jg
call
cmp
mov
scas
xor
fadd
cmp
push
mov
mov
imul
pop
fstpt
push
fimull
aad
push
pushf
aad
add
xor
int
aas
js
das
or
inc
dec
mov
add
sahf
add
inc
outsb
dec
sbb
fstps
lcall
pop
pop
hlt
std
movsl
cmp
sub
or
jno
out
jp
add
mov
and
add
jp
and
pop
cmp
in
mov
sub
mov
ss
or
das
jp
icebp
jmp
inc
sbb
shlb
jno
lcall
cmp
int3
aam
aas
aam
iret
or
sub
addl
push
push
outsl
mov
pop
mov
inc
mov
jnp
xchg
jg
daa
xlat
test
xchg
scas
popl
mov
cmp
jb
mov
ljmp
movsb
xchg
das
and
add
cmp
scas
aad
adc
lds
cmpsb
jecxz
dec
je
adc
xchg
bound
mov
fwait
mov
mov
adc
notb
adc
sub
rclb
cmp
dec
xor
stos
adc
push
pop
sbb
and
adc
adc
push
mov
and
dec
xchg
push
pop
pop
inc
aas
jp
jnp
out
rol
xchg
or
inc
add
push
imul
push
push
xchg
rorl
cmpsb
and
daa
fdivl
mov
mov
aad
and
jecxz
ror
popf
mov
jmp
in
stc
out
daa
mov
inc
lcall
gs
xor
sub
inc
fisubrl
data16
xor
xchg
jae
xchg
inc
xchg
fistps
and
cltd
nop
mov
sbb
jge
aam
mov
fadd
dec
add
notb
xchg
std
es
and
push
sbb
pop
dec
fwait
loop
sarb
aas
ja
inc
mov
sub
cmpsl
fidivrs
inc
mov
dec
call
inc
int3
pop
mov
sarb
push
push
adc
pop
jns
dec
mov
or
jo
sbb
adc
mov
int
inc
mov
push
test
mov
push
jo
outsb
out
pop
or
inc
or
jne
and
adc
jno
jmp
mov
aas
mov
rol
fcomi
icebp
mov
or
mov
jnp
and
cmp
push
sbb
xchg
pop
mov
and
adc
movsl
lahf
mov
sub
add
sub
jecxz
adc
fildl
jl
mov
scas
cs
jge
xchg
ja
dec
js
adc
aam
cwtl
xchg
xor
popa
jecxz
sbb
int3
cmpsb
inc
adc
ret
lods
mov
cltd
jmp
mov
mov
int
xor
sbb
push
push
push
lods
cmp
mov
or
add
setns
or
es
fcomps
push
xchg
call
inc
pop
aad
sbb
lcall
ljmp
sub
insb
jbe
cmpsl
push
pop
sbb
jno
iret
push
jae
rcr
imul
and
push
cmpsl
cli
loope
pop
add
je
xchg
insb
mov
addr16
pop
add
push
inc
sbb
scas
mov
mov
push
mov
aaa
into
inc
mov
or
int
stos
adc
loopne
inc
sub
jae
lahf
pushf
push
cwtl
arpl
push
pop
outsb
adc
push
mov
jge
int
mov
mov
and
movsl
cmp
xchg
push
push
scas
outsl
fstps
test
nop
aas
test
mov
scas
std
inc
dec
xchg
test
xchg
gs
ret
cmp
sbb
dec
jle
pop
push
out
data16
das
mov
jmp
mov
mov
or
aad
push
cwtl
jp
jmp
push
pushf
pop
pop
xchg
je
aad
gs
xchg
mov
dec
stos
push
daa
xchg
cmpb
mov
mov
insl
popa
xor
daa
loop
mov
xlat
pop
gs
pop
mov
xchg
ret
cld
push
mov
imul
loope
mov
and
cmp
fisttps
inc
mov
add
pop
cs
mov
xchg
aas
xchg
pop
lcall
daa
pop
loopne
xor
das
xor
xchg
pop
std
sub
sbb
push
bound
inc
add
and
jae
data16
pop
loopne
mov
adc
ja
repz
and
insl
lock
lret
sbb
or
jl
lods
inc
inc
leave
xchg
add
inc
push
mov
mov
pop
mov
pop
cwtl
mov
out
push
xchg
mov
jbe
outsl
cmp
and
popf
into
pop
repz
cmp
insl
push
sub
cmp
jle
push
data16
adc
outsb
dec
outsl
pusha
aaa
and
dec
hlt
sar
loop
insb
js
jb
mov
push
hlt
addr16
repz
mov
adc
pop
cmc
aas
sub
sub
rcrb
cmp
les
out
shl
mov
out
out
outsb
gs
adc
xor
cmp
das
mov
mov
repz
mov
mov
cmp
mov
int3
and
adc
push
gs
mov
call
dec
mov
mov
push
repnz
lods
add
aad
sub
cmp
repnz
les
pop
and
add
bound
sbb
inc
or
jo
push
dec
lea
pop
sub
and
popf
pop
xchg
js
jbe
out
sub
cmp
mov
inc
or
pop
jo
dec
lahf
jmp
movsl
cmp
mov
cmc
cmp
dec
dec
or
pop
dec
cmp
mov
cltd
nopl
imul
mov
dec
inc
js
lahf
aad
outsl
inc
pop
mov
push
and
pop
addr16
push
cmc
jmp
cmp
add
aaa
pop
jae
sbb
std
cmpl
data16
mov
xor
mov
dec
jbe
cmpsb
push
add
lods
pop
leave
sbb
xchg
mov
call
sbb
repz
data16
xchg
xchg
ror
jg
enter
dec
dec
lea
loope
xchg
mov
adc
dec
mov
push
inc
mov
lahf
add
test
mov
push
adc
ficomps
scas
cli
aaa
mov
fimuls
inc
sub
cmpsl
sub
pop
or
ret
sar
std
push
mov
jb
dec
fstpt
sti
notb
enter
jg
out
xor
popa
stc
int3
inc
push
xchg
pop
mov
add
bound
incb
scas
xchg
in
cmc
mov
pushl
add
popaw
out
push
cmpsl
push
stos
inc
popf
adc
and
mov
scas
push
pop
aad
into
ret
mov
std
or
mov
xchg
addr16
movb
js
xor
adc
sub
cs
dec
daa
push
imul
pop
pop
outsl
arpl
mov
in
aas
or
sbb
xchg
sbb
push
movsl
xchg
sbb
decl
adc
fdivrl
xchg
adc
sbb
out
xchg
sub
mov
orps
shll
fldt
sbb
inc
xor
mov
cltd
adc
cmp
hlt
repnz
popa
stc
aam
bound
push
sub
stos
pop
enter
lods
fcompl
mov
and
push
push
mov
pushf
es
push
adc
mov
cmpsl
lret
mov
lds
push
jmp
mov
lods
or
jno
aaa
pop
sbb
jno
mov
je
cmpsb
aad
fisubl
scas
iret
jne
sar
push
add
scas
sbb
jbe
mov
jge
xchg
mov
jmp
int
inc
outsb
and
xchg
popf
mov
or
cmpsb
push
push
push
jge
iret
dec
repz
and
sub
iret
cld
fcomps
dec
lret
sbb
loop
test
repnz
aaa
adc
inc
test
test
mov
mov
jle
incb
insl
dec
xor
in
into
in
in
rcr
gs
mov
call
call
out
loop
in
leave
in
and
xlat
adc
mov
cmp
mov
lcall
push
test
gs
test
jno
dec
xchg
xor
repz
mov
pop
out
fs
addr16
sahf
int3
push
loopne
sub
xchg
adc
scas
jge
jae
loopne
dec
es
sub
in
mov
pop
stc
cmp
pop
lock
sbb
cltd
fcmovbe
mov
cmpsl
repnz
je
xchg
sbb
int
pop
jbe
xor
data16
cmp
por
imull
and
idivl
ja
sbb
inc
stos
ljmp
iret
das
cmpsb
xchg
or
pop
add
repz
divl
sub
movsb
ret
pusha
push
orl
movsb
add
lock
sti
out
push
fmuls
int3
xchg
mov
pop
imul
shl
lret
mov
imull
sub
pop
lock
js
int
in
sbb
je
hlt
repnz
lcall
xor
jnp
jae
sub
mov
ret
adc
mov
pushf
mov
fs
pop
sbb
sbb
sahf
imul
sbb
dec
mov
xchg
lock
mov
ret
sub
test
jns
movsb
inc
sub
or
inc
push
pop
mov
cmp
jmp
orb
lea
and
or
or
aad
sub
push
or
lret
push
arpl
or
mov
int
mov
into
adcb
adc
and
call
dec
and
xorl
dec
pop
jmp
xor
xorl
stos
push
out
jne
xchg
cmp
and
mov
mov
sbb
mov
das
ss
mov
mov
mov
lret
inc
dec
outsb
jg
push
std
lods
dec
inc
into
sahf
xchg
aad
movsl
dec
in
push
xchg
jl
or
dec
lods
setp
pop
or
adc
aaa
add
into
mov
push
iret
dec
dec
jne
nop
or
in
push
test
lahf
and
popl
imul
mov
lock
dec
sti
aad
je
dec
jmp
inc
xchg
xor
fldt
jb
push
or
xor
cmpsb
test
mov
mov
loope
test
jmp
mov
cmpl
ljmp
nop
loopne
lret
nop
add
outsb
cwtl
xchg
jae
fidivs
mov
out
dec
mov
icebp
push
clc
int3
movsl
ds
pop
xchg
inc
movsl
mov
push
adc
fists
mov
and
inc
cmc
adc
cmp
lods
int
lods
insl
cld
movsb
mov
aam
scas
xchg
movsl
mov
xchg
ret
cs
loope
add
jg
pop
jecxz
sub
inc
push
fcomps
insb
mov
insl
or
ja
push
int
hlt
insl
sbb
test
in
jp
sub
xchg
pushf
add
cmp
xadd
mov
divb
ret
jmp
sbb
pushf
in
adc
data16
in
cwtl
inc
sub
and
cltd
inc
stos
fcomps
icebp
ficomps
test
into
stc
push
out
mov
jb
adc
push
sub
je
xchg
push
in
adc
aad
add
test
jle
xchg
setp
xchg
lret
lock
repnz
call
push
or
dec
and
mov
lea
push
jns
imul
and
mov
fcmovu
mov
add
test
xchg
lret
mov
push
ds
mov
jp
or
mov
pop
sbb
adc
shl
lock
imul
outsb
xor
jae
in
mov
mov
xchg
mov
js
push
push
and
outsb
pop
add
aam
cmpl
push
cli
aam
xchg
stc
mov
jmp
sub
jecxz
mov
mov
testb
mov
mov
add
cwtl
cld
andl
sbb
dec
mov
lret
dec
ficoml
or
sub
inc
jge
ficoml
inc
mov
fnstsw
jb
add
dec
mov
fwait
dec
shlb
jp
sbb
iret
push
into
cmc
cmp
jbe
insl
mov
insl
inc
testb
into
daa
cmp
mov
jne
mov
xchg
cmp
jne
mov
scas
cmpsb
pop
pop
and
call
xorl
stos
fsubrp
movsb
lea
fwait
je
fadds
dec
into
fiaddl
addr16
movsb
fstpt
jle
push
pushf
jl
mov
jl
pop
fldenv
jbe
push
push
mov
mov
mov
lds
ja
je
and
or
andl
inc
xor
popa
repz
mov
imull
xor
stos
jbe
test
fnstenv
push
out
dec
or
dec
push
jb
rorl
sbb
mov
icebp
mov
js
inc
aad
cs
pop
inc
lahf
into
mov
int
mov
mov
fildll
call
adc
cmp
sti
cld
insl
mov
pop
lret
mov
loopne
add
out
pop
test
nop
mov
movsb
lods
push
mov
popa
stos
lcall
mov
or
lret
dec
mov
inc
lods
inc
int3
mov
cmpl
lds
cmp
mov
roll
test
xorb
dec
out
sbb
inc
nop
gs
push
js
bound
push
mov
push
imul
icebp
push
lods
push
and
inc
sbb
jp
test
in
sbb
addr16
aam
jbe
mov
hlt
ljmp
push
add
lock
jmp
mov
fnstenv
inc
sahf
cmp
cld
inc
jns
lret
js
pusha
add
pushf
or
aad
icebp
adc
ret
adc
addb
and
cmp
push
repnz
sahf
sarb
sub
jmp
cmp
popf
aam
test
std
cmp
xor
xlat
inc
fcomp
sbb
jae
pop
push
aas
jns
push
jl
pusha
sbb
sarb
lds
sbb
xchg
arpl
mov
cmp
jle
in
cltd
mov
jge
push
or
ljmp
in
pop
test
fxch
jp
xor
jmp
sub
mov
push
push
addb
fadds
mov
outsl
add
repz
es
pop
mov
out
dec
ljmp
cltd
addr16
dec
adc
mov
dec
aam
mov
add
lcall
inc
inc
sarl
xor
dec
pop
sbb
jbe
jne
aam
fwait
adc
mov
cmp
jno
mov
jecxz
adc
ss
inc
cmp
sbb
adc
sub
ja
ljmp
mov
or
jnp
in
das
mov
pusha
in
jecxz
insb
sub
shl
jg
jb
pop
pop
lock
outsb
mov
xchg
jae
lahf
ja
test
cmp
mov
or
imul
testl
cmp
int
push
aam
inc
mov
loop
xor
test
movsb
xchg
and
call
mov
sub
jo
push
rcll
je
xor
add
sub
popa
sub
xlat
aaa
enter
sbb
lret
mov
sahf
dec
push
jl
imul
sbb
inc
push
cmp
jb
mov
in
mov
sub
pop
mov
jl
xor
rcll
aad
pop
xchg
jmp
xchg
fdivrl
push
or
rorl
out
ret
leave
les
aam
or
add
rcl
pop
or
jg
pop
mov
loope
ficompl
scas
int
jg
xchg
sub
pop
jb
clc
aaa
and
cmp
or
pop
in
addr16
lds
xchg
cmpsl
push
sub
cmpl
test
mov
jp
sub
sub
jns
mov
jno
out
xor
and
sti
sti
push
dec
ljmp
hlt
adc
ja
fcoml
inc
jecxz
and
shufps
sbb
sub
movsl
ss
mov
lcall
dec
in
xor
lret
rcrl
push
ret
mov
pop
mov
jno
jne
stos
lods
mov
ds
inc
pop
repnz
dec
ds
fisttpll
in
xchg
adcb
push
add
js
inc
fcoms
mov
xor
jo
clc
sub
in
std
push
fcompp
adc
push
movsb
pop
or
xchg
cmp
or
fwait
loop
out
mov
pop
mov
jns
mov
les
je
xor
repnz
aas
lret
dec
add
adc
jp
pop
in
or
add
les
inc
cwtl
aam
cmpsb
mov
pop
jmp
sbb
shrl
add
call
push
nop
fimull
dec
enter
inc
mov
ret
test
ds
cltd
icebp
scas
xor
push
mov
inc
mov
repz
rorl
and
dec
pop
hlt
jae
scas
orl
jecxz
out
pop
imul
adc
pop
cwtl
cmp
pop
push
ljmp
test
dec
in
or
jg
xorl
ljmp
ret
pop
pop
imulb
je
sbb
push
add
inc
cli
mov
mov
dec
adc
mov
sub
jae
rclb
mov
jne
jp
mov
lcall
sahf
or
test
into
popf
decb
dec
aad
jno
mov
dec
test
add
mov
mov
lea
roll
sbb
push
and
or
lods
push
mov
or
hlt
adc
mov
int
insb
push
mov
mov
pusha
stos
leave
hlt
or
nop
adc
popa
fsubrp
outsl
pop
jno
insb
xchg
mov
push
in
fs
xorl
mov
inc
scas
add
xor
jg
mov
cmp
mov
jmp
fsubrl
mov
and
gs
xor
cwtl
negl
test
mov
mov
cmc
ret
xchg
loopne
lods
sbb
ja
shlb
cmp
or
fldl
add
inc
mov
leave
inc
xchg
loopne
add
or
fisubl
pop
mov
xor
and
xchg
mov
iret
outsb
into
and
fdivl
mov
push
pop
jb
cmpsl
lcall
int3
fsubr
pop
sbb
cmpsb
repz
arpl
leave
lods
adc
mov
rol
mov
and
dec
ss
cmp
insl
fldt
mov
mov
cs
fsts
push
sti
sub
test
nop
mov
mov
daa
fsubl
dec
ds
movsb
push
mov
dec
mov
mov
jp
lahf
xor
add
out
push
leave
cmp
loope
sub
xlat
nop
sub
xchg
popa
pushf
mov
roll
jno
nopl
shrb
int3
xchg
imul
pop
faddl
cltd
lret
mov
aas
pop
lea
out
test
clc
das
mov
das
jnp
jnp
xchg
dec
push
nop
cmpl
xchg
nop
mov
in
icebp
and
les
aaa
mov
cmp
sbb
cmpsl
out
mov
sahf
pop
aam
pop
ss
repnz
push
popf
xchg
xlat
in
nop
add
loop
pop
mov
lds
leave
lods
inc
fucomi
lea
push
lahf
sbb
xchg
negl
dec
cmp
push
mov
xor
adc
pop
in
add
out
outsl
xor
std
sbb
dec
ret
movsb
jno
test
cwtl
pop
orb
jne
sub
cmp
ret
stos
jne
push
out
xor
stos
sub
inc
sbb
push
cmp
out
pusha
add
std
outsl
aam
fistpl
popf
dec
mov
mov
push
mov
leave
xchg
ret
enter
and
xchg
cmc
and
jg
and
sub
mov
lea
mov
jo
out
stc
jl
sti
jno
data16
mov
lea
fs
adc
dec
inc
jb
fcmovnb
cmp
pop
rol
orb
mov
mov
test
cmc
rcrl
jp
aad
and
cmp
stos
adc
jl
jle
sbb
enter
jmp
outsb
movsl
adc
out
push
and
mov
in
adc
pop
incl
dec
inc
repz
push
enter
adc
orl
mov
mov
insb
dec
sub
jbe
scas
in
int3
push
xor
popa
das
rcrb
or
das
adcl
mov
dec
sub
jb
cmp
dec
mov
xchg
imul
jecxz
sub
loopne
call
pop
int3
repz
lahf
ss
adc
dec
cmp
mov
inc
inc
in
adc
jo
mov
adc
push
push
outsb
ljmp
jecxz
dec
repz
cmp
loop
dec
fmul
dec
std
test
dec
xor
push
xor
js
fldcw
push
mov
popa
lea
int3
add
dec
subb
aam
test
adc
addb
pushf
add
xchg
loope
lcall
pop
adc
in
mov
xchg
inc
and
shrl
pop
test
jge
sarl
pop
or
imul
xor
mov
adc
or
jbe
int3
push
das
mov
push
push
imul
andl
push
repz
xchg
loop
fiadds
shr
inc
mov
pusha
popa
pop
cmp
mov
push
sarb
add
sbb
mov
mov
jne
insl
mov
repz
imul
dec
cltd
loop
pop
adc
negb
add
inc
bound
mov
mull
cmp
and
aas
je
sbb
xchg
jo
cmp
insb
enter
fs
shll
out
shll
pop
xor
xchg
jne
out
das
and
push
mov
or
call
popa
in
mov
js
inc
jbe
jmp
jle
or
push
and
rcll
sbb
fdivs
sbb
imul
cwtl
aam
clc
cmpsb
inc
mov
fdivl
pushf
pop
adc
jmp
push
aad
mov
mov
lret
sti
xchg
inc
lods
push
push
out
sbb
inc
inc
out
pop
shlb
test
repnz
outsl
add
mov
push
and
xor
les
xchg
xor
leave
cltd
jb
mov
popf
xor
sub
dec
xlat
inc
testb
inc
bound
insl
inc
fmull
icebp
popa
scas
inc
xchg
test
lret
pop
cmpsl
push
xor
sbb
test
cld
in
addr16
loopne
mov
push
ljmp
adc
jnp
lcall
jae
add
xor
loope
ret
roll
fadds
movhps
shrb
lods
into
lret
fildl
movsb
mov
mov
orb
in
xchg
setae
ss
adc
fcmove
or
inc
aad
adc
es
and
jb
jp
sbb
es
js
mov
lods
or
xor
xchg
sahf
lret
je
dec
push
pop
je
pusha
and
or
jp
les
push
int
ss
adc
out
je
outsl
mov
sahf
pop
scas
and
aad
addr16
repnz
or
xor
adc
xchg
mov
or
pop
push
inc
repz
mov
je
inc
mov
push
lret
jge
pop
outsb
mov
sarb
and
mov
pop
sub
mov
add
xchg
sti
nop
fisubrl
adc
stc
mov
push
ljmp
and
cmp
ljmp
popf
mov
in
dec
lods
outsb
and
pusha
insb
fs
xor
jne
sub
insb
jle
mov
push
cmpsl
movsl
and
cmpsl
xchg
mov
fnsave
inc
inc
add
sub
insb
rclb
push
out
inc
ja
insl
ficomps
cmp
jmp
xchg
imul
cmp
imul
aas
inc
stc
jmp
call
pop
andb
aad
inc
lret
cli
pop
fstpl
into
fwait
xor
out
dec
mov
loop
fisttpll
ds
lcall
adc
imul
test
bswap
adc
adc
cmp
cld
sahf
mov
lds
jae
mov
dec
clc
fwait
pop
cmpsb
test
test
sbb
inc
insb
mov
test
mov
xchg
mov
fldl
in
add
xchg
in
lods
je
dec
push
sbb
cmc
jle
jmp
or
mov
inc
out
int3
xor
scas
dec
in
mov
subl
fists
xchg
adc
jle
inc
je
sbb
adc
testb
ss
cmp
push
arpl
mov
jmp
movsb
popf
push
mov
fisttpl
fidivrl
sbb
dec
pop
pop
aaa
insb
xchg
mov
in
adcl
push
pushf
adc
mov
push
cltd
and
sar
into
ss
jmp
pushf
les
ljmp
mov
into
jne
shl
push
xchg
les
lcall
xlat
mov
push
sbb
xchg
pusha
gs
in
js
xor
pop
xor
jnp
cmpsb
jge
outsl
fdivrp
dec
sub
push
fs
jb
jecxz
cmp
add
dec
andb
mov
push
loopne
dec
mov
hlt
inc
sbb
data16
or
roll
add
lods
pop
fcoml
cmp
mov
add
jno
push
stos
jae
inc
push
push
out
lods
push
sbb
int3
push
mov
pop
push
std
cld
xor
mov
addr16
jb
hlt
adc
lea
and
iret
inc
pushf
es
mov
lret
or
push
cmpsl
inc
fucom
inc
sbbl
fwait
sub
pop
xor
mov
in
mov
push
out
sub
cli
adc
leave
jg
stos
insb
jp
dec
andb
fdivp
test
iret
fadds
cmp
or
pushf
fldcw
jbe
cmp
mov
stos
cmpsb
sub
dec
mov
dec
or
mov
sbb
aaa
ret
imul
insl
int3
cltd
pop
fwait
push
mov
push
ss
lods
mov
xor
cli
or
call
push
xor
mov
push
stos
fstl
mov
outsb
clc
jb
in
cmpsb
fs
decb
jb,pn
call
mov
ret
aaa
imul
inc
lds
sbb
sahf
rorl
mov
divl
sbb
xchg
push
cmp
ss
push
push
insb
neg
dec
pop
mov
out
hlt
mov
dec
pop
push
jns
enter
jnp
adc
mov
adc
jb
out
cmpsl
addr16
in
sub
add
sub
loopne
inc
inc
adc
push
movsb
jl
adc
repnz
lock
ret
outsl
mov
jo
pop
jno
mov
xlat
push
jl
aad
push
mov
sbb
lret
sub
loope
pop
sar
enter
add
mov
es
sub
mov
and
xlat
lock
and
mov
adc
enter
jb
sub
addb
rclb
push
add
cmp
sarb
rcrl
push
adc
or
jnp
leave
sub
mov
push
inc
lret
mov
fnstcw
jnp
push
lock
pop
popw
ret
ds
pop
rorl
sub
inc
inc
rcrb
push
mov
pop
jp
enter
inc
loopne
into
jl
cwtl
mov
cmpsb
inc
push
mov
mov
cmp
xor
mov
pop
sub
push
rolb
inc
or
sub
sub
xor
xchg
sbb
jo
sbb
lahf
push
int
daa
push
sub
dec
xor
adc
icebp
jno
dec
pop
pusha
dec
dec
fsubl
inc
xchg
push
fidivs
pushf
jb
leave
and
add
mov
sahf
fimull
inc
imul
and
xchg
mov
mov
and
sub
test
rol
es
jg
ret
or
mov
les
aad
sbb
in
dec
pop
in
outsb
fdivl
jbe
push
dec
sbb
xor
cmc
movsb
cmp
cmpsl
daa
stc
mov
cmpsb
pop
add
pop
push
ss
add
lods
aam
or
jno
adc
lret
adc
mov
neg
cwtl
mov
jbe
mov
push
fcmovu
rolb
xor
dec
mov
call
sarb
lret
inc
dec
add
je
gs
mov
mov
xchg
ret
cmp
aad
test
jns
xor
xor
mov
pushf
loopne
aaa
enter
jb
scas
adc
cmp
cmpsl
sub
jp
lock
hlt
jnp
loop
call
repnz
incb
xor
out
jecxz
in
in
andl
inc
sub
and
in
iret
dec
push
inc
loop
push
or
push
xlat
xorb
or
dec
stc
lods
das
mov
or
push
in
es
xchg
xchg
add
cld
rorl
and
jb
sti
lock
mov
fisubs
pop
adc
dec
repnz
leave
leave
aam
mov
pop
jg
movsl
mov
add
xor
adc
stos
xacquire
push
pop
mov
mov
sub
imul
std
xchg
xchg
jle
push
movsb
push
popa
jmp
int
int3
lods
inc
sbb
mov
negl
call
inc
push
rcl
gs
loope
jecxz
push
fildll
mov
jle
std
rcrb
into
jne
mov
das
lret
xchg
ljmp
hlt
mov
rcrl
cmc
shl
cltd
sarb
popf
add
fcomps
andb
leave
mov
jecxz
jnp
add
inc
out
inc
xor
fistpl
mov
fisubrl
hlt
and
stos
fstpt
dec
xor
out
cmpsb
lea
inc
cmpsb
xor
les
aas
push
into
sbb
lret
cmpsb
dec
test
aas
xchg
push
pop
pushf
sub
loop
lcall
in
ss
stos
and
hlt
jle
movsl
dec
mov
pop
add
push
dec
or
cs
inc
lret
mov
or
push
mov
or
ret
mov
aam
shr
push
clc
push
adc
xor
mov
mov
or
ret
lock
mov
ds
add
pop
lds
hlt
pop
ret
mov
sub
lods
mov
sub
rcl
mov
rclb
pop
cmp
daa
dec
jnp
jbe
cmc
fidivrs
insl
dec
jle
pushf
or
test
jg
es
shlb
mov
sbb
and
out
leave
or
icebp
xor
sbb
mov
in
pop
rol
mov
arpl
jp
mov
enter
pop
ret
mov
arpl
jle
divl
pushf
mov
ret
stc
and
int3
cmp
mov
or
inc
sbb
add
daa
sti
push
mov
out
cmp
jle
mov
aad
push
pop
adc
mov
jb
push
xor
rclb
ret
hlt
lahf
or
push
mov
adc
mov
mov
pop
idivl
mov
aas
pushf
popf
adc
push
ret
push
in
ss
add
push
test
aad
stc
xchg
sub
fildll
mov
inc
pop
addr16
bound
mov
mov
ret
mov
mov
pop
lcall
roll
inc
test
and
aaa
mov
and
jecxz
aam
mov
sub
nop
xor
mov
jg
scas
rcl
push
or
jle
aas
cmpl
jmp
imul
cmc
add
sahf
xor
cmc
mov
push
pop
int3
adc
addr16
xor
sub
popf
push
mov
inc
movsl
mov
cmpsb
jae
add
incb
sbb
aad
inc
pushf
xchg
mov
add
xchg
cmp
sbb
mov
rcrb
std
mov
mov
repnz
sbb
pop
mov
add
dec
popf
std
inc
test
sub
jbe
xor
test
movsb
mov
jecxz
stc
mov
push
cltd
push
xor
pop
sub
inc
jnp
outsb
push
inc
pop
inc
adc
sbb
pop
xchg
daa
xchg
mov
push
xor
xchg
inc
arpl
mov
aaa
outsb
cmp
mov
push
lcall
xor
fldt
andl
out
dec
fildl
lds
je
clc
add
jl
popl
aad
aam
pushf
ret
mov
inc
cmpsl
pop
xchg
fcoms
lahf
xchg
or
in
gs
shll
data16
inc
lea
xchg
cmp
orb
imul
out
dec
and
push
lods
jns
push
jle
pop
jnp
and
sar
adc
inc
mov
fldt
ss
jl
push
xor
mov
mov
push
scas
pop
scas
jecxz
cltd
repnz
cmpsl
aas
and
sarb
jo
ror
cmp
push
fdivrs
outsb
jl
and
nop
mov
lock
shll
ficomps
add
dec
jecxz
sbb
jo
push
push
mov
movsb
add
lcall
push
mov
xchg
xor
call
dec
xchg
xchg
popf
sub
mov
sbb
cmp
sbb
sahf
imul
xchg
xorl
and
or
cmpb
adc
mov
sbb
fisubrs
sbb
outsl
hlt
inc
test
aas
scas
aam
and
sub
xlat
jge
jg
addr16
insb
rcrb
pop
popf
les
adcl
lods
aad
sbb
inc
add
arpl
cld
lret
push
sub
xchg
xchg
enter
lahf
lea
scas
cs
pop
lds
test
push
out
and
push
test
adc
add
shll
add
inc
sub
dec
aas
enter
mov
mov
data16
sub
cwtl
push
test
xchg
scas
testb
sbb
and
cmp
mov
cltd
cmpsl
adc
loopne
adc
mov
ret
test
jns
scas
rolb
xchg
or
mov
popf
rcrl
out
sahf
lds
cltd
notb
inc
inc
imul
movsb
pop
sbb
mov
movsb
repz
addr16
add
test
xor
jae
aas
xchg
inc
add
pop
dec
dec
loope
cli
addl
jns
outsb
or
xor
mov
or
push
ret
sub
pushf
inc
or
add
js
push
ja
or
and
add
aaa
mov
mov
ljmp
xor
cld
lods
fsubrs
mov
sbb
adc
sbb
fdivl
pop
loop
jae
cmp
sub
mov
jns
pushf
lcall
dec
mov
cmpsb
gs
fnstcw
test
stos
dec
jl
push
fyl2xp1
lods
pop
ret
cltd
inc
xor
test
arpl
sbb
sbb
sub
fwait
mov
movsl
lret
xor
jp
pop
cmp
imul
adc
cmp
fiadds
jp
push
add
xchg
adc
ss
inc
pop
jle
cltd
sbb
pop
cmp
jns
scas
pop
std
mov
dec
les
and
mov
cmp
js
cmp
in
xor
pushl
and
ficomps
inc
add
mov
xchg
ss
stc
fistpll
push
out
lea
je
popa
adc
sub
xor
int3
fdivrl
or
cmp
jae
xor
scas
pushf
push
dec
add
mov
add
fwait
jbe
push
mov
out
negb
fxch
mov
pushl
cmpsb
cmp
jmp
hlt
pushf
orl
mov
xchg
jnp
movsb
push
in
fs
add
or
cmp
cmpsl
inc
push
outsb
pop
fwait
lods
lea
dec
int3
lcall
push
stc
lea
clc
fincstp
popa
sub
in
mov
je
mov
jne
pop
xchg
out
stos
scas
filds
cmp
cmpsl
test
add
inc
mov
in
pop
push
outsb
fwait
push
pop
nop
push
out
popf
insl
xorl
adc
mov
into
aaa
test
mov
in
sbb
cwtl
loope
or
sbb
arpl
pop
dec
mov
les
into
dec
or
add
or
idiv
and
test
loope
push
repnz
fdivrs
mov
or
and
rcll
cmp
add
fstl
cmpsl
lret
xorb
cld
enter
out
iret
test
xor
sub
add
shrl
repz
and
sbb
fs
xchg
ret
add
xchg
fiaddl
mulb
sarl
add
pushf
stos
int
mov
inc
mov
decb
orb
daa
popf
add
lret
clc
mov
mov
jecxz
fisubrs
std
sbb
sub
in
lret
sti
jno
push
jne
sti
aas
pop
negl
test
fcoms
lret
hlt
iret
pushf
je
mov
lret
sub
cmp
ret
cmp
std
jl
mov
pop
push
or
or
imull
mov
lahf
cld
cmp
sbb
mov
loope
mov
pop
shlb
mov
or
std
jmp
arpl
into
jp
cwtl
dec
jmp
sub
nop
test
push
or
scas
sub
outsb
fwait
je
lods
cmpsb
scas
jns
adc
int3
stc
pop
mov
push
mov
daa
inc
cltd
movsl
ja
dec
xor
sbb
xchg
mov
mov
add
jge
xchg
mov
jns
push
lea
pop
inc
add
pop
mov
out
or
test
fimull
data16
lods
pusha
lcall
fdivrl
fabs
adc
cld
into
mov
pop
add
sub
pop
push
pop
dec
xchg
jne
push
inc
into
cmp
and
xchg
adcb
pop
nop
cmp
mov
lret
mov
pushf
ja
rclb
inc
mulb
jge
dec
add
add
mov
inc
imul
pop
mov
mov
faddp
jae
bound
mov
and
sbb
xchg
imul
in
stos
dec
mov
add
fld
dec
gs
sbb
insb
out
and
cmp
and
aam
out
jp
add
sbb
iret
adcl
fnstenv
xor
sbb
add
pop
scas
mov
das
pop
addr16
clc
sar
ret
mov
jmp
mov
push
clc
out
gs
push
sub
data16
and
mov
push
dec
clc
test
sar
mov
and
arpl
mov
fstl
pop
push
jb
add
fisubrl
push
or
xlat
mov
int
sub
fnstenv
and
lock
adcl
mov
jmp
mov
jle
cmp
jbe
lods
cmc
dec
inc
jbe
xor
cwtl
das
push
and
and
mov
adc
push
push
xor
outsb
jne
loopne
pop
arpl
inc
xchg
orb
xorb
pop
aas
cli
cmp
xchg
bound
or
jae
cmp
push
add
ret
sti
jg
pusha
pop
or
sbb
jg
in
repnz
aad
or
xor
adc
sub
fcmovu
lret
cmp
push
std
fnstsw
cmp
test
sbb
loope
add
mov
daa
cmp
clc
stos
std
add
mov
or
lods
dec
into
loopne
iret
inc
push
xor
or
pop
out
and
mov
sub
sarb
arpl
push
movsb
mov
cltd
vshufps
std
imul
inc
mov
mov
cmpsl
scas
out
rcrl
pop
sbb
iret
out
dec
push
add
sub
sbb
cli
mov
adc
add
stos
or
pop
add
faddl
shr
push
xor
in
or
cltd
ret
push
in
fldcw
imul
bnd
mov
ficomps
aad
icebp
pop
pusha
lea
push
mov
int3
push
mov
sti
inc
call
fildll
icebp
sub
fs
jle
pop
push
cmp
jge
mov
ss
mov
aad
mov
orb
inc
fidivrl
xor
ret
les
jno
jl
and
add
fucomp
data16
push
aad
imul
jp
xlat
fldl
adc
shrl
pop
cmp
jbe
test
adc
mov
aas
lock
jae
pop
jno
inc
or
stos
mov
insl
jae,pn
or
mov
and
hlt
jnp
aad
nop
ret
test
xchg
sub
cwtl
mov
pop
cmp
cmp
push
adc
add
stos
repz
adc
mov
or
mov
mov
xor
ds
mov
pop
ficompl
push
pop
out
notl
inc
mov
pop
and
mov
popa
nop
gs
lret
aad
out
fimuls
push
jle
xor
daa
sbb
frstor
cmp
push
push
inc
push
pop
fdivp
aam
xor
fbld
sub
testl
lds
cmp
cwtl
xor
into
jge
loope
push
add
pusha
nop
sbb
cmp
jl
imul
ret
jae
in
add
out
fisttpl
cwtl
jmp
fists
dec
mov
int3
sbb
rcrl
push
sbb
sub
test
iret
pop
mov
lret
mov
jb
ja
in
sub
dec
xchg
jbe
jle
mov
adc
push
nop
mov
stc
movsl
jb
sti
inc
cmp
pop
or
xchg
lds
sarl
dec
lret
rcr
mov
negb
mov
push
mov
test
js
xchg
or
and
fisttps
in
xchg
jnp
imul
mov
imul
jae
adc
dec
repz
push
sbb
pop
xor
xlat
scas
inc
ljmp
lods
mov
ja
mov
adc
fcmovnb
out
shll
xor
pop
call
or
std
lods
inc
jmp
sub
fisubrs
nop
pusha
arpl
or
jmp
mov
sub
test
sbb
movsb
pop
adc
shlb
mov
inc
stos
xor
push
cmp
adc
pop
pop
mov
pusha
pop
loopne
push
test
mov
xchg
je
jmp
mov
movsl
jbe
das
insb
fwait
xchg
int3
out
adc
and
cld
inc
add
nop
xchg
jg
lods
je
fidivrs
cmovo
pushf
xor
xlat
decl
xchg
jbe
push
or
sbb
cmp
rep
xchg
out
lods
fstps
push
xor
fidivl
aas
adc
and
ffree
stc
mov
popf
cld
dec
cmpsl
in
sbb
into
jne
pushf
lea
add
nop
int
push
sbb
popf
mov
pushl
jo
mov
pop
iret
xor
push
leave
cld
clc
jle
shrl
xchg
mov
nop
outsl
push
pop
sbb
pushf
dec
jle
jmp
mov
pop
fwait
sub
lret
or
dec
es
or
enter
or
into
or
lea
or
gs
arpl
add
clc
repz
data16
jae
outsb
jnp
lea
sub
and
and
or
repnz
xor
popa
cmp
jmp
mov
mov
xchg
outsb
mov
pop
in
dec
bnd
sahf
adc
stc
jle
sti
pusha
dec
inc
xchg
test
xchg
imul
lds
cmp
aas
pop
sbb
loope
push
xchg
test
sbb
stos
test
xchg
popa
je
cmp
cmp
push
xchg
movsb
test
pop
pop
or
xor
xchg
and
insb
dec
inc
adc
jle
mov
in
dec
inc
pop
dec
ljmp
dec
ja
cmp
mov
adc
lret
outsl
push
mov
imul
and
orb
sub
lret
push
dec
shlb
cmpsb
int3
push
popf
inc
scas
out
jle
arpl
sbb
sbb
lea
fmuls
jae
add
in
xor
fwait
ret
movsl
xor
push
flds
cltd
add
xchg
out
ds
xor
xor
pop
popw
imul
dec
xchg
and
pop
inc
hlt
rcrb
push
mov
xor
adc
je
cmp
push
sahf
aam
ficomps
and
mov
mov
nop
jmp
dec
dec
mov
clc
int
rcll
fiadds
push
loopne
lahf
cs
and
nop
pop
push
jno
inc
outsb
sbb
push
fimuls
rcr
sub
ret
pop
addr16
add
fwait
and
push
or
or
inc
pop
iret
adc
adc
cmp
dec
pop
sub
fs
aam
cwtl
les
int3
push
xor
push
pop
pop
cmp
hlt
fnstenv
inc
insb
shrb
mov
dec
add
mov
pop
lods
add
jns
lods
lock
in
push
mov
jae
daa
cmp
stos
xchg
testl
push
jge
cmp
cmp
dec
mov
xlat
push
imul
das
xchg
mov
aam
cwtl
inc
bound
xchg
mov
cli
out
xchg
sbb
xor
bound
fsubs
jle
pop
mov
or
enter
push
mov
movsb
cmc
outsb
pop
cmp
vpsubsw
sbb
mov
inc
int3
aad
imul
adc
push
es
loope
adc
hlt
or
pop
fcompl
sub
cmpsb
mov
addr16
cmpsb
push
xor
and
mov
fdivrp
dec
adc
rcr
ds
sub
lods
push
adc
call
mov
xchg
add
mov
jmp
loope
adc
push
fisttpl
fmull
adcb
dec
jae
xchg
mov
and
mov
add
subl
xor
or
cs
push
mov
xchg
xchg
cli
xlat
rorl
test
in
inc
jle
mov
mov
lds
push
sbb
sti
sbb
leave
mov
push
ja
push
pop
lods
sub
or
mov
mov
and
movb
mov
fwait
into
add
push
das
aas
lock
xchg
bnd
mov
out
inc
push
add
lock
xor
lahf
or
push
repnz
test
iret
mov
cmp
cs
cmp
mov
adc
fwait
mull
sub
je
inc
mov
pop
es
cld
lret
daa
adc
test
mov
sbb
and
add
movsl
adc
popf
mov
frstor
xor
pop
adc
sbb
cs
xchg
cmp
xchg
sbb
aad
call
imul
jle
call
rcrb
or
loope
movb
or
mov
mov
lods
in
sbb
dec
mov
mov
shlb
mov
xor
pop
movsb
out
daa
lods
inc
sub
negb
stc
or
aam
lods
hlt
cmp
leavew
sub
mov
pushf
jmp
nop
push
mov
jnp
inc
call
lock
cld
scas
cli
xor
push
enter
outsl
lea
xchg
and
mov
mov
xchg
xchg
hlt
or
cmp
mulb
leave
psubusw
xchg
mov
popf
jne
push
ja
inc
into
pop
add
or
jp
xchg
sub
pusha
lock
mov
sbb
sahf
or
jne
imul
sbb
add
daa
mov
or
imul
sbb
xchg
sahf
shll
mov
sub
int3
xchg
sbb
inc
mov
stc
push
call
and
jno
jge
cmp
jp
lahf
cmp
add
fcmovnu
xchg
jg
outsb
jae
push
mov
sub
pop
xchg
dec
or
mov
xorb
incb
sbb
inc
cltd
insb
ss
daa
mov
xchg
mov
add
lcall
xchg
pop
push
aam
xchg
mov
inc
into
xor
test
nop
sahf
cwtl
pop
pmuludq
jno
pop
jmp
pushf
fmull
mov
pop
push
mull
and
fucom
push
push
mov
pop
xchg
shlb
mov
ret
into
insl
js
rclb
out
dec
cld
aas
push
in
dec
add
pop
push
lcall
ffree
std
xchg
test
mov
decl
pusha
sbbb
dec
jae
subb
mov
pushf
push
xchg
adc
cmp
push
sbb
pop
adc
cltd
mov
xor
imul
inc
xchg
fld
xchg
push
not
inc
pusha
jae
push
addr16
sbb
xor
cmpsb
sub
ss
push
aad
popf
inc
rcr
rcrb
inc
insb
pusha
xor
mov
add
dec
insb
mov
repnz
xlat
and
inc
out
test
in
das
pop
jge
jne
shrl
jge
jle
mov
mov
jb
push
pop
or
rclb
lahf
loope
inc
sub
pop
ret
inc
push
scas
push
lods
or
xor
or
out
dec
or
add
and
aad
in
xlat
cmp
xchg
leave
movsb
sub
push
mov
nop
jge
jecxz
ret
decb
mov
daa
dec
in
mov
adc
enter
inc
in
add
pop
out
or
adc
add
push
test
nop
fsubl
insb
imul
xor
in
fcomps
in
jb
sbb
ds
das
lcall
sub
mov
add
lods
das
pop
jno
into
inc
aad
rcll
fiadds
fcompl
or
out
push
in
pop
adc
xor
push
dec
sub
popa
add
sub
cli
lock
sub
ds
fwait
sbbl
rcl
testl
test
aad
push
inc
mov
xchg
and
jecxz
fsubs
jns
push
push
sbb
xor
or
in
jg
sbb
mov
cmp
sbb
cmc
jb
mov
dec
xor
dec
inc
cwtl
mov
xchg
minps
shlb
repnz
cmc
xor
cs
ret
jae
mov
xor
adc
cmp
jne
sub
xor
xor
loopne
stc
fildl
mov
push
mov
jno
fstpt
mov
cmp
fnstenv
data16
mov
pop
push
in
scas
push
dec
add
popa
xor
ljmp
mov
push
lods
scas
cld
popa
mov
push
push
mov
or
or
mov
mov
sbb
jp
or
cmpsb
ret
mov
jecxz
pop
xchg
stc
and
lret
ret
lea
and
enter
cmp
imull
cmp
shl
mov
adc
adc
jns
xor
subb
push
shll
mov
sarl
or
fcompl
xor
dec
fldenv
sub
lret
cmp
pushf
inc
or
mov
sbb
xchg
stos
pop
mov
cmp
iret
das
pusha
rcrl
jle
xor
dec
mov
fcmovnu
mov
mov
or
ret
push
test
pop
mov
ljmp
cmp
out
xchg
xchg
push
push
xchg
lcall
push
pop
jae
fistps
xor
jle
shll
shll
jp
shll
gs
in
outsb
pop
das
mov
stos
pop
pop
jae
jo
push
movb
cmp
mov
pop
out
add
mov
xor
aad
pop
xchg
jnp
pop
popa
xchg
cs
mov
mov
loope
jp
rorb
imul
stc
in
cs
dec
jb
jmp
jo
sbb
sti
xor
dec
or
icebp
cwtl
ss
pop
cld
sub
and
pop
xchg
jb
inc
or
add
mov
sub
rep
stc
adc
ss
fsub
pop
push
dec
pop
outsl
cmp
and
cmpsb
stos
icebp
cmc
out
ds
push
mov
inc
sub
out
push
pusha
add
cwtl
sbb
insl
fs
lahf
ficoml
dec
out
scas
dec
jmp
cmp
sti
stos
xchg
dec
pop
in
outsl
unpcklps
scas
sahf
outsl
cmc
fwait
scas
xchg
jns
lret
sbb
nop
inc
and
dec
addr16
xor
xor
pop
jecxz
ficomps
sub
loope
and
cmc
shr
aad
cmp
pop
fstp
jno
jbe
fisubrs
push
push
sub
jae
push
mov
inc
pop
stos
daa
movsb
in
in
add
adc
clc
or
movsb
sbb
or
jne
mov
clc
pop
xor
ljmp
or
xchg
ret
cmp
cmp
inc
lds
addb
sub
pop
hlt
ja
loope
call
enter
and
xlat
jae
mov
adc
test
cmpsb
sub
sbbb
pop
xor
daa
or
ret
xchg
test
in
xor
cwtl
scas
out
mov
pop
cmp
lods
mov
xor
xor
ja
repnz
and
mov
stc
jge
mov
or
sub
or
xor
int
bound
sub
sbb
inc
jl
movsb
out
jo
outsl
sub
sarb
sbb
inc
sbb
mov
scas
or
inc
add
cmpb
xor
imul
mov
pushf
xor
adc
adc
push
int3
fdiv
push
repz
sub
stos
mov
sub
in
sub
pop
cltd
loop
xchg
test
xchg
sbb
or
xor
sbb
cmpsl
mov
pop
popa
lahf
out
xor
mov
lret
sbb
call
cmp
and
pusha
mov
lahf
dec
xchg
sub
mov
add
aad
cmc
and
and
push
cmp
xor
push
and
mov
push
pop
subl
sub
inc
sub
rcll
dec
jb
jae
sub
sub
loop
ret
dec
sub
push
push
je
in
add
in
fadds
adc
inc
adc
out
mov
jp
sbb
lcall
xor
dec
jno
loopne
cmpsl
stos
push
mov
repz
call
inc
mov
xor
add
xlat
jae
aaa
aas
cli
push
mov
xchg
std
in
and
and
adc
mov
jl
dec
out
les
out
sub
int3
scas
mov
lcall
push
xchg
pop
xor
pusha
loopne
xchg
roll
xchg
adc
ret
sbb
mov
inc
sub
fwait
sbb
adc
loop
arpl
les
cmpsb
cmp
sub
stos
rcrl
arpl
mov
and
cmc
in
pop
mov
xor
iret
adc
negl
imull
cmp
clc
sbb
cmc
mov
push
shl
dec
add
aam
rcrb
and
mov
cmpsl
mov
aad
popa
jno
mov
mov
pop
and
enter
jbe
inc
andl
or
daa
inc
stos
leave
je
pusha
call
lgs
mov
and
aad
mov
and
cmp
dec
sbb
dec
add
jp
sbb
push
call
xchg
push
ret
movq
rcr
mov
movsl
mov
sub
pop
std
or
mov
push
sbb
js
xchg
fsts
mov
xchg
xchg
cmp
into
lea
mov
mov
mov
aas
ss
xchg
adc
xchg
rcrb
cmpsb
imul
inc
jmp
dec
pop
push
insb
sarb
push
addl
mov
xchg
cli
fcom
ja
inc
jne
mov
cmp
dec
jp
mov
push
mov
ljmp
fdivp
test
movsl
dec
add
mov
mov
inc
or
pcmpgtd
pop
clc
icebp
adc
xchg
enter
dec
dec
aam
xchg
xor
loopne
or
das
xchg
jbe
pop
add
pop
lods
add
inc
hlt
dec
sbb
xchg
imul
les
in
pop
push
scas
push
sahf
out
or
sub
inc
andb
lods
pop
mov
push
push
shlb
xchg
hlt
xchg
sub
dec
mov
ljmp
dec
inc
push
out
fnstsw
repz
mov
loope
xchg
mov
out
fldl
xchg
ja
loopne
inc
or
dec
fmuls
sub
lcall
test
cmp
outsb
cli
mov
stos
addr16
fstpl
ljmp
mov
dec
popa
cltd
mov
mov
clc
aam
jne
jle
lahf
cmp
xor
cli
adc
loop
cmpsl
pop
adc
jno
sbb
cmpsb
addr16
lahf
jbe
cmp
adc
jecxz
xchg
ficomps
imul
push
jnp
xchg
inc
push
jp
lods
mov
jbe
or
and
cs
ret
movsb
cmpsb
loope
ljmp
les
aad
fiaddl
cmp
mov
neg
mov
sbb
aad
add
fmul
dec
pop
pop
mov
jp
adc
outsl
mov
test
test
adc
or
jmp
add
loopne
ja
pop
movsl
fbld
xchg
jae
and
add
cld
rolb
jnp
je
into
add
push
leave
outsb
xor
insb
jle
pop
lock
test
sub
sbb
movsl
imul
stos
ljmp
lret
cmpsl
jg
jmp
jg
jb
push
fs
jbe
xor
pop
bound
in
cwtl
sub
stos
or
sub
mov
mov
mul
or
popa
jmp
mov
adc
sub
iret
jl
push
idiv
test
mov
popf
fsubrs
cmp
mov
cwtl
add
jbe
mov
fisubs
inc
repz
hlt
lock
pop
scas
loope
inc
nop
mov
test
ljmp
mov
scas
push
or
out
adc
jmp
pop
cs
leave
std
dec
push
add
mov
insl
arpl
pop
mov
xlat
mov
push
fisubl
fxch
cwtl
sar
popl
fwait
je
mov
xor
sbb
dec
cmp
lock
mov
clc
rcrl
jne
jbe,pn
in
inc
pop
pop
sarb
pop
jns
adcb
nop
clc
sbb
rcrb
aaa
into
cmp
dec
push
pop
outsb
xchg
leave
cli
popf
mov
dec
cmpsb
insl
cmp
stos
ret
and
jp
mov
sbb
jge
mov
adc
jmp
xor
rolb
shl
jmp
jmp
add
or
cmp
add
xchg
add
dec
ja
cmp
jnp
ds
sbb
xchg
jle
inc
bnd
sub
ds
sub
das
mov
inc
repz
imul
bound
js
aam
ss
js
js
call
in
aas
mov
pop
inc
lret
or
mov
scas
lret
pushf
jl
insl
sbb
fdivs
cmp
inc
lret
or
adc
mov
stos
cltd
pop
fdiv
pop
loope
mov
sbbb
iret
dec
pop
inc
out
call
bnd
out
push
jp
adc
xor
in
push
pop
test
xchg
and
push
aas
fidivrs
sti
mov
test
push
pop
cwtl
hlt
dec
shll
rorb
clc
divl
inc
bound
or
jl
xor
iret
and
nop
dec
les
rclb
mov
fsubl
ds
push
jno
sbb
adc
adc
cs
ss
jno
mov
jg
and
insl
or
in
shl
orl
out
movsl
sub
or
comiss
imul
rcr
cmp
int
sub
jno
sarb
movsb
inc
lods
sbbl
shrl
gs
dec
int
xlat
in
out
jb
in
imul
push
mov
inc
movsl
push
popf
sbb
cmp
push
cmp
ret
gs
rcrl
lcall
pushf
or
and
mov
add
test
cmpl
jp
gs
or
lahf
inc
adc
xchg
mov
inc
popf
push
loop
lret
pop
orl
xor
sub
popa
sbb
movsb
sbb
xchg
push
inc
mov
cmp
stc
popa
ret
aam
cmc
add
je
gs
stos
adc
cmpsb
not
cltd
repnz
out
fldl2t
sbb
cs
adc
pop
cmp
mov
or
fs
sub
cmp
icebp
pop
sbb
fnstcw
push
int
jns
daa
cmpsl
inc
jns
int
mov
shl
adc
sub
ja
cli
mov
mov
pop
push
loope
adc
pop
je
adc
or
stos
ret
mov
ljmp
or
lods
das
jge
lret
mov
bnd
lods
addb
popf
shrb
test
jge
xchg
mov
flds
add
cmpsl
pop
lods
gs
pop
jb
fwait
lea
lea
lds
or
shrb
mov
or
inc
lcall
shl
addb
sbb
divl
out
outsl
cmpl
dec
movsl
out
test
mov
dec
lahf
or
pusha
push
test
adc
sarl
aad
push
addr16
sbb
jbe
pop
cmpsb
arpl
sbb
sub
xchg
sub
mov
insb
es
rclb
dec
and
in
add
jbe
mov
pop
idivl
mov
xchg
subl
push
sbb
pop
sbbl
fidivrl
ja
mov
cmp
daa
dec
cmp
jl
cltd
adc
rorl
mov
mov
push
or
arpl
dec
out
inc
ret
int
inc
sub
add
addr16
subl
scas
add
pop
sub
imul
dec
sub
mov
loop
mov
or
scas
sbb
xchg
xor
pop
jmp
jmp
das
or
cmp
repnz
mov
cmp
add
icebp
jmp
call
fdiv
dec
addr16
les
jae
loope
clc
push
inc
fidivrs
cwtl
pushf
lret
fidivrl
pop
loope
arpl
xchg
addr16
or
test
or
cmp
imul
in
dec
popf
repz
les
insb
push
mov
lds
es
xor
out
leave
mov
jmp
rcll
fadds
jno
jecxz
stos
xor
ret
mov
and
pop
cmovbe
dec
iret
arpl
xchg
adc
push
or
xlat
sbb
mov
jmp
cmc
sub
push
xchg
or
lock
and
mov
pop
add
jae
fiadds
and
xchg
lret
sbb
inc
xor
std
sbbl
mov
addr16
inc
push
push
cmp
and
loop
mov
mov
out
or
or
pop
cmp
mov
pop
data16
jp
xchg
sbb
and
ret
push
adc
arpl
lcall
insb
xorl
sub
jnp
pcmpgtw
push
loop
dec
jge
lods
jnp
mov
imul
push
aam
xchg
dec
adc
in
sub
xchg
loope
jno
cmp
addb
pop
mulb
inc
xorb
mull
movsb
sbb
push
add
cmp
jecxz
addr16
or
dec
pop
dec
mov
dec
aad
cmp
pusha
push
pop
ret
ret
and
aam
cmp
pop
pop
pop
es
fidivs
sbb
jge
into
jmp
sbb
add
jo
fdivr
lcall
push
lods
cld
push
daa
sub
pop
enter
or
pop
dec
jmp
dec
sub
insb
pushf
testb
add
pop
pop
test
mov
hlt
insb
testb
push
pop
stos
adc
aas
adc
jo
or
into
cmp
and
push
jo
les
cld
inc
inc
fdivp
inc
loope
jns
sbb
cs
fsubp
xor
push
pop
sub
pop
notl
cmp
cmp
cmp
xchg
mov
popf
cmp
or
sbb
cmpsb
mov
or
repnz
and
mov
mov
push
add
add
lods
xor
lea
loope
mov
pop
jb
lock
scas
mov
das
jne
cmc
movsl
mov
mov
or
imul
add
rcr
xchg
repnz
scas
call
ja
roll
or
inc
xchg
insl
and
xchg
cld
cmpl
sbb
imul
sbbb
or
fsub
fistps
cmc
test
movsl
inc
cmp
mov
mov
int
pusha
mov
roll
adc
mov
mov
add
xchg
pop
clc
mov
and
fwait
adc
aad
dec
imul
out
sub
pop
push
jb
stos
sarl
add
and
xor
sub
lock
mov
test
dec
in
mov
sbb
push
pop
pusha
push
mov
imul
and
mov
inc
push
mov
outsb
xchg
rcll
jg
push
iret
mov
and
cli
pop
inc
mov
and
sub
aad
jg
flds
leave
xor
mov
test
xchg
imul
loop
or
scas
in
pushf
push
xor
adc
arpl
adc
cmpsb
outsl
insb
mov
cmp
mov
jmp
shl
sbb
xchg
dec
xchg
out
lcall
leave
das
in
xchg
popf
xchg
inc
shl
sub
cs
inc
and
std
icebp
int3
sarb
mov
call
jle
into
cltd
xor
hlt
repnz
dec
je
bnd
push
test
jl
push
push
scas
mov
imul
push
out
cmp
dec
dec
push
inc
cltd
mov
loope
jne
mov
xchg
and
negl
aas
xchg
cmc
into
mov
sahf
cmpl
cmpsl
aaa
popf
dec
jnp
int3
bound
cmp
xchg
or
jge
and
push
jecxz
mov
mov
jle
and
loop
pop
push
sub
jb
sbb
out
add
jp
or
imul
insl
movsb
adc
dec
push
ret
add
dec
std
lahf
inc
test
cmp
xchg
mov
ljmp
fs
lock
jbe
add
lcall
sub
xchg
adc
adc
out
inc
mov
sbb
inc
sbb
jecxz
cmp
jmp
dec
repz
mov
and
outsb
jns
sbb
mov
ret
lcall
mov
mov
add
imul
sbb
icebp
clc
push
mov
imul
mov
notl
add
adc
inc
jge
nop
push
cwtl
loop
decb
fsubrs
leave
in
mov
push
daa
outsb
fs
clc
imul
test
mov
leave
mov
test
xchg
fsubrl
xor
mov
in
int
mov
movsl
mov
pop
pop
sbb
pusha
std
cmp
outsl
sbb
bound
mov
ret
sub
std
sub
cltd
or
mov
dec
mov
inc
xor
inc
xlat
mov
xorl
push
sub
xchg
push
mov
cmpsl
dec
push
insb
outsb
or
dec
xor
sbb
addr16
test
ret
mov
xchg
fs
daa
sbb
int3
mov
sbb
daa
mov
mov
ss
std
push
push
pop
imul
shlb
xlat
mov
mov
xchg
sbb
sub
mov
in
rol
fbld
repz
jb
pop
xchg
unpckhps
and
out
lahf
inc
cli
insl
dec
mov
loope
push
in
jmp
mov
cwtl
rcpps
push
adc
xchg
jnp
fsubs
stc
fimuls
jl
addr16
mov
ret
aas
syscall
add
pop
pop
mov
dec
add
inc
push
dec
push
mov
xor
fsubr
es
or
mov
lahf
sub
dec
gs
pop
out
mov
inc
cmp
push
xchg
mov
adc
mov
addl
push
leave
gs
mov
push
iret
inc
sarb
jnp
jg
mov
in
into
and
mov
lock
insl
cltd
cmpsb
insl
jnp
sarb
xchg
mov
test
jmp
test
fwait
cmc
dec
lock
pop
cld
push
mov
and
je
jmp
and
lods
ret
add
inc
inc
mov
add
and
clc
jecxz
mov
cmp
push
dec
sbb
push
stos
push
sbb
mov
int
sahf
scas
xchg
loopne
push
in
mov
mov
sbb
push
xchg
push
dec
mov
movsl
dec
icebp
mov
mov
mov
dec
cmpsl
ja
mul
xor
mov
cli
push
dec
je
sbb
xor
inc
adcb
sbb
loopne
in
int
pop
inc
jbe
adc
xchg
lcall
lds
rol
or
cmpsb
cmp
jp
and
jbe
lds
lret
lea
js
pextrw
notb
out
popa
mov
mov
lods
sbb
inc
mov
lret
jmp
aas
orb
adc
pusha
bound
clc
mov
repnz
pusha
or
push
pop
jbe
fwait
mov
jp
ficomps
insb
outsb
dec
lcall
or
xchg
cmc
into
notl
cmp
daa
sub
adc
mov
xchg
jl
lea
repnz
addl
sbb
loope
jno
adc
fcoml
pop
dec
push
mov
pop
repnz
or
dec
fsubrp
js
jmp
inc
cwtl
bound
sarl
arpl
cli
mov
je
ret
cmpsl
xor
decl
sub
and
andl
lock
cmp
dec
scas
lock
out
sahf
lea
shll
jae
lods
xorb
jb
push
hlt
mov
mov
sub
xor
pop
clc
fmuls
data16
aaa
dec
cmp
xchg
adc
cmp
push
int3
add
daa
inc
and
mov
sub
imul
mov
pop
jle
frstor
push
fsts
out
adc
mov
or
or
push
fcoml
cmpsb
test
xchg
popa
mov
cmp
enter
jge
jp
jl
insb
jb
lret
repnz
lock
cmp
negb
out
int3
xchg
push
or
into
std
cli
mov
cltd
pop
fisttps
mov
rcr
mov
mov
repz
mov
xchg
aam
jne
push
push
into
subl
push
push
mov
push
push
inc
or
jns
cld
into
ja,pn
or
sbb
int
hlt
call
or
jo
leave
stos
adcl
sti
repz
jb
pushf
xor
jo
in
cmp
mov
hlt
scas
out
ret
lods
test
outsl
mov
push
cmp
lahf
dec
mov
sbb
or
pusha
iret
inc
jbe
loope
jmp
or
lea
out
sbb
mov
hlt
ljmp
mov
lock
xor
adc
sbbb
ja
inc
loopne
pop
in
xor
xchg
fldl
xor
mov
xchg
mov
add
icebp
addr16
sub
or
in
in
stc
ret
imull
shll
cli
add
add
push
push
xchg
xchg
mov
mov
movsb
sbb
neg
push
mov
into
aas
jae
xchg
cld
inc
in
dec
pop
cmp
stos
pop
bound
cmpsb
pusha
insl
cmp
addr16
xchg
pop
mov
std
out
loop
aaa
iret
hlt
mov
xorl
or
add
stos
mov
xchg
mov
mov
cmp
ficoml
outsb
call
mov
test
loope
dec
sub
adc
xchg
loope
push
divl
xor
add
sbb
stos
jg
stos
adc
cltd
and
lock
test
push
shrb
mov
loopne
lds
lcall
lahf
mov
mov
js
sub
fldln2
add
inc
insb
sbb
xchg
fs
out
xor
jle
xor
add
xchg
gs
sahf
mov
imull
inc
mov
jne
movsl
aam
outsl
jge
cld
shll
insl
inc
dec
mov
sbb
lock
adc
hlt
icebp
aaa
lds
sbb
movsl
xor
cwtl
mov
aad
xor
rorb
mov
inc
cwtl
fs
mov
test
xchg
daa
inc
mov
mov
aaa
test
repz
iret
push
sub
push
mov
mov
clc
repnz
jno
call
xchg
and
add
xor
or
mov
into
mul
out
inc
nop
in
iret
and
popf
or
inc
mov
or
and
sub
sub
lcall
test
cmp
leave
pusha
repz
jne
pop
xchg
pusha
dec
dec
int3
sbb
and
inc
or
mov
ljmp
sbbb
inc
inc
in
cmp
hlt
xchg
lcall
js
push
cmpsb
ret
sbb
stos
pop
cs
cmp
dec
dec
jbe
mov
cli
loopne
mov
jl
fdivl
adc
mov
cwtl
push
ret
subl
test
fwait
lods
les
push
test
insl
mov
lret
in
test
jo
roll
lock
ret
nop
mov
dec
dec
mov
in
fisubrl
and
pushl
lahf
out
jecxz
jne
mov
mov
xlat
fsts
test
xchg
dec
jge
inc
jmp
lahf
mov
push
bound
or
adc
into
aam
xor
cwtl
pop
mov
clc
shrl
push
lods
testl
sbb
jg
stc
aaa
sbb
out
inc
jns
dec
stc
and
jae
adc
cmc
mov
inc
dec
es
scas
dec
sbb
movb
imul
xor
mov
xchg
xchg
or
ud2
addl
insl
test
lret
adc
xor
in
imul
push
jecxz
add
jae
pop
xor
xchg
test
ja
rol
mov
adc
int3
mov
insb
outsl
shll
mov
ja
adc
lea
dec
inc
loop,pt
out
lods
out
or
xor
pop
mov
lcall
out
xchg
pop
mov
das
in
xchg
cmp
mov
in
out
cmp
mov
mov
pop
je
cli
and
repz
adc
cmc
push
std
notb
fwait
xor
cmp
lcall
add
sbb
xorb
ja
movsl
mov
xlat
or
pop
and
cmp
into
dec
leave
and
mov
sbb
ds
fidivs
xchg
pop
fiadds
adcb
sbb
insl
mov
pop
mov
aad
out
fstps
adc
fcoml
push
mov
int
es
sti
mov
outsb
shlb
cmp
lock
lods
dec
repnz
and
cmp
shl
push
and
ss
dec
fwait
repnz
sarb
sbb
cltd
xchg
push
nop
lods
out
push
sahf
lahf
lahf
movsl
mov
fcomps
jge,pt
xor
sub
jge
test
ret
loop
push
and
add
test
pushf
das
out
inc
sahf
xchg
movsb
add
shl
imul
sub
adc
testl
ret
cwtl
inc
lahf
dec
push
xchg
sub
pop
dec
adc
pusha
jb
dec
mov
inc
pop
mov
pusha
aam
jmp
lock
lods
xchg
dec
pop
cmp
add
scas
jle
insl
adc
fucomi
fcompl
dec
fucomi
dec
push
sub
cmp
xlat
scas
loopne
stos
mov
into
sbbb
in
out
xchg
out
jg
andb
lods
imul
jno
adc
lahf
inc
jns
push
dec
cmp
sub
mov
xchg
pop
in
in
xchg
jns
sub
push
daa
add
xlat
cli
mov
rolb
arpl
mov
cmp
aam
cwtl
scas
call
dec
aaa
inc
or
mov
pop
mov
fcmove
xchg
push
arpl
lods
sbbl
das
mov
cld
push
xchg
sahf
outsl
rcll
orl
add
ficoms
xchg
pop
adcb
sahf
ficoms
xchg
cwtl
cmpsb
imul
into
sub
sbbb
push
sub
daa
sbb
sub
jbe
notb
xor
jo
mov
jmp
addb
orb
cli
cmp
ret
aas
fadds
ja
enter
ret
scas
test
and
mov
hlt
pop
mov
hlt
push
incl
das
push
cmpsb
push
in
mov
inc
dec
out
mov
xchg
pop
mov
jge
push
fdivr
mov
mov
sahf
and
gs
push
aad
and
cwtl
js
mov
dec
icebp
scas
aad
jbe
cmp
arpl
adc
mov
and
ja
mov
xorl
repnz
mov
cmp
push
jo
xchg
inc
mov
or
mov
loope
add
push
dec
jae
inc
inc
adc
or
leave
hlt
jae
cmpb
cmp
adc
adc
fcompl
test
js
jnp
shrl
inc
imul
push
sbb
and
shlb
cmp
push
test
ja
movsl
pop
push
and
insl
fst
pop
idivb
gs
out
inc
xor
or
fdivrp
pop
das
and
adc
cmp
loop
test
inc
daa
xlat
push
sub
mov
jg
push
jg,pt
mov
lods
jns
fisttpl
inc
mov
lahf
shlb
cmp
adc
adcb
imul
inc
daa
pop
imul
lcall
test
dec
cmp
sbb
inc
call
shlb
mov
add
jb
pop
jbe
inc
or
xchg
dec
int
insb
jbe
jae
inc
xchg
scas
call
es
rorb
lahf
add
jecxz
add
je
xchg
repz
cli
sbb
cmp
aad
pop
adc
cmp
lock
mov
seto
les
dec
andb
pop
jge
outsb
testl
lods
pop
inc
cmp
sub
dec
sahf
inc
sub
cmc
movl
mov
lock
inc
fdivrl
fs
cwtl
addl
mov
rcll
sbb
jl
pop
shll
or
int3
mov
test
cmp
fld
sbb
mov
pop
in
cmp
jnp
sbb
cmp
test
test
je
icebp
sbb
ljmp
roll
in
pop
lcall
inc
ficoms
mov
sti
roll
jae
je
pop
xor
sti
push
pop
adc
icebp
push
rolb
jo
sarl
or
stos
test
gs
sahf
bound
stc
xchg
shl
push
loopne
and
cmp
push
or
cmc
add
xchg
gs
jne
scas
test
leave
push
arpl
xor
or
jne
adc
pop
dec
or
lcall
adc
aam
push
mov
and
popf
sbb
je
mov
mov
xchg
das
out
int
pushf
mov
and
mov
mov
sbb
xorb
pop
jl
in
push
adc
sarl
mov
stos
and
lods
jp
out
lahf
adc
sub
data16
cmp
pop
movl
jl
sub
jg
xchg
test
sbb
ret
push
call
pop
push
pusha
adc
clc
cmp
jae
sbb
cmp
or
inc
pop
pop
mov
xchg
sbb
sbb
jne
adc
inc
out
int3
out
jns
repnz
rep
les
push
addl
cmpsl
fsubr
out
and
in
loopne
mov
dec
in
add
imul
add
cs
inc
sarb
pop
stos
sub
bnd
mov
add
sub
lds
mov
cmpb
push
test
cmp
stc
imul
jge
ss
out
rcrl
sbb
dec
loopne
lds
pop
in
out
movsl
push
int3
out
test
pop
pop
in
mov
or
mov
sub
ss
mov
inc
loop
cmp
outsb
jp
mov
fstl
xchg
add
xor
cld
push
notl
push
popa
sbb
mov
pop
rolb
loop
cmpsl
sub
pop
push
adc
lret
sarl
cmp
push
xor
push
or
and
sbb
pop
dec
xor
rorb
fcmovbe
lret
adc
in
mov
fists
xor
out
icebp
popf
aam
bound
xor
mov
fcompl
mov
or
aaa
enter
mov
jns
lock
sahf
sbb
jmp
jnp
or
repnz
xor
inc
or
gs
push
inc
lds
stos
movsl
mov
jecxz
push
push
pop
jbe
pop
imul
addb
insl
mov
aas
bound
mov
mov
shr
dec
bound
outsl
pop
fprem1
pop
in
mov
add
inc
popf
add
enter
into
xor
dec
mov
fisttpll
and
daa
mov
fcoms
popa
jno
xor
fimull
jo
outsb
mov
jbe
inc
call
movsl
or
and
sbb
dec
jg
sub
cmp
idivl
mov
call
out
aaa
pop
dec
bound
dec
rolb
pop
call
pop
lods
cmp
fiadds
xor
mov
out
and
mov
rolb
ret
fbld
dec
or
fdivrl
dec
adc
mov
push
stos
imul
mov
jecxz
ret
xchg
sbbl
sbb
lds
cltd
cwtl
aad
adc
int3
test
inc
adc
fwait
jge
scas
out
xchg
sahf
push
inc
movsl
mov
cmp
push
xchg
lods
nop
mov
in
mov
mov
aam
push
ret
daa
pop
fnstenv
mov
popl
push
orl
daa
xchg
mov
idivb
cmp
es
mov
decl
movsl
xchg
movsl
pushf
aam
out
fimuls
sub
jmp
clc
mov
inc
sbb
ss
xchg
scas
mov
ljmp
add
daa
xor
adc
cmp
inc
cmp
jecxz
ja
test
push
cli
and
xorl
dec
scas
jns
imul
xchg
or
push
dec
cmp
ljmp
xchg
cmc
xor
in
icebp
fdivs
leave
xchg
ja
mov
add
sub
push
daa
mov
stos
sbb
dec
cmpsb
cmp
fwait
mov
mov
fs
in
testb
sbb
addr16
ret
jo
dec
hlt
gs
enter
dec
cli
cmp
idivb
lock
or
iret
mov
push
mov
enter
popf
push
stc
pop
arpl
sbb
pop
enter
mov
out
jmp
in
pop
mov
pop
cmc
mov
std
shr
cmp
orb
xor
push
pusha
out
mov
test
movsl
inc
int3
into
movl
pop
in
out
inc
lret
andb
ret
and
addl
and
dec
popa
add
js
sarl
mov
fisttpll
vpavgw
shlb
jmp
push
xchg
push
les
mov
dec
js
test
into
xchg
mov
inc
icebp
mov
cmp
dec
outsb
ja
fildl
adc
test
adc
pop
scas
xor
out
ljmp
nop
add
pop
sahf
sub
stos
xor
mov
sub
dec
xchg
cld
cld
cmp
popa
mov
cld
shl
inc
inc
mov
cmpsb
fld
aaa
pop
sbb
mov
movntps
hlt
pop
jp
mov
addr16
mov
sahf
je
dec
cld
addr16
sahf
mov
test
inc
or
lds
mov
and
jno
sbb
pop
sbb
mov
movb
aam
lods
or
or
xchg
cmpl
inc
jmp
clc
out
mov
pop
divb
push
cmp
andl
or
test
push
pusha
sbb
xor
mov
sti
mov
arpl
adc
pop
mov
and
cld
fdivr
xor
jmp
xchg
xchg
lret
imul
pushf
sub
cmp
into
push
insl
sbbl
mov
jb
movsl
popa
mov
cmp
dec
imul
push
mov
addps
push
imul
mov
adc
int
mov
push
std
dec
stos
adc
gs
inc
sbb
add
adc
xor
push
imul
movsl
sarb
ss
lea
xor
gs
jp
int3
das
shll
mov
testl
fprem
int3
adc
js
repnz
inc
fidivs
cmp
and
lods
fstpt
jb
sub
adc
outsb
inc
push
lahf
ss
sub
cltd
jmp
insb
lods
clc
pop
insb
dec
out
push
and
cs
scas
mov
test
adc
adc
arpl
inc
add
push
sub
inc
mov
in
xor
jbe,pt
lods
in
push
inc
and
jno
fiadds
rcll
leave
aaa
add
pop
test
pop
sar
addr16
fistl
push
push
xor
jmp
insl
mov
dec
jmp
or
and
je
add
push
fs
lret
jne
negb
pop
dec
jmp
rorb
sbb
sub
xchg
add
rorb
push
mov
xchg
shr
pop
jno
jecxz
mov
inc
rcl
test
mov
inc
fnstenv
mov
mov
mov
mov
xchg
pop
sar
adc
cmp
pop
test
or
fldcw
icebp
aam
std
xchg
adc
fwait
aad
cmpsb
push
xchg
mov
push
cmp
mov
jb
cwtl
dec
sti
push
xchg
mov
mov
mov
ja
sbb
nop
dec
dec
sahf
jnp
pop
inc
xlat
mov
pop
jle
ja
inc
mov
and
pop
jl
lret
jae
iret
or
xor
and
enter
out
xchg
popf
and
pop
insb
jecxz
mov
push
mov
enter
inc
fsubs
repz
sbb
fstpl
xor
aad
hlt
test
mov
cltd
shlb
xorl
sub
mov
cmc
mul
xchg
mov
add
ds
add
sarl
sarl
adc
sbb
inc
cs
cmp
mov
pop
jne
stc
pop
adc
xor
mov
xor
push
mov
decl
push
test
es
shl
stc
out
add
inc
shl
sub
int3
mov
jp
mov
or
sbb
les
stos
or
pop
jb
jo
ficoml
mov
push
repnz
mov
ja
jo
test
inc
dec
mov
cmp
lea
dec
jge
outsb
lret
lds
jns
inc
mov
sub
push
push
sbb
pop
mov
loope
fmul
push
xor
jb
jmp
jg
in
push
jnp
aaa
add
pop
mov
cmp
repnz
inc
jo
mov
ljmp
pop
push
jmp
xchg
mov
pop
mov
aad
icebp
addr16
in
push
adc
and
mov
int3
adcl
dec
xchg
push
push
idivb
scas
sbb
push
adc
in
inc
aaa
shl
in
rclb
pop
cld
cmpb
jo
adc
call
je
push
mov
mov
stos
sub
push
xchg
popf
or
leave
mov
xor
dec
loope
adc
fwait
mov
sub
cmpl
jno
and
lahf
je
popa
jmp
pop
xor
arpl
scas
cld
stos
cs
insl
jne
jae
cmp
shlb
fstpl
mulb
inc
enter
mov
lret
setae
xor
ret
loopne
dec
and
daa
cltd
xchg
adc
push
add
fisttps
lahf
lret
mov
movsb
data16
scas
int
pop
inc
cmp
sarb
sarl
cmp
dec
jb
adc
xchg
ljmp
and
add
addl
int3
rcrl
xorb
icebp
loop
repz
push
insb
push
mov
push
cmpsb
in
jb
pushf
xchg
mov
sti
loop
jle
loope
or
jp,pt
orb
mov
jno
and
dec
icebp
pop
mov
sub
jb
out
bound
inc
mov
test
xor
test
loop
sub
and
daa
fstl
mov
testb
rol
adc
into
cli
ljmp
out
pop
stc
cwtl
and
cwtl
loopne
iret
jl
out
inc
dec
adc
pop
xchg
aas
sar
pushf
mov
jmp
mov
hlt
adc
sbb
or
mov
pushf
or
in
sub
sbbb
outsb
int3
scas
popf
jp
pop
xchg
ljmp
inc
imul
rol
fsubp
sub
mov
dec
push
sbb
xchg
lods
shlb
sahf
cmp
dec
push
mov
lret
adc
adc
cmpsb
mov
mov
xchg
pop
mov
adc
inc
dec
dec
adc
jae
pushf
mov
xchg
pop
inc
push
cwtl
rorl
jae
push
push
lds
daa
sub
mov
lcall
jl
ds
cli
xchg
popf
mov
fwait
sub
inc
cwtl
outsl
push
in
sbbl
add
ljmp
mov
in
mov
xlat
xchg
sbb
test
dec
jbe
jne
ljmp
push
daa
and
fists
lret
lds
pop
call
sbb
pusha
mov
arpl
daa
imulb
ret
sub
mov
mov
add
dec
lods
xchg
mov
adc
notb
mov
pop
fisubs
sub
out
pop
sbb
popf
ljmp
sbb
cs
enter
insb
sbb
cltd
or
idiv
flds
push
xchg
dec
in
nop
pop
lahf
or
xorl
cmp
rorl
xchg
sbb
sub
lahf
icebp
cmpsl
int
aam
scas
add
loop
mov
jl
lret
dec
sbb
rcll
aad
mov
cwtl
lods
jg
and
push
xchg
jmp
out
pop
imul
mov
shl
push
or
xor
inc
push
out
mov
or
mov
les
popa
ret
inc
dec
push
jbe
push
lret
add
lahf
sbb
popa
xchg
arpl
sarb
or
sbb
scas
adc
mov
ja
xor
push
push
push
enter
mov
mov
pop
fidivl
lahf
test
fadds
xchg
hlt
cmp
movsl
dec
adc
outsl
lock
mov
pushf
jae
sbb
pop
fsts
mov
sub
leave
test
inc
pusha
stos
push
cmp
std
aam
xor
jmp
ret
cld
push
add
filds
mov
or
popa
orb
outsb
popa
push
push
dec
loop
ljmp
cmp
sbb
mov
imull
in
sti
mov
xchg
add
mov
adc
jb
rclb
adc
daa
popa
cli
mov
mov
xor
fwait
ss
nop
xchg
lods
mov
xchg
xor
mov
sub
std
jecxz
dec
pop
jl
cld
enter
push
icebp
push
das
dec
cmp
dec
pop
and
cmpsb
jbe
xor
loopne
adc
push
lds
fidivrl
pop
push
sub
icebp
jbe
outsl
xchg
je
dec
fcoml
sub
xchg
and
idivl
cmp
jnp
fcomps
lods
cwtl
popa
out
xor
inc
mov
mov
lahf
in
or
scas
xchg
shrl
ret
pop
into
into
dec
cmp
les
mov
inc
jmp
mov
jge
dec
and
and
cmp
es
into
out
cmp
jo
insl
mov
and
and
cmp
movsb
push
mull
xor
jg
fwait
idivl
rol
je
pop
std
dec
mov
sbb
js
and
mov
dec
sahf
test
inc
fmulp
push
pop
xor
shrb
xor
sbb
jbe
pop
add
loop
push
mov
jne
gs
and
gs
aaa
mov
mov
and
lret
push
mov
movsl
xchg
scas
into
dec
test
mov
mov
mov
icebp
sub
pop
cmp
adcb
pop
hlt
in
jns
dec
test
hlt
sarb
loopne
lods
ds
add
push
pop
xchg
mov
add
adc
jp
movsl
in
mov
push
dec
inc
gs
cmpsb
xor
push
ljmp
and
lock
arpl
cwtl
jmp
mov
aad
cmpsl
fisttpll
pop
and
leave
inc
inc
inc
les
ret
mov
lods
test
cmp
loopne
test
mov
dec
cmpsl
adc
push
add
arpl
insl
pop
sbb
shll
lret
scas
adc
sbb
and
sti
incb
mov
imul
enter
es
icebp
test
rolb
cmp
shr
mov
xchg
add
adc
ja
sub
dec
mov
testl
pop
shlb
outsb
jecxz
test
lods
mov
vminsd
dec
sar
add
je
cld
jle
outsl
vcvtps2pd
cmp
aaa
mov
xor
cmpsb
mov
push
inc
mov
insb
repnz
mov
test
push
mov
das
cltd
rcll
sbb
notb
fiadds
test
or
outsl
mov
imul
in
or
neg
fcoml
aas
dec
pop
lods
add
cmp
jne
push
lret
dec
inc
pop
push
dec
dec
push
jge
andb
xor
popa
call
movsb
pop
movsl
jnp
test
ret
std
rolb
xchg
repnz
jb
hlt
adc
push
pop
movsl
adc
sbb
scas
fstps
xor
fildl
popf
xor
rcrl
dec
push
push
insl
into
and
es
sub
pop
cmp
xchg
stc
in
dec
or
nop
push
or
movsb
push
lods
and
dec
repz
pop
je
popf
push
int
xchg
push
xchg
jnp
mov
aad
test
push
sub
mov
and
sbb
sub
in
out
jne
push
dec
push
xchg
adc
cwtl
aad
dec
lret
dec
push
mov
mov
cs
mov
cwtl
mov
jl
insl
lock
lods
icebp
rclb
lods
filds
cmpsl
repnz
dec
arpl
xchg
and
std
or
addl
loopne
adc
pop
ret
and
mov
out
mov
xor
mov
cli
fcom
sbb
popf
xchg
dec
jno
jns
outsl
aam
fsubs
fs
ret
xchg
xlat
xchg
mov
xchg
sub
xchg
leave
cmp
push
fadds
orb
outsl
lcall
xchg
gs
fsubp
stos
nop
cmp
sbb
loopne
lret
into
call
arpl
sbb
insl
dec
add
inc
push
sbb
cwtl
sbb
dec
into
in
repz
mov
and
inc
pushf
pop
outsl
sbb
les
mov
mov
cmp
or
pop
addb
jno
decl
dec
mov
add
dec
or
dec
data16
mov
jg
out
add
idivb
mov
xchg
cmp
outsb
repz
ja
xchg
inc
jo
jnp
mov
clc
loope
fsubrl
cmp
push
mov
sbb
movd
arpl
arpl
data16
lahf
sub
lret
jne
lock
adc
mov
mov
daa
push
gs
push
xchg
sbb
lods
scas
cmp
les
inc
inc
lret
mov
inc
jmp
in
mov
pop
jnp
ficompl
das
dec
ret
ret
out
pop
lea
leave
shr
stos
insb
or
insb
xchg
mov
lods
aaa
sub
stos
or
pop
adc
xor
pop
mov
mov
addb
pop
mov
popf
jl
fwait
push
push
cmp
adc
aam
arpl
mov
in
jle
aaa
sbb
rolb
pop
call
cwtl
sbb
das
mov
or
dec
xchg
xchg
mov
scas
fcomp
arpl
call
lahf
cmp
pop
andl
daa
jnp
scas
mov
sti
pop
mov
cld
out
dec
lea
dec
mov
inc
pushf
insb
jle
nop
xor
gs
flds
pop
inc
mov
popl
data16
push
jnp
cmp
cmpsb
data16
add
sub
aaa
pushl
adcb
shr
cltd
sub
cmp
rolb
push
shll
or
mov
pop
divl
lock
mov
dec
cmp
push
inc
mov
jle
sub
mov
sub
jo
pushf
add
ja
xchg
inc
mov
adc
xchg
or
pop
pop
mov
inc
mov
pop
jg
sti
outsl
push
sub
xlat
les
int
cmc
ret
lret
cmp
arpl
clc
cwtl
in
mov
mov
or
fcmovnbe
outsb
sub
xor
fists
out
mov
test
dec
stos
stc
inc
xchg
ffree
jp
sub
in
jp
js
clc
pop
jne
cld
dec
enter
repz
stos
mov
int
in
cmpsl
outsb
xor
sbb
lds
std
iret
inc
in
push
idivl
cmp
in
pop
arpl
mov
je
or
dec
rcrl
pop
loop
add
ss
mov
fdivs
fistl
xor
mov
in
adc
jne
dec
aas
pushf
pusha
test
je
cld
cltd
and
cmp
cmp
and
js
imul
mov
insl
mov
divl
aam
lods
fsubrs
and
jle
aam
push
shlb
fidivrs
ss
mov
push
shrl
repnz
pop
lahf
xor
loope
push
outsl
mov
mov
inc
mov
inc
inc
into
mov
shrl
out
lds
dec
in
movsb
faddl
or
xlat
mov
cmpsb
stos
lods
xor
mov
mov
sbb
adc
dec
mov
mov
pop
iret
xor
mov
outsb
add
xchg
daa
mov
es
subb
mov
dec
cld
repz
loope
mulb
dec
cmp
mov
in
sti
xor
in
push
mov
dec
repz
scas
test
xlat
mov
pop
icebp
jg
mov
push
fistps
cmc
cltd
popf
push
pusha
test
and
icebp
roll
int
clc
xchg
mov
add
fcomps
sub
pop
imul
dec
pop
xchg
icebp
xor
sbb
dec
enter
mov
ja
pop
gs
subl
cmpsl
mov
push
dec
cmp
jbe
outsl
mov
fisubrs
dec
dec
js
es
icebp
pop
subb
andl
out
inc
sbb
jnp
dec
bound
fs
inc
lods
pop
inc
add
test
roll
xchg
adc
mov
aam
pop
dec
jmp
fmuls
scas
scas
xchg
sub
or
subb
orl
cmp
jb
pop
icebp
and
mov
mov
imul
ss
ret
in
imul
mov
je
and
stc
jl
push
outsl
adc
ret
ss
adc
fsubl
sub
jno
or
lods
xorb
imul
push
and
jbe
pusha
arpl
push
shll
ds
xor
xchg
mov
push
xchg
push
enter
mov
xor
jmp
push
inc
mov
jle
sahf
pop
repz
pop
push
aaa
or
andl
add
data16
int
iret
cmpsl
mov
or
fisubl
rcll
xor
and
sub
and
outsb
call
mov
arpl
xchg
data16
mov
movsb
jae
stos
mov
xchg
and
add
xchg
shr
push
es
aam
mov
add
mov
mov
cmc
xchg
adc
in
cld
dec
add
jge
clc
aaa
popf
call
cmp
ss
sbb
mov
test
call
loopne
xchg
jns
cmp
mul
mov
repnz
in
scas
popf
push
xor
adc
out
test
loopne
sbbb
loopne
sbb
mov
adc
sub
test
jbe
jne
fs
imul
imulb
mov
leave
call
cmpsl
mov
rol
mov
pop
adc
insb
cmpsl
xchg
and
jecxz
add
inc
pop
dec
movl
fwait
inc
inc
or
mov
cmp
dec
dec
mov
inc
popf
add
sbb
push
push
or
stos
repnz
dec
gs
xchg
inc
and
cli
mov
dec
xor
jecxz
xor
and
filds
and
jge
xchg
sbb
bound
xchg
into
jae
ss
rorb
je
and
jne
and
sbb
xchg
stos
mov
loop
fwait
mov
mov
mov
insb
push
mov
mov
out
xor
adc
xor
jmp
mov
fbld
mov
mov
inc
pop
sti
addb
leave
add
inc
push
enter
or
stos
add
jmp
xchg
cld
xchg
adcl
in
repz
in
test
mov
pop
fnstsw
rorl
leave
sbb
icebp
sub
xchg
test
or
ret
or
inc
or
cmovne
or
xchg
sti
lods
mov
cwtl
test
movsb
cmp
icebp
test
outsl
and
loopne
or
and
mov
mov
inc
into
and
push
adc
push
xor
add
jg
popf
add
jmp
push
fdivrp
out
jbe
inc
cmp
int3
push
ss
mov
pop
std
insl
sbb
mov
add
xor
mov
outsl
movsb
lock
fdivs
notl
fld
rclb
int3
xchg
scas
jmp
lods
adc
fists
fxch
fdivrl
mov
cmpsl
out
mov
mov
cmp
pop
jecxz
pop
in
loopne
test
xchg
push
lret
pop
pop
cmpsb
lods
cmp
ljmp
push
subl
jl
mov
aaa
fs
pop
in
inc
jle
fucomip
cli
fnsave
mov
andl
add
clc
lock
pop
push
adc
shlb
hlt
jg
in
or
cmpsb
leave
fiadds
jp
rolb
gs
mov
int
xor
repz
pop
mov
mov
mov
jl
or
test
xchg
imul
stos
push
out
icebp
sbb
mov
mov
and
add
dec
inc
addr16
jns
fstpl
andb
pop
and
ret
leave
sbb
mov
negb
and
xchg
ret
arpl
imul
gs
iret
xchg
loopne
ss
add
xchg
lahf
cmpsb
lret
push
jns
adc
and
ja
psubsb
mov
aad
xor
or
enter
sbb
jb
ss
decb
fiadds
pop
cmp
rol
aas
out
mov
and
iret
dec
insl
mov
rcl
dec
push
jbe
sub
movsb
stc
ret
mov
sbb
xor
vmovups
test
xchg
adc
sub
cmp
jo
aas
xor
ds
pop
cmp
mov
sbb
push
jg
dec
push
push
lahf
inc
xchg
js
fdivr
lret
xchg
iret
js
inc
dec
push
int
adc
fistpll
popa
insb
mov
cmpsb
repnz
pop
scas
in
loopne
divb
mov
add
icebp
rol
pop
cmpsb
gs
jae
pop
xchg
cltd
sub
dec
xchg
add
cld
jl
lret
sbb
test
je
fbstp
pop
pop
ficomps
dec
movsl
add
sub
xor
mov
test
jle
pop
jge
mov
les
sahf
push
jne
orb
mov
ss
inc
add
ret
sub
or
push
inc
pop
jmp
adc
add
mov
loopne
cli
popa
cmp
sbb
jb
cmp
repz
adc
in
dec
xor
xchg
sub
or
adc
popf
icebp
xorl
stc
lods
bound
imul
insl
mov
xchg
xor
pushl
xchg
and
mov
shll
sarl
push
mov
cmp
push
in
ficoml
dec
sub
outsl
cli
in
and
lods
push
adc
mov
popf
fisttps
or
fcompl
aam
daa
insb
add
sub
mov
test
mov
add
mov
and
xor
push
jmp
sarl
sbb
or
cmpsl
decl
inc
lock
psrlw
scas
cmp
mov
pop
push
in
cmp
mov
cltd
scas
loopne
adcl
fdivrs
pop
mov
dec
leave
daa
leave
jb
aam
lcall
lea
ret
ret
int3
add
xor
cmp
popf
int
cmp
pusha
outsb
jb
mov
call
test
pop
ljmp
add
mov
xlat
fnstenv
je
jae
cli
sbb
xlat
inc
xlat
and
or
jnp
js
jns
xor
pop
push
jmp
or
repnz
inc
mov
cmp
xchg
stos
or
std
fcmove
fsubrp
test
sarl
test
cli
and
mov
mov
sbbb
scas
sub
pop
ret
push
adc
repnz
dec
jns
out
sub
in
push
mov
ret
arpl
pop
gs
push
shrl
push
or
mov
add
mov
inc
mov
aad
jg
mov
adc
imul
xor
inc
add
inc
bound
sbb
call
mov
mov
push
js
cltd
std
add
xor
lods
jne
pop
or
pop
cmpl
dec
in
cmp
add
inc
xchg
dec
add
xor
shlb
add
sub
push
daa
mov
dec
je
cs
sti
and
stc
mov
xchg
lret
sbb
and
and
imul
frstor
push
inc
pop
or
imul
xor
jecxz
xchg
cmp
mov
lods
fcmovnbe
xchg
cwtl
cmc
inc
mov
jmp
je
cmc
mov
mov
js
xchg
arpl
into
scas
push
rorb
sub
sbbl
call
cmpsb
pop
inc
dec
sti
xchg
dec
push
fldenv
int
cwtl
in
sbb
test
stc
jmp
loopne
inc
ljmp
fidivl
jmp
test
movsl
jnp
loopne
add
call
push
cmp
int
in
popf
xchg
mov
jns
je
sahf
cmp
ret
xchg
scas
pushf
and
cmpsl
push
pop
mov
scas
fnstsw
arpl
or
lods
lock
adc
mov
je
mov
es
fstpt
sbb
outsl
add
pop
popa
jecxz
movsb
daa
add
mov
pop
cwtl
jle
js
out
sbb
clc
fwait
aaa
jns
push
cmpsl
iret
popa
add
daa
cli
dec
std
arpl
dec
inc
jg
adc
int
repnz
sbb
pop
xchg
jg
ret
popa
fs
or
cmpsl
push
adcb
or
mov
mov
and
cmp
sbbb
dec
mov
or
icebp
mov
inc
imul
push
add
adc
stos
mov
rcrl
pop
jl
xlat
dec
or
icebp
addr16
jno
mov
and
cli
sub
aad
jo
gs
dec
inc
sbb
inc
mov
cmpsb
repnz
xchg
popf
sub
ljmp
iret
and
enter
lcall
push
js
cltd
roll
and
sub
cmp
lea
int
lret
fcomi
hlt
dec
cmpsb
sbb
lret
mov
adc
xor
dec
xor
cmpsb
lret
out
in
mov
fiaddl
jns
mov
jge
rcrb
arpl
gs
dec
clc
nop
js
xchg
add
jbe
xchg
in
aas
mov
sub
mov
dec
pop
sub
push
sbb
adc
xor
loopne
or
inc
jno
jg
sbb
mov
gs
rclb
pop
mov
jle
inc
clc
sbb
in
xor
dec
fcoml
ret
aas
repz
sub
add
xchg
adc
aad
jle
or
cmp
dec
in
sub
pop
or
test
sub
inc
xchg
mov
add
push
mov
test
pop
popl
test
insw
ljmp
inc
ljmp
test
xchg
and
loopne
sub
cli
mov
test
pop
jno
adc
mov
add
cli
or
pop
mov
jne
imul
inc
mov
adc
dec
cmpsl
data16
jp
add
mov
jge
xor
imul
inc
shrl
sti
fidivrs
lahf
jg
filds
stc
jne
xchg
insl
in
push
loop
inc
xlat
int3
outsb
xchg
enter
sbb
jp
ja
sbb
shrl
fdiv
data16
or
pop
ficoms
mov
andl
nop
rcrb
xchg
icebp
jl
jle
cmp
into
jo
aad
popa
xchg
inc
lahf
out
mov
in
sub
rol
cmp
push
leave
inc
movsb
add
inc
outsl
xor
in
mov
fwait
xor
outsb
ret
ds
sub
loop
mov
or
cld
adc
mov
cli
jo
sbb
or
fcmovnbe
push
cli
shl
pop
data16
jno
adc
incb
cmc
int3
push
pop
add
xchg
std
jb
scas
loop
jne
loopne
pop
scas
inc
iret
adc
cs
push
cmpsb
sbb
mov
hlt
ror
movsb
push
sub
inc
or
xor
popa
cli
out
sahf
or
movsb
out
sub
xor
mov
adc
xor
inc
mov
aas
mov
sbb
repnz
out
bound
dec
inc
xchg
sbb
adc
pop
daa
outsl
and
in
pop
add
clc
sbb
mov
icebp
dec
xchg
xchg
dec
ret
push
sbb
and
pop
fs
cmp
test
fldt
push
repnz
andb
xorl
mov
cmpsb
mov
cmp
xor
ss
negb
sbb
popa
movsl
sub
inc
cld
gs
inc
jge
push
or
je
mov
mov
cmp
aas
pushf
push
push
leave
pushf
xlat
xor
popf
cmpl
scas
mov
icebp
ret
adc
mov
addb
sbb
cmpsb
arpl
hlt
aam
jns
or
add
and
xchg
ljmp
mov
stc
cmp
push
int
insb
cs
int
cmp
popa
add
pop
fildll
cmp
jmp
ret
push
sarl
mov
cmpsb
clc
adc
ret
int
pop
xchg
mov
mov
imul
dec
jbe
sub
inc
fisttpl
movsb
in
or
gs
testb
rclb
nop
dec
out
sbb
ja
std
jl
mov
xor
or
in
leave
insb
repnz
test
in
sbb
es
mov
pop
push
sbb
or
adc
push
xchg
test
sub
aas
sub
daa
xchg
repz
push
dec
lock
in
mov
mov
mov
xchg
and
xchg
sub
lods
es
pop
add
xor
cwtl
ljmp
mov
sbb
xchg
stos
and
jle
xchg
daa
in
and
pop
push
inc
leave
or
jecxz
es
mov
pop
repz
lcall
in
fdivl
sarb
mov
int
xor
fcomip
jns
mov
sbb
jno
mov
je
lcall
cli
nop
adcb
and
je
cmp
out
xchg
mov
push
mov
in
xchg
ss
ror
rol
test
inc
jnp
or
cmovl
and
jo
ja
je
sbb
mov
push
mov
push
xor
ds
and
mov
pop
imul
fwait
add
lods
mov
and
ljmp
sbb
push
rcll
xchg
lock
test
cmpsb
xor
push
xchg
pushf
cld
push
ss
in
pop
cmpsl
stos
xchg
pop
push
repnz
stc
or
mov
jb
call
imul
js
sbb
addr16
dec
aas
mov
adc
mov
clc
loop
mov
in
icebp
and
mov
or
divb
inc
inc
add
push
mov
loopne
fisubs
rcl
pop
pop
sbbl
push
mov
push
adc
testb
pusha
sbb
cwtl
cs
cs
outsb
jno
test
sbb
adc
icebp
pusha
sbb
js
inc
insb
loop
sub
xchg
pushf
jno
nop
ret
rclb
shll
aas
xorb
pop
in
push
inc
pusha
cmp
push
sbb
imul
push
sbb
pcmpeqd
ja
pop
scas
mov
inc
or
popa
pop
lahf
add
xor
xchg
outsl
mov
outsb
xchg
fwait
mov
mov
cmpsb
fdivl
movl
adc
dec
pop
push
shll
and
mov
pop
shr
xchg
adcb
test
or
loop
aam
imulb
into
rcrb
lds
shlb
scas
adc
out
lret
pop
pushf
jo
push
sarl
cmp
fnstcw
xchg
ret
jmp
and
xor
lods
fldenv
sub
out
jbe
mov
pushf
mov
fistl
add
mov
push
ret
or
xor
movsl
xor
push
scas
mov
jne
add
mov
jne
test
inc
aad
nop
imul
aam
sbb
fbstp
shll
out
xchg
mov
mov
sti
mov
out
cmp
in
sti
add
and
xor
mov
jl
loope
faddl
negl
pop
or
sub
or
xor
adc
mov
sbb
xchg
mov
cmp
jnp
mov
sub
sti
call
aaa
stos
sbb
dec
aas
enter
stc
adc
movsl
mov
cli
mov
fmuls
adc
in
stc
fwait
push
push
xchg
ror
scas
mov
xchg
adc
cmp
xchg
pop
nop
sub
xchg
cs
repz
adc
mov
push
ficompl
in
insb
add
jge
cld
jne
sub
mov
cmp
and
lcall
movsl
or
cltd
mov
jns
cs
and
bound
lret
notl
mov
rcll
imul
xchg
arpl
inc
lods
or
pushf
xchg
dec
rcll
inc
dec
jmp
push
bound
and
cli
daa
push
fidivrs
inc
push
mov
cwtl
fstpt
cmc
in
fs
pop
in
mov
icebp
sub
stc
mov
flds
inc
test
dec
es
lock
jb
ffreep
xchg
cli
ret
ja
shlb
daa
mov
stos
enter
inc
sub
pushf
or
out
sbb
cmpl
das
push
and
adc
mov
inc
imul
sbbb
sbb
mov
mov
pop
and
mov
loop
insb
neg
lcall
jge
out
fdivrl
in
orb
sub
mov
insb
cmpl
es
insl
push
neg
mov
cmpsl
out
rorl
movsb
adc
dec
adc
stc
popa
js
aam
stos
scas
hlt
test
push
lods
mov
push
mov
out
mov
dec
add
pop
rclb
out
aas
sub
movsl
sub
dec
leave
adc
bnd
mov
inc
jae
sbb
mov
xchg
imul
lods
jge
mov
insl
jno
mov
scas
mov
idivb
push
ja
sub
xlat
es
dec
lret
push
xor
mov
mov
cld
inc
movsb
rcll
or
hlt
sub
jp
out
jno
pop
mov
movsl
popa
sbbb
xor
inc
in
jns
into
push
dec
xor
ret
int3
das
sub
je
dec
in
mov
push
lahf
add
lea
dec
cmp
cs
pop
aaa
xchg
fs
test
shr
sahf
into
lret
loope
pusha
and
cmc
stos
dec
stos
enter
sbb
push
test
sbb
mov
daa
test
rorl
shr
mov
or
out
push
ret
leave
sbb
and
xlat
or
mov
mov
sbb
clc
stc
rorl
jne
cmp
mov
aas
test
jne
sbb
adc
push
push
data16
and
cmp
loope
test
cmp
sahf
dec
adc
mov
jge
adc
ja
gs
mov
sahf
mov
xchg
and
push
mov
xchg
fwait
incb
sbb
dec
xchg
shll
adc
push
cmp
dec
imul
sub
rcr
in
subl
mov
cmp
jg
dec
pop
sarb
xlat
push
cmpsb
enter
icebp
push
push
mov
fistps
inc
pop
or
push
in
popf
mov
push
sbb
ds
push
push
dec
jb
mov
shrb
fs
pop
sub
mov
cli
inc
mov
jbe
movsb
sbb
cwtl
loope
lods
mov
negb
fmull
push
and
lret
add
or
inc
std
popf
rcrl
outsb
insb
or
xor
push
ljmp
dec
mov
jne
hlt
outsl
out
inc
sbb
int3
add
mov
jnp
lahf
mov
in
sbb
sahf
and
rorb
pusha
call
jge
daa
push
push
cmp
leave
in
inc
testl
pop
push
sbb
int
xchg
mov
iret
lods
sbb
test
jno
and
dec
push
cs
mov
pop
or
push
fidivs
movsb
sti
cli
js
cmp
imul
out
test
call
cmp
inc
jnp
cli
or
push
into
test
sub
pop
inc
or
cmp
dec
in
ds
dec
daa
leave
fnstcw
aaa
add
jae
inc
mov
imul
mov
jns
add
scas
dec
pop
fs
mov
add
push
icebp
dec
jo
cmpb
leave
or
mov
xor
or
cld
adc
jge
jae
mov
lret
cmpl
les
dec
scas
inc
cmpsl
pop
xchg
or
xchg
stos
loopw
mov
mov
xor
inc
call
mov
pop
inc
add
inc
cltd
sub
rol
lods
out
inc
add
test
xchg
scas
adcl
sbb
pop
push
push
xchg
popf
scas
lds
cmp
int
in
xor
aam
jp
xlat
in
in
cmp
push
std
gs
and
mov
fisttps
cmp
ds
dec
test
ja
pop
outsl
sbb
pop
inc
mov
xchg
mov
shr
and
jns
adc
and
shlb
sbb
ljmp
inc
cmp
or
inc
ret
add
sbb
push
cs
fstps
cmpsl
xchg
sbb
stc
xchg
and
mov
scas
jle
outsl
jmp
andb
xor
or
iret
add
rcr
scas
rolb
or
add
xlat
mov
insl
cmpsb
movsl
mov
xlat
js
push
xor
lds
nop
popa
push
les
pop
ljmp
mov
sbb
pop
cmp
cltd
lock
cmpsb
push
out
dec
cmp
jl
pop
mov
adc
rcl
pusha
pop
inc
add
mov
jne
js
dec
mov
jecxz
in
cli
push
in
ret
movsl
cmp
and
mov
jns
lahf
flds
sbb
js
push
xor
addr16
inc
aam
outsl
sbb
cmpsl
fidivs
jg
adc
mov
jp
push
pop
mov
sbb
cmpsl
jg
rol
push
stos
mul
mov
push
inc
jmp
lea
fldenv
out
xchg
ljmp
and
sbb
adc
jbe
xchg
inc
mov
push
inc
push
out
mov
cmp
adc
sbb
add
xlat
xor
or
xchg
add
aas
cmp
pop
cmp
rcrb
or
jmp
cld
fnsave
mov
inc
xor
mov
daa
into
fsubp
add
mov
in
filds
insb
sbb
sbb
scas
add
mov
stc
shlb
bound
sub
xor
add
stc
add
fwait
mov
and
xor
aad
addr16
xchg
fcoms
cmpsb
mov
inc
xor
inc
stc
mov
adc
mov
jl
xchg
ss
stos
out
adc
pop
xchg
aad
js
adc
sub
push
sub
aaa
inc
dec
fstpt
adc
inc
mov
orl
mov
push
mov
jne
xor
loopne
jno
jo
cmp
pop
test
xchg
std
and
dec
xchg
ficomps
mov
call
popa
push
xchg
test
jge
lock
fs
jbe
mov
bound
and
xor
dec
mov
fwait
inc
dec
neg
jl
add
std
push
or
hlt
stos
cwtl
cmp
mov
mov
ret
sbb
xor
stos
sarb
pop
out
nop
cmp
in
sbb
gs
fstl
popf
push
shrb
add
jmp
mov
push
cli
dec
je
mov
jne
aaa
jge
in
lock
mov
adc
pop
stos
mov
xor
arpl
cmp
cmp
or
xchg
push
js
cwtl
push
adc
mov
and
adc
push
out
lret
push
and
mov
mov
mov
roll
lcall
jne
and
or
mov
xchg
sub
mov
retw
jno
mov
xor
dec
icebp
insl
dec
imulb
repz
lods
and
sub
lahf
xchg
jge
mov
lock
mov
xorl
adc
mov
adc
mov
push
scas
pop
push
pushl
dec
push
fmuls
sbb
fs
xor
lea
into
cmp
mov
jge
clc
cmpsb
js
fnsave
dec
dec
xor
imul
mov
add
cwtl
sbb
add
jns
loope
pop
fs
movsb
jge
pop
xchg
mov
faddl
dec
adc
scas
les
push
and
mov
fidivs
mov
sbb
pop
std
dec
fidivrs
mov
push
cmp
jg
push
movsb
lds
leave
int3
sbb
loop
movsb
mov
cmp
jo
stos
arpl
sbb
jbe
mov
popa
nop
mov
jecxz
mov
popa
push
andl
pop
or
stos
movsl
mov
mov
into
lcall
inc
pop
outsl
dec
fcoms
xor
lret
mov
dec
inc
shlb
stos
aad
out
sahf
aam
fldln2
bound
aam
mov
in
aas
xchg
cmp
push
mov
cmpsb
inc
sbb
dec
std
mov
sahf
mov
and
sub
pop
ret
mov
gs
push
test
jnp
push
xor
pop
jle
enter
dec
adc
dec
cmpsb
jbe
mov
mov
sbb
pop
cmpsb
sbb
pop
hlt
int3
push
fisttps
sbb
xchg
nop
dec
js
lcall
xor
scas
lret
jle
inc
aaa
fcmovb
aam
int3
xor
push
cmpb
shlb
popa
stos
mov
outsl
mov
or
jno
push
mov
sahf
mov
ds
roll
add
pop
sub
imul
imul
hlt
or
pop
cmp
popa
add
test
mov
pop
std
jmp
dec
add
inc
pushf
sub
cmp
xchg
cltd
aas
cwtl
mov
fs
dec
loop
call
mov
jnp
mov
push
or
dec
inc
das
or
movsl
sub
add
jle
nop
or
subl
int
pop
pushf
stos
push
push
xchg
sub
push
adc
lahf
xchg
je
ds
push
mov
arpl
fadd
mov
dec
jle
dec
mov
xor
je
jecxz
xchg
popa
mov
jg
xchg
pop
sbb
sbbb
lret
lret
sbb
mov
xor
out
xor
jecxz
or
jl
les
gs
pop
xor
mov
dec
jbe
or
cmp
adc
das
btr
jle
sub
or
or
dec
sbbl
test
ljmp
inc
dec
push
xchg
pusha
mov
push
aad
mov
lcall
add
movl
repz
add
mov
bound
out
cld
cmc
idiv
mov
sbb
test
pop
and
adc
mov
push
sbb
push
dec
daa
test
push
xor
sub
sbb
data16
xchg
std
fsubl
inc
inc
scas
data16
cli
aam
stos
adc
ljmp
divl
testb
cmp
cwtl
pop
fnstsw
mov
subb
jg
and
adc
out
or
jecxz
mov
jbe
xchg
leave
clc
push
sub
inc
in
push
js
push
scas
mov
popf
leave
adc
jne
ljmp
leave
push
jle
mov
pop
insb
popf
outsl
cmp
movsl
inc
and
push
xchg
jb
lret
inc
inc
les
inc
add
jle
pop
scas
cmpsb
mov
push
icebp
cmp
dec
push
push
push
ljmp
test
and
inc
xor
out
inc
rcll
flds
aad
add
outsb
sub
mov
cmp
sbb
adc
into
shlb
mov
adc
aam
pop
adc
pop
icebp
popa
mov
jae
stc
dec
mov
and
sub
xchg
mov
sti
bound
test
fadd
mov
mov
mov
xor
mov
adc
inc
adc
bound
enter
inc
daa
int
jl
cmpsl
stc
scas
push
pop
repz
cli
xchg
pushf
dec
inc
divb
and
shll
test
sbb
jnp
scas
les
mov
mov
sub
inc
push
cmp
out
jns
imul
jecxz
aaa
xor
stc
movsl
push
loop
lds
ds
shll
sbb
rcll
mov
frstor
hlt
inc
popf
popf
dec
or
mov
test
xchg
xor
inc
lahf
xlat
test
cmp
inc
mov
push
dec
inc
orb
adc
in
popa
mov
cmc
jp
les
xchg
or
cmpsl
loope
pusha
out
mov
mov
jl
mov
das
sbb
fsubl
xchg
call
inc
mov
inc
imulb
mov
cmp
mov
imul
fcos
sarb
cli
fdivrl
scas
lret
adc
stos
xor
dec
out
fmuls
or
dec
cld
sbb
pop
add
cmpsl
aam
mov
mov
sbb
test
test
push
add
xor
xchg
cmp
repz
and
jmp
shlb
fldl
data16
mov
sbb
mov
int
loopnew
inc
in
addl
sahf
xor
in
subl
outsl
insb
fidivl
ss
icebp
mov
cmp
jle
mov
call
xchg
mov
jne
sbbb
icebp
or
pop
jle
cltd
lret
sub
sbb
mov
sbb
lds
insl
and
cli
in
push
adc
mov
mov
xchg
out
inc
imul
fcomip
fists
xor
cmp
frstor
outsl
int
out
es
pop
mov
jp
ret
xchg
clc
mov
je
repz
xchg
int3
imul
adc
and
rcrl
shrb
repnz
shrb
jle
in
adc
add
cmp
dec
sti
cmc
mov
mov
jmp
push
lahf
aas
mov
xor
data16
sbb
fnstenv
lcall
pusha
and
ret
call
mov
sub
das
adc
test
xchg
testb
sbb
sbb
xor
cvtpi2ps
jnp
rclb
push
shrl
ret
mov
mov
cmp
inc
insl
insl
test
adcl
cmp
mov
ja
and
ds
je
cmpsb
js
aas
sub
and
or
rcll
jmp
int3
fnstcw
call
rorl
fdivrs
aam
sbb
add
pop
xchg
sbb
rol
push
jl
pop
rcrb
popf
loope
shlb
jo
pusha
jle
cmp
xchg
or
arpl
int
aad
ret
and
imul
cmpsl
and
test
in
jge
xchg
sub
mov
arpl
std
pop
or
xchg
das
mov
psadbw
lea
or
lea
sub
push
pop
rolb
test
xlat
adc
mov
sahf
lods
enter
fwait
js
or
ja
jne
jb
dec
xchg
jb
ljmp
cmp
out
adc
jmp
push
and
into
notb
mov
lret
push
out
and
rcrb
jp
adc
lcallw
push
cmp
sbb
in
adc
outsl
outsl
push
idivb
push
enter
dec
mov
dec
fimuls
and
pusha
call
hlt
or
jns
nop
sbb
clc
ficoms
mov
pusha
test
dec
mov
mov
sbb
stos
shlb
int3
mov
inc
das
add
mov
sti
scas
or
jbe
push
cmpsl
xor
pop
shufps
sub
mov
sbb
sbbb
xchg
pop
test
mov
cmp
push
push
xchg
pop
push
mov
add
xchg
rolb
aam
inc
in
jle
ror
and
test
mov
sub
jge
sub
scas
xchg
test
mov
inc
cmpsl
mov
cwtl
xchg
adc
pop
mov
pop
sub
xchg
push
jb
cmp
and
xor
dec
jecxz
and
jl
mov
push
loopne
in
nop
rclb
lods
and
pusha
push
push
inc
das
clc
test
inc
pop
or
xor
and
arpl
fs
leave
das
lock
fidivrs
add
cmp
enter
sbb
lods
lds
inc
aaa
mov
sti
enter
adc
pop
pop
xchg
data16
xlat
popf
test
xor
push
mov
rcl
es
nop
mov
push
ror
fimull
in
sub
mov
rcrb
lods
xchg
push
inc
stos
mov
push
or
add
inc
sub
jo
adc
out
xor
in
roll
pop
mov
mov
mov
aad
mov
addr16
mov
mov
int
aaa
int
push
mov
idiv
flds
popf
xorl
inc
test
sub
jecxz
fcmovnbe
xchg
xchg
cld
nop
or
or
dec
lock
shll
xchg
in
push
sahf
xor
ret
cmp
nop
push
push
jecxz
push
gs
and
adc
sti
jnp
cmp
stos
das
mov
mov
not
mov
and
pop
cmp
ja
xchg
repz
lods
cmp
fnstenv
mov
pop
outsb
test
jnp
cmpsl
cltd
and
es
inc
inc
loopne
sub
fisttpl
pop
or
xchg
mov
mov
or
jle
shrl
mov
iret
adc
lahf
in
xor
rclb
outsb
xchg
push
negb
inc
mov
pop
call
pop
loope
mov
loop
jns
and
jb
mov
ja
xchg
xor
shufps
or
bswap
xchg
push
jo
loope
mov
jno
es
add
adc
loope
call
mov
cltd
mov
and
inc
inc
daa
sub
movsb
rclb
mov
cmp
roll
mov
mov
insb
outsl
mov
outsb
leave
mov
jg
out
movsl
xchg
mov
loop
test
xor
lret
div
cmc
je
pop
mov
push
cmp
jne
je
pop
lock
pushf
xchg
fnstcw
ficoms
lods
mov
push
cs
aas
imul
xchg
in
dec
aas
nop
test
dec
cmp
icebp
in
adc
test
out
and
inc
enter
in
xchg
mov
push
mov
imul
cld
aam
push
pop
movsl
das
and
push
and
lea
xchg
pushf
call
mov
frstor
pop
ja
ljmp
pop
aam
clc
push
dec
pop
lcall
lods
vpsadbw
xor
cmpsb
jne
jne
sub
daa
mov
pop
clc
or
xchg
negb
cli
outsb
or
imul
jmp
inc
ja
stc
pop
dec
push
cmp
imul
ret
push
sahf
add
pop
and
rolb
lret
dec
and
das
into
add
mov
es
push
xlat
and
or
into
mov
shlb
int
shl
cmpsl
sbb
mov
clc
sub
jg
inc
and
leave
into
lea
sbbb
sub
jmp
movnti
xchg
fdivs
lods
mov
imul
shrb
dec
fwait
mov
lret
in
lock
movsl
ss
outsb
ljmp
add
xchg
fistl
repnz
imul
cmp
pop
xchg
arpl
mov
or
fcompl
xor
lahf
inc
add
cwtl
cltd
push
iret
jnp
loop
jge
addr16
mov
insb
add
and
enter
aam
mov
imul
dec
or
in
and
adc
mov
cmp
push
lock
lcall
jbe
add
cmp
daa
mov
mov
xor
and
inc
fidivrl
fadd
jp
movlps
ja
inc
mov
outsl
fnsave
out
jge
mov
cmc
push
adc
mov
call
sbb
pop
loope
test
xchg
push
pop
fsts
mov
pop
sbbb
daa
push
jmp
or
imul
fwait
xchg
mov
imul
sbb
nop
lret
hlt
div
or
sub
xchg
test
imul
shr
lods
push
inc
adc
xchg
aaa
mov
mov
sub
addr16
testl
out
mov
lods
cld
jmp
and
int
js
out
adc
leave
scas
xor
mov
xchg
sub
jmp
cmpsl
xchg
outsl
scas
pop
xchg
scas
and
test
inc
pop
es
outsb
jge
hlt
xchg
insb
imul
pushf
fists
push
nop
dec
xchg
mov
cmc
lcall
and
fstps
jae
add
jmp
xlat
stos
loopne
ret
orb
pushf
xor
loope
cmp
jg
mov
hlt
lahf
in
ss
mov
dec
inc
inc
push
cmp
jmp
inc
xchg
or
negl
insb
nop
in
popa
das
call
in
sub
cmp
arpl
jmp
mov
shrb
or
or
xor
pop
inc
out
push
lahf
dec
jle
xor
inc
dec
mov
icebp
inc
fisubrs
push
movsl
pop
cmp
decl
sub
pop
mov
bndldx
xor
jnp
enter
sub
lret
pushf
shrl
jne
dec
dec
xor
jmp
sub
lods
cmp
pop
adc
and
fwait
jge
lods
add
or
rep
pop
lahf
or
das
in
or
adcl
adc
mov
xor
mov
cmpsl
adc
pop
lods
das
inc
xchg
mov
stos
jg
inc
xchg
pop
fldl
dec
xchg
out
imull
movsl
movsl
lock
jnp
andl
addr16
pop
jo
push
or
outsb
pusha
inc
adc
mov
cmpl
popf
mov
insl
jecxz
sbb
out
cmc
cmc
pop
lea
or
loopne
sub
paddw
mov
add
pop
and
inc
js
mov
sub
sbb
push
cmp
dec
pop
add
sub
xor
cmp
andb
jnp
pushf
mov
mov
mov
ret
pop
mov
fwait
repz
jmp
lds
adc
sub
ss
dec
movsb
out
loope
add
mov
jmp
in
aad
mov
mov
inc
sub
adc
std
mov
das
mov
in
dec
xchg
or
sarb
out
xlat
xor
test
andl
xor
jns
xor
mov
insl
lahf
divb
out
push
or
ss
add
mov
repz
xchg
and
mov
xor
inc
lea
outsb
cltd
xor
mov
xor
sbb
push
loope
lock
imul
ljmp
lea
and
xor
loope
pop
scas
jns
lds
inc
xor
imul
mov
jne
push
jae
or
movl
out
and
add
fwait
jecxz
andb
push
sbb
mov
sbb
pop
or
int3
xchg
arpl
or
inc
cld
mov
inc
lea
dec
push
dec
adc
roll
negb
mov
scas
adc
dec
mov
lods
repz
xchg
les
dec
mov
jle
out
dec
adc
xchg
xor
das
fdivs
stos
out
mov
inc
inc
gs
ds
ror
ret
sbb
hlt
adc
sti
movsl
pop
mov
ljmp
push
pushf
add
pop
pop
bound
cmp
inc
cmpb
sbb
mov
leave
out
rcrb
sarb
fstpt
xchg
mov
inc
mov
or
aad
jns
push
outsl
aas
push
or
xchg
push
mov
cld
sub
xchg
mov
nop
stos
lahf
insl
dec
mov
stos
and
mov
and
cld
loop
mov
movsl
mov
mov
add
cmp
inc
in
xchg
in
aas
pop
or
inc
cmp
pop
nop
dec
fcmovne
push
out
movsb
push
aas
inc
cs
es
dec
scas
inc
je
out
insl
mov
and
mov
mov
jmp
mov
adc
test
pop
mov
hlt
loop
pop
or
insl
sarb
xchg
sub
or
xchg
sub
push
fadd
lods
test
decb
xor
arpl
push
test
insl
pop
and
aas
jb
lret
and
sbb
pop
inc
inc
ret
js
lea
daa
cwtl
jns
xchg
fmuls
mov
roll
sbb
jno
push
sbb
fnstsw
test
sbb
out
add
scas
push
mov
dec
pop
mov
sbb
pop
pop
test
xchg
or
cmp
shlb
movsl
mov
orl
jne
fcoms
inc
lcall
inc
mov
push
mov
pop
jmp
dec
lcall
lds
pop
jle
sbb
test
cmc
es
popa
xchg
aaa
scas
out
or
dec
xor
incb
fcomps
or
sbb
rcl
mov
jnp
xchg
xadd
push
push
jmp
inc
ret
dec
cmc
sbb
jne
inc
mov
fnstsw
xor
mov
into
fiadds
xor
mov
inc
into
or
pop
out
push
xchg
add
leave
xchg
mov
add
xor
mov
fcmovne
or
dec
inc
movl
xchg
jg
mov
out
clc
mul
lahf
jns
pop
xlat
sbb
dec
mov
fs
in
ljmp
lods
jmp
cld
fs
add
roll
pop
sub
xchg
loopne
and
mov
inc
inc
add
test
sub
adc
xor
movsl
sbb
in
mov
int3
sbb
aas
out
or
out
cmp
jg
jg
mov
call
loope
push
in
push
xor
repnz
cmp
daa
cmpsl
mov
add
lret
in
xchg
dec
icebp
xchg
xchg
pop
inc
lahf
je
and
test
xorl
push
movsb
xlat
out
mov
je
insb
lret
icebp
mov
mov
push
addl
fnsave
jle
push
mov
add
xor
xor
fcompl
daa
pop
jge
cmp
xor
adc
subb
push
ds
or
movsl
fstpt
aam
add
lret
push
adc
sub
aam
sbb
inc
out
dec
mov
repnz
or
rcrb
aad
in
and
out
fidivl
inc
int
sbb
xor
mov
add
outsb
leave
imul
ret
lret
outsb
sbb
xor
and
push
mov
add
into
into
sbb
mov
orl
in
cld
inc
lods
xchg
mov
push
cli
sub
add
inc
out
mull
inc
jg
fwait
xor
and
bound
fsubs
pushf
inc
ficoml
ljmp
sub
mov
adc
movsb
outsl
add
xchg
iret
jb
sub
add
gs
adc
sub
mull
mov
ljmp
pop
inc
xor
bound
lods
xor
jns
clc
cmpsl
sti
lahf
cmpsl
les
or
cmpb
mov
scas
arpl
pop
mov
jmp
mov
loope
in
outsl
or
sar
fs
ret
sbb
push
loopne
lret
pop
jl
inc
or
jg
adc
sub
ret
inc
jae
fiaddl
cs
imul
dec
cmp
sub
shll
inc
jmp
jno
mov
jns
dec
cmpsb
push
arpl
pushf
jmp
imulb
hlt
xor
and
out
imul
pop
pop
arpl
ret
aad
add
pop
mov
cmp
rclb
push
jl
in
bound
test
xor
mov
jge
adc
sub
pop
jmp
icebp
add
out
sub
jmp
cwtl
push
sub
dec
mov
or
es
out
sub
mov
aaa
shl
shll
push
mov
jb
mov
push
cmpb
fmul
mov
hlt
mulb
push
or
push
xor
xor
daa
jns
lret
add
xlat
xor
mov
xlat
ds
xchg
mov
mov
mov
movsl
pop
scas
call
das
std
xchg
inc
outsl
pop
outsb
out
jmp
dec
ror
cmp
sub
push
inc
imul
out
mov
sbb
or
dec
xor
jo
xorb
xor
dec
into
dec
sbb
popf
imul
sahf
das
insl
mov
aas
icebp
arpl
lahf
popa
out
jl
mov
imul
jmp
fsubp
add
pmulhuw
hlt
xchg
jmp
scas
or
cmpsl
and
in
ret
mov
push
outsb
fadds
lret
pop
loopne
cs
xchg
out
fwait
mov
dec
sub
popa
pop
xor
pop
test
mov
fbstp
mov
imul
xor
dec
inc
mov
pop
and
lcall
pop
xor
fs
popa
outsb
sbb
xchg
mov
jecxz
xchg
mov
mov
leave
lret
adc
std
add
outsl
mov
cli
lods
mov
dec
clc
test
addb
pop
pop
fcomp
adcl
ja
in
popf
adc
test
adc
scas
popf
mov
adc
loope
inc
push
jo
cmp
lods
xchg
adc
shll
or
daa
add
pushf
arpl
cltd
repz
cmp
addr16
lock
fidivrs
arpl
xchg
mov
icebp
add
insb
lods
jno
push
pop
subb
loopne
jmp
insl
pop
aad
jno
outsl
adc
fwait
repnz
fisubrl
jecxz
add
bound
fdivrp
negb
mov
sbb
int
xor
xchg
mov
sahf
jl
adc
ss
fwait
bound
adcb
jge
fldcw
sub
inc
xchg
lcall
push
push
push
scas
adc
popa
xchg
ret
orl
mov
bound
bound
adc
test
lea
dec
daa
sbb
or
or
jo
cmp
insl
xchg
mov
fsubrl
shl
dec
popa
or
repz
cmc
sub
push
adc
mov
push
cmp
xchg
popa
mov
sub
mov
movsl
mov
adc
jecxz
xchg
icebp
jns
mov
int3
push
std
shrl
in
sub
ja
xor
jae
mov
push
mov
inc
xchg
cli
add
jmp
bound
fs
dec
or
imull
cwtl
repz
loop
int
subb
fldcw
fprem
ljmp
int3
pop
aaa
cmp
in
cmp
pop
lods
ror
fs
inc
fs
jno
or
cli
xchg
mov
cmp
push
fs
xchg
jle
int
jno
add
sti
scas
es
sub
push
cmp
fnstsw
cmp
jo
mov
sbbl
xchg
xchg
pop
jl
insb
mov
mov
clc
jle
mov
xchg
popf
pusha
pop
fs
jnp
and
or
add
int3
cmp
ljmp
mov
imul
sbb
dec
mov
iret
daa
push
adc
outsl
int3
jge
pop
scas
xchg
in
mov
in
addr16
fs
jns
mov
sub
dec
lret
insl
mov
aam
pop
loope
jge
add
test
mov
and
add
test
mov
lret
movsl
and
xchg
or
mov
icebp
inc
fyl2xp1
fsts
into
and
test
popa
pop
cli
outsl
dec
lcall
loop
fsubrp
xor
in
dec
pop
fwait
inc
push
add
pop
dec
push
mov
pop
int
loop
pusha
addr16
xor
leave
jae
ss
int
bound
sbb
xchg
test
test
faddl
cmp
aam
dec
xchg
and
test
cmp
cmp
repz
in
fisubrl
mov
mov
stc
test
push
push
sbb
adc
sub
jns
stc
adc
pop
dec
push
testl
pop
mov
mov
bnd
add
out
pop
test
xor
das
pop
sub
mov
add
mov
fnstsw
test
pop
dec
scas
sub
sub
mov
xor
cmp
ljmp
adc
inc
repz
xchg
imul
lea
cmp
adc
and
out
sbb
mov
xchg
daa
mov
xor
push
mov
jbe
push
das
dec
out
inc
xor
fldl
mov
ss
jb
popa
arpl
sarl
in
or
jo
test
daa
cmp
rcrl
rcrb
test
mov
pop
mov
xor
nop
xor
jl
push
fistpll
scas
push
lret
sub
jl
pop
add
fcmovb
popa
mov
inc
icebp
inc
add
xchg
or
pop
test
fucompp
ss
sub
jns
jns
and
cmc
push
sub
dec
shr
inc
sbb
mov
ret
aas
stos
adc
imul
cwtl
dec
ja
add
dec
es
or
pop
hlt
dec
adc
xchg
lods
add
and
mov
sbb
sbb
push
inc
fchs
orl
movl
jo
mov
in
xchg
sbb
lods
jae
mov
xchg
add
cmp
fs
std
sbb
div
ret
jg
test
mov
mov
mov
test
add
jb
int3
cli
aaa
inc
cmc
fdiv
pushf
sti
cmc
popf
mov
inc
xor
lret
inc
mov
idivl
push
int3
cmp
push
pop
inc
dec
mov
mov
sbb
mov
rcll
pop
subb
outsl
in
push
inc
dec
stc
jae
cmp
dec
sarl
test
dec
leave
jbe
xor
stos
xchg
arpl
inc
lock
sbb
xchg
icebp
dec
push
iret
xchg
movsb
sarl
bound
push
ret
div
add
dec
test
rcll
adc
adc
add
jno
mov
dec
cs
xchg
mov
ja
repz
xchg
ret
nop
stc
cld
mov
cmp
jg
mov
and
adc
xchg
iret
mov
sbb
add
pushf
jl
shlb
outsb
pop
xchg
xor
negl
add
outsl
gs
aad
push
cmpsl
pop
repz
stc
aaa
push
imul
mov
imul
xor
mov
push
mov
add
fwait
scas
cli
add
cltd
je
cwtl
jmp
in
push
xchg
mov
xor
xor
adc
arpl
add
inc
sub
aam
add
dec
sub
insl
lods
mov
pop
sbb
pop
inc
call
mov
jae
aaa
fmull
fisubl
mov
jg
aaa
fwait
out
imul
lahf
push
jecxz
xchg
push
and
add
pushf
mov
cwtl
mov
bound
push
add
push
sub
aaa
pop
jo
inc
push
mov
std
stos
into
sarb
leave
es
push
adc
out
xor
jg
xchg
xchg
jl
adc
jp
cmp
jbe
xchg
and
push
into
movsl
mov
jb
sbb
push
xchg
push
cmp
lahf
dec
ret
mov
add
add
sub
pop
add
cmp
out
and
sbb
dec
pop
inc
dec
mov
mov
sahf
mov
sbb
adc
or
test
in
mov
jno
mull
inc
and
repnz
xchg
inc
mov
in
aad
cmpsb
mov
stos
pusha
and
lcall
xchg
mov
cmp
inc
xor
xchg
jmp
push
xchg
leave
out
insl
adc
jl
sti
inc
sbb
adc
adc
aaa
push
pusha
sub
or
dec
jne
sbb
xorb
sub
sub
adc
roll
imul
add
pusha
mov
mov
es
sub
add
sbb
xchg
shrl
daa
fcoms
movsb
aad
popf
fldl
ret
out
mov
ror
popf
jmp
dec
repnz
mov
outsb
xchg
sub
push
xorl
mov
jnp
jecxz
fmull
shrb
dec
idivl
jnp
jmp
sbb
ret
jg
repz
xchg
clc
push
cmp
pushf
movsl
lcall
movsb
scas
in
shll
jne
movsl
adc
and
insl
mov
adc
xchg
arpl
pop
pop
jle
bound
lods
sub
mov
rorl
flds
scas
push
je
fidivl
cltd
outsb
sbb
repz
cwtl
cli
pop
imul
pop
and
andb
mov
sub
fucomp
stc
or
insl
popf
xor
jo
push
cld
dec
mov
mov
adc
in
lcall
push
or
movsl
icebp
hlt
cmp
mov
and
pop
xchg
mov
dec
mov
cmp
mov
int3
outsb
fsubs
test
jns
stos
mov
aas
jns
adc
jnp
std
sar
jecxz
push
mov
ret
push
xchg
mov
enter
pop
cli
test
push
mov
test
in
mov
into
faddl
loope
fldcw
adc
mov
pop
movsl
aas
xchg
add
fwait
xchg
adc
pop
cmpsl
je
sub
xor
push
les
imulb
adc
ja
lcall
mov
ficompl
push
pop
sti
dec
leave
dec
in
inc
sahf
inc
in
push
push
pusha
push
push
fadds
test
in
fdiv
mov
and
out
ds
ja
scas
cmc
imul
movsl
stc
std
jo
sub
cmp
jle
fwait
dec
dec
out
insl
sbb
fcoml
ja
orl
loopne
cmc
jne
pop
sbb
mov
ljmp
adc
inc
pop
arpl
mov
dec
imul
xchg
sti
mov
leave
push
mov
fisubrs
loopne
nop
xchg
cmpl
and
shll
mov
aas
test
mov
pop
push
and
fisubrs
icebp
pusha
aad
push
cmpsb
daa
mov
mov
inc
stos
in
fisubl
and
lcall
mov
mov
in
mov
ret
inc
fmul
xor
cwtl
daa
sbb
inc
xchg
sbb
cmpsl
out
dec
inc
add
or
repz
sub
adc
push
cli
and
pop
scas
mov
test
sarb
repz
and
insl
xor
pop
gs
xchg
in
mov
or
test
pop
scas
movntq
out
iret
xchg
push
mov
mov
add
push
rol
sarb
jbe
js
mov
rcl
add
out
cmpb
push
insb
fsubs
nop
sbb
push
fs
ja
inc
cli
push
xchg
jo
fbstp
xchg
xor
leave
jo
dec
shrb
xor
xchg
push
movsl
and
mov
jmp
xlat
dec
adcl
imul
jno
ljmp
out
xor
test
ja,pt
or
lods
aad
sub
mov
xchg
xor
sbb
push
cmp
push
imul
or
sub
sbb
movsl
cwtl
imul
xor
jo
push
and
jnp
je
mov
test
popf
jno
fbld
addr16
jp
cmp
call
sub
insl
cmp
dec
inc
ss
dec
out
fisttps
call
or
jp
nop
daa
fneni(8087
push
jmp
push
cmpsb
dec
notl
prefetch
or
divl
xchg
and
arpl
pop
push
out
inc
xchg
xchg
mov
jns
jle
mov
xchg
xchg
push
mov
add
loop
pop
sbb
jge
ljmp
clc
jne
or
dec
push
ja
call
lock
fwait
sub
dec
or
mov
sub
mov
and
xor
sbb
push
sub
jae
stc
xchg
loopne
pusha
dec
mov
xchg
rclb
push
in
push
hlt
je
pop
je
mov
inc
sbb
mov
cmp
pop
xchg
mov
je
push
add
cltd
jb
or
jb
ja
mov
lahf
stc
push
mov
pop
cmp
mov
fs
add
pavgw
add
cmp
scas
in
add
pop
xchg
insl
dec
sub
.byte
