jae
ds
stc
call
mov
mov
pop
or
cltd
daa
mov
cmp
dec
jo
fnstcw
pop
repz
add
inc
inc
call
add
xchg
fcmovb
xchg
imul
aam
xchg
jg
rcll
xor
call
xor
das
sti
mov
aas
push
sbb
adc
push
or
out
pusha
pop
or
movb
pop
inc
xchg
aaa
sub
or
data16
bound
mov
sbbl
cmp
pushf
mov
jl
sub
outsb
push
stos
mov
xchg
mov
test
aad
mov
push
sub
mov
rcll
and
or
test
push
ficompl
sbb
adc
int
or
or
cli
enter
pop
frstor
stos
inc
shrl
movsb
sbb
push
push
jbe
mov
xchg
aam
add
adc
int
dec
mov
mov
xchg
inc
out
scas
aas
mov
leave
in
inc
dec
dec
loop
mov
sub
or
repnz
mov
push
sti
int3
xchg
insl
test
cmpsl
inc
inc
push
stos
imul
out
dec
sbb
sbb
jp
mov
jmp
mov
cmpsb
fsts
push
xchg
adc
or
repz
cmp
dec
sub
insl
bound
xchg
or
cld
lret
ljmp
ficoml
cld
mov
mov
aaa
ss
and
push
jns
enter
mov
pop
inc
pop
inc
es
mov
mov
inc
adc
jae
adc
lock
adc
iret
test
cltd
mov
sahf
or
dec
or
pop
lods
mov
pusha
sub
sbb
or
in
mov
fdivl
xor
jnp
xchg
fneni(8087
out
mov
and
stos
arpl
js
int3
fdivrs
mov
or
lds
mov
adc
lret
jge
lahf
es
pop
daa
in
dec
sahf
mov
jp
push
imul
subb
sub
push
aaa
enter
gs
inc
pusha
dec
pop
test
adc
xchg
mov
in
ret
xchg
and
inc
stc
test
mov
jo
nop
iret
sarb
shrl
cmpsb
std
mov
gs
repnz
stc
loope
test
add
ficoml
test
jnp
add
sbb
inc
inc
js
jne
mov
or
mov
xchg
xchg
and
cmp
or
ss
out
cmp
stos
lds
cld
cmc
pop
pop
scas
cwtl
adcl
nop
fstpt
jp
jle
daa
hlt
dec
call
test
mov
jno
nop
jecxz
imul
dec
ds
out
imul
sbbl
adc
pop
cmc
mov
inc
xor
sub
jbe
arpl
adc
jle
pop
jle
fnsave
or
sbb
mov
ret
mov
mov
adc
stos
sub
fstpt
cmc
dec
push
pusha
lds
add
push
xor
mov
in
jg
sbb
xchg
mov
or
jge
cmp
adc
cli
rorl
add
inc
push
xor
push
ret
lret
add
jmp
std
clc
push
stc
mov
adc
jae
lret
lods
jb
pop
test
and
mov
add
sti
sub
pushf
push
sbb
xor
mov
push
iret
push
lea
lods
insb
fnstenv
inc
jmp
mov
dec
inc
mov
sbb
ljmp
test
mov
movsb
inc
pop
flds
add
mov
imul
loopne
sub
movsl
push
je
pop
jne
ds
cltd
cltd
lret
test
sub
push
sbb
cmpb
arpl
loop
inc
ficomps
adc
decl
adc
in
jbe
mov
subb
shlb
in
xchg
adc
enter
sub
jl
or
lods
fidivrl
or
jmp
cmpsb
sub
fiaddl
out
in
sbb
xor
mov
mov
test
xlat
jmp
into
sbb
test
sbb
lret
mov
gs
push
int3
shrb
or
pop
sub
mov
or
lods
sub
xchg
aam
mov
xchg
adc
es
loop
mov
adc
xchg
inc
xchg
js
and
dec
test
aad
sbb
jl
mov
data16
dec
ljmp
icebp
or
jp
fidivrl
outsl
jae
jne
jecxz
sbb
mov
mov
sub
fildll
fldcw
dec
sbbb
repz
xchg
sbb
pop
sbb
arpl
xchg
lock
pusha
out
xchg
cwtl
sub
xor
xor
addr16
icebp
mov
imul
shlb
gs
pusha
mov
test
mov
decb
jmp
sub
xor
cmp
push
popa
jnp
lcall
pushf
adc
xor
pop
inc
mov
loopne
outsl
mov
jne
insl
adc
dec
mov
iret
or
scas
in
loopne
faddp
dec
jge
movsl
inc
mov
ds
mov
push
jp
add
adc
pop
outsl
mov
inc
nop
jmp
fdivl
scas
ret
pop
xchg
clc
add
push
pop
cmc
jb
orb
jmp
out
shr
enter
cmp
fnsave
call
jno
shlb
frstor
fwait
add
cmpsb
fidivl
sub
jp
hlt
jecxz
dec
fwait
pop
jmp
xchg
dec
adc
loopne
sbb
cmp
icebp
arpl
sub
lods
adc
and
mov
mov
insb
insl
call
dec
push
fld
les
adc
negb
out
fwait
mov
ret
insb
push
and
mov
push
dec
mov
jns
sbb
pusha
pop
aad
stc
bound
add
or
add
test
movntq
out
and
or
ljmp
mov
fisubrs
clc
loopne
cmp
dec
push
sub
shlb
adc
std
rorb
data16
inc
cmpsl
xlat
pop
mov
and
addl
adc
in
cmp
insb
or
sbb
jg
mov
flds
dec
loope
ret
aas
push
jle
mov
dec
sub
sub
mov
pop
fwait
cmc
and
pop
cwtl
lds
dec
insb
in
pop
arpl
popa
sbb
cltd
bound
out
dec
movsl
iret
pop
ret
xor
sbb
mov
push
sub
cmp
add
sbb
test
push
fimull
add
hlt
mov
xchg
stos
icebp
or
shlb
scas
ffree
mov
cmp
jb
jle
cmp
fwait
mov
and
jae
stc
sbb
add
and
mov
movsb
incb
fs
std
fdivs
pop
ja
dec
nopl
dec
std
jmp
rcrl
mov
iret
clc
xor
mov
fisttpl
sbb
xchg
test
sub
push
fisubs
push
clc
adc
push
inc
adc
sbb
mov
add
add
iret
testl
cmpsb
sub
dec
mov
xor
test
inc
imul
lock
sbb
pop
pusha
data16
xchg
push
stos
clc
mov
cmpxchg
sar
aam
mov
jg
cmpsl
mov
int
cmp
movsl
fimuls
cwtl
xor
cli
xor
ds
aaa
fimull
adc
or
mov
in
clc
es
mov
push
lods
dec
or
ret
fs
or
mov
mov
xchg
sbb
mov
push
pusha
dec
pop
ficoms
pop
pop
in
out
hlt
dec
adc
das
add
adc
or
jno
cmp
jnp
lret
shr
lds
loopne
push
ljmp
push
test
leave
test
jns
jecxz
pop
test
jne
test
inc
lcall
mov
lods
fdiv
push
fdivl
sar
or
loope
addr16
jnp
adc
loopne
fisubs
cld
popf
jge
icebp
aas
xchg
mov
cs
mov
pop
pop
sub
cmp
cmpsb
dec
mov
adc
sbb
push
je
xorb
pop
xor
jle
or
mov
pusha
or
test
nop
addb
mov
in
pop
ficoms
xchg
shlb
ss
xchg
imul
fldl
cwtl
daa
icebp
mov
pop
mov
add
adcb
push
icebp
addr16
and
fnsetpm(287
jbe
mov
lahf
test
jl
cmp
jbe
scas
cmpsl
ljmp
add
jmp
mov
or
sti
sbb
mov
sub
push
jns
sbb
pop
addr16
into
repnz
jl
outsl
cltd
push
int
imul
xchg
dec
xor
stos
mov
bsr
add
push
sub
in
mov
xchg
mov
out
jge
pushf
pop
cwtl
dec
orl
xchg
repz
or
adc
stc
clc
lret
and
adc
out
jb
insl
push
bound
jl
or
inc
and
addl
rorl
jg
mov
mov
sahf
lods
mov
dec
mov
in
xchg
roll
and
cli
inc
jnp
lret
int
add
and
imul
inc
sti
mov
test
popf
pusha
lods
div
addr16
pop
xchg
lds
inc
jb
outsb
jns
jle
test
mov
stos
cmp
jecxz
sbb
mov
cmpsl
fidivrl
movb
jno
cltd
inc
dec
sub
ret
loopne
jnp,pn
xchg
outsl
adc
xchg
aas
sbb
in
cmp
js
fsubs
sbb
sub
pop
pop
int
scas
add
pop
dec
nop
aad
cs
xor
mov
and
incb
data16
jge
aam
push
lds
jge
jl
or
and
pop
adc
loop
jae
sub
or
sbb
sbb
mov
mov
ja
aas
lds
call
xor
dec
roll
add
stc
gs
or
pop
daa
addb
mov
jp
out
orb
fimuls
testl
sub
ds
pop
aam
add
mov
adc
rcll
dec
pop
outsb
mov
xchg
pop
and
add
xor
mov
jge
jp
jnp
js
mov
push
imul
or
lods
rorb
pop
test
dec
jge
jnp
dec
adc
pop
bound
push
jge
ret
sbb
popa
fisubs
mov
dec
mov
adc
inc
arpl
lret
mov
fistps
out
cwtl
push
cmp
dec
mov
mov
js
shrb
out
add
adc
mov
lahf
in
sub
and
mov
lods
scas
in
shl
gs
gs
mov
daa
mov
and
cmp
std
outsb
test
xlat
push
and
mov
iret
lods
pop
xchg
jle
aaa
cwtl
icebp
idivl
mov
fsubr
sub
xchg
push
mov
dec
sbb
adc
lret
dec
mov
jns
adc
adc
ret
cmp
push
enter
xchg
lods
stos
icebp
imul
cmpsb
cli
push
popf
xchg
xchg
jae
push
inc
int3
cmp
rorl
jg
add
mov
xor
iret
dec
loopne
cwtl
pop
sub
fidivrl
add
sub
or
orb
mov
adc
and
fidivs
inc
lret
aam
repnz
nop
cs
push
insb
mov
repz
jmp
sbb
js
or
mov
dec
jbe
les
jmp
push
imul
out
cs
mov
inc
bts
loopne
test
std
popf
push
cld
mov
add
mov
xor
push
out
out
inc
xchg
rorl
sub
xor
xchg
inc
xorb
jmp
pop
sbb
cmp
xchg
jle
fldl
inc
inc
scas
push
or
iret
push
fimuls
pop
int
lret
pushl
data16
out
xor
push
jl
adc
push
subl
aaa
mov
mov
cmp
fcomps
out
sarb
pop
test
js
stos
push
shlb
in
xchg
loopne
add
or
add
lock
push
cwtl
jae
jp
fst
sub
and
mov
scas
stc
fstp
loope
sbb
imul
add
insb
icebp
fs
jp
sub
ret
cmp
cmp
mov
pop
push
jecxz
js
nop
xchg
mov
fadds
cmp
mov
inc
pop
repnz
filds
xor
into
jns
mov
in
sahf
fidivrl
and
int3
enter
sub
push
and
std
in
ds
hlt
jne
outsl
xor
and
pop
mov
adcb
loop
jmp
pop
dec
loopne
js
dec
and
mov
in
sbb
sub
jmp
push
addr16
shrb
lea
xchg
ss
mov
rcll
jno
mov
mov
cltd
insl
pop
add
push
fnstsw
sahf
inc
test
std
pop
push
add
inc
test
idivl
mov
or
test
insl
mov
sbbb
cwtl
out
insb
or
jecxz
inc
lods
test
enter
mov
pop
icebp
push
cltd
test
mov
in
cmp
xor
adc
enter
adc
push
jno
lea
fidivrl
ljmp
jle
cmc
loopne
movsb
xchg
int
jnp
lahf
jp
mov
in
rorl
subl
lock
cltd
hlt
jb
sbbl
cmp
mov
push
jg
lret
mov
je
cs
mov
cs
imul
push
push
jae
push
inc
scas
test
in
xor
cmpsl
hlt
and
lea
iret
push
adc
cmp
jle
into
sahf
fsubs
cmp
dec
xchg
mov
or
xor
or
mov
clc
xlat
push
sbb
jae
mov
dec
mov
push
cwtl
cltd
jge
inc
push
test
lret
pop
jns
dec
js
pop
xor
outsl
push
xchg
add
mov
dec
sub
mov
cs
push
add
out
lock
inc
or
jmp
ror
push
add
pop
loop
mov
pop
dec
movsb
cltd
insb
sbb
sarl
xchg
jns
ljmp
push
mov
push
fwait
mov
nop
mov
mov
push
lret
xlat
xchg
adc
lret
jb
cmpsl
mov
cld
daa
aaa
or
dec
loop
imul
mull
dec
jb
in
sti
jns
decb
addr16
push
mov
sbb
arpl
cmpb
sets
inc
orb
bound
lods
mov
pushl
inc
call
aad
cmp
fsubs
mov
mov
pop
addb
add
mov
aas
lret
in
das
scas
jge
and
mov
pop
sbb
jl
mov
adc
jae
mov
test
mov
inc
int3
add
mov
call
cld
or
xchg
aaa
aaa
fldenv
popf
cs
sarb
add
mov
and
or
cmpsb
and
js
cmpsb
cmc
int3
mov
jmp
gs
mov
repnz
mov
data16
jecxz
and
xor
iret
pop
add
push
negb
jb
jmp
je
iret
pop
lods
adc
aas
loopne
cs
fisubs
pop
inc
jg
push
mov
push
or
lret
insl
arpl
mov
pop
sbb
xchg
pop
ret
jne
call
push
cmpsl
outsl
ja
or
xchg
in
xor
jmp
sbb
push
lods
xlat
push
imul
hlt
std
lock
dec
dec
pusha
sbb
pusha
movsl
adc
jns
mov
clc
ljmp
shrl
lcall
jp
push
fnsave
xchg
in
hlt
in
imul
mov
push
cmp
push
jbe
cmp
fistl
cmp
rol
jo
add
or
lret
xchg
cltd
mov
sub
inc
enter
ss
lret
icebp
fimull
add
insl
push
sahf
mov
push
das
cmp
fistpll
add
cmp
jmp
fimull
adc
mov
loopne
repnz
cmp
xchg
out
lcall
xor
adc
lret
mov
and
outsb
jno
js
rcrl
stos
mov
test
xor
stos
push
or
ret
push
fdivrp
scas
sbb
lock
mov
jbe
or
mov
in
mov
outsb
data16
jmp
mov
lcall
enter
or
mov
mov
fwait
mov
fsts
push
adc
adc
cmp
push
add
add
cmp
in
pushw
and
add
les
mov
add
cli
aaa
mov
pop
lret
loope
pop
ds
shl
outsb
insb
cmp
iret
fwait
cmp
push
sarl
sbb
dec
out
sub
nop
lods
push
sub
add
adc
push
outsl
in
mov
fs
pop
pop
in
lret
xor
lret
not
mov
imul
sbb
mov
push
arpl
ret
xor
push
mov
cli
push
daa
rorb
scas
out
clc
decl
mov
movl
rep
add
mov
xlat
adc
push
inc
xchg
cmp
inc
inc
sbb
fisubrl
sub
sahf
lret
and
mov
repnz
mov
pop
out
add
add
test
dec
bound
mov
sbb
mov
mov
adc
push
outsb
fiadds
inc
push
bound
addb
ret
out
cs
mov
sub
sub
or
xchg
inc
pop
je
fcomps
cmp
out
dec
mov
xor
fisubrl
fiaddl
mov
push
popf
push
inc
test
sbb
testl
inc
inc
xlat
jb
or
les
jecxz
cld
adc
dec
mov
nop
test
mov
mov
inc
setne
sbb
cmpl
cmp
sub
into
into
push
ss
jg
or
std
inc
jns
cwtl
ds
sbb
mov
mov
jbe
sbb
and
icebp
adc
xchg
mov
loopne
pop
rorb
and
dec
cwtl
ror
and
mov
shll
jb
adc
cmc
or
scas
xchg
filds
lcall
pushf
pop
mov
sbb
cld
fisubrs
adc
xor
cltd
lcall
mov
stc
sti
out
and
fidivrs
repz
dec
xlat
mov
mov
xor
jl
inc
cld
addr16
lea
hlt
es
scas
or
sbb
xchg
nop
fists
pop
adc
mov
xchg
jecxz
test
test
mov
jp
adc
and
mov
or
cmp
pop
and
movsl
rorl
push
jl
lods
mov
and
les
inc
sub
stc
xor
das
add
xlat
mov
pushf
sub
daa
lea
cmp
imul
fimuls
xor
aam
or
aam
mov
cmp
or
mov
mov
mov
push
cmpsb
imul
inc
mov
sbb
icebp
cmp
mov
movsl
cld
test
popa
xchg
push
cs
test
mov
jl
scas
jns
fists
movsl
sub
sbb
lock
sbb
lods
fisttpll
jp
test
repnz
out
add
mov
jmp
mov
sbb
pop
xchg
mov
push
aaa
pop
std
mov
clc
and
sbb
es
adc
aaa
sbb
mov
lret
ret
scas
xchg
jmp
mov
pop
js
inc
jge
ljmp
ss
jge
es
movsl
sub
aas
push
loope
jecxz
jmp
mov
mov
or
jle
mov
dec
jecxz
inc
pop
fcompl
inc
xchg
push
inc
push
pop
cmp
add
mov
mov
adcb
stos
add
stos
inc
outsl
cmp
jmp
dec
es
ja
and
inc
push
inc
adc
stc
push
in
xor
jmp
jbe
cltd
push
mov
lea
into
scas
xchg
or
jg
xor
xor
push
ret
and
or
int3
and
xchg
sbb
jnp
rorl
sub
pop
push
sub
xchg
mov
mov
jno
or
push
into
iret
mov
test
adc
xchg
xchg
ljmp
add
cmc
outsl
xacquire
dec
mov
push
jne
test
jmp
mov
stc
jp
xor
pusha
pop
fldt
mov
call
sbb
addr16
dec
push
pop
addb
dec
mov
or
jmp
cmpl
out
rcrb
jl
push
movsl
or
aas
aad
xchg
sbb
adcb
sar
loop
xlat
mov
dec
and
pop
repnz
dec
dec
dec
push
je
in
add
pushf
cmc
stos
dec
push
dec
ret
jnp
dec
je
inc
mov
or
adc
adc
inc
jb
mov
movsl
sbb
and
xchg
aam
jge
call
movsb
push
daa
pop
ljmp
les
stc
inc
adc
scas
mov
mov
lock
push
dec
jmp
jg
sub
adcl
ficoml
push
loopne
stc
cld
mov
stos
inc
sti
sub
cld
jb
or
jne
and
in
cmc
int3
and
and
or
xchg
dec
push
movb
fs
xchg
adc
jle
or
push
int
shlb
pop
leave
jbe
dec
xor
and
jbe
pushl
mov
mulb
fnstsw
imul
jl
xchg
repz
push
push
inc
cltd
out
test
out
jp
and
insb
xor
out
mov
push
sub
xor
popf
test
aaa
mov
call
imul
jle
push
xchg
shl
jb
in
iret
movsb
ss
mov
pushl
addb
imul
pop
out
popa
add
dec
mov
mov
mov
cld
sub
or
aas
negl
cmpsl
mov
leave
loope
int
rclb
cltd
dec
shrl
iret
xchg
sbb
imull
dec
stos
sti
pop
aaa
aaa
mov
mov
mov
aad
fwait
adc
test
jg
shlb
out
mov
add
fistpll
decb
test
xor
data16
sub
sub
stos
cli
adcl
in
movsb
or
std
outsb
aaa
sbb
imull
mov
fildl
test
dec
sbb
ds
in
adc
xchg
ss
push
push
insl
clc
imul
das
sub
stc
outsl
dec
add
popf
xlat
jge
jnp
stos
repnz
addb
inc
xor
aad
repz
dec
call
mov
cmp
push
sub
lret
adc
imul
mov
mov
mov
shll
jg
or
imulb
xchg
pop
sti
mov
iret
int
pop
jp
cmp
mov
or
lods
or
mov
mov
pop
or
adc
mov
scas
inc
aam
hlt
dec
mov
push
mov
mov
int3
ds
xor
test
dec
mov
testl
ljmp
popa
int
outsl
pop
cmpsb
mov
ljmp
mull
xchg
inc
repz
mov
ret
scas
andb
scas
cs
imul
scas
mov
or
jbe
push
or
inc
in
sub
pop
sub
mov
fnstcw
cmp
pop
cmp
pop
mov
add
adc
adc
rorl
push
mov
out
xchg
lods
xor
or
lahf
out
movsl
mov
ds
test
lods
inc
push
mov
mov
mov
call
stos
pop
jp
movsl
test
sbb
stos
into
xchg
sahf
cmpsb
sub
cmpsl
add
sbb
cmp
movsb
push
rorl
or
imul
or
insl
data16
mov
lods
or
pusha
sbb
xor
shll
out
mov
js
fcmovnb
inc
sub
sub
daa
mov
shl
cmp
stc
or
push
pop
pop
sub
js
mov
sub
or
lds
ljmp
test
cmp
mov
mov
andl
mov
into
sbb
pop
cmpl
mov
fnsave
adc
fmuls
lret
or
arpl
rorl
sar
cmp
cmp
out
pop
test
sahf
or
dec
ret
mov
lret
xchg
push
out
sbb
mov
insb
jo
jg
fdivp
sub
outsl
xor
xchg
or
inc
sbb
faddp
cwtl
pop
cmc
in
dec
clc
mov
mov
xor
imul
push
enter
mov
lcall
push
push
into
test
jmp
xchg
pusha
ret
std
in
jo
adc
ljmp
cli
repnz
inc
push
jb
es
lds
sub
pop
out
push
and
popf
fmull
outsl
push
int3
ss
dec
repnz
insb
addr16
or
pop
fs
pop
in
mov
shrb
das
inc
jbe
sbb
or
push
sub
arpl
lods
test
pop
in
xchg
stos
push
pop
push
pop
add
fistpll
sbb
data16
adc
loope
lret
jno
insb
adc
dec
scas
lea
lcall
mov
xchg
xor
les
sub
pop
aad
fnstenv
mov
push
in
adcl
repnz
negb
jmp
push
inc
jl
out
mov
dec
xchg
sti
xor
inc
ret
xchg
fadd
jo
sub
and
shr
and
lock
fldpi
pop
dec
mov
mov
xchg
add
lods
fsubl
mov
repz
out
cli
sbb
or
mov
shl
sub
mov
or
sarl
lods
jl
and
jmp
outsl
mov
push
test
in
fisttps
adc
out
or
adc
mov
hlt
sub
gs
rcl
push
scas
sub
jle
inc
inc
imul
jl
scas
aas
clc
ret
push
sbb
popa
adc
test
test
repnz
cwtl
mov
arpl
scas
cltd
js
xlat
adc
jmp
stos
out
mull
hlt
pop
icebp
dec
addr16
loop
jo
mov
jl
xchg
fsubrs
jge
jecxz
fstp
mov
int
sbb
dec
and
mov
loopne
mov
jmp
icebp
ja
adc
ds
pushf
arpl
adc
pushf
jnp
adc
xchg
cmp
andl
jge
out
cmp
aam
xor
stos
and
loope
mov
mov
pop
cmc
lcall
push
xchg
mov
fs
sbb
mov
push
mov
imul
xchg
jl
inc
ljmp
jmp
aam
das
xchg
jmp
mov
push
rorb
mov
adc
shlb
mov
and
sbb
xchg
iret
inc
stos
jbe
int
in
daa
fisubl
gs
inc
popa
add
add
sub
lods
sbb
nop
mov
push
hlt
out
es
cmp
cltd
popf
adc
into
ret
jle
pop
xchg
or
pop
cmp
xchg
cs
inc
mov
iret
jne
iret
popa
roll
std
lret
xor
sbb
sbb
sub
mov
mov
in
mov
jno
xor
ret
or
add
lock
xchg
xor
push
imul
inc
sbb
mov
fcmovnbe
gs
das
inc
dec
data16
sbb
mov
push
pop
in
in
aam
movsb
xchg
cmpsb
rclb
in
xorl
pop
jg
pop
cmpsl
add
scas
mov
xor
cmc
js
test
cmpsb
fnstenv
mov
outsl
or
jnp
inc
orl
and
push
jo
ret
inc
mov
xchg
sahf
loop
add
push
xor
xor
cmp
jmp
leave
inc
sub
enter
mov
fcompl
stos
adc
les
cli
test
push
push
sub
push
inc
test
inc
ret
pop
xchg
sub
fiaddl
cmc
enter
push
in
mov
xchg
fisubrs
jge
pop
and
mov
inc
lahf
scas
add
mov
test
mov
fs
jbe
imul
add
call
jae
ja
push
cmpsb
popa
mov
rclb
mov
adc
add
call
push
fcmovbe
inc
cltd
fwait
scas
sbb
mov
adc
test
dec
daa
insb
inc
jae
mov
ret
pmulhw
in
pop
test
mov
in
ss
mov
mov
adc
cs
add
sbb
or
stc
insl
pop
leave
mov
push
adc
xchg
mov
mov
cli
cli
test
aad
lahf
fcmovne
loop
sbb
outsl
repnz
adc
xor
sahf
shll
push
jnp
out
add
cmp
sbb
imulb
bound
clc
daa
mov
ret
jnp
xchg
mov
sub
cmp
lahf
mov
out
dec
cmpsl
or
push
or
xchg
sub
adc
or
jp
icebp
stc
mov
sti
mov
das
dec
adc
xchg
push
pop
jle
adc
jl
adc
push
cmp
add
cmp
jno
cld
int3
movsb
jb
dec
call
aas
jecxz
repnz
lret
ljmp
pop
mov
jle
in
std
repz
cmpsl
pop
sbb
nop
mov
fiaddl
les
mov
sbb
adc
push
dec
pop
sub
scas
outsl
mov
lods
sti
cli
mov
mov
ret
les
ds
adc
subb
or
and
xor
dec
add
pop
popf
cwtl
in
cwtl
pop
clc
dec
test
xor
lds
data16
and
sbb
xchg
ret
mov
out
jne
cmp
ljmp
jp
gs
push
mov
pop
or
push
push
lds
xchg
pop
pop
mov
out
pop
pop
jns
mov
shlb
out
repz
push
cmp
add
int
xor
cmp
mov
addr16
mov
in
sub
cltd
stos
in
loop
lods
cmpsl
mov
sbb
rcl
pop
xor
in
xchg
lock
or
ss
imul
adc
aas
ret
push
push
adc
pop
sbb
mov
imul
xchg
fldenv
outsl
and
ljmp
pusha
insl
pusha
arpl
ja
push
les
adc
fcompl
mov
dec
jg
pop
imul
push
fdivrs
jnp
lret
pop
daa
ljmp
cld
fs
shr
mov
shll
dec
xchg
repz
sub
or
ds
fists
iret
insl
lret
aam
dec
xor
cmp
fidivs
fucompp
adc
mov
movsb
mov
pusha
adc
jnp
jbe
or
pop
hlt
pop
lret
cli
inc
jo
mov
movsl
out
cli
xor
lock
sarl
notb
and
pusha
dec
aam
hlt
mov
mov
divl
int3
push
mov
push
inc
fisubs
push
cmpsb
sti
fisttpl
aam
loopne
fistpll
jns
add
insb
cmc
in
push
mov
scas
pop
les
jl
pop
and
lock
mov
ds
cmpsl
cmp
into
adc
add
xchg
push
pop
cltd
xchg
jnp
sub
rcr
test
mov
mov
ficomps
dec
cmpsb
movsl
and
mov
xchg
xchg
mov
rcrl
rol
out
test
jmp
imul
and
xchg
psubusb
aad
loop
mov
push
sub
mov
add
xor
sti
jnp
jo
pushl
sub
adc
pop
xchg
and
fldcw
test
sbb
cmp
xchg
cmp
cltd
cmp
jge
push
sti
inc
outsl
cmpsb
add
jne
loop
fwait
mov
rcrl
jle
jnp
adc
ds
les
ret
xlat
int3
sarb
sub
imul
sbb
in
jecxz
or
xchg
sbb
mov
cmp
and
js
mov
test
push
cmp
popf
cmpsl
mov
out
jl
adc
fbstp
lods
or
lcall
mov
mov
add
fistps
repnz
pop
mov
jo
dec
repnz
xor
roll
mov
jp
repnz
vcvtsd2si
mov
in
enter
mov
iret
loope
jne
mov
inc
xor
mov
push
fidivrl
mov
push
mov
shrl
into
mov
and
pop
femms
sub
add
add
insb
add
into
add
incl
push
cmp
xor
jp
mov
xchg
adc
dec
es
xchg
ljmp
dec
popl
jmp
icebp
loope
mov
lret
ljmp
dec
jmp
and
jno
dec
cmp
int3
das
cltd
xor
mov
fsubl
test
pop
in
mov
leave
push
gs
mov
and
jns
add
mov
mov
sub
in
or
mov
out
adc
lea
sub
imul
movsl
dec
mov
out
sub
mov
jae
cwtl
pop
cld
dec
mov
mov
in
shll
sub
cld
jae
cmc
out
sbb
gs
push
fwait
pop
mov
jns
in
mov
mov
cmp
pop
pushf
mov
pop
mov
sub
xchg
ss
add
in
fsubs
pushf
adc
pusha
jecxz
and
mov
xchg
mov
fstps
sbbb
addr16
shlb
inc
adc
int
push
mov
cwtl
sbb
fs
cmpsb
jne
or
loopne
xchg
inc
and
and
cmc
outsl
dec
xor
dec
push
push
fsubrs
stos
in
dec
ret
ja
mov
mov
inc
jbe
inc
mov
jns
sub
jnp
push
cmc
cmpsl
dec
sbb
imul
sbb
rcl
sub
sub
xchg
mov
idivb
add
subb
pop
fiaddl
pop
pop
and
inc
cmc
mov
jae
sbb
dec
pop
mull
and
xor
fstpt
push
dec
in
push
popf
sti
icebp
enter
push
or
cmpsb
ljmp
idiv
dec
icebp
xchg
mov
shlb
or
into
mov
ss
subb
movsb
push
fidivrs
loop
insl
iret
in
xor
test
push
fwait
daa
aaa
ficoms
or
mov
daa
sub
aad
test
and
adc
cmc
outsb
je
or
mov
mov
xchg
int
or
xorb
insb
sbb
in
adc
pop
xchg
dec
gs
movsb
cmpsl
or
les
imul
add
pop
cmpsl
pop
inc
xchg
dec
mov
in
add
cmp
push
or
fdivl
movaps
sbb
enter
mov
push
add
jecxz
mov
popf
dec
sub
pop
out
ret
and
fs
shlb
xchg
inc
add
cmpsb
xor
sbbb
cmc
or
inc
out
jnp
pop
lcall
adc
movsb
mov
movsb
sti
enter
jae
shrb
mov
jecxz
lcall
movsl
hlt
lds
sub
mov
fldenv
jle
and
mov
push
in
or
add
inc
xor
test
loopne
sbb
xor
push
xor
fs
inc
inc
cltd
sbb
pop
shll
sti
mov
inc
test
dec
pop
jbe
or
js
mov
lea
repz
sbbb
in
mov
cli
cmp
mov
fadds
stc
xor
stos
or
out
aam
fisubs
movsl
sub
fistpll
call
shr
out
jbe
test
sub
and
jo
mov
jge
out
and
mov
daa
movsl
imul
ja
aaa
sub
jmp
mov
dec
mov
stos
inc
aaa
aaa
fcmovnbe
fsubl
xor
mov
fcmovnu
push
in
mov
scas
ja
inc
mov
loop
addr16
js
xor
inc
dec
mov
jmp
lods
imul
loope
inc
adc
add
clc
test
jb
pop
js
jl
cmp
and
and
push
shlb
and
movsl
stc
jb
test
test
xor
mov
cmp
rclb
scas
sbb
repnz
sub
push
sub
mov
mov
xchg
outsb
lods
adc
jne
pop
jb
xor
lret
nop
ljmp
xor
lahf
mov
repnz
dec
orl
insb
sbb
push
daa
cld
push
mov
sti
lcall
mov
popf
mov
mov
sahf
jge
push
jno
ja
mov
or
jns
xor
loope
add
rcrb
dec
fsubrs
fxch
aas
lahf
lahf
sub
jp
add
notl
mov
pusha
inc
or
xorb
cwtl
ds
mov
sbb
mov
push
lcall
jno
pop
rolb
adc
add
dec
inc
xchg
cmp
pop
sub
sub
xor
add
adc
mov
push
cmc
stos
jle
xchg
int
popf
add
daa
scas
dec
push
scas
ret
add
mov
stc
and
jnp
jecxz
add
push
insb
notl
rclb
add
decb
bound
test
pop
outsb
es
sub
insb
in
and
fwait
cmp
inc
movsb
xor
push
addr16
clc
std
push
int
movsb
add
les
andb
jecxz
popa
mov
outsb
fistpll
push
inc
nop
mov
push
mov
fildl
pushf
inc
movsb
out
xor
arpl
and
pop
std
lods
repz
sbb
int3
jecxz
sbb
pop
xchg
cmp
sub
fmuls
mov
mulb
je
scas
jo
rorl
mov
sub
loopne
xor
fsubl
xor
and
int3
movsl
ret
imull
fisubl
push
lock
mov
movsl
leave
rcr
addr16
adc
inc
je
and
inc
push
lret
jp
xchg
aaa
out
test
fcmovnb
mov
cmpsb
lea
mov
mov
incb
out
stc
fnstsw
mov
cmpsl
popf
jp
push
gs
enter
daa
mov
cmpsb
push
mov
cmp
lcall
or
int
outsl
push
sub
add
dec
mov
adc
jp
iret
inc
pop
add
fs
in
ret
sub
xchg
xor
popa
ljmp
inc
add
aas
xchg
pop
pop
mov
xchg
jno
xchg
and
sbb
dec
ljmp
sarb
jmp
push
jl
pop
mov
pusha
arpl
mov
add
pusha
push
xor
in
mov
dec
fs
fidivs
lds
pop
xchg
cs
out
imul
pop
in
sub
and
cmc
jnp
aad
mov
xor
mov
sub
lods
cs
cli
mov
add
rcrl
js
xor
out
jns
add
push
fs
adc
fsubrp
sahf
movsl
sbb
xlat
inc
sbb
fucompp
add
xor
jb
pop
inc
test
lock
inc
add
and
mov
jo
into
adc
sub
out
jb
aad
fdivs
xor
jg
xor
inc
scas
repz
sbb
xchg
sub
lods
cli
pushl
pushf
xor
mov
clc
jmp
xchg
testb
mov
stos
cmpsb
push
adc
and
bound
cmpsb
popa
inc
xchg
push
dec
movsb
stos
mov
std
push
xor
adc
test
xor
dec
jmp
mov
xor
mov
xor
jge
pusha
push
pop
jns
mov
xchg
lods
sysret
xorl
add
mov
dec
xchg
cmp
lcall
inc
pop
mov
and
stos
add
xchg
fists
xrelease
ss
xchg
or
rorb
sub
or
dec
push
xchg
mov
mov
shl
dec
and
lods
out
mov
ja
mov
jne
aas
stos
mov
or
xchg
jns
xchg
mov
push
pop
xchg
mov
jg
mov
inc
clc
lods
push
push
mov
xchg
jge
test
das
or
mov
xchg
add
push
jle
outsb
test
cmpsb
jnp
cld
sub
inc
scas
test
inc
ljmp
stos
mov
sbb
xor
dec
adc
outsb
adc
adc
out
daa
imul
outsl
or
mov
add
pusha
subb
les
push
xor
hlt
pop
sub
iret
stos
inc
mov
or
sbb
shrl
dec
insl
fdivrp
sarl
iret
in
shl
adc
popf
mov
xchg
shll
in
adc
dec
xchg
popa
jo
adc
and
pusha
and
xlat
cli
jl
nop
add
push
sbb
xor
mov
xchg
shll
iret
jo
aad
mov
add
sbb
aas
and
adc
cmc
push
inc
into
xchg
repnz
mov
sub
repnz
test
adc
out
xchg
scas
stos
stc
jecxz,pt
pop
stc
pop
insl
or
rcrl
xor
fwait
in
ljmp
lret
push
popl
daa
bound
push
add
mov
adc
ret
sbbl
fcoml
sahf
into
dec
in
mov
lock
jno
pop
cmc
mov
xor
xchg
xchg
push
test
dec
popa
push
pop
rolb
pop
xor
clc
and
xchg
adcb
pop
ret
push
pop
inc
andl
and
and
mov
cltd
mov
jp
adc
iret
subb
les
sahf
bound
xchg
std
hlt
test
sti
jl
insb
push
adcb
lock
push
mov
xor
jae
mov
sub
orb
dec
decl
pop
mov
and
cmc
jns
sti
in
cmp
scas
pop
pushw
push
sbb
mov
xor
add
test
movsb
mov
jnp
inc
dec
aam
lahf
repz
dec
pushf
outsb
jbe
jns
daa
push
adc
mov
cmp
pop
ds
and
sub
fldl
fsubl
push
push
push
scas
pop
mov
xor
pop
mov
mov
scas
mov
pop
sub
jae
fnstenv
sub
data16
xor
mov
add
stos
jbe
addr16
sub
lret
mov
xor
das
fcompp
fwait
cltd
aam
ret
lcall
xlat
in
cli
fidivl
sub
daa
xchg
rcrb
xchg
dec
jle
sub
fisubs
jmp
jo
add
addb
add
fsubs
testb
push
pop
mov
scas
xor
shlb
fiaddl
pop
daa
sbb
pop
in
xlat
lods
jle
ss
mov
aad
push
sbb
mov
push
fistpl
movsl
das
jmp
mov
push
push
testb
in
scas
or
xor
mov
or
ret
cld
test
inc
inc
stos
mov
rolb
cmp
adc
mov
xor
mov
outsb
dec
mov
jnp
mov
fiadds
adc
scas
cltd
sarb
shl
jge
push
pop
scas
pop
sbb
shll
pop
sub
adc
mov
dec
stos
push
xor
leave
inc
cmp
or
imul
mov
jecxz
lcall
cld
cmc
loopne
rclb
sub
mov
jecxz
push
in
cmp
repz
fistps
andb
mov
cmp
ss
outsb
adc
mov
test
mov
xchg
jo
test
xor
add
roll
cmpsb
mov
scas
jmp
js
je
mov
and
pop
fimuls
out
js
sbb
inc
loopne
icebp
in
andl
divl
neg
out
ljmp
pop
add
push
hlt
add
leave
rcll
inc
xchg
fs
pop
xor
arpl
loop
mov
orl
mov
xor
and
jb
pop
movsb
push
pop
sbb
fwait
movsl
pusha
test
dec
fisubrs
repz
mov
shrl
aaa
adc
in
sbb
out
mov
lods
push
js
mov
xor
enter
loop
adc
mov
jg
mov
out
add
or
pop
sbb
dec
movsl
jnp
xchg
cmp
ljmp
aaa
sub
cld
adc
jo
leave
pop
lods
cmp
hlt
pop
mov
mov
sub
or
xchg
lods
pop
inc
mov
mov
mov
outsb
daa
add
sbb
nop
int3
xlat
cmp
cwtl
jo
repnz
ljmp
stos
sbbl
pushf
pop
ss
dec
movl
push
and
xchg
loope
orb
dec
das
jbe
jne
fstl
out
mov
inc
mov
dec
inc
jmp
into
icebp
int
repnz
jnp
add
sbb
jmp
clc
push
xor
cld
andl
jne
sub
test
push
pop
add
push
mov
fisubrl
and
push
xor
sub
push
insw
jnp
xor
in
mov
add
mov
or
ljmp
pop
add
ljmp
ret
test
decl
decb
fwait
pusha
cmpsb
icebp
out
pop
jb
mov
ficompl
loopne
jmp
inc
test
out
mov
push
rcll
call
push
xchg
aas
dec
push
fcomps
out
push
jmp
mov
je
inc
sbb
and
xchg
idivb
fdivl
sbb
lahf
xchg
xchg
lods
dec
lret
push
cmc
pop
cltd
mov
sti
bnd
cmp
push
stos
inc
and
cmpsl
and
mov
adcl
fdivs
add
insl
call
hlt
enter
dec
push
je
sub
lods
test
and
dec
xchg
out
xchg
out
test
int3
xchg
or
lret
push
pop
sub
push
aaa
sub
std
in
sbb
adc
pop
push
push
cmp
cmp
andl
cmp
fildll
dec
lds
cmpsb
loope
mov
sbb
iret
push
and
into
rol
lcall
push
int
xchg
stos
les
push
popf
call
mov
dec
stc
pop
cld
cmc
jns
ret
hlt
adcb
test
xor
dec
push
fmull
mov
push
xor
into
in
aam
fistpll
dec
ds
inc
cmpsw
lcall
pop
in
and
cltd
push
dec
jns
rcll
lods
xchg
xchg
mov
hlt
pop
jb
xor
jnp
shlb
loope
prefetch
frstor
fstpl
inc
jge
dec
and
xchg
jp
std
test
push
fcoms
mov
mov
stos
fcompl
jne
test
decb
inc
or
popa
adc
mov
loope
enter
in
mov
adc
outsl
sahf
push
dec
jo
adc
push
loop
xor
inc
pop
cli
sahf
dec
pop
cwtl
dec
push
pushf
cld
mov
lods
push
int3
fs
rolb
jp
lock
jecxz
les
inc
cli
loope
push
cwtl
in
pop
es
in
jl
or
repz
dec
add
out
inc
movl
mov
repnz
test
xor
lock
xchg
pop
ja
cmp
loopne
and
pusha
sbb
cmc
lret
mov
imul
xchg
inc
or
into
push
push
ret
cmpsl
cmp
pop
hlt
push
repz
sti
dec
jg
adc
sub
mov
loope
mov
mov
and
cltd
hlt
push
popf
outsl
xchg
lahf
les
cs
ret
jl
inc
mov
cmpsb
aad
jmp
shlb
jmp
outsl
xchg
xchg
mov
cmc
jecxz
loop
xchg
add
dec
adc
mov
jnp
sub
cmpsl
inc
xchg
push
adc
mov
mov
jl
es
stc
mov
sbb
jge
sub
sbbl
stos
jae
mov
dec
adc
mov
gs
jbe
add
repz
arpl
jo
imul
movups
js
in
xlat
add
xchg
mov
pop
adc
dec
sti
lock
push
push
movsb
fs
cmp
push
dec
and
pop
or
call
jge
clc
xor
jecxz
test
push
xor
jae
jle
int
mov
andb
mov
test
std
pop
sub
xchg
add
pop
dec
std
mov
loop
jne
xorl
imul
cwtl
pop
test
ret
jno
jo
mov
pushf
test
outsb
inc
mov
pop
inc
test
mov
scas
pop
test
or
jnp
jb
jg
inc
xlat
mov
daa
inc
sahf
mov
ja
sbb
cwtl
movsl
mov
add
pushf
push
fcomps
push
out
xor
jo
jmp
or
xchg
xchg
jbe
mov
orl
int3
dec
inc
imul
fistps
daa
cmp
and
dec
arpl
ja
cmovl
movsl
push
aam
dec
mov
gs
and
les
sarb
aam
ss
mov
jbe
shrb
push
fistpll
xchg
mov
push
cmp
jbe
jno
adc
cmp
nop
cmp
xor
adc
sahf
pop
xchg
sarb
xlat
imul
add
pop
and
push
mov
ljmp
cmp
cli
inc
test
mov
mov
clc
cltd
inc
jns
or
xor
xor
pop
pop
rep
mov
mov
fnstenv
push
push
mov
or
bound
loope
adc
in
fstpt
mov
ds
nop
sub
loopne
je
jmp
rcr
cmp
jns
lea
and
enter
push
fs
jns
addr16
mov
or
mov
stos
adc
in
loop
push
adc
outsb
pop
inc
ljmp
std
xlat
ljmp
lea
push
sti
aaa
popf
mov
cmc
movsb
or
bound
push
test
test
cld
ja
mov
or
lahf
and
js
mov
inc
mov
mov
xchg
cld
push
mov
in
insl
inc
mov
push
push
lcall
push
mov
adc
xor
pop
das
pusha
dec
cltd
jl
imul
sub
mov
je
push
jp
add
mov
sar
out
call
xlat
jmp
adc
inc
fstpt
std
in
sub
jl
jb
sbb
dec
mov
mov
ja
mov
mov
jmp
sub
and
xchg
and
mov
outsl
std
push
pop
stc
xor
fcompl
adc
out
push
daa
mov
push
and
nop
rcrb
xchg
dec
mov
cld
stos
lahf
dec
xchg
in
loop
out
daa
and
out
test
dec
fsubs
add
xchg
fldt
stos
movsl
jle
dec
js
imul
and
sar
into
aad
les
xor
outsb
pop
ss
ss
lds
lahf
das
or
push
mov
out
pop
dec
jge
mov
inc
mov
enter
cwtl
movsl
sub
adc
jp
pop
inc
inc
out
pop
and
lret
dec
imul
fsubrl
sbb
stc
and
xor
mov
hlt
roll
dec
xor
adc
dec
xchg
fistpl
mov
insb
je
les
xor
test
stos
frstor
test
inc
inc
mov
fcomps
aaa
out
fstp
mov
and
arpl
and
pusha
xor
jecxz
and
popa
pop
movsl
shrl
insb
or
or
sub
test
xorb
shl
mov
das
into
icebp
cmp
xchg
xor
jle
push
in
jmp
cmpsb
loope
cmc
imul
dec
jne
cmp
and
pushf
pop
adc
or
inc
jnp
cwtl
rcll
inc
subb
push
bound
sbb
add
jne
jae
inc
ret
jge
out
adc
push
push
adc
pop
inc
push
xchg
jecxz
inc
xor
cli
shl
sub
dec
pop
mov
imul
clc
hlt
enter
sbb
lods
cmp
mov
push
cmpl
fcomps
rcrb
shlb
adc
mov
adc
and
adc
jo
mov
cmpb
dec
mov
in
rorl
add
test
push
mov
insb
xchg
sub
imul
mov
sbb
test
and
sub
imul
xor
pop
push
mov
aas
movsb
sub
adc
xor
mov
xchg
pop
inc
push
xchg
es
cmp
shll
ja
mov
aad
data16
arpl
leave
dec
jnp
inc
push
inc
aas
add
jmp
rcll
shll
push
and
inc
inc
and
lcall
xchg
dec
hlt
ficoms
montmul
cmpsb
inc
push
and
test
and
icebp
loope
mov
jae
in
mov
les
pop
cmp
nop
inc
fimull
scas
test
std
dec
jno
add
std
into
mov
dec
or
popa
sbb
xor
push
jmp
fdivl
adc
mov
mov
into
mov
int3
jg,pt
pushf
pop
push
inc
lods
stos
ljmp
push
scas
fwait
mov
out
test
clc
jl
xlat
subl
repz
add
dec
dec
inc
shl
incb
push
mov
adc
lods
fwait
mov
mov
cld
lret
repnz
notl
lods
lret
dec
and
inc
test
sbb
cld
dec
add
pop
inc
xor
xlat
push
inc
aas
shlb
cmpsl
add
outsb
int3
push
mov
mov
sub
push
aas
je
push
xor
repnz
adcl
lea
pop
popa
in
sahf
out
bound
insb
inc
data16
mov
inc
mov
jmp
loopne
rolb
cltd
sbb
test
inc
outsl
scas
scas
and
sar
jae
incb
sbb
ret
inc
push
jecxz
sbb
ds
jg
stos
fxam
movsl
out
jge
xchg
pop
adc
sti
dec
shl
aas
mov
ds
lods
in
push
das
lods
test
inc
pop
jle
sbb
ret
dec
sarb
aam
test
jmp
orb
cmp
decb
clc
pop
outsl
clc
xor
rcl
or
lahf
mov
mov
sahf
jns
stc
stos
xchg
ficompl
std
mov
pop
mov
jo
inc
sbb
outsb
sbb
sbb
xchg
testb
ret
and
int3
cmpsl
and
cmp
mov
leave
jmp
in
cmp
jmp
insb
or
push
cmp
arpl
stc
xchg
clc
jge
shlb
out
and
lahf
or
enter
out
cli
sub
cmp
xchg
sbb
add
cli
jecxz
add
mov
repnz
subb
add
xlat
imul
inc
decb
in
call
push
das
adc
mov
cltd
sbb
nop
xor
mov
add
mov
or
pushf
ret
ret
push
mov
jle
inc
lock
add
dec
jns
adc
or
jno
push
lods
push
push
test
cmp
pop
call
cmp
pusha
test
mov
inc
stos
aas
fs
adc
stos
mov
push
in
mov
push
push
or
sbb
pusha
repz
int3
lods
lds
divb
bound
jecxz
popf
testb
inc
into
stc
and
or
mov
clc
mov
jb
mov
sarb
xchg
cmp
and
subl
and
adc
ja
sti
pop
ficomps
push
cmpsb
adc
mov
jbe
inc
xor
movb
shl
fstpl
ss
movaps
jp
fists
inc
repnz
cmp
movsl
xchg
pop
xor
in
ljmp
cmp
nop
loope
add
xor
movsl
orl
mov
xchg
imul
les
xor
mov
mov
sahf
les
leave
pop
mov
rcll
test
adc
sub
psrad
mov
clc
push
mov
xorb
push
pop
or
sbb
mov
gs
dec
in
lods
and
inc
xor
in
push
sub
sub
mov
sub
add
fs
sub
lea
cwtl
adc
scas
sbb
xor
fcomi
int3
dec
mov
daa
and
sahf
dec
mov
pop
stos
faddl
sub
push
lret
sbb
test
mov
mov
xchg
repz
arpl
fwait
or
cwtl
fidivs
in
push
movaps
mov
addl
fdivrs
add
clc
jmp
dec
xor
mov
adc
push
sub
sbb
xchg
mov
fwait
ljmp
ret
popa
sbb
mov
mov
stos
mov
out
add
test
or
gs
sub
xorb
in
push
xlat
fmull
lock
mov
ljmp
lods
popf
sbb
xchg
push
sbb
xchg
gs
sbb
mov
add
lea
cmp
mov
mov
jle
and
xchg
das
gs
mov
adc
cmp
mov
mov
mov
fnstcw
movsb
mov
jnp
mov
fstpl
cmovnp
cmc
pop
test
jne
fs
cwtl
scas
mov
fmulp
mov
xor
gs
mov
adc
push
les
inc
outsb
inc
adc
cmc
adc
jne
addr16
mov
pushf
iret
jmp
insl
dec
je
lods
lcall
mov
jnp
cmp
lock
xor
icebp
pop
jne
and
mov
adc
xchg
and
inc
mov
xchg
jnp
scas
inc
shrb
pop
orb
dec
xorl
inc
inc
jmp
leave
xchg
repz
stos
cmc
sub
pop
fs
bound
xchg
xchg
mov
out
mov
xor
test
clc
popa
js
outsl
mov
mov
mov
pop
inc
mov
mov
add
nop
ja
out
lret
inc
push
enter
sbb
jge
mov
lods
push
xlat
xor
and
mov
js
inc
pusha
fmull
dec
addl
into
push
jnp
js
es
push
out
xor
add
xor
push
and
pusha
add
cmp
sbb
lods
subl
cltd
cmpsl
std
push
lret
fistps
add
nop
clc
repnz
inc
xchg
lea
cmc
stc
adc
jb
lahf
mov
add
jo
enter
mov
sub
das
add
repz
out
pop
out
lahf
xlat
inc
pop
mov
push
sub
lods
cld
jl
rolb
xor
mov
sub
shll
aad
mov
or
mov
add
bound
lcall
cmpsb
inc
pop
pop
pop
push
pop
adc
adc
mov
mov
add
stos
sub
mov
rcrb
sub
and
cld
sub
or
xchg
sub
ficoml
xlat
pop
arpl
aam
ret
cmc
in
stos
rclb
or
pop
inc
rcl
lock
mov
aad
sub
xchg
aas
mov
sub
rcrb
sub
and
mov
dec
add
fucomi
or
je
lods
out
je
jecxz
inc
xor
or
jge
jle
aad
lahf
aas
dec
test
popa
js
push
inc
shl
mov
mov
aad
shrb
fistpl
jne
daa
loopne
jecxz
fidivrs
adcl
mov
pusha
xchg
jne
mov
mov
push
jp
rorb
push
push
ret
fsubs
cld
push
mov
dec
and
mov
xor
loope
and
jns
out
inc
push
dec
push
xor
int3
cmpsl
xchg
cs
push
or
dec
mov
cli
xchg
sbb
outsb
inc
lods
dec
push
aad
aad
stos
jle
push
insl
sub
add
shrb
jmp
mov
scas
test
aas
testl
fsubrl
popa
int
mov
add
ret
adc
xchg
adc
xor
fidivl
bound
mov
or
adc
arpl
and
lods
adc
sbb
mov
jecxz
test
cmpsl
pushf
dec
fildll
call
push
jns
int
into
mov
add
xor
pushf
adc
pop
add
fistps
adc
in
dec
es
push
inc
loope
adc
dec
cmc
xor
std
int
icebp
sbb
loop
inc
leave
push
xchg
jns
iret
lret
lea
bound
jno
mov
sbb
icebp
arpl
jmp
inc
inc
cmc
inc
dec
push
add
in
cli
enter
shlb
xor
inc
or
sbb
in
std
push
mov
push
jmp
loope
add
repz
dec
arpl
sar
and
int3
push
mov
into
fwait
jnp
mov
enter
leave
cmp
outsb
out
outsb
add
mov
push
pop
inc
cmc
or
push
sarb
push
mov
add
or
xor
roll
rolb
aas
xor
xchg
dec
adc
nop
push
sbb
sub
jo
in
dec
repnz
rcrl
and
ret
xchg
je
jp
push
and
das
fadds
lret
inc
test
lock
adc
lret
test
jmp
and
sub
lods
in
movsl
cmovg
push
add
repnz
rsqrtps
and
dec
aad
daa
cmp
cmc
movsl
bound
shrl
popa
dec
fists
cmpsb
add
xor
je
pusha
sbb
dec
dec
repz
fildl
lret
jecxz
lret
push
jo
sub
jg
sbb
inc
insl
nop
jle
mov
or
dec
sbb
arpl
pop
mov
dec
mov
ss
add
or
push
mov
les
dec
mov
adc
movsb
adc
cmp
xchg
or
push
les
dec
cmp
inc
mov
pop
ret
push
mov
lret
or
pop
pop
daa
cld
icebp
push
inc
imul
daa
and
nop
xor
pop
mov
mov
movsb
sbb
movsb
mov
int3
cmpsb
das
jg
pop
ds
push
xor
jl
repz
dec
inc
dec
test
dec
gs
xchg
in
scas
inc
adc
ffreep
mov
inc
push
sub
aaa
repz
jg
push
daa
mov
aad
in
repz
xchg
cmp
bound
loop
imul
sbb
js
push
push
xor
mov
push
data16
xchg
aam
or
xor
mov
ljmp
movsl
testb
push
push
ja
sub
xchg
cmc
sub
cmpsl
xchg
xchg
push
or
repz
lds
fisubl
xchg
loope
push
daa
jmp
shll
dec
sub
sarb
imul
pop
push
cs
adc
pop
inc
notb
icebp
cmpsl
jmp
pop
xor
int
bswap
std
sub
int3
iret
ss
add
js
test
out
idivb
pop
outsb
les
out
jmp
aas
jo
shrl
repnz
movsl
les
mov
sub
mov
mov
sub
rolb
and
jmp
mov
push
repz
jp
outsl
pop
pop
and
xor
jle
adc
xchg
and
aad
add
cs
dec
cs
int
cmp
jecxz
sub
lods
stos
jno
stos
and
subb
loope
aad
fcomip
popa
mov
add
or
xor
lock
in
mov
sbb
enter
test
sub
insl
xor
sarb
jp
mov
mov
sub
call
pop
mov
cltd
xor
and
jbe
imul
jecxz
inc
xchg
lahf
jne
dec
js
pushf
sti
mov
fsubr
xchg
lock
xchg
sub
mov
dec
in
xor
push
arpl
pcmpgtb
aad
dec
and
les
mov
out
mov
pop
push
or
cmp
lret
push
stos
aam
mov
sub
xor
jmp
push
movsl
inc
test
cmp
shll
lahf
xlat
add
mov
adc
sti
mov
stos
jp
sub
inc
or
adc
xor
lahf
das
dec
lds
mov
mov
xor
lahf
fisubl
aam
cmp
fs
ljmp
mov
test
xchg
ret
pusha
pop
stos
fsubr
insb
shll
adc
mov
sarb
icebp
jns
ss
imul
jg
out
ficoms
out
neg
push
das
out
xor
cmp
push
xor
and
inc
repz
sub
push
and
std
outsl
iret
add
hlt
xor
inc
mov
mov
adc
dec
rdtsc
mov
push
cmpsb
dec
lods
mov
xor
mov
ficompl
xor
xor
jl
test
cmp
outsb
in
adc
daa
pop
xchg
shl
fstl
test
and
adc
cli
mov
mov
rorl
xorb
jns
or
mov
into
xor
inc
into
or
and
or
lock
inc
or
pop
scas
jnp
push
pop
cmc
xchg
mov
xor
rorb
lcall
test
pop
repz
aad
mov
insl
add
insb
shlb
popf
shl
in
jae
mov
mov
fsubrl
out
xor
fnstenv
aad
pushf
cli
movsb
pop
lcall
push
fwait
nop
sub
push
aaa
sbb
rorb
mov
fcmovnbe
negl
das
sbb
mov
dec
mov
das
imul
inc
mov
insb
pop
and
xchg
jne
push
pushf
mov
jno
add
mov
jae
pop
movsl
pop
test
lcall
add
pusha
mov
pushf
icebp
xchg
lret
cmc
mov
inc
cmp
sub
adc
or
sub
fstl
xchg
cltd
icebp
cmc
and
inc
int3
lret
mov
and
push
imul
jb
sub
out
inc
lcall
and
int
das
mov
daa
xchg
xlat
bound
and
push
push
jns
jp
xchg
xorb
scas
iret
addl
add
imulb
xchg
push
add
push
jno
mov
out
inc
test
mov
mov
cmpsb
cmpsb
imul
push
test
aaa
hlt
test
clc
jecxz
cmp
adc
inc
les
scas
imul
pop
xchg
ret
mov
jp
lcall
or
or
push
fsubl
dec
push
out
or
xchg
cmpb
jge
test
xor
add
jmp
repnz
mov
dec
mov
insb
adc
cli
daa
and
jl
cmp
push
icebp
inc
stos
jle
int
daa
pop
xchg
out
cmp
xor
jmp
mov
jmp
enter
sbb
data16
pop
and
cmp
pop
std
jp
inc
and
aam
in
sbb
inc
dec
sub
xor
rorl
rcll
std
mov
dec
jbe
movsl
sub
pop
repz
stc
rcr
fcomp
cli
push
cmpsl
mov
jg
stc
cmc
mov
mov
xlat
in
sti
push
insb
mov
int3
add
xchg
jecxz
mov
push
int3
mov
ret
mov
xor
cmp
jns
es
stos
dec
mov
xchg
sbb
mov
and
mov
xchg
lret
push
mov
daa
xchg
push
sbb
push
xor
test
dec
sub
xchg
mov
dec
cmp
inc
incb
sbb
ret
and
push
sbb
dec
sti
xchg
dec
adc
aaa
sub
sub
push
pop
pushl
jae
leave
inc
push
insl
filds
int
stos
push
aad
scas
aam
std
pop
adc
rcrb
fcomi
out
mov
inc
lret
lret
rclb
jecxz
stos
std
push
or
stos
cwtl
fwait
xor
int3
pushf
fdivr
shr
pushf
jne
mov
movsl
sahf
outsl
cltd
xchg
push
mov
sbb
stos
push
lods
xchg
and
aam
jmp
sbb
lods
imul
adc
jp
sti
test
sti
fs
push
inc
bound
cmp
stc
xchg
sbb
stos
sub
sbb
bound
inc
js
in
dec
xor
loop
push
jae
pop
sar
add
mov
or
pop
fucom
mov
cmp
arpl
adc
push
cmpsb
lret
sarl
mov
push
add
and
movb
jl
cld
adcb
std
cltd
adcb
out
inc
leave
je
pop
ja
inc
adc
jmp
call
dec
mov
ret
push
mov
dec
fcmovu
pop
fld
lods
sub
clc
mov
imul
loope
mov
jl
lds
pop
mov
rorb
mov
or
push
es
adc
adc
rep
incb
movsb
or
push
icebp
ljmp
hlt
dec
aad
sbb
push
shlb
push
inc
insb
inc
mov
loope
push
arpl
je
stc
mov
dec
mov
mov
loope
lea
rol
cmpsb
rolb
ja
pop
mov
xlat
stos
ret
pop
repnz
fwait
mov
mov
cmpsl
mov
out
in
sub
mov
inc
lods
jnp
loope
lahf
sub
cmp
jge
push
jmp
xchg
inc
ljmp
fistpl
stos
mov
test
das
dec
out
pusha
and
sub
add
mov
cmpsb
and
inc
call
jb
xor
sahf
cld
ja
movb
pusha
jg
xchg
dec
aaa
mov
and
lods
lods
adc
rorb
aas
test
shl
sar
test
clc
mov
sahf
cs
gs
cli
arpl
mov
mov
andb
cmpsb
out
sbb
sbb
inc
testl
add
sub
idivb
dec
push
hlt
mov
stos
aad
int
mov
sub
dec
loop
bnd
mov
adcl
dec
lret
imul
and
push
shlb
xchg
jnp
hlt
sub
mov
arpl
xor
jmp
outsb
push
scas
fmul
imul
out
jb
push
push
inc
dec
bound
push
leave
mov
in
and
mov
mov
fisubrl
dec
sti
out
sub
xor
lea
add
out
push
mov
mov
and
cmp
jo
fcompl
inc
pop
jbe
sbb
inc
inc
fld
xor
mov
daa
les
imul
sbb
pop
std
push
xlat
or
iret
fldt
xchg
inc
in
inc
mov
insl
lcall
insl
lcall
cltd
lcall
cmp
push
push
mov
adc
nop
adc
js
mov
lcall
insb
push
les
push
cs
xlat
repnz
fiadds
and
jbe
xchg
inc
in
pusha
sbb
stos
lods
clc
lods
aam
jnp
adc
lea
cmp
add
cmp
lret
addr16
cli
mov
sub
outsl
fs
cmpsb
push
add
xor
adcl
inc
mov
jp
ss
pop
stos
add
sub
scas
cmp
and
xchg
xchg
pushf
clc
xchg
xchg
adc
pusha
push
dec
arpl
das
xor
test
xchg
aam
dec
xor
rclb
or
out
jecxz
cmpsl
pop
xchg
sbb
das
shr
leave
cwtl
test
mov
fs
add
movsb
icebp
rcrl
loope
mov
push
in
cmp
pop
dec
lds
dec
jge
outsb
in
sub
in
inc
fdivp
cmpsl
xchg
in
xchg
sbb
and
or
adc
je
sti
and
cmpsl
sub
jns
leave
arpl
mov
inc
bnd
cmp
stc
or
or
dec
in
or
imul
xchg
jecxz
into
and
adc
call
iret
ja
mov
inc
sub
adc
inc
mov
je
add
imul
scas
test
dec
xchg
jge
repz
lret
lea
lret
mov
pop
nop
into
mov
in
daa
xchg
inc
inc
loopne
rclb
add
jae
out
mov
xchg
dec
sbb
xchg
imul
scas
ss
gs
pop
mov
inc
adc
pop
sbb
cld
mov
arpl
cmp
pop
mov
dec
xor
jg
rcrl
addr16
std
add
hlt
jns
pushf
jl
sbb
xchg
sarl
mov
pop
scas
push
jae
aas
stc
sub
mov
cmp
notl
std
pop
cld
push
mov
jl
out
scas
add
rolb
cmp
test
jbe
das
hlt
sbb
aaa
cltd
aad
mov
mov
or
mov
pop
push
pop
loope
mov
rcll
inc
mov
stos
sbb
mov
jo
cs
bound
jmp
or
fisttps
loopne
fsubr
insb
scas
cmp
sbb
xchg
inc
pop
cmp
mov
pop
push
aad
inc
addr16
add
xchg
in
rorl
cmc
jge
movsl
loopne
push
rcrb
cmp
repnz
jp
movsl
cmpsl
jb
xchg
adc
inc
scas
arpl
loope
mov
pop
push
add
gs
mov
fcmovnb
sub
mov
psubsb
cltd
imul
cmp
aaa
xchg
imul
aad
mov
aas
fsubr
jbe
pop
jbe
enter
outsl
push
outsl
mov
test
shrl
sbb
mov
in
dec
lret
dec
xor
rclb
jle
les
sub
mov
jo
into
adc
aaa
and
divl
xchg
xchg
sarb
cmp
mov
test
out
ret
dec
arpl
aaa
jne
or
cmp
aad
sarl
lock
in
stc
xor
fs
xchg
mov
xchg
push
cmp
sbb
sbb
outsb
or
fldenv
xchg
push
sbb
cmp
stc
outsl
sbb
loope
cmpsl
bound
clc
fiaddl
mov
adc
ss
jae
xchg
fiaddl
movups
es
outsb
out
inc
fnstcw
loop
sbb
dec
mov
mov
test
lret
stos
aad
pop
sahf
cmp
xlat
sbb
push
jl
lds
and
ljmp
jge
jno,pn
fidivrs
sub
call
lock
sbb
cmp
ljmp
dec
and
mov
mov
leave
cli
pop
inc
lea
add
cmp
inc
ss
aaa
or
lahf
cmc
mov
and
mov
sbb
int3
es
or
jl
pop
clc
push
pop
sbb
fidivrl
ljmp
into
cltd
pop
imul
add
or
xor
sbb
or
mov
sbb
cmp
nop
xor
push
fmull
pop
jecxz
iret
daa
mov
jmp
mov
mov
add
loop
das
and
jbe
out
lret
adc
and
push
or
mov
js
movsb
cmp
ret
cmp
push
insb
xlat
mov
fiaddl
in
lret
inc
loop
xchg
or
lds
fistpll
jge
pop
and
cwtl
pshufw
sub
pop
call
push
test
fldl
push
xchg
adc
sbb
lods
push
mov
in
or
cmp
loop
push
xor
jnp
jno
and
or
addr16
mov
push
jle,pt
movsb
inc
dec
sbb
cmpsb
lcall
mov
sub
sub
pop
fstpl
lret
shlb
scas
xor
les
or
mov
shr
movsl
clc
subb
sub
mov
dec
imul
push
in
xchg
sbbl
jo
push
jmp
mov
or
lods
push
jge
lea
ljmp
mov
outsl
xlat
adc
dec
cmp
ret
add
add
fwait
xor
sti
sbb
das
jg
int
outsl
ljmp
or
cmp
add
les
dec
add
shlb
push
xchg
jmp
push
out
add
and
xchg
idivl
roll
aam
dec
mov
sti
ss
fcoml
mov
fists
fstl
add
invd
and
cld
test
imul
inc
clc
rcrl
ficompl
ljmp
inc
stos
loop
xor
mov
test
sarb
pop
lcall
and
xor
mov
xor
adc
aas
jnp
xchg
add
adc
push
sbb
sub
mov
and
test
dec
arpl
ljmp
pop
ficoml
xor
push
cmpl
adc
pusha
jge
adc
lods
insb
inc
jp
mov
mov
or
in
jnp
dec
lock
dec
and
lret
ja
jne
push
rcll
mov
int3
mov
and
pop
aam
outsl
sub
xor
aam
xor
mov
in
int3
jp
lds
js
subl
les
jmp
ret
pop
and
mov
ficoms
mov
lds
push
mov
or
fwait
andb
mov
xchg
sti
sahf
mov
in
mov
push
sbb
add
push
ljmp
dec
push
mov
call
daa
out
pop
lock
sub
mov
push
data16
mov
add
sarb
push
xchg
out
mov
pushw
cmp
lcall
and
fimuls
loope
cmp
sbb
in
xchg
add
sbb
sti
mov
inc
test
mov
mov
mov
add
mov
movsl
lret
ds
repz
lcall
xchg
sub
scas
out
push
or
and
mov
xchg
cmp
mov
jnp
cltd
adc
mov
push
mov
sahf
or
rolb
push
mov
adc
out
push
cwtl
scas
mov
ret
test
mov
add
pop
arpl
rolb
dec
mov
int3
sbbb
xchg
arpl
out
or
outsb
or
clc
mov
jo
push
or
xchg
adc
pushf
iret
insl
lahf
cmpsl
iret
in
adc
ror
iret
sti
push
test
add
cmp
out
jae
xor
dec
sbb
mov
fs
insb
out
add
xchg
int3
mov
mov
out
test
mov
cmc
cmp
jb
fdivs
aas
out
xchg
leave
xchg
push
test
adc
cmpsb
mov
add
jb
xor
imul
add
pop
gs
hlt
push
pop
cmpsl
shlb
sbb
jb
inc
aas
jb
fdivrs
imul
ss
mov
mov
sub
fs
jle
cltd
inc
jmp
and
and
ret
leave
mov
out
xor
xor
xchg
call
lock
or
out
jecxz
out
in
dec
mov
in
into
push
mov
pop
int
push
jg
test
and
scas
add
sub
add
push
jle
notl
lods
or
cmc
pop
push
dec
fbstp
cld
jnp
ret
addr16
call
imul
setno
or
popf
inc
jns
sbb
and
lds
pop
jbe
jne
jb
jae
das
insl
jmp
mov
xor
push
mov
mov
dec
add
and
jbe
out
cltd
or
mov
arpl
push
bound
jp
lret
or
inc
inc
push
scas
push
enter
mov
xor
mov
out
sarb
pushf
mulb
clc
push
out
pop
mov
rorl
xor
mov
add
jp
xchg
push
add
pop
adc
fs
aam
or
cmp
cmp
inc
fidivl
xchg
and
xchg
fiaddl
int
icebp
mov
cld
fwait
mov
add
adc
subb
or
sbb
repnz
dec
rcll
sahf
in
rcrb
push
popa
xchg
mov
push
mov
mov
in
mov
dec
leave
mov
xchg
and
cmpsb
xlat
call
and
lods
push
rclb
sbb
mov
add
push
test
jle
xchg
push
jecxz
push
negl
aam
dec
call
lds
fldl
in
lret
imul
xlat
shll
jno
in
out
sub
cmp
movsl
shlb
popf
jmp
cmpsl
cmp
xchg
sti
mov
dec
mov
jle
data16
adc
leave
cmovg
out
rolb
sub
int3
add
jmp
inc
mov
int3
inc
sarl
or
icebp
push
sahf
gs
mov
dec
lock
inc
push
imul
sub
pop
add
sbb
cmc
sub
fwait
ja
add
or
ja
sub
mov
scas
loop
cmp
jge
sahf
out
sub
pop
and
lock
mov
mov
lahf
aas
jp
cmp
aam
xor
lock
pop
imul
insb
das
cmp
repnz
in
idiv
and
aas
cli
movsb
lds
add
out
xor
jne
mov
push
js
test
aas
arpl
push
dec
lahf
dec
rcrl
nop
and
inc
mov
sub
jg
sbb
aaa
lock
mov
inc
jb
popf
fcmove
punpckhwd
divb
daa
aam
fisttpll
lahf
frstor
jp
imulb
pusha
mov
xchg
cmpsb
scas
mov
jns
in
or
mov
shl
cmp
and
push
cmp
in
push
arpl
pop
nop
jne
sub
sti
out
lret
js
mov
mov
mov
jle
pushf
movsl
xchg
mov
cli
cmpsb
pop
add
mov
pop
pop
scas
repnz
mov
add
adc
jg
adc
sub
push
jmp
or
adc
push
aas
sahf
cs
dec
in
sarb
add
push
mov
cmp
ss
inc
fdivrs
arpl
fisttpl
out
insl
int3
xchg
sarb
xchg
xchg
jg
popf
xchg
sbb
sub
scas
mov
cmovge
jmp
adc
rolb
mov
push
ficoms
into
mov
jg
jmp
aaa
sub
sub
dec
inc
xchg
psadbw
xchg
gs
in
and
aad
push
dec
orl
mov
cmp
mov
adc
mov
fs
subb
iret
dec
mov
xchg
cmpl
xlat
pop
hlt
ljmp
mov
push
js
popf
adc
push
aas
inc
mov
dec
or
lock
aas
sub
sbb
adc
mov
jmp
aad
leave
cmp
pop
mov
fldcw
cmp
iret
fcomps
and
push
jns
pop
pop
pop
leave
cmp
fisttpll
cld
xor
push
pop
es
dec
xor
adc
and
or
mov
fstpt
ret
xorl
repz
mov
in
dec
sub
fdivl
pop
dec
mov
jge
cld
xchg
in
push
shll
fs
fdivrs
push
mov
into
shll
adc
or
fistpll
or
enter
int
cltd
sub
stos
rcrl
ljmp
or
test
out
in
xchg
fiadds
bound
das
popf
cmp
sub
mov
add
loope
fsts
cs
pop
pop
test
sbb
jmp
stos
enter
fs
pusha
mov
int
xchg
sbbb
jg
inc
mov
inc
mov
mov
xchg
xor
outsl
call
mov
subl
cmp
sbbl
fdivrl
inc
jo
iret
lsl
es
add
ja
push
sbb
pop
sti
sbb
pop
stos
mov
pop
lcall
xchg
jbe
cmpsl
or
inc
shlb
mov
sarb
xor
flds
xor
mov
or
jmp
xchg
adc
sbb
jmp
test
outsl
shl
loopne
stos
mov
adc
mov
xchg
hlt
lcall
lcall
pushf
xlat
cltd
sahf
subl
pop
lea
leave
inc
pusha
jnp
and
mov
bound
push
and
mulb
push
inc
dec
insl
mov
nop
insb
rclb
xlat
add
aad
cs
outsl
jo
out
in
fists
rorl
jns
jl
push
and
add
sbb
mov
cli
jno
xor
adc
xchg
ds
mov
mov
and
dec
jb
cmpb
mov
ljmp
and
aam
jno
push
jns
fisttps
mov
xchg
in
sti
mov
mov
push
outsb
cmp
jge
adc
dec
pop
repnz
popa
insb
inc
lods
jnp
jecxz
and
test
xlat
aas
ljmp
pop
pop
inc
xchg
data16
std
pop
xor
cmp
push
movsl
cmp
dec
scas
mov
jle
icebp
xchg
push
pop
mov
sbb
ret
mov
shlb
cmp
lods
and
stos
jne
cmp
in
call
ret
cmpsl
mov
and
jl
sub
sar
push
add
outsl
inc
pop
adc
pushf
es
loopne
jne
and
mov
sti
pop
push
je
fwait
daa
sbb
or
push
or
out
cmp
pusha
shll
mov
or
repz
sub
sub
lret
fwait
sub
add
jae
imul
sbb
out
cmc
mov
sbb
push
inc
mov
or
ljmp
xchg
jns
je
jnp
pop
and
xchg
bound
xchg
pushf
sbb
sub
mov
add
mov
shrb
pop
ror
sub
insb
fdivs
fdivrl
repnz
and
and
jl
adc
ret
mov
lea
idivb
mov
insl
out
loope
mov
aaa
cmp
cmp
adc
mov
or
inc
xlat
cld
flds
rcll
mov
sub
lahf
imul
xchg
mov
pop
test
out
pop
xchg
mov
jo
ds
out
pop
ljmp
pop
and
sbb
aas
push
enter
jo
or
stos
dec
les
inc
test
jle
or
pusha
sahf
call
pop
aaa
mov
jmp
xlat
dec
cmp
mov
loop
psrad
lahf
pop
inc
xchg
sbb
icebp
jb
pop
shlb
ficompl
lods
mov
jbe
push
cmp
hlt
mov
stos
jp
jle
or
xor
pop
cmp
shll
jp
inc
inc
popa
push
xor
cmpsb
orb
dec
or
cltd
inc
or
and
pop
test
inc
in
and
lahf
es
cli
stos
cmp
push
add
push
inc
adc
sbb
and
andl
outsl
clc
ret
sbb
or
xchg
cmp
lds
mov
ret
lods
sbb
sub
mov
xlat
daa
mov
jmp
fs
lea
ja
inc
xchg
inc
sbb
mov
subl
not
test
js
or
jge
mov
mov
std
xchg
imul
fisttpll
push
idivl
cmc
test
stos
add
scas
inc
nop
cmpsl
shll
xchg
sub
enter
push
test
mov
sbb
inc
mov
mov
cmc
pop
pop
inc
scas
xor
cmpb
ds
iret
mov
or
xchg
test
lea
mov
sti
lahf
pop
cs
xor
pop
mov
pop
adc
pop
pop
mov
push
jge
les
mov
rcrl
cld
in
aas
xchg
add
lock
rcrb
test
jmp
loop
idivb
fsub
ds
dec
jle
fistps
push
or
iret
sti
mov
pop
jns
inc
inc
subb
adc
mov
test
jbe
push
adc
ret
scas
shll
cmc
pushf
dec
sbb
ja
jnp
jg
ficomps
mov
add
gs
ja
aam
shl
outsb
aas
sbb
dec
unpcklps
arpl
xlat
fcos
add
mov
cmovle
add
shlb
mov
pop
and
mov
push
mov
add
mov
xor
clc
xchg
test
stos
xrelease
push
psadbw
mov
push
and
adc
cwtl
push
out
cli
mov
iret
cmpsl
das
inc
inc
outsl
sub
pop
xlat
cmp
push
addr16
sub
std
xchg
arpl
jg
clc
enter
xchg
or
pop
push
pop
mov
rorb
mov
ja
jne
lret
fcoms
pop
xchg
jmp
mov
jle
inc
mov
fildl
movsl
mov
stos
cld
test
fstps
push
hlt
sub
xor
ja
push
addb
jecxz
mov
mov
add
out
shrl
js
imulb
dec
dec
sub
std
addr16
mov
sub
fists
xchg
ja
sbb
int
xchg
mov
scas
xchg
xlat
inc
mov
notb
dec
sub
f2xm1
loope
jbe
jnp
aaa
mov
rorb
inc
push
mov
js
into
les
xchg
sbb
adc
gs
insl
mov
out
xor
and
loope
fwait
stc
pop
pop
sub
insb
pop
xchg
insb
pop
test
lret
cwtl
vmaxps
js,pt
scas
dec
pusha
int3
es
movsl
lret
xchg
dec
add
pop
std
pusha
xor
push
std
cmp
sbb
cmpsl
adc
lea
cltd
in
enter
mov
ds
push
dec
xor
cli
or
add
or
mov
sbb
push
add
ja
outsl
addr16
fsts
or
and
pop
dec
in
sarb
stc
mov
out
adc
push
mov
bound
add
stos
or
mov
add
test
or
out
jnp
sub
sbb
cmp
or
nop
sahf
fimull
fcom
xor
xor
adc
insb
xchg
jp
xchg
mov
xchg
adc
add
out
mov
stos
shll
imul
jno
push
xchg
cmp
mov
lea
add
mov
cmp
cmc
loopne
test
lcall
cltd
xor
add
adc
pop
popl
neg
push
jp
dec
or
popf
inc
or
popf
rcl
adc
push
pop
jo
lds
adc
clc
inc
mov
pop
xchg
push
mov
fdivrs
push
bound
inc
clc
int
jge
xchg
push
adc
mov
jae
mov
loope
mov
stc
lea
xlat
scas
jnp
push
xchg
adc
inc
pop
xlat
xor
arpl
xor
aad
popa
push
xchg
xlat
sub
or
push
cwtl
add
sar
pop
xchg
mov
ret
dec
lcall
jge
rolb
push
mov
add
pop
and
cltd
ss
mov
inc
cmp
inc
aam
andl
pop
imulb
adc
dec
push
outsb
jbe
sbb
fs
into
push
mov
fistpl
xchg
inc
arpl
mov
insl
sbb
aam
jmp
incl
adc
pushf
sbb
cs
arpl
loop
inc
fs
xor
in
jae
ret
pop
aaa
aad
dec
hlt
sbb
jle
or
xor
mov
lods
dec
cli
jmp
or
sbb
popa
orb
sub
outsb
sub
js
mov
fsubr
in
lods
rcl
push
dec
pushf
sbb
pop
ds
or
add
popa
sbb
mov
test
or
test
insb
popf
icebp
mov
pop
inc
adc
dec
and
xchg
push
inc
push
xor
push
mov
mov
and
ficomps
xchg
call
imul
xchg
jge
cmp
stos
pop
push
xor
mov
dec
ficompl
std
hlt
push
cmp
aam
sbb
cmpsl
xchg
iret
sbb
test
iret
and
addr16
movsl
mov
stos
push
sbb
xor
or
mov
jp
iret
sub
fs
and
sub
dec
fmulp
repz
mov
and
out
fsubrs
pop
insl
test
jo
rolb
xor
jmp
lahf
sub
call
outsl
daa
jbe
sub
adc
inc
adcb
outsl
fldt
ret
mov
testl
int3
cmp
cmp
cltd
jl
mov
adc
xchg
dec
xchg
sti
mov
and
stos
pop
sbb
push
cmp
fnsave
jne
adc
sbb
clc
mov
dec
pop
fdivrp
mov
stc
sub
adc
aam
cmp
cmp
out
mov
inc
and
xor
in
out
loopne
xor
mov
adcb
rolb
jmp
pop
fcmovu
mov
insl
inc
mov
add
cwtl
pop
jge
fmuls
mov
jb
cmp
xchg
push
sub
cld
xorb
jmp
push
xor
enter
cmp
call
xor
add
cmp
cmpsb
xchg
or
add
mov
movsb
dec
sub
mov
mov
dec
sub
out
inc
inc
dec
and
inc
push
inc
cmp
xor
sbb
jnp
sbbl
xchg
push
sub
idivl
cli
addb
mov
mov
shrl
inc
xchg
push
scas
add
out
xchg
sub
sbb
or
xchg
hlt
jb
fldl
mov
cmpl
mov
fmuls
sbb
sub
mov
mov
rol
push
mov
jp
pop
adc
mov
or
mov
lahf
push
sub
mov
pop
mov
push
push
sbb
iret
add
pop
pop
xor
lock
rorl
and
dec
add
and
andb
pushf
orb
xor
and
sub
cltd
or
rorb
mov
icebp
mov
xlat
loope
aas
shlb
adc
sub
outsb
cltd
mov
insl
int
arpl
popl
imulb
pop
pop
mov
fstpl
dec
or
xchg
enter
push
add
fwait
sub
mov
shl
test
clc
xor
push
lahf
test
fdivr
jae
mov
inc
xchg
and
fldl
jge
sbb
adc
fcompl
arpl
shl
jno
cltd
scas
mull
cmpb
push
lahf
shll
daa
add
cmp
in
push
pop
jmp
shll
lods
mov
in
stos
jns
inc
push
outsb
push
cwtl
fadd
stc
into
cwtl
inc
loope
xchg
int3
sbb
xchg
lcall
daa
mov
test
mov
pusha
xchg
push
mov
dec
out
xchg
in
and
pushf
sbb
sbb
mov
mov
pop
or
or
into
popf
sub
insl
mov
aam
imul
cmp
mov
mov
or
in
scas
push
scas
cmpsl
cmp
sbb
sbb
lds
mov
and
jbe
sti
mov
jg
mov
mov
push
and
sbb
mov
es
pop
lea
pop
inc
gs
xchg
popa
mov
mov
adc
das
or
dec
outsl
icebp
jl
ret
push
scas
mov
mov
cmp
dec
filds
lret
xchg
jb
jl
jae
in
aad
and
push
and
xor
pop
cmp
pop
es
leave
mov
fadd
fwait
test
adc
fdivrp
mov
sub
add
test
mov
mov
ret
repz
xchg
into
mov
test
cmc
add
fstl
sbb
inc
std
shll
aad
inc
push
lret
cmp
mov
sbb
jne
ret
dec
hlt
fnstenv
add
inc
xchg
dec
pop
xor
push
sub
inc
jp
test
lret
push
inc
lock
sbb
xor
xor
sub
jge
sub
les
outsb
pop
sub
xlat
xchg
loope
push
cltd
and
shll
pop
add
dec
pop
mov
pushfw
mov
dec
rcl
dec
pop
fidivs
sbb
fcmovnbe
mov
cmp
jbe
ja
shl
in
add
ret
gs
mov
sub
dec
push
xchg
push
dec
cmp
pusha
mov
jns
mov
pop
xchg
and
fs
roll
pop
ja
adc
inc
jle
stc
stos
fldcw
xchg
pop
or
cltd
movsb
ficoml
jmp
mov
xlat
dec
dec
sub
pop
jo
push
fs
out
pop
es
xlat
repz
jle
cmpsb
dec
jmp
loop
adc
pop
dec
decl
jge
test
cmp
repz
call
ret
pop
movsb
gs
or
jo
push
push
mov
mov
nop
push
mulb
push
jno
pop
lcall
mov
add
xchg
dec
lahf
mov
jae
fs
jg
inc
jb
fiaddl
mov
pop
mov
mov
mov
sbb
fistl
add
out
mov
adc
sti
test
adc
sub
outsl
fisubrl
loop
ror
stc
scas
loope
or
sti
sbb
in
xcrypt-cfb
cmpsl
in
push
loop
sarb
loopne
push
js
jns
add
and
adc
bound
xchg
hlt
lea
sarl
xchg
pop
mov
adc
cmp
sbb
repz
bnd
add
pop
pusha
xchg
addr16
xchg
vmwrite
cltd
adc
sbb
and
sub
ss
enter
insl
sbb
int
or
mov
inc
movsl
ja
scas
xor
push
cld
fisubl
stc
adc
xchg
out
inc
dec
lods
out
mov
lcall
pop
pop
int
jl
inc
jecxz
jge
dec
test
jl
pop
stc
stos
test
mov
imul
sub
mov
jno
movsl
lret
pop
call
add
or
lods
subb
lods
cmpsl
fdivr
cltd
xchg
lea
pop
and
push
adc
hlt
cmp
or
push
es
leave
jmp
and
jp
sete
push
mov
bsf
push
insl
rclb
xor
mov
xchg
je
lods
add
movsb
push
mov
mov
or
adc
dec
leave
or
ret
mov
inc
jo
and
sub
mov
cmp
jge
mov
mov
std
aas
enter
out
xchg
adc
cmp
sub
jb
or
sub
adc
sub
fimuls
lea
scas
jp
lahf
xrelease
pop
dec
bound
ud2
mov
pop
add
outsl
pop
mov
jl
mov
loope
mov
arpl
data16
cmpl
mov
sbb
push
inc
sub
lea
push
sub
rcl
in
mov
or
mov
movsl
shrb
std
and
inc
fld
lds
out
sub
fwait
adc
int3
hlt
cmp
push
rcl
or
stc
int3
cmpsl
loop
lret
cmp
orl
mov
xor
push
mov
popa
xchg
repz
les
jle
xchg
repnz
mov
loope
insb
orl
mov
mov
add
data16
adc
pushf
sub
jmp
mov
jge
movsl
add
push
lods
push
decl
add
sahf
mov
lods
and
mov
add
push
imul
xchg
mov
mov
push
or
push
push
add
fs
repnz
mov
jae
jne
loop
sub
xchg
jns
hlt
push
xchg
mov
ret
dec
data16
jno
stc
addr16
fwait
test
or
popa
sub
or
sub
jno
push
push
mov
das
mov
dec
ret
or
addl
fdiv
or
mov
fimuls
fnstsw
mov
cld
and
in
loopne
dec
push
popa
sub
push
imul
xchg
jg
sub
lods
pop
mov
push
sub
jne
ror
lahf
push
cmp
mov
les
test
xchg
and
lea
jp
inc
mov
sub
into
out
mov
push
into
mov
popa
and
js
lods
xchg
add
adc
ljmp
je
icebp
mov
sti
mov
frstor
mov
stos
and
mov
sbbl
xorb
test
jp
mov
pop
adc
sub
test
lcall
fimull
lock
mov
sub
push
lret
movsb
xchg
test
cld
mov
ret
call
sub
or
add
jecxz
andl
xor
xor
xlat
jecxz
push
sub
xchg
pushf
sub
pop
xor
lahf
subb
jbe
movsb
stc
xchg
hlt
dec
jmp
int
jae
shlb
repnz
mov
aad
push
adcl
mov
jne
dec
ljmp
mov
int
sbb
mov
pop
inc
scas
adc
pop
push
popf
mov
push
mov
xor
cmpsl
or
sub
cmp
jae
mov
xchg
mov
sbb
fs
xchg
or
fisttpll
mov
adc
repz
sti
insl
and
lods
int
daa
rcrb
and
lret
ss
lcall
cmp
out
adcb
jp
ret
jae
bnd
xor
dec
lods
or
add
fistl
xchg
mov
mov
jge
loopne
sbbb
mov
and
out
and
ret
push
lret
jo
and
jg
sti
xor
ficoml
xchg
lret
addl
xchg
test
cmc
xchg
and
jo
out
mov
push
xor
loopne
fsub
mov
jg
pop
adc
cmp
push
daa
jg
jne
xchg
xchg
sti
subl
loopne
sbb
jmp
adc
int
das
popa
aaa
sbb
cmc
divl
lret
jl
ljmp
sub
test
add
push
arpl
aas
fdivs
push
push
jp
and
lock
into
push
and
sbb
push
fistl
call
ss
pusha
call
leave
adc
xlat
mov
dec
loop
lea
in
adc
sbb
mov
sahf
jae
dec
mov
jl
xchg
xchg
int3
lea
lock
std
cmp
push
sub
pop
add
xchg
cli
insl
pop
sti
repz
adc
pop
aaa
repz
movsl
adc
lds
cmpb
insl
mul
sbb
adc
sti
sub
pop
aam
pop
hlt
inc
inc
push
and
mov
scas
data16
jae
into
cmp
mov
jnp
add
inc
outsl
or
xchg
and
mulb
pusha
mov
dec
sbb
sub
inc
les
stos
jb
gs
faddl
push
xor
iret
lea
in
sub
push
cs
jb
out
xor
decl
pusha
addr16
push
insb
repz
jl
aad
mov
jmp
insl
mov
xchg
mov
adc
imul
mov
in
adc
aad
outsb
insl
dec
mov
cmc
lahf
fiadds
mov
stos
fmull
test
mov
data16
fisubl
mov
movsb
jbe
pop
hlt
shlb
fildl
adc
pop
adc
inc
push
clc
push
jo
mov
mov
pop
mov
out
scas
test
and
std
and
movsl
leave
nop
andb
xor
jg
scas
rol
in
mov
mov
xor
iret
ret
add
push
test
jnp
arpl
outsl
sub
sbb
movb
mov
scas
mov
rcll
stc
outsl
inc
jmp
or
push
mov
xor
or
mov
or
cmp
pushw
ret
push
jno
jge
adc
or
mov
jo
test
mov
push
adc
ret
loop
mov
insl
xchg
hlt
in
insb
insl
inc
pop
js
inc
js
shrl
ss
inc
sbb
mov
dec
pop
mov
int3
dec
fdivl
fcomps
js
int3
leave
add
xchg
les
or
jle
les
jns
mov
pop
sub
jmp
mov
popf
inc
xor
push
push
pop
mov
ret
xchg
imul
popa
mov
int
popf
xor
mov
xchg
push
push
push
in
mov
ss
dec
inc
or
cmpsl
mov
mov
mov
xchg
mov
adc
call
add
scas
mov
inc
add
xchg
dec
stos
inc
mov
leave
pop
sti
lock
mov
rcrb
jp
data16
test
jecxz
push
xor
arpl
add
jecxz
test
xchg
aas
xor
xchg
jae
clc
test
sub
or
push
sbb
out
push
xor
xchg
pop
push
iret
rcr
loopne
xchg
loop
cmp
and
sub
jnp
push
xchg
pop
push
repnz
and
out
push
mov
loopne
inc
add
mov
jb
cmpsl
xor
enter
push
push
daa
in
cwtl
push
and
sub
push
jnp
out
movl
adc
iret
mov
mov
push
mov
dec
pop
lods
leave
nop
sub
dec
xor
or
sub
push
loope
pop
enter
js
arpl
mov
jle
decl
lcall
mov
imul
imul
pushf
dec
out
push
movsl
sub
clc
xor
std
pop
shlb
scas
xchg
mov
sub
cmc
movsl
pop
flds
xchg
sbb
jl
xor
mov
xor
adcl
shrb
mov
in
sbb
les
adc
cli
pop
fcoml
push
rol
sub
cwtl
pop
incb
xor
jnp
cltd
jb
andb
lahf
jge
or
add
pushf
cli
dec
fs
push
inc
jecxz
push
fildll
leave
sti
scas
out
sbb
pop
and
mul
daa
fidivs
xor
fwait
inc
mov
sbb
sub
in
xor
pop
popa
mov
fistpl
addr16
outsb
mov
xor
fsubr
call
cmpl
pop
xchg
cmpsb
repnz
or
out
xor
aam
imul
xchg
aad
mov
loop
rorl
inc
mov
loope
mov
int3
mov
dec
out
sbb
loopne
xorb
daa
pop
mov
movaps
ja
cmp
or
lea
or
iret
jg
sti
adc
xchg
xchg
scas
ss
imul
mov
jb
fcmovnu
int
pushf
dec
hlt
mov
sub
or
das
adc
insl
xchg
adc
aaa
sti
les
jnp
sbb
iret
es
stc
sahf
lea
and
add
pop
mov
adc
lret
cmp
inc
int
loop
push
int
cmp
call
jae
cmpsl
jnp
ss
push
in
test
cld
xlat
mov
loopne
ret
adc
xor
and
pusha
push
inc
or
daa
std
cmp
frstor
add
sub
clc
sti
and
xchg
outsl
cli
jge
and
sbb
adc
stos
mov
jo
sub
sub
xor
orb
jecxz
xor
sarl
inc
mov
mov
les
sbb
sub
pop
mov
dec
adc
jecxz
pop
or
mov
pop
out
loop
stos
adc
cmc
mov
dec
icebp
addl
mov
xor
inc
out
cmc
leave
mov
xchg
jmp
push
sub
sarb
add
mov
jns
push
or
sbb
or
jne
test
cwtl
and
dec
imull
mov
pop
mov
push
lret
repnz
jg
ljmp
dec
sar
mov
mov
aad
shll
hlt
mov
stc
add
cmp
lcall
aaa
fbld
mov
xor
aaa
test
out
jl
inc
add
push
pushf
bound
test
fdivr
arpl
or
cld
cmp
ljmp
sbb
arpl
xchg
sub
and
mov
nop
mov
dec
ss
sub
mov
daa
mov
xchg
xchg
out
jns
ds
pop
sbb
dec
xchg
cwtl
add
and
aad
clc
or
lcall
ret
ds
push
mov
push
es
or
sub
and
insb
int3
lds
fisubs
jne,pn
loopne
adc
inc
jnp
stos
inc
jmp
out
jne
mov
testb
cmp
lock
stc
imul
orl
loop
lahf
shll
int3
xor
dec
dec
imul
jae
mov
outsb
rcr
cmp
dec
mov
add
out
stc
imul
insl
into
shll
inc
push
add
mov
mov
cmp
std
xor
jne
push
inc
push
pop
mov
mov
sti
ljmp
and
sbb
mov
negl
cmpsl
and
outsl
push
aam
arpl
movl
ja
add
fiaddl
lret
mov
cwtl
negl
cld
rclb
or
xlat
push
sahf
mov
sub
or
push
dec
pop
cltd
fiadds
inc
adc
push
and
sub
stc
mov
std
pop
ffree
jo
xchg
inc
or
xchg
cld
and
sti
lods
adc
add
jae
movsb
push
out
push
outsl
enter
cmp
ror
pusha
jmp
cwtl
xor
mov
inc
test
mov
sbb
enter
jb
cmpsb
aam
push
push
int
add
ljmp
cmpsl
mov
and
add
jns
sbb
mov
mov
dec
repnz
push
aas
push
mov
das
cli
in
in
int3
sbb
push
pop
int
mov
sub
cmpsb
sub
fisubrs
push
sbb
cmp
sub
sub
jge
ror
pop
jmp
fsubs
lcall
inc
cmp
mov
fildll
in
movsl
je
mov
dec
sub
shlb
test
divb
ret
pop
and
adc
lcall
mov
xchg
sub
enter
and
mov
push
adc
scas
lea
mov
incl
repz
and
sbb
or
pop
shrl
xchg
pop
cli
fadd
xor
add
inc
cmpsl
pop
stc
xchg
mov
push
or
sarb
es
sub
or
je
jecxz
imul
sbb
xlat
jnp
daa
mov
cltd
hlt
push
aam
ja
iret
in
cmp
in
push
pop
inc
in
mov
daa
aam
into
xchg
call
dec
dec
popa
dec
sub
pop
shl
lods
pop
sbb
fdivrl
out
mov
sahf
cld
mov
sahf
rol
fsubrs
arpl
and
mov
cmp
jbe
adc
mov
pop
repz
bound
mov
jnp
push
xchg
cmp
inc
adc
jo
out
mov
sbb
pop
xchg
inc
cmp
hlt
push
es
mov
and
sarb
scas
xlat
dec
jge
nop
pop
in
pop
jae
xchg
mov
icebp
cmpsl
jge
stos
jno
das
pop
rorb
popf
mov
push
mov
and
lods
cli
inc
mov
push
xor
ret
mov
lret
lods
shl
push
jae
push
cli
out
ds
in
lods
xchg
iret
cwtl
adc
jecxz
test
ds
rcr
xor
mov
jge
lds
int
das
sub
sbb
outsb
xchg
mov
xchg
mov
lock
std
mov
les
jne
xor
and
xchg
sbb
mov
ret
cmp
sbb
aaa
popa
sbb
aas
ja
loop
adc
cmc
push
cmp
pusha
or
pop
rcl
aas
push
daa
js
cmp
stos
stc
daa
inc
push
sti
mov
push
xor
sub
and
mov
lock
jae
rcll
lds
fmulp
push
sub
lret
insb
xchg
mov
xor
jg
jbe
mov
sub
inc
pop
lea
popf
mov
push
mov
adc
aam
in
sub
dec
sbb
fwait
rcrb
mov
inc
jb
inc
add
mov
imul
mov
mov
shl
mov
ljmp
sbb
ds
push
andb
rorb
cmc
cmp
sub
shrl
push
icebp
fldl
ret
mov
outsl
dec
gs
out
dec
cmp
or
jae
cmp
add
dec
sbb
rdtsc
mov
adc
lea
sub
xor
arpl
pop
fstpl
fbld
inc
pop
stc
mov
in
mov
jl
adc
and
aas
mov
in
cltd
dec
fldcw
mov
jge
push
rclb
jecxz
addr16
add
fsubp
mov
add
cmp
mov
js
inc
mov
mov
ljmpw
gs
data16
jne
ret
cmp
movsb
aaa
push
mov
aaa
int3
inc
inc
cmc
mov
btr
and
adc
rcl
lea
fimull
adc
pusha
cwtl
rclb
icebp
inc
and
mov
shrb
rorl
lret
inc
or
pop
pop
push
lods
lock
or
stos
imul
mov
nop
xor
out
jle
adc
jmp
outsl
in
push
mov
xchg
xor
andl
ds
dec
fwait
sbb
out
fsubr
lret
outsb
adc
inc
adc
mov
xchg
bound
cmc
jmp
fildll
ffree
lods
js
pop
mov
and
hlt
fildll
mov
das
cmpsb
ja
add
xchg
dec
mov
lret
jb
xlat
outsl
scas
jo
mov
dec
xchg
push
add
lods
cmpsb
cwtl
mov
dec
lock
xchg
push
gs
and
jge
xor
xor
out
arpl
int3
cmp
addr16
outsl
js
es
adcb
sub
lret
add
cmpsl
clc
js
sti
add
int3
ljmp
lods
ret
mov
push
ret
and
push
inc
or
dec
xchg
inc
ljmp
insb
jnp
xchg
scas
inc
fwait
mov
lcall
xor
mov
xchg
imul
cwtl
mov
into
adc
dec
mov
or
icebp
cmp
and
out
jecxz
xchg
mov
fsubr
orl
cmp
cmpsl
lret
push
cmpsl
adc
arpl
scas
xor
inc
add
pop
or
pusha
cmp
mov
jg
mov
jnp
mov
iret
rcrl
adc
mov
fiaddl
and
sti
ja
cld
cwtl
ret
in
jno
mov
mov
nop
loope
mov
adc
test
inc
fsubl
pop
pusha
or
hlt
enter
mov
fidivs
outsb
push
jns
das
mov
jns
arpl
insl
icebp
xchg
mov
test
mov
xor
adc
das
outsb
pop
nop
push
dec
jmp
adc
cli
mov
test
jns
mov
shlb
or
sbb
pop
mov
push
ret
pop
scas
mov
push
pop
xlat
mov
xchg
repz
pop
out
cld
in
mov
cmp
imul
push
cmpsb
sbb
cmp
popa
and
mov
std
das
xlat
mov
jno
loopne
xor
out
dec
or
insb
adc
test
xorb
mov
push
mov
stos
div
or
aaa
dec
or
sbb
stc
scas
jbe
inc
push
jle
andb
stc
ss
push
arpl
cmpsl
push
push
stos
iret
jge
andl
inc
das
mov
push
nop
lods
push
inc
sbb
loop
cmc
movsb
mov
xchg
in
fucom
mov
rcrb
shll
subb
es
xor
loop
int
xchg
cmpsl
push
pushf
mov
xor
xor
adc
push
js
mov
xchg
sti
or
sbb
xchg
sbb
mov
call
enter
out
lahf
rcr
sub
in
jb
inc
cmpsl
cmp
jbe
pop
mov
loope
leave
in
and
fisubl
mov
adc
hlt
inc
movsb
xor
movsl
iret
push
insb
push
pop
rcrb
into
lcall
jne
or
inc
ds
stos
aad
std
ds
pop
mov
psrld
inc
aam
adc
lods
and
mov
loopne
popf
cmpsb
and
test
sbb
mov
testl
mov
mov
lret
xlat
test
push
add
loop
push
addr16
add
mov
cmp
orb
cltd
cmp
mov
xor
cltd
sbb
in
pop
jb
sbb
movsb
mov
push
orb
sub
loop
inc
test
mov
push
ficoms
jb
sub
xor
inc
xchg
sub
imul
cwtl
xchg
or
movb
mov
out
orb
in
push
jg
lock
roll
pop
push
test
lahf
and
xchg
fwait
adc
in
test
js
mov
iret
out
sub
jbe
cmp
in
sbbb
in
or
inc
cmp
aas
fstps
cmp
dec
lret
shrb
pop
ja
xor
cmp
inc
jl
in
push
mov
inc
sbb
aas
test
mov
lret
cmp
out
cmc
inc
jmp
mov
mov
out
push
clc
jb
xlat
mov
and
test
rcr
cmpsl
mov
movsl
idiv
xor
inc
add
inc
sub
push
adc
lods
pushf
cmpsb
mov
pop
arpl
xor
jb
lds
jno
mov
imul
les
idivb
adc
add
test
imul
outsl
add
ljmp
xchg
popa
mov
stc
int
divps
pop
cmp
dec
mov
mov
mov
cmpsl
ljmp
shlb
dec
sub
inc
jle
stos
int
fdivp
cmpsl
dec
imul
repz
loope
jo
jno
clc
push
pop
cltd
jecxz
outsl
jge
pop
jnp
adc
inc
aad
inc
fidivs
in
iret
jne
xlat
scas
jbe
xlat
popf
adc
and
sub
pusha
pop
jg
and
clc
loope
in
add
mov
mov
sahf
mov
cmp
icebp
mov
xchg
loope
ljmp
popl
xor
xchg
xchg
sahf
xor
lock
fcmovbe
push
inc
xor
push
push
aas
and
stos
sub
add
xchg
insl
pusha
and
inc
test
scas
mov
sub
jo
test
push
loop
je
jne
pop
dec
add
cli
call
ror
cmpsl
das
mov
std
ss
push
add
jp
push
xchg
popa
aam
sbb
cld
sbbb
and
sub
mov
bound
fldenv
pop
mov
mov
cmpsl
cmp
jg
lds
push
stos
test
daa
aaa
in
mov
cmp
inc
xor
orb
cmpsl
mov
outsb
dec
shl
xorl
enter
xchg
mov
jp
jo
lcall
dec
cwtl
nop
dec
push
jg
bound
cmpsb
jp
xor
mov
cs
dec
je
inc
xchg
xor
inc
sub
lcall
jns
outsb
jecxz
dec
jecxz
lds
or
in
out
fistpll
mov
push
sub
lret
inc
ret
xor
fmull
or
scas
bound
xchg
rcr
stos
inc
lret
dec
lahf
cmp
ja
nop
lea
aam
add
jl
addb
xlat
imul
push
out
cmpsb
sbb
cli
or
imul
inc
ljmp
outsb
shrl
iret
jp
push
cwtl
loopne
jae
jmp
cmpl
mov
jns
adc
dec
mov
dec
cltd
add
jae
mov
ljmp
mov
sub
cwtl
sub
inc
fisttpll
hlt
adc
cld
jl
xor
fnstcw
popf
orb
add
test
adc
xor
cmp
scas
sahf
stos
int
aad
popf
and
xorb
pop
lret
push
call
pop
xor
dec
cli
pop
pop
lock
inc
jb
jp
mov
push
fadd
cmp
adc
loope
data16
dec
add
mov
ja
int3
movsl
dec
cmp
mov
cmp
cmpsl
jmp
xchg
jp
ds
outsl
call
aam
call
or
cmpb
dec
mov
sbb
xchg
add
mov
stos
addr16
lret
ss
jge
rcl
nop
insb
adc
xor
rolb
addr16
pusha
movsb
ret
sub
sbb
jp
mov
ret
and
sub
loopne
repz
jbe
mov
fcoms
jmp
xchg
cmp
sbb
test
xor
ss
arpl
sbb
lds
push
jmp
push
mov
push
idiv
je
subb
jo
sub
in
data16
sti
xchg
outsl
outsb
mov
sub
mov
mov
stc
in
int
mov
imul
xlat
cli
fwait
add
push
push
adc
mov
fwait
or
in
into
or
dec
jo
inc
inc
mov
push
xor
jo
add
mov
ror
shrb
xchg
into
in
pusha
std
mov
push
sub
or
xchg
outsl
xchg
es
mov
lahf
int3
xchg
ja
or
insb
in
inc
sub
pop
imul
jecxz
push
add
popa
pop
and
outsb
cmp
xor
xor
push
test
lret
daa
nop
pop
jmp
cmpsb
cmp
xor
adc
pop
xchg
add
jle
xchg
push
pop
movsb
sti
fdivrp
dec
test
out
pop
rclb
add
fwait
or
jo
fadds
pop
fistl
pop
mov
dec
jle
andl
nop
and
add
out
push
in
icebp
dec
mov
dec
xchg
shll
jae
pop
addr16
int
mov
sbb
push
mov
dec
jecxz
cli
insl
loopne
aam
cmpsl
add
int3
sub
ds
mov
ret
add
jo
neg
adc
jmp
mov
inc
sub
mov
or
jg,pn
into
sti
testb
dec
or
cmp
add
pop
cmp
ret
cmp
cmpsb
jno
lock
cmp
push
addl
cwtl
test
push
cmp
sti
sub
xchg
xlat
inc
inc
cmp
jns
mov
addb
sub
ljmp
mov
bnd
addb
leave
loope
jne
sbb
xor
mov
xorl
clc
adc
sub
and
pop
lret
imul
dec
jne
pop
pop
orb
dec
sbb
stos
add
inc
adc
mov
push
lret
pop
dec
pop
push
sti
inc
cli
xchg
ljmp
mov
ficompl
inc
cmc
sahf
aaa
cwtl
pop
push
stos
mov
inc
and
xor
aaa
cld
shrb
xchg
mov
inc
dec
or
hlt
mov
sbbb
add
dec
mov
adc
xorb
dec
push
outsl
ljmp
addr16
lds
fcmovu
movsb
shr
movsb
adc
and
xchg
cs
aas
ds
xor
jl
sarl
fisubl
mov
shl
jge
jecxz
sbb
stos
addr16
inc
loope
dec
outsb
outsb
xchg
sub
dec
leave
imul
mov
mov
add
xchg
xor
insl
xchg
out
xor
xlat
pop
mov
jbe
pop
pop
lock
lds
inc
insl
pusha
cmc
int
push
movsb
add
fwait
jne
scas
sarb
cld
cltd
xor
mov
xor
xchg
das
repz
sub
sbb
push
dec
cld
cmp
inc
test
lret
push
pusha
mov
ret
pop
xchg
andb
dec
movsb
inc
addr16
jnp
lcall
xchg
adc
jmp
dec
sbb
mov
push
adc
mov
pop
cmp
aad
ret
xchg
enter
xor
ljmp
xor
shlb
mov
clc
fnstcw
cmpsl
loop
imul
mov
pop
pushf
lahf
jmp
push
xor
push
inc
das
xchg
in
add
iret
add
faddl
or
dec
in
ja
aas
jno
mul
jo
popf
xor
in
add
pop
mov
dec
popa
sbb
cmp
mov
xchg
rolb
pop
and
mov
mov
pop
mov
notl
mov
out
push
into
mov
leave
mov
xor
movsl
add
sbb
cld
in
lahf
jge
push
jns
outsb
xor
adc
outsb
and
xor
mov
sub
jbe
sub
insl
scas
lods
fwait
cld
mov
cld
mov
sbb
mov
sbb
fistl
movsb
adc
mov
or
repnz
scas
push
jne
outsb
adc
sub
add
pop
fisubrs
and
insb
lods
cmp
xor
xchg
sarb
adc
into
loope
jg
outsl
mov
lcall
addr16
push
loopne
in
push
cwtl
scas
sbb
pop
xchg
mov
pop
scas
sbb
cmp
adc
outsb
insb
adc
dec
inc
lcall
pop
stos
xchg
xchg
pop
or
test
push
test
cmc
loop
enter
push
mov
scas
jg
cmp
daa
adc
inc
jbe
xor
dec
ret
cmc
sub
mov
adc
std
fwait
stc
jbe
pop
sub
aam
cmp
push
add
sbb
dec
in
mov
xor
sahf
hlt
cmpsl
cmp
rcll
loop
and
ljmp
popa
clc
inc
rcrl
dec
inc
filds
lahf
addr16
or
jno
and
cltd
dec
popa
scas
lods
call
dec
mov
das
ret
cmp
jg
mov
sbb
inc
js
push
sub
cli
jle
pop
out
fisubrl
sbb
cmc
shrl
mov
mov
push
test
fistps
mov
mov
jbe
out
arpl
xor
sub
pop
ror
ret
leave
dec
sarl
mov
pusha
pop
sti
clc
jge
add
adc
lret
aaa
popa
jp
movsb
scas
mov
shll
pop
pushl
loopne
mov
cmp
lock
adcb
std
test
test
inc
push
pop
jg
sub
or
shr
or
mov
mov
jns
xchg
cmpsb
mov
rorb
dec
dec
out
pinsrw
movsl
jg
adc
add
cmpsb
jbe
fcomi
nopl
out
arpl
cmp
shrl
fcmovne
sti
fisubrl
inc
fsubr
mov
cmp
lcall
jns
mov
sub
stos
lock
inc
pop
push
leave
andl
cld
pop
and
jmp
dec
push
pop
add
dec
mov
scas
rorl
and
sub
repz
test
inc
jb
pushf
and
pop
xchg
jno
jp
test
imul
cmpsb
lods
and
bound
inc
cmpl
mov
xchg
or
ss
or
sbb
aad
sub
mov
cmp
fstpt
outsl
lods
cmc
repnz
mov
mov
sbb
pop
and
xchg
push
or
subl
jae
mov
pop
mov
push
fsubs
dec
std
or
jl
movsl
push
mov
movsb
xor
test
mov
xchg
add
or
addr16
les
sbb
shl
or
popf
bound
in
js
pop
push
xor
frstor
lds
xor
add
add
out
mov
pop
mov
and
movsb
lahf
insl
movsb
push
xlat
xor
dec
add
jae
sbb
cmp
rcrl
sbb
ret
push
rcrb
jns
fisttps
movlps
repnz
pusha
push
xchg
pusha
sarb
add
mov
mov
sahf
pop
mov
enter
out
andb
dec
lea
sub
or
daa
lcall
sub
xchg
adc
mov
dec
cmp
jae
cld
sub
sarb
fwait
lret
sbb
push
rcl
andb
loopne
mov
mov
daa
das
mov
cmp
imul
add
popf
jo
inc
subb
dec
shrl
and
clc
xor
subl
stc
iret
mov
pop
pop
call
nop
sub
outsl
pop
xchg
fistpl
loopne
fisubrl
in
push
mov
ret
jmp
and
push
out
cmovne
push
pop
push
mov
add
adc
jl
push
arpl
imul
mov
aaa
imulb
xorl
jns
andb
jae
loope
gs
mov
in
sub
jne
sti
ss
out
pop
xchg
inc
xor
out
call
xor
xor
jbe
insl
push
xchg
sbb
gs
add
jnp
mov
mov
orb
lods
fs
aaa
dec
movsb
jno
aad
rorl
fdivrp
fsubs
cmp
into
gs
fs
jmp
das
mov
push
fnstcw
lcall
mov
or
push
adc
arpl
sub
jmp
xor
inc
ljmp
mov
enter
push
mov
mov
xchg
aad
xchg
adc
push
aad
divb
insl
out
xchg
call
mov
jmp
cs
inc
jmp
cs
sub
clc
xor
popf
pop
call
pop
sbb
roll
sbb
sbb
pop
xor
jnp
adc
shlb
repz
fsubr
das
jno
sarb
imulb
insb
test
fincstp
or
lods
ret
sbb
xor
and
jno
inc
mov
int3
dec
sbb
jl
pop
pusha
mov
pop
inc
mov
je
aad
lds
aad
lods
jecxz
push
ret
jo
mov
mov
fs
sub
mov
and
push
jecxz
xchg
addb
loop
movsl
bound
adc
out
mov
lock
iret
out
push
mov
imul
mov
iret
and
lods
ja
inc
mov
sarl
repnz
xchg
pop
out
and
push
mov
xchg
icebp
lods
push
imulb
sbb
pop
loop
jp
fcompl
icebp
or
imul
lahf
cwtl
pop
in
and
xor
mov
or
mov
ds
push
push
fadds
add
push
subl
aad
mov
dec
loopne
int
addb
pop
insb
loope
test
jno
adc
xor
bound
xor
cmpsb
jecxz
dec
xor
in
xlat
icebp
xlat
push
aad
and
scas
or
xlat
ja
lods
sub
pop
sbb
addr16
inc
sbb
mov
lret
jb
adc
shl
push
mov
arpl
in
adc
int
cmpb
lods
sahf
pop
jl
cmp
loope
mov
xor
jge
mov
ret
into
pop
dec
push
jmp
jp
das
jp
mov
mov
dec
dec
enter
pop
lods
jnp
in
cmp
scas
mov
pushf
add
jmp
int
inc
mov
jnp
pop
mov
adc
mov
daa
rolb
mov
jmp
fstpt
add
int
stos
cmp
sarl
cmpsl
int3
xchg
imul
out
jb
cmp
lock
iret
shrl
fst
sbbl
and
xchg
adc
sbb
pop
pop
test
ret
pop
or
movsl
data16
sar
test
cmpsl
or
jmp
aad
or
lods
enter
repnz
fmul
cmp
xchg
ja
dec
gs
nop
and
out
mov
and
pop
subl
pop
ss
outsb
push
dec
lock
test
mov
icebp
sub
popf
jno
mov
lret
xor
sbbl
mov
scas
jmp
stos
cli
bound
test
ss
adc
rclb
push
aas
push
push
adc
sbb
lret
in
xor
mov
xchg
fcom
adc
cmp
jge
lods
pop
cmc
je
xchg
clc
std
lret
inc
ret
jne
mov
out
xchg
sub
xchg
int3
jle
out
pop
xchg
push
int3
shrb
and
adc
mov
mov
mov
ja
out
test
cld
dec
jne
cmp
aam
adc
mov
push
addr16
cs
pop
push
stos
sub
xchg
and
add
stos
jno
dec
jmp
enter
push
jnp
jp
mov
dec
push
aaa
or
xor
das
int
sbb
inc
pop
out
push
add
cltd
sub
das
and
cmp
xor
xchg
icebp
lret
mov
outsb
pusha
jo
ror
cmp
push
xchg
mov
or
lret
pop
stc
int
push
xchg
es
push
lret
adc
fs
pop
aas
push
shrl
xor
sti
test
push
je
ja
addl
mov
inc
jmp
ds
adc
dec
sbb
nop
adc
popa
fistps
inc
cmp
popa
mov
shrl
cltd
stc
jge
out
xor
je
loopne
fbld
pop
push
and
cmp
push
sarl
stos
sbb
and
pop
jg
ror
arpl
mov
lods
in
add
call
addr16
fxch
jno
adc
das
push
inc
clc
fildll
mov
test
rorb
sbb
xor
hlt
jmp
hlt
mov
aas
dec
lods
arpl
notl
inc
jno
inc
loop
testb
cwtl
or
mov
pop
loope
adc
push
pop
stos
arpl
fists
cld
sub
sbb
mov
mov
popa
std
movsb
cmpsb
fcmovb
inc
pop
mov
push
cmp
call
subl
xchg
dec
dec
pop
push
test
imul
clc
sbb
pop
pop
push
or
in
ja
jne
aad
rolb
fnstsw
mov
std
stos
mov
std
push
push
sbb
mov
sti
test
mov
aas
roll
ficomps
fs
jmp
cmp
lahf
aad
orl
mov
test
mov
xor
push
xchg
xor
cltd
nop
mov
testb
and
cmp
iret
xchg
das
mov
mov
pop
rcll
adc
and
shlb
sub
jmp
arpl
insl
add
fnstenv
outsl
fcomps
scas
call
cld
push
pop
fcmovne
sub
xchg
jo
adc
adc
and
sbb
ds
int3
mov
and
in
cmc
xorb
cmp
xchg
jecxz
daa
push
sbb
adc
or
rcl
cli
push
add
loope
jle
pop
and
loop
add
ret
sub
mov
sub
dec
mov
mul
mov
sbb
jne
cmp
and
xchg
or
andb
bound
xorb
push
notb
scas
jo
rorl
push
mov
lods
loope
push
incb
mov
fs
aam
in
xchg
mov
lods
push
or
xchg
stos
inc
add
push
cmp
fldl
cmp
adc
xchg
cli
loop
sarl
add
sub
xchg
ret
daa
jns
fs
dec
jle
push
pop
movsb
test
add
loope
adcl
pop
pop
jae
xor
rol
fidivrs
sub
pushf
lret
xchg
imul
inc
or
lret
and
inc
mov
xchg
adc
out
xor
add
sbb
mov
and
jo
div
sub
mov
stos
pop
pop
dec
pop
lods
stos
sbb
push
jns
push
leave
xchg
sub
imul
dec
push
mov
sbb
ror
enter
mov
ret
pop
xchg
aas
mov
xor
mov
pop
hlt
push
dec
mov
mov
jne
or
pop
inc
add
or
pop
cmp
add
or
inc
and
cmp
push
in
or
sbb
jmp
inc
dec
lcall
out
adc
sti
cs
mov
sub
lret
dec
dec
mov
or
repz
das
sbb
or
je
adc
or
lahf
sbb
adc
adc
xor
clc
int3
adc
mov
mov
jg
cli
iret
loop
scas
cmpsb
pusha
mov
inc
daa
cmpsb
cmp
jbe
mov
sti
idivl
mov
lahf
repnz
pop
dec
ret
sbb
in
popf
adc
cmp
xchg
xchg
xor
jbe
lods
inc
cmp
cld
test
mov
and
sbbl
out
push
test
jo
loope
imul
cld
int
loope
mov
jo
icebp
mov
dec
nop
inc
fsubl
enter
mov
pop
sub
xor
call
shll
and
lds
addr16
frstor
add
mov
test
jmp
mov
jns
mov
dec
add
push
outsl
sbb
aas
add
loope
std
jmp
test
shr
ljmp
bound
lods
push
lcall
pop
xchg
arpl
roll
pop
insb
dec
inc
dec
pop
sub
cmp
aaa
mov
xchg
jb
shll
and
test
ja
xchg
loop
dec
mov
cs
stos
lret
sbb
cmpsb
sbb
jne
sbb
in
dec
xor
loopne
sub
pusha
push
jg
mov
daa
push
inc
jp
sbb
inc
cmpb
psllq
mov
out
mov
icebp
inc
xchg
pop
fwait
popf
mov
adc
shll
or
outsb
add
jmp
pop
ret
arpl
cmp
adc
push
lea
cmp
fmull
hlt
call
adc
mov
xor
lret
push
or
mov
aaa
daa
add
and
and
outsb
insl
icebp
jno
imul
xchg
scas
jnp
xchg
adc
xchg
add
sub
int
icebp
outsl
scas
lds
or
or
cmp
into
arpl
pop
lret
jmp
rep
sub
and
xchg
lret
daa
test
stos
mov
sbb
out
xor
clc
fsubrl
add
packssdw
loop
icebp
push
jl
dec
xchg
lahf
add
outsl
lods
mov
push
sbb
add
scas
xchg
lret
lahf
lds
outsb
daa
fcmovnbe
mov
mov
stos
ficoml
mov
in
sub
fldcw
and
add
push
cmp
adc
pop
cmpsb
cmp
mov
ja
das
push
gs
sub
inc
push
inc
das
add
std
fwait
int
ud1
sbb
in
insb
mov
and
sbb
sbb
movl
dec
out
outsb
test
add
push
or
loopne
and
shr
aam
push
or
push
dec
mov
push
inc
mov
mov
les
out
cmp
pop
imul
enter
das
int3
mov
ret
dec
loope
mov
push
mov
xchg
mov
fsubl
popf
ret
push
fldt
bnd
push
add
psubusw
cli
nop
pop
out
jge
cmp
sub
loopne
xchg
outsb
xor
mov
stos
ss
cmc
in
xor
stos
xchg
dec
dec
fmull
pop
jns
sbb
sub
push
mov
inc
mov
inc
inc
adc
and
bound
and
mov
hlt
inc
lret
xchg
sarb
sbb
jle
icebp
cmp
adc
nop
mov
sarl
pop
cmp
push
fistpl
pop
pop
jl
and
xchg
xchg
test
ret
push
shlb
mov
daa
outsb
cmpsb
decl
push
sub
outsl
stos
roll
add
jns
mov
stos
and
shrl
rolb
enter
sub
jmp
jmp
jns
jne
aaa
in
inc
mov
sub
push
cli
shr
ret
scas
dec
add
sub
push
rol
cmp
fsubl
and
mov
mov
lcall
neg
jle
dec
push
es
mov
out
iret
outsl
addr16
test
fwait
mov
dec
adc
inc
sub
jae
out
or
stc
in
out
mov
jns
das
repz
pop
insl
frstor
xchg
xchg
fldcw
or
mov
inc
lea
mov
shll
les
js
xchg
jae
mov
push
push
cli
icebp
add
xchg
lods
loope
bound
testl
fidivrs
jae
les
rcr
fsub
loopne
inc
inc
insb
dec
fcomip
xchg
imul
jns
mov
jge
adc
popa
and
or
jns
inc
inc
sbb
notl
rcr
sub
daa
mov
lret
cmp
xor
aas
test
inc
inc
xor
or
sub
mov
es
int
mov
shrb
jl
faddl
adc
xchg
enter
loop
lahf
cmp
cmp
pop
gs
adc
adcl
lock
xchg
inc
cli
loope
xchg
mov
push
dec
and
jecxz
dec
insl
xlat
std
in
rcrb
gs
push
mov
mov
fwait
inc
push
pop
sub
xchg
in
sub
and
outsl
in
jmp
push
lret
std
xchg
pop
idivl
outsb
in
test
push
lret
cmp
sub
lea
xchg
push
cmpsb
pop
xchg
in
or
ret
fcmovne
xor
es
adc
add
loope
xor
or
clc
lds
leave
cmp
pop
xchg
adc
scas
in
cmp
sbb
int
int3
push
gs
stos
insl
dec
mov
dec
lcall
jb
repnz
sbb
repnz
loopne
cmpsb
loopne
ljmp
add
pop
xchg
sub
xchg
cltd
sub
cltd
push
pop
aas
xor
sub
jp
or
iret
fstl
cmpsb
int3
outsb
or
mov
jne
mov
jmp
inc
mov
push
out
mov
add
outsl
push
std
or
sub
xchg
scas
scas
mov
mov
insl
add
or
jo
xlat
out
scas
movsb
test
into
cltd
mov
addb
push
sub
popf
push
cmp
mov
in
push
daa
inc
sbb
in
xor
lcall
cmc
std
sbb
outsl
mov
pop
xor
push
scas
sub
sbb
hlt
out
mov
xor
shll
add
insl
xor
cli
stos
jg
adc
daa
sub
gs
pop
fwait
mov
arpl
inc
repnz
mov
lods
mov
lea
fnstcw
test
aaa
adc
mov
sbb
gs
stos
decb
rcll
out
mov
pop
stos
push
sub
xor
or
sub
sub
jecxz
cmpsl
cmpsb
add
adc
lahf
dec
and
sbb
nop
test
xlat
ficoml
jae
jge
or
push
dec
in
or
adc
push
inc
sbb
inc
test
dec
mov
in
imul
jb
aam
scas
int3
mov
xchg
pop
inc
sbb
mov
mov
cmp
add
and
add
pop
fildll
sbb
fdivs
jae
shr
mov
in
mov
pop
adc
xchg
mov
lret
pop
adc
jl
scas
ret
push
mov
add
andl
and
jbe
test
jb
cs
dec
pop
jp
add
fwait
push
in
rolb
cmc
dec
push
testl
push
and
sbb
addr16
sub
addr16
mov
cmp
scas
xchg
or
jmp
shlb
clc
jae
adcb
stos
imul
jnp
mov
push
fadd
repz
jbe
add
cmp
rorb
pushf
or
in
pusha
cld
sbb
mov
aam
scas
inc
in
jnp
and
rcr
xor
sbb
mov
xchg
push
test
jle
test
addb
mov
jnp
les
sbb
pop
int
sub
loopne
xchg
pushf
imul
add
xor
mov
lret
les
popf
icebp
gs
xchg
dec
cmpsl
adc
sbb
js
push
ds
adc
cmp
mov
fldt
negl
jo
cli
stc
fiaddl
lret
xchg
jmp
push
repnz
xor
adc
mov
lods
rcrb
xor
leave
xchg
xchg
mov
insb
outsl
mov
repnz
jno
not
jl
hlt
mov
xchg
xchg
mov
mov
call
repz
fsub
mov
ds
xchg
enter
rcrb
repz
add
mov
dec
pop
jae
arpl
rorl
std
fwait
cs
or
dec
jno
xchg
push
pop
popf
aam
jp
lea
cltd
popf
lcall
int3
cmp
add
pop
insb
mov
insb
shrl
pop
test
out
sub
cmp
xor
sti
out
dec
add
cmp
std
rcl
fsubrs
adc
xrelease
push
dec
sarl
adc
fistps
shll
mov
aam
rcrl
test
pop
adc
addl
adc
lret
cmp
std
xorl
bound
adc
gs
jle
out
mov
js
in
sbb
ds
shlb
negl
xchg
les
pop
push
dec
test
mov
mov
add
repnz
mov
mov
mov
lea
clc
movsb
test
mov
or
arpl
pop
adc
test
in
lods
movl
add
dec
jb
dec
mov
shll
in
sub
xchg
pop
inc
or
fdivl
insl
ljmp
popf
cmp
popa
and
imul
std
les
sub
pop
sub
jmp
push
xor
rcr
push
scas
ljmp
mov
popa
sub
int3
sbb
std
cmpsb
test
dec
je
rolb
jo
xchg
lods
xchg
push
adc
aas
fsubp
call
mov
mov
out
aad
jbe
add
outsb
sbb
outsb
ret
jge
pop
mov
call
adc
pop
mov
mov
test
pop
sub
popf
jle
lgdtl
mov
jmp
adc
shrl
test
pushf
sti
hlt
mov
shlb
sub
inc
dec
mov
jmp
nop
push
cltd
arpl
ret
fsubs
xchg
and
pushf
jg
popf
adcb
cwtl
call
mov
push
push
dec
pop
cs
add
cmp
out
inc
jl
pushf
lods
push
mov
mov
push
sub
pop
jecxz
pop
lcall
jle
and
pop
xorb
mov
lods
jae
adc
xchg
test
adc
cli
into
int
test
aas
jl
pop
mov
clc
inc
nop
outsb
mov
and
or
cmp
leave
test
leave
inc
mov
cli
xor
cs
or
or
scas
test
cmp
or
inc
cli
sahf
inc
loopne
test
rorl
and
and
std
mov
push
in
dec
mov
cld
xchg
push
rcl
fistps
xor
inc
arpl
inc
add
push
inc
rclb
iret
outsb
xchg
mov
sub
adc
jae
mov
ret
mov
pop
sub
loope
adc
in
daa
or
cmc
shrb
das
push
jns
aam
sub
aas
imul
jge
ret
jp
repnz
repz
subb
outsl
jbe
rcll
das
adc
xor
pop
jp
dec
pop
and
pusha
out
sbb
lds
shrl
push
push
lret
or
inc
scas
mov
jb
faddp
mov
push
repz
mov
adc
fisubrs
adc
sub
pop
fcomps
xor
add
es
mov
dec
repz
sub
jl
push
rcll
std
mov
dec
arpl
pop
cmp
out
pop
mov
cmp
daa
ja
addl
pusha
sbb
push
xchg
lahf
pop
pusha
arpl
mov
jbe
sbbb
push
insl
pop
sub
in
jg
mov
mov
pop
xchg
arpl
ljmp
cmp
out
ret
movb
hlt
inc
enter
aas
in
loopne
mov
loope
jp
sti
jg
arpl
cwtl
cli
mov
stos
push
push
repz
cmc
sti
sbbl
push
imul
lret
pop
test
mov
aaa
pop
gs
cld
subb
mov
test
sub
push
xor
and
popa
mov
push
cmp
cmp
iret
fmul
aam
mov
jno
jnp
mov
mov
cmp
sbb
mov
cmp
cmp
out
jmp
aas
push
imul
icebp
push
stc
xor
xchg
dec
jl
push
pop
sbb
sarb
iret
dec
sbb
clc
addl
js
test
pcmpeqw
stos
mov
lods
push
xchg
pushf
imul
or
adc
and
push
pushf
xchg
fbld
daa
jo
out
pop
or
and
pushf
leave
and
fwait
and
orl
pop
in
jge
shrb
mov
stos
cmc
or
or
and
aaa
mov
addb
adc
insb
sub
in
les
shl
sti
hlt
jecxz
and
and
aaa
mov
pop
sub
bound
inc
sbb
dec
inc
inc
mov
pushf
int
push
aam
pop
or
xchg
add
cwtl
add
outsb
ljmp
insl
shl
sub
mov
aam
fsubs
add
mov
notb
dec
and
addr16
add
mov
rol
clc
mov
leave
mov
mov
addl
push
cmc
pop
inc
loopne
testl
xchg
jecxz
xor
inc
jmp
or
arpl
push
add
adc
jl
sar
daa
faddl
and
fdiv
mov
flds
xchg
or
inc
jge
mov
xchg
and
fsubrp
ds
push
sbb
dec
sub
sub
inc
push
inc
xchg
je
imul
jge
sub
scas
xor
ljmp
cmpsb
mov
test
pop
add
mov
aas
dec
add
adc
dec
add
adc
and
rcrl
or
dec
jle
movl
sub
mov
mov
sub
adc
jbe
inc
shll
ret
or
cmp
mov
bound
cmp
out
mov
xchg
out
and
push
adc
cld
aad
jl
mov
push
mov
scas
rcl
shlb
loopne
stos
fstp
push
nop
js
mov
das
dec
push
and
xor
in
icebp
jge
mov
jle
xor
test
das
flds
jge
cmc
dec
mov
inc
fucom
out
pcmpeqw
imul
in
jno
push
dec
testl
pop
jge
or
hlt
lods
mov
sub
jp
and
inc
mov
and
adc
lods
or
mov
cmp
or
cmpsb
sub
cmpsl
pop
data16
iret
and
jl
or
iret
sub
jo
das
out
sbb
mov
outsl
lds
leave
jno
and
shll
push
push
mov
mov
pop
pushf
cmp
outsb
sub
or
dec
sub
fiadds
mov
daa
insl
push
insb
loope
cs
jmp
pop
mov
data16
ret
rorb
int3
dec
int3
fsubrl
rcl
adc
outsl
outsb
movsb
jne
movsb
and
bound
cs
sbb
mov
jmp
mov
hlt
or
adc
jecxz
je
jmp
add
call
and
pop
std
test
popf
aaa
mov
xchg
movsb
and
and
mov
mov
subb
adc
insl
rcrb
pop
ficompl
inc
jge
test
dec
jne
bound
or
and
jecxz
jns
popa
scas
fs
and
dec
cmpsl
loopne
sub
cltd
cmp
sub
or
jp
dec
sub
mov
and
dec
pusha
xlat
rcrl
fwait
xchg
add
bound
fiaddl
imul
stos
dec
xchg
dec
xlat
jns
sub
inc
jo
sbb
xor
cli
sbb
pop
pop
sarl
adc
clc
sub
cld
inc
jbe
andl
stos
fnstcw
cmp
cmp
sub
shll
sbb
lock
mov
cmpsl
ret
invd
xchg
mov
mov
adc
nop
pop
jno
mulb
or
movsl
jmp
xor
cmpb
sti
insl
hlt
int3
movups
movsl
push
ret
cwtl
outsl
subb
sbbl
pusha
push
jmp
inc
mov
in
or
sbbb
gs
jno
ljmp
sub
in
xor
out
js
cmp
xchg
shlb
jb
xor
xor
mov
fsubrl
dec
pop
subl
pop
jnp
xor
cmp
lods
mov
inc
aad
int3
mov
xor
outsl
or
movq
adc
call
inc
or
sbb
aam
sub
and
ss
loop
mov
mov
loope
push
mov
insb
sbb
pop
hlt
test
jne
adc
fwait
gs
lahf
mov
mul
hlt
jb
pop
into
sbb
pop
push
pop
ja
or
xor
jno
imulb
dec
push
mov
add
clc
cli
mov
sbb
mov
xchg
cld
lret
xchg
dec
adc
adc
sbb
xchg
pushw
jmp
jmp
pop
fbld
mov
daa
jp
mov
aaa
inc
ja
rolb
sbb
out
into
inc
fnsave
or
test
hlt
inc
test
lock
int3
mov
ret
mov
mov
jo
mov
mov
lea
mov
fdivp
int3
adc
jae
pushf
adc
shrb
jmp
or
inc
mov
mov
stc
lock
call
sub
cmp
sahf
enter
fists
je
in
cmp
cmpsb
mov
adc
bound
lods
xchg
fistpll
cwtl
push
or
xchg
jns
xor
movsl
xor
push
inc
sbb
in
shl
push
add
dec
jecxz
add
pop
iret
pushf
xchg
xchg
mov
pop
js
push
dec
push
addr16
mov
shrb
xchg
cli
aad
fisubl
fisubs
inc
pop
loop
lret
aas
in
loope
pop
mov
loope
je
stos
mov
cs
fndisi(8087
inc
mov
inc
aad
jmp
inc
adc
je
mov
outsb
push
adc
jbe
adc
int
es
xchg
gs
mov
push
sahf
or
mov
xor
jo
pop
add
hlt
sbb
cmp
inc
push
mov
dec
mov
lds
cmp
sub
je
jp
dec
repz
pop
addr16
jp
hlt
cmp
jmp
insb
clc
sub
cmc
and
pop
clc
pop
sbbb
push
data16
scas
adc
es
loopne
cs
xchg
cmp
mov
aam
pushf
nop
stos
loop
mov
enter
test
xor
jmp
and
in
adc
xchg
xor
jbe
fcmovbe
pop
mov
mov
fucomi
cmp
imul
fcompl
mov
outsl
leave
xor
cmp
push
outsb
push
ja
push
std
mov
sbbb
lea
popa
cwtl
add
out
cwtl
cmp
and
dec
lea
push
xchg
ror
iret
fcompl
xor
sti
cmpsb
xchg
pop
lret
pop
je
arpl
popf
out
pop
xor
jecxz,pn
jecxz
repz
ret
xorl
data16
pop
ljmp
sbb
push
in
arpl
fcompl
jmp
xchg
sub
dec
xlat
mov
add
stos
jp
cltd
lea
push
jecxz
adc
negl
test
xchg
les
scas
cmp
mov
mov
out
int3
jl
jns
sub
jbe
fwait
scas
add
inc
insl
nop
add
and
push
cmp
add
xchg
mov
or
sarl
mov
sbb
dec
inc
push
aaa
xor
xchg
cmp
xor
ds
jle
sub
cmpsl
push
cmp
push
or
or
xchg
inc
adc
add
jp
shlb
mov
dec
adc
sti
daa
rcrl
or
push
data16
jns
sub
push
xchg
jge
rol
push
cmc
jg
jge
xor
jns
pop
inc
sub
dec
jmp
in
xchg
sbb
scas
test
xlat
fs
sbb
jmp
daa
jmp
ret
jns
push
xchg
mov
cmp
nop
add
loope
movb
or
and
inc
dec
cmp
sub
daa
jo
aas
int3
dec
mov
mov
xor
xor
mov
pop
add
loop
pushf
dec
ss
in
lahf
addr16
xor
pop
testb
jg
adc
jns
jo
ja
pusha
xor
out
cmp
dec
cld
jecxz
rol
arpl
add
xor
pop
lods
test
cmp
adc
in
ljmp
xchg
jns
jnp
dec
addr16
leave
fwait
xor
dec
push
test
add
mov
mov
mov
loope
dec
push
pop
and
adc
aam
dec
pop
cmpsb
mov
jbe
jne
lods
and
dec
pushf
sub
adc
fsubr
adc
cmp
rorb
mov
jne
cmp
insb
mov
pop
push
dec
fwait
insl
insl
fdivr
sub
push
stos
imulb
stos
pushf
jle
and
imul
les
jbe
push
or
sahf
mulb
and
adc
and
rcrl
fwait
icebp
mov
add
std
not
in
dec
in
loopne
das
mov
xor
je
stos
and
lret
xchg
push
xor
adc
ss
jl
or
fsubrl
pop
inc
fimuls
je
add
xor
push
dec
orl
add
enter
add
mov
pusha
iret
adc
fildll
cmp
popf
icebp
jge
dec
out
stos
enter
pop
jge
enter
adc
mov
sbb
sbb
xchg
and
mov
and
lods
mov
out
jb
in
xor
in
fwait
lcall
inc
inc
icebp
push
fisttps
xlat
dec
repz
out
test
inc
shl
test
push
fs
popa
fsubl
jmp
cmp
push
sbb
mov
xor
lock
inc
xlat
xor
jg
or
mov
sahf
push
bound
inc
xor
xor
movsb
stos
gs
pushf
cmpsl
push
dec
fwait
test
xchg
in
aam
pminsw
mov
lea
and
jle
or
mov
pop
add
mov
or
sbb
cmp
or
mov
push
push
xchg
out
or
pop
xchg
fstp
gs
iretw
mul
adc
cwtl
sbb
icebp
or
sbb
into
popa
hlt
cmp
into
sub
inc
or
fsubrs
cmp
xor
test
loopne
sbb
cmc
lret
pop
mov
int
and
jne
mov
pop
aas
jp
cmp
or
cld
xchg
pop
pusha
mov
ljmp
pop
movsl
cwtl
pop
jle
cmp
or
xor
dec
test
out
cltd
subl
or
adc
sbb
jo
shlb
mov
mov
mov
push
int3
fdiv
jle
loop
icebp
sub
popf
mov
sbb
sbb
hlt
clc
dec
mov
andl
jbe
add
addr16
adc
shrb
cmpsl
hlt
test
stos
adc
mov
mov
repz
inc
add
or
cmp
aas
aaa
fwait
push
lret
push
mov
je
fs
cmp
pop
pop
sbb
cmpsl
push
mov
push
pop
mov
xchg
pop
pop
inc
push
xor
xor
pop
loop
test
outsl
push
add
int
mov
mov
sti
mov
sahf
test
and
sbb
in
adc
jge
or
psubusw
mov
mov
dec
mov
xor
in
and
xor
and
popf
xchg
mov
push
es
stos
xor
sbb
out
mov
jns
cmpsl
add
in
sub
or
sbb
push
orl
jmp
sub
adc
pop
inc
insl
or
lock
inc
jne
xorb
rol
mov
xor
mov
jne
fisttpll
ret
push
mov
idiv
cmpsl
insb
jbe
mov
push
int3
adc
test
cs
test
adc
cmp
hlt
scas
push
mov
clc
pop
and
or
loope
and
mov
lock
sbb
scas
dec
push
pop
xchg
dec
into
fs
lcall
pop
rclb
jne
lods
shl
jecxz
ja
pushf
in
inc
mov
adc
sub
mov
add
jbe
out
inc
cmpsb
rcr
push
sarl
sbb
push
push
test
fmul
cmp
jle
sbb
int
jle
push
xchg
mov
int3
andb
mov
xchg
inc
roll
lea
xor
cwtl
mov
cmc
jp
loope
jbe
loopne
pop
out
jae
inc
mov
out
sbb
sbb
lods
adcl
jno
pop
pop
add
inc
cmp
pop
test
inc
or
mov
mov
push
std
inc
pop
dec
adc
push
adc
mov
es
pop
jl
mov
mov
or
std
pop
imulb
in
fsub
mov
add
stos
hlt
fstpt
dec
lcall
mov
sub
jle
iret
movsb
cmp
cs
pop
sarl
mov
mov
scas
sbb
loopne
loop
mov
int
cld
shll
mov
dec
sub
ss
sub
cmp
xor
push
adcb
jl
repz
andb
or
mov
cmp
cltd
test
add
pop
insb
add
scas
arpl
push
jp
je
leave
jbe
xchg
adc
jecxz
ljmp
aam
imul
jle
push
fcmovnb
or
loopne
push
mov
and
inc
rcl
xor
orb
aaa
jns,pn
xchg
cmp
or
flds
icebp
mov
push
pop
lods
insl
jmp
and
mov
mov
loope
jb
adc
sbb
into
jb
push
pop
mov
mov
jp
mov
mov
fldl
gs
pop
adc
push
stc
dec
inc
mov
sub
loop
out
push
jle
push
add
sub
push
mov
mov
leave
rcll
sub
cmp
sbb
mov
mov
cld
cmpsl
dec
pop
jmp
adc
xlat
lock
cltd
mov
push
push
push
cmp
sub
adc
repnz
xor
fwait
loopne
jae
cmp
popa
adc
lods
xchg
dec
gs
or
negl
mov
cmc
or
cli
pop
xchg
add
push
test
cmc
pop
rep
imul
scas
mov
push
aam
scas
push
inc
xchg
and
popf
jp
and
xor
push
cmp
sub
sbb
xchg
imul
cmp
mov
add
inc
ja
sub
or
mov
aaa
pop
in
xor
cli
pusha
and
sti
call
stos
shll
pop
xchg
fwait
xor
mov
loope
fistl
inc
mov
aad
inc
hlt
data16
push
lods
js
sbb
pop
jmp
dec
mov
jo
xlat
jmp
stos
test
and
ficoml
jno
test
cmp
sahf
add
xor
push
dec
pop
pushl
test
out
pop
pop
ljmp
mov
add
sub
dec
andl
and
sub
inc
mov
cmp
xlat
add
mov
rcrb
or
mov
faddl
cmp
inc
add
dec
push
data16
mov
test
fstpl
insl
cs
out
or
fstpt
sbb
mov
in
jbe
sahf
jae
push
sub
mov
ss
mov
es
add
xchg
pop
aad
add
pop
lds
fsubr
jg
cmp
jmp
andl
mov
sub
sbb
mov
xchg
pop
sub
aas
jno
and
fsubl
js
jnp
push
mov
or
stc
add
aaa
xchg
or
aas
cmovp
loop
jmp
cmp
lods
jo
xor
je
pop
jns
clc
sbb
fwait
icebp
inc
lock
mov
in
jbe
push
cld
idiv
jne
lahf
lcall
loope
ret
push
mov
xor
pop
es
push
addr16
add
shrb
push
push
push
fidivs
mov
cmc
pop
mov
lods
clc
ja
jnp
or
adc
inc
adcb
pop
lahf
xor
xchg
add
sub
fwait
jae
in
out
ja
leave
mov
repnz
das
lods
and
mov
stos
out
insl
inc
mov
out
mov
and
cmc
sbb
or
xchg
fwait
ret
fcomps
xorl
jne
cmpsl
pop
cmp
dec
inc
adc
leave
lret
inc
jp
mov
xor
mov
rcrl
sbb
xor
jo
or
jb
cld
jmp
cmp
mov
xchg
es
subl
mov
xor
out
xorl
dec
pop
aam
xchg
test
movsl
xchg
mov
adc
xor
mov
xchg
lods
int
cmp
pop
push
rorb
fsub
mov
mov
fistl
lcall
xchg
and
out
scas
jg
aam
mov
adc
cmp
inc
xor
lods
xchg
leave
or
cmpsb
cmp
ja
jl
cmp
jecxz
xor
cli
pop
xor
popf
push
sahf
mov
jecxz
lcall
int3
cli
fs
sahf
or
jns
mov
mov
add
addl
sbb
jecxz
cld
gs
cmp
lret
and
rclb
sbbb
dec
sub
cli
add
dec
je
and
xor
inc
mov
out
in
xor
popf
mov
and
fisttpl
scas
xchg
syscall
xchg
jge
push
jb
sub
leave
sub
addb
mov
fisttpll
mov
sbb
or
rorl
push
pushf
pop
push
mov
inc
into
xchg
addr16
dec
jb
ret
pop
and
cmpsl
jl
mov
xchg
add
test
xchg
int3
cmpsl
nop
mov
das
lcall
xchg
in
lea
je
in
pusha
aad
lahf
mov
lret
sbb
add
pop
outsb
jbe
cmpsb
push
ret
aaa
mov
repnz
adc
sub
xchg
lcall
dec
int
jmp
adc
inc
and
int3
dec
arpl
xlat
add
clc
pushf
fwait
sti
data16
shr
push
ret
shll
xor
neg
xor
mov
dec
in
ds
aad
sbbb
jl
ret
inc
inc
or
push
test
fimuls
das
lock
add
jnp
std
frstor
mov
ficompl
aas
dec
fldl
clc
mov
dec
pop
sbb
mov
jecxz
push
mov
sti
inc
xchg
push
ffree
pop
and
out
daa
in
hlt
das
dec
xor
imul
dec
adc
mov
xor
std
roll
xchg
pop
mov
xchg
mov
ss
aam
xor
in
stc
mov
cmp
sub
xor
and
add
pop
jmp
jmp
xor
cmp
and
test
mov
dec
or
fs
shlb
out
adc
adc
mov
loop
dec
xchg
push
mov
xor
sbb
cld
aam
arpl
pop
test
test
mov
mov
int
pushf
xchg
dec
scas
hlt
jno
mov
push
cmp
popl
sbb
in
pop
clc
mov
lea
cld
push
lock
pop
les
dec
pop
lcall
mov
stos
loope
mov
mulb
mov
sahf
sarl
and
xchg
cld
or
insl
push
dec
fwait
and
ror
mov
and
les
sti
or
dec
aas
jnp
js
mov
xchg
insl
sti
lcall
adc
xchg
and
sbb
sbb
xchg
jno
enter
movsb
into
push
xor
xchg
add
fwait
popf
sub
push
jl
xor
push
test
push
mov
adc
insl
jb
or
jnp
dec
rcll
push
push
cld
ljmp
fisubl
mov
xor
cmpsl
bound
mov
lret
ror
in
pop
add
dec
mov
xor
movl
test
dec
push
jmp
cmpsl
les
mov
mov
and
mov
ror
pop
inc
je
adc
push
pop
jmp
stos
or
aad
jmp
mov
int3
mov
mov
cld
testb
push
lcall
xor
mov
clc
xor
dec
pop
imul
xlat
xor
pop
shrl
inc
cltd
test
push
scas
shrl
xchg
mov
mov
repnz
stos
mov
jg
jns
mov
fstpt
push
xor
xchg
lds
pop
rcr
xor
mov
rorl
lods
mov
scas
orl
sbb
mov
mov
inc
xchg
xchg
xchg
ror
ffreep
movsb
mov
ret
mov
or
mov
loop
push
mov
shrl
xchg
inc
dec
dec
cmpsl
shrb
pop
out
mov
adc
adc
sub
sbb
rcrl
inc
add
in
sub
insb
adc
lret
mov
cmc
pop
xchg
adc
push
pop
jno
pop
push
arpl
imul
pop
ljmp
add
pop
push
or
adcl
in
inc
adc
cmp
mov
test
lds
sbb
outsb
cmpsb
sbbb
mov
xor
pushf
iret
sub
mov
cmpsb
mov
cwtl
in
out
xchg
incb
fisubs
call
icebp
cmpsb
fnstsw
repnz
lret
add
popa
fdivrl
jnp
dec
in
push
ja
dec
xchg
fistl
inc
call
cmp
sbb
cmc
popf
subl
xchg
cmp
loope
cmp
jae
adc
fisubs
loopne
sbb
sbb
mov
movsl
mov
xor
and
and
jae
pop
repnz
sub
mov
cmpsb
mov
pop
repnz
mov
cmpsl
adc
jg
adcl
jno
mov
dec
enter
or
and
jnp
test
nop
outsb
fwait
pushf
add
pushf
and
dec
adc
xlat
sbb
fimuls
adc
test
cmp
insb
fs
into
mov
pop
jl
jg
icebp
cmpb
sub
xchg
pop
repnz
and
cmp
addr16
xchg
test
adc
pop
addl
pop
xor
xchg
mov
ds
sub
mov
das
sbb
pop
dec
decb
inc
jmp
pop
cmpsb
in
and
int3
or
sub
int3
jnp
mov
adc
cmc
push
addb
lahf
pop
or
outsb
xor
pop
outsb
arpl
scas
fnsave
ja
pop
xrelease
scas
pop
insb
lods
pop
push
push
movb
cld
fwait
sbb
push
add
mov
xchg
fnstsw
aaa
rcll
mov
insl
ret
mov
in
adc
mov
cmp
mov
cmp
aad
mov
stos
pop
sub
out
ja
daa
push
outsl
addr16
fidivrl
imul
pop
packssdw
ljmp
rcrl
fcomps
ret
cmp
fdivl
cltd
push
mov
cld
xor
mov
mov
mov
out
rcrl
or
mov
int
and
call
adc
dec
jno
fidivrs
fwait
cmp
lahf
repz
dec
repnz
imulb
cwtl
sub
dec
cltd
movsb
mov
jp
test
flds
inc
push
xor
mov
cmp
xchg
mov
jge
das
imulb
and
inc
dec
pop
inc
stos
mov
fnsave
inc
add
pop
iret
test
add
push
subb
mov
lods
mov
push
push
test
pop
inc
push
sub
mov
mov
and
adc
rcrb
mov
inc
imul
inc
movsl
jle
lret
pop
push
in
or
inc
cs
cmp
fisttpll
stos
js
popa
js
sar
cwtl
push
inc
fdivl
push
in
mov
cmpsl
mov
fdivs
filds
movsl
push
imul
push
lret
add
cmc
mov
xor
jle
mov
add
iret
pop
cmp
in
xchg
add
push
lret
push
sahf
adc
xchg
mov
pop
and
sub
loop
pop
scas
dec
xchg
xor
mov
aaa
in
mov
jnp
lods
or
fs
scas
cmc
addr16
sub
loope
or
dec
xchg
out
xor
fisubrs
ret
mov
aam
sub
shll
scas
push
cltd
cmp
add
cld
sub
call
cld
and
add
sbb
push
in
mov
xor
es
aas
jnp
popf
aad
test
stc
xchg
aaa
out
pop
jbe
lock
or
sub
sbb
fwait
std
jge
cmp
outsl
push
sub
xchg
xor
and
and
xor
add
cld
add
ror
loopne
sub
test
enter
pusha
aam
jb
hlt
jns
adc
jg
mov
fcomi
rdtsc
add
push
mov
xchg
repz
adc
sub
jmp
mov
lcall
jl
mov
es
xchg
stos
adc
pop
repnz
jns
add
cltd
inc
xchg
lock
sar
inc
loopne
out
repnz
mov
or
xchg
jbe
mov
inc
fcoms
xor
fldl
push
loop
adc
mov
loop
je
and
sbb
adcb
mov
xor
ljmp
test
add
pushf
dec
aas
mov
inc
adc
sti
daa
fs
push
fnstenv
mov
inc
jge
push
sbb
ret
jb
les
pusha
outsb
add
inc
xchg
fdivrl
js
jo
mov
stos
mov
gs
fwait
xchg
and
imul
mov
push
push
mov
sbb
sub
or
leave
popa
out
cld
mov
mov
aas
dec
pop
dec
aas
push
mov
sub
cs
and
mov
or
mov
pop
inc
sbb
call
out
jae
inc
mov
mov
add
push
roll
fwait
and
cltd
hlt
pop
arpl
dec
mov
dec
mov
bound
insl
and
mov
fistpll
jnp
stc
jo
sbbl
adc
dec
cltd
aad
or
jae
xor
cmp
cmp
jno
enter
sbb
sbbl
fs
in
xor
jae
int3
add
lds
lret
xchg
sub
dec
jne
pusha
arpl
mov
sbb
fisubrs
sbbb
and
rclb
ss
xor
lcall
notb
push
and
xor
scas
xchg
mov
pop
loopne
add
push
push
and
lahf
fimuls
mov
and
mov
xor
movsb
movl
dec
mov
pop
aas
idivl
sbb
xlat
mov
mov
jns
mov
mov
sub
insb
adc
inc
xor
dec
enter
ret
pop
movsl
lahf
icebp
xchg
sbb
dec
and
aaa
xor
cld
mov
mov
inc
jl
push
ss
fsubrp
sbb
lock
insl
add
push
sub
daa
xchg
jb
ss
cmc
adc
or
inc
and
xchg
adc
shrb
cld
mov
lods
out
mov
xchg
jns
shr
in
push
cmp
xchg
xchg
daa
aaa
adcl
jnp
xor
adc
lret
sub
ret
rcl
cmpsl
ss
add
ds
cwtl
mov
push
cmp
or
add
into
pop
dec
andb
rcrl
les
jae
scas
cmpsb
inc
mov
ret
mov
shrl
fnstenv
push
aaa
and
sub
mov
pop
pushf
imul
into
push
jge
or
lea
mov
lret
sbb
pop
repz
xchg
pop
add
sbb
lahf
lcall
sbb
clc
inc
roll
fstpt
sbb
or
dec
cld
xchg
xor
sub
pop
ja
mov
pop
pop
aas
inc
clc
std
mov
cltd
int
popf
fidivl
xchg
leave
xchg
clc
sub
int
stos
out
repz
loope
test
pop
outsb
adc
out
push
movsl
nop
shlb
sarl
xor
sbb
jbe
pop
fwait
in
pop
mov
mov
or
xlat
mov
inc
int
adc
push
mov
stos
jnp
mov
in
jno,pn
ja
xor
rorl
insb
add
les
rcl
jno
push
or
adc
icebp
and
xchg
xchg
sbb
lds
and
inc
add
iret
aad
imul
xchg
loop
jmp
or
in
les
fmuls
and
das
dec
push
mov
sbb
cmc
test
xchg
add
in
sub
gs
sarl
or
pop
fbstp
jecxz
and
imul
cli
mov
repz
lahf
dec
xchg
mov
popa
pop
pop
testb
pop
enter
jns
dec
cmpsl
push
stos
push
insl
aaa
mov
outsl
mov
dec
cmp
pop
jno
fisubl
rorl
cli
cld
push
sub
gs
xor
jle
jp
pushf
pop
out
cmove
sbb
lea
add
repz
pop
and
or
or
or
jns
test
aas
bound
pop
push
imul
mov
es
mov
jge
mov
enter
mov
jne
sub
je
lahf
orb
out
mov
mov
push
out
pop
xchg
jge
dec
fnsave
lock
leave
sahf
pop
cwtl
inc
or
fnstcw
jmp
gs
loope
mov
adc
mov
mov
and
pop
mov
mov
mov
mov
lcall
jmp
movsl
sbb
cmp
inc
fcomps
ror
pop
xchg
orl
jb
es
xchg
lds
pop
outsb
sub
cld
inc
std
sub
push
sub
sahf
and
jl
test
xchg
rcl
iret
push
xor
mov
push
and
dec
sbbl
popl
fsts
xor
mov
popf
dec
fimuls
test
fdivrl
mov
push
adc
imul
push
jg
sub
mov
loope
cmp
sbb
adc
push
sub
insl
cmc
lods
out
jle
add
orb
sub
xor
dec
dec
lahf
out
xchg
mov
adc
fisttpl
mov
xlat
or
les
xor
sub
outsl
push
mov
and
pop
mov
and
lahf
and
js
rolb
or
xchg
jl
push
test
mov
or
insl
add
fidivl
out
push
fcmovnbe
pop
lahf
dec
outsl
xor
out
cmp
imul
jno
cmp
insl
out
and
or
cmp
out
sbb
fsubs
push
sbb
adc
sbb
mov
fs
adcl
cli
popf
xor
in
rolb
adc
or
rclb
xchg
adc
sbb
jp
mov
push
sub
push
cmp
cltd
or
fiaddl
mov
or
shll
sbb
add
je
and
jg
push
sub
lods
test
ljmp
push
lret
xchg
out
and
insl
cmpsb
mov
or
cli
lods
jmp
arpl
dec
jecxz
lds
mov
xchg
orl
and
imul
push
mov
enter
or
sarl
sahf
push
faddl
jbe
pop
je
jae
jge
adc
loopne
jns
cltd
mov
pop
pop
aam
into
jmp
sub
push
mov
adcb
mov
hlt
fdivr
movb
xorl
jae
cwtl
cld
cmpsl
cmp
hlt
js
gs
push
call
mov
decb
push
leave
adc
sbb
inc
shll
xlat
fadd
mov
push
add
cmp
std
mov
jae
sub
jge
pop
xlat
sub
icebp
mov
dec
add
enter
movsl
pop
jge
lods
dec
or
in
fwait
jne
ljmp
cmp
add
cmp
ret
test
or
add
inc
mov
sbb
xchg
dec
push
js
popl
cmpsb
pop
leave
data16
pop
jo
xchg
pop
cmp
insb
pop
lods
xchg
xchg
mov
loopne
or
adc
sub
pop
lock
xchg
ja
icebp
push
test
cmc
call
jp
mov
push
inc
jmp
mov
clc
dec
adc
arpl
scas
push
jae
xchg
inc
gs
sub
setp
add
hlt
jge
mov
pushf
iret
lcall
and
js
pop
rcl
leave
sub
mov
push
mov
inc
sbb
pop
mov
jo
mov
or
int3
xor
adc
sub
and
add
cmpsb
lret
int
xor
in
ret
push
scas
jo
xor
out
or
fistpl
xlat
mov
push
dec
xchg
and
gs
dec
mov
fistpll
lds
mov
cmp
xor
rol
xchg
jbe
out
or
push
lods
jno
test
adc
imul
cmpsb
sub
adc
pop
xor
pop
and
jmp
inc
jb
int3
xchg
iret
insb
mov
pop
jmp
cli
lods
mov
fs
hlt
jle
or
lods
std
cmpsl
dec
int
and
jns
or
ljmp
inc
pusha
cwtl
int
add
dec
in
cmpsl
cmp
loop
sub
pop
imul
into
sub
add
push
xchg
rcrl
call
sbb
imul
pop
out
push
lret
xchg
arpl
das
sub
in
test
lea
aas
hlt
xor
cmp
add
inc
xor
aad
ja
call
adc
add
pop
inc
test
sub
mov
mov
xchg
test
cmpsl
mov
loop
adc
js
fdivs
add
pop
inc
int3
fdivr
lret
dec
push
push
push
mov
dec
xchg
add
pop
or
sbb
pop
pop
lods
adc
or
and
lcall
jb
aad
fcomps
fucomip
mov
xchg
and
addr16
or
orb
cli
lahf
popf
jp
xor
divl
lods
int
nop
jl
mov
fsubrl
cmp
mov
nop
inc
push
sub
jmp
fcmovbe
test
sub
and
andb
dec
cmpsl
in
clc
adc
les
inc
jmp
out
cmp
mov
or
hlt
jno
or
mov
xchg
adc
mov
xchg
sbb
sub
xor
lahf
push
and
jbe
out
js
push
mov
cltd
mov
xorb
mov
and
mov
add
jmp
ret
xchg
jmp
mov
dec
adc
add
or
push
in
mov
inc
call
push
inc
stos
sbb
mov
vunpckhps
add
adc
movsl
ret
add
push
ja
and
and
sub
in
fldl
xor
imul
mov
rcl
or
mov
cmc
cmp
cmp
mov
and
xchg
jmp
das
jbe
pop
adc
cmp
mov
lods
inc
imul
movsb
mov
and
pop
std
and
clc
xor
scas
xchg
mov
repnz
movsb
adc
jg
in
and
scas
into
loopne
mov
aaa
fsubrs
std
mov
lea
ficompl
dec
decb
aad
push
xchg
in
mov
test
jae
xor
fldl
loope
adcl
add
sahf
aam
shlb
std
mov
pushf
dec
loopne
leave
cvtdq2ps
fsubs
mov
fs
and
jl
push
mov
xchg
pop
test
jno
mov
and
mov
pop
outsl
mov
jp
int3
fcoml
inc
inc
in
adc
cmp
fildl
mov
xor
fs
inc
inc
gs
je
ret
jb
pop
inc
lret
inc
jo
mov
push
push
cmp
mov
adc
roll
int
mov
dec
out
dec
mov
add
sbb
data16
clc
jo
xor
jno
cs
shll
mov
mov
inc
adc
mov
add
int
out
jo
in
mov
sbb
clc
aaa
push
cmc
dec
in
filds
daa
cmp
mov
jge
sarb
fsubr
push
mov
or
xchg
sbb
jmp
jg
mov
cwtl
dec
out
call
pop
daa
and
sub
es
and
cmp
or
fbld
pop
jo
popf
int3
insl
mov
je
loop
in
xchg
mov
xor
test
mov
sub
mov
and
push
cmp
mov
lahf
and
fdivrs
pop
jp
cmp
popa
xchg
pop
pushf
ret
je
and
std
push
aaa
push
jecxz
sti
repnz
xchg
mov
sbb
pop
das
sbbl
adc
pop
dec
push
mov
mov
lock
adc
pop
hlt
add
xchg
jle
pop
mov
xchg
cmp
mov
les
adc
xchg
pop
shrb
add
daa
scas
or
incl
mov
ds
xchg
push
adc
iret
and
mov
jg
out
mov
xchg
and
sbb
mov
mov
sbb
or
sbb
jb
lds
add
dec
sub
mulb
dec
xchg
xor
jns
cwtl
js
lea
insw
and
mov
mov
add
xchg
jae
cmp
imul
inc
ficoml
aam
jg
or
mov
jne
sbb
pop
insb
popf
movsl
js
ljmp
xchg
sbb
cmp
mov
nop
add
pop
jge
in
cld
xchg
xor
mov
sub
mov
cwtl
pop
aas
int3
mov
pusha
enter
add
dec
xor
mov
arpl
push
aaa
jg
test
test
jmp
fidivrs
push
int
dec
or
mov
pop
iret
mov
imul
movsb
scas
xor
xchg
fs
mov
pusha
test
adc
pop
aas
call
lcall
sbbl
fldcw
sbb
mov
xor
push
pop
xchg
sub
arpl
sub
push
and
xor
fstpl
xchg
inc
pop
add
lods
rorl
popa
xchg
fs
ret
add
mov
lock
or
idivl
in
stc
fcmovnbe
xchg
lret
add
push
bswap
mov
cmp
xor
xchg
adc
xchg
data16
das
pusha
sbb
dec
adc
inc
pop
mov
andl
add
fxam
adc
push
dec
cmp
mov
inc
addb
loope
sbb
movsb
cli
dec
cwtl
rorb
inc
js
mov
ret
and
mov
jle
sbb
popa
mov
mov
sbb
es
mov
aas
sub
jbe
or
js
or
xchg
stc
sbb
xor
sub
jge
jmp
insl
cmpsl
ja
jle
sbb
stos
out
xor
lods
shlb
and
fsubrs
sti
call
sub
inc
dec
mov
not
pop
jns
cmp
xor
or
push
pop
dec
cltd
push
or
push
jmp
xchg
clc
out
daa
jno
sub
jno
int
xchg
fildl
jp
les
add
clc
fs
inc
mov
jecxz
push
jo
jl
adc
mov
mov
icebp
or
popf
sbb
and
sbb
add
mov
xchg
pop
pop
fdivrl
cmc
fsubrl
test
ja
push
mov
inc
jmp
jno
pop
js
je
push
xchg
xchg
in
popa
push
cltd
inc
inc
push
add
es
hlt
sbb
inc
inc
lea
daa
inc
fistpl
jae
call
inc
loopne
mov
les
gs
sub
cs
mov
incb
pop
inc
mov
push
sub
popf
mov
into
cltd
adc
paddsb
pop
jecxz
add
mov
pop
lods
call
inc
cmovbe
sub
inc
cs
sti
mov
lret
mov
stos
push
das
into
fdivs
or
iret
out
popf
mov
mov
jmp
fimull
pop
rorl
add
iret
je
inc
cld
insb
stos
pop
js
cmp
sbb
lods
pop
and
dec
push
arpl
jno
adc
aaa
cwtl
fdivrp
insl
mov
mov
stc
outsl
das
inc
lahf
pop
mov
push
out
lahf
xor
jmp
xchg
and
lds
rol
add
shlb
lret
fmul
inc
xlat
mov
iret
dec
pushf
sahf
or
sti
cmp
sti
aam
xor
xor
push
out
arpl
xor
add
shrl
pop
jge
xchg
xchg
ret
pop
hlt
imul
int3
jecxz
fsubl
rcrb
mov
add
data16
jp
mov
or
fucomip
fldt
cltd
or
cmp
idivb
cmpsl
mov
loop
cmp
and
xor
push
pushf
xchg
cmp
rorl
dec
xor
outsl
cmc
fsubrs
fcomip
scas
jl
fstpl
inc
jecxz
enter
fidivl
inc
adc
push
xchg
jg
pop
stc
xchg
adc
mov
mov
test
neg
push
adc
mov
popa
daa
nop
adc
and
notl
xchg
fdivr
ret
enter
xor
dec
xor
mov
jbe
sbb
ss
jb
mov
repz
imul
lds
mov
leave
loopne
push
dec
adc
jo
xchg
data16
lea
fsts
imul
lret
push
lods
ret
cmp
mov
jne
repnz
in
xor
les
add
mov
add
inc
or
xor
jo
scas
movb
sub
es
dec
mov
push
andl
es
adc
xor
inc
sub
outsb
imul
lock
int3
clc
inc
ret
push
rclb
mov
push
lahf
add
jb
dec
xchg
pop
inc
fldcw
in
pop
cmp
test
push
insl
xchg
inc
push
mov
mov
lret
je
or
push
test
xchg
movsb
pushf
jl
addb
adc
out
lret
ret
in
lea
add
sbb
pop
adc
mov
lods
es
out
add
imulb
jle
xlat
mov
test
and
xchg
ss
shlb
sti
cmp
nop
and
or
push
inc
stc
subb
pop
jle
add
repnz
push
mov
pop
sbb
adc
ljmp
dec
adc
jl
out
jecxz
cmpsl
in
and
push
das
mov
xchg
pop
das
push
mulb
loopne
test
sub
insl
adc
xor
adcl
insb
xchg
dec
cld
adc
push
pop
or
inc
ret
mov
xchg
fcmovnb
arpl
push
std
push
jmp
mov
lods
negb
inc
sarl
xor
icebp
in
push
lds
popf
aam
or
mov
outsb
stos
into
dec
inc
data16
outsl
ja
dec
pushf
lods
and
clc
xor
and
fs
fisubl
std
cs
jne
nop
js
out
in
sbb
lret
xchg
dec
sti
sub
clc
mov
inc
loope
xor
sar
dec
out
xchg
and
sub
mov
mov
cmp
push
lock
and
push
mov
dec
js
rclb
xchg
sub
xor
test
push
sub
push
push
int
dec
push
xor
inc
repnz
mov
imul
jle
inc
xor
lret
push
in
mov
call
pop
int3
adc
ja
adc
mov
inc
repnz
nop
fmul
push
loope
lcall
insl
shll
cltd
cmc
lret
jns
sahf
gs
xchg
mov
pusha
push
sub
scas
mov
dec
sub
adc
test
add
cmpsb
aam
inc
adc
hlt
xor
lret
sub
fsubp
aam
mov
and
addb
lret
mov
adc
inc
ljmp
cltd
pop
mov
xor
lea
jge
fdivs
jecxz
lahf
fistpl
clc
shl
adc
sub
cmp
repnz
mov
aad
push
cmpl
or
mov
jg
mov
fs
pop
pop
inc
lock
dec
and
sub
popf
lea
clc
mov
std
inc
add
dec
lret
stc
or
cmpl
adc
or
sbb
lds
xchg
xchg
jae
sbb
outsl
jne
mov
pop
sub
jns
sub
or
dec
push
add
sarl
and
push
cmp
fwait
pop
pop
or
fnsave
stc
mov
popf
fsubrs
jl
lods
iret
lea
ret
push
jno
xlat
jl
out
int
jnp
dec
ja
push
mov
adc
in
repnz
sub
add
out
js
test
xor
and
inc
iret
jae
gs
push
cmp
inc
dec
repz
inc
mov
push
pop
xchg
xchg
dec
orb
or
push
out
adc
cmp
xchg
jmp
xor
scas
lock
nop
shl
insb
movsl
cmpb
shll
xchg
lahf
outsb
push
xchg
and
ret
shlb
ja
std
in
mov
hlt
jmp
jg
add
in
lahf
lahf
jae
fnstsw
data16
jns
cmpsb
fnstsw
mov
int
xor
fnsave
sub
aad
adc
nop
ja
imul
cmp
xchg
ret
imull
add
ret
and
out
mov
mov
sub
fisubrl
pop
mov
out
cld
mov
scas
mov
adc
ds
mov
push
dec
imul
adc
inc
scas
cltd
jg
dec
out
arpl
pushf
enter
rcll
ret
mov
push
or
inc
fstl
sub
fists
in
fimuls
and
shlb
xor
fnstenv
lret
out
jae
jg
scas
add
sar
gs
mov
lock
fcmovnbe
mov
xor
dec
add
inc
jno
out
lods
push
adc
pop
jg
xchg
add
insl
bound
test
sbb
xor
cli
push
inc
sbb
or
mov
jl
jb
gs
jmp
ds
sar
ja
jb
push
data16
lds
jecxz
iret
dec
adc
lods
mov
and
xor
xor
inc
call
xor
psubw
add
aas
in
mov
mov
mov
push
mov
jl
pop
mov
mov
outsl
mov
dec
push
sbb
loopne
pop
loope
mov
nop
dec
mov
das
mov
dec
movsb
cli
in
psubsw
cmpsl
cmp
js
adc
aas
mov
mov
stos
cwtl
dec
pop
xor
dec
adc
mov
xlat
out
in
xor
in
loop
ds
jge
push
ror
cmc
jno
sub
push
rcrb
mov
jne
aam
repnz
popf
loopne
stos
loop
shrb
push
adc
fdivl
mov
mov
stos
jb
or
jle
imul
mov
aas
pop
sub
mov
push
fsub
ret
dec
repz
pop
pop
mov
add
ljmp
and
ds
or
into
imul
outsb
pop
pop
push
xchg
jno
xor
inc
loop
adc
lods
fnstcw
out
imul
or
and
jl
gs
or
in
sti
inc
sbb
in
scas
cmc
stc
sub
je
int
loop
mov
hlt
lock
test
outsb
mov
inc
test
jo
push
pop
mov
pop
pop
jns
lret
mov
adc
std
pop
inc
jg
imul
push
je
dec
aam
add
pop
lcall
imul
jecxz
jp
or
inc
lds
xchg
shll
dec
xor
mov
jecxz
jae
lea
jg
pop
adc
loopne
xor
sub
pop
movsb
sbb
sti
xchg
repz
test
xor
rcrl
test
push
dec
test
add
inc
jg
push
xor
xchg
aam
inc
sbb
xor
push
or
sub
or
pop
push
popf
stos
inc
cmp
pop
fsubl
popf
sti
xlat
jge
lock
lods
jl
xor
mov
sub
mov
movsb
lods
sbb
gs
xor
and
sbb
adc
sbbb
ja
mov
icebp
int3
lahf
jns
jle
aam
pop
shlb
mov
fildll
jae
or
insl
jo
jp
insb
mov
jmp
stos
push
mov
test
jae
mov
or
mov
test
cs
sbb
aam
outsl
test
fnsave
cwtl
xlat
jnp
jle
cmp
xorb
enter
push
fidivs
xchg
sbb
cmc
adc
xchg
imulb
rorl
mov
push
adc
cltd
shr
in
aas
sub
es
cmp
shlb
mov
enter
mov
pop
adc
cmc
lret
jecxz
scas
cmp
scas
or
inc
cmpsl
fbstp
sub
and
mov
mov
imul
pop
in
ficoms
and
int3
mov
inc
xchg
push
push
jnp
cmpsl
cmc
xor
add
mov
mov
xchg
mov
mov
and
adc
dec
cld
fstl
cmp
mov
jno
sub
imul
rcrb
pop
ljmp
adc
into
repnz
pop
shlb
sbb
cmp
out
jl
push
jo
dec
enter
and
and
sub
test
inc
incb
jge
mov
mov
mov
or
nop
out
and
xlat
lods
add
adc
push
pop
icebp
std
addr16
mov
mov
jl
les
push
movb
xchg
lret
mov
pushf
mov
imul
jae
sbb
arpl
loope
insb
movsl
pop
rclb
into
scas
mov
inc
fisubs
nop
mov
lock
cld
mov
jae
dec
jnp
jle
mov
orl
pop
jmp
ror
push
outsl
pop
fiaddl
cltd
push
cmpsl
jae
xchg
rclb
ret
jo
scas
mov
rolb
out
inc
mov
shlb
pusha
pop
mov
pushf
xlat
fwait
xchg
rcrl
roll
shrb
sti
les
mov
orb
and
push
jnp,pt
setnp
mov
sub
mov
ret
out
inc
jno
jl
adc
xchg
cmp
mov
adc
and
inc
jae
bnd
addr16
or
and
push
jle
dec
jg
inc
add
imul
and
sbb
sub
stos
pop
cmp
push
mov
lock
repz
dec
loope
rcrb
daa
dec
pop
sbb
test
cmc
roll
mov
cmp
adc
mov
or
in
or
call
lods
pushf
es
out
rorl
jno
cmp
xor
adc
cmpsb
in
aad
enter
fisttpl
dec
add
mov
cmp
fisubrl
fnstsw
arpl
arpl
or
inc
jmp
adc
sbbl
repnz
pusha
sarb
and
ljmp
sub
ret
push
cwtl
cltd
cwtl
pop
lods
push
std
nop
iret
fwait
ret
jno
ss
add
int
outsb
loopne
or
andl
adcl
rcrl
repz
scas
xor
leave
lock
jecxz
andl
addl
roll
rorb
mov
scas
shrb
mov
hlt
movsb
addr16
cmp
sub
pushf
xor
add
addb
subb
scas
inc
cli
push
mov
mov
add
test
loop
movsb
int3
sar
dec
jge
ljmp
add
add
push
js
das
fsts
ja
dec
jle
pop
lods
lods
push
int3
pop
or
dec
mov
js
mov
adc
inc
shl
cmpsb
pop
cmpsb
cmpsl
aam
jbe
pop
jne
fdivrs
dec
xor
jne
sti
mov
xor
pop
jle
cwtl
jle,pn
popa
pop
rorl
jmp
fcmovnu
push
call
add
add
jl
adc
lret
mov
add
xchg
inc
in
ret
mov
lea
movsl
sbb
aaa
and
xchg
movsl
mov
push
inc
adc
into
mov
and
fs
out
fildl
cltd
jae
cmp
inc
ret
mov
mov
mov
and
add
inc
fildll
pop
and
jl
fbstp
mov
movsl
std
pop
xor
cmp
xchg
xor
rclb
add
fwait
rol
ret
jge
xchg
or
dec
mov
je
cmp
dec
and
mov
les
fnstsw
and
shrb
xchg
mov
cmp
ljmp
xchg
testl
jno
test
sbb
xchg
xlat
push
ret
shlb
dec
mov
test
jns
leave
fcmovnu
subb
out
jg
mov
pop
test
fiaddl
mov
imul
jo,pn
xchg
pop
or
xor
mov
mov
mov
into
xchg
xchg
arpl
lret
xor
out
insb
mov
sbb
insl
lock
std
jbe
push
out
mov
adc
cmp
and
ret
incb
pop
mov
scas
pop
mov
dec
rclb
inc
inc
arpl
xor
std
mov
daa
mov
ret
xor
call
test
jns
stc
inc
das
rorb
rcl
push
or
push
hlt
pop
add
in
sub
and
jl
fdivrp
or
cmp
mov
aaa
sub
movsb
into
repz
mov
dec
xor
lcall
xchg
pop
test
xchg
int3
movsl
sub
push
dec
dec
cmpsb
add
mov
xchg
mov
shl
mov
lea
pop
push
inc
sub
xor
mov
adc
cmp
inc
mov
pop
cmpsl
add
sahf
lods
inc
fstl
cs
lock
adc
stc
loope
mov
pop
jge
jmp
sahf
es
cmp
scas
xor
inc
outsb
jae
mov
jecxz
test
subl
xchg
mov
rcrb
fwait
add
rcl
jns
add
add
leave
cwtl
mov
int3
add
xchg
movsb
fnsave
and
test
out
ljmp
xchg
cmc
cmc
xchg
daa
push
lahf
push
sub
repnz
ja
push
loope
jge
fisttps
cltd
test
push
push
fnsave
mov
in
aam
std
insl
pop
jns
push
aaa
push
dec
mov
xor
nop
jnp
push
xchg
arpl
mov
cmp
add
testl
mov
mov
cltd
sub
ret
jbe
out
inc
mov
aad
fnstcw
add
cmpsb
js
aas
fcomi
adc
inc
jmp
mov
jne
jno
or
jp
sbb
dec
push
sub
cwtl
lock
mov
add
int3
cmpsb
fnstsw
insb
dec
cli
fdiv
loopne
pop
out
sbbl
imul
aaa
cmp
add
push
sbb
arpl
icebp
int
pop
mov
dec
pusha
pop
jnp
inc
sub
loope
jecxz
nop
int
or
int
fisubrl
lret
sbb
or
mov
fs
aad
sub
push
mov
int
and
movsl
jle
cmpsb
adc
gs
pop
fs
dec
cmp
cld
inc
iret
outsb
int
push
xor
mov
xchg
int3
or
pushf
in
mov
cmpsl
pop
je
pop
mov
xchg
fildl
pop
daa
sbb
shrl
cltd
mov
ljmp
xlat
xchg
sub
outsb
jne
fcmovnb
add
leave
cmpsl
les
insb
mov
xchg
nop
dec
add
je
pop
cmp
pop
cmc
idivl
mov
jl
rcrl
loop
sbbb
stc
push
pop
xchg
mov
clc
nop
cmpsb
mov
push
adc
lret
stos
add
inc
sbb
lock
pop
hlt
pop
push
xor
jne
cmc
int
jns
lret
push
cwtl
cmpsl
cltd
sub
into
jns
jne
cmpsb
shll
insl
ja
push
sub
dec
stc
jge
or
mov
inc
xor
sub
das
mov
lret
mov
aad
push
or
shl
cmp
popfw
hlt
ret
cld
xchg
cmp
dec
lret
cmpb
push
lret
or
fcoml
pop
dec
jo
push
nop
push
lock
xor
mov
mov
cmc
jo
sub
das
sub
rorb
bound
cli
flds
push
aad
adc
and
fadd
mov
xor
xor
pop
and
pop
cs
jl
sub
cmp
int3
add
mov
xchg
or
xchg
out
mov
dec
pop
insl
imul
sub
lret
out
cltd
or
and
or
cmp
adc
add
add
jnp
jo
test
outsl
mov
dec
jb
aas
dec
jmp
idivl
sbb
and
push
and
mov
aad
repz
testl
jnp
xchg
mov
dec
aad
mov
into
jg
push
test
and
cwtl
mov
pop
xchg
pop
adc
mov
lcall
xchg
cmp
xor
pop
stc
add
or
mov
lahf
pop
cs
aad
push
stos
icebp
and
push
or
clc
test
mov
and
jno
xor
xchg
ss
xlat
test
in
pop
in
add
sub
push
andb
es
and
xlat
mov
dec
incb
test
lcall
cmp
cmc
sub
push
out
call
das
shl
js
sbb
mov
cld
insl
das
adcl
out
aam
scas
or
jb
push
mov
lret
shll
xchg
mov
adc
test
out
outsb
or
lret
rep
push
js
sub
js
adc
outsl
enter
and
jae
push
ss
cmp
movsb
outsl
mov
sub
mov
shl
rolb
in
adc
int
orb
and
pop
popf
inc
das
or
jne
test
gs
aaa
repnz
xchg
add
mov
sbb
mov
lret
mov
xchg
inc
cmp
push
mov
jg
rolb
mov
sub
jge
shl
pusha
mov
lods
mov
cltd
loope
pop
cmp
push
pop
fsubr
inc
lahf
in
ja
mov
cltd
mov
icebp
sub
lods
xor
sub
push
fldcw
xor
movl
fwait
cmp
push
cli
lds
mov
lock
push
bound
xor
inc
cmp
ficompl
mov
adc
pop
pop
inc
mov
orb
push
lret
cmp
cltd
add
adc
xchg
push
addr16
xchg
into
mov
dec
mov
rcrb
lcall
in
lret
call
mov
xchg
push
stos
xchg
sub
xor
mov
imul
jnp
jle
mov
les
xor
sub
sub
sbb
insl
cmp
cwtl
mov
jae
mov
lahf
hlt
test
mov
test
cltd
int3
test
cmpsl
shlb
inc
sub
pop
iret
scas
outsl
sub
mov
jle
aaa
out
into
out
loopne
push
add
popf
inc
mov
stc
pop
in
inc
xchg
cli
xchg
push
and
xchg
cmp
hlt
ljmp
int
mov
xchg
ja
fbld
in
fs
stos
ror
sbb
pop
jmp
inc
pop
mov
pop
pop
push
out
push
push
push
jnp
adc
inc
xchg
loopne
jecxz
push
push
rcrb
pop
loop
outsl
mov
adc
test
pop
ja
xor
xchg
mov
inc
add
sbb
add
dec
dec
les
ja
adc
xorl
test
jne
popa
push
nop
add
push
in
sub
fsubl
and
xor
fisubrs
nop
jno
das
fisubl
and
sbb
lods
mov
ja
sub
and
enter
mov
pop
leave
mov
or
jbe
mov
popf
or
dec
jecxz
mov
pop
loopne
sub
add
test
adc
push
jecxz
push
adc
jecxz
fs
sub
dec
cmp
mov
js
push
jl
lds
cmp
outsl
into
pop
data16
je
clc
mov
dec
xchg
inc
enter
jge
push
lds
imul
test
data16
jns
test
inc
mov
or
filds
push
je
or
clc
loopne
cld
aas
fnsave
lret
or
fsubs
dec
pushf
inc
push
push
cmp
call
push
ret
adc
or
lret
add
fs
pop
cmp
or
sbb
cmp
aas
in
xchg
mov
pop
mov
in
cmp
fcmovb
shrl
imul
test
call
stos
xchg
aaa
mov
dec
fidivrl
loope
rcrb
inc
jmp
aaa
mov
mov
jno
ljmp
aas
insb
jp
and
fdivl
and
adc
lods
jmp
sti
jno
lock
test
rcll
enter
sbb
mov
mov
lret
pop
jo
xchg
clc
cmp
shll
jge
dec
push
sub
loopne
and
sbb
mov
nop
mov
jge
rcrb
push
sub
dec
mov
lock
xchg
sahf
cmc
scas
mov
push
fs
cld
sbb
jmp
stc
sub
xlat
push
dec
inc
mov
pop
arpl
add
std
imul
inc
and
fcomi
not
or
pop
sub
jb
dec
ljmp
inc
mov
nop
xchg
loopne
mov
nop
lret
lds
xor
mov
jae
cli
imul
jns
jge
loop
lods
fnstsw
dec
mov
xchg
aaa
cs
mov
mov
outsb
dec
loop
stos
xor
jae
imul
xlat
negb
pop
xchg
push
std
popf
sbb
push
adc
mov
std
std
je
dec
sub
mov
pop
in
push
adc
cld
push
sti
bound
fs
call
push
cmp
mov
xor
stc
loope
cmp
mov
adc
daa
or
test
jp
push
call
push
rcll
jecxz
hlt
mov
mov
push
push
sub
repz
mov
divl
ret
mov
adc
pop
ret
sub
sub
xchg
push
rolb
cltd
inc
cmp
fsubrs
and
inc
movb
sbb
jge
test
lods
mov
bnd
jns
roll
mov
xchg
pop
xor
jne
es
or
push
mov
lods
xchg
or
push
loopne
testb
mov
mov
mov
mov
pop
lret
xchg
jns
xchg
sub
mov
out
leave
add
jns
jmp
shll
les
and
cmp
jnp
ficomps
adcl
sbb
pop
cmc
ds
dec
into
mov
sub
push
jb
xor
cmp
push
or
mov
scas
and
cmp
leave
jno
pop
adc
cmp
adc
mov
jnp
or
loopne
andb
shufps
loopne
and
fwait
or
push
mov
inc
mov
fdivl
jnp
mov
and
jl
test
ret
fiaddl
pop
mov
sahf
mov
mov
cmpsb
sbb
icebp
lret
push
sbb
test
jnp
daa
call
test
adc
in
int3
fists
pop
repnz
dec
cltd
in
fimuls
in
mov
leave
lock
fisubl
enter
movsb
jecxz
andb
jle
mov
xor
cmp
add
push
mulb
adc
mov
out
cs
jns
jmp
pop
je
std
xor
loope
add
push
pop
and
jge
add
xchg
pop
ss
xchg
cli
pop
std
cmp
adcl
inc
test
push
vpmulhuw
fcoms
dec
xor
rol
icebp
xor
repnz
pop
negl
in
pop
mov
jo
jno
jp
jg
inc
mov
std
cmc
jnp
faddl
cmp
sub
in
jns
inc
aad
push
mov
incl
mov
sub
cmp
loop
push
lea
scas
jns
lods
mov
bswap
divl
es
loop
mov
not
push
mov
dec
xchg
mov
xor
push
jne
xchg
out
push
sbbl
mov
cmpb
jg
push
not
loope
pop
ss
or
bound
cmp
push
stos
push
cmpsb
and
icebp
jns
mov
add
insl
cmpsb
add
lods
jns
dec
push
or
inc
ss
inc
inc
ljmp
or
ds
jge
jle
mov
adc
negl
mov
jb
cmp
popf
jnp
int3
xor
arpl
hlt
xchg
push
into
pop
jnp
sti
pop
sarb
idivl
stos
dec
and
roll
lods
sub
pop
pusha
mov
jp
pusha
lret
add
rcrb
sub
mov
inc
mov
mov
aam
mov
popa
scas
or
dec
imul
jnp
lret
bndstx
stc
stos
xor
jb
sub
mov
adc
test
fistl
lock
adc
sbb
sub
stc
cmp
add
mov
mov
fistpl
ja
in
call
out
bound
repnz
dec
call
negb
mov
xor
insl
aad
call
inc
pop
test
std
mov
mov
lods
fidivrl
scas
aad
in
arpl
inc
add
movsl
iret
stos
xchg
inc
iret
sbb
push
xchg
fnstcw
mov
cmp
cld
pop
jns
cld
in
test
scas
jne
aas
sbb
pop
push
mov
mov
enter
xchg
mov
sbb
mov
and
fs
dec
gs
movsb
mov
mov
jp
orb
dec
mov
jle
mov
fidivrs
out
pop
dec
dec
cmc
shlb
cmp
cmp
cmpl
pop
jns
pop
leave
mov
mov
imul
fcom
sbb
mov
xor
insb
jbe
adc
or
int3
pop
sarb
scas
sub
outsl
jns
insl
jae
insb
pop
repz
lods
push
test
xchg
cmpsb
fcomi
sub
fsubp
push
cli
dec
pop
int3
inc
add
cli
incl
push
iret
stos
mov
insb
pop
aad
jb
cltd
ja
adc
push
adc
in
cmp
push
mov
mov
movsl
fstcw
jb
jbe
mov
pop
mov
rolb
adc
add
xchg
sarl
xchg
scas
arpl
leave
jge
sbb
sbb
jmp
push
mov
bound
ljmp
cmpsl
into
dec
mov
mov
mov
jbe
fisubs
jge
jo
jmp
pop
mov
xor
movsl
js
xchg
adc
ret
adcb
xor
xor
leave
clc
jecxz
inc
mov
mov
fsubrp
adc
js
jbe
fcomps
cmp
push
scas
jae
es
lret
fwait
sbb
sub
xchg
add
je
mov
movsb
mov
addl
add
pop
xchg
and
sarb
clc
xchg
ror
cmpb
fimull
stc
mull
adc
sub
inc
push
call
pop
test
mov
pop
mov
stos
sub
sbb
mov
mov
push
cmp
jecxz
test
icebp
subb
sub
xor
cmc
xchg
inc
push
outsl
xchg
dec
push
test
nop
nop
push
mov
sbb
cmp
add
enter
ss
adc
clc
sbb
mov
or
sbb
sbb
mov
or
pushf
cmp
mov
mov
dec
adc
leave
dec
and
lahf
aad
ficompl
jecxz
push
mov
cmp
mov
mov
adc
mulb
xchg
push
and
out
das
in
sbb
aaa
cmpsb
sarb
push
lahf
adc
xchg
sbb
loopne
leave
mov
lahf
adc
mov
or
mov
mov
in
mov
pushf
sub
push
jge
sub
out
jmp
pusha
or
mov
mov
pusha
lods
mov
add
fwait
out
ss
dec
loopne
cwtl
push
mov
nop
jb
mov
ret
or
jo
pop
cmp
arpl
fbstp
test
add
xor
lret
sbb
mov
sbb
xchg
movsl
mov
jae
fisubrs
adc
insl
pop
es
nop
decb
and
add
add
pop
pop
xchg
jbe
fsubr
pop
in
pop
rorb
jecxz
loop
xorb
or
sub
into
or
xchg
mov
and
jp
inc
sbb
lret
cmp
mov
pop
aad
cmpsl
repz
jb
dec
gs
aam
pusha
stos
outsb
mov
mov
fdivrl
fadds
sbb
ffreep
dec
out
mov
xchg
pop
xor
pop
imul
subl
fsubrl
xlat
cmp
fisubl
lret
mov
sarl
push
xor
pushf
sbb
je
popa
pop
push
jg
cmp
or
push
and
test
sbb
xchg
into
push
push
or
lret
aam
dec
aas
mov
mov
data16
scas
xor
jle
ss
enter
mov
aam
mov
daa
out
stc
ds
jle
cmc
sbb
dec
and
ret
sbb
fs
stc
js
sub
cmp
jo
imul
inc
adc
stos
xchg
xor
pop
ljmp
jnp
jns
cmc
cmp
in
mov
jge
into
aas
data16
jb
inc
es
sub
repnz
add
sbb
aam
xlat
bound
sbb
hlt
inc
mov
xchg
sbb
xchg
rclb
sub
loope
push
pop
jmp
fistps
fadd
cmpsl
roll
in
shr
sahf
out
jo
stos
cwtl
das
std
js
dec
lock
push
test
push
aad
push
mov
js
lcall
pop
sub
jecxz
sub
inc
jge
addr16
inc
imul
sbb
movsl
inc
mov
jne
pop
cmp
pushl
mov
push
inc
inc
cmc
inc
cld
push
js
rclb
sbb
xchg
mov
pusha
lahf
fs
js
mov
mov
sbb
cltd
out
aam
sbb
loopne
repz
aas
fdivs
mov
lods
in
repnz
mov
sub
out
sbb
test
pushf
mov
imul
mov
sar
pop
sahf
bound
fldcw
mov
jns
stos
push
sub
pushf
mov
insb
andl
insl
pop
std
mov
fwait
add
jb
movsb
in
rcrb
rclb
push
xchg
sub
push
or
adcl
out
daa
loop
xor
out
adc
inc
les
out
adc
adc
sbb
or
lds
jnp
add
jns
aam
pop
mov
pop
inc
dec
push
inc
in
push
jg
imul
das
fwait
push
imul
out
jne
movsl
mov
scas
adcb
sub
fistl
cmpsb
lods
outsl
test
push
xchg
xchg
mov
xchg
loopne
test
inc
rcl
fnstenv
mov
out
dec
mov
mov
mov
movsl
test
inc
pop
mov
shlb
ja
sbbb
sbb
push
aaa
out
sbb
insl
or
pop
lret
cmp
inc
into
mov
xchg
aad
xor
fdivl
push
mov
pop
lock
mov
lds
dec
sbb
inc
cltd
std
jno
nop
xchg
push
push
jbe
inc
sbb
sub
and
sbb
cmp
loop
mov
pop
sub
nop
fs
add
mov
ljmp
inc
fisttpl
jae
jle
cmpsl
dec
sub
lea
sub
nop
fcompl
pop
in
pop
jbe
inc
icebp
fistps
ficoms
add
push
loope
ds
ss
push
cmpl
jmp
inc
add
push
in
and
mov
icebp
adc
in
or
test
push
push
pop
mov
fcomi
jle
movsl
xchg
dec
repnz
cmp
mulb
into
cmp
cmpsb
pop
push
insb
aaa
adc
adc
xchg
fistpll
mov
xchg
sbb
rorb
push
ss
and
hlt
sbb
lods
xchg
mov
inc
ds
adc
lcall
pop
fwait
dec
stos
push
in
fucom
push
subl
icebp
mov
push
ljmp
mov
in
fcompl
and
inc
imul
cmc
and
inc
jecxz
dec
sbb
inc
push
shlb
enter
mov
jle
xchg
push
ret
fwait
push
insb
lret
das
je
repz
mov
sahf
cmpsb
loop
mov
gs
inc
jle
pop
loop
aam
repnz
or
roll
jmp
div
out
loopne
in
cld
inc
insb
jne
adc
push
or
jmp
dec
push
in
out
fdivl
nop
push
jae
sbbl
jge
ss
pop
iret
mov
mov
jge
lds
hlt
sbb
or
fsubrl
dec
jae
sbb
and
cwtl
jl
cld
xchg
aas
pop
ss
mov
jp
and
ret
push
cwtl
adc
xor
jbe
ret
xor
flds
mov
inc
adc
or
adc
stc
out
xchg
in
cmpsb
cmp
lock
scas
mov
sbb
loop
imul
mov
fisubs
dec
push
enter
lea
jle
mov
ret
movsb
cld
iret
aas
clc
in
mov
mov
imull
dec
stos
cmpsl
xchg
cmpsb
jae
nop
inc
xchg
stc
test
sub
in
mov
mov
cmpsb
push
push
sarb
int
pop
divl
sahf
jp
mov
scas
pop
adc
push
sub
pop
jb
adc
imul
es
test
repnz
lods
dec
jnp
sbb
gs
sub
lahf
mov
or
mov
dec
xor
loopne
insl
push
cltd
mov
cmpsl
xor
movsb
push
pop
add
js
adc
out
push
sub
xchg
fisubl
jo
mov
insb
pop
and
mov
xchg
pop
jmp
jp
movsb
xor
add
mov
xor
fadd
xor
mov
cmc
push
iret
inc
jnp
test
ja
push
std
dec
xlat
icebp
sbb
jecxz
inc
hlt
inc
cmp
mov
pop
push
cmp
mov
xlat
push
dec
inc
jecxz
adc
in
and
cltd
jmp
xor
jecxz
jne
aaa
pushf
sbbb
mov
inc
xor
ret
cmp
push
fdivrs
xor
repz
ret
mov
pop
mov
dec
icebp
xchg
shll
mov
popa
bound
or
mov
movsl
shrl
loope
aas
sub
sarl
push
push
cmpsb
sbb
cmp
js
lcall
push
jb
pop
into
hlt
xchg
call
test
mov
or
pop
aas
adc
jmp
ljmpw
mov
mov
mov
push
or
es
lcall
into
jl
hlt
or
adc
aas
rcrl
ds
in
mov
test
sbb
fisubrs
pop
popf
cmpsb
dec
jge
push
rcrb
xor
fwait
jne
and
jg
pop
and
sets
sarl
test
push
repz
mov
popa
add
inc
mov
cld
mov
repnz
loop
call
xchg
adc
movsl
xchg
gs
jmp
aad
cwtl
dec
inc
pop
iret
dec
mov
jg
lahf
lea
out
sub
mov
and
popf
jge
std
lods
jmp
dec
xchg
sbb
lods
sahf
int
mov
inc
mov
xchg
mov
dec
mov
repnz
data16
dec
sbb
pop
xor
fcoml
or
les
mov
in
sub
repz
or
pushf
nop
jmp
dec
rcl
subb
pop
mov
inc
xchg
int
das
inc
push
jmp
imul
cwtl
mov
mov
js
jg
push
jb
leave
scas
lea
js
fimuls
sub
ret
mov
in
sub
gs
sahf
lods
or
insl
sub
cmp
inc
lock
pop
mov
mov
xor
and
adc
lods
mov
lods
jg
fidivs
cld
or
imul
push
dec
imul
cmp
in
inc
rcrb
scas
push
xor
cmp
sub
mov
setg
fmull
loope
or
xor
sbb
in
cmp
or
xchg
push
gs
xlat
or
lods
jge
jecxz
add
xor
jno
je
push
cs
mov
push
mov
xchg
cmp
pushf
sarb
xchg
mov
jo
test
sub
notb
pop
in
movsl
jecxz
and
sbbl
loop
int
sbb
hlt
sub
cwtl
xchg
or
shll
lcall
and
xor
outsb
cmpl
xchg
mov
scas
pushl
or
push
xor
in
add
movsl
loopne
mov
add
and
dec
ljmp
ror
jnp
dec
pop
out
mov
negb
dec
movsl
pop
lds
and
jge
inc
or
fisubs
imul
aam
mov
movsb
jo
mov
loopne
push
push
mov
je
imul
aad
arpl
test
jnp
pop
bound
push
bound
test
fdivrl
dec
inc
push
sbb
in
push
dec
and
mov
nop
dec
xor
or
lea
loopnew
mov
pop
and
jge
mov
or
dec
cmc
push
shlb
inc
xchg
pop
movsb
push
mov
pop
cmp
sub
gs
jo
pop
cli
and
xchg
mov
fsave
clc
cmp
inc
jmp
or
adc
adc
lods
adc
popa
adc
cli
lods
inc
or
mov
loopne
mov
test
ds
pop
ds
adc
adc
rorl
in
iret
repnz
lock
ss
jecxz
push
bound
mov
sub
pop
sahf
mov
and
adc
push
out
pop
loopne
sbb
cmpsb
enter
xchg
sbb
loopne
adc
setbe
xor
sahf
leave
rcl
dec
adc
out
cmpsl
mulb
adc
cltd
mov
shlb
fucom
out
jp
lods
push
cltd
popf
cmc
sbb
jb
gs
repnz
cli
mov
adc
jnp
js
sub
pop
popf
jmp
dec
in
pop
out
hlt
out
push
out
cltd
clc
sbb
mov
mov
int
xchg
lea
or
push
sahf
fstps
xor
jmp
xchg
mov
mov
cmp
mov
xor
mov
and
fistpll
jnp
mov
jb
push
movsb
mov
mov
js
sub
sti
inc
test
inc
adc
jae
xor
sarl
loopne
jmp
add
iretw
lret
sbb
lock
test
and
aas
popf
xchg
hlt
dec
aaa
out
inc
xchg
jecxz
call
xchg
push
xor
cmp
adc
cwtl
test
mov
orb
inc
cmp
sub
ja
fst
ds
jp
dec
enter
ja
rorb
push
fbstp
push
imul
sarb
sub
xchg
xor
cmpsl
sub
sub
mull
sbb
pop
fisttps
xor
lods
lcall
mov
neg
mov
stos
sbb
mov
push
sub
mov
cmp
dec
loopne
movsb
into
ja
mov
scas
pop
inc
out
xor
xchg
jno
lods
cmp
sbb
jne
enter
cmp
sbb
sti
andb
pop
ret
or
out
jge
into
pop
xlat
fimuls
dec
push
mov
test
rcrb
in
lret
and
xor
scas
fstl
in
aad
xor
or
mov
lret
dec
push
popf
test
add
mov
push
or
pop
push
fsubl
pop
test
cmpsl
rcr
test
or
xorb
clc
lods
shll
outsb
pop
or
sbb
sub
sub
dec
mov
jecxz
push
lcall
imul
xor
jg
push
pop
cmpsb
aam
cmpsb
sbb
lods
das
stos
rcll
dec
dec
popf
cmpsb
mov
dec
push
int
popa
pop
mov
pop
repz
and
loope
lds
sub
loop
in
leave
loope
cld
mov
dec
sub
pop
sbb
fcmovnb
stos
dec
cli
mov
out
shr
mov
loope
jg
in
mov
cmp
add
jns
dec
cmp
push
cmp
jnp
push
out
int3
mov
addb
add
add
lea
out
adc
jecxz
insb
bound
std
fiadds
out
push
adc
push
les
inc
mov
sub
lahf
rcrb
and
pop
sbb
cmp
scas
mov
mov
imul
addl
pushf
jbe
test
pop
mov
loope
mov
jae
fst
insb
or
cmp
and
push
mov
pop
sbb
gs
cmpsl
add
ds
inc
scas
mov
iret
inc
pop
push
cld
out
leave
or
mov
sahf
inc
xor
sti
xchg
mov
daa
stc
sub
imul
fs
adc
lret
pop
cmp
cmp
popa
popa
dec
hlt
out
js
xor
out
and
push
sub
dec
cltd
xchg
fsub
push
nop
push
xchg
fidivrl
mov
popf
mov
sub
sub
scas
lahf
fdivr
lods
xrelease
push
or
mov
pop
cs
cmp
inc
mov
mov
imul
test
fs
mov
and
addr16
and
cmc
inc
adc
adc
loopne
idivb
pop
int
and
xchg
sub
push
mov
loop
inc
jmp
mov
test
iret
imul
and
scas
mov
inc
xchg
xchg
cmp
jne
pminub
aas
xor
mov
inc
mov
sbb
lret
add
leave
out
inc
and
sub
adc
aas
inc
iret
cmp
push
out
jecxz
push
pop
nop
push
movb
cmp
cs
leave
jbe
jbe
xor
mov
sub
rcll
mov
cld
xchg
ficoml
sbb
fstpl
jl
aad
sbb
scas
or
push
ret
arpl
adc
sub
in
or
out
adc
and
jae
pop
je
lods
pop
mov
dec
loope
xchg
jmp
lcall
pop
pop
in
mov
ljmp
dec
cmpsb
push
pop
aad
sti
stos
mov
es
xchg
ss
std
lret
lret
pop
test
scas
or
fisubrs
push
push
into
lods
stos
cmc
and
es
fisttpl
mov
pop
pop
xchg
pop
and
cmp
mov
push
pop
cmp
leave
test
xchg
push
fistps
dec
in
xchg
sub
push
sub
rcrl
out
mov
out
test
dec
mov
insb
sbb
push
and
in
cmp
out
dec
ret
mov
lcall
fwait
mov
push
and
jge
adc
pop
and
outsb
lea
adc
call
roll
sub
mov
ret
inc
in
sbb
repnz
mov
add
out
push
inc
sbbl
rcll
iret
dec
cmp
nop
push
decl
sub
in
shlb
mov
xlat
sbb
stos
jecxz
sbb
nop
adc
imul
and
jnp
push
out
adc
cwtl
xchg
or
std
lock
fidivl
xchg
and
pushf
push
adc
sbb
mov
lcall
pop
cmp
dec
pop
bound
xchg
xor
out
cs
insl
iret
scas
xchg
adc
sub
xchg
xor
aam
lea
aad
scas
and
cwtl
and
loope
jecxz
lahf
add
std
call
and
cmp
out
inc
push
xchg
pop
repz
push
iret
jns
push
not
sub
cmpsl
cli
rcll
loope
sub
or
outsl
pop
shlb
or
jmp
adc
or
pop
pop
xor
pop
xchg
and
ret
test
cmpsb
test
fcmovbe
mov
repz
out
jge
push
std
movsb
ljmp
jmp
int3
outsb
dec
push
and
dec
rcll
or
dec
lret
push
fwait
lds
bnd
pslld
fs
jle
dec
adc
hlt
inc
pop
ret
xor
in
sub
fnstenv
or
mov
xchg
ljmp
movsb
out
andb
sbb
xchg
lcall
inc
dec
push
push
jecxz
subl
mov
xor
outsl
call
xchg
or
adc
cld
mov
outsl
das
repz
paddw
movsl
addr16
cmp
xchg
stc
adc
xor
push
jb
pop
ljmp
mov
jmp
inc
dec
inc
pop
arpl
icebp
dec
mov
pop
enter
adc
jbe
das
add
adc
sbb
fs
das
pop
fcom
lock
mov
pop
mov
sbb
jbe
out
addr16
je
dec
pushf
dec
add
lcall
sub
ja
iret
popa
stos
and
cmpsl
das
or
add
dec
fsub
sbb
aad
xlat
leave
jg
insl
mov
pop
pop
jecxz
jne
jle
dec
mov
addr16
add
pop
add
push
xchg
dec
xchg
jns
ret
sub
or
ret
or
outsb
pop
in
push
scas
fwait
jo
aas
mov
out
popf
test
xor
mov
mov
js
push
cmp
ficoms
add
sahf
sub
fistl
push
int3
lcall
sbb
cmp
fldcw
xchg
mov
fsubrl
mov
cwtl
xchg
mov
lock
push
loop
add
cmpsb
xlat
lret
in
fcoml
dec
mov
push
idivl
pop
or
test
pushl
sbb
add
push
cmc
xor
push
dec
mov
jo
repnz
mov
or
out
ret
xchg
xchg
jmp
mov
mov
cmpsb
nop
mov
sub
lcall
out
pop
test
icebp
test
push
jp
push
mov
in
jge
xor
inc
xor
pop
pop
adc
xchg
adc
fisubs
jns
adc
xor
xchg
ret
in
adc
mov
pusha
enter
test
icebp
dec
dec
jnp
fmull
shl
push
test
push
lea
lock
mov
xchg
inc
sub
lods
mov
mov
insb
into
mov
pop
mov
shl
insb
or
mov
mov
les
rorl
fsubrs
outsl
ret
sbb
xchg
pop
fstl
addb
mov
adcb
mov
push
dec
lds
jns
lock
hlt
cli
imul
add
sbb
or
xchg
inc
inc
xor
sbb
mov
enter
adc
test
iret
lock
push
cs
inc
icebp
js
add
push
and
inc
xchg
rorl
and
sbb
jmp
dec
push
and
lahf
movsl
imul
inc
and
fcomps
mov
xor
imul
pop
cmpsb
mov
push
push
jbe
es
icebp
or
popl
jnp
ljmp
jge
mov
addr16
mov
nop
mov
pop
add
sahf
push
push
ret
adc
push
out
loop
int3
sbb
repz
je
mov
jle
repnz
push
jne
push
xchg
popa
enter
dec
cld
aad
sti
jl
inc
jg
jecxz
cmc
aaa
test
mov
rcr
daa
in
into
repz
or
rcll
lods
add
dec
push
sbb
inc
loopne
imul
xchg
rorb
pop
cmp
add
test
mov
fidivrs
loop
in
mull
mov
lods
pop
mov
xlat
sub
fistl
jo
enter
pop
insl
lea
add
inc
or
mov
mov
enter
dec
sub
xor
sub
fxch
mov
sahf
fnstenv
fwait
lahf
push
dec
xor
insb
nop
mov
pop
mov
dec
sbb
rcr
sub
add
movsb
jo
movsb
or
dec
or
add
mov
jl
rolb
jle
jae
mov
inc
push
rorb
jecxz
les
aaa
mov
test
test
and
fs
scas
dec
mov
data16
cmpsb
fisubl
push
clc
pusha
mov
dec
inc
sti
negb
jo
insb
fbstp
or
mov
sub
pop
mov
add
clc
bound
rorl
push
imul
lahf
jb
cmp
movsl
jne
xchg
je
fisttps
inc
shlb
push
je
fstpt
cs
xchg
push
or
xor
jp
insl
rcrl
stos
mov
mov
sub
sbb
jecxz
xchg
scas
dec
jno
mov
mov
lods
adcb
mov
scas
push
rcl
packuswb
cmp
fdivrl
lea
mov
popf
outsb
fwait
xchg
push
pop
dec
adc
mov
inc
in
pop
aad
dec
jno
fs
icebp
and
or
cmc
fsts
cmp
push
mov
outsb
cmc
sub
inc
bound
clc
inc
xchg
ror
into
mov
xlat
stos
ror
outsb
fnsave
mov
stc
stos
rcr
mov
loopne
mov
dec
fwait
mov
and
add
jecxz
enter
cmp
loopne
pop
push
xchg
add
dec
and
mov
ret
aas
add
lret
fs
adc
insl
add
xor
adc
jns
jmp
sahf
mov
lret
dec
sbb
leave
fadds
push
mov
dec
xchg
push
insl
mov
inc
push
test
pop
mov
lret
subb
mov
lds
pop
test
je
imul
mov
loopne
and
and
jbe
and
sub
cmpsl
loope
aad
mov
je
mov
jg
xchg
mov
lds
mov
pop
pop
xchg
fs
icebp
stos
movsb
test
and
xchg
sub
or
sub
jecxz
xchg
rcrb
add
jbe
lahf
push
andl
outsb
cmp
jp
push
fcomi
pop
or
in
cmp
sahf
mov
push
fstpt
cmp
and
xor
sub
nop
push
pushf
int3
enter
jae
les
cmp
call
jne
lret
movsb
clc
imul
or
js
icebp
cltd
push
mov
test
lock
fwait
jnp
aad
fcoms
aaa
icebp
cmpsb
xor
mov
push
fisubl
scas
xchg
rorb
push
mov
dec
ds
xchg
stos
add
out
leave
cmp
and
call
push
mov
and
fiaddl
dec
adc
sub
loope
or
ljmp
mov
or
jnp
jecxz
or
fs
mov
call
push
pop
mov
mov
and
push
repnz
stos
aam
dec
add
cwtl
test
inc
sub
pop
add
inc
pop
sti
daa
popa
hlt
fstl
cli
test
inc
jo
ret
lahf
push
mov
std
outsb
inc
push
stc
jne
nop
fwait
cmp
push
pop
pop
call
loopne
or
mov
js
jl
mov
inc
sbb
cmp
pop
push
xor
ret
das
pushf
jmp
cmp
popl
add
std
mov
pusha
imul
mov
mov
loope
pop
dec
lods
xchg
push
test
in
push
add
out
xchg
adc
inc
push
jmp
or
adc
or
gs
add
mov
push
lods
test
xchg
enter
mov
sti
push
out
and
sub
sbb
fsubr
sub
push
xchg
cltd
enter
push
jo
popa
notb
shl
shr
mov
xchg
and
test
mov
jns
pop
add
xor
push
cwtl
adc
xchg
mov
fldl
or
adc
add
mov
push
js
pusha
in
inc
mov
pop
xor
xor
out
and
jg
or
push
outsb
mov
out
jno
cmc
cld
movsb
add
xchg
pop
lret
rcr
pop
mov
inc
push
repnz
mov
or
xorl
xor
mov
rcl
cmc
xchg
pop
lahf
movsl
fst
lods
cmp
mov
rorb
mov
jge
lret
jecxz
ljmp
ljmp
sbb
adc
inc
movsl
and
fsubs
inc
into
cwtl
stos
mov
sub
cli
xor
je
mov
leave
jg
repz
dec
ret
lds
xor
push
loope
roll
ficompl
sub
mov
or
and
fldcw
mov
push
sbb
xchg
movsl
repz
jmp
pushf
jbe
dec
mov
aaa
sub
sbb
fstpt
jne
sti
test
fsts
and
enter
and
cmpsl
in
shrb
ficomps
jo
in
leave
insl
sub
ljmp
cmp
sub
cld
cwtl
add
sub
test
leave
xchg
jbe
sbb
aam
xchg
fucomp
dec
push
ficompl
mov
lock
cmc
lahf
inc
pop
mov
outsb
sbb
mov
cmp
lret
jle
pop
cmp
test
in
cld
jae
imul
mov
in
test
in
adc
fs
jp
lds
and
cmp
mov
in
insl
das
dec
push
adc
notb
jle,pt
xchg
or
xchg
mov
sbb
fucomp
inc
mov
scas
out
inc
jo
ret
imul
movsb
aad
cmp
out
negl
jp
fsubrp
cmpsl
cmp
or
enter
jbe
xchg
mov
lret
pushf
xchg
lea
negb
add
mov
sbb
and
cmp
test
mov
mov
inc
and
or
iret
ds
cli
or
std
lods
cmp
xchg
subl
adc
mov
cmpsb
fsubrl
gs
lods
aas
leave
dec
jmp
inc
mov
jb
pushf
je
pop
pop
push
out
pop
cmpsb
or
ljmp
xchg
aas
arpl
mov
lcall
pusha
hlt
jl
add
ret
sbb
fucom
xchg
adc
or
dec
mov
or
xchg
stos
ret
inc
addl
fstps
fwait
xchg
out
shll
test
mov
sbb
daa
ds
xchg
xchg
int
push
outsl
sbb
inc
test
xor
mov
mov
pop
addw
test
push
xlat
fldt
aaa
repnz
xlat
or
adc
addb
inc
out
lock
in
add
stos
clc
out
push
pop
sbb
dec
xor
test
or
dec
test
or
inc
mov
pop
and
in
gs
lret
push
lock
enter
dec
xor
stc
mov
cmc
xor
pop
pop
in
in
ret
stc
xor
inc
add
sub
jmp
push
mov
nop
lret
sbb
imul
lcall
fcomps
mov
dec
call
push
in
out
cmp
idiv
push
mov
idivb
fisubrs
push
int
fwait
std
pushf
or
in
jo
pop
stos
jo
sbb
inc
lods
xor
daa
sahf
cmp
push
cmp
xchg
dec
dec
and
ss
xchg
cmp
mov
aas
push
icebp
xlat
sbb
jno
cwtl
arpl
and
mov
idivl
clc
popl
mov
xchg
push
aas
dec
dec
mov
pop
mov
dec
sbb
mov
in
ffreep
sbb
das
add
xor
je
icebp
shl
cmp
arpl
cli
outsb
aam
sub
or
or
sub
xchg
mov
jmp
shrl
or
rcr
inc
mov
pop
je
lahf
jnp
and
enter
hlt
inc
movsl
sti
inc
sbb
push
sub
roll
arpl
push
fimuls
add
jb
ret
pop
xor
movsb
sarb
adc
insl
sub
inc
push
dec
mov
jge
pop
ret
inc
outsl
xchg
shll
and
cltd
sbb
push
dec
adc
jbe
inc
jp
push
clc
imull
aad
in
jp
jb
pop
addr16
mov
in
shlb
mov
loopne
pop
pop
mov
daa
adc
cwtl
xor
les
das
cmp
scas
and
xor
idivb
gs
pop
sar
lret
shl
rcrl
shlb
outsb
sub
aaa
mov
xchg
push
inc
lret
aad
or
mov
out
xchg
push
sbb
pop
mov
stc
xor
cmp
xor
je
add
inc
insb
xor
push
pop
call
or
sbb
mov
mov
sub
cmp
mov
out
mov
loope
shll
in
xlat
sbb
int
movsl
adc
imul
in
jmp
mov
js
test
xchg
cwtl
pop
sub
das
out
pop
dec
jmp
cmc
popa
adc
add
cmp
xchg
dec
test
ljmp
cltd
leave
dec
fistpll
daa
xor
lcall
mov
outsb
adc
add
sub
rolb
out
xlat
insb
out
cmp
mov
and
fildll
push
addr16
lock
imul
pusha
addr16
mov
repz
movsl
pop
push
aad
push
mov
xchg
cmp
adc
mov
dec
inc
fsubrl
fs
and
xor
lods
mov
push
xor
ret
lods
mov
or
mov
rorl
xchg
je
test
pop
adcb
fildll
es
or
aad
addr16
test
add
pop
adc
xor
mov
insb
and
sbb
mov
pop
dec
mov
pop
mov
and
jae
push
out
arpl
shlb
stos
lret
cltd
mov
mov
rcr
mov
jb
jp
jne
mov
inc
je
cld
sub
xchg
repz
mov
pop
xor
sbb
cli
adcl
iret
jp
hlt
cmpb
mov
or
and
leave
mov
pop
fstp
in
lcall
popf
xchg
cmpsb
roll
fnsave
xchg
cmpsl
and
and
aam
xor
test
inc
lods
xchg
outsb
jge
scas
inc
jno
shll
jnp
stos
pop
xchg
xchg
mov
cmp
mov
ss
ss
mov
and
add
adc
push
bound
shrl
cmp
push
cmc
xchg
fldz
iret
jbe
stc
cmp
outsl
mov
inc
arpl
inc
add
leave
add
inc
dec
insl
xor
shll
mov
cmc
pushf
loope
fcmovnu
fstps
dec
arpl
lock
nop
pop
call
cmc
lods
fisubl
jbe
fwait
es
xchg
pop
aad
xchg
adc
rcl
xor
int
dec
xchg
insl
stos
mov
je
repnz
in
pop
pusha
mov
mov
in
daa
sub
push
or
in
cld
fidivl
cmp
int
xchg
je
test
cltd
mov
out
and
test
cmc
jno
push
jns
lret
jmp
dec
cld
and
jae
pop
sbb
mov
sub
adc
mov
xor
mov
pop
mov
incl
add
push
andb
jle
leave
test
and
mov
ret
mov
inc
sub
nop
adc
scas
pop
rorb
and
sbbl
sub
je
and
aad
pop
stos
mov
enter
shrl
jno
dec
pop
popa
xchg
idivb
add
mov
cmpsb
pop
rclb
jbe
sti
sub
gs
jle
mov
add
jbe
xchg
or
rcrb
or
xlat
xchg
and
xchg
xlat
jp
dec
adc
test
test
orb
addl
jecxz
and
pop
mul
cld
pop
and
pop
sub
fisubl
inc
ret
inc
mov
inc
xor
es
jmp
cmp
lret
lret
fwait
pop
aas
pushw
and
test
xor
dec
adcl
sub
ljmp
fs
rcrb
js
or
roll
insb
push
cli
mov
cmpsl
aam
cmp
imul
divb
push
out
xor
or
fsubrl
das
test
jl
mov
fidivrl
mov
bound
in
mov
cmp
cmpsl
stc
movsb
adc
adc
incl
scas
and
les
sti
stos
icebp
cmp
and
sub
int3
nop
cmp
xchg
dec
push
inc
icebp
les
push
sub
sub
push
into
add
pop
mov
jns
lahf
cmp
movsb
ret
repz
xchg
push
mov
les
stos
sbb
cmc
adc
jns
test
mov
xchg
and
mov
cmp
push
mov
push
jge
es
push
lret
sbb
call
pop
pop
insb
xchg
mov
aaa
jle
jmp
or
pop
mov
mov
les
inc
and
sbb
mov
mov
enter
dec
cld
push
outsl
fildll
xchg
gs
sarb
add
imull
fnstsw
imul
add
fs
push
dec
add
mov
lcall
cltd
das
pop
dec
push
dec
xchg
call
rclb
inc
aas
and
rcrb
loope
lods
mov
movntq
dec
es
adc
inc
push
iret
jbe
cwtl
cmp
lods
aas
daa
addr16
sub
or
hlt
loop
dec
add
sub
in
mov
clc
pop
pop
sub
bound
bound
aaa
data16
shll
cwtl
in
ss
xor
sub
or
xchg
lock
mov
jo
pop
and
push
xor
cmc
andl
and
mov
adcl
push
xor
push
push
xor
lret
mov
xor
jle
repnz
and
ljmp
aaa
into
push
xlat
shll
inc
dec
popa
cmp
mov
shrl
sub
push
xchg
xor
pushf
cli
xchg
cmpb
push
test
cltd
sbb
mov
cmp
pop
mov
push
in
mov
add
cltd
and
mov
push
push
or
xchg
repnz
xor
js
test
jmp
out
cld
data16
sub
icebp
lcall
jo
inc
jnp
fdivrs
leave
fs
inc
or
test
lahf
enter
out
pop
jns
int
subb
in
mov
mov
lock
stos
mov
sbb
xchg
mov
xor
sti
push
fldt
out
insb
andl
xchg
inc
jle
jl
shll
cmpsl
in
mov
jne
mov
stc
mov
jmp
xor
cmpb
pop
push
out
jb
out
rcrl
or
js
dec
loop
out
mov
insb
inc
dec
out
or
or
je
dec
mov
test
inc
jnp
sarb
jl
scas
jl
ja
mov
pop
nop
sub
in
mov
mov
lret
xor
test
xor
mov
mov
aaa
sbb
lock
pop
mov
lea
mov
leave
or
dec
in
xor
add
cmp
mov
add
je
loop
outsb
dec
add
les
insb
cmc
mov
dec
test
xchg
les
pop
jne
cmp
mov
divb
test
dec
sbb
ja
sbb
xlat
sarb
out
jbe
push
xchg
xlat
sbb
cmp
dec
repz
push
cmp
and
call
mov
or
aam
push
cmc
jae
std
inc
xor
lock
pushf
pop
mov
mov
testb
test
xor
or
mov
fbld
mov
cmp
jno
mov
and
xchg
add
jg
imul
lret
aad
mov
pop
push
sbb
dec
xorl
sbb
push
xor
pop
je
pop
int3
pop
stc
inc
mov
mov
inc
push
mov
fwait
inc
mov
loopne
addr16
dec
rcrb
or
out
stos
in
iret
fnstenv
lret
imul
pop
pop
jecxz
mov
outsl
out
out
push
dec
jbe
pop
jmp
mov
out
mov
jge
push
cmp
add
xchg
jmp
and
xor
popa
xor
pop
add
pop
cld
xorl
shlb
dec
repnz
sub
popa
jg
add
push
outsb
dec
lock
stos
jp
fiadds
cmp
loope
xchg
jl
outsb
mov
jno
adc
adc
push
jp
popa
ret
mov
xchg
push
out
shlb
stos
sti
or
pop
dec
movb
and
and
test
push
push
and
mov
clc
daa
fcomp
enter
les
dec
jmp
enter
push
and
imulb
and
lods
pop
sti
or
fs
xorl
jecxz
sub
push
fists
stos
bound
inc
mulb
sbb
aad
push
sub
dec
mov
xchg
sub
cmp
xchg
pop
movb
jo
mov
or
xchg
inc
movsb
xchg
movsl
jae
sub
out
mov
pop
out
pop
fimuls
push
add
call
xchg
jae
adc
add
or
or
sbb
push
xor
insl
sbb
mov
xor
adc
dec
inc
cltd
add
lods
push
mulb
mov
cmpsb
add
cli
mov
push
mov
xchg
dec
mov
push
repnz
mov
sbb
movsb
dec
repnz
cmpsl
pop
andb
and
fildll
inc
push
sti
loope
mov
ja
loopne
adc
add
stc
push
xor
data16
or
mov
xchg
lods
adc
sti
std
pushf
push
out
jg
push
xchg
mov
in
cmp
cmc
or
push
xchg
pop
pop
popl
ficomps
xchg
mov
mov
mov
inc
inc
sbb
mov
pusha
pop
sbb
leave
movsb
ret
repz
pushf
jecxz
cmp
fcom
mov
sbb
ja
or
lret
lcall
jmp
in
or
loope
es
pushf
rcr
stc
mov
xor
xchg
test
push
in
pop
dec
or
repz
cmc
mov
adc
repnz
lahf
and
inc
es
imul
push
dec
lcall
add
les
nop
ds
mull
inc
std
stos
mov
es
std
in
push
and
jge
dec
js
mov
mov
xor
pusha
jge
sbb
mov
push
int3
rcrl
xor
sub
mov
cmp
add
sbb
fstpt
pop
shl
data16
addb
push
adc
lds
enter
inc
xor
out
jp
stos
mov
inc
cmp
inc
dec
push
push
outsb
pop
push
aad
inc
sub
or
push
cmp
sub
xchg
lcall
push
cmp
insl
imul
pop
pushf
xor
in
pop
cmp
mov
int3
test
jnp
mov
call
or
sbb
dec
xor
jne
icebp
or
pop
and
push
adc
sub
aad
sub
es
repnz
sbbl
dec
dec
push
xor
std
popf
xor
push
or
jne
rorl
pop
mov
xchg
or
pop
test
ret
movsl
std
pop
lea
insb
add
jo
sbb
out
test
std
pop
xchg
fwait
in
icebp
shlb
add
dec
pop
dec
jns
outsb
mov
sti
xchg
pop
fnsave
rclb
repz
test
dec
jnp
xchg
pop
movsl
jb
jns
daa
jge
xchg
push
pop
addr16
mov
jb
push
fiaddl
addb
or
mov
dec
push
mov
jno
lock
and
and
movl
and
push
xchg
mov
ljmp
adc
pop
sbb
xchg
sbb
mov
in
rcrb
call
cmp
inc
cmc
cmp
add
mov
popa
imul
push
sub
sub
dec
stos
cmc
mov
dec
sub
pop
mov
das
in
movsb
and
in
sbb
pop
sbb
and
jo
xor
mov
mov
push
cmpsb
pop
test
mov
ss
in
sub
push
adc
adc
lret
or
lea
lods
push
or
push
enter
dec
into
push
cmp
fdivl
jl
out
repnz
pop
leave
adc
mov
test
test
imull
push
sub
sub
xchg
sbb
dec
xchg
cli
lods
imul
adc
xchg
mov
stc
xchg
enter
pop
sbb
jp
insl
sti
inc
pop
repnz
cmpsb
fucomi
sub
test
push
push
es
inc
out
mov
pop
les
jb
cmp
mov
and
iret
sbb
sub
or
mov
pop
sub
and
arpl
pop
mov
xor
jbe,pn
mov
jno
imul
mov
mov
movsb
orl
and
fisttps
push
outsb
mov
inc
push
sbb
sbb
push
outsb
push
xchg
sbb
fisubrl
jbe
jno
subl
xchg
inc
popf
in
data16
add
sti
mov
and
in
inc
adc
pop
syscall
int3
jmp
sub
clc
shlb
pop
ret
mov
jecxz
pop
rorb
adc
testl
add
outsl
sahf
imul
popa
xchg
rcrl
mov
pop
cmp
js
and
pop
and
adc
mov
xor
cmp
cwtl
into
cmpb
lret
cmpsl
sbb
adc
push
insb
mov
xchg
out
sahf
int
adc
addr16
mov
je
dec
inc
jns
cmpsb
arpl
loop
xor
adc
add
mov
push
divl
jns
mov
ficomps
shl
sub
clc
mov
push
mov
imul
jno
sub
dec
lret
xchg
and
sbb
into
std
insb
les
lock
or
or
push
xchg
mov
nop
into
fidivrl
call
xchg
cmp
mov
push
push
push
mov
pusha
push
iret
int3
iret
je
sub
repz
dec
lcall
jns
and
test
ret
pop
xchg
js
push
adc
pushl
pop
jp
push
jo
jp
add
xchg
movl
cmp
sbb
mov
scas
test
push
mov
imul
push
ret
mov
loopne
sbb
int3
push
cmpsb
aaa
js
add
mov
pusha
push
incb
add
aaa
mov
xchg
jno
idivb
imul
xchg
xchg
cwtl
gs
es
jnp
and
in
stc
test
mov
into
push
sahf
cwtl
loop
lock
mulb
imul
lock
cmpsl
out
sub
lds
jg
int
cmp
lea
xchg
leave
and
adc
ja
rol
mov
ds
movsb
mov
jne
mov
dec
push
rcrb
daa
add
cli
mov
cmpsl
xorb
mov
add
cmp
pop
stc
cltd
sbb
dec
stos
adc
insb
mov
icebp
outsb
adc
mov
ret
mov
ret
adc
lret
shl
xchg
call
or
pop
lahf
xlat
gs
xchg
mov
ret
rcr
cs
nop
fisttpl
add
sbb
jne
jne
xchg
dec
mov
sbb
adc
mov
enterw
mov
add
sub
ljmp
scas
bound
mov
leave
sbb
and
test
jmp
xchg
mov
sbbl
push
xor
pushf
cmp
shll
lcall
aas
mov
pop
and
mov
call
xchg
mov
iret
hlt
mov
mov
sbb
repz
sbb
movsl
sub
mov
jl
pop
repz
ja
iret
dec
sbb
xchg
inc
mov
imul
call
mov
or
mov
adc
fiaddl
xchg
and
and
mov
cmp
xchg
into
loop
jmp
js
stc
mov
pop
jno
es
cwtl
sub
bound
sub
cmpl
push
insb
pop
cld
outsb
and
dec
es
arpl
and
mov
les
roll
je,pt
out
subl
fbstp
dec
mov
xor
jb
addr16
cs
arpl
fdiv
cmp
loop
add
call
lahf
adc
sbb
xchg
fdiv
cmpsb
sbb
inc
adc
daa
ret
scas
testb
popa
repz
fcoml
sti
insl
and
pop
pop
mov
repnz
in
pop
aaa
or
loope
daa
fdivrl
add
sub
sub
add
cmp
cmp
divl
add
sbb
movsb
inc
sub
fmull
mov
int3
sbbb
fwait
cmp
mov
sarb
or
mov
cmp
pop
sub
lock
jp
subb
xor
mov
shll
mov
cmp
rorb
mov
pop
jns
js
test
add
cs
addr16
dec
jns
and
mov
out
jno
xchg
adc
loope
and
orl
popa
aaa
sti
inc
mov
out
xor
cmp
jno
and
mov
aaa
inc
push
cmp
out
sbb
nop
and
call
sub
loope
fidivrs
xchg
push
cmp
xchg
dec
insb
mov
popa
dec
dec
imul
xor
cmp
add
jg
mov
xlat
sub
cld
inc
ljmp
clc
loopne
sarl
jle
dec
incl
jne
xor
lcall
sahf
sub
out
arpl
mov
out
loope
mov
sbb
popa
dec
data16
scas
cmpsb
mov
jle
mov
dec
jb
imul
xchg
and
jg
push
int
enter
int3
bound
pop
sub
jne
sub
jle
shr
shrb
leave
or
scas
dec
std
pop
and
pop
enter
and
xchg
or
pushl
std
ljmp
mov
leave
incl
shl
jecxz
repz
sbb
pop
dec
sarl
inc
stos
adc
mov
insb
sub
mov
sub
xchg
push
jecxz
jb
and
std
cli
inc
rorb
out
popf
mov
stc
lahf
adc
mov
aam
je
or
iret
mov
inc
lcall
mov
inc
bound
out
fisubl
jmp
cmp
pop
arpl
fildl
aas
jne
mov
push
jle
sbb
mov
push
mov
sahf
add
fisttpll
pop
scas
fucom
cmpsb
mov
and
ds
xor
ljmp
test
pop
outsb
jg
mov
sbb
xchg
repnz
adc
mov
sub
pop
lret
inc
dec
ret
pop
jb
jmp
jge
cmp
rcr
outsb
pop
popf
into
mov
xlat
daa
cmpb
cmp
bnd
cmp
rcl
mov
mov
mov
movswl
fisubrs
mov
cli
jp
fsubl
cs
lahf
inc
sub
mov
push
mov
in
sub
add
sub
inc
push
push
xchg
sbb
adc
and
pop
xchg
xor
sub
mov
sbb
stc
dec
dec
cmpsl
stos
test
aam
ficompl
dec
xor
xor
push
outsl
dec
or
mov
sbbb
je
cmpb
and
idivl
sbb
dec
xchg
mov
repz
adc
xor
loop
mov
je
insl
mov
mov
sub
mov
mov
leave
and
add
lret
int3
dec
jl
xlat
mov
sub
ljmp
insl
mov
sarb
xor
pop
aam
es
cmp
adc
cmp
pushl
stos
jno
and
xchg
out
in
cli
js
aad
out
cltd
std
aad
out
and
pusha
mov
push
movsl
and
hlt
xor
pushf
pop
stc
popa
mov
call
in
pop
mov
test
mov
sub
in
lret
int3
movl
xor
int3
out
add
sbb
loop
pop
xor
sub
mov
scas
mov
adc
shl
aaa
das
int
xor
sbb
andb
movsl
insb
adc
sub
stc
mov
jne
stos
loopne
sub
cmp
xor
adc
push
sbb
call
cmp
xchg
repz
mov
fs
aaa
cmp
icebp
push
dec
dec
cmpsl
cmpsl
loope
mov
lahf
jecxz
jge
out
jle
loopne
push
push
push
add
stc
push
arpl
xor
and
mov
mov
mov
mov
lock
pusha
inc
or
mov
xchg
xor
out
fistl
or
xchg
in
add
loop
rcrb
adc
dec
mov
mov
pop
and
inc
xchg
push
test
add
xor
mov
ret
pop
aaa
test
cld
mul
insb
fcmovbe
xchg
push
into
movsb
orl
mov
mov
mov
call
sub
mov
pop
sub
jg
sbb
inc
fisttps
cltd
pushf
push
sub
adc
sahf
repnz
in
in
jno
mov
jge
data16
mov
aad
je
adc
or
inc
into
scas
xchg
sarb
stos
fildl
jae
aam
jo
mov
sub
dec
fbstp
rolb
in
movsb
push
in
cmp
rcll
adcl
leave
mov
sub
rcrl
and
cmc
pusha
sbb
xor
push
inc
roll
adc
sub
pop
mov
jb
aaa
test
mov
in
push
jle
jmp
xchg
mov
mov
dec
mov
fcoms
call
lahf
sti
hlt
insb
jg
movsl
jnp
adc
mov
or
in
sbb
add
push
xchg
fisttpl
lods
in
mov
out
mov
pop
rcr
fsubl
insb
leave
xor
xchg
mov
ljmp
insb
adc
out
push
aam
xchg
sub
mov
sub
icebp
xor
mov
shrb
jnp
and
je
popf
cmpsl
jmp
mov
sub
ffree
push
cmp
or
out
cwtl
stc
inc
or
fwait
divb
outsb
sbbb
sub
jb
mov
sub
lods
das
cmp
arpl
inc
rol
dec
std
clc
cltd
sbb
pop
push
in
push
sbb
rorb
shll
in
cmp
nop
sahf
mov
cmp
js
jg
bound
std
shll
shlb
dec
sbb
test
call
repnz
mov
push
dec
pusha
xor
arpl
test
cmpsb
sub
mov
dec
push
test
enter
neg
loopne
cmp
shlb
rorb
and
inc
ret
push
dec
jae
in
insl
pop
neg
or
ss
xor
fdivr
or
cmp
scas
adc
aas
cs
jne
sub
addr16
loopne
inc
inc
shll
inc
dec
jle
clc
push
mov
inc
xor
push
pop
roll
inc
and
loop
repz
cld
sbb
sbb
fsubrp
sbb
sbb
add
addr16
movsl
push
and
xchg
mov
pop
icebp
pop
push
sbb
cli
push
push
jmp
imul
xor
dec
sahf
dec
push
cmp
xchg
clc
popf
mulb
mov
test
aas
xor
pop
pop
inc
rolb
add
sbb
inc
sbb
dec
jae
in
in
push
sub
outsl
pop
sub
jb
out
clc
imul
sahf
cwtl
cmp
xchg
cmp
jae
sub
cmpl
sub
in
outsb
mov
inc
fnstcw
push
cld
pop
in
subb
add
mov
cmp
dec
test
mov
mov
sarl
push
jne
push
and
push
sbb
testl
jl
xchg
ret
shlb
stos
pop
cmpsl
jg
das
cmpsl
adc
and
popa
sub
mov
xchg
test
dec
lods
jae
cwtl
ljmp
jg
inc
mov
fdivrp
xor
pop
andl
rolb
les
stos
push
loope
add
or
dec
loop
and
sbb
mov
sbb
cmp
mov
cli
cld
jb
sbb
jb
push
loop
ljmp
mulb
add
int3
xor
aaa
or
mov
mov
sub
sub
dec
arpl
add
test
fisttpll
mov
and
and
sbb
repnz
rcl
lds
ds
pusha
jmp
or
loop
arpl
arpl
test
adc
lock
adc
out
push
dec
std
and
scas
pop
subl
and
dec
or
sbb
mov
lods
or
push
aad
mov
lea
and
ljmp
int
adc
in
sbb
les
adc
push
int3
sahf
inc
insl
je
dec
js
lret
ss
pop
lods
cli
or
mov
mov
push
pop
sub
mov
insb
in
enter
or
test
call
scas
test
cmc
mov
xor
dec
cli
cmp
cmc
sub
push
sub
pop
add
int3
push
mov
mov
gs
arpl
jo
adc
push
push
call
jbe
popa
dec
in
xor
jbe
pop
shr
call
roll
lods
in
add
adc
movsl
xchg
mov
add
movsl
mov
mov
cli
fistl
shll
out
jecxz
fcmovne
xor
negl
daa
pushf
cmp
mov
add
ljmp
mov
fs
dec
sbb
and
adc
fcoms
cmp
cmp
or
iret
call
adc
cld
jle
xchg
mov
xchg
daa
pusha
pop
lcall
les
inc
sbb
in
into
shrl
outsb
cmpl
testb
sbb
add
add
aam
inc
xor
dec
sti
movb
daa
push
in
jmp
xchg
add
aas
enter
shlb
cmp
sti
movsb
pushf
pop
pop
ret
arpl
mov
movsb
aad
loope
jae
call
lods
je
test
dec
adc
ds
pop
or
nop
lods
rcrl
out
divb
lds
lock
mov
movsb
faddp
jle
add
jg
mov
add
sbb
ljmp
out
imul
and
or
ret
dec
cmp
push
loope
iret
sub
pop
or
addb
popf
addr16
xchg
outsb
les
xchg
mov
rcrb
imul
insl
fistps
call
push
cld
scas
popa
mov
repz
in
push
sbb
dec
adc
cmp
dec
inc
or
stc
adc
aad
push
pop
sub
pop
dec
and
mov
or
push
sahf
pop
rolb
mov
mov
jb
xor
pop
mov
cld
popf
jb
pop
or
inc
inc
or
movsb
decl
cli
ret
or
enter
mov
hlt
push
dec
mov
lret
rclb
inc
push
incl
int
xchg
pop
roll
andl
xor
jecxz
pop
addl
and
push
mov
popa
sub
mov
xchg
sti
jle
mov
mov
mov
and
inc
xchg
call
sar
inc
aaa
and
movsb
je
or
or
pop
dec
add
or
cli
dec
adc
shll
pop
into
in
pop
mov
popf
pop
stos
ss
dec
adc
rolb
jg
xchg
ljmp
mov
pop
aam
jno
sbb
outsb
mov
gs
pusha
push
orb
and
popf
inc
dec
test
icebp
das
add
push
stos
ret
push
in
outsb
or
jg
mov
inc
mov
ljmp
pop
stc
mov
mov
cmpsl
xchg
roll
les
adc
cmc
xchg
xor
loope
cmpsl
pop
fnstcw
decb
das
popa
adc
rolb
fwait
mov
aad
mov
leave
inc
out
mov
dec
into
dec
mov
jmp
push
jle
ljmp
mov
jmp
loop
jg
mov
xor
xchg
cmp
test
cmp
pop
pop
adcl
out
cmp
xorb
add
or
push
jbe
out
sbb
int3
mov
and
lds
xor
pop
add
sbb
mov
adc
xor
xchg
fldcw
adc
rolb
xchg
mov
or
lret
fwait
cli
or
sbb
push
sub
adc
cwtl
xor
iret
xchg
dec
dec
lahf
scas
fs
xor
xor
jg
mov
xor
jp
adc
iret
or
aaa
cli
push
shufps
mov
pop
mov
ds
arpl
mov
jbe
cmp
and
inc
stos
mov
int
and
jb
jl
shl
outsl
or
lret
rcr
inc
lea
xchg
sbb
cmpsl
mov
movsb
mov
mov
jnp
and
push
fisubl
dec
or
and
dec
push
insl
or
mov
arpl
and
or
push
cltd
sar
je
xchg
cmpsb
data16
aam
sbb
nop
ja
aad
xlat
rcl
pop
push
insb
jae
jnp
aaa
cmpsb
sarl
cmp
push
cmpsb
mov
sub
insb
call
cmp
enter
dec
fisttps
insb
sub
pushf
mov
jmp
mov
xlat
call
aaa
imul
add
sub
pop
push
xor
push
jecxz
pop
sarb
repnz
ljmp
cmc
dec
adc
out
and
dec
push
sub
in
in
outsl
inc
xchg
sub
mov
mov
push
xchg
xor
sbb
adc
xchg
push
inc
scas
loopne
cmp
pop
fucom
cltd
out
mov
jnp
int3
jle
bound
mov
mov
cmp
dec
xor
sahf
loopne
dec
shrl
sbb
xor
in
cmp
popa
jns
shll
mov
mov
and
cmpsb
cli
sub
and
or
add
and
out
imul
cmp
xor
sub
out
fwait
adc
inc
push
dec
lock
xchg
bound
idivl
jecxz
and
das
add
into
jmp
dec
dec
aad
das
sbb
mov
icebp
in
xor
jl
daa
mov
test
cmp
out
mov
adc
sbb
and
mov
roll
js
pop
arpl
popf
dec
es
add
add
pop
xor
scas
shrb
lahf
sbb
jg
ret
test
lods
add
fstl
mov
inc
ret
push
call
sub
es
rcll
and
xchg
xchg
mov
cmp
out
mov
mov
and
pop
pop
mov
push
push
mov
inc
adc
mov
and
shlb
sub
push
add
clc
pop
aad
xchg
mov
push
mov
sub
mov
test
push
and
dec
cltd
into
xchg
nop
pop
sbb
aad
dec
subb
xchg
jo
cmp
mov
popf
push
insb
imul
jo
sbb
jne
ret
fsubs
mov
lahf
inc
sahf
sub
shlb
in
mov
lods
shlb
sti
insl
into
or
out
scas
inc
pop
or
or
xor
cmc
fwait
jmp
cli
mov
push
ljmp
mov
pop
pushaw
or
in
mov
pop
sbbb
insl
cmp
pop
bound
cmp
mov
out
pop
ss
call
ret
cmpsl
xlat
pop
pusha
mov
jmp
inc
pop
fidivl
scas
adc
pop
ds
ds
pop
inc
frstor
mov
cmp
xor
push
push
and
mov
mov
fstps
sub
test
adcl
cmp
mov
push
xlat
jmp
repz
push
push
sub
cmp
add
fldenv
sbbl
mov
lods
jle
ret
mov
dec
ss
outsb
add
cmp
xchg
adc
outsb
cmp
out
shrb
or
lret
bound
push
sub
jp
or
mov
adc
mov
clc
sahf
jl
loope
cmc
push
push
push
inc
push
inc
xchg
xor
lds
lods
adc
pop
xor
or
pushf
loope
push
fistpl
out
xor
jo
adc
ds
dec
test
pushf
add
jmp
sub
mov
ljmp
ror
sbb
jno
sub
fists
out
inc
and
in
fstps
int3
cmp
das
inc
ret
sub
xchg
push
cmp
sahf
test
jmp
sbb
push
dec
test
adc
push
or
int3
std
inc
mov
push
in
out
out
push
adc
jne
sti
ret
shlw
imul
dec
sub
lock
jne
fmulp
mov
out
and
cmp
xchg
xchg
jge
mov
inc
ret
ret
decl
cmp
push
push
xor
cmpsb
mov
mov
push
sub
aad
dec
sahf
push
rorb
ret
xor
and
cmp
cmc
jge
aaa
mov
bnd
pop
outsl
sub
aam
lea
and
dec
pusha
aas
or
arpl
out
movsl
mov
xor
push
dec
icebp
call
mov
stos
imul
xor
jns
mov
cmp
loopne
lahf
notb
lahf
ss
or
dec
and
jbe
fadds
adc
adc
cmovp
lea
stos
jbe
mov
hlt
popf
mov
jb
les
dec
lock
outsl
adc
xchg
cli
xchg
push
cmp
outsl
xchg
xchg
gs
lea
shll
mov
sbb
sbb
loope
movsl
mov
loope
xor
cmp
pop
fidivrl
jns
xor
cmp
fistpll
xchg
ret
lods
into
sbb
aaa
sub
mov
xchg
mov
loopne
leave
xchg
gs
and
or
es
fucomip
icebp
gs
adc
cmp
aas
in
add
mov
pop
das
sub
or
mov
add
add
adc
insl
push
jbe
push
arpl
mov
fiaddl
outsl
nop
cmpsl
sbb
gs
sbb
pop
cmpsb
mov
aas
push
fisubl
push
pop
push
sbb
mov
xor
out
fildll
xlat
aam
call
sbb
sub
add
in
data16
les
lock
dec
add
mov
in
imul
mov
mov
mov
and
loopne
mov
arpl
jecxz
mov
out
shl
pop
icebp
xor
int3
insb
push
pop
add
mov
pusha
sbb
mov
mov
mov
adc
inc
mov
jecxz
rcrl
rolb
adc
and
mov
in
or
mov
cmp
lds
cli
stc
call
sub
mov
mov
pop
in
test
adc
xchg
fcomps
cs
and
sbb
sub
les
test
jmp
xchg
jb
cmp
xlat
xchg
push
mov
pushaw
sbb
cmp
pop
mov
pop
push
shl
sahf
loope
bound
cs
arpl
call
or
jecxz
cmp
lods
inc
out
xchg
or
decl
in
addl
loop
inc
mov
daa
sbb
int
push
mov
outsl
lea
sbb
aam
cmpl
mov
idivb
push
in
dec
stos
mov
cmp
paddusw
mov
adc
lahf
fs
and
cmp
push
mov
in
mov
mov
mov
and
jne
insl
adcl
fbld
xchg
fsubrp
add
push
fs
ja
mov
inc
sub
cmp
icebp
cli
push
dec
movsl
nop
add
psubq
adc
push
aam
and
push
jp
gs
mov
int3
xlat
mov
and
adc
fistps
inc
xor
mov
stc
aaa
dec
dec
jg
dec
mov
rcl
scas
dec
xchg
adc
sub
xor
cmp
sbb
icebp
enter
test
push
fwait
popa
sbb
mov
lods
dec
jnp
out
out
loopne
popa
out
lock
cmp
sub
add
test
adc
lret
iret
das
into
xchg
jae
cmp
push
pop
sbb
stos
and
jb
mov
mov
popa
fimull
test
popf
ret
and
test
cmp
sbb
inc
fistpl
push
pop
mov
xchg
jge
jg
jb
and
bndstx
ficompl
adc
aam
or
lea
xor
mov
negl
and
push
rorl
fwait
bound
rcl
inc
mov
sub
dec
mov
add
mov
inc
inc
inc
xor
testl
adc
sub
mov
mov
lret
fmull
jne
fcoms
out
mov
jp
nop
and
mov
scas
dec
fildl
mov
mov
js
scas
lahf
int3
sub
scas
xor
push
pop
ret
xchg
push
or
or
mov
pop
push
outsl
ret
ret
es
xor
mov
cmc
dec
mov
fwait
inc
inc
xchg
sub
lcall
jo
jmp
xor
add
inc
sbb
mov
push
and
leave
leave
icebp
or
sub
jbe
add
nop
dec
mov
out
leave
jl
pop
clc
xchg
xchg
negl
outsb
xchg
stos
clc
jle
cwtl
js
out
loope
xorb
sub
and
jne
push
fwait
mov
popf
scas
sbb
fwait
out
jo
iret
ljmp
call
jae
jno
pop
ret
mov
and
mov
lods
sub
mov
inc
xchg
sbbl
xchg
lock
icebp
es
mov
lret
jge
adc
lret
sub
aam
sub
in
inc
movsb
lea
add
shlb
adc
mov
mov
sub
scas
mov
in
cmp
jecxz
adc
add
xchg
jbe
fs
mov
mov
sub
xchg
stos
out
in
cld
dec
jle
in
xor
cli
push
pop
jmp
or
adc
out
and
pusha
push
dec
push
mov
mov
xor
int
xchg
cmpsb
and
sti
ds
fisubrs
std
js
sbb
mov
pop
popa
daa
shr
mov
mov
or
loop
jbe
mov
sub
cmp
subb
stc
fdivrl
fistps
psubusb
add
aad
cmp
xchg
jne
out
in
bound
push
cmp
xor
inc
cmpsl
ljmp
insb
lea
jge
aaa
mov
sub
loope
scas
addb
shll
das
flds
lods
mov
mov
xchg
dec
in
sub
mov
lods
test
test
rclb
arpl
sbb
mov
inc
push
arpl
mov
jb
xchg
pop
push
fnstsw
mov
sub
xor
cwtl
daa
sbb
ja
test
scas
lock
jp
test
jb
cmp
dec
push
loope
test
das
addr16
cli
dec
cld
pop
jns
mov
inc
push
jns
cmc
lock
cmp
data16
cmp
xchg
jl
jg
and
pop
dec
mov
js
xchg
dec
test
sub
lretw
mov
in
push
cld
jl,pn
ds
in
movsl
callw
xchg
mov
cs
daa
jns
xor
popf
jl
sti
shrb
les
lret
inc
pop
in
ss
dec
lods
jmp
xor
mov
sti
outsb
pop
js
loop
arpl
lock
add
xchg
jecxz
or
addr16
adc
nop
nop
cltd
roll
and
push
xchg
jo
mov
add
stos
ss
sub
lock
adc
mov
lock
fcomps
out
jmp
dec
aad
rcrb
jl
fistl
cmp
and
xchg
inc
out
jns
in
mov
xlat
lock
xor
aad
js
pop
or
ss
dec
jo
std
pusha
pop
lods
mov
rclb
aam
sub
sti
mov
imul
mov
out
test
pop
sub
dec
mov
sbb
rcrb
jnp
loop
mov
stos
aas
and
mov
push
fiadds
inc
mov
mov
outsb
push
movsl
loop
in
dec
mov
mov
sbb
bound
imull
mov
pop
mov
push
adc
push
mov
sar
sbb
dec
cmp
sti
lcall
pop
mov
pusha
xor
adc
aas
mov
pop
sbb
das
je
dec
pusha
out
xor
sbb
mov
ss
cmp
lock
popa
push
dec
out
xchg
sbb
jbe
xchg
pop
or
push
sbb
mov
jns
mov
mov
pop
pop
mov
jg
add
fsts
ljmp
mov
aaa
mov
push
jbe
push
adc
out
cmp
inc
imul
or
je
sub
adc
clc
pusha
inc
pop
lds
mov
push
aaa
or
cmpsb
in
icebp
cmpsl
popf
je
add
pop
mov
pushf
mov
lret
shll
or
jp
aaa
inc
jge
add
sahf
xor
sub
mov
jg
int
pusha
sub
int3
pop
loope
cmp
add
mov
aaa
imul
xchg
cs
mov
jl
aas
jae
jne
scas
mov
pushf
mov
cld
xor
pop
movsl
adc
fisubrs
imul
mov
enter
dec
adc
jge
mov
push
incb
xorl
stc
inc
std
mov
in
cwtl
adc
fdivs
jmp
pop
adc
push
ret
das
daa
addl
dec
outsb
cmp
mov
pop
mov
mov
mov
cmp
mov
mov
mov
push
adcb
stos
cld
out
addl
fld
out
add
mov
popf
mov
ret
hlt
out
or
jno
pop
fmull
sub
fnstcw
das
xor
lock
clc
rorl
fdivrl
das
mov
sbb
mov
xchg
cs
or
movl
loopne,pn
jb
and
repz
jle
xchg
push
push
jae
dec
sub
pop
mov
das
add
or
pop
and
mov
dec
aad
sbb
and
mov
dec
inc
push
call
cwtl
lods
mov
xor
leave
sub
jne
sbb
fcmovnb
into
movb
out
cltd
out
xchg
mov
rol
rorl
mov
adc
bound
jecxz
mov
out
xorl
jne
jnp
sbb
and
insb
repnz
jg
push
cmp
in
rcl
ret
xchg
jb
mov
outsb
ss
cwtl
cmc
mov
cltd
mov
fcompl
mov
mov
jle
jmp
fidivrl
shll
or
orb
lods
stos
jl
push
xor
add
mov
mov
into
xorl
loopne
xor
pop
fisubs
sbb
fstps
mov
cmp
inc
mov
mov
enter
repnz
add
jne
sbb
lret
mov
loopne
hlt
mov
ds
mov
test
sbb
xor
subb
push
leave
xor
movsb
imul
mov
jge
mov
ds
and
neg
mov
mov
jp
data16
dec
loop
sub
push
inc
sub
sysexit
in
mov
dec
xor
iret
fneni(8087
mov
or
xchg
mov
aam
xchg
xor
fidivl
jnp
call
adc
jg
stos
push
jnp
cltd
inc
push
or
pop
sbb
push
fstl
mov
cli
or
xchg
mov
bound
or
push
shll
inc
out
mov
xorl
push
push
adc
mov
mull
cmp
mov
clc
inc
mov
cmpb
daa
cwtl
pop
sub
ficompl
or
rorl
shlb
jo
cmp
es
mov
mov
push
out
ds
push
dec
cmp
cmp
sub
ljmp
insl
sbb
xor
fsubr
xlat
push
xor
jno
cmc
cmpsb
insb
xor
sbb
pop
ja
mov
inc
dec
cmp
mov
popf
jmp
stos
sbb
lcall
push
outsb
jecxz
sub
fldenv
inc
inc
mov
subl
push
movsb
repnz
scas
pusha
rcrl
dec
mov
ja
push
movsl
xchg
wrmsr
cmp
fisubl
dec
push
hlt
js
arpl
jl
rcrb
add
jne
nop
andl
lods
jbe
pop
cltd
adc
mov
sahf
vsqrtss
push
ja
jge
pop
jge
jb
push
xchg
dec
push
in
nop
mov
out
dec
scas
add
insl
and
push
xchg
pushf
fwait
test
jp
push
xchg
gs
fildll
insl
mov
pop
orl
mov
mov
sbb
repnz
add
je
in
push
adc
aad
in
xor
pushf
idivl
sbb
adc
pop
mov
xchg
subb
cmc
std
lahf
xor
aam
dec
dec
mov
js
lret
daa
cwtl
fldt
or
fdivrl
js
out
es
cmp
xlat
adcb
std
pop
add
mov
orb
fisttpll
popa
pusha
in
inc
lret
cmpsb
xlat
or
sahf
jb
imul
sbb
dec
adc
pop
xor
push
push
mov
dec
mov
shrl
add
ret
xchg
sti
push
add
fstpt
lahf
inc
stos
out
sub
jg
lret
pop
sub
cmpsb
pop
stos
adc
cmpsb
xchg
jbe
jno
push
mov
cmpsb
push
push
jge
and
jo
xchg
push
and
jne
iret
lcall
mov
or
mov
arpl
jns
insb
sub
addr16
sahf
push
insb
aas
enter
xchg
and
fwait
cwtl
xchg
adc
sub
rorl
or
cwtl
mov
out
jae
sub
cltd
cs
cmc
mov
pop
shll
hlt
dec
lods
ljmp
and
sub
xchg
push
nop
stos
movsl
lret
bound
iret
pop
fidivrs
and
stos
add
jae
leave
inc
push
cltd
cmp
dec
mov
test
mov
scas
xor
mov
pop
iret
dec
pop
xchg
lahf
daa
mov
test
or
imulb
sub
arpl
ja
pop
adc
clc
iret
add
and
or
inc
jecxz
insb
pop
push
jmp
out
adc
orb
sbb
dec
push
dec
and
xchg
lcall
mov
push
repnz
inc
lock
in
mov
popf
pop
pop
cltd
inc
sbb
aas
mov
popf
pop
dec
or
rcrb
add
xchg
mov
adc
and
jae
pop
xor
mov
fwait
inc
pop
and
out
sub
ds
or
and
out
lods
outsb
es
fdivs
mov
dec
pop
push
out
in
push
loopne
jge
dec
mov
xchg
sahf
pop
sub
push
mov
dec
xor
sahf
pop
adc
je
sbb
mov
jne
out
adc
or
leave
jmp
ss
push
xor
mov
sub
sbb
movsb
xchg
inc
adc
out
pushf
nop
or
mov
roll
and
xchg
sbb
or
rcll
ljmp
fsubs
xchg
test
mov
or
in
sti
scas
icebp
imul
in
hlt
push
les
neg
in
cli
dec
push
push
xchg
inc
dec
mov
mov
sub
imul
push
cmp
ja
sbb
xchg
pop
pop
add
xchg
testb
sahf
sbb
push
jg
sub
movsb
mov
sbb
subl
fs
movl
std
add
sbb
and
xchg
xchg
sbb
daa
lods
inc
jp
in
mov
std
mov
daa
out
out
jno
adc
inc
in
orb
jge
xor
fwait
pop
into
hlt
fdivs
nop
je
fwait
aam
sahf
push
mov
stos
push
test
mov
sbbl
add
ds
into
push
test
movl
lahf
jecxz
lcall
add
and
jo
shl
ja
pop
jnp
fistl
mov
stos
push
jo
aam
cmp
sbb
jp
popf
add
dec
mov
mov
push
pushf
xchg
sarl
add
add
pop
stc
dec
inc
push
mov
lods
mov
lds
ds
mov
sbb
and
or
sub
dec
dec
xchg
cmp
xchg
xchg
das
and
scas
scas
lods
xchg
popf
insl
mov
aaa
idiv
xor
mov
xor
sti
int3
fldcw
out
push
dec
adc
sbb
popa
sub
roll
ja
pop
pop
subb
or
out
scas
or
and
mov
push
mov
adc
dec
into
xor
aaa
xlat
movsb
xchg
push
iret
lods
rcrl
dec
lret
push
pop
add
repz
jl
sub
and
sub
fadds
jmp
jp
adc
subl
out
int
roll
int3
adc
lods
lret
and
push
loop
sbb
pop
sbb
ja
ds
rcl
pusha
jnp
in
sub
xchg
inc
lods
hlt
adc
daa
mov
adc
lahf
push
and
mov
loop
mov
sahf
je
ljmp
imul
push
repnz
inc
in
mov
push
sbb
je
pop
arpl
mov
fwait
cmpb
jg
test
jno
adc
jmp
inc
sbb
sub
jb
in
mov
fisubs
into
inc
loopne
cmpsb
outsb
sub
sub
mov
sub
adc
inc
cwtl
pop
out
lahf
cmc
fwait
jge
mov
pop
and
pop
adcl
adc
pop
pop
outsl
sub
jns
push
xor
lea
xorb
and
xchg
ja
mov
test
jns
push
dec
mov
divl
pop
jge
gs
and
mov
out
repnz
rcrl
push
in
mov
popf
mulb
loop
mov
sbb
test
negl
and
lock
jbe
push
mov
jp
push
lods
xchg
sbb
pop
cltd
push
xchg
les
stos
lcall
pop
inc
adc
outsb
test
inc
xchg
push
stc
jmp
andb
cmp
dec
jno
mov
rcl
movsl
mov
jp
or
xor
dec
dec
fwait
rcrb
jle
faddl
add
rcl
out
add
add
imul
nop
pop
dec
xchg
mov
dec
and
jle
std
and
cmp
xor
into
push
jg
push
mov
pop
stc
arpl
inc
fnstsw
sbb
cmp
mov
gs
in
into
sub
and
popf
push
lahf
incl
mov
cli
sbb
repnz
cmpsb
int3
jmp
mov
cltd
xchg
push
lea
xchg
xchg
cltd
pop
cmc
xchg
jbe
jmp
imul
test
jo
repz
movsl
sbb
xchg
in
xchg
cmpsb
hlt
insl
into
inc
adc
fidivs
sub
pop
out
cmp
pop
inc
xor
pop
aad
outsb
cmp
imull
rclb
jne
fdiv
jo
mov
push
test
xchg
xor
ret
popf
fcmovnbe
cmp
std
or
lea
es
mov
push
popf
icebp
insl
cltd
mov
xchg
iret
xchg
and
jae
pop
outsl
in
xor
sahf
sti
leavew
jno
nop
mov
rclb
lahf
push
cmp
lods
xchg
mov
push
pop
ror
cmp
mov
jg
pusha
mov
sub
mov
inc
jo
jb
imul
mov
scas
xchg
xor
inc
das
out
out
loopne
jp
lods
adc
dec
test
and
shlb
cmp
das
cmp
push
dec
leave
stos
pop
stc
dec
push
stos
popf
or
adc
xor
jecxz
xor
rcl
subl
pop
push
mov
push
pop
xor
outsb
fisttpl
cmp
push
or
sub
loopne
ss
inc
out
subb
cmc
sti
push
test
inc
push
addr16
aad
mov
cmpb
jns
repz
ss
rcrl
pop
jbe
daa
call
loope
icebp
mov
xchg
in
cmp
loop
mov
xchg
sub
mov
mov
lret
xor
sub
xchg
ss
jl
movsb
ficoml
mov
test
cli
in
and
jg
cmp
jnp
adc
pop
les
ja
shrl
das
jecxz
call
inc
adc
sbb
outsl
add
outsb
push
inc
xor
jecxz
jbe
dec
jmp
loope
lock
push
and
inc
jnp
inc
fsubl
xlat
sub
pushf
roll
cwtl
nop
test
int
sahf
pop
dec
pop
mov
enter
and
pop
push
mov
mov
jle
movsl
aam
mov
repz
cmp
scas
stc
cmp
lods
sbb
sbb
dec
add
mov
sarl
ja
sub
aam
sbb
jo
ret
mov
inc
pusha
outsl
fimull
ret
and
mov
sub
mov
mov
cli
cmp
movsb
adc
xchg
sahf
sbb
xchg
and
jg
jo
lock
and
dec
jp
fwait
add
gs
movsl
pop
cmp
xchg
sub
lods
stc
out
jmp
outsb
dec
jg
fcoms
aas
xor
add
cmpsl
pop
xchg
xor
jg
jb
push
out
mov
cmp
add
shlb
das
adcl
gs
in
scas
add
enter
inc
mov
stos
mov
aas
add
pop
repz
loopne
leave
icebp
dec
lahf
das
in
push
jae
cmp
scas
bswap
repz
xchg
test
xchg
ss
pop
push
xor
push
jb
mov
ret
bound
add
push
xchg
cli
inc
rol
into
xchg
inc
jp
inc
daa
adc
sub
jle
pop
pop
push
mov
lds
mov
inc
push
jmp
xlat
int
scas
jbe
adc
gs
sbb
xlat
mov
scas
jb
jnp
cmp
jno
jge
enter
mov
imul
sahf
loopne
jno
lods
cmp
mov
sti
adc
cmp
mov
lcall
and
cmp
pushf
or
stos
out
aad
int3
call
jns
or
pop
add
shll
in
stos
sahf
outsl
inc
sysexit
mov
dec
or
scas
loope
push
sub
pop
decb
jl
stos
fs
cmc
das
dec
insb
mov
xor
in
leave
pusha
cmpsl
add
mov
popa
push
and
xchg
leave
xchg
xchg
dec
js
mov
mov
jle
jp
add
xchg
push
xchg
imul
lea
clc
sahf
mov
add
sbb
fidivl
mov
add
dec
out
ljmp
mov
out
cmpl
pop
sub
mov
xor
and
scas
push
sar
cmp
repnz
cmpsb
loop
mov
repnz
test
pop
fwait
test
bound
sbb
fisubs
out
add
sbb
outsb
in
mov
sar
xchg
push
or
sbb
inc
or
add
or
pop
add
cmp
insb
add
push
pop
inc
insb
lcall
inc
repnz
adc
dec
push
jb
cmp
imul
iret
cmp
scas
and
clc
pop
mov
xor
sarb
icebp
and
and
sbb
subb
imulb
adc
int
mov
mov
pop
adc
pop
mov
minps
jecxz
pushf
adc
inc
lock
filds
stos
sarb
sub
aam
add
fidivrl
daa
scas
xor
aaa
mov
testl
mov
mov
addl
addr16
add
push
add
dec
stos
ss
mov
push
dec
xor
aad
xor
int
cwtl
fcomi
adc
iretw
int3
dec
mov
iret
lret
lods
or
mov
icebp
pushl
fldl
adc
sub
in
or
int
das
push
and
sar
dec
add
xor
andl
push
sbb
sub
mov
sbb
push
push
jno
cmpsb
inc
lock
mov
push
fidivrl
pop
int
adc
push
shll
mov
out
ret
scas
sbb
fdiv
xchg
xlat
xlat
out
mov
add
scas
movsl
mov
inc
pop
jno
and
inc
or
mov
adc
js
and
lea
loopne
add
jb
mov
xchg
bndstx
cmp
or
mov
loopne
int3
es
pop
add
mov
popf
ficoml
mov
xchg
orl
xchg
cmp
inc
int
jmp
daa
mov
adcb
lcall
jle
cmp
push
add
jecxz
mov
mov
or
mov
pop
les
sarb
dec
mov
outsb
movl
sti
or
pop
sub
sub
or
mov
mov
dec
out
and
xchg
push
outsb
cmp
aaa
lock
jl
mov
mov
add
les
movsb
sbb
cmp
jnp
sub
mov
push
mov
mov
hlt
cmp
dec
pop
fsubl
fdivrs
mulb
xchg
hlt
dec
ljmp
out
or
push
adc
fwait
les
mov
jg
mov
adc
push
stos
push
movl
daa
pusha
pop
mov
hlt
in
dec
sbb
stos
xchg
mov
lods
pop
push
dec
or
pop
ja
movsl
incb
stos
inc
cmp
test
decb
add
mov
jae
fsub
rorl
fs
cmp
stos
in
jnp
xchg
in
dec
and
push
push
mov
cmc
gs
jno
cmp
popf
lret
rorb
mov
sbb
mov
movsl
mov
jmp
inc
nop
dec
mov
push
out
iret
add
add
or
jne
mov
push
sbb
lds
in
or
jns
ds
inc
push
xor
jl
dec
rcrb
jp
cmc
sub
dec
fcoml
fmull
lret
out
dec
test
sub
add
cmp
pusha
push
jns
push
into
and
push
jbe
mov
push
sbb
mov
push
push
fidivl
cmp
pop
xchg
mov
movsb
mov
movsb
in
popf
sbb
test
xchg
jmp
fcomps
or
cs
test
sahf
loope
inc
fisubs
gs
cmp
adc
mov
loop
push
cmc
cmp
xchg
mov
jle
push
mov
in
outsb
sub
ret
mov
jo
stc
adc
movsl
dec
and
push
mov
cmc
cmpl
adc
fwait
js
movsb
shll
add
notl
enter
sbb
lds
push
leave
mov
mov
lods
dec
das
mov
lcall
adc
lea
dec
xchg
out
insb
flds
pop
sti
xor
jle
inc
or
xchg
add
dec
xor
loope
dec
popa
inc
daa
pushf
ffreep
mov
inc
shl
xor
jmp
dec
sbb
cmp
aas
cltd
cmc
mov
les
out
test
lcall
sub
lods
add
cltd
cli
jnp
pop
pop
lods
jne
out
pop
mov
cmpsb
roll
clc
insb
ret
mov
int
adc
push
mov
test
fsubrl
sub
inc
jmp
adc
push
cmp
outsb
xchg
adc
lock
sbb
in
mov
aas
loopne,pt
cld
fistps
cmp
mov
add
sbb
add
mov
jns
sbbl
and
or
sub
into
xor
stos
int3
and
lret
leave
inc
in
add
pop
sub
jns
into
imul
mov
sti
sbb
inc
ret
faddl
gs
push
aad
adc
pop
in
mul
shll
push
test
ds
adc
ja
mov
xor
dec
and
cmp
mov
sahf
cld
loope
sbb
cmpsl
xchg
add
mov
sarl
aas
loopne
daa
adc
icebp
cld
lahf
cmp
dec
jne
cmp
sbb
scas
insb
pop
mov
rcll
and
xchg
add
shll
dec
pop
outsb
inc
lods
push
divb
mov
mov
mov
inc
add
cmp
inc
pop
pop
pop
mov
dec
mov
aas
stc
testl
push
ljmp
je
ds
jo
out
xchg
dec
dec
push
cmpsb
cltd
jae
mov
and
mov
daa
cltd
ljmp
subb
or
push
aaa
ja
push
stos
push
dec
cmp
push
or
inc
fsub
out
mov
pop
ret
int3
jge
fisttpl
insb
lds
test
sahf
xor
push
ds
dec
push
imul
push
push
arpl
or
in
nop
sub
pop
in
jmp
cs
add
ja
cltd
and
adcl
scas
std
adc
jb
lds
lds
mov
add
subl
adc
stos
loopne
adc
sti
dec
ljmp
inc
cwtl
outsb
jne
movsb
imul
cmpb
gs
and
sub
test
sub
insl
dec
push
dec
mov
mov
adcl
js
push
test
xchg
mov
lret
sub
bound
sahf
add
rcll
fsubs
jno
mov
or
iret
mov
movsb
and
nop
and
test
icebp
adcb
jbe
mov
jp
imul
inc
repnz
clc
sbb
add
pop
sub
and
adc
and
jp
and
mov
in
inc
call
mov
inc
in
lret
cmpl
adc
adc
mov
stos
ljmp
pop
add
xor
push
outsl
aas
cmp
or
xchg
movl
cwtl
xchg
stc
add
fisubrs
dec
push
lahf
mov
mov
xor
or
sub
xor
mov
bound
icebp
add
or
les
insb
mov
call
mov
mov
and
inc
sub
mov
xor
sbb
insb
daa
jnp
xchg
jle
daa
es
sbb
jp
int
push
pop
xchg
cmp
add
clc
int3
add
iret
push
loop
into
mov
pop
lods
pusha
and
cmp
test
sbb
imul
xor
cmp
push
xchg
pop
test
lods
je
scas
outsl
loop
and
into
inc
jb
js
push
sub
cmp
pop
mov
leave
test
dec
aam
adc
setns
add
jns
push
in
adc
mov
inc
mov
ljmp
push
sbb
and
fs
xor
inc
ljmp
jnp
and
cmp
call
push
adc
scas
dec
je
or
mov
mov
mov
call
push
int3
jbe
xchg
push
adcb
mov
cmc
jg
out
shrl
or
fisttpl
arpl
addr16
add
notb
cli
ror
inc
aam
add
mov
mov
or
popf
shl
xlat
sbb
sbb
add
mov
fdivrs
fidivrl
stos
sub
hlt
push
loop
push
jae
xorb
cmp
call
inc
lods
ret
mov
mov
inc
sbb
arpl
inc
jo
call
jg
popf
mov
vcvtps2pd
mov
daa
pop
ds
shlb
popa
lahf
lock
adc
clc
jle
loope
pop
push
pop
stos
call
shl
or
jecxz
pushf
inc
test
inc
dec
imul
popf
push
ljmp
loop
jmp
jne
ret
jo
push
ja
out
jns
sti
iret
pop
pop
push
lds
mov
es
lock
ret
int
sti
mov
push
shll
scas
pushf
out
mov
dec
pop
stos
out
push
pushf
mov
jle
ss
and
adc
mov
xor
mov
pushf
push
out
mov
mov
sub
pop
lret
jl
repz
xor
push
insl
pop
dec
int3
sub
iret
sbb
mov
xchg
cmpsl
add
decb
lods
sbb
xlat
or
jg
ret
sbb
out
dec
push
push
adc
repz
add
data16
or
jne
cli
mov
ret
in
mov
sub
stc
and
pop
or
rol
add
mov
mov
aam
call
mov
data16
xchg
and
jae
xchg
test
out
mov
outsb
push
insl
nop
mov
cmc
cmp
loop
mov
or
jle
shlb
call
adcl
sub
or
in
jb
jp
pusha
adc
sub
cwtl
inc
cmp
jp
cli
ja
mov
cmpl
add
push
sub
dec
push
push
push
imul
fistl
jo
mov
push
insb
loopne
outsl
enter
push
cld
jecxz
xorl
and
call
lcall
aaa
aaa
inc
ja
cmpsb
inc
jge
into
mov
or
sbb
in
hlt
loope
push
sti
int
call
jnp
lods
test
pmaxsw
pop
push
sahf
xchg
test
in
aad
adc
dec
inc
inc
mov
or
data16
movsl
ret
movsl
mov
inc
clc
sbb
cmpsl
pop
stc
stos
out
mov
movsl
test
test
jb
lea
scas
js
sti
in
dec
jo
dec
cmp
adc
addr16
scas
aad
sbb
test
xor
pop
jb,pt
adc
sub
sub
xchg
add
add
call
rcrl
lahf
movsl
in
pop
das
fdivrl
jge
cwtl
call
stos
inc
outsb
lods
mov
call
bound
sbb
ret
maxps
sbb
in
mov
int3
adc
xor
sub
rolb
test
add
je
sub
jno
and
scas
push
sahf
sbb
mov
mov
cld
xchg
movb
jnp
outsl
test
push
xchg
add
xchg
cmpsb
lods
daa
inc
repnz
scas
loopne
hlt
xchg
dec
mov
mov
pop
loopne
cmpsl
or
pop
push
repnz
je
push
mov
icebp
or
sbb
cmp
xor
int3
jge
and
fs
int3
dec
and
clc
or
jl
mov
push
loope
inc
xor
or
imul
sub
mov
rclb
f2xm1
fdivrp
mov
dec
shrl
xchg
push
inc
pushf
bound
pop
sbb
lahf
stc
sbb
sub
mov
cmp
jl
test
bound
inc
mov
jl
cli
or
pop
ja
mulb
shrl
adc
pop
mov
in
lahf
cmc
ds
or
sar
ss
out
jnp
fistps
cmp
out
mov
or
mov
push
xchg
pusha
mov
inc
mov
imul
insl
das
imul
pusha
jl
add
add
into
xchg
adc
mov
push
push
es
pop
mov
sub
popf
mov
mov
int
lahf
mov
xor
xchg
nop
and
iret
sub
outsl
out
cltd
push
ds
test
mov
cmp
cmc
mov
sti
lea
push
dec
xlat
push
cmp
xor
mov
jl,pt
imul
lds
sbb
push
jno
mov
out
daa
dec
nop
mov
iret
jb
xor
imul
leave
and
mov
push
test
mov
dec
hlt
int3
and
mov
bound
aam
xor
clc
mov
movsl
pop
push
int
sub
ret
cmc
mov
xor
dec
out
cmp
cmpsl
jae
jp
or
cs
test
outsl
jecxz
xor
lea
jmp
imul
rorb
mov
mov
lds
push
pop
movsl
idiv
lock
sbb
inc
cs
cmc
lret
mov
scas
dec
sub
mov
mov
inc
xlat
gs
xor
pop
fisttpl
push
mov
clc
movsb
pop
jmp
pop
repz
fidivs
sub
hlt
add
jne
inc
ja
lods
jnp
adc
repnz
pop
cld
int
sbb
clc
add
pop
xor
iret
xor
sbb
icebp
lret
mov
and
pop
sbb
inc
sub
call
mov
or
mov
sbb
mov
xchg
sbb
lret
jo
mov
xlat
sbb
push
push
dec
push
repnz
pushf
dec
in
mov
sub
int3
jbe
pop
or
mov
fldcw
clc
std
icebp
scas
pop
pop
jge
mov
cwtl
dec
adc
push
sub
or
shlb
adc
ret
dec
push
rorb
outsl
repnz
sbb
pushf
pop
xor
stc
dec
inc
mov
lret
cli
adc
fisubl
inc
adc
pop
in
incb
mov
sub
out
jne
fcoms
jae
insb
dec
test
insb
mov
cmp
sarl
adc
popf
sbb
and
fwait
add
mov
push
add
pop
jecxz
push
iret
clc
dec
lock
add
mov
orb
aad
out
sbb
mov
mov
pop
sbb
jg
xchg
repz
enter
jmp
dec
push
mov
inc
dec
add
lods
push
pushf
fstl
push
mov
dec
fcmove
pop
xchg
sub
push
neg
scas
push
jb
js
xchg
pop
ficomps
popa
loopne
out
lods
scas
psadbw
sbb
jne
dec
bound
push
xchg
scas
fdivl
mov
fwait
les
iret
lea
and
adc
mov
xchg
xlat
push
pop
or
leave
jnp
mov
loopne
nop
push
iret
mov
or
jmp
int3
inc
or
jmp
cwtl
loop
test
jb
xchg
cmpsb
and
jp
nop
xlat
sti
shl
scas
pop
cmc
scas
mov
push
xchg
pop
mov
xchg
mov
loope
add
les
inc
cmp
mov
and
mov
in
jno
fcomps
sub
jb
ret
fimull
xor
enter
cmp
adc
jno
fiaddl
fsubl
test
clc
scas
out
repz
cmp
je
int
xor
cmp
and
je
movsb
xor
int
xchg
sti
push
jmp
cwtl
loope
outsb
lods
jle
inc
rep
jl
sbb
ds
mov
jge
jge
push
xchg
mov
mov
xchg
add
add
add
sbb
xchg
in
xchg
or
push
inc
pop
std
mov
repnz
adc
jbe
jp
sbb
and
xchg
add
cmp
add
xchg
adc
xchg
dec
bound
movsb
xor
pop
pop
add
and
push
mov
faddl
aaa
add
arpl
int
sub
fsts
jge
mov
mov
out
loope
outsl
aaa
hlt
dec
xor
bound
mov
ffreep
mov
sar
cli
repnz
cmp
mov
into
cli
stc
repz
out
int3
cmp
jns
sahf
les
rol
insl
cmp
push
ds
int3
lods
xorb
mov
sub
addr16
pop
adc
push
fwait
dec
add
lahf
pop
xchg
pop
inc
cmp
push
aam
add
pop
jbe
cld
ficoml
cmp
bound
add
rcrl
mov
movntq
pop
das
inc
imul
cmp
add
loopne
xchg
aam
dec
jns
mov
or
fists
jne
fs
xlat
push
sub
xor
jmp
inc
jl
dec
xor
dec
fadds
lahf
mov
jns
scas
aam
and
jecxz
fidivs
inc
push
sbb
pop
xchg
jp
ret
jmp
fsts
call
jns
jg
ja
in
xor
dec
jle
jg
jae
std
push
outsl
sbb
rcrl
fcomps
test
push
inc
mov
ret
inc
loope
stos
scas
or
sbb
sbb
or
adc
xor
add
mov
sub
sar
repnz
pop
mov
movsb
daa
mov
in
cld
notl
cmp
adc
cmp
push
fnstcw
popf
dec
andl
lods
scas
insl
mov
stos
sysret
in
fldt
pop
lds
stc
push
insb
mov
fstpl
es
movsb
lods
xchg
pop
fs
cmc
inc
add
icebp
je
xchg
sub
sub
shrl
daa
sub
insb
xor
cmp
pop
dec
shll
and
stc
or
jae
dec
jmp
icebp
push
adc
mov
lods
cmc
adc
bound
repnz
mov
int3
loope
call
into
cmpsl
mov
jl
cs
jnp
in
icebp
mov
pop
sub
repz
adc
arpl
lcall
xchg
xor
mov
mov
dec
xor
jns
cmp
xor
mov
push
imul
shrb
cmpsl
mov
and
or
inc
in
call
jmp
sub
jne
aam
xor
movsl
loop
loop
pushf
stos
dec
xor
test
add
pop
pop
mov
add
or
outsb
popf
jp
gs
sub
mov
loop
dec
aaa
cmpsl
in
aaa
cltd
dec
dec
add
loope
jne
mov
cmpl
dec
clc
dec
sub
mov
pop
dec
jecxz
mov
int3
pop
sbb
lea
outsl
pop
sbb
test
sbb
and
dec
callw
push
arpl
dec
notb
or
push
sub
ljmp
loop
xchg
scas
into
and
xchg
or
mov
xchg
add
cltd
push
out
or
ljmp
xlat
mov
gs
test
sub
fldcw
xchg
cltd
dec
les
mov
movsl
inc
cmp
push
xor
ja
inc
or
fcoml
push
pushf
inc
add
xchg
xor
lret
nop
rcrl
mov
out
sarb
lret
lock
std
adc
js
and
adc
xchg
les
ret
shlb
ret
adc
lahf
mov
scas
pushf
inc
cmp
xchg
les
xor
sbb
test
pop
and
push
loope
stos
mov
std
mov
jb
rcr
mov
push
sbb
sub
aaa
into
dec
movsl
test
mov
sub
movsb
or
inc
cltd
pusha
inc
sbb
push
hlt
pushf
fisubrl
pop
and
cs
mulb
cwtl
popa
inc
rorb
dec
sub
movsb
sbb
scas
or
cli
gs
push
xchg
lret
stc
mov
add
inc
mov
sbb
inc
push
push
jmp
adc
imul
jo
scas
test
pop
xor
outsl
outsb
test
into
call
call
cli
test
test
or
dec
xor
mov
and
daa
dec
loop
and
movsb
inc
into
fs
mov
call
xchg
shrw
shlb
pop
mov
test
idivb
cwtl
lock
popa
pop
scas
ret
js
in
xor
hlt
lret
cmp
fsub
dec
or
lds
aas
inc
pop
in
jae
stos
cmp
ss
repz
mov
movaps
ja
out
dec
outsb
push
sub
push
loop
test
dec
xor
cs
sbbb
sbb
xor
pop
inc
in
adc
cmp
sbb
xchg
imull
mov
lods
cmp
mov
cltd
sbb
stos
sbb
ja
out
ss
cmp
mov
enter
or
or
out
scas
je
cld
aam
xor
aam
mov
sbb
fbld
imul
sbbl
jns
dec
imul
pop
mov
in
mov
lret
fstps
stc
jecxz
fnstenv
pop
loope
add
lods
pop
into
outsl
out
out
add
outsl
dec
and
adc
fucomp
sbb
cmp
aas
in
xchg
fsubrs
pop
jmp
fisttps
leave
in
jecxz
dec
mov
pop
out
or
movsb
xchg
add
outsb
orb
movsl
rcrl
negl
ret
inc
or
adc
xchg
or
imul
lods
xor
jmp
enter
mov
cwtl
mov
xchg
push
das
or
ljmp
jbe
add
sub
pop
call
jl
dec
inc
mov
or
mov
push
xchg
movsl
out
sbb
sub
or
cmp
xchg
jg
aaa
out
lcall
and
lods
lock
xor
and
xchg
sbb
or
in
push
xchg
insl
dec
lods
cmp
loop
insl
xor
jg
fsub
mov
mov
push
and
call
pop
aaa
popa
mov
into
pop
add
pop
mov
cwtl
jae
and
mov
mov
cmp
mov
xchg
je
rclb
imul
mov
daa
nop
loopne
sub
mov
loopne
mov
pop
fdivr
pushf
push
data16
enter
imul
cs
adc
test
lods
insb
pop
cmp
pop
lcall
mov
int3
adc
xchg
jnp
leave
add
adc
xor
xor
ret
hlt
imul
out
xchg
out
cmp
xchg
mov
test
ljmp
push
mov
mov
rcrb
pop
sbb
sahf
std
push
sbb
mov
enter
pop
mov
test
xor
xchg
mov
inc
movsl
add
sbb
push
or
into
insb
iret
lock
cmc
movsb
jnp
fcoml
and
fidivl
sub
lret
adcl
ret
add
mov
test
mov
pop
shll
jns
cmpsl
cmpsb
lcall
ss
cmpsb
in
movsl
push
sub
add
je
cmp
je
jl
jae
popf
mov
jae
mov
sub
notl
cs
xchg
jo
push
stc
and
clc
mov
push
xor
xchg
push
test
shll
xor
cli
mov
addr16
and
push
int3
aaa
shll
ss
ja
cmp
mov
es
jbe
jo
arpl
aam
les
addr16
sbb
mov
and
push
sbb
jp
jg
mov
jp
push
xchg
test
jge
fstpl
mov
dec
xchg
add
push
mov
mov
xchg
into
icebp
mov
lahf
addb
out
std
repnz
inc
jo
cld
cmp
jp
dec
jno
pop
jno
jecxz
adc
lds
repz
xor
fdivl
jno
imull
js
mov
mov
test
fdivrs
push
inc
aas
mov
ret
movsb
mov
enter
jb
lea
js
lock
out
pop
lods
dec
addr16
add
jbe
insl
aad
mov
or
jo
popf
ja
xchg
pop
test
enter
das
jo
mov
pusha
push
pop
add
ret
repz
mov
cmp
jl
ficompl
sbb
dec
imull
mov
mov
xchg
call
push
scas
mov
jp
mov
sub
out
add
fucompp
pop
leave
out
subb
jnp
cmpsb
sti
or
jns
dec
or
push
enter
fidivs
mov
add
inc
xchg
xchg
cmc
cmpsb
leave
cmp
mov
add
mov
fidivrs
jnp
xchg
mov
arpl
daa
mov
push
sbb
lods
mov
lea
in
in
clc
and
add
nop
xchg
mul
imul
fs
pop
subl
push
inc
cld
sbb
adc
inc
clc
xchg
std
push
arpl
test
stos
leave
ds
fisubl
fldpi
add
push
xor
push
test
aas
pop
mov
bswap
dec
mov
aaa
jae
test
cmpl
adcl
pop
xchg
jnp
std
lcall
dec
insb
fdivs
enter
out
stos
imul
inc
sub
sbb
xchg
or
xor
jb
ljmp
xchg
push
lahf
hlt
lds
add
test
xchg
ljmp
rcrb
xor
xchg
xchg
les
rol
out
es
imul
cmp
xlat
rorb
loop
push
pop
pop
shlb
movsb
clc
ljmp
sarl
pop
dec
ret
dec
test
xchg
scas
add
repnz
jne
jmp
jb
dec
mov
stos
push
mov
ret
jp
sbb
jnp
inc
js
ja
inc
shl
je
call
xchg
or
jmp
jg
inc
stos
jecxz
inc
or
pushf
lods
or
jbe
rcll
andl
pop
in
int
std
jns
fwait
add
sbb
pop
push
cwtl
xor
fcomip
fstpt
test
lods
imul
scas
add
sarb
pop
jg
lds
pop
add
imull
pop
and
and
dec
pop
add
mov
movsb
out
addr16
add
cmp
xor
or
aad
mov
xchg
jns
push
and
adc
ss
sbb
stc
cmc
lods
or
fs
jl
and
push
pop
cmp
jle
push
decl
test
adc
dec
addr16
push
pop
rorb
mov
dec
int
jnp
repnz
adc
popf
lahf
dec
es
push
scas
in
dec
popf
out
lret
out
repz
movsl
push
fidivs
mov
mov
pop
push
in
mov
and
lock
or
mov
xor
hlt
andb
jg
cmp
pop
shll
or
daa
push
sub
out
and
mov
sub
leave
add
repnz
scas
bound
lret
out
jl
lock
sub
xchg
push
xchg
add
ljmp
dec
add
pushl
sarl
pop
outsl
bound
out
cwtl
sbb
ds
imul
stc
xchg
jp
ljmp
xchg
mov
data16
nop
add
and
ja
test
imul
push
jecxz
pushf
cs
cmc
dec
cs
dec
stc
jo
outsb
adc
clc
xchg
cltd
push
sar
pusha
faddp
loope
test
push
mov
das
and
adc
sub
loop
xchg
daa
rclb
jno
je
add
iret
jbe
push
roll
nop
xor
pop
outsl
jno
mov
mov
aam
push
das
daa
xlat
cmpsb
push
inc
cmp
adc
cmp
imul
inc
sbb
sbb
push
xchg
fdivl
jl
clc
jns
ss
jo
hlt
dec
mov
daa
out
outsl
daa
xchg
adc
and
and
inc
lcall
add
cmc
das
or
inc
mov
sub
test
in
int3
pop
outsb
fwait
lret
shrb
clc
or
push
xor
add
xor
jo
pop
mov
pop
jp
aam
ds
mov
shll
cmpb
mov
sbb
mov
sub
inc
mov
sar
and
dec
jmp
out
xchg
lret
mov
gs
shl
mov
or
xor
push
push
xchg
adc
into
test
shrl
inc
xchg
fbld
ret
ss
stc
xor
cmpb
mov
mov
insb
lretw
xor
cs
in
cmpsl
pop
push
push
fwait
call
pop
aas
cmp
vpaddw
or
xchg
loope
mov
jl
jo
cmp
cmp
stos
pushf
leave
pop
cmp
push
hlt
inc
sub
push
cmp
andb
rcrl
lahf
jno
lods
fwait
push
std
in
xlat
les
sbb
popa
movsl
faddl
jle
inc
mov
fstpl
push
pop
sbb
push
push
arpl
out
adc
inc
outsl
fldenv
mov
and
cld
das
out
sbb
cmp
or
lret
movsl
negl
gs
xchg
pop
popf
ret
out
adc
adc
mov
adc
mov
mov
xor
dec
scas
into
mov
fucom
out
push
add
ss
and
arpl
mov
fistps
fists
outsb
adc
int
in
pop
xchg
ljmp
hlt
mov
ds
arpl
call
rclb
sbb
ss
outsl
mov
or
shl
jg
js
bound
mov
inc
and
in
sub
out
jae
xor
cmpsb
cmpsl
sbb
inc
out
xchg
das
jne
lds
mov
aaa
xor
ret
sub
pmuludq
mov
rcl
lods
sub
adc
lret
xorl
or
pop
imul
or
das
sub
jae
inc
jbe
mov
insl
mov
dec
and
mov
inc
and
add
sub
cwtl
mov
es
adc
xchg
loop
dec
call
or
pop
add
push
pop
xchg
xor
push
and
ljmp
daa
fs
cld
sub
mov
inc
test
mov
cmp
outsl
lds
pop
cmp
push
pop
sarl
inc
mov
je
inc
mov
sbb
sbb
or
shlb
cmp
rorb
mov
push
jo
sbb
adcb
or
jl
pop
lods
ret
es
jl
cmpsb
std
push
cltd
ljmp
push
out
inc
cmp
inc
jg
mov
stc
mov
mov
jns
or
ljmp
imull
insb
in
push
sub
js
xchg
stc
push
dec
adcl
xor
ss
lret
pop
mov
sti
aad
push
les
ficoms
stos
add
lret
mov
mov
inc
cli
arpl
aam
out
rcll
jno
orb
xchg
or
mov
pop
or
lods
int
mov
and
inc
cltd
mov
test
into
hlt
ljmp
das
xchg
xor
push
sti
jns
mov
pop
dec
sti
iret
imul
lret
test
notl
push
inc
push
lock
movsl
loope
xor
clc
adc
sbb
scas
mov
bound
iret
cltd
lds
outsl
inc
jno
mov
jecxz
push
adc
cltd
push
adc
cs
xor
push
enter
inc
push
fisttpll
mov
xchg
movsl
mov
movsb
imul
cli
mov
push
sub
sti
lret
mov
mov
xor
cmp
cmp
xchg
lahf
scas
mov
int
cmc
lahf
sub
and
push
rorl
pusha
arpl
push
or
inc
in
push
ja
mov
xchg
add
push
sub
scas
dec
add
mov
popa
gs
push
fwait
les
in
mov
jmp
mov
cmpsl
dec
pop
add
jge
sub
and
jecxz
cld
xchg
dec
mov
stos
cwtl
dec
test
push
push
daa
and
sbb
jmp
inc
andb
pushf
xchg
jnp
pop
out
jne
cmc
mov
ret
mov
loope
mov
das
shrl
jmp
pop
sub
jg
je
inc
xchg
inc
xchg
arpl
sub
mov
in
stos
inc
xchg
aam
and
aas
scas
inc
or
je
cmp
mov
rolb
movsl
je
loop
pop
dec
out
or
int3
je
sbb
loopne
xchg
in
cli
sub
xor
pop
push
inc
and
xor
movsl
lret
outsl
xchg
in
hlt
jecxz
pop
int
fmul
xor
shrl
sbb
sbb
aaa
add
lea
aaa
pop
pcmpgtw
cwtl
jg
fcomp
xchg
iret
ljmp
push
insl
and
pop
pop
arpl
sub
repnz
mov
movsl
mov
cmc
loope
mov
out
repz
xchg
jmp
mov
add
jns
adc
shlb
pop
es
out
xor
push
enter
cmp
sub
mov
dec
std
or
pop
xchg
cmp
fcmovne
iret
mov
jecxz
lea
inc
loopne
lret
adc
ljmp
mov
fimuls
fadds
fsubp
pop
movsb
pop
jle
stos
xor
into
pop
sbb
pop
add
imul
jle
adc
push
fs
mov
push
add
sar
and
lods
shrb
cmp
addr16
ljmp
fldenv
xchg
mov
enter
xchg
imul
rorl
jg
push
mov
add
push
inc
lcall
mov
mov
dec
mov
fstpt
sahf
jl
test
adcb
sbb
or
jg
loop
into
fsubs
cmp
sbb
jns
test
jno
jecxz
lods
sbb
push
cmp
mov
lahf
fwait
fwait
mov
mov
inc
data16
push
in
fldl
cmpsl
inc
and
mov
cmpb
or
dec
mov
xor
cmp
movsb
ja
cmp
jle
ja
repz
mov
pop
xor
pop
subl
gs
out
aad
jp
into
and
inc
lret
xchg
jecxz
cld
out
loope
fiaddl
lret
test
ret
js
das
cld
jbe
stos
cwtl
sbb
dec
inc
fiaddl
outsl
mov
xor
outsl
dec
aad
mov
add
mov
xchg
notl
push
jecxz
or
bound
cli
out
jg
lds
jge
inc
adc
or
lret
jne
ret
sub
addl
in
pop
push
adc
js
xor
inc
hlt
and
mov
and
fidivs
cmp
lret
loopne
mov
push
inc
fs
push
fisubrl
dec
notl
add
fdivrs
in
ljmp
or
dec
pop
xor
ret
test
mov
fmuls
push
mov
mov
loope
sbb
inc
rorl
mov
pop
jo
inc
adc
and
pop
add
push
clc
xchg
mov
sahf
test
xchg
jns
mov
or
sbb
jmp
cmp
aas
loop,pn
mov
and
mov
push
mov
xchg
clc
imul
pop
xchg
jl
jmp
aam
xchg
movsl
addl
test
stc
mov
sbb
pop
sub
mov
push
pop
pushf
fisubrs
aad
mov
pop
aam
pushf
fs
cmpsb
adc
push
cmpsb
xor
je
mov
fs
sub
adc
mov
push
sub
sahf
push
jmp
bound
sahf
cmpsl
xchg
mov
out
push
orl
stos
in
js
pop
test
sbb
fs
adc
inc
jae
pushf
dec
call
repnz
ds
dec
fdivrs
inc
or
aaa
aaa
rorb
sub
push
mov
and
xchg
sbb
xchg
adc
cmp
repz
lahf
dec
outsl
int
icebp
mov
orb
lahf
cli
mov
lret
mov
jecxz
mov
mov
mov
out
push
push
out
adc
ja
xchg
scas
mov
fidivrl
dec
in
push
dec
sahf
jnp
add
es
sub
scas
and
mov
push
leave
cmp
inc
inc
dec
nop
push
dec
test
lahf
mov
test
sub
inc
mov
and
sub
rcl
sub
sahf
nop
test
pop
jo
xor
mov
mov
adc
push
sbb
mov
push
ljmp
dec
test
push
push
orl
pop
lret
nop
push
in
mov
jae
ss
and
movsl
cmp
sub
pop
test
jb
ss
mov
mov
arpl
cmp
in
ljmp
pop
pop
faddp
sub
dec
push
mov
rclb
push
xchg
inc
mov
pop
mov
gs
mov
dec
test
jle
dec
mov
clc
repz
add
repz
out
lds
sbb
outsb
les
xchg
xor
arpl
mov
push
fadds
pop
add
push
enter
cmpsb
jno
orl
mov
fwait
push
sbb
sbb
lret
jns
mov
xchg
leave
addr16
enter
jg
hlt
in
out
aas
mov
xchg
stc
mov
jg
or
scas
mov
popa
gs
shll
dec
pop
lret
decl
pcmpeqd
cmp
mov
insl
xchg
lock
addr16
jb
push
xchg
mov
imul
or
fidivs
and
std
fidivrl
inc
xchg
aas
scas
cli
sbb
ljmp
and
pusha
sub
repnz
test
test
insl
xchg
cmpsb
das
in
stc
mov
push
loope
dec
cltd
mov
aad
adc
gs
xlat
pop
mov
cmp
jl
bswap
scas
movsb
aaa
pop
arpl
cli
sbb
fdivrl
sbb
mov
repz
in
fsubp
mov
ret
xchg
xorb
mov
push
xor
cwtl
push
not
out
inc
push
xor
stos
push
xlat
cmpsb
cltd
loope
loop
enter
mov
ss
mov
insb
mov
mov
jo
movsl
cmc
jmp
add
pushf
xor
xchg
clc
mov
push
xor
int
scas
mov
xor
xchg
loopne
js
lds
test
xchg
or
fsubl
fsubl
mov
xchg
lahf
movsb
xlat
jecxz
popf
iret
jl
aam
out
ret
sbb
mov
dec
test
inc
cmp
mov
repnz
cltd
push
pop
and
pusha
pop
or
out
and
mov
push
mov
dec
fistps
mov
fildll
cmp
jge
cmp
mov
lret
push
push
cmp
xorb
ficoml
and
push
sbb
push
dec
pop
ja
fdivrs
cmp
add
cmp
jge
jns
jle
dec
aam
mov
and
dec
lds
jne
mov
lods
and
push
nop
or
jnp
xor
sub
pop
sti
jle
mov
inc
mov
ljmp
cmp
mov
mov
loopne
stos
adc
push
sub
repz
daa
pop
cmp
fiadds
ss
iret
lods
std
icebp
daa
mov
popa
rolb
in
mov
pop
rcll
mov
xor
jl
pop
adc
xchg
xchg
sbb
sub
pop
fs
testl
ficomps
fidivs
jnp
cmc
pop
es
cmpsl
ja
repz
adc
lahf
hlt
out
inc
fisubrl
in
xorl
orl
dec
jnp
je
inc
pop
call
xlat
lea
jmp
sbb
or
add
aas
jp
sub
bound
push
aad
mov
fistpl
dec
inc
fs
mov
dec
mov
test
ret
fbld
sbb
cmp
fsubrs
jno
insb
hlt
xchg
xchg
cmp
cmpsb
and
push
push
lea
scas
dec
popf
mov
mov
inc
out
mov
add
push
pop
into
in
add
push
jl
ret
stos
xchg
cmp
imul
aas
lods
jg
fdivs
add
mov
mov
or
les
cmp
cmpsl
call
mov
loop
mov
dec
sbb
shrb
pop
dec
xor
mov
xchg
push
shll
hlt
test
add
push
mov
movsl
imul
addb
xchg
imul
outsl
cmp
mov
add
jmp
nop
lret
push
dec
jmp
sbb
adc
mov
aaa
adc
dec
fidivrl
push
push
xor
enter
push
add
pop
and
orb
jge
jp
xchg
and
sub
or
movb
sbb
add
sub
fs
loope
and
pop
punpckldq
shlb
pop
mov
lret
popf
pop
inc
sub
mov
repnz
push
xor
or
mov
push
idivb
pop
gs
pushf
mov
scas
mov
outsb
shl
jbe
fs
iret
xchg
popf
jb
int
mov
and
and
xchg
fsubrp
insb
adc
movsl
out
mov
ficompl
leave
mov
mov
mov
or
in
iret
test
sarl
dec
and
mov
stos
pop
fadds
pusha
adc
popf
div
addr16
mov
or
and
xor
jp
or
sub
and
push
addr16
sti
pop
sbb
adc
je
ja
mov
dec
and
pop
clc
push
sbb
cmp
mov
ds
xchg
pop
push
or
repz
arpl
adcl
pop
rcrl
cwtl
lods
int
and
mov
cmp
or
xorl
aaa
shll
inc
fisttpll
jmp
jle
mov
lods
mov
dec
add
arpl
imul
outsl
lds
inc
dec
call
dec
inc
or
push
ds
dec
das
movsl
xor
adc
inc
fdivp
lds
sbb
hlt
movsl
cmp
cwtl
mov
in
lods
cld
stos
jae
movl
cwtl
data16
stos
push
mov
cli
dec
cs
insl
pop
lock
pop
test
push
les
and
test
xchg
popa
cli
sub
lcall
xchg
dec
sarb
sub
mov
hlt
repz
incl
mov
fs
adcl
add
sub
pop
sbb
push
or
jge
and
adc
das
loope
jns
arpl
mov
inc
push
mov
push
inc
mov
add
fs
cmp
inc
lock
decl
mov
shrb
int
mov
or
add
xor
jbe
in
cs
mov
jnp
mov
cmpsl
sahf
sahf
dec
imul
shrb
shll
loopne
nop
jo
leave
out
or
cmp
sbb
jp
fidivs
scas
or
adc
add
fsubrs
call
das
cmp
clc
mov
mov
cmpsb
xchg
lret
push
push
mov
scas
pop
xor
inc
jno
hlt
inc
int
add
nop
cmpsb
fstps
in
pop
loopne
add
stos
dec
mov
out
add
mov
ffree
mov
sub
movsb
andl
xchg
imul
sarb
xchg
incl
clc
outsb
push
aas
xchg
add
loopne
lea
nop
mov
mov
or
mov
pop
loopne
dec
shlb
imul
xchg
mov
in
push
popa
enter
inc
js
fdivrs
and
push
pushf
pop
incl
jle
fstpl
cli
add
adc
push
aad
sbb
loop
ljmp
mov
fmulp
iret
push
xchg
stc
jle
cvttps2pi
nop
fs
dec
orl
movsl
dec
xchg
cli
jecxz
push
dec
sbb
pop
lods
add
icebp
lods
imul
and
mov
pop
mov
jle
add
xor
mov
leave
or
insl
mov
sbb
lahf
cmpsl
sbb
jne
sub
fisttpll
dec
out
add
test
lahf
mov
loop
mov
in
adc
push
cmpsw
daa
loopne
or
imul
dec
pop
xchg
ss
std
sub
cli
add
icebp
adc
ja
add
movsb
xchg
cs
xchg
ljmp
test
test
outsb
push
pop
loopne
mul
or
push
dec
sarl
push
lret
mov
jb
les
push
mov
lahf
sbb
movsb
shlb
dec
pop
adc
jae
inc
jg
dec
test
movsl
mov
jno
int
and
xor
sbb
push
jo
dec
aad
inc
cmpsb
dec
push
fcoml
fsubp
cwtl
dec
cld
push
outsb
cmp
arpl
sbb
pop
jo
cli
fidivs
addl
scas
lods
jg
pop
icebp
int3
scas
mov
cmp
lds
stos
hlt
xchg
int
pop
push
and
imul
or
mov
fdivs
sti
lds
add
imull
and
inc
dec
add
jo
fstpt
cmp
adc
popf
mov
or
add
imul
jns
sbb
cmpsb
clc
adc
loop
add
jecxz
mov
add
rcll
ja
mov
popa
sti
test
bound
jne
cwtl
test
insl
and
imul
adcl
mov
aas
imul
and
cltd
sbb
jae
dec
ret
inc
sub
in
mov
nop
fdiv
stc
lds
mov
decb
inc
mov
sbb
mov
inc
cmc
pop
gs
xchg
jae
js
mov
js
or
inc
add
or
iret
cli
mov
icebp
lcall
pop
rclb
dec
cmpsl
push
test
icebp
in
pusha
inc
and
push
cli
pop
mov
sub
push
sbb
push
jl
lods
add
or
in
fwait
jae
insb
stos
std
lods
imul
imul
sbb
cmpsl
leave
ret
or
lock
xor
xlat
enter
call
sarb
inc
das
scas
pop
adc
lret
jp
jbe
dec
out
inc
rorb
or
mov
cmpsl
imul
dec
cmpsb
lock
cltd
lock
popf
pop
jo
lods
mov
mov
lahf
lds
shrl
and
sti
pushf
gs
jecxz
inc
cwtl
and
fbld
xchg
xchg
notl
push
or
mov
filds
dec
scas
lods
adcl
inc
fs
jns
cmp
in
dec
daa
rol
inc
adc
ret
mov
jae
lds
cld
adc
sbb
push
cmc
cmc
and
pop
jae
jne
push
add
cmp
pop
stos
pop
lods
call
fidivs
add
lahf
sub
mov
roll
jnp
nop
int3
out
and
dec
fisttpll
lock
mov
enter
jmp
loop
ja
mov
aaa
mov
sub
jecxz
in
fs
movsl
push
jmp
xor
frstor
jo
iret
adc
cmpsb
pop
dec
inc
pop
cmp
ja
cld
aad
pop
outsb
pushf
pushf
mov
or
inc
xor
mov
sbb
dec
inc
adc
pop
scas
out
shrb
mov
mov
out
push
das
inc
gs
and
popl
mov
add
mov
sbb
scas
fcoms
insl
into
sub
jmp
or
lret
dec
das
sarb
push
dec
cmp
lock
inc
sub
inc
sub
pop
cltd
adcb
push
mov
imul
out
jp
or
xor
dec
cmp
stos
stc
call
mov
shr
popa
mov
imul
ds
and
push
in
inc
mov
bound
mul
imulb
sub
inc
cld
jne
mov
adc
pop
addw
adc
iret
xchg
pop
ja
stc
mov
insb
test
mov
pop
jns
adc
fdivr
fwait
cmp
arpl
pusha
mov
push
sbb
xchg
adcl
dec
test
and
fnstsw
shl
and
and
nop
imul
pop
pushf
push
mov
mov
ss
mov
jg
mov
ljmp
or
mov
sbb
push
lds
negl
shrl
in
clc
je
scas
lcall
mov
enter
xor
enter
adc
lods
or
shlb
std
xchg
stc
push
jae
iret
or
mov
sub
jge
xchg
dec
add
negl
push
std
scas
notl
mov
and
dec
xlat
pop
pop
stos
jmp
mov
add
sub
std
lods
cmp
pop
xor
jb
call
scas
lret
fdivrl
orl
sub
in
sahf
mov
movsl
inc
pop
fcmovne
lods
mov
cmp
jo
sub
fcoml
scas
push
xchg
push
imul
adc
bound
testb
sub
pusha
mov
jae
dec
fmull
cs
adc
push
and
xchg
ss
outsl
es
stc
xchg
and
outsl
leave
or
cld
mov
ficompl
aaa
lcall
fstps
sub
mov
mov
push
mov
das
pop
fcompl
mov
pop
mov
insb
nop
xchg
jno
or
adc
cmc
jno
mov
in
call
faddl
xchg
dec
and
lret
pop
mov
jne
loop
gs
lfs
jnp
scas
shll
or
mov
mov
movsl
out
pop
nop
movsl
push
pop
mov
ffree
fisttps
mov
lds
loop
daa
add
push
fs
and
in
inc
push
jecxz
or
and
xor
xor
xor
jne
sub
pushf
mov
adc
test
leave
inc
mov
lahf
push
fst
push
jnp
xor
xchg
mov
cld
xchg
nop
mov
arpl
arpl
mov
push
nop
sbb
out
inc
call
add
pop
add
xchg
sub
push
sbb
push
clc
sbb
sbb
pop
ret
push
popa
jmp
mov
stos
sbb
push
stc
lock
mov
fs
inc
leave
adc
mov
outsb
lcall
jbe
sub
jle
cltd
addb
or
rcrl
scas
daa
or
jge
cld
fwait
pusha
dec
lock
repnz
stos
mov
mov
fisttps
push
pop
aas
mov
pop
cmp
or
mov
std
mov
rorb
push
or
sub
shl
aas
sbb
sub
lods
in
push
mov
push
pop
in
ret
push
cmp
aad
sub
push
mov
ja
xor
pusha
test
push
into
jae
mov
iret
in
sub
adcb
sbbb
cmp
pop
add
inc
cmp
cwtl
push
std
shlb
aas
mov
fldt
xor
pop
pushf
fistps
stos
xchg
cmpsb
ret
mov
jle
test
int3
xlat
les
imul
cmp
jns
lahf
jmp
jmp
mov
ss
mov
testb
cmpsb
dec
or
jns
lret
push
lret
inc
mov
sub
jmp
pushf
sub
inc
aam
popa
aas
popa
dec
pusha
and
setnp
test
lahf
stos
add
xor
aam
add
nop
enter
mov
sbb
or
adc
cli
dec
dec
test
bound
incb
mov
gs
mov
jg
or
aam
lds
dec
cli
inc
das
out
stc
and
test
and
iret
repnz
roll
mov
cmp
pop
ret
push
push
sahf
xchg
cmp
xchg
js
mov
lretw
hlt
rorl
ficoml
imul
stos
adc
pusha
scas
mov
mov
addr16
leave
gs
fmuls
repnz
xor
cmp
inc
adc
js
sub
lret
pop
in
dec
xchg
add
mov
push
repnz
mov
js
jo
dec
inc
lcall
sub
jbe
bound
jno
inc
add
xor
pop
lea
xchg
sbb
stc
mov
cmpb
add
cwtl
sub
or
psubq
rol
mov
mov
enter
push
ret
mov
sub
popf
add
mov
pop
pop
sub
outsb
dec
lea
lea
cltd
imul
jne
xchg
pop
lock
mov
push
sti
push
cs
dec
popa
sbb
call
mov
popa
xchg
sbbl
xor
push
xchg
jno
dec
stos
int3
fstpt
cmp
in
lret
jg
loop
jo
add
aaa
test
cli
jmp
fcom
inc
enter
push
lock
fwait
gs
or
sub
jle
mov
leave
daa
sahf
test
std
cs
icebp
rcrl
leave
dec
scas
adc
adc
je
xor
mov
pop
aam
scas
push
mov
fs
dec
mov
imul
xor
into
dec
push
mov
aaa
ret
or
popf
dec
jnp
xorl
add
inc
loopne
mov
mul
jbe
xchg
pop
mov
orb
add
ljmp
arpl
cmpsb
add
mov
flds
push
fsubrl
int3
out
and
mov
imul
add
mov
inc
dec
xchg
and
and
aas
pop
mov
mov
push
shll
sbb
push
dec
push
xchg
aad
filds
cs
xlat
lahf
cld
xor
movsb
cmp
enter
push
pop
inc
lds
add
rorb
jp
stc
push
push
dec
dec
in
sub
movsl
fld
dec
je
pop
mov
xchg
repnz
cmpsb
adc
icebp
push
xor
add
add
xchg
insl
icebp
mov
inc
in
aam
test
dec
insl
add
mov
cmp
mov
das
negb
call
icebp
popf
das
fsubr
das
fimuls
movsb
sti
fimull
cmp
cmp
inc
or
shlb
std
and
push
outsl
push
xor
cmp
mov
cltd
sbb
xor
jecxz
inc
pop
rcl
push
xor
jns
xlat
loope
out
inc
cltd
cmp
iret
mov
mov
inc
xor
mov
adc
push
cmp
lock
dec
xor
enter
mov
or
cli
lods
jb
cmp
dec
mov
or
pop
pushf
aas
and
xchg
push
cmp
mov
xor
pop
fisubs
cmp
sahf
adc
sub
xchg
fisubrl
xchg
fsts
negl
mov
fcmove
xor
jg
std
sub
xchg
xchg
aam
addr16
dec
rcrb
popa
pop
cmp
rcll
lahf
es
data16
sbb
loopne
cld
sub
call
or
push
cwtl
rcrl
push
movsl
mov
cs
xor
sbb
jbe
mov
xor
xchg
push
out
test
das
sub
jmp
xchg
sbb
pop
sti
xchg
inc
inc
popa
adc
push
out
xchg
add
imul
bnd
jb
lret
mov
ljmp
mov
dec
xchg
loope
cmp
xor
dec
jnp
addb
loop
pop
mov
rclb
setbe
out
cmp
inc
push
xchg
sbb
fildl
inc
fs
mov
cmp
mov
push
jecxz
notb
adc
add
stos
into
pusha
rcrl
xchg
in
les
cmp
bound
and
add
enter
sub
and
in
rolb
cmp
add
jl
mov
jae
pop
lea
push
inc
xchg
sub
push
lods
nop
stos
subl
adc
dec
int
pop
scas
call
nop
in
cmp
jge
cmp
mov
push
mov
or
subl
fsubs
add
adc
outsb
sbb
xchg
or
add
repnz
pop
and
cmp
xor
mov
mov
cltd
mov
sub
jmp
stos
add
in
add
dec
insb
inc
mov
jb
sbb
repnz
cmp
dec
jp
scas
xchg
outsl
insl
sbb
pop
fistpl
out
in
and
jbe
mov
fucom
cmp
pop
icebp
inc
scas
cwtl
mov
imul
jp
repnz
mov
int3
fs
mov
lock
pop
data16
ss
jl
movl
or
push
stc
ret
mov
mov
jno
sub
adcb
test
mov
movsl
add
and
mov
cmc
sub
dec
loope,pt
ljmp
mov
xlat
movsb
loop
mov
jle
mov
clc
xchg
jno
das
add
roll
loop
fidivrs
mov
pop
adc
jno
lahf
mov
add
adc
ja
pop
into
sti
bound
mov
jecxz
mov
dec
pop
loopne
mov
mov
data16
dec
scas
repnz
push
roll
ja
add
jmp
adc
pmullw
into
mulb
xchg
loope
mov
jns
adc
bound
push
sarl
adc
mull
out
stos
test
pusha
idivb
push
jg
ss
in
add
and
inc
cld
cmpl
sar
pushf
fstl
push
arpl
xchg
mov
inc
in
fiadds
xchg
mov
cmp
inc
cmpsl
add
sbb
dec
pop
cli
outsb
jb
leave
leave
xchg
scas
ret
push
je
repz
jno
sahf
push
je
cmpsb
stos
dec
xlat
arpl
inc
mov
stos
push
push
aaa
mov
cmc
and
jecxz
in
fcmovnb
or
cs
ljmp
pop
cli
mov
shll
scas
call
cld
mov
stc
or
xchg
out
or
and
movsb
jg
pop
ret
jns
repnz
push
sbb
testl
jo
out
xor
adc
cs
mov
imul
add
adc
push
jg
inc
xor
pop
in
and
jbe
ljmp
adc
cmp
jmp
sub
ss
lods
in
mov
jnp
aas
int3
sbb
stos
sarb
fs
or
cltd
iret
vmread
fsubs
sbb
xor
cmp
or
mov
xlat
rorl
loope
xchg
jle
adc
mov
adc
inc
bound
in
sarl
mov
push
jno
sar
mov
out
icebp
fcmovne
and
out
test
adc
push
inc
aaa
into
jns
push
outsl
jns
sub
add
sbb
mov
push
repnz
fwait
cmp
sar
outsb
adc
fidivrs
cmpsb
stc
or
sub
cli
or
aaa
mov
mov
aam
ja
jp
cwtl
mov
arpl
add
inc
xchg
cmp
cmp
sbb
jnp
xor
mov
dec
int
rcrl
cmp
push
cmp
jb
loop
popf
pushf
iret
jb
and
dec
or
push
adc
in
adc
lods
fsubr
mov
popf
mov
mov
push
js
and
mov
enter
xor
and
iret
aaa
mov
dec
clc
dec
push
add
xchg
xchg
mov
in
mov
inc
fistpl
push
jbe
jae
stc
test
inc
sub
jl
push
inc
inc
xchg
dec
sarb
je
movsb
cmp
inc
roll
cld
adc
daa
xor
dec
sbb
push
shlb
outsl
mov
inc
push
xor
jo
into
cmc
jmp
push
push
cli
lock
sbb
inc
mov
and
xchg
fs
sbb
mov
ret
mov
jecxz
mov
xchg
dec
pop
and
cmpl
fwait
xor
mov
shlb
insl
sub
jmp
jae
dec
in
je
pop
lods
std
cmpsb
pop
gs
adc
inc
imul
cld
out
sbb
outsb
and
out
dec
outsl
fsubrl
in
loop
jle
push
mov
pop
mov
fwait
inc
push
jg
addr16
pop
outsl
sarb
popa
xor
mov
jne
cltd
dec
sbb
fdivr
inc
subb
inc
pop
mov
ret
xor
fwait
andb
in
pop
xchg
xchg
shrl
es
jecxz
push
dec
cmp
rorl
sub
lea
jnp
or
fstpl
notb
rcr
adc
or
adc
push
out
cltd
iret
mov
in
inc
sub
daa
push
jmp
packuswb
out
or
mov
sahf
and
int
loopne
cmp
scas
das
fimuls
notl
popa
pop
jle
xchg
fisttpl
mov
out
jo
mov
pop
ss
popa
adc
add
out
ljmp
jno
loopne
cld
or
push
lock
xchg
jg
aam
add
js
xorl
lcall
pop
jp
jmp
push
mov
jge
mov
adcb
mov
jp
fisubrs
pop
dec
bound
xor
push
call
cmp
in
js
or
mov
pop
mov
outsl
ss
mov
cmc
inc
pop
xor
popaw
pop
loope
add
xlat
sub
lods
inc
mov
and
add
push
sub
in
aas
adc
rorb
aaa
es
fldt
lock
stos
add
mov
iret
xchg
fbstp
daa
test
pop
loopne
sbb
out
loopne
push
jo
add
cmc
dec
movsl
xor
in
cld
push
shl
push
add
and
pop
hlt
add
xor
lret
push
xor
es
loope
mov
jo
arpl
xchg
les
arpl
push
adc
sbb
and
push
dec
pop
xor
and
sar
dec
aas
call
aas
pop
pop
ja
shll
dec
test
out
dec
or
pop
cmp
add
loopne
push
xorb
inc
andl
fucomip
fidivrs
roll
push
mov
sbb
lahf
push
xor
mov
lods
fucom
lcall
ljmp
rcrb
dec
sbb
xchg
testb
or
jb
loope
push
cmp
push
cmp
jmp
add
ja
out
jnp
cli
xchg
subl
push
xor
and
and
mov
cmp
stos
mov
rclb
lock
mov
jl
rclb
lret
out
shrl
loope
xchg
scas
pop
gs
push
push
pop
cmp
jae
in
mov
test
hlt
jmp
test
pop
xor
stos
pop
or
push
dec
out
stos
sub
inc
frstor
push
push
fninit
aam
test
ss
roll
fidivrl
das
daa
jae
and
ja
mov
mov
push
lea
pushf
ret
inc
mov
fs
push
lock
add
xor
pop
pop
int
arpl
repnz
sahf
insl
pop
imul
fsubr
pop
jb
jno
ror
sub
hlt
ret
ret
or
movsb
es
lds
fsub
adc
mov
mov
xchg
loop
adc
push
test
push
popa
mov
enter
mov
xor
xchg
push
enter
fistl
in
cmp
adc
notb
cltd
das
jp
mov
pop
mov
sub
call
filds
xchg
adc
inc
test
pop
sbb
mov
out
in
in
scas
adc
lcall
mov
nop
int3
or
sub
sbb
mov
out
stos
ljmp
sbb
sbb
sbb
mov
pop
inc
leave
test
sahf
lcall
cli
scas
nop
mov
xchg
loope
push
inc
and
pushf
pop
adc
pop
inc
pop
xchg
fistl
jbe
leave
out
mov
push
test
fisubrs
sti
iret
shlb
aas
subb
call
or
mov
ljmp
sahf
lcall
mov
add
pop
sub
mov
jp
lret
sti
dec
movsl
daa
ljmp
aad
test
ret
xor
mov
mov
call
es
loop
mov
dec
mov
mov
in
add
iret
in
ret
or
or
adc
test
dec
cltd
mov
sbbb
fcomip
outsb
jle
mov
out
xchg
add
iret
std
stc
test
pushf
out
lods
adc
pushf
sub
clc
lea
mov
stos
mov
push
pop
lret
loope
xchg
xchg
lock
fidivs
mov
xor
fwait
mov
loop
xor
sahf
rorl
dec
xchg
dec
icebp
shl
push
loopne
mov
pop
test
and
mov
adcl
sbb
inc
mov
pop
aam
cmp
adc
mov
test
or
outsl
jb
adc
cwtl
or
in
or
push
lea
movsl
add
mov
dec
sub
leave
push
ret
rolb
js
mov
dec
mov
push
arpl
andl
adc
cs
push
push
xchg
movsb
jns
sbb
call
es
pop
xor
adc
jg
dec
fcompl
fnstenv
jbe
lock
faddp
push
sbb
sub
inc
sbb
xor
xchg
mov
iret
lds
push
or
outsb
xchg
sar
in
and
lock
xor
sti
sbb
test
jecxz
js
dec
mov
jmp
pop
sub
jge
mov
nop
sub
mov
in
fs
mov
fimull
xor
jl
mov
jp
addr16
stos
or
mov
xor
or
fincstp
test
inc
add
fcoms
sti
shrl
adc
inc
ljmp
lret
cli
stos
pop
mov
bound
adc
int3
ljmp
fs
push
andl
iret
in
jecxz
out
adc
cmp
mov
mov
push
sbb
jne
and
mov
nop
mov
mov
mov
mov
je
std
fistl
xor
dec
xlat
xchg
and
jle
xchg
inc
mov
shll
push
or
adc
cmpsb
stos
fists
push
adc
xchg
outsb
mov
xchg
fdivrl
adc
lock
ficoml
pop
cmc
cmpsl
sbb
or
mov
add
adc
mov
xor
test
ss
dec
or
into
dec
dec
xlat
push
xor
inc
mov
into
fcmovbe
or
test
jnp
push
cmp
push
jg
aaa
push
dec
insl
lret
adc
cmp
out
xchg
cmp
fisubl
lea
popf
cmp
adc
inc
and
insl
mov
popa
nop
sub
out
aam
jb
loopne
push
xchg
xor
std
rcr
add
sub
sti
arpl
into
fs
lock
push
push
cmp
inc
and
fcompl
lock
lcall
fsubs
addl
aad
out
adcl
sti
leave
jg
std
inc
mov
push
jge
mov
lcall
mov
and
cmpsl
dec
idivb
ficoml
daa
out
inc
cmp
push
add
push
xor
cmp
dec
jmp
mov
mov
sub
mov
jmp
fsubrl
repz
repz
inc
xlat
sub
jp
add
pop
test
jae
xchg
pop
jbe
test
mull
mov
mov
sub
add
fs
mov
dec
inc
sub
push
hlt
clc
sbb
jmp
adc
inc
fcoml
jecxz
cmp
xor
insl
hlt
dec
sub
pop
aad
sar
xor
mov
lods
mov
inc
adc
mov
sbb
mov
cmp
xchg
jle
iret
xchg
cltd
push
dec
sub
push
adc
jmp
jo
jae
cmp
xorb
inc
mov
int3
mov
adc
fimuls
stc
xchg
ljmp
inc
ret
lods
call
sti
add
sub
int
push
outsb
mov
stos
repnz
xchg
cmp
dec
div
lret
add
dec
stc
jg
sbb
icebp
enter
jp
loopne
push
loop
in
test
hlt
push
stc
add
repz
inc
ret
sbb
mov
lock
lcall
fimuls
popf
imul
in
adc
ss
loop
sub
cli
aas
mov
outsb
mov
mul
sub
mov
jb
xlat
add
or
rorl
xchg
lds
rorl
sub
xor
sti
repnz
mov
iret
sahf
mov
ret
mov
xor
xchg
mov
jg
pop
xor
shr
cs
xor
sbb
mov
sbb
push
mov
popf
mov
jae
adc
in
insl
daa
mov
outsb
aas
pop
adc
lcall
jo
or
jnp
jb
test
hlt
add
fidivl
xor
mov
mov
icebp
clc
xor
mov
dec
imul
inc
scas
pop
gs
cmp
bound
hlt
sub
cmp
xor
cmp
aaa
mov
jne
pop
sbb
inc
imul
inc
mov
stos
loope
out
repnz
add
mov
cmp
sbb
sbb
lods
add
mov
inc
jp
inc
fs
test
icebp
xchg
mov
scas
xor
sub
cmpsb
push
mov
add
pop
lahf
dec
jns
cmp
xchg
jmp
lret
daa
ret
ret
out
idivb
roll
dec
fcmovbe
mov
iret
dec
sbb
pop
scas
jno
lret
jno
jl
pop
subb
add
xchg
fcmovne
adc
lret
push
nop
insb
pop
mov
jl
sbb
jne
jge
paddb
aad
popf
mov
push
sub
push
cmpsb
xchg
leave
xchg
xchg
jb
cmp
push
test
loope
div
imul
pop
insb
push
sbb
push
xor
cmp
ud0
pop
rclb
pop
ficomps
into
dec
in
fists
test
jo
jp,pt
add
cli
inc
divb
test
jno
repz
and
push
xor
jge
dec
test
pop
lret
ret
mov
mov
mov
cmpsb
add
xor
and
dec
mov
out
or
aas
fcmovu
jo
int3
sub
mov
inc
outsl
cmp
in
cmc
icebp
in
xchg
xor
ficoms
xor
es
mov
dec
cmp
addr16
xor
lods
outsb
cmp
mov
and
mov
dec
bound
adc
jo
jno
arpl
imul
fs
mov
jb
or
loope
lea
lea
jae
popf
push
mov
push
mov
jns
mov
push
cs
popf
fwait
loope
divps
sub
test
mov
imul
mov
inc
mov
cmpsl
lds
inc
mov
iret
xchg
adc
cmp
mov
repnz
pop
push
dec
mov
adc
imul
negl
rcll
adc
adcl
out
mov
rdmsr
pop
mov
je
and
cmp
in
jbe
jnp
jl,pt
out
mov
aad
cmp
aad
and
stos
jg
cmpsl
roll
js
out
pop
movsb
ret
lods
pop
cwtl
mov
xrelease
lret
lea
test
js
imul
add
in
loop
or
lret
hlt
aas
pop
mov
dec
pop
xchg
adcb
dec
add
inc
inc
and
xchg
cmc
jne
in
mov
nop
popf
mov
ret
dec
and
inc
inc
adc
mov
sahf
xor
clc
nop
mov
mov
xchg
int3
fidivrs
dec
push
fucom
in
inc
pop
mov
je
or
cltd
repnz
pop
and
rcrb
add
add
js
sub
push
nop
push
btr
inc
ret
pusha
jnp
rclb
arpl
push
bound
hlt
sbb
adc
jns
dec
arpl
test
cltd
push
notb
add
in
into
push
popf
mov
fstpl
cwtl
daa
into
dec
fwait
cmova
or
das
mov
out
lahf
or
ljmp
cmc
mov
in
fcmovb
jle
xor
pop
lea
jnp
mov
mov
out
pop
popa
xor
mov
mov
imull
jae
jne
cmc
aas
cli
and
loope
loope
cwtl
and
ljmp
mov
rcr
jp
ljmp
pushf
push
sbb
ficompl
xor
inc
dec
sbb
loope
je
std
fbstp
sti
and
pop
imul
fs
jmp
lret
arpl
imul
cmpsl
out
mov
or
scas
repnz
fsubl
jnp
setno
pop
sub
dec
jno
lahf
in
and
inc
ffree
insl
jnp
pop
sub
pop
rcrl
out
scas
xor
adc
mov
lahf
addb
fwait
jle
and
popa
ss
shr
adc
mov
dec
push
cmp
mov
sti
es
hlt
push
or
xchg
sbb
ja
push
mov
addb
dec
inc
cmp
rcrb
cmp
xor
in
mov
push
sysexit
fdiv
mov
out
roll
leave
adcl
sbb
mov
sub
or
sbb
dec
pop
jns
gs
mov
lret
mov
and
iret
push
aaa
js
out
jle
xchg
idivb
fisttpll
cmc
fcoms
call
out
jo
jl
fdivrl
rolb
filds
jns
sub
jne
inc
sub
add
bound
stos
dec
cmc
mov
sbb
push
loope
loop
cmp
mov
xchg
outsb
pusha
lods
js
lret
icebp
xchg
lret
jp
lcall
je
popf
mov
cltd
je
mov
inc
mov
cmp
stc
arpl
add
jmp
aam
scas
sub
add
mov
pop
xor
mov
jae
shll
sbb
dec
insb
mov
lods
int
sti
ss
push
mov
pop
test
ss
add
mov
insb
loop
pop
push
fists
push
sbb
cmp
fsubp
popf
aaa
xchg
mov
pop
adc
adc
outsl
lahf
lcall
cwtl
push
daa
inc
xor
sub
subl
add
insb
jg
push
jmp
jno
mov
test
cmp
andb
arpl
cmpsb
sbb
mov
xor
out
mov
gs
fmul
jnp
adc
mov
mov
popa
lods
pop
je
cld
out
mov
xchg
adc
mov
pusha
mov
dec
sahf
es
xor
push
sbb
imul
popa
pop
pop
lret
push
pushf
push
mov
lock
add
fistpll
xor
pandn
push
rcrw
push
mov
iret
push
cmp
divb
mov
andl
test
cli
into
loope
lods
loopne
cwtl
add
movsl
mov
stos
add
sub
lds
mov
pop
or
cmp
stc
test
jb
mov
testl
and
mov
xchg
mov
lods
and
xor
stos
fstps
ljmp
pop
mov
inc
ret
insl
and
xor
pop
cmpsb
pop
jnp
or
mul
cmp
cmp
enter
mov
int3
or
shrl
enter
push
dec
imul
push
sub
mov
jae
jecxz
divl
out
dec
adc
dec
pop
adc
imul
push
mov
cli
fcompl
popl
mov
fsubr
cmpsb
xchg
mov
cltd
sti
cmp
sbb
iret
daa
mov
jnp
mov
shll
add
rcr
mov
or
inc
push
repz
out
clts
push
loopne
push
test
ret
enter
mov
add
mov
aad
or
mov
pop
cmpsb
incb
mov
mov
xchg
mov
bound
daa
fiadds
mov
loopne
jle
dec
adc
push
adc
mov
scas
add
mov
loopne
dec
les
sub
jl
andb
dec
rcll
imul
or
aaa
nop
leave
add
pop
hlt
lods
outsb
pop
and
mov
insb
out
push
scas
cli
push
push
cmp
aam
sbb
push
addr16
pop
sub
jns,pn
push
testl
jmp
pop
jbe
sahf
and
sub
psrlq
push
jns
sbb
fiaddl
sub
mov
or
mov
sub
push
int3
stos
sarb
adcl
sbb
mov
rcr
cli
xchg
xor
push
lock
out
xor
shll
or
xorl
fucomip
mov
or
shl
xchg
andl
fidivs
jmp
in
ss
out
loop
in
mov
hlt
stos
dec
push
and
cmpsb
xchg
movsl
sbb
sub
sub
outsl
movsl
dec
movsl
or
adc
addb
mov
push
ss
cld
sub
dec
xchg
fidivl
daa
add
cmpsl
jae
ss
outsl
or
add
movsl
call
push
imul
lock
cmpsl
xor
or
mov
lds
mov
jbe
mov
stos
pop
lret
mov
fiadds
jl
int
int
jecxz
jg
sti
push
adc
adc
into
xchg
xchg
xor
lds
sub
cmp
mov
mov
movsl
add
xchg
jns
and
pop
sarb
add
jae
or
mov
test
in
stos
mov
ljmp
enter
add
fsts
cmpsl
fbld
sbb
cli
sbb
popa
push
aam
adc
es
add
out
mov
ficoms
xchg
ljmp
dec
xchg
gs
int
je
into
pop
adc
fdivrl
or
mov
xchg
jle
lock
sarl
ja
and
add
repz
fildl
sahf
mov
push
rorb
sarl
cmp
lea
sti
call
inc
nop
xchg
por
popf
data16
jp
in
dec
cmp
fistps
ss
sti
mov
bound
add
cmpsb
adc
adc
hlt
aam
repz
ret
xchg
rcrl
ret
jnp
pop
sahf
pop
stos
imul
mov
dec
ficompl
addr16
mov
push
inc
stc
mov
outsl
sbb
xor
xchg
mov
dec
clc
and
repnz
stos
mov
inc
ret
testb
push
in
je,pn
jl
xchg
mov
jbe
jmp
sahf
or
cwtl
mov
in
sahf
out
adc
ss
div
jno
adc
add
adc
inc
lods
mov
arpl
xor
jo
and
into
cmp
enter
and
ret
arpl
dec
sahf
jo
xchg
jae
inc
xchg
test
loope
vpmacsww
pusha
adc
lret
pop
sub
jmp
rorb
cmp
adc
push
xchg
aad
cmp
xchg
pop
lods
cmp
inc
push
rorl
push
sub
xor
div
sub
mov
fists
cmp
mov
ja
push
dec
xchg
jno
lea
pop
add
insb
stc
out
ret
sub
xchg
les
inc
mov
loope
adc
sarl
cmp
pop
push
fidivs
aaa
xor
xchg
fucom
inc
das
loope
or
push
or
popa
pop
pop
pop
mov
xor
cmc
cmp
push
ds
rep
adc
jae
mov
inc
fs
cmp
test
fildl
iret
add
mov
hlt
fistpll
xchg
xorb
iret
jnp
push
or
leave
dec
dec
insb
xor
and
std
jl
mov
jge
in
insl
xchg
jne
xchg
jae
int
loop
movsb
pop
cmp
aam
rolb
arpl
inc
adc
add
out
dec
sbb
cli
mov
pop
add
gs
cmp
sarb
add
push
leave
int
jnp
pop
not
cltd
imul
cltd
mov
fwait
pop
imul
int
or
daa
sbb
push
xor
xchg
cmpsl
and
add
sahf
fcompl
jmp
jne
aaa
out
rolb
sti
cmc
daa
je
fistpl
push
add
scas
push
ffree
adc
mov
lret
int3
mov
aam
mov
xchg
addr16
jle
aad
inc
adc
mov
dec
cs
pop
sbb
jp
cwtl
xor
xor
lret
sbb
cmp
mov
mov
pop
mov
adc
stc
push
pop
inc
pop
cld
sahf
ret
cld
and
imul
sub
sbbl
lock
je
push
and
aam
and
mov
jg
imul
jbe
adcl
jle
clc
out
imul
or
imul
insl
cli
dec
out
lds
push
subb
mov
lcall
cmp
sub
stos
in
xlat
lea
xchg
jp
rcrb
aad
inc
in
mov
sbb
in
jg
or
insb
loope
arpl
xchg
xchg
cli
cmpsl
mov
and
push
mov
mov
mov
loope
pop
jmp
adc
leave
mov
push
bound
xchg
jns
out
push
xchg
push
push
subb
sbb
xor
test
std
inc
out
mov
stos
fisubrs
jnp
pusha
out
cwtl
bound
jge
bound
jae
sbb
insl
add
mov
push
loopne
adc
and
pop
inc
push
jge
jge
stc
leave
rcr
subl
roll
fdivl
es
cmp
dec
xor
ja
or
cmp
jp
inc
add
ljmp
inc
mov
mov
mov
cs
add
lret
mov
pop
mov
push
mov
out
scas
inc
dec
lcall
rcrb
xchg
sub
lock
xchg
add
push
in
insb
pop
xchg
stc
xor
mov
jb
pop
xchg
push
and
lock
mov
mov
push
aaa
scas
call
outsb
not
insb
addr16
adc
cmpsb
ss
and
loop
mov
sahf
sub
pop
sub
enter
into
inc
out
jnp
repz
or
les
aad
imul
or
int3
cmp
or
ja
icebp
scas
mov
and
je
dec
jnp
cmpsb
cmp
bound
fistl
aam
leave
mov
and
bound
iret
aaa
gs
enter
js
mov
inc
sarl
mov
or
dec
out
test
adc
enter
imul
fsts
and
cltd
in
pop
jb
imull
ja
lock
rcll
sahf
or
fisubl
push
cmc
or
mov
cmp
mov
xchg
stos
lea
sub
xchg
cmc
mov
mov
or
inc
dec
dec
test
insl
cli
xchg
sbbl
loop
fistpl
pop
xor
gs
mov
jnp
push
mov
mov
cli
or
add
adc
xorl
nop
inc
mov
arpl
add
push
and
movl
dec
aas
ret
and
fwait
aas
jnp
int
pop
inc
mov
lock
loopne
mov
push
mov
inc
mov
sbbl
aad
daa
cwtl
dec
cli
sti
jno
idiv
push
and
mov
loopne
sahf
mov
mov
add
or
fdivrl
cmpsb
daa
lea
pop
push
lahf
push
push
popf
sub
mov
pop
sub
les
push
test
scas
mov
and
loope
sbb
inc
pop
into
adc
mov
enter
test
xor
lret
or
incb
sbb
or
popa
mov
or
inc
jbe
or
mov
fs
pop
cld
or
push
sbb
and
dec
cmp
roll
inc
xor
pushl
jecxz
cmp
add
sub
push
xchg
lahf
mov
fs
repnz
ljmp
xor
push
repnz
cmp
insb
inc
pop
adc
mov
cmpsb
das
xor
pop
lds
aad
mov
sbb
int3
fsubl
scas
repz
xchg
ficompl
adc
xchg
je
or
or
rorl
int3
and
dec
sbb
fisubs
mov
xchg
dec
std
int
data16
dec
mov
add
mov
rcr
nop
push
idivl
frstor
mov
imul
push
cmp
mov
lea
or
lods
or
push
pop
jns
add
mov
xchg
shrl
adc
add
daa
in
sbb
testb
or
xchg
jne
lock
movsb
lcall
or
pushf
mov
dec
int3
pop
enter
int3
mov
lret
cs
or
mov
mov
sarl
jmp
dec
shrl
out
lods
xor
loopne
rorb
addl
popa
not
loopne
repz
cli
ss
pusha
lcall
cmc
or
cmp
xor
imul
inc
inc
leave
dec
add
nop
pop
movsb
lock
push
movsl
or
arpl
sbb
and
test
xchg
pop
das
or
add
enter
push
inc
or
jecxz
mov
test
mov
lret
cmp
mov
or
iret
jo
out
cwtl
stos
rorl
inc
jbe
push
cmpsb
loop
ret
nop
and
adcb
aaa
cmp
pop
lock
push
ljmp
and
insl
lret
jnp
mov
xor
ss
cmpsb
or
adc
mov
jnp
insb
pop
imul
add
xor
ja
mov
cs
movsl
loop
scas
outsb
sbb
mov
icebp
sbb
push
adc
std
sbb
and
and
inc
and
jmp
outsl
repz
pop
xlat
out
sbb
mov
cld
fcompl
mov
lock
in
push
mov
stos
bound
sarl
xor
mov
test
idivb
in
mov
mov
inc
cmp
ja
je
mov
cli
push
jae
add
and
cmp
pushf
mov
jns
call
jnp
jno
stos
dec
pop
enter
das
shll
pop
mov
cwtl
loop
in
fs
lds
mov
mov
mov
dec
dec
aas
jmp
ss
out
pop
push
dec
inc
test
les
fwait
gs
cmp
gs
pop
rcrb
loope
clc
pop
testb
push
adc
lock
insb
sub
jle
dec
pusha
push
rclb
inc
fldl
stos
push
pop
cmpsl
xor
inc
fcoms
xlat
inc
fidivrl
pop
lcall
out
push
jge
pop
icebp
jbe
scas
xor
mov
nop
cld
inc
popf
xchg
pop
ljmp
jne
inc
and
cmp
daa
cmp
or
lods
je
movsb
sub
fcoms
xchg
movsl
lods
push
adc
ret
pop
mov
les
mov
out
jle
mov
add
imul
test
dec
cmpsl
and
or
outsb
cmpsb
jecxz
xchg
int
ljmp
pop
inc
hlt
mov
in
sub
and
sbb
nop
xchg
stc
test
aam
outsl
imul
js
push
fnstsw
dec
rcrb
xor
les
jno
mov
mov
add
add
cli
sbb
mov
jg
jg
out
loop
popf
ret
adc
xchg
cld
rcrb
pop
repz
rcrl
ljmp
in
test
loopew
adc
and
sbb
jmp
cmp
push
push
jp
xchg
jo
add
xchg
aaa
push
mov
rorb
cwtl
or
push
mov
lcall
insb
mov
xchg
mov
fs
fsubrl
push
xor
idivl
bound
sub
sbb
jne
rol
stos
sub
mov
das
sbb
jge
std
das
xchg
mov
pop
jge
sbb
es
stos
and
inc
mov
ret
mov
inc
or
lahf
out
push
lahf
dec
mov
xlat
pop
sub
xor
mov
xor
stc
adc
sbb
mov
xor
cmp
jno
mov
les
jl
std
adc
inc
and
jns
xchg
cwtl
sahf
aas
mov
sbb
xorl
inc
mov
dec
mov
mov
fistl
lods
add
popf
es
into
aam
pop
ljmp
xlat
lahf
dec
pop
fadds
push
jge
out
mov
dec
lods
rcrl
daa
add
sbb
inc
rorb
lods
sub
mov
xchg
xchg
or
test
push
sub
mov
cld
subb
mov
pop
popa
cmp
push
dec
lahf
imul
loop
jo
xchg
inc
pop
add
xor
cmc
std
ds
icebp
xchg
fisubs
mov
adc
mov
mov
and
lock
arpl
aas
and
ret
mov
jne
in
sub
icebp
fisttps
aas
ljmp
mov
inc
out
push
xchg
xchg
ret
jae
dec
cmp
xchg
scas
adc
mov
push
mov
adc
enter
int3
push
push
clc
sbb
or
lods
cld
add
inc
out
push
les
xchg
popa
mov
fistl
ret
and
test
movb
push
in
or
push
stos
jp
xor
js
pushf
adc
push
and
mov
dec
lahf
xor
push
sbb
pop
jbe
out
push
xlat
push
movsl
add
xchg
cmp
jne
cmp
fwait
mov
int3
or
imul
ror
lret
xchg
mov
loop
out
jne
pop
adc
iret
sarl
push
rcrl
repnz
mov
ja
xchg
and
test
sub
mov
cmpsl
cltd
scas
aas
pop
out
dec
fmulp
inc
pop
divps
jecxz
push
add
clc
clc
sub
adc
pop
shll
push
push
adc
lea
mov
shl
pop
aas
xchg
xchg
mov
mov
push
pop
movsb
aad
pop
and
mov
mov
sub
sbb
fs
jno
scas
and
mov
loope
std
push
ja
mov
dec
xchg
int
push
adc
popa
inc
addr16
add
jl
sti
cwtl
jge
js
mov
jnp
push
data16
inc
mov
jg
jge
jbe
dec
pop
lret
push
add
out
outsb
nop
xchg
sarl
fdivs
mov
insb
jnp
jmp
inc
fistpl
fsubp
jnp
ficoml
popa
mov
and
push
xchg
popa
jecxz
cwtl
mov
icebp
sahf
jno
stos
add
lret
inc
rcrl
rcl
jo
xchg
fwait
ror
xchg
iret
inc
pop
popa
out
and
lcall
test
pushf
fwait
pop
sbb
lds
sarl
pop
adc
gs
push
in
cmp
jecxz
lock
push
ret
cmpsl
and
out
pop
push
mov
mov
adc
out
xchg
mov
mov
shlb
sbb
xor
test
data16
dec
mov
ss
movl
aam
push
negb
pop
hlt
or
lock
in
arpl
mov
mov
or
pop
push
aaa
sub
loop
and
mov
icebp
xchg
and
idivl
or
push
xchg
sarb
pop
test
mov
dec
jp
cwtl
pop
add
mov
dec
pop
sub
push
stc
repnz
jmp
in
push
rcl
mov
pop
test
pmaddwd
mov
repnz
rcrb
adc
leave
arpl
push
cmpl
add
enter
sahf
sbb
push
inc
int
ja
or
cmp
mov
mov
fldt
xchg
add
fdivl
fstps
adc
cmp
imull
and
pop
outsb
aam
or
das
xor
jo
and
aam
cmpsl
fs
cltd
fs
sahf
stc
scas
cmp
sub
pop
xchg
push
sbb
scas
iret
rol
jo
sti
out
lods
xchg
pop
push
je
cli
sbb
xor
clc
cmp
and
jbe
jo
ljmp
cmp
cli
es
data16
aam
je
dec
imul
mov
pop
clc
incl
and
mov
pop
lahf
aas
cmp
inc
push
fadd
pop
dec
mov
push
inc
popl
pusha
push
push
inc
mov
mov
adcl
loopne
pushf
cmp
movsb
xor
and
ds
inc
lods
int
pop
mov
lret
fsub
mov
jmp
xor
popa
sahf
sub
pop
cs
mov
cld
mov
push
inc
push
dec
mov
es
das
jmp
lcall
sub
pusha
sbb
and
fld
and
cmpb
xor
dec
dec
lcall
jmp
pop
pusha
scas
iret
cwtl
xor
xor
cmp
sbb
pop
jo
pop
and
stos
call
call
add
test
js
push
sbb
cmp
cmp
cmc
pop
sbb
stc
jle
lret
jnp
enter
dec
push
pop
adc
test
or
dec
fcoms
les
sahf
or
inc
scas
cli
lds
inc
push
dec
and
push
inc
cmpsb
mov
test
hlt
push
call
sub
sbb
lcall
daa
imul
shl
cmp
shll
mov
mov
mov
sti
adc
mov
xor
mov
test
outsb
inc
cmp
push
jno
mov
add
pop
push
mov
dec
and
rol
inc
sbb
fisttps
push
mov
xlat
inc
and
addr16
cmp
adc
cmp
xor
je
cmp
ja
fldcw
clc
push
mov
rclb
xor
or
stos
sbb
push
stos
mov
nop
stc
mov
mov
rolb
lahf
mov
stc
pop
mov
adc
lret
fsubrl
lret
ret
ljmp
mov
adc
movsl
inc
jmp
mov
xor
sub
out
rcrb
fsubp
mov
test
daa
dec
aaa
inc
sub
mov
cmp
push
xchg
jmp
jne
jg
jmp
sbb
inc
mov
and
pop
sti
movsb
ljmp
outsb
imul
repz
push
lret
nop
das
iret
loop
repz
cmovb
mov
mov
mov
mov
pop
sbb
ss
mov
sbb
lods
mov
mov
rcrb
pop
mov
inc
inc
cmpsl
dec
pop
push
ficoms
mov
dec
xor
imul
insl
add
mov
mov
jle
sbb
sbb
and
imul
adc
push
or
movl
popf
dec
imul
out
adc
sbb
ja
sbb
xchg
inc
and
cld
in
xor
scas
cmp
add
lods
notb
loop,pt
or
fnstcw
enter
addr16
test
jb
lret
pop
dec
ret
dec
ja
std
inc
jbe
inc
loope
lods
jno
push
idivb
pusha
add
xchg
rorl
imul
adc
enter
movsl
xlat
testb
imul
les
rcrb
shr
lods
out
pop
out
xchg
in
call
clc
insb
mov
jae
push
inc
xor
xchg
sahf
test
stos
aaa
mov
std
mov
pop
cmp
movsb
das
std
mov
sbb
push
lds
and
aam
mov
and
rorl
shl
and
xor
mov
mov
dec
das
aaa
popl
mov
daa
push
jae
inc
xor
push
xor
mov
repnz
sti
add
clc
jo
mov
mov
sbbl
fdivrp
jp
sahf
inc
lret
push
mov
push
mov
mov
lea
xchg
dec
fldcw
clc
in
push
inc
imul
and
out
cmpsl
mov
push
sbb
into
sbb
enter
ss
fnstenv
xchg
fnstenv
mov
sbb
and
inc
sbb
cmp
clc
add
negl
icebp
mov
fcom
ja
shll
xchg
test
mov
mov
jmp
add
in
xor
cli
fsub
ljmp
jmp
xchg
push
push
fwait
mov
jecxz
enter
adc
push
xlat
push
je
push
mov
adc
pcmpgtd
or
test
lret
leave
into
push
lret
xor
test
sbb
inc
into
loope
imull
mov
xchg
fsubl
dec
sti
out
or
xchg
sub
adc
dec
lcall
out
cld
and
cmp
mov
cmp
xor
fmull
loop
ret
jp
es
jecxz
adc
cltd
mov
imul
loopne
xor
push
cltd
adc
dec
cmp
inc
adc
dec
out
shlb
in
test
ds
es
jbe
pop
fbstp
push
mov
sub
cmp
jle
rcr
inc
sbb
jle
imulb
testb
fsubl
lods
dec
sub
js
or
enter
outsb
push
cmp
in
dec
dec
test
sub
jns
outsl
dec
inc
add
cmpl
mov
or
cltd
fidivrs
cld
pop
mov
jl
mov
mov
rorb
mov
sub
sub
loopne
inc
cli
repz
adc
or
sarl
push
dec
or
xchg
fsubs
mov
push
cmp
ljmp
sub
lods
xchg
aas
and
lahf
enter
daa
lret
adc
sub
js
mov
aas
loop
lds
out
pop
mov
mov
shll
enter
fimuls
xchg
xchg
inc
dec
outsb
cmpb
arpl
shrl
sbbl
mov
sub
pop
xchg
push
adc
jg
lahf
push
dec
jo
mov
mov
repnz
popa
add
ret
sbb
and
or
into
adc
ret
int
mov
and
xor
ja
inc
fs
lods
rcrl
mov
push
xchg
mov
or
out
dec
movsb
subb
jle
sbb
dec
sub
jecxz
stos
push
lods
push
into
jl
adcl
loopne
or
sbb
cld
add
jnp
inc
mov
pop
cmpsb
xlat
xchg
and
and
xchg
push
mov
js
sahf
ret
sbb
adc
lds
lods
lcall
xchg
pop
dec
add
dec
clc
pop
lret
nop
mov
lock
pop
pusha
pusha
sub
lea
aam
mov
pop
cmp
mov
testb
repnz
pop
lret
movsl
gs
and
push
movsl
xchg
imulb
push
or
mov
mov
or
rcrl
push
mov
sbb
xchg
in
jmp
cltd
pushf
insb
repz
push
lret
insl
dec
mov
inc
sub
push
sub
addr16
sub
rol
scas
ss
andl
mov
and
push
pop
jns
lods
fcmovu
out
mov
jecxz
cmp
ss
ss
cld
pushf
fadds
push
jmp
jno
adc
sbb
bound
inc
pop
lret
dec
lods
adc
call
or
aad
mov
sahf
xchg
jle
pushf
inc
cmp
int
insb
xchg
testb
movsb
and
pop
addr16
gs
in
test
test
mov
jbe,pn
xor
inc
ds
jl
sahf
out
ror
xchg
add
push
mov
movsb
sbb
fstpt
fldl
cmp
or
jecxz
adc
push
test
dec
lret
inc
mov
ret
inc
mov
insb
sub
jle
enter
stos
mov
sbb
add
mov
stos
mov
mov
pop
and
stc
in
fcomip
fdivp
frstor
int
push
add
negl
or
adc
lcall
pop
mov
xlat
jmp
je
xchg
sahf
test
aad
xor
jge
maxps
mov
xchg
mov
xlat
xchg
scas
cltd
pushl
jae
pop
aam
adc
into
push
pop
js
xor
subb
inc
lcall
jge
std
call
dec
out
xchg
mov
fldt
loope
imull
mov
repnz
mov
loop
in
dec
shrl
rcl
xchg
jns
push
adc
and
sbb
call
icebp
sahf
fistl
cmp
cmpsb
pop
out
xlat
dec
mov
cmp
or
out
pop
mov
shll
inc
in
fidivrl
xor
mov
pop
inc
sahf
cmp
mov
mov
xorl
rcl
call
insb
sub
clc
scas
mov
sub
imull
mov
sbb
adc
or
add
push
sub
pop
fists
push
icebp
push
sbb
mov
lock
imul
add
jo
sbb
les
xchg
iret
mov
std
inc
xchg
pusha
ret
shlb
orl
aam
add
jo
mov
sbb
push
mov
out
std
add
cwtl
aaa
shr
add
popa
cmp
push
cld
lods
adc
out
inc
aaa
xchg
enter
or
pop
data16
and
dec
outsb
inc
or
mov
sbb
sub
out
pop
cmc
sub
loop
cmp
and
test
icebp
jne
fwait
mov
movsb
pop
sub
inc
ret
dec
cli
push
jl
cltd
cmp
mov
or
mov
adc
mov
sbb
nop
adc
mov
mov
popf
add
outsb
call
pop
push
push
mov
cmpb
and
pop
js
stos
fistps
jecxz
mov
sbb
xchg
pop
js
jno
mov
stos
dec
inc
outsl
pop
add
and
mov
adc
movsb
xchg
pop
push
in
pop
or
sub
mov
fwait
sbb
jne
pop
and
mov
call
xchg
and
xchg
movsl
stos
lods
insb
mov
into
ds
inc
push
mov
hlt
sti
shlb
int
ds
shr
test
repnz
cmp
fcompl
sbb
cmpsl
call
mov
dec
pop
and
mov
cmp
xlat
stos
inc
pop
fistpll
das
push
push
in
pop
sbb
cli
xchg
out
test
cmc
insl
mov
cmp
add
pop
cwtl
push
imul
in
int3
jmp
fcos
dec
xor
pop
push
popa
mov
and
out
test
push
bound
outsl
add
or
insl
sub
fisubrl
and
arpl
cmp
push
add
int
pop
add
mov
aas
pop
push
lret
icebp
mov
cmpsl
lods
das
inc
fistps
add
ljmp
jp
mov
pop
in
or
in
jle
into
push
inc
popa
mov
dec
mov
ljmp
mov
lods
add
mov
add
es
rcrl
adc
sub
pop
lock
loop
and
mov
mov
jnp
outsl
xor
sub
in
imul
jnp
jae
inc
jo
in
xorl
rorb
icebp
adc
inc
cwtl
xchg
sbb
mov
jge
xor
sub
cmp
shll
cmc
push
roll
sbb
sti
add
rorl
sub
clc
push
bound
jle
sahf
jmp
xchg
clc
sarl
ja
and
lret
xchg
ror
sahf
nop
into
ljmp
xchg
cmpsl
fisubrl
in
mov
lods
pop
scas
adcb
cs
lds
jno
insb
pop
or
rorl
mov
daa
cmp
push
or
add
das
push
fmull
out
lcall
les
testb
mov
aam
jno
pop
fcomi
imull
sub
les
sub
xchg
inc
lcall
sub
addr16
adc
pop
and
jbe
jle
cmpsl
out
add
add
loop
mov
aas
sahf
ret
fbstp
mov
pop
push
je
cwtl
rcll
inc
btc
cmc
mov
or
lcall
and
jecxz
sbb
imul
data16
xor
stos
xchg
or
dec
js
mov
enter
xchg
lods
mov
sbb
sbb
pop
ss
mulb
sub
fisubs
mov
mov
shrl
mov
rcl
dec
adc
insb
adc
or
and
pop
mov
aas
mov
rcl
scas
cmp
cmp
aas
push
stos
clc
add
fsubr
cmp
jnp
das
sub
or
sbb
in
sti
in
fidivrs
mov
jnp
xor
cmp
lahf
into
jns
sahf
aaa
mov
lods
push
cmp
and
inc
inc
dec
push
sub
scas
stos
jns
jmp
mov
out
cld
xchg
rcl
jg
shl
push
mov
das
inc
xchg
pop
and
push
sub
lcall
idivb
mov
pop
int3
push
pop
hlt
outsb
mov
iret
mov
std
out
aaa
jne
mov
mov
cmp
mov
jg
dec
lahf
stc
and
mull
sub
int3
dec
test
add
inc
xor
xorl
pushf
cmpb
pusha
adc
or
adc
sub
cli
mov
out
ret
adc
inc
test
cmpsl
cmp
mov
dec
inc
jp
sub
in
jg
or
push
pop
pop
ret
or
mov
fcmovu
lret
push
and
inc
fdiv
aaa
jge
jecxz
lock
sub
das
or
sbb
cmc
xchg
xchg
xor
xchg
mov
xor
sti
mov
pushf
mov
testb
cld
jnp
std
sti
inc
mov
stc
push
xor
in
mov
mov
mull
int3
outsl
adc
sub
mov
aad
stos
outsb
cmp
sub
sahf
pop
test
outsl
jg
inc
xor
inc
fildl
sahf
mov
jns
adc
fmuls
pop
xchg
out
orl
jo
push
jo
xchg
sub
push
sbb
and
inc
cmp
xorl
inc
in
jbe
cmp
scas
ja
repz
cli
xchg
and
orb
or
cli
pop
xor
jb
adc
fsts
add
fidivrs
ret
jg
push
mov
push
xor
call
dec
push
gs
dec
dec
call
pop
pop
push
repnz
and
push
add
mov
lret
lcall
pusha
xor
std
in
xchg
ja
push
iret
fbld
dec
popw
jge
outsw
mov
mov
sub
loope
in
fsubl
mov
dec
mov
gs
shll
adc
push
shlb
sub
mov
repnz
mov
stc
adc
fistpl
cmp
ja
jnp
mov
or
jecxz
sub
in
push
jmp
adc
lahf
jns
or
out
xor
push
cmc
jno
movsl
adc
jmp
mov
hlt
push
mov
pop
push
jge
add
fwait
test
lods
jno
pop
adc
mov
dec
pop
jp
and
sti
and
daa
inc
outsl
dec
mov
inc
and
in
add
fildll
incl
lods
jb
jge
pop
push
sbb
cmp
shrb
mov
adc
cltd
sub
mov
push
je
push
mov
in
mov
or
decb
cld
jns
cmp
mov
push
add
push
cwtl
xor
shrb
mov
sub
push
mov
xchg
out
xor
push
shlb
iret
sbb
xchg
ja
dec
loope
cmp
cmc
rol
lea
push
jl
outsl
push
or
dec
data16
pushf
testl
inc
mov
and
jmp
and
outsl
xchg
add
jo
mov
lds
js
fldt
add
fiaddl
add
scas
stos
lret
jae
fistpll
bswap
jmp
call
xchg
out
ret
dec
cmp
adc
push
dec
hlt
call
jnp
mov
test
inc
mov
cli
mov
inc
inc
les
pop
or
and
and
lahf
ffreep
loope
test
clc
insb
mov
inc
ret
pop
inc
repz
fnstenv
adc
mov
in
cltd
imulb
sub
push
loopne
nop
fbld
aad
dec
dec
pop
popf
jae
cmp
dec
adc
pop
cmpsb
and
xchg
push
std
sub
pop
add
fldcw
outsl
js
xchg
stos
out
jbe
rorl
jl
mulb
xchg
adc
and
lahf
add
loopne
mov
into
in
inc
pop
jp
mov
jb
mov
mov
xchg
cmp
xlat
sti
pop
bound
jb
cmp
popa
icebp
pop
or
adc
push
test
sbb
data16
icebp
divl
sbb
mov
push
js
sbb
leave
sbb
iret
xlat
sbb
jo
and
insb
push
push
enter
jne
fsts
push
pop
mov
pushf
int
sbb
movl
jle
inc
sbb
roll
addr16
inc
jb
mov
xchg
pop
inc
movsl
int
jnp
faddl
sbb
shrl
xchg
and
sub
add
mov
pop
decl
mov
cmp
sub
add
sbb
xchg
ljmp
in
inc
push
and
mov
mov
je
jmp
movsl
rclb
add
mov
cmp
lea
scas
jge
insl
stos
out
mov
hlt
out
fdivr
and
test
clc
jmp
test
inc
shll
hlt
jbe
bound
sarb
xor
inc
dec
sbb
scas
mov
out
ja
dec
mov
mov
pop
pop
scas
out
data16
lret
jmp
sub
mov
loopne
pop
addr16
inc
fsubp
ljmp
in
cwtl
idivb
mov
mov
xchg
incb
out
insl
aam
inc
xor
dec
pop
and
scas
cmc
dec
xchg
leave
jl
out
stos
adc
pop
inc
jno
popa
push
dec
sub
data16
out
lahf
repnz
dec
bound
in
or
iret
adc
in
data16
out
mov
xchg
lret
pop
ficoml
shrl
mov
in
out
push
and
push
cld
pop
mov
lods
fldl
pop
pop
pop
aad
fucom
dec
jo
lods
adc
pop
icebp
mov
aad
fisubrl
test
adc
inc
jle
pop
setg
fsubs
jg
aaa
in
push
mov
push
add
inc
cmp
push
addr16
shr
dec
dec
fldcw
es
adc
addr16
push
pop
inc
sbb
shrl
push
ds
popa
mov
mov
pop
push
shl
scas
orb
shrd
ret
jb
xchg
dec
adc
ret
lret
dec
pushf
or
fistps
test
das
lea
addr16
mov
pop
push
out
push
pushf
cmc
jae
mov
mov
dec
xor
jle
mov
dec
sbb
insb
push
inc
mov
jb
mov
fwait
pop
cltd
shr
outsl
hlt
call
mov
sub
dec
sbb
push
test
sarb
push
out
addr16
andl
inc
addr16
les
jnp
std
shlb
aaa
movsb
xchg
push
or
mov
int
jo
and
xor
xchg
sti
ficoms
dec
cmp
push
lods
jg
sahf
dec
popa
sbb
into
dec
pop
shlb
dec
in
sti
fmul
push
rorl
mov
imul
lahf
mov
inc
pop
fists
stos
lret
xor
jle
ret
jne
sbb
popf
in
mull
xchg
or
mov
mov
push
pop
sub
push
stos
dec
and
ja
inc
adc
lcall
pop
aad
clc
andl
insb
shll
idivb
xor
sahf
jo
sbb
stos
sbb
nop
pop
fistpl
inc
pop
sub
xchg
mov
sbb
lret
mov
lds
clc
inc
arpl
and
inc
mov
pop
shl
pop
aas
test
push
mov
mov
jo
pop
push
dec
cmp
mov
lock
lods
lea
ret
test
cmpsl
ja
mov
arpl
dec
dec
mov
dec
sbb
gs
xchg
push
lock
cmpl
cmp
push
filds
addr16
push
in
dec
and
rorb
inc
inc
and
push
xor
ds
xchg
lock
pop
loope
jge
fs
fldcw
movsb
mov
jne
lret
or
sbb
or
mov
fisubrs
cli
out
es
xlat
gs
mov
mov
stos
adc
pusha
test
add
mov
cmpsl
cmpsl
xlat
adc
and
shl
mov
mov
cmp
push
mov
mov
push
inc
mov
fwait
out
shr
and
mov
and
dec
mov
pop
xor
jle
test
mov
test
xchg
cmpsl
jle
sbb
pop
cmp
cmp
adc
rcrb
insb
fldcw
out
inc
and
rolb
icebp
repnz
cmpsl
jle
outsl
sbbl
fcompl
aaa
insb
sub
inc
pushf
jne
dec
stc
rorl
and
imulb
sahf
fs
ja
and
add
sub
les
clc
pushf
or
sahf
hlt
jns
rcrb
mov
adc
mov
xor
and
adc
insl
aad
icebp
arpl
popa
sarl
mov
cltd
fs
mov
push
rcr
ds
cltd
lahf
insb
loop
mov
das
cs
rorl
lds
cli
cmp
std
lahf
fsubl
dec
xchg
jle
imul
xchg
mov
mov
mov
hlt
divl
enter
ret
jl
adc
xchg
adc
stos
jmp
outsl
pop
rorb
popf
and
iret
dec
orb
xchg
popa
in
orb
outsb
subb
push
mov
pop
js
xchg
mov
repz
mov
dec
dec
mov
loopne
leave
ss
nop
mov
cld
shl
cli
divl
lret
lcall
rclb
add
leave
inc
int3
pop
aaa
inc
and
mov
inc
dec
stos
bound
xchg
mov
mov
pop
push
adc
lods
inc
in
jb
or
pusha
rol
push
insl
mov
xorb
mov
pop
xor
int3
xchg
call
mov
push
shlb
cwtl
xchg
xchg
lcall
mov
jnp
adc
or
scas
adc
push
lcall
insl
aam
icebp
ja
add
jge
lea
scas
jl
hlt
mov
or
sbb
outsl
and
outsl
hlt
or
popa
cs
mov
or
cltd
pop
ja
dec
xchg
outsl
add
aad
movsl
movsl
aad
xor
pop
fstpt
push
cmp
insb
pop
out
jnp
add
nop
sub
lret
xchg
outsb
aad
daa
in
fst
mov
test
ljmp
test
mov
add
push
fsub
fiaddl
daa
int3
dec
notb
outsl
lea
imul
pop
addb
fsubp
pop
std
or
lret
pop
add
inc
cmpsl
mov
pushf
call
sbb
jmp
jb
out
sbb
cli
or
outsl
js
cs
mov
inc
add
jno
jmp
imul
dec
or
rcrb
outsl
mov
imul
pop
and
sub
or
mov
out
loopne
jno
mov
xchg
xchg
pop
xor
mov
push
or
pop
mov
cmc
pop
push
pop
ret
out
sub
ja
lret
insl
jae
insl
stos
in
xchg
cmp
scas
mov
rorb
les
mov
pop
sbb
sbb
dec
gs
lea
jmp
fs
arpl
call
call
rolb
jb
in
movsl
add
ljmp
add
or
dec
push
lods
lret
sbb
push
rcrl
loope
enter
mov
mov
xorb
lahf
bt
mov
pop
fisubrs
in
cwtl
lock
es
mul
repz
lret
xchg
in
push
jg
jmp
fisttps
into
mov
pop
icebp
repnz
mov
imul
out
mov
jp
mov
into
data16
loopne
ficoml
stos
xchg
scas
outsb
cmpsl
and
rolb
fdivp
sub
andl
push
jnp
lret
pop
pop
in
scas
aas
adc
js
pop
lret
nop
insb
or
push
in
adcb
shrl
push
lret
pop
sbb
cs
push
push
into
xchg
and
mov
bound
enter
sti
rcll
cltd
fmuls
adc
fwait
jbe
adc
sub
orb
insb
lock
adc
stos
and
push
pop
fists
or
jge
pusha
adc
stos
ja
loop
sub
imul
mov
mov
push
nop
jg
mov
push
cmpsb
rorl
in
dec
aaa
ret
xchg
sub
mov
cmp
pop
push
inc
in
jg
mov
mov
and
mov
dec
xchg
jmp
cltd
and
and
cmp
adc
fwait
jne
cmpsb
sub
push
dec
xor
mov
pushf
mov
lret
in
test
mov
cmp
cmp
lods
sti
sbbl
aas
push
cmpsb
jge
mov
aaa
and
cs
ficompl
mov
es
mov
in
icebp
jl
or
loop
movsb
rolb
fcompl
or
fiadds
add
jge
sbb
jmp
fldenv
mov
out
repnz
xor
add
stc
mov
rorl
jnp
stos
sub
cwtl
xor
mov
test
add
shll
and
xchg
addr16
aaa
dec
or
sub
imul
and
push
stc
and
and
push
or
int3
jae
nop
cmp
outsl
sbb
sub
sti
repz
mov
mov
jno
add
andl
mov
adc
xchg
sub
daa
and
fbstp
lret
or
mov
xor
ret
xor
add
cmc
pop
out
push
jns
addl
lods
jbe
imul
jle
pusha
arpl
test
cmpsb
std
pop
xor
int3
rcrl
mov
push
idivb
jo
add
sub
test
jmp
hlt
lret
pop
bound
jg
mov
cmp
push
dec
sub
aas
in
dec
mov
xorb
sbb
das
mov
push
xorl
cmpsb
das
int3
pushf
pop
addl
sub
cmp
inc
jns
rclb
sarl
sub
scas
push
fildl
fisttpl
inc
leave
push
inc
pop
repnz
jbe
cld
xchg
xor
pop
movsb
jae
inc
inc
mov
cmp
mov
roll
test
stos
push
das
cmp
in
or
movlps
into
xor
lret
sbb
jns
ret
clts
imul
popa
mov
push
push
or
pop
or
dec
loopne
imul
lret
adc
cltd
push
repz
push
enter
sbb
insl
mov
bswap
sub
inc
xor
fs
mov
mov
add
or
into
or
test
lahf
and
mov
xor
ffree
push
fnstsw
xor
mov
mov
mov
fs
push
imul
or
in
or
xchg
decl
mov
loop
jbe
leave
icebp
push
repz
adc
mov
in
fdivrl
sbb
inc
jbe
ficoml
pop
push
cmc
jp
std
cmp
sub
adc
daa
add
sbb
lea
orb
jno
and
jmp
sbbb
in
lcall
and
inc
jno
es
sbb
add
add
sub
lret
loop
xchg
rcl
ds
stc
insb
fs
daa
inc
jnp
add
sub
rorl
add
fs
unpcklps
fidivs
nop
dec
cmp
and
repz
lret
pop
push
pop
xor
in
xchg
and
mov
ret
ret
flds
mov
push
cwtl
and
cmp
aaa
jp
ret
enter
rol
sub
test
dec
cld
dec
jae
sti
out
push
test
sub
popf
mov
mov
les
mov
gs
sti
sub
dec
hlt
in
pusha
loop
or
fnstenv
sub
mov
sti
adc
dec
cmp
out
incl
cmpsb
ds
into
pushf
test
push
pop
xchg
out
les
pop
popa
mull
stos
outsl
push
cld
adc
mov
inc
das
jg
rorl
aam
sti
push
mov
clc
push
pop
inc
scas
icebp
popa
lods
aam
xor
sarb
dec
inc
out
pop
push
testl
cmc
xchg
test
imul
aas
ljmp
pop
aaa
movsl
aas
lods
std
in
and
add
pop
in
cwtl
cwtl
mov
and
push
iret
aam
cmp
xor
sbb
sub
roll
lds
pusha
hlt
push
mov
add
mov
fcmove
fdivrs
or
or
jl
lret
pop
xor
lret
fbld
rcrl
fimull
inc
out
cmp
and
jns
mov
inc
sahf
cmpsb
jg
inc
in
and
lret
out
test
xor
xchg
jmp
pop
jg
fisttpl
sub
aad
mov
mov
push
dec
xchg
cs
push
jae
cmp
into
mov
jnp
outsb
inc
mov
push
add
pop
xchg
popa
mov
xchg
xchg
mov
dec
sbb
bound
xchg
aaa
ss
push
int3
mov
fs
or
push
or
arpl
cmp
test
xlat
into
adc
je
sub
push
jne
cmp
adc
xchg
add
imul
pop
xor
sti
jmp
mov
adc
in
and
jle
movsl
aam
sarw
and
cltd
mov
xor
jecxz
jo
rcl
jmp
pushf
mov
lret
xchg
mov
pop
cmpsl
test
pop
pop
and
test
fistpll
mov
sarl
lret
mov
stos
je
enter
sti
setnp
hlt
mov
push
comiss
sub
movsl
in
shlb
and
sub
push
pop
imul
mov
neg
ds
mov
jmp
andl
jecxz
adc
nop
icebp
sbb
dec
push
sahf
mov
push
xchg
pop
mov
dec
fs
mov
lods
sub
movnti
xchg
int
push
pop
cli
lods
dec
pop
dec
and
fmul
shll
test
fcomi
mov
push
mov
insb
loope
imul
sbb
insl
fdivr
dec
cld
std
mov
push
add
shlb
cmp
sub
aaa
pusha
mov
add
inc
pusha
flds
ficoms
cmpsb
or
push
imul
mov
out
inc
fimuls
popa
mov
loopne
in
push
cmpsl
cmp
xchg
loop
xor
mov
mov
lret
adc
or
lahf
pop
out
push
mov
mov
cld
xlat
in
adcl
pushf
adc
jb
mov
pop
int3
in
out
arpl
xchg
xor
push
lea
fidivrs
xor
call
into
mov
cmc
rclb
arpl
mov
cmc
inc
es
jg
stos
sub
popa
push
call
cmp
jecxz
xor
xor
into
cwtl
js
xchg
xor
sub
fistl
fs
lcall
xor
loope
jno
arpl
rorl
sbb
sbb
enter
arpl
je
insl
xchg
cmp
adc
sub
ja
pop
aam
cltd
insl
fstl
mov
push
std
dec
loopne
mov
sbb
mov
xchg
mov
bnd
push
cmpsl
sbb
hlt
repz
mov
mov
shrd
xchg
ret
mov
jns
pop
or
out
or
addr16
bnd
clc
adc
jl
adc
inc
mov
call
mov
dec
pop
xchg
and
dec
mov
in
lods
mov
loopne,pn
mov
aaa
xchg
pop
js
inc
sub
and
pop
nop
pop
sbb
icebp
or
xchg
sbb
adc
jmp
ljmp
not
adc
loope
dec
push
ficomps
lds
jle
imul
inc
fstpl
in
fbstp
or
cmp
arpl
push
sahf
cld
dec
sbb
out
jp
and
push
enter
outsl
pop
mov
mov
ss
sub
mov
in
movsb
xor
push
add
or
cmpsl
stos
shl
shrl
into
xor
adc
repz
imul
jg
mull
jno
dec
lahf
rcrb
xlat
cmpb
outsb
cld
aaa
dec
ret
sub
jmp
xchg
das
mov
popf
aas
int3
cltd
icebp
inc
mov
mov
adc
pop
jecxz
cmpsl
mov
stos
data16
mov
out
and
dec
lahf
cmp
dec
stos
stos
adc
lret
mov
inc
jae
adc
cmpsb
repz
mov
and
push
mov
lock
or
test
mov
shlb
movsl
cmpsl
push
in
cmc
inc
cmpsb
mov
cltd
ss
ljmp
loop
stos
dec
sahf
cmpsb
cli
das
out
fsubrp
lea
pop
mov
popf
ret
sub
pop
mov
and
jns
adc
or
movsb
test
cmp
js
jecxz
pushf
addl
add
loop
and
inc
cli
das
add
fsubl
rorl
xlat
ljmp
cmc
cmp
sbb
pop
jno
daa
mov
loopne
ds
xchg
out
xchg
jno
and
das
inc
repz
out
dec
mov
or
outsl
mov
nop
jo
lret
nop
lahf
pop
xchg
lods
xchg
inc
outsb
fdivrl
outsb
lahf
loop
and
push
gs
cmpsb
jbe
mov
jge
dec
arpl
push
ret
lock
movsb
adc
inc
inc
std
stc
int3
dec
enter
add
out
insb
cmpsb
int3
movsb
repz
jno
jns
inc
jge
ror
scas
xchg
int3
mov
sbb
pusha
and
ljmp
dec
ret
test
push
aas
loop
ret
pinsrw
adc
push
lock
dec
fwait
cli
or
jg
bound
inc
or
sarb
add
xchg
jg
jmp
xchg
lret
adc
cmpsb
int
sub
xchg
fistpl
mov
out
xchg
je
nop
into
adc
sub
test
jcxz
pop
mov
sbb
and
leave
insl
dec
push
hlt
mov
pop
adc
push
icebp
es
fdivrl
push
jl
cmp
icebp
cmp
xor
cmp
sub
js
xorl
mov
xchg
sub
fmuls
inc
pop
fstpt
imul
push
lahf
nop
and
fdivp
mov
mov
jb
mov
push
push
mov
sbb
push
je
rcl
cltd
and
call
sbb
testl
sub
dec
mov
leave
and
push
push
ds
std
add
add
mov
mov
jl
add
outsb
jle
int
stc
inc
cmp
mov
push
jecxz
repnz
dec
sub
arpl
cli
ds
sbb
iret
sbb
push
fisttpll
push
add
jno
dec
push
inc
ret
push
int
inc
cld
fstp
mov
test
inc
out
mov
test
mov
loop
shlb
adc
ret
inc
mov
jecxz
push
dec
pop
push
mov
lock
out
adc
mov
mov
sbb
movsl
in
pop
mov
scas
and
cmpsb
insb
lods
jo
enter
xchg
push
xchg
mov
jl
add
and
lea
jl
adc
psubusb
hlt
cmp
orl
test
and
stos
dec
mov
mov
push
incl
decl
cmp
call
adc
xlat
fnstenv
push
cmp
jl
jo
sbb
fwait
stos
aam
dec
imull
mov
push
xchg
movsb
or
in
mov
cmp
icebp
dec
inc
add
adc
jno
cs
push
xlat
into
daa
pop
pop
out
sbb
sub
outsb
xor
cmp
iret
wrmsr
in
xchg
faddl
mov
int3
inc
adc
cmp
sub
rorb
lea
leave
xchg
and
dec
in
sbb
add
adc
adc
cmp
inc
movsl
js
push
mov
fisttpl
lds
mov
push
icebp
cwtl
test
test
and
movsl
insb
mov
inc
jl
jmp
cmp
cli
ficompl
push
jno
pop
aaa
lret
repz
popf
push
fsub
or
ret
and
fwait
js
cwtl
xchg
mov
pop
inc
xlat
jmp
mov
cmp
push
test
dec
arpl
mov
cld
and
sbb
lahf
stos
sbb
in
mov
push
nop
xor
sbb
xor
push
cmp
mov
fmulp
fadds
loope
inc
push
aad
dec
test
fs
mov
mov
stos
test
insb
aad
mov
mov
je
js
popa
insl
push
jmp
dec
push
jmp
or
shlb
daa
xor
imul
dec
adc
and
popf
xor
js
sar
jo
pop
lret
push
push
lret
stos
mov
repnz
test
in
adcb
mov
dec
mov
xlat
clc
ds
xor
call
lahf
pop
mov
lock
dec
outsb
dec
fildll
mov
out
loopne
shlb
push
xchg
es
ret
nop
and
insl
stos
mov
jno
and
cmp
mov
pop
hlt
dec
out
and
cmpsl
lods
xchg
dec
stos
mov
xchg
fstpl
fdivr
lahf
popa
mov
hlt
or
and
cmp
icebp
cmp
outsl
inc
cmp
mov
jle
scas
in
xchg
stc
sbb
outsb
outsb
out
cmp
xchg
icebp
rolb
push
push
icebp
and
icebp
sub
andb
fiaddl
sub
jmp
pop
jge
addb
jne
cmc
dec
in
push
lret
pop
das
xchg
subb
mov
nop
push
xchg
icebp
ljmp
aaa
fwait
cmc
jecxz
insl
and
ljmp
lahf
adc
sub
xchg
mov
pop
sbb
and
push
shrl
and
or
xor
or
pop
pop
or
loope
jnp
lea
dec
xchg
push
jo
lret
xchg
and
lcall
outsl
mov
dec
test
xor
mov
cmp
cmova
mov
dec
roll
inc
sbb
ret
out
push
femms
lcall
pop
ljmp
mov
push
push
subl
xchg
inc
lahf
lahf
jae
insl
insl
inc
cld
xchg
xor
push
mov
leave
cmp
enter
sbb
mov
add
imul
fs
xchg
cmp
out
std
std
add
jno
ret
nop
mov
push
or
xchg
or
mov
shll
frstor
pusha
aad
jle
dec
arpl
mov
jb
dec
gs
sbb
adc
fmulp
mov
jns
rcrl
test
jmp
je
push
loop
and
sbb
repz
add
xchg
mull
cltd
mov
fucomip
and
xchg
push
xor
loope
insb
fnstenv
xchg
std
imul
or
sbb
hlt
and
xor
mov
testb
dec
lret
sbb
in
mov
ja
rcrb
outsb
inc
jo
cmp
shll
jbe
inc
fildl
rep
movl
daa
jae
out
or
mov
mov
rclb
cmpsl
pop
xor
dec
add
fstpl
xor
in
minps
sub
pop
in
adcl
lea
mov
adc
iret
mov
push
bound
data16
adc
sub
cld
shl
xchg
adc
jns
or
rcl
dec
fwait
jge
dec
inc
jmp
lcall
out
mov
scas
fnstcw
icebp
inc
sub
inc
cmp
xchg
ds
xchg
clc
call
xchg
and
xchg
pop
sub
mov
and
push
fsubrl
fsubrs
aaa
pop
cmp
cmp
dec
xchg
fnstenv
or
fmuls
insb
mov
lds
adc
outsb
leave
mov
in
lcall
xlat
adc
dec
dec
pop
inc
jl
shr
scas
adc
loope
inc
add
fisttps
loopne
xor
aad
loopne
mov
sub
stos
jg
aam
lods
mov
jecxz
and
cmp
test
push
mov
scas
insl
movsb
add
mov
or
aam
popa
hlt
mov
movsb
les
ret
xor
adc
into
lods
sub
mov
lods
or
in
pop
fdivrl
xor
adc
mov
pop
insl
cwtl
popf
push
cmpb
xor
iret
xor
jle
aaa
jno
addr16
mov
enter
and
out
sub
arpl
or
jns
lods
push
in
push
inc
push
call
das
jbe
mov
push
repnz
hlt
addr16
or
clc
shr
movsl
xor
push
jno
mov
or
bound
push
das
cli
movsb
xor
sub
pop
cmp
inc
mov
fmuls
xchg
or
cmpsb
xchg
lahf
sahf
pushf
or
pop
dec
in
in
sahf
pop
push
cmp
pop
bound
jno
or
mov
dec
mull
jno
fistpl
and
outsl
mov
mov
movsb
mov
aam
mov
hlt
test
movsb
inc
cmpsb
sti
shr
lods
xchg
outsl
inc
mov
es
sbb
add
jns
or
inc
ret
add
shlb
mov
xorl
dec
add
fisttpll
ljmp
sarb
push
lods
es
scas
jmp
ret
mov
out
inc
or
ds
adc
out
push
xchg
nop
push
js
and
cli
fs
cmpsl
push
insl
push
push
jne
inc
fwait
fs
push
adc
je
mov
repnz
stc
jbe
lcall
mov
jg
jae
push
das
test
stos
dec
or
cmp
in
add
mov
and
jmp
inc
inc
inc
enter
mov
sbb
pop
in
cmp
dec
dec
popa
xchg
push
movsl
mov
mov
mov
insb
sub
inc
adc
scas
jp
mov
iret
and
sub
pop
ss
je
flds
xchg
mov
mull
sub
mov
adc
insb
in
mov
pop
xlat
pop
sbb
mov
lret
mov
mov
xlat
in
popf
jl
stos
pusha
sti
xchg
cwtl
dec
movsb
adc
xchg
nop
nopl
hlt
movsb
sbb
and
dec
daa
out
pop
jg
ja
mov
xor
addr16
imul
stos
push
mov
mov
mov
add
pop
notl
jno
adcl
xchg
add
xchg
popa
scas
jns
pop
sahf
xor
iret
sub
ljmp
decl
mov
imul
icebp
xchg
adc
and
movsb
sbb
pop
arpl
sbb
lods
ss
das
imul
lods
xchg
mov
lret
stos
orb
inc
ja
lcall
mov
mov
adc
and
in
sub
arpl
mov
mov
stos
jne
daa
fistpl
in
mov
cmpl
mov
jae
stos
out
jne
aaa
hlt
mov
addb
xor
adc
inc
pusha
jnp
mov
fcomps
mov
les
inc
movsb
inc
cmc
fisubl
xor
adc
fiadds
inc
mov
ret
icebp
add
fwait
js
es
repnz
xchg
aad
leave
and
aad
ret
ds
and
mov
add
push
mov
sahf
shrl
pop
fsubrl
stc
mov
pusha
mov
lahf
jne
scas
xchg
push
jg
dec
push
mov
test
scas
xor
daa
test
daa
into
and
adc
dec
sbb
add
push
test
std
imul
pop
scas
xchg
and
fistps
jbe
adc
lret
sub
pmulhuw
andl
inc
out
loop
pop
push
mov
ficomps
push
out
jl
in
or
testl
push
repz
aam
enter
jg
out
shll
jl
dec
lea
mov
sti
pop
xor
movb
mov
fistpl
pop
lret
std
cli
mov
sarl
jecxz
xchg
mov
push
jne
adc
add
jns
mov
mov
dec
sbb
jno
add
xor
xchg
cmpsb
adc
jmp
aad
push
outsb
sbb
aad
fistpll
lods
adc
adc
ja
mov
xor
pusha
stc
out
js
dec
enter
pushf
out
bound
dec
jg
dec
mov
fwait
in
loopne
addr16
and
orl
xor
cli
ret
jo
or
pop
mov
adc
jns
iret
adc
sbbb
out
dec
jg
pop
xor
jnp
lcall
in
sbbb
sbb
addr16
push
xchg
and
repz
fdivl
in
dec
shl
dec
pop
mov
mov
out
jmp
jne
inc
dec
jb
fwait
xor
cmp
dec
dec
mov
mov
inc
push
out
addr16
add
sarl
daa
add
and
lods
adc
imul
adc
mov
xor
clc
push
insl
jbe
addb
jmp
les
daa
fdiv
or
sub
sahf
jmp
sub
fldcw
shr
dec
repz
adc
cmc
xchg
gs
aad
out
fiaddl
and
imul
mov
incl
push
popl
push
sbb
imul
pop
stos
mov
shl
negl
mov
call
fwait
xor
rcrl
outsb
mov
test
pop
jmp
inc
ja
push
fsubl
jl
popf
psrld
inc
iret
insb
mov
popa
add
mov
pop
rolb
andl
inc
xchg
call
lret
dec
outsl
and
pop
mov
push
pop
pop
sti
adc
lds
pushf
mov
and
jns
into
lcall
mov
and
pusha
mov
les
dec
mov
or
jg
mov
fisttpll
insl
mov
cmp
sbb
testl
js
or
xchg
or
pop
inc
cmp
jb
sarb
fcoms
sbbl
imul
and
jg
cmp
sahf
loop
push
out
ret
jmp
inc
cmpsl
sar
mov
and
inc
ror
xor
sarl
out
imul
lods
faddl
xor
xor
cld
in
mov
adc
jno
or
adcl
movsl
ljmp
mov
cmp
shlb
xor
jb
out
ret
aas
outsl
or
mov
jge
fwait
ret
or
imul
inc
pop
mov
and
mov
inc
jge
xchg
mov
out
inc
cmpsl
stos
ja
adc
jno
adc
cmp
jge
ds
popf
arpl
les
gs
cmpsl
das
cwtl
out
ss
push
inc
popf
mov
arpl
test
loopne
xor
xchg
inc
adc
inc
out
push
fcmove
in
add
inc
int
dec
mov
out
in
popa
or
pushf
ja
fs
inc
rclb
xchg
call
popa
ret
test
cs
mov
and
js
jp
mov
hlt
cmpsl
imul
push
mov
pusha
fcoms
jo
insl
sub
push
nop
push
jecxz
sbb
push
ss
jbe
xor
fidivrl
mov
into
inc
sbb
fsubs
loope,pn
hlt
fists
push
sub
pop
cli
push
fadd
pop
test
xchg
test
xlat
subl
cld
sarl
loop
mov
mov
hlt
cmpsb
jae
dec
ja
jb
xor
jb
add
call
sub
jbe
fdivr
js
test
dec
test
mul
test
cmp
movsl
leavew
xlat
dec
aaa
popa
adc
fbstp
xchg
mov
imul
stos
mov
sub
sub
mov
jno
arpl
sbb
or
sbb
mov
xor
jmp
adc
lds
outsl
mov
push
shl
int
push
test
jecxz
inc
jnp
popf
pop
pop
movsb
add
fldt
sub
and
pop
jnp
add
and
pop
bound
mov
xor
mov
pop
push
hlt
xor
mov
in
cmc
mov
mov
data16
pop
xor
or
mov
test
dec
cmp
daa
mov
and
sbb
or
sub
ja
test
test
push
lods
lods
fcoml
sbb
test
movsb
iret
jbe
mov
push
xchg
mov
mov
nop
pop
mov
inc
cmc
and
xor
mov
out
addr16
mov
jmp
sarl
outsb
sbb
pcmpeqd
sarb
ja
out
cmp
sbb
pop
bound
les
mov
push
sub
test
mov
out
loopne
test
leave
ficoms
dec
shll
dec
inc
nop
add
adc
out
mov
mov
add
xchg
cmp
push
pop
clc
xor
loopne
mov
xchg
test
jnp
imulb
stos
xchg
test
xor
ss
adcb
pop
enter
les
and
cltd
aam
sbb
mov
pushf
inc
mov
cmpsl
fcmovnbe
jo
arpl
sub
jge
stos
fwait
xchg
int
mov
ret
dec
jae
mov
jge
sbbb
sbb
sbb
mov
xchg
fwait
mov
xchg
or
dec
cwtl
push
das
test
jns
insl
ja
or
std
sub
pop
mov
mov
pop
mov
cltd
xchg
imul
sub
push
xchg
cs
ficoms
xor
xor
and
shlb
ret
inc
inc
fwait
lret
cmp
dec
lret
sar
sti
jae
int
add
aam
cmpsl
xchg
cs
rcrb
mov
push
das
gs
jle
xor
mov
mov
mov
and
xchg
mov
imul
lahf
das
push
jg
stc
jbe,pn
xchg
pop
push
inc
pop
test
or
popl
adc
es
inc
push
scas
es
pop
xchg
imul
jbe
lds
pop
aas
cmpsb
sub
sahf
xchg
fdivl
sbb
sbb
pop
aad
imul
xchg
xchg
inc
xchg
pop
sahf
mov
pusha
mov
js
xchg
test
movsl
daa
jno
loopne
aaa
test
into
or
rcrb
pusha
sbb
dec
pop
gs
pop
adc
ss
popa
cmp
mov
dec
lea
movsb
dec
jnp
push
sub
pop
jmp
hlt
fisubrl
cmpsl
sbb
pop
inc
pop
icebp
xchg
sub
xchg
sub
adc
push
test
xor
xchg
int
cld
aas
mov
sub
mov
sub
popa
dec
mov
sarl
daa
jb
call
jle
and
xor
popa
in
repz
inc
fnstsw
mov
dec
xchg
mov
mov
push
cmp
icebp
inc
jnp
mov
out
sbb
sbb
test
sbbb
dec
lret
xchg
xor
fwait
shrb
sahf
mov
pop
jge
mov
mov
in
push
fsubrs
add
mov
and
mov
adc
push
cwtl
mov
sub
mov
add
adc
into
xchg
out
inc
and
addr16
mov
mov
jno
addr16
mov
pusha
data16
push
loop
sti
pop
scas
inc
clc
xor
aad
bound
xor
gs
leave
cli
cmp
outsb
fdivrs
cmp
sub
outsb
scas
adc
ss
popa
adc
sub
lods
insl
fiadds
and
inc
mov
loopne
adc
mov
sarb
pop
pop
xor
mov
jge
xchg
stos
adc
lret
outsl
les
add
call
dec
xchg
enter
dec
dec
mov
div
sahf
push
and
fdivr
in
sahf
movsb
shl
sar
jae
sbb
jle
cld
ficompl
sub
jno
mov
cs
repnz
inc
dec
dec
cltd
je
fwait
push
xchg
xchg
lret
fldl
lds
cmp
pop
mov
lods
or
lds
loopne
imul
aad
stos
xor
in
mov
mov
or
jl
mov
push
xchg
mov
jne
mov
lea
roll
add
pushf
in
lock
dec
jno
cmpsl
mov
repz
shl
jle
inc
dec
xchg
adc
outsl
inc
and
pop
imul
jp
scas
fsubs
and
shlb
mov
test
fcmovu
push
inc
enter
in
dec
push
xchg
les
insb
adc
jmp
aam
xchg
fst
inc
pusha
mov
loope
out
mov
rcr
xchg
aaa
cld
jp
leave
cmp
in
jmp
cwtl
imul
in
inc
pop
fdiv
push
inc
pop
cli
daa
sbb
sub
xor
sub
pop
das
lods
xor
pop
add
adc
dec
int
jge
push
sbb
mov
sbb
xchg
or
pop
lret
push
in
pushf
insl
ja
das
dec
adc
dec
xchg
sbb
sar
sbb
xchg
mov
inc
add
bound
adc
push
adc
es
push
fwait
out
mov
ss
push
sbb
cltd
push
push
dec
sbb
push
fiadds
mov
std
negl
jnp
adcb
scas
push
inc
xchg
dec
push
pop
xchg
inc
cwtl
jmp
or
nop
sbb
xchg
adc
jo
inc
dec
sub
inc
clc
repz
adc
movsl
cmc
aad
push
sbb
ret
xchg
push
out
jecxz
mov
iret
mov
mov
dec
shlb
cmpsb
xor
clc
push
repz
xor
lock
stc
sub
daa
mov
cmpsb
add
mov
or
and
ret
aaa
inc
les
mov
or
divb
call
stos
ds
or
mov
inc
call
rclb
std
xchg
aam
sub
mov
aas
int3
xorb
stc
lock
dec
jo
pop
mov
mov
xor
and
pop
pop
jb
loop
mov
sbb
sub
xor
test
cwtl
adcb
out
rorb
push
sbb
ret
mov
iret
dec
outsl
movb
push
lret
cli
loop
fwait
push
dec
fnop
mov
mov
push
enter
mov
jge
stos
rcrl
pusha
mov
push
mov
sbb
mov
pop
and
addb
mov
xchg
jae
insl
int3
arpl
push
std
out
shlb
and
dec
arpl
shrb
sbb
lods
test
mov
push
out
call
sarb
mov
in
loope
push
adcb
fsubr
lea
sub
jb
mov
mov
mov
cmpsl
les
adc
and
out
in
lods
xor
jecxz
xor
inc
push
sub
testl
int
sbb
xor
aas
cmpsl
in
xchg
sub
jecxz
sbb
sbb
lea
out
lcall
push
or
or
sbb
dec
mov
mov
push
call
lahf
jne
fadds
arpl
inc
sbb
pop
aaa
pusha
or
jnp
test
or
jmp
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
push
add
add
or
mov
cli
ss
mov
cmp
xor
mov
mov
jge
mov
sub
subl
jmp
ja
mov
xor
insl
adc
cwtl
dec
addr16
xchg
loope
jae
or
enter
test
fsts
mov
mov
iret
pop
push
lahf
shlb
mov
cmc
pop
repnz
inc
in
mov
push
xchg
jns
shll
xchg
rorb
lock
pop
int3
in
pop
sub
cld
inc
sti
mov
mov
adc
nop
ficompl
repz
shrb
out
lods
xchg
mov
push
frstor
js
lret
hlt
sahf
or
je
mov
mov
sub
nop
cmp
add
pop
cltd
inc
xchg
xor
popf
stos
cmp
imul
scas
or
inc
push
aad
mov
dec
test
shll
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
