movsb
mov
js
xchg
adc
sub
add
fcomip
fistpll
out
int
inc
sbbb
push
into
add
push
mov
xchg
push
dec
aaa
jae
hlt
out
and
sbb
scas
icebp
lds
and
stos
push
push
cmp
sti
sbb
std
sarb
into
nop
out
repz
sbb
xchg
sarl
enter
and
ds
fcompl
and
cmc
rcll
xor
sub
push
jnp
ljmp
leave
fdivrl
aad
rolb
call
pusha
push
jae
inc
pop
xlat
aad
movsb
pop
jecxz
imul
je
mov
clc
inc
add
iret
sub
jle
push
push
ret
or
sub
ja
xor
jecxz
cmp
mov
dec
les
jbe
out
imul
sub
gs
pop
or
inc
lds
je
js
mov
add
pop
sbb
subb
push
ds
jo
or
outsb
std
test
sarl
rcl
push
xlat
sbb
add
xor
dec
mov
push
stc
add
cltd
fdivl
and
sahf
lahf
or
push
insb
addb
test
pushf
pop
std
inc
std
xchg
mov
pop
mov
lods
mov
and
cmp
imull
lock
loop
sub
mov
pop
mov
and
fists
cmp
vpsrlq
daa
std
test
or
or
cmp
adc
sarb
mov
enter
pop
push
out
mov
ret
xchg
test
fmuls
lods
push
jmp
ljmp
mov
or
cmpl
imul
popa
or
test
lea
sbb
aam
xchg
push
jmp
fwait
jbe
outsl
pusha
sub
and
fs
stos
add
ret
mov
xor
add
add
in
cmpsb
mov
sub
mov
test
out
mov
cs
fwait
js
fs
sbb
jae
jb
push
or
and
xor
test
or
pop
dec
push
pushf
das
mov
cwtl
mov
cwtl
push
push
pushf
xchg
movsb
pop
arpl
push
bound
sbb
sub
andl
je
add
add
ss
pop
pop
int
or
mov
dec
into
jne
or
iret
sbb
pop
sahf
and
fwait
and
push
and
pop
push
jp
adc
dec
sub
mov
jno
jmp
xor
mov
dec
pop
inc
mov
js
and
xor
cmp
jns
add
push
call
sub
movl
lcall
ljmp
pop
pop
lea
jnp
push
jne
xor
pop
nop
cld
call
push
jo
add
pop
jbe
or
clc
stc
cmc
clc
mov
xchg
push
add
pop
push
cld
pop
push
mov
pop
push
push
push
pop
pop
pop
stc
push
pop
push
push
pop
call
movb
in
fidivrl
fs
std
xchg
fadd
cmp
add
call
clc
test
jp
or
push
je
rol
pop
push
dec
pop
or
movl
or
or
push
or
pop
push
and
pop
push
push
mov
pop
pop
stc
movl
push
xor
pop
jl
or
xor
push
push
or
pop
pop
push
add
pop
cld
movl
push
push
pop
call
inc
out
cltd
fsub
jl
mov
xchg
sub
pop
sti
and
add
pop
dec
jne
push
mov
pop
stc
jns
push
not
not
pop
lea
push
jno
push
test
pop
pop
test
jno
push
xor
pop
test
cmc
lea
push
shl
pop
clc
mov
push
push
pop
call
sbb
or
adc
addl
fmuls
leave
bts
aam
filds
cld
dec
mov
xchg
pop
pop
push
pop
and
cmp
jne
jmp
loop
jecxz
xlat
sbb
xchg
mov
sbb
cs
es
and
jl
sub
inc
sub
jae
and
push
jae
or
pop
add
rol
stc
add
push
inc
pop
jl
push
add
jp
xor
jl
jg
push
xchg
xchg
pop
cmc
cmc
mov
xor
jno
push
xor
pop
cmc
push
test
pop
cmc
xchg
pop
push
pop
xchg
push
call
nop
sbbl
xor
das
fidivs
mov
add
imul
mov
cli
sub
cli
jg
jne
in
jmp
pop
lahf
jns
cmc
cmpsl
test
lea
sub
jns
sub
sti
jl
fstpt
jmp
dec
stc
push
dec
adc
in
or
inc
and
cmc
test
cld
dec
jne
push
add
jae
push
add
push
mov
call
sub
out
fwait
and
ds
out
mov
sbb
pop
add
ds
das
add
pop
jo
xchg
ret
daa
sti
mov
in
mov
ret
lods
cmovle
addl
out
pop
lods
aam
sbb
pusha
out
iret
shlb
aam
adc
push
xlat
fdivr
mov
orb
add
pop
ret
clc
push
mov
call
lahf
inc
mov
int
cmp
mov
mov
mov
fisttps
sub
cwtl
push
popf
rcll
fs
pop
mov
jmp
nop
push
mov
pop
loop
jecxz
mulb
or
cwtl
xor
stc
jne
sbb
in
pop
push
out
cmp
pop
or
add
push
push
pop
jmp
jne
imul
enter
sbb
repnz
pop
call
aaa
icebp
fisttpll
js
jg
mov
adc
insl
xchg
pushf
pop
notl
ja
mov
fistpl
adc
cld
test
mov
leave
and
lret
jecxz
jb
xchg
fmull
or
jne,pn
ljmp
out
xor
pop
lods
test
mov
pop
lds
xchg
cli
add
jle
push
insb
push
jmp
xchg
inc
sub
loope
pop
jmp
mov
push
rol
pop
push
xor
pop
jge
cmp
fnop
or
push
add
push
rol
pop
push
inc
pop
stc
scas
mov
aaa
call
pop
cwtl
or
stos
jp
sbb
cmc
fs
cmp
sub
sbb
sub
nop
fisubs
jecxz
xlat
jecxz
xchg
cmpl
leave
cmp
jg
xchg
sub
xchg
rorl
fcmovbe
mov
sbb
stos
je
out
into
aas
cltd
inc
rcrb
popa
jl
jns
push
insl
in
cmp
dec
clc
or
pop
sub
lcall
pop
mov
xor
push
fcompl
popf
fcompl
insb
inc
or
jns
rclb
pop
ror
mov
pusha
in
enter
out
cmp
mov
push
stc
mov
xchg
jp
dec
nop
mov
bound
pusha
push
and
inc
aad
jo
sbb
cmp
sbb
ljmp
call
add
test
jmp
mov
lahf
outsl
mov
imul
or
dec
into
faddl
fstpt
add
js
sub
push
jo
out
loope
out
addb
aad
cmp
rorb
or
out
cmp
test
call
xchg
aas
xor
xchg
jbe
aaa
int3
pop
aaa
rol
jge
pusha
loop
popa
push
jge
clc
adc
cmpsl
in
sahf
in
in
jae
xor
mov
inc
pop
les
xlat
aad
sbb
andb
pop
jecxz
movsl
jecxz
stc
sub
jge
imul
mov
inc
add
je
xchg
mov
mov
clc
dec
cld
clc
inc
inc
aas
inc
add
inc
adc
nop
push
iret
lahf
adc
sub
mov
adc
dec
out
lcall
jle
mov
stc
push
add
push
jge
push
ret
cltd
push
ret
leave
in
jb
inc
push
pop
sub
add
test
call
ja
sbb
dec
mov
xor
fisttpl
arpl
xlat
dec
or
cmpb
leave
cmp
repz
mov
and
les
xchg
les
mov
outsl
jbe
xchg
mov
out
imul
mov
push
iret
pop
push
cmpb
mov
and
sbb
push
fs
cmp
hlt
xorl
in
shrl
sbb
jne
jecxz
ljmp
sbb
jle
xchg
bound
mov
and
icebp
je
cld
mov
sbb
andl
or
cmp
xchg
inc
push
xchg
and
and
insl
fnstsw
outsl
loopne
outsl
mov
mov
mov
push
out
push
faddl
and
xor
repnz
in
ja
gs
data16
lods
and
mov
or
sar
cmp
push
das
sbb
or
cmc
xor
jp
lods
imul
mov
sbb
sub
sub
push
pop
xchg
push
lea
ljmp
push
push
jnp
cmp
mov
mov
adc
dec
sahf
mov
imul
scas
xchg
mov
leave
fsubrl
and
sub
test
out
dec
or
adc
leave
aad
pushf
sbb
shr
push
xchg
jmp
sub
in
jmp
call
imull
xor
stc
jne
aaa
aas
pop
aaa
shlb
jge
pusha
inc
push
popa
push
insb
scas
clc
jae
clc
cmpsb
insb
cmpsl
jae
jecxz
jmp
mov
dec
aaa
pop
aaa
aas
mov
rcl
xor
xlat
jg
jne
movsb
lock
outsb
adcb
fnsave
icebp
cmp
fnsave
add
loop
shll
dec
or
cmc
sub
pop
repz
xchg
or
xchg
iret
popf
shlb
lahf
inc
mov
lods
xchg
jl
adc
bound
xchg
sub
cmpsl
test
loopne
push
inc
jnp
sti
push
push
pop
push
fsubrs
xchg
sbb
add
pop
xchg
pop
rcl
jge
sub
and
in
ret
in
and
popf
sub
xchg
ja
push
addl
inc
fisubrs
lahf
daa
pop
xor
vpsadbw
scas
or
fldenv
xorl
addl
inc
mov
mov
inc
jno
fwait
insl
pmulhuw
in
cmp
mov
pop
sub
test
lret
aam
cmp
push
or
dec
cld
xchg
cmp
xchg
js
xor
sar
mov
mov
addl
pop
push
das
push
jns
jo
jmp
mov
idivl
mov
push
imul
jle
int
gs
inc
scas
notb
scas
xchg
dec
loopne
aas
test
ljmp
sbb
divb
sbb
pop
adc
mov
sub
adc
cmp
push
adc
fisubrs
pop
outsl
fsubrs
push
in
and
cmpsb
lods
aas
or
mov
adc
fstpt
fimull
aad
cmp
mov
inc
lods
imul
jns
mov
ror
loopne
sti
lret
adc
icebp
fmul
jb
sbb
pushf
mov
adc
dec
outsb
pop
xchg
je
mov
test
out
or
sbb
mov
mov
sub
sub
test
test
inc
push
not
jno
push
sahf
xlat
sbb
push
push
loop
jecxz
idivl
pop
int3
fwait
ret
insl
xchg
pop
mov
fldenv
xchg
xchg
mov
repz
ret
jecxz
adc
push
aaa
ss
xor
xchg
cmp
inc
fcom
lods
insl
xor
sbb
aad
pushf
push
popl
icebp
mov
push
push
loop
daa
mov
pop
inc
aam
and
cmpsb
leave
inc
mull
inc
dec
outsb
add
dec
aaa
jg
stos
cs
pushf
ret
setg
lock
mov
or
mov
sub
test
imul
xor
int
decb
pop
addl
mov
push
repz
pushf
dec
dec
call
add
mov
call
movl
sub
mov
mov
dec
iret
hlt
mov
jecxz
add
call
pop
mov
cmp
data16
addr16
mov
pop
push
sbb
jns
fiaddl
pop
mov
addr16
or
pop
leave
jno
lock
insb
add
ficompl
addr16
push
xchg
je
fsts
fwait
and
mov
and
fisttpll
xchg
dec
jae
dec
xor
xchg
or
scas
pusha
cs
stos
mov
mov
add
sti
sbb
pushf
dec
xlat
add
lods
lods
mov
sbb
repz
loope
push
lcall
push
inc
push
bound
mov
adc
loop
fsubrp
pop
sti
mov
imul
jnp
dec
xchg
fstl
jmp
fsubrp
pushf
push
inc
cmp
imul
xor
inc
xchg
xchg
push
fdivl
fs
stos
mov
inc
dec
adc
and
ss
xor
mov
daa
jns
inc
add
testb
push
jb
mov
inc
cltd
sbb
pop
jmp
sbb
xchg
pop
insl
in
test
pop
outsl
cli
sbb
pushf
cmpsl
inc
xchg
mov
inc
dec
inc
scas
xchg
enter
inc
xor
add
in
outsl
add
aaa
push
and
push
xor
in
lds
push
cmpsb
test
ret
jg,pt
xchg
or
xchg
push
in
movsl
dec
and
xchg
mov
aaa
ja
pop
shll
incl
mov
pop
fdivrl
test
fbstp
or
adc
shl
jle
fists
jns
je
mov
mov
jg
mov
lea
pop
cmpsl
mov
pop
pop
push
cwtl
fwait
or
inc
out
stc
jmp
lock
pop
ficomps
popf
xchg
in
lahf
and
mov
loopne
xchg
lods
aas
jg
loopne
out
test
imulb
out
push
mov
ss
and
jg
jecxz
or
add
pop
rclb
loope
bound
mov
inc
mov
push
dec
imul
sbb
in
add
xchg
adc
fstl
ja
push
inc
or
insl
cmp
pop
dec
cmp
inc
cmpl
adc
jp
xchg
pop
sub
mov
adc
push
iret
pop
jno
mov
iret
sbb
and
pop
xchg
sub
outsb
dec
fisttpll
movsl
out
dec
add
and
xor
mov
test
inc
push
mov
sbb
leave
cmp
mov
jb
jmp
icebp
addb
hlt
add
aam
xchg
xchg
stos
jmp
cltd
je
pop
shr
ljmp
out
adcb
or
imul
pusha
test
repnz
xchg
int
pop
jns
fimuls
sbb
daa
movsb
and
push
mov
mov
pop
inc
scas
mov
add
mov
out
push
jl
jo
push
bound
or
movsl
xchg
jnp
adc
pop
xchg
stc
sbb
mov
daa
lret
mov
scas
loope
mov
enter
in
out
jo
in
arpl
pop
mov
mov
sbb
sbb
int
xor
call
xchg
push
xor
insl
inc
xlat
mov
push
add
cld
sbb
lods
mov
mov
mov
outsl
orb
sub
ja
pop
jae
mov
pop
cmpsb
flds
outsb
loop
je
sbb
loop
mov
or
pop
add
fidivs
mov
lahf
aam
or
xor
imul
xorb
int3
mov
add
in
mov
scas
xchg
sub
mov
push
popa
mov
lock
jns
push
pop
xchg
lods
lea
dec
mov
fwait
inc
adc
sub
cmc
add
push
test
popa
movsb
and
mov
dec
aad
pop
mov
sbb
fidivrs
jne
xchg
and
cli
or
int
insb
pop
loop
loope
loop
inc
cmp
sub
fwait
pop
je
lods
sar
xchg
ret
mov
jmp
mov
xchg
out
push
pop
jns
outsl
popa
loopne
pop
mov
lock
cmpsb
filds
mov
rclb
xlat
daa
fistps
cmc
data16
cmp
es
dec
lcall
add
pop
call
xor
dec
loop
sbb
inc
lahf
lret
pop
fdivrp
adc
xchg
idivl
push
mov
loope
xchg
jae
jl
faddp
pop
mov
loopne
fildll
outsl
cli
or
lods
xchg
imul
nop
stos
lahf
mov
jg
mov
adc
push
pop
test
pop
add
aam
push
adc
into
pop
stos
jp
cs
movsb
push
jbe
mov
mov
scas
sbb
sbb
mov
loopne
les
push
popf
xlat
test
pop
pop
fistl
adc
fs
xchg
sub
sub
xchg
adc
aas
xor
xchg
pop
push
cmc
notb
push
cmp
sti
pop
shr
xchg
lcall
inc
mov
inc
jo
insb
pop
push
jecxz
xchg
push
test
subl
es
mov
xchg
cmpsb
stos
nop
rorb
xchg
ds
xor
mov
sub
lcall
dec
dec
mov
xor
add
adc
push
adc
in
fcoms
enter
out
and
loope
notl
xor
inc
repnz
sbb
es
jbe
ret
repnz
dec
cmpsl
insb
push
pop
add
jp
xor
je
jecxz
imul
jnp
xlat
pop
cmp
cli
jp
jle
test
lock
movsb
outsl
popa
rcll
fmull
repz
xchg
cli
out
push
aas
les
filds
cmc
push
notl
xchg
mov
std
push
clc
lahf
js
aaa
push
sbb
test
cltd
and
rcl
xorb
fdivp
mov
jo
pop
and
test
and
mov
inc
dec
sub
pusha
sahf
mov
clc
inc
scas
mov
mov
jne
dec
sbb
mov
loopne
fldt
or
xor
fmul
cmp
sub
aam
ror
pop
and
xor
add
int3
mov
fisttpll
lock
push
inc
icebp
pop
push
lret
loope
sub
cmpsb
stos
jecxz
das
dec
popf
jb
aam
aaa
dec
rorb
fsubrl
loopne
pop
jg
ljmp
lret
insb
xor
xchg
les
dec
mov
sahf
xor
pop
repz
aam
add
test
das
mov
cmp
inc
cwtl
das
jbe
in
dec
inc
mov
testb
dec
sbb
fld
popf
sbb
add
mov
jge
pushl
jp
nop
pop
adc
ret
ss
or
mov
pop
sbb
mov
inc
push
out
gs
mov
mov
mov
int3
fs
aad
push
xor
lret
pop
cmp
xor
ss
lods
add
inc
pop
adc
into
push
pop
push
sbb
or
dec
xchg
inc
sbb
add
mul
fistps
imul
sti
cltd
inc
mov
cli
stos
dec
dec
jo
xchg
out
scas
lea
imul
jns
xchg
sub
mov
popa
jmp
out
ljmp
outsl
cmp
jns
xor
mov
inc
inc
lret
sub
fisubrs
ljmp
pusha
cmp
sub
pop
addr16
out
aaa
int3
add
cwtl
lret
mov
lcall
loop
jmp
hlt
adc
mov
mov
add
shlb
int
sbb
sbb
js
jae
leave
mov
dec
sub
mov
pop
lea
sbb
pop
rorb
or
mov
mov
gs
test
sarb
mov
in
xor
push
mov
xchg
mov
adcb
std
pop
dec
das
push
jbe,pn
icebp
lea
es
les
ja
mov
jmp
and
add
mov
scas
aas
outsl
inc
inc
add
dec
push
lcall
aam
jne
xchg
inc
jae
lcall
xor
cltd
push
cmp
mov
xchg
and
dec
pop
mov
mov
cmp
or
mov
jp
push
out
mov
pop
int
lret
jecxz
adc
fwait
lock
pop
push
jno
mov
nop
jmp
xchg
mov
mov
lods
adc
jle
idivl
cli
push
sahf
push
push
xor
leave
push
dec
pop
cmpsl
xor
xlat
data16
nop
fwait
test
stos
and
stos
fstps
arpl
jle
pop
je
add
aad
je
mov
cli
push
stos
push
mov
out
xchg
stc
pop
movsb
and
push
push
js
xor
add
je
or
test
shrl
test
cmp
push
jb
pop
bound
shl
push
mov
loope
lods
inc
or
out
into
sbbb
push
mov
push
nop
aaa
popf
jne
lret
icebp
fadds
xchg
aam
sub
gs
inc
sti
ror
xchg
and
pop
push
add
addb
mov
aas
and
mov
jmp
test
mov
xchg
shl
dec
repz
cmc
sahf
add
and
and
push
mov
mull
cmc
repnz
std
inc
shlb
pop
xlat
sub
movsb
and
outsl
orl
jmp
sub
cmpsb
int
xchg
lret
mov
pop
sub
rcll
pop
cmp
ds
cmp
or
sub
xor
or
sub
xchg
out
movsl
dec
in
in
sbb
adc
aam
call
mov
mov
xor
jns
stos
dec
cli
inc
repnz
dec
dec
call
stos
pop
out
dec
add
fs
js
cmp
xchg
arpl
in
mov
dec
jnp
imul
cmc
movsbl
loope
xchg
cli
inc
sbb
repnz
sub
pop
daa
mov
adc
pop
pop
jno
pushf
sub
lret
sub
adc
cmp
adc
popf
lods
icebp
popa
cli
movsl
repz
xchg
jb
push
nop
adc
mov
mov
adc
jmp
add
or
jne
divb
push
or
adc
pop
cmp
jmp
cmp
cmp
ret
pop
faddl
negb
test
cmp
rorb
jb
jp
xchg
call
lcall
mov
pushf
out
lret
dec
xor
sub
mov
xchg
mov
outsb
mov
push
xchg
mov
ret
sbb
insb
test
mov
mov
sbb
dec
dec
adc
jmp
mov
jle
iret
jecxz
lcall
jle
push
je
sbb
pop
jecxz
and
xchg
jg
dec
push
pop
call
pop
stos
adc
in
stc
sub
or
ds
mov
das
fnstsw
adc
mov
mov
or
icebp
arpl
mov
inc
fsubr
jmp
int3
aam
rorb
or
jge
sub
data16
cmp
aam
in
and
mov
scas
lea
mov
mov
push
and
mov
xor
push
push
xchg
fsubrl
imul
lcall
stos
test
sub
imul
negb
dec
jg
data16
xor
jmp
jmp
das
loop
jp
push
cmpsb
sub
cwtl
stos
insl
dec
pop
cmc
jae
and
push
int
xor
imul
fisubrl
jno
pop
push
addb
xchg
inc
xchg
cld
mov
push
xor
mov
jne
loop
dec
pop
iret
loop
and
add
or
testb
insl
inc
inc
sbb
cld
shl
imul
adc
ret
mov
dec
arpl
lea
mov
pop
js
lcall
loop
push
repz
jns
jno
aam
pop
arpl
dec
fdiv
xchg
dec
cli
cmpsb
rcl
icebp
loop
mov
ss
fsubrs
lcall
add
leave
xlat
adcb
rcrb
xchg
lret
es
fmul
outsl
rcrl
pop
leave
hlt
xor
dec
mov
push
jmp
lret
jge
xchg
outsb
mov
pop
stos
pop
ret
test
jl
lds
mov
sarl
loop
or
xor
push
imul
cmp
mov
pop
push
cwtd
push
sub
xor
outsb
out
push
call
pop
cmp
sbb
jns
ret
add
xor
cmp
adc
inc
lcall
aas
dec
xchg
sub
xchg
icebp
jge
lret
repz
repz
imul
stos
mov
pop
pop
xchg
testl
fwait
pop
inc
push
loope
xchg
mov
inc
xchg
rolb
addb
jg
push
jae
sbb
sub
push
add
std
push
mov
popf
add
call
cmpsl
adc
in
push
push
adc
jbe
inc
sahf
inc
mov
mov
in
mov
jle
xchg
jmp
sbb
xor
pop
gs
sbb
jecxz
inc
mov
sbb
and
or
xor
lret
inc
enter
sub
push
pop
dec
jge
mov
push
addr16
cli
mov
xchg
mov
lret
dec
cld
shl
inc
data16
aad
rorb
sbbb
xchg
add
jbe
out
mov
cmp
and
mov
adc
mov
movsb
out
insb
mov
test
add
cs
fstps
rcr
mov
sub
inc
sbb
sbb
mov
jno
daa
imul
daa
aaa
jae
cmp
adc
int3
shll
cmp
fldcw
dec
fldl
push
popf
rcrb
push
sbb
xchg
fucom
dec
notb
loope
cmp
clc
leave
xchg
fists
mov
imul
rorb
push
loope
fimull
imul
call
pusha
subl
push
xlat
ret
dec
addr16
cltd
add
push
lcall
mov
mov
gs
add
ljmp
scas
mov
mov
xchg
xor
imul
in
jne
push
out
cmc
mov
movb
xchg
pop
push
outsb
or
cmp
mov
lods
lea
rclb
mov
xchg
pop
aas
pusha
mov
sub
roll
data16
adc
jp
lods
cmp
push
or
mov
jecxz
adc
clc
jbe
in
xor
popf
cmp
stos
jnp
aad
jmp
pop
or
je
pushw
test
aam
in
sti
call
rolb
stos
outsb
shr
push
stc
push
lahf
adc
addr16
jl
test
sahf
repz
xchg
xor
jnp
mov
dec
push
adcl
daa
sbb
pop
add
and
repnz
pusha
scas
push
std
jg
and
lret
and
addr16
in
xlat
aad
fnsave
std
leave
xchg
or
mov
sbb
and
mov
add
adc
dec
fbld
sbb
ljmp
cmpsl
mov
mov
xor
cwtl
sbb
sbb
jg
out
inc
xchg
imul
mov
imul
sbb
cmp
scas
mov
xor
clc
in
add
sbb
jb
add
pop
fcoms
loope
inc
or
adcl
test
fldl
push
jb
jecxz
or
sbb
or
pushf
lods
fs
mov
js
inc
xor
push
btc
rcl
lcall
mov
aas
xchg
sbbb
enter
add
xchg
inc
ret
push
mov
push
cli
aam
shlb
enter
std
sbb
mov
jo
xchg
mov
push
sbb
cmp
mov
mov
push
popa
call
gs
xchg
push
mov
adc
adc
clc
cmp
xchg
xchg
jl
in
cmp
jge
sub
outsb
fildl
leave
mov
out
xlat
ret
dec
xchg
dec
outsb
movsl
pop
adc
test
out
mov
or
cld
jp
jne
add
lahf
or
jg
rclb
xchg
push
push
pushl
fisubrl
sbb
jmp
iret
inc
dec
mov
ds
adc
mov
sbb
pushf
pop
adcb
repnz
adc
jns
nop
pop
mov
arpl
fnsave
in
into
cmp
mov
jg
xchg
insl
testl
add
jno
fimuls
sub
fistpll
jmp
cwtl
push
fsubrl
pop
push
fcom
shlb
pop
loope
out
jne
mov
jae
subb
fimuls
call
mov
sbb
dec
negb
les
sub
test
sbbb
cmp
pop
hlt
xchg
push
pop
xchg
cmpsl
mov
mov
push
and
lds
int3
push
pop
mov
repz
fdivrl
sbb
jne
add
push
aam
dec
cld
imulb
mov
scas
pop
jmp
jmp
pusha
mov
jecxz
fs
insb
sahf
mov
cltd
push
xor
jp
inc
cmpl
out
sbb
sbb
inc
pop
imul
mov
jbe
jne
sti
imul
lods
sbb
or
roll
in
aam
jmp
icebp
in
mov
push
inc
jle
inc
mov
mov
jecxz
lahf
sarb
and
mov
shrl
pop
mov
pop
xlat
rcrb
add
jo
clc
fstl
xchg
add
inc
xorb
lods
sub
xor
sub
sbbl
dec
scas
clc
push
mov
mov
nop
or
arpl
sub
pop
mov
aam
xlat
loopne
lahf
mov
add
into
ret
and
jno
adc
sahf
dec
inc
xchg
jns
outsl
inc
cli
bsr
pop
cld
pop
push
lock
push
mov
cmp
scas
pop
movsl
xchg
cltd
sub
jno
aas
lret
pop
xor
popa
sti
xchg
ljmp
pop
pop
fistps
cmp
add
add
out
mov
pop
fs
jl
imulb
and
pop
fwait
mov
or
jp
in
push
mov
pushf
pop
test
adc
pop
repnz
inc
cmp
pop
inc
insl
in
and
mov
pushf
subb
iret
inc
ss
mov
insb
outsl
daa
sub
mull
add
push
inc
jp
jo
mov
push
rorb
sub
and
adc
int3
xchg
sub
add
add
repz
stc
fstl
or
adc
mov
sbbb
scas
or
stos
jle
lcall
inc
ja
mov
aas
test
nop
mov
mov
and
es
lds
loop
pop
outsl
mov
xchg
aam
movb
movsb
jp
xchg
loopne
test
insb
xchg
add
jle
mov
leave
ljmp
mov
shll
sub
dec
push
aad
push
cmp
xor
fstl
pop
mov
cmpsb
jnp
sti
adc
sub
push
lcall
pop
in
mov
xor
jl
inc
mov
std
jecxz
push
scas
ficoms
xlat
jle
fs
mov
stos
ret
xor
cmp
push
inc
push
cltd
sub
push
lcall
fldenv
xchg
ds
add
aad
mov
or
repnz
ror
pop
mov
negb
int
mov
test
insl
push
inc
in
fildll
popa
and
rolb
gs
rorl
mov
dec
mov
fs
adc
push
push
fiadds
xchg
orl
inc
xor
add
and
sbb
push
inc
out
push
inc
jbe
insb
mov
jg
jno
lahf
mov
sbb
adc
std
sarb
fisubrl
sub
and
lea
xchg
mov
mov
out
add
pop
nop
add
add
repnz
or
les
movsl
and
es
rcll
jge
mov
roll
cmp
sbbb
xchg
inc
mov
sbb
sbb
into
xchg
call
call
and
push
adc
in
adc
lcall
sub
mov
inc
push
mov
cmp
and
lds
add
into
out
adc
add
xchg
aam
loopne
call
pop
push
xor
roll
icebp
jb
sub
add
aas
dec
cmp
mov
pop
cwtl
xchg
or
sbb
and
xchg
inc
shr
pop
pushf
int
adc
mov
mov
dec
push
pushf
sub
lds
flds
mov
in
xchg
adc
cld
xchg
and
test
shlb
stos
pop
or
sbb
loopne
repz
and
xchg
pop
push
jge
mov
cmp
jl
std
add
int
pushf
add
mov
imul
cld
sbb
pop
lret
dec
lds
or
xchg
and
dec
jnp
aaa
ljmp
xchg
ja
xchg
jbe
repz
iret
in
rcrb
xchg
adc
add
ficoms
inc
pop
das
idivl
dec
ljmp
adc
xor
dec
andb
sbb
mov
inc
movsl
and
xor
pop
jae
mov
icebp
mov
clc
repz
stc
and
mov
fcmovnb
ljmp
std
mov
roll
add
jno
imul
hlt
mov
jg
jae
nop
xchg
add
fcmovu
inc
lcall
sbb
stos
scas
aaa
mov
repz
mov
cli
dec
sub
inc
xchg
push
es
pop
mov
cmp
in
jmp
inc
sti
xlat
jmp
cs
pop
mov
inc
in
add
push
or
rolb
pusha
loop
adc
mov
xor
insl
das
push
push
cmc
pop
jp
pop
xor
cld
mov
mov
xor
sbb
test
test
shl
lcall
scas
imul
pop
dec
adc
mov
clc
mov
sar
xchg
xor
push
xchg
cli
mov
movsl
lock
xchg
ret
mov
insl
repz
add
adc
cld
xor
movsb
jne
and
arpl
fldl
lock
lods
inc
adc
mov
out
fnstenv
into
mov
pushf
rclb
add
inc
movsb
cs
xchg
jns
aad
or
xchg
xor
hlt
sbb
mov
es
mov
push
mov
pop
leave
mov
mov
cmp
adcl
ljmp
inc
jge
adc
cvtdq2ps
std
add
daa
in
xor
and
xor
push
mov
and
or
out
dec
xchg
cld
sbb
cs
sub
les
mov
fwait
lock
test
out
je
ljmp
in
mov
inc
or
fwait
sbb
jns
pop
call
jbe
mov
sbb
insb
int3
sbb
mov
lcall
pop
push
mov
mov
fstpt
mov
cltd
add
or
loope
and
push
or
fwait
jae
push
stos
pop
mov
cmp
outsb
int
in
push
stc
jne
fstpt
cmp
outsb
push
cwtl
clc
cmp
mov
inc
sub
cmp
cs
xchg
cltd
xchg
inc
cwtl
bound
fdivrs
aad
dec
adc
jl
lret
cmp
xlat
cli
pop
outsb
or
les
cmpsb
subb
in
es
arpl
dec
pop
sti
jbe
sbb
xor
mov
push
dec
jo
scas
add
iret
jo
insb
dec
repz
jmp
xchg
add
jmp
and
add
xchg
cwtl
cmpsl
iret
idivl
cld
pop
adc
jmp
jns
sbbb
and
decl
lcall
mov
and
stc
jp
push
inc
call
hlt
adc
mov
or
push
mov
fwait
pop
pop
jge
jnp
cmp
movsl
xor
aam
fldenv
cmp
cmp
loop
cmpsl
dec
pavgw
mov
cmp
pop
mov
leave
iret
lods
in
cmp
pop
xlat
outsl
lds
dec
pop
cmp
mov
adc
sub
imul
aaa
aas
popf
divb
and
cmp
les
je
insb
pop
repnz
hlt
fdivrl
pop
cmp
lss
ret
sti
and
mov
andl
pusha
fldl2e
adc
movsl
and
stos
data16
aam
dec
lds
mov
xchg
mov
pop
jl
daa
jmp
xchg
rcr
inc
loope
jl
inc
leave
lcall
ds
lahf
pop
inc
fs
jno
loop
pop
mov
add
push
mov
inc
insb
pop
mulb
bound
cli
out
lods
pop
mov
mov
int3
fidivrl
iret
xchg
adc
mov
in
and
test
cmp
push
sbb
test
jge
sarb
mov
dec
sti
daa
or
push
leave
repnz
push
out
inc
imul
pop
inc
ljmp
sub
jmp
add
lahf
sbb
ja
mov
enter
pop
add
mov
clc
jne
ja
xor
stos
jbe
loope
aaa
shr
add
and
adc
fstpl
mov
in
add
fcomps
inc
pop
gs
pop
push
jmp
les
les
add
and
in
jecxz
jmp
sub
pop
sti
and
jle
mov
xor
out
jb
xchg
mov
sbb
push
clc
jp
sti
cmpsl
cmp
lret
mov
and
mov
sbb
or
lods
outsb
out
mov
shlb
xor
push
in
negl
insl
cmp
adcb
test
cmpl
push
add
cld
loopne
loopne
jmp
scas
mov
pop
leave
adc
xchg
ret
fildll
pop
push
ljmp
std
cmpb
sbb
fsubl
rcrl
push
mov
fsubrs
xchg
or
pop
cltd
fnstsw
in
xor
imul
arpl
js
dec
shrb
bound
mov
out
pop
ja
mov
test
lods
or
xor
inc
adc
gs
stos
leave
imul
ret
test
std
stos
repz
jne
xrelease
cmc
mov
cli
push
dec
and
jb
lret
mov
test
jae
inc
sub
hlt
jnp
pop
bound
bound
imul
sbb
fnstenv
mov
sbb
cli
xchg
std
and
fdivr
in
cld
clc
xor
insb
ja
cmpb
dec
je
test
sarl
in
ss
fisubs
les
inc
jmp
sub
dec
loopne
or
call
mov
push
push
notb
leave
push
xchg
lret
sbb
sub
push
jmp
icebp
sub
pop
cmp
mov
mov
lods
jge
adc
out
jb
insl
dec
dec
mov
jae
aam
jns
dec
xor
mov
jbe
lods
inc
xorb
jne
testl
push
dec
adc
push
cmp
imul
test
out
and
sub
sub
mov
or
scas
mov
cs
jmp
out
mov
sub
inc
dec
pop
insl
and
jl
and
or
mov
jmp
enter
inc
and
lret
sti
sbb
push
and
pop
jl
or
dec
push
repnz
nop
or
fxch
cmp
adc
sbb
dec
repz
fcompl
jns
dec
push
sub
ljmp
push
imulb
sbb
aaa
mov
push
jmp
mov
out
mov
inc
movsb
xor
add
nop
das
sub
test
push
rcll
xchg
pop
xchg
aas
lahf
hlt
adc
mov
and
lods
fld
mov
add
jmp
jae
movsb
in
sbb
loopne
pop
loope
xor
in
mov
sbb
cmpsb
ds
les
dec
leave
cld
adc
subb
xchg
dec
or
inc
mov
adc
adc
sti
sub
xor
ss
das
cmpsl
test
in
sarl
hlt
push
sbb
mov
pop
pushw
out
dec
ss
aaa
cmp
push
ss
push
sarl
dec
aam
mov
inc
orl
icebp
sub
xor
and
retw
inc
lea
daa
jmp
xchg
pop
sub
cmp
das
pop
push
idiv
icebp
or
imul
shlb
iret
mov
pop
popf
jg
addr16
add
push
int3
sbb
loopne
movsb
outsb
dec
mov
loop
lds
sti
subl
push
addr16
movsb
xor
dec
pop
testl
dec
cmpsl
sarb
push
and
mov
push
movsb
rol
js
lock
sub
cmp
mov
fwait
push
mov
gs
ret
mov
xchg
dec
pop
js
cld
in
in
andb
jb
fcomp
pop
xor
jmp
arpl
cld
adc
adc
xor
jne
or
inc
inc
and
mov
ds
lock
inc
in
pop
lds
iret
pushf
lds
mov
in
and
lcall
mov
lcall
sbb
test
jne
mov
jecxz
sub
cli
mov
out
cmp
sar
jns
mov
hlt
fistps
pop
mov
xchg
dec
cmp
movsl
cmp
adc
cmp
idivb
aad
mov
fsub
ss
pop
decb
stos
lret
ret
addr16
enter
sbb
or
std
leave
sbb
hlt
pusha
les
ljmp
xor
clc
or
push
pop
lahf
js
out
cmpb
pop
push
mov
sbb
lcall
pop
test
loopne
jnp
xor
cmp
divl
rolb
loop
ss
ss
mov
lods
pop
and
pop
sub
pop
mov
mov
xlat
shr
push
xchg
xchg
pop
scas
icebp
lods
lds
xchg
mov
adc
sub
inc
lock
outsl
stos
fwait
je
mov
test
in
out
xchg
popa
add
jg
cmp
or
shrb
mov
iret
aas
mov
sub
stos
sub
das
js
sub
dec
movsl
mov
xchg
nop
xor
cmp
sub
lock
mov
addr16
outsb
sar
push
rcr
ljmp
hlt
in
xor
andl
dec
inc
mov
and
ds
adc
pop
testb
shrb
cmp
and
test
inc
stc
push
sub
pop
cmpsb
rcr
push
aaa
inc
mov
insb
or
ret
jmp
jge
or
fdivs
add
pop
inc
in
mov
in
fwait
fs
mov
out
into
lcall
loope
insb
pushf
out
lea
popf
stos
mov
mov
aaa
cld
adc
daa
and
push
enter
or
ljmp
ret
mov
push
and
xchg
cltd
pop
aaa
iret
mov
pop
into
push
loope
pop
icebp
push
fisubrl
pop
xchg
in
mov
mov
pop
rolb
sbb
jecxz
aad
pop
shrb
jle
xchg
cmp
mov
call
jbe
out
ss
js
mov
les
or
ja
in
ret
notb
test
movsl
inc
ret
cltd
ret
daa
jae
popf
or
xchg
xchg
mov
fisttps
ret
add
sbb
xchg
test
dec
fadds
movsl
stc
mov
dec
mov
jo
test
xor
adc
dec
xor
mov
dec
or
dec
mov
mov
push
sbb
jmp
leave
adc
shll
push
jae
pop
cmp
pushf
or
fmuls
cltd
push
fs
add
imul
in
out
and
inc
sub
cwtl
cwtl
call
call
cld
adc
iret
frstor
scas
aam
adc
xor
add
push
out
xor
arpl
inc
in
ja
jp
push
jnp
or
adc
push
push
push
sub
push
inc
inc
pop
pop
jmp
out
push
or
lret
xchg
or
aad
scas
out
ljmp
jnp
xor
fs
mov
mov
cs
sub
inc
into
xchg
inc
fs
push
cld
es
hlt
loop
loop
mov
and
or
lock
mov
push
mov
popa
lock
xor
flds
jae
mov
sub
jae
out
mov
or
inc
cltd
dec
push
fsubrp
xchg
cli
ljmp
outsb
lcall
insb
pop
int3
adc
and
loopne
aaa
jno
or
jns
add
or
cmp
subl
xor
xchg
sub
imul
decb
fists
das
aam
mov
cmpsl
imulb
test
sub
jle
sbb
leave
mov
adc
pop
mov
adc
cmp
mov
add
sub
cmp
sbb
dec
cmp
mov
pushf
or
pop
jns
dec
jmp
cld
sti
in
bound
mov
and
inc
pop
icebp
ss
push
loopne
aaa
pop
mov
mov
popa
or
rcr
insb
xchg
outsl
fwait
jo
cmp
test
mov
push
push
sbb
xor
and
das
jp
sbb
popf
sbb
outsl
inc
xchg
cmp
les
cmc
je
jns
imul
hlt
test
out
ss
pusha
into
xchg
cmp
add
push
out
loopne
fsts
sbb
jle
pop
rcrl
es
push
nop
push
push
jno
popf
mov
repnz
test
push
cmp
or
notl
es
jl
ja
out
test
mov
fcompl
mul
mov
mov
inc
call
cwtl
jnp
into
add
pop
inc
cld
add
leave
sub
gs
xchg
fstpt
shll
cld
test
xor
pushf
mov
push
add
jb
mov
in
test
push
pop
lahf
or
mov
push
ss
fisttpl
dec
enter
inc
cmp
mov
sti
xor
jns
andl
aad
cs
in
dec
xchg
sbb
test
sets
jg
xor
cli
mov
push
ret
mov
cmp
sub
fsubl
jbe
shll
insb
mov
pop
inc
into
adc
negb
jb
lock
jae
adc
cmp
push
popf
adc
pop
cli
add
mov
fucom
std
cwtl
fsubl
push
sub
xchg
xor
imul
sti
add
xor
repnz
enter
das
and
mov
pop
cmpsl
dec
inc
mov
mov
int
mov
sub
sub
sbb
inc
movsb
fs
mov
push
sbb
sbb
stc
mov
adc
test
mov
and
cmp
sahf
stos
pop
mov
stos
inc
xchg
fstp
lret
jge
mov
sub
jle
jne
xor
cmp
subb
jae
mov
cmpsb
push
and
or
sahf
arpl
cs
fidivrl
adc
dec
and
sbb
push
and
jp
out
or
ds
jg
out
or
repz
ret
mov
push
xchg
in
xor
push
shl
xor
sahf
inc
xchg
arpl
mov
mov
mov
or
cmpsb
fcomip
and
fldt
xlat
subl
mov
or
cltd
jns
pop
jg
fsubs
mov
aas
out
pop
divb
stos
int3
jb
jp
sub
push
dec
daa
add
pop
fs
cmp
arpl
inc
loopne
mov
xlat
jmp
cmp
je
je
mov
rolb
stos
mov
dec
test
cmp
push
mov
jns
or
ja
movb
clc
push
paddw
je
and
je
ljmp
push
aas
xor
bound
imul
or
jl
shr
addb
cld
pusha
mov
call
cmp
icebp
daa
sub
outsb
mov
je
stos
pusha
aad
xlat
inc
xchg
pop
mov
outsl
ds
fdivrs
jmp
fldt
sub
sbb
in
sti
jl
inc
lock
jmp
mov
jge
dec
add
pop
mov
sti
fs
pusha
mov
shr
nop
decl
add
aas
std
sbb
push
in
pop
dec
in
adc
nop
stos
jae
jl
stc
sbb
jno
push
mov
sub
mov
mov
cmp
in
xlat
inc
mov
mov
adc
cmc
dec
push
fildl
je
and
mov
dec
dec
xchg
ljmp
arpl
jle
cs
insl
cmpsb
push
inc
lret
scas
repz
pop
jp
push
pop
xchg
enter
cld
mov
aad
mov
xor
movsb
addr16
popa
sbb
push
cmpsl
mov
mov
xor
daa
les
in
aas
test
pusha
jb
lea
push
add
loopne
xchg
orl
repz
mov
repz
dec
pop
pop
aaa
test
movsl
test
fs
jmp
addb
add
sbb
add
js
sub
ljmp
push
push
js
in
pusha
dec
pop
cmp
xchg
lahf
loop
sbbb
les
scas
xor
rol
mov
inc
inc
movsl
pop
or
mov
sbb
je
mov
mov
xor
xchg
add
lcall
mov
mov
xor
and
xchg
dec
enter
bnd
out
mov
sbb
in
lods
iret
cltd
and
and
mov
mov
and
int3
fs
mov
lock
enter
loop
mov
push
fisttpll
cmpsl
or
dec
adc
hlt
xchg
ret
lds
jnp
cmp
mov
lods
and
ret
out
mov
andl
jp
jmp
push
jb
sar
mov
mov
xchg
pop
fcmovnb
xor
in
lcall
lock
dec
stos
dec
ljmp
and
mov
add
xchg
arpl
es
lahf
cmpsl
inc
mov
mov
dec
out
fisttpll
inc
jl
lds
and
and
stc
jp
fiaddl
and
or
ret
pop
stos
push
stc
fcmovb
in
pusha
xchg
out
push
cmp
movsb
ds
mov
mov
xor
paddq
xchg
popf
mov
add
xchg
ret
pushf
in
lret
sbb
sub
push
lock
mov
je
adc
and
adc
aaa
mov
sbb
out
jo
add
lcall
jp
or
push
xchg
adc
xlat
push
cmc
adc
decl
mov
inc
das
fs
cld
mov
add
ds
ret
ja
push
add
dec
mov
pusha
push
lea
in
pop
adc
dec
inc
das
pop
pusha
loopne
mov
xchg
jno
dec
fsubrs
movsl
dec
push
loop
pusha
les
shlb
in
in
xchg
scas
pop
lret
into
stc
cwtl
push
nop
xor
jmp
dec
sub
cmp
test
pusha
pop
or
js
mov
push
pop
fsubl
mov
nop
daa
outsl
xchg
push
iret
dec
pop
in
mov
push
shrl
cli
mov
out
push
cmp
dec
xchg
mov
add
or
mov
and
xor
or
xchg
adc
out
lods
lret
dec
or
sahf
insb
mov
dec
adcb
pop
fbstp
mov
lea
mov
ja
clc
fldl
jl
jne
test
jnp
nop
and
in
shr
out
fdivr
mov
lea
stos
mov
adc
jg
xchg
sbb
xor
pop
hlt
mov
cld
loopne
adc
add
mov
xor
js
and
xchg
in
rcrl
lret
in
cld
ret
stos
xor
sahf
cmp
xor
aad
cmc
xchg
push
mov
f2xm1
test
jmp
lea
pop
cmc
push
xlat
sub
lods
popa
jo
into
cmp
mov
sarb
es
and
int
add
xchg
es
adcb
pop
inc
inc
dec
cs
pop
mov
xor
sub
and
out
loope
int
and
sub
cmp
xchg
loope
std
shrb
mov
adc
push
out
sbb
mov
xchg
lret
out
xorl
inc
pop
or
mov
jo
idivl
lea
or
jbe
gs
adc
stos
fld
xorl
fadds
mov
ret
inc
call
pop
or
fmull
cmpsb
fbld
push
or
sub
js
repz
daa
mov
lods
mov
out
mov
rclb
pop
sbb
dec
jl
int
push
insb
outsl
pop
mov
pop
mov
sahf
lds
fs
aad
inc
fsubrp
cmp
stos
mov
push
and
lock
das
or
aaa
mov
adc
or
sbbb
sbb
mov
out
push
shll
jns
jo
lcall
xor
adc
lods
mov
out
inc
add
fmuls
popf
mov
xorl
add
cwtl
xor
cld
sbbl
rcrb
add
push
dec
in
in
cmp
data16
xchg
andl
dec
dec
adc
aam
mov
pusha
das
pop
jl
out
push
mov
inc
dec
dec
sub
imul
in
xor
out
jb
cmp
cmpsl
subb
andb
subb
insl
add
inc
mov
dec
xchg
cmpsl
jno
pop
loopne
jle
leave
in
pop
sub
js
inc
mov
jle
int
repnz
dec
rorb
movsb
jnp
sysret
jle
inc
cmc
adc
popf
add
test
mov
pop
imul
test
and
mov
cmp
fsubs
orb
pusha
imul
adc
sub
xor
mov
mov
jle
dec
mov
out
cmp
mov
mov
andl
sub
mov
sahf
jg
lret
inc
xor
shll
hlt
xchg
jmp
xor
pushf
dec
push
mov
loope
cmp
dec
sbb
sahf
mov
jae
mov
jmp
out
js
pop
sub
mov
pushf
loopne
mov
in
add
or
bnd
xchg
push
fsubrs
cmp
lods
pop
addr16
mov
and
cmpsl
adc
or
cmp
pop
cld
mov
inc
popf
lods
out
movsl
add
jl
das
or
xchg
out
cmp
int3
inc
filds
mov
cwtl
cmp
jo
arpl
mov
popa
mov
mov
aas
fs
rorb
add
mov
sarl
pusha
mov
jnp
jb
mov
xor
mov
jne
xchg
xchg
xchg
ljmp
ret
stos
test
jno
jl
add
and
ja
insb
adc
popa
in
lcall
stos
xchg
fcmovne
push
xor
scas
mov
dec
sbb
aaa
mov
lods
ret
xchg
pop
fisubrl
mov
fistpl
lods
sbb
add
das
mov
popf
xchg
movsb
push
shr
ss
enter
adc
sbb
xor
rcll
popf
inc
dec
inc
call
es
mov
push
xchg
push
lds
fldl
cmp
out
lods
cld
icebp
adc
mov
icebp
iret
xchg
daa
jge
aaa
fcompl
mov
test
aam
xor
jnp
jle
scas
add
dec
aaa
and
call
sbb
inc
fildl
negl
mov
clc
lret
cwtl
and
jne
fbstp
mov
lods
stc
inc
fcmovnu
and
pop
fdivrl
inc
xchg
rolb
cmp
ja
loop
scas
aaa
pop
jb
inc
dec
std
pop
lock
iret
sti
out
int3
dec
xchg
ds
out
cmp
fstps
mov
pop
int3
xchg
sbb
repnz
sbb
jbe
addl
fistl
add
pop
xchg
mov
rorl
pop
movsl
pusha
sub
inc
sub
cmp
push
and
aam
outsl
ja
jnp
adc
dec
cmc
sbb
cmp
lods
out
lret
jmp
inc
movsl
or
enter
jae
xor
and
pop
cmp
cmc
test
xlat
xor
sbbb
xchg
clc
pop
mov
add
or
es
rdtsc
cwtl
pusha
ljmp
cli
imul
aam
xchg
mov
dec
test
mov
dec
pop
sub
push
pop
and
sub
pop
rcr
sbb
xchg
dec
jb
adc
nop
xor
out
mov
cmpsl
mov
les
pop
int
rcr
xor
mov
cmpsl
inc
hlt
xchg
sub
or
mov
add
fistl
jp
pop
jns
mov
dec
test
dec
ljmp
mov
pop
mov
inc
cmp
or
data16
jmp
or
mov
mov
leave
dec
or
inc
in
pop
jl
mov
mov
mov
insl
xchg
shll
or
xchg
add
ljmp
outsb
sbb
push
icebp
fbld
ja
inc
or
dec
push
mov
jecxz
xor
pop
inc
inc
or
jno
scas
dec
and
xchg
push
sbb
cwtl
dec
pusha
mov
mov
jmp
mov
pop
adc
jno
repnz
xchg
test
jg
sub
push
cmp
add
or
adc
jp
push
push
jl
push
push
or
cmp
sbb
jnp
aam
push
sub
jg
sub
cmp
cwtl
xchg
inc
push
dec
es
jmp
loope
movsl
or
pop
cmpsl
clc
or
cmp
fcomps
aaa
lret
pop
aas
dec
dec
mov
es
popa
mov
lods
shl
inc
ljmp
popa
cmp
fdivrs
div
sub
cli
jp
ja
inc
rolb
fadd
mov
cld
inc
inc
fstpl
inc
push
mov
scas
push
js
adc
nop
pop
and
dec
sbb
mov
cmp
das
hlt
stc
cmpb
int
rorl
push
dec
mov
sub
fistl
dec
jnp
mov
nop
sbb
out
dec
ret
cmp
das
aad
outsl
cmc
lds
jl
sarl
cmp
popa
in
mov
stos
sub
inc
mov
push
jmp
mov
out
xchg
inc
sbb
mov
xchg
dec
xorb
daa
ficoms
pusha
lods
movsb
stos
add
addl
fisttpl
aaa
jmp
inc
adc
test
mov
fsts
setge
mov
out
sub
pop
mov
lret
push
nop
jo
lods
iret
stos
mov
lret
fwait
outsl
jl
cmpsl
fidivs
dec
and
pop
addr16
imulb
outsb
negl
cld
or
mov
xor
xchg
xchg
adc
sub
xor
scas
and
roll
adc
mov
xlat
xchg
sbb
rcl
mov
insl
out
jne
xchg
repz
cmp
scas
stos
fnstenv
loope
testb
bound
cmpsl
repnz
cmp
adc
mov
lea
mov
inc
push
jbe
mov
movsb
inc
mov
loope
jmp
test
and
ss
jmp
daa
mov
sub
mov
inc
data16
dec
out
out
cmp
out
jle
clc
adcb
stos
in
insb
lock
mov
jmp
xor
inc
leave
int3
push
xorb
into
fisubl
loope
or
mov
insb
rorl
cmp
int
pusha
inc
or
xchg
stos
sub
jo
pop
lahf
add
xlat
ljmp
mov
xor
stos
pop
lods
loope
pop
mov
mov
xchg
sbb
push
mov
dec
cli
shll
and
sbb
out
mov
pop
inc
test
push
jbe
paddsb
sahf
or
add
xchg
push
stos
lods
adc
pop
stc
aad
lret
pop
ss
dec
icebp
mov
js
lcall
ljmp
rolb
dec
add
lods
or
push
fmull
scas
jns
scas
mov
adc
cmp
repnz
aad
sbb
cmp
mov
nop
pop
es
or
or
pop
ljmp
iret
jg
mov
push
or
sqrtps
xchg
or
dec
out
cmp
lds
dec
jg
lods
aad
gs
cmp
xchg
jmp
inc
jp
jmp
xor
dec
subl
xor
sub
ficoms
sub
inc
enter
sub
add
sub
leave
mov
mov
mov
les
fistps
sbbb
or
and
fldcw
sub
loope
mov
mov
imul
inc
clc
add
inc
mov
mov
ljmp
mov
outsb
bswap
pop
xchg
and
xchg
pop
mov
mov
fcomp
and
insl
jecxz
xchg
and
pop
adc
xchg
pop
jnp
lock
or
push
fldt
jl
mov
mov
jb
pop
es
and
push
inc
sbb
dec
ja
mov
lcall
and
hlt
outsl
inc
enter
push
inc
push
push
jg
push
cld
xor
and
stos
lret
mov
add
or
scas
xchg
cmp
lahf
dec
pusha
lods
cwtl
mov
inc
in
mov
or
jg
and
idivb
sahf
cmp
add
and
sbb
and
or
sub
ljmp
mov
jp
mov
jp
in
inc
sbb
cld
je
and
test
test
sbb
fcoms
mov
std
mov
mov
push
pushf
jp
sbb
cmp
cmp
icebp
cmp
xor
clc
xchg
lret
fwait
hlt
mov
outsb
dec
mov
std
xchg
sub
mov
in
adc
mov
jb
dec
les
jge
cmp
jge
fistps
or
pop
repz
xor
loopne
mov
cltd
repz
fcmovne
push
push
fimull
pusha
arpl
imul
mov
lods
leave
nop
push
inc
xchg
mull
in
and
sahf
out
daa
movsl
es
and
mov
test
cmp
scas
mov
sbb
es
into
sub
sahf
xchg
add
push
jbe
data16
pop
xor
push
cmc
lcall
pop
add
in
xor
test
or
or
sbb
test
push
push
inc
bound
sbb
jb
dec
rorl
and
pushf
fiadds
adc
enter
jns
xor
inc
and
clc
sub
stos
mov
sahf
cmpsb
out
out
arpl
lret
test
mov
mov
cmp
mov
in
movsb
sti
inc
daa
pop
movsl
adc
cmpsl
test
fmul
nop
sub
bound
dec
pop
add
outsb
pop
mov
addr16
cmp
aad
xchg
les
ljmp
cmp
ret
ret
or
leave
sahf
sub
jge
ljmp
push
into
cmp
mov
or
call
lods
add
dec
pop
cmpsl
jp
fdivrp
push
and
aas
add
xlat
scas
cmp
jns
in
mov
in
push
dec
bnd
push
push
outsb
or
sbb
and
add
jmp
jne
mov
jmp
fisttpll
mov
dec
dec
xchg
mov
bswap
ja
cmpb
push
cltd
adc
sub
jb
mov
lcall
push
es
jne
pop
or
inc
add
sub
cmp
lret
dec
gs
add
les
cs
cli
jns
bound
rcrb
fwait
xchg
adc
mov
loop
scas
ror
call
sbb
pop
js
or
inc
and
sub
ja
xchg
fcmove
adc
pop
fiadds
aad
dec
mov
sarb
into
mov
add
jg
adc
adc
sub
das
dec
or
mov
cmc
mov
push
jae
mov
pushf
ret
sbb
daa
sub
or
mov
jl
out
fwait
mov
dec
inc
aam
mov
mov
and
pop
sub
scas
test
ret
sahf
cli
call
inc
jp
dec
popa
loop
into
popf
mov
sti
cwtl
dec
out
decb
dec
inc
dec
mov
dec
inc
outsb
fidivs
xchg
mov
push
xor
adc
jmp
lock
sub
test
adc
data16
cmpsl
dec
or
js
mov
maxps
je
mov
add
xor
jl
xlat
pop
das
imul
lea
mov
out
scas
imul
js
in
mov
mov
sbb
in
dec
rorb
stc
mov
push
sub
push
int3
pop
push
sbb
mov
xchg
enter
or
dec
sbb
test
repz
out
dec
cmp
ret
xchg
xchg
add
mov
jl
jmp
daa
inc
sbb
add
and
xor
mov
movsl
into
lea
adc
fs
loope
jo
aaa
and
scas
int3
jnp
inc
pusha
mov
imul
push
icebp
fisttpll
leave
out
adc
and
lcall
dec
xchg
xchg
sub
shlb
aad
test
mov
push
loopne
pop
scas
jp
shr
xchg
mulb
rcl
sbb
imul
int3
sbb
mov
mov
jb
sub
and
xchg
and
pushf
fstl
jg
lock
inc
popf
andb
les
push
add
jp
icebp
mov
jne
cmp
std
jb
cld
sti
xor
xor
adc
xor
sub
xor
mov
dec
mov
sub
pop
xor
inc
xor
mov
repnz
adc
cwtl
pop
push
push
ret
ret
xchg
add
xor
loope
sbb
inc
in
stc
add
loope
je
sahf
push
xor
rcrb
clc
int
cmp
scas
pop
mov
cmpsl
sub
ret
cmp
or
lds
sbb
fs
adc
into
and
sahf
mov
push
bound
sti
lret
imul
dec
mov
dec
push
push
cwtl
shrb
sbb
cmp
lahf
cwtl
fildl
fisttpl
add
adc
and
cmp
lahf
lods
cmp
lods
les
stos
mov
jmp
add
jne
out
jnp
je
imul
xor
fnstenv
add
jo
cmp
sbb
orb
ficompl
icebp
scas
mov
inc
jecxz
aad
adc
add
inc
rclb
jne
insb
mov
or
daa
inc
sbb
sbb
aad
out
mov
pop
xor
xchg
inc
loope
in
adc
xor
in
inc
insb
pop
nop
ss
push
jmp
movsb
das
repnz
jo
push
mov
sti
pop
shl
jp
mov
cltd
icebp
subb
push
shlb
lock
pop
cwtl
cmp
push
leave
jmp
sub
cwtl
lahf
cmp
cwtl
in
fs
dec
dec
std
push
or
pop
xorb
add
lods
and
xchg
push
mov
sbb
cli
xchg
loope
popf
or
arpl
mov
sbb
add
mov
inc
sub
je
enter
ret
pop
sub
mov
fidivrl
jecxz
ljmp
or
mov
bound
addl
or
mov
cmp
adc
cmc
testl
dec
sbb
nop
add
cmc
dec
mov
mov
std
and
mov
test
mov
repz
lds
mov
or
push
testl
mov
xchg
idivb
inc
sub
jle
shlb
aad
adc
fmull
dec
cmp
lds
rcr
out
scas
js
scas
and
add
das
adc
mov
sbb
ds
xor
jae
mov
imul
stos
pop
enter
push
jne
mov
adc
pop
pop
inc
out
or
and
shrl
dec
pop
daa
testl
cmpsl
les
xorb
jne
scas
inc
push
lret
inc
cmpsb
and
sub
or
mull
clc
push
push
data16
mul
mov
in
in
inc
dec
push
mov
notb
pop
ror
sub
or
adc
fiadds
out
dec
cmp
imul
in
mov
inc
mov
jae
xor
adc
mov
outsb
mov
push
xchg
cld
and
movsb
fdivrl
ret
dec
lcall
sbb
popf
icebp
sbb
stos
add
cmp
shlb
adc
push
cmp
push
add
push
push
enter
roll
call
adc
movb
xchg
jge
pusha
sub
or
inc
push
gs
xor
pxor
mov
test
loop
mov
test
xchg
pop
mov
sub
iret
mov
shlb
jle
lret
in
and
push
nop
int3
cmp
test
push
dec
lods
jge
mov
inc
xchg
aam
aad
out
cmpsb
jae
pop
mov
push
outsl
cmpl
and
xor
daa
icebp
xchg
insl
and
sbb
loopne
pushf
popf
xor
pop
hlt
lods
xchg
jnp
cmp
push
adc
mov
mov
xchg
jmp
mov
push
dec
es
add
leave
and
stos
push
add
cld
xchg
nop
rorb
arpl
xchg
mov
mov
jne
movsl
iret
jmp
fdivp
pop
cld
xor
inc
cmpsb
add
jae
int3
pop
lcall
sub
mov
mov
popf
mov
mov
sahf
inc
lret
xchg
clc
test
or
ss
jg
dec
jg
scas
ljmp
in
push
mov
or
adc
pop
in
rol
jmp
sbb
sub
mov
sbb
popf
xlat
dec
mov
pushf
cltd
push
xchg
and
mov
inc
test
insl
dec
pop
cli
xchg
sbb
stos
fwait
sbb
and
cmc
rorl
mov
cmpsb
push
mov
lret
sbb
and
mov
cmp
and
idivb
jo
fs
pop
setge
mov
test
adc
dec
cmc
hlt
ret
xor
xchg
int3
mov
in
adc
cld
sub
cli
jns
or
dec
popf
fdivrl
cmp
xor
and
mov
test
insb
scas
mov
cwtl
push
subl
pop
mov
jb
mov
mov
iret
insl
lahf
inc
and
setg
xor
push
int3
mov
xchg
out
mov
mov
xor
sub
vpcmpgtw
cmp
aaa
jo
int
fmul
add
jmp
adcl
xchg
xor
sbb
js
adc
test
sbb
jg
or
inc
and
push
out
or
adc
and
mov
adc
mov
es
cmpsb
in
cmp
les
dec
lret
inc
push
and
arpl
push
push
push
cli
sub
std
mull
adc
dec
jmp
jp
lods
ss
pop
sbb
or
push
ss
xchg
test
mov
cmp
cli
jb
das
adc
out
xchg
dec
dec
int3
ret
inc
aas
xchg
out
cmp
jmp
push
mov
aad
and
mov
or
push
or
adc
push
fs
stos
lret
mov
imul
jg
jmp
lock
pop
test
pop
nop
sarl
iret
sub
mov
xlat
mov
inc
popf
jb
ljmp
movl
pop
aam
notb
scas
mov
imul
mov
test
mov
ret
push
orl
cmpsb
jns
cmpsl
inc
out
mov
icebp
loope
std
push
int
test
mov
cmp
push
sbbb
mov
mov
pop
mov
das
into
sahf
lds
inc
repnz
dec
and
rcrl
xor
or
out
shlb
jmpw
push
lds
loopne
adc
mov
fistpl
aam
lods
push
xor
inc
xchg
mov
pop
push
filds
inc
enter
cmp
clc
jno
sahf
cmpl
dec
add
mov
adc
jbe
adc
sahf
mov
in
idivb
ds
cmc
fwait
popf
cwtl
cmpsb
xchg
in
and
imul
cld
xor
jne
xor
pop
je
and
outsl
aam
xor
sbb
call
loope
add
lahf
movl
mov
iret
xchg
adc
out
and
pop
lret
adc
fisttpll
enter
sbb
int3
mov
shl
push
loop
test
int3
lcall
bound
out
gs
sub
loope
adc
rcrl
les
in
mov
lods
ljmp
sub
dec
jg
aam
test
jae
jnp
dec
mov
out
cmp
push
adcl
rorb
test
xchg
pop
push
fs
or
mov
dec
jp
outsb
adc
push
and
cmpsl
cmc
jg
mov
cli
aad
and
fmul
xchg
mov
xchg
cmpsl
mov
add
dec
inc
shrb
hlt
sarl
xchg
mov
push
sub
ds
push
sti
add
adc
or
mov
mov
lcall
rcr
ljmp
imul
jecxz
xchg
jmp
pop
push
test
loop
xchg
shlb
or
push
ja
push
sbb
mov
enter
nop
or
inc
fistpll
jmp
sbb
lahf
or
adc
push
ret
pop
xor
xor
mov
das
sub
mov
lods
lea
stc
xchg
and
fsts
xor
adc
rorb
xchg
push
xchg
xchg
adc
mov
xchg
aam
stos
nop
test
dec
lods
pop
jmp
aaa
dec
inc
lds
fucomip
mov
xor
push
jo
arpl
inc
loopne
call
push
cltd
movsb
clc
sbb
xor
sbb
in
mov
and
daa
in
scas
sub
std
ljmp
mov
or
test
push
negl
lods
or
inc
dec
ret
sti
shlb
xor
aad
mov
repnz
pop
lods
popf
mov
pop
mov
shll
nop
xor
jno
ljmp
push
xor
mov
sub
cmc
ljmp
dec
shrb
ja
xchg
lcall
les
pop
adc
dec
icebp
dec
push
mov
and
repnz
test
and
xor
push
push
dec
add
push
pop
xchg
adc
push
xchg
lret
lods
and
sub
gs
mov
insb
mov
iret
inc
flds
and
cvtps2pd
push
cmp
xor
cmpsl
pop
out
int
inc
sbb
push
xor
pop
fnsave
mov
dec
nop
mov
xchg
push
dec
mov
scas
pop
pop
or
xor
or
jb
sbb
cs
dec
sub
mov
mov
daa
out
js
sub
ficoms
xchg
push
cmp
mov
ljmp
leave
scas
mov
sahf
sbb
rcr
popa
mov
jmp
mov
mov
push
outsl
lea
repz
aaa
rolb
loopne
imul
cmc
add
int3
rcl
out
mov
jnp
das
dec
daa
dec
lret
push
jp
scas
testl
pop
lea
or
cmc
mov
data16
lods
fs
add
fidivrl
jge
pop
mov
mov
pop
add
in
faddl
xchg
daa
sub
and
daa
cmp
mov
cmpsb
push
loope
daa
xor
xlat
test
sub
cmp
nop
inc
xor
xlat
lcall
pop
imul
insl
or
adc
clc
shrl
gs
jg
inc
push
push
mov
dec
out
push
gs
cmpsb
xchg
les
pusha
push
inc
cmpsb
sbb
lods
xchg
ret
stos
lret
flds
jbe
fdivrs
insb
push
fdivs
int
xor
in
sbb
mov
xchg
ljmp
sbb
adc
iret
xchg
push
dec
pushf
push
insb
lock
inc
push
mov
xor
aas
inc
or
repz
out
jo
xchg
es
cmc
or
insb
sbb
add
orl
ljmp
rcrb
inc
addr16
sub
arpl
push
daa
stos
jl
repz
push
xor
je
test
pop
out
neg
scas
jg
mov
xchg
xchg
cmc
xchg
add
decl
out
dec
jno
jnp
mov
and
sub
lret
out
imul
push
insl
jo
mov
sub
test
push
add
roll
push
ret
xchg
xchg
push
or
dec
mov
aam
movsb
mov
imul
cmpsl
jl
add
inc
xchg
outsl
js
push
push
lock
adcl
lret
cli
insb
push
lods
std
out
les
iret
adc
pop
add
or
pop
scas
or
add
scas
leave
pop
add
adc
in
dec
les
sub
jno
bswap
mov
mov
xchg
scas
test
pop
pop
pop
jl,pn
in
fstpl
stc
lret
movsb
lret
addr16
xchg
sbb
inc
clc
mov
push
repz
aaa
mov
aas
mov
jecxz
fsts
jns
pop
gs
xchg
popf
inc
out
imul
clc
mov
jo
aas
outsl
movsl
jp
inc
call
jne
push
add
lods
ds
outsb
std
inc
psrld
pop
popf
push
xchg
das
into
insl
in
add
push
data16
or
or
jns
int
fsts
jb
xor
or
cmp
xor
ret
mov
test
mov
lds
or
mov
loopne
add
push
loopne
popa
sub
fnstenv
jbe
mov
and
aad
cli
pop
icebp
cmp
push
popa
lock
dec
sbb
mov
enter
mov
and
enter
cs
push
push
push
jb
in
shrl
dec
add
mov
sbb
mov
imul
xchg
xor
in
std
pop
je
dec
aam
sbb
cmc
aad
mov
imul
mov
inc
pushf
mov
lahf
sbb
xchg
icebp
repz
les
lret
add
jmp
xchg
dec
insl
insl
xchg
sbb
xorl
push
mov
push
rcrb
jno
or
aam
sub
fbstp
inc
jnp
ret
mov
dec
dec
fstpl
and
pop
or
jbe
lds
dec
xor
cmp
mov
xchg
int3
ljmp
outsb
push
pop
mov
lret
mov
iret
imul
loopne
test
lods
add
add
ret
pop
mov
cs
add
outsl
popf
shrl
out
std
out
pop
ret
dec
jl,pt
xor
cld
lock
mov
gs
inc
or
pop
push
xchg
cmp
call
lds
fcmove
sbb
fcomps
and
fnstcw
pop
or
daa
test
or
int3
mov
aam
bound
mov
cmpsl
call
sti
mov
xchg
dec
mov
ret
cmc
test
js
subl
push
inc
lods
dec
xchg
xchg
fisttps
shlb
sarl
into
adc
adc
inc
pop
cmp
mov
mov
mov
out
jno
icebp
xor
pop
or
aad
adc
minps
pop
add
jle
mov
and
mov
insl
xchg
lea
in
cmp
jbe
and
out
xchg
add
mov
sbb
mov
or
xchg
xor
popf
and
outsl
rclb
xchg
aas
jne
dec
ret
imul
lret
or
push
push
loop
pop
mov
cmp
xorl
dec
icebp
cs
cli
sbb
or
test
or
jne
popf
add
add
std
mov
xor
mov
out
jbe
enter
xor
add
fcomps
pop
pop
orl
orb
cwtl
insl
outsb
outsb
jb
xchg
jp
lahf
dec
stc
mov
arpl
adc
sbb
outsb
push
xor
lock
frstor
mov
sub
cmp
loop
stos
cmc
aaa
jns
stos
jae
repnz
jnp
and
pop
dec
fdivrl
aas
dec
lea
mov
mov
insb
hlt
mulb
pop
loopne
sbb
push
inc
adc
outsb
loopne
stc
mov
outsb
jne
imul
dec
or
mov
sub
rcll
lret
aam
push
outsl
mov
pop
imul
dec
xchg
idiv
gs
popa
or
inc
jp
outsb
loopne
stc
idiv
add
xchg
sbbb
xor
fwait
push
fldcw
sarl
fisttpl
mov
jmp
sti
fiaddl
lcall
mov
xchg
cltd
fcoms
mov
lret
mov
xchg
xor
xlat
outsl
out
and
jecxz
test
inc
xchg
cvtpi2ps
out
push
dec
insb
cmp
sub
cld
clc
sub
mov
push
pusha
es
bound
fistps
pop
ss
inc
cli
and
loopne
mov
dec
jp
sub
in
sbb
in
ljmp
push
cmc
sub
cmpsb
push
sbb
hlt
cmp
test
test
fcomip
out
sbb
and
pop
scas
sbb
pop
mov
stos
adc
in
icebp
sub
fisubl
rcll
jge
dec
mov
mov
cmpsb
data16
xchg
or
inc
gs
mov
sbb
push
pop
ss
mov
enter
inc
cmpsb
out
ret
arpl
cli
push
sub
mov
fisttps
stos
fldt
dec
iret
cmp
out
icebp
lods
enter
and
cltd
pop
xchg
ficomps
ja
aam
jb
push
mov
outsl
mov
push
sub
cmpsl
cmp
add
sub
or
loop
in
push
push
xor
or
add
sbb
pop
adcl
mov
xchg
pop
int3
nop
mov
sub
sbb
adcb
aam
jle
lods
sub
fdivs
xchg
sbb
jno
std
dec
movsl
lcall
cmp
stos
into
xchg
mov
add
cmc
in
movsl
mov
ds
ja
and
gs
icebp
pop
push
out
shl
xor
inc
dec
arpl
cmp
cmpsb
ds
testl
push
stc
mov
xchg
mov
cltd
sub
and
loopne
mov
push
les
dec
sbb
pop
mov
les
cmp
add
sub
pop
shll
insl
loope
lods
pop
inc
xor
adc
aaa
aas
shll
inc
sbb
iret
inc
ljmp
clc
lret
lock
pop
ror
xchg
outsb
cmpsb
fdivrs
pop
je
loop
xchg
dec
mov
shrl
pop
movsl
sti
lods
aas
xor
outsb
xor
lock
mov
shr
int
push
push
in
inc
and
push
mov
jno
sbb
add
fisubl
xchg
lods
into
ss
dec
jge
sbb
mov
jno
push
pop
aam
sub
addr16
sub
push
xor
fldt
xchg
cwtl
xor
dec
mov
push
lcall
bound
mov
mov
fimull
pop
sti
add
push
lahf
sbbb
outsb
jg
xor
mov
mov
pop
test
ficomps
hlt
movsl
lret
add
sbb
repnz
stos
mov
jmp
cld
sbb
cltd
pop
push
subl
loopne
test
xchg
sbb
pop
mov
dec
das
mov
add
push
pop
xor
pop
pop
sti
xchg
mov
dec
aas
mov
shlb
aas
mov
dec
lret
movsb
out
fsubs
add
cmp
lods
into
pop
dec
or
mov
divl
adc
hlt
lods
test
xor
in
ret
pop
ds
ljmp
fcoml
add
mov
cmp
adc
lds
jno
jns
push
push
jge
and
cld
or
add
lock
stos
imul
lock
int3
lods
xor
ja
addr16
pop
mov
cmp
cwtl
xchg
addr16
call
cmp
inc
bnd
cmc
imulb
cld
subb
repnz
lods
jg
hlt
mov
pop
push
sub
int3
addr16
ss
jno
addr16
cmpsb
sti
sub
cmp
jns
xor
jecxz
adcl
jle
fisubl
jecxz
push
fildl
lret
fwait
nop
mov
shl
fisubrs
inc
sbb
pop
mov
cmp
sub
xchg
xlat
lock
adc
or
xchg
mov
stc
iret
cld
cwtl
mov
call
jne
outsl
pop
rolb
add
mov
jge
adc
sub
sub
cld
adc
xchg
push
and
add
subb
pop
and
lcall
xchg
in
loope
outsl
pop
push
jns
or
jne
xchg
and
in
cs
add
scas
fnstcw
clc
aad
call
mov
hlt
xchg
cli
ret
dec
jg
dec
mov
pop
fbld
popa
insl
lds
push
inc
out
pop
lods
mov
lret
mov
mov
outsl
shr
les
notb
out
add
into
lahf
lret
imul
gs
leave
sub
jmp
jo
lret
inc
call
cli
iret
or
dec
mov
out
cld
imul
push
jae
mov
repnz
mov
psadbw
pop
stos
xchg
sub
in
cmp
test
cmpsl
out
je
cs
xchg
int3
test
pop
dec
sbb
xor
xor
dec
int
push
dec
xchg
outsl
jp
fs
mov
jmp
inc
gs
inc
mov
jg
nopl
dec
pop
jmp
sub
sbb
lret
mov
rcrb
cmp
add
mov
pop
fwait
jbe
loope
ss
stc
mov
test
cs
insl
ret
mov
and
lahf
xor
mov
adc
mov
add
lods
pop
into
pop
cmp
xchg
hlt
mov
lret
xchg
negl
and
test
cmovb
xor
fucomp
pop
rorb
mov
fadd
test
jg
mov
jecxz
stos
in
imul
sbb
adc
les
push
iret
fmull
inc
and
xchg
out
jg
enter
cmc
dec
xor
adcb
add
mov
stc
and
pop
lock
mov
cwtl
pop
imul
mov
daa
scas
push
pop
rcrb
mov
mov
lock
xchg
lcall
and
and
xor
mov
andl
pop
fcomp
les
jg
lahf
test
out
pop
mov
mov
push
sti
inc
sarl
les
mov
or
aaa
jns
mov
sub
imul
pop
ds
mov
xchg
mov
add
mov
and
out
sub
xor
or
mov
jbe
fists
lea
sbb
movsl
out
mov
mov
push
mov
ret
lods
mov
clc
push
scas
fcomps
and
sbb
ja
in
dec
lcall
cltd
testb
dec
and
idiv
adc
popf
ja
and
cmovbe
xor
inc
push
cltd
pop
mov
imul
inc
addr16
xchg
xchg
adc
mov
adc
mov
das
inc
push
orb
inc
push
fimuls
clc
mov
push
mov
loopne
and
lods
jp
xchg
push
mov
push
std
dec
lret
xchg
mov
jo
pushf
mov
mov
dec
or
test
dec
in
lods
fs
jp
repz
mov
adc
shll
or
in
adc
or
mov
sbb
test
das
lods
lcall
popf
mov
xchg
push
mov
cmp
inc
mov
nop
mov
push
mov
jns
jne
incb
sub
ret
lret
lea
movsb
or
ja
dec
push
sbb
mov
pushf
cmp
inc
das
pop
sub
xor
adc
int3
and
xchg
rorb
in
nop
sub
clc
cli
sti
inc
and
xchg
in
cmpsb
repz
lods
jno
les
aaa
pop
mov
stc
push
xchg
mov
insl
push
cmpsl
add
dec
ret
sbb
scas
cmp
je
xchg
xchg
mov
pop
xchg
ds
and
sub
mov
jb
pop
insl
mov
lret
xchg
sub
test
mov
lock
dec
jecxz
cmp
repz
sahf
pushf
dec
xchg
or
mov
out
mov
mov
insl
mov
mov
push
cmpsb
in
mov
mov
add
fisttpl
mov
or
fwait
sub
pusha
cmpsl
push
mov
add
push
jb
jbe
inc
and
xchg
xchg
cltd
jmp
mov
mov
inc
jl
daa
push
and
cmp
inc
out
jmp
mov
pop
push
jns
xchg
mov
push
out
dec
aad
push
xor
inc
xor
xchg
sub
test
testb
loopne
mov
ret
cmp
and
inc
sub
daa
inc
gs
addl
mov
fiaddl
repz
iret
ret
ds
adc
pop
stos
and
fwait
or
pop
stos
test
add
inc
pop
xor
movsl
sub
data16
mov
dec
ljmp
pop
jnp
pushf
int
pushf
add
idivl
rcll
stos
push
imul
pop
movsl
jp
sbb
out
cmp
adc
sbb
int3
xor
mov
ljmp
popa
ret
fnstenv
ret
pushf
or
inc
xchg
clc
xchg
cmp
mulb
xlat
stos
mov
sbb
push
int
fwait
or
fwait
dec
mov
ret
adcl
jno
pop
sub
push
pop
loopnew
pop
or
mov
movhps
or
lret
mov
in
add
dec
insl
and
dec
mov
pop
fstpt
lea
fisttps
adc
daa
or
adc
movsb
sbb
mov
insl
mull
loopne
dec
int3
lret
dec
test
xor
call
ret
scas
outsl
dec
and
fwait
sub
mov
mov
inc
xlat
lret
pop
in
gs
pop
stos
aad
dec
push
add
out
sarl
lahf
pusha
sbb
sarb
mov
pop
shlb
movups
mov
cmpsl
imull
aas
jb
dec
mov
test
fmul
loopne
gs
in
jl
into
fisttps
pop
or
push
into
mov
nop
mov
mov
jnp
mov
dec
sarb
stc
sub
sbbl
mov
pop
loop
icebp
push
or
cli
push
sub
and
mov
in
xor
lahf
mov
out
and
pop
push
or
rolb
roll
addr16
lahf
dec
mov
lret
mov
inc
xor
xor
pop
adc
adc
xchg
push
cmovnp
jb
movsl
testb
stc
mov
lret
mov
movsl
aaa
lea
push
or
out
mov
inc
xchg
lret
xor
pop
loope
rcrl
rol
mov
and
push
mov
mov
cmpsb
xchg
shrl
adc
add
mov
push
aam
fistps
dec
mov
xchg
mov
inc
sbb
and
int3
jno
and
and
jle
xor
fcmovb
enter
sub
sbb
test
lahf
and
notb
add
lcall
xchg
ja
add
jbe
mov
xor
nop
rorb
movsl
lret
add
push
scas
testb
aas
cmc
dec
and
icebp
cltd
dec
mov
popf
mov
add
inc
dec
mov
ret
fdivl
enter
repz
jae
in
sub
int3
in
push
ja
sub
dec
stos
push
nop
dec
mov
fcomi
cmp
cli
jecxz
adc
inc
les
psubd
push
cmc
pop
outsb
popf
test
cmpsl
sbb
pop
out
imul
cltd
shr
repz
cli
xchg
insl
jecxz
mov
sahf
cmp
adc
xchg
and
sahf
out
sbb
jle
inc
mov
ret
ds
mov
fidivrs
dec
stc
loop
rorl
fwait
dec
insl
sti
je
std
pushf
xchg
push
mov
pop
cld
jp
sbbl
repnz
sub
aaa
imul
out
add
mov
sub
fcmove
jno
cmp
daa
loopne
push
dec
inc
ljmp
daa
xor
mov
js
ja
xchg
popa
xchg
fs
daa
clc
sub
jns
rcll
fldcw
push
lods
inc
ja
loop
pop
xchg
into
and
fsubrl
inc
xlat
movl
ljmp
sub
js
lret
dec
mov
test
mov
inc
or
inc
das
out
xchg
jno
lods
stc
outsl
int3
adc
ljmp
jge
jle
mov
shr
movl
xor
les
je
cmpsb
and
inc
lret
sub
lds
test
fstl
adc
lds
dec
test
add
mov
repnz
pushf
sbb
pop
fdivs
adc
shll
movsb
lret
xor
sbbb
pop
icebp
aas
icebp
fwait
inc
and
stos
dec
fdivl
shl
cmp
sub
lods
sub
push
lret
fs
ss
inc
push
popf
inc
rol
xchg
pop
loop
mov
ss
loop
inc
sahf
xor
add
lds
xor
std
mov
mov
repz
lds
cmpb
cli
rcrb
mov
sub
faddl
testb
js
adc
jbe
sti
sub
jbe
stos
pop
dec
ljmp
xchg
mov
pop
sbbb
rorb
pop
int
loop
jno
xchg
jl
hlt
icebp
mov
bound
dec
mull
jl
xchg
leave
ret
push
movsl
repnz
clc
adc
dec
jecxz
pop
in
std
push
fsub
movsb
imul
adc
push
in
loop
addr16
fsts
sti
jne
loope
push
dec
clc
and
jp
adc
mov
les
jecxz
xchg
les
cmp
xchg
loope
scas
repz
adc
ss
leave
leave
insb
inc
ljmp
pop
mov
out
jle
mov
xchg
arpl
decl
mov
inc
outsb
lret
mov
mov
sbb
and
cmp
rol
cmp
push
daa
sub
xor
or
sub
mov
mov
cmp
or
aaa
inc
aaa
pop
mov
jecxz
imulb
call
pusha
sbb
cltd
in
push
adc
mov
lret
ss
iret
in
addr16
mov
loopne
in
int3
xor
ds
xor
movsb
cli
ja
icebp
adc
push
ljmp
popa
adc
jno
mov
scas
xor
mov
add
mov
idivb
ret
push
jbe
shrl
cmp
xchg
add
imulb
mov
pop
inc
loop
xlat
dec
xchg
movsb
aam
ss
inc
sarl
jle
lret
sub
xchg
pop
popa
pop
pop
jo
dec
mov
mov
add
jp
sbb
les
push
arpl
dec
je
insl
lock
jne
ss
bound
mov
jg
mov
sbb
test
subl
add
aam
pop
cmp
jmp
cmp
sbb
jl
xorb
in
add
popf
mov
mov
mov
jecxz
add
push
scas
mov
xor
push
pop
cmp
lock
inc
imul
cs
ja
sarb
cmp
stos
fwait
in
adc
pop
call
push
xchg
fldenv
mov
test
pop
stos
and
in
jl
or
xor
aaa
mov
mov
sub
repz
and
inc
nop
subl
imul
sbbl
add
or
fsubs
xor
ds
lcall
adc
mov
pushf
jb
outsl
push
jbe
insl
scas
out
or
aad
mov
cmp
and
and
add
xor
scas
inc
fdivrl
subl
add
and
cmpsb
imul
or
xchg
frstor
sub
popa
or
mov
cmpsb
ss
adc
mov
sbb
fsubs
add
add
popf
cmp
popa
jae
inc
mov
push
and
dec
lea
mov
insl
cmc
inc
jmp
push
es
cltd
push
ds
cmp
lock
adc
js
scas
icebp
dec
test
ljmp
aas
or
inc
cmp
test
aam
scas
or
xchg
cmp
jge
in
jae
mov
scas
lock
pop
jb
stc
ja
mov
sbb
add
jmp
xchg
gs
cmp
mov
in
lods
mov
dec
push
mov
jno
mov
mov
addb
adc
inc
test
int
repz
out
sbb
int
outsl
xchg
lret
xlat
mov
ljmp
sbb
test
popf
or
mov
iret
pop
ljmp
jg
loop
add
out
inc
mov
push
loopne
arpl
cwtl
in
hlt
cmpsb
inc
add
testl
pop
fidivrl
call
xor
imul
jg
fnstsw
cmpsb
loopne
ja
fsubp
cld
dec
sub
inc
in
fs
inc
push
jmp
fnstcw
ds
shl
mov
pop
rcl
pop
sub
sbb
push
cmp
mov
sahf
mov
stc
inc
pop
dec
cmpsb
jl
mov
fldcw
addr16
cltd
movsb
loop
mov
or
mov
sahf
cmp
mov
popf
push
sub
addr16
ljmp
idivl
scas
test
jbe
xor
push
frstor
movsb
mov
mulb
pushf
iret
dec
cmc
cmp
lock
or
mov
iret
cli
js
movsl
outsl
stc
dec
cmp
mov
rcr
popf
and
int3
in
add
inc
call
sbb
fld
pusha
lcall
and
push
enter
mov
inc
jno
daa
shll
test
leave
loope
hlt
jg
adc
push
and
mov
inc
in
hlt
mov
adc
push
push
js
fwait
cmpsl
stos
xchg
in
mov
xor
hlt
jno
stos
je
movsl
or
aaa
inc
std
orl
test
mov
jp
pusha
jno
or
pushf
data16
jp
xchg
pushf
fstpl
cmp
sub
inc
xorl
jmp
imul
loopne
movsb
repz
xchg
adc
xorb
sub
pop
mov
mov
xor
or
mov
pop
arpl
mov
push
and
push
pushf
sbb
in
push
dec
ret
xor
cld
mov
stc
std
out
std
leave
sarb
hlt
dec
cmpsb
leave
pop
aas
notl
cld
and
add
cmp
cs
dec
cmpsl
movsl
cmp
xchg
jl
jno
cmp
nop
inc
int
xchg
jne
push
jg
mov
out
and
push
xchg
mov
pop
dec
pop
pop
xchg
sbb
fs
xchg
adc
mov
and
cmc
imull
add
xor
inc
in
roll
pop
mov
mov
mov
loope
sbb
mov
push
or
movsl
cpuid
pusha
sbb
lds
cmp
loope
daa
add
mov
xor
fs
xchg
stc
sub
mov
sahf
mov
push
sbb
fildl
iret
push
add
pop
cli
jg
xlat
fisubl
mov
into
enter
das
xor
xchg
pop
sti
mov
dec
andb
dec
lcall
push
push
dec
loope
insl
out
popa
ss
fwait
dec
push
adc
inc
scas
arpl
jl
stc
jl
xchg
or
or
and
mov
mov
add
push
popa
ja
jle
fwait
mov
cmp
sbb
loop
pop
imull
vpmacssww
sbb
mov
sbb
cmpsl
sub
orb
jbe
repnz
jne
mov
add
testl
cltd
repnz
bound
sbb
jle
lods
xchg
xor
pop
test
imul
dec
adc
das
insb
nop
sbb
cltd
repnz
adc
cli
or
into
pusha
mov
repz
nop
imul
mov
lahf
aaa
mov
sti
and
in
xor
jp
aad
fldcw
jno
fistpll
sbb
sahf
jecxz
mov
loop
push
daa
mov
xchg
imul
cld
ja
jge
xchg
inc
xchg
mov
jl
mov
fbld
pop
xor
fidivs
into
insb
jmp
mov
jbe,pt
pushf
jmp
in
add
aaa
out
rorb
rorb
cmpsb
out
bound
aaa
icebp
sub
jmp
jp
int
lea
cmp
mov
dec
push
jb
add
xor
loope
sub
movq
dec
cmc
lahf
call
clc
jns
cmpsl
imul
mov
test
jne
xlat
addr16
or
xchg
mov
push
xchg
add
outsb
cmpsb
add
lcall
add
sub
mov
mov
icebp
pop
fnstcw
push
stos
ja
fldcw
pop
jb
test
jns
pop
mov
cmp
and
sbb
or
rorl
and
jmpw
icebp
fcmovnu
outsb
push
xchg
sbb
inc
xor
ficompl
or
xchg
outsb
sti
dec
xor
inc
push
xor
inc
sbb
rorb
inc
repnz
es
push
xchg
mov
xchg
insl
mov
or
ret
adc
adc
mov
int3
repz
mov
pop
aaa
call
and
daa
mov
aam
sarl
or
popf
xor
rolb
xlat
daa
out
pop
mov
test
int3
mov
lea
rcrb
or
xor
ljmp
inc
and
mov
stc
xorl
inc
imul
lods
push
pusha
arpl
shl
mov
sahf
xchg
je
and
xor
ss
cmpsb
int3
test
cwtl
jb
stos
aas
push
insb
jb
bound
out
aas
mov
lret
jge
xorb
ret
mov
jb
imul
xor
das
repz
add
adc
push
mov
scas
xor
mov
push
sbb
jle,pn
movsl
mov
mov
call
xchg
jmp
icebp
ds
push
mov
lods
mov
inc
pop
adc
int
mov
push
scas
sbb
pop
movsb
ret
imul
mov
and
pop
cmp
test
push
or
and
fsubs
pop
sub
gs
stc
dec
pop
adc
pop
mov
push
lahf
gs
dec
loopne
push
inc
pop
push
out
add
std
xchg
or
fdivs
xlat
fsincos
movsb
xchg
out
mov
jge
ss
fildl
push
xor
stc
inc
rolb
sahf
cmc
shr
mov
and
sbb
leave
cmpsl
das
add
pushf
rcl
fwait
lahf
js
mov
pop
or
push
mov
xor
and
lea
or
mov
cmp
pop
inc
pop
xor
ret
aaa
sbb
pop
push
ss
shrl
push
nop
mov
add
push
push
dec
lcall
js
pop
xchg
lds
cld
jns
mov
add
mov
jp
or
pop
leave
data16
mov
or
dec
push
sub
mov
push
fadds
insb
lods
sbb
cli
stos
in
mov
pop
inc
out
fnstsw
stc
pop
adc
push
mov
push
add
iret
aas
push
icebp
enter
in
enter
mov
sarb
lret
jae
js
push
mov
mov
loopne
adc
or
jle
cmp
add
mov
sbb
or
cld
or
shr
adc
fucomp
jecxz
jg
lea
arpl
push
inc
and
and
ret
aaa
cmpsl
mov
testl
push
and
je
xor
aaa
mov
sub
cli
inc
jne
test
outsl
loop
push
imul
ror
mov
outsl
or
mov
cs
sbb
aam
stos
adc
mov
pop
mov
aad
js
pushf
sbb
lcall
add
jb
add
stos
xchg
dec
fwait
xor
sub
addr16
xchg
and
mov
dec
imul
lock
add
xor
cmp
lods
out
outsl
push
or
movsb
bound
clc
std
out
hlt
clc
cmc
push
out
jo
out
call
cs
icebp
push
pop
mov
add
xor
xor
adc
iret
scas
ljmp
rclb
addr16
dec
test
xor
adc
or
outsl
sbb
jnp
mov
pop
pop
mov
pop
pop
push
outsl
jecxz
jle
cmp
push
aaa
dec
push
mov
push
insl
cmp
xchg
jno
add
push
push
call
mov
push
not
data16
stos
push
lahf
inc
sub
and
fnsave
sub
sarl
cmovge
fs
sbb
and
fnstcw
ss
cmp
call
pop
sbb
sub
or
insl
inc
test
jo
mov
add
pop
mov
repz
popf
pop
sub
mov
pop
inc
int3
lret
and
or
repz
cmp
das
mov
je
cmp
loop
or
pop
pavgb
stc
jne
adc
div
loope
sub
push
cmpsl
dec
xchg
mov
lretw
mov
push
pop
dec
and
hlt
lock
shrl
lahf
mov
fwait
mov
add
roll
jbe
pop
pop
repnz
mov
mov
lods
or
inc
repnz
popf
adc
icebp
sti
mov
mov
mov
sbb
aad
into
xor
push
xchg
imul
jne
movsb
int
cltd
rorb
fst
repz
in
loope
cmc
or
inc
aaa
push
and
lods
popa
add
shll
pushf
add
jge
js
push
popf
int3
dec
inc
xor
dec
stos
pop
mov
pop
stos
sub
test
push
loopne
dec
and
mov
mov
jmp
and
dec
cwtl
xchg
call
fldl
push
xor
push
cli
movsb
inc
inc
out
popf
add
dec
dec
push
das
dec
sbb
clc
jno
pop
pushf
cmp
repz
imul
jb,pt
test
out
xorl
in
scas
push
mov
insl
push
pop
outsb
rolb
or
idivb
sub
cmp
xor
jno
movsb
xchg
test
jl
sbb
clc
hlt
xchg
jbe
xor
or
inc
xor
aas
ret
jl
and
into
push
loopne
movsb
sub
pop
add
sahf
lods
inc
addr16
pusha
das
hlt
lcall
rcrl
stos
jl
insl
idivb
pop
jno
pop
aam
xchg
sahf
insl
int3
mov
out
push
or
adc
jb,pn
std
iret
and
add
pop
pop
iret
inc
pop
repz
loop
cmp
js
popa
shlb
xchg
subb
jp
mov
mov
lret
ss
sub
inc
pop
loop
mov
dec
stc
inc
pop
sbb
adc
or
sbb
movsb
inc
jnp
inc
sub
rclb
mov
jbe
popa
xor
shrb
push
and
push
aaa
dec
xchg
jnp
xchg
repnz
popa
insl
lods
incl
cli
dec
dec
xor
push
in
rcrl
xchg
ficoml
dec
iret
lds
xor
pusha
fwait
dec
cmpsl
inc
sub
cmpsl
pop
js
sub
sub
in
push
cmp
loop
mov
pop
pusha
lods
in
das
push
icebp
lret
mov
or
lods
ja
loop
xor
jecxz
pop
lds
sub
or
lcall
mov
movsw
mov
test
stos
cwtl
in
dec
scas
xchg
scas
loop
mov
stos
das
jnp
or
imul
lea
fs
adc
push
mov
in
adc
push
cmp
shlb
sbb
sbb
pop
mov
dec
adc
out
push
test
sbbl
and
push
cld
xlat
cmp
je
mov
loop
push
adc
xchg
pop
lret
rcrb
lea
jge
push
mov
push
fists
push
jmp
shlb
add
inc
arpl
outsb
ret
add
adc
or
jp
sbb
xor
push
push
repz
adc
mov
dec
xchg
bound
push
mov
sub
jecxz
jns
cltd
orl
cmc
popa
pop
ret
jmp
pusha
mov
mov
sbb
jbe
aad
fisubl
mov
into
inc
shr
push
mov
popa
mov
in
divps
imul
cltd
push
inc
or
clc
xor
sbb
push
pop
in
in
mov
push
jg
hlt
mov
das
mov
enter
adc
adc
out
push
out
mov
mov
aas
mov
jb
push
push
mov
mov
int
jp
mov
stc
lret
call
int3
sti
fs
xor
sbb
pop
fcmovb
push
jmp
add
sbb
inc
add
sti
sahf
cmp
cmp
iret
scas
pop
cli
add
cld
ficoml
add
add
jp
in
xchg
cmp
push
mov
int
fildl
push
bswap
ds
pop
outsb
cld
xchg
mov
mov
shrb
fxch
int
mov
adc
out
dec
xchg
jg
fadd
imulb
test
das
clc
rcll
add
push
aas
js
push
in
push
fisubrs
jnp
inc
push
and
int3
mov
xchg
mov
fwait
jns
mov
fisubrs
repz
stc
dec
popf
dec
stc
sub
test
cmc
sti
movsb
fs
sbb
data16
testb
mov
adc
and
inc
pop
jp
xor
cmp
push
xor
scas
sub
insb
nop
clc
int
lock
fsubr
cs
mov
pushf
pop
cmp
push
movsl
push
jno
ds
in
movsl
int
mov
addl
add
aaa
sbb
mov
cmc
lods
shrl
or
pop
dec
sub
clc
mov
lahf
fmull
adc
pop
mov
std
cmp
pop
not
xor
jns
sub
dec
sub
push
scas
xchg
insb
pop
cmp
adc
jnp
aad
lcall
sbb
pop
ss
mov
mov
mov
cmc
adc
add
popf
mov
sbb
dec
inc
pop
aas
mov
jl
jmp
testb
lods
jnp
cli
out
iret
movsb
fnstsw
mov
je
xchg
jecxz
lock
mov
push
add
aas
lods
sub
mov
adc
inc
out
pop
xor
dec
adc
paddb
test
hlt
movl
mov
loopne
das
add
mov
pop
leave
mov
std
fwait
imul
ret
and
sbb
pop
popf
scas
mov
arpl
lea
int
xchg
cli
scas
ja
rolb
pop
xchg
lods
jae
pop
cltd
ljmp
adc
test
pusha
leave
xchg
dec
and
push
dec
fstpl
sub
cmpsl
jmp
pop
test
mov
sahf
dec
data16
icebp
test
out
mov
ljmp
setns
popf
loopne
les
movsb
insb
mov
xchg
adc
xor
mov
jmp
xchg
call
or
or
xor
jg
rcrb
mov
pop
rcrl
or
test
inc
xchg
push
fstps
jbe
out
jecxz
movntq
out
int
repz
testl
icebp
jo
test
inc
nop
mov
inc
cld
cmp
jbe
dec
mov
pop
hlt
and
add
jle
sub
and
jae
xchg
pop
gs
cmp
sahf
fldl
pop
sbbl
iret
ss
cwtl
loope
dec
jg
in
scas
call
xor
mov
cs
or
es
add
pop
in
xchg
jno
or
dec
dec
sub
movsl
push
sub
sub
push
mov
cmp
cld
pop
ldmxcsr
xor
aam
sbb
xchg
dec
jnp
jne
addr16
inc
je
lock
call
stc
outsl
mov
dec
lods
loopne
mov
pop
mov
rclb
outsb
in
push
cli
or
sarl
sbb
cs
xor
rcrl
imul
outsb
lea
jmp
add
pushf
add
or
push
loope
ja
push
cmp
aas
jo
jecxz
inc
nop
sar
cmp
xor
push
cli
iret
shll
aas
push
inc
sti
jl
or
lods
sbb
mov
xlat
sbb
xor
shlb
push
mov
xchg
jbe
stc
pusha
repz
pop
sub
push
clc
mov
pop
xchg
fwait
sbb
inc
in
rol
cli
mov
jo
fchs
mov
loop
cld
es
cmpsl
sarl
dec
mov
mov
mov
sub
ret
or
lds
in
ljmp
pop
adc
or
enter
sub
les
fnsave
push
push
lock
fisttpl
fmuls
fisttpl
sub
adc
mov
idivl
ss
sbb
or
and
addr16
sbb
shrl
lods
mov
aas
jge
cmp
repz
and
mulb
or
xchg
scas
push
mov
xchg
and
fldt
jo
mov
pop
pop
dec
jo
jne
idivl
xlat
pop
les
push
mov
sub
pop
in
xor
notl
fidivrl
cmp
mov
test
adc
sti
xor
aam
mov
popa
es
lods
mov
mov
imul
dec
push
js
lea
sar
fidivrl
push
rclb
andb
and
pusha
xor
cli
cmp
dec
mov
rcrb
mov
pop
imul
fwait
test
dec
call
inc
xchg
push
je
push
inc
lock
cmpb
test
push
dec
fldl
in
mov
aam
mov
dec
aam
pop
loope
jle
scas
mov
insl
jg
sbb
sbb
ret
dec
jl
popf
jnp
mov
stc
sub
scas
or
mov
push
add
jl
stos
sbb
lahf
cli
ja
push
mov
sub
xchg
or
sbb
sarb
cmp
shl
push
lret
fdivs
mov
mov
lds
clc
cli
icebp
or
sbb
cmc
inc
jecxz
cmp
pop
sbb
fwait
notb
lcall
mov
mov
and
dec
xchg
aam
stc
cltd
in
mov
sbb
scas
and
dec
outsl
adc
outsl
aaa
mov
xchg
enter
add
sbb
divl
push
push
xor
lods
mov
and
inc
add
imul
mov
jo
cld
flds
dec
rorb
sub
dec
push
cltd
cmc
lret
cltd
fucomp
test
and
bound
adc
sbb
or
adc
sbb
add
sbb
xchg
xchg
mov
or
mov
popf
mov
sub
mov
inc
sbb
inc
mov
push
je
pop
imul
imul
leave
sbb
push
fcmovne
mov
jbe
cltd
cmc
dec
xchg
js
jle
pop
jp
fwait
jb
sbb
scas
in
sbb
ret
and
lods
pop
fldenv
lahf
fld
push
es
lret
ljmp
xor
adc
push
and
mov
jne
icebp
xor
pop
inc
lahf
fs
mov
inc
repnz
mov
ret
sbbl
cld
jmp
adc
jmp
push
in
jmp
fdivp
push
mov
clc
aam
aaa
jo
fimull
sbb
dec
scas
push
push
in
repz
cmp
push
add
pop
adc
xchg
mov
cli
xlat
mov
mov
cmp
xchg
dec
dec
xchg
add
xchg
or
mov
sub
pusha
lock
scas
test
push
or
in
scas
jg
fistpl
mov
lds
cli
adc
out
lea
inc
stc
push
xchg
add
repnz
jge
push
fbld
lods
mov
rcll
add
xchg
add
test
xor
add
push
cli
in
js
lahf
call
mov
clc
adc
sbb
ss
xchg
pop
mov
mov
rclb
push
sub
mov
pop
xchg
jns
dec
test
stos
fcmovnb
xchg
cld
fdiv
sti
sarl
fldenv
imul
scas
inc
inc
pop
daa
ret
jmp
xor
add
add
jp
pop
sub
dec
push
aas
aaa
les
into
mov
out
in
inc
lock
mov
push
sti
mov
ljmp
rdtsc
data16
inc
int3
leave
stc
dec
fidivrs
stc
dec
je
mov
pop
lahf
adcb
push
enter
cli
mov
cmpsl
stc
test
adc
in
jnp
xchg
mov
and
mov
jecxz
mov
fs
mov
inc
add
adc
sub
mull
xchg
xor
xor
push
popa
leave
movsb
push
xor
mov
std
jb
mov
ds
imul
jp
cmc
data16
and
xacquire
pop
sbb
stc
call
daa
test
icebp
setbe
xchg
repnz
xor
adc
addb
adc
cmp
iret
iret
ret
pop
add
mov
sbb
dec
pusha
enter
pop
sbb
jecxz
in
test
out
sbb
popa
push
or
stc
stos
jl
lahf
mov
and
sbb
adc
jbe
xchg
movsb
inc
push
jo
mov
add
jb
sub
adc
out
and
inc
jne
and
lret
cmp
mov
pusha
sub
imul
inc
xor
mov
das
mov
shlb
movsb
pop
push
inc
push
add
mulb
adc
pop
jmp
cmp
or
push
xor
addb
scas
and
mov
aas
mov
pop
test
flds
and
sbb
ss
aas
xlat
test
adc
mov
adc
stos
and
dec
mov
mov
adc
sub
inc
cld
cmp
into
lahf
scas
jmp
outsb
inc
sub
add
sub
rorl
jmp
arpl
sahf
hlt
aas
inc
xchg
sbb
sub
or
jns
xlat
daa
push
ret
in
or
das
push
mov
inc
jle
dec
dec
call
xchg
cmp
mov
test
adc
sub
xchg
cs
xchg
sahf
dec
adc
leave
ljmp
or
push
and
out
xchg
bound
fstpt
cmp
mov
sbb
mov
insl
mov
pop
dec
inc
xchg
fsubr
insb
imul
lods
rolb
int
dec
dec
test
or
jae
or
add
jne
push
fcmovnb
pop
and
sbb
push
jmp
lods
add
adc
imul
sbb
adc
loope
sbb
cli
sub
xchg
xor
sbb
add
ret
call
xor
xor
cmpsb
pop
add
xchg
rcr
scas
xchg
cmp
xor
shl
pop
fistl
iret
xor
inc
stc
push
in
loopne
push
push
lea
mov
or
in
fwait
push
pop
cmpsl
pop
das
xchg
arpl
cmc
ljmp
fistl
sbb
or
fistpll
in
sgdtl
jg
xor
adc
xor
xor
rolb
dec
adc
add
and
inc
push
add
and
ret
mulb
ret
jb
rolb
sub
xor
call
rcll
push
mov
cmp
fwait
pop
xor
mov
fs
push
das
test
inc
xor
push
dec
cmp
call
test
jne
jmp
cld
jnp
sub
and
dec
mov
inc
mov
divb
out
dec
add
adc
nop
mov
cmp
mov
jmp
repnz
cmp
mov
cmp
cmp
hlt
cwtl
std
sahf
ljmp
jbe
stos
in
je
in
pop
repz
in
cmpsl
inc
cmp
xchg
stos
les
dec
jle,pn
mov
cmpsl
shr
test
imul
add
fsubp
push
dec
popa
icebp
xchg
testb
mul
stc
add
dec
jmp
mov
mov
lret
and
jmp
xor
loope
scas
sbb
ret
cmp
outsl
adc
or
push
arpl
loop
fs
adcb
xchg
mov
jge
mov
mov
xor
or
addr16
stc
cmp
mov
adc
lods
dec
xor
inc
sbb
movsb
jae
inc
jge
jge
fs
add
das
mov
push
sub
adc
lods
jae
mov
mov
sub
pop
mov
cmp
cmc
testb
in
mov
jle
adc
aam
leave
and
xor
sti
push
fmull
cs
inc
pop
js
dec
cmpl
imul
and
test
xlat
repz
mov
and
shrb
sbb
pop
add
or
dec
add
mov
lock
sub
mov
jl
addb
or
into
ret
lods
shrb
push
outsl
loopne
push
insb
and
in
pop
xchg
or
es
mov
popf
scas
cmp
imul
xor
mov
fmull
clc
lods
sub
sbb
jge
pminub
out
rorl
dec
dec
sub
xchg
mov
test
test
jmp
mov
or
mov
rcr
aas
cmp
stos
add
popa
loop
repnz
adc
jmp
mov
aaa
nop
mov
mov
and
rclb
movsb
xchg
jne
repnz
xchg
sbb
push
mov
je
push
cmp
repz
lahf
push
ja
mov
add
adc
mov
aaa
jbe
jge
jp
call
inc
test
or
cmp
xor
sbb
mov
sbb
mov
adc
cwtl
leave
pop
mov
idiv
push
adc
or
inc
and
or
jmp
in
mov
subb
and
or
das
pop
or
xchg
pop
insl
and
xor
dec
pop
iret
das
hlt
testb
push
stc
dec
outsl
mov
dec
xchg
xor
jge
add
jmp
mov
in
scas
imul
movsl
rcll
lahf
pop
cmp
sbb
rcrl
sbb
mov
sbb
pop
adc
data16
pop
mov
mov
popa
sub
cs
lds
xlat
loopne
mov
mov
pusha
and
cmpsl
cmp
sbb
adc
xchg
push
mov
and
out
inc
mov
sbb
or
mov
sbb
fstpl
test
outsl
out
shlb
fnstcw
stc
pop
lock
in
aas
imull
cltd
lret
xor
xchg
aas
in
cmp
in
xchg
in
hlt
lret
in
pop
cltd
movsl
int3
in
leave
sbb
push
pop
mov
jae
sbb
mov
iret
jnp
dec
pop
sub
or
nop
jl
add
lods
shl
fnstenv
std
jge
push
and
xchg
cmp
mov
and
cld
scas
xchg
int
ja
mov
testb
popa
lock
or
dec
sbbb
lret
adc
icebp
mov
jno
scas
or
push
mov
lahf
cmp
aam
mov
outsl
xchg
add
jb
ds
cmp
fbstp
imul
std
divl
adc
pop
push
out
ljmp
push
xor
int3
insl
xor
adcl
repz
push
inc
repz
dec
inc
or
cmc
pop
aad
and
and
push
leave
mov
mov
movsl
movsb
in
pop
fsts
or
cmpsb
pop
ds
pop
fldcw
sub
daa
pcmpeqd
and
adcb
push
add
xor
aaa
sti
mov
insl
stc
inc
xor
arpl
nop
mov
adc
and
dec
inc
repz
or
dec
subl
loop
mov
stos
cmp
xchg
mov
jns
movsl
jne
cs
mov
dec
mov
daa
leave
clc
jg
fisubl
add
shlb
cmp
push
mov
cltd
cmpsb
mov
sarl
pop
shrl
sub
mov
lods
hlt
fildll
jne
sbb
lods
decl
test
clc
inc
in
neg
iret
mov
lock
dec
dec
pop
jb
jp
add
les
mov
mov
mov
cmp
lods
cmovg
test
in
sbbl
adc
dec
xchg
and
movsb
add
jne
cmpsb
mov
push
add
leave
push
dec
mulb
leave
ret
imul
inc
int
add
mov
mov
jo
int
fsubrl
cs
out
or
push
cmpsb
sti
xchg
roll
sbb
nop
jle
and
pmaddwd
or
or
push
stos
dec
fsub
call
push
fidivl
loop
and
out
repnz
pusha
inc
or
pop
sbb
jnp
ljmp
in
and
mov
out
pop
mov
mov
repnz
dec
in
call
scas
and
repz
sbb
lret
and
cmp
aad
push
xchg
and
mov
aam
fs
hlt
or
sbb
dec
rclb
jno
dec
sbb
insb
lea
pop
lods
into
inc
push
cwtl
fwait
rclb
idivl
cltd
dec
push
clc
adc
jne
cmp
mov
scas
push
int
jg
mov
in
xlat
test
enter
adcl
dec
jle
pop
add
shrl
imul
xchg
push
or
xchg
sbb
dec
and
aas
fwait
push
js
dec
flds
dec
in
and
pusha
sbb
dec
adc
pusha
movsl
popa
cmp
cmp
lds
lods
sbb
xchg
mov
mov
testl
dec
fwait
shlb
fistpl
pop
outsl
daa
test
aas
test
lcall
mov
movsb
xor
fldenv
pop
cmp
mov
enter
mov
mov
xchg
lods
dec
js
sub
inc
es
adc
xchg
jns
insl
pushf
insl
jnp
les
shl
inc
jl
cmpsb
cmp
mov
out
xchg
push
gs
hlt
out
dec
pop
ret
es
xchg
dec
cwtl
lea
fsubr
outsl
lock
bound
fstpl
aad
jmp
mov
adc
push
xchg
or
shll
push
sub
subl
test
xor
mov
cmpxchg
push
and
or
call
out
and
jno
xchg
mov
rcll
popa
xchg
out
pop
xlat
ja
ret
ret
sbb
fs
in
mov
insl
out
push
add
pop
jb
adc
std
jns
insb
jge
in
pop
jno
dec
in
aad
movsb
pop
push
mov
xor
sbb
and
xor
or
and
or
lods
inc
hlt
mov
push
sbb
fisttps
jns
mov
cmpl
pusha
xchg
int
in
repnz
ds
jmp
xchg
fdivrl
or
jbe
or
mov
lods
xchg
push
fisubs
mov
shll
or
xor
and
mov
test
sbb
xlat
adc
pop
iret
cmp
into
push
mov
push
ficoml
cmovne
adc
mov
sarl
or
and
insb
shll
push
xlat
mov
sub
push
repnz
inc
push
ret
pop
xchg
push
sub
mov
ds
xchg
mov
fiadds
iret
sub
mov
mov
sub
test
sub
in
mov
jno
std
pop
xchg
int
sub
cmc
pop
sti
inc
dec
jbe
je
lret
jae
inc
mov
out
mov
test
out
jns
out
dec
fisttps
xor
jl
inc
pop
ret
dec
jl
nop
out
arpl
xor
xchg
jl
fiadds
jmp
stc
ret
mov
or
dec
xlat
mov
jge
in
xorl
or
pop
adc
xlat
xor
popa
addr16
sbb
fnstcw
ss
daa
inc
popf
out
ficomps
dec
or
push
xor
sub
adc
adc
scas
jnp
push
sbb
pop
rcll
cmc
adc
sbb
out
adc
fstpl
adc
call
cmp
mov
daa
inc
les
ficompl
mov
cmc
daa
test
in
mov
and
cmc
adc
pop
cwtl
fwait
out
and
push
mov
cmpsb
mov
mov
hlt
xor
int
cmpl
jl
add
dec
mov
jbe
mov
cmp
inc
stos
stos
imul
jmp
push
push
sbb
nop
sub
clc
pop
sbb
je
mov
popw
jmp
js
inc
sbb
dec
sbb
cwtl
and
xor
stos
clc
shll
lahf
push
pop
clc
fwait
fwait
push
out
xchg
or
lds
xchg
add
and
mov
and
lock
aad
cmp
sbb
stos
js
nop
or
std
add
or
cmp
int
xchg
in
dec
ret
push
or
jae
jns
xor
jne
movsb
mov
cmpsb
ss
icebp
jge
das
lahf
pop
pop
dec
jo
mov
lret
sbb
leave
loope
iret
sub
xor
cmp
in
mov
outsl
data16
dec
call
xchg
xchg
jge
mov
out
jmp
in
xlat
pop
xor
mov
dec
addl
push
push
adc
outsb
xorb
les
cmp
icebp
mov
or
ret
sbb
push
in
or
xchg
xlat
fwait
sti
jge
ja
rcll
lret
in
lret
add
sbb
mov
push
fdivrs
dec
fwait
insl
pcmpeqw
shrb
lock
test
push
das
cmp
ffree
push
xchg
push
lret
xor
fdiv
cmpsl
cli
into
stc
add
jle
push
mov
leave
sub
fdivrl
and
pop
loopne
shrl
xor
xchg
fs
push
rcr
fwait
and
ficoml
push
lods
mov
test
lahf
mov
cld
add
popa
inc
jae
or
adc
hlt
mov
xor
mov
inc
and
pusha
mov
or
pop
adc
sbb
pop
out
in
or
mov
out
fbld
xchg
loop
lret
lea
adcb
or
mov
out
sbb
rorl
in
mov
mov
push
test
xchg
mov
movsb
ret
call
cwtl
icebp
push
or
dec
outsb
icebp
sbb
test
or
sahf
mov
sbb
mov
xchg
jno
incb
adc
cmp
loope
fwait
and
sbb
or
test
ja
push
ffree
lret
adc
push
out
and
or
cmp
push
pop
sbb
push
inc
dec
outsl
mov
cwtl
or
push
xchg
sbb
aam
sub
repz
popf
mov
or
jne
or
pop
out
mov
jge
xchg
jns
scas
orb
nop
in
and
imul
cmp
jne
inc
or
sbb
pop
clc
sbb
out
mov
mov
xchg
cmpb
rcll
inc
push
push
mov
inc
arpl
shll
ret
or
adc
push
jo
inc
sub
out
xchg
daa
mov
jne
sbb
add
add
adc
inc
test
mov
xchg
push
push
push
or
lahf
adc
aad
or
jle
add
or
fisttpl
imul
popf
lock
push
adc
testl
jne
jl
repz
int
lock
or
dec
mov
sbb
mov
dec
daa
mov
xor
sbb
and
jno
mov
jae
adc
or
stos
cmpsl
imul
out
or
and
sub
fadds
mov
in
in
xchg
js
sbb
insb
fisttpl
mov
rorl
in
aaa
add
add
daa
sub
in
dec
cmp
xchg
push
stos
mov
xor
dec
push
push
fistl
lods
fidivrl
pop
dec
ficomps
idiv
xor
dec
or
dec
push
lret
jmp
xchg
add
mov
sarl
or
mov
adc
mov
mov
lods
or
mull
dec
jno
and
repnz
xchg
dec
adc
stos
notb
xchg
clc
pop
lds
fcomps
cmpsl
jbe
sti
xor
testl
pop
sar
add
mov
call
js
sub
je
sub
adc
pop
stos
lahf
push
fisubrs
adc
andb
adc
inc
cli
es
lahf
pop
out
push
ss
dec
nop
pop
insl
outsl
out
inc
or
loopne
add
mov
idivl
rorl
mov
jb
sbb
shlb
mov
xchg
icebp
mov
or
rcll
ss
lea
stos
scas
cs
mov
adc
in
xor
or
xchg
loope
mov
cmp
push
sahf
inc
mov
out
leave
mov
decb
push
push
adc
push
sti
mov
sti
mov
dec
mov
lcall
pop
das
in
in
inc
mov
xor
repz
jge
mov
jbe
popa
mov
shrb
das
xor
dec
fs
lahf
dec
cwtl
cmp
sub
xchg
cwtl
int
aad
push
mov
pop
cmpsl
test
ret
sub
outsb
dec
push
insb
das
outsb
rcll
push
xor
pop
inc
sub
lea
jge
mov
es
sub
add
push
dec
xor
jmp
pop
idiv
mov
mov
add
push
dec
or
jmp
add
arpl
inc
push
sbb
sub
xchg
xor
adc
rorl
popf
jbe
dec
pop
pushf
ljmp
fldcw
mov
cmp
scas
cli
mull
mov
cld
sbb
mov
mov
movsb
arpl
push
std
mov
xor
jg
fcmove
ljmp
stc
ljmp
and
fs
mov
addb
push
hlt
dec
pop
mov
xchg
in
out
int3
mov
loope
dec
or
push
adc
lods
push
nop
pop
adc
lea
loope
mov
es
inc
fdivl
xchg
inc
sbb
bound
jle
roll
mov
mov
insb
mov
and
dec
pop
fdivr
xor
jmp
sbb
cli
icebp
stos
lret
xchg
jo
or
pop
dec
iret
repnz
outsb
sub
lods
enter
or
xchg
ret
lock
inc
cld
mov
test
shrl
pop
sub
testl
test
outsl
and
shrl
cmp
pop
mov
fwait
pop
push
fs
mov
int
cmp
jp
shlb
loope
xor
shrl
lods
decl
sarb
pop
stos
or
out
adc
scas
add
mov
dec
out
dec
jle
fdivrl
jno
sbb
inc
and
nop
fisubrl
mov
fs
bound
adc
aas
jle
mov
mov
popa
lods
mov
mov
cmpsb
int
daa
xchg
and
sahf
and
mov
xor
pop
arpl
inc
jmp
push
dec
xor
ja
in
popf
push
push
out
out
shlb
cwtl
addl
sub
jns
pop
pop
sub
iret
mov
lods
call
or
cli
shll
sub
jo
cmp
jecxz
add
pop
dec
shrl
not
add
stos
pop
fdivrl
test
leave
clc
mov
jno
push
ret
xlat
jnp
xchg
out
loopne
push
add
rcll
mov
movq
or
or
inc
and
inc
cmp
jmp
add
gs
cmp
call
pop
sbb
fadd
loope
add
popa
mov
push
test
and
push
clc
or
xchg
call
nop
stos
jle
das
fisttpll
mov
xor
pop
jbe
cli
pop
sbbb
in
imul
insb
ljmp
lret
cs
imul
mov
lar
aam
jmp
sbb
movb
stc
sub
aam
ljmp
in
leave
lea
sbb
sarb
test
dec
cmpsb
jo
add
lock
gs
cmp
movsb
or
and
loope
mov
xor
mov
pop
dec
or
cmp
rorl
cld
imul
pop
into
sahf
mov
sub
ret
or
xlat
mov
loop
cmp
arpl
stc
mov
push
mov
push
clc
inc
lods
out
shll
cmp
jbe
loopne
jecxz
repz
insb
mov
loope
mov
fcompl
jae
sub
cmp
or
mov
or
mov
mov
loop
mov
outsb
fstpt
aad
xchg
xor
xchg
add
mov
jge
cmp
sub
pop
clc
xchg
ss
push
lret
lret
insl
xor
xor
insb
cmp
lcall
dec
test
inc
pop
in
out
xchg
cmpsl
inc
sbb
mov
or
inc
mov
into
test
mov
add
in
or
in
movsb
inc
push
dec
aad
mov
cmpsb
dec
mov
sub
scas
repnz
jnp
sbb
cmpl
mov
xorb
sbb
int3
fldenv
test
sbb
mov
push
and
cli
inc
jmp
dec
xchg
dec
subb
fucomip
push
sarb
sbbb
mov
outsl
cmp
jo
xlat
xchg
ret
sbb
inc
xor
cli
sub
inc
push
repnz
std
pop
call
outsb
ret
or
mov
adc
clc
bound
xor
fcmovb
cmp
xchg
mov
jmp
out
nop
xchg
mov
movsb
inc
fxch
cmpl
jp
cli
and
push
dec
mov
pushl
mov
fsubs
gs
pop
adc
jno
push
sbb
pop
mov
int
enter
adc
jecxz
xchg
lea
xor
shrl
jnp
cmp
jno
les
bound
sbb
lahf
andb
int
jae
mov
lret
or
push
jo
in
pop
negb
aad
xor
cmp
xchg
jg
jae
mov
and
adc
ret
adc
adc
add
rol
xor
push
fwait
dec
mov
push
adc
in
xchg
cmp
and
jnp
jmp
daa
inc
ss
pop
imul
adc
jb
pop
add
xchg
leave
inc
arpl
mov
pop
addl
or
loop
sahf
mov
repz
pop
mov
rorb
xlat
adc
lods
es
jl
ja
inc
mov
mov
rcl
xchg
push
test
scas
adc
negl
repz
in
insb
roll
add
and
lret
push
stos
pop
adc
sub
orb
aaa
sbb
loop
arpl
inc
ja
jecxz
int3
iret
xchg
mov
insl
and
inc
mov
lret
sub
out
xchg
ficomps
inc
orb
scas
dec
rorl
into
imul
lcall
cmc
fucom
cmc
mov
push
dec
xchg
jno
addr16
ret
inc
and
mov
ljmp
adc
xor
or
lock
stos
mov
pop
out
push
fsubrs
push
xchg
shll
dec
sub
idivb
adc
rorb
jmp
loope
nop
pop
and
lret
sub
inc
int3
and
cli
pop
les
sahf
popf
adc
lret
das
xchg
jge
lods
pop
hlt
xor
cmc
shr
mov
push
lret
nop
dec
in
push
mov
cli
popa
pop
lahf
sbb
insb
fimull
mov
jecxz
test
sahf
jns
add
mov
jns
cmp
fcomip
adc
and
dec
test
das
mov
xor
stc
loopne
or
fistpll
xchg
repnz
adc
pop
out
mov
mov
inc
or
xchg
aaa
mov
mov
ret
sbb
mov
into
sbb
cltd
sbbl
movswl
mov
pop
cld
xor
and
jge
movlps
adc
test
repnz
test
popf
mov
hlt
or
inc
repz
fbstp
xbegin
pop
inc
cmp
mov
imul
daa
xchg
andl
int
add
pop
xor
pop
jns
popf
xorb
test
mov
sub
in
idivb
sub
inc
test
adc
test
mov
xor
and
cmp
or
mov
push
or
mov
dec
lods
sahf
cwtl
ficoms
cmp
pop
mov
shlb
iret
les
push
insb
cltd
mov
data16
aam
and
ret
mov
and
jg
dec
xor
aad
iret
mov
lods
mov
orl
fs
lea
pop
jp
aas
aaa
mov
lock
outsl
scas
xchg
dec
cwtl
xlat
xorb
sbb
popa
ja
dec
and
inc
lret
pop
push
adc
cli
aad
adc
ss
jns
sub
cmp
xlat
iret
dec
pop
sbb
shr
mov
leave
and
addr16
iret
jo
xchg
push
mov
jl
scas
inc
mov
aad
repz
test
pop
xchg
inc
mov
xchg
jp
push
mov
jno
sub
adc
call
enter
lahf
jecxz
adc
sub
outsl
pop
xchg
mov
xor
dec
dec
dec
aam
int3
mov
push
pop
or
push
mov
inc
bound
add
enter
xor
mov
adc
arpl
js
inc
es
add
or
test
out
mov
mov
xlat
scas
sub
das
outsl
jl
cld
movsb
push
xstore-rng
cmpsl
inc
or
jno
add
jp
inc
jb
and
js
ds
movsl
push
repnz
cmp
stc
jns
xchg
int
mov
lods
push
lods
inc
ret
scas
lret
test
add
xor
cld
pusha
pop
loopne
add
js
cli
push
push
arpl
mov
inc
bound
dec
call
jo
add
in
and
xchg
fwait
aad
fildll
xorb
cmp
sbb
sub
ret
push
cld
jg
mov
pop
sub
pop
pop
push
iret
sbb
into
sub
push
test
in
ret
pop
loope
out
sbb
cld
push
jne
jb
popf
push
add
lcall
push
push
jecxz
pusha
pop
mov
adc
or
stos
call
and
add
and
jmp
cld
cs
rcrb
xor
xchg
aaa
xchg
jmp
cltd
test
adc
outsb
jbe
filds
call
cmpsl
jp
mov
add
pusha
repz
jne
xchg
fstl
or
xlat
xlat
mov
sub
mov
sahf
adc
movl
mov
notb
mov
adc
insb
pusha
insb
mov
cmp
loop
icebp
push
in
movsl
scas
divl
nop
sbb
lahf
decb
mov
test
fisttpl
mov
and
sbb
xor
stc
cmpsb
shr
in
push
cmp
lods
pop
add
sub
imul
fwait
sbb
push
sub
ds
lods
sub
int3
sbb
inc
inc
sub
std
cmp
jnp
enter
lods
pop
dec
xor
mov
xchg
inc
stos
push
nop
adc
jecxz
loop
pop
imul
adc
or
outsb
idivb
sbb
or
addr16
mov
mov
mov
mov
mov
test
mov
adc
cmp
lret
orb
aam
shlb
movsl
xchg
in
insl
cmc
scas
test
test
into
out
fwait
mov
cmp
popa
in
adc
in
rcrl
or
inc
fmull
andb
fldenv
sbb
scas
jns
leave
pop
jb
jae
sahf
cli
loopne
enter
or
mov
aam
or
inc
addr16
pusha
js
pop
add
xlat
xor
and
xor
push
sub
inc
fists
add
dec
adc
sbb
sahf
add
pop
lahf
les
movsl
dec
pushf
out
mov
pop
andb
mov
jo
dec
mov
cld
jg
ret
xchg
inc
lahf
mov
xlat
data16
js
mov
xchg
lcall
iret
in
push
loope
mov
nop
mov
ss
out
adc
es
jo
pop
mov
cwtl
cmp
sbb
in
adc
pop
sub
fistl
push
daa
xor
jg
mov
loope
mov
jbe
test
and
pop
jb
lock
outsl
data16
pushf
cmp
cmpb
push
ss
mulb
xchg
xor
lea
lods
insb
push
mov
in
sub
jg
jnp
sbb
idiv
and
int
or
daa
cmp
cltd
xor
add
cmpsl
pop
mov
mov
mov
or
xor
cmp
ret
shl
jae
jmp
pop
add
adc
mov
mov
sbb
clc
mov
push
addr16
inc
imull
icebp
dec
in
dec
mov
insl
mov
lea
in
out
push
or
pop
cmp
or
movsb
testb
ds
sub
das
cmp
enter
mov
mov
inc
or
or
out
add
pop
leave
clc
push
pop
aaa
add
and
xchg
leave
stc
xchg
sti
in
mov
sbb
dec
rcrl
shl
push
mov
inc
ss
push
adc
add
adc
xchg
bound
pop
or
dec
jge
fcoms
or
in
mov
xor
push
ds
xlat
pop
pop
sbb
fs
mov
std
or
fdivrl
mov
jp
sbb
andb
test
fistl
push
fiadds
pop
fstps
dec
or
adc
das
mov
sbb
dec
aad
fcmove
out
cs
into
push
iret
xor
adc
mov
inc
jp
loop
and
mov
cs
sarl
add
rorb
xchg
cmc
lock
sbb
push
jno
out
les
and
sbb
pop
jae
mov
stos
in
cmp
ja
loop
je
or
or
xor
xchg
push
xor
push
fwait
ja
push
push
add
mov
nop
or
movsb
add
sarb
mov
arpl
push
sar
ret
bound
push
ret
xchg
jno
in
mov
arpl
ljmp
add
sti
pushf
dec
jmp
cmpsb
mov
nop
mov
xchg
aam
data16
ja
pop
push
in
sub
pop
mov
int3
lcall
roll
out
imul
hlt
push
xchg
rorb
insb
int3
or
out
cmc
loop
xchg
into
sar
mov
pop
jo
pop
aaa
das
leave
mov
fnclex
or
dec
jno
cmp
cmp
fmuls
adc
int3
mov
sub
mov
inc
jl
sar
or
pop
jmp
imul
xchg
imul
imul
adc
push
inc
outsl
daa
fdivrl
jb
mov
mov
xchg
ret
mov
and
cs
scas
hlt
in
ds
lret
dec
mov
mov
data16
or
adc
daa
xchg
mov
pop
imul
std
into
mov
jb
mov
mov
and
addr16
ss
sub
or
ja
scas
cmpsl
sbb
in
mov
aam
inc
mov
les
adc
xor
cs
call
fistpll
idivb
mov
scas
push
test
pusha
xor
and
pop
jg
pop
xor
movsl
fcomps
cwtl
test
adc
mov
sbb
sub
inc
xchg
fs
jbe
xchg
clc
movsb
fwait
xchg
xor
cmp
mov
dec
pop
push
lahf
mov
xchg
in
xor
push
mov
mov
mov
insb
shl
sbb
xlat
jo
sbb
jnp
pusha
lret
inc
cld
sub
arpl
mov
mov
push
mov
stos
push
jmp
sbb
cmp
loop
jg
loop
push
xchg
sub
and
sbb
int
sahf
cld
popa
sbb
jl
lea
cltd
lahf
scas
test
and
sbb
scas
inc
or
out
sarb
mov
negb
xchg
adc
push
add
daa
insb
jmp
pop
mov
addb
std
fidivl
faddl
sub
dec
mov
or
aaa
cltd
xor
out
sti
loope
adc
xor
add
add
mov
pop
in
rcr
mov
shl
scas
arpl
mov
sbb
sbb
push
push
fdivs
cmp
fmuls
andb
lea
sahf
les
add
dec
cmp
sti
lock
sub
mov
in
mov
mov
mov
sbbl
shlb
and
mov
and
aaa
je
xor
sti
sahf
jle
jp
stc
push
adc
jnp
push
mov
adc
dec
or
xchg
xchg
inc
out
ja
into
and
lret
adc
xchg
fdivr
enter
mov
mov
mov
and
pop
mov
js
cmp
pop
mov
popf
dec
aam
push
pop
lret
xchg
jge
jo
aam
clc
imul
icebp
sbb
dec
nop
cmpsl
loopne
xor
in
in
lcall
repz
mov
sub
jge
fdivs
dec
cltd
inc
data16
mov
leave
xchg
insl
adc
jmp
jg
pusha
pusha
idivl
bound
out
dec
out
mov
ljmp
loope
mov
cli
cmc
mov
in
dec
sub
ror
cld
icebp
loope
sahf
cmp
sub
mov
mov
cmpsl
outsb
lcall
out
inc
xchg
push
sti
in
cli
pusha
push
in
cmp
repz
fwait
push
sbb
imul
add
jecxz
bound
xor
jb
repz
cmc
inc
mov
xchg
add
mov
aaa
hlt
jnp
push
arpl
test
dec
push
push
cmp
aad
jl
clc
push
jl
lds
adc
imul
ret
je
add
sbb
fldt
test
xorl
sbb
rorb
mov
stc
sub
addb
and
imul
cmp
js
push
and
cmp
pop
sub
xlat
fdivrs
shl
mov
pop
and
push
mov
inc
xchg
sarb
pop
sub
xchg
popa
stos
adc
pushf
mov
divb
jmp
mov
pop
or
loopne
lods
adc
sahf
popf
in
ja
into
mov
mov
sbb
xchg
int3
jbe
imul
shlb
in
add
pop
testl
mov
cld
das
mov
add
lahf
mov
sbb
shll
dec
fisubrs
aas
out
int3
mov
mov
loopne
rclb
jp
jg
adc
ljmp
inc
outsl
ret
xchg
mov
jecxz
ret
or
pop
mov
jae
ret
mov
and
addr16
or
mov
dec
sbb
cmp
aas
fstpt
mov
xchg
jge
mov
ret
adc
test
sarl
adc
adcb
sbb
rcrb
push
pop
and
cmpsb
adc
decb
add
nop
jno
lock
pop
jb
xchg
inc
das
ljmp
pop
test
hlt
rcrl
xlat
shl
push
mov
loop
pusha
push
push
std
jnp
lods
or
push
jecxz
aad
ret
out
xchg
xchg
xlat
push
ds
mov
and
mov
data16
pop
push
aam
hlt
into
idivl
leave
mov
and
daa
mov
mov
pop
and
fs
push
sbb
mov
jno
mov
cld
push
out
push
jecxz
lret
js
movsb
lret
jmp
aaa
xlat
mov
xor
in
ss
xor
lahf
xchg
adc
mov
mov
dec
inc
ds
fidivl
ret
sbb
push
in
test
je
xchg
nop
or
cmp
out
push
imul
sub
cmpsb
pop
xor
add
or
pop
cmpsb
sub
test
and
leave
jae
mov
adc
and
cmp
ds
mov
and
mov
and
cmp
dec
ljmp
daa
lds
aaa
hlt
insl
outsb
mov
stos
out
repz
inc
test
adc
or
and
shlb
dec
and
jmp
fnstenv
out
pop
lcall
mov
out
mov
or
cli
scas
cltd
dec
and
pop
in
loop
mov
lret
xor
add
inc
xchg
ficompl
movsl
add
mov
and
sbb
daa
in
push
xchg
xor
mov
out
sahf
loope
pop
mov
movsl
clc
or
pop
aas
cltd
jmp
sub
das
cmp
in
adc
gs
jo
scas
stos
jo
jg
inc
mov
sub
mov
pop
jbe
mov
cli
lret
jge
jne
jp
or
mov
cs
inc
pop
sub
stos
xchg
ja
cvtpi2ps
sbb
stos
js
rcr
jge
jb
sbb
cld
subl
notb
idiv
sarb
fldl
inc
jno
lcall
push
scas
aaa
add
std
mov
adc
aaa
int3
sarl
adc
pop
inc
out
cmp
fiaddl
mov
int3
cmp
jecxz
inc
and
jb
or
adc
and
jo
pop
jg
je
push
insl
bound
scas
cmp
jae
nop
aam
and
in
iret
mov
jge
fisttpl
icebp
pusha
rclb
sbbb
shlb
mov
movsb
out
outsl
cmc
adc
mov
pop
xor
adc
cld
pop
fwait
ret
add
scas
ret
out
cmp
idivb
push
out
dec
add
add
xchg
popf
add
dec
mov
cmp
or
and
lcall
jle,pn
clc
mov
mov
jg
ret
push
in
push
rol
mov
mov
cli
push
jg
mov
inc
jp
dec
mov
mov
cmp
jo
fmul
jae
mov
inc
jle
mov
loope
or
mov
in
rclb
mov
bound
inc
mov
inc
push
inc
sbbb
inc
xlat
sub
fcomps
and
add
push
dec
jne
xor
imul
and
pop
push
addb
push
addb
mov
call
xchg
pop
mov
hlt
scas
jmp
cmpxchg
mov
fisubrs
cmp
sahf
cmpsb
dec
jb
jg
bound
ss
and
aaa
pop
shrl
add
and
mov
mov
pop
rorb
adc
push
cmc
test
icebp
cmp
cltd
in
dec
test
xchg
ds
xchg
push
push
fisttpl
std
shlb
sub
dec
mov
add
pop
add
inc
and
int
outsl
fcmovb
stc
out
fcoml
pop
fdivr
insl
xlat
push
jmp
ror
dec
mov
clc
popf
sbb
mov
push
das
or
xor
jge
pop
stos
stos
dec
loop
in
mov
insl
cmpsb
mov
sbb
not
in
adc
inc
popf
ja
in
xchg
or
mov
ret
std
stos
out
pop
pop
xor
aas
shll
xor
pop
jmp
sub
cmpsl
push
repz
add
push
sbb
rcrb
sahf
ljmp
adc
jge
dec
pop
nop
push
cltd
mov
jb
or
xchg
movsb
movsb
push
cltd
mov
adc
push
sub
cmpsl
sbb
dec
scas
roll
pop
loope
push
je
pushf
sahf
xchg
repz
out
or
out
shl
inc
shll
cld
mov
fmul
fs
xor
or
es
mov
fiadds
or
lahf
jbe
adc
push
push
sbb
dec
add
push
mov
outsl
xchg
mov
fninit
dec
sti
stos
imul
repz
sbb
mov
xchg
aam
fwait
cwtl
mov
push
add
or
cmp
mov
jmp
xchg
shl
shlb
inc
mov
nop
mov
lcall
jmp
movsl
lahf
push
xor
inc
jns
mov
and
ret
in
les
ljmp
xchg
mov
call
add
inc
sbb
add
mov
sbbl
push
aaa
in
popa
sub
mov
cltd
jne
mov
pop
shl
imul
out
fstpt
jecxz
xchg
pop
out
testb
mov
mov
stos
or
fsubrp
cmc
rcrl
xlat
mov
and
pushf
and
xchg
and
add
sbb
outsb
pop
mov
sbb
mov
push
rcll
cld
rclb
loopne
lds
ljmp
jmp
testl
aaa
lods
xor
sbb
mov
sub
ds
adc
fadds
rcrl
or
test
rorl
fistl
xchg
xor
jns
jns
xchg
jl
jb
push
sub
push
and
dec
dec
or
ja
ja
jne
mov
push
test
aas
sub
or
adc
xor
push
pushf
mov
xchg
xchg
out
dec
push
leave
fstps
push
aad
sub
call
adcl
xchg
mov
outsl
or
sub
mov
jnp
push
out
mov
push
lods
pop
insl
mov
outsl
aaa
jecxz
popa
fildl
js
add
outsb
add
and
cmpsb
clc
or
mov
inc
lcall
add
fisubl
dec
data16
hlt
test
js
cli
sbb
adc
inc
loop
gs
in
adc
insb
xchg
test
ret
subb
sub
clc
push
push
xchg
mov
xchg
pushf
dec
xchg
lret
mov
jmp
and
test
jno
jmp
das
sarl
push
jecxz
push
pushf
xor
decl
mov
sti
xchg
stc
pop
mov
jnp
fsubs
hlt
jb
mov
and
call
ja
pop
out
fldt
in
inc
test
adc
add
aaa
gs
push
add
das
or
subl
xor
mov
mov
loope
cmpsl
daa
call
xchg
cmp
fiadds
stc
add
sbb
mov
js
mov
or
mov
jns
ss
inc
jmp
cmc
les
mov
test
lock
popl
jnp
jp
xchg
cmp
mov
jno
mov
int
in
loopne
ljmp
stos
cmp
ret
outsl
mov
add
push
pop
fadds
arpl
in
push
call
outsl
xor
cmp
pop
push
packssdw
scas
sub
adc
mov
jg
mov
jp
testb
adc
jae
outsb
or
in
ds
add
hlt
lods
dec
jno
repz
les
xchg
out
mov
dec
int
sbb
lock
fimull
out
push
pop
insl
cmpsb
ret
icebp
cmp
mov
xchg
jg
mov
scas
xorl
mov
test
inc
mul
adc
ret
popf
cmp
xchg
pop
jmp
outsl
sbb
sbb
pop
test
push
fnstenv
fmuls
shl
mov
xor
mov
mov
jmp
jmp
add
adc
jnp
in
pushf
xchg
inc
or
lret
leave
rcr
pop
adc
orb
mov
or
push
xchg
mov
or
sub
push
pop
scas
test
push
repz
mov
and
imul
jno
fstpl
or
sbb
xchg
xchg
mov
stc
lock
adc
dec
xchg
push
or
inc
jbe
jns
xchg
xchg
mov
push
sub
sbbl
push
mov
pop
imul
repz
mov
lds
inc
push
jne
push
in
sbb
or
repnz
in
and
lret
jb
ja
pop
cmpsl
pop
ror
inc
inc
mov
jecxz
scas
adc
mov
push
std
and
add
pop
js
xorl
xchg
xor
pop
inc
mov
in
sub
xchg
mov
dec
movhps
insb
add
into
add
pop
xor
xchg
xor
adc
movsl
sub
sahf
lods
xchg
cmp
push
adc
sub
dec
jle
mov
arpl
dec
jp
push
mov
stc
addr16
xor
sub
or
inc
xchg
and
movsb
sbb
xchg
pop
bound
sbb
push
lcall
cltd
push
sbb
aam
sahf
add
jnp
dec
jl
nop
cmp
ret
cmp
insb
ljmp
cmc
mov
or
xchg
mov
dec
jb
popf
inc
insb
outsb
ja
cli
fisttps
mov
imul
ja
sub
stos
cmpsb
cmpsb
add
xor
cmc
jp
push
push
push
xchg
or
jno
dec
stos
loope
stos
rolb
cltd
xchg
cltd
inc
insb
daa
adc
push
jb
arpl
mov
gs
scas
fwait
adc
jns
push
xor
jp
or
jle
insl
rcll
push
add
and
mov
cmp
decl
xchg
dec
sub
xchg
rolb
xchg
jl
test
lret
sub
imulb
xchg
and
outsl
jg
push
jb
shll
dec
repz
and
add
cld
fcoml
adc
ret
bound
rcr
imul
inc
fisttps
push
mov
je
mov
jl
aaa
subb
cpuid
sbb
sbb
scas
sbb
outsl
adc
ja
adc
ljmp
mov
int3
sbbb
cmp
insl
ret
cwtl
and
js
lret
loope
repz
cld
xchg
out
add
xchg
loop
stc
mov
xor
or
lds
jno
out
sbb
mov
inc
insb
dec
mov
imull
cmp
fs
and
cmc
lahf
addb
push
xchg
imul
jns
mov
adcb
std
jno
bound
fdivl
xchg
adc
in
adc
nop
mov
and
icebp
dec
push
lret
rolb
dec
mov
in
and
ljmp
das
cmp
nop/reserved
dec
mov
push
pushf
pop
inc
cmp
adc
frstor
push
and
push
adc
or
xchg
loope
sbb
fidivl
jmp
lahf
cmpsl
loop
jno
mov
inc
and
pop
cmp
jecxz
shr
mov
nop
mov
cmpsb
mov
cmpsb
shl
sbb
add
mov
negl
dec
xchg
pop
jae
int3
mov
leave
jl
sub
fcomps
mov
adc
sbb
fs
into
lds
sti
xchg
dec
mov
lods
mov
inc
mov
xchg
dec
mov
ja
jbe
pop
pop
pop
jne
pop
and
jns
lahf
aaa
and
dec
pop
add
xchg
addr16
jl
arpl
enter
pop
pusha
popf
push
sti
test
idivb
add
sbb
arpl
out
cmpsl
jecxz
sub
lret
addr16
es
pop
pop
xor
pop
ret
loope
aam
test
out
xchg
je
mov
mov
xor
popa
push
fisttpl
imul
aad
cmp
repnz
test
jo
mov
scas
adc
pushf
das
shrb
xor
and
aam
xchg
cli
adc
dec
mov
sub
outsb
cmp
loopne
mov
mov
xorb
xor
pop
jle
push
mov
adc
aaa
dec
cmc
sti
lcall
push
fcoms
mov
xchg
lock
sub
orb
out
jmp
int
movsl
mov
jge
xchg
jne
sahf
lret
test
pop
jge
clc
fdivl
lret
inc
into
jo
loopne
dec
xor
push
aaa
es
das
sub
ja
sbb
xchg
xlat
push
xchg
bound
scas
sub
xchg
cmp
push
bound
fiadds
lea
cmpb
ds
mov
in
xchg
mov
sub
cmpsl
es
mov
or
insl
shrb
sub
test
dec
pop
push
movb
divl
leave
mov
push
mov
and
dec
hlt
lcall
mov
and
xchg
movsb
insb
lock
mov
addr16
xor
cmp
jl
das
lea
or
movsb
lods
dec
xchg
adc
popf
xor
orb
jae
mov
sbbb
sbb
daa
sub
call
xchg
inc
mov
cmpb
mov
cld
fldcw
or
pop
mov
hlt
inc
add
jl
pop
pop
fmull
xor
js
int3
scas
xchg
je
movl
lock
lea
xchg
aas
mov
arpl
ret
imul
popa
das
ljmp
incl
push
subl
mov
out
xlat
rcrb
lds
jbe
lods
push
fdiv
mov
in
test
lcall
negl
icebp
imul
stos
std
sbb
xlat
mov
loope
fisttpll
mov
imul
scas
or
iret
std
pop
insl
pop
cmp
push
sahf
jo
pop
aas
dec
xchg
ss
xchg
lar
push
mov
and
lcall
in
cmc
jae
dec
fnsave
jle
cmp
lods
dec
das
pop
test
sbb
ds
jle,pt
mov
xor
add
push
mov
cmp
in
loopne
sbb
daa
and
loope
es
sti
rcl
xor
out
arpl
push
gs
arpl
inc
iret
mov
fs
xchg
out
rclb
adc
mov
shll
mov
rcrl
sub
sbb
pop
mov
inc
popa
jge
sbb
pushw
pop
pop
push
andb
ret
stc
std
fisubs
push
stc
inc
sbb
jmp
cld
dec
xchg
cld
jno
mov
jl
stos
ret
push
ret
jg
daa
pop
andl
lods
lds
dec
add
jnp
lods
or
mov
gs
fdivs
xchg
sbb
loopne
and
pushf
stos
sub
fwait
call
pop
ss
push
pop
push
lock
xchg
dec
jg
insb
xchg
mov
xor
jnp
mov
lcall
popf
mov
xlat
fnstenv
or
imul
cmc
dec
add
les
sub
jl
out
clc
outsl
cli
stc
in
jp
adc
mov
push
dec
inc
jg
js
ja
xor
push
xor
push
rcrl
insb
sbb
mov
out
fists
dec
mov
in
test
movsl
add
inc
movl
in
test
mov
ljmp
ds
lods
daa
stc
mov
lock
or
jmp
test
mov
push
js
repnz
inc
jmp
outsl
mov
insl
sub
loope
call
insl
dec
and
xorb
roll
sbb
or
push
subb
and
mov
mov
lock
cmpsb
jecxz
je
and
popa
rcl
mov
xor
subl
mov
loope
fdivr
scas
xor
sbb
mov
repz
imul
test
or
mov
inc
jae
inc
into
pop
testb
mov
loop
push
cli
sbb
fldl
popa
repnz
out
scas
mov
std
idivl
inc
cmp
mov
pop
subl
jg
xchg
adc
lahf
scas
inc
dec
out
mov
sub
xchg
jb
test
daa
jne
shlb
out
sub
jnp
push
rolb
dec
lods
xlat
int3
sub
pop
in
int3
iret
xlat
push
xchg
test
jmp
adc
sbb
inc
sbb
cltd
mov
xor
mov
fstpl
pop
or
add
rolb
sub
push
cmp
cmp
call
adc
xor
scas
add
mov
sub
push
mov
aad
and
xchg
xor
xchg
out
icebp
in
sbb
jp
inc
movsb
adc
dec
movsb
cltd
adc
fadds
call
adc
cmp
hlt
xlat
cmp
std
add
lea
movsl
cmp
popa
mov
and
and
inc
stos
push
cmpsl
mov
cmp
pop
cmp
dec
mov
fsubrl
loope
sbb
push
pop
ljmp
inc
push
hlt
loop
adc
mov
test
sbb
cmp
xor
xlat
mov
mov
jnp
mov
jb
pushf
out
std
adc
stos
insl
leave
inc
daa
dec
lods
jns
shr
arpl
push
in
js
int
aad
mov
iret
dec
mov
dec
ds
adc
and
ror
lock
fcoml
jp
ds
push
out
mov
rclb
and
xlat
xlat
add
sub
lret
mov
mov
fnstsw
lock
pop
ja
std
push
xchg
shl
fs
sbb
jbe
cmc
mov
cmp
dec
cs
in
sbb
int3
outsl
pop
adc
sbb
sbb
xor
inc
sbb
mov
jbe
inc
dec
test
push
loopne
lahf
repz
add
mov
arpl
pop
andb
movsb
arpl
adc
ss
cltd
outsb
pop
gs
or
jns
lret
in
shrl
test
test
std
sbb
shrd
insb
or
inc
jnp
inc
test
add
push
add
divl
mov
sbb
std
icebp
pop
lcall
push
scas
lods
test
mov
test
popa
fistl
lock
fsubrs
xlat
adc
jae
test
popa
ja
repnz
jno
out
mov
fmuls
lock
inc
cmp
sbb
outsl
clc
mov
rcrb
jnp
sbb
imul
jge
xchg
stc
pop
cmp
mov
je
and
inc
in
test
es
adc
sahf
into
insl
jns
push
fcoms
ds
mov
dec
decb
inc
sbb
out
out
xlat
xchg
cmp
test
mov
test
adc
leave
dec
mov
cmp
xchg
pop
sbbb
adc
cli
lret
cmp
dec
stos
int3
fnsave
jmp
mov
or
test
aas
cmp
xchg
js
rorb
bound
loopne
jb
inc
jp
pop
push
aam
loope
into
test
out
add
ss
mov
out
sub
std
lods
fidivrl
fsubrs
popf
or
jnp
jb
xchg
mov
pop
icebp
out
sub
ret
dec
ficompl
test
in
pop
test
pop
push
pop
mov
sbbl
xchg
xor
nopl
mov
sbb
pop
test
mov
mov
mov
sbb
mov
fimuls
mov
and
loope
or
add
roll
out
lock
jns
mov
xor
orb
jge
xchg
fistl
jmp
icebp
or
xor
mov
sbb
pop
xchg
daa
pop
sub
jmp
orb
outsb
repnz
cmpb
xor
add
xor
sbb
ss
int3
xchg
adc
dec
xor
mov
lods
add
mov
dec
out
jo
xchg
dec
and
push
ljmp
push
xchg
in
cmpsb
adc
push
in
icebp
inc
mov
ljmp
sbb
mov
inc
inc
mov
sahf
cmpsb
add
outsl
ficomps
jae
repz
add
and
nop
pop
outsb
mov
rcrl
insl
pusha
push
jno
cmp
jp
test
aaa
adc
push
dec
xchg
sarl
insl
shld
lahf
stos
sub
sub
sub
cmc
aaa
lahf
dec
mov
mov
imul
aaa
sub
das
and
inc
sub
push
out
test
inc
mov
icebp
mov
xchg
mulb
mov
xchg
int3
ljmp
sub
notl
popa
enter
inc
jp
movsl
sbb
gs
cmp
sarl
inc
push
clc
add
jo
add
stc
xchg
push
gs
repnz
test
push
and
inc
dec
sbb
fcoms
fs
rcrl
fisttpll
jae
dec
xorl
cmp
adc
xor
jnp
bound
inc
jge
cld
sbb
push
pop
cld
repz
mov
pop
cld
jle
stos
mov
cmp
or
bound
jg
in
jle
loope
cs
popf
or
ficomps
das
fdivr
xchg
jo
inc
add
cwtl
inc
jg
fninit
adc
fisubs
mov
shlb
pop
stos
xchg
adc
mov
xor
call
cmp
mov
dec
and
jle
push
jno
in
ljmp
xor
fsubrl
xlat
dec
test
mov
add
and
stos
movl
int3
mov
mov
inc
sub
mov
cmp
sti
inc
daa
jmp
es
mov
enter
jb
mov
mov
test
jne
stos
cmpsl
jne
cmp
scas
subl
or
imul
jg
mov
mov
mov
inc
cmp
add
cmp
mov
sti
ficomps
lahf
sub
fcomi
push
inc
and
xlat
xor
cmpsb
pop
and
adc
jb
mov
sahf
in
jne
lods
loope
adc
jno
lcall
loop
daa
pop
or
or
adc
xchg
lea
out
ret
push
push
jl
js
enter
shrb
lret
addr16
mov
in
mov
andl
sub
jmp
ret
sub
mov
repnz
push
and
int3
lcall
arpl
and
call
std
jno
xchg
adc
mov
inc
pop
out
add
inc
mov
push
jns
jb
adc
test
orl
xor
mov
mov
cltd
jp
add
lahf
stos
test
and
sbb
mov
scas
arpl
outsl
mov
mov
in
js
scas
mov
fnsave
addb
xchg
cwtl
aam
push
loope
icebp
lock
inc
inc
jno
xor
scas
push
fucom
jb
push
sub
mov
movsl
adc
cmp
lods
jnp
or
insl
add
or
jns
jns
sbb
ret
mov
in
and
push
cltd
xchg
adc
stos
dec
sbb
call
ljmp
lret
mov
mov
stos
in
xor
loop
add
add
jmp
lods
mov
add
xor
ror
sub
roll
pop
sub
clc
fs
and
mov
xchg
frstor
loop
scas
imul
and
or
adc
pop
and
cmp
rcr
fnstcw
lahf
inc
jno
push
jg
repz
or
mov
mov
je
pop
stos
lods
and
xchg
xchg
jge
xchg
pop
lock
xchg
addl
nop
xor
mov
inc
imul
nop
out
dec
in
pusha
loopne
jnp
add
or
aam
push
sarb
out
lret
cmp
sbb
ficoms
mov
mov
scas
fidivl
mov
repnz
ss
and
adc
add
loop
pop
aas
pop
mov
pop
push
mov
sub
dec
ja
loop
lret
rorl
and
mov
dec
dec
pop
dec
or
cld
cwtl
xor
imul
clc
imul
daa
incb
pop
pop
ljmp
xchg
pop
push
mov
addr16
cs
cmpsb
cmc
lock
movsl
cmp
pop
adc
lret
push
adc
sahf
nop
ds
push
jge
sbb
popf
ret
movsl
pop
into
dec
lock
mov
fstl
cmp
sbb
out
insb
sarb
push
imul
sti
repz
mov
imul
rorl
scas
bound
push
fsts
mov
sbb
and
ljmp
fiaddl
sub
add
push
stos
cmp
das
mov
test
lret
int3
inc
mov
fs
mov
in
sub
out
cwtl
aas
xchg
mov
jo
inc
xor
inc
sahf
xchg
test
mov
xchg
sub
pop
add
or
cmpsl
fsubl
pop
andb
mov
insl
mov
lds
cli
sub
xor
mov
mov
flds
movsb
xor
jnp
popa
jle
cs
push
dec
push
lret
int3
or
push
jo
sub
mov
add
jge
mov
mov
fstpt
aad
or
cmp
xor
mov
fimuls
xchg
inc
inc
orb
mov
and
loope
call
and
insl
lds
or
adc
mov
xchg
jo
test
jle
mov
push
hlt
daa
dec
and
stos
ljmp
movsl
mov
sbb
xor
aad
mov
jmp
int3
into
std
cli
out
add
into
arpl
insl
leave
mov
andl
xor
imul
test
sbb
and
test
xchg
in
jmp
in
ljmp
mov
movsb
inc
in
lock
xor
sub
mov
ja
fucom
mov
cmpsb
push
pop
push
or
or
sbb
ror
sub
dec
dec
aaa
cmp
add
rcll
xchg
push
ret
dec
fdivrl
mov
adcb
out
mov
sub
test
mov
adc
and
nop
scas
pop
sbb
push
orl
sbb
mov
int
pop
add
outsb
clc
xor
xchg
dec
jnp
jg
adc
fcmovnb
dec
cmpb
sti
sbb
mov
push
push
pop
pop
das
enter
insl
sbb
aad
cmpsb
jbe
ljmp
fwait
into
xchg
es
push
std
ljmp
out
xor
mov
cld
mov
mov
in
lahf
sbb
xlat
sub
dec
push
xchg
inc
xchg
les
cmp
xor
pop
pop
js
lods
xlat
or
enter
push
pop
call
sbb
inc
xor
int
stc
gs
jno
outsb
outsl
ljmp
hlt
or
cmp
mov
xor
clc
dec
sbb
jo
push
in
mov
shl
xchg
flds
cmp
sti
pop
pop
insb
lcall
push
jne
std
push
push
orw
push
dec
inc
add
mov
mov
add
jo
and
int3
cmp
leave
xor
jno
insl
popf
cli
dec
ficoml
clc
sar
sar
int
jl
bsf
ret
add
sbb
fwait
lods
icebp
xchg
test
or
pushf
mov
into
xchg
push
stos
push
xor
xor
push
xchg
pop
scas
adc
aas
daa
aaa
aam
sub
clc
les
and
inc
test
cwtl
push
jae
test
xchg
pop
addr16
cwtl
jp
ss
push
pusha
ret
movsb
jle
adc
int
in
sti
mov
cwtl
sbb
lods
xor
and
in
ror
stc
jmp
aaa
cmp
stos
xor
das
jno
jns
test
pop
inc
mov
aas
sahf
mov
ja
out
movb
mov
clc
cmpsb
xchg
sub
xchg
cwtl
ret
fldcw
xchg
mov
cli
addb
clc
sbb
data16
les
push
test
xor
dec
mov
push
outsb
sub
xorl
push
loope
scas
mov
push
sbb
sub
mov
loop
sub
and
sbb
lea
movsl
nop
fstpl
dec
adc
mov
movsl
mov
lock
scas
fwait
out
push
or
lock
add
int
cmp
sbb
mov
jp
aaa
push
loop
icebp
or
xlat
cmc
sub
addr16
ret
divb
mov
sub
aas
or
add
cli
mov
outsb
data16
push
inc
dec
push
sub
loopne
and
xchg
and
std
daa
dec
or
mov
inc
mov
test
test
mov
inc
int
mov
xor
insl
ljmp
lcall
bound
ljmp
dec
ret
les
out
lods
fcomi
cwtl
xchg
push
cmp
bound
scas
xchg
push
dec
jne
mov
sbb
mov
adc
insb
dec
daa
xchg
xchg
xchg
loop
add
cmp
pop
bound
fsubl
mov
inc
test
or
lds
or
shll
mov
cmp
sub
andl
mov
push
sub
pop
push
xor
inc
loopne
xchg
cmp
ret
ja
mov
dec
imul
dec
dec
cmp
cmpl
insl
fucomp
xor
pop
mov
inc
nop
xchg
sub
add
loopne
or
xor
cmpsb
xchg
aam
cmpsb
adc
pop
sub
cwtl
jmp
lock
leave
addr16
dec
stos
inc
jae
xchg
push
adc
push
lods
xchg
mov
cmp
fdivr
inc
iret
rcll
or
lahf
add
ret
adc
xor
xorl
repnz
push
and
stc
cmp
jo
xchg
lods
cmp
stc
jle
out
dec
mov
cld
mov
xor
mov
jbe
push
sub
or
jge
cs
sbb
fmuls
out
enter
inc
pop
js
mov
insl
leave
mov
lcall
jl
lods
or
mov
dec
cmc
subb
iret
and
bound
adc
imul
push
out
xchg
lods
pop
test
ja
jmp
pop
cmp
loope
aas
mov
repz
pushf
xchg
xor
out
dec
shl
sahf
sar
xor
lea
mov
pop
call
pop
lcall
subl
test
xor
cmp
lods
mov
xchg
outsl
enter
loop
cli
dec
les
cmc
cmp
aad
add
pop
dec
dec
mov
lods
mov
leave
loope
lea
shlb
cld
repz
aam
ljmp
mov
sbb
mov
pop
cli
repnz
and
pop
inc
lcall
and
jne
enter
pop
sbb
or
popf
std
mov
xchg
sahf
mov
rclb
jb
xchg
inc
outsl
js
and
cld
adc
cld
iret
shlb
mov
lret
sbbl
push
out
xchg
fucom
add
inc
shlb
vcmppd
cmp
scas
jo
sbb
pop
mov
or
negl
add
mov
pop
je
pusha
notb
sub
aad
lea
inc
fnstsw
aam
adc
in
xlat
dec
lahf
lods
int
fisubs
inc
test
push
jle
mov
bound
in
mov
pop
fistps
dec
addr16
in
cmp
outsb
cltd
aaa
or
filds
sub
loop
lret
mov
mov
cmp
idivb
in
add
pushf
subl
movsl
xchg
lds
out
popf
outsl
cmpsb
cmp
fstpl
popa
pop
jae
mov
icebp
adc
sub
push
push
loope
and
jno
cmp
cltd
or
or
push
mov
push
adc
test
jmp
push
lcall
xchg
es
dec
pop
and
lret
iret
jle
mov
int
inc
cmp
cmpl
jno
cltd
les
sub
fnsave
loop
push
fidivs
loop
mov
mov
jl
iret
or
jle
mov
loope
and
outsb
and
or
adc
sub
mov
roll
lods
lods
adc
mov
hlt
mov
fs
insb
cmp
mov
lea
aas
mov
adc
iret
loopne
nop
jmp
hlt
in
jbe
mov
push
xchg
fsubs
outsl
cmp
lahf
mov
adc
lods
push
dec
fsts
push
ficompl
xchg
mov
iret
imul
movsb
and
adc
ss
cmp
sarb
stos
stc
jge
or
sbb
nop
xor
push
out
jl
std
mov
sbb
and
xor
push
xchg
mov
push
mov
and
lods
imul
int
arpl
dec
push
xchg
outsl
clc
or
into
xor
mov
sti
dec
roll
inc
push
mov
fnstenv
and
xlat
sti
sub
jnp
jo
scas
cltd
pop
lcall
ds
and
sub
sbb
roll
mov
sbb
pop
stc
roll
sub
cld
fiadds
push
cmp
add
and
lahf
push
call
mov
leave
adc
sub
sbb
addr16
addb
in
mov
inc
pop
dec
push
sub
shlb
dec
pusha
incl
dec
cmpsb
sbb
push
loope
xor
sbb
mov
arpl
or
cmp
mov
test
pop
xor
push
cwtl
sub
imul
mov
dec
pop
add
or
repz
mov
push
inc
testl
add
mov
jnp
out
push
lea
inc
mov
insb
inc
ficoml
orl
xchg
pop
movsl
scas
jmp
and
push
imul
sub
stc
or
mov
shrl
push
ret
lret
ret
cmpsb
dec
cwtl
add
ret
les
dec
sti
adc
mov
jmp
cmp
adc
pop
inc
add
jecxz
test
xchg
fs
xorl
pop
push
es
int
sbb
xlat
aaa
fiaddl
push
scas
or
xchg
insb
pop
jl
fistl
cmpsl
jle
insb
andb
mov
push
sub
adc
push
adc
addb
xchg
or
ds
mov
or
xlat
bndldx
mov
mov
loope
in
test
out
and
mov
mov
inc
loope
mov
mov
jno
jns
lcall
das
ja
js
xchg
lods
leave
xchg
sub
pusha
popw
xchg
pop
xchg
movsb
sub
ljmp
enter
ja
mov
and
cmc
push
setl
jl
imul
xchg
in
xchg
std
fwait
in
jle
sub
cmp
jl
lret
das
inc
pop
das
mov
out
push
adc
leave
push
push
nop
pushf
out
cmp
cmp
add
scas
sbb
xchg
inc
mov
cmc
test
gs
sub
mov
ljmp
rcr
cmp
cs
adc
lds
imul
jae
subb
dec
push
adc
lock
hlt
mov
lcall
icebp
test
icebp
inc
jecxz
icebp
test
hlt
aaa
ret
inc
push
xor
rcr
sti
or
xor
testl
scas
inc
pop
ss
mov
outsb
xor
dec
fidivrs
push
fisubl
xor
and
mov
mov
mov
ret
or
cmp
mov
and
xchg
sbb
daa
into
or
pop
rcrb
repz
xor
shll
inc
jbe
mov
imul
adc
in
ss
cmp
mov
push
adc
inc
inc
sbb
movsb
es
call
pusha
inc
cmp
imul
dec
loopne
int3
dec
xorl
pop
in
jb
push
je
lds
lds
inc
cli
shlb
mov
ja
movsl
sub
xchg
inc
pop
repnz
imul
xchg
sti
dec
jmp
xor
mov
sahf
cmp
sub
leave
mov
adc
and
push
fdivs
pop
xchg
xchg
mov
inc
add
dec
lods
scas
call
sbb
xchg
dec
xchg
imul
adc
daa
and
lods
sub
lods
sub
mov
jbe
in
dec
or
shll
ret
in
insb
jae
mov
ss
lock
pop
cs
cmp
xor
inc
jno
dec
add
dec
lds
cld
sub
into
pop
dec
bound
mull
mov
mov
imul
movsb
and
popl
mov
sbb
xor
jecxz
xchg
in
sub
imul
shlb
push
pop
cltd
mov
lahf
cwtl
mov
and
rcrb
ret
jmp
sub
clc
sub
and
aaa
pop
pop
jecxz
pop
iret
js
mov
add
pop
mov
push
dec
jl
call
mov
mul
mov
mov
aad
add
mov
scas
dec
mov
pop
mov
cltd
xor
ja
push
cmp
mov
push
jbe
insb
jge
movsb
pop
outsl
ljmp
pushf
aam
rclb
das
push
jmp
jo
adc
jge
xchg
cld
fwait
dec
std
fdivrl
fidivs
les
test
push
mov
mov
cmp
push
les
mov
sbb
rorb
lea
inc
pushf
mov
jle
add
xor
lds
inc
mov
test
mov
aam
cmpsl
xchg
rclb
pop
cmp
mov
test
daa
into
mov
jmp
dec
mov
lods
mov
xchg
sub
cmc
pop
lret
cmp
push
cmp
mov
adc
insl
lret
lahf
je
push
fsts
jno
pushf
sub
pop
fdivs
negl
mov
aad
movsl
fiaddl
test
push
jns
adc
stc
loopne
outsb
in
cmp
add
cmc
add
add
jle
and
mov
daa
fldenv
and
int3
mov
mov
xor
xchg
mov
mov
fcoml
or
je
scas
cmp
jge
jp
sti
push
pop
in
cli
ljmp
xchg
out
mov
mov
push
pop
sahf
or
mov
cvttps2pi
int
imull
xchg
scas
sub
or
push
cwtl
loope
cmp
push
int3
adc
add
pop
inc
fdivrl
sbb
mov
push
sbb
mov
stos
subl
xor
stos
sti
and
mov
std
add
cmp
pop
push
lahf
sbb
sarl
xchg
jns
adc
xchg
dec
inc
clc
js
outsb
fcmovu
sub
popa
out
fsubrs
adc
call
in
xchg
mov
xchg
xchg
add
sub
adc
repz
dec
pop
stc
cmp
push
test
into
pop
push
jge
adc
mov
lret
push
or
in
or
sub
andl
dec
inc
popf
pushf
sbb
inc
popf
jb
js
call
cs
shll
pop
pop
jne
pop
mov
xchg
adc
dec
lahf
pop
cmp
daa
xchg
mov
and
pop
xchg
jle
lods
inc
int3
sub
push
xor
push
sub
leave
add
mov
ret
aad
pop
lods
popf
inc
and
push
ror
aaa
inc
adc
cmp
lahf
inc
insl
add
sbb
sbb
lret
mov
lret
jecxz
xchg
sti
or
ja
fs
jecxz
pop
fisttpl
sub
jle
xorl
imul
mov
js
mov
movmskps
cltd
xchg
dec
mov
cmpl
jns
enter
mov
cld
jo
push
mov
pop
iret
xor
gs
rcrl
ret
jne
adc
fmuls
ficoms
sub
clc
data16
cmpl
std
adc
lahf
sub
lret
xor
les
cmc
movsl
daa
xchg
mov
mull
jge
test
sub
popa
loopne
and
ds
es
mov
xchg
sbb
jno
push
lods
and
js
xchg
xor
xor
cmp
arpl
out
clc
in
test
lahf
leave
inc
clc
outsl
hlt
jg
shlb
inc
or
mov
decb
es
pushf
mov
out
fwait
ljmp
rcr
mov
pusha
adc
test
sub
outsl
mov
ret
mov
insb
movsb
xlat
push
push
sub
pop
shll
jbe
dec
and
mov
mov
ret
sbb
outsb
cmpsl
inc
dec
mov
insb
fidivl
in
sbb
inc
stc
bnd
jp
out
pop
mov
outsb
filds
push
mov
into
sti
mov
test
fstps
mov
lahf
ljmp
iret
fdivrl
mov
pop
inc
pop
cmp
lret
stos
fmul
ljmp
mov
push
fwait
test
sbb
jl
subb
int3
shl
bound
jmp
jno
xchg
mov
and
fldcw
ds
push
or
sahf
pop
xchg
lahf
imul
aas
or
mov
fisttps
add
xor
push
lock
jmp
xchg
stos
sbb
or
mov
loope
scas
sub
out
stos
push
inc
dec
cltd
sbb
adc
push
add
lods
mov
push
xchg
insl
mov
xchg
cmp
dec
adc
or
std
mov
push
cmp
jo
jno
inc
cmpsb
sub
mov
adc
mov
cmp
jp
add
sahf
pop
xchg
ret
fldt
mov
push
mov
adc
into
ret
cmp
xor
xchg
jle
mov
add
fnstsw
test
lds
into
inc
cmp
cmp
jae
xchg
mov
mov
fs
shlb
ljmp
mov
subb
mov
cmp
push
xor
stc
cmp
or
div
out
inc
push
xchg
ss
inc
das
push
push
ds
and
add
push
mov
add
jle
insl
mov
sbb
xor
and
outsb
pop
repz
jg
xorb
cmp
mov
enter
and
dec
in
xor
ret
dec
pop
and
dec
fs
movsl
adc
mov
imul
shr
xchg
arpl
and
les
rcll
rcrl
iret
xorb
mov
inc
mov
pop
adc
fdiv
lret
into
stos
pop
xchg
inc
pusha
push
aaa
xor
enter
cmp
cmp
xor
arpl
jbe
pusha
ds
hlt
dec
mov
pop
sub
in
in
xchg
push
xchg
loop
hlt
mov
xchg
lahf
mov
fadd
sub
cwtl
in
mov
pop
stos
sub
icebp
jle
jmp
dec
decb
push
mov
fwait
rcrb
xchg
mov
dec
gs
pop
ljmp
dec
popa
int
in
sbb
filds
stc
negb
stos
xchg
cmpb
jecxz
mov
fisubs
test
sub
bound
jecxz
mov
cmc
arpl
aad
sub
gs
ds
or
mov
iret
mov
and
push
jecxz
imull
jle
aad
pop
addb
in
push
dec
push
mov
fstpl
imul
xchg
xchg
outsl
mov
incl
sbb
adc
dec
sbb
outsl
jecxz
fcoms
jp
aas
cmp
push
cltd
out
data16
push
xlat
fidivs
jo
push
outsb
pop
repnz
xor
and
push
mov
cmp
sub
icebp
or
loop
lret
jbe
cli
aam
sarl
and
xor
sub
lods
sti
mov
jo
pop
data16
fsubs
mov
sarl
push
sub
mov
mov
cmp
xchg
test
cld
int
add
aaa
xchg
ss
ret
pop
xchg
add
xchg
inc
test
adc
or
arpl
jmp
popa
outsb
mov
mov
add
fcoms
adc
mov
in
les
xchg
cmp
pusha
pop
and
sub
mov
xchg
test
cmpsl
in
int3
jno
frstor
mov
lea
in
cli
inc
lds
inc
gs
dec
pop
leave
add
dec
enter
div
push
hlt
pop
testl
fdivs
push
orl
hlt
pop
pop
outsb
push
xlat
jne
lods
inc
stos
loope
and
cmp
cmp
inc
pushf
lcall
enter
sub
dec
xor
inc
and
xor
movsl
pop
mov
or
mov
add
in
push
movsb
leave
push
je
adc
into
je
pop
cmp
jb
mov
sub
pop
xor
test
jb
gs
add
aas
sbb
pop
div
dec
push
repnz
mov
imul
fcoml
or
fiadds
jmp
jle
notl
fisubl
outsl
xchg
out
popa
jmp
cmp
inc
out
jg
cltd
jno
sub
mov
lahf
scas
les
rol
dec
mov
dec
xor
cmp
out
and
icebp
mov
and
inc
lds
cmp
or
nop
push
lods
xchg
dec
cmp
cmp
xor
and
outsb
dec
adc
xchg
or
scas
adc
mov
out
pusha
pop
popf
mov
leave
jae
or
cli
imul
mov
es
sub
push
xchg
mov
test
push
mull
out
repnz
out
cs
shrb
jmp
pushf
adc
cmovb
test
mov
mov
es
rcr
push
dec
dec
je
jle
loop
fmull
in
or
scas
jb
pop
emms
mov
add
adc
cmp
jecxz
data16
test
inc
inc
xchg
out
mov
inc
mov
add
imul
inc
jbe
xchg
pop
xchg
mov
outsb
xor
jle
das
jno
xor
sbb
lahf
mov
adc
cmp
mov
mov
jle
jne
xlat
dec
pop
ljmp
repz
push
ds
sub
inc
lret
loope
test
mov
xchg
cltd
push
xchg
jae
adc
mov
rorb
cmp
jmp
iret
fwait
aaa
xlat
inc
int3
sar
in
mov
pop
push
or
jecxz
enter
cmp
popf
dec
xor
cmp
push
loopne
aaa
and
inc
inc
pusha
outsb
pop
enter
cld
add
dec
jns
push
pminsw
fsubs
mov
inc
icebp
loopne
mov
and
jns
ret
pushf
jmp
fisttpll
rol
rcrl
mov
push
lret
xorl
or
stos
dec
outsl
jmp
fdivrl
filds
add
mov
fdivs
or
mov
loopne
lsl
ret
dec
xchg
mov
pop
xchg
rcrl
xchg
cs
inc
mov
popa
out
dec
outsl
dec
test
rclb
ljmp
pop
mov
add
hlt
xchg
sub
aam
push
add
andl
or
stos
inc
repz
mov
adc
scas
out
cld
out
cmp
nop
xor
mov
shll
es
in
fcomp
loope
add
fsubrl
sbb
jl
dec
stos
in
lock
pusha
sarl
imul
xchg
mov
stc
lret
xchg
add
cld
jmp
xchg
dec
cmp
jbe
jmp
dec
das
lahf
das
lahf
aas
lea
push
jbe
xchg
mov
addb
stos
dec
or
out
sbb
or
cmc
add
loopne
cli
inc
xlat
mov
mov
out
call
pop
adc
xlat
mov
mulb
push
daa
sbb
pop
test
mov
insb
ret
popf
pushf
sub
clc
push
lahf
and
test
cmc
fcomp
leave
repnz
imul
call
xchg
dec
fs
xorl
cmp
xchg
pop
and
test
mov
push
mov
test
call
fwait
arpl
xchg
add
hlt
xchg
push
sbb
gs
testb
xchg
jecxz
push
sti
in
out
jb
iret
test
add
imul
or
or
lods
jb
or
loopne
ret
outsl
movsl
out
fninit
xor
lret
js
pop
out
loop
gs
mov
push
imul
int
cli
and
pop
mov
cs
sbb
das
sbb
sbb
cmp
mov
mov
loop
imul
movsb
push
dec
rorl
mov
lods
lock
mov
xchg
sti
call
shl
imul
int
dec
sti
scas
xchg
loope
fnsave
or
jecxz
adc
pop
sbb
in
icebp
sahf
fstp
sbb
xor
ljmp
outsl
sahf
mov
mov
stos
cmp
popf
fbstp
cs
mov
cmpsb
sbb
lret
lret
sbb
loope
mov
xchg
lea
push
mov
lahf
repz
sbb
insl
iret
fisubrl
mov
adc
fbld
dec
add
mov
scas
icebp
aas
cmp
or
xchg
es
cli
add
pushf
push
mov
test
and
mov
lock
daa
and
add
dec
xchg
sbb
mov
dec
retw
lock
xor
inc
cmp
sbbl
aad
push
std
mov
fiadds
cmpsb
stos
outsl
jb
fmul
icebp
or
sahf
cmp
pop
mov
imul
lret
loop
pop
add
jl
jbe
adc
arpl
test
pop
or
cmp
out
dec
xor
loope
ret
ds
jnp
jp
jmp
imulb
mov
imul
outsb
mov
mov
sahf
xor
test
lahf
adc
cmpb
fsubrl
js
rol
cs
mov
aad
pop
adc
jns
int
iret
cmc
pop
jns
xor
fdivrl
push
sub
push
lret
out
call
xchg
out
xchg
mov
cmp
adc
push
loope
xchg
or
and
iret
cmp
cmpsb
data16
loop
dec
hlt
mov
cli
lods
cmc
pop
aad
push
inc
dec
inc
lods
or
and
or
mov
pop
in
mov
mov
add
mov
push
iret
sbb
or
aam
xor
loope
fcoms
cmpsb
push
xchg
push
imulb
lods
jg
push
cmp
add
sub
jne
repz
testb
stos
lock
stos
dec
jnp
pop
nop
pusha
sbb
mov
push
out
xor
cmp
repnz
bound
add
dec
xor
jno
push
daa
jnp
test
mov
pop
mov
pop
je
test
mov
mov
les
into
ljmp
push
lahf
cld
es
push
push
lret
lds
push
fstl
mov
movaps
lcall
mov
lds
pushf
push
inc
subb
xchg
out
fnstsw
mov
lea
cmpsl
add
mov
das
add
icebp
stos
or
loop,pn
in
sub
mov
cltd
sub
stc
or
lds
push
adc
xchg
xor
adc
aaa
xchg
or
sbb
and
popf
js
in
sbb
push
sbbb
out
inc
push
xchg
and
scas
mov
cli
popl
sub
mov
outsl
xor
xchg
xchg
pop
mov
imul
cmp
mov
dec
out
mov
leave
sbb
jne
popf
out
cld
xchg
pop
and
add
xor
sbb
dec
fdivrl
bound
inc
inc
add
sar
sti
add
push
subb
test
les
cwtl
lods
pop
pop
inc
dec
pop
or
gs
push
mov
mov
out
pop
or
lds
leave
pusha
pushf
xchg
adc
jno
pop
mov
mov
int3
push
test
add
pushf
xor
rcr
jecxz
out
pop
loope
hlt
pop
std
cmpsl
pop
pop
sbb
dec
jns
adc
sti
push
adc
push
in
or
xchg
repnz
rol
int3
lret
xchg
int3
mov
popa
push
imul
inc
fdivrl
cld
sbb
mov
push
sbb
inc
rolb
cs
cmc
mov
mov
imul
sbb
mov
inc
out
lahf
lods
inc
add
xchg
jmp
and
mov
xchg
mov
das
sub
xor
mov
mov
cmp
insl
out
mov
pop
xor
lcall
je
cmpsl
jnp
and
in
push
nop
xchg
stos
dec
gs
andl
inc
xchg
cld
cmp
sti
insl
pop
and
sbb
xor
cli
mov
push
nop
xor
arpl
adc
inc
lea
pop
jl
jle
add
rolb
dec
jge
adc
jp
ret
push
sbb
cmp
outsl
xor
es
stos
cmp
and
iret
add
stos
imul
push
cmp
jp
inc
push
add
jl
in
into
add
mov
aad
cmp
sub
mov
es
inc
roll
sahf
inc
test
and
adc
adc
mov
mov
sub
sbb
test
call
and
lds
inc
mov
jg
jg
jnp
jo
jae
sbb
iret
dec
add
outsl
add
es
out
add
inc
mov
rcll
div
fimuls
and
imul
cld
push
and
adc
xchg
sbb
jb
call
push
xor
aaa
into
das
dec
inc
sbb
or
hlt
jae
je
loopne
and
in
mov
pop
pop
movsl
jbe
pop
lock
test
je
lds
shrl
cli
out
jae
neg
test
push
jno
adc
enter
cmp
into
ds
adc
pusha
pop
or
jne
into
popa
dec
xchg
ret
arpl
cmp
shrb
in
lods
adc
ret
dec
and
inc
fistpl
test
mov
scas
into
rcrb
push
pop
cmpsb
inc
push
mov
dec
mov
or
cwtl
mov
leave
lock
aaa
out
sbb
nop
adc
inc
sub
data16
xor
add
lret
imul
pop
pop
push
mov
adc
or
adc
sub
mul
xorb
sub
push
inc
push
sbb
pop
push
or
xchg
push
jl
pop
push
mov
dec
jge
and
repz
loopne
cltd
xor
mov
jo
sti
mov
xor
mov
lea
dec
dec
dec
cmp
xchg
push
xor
das
into
fdivs
out
ja
adc
adc
cmc
or
out
adc
adc
testl
dec
fs
or
cmp
add
push
push
int
pop
sub
repz
push
dec
jp
jno
ja
jne
lcall
or
shrl
in
cmp
outsb
nop
mov
mov
push
loope
mov
pop
mov
pop
pop
jns
add
lea
mov
adc
mov
ss
sub
mov
sahf
adc
jl
cmp
xor
incl
add
out
xchg
adc
pop
loope
enter
push
addr16
addl
jp
ss
scas
push
jmp
decb
aaa
pop
dec
mov
out
and
in
push
ret
adc
iret
sub
mov
sub
pop
push
cli
push
jnp
arpl
sub
daa
shlb
mov
or
inc
jle
adc
fildl
scas
test
xchg
lahf
dec
cltd
je
mov
aam
insb
lods
js
jo
shll
fldenv
sbb
ret
cmp
popa
insb
mov
push
sub
cltd
icebp
or
out
popf
adc
fldenv
jo
pop
into
out
inc
pushf
sub
test
lods
xchg
ret
shlb
mov
jns
adc
in
xor
bound
ret
imul
cmp
xchg
ja
rcrb
adc
xor
inc
aad
es
push
fildl
call
jae
mulb
nop
out
dec
cmp
es
jo
lret
fwait
pop
test
loope
xlat
mov
in
xchg
dec
xchg
sbb
sub
sbb
aad
pop
sub
mov
mov
mov
pop
push
lods
testl
fcomi
push
mov
mov
sub
mov
xchg
test
test
sti
pop
push
inc
adc
dec
or
pusha
sub
pop
leave
add
sbb
flds
and
add
fistps
in
mov
mov
clc
bound
add
cmp
sbbl
ss
mov
repz
jae
cld
imul
fwait
out
idivb
mov
mov
dec
cmpsb
xor
cmpsb
dec
imul
cmp
mov
iret
jmp
aas
or
lods
mov
movsb
popf
fnstsw
lret
push
dec
push
std
cltd
push
jns
push
lcall
clc
cmpsl
inc
imul
sbb
or
js
popf
push
insb
adc
cmpsl
jb
sahf
mov
lcall
xchg
sub
dec
mov
iret
push
mov
sti
addr16
sti
add
jg
aad
icebp
int3
fimuls
xchg
or
inc
xchg
rcrl
push
mov
mov
orb
pop
and
scas
roll
pop
mov
mov
das
imul
xchg
movsl
lods
sub
push
and
xchg
adcl
loopne
lds
out
sbb
repnz
xchg
popf
es
xor
mov
cmpsl
push
cmc
xor
cmp
aad
inc
cmp
pusha
and
mov
cmc
out
int3
test
jno
in
push
dec
or
jnp
inc
mov
mov
sbb
lds
mov
in
inc
push
mov
pop
sbb
xchg
jle
push
imul
int
outsl
and
mov
jae
aaa
ret
mov
mov
sbb
mov
mov
out
cmpsb
sub
adc
xorb
adc
pop
arpl
pop
adc
loop
outsb
mov
and
pop
mov
mov
pop
nop
and
sub
cmp
mov
or
and
ja
and
sub
test
sbb
xchg
fsubrs
jge
pushf
nop
roll
mov
repnz
test
jg
dec
cmc
aaa
push
fwait
adc
add
fiadds
mov
jmp
mov
test
rcrl
or
cmp
lret
mov
mov
jne
xchg
cltd
mov
jp
push
mov
frstor
dec
push
cld
xchg
xor
mov
jl
fiaddl
xorb
cmp
mov
dec
mov
push
add
adc
and
lods
std
mov
pop
filds
lret
inc
sub
test
dec
or
cld
push
mov
nop
xchg
or
mov
std
jl
lods
repz
mov
xor
imul
mov
lea
ret
xor
push
mov
lock
mov
and
sub
adc
fbstp
iret
es
orb
sbb
xchg
loop
dec
adcb
mov
mov
ljmp
jne
inc
lds
lods
sbb
inc
sbb
cwtl
notb
push
or
test
das
sub
jb
mov
and
out
test
pop
xchg
in
cmp
dec
sub
jae
mov
ja
pushf
dec
and
nop
int
ret
icebp
test
gs
mov
mov
mov
xchg
mov
adc
jle
jno
pop
loope
mov
aad
and
adc
xor
pop
cmp
testl
dec
repz
inc
rorb
pop
mov
mov
mov
pop
mov
push
imul
add
jb
add
cmp
scas
int
cld
mov
lods
xor
scas
insl
cmp
adc
ss
jae
pop
inc
repz
add
test
xor
ror
outsl
cmpsl
mov
arpl
ja
stos
imull
add
rorl
push
ja
add
daa
fs
xchg
dec
mov
scas
cld
dec
jmp
push
cmpsb
adc
dec
xchg
mov
leave
add
dec
sbb
test
clc
mov
and
movups
jnp
mov
pop
and
dec
sbb
enter
and
and
adc
push
clc
ljmp
xor
xchg
jmp
cmpsb
mov
faddl
xchg
lock
aaa
push
xchg
scas
imul
xchg
repnz
mov
out
pop
mov
dec
and
jmp
mov
testl
adc
fiaddl
mov
xchg
fisubs
out
or
out
cmpsb
mov
add
sbb
js
and
inc
gs
js
mov
mov
divl
je
lods
sar
dec
nop
inc
sbb
cmp
mov
pop
push
mov
sarl
xor
adc
jecxz
scas
and
inc
mov
add
insl
lods
and
dec
add
divl
push
lahf
clc
jmp
push
fimuls
daa
sbbb
cld
loope
sub
fldt
cmpsb
addr16
dec
test
sub
pop
aas
or
add
ljmp
jbe
xchg
pop
lds
sub
and
or
mov
jl
inc
loop
call
popf
or
outsl
sub
rcrl
push
sbb
adc
and
inc
dec
mov
mov
insb
aad
ret
popa
inc
shrd
dec
imul
and
jl
sbb
jnp
xor
dec
cltd
sarl
dec
cmpsb
mov
sub
push
pop
sbb
jp
pop
dec
into
mov
mov
dec
pop
pop
inc
push
fiaddl
bound
jae
mov
aas
aad
addl
and
cs
std
lods
movsl
sub
test
data16
sti
ljmp
jne
sub
loope
aaa
cbtw
lahf
pop
fcmovnbe
bound
das
sbb
out
mov
enter
mov
jb
jmp
lcall
stos
data16
mov
je
clc
mov
repnz
in
nop
push
xorl
fidivs
shlb
icebp
test
xor
repnz
push
clc
sbb
adc
jle
jbe
mov
lret
shll
mov
push
mov
aam
cmpl
fistpl
in
mov
lea
cwtl
cwtl
std
xchg
cmc
xor
insb
fisubrs
inc
ret
out
daa
data16
lcall
divl
cmc
sahf
fs
out
jge
adc
hlt
fbstp
mov
shll
iret
addr16
jecxz
shl
add
pop
cmpsb
lea
mov
adc
inc
adc
mov
sbb
ficompl
mov
test
int
push
outsl
dec
and
add
das
in
std
incl
loop
iret
out
loopne
or
mov
jns
ficoml
pop
mov
jge
mov
xchg
adc
loope
fisttpll
fsubrs
xor
sbb
sahf
and
ja
ret
in
add
flds
or
adc
jmp
and
jmp
popa
and
and
fwait
cmpsl
aad
fiaddl
jb
mov
loope
inc
xor
sbb
mov
loopne
ret
mov
jecxz
enter
pop
shrb
testb
xchg
rcrb
insl
jge
movsb
or
push
push
push
push
imul
sbb
sbb
popf
inc
pop
and
jb
das
mull
adc
dec
sbb
addl
dec
cmp
js
and
mov
mov
nop
ja
lock
xor
pop
fsubs
std
mov
cmp
xchg
mov
xor
out
or
add
fsubr
inc
stc
dec
mov
and
xchg
dec
enter
int3
mov
pop
lock
adc
push
jno
mov
push
fildl
mov
test
icebp
jmp
jns
fdivs
jle
pushf
mov
jge
jno
pushf
lods
cmp
add
xchg
sbb
outsl
testb
sub
loopne
cwtl
out
pushf
xchg
jmp
mov
cmp
nop
sub
std
and
xor
ret
jmp
jmp
xorb
mov
mov
and
mov
mov
imul
mov
mov
sub
lock
mov
xchg
push
hlt
fisttpl
call
sub
xchg
hlt
sub
push
and
mov
push
popa
cmpsl
push
push
mov
and
fstl
sub
inc
adc
push
fisubs
in
dec
filds
and
mov
push
jb
sub
decl
push
push
push
nop
scas
dec
ret
jo
scas
les
mov
insb
sub
lock
int
icebp
xchg
cli
fbstp
fstl
pop
call
fwait
sbb
mov
inc
lds
mov
stos
imul
bound
fisttps
repz
dec
dec
pop
sti
inc
ret
cmp
insb
mov
mov
inc
lahf
fdivr
aad
nop
sti
jb
push
and
pop
push
fdivrs
cmpsl
and
jg
dec
mov
push
cmp
and
fs
sbb
cmp
push
pop
mov
movsl
sbb
jp
xor
sbb
aad
push
imul
std
rolb
lret
and
cmp
mov
fwait
mov
out
ret
movsl
jb
ret
mov
lret
lock
push
push
mov
int
mov
js
and
idivb
sbb
ficomps
pop
cmpsl
stos
jle
scas
call
adc
push
aam
out
nop
mov
sub
cmp
or
aaa
lahf
add
jnp
dec
stos
fstl
ds
jnp
out
xchg
lret
pop
mov
repnz
and
and
push
cmp
arpl
mov
cmc
imul
xchg
xor
sbb
hlt
repz
lret
inc
test
lcall
ds
hlt
add
sar
push
jl
mov
and
movsb
cmp
pusha
lock
sbb
cltd
ficoms
push
push
push
mov
sbb
orb
scas
in
xchg
sbb
xor
ljmp
xchg
mov
jne
out
into
in
ds
inc
fidivrl
aam
icebp
pushf
cli
dec
test
lahf
ffreep
fwait
mov
fidivrs
mov
push
popl
dec
loope,pn
stc
popa
mov
ljmp
adc
ficomps
ds
ss
call
scas
mov
je
push
xor
pop
fiadds
mov
daa
push
scas
loope,pn
adc
ret
insb
test
adc
push
jl
xchg
popf
in
movsb
mov
add
jp
add
sub
das
call
jne
lock
cmpsb
push
mov
pop
stos
pushf
jmp
leave
in
dec
bnd
add
adc
dec
sub
mov
clc
inc
aam
push
cli
lcall
ret
test
popf
mov
push
mov
jle
nop
sbb
pop
mov
sub
push
in
xchg
add
scas
pop
test
imul
rcll
gs
enter
shlb
dec
adc
jecxz
cmpsb
sahf
scas
movsl
push
lock
cmpb
adcl
jbe
cli
ss
out
cmp
push
push
mov
in
mov
cmp
aas
push
and
sbb
mov
fsubrs
mov
test
dec
push
pop
jo
jecxz
je
xlat
or
popa
mov
insl
push
dec
add
int3
dec
imul
cmpsl
or
pop
mov
push
aaa
stos
dec
aam
test
cmp
cld
jns
icebp
ss
lods
mov
mov
or
imul
int
dec
cmp
imul
mov
test
andl
sub
mov
shl
cmp
les
ja
in
dec
add
cmp
fs
pop
push
jno
loope
mov
lcall
out
add
repnz
mov
aad
es
jno
icebp
xchg
adc
mov
aam
mov
outsb
mov
jecxz
mov
pinsrw
and
test
add
pop
shrl
in
mov
sub
mov
jmp
cwtl
mov
daa
std
and
sbb
outsb
test
and
fsubp
orl
jg
lds
push
mov
outsl
mov
mov
sub
fcmovnbe
mov
adc
cli
and
mov
sbb
pminub
sahf
mov
push
and
pop
pop
push
mov
test
or
lods
out
jns
add
inc
mov
pop
cmpb
adc
test
xchg
xchg
sub
add
cwtl
aad
xchg
push
bound
icebp
imul
scas
lock
je
mov
icebp
mov
packssdw
shlb
iret
pop
push
rolb
scas
fmul
loop
inc
jge
out
loopne
addb
jbe
jmp
mov
mov
cld
inc
scas
jno
pop
jne
mov
mov
and
xchg
fst
pop
and
adc
outsb
sarl
xorb
lcall
xchg
mov
dec
outsl
sub
pop
push
pop
cmp
fcoms
or
pop
dec
jns
adc
stos
mov
dec
gs
dec
pop
mov
stos
inc
add
shr
je
in
xchg
adc
sti
cmp
push
scas
rcrl
inc
fwait
add
out
sbb
into
dec
loopne
sbb
leave
add
dec
std
sbb
mov
aam
dec
xor
sub
mov
test
enter
cmp
lret
push
mov
leave
int
bnd
or
pcmpgtd
and
mov
js
ja
mov
clc
or
sbb
scas
jo
xchg
sbb
outsb
sbb
xor
mov
xchg
lret
mov
lds
test
les
pop
xchg
mov
adc
jl
cwtl
cmpsl
pushf
push
scas
in
rol
scas
ret
mov
dec
push
shr
pop
xchg
enter
or
scas
dec
dec
or
pop
inc
inc
in
and
cwtl
mov
jb
stos
inc
pop
fwait
aaa
add
cmp
cltd
xchg
dec
jb
xor
cld
mov
lds
mov
mov
and
mov
mov
testb
addr16
arpl
pusha
repz
data16
movsb
jp
jge
sub
rep
insb
out
dec
cli
xchg
push
lcall
adc
lret
sbb
shrl
rcrl
imul
movb
add
mov
xchg
mov
cmp
movsb
dec
sub
jp
xlat
cltd
cmp
mov
cmp
adc
mov
stos
call
ror
mov
loopne
inc
sti
and
lea
cmp
inc
mov
push
pop
insl
scas
test
mov
sub
fidivs
lahf
push
cmpsb
clc
arpl
mov
and
ss
cmc
clc
daa
add
ja
jmp
ds
stos
mov
xor
sub
jnp
mov
mov
scas
mov
cmpl
push
fwait
mov
or
jnp
int
or
clc
or
xchg
stos
ret
or
stos
call
sbb
fsub
repz
rcl
testl
push
mov
push
mov
shll
sti
aas
loopne
ret
mov
dec
popf
jbe
sub
imull
pop
dec
or
push
in
mov
sbb
jne
xor
mov
xchg
cmpl
add
hlt
mov
cmpsb
stos
ficompl
sub
ds
out
roll
pop
aaa
pop
xchg
inc
xchg
xchg
shlb
insb
sbb
lods
push
xchg
cmp
mov
xchg
stos
pop
fisubl
mov
sbb
cmp
mov
dec
xor
inc
push
sbb
xor
jg
icebp
fwait
and
gs
test
jl
or
into
shll
jnp,pn
cmp
movsl
mov
fdivrp
jecxz
jne
outsl
mov
mov
test
mov
repz
hlt
ret
nop
ret
lods
sbb
push
mov
push
sub
sahf
inc
int
mov
test
sahf
jcxz
jmp
cs
add
push
movsb
mov
cmp
std
and
sbb
in
cmp
inc
or
sub
sahf
mov
mov
enter
pop
rclb
dec
inc
int3
in
and
xchg
scas
stos
ja
xchg
es
cmc
stc
mov
mov
pop
inc
nop
je
div
dec
add
cmp
sub
out
dec
mov
sub
rorb
pop
xorl
mov
je
and
movsl
dec
sahf
iret
lret
lcall
mov
xchg
push
imul
into
aas
adc
adc
cmp
out
stc
sti
push
fcmovbe
cmp
test
fisttps
movsl
clc
popa
cmp
lahf
mov
test
ds
jnp
or
and
lods
mov
ja
and
repnz
add
mov
in
insb
sub
in
test
mov
mov
dec
icebp
bound
adc
xchg
cmp
push
ljmp
mov
push
out
lret
or
nop
data16
and
loop
test
xor
push
jp
lock
push
imul
xchg
js
daa
lahf
or
mov
test
loope
adc
sub
xchg
add
into
jge
mov
es
fsubrp
test
rorb
dec
push
lret
xor
into
pushf
jge
xor
mov
insb
dec
inc
xchg
cmp
add
sbb
jge
or
jno
ret
shl
cs
dec
adc
movsb
or
mov
xor
stc
push
mov
inc
adc
cs
pop
in
lahf
stc
rorb
lods
lock
xlat
jne
stos
out
xchg
cmp
das
cmp
add
shrb
inc
divl
rclb
jae
cmp
gs
pop
jae
push
movsb
sbb
xchg
push
popf
in
imul
mov
out
scas
sbb
clc
adc
or
and
jnp
sub
dec
jle
out
ljmp
sbb
adc
pop
mov
mov
rorb
daa
add
ja
cmp
add
pop
scas
addb
loope
dec
jmp
sub
arpl
sbb
and
push
sub
aam
cli
rclb
inc
sahf
jbe
or
sub
xor
test
adc
or
cltd
rclb
push
test
lahf
insb
cmp
and
jns
ljmp
sub
pop
add
pop
cmpsb
jns
push
clc
add
xor
sbb
es
test
addr16
xor
icebp
insb
pop
fwait
insb
pop
lds
test
test
nop
fistl
sbb
push
loope
jge
nop
in
test
dec
mov
mov
mov
mov
outsb
rolb
add
xchg
std
mov
cs
mov
lea
dec
std
cmc
out
movsb
into
lock
dec
mov
adc
stos
xlat
lock
shl
dec
and
mov
or
dec
popf
jnp
jmp
loop
daa
ret
inc
adc
jb
mov
push
aaa
ss
jecxz
push
sub
jo
lea
fisttpll
call
pop
adc
mov
aam
fisttpl
mov
inc
aad
jmp
movsl
mov
sub
cmp
mov
inc
sbb
stc
mov
rorb
pop
pop
jg
add
sbb
add
fdiv
addr16
push
cld
dec
loope
ss
or
rcll
mov
in
jae
pushf
or
test
pop
push
aam
cld
inc
mov
sub
jl
inc
mov
xchg
add
data16
data16
push
add
mov
test
aad
arpl
inc
rclb
clc
push
inc
pop
sbb
arpl
mov
fdiv
enter
aam
or
jp
xor
in
mov
mov
movsb
aam
inc
pop
or
push
std
mov
test
imul
in
jne
cmp
pop
out
xchg
cmp
lret
cmpsb
sbb
push
cmp
pop
xchg
jge
push
aam
sbbb
in
into
inc
rcrl
aaa
mov
clc
incl
or
mov
pop
pop
mov
stos
daa
lret
fsubl
sub
sub
mov
cld
ret
push
jno
xor
test
leave
sub
jb
das
insl
ret
not
imul
nop
or
icebp
arpl
repnz
or
scas
adc
test
inc
xorb
mov
or
out
jl
push
in
imul
pop
test
outsl
push
fimull
jno
or
and
xlat
pop
jmp
jmp
cmpl
call
pop
push
popa
repz
ljmpw
add
add
dec
enter
sbb
sub
jbe
inc
shll
aas
gs
cmp
inc
inc
xchg
jge
out
ret
mov
in
pop
pop
ds
and
xor
sbb
lods
loop
or
test
stos
scas
jecxz
addr16
cmp
xor
jb
and
xchg
xlat
jb
stos
cltd
pusha
les
shlb
jge
enter
loope
js
adc
out
sub
jo
pop
test
out
popf
add
adc
fidivrs
add
mov
scas
inc
xchg
or
loope
jmp
adc
popa
xor
sub
inc
sbb
adc
sbb
xchg
mov
inc
out
imul
xlat
mov
test
rorl
push
lods
imul
sbb
inc
cmpsb
ja
ja
xchg
push
rol
test
lret
clc
mov
pop
dec
lock
push
sbb
mov
pop
cmpsl
mov
pop
add
mul
pusha
shlb
outsb
pop
jnp
pop
pop
dec
lods
shl
xorl
mov
enter
dec
in
cmpsb
mov
lea
sub
fs
sbb
pop
sub
dec
mov
mov
mov
sbb
int3
rep
orb
nop
test
je
mov
jb
mov
xchg
mov
dec
lds
pop
xchg
sbb
push
xchg
cmp
mov
cmpsb
add
or
ret
ss
jno
xor
shlb
jae
clc
std
imul
aam
mov
in
pop
cmp
sbb
push
aad
inc
pop
arpl
pop
sbb
or
leavew
push
mov
xor
mov
shrb
aam
lcall
mov
mov
in
js
shrb
or
xor
es
inc
lods
insb
rorb
ja
inc
movsb
int3
iret
movsb
mov
cmp
testb
push
and
enter
or
inc
fildll
cmp
mov
out
xor
leave
push
insl
sub
push
dec
and
sub
sti
pushf
push
lds
lret
shll
sub
inc
jnp
clc
sub
add
sbb
insb
xchg
popf
xchg
sbb
mov
sub
push
ficompl
or
push
xchg
sbb
mov
or
adc
in
ljmp
pop
shrb
xor
vcvtps2pd
xchg
testb
sub
mov
and
jno
repz
or
mov
xchg
inc
stos
or
fcoml
dec
jecxz
lahf
sub
pop
xchg
loop
jo
mov
cmc
mov
fwait
out
mov
mov
data16
pop
dec
out
enter
movsl
sub
inc
mov
insb
fcom
xchg
addl
clc
in
popa
ret
and
es
add
inc
mov
in
adc
sub
add
scas
stos
bsf
adc
and
mov
aaa
sbbl
pop
in
sbb
jge
jl
mov
push
inc
loop
push
mov
andb
cmp
push
cmpsl
addr16
jecxz
js
jne
loope
mov
mov
mov
insb
mov
repnz
popa
cmp
ja
sub
aam
inc
mov
stc
cs
or
lods
adc
add
inc
in
and
gs
bound
pop
mov
push
jg
or
pop
add
and
test
sub
add
push
jle
pop
fldt
iret
in
sahf
test
test
into
xchg
or
shr
scas
mov
out
scas
fcmovnu
mov
dec
cmpsb
outsb
xor
jle
and
shll
stos
dec
or
jecxz
test
mov
in
pop
push
daa
pushf
mov
sbbb
std
cltd
icebp
incl
daa
cltd
icebp
adc
xor
mov
daa
pop
orb
arpl
nop
push
test
jmp
sbb
mov
mov
clc
std
es
adc
loopne
pop
sbb
pop
or
mov
movl
popa
push
loop
sub
imul
andl
pop
jno
add
cmp
shll
leave
popa
xchg
cmp
enter
and
lcall
mov
mov
ljmp
push
nop
push
push
cmpsl
out
xor
push
xchg
mov
insb
stos
xor
call
mov
add
cmp
sbb
int
mov
das
xor
fsubl
sar
popf
enter
mov
push
jp
movsl
jl
jmp
pusha
jl
leave
pushw
add
mov
lods
int
mov
or
out
inc
addl
test
xchg
ss
in
jl
lret
leave
and
jg
aaa
aas
jae
and
int3
jbe
dec
scas
in
mov
out
cmp
cmp
lahf
cmp
shrl
int
inc
jle
std
stc
or
jnp
hlt
inc
loop
pop
std
lret
cli
add
push
test
cmpsl
cs
pop
inc
pop
out
or
push
or
pop
or
cld
mov
int3
mov
orl
fisubs
cld
cmp
arpl
xchg
sbb
jbe
scas
stos
cmp
lret
xchg
stc
cmp
jg
xor
push
ljmp
or
pop
ds
test
mov
fistpl
jo
cmpb
fidivrs
xchg
ss
push
add
gs
dec
sbb
sbbb
jle
out
xor
cwtl
outsl
push
fisubs
jne
hlt
jl
dec
cmpl
push
or
aas
lods
xor
cmp
mov
mov
insl
flds
cmp
jle
or
sti
sbb
movsb
shlb
cmp
cmpsb
aam
mov
loopne
jno
fsubrs
lods
ljmp
gs
mov
dec
inc
push
addl
out
fisubrl
lret
add
stos
push
jle
adc
ja
in
sbbl
adc
lret
jne
sti
adc
loope
popa
xor
sbb
xor
gs
dec
outsb
stos
cmc
popa
xor
xchg
scas
xor
cltd
mov
aad
xlat
sbb
xor
ljmp
shlb
fistpl
nop
lock
cmpsb
or
pop
lret
out
lea
lea
loope
cs
mov
pop
cmpb
iret
cmp
and
rorb
mov
ss
fcoml
fucomi
jbe
mov
ret
lea
sarb
cwtl
in
loopne
ficoms
jle
push
sbb
int
jp
call
dec
mov
mov
mov
push
pop
pop
cmp
cwtl
ljmp
orl
or
mov
lret
outsb
dec
dec
jbe
stos
fldenv
push
mov
popa
push
hlt
cs
outsl
in
fcoml
dec
adc
sti
sahf
sbb
daa
test
sbb
xor
xchg
ret
lock
popf
inc
mov
add
repnz
jnp
sbb
es
jbe
out
ror
sbb
and
sub
dec
aad
mov
xchg
popf
xchg
shr
pusha
rcr
cmpsl
stos
outsb
sbb
push
ljmp
pop
push
mov
cmp
cmpsl
loope
leave
jmp
mov
pop
dec
mov
dec
daa
inc
sahf
daa
xchg
add
mov
andl
into
mov
push
sbb
lock
or
ret
push
pop
push
add
inc
push
pop
pop
mov
not
pushf
fstenv
mov
xchg
ja
jmp
or
dec
es
sub
sbbb
and
push
rorb
dec
int
xor
shlb
adc
mov
nop
orl
pop
cwtl
jle
cltd
mov
sbb
adc
or
jo
or
cmp
push
cmpps
cmpsl
std
shll
xchg
addr16
js
or
in
fnstsw
scas
or
mov
sbb
or
lods
pop
inc
push
or
out
es
mov
lcall
jb
jmp
jbe
bound
idivb
mov
sub
fldl
jle
pop
xlat
xor
jns
sub
sbb
movsb
not
out
mov
ret
movsb
pop
add
or
jecxz
mov
lahf
cmp
xchg
xor
ja
ret
xor
lret
add
inc
das
sub
jmp
lcall
pop
popf
xchg
data16
mov
imul
push
jge
inc
sbb
and
es
adc
dec
aaa
lods
sub
jno
ja,pn
push
addr16
stc
ds
mull
in
and
scas
lea
jbe
sbb
or
add
shr
cmpsb
fs
or
cmc
or
aad
adc
dec
jle
int
mov
lcall
pushf
or
inc
iret
test
push
jecxz
test
pop
push
pusha
cmp
out
jecxz
fistpl
pusha
jle
addr16
fstps
iret
loop
xchg
rclb
daa
mov
mov
leave
out
mov
inc
sub
jno
dec
outsl
xor
mov
sbb
and
mov
mov
shlb
mov
sbb
icebp
shl
leave
test
cmc
leave
cmp
iret
pop
sub
sahf
or
or
and
stc
ds
cwtl
cmp
pop
sub
adc
mov
xchg
jecxz,pt
lret
xor
out
sub
push
adc
mov
pop
cmp
xchg
add
jmp
mov
jge
lret
or
push
mov
popa
cmp
push
inc
lock
aaa
lods
cmp
fidivl
jno
or
xor
pop
xlat
pop
shlb
and
cmp
or
cmp
jae
mov
into
insb
stc
cwtl
mov
and
pusha
xlat
mov
repz
mov
jno
push
pop
add
scas
sub
or
inc
jmp
enter
imul
scas
stc
xchg
pop
cmpsl
es
xchg
xchg
add
into
lea
xchg
mov
ret
lods
xchg
aas
rol
cmp
shrl
bound
inc
mov
or
cltd
sub
jg,pn
cmp
pop
fmuls
icebp
in
aam
mov
adc
int
push
shl
adc
mov
ret
mov
xchg
mov
mull
mov
or
loopne
push
or
and
xchg
jno
ljmp
xchg
rcr
loope
pop
cmc
sti
orb
adc
leave
jl
mov
pop
sbb
hlt
sbb
cmp
add
jnp
dec
icebp
call
sbb
inc
shlb
stc
cltd
mov
scas
adc
fsubrl
popf
lahf
jmp
mov
arpl
dec
cld
es
ret
adc
cmpsb
repnz
xor
mov
push
ret
leave
mov
call
jns
adc
push
fwait
dec
dec
xlat
js
jecxz
lahf
cltd
jmp
mov
sub
or
add
mov
ss
mov
sbb
mov
lock
jo
and
or
cltd
enter
jmp
fwait
sbb
mov
fisttpll
iret
movsl
aad
mov
adc
pushf
pop
add
scas
xor
jle
lcall
and
scas
xchg
in
or
add
pusha
lods
clc
sarb
data16
mov
std
out
jo
sbb
xor
and
out
icebp
xchg
addr16
dec
dec
in
test
sti
cmp
pushf
mov
sbb
jp
push
jg
dec
mov
dec
cwtl
push
shl
jns
mov
jp
daa
enter
jmp
dec
mov
pusha
push
ret
or
jnp
pop
sub
mov
inc
push
xor
or
lods
loope
mov
adcl
js
or
xchg
inc
subl
insl
mov
add
push
cwtl
cmpsl
fisttps
jo
mov
jae
sub
outsl
inc
cmc
jb
sub
mov
jle
mov
cld
ror
js
cmp
mov
lock
push
xchg
mov
or
nop
lods
push
and
inc
fildl
int3
xchg
outsl
insb
and
cmp
mov
adc
xchg
add
int3
adc
cmp
mov
fnstsw
fmull
pop
fucom
mov
or
leave
xchg
addr16
sbb
xchg
adc
or
push
test
imul
mov
or
jle
jmp
aaa
pop
aad
lahf
push
fadds
int
inc
push
in
fldenv
lcall
cmc
mov
dec
mov
push
clc
push
mov
or
test
subb
push
lret
add
mov
inc
les
or
or
fisttpll
pop
fnstenv
aaa
adc
mov
push
mov
dec
test
pop
xchg
fbstp
ds
mov
push
inc
add
mov
adcl
adc
ret
cwtl
rcll
loopne
stos
loop
stc
outsl
xor
mov
into
cmc
and
lret
and
xor
push
insl
lds
in
stos
cltd
push
in
xchg
ljmp
jp
mov
and
in
pop
xchg
dec
pop
fwait
cmp
dec
inc
mov
jb,pt
popf
mov
push
xchg
in
xlat
int
lahf
inc
jg
dec
call
test
nop
add
das
leave
push
sbb
and
cmp
pop
jmp
push
inc
jns
jns
testb
das
fcompl
inc
adc
xchg
pop
daa
ja
jnp
pop
pop
pop
pop
xchg
sbb
jg
jp
fnsave
xorl
push
je
sti
add
xor
and
push
dec
sbbl
shl
bound
mov
jbe
faddp
popa
jb
mov
and
pop
jns
adc
scas
je
adc
inc
lcall
sbb
lea
dec
jp
sub
lds
fiadds
pop
mov
mov
dec
add
lret
cmp
cwtl
aad
addr16
adc
sub
insl
push
xchg
aas
lods
cmc
add
cmc
mov
jne
out
jl
ljmp
mov
dec
mov
into
xchg
xchg
mov
loop
adc
shrl
je
dec
dec
pushf
test
mov
mov
add
mov
dec
or
or
add
add
repnz
push
stos
sbb
mov
jg
push
sti
or
ret
scas
cmpsl
dec
sub
sbb
add
sbb
xchg
sahf
mov
jl
cmp
scas
jle
xchg
cmpsl
mov
fdivrs
xchg
push
ss
push
ret
cmp
stos
les
mov
aam
push
pop
aaa
stos
cmp
xor
repz
xor
loop
fucomi
or
insl
outsl
sbb
outsl
pusha
popf
add
inc
pop
mov
icebp
imul
sbb
push
std
inc
imul
mov
xchg
mov
mov
fimull
iret
inc
sarl
imul
dec
add
fisubrs
jae
cmp
repz
push
mov
pop
mov
add
add
and
repnz
add
mov
jb
pop
pop
movsl
ljmp
adc
pushf
mov
ret
and
jbe
dec
mov
sub
cltd
test
jge
popa
jno
lret
shl
add
mov
pop
or
int
imul
or
pop
push
jle
push
std
test
ret
sbbb
mov
mov
dec
ficoml
mov
leave
mov
jg
fdivl
mov
fsubr
idivl
lret
test
loope
insb
and
scas
xor
in
fcmovbe
xchg
aad
int3
std
and
add
test
or
lods
jge
stos
int
mov
mov
in
mov
ss
xchg
shl
push
mov
xchg
jg
sti
andl
pop
adc
es
into
stos
stos
inc
cmpsl
lahf
shr
loope
adc
push
cmp
fs
cmp
mov
push
popa
adc
cli
cmp
push
mov
imul
jo
dec
add
bound
sbb
inc
out
and
mov
xchg
pop
mov
add
add
andb
lods
lahf
cli
xchg
xchg
push
sbb
lods
inc
pushf
inc
in
mov
scas
fldenv
hlt
pusha
and
push
test
stc
cmpsb
sbbl
mov
cmp
push
aad
mov
repnz
ret
and
xchg
mov
xor
shll
xor
pop
pop
test
les
lock
in
outsb
xor
adc
ficoms
test
pop
sub
cwtl
adc
xlat
nop
jne
cmp
inc
fldcw
outsl
and
fistpll
imul
push
adc
xor
std
rorb
jmp
imull
sarl
int
adc
fists
cmp
js
pop
fwait
shl
sbb
jecxz
push
loope
mov
lea
hlt
push
sub
jns
mov
std
ljmp
and
and
dec
pop
xchg
and
lret
incb
rcll
inc
sub
add
inc
and
fs
dec
mov
jns
cmp
add
jg
lock
add
push
xor
shl
movsl
fidivs
cld
or
mov
mov
or
cmp
rol
enter
subl
xchg
mov
jae
sub
in
xchg
and
outsl
mov
push
mov
mov
js
xor
out
pushf
popa
shlb
dec
filds
enter
xchg
cli
add
call
sbb
push
cld
sub
insl
add
pop
cltd
iret
xchg
neg
inc
out
mov
jmp
push
push
imul
or
jge
mov
stos
subl
push
jmp
pusha
adcb
ljmp
ja
mov
mov
loope
call
and
scas
bound
mov
cwtl
stos
pcmpgtb
loope
fists
mov
incb
movsl
leave
aad
push
lret
insl
mov
lods
dec
rcrb
lods
push
andl
adc
cmp
pop
sahf
sti
sbb
mov
out
rclb
or
movsl
jb
sub
or
je
or
pop
sti
decb
mov
cld
mov
inc
leave
data16
adc
stos
sub
inc
xchg
adc
loop
xchg
aas
or
push
lea
push
test
montmul
cmpsb
add
arpl
les
inc
xor
andl
paddsw
lea
insl
add
mov
in
popf
jno
dec
pop
ds
shl
rcl
imul
sti
inc
mov
pop
xchg
inc
dec
aam
mov
mov
in
nop
jno
in
cmp
add
sbb
cmp
out
inc
mov
cmp
das
sub
das
xor
inc
xor
ja
add
jmp
sub
cmc
jecxz
or
add
sub
cmc
out
push
mov
adc
push
cmc
push
je
outsl
subl
sbb
cmpl
lods
sub
sub
insl
xor
cs
in
add
pop
push
mov
dec
mov
fists
ljmp
xchg
jbe
xor
jl
mov
dec
push
nopl
in
push
ds
scas
sbb
xchg
stos
jns
push
and
push
sbb
push
daa
lret
dec
dec
push
mov
pushf
daa
xor
push
or
fisubs
inc
aaa
or
jne
push
mov
jo
int
ret
sub
daa
movsb
rolb
adc
inc
push
cmpsl
adc
dec
mov
test
add
popf
bound
clc
push
or
jp
mov
in
mov
mov
ret
sarl
call
ja
cmp
pop
pop
into
fmul
inc
xchg
sbb
xor
jl
jle
mov
into
notb
xchg
ret
mov
adc
and
les
out
mov
mov
in
jle
call
sbb
aaa
rcr
aaa
shlb
shlb
nop
popa
push
clc
es
cmpsb
pop
stc
cmpsb
in
mov
in
jae
in
jae
cmpsb
je
inc
sub
inc
pop
fiaddl
xlat
stc
pop
xlat
aad
fcom
jg
jg
mov
pop
jecxz
pop
jecxz
pmulhuw
pop
imul
insb
xor
xor
filds
shr
shlb
mov
clc
inc
pop
stc
inc
add
add
iret
cmpsb
adc
mov
sub
sub
leave
adcb
and
dec
out
mov
out
jae
out
jae
mov
movq
push
sbb
push
push
xchg
push
push
ret
out
push
ret
or
or
sub
sub
je
aam
mov
ja
aad
das
gs
xor
xor
mov
xor
bound
xchg
jae
xchg
fsubr
xchg
fsub
and
jecxz
popa
in
cmp
cmp
or
mov
les
cmp
les
rol
sub
sub
test
sub
out
imul
nop
push
orb
sbb
push
xchg
cmp
pop
scas
jae
shl
loop
out
sbb
into
mov
mov
je
xchg
pop
push
cli
outsb
repnz
mov
aam
xor
popa
push
xor
dec
jne
outsb
cmpsl
xchg
in
xchg
sub
or
imul
aas
adcl
mov
int3
mov
ds
std
ds
fcompl
fcompl
xor
lods
xor
add
std
gs
and
and
mov
cmc
rcll
aam
cmc
and
xor
xor
lods
jg
lods
mov
mull
sbb
pop
sub
push
lea
ljmp
mov
mov
ljmp
fisttpll
fadds
imul
mov
fnstsw
icebp
arpl
xchg
sub
out
pop
out
cmp
adc
adc
mov
and
add
rolb
incl
out
mov
sbb
call
sbb
xor
aaa
push
sbb
sarb
shlb
repz
push
clc
mov
cmpsb
cmp
in
pop
cmpsl
in
jae
in
jae
or
and
cmp
pop
xlat
aad
xlat
aad
out
aad
movsb
in
jg
pop
xchg
movsb
pop
jecxz
pop
jecxz
jb
pop
imul
imul
imul
jl
inc
je
inc
je
dec
je
mov
shlb
ret
mov
inc
sar
add
inc
add
dec
add
iret
or
iret
sbb
sub
sub
sub
adc
dec
out
adc
dec
out
jae
sub
add
add
xor
add
dec
inc
add
pusha
inc
add
add
add
dec
inc
add
pusha
inc
add
add
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
