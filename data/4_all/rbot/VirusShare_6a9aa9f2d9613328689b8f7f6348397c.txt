push
call
ret
ret
mov
add
clc
daa
test
add
out
jb
or
fabs
add
daa
stos
mov
sub
mov
movsl
test
xchg
adc
ficoms
pop
pushl
pop
sahf
dec
insl
pop
or
sbbl
les
int3
inc
ja
cmp
movsb
xlat
xchg
lahf
in
and
xchg
sub
pop
test
lret
pop
fldcw
dec
inc
cmp
or
insl
and
adc
ret
je
dec
mov
xchg
push
bound
mov
je
imul
cltd
dec
push
pop
insl
sub
push
test
pushf
jmp
fdivr
or
shll
inc
or
ficoml
nop
iret
orl
mov
inc
ss
jns
push
imul
fsubl
fisubrs
pop
sbb
cmp
xor
cwtl
push
mov
into
pop
repz
inc
cmp
int3
cmc
mov
sbb
ljmp
cld
bound
icebp
mov
pop
adc
cmp
loope
xor
sbb
int3
xor
scas
lds
push
cs
ss
call
addb
daa
cmp
or
call
mov
xchg
data16
xor
push
xor
xchg
jmp
aam
ret
cld
mov
cltd
movsb
cld
inc
jmp
pop
lahf
lcall
dec
jo
out
ljmp
stos
ljmp
shrb
add
xchg
out
fnstcw
leave
ror
repz
rcr
sub
negb
xchg
lret
dec
jg
in
mov
push
sub
je
andl
or
sbb
out
adc
push
out
dec
and
pop
mov
aad
cmp
sub
mov
push
jmp
sub
push
cmp
sbb
mov
lods
xor
fwait
cmp
xchg
arpl
and
in
popa
jb
pop
popf
out
pop
jmp
xchg
inc
xchg
jnp
in
int
bound
pop
push
mov
mov
mov
jg
pop
xor
or
and
mov
or
daa
pop
jns
ficompl
adc
mov
add
adc
rcll
jae
add
adc
mov
mov
mov
adc
jmp
push
cmp
cmp
jno
xchg
mov
rorb
inc
mov
ret
pushf
in
int3
inc
push
xor
add
lea
jge
xor
mov
cld
cltd
inc
push
fisubl
fisttps
ret
lock
or
pop
xchg
repnz
test
outsl
roll
inc
jno
xor
sub
mov
movl
cmp
push
cltd
cld
dec
jmp
inc
mov
and
cli
xchg
or
mov
jecxz
sub
popa
jg
jo,pn
ja
mov
dec
fs
test
test
mov
addr16
add
ja
mov
cmp
ret
mov
add
lret
or
add
in
aaa
jmp
insb
mov
rcll
lods
or
push
sub
incb
mov
mov
mov
or
xchg
mov
mov
xor
lods
mulb
popa
cmpsb
jbe
in
fs
enter
jecxz
ss
xchg
xor
jmp
inc
cmpsb
aaa
fiadds
ficoms
jae
jecxz
sbb
push
jns
stos
imul
lea
jp
insb
insb
lods
inc
fs
cmp
dec
xchg
jnp
sti
into
inc
out
inc
in
insl
push
daa
addr16
jns
push
mov
ds
es
aad
loope
loop
push
adc
mov
sbb
pusha
fistpl
test
mov
ds
pop
pop
popf
icebp
xchg
fsubrs
fiadds
xor
jno
jg
loopne
shlb
in
add
ss
push
jb
in
popa
std
int
mov
cmp
dec
mov
jg
mov
cmp
push
push
push
or
inc
or
xchg
inc
mov
dec
pop
mov
cmp
pop
inc
scas
sub
loopne
xchg
adc
mov
pop
outsb
fsubrp
pop
in
in
lcall
inc
inc
adc
popf
call
enter
in
xor
cmpsb
push
aas
cltd
or
js
mov
jecxz
sub
sub
mov
fs
jns
lret
or
mov
aas
ja
xchg
or
push
and
mov
add
movswl
cwtl
out
in
cwtl
rcr
pop
scas
sub
or
out
mov
test
and
cmp
scas
mov
push
sub
nop
das
push
dec
pop
fcmovnb
and
add
sub
or
push
add
jmp
cmpb
bnd
popf
mov
sbbl
adc
adc
mov
int3
mov
xchg
je
nop
ja
call
js
pop
adc
nop
ljmp
add
in
ja
std
cmp
out
lods
mov
test
outsl
adc
scas
add
loop
push
aas
xorb
cmpsl
mov
loope
add
push
cmp
jno
pop
cltd
in
sbbb
lock
lock
jo
xchg
lds
rolb
ja
scas
or
push
adc
xchg
xor
aas
aad
mov
cmpsb
adc
cmp
arpl
inc
ja
sbb
ret
icebp
xchg
dec
inc
mov
or
shr
xchg
sbb
mov
sub
mov
inc
cli
cmpsl
sub
aad
or
pusha
icebp
add
xchg
jge
cli
push
xchg
adc
divb
add
addr16
adc
ret
push
fcomi
call
lods
and
pop
stos
push
push
std
das
and
aas
jl
inc
scas
popf
fsubs
sbb
push
mov
xchg
scas
and
push
sbb
adc
roll
stc
push
mov
xor
in
bound
pusha
int3
arpl
std
fdivrs
icebp
or
stc
cmpsl
xlat
dec
push
xor
shll
imulb
sub
mov
cltd
fisubs
xchg
mov
insb
enter
jle
adcb
mov
push
sbb
xchg
xor
mov
inc
lods
ffreep
sub
popf
pop
cmp
inc
icebp
les
mov
xchg
dec
sbb
addr16
jg
sbb
xchg
sbb
dec
mov
or
es
repnz
int3
lock
pop
int3
cltd
push
les
and
lcall
pop
xor
out
cmc
sti
shrl
lods
pop
xor
in
outsb
cmpsb
popa
mov
sub
sbb
mov
sbb
das
push
add
add
pop
ds
fwait
stc
cmp
test
and
scas
jge
push
push
sub
stos
add
xchg
push
push
pushf
fiadds
pop
fistl
mov
in
mov
aas
out
icebp
or
cmp
fstpl
adc
cli
popa
iret
fcoms
andl
lods
mov
repnz
fiaddl
aaa
repnz
sbb
popa
stc
aam
pop
cmpsb
lret
out
mov
cmp
add
xchg
out
or
aad
stos
push
test
and
mov
adc
jecxz
std
leave
sbb
ljmp
cld
jns
test
mov
aad
aam
lds
mov
clc
bound
mov
movsb
es
sub
xchg
daa
fdivrp
outsb
dec
mov
or
stos
fincstp
mov
xor
or
loope
lret
pop
ja
ds
xchg
out
fdivl
orb
stos
pop
jmp
loope
test
mov
or
sti
xchg
imul
out
mov
sti
sbbb
cmpsb
mov
inc
cmpsl
pop
jbe
adc
mov
out
pop
sub
icebp
stc
adc
scas
ds
iret
pushf
adc
inc
or
stos
les
repz
sbb
cmp
sahf
mov
xchg
dec
lods
push
xor
and
call
es
addr16
sbbl
sbb
mov
push
sahf
sub
je
orb
dec
into
push
or
loop
popa
cmp
loopne
jmp
push
jg
push
cmc
pop
cmp
dec
nop
dec
xorl
xchg
test
pop
push
outsl
add
stos
xor
arpl
add
xchg
xor
fwait
dec
aas
mov
push
divps
enter
add
jmp
lea
xor
or
mov
hlt
sub
test
pop
jb,pn
jp
cwtl
add
out
sbb
sub
scas
pushf
out
gs
shl
inc
jbe
outsl
push
jns
fnstenv
out
pop
add
imul
iret
insl
repz
daa
test
ss
int
sub
aam
adc
popa
xchg
data16
sub
pop
imul
addr16
clc
jae
repnz
mov
hlt
into
and
test
xor
insl
or
cmp
xchg
mov
sbb
test
scas
stos
jmp
pop
popf
xor
push
and
movsb
fs
xor
sub
pop
lret
les
jp
or
gs
or
adc
lock
test
dec
movsb
out
add
push
xchg
jns
iret
add
pop
jg
xor
psubw
adc
es
mov
icebp
hlt
pop
loopne
stos
stos
sahf
repz
int3
test
sbb
roll
dec
jl
negl
call
ret
ds
xchg
loop
div
mov
push
scas
ret
lcall
sub
mov
or
push
les
inc
out
js
sarb
andb
pop
mov
mov
ja
into
movsl
add
test
mov
jne
sar
jecxz
pop
mov
dec
push
add
in
dec
cmp
mov
push
test
push
or
fisubs
into
clc
mov
imul
cmp
mov
push
and
loop
lcall
cmp
ret
clc
inc
xor
test
fbstp
test
ret
lock
mov
outsb
mov
cmp
mov
shlb
pop
jecxz
cwtl
mov
das
dec
add
or
mov
jbe
pop
xchg
mov
in
les
je
add
pop
and
jae
pop
cltd
shll
stc
les
jecxz
xchg
movsb
les
cmp
movsb
xor
inc
push
inc
sub
mov
pusha
lea
sbb
ds
pavgw
or
std
inc
aas
dec
cld
rclb
lret
sahf
xor
jmp
push
cmp
cmpsb
fstps
scas
and
or
leave
pop
dec
adc
in
lret
jmp
fcomi
insl
mov
xor
mov
mov
or
mov
mov
cmc
imul
xor
jg
and
jae
outsb
and
es
jecxz
rorb
xor
pop
jp
adc
int3
lods
xcrypt-ctr
cmpsl
fiadds
pushf
mov
cld
adc
sub
das
or
adc
insb
dec
fadd
push
loopne
mov
fdivrp
cmp
movsb
aam
mov
pop
imul
lcall
mov
jbe
and
cwtl
add
xor
hlt
jecxz
movsl
fwait
xchg
scas
push
jne
xchg
rolb
incl
mov
addr16
dec
je
test
repnz
pop
outsl
add
aaa
cs
inc
mov
js
pop
mov
mov
out
xor
je
lret
outsb
xchg
mov
cld
xor
scas
cmpsb
inc
xor
sub
orb
test
orb
add
sub
mov
dec
icebp
ret
test
ficompl
imul
shrb
xor
in
lock
lcall
adc
and
xchg
es
mov
adc
pop
loopne
add
outsl
jae
leave
fidivrl
cmp
add
mov
nop
jle
inc
jo
jne
sub
dec
mov
mov
add
insl
lahf
xchg
jmp
mov
in
ljmp
mov
cwtl
mov
mov
push
ret
rcrb
mov
imul
mov
add
sbbl
je
imul
arpl
mov
sub
push
lea
pop
stc
ss
push
inc
add
xchg
mov
cmpsb
lahf
inc
insb
mov
mov
push
sub
test
and
iret
fldt
inc
cmpxchg
mov
into
iret
cmp
ja
push
and
mov
jne
inc
into
ja
sub
stos
mov
movsb
jmp
mov
mov
mov
mov
dec
pop
and
inc
shl
ret
sahf
int3
ljmp
and
iret
addr16
inc
and
addr16
mov
fmuls
rep
xchg
outsb
or
movsb
sbb
adc
xchg
and
mov
lahf
fcompl
sbb
stc
std
scas
xor
xchg
sub
or
fucompp
aas
lea
or
sub
jbe
lcall
mov
push
and
inc
cld
rolb
pop
mov
imul
test
mov
mov
sarb
adc
das
mov
int3
push
clc
mov
xchg
add
jno
add
pop
xor
rcl
mov
adc
pop
adcl
lcall
jb
and
inc
insl
mov
lods
mov
addr16
xchg
std
push
cmp
mov
repz
icebp
dec
ret
sub
test
xchg
das
fninit
cltd
jmp
fadds
inc
xor
jb
mov
xchg
lock
pop
scas
es
mov
xchg
and
jb
cmp
movsb
fs
aad
dec
aad
adc
or
sbbl
sbb
inc
fisubrl
mov
mov
mov
lock
pop
stos
je
pop
mov
sar
ss
movsl
fsubr
jbe
fsubrl
jp
pop
mov
sbb
aas
dec
out
xchg
xor
pop
pop
dec
sub
cli
push
aaa
stos
fstpt
test
adc
pop
and
mov
jmp
fcmovbe
les
mov
and
fstps
inc
xor
mov
sub
push
jp
jmp
sbb
xchg
loope
xchg
shrl
cs
mov
fdivl
flds
lock
outsb
fbstp
imul
aad
push
jle
xchg
ja
fwait
jns
push
icebp
insl
popf
cs
ljmp
add
cli
xor
repnz
sub
and
ret
mov
sbb
addr16
arpl
lock
rolb
pop
ffree
sbb
push
cli
in
xchg
and
inc
test
mov
mov
js
jg
dec
xor
add
and
xchg
lods
cmpsb
mov
xchg
bswap
aam
repnz
xchg
cmp
je
jp
sahf
fmuls
mov
movsb
sarb
cmp
xchg
loope
mov
push
mov
lods
push
adc
push
jnp
outsl
js
cli
xlat
lret
xor
popa
shl
add
mov
xchg
pop
mov
jbe
push
jmp
mov
push
push
pop
pop
cmp
and
xchg
js
shl
in
xlat
mov
mov
pop
mov
loop
inc
aad
mov
iret
or
mov
mov
jae
add
jl
test
idivl
ficoms
xor
fidivrl
dec
jne
movsb
pop
dec
mov
fsubs
fldenv
or
push
and
mov
movsb
cld
movsl
aam
stc
xchg
xlat
divl
pop
fcom
cmp
dec
mov
sahf
xchg
xchg
out
movsb
out
std
push
in
xchg
popa
mov
pop
aaa
inc
movsl
ret
mov
inc
sahf
mov
xor
xchg
adc
ret
in
cmp
leave
inc
cmp
jo
xlat
pop
dec
imul
pushf
cmc
jo
popf
ret
push
mov
fildl
push
jp
mov
pop
out
and
dec
xor
push
ret
inc
or
mov
mov
clc
xchg
loop
fisttps
mov
shll
pop
out
fimuls
subl
adc
imul
enter
neg
xchg
push
and
test
sbb
mov
adc
mov
jns
push
daa
ret
dec
imul
jo
dec
mov
push
xchg
movsb
cmc
lea
mov
jl
mov
lret
mov
cwtl
sub
fstpl
mov
dec
or
mov
out
add
cmp
ss
mov
popa
jo
mov
rorl
in
push
jg
adc
rcll
push
int
sahf
stos
leave
in
fnstsw
inc
xchg
mov
cwtl
push
add
je
mov
inc
mov
out
out
mov
ret
data16
ffreep
fdiv
push
cmpsb
std
inc
cmp
int3
sub
icebp
pop
mull
mov
mov
or
sbb
int
cmp
sti
and
pop
push
cmp
mov
add
jae
jns
stc
sub
mov
insb
xor
imul
pop
mov
imul
dec
lcall
ljmp
add
jae
scas
leave
mov
adc
xchg
adc
out
adc
movsl
addr16
push
pop
push
scas
and
jo
int
mov
sahf
mov
mov
lcall
into
or
sub
lods
fildll
sub
mov
nop
pusha
enter
movsb
push
inc
lea
out
popf
pop
or
decl
cmp
push
shrb
insb
repnz
sub
sub
cmc
out
enter
repz
das
stos
arpl
pushf
mov
adc
lock
adc
mov
lret
ja
in
pop
cs
js
pop
fstl
mov
aas
andb
fwait
repnz
or
test
xlat
cli
stos
push
mov
add
jp
cld
xchg
jle
add
inc
cwtl
cltd
or
mov
hlt
lock
inc
out
les
lcall
sub
inc
lcall
jle
mov
xchg
mov
jmp
and
sub
stos
mov
int3
sarl
hlt
jo
jg
iret
mov
xchg
ficompl
in
out
lret
sub
xchg
rcrl
mov
adc
rclb
mov
pop
cltd
jl
std
push
insb
xor
out
mov
out
sbb
shrb
aaa
ficoml
mov
and
fmul
dec
daa
jmp
cltd
cmpsl
and
cmpsl
outsl
xor
push
inc
push
insb
xor
js
gs
sbb
jno
xchg
pop
lcall
in
insl
xchg
and
mov
inc
xchg
scas
jns
clc
dec
int3
roll
fistpll
stos
lea
jmp
adc
push
repz
repnz
pop
sub
push
mov
inc
cmc
cmp
push
arpl
push
push
ret
std
mov
inc
repz
inc
adc
ss
fisttpll
pop
push
rclb
pop
pop
cwtl
mov
cwtl
jo
jae
decl
lods
sub
lahf
xchg
ds
or
mov
dec
push
pop
or
and
bound
sub
fdivl
dec
sbb
xchg
insb
cmp
add
imul
and
adc
inc
ret
sub
in
pushf
mov
push
mov
mov
push
ds
cli
xlat
push
cwtl
test
sub
mul
mov
cwtl
neg
mov
jns
add
xchg
cmp
ret
add
jmp
hlt
aaa
jo
pop
jmp
lock
cmp
mov
test
mov
pop
xlat
mov
xchg
outsb
xchg
cli
out
xor
sub
sub
push
and
pop
bts
push
shll
mov
pop
adc
pop
daa
repz
mov
out
movhps
sahf
xor
ret
dec
xor
pop
sti
jg
nopl
orl
mov
cwtl
in
aaa
addb
and
jmp
cmp
rclb
inc
montmul
cmpsb
inc
xchg
in
lock
cmp
xor
sub
mov
add
stc
and
push
test
sbb
loop
xor
inc
push
add
mov
fildl
inc
mov
sub
mov
jmp
xor
fiaddl
and
mov
cmc
insl
or
js
push
jbe
sub
pop
xchg
adc
int3
push
push
xchg
jle
push
jp
dec
test
jecxz
mov
cld
mov
fwait
sarb
mov
sub
rorl
mov
sahf
adc
and
and
pushf
repnz
pop
jns
fadds
push
je
push
mov
lcall
push
jno
popf
sahf
icebp
outsb
cmpl
iret
and
fs
adc
inc
mov
cmp
sbb
push
jne
fadds
aad
push
add
in
and
mov
inc
jl
adc
dec
pop
push
ljmp
sub
ds
inc
or
or
mov
in
scas
loopne,pn
rcll
stc
inc
xchg
cmp
xchg
pop
sti
dec
mov
sbb
leave
lods
sahf
add
mov
jecxz
mov
std
incl
repnz
add
cmpb
or
and
maxps
lods
mov
loope
pop
lea
gs
jmp
ficoms
or
sub
mov
fidivs
jge
call
push
mov
out
fstps
mov
or
sahf
inc
xor
pushf
aad
push
sbb
stc
lods
ret
lret
data16
xchg
jecxz
ret
in
inc
mov
sub
lcall
out
insl
cs
dec
andb
adc
inc
mov
jmp
out
or
inc
mov
pop
inc
scas
bound
clc
pop
mov
call
stc
stos
mov
add
lds
incb
mov
push
mov
loopne
jl
pop
or
enter
sub
adc
mov
xchg
cmp
addr16
stos
jmp
lret
mov
stos
pop
lret
jmp
cli
ja
dec
or
addr16
mov
cs
dec
mov
nop
and
lods
test
lds
push
loope
mov
mov
out
and
mov
mov
mov
cmc
sbb
xchg
dec
and
jge
add
xchg
aam
js
push
xchg
je
inc
and
in
push
xchg
addb
mov
movsb
pop
jg
mov
and
inc
lret
loope
lods
outsb
inc
mov
rcrl
lret
fadds
aaa
jno
movsl
loopne
dec
sub
call
ret
dec
mov
add
pop
adc
mov
or
sbb
lret
shrl
push
sub
ds
add
testl
das
mov
ss
test
inc
sahf
aas
and
icebp
pushaw
mov
lock
shl
sbb
cli
arpl
sub
or
sub
jae
mov
addb
or
bound
int3
add
or
or
std
ret
mov
ja
adc
xchg
dec
cmpsl
movsl
push
loope
and
ret
mov
sub
add
sub
pop
int3
lcall
push
cmp
xor
cmp
mov
in
mov
push
enter
lods
push
pop
adc
out
xor
lods
lahf
and
inc
mov
in
xor
jns
insl
sub
mov
inc
mov
or
sti
and
js
mov
loope
lea
pop
outsb
mov
outsl
cli
fwait
outsb
sub
aam
add
push
mov
nop
mov
jae
dec
stos
insb
push
inc
jo
inc
pop
cmp
out
outsl
fs
cmc
push
mov
insl
bound
dec
ljmp
adc
push
add
vmulps
jnp
and
sbb
cmp
mov
adc
int3
shrl
push
testb
ss
repnz
daa
popa
arpl
cmp
inc
adcb
mov
inc
repnz
sub
cltd
fstpl
je
fcoml
pop
inc
push
xorl
js
xor
test
outsl
fstl
xorl
test
int
lock
insb
icebp
sbb
rorb
cmp
mov
lret
push
sahf
push
jg
pop
call
xor
cmp
or
dec
pop
aam
fstpl
xor
and
and
imul
in
dec
xchg
and
aam
inc
sahf
mov
jge
inc
mov
cwtl
arpl
es
scas
add
addr16
sbb
mov
mov
pop
jbe
mov
jmp
ljmp
popa
cmp
scas
pop
add
insb
mov
stos
repnz
sbb
cltd
mov
das
or
and
add
inc
cmpsb
mov
push
lret
mov
imul
adc
jb
mov
push
mov
mov
test
sbb
daa
insl
das
fidivs
pop
fistpl
or
push
or
shlb
xchg
js
push
inc
mov
cmp
pushf
cltd
jp
xchg
orb
mov
add
stc
mov
test
arpl
pop
or
add
adc
lcall
imul
mov
lock
insb
clc
adc
cmpsl
pop
pop
in
add
sbb
mov
adc
stc
jmp
inc
mov
jbe
jbe
add
outsl
pop
into
call
and
fsubl
int
xlat
mov
xlat
movsl
or
xlat
add
pop
mov
mov
fistps
clc
jb
jle
xchg
mov
pop
repnz
loope
enter
test
lret
inc
cmpsb
ret
rol
dec
fisubrs
sbb
aad
mov
add
les
and
das
out
mov
stc
dec
adc
inc
ret
xchg
fistpll
aas
mov
inc
pop
test
sub
fstp
mov
sbb
imul
jne
add
pushf
dec
sbb
stc
and
adcl
dec
shl
outsl
neg
sub
mov
inc
or
jmp
and
sbb
xchg
xchg
xchg
lods
in
addl
jmp
dec
add
int
jns
int3
adc
call
jecxz
inc
or
cmp
roll
jge
pop
inc
xor
in
or
loopne
out
int
sub
xchg
jae
jb,pn
push
ja
inc
outsb
jge
test
inc
lods
cwtl
fsubl
stc
sub
inc
mov
cmp
mov
inc
stos
and
xchg
gs
jmp
push
out
dec
loope
push
cld
subl
in
outsl
dec
test
mov
movl
imul
xor
scas
andb
imul
lret
inc
xchg
pop
mov
scas
adc
and
push
sarl
mov
mov
shll
xor
sub
dec
jae
xchg
stos
sbb
mov
into
lock
add
lods
ss
fimuls
lret
xchg
mov
mov
in
fwait
xchg
lret
push
cli
and
aad
ficoms
hlt
es
in
je
insl
dec
repz
sbb
xchg
test
enter
push
shrl
movsl
out
or
and
xor
and
ja
imul
enter
adc
xchg
jp,pn
arpl
out
push
mov
jle
js
or
sub
xchg
cmpsb
loop
adc
dec
out
inc
cmp
clc
pop
sbb
imul
xchg
xchg
adc
popa
dec
or
movsb
lea
movsb
xchg
adc
ja
jno
stc
sarl
cltd
and
lea
lods
sub
mov
inc
notb
mov
lods
mov
imul
movsl
insb
push
insb
scas
mov
mov
push
les
push
xchg
subb
xchg
test
push
sub
pop
popf
xchg
out
rorl
arpl
sbb
lds
dec
mov
push
sbb
sti
mov
pop
and
in
sti
stos
cs
xchg
add
pop
pop
pop
push
ja
insb
inc
jb
out
inc
and
dec
cmp
out
inc
imul
loope
push
mov
sub
jg
xlat
push
jecxz
cmpsb
jp
into
adc
insb
aas
push
mov
push
je
pop
cmpsl
push
faddl
ljmp
lahf
sub
fstp
je
jp
xchg
movsl
outsb
out
insb
outsl
or
inc
jbe,pn
push
dec
mov
out
xor
fldenv
hlt
mov
cmp
mov
into
daa
pop
add
mov
movsb
fwait
sub
test
ss
dec
mov
push
push
daa
mov
repz
cmpsl
pop
mov
int
sub
xchg
mov
outsb
jp
mov
pop
lods
out
test
clc
loop
cld
mov
addb
in
xchg
cmpsl
int3
sbb
ficompl
lahf
xchg
or
rorl
sub
adc
cs
mov
stos
arpl
test
out
mov
push
mov
mov
and
push
mov
or
mov
xor
mov
rcll
dec
push
dec
lods
jno
aaa
lea
in
dec
fistl
stc
jmp
ret
cltd
repnz
lcall
push
mov
adc
fwait
jno
movsl
cmc
dec
lahf
std
pop
mov
inc
ficoml
cmp
mov
dec
mov
js
je
sub
movsb
and
pop
roll
jnp
or
mov
push
sahf
pop
jo
inc
cwtl
xchg
shll
fmuls
pop
xchg
xor
aaa
cmp
xchg
xor
jp
adc
je
fidivl
pop
daa
add
pop
adc
addr16
dec
sub
aaa
int
cwtl
fcoms
dec
sub
adc
mov
test
jae
mov
lds
outsl
cld
mov
nop
adc
sub
xchg
shl
roll
cmp
jb
xchg
mov
dec
pop
pop
out
jmp
sahf
mov
or
inc
test
and
push
loopne
test
xor
ja
and
mov
lods
jae
mov
sti
add
mov
sub
or
adc
pop
and
movsl
icebp
push
and
filds
js
int3
lods
jge
adc
cs
push
hlt
xlat
cs
ret
mov
nop
insb
push
cli
scas
xor
sub
iret
sbb
lea
data16
into
push
lea
inc
push
mov
or
pushl
ss
jbe
aaa
mov
orb
test
push
lods
lret
lea
fnstsw
jno
pop
jb
push
mov
fcompl
dec
jl
cmp
add
inc
mov
lahf
orl
jmp
scas
sti
rcll
pop
sub
sub
scas
jge
decl
jg
push
push
inc
and
loope
adc
lock
les
pop
xchg
imul
mov
inc
in
jle
and
mov
pop
jb
enter
pop
pop
fbld
insb
adc
lcall
xor
inc
dec
push
mov
and
mov
or
pop
js
fs
in
and
mov
call
dec
sbb
jl
cmpsl
mov
fcompl
mov
out
push
popa
pop
ret
dec
imul
fcomps
adc
jno
sub
jmp
xor
fs
push
hlt
add
mov
dec
inc
movsb
xchg
adc
jl
fnstsw
frstor
lods
adc
mov
ror
push
scas
fs
mov
cmpsl
add
jb
iret
mov
xchg
mov
inc
push
mov
lea
fnstsw
dec
sub
mov
jnp
inc
and
pop
rcrb
popa
insl
xchg
pop
inc
sub
lock
pop
push
mov
ffree
gs
mov
dec
rclb
in
mov
adc
inc
cmp
arpl
jno
lcall
popa
push
fisubrs
mov
dec
dec
dec
out
cmpsb
cltd
aam
dec
sbb
adc
adc
pop
es
jae
push
jmp
stc
clc
pushf
mov
jge
dec
lea
mov
repnz
sarb
ficoml
in
mov
dec
sub
and
adc
pop
ljmp
mov
jne
sti
adcl
subb
fsubs
mov
outsl
lods
add
push
popl
faddl
push
divb
outsl
xchg
out
xchg
mov
sbb
sbb
in
mov
jp
popa
outsb
pop
or
xchg
fnsave
cld
cmp
sub
mov
adc
pop
das
adc
cmpsl
dec
icebp
mov
in
push
add
repz
std
sbb
jb
push
xor
mov
in
daa
sub
scas
sahf
nop
ja
movsb
or
inc
xor
pop
inc
aam
mov
mov
insl
ds
sub
pop
ss
cli
inc
jne
mov
xor
or
pop
cmc
mov
cmp
dec
dec
es
push
add
outsl
adc
movsl
sbb
add
jns
or
insl
add
shrb
imul
sub
sahf
sub
negl
pop
mov
js
push
xchg
mov
daa
adc
or
inc
cmp
jne
sub
sarb
int3
cmp
cli
xor
mov
push
mov
into
bnd
test
addr16
inc
out
js
ret
lret
test
inc
insb
dec
in
ss
add
retw
and
and
xchg
loopne
push
mov
pop
xchg
popa
scas
aam
mov
stos
sub
xor
cmp
jo
sbb
fs
mov
mov
data16
jb
daa
ja
daa
popa
jg
lods
cld
xor
hlt
pop
inc
in
out
push
push
push
in
jbe
or
lea
icebp
dec
xchg
xor
mov
push
in
sbb
dec
cmp
xchg
add
in
gs
int
cwtl
aam
dec
pusha
push
fadd
jg
xchg
ficoml
xchg
sahf
outsb
lahf
pop
xchg
push
xchg
and
mov
gs
xchg
out
lods
loope
inc
aaa
test
xor
adc
inc
mov
mov
nop
and
mov
lret
pusha
push
mov
arpl
jg
push
fisubs
rclb
decb
fldenv
movsl
out
cmpsb
test
add
loope
imul
lea
xor
orb
adc
push
lcall
jle
mov
les
xor
pop
jl
das
data16
xchg
addl
jns
mov
dec
imul
pop
adc
fcoms
pop
xchg
and
pop
aas
cli
or
int3
test
push
stos
sbb
fsts
mov
sbb
xor
pop
xor
sub
mov
sahf
push
in
xor
mov
cld
sub
leave
iret
push
lds
icebp
fistpl
pop
lea
cwtl
cmpsl
pcmpgtw
xchg
imul
loop
mov
andb
ljmp
xlat
pop
lock
pop
jp
insb
sbb
fs
push
cmpsl
imul
xor
xchg
mov
pop
subl
out
mov
inc
mov
sub
sub
std
test
xlat
xor
scas
xor
into
sbb
push
jge
inc
push
out
inc
or
mov
in
xor
fildl
cwtl
sbb
push
fildl
mov
imul
and
mov
daa
push
cmpsl
sar
cmpsb
and
out
les
js
xor
insb
dec
mov
inc
cmp
stc
push
out
jge
ret
lahf
ret
xor
rcrb
push
lea
gs
scas
test
dec
das
mov
into
es
adc
and
ret
dec
mov
stos
call
fld
icebp
inc
lods
dec
jnp
das
inc
shl
lds
dec
jge
push
or
lock
les
sti
rorb
outsl
jl
popa
iret
xchg
into
cmp
push
outsl
jmp
inc
mov
mov
ljmp
ret
mov
cli
mov
xchg
lea
ret
loop
lds
xor
ljmp
and
xchg
xor
mov
mov
push
inc
fistpll
jne
ds
je
pop
aad
or
fisubs
std
int3
rolb
mov
ret
stc
arpl
and
pop
cmp
in
cmp
or
mov
lds
sti
sub
aam
adc
push
push
or
dec
push
loopne
aam
insb
insb
mov
inc
pusha
orl
and
aad
push
iret
push
cmpsl
ss
in
enter
and
sub
je
jae
cmp
dec
out
mov
shl
jge
xchg
sub
call
sbb
xchg
xlat
inc
int3
push
dec
mov
jl
add
and
adc
adc
mov
jbe
arpl
lock
or
shll
out
add
cs
xchg
jae
int3
jns
lret
jge
enter
in
std
xchg
aas
cltd
out
in
rorl
push
pop
jns
xor
mov
xchg
and
lret
ja
insb
adc
xor
jno
jnp
popf
cmpb
fsubrl
lcall
jne
jb
fldcw
insl
daa
pop
idivl
pop
mov
ret
or
stos
mov
sti
mov
xchg
bound
push
inc
insb
les
std
iret
in
lret
orl
fsubr
in
dec
leave
and
int
je
outsl
push
loopne
or
scas
sub
test
imul
scas
lea
lret
push
mov
adc
add
jae
lahf
iret
cmpsl
and
xchg
inc
sbb
xor
cmp
push
xlat
jg
and
les
sub
popa
xchg
mov
or
ficomps
int3
inc
out
mov
fidivs
cmp
ljmp
lret
faddp
sbb
push
imul
pop
sub
test
and
mov
adcl
sahf
lea
inc
sbb
ljmp
push
xor
mov
push
and
out
fs
aam
jge
test
shlb
loopne
repnz
xor
test
out
sbb
cltd
popa
jmp
xchg
xor
icebp
mov
je
pushf
cmp
and
lahf
push
mov
dec
inc
shll
in
outsb
int
add
xor
imul
adc
jb
mov
mov
cmpl
fsubrs
out
pop
push
jb
push
mov
add
mov
mov
pop
shr
sub
xchg
mov
loop
mov
dec
test
outsl
je
ljmp
adc
jo
clc
icebp
idiv
scas
cmpsl
sbb
lcall
mov
xchg
hlt
mov
jecxz
mov
sbb
test
scas
movsl
icebp
in
push
je
daa
cmpsl
popa
lret
ret
add
jle
nop
cwtl
push
cmp
pop
pop
pusha
add
ds
daa
mov
and
push
in
adc
mov
sbb
cs
aas
cmc
inc
insb
aaa
mov
add
mov
xor
push
lcall
mov
cwtl
xor
mov
dec
dec
std
and
das
in
mov
andb
or
add
rcr
push
scas
sub
cs
lods
test
outsb
or
xchg
js
cmovo
mov
adc
ss
pop
cmpsb
movsl
orb
mov
inc
fistpll
ja
movb
lods
dec
in
ret
push
je
aas
mov
rol
in
aam
xor
jmp
enter
and
jecxz
adc
arpl
stos
add
imul
lock
sub
out
cmc
icebp
dec
jo
jl
movsb
inc
insb
xchg
aad
xlat
ret
inc
fmull
mov
mov
shll
aaa
xor
aam
mov
adcl
adc
inc
add
jg
push
adc
push
mov
push
rol
push
sbb
out
shrl
inc
pop
cmc
pop
inc
mov
pop
mov
mov
cs
jg
pop
nop
clc
out
cmc
insl
fstps
and
jne
ljmp
outsl
adc
stc
inc
js
and
test
sysret
cltd
jnp
mov
push
add
push
mov
mulb
push
cmp
lret
popa
imul
dec
xchg
mov
push
in
xor
pop
enter
mov
inc
cmp
lds
jg
mov
push
aas
loop
and
ljmp
scas
in
cwtl
xor
or
sbb
int3
into
stos
dec
jp
outsl
test
mov
imul
jns
mov
inc
rcl
fwait
adc
lcall
pop
fs
or
aaa
lea
ja
mov
sub
mov
aad
xor
fs
pop
mov
fcoms
mov
nop
or
sbb
imul
out
cmp
les
or
ret
fcmove
test
jne
and
push
and
movsl
aaa
push
cld
sub
cwtl
inc
mov
dec
xorb
xor
mov
into
sub
jno
fwait
pop
not
mov
xchg
stc
pushf
add
bound
sahf
mov
add
mov
cld
mov
pop
test
sbb
movsb
scas
nop
mov
arpl
xor
inc
cltd
push
dec
movsl
scas
push
xor
pop
repnz
push
inc
pop
jge
leave
cmpsl
nop
push
das
mov
pmullw
sbb
mov
jp
jo
pop
mov
dec
mov
insb
std
pop
not
loop
fiaddl
mov
pop
not
cmp
mov
fwait
int3
lahf
mov
jmp
imul
xor
mov
sti
aad
lcall
arpl
add
push
in
mov
push
outsb
std
arpl
cmp
adc
int3
mov
enter
daa
and
out
dec
inc
push
mov
push
imul
scas
add
cld
xlat
mov
push
inc
mov
push
dec
aad
loop
dec
push
mov
mov
xor
je
lret
test
sub
sub
mov
mov
popf
mov
cmc
inc
and
sbb
imul
sbb
mov
xor
push
mov
std
sbb
jne
jp
jo
pop
push
or
orb
or
pop
mov
lahf
mov
inc
gs
shr
jle
jae
stos
jg
gs
xchg
out
loope
mov
movl
mov
outsb
xor
or
popa
pop
je
dec
or
cmp
insb
arpl
std
leave
inc
pop
shrb
je
stos
stos
add
lret
jo
lock
inc
test
jge
mov
push
sbb
pop
cmp
sub
push
push
cmp
inc
cwtl
xor
fcmovne
test
mov
pop
mov
scas
lock
xor
push
push
inc
xchg
sbb
cmp
jmp
cwtl
lds
nop
mov
push
adc
faddl
add
push
test
sub
or
aaa
inc
pop
idivl
int3
cmp
testb
lods
push
out
mov
ret
outsl
pushf
inc
pop
dec
stos
cmp
pushf
mov
cmpsl
mov
inc
mov
pop
das
mov
sahf
mov
mov
int3
ljmp
scas
rclb
pop
mov
out
in
sbb
mov
jno
push
cwtl
jo
push
mov
push
cmp
mov
cmpsb
jno
daa
test
out
sbb
out
call
or
lock
outsb
lea
jb
repz
cmc
mov
inc
cld
jg
sbb
sahf
ss
mov
ljmp
cli
xchg
cmp
test
mov
xor
jbe
xor
jle
test
mov
mov
jmp
push
push
adc
mov
xor
scas
pop
clc
sar
bnd
cmpsl
das
mov
icebp
xor
rorb
adc
mov
stc
sub
jecxz
pop
mov
mov
cmp
inc
xchg
shrl
les
or
scas
pop
jecxz
shlb
pusha
pop
jg
xor
inc
sub
inc
sub
xchg
lods
jne
negl
inc
add
dec
test
or
adc
icebp
push
mov
out
inc
test
lret
mov
fiadds
out
loope
sbb
mov
push
pop
pusha
gs
loopne
and
add
inc
rcll
stos
rcll
insl
lret
dec
movsl
call
and
es
in
mov
fldl
xor
fdivrl
adc
lock
jbe
mov
cld
cmpb
mov
imul
cmp
sahf
lds
imul
insl
cmpsl
stc
jle
loopne
int3
iret
xor
icebp
bound
cwtl
inc
mov
sbb
jmp
cmp
outsl
adc
outsb
call
jno
mov
add
daa
jno
in
mov
mov
mov
lret
daa
jne
in
pusha
insb
mov
mov
inc
adc
rclb
pop
pop
or
mov
sbb
incl
jge
out
es
push
push
imul
add
pop
xlat
push
js
addr16
hlt
adc
adc
iret
push
dec
pop
mov
mov
dec
stc
adc
outsb
xor
pop
push
fs
rcll
ss
jg
lret
sub
cmp
inc
mov
lret
pop
mov
lods
or
xor
or
jae
cmpsb
xor
inc
xchg
and
in
imul
hlt
fsubs
lea
add
imul
sub
mov
dec
test
ljmp
push
sbb
out
cwtl
fsubl
ficomps
repz
mov
or
mov
push
mov
int3
mov
fiadds
imul
sbb
xor
loope
fwait
daa
movsl
jmp
call
mov
add
setl
popa
sti
jno
lahf
outsb
cld
or
jecxz
mov
test
sarl
xor
sbb
mov
lock
shrl
jnp
cmp
sti
in
ja
mov
jno
stc
icebp
out
insb
in
popa
push
push
pop
xchg
dec
lea
rcll
aas
mov
sub
push
sbb
shll
pop
jg
xlat
arpl
inc
fisubrs
cwtl
mov
pop
mov
loop
add
sub
dec
dec
or
scas
jmp
dec
sbb
adc
data16
out
fnsave
std
aam
je
jno
addr16
into
xchg
cmp
nop
aam
mov
test
shl
adcb
push
mov
mov
inc
jmp
mov
push
gs
cmp
dec
jne
inc
jmp
dec
push
push
rcl
push
ljmp
push
add
mov
and
inc
jo
mov
adc
ss
movsl
out
adc
xor
mov
ret
pop
loopne
inc
push
mov
cmp
xchg
jnp
adc
xor
repnz
pop
xchg
jmp
pop
insb
xchg
add
js
imul
insb
sbb
inc
pushf
popa
loope
repz
addb
add
mov
rolb
in
push
xchg
sub
out
mov
jbe
lods
cmpsb
cmp
sub
sti
shll
push
popf
mov
inc
out
mov
cmp
ja
cmp
leave
jmp
pusha
mov
add
inc
jne
dec
je
push
test
mov
fidivrs
dec
lods
inc
lahf
mov
and
iret
push
scas
mull
lahf
inc
pop
stc
ljmp
xor
pop
xor
mov
inc
mov
stos
cmp
aam
pop
sbb
xchg
pushf
mov
inc
pop
mull
ss
fisttps
testl
xor
lods
xchg
sub
in
pop
jb
jb
mov
imul
shll
mov
lods
lcall
xor
fldcw
pop
xchg
stos
xchg
clc
mov
push
fimuls
push
fincstp
mov
jbe
lock
nop
in
pushf
outsb
fs
mov
pop
hlt
lcall
sarl
aaa
inc
sbb
inc
dec
gs
stc
icebp
lds
and
repnz
dec
jmp
pusha
sbb
sbb
or
movb
outsl
aad
xor
dec
dec
cld
rcl
je
sbb
pop
and
cmp
adc
push
aad
imul
fiaddl
sbb
push
cmpl
mov
aaa
jae
pop
inc
pop
mov
dec
xor
insb
jg
jg
inc
lds
mov
xchg
and
cmp
leave
pop
ret
mov
mov
into
lods
cs
sub
dec
mov
aam
lahf
mov
sahf
mov
and
mov
insl
mov
pop
scas
xor
push
dec
and
jle
cmp
outsb
cwtl
cmc
dec
xor
mov
dec
rclb
add
jg
out
int3
loope
ret
xchg
imul
inc
mov
aaa
sbb
sbb
cwtl
mulb
pop
xlat
addr16
mov
jns
inc
imul
mov
cmp
xor
scas
into
scas
fwait
sbb
movsb
jnp
int
cmp
into
mov
imul
fsubrs
mov
or
insb
pop
pushl
leave
insl
or
test
pop
addr16
sbb
pop
dec
jmp
idiv
dec
int3
icebp
or
mov
lahf
dec
and
push
pop
sahf
sbb
clc
dec
jo
mov
outsl
loop
or
pop
mov
out
testl
stos
shlb
and
pop
cld
jbe
notl
bound
mov
cli
lret
pop
sub
inc
adc
xor
lock
push
inc
repnz
inc
cmpsl
std
jnp
out
inc
mov
ret
adc
fs
imul
mov
push
mov
testl
dec
aam
or
jp
xor
imul
stc
std
add
cmp
xor
pop
dec
stos
jle
ret
arpl
and
mov
les
jnp
std
sub
dec
jmp
loope
push
push
mov
addl
mov
rcrl
nop
sbb
adc
and
movsb
cmp
fadds
mov
dec
mov
pop
mov
and
imul
daa
repnz
cmp
outsb
push
inc
les
mov
push
in
sub
hlt
insl
lret
sbb
sahf
xor
xor
fcomps
inc
fisttps
arpl
fmull
jae
jl
mov
fdivrs
lock
jl
aam
mov
xchg
mov
mov
add
notl
lods
cmp
pop
push
sub
aad
daa
push
push
mov
ret
adc
js
das
push
sub
mov
mov
push
gs
insb
sub
setge
loop
dec
je
pop
lret
xlat
and
es
jbe
mov
vcvtdq2pd
sub
dec
leave
mov
rcl
xchg
adc
shlb
sub
add
test
cmc
ficompl
or
xor
cmp
sub
pop
jg
test
data16
mov
jle
jg
mov
mov
xchg
sub
stos
mov
rcr
bound
fsubrl
jp
imul
adc
cmp
notb
fisubrl
jp
aad
in
bound
ret
jge
fldl
fisubl
cmp
loope
in
jmp
lds
out
or
mov
ret
aaa
and
negb
mov
add
lods
push
aad
jae
push
pop
inc
push
leave
adc
xchg
movsb
cmpsb
cmp
jb
cld
xor
cltd
incl
mov
add
dec
xchg
outsb
mov
xchg
push
sarb
mov
lahf
out
jmp
je
and
xchg
sbb
in
das
call
adc
and
push
call
jnp
mov
or
rorl
or
dec
mov
or
bound
pop
repz
popl
inc
test
imul
in
pop
popa
adc
jl
icebp
les
ds
out
aaa
mov
insl
call
gs
test
sbb
in
jno
in
xor
lea
fldl
out
aaa
or
pop
sub
or
in
out
adc
push
nop
inc
pop
pop
push
ss
aaa
jmp
sbb
inc
lret
mov
popf
lea
enter
xchg
push
xchg
das
mov
into
inc
int
sub
popa
mov
rcr
data16
mov
lods
movsb
adc
mov
push
push
out
pop
mov
es
rclb
ljmp
data16
push
xor
lods
or
cmp
inc
and
mov
into
mov
adc
jo
xor
js
or
shrl
dec
aas
sub
daa
movsb
cmpsl
lea
shl
nop
cmp
jmp
jmp
ret
jbe
or
push
xlat
mov
xor
jne
xchg
clc
iret
arpl
sub
fsubl
jno
pop
mov
and
inc
sub
cld
xlat
xchg
jno
ljmp
lea
fistps
push
sub
int
idivb
xor
lods
push
mov
jecxz
data16
scas
popf
les
push
out
add
cs
int
outsb
rcll
aas
lcall
aam
sbb
dec
add
aad
fisubs
adc
ret
or
cmp
sbb
andb
jg
adc
inc
inc
in
ljmp
mov
mov
xchg
dec
gs
rcll
mov
mov
xchg
stos
movsb
adc
push
inc
lcall
or
mov
fwait
inc
fsubrs
cmpsl
add
test
mov
mov
xor
pop
lahf
lcall
add
pop
mov
test
inc
js
subl
scas
mov
cmpsb
out
adc
pushf
xchg
xlat
cmp
push
mov
sub
jns
orl
pop
lcall
inc
push
daa
cmp
andb
jl
sub
pop
leave
mov
or
loop
push
fcomip
cltd
cli
or
dec
sub
add
mov
enter
test
jge
push
adc
into
popa
jne
mov
sbb
fildl
aad
cmp
test
iret
dec
mov
cmp
lds
mov
mov
mov
cmc
fimull
movsb
stc
lret
adc
int3
add
pusha
loop
xlat
sub
jl
ror
gs
pop
fldl
fldenv
fxch
or
xlat
mov
int
icebp
jge
lods
xlat
or
sbb
add
sub
mov
js
push
out
lcall
call
jge
imul
sub
jl
aad
add
std
in
scas
lea
in
or
pop
pop
ljmp
pop
icebp
pop
lret
sbb
xchg
inc
aad
outsl
and
cs
cltd
sarb
aam
shll
rcrl
mov
and
jle
inc
orb
in
sub
fs
nop
or
sti
dec
aaa
pusha
in
push
jecxz
imul
iret
pop
outsl
orl
insl
ret
jns
mov
xor
and
xchg
push
mov
mov
xchg
int3
das
or
lock
push
sub
imul
popa
es
xlat
push
aam
mov
xor
je
jbe
loop
mov
mov
cwtl
rolb
push
push
cld
outsl
movsb
inc
add
and
cmp
icebp
lret
cmp
push
inc
mov
xchg
jno
push
xchg
rcrb
adc
pop
mov
daa
adcb
mov
adc
xchg
mov
xchg
mov
sbb
mov
mov
push
adc
dec
xor
xor
pop
mov
jo
shrb
mov
mov
rolb
imul
push
xchg
shlb
test
shl
adc
mov
xchg
inc
cmp
cmp
sbb
data16
pop
push
jge
xor
addr16
out
addr16
in
sbb
mov
xchg
and
lds
int3
lods
daa
pushf
nop
cmp
pop
ret
fstpl
lods
mov
xorl
insb
and
popf
xor
mov
scas
fs
inc
movsb
movsl
mov
mov
mov
scas
pop
jbe
insb
add
pop
fsub
dec
lods
imul
lea
mov
dec
outsb
das
fdivs
insb
ljmp
das
pop
adc
imul
incl
or
dec
fs
into
das
dec
mov
fdivrp
dec
shlb
sbb
insl
inc
adc
fmuls
mov
sub
xchg
ljmp
push
sbb
xchg
push
jmp
jbe
ret
jae
cmc
push
js
pop
loope
addl
lret
push
push
xor
dec
or
aaa
popf
and
jg
call
cmp
popf
push
xchg
jmp
and
or
and
jmp
cmp
or
cmp
fstpt
rorb
cltd
adc
int3
dec
in
test
test
cmp
or
or
in
xor
subl
add
xchg
push
cmpsb
pop
add
mov
int
test
or
fiadds
sub
push
sahf
xchg
push
loop
sub
push
or
xor
adc
lea
lds
mov
push
inc
icebp
outsl
xchg
sbb
ret
scas
rorl
bound
int
xlat
inc
adc
sbb
cmpsl
jae
rcl
add
sbb
popa
cmpb
pop
and
or
cmpsb
lea
xor
dec
adc
test
push
in
jmp
mov
lretw
fistpll
imul
adc
xor
xlat
mov
ret
push
pop
push
rcl
xor
leave
imul
xrelease
out
inc
scas
in
jle
daa
add
jmp
pop
lds
lret
pop
adc
pop
xor
push
jl
xorb
adc
imul
push
dec
xor
int3
add
scas
cmp
imul
clc
aam
push
pop
fstps
iret
cld
lds
mov
adc
push
xor
int3
aaa
dec
loop
sub
inc
pop
pop
mov
lods
dec
movsl
lds
dec
inc
jle
imul
addr16
lret
outsb
jle
shr
cmpsl
das
xor
inc
dec
addr16
data16
aad
aas
insl
mov
sub
out
imul
leave
shlb
inc
jmp
sub
shl
stos
mov
lock
loopne
adc
sbb
sarb
adc
data16
push
inc
pop
adc
or
cmp
aaa
sub
ja
sti
mov
gs
pop
xor
push
int
loop
nop
call
xorb
pop
mov
or
daa
out
cmc
cmc
adc
mov
mov
pop
xor
dec
in
jns
cmp
xor
cmp
or
inc
pop
push
xchg
outsb
into
jle
pop
and
enter
notl
sbb
popf
lahf
stc
ret
mov
dec
add
gs
in
fnstsw
mov
fwait
mov
cwtl
addb
inc
jae
mov
mov
inc
jne
inc
mov
out
cmp
dec
jg
xor
pop
push
aas
xorl
mov
in
pop
repnz
push
dec
sbb
mov
push
or
divl
mov
xor
ret
sahf
push
icebp
sti
dec
es
ret
mov
sbb
cs
cs
imul
inc
or
mov
adc
xchg
jo
mov
mov
jnp
xchg
push
sub
pop
rorl
sub
ret
pusha
xor
or
aam
xor
inc
add
and
stos
lods
and
shrb
sti
jecxz
or
lahf
and
jbe
mov
pop
push
mov
ja
fadd
out
mov
pusha
int
fldl
ret
addr16
xor
mov
pop
mov
mov
add
lahf
add
mov
push
pushf
imul
scas
pop
orl
and
call
jge
xor
cli
mov
ljmp
sbb
repnz
mov
fadd
cmp
jmp
pop
adc
out
popf
pushf
ret
and
mov
xchg
jo
jb
loop
fucomi
jae
fmul
dec
shl
iret
lock
in
mov
sahf
loopne
cmp
cs
int3
jle
leave
in
push
ljmp
mulb
inc
mov
push
hlt
scas
push
pop
xchg
mov
pop
aad
fimuls
fs
std
mov
in
dec
jmp
sub
and
mov
in
sbb
mov
movsl
push
inc
iret
rcr
sahf
sub
fucompp
lock
mov
push
fimull
pop
sbb
or
scas
sbb
add
jns
shrb
or
repz
dec
dec
insb
addr16
lret
int
xlat
cmp
movsl
popa
push
mov
repz
pop
inc
cmc
mov
cmp
or
xor
test
or
sbb
bound
fwait
out
pop
inc
dec
cmc
popf
jbe
push
movsb
mov
xchg
mov
inc
add
nop
push
aam
pop
pop
mov
idivl
lcall
cmp
sti
dec
mov
into
test
and
xlat
hlt
jge
jns
jg
orl
jo
mov
enter
aas
xor
and
lods
sbb
xor
cmp
hlt
test
dec
push
lea
sti
jg
xor
cmp
lds
inc
enter
inc
dec
sub
and
sub
push
push
cmp
ficoml
add
cmp
jge
filds
pushf
icebp
and
adc
loopne
in
cmp
in
cli
xchg
dec
mov
cmp
lea
jge
cmp
mov
dec
hlt
imul
inc
inc
bound
jno
push
mov
cmp
xchg
addb
lret
rorb
imul
sub
out
push
add
add
pusha
mov
mov
addr16
mov
jmp
ds
das
xor
fsubr
push
mov
pop
lret
cmc
push
mov
mov
dec
xchg
mov
jae
pop
pop
xchg
subb
ret
sub
mov
lea
inc
xor
test
push
push
leave
pop
cmpsb
sub
push
jg
lahf
test
test
sbb
add
xchg
lcall
adc
push
xchg
movsl
and
jge
jns
push
xchg
xchg
sub
sub
mov
insl
test
scas
cltd
mov
and
out
pop
or
and
decb
or
fsts
jne
sbb
or
jl
and
sahf
call
push
std
dec
je
pop
push
mov
push
cmpsl
fnstcw
out
xchg
pusha
in
sbb
out
out
inc
sbb
jmp
sti
push
clc
shll
sbb
jnp
mov
or
in
stos
aaa
data16
dec
push
xchg
pop
pusha
arpl
popa
dec
hlt
arpl
mov
inc
push
lret
enter
xchg
adc
shll
add
shll
imul
push
push
sub
popa
popa
pop
loope
iret
insb
xchg
and
mov
ret
adc
adc
jecxz
jno
popf
in
ds
and
ds
ficompl
imul
outsl
imul
out
mov
jmp
aaa
mov
mov
aam
adc
shrb
or
adc
js
lods
inc
xor
mov
adc
ficoml
jle
push
xchg
ds
xlat
test
jae
sub
iret
adc
ret
cmpsl
jecxz
test
call
loope
jbe
xor
ficompl
lret
pop
mov
lret
jo
push
rclb
sbb
fmull
mov
push
mov
fcoms
mov
shrb
mov
push
sbb
dec
push
inc
adc
faddl
push
outsl
or
jnp
in
neg
sbb
push
loopne
lcall
test
mov
leave
call
test
add
mov
movsl
mov
js
sbb
int
jo
fstpl
loope
push
outsl
stos
adc
push
mov
ltr
push
push
insl
mov
xchg
push
das
sbb
xchg
jbe
push
jle
lahf
xor
insb
inc
sub
dec
push
mov
cld
arpl
xchg
mov
pop
stos
inc
push
ja
cs
jge
xorb
push
mov
daa
loopne
pop
test
pop
scas
pop
out
adc
pop
imul
jbe
out
cmc
fdivl
mov
and
int3
lret
adc
xchg
les
dec
stos
gs
xchg
iret
pop
jnp
adc
sub
fidivrl
pop
cs
xchg
jbe
cmpsb
add
jb
xchg
pop
cmp
loop
aad
ss
xor
or
dec
or
inc
ljmp
xor
push
subl
push
push
aas
pop
mov
pop
jle
jbe
orl
faddl
mov
xor
sub
jge
rorb
inc
mov
cwtl
lret
adc
mov
and
xor
ss
and
jmp
or
cmp
inc
push
sti
jns
jg
mov
and
cli
in
and
mov
stos
pop
repnz
in
clc
test
loop
push
push
insl
roll
call
mov
sbb
sub
ss
mov
lods
xchg
jecxz
loopne
mov
clc
add
mov
push
push
or
mov
js
add
add
lahf
and
pop
cwtl
imul
repnz
gs
fstpt
mov
into
mov
lods
pushf
or
xchg
push
xlat
xor
mov
push
pop
jns
test
cld
fisubrs
iret
shlb
xor
pop
out
pop
sarl
jb
shll
push
insl
cli
cwtl
ficomps
push
outsl
das
lea
add
sub
idivb
mov
xchg
icebp
or
push
pop
mov
test
aaa
or
dec
xor
ss
jae
xchg
outsl
clc
orl
cli
imul
nop
xor
dec
mov
or
arpl
sbb
mov
fbstp
pushf
mov
nop
mov
dec
aam
pop
movsb
rcll
or
pop
pop
adc
lahf
mov
jno
out
sarb
jno
dec
mov
cmp
push
fnstenv
arpl
enter
dec
test
loop
or
dec
cmp
loopne
hlt
push
loopne
jns
xchg
aas
sub
in
push
pop
or
mov
insl
ficoms
sub
dec
fcmovne
scas
or
mov
mov
jg
bndstx
add
addr16
imul
daa
and
push
push
pop
jno
stos
pusha
jno
push
fisttpl
lret
repnz
sub
adc
sub
imul
push
std
jbe
cmpsb
sub
loopne
sti
aad
add
fstpl
ret
or
mov
fsubrs
adc
sub
sub
or
inc
movsl
xchg
pop
rcll
push
xor
sbb
test
inc
inc
cmpsb
andb
lods
jl
xchg
adc
shl
fbstp
jb
dec
lcall
sahf
cmp
pop
scas
test
arpl
test
shlb
sub
adc
inc
and
aaa
negl
pop
mov
daa
adc
push
in
mov
mov
xchg
cmp
stc
in
imul
mov
lea
mov
cmp
es
loope
mov
fcoms
add
daa
out
jbe
idivb
jp
icebp
cltd
adc
data16
sbb
pop
jl
scas
sbb
pop
lock
pop
sub
push
adc
adcl
inc
add
iret
jl
ss
push
jne
out
repz
into
inc
sbbb
call
inc
cmp
and
push
jmp
cs
pop
jae
jg
stc
xchg
popf
xchg
or
sub
test
aad
or
add
or
push
mov
cmpsl
inc
mov
pushf
cmpsb
leave
out
out
lret
aad
mov
push
jle
int
mov
and
mov
jb
xor
pop
test
lret
in
dec
hlt
int3
push
jmp
enter
mov
out
mov
in
cmp
sbb
out
push
out
idiv
sub
jmp
sub
mov
mov
sbb
sub
xchg
xorl
sub
loop
data16
nop
cmp
sub
cmp
jne
ss
negl
rorl
testb
mov
lfs
inc
mov
dec
sbb
imul
test
dec
xor
cmp
inc
mov
bt
sar
adc
inc
or
sub
mov
jmp
fiaddl
mov
sbb
inc
xchg
xchg
subb
lea
dec
icebp
fmulp
fsub
mov
in
lock
mov
sub
mov
dec
sar
ret
adc
xor
adc
ret
popl
xor
inc
push
stos
ds
and
add
icebp
inc
clc
pop
sbbl
es
sub
mov
int3
test
inc
adc
fcmovnbe
es
scas
jle
mov
sbb
add
jns
dec
pusha
mov
mov
outsl
push
lods
jno
mov
sub
sbb
test
mov
sub
add
dec
rorb
mov
sbb
jmp
fstpl
into
cld
sbb
xchg
push
test
in
cli
mov
push
adc
xor
pop
mov
and
popl
testb
push
mov
in
js
fildll
xchg
dec
stos
mov
inc
addr16
push
and
incl
adc
out
pop
push
xor
push
test
das
sbb
les
mov
xchg
sub
cmpb
or
out
stos
xchg
aad
repz
cmp
insb
xchg
pop
jecxz
incl
lea
sbb
arpl
pushf
fs
xchg
push
ljmp
imul
adc
aad
not
fildll
xor
ret
xchg
out
and
in
out
lods
sbb
cmp
sbb
ja
jae
mov
sbb
pop
cmpb
int3
hlt
out
and
iret
xchg
stc
sbb
pusha
xor
fdivrp
mov
mov
fsubrl
stos
jo
push
jg
js
pop
cli
xor
aam
fs
jle
xor
je
push
push
xchg
sar
test
cmp
push
adc
mov
sub
movsl
out
repz
sub
sbb
xchg
into
femms
xchg
vsqrtpd
jae
fs
or
inc
les
ret
mov
leave
call
test
xlat
popa
and
mov
int3
subl
fisubrs
repz
sbb
push
sub
push
and
leave
repnz
rol
int3
pop
mov
adc
loope
pop
mov
and
mov
lret
push
sbb
lret
and
fs
xchg
repnz
nop
jecxz
out
lods
jecxz
and
inc
jge
mov
adc
xchg
stc
pop
cmp
jge
mov
dec
cmc
sub
punpcklwd
push
add
popf
lods
mov
pusha
sub
pop
aad
jmp
add
or
jb
inc
fcomps
ss
out
outsl
sahf
mov
test
idivl
mov
shrb
inc
mov
or
push
aaa
out
sahf
imul
jmp
dec
fcoms
nop
pop
or
inc
cmpl
repz
mov
nop
pushf
loop
sub
add
or
mov
xchg
mov
loop
mov
inc
xchg
jbe
in
idivl
pop
push
mov
or
cwtl
pop
mov
scas
sbbl
mov
std
inc
icebp
ret
jo
cmp
or
sbb
pop
je
and
pop
scas
or
and
cld
int
out
push
inc
cmp
sub
bswap
aas
push
clc
mov
and
cmp
addr16
mov
or
push
sbb
xchg
mov
jb
out
shlb
outsb
xor
sarl
push
test
testl
adc
fsub
aam
cwtl
jns
xchg
sarl
or
outsb
lds
dec
adc
mov
and
inc
les
sub
or
jge
pop
sbb
daa
xor
test
mov
push
add
fsubl
push
xchg
xor
mov
mov
pop
push
int3
mov
adc
mov
repz
mov
in
or
popf
dec
xor
popa
or
cmp
push
hlt
adc
add
mov
icebp
adc
jg
push
lds
out
cmp
mov
sbb
mov
mov
sbb
dec
sub
sbb
mov
in
aas
sbb
pop
mov
scas
cmp
cs
pop
in
repnz
pushf
les
imul
out
lods
and
sub
cs
fildll
cli
test
imul
mov
es
pop
lods
and
fldenv
mov
cmpsb
mov
jbe
mov
std
icebp
shlb
aaa
adc
pop
sti
sub
push
mov
int
clc
adc
sti
aad
repnz
push
int3
lds
hlt
bnd
pop
add
pop
and
fnstcw
in
loop
cmpsl
std
roll
mov
dec
mov
or
adc
lea
mov
xchg
shlb
jnp
mov
rcrb
mov
fistl
xor
or
dec
in
cmpsl
jl
jnp
mov
lret
dec
jl
imul
cld
dec
das
add
push
sub
repz
out
ret
cs
fisttps
pop
iret
cmp
in
ljmp
fs
sarl
loopne
inc
inc
cmp
mov
or
xchg
pop
xor
shlb
addr16
jp
out
mov
insb
xchg
imul
jmp
jns
clc
jno
inc
ffree
loope
sub
int
mov
sub
cmpsb
scas
mov
pop
xchg
rcll
out
std
lret
ss
jmp
scas
sbb
dec
mov
mov
cmp
js
pop
xchg
clc
sbb
inc
fwait
sbb
rorb
mov
dec
repnz
adc
sar
pop
push
sbb
xor
jae
clc
mov
or
inc
fs
pop
or
enter
jo
fs
das
ret
sahf
cmpsb
lcall
loop
jmp
add
clc
jo
cmp
ret
mov
dec
ss
cs
or
jbe
pusha
and
adc
andl
es
lock
jne
pop
test
mov
mov
cmp
pushf
xchg
mov
cmpsl
rclb
sub
pop
insb
push
std
aad
sub
add
negl
dec
sbb
jecxz
iret
mov
lock
add
rcrb
push
inc
sbb
push
inc
movsb
push
leave
mov
movsl
xchg
shll
inc
push
cld
dec
inc
mov
sbb
push
jle
andl
xchg
popf
add
filds
jp
mov
xor
push
in
lds
push
movsb
insb
fwait
dec
jle
cmpsb
ljmp
xor
dec
pop
imul
jmp
or
pop
xor
xchg
nop
loope
lcall
mov
pushf
sub
mov
scas
fistl
jmp
pop
pop
ss
sti
mov
sub
or
push
sahf
inc
cli
pop
push
ljmp
sbb
aad
inc
fcmovnu
sarb
lret
push
adc
mov
mov
dec
inc
test
pop
jmp
xchg
adc
ret
pop
pop
adc
std
add
scas
mov
xor
sbb
adcl
push
xor
fadds
adc
imull
or
cmpsl
jnp
icebp
fwait
ja
push
cmp
adc
iret
xchg
cwtl
cs
adc
sti
aam
xchg
stc
xchg
lods
mov
and
mov
push
out
inc
mov
sub
popa
lcall
mov
jmp
cmpsl
lods
andb
ja
inc
inc
lcall
ror
clc
imul
and
jg
jns
xchg
xor
insl
scas
sbbb
and
lods
sbb
lcall
lods
and
push
or
sahf
idiv
lock
sbb
mov
outsb
ret
outsb
lret
sub
add
sbb
inc
popf
fistpl
xor
das
sbb
xlat
or
pop
fs
add
movsb
stos
out
sbb
scas
push
inc
xchg
xchg
jns
in
int3
cmp
lea
or
lock
adc
ss
sbb
pop
sbb
jb
cmpsb
movsl
fucomip
adc
inc
sub
mov
popa
js
jae
sbb
loopne
stos
cmpl
dec
cwtl
xor
or
pushf
lods
scas
pop
sahf
fdivl
adc
out
mov
add
repz
xor
jno
fsts
add
ret
in
ss
sbb
ficoms
repnz
or
add
dec
popf
sahf
shl
mov
jecxz
js
aas
stos
sbb
push
sahf
sbb
repnz
cmpb
fdivr
jns
daa
sbb
outsb
jo
aad
inc
in
daa
lods
stos
rolb
push
adc
xlat
mov
fs
sarb
loope
enter
mov
or
pop
mov
cmp
inc
xor
fwait
sub
fisubrl
sbb
add
orl
aaa
imul
jmp
pop
into
loope
cs
and
repz
sarl
jg
jmp
add
and
and
fistl
xchg
ret
pop
mov
jbe
xor
scas
enter
lret
mov
mov
adc
int3
mov
fdivs
fsqrt
mov
shlb
cld
inc
push
sahf
inc
loopne
cmp
xchg
and
clc
in
adc
test
xchg
fwait
jle
fistl
mov
ret
hlt
pusha
jle
loop
or
pop
fdiv
add
xchg
loop
movsb
mov
ss
jle
mov
into
sub
inc
mov
aam
and
inc
and
pop
test
push
push
cltd
xchg
xor
sub
fnstcw
dec
push
push
adc
adc
xchg
inc
mov
jmp
out
into
lods
cs
lcall
mov
lock
sub
rclb
xchg
jo
push
data16
xor
mov
pop
mov
add
sub
hlt
xchg
leave
std
mov
rcr
mov
hlt
inc
js
ljmp
jbe
sbb
lea
int3
jne
movsb
lock
mov
push
push
leave
sti
repnz
cwtl
and
cmp
sbb
mov
push
push
std
imul
xor
inc
sub
pop
lods
pop
inc
cmc
ljmp
lds
sub
jns
stos
mov
in
arpl
outsl
int
xchg
std
cmc
cmc
rolb
out
ss
xor
aas
loop
jns
pop
rcrl
xchg
mov
out
ljmp
cld
sub
ds
mov
fnsave
mov
divl
sub
popa
das
iret
insl
mov
xorb
cli
dec
push
mov
mov
cmp
sbbb
mov
repnz
jmp
hlt
mov
push
rorl
out
sbb
test
mov
idiv
mov
pop
and
int
mov
clc
pop
sub
dec
xchg
fcmovu
mov
dec
shlb
jg
out
out
and
insb
mov
shlb
inc
stos
xchg
out
daa
into
sub
xor
push
pop
mov
ja
data16
pop
je
xor
sub
push
cmp
pop
arpl
jb
mov
leave
push
jecxz
rolb
movsl
inc
out
adc
xchg
cmp
sub
xchg
pusha
sahf
or
adc
cld
in
popa
and
in
xchg
dec
lahf
dec
add
out
popa
lcall
pop
int
aad
fisubrs
lahf
mov
call
gs
mov
int3
fwait
clc
push
cmp
jg
mov
out
mov
pushf
cld
in
push
xor
lcall
xlat
push
sbb
adc
mov
lret
sbb
jmp
sbbb
jno
mov
cmp
xor
clc
cmp
mov
dec
cltd
rcrl
adc
ljmp
cli
in
mov
xor
pop
in
xchg
in
sbbl
lahf
dec
push
and
call
rcll
and
add
out
lret
je
mov
fadds
push
pop
mov
psraw
outsl
out
testb
scas
xor
mov
loopne
je
cmp
adc
shr
jbe
cmpsb
sub
pop
lds
inc
add
mov
and
or
inc
xor
or
mov
mov
jle
fsubrs
sbb
imul
daa
push
fdivl
sbb
xlat
popf
std
incb
jge
clc
rclb
jp
mov
nop
jp
fdivrs
mov
jns
sub
push
xor
sub
int3
out
inc
adc
aaa
jae
ljmp
mov
mov
in
aaa
test
out
push
adc
in
aam
cmp
ljmp
loopne
stos
sbb
filds
fisttpll
in
jno
fst
or
sbb
push
mov
mov
jp
es
jecxz
dec
dec
adc
xchg
pop
pop
iret
xlat
add
out
loope
lret
or
or
jbe
inc
pop
stos
adc
add
int3
popa
adc
inc
push
aas
fistpl
mov
cmpsb
dec
sub
mov
test
icebp
pusha
les
xchg
or
and
pushf
or
out
stc
mov
xlat
cwtl
xchg
sbb
add
push
sub
adc
lahf
popa
pop
or
mov
shll
mov
inc
test
or
pushl
add
aam
add
arpl
push
and
rcrl
cmp
lar
xor
js
test
xor
ja
clc
add
push
rol
sbb
mov
popf
mov
std
jnp
fildll
das
add
or
cs
mov
loopne
cmc
jo
call
jb
dec
add
arpl
mov
dec
cs
xchg
xchg
jecxz
mov
mov
out
shll
sbb
push
pop
xor
pop
mov
xor
movsb
fstl
test
les
xchg
sub
add
pop
pop
sbb
out
aad
test
int
mov
ja
test
fld
ds
jbe
mov
daa
andl
push
mov
mov
add
es
in
inc
dec
sbb
test
inc
and
adc
jle
imul
cld
mov
adc
push
repz
test
pop
or
hlt
shr
aas
arpl
jb
and
dec
jo
fsubl
xor
jbe
cmp
xchg
fimuls
ret
test
stc
lret
subl
or
dec
xorb
lcall
xchg
sahf
in
lods
in
push
shrb
popa
inc
sub
cmp
mov
repnz
arpl
sub
stos
pushf
push
push
les
cmc
and
ss
sub
test
sub
adc
cmc
ljmp
je
pop
xlat
ret
mov
fs
jnp
and
mov
or
jg
lods
adc
sub
popf
or
stc
ret
cli
inc
lds
or
jno
aas
jge
or
fsubrs
cltd
xchg
xchg
jo
inc
lods
mov
mov
push
push
mov
dec
out
dec
and
inc
testl
mov
mov
cltd
pushf
jmp
jl
or
inc
push
push
cld
imulb
inc
jmp
pop
sub
pusha
push
inc
fisubrs
push
cmc
dec
lock
test
cmp
mov
or
push
or
lds
jae
cmp
leave
cli
test
pushf
btr
and
push
push
cmpsb
dec
pop
mov
ljmp
lahf
mov
fdivrl
aaa
sbb
mov
das
stos
xor
aad
sbb
jge
jae
cs
xor
paddb
sbb
push
or
dec
jmp
call
xchg
dec
push
cmpsb
int
or
add
xlat
adc
test
in
movsb
jmp
out
xor
daa
nop
mov
fsts
xchg
iret
push
push
insb
push
pop
movsl
lret
mov
push
sbb
mov
xchg
inc
inc
mov
xor
sbb
lcall
cmp
mov
add
jmp
arpl
outsl
xlat
lahf
adc
inc
sub
pop
dec
imul
test
arpl
clc
dec
xchg
dec
and
jne
mov
fsubrl
push
lcall
push
jnp
fisttpl
jp
lds
fldt
repnz
xchg
push
xor
popf
dec
mov
ss
jg
outsl
cmp
std
push
call
pop
mov
psubsb
sahf
leave
adc
test
mov
jbe
mov
sbb
xor
dec
lahf
inc
sbb
fimuls
cli
shl
dec
fs
pop
pop
jecxz
push
add
mov
stos
inc
les
into
bnd
dec
xchg
push
add
insl
ljmp
sbb
daa
push
pop
mov
jo
arpl
mov
pop
shlb
sti
es
fldl
jo
inc
inc
mov
add
jae
push
mov
jbe
daa
xlat
inc
cltd
ss
hlt
fdivl
fidivrs
dec
cltd
pop
stos
pop
in
sbb
xor
or
mov
aaa
fildl
mov
mov
jmp
loope
xor
pusha
mov
popa
adc
test
int3
pusha
sbb
jmp
or
cmp
jae
or
lods
fidivrs
lcall
pop
mov
push
adc
int
into
sub
fwait
ljmp
push
xchg
xchg
mov
leave
xchg
inc
std
fidivs
pusha
adc
inc
test
xchg
daa
pushf
and
out
fs
and
out
bnd
xchg
or
in
movsl
or
mov
sub
mov
int
fdivl
out
jno,pt
jo
fs
lret
mov
cmp
mov
call
jnp
test
jbe
pop
sub
mov
arpl
or
and
cwtl
pfnacc
fimuls
jae
loopne
pusha
icebp
imul
cmp
pop
pop
repz
pop
in
mov
popa
ds
test
ret
aad
push
popa
addr16
repnz
arpl
mov
mov
sbb
js
sbb
movntq
out
cmpb
mov
add
jecxz
out
dec
or
test
xchg
sub
jo
into
pop
loop
movl
add
mov
add
test
hlt
mov
dec
fidivrl
cmpsl
cld
push
mov
insl
add
xchg
pop
jg
std
mov
and
xor
in
bound
or
std
mov
lods
and
aad
cmp
jmp
jge
pop
into
sbb
sbb
arpl
cmp
ljmp
sub
xor
dec
sbb
or
xchg
jle
cmpsl
jg
int3
pop
bound
ficoml
and
popa
pop
stos
pop
outsb
sub
push
jnp
pusha
fwait
es
scas
and
inc
and
mov
xchg
xor
or
jmp
jne
int3
cmp
shl
iret
fldcw
dec
add
fldcw
insb
loope
lea
sarb
cmp
adc
and
inc
lods
sbb
loope
push
mov
and
dec
lahf
loopne
dec
and
stc
sbbb
mov
es
je
aaa
mov
or
and
cmp
pop
lcall
jnp
je
ljmp
pop
in
inc
dec
and
jg
mov
in
lea
das
and
outsl
das
add
push
jnp
gs
add
les
jecxz
iret
hlt
daa
mov
push
fsubs
jge
leave
xchg
pop
and
adc
mov
movl
add
sar
int3
in
dec
test
mov
adc
mov
test
xor
test
jb
popf
and
iret
and
out
cmp
call
es
xchg
mov
pop
dec
and
fimull
sbb
fstpl
jo
and
cld
lret
xchg
ret
leave
add
pusha
lds
int3
adc
jle
mov
xlat
mov
dec
mov
cs
mov
jle
mov
or
sub
lock
cli
call
dec
lret
jmp
bound
add
jmp
cwtl
inc
int
jns
mov
pop
mov
fstpl
mov
cmp
adc
ss
sbb
ficompl
bound
xor
out
stos
adc
push
ds
push
jle
cwtl
hlt
mov
dec
cwtl
bound
pushf
out
ficoml
fcoms
ret
mov
aam
scas
ja
ret
dec
add
cld
imul
inc
and
dec
sub
jnp
test
push
andb
push
insl
outsb
lds
push
in
or
ds
outsb
jmp
push
jl
xlat
out
xchg
dec
mov
and
cwtl
push
sub
cli
fisubs
into
cmp
fdivr
adc
mov
rclb
not
push
fdiv
push
cmpb
or
jb
les
mov
sti
inc
test
subb
push
fidivrs
mov
testl
lahf
add
jne
pop
push
mov
scas
aas
mov
push
sbb
shrb
jnp
push
fidivrl
in
lret
xchg
sbb
jbe
inc
cld
mov
inc
inc
in
scas
mov
cmp
pop
mov
xor
fistpl
lret
mov
jmp
pop
test
xor
jnp
in
mov
xor
mov
jle
push
pop
xchg
xor
add
add
rorb
jmp
or
mov
jge
sbb
adc
js
push
pusha
adc
les
data16
std
fisubrs
js
add
syscall
bswap
push
jbe
idivl
fadds
lds
lods
sub
jne
dec
jnp
pop
aaa
mov
pop
dec
pop
sub
jne
negl
dec
dec
and
mov
sub
add
xchg
div
je
bound
push
dec
fisttpl
mov
cmp
loope
inc
mov
loopne
cmp
out
and
inc
xor
adc
push
jl
push
addr16
dec
mov
xlat
jmp
dec
pop
mov
cmp
add
in
jp
dec
popf
xchg
lret
int
test
fstl
push
and
jae
xlat
sbb
or
push
shlb
xor
xor
xchg
cld
and
xchg
add
lahf
js
stos
mov
xor
test
add
jne
test
shrb
pop
fcomps
stc
add
and
dec
mov
sub
sbb
pop
push
and
and
aam
outsb
and
rorl
arpl
bound
sbb
into
push
repz
cmp
fsubrs
pusha
mov
inc
movsl
push
jmp
test
jle
ror
cmp
data16
int3
and
mov
pop
data16
pop
pop
les
lea
insl
xorl
and
push
inc
add
xorl
cmp
xchg
mov
sub
and
mov
jno
mov
mov
cwtl
mov
inc
push
sahf
mov
cmpsl
jl
xlat
scas
imul
mov
inc
stc
jecxz
dec
lret
push
aad
rsqrtps
mov
lret
or
push
dec
das
and
cmp
xor
rcll
movsl
mov
sti
jmp
movsb
mov
orl
ffree
leave
je
cmp
ds
int3
imul
lock
fs
mov
sarl
fwait
aas
and
jo
mov
test
inc
cmp
cmp
setp
sub
jno
scas
and
pushf
pusha
jp
pushf
inc
and
mov
mov
enter
cmp
sti
lock
fmul
fnstcw
ljmp
outsl
je
adc
mov
mov
cmp
pop
fs
jnp
fisttpll
inc
jo
aaa
or
and
sbb
scas
jmp
mov
stos
cmp
dec
pop
mov
js
mov
xor
cmp
or
mov
insb
and
jae
xchg
popa
das
jl
orb
jl
insl
jmp
adc
mov
jg
mov
stos
and
pushf
lds
rcrl
mov
stos
cmp
clc
test
push
sub
popf
add
fsubs
daa
scas
inc
lret
out
jmp
xor
ljmp
push
pop
pop
out
not
inc
pop
or
aaa
sub
cmp
add
push
lods
les
jmp
clc
das
pushf
and
pop
cmpsb
aam
ret
mov
push
or
mov
push
mov
mov
xchg
loopne
pushl
xchg
dec
mov
mov
fbld
inc
adc
jne
mov
lods
das
aas
jle
test
js
popf
jge
cltd
fisttps
fnstcw
push
test
xchg
lds
mov
and
shrb
cmp
xchg
xchg
dec
inc
frndint
inc
pop
sub
mov
pop
xchg
push
ja
xchg
and
adc
idivb
arpl
frstor
mov
popa
pop
xchg
aad
int
cmp
sahf
addr16
adc
mov
cwtl
sub
inc
dec
ret
ror
mov
pop
and
cltd
aad
std
xchg
loop
inc
cwtl
stos
sbb
das
pop
pop
ja
popa
in
mov
subl
decb
jbe
ja
dec
xlat
dec
lahf
fisttpll
popl
mov
cmpsl
cmp
insb
je
nop
mov
add
cmp
mov
jp
push
cmp
sbb
imul
repz
pmaxub
test
stc
mov
enter
or
pop
xchg
mov
iret
dec
das
push
iret
test
mov
repz
stos
sub
xchg
xchg
add
inc
or
add
push
lods
jno
xchg
mov
iret
jg
popa
dec
dec
jae
add
push
sub
mov
sub
push
mov
jecxz
jmp
andl
jmp
in
inc
lcall
mov
and
xor
clc
rcrl
hlt
cmp
cmp
lret
mov
and
xchg
outsl
push
sarl
sbb
and
or
push
enter
mov
adc
inc
sti
daa
sub
mov
jbe
mov
or
lods
popl
adc
aam
inc
cmp
rcrl
xchg
cmp
mov
out
xor
int3
fdivp
mov
push
sbbl
sub
xchg
dec
and
jo
rcll
jmp
insl
jp
daa
aam
ficoms
lcall
dec
fs
out
push
shlb
lods
and
and
or
icebp
mov
in
les
add
xor
setl
inc
cmp
popf
sbb
ror
into
jp
cmpsl
cli
inc
cmp
sbb
rcl
repnz
xchg
cmp
mov
add
push
sub
shrl
xchg
pusha
imul
mov
jae
xchg
xchg
sti
adc
stos
push
cmp
cmp
add
sbb
jge
pop
adc
mov
test
cmpl
pop
dec
mov
nop
pop
add
add
cmp
ret
and
in
push
insl
push
inc
cmp
hlt
push
xchg
nop
loope
mov
jecxz
stc
sbb
mov
insb
or
jge
or
test
test
imul
addr16
popf
shrl
adc
lock
repz
sub
aad
ja
rcrl
pop
dec
add
jnp
mov
jbe
push
je
mov
clc
popa
inc
test
adc
repnz
or
fcmovnbe
pop
inc
outsl
jnp
sti
test
xchg
fmuls
arpl
push
adc
in
cmpsl
xor
or
xchg
imul
mov
test
aaa
jg
and
in
or
outsb
enter
fimuls
aas
or
std
sbbb
es
pop
shlb
fmull
into
cmp
leave
mov
pop
push
repnz
scas
aas
inc
push
das
push
sbb
push
pop
dec
js
hlt
retw
mov
dec
inc
xor
inc
jne
sbb
cmp
cmc
rcrl
mov
movsl
ja
and
sarl
mov
xlat
push
pop
inc
cmp
pop
stc
cmp
pop
pop
add
js
jmp
or
and
push
push
push
pop
xorl
mov
ds
adc
sub
inc
aad
pop
cmpl
rcrl
xchg
push
adc
cmp
cmp
rol
test
add
les
and
repz
and
pop
mov
pushf
divb
rcrl
push
iret
in
stos
call
jnp
pop
sub
out
xor
ds
push
sbb
stos
int3
mov
js
xchg
lret
outsb
hlt
lods
popf
inc
rolb
testl
push
xchg
pop
out
frstor
addb
shlb
mov
xchg
xchg
lods
cltd
mov
mov
pop
in
sbb
ret
mov
jmp
inc
pop
mov
ret
lods
inc
cli
jp
cltd
cwtl
lods
push
jl
int
je
sbb
sub
xchg
mov
or
inc
xchg
repz
or
std
pop
fcoms
dec
lock
cmc
loope
adc
xchg
aad
jae
xchg
int3
push
mov
add
pop
clc
test
add
or
ds
add
das
xchg
rcrl
cmp
in
and
pop
in
push
testb
aaa
mov
mulb
shlb
push
je
and
std
outsl
mov
sub
ljmp
pop
mov
mov
int
sahf
jo
xor
cmp
sub
lahf
push
dec
or
dec
sub
jbe
add
jae
scas
and
adcb
adc
sub
pop
ret
arpl
cmp
mov
xchg
and
std
out
cli
inc
std
sbb
push
aaa
test
scas
or
push
orl
pop
adc
daa
shlb
xchg
push
mov
xchg
shlb
xchg
sbb
lea
mov
sbb
call
in
out
in
es
xor
jl
movsl
push
cld
add
push
vcvtdq2ps
mov
mov
mov
cmp
repnz
xchg
jo
pop
jbe
repnz
sbb
ret
lahf
inc
nop
sub
leave
push
sub
lea
es
mov
inc
ffree
mov
mov
add
push
mov
addr16
stos
ds
repnz
or
dec
xchg
mov
sbb
jne
xor
data16
test
xor
push
xchg
call
dec
gs
mov
and
rorl
xor
test
movsb
push
flds
popa
mov
ljmp
or
int3
xchg
jp
xlat
pop
xchg
mov
ja
in
rcll
dec
mov
rcrb
mov
in
or
sahf
stos
mov
gs
movsb
jmp
cmp
loope
shr
inc
or
dec
in
pop
fdivr
push
lcall
imul
inc
loopne
lret
leave
aas
sbb
cmp
adc
sub
pop
mov
mov
ds
and
rol
pop
fildl
pop
repnz
adc
lods
mov
pop
movsl
adc
ss
xchg
dec
or
push
xor
pop
stc
stos
sti
inc
sub
mov
pop
xlat
jmp
xchg
mov
cld
jmp
test
push
sbb
mov
jno
test
outsb
imul
lahf
mov
cmp
mov
arpl
mov
addl
add
fwait
loop
push
movsb
js
cs
mov
adc
dec
sub
sbb
xor
sti
iret
jae
or
sbb
movsl
cli
insb
mov
and
das
stos
jnp
int3
ljmp
es
lahf
mov
push
xchg
mov
aaa
inc
add
adc
vpcmpeqd
add
and
mov
inc
in
and
test
aaa
mov
xchg
sub
daa
fistps
lret
or
repz
jae
add
out
lea
mov
mov
xor
pop
and
imul
mov
mov
mov
pop
insb
or
mov
adc
xlat
add
add
stc
aas
inc
ficomps
mov
out
rcrl
das
sbb
out
lods
cmp
jl
je
mov
xor
push
cmpsb
into
mov
and
jp
cld
mov
adcb
repnz
sbb
mov
stc
inc
leave
jnp
test
lods
cli
xchg
outsb
mov
fs
loopne
lods
mov
and
adc
pop
int
mov
adc
mov
cli
jmp
hlt
das
es
std
mov
mov
push
rolb
jmp
cli
pop
data16
icebp
xor
push
and
mov
mov
push
imul
divl
adc
mov
rclb
cmpsl
je
add
add
enter
jo
inc
cmpb
push
pop
xorl
dec
push
jle
cmc
mov
cmp
mov
and
jecxz
jnp
xor
scas
dec
test
or
inc
sti
ret
fidivrl
cld
xchg
xchg
lcall
mov
inc
mov
shrl
imul
jns
mov
and
add
ss
outsb
dec
push
adc
sbb
ljmp
sub
daa
push
out
xchg
loopne
shlb
cmp
in
scas
mov
cmp
std
sbb
jecxz
fmuls
push
dec
rcr
das
insb
std
mov
pop
inc
mov
adc
and
and
mov
push
jmp
add
dec
xchg
stc
and
int
cmp
adc
gs
adc
movl
cwtl
insb
jle
sbb
fucom
mov
adc
mov
mov
adc
lcall
jl
es
xchg
jle
fiaddl
pop
mov
adcl
dec
push
arpl
idiv
aaa
mov
cmp
imul
ret
jne
mov
data16
icebp
xchg
inc
test
jle
out
sti
pop
dec
bound
fwait
ret
inc
mov
inc
es
fdivl
mov
mov
adcb
xchg
fdivr
leave
mov
je
mov
push
andb
fidivl
pop
imul
and
push
lret
pop
inc
mov
dec
add
add
mov
mov
lea
cmpsb
arpl
pop
pop
es
pop
sbb
mov
push
imul
pushf
xor
jmp
fdivs
jb
push
stos
cmpsb
jl
mov
push
jp
popa
xor
lock
xchg
arpl
adc
ss
mov
mov
push
idivb
dec
shrl
xchg
pushf
stc
mov
nop
push
out
inc
xchg
xchg
out
scas
adc
mov
xchg
push
daa
leave
adc
das
ja
push
out
mov
xacquire
xchg
or
mov
out
push
imul
shlb
fisubl
mov
jmp
sub
cli
push
jecxz
or
in
insb
cmpsb
in
out
jp
adc
adc
cltd
repnz
xor
mov
ds
dec
mov
daa
add
iret
in
fstpl
cli
xchg
mov
sub
pop
aas
std
add
xchg
or
add
vminsd
loope
lods
push
xchg
lcall
cmpsl
pop
or
outsb
int
or
sar
inc
add
push
mov
outsw
adc
xlat
cmp
stc
push
pop
xor
lret
fsubs
jl
mov
ss
sub
cs
pop
jne
mov
pusha
arpl
push
test
add
scas
shll
cmp
test
xchg
clc
push
xchg
je
or
mov
add
jecxz
aas
or
into
push
xor
or
or
inc
adc
leave
xchg
xor
insl
mov
arpl
ret
push
push
out
jno
push
mov
xchg
popa
in
test
cmp
add
jge
dec
cwtl
pop
and
mov
fsubrs
mov
add
hlt
rcl
repnz
cli
pop
add
adcl
insb
push
repz
jecxz
int3
adc
fucomi
xchg
xchg
push
shlb
enter
dec
mov
dec
scas
inc
pop
push
das
es
xor
push
dec
xchg
stc
adc
jge,pt
fs
stos
or
movsb
in
add
pushw
sbb
out
loop
pop
scas
popf
loop
cld
ret
xchg
dec
mov
jae
hlt
sahf
mov
sbbb
sbb
cmp
mov
lret
cmp
xor
dec
xor
and
mov
dec
lret
mov
and
mov
cmp
pop
sub
orl
push
pop
mov
sarb
xchg
fwait
pop
sbb
inc
cmpsl
sub
aas
inc
push
xchg
xor
and
jmp
dec
outsl
mov
or
inc
xchg
cli
es
fs
mull
cmp
mov
mov
aad
sti
psubsb
mov
add
mov
int3
shr
pusha
iret
hlt
cmc
pop
pop
mov
cmp
mov
mov
jg
mov
adc
cld
xor
pop
test
clc
mov
aam
fcmove
add
ret
xor
nop
aad
sub
je
decb
xor
add
jmp
sub
sarb
jp
cmpsb
mov
and
cs
incb
decb
aas
push
out
sub
and
scas
or
cld
xchg
pop
orb
inc
test
and
lret
outsb
ret
or
ds
cld
loop
pop
push
ljmp
jae
and
arpl
cs
cmpsl
mov
pop
adcb
pop
push
sahf
push
shlb
int
xor
sarl
dec
jae
cmpsb
cltd
aam
xchg
push
mov
les
mov
jmp
dec
dec
sub
mov
mov
or
sbb
cs
push
pop
mov
lock
or
mov
mov
enter
push
add
cmpsb
js
ds
ss
push
jns
push
shrb
jns
jl
mov
out
mov
fwait
stos
aam
movsl
stos
xchg
lahf
pop
js
push
inc
mov
scas
inc
inc
das
sbb
or
pop
and
std
cmp
ss
and
xor
add
cmp
fistps
gs
sbb
push
fildll
insb
jecxz
add
enter
insl
mov
lahf
enter
pop
test
test
decl
adc
mov
test
out
test
push
xchg
jbe
imul
push
stos
test
inc
add
lret
jmp
xorb
repz
mov
jp
popf
jne
iret
push
dec
test
in
push
push
dec
adc
iret
push
mov
repnz
adc
mov
pop
dec
push
sub
stos
shl
or
stos
add
push
or
sbb
mov
pcmpgtb
and
stos
push
arpl
cs
sbb
jo
jp
xor
std
mov
popl
pop
daa
aad
aad
notl
pop
dec
add
sub
xlat
push
test
pop
jno
xchg
out
pop
loope
out
mov
iret
lahf
xchg
xchg
stos
fsubl
inc
inc
xchg
in
in
mov
sar
jo
mov
pushf
call
or
sbb
mov
mov
adc
add
loope
fs
pushf
and
push
sub
scas
push
fsub
add
repnz
hlt
pop
inc
hlt
pop
gs
mov
dec
and
dec
gs
insl
test
je
negb
mov
mov
jg
sahf
icebp
pop
adc
int
jl
pop
jae
and
cmp
mov
jle
jno
rcrb
or
cmpb
sub
addb
test
inc
addb
pop
dec
loope
inc
and
cmp
mov
or
or
pop
jecxz
rorl
insl
hlt
push
or
iret
mov
jp
cmc
mov
mov
add
lods
ret
ja
out
dec
xor
jg
cli
stos
rcl
xor
add
loope
out
mov
mov
out
mov
mov
cmpsl
push
inc
enter
jecxz
popa
repz
and
cld
xor
insl
in
repz
or
shr
xor
flds
sti
out
out
or
shlb
addl
scas
mov
shl
jmp
enter
mov
in
sub
xor
add
adc
notl
movsb
orl
cmp
fstl
cli
adc
sub
xchg
mov
loopne
repz
dec
sub
mov
mov
in
ficoms
loop
pop
ds
pushf
cmpsb
inc
nop
pop
and
rorb
mov
mov
imul
lods
in
call
stc
add
or
daa
ja
inc
adcl
aad
scas
fyl2x
std
arpl
mov
lcall
jmp
inc
in
adc
popf
fs
hlt
mov
shlb
xchg
mov
xchg
lods
pushl
out
jl
rorb
sub
decb
xchg
dec
je
xor
pop
mov
mov
fisubl
test
mov
add
shll
lods
and
inc
sbb
rorb
dec
shll
into
insb
dec
movsl
sbb
xchg
insl
frstor
adc
loope
xchg
in
in
sub
mov
test
or
inc
jecxz
mov
hlt
mov
imul
ret
scas
fstl
xchg
push
scas
xor
cli
ss
jge
inc
mov
cmp
mov
jno
insl
test
adc
jmp
fs
mov
inc
ret
lock
negl
jp
out
shl
pop
les
pushf
icebp
sbb
mov
lock
inc
test
ficomps
xor
or
lahf
into
lds
push
call
xchg
jno
inc
lret
push
sub
or
dec
mov
cmpsl
push
aas
sbb
test
cld
inc
fcoml
fadd
nop
push
gs
movsb
in
jl
jae
stos
popa
pushf
cmp
stos
popf
mov
repz
sbb
inc
pop
sub
xor
test
jnp
movsb
addl
push
push
dec
push
jle
cli
fsubrl
jmp
sarb
xchg
jae
les
rcr
jbe
enter
mulb
jbe
inc
mov
xchg
pop
and
and
fcmovnu
fsubl
insl
cmp
pop
inc
lahf
mov
dec
add
cwtl
jecxz
call
jo
jmp
outsb
pop
out
into
push
xchg
jae
mov
enter
mov
stos
xchg
inc
add
sub
push
test
lahf
push
inc
clc
sub
mov
and
sub
jae
pop
mov
ss
push
scas
push
mov
push
mov
sub
cmp
gs
loop
and
push
mov
lds
cmp
in
cmp
subl
push
pop
imul
sub
data16
mov
mov
inc
pop
aaa
cmpsb
adc
jbe
push
and
pop
aam
cmp
sub
push
in
xchg
in
test
lahf
xor
adc
push
jmp
aaa
lea
mov
fdivrl
cmc
mov
not
call
jecxz
inc
ficomps
pop
dec
and
jne
lock
and
pop
decb
push
sbb
inc
dec
mov
push
push
outsb
inc
daa
jne
test
add
push
cmp
jecxz
mov
les
dec
and
fimuls
inc
addr16
adc
ror
out
pushf
movsl
fildl
mov
jno
vshufps
and
pop
ss
dec
mov
scas
cmp
mov
jbe
dec
fwait
nop
insb
dec
mov
in
and
cmpl
dec
mov
jns
xor
shrb
test
movsl
loope
dec
xor
pop
cltd
notl
cld
call
jb
popf
cld
or
sbb
and
shrl
std
rdpmc
mov
fs
into
or
and
pop
xchg
cmp
mov
clc
aas
pmulhw
shll
push
pop
dec
push
outsb
dec
push
push
sbb
movsl
iret
sub
mov
cmp
mov
aaa
daa
call
cmp
or
ja
lea
popf
jb
fwait
outsl
pop
ficoml
mov
shrl
les
adc
dec
adc
dec
test
stc
sub
pop
cmp
xchg
nop
pop
mov
push
lret
aad
dec
pop
pop
pop
push
or
lea
fidivrl
push
invd
iret
push
dec
mov
je
xchg
ds
add
jnp
jp
jo
je
loope
enter
xor
push
loop
rcrl
mov
pop
inc
leave
and
push
fisubrl
add
stos
mov
add
cld
mov
add
inc
pop
add
cld
scas
mov
or
jmp
adc
clc
cmp
or
push
rcrb
cmp
daa
pop
cmp
popa
loopne
adc
movsl
cwtl
out
xor
nop
push
cli
ds
test
xor
sahf
mov
adc
imul
jo
insb
stos
in
subl
sbb
outsb
xchg
inc
push
adcb
adc
sbb
int3
rorb
lea
std
mov
cmc
push
loop
fistpl
mov
mov
pop
add
jecxz
and
je
movsl
cmp
lods
xchg
cmp
jno
xchg
repz
add
adc
cmp
stc
sub
add
out
inc
lds
xchg
mov
scas
stos
and
aad
cmp
inc
imul
adc
mov
hlt
jg
jmp
xor
in
icebp
adc
jns
subb
roll
xor
xor
cld
jb
test
scas
adc
sarl
ds
mov
inc
push
out
mov
loope
cmp
xor
mov
xchg
or
mov
sub
jp
pop
mov
jge
mov
daa
sbbb
inc
out
lea
fwait
aam
sbb
or
dec
adc
lods
rorb
in
xchg
pop
mov
les
cmp
sub
sub
pmaddwd
or
adc
pop
insl
subl
push
insb
add
xchg
fbld
mov
popa
mov
mov
xchg
call
lcall
stos
sub
in
sti
or
dec
sysexit
insb
out
adc
push
out
xchg
fs
sbb
popf
out
cmp
dec
ja
and
pushf
rol
fdivs
mov
jp
pop
femms
stc
xor
xchg
add
xor
repnz
aas
dec
js
or
mov
andb
xor
call
dec
lea
int3
jo
cmp
mov
dec
rolb
loope
push
push
cwtl
fwait
pop
or
sbb
test
xchg
jle
out
or
xchg
testb
cmpsl
mov
mov
sti
in
dec
mov
mov
jno
fdivs
dec
lret
inc
mov
dec
xor
mov
cld
jg
jb
hlt
dec
pop
or
or
sub
cmp
lcall
arpl
xchg
adc
repnz
adc
dec
and
mov
cwtl
call
or
fstp
adc
cwtl
pusha
jae
sub
add
imul
xlat
in
and
stc
xor
cmp
call
fsubl
pop
popf
sub
adc
cmc
leave
xorl
pop
add
int
mov
dec
cmp
test
jp
hlt
adc
and
jnp
aam
push
shlb
nop
mov
xor
jno
gs
xor
addr16
in
lock
mov
fs
fwait
ds
sbb
ret
fidivs
mov
fidivrs
sbb
and
mov
add
sbb
loope
add
outsl
add
and
test
aam
jo
push
mov
push
cwtl
cs
xchg
repz
xchg
or
loopne
jp
fnstsw
int3
mov
and
sub
daa
mov
clc
stos
add
cmc
jo
ficomps
pop
addr16
jl
ds
mov
jb
inc
sub
fs
test
adc
push
repnz
daa
int3
jnp
dec
loop
les
xchg
addb
xchg
orb
adc
insl
repz
adc
xor
xchg
sbb
inc
cmpsl
push
sahf
ds
cld
xchg
aam
jae
das
shr
test
sub
mov
sbb
repz
push
daa
jne
mov
mov
sbb
addr16
das
outsl
push
mov
mov
stos
testb
jle
dec
call
cs
xor
test
mov
lea
push
iret
imul
repnz
sbb
pop
pop
sbb
cltd
push
pop
mov
pusha
or
jl
mov
sbb
mov
out
fimuls
test
jae
jmp
add
stc
pop
in
lahf
push
mov
sub
movsl
inc
jo
jbe
push
addb
jo
pop
orl
jge
cmp
int
lcall
fsts
mov
mov
cmpsb
lods
lea
in
pusha
fdivrs
dec
jnp
sbb
push
push
outsl
xchg
cltd
and
stos
add
and
jb
push
nop
out
xorb
jno
xchg
cmp
jnp
or
mov
jmp
ds
movsl
xchg
in
xchg
mov
sbb
sahf
dec
out
mov
mov
rolb
cltd
out
sbb
dec
out
mov
out
or
loopne,pt
cwtl
xor
sub
lcall
jns
xchg
mov
xor
adc
into
mov
fsubrp
cmpsb
je
push
jp
sarl
jbe
sub
cmp
pop
xor
cmp
jmp
adc
xor
stc
xorb
pop
jo
push
adc
jmp
std
aad
sub
mov
xor
xor
sahf
pop
mov
test
or
inc
cwtl
lret
adc
xor
test
in
fwait
pusha
add
dec
arpl
inc
loopne
or
inc
repz
mov
fcomip
dec
sbb
adc
pop
ficomps
cli
out
cltd
mov
in
std
mov
dec
test
aad
adc
lret
mov
xchg
xor
int3
or
or
iret
mov
mov
pop
mov
sbb
in
insb
adc
and
fsubp
sbb
loop
dec
xchg
test
nop
mov
xorb
daa
cmpsb
adc
push
jb
jne
cltd
jg
pop
adc
mov
adc
inc
out
mov
dec
or
jecxz
fidivl
jmp
adc
or
sbb
repz
jno
jg
out
mov
ud1
stos
je
out
fsub
pop
jle
jb
inc
out
ret
outsb
adc
rcll
aas
sub
xchg
inc
dec
cltd
outsb
test
imul
les
xor
std
cmp
stc
xchg
mov
mov
sbbb
mov
inc
sbb
push
sub
jne
fnstenv
fcom
mov
fucom
xor
loopne
sub
xor
les
pop
mov
shlb
or
pop
ret
mov
repz
sbb
lret
or
fsubl
mov
jne
jbe
mov
nop
xchg
leave
pop
mov
add
in
lahf
push
scas
adc
call
and
cld
ss
fwait
ret
sub
les
sub
scas
jns
xchg
outsb
cwtl
mov
mov
loop
insb
in
sub
nop
imul
in
inc
or
add
mov
sbb
xor
mov
or
cmpsl
adc
or
pop
pop
dec
test
xchg
das
inc
aas
lea
repnz
mov
lock
std
lret
adc
dec
sarb
ds
out
scas
mov
cmp
dec
jp
mov
add
and
xchg
dec
orb
or
cmp
push
push
icebp
mov
dec
lcall
xchg
test
mov
push
cmpsb
jnp
cld
mov
mov
sub
inc
jne
mov
cmp
inc
std
test
or
or
imul
shrb
or
jg
addr16
adc
lock
and
call
cmp
sbb
ss
or
inc
xchg
fisubrl
test
scas
jg
das
adc
push
pusha
inc
jns
fwait
ror
pop
repz
jecxz
mov
bound
movsl
sbb
xchg
and
xchg
add
sahf
movsb
mov
ljmp
call
shll
cmpsb
or
add
int3
jns
sub
jge
sub
jno
sub
cwtl
movsl
cld
inc
cwtl
mov
insl
add
cmp
ljmp
mov
xchg
jp
sarb
in
xor
and
not
ret
xor
mov
pop
inc
sbb
cmpsl
jne
inc
mov
hlt
adc
jbe
jmp
xor
add
adc
inc
jle
das
lret
push
repnz
stos
outsb
xor
mull
cmpb
pushf
pop
push
xchg
test
shl
cmp
mov
inc
dec
or
insl
pusha
rcrb
sbb
cmp
dec
and
dec
sub
pop
in
push
shlb
mov
in
pop
sahf
cld
lods
adc
subb
cmp
dec
adc
dec
pop
lds
mov
aaa
in
jle
out
jns
adc
cld
mov
fildl
xchg
cmp
andl
lock
outsl
bswap
clc
cmp
imul
inc
or
leave
jl
pop
fwait
pushf
in
jle
cmp
sahf
pusha
rcrb
rorl
test
out
shl
divl
call
in
xor
xor
dec
pop
movsb
dec
cmpsb
mov
iret
add
lods
shl
sub
mov
fmul
mov
dec
xchg
gs
dec
loope
mov
iret
cmp
fdiv
pop
repnz
les
sahf
test
mov
lods
testl
xchg
call
lods
repz
insl
jb
push
ljmp
sub
out
mov
xchg
pop
movsl
je
inc
and
nop
xor
jbe
insb
or
push
pop
mov
mov
jp
movsl
mov
pop
inc
orl
arpl
imul
icebp
pop
test
push
lds
cmc
sbb
dec
cmpsb
movsl
ljmp
add
push
cmp
push
jno
pop
mov
adc
xlat
or
sub
cmpl
stc
inc
dec
das
jo
bnd
call
data16
stos
cmp
testl
out
add
xorb
jns
das
jnp
idivb
ss
fwait
push
push
cmp
pop
in
mov
sub
iret
ret
movsl
lds
mov
test
and
jo
pop
lret
sbb
cmc
enter
popa
arpl
ret
mov
ret
lea
mov
fdivr
xor
add
mov
daa
xchg
xchg
push
xor
push
lahf
pop
mov
and
dec
and
icebp
mov
enter
daa
pop
cwtl
mov
scas
rcrb
or
pop
pop
stos
or
and
sbb
inc
inc
stos
pop
push
cmpsl
push
sbb
pop
ret
sbb
push
xor
leave
add
mov
arpl
cmpsl
jle
into
cwtl
mov
mov
sub
test
push
adc
sahf
imul
jbe
test
clc
mov
and
sbb
out
cltd
mov
aad
cld
test
dec
mov
adc
xchg
je
pop
ds
mov
sar
adc
xchg
fstp
aaa
loope
adcl
xor
jecxz
adc
movsb
test
in
enter
outsb
xchg
test
test
inc
push
imul
ss
test
cmpsl
jbe
dec
and
int
adc
mov
sbb
push
psubusb
xchg
scas
arpl
push
jo
mov
lock
mov
daa
mov
decl
ret
stos
jmp
jmp
out
pop
pop
jmp
out
add
out
mov
pop
pop
and
lret
mov
xchg
push
sub
aam
test
filds
jg
enter
mov
int3
xor
xchg
inc
lea
xor
xor
jg
xchg
mov
imul
out
repz
loopne
inc
cld
ret
ds
sbb
push
hlt
pushf
pushf
push
std
hlt
sub
jecxz
icebp
push
or
cmpsb
xor
test
mov
cmc
xchg
bound
xchg
idivb
in
or
sub
pushf
dec
stos
push
js
popf
mov
add
inc
int3
adc
test
lret
pushl
testb
fimuls
cmp
mov
in
out
xor
xor
mov
in
mov
jb
int3
bound
movsl
add
aaa
jecxz
scas
icebp
lret
add
repnz
aam
ret
mov
or
test
and
ds
imul
aaa
push
pop
fmull
std
push
fildll
add
sub
add
out
xor
bound
std
loop
jbe
and
sti
mov
idivb
push
xor
das
or
push
push
rclb
shrl
push
dec
rep
stc
mov
lahf
adc
jg
int3
xor
jne
or
out
mov
mov
add
imul
mov
pushl
xchg
xchg
xchg
in
scas
in
mov
loop
ret
scas
add
lods
arpl
add
or
xorl
int
mov
adc
cs
jle
and
jb
not
loope
sbb
mov
movsb
movsl
shl
fnstsw
pop
lods
jns
mov
xor
jg
xchg
fidivrl
shrb
push
xor
cwtl
push
testl
pop
aaa
sub
loopne
push
mov
lret
xor
fsubl
fld1
xchg
testb
xor
fsts
inc
loope
insb
stc
xchg
cs
mov
mov
aad
mov
inc
sbb
ss
movsl
or
into
out
adcl
mov
imul
pop
mov
repnz
mov
mov
push
sub
movsb
sbb
mov
pop
lea
or
lahf
push
mov
xchg
push
shll
xchg
mov
sub
cli
push
test
push
sub
push
mov
call
dec
pop
icebp
mov
lods
icebp
push
dec
push
sub
pop
add
lret
xchg
fisubl
cli
push
inc
lret
sarl
push
popf
xchg
je
and
in
lds
mov
popf
and
shll
xor
add
mov
ljmp
adc
pop
xor
int3
lahf
xor
dec
mov
mov
xor
je
mov
aam
mov
insb
movsl
and
fmul
dec
mov
sub
mov
push
add
fnsave
out
add
push
adc
jbe
adc
adc
test
out
jge
in
jecxz
stos
cmp
imul
sub
std
loop
mov
shrb
inc
stos
push
idivl
lock
xchg
mov
icebp
xor
mov
dec
cwtl
mov
jecxz
push
addl
xchg
xor
and
sub
push
xchg
mov
test
shlb
cmp
imul
cmpsb
outsl
xchg
push
adc
loop
jle
sti
jb
pop
xchg
jmp
mov
mov
bound
jmp
leave
push
inc
sbb
add
xchg
and
pop
iret
and
pop
push
std
mov
jle
push
loop
push
xor
jmp
lahf
adc
cltd
rorl
popf
pop
jne
mov
enter
cmp
dec
fdiv
mov
mov
xchg
adc
and
xchg
cli
dec
lds
popa
imul
mov
xor
xchg
pushf
cmp
fisttps
add
dec
jno
sbb
pop
shlb
mov
dec
push
jns
xchg
int3
insb
dec
scas
dec
mov
cs
out
mov
push
xor
xor
xor
mov
dec
sbb
out
out
dec
orb
dec
movsl
cld
pop
mov
sub
cltd
mov
xor
repz
and
shlb
sub
out
lods
adc
inc
addr16
lods
pop
out
repz
pop
mov
call
inc
cmpsl
mov
adc
shll
or
adc
cmpsb
loop
mov
sbb
sub
stos
int3
lcall
xchg
push
out
cld
and
xchg
mov
cmp
leave
inc
shr
rcrb
mov
arpl
inc
xor
mov
subb
shll
jg
movsb
push
paddd
fimuls
ljmp
mov
dec
ljmp
xlat
pop
out
lods
ss
push
aam
inc
and
shr
inc
mov
adc
movsl
negl
lea
mov
xchg
add
aaa
mov
pop
xchg
mov
loopne
inc
sahf
lods
mov
cmpsb
or
sbbl
adc
pop
sti
arpl
jg
mov
test
icebp
mov
nop
jae
jae
or
cmp
lea
mov
cmp
sub
pusha
mov
jns
pop
test
loope
pop
add
rolb
cmp
sbbb
pop
std
xchg
bound
aas
push
lret
jp
sti
shrl
xchg
xorb
push
pop
pop
jne
and
push
sbb
in
xor
or
scas
cwtl
mov
sub
mov
jge
aas
popa
sysret
mov
mov
in
orb
cli
popa
sar
pop
arpl
insb
lods
in
orl
pusha
addr16
cmp
gs
in
test
push
cmpl
pop
loop
mov
jge
xchg
xorb
xchg
out
cli
daa
jg
cmpsb
mov
xchg
fistps
mov
dec
mov
xor
xor
stos
and
push
cwtl
cmc
cmc
and
shl
ljmp
test
mov
pop
cmc
fdivl
sub
jl
lock
andl
scas
sub
jno
dec
xchg
fsubs
stos
push
ja
outsb
xchg
dec
sbb
pop
xor
or
sbb
not
lds
jo
sar
push
sbb
adc
mov
arpl
repnz
test
sbb
jne
loopne
dec
dec
xchg
knotb
push
dec
sub
test
pop
out
jp
mull
lods
or
into
js
repz
mov
movsb
xlat
mov
fdivs
or
cmp
dec
xchg
rcll
cs
sbb
mov
and
or
sbb
jae
jo
lods
sub
imul
lods
cmpsb
push
scas
push
add
jae
ret
inc
jmp
fsts
sub
lret
push
and
sub
cltd
mov
sub
fs
xchg
add
ffreep
xchg
pop
int
and
ret
mov
push
sub
or
push
filds
repz
ss
push
cmp
lret
mov
mov
dec
jp
fbstp
repnz
inc
mov
push
fildl
mov
cmp
cmp
ljmp
dec
test
adc
dec
push
sbb
mov
sti
pop
sbb
pop
adc
iret
aas
pushf
loop
aas
pushf
xor
and
mov
dec
movsb
bound
push
scas
out
pop
mov
mov
lcall
cwtl
std
lret
clc
lahf
aad
call
arpl
or
mov
sub
hlt
jge
mov
sbb
outsb
mov
mov
lods
mov
loope
shlb
dec
aas
hlt
adcl
aaa
xor
imul
mov
cld
lcall
push
imul
addr16
cmp
pop
push
gs
jmp
fwait
rcrb
fsubrs
push
and
push
outsb
cmp
and
and
mov
jl
fsubp
pop
pop
pop
imul
push
enter
pop
and
popa
jle
outsl
jno
add
inc
push
sub
gs
nop
pop
and
sti
lcall
hlt
loopne
lret
xchg
lfs
pop
push
das
in
pop
sbb
je
hlt
call
mov
aas
imul
adc
pop
subl
cmp
lods
ret
hlt
jno
and
pop
inc
xchg
adc
icebp
add
dec
push
test
ja
gs
inc
dec
dec
aaa
add
subb
pop
pop
pop
loope
or
leave
mov
int3
dec
inc
jae
minps
xchg
pop
inc
cmp
dec
cmpsl
imul
push
in
cmp
andl
inc
repnz
jmp
adc
lods
sbb
sub
mov
and
in
jge
mov
arpl
jp
xchg
mov
cmp
stos
shll
adc
mov
out
mov
lcall
push
sbb
inc
fwait
xchg
mov
es
rcr
test
xor
adc
fcomps
cmpsb
imul
push
call
lds
fsubrl
or
mov
jae
pop
popf
inc
mov
lods
sbb
and
mov
aas
mov
add
jecxz
dec
jle
adc
frstor
dec
test
cmp
lcall
fidivrs
stos
cmp
jae
jns
and
or
scas
int3
dec
ret
and
hlt
or
sbb
push
or
pop
sbb
push
sub
xor
mov
xlat
lret
mov
adc
lar
movsb
outsl
vcvttsd2si
and
gs
out
mov
add
cltd
pop
sbbl
mov
sub
lret
fbstp
in
add
icebp
popfw
insb
pop
push
hlt
imulb
mov
gs
mov
cmp
loopne
ficomps
out
gs
jo,pt
rorl
jmp
ja
icebp
lods
pusha
subl
mov
mov
popl
pop
cs
sbb
int
xor
push
in
ss
popf
pushf
stc
call
faddl
inc
inc
mov
sbb
xor
inc
jo
pop
rorb
arpl
cld
das
jae
dec
and
pusha
cs
mov
cld
sbbb
test
add
adc
push
mov
sub
add
sub
aad
and
out
sti
nop
ja
cwtl
xor
ljmp
in
mov
aas
aaa
mov
leave
lea
xchg
push
jmp
insl
and
mov
dec
inc
mov
insb
lret
rolb
push
push
add
mov
xor
sahf
mov
outsb
sbb
and
xchg
out
mov
ja
in
clc
mov
add
push
dec
icebp
cmp
mov
xchg
add
add
xor
lret
jae
sub
test
ja
xor
popl
or
lret
nop
inc
and
add
sub
data16
xchg
push
dec
mov
outsb
xchg
mov
adc
mov
xchg
push
lods
in
xor
out
sub
mov
sbb
xor
dec
pop
and
enter
dec
scas
loope
or
add
lods
out
ror
les
rcrl
lret
push
adc
jge
push
stc
sub
stc
sbb
repz
inc
jle
mov
push
cmp
lcall
jns
or
cmc
sbb
loop
or
out
push
sbb
and
dec
jle
cmpsl
add
xchg
outsb
lods
out
dec
movsb
sub
std
lea
xchg
test
scas
dec
mov
jmp
aaa
stos
and
inc
ret
jnp
xlat
hlt
jno
jne
lock
stos
fwait
jge
sarb
test
cmp
sub
and
shlb
lods
jecxz
fdivl
dec
ret
dec
fwait
cmp
dec
push
out
sti
xor
divb
lea
mov
fadds
call
push
ret
mov
jecxz
cs
mov
icebp
pushf
xor
rorb
outsb
inc
iret
scas
cmp
pop
jno
insb
mov
dec
xchg
pop
sub
and
sub
xor
ror
repz
sbb
jecxz
push
nop
xor
xchg
dec
push
inc
je
aaa
push
insb
sub
jg
xchg
mov
js
jae
jo
rcll
mov
add
dec
mov
lcall
orb
std
les
pop
ret
dec
dec
stos
fs
clc
xor
and
enter
pop
inc
fstp
lahf
sbb
lret
fisubrs
or
subl
clc
jne
popa
popf
sbb
pushf
ds
jno
push
icebp
pop
fistpl
push
in
adc
pop
cmp
add
jae
stos
arpl
dec
hlt
xor
repnz
ret
sbb
sub
sahf
sbb
dec
out
insb
imulb
in
push
mov
jmp
and
adc
lds
adc
stos
dec
mov
repnz
pop
or
add
in
xor
sbb
movsl
sub
test
loope
and
push
aam
jns
iret
mov
loope
mov
loop
addr16
add
adc
cmove
mov
addr16
sub
pop
jecxz
nop
mov
sti
sub
ret
lret
push
ljmp
int
orb
cmp
adc
xchg
fidivrl
sub
cltd
dec
mov
add
rorb
iret
xchg
fmuls
clc
sarl
cmpsb
push
in
sub
push
add
stc
out
sti
mov
jge
nop
pushf
sub
scas
cwtl
cmp
icebp
aad
pop
xchg
push
jp
jae
addr16
dec
mov
sub
das
mov
inc
lret
xchg
push
cmp
ret
mov
fistpl
mov
mov
stos
adc
ret
jae
jb
push
mov
insl
add
or
fimuls
cmpsl
stos
sub
outsl
mov
bound
xor
sbb
or
rolb
or
push
mov
pop
xchg
jbe
mov
lods
xor
push
fwait
gs
sub
dec
mov
xor
or
mov
insb
cmp
pop
mov
and
lahf
pop
push
jecxz
sub
mov
cmp
rolb
and
mov
popa
cmp
test
fimull
movsl
jecxz
aad
inc
jbe
lahf
mov
mov
push
out
call
xchg
shlb
rorl
xor
iret
lret
dec
add
xchg
inc
and
popf
aam
mov
std
cli
in
dec
popf
movsl
pop
es
movsl
ret
test
dec
loope
scas
fistps
fs
and
pop
xor
push
lahf
out
mov
xchg
pop
or
test
nop
nop
sub
cmc
mov
add
mov
xlat
pop
incb
dec
and
lds
mov
sbb
std
outsl
add
push
push
jnp
push
cld
mov
cltd
dec
push
sub
inc
inc
das
fldcw
sub
std
mov
lahf
pushf
dec
cmp
add
imul
pop
sub
enter
pop
mov
shr
push
jp
outsb
fs
jp
push
inc
or
ficomps
adc
daa
lret
mov
int
fsubrl
dec
maskmovq
divl
mov
sbb
mov
inc
push
into
movsl
nop
push
push
push
mov
int3
jle
ds
jecxz
jns
mov
sub
xor
in
sbb
cmp
mov
adc
cmp
adc
nop
insb
js
insl
jo
sbb
mov
sub
mov
pop
jns
xchg
js
jge
in
fcomip
mov
mov
add
inc
lock
enter
add
out
inc
call
xchg
sarl
push
addr16
cmp
dec
cmpsl
jo
adc
sbb
and
add
mov
stos
inc
sbb
or
outsb
mov
jb
dec
jo
jne
sub
sbb
mov
pushf
daa
inc
das
stos
cmp
in
imul
lcall
inc
xor
mov
fsubs
sbbl
mov
insb
push
test
mov
jae
movsb
sbb
mov
aas
cwtl
add
add
xchg
mov
xchg
adc
es
pandn
sbbl
scas
add
jle
movsb
cld
xchg
lock
cli
addr16
movsl
push
pop
mov
mov
xchg
shll
outsb
cmp
dec
push
pop
push
pop
stos
jbe
cltd
xchg
mov
idivl
push
cmp
xor
rep
dec
pop
jns
mov
leave
int
mov
in
js
xchg
or
jp
cld
lret
les
push
test
movsl
imul
arpl
enter
pop
mov
outsb
jmp
pop
push
mov
or
mov
cmp
lahf
in
mov
pushf
call
add
jg
in
cmp
popa
dec
jbe
aas
mov
scas
cmp
fstpt
push
cs
outsb
icebp
lea
xor
andb
jnp
cmp
adc
fnstcw
fcompl
faddp
push
push
push
rorl
mov
add
lea
and
js
add
aas
xor
adc
xchg
mov
fs
jge
or
lret
call
cmpsb
test
inc
jg
stos
stos
pop
mov
xchg
mov
mov
lock
fimull
mov
dec
inc
shlb
sub
sbb
sub
and
sbb
in
ljmp
dec
lahf
jns
stos
xchg
sub
sar
in
jns
cmp
jl
out
cmp
dec
mov
sbb
xor
adc
dec
popf
pop
cmp
imul
cmp
mov
jo
mov
das
stc
add
adc
xchg
stos
mov
loop
cmp
fnsave
outsl
nop
cld
push
inc
inc
xor
dec
dec
xor
cmp
push
inc
out
jns
jb
sub
xchg
aas
sbb
pop
test
les
cs
cmp
lahf
xchg
sbb
cmp
sti
jmp
lock
inc
inc
mov
out
enter
add
push
xchg
push
sbb
mov
fadds
mov
pop
nop
test
lret
push
mov
push
sub
sbbb
pop
push
incb
inc
pop
inc
in
sbb
add
adc
loop
push
test
ljmp
imul
lods
nop
adc
cmp
add
push
mov
inc
mov
xor
jge
pop
popf
inc
fsubl
dec
cltd
mov
pop
ja
and
jnp
pop
test
sbb
push
rcl
or
xchg
sub
sbbl
mov
mov
inc
mov
rorl
pop
mov
and
push
fdivrp
pop
jb
ss
out
push
or
pop
jmp
mov
xor
cmpl
arpl
push
data16
rol
test
sbb
shlb
aam
jne
int3
cmp
fsubs
in
xchg
cs
mov
mov
push
adc
les
inc
popa
leave
cmp
jo
sub
jl
stos
fs
arpl
pop
bound
fld
outsb
xchg
xchg
xlat
ss
dec
fdivs
call
jo
int3
shrl
gs
xchg
aas
jge
std
dec
jae
dec
push
ret
dec
call
dec
lea
sbb
daa
inc
adc
xchg
aad
pusha
jnp
jno
mov
hlt
inc
movsb
into
movsb
in
pop
mov
jae
xlat
movsl
js
stos
xchg
icebp
adc
fs
mov
mov
movsl
repz
es
inc
add
jecxz
lahf
sbb
sahf
cmpsb
cld
and
gs
sub
sahf
sub
stos
cmp
in
cs
mov
mov
insl
scas
sbbl
out
or
push
filds
jmp
stos
pop
jae
lret
fs
mov
addr16
jl
andl
repz
mov
dec
in
sahf
push
pop
dec
inc
in
mov
cmp
fmull
ljmp
mov
jb
push
cs
mov
and
jmp
ljmp
add
out
lcall
jecxz
fxch
popa
mov
sub
dec
movsl
rcr
loopne
mov
out
shr
movsb
imulb
xor
int3
fwait
dec
jbe
mov
pop
inc
xchg
add
lock
and
in
push
inc
inc
sub
xorl
das
pop
das
nop
jl
cmpl
adc
xor
in
jbe
xor
jecxz
out
mov
mov
pop
pop
jnp
mov
mov
addr16
sbb
fmuls
outsl
das
das
sub
sbb
int
sub
cmc
mov
adcb
repnz
bswap
dec
dec
lret
and
mov
jne
mov
push
mov
in
popa
and
mov
jno
pop
in
sarl
mov
sar
shl
insl
mov
sbbb
xchg
mov
push
mov
sbb
jne
cltd
or
mov
mov
push
add
cmp
pop
jno
nop
mov
jo
int3
add
scas
dec
and
imul
xor
aad
fidivs
sub
and
aam
mov
push
sub
xchg
loop
mov
sub
repz
mov
daa
or
push
adc
hlt
or
add
sub
cs
adc
mov
fnstenv
fistl
aaa
push
pop
out
stos
and
pusha
insl
mov
mov
addr16
jns
adc
nop
in
out
loopne
movsl
movsl
imul
test
popa
or
add
stos
jne
mov
lods
mov
scas
lahf
lea
cwtl
ror
or
push
adc
repz
in
pop
jnp
ljmp
mov
inc
cli
test
jb
cld
aaa
inc
pop
adc
iret
cltd
add
test
movsb
push
lods
mov
loopne
or
leave
xor
xchg
and
and
jae
out
roll
popf
nop
gs
pop
cli
notl
arpl
lods
out
dec
jae
imul
dec
xchg
xchg
aaa
push
or
outsl
fwait
test
adc
mov
rcll
in
mov
bnd
add
xchg
xor
leave
jmp
sub
adc
push
cli
push
inc
xlat
mov
lods
sbb
add
adc
in
nop
or
imul
mov
cli
icebp
ret
dec
mov
push
jg
lcall
insl
dec
testl
push
cmp
and
adc
lea
sub
add
repz
cmp
push
xor
cmp
mov
ljmp
cmc
fucom
out
jb
aas
mov
xchg
or
outsl
ss
mov
aam
test
or
sub
int3
mov
ret
jle
pushf
mov
jns
pop
push
int
test
ret
bound
ror
out
mov
femms
or
aad
aas
cmp
test
mov
pop
loop
imul
in
hlt
pop
call
xchg
rol
pop
inc
mov
adc
stos
iret
decb
cli
cmp
shrl
into
shlb
push
fildl
mov
jne
add
enter
push
push
sbb
dec
gs
fisubrs
add
ficoml
in
lds
clc
out
or
pop
loop
lret
sbbb
and
scas
push
push
cli
and
xor
rcrl
push
movsb
pushf
clc
inc
xor
adc
sahf
jo
outsb
jp
imul
addr16
mov
mov
and
or
sub
adc
scas
or
gs
xor
pop
fst
pop
aam
pusha
push
cmc
and
add
cltd
xchg
jbe
xor
or
mov
ja
pop
lcall
and
mov
arpl
add
ds
test
jne
mov
shl
and
outsl
mov
xchg
pop
inc
aas
adcb
cmp
fdivrl
fwait
cmpps
add
fdivrs
das
mov
outsl
mov
dec
pop
pop
add
into
movsb
sub
cmp
sub
xor
inc
shrl
call
outsl
or
jne
cli
cld
stc
cmp
xchg
lds
pop
mov
sbb
push
stos
ljmp
out
clc
fisubrl
jbe
test
sbb
mov
pop
jmp
pop
js
dec
mov
shll
outsb
jle
je
inc
adc
push
cmp
out
leave
out
popf
push
adc
sub
mov
or
fadd
scas
or
lret
adcb
stc
mov
sbb
mov
jmp
push
fcomps
imul
jle
sub
and
adc
pop
adc
lahf
ljmp
lahf
push
int
add
or
adc
jecxz
or
xchg
adc
aas
fnsave
mov
mov
dec
js
movsl
js
subl
pop
aas
pop
loop
mov
cwtl
bound
fs
cmpsb
jnp
fnstenv
insl
sbbl
std
fwait
cli
loopne
jmp
xor
movsb
fdivrs
mov
and
pop
jno
pusha
addl
mov
sti
inc
and
pop
mov
push
xor
push
cld
add
scas
dec
ds
shrb
stc
adc
pop
into
xchg
in
int3
push
mov
pop
sub
jne
stc
je
imul
cmp
push
xchg
lods
inc
mov
fldt
or
pop
pop
ds
repz
js
push
mov
sbb
pop
hlt
pop
test
fs
dec
mov
test
pop
sti
pop
cmp
or
dec
ja
mov
js
xor
std
daa
int
inc
test
mov
inc
outsb
fsubs
ljmp
sbb
and
in
mov
mov
mov
in
or
stc
jns
bound
xor
sub
std
aaa
lods
add
enter
push
dec
pop
ljmp
push
or
adc
mov
and
lgs
rol
loopne
and
decb
aas
mov
and
test
gs
add
xchg
andb
mov
lret
xchg
mov
adc
test
push
cmp
cmpsb
xchg
or
sti
neg
cs
loope
in
lret
mov
push
fldcw
iret
xor
test
mov
fnstenv
pop
and
jne
iret
mov
jg
xchg
and
adc
cmp
bound
jmp
and
dec
cmpsb
outsb
lods
rorl
jne
lods
dec
sub
add
mov
jae
jo
mov
dec
sar
out
inc
sub
ja
mov
adc
and
es
stc
add
scas
mov
jmp
rcll
jl
or
pop
out
sub
pop
mov
push
push
int
out
mov
mov
push
sub
cmp
cmp
fdivr
jle
or
push
lcall
aaa
lret
jmp
shlb
mov
cwtl
aas
icebp
jecxz
add
inc
push
push
jmp
and
mov
sbb
subb
dec
push
rcll
mov
cwtl
iret
out
xchg
mov
aaa
inc
fbld
push
movsl
scas
leave
pop
cltd
mov
jb
cs
int3
add
pusha
inc
mov
pop
or
and
jg
mov
jno
inc
sbb
pop
daa
pop
mov
sub
lods
sbb
sub
xchg
cmp
movb
clc
sub
pop
push
loope
xchg
xchg
lret
or
sbb
test
and
xlat
mov
testb
sub
dec
push
mov
pop
fnstenv
lcall
dec
gs
fmul
mov
iret
inc
xchg
test
addb
outsb
scas
push
mov
ds
dec
cld
push
xchg
jb
repz
sub
dec
inc
in
test
push
rcll
out
cmp
mov
pop
xor
sahf
adc
ja
cmp
mov
cltd
push
xchg
and
ds
cmpsl
add
mov
imul
pusha
loopne
jecxz
shlb
push
inc
xor
lcall
out
adc
jl
ret
or
leave
cli
andb
push
cmc
std
arpl
test
pop
push
sbbb
popf
fldcw
repz
outsb
push
sbb
push
adcl
leave
add
add
into
pop
mov
stc
adc
insb
mov
jns
in
fsts
shll
xchg
cmp
jae
push
insb
inc
mov
pop
leave
stos
xlat
push
fadds
mov
out
push
cmpsb
and
push
mov
mov
dec
fiadds
ja
lret
int3
adc
lcall
stos
enter
mov
pop
into
pop
or
xlat
adc
mov
mov
sub
mov
xchg
inc
mov
jno
jns
xchg
fdivr
xchg
nop
mov
outsl
adc
xlat
push
xorl
daa
pop
outsl
mov
pop
jo
and
xchg
std
jnp
cmp
mov
std
popf
adc
fld
jns
adc
pop
lea
int3
fsubrl
sub
imul
lock
and
scas
mov
push
pop
setno
push
mov
shr
xchg
mov
in
out
pop
pusha
dec
bound
aad
and
push
sbb
inc
loope
scas
fmull
inc
xor
and
fistl
push
hlt
cmp
mov
jge
sub
fwait
mov
cmp
cmp
rcll
incb
pop
mov
js
xchg
push
loope
test
sub
out
jg
in
push
cmc
divl
pusha
mov
jle
push
adc
sti
mov
push
repnz
pop
cs
mov
arpl
outsl
inc
pand
jge
push
jae
mov
jo
test
enter
adc
testl
je
dec
jmp
nop
xchg
addr16
ds
out
ficoms
cmp
cmp
xchg
mov
aaa
orb
loope
lcall
mov
out
daa
faddl
and
inc
lods
shll
dec
enter
out
mov
xchg
les
jae
dec
outsl
arpl
rorb
fdivl
push
add
or
sub
inc
aam
inc
orb
std
xcrypt-cbc
cmpsl
shr
out
pop
cmc
in
mov
cli
jb
js
testb
jbe
nop
jae
stos
jge
jae
cmp
lret
loope
pushf
rolb
mov
mov
repnz
outsl
inc
fiadds
sub
push
repnz
mov
jl
aaa
and
mov
call
xchg
mov
push
push
aaa
inc
add
lret
loopne
cmp
mov
stc
fsubrl
pop
sub
jae
jle
jle
in
adc
inc
push
inc
jb
sbb
ficomps
testl
test
xchg
cmp
rorb
pusha
int3
pop
lret
pop
push
sub
outsb
fs
loop
xchg
idivl
xchg
xor
add
sbb
mov
mov
into
test
jo
add
or
xlat
je
pop
or
push
ret
mov
loopne
dec
enter
cmpsb
push
je
mov
sbb
xchg
pop
call
xchg
into
movsb
roll
sti
push
in
ret
sub
fnstsw
cmp
mov
mov
or
stos
sbb
mov
add
lods
dec
cmp
popf
cmc
mov
dec
inc
pop
jo
mov
mov
sub
pusha
gs
hlt
clc
out
js
dec
jge
pop
lcall
or
je
adc
fnsave
jmp
loopne
icebp
stc
add
loop
cmp
xlat
pop
stos
push
mov
fcoms
cs
jg
mov
sub
xorl
ss
lahf
sti
mov
xchg
cmc
add
bound
std
shrl
dec
ja
jae
add
push
int
inc
icebp
ja
and
pop
cmc
hlt
bound
mov
cmpb
test
int3
imul
push
iret
test
mov
xchg
push
rsqrtps
jle
mov
les
or
dec
inc
xchg
mov
adcl
pop
in
or
mov
lret
xchg
loopne
inc
dec
ret
les
je
cmp
push
pop
dec
xor
mov
inc
loope
xchg
push
xor
sub
add
cmp
test
inc
dec
inc
xchg
lcall
int3
inc
pop
inc
push
gs
mov
mov
cwtl
fldenv
fldt
pushf
sbb
mov
add
out
mov
loop
loope
sub
pop
cltd
loope
xlat
shll
pop
mov
ss
dec
mov
sub
ret
adc
jae
cmpb
sub
lcall
push
adc
mov
cmp
pop
pop
dec
dec
push
insb
push
pop
pop
adc
das
insb
clc
scas
dec
int
popf
icebp
daa
orb
popa
pop
mov
je
add
sbb
jle
mull
hlt
jmp
mov
mov
rolb
fistpl
leave
sub
pop
sbb
mov
out
outsl
imul
lock
mov
xchg
sub
dec
push
xchg
test
jo
shl
or
push
inc
mov
pop
addr16
aad
out
popf
cmpsl
or
test
pop
xchg
push
add
xorb
xchg
sti
push
jo
push
lret
xor
mov
mov
lcall
dec
and
stos
add
and
mov
push
pop
push
lds
add
pop
and
push
jbe
imull
cmp
orb
rcrl
iret
movhps
addb
pop
aas
lods
mov
xchg
jae
mov
std
xor
lahf
sbb
jmp
sgdtl
mov
push
mov
sbb
push
sar
and
xchg
lea
sub
mov
jnp
jp
lods
pop
sub
fimuls
mov
adc
outsb
scas
add
push
sub
mov
test
xchg
rorl
inc
mov
sti
cmc
out
jae
jle
dec
sbb
cmp
cmpsb
clc
mov
mov
ss
imull
jmp
mov
cwtl
cmp
ret
sub
pop
arpl
cmp
rclb
pop
jge
or
pop
pop
stos
ret
imul
or
popa
mov
adc
or
das
cmp
cmp
cmp
hlt
imul
adc
fcmovnbe
pop
ljmp
clc
movsb
movups
outsl
and
cmp
xlat
cwtl
jle
and
add
cmp
ds
jg
fnsave
mov
push
mov
popf
popf
test
adc
sub
adc
out
push
shrw
xor
in
into
mov
arpl
mov
out
xchg
jb
inc
fistpll
sub
jne
sub
aaa
sbb
dec
and
mov
pop
out
aas
imul
mov
xchg
pop
ficoms
test
jle
testb
dec
cld
lcall
enter
es
and
ds
and
xor
pop
sub
sti
stc
ret
es
mov
pusha
push
push
sub
mov
lcall
mov
mov
cmpb
mov
jle
sahf
dec
add
xchg
adc
sub
lods
jmp
insb
fsubs
in
push
xor
lret
ror
addr16
test
sub
push
push
adc
jns
dec
push
dec
jnp
testl
sub
sub
mov
jp
nop
mov
mov
pop
and
sti
mov
push
lods
mov
push
inc
jo
sub
xor
and
jbe
push
je
xchg
cmp
mov
rcll
xor
inc
in
icebp
pop
sub
ja
out
lds
lods
push
cmp
mov
stos
xlat
test
push
mov
scas
push
sub
dec
mov
movsl
jge,pn
xchg
dec
push
inc
test
or
adc
lods
mov
sub
xchg
xchg
mov
push
or
cld
sbb
cmp
adc
xchg
lret
pop
inc
inc
aas
dec
dec
jbe
mov
test
mov
orb
outsl
mov
cld
mov
mov
lock
mov
mov
call
test
add
jg
cmp
cli
imul
sub
xchg
in
jg
addl
lds
es
mov
jno
orl
pop
adc
sbb
jns
cmp
out
add
inc
inc
mov
and
add
lods
cld
mov
dec
arpl
ret
add
add
jmp
push
arpl
add
jbe
stos
xchg
mov
jp
push
dec
loope
push
rcl
pushl
add
test
adc
jns
sub
mov
xchg
in
and
push
sbb
push
or
fnstenv
arpl
lret
pop
mov
push
hlt
mov
xor
sub
repnz
mov
cs
pushf
ljmp
iret
mov
cmp
xor
jge
mov
int3
out
insl
lcall
addr16
test
dec
subl
mov
movsl
cmpsb
xchg
sbb
das
and
cli
xchg
pop
push
or
inc
pop
mov
mov
jb
loop
cmp
aam
pop
lcall
dec
fisttpll
xchg
jns
xchg
add
dec
push
fnsave
out
add
loopne
push
std
cs
adc
int3
movsl
fdivrs
dec
out
inc
push
sti
mov
ret
jns
sub
and
push
andb
test
out
repz
ja
xor
xchg
lcall
and
jg
insl
clc
dec
mov
dec
dec
lods
xor
cmpsl
dec
push
pop
xchg
rolb
mov
out
xor
jp
aas
ss
mov
push
sti
lods
fldenv
je
pop
aam
cmc
inc
adc
js
lods
xor
loopne
or
or
mov
rcrb
xchg
jle
inc
inc
jne
dec
movsl
test
fldl
std
pushf
or
sti
mov
out
add
fwait
jmp
mov
sbb
add
lods
clc
movsl
dec
mov
push
jne
outsb
lds
mov
sahf
cwtl
and
xor
js
push
cmp
je
lcall
test
jle
push
sti
jp
leave
test
push
sbb
in
test
call
xorb
pop
ljmpw
push
xlat
ja
mov
sbb
dec
mov
stos
and
and
mov
mov
push
mov
sub
cmc
shrb
sarl
jo
adc
cmp
push
fs
xchg
addr16
gs
sbb
xor
push
add
fisttpl
scas
popf
cmpsl
je
fwait
call
rep
push
sbb
mov
xchg
mov
sbb
test
lret
adc
or
fdivrp
mov
adc
decb
cmp
inc
fsubs
or
test
pop
sub
test
loope
arpl
or
icebp
sbb
fisubrl
sahf
mov
xor
nop
add
pop
sahf
dec
out
outsb
fsubl
inc
inc
add
aam
imul
int3
das
mov
nop
inc
loopne
ss
cmp
int
or
in
hlt
in
dec
or
jmp
imul
mov
push
pop
jl
cmp
mov
sbb
ret
mov
lock
xor
pop
scas
pop
insl
adc
fnsave
pop
add
pmaxsw
insb
je
inc
jo
fldcw
jl
or
or
cwtl
fidivl
test
scas
in
scas
mov
xchg
stos
cmp
movsl
lcall
lods
add
inc
ss
nop
test
xchg
mov
nop
cmc
mov
push
push
outsb
movsb
cld
fs
inc
push
movsl
sub
or
sbb
dec
pop
adc
testl
cmc
mov
add
arpl
out
pop
push
push
movsb
ret
dec
repnz
adc
lods
add
cmp
cli
push
bound
sbb
push
adc
push
dec
inc
dec
mov
inc
jmp
push
clc
lcall
push
sarl
repz
es
xor
dec
pop
int
out
sbb
mov
jno
outsl
sti
test
mov
mov
rolb
aad
and
mov
shrb
cld
dec
imul
ss
dec
jmp
cmpsb
ficompl
rorb
arpl
mov
fs
lods
jle
xchg
ja
cmp
mov
dec
pop
ret
mov
sbb
jb
shll
xchg
das
mov
out
lods
ja
mov
mov
jo
adc
inc
xor
pop
stos
jg
pushf
adcb
arpl
lahf
jl
dec
sub
cli
or
xlat
jmp
mov
test
sarb
dec
mov
mov
push
fwait
add
outsl
push
sbb
jae,pt
sbb
mov
xor
fists
ds
cltd
xchg
mov
dec
dec
imul
sbb
xor
jl
push
mov
adc
lret
dec
push
sub
cmc
dec
shl
stos
out
fistpl
out
cmp
mov
adc
add
fdiv
pop
inc
dec
mov
lods
fmul
imul
or
xor
push
push
std
cmp
jb,pn
out
xorb
jb
insb
and
sbb
sub
mov
repz
mov
movsb
mov
lods
test
lods
inc
xor
ljmp
xchg
push
adc
push
jle
add
fdivrs
dec
out
mov
mov
mov
and
sahf
ja
test
sbb
add
lahf
rolb
jp
jp
fisubrs
lea
and
xor
ja
mov
adc
xlat
dec
hlt
adc
insb
decb
inc
dec
cltd
xchg
mov
adc
xchg
xlat
or
out
ror
imul
cli
gs
movsl
scas
sbb
lahf
sub
loope
int3
sub
inc
mov
cmp
cmpsb
ret
andb
xor
lds
cmp
dec
inc
pop
scas
inc
adc
shrl
out
dec
adc
cli
gs
ljmp
add
or
mov
xchg
out
ret
imul
fs
dec
cmpsl
pusha
imul
fucomp
jnp
sbb
lods
fbld
sti
jge
add
mov
in
jle
adc
shll
lret
adc
dec
mul
mov
push
popa
mov
insb
std
and
xor
addr16
inc
mov
js
and
lea
paddsb
push
sub
movsl
mov
pop
jae
mov
mov
cmp
hlt
mov
in
xor
or
fidivs
push
sub
jo
pusha
mov
imul
adc
dec
mov
add
mov
add
dec
outsb
mov
add
cmp
jle
ss
adc
inc
hlt
xchg
rolb
icebp
jns
mov
mov
paddusb
loop
jle
push
xor
cmp
shrl
test
std
push
std
adc
in
lods
stc
clc
clc
loope
test
inc
mov
push
cwtl
aaa
outsb
jecxz
adc
ret
sbb
mov
xor
int3
in
out
and
push
test
int
repz
jne
subb
lcall
cltd
jo
cmp
adc
adc
dec
add
je
push
nop
xchg
cmp
faddl
pop
xor
repnz
lret
shr
data16
xchg
mov
xchg
jnp
es
pop
jb
mov
cmp
pop
loope
js
sbb
les
lret
push
rcll
arpl
loopne
out
rcl
scas
jl,pn
test
outsb
dec
push
daa
stc
cld
mov
sbb
lock
xchg
sarl
test
add
shrl
xchg
xor
push
out
sub
cmp
mov
popa
dec
stos
cmp
adc
jns
out
and
call
mov
stos
lcall
mov
mov
hlt
sub
inc
or
adc
insb
mov
mov
ja
leave
out
imul
mov
mov
mov
jae
ret
ja
mov
jne
rol
fisttps
and
aaa
push
xor
dec
push
leave
xchg
std
aam
lods
incb
pop
xchg
iret
popf
outsb
pop
pop
pop
aaa
inc
push
out
cld
sbb
add
add
mov
aas
sub
mov
dec
xor
in
iret
popf
xchg
jecxz
ror
shll
in
aam
fistl
pop
loope
mov
xor
mov
cmpsl
inc
inc
pop
push
sbb
and
sbb
int
xor
int
xor
rolb
loope
mov
je
repnz
sbb
call
mov
or
aas
mov
lahf
pop
mov
add
enter
jge
or
adc
cltd
mov
test
cmp
dec
adc
add
repz
add
pop
mov
int3
mov
test
test
enter
out
jge
pop
std
je
js
loope
adc
xchg
cmp
add
sub
dec
int3
ret
push
test
mov
pop
mov
inc
in
or
js
push
ret
std
mov
pop
aas
dec
xor
into
xchg
add
aam
pop
hlt
sbbb
cmp
imul
xlat
add
xchg
dec
sbb
popl
int3
xor
pop
or
int3
test
idivl
loopne
or
mov
pop
mov
imul
push
inc
faddp
cli
mov
xchg
pop
fs
popl
jle
subl
in
mov
stos
imul
sub
stc
adc
add
mov
xlat
pop
xor
xchg
hlt
add
decl
aad
sub
nop
sbb
add
in
add
jl
loopne
push
add
aad
fnstcw
and
adc
xor
push
pop
popa
add
sti
jge
pushf
mov
pop
pop
cltd
aam
shrl
adc
and
push
inc
xchg
jg
xor
jnp
pop
movsb
push
mov
dec
sbb
divl
gs
mov
add
xchg
mov
fldt
ret
jae
aas
fwait
mov
aam
mov
push
repnz
mov
adc
or
outsb
fchs
dec
jecxz
xor
mov
std
mov
scas
xor
in
mov
cmp
pop
clc
xchg
xchg
fisubs
push
icebp
sub
adc
pop
dec
dec
dec
mov
mov
lds
and
push
xchg
in
ljmp
lock
cmp
mov
push
call
pop
arpl
cli
jo
popf
data16
mov
jae
pop
or
cmpsb
push
shll
or
cmpsb
or
sahf
mov
push
xchg
stos
mov
les
cltd
adc
jmp
adc
pusha
add
loopne
push
std
jge
cmove
das
movsb
xor
mov
sti
popf
bound
pop
iret
aam
xor
xor
jno
jge
lret
movsl
jo
push
cwtl
cli
and
jecxz
sub
imul
jge
clc
mov
test
xchg
sbb
sahf
jns
mov
hlt
je
aaa
adc
lock
cmp
and
pusha
mov
push
rcrl
inc
into
out
stos
cmp
js
subb
xchg
gs
fisubl
mov
lret
bound
add
jmp
push
mulb
jecxz
inc
shr
sub
pop
sarl
nop
imul
mov
repz
pop
mov
mov
ret
ss
xchg
movaps
jns
aaa
nop
stos
gs
lret
cmp
pop
cmp
loopne
mov
adc
inc
test
enter
in
jp
movsb
push
dec
mov
daa
jb
jg
fcoml
cmp
pop
repnz
cmp
in
sub
ficompl
xlat
inc
xchg
push
sub
sbb
push
lcall
in
test
mov
addr16
cmp
gs
rsm
in
iret
or
jmp
xchg
loop
cmc
mov
jb
add
call
out
dec
sub
movsl
sub
lods
push
sbb
lock
lock
lcall
jnp,pn
push
loopne
mov
jl
pop
push
sar
adc
xchg
pop
push
inc
gs
loop
sbb
lods
mov
rol
lcall
loopne
pop
adcb
push
adc
sti
ja
ret
cmp
jae
stc
idivl
testl
xchg
sahf
testl
arpl
addr16
les
xor
add
enter
jp
add
subb
mov
xor
push
mov
jnp
inc
mov
daa
mov
push
das
loop
popf
adc
jnp
out
lods
int
ret
mov
mov
mov
dec
xor
xor
pop
xor
or
ficoms
arpl
mov
or
or
div
enter
jmp
mov
xor
fistps
sbb
ja
cwtl
out
adc
adc
imul
push
out
mov
lock
or
loop
xor
mov
arpl
pop
mov
aaa
xor
cmp
sbb
sahf
gs
jge
int
dec
movsl
les
pop
jns
gs
sbb
sti
push
push
aam
int3
xchg
pop
xlat
stc
dec
cmp
mov
arpl
mov
aaa
pop
xor
cli
fwait
adc
scas
cmp
adc
and
ret
hlt
mov
mov
std
dec
cmp
and
mov
mov
push
stc
fimuls
jge
in
pop
mov
pop
dec
inc
dec
sbb
lock
sub
and
jne
cmp
xchg
jle
fwait
jg
pushl
add
mov
xchg
dec
and
popl
xchg
sbb
leave
movsb
xchg
xchg
jecxz
in
pop
daa
das
icebp
push
mov
inc
nop
mov
mov
push
dec
fnstcw
das
sahf
loop
movsl
xchg
ror
clc
popa
nop
imul
iret
jno
inc
jmp
mov
add
lret
jbe
test
dec
xor
mov
jbe
mov
push
das
and
ss
jl
les
cmpsb
int3
in
xor
fistpl
mov
xor
mov
aaa
gs
fdivrl
outsl
and
xchg
and
jle
adc
push
push
mov
mov
mov
mov
loop
sub
outsl
inc
popa
mov
fisttpll
mov
jb
jmp
jno
lahf
mov
ret
scas
movb
push
xchg
movsl
mov
cs
mov
loope
pop
jae
cmp
sub
call
popf
add
adc
ds
xchg
jge
jnp
xor
js
xchg
sbb
lods
sbb
mov
sti
mov
or
testl
jmp
fwait
pop
mov
push
jo
in
xchg
les
int3
mov
cwtl
jp
add
pop
inc
mov
pop
fs
mov
pop
jecxz
test
or
popa
mov
mov
enter
xchg
ss
xor
adc
xor
jg
or
push
out
adc
fmuls
out
movsl
repz
std
jl
nop
inc
mov
jmp
add
mov
ss
xchg
inc
cmpsl
pop
and
jae
js
arpl
mov
push
hlt
jae
push
jne
dec
xchg
lods
movsl
lock
pop
loope
mov
inc
mov
cmpl
or
dec
iret
push
sbb
dec
sbb
mov
addb
mov
push
xor
mov
mov
and
mov
xor
scas
xchg
scas
lcall
mov
stc
jg
push
xor
push
push
push
adc
pop
scas
jp
pop
push
in
int3
push
mov
jle
iret
pop
dec
sub
xchg
jmp
cmp
xchg
xchg
adc
jg
push
lock
in
cltd
arpl
cmp
mov
inc
dec
or
out
xchg
jnp
stos
dec
ror
je
test
push
int3
dec
cmp
mov
sti
rcr
test
pusha
jb
mov
out
or
mov
jns
mov
add
mov
mov
lds
push
inc
pushf
push
lods
inc
sbb
mov
mov
out
inc
scas
mov
in
adcb
jg
rolb
in
sub
pop
bound
mulb
mov
lods
gs
jp
add
xchg
pop
mov
xchg
cltd
popa
jle
subb
sub
lcall
sbb
cmpl
cs
addr16
xor
dec
cmp
pop
mov
xor
inc
rcll
outsb
faddl
or
mov
or
aam
inc
test
scas
fcmovb
mov
pushf
xor
xchg
mov
in
int3
test
pop
sbb
pop
adc
leave
fucom
add
out
test
jge
sbb
into
mov
je
leave
cmp
xchg
sbb
test
push
rcl
lock
mov
aam
xchg
pop
sbb
movsl
sbb
mov
dec
sti
call
jg
cmpsb
mov
rcrb
xchg
mov
mov
fsubrs
sbb
addr16
and
adc
mov
xchg
cmpsb
xor
stos
or
push
mov
fidivrs
push
cmp
pop
sbb
fnstenv
sbb
fcmovu
mov
scas
sub
jb
pop
jl
pop
cmp
jns,pn
fadd
aam
mov
mov
outsl
sbb
sub
shlb
sub
sub
push
xor
icebp
arpl
out
cwtl
movsb
jl
pop
mov
inc
pushf
aam
test
push
aas
mov
outsb
pop
movsb
xor
pop
jae
aas
and
out
inc
jo
push
inc
jae
mov
jbe
in
push
lods
pop
sahf
push
pop
fcomp
pusha
cmc
add
push
push
xchg
mov
cwtl
or
nop
loop
add
xchg
jbe
popa
repnz
adcl
not
repnz
aam
fiaddl
mov
xor
mov
add
and
xchg
inc
cmp
jae
jge
ja
mov
inc
es
sbbl
lret
fwait
adc
xor
orl
ret
mov
ljmp
jns
inc
lret
dec
loope
int
cmp
or
jbe
movb
fisubrl
lcall
lea
rolb
shll
incl
aas
insl
pushf
lret
mov
mov
clc
and
js
add
sub
lock
add
stc
imul
hlt
sbb
in
push
mov
shll
cmp
xor
leave
mov
cmp
push
xchg
paddusw
dec
repnz
scas
add
pop
pop
sbb
stos
outsl
xor
or
in
clc
cmp
dec
dec
test
dec
dec
add
out
jmp
dec
cltd
fsub
subl
test
aaa
mov
scas
into
mov
sub
icebp
into
pop
shll
jne
mov
mov
sub
lret
notl
xor
hlt
cmp
lea
xor
sub
lret
xchg
mov
ret
rorb
mov
fsub
and
adc
pop
popf
or
mov
xchg
test
mov
xchg
clc
xchg
aaa
rcll
sub
inc
in
aaa
mov
loop
inc
sbbb
pop
testb
pushf
movsl
pop
xchg
lea
push
mov
in
fsubrs
addr16
xor
int
and
dec
xchg
loope
jne
xor
jnp
pop
and
and
js
test
test
andl
inc
jmp
hlt
mov
mov
out
jmp
cmp
repz
dec
jp
xchg
aam
or
mov
jae
add
lea
mov
mov
testb
stos
jbe
inc
movsl
push
enter
cltd
xor
stos
jae
data16
rorb
jmp
push
mov
cmp
rcrb
mov
rorl
imul
shl
mov
dec
outsb
stc
cld
addl
mov
pop
push
fsubrl
adc
fiadds
lock
aad
gs
iret
call
jo
loope
sbb
push
inc
xchg
loop
adc
imul
rorl
shll
sbb
xlat
mov
inc
mov
jmp
mov
nop
mov
mov
mov
aas
xchg
inc
inc
cmpsl
jb
movsb
or
xchg
inc
leave
dec
jb
pop
xchg
mov
sbbl
jnp
cmp
or
sbb
fdivrl
pop
aaa
cmpl
cli
dec
enter
dec
mov
shlb
mov
mov
outsl
dec
mov
data16
push
mov
push
fnsave
jb
lock
cs
in
mov
mov
xchg
inc
adc
push
jae
es
pop
pop
scas
jp
jmp
nop
xor
mov
xchg
pop
js
out
push
lods
sbbl
xlat
dec
jne
jno
jno
mov
cmp
mov
adc
sub
rcrl
lds
lock
or
push
push
mov
sti
jmp
jg
push
sbb
ja
mov
inc
fwait
sbb
out
icebp
pop
mov
clc
xor
sbb
push
sub
clc
or
inc
pop
insb
pop
xor
lret
aam
mov
lret
shll
repnz
mov
in
mov
fwait
lds
sub
xchg
xchg
mov
mov
cwtl
jo
adc
xor
sbb
gs
or
pop
push
or
fisttps
sbb
jmp
aam
mov
shl
inc
xchg
repnz
mov
into
push
push
sub
dec
sub
cs
ljmp
sub
aad
xchg
mul
push
or
cmp
xchg
ret
les
dec
shrb
jbe
or
xchg
mov
sti
mov
inc
mov
scas
das
fdivs
lret
jnp
cmp
mov
mov
pop
and
push
mov
cwtl
pop
sbb
mov
sbb
cmp
scas
jnp
popf
cs
inc
hlt
inc
jp
and
push
lods
pop
push
and
push
adc
pushf
mov
inc
sbb
pop
sub
sub
incl
test
mov
gs
mov
jo
mov
sub
stc
jno
jnp
mov
dec
jmp
and
push
cmp
xchg
pusha
or
fldt
dec
stos
inc
push
mov
adc
addb
cmc
lret
ficompl
jg
inc
lods
roll
loop
inc
sub
imul
mov
pop
sbb
out
xchg
sbb
inc
xor
jnp
adc
dec
shrl
push
into
aaa
cmp
fdivrl
pop
test
cli
adc
aaa
jp
inc
jmp
xor
ja
mov
adc
adc
out
or
adc
jge
test
dec
stos
mov
mov
push
stos
paddusb
into
xchg
jb
testb
outsb
rcll
push
mov
lods
or
stos
mov
sarl
mov
add
xlat
aaa
fs
push
dec
mov
icebp
test
lidtl
sbb
stos
adcb
pop
imul
pusha
push
in
jo
aaa
daa
sahf
and
pusha
repnz
loope
mov
iret
fidivrl
fistps
push
mulb
or
inc
in
cmpb
mov
pop
sub
dec
xor
fwait
test
outsl
xchg
scas
imul
mov
out
pslld
fcoml
add
xchg
sbb
and
jl
insb
xorb
gs
fcmovbe
pop
inc
dec
das
mov
jp
lahf
add
and
sub
pop
scas
cmc
dec
add
in
lds
arpl
fnstcw
pop
mov
sbb
xor
das
cli
cs
and
mov
mov
addr16
or
es
fisubl
jbe
pop
xor
sub
les
loop
cltd
iret
xchg
rolb
xlat
roll
popf
xor
cmp
mov
pop
cli
cli
cmp
dec
jbe
movsb
and
imul
cmpsl
lock
and
push
test
leave
dec
add
in
into
mov
xor
mov
push
pusha
cmpsb
imul
fildll
rdmsr
aas
aam
shll
adc
out
cltd
cmp
mov
pop
or
or
dec
push
jae
mov
jmp
dec
into
cmp
mov
and
xchg
inc
fdivl
xchg
mul
lret
add
mov
iret
and
cmp
mov
outsb
incl
push
jbe
popa
ljmp
lods
jbe
repz
in
add
push
and
sti
in
flds
out
lods
aas
cmp
lret
mov
mov
push
cwtl
or
pop
popa
dec
fiadds
inc
imul
push
push
xchg
popa
into
repnz
jmp
lret
xchg
shr
add
call
cli
scas
push
lcall
negb
xlat
std
sbb
mov
es
fcompl
pop
mov
or
lods
outsl
and
inc
sub
repz
adc
cld
imul
imul
adc
fs
lcall
or
xorb
inc
mov
cs
cmp
mov
jmp
pop
scas
xor
adc
gs
enter
pop
fisttps
aaa
das
xchg
pop
or
adcb
repnz
out
fistpl
push
pushf
insb
aad
pop
cmp
add
xchg
pop
mov
js
adc
lret
cmp
dec
adc
hlt
add
mov
fnstsw
pop
push
repz
sbb
jnp
mov
push
pop
arpl
jae
outsb
je
jno
xor
loop
push
test
mov
mov
movsb
adc
ficoml
xlat
loop
inc
cld
leave
sbb
mov
jmp
lcall
mov
cmp
jno
adc
xchg
mov
pop
shl
into
std
lret
ud2
dec
sub
into
ljmp
xor
pusha
ds
pusha
mov
test
pusha
or
pop
sub
fldenv
clc
flds
insb
jnp
in
push
fisttpll
mov
mov
ret
stos
fs
hlt
inc
adcl
jbe
cmc
movsb
pushf
rep
jo
clc
sub
sbb
jbe
arpl
jae
out
pop
mov
sbbl
fsubs
adc
xchg
ret
xor
fs
mov
or
or
xchg
xchg
add
popa
repz
mov
sub
mov
testb
sub
out
adc
das
addr16
dec
addl
sub
test
loopne
inc
sbb
jno
mov
xlat
sbb
adc
mov
sbbb
inc
mov
mov
pop
pop
jmp
ljmp
fstl
cwtl
out
push
pop
xchg
mov
xor
mov
xchg
push
sub
jecxz
lods
xlat
cmc
mov
ss
push
loope
loope
dec
rcrb
iret
lods
inc
mov
inc
xchg
dec
shlb
and
iret
inc
es
adc
sbb
sub
mov
sub
bswap
ja
ret
dec
rcll
orl
push
es
adc
ffreep
mov
pop
jno
testl
ret
push
loope
dec
addr16
out
sub
repnz
test
leave
add
push
adc
push
out
mov
mov
xchg
icebp
and
mov
push
nop
out
sbb
inc
mov
inc
repnz
adc
test
das
test
cmp
decl
mov
xchg
es
sub
pop
fld
fwait
lea
mov
enter
mov
test
inc
scas
adcl
aaa
lods
pop
xchg
fxtract
popf
sbb
cmc
movsl
mov
das
lock
adc
stos
enter
pop
cmpsb
dec
cmp
and
loop
mov
sbb
cmp
dec
stos
test
incl
ljmp
sub
sub
push
dec
sub
mov
jg
jl
shlb
sbb
vpunpcklqdq
fwait
pop
gs
fadds
data16
loope
fildl
cmovno
fisubs
xor
loopne
daa
mov
adc
icebp
push
icebp
fucomi
leave
mov
sub
cmp
es
sahf
arpl
adc
ja
bound
das
mov
popa
cs
idiv
jp
jl
xor
sbb
mov
inc
mov
push
mov
mov
into
add
mov
pop
shlb
imull
dec
push
cld
bound
data16
mov
sbb
sub
fs
pop
std
bound
add
mov
fwait
lock
pop
jo
inc
xchg
adc
xchg
insl
mov
adc
and
inc
dec
mov
fistpll
lock
cmpb
xchg
cld
leave
adc
xchg
jge
scas
jbe
xorb
loope
dec
scas
ja
adc
int
jne
lret
movsb
test
stos
mov
sarl
icebp
insl
js
rorl
push
and
fcomip
xchg
cmc
cmc
mov
xchg
pop
fidivs
faddl
adc
jl
sahf
lea
mov
mov
and
arpl
lret
lret
nop
call
lods
dec
mov
add
ljmp
pushf
cld
stos
pop
gs
iret
inc
add
lods
repz
icebp
adc
into
movsl
pop
ds
into
and
pusha
lret
stos
sub
les
in
int3
add
sub
pop
sub
sub
sbb
or
movsl
in
stos
stos
popf
imul
or
aas
daa
sti
dec
jp
lods
jmp
ds
pop
xchg
mov
addr16
fimull
inc
ret
cmp
cmp
out
sahf
xlat
inc
setbe
jns
iret
adc
rcrl
shlb
js
mov
rcll
and
hlt
sti
xchg
inc
add
mov
sub
test
mov
sbbl
pop
sbb
test
xchg
mov
dec
xchg
nop
push
insl
xchg
xchg
movsb
jne
inc
pop
jno
mov
inc
test
lahf
fdiv
fidivrs
push
lcall
in
push
dec
gs
cmp
aam
push
jle
mov
pop
aaa
loope
mov
mov
inc
mov
xlat
jg
cmpsl
pop
dec
jg
inc
adc
shlw
fisubrl
jp
outsl
push
sbb
cmp
test
lret
shl
push
dec
sbb
mov
lcall
sahf
fldcw
insl
mov
dec
sub
stos
mov
aam
inc
xor
sub
cs
sbb
test
cmpsb
jo
dec
pop
enter
insl
nop
inc
repz
outsl
or
dec
les
shrl
adc
jne
mov
jno
sar
mov
lcall
out
clc
mov
dec
push
mov
sub
jo
out
lret
xchg
fisttpll
push
jnp
xor
repz
das
insb
pcmpgtb
sbb
in
mov
mov
jle
leave
and
push
aam
das
xchg
xor
in
adc
and
test
loop
mov
addl
sbb
sbb
mov
jno
jl
cmc
stos
cmc
lea
mov
inc
lea
and
sbb
jnp
and
stos
dec
dec
xor
dec
mov
cmpsb
push
mov
sub
fmuls
xor
sti
xchg
and
mov
test
dec
push
nop
lods
push
ljmp
mov
and
ja
cmp
testb
inc
test
jecxz
xor
movsl
divb
mov
rolb
adc
mov
pop
aam
mov
jae
lahf
jne
jae
imulb
xchg
pop
clc
or
push
ror
mov
ds
es
aad
lods
or
fisubrl
xchg
test
xor
push
pushf
fs
aas
xchg
push
mov
int
cltd
pop
mov
ss
jb
roll
sbb
mov
pop
bound
popa
and
ljmp
mov
out
es
shll
cld
or
cmp
dec
lock
insb
xchg
xor
cmp
dec
mov
add
insb
or
adcb
adc
or
test
lahf
cld
scas
rcl
add
insb
shrb
lods
aaa
imul
lret
out
or
jno
cltd
jge
lods
push
int3
and
and
es
out
jne
xchg
or
add
stos
sti
imul
or
lahf
inc
dec
lret
in
jbe
fdivs
lret
addr16
push
adc
pop
pop
cmp
add
aaa
mov
test
xchg
insb
cwtl
cmp
or
adc
or
sub
out
push
mov
in
jnp
call
fists
cmp
decl
mov
int3
push
jecxz
adc
jle
jns
movsb
adc
pusha
lret
sub
push
jp
inc
mov
xchg
bound
test
lock
mov
pop
mov
dec
popf
in
imul
xchg
mov
outsl
ljmp
shll
push
call
mov
rorb
sub
mov
int
xlat
dec
add
adc
adc
cltd
jno
aas
in
das
test
in
and
out
push
test
aas
rorb
addb
or
cmp
test
adc
pop
insl
ficompl
or
lret
fists
ret
insb
xchg
ljmp
add
xchg
jmp
xchg
scas
out
lret
daa
dec
inc
rol
cld
inc
test
or
lcall
hlt
dec
pusha
mov
or
inc
sbb
adc
jb
lahf
xchg
or
or
adc
movsl
xchg
jo
shll
pop
and
mov
mov
mov
xchg
addr16
push
lcall
cli
popa
insl
addr16
inc
mov
mov
mov
minps
andb
sar
sbb
loopne
sarl
cmp
push
pop
dec
fmuls
pop
arpl
ljmp
mov
cli
push
sub
outsl
out
outsb
jnp
and
pusha
inc
jne
loope
shl
xor
mov
add
movsl
inc
std
push
jp
addb
mov
push
cmp
lret
and
jl
std
outsb
test
dec
iret
and
sub
adc
or
xchg
in
inc
mov
cmp
and
andb
xchg
push
xchg
adc
cltd
xchg
mov
cmovg
bound
pop
stc
std
jecxz
sub
jl
push
in
jne
cltd
xchg
testb
push
and
jb
jnp
daa
lret
cld
stc
mov
mov
test
or
cmp
movsb
mov
jns
rolb
int3
stc
jb
shrl
mov
mov
gs
loop
add
outsl
sbb
insb
test
mov
popa
pusha
stos
and
jo
mov
mov
clc
push
add
adc
xor
out
call
mov
aam
lock
arpl
in
sub
mov
pushf
push
add
lods
sub
jecxz
or
shrl
jmp
xorl
push
jl
lock
mov
mov
jle
xchg
rorl
fildll
fld
test
cmp
mov
xor
jg
cmpsl
sbb
movsb
leave
jg
pop
adc
jbe
dec
jg
stos
mov
xchg
into
sahf
lds
jecxz
ret
ficoml
sub
fstps
addb
cmpl
outsb
clc
ss
scas
test
pop
std
sbb
sub
popa
lods
sbb
jae
and
pop
lea
enter
es
cmpsb
jl
dec
or
mov
sub
sbb
out
std
cmpsl
mov
sbb
xchg
outsl
mov
fsubrs
in
jl
mov
adc
out
inc
ljmp
ds
sbb
sarl
mov
les
jmp
xchg
lret
xchg
sahf
push
lcall
out
lods
jmp
dec
dec
hlt
lods
adc
arpl
cmp
sub
dec
xor
pop
subb
out
aas
stc
push
xchg
out
xchg
pusha
sub
cmp
push
clc
bound
xorb
dec
ficoml
es
in
dec
cmp
adc
outsl
xchg
mov
loope
idiv
fisubl
mov
mov
xchg
inc
int
aas
sub
jb
adc
and
sub
dec
scas
add
mov
fstpl
cltd
pop
pop
lahf
repnz
sbb
lcall
lea
sub
and
adcb
sbb
xchg
push
sbb
outsb
lods
enter
lock
ffreep
mov
ds
fadd
mov
add
jns
shll
cmp
cwtl
xor
mov
push
pop
stc
rol
cmp
or
pop
daa
push
cmpl
push
or
nop
test
dec
jbe
lea
pop
push
xor
push
repnz
cmpsb
jl
cs
lret
aad
push
sub
outsb
div
into
push
int
fidivl
outsl
mov
stos
xchg
push
mov
push
lea
loope
sub
repnz
mov
push
insb
call
sub
or
lret
push
iret
pop
jmp
jb
push
test
outsb
jl
xor
sbb
addb
cmp
aam
cmp
cli
ret
pop
loope
lret
ds
popf
mov
in
cli
jge
stos
add
in
cmpsb
dec
lret
pop
lcall
adc
iret
mov
cmovle
mov
pop
inc
xor
cmp
lock
bound
add
outsl
pushf
push
movsb
in
pop
jno
aaa
mov
lods
rolb
mov
ja
inc
int3
mov
jno
enter
je
ljmp
ret
out
scas
mov
fst
arpl
xchg
aaa
push
test
adc
call
hlt
add
cmp
cmpsl
sub
push
lcall
stos
out
in
cmp
xor
add
cwtl
insl
std
int3
or
xlat
adc
mov
push
cmpsb
mov
push
jle
sub
stc
das
addr16
sub
fs
push
js
jnp
ret
mov
sbb
fs
dec
xor
xchg
repnz
mov
sti
lcall
pop
stos
fildl
inc
sbb
sahf
subb
repz
dec
inc
and
and
data16
orl
repz
add
test
and
mov
movsl
insb
xchg
iret
and
mov
or
mov
inc
cmpsl
cmp
ret
xchg
movhps
clc
mov
sbb
cli
lahf
jmp
popa
adc
fcos
mov
and
mov
add
test
add
sbb
jnp
mov
jns
outsl
mov
dec
mov
out
mov
mov
test
xchg
xchg
call
jo
clc
dec
mov
xor
clc
out
nop
jecxz
in
push
mov
xor
cltd
lret
mov
pop
inc
arpl
orl
insl
fnsave
nop
je
stc
inc
jg
enter
repz
mov
adc
arpl
repz
cmp
adc
loop
cs
push
jb
xchg
push
bound
xchg
and
aaa
int3
sub
test
into
shlb
leave
lea
push
int
jecxz
hlt
fldcw
int
push
push
dec
test
imul
dec
outsl
sbb
dec
sbb
int
mov
cmc
cmpsl
mov
mov
notl
lea
fidivrl
imul
bsf
inc
sbb
mov
outsb
stos
mov
dec
or
shll
int
sub
loopne
xchg
add
pop
std
inc
mov
jbe
xor
sti
mov
xchg
xor
push
out
std
fscale
scas
insl
mov
mov
mov
sbb
ds
adcl
aas
mov
jae
jecxz
mov
mov
push
push
cmpsw
mov
push
xchg
jecxz
sub
lcall
dec
mov
cmp
push
jg
mov
add
popf
popf
mov
mov
mov
dec
mov
push
gs
notl
jae
out
push
jbe
movsb
add
push
mov
int3
fstpt
lods
xchg
fdivrs
and
adc
pop
clc
ds
js
pusha
daa
std
pop
dec
fwait
or
or
or
leave
push
mov
out
rorb
rorb
mov
xchg
scas
push
mov
movsl
xchg
rcrb
pop
cmp
and
sbb
jne
lret
push
orl
dec
sbb
push
sbb
ss
pop
or
jnp
fimull
std
push
add
rclb
das
hlt
shrb
jae
xor
sub
shrb
adcl
or
or
popf
add
dec
enter
movsl
repz
adc
test
or
mov
sti
lds
xchg
out
and
in
les
and
std
daa
jmp
push
mov
mov
test
clc
push
rolb
xor
mov
mov
test
mov
add
test
push
jae
cmpsb
pop
les
jecxz
cmpsl
sbb
jnp
loope
lret
jge
rorl
scas
pop
jbe
mov
rcrl
jbe
jo
test
mov
jg
mull
insl
popa
testl
andl
test
lods
push
push
push
ja
adc
mov
andnps
roll
mov
in
cltd
sbb
je
and
adc
sarb
fiadds
pop
sahf
mov
add
test
pushf
sub
sub
ds
call
cmpsl
ds
loopne
out
push
jp
push
pop
pop
test
ret
inc
mov
rcl
inc
mov
mov
mov
sbb
fldenv
mov
cmp
imul
ret
inc
lock
lret
push
xchg
adc
gs
arpl
test
pop
stos
or
pop
iret
in
sbb
dec
jnp
sub
clc
jae
mul
hlt
jbe
fstpl
adc
ret
subb
push
add
stos
imul
xor
sti
jg
dec
dec
or
popf
push
loope
fiadds
lock
test
rcll
sub
enter
jle
xchg
and
outsb
push
cmpl
rorl
sbb
sbb
mov
iret
ss
stc
push
sbb
push
inc
cld
inc
ficoml
push
call
outsl
fdivrl
dec
into
fucomi
add
mov
mov
jne
andl
jo
lods
fs
pop
adc
ror
ret
inc
lods
adc
scas
pop
add
and
leave
or
fs
out
scas
repz
lret
ret
inc
cmp
insl
repz
push
outsl
hlt
and
dec
scas
sub
aad
loope
or
inc
ret
and
jno
sub
clc
sub
sbb
je
dec
cmp
xchg
mov
daa
jl
vmaxpd
xchg
mov
nop
es
fwait
push
or
rorb
fwait
push
fstp
pop
lcall
into
jno
jecxz
ret
hlt
adc
aam
or
insl
pushf
mov
jo
add
dec
das
pop
sahf
ljmp
sahf
scas
xchg
cmpsb
int3
xlat
int3
adc
sbb
loope
sub
test
jg
decb
and
lcall
inc
repz
and
sti
ret
fdiv
dec
jnp
cmpl
clc
decl
mov
and
dec
ret
xchg
int3
lods
jo
mov
add
ja
call
mov
mov
lea
fisubrs
data16
sub
xchg
dec
js
mov
dec
cmp
sbb
xlat
mov
xorb
das
cmp
nop
adc
daa
insb
call
xchg
pusha
dec
loope
xchg
insl
xor
shrb
dec
jecxz
dec
adc
imull
cld
loop
xchg
xor
jmp
xchg
shll
loope
shr
mul
adc
daa
test
data16
dec
push
and
jp
bound
and
sti
mov
je
gs
arpl
mov
inc
xlat
push
jecxz
test
aam
movsl
push
mov
and
stos
call
ja
aam
sub
pop
cltd
adc
mov
ret
jbe
jno
sbb
andb
xchg
sbb
push
test
cli
daa
nopl
rolb
ret
and
repnz
xor
pop
out
and
adc
xchg
inc
xor
push
xchg
xor
out
daa
test
fdivrs
and
and
out
and
inc
out
mov
stc
aam
push
movsl
popa
or
mov
popa
pop
and
xor
add
xor
jno
mov
fbld
ret
dec
xchg
push
fsubr
xor
aaa
add
out
out
mov
inc
fistl
add
pop
shlb
add
das
add
adc
jae
popf
out
clc
jg
jp
xor
addr16
dec
ljmp
jb
push
rcr
add
dec
fistpll
pop
clc
stc
in
sbb
mov
pushf
jge
mov
and
push
movsb
in
mov
shlb
sti
mov
pop
mov
sbb
shrl
pop
scas
adc
sub
loop
inc
out
out
mov
xchg
xor
dec
xor
push
jmp
aaa
mov
dec
bound
mov
mov
mov
shl
mov
lret
pop
jne
ss
dec
sbb
sub
sbb
fnstenv
clc
sub
aas
cld
jno
cli
mov
add
xor
test
push
jmp
subb
push
sbb
fldenv
add
adc
mov
lods
and
jecxz
sbb
xlat
imul
imul
into
dec
add
pop
loop
sbb
shll
adc
and
stc
mov
js
lods
scas
jl
cmpsl
inc
dec
mov
xchg
sbbb
rol
lahf
mov
push
outsb
push
xchg
mov
and
jg
rorb
add
repnz
shll
jnp
add
out
repnz
dec
adc
sub
pop
loopw
cmc
mov
aas
xchg
or
cli
xchg
pop
call
loopne
sahf
mov
pop
jae
pop
mov
loop
sar
iret
outsb
cmc
push
adc
insb
mov
pop
test
mov
mov
loopne
xor
nop
lcall
jne
dec
enter
in
xor
insl
ljmp
mov
inc
push
mov
jl
pop
mov
arpl
jle
mov
and
xchg
mov
lcall
scas
lock
aaa
stos
ds
data16
inc
ljmp
mov
push
int3
out
shrl
push
test
jle
dec
mov
jmp
sub
arpl
jmp
sbb
or
push
xor
je
jmp
push
add
dec
sti
into
mov
xor
dec
sub
call
mov
out
add
clc
arpl
jp
xor
sar
stos
movsl
je
lds
cmp
out
js
jmp
pop
and
push
mov
sbb
test
jl
imul
call
sub
mov
out
adc
test
jbe
jno
ljmp
add
movsl
add
scas
mov
loope
or
inc
test
push
pop
pop
inc
into
dec
cmpl
pop
adc
iret
cli
in
ja
les
add
xchg
in
cli
add
and
adc
mov
xchg
repz
jnp
xchg
pop
outsl
call
mov
mov
jae
mov
mov
out
out
inc
dec
imul
pop
insb
and
int
xchg
out
adc
outsl
dec
insl
mov
mov
sbb
dec
loope
shll
dec
scas
push
clc
pusha
dec
mov
stos
in
in
loope
repnz
cmp
sbb
aas
push
clc
or
mov
dec
lods
lcall
scas
mov
xchg
in
vmwrite
mov
test
mov
jnp
out
xlat
sti
xor
repnz
xor
fiadds
outsb
shl
dec
sbb
sbb
jbe
push
pop
loope
lret
add
leave
jbe
bound
and
mov
aam
cltd
sub
xchg
iret
inc
pushf
gs
ficompl
xor
jp
loop
xchg
int
inc
xchg
jne
cltd
sub
outsb
fcompl
xchg
cmp
adc
xchg
int
scas
pop
push
cmp
orl
dec
or
dec
arpl
iret
nop
mov
and
out
jp
fdecstp
dec
mov
mov
dec
cld
mulb
pop
mov
enter
repnz
adc
sbb
lahf
pop
dec
inc
ficomps
xchg
cltd
imul
addb
mov
das
and
and
cltd
mov
jmp
movsl
jmp
inc
jns
lahf
je
test
inc
xchg
inc
mov
push
mov
cmp
pop
inc
ljmp
xchg
bound
out
jne
inc
loopne
cs
fdivl
mov
inc
cmp
sbb
rcrb
outsl
mov
xchg
cmp
gs
dec
cmp
testb
mov
mov
ret
out
and
lods
scas
movsl
xor
ja
add
mov
cmp
sbb
movsb
pop
inc
adc
inc
pop
inc
cmp
popf
pusha
xlat
lods
cmpsl
pushf
rol
sti
pop
push
mov
dec
ret
xor
jnp
bound
jns
sahf
aam
mov
add
popa
push
data16
adc
or
loope
out
push
lret
jb
cli
sbb
mov
xor
cmpsl
mov
lea
fiadds
xor
aas
mov
mov
push
sti
inc
pop
sub
and
shrl
inc
loope
ja
cmp
sub
push
cmpsb
loop
sahf
pop
and
xchg
xchg
xchg
stc
bound
dec
mov
push
cmp
cwtl
mov
jns
adc
mov
or
mov
pop
cmc
scas
xchg
cmp
xchg
jne
pop
fwait
cs
scas
cvttps2pi
dec
in
xchg
mov
pop
adc
cmp
test
jecxz
shrb
lods
xor
add
sahf
aad
stos
sbb
mov
lds
lea
imul
xor
shrl
cmpsl
push
mov
outsb
push
xor
mov
mov
or
mov
inc
add
gs
or
and
add
xor
mov
inc
repz
adc
dec
xchg
jge
and
scas
rorl
mov
and
cmp
cmp
sbb
loope
jo
xor
sarb
negl
mov
xchg
jge
imul
mov
lcall
jne
test
dec
mov
dec
lcall
outsb
adc
push
stos
sbb
cmc
sub
push
in
xchg
jl
repz
push
pop
push
mov
or
jb
test
mov
add
test
mov
jmp
sbb
push
jb
sbb
or
push
pop
insb
mov
or
cmc
xchg
add
stc
pusha
rcl
jl
loop
lock
xchg
mov
aas
jge
lods
test
pop
xchg
out
lret
and
xor
ret
mov
add
fstps
outsl
cmpsl
adc
fsubs
xor
xchg
sub
subb
xchg
cmp
xchg
and
jae
scas
jnp
cmp
xchg
or
lods
jo
jne
loopne
xor
jg
fld
imul
xchg
cli
mov
mov
sbb
xor
jbe
add
loopne
sbb
int
fbstp
ficomps
clc
mov
fisubs
es
dec
aad
lahf
sub
out
and
jmp
dec
dec
in
cld
pop
push
and
cmp
int3
or
inc
std
pop
and
hlt
leave
stc
pop
adc
rcrb
pop
mov
cmc
inc
mov
jnp
lods
xchg
arpl
xor
add
aad
sbb
notb
xor
clc
jno
mov
sbb
adc
xor
inc
enter
lret
or
jmp
scas
push
bound
pop
add
xlat
inc
xchg
and
lea
cwtl
jmp
or
loop
daa
push
clc
out
fbstp
add
xchg
push
shlb
cmp
jns
sbb
xchg
dec
push
adc
shrl
sub
scas
dec
add
cwtl
push
mov
outsl
inc
xchg
jnp
aas
add
hlt
jge
nop
orb
mov
xchg
in
orb
sub
lods
movsl
pop
aaa
jnp
ljmp
fnstenv
sub
loop
stc
clc
out
adc
mov
xchg
leave
mov
lcall
mov
add
adc
gs
dec
xlat
aam
loop
cmpsl
enter
stos
dec
mov
ret
and
add
les
push
cli
xor
sbb
mov
dec
push
ss
fidivs
xchg
mov
cmp
jb
test
lret
push
cmp
shrl
arpl
sub
sub
mov
call
or
clc
xlat
add
roll
mov
in
add
adc
inc
and
loop
mov
mov
cmp
dec
xchg
pop
jae
in
cmp
xchg
and
loop
mov
mov
dec
dec
out
iret
fildl
mov
mov
lods
push
jge
lock
sbb
ret
hlt
scas
push
jae
jne
test
rcrl
adc
push
push
outsl
in
push
cld
jns
into
xor
scas
xlat
je
adc
and
sbb
sub
test
dec
call
mov
roll
push
add
ret
sbb
inc
js
push
ja
pop
dec
jmp
popl
lcall
in
and
cmc
hlt
dec
pop
xor
push
inc
lret
insb
loopne
outsl
test
push
addr16
imul
adc
mov
movsl
imul
les
add
or
mov
xchg
push
or
xchg
sbb
xor
imul
stc
and
jb
addr16
mov
mov
pop
pushf
fidivs
or
dec
mov
dec
and
fisubl
loope
rcll
in
cmc
rcll
fcoml
hlt
inc
dec
push
push
int
xchg
sub
jl
fwait
outsl
push
cmpsb
sbb
into
xchg
mov
lcall
out
rol
inc
pusha
addr16
and
pusha
jg
fcomps
jo
dec
fistpll
hlt
lods
js
pop
xlat
inc
shl
test
sbb
pop
pop
pop
bound
filds
mov
add
out
in
mull
sub
mov
movsb
gs
pop
add
lcall
iret
shrb
lahf
add
push
push
inc
pop
lea
test
mov
mov
xchg
pop
xlat
das
xchg
ja
mov
stos
add
scas
ss
sbb
xchg
addsubpd
imul
cwtl
push
xchg
mov
ljmp
cmc
fisubrl
xchg
and
and
cmp
out
mov
inc
int3
fwait
in
ljmp
dec
lret
push
jl
imul
xchg
pop
test
xor
test
adc
int
push
push
fldcw
jbe
or
in
dec
lods
pop
pop
adc
cmpsb
jmp
add
lods
xchg
js
jmp
inc
test
std
sbb
fidivrs
test
std
push
mov
mov
xor
sub
inc
les
pushf
les
stc
pop
cltd
ja
pop
movsl
mov
ljmp
mov
insb
dec
jo
cmp
push
pop
rcll
in
push
push
rcrl
inc
xor
cmpsl
and
pop
fs
adc
xor
add
or
in
movsb
push
inc
pop
jae
add
push
outsl
push
js
lea
mulb
jecxz
push
mov
fists
rcrl
aad
ret
or
xchg
mov
push
sub
idivb
shrl
sub
orb
lahf
sbb
dec
mov
in
dec
repnz
sub
or
sub
fistl
in
scas
cld
mov
or
ret
mov
addr16
loope
popa
cmp
js
gs
test
add
jo
xchg
scas
sbb
jmp
jge
test
js
lahf
das
or
adc
sub
insb
push
push
fidivrs
aam
arpl
sub
jns
or
or
push
adc
mov
or
inc
repz
rcll
dec
sub
rclb
xor
hlt
pop
inc
test
mov
cmp
in
outsl
or
outsl
mov
jo
out
sbb
mov
iret
cld
jb
outsl
and
push
pop
add
pop
push
in
ja
add
pop
xchg
aas
xchg
add
add
sub
adc
das
mov
xor
pushf
cmp
out
clc
inc
aad
out
xchg
sbb
jns
insb
in
cmp
adc
movsl
jne
and
popf
add
jmp
mov
out
sub
add
shl
pop
sahf
pop
inc
stos
xchg
dec
sahf
push
cmp
out
inc
int3
jecxz
test
dec
mov
aad
or
mov
addr16
aad
fistps
dec
mov
mov
fmuls
jns
jns
push
fs
pop
test
aad
pop
mov
or
xor
inc
cwtl
call
test
lods
sbb
xchg
out
jnp
in
enter
xchg
mov
test
xor
push
inc
mov
or
adc
sub
shrl
xchg
call
mov
ret
pop
mov
arpl
mov
mov
adc
shlb
sub
push
sti
push
in
repz
or
add
push
pop
or
jne
inc
lret
cmpsl
xorb
cltd
ljmp
outsb
scas
mov
mov
xor
cltd
je
cmp
dec
mov
jecxz
in
sub
outsb
push
lods
scas
push
mov
dec
aas
pop
loopne
call
lret
mov
dec
imul
xlat
mov
lret
mov
idivb
addl
push
ds
movsb
insl
sti
into
aas
inc
sbb
mov
cld
fucomp
push
data16
mov
aas
roll
int
gs
dec
jne
add
gs
fs
pop
inc
lcall
fcomp
mov
pop
and
into
pop
fs
or
cmp
pusha
lds
push
mov
sbb
add
adc
loop
idivb
xlat
icebp
leave
mov
lock
fwait
out
sbb
jle
sbbl
lods
fstps
test
out
cwtl
out
hlt
sbb
sbb
insb
push
sub
xchg
sub
cmc
movsl
fucomip
push
ja
push
push
pop
xor
fs
xchg
mov
fsubrl
adc
sbb
roll
loopne
lahf
xlat
in
lea
xchg
sub
push
leave
push
push
lods
and
out
sbb
inc
rolb
test
and
test
imul
aas
lods
inc
movsl
mov
adc
xor
repnz
ret
test
dec
mov
call
or
lds
aam
addr16
fstpt
or
jg
xchg
into
sub
and
cmp
xchg
pop
lods
dec
adc
subl
xor
sti
cmpsl
test
adc
xchg
shr
or
mov
mov
in
dec
out
cmc
cltd
cmp
mov
fsts
mov
inc
cmc
das
push
push
fdivrl
int3
dec
jo
ret
mov
shlb
lods
mov
xchg
sbb
icebp
mov
fsubrp
fistpl
mov
push
dec
sbb
push
lds
das
adc
jne
fs
jbe
mov
iret
in
mov
mov
adc
inc
mov
dec
sub
decb
imul
adc
ljmp
and
sub
mov
inc
push
pop
lret
es
movsb
sub
adcl
in
iret
les
enter
mov
mov
insb
je
jge
bound
clc
and
cmpsb
xchg
mov
mov
and
lahf
xchg
test
mov
lods
pop
pop
daa
lcall
push
or
mov
mov
shl
stos
xchg
repnz
sbb
cwtl
cmp
add
and
xor
mov
aam
cld
mov
pop
add
jge
sbb
fisttpl
hlt
stos
fsubrp
and
xchg
lahf
fsubs
movsb
xchg
push
mov
movsb
mov
sti
or
jb
decb
add
xchg
pslld
adc
rcl
xchg
mov
daa
sahf
mov
xchg
lea
pop
mov
mov
fisubrl
cmc
cld
subb
rolb
int
push
xor
mov
push
cmpsb
dec
dec
in
je
test
jg
or
shlb
mov
lcall
lcall
icebp
out
loopne
push
test
lock
outsb
ja
arpl
les
mov
dec
mov
loopne
mov
hlt
out
or
mov
inc
iret
mov
mov
jmp
sub
jge
and
pop
sub
pop
ja
mov
xor
popf
jmp
lret
jmp
sub
hlt
aas
pushf
lds
ja
or
mov
aam
arpl
sub
mov
mov
in
lahf
inc
ljmp
cmp
fcomip
ljmp
call
xor
cli
fildll
into
sbb
in
in
popl
xor
fwait
sub
addr16
bound
shr
or
xchg
movsb
jmp
aas
push
adc
daa
xchg
lret
sub
fisubs
lods
cs
sbb
ret
dec
pop
sbb
hlt
out
test
mov
sub
pop
mov
jg
or
inc
outsl
and
pop
inc
sub
aam
jb
mov
adc
xchg
int3
adc
dec
imul
cltd
decl
daa
mov
push
outsl
test
sub
xorb
adc
pop
movsl
lret
mov
out
insl
lret
insl
outsb
xor
or
fcoml
dec
jge
ffree
es
jae
pushf
sub
jb
xor
pusha
fistps
mov
lahf
notb
lcall
lds
test
leave
sub
mov
dec
dec
and
adcl
inc
imul
pop
xchg
sub
in
es
test
dec
sub
inc
js
xor
out
lea
sahf
sub
inc
popa
inc
xor
fsubrl
or
addr16
mov
clc
mov
into
sbb
test
imul
xchg
in
pop
popf
xor
and
and
xor
xchg
loopne
jmp
xchg
adc
dec
mov
dec
and
jecxz
xor
pop
mov
ja
push
mov
dec
xorb
in
stc
adc
cmp
pop
sar
inc
fildll
dec
repnz
mov
in
fidivl
stos
faddl
cmc
push
mov
dec
cmp
jo
hlt
jp
xchg
pop
jp
data16
sub
pop
sub
pop
and
xor
ja
ror
enter
jbe
insl
sbb
bound
jae
dec
scas
add
push
test
sbb
loop
mov
push
aam
xchg
xchg
outsl
cmp
and
mov
decl
add
cld
loop
pop
popf
xchg
sub
in
and
test
dec
cmp
cld
sub
out
outsl
push
and
inc
outsl
addr16
mov
faddl
push
stc
outsb
mov
ret
ss
jge
or
cmp
std
push
or
enter
cmp
jnp
out
rol
pusha
pop
andl
mov
add
and
ljmp
stc
adc
daa
and
addps
into
or
loope
or
mov
bound
push
lahf
adcl
xchg
xor
shrl
loopne
xor
int
leave
icebp
shlb
xchg
pop
addr16
popf
lock
fnstenv
cmpsl
fs
xor
js
lret
jecxz
jle
fdivl
push
adc
mov
in
stc
lds
leave
cld
pop
adc
xchg
xor
cmpsb
sti
mov
jmp
hlt
pop
mov
aad
and
divl
add
push
jns
test
daa
icebp
in
and
sbb
xlat
sbb
jp
rorb
adc
and
mov
cwtl
lret
jns
dec
inc
mov
ss
daa
lret
xchg
mov
mov
lret
jg
dec
xchg
mov
frstor
pop
jmp
sbb
dec
add
push
repnz
out
adc
mov
popa
xlat
jle
pop
pop
loope
movsl
push
mov
xor
push
stos
pop
or
out
mov
scas
jge
nop
loop
xchg
cli
mov
adc
shrl
stos
fistl
dec
inc
cli
scas
xchg
dec
adc
je
or
or
cwtl
outsl
cli
fisubl
ljmp
mov
ja
gs
fisttpll
cmc
les
in
add
cmp
ljmp
in
cmc
push
daa
rol
repnz
add
mov
imul
lcall
lds
das
gs
test
gs
add
fnstenv
inc
js
ret
xor
push
sub
ljmp
cld
popf
mov
push
movsl
mov
ja
xchg
mul
inc
mov
push
mov
add
jbe
icebp
cmp
dec
aam
dec
ss
pop
test
mov
push
cwtl
cmpsb
lods
pop
add
cmpsl
stos
aas
sbb
add
addr16
and
pop
sub
test
sahf
fcoms
dec
dec
sbb
or
push
cmpsl
cmp
hlt
inc
jecxz
repnz
mov
pop
pop
jg
push
nop
push
adc
adc
and
into
lock
sub
cmp
outsb
jecxz
or
leave
lds
cltd
repz
mov
push
adc
cmp
lret
adc
or
jmp
rcll
push
mov
mov
sar
cmp
jne
fs
bound
push
clc
iret
orb
pop
popa
mov
enter
popf
jmp
fisubrs
jge
sub
mov
mov
stos
sub
loop
inc
and
cmp
je
flds
insb
aas
outsb
lret
imul
mov
int3
cli
xor
andb
daa
les
push
sbb
jle
std
fcoms
sbb
lea
arpl
into
push
fnstsw
xor
xchg
sbb
sub
cwtl
xchg
subl
jp
inc
jecxz
rorl
aad
stos
jmp
xchg
cwtl
mov
sti
cmp
mov
jmp
out
xorb
out
js,pt
mov
frstor
jl
enter
ret
dec
ror
jmp
push
mov
iret
and
dec
std
mov
xor
mov
cltd
out
in
and
pop
adc
mov
into
mov
xchg
nop
jmp
pop
cmc
mov
push
orb
into
dec
push
in
mov
and
outsl
dec
negl
out
and
loopne
fsubr
mov
jns
out
lret
fcomi
iret
aaa
jae
dec
sti
mov
test
jmp
int
sub
adc
push
mov
ret
icebp
out
add
jmp
scas
and
test
pop
popf
imul
cmpsl
and
int
push
mov
lret
lret
nop
in
nop
cmpsb
cmp
test
rorb
sub
lahf
lock
push
lea
push
in
andl
or
or
jp
aam
test
sbb
clc
mov
mov
pop
pushf
mov
pop
mov
cld
and
test
inc
jns
fidivrs
mov
mov
popl
mov
sahf
int
bound
insb
sub
imul
scas
mov
push
pop
test
jns
sbb
xchg
sub
es
jo
data16
adc
fimull
ss
sahf
mov
je
jmp
cmp
mov
out
cmp
faddl
je
xchg
xchg
sbb
pop
lret
repz
mov
test
dec
call
cld
push
fld
xchg
int3
inc
neg
and
and
add
mov
insl
fisubrs
test
pop
stos
pushf
sub
inc
mov
ja
cmc
stc
stc
repz
stos
xor
lret
outsl
cwtl
sub
add
xchg
jg
cmp
xor
subb
out
mov
push
pop
mov
add
dec
inc
sub
or
inc
xchg
sub
pusha
and
or
xchg
inc
adc
pop
sbb
cwtl
jg
sub
mov
shr
iret
insb
xchg
push
push
mov
inc
pusha
jg
andb
mov
fldl
lcall
sbb
sub
jno
shl
pop
mov
testl
sahf
cld
cmpsl
cmp
shlb
lret
xor
jp
filds
xchg
jns
jmp
mov
int3
test
dec
pop
jns
mov
loop
fcomp
or
xor
in
call
rcr
dec
leave
and
mov
xor
mov
push
movsl
add
mov
sbb
call
sbb
jbe
adc
sahf
add
adc
or
pop
ja
adc
or
lcall
inc
int
pop
shlb
scas
fisubrs
sub
lods
mov
mov
js
sbb
inc
jmp
cmpb
leave
lods
jb
aad
mov
scas
movsb
fdivs
sub
pop
in
mov
sbb
flds
movsl
fmul
sbbl
sahf
dec
ret
int3
push
inc
xchg
je
mov
ret
setne
js
mov
loopne
mov
lcall
pop
push
cli
fstpt
int
lods
mov
pusha
les
mov
icebp
and
xchg
xchg
pop
in
std
ljmp
cli
gs
test
sub
adc
fiadds
out
adc
ds
andl
stos
das
imul
add
mov
test
pushl
gs
lcall
mov
or
vcvtpd2dqy
xchg
mov
test
adc
dec
gs
inc
lods
sbb
mov
ss
adc
mov
and
jmp
mov
mov
jl
jne
aad
and
or
test
out
inc
xlat
add
ret
xchg
jl
test
popf
loop
dec
imul
ja
xor
icebp
test
shll
mov
subb
pop
sti
out
rcll
dec
xor
and
xchg
nop
adc
inc
in
pop
push
outsl
inc
out
hlt
je
push
sub
das
lret
mov
xchg
movsb
dec
push
popa
bound
jmp
jmp
mov
xor
repz
fdivr
jp
pop
add
flds
sub
sub
inc
pop
xchg
inc
gs
adc
bnd
inc
das
lea
sbb
enter
or
jp
into
ja
xlat
ljmp
nop
adc
pop
xor
mov
or
div
inc
and
negl
jae
notb
pusha
fs
insl
push
cwtl
mov
adc
ret
pop
sub
jl
sub
fwait
aam
cltd
outsb
insb
add
cwtl
divl
repnz
jp
pop
mov
add
cmp
adcl
lods
add
sarb
sbb
jmp
mov
rorl
fimull
lods
pushf
fs
popf
xchg
ljmp
jbe
movsl
jecxz
fnstenv
stc
add
jge
add
add
jge
idivb
nop
mov
xchg
ret
and
mov
inc
push
add
push
lock
jp
or
repnz
stos
rcl
adc
cmp
xor
cmpsl
mov
and
mov
pop
jmp
loope
sub
incl
and
dec
jo
cltd
icebp
sti
fucomp
into
cmp
and
jp
lea
add
addr16
imul
push
jnp
loopne
mov
pop
adc
cmp
js
arpl
sbb
and
adcl
pop
data16
adc
and
jge
ljmp
pusha
adc
push
mov
mov
in
outsl
in
add
inc
and
scas
add
mov
sti
loope
xchg
fcomps
sbbb
push
nop
dec
movsl
inc
xor
inc
adcb
aad
iret
mov
adc
mov
sbb
stos
and
test
adc
aad
lea
dec
sub
ret
xor
cwtd
dec
sahf
jecxz
leave
sahf
bound
or
add
movsl
loope
ja
dec
ror
cmp
sub
mov
shrb
das
inc
cmp
insl
call
mov
call
icebp
or
adc
dec
add
dec
daa
add
cld
adc
jnp
push
or
xor
mov
data16
sbb
mov
sbb
fnsave
out
mov
add
shl
inc
mov
cmp
xlat
repnz
or
dec
xchg
adcl
inc
aad
dec
push
inc
xor
sub
pop
inc
add
mov
ret
ret
test
imul
mov
fiadds
lds
xor
test
push
pop
dec
push
sahf
mov
sub
jl
adc
push
outsl
dec
insb
in
ret
mov
cltd
jle
fstps
add
hlt
scas
out
fidivl
pop
std
fcmovnb
test
scas
rcll
addr16
cs
push
push
lcall
scas
dec
iret
jp
push
scas
pusha
call
pop
xchg
and
loopne
xchg
sub
std
ficompl
jns
sub
adc
es
xchg
pusha
hlt
lods
sbb
xchg
scas
mov
mov
jne
aaa
orb
push
jp
js
sub
int3
call
dec
adc
movsb
lods
ret
push
repz
imul
pop
out
fwait
mov
xor
or
dec
lcall
popa
jl
pushf
mov
push
sub
dec
fistpl
xchg
dec
mov
push
out
dec
je
xchg
pop
xor
movsl
popa
in
xor
pushf
sub
leave
out
xor
lahf
push
push
ss
pop
sub
orl
sbb
fcomip
lods
testl
fldcw
push
pushf
enter
imul
addr16
test
sbb
popa
dec
mov
outsl
fs
sub
cmpsl
adc
add
adc
jl
sub
inc
sbb
loop
repz
test
lret
and
roll
push
add
mov
inc
jnp
xor
lea
fmuls
movsb
mov
sbb
xchg
sarl
xor
cmc
ja
mov
mov
adc
inc
inc
ds
les
jns
xchg
jne
cmp
xor
enter
pushf
push
mov
imul
or
mov
mov
lcall
lahf
rcrl
mov
iret
or
push
lea
cmp
testb
xlat
int3
or
inc
jnp
and
or
push
repz
mov
daa
iret
sbb
mov
or
in
pop
sbb
adc
dec
sub
mov
sbb
outsl
and
xchg
or
enter
pusha
sahf
sub
mov
jp
out
add
cmpsl
repnz
stc
push
ja
jecxz
daa
aad
mov
imul
out
dec
int
adc
mov
repz
in
pop
fadd
and
mov
popl
lds
cli
push
adc
cmpsb
pop
movsl
and
or
push
cmp
lret
pop
call
rcll
in
dec
push
movsl
lods
push
adc
push
lock
lret
sarb
xchg
cmp
jno
aam
in
shrb
mov
xchg
icebp
xor
jl
repnz
cmp
sarb
push
or
push
mov
sbb
jbe
inc
mov
xor
mov
inc
pop
sbb
and
mov
xchg
push
inc
cwtl
jg
mov
test
fneni(8087
xlat
repz
pop
pop
push
adc
pop
bound
push
clc
bound
and
aaa
jl
and
jns
test
aas
rcrb
sub
jmp
ja
pop
and
aam
push
push
leave
push
in
lret
inc
push
cltd
das
clc
cmp
and
mov
inc
paddq
dec
sbb
outsb
popf
adc
push
or
into
xchg
fwait
sub
faddl
scas
fs
mov
fistps
in
mov
dec
mov
loopne
mov
cmpsl
movsb
jge
das
push
dec
shll
test
lods
fs
mov
jb
test
sub
push
aas
add
pushl
imul
add
mov
inc
movsl
jne
mov
mov
les
inc
xchg
ret
in
fwait
arpl
sub
push
aaa
mov
push
ja
add
pop
dec
xchg
cltd
push
movsl
xor
sbb
adc
xor
test
cmpsl
dec
mov
jno
loope
cmp
test
fst
inc
loope
addb
cld
add
stos
shl
cld
hlt
loop
mov
push
fwait
mov
in
xchg
push
sub
int
push
sub
std
mov
loope
lods
mov
in
pop
or
add
test
xchg
in
dec
data16
add
arpl
jp
jno
mov
inc
add
mov
addr16
adc
outsb
xchg
inc
pop
lret
test
subb
test
xor
shlb
jge
or
stos
mov
into
stos
push
sub
xchg
adc
clc
call
fdivrl
fdivr
sub
imul
cwtd
sub
test
insw
dec
in
aad
lcall
mov
push
xor
outsl
lea
rorb
std
mov
add
push
push
mov
jp
cmp
rorl
enter
xchg
mov
xor
push
icebp
or
clc
xorl
xor
mov
dec
and
jo
ljmp
add
xchg
adc
and
mov
pop
enter
cmp
adc
mov
scas
enter
sub
bound
in
in
fidivrl
movsl
loop
cmp
mov
leave
push
jle
mov
add
loope
rorl
outsb
ljmp
lods
pusha
lds
outsb
lcall
add
add
sub
pop
aas
test
dec
das
push
dec
cli
sbb
pop
ret
sbb
fdivrl
lods
inc
sahf
and
pusha
leave
and
mov
fiadds
pop
je
jp,pn
stc
adc
mov
inc
cmp
lock
popf
addb
dec
aaa
dec
fmul
mov
in
xor
daa
cmc
jns
cmc
mov
mov
or
jb
in
cmp
in
loope
or
insb
loope
xchg
inc
lods
mov
shlb
xchg
ret
psllw
inc
testl
push
push
lcall
adc
jmp
stc
jp
push
out
div
push
and
addr16
and
push
and
pop
clc
mov
cmpsl
add
lret
xlat
dec
scas
and
jp
mov
out
subb
je
iret
ds
icebp
scas
out
sti
scas
ja
repnz
aaa
fs
cmp
jecxz
pop
dec
push
imulb
and
out
out
loopne
in
pop
push
xchg
jne
push
add
int3
pushf
sub
or
and
add
sbb
out
mov
int3
test
sub
lcall
addr16
shrb
out
aas
test
aas
scas
out
in
and
inc
lods
bound
push
dec
dec
in
push
mov
shll
cli
dec
inc
fdivs
xor
mov
fs
adc
test
cmp
icebp
leave
iret
test
mov
nop
in
leave
cmp
jo
bound
jns
fdecstp
push
ret
mov
stos
pop
cmp
or
sahf
jne
ds
pushf
insb
iret
loop
or
das
pusha
fwait
pop
mov
adc
jge
fs
pop
in
lock
cs
call
or
jae
sub
sub
les
inc
rcpps
jns,pn
and
xor
test
push
jnp
xchg
push
push
mov
push
leave
insb
lods
mov
mov
jl
push
dec
outsb
jmp
pop
loop
push
mov
test
movsl
jg
inc
mov
add
nop
or
dec
test
pop
mov
jo
addr16
sbb
in
xor
fcos
ret
jne
fildll
lock
mov
and
or
dec
in
mov
pop
rcll
sub
sti
inc
repz
pop
sbb
mov
movsl
in
int3
cltd
arpl
xchg
rcrb
jge
jns
mov
pop
roll
and
xlat
xchg
sar
in
stc
outsb
jae
stos
mov
mov
popf
pop
sub
daa
inc
mov
mov
decl
cmpb
lds
aaa
sbb
or
push
mov
cli
in
aaa
dec
adc
cmp
adc
pushl
int
mov
push
ljmp
stos
sub
loopne
scas
loope
dec
or
nop
rcrb
or
xchg
and
iret
clc
add
popa
popf
orb
fstl
jmp
js
movsl
jl
dec
js
sbb
mov
jmp
stc
pop
sub
inc
jne
fisubl
dec
sub
hlt
icebp
scas
cmpsb
add
xor
xchg
xchg
test
inc
mov
inc
js
lahf
mov
ja
dec
push
lea
jl
mov
cmc
dec
sahf
or
push
sbb
aam
jbe
push
push
add
sub
xchg
ret
test
roll
sti
mov
pop
xchg
jb
je
jp
iret
incl
in
xor
jge
insl
loop
loopne
jp
push
fildll
addl
sahf
jne
and
inc
or
fs
xchg
xchg
leave
das
testl
stc
pop
jbe
fdivs
bound
stc
mov
movsl
mov
mov
scas
pop
setbe
sti
lcall
popa
mov
or
in
adc
or
mov
push
jmp
lods
cmpsl
das
mov
lcall
gs
inc
pop
mov
mov
dec
in
out
or
jnp
sub
int
insb
or
adc
or
sub
mov
shlb
sbb
mov
cmpsb
movsl
repnz
loop
pop
mov
fadd
xor
dec
jmp
inc
lods
add
sbb
xchg
inc
call
sbb
push
or
or
js
rorb
icebp
popf
mov
ret
add
sub
test
scas
in
inc
insb
loope
aad
sub
add
xor
push
cld
loope
sti
pop
push
shrl
jno
sub
mov
outsb
cmpsb
mov
in
adc
aam
sbb
xor
or
pop
jecxz
rorb
lret
sub
lcall
pop
popf
cmp
call
mov
mov
scas
dec
fstpt
jnp
dec
ret
cmpsb
or
mov
fidivrl
test
add
sub
push
stos
rcll
addr16
push
xchg
jmp
mov
inc
ds
ret
and
adc
mov
cmp
shll
or
pop
jecxz
dec
stc
sub
popa
inc
push
jg
idivl
mov
sbb
rol
test
cmc
popf
pop
nop
push
dec
sbb
fists
and
cmpl
incb
ljmp
cmp
inc
sbb
or
jge
repnz
sbb
lods
cmp
or
insl
push
cmp
push
mov
dec
imul
sbb
xchg
loop
adc
inc
push
out
ljmp
pop
icebp
inc
fbld
and
jae
jge,pt
inc
sbb
ret
jp
sbb
mov
push
sbb
cmp
push
test
andb
cli
aaa
cmp
addr16
ret
push
mov
mov
push
pop
cltd
ret
pop
ret
ss
enter
bound
dec
mov
sbbb
mov
xor
sub
pop
cld
loopne
cld
hlt
and
clc
mov
fucomp
ret
cli
mov
xchg
subl
roll
cmp
cmp
lcall
dec
xchg
inc
out
iret
rol
test
cld
add
fstpl
or
or
inc
dec
dec
je
adc
fs
sub
xor
and
jecxz
push
js
mov
xor
rorb
jle
xchg
sbb
cli
mov
or
xor
es
sub
mov
sub
lea
push
jl
aaa
mov
in
xchg
or
iret
dec
rdpmc
int3
lea
pushf
add
fsubrl
orb
xchg
stc
arpl
cmp
adc
or
mov
mov
insb
sub
leave
add
lds
push
mov
subl
ljmp
aam
hlt
jl
nop
je
addb
push
mov
movsb
and
or
inc
lcall
jbe
inc
sti
sbb
sub
sub
aas
mul
or
testl
mov
cwtl
stc
or
mov
or
rcl
int
inc
mov
aam
inc
inc
pop
test
mov
dec
add
cwtl
mov
iret
inc
xor
bound
cmp
cmp
call
xchg
pop
xchg
pop
sbb
push
pop
fnstenv
jecxz
je
push
pop
repz
inc
lds
cmc
outsl
pushf
bound
push
inc
pop
cli
mov
cmpsb
mov
adc
mov
mov
roll
mov
mov
inc
adcb
pop
popa
sahf
xchg
add
xlat
je
cmpsl
lods
call
lds
into
pop
add
les
js
mov
push
and
aad
xchg
hlt
pop
push
fs
xor
insl
rcll
aaa
sarl
mov
insl
cmpb
out
pusha
pop
push
adc
insl
stos
push
ret
lock
push
dec
sbb
bound
xor
loop
adc
mov
and
fs
push
cwtl
add
inc
xor
xlat
xorb
xchg
insb
or
hlt
imul
leave
in
sub
insb
lahf
adc
int
cmpl
daa
mov
and
out
jmp
imul
shrb
imul
insl
dec
bound
xlat
enter
data16
pop
sbb
dec
jnp
mov
add
lret
mov
pop
jmp
hlt
dec
dec
cmp
int3
lcall
xchg
cltd
adc
movsb
mov
fs
mov
pop
lret
clc
push
enter
lahf
dec
lods
mov
sbb
adc
shl
dec
out
push
or
adc
cmp
movsl
sub
mov
dec
out
adc
mov
out
jecxz
dec
jmp
adc
and
push
pop
cmp
clc
orb
push
and
jg
mov
mov
repnz
test
push
icebp
fs
jbe
aaa
mov
inc
dec
fldcw
mov
or
sub
pop
cs
nop
dec
mov
scas
call
insl
sbb
mov
outsl
xchg
mov
xchg
arpl
jecxz
jae
cmpsl
fs
rolb
or
lods
icebp
pop
shlb
jecxz
ja
mov
das
rcrl
mov
dec
imul
test
loopne
ds
ret
push
scas
xchg
sub
jns
or
xorb
pop
and
adc
adc
stc
or
shl
jns
sub
inc
stos
sub
cmp
cmp
scas
aas
mov
push
mov
test
jae
sahf
or
push
addr16
scas
cli
xor
into
leave
push
cmp
dec
lret
push
xchg
xor
jmp
lahf
insb
int
js
mov
jb
adc
aaa
or
repnz
sub
add
cmp
adc
shrl
cltd
cmp
into
mov
stos
xchg
divb
ljmp
jecxz
pop
int
push
out
cmpsb
andb
mov
jle
mov
hlt
cltd
xor
dec
js
shl
cmp
out
xor
sbb
mov
dec
mov
je
adc
frstor
sbb
or
sub
mov
outsl
cmp
adc
add
out
xchg
xchg
adc
mov
mov
mov
mov
lret
cwtl
ljmp
push
xchg
test
cmp
arpl
pop
cmp
jecxz
add
daa
repz
cwtl
test
add
or
xor
enter
aam
addr16
sbb
add
idivl
les
inc
push
ds
leave
dec
mov
int
lock
clc
jbe
int3
push
inc
pop
aaa
adc
popf
loope
add
lret
inc
negl
xor
lock
arpl
es
test
repnz
add
mov
push
push
push
int3
fmull
jl
negl
cwtl
imul
dec
mov
mov
adc
pusha
dec
pop
xor
insb
pop
push
clc
out
arpl
add
mov
test
in
cld
ficoms
cmp
in
out
stc
rcll
pop
mov
jnp
outsb
cmp
inc
popa
xchg
cmp
mov
push
inc
xchg
pop
inc
and
add
dec
push
out
test
fidivrl
js
add
cs
jge
test
pushf
xchg
push
gs
pop
psubb
out
pop
loope
cli
das
lcall
les
mov
pop
aam
cmp
push
test
aas
jmp
and
aam
gs
and
pop
mov
pop
sbbl
and
mov
outsl
push
ss
jge
lahf
pop
push
or
rcrl
orb
ret
mov
jbe
loope
and
dec
pop
mov
dec
mov
arpl
cmp
jne
scas
jns
xor
in
fwait
xor
push
xchg
pushf
add
hlt
sbb
mov
enter
je
scas
xchg
push
cmp
jp
pop
cltd
fninit
sub
dec
enter
mov
fdivrl
das
mov
dec
mov
in
test
adc
dec
lret
adc
inc
ret
fwait
cld
dec
lahf
sbb
sub
ret
mov
scas
scas
xor
sbb
mov
fidivs
jno
rcrl
int
add
jb
fisubl
jb
int
inc
adc
loope
das
xor
adc
ret
insb
out
mov
ficomps
fldcw
movsl
push
jbe
pand
cld
imul
jnp
insl
cmp
or
pop
mov
jg
push
and
mov
mov
xchg
aam
repz
outsl
popa
jg
xchg
mov
out
movsl
mov
push
pop
fdivrs
mov
scas
mov
or
xchg
popf
xor
adc
aad
pop
adc
hlt
popf
lds
icebp
push
adcb
push
adc
fldl
xor
test
sbb
xchg
rorl
test
int3
imul
add
shlb
rep
push
test
add
mov
add
outsb
rclb
lahf
sbbb
aas
addl
stc
jb
cli
push
xchg
arpl
dec
mov
scas
mov
dec
mov
test
test
and
not
outsb
mov
jnp
movsb
sub
pop
scas
or
sbb
mov
enter
add
mov
dec
inc
cmp
repz
push
movsb
addb
out
xor
mov
shll
lret
pop
mov
leave
or
fimuls
insb
int3
test
mov
out
xchg
je
and
cmp
jnp
test
stc
in
jbe
fs
add
pop
icebp
dec
addr16
and
fdivrl
cmc
repnz
mov
cmp
jl
sub
test
adc
insl
mov
mov
mov
xorb
jbe
cmc
push
push
push
mov
cmp
pop
cli
test
sahf
mov
mov
out
cmp
pand
das
dec
cs
add
dec
pop
dec
cmp
push
adc
dec
cmp
xchg
mov
and
mov
cmp
cmp
pusha
mov
ss
cli
shll
pop
dec
and
sbb
inc
aam
out
popf
inc
pop
shlb
jge
data16
ret
and
fnstsw
aas
movb
or
test
lods
cmp
out
ds
or
xor
js
into
push
xor
aas
les
adc
mov
arpl
test
ja
sbb
lods
pop
jb
ss
aas
popa
cmp
jecxz
mov
js
push
xor
adc
popf
mov
fcompl
aam
es
insb
fwait
lahf
mov
mov
aas
push
lret
mov
pop
add
outsb
sbb
sbbb
dec
rclb
int3
and
xor
cwtl
pop
icebp
xchg
add
mov
ret
xchg
pusha
rcrb
addr16
call
fstpt
cmp
push
in
enter
mov
inc
shrl
lds
xor
out
mov
mov
test
test
mov
popa
sub
fs
sub
dec
jnp
nop
sbb
mov
sub
mov
daa
dec
mov
and
stos
lret
out
fmuls
mov
push
orb
je
and
xor
sbb
pushf
inc
shlb
dec
mov
adc
lods
mov
sub
mov
std
mov
pop
movsl
push
notl
movsl
jmp
fwait
outsl
inc
push
cmp
mov
jbe
jo
repnz
gs
or
pushf
stos
icebp
fstl
mov
xchg
sbb
mov
and
add
call
mov
inc
xor
jo
mov
xchg
pop
mov
fisubl
jo
arpl
jne
enter
xchg
pop
and
mov
adc
sub
mov
scas
sbb
addl
in
pop
push
and
enter
sbb
cmpb
push
pop
ds
or
in
ja
add
push
pop
jo
mov
xor
call
shr
stc
mov
imul
mov
jns
rclb
mov
jmp
pop
divl
movsl
jns
jp
add
and
pop
or
test
hlt
xor
outsl
push
push
add
push
loopne
xchg
dec
imul
das
dec
adc
and
mov
dec
lods
nop
movsb
sub
test
adc
sbb
std
push
cmp
inc
mov
hlt
les
xor
sti
dec
ds
inc
xchg
mov
dec
mov
mov
pop
ds
iret
dec
push
sbb
sahf
fidivrs
mov
nop
jecxz
or
inc
mov
insb
hlt
test
mov
cli
pop
and
repz
movsb
repnz
mov
dec
mov
add
shrb
xchg
mov
inc
cmp
push
sbb
imul
and
in
insb
inc
shll
sbbl
pop
sub
jo
clc
and
lahf
pusha
outsb
xchg
lcall
pop
jl
or
jbe
clc
ljmp
cmpsb
shlb
push
and
pop
and
stc
mov
pushf
push
in
add
cmp
ja
and
call
or
xor
pop
aas
mov
and
scas
fstpt
popa
mov
xchg
cmp
fwait
lods
add
or
pop
cmp
in
or
mov
movsl
or
nop
pop
mov
mov
mov
inc
jl
movsl
pop
insl
cli
mov
fbld
xor
push
lret
out
jb
dec
dec
daa
add
jb
xor
or
pop
sub
mov
int
dec
mov
sar
int3
cmc
sub
dec
sbb
inc
cmpsl
cmpsl
ret
inc
test
inc
cmp
push
call
aas
jg
xchg
notb
add
xchg
mov
sub
stos
popf
pushf
movl
xor
hlt
movsb
inc
arpl
pop
mov
mov
pop
jb
push
loopne
xchg
pushf
popf
mov
push
hlt
dec
rorl
push
fstl
lds
lods
loop
pop
xor
mov
ret
les
int
and
into
mov
add
or
ljmp
dec
add
pop
pop
mov
or
cmp
mov
shlb
add
push
imul
fimull
mov
daa
cmc
call
push
mov
insb
xorl
in
inc
repz
xchg
imul
mov
pop
cltd
sub
dec
inc
in
andb
and
iret
xchg
imul
mov
or
int3
add
mov
out
add
andb
xor
inc
xchg
fsubrl
call
sub
mov
out
into
inc
loope
jnp
cmp
add
jl
jne
mov
mov
add
sarl
mov
push
sbb
cli
mov
aam
icebp
andl
jmp
roll
cli
xlat
imul
sub
xor
sub
repnz
mov
jg
or
int
push
int
jne
cltd
dec
adc
xor
mov
andb
test
xchg
dec
idivb
ja
dec
sub
mov
or
sub
cmpsb
out
pop
mov
adc
push
xchg
int3
fld
mov
dec
jecxz
lret
jle
push
in
frstor
sbb
lods
add
imul
imul
jns
adc
push
mov
mov
dec
adc
push
loopne
cs
arpl
insb
iret
jecxz
daa
and
loopne
fcomps
cs
mov
dec
lret
pop
cli
test
pop
inc
fs
cmp
mov
sub
or
lret
jg
cmp
or
fistpll
loope
mov
lret
dec
push
mov
mov
movsb
pop
popa
cmpsl
jno
pop
test
std
fisttpl
stos
in
mov
lret
dec
in
mov
inc
shlb
bound
dec
dec
cmc
test
lods
and
fld
inc
repnz
and
cmp
ss
in
cmp
sub
xor
inc
adc
mov
dec
jle
lcall
push
mov
inc
dec
jmp
outsl
mov
inc
les
sti
lret
fsubl
add
pushf
jno
bound
inc
js
lods
clc
cmp
test
popf
mov
leave
xor
push
pop
and
popf
scas
loopne
sub
add
hlt
shl
in
inc
or
jo
xchg
jb
pop
fiaddl
dec
mov
std
popf
in
xor
test
pushf
xchg
repz
ds
add
pop
adc
push
fldcw
test
adc
and
div
movsl
jl
bound
stc
mov
and
loop
insl
jl
mov
pop
and
iret
mov
mov
cmp
push
mov
mov
xchg
lcall
insb
lds
test
mov
push
inc
add
jp
adc
cmpsl
pushf
cmc
cs
sbbb
dec
mov
mov
fiaddl
pop
jae
inc
leave
jo
jns
pop
pop
movsb
je
gs
cmc
pusha
jg
scas
lds
adc
mov
or
pop
cli
jae
cwtl
sti
mov
push
js
pop
imul
inc
mulb
push
mov
insb
into
or
cmp
jmp
sub
and
mov
out
inc
sbb
je
cld
inc
out
mov
les
scas
xchg
in
or
lock
xor
out
outsl
movl
push
ret
or
loop
mov
por
pop
xchg
mov
sbb
or
pop
mov
jl
push
std
xchg
mov
aaa
inc
sbb
jne
in
lea
lahf
add
sub
adcb
mov
rcll
sbbb
add
sub
cmpsl
push
xor
int
ror
negb
outsb
add
inc
or
pop
cmp
add
inc
sbb
xchg
fnstenv
sub
mov
lods
rorl
out
xor
mov
inc
sbb
sbb
rcrb
aad
xlat
push
aas
shl
jle
jg
xchg
add
push
in
adc
out
mov
adc
not
in
pop
cmpsl
add
push
gs
add
adc
jb
pushf
fildll
pushf
mov
cwtl
repz
xor
add
scas
jo
aaa
cmp
hlt
jo
mov
xchg
adc
lret
pop
js
pop
push
xor
sbbb
add
stc
add
leave
or
add
fisubs
aad
xchg
dec
sub
sub
dec
cmp
int
movsl
mov
ja
gs
mov
aam
sbb
jnp
pop
xor
mov
mov
push
xchg
push
popa
sub
cmp
adc
inc
sub
mov
jg
push
mov
jp
push
mov
jns
mov
sbb
adc
aam
std
dec
call
test
add
push
mov
inc
mov
mov
xchg
add
movsb
mov
lahf
pushf
idivl
mov
inc
hlt
jne
out
mov
sub
mov
lock
subl
sub
mov
mov
push
aam
int3
push
jne
xchg
stos
inc
stos
out
cmp
ljmp
mov
in
scas
cmpsb
scas
inc
insl
ljmp
ret
scas
ficoms
ss
or
dec
insl
lahf
je
lock
mov
fstpl
dec
call
mov
scas
push
mov
lea
dec
push
jge
jo
jmp
testb
inc
cmp
dec
xlat
sub
incb
pop
xchg
pop
test
out
dec
andb
or
call
mov
mov
mov
sub
int3
inc
int
push
adc
aas
insl
cmp
aaa
xchg
mov
xchg
iret
popf
mov
xchg
sub
rcrl
call
clc
sub
outsb
ljmp
dec
stos
inc
pop
pop
or
push
and
arpl
xor
mov
push
add
in
mov
aam
add
nop
xchg
mov
cs
fwait
scas
mov
je
mov
stos
stos
dec
sbb
xor
pop
lea
push
push
sub
adc
subl
rcl
mov
and
push
cltd
and
jns
pop
ds
stc
pop
lods
aaa
aad
adc
in
dec
push
sub
dec
adc
das
fisttpll
add
lret
outsl
in
out
addb
les
rcll
aam
int3
loope
aas
xchg
int3
push
sub
xor
adc
or
aas
push
add
das
stos
outsb
iret
xchg
mov
les
ja
call
xor
mov
out
mov
mov
in
popa
ds
pop
push
std
outsb
inc
nop
mov
divl
sti
in
mov
leave
je
lcall
nop
dec
mov
fld
les
jle
mov
mov
mov
and
scas
aaa
test
mov
insl
std
cmp
xchg
enter
mov
and
scas
mov
in
test
rcl
test
mov
add
add
loopne
ds
push
or
repnz
jl
mov
fabs
icebp
aas
and
in
or
mov
push
popf
mov
sbb
test
dec
loope
lret
arpl
add
and
inc
adc
inc
data16
outsb
mov
mov
test
sbb
loope
fildll
mov
push
mov
adcl
push
pop
xor
xchg
add
xchg
cli
sbb
mov
call
push
call
jmp
cmp
scas
out
lods
mov
je
clc
mov
jmp
mov
movsl
sub
icebp
lret
lret
pop
test
pop
cmp
repz
lret
or
sub
add
shl
bound
xlat
notb
addl
cli
mov
and
imul
into
mov
popl
iret
mov
lods
test
cli
cltd
add
push
je
subb
adc
or
aam
mov
cmp
mov
out
sahf
shrl
arpl
jbe
aaa
sbb
std
fcomp
add
lea
push
push
pushf
xchg
outsb
pop
cmpsl
jecxz
scas
xor
iret
mov
shrb
and
inc
cld
mov
fildll
pop
dec
sbb
cmp
mov
jmp
dec
clc
mov
cmp
clc
cmp
mov
pop
push
jnp
test
daa
sarb
das
arpl
xor
inc
xor
testl
pop
andl
mov
mov
scas
cld
dec
movsb
adc
add
outsl
ret
out
divb
xor
and
add
ja
jne
loope
sbb
sbb
dec
fwait
sub
mov
lret
cmpsb
cs
das
shll
popa
inc
lahf
test
mov
jecxz
lret
bound
mov
mov
std
test
jno
or
gs
ss
ret
es
mov
dec
adc
xchg
mov
scas
mov
xchg
sub
lret
stos
mov
jmp
pop
fwait
push
pop
rcr
arpl
outsb
cmp
test
stos
and
ret
mov
jl
pop
pop
outsl
push
inc
fisubl
jno
mov
sub
mov
inc
sarb
adc
push
mov
lret
pop
loope
sub
mov
xchg
and
sarb
scas
push
dec
adc
adc
or
sub
shl
mov
mov
inc
xchg
imul
sahf
ja
inc
subb
enter
mov
push
xor
dec
xchg
mov
jmp
outsl
push
inc
mov
imul
outsb
push
sbb
mov
fyl2x
iret
mov
push
or
mov
sbb
cmpsl
test
mov
and
fnstsw
aas
lcall
mov
idivl
fs
and
mull
gs
mov
sbb
int
push
add
mov
adc
out
into
jo
iret
pop
scas
cmp
in
stc
mov
cmp
xchg
lea
mulb
sub
imul
aam
jge
test
rorb
xchg
insb
push
cmp
cmp
outsl
lret
pop
push
dec
or
divl
pushf
test
pop
jnp
add
pop
xorb
cmpl
loop
stc
push
dec
xchg
cs
lods
scas
xchg
dec
xor
pop
pop
mov
testb
inc
xchg
mov
and
pop
test
mov
push
popa
inc
mul
scas
stos
test
mov
movsb
inc
jns
adc
ficoml
notl
or
dec
jno
add
cmp
push
pop
mov
cli
test
loope
pushf
ljmp
fwait
popf
pop
xor
cwtl
pop
frstor
jp
jge
jp
xchg
test
pop
inc
sbb
stos
ljmp
xlat
mov
xchg
imull
insl
ss
addr16
ficoms
mov
sahf
mov
dec
mov
xor
mov
xor
pop
sub
push
mov
pop
cli
mov
inc
xorl
adc
or
sbb
sub
repnz
push
push
mov
mov
pop
cmp
hlt
pop
xchg
test
lock
rcrb
mov
xor
icebp
jp
adc
lea
enter
xchg
mov
subl
out
xor
pop
mov
inc
xchg
loop
fs
insb
fidivs
les
push
xor
orb
xor
andb
push
outsb
xchg
enter
jp
cmp
clc
or
xor
dec
pusha
fdivrp
jb
cmp
mov
shll
shll
lret
adc
pop
mov
cmpsl
iret
cmp
cmpb
aas
movsb
inc
add
inc
repz
jmp
insb
pop
scas
call
inc
push
xorl
dec
mov
jp
mov
fidivrl
das
in
stos
xor
stos
sbb
lret
into
js
cmc
push
cmc
cli
xchg
je
fistps
xor
inc
xchg
sbb
fcoml
dec
pop
lock
inc
cltd
push
jns
jg
jo
cmp
jge
and
xchg
push
mov
and
mov
jb
cmp
cld
push
xchg
ret
movsl
dec
notl
in
shll
mov
lods
pop
xchg
cwtl
js
nop
xchg
xor
stos
lds
sbb
dec
aad
adc
and
dec
fucom
and
lcall
clc
dec
push
dec
mov
pop
rolb
fs
mov
cmc
repz
in
cmc
cmp
dec
or
hlt
out
js
cli
movsl
xlat
dec
and
popa
jge
xchg
repnz
lret
mov
in
cltd
dec
and
xchg
jb
sbb
pop
mov
cltd
jmp
test
sub
pop
mov
pop
and
add
fldenv
hlt
bound
fcomps
jns
sbb
or
inc
ror
fisttpl
pusha
jo
sub
outsb
loop,pn
push
mov
cmp
fnstsw
ror
repz
mov
jne
pushf
test
pop
rorb
push
fdivrs
dec
lret
andl
fisttpl
cmp
hlt
ja
and
xlat
popf
jg
mov
cmp
lret
mov
icebp
cmp
sbb
vpcomw
daa
or
or
push
push
push
mov
ja
push
cltd
xor
mov
xor
outsl
repnz
xchg
jno
jmp
mov
cmpsl
loope
push
ficoms
jp
push
hlt
stc
hlt
xor
repnz
pop
cmp
mov
jb
sbb
cmc
sub
sbb
imul
xor
fadd
pop
mov
loope
jmp
cmc
push
sub
int3
cli
push
sbb
jnp
sub
sti
sbb
xlat
mov
aas
aaa
dec
nop
jmp
es
dec
push
inc
out
cltd
pusha
mov
enter
inc
jae
sbbb
adc
pusha
pop
dec
mov
xor
and
mov
jecxz
aaa
std
sbb
je
ja
aad
ljmp
cld
jb
sbb
dec
mull
mov
stc
add
or
shrb
bound
xor
dec
gs
cmpsl
sbb
xchg
xor
push
in
xchg
imul
dec
idivl
pop
jbe
push
daa
mov
rcll
pop
xchg
shl
pop
cmpsl
xchg
scas
push
sbb
test
push
in
into
data16
add
test
rolb
cmp
add
es
mov
stos
cwtl
inc
in
jno
xor
pop
inc
pop
repnz
lahf
jnp
ds
jbe
das
nop
mov
sar
cs
sub
mov
jbe
ret
mov
call
cli
dec
add
mov
and
rorl
stc
cltd
push
mov
outsb
jg
stc
cmp
jp
sbbl
fwait
ljmp
inc
xchg
mov
or
sub
outsb
xor
jecxz,pn
or
sub
add
sub
ret
xchg
xor
cltd
mov
shr
ret
and
ss
sahf
adc
push
cmp
lret
mov
jle
out
in
lret
xor
aas
hlt
lret
lret
jbe
mov
rcl
fwait
mov
adc
ret
stc
in
mov
in
pop
aam
sub
fsubrl
out
inc
rcrb
dec
adc
xchg
cmp
aas
cmp
push
mov
xchg
mov
addb
hlt
test
mov
push
hlt
jnp
jne
in
cli
fwait
scas
aam
clc
lds
sarb
sbb
push
mov
cmpb
pop
pop
xor
sbb
sbb
mov
sbb
test
test
adc
push
fildl
jge
shlb
ljmp
jg
inc
repnz
or
add
mov
movsl
push
int3
mov
gs
dec
xor
sbb
pusha
fdivs
pop
sub
sbb
aas
outsl
rorl
adc
or
loope
cli
mov
std
jg
leave
ds
fisttps
push
cmp
repz
jne
mov
test
xchg
sbb
outsl
jnp
dec
jae
xchg
inc
mov
xorb
bound
jb
mov
sub
and
mov
out
sub
lock
scas
add
out
inc
xlat
fidivl
mov
es
fidivrl
inc
jge
loope
addr16
sahf
pop
stos
jne
out
pop
jl
dec
jno
or
movsl
dec
push
xchg
xchg
call
push
sbb
xor
test
jle
outsl
ds
data16
mov
jnp
mov
test
mov
sbb
out
ret
lea
popf
push
mov
mov
clc
loopne
add
addr16
test
movsb
mov
cmp
adc
inc
xchg
out
jb
test
pop
and
mov
jmp
mov
pop
cmp
mov
out
dec
loop
lret
push
mov
jno
push
xchg
repz
roll
icebp
pop
cmp
dec
loope
dec
dec
pop
arpl
rcll
add
sbb
repz
movsl
lds
mov
mov
pop
scas
dec
pop
out
pop
test
adc
mov
xchg
and
or
xchg
adc
jne
add
clc
subl
cmp
test
adc
loope
fwait
loopne
cmp
aad
push
test
and
cmp
pop
mov
dec
enter
jle
add
into
inc
es
xchg
sahf
mov
cli
ja
dec
in
mov
or
mov
and
push
and
push
cld
adc
push
ss
in
pop
fstpl
cmpsb
into
je
mov
sbb
repnz
test
cmp
shrl
out
dec
mov
mov
sub
fnstenv
movsb
adc
mov
inc
jno
inc
test
mov
imul
cmpsl
cmp
mov
mov
jg
xor
sahf
scas
push
jmp
mov
mov
ror
add
pop
popf
or
addr16
in
into
aaa
out
mov
pop
pop
mov
jl
jns
scas
dec
movsb
js
out
cmc
push
push
xor
in
bound
enter
flds
xor
fmul
ficomps
loop
pushf
xor
sbb
adc
mov
mov
sbb
xor
push
test
test
mov
jl
outsl
cwtl
imul
sbb
mov
in
inc
add
repnz
cmp
jecxz
jbe
or
les
mov
adc
nop
jle
sbb
ds
cmpsl
cwtl
negb
pop
adc
int3
cli
enter
xor
lods
cmc
or
xchg
dec
outsb
lock
iret
xor
hlt
pusha
or
shll
div
pop
xor
pop
test
hlt
jl
enter
jnp
mov
and
pop
lods
subl
icebp
add
mov
rcrb
movsb
cmp
mov
xchg
cmp
jns
mov
push
fmull
adc
pop
bound
mov
push
xchg
cmp
cmp
ja
pusha
cld
imul
lock
jge
mov
lods
ret
subb
rcl
nop
xor
cltd
inc
cmpsl
scas
mov
std
rorl
cld
sub
subb
lahf
stos
cld
mov
leave
aad
or
xor
cmp
jle
inc
inc
shlb
aaa
outsl
pop
or
data16
jne
das
int3
inc
int3
jnp
std
pusha
adc
fwait
sub
mov
pop
incb
stos
push
shlb
std
negl
jmp
sbb
repnz
xor
push
dec
addb
push
stos
sbb
shlb
js
xor
jae
mov
inc
and
mov
mov
popf
adc
sub
jp
mov
repz
pop
dec
push
fsts
sub
and
lahf
out
xchg
out
fistps
in
andl
and
dec
hlt
hlt
pop
js
pop
test
stc
imul
sub
push
js
nop
ljmp
std
test
sbb
rorb
daa
mov
dec
adc
aad
ss
jne
dec
addb
cmp
int3
sbb
add
mov
mov
xchg
xor
filds
inc
jmp
stos
inc
nop
scas
xchg
xchg
popa
and
or
jl
clc
repz
mov
cmc
pop
push
and
icebp
lock
mov
inc
testb
xor
and
sti
lret
adc
mov
imul
adc
ret
dec
mov
stos
xchg
push
rcrb
mov
inc
push
mov
ffree
and
fwait
pop
les
inc
mov
add
sbb
nop
aas
xor
and
imul
sbb
push
loopne
pop
test
ja
lcall
add
int3
hlt
stc
push
pusha
mov
dec
lea
pop
mov
jg
xlat
and
es
mov
les
push
adc
mov
cmpsl
inc
adc
shll
fidivrl
rorb
cmp
pop
loope
mov
fisttps
in
jne
pop
imul
mov
cwtl
jbe
popa
stc
push
adc
xchg
or
fmul
add
out
pop
mov
jne
xchg
stos
mov
pop
dec
nop
lret
mov
or
aaa
add
jmp
xor
ficompl
popf
pop
insl
or
jns
insb
pop
subb
shll
xchg
dec
ljmp
cmpsb
cmc
stc
icebp
insb
push
dec
rorl
ficomps
lret
gs
add
mov
es
clc
adc
fnsave
mov
cmp
cmpsb
inc
in
fwait
fistpll
pop
jle
clc
insb
rorb
adc
jl
mov
into
add
mov
xorl
sbb
pop
iret
lods
cli
movsl
mov
adc
xorl
jecxz
lock
lds
mov
jecxz
mov
cmpsl
jnp
push
insb
gs
adc
mov
adc
test
push
xchg
mov
push
test
cli
shr
and
push
mov
xorl
add
rcrb
fisttpl
xor
push
mov
xor
sbb
or
sub
or
ja
negb
sub
int
enter
daa
out
xchg
pop
stos
out
pushl
jbe
bound
lret
push
addr16
push
and
mov
out
jo
mov
cmpsb
js
jns
push
nop
adc
aam
mov
popa
or
push
sub
ja
or
mov
xchg
sub
mov
mov
js
xchg
mov
cli
adc
lahf
cs
cmpsb
mov
mov
and
jle
jle
and
pop
push
fisttps
ja
push
cmp
mov
js
insb
fst
loopne
jbe
rclb
psrld
push
dec
mov
or
out
in
fimuls
mov
push
into
mov
test
push
lret
popf
fwait
dec
shrl
mov
cmpsb
push
popf
or
jmp
sub
clc
push
call
jle
add
push
int3
push
daa
call
cmpsl
clc
sarl
push
or
mov
dec
in
sahf
mov
jo
dec
push
mov
out
sbb
cli
add
xor
mov
inc
enter
xor
pop
push
add
int3
out
dec
adc
xor
insb
pop
inc
mov
repz
in
mov
sub
fildl
sub
or
scas
insb
loopne
ja
pushf
jge
add
sbb
mov
inc
xchg
pop
mov
pop
dec
gs
frstor
sbbb
jge
jns
adc
stos
enter
cmp
ljmp
pusha
lcall
adc
lds
cwtl
dec
pusha
mov
decb
mov
mov
in
fwait
es
loopne
sub
loop
movsl
popf
mov
faddl
in
fwait
std
in
daa
xchg
mov
xchg
pop
mov
outsb
repnz
clc
inc
sbb
xchg
xchg
in
cli
enter
pop
mov
fcmovnu
dec
push
lahf
mov
cmp
sbb
or
sub
sub
outsl
dec
lods
shrl
mov
les
xchg
pop
xchg
add
pop
push
int
in
push
xlat
dec
call
rorl
js
inc
repnz
call
mov
or
leave
rorl
sahf
cmp
xchg
cmp
inc
notb
add
test
insb
insl
push
dec
pop
cwtl
ret
std
popa
fs
mov
xchg
adc
call
out
dec
push
popa
mov
jp
stc
or
test
inc
fcmove
iret
sbb
lret
pop
cltd
outsl
mov
in
mov
inc
cs
aad
call
sub
movsb
mov
frstor
sub
cmpsb
cli
pop
mov
mov
or
pusha
icebp
test
outsl
incl
mov
imul
test
int3
mov
test
ljmp
and
push
push
aam
int3
inc
pop
aas
adc
in
stc
and
jo
shrl
jne
jne
cmp
inc
sbb
add
xor
cmp
mov
int
add
adc
jecxz
out
cs
add
pop
mov
push
cmpsb
cwtl
xchg
ljmp
fcompl
lock
mov
sbb
aam
ret
js
fsubrs
lcall
add
push
pop
ja
in
cmp
lods
jnp
imul
ret
mov
jecxz
arpl
sahf
dec
inc
dec
mov
in
inc
pop
lds
pop
fs
and
jg
lcall
push
imul
push
cld
popf
push
add
stos
jno
jne
scas
pop
fnstenv
jae
cmp
popf
mov
xor
popf
sbb
cmpsb
jl
out
pop
cwtl
push
arpl
cmp
fistpll
int
and
jno
dec
jne
adc
jb
pop
lds
aas
ljmp
pop
and
or
sti
and
and
andl
inc
xchg
out
inc
or
loop
mov
outsb
stc
push
dec
lret
and
sahf
into
aad
mov
addl
popf
mov
arpl
js
cmpsl
push
mov
testl
push
xorl
jne
fnsave
movsb
sarb
or
in
cmp
inc
loope
nop
cmp
repnz
ds
pop
dec
cmp
rcr
mov
xor
bound
sarl
leave
ret
pop
aam
push
jo
mov
daa
not
mov
popf
aad
xchg
fadds
sti
loop
popf
js
cmp
mov
daa
js
movsl
and
add
xor
clc
pop
mov
sub
outsl
pop
add
data16
fadds
sbb
xor
xor
mov
xor
imul
out
cmp
dec
push
mov
or
sbb
stos
dec
in
or
sbb
jl
push
sub
jmp
add
stos
clc
add
scas
sbb
sbb
lods
mov
inc
stc
add
test
lds
popa
cmpsb
add
ljmp
adc
inc
mov
bound
loope
scas
sub
mov
cltd
and
int3
mov
ja
adc
mov
leave
repz
cmpsl
cmp
mov
and
sbb
mov
es
jnp
int3
insl
stos
adc
hlt
adc
dec
cmp
in
icebp
push
out
dec
aam
inc
jl
ret
sbb
shrb
xor
into
cmpl
icebp
lret
mov
pop
pop
scas
push
jge
pop
hlt
xchg
cmp
jg
arpl
xchg
outsb
mov
xor
mov
xor
lret
xor
scas
into
or
fsubs
imul
das
call
fstpl
cmp
in
fisubrs
adc
pop
inc
scas
in
aad
lret
mov
jo
insl
jns
pop
sbb
mov
mov
je
add
lods
stos
pop
xor
sbb
test
frstor
inc
push
mov
mov
mov
out
insb
cmp
pop
and
lea
in
sti
shlb
push
sub
or
adc
or
in
cmpl
sbb
test
insl
pop
xchg
or
push
scas
mov
lock
stos
xchg
add
setp
xchg
fistpll
push
or
mov
shl
in
scas
rclb
jmp
cmp
or
loope,pt
flds
addr16
icebp
push
xlat
dec
mov
popa
pop
bnd
shll
aas
adc
dec
into
cmp
addr16
rcrb
stc
inc
sub
cmp
jnp
nop
pop
rcll
mov
and
and
pop
fmull
or
mov
and
pushf
cmp
push
xor
xor
mov
mov
lret
pop
frstor
fsubs
adc
insb
clc
bound
enter
jb
in
mov
adc
les
dec
out
jbe
inc
sar
outsb
xor
sub
inc
sbb
jns
jecxz
xchg
movl
pop
fs
sub
mov
inc
adc
xchg
mov
dec
xor
dec
mov
xorb
mov
add
out
mov
add
insb
addr16
sbb
mov
fldt
dec
lahf
in
lret
mov
movsl
lds
lret
rorb
push
add
mov
cmp
mov
aad
inc
test
xor
int3
repnz
sahf
insb
push
es
lds
fbld
aaa
icebp
rorb
insb
mov
push
inc
dec
jmp
xchg
icebp
mov
xor
ret
iret
push
inc
cmp
pop
cmpsb
in
push
stc
test
sbb
mov
inc
imul
sbb
rolb
test
data16
xor
push
ja
lea
loop
pop
lahf
in
cmp
mov
sbb
fistpll
lret
scas
test
pop
inc
cmp
roll
scas
jmp
pop
nop
pop
sahf
out
sub
sbb
into
stos
add
gs
test
xchg
out
mov
inc
jl
push
roll
dec
fistpll
daa
fwait
push
push
ja
pop
dec
mov
jge
je
and
mov
mov
or
or
out
xor
lret
jge
dec
xchg
dec
mov
mov
push
bound
in
push
fwait
push
push
lods
and
nop
stc
ror
adc
and
sbb
lahf
sub
out
jle
pop
daa
inc
leave
std
jo
mov
pop
test
mov
jb
cmc
inc
adc
add
pop
sbb
adc
sbb
jecxz
mov
and
adc
mov
cltd
incb
jb
fdivrs
clc
stos
inc
pop
cmpsl
xchg
push
push
lds
ljmp
mov
movsl
sub
push
jmp
jmp
flds
dec
out
lcall
mov
mov
mov
pusha
mov
loope
jmp
leave
das
fs
nop
loope
aam
jbe
sbb
aad
in
mov
mov
add
jl
subb
shrl
push
cli
inc
jg
add
insb
sbb
adc
xor
sarl
es
mov
aam
pop
xchg
mov
pop
pop
jmp
sbb
and
mov
test
out
in
jnp
pop
notb
shl
popf
add
leave
arpl
push
xlat
je
popa
loopne
inc
mov
cmp
mov
dec
pop
adc
jnp
push
lea
es
repz
adc
mov
xchg
shlb
sbb
in
xchg
sti
sbb
mov
inc
jmp
cmp
fst
jnp
inc
fs
xor
int
mov
data16
stos
outsl
add
add
mov
adc
jns
lcall
not
push
inc
sahf
push
test
mov
push
and
dec
rorl
pop
in
add
aas
jne
lods
add
js
cs
into
mov
fsubrl
and
test
cltd
jae
insb
flds
cli
jcxz
cmp
mov
outsl
rolb
sbb
adc
inc
sbb
loop
push
in
push
adc
lock
xlat
push
ljmp
ss
or
lcall
xor
add
hlt
daa
cltd
xor
repnz
mov
xchg
mov
xchg
jge
enter
dec
sub
ret
and
adc
or
mov
lds
cmpsb
out
pop
mov
lret
cmpsb
jns
cmpsb
pusha
xor
adc
lcall
xchg
sysret
popa
loope
cs
jge
and
loop
sub
push
into
inc
and
cmc
add
addb
lds
sbb
andl
push
mov
shrb
fdivp
add
inc
das
lret
xor
sub
in
push
aam
daa
mov
rcrb
cwtl
and
mov
in
repz
call
sub
pop
jmp
repnz
and
xchg
lret
cmp
mov
daa
mov
fildl
cmp
popa
inc
repnz
outsl
arpl
xchg
sbb
ret
lret
push
pop
je
or
jns
int3
push
push
outsb
inc
xchg
in
xchg
fnstsw
lret
cmp
lcall
mov
loope
ljmp
nop
dec
lods
mov
loope,pn
jmp
imul
pop
xchg
xor
sub
lret
nop
mov
adc
cmc
ja
jg
xchg
stc
adc
push
cmp
or
sub
and
or
insl
sbb
mov
jns
daa
mov
ret
add
outsb
faddp
add
jae
sub
shll
into
out
mov
dec
negb
sbb
arpl
fiadds
scas
loop
ret
sbb
xchg
xchg
mov
push
rolb
imul
and
add
and
arpl
cmp
hlt
mov
inc
and
and
rol
mov
add
push
out
adc
mov
inc
stos
jle
xchg
xor
bsr
xchg
pushf
cmc
insl
icebp
xlat
push
daa
push
iret
lds
xorb
adc
pop
test
out
add
push
incl
shl
ss
jg
inc
mov
sbb
cmp
outsl
jb
or
ficoml
inc
fistps
and
inc
test
dec
test
enter
dec
pop
subb
sub
lret
inc
loop
aam
inc
lods
enter
push
shrl
cmp
sub
adcb
lock
lea
popa
mov
or
push
insb
addr16
aam
out
mov
dec
es
mov
stos
jbe
scas
xchg
xor
cli
or
pop
movsl
mov
xor
cmp
addr16
stos
lods
pop
sti
ljmp
out
out
or
lods
imul
mov
bound
movsl
pop
cmp
fwait
xchg
jno
dec
mov
push
adc
std
mov
xchg
aam
ds
mov
mov
fs
jp
mov
mov
std
hlt
or
outsb
jle
popa
in
and
scas
adc
fimull
cs
push
insb
popw
ja
ljmp
shlb
test
mov
cli
cmp
fisubrl
jg
mov
jg
loop
cmp
sbb
add
dec
mov
xchg
mov
outsb
mov
dec
inc
fistpl
sub
or
add
sub
xchg
jnp
add
pushf
daa
icebp
mov
cld
jns
out
arpl
lcall
push
sbb
rcll
jmp
inc
inc
push
jge,pt
stos
out
sub
es
int3
push
dec
out
std
cmpsb
push
clc
mov
lea
in
cmp
sub
hlt
mov
or
mov
sahf
pusha
jno
mov
xor
xchg
into
imul
and
mov
xchg
int3
mov
xchg
xchg
inc
nop
mov
fiaddl
rcl
test
push
xor
inc
repnz
pop
lret
mulb
loop
jae
gs
sti
pop
out
ljmp
aad
fbstp
cmpsb
loopne
mov
mov
stos
mov
push
mov
sub
rorb
inc
rorl
mov
pop
loope
mov
push
push
in
xchg
jp
jp
lea
adc
lods
xor
pop
jl
wrmsr
mov
inc
sbb
jbe
xchg
in
mov
dec
cmp
xchg
pushf
jl
dec
jno
push
cld
inc
add
pusha
or
cli
inc
arpl
or
inc
dec
scas
xchg
adc
loopne
cmp
fldl
and
sbb
pop
add
fstl
cmp
push
sub
sbb
xchg
pop
jge
add
inc
add
adc
sub
lahf
push
int
loopne
push
sbb
pop
adc
push
test
add
xchg
scas
jl
lock
or
daa
push
inc
fiadds
jecxz
scas
mov
in
xchg
sbb
arpl
mov
pop
mov
enter
lcall
out
movsl
jge
addr16
mov
adc
repz
mov
jp
cmpsl
push
fcomps
mov
test
into
lret
sub
push
js
add
lahf
rcrl
test
inc
repz
push
xlat
sahf
imul
xchg
add
jo
out
pop
mov
push
xchg
fsubr
cmovbe
addl
pop
loopne
repz
bound
testl
adc
jo
cmp
push
sti
insl
mov
and
mov
clc
nop
sbb
inc
jecxz
cmc
roll
sti
outsb
sahf
mov
jbe
shl
cmpsl
jl
push
jb
push
mov
sbb
xchg
cltd
push
movsl
or
ret
cs
mov
sahf
add
xchg
mov
daa
notl
xchg
xchg
nop
int3
ljmp
sub
push
ret
push
hlt
xor
imul
mov
mov
inc
movsb
arpl
and
lcall
jg
pop
lcall
push
pop
jnp
mov
fidivrl
outsl
sbb
pop
xor
fcmovbe
xchg
push
push
lret
imul
movsb
or
fdivrl
out
outsb
adc
xchg
push
in
pop
fdiv
call
dec
push
sbb
add
and
push
pop
mov
inc
mov
jle
lret
mov
ja
adc
int
jle
std
imulb
js
test
popa
in
in
push
in
dec
rcrb
mov
or
lods
jl
xchg
ljmp
xor
fnsave
push
add
dec
loop
cmovbe
in
shlb
xor
mov
mov
adc
ss
cmp
cmp
add
or
repz
xchg
mov
push
pushf
sub
dec
xor
cmp
sbb
movsl
jle
mov
mov
mov
or
stos
inc
sub
xchg
notb
sbb
or
mov
outsb
mov
mov
ret
xor
lock
mov
js
jmp
stos
shlb
xor
cmc
lods
paddsb
jno
jae
mov
lret
add
out
sbb
aam
jmp
stos
inc
int
xchg
lods
add
bound
and
lock
inc
gs
jae
dec
in
fcompl
inc
or
sub
adc
cmp
mov
insb
mov
xorl
repz
push
cmc
lret
in
outsl
std
ret
and
mov
adc
cmp
call
add
sub
out
iret
mov
pop
push
in
movsl
jge
jg
xchg
out
add
sbb
cmpsl
loop
test
sar
sub
ret
enter
inc
outsb
fiadds
and
inc
push
int3
xor
mov
out
mov
pop
ja
sub
leave
hlt
pop
fbstp
cld
cmp
pop
sub
xor
jne
cmpsb
sbbl
xor
out
mov
sbb
xor
daa
in
add
mov
lea
and
cmc
sbb
sub
mov
cmp
mov
push
mov
bound
lret
dec
mov
mov
outsl
lods
scas
sub
fdivr
xor
mov
pop
insl
int
cltd
nop
not
inc
testl
aam
pusha
lret
into
sub
mov
mov
mov
mov
lea
shll
jno
or
lock
das
cmpsb
lods
xlat
jae
push
lds
pop
inc
sbb
and
jl
inc
xlat
push
cli
outsl
test
push
hlt
shlb
arpl
jb
jne
inc
xor
dec
test
pop
add
cmp
or
xor
loopne
mov
and
lret
jne,pn
pop
cmp
cmp
jno
rcl
mov
std
adcb
xchg
aas
jg
pushf
fmulp
sub
in
xlat
push
imull
xchg
adc
push
cld
cmp
cltd
pop
mov
sbb
mov
mov
rcrl
sbb
jge
mulps
mov
mov
xchg
and
mov
sarb
cmp
mov
push
dec
xchg
or
iret
stc
movsl
mov
rcrb
add
jecxz
sbb
sub
push
mov
sbb
xor
mov
int3
loope
loop
call
out
dec
adc
lods
sarb
push
mov
mov
and
push
std
inc
fwait
clc
shlb
add
mov
inc
push
pop
insb
test
push
divb
dec
loop
repz
sub
std
adc
out
inc
ret
mov
push
mov
xchg
cmpsl
mov
add
push
mov
fimull
idivl
mov
or
inc
push
ss
or
add
mov
sub
pop
movsb
ja
pop
pop
aam
adc
mov
xlat
into
rorl
add
jns
inc
icebp
lods
mov
insb
xchg
add
lods
iret
sub
cmpsb
lret
sbb
mov
cmpl
aad
test
xchg
gs
test
lock
jl
cltd
call
mov
pop
movsl
in
or
adc
popf
pop
jns
jo
and
f2xm1
sbb
add
inc
gs
sbb
push
or
jmp
imul
push
sub
outsw
xchg
cli
cwtl
out
jge
jmp
mov
scas
shlb
mov
mov
inc
sub
stos
cmp
int3
jp
arpl
popf
xchg
mov
pop
fsincos
rcll
jg
je
pop
cli
pop
repnz
test
lret
mov
inc
faddl
jae
mov
popa
in
mov
sub
lea
stos
pop
or
cmp
andb
pop
cmp
cmp
cmc
add
jne
int3
outsl
push
xor
add
mov
jg
lock
cmp
cmp
pop
cwtl
and
push
add
mov
in
leave
loope
push
xor
sub
dec
mov
dec
pop
lahf
mov
popf
and
mov
mulb
call
ds
jns
rcr
cld
fxch
les
or
or
adc
iret
jns
mull
cs
dec
in
icebp
ret
subl
jmp
or
adc
into
xchg
adc
mov
and
mov
testl
inc
hlt
adc
xchg
int
pop
sub
push
adc
xchg
mov
or
aam
sbb
push
jb
mov
icebp
xor
inc
arpl
cmp
and
leave
lahf
add
add
arpl
jb
mov
cmp
xchg
mov
repz
aas
cmpsl
mov
pop
dec
ror
insb
jb
std
jecxz
fadd
sahf
fwait
movsl
mov
std
lea
int3
outsb
adc
jbe
add
add
push
mov
push
jl
fsubrl
xor
jno
xchg
or
in
clc
lahf
shlb
das
inc
ss
pushf
cld
push
outsb
aad
xor
repz
addr16
rorl
push
push
jle
fisubs
xor
jae
push
fisttps
fnstenv
and
cmpsb
es
stc
xchg
aas
pop
jns
push
mov
sub
add
das
sbb
arpl
repz
mov
pop
popf
pop
and
mov
jp
in
pusha
dec
ficoml
push
out
stc
dec
dec
jnp
xor
mov
das
inc
daa
adc
adc
sbb
xchg
and
inc
shll
cmp
scas
in
jge
adc
dec
cmp
push
rorl
jg
dec
lcall
push
jmp
inc
mov
xchg
push
outsb
lock
cmc
adc
mov
add
add
and
mov
cltd
adc
inc
and
xchg
repz
scas
ds
insb
inc
inc
lods
dec
sub
and
ds
mov
lret
icebp
push
movsb
or
aam
mov
xchg
adc
addr16
add
std
pop
or
rorb
mov
mov
loopne
fistps
enter
push
mov
aad
sub
cmp
in
add
sbb
dec
pop
test
lds
fldt
cs
cmp
inc
and
add
pushf
jno
ds
sarl
insb
hlt
dec
and
mov
ret
nop
out
lds
dec
in
pushf
subl
inc
movsl
lock
jle
xchg
pop
test
cmc
jge
inc
cmc
cwtl
and
xchg
push
cmp
sti
jl
mov
lods
movl
ja
bnd
mov
cmp
adc
pop
and
lahf
pusha
mov
dec
sbb
xor
rclb
int3
icebp
mov
adc
jb
mov
jmp
cli
push
adc
xor
addb
clc
mov
xchg
filds
arpl
loop
sbb
outsb
jbe
in
ficompl
fnstsw
in
jecxz
pop
into
cmp
sub
out
pusha
scas
mov
test
cmpsl
shlb
out
ds
mov
ja
lods
jo
jne
sbb
jno
xor
pop
sub
or
scas
mov
xor
fistpl
pop
std
test
mov
mull
jmp
stos
pop
xchg
push
fucomip
inc
or
pop
nop
pop
cwtl
sbb
xchg
mov
lds
insb
rol
add
mov
mov
in
mov
dec
gs
gs
jae
mov
ds
rcr
nop
enter
out
subl
cmp
xchg
out
popf
scas
cmpb
cld
xor
lock
ret
cmp
nop
mov
sub
movsb
dec
fistpl
frstor
fisubrl
sbb
test
cwtl
mov
hlt
dec
sub
out
sub
fwait
int3
pop
fwait
and
xor
or
cwtl
xchg
fwait
lahf
sub
pop
lcall
cmp
pop
test
xchg
mov
jmp
and
cmp
pushf
xlat
in
adc
mov
mov
or
inc
push
sub
or
leave
pop
dec
jae
push
enter
adc
mov
outsb
xor
sub
inc
jge
sub
add
xchg
fs
lahf
or
adc
add
dec
dec
inc
inc
hlt
adc
cs
adc
xchg
pop
dec
xchg
fildll
daa
jmp
adc
mov
arpl
mov
jo
fwait
cmp
pop
push
add
loopne
sbb
rclb
mov
cmp
sbb
lea
and
daa
leave
fimuls
lea
mov
cmp
jge
enter
mov
pushf
inc
push
push
mov
les
movsl
push
out
in
in
out
dec
sti
int
jmp
or
mov
iret
and
ja
stos
add
sahf
test
inc
xor
dec
int
or
jnp
push
cmpsb
xchg
gs
jbe
jbe
outsb
or
js
jae
lcall
adc
fsub
loop
pop
xchg
push
scas
sbb
nop
std
jbe
cwtl
mov
dec
insl
or
sbb
call
push
mov
push
inc
sbb
jmp
xchg
mov
mov
adc
sti
movsl
pusha
lds
add
xor
imul
pop
dec
into
xor
jo
mov
cmp
popf
cmp
mov
ljmp
fcomps
std
push
jle
mov
sub
push
rclb
pop
push
cmpsl
sub
lret
daa
pop
mov
icebp
rorb
pop
mov
rcll
test
mov
push
push
and
outsl
pop
enter
inc
or
shlb
sub
in
push
mov
mov
int3
dec
movsl
insl
xchg
xchg
mov
sub
and
out
into
push
mov
push
aad
lock
ret
sbb
sbb
sub
lds
mov
movsl
icebp
mov
cmc
call
pop
mov
out
push
enter
xor
jae
shrb
enter
insl
mov
test
inc
xchg
cmp
cmc
cmp
xor
adc
in
push
mov
push
mov
adc
cmp
aaa
mov
pop
lcall
push
fcoms
adc
fdivp
pusha
mov
lea
mov
adc
xor
iret
and
sbb
movsb
xchg
ret
lds
lods
inc
sub
fnsave
jmp
jbe
ret
pop
outsl
sbb
fidivrs
out
fwait
cmpsb
adcb
xchg
idivl
adc
jle
cmc
lcall
cmp
inc
push
popf
jmp
outsb
movsb
adc
push
loopne
and
imul
out
sub
mov
pop
popa
pop
or
push
push
pop
mulb
jae
popf
sbb
repnz
adc
dec
sbb
mov
mov
popa
pop
scas
push
loop,pn
mov
out
repz
js
repnz
mov
cmpsb
xchg
pop
jecxz
jb
mov
push
stos
insb
push
add
sbb
hlt
cmpsl
out
jmp
jecxz
push
mov
lock
pop
daa
sti
sbb
sbb
mov
dec
sbb
pop
sti
add
and
inc
and
pop
mov
adc
out
and
sbb
insl
pop
fistps
clc
pusha
xor
stc
movsb
lods
in
adc
fwait
mov
call
divb
mov
mov
jmp
cmpb
xchg
adc
xchg
aam
fcomps
push
leave
sbb
mov
adcb
jo
aaa
inc
clc
mov
mov
push
pop
lret
outsl
fmull
ret
lea
xor
dec
pop
fisttpl
or
adc
mov
inc
jp
sbbb
and
sub
xchg
jns
lret
mov
loop
xchg
outsl
add
mov
push
xchg
out
dec
fxrstor
test
out
ficoms
je
notb
fisubrs
rorb
lcall
inc
pop
sub
scas
push
pop
push
aad
fiaddl
imul
lahf
sbb
outsl
ficomps
mov
stc
inc
inc
jge
stos
fisubs
jo
pushf
mov
sti
or
and
cmp
add
mov
loope,pt
enter
pushf
or
xor
loop
and
or
and
imul
imul
ss
addr16
repz
insb
inc
movb
inc
lea
mov
cmp
out
subl
ds
insl
sub
xchg
xchg
mov
addl
push
in
fsubl
push
loope
jb
jno
mov
ret
inc
or
xchg
lock
cmp
and
cmp
mov
jle
ss
testb
nop
inc
sbb
test
push
test
mov
fcmove
xchg
outsl
mov
ret
push
sub
jmp
aaa
dec
push
leave
or
lods
mov
sbb
xchg
mov
imul
inc
jne
lret
dec
lcall
rcll
sub
adc
mov
hlt
in
inc
leave
sbb
ret
lock
fisttps
sbb
lods
push
push
js
add
sbb
xchg
mov
repnz
jnp
add
push
push
and
rcll
mov
cmc
inc
repz
pop
and
pop
lock
shlb
cmpsb
popa
mov
je
das
incl
push
fsubl
mov
inc
nop
sub
repnz
push
cmp
dec
sub
mov
xor
aam
aad
out
int3
jp
jnp
scas
out
mov
sub
arpl
ficoms
inc
dec
push
mov
clc
outsb
imull
pop
out
shrb
cmpb
ja
add
pop
inc
xchg
pop
rcll
ljmp
cwtl
insl
cmp
imul
push
xchg
cmp
pop
testl
dec
daa
mul
dec
pushf
add
div
das
xchg
and
stos
sub
test
loop
outsb
sbb
dec
sub
cmp
add
rcrb
jae
pop
xor
mov
movsb
xor
cmpsb
pusha
repnz
mov
sbb
add
jp
test
insb
das
stc
xor
fidivrs
daa
imull
outsb
sbbl
mov
enter
out
xchg
inc
outsb
push
mov
add
mov
cmc
icebp
mov
cs
call
int
icebp
or
jns
ret
rorl
mov
leave
jno
rclb
adc
push
add
cmp
jae
jle
sbb
lods
jno
insb
clc
lret
pop
add
mov
cmpsl
imul
adc
and
ror
cmp
test
mov
jbe
push
sbb
popa
jae
inc
sub
out
test
lds
bound
jle
std
mov
cmpsl
in
pop
stos
pop
popa
stos
dec
lock
cmp
adc
sbb
repnz
enter
xor
test
sbb
aaa
iret
cmp
stos
daa
outsl
mov
jne
xor
stos
test
movlps
pop
push
jae
add
cmp
push
lock
pop
cmpsl
jno
adc
ficoms
lea
sbb
pop
mov
or
mov
outsb
call
nop
in
dec
mov
pop
insl
adc
sub
jbe
imul
jmp
aam
xor
add
imul
pop
and
fstl
in
fmull
mov
jae
bound
sbb
push
icebp
nop
mov
lods
xor
dec
data16
loop
aas
out
mov
xorb
jnp
jl
jno
and
adc
mov
jb
xlat
data16
movsb
das
in
pop
arpl
mov
lahf
ss
cmp
cli
dec
xor
adc
push
mov
icebp
and
xchg
xchg
jno
out
cmpsb
inc
shr
mov
hlt
push
lcall
fdiv
adc
pop
orl
shr
inc
scas
jmp
jb
push
xor
mov
cmpsl
rcrb
into
ss
sub
fadd
add
int
data16
or
outsl
dec
xor
or
adc
ja
pop
insb
dec
aam
xchg
push
add
push
jmp
out
aas
add
inc
mov
mov
hlt
lods
test
mov
jmp
jnp
mov
and
dec
add
or
out
add
adc
add
out
jno
sbb
in
push
shl
cltd
icebp
stos
insl
pop
mov
xchg
int
scas
cmp
mov
pop
and
repnz
enter
pushf
cmp
mov
dec
cmp
js
push
or
mov
bound
jg
sub
push
mov
xor
jmp
out
std
rol
rcrl
outsb
idiv
xor
dec
jge
lods
or
xor
setl
dec
mov
movl
push
stos
sub
fsubr
mov
or
pop
in
and
sub
sub
xchg
sub
jge
jp
loopne
push
wrmsr
arpl
mov
xchg
inc
cmp
adc
sub
push
daa
leave
cltd
cs
and
sbb
fnstsw
ret
call
leave
inc
adc
rcl
sbb
out
add
inc
lods
pop
nop
addps
in
adc
jbe
jmp
mov
idivl
repz
push
js
rcll
hlt
mov
pop
outsl
das
dec
fwait
cmc
inc
ret
insl
and
mov
inc
js
mov
push
mov
xchg
lock
and
out
xchg
inc
cmp
inc
dec
insl
push
mov
das
sub
aam
sahf
nop
inc
push
xchg
mov
rcrb
pushf
ret
and
dec
in
mov
sub
repz
in
push
add
sbb
ljmp
jp
std
mov
popa
cmpsb
repz
not
ffree
mov
mov
mov
inc
mov
cwtl
ret
cmpsl
repz
mov
insl
aas
pop
mov
loop
cmp
stos
dec
push
xor
js
ss
jnp
fildll
addl
adc
leave
jno
or
and
mov
in
lcall
jnp
lahf
jb
sub
push
jo
dec
mov
inc
outsb
fcmovb
icebp
add
adc
adc
mov
push
enter
pop
dec
mov
inc
imul
push
fs
frstor
int
setnp
repnz
cmp
pop
jp
dec
push
inc
push
shrb
push
cmpsl
das
xor
mov
mov
movsb
inc
sub
mov
cmp
out
sub
jb
mov
data16
call
cmpl
repz
cmpl
inc
imul
inc
ja
sub
mov
pop
addr16
mov
or
mov
leave
xor
mov
dec
xchg
lock
aaa
and
xchg
divl
push
push
dec
mov
inc
fwait
xchg
dec
std
sbb
adc
outsb
lret
in
adc
sbb
push
mov
jmp
imul
dec
sahf
lea
add
das
jl
cmp
jb
es
lret
sub
aaa
das
push
mov
sub
sub
dec
out
and
fistpl
cld
shll
mov
lods
movsb
rclb
dec
cmpsb
inc
pusha
push
cmp
add
mov
mov
decl
mov
sbb
dec
repnz
sbb
cwtl
scas
xor
ds
idiv
fcomp
jle
cld
sar
int3
pop
xlat
xchg
jbe
adc
pop
jo
cmp
mov
aad
imul
push
mov
jno
call
dec
lret
jo
rolb
mov
fisttpl
in
sbb
scas
xor
mov
or
dec
sub
or
pop
or
daa
rcrl
es
pusha
sbbb
dec
xchg
je
inc
mov
xor
dec
xchg
dec
lcall
dec
lock
popa
sub
or
sbb
sbb
add
shl
push
insl
push
sahf
adc
pop
mov
dec
filds
mov
sub
popf
mov
cmp
loope
mov
fisubrs
mov
xor
add
int3
push
and
adc
into
aas
dec
ret
push
mov
dec
jne
jo
outsl
push
pop
dec
stc
test
movsb
mov
pop
clc
dec
mov
gs
cmp
mov
add
dec
sub
and
jecxz
stc
test
pop
cmp
test
inc
adc
and
xchg
pop
movsl
insb
imul
sub
notl
outsb
fstl
jle
insb
scas
xlat
xor
add
stc
sqrtps
gs
cltd
nop
out
mov
and
in
in
push
cwtl
add
in
sub
ret
pop
sbb
sbb
aas
adc
cmp
sub
enter
dec
push
mov
cmp
mov
pop
mov
pop
mov
fsubs
call
mov
test
xchg
fs
jmp
dec
out
inc
movl
in
cmpsl
ret
je
pop
sub
jl
rcll
sbb
cmp
dec
xlat
out
jns
add
xchg
inc
or
xchg
dec
or
sub
pop
dec
or
push
and
jnp
lret
jne
cwtl
cs
shrl
mov
insl
adc
nop
in
push
jb
lods
addb
mov
sub
insl
dec
mov
mov
call
dec
or
testb
sub
sub
fnstcw
subl
dec
and
ret
sub
jb
gs
pushf
cltd
jecxz
int3
stos
sub
leave
sbb
inc
enter
out
push
jnp
mov
js
jg
popf
dec
dec
and
iret
outsb
push
mov
inc
xor
shld
iret
pop
xchg
fwait
roll
lret
pop
mov
jmp
bound
out
shll
mov
push
cmp
outsl
jbe
or
imul
jmp
jo
mov
lods
lea
mov
shrb
sbb
add
sbb
mov
xor
call
fisttpl
jmp
and
pop
andl
ds
gs
outsl
outsb
nop
out
sbb
xor
sbb
add
notb
fstpl
mov
sbb
xchg
xchg
or
repz
jge
in
fwait
cwtl
iret
repz
mov
dec
adc
dec
mov
add
mov
insl
cli
mov
cmp
lods
inc
adc
mov
pop
mov
in
xor
inc
inc
mov
roll
fsubrp
add
sbb
jmp
lds
pop
add
test
and
mov
xchg
std
shrb
xchg
mov
push
fldl2e
inc
push
dec
in
ud2
shl
xchg
jb
loopne
xor
inc
popa
jne
out
sbb
push
lds
jne
dec
add
in
mov
test
cmp
addb
or
cmp
add
int3
adc
ficoml
aad
xchg
int3
dec
repnz
pop
sbb
push
and
push
sub
and
jb
cmp
push
insb
fs
mov
inc
dec
dec
add
div
inc
out
std
daa
hlt
xchg
daa
push
popa
pop
pop
test
pop
les
imul
cmp
orb
mov
jmp
adc
xorl
jmp
jle
insl
test
push
adc
in
sbb
in
fistps
mov
roll
repz
adc
jno
push
cld
in
pop
jae
xor
or
sahf
mov
fdivl
push
fs
cmpsb
test
cmp
into
mov
jecxz
psubd
lods
pop
push
cli
lcall
inc
movsl
adc
mov
xor
adc
sub
sub
pusha
lods
pop
lcall
xchg
pop
pop
add
cmp
or
in
xchg
and
or
fs
mov
lret
ficoms
cli
pop
cmpsl
sub
lea
push
mov
xor
sarl
mov
and
leave
js
ja
sbb
and
pop
rcrb
es
pop
nop
loop
fcmovnbe
mov
rolb
pop
lock
and
jo
shlb
mov
xchg
rcrl
loopne
push
rcrb
das
fidivs
cld
mov
push
add
or
iret
mov
stos
ret
push
push
xor
and
pop
mov
mov
clc
or
ret
ficomps
cvttps2pi
shrl
lcall
mov
test
sbbb
jp
test
fs
hlt
sub
test
ret
imul
aam
incb
add
pop
and
mov
into
mov
pop
notb
inc
outsl
push
clc
dec
mov
das
mov
jb
movsb
outsb
push
sub
or
xchg
add
xor
clc
js
loope
mov
push
jecxz
enter
adc
outsl
lahf
adc
sbb
repnz
test
lods
pusha
das
and
inc
adc
popf
je
idivb
fmull
cmc
aad
xor
inc
mov
dec
incl
mov
or
xor
add
nop
pop
mov
out
cmc
dec
icebp
push
xorb
mov
xor
jae
jo
lods
mov
movsl
mov
and
xor
jae
inc
and
sbb
sbb
les
aas
fs
push
xor
in
inc
data16
pop
inc
jns
push
xor
dec
add
loope
iret
les
jo
mov
das
xor
sbb
and
sub
sbb
sub
movsl
loope
push
movl
iret
jbe
jns
xor
and
push
outsb
jp
cmpb
mov
jmp
cmpsb
movsb
lock
dec
aam
mov
jne
ja
popf
icebp
std
inc
and
inc
fistl
in
cs
aam
call
xlat
es
lock
push
pop
mov
mov
xchg
and
mov
sub
ss
mov
bound
jae
xchg
lret
into
imul
shlb
lds
fsubrs
insb
sbb
cli
sbb
nop
popa
ret
mov
ret
lret
pop
fs
mov
in
addr16
andl
push
aas
sub
orb
and
sub
mov
inc
loopne
xor
pop
cld
in
xchg
mov
scas
ljmp
in
and
sbb
inc
js
gs
mov
push
stos
lret
aas
sti
cmp
in
rolb
enter
xchg
adc
int3
mov
mov
stc
pop
cmp
jb
stos
ficomps
mov
mov
sbb
adcl
adc
cmc
add
jno
mov
test
leave
pop
mov
pusha
push
mov
mov
adc
add
xchg
mov
ficoml
je
jle
mov
out
js
mov
mov
add
call
mov
xchg
push
ror
and
icebp
incl
jb
addr16
bound
fisttpl
addr16
jnp
call
push
rcrl
jno
sub
adc
fcomps
repnz
or
or
fldenv
repz
sbb
incl
jbe
xor
scas
pop
movsb
ja
pusha
sahf
test
ja
movsb
shll
sbb
and
in
out
fimull
lret
xchg
fwait
jp
in
int
jne
mov
ljmp
shr
xchg
sbb
data16
push
mov
lock
mov
test
adc
push
mov
ja
pop
xor
xor
dec
mov
pop
and
mov
xchg
lds
test
xorb
pop
fidivs
fsubl
inc
xchg
sub
dec
and
loope
addr16
insb
out
adc
orl
pop
mov
test
push
fdivrl
pop
xor
mov
lods
cld
lods
dec
push
sahf
ljmp
push
loope
insb
and
ret
inc
out
mov
scas
or
mov
jmp
int
mov
or
mov
test
out
lock
push
add
mov
sub
push
lock
mov
jnp
ret
mov
jecxz
jp
dec
cmpsl
in
negb
cltd
sub
repnz
lar
sbbb
add
or
fldl
inc
sbb
movsb
jno
xor
sahf
xchg
and
xor
loopne
pop
loopne
aas
loopne
stos
jb
adc
loope
orb
sbb
add
lret
xchg
stos
sub
jle
aam
bsf
movsb
std
push
xor
pop
mov
pop
rcr
hlt
xlat
xor
xor
adc
je
sbb
add
imul
lock
add
or
outsl
call
mov
loop
outsb
in
jmp
xchg
add
repz
inc
xchg
xor
mov
out
push
push
adc
xchg
inc
lahf
ud0
add
lcallw
push
mov
rolb
push
mov
cmp
lret
out
mov
push
xchg
inc
mov
loopne
rcrl
sahf
shrb
test
out
add
sbb
adcb
mov
pop
lahf
stos
std
push
cmpsb
pop
xchg
jp
mov
aad
scas
data16
out
stos
mov
and
xchg
in
int
xor
mov
push
dec
in
cmp
sahf
lods
or
jnp
jae
fucom
dec
adc
test
sbb
mov
movsl
xchg
jp
in
test
adc
insb
bound
sbbl
or
jecxz
sbb
xor
ror
xchg
jb
push
stc
rolb
movsl
in
inc
mov
fucomp
loop
ds
jnp
push
jae
stc
jmp
loopne
cmc
xchg
cltd
aad
shll
std
imul
lahf
mov
jb
imul
jge
push
divl
bound
cmpsl
xor
and
sub
mov
or
mov
xchg
cmp
ja
fdivrs
and
popf
dec
ljmp
stos
int3
mov
mov
out
repz
mov
js
test
xchg
mov
xchg
pop
mov
adc
cmpsb
popf
cmpsb
jp
cmp
mov
add
je
mov
test
push
lea
dec
in
push
les
addr16
xchg
mov
dec
pop
push
scas
aam
imul
sbb
mov
cmpsb
and
push
cmpsl
sahf
icebp
xor
inc
in
imul
xor
pop
mov
mov
aad
cmp
setb
dec
sub
cmp
mov
lcall
es
test
mov
and
inc
pushf
lock
xor
jae
inc
lock
arpl
addr16
xchg
js
cltd
fdivr
in
jg
inc
testl
popa
xor
pop
aas
dec
mov
loopne
dec
cmpb
jns
int
int
shl
xor
scas
imul
fs
jge
inc
inc
pop
push
fldt
adc
add
and
ljmp
imul
outsl
cmp
inc
push
xor
ret
ss
sti
cmc
js
adc
pop
iret
int
ret
mov
icebp
ljmp
mov
mov
jg
and
sti
aaa
fiadds
sbb
pop
pop
xlat
jb
sub
mov
jecxz
sbb
mov
ret
je
ljmp
mov
mov
fs
mov
xchg
xor
add
pushf
inc
sub
pop
adc
xchg
xor
test
jb
adc
mov
jnp
cmp
xor
popf
cmpsb
and
adc
sub
pushf
push
lcall
inc
rcrb
mov
mov
ds
js
mov
mov
lea
movsb
push
daa
mulb
call
pushf
pop
push
xor
jbe
mov
movsl
sbb
lods
mov
dec
sub
iret
pop
fisubrl
sbb
lcall
and
dec
rcl
sbb
mov
int
pushf
xchg
dec
pop
cmp
movsb
pushf
xor
inc
adc
rorl
jle
xchg
jns
jg
incb
test
andb
andb
pop
daa
fisttpll
dec
icebp
and
popa
sub
test
icebp
mov
or
aad
and
push
pushf
pushf
and
xor
push
add
mov
mov
push
sub
mov
decb
sbb
ss
dec
jl
sub
sbb
enter
add
cmp
pusha
xchg
mov
rclb
outsb
shll
and
fwait
shl
lahf
xchg
icebp
leave
push
gs
mov
rcl
sti
push
rcrl
cli
test
rorb
leave
cli
or
outsl
pop
adc
cmp
xchg
lea
ss
dec
push
mov
cmc
stos
adc
inc
adc
push
sarb
push
js
mov
mov
ja
sbb
out
jmp
adc
es
js
mov
mov
jb
or
add
pop
aas
push
cmp
inc
mov
adc
xor
push
stos
and
das
xchg
add
sub
jbe
test
sub
dec
jge
hlt
push
adc
mov
stc
into
lret
adc
mov
jno
fwait
negb
pop
xchg
nop
stos
out
inc
jns
pop
rcll
mov
cmp
xchg
fdivrs
sti
pushl
or
add
mov
popf
cmp
cmpsl
mov
sbb
out
dec
fidivs
adc
xchg
pop
movb
neg
shrb
cmp
mov
dec
mov
roll
sub
aaa
in
gs
xor
mov
sub
mov
int
scas
jne
inc
jecxz
sub
bound
sti
adc
loop
fldcw
pusha
push
sub
xor
enter
push
push
add
sahf
jl
add
sbb
hlt
imul
lods
loopne
pop
sbb
xchg
xchg
mov
inc
int
test
add
or
test
rorb
and
std
ret
ljmp
dec
cmpsl
paddq
mov
call
call
inc
cmp
jbe
lcall
mov
mov
mov
mov
add
pop
cmp
add
or
aad
mov
xchg
jp
pop
in
and
std
inc
inc
call
push
aas
outsb
mov
out
in
inc
and
test
fadds
adc
out
aas
add
fldenv
imul
inc
outsl
in
dec
and
cli
mov
xchg
add
lock
sub
or
loope
dec
sub
in
jae
sub
ficoml
mov
cmp
icebp
sub
iret
sub
cwtl
pop
cs
scas
sub
mov
clc
or
stos
std
mov
mov
pop
dec
cmp
cld
cli
leave
pop
inc
jo
or
dec
repnz
dec
imul
stos
jp
mov
xorb
imulb
pop
sub
pusha
xchg
pop
push
or
dec
xor
iret
sbb
insb
loope
iret
aad
ljmp
cmp
pop
dec
lods
dec
xor
call
and
fmuls
jmp
test
fwait
adc
mov
scas
pop
push
fdivs
pop
jbe
dec
cwtl
sub
mov
pop
lock
mov
and
or
pushf
sub
stc
mov
icebp
nop
icebp
stos
lods
jae
mov
dec
clc
mov
rorb
xchg
cmp
pushw
fwait
sbb
add
test
rcll
mov
jno
outsb
cmp
adc
jge
push
int
outsb
mov
xor
cmp
pop
lods
arpl
or
xchg
cmc
jns
leave
lret
pop
jg
andb
inc
repz
aas
div
dec
mov
sbb
shrl
and
mov
int
scas
sti
jnp
sub
in
fcoms
mov
cmp
sub
mov
aad
inc
je
xor
gs
push
fsubs
out
inc
add
call
nop
enter
mov
test
xor
mov
sahf
xchg
es
cmpb
fmulp
cli
add
mov
daa
adc
repnz
aam
or
shl
jb
dec
xchg
jp
cmc
out
js
das
inc
adc
xchg
jg
fwait
push
mov
cmpsl
mov
int3
mov
cwtl
cmp
xchg
sbb
nop
outsb
addr16
in
shll
inc
bnd
inc
stc
jg
mov
xchg
mov
decl
mov
data16
and
out
hlt
push
sbb
xchg
pop
and
push
mov
or
sub
out
mov
out
sbb
iret
jnp
cmp
cmpsb
nop
xchg
imul
decl
popa
stos
scas
xor
jbe
out
sahf
adc
and
cltd
inc
out
andl
and
incb
inc
lods
addr16
cs
or
sbb
jnp
lock
rorl
aaa
mov
repnz
adc
sarb
cltd
inc
mov
cltd
mov
jnp
bound
push
pop
jecxz
inc
outsl
ds
cmp
and
dec
mov
mov
mov
leave
cltd
subl
sar
push
hlt
lock
scas
sbb
int3
stc
int
push
pop
aas
outsl
imul
outsl
nop
mov
dec
add
sbb
mov
in
icebp
sbb
sbb
addr16
add
out
add
mov
mov
or
push
mov
mov
movl
pop
mov
pop
add
idivl
sbb
shlb
lret
lea
jecxz
sbb
jns
inc
mov
jo
fdivr
xor
adc
inc
mov
sbb
jb
cs
mov
stc
aam
pop
sub
push
lock
pop
xor
ja
jns
movsb
push
lret
mov
dec
cmp
push
cld
dec
sbbb
fcomps
inc
dec
xor
sti
adc
aad
push
and
in
lock
pop
rorb
gs
mov
movsb
paddusw
lock
xor
dec
add
clc
in
fdivrs
jns
push
mov
xchg
push
pop
mov
test
jo
and
pop
jl
sbb
mov
jp
sahf
jae
gs
ret
pop
mov
jmp
add
xor
dec
or
mov
push
repnz
clc
fwait
mov
jae
jbe
adc
sar
mov
imul
xlat
mov
pop
xor
push
push
ljmp
ret
das
lret
or
test
mov
sub
or
ret
mov
movsb
pop
mov
cs
sub
xchg
jecxz
mov
dec
sub
jbe
movsb
xchg
lret
cmp
pop
add
jno
imul
pop
jg
xor
mov
flds
dec
sub
add
popf
cmpsl
subb
out
jo
stos
mov
in
mov
stos
cld
ror
mov
int
xor
push
test
jb
or
mov
xchg
xchg
and
testb
inc
js
popf
sbb
subb
and
ljmp
cmpsl
out
cwtl
out
mov
scas
shrb
movsb
in
sbb
and
cmp
dec
jno
adc
dec
pushf
sahf
pusha
repz
pop
incb
ss
mov
je
mov
sbb
aaa
mov
movsl
add
sbb
sbb
inc
ds
int3
mov
pushf
das
mov
xchg
addl
cmc
movsl
add
fnstsw
or
aad
push
test
in
bound
mov
cmp
cmpsb
loope
mov
inc
int3
imul
loop
iret
pusha
pminub
push
cmpsb
add
cmp
je
mov
lcall
fnstsw
popa
cmpsb
lock
pop
and
mov
mov
loopne
adc
mov
add
fwait
jecxz
movsb
jns
shl
out
sub
shll
xor
xchg
stc
pop
in
pop
xchg
push
jle
mov
mov
push
push
jle
subl
insl
ss
xchg
jecxz
repz
xor
push
push
and
dec
cwtl
inc
sbb
inc
call
fisttpl
cmp
mov
mov
cltd
fisttpl
pop
aad
out
pusha
push
add
inc
popf
subl
enter
push
out
push
imul
pusha
adc
scas
pop
insb
mov
mov
sub
jge
test
add
cmp
pop
fsubrl
test
cmp
pop
fimuls
enter
add
sbb
loopne
push
push
pop
mov
sahf
mov
xor
inc
push
lds
pop
arpl
std
rcrl
fistpll
adc
adc
addb
imul
jnp
add
in
jp
into
and
jne
sbb
pushf
in
sbb
xchg
mov
or
jne
push
mov
movl
sub
jle
mov
sbb
in
in
movsl
push
jmp
cvtps2pi
in
add
out
adc
mov
push
stos
loopne
add
int
mov
sub
and
xchg
jns
cs
stos
and
inc
fsubrs
sbb
xor
popa
add
mov
mov
adc
rorl
mov
cmp
ret
sub
ret
pop
sbbl
int3
dec
mov
cmp
add
leave
adc
and
lahf
scas
jmp
jno
mov
loopne
cmp
pop
test
mov
pop
call
push
mov
shlb
add
cwtl
dec
shll
jbe
rcrl
adc
or
sbb
xor
mov
add
jnp
add
pusha
xor
push
jbe
push
sub
nop
jmp
jg
sub
in
sbb
out
mov
mov
sbbb
loopne
xchg
dec
or
aaa
scas
lcall
cmp
mov
mov
in
orb
jmp
sub
mov
xchg
out
inc
dec
out
call
cmp
inc
idivl
and
out
lret
xor
negb
push
sub
aad
lds
lret
pop
mov
adc
xchg
loop
jnp
sahf
mov
xchg
mov
divl
add
shlb
xor
inc
sbb
aad
pop
jl
mov
jmp
xor
mov
movsb
dec
fnstcw
push
popa
lock
leave
ds
movsl
pop
cmpsl
jb
pop
shlb
sti
out
mov
mov
fidivrs
jne
pop
mov
xor
jne
inc
xchg
out
dec
mov
jo
push
out
and
sub
fwait
loope
lret
mov
pop
xchg
movsl
mov
pop
cmp
jmp
xchg
sub
clc
inc
or
jl
cmc
cmp
push
test
cmpsl
mov
test
nop
imul
cmpsb
popw
lods
jnp
mov
out
loopne
jmp
sbb
fistpll
dec
nop
in
jecxz
lret
inc
lock
adc
push
loopne
aad
arpl
or
hlt
mov
and
stos
pop
fucom
mov
ret
cmp
pop
iret
shll
xor
push
jbe
push
test
dec
mov
scas
call
test
cmp
pop
inc
pop
sbb
dec
out
dec
mov
sub
cmp
test
dec
xor
ja
inc
sub
dec
pop
dec
mov
push
mov
popf
icebp
adc
mov
xor
ficoml
sahf
sbb
xchg
test
pop
cmp
or
pop
orb
push
push
jnp
xor
push
add
fstps
inc
mov
jae
dec
sub
arpl
lahf
scas
jnp
js
out
push
jmp
stos
js
dec
jo
leave
or
or
jmp
ficoml
xchg
sbb
fistpll
lods
insl
and
xchg
pop
bound
xor
ljmp
lahf
inc
pusha
shlb
popf
shll
popf
mov
mov
jbe
push
sub
ficomps
xor
or
cmp
adc
sti
test
outsl
mov
cli
repz
xchg
push
add
cmp
or
paddusw
pusha
int3
aaa
cmp
es
ljmp
fildl
sbb
inc
mov
pop
dec
decl
jl
cli
inc
movsb
shll
popa
jecxz
xor
ficompl
xor
jb
and
add
inc
dec
push
xchg
or
pusha
fs
and
pop
test
in
jo
fbstp
mov
push
pop
xor
or
inc
mov
cmp
inc
mov
and
pushf
push
jle
push
push
adc
jl
divl
jmp
jl
sbb
in
cmp
cmc
sahf
push
jo
test
icebp
and
pop
imul
add
mov
sbb
mov
out
daa
and
push
mov
ret
and
xchg
lock
int
sarl
jle
jno
shll
sub
jno
jo
xchg
and
pop
sbb
push
and
out
icebp
mov
imul
sbb
cmp
mov
xchg
cwtl
ljmp
mov
addb
lret
jmp
jmp
push
sahf
orl
movsb
mov
outsb
cmp
cmp
sbb
sub
sub
xor
jne
lods
jl
or
mov
add
xor
mov
jmp
jmp
aas
popf
outsb
sbbb
xchg
xchg
pushf
adc
ds
cmpsl
sbb
push
adc
sbb
aas
and
test
push
dec
scas
in
or
mov
mov
in
xor
mov
inc
cmp
add
insl
pop
or
xor
mov
lods
xchg
pop
jb
xchg
outsl
cwtl
inc
enter
testb
or
bound
cmp
test
lods
repz
jne
mov
addl
test
mov
jo
cld
xlat
inc
les
repnz
subb
into
bound
fldl
push
outsl
inc
mov
mov
or
pop
mov
mov
loop
xchg
mov
popa
xchg
and
bnd
xchg
andl
repz
jmp
cvtdq2ps
nop
cwtl
lods
aas
cs
shrb
pop
pop
or
xchg
rorl
out
in
icebp
pop
cltd
adc
faddp
dec
lds
inc
pop
sub
and
add
and
or
mov
or
jnp
mov
scas
xchg
mov
push
movb
test
jmp
clc
and
mov
test
ljmp
iret
mov
aaa
rclb
into
push
test
popa
repnz
xchg
hlt
test
and
in
in
or
xchg
inc
mov
mov
pop
ss
pop
inc
add
clc
fs
push
xchg
mov
inc
fnstsw
jg
sbb
mov
jl
mov
test
movsb
or
push
in
jne
mov
and
jb
add
mov
aad
cmc
hlt
pusha
inc
add
movsb
push
movsb
cmp
repz
jo
aaa
xor
and
mov
jbe
mov
dec
add
decb
test
push
xchg
roll
jle
lcall
in
in
into
dec
popa
xchg
push
mov
ret
cmpsb
mov
test
ret
loop
inc
add
out
cmc
mov
mov
inc
pop
sub
je
cmpsl
cmp
call
scas
pop
or
shll
dec
push
arpl
cmpsl
pop
sbb
and
and
jge
setp
xchg
mov
idivl
popf
mov
out
ret
fbld
sbb
shl
andb
clc
fstl
xchg
shl
ds
lret
cmp
or
adc
push
lret
push
lret
xor
mov
mov
std
daa
jg
ja
mov
insb
add
aas
sbb
rorb
and
pop
in
arpl
xchg
add
add
outsl
mov
add
jns
jmp
cli
mov
repnz
mov
mov
inc
fwait
clc
xor
das
lcall
or
nop
shlb
sbb
lock
daa
mov
xchg
pop
test
ret
and
aad
cmp
enter
adc
xor
cmpsl
and
test
cltd
or
adc
cmpsb
outsl
rcr
dec
mov
jmp
add
push
xor
cmp
and
and
cmp
ret
mov
stos
xorl
and
jnp
mov
adc
test
lcall
mov
fs
mov
push
add
lea
pushf
fmul
incl
in
rolb
add
daa
leave
or
aam
jmp
or
add
sti
shr
mov
dec
push
mov
dec
adc
loopne
ds
mov
push
popa
xor
fildl
lcall
push
pop
mov
adc
dec
adc
and
notl
sub
ja
sub
push
cli
dec
lcall
rep
sub
int
or
mov
lock
sahf
out
test
xchg
shl
push
add
inc
lret
xor
fldt
jp
mov
cmp
mov
adc
into
inc
sbb
xchg
xor
cmc
movsl
pop
add
shll
sbbl
and
cmp
sbb
daa
mov
inc
lret
in
fwait
push
or
movsl
dec
out
lret
push
jp
shlb
xchg
loop
flds
adc
mov
add
arpl
addr16
mov
sahf
xor
dec
popa
movsl
test
int3
dec
xlat
xor
into
adc
pop
or
cpuid
pop
push
push
pop
aaa
jmp
push
mov
mov
add
daa
sub
js
lods
subl
mov
jg
cwtl
or
add
dec
xchg
push
sub
jne
out
cs
xchg
push
pusha
cmp
mov
and
and
nop
loopne
push
and
push
push
xor
pop
rclb
mov
in
mov
fsts
test
inc
jle
mov
inc
mov
jp
jl
arpl
addr16
jl
mov
sbb
mov
rcrb
jg
mov
mov
pusha
stc
mov
mov
mov
lret
xor
mov
pop
jl
dec
leave
add
ss
push
scas
xor
cmpsb
or
inc
or
cmp
dec
fdivs
rcrl
leave
push
cmp
sbb
outsb
xchg
lret
add
mov
cmp
movsb
dec
or
inc
sub
imul
xchg
pop
push
dec
hlt
xchg
jno
daa
fs
jl
xor
es
push
sub
popa
clc
popa
rcr
mov
out
jl
sti
out
inc
jae
lret
push
adcl
xor
pop
sbbl
cli
fs
loopne
shll
repnz
mov
test
mov
and
cwtl
cmpsb
mov
jp
fsubrs
fistpl
mov
inc
popa
insl
xchg
sub
jl
dec
or
orb
fildll
pop
loopne
pop
imul
or
push
sbb
and
mov
popf
mov
cmc
mov
int3
sub
in
idivb
inc
sbb
mulb
lahf
jp
push
lods
push
jge
negb
jle
shll
xchg
rorb
hlt
std
jae
cmp
adc
dec
cmp
andb
mov
ss
and
scas
orb
mov
jp
push
inc
test
adc
in
add
mov
mull
push
jp
sti
out
add
sbb
push
in
add
jmp
stos
push
and
lods
inc
sbb
stos
jmp
loop
jns
in
xor
lea
fnstenv
rorb
aaa
push
cwtl
push
int
mov
jns
lret
leave
shlb
jl
inc
add
or
cmp
not
test
xlat
push
xchg
out
cmp
adc
loopne
mov
push
mov
sbb
fsubrl
xchg
adc
pop
fistpl
cwtl
test
mov
outsl
mov
cmpsl
data16
jno
std
push
xor
xchg
pop
xchg
and
fisubrs
and
xor
cld
call
fisttps
xchg
loope
clc
mov
pop
iret
pop
repnz
scas
and
mov
mov
add
mov
fnstcw
mov
pop
mov
xchg
mov
mov
sub
test
inc
cmp
xlat
fcmovbe
popa
cltd
call
adc
lea
push
push
mov
test
int
xlat
xor
inc
fabs
pop
ljmp
sub
call
jne
and
lock
add
inc
adc
xchg
loopne
mov
pop
nop
push
fistpll
and
jns
or
shrl
mov
mov
jo
push
cmp
clc
jae
je
and
and
ret
push
pop
dec
dec
sub
dec
in
fisttpll
test
outsb
int3
pminsw
pop
sbb
in
mov
push
xchg
jle
outsl
pop
test
inc
enter
xchg
mov
push
xchg
lods
mov
repnz
in
dec
or
insl
jge
test
or
test
pop
dec
dec
shrb
and
mov
pop
imul
dec
mov
test
fsubrs
dec
test
cs
mov
gs
xchg
xor
xchg
push
popf
int3
in
push
imul
incl
add
into
lds
jae
in
xor
pusha
rcrl
xchg
sbb
fsts
pusha
cmp
out
test
mov
test
mov
je
ficoms
ret
aad
sbb
insb
scas
mov
sbb
add
sbb
lods
inc
cmp
bound
jge
inc
pop
xlat
data16
add
pop
sub
lock
inc
stos
aad
sbb
rorl
add
push
or
aam
xor
pop
xor
pop
imul
cmpsb
xchg
xchg
mov
push
mov
cs
and
and
or
sub
scas
fistpl
jne
inc
cmc
adc
push
aas
test
pop
mov
push
xorl
loop
add
outsl
popf
test
jns
mov
aad
or
insb
scas
cmp
jbe
xlat
or
mov
lcall
sbb
ret
inc
push
lret
mov
inc
inc
push
jno
lods
cmpsb
cmpsb
addr16
movl
jge
es
ss
push
inc
dec
fisubs
jg
outsl
cmp
int
jae
pushf
mov
jo
jecxz
in
sub
cmpsl
push
cmpsb
inc
pop
push
inc
sub
imul
add
arpl
push
and
add
popf
jg
or
call
jo
mov
lods
arpl
cltd
push
testl
xchg
xchg
fiaddl
icebp
adc
xor
leave
lea
daa
sub
jb
adc
adc
add
pop
cmp
fwait
mov
jnp
addr16
and
outsb
cvtdq2ps
testb
out
ds
popf
push
xchg
vpmulhw
movsl
or
stc
and
popf
push
pop
loope
xchg
mov
outsb
ret
cmp
daa
test
and
jo
arpl
adc
aam
ja
cmc
jns
pusha
cmpsl
xchg
test
mov
pop
mov
inc
jge
cmp
dec
sarl
lock
add
and
jae
pop
jp
add
sbb
repnz
rclb
pop
pop
and
mov
push
cmpsl
dec
sahf
and
aas
cmp
sub
leave
hlt
mov
int3
push
mov
pop
scas
mov
lods
shl
rcll
mov
fsub
and
fistps
adc
fldt
dec
lahf
lret
lret
xor
mov
subl
in
mov
jb
sub
ja
xchg
out
mov
pop
push
sbbb
fnstcw
adcb
push
and
jp
sub
xchg
loopne
sub
push
push
adc
mov
daa
add
xchg
add
ret
shll
push
dec
sub
outsb
dec
mov
loop
xchg
push
mov
pushf
out
mov
xor
sbbl
xchg
push
rcl
imul
out
ret
shll
xchg
adc
dec
sti
push
les
sub
dec
or
imul
push
cli
lods
push
mov
cmp
add
xchg
adc
loope
iret
cmp
ret
leave
adc
xor
jecxz
lods
movb
jg
les
fwait
ret
jne
cmp
shll
stos
add
fimuls
push
aaa
push
test
lret
push
out
daa
aaa
imul
lret
lahf
mov
xor
fdivs
stos
das
jae
daa
adc
inc
hlt
push
jp
vphaddubw
add
mov
dec
pop
dec
sbb
xor
outsb
cld
inc
cmp
arpl
sti
mov
sbb
cltd
stc
pop
movsl
push
inc
mov
inc
loop
cmp
rclb
xchg
push
out
adc
mov
mov
push
jno
mov
push
enter
push
mov
leave
out
pavgw
sub
mov
inc
mov
gs
pop
iret
sub
fsubrl
xchg
mov
sbb
sub
xchg
inc
icebp
adc
jmp
int
xor
test
inc
cltd
mov
popf
dec
test
insb
stc
push
jo
mov
xchg
loopne
test
sbb
xorb
dec
int
loopne
sti
mov
imul
loopne
adc
jo
lds
and
out
cld
scas
fwait
ds
and
mov
push
inc
xlat
jo
and
jae
popf
enter
push
iret
fsub
jg
loopne
pushf
xor
inc
sub
sub
arpl
test
xchg
pushf
mov
mov
clc
push
cmpsl
mov
out
movsb
mov
rorl
push
xchg
xor
test
inc
or
cmpsb
sub
dec
mov
jmp
lcall
dec
cmp
lods
xchg
addl
add
aaa
sti
out
mov
xchg
sbb
inc
jns
inc
mov
cltd
or
add
inc
pop
test
fldl
out
and
sbb
out
outsl
rolb
jp
in
adc
cmp
pop
pop
cs
mov
mov
inc
or
rclb
mov
and
rolb
into
dec
xor
dec
jg
insb
jp
adc
inc
or
push
mov
mov
dec
cli
fs
inc
popf
movsb
or
cmp
xor
rcrl
je
vpsrad
outsl
push
mov
roll
jb
mov
or
or
push
cmp
mov
ljmp
kmovb
mov
xchg
push
in
sbb
mov
call
push
and
cli
jne
lret
out
sbb
cltd
nop
xor
int3
and
add
add
cmp
orps
imul
push
pop
and
movb
sbb
es
or
jp
insl
and
adc
adc
xchg
push
mov
cmp
xor
lods
popa
cld
enter
icebp
cltd
sbb
or
ljmp
movsb
inc
out
aad
push
xor
fists
xor
stos
imul
lods
push
imul
movaps
inc
mov
adc
jle
fcmovbe
fidivrl
jmp
je
pusha
mov
inc
dec
lea
hlt
je
mov
cmp
inc
int
jno
pop
nop
sub
mov
fdivrp
sub
in
insb
push
cwtl
push
pcmpgtd
mov
ss
shl
mov
push
pop
sbb
sbb
pop
dec
xor
add
jl
mov
xchg
mov
pop
test
int3
cwtl
arpl
mov
lock
mov
add
ud0
adc
xor
jmp
jg
mov
sub
add
jb
pop
mov
xor
scas
mov
mov
fidivs
aas
ss
add
inc
repz
sbb
dec
add
dec
push
xorb
icebp
les
adc
inc
xlat
je
mov
aaa
mov
jle
js
test
in
inc
nop
jb
mov
std
pop
es
mov
add
hlt
popf
repnz
loope
ss
push
sub
cmpsl
xlat
je
adc
lcall
jmp
popa
pushf
mov
jmp
pop
jle
stos
in
cmpb
mov
mov
repz
addl
pop
jo
insb
popa
dec
or
or
mov
jle
xchg
sbbb
test
pop
stos
pop
cmpsl
mov
sub
leave
adcb
xchg
movl
dec
rorl
sub
scas
jmp
mov
push
ja
mov
dec
rclb
inc
gs
dec
push
xor
cmpsl
imul
adc
dec
jae
pop
or
mov
fsubs
mov
sbb
push
sub
pop
cmpsb
cwtl
mov
addr16
push
xor
movsb
xor
xchg
out
test
icebp
xchg
xor
andl
sub
push
lock
imul
sub
das
iret
scas
pushf
and
into
data16
incl
rorl
cli
test
push
cli
mov
mov
inc
jb
jmp
push
les
cmpb
mov
push
cltd
inc
pop
shrl
or
nop
mov
adc
and
insl
stos
inc
pop
clc
and
lcall
lods
lret
cltd
dec
repz
push
push
adc
ss
hlt
pop
dec
mov
jmp
sub
dec
jne
sub
dec
bound
sbb
movsl
mov
inc
adc
and
xor
mov
shrb
pop
out
insb
testb
mov
push
aam
lcall
sub
ja
aas
pusha
inc
notb
std
dec
jecxz
ljmp
sbb
inc
pushf
or
inc
out
pop
sbb
dec
ret
into
lods
sub
mov
xorb
sub
fmul
mov
pop
or
jmp
sbb
sub
jg
jecxz
mov
jbe
push
shl
lret
or
dec
scas
repz
movsb
push
pop
mov
and
xchg
movsl
inc
dec
or
sub
dec
xchg
out
ret
outsl
fildl
adc
shll
notl
lret
cs
jge
scas
or
jmp
in
xchg
mov
mov
fldt
mov
push
lods
xor
loope
cwtl
lret
sub
push
mov
mov
jmp
xchg
mov
xor
stos
fcoml
xor
repz
inc
xchg
add
ret
mov
cs
mov
sbb
push
fiaddl
enter
test
mov
testl
xlat
in
sti
adcl
popf
mov
xchg
jl
push
jne
sub
ljmp
out
dec
shl
cltd
orb
inc
inc
add
arpl
popf
jge
stos
mov
enter
roll
dec
dec
ds
xchg
or
call
setp
fdivl
mov
sub
lock
pop
lods
pushl
je
repz
jnp
xor
cmp
shld
test
mov
imul
cld
subl
rcr
xchg
xchg
nop
adc
mov
sub
mov
nop
negb
test
mov
dec
clc
mov
fs
cs
push
cmp
fbld
call
push
push
xor
orl
cmp
pop
add
inc
cld
lret
push
push
repnz
loop
and
or
in
not
jne
test
cmpsl
in
xchg
movsb
in
xchg
adc
inc
rcl
dec
in
xor
into
sti
sub
mov
lock
and
pop
xor
pop
cld
add
mov
fnstsw
mov
in
push
or
jb
shrl
aaa
push
leave
bound
in
jmp
sub
enter
xorl
or
pop
fmuls
mov
in
fidivrl
dec
test
mov
mov
test
sub
or
jmp
push
adc
popa
scas
and
or
push
pusha
cmp
inc
or
js
lods
cmp
mov
pop
nop
movsb
pop
lea
mov
mov
pop
aas
cmp
divl
mov
xor
mov
test
dec
sub
cmc
sub
or
mov
cmp
mov
pop
xchg
test
cwtl
mov
ja
imul
cwtl
xor
roll
mov
cmp
cmc
mov
movsl
lock
jecxz
add
cmc
inc
aam
lods
jae
sbb
xor
mov
test
cmp
pop
mov
push
pop
aam
and
adc
jp
lret
outsl
mov
aas
mov
mov
leave
adc
subb
test
pop
lock
adc
sbb
dec
clc
jno
adc
mov
lds
mov
and
pop
add
mov
xchg
call
call
dec
movsb
jg
push
adc
lods
mov
push
sbb
insl
popa
cmp
cmp
decb
xor
add
or
lds
shrb
icebp
xor
cmpsl
xchg
repnz
fisttps
imul
and
out
arpl
mov
sub
mov
in
xor
mov
sti
jnp
lahf
push
sahf
icebp
insl
inc
dec
or
je
repz
adc
mov
add
fadd
addr16
fcomi
cwtl
xchg
mov
ret
pop
mov
add
jmp
mov
xor
loopne
jmp
popa
adc
push
mov
fs
push
add
xor
daa
jmp
in
adc
and
jge
mov
jle
scas
test
arpl
or
in
pop
aas
loop
outsb
in
pop
mov
mov
jp
test
push
mov
test
notl
data16
lods
mov
mov
movsb
mov
or
add
cmp
arpl
sbb
adc
xchg
xchg
mov
cld
or
aaa
imul
push
bound
jnp
mov
adc
inc
push
addr16
jno
icebp
in
pop
jl
xor
aad
adc
inc
xor
out
push
mov
jg
or
cmp
dec
mov
leave
pop
push
daa
insl
out
cs
jae
mov
lods
add
outsb
fs
setbe
sbb
adc
rcrb
shll
or
sti
inc
repnz
dec
cmp
insl
js
sbb
movsb
push
inc
shlb
hlt
jg
imul
xchg
mov
jb
push
inc
out
stc
inc
add
jmp
shlb
and
fxtract
jo
notl
ret
ljmp
dec
test
lock
js
push
adc
inc
or
xchg
fiaddl
push
lcall
aas
jb
dec
std
aad
jb
pop
cmp
inc
ret
outsl
divb
cltd
outsb
dec
inc
sub
loop
pop
jno
cwtl
xchg
lods
lahf
cmc
push
es
decb
xchg
xor
add
sub
pop
adc
jne
push
push
and
and
jmp
cwtl
pop
lods
lea
add
xor
imul
fabs
or
xlat
mov
cs
mov
cmp
adc
mov
mull
sub
insb
xlat
push
mov
jecxz
xchg
popf
dec
in
and
aaa
cmpsb
fs
sub
sbb
dec
ror
shll
scas
lea
adc
adc
mov
mov
lods
test
mov
pusha
test
inc
lea
pop
jge
push
mov
imul
push
jb
sub
dec
push
repz
out
in
or
stos
mov
test
sub
xchg
jp
stos
cmp
mov
mov
push
lcall
xchg
hlt
or
push
pop
mov
stos
sbb
dec
insl
pop
stos
sbb
or
div
leave
fwait
jae
jp
jno
and
mov
testl
cmp
pop
xor
mov
pop
fwait
into
aaa
add
ljmp
out
aad
rolb
dec
mov
pop
flds
xor
and
or
xchg
mov
mov
lret
cld
and
lock
sub
mov
add
mov
xchg
mov
sahf
fcoms
sub
push
pop
and
test
imul
pop
insl
cwtl
ja
or
dec
pop
sbb
or
mov
cmp
movsb
dec
pop
daa
repz
inc
add
and
data16
enter
shrb
ss
ljmp
sbb
adc
inc
push
setnp
fldt
cwtl
jle
popa
fs
mov
pop
stos
std
ss
imulb
mov
push
call
mov
mov
das
mov
jns
fisubrs
enter
lods
mov
mov
addb
addr16
or
in
imull
sbb
mov
mov
pushf
sbb
mov
mov
inc
mov
add
dec
dec
pop
sbb
xchg
sbb
lods
sub
push
repnz
sbb
jl
es
or
cmp
and
or
jns
mov
dec
cmc
jp
loope
popf
outsl
sub
dec
inc
push
mov
insl
jno
ret
cmp
movsl
repz
pop
mov
xchg
adcb
out
rcrb
sub
pop
add
mov
cli
outsb
dec
popa
mov
cmp
xchg
or
pop
data16
ljmp
and
jb
sub
imull
inc
inc
xor
inc
out
pop
bound
cld
lods
inc
or
fidivl
xlat
xor
pop
jb
inc
cltd
popa
pop
mov
lock
das
loopne
stos
push
test
sbb
scas
inc
or
mov
ljmp
and
pop
dec
cld
mov
daa
xor
mov
jecxz
stos
jl
pop
cmp
into
pushf
lds
adc
hlt
daa
cmpsb
xor
jo
mov
cltd
repz
dec
mov
dec
bound
mov
shlb
mov
mov
fstpl
adc
xor
lcall
or
mov
mov
sarb
sbb
push
outsb
push
popf
sub
mov
das
jae
scas
mov
mov
inc
sbb
das
mov
sarl
mov
jo
sub
lahf
xchg
lcall
dec
dec
push
sti
scas
dec
dec
or
pop
sbb
imul
mov
cmp
movsb
sub
xchg
std
gs
cmp
adc
lahf
lds
dec
add
and
repnz
mov
mov
inc
popa
mov
xchg
mov
lret
mov
push
xchg
mov
jnp
aas
inc
add
ffree
clc
or
mov
pop
sub
ret
fdivs
xorl
jbe
push
dec
adc
scas
fwait
jns
test
sbb
nop
test
jno
movsl
sbb
sbb
jb
sahf
cmp
imul
mov
xor
or
xor
cs
cwtl
sub
cmp
stos
stos
sbb
pop
sbb
mov
add
cwtl
out
popa
mov
mov
cmc
imul
mov
mov
mov
and
dec
ficoms
mov
stos
inc
stos
cltd
in
lock
sub
jne
inc
mov
sub
fstpl
scas
sub
imull
xchg
push
adc
adc
jnp
cmovnp
das
popa
adc
jmp
or
loopne
mov
fidivrl
ss
add
pop
adc
dec
xchg
std
jo
jae
and
jns
daa
insl
xor
xlat
lock
js
mov
shlb
or
sbb
add
icebp
mov
iret
aaa
sti
push
and
out
das
lods
andb
sub
mov
sub
jnp
ja
adc
jecxz
sbb
xchg
lret
leave
aas
mov
jmp
lcall
pop
mov
popf
ds
in
aas
popa
iret
dec
mov
and
ljmp
push
lcall
pop
xchg
push
or
gs
mov
xchg
into
clc
mov
jns
jne
mov
adc
push
xchg
inc
push
and
adc
jg
gs
mov
das
xchg
mov
fisubs
push
cwtl
aaa
xor
mov
jnp
repz
outsb
pop
rclb
stos
dec
xchg
test
lock
pop
xor
xor
mov
or
jmp
sbb
mov
fdivrp
call
pop
fwait
mov
xchg
loop
pop
test
dec
mov
inc
mov
icebp
repz
popf
mov
leave
push
mov
cltd
fstpt
add
push
push
sub
lods
cmc
push
mov
pop
jo
lods
inc
jnp
cwtl
stos
fcomi
adc
xchg
mov
jl
push
push
nop
frstor
iret
add
ret
mov
jge
add
sub
sbb
aas
fistps
cli
add
or
fsts
es
sub
aaa
sahf
js
pop
adc
bound
mov
repnz
sti
xchg
loope
inc
shl
cs
adc
xor
push
jge
stos
pop
inc
push
or
sbb
mov
popf
stos
push
or
mov
addb
aas
fcmovnbe
cmp
push
pop
ljmp
and
test
or
outsb
adc
push
push
call
mov
stos
add
xor
dec
jns
lods
mov
push
sbb
std
xor
out
mov
rclb
daa
pop
popa
adc
push
sahf
int
mov
pop
jno
and
mov
jp
jnp
loop
test
push
xor
lea
sti
fimull
icebp
add
mov
push
mov
mov
pop
call
sahf
out
gs
or
idiv
loopne
xchg
add
outsl
xchg
jge
sub
pop
xchg
jecxz
shl
test
sub
repz
sub
ss
lods
xchg
lret
in
pop
pop
aas
int
gs
adc
lahf
sub
mov
int3
fistl
js
insl
xor
adc
add
mov
fmul
sbb
stc
sub
sbb
pop
lods
loope
xchg
sbb
test
pop
icebp
stos
ret
inc
pop
lock
pop
pushf
js
ds
movsb
insb
sub
inc
fcomps
push
mov
out
lret
inc
popf
inc
pop
iret
or
test
and
fisttpl
jl
push
lret
stos
in
mov
jne
dec
and
jmp
add
icebp
rcl
outsb
jle
jle
fcomps
adc
into
push
icebp
sbb
pop
push
pushf
adc
xor
push
dec
xchg
insl
and
dec
xor
cmc
insl
or
cmp
sbb
inc
and
or
rorb
push
clc
test
lret
sbb
sbb
jns
loopne
cltd
shlb
xlat
jnp
outsl
push
jg
scas
popa
mov
outsl
sbb
pop
sbb
insl
insb
mov
or
lret
stc
push
test
jmp
cmp
inc
xor
jge
pushf
jmp
movsl
popa
sahf
ret
jge
cmc
cli
mov
dec
mov
jns
mov
ds
mov
inc
mov
sub
adc
rcrl
sub
jmp
test
pop
adc
xchg
in
in
mov
add
adc
loopne,pt
dec
xchg
jne
ds
movsl
inc
movl
sub
add
pusha
movsl
lcall
dec
scas
ret
xchg
or
jmp
cli
ja
inc
lret
push
call
cmp
adc
mov
push
mov
repz
push
mov
iret
cmp
lods
dec
sub
repnz
pop
lret
pop
mov
shrb
sbb
dec
cwtl
mov
jp
or
jne
fcmovb
mov
orb
push
mov
add
inc
and
mov
xor
dec
insb
outsb
sub
pop
mov
jae
xchg
pop
jg
or
enter
and
in
stos
inc
add
das
mov
sbb
shll
aam
aam
sahf
mov
mov
mov
jmp
jg
dec
jp
imul
movsl
mov
test
fwait
loope
dec
mov
dec
pop
xchg
fsubr
dec
or
popa
pop
jae
fsubr
add
mov
mov
push
and
add
cli
fimull
mov
int3
adc
xor
fnstsw
imul
mov
rcrl
mov
push
iret
mov
sbb
jae
fcomps
pop
pop
mov
pop
cmp
cmp
and
and
aas
out
pop
add
xchg
out
insb
fimuls
or
dec
push
dec
out
ficompl
iret
insb
cmp
and
jmp
inc
aad
mov
mov
jns
or
lahf
inc
aas
mov
cmpb
xchg
loopne
xrelease
insb
push
shlb
mov
mov
int3
or
jo
fcompl
fwait
lret
xchg
in
push
iret
xchg
aas
xchg
dec
mov
fidivrs
jae
or
mov
addr16
and
in
dec
mov
dec
jmp
sbb
pop
xor
jae
lods
out
mov
inc
fidivrl
mov
xor
xor
aad
mov
cltd
push
pop
arpl
lret
inc
pop
inc
add
aad
shlb
mov
outsl
cmp
push
jg
divb
sbb
popf
scas
mov
scas
add
cmp
adc
out
aad
push
das
push
or
movsb
cmpsl
push
es
xchg
or
jp
stc
xor
jbe
pop
xchg
xor
aas
mov
dec
mov
test
jle
pop
out
lock
cmp
ret
xor
xchg
mov
xchg
or
mov
shl
mov
mov
sub
test
mov
repnz
cmp
pop
out
loopne
push
les
loopne
repz
out
mov
roll
stc
add
jnp
mov
popa
rcr
outsb
sub
add
es
sub
icebp
outsl
and
inc
lcall
lods
pop
push
cltd
or
dec
pop
jmp
leave
adc
xchg
xor
sbb
aas
cmp
push
dec
pop
push
dec
ss
ret
mov
mov
mov
pop
pop
cltd
aas
std
stc
mov
addl
leave
loope
ror
movsl
pop
shll
repz
in
mov
xor
jmp
adc
call
int
pop
jl
nop
je
inc
jae
cmp
mov
cs
ljmp
push
aad
pop
add
dec
push
inc
jno
out
das
sub
add
cltd
jl
cli
fsubrl
mov
addl
les
outsb
lea
mov
shr
mov
out
lds
and
or
add
cwtl
test
pop
inc
xchg
ja
xchg
mov
mov
pop
pop
lret
mov
mov
or
dec
ret
das
popa
add
insb
in
mov
push
adc
jns
jnp
sti
pusha
notb
jecxz
lcall
or
push
call
cmpsl
push
xor
lret
xchg
cmp
xchg
cmp
aam
cmpsb
and
imul
das
repz
pop
addr16
xchg
enter
jmp
cmp
bound
mov
ds
pop
das
daa
adc
jecxz
in
pop
mov
dec
outsb
movsl
aad
cmp
std
movsb
aaa
rcll
fnstenv
dec
mov
cmp
cmpsl
mov
shrl
mov
test
push
ret
push
aam
sub
inc
loopne
sub
inc
mov
daa
lods
and
fwait
pop
mov
clc
out
inc
xor
inc
mov
andl
dec
sub
push
and
or
inc
cmp
in
jle
insl
mov
mov
shrb
imul
bswap
movsl
out
data16
sub
int
mov
mov
or
or
push
mov
mov
addr16
cltd
imul
les
inc
loope
pop
popf
int
or
out
imulb
push
js,pn
mov
cmp
call
fwait
shll
insb
pusha
stos
fwait
sbb
and
pop
jg
and
call
sbb
insb
std
pop
aam
les
fiadds
out
stos
andl
sahf
ret
insl
fadd
sub
cmp
and
incl
xor
sar
sti
das
call
stc
cmp
iret
dec
mov
mov
std
xchg
sbb
xor
repnz
mov
push
mov
popf
fistl
sti
and
adc
gs
cld
add
push
sbb
add
stos
inc
jp
hlt
cmp
pop
in
cmp
adc
jns
add
xchg
mov
mov
mov
mov
loopne
lods
fistl
add
or
sbb
popf
pushf
testb
inc
adc
stc
clc
aas
int3
add
and
imull
jnp
int3
in
sbb
imul
movsl
and
popf
inc
inc
xchg
xchg
lret
mov
push
pop
in
gs
pop
add
movsb
out
xchg
mov
push
pop
popa
push
and
mov
in
cmp
sbb
flds
loope
test
mov
inc
inc
notl
sbb
fcoml
das
fdivrs
scas
jl
push
inc
push
mov
jae
pop
cmpsb
out
xchg
mov
push
push
push
adc
ss
out
dec
sub
stc
add
es
mov
xor
sub
fs
divb
push
notl
xchg
imul
push
pop
jp
add
adc
xchg
fdivrl
lret
cmp
in
mov
icebp
mov
mov
movsl
add
jl
lods
dec
dec
push
mov
mov
test
cmpsb
pusha
lods
mov
in
das
int
cs
in
jo
negb
xor
ret
dec
faddl
pusha
mov
pop
and
push
inc
mov
cmpsl
mov
xchg
jns
xchg
dec
mov
xor
lret
xor
jl
cs
mov
jae
fcomi
dec
sub
push
xchg
push
andb
fcmovnb
xor
gs
dec
mov
je
rorb
enter
je
cmc
iret
push
addr16
cmpb
mov
push
leave
xchg
sub
shll
pop
mov
push
je
ja
sub
inc
repnz
fincstp
adc
repnz
pop
push
rolb
aad
pop
push
jg
add
inc
mov
cmp
pop
dec
ds
nop
mov
test
mov
jns
pop
sub
mov
das
mov
ror
lea
data16
stc
pop
out
add
stc
lock
movsl
jnp
inc
pop
xchg
rorb
mov
mov
pop
push
imul
popa
int3
adc
out
xlat
popa
mov
or
imul
cmp
adc
mov
js
cmc
sub
movsb
iret
cs
cmc
test
adc
sub
sarb
scas
lahf
xor
addl
stos
pop
lret
sub
mov
or
and
jmp
mov
add
pop
push
shr
dec
cmp
add
in
sbb
xchg
js
dec
jae
mov
andl
pop
loop
fidivl
sahf
scas
out
jg
adc
xor
dec
xchg
push
mov
fbld
mov
ja
mov
mov
daa
nop
mulb
jno
xchg
call
jno
test
push
pushf
mov
mov
ret
loopne
dec
pop
mov
dec
aam
lcall
es
and
xchg
in
stc
ds
test
cmp
ficoms
cs
ds
movsb
pop
adc
push
mov
dec
xor
cltd
movsb
jge
jnp
jbe
pop
mov
push
ficoms
xor
jecxz
xchg
in
dec
out
int
clc
push
lds
ficompl
push
xlat
xor
ficomps
xchg
inc
jle
fisttps
inc
pop
insl
jnp
push
sub
pop
movsb
mov
xchg
pop
hlt
mov
cld
in
outsb
add
jbe
inc
and
scas
andl
mov
sub
lret
push
mov
movlps
loop
iret
imull
je
dec
fdivs
or
xor
pop
lahf
jle
mov
push
negl
dec
mov
call
dec
in
inc
jp
daa
into
mov
int3
movsb
rcrl
xor
outsb
sub
cmp
scas
jno
sub
pop
outsb
add
mov
lds
xchg
stos
int3
outsl
xorl
adc
lds
jp
and
xlat
mov
cli
cmpsl
test
and
pop
sbb
in
cmp
sub
push
sti
sbb
xlat
scas
sub
mov
cmp
mov
arpl
imul
xchg
xor
mov
loop
pop
repz
imul
jmp
jnp
or
femms
fstpl
inc
xor
enter
decb
and
push
or
push
sbb
rcrb
cli
mov
or
cmp
outsb
push
fcompl
push
enter
popf
ret
push
lret
xchg
testl
mov
sbb
cwtl
sub
mov
mov
mov
or
inc
mov
jg
test
sub
jae
jnp
repz
inc
aas
mov
xchg
es
sub
xor
mov
je
addr16
xchg
mov
and
test
and
cltd
mov
stos
mov
arpl
inc
ret
jecxz
push
xlat
out
imul
leave
mov
cwtl
scas
mov
mov
movsl
push
icebp
xor
shlb
test
sahf
mov
xchg
mov
inc
mov
in
jg
out
jno
mov
lret
shrl
and
leave
push
lcall
aas
in
push
jecxz
and
push
call
push
xchg
arpl
int
inc
jo
xor
test
mov
jo,pn
stc
out
add
pop
stc
xor
mov
cmp
lods
stos
test
lcall
push
fadds
xchg
scas
mov
adc
bound
xchg
fsts
leave
xchg
cmp
out
nop
data16
xlat
xor
mov
loop
inc
fcoml
mov
xor
push
pop
mov
add
push
shl
lods
mov
movsb
dec
decl
dec
and
mov
aam
ja
pop
das
ja
shrb
push
ljmp
loop
cmp
sbb
stos
add
pop
dec
inc
out
pop
test
fisubrl
scas
fwait
push
jmp
fistpll
es
inc
fmulp
scas
scas
mov
mov
mov
sahf
and
mov
out
fnstsw
adc
push
sub
test
lret
xlat
pop
add
shrb
shrl
cs
bound
mov
dec
in
pusha
mov
or
add
sub
es
pop
decb
mov
rol
psubsw
in
clc
sti
outsl
or
or
and
cmp
mov
int3
jp
lea
fbstp
pop
cmp
mov
inc
sbb
or
adc
lret
inc
mov
icebp
mov
cmc
mov
mov
inc
hlt
ljmp
aad
test
inc
imul
mov
push
test
or
leave
test
stc
xor
repz
icebp
insb
or
fisttps
enter
shrb
cltd
sub
sbb
xor
aas
jl
movsl
outsb
jmp
das
popf
dec
mov
aaa
outsl
mov
sub
push
mov
loop
mov
ret
js
sub
dec
dec
fmul
pop
jecxz
add
lock
jge
mov
or
inc
lret
fstpl
idiv
lahf
mov
icebp
das
inc
out
add
in
ret
xor
out
and
sub
sub
cs
neg
pop
mov
jno
xchg
cmp
shl
inc
mov
sub
std
cwtl
jecxz
lahf
cmp
or
pop
xlat
mov
inc
clc
insl
addr16
sbb
inc
out
lea
or
arpl
add
add
inc
cmpl
jle
adc
add
iret
fstps
sti
sti
cmpsl
scas
jge
sbbb
jmp
jae
mov
xchg
ljmp
aad
add
sbb
imulb
jmp
dec
inc
jg
jns
jo
cmp
sub
call
cmpb
pop
test
call
fwait
movsl
sub
mov
loop
aas
mov
jbe
lcall
sub
push
into
or
je
sbb
or
int3
or
js
lock
dec
ret
bound
daa
pushl
add
addb
flds
test
mov
cmp
jb
icebp
add
and
pop
sbb
ss
jmp
mov
pop
cld
sub
pop
push
mov
and
and
inc
cmp
dec
inc
dec
movsb
addr16
xchg
push
xor
mov
in
clc
shlb
leave
xchg
aaa
push
cmp
sub
xchg
daa
mov
adc
mov
mov
icebp
pop
rcrl
out
sbb
stc
repnz
es
mov
sub
rol
fdivp
push
jb
jae
pop
out
pushf
mov
sbb
xchg
dec
jecxz
ror
stos
lds
xchg
fsts
repz
jo
mov
push
fcos
jnp
movsl
or
cld
dec
mov
iret
test
mov
cmpsl
xchg
mov
dec
mov
add
jl
or
sbb
mov
jno
mov
cltd
loop
inc
inc
ds
out
nop
in
pushf
cs
lea
cs
inc
loop
xor
push
pop
jl
lock
pop
adcb
cmpsb
dec
ds
ds
push
dec
jo
mov
inc
xchg
xchg
sbb
or
pop
iret
fsubrl
jnp
mov
push
sub
sbb
insl
push
mov
out
adc
push
cltd
mov
sub
mov
cmp
pop
and
aad
addr16
adcb
mov
jb
sar
ret
aam
insb
push
rolb
loop
mov
fxch
call
shll
loop
fisttps
inc
nop
fnsave
imul
inc
push
stos
in
mov
cmpsl
xchg
cmp
mov
inc
dec
lods
movsl
std
testb
jo
andl
rol
cltd
dec
sub
fwait
pop
inc
jne
pop
mov
pop
adc
mov
aas
insl
pop
dec
inc
pop
jne
cwtl
inc
xchg
or
rcl
mov
jb
outsl
ror
iret
xchg
push
mov
cmp
pop
dec
inc
lret
mov
out
xor
mov
dec
call
mov
pop
jle
adc
jnp
orb
lds
loopne
push
dec
mov
cmp
and
jns
int3
rclb
pop
adc
xchg
pop
das
lcall
sub
lods
fidivrl
das
inc
fdivrs
pop
stc
jle
addr16
push
repnz
mov
jae
addr16
cli
fists
pop
pushf
ds
std
sub
data16
mov
std
negl
into
mov
pusha
inc
jno,pt
shlb
adc
fcmovnu
imul
xchg
testl
sti
fstps
xchg
std
xchg
fwait
cwtl
aaa
or
dec
jp
icebp
addr16
popa
test
pop
mov
jp
push
cmp
into
dec
lods
fistl
pop
jge
mov
in
in
popf
lcall
in
cwtl
sub
and
test
add
xor
pop
fiadds
xchg
inc
rcll
aam
mov
inc
pusha
fisttpll
es
xor
fwait
jb
mov
sbb
in
ret
sti
andl
nop
cmp
cmp
in
push
xorb
cmp
push
or
hlt
test
sbb
decl
xchg
shrb
pusha
add
pop
pop
sbb
mov
mov
mov
push
xchg
enter
lock
dec
or
lods
xor
sarl
lods
aad
dec
lods
cmp
js
xchg
xor
mov
mov
fucomip
xchg
sub
aas
mov
cmp
inc
sbb
jae
test
out
rcrl
daa
inc
test
jae
jne
mov
fidivl
jmp
jmp
pop
and
adc
mov
adc
insl
iret
imul
mov
add
gs
sbb
or
xor
sbb
or
and
xchg
mov
ds
jmp
stc
enter
cmp
insl
scas
fs
push
and
insl
xchg
xlat
and
jg
movl
ljmp
outsl
sub
repnz
cmpsl
mov
sbb
cmp
mov
jle
test
movl
pop
insb
pop
insb
or
dec
cmpsl
fisubl
popf
mov
psubb
cmc
fadd
cmp
xlat
mov
pop
mov
and
dec
push
jp
pop
add
pusha
lret
pop
cltd
sub
fs
gs
ret
lock
loop
out
ret
pusha
mov
int3
push
and
mov
push
fnstsw
mov
int3
inc
mov
pop
lock
das
or
mov
mov
dec
jecxz
fldcw
jmp
cmp
test
xor
cmp
mov
outsl
fsub
xor
dec
es
outsl
lahf
xchg
test
cmp
and
pop
jmp
jp
lods
ret
add
ds
mov
aaa
je
xchg
push
lods
push
and
insb
push
add
and
roll
add
and
push
fwait
clc
push
sti
scas
and
shlb
inc
pop
mov
in
imul
or
xor
xchg
inc
imul
popa
lahf
repz
aad
mov
inc
sbbb
push
scas
fimuls
inc
js
jb
jae
cmp
es
xchg
sbb
push
jecxz
mov
lods
xchg
stos
xchg
jp
pop
loope
lods
sbb
inc
xor
mov
icebp
adc
mov
aad
mov
mov
sub
inc
cmp
sub
add
or
sbb
sub
push
bound
mov
shrl
xor
aaa
and
lea
in
leave
mov
lahf
xchg
jnp
inc
push
push
push
xchg
scas
filds
push
push
xchg
mov
mov
hlt
cmp
pop
int3
loop
gs
in
mov
mov
aam
pop
loope
out
dec
ret
in
jne
lret
pop
das
dec
pop
push
ret
cmp
cmpb
std
pop
gs
pop
in
aaa
mov
cmp
mov
data16
repz
jecxz
pop
xchg
push
cmpsl
rcrb
push
push
and
cmp
dec
adc
sbb
inc
xchg
lods
lds
sbb
fidivs
xchg
das
scas
add
push
lds
add
icebp
and
xchg
jecxz
xor
testl
and
nop
sarb
jne
pop
add
sbb
mov
mov
int3
dec
or
stos
jbe
in
and
addr16
lock
mov
shr
rol
negb
out
imul
ds
aaa
sub
pop
mov
sbb
enter
rorb
movsb
scas
call
enter
mov
nop
lods
or
mov
dec
push
xor
add
xlat
popf
imul
nop
sub
mov
and
inc
lcall
ret
fisubrl
cltd
aas
in
notb
sti
and
xlat
lock
test
movsl
popf
lods
int
push
dec
adc
mov
inc
leave
add
pop
arpl
mov
stos
imul
pop
mov
and
fldenv
loopne
movsb
jbe
jo
test
jb
mov
notb
rclb
in
jne
mov
inc
xor
or
ljmp
mov
jge
sbb
notb
cmp
cmp
cmc
fimuls
sub
not
cwtl
jmp
push
scas
repz
push
lea
decb
cli
rorb
jle
gs
cltd
xchg
dec
imul
in
adcb
mov
sub
fildll
sub
xchg
xor
xlat
bound
cmpl
dec
shrb
mov
rolb
mov
mov
xor
aad
decb
std
sbb
js
aad
push
xor
and
or
mov
loopne
sub
decl
ds
cli
xchg
jbe
les
mov
add
enter
cmp
pop
adc
in
data16
pop
cmc
cmp
int3
sti
dec
fdiv
in
movsb
imul
cs
iret
jne
xchg
hlt
out
pop
mov
xchg
fsubs
sbb
jle
mov
mov
sbb
lods
fs
pop
dec
enter
cmp
ja
inc
aaa
xchg
and
and
aam
out
lcall
popl
jnp
dec
rclb
addr16
and
rclb
in
and
inc
test
fcomip
fadds
out
sub
xor
xchg
or
pusha
sub
fdivrl
inc
cltd
mov
shrb
xchg
insb
movsb
add
lahf
in
sbb
insb
repz
xchg
pop
cmpsl
shrl
fsubl
push
in
test
sub
call
sub
sub
sahf
add
jbe
jecxz
dec
imulb
push
sub
xchg
and
mov
and
popf
lock
cmp
xchg
or
fs
adc
push
push
dec
dec
fisttpl
popa
in
loop
ljmp
out
sbbl
lea
sarb
mov
loope
add
clc
iret
das
cs
stos
jo
inc
add
adcl
cmp
in
jp
fdivrs
shlb
ljmp
fists
sbb
test
jno
icebp
or
dec
pop
mov
inc
ds
push
push
es
mov
dec
adc
ret
cwtl
push
jge
mov
cmp
lods
cld
aas
pop
and
pop
mulb
fxch
shlb
out
xor
sbb
push
cmc
or
int3
or
scas
xchg
arpl
jnp
ret
pop
mov
stc
xchg
or
or
insb
pop
lock
jecxz
push
movl
lock
sti
clc
mov
mov
cmpsl
mov
aad
pop
popa
fwait
mov
aam
push
adc
fcom
mov
and
pop
jl
mov
dec
push
cmp
negb
lcall
jae
cmp
outsl
sarb
push
les
pop
imul
mov
ret
rorb
mov
adc
es
shll
popa
lret
out
jb
push
sub
loopne
ret
inc
sub
mov
jle
cmp
mov
inc
mov
bound
xor
jg
add
jno
mov
cmp
ret
dec
sub
aam
fs
cmp
push
mov
jae
ds
fcom
sti
and
movb
maskmovq
idivl
jg
out
in
push
pop
test
mov
add
push
sub
cmp
jmp
add
rclb
or
pop
js
test
mov
mov
in
insb
popa
jbe
lock
lret
scas
push
dec
pop
fs
mov
daa
test
sbb
cmpl
mov
cmc
iret
dec
data16
popa
push
aaa
ljmp
adc
repnz
pusha
insl
fbstp
test
pop
shl
jnp
cld
bound
cmp
jp
push
sbb
negb
mov
notb
cmp
aam
jp
aad
out
fcomps
je
mov
push
and
sub
sub
out
jns
xor
sub
push
data16
shl
cmp
mov
or
pop
out
jmp
arpl
fcomps
pushf
adc
cmp
movsb
es
mov
dec
ret
scas
out
nop
push
test
pop
sub
or
ret
repz
xor
xor
jae
mov
pop
xor
enter
test
js
mov
mov
or
push
ret
inc
rcrb
dec
imul
mov
cmp
mov
jns
int
aaa
sbb
dec
in
xchg
mov
and
mov
iret
pop
inc
ds
pextrw
iret
rcll
sbbb
jno
xchg
adc
std
pop
out
jbe
mov
mov
roll
push
mov
pusha
out
pushw
sti
popa
add
orb
mov
push
insl
mov
push
jecxz
cmp
nop
xchg
aam
je
call
and
mov
xchg
out
push
and
lret
or
test
inc
dec
into
xchg
imul
out
clc
adc
dec
cmpl
es
sub
clc
mov
fisttpl
mov
push
out
adc
testb
xchg
mov
xchg
stos
shrb
add
andl
data16
scas
inc
mov
sub
fisubrs
dec
mov
adc
arpl
cld
push
mov
test
fldenv
std
int
inc
inc
js
lea
xor
dec
rcrb
adc
movsl
pop
rolb
test
repnz
push
cmp
sbb
push
pop
pop
ljmp
scas
and
cld
mov
stos
ss
adc
jb
imull
push
pop
test
call
push
gs
sbb
adc
lds
xchg
out
subb
pop
insl
push
les
movsl
jne
pop
xchg
xchg
adc
push
pop
loopne
fcos
rcrb
es
push
mov
mov
aas
mov
iret
jo
mov
xchg
sbb
sar
fs
push
pop
out
fistpll
js
dec
push
in
shrl
mov
push
dec
mov
jle
clc
mov
stc
mov
fidivrs
sbb
out
hlt
add
hlt
add
sbb
mov
jae
lret
repnz
xchg
je
xor
dec
mov
repnz
mov
lahf
aad
adc
in
sub
inc
ret
mov
test
dec
mov
pop
shll
dec
sbb
inc
popa
cmp
pop
adc
add
clc
popl
sub
call
cmpsb
lahf
xchg
adc
adc
ds
sbb
aam
push
jp
xchg
xor
pop
addr16
mov
dec
pop
xchg
jmp
or
mov
orl
imul
cltd
outsl
jmp
push
arpl
lret
bound
clc
aaa
xchg
out
xchg
cli
aaa
fst
mul
xor
dec
adc
addr16
add
cli
jge
iret
sbb
pop
and
arpl
jp
cli
dec
xchg
ja
test
xor
xor
lods
shlb
inc
mov
mov
mov
or
movsl
imul
insb
orl
dec
cltd
int
iret
sbb
or
push
mov
adc
mov
or
sub
push
ret
fwait
sub
jp
std
aaa
or
mov
pop
pop
test
jl
addb
add
cmp
js
fcomps
cltd
lods
jle
lods
fwait
xlat
out
push
jae
and
insb
rorb
jbe
ret
push
rol
jge
push
push
scas
ret
loop
push
inc
fs
enter
jb
pop
mov
and
sbb
xchg
fnsave
hlt
inc
add
movsl
mov
lahf
cmpsb
sbbb
dec
and
xor
and
stos
or
pop
dec
mov
and
cmp
mov
sbb
subb
cmp
loop
out
ret
lret
adcl
mov
fildll
mov
mov
aaa
inc
cwtl
push
pop
out
adc
dec
inc
pop
push
outsb
xor
mov
push
push
inc
in
aam
sbb
fdivl
les
sahf
ud2
mov
sub
stos
loop
jp
leave
mov
das
inc
jl
mov
sub
cmp
pushf
cwtl
push
xchg
and
scas
out
mov
mov
sbb
aaa
xchg
gs
xor
lcall
ss
into
push
addr16
fmull
and
cmp
dec
outsb
test
xchg
mov
out
dec
inc
and
mov
movl
jo
add
pop
stos
mov
mov
lods
fistl
cmpsl
out
inc
mov
jns
xchg
scas
mov
xor
ja
shlb
cltd
popf
hlt
dec
xchg
arpl
adc
in
jae
pop
cli
mov
push
mov
clc
cs
xchg
arpl
adc
int
call
inc
push
add
mov
mov
mov
fisttpll
mov
mov
sbb
xchg
lea
out
test
and
mov
xchg
mov
mov
jle
js
mov
fdivrs
mov
xchg
fists
pop
loopne
insb
mov
mov
ret
cmc
lods
inc
mov
clc
lods
fistps
sub
shll
jne
imul
cltd
loope
in
scas
adc
or
lock
ret
rorb
or
leave
enter
mov
pop
xor
insb
mov
mov
in
mov
xor
dec
call
js
divb
cmp
repnz
stc
mov
fadds
ljmp
sub
sbb
outsl
sub
aam
or
outsl
je
andb
fisubs
lods
inc
stos
or
cwtl
into
mov
xor
subl
insl
push
push
fs
pusha
pushf
cmpsl
stc
cli
pmulhuw
adc
out
xchg
add
xor
addb
xchg
int
inc
fimull
aad
pop
shlb
fisubl
in
xchg
divb
jae
sub
inc
stc
push
lret
sub
mov
inc
xchg
adc
dec
aad
mov
cmp
pusha
sub
ficomps
and
es
sbb
push
pop
xchg
lret
mov
std
loope
jbe
scas
ss
shrl
sub
aam
and
in
loop
lods
clc
fldenv
mov
pop
aaa
fs
aam
fsts
bound
sbb
rcr
push
cmp
repnz
push
adc
mov
aad
mov
imull
mov
jmp
pusha
andl
push
push
into
adc
jmp
ffree
adc
mov
inc
fwait
sbb
ret
xor
dec
out
inc
fwait
mov
movsb
mov
shrl
leave
lods
xchg
test
aad
xchg
add
orl
mov
jle
inc
mov
jnp
jge
push
ja
outsl
repnz
push
stos
imul
or
or
adc
sub
or
fdivrs
scas
leave
pop
cmpsb
and
ror
pop
jle
loopne
push
cmp
mov
imul
ds
pop
lahf
scas
addr16
call
add
int
pop
dec
test
mov
mov
push
jp
adc
lcall
hlt
jb
xchg
repz
cmp
lods
sbb
pop
imul
jnp
dec
adc
test
push
pop
or
jmp
or
cmpsl
push
cmovge
lods
xor
out
pop
mov
pop
dec
lahf
mov
mov
push
cmc
cmp
fcomp
push
aad
pop
xchg
and
ficompl
shl
pop
in
popa
aad
in
sub
ja
pop
inc
cmp
push
sahf
sbb
xchg
dec
stos
imul
jae
dec
mov
jecxz
mov
loopne
pop
xchg
imul
into
mov
cmp
repnz
cmp
sbb
arpl
pop
sub
fstl
pop
aad
mov
aam
sbb
sub
or
mov
push
repz
pop
jnp
ja
pop
push
inc
jne
push
out
and
dec
inc
xchg
cmc
mov
mov
repnz
popa
popa
imul
pop
iret
cmp
xor
lock
ret
mov
mov
lahf
and
xchg
scas
xor
movsl
mov
les
in
cmc
mov
fwait
data16
sub
pop
movsb
dec
sbb
sub
inc
aas
jmp
jo
xor
sarb
sub
pop
fldcw
xor
loope
fwait
repz
jle
aas
mov
jbe
fistpll
int3
mov
add
cmpsb
dec
inc
fistpll
test
mov
sub
fmull
sbb
xor
in
addr16
mov
imul
inc
pusha
sti
out
push
jp
jge
mov
and
arpl
jae
xor
fwait
xchg
adc
jae
sbb
cmpsb
hlt
cld
mov
popf
lret
mov
test
arpl
cmp
mov
loop
jge
les
mov
insb
xchg
arpl
inc
nop
push
insb
jg
insl
aad
in
adc
pushf
rcrb
jmp
dec
inc
jno
mov
mov
gs
xchg
push
sub
adc
sub
push
or
subb
mov
lea
fimull
xor
sarb
adc
xor
cmp
push
mov
test
fbld
sub
pushf
sub
ja
ljmp
xchg
pop
testb
mov
mov
pop
sbb
push
int
and
ss
in
paddusb
or
test
xor
xchg
xchg
out
sbb
rolb
int
mov
sub
dec
fmull
xor
cwtl
xchg
scas
add
int3
in
aaa
jbe
and
jge
lods
and
mov
cmp
or
std
or
testl
adc
fldlg2
sub
cmp
cmp
and
in
pop
lea
mov
lahf
repnz
out
or
je
and
push
sub
scas
mov
jp
add
shrl
cmpsb
mov
sub
xchg
fwait
push
or
adc
adc
and
int
jae
dec
xchg
dec
pop
add
sub
ja
testl
push
add
insb
mov
lock
loope
shlb
sbb
xor
xor
or
jp
daa
adc
jo
rorl
push
lods
movsl
sub
dec
lds
pop
roll
jge
jb
xchg
xchg
or
mov
ret
xchg
add
xchg
ud2
mov
push
pop
call
dec
jmp
and
xlat
rclb
and
daa
roll
sub
mov
test
add
out
push
cld
mov
cmp
jno
or
inc
xorb
test
push
add
jb
lds
xchg
popf
aam
and
cmpsl
aad
pop
je
xor
cmp
dec
jnp
mov
in
testl
movsb
mov
pushf
mov
es
push
or
xor
sub
fmull
cld
sbb
mov
sub
stos
push
xchg
daa
pop
mov
adc
sti
dec
mov
mov
int
mov
test
adc
mov
add
stos
jno
clc
xchg
pop
jb
lock
push
aad
and
or
mov
aaa
and
lahf
xor
call
test
movsb
loopne
push
jecxz
mov
lret
mov
negb
inc
add
or
pop
movsb
sub
and
pop
xor
cwtl
adc
fs
lret
and
loope
cld
dec
lcall
imul
adc
nopl
popa
jbe
or
cli
xchg
movb
sub
push
mov
pop
test
or
jo
xor
add
cwtl
daa
dec
in
jbe
lock
fdivl
leave
movsl
fistps
jae
fstpt
scas
ss
fnstsw
jmp
xchg
push
scas
mov
dec
mov
fisubrs
mov
cmp
inc
int
sbb
and
push
lods
push
stos
mov
into
mov
je
add
push
xchg
jl
subb
loop
fmul
sbb
movsl
fcmovu
cmp
lock
push
cmp
inc
stos
dec
in
pop
xchg
add
pop
mov
cltd
sub
mov
inc
xlat
inc
mov
xchg
clc
jnp
bound
in
sub
hlt
popf
out
sub
mov
adc
dec
data16
leave
loop
in
sub
cmp
imul
fcmovnbe
orl
outsl
mov
xor
ljmp
xchg
out
adc
js
jl
jb
inc
mov
add
pop
movsb
push
mov
fisubrs
pop
in
push
adc
les
and
jg
fcmove
inc
std
dec
into
jbe
xchg
xor
inc
movsl
jp
push
dec
adcb
stos
cmc
scas
or
push
arpl
test
icebp
into
cs
lahf
imul
mov
scas
stos
movsl
adcb
hlt
xorb
jb
mov
testb
movb
mov
sbb
cli
pop
lcall
and
mov
mov
out
mov
filds
mov
popa
jae
je
in
loopne
pop
bound
dec
mov
cmp
cs
sbb
xchg
xchg
mov
push
bound
sbb
xchg
push
push
sub
flds
jecxz
orb
cmp
repz
cmc
arpl
push
push
repnz
push
les
push
jl
lea
scas
imul
xchg
outsb
cmc
test
incl
jne
cmp
je
repnz
in
sub
stc
add
sbb
sub
xchg
mov
int3
adc
dec
fcoms
cmp
mov
cmp
aam
push
inc
insl
jns
xchg
adc
cmp
jno
pushf
add
addb
rcrb
jne
lock
jne
into
or
addr16
dec
ret
jns
scas
into
fs
jmp
adc
orl
nop
cmpsl
movsb
loope
icebp
push
fimuls
aam
pop
jmp
outsl
dec
scas
movsb
pusha
add
mov
mov
or
out
pop
inc
cmpsl
enter
jp
call
out
sub
mov
and
add
ss
jle
and
fisubs
jo
aam
sub
test
inc
pop
aad
push
pop
add
mov
outsl
pop
jmp
ret
mov
pop
insb
outsl
dec
jmp
nop
inc
push
mov
ss
mov
jmp
add
shl
mov
sub
loop
lcall
aas
lds
fisttpl
xor
jle
or
mov
testl
movb
cmp
xor
or
push
cmp
dec
enter
fstl
jno
popa
fildll
sbb
pusha
pop
push
enter
gs
jle
mov
jne
dec
in
movsl
cmp
mov
xchg
push
sbb
add
mov
cli
mov
jne
mov
mull
mov
lock
cltd
rcl
ficompl
add
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sbb
call
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
add
mov
sbb
cli
stos
or
push
and
jg
daa
push
pop
pop
pop
add
push
mov
pop
mov
mov
pushl
and
pop
jmp
jnp
icebp
push
inc
sub
scas
dec
fsub
sub
mov
add
jmp
loopne
pop
aas
or
push
add
push
movzwl
popl
mov
mov
sub
jle
cmp
jne
mov
or
mov
jb
shlb
jne
mov
sub
jno
and
test
jae
roll
sbb
repnz
stos
jno
sbb
xchg
mov
or
and
mov
jno
lds
daa
sti
fsubrs
mov
inc
sub
bnd
or
or
mov
cld
jl
jge
or
pop
mov
and
test
lahf
fld
xchg
xchg
addb
mov
inc
scas
dec
jns
jp
and
xor
cvttps2pi
inc
mov
pop
xchg
rcll
xor
fisubrl
add
popf
mov
inc
mov
je
insl
mov
in
add
mov
mov
or
mov
jle
mov
ror
sti
push
push
push
xchg
orl
repz
mov
popf
pop
mov
jge
sbbb
dec
push
mov
roll
push
lods
adc
rcl
add
or
pop
cmp
inc
lds
adc
fsubl
insb
pop
dec
mov
push
divl
sbb
out
xchg
jne
push
mov
shll
frstor
xchg
push
popf
jnp
cli
in
jl
scas
aas
test
mov
mov
imul
lock
ds
cmp
lahf
push
in
lea
pushf
lods
mov
pop
mov
jns
loope
stos
enter
mov
add
loope
and
pop
cld
and
ss
mov
jo
mov
jb
fsubrs
jnp
mov
inc
adc
push
pop
mov
addr16
or
out
push
jbe
stos
bound
mov
or
pushf
ds
and
dec
cmp
cmp
lods
call
ret
call
pop
jge
mov
in
dec
or
mov
dec
fdivl
addr16
addr16
cmp
jg
das
cli
mov
sbb
lret
xchg
enter
jl
repnz
fidivs
aaa
jmp
cmp
xor
test
popa
scas
jb
data16
pop
gs
ja
fdivrl
cmpsb
rcll
inc
inc
or
inc
in
adc
clc
gs
push
ljmp
addb
out
or
int
sbb
orb
loop
lret
jl
pop
pop
inc
fidivrl
inc
dec
filds
loop
mov
inc
out
jl
loopne
fidivrl
mov
out
imul
cmpsl
pop
cmc
push
lods
pop
ss
jne
lcall
out
lret
insl
aaa
std
jbe
int
xchg
pop
or
stc
imulb
inc
icebp
jecxz
in
pop
lea
data16
adc
les
jle
test
movsl
inc
out
imul
out
push
int
in
push
int
sbbb
inc
add
aas
xchg
inc
out
sbb
push
inc
sub
imul
inc
out
sti
int3
inc
nop
jnp
inc
out
loop
jno
push
or
add
inc
or
jns
je
sbbb
pop
andb
out
loop
aas
ja
daa
aas
out
imul
loopne
aas
out
imul
add
or
inc
sbb
test
fmull
stc
pop
enter
js
std
pop
push
mov
or
int
outsl
dec
mov
fsubl
dec
jmp
jle
pop
sbbb
sbb
cmp
mov
aam
inc
pusha
add
or
fldl
add
or
inc
or
andl
jecxz
fnstsw
add
int
jns
je
andb
xchg
mov
test
ljmp
iret
imul
sti
int3
fsubrp
iret
sarb
out
imul
ljmp
inc
dec
fstp
in
fstl
js
mov
mov
jecxz
lret
jmp
push
lea
not
inc
mov
and
add
xchg
push
lea
pop
dec
pop
jmp
int
mov
and
push
jo
inc
sahf
aas
push
sti
lods
gs
mov
sti
xchg
mov
lea
push
or
cmp
bound
push
and
and
fs
out
arpl
mov
sti
xchg
mov
lea
cmc
loop
in
push
insb
mov
int
out
arpl
mov
sti
xchg
mov
lea
cmc
loop
js
cltd
cmp
data16
int
inc
lods
in
mov
stos
int
out
imul
sahf
aas
push
sti
pop
gs
mov
sti
xchg
pop
sub
imul
hlt
mov
in
data16
pop
pop
mov
js
cltd
xor
data16
imul
mov
push
fnsave
out
gs
mov
sub
cmc
mov
sub
fnsave
out
add
vpsrad
dec
ud2
mov
imul
lahf
and
inc
in
imul
inc
pusha
in
aam
not
in
loopne
aas
out
imul
data16
or
aas
out
imul
inc
ja
loopne
out
imul
imul
out
cmpsb
sarb
movsl
insb
push
mov
inc
out
faddl
jno
je
jae
imul
xchg
sub
shlb
cmp
std
sub
sbb
adc
cmp
dec
jp
int3
dec
test
mov
stc
jl
xchg
pop
xchg
pop
or
hlt
add
ficompl
repnz
out
jb
movsl
adc
cli
fisubrl
mov
adc
mov
lock
leave
in
imul
inc
out
imul
inc
out
imul
inc
out
imul
inc
dec
insl
mov
inc
out
cmp
inc
out
imul
test
imul
inc
out
imul
inc
out
imul
inc
out
imul
inc
out
imul
mov
sti
cmpsl
and
adc
cmp
pop
lods
cmp
stc
adcb
inc
fldenv
mov
sahf
inc
inc
adc
cltd
sub
dec
inc
cli
inc
and
loopne
int3
inc
mov
pop
in
cmpsb
add
fstl
pop
sbb
or
mov
mov
jle
fiadds
jno
inc
pop
test
sti
push
sub
inc
dec
stos
jg
pop
and
loope
jne
ljmp
loopne
add
adc
mov
rcr
push
adc
ror
xchg
jecxz
lds
and
push
push
adc
push
cmp
xlat
addr16
cmpsl
xchg
mov
test
or
sbb
pop
push
rorb
lret
and
add
add
add
cli
push
add
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cli
push
add
stc
push
add
cli
push
add
cli
push
add
cli
push
add
sti
push
add
cli
push
add
sti
push
add
cli
push
add
sti
push
add
xor
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
addb
add
sbb
push
add
add
add
sti
push
add
add
add
push
add
add
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
popa
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
add
sub
fcomps
leave
shrl
jne
pop
nop
js
dec
sbb
sub
iret
jns
jg
adc
enter
sbb
add
cmp
and
loope
fwait
leave
rcrl
jl
call
cld
pop
mov
or
fstl
fsts
push
pop
xchg
subl
push
xchg
xlat
dec
adc
test
dec
ss
xor
add
add
loope
test
xor
pushf
mov
std
rcrl
cmp
xor
push
add
jae
std
pop
dec
ss
dec
or
mov
mov
filds
xor
outsl
out
ljmp
push
mov
rclb
sub
xor
xchg
sub
dec
fdiv
mov
sbb
sbb
jns
sahf
in
mov
mov
pop
ss
test
inc
sub
fists
jo
filds
repz
in
adc
cmpsl
mov
xchg
adc
in
arpl
orl
sbb
xchg
adc
mov
mov
ja
jl
stos
sbb
nop
aam
push
insl
inc
jl
cmp
fwait
jb
push
std
jb
jno
dec
and
dec
lods
fsubrl
push
test
adc
lahf
push
sbb
cmc
out
jecxz
lods
pop
push
aam
lret
mov
jne
cld
sahf
cltd
pop
push
andb
aad
mov
adcl
or
xchg
fwait
loope
shlb
mov
push
cwtl
int
dec
data16
sub
mov
xor
fiaddl
ficomps
pushf
imul
push
xor
aas
xor
adc
adc
je
dec
xor
rcrb
cmp
jnp
push
xchg
lcall
mov
pop
jae
sub
jge
xchg
scas
insb
add
negl
ds
sbb
jg
pop
cmpsl
push
mov
mov
iret
je
mov
cli
loope
fs
popa
in
iret
pop
pop
notb
xchg
xchg
std
loope
ds
mov
inc
xchg
enter
push
cmp
sbbl
inc
enter
sbb
popf
fsts
inc
out
outsb
adc
pop
pop
mov
enter
jl
fs
cli
and
inc
xor
and
pop
aad
xor
or
or
cld
out
fists
or
mov
or
jb,pn
mov
je
cmpsl
test
xchg
aam
or
movl
leave
lods
and
pusha
pushf
lods
inc
sub
stc
jae
inc
cmpsl
push
mov
mov
add
cmp
push
xor
popa
mov
adc
add
sarb
std
mov
pop
repz
icebp
inc
jne
mov
push
and
lds
xor
dec
push
ja
scas
jns
cmpsl
pop
cmp
daa
fnstenv
lcall
les
xor
lods
addr16
iret
cltd
sti
inc
fcompl
rcl
std
cltd
cmp
xor
sbb
scas
mov
xchg
mov
jmp
jns
add
ja
loopne
inc
stos
out
cmpsl
xor
mov
scas
cmpsb
jmp
or
aaa
js
pop
daa
das
cmpsb
and
mov
fnstsw
sbb
jecxz
sbb
add
lds
leave
pop
mov
lock
inc
push
adc
and
mov
lret
push
dec
je
sub
or
jmp
arpl
repz
mov
jne
adc
jbe
inc
sub
dec
push
push
cmp
repnz
pop
jge
sbb
pop
lahf
lret
jle
subl
pushf
enter
fcomps
inc
jg
iret
aas
out
bnd
in
pop
mov
jbe
add
in
mov
aaa
adc
testb
sub
mov
mov
test
pusha
inc
xchg
pushf
stos
xchg
loopne
fdivl
xchg
popf
add
cltd
in
add
popa
roll
mov
push
popf
outsl
sbb
push
in
push
outsl
cmp
pop
les
xchg
add
insb
fst
test
pop
ds
xchg
push
aam
cmc
jns
aam
sub
sti
add
add
jno
dec
loope
adc
pop
inc
or
movsb
cmpsb
inc
orl
repz
sub
mov
loop
mov
lret
xchg
cmp
outsb
inc
cmp
mov
cld
shld
les
jecxz
lods
lock
stc
rclb
sbb
inc
popf
push
cwtl
jo,pn
xor
or
mov
out
aas
insb
jle
mov
inc
leave
or
push
jl
inc
push
cmpb
or
lock
jmp
iret
test
sbb
add
ret
insb
cmpsb
xor
in
pop
popl
ja
jl,pt
pop
dec
jno
lret
mov
inc
sbb
jo
xchg
inc
inc
loope
movsb
jnp
jecxz
mov
test
fdivrs
getsec
call
lds
out
in
and
sti
repnz
push
jno
or
xor
bound
pop
test
in
mov
inc
shll
out
shll
fidivs
test
in
daa
stos
subl
cltd
jb
mov
or
adc
movsl
faddl
push
out
loope
mov
pop
cmp
jle
dec
cli
pushf
frstor
imul
pop
or
mov
jle
inc
fnstsw
daa
sub
fsubrl
outsb
adc
repnz
loope
push
jge
loopne
mov
dec
jge
jl
jp
jge
push
das
dec
sbb
aam
add
xor
xchg
in
adc
push
bound
shr
rclb
adc
add
test
or
sub
sub
or
pusha
pop
out
cmc
sbb
mov
pop
pop
push
push
out
mov
or
and
out
fwait
repz
push
fwait
mov
out
es
fmul
add
push
mov
into
lcall
data16
lock
lahf
mov
dec
mov
mov
stc
sbb
out
stc
imul
ss
sarl
rclb
xor
pop
xchg
repnz
nop
pop
adc
pusha
push
mov
xor
xchg
jb
adc
xchg
jb
imull
nop
add
add
mov
out
lock
sbb
dec
sub
js
xchg
cmp
lods
out
gs
inc
sbb
mov
rorl
outsb
in
xor
inc
test
mov
fbstp
insb
mov
and
mov
lods
jg
clc
sarl
imul
lret
int3
xchg
push
loope
in
xlat
mov
xchg
cmp
fcmovnu
pop
xorb
ficoml
xchg
leave
les
and
pop
xor
divb
sar
cwtl
pop
das
mov
jp
cwtl
xchg
leave
push
inc
mov
sub
out
lock
dec
sub
addr16
addr16
and
mov
sarl
cli
test
sbb
push
pusha
and
dec
pop
cmc
push
xchg
test
mov
adc
inc
cmp
cmc
repnz
popa
movsb
cmc
xchg
test
mov
enter
jbe
dec
and
xor
sub
jno
data16
aad
cmc
repnz
bound
cmp
lods
fisttps
sub
pushf
mov
notb
in
mov
xchg
and
pushf
adc
dec
mov
push
xchg
mov
mov
dec
sub
lock
out
or
je
cltd
and
sub
in
rcrb
inc
mov
cmp
mov
or
scas
sahf
scas
jg
jecxz
mov
push
test
cmpsb
mov
lods
xor
dec
and
xchg
xor
lock
pop
push
mov
ja
pusha
push
mov
outsb
xor
mov
push
lret
sbbl
imul
mov
shrb
xchg
shll
cmp
push
mov
sub
mov
sbb
xor
inc
fcmovne
jp
sbb
and
imul
push
rcrb
mov
es
and
push
iret
xor
lods
inc
mov
mov
push
add
mov
jle
mov
lods
fisttpl
gs
mov
fs
adc
add
sbb
dec
pop
dec
fcmovu
jg
js
push
lret
adc
pop
stos
fwait
sbb
adc
ret
mov
jp
popa
popa
setno
pop
out
pop
inc
mov
cmp
or
push
out
and
inc
mov
inc
sahf
sub
cmp
lcall
cmp
insl
call
gs
or
js
jecxz
pop
jns
xor
ret
ret
xor
xchg
bound
push
xor
bound
jne
jbe
mov
mov
jg
sbb
adc
xchg
dec
cli
push
inc
mov
sti
xor
mov
stc
test
sub
xchg
hlt
pop
daa
mov
cltd
jae
mov
cmp
iret
or
jmp
mov
mov
sub
and
adc
and
xchg
stos
out
mov
cmp
enter
lock
out
shlb
push
inc
and
sub
dec
shll
xor
shl
outsb
jp
inc
jge
mov
cmp
pop
jbe
pop
push
sub
dec
in
std
test
mov
pop
mov
push
sbbl
sub
testl
xchg
inc
mov
dec
push
push
mov
dec
adc
push
ret
ja
imull
xchg
cmp
push
mov
imul
jnp
mov
aad
sbb
sub
sbb
cmpl
das
cmc
iret
je
push
pop
gs
pop
mov
ja
sbb
int
and
fcmovnu
jno
ret
ret
negb
ljmp
out
jle
add
mov
stos
roll
daa
jns
add
pop
or
dec
adc
cwtl
repnz
xchg
xchg
jmp
test
or
adc
ds
inc
fbld
jle
inc
out
inc
test
js
xor
cmp
pop
dec
movsl
jb
dec
repnz
mov
push
iret
dec
xor
push
jne
push
repz
adc
xchg
data16
scas
add
mov
cmp
scas
cltd
out
fisubl
ret
or
popf
and
cwtl
inc
addr16
ror
fdivrs
mov
sbb
xor
xorb
lock
push
add
cmp
loope
aad
pop
inc
xor
push
popf
mov
stos
xchg
and
and
inc
rolb
mov
or
pop
orb
test
jne
into
push
addl
push
aam
pop
outsl
mov
xchg
mov
lds
in
xchg
insl
loop
movl
jmp
dec
mov
sarb
lock
jns
mov
flds
inc
dec
xlat
sbb
cmc
cmpsl
push
fnstenv
mov
mov
into
in
inc
cmp
jl
pop
jp
xchg
and
cmc
pop
cs
adc
cwtl
nop
stos
mov
enter
lahf
rcrb
aaa
sub
or
nop
add
cli
mov
sub
mov
mov
popf
in
lock
inc
in
decb
aaa
cmp
outsb
lcall
push
ret
lahf
dec
jns
jne
pop
jo
jmp
jmp
mov
push
leave
mov
adc
pop
dec
mov
pop
mov
xchg
mov
ret
sub
dec
mov
mov
je
mov
in
mov
stos
mov
jae
inc
lahf
pop
push
pop
aas
je
xchg
xor
xor
lods
inc
into
enter
mov
outsb
loope
xchg
out
dec
outsl
xchg
push
mov
xor
sbb
nop
xor
adc
nop
mov
add
mov
mov
add
jg
inc
hlt
repz
jecxz
aaa
inc
lods
lock
pop
jo
loop
sbb
ljmp
leave
add
lods
mov
stos
cwtl
inc
sub
mov
outsl
inc
hlt
fbld
pop
pop
test
cmp
loop
push
pop
add
shrl
and
or
mov
mov
ss
sbb
mov
scas
sbb
push
xor
jp
cwtl
out
cmp
jmp
and
sbb
out
xchg
sub
push
lds
mov
fwait
dec
push
inc
cmp
pop
push
shrb
das
addr16
and
pop
dec
mov
sar
and
and
icebp
imul
mov
in
pop
push
in
ljmp
in
lds
push
dec
ret
mov
xchg
mov
int
sbb
nop
stos
rolb
inc
pusha
stc
mov
add
int
sub
scas
lds
jns
in
aas
or
shl
adc
xchg
fimull
movb
mov
scas
sbb
adc
in
jle
jbe
nop
dec
iret
dec
add
mov
add
sub
imul
pop
xor
in
xor
enter
scas
dec
pop
adc
repnz
pop
add
fldcw
popa
sarb
into
adc
mov
push
in
lods
mov
jg
jge
test
xor
push
mov
sub
sbb
mov
dec
cmpb
add
mov
mov
les
lods
xchg
xor
sahf
ja
adc
mov
cmpsb
push
pusha
ja
xchg
das
gs
dec
lods
call
pop
push
dec
pop
mov
in
jg
jo
and
iret
xor
inc
rclb
adc
mov
mov
jnp
mul
test
mov
daa
add
int3
sbb
mov
lahf
testb
aaa
sub
sahf
stos
mov
mov
mov
or
adcl
and
cmp
cli
xchg
es
in
popa
lock
shlb
test
test
pop
outsl
sub
jecxz
lds
inc
subb
aaa
adc
add
or
bound
sarl
out
cmpsb
js
clc
clc
add
sbb
mov
cli
jecxz
aad
popa
mov
xchg
push
lcall
test
push
push
sub
test
imul
rcll
inc
fsubrs
test
mov
rcrb
xchg
xchg
xchg
cli
jle
mov
stos
fcomps
push
mov
repnz
iret
lahf
sub
sbb
imul
mov
rol
in
mov
and
push
cli
popf
mov
int
pop
sbb
popa
in
xlat
outsb
push
pop
popa
xchg
cmp
mov
inc
mov
popf
jle
je
aaa
inc
inc
push
sub
xchg
xorl
pop
lods
add
mov
int
mov
out
shl
sbb
or
mov
or
and
mov
daa
scas
dec
jnp
xchg
jnp
xor
mov
shlb
popa
jns
sbb
pusha
sub
sub
xor
fisubrs
mov
aad
mov
pop
push
insb
outsl
fistl
fisttpl
sbb
fsubs
outsl
out
out
popa
pop
jge
pop
fdiv
xchg
pushf
mov
in
add
pushf
orb
mov
pop
dec
inc
sarb
pop
insl
and
mov
jl
loope
or
imul
aaa
push
xor
test
dec
and
or
inc
mov
in
ljmp
outsb
in
loopne
pop
xchg
inc
and
cmpb
hlt
cld
jle
imul
scas
jne
mov
sahf
pushf
fists
mov
mov
lods
xchg
inc
hlt
jnp
es
je
icebp
xor
ret
popf
push
push
xor
adc
outsl
outsl
arpl
jns
adc
sub
loopne
pop
xor
pop
jmp
xchg
pop
dec
sbb
int
ficoms
jmp
divb
leave
pop
test
mov
stos
jp
dec
and
out
adc
pop
lcall
addr16
mov
lea
mov
dec
push
lods
fidivs
xchg
rcl
dec
push
add
sahf
inc
jns
mov
icebp
cmc
into
enter
lret
and
pop
imul
pop
lds
in
add
sbb
or
outsb
pop
jnp
push
mov
test
dec
mov
fdivl
sti
cltd
hlt
push
mov
sub
mov
and
lret
or
jle
pusha
cwtl
cmpsl
ljmp
and
shlb
dec
mov
jne
repz
mov
mov
inc
cwtl
arpl
xchg
mov
mov
jnp
insb
stos
lahf
aad
cld
sbb
adc
in
and
fistpl
mov
ljmp
add
fwait
nop
movsl
int3
out
in
lret
mov
shlb
idiv
pop
jle
rcrb
mov
or
pusha
mov
dec
xchg
sub
xor
sbbb
mov
cli
dec
jecxz
arpl
adc
cmpsb
fists
jecxz
add
dec
inc
lret
inc
addl
andb
adc
fcoms
push
adcl
dec
dec
dec
and
mov
pop
xchg
shrb
std
pop
insl
jo
pop
cld
lods
mov
int
or
mov
daa
jle
dec
clc
dec
mov
xor
mov
lahf
loope
das
mov
dec
dec
das
sub
shrl
shll
add
jbe
sub
xor
pop
in
gs
pop
icebp
cmp
pop
mov
int3
add
sub
add
pop
je
mov
cmpsl
mov
push
mov
sub
dec
jne
mov
es
cmp
and
bound
or
xchg
in
mov
les
testl
xlat
push
scas
mov
mov
jl
mov
cmpsl
xor
cwtl
xchg
stc
mov
sub
fucom
into
das
cld
icebp
lea
test
loopne
sub
mov
lcall
mov
in
lds
in
mov
shll
adc
clc
mov
subl
call
mov
push
mov
pushf
push
sbb
pop
mov
sbb
mov
push
jnp
shrl
or
or
mov
imull
sti
adcl
inc
mov
call
add
mov
insl
push
sarl
or
frstor
jl
ret
lahf
imul
sub
jmp
das
outsl
adc
cmp
mov
repz
test
or
call
popa
xchg
es
sbb
and
cmpsb
or
push
jge
into
das
loopne
int3
dec
xor
jle
jnp
fdivr
ja
fwait
adc
adc
stc
dec
pop
imul
push
ret
cltd
mov
setne
mov
popf
pop
ja
fs
stc
xchg
pusha
or
and
imul
les
test
adc
mov
std
xor
insb
orb
xor
and
jae
sbb
fsub
mov
lock
leave
or
jge
jne
sti
shrb
das
int3
out
mull
jl
int
push
outsl
in
aam
inc
sbb
inc
sbb
jp
fists
mov
sti
pop
into
xchg
scas
dec
lds
popa
js
subb
add
push
xchg
ljmp
jne
or
sub
or
mov
jmp
cmpsl
outsb
xlat
push
loopne
mov
inc
ss
outsb
fsin
mov
pop
mov
add
cli
push
jbe
popa
sub
inc
add
psubd
cmc
pushf
sub
fnstenv
xchg
out
iret
mov
and
sbb
loopne
test
inc
sbb
push
daa
bound
mov
repz
rcrb
jle
mov
in
add
es
rcrb
push
insb
jno
pop
mov
xchg
push
test
stos
cld
fst
pop
cmc
test
pusha
sub
fildl
or
mov
dec
ficoml
inc
ljmp
pop
scas
add
or
push
insb
mov
xchg
out
cltd
int3
lret
repnz
leave
or
sbb
fistps
push
cmp
pop
mov
xor
cmc
dec
in
cmp
pop
jmp
dec
jmp
repz
mov
stc
xchg
test
mov
subb
sbb
push
pop
or
pop
cltd
icebp
dec
mov
movsb
lret
mov
test
repz
inc
lods
cli
sbb
leave
push
or
jne
push
mov
scas
dec
dec
popa
jns
jbe
add
mov
jne
scas
es
sbb
fmull
sbb
js
clc
enter
fmuls
jecxz
mov
dec
push
insl
rorl
cmp
cmp
or
int3
insb
cmp
ret
movaps
nop
or
out
sbb
add
pusha
push
pop
popa
mov
sbb
xchg
mov
jnp
and
sub
adc
fdivr
push
inc
imul
cmp
xchg
adc
xor
mov
into
mov
daa
adc
mov
push
out
and
and
ljmp
aad
stc
mov
rcrl
out
int
pop
cmpsb
mov
xchg
jns
jecxz
mov
fsubrs
addl
stos
jmp
inc
arpl
mov
into
hlt
flds
or
pusha
inc
jo
icebp
call
cld
scas
sub
lock
dec
dec
mov
in
cwtl
mov
les
pop
cmp
mov
gs
sbb
mov
fldl
mov
jl
pushf
dec
push
add
push
mov
and
std
xchg
xor
jns
jb
xchg
mov
into
mov
mov
xchg
test
jno
push
cwtl
ljmp
enter
jnp
pop
subb
inc
ror
adc
orl
inc
loop
es
inc
xchg
mov
loop
lds
int
sbb
xchg
sti
pop
fwait
popa
ds
adc
mov
push
sub
ljmp
aas
insl
lock
pop
cmp
loop
dec
mov
sub
xor
fisttps
jl
jb
or
cmp
iret
mov
inc
inc
jne
sub
pop
sbb
xor
mov
inc
jge
test
pop
dec
popa
jp
push
lock
add
inc
fdivrs
xchg
ja
pop
dec
decl
mov
pop
sbb
out
mov
adc
push
aad
test
insb
xchg
enter
out
fsubrp
shufps
mov
sbb
cmpsb
sub
aad
mov
sti
or
ret
stos
sbb
outsb
rcl
mov
add
shlb
inc
jbe
pushf
sbb
jnp
sbb
inc
lea
adc
repnz
xor
aas
inc
shr
mov
stos
lods
jo
sub
xchg
sbb
aas
bound
xor
push
or
mov
mov
les
cmp
rolb
outsl
mov
pop
imul
shl
and
notl
fs
xchg
int3
icebp
sub
xor
push
int
mov
jbe
stos
ret
jmp
mov
jae
scas
dec
arpl
cs
nop
in
icebp
mov
sbb
cwtl
lret
into
xlat
into
xor
fiadds
sub
movsl
shll
leave
dec
sub
mov
xchg
push
xchg
rcr
cltd
ljmp
incl
bound
dec
stos
mov
xor
scas
int3
xchg
popf
mov
push
decb
shrl
fwait
xchg
enter
pop
xor
pushf
cld
lods
pusha
insl
jmp
scas
jae
sbb
push
loopne
scas
fistpl
addr16
push
xor
and
cwtl
pop
dec
adc
lcall
popf
jle
push
pop
icebp
push
nop
sbb
xchg
mov
pushf
xor
movsl
lcall
xchg
es
fs
pusha
dec
mov
push
and
and
xchg
jns
test
imul
sbb
xchg
adc
adc
stos
xor
cmp
push
fsubrs
fists
popf
inc
adc
sub
stc
decl
gs
xchg
mov
in
xor
pop
or
scas
sub
stos
stos
test
or
jno
push
scas
sbb
arpl
mov
out
out
xor
xchg
push
push
sub
pop
in
loope
cmc
add
pushf
mov
das
push
loopne
jmp
loopne
cmp
adc
xor
jp
mov
shl
movsb
pop
pop
push
adc
arpl
cmc
sub
imul
scas
sbb
pop
sub
lcall
stc
insl
repz
sbb
push
or
sbb
jge
int
pop
mov
stos
sar
cmp
mov
pop
push
stos
cld
je
or
incb
inc
xor
sbb
lock
repz
pop
sub
lds
sub
push
cmc
fstpl
sbb
sub
dec
pop
mov
push
cmc
dec
ss
mov
aam
dec
in
xchg
mov
repnz
test
nop
sbb
arpl
enter
sub
addr16
jns
inc
test
or
cmp
mov
aaa
sbb
lahf
dec
adc
push
cmp
dec
add
push
add
xchg
lods
repz
call
into
shlb
jbe
scas
cmc
mov
sbb
fisubrs
fs
and
scas
sbb
xchg
into
fnstcw
cmp
pop
or
stc
jge
xorb
ljmp
sbb
filds
inc
scas
movsl
ss
cld
popa
and
push
pop
jg
in
into
jnp
mov
sub
lds
push
in
jl
xor
rclb
jno
push
mov
mov
test
mov
sahf
jns
mov
aam
and
jne
pop
jne
mov
mov
je
mov
inc
dec
sbb
mov
inc
add
movsb
pop
mov
xchg
mov
cmc
jbe
adc
ljmp
inc
std
or
jb
ret
push
fs
orb
or
ja
inc
stos
shrl
cmc
dec
add
push
adc
test
insb
sub
adc
mov
jmp
cld
xor
xchg
lods
mov
mov
add
shrb
mov
iret
or
inc
cmpl
adc
pop
xchg
jmp
inc
ja
xchg
xchg
xchg
xchg
addr16
dec
mov
and
add
cmp
sub
lcall
pop
dec
aad
add
cmp
rol
arpl
add
bound
out
xchg
ljmp
daa
std
out
popa
jecxz
lea
pop
divb
fidivrl
mov
jg
pop
lret
add
notb
add
xchg
push
int3
pusha
insl
cmc
push
cs
jnp
xor
mov
or
fidivrl
test
xchg
sub
sbb
ja
inc
add
mov
imul
shll
and
dec
rcll
sub
xor
adc
int3
dec
imul
add
shr
gs
inc
sub
negl
and
lcall
repnz
loop
pop
add
or
xorl
mov
sbb
aad
aam
sub
sbbb
cmpsb
mov
cmpsl
notl
cs
mov
cmp
mov
and
aaa
mov
cmp
clc
pop
sbb
push
les
adc
lea
test
pop
pop
rcr
lahf
add
out
xchg
jo
lahf
xchg
iret
adc
sub
pop
movsb
or
in
sbb
push
cld
lret
pop
loopne
cmc
xor
or
mov
rolb
mov
mov
mov
stos
jb
xchg
popa
inc
jnp
call
fwait
lods
mov
xor
rcr
mov
sbb
inc
popa
imul
or
cmp
jmp
and
cwtl
add
pop
jle
leave
inc
push
mov
or
lods
ror
pop
dec
outsb
loope
mov
pop
and
jle
inc
xor
sbb
and
imul
addr16
xchg
mov
nop
fdivp
into
sub
sub
cmp
daa
fs
adc
cld
xor
in
iret
inc
iret
into
jge
push
repnz
fisubl
jle
or
notb
outsb
mov
jb
stc
mov
push
sbb
jle
xchg
jbe
cmp
in
sub
dec
rcrl
scas
push
jo
mov
or
jl
mov
jbe
into
addr16
pop
push
scas
sub
inc
or
dec
int
movaps
leave
push
mov
cs
sub
jns
insb
xchg
enter
inc
cmp
or
push
push
sbb
repz
loopne
mov
test
outsb
or
repnz
or
lea
mov
mov
or
rorb
outsb
leave
fidivs
and
lods
xor
add
aas
cmp
inc
mov
xchg
movsb
pop
mov
out
lahf
es
push
push
cli
or
test
adc
mov
lods
add
jnp
je
mov
xchg
cli
jnp
mov
scas
aam
mov
test
insl
xlat
push
mov
pop
dec
pop
push
sbb
push
fsubr
fwait
pop
pushf
xchg
std
inc
jp
or
pushl
stos
cmpsl
test
lahf
cmp
add
xor
fsubl
ds
inc
dec
and
add
clc
popa
or
sub
pop
jnp
sarl
dec
clc
aad
incl
lcall
arpl
repnz
ljmp
aas
mov
aaa
adc
push
xchg
add
xor
adc
aam
push
orb
pop
inc
sub
dec
xchg
pop
mov
imul
mov
lock
int3
dec
outsl
adc
xor
daa
lret
xor
jg
test
xchg
jmp
cmp
mov
lock
jnp
and
lods
lods
cmp
inc
gs
sbb
rcrb
shll
xchg
mov
xor
xchg
sbb
enter
mov
daa
dec
test
mov
and
or
xchg
push
fidivs
xor
aas
rcrl
cmp
jo
push
in
or
ficoml
mulb
fwait
jo
push
lods
sahf
cmpsb
add
nop
sub
fcmove
test
adc
fistl
popf
jmp
cmc
iret
cli
or
jmp
test
xchg
add
sbb
subb
jno
in
mov
loop
mov
stos
ss
add
imul
xlat
lds
xor
adc
jmp
cmp
jle
sbb
xlat
fldt
mov
sub
cmpsb
and
into
les
xchg
rcll
cltd
xlat
lds
cmp
aas
xchg
in
push
ds
lea
pop
test
xchg
jo
test
cltd
jo
stos
xchg
pop
push
mov
sarl
sub
sahf
xor
arpl
jno
push
repnz
rorl
mov
iret
push
mov
jns
push
pop
mov
mov
movsl
or
cmp
jmp
into
mov
cmp
pop
popf
jmp
inc
adc
pop
sarb
outsb
mov
loope
dec
add
cmp
test
or
or
pop
nop
addr16
pop
aas
sbb
cmp
push
fnsave
sti
and
mov
outsb
xchg
ljmp
jns
popl
push
lret
clc
xchg
ss
or
pop
int
jbe
loope
jne
push
cmp
sbb
shr
popa
push
jo
iret
outsl
push
cmp
pop
cmc
rcrl
pop
xchg
adc
repnz
pushf
jbe
sbb
adc
rorl
loopne
push
in
push
sub
push
dec
mov
in
xchg
test
pop
sbbl
mov
mov
xchg
or
push
sub
cltd
mov
adc
movsl
add
out
fildll
bound
pop
cmp
push
rorl
je
add
mov
jb
fldenv
test
jns
es
push
sbb
sub
mov
jnp
ljmp
hlt
mov
add
add
repz
fs
push
xor
mov
hlt
insb
mov
sub
push
push
mov
pop
stos
mov
rcl
dec
jle
or
outsl
xchg
inc
pop
mov
cmp
das
sti
data16
xchg
fld
dec
push
mov
js
lcall
lods
out
cmp
lods
aad
or
shrl
adc
push
hlt
cmp
ret
arpl
pusha
vpsraw
pop
mov
mov
push
iret
xor
movsl
inc
popa
add
dec
or
and
mov
inc
in
bound
xor
mov
std
mov
xor
or
test
mov
ja
add
pop
sub
xor
adc
add
movsb
cltd
or
mov
jne
cmpsl
fs
lret
stc
fdivrl
xchg
cltd
fwait
and
mov
aad
add
sbbb
mov
mov
cmp
loop
outsb
ja
adc
pop
xchg
jl
cmc
pop
fldenv
mov
sti
iret
ds
aad
mov
test
out
add
test
pop
xchg
add
adc
lods
sbb
scas
jo
mov
dec
js
iret
cld
fisubrs
and
outsb
and
imul
jns
adc
push
cli
rcl
jl
cmp
push
sbb
dec
mov
and
pop
xchg
xlat
mov
push
inc
mov
xchg
sub
call
sub
int3
out
js
adc
inc
mov
pop
add
pushf
mov
jge
sarb
jmp
jmp
repz
out
pslld
fisttpll
adc
and
pop
loope
shlb
lret
cmpsl
int3
add
cmc
test
mov
add
js
rorl
out
cmp
int
inc
fcoml
mov
popf
subl
enter
popa
xchg
mov
aad
or
and
pop
push
outsl
adc
fwait
cld
pop
sbb
mov
jg
or
cltd
jp
jle
roll
lods
lods
sub
xchg
inc
insl
inc
dec
stc
dec
mov
test
dec
sbb
sub
das
and
mov
es
xchg
xor
fisubl
mov
push
sti
insl
cltd
xor
cwtl
add
mov
add
xor
inc
cld
bound
cmc
aam
cmp
addr16
stos
push
inc
jg
test
bound
sahf
mov
fidivl
mov
out
inc
dec
dec
rclb
rcr
pcmpeqw
lcall
fcmovnb
and
jb
mov
pusha
call
jecxz
inc
cld
and
imul
xor
jp
daa
aad
ljmp
mov
push
test
test
jmp
rsm
adc
cmp
or
jp
cwtl
add
xchg
mov
clc
push
inc
inc
addr16
enter
gs
jno
sbb
inc
inc
fdivl
sbb
push
popa
ret
sbb
popf
add
lcall
cmp
mov
sub
sbb
and
inc
mov
stc
push
gs
movhps
dec
push
cmpsb
push
insb
dec
dec
notl
addl
int
es
sbb
xor
notl
icebp
dec
mov
sub
add
stos
subb
lock
insb
mov
not
scas
sub
les
push
mov
nop
repz
push
mov
mov
jne
fs
ret
inc
xlat
clc
mov
fiadds
jnp
push
mov
mov
repnz
or
mov
jmp
ja
or
lret
pop
lea
push
addr16
ljmp
dec
scas
faddl
cmp
inc
stc
jecxz
mov
leave
inc
or
shll
add
mov
sbb
sbb
rolb
in
scas
mov
lods
imul
jae
inc
and
dec
cli
mov
mov
cmp
mov
jp
es
repz
xchg
movsl
push
addl
jl
lahf
sbb
pushf
inc
jbe
hlt
xor
or
mov
pop
nop
mov
mov
inc
sahf
scas
push
mov
jno
xor
mull
adc
call
xchg
das
scas
dec
lret
int3
mov
lret
mov
fucom
icebp
ss
pop
push
pop
pop
out
pop
dec
inc
insb
movb
aaa
xor
and
pop
sbb
orb
sbb
push
mov
shll
mul
push
ss
das
rcrl
outsb
scas
aas
xchg
lods
and
out
mov
in
cmc
cmp
ficompl
inc
cmp
out
mov
add
sbb
xchg
out
mov
inc
pusha
into
inc
mov
stos
jmp
nop
movsb
cmpb
jbe
xor
gs
mov
fcom
call
mov
mov
std
push
pop
push
fidivl
rcll
test
popf
and
jno
sbb
mov
jge
mov
and
mov
cld
inc
sub
shrb
pop
and
add
js
xor
xor
rclb
mov
scas
xchg
and
nop
xchg
enter
popa
add
sub
js
faddp
aad
or
dec
outsl
lret
or
xchg
xchg
or
push
xchg
cmp
stos
lret
int3
mov
and
sub
adc
fs
mov
adc
sub
push
sub
imul
mov
xchg
xor
or
mov
jb
mov
and
sahf
or
loopne
aas
push
pushf
into
jg,pn
lret
pop
push
xchg
js
rclb
mov
jecxz
je
push
je
xor
stos
fdivrs
or
cli
sbb
aaa
mov
call
fstps
jge
sub
call
push
int3
adc
iret
pop
push
cmpsb
or
sub
xchg
lea
push
push
dec
lret
mov
add
fstp
add
jl
pop
cmp
mov
push
jno
daa
hlt
push
mov
and
sub
pop
nop
mov
push
pushw
fimuls
das
shll
add
data16
pop
push
cmp
sbb
div
xchg
inc
dec
mov
inc
sub
xor
adc
push
sbb
in
jge
sbb
data16
cwtl
fsubp
dec
mov
ljmp
movntq
mulb
pop
mov
test
lret
jp
adc
or
loope
sbb
cld
cli
test
cmpsb
lahf
les
pop
mov
jge
cs
pusha
and
out
cmp
sub
add
mov
ljmp
mull
iret
faddp
mov
mov
jmp
je
dec
sbb
mov
sub
adc
and
mov
mov
xchg
inc
bound
icebp
and
ss
jle
mov
mov
imul
addr16
mov
addl
dec
pop
jnp
mov
add
pop
out
loop
popa
jge
and
cmpsl
mov
dec
sahf
adc
or
insl
inc
into
mov
jg
mov
inc
jbe
lret
pop
push
dec
insb
mov
inc
in
jbe
into
data16
stc
repnz
lahf
stc
test
cmp
in
sbb
das
aaa
lret
lea
push
xchg
filds
mov
xchg
repnz
xchg
call
mov
inc
cwtl
sbb
cmp
stos
inc
mov
ja
leave
push
xchg
stos
insb
mov
mov
mov
push
cmp
call
dec
out
adc
insl
add
iret
pop
mov
daa
or
movsl
ficoms
inc
mov
scas
and
xchg
adc
pushf
pop
xor
mov
dec
pop
gs
insb
loope
das
pop
xor
pop
stc
cmc
dec
scas
jle
fwait
shll
and
cli
lock
mov
push
mov
fucomip
xor
ret
fidivl
andb
xchg
ret
add
or
jb
push
push
iret
scas
cmp
and
lea
scas
sub
stos
das
outsl
jae
adc
mov
sti
clc
fdivrl
ret
push
popf
test
aaa
mov
push
out
popa
jae
jle
jle
ret
mov
cwtl
les
mov
movsb
in
pop
mov
and
inc
xor
imul
sub
pop
call
cld
push
xchg
enter
inc
mov
adc
push
daa
mov
push
mov
lcall
or
std
sub
in
stos
fisubl
mov
popf
push
stos
mov
inc
xchg
fdivrs
cmp
sbbl
mov
sbbb
jnp
ljmp
xchg
sub
mov
fiaddl
cmp
jb
push
mov
dec
xchg
mov
out
jns
cld
clc
jmp
rclb
and
sub
jg
clc
and
cmpsb
stos
and
jne
sbb
cs
mov
mov
push
es
mov
mov
xchg
xchg
mov
and
push
xchg
fimuls
dec
imull
jne
adc
cmc
cmp
ja
or
sub
stc
mov
mov
bound
repnz
sbb
out
icebp
popf
push
mov
adc
inc
sbb
sub
test
cltd
std
mov
data16
mov
arpl
in
test
in
fldenv
dec
lds
push
enter
lcall
and
iret
jecxz
cmpsl
loop
dec
xor
and
xor
stc
push
xchg
stos
daa
int3
xchg
jmp
sbb
push
test
mov
shr
pop
movsl
je
inc
lret
pusha
rorb
inc
inc
cmc
lret
scas
int
add
or
addr16
and
sbb
mov
rcrb
push
push
sbb
js
mov
aam
inc
gs
nop
push
push
and
cmpsb
mov
mov
xchg
dec
or
ret
pop
test
add
ja
fcoml
inc
daa
mov
push
cwtl
jge
jns
mov
dec
clc
sbb
addr16
jns
lods
int3
lahf
cltd
int3
push
mov
fldcw
jne
mov
push
sub
lods
push
leave
dec
cmp
cmpsb
gs
and
sti
and
mov
adc
xchg
push
jo
imul
mov
scas
add
xchg
adc
out
dec
cli
cwtl
dec
pushl
mov
adc
loop
mov
mov
andb
and
xchg
aaa
xchg
xor
cmp
popf
ss
sarb
ja
push
dec
dec
sub
sub
cmp
push
inc
ja
pop
ss
inc
dec
jb
divb
sub
test
es
jg
fisttps
test
jbe
lret
mov
insl
js
inc
inc
fiadds
and
dec
xchg
mov
icebp
mov
sbb
popf
shlb
jl
rclb
pusha
jbe
mov
sbb
aad
shr
dec
out
sti
in
fldt
mov
dec
pop
aam
int3
mov
mov
push
jmp
dec
or
and
xor
cltd
fiadds
bound
and
jo
mov
sub
add
rcll
xlat
xchg
int3
mov
push
push
pop
int
ficompl
outsb
sub
test
nop
inc
cmpsb
mov
mov
xchg
call
lea
addr16
ret
mov
push
out
mov
push
xor
mov
mov
shl
test
lock
xchg
cli
cmpsl
das
test
mov
push
jle
shrl
xchg
push
add
mov
push
add
sbb
pop
xchg
in
idivb
out
in
xchg
push
subl
into
mov
test
fdivrl
shll
sub
adc
jmp
into
mov
mov
jae
sub
mov
jbe
ja
pop
sub
dec
mov
out
jne
call
mov
pop
lcall
inc
lock
je
jno
fildl
in
dec
hlt
adc
xchg
sbb
jo
cli
jb
pop
bound
xchg
sbb
out
mov
xchg
lret
shlb
imul
mov
add
daa
out
and
or
outsl
or
push
shlb
cs
scas
fwait
mov
sbb
fwait
mov
adc
insl
jp
push
stos
push
movsl
jae
add
cmp
mov
or
cmp
enter
aam
xchg
ss
pop
es
pop
xchg
push
adc
icebp
and
nop
push
jg
sub
adc
arpl
int3
sbb
push
add
fwait
cld
jb
aad
sub
jle
adc
pusha
popa
fimull
and
mov
in
lret
dec
dec
outsb
push
jno
lds
test
jnp
bound
cmp
dec
jg
hlt
adc
jns
negb
mov
push
outsl
mov
dec
xor
pop
sbbb
xlat
push
repz
fdivp
aad
jl
rcr
or
scas
aas
lret
mov
xorb
fnstsw
sub
jno
cmpsl
adc
push
je
lea
mov
lock
scas
mov
fisttpl
cmp
mov
test
sbb
fs
lds
xor
inc
mov
clc
jb
xlat
cli
dec
stc
xorb
jno
stos
push
cmpsl
dec
mov
dec
xchg
insl
aaa
dec
outsb
in
pop
iret
stc
icebp
fs
test
loope
or
inc
jmp
fnsave
mov
inc
stos
popa
add
or
pop
outsl
jg
icebp
in
mov
fwait
jo
jns
push
popa
ja
jne
movsl
cmpsb
int3
cmp
cmpsl
out
loope
add
dec
pusha
mov
add
sub
cmp
lods
inc
inc
mov
fwait
nop
xchg
xor
pushf
or
jae
lds
sar
pop
xchg
xchg
faddl
test
lahf
mov
inc
in
xor
aad
mov
outsb
push
out
or
and
xchg
and
adc
mov
sub
mov
pop
sub
addr16
inc
push
inc
inc
jbe
or
movsb
lds
push
stos
stos
sbb
or
sbb
push
or
rclb
jecxz
sub
sub
adc
test
jmp
cmp
inc
outsl
imul
mov
aad
repnz
xchg
or
and
fwait
test
jecxz
nop
cs
cmpsb
jnp
and
jns
push
in
in
insl
push
int
cmpl
imul
dec
push
xor
in
jg
push
jmp
hlt
popf
xchg
xchg
sti
mov
fiaddl
mov
cmp
push
arpl
jg
adc
xchg
pop
imul
cld
jmp
pop
es
push
xor
add
nop
push
xchg
xlat
lods
jp
xchg
add
je,pn
popf
test
pusha
cmp
idiv
push
mov
icebp
mov
in
mov
mov
loope
jg
add
pop
fwait
mov
sbbb
lds
mov
cmp
stos
sahf
jl
add
cli
and
lret
mov
inc
int3
lods
inc
mov
test
pop
add
sub
pusha
xor
lcall
xor
std
sub
scas
adc
sub
addr16
int3
xor
push
add
jmp
mov
lock
mov
divb
cld
cmpsb
fildll
jne
jl
push
shrb
sub
jne
xor
cmp
leave
movsb
cmpsb
or
cmp
sarb
arpl
daa
int
push
aam
xlat
hlt
rorl
out
insb
bound
lcall
dec
sbb
imul
adc
inc
adc
inc
clc
int3
fcoms
popf
push
in
leave
sbb
nop
icebp
cli
dec
and
mov
adc
adc
adc
seta
leave
push
lods
mov
test
js
fstpl
push
jecxz
adc
cmpsb
jmp
adc
or
pop
test
mov
jmp
sub
outsb
adc
inc
sub
xchg
outsl
fistpll
out
or
lret
mov
sti
xor
or
mov
outsl
jae
fiaddl
add
sub
sub
xchg
and
mov
sbb
dec
push
and
sti
pop
mov
pop
pop
or
mov
mov
leave
mov
bound
rcrl
notl
pop
sahf
push
adc
pop
pop
adc
pop
cmc
add
outsb
sub
adc
call
dec
ret
and
lahf
sub
jnp
add
dec
pop
repnz
xchg
mov
sti
dec
sarl
mov
gs
in
add
jp
mov
std
repz
shlb
out
insb
fistps
dec
aaa
mov
loop
push
dec
sub
movsb
dec
fistpl
mov
jo
and
mov
sub
mov
jle
repz
cli
mov
scas
loope
imull
int3
add
or
inc
mov
inc
jmp
inc
xor
aaa
arpl
mov
aaa
lret
out
test
sbb
pop
movsb
out
fnstenv
idivl
or
inc
jnp
inc
pshufw
repnz
gs
arpl
jne
int3
pop
int3
fists
lcall
mov
xlat
lcall
iret
movsb
dec
jne
sti
or
ret
movsb
sub
mov
mov
push
test
dec
nop
xchg
aas
div
test
sarl
pusha
loopne
fcmovu
mov
mov
push
inc
pop
jge
stos
ljmp
or
lds
sti
out
popa
xchg
data16
dec
bound
mov
and
or
add
cmp
sub
sbb
adcb
in
mov
pop
das
add
pop
jp
xor
addr16
repz
orb
push
xchg
cmpsl
stc
test
xchg
or
xor
test
dec
sub
gs
jb
sub
ret
fcmovnbe
sub
dec
and
jns
jns
gs
scas
jo
mov
pop
push
pop
aas
aam
pop
sub
cmp
scas
mov
sub
mov
rcl
sbb
call
add
add
scas
push
cmp
repnz
dec
rclb
mov
jg
mov
pop
xor
test
ljmp
into
jp
insl
mov
pop
sub
fxch
mov
in
lahf
test
cltd
xchg
push
adc
and
push
daa
jae
add
and
bound
jb
fs
pop
loop
dec
stos
and
aad
popf
fsub
mov
shlb
sub
mov
movsl
idivl
out
cmp
das
outsb
out
scas
push
clc
xor
xchg
lods
jb
test
pop
cli
loopne
lods
cmc
andl
js
mov
insb
daa
xor
out
sbb
xchg
test
push
std
cmp
xchg
arpl
mov
jbe
repz
push
push
jbe
loopne
lock
dec
aas
jnp
in
loope
aas
lcall
mov
push
sbbb
stos
dec
adc
and
inc
push
jmp
push
gs
jns
jge
popa
lcall
mov
jne
xchg
xor
insb
sbb
pop
mov
or
xor
out
lds
scas
addr16
inc
xor
sub
aas
or
cmc
cmp
jo
cmc
into
and
mov
repnz
out
xor
insb
ljmp
pop
out
mov
jnp
xchg
inc
cmpsb
int3
or
or
mov
scas
sbbl
mov
cld
xchg
sub
xchg
cmpsl
and
and
test
fistl
repz
xlat
cli
je
out
mov
ljmp
mov
test
push
mov
mov
or
cmc
movsl
in
and
shrb
jmp
hlt
insl
mov
int
sbb
xor
cwtl
in
cmp
js
movsl
xor
js
jecxz
cmp
sub
jae
push
xor
jnp
sub
fidivl
cmpb
clc
insl
add
jno
xchg
mov
push
mov
int
push
xorb
aad
xchg
scas
dec
cmp
testb
or
pop
jmp
pop
pop
jae
daa
addr16
push
icebp
adc
int3
negl
fistpl
xchg
pop
push
cld
mov
and
mov
leave
lret
adc
cmpsl
js
mov
jns
adc
xor
push
lods
jp
and
stos
xchg
cmpsl
out
pop
dec
test
stos
dec
jmp
mov
sti
adc
lcall
xchg
mov
xchg
push
stc
mov
int3
push
inc
pop
aas
hlt
add
imul
lcall
dec
sbb
insb
out
jl
fwait
mov
stos
pop
mov
es
sub
fnstcw
add
enter
test
fidivrl
repz
lcall
sbb
xchg
dec
xor
mov
jae
jne
xchg
stos
adc
jo
aas
push
je
xor
xchg
aas
jecxz
clc
sti
test
lret
enter
push
sbb
nop
mov
pop
repz
mov
push
mov
push
ror
repz
shll
push
mov
jp
pushf
ret
sub
pop
pop
aaa
dec
or
ficoml
test
push
add
dec
cwtl
ror
adc
inc
loopne
fisttps
push
add
leave
fdivl
inc
mov
inc
flds
push
les
xchg
cmp
icebp
push
push
pop
cli
or
decb
pop
sub
mov
or
insb
imul
and
ja
lds
stc
stos
data16
aaa
add
mov
dec
rcll
cmp
xchg
sarb
mov
sar
aaa
add
addr16
xchg
sbb
arpl
push
rclb
cltd
test
jge
gs
sar
syscall
daa
mov
push
mov
and
cltd
hlt
cmp
orb
sbb
xor
jge
jnp
push
jno
dec
sub
lods
adc
and
fists
sub
fisubrs
fisttps
sahf
mov
ja
imul
ror
push
jg
cmpsl
or
mov
lock
sub
push
aad
push
cltd
lods
das
shlb
inc
push
pop
jno
arpl
test
adc
lods
sub
pop
ja
fldenv
add
dec
xor
mov
ret
dec
arpl
mov
cltd
jmp
sub
xchg
mov
enter
cmc
or
fdivrl
jbe
and
jge
cmp
inc
adc
xor
and
mov
sbb
int3
jbe
mov
dec
leave
pusha
xor
and
shll
in
sar
lods
fxch
add
flds
in
out
inc
push
aaa
adcb
jno
outsb
dec
mov
push
push
lods
mov
cmp
gs
test
mov
jle
dec
ficomps
mov
pop
cltd
subb
scas
adc
data16
push
inc
mov
scas
sub
jnp
cmp
int
repz
jmp
addl
mov
movsl
outsl
pop
push
dec
xchg
push
sub
lea
adc
xorl
pop
sbb
hlt
mov
pop
ret
insb
adc
hlt
pop
push
nop
inc
in
dec
imull
dec
pop
dec
cmp
js
out
mov
mov
or
shr
hlt
hlt
std
and
dec
xchg
out
outsl
push
jns
hlt
ficoml
aad
das
xor
pop
jp
sbb
adc
mov
pop
scas
fsubs
xchg
fldz
adc
jmp
add
adc
popa
testb
inc
cmc
rcr
adc
xor
jg
stc
push
fsubr
and
or
pop
add
push
sbb
cmp
dec
dec
pushf
mov
lahf
mov
lock
mov
pop
jb
lahf
sub
sti
fcmovne
out
fcoml
sub
insl
and
jne
push
data16
push
xlat
pop
ja
in
mov
jbe
mov
nop
xor
and
mov
push
dec
orb
push
jns
cmp
in
mov
mov
and
and
es
inc
cwtl
rcll
adcb
pop
call
mov
cmp
cmp
mov
icebp
and
popa
into
inc
aaa
cltd
xorb
dec
fisttpll
nop
cmpsb
and
iret
shrl
xchg
xchg
ljmp
add
divl
sub
mov
inc
jecxz
or
cltd
and
push
das
mov
pop
mov
mov
mov
data16
xchg
stos
sub
lahf
push
stc
inc
insb
bound
jns
mov
pop
in
mov
or
rcrl
mov
insb
cltd
enter
icebp
insb
xchg
or
or
pop
jno
dec
adc
mov
out
mov
mov
add
mov
int
sbb
jmp
mov
sbb
lret
lret
sarl
inc
not
sahf
fisubrl
fdivs
mov
insl
push
bound
out
out
inc
insb
dec
test
xor
arpl
jg
sbb
idivl
xor
adc
push
inc
loopne
lret
dec
push
outsb
jp
push
setle
enter
sbb
and
pop
mov
cmc
enter
push
shr
imul
das
dec
pop
add
push
out
aam
jns
sbb
jb
das
mov
ljmp
in
push
adc
push
push
out
sub
mov
add
insb
jle
dec
and
hlt
jb
mov
pop
int3
mov
add
jmp
jl
leave
push
cld
or
dec
xor
mov
and
sub
mov
add
test
xor
ret
loop
sub
out
xchg
push
sub
test
jne
push
mov
cmc
xchg
mov
or
xchg
sub
sahf
ss
xchg
pop
mov
fwait
adc
or
lret
cmp
mov
cld
cmc
outsb
cmp
jg
negl
and
adc
cmp
inc
mov
cli
les
jbe
scas
aaa
xchg
and
pop
mov
je
fsubl
sub
lock
add
cmpsl
sub
mov
or
xchg
jo
dec
push
inc
jecxz
mov
filds
pusha
cmp
clc
ljmp
fmuls
mov
inc
mov
out
aaa
jne
fbstp
lret
mov
pusha
in
pop
lcall
mov
or
mulb
add
rolb
jae
add
movsb
movsl
cwtl
dec
addl
xor
fimuls
sub
data16
fnsave
mov
insb
jae
inc
rcrl
mov
jmp
loop
or
rcrb
dec
fsubs
cmp
xor
mov
jo
pop
xor
sub
sbb
ss
jnp
out
sub
sub
xor
fwait
imul
push
aam
aad
xchg
lcall
cmc
mov
pop
movsb
cli
scas
and
mov
mov
pop
in
aaa
push
out
pop
sub
call
push
pop
mov
sahf
cli
pop
push
lods
xchg
int3
movsb
and
push
and
loop
leave
xor
fsubrs
dec
xor
test
int
xor
inc
mov
xchg
loope
cmp
lea
shlb
dec
sbb
mov
lret
mov
gs
daa
mov
lret
fadds
pop
jno
aad
push
fstpl
int
xlat
ljmp
push
mov
cmp
pop
push
jecxz
jmp
aad
roll
xchg
pop
cmp
sub
inc
jge
repnz
dec
sub
into
addb
inc
push
in
mov
jne
sbb
cmc
dec
cld
movsl
rorb
pop
jle
inc
sbb
fcomps
repz
xor
dec
int3
ds
jecxz
add
stos
sti
lods
fdivs
outsl
jecxz
insl
cltd
dec
sbb
mov
lret
jo
out
out
mov
scas
mov
inc
insb
xchg
lods
cmp
or
lret
pop
cld
jne
inc
jge
iret
dec
movsb
pop
orb
loop
push
sub
mov
mov
mov
sti
bound
or
xor
xor
cmp
cmp
sub
pop
ret
add
lock
psubusb
enter
inc
addl
xchg
aas
fnstsw
or
pop
int3
test
jbe
lods
in
aad
cmp
js
aad
or
jecxz
xor
jmp
adc
lods
mov
dec
in
push
dec
icebp
dec
jns
add
lods
or
outsb
fldl
sub
rorl
mov
popa
sarl
and
cmpsb
xchg
pusha
xor
lods
mov
pop
aam
loopne
push
lock
xor
sub
sub
ret
ret
cmpsl
adc
fwait
lock
xlat
add
sbb
aad
stc
lods
js
outsb
or
mov
xchg
test
or
jae
push
fisubrs
push
push
rorl
sub
pop
or
jae
push
lods
sub
arpl
dec
inc
pop
sub
xchg
addl
mov
stc
or
mov
inc
aam
popl
sub
sbb
ret
or
sub
in
dec
mov
js
pop
aaa
xchg
sbb
push
pushf
jnp
or
je
push
lcall
push
lods
jge
std
out
test
pop
add
hlt
cmp
jbe
out
fstps
repz
jmp
lock
push
lds
addb
mov
push
leave
in
imul
out
jge
das
ret
jbe
jno
pop
stc
mov
mov
sub
call
add
inc
adc
inc
vpsllq
mov
xchg
daa
loop
movsb
scas
cmp
sahf
push
ss
loop
rep
inc
cmpsb
pop
fstpl
push
ss
stc
js
mov
or
mov
pop
mov
stos
dec
bound
rorl
push
inc
out
sbbl
sbb
mov
mov
decl
lret
ja
mov
aaa
dec
mov
mov
mov
test
call
jbe
jge
push
and
popf
imul
mov
outsb
mov
outsb
jo
icebp
test
mov
stos
cmp
xor
and
sbb
mov
fldcw
es
test
add
lret
je
aad
pusha
dec
push
push
xchg
lods
mov
pop
int3
mov
xchg
fistps
pusha
loop
inc
push
ja
test
cmp
lods
sbb
dec
push
mov
sub
jle
xor
mov
fnop
fisubrs
es
pop
clc
sahf
scas
and
jo
sahf
mov
call
cmp
inc
pop
mov
ret
adc
jnp
arpl
push
jne
mov
les
out
inc
out
mov
aas
cli
jo
hlt
mov
fdivrs
insb
inc
loopne
or
mov
mov
jns
in
mull
mov
js
lahf
pop
loop
push
push
test
lds
xchg
imul
aas
push
pop
dec
dec
es
dec
cli
add
shll
inc
roll
mov
outsl
mov
and
add
mov
jg
std
lcall
jg
andb
xchg
sti
loopne
addl
fs
fnsave
push
in
cmpl
cmp
mov
insl
adc
pop
pop
dec
test
adc
xor
iret
sbb
pusha
dec
jb
cmp
cmp
xchg
aas
and
sti
dec
push
sbbb
imul
loop
cmp
sbb
sub
and
cli
cmpsb
sbb
fsub
lcall
out
ja
hlt
adc
xchg
lret
push
add
mov
and
fidivs
jb
cmp
scas
add
add
cmp
mul
jg
iret
stos
sbb
pop
or
ret
mov
add
and
jno
sbb
xchg
adc
dec
lahf
lds
and
call
cmp
cmp
out
mov
cmp
add
cltd
popf
xchg
mov
cmp
jne
movsl
inc
jbe
xor
dec
loop
into
push
and
jg
insb
adc
ja
imul
lods
mov
ja
mov
or
aad
mov
bnd
scas
outsb
or
in
xor
jb
jecxz
leave
clc
pop
addr16
out
mov
in
xlat
cmp
mov
push
in
sbb
aam
add
shl
add
mov
cmpsl
sub
outsl
fistpll
inc
popa
inc
dec
movsb
xor
stos
xor
mov
jne
pop
cmp
and
pusha
or
inc
push
popf
add
dec
push
addr16
icebp
ss
xchg
mov
idivl
stc
push
dec
sti
cmp
js
sub
into
xor
aas
and
push
push
pop
adc
sub
cmpsb
cmpl
jl
jns
jbe
mov
mov
mov
out
pmaxub
subl
inc
inc
ficoml
xchg
mov
xor
mov
fwait
mov
lret
inc
out
jb
mov
out
jbe
jl
adc
cwtl
addl
dec
les
inc
lretw
push
mov
adc
jno
loope
outsb
pusha
jns
das
sbb
add
pop
dec
mov
rcl
js
mov
pop
xorb
inc
negl
xchg
cmpsb
pop
push
out
rolb
daa
lahf
xchg
ret
ss
stc
mov
ret
das
subl
btr
fldcw
xor
loopne
or
pop
xchg
lret
mov
enter
cmp
iret
fists
xchg
adc
sti
sub
fdivl
adc
sbbb
dec
xchg
cmp
pop
ret
ljmp
jecxz
jns
arpl
and
pop
mov
adc
lcall
dec
and
push
imul
stos
rorb
inc
divl
out
and
jae
test
js
inc
fs
cmpsl
test
mov
jmp
nop
push
ds
mov
push
enter
push
fcmovne
xchg
pop
lds
xor
cs
idivl
mov
insl
mov
cmpsl
cmpb
pushf
sarl
mov
xor
pop
add
cmc
shl
in
xor
inc
jbe
adc
sti
dec
jl
daa
iret
lcall
outsl
xchg
push
int3
inc
push
aad
xor
adc
ror
and
loop
push
lret
push
icebp
jne
sahf
sbb
ret
push
frstor
rcrl
xchg
cmp
mov
mov
dec
sub
jnp
and
jg
mov
ja
mov
push
lods
dec
hlt
push
fistpl
mov
or
fwait
int
cltd
and
mov
jnp
add
sub
adc
sub
into
push
jmp
mov
adc
mov
lret
ret
adc
jmp
xchg
xor
incl
bound
js
into
xchg
push
xchg
or
add
push
call
or
ss
dec
js
je
fcoml
std
ja
xchg
jle
push
dec
push
and
jecxz
xor
mov
iret
mov
fnstenv
data16
mov
sub
pop
insl
je
sarl
lea
pop
insl
xchg
inc
mov
dec
stos
push
push
mov
cltd
and
cmp
sbbb
sub
push
xchg
mov
test
int3
mov
loope
les
decb
outsl
scas
inc
pushf
pop
popa
sbb
imul
lods
and
mov
icebp
popf
push
popf
ret
outsl
les
fildll
mov
jne
dec
cmc
push
jl
aas
ljmp
xchg
daa
inc
stos
cmpsb
or
cmp
sbb
xchg
push
pop
sbb
mov
jge
icebp
push
or
cld
test
push
rcrb
in
lea
enter
adc
push
cwtl
or
pushf
stos
out
inc
imul
push
out
xorl
xor
repnz
clc
or
adc
roll
inc
js
dec
dec
addr16
test
mov
int
hlt
or
push
je
dec
je
lods
push
fs
pop
xchg
and
fbld
xchg
enter
imul
loopne
dec
mov
add
lcall
adc
lret
mov
xor
in
in
mov
push
fs
cmp
rolb
insl
xchg
mov
or
lods
mov
out
jmp
out
out
mov
cs
in
add
loop
adc
xor
imul
and
lret
scas
mov
sub
movb
sbb
pop
ds
insl
imul
stc
mov
sub
cltd
mov
call
inc
out
mov
add
or
fisubs
mov
mov
xchg
lods
fsubrs
mov
xlat
mov
jecxz
out
mov
lods
or
movsl
pushf
lods
dec
and
enter
or
imul
scas
mov
je
ss
or
jp
nop
cltd
adc
push
rol
jg
pop
dec
xor
xchg
cmp
lahf
mov
lock
push
scas
sbb
inc
lds
jo
imul
les
and
sarl
pop
lods
jne
arpl
out
and
hlt
les
mov
gs
cmp
data16
mov
and
xchg
ljmp
dec
pop
shlb
test
lret
pop
popf
or
mov
pop
jmp
mov
int3
leave
cmp
push
repnz
es
or
and
jecxz
addr16
dec
pop
add
loopne
enter
cwtl
or
mov
fldt
pushf
push
sbb
fistl
xor
mov
mov
adc
mov
dec
fadds
iret
mov
lahf
test
fisttpl
inc
jmp
jo
fwait
mov
rcrb
repz
lret
cmpsl
mov
add
repz
xlat
out
jnp
mov
popf
inc
dec
mov
les
mov
xor
imul
lcall
sbb
sub
add
test
dec
add
fs
cmp
or
add
mov
mov
and
mov
je
mov
call
pushf
xchg
imul
or
xchg
mov
mov
pusha
incb
stos
in
jmp
sub
pushf
sbb
sub
inc
add
push
mov
mov
arpl
xchg
adc
lcall
xor
add
xor
or
sbb
loop
cld
or
stos
test
xchg
das
vcvtpd2dqx
push
add
popf
ret
mov
fprem
jo
or
ret
cmp
sub
lahf
mov
jg
mov
fimuls
adc
aaa
push
call
in
jbe
cli
js
pushf
aas
lahf
leave
dec
inc
inc
adc
mov
rorl
xor
es
inc
push
fcmovb
bound
cmp
ljmp
mov
shll
xor
cwtl
sbb
jns
mov
shll
xor
push
ret
leave
dec
add
imul
xor
xchg
arpl
xchg
stc
pusha
nop
mov
repz
insb
mov
and
mov
popf
sbb
lea
lods
sub
jnp
pop
shlb
fldl
js
jg
mov
icebp
push
adc
das
mov
adc
lcall
mov
sbb
xor
icebp
xor
in
clc
dec
or
xchg
adc
mov
lock
jns
or
jge
or
adc
or
out
mov
adc
sbb
adc
sbb
jo
shrl
add
cmpsl
cmc
mov
ja
xchg
push
sbb
xor
mov
sub
aas
aas
sub
clc
mov
jg
xor
jns
lods
andl
repz
jmp
fwait
cmpsl
popf
test
dec
or
aad
mov
inc
push
ja
outsb
xchg
icebp
jl
ljmp
pop
fnstsw
mov
push
lds
pop
rcll
cpuid
mov
insl
aaa
test
sahf
inc
mov
xchg
loope
mov
jae
pop
shr
pusha
xor
jae
cltd
insb
xchg
dec
cmpsb
mov
in
mov
pop
cmpsl
pop
lret
bound
outsl
fistl
xchg
add
addr16
lcall
and
popf
xchg
dec
xchg
jne
inc
push
inc
pushf
jno
cmpsl
xor
mov
cld
cmpsl
xchg
mov
imul
push
test
jo
mov
js
aad
sub
mov
cmp
add
cmp
add
mov
mov
adc
fldcw
loopne
jp
pop
dec
mov
cli
cld
sbb
sahf
push
lret
and
mov
imul
dec
adc
cmp
pusha
or
icebp
jb
and
pop
test
dec
push
xor
or
pop
push
inc
jae
cwtl
subl
adc
cmp
int
leave
xchg
dec
push
adc
adc
rclb
outsb
sbb
mov
test
in
mov
enter
push
insl
jae
fcomip
mov
mov
gs
adc
or
inc
push
or
into
dec
sub
xor
cmp
fimull
in
jb
ficoml
sbbl
mov
sub
push
add
and
das
jb
ret
dec
jns
test
jp,pt
xor
dec
add
iret
data16
adc
push
xchg
xchg
mov
xor
cld
add
or
daa
add
cmp
dec
pop
movsb
add
sbb
icebp
gs
add
xor
movsb
out
sub
dec
leave
inc
jo
sbb
je
int3
push
sbb
jbe
mov
test
pop
leave
sbb
mov
add
jecxz
into
mov
or
fwait
mov
xor
sbb
stos
or
lret
sub
movsb
cli
jge
mov
or
insb
dec
and
scas
and
pop
std
sub
stos
out
cmp
add
push
sub
das
imul
add
scas
in
aad
pusha
mov
call
gs
bound
das
cmp
movsl
shl
leave
adc
ret
jle
addr16
sub
sahf
fs
mov
add
push
repnz
les
out
adc
mov
clc
and
aad
pushf
mov
and
cmp
sbb
je
in
ja
aad
int
pop
jno
daa
lock
push
push
fidivl
xchg
adc
stc
jne
into
xchg
addr16
aas
sbb
loope
lock
push
adc
sahf
jl
stos
sbb
lds
enter
data16
cmp
std
xchg
mov
nop
mov
out
cmpsl
push
fsub
aam
loopne
mov
mov
add
scas
mov
aam
inc
push
pop
or
std
sbb
dec
sub
jmp
cmp
and
mov
out
xchg
imul
rcr
jg
and
cmp
addl
inc
pop
pusha
jb
push
cmp
ss
faddl
aad
pop
into
ret
scas
stos
ds
decb
js
in
push
lea
mov
dec
enter
xchg
lcall
mov
pop
or
or
outsb
cmp
inc
jae
xchg
rcl
dec
addr16
shr
jae
push
js
xlat
dec
hlt
push
adc
dec
cmpsb
cltd
out
das
stos
xor
daa
test
popa
out
repnz
leave
lds
mov
xor
jbe
fwait
dec
int3
std
sub
dec
add
repnz
inc
popa
adc
into
jl
add
outsl
movsb
mov
icebp
scas
shr
lahf
shlb
push
in
xchg
push
mov
pop
and
pop
sbb
xor
and
movsb
xor
out
jp
push
loope
mov
and
sub
mov
dec
add
or
incl
push
and
test
dec
jns
sarl
jbe
loope
inc
sub
rcrb
cld
enter
add
je
pop
sbb
daa
push
cli
and
mov
orb
imul
fdivs
pop
daa
mov
inc
fadds
cmp
sub
std
lock
xchg
hlt
sub
mov
and
jnp
test
je
xchg
cmpl
out
and
in
mov
aam
push
pusha
and
dec
sub
or
mov
shl
inc
or
loopne
in
mov
movb
xchg
adc
aaa
lahf
lock
sbb
mov
xchg
aaa
pop
or
sti
dec
and
movsb
lcall
mov
fistpll
mov
lea
pop
add
in
and
push
adc
sbb
in
or
mov
mov
adc
es
js
pushfw
lahf
shrl
aad
push
daa
lahf
leave
ljmp
fisttpll
xor
mull
add
icebp
jns
sbb
lcall
arpl
adc
outsb
mov
sbb
out
cli
cmp
and
addb
gs
jbe
and
push
movsb
push
and
cli
test
fwait
pop
pop
sbb
cmpsb
or
xchg
mov
jns
adc
pop
inc
rorb
imul
data16
les
pop
jns
daa
sbb
pop
inc
dec
push
adc
nop
push
xor
push
and
movl
lret
mov
daa
adcl
inc
lahf
imul
pop
inc
fildll
int3
rclb
es
push
jg
pop
ret
insb
xchg
mov
imul
mov
pop
and
pop
xchg
and
aad
popf
jbe
loope
mov
aas
mov
loopne
mov
or
and
and
sbbb
xchg
rcr
psubq
decl
sub
int3
scas
and
cmp
data16
fistps
inc
stos
xor
push
xchg
lret
add
sbb
movsb
inc
cltd
bound
addb
push
adc
cmpl
adc
call
stos
push
mov
hlt
dec
daa
inc
pop
popf
cmp
xor
les
loop
imul
ss
add
and
push
xor
mov
out
or
addr16
bound
jns
inc
loope
push
int
lret
lret
jae
add
negl
add
pop
mov
stos
sbb
adc
mov
mov
add
mov
lods
add
cmp
jl
xor
into
cwtl
and
push
pop
adc
leave
cli
xchg
aas
in
ljmp
xchg
mov
call
jo
mov
outsl
mov
add
push
mov
mov
mov
xchg
mov
cmp
xchg
lret
push
in
inc
fsubrs
and
jp
jae
psrlq
daa
mov
rcrb
into
mov
dec
push
push
out
test
add
jle
cmpl
fistpl
fldl
mov
add
push
add
ret
cs
dec
jno
xchg
or
pop
cmc
loop
cmpl
push
jne
lahf
mov
mov
inc
and
nop
cmp
jp
je
mov
cmp
cltd
xor
insb
inc
sub
or
stos
and
scas
mov
mov
cwtl
les
int
clc
mov
xchg
sbb
dec
in
mul
sbb
cwtl
aaa
push
je
fs
arpl
jbe
cwtl
call
dec
xchg
cld
ret
mov
std
mov
sbb
mov
mov
push
rcrl
pop
cmp
xchg
push
aaa
fs
xor
xor
mov
mov
or
ret
out
xlat
inc
popl
sti
movsb
push
or
outsb
xor
mov
cmp
dec
stos
mov
sti
loopne
mov
fldln2
ja
push
jo
dec
cs
push
nop
lcall
scas
pop
xchg
jle
jbe
lods
xor
inc
jl
cmpsl
icebp
cmp
hlt
arpl
adc
push
jp
mov
pop
add
shll
pop
aad
adc
out
add
mov
pop
jne
add
cli
out
out
shll
shlb
mov
iret
push
repz
jge
mov
stc
movb
sti
lcall
lods
xchg
lcall
dec
add
scas
mov
repz
loopne
push
test
xchg
sbb
dec
shrl
enter
insb
inc
pop
lods
shr
scas
out
cli
roll
or
mov
pop
fs
sbb
mov
movsl
arpl
out
repz
mov
int3
enter
add
js
loop
shl
add
xorl
jmp
out
add
jp
mov
cmp
jns
stos
cltd
mov
push
add
loop
push
lret
xchg
push
mov
or
insl
inc
dec
pop
es
add
mov
clc
loopne
pop
mov
xchg
je
or
dec
lods
sub
inc
pop
in
mov
mov
and
xchg
dec
inc
dec
push
ret
repnz
icebp
enter
jno
mov
mov
clc
xchg
add
and
inc
push
cltd
or
cwtl
js
mov
mov
inc
jl
xchg
pop
and
arpl
jb
pop
xor
std
jp
or
mov
aaa
jae
mov
push
mov
lea
sti
xor
loope
imul
add
cld
xchg
in
cmc
hlt
or
in
xchg
mov
popa
dec
cmpsl
xor
or
adc
adc
ret
lock
out
hlt
inc
xor
into
mov
jecxz
fsubrl
int
pop
adcb
adc
in
xor
mov
mov
xchg
in
mov
cmp
in
adc
fwait
sbb
movsl
push
xlat
mov
das
mov
pop
in
mov
push
inc
imul
data16
les
cld
repz
in
push
mov
loope
xor
insb
dec
dec
lret
mov
lcall
sbb
std
stos
adc
and
mov
mov
mov
adc
ljmp
rclb
pop
mov
pop
jle
dec
adc
and
fnsave
or
divb
bound
dec
insl
mov
test
mov
inc
ret
stos
ficomps
sti
sub
mov
jo
mov
push
data16
mov
push
ret
sub
cmp
mov
rcrb
int
lret
xlat
repz
jl
loopne
adc
fcmovb
int3
popf
pop
xor
or
xchg
adc
movsl
xchg
pusha
in
pop
mulb
ffreep
xchg
jno
pop
pop
pusha
and
jmp
sub
cwtl
sti
or
fdiv
or
nop
xchg
mov
iret
mov
jo
jge
xchg
cli
sub
out
lea
jmp
inc
inc
inc
or
pop
xchg
add
xchg
into
sbbb
add
push
pop
jbe
orb
loop
xchg
jb
sub
sub
jmp
push
sarb
leave
ret
xorb
mov
jnp
in
mov
std
mov
push
inc
push
call
xchg
xor
inc
imul
aad
into
xchg
out
add
xchg
ret
push
adc
jne
mov
in
adcl
sbb
push
xor
ljmp
out
rdmsr
loopne
aam
in
in
cmp
mov
loop
dec
loopne
or
ds
bound
fwait
or
sbb
fcomip
mov
add
inc
push
sbb
xor
cld
sub
cmp
lock
sub
lods
sbb
imulb
cmp
cmpsl
inc
scas
into
sub
loope
cmp
cmp
mov
xchg
pop
and
vsubss
sbb
cmp
add
mov
mov
fcompl
lret
test
push
hlt
rcl
movsb
mov
xchg
pop
jge
jbe
xchg
rcll
pop
aam
int
adc
rcl
mov
ds
test
pop
push
and
sub
adc
push
sub
frstor
mov
arpl
das
sbb
jl
add
call
scas
outsb
int3
xor
mov
out
icebp
xchg
imul
mov
xor
fs
mov
ret
push
repnz
shll
stos
int
inc
or
cmpsl
daa
mov
into
dec
jge
push
pushf
insl
int
and
adc
or
lea
xchg
cli
jle
ud2
push
call
data16
push
icebp
fisttpl
push
jb
lods
sahf
loopne
cmpsl
mov
push
cld
inc
cwtl
ret
dec
jns
or
pop
cmpsb
data16
nop
pop
pusha
data16
fldln2
xor
stc
jg
testb
and
je
inc
dec
dec
or
jmp
adc
aaa
es
fiaddl
jmp
das
stos
ret
sarl
adcb
pop
jl
mov
mov
jecxz
cwtl
test
push
adc
or
je
aaa
dec
inc
cmp
inc
mov
add
aaa
in
jno
sahf
or
scas
mov
hlt
addr16
adc
cmp
insl
cmpl
sbb
push
push
in
adc
lret
aaa
mov
shrb
roll
pusha
adc
xchg
pop
inc
push
dec
add
pop
sub
mov
imul
in
xor
stc
sub
inc
or
decb
pop
adc
test
and
paddsb
adc
pop
ret
push
push
rcl
jecxz
xchg
push
cwtl
mov
push
fisttpl
mov
in
push
cmpsb
lods
or
mov
add
mov
adc
clc
push
dec
sarb
or
out
dec
cmp
jmp
mov
push
pop
outsl
outsb
xor
clc
outsl
jecxz
add
neg
dec
and
pop
and
icebp
fwait
rorl
in
lret
cld
movsl
xchg
dec
push
lds
xchg
mov
imull
jmp
lahf
arpl
repz
mov
cmp
frstor
aam
sub
shll
data16
cmp
push
mov
pushf
dec
sahf
aam
cld
pop
inc
cmp
cmpsl
inc
lret
push
pushf
fstl
or
sub
das
mov
jne
jmp
test
jg
cld
shrl
jbe
push
leave
xchg
or
je
negl
push
adc
ret
push
or
fsubl
push
fdivp
mov
xor
pop
xchg
stos
lahf
in
out
add
outsb
out
scas
jb
fistl
std
cmc
rclb
jge
sub
sbb
jns
and
xor
xchg
movsb
lea
lds
adc
mov
mov
inc
xor
push
pop
das
pop
or
pop
mov
mov
jecxz
cmpsl
dec
sub
faddl
mov
ret
jno
xchg
std
mov
mov
sub
mov
subl
jp
cmpsb
in
sub
pslld
add
lahf
je
dec
jb
mov
insb
mov
jbe
cmp
idivb
std
mov
or
fiaddl
mov
cmp
sub
ret
dec
dec
das
scas
cmp
sbb
nop
push
stos
or
inc
popf
aad
sahf
xchg
mov
cmp
icebp
fstpl
lds
dec
fnsave
movsl
in
dec
inc
adcb
cmp
roll
or
dec
in
loopne
dec
cli
mov
adc
popf
ret
mov
add
mov
jmp
std
pop
mov
mov
jnp
xchg
rorl
out
pop
ss
or
dec
ja
inc
and
dec
flds
add
dec
mov
out
push
xor
push
divb
orb
push
int
cli
gs
lods
or
mov
or
shll
jge
jmp
jmp
pop
and
push
dec
xorl
sub
lock
int
sbb
test
outsb
out
add
pop
arpl
mov
fldcw
sub
in
and
mov
mov
push
xor
cltd
add
das
sbb
cmpsl
mov
and
or
mov
jle
and
pop
push
jne
out
lods
push
pop
jmp
leave
sub
adc
mov
adc
xor
cli
je
mov
arpl
mov
sub
sub
adc
out
xlat
add
push
mov
pop
mov
push
xlat
pop
xchg
in
stos
lret
mov
dec
sbb
not
push
xchg
pop
mov
mov
data16
dec
push
mov
xchg
pop
aaa
js
imul
lahf
inc
jno
add
mov
out
insb
jl
movsb
dec
lods
je
iret
mov
cmp
fucomp
mov
xor
test
dec
and
sbb
out
pop
pop
sbb
push
or
jp
pop
shrb
xchg
ss
cmpsl
or
inc
test
cltd
les
jbe
jmp
mov
fidivrs
inc
fsubr
pop
pop
jnp
lock
sub
leave
and
mov
adc
fwait
sbb
fistpl
xor
rclb
pop
push
dec
xor
push
mov
dec
push
sub
iret
xchg
adc
mov
shl
bound
pop
gs
or
mov
pop
mov
mov
les
push
loopne
imul
mov
movsb
mov
add
mov
std
mov
daa
sbb
popa
and
lret
dec
cmp
or
popfw
enter
mov
and
insb
or
add
mov
std
xor
cwtl
sub
adcl
or
jl
mov
mov
shr
pop
lods
pop
mov
and
cmc
arpl
xchg
inc
pop
jnp
lds
xor
cmp
mov
adc
out
gs
ds
insb
mov
mov
inc
test
sbb
xor
add
icebp
xchg
lret
stc
das
cmp
aaa
xchg
lret
sbb
xor
andl
in
icebp
add
loope
lods
je
sbb
sub
mov
test
addr16
outsb
xor
inc
and
push
pushf
cmpsb
sbb
sub
xchg
add
lock
jne
