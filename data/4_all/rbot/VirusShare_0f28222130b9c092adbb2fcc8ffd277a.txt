rol
lret
lahf
mov
mov
std
loop
lahf
mov
sbb
pop
in
out
add
mov
xlat
dec
dec
scas
je
cli
je
or
sbb
lea
cld
call
jb
out
bound
lret
fwait
popa
aad
lcall
in
lock
into
aam
xchg
push
fisubl
gs
lret
popa
jbe
adc
lret
imul
and
cmpsb
cmpl
jmp
mov
sub
mov
addr16
mov
test
ds
inc
in
into
popl
fistl
xchg
sbb
push
adc
xor
mov
mov
into
cmpsb
leave
adc
jne
test
add
inc
jl
mov
adcl
sar
dec
les
shl
shll
adc
scas
inc
addl
cmpsb
mov
ss
mov
push
pop
add
jno
jb
adcb
shlb
into
sub
pusha
xchg
test
or
subps
in
mov
mov
icebp
sbb
adc
jbe
adc
ret
fnstenv
enter
lahf
push
jns
pop
xlat
stc
mov
adc
testl
mov
shl
cli
pop
lret
bound
mov
dec
mov
in
sub
scas
jne
sub
fidivrs
dec
mov
aad
push
or
mov
movsl
iret
xor
mov
jae
add
ss
jb
pushf
mov
aas
adc
idivb
das
cmp
sub
sbb
xchg
fstpl
iret
inc
std
loopne
mov
ljmp
push
inc
jbe
or
adc
ljmp
jo
outsb
insl
dec
jb
xchg
ljmp
sbb
cmp
or
ds
sub
mov
movsl
cmc
out
mov
leave
out
push
inc
mov
imull
sahf
icebp
lds
jns
jecxz
popa
imul
in
or
inc
mov
sbb
movsl
dec
lea
xor
and
xor
push
imul
push
jg
mov
lcall
sbb
jo
add
adcb
push
pop
inc
xlat
jmp
dec
sbb
iret
or
push
leave
test
js
jb
xchg
xchg
fsubl
fld
xchg
fs
lods
and
jg
les
cmp
stos
or
js
mov
stc
xor
dec
or
test
cmp
cmp
int3
inc
pop
jnp
jge
push
push
jp
and
lret
mov
add
cmp
test
int3
sbb
inc
push
shlb
jle
cmpsb
rcrb
bnd
xchg
lret
xor
inc
dec
movsl
cltd
push
dec
cli
xchg
lock
out
push
imul
fists
or
mov
mov
inc
sub
adc
push
inc
sbb
fwait
in
addb
add
inc
or
push
add
out
int3
sub
call
fwait
sti
sbb
sub
fdivrl
into
je
orl
xor
mov
leave
repz
cmp
je
repz
test
xchg
pop
cmp
jb
loope
in
lods
rorb
pop
lods
int
aaa
out
xlat
xchg
iret
iret
push
xchg
add
mov
cmp
movsl
push
in
lds
in
cs
push
clc
fs
or
subb
xchg
dec
push
pop
pop
mov
cmpps
pop
cmp
sarb
cwtl
shll
cmp
aaa
cmp
subl
mov
push
ret
mov
jp
addr16
and
test
xchg
mov
adc
data16
jg
xchg
mov
sbb
or
aaa
mov
test
daa
mov
push
or
into
jns
jle
xor
lea
out
scas
cmpsl
enter
pop
xor
dec
xchg
or
jbe
or
sarl
push
push
xchg
shlb
sbb
mov
or
xchg
and
mov
stos
jb
sbb
inc
push
jl
jp
or
dec
inc
mov
mov
cmp
fwait
sbb
inc
subb
icebp
cltd
adc
jnp
mov
push
and
into
inc
mov
jle
pushf
push
adcb
mov
dec
mov
cmpsb
adc
shrl
aas
addr16
aas
roll
ds
leave
lea
fwait
jp
add
das
and
pop
sub
ds
pop
dec
mov
sbb
lea
rcll
data16
adc
lcall
mov
lea
mov
test
mov
cltd
or
push
sbbl
jbe
lahf
adc
outsb
mov
add
mov
out
cmp
inc
mov
mov
xchg
sbb
scas
loopne
repnz
test
and
and
cmc
scas
test
int
insb
xor
bound
imul
leave
sub
lods
mov
cmpsb
fwait
sbb
xchg
rcrb
test
aas
add
ljmp
add
mov
xchg
or
or
mov
in
push
cmp
mov
inc
addr16
mov
out
pushf
cmp
pop
shlb
mov
inc
sbb
aaa
jbe
imul
lods
popa
outsl
dec
sbb
inc
xorl
pushf
js
push
stos
lret
or
movsb
push
mov
loope
lods
add
loop
mov
inc
pop
xchg
dec
sbb
xor
fstl
inc
cmp
dec
mov
fcomi
ljmp
and
add
push
mov
pop
fisttps
mov
and
jne
ja
and
mul
movsl
outsl
pop
mov
pop
jp
mov
cmpsb
test
cmp
in
stos
fistps
jle
sbb
pop
add
ret
xchg
adc
jg
pop
fiaddl
cmc
int
in
mov
sub
fnstsw
push
inc
fnstsw
mov
stos
xchg
or
inc
andb
mov
into
pop
mov
das
imul
and
cwtl
arpl
arpl
pop
mov
notl
dec
sub
or
adc
jg
xchg
pop
ficomps
sbb
je
adc
out
and
lds
out
mov
lods
icebp
movsb
add
xor
pop
adc
cmp
or
test
sti
movl
and
xor
xchg
pushf
sub
arpl
mov
pop
push
jmp
xchg
and
or
dec
inc
int3
xchg
adc
das
cwtl
mov
mov
add
mov
inc
mov
and
divb
push
sti
push
cs
repz
mov
mov
cmpl
lahf
jb
mov
sub
daa
lds
loope
jo
or
push
or
mov
lods
push
clc
sub
fcoms
adc
push
in
shrl
or
sub
hlt
jp
xor
in
pop
shrl
pop
orb
xchg
or
popa
adc
int
data16
adc
sub
mov
sbb
jle
pop
mov
sub
push
jbe
ja
in
loopne
scas
xchg
in
xor
dec
xchg
lcall
xchg
ret
push
sbb
sarb
ret
icebp
adc
xor
adc
test
sti
add
mov
das
dec
or
xchg
add
xchg
mov
inc
jl
cmpl
push
and
sahf
sbb
dec
adc
adc
add
jmp
sahf
fisttpll
push
repz
negb
nop
mov
mov
sub
dec
dec
xchg
aas
push
push
loopne
push
flds
mov
repz
cmp
out
shlb
in
mov
mov
mov
mov
sub
sbb
cmp
xchg
jg
pop
xor
sub
stc
fs
push
fwait
test
scas
jne
pop
adc
adc
cmpsl
xor
cld
jge
push
fstpl
loopne
pop
fisubrs
sbb
sub
fisubs
mov
or
js
jl
mov
or
fistpl
shl
cwtl
cmp
stos
and
jg
test
mov
add
in
popa
add
ds
adc
scas
mov
lds
mov
rcll
jmp
mov
add
xorl
cmc
mov
sbb
sub
adc
xor
sub
push
sub
lret
or
mov
mov
pop
cmpxchg8b
int
and
pop
lret
and
push
mov
fwait
mov
pop
inc
jae
lret
popf
rcrl
add
dec
xchg
mov
shrl
mov
roll
mov
mov
popf
xorb
rcrl
pop
cmp
jb
loop
jmp
mov
std
jno
push
mov
test
jne
pop
cld
cmpb
in
mov
push
pop
sub
in
jle
shrl
ror
jp
adc
repnz
or
xchg
std
cmp
in
mov
insl
lods
aaa
push
fsubs
sbb
jg
fnstsw
push
ja
daa
packsswb
sbb
dec
pop
mov
mov
add
push
xor
xchg
xchg
xor
adc
mov
mov
mov
add
sbb
mov
das
cmp
sbb
jbe
ja
mov
cmpsl
lahf
mov
ljmp
cld
inc
jg
pop
call
clc
xor
ret
push
cmp
and
iret
bnd
jge
push
ja
lock
ja
mov
lods
dec
xchg
and
repnz
mov
movsl
sub
cli
cmp
sbb
push
mov
popa
add
dec
add
shll
mov
cmp
fbstp
lds
dec
sub
lods
cmc
pop
pop
lea
aam
mov
add
icebp
cmp
jmp
es
xor
xchg
push
jg
sbbl
cmp
aaa
out
rorb
pop
insl
call
clc
dec
xchg
or
mov
jo
lcall
cmp
scas
xchg
push
scas
push
ret
mov
sub
sahf
ret
mov
out
mov
push
sti
divb
add
fidivrs
inc
fscale
jmp
xor
popf
xchg
or
sti
push
push
push
sub
lret
pop
push
shrl
and
dec
sbbb
push
in
xchg
xor
bound
gs
cmp
mov
mov
or
lods
sbb
dec
mov
push
aad
or
scas
je
arpl
push
jnp
inc
addr16
mov
push
inc
cltd
pop
sub
outsb
sbb
test
adc
xchg
rcrb
push
out
pop
and
jbe
push
fisubrs
cmpsb
dec
cli
fistpl
pop
sub
jo
cmpsl
lea
std
add
add
insl
mov
sub
add
cmpsl
mov
xor
add
pop
dec
xor
sahf
jbe
sbb
xchg
push
and
jno
push
std
cmp
pop
out
testb
call
jle
jns
cmp
dec
jecxz
cld
sbb
mov
pop
jne
ja
outsl
pusha
xchg
dec
notb
lock
mov
lods
shlb
xor
and
filds
sbb
mov
sbb
sbb
jmp
jle
dec
mov
sub
dec
nop
pop
daa
in
fmull
or
imul
xor
pusha
jo
and
and
dec
out
cld
sbb
fbstp
adc
out
rclb
push
sub
fimull
jbe
nop
hlt
aas
push
cltd
inc
sbb
fstpt
ss
cmpsl
rcrb
sub
sub
xchg
loope
mov
lock
inc
insb
xor
pop
fisubrs
fstp
pop
xchg
lcall
mov
dec
insb
dec
mov
dec
test
call
mov
sbb
loop
pushl
mov
xor
sar
mov
test
cmpsb
icebp
sub
inc
cmp
out
xchg
stos
iret
idivb
das
inc
add
mov
imul
pop
repz
hlt
xor
sbb
sbb
xlat
inc
pop
test
mov
scas
pop
lock
subb
rclb
rclb
loopne
pop
cmp
cmpsb
xchg
sub
cmp
repnz
aas
inc
aad
jbe
pop
jae
insl
cmp
sbb
in
cmpsl
inc
mov
test
xor
and
push
repnz
outsl
divb
dec
xchg
movl
and
ja,pt
push
mov
cld
lcall
sub
or
int
push
dec
loopne
sti
push
pop
mov
push
mov
inc
imull
fidivl
mov
cmp
add
hlt
xor
jns
cltd
int3
mov
leave
cmp
adc
shll
push
dec
les
fstp
mov
and
add
push
cltd
sub
add
aas
cmp
test
fidivl
scas
push
sbb
inc
sbb
dec
cmp
mov
inc
dec
jecxz
addr16
pop
adc
sub
dec
add
test
mov
mov
mov
inc
call
sub
lret
dec
xchg
test
jle
pop
mull
mov
sbb
movb
rcrl
fsubrs
and
and
mov
jecxz
pop
movsl
sbb
xchg
add
cltd
lcall
pop
sbb
pop
pop
mov
mov
insb
mov
mov
adc
in
jnp
mov
inc
mov
xchg
xlat
jg
dec
sti
mov
int
mov
jg
negb
mov
pop
daa
push
popl
or
push
cmp
jo
mov
cmp
xlat
sub
push
adc
mov
call
fcmovnb
dec
push
jecxz
mov
pop
mov
pop
add
aaa
add
and
push
push
pop
mov
cld
fadd
lret
pushf
shlb
pop
cmpsb
mov
daa
loopne
add
test
xchg
cmp
ds
and
js
pushf
sub
in
jbe
ret
cmc
popf
xor
mov
iret
mov
mov
inc
add
add
popa
test
sbb
jo
dec
mov
jae
cmp
push
inc
sub
outsb
pop
sti
mov
adc
dec
cmpsb
cmpsl
jge
jle
push
hlt
ds
outsb
subb
and
mov
movsl
mov
xchg
shrb
sub
lods
adc
pop
inc
jecxz
je
sub
fs
xchg
adc
dec
mov
adc
push
sarb
stc
inc
jne
mov
rcrl
xchg
add
mov
iret
call
enter
lods
fwait
mov
js
aaa
insl
mov
adc
ret
inc
sub
push
and
fsubrs
movsb
pop
add
cmc
cmp
test
and
or
push
mov
fcmovbe
xchg
pop
lret
sbb
mov
call
inc
loop
jbe
ret
clc
movsb
sub
push
add
aam
shrl
mov
pusha
mov
shl
adc
and
orb
xchg
cwtl
sub
push
lahf
xchg
jne
xor
cmp
incb
pop
ljmp
or
fisttps
pusha
sbb
mov
ss
fsubp
inc
outsl
mov
fwait
lea
inc
xchg
cmpsb
push
lahf
and
sbb
pop
adc
xchg
lds
imulb
scas
or
cli
pop
sub
mov
mov
pop
test
or
xchg
xchg
lcall
or
fldt
sbb
jbe
shl
cmpsb
ljmp
aad
mov
mov
fsubrl
dec
mov
inc
jecxz
pop
popa
and
mov
pop
jp
insb
test
cltd
pop
repz
add
movsl
sub
mov
xor
stc
lds
cmpsl
mov
outsl
sti
or
out
je
pop
mov
mov
jnp
les
or
sbb
inc
inc
aad
jbe
addr16
cmp
test
fs
add
adc
outsl
scas
icebp
je
sub
add
jmp
dec
sbb
jno
pop
push
pop
mov
sub
lret
lea
hlt
bound
mov
test
jmp
jmp
dec
rolb
cld
aaa
or
jne
cmpsb
aad
jns
loope
or
pop
and
fcomps
loop
ret
jmp
mov
pop
stos
dec
stos
cmp
stos
stos
fsubp
aam
cmc
push
addb
imul
lock
push
jecxz
mov
shrb
cwtl
jecxz
dec
mov
in
and
xor
push
mov
out
in
aaa
mov
test
sarl
push
xor
push
daa
dec
jne
stos
scas
ja
addl
inc
adc
mov
pop
outsl
aaa
cld
or
jne
dec
sub
nop
xchg
mov
dec
mov
into
aas
test
test
rol
lods
xchg
aam
sti
andb
xchg
jge
sahf
pop
xchg
jle
in
jle
push
sub
test
xchg
rorl
push
fst
mov
sbb
add
push
pop
inc
movsl
jns
mov
add
pop
sbb
mov
mov
stos
mov
scas
fadds
out
jle
xlat
adc
mov
rcr
ret
or
cmp
sub
mov
cmp
xor
add
stos
dec
rcll
ret
repz
fdiv
mov
xchg
and
pop
mov
sbb
shrl
roll
dec
inc
dec
dec
sahf
mov
call
inc
xlat
xchg
bound
push
xchg
pop
out
jle
add
push
cmpsl
xlat
add
fucomi
stos
dec
mov
sti
jle
mov
lret
popa
sbb
jle
femms
lock
or
pop
mov
dec
push
pop
ljmp
mov
popf
test
xchg
ret
lret
inc
movsl
push
aam
add
cmpsb
fistps
add
repz
push
adc
je
fcompp
gs
ret
int
lods
mov
gs
xchg
mov
xchg
lods
mov
adcb
push
adc
inc
xorl
test
push
sub
das
cwtl
int3
and
mov
mov
pop
jns
pushf
fwait
xchg
dec
test
and
inc
mov
lahf
insl
aas
xchg
nop
outsl
lahf
mov
xchg
and
jae
frstor
sub
xor
and
inc
int3
push
pop
ret
xlat
inc
scas
popf
push
cli
push
and
rcrl
push
inc
imul
pusha
mov
dec
shlb
fs
cld
repnz
xchg
mov
sbb
inc
cmp
pop
or
insl
pusha
push
arpl
scas
iret
pop
hlt
insb
or
inc
inc
push
les
je
xchg
cmpl
sahf
sbbb
out
out
adc
in
inc
cmc
mov
jno
cld
popf
or
pop
jmp
push
out
sub
dec
sub
lret
dec
adc
push
stos
lds
stos
outsb
jo
push
cmpsl
or
mov
jmp
out
sbb
rcrl
sahf
daa
jl
stos
push
push
mov
xchg
dec
sbb
mov
cltd
xchg
jne
pop
push
sti
push
cmc
jmp
test
or
pop
push
push
push
jmp
cmp
movq
shl
dec
xchg
mov
push
scas
pop
ja
mov
in
test
dec
mov
testb
loop
arpl
iret
push
and
jp
test
and
pop
push
adc
loope
xor
mov
and
xchg
in
add
jns
mov
push
dec
xchg
xchg
pop
pop
roll
popa
in
xchg
rcrl
dec
cmp
lods
fildll
dec
add
mov
and
sbb
cmp
in
add
stos
jp
aad
js
push
sub
shl
mov
in
repz
aaa
adc
and
sbb
jbe
bound
push
xchg
cltd
push
add
mov
xor
stos
std
mov
test
js
fucomp
xor
mov
mov
sbb
jmp
push
cmpsb
xchg
lcall
sub
xchg
movsl
insl
mov
movsb
push
xlat
repz
xchg
fimuls
mov
and
fwait
adc
icebp
ret
inc
cs
pop
mov
mov
adc
xchg
adc
xchg
pop
adc
shlb
outsl
mov
push
outsb
dec
jg
stos
pop
mov
xor
inc
sbb
mov
fsubrl
sbb
sbb
jns
inc
aaa
ds
jge
mulb
push
mov
jg
inc
add
bound
cmpsb
sbb
js
jns
orl
xchg
mov
push
sbb
fs
push
faddp
xchg
imul
cltd
or
sarl
xchg
stos
pushf
add
jp
dec
push
push
pop
pop
add
and
mov
jnp
dec
xchg
push
inc
sub
andb
roll
inc
xchg
loopne
cmp
out
fs
dec
mov
mov
push
jge
and
mov
stos
iret
imul
sub
mov
ror
in
push
adc
ret
jp
xor
xor
pop
cmp
xchg
std
imul
mov
xchg
xlat
pop
sbb
mov
mov
jecxz
ficoml
and
stos
push
or
xchg
sub
inc
xchg
cs
js
xchg
jns
in
jne
mov
jle
repnz
xor
mov
das
cmp
sbb
and
int3
movsb
in
imull
test
icebp
push
or
daa
xor
pusha
ss
fnstenv
sarb
lock
shl
and
or
lret
add
adc
pushf
jl
jmp
mov
inc
addr16
push
sub
in
sbb
jbe
out
fs
inc
push
fstps
sbb
mov
mov
and
push
add
scas
sbb
loopne
test
fadds
mov
aaa
ja
lahf
xchg
imul
sub
ffree
stc
mov
mov
jecxz
lods
je
pop
pusha
pop
hlt
leave
enter
xchg
stos
pop
jmp
mov
and
and
jecxz
mov
popa
pop
and
xchg
push
out
mov
cmpsb
fmulp
mov
gs
aas
rcrl
subb
and
scas
adc
sti
in
mov
lret
bound
adc
shl
adc
inc
fs
sbb
or
addr16
int3
dec
jle
dec
mov
ja
aaa
xor
xor
sbb
adc
mov
pop
call
inc
inc
lcall
dec
cmpb
out
push
repz
push
jno
ljmp
mov
mov
adc
rcll
mov
in
xchg
xchg
movsl
lret
or
dec
pop
adc
mov
sub
cmc
pop
or
sbb
sbb
test
pop
jbe
mov
pop
or
sbb
aas
sub
rcrb
add
cmpsb
cld
int
cmp
fidivrl
add
add
or
mov
and
or
and
test
loopne
pusha
inc
and
xor
sbb
addb
lcall
and
dec
xor
popl
dec
scas
aam
imul
jp
pushf
test
mull
in
lret
xchg
into
rolb
fwait
or
cmp
sbb
inc
mov
loop
mov
outsb
loopne
shr
push
cmp
rol
stc
sub
lock
loope
cmp
testb
pop
cmp
mov
push
dec
push
ret
es
ds
mov
dec
outsb
fdivrs
dec
mov
in
push
ficomps
inc
dec
cmp
lods
adc
cmp
push
xchg
push
pop
mov
cmpsb
les
adc
mov
adc
mov
mov
rolb
dec
fstpt
inc
xor
sar
stc
shll
cmpsb
icebp
fimull
jmp
pop
add
or
fidivs
dec
pop
fidivl
repz
lock
cmpb
ret
imul
or
rcrb
lock
mov
das
movq
out
ss
icebp
cmpl
scas
out
cmp
int3
out
jmp
xchg
sbb
and
mov
lock
mov
inc
daa
push
int
mov
iret
loopne
test
cmp
lret
and
mov
or
stos
and
add
pop
icebp
clc
les
inc
xorb
pop
ljmp
mov
cmpsl
test
mov
fwait
sub
int
mov
repnz
jg
mov
stos
ja
push
xchg
pop
ficomps
xchg
cld
xchg
cmpsl
xchg
in
in
xor
dec
xor
ret
mov
ljmp
test
std
mov
and
jno
pop
jg
js
jo
in
and
sbb
lods
dec
mov
mov
addl
pop
jle
icebp
xor
icebp
fadds
dec
xor
push
in
ds
out
xchg
cmpsb
lds
lods
push
insl
ss
aas
adc
int
leave
xchg
fistpl
sti
jb
jmp
inc
imul
dec
mov
mov
jb
sahf
mov
outsb
jo
adc
mov
call
xchg
gs
leave
rcl
mov
and
and
dec
push
xchg
addr16
lahf
pop
inc
inc
add
scas
adc
sub
sti
loopne
jmp
mov
or
out
jae
cmp
fmull
xchg
jns
mov
je
xchg
cmc
inc
out
inc
adc
pop
daa
mov
jg
pop
aam
inc
outsb
outsl
decb
mov
pushf
and
es
enter
fidivrl
jmp
xchg
sbb
pop
jb
out
lods
fidivl
xor
sahf
scas
sbb
mov
inc
fdivrs
jecxz
ret
mov
mov
shlb
outsb
push
dec
dec
clc
mov
dec
mov
sbb
in
push
iret
lods
xchg
pop
in
push
daa
enter
cmp
and
mov
mov
mov
mov
lcall
mov
jg
sub
adc
dec
iret
ret
pop
arpl
outsb
les
cld
push
mov
mov
xor
sbb
pop
mov
into
aas
cmp
adc
cmpsb
dec
jnp
adc
xor
cmpl
pop
cmp
or
rcrb
and
fsub
jnp
imul
les
leave
jnp
int
stos
push
lret
push
pop
and
and
stos
cwtl
filds
insb
push
jo
hlt
pop
js
add
pop
sbb
push
add
and
rclb
loope
mov
mov
dec
and
sub
mov
in
mov
jae
mov
push
sbb
scas
stos
nop
jne
and
es
inc
pop
cmp
jl
or
fistps
or
dec
shrl
or
popl
sbb
stc
cli
jnp
data16
ret
out
scas
xor
adc
bound
and
push
inc
inc
ss
outsb
loope
lods
ret
mov
or
adc
dec
xor
cmp
and
fwait
xor
dec
inc
lret
mov
hlt
mov
jb
popa
xor
lods
cmp
fisubrs
lock
add
sbb
pop
fistpll
mov
sbb
outsl
es
add
pop
sub
sbb
cs
pop
pop
sub
dec
dec
sahf
mov
hlt
push
sub
imul
mov
push
mov
lods
xchg
iret
out
out
pop
dec
scas
mov
imul
hlt
pop
xchg
or
add
out
sub
xor
or
pop
sub
es
mov
sbb
mov
jbe
sub
lret
fdivrl
int3
sbb
stos
mov
lds
dec
dec
mov
js
xchg
lea
ds
or
stos
sbb
push
cmpb
jl
jle
fs
xchg
cmpb
mov
cwtl
dec
cli
push
cltd
test
push
in
cltd
iret
dec
mov
test
sbb
push
cmpl
pop
mov
cmp
aas
mov
adc
mov
test
or
inc
dec
mov
pop
fcomps
mov
dec
adcl
loope
in
xchg
int
and
mov
or
aas
xor
mov
call
jae
jnp
fimull
mov
clc
xchg
sub
ds
pushf
inc
orb
mov
xchg
xor
shll
cltd
aad
aad
dec
cli
call
divb
xchg
or
mov
mov
gs
int3
movsb
or
xchg
xchg
sub
jae
aam
add
xchg
fidivrl
sub
popa
dec
adc
cmp
movsb
add
push
leave
fwait
jmp
add
jg
adc
arpl
cmc
aas
add
mov
fdivs
int
arpl
or
das
pop
dec
in
notb
repnz
push
cli
sbb
aam
mov
in
xchg
pop
jnp
xor
lea
jno
dec
and
push
xor
mov
xlat
or
pop
adc
repnz
rcrl
mov
subl
mov
fisubs
or
pop
or
mov
sub
hlt
inc
jbe
imul
fdivr
cmp
sub
push
jae
adc
and
outsb
xchg
xchg
adc
ret
repz
lcall
cmc
sub
sub
pop
sub
loop
negl
xor
movsl
sbb
negb
mov
cmc
int
and
push
jmp
aam
mov
mov
lods
pop
ret
jae
or
in
sbb
lcall
mov
divl
fcmovbe
inc
mov
add
pop
leave
cs
arpl
cmp
or
mov
idivb
mov
imul
or
add
repnz
jnp
or
lds
ja
out
shrb
sbb
ds
aam
and
outsl
mov
cmc
sbb
and
loopne
cmp
scas
lds
in
in
push
inc
mov
es
fisubs
nop
xchg
divl
or
cmp
add
jecxz
lret
pop
sbb
cmp
adc
add
ljmp
mov
mull
pop
stos
enter
jo
adcb
subl
sub
pusha
mov
cltd
push
imulb
add
mov
mov
test
dec
inc
es
scas
inc
in
xchg
je
mov
inc
jle
xlat
iret
pushf
outsl
push
adc
xchg
dec
mov
stc
xor
dec
bound
pop
xchg
fldcw
stc
scas
xor
rcrl
shlb
fwait
jp
idiv
push
daa
dec
imul
sbb
xchg
push
jno
xchg
cmp
sub
xchg
movsb
scas
mov
in
lock
ror
sbb
mov
std
fistpll
pop
inc
clc
xchg
pop
mov
jnp
sbb
cmp
mov
ds
aas
cltd
mov
jge
inc
stos
cmc
or
imul
movsb
out
outsl
cmp
lcall
sti
xchg
or
enter
das
jmp
cmpsl
and
inc
sbb
popa
jg
test
jecxz
mov
xchg
lcall
cltd
fs
mov
decl
push
fxch
lret
mov
sub
inc
ss
sub
mov
inc
push
xchg
sub
and
hlt
mov
icebp
ljmp
std
pop
ss
jo
cltd
mov
mov
sbb
xor
or
int3
and
xchg
mov
adc
mov
or
push
jae
push
mov
xor
pop
dec
sub
fucom
je
insb
repnz
xchg
mov
sub
cmp
mov
mov
ret
dec
movsl
test
xor
ds
jo
dec
jmp
imul
jnp
inc
mov
push
fnstsw
sbb
jge
add
mov
adc
sub
in
dec
xchg
xchg
bound
and
add
pop
or
adc
mov
jle
jbe
pop
adc
sub
adc
pop
andb
gs
popf
push
in
mov
aas
adc
sbb
into
mov
sahf
jg
lret
mov
pop
repz
cmp
xor
adc
cmp
daa
outsb
fidivrl
push
scas
ss
in
add
sbb
call
mov
push
test
fwait
ds
mov
es
clc
and
fnstenv
inc
lods
imulb
and
pop
or
imul
and
mov
or
adc
addl
movsb
fcmovnu
into
dec
bound
push
sub
out
ret
je
pop
add
stos
dec
fiadds
pusha
orb
rclb
aas
orb
ja
pop
or
xor
aam
js
cmc
stos
jb
cmp
lea
lcall
cmp
inc
push
lahf
push
shlb
mov
adc
iret
add
mov
rorb
in
leave
cmp
cmp
or
push
xchg
push
cld
mov
xchg
sbb
test
push
test
cmpsl
mov
lgs
mov
data16
in
aad
cmp
out
movsb
or
aaa
test
cld
mov
in
add
xor
jno
aad
icebp
push
mov
cmp
xchg
mov
mov
cltd
adc
test
shll
fdivs
sahf
idiv
aaa
jo
dec
sbbl
add
mov
mov
dec
cmp
pop
inc
xor
dec
outsb
lock
jne
push
mov
sbb
pusha
rolb
loopne
pop
inc
mov
dec
dec
enter
ret
lcall
xchg
cmp
jnp
jns
push
push
add
mov
pop
gs
call
cltd
nopl
adc
jno
aas
fwait
and
fnstcw
lods
out
sarb
push
std
xlat
cmpsb
mov
movsl
dec
movsl
push
add
stos
mov
adc
cmp
mov
or
cmc
jge
mov
icebp
out
inc
into
pop
mov
mov
jae
jnp
jl
int3
jp
sarb
test
clc
xor
aaa
jle
and
loope
push
jns
mov
dec
int3
mov
cmp
rorl
mov
rol
in
int3
testb
adc
sbb
jno
pop
push
test
push
dec
fisttps
jg
jge
fwait
mov
popa
push
xor
inc
adc
pop
lock
test
xor
subb
jns
pushl
loop
pop
inc
push
cmp
divb
cmpsl
mov
scas
negb
cmp
mov
mov
out
fdivr
xchg
pop
xchg
in
push
adc
ss
add
popf
xor
daa
cwtl
cmp
sti
and
add
das
xor
cwtl
cmp
mov
icebp
mov
sub
inc
xor
stos
xchg
mov
mov
xchg
leave
fisubrs
lea
lods
adc
pop
cmp
out
add
fstp
xor
xor
cmp
repnz
loope
mov
jbe
sub
pop
xchg
xor
mov
js
imulb
das
rcrb
insb
sub
mov
and
addb
push
orl
ret
jnp
cwtl
push
movsb
push
int
adc
jb
pop
xchg
sbb
inc
sahf
outsl
rcll
xchg
or
or
fimull
add
mov
xorl
in
jne
in
je
out
enter
std
xor
or
adc
or
mov
or
and
fcmovnbe
push
sti
shl
lock
and
jno
enter
in
xchg
sahf
bound
push
into
add
sub
dec
inc
mov
shrb
push
jmp
int
cmp
or
and
es
xorb
leave
jne
sti
xchg
pusha
xor
and
out
rorb
ds
clc
scas
aaa
sbb
shll
test
jle
jbe
dec
inc
fstl
mov
call
movsl
xchg
pop
outsl
test
sbb
push
dec
cmp
test
xchg
push
ret
mov
scas
push
dec
int3
fwait
push
test
ss
push
je
adc
sbb
repnz
mov
inc
xor
dec
jge
ret
pop
cmp
hlt
movsb
adc
std
test
loopne
stc
mov
mov
cltd
imul
xchg
es
stos
mov
sahf
sbb
insb
pop
es
lods
pop
ja
xchg
in
mov
jb
test
pusha
fistpl
mov
outsb
sub
cmp
pushl
mov
popf
stos
sbb
call
movsl
lret
shl
xchg
and
mov
cltd
rcrb
je
ret
repnz
or
in
lret
sub
stos
fsts
int3
pop
jbe
add
push
and
adc
rolb
mov
add
sahf
jns
testb
jae
mov
adc
cmp
lcall
xchg
jne
xor
mov
mov
sbb
test
pop
mov
inc
push
icebp
sub
test
shll
daa
in
loope
or
mov
jmp
or
cmpsl
jo
jecxz
xchg
subl
mov
and
cltd
lea
mov
cmp
insl
aas
jo
ret
test
loope
lret
cmp
pusha
mov
mov
and
inc
cmp
push
push
adc
clc
or
pinsrw
stos
or
popf
dec
enter
cltd
jo
or
inc
ret
inc
inc
ret
mov
and
cmp
in
cmp
lcall
push
cltd
or
in
mov
xor
rclb
lods
out
shll
ficoms
push
lock
paddsw
push
pop
mov
ret
xchg
lcall
push
inc
lods
pushf
push
shl
jns
fwait
xlat
push
daa
lds
add
aaa
sub
xor
push
cmc
jl
adc
sub
sub
ljmp
pop
inc
in
mov
xor
outsb
xlat
insl
gs
pushf
mov
divl
adc
cmpsb
pop
mov
cmp
xor
daa
lea
fcomi
or
sti
into
pusha
mov
pop
test
mov
adc
popf
fistpll
mov
out
xchg
jb
insb
add
pop
mov
ja
sbb
xchg
xlat
cwtl
in
popa
call
cmpsl
pop
out
cltd
add
pop
aad
ret
inc
cmpsb
lock
cld
sub
stos
mov
out
scas
sub
rorl
mov
mov
push
push
lret
xor
push
mov
sub
ds
stos
push
adc
mov
sbb
add
push
xor
cmc
int3
das
popf
ja
jmp
lret
add
mov
sarl
addr16
jnp
xor
cs
and
push
push
incb
fidivrl
jns
mov
daa
repnz
inc
adc
jbe
cmp
cld
ja
ret
mov
and
icebp
lahf
movsl
mov
mov
and
je
cmp
mov
inc
mov
fldenv
in
cmp
test
scas
xor
enter
test
or
imulb
test
stc
fisubs
pop
lret
mov
adc
adc
stos
pop
insb
mov
mov
adc
push
imul
aas
cwtl
inc
cmpsb
pop
sub
jns
test
mov
mov
hlt
les
ja
push
push
bound
pop
inc
into
xchg
xor
jb
cs
ljmp
divl
xor
ret
js
lcall
adc
or
mov
xchg
mov
mov
clc
out
inc
jge
sub
loopne
addr16
xlat
mov
lret
inc
sti
jne
outsb
jl
mov
jbe
subb
mov
jp
fwait
outsl
cmp
mov
scas
loope
in
xor
jne
jae
dec
fstps
movsl
out
jnp
xor
mov
ficoms
ja
jns
push
or
jbe
enter
lea
mov
lods
bound
jnp
pop
in
fcmovnu
mov
nop
fsubrl
mov
jae
aas
inc
mov
cmp
mov
mov
xchg
out
aad
mov
adc
lock
and
or
mov
push
pop
jo
xchg
gs
bound
mov
mov
push
bound
fistpl
aaa
mov
jb
ret
mov
sbb
mov
adc
out
push
pop
aaa
leave
test
cmpsb
popf
push
lods
enter
fwait
dec
inc
les
mov
jle
add
mov
xchg
pop
sti
pandn
or
mov
testb
mov
mov
std
gs
or
fnsave
xor
addr16
gs
xchg
fsub
add
jb
xchg
mov
divb
rcrb
dec
or
and
dec
adc
sub
sbb
xor
jg
pop
or
or
mov
xchg
jno
push
xor
fimuls
cli
insb
inc
enter
aam
sbb
dec
sub
cli
lock
stos
lcall
scas
sbb
adc
pop
loopne
push
mov
jge
ljmp
xchg
test
ss
imul
dec
fmul
cmp
fimull
gs
cmp
divl
out
xchg
and
fldcw
lea
call
sub
pop
dec
mov
jne
or
pop
or
lods
cmp
xchg
xor
dec
shlb
push
push
and
jnp
int3
ss
cmp
mov
incl
mov
bound
in
xchg
aam
xchg
dec
imul
pop
dec
or
and
sub
in
sbb
mov
loop
add
scas
dec
repnz
dec
movsl
mov
push
push
adc
lret
lock
xorl
sub
dec
inc
xchg
push
or
pop
imul
mov
sti
pop
sub
push
movb
imul
mov
cmc
jns
adc
sbb
je
jo
outsb
jl
int3
push
pop
pop
fmul
sbb
xchg
rcrb
mov
movb
xchg
inc
in
pop
or
mov
shlb
outsb
push
pop
rol
ret
loope
and
pop
ret
int3
lret
sti
add
xchg
jnp
and
and
mov
cmovns
xchg
and
xchg
jb
and
int3
jg
int3
or
outsl
pusha
pop
push
jge
push
mov
jae
clc
cmp
loopne
mov
dec
ja
aad
sbb
repz
fwait
jge
cmc
lahf
out
mov
mov
fwait
fwait
or
mov
and
insl
loope
mov
mov
dec
xchg
rcll
push
push
or
fs
jo
xchg
ffreep
cld
adc
fs
insb
mov
in
xchg
xchg
push
cli
sarb
jl
and
sbb
push
in
cmp
add
lahf
sbb
cmp
pushf
gs
or
gs
cld
add
imul
add
hlt
lahf
pop
loope
sbb
testl
rcrb
imul
rcll
outsb
lret
fdivrl
data16
idiv
sbb
lret
pop
and
in
mov
mov
pusha
setge
sbb
arpl
in
lret
sub
sti
pop
sub
clc
mov
mov
dec
mov
mov
mov
testb
insb
stos
insb
daa
adc
dec
add
orb
sahf
ror
sbb
mov
scas
lret
arpl
out
andl
leave
test
call
ljmp
movsl
cld
sarb
xchg
xor
sub
mov
cmp
mov
jno
shrl
mov
fiadds
fidivrs
lcall
aaa
into
sbb
and
ret
xor
xor
movsb
push
outsl
mov
iret
dec
xchg
or
pop
pop
push
lods
sub
scas
sbb
fcomps
ljmp
addr16
dec
mov
or
lea
adc
adc
aas
sbb
sub
sbbb
test
mov
mov
add
ds
add
stos
and
andb
loopne
loopne
add
retw
xlat
lret
out
xchg
imul
aas
push
outsb
imul
sub
insb
ljmp
fwait
add
fadd
ret
rcll
or
sarl
adc
inc
fwait
mov
jg
inc
fistpl
sub
repz
scas
or
loope
xor
cmp
push
sbb
hlt
sub
or
loop
fwait
mov
mov
int
inc
inc
fcoms
fxch
cmp
stc
lods
into
ds
in
jl
jmp
jg,pt
frstor
xchg
and
jo
dec
inc
cmpsl
scas
push
push
in
mov
enter
fwait
pop
fistpll
jg
add
loopne
fdivrs
nop
imul
stos
push
div
add
enter
sub
imul
std
loop
insl
ljmp
add
jne
fstp
or
nop
push
clc
call
push
mov
mov
cmpsl
ret
push
scas
aam
mov
out
mov
jb
and
imul
mov
stos
stos
nop
mov
clc
sbb
out
sarl
lahf
and
subb
xlat
jp
mov
jmp
enter
sbb
or
hlt
push
push
fistpll
stos
dec
fwait
add
fidivrl
pop
cmp
adc
jnp
test
inc
ret
xor
mov
mov
xchg
or
in
cmpsb
rcr
and
mov
jne
pop
push
add
fucom
lods
sbb
ljmp
inc
sbbl
push
cmp
shrl
cmc
popa
mov
add
push
mov
rorb
mov
insl
xor
inc
into
je
sti
mov
mov
lods
aaa
and
test
push
ss
cmp
dec
lods
or
ficomps
push
push
rcrl
add
leave
mov
jmp
shrl
movl
gs
dec
dec
ja
outsb
mov
jno
xlat
adc
stos
pop
iret
pop
ret
mov
pop
sbb
inc
jnp
mov
pop
outsl
add
sar
pop
loop
dec
iret
loop
daa
movsb
sub
adc
xchg
pop
xchg
jb
mov
mov
jg
cmp
les
cmp
es
cli
ja
cmp
xlat
fst
outsl
ss
mov
inc
and
xlat
loop
cltd
lret
xor
icebp
push
fists
pop
sbb
mov
fisttpll
pop
cld
push
cmp
push
cmp
fmuls
es
sub
cli
pop
pop
mov
xchg
jl
shrb
in
cld
repnz
fwait
repz
lock
mov
push
loop
mov
cwtl
fdivrl
push
int
mov
mov
push
scas
lcall
adc
cmp
dec
test
inc
dec
jecxz
enter
sbb
movsl
loopne
cmp
cmp
add
std
mov
mov
inc
movl
cmp
mov
ret
insl
jecxz
jb
js
dec
pop
mov
hlt
enter
inc
dec
pop
test
and
adc
mov
mov
xchg
dec
pop
sbb
aad
stc
fisubs
xlat
cmp
pop
pop
mov
pop
fidivrs
inc
idiv
jnp
jg
neg
pop
test
pop
and
aas
mov
sub
out
mov
fcmove
pop
add
sti
stos
pop
dec
inc
fs
sbb
lock
mov
cs
rcl
mov
sub
jno
cmc
mov
push
xchg
fildl
add
push
cmp
mov
fwait
xchg
or
and
push
fst
addb
inc
daa
cmp
aad
pop
imul
insb
jbe
in
pop
sbb
jbe
movsb
adc
pop
ds
sub
xchg
pop
in
popf
stc
xor
dec
pop
push
andb
addr16
mov
bound
mov
xor
test
xchg
xchg
dec
jb
add
in
pusha
mov
mov
sbb
test
or
loop
jno
es
mov
in
stos
call
lods
adc
out
fld
nop
mov
push
bound
lds
daa
cmp
sub
test
mov
xor
in
ss
aad
clc
add
jmp
mov
mov
mov
je
jne
test
sti
repz
inc
xor
stos
cmp
jmp
xchg
daa
dec
test
inc
or
popf
add
xchg
int3
flds
fmuls
pop
jae
lods
popf
mov
jnp
jbe
fwait
lahf
sub
cmpsb
xlat
cmp
and
pop
add
das
inc
push
les
vpxor
rcrl
jge
cmp
out
fmuls
push
xchg
mov
xchg
mov
stos
fcomps
or
and
out
xchg
push
lea
imul
cwtl
iret
xor
gs
nop
arpl
jg
or
iret
add
sub
dec
out
stc
sbb
sub
sub
push
fnsave
data16
jo
imull
dec
cmp
jbe
pop
in
repnz
push
lods
in
pop
dec
cmp
loop
xchg
xchg
call
xchg
insb
arpl
xor
jecxz
in
jno
push
inc
leave
mov
cmpsl
jg
jo
fwait
jg
cmp
mov
in
bound
aas
fdiv
sbb
cwtl
xchg
fisttpl
and
add
inc
inc
adc
popa
sahf
lea
sbb
sub
out
lods
or
fsub
les
into
and
sahf
scas
notl
in
cmp
xorb
xchg
cmpsl
xor
addr16
out
std
data16
adc
sub
fwait
xor
dec
jbe
jge
bswap
mov
mov
mov
jb
add
mov
dec
xchg
in
dec
mov
stc
cmc
cmp
mov
pushf
push
adc
in
inc
in
jge
cmpsl
or
shlb
and
call
fmuls
xchg
mov
cmp
sbb
sub
lods
xor
aas
out
inc
push
into
lods
cmp
icebp
iret
test
daa
adc
enter
enter
pop
daa
roll
pop
xor
ret
popf
popa
std
xchg
ret
adc
mov
mov
lret
clc
jge
pop
dec
xchg
fidivs
and
fwait
cmc
rol
ret
aam
subl
shr
xor
test
mov
scas
sub
sti
bound
out
adc
sbb
mov
dec
insl
leave
jbe
pop
cmp
divl
cwtl
stc
mov
aad
xchg
popa
mov
into
filds
popa
fcoms
add
call
enter
stc
pop
xchg
lahf
imul
dec
sarb
shl
rcr
sub
les
shll
ds
ja
movsb
adcb
sub
arpl
and
shll
nopl
mov
or
lahf
xlat
jmp
mov
jmp
test
sub
mov
xor
or
fildll
xor
ret
fsubrl
clc
push
xchg
js
aad
lds
daa
pop
jle
loop
daa
or
push
in
jbe
jmp
adc
sbbb
sahf
add
and
pop
mov
add
out
fiaddl
dec
lret
in
daa
adc
xchg
js
call
add
jae
mul
or
popf
sbb
inc
inc
ljmp
dec
hlt
push
lret
cmpsb
sbb
loope
xor
jbe
icebp
stos
adc
imul
ret
pop
sar
lahf
movsb
iret
add
stos
int
insb
cmp
fcmovb
mov
insb
rol
int3
push
and
cmpb
mov
scas
inc
scas
cmp
dec
bound
and
mov
mov
xor
icebp
aas
mov
mov
popf
inc
out
out
data16
or
jns
jmp
es
out
call
inc
xor
cmp
rcl
pop
or
out
xor
outsl
mov
cwtl
xorl
fstpl
push
push
aam
push
inc
mov
js
aad
mov
outsl
inc
add
divb
addr16
mov
ss
mov
mov
push
cli
push
pop
sub
mov
mov
push
push
mull
rolb
dec
cmpsb
incb
xorb
mov
sub
and
jg
and
mov
adcl
cmp
xlat
loop
cmc
dec
dec
lahf
or
les
jmp
es
jne
sub
out
in
sbb
push
and
rorl
mov
xor
dec
fisttpl
pop
mov
push
imul
orl
xchg
xor
and
mull
insl
pop
test
adc
xlat
fadds
mov
ds
dec
nop
in
testb
mov
pop
mov
dec
mov
dec
mov
pop
dec
loop
lret
popf
mov
aas
divb
xchg
in
cmp
fsubl
mulb
xlat
cmp
xchg
clc
push
or
jbe
movsl
mov
rcrb
inc
cld
add
push
mov
pop
dec
mov
dec
add
movsl
cmc
mov
in
xchg
or
pop
cli
int3
out
cltd
sbb
je
dec
shrb
pop
and
jbe
ror
pushf
rcrl
out
jle
dec
pop
insb
jns
dec
cmp
cltd
mov
test
imulb
insb
xchg
mov
push
roll
movsb
mov
mov
and
mov
or
dec
adc
xor
add
cli
cs
xchg
and
pop
iret
outsl
cld
mov
cli
inc
arpl
xchg
daa
insl
inc
ja
xor
sbbb
cmp
andb
cli
mov
fists
mov
and
addr16
sbb
outsl
add
loope
outsb
shrl
hlt
or
sub
lret
pushf
dec
push
les
popa
add
fs
inc
add
insl
dec
shll
jge
push
pop
jns
xchg
sbb
incb
sbb
out
cmpsl
out
dec
push
loopne
or
mov
js
xchg
xchg
cmp
xchg
jnp
mov
and
pop
inc
test
bound
dec
jecxz
flds
adc
cmp
xchg
jb
repnz
loopne
popa
xchg
jecxz
ja
push
hlt
jmp
cmp
push
inc
not
in
mov
ljmp
test
push
nop
inc
inc
test
addb
jge
hlt
xchg
aam
mov
shrl
sbb
stos
sub
add
lret
add
cmpsb
flds
lds
dec
out
test
or
and
jmp
pop
xchg
mov
repnz
push
inc
xchg
into
push
cwtl
xchg
sub
push
cltd
mov
or
repnz
and
add
lds
ds
gs
sub
out
sub
fwait
js
mov
or
lock
dec
xchg
or
jo
cld
lret
inc
test
das
xchg
dec
jle
test
adc
jg
fisubrl
xchg
test
adc
inc
jmp
sub
xor
fidivs
jo
cltd
mov
mov
jb
inc
sub
inc
cmp
fs
xchg
cmpl
jmp
jns
into
and
lcall
mov
push
outsl
push
fiaddl
dec
je
dec
push
mov
leave
scas
adc
or
xor
xorb
xor
shlb
adc
imul
xorb
insb
sbb
loopne
std
dec
xor
xchg
std
outsb
cmp
mov
ss
and
or
jo
sbb
push
xchg
shrl
rcl
je
fisubl
cmpsb
and
xchg
adc
lds
pop
mov
push
repnz
jne
mov
dec
aaa
adc
push
inc
sub
jecxz
shll
ss
repnz
shrb
add
sub
stc
adc
and
shll
pop
in
add
lods
mov
iret
or
xor
test
cmc
or
jecxz
add
scas
xor
cmpsb
punpcklbw
add
inc
pop
jmp
out
sub
pop
sub
jg
mov
popa
cs
rcl
jno
mov
lcall
push
clc
pop
jbe
test
push
mov
push
addr16
xor
xchg
jae
mov
int3
rcrb
sbb
lret
movq
repz
ret
mov
dec
sbb
rcrl
dec
xchg
shl
outsl
int3
enter
adc
out
popa
ja
nop
lea
xchg
nop
mov
push
xchg
rcll
add
xchg
les
mov
and
testl
sub
lds
dec
mov
add
xor
dec
cli
push
sbb
xchg
imul
pop
push
adc
sahf
jcxz
push
cmp
cmpsb
stos
mov
lcall
cmp
loope
inc
jb
lds
mov
negl
rorb
pop
jecxz
into
or
adc
mov
cltd
jnp
mov
inc
cmp
mov
inc
inc
mov
pop
pop
and
stos
data16
push
inc
hlt
les
pop
int
daa
scas
pop
push
sub
mov
xchg
mov
fs
mov
shlb
pop
push
aam
add
mov
push
fisubl
and
pop
in
fstpt
cmc
cmp
inc
mov
cwtl
cmp
xchg
push
xor
fmuls
add
cmp
fnstsw
lods
imul
movsb
fbstp
lea
pop
cmp
pop
or
mov
lcall
and
push
pop
jbe
adc
mov
inc
sub
loope
lods
inc
pop
mov
test
mov
sbb
fs
and
cli
adc
mov
xchg
or
mov
bound
cmc
jns
fisttpl
inc
mov
rcl
cltd
icebp
je
and
lahf
incb
cmp
pushf
pop
jns
gs
push
adc
int
mov
xor
add
push
imul
mov
ss
adc
mov
push
fcomi
in
mov
xchg
loope
lods
push
pop
cmp
mov
push
jge
test
sarb
mov
cwtl
adc
add
pop
repnz
cmc
jnp
movb
fidivs
cmp
pop
add
scas
lret
ljmp
ss
test
or
xor
iret
push
push
add
int3
push
daa
out
scas
pop
xchg
arpl
mov
je
sbb
pop
lea
movsl
xchg
dec
inc
pop
sarl
jg
rorl
push
lods
xchg
aad
sbbb
movl
cmpsb
sub
scas
xchg
push
data16
xor
jae
jnp
aaa
push
and
jbe
sbb
sub
dec
ficomps
dec
nop
rorl
xor
mov
arpl
and
mov
xchg
xchg
inc
insb
inc
cld
add
push
sahf
les
and
mov
in
lock
mov
xchg
fildll
adc
pop
or
scas
pop
orb
sbb
pop
xor
or
lock
cmp
sbb
rorl
inc
imul
xchg
inc
notl
arpl
es
inc
pusha
push
call
push
cmp
clc
adc
xchg
lret
pusha
push
mov
jmp
cmpsb
dec
jne
dec
push
lret
hlt
in
rcll
jge
call
cmp
push
bound
jle
js
into
xor
das
sbb
ret
cltd
push
gs
push
dec
in
inc
mov
repz
in
iret
shlb
xchg
and
in
int3
pop
mov
push
xor
in
jecxz
pop
notb
sub
idiv
pushf
insb
mov
nop
add
jno
clc
cmpsb
push
mov
cmp
lds
mov
pop
push
sarl
sbb
or
mov
mov
mov
or
pop
dec
jae
in
cwtl
mov
fldt
push
aaa
push
push
inc
xor
sbb
insb
push
dec
or
outsl
in
dec
lea
cmp
rorb
add
popl
outsb
cmpsb
aas
adc
mov
popa
rorb
lods
or
sub
push
xchg
insb
sub
jmp
mov
xor
mov
add
stc
aad
or
lahf
cmpsb
out
bound
in
repz
add
stc
fwait
mull
shrl
push
sahf
and
sub
xor
mov
imulb
loope
sbb
mov
dec
pop
into
xor
mov
aad
pop
cmp
das
xchg
bound
jae
fwait
adc
pop
or
dec
adc
mov
movsl
sbb
dec
cwtl
hlt
rorb
push
adcl
add
shrb
sub
call
iret
add
push
ficoms
push
int3
push
imul
pop
lret
cmp
hlt
cltd
test
push
jnp
out
sbb
test
mov
mov
jmp
movsb
and
out
or
daa
sub
sub
cmpsb
mov
add
or
es
xor
mov
xchg
push
cwtl
adc
xchg
dec
loopne
push
div
loopne
pop
lods
xor
sub
lds
cli
push
icebp
fidivrl
cmc
pop
jle
repz
mov
fstps
incl
arpl
aaa
ljmp
cmc
mov
lea
jo
sub
fidivs
outsb
sub
out
mov
fwait
mov
sbbl
and
xor
pop
jo
sbb
mov
cmpsl
outsl
cmpsl
leave
es
push
movsb
inc
loopne
imull
sub
mov
jbe
jmp
sbb
cwtl
mov
dec
lret
mov
js
adc
loop
lcall
or
push
xchg
ss
lret
sbb
incl
pop
mov
xor
pushf
mov
mov
xchg
es
or
jb
test
dec
jmp
mov
cmpb
insb
movsb
xor
insl
and
inc
xchg
mov
hlt
rorb
mov
fdivl
jns
push
fisubrs
ficompl
and
loop
lret
mov
addb
iret
cmp
dec
xor
inc
xor
call
jg
popa
or
imul
and
lods
cmp
mov
test
and
js
jne
popa
push
dec
mov
hlt
js
mov
and
aaa
stos
push
idivb
cmp
ret
fmulp
mov
cltd
cmp
pop
push
out
nop
cmp
and
stos
pop
enter
test
xchg
xlat
ficomps
mov
lcall
cmp
pop
sub
add
jge
outsb
cmp
pop
sbb
push
loopne
cmp
lea
sub
aas
out
cmp
cmp
cmpb
or
popf
sub
xchg
aad
mov
roll
mov
sti
pop
bound
xor
mov
jae
xchg
insb
imul
sub
adcl
xchg
mov
dec
inc
add
lret
int
jecxz
xor
sbb
in
ss
iret
out
mov
xlat
sbb
jl
sbb
inc
adc
adc
fists
ss
jbe,pn
inc
imul
add
out
pushf
loop
andb
arpl
pusha
and
push
stos
insb
orl
test
xor
jb
mov
jp
daa
arpl
push
fistl
and
rorb
pop
lcall
punpckhdq
dec
gs
jmp
jne
and
fucomip
rcll
inc
fnstenv
add
pop
icebp
dec
dec
and
int3
inc
push
xchg
and
lods
jl
jge
xor
cld
push
out
fs
adc
ret
pop
loope
dec
fdivl
cmpsl
notl
push
jbe
rolb
dec
fisttpl
cld
and
daa
insl
xor
aas
lods
flds
sarb
dec
pop
push
cli
jns
imul
push
hlt
into
stos
push
fildll
mov
cmp
inc
shrl
call
shl
imul
iret
es
adc
adc
ljmp
xlat
dec
xor
jne
into
fldcw
adcl
fmull
push
mov
jmp
xor
sub
loope
mov
and
fistpl
lods
sbb
inc
push
fcomip
inc
imul
adc
test
out
jle
sbb
mov
loopne
js
jnp
mov
ljmp
push
test
stos
xor
mov
mov
sub
dec
mov
pop
add
hlt
jge
popa
call
je
mov
jmp
and
sar
int
adc
cmp
out
lea
cmc
filds
aas
int3
fdivs
call
add
lds
push
repz
sbb
inc
in
loope
fisubrl
pop
adc
mov
xchg
cltd
fdivrs
cmp
cmp
cmp
pop
inc
pop
pop
cmp
lret
test
sbb
notb
pusha
pop
mov
out
lods
mov
sub
or
shlb
lods
jmp
xchg
cmc
insb
enter
cmpsb
negl
andb
das
pop
mov
lahf
ret
cmp
xlat
fisttps
and
jno
imul
mov
test
cmp
jl
add
cs
add
adc
rclb
sbb
mov
mov
push
test
push
into
xlat
inc
xor
push
mov
xor
lret
icebp
out
xchg
cmpsb
in
xor
int
push
push
lret
fxch
fildll
int3
and
or
add
xchg
sahf
xor
xchg
mov
mov
ljmp
sbb
sbb
jecxz
into
into
push
mov
das
dec
scas
inc
add
push
imul
jg
je
cs
imul
pop
in
aam
fldcw
xor
arpl
stos
je
call
fmul
and
xor
imul
mov
fwait
inc
ljmp
xchg
xor
leave
xchg
das
mov
mov
cmpsb
pop
mov
lds
fs
lret
push
mov
jae
push
loope
cltd
add
lret
pop
dec
push
and
pop
outsl
outsb
call
pop
rcrl
std
mov
xor
ficompl
adcb
sub
mov
mov
ret
pop
dec
dec
mov
inc
mov
imul
nop
and
andb
bswap
int
and
dec
ss
pop
sbb
cld
xchg
stos
outsl
mov
add
xor
mov
gs
movsl
add
mov
mov
xchg
idiv
test
fs
cltd
xchg
loope
ret
ljmp
lcall
pusha
es
adc
jne
mov
xchg
mov
add
mov
cmp
cmp
int3
bound
ret
adc
mov
out
cmpsl
cmp
xchg
loop
imul
insb
mov
dec
stos
ljmp
loop
xor
inc
outsb
and
lcall
lcall
inc
int
rcrl
dec
hlt
lods
mov
mov
dec
jb
les
cwtl
sbb
dec
mov
push
frstor
aaa
loopne
pop
loope
sub
js
aad
inc
xchg
lahf
and
pcmpgtb
movsl
cli
push
ret
mov
dec
adc
cmpsb
aaa
and
pusha
fcmovnbe
jle
adc
mov
push
and
fcmovu
filds
adc
and
jne
lods
sbb
je
mov
icebp
add
xor
in
add
imul
add
loope
xchg
sub
or
aas
sub
inc
int3
stos
aas
aam
repz
mov
push
pop
jg
and
imul
push
outsb
xor
cwtl
sti
aaa
add
add
and
mov
icebp
add
cmp
std
xchg
fcoms
test
pop
out
lret
sub
pop
xchg
xor
pop
xor
addl
aas
and
push
rorb
mov
test
pop
add
xchg
mov
xchg
imul
sbb
flds
loop
and
fldenv
xor
incb
in
cmp
xor
dec
jg
jb
in
xchg
sbb
dec
lret
jmp
sub
jns
clc
sub
iret
fnstenv
push
mov
outsl
js
add
mov
or
push
lock
mov
xchg
push
outsb
subl
xchg
ss
mov
xor
lods
cmp
xor
add
inc
jns
xor
mov
pusha
in
push
aam
fs
add
jae
loop
js
cwtl
and
cmp
mov
je
stos
cltd
xchg
xchg
aas
mov
arpl
push
jle
mov
ret
cmp
int
xchg
rcrl
push
stc
inc
fcmovne
mov
outsl
adc
shl
jge
push
mov
mov
shrl
cmp
scas
add
mov
pop
lret
push
insl
rcl
popf
mov
int
push
mov
nop
and
movsb
dec
clc
sub
mov
sbb
pushf
mov
addb
inc
or
xor
adc
xor
adcb
xchg
cmpsb
and
or
add
lea
sub
xor
test
fimull
adc
mov
sub
and
scas
mov
cli
ja
das
pop
jno
loop
mov
adc
adc
jns
ret
push
xchg
add
jg
test
test
push
xchg
or
mov
loop
test
into
nop
sbbl
mov
stc
sahf
xor
stos
rsqrtps
mov
test
jne
dec
sub
jbe
inc
fdivl
roll
pop
add
jecxz
mov
fs
pop
add
mov
test
imul
loop
fs
lock
push
imul
mov
loop
sbb
shrb
insb
out
shrb
sarl
xor
or
dec
or
cli
fidivl
hlt
aaa
in
jbe
dec
dec
jnp
std
push
shll
mov
dec
mov
test
aaa
jbe
loope
jne
movsl
mov
mov
jl
lret
mov
mov
mov
icebp
dec
jmp
mov
fwait
jp
int3
sti
notb
mov
add
mov
adc
xor
push
push
cmp
or
pop
fcmovbe
iret
inc
in
loopne
enter
jb
stc
inc
subb
pop
shll
mov
mov
and
sbb
xor
push
clc
test
xor
mov
cmpsb
mov
push
inc
mov
lea
mov
movsb
cmp
in
and
push
cs
enter
imul
cmc
hlt
xor
jnp
lock
mov
ret
test
stos
popa
sbb
hlt
movsb
and
and
jle
sahf
add
pop
cmpsb
fildl
add
and
mov
sbb
mov
add
and
imul
mov
clc
fcoms
leave
add
loopne
bound
out
pop
outsb
in
jl
mov
cmp
cmp
test
smsw
fwait
orl
fwait
cltd
add
sbb
xchg
sbbb
pop
fucomip
cmp
add
mov
pop
sub
arpl
imul
mov
in
jb
aad
xor
sub
insl
outsl
insb
pushf
popf
loopne
adc
pop
cmp
imul
xlat
sbb
add
jl
insb
cmp
and
mov
loopne
sub
outsl
in
xor
and
or
dec
xchg
loope
mov
cmp
sti
pop
sahf
shrd
jge
push
jg
lods
and
je
or
and
aam
and
add
ja
out
pop
or
add
dec
cmp
clc
aad
repnz
xor
ss
sahf
imul
mov
imulb
stos
das
cli
clc
ja
rclb
or
test
add
sbb
mov
inc
pusha
cs
outsl
nop
lods
test
sub
mov
cmpsb
cmp
pop
sbb
mov
lret
ret
push
jp
and
fwait
and
mov
outsl
loop
and
imul
sbb
call
jnp
mov
outsl
and
in
xor
rcll
adc
xor
dec
in
or
xchg
fs
push
mov
jbe
cmp
jbe
jns
pop
push
scas
stc
xchg
xlat
movsb
in
cmc
into
or
dec
sub
inc
shll
push
inc
xchg
pop
mov
addr16
dec
dec
xchg
add
xchg
addr16
sub
cltd
int3
mov
fucom
cmc
cwtl
or
inc
mov
and
and
popa
lret
xor
pop
mov
sarb
jp
fisubrs
outsb
mov
fdivrl
pop
shrb
sbb
xchg
int
shrl
lret
push
add
negb
addr16
sbb
mov
push
cwtl
pusha
and
int3
std
lock
shlb
jp
dec
mov
mov
aam
int3
adc
lea
cmp
mov
sbb
xchg
push
cmp
mulb
jnp
movsl
xor
fdivr
neg
cmp
cld
loope
mov
rolb
clc
fsub
inc
pop
ret
movsb
fstps
pushf
fucom
mov
scas
mov
lret
or
cli
shll
jle
lcall
mov
out
scas
daa
aas
jle
std
outsb
mov
xchg
xchg
mov
adc
sub
into
pop
cwtl
mov
cmp
adc
out
clc
shll
hlt
pop
pop
roll
mov
and
aaa
test
pop
inc
rcl
sub
jns
cld
imul
mov
fs
sub
in
xorb
in
out
mov
iret
and
popa
repnz
pop
aam
xor
fstp
ja
addr16
pop
cmpsb
outsl
xchg
outsl
repnz
mov
cs
dec
dec
out
adc
push
xchg
xchg
cmp
movsl
sti
pop
xor
sbb
rcl
push
sbb
xchg
xor
mov
mov
cmpsl
cmpsl
shrl
cmpsl
jle
dec
cmc
or
lods
sahf
dec
ljmp
add
pop
xor
cs
int3
and
mov
pop
xor
in
push
int
fdivs
cmc
arpl
aad
cmp
jg
add
sub
add
add
xchg
add
jge
push
lods
out
jns
and
paddsw
inc
sub
jp
add
cs
cmp
jmp
mov
push
add
add
bound
hlt
in
mov
insl
sub
js
mov
pop
dec
cmpsl
mov
sar
out
jno
xor
jae
clc
cmpsl
xchg
mov
mov
adc
leave
sub
shrb
cwtl
movsb
sbb
lock
andb
xor
inc
cmp
push
adc
lods
or
pushf
in
sub
jg
in
jge
in
into
mov
sbb
mov
push
sub
push
sub
stc
push
xchg
jle
jb
or
leave
inc
inc
xchg
lret
imul
lea
orb
mov
arpl
jnp
out
push
jmp
shr
pop
inc
stos
mov
and
mov
add
mov
pushf
mov
loop
cmp
fsubl
fdivr
and
pop
cmp
test
mov
daa
add
out
stc
mov
xchg
std
push
ds
mov
adc
imul
nop
insb
dec
mov
enter
jl
push
sub
xchg
call
cld
xor
push
cli
xchg
fwait
enter
out
out
pop
enter
stos
xchg
cmp
iret
ficomps
cmp
pusha
rcrb
movsl
xor
mov
test
add
shll
cmpsb
arpl
dec
test
add
dec
into
mov
leave
lcall
mov
sahf
sbb
xlat
pop
xor
adc
aam
and
shll
dec
xor
stc
xchg
loop
mov
stc
jb
mov
pusha
loope
mov
push
loopne
mov
mov
inc
pushf
jle
movsl
pushf
aaa
andl
inc
xchg
xor
mov
inc
xlat
call
lock
negb
push
or
push
fwait
mov
push
add
ret
cltd
push
ljmp
and
cmp
and
in
inc
pushf
push
mov
and
ljmp
ret
mov
jno
lcall
pusha
mov
scas
int
pop
sub
sbb
jmp
mov
in
mov
xchg
push
and
mov
cmp
imul
dec
ficoml
mov
aaa
pop
jnp
rol
sub
dec
cwtl
cmp
lahf
sbb
loope
and
jmp
repz
pop
fistpl
pop
sbb
xchg
adc
mov
cltd
sbb
jmp
mov
pop
repz
leave
jl
int3
out
js
loopw
movsl
sbb
repz
mov
flds
imul
sub
add
adc
xor
mov
pop
aam
dec
aam
fists
int3
xchg
movsl
insb
fxch
and
ja
mov
sub
xchg
lock
insl
mov
or
stos
lock
push
xchg
push
mov
sub
or
inc
pop
inc
or
dec
jo
int3
mov
enter
mov
mov
sbb
push
pop
xchg
xor
or
mov
pop
push
ds
jo
imull
lahf
std
mov
mov
test
pop
sub
mov
xchg
cmp
dec
jnp
clc
lret
mov
cmp
inc
shlb
and
xchg
push
test
mov
jp
push
arpl
mov
loopne
fs
mov
out
mov
out
inc
sub
insb
mov
xor
mov
push
jle
sub
mov
jmpw
sbb
push
jo
je
mov
popf
lods
aas
push
call
and
xor
arpl
lods
push
xorb
aaa
pop
lahf
ret
adc
ds
xor
je
dec
and
dec
jmp
adc
push
js
leave
test
sbb
jmp
push
sub
test
into
inc
insl
dec
add
sub
push
dec
mov
and
push
mov
out
push
xor
mov
inc
xor
mov
jns
xchg
mov
push
pop
xlat
out
bound
dec
mov
sub
mov
lods
cmp
rcrl
pop
ret
mov
xchg
jmp
xchg
dec
fimull
or
jb
aas
push
stos
cwtl
sbb
jae
aas
push
push
rclb
movsl
ss
movsb
mov
inc
arpl
sbb
mul
pop
out
dec
icebp
popf
int
sti
cmpsl
mov
add
out
mov
fdivs
mov
xor
xchg
mov
sbb
fsubl
push
push
sub
push
mov
call
dec
es
jp
cmpsl
mov
out
and
lods
les
aas
sbb
and
xchg
inc
enter
dec
inc
daa
idivb
xlat
int3
shll
pop
push
lods
xchg
int3
add
sbb
push
push
push
mov
cwtl
in
or
pop
aam
mov
aaa
and
faddl
mov
mov
rep
fsubrl
and
inc
jns
sbb
dec
mov
incb
test
add
leave
ds
pop
roll
jp
fs
mov
sub
pop
inc
cmp
arpl
mov
cmp
and
adc
lock
orl
sub
insl
cli
xchg
outsl
cmp
dec
orl
sbb
push
mov
xlat
data16
mov
fsubs
xor
pop
les
cmpsb
xor
and
adc
jb
adcl
mov
dec
or
shll
push
mov
in
loope
mov
mov
mov
imul
je
mov
mov
xchg
or
mov
lds
je
aam
cmp
ljmp
insb
pop
inc
dec
add
imul
dec
stos
ret
cmp
lods
ret
leave
stos
cwtl
leave
or
mov
lcall
fst
pushf
mov
and
into
xor
pushf
shlb
les
xor
push
add
movl
test
push
jbe
lds
mov
pop
sub
cmp
mov
push
cmp
jae
add
andb
mov
mov
aas
adc
push
mov
adc
mov
adc
push
inc
dec
mov
adc
shlb
sub
lret
test
push
jmp
mov
lea
add
push
ja
rorb
ds
loope
int
call
mov
adc
movsl
fsts
xor
jae
push
pop
xchg
jg
jg
jne
lock
neg
dec
mov
mov
cmp
cwtl
aam
sbb
mov
popa
and
repz
lea
pop
or
xchg
cmp
out
xor
sbb
push
ret
popa
out
addr16
sbb
inc
test
mov
add
mov
in
mov
jo
aas
outsl
cld
inc
in
xchg
loope
scas
mov
push
in
xchg
rorl
jno
lahf
jno
mov
dec
arpl
cmc
scas
pop
lahf
aas
mov
sub
or
adc
xchg
in
imul
scas
shrb
or
jp
addr16
add
jmp
pop
mov
aas
mov
adc
fcoml
or
pop
fisttps
test
imul
cmpsb
sarl
cltd
dec
fcmovnbe
ds
dec
jecxz
dec
mov
inc
xchg
filds
dec
out
push
rcr
cmp
sahf
sbb
add
cwtl
cmpsl
rorb
ret
mov
lock
pop
sahf
push
in
mov
mov
jle
pop
xchg
loope
aas
adc
mov
shll
jbe
sbb
pop
or
ret
xor
push
das
rcrl
xor
jle
jno
daa
sub
iret
mov
inc
inc
mov
popa
test
lods
ret
lods
cbtw
mov
jno
in
stos
test
stc
js
sub
add
mov
out
lcall
mov
outsl
inc
cltd
addr16
mov
dec
outsl
lret
xor
fisubs
mov
movsb
jmp
loope
mov
bound
xor
jns
or
ds
loopne
cwtl
xor
je
dec
or
dec
or
and
push
mov
jp
out
mov
inc
jecxz
fiadds
jb
test
test
sbb
dec
aaa
xor
jl
lcall
or
scas
dec
loop
push
push
inc
jl
or
mov
sbb
ljmp
arpl
outsl
and
cmp
das
push
mov
mov
loopne
gs
push
cmc
stc
cwtl
pushf
out
push
rorl
add
jne
push
jmp
outsb
jae
fcmovb
test
sbb
add
addb
jb
out
mov
sar
fbstp
push
std
adc
dec
sbb
sbb
cwtl
into
fldt
daa
mov
mov
mov
and
popf
les
test
mov
jmp
adc
arpl
aad
les
inc
mov
movsl
add
cwtl
fs
out
xchg
adc
aam
sahf
sbb
inc
push
test
mov
or
xor
sbb
jnp
pushw
pop
xor
mov
sarb
mov
pop
push
out
push
jmp
mov
gs
xor
stc
cmpsb
sti
or
ljmp
bound
aad
cld
or
mov
add
rcr
mov
pop
cmp
lcall
mov
sbb
pop
rolb
sbb
mov
arpl
das
xchg
rcrb
xor
leave
andb
ljmp
jge
or
call
sbb
adc
daa
sub
outsb
out
push
sbb
mov
pop
push
daa
jl
and
fidivrs
push
test
lret
mov
or
sub
pop
fidivrs
movsb
cltd
jg
or
xchg
add
push
jne
pop
push
mov
mov
clc
fwait
dec
dec
jne
je
or
insb
test
xor
xchg
and
in
test
mov
lea
inc
icebp
or
add
test
int
cs
rclb
push
cmpsb
xchg
fldl
movl
mov
add
jmp
adc
mov
scas
iret
and
test
mov
gs
inc
xor
fnsave
in
xchg
dec
cmp
aad
push
adc
jecxz
outsb
push
jne
jp
out
fisubl
push
test
lods
cmp
arpl
xchg
push
jmp
pop
es
push
push
mov
xor
mov
lds
mov
xchg
xor
jecxz
dec
jnp
call
cli
je
cli
or
fwait
mov
repnz
cmp
mov
pop
and
test
addl
jnp
add
inc
stos
insb
jno
test
inc
mov
out
sbb
add
add
std
xorb
sub
fs
in
mov
cmpsl
mov
jle
xchg
sarl
sti
sbb
and
mov
ret
fildll
xor
inc
xor
mov
sub
mov
dec
into
mov
pop
test
push
pop
sbb
mov
mov
cltd
jb
push
into
xor
mov
jg
bound
and
test
dec
andl
das
rcl
mov
push
or
lods
push
negb
scas
xchg
movsb
cltd
jno
and
scas
jg
orl
xor
test
into
test
ficoms
rcrb
test
mov
lds
fsubl
std
sbb
imul
jmp
setge
scas
jnp
push
test
lock
loope
ds
jp
jns
std
mov
sub
lcall
mov
mov
andl
clc
mov
shr
sahf
adc
lea
mul
dec
imul
adc
pop
in
mov
or
xlat
sarl
ljmp
mov
loope
add
adc
and
sbb
in
test
and
pusha
mov
insb
insb
sub
dec
jnp
or
xor
inc
add
ret
jp
mov
push
fdivp
dec
add
ret
cli
stc
arpl
add
mov
sbb
fcomip
iret
jne
push
mov
es
and
dec
sub
jl
xor
lret
or
ss
das
xor
ljmp
lret
fsub
pop
push
jns
dec
jnp
add
xor
jecxz
pop
or
mov
pushf
mov
repnz
sub
shrb
out
xor
cmpsl
ljmp
out
sub
clc
mov
pop
out
outsl
movb
push
jnp
sbb
cs
ficoml
cmp
or
inc
xchg
rcr
sub
pop
and
mov
cli
adc
out
jns
aam
jecxz
insb
enter
inc
xor
pop
outsb
xchg
cld
test
leave
adc
adc
in
mov
dec
sub
pop
mov
movsb
leave
push
adc
jmp
loopne
adc
xchg
test
pop
sahf
imul
pop
lcall
in
aas
dec
test
gs
push
jmp
es
fdivs
fcoml
xchg
mov
add
outsb
pusha
jge
fwait
inc
fistps
leave
adc
pop
aam
clc
inc
adc
mov
outsb
imul
aas
pop
xor
push
and
cs
add
cmp
push
adc
pop
adcb
push
jge
cmp
mov
jns
popf
cmp
lds
and
addr16
sbb
lret
dec
lock
out
lea
or
dec
das
dec
adc
aam
xchg
mov
jmp
jb
xchg
cmp
cmp
data16
xchg
pop
sub
sahf
xor
or
frstor
sarl
lock
or
movsb
aam
mov
pop
xchg
and
jno
jb
mov
pop
arpl
lcall
or
xor
fwait
jb
cmc
bound
add
insl
xor
push
jnp
arpl
ret
shlb
shrl
dec
mov
xor
inc
ret
pop
or
fbld
jl
or
invd
mov
nop
mov
inc
mov
clc
inc
sub
pop
adc
clc
in
je
jb
imul
dec
mov
fistpll
hlt
pop
sbbb
add
push
ret
jecxz,pn
iret
rcpps
movsb
pop
test
pop
sub
inc
leave
stc
inc
lcall
loop
cmpsb
int3
lret
sbb
inc
jbe
push
out
das
ds
pop
mov
rcr
mov
jmp
movsb
mov
dec
pop
cmp
das
in
stos
pop
adc
andb
xor
out
stc
push
sahf
shll
cmp
psraw
inc
pushf
popf
or
mov
dec
jmp
lea
pusha
add
lock
mov
push
insb
push
mov
add
orl
xchg
cmp
mov
imul
adc
sub
repz
or
divb
or
xchg
mov
idivl
jb
add
sti
rolb
xor
scas
cmp
jg
or
xchg
aam
fimuls
mov
sti
int
xor
or
scas
push
rorb
push
push
lods
inc
jno
int
mov
out
out
inc
loop
out
xchg
push
das
leave
xor
push
push
dec
cmp
mov
xchg
xchg
clc
xor
or
mov
dec
insb
ja
aad
faddl
mov
pop
test
inc
or
ret
jle
or
dec
lods
sub
and
add
fldcw
mov
sub
push
mov
clc
movsb
mov
or
int3
mov
mov
ficompl
inc
sub
pop
aad
inc
insl
xchg
dec
in
push
int
lea
sub
adc
pop
icebp
or
aam
jl
or
test
cmp
ret
call
cmp
xchg
mov
in
dec
clc
xlat
out
or
fisubrs
ret
mov
dec
cmp
mov
lods
adc
push
mov
not
imul
lcall
mov
mov
push
inc
lods
aas
cmpsb
out
and
mov
mov
lock
movsb
mov
push
push
mov
outsl
icebp
loopne
sbbl
and
aad
inc
imul
jmp
push
sbb
xchg
mov
stc
inc
mov
add
mov
lahf
lods
jecxz
and
imul
int3
and
into
xor
or
dec
push
lock
xchg
mov
sub
clc
xor
sub
add
ret
xchg
mov
sbb
adc
xchg
movsl
adc
sub
xor
inc
stos
movsb
icebp
sahf
add
jg
pop
pushf
in
mov
xchg
mov
fsubrl
pop
icebp
dec
inc
push
gs
pop
ss
push
les
sub
xchg
mov
enter
cmpl
lret
jl
inc
hlt
roll
popa
add
lret
int
xchg
mov
cli
bound
and
mov
xchg
insb
and
testb
lock
cmp
sub
inc
add
xchg
cmp
push
fidivs
pop
cmp
inc
int3
cmpsl
mov
push
insw
pushf
mov
cmp
sub
add
dec
stos
sbb
xchg
push
xchg
bound
or
out
inc
push
xor
mov
notl
jg
lds
loop
fwait
shll
out
sbb
dec
and
inc
outsl
jge
arpl
scas
sarl
sbb
fidivrs
jg
sarb
xchg
xchg
movsl
xchg
jg
or
inc
or
or
fwait
jne
adc
cmp
pop
shlb
fmul
xchg
lods
xor
mov
or
movsl
int
cmpl
xor
adc
adc
sub
mov
add
iret
inc
jg
jb
xchg
rorl
popf
sahf
and
jmp
sbb
mov
aam
dec
dec
push
mov
push
xor
cmp
mov
sub
imul
jb
rorl
adc
push
inc
dec
test
jecxz
das
and
ja
jle
sti
xchg
push
stc
lock
lods
mov
sbb
sub
subb
arpl
add
jb
push
sahf
test
js
jbe
push
mov
dec
loop
ss
test
loope
mov
lret
subl
mov
mov
lock
mov
les
insl
loope
frstor
shlb
pop
leave
sahf
push
sbb
mov
push
repnz
outsb
xor
out
xor
andb
push
outsb
pop
push
mov
loop
adc
inc
push
jge
pop
bound
mov
push
orb
mov
pop
adc
scas
scas
inc
aas
mov
dec
mov
cmp
outsl
fwait
test
gs
sbb
gs
test
pop
ljmp
cli
xlat
adc
and
xor
push
xchg
and
xor
lods
jo
pop
loope
inc
outsb
push
negb
int
sti
mov
xchg
jg
fisubl
jns
mov
or
sub
or
fmul
dec
jp
ds
aaa
mov
mov
nop
stos
loope
xorb
hlt
in
sub
lea
pop
dec
cmpsb
cmpsb
push
mov
pop
pop
adc
aaa
jns
xchg
fisubrl
ss
mov
or
addr16
add
shlb
sti
push
mov
dec
in
cmpsb
mov
outsb
mov
jmp
xchg
and
das
adc
xchg
add
ror
nop
int3
cmp
in
fiaddl
and
dec
into
xchg
sbb
movsb
sub
lret
jge
scas
out
inc
nop
mov
ds
sbb
and
je
push
in
dec
icebp
sahf
hlt
pop
aad
mov
lahf
cmpsb
mov
dec
insl
cmpsb
and
je
fisttpl
add
js
dec
fsts
lds
sbb
cs
ficomps
outsl
cmpsl
stos
inc
xor
flds
stos
in
sub
divl
fnstenv
aas
mov
xor
mov
mov
lds
pop
push
pusha
data16
mov
xor
cmc
ds
pop
scas
add
out
cmp
outsb
push
test
cmc
test
cmp
xchg
add
and
xchg
xchg
stos
fmuls
pusha
out
jle
fidivrs
ljmp
inc
loop
xchg
outsl
mov
mov
into
test
xchg
jecxz
sub
dec
xchg
push
aas
mov
mov
fldl
rcr
gs
mov
jo
sahf
fdivl
sbb
inc
jmp
daa
inc
inc
jb
je
pop
jno
add
sub
push
mov
jge
xor
inc
pop
aaa
inc
mov
popa
and
shll
rcrl
adc
call
lahf
sub
mov
insl
xchg
shlb
mov
mov
and
or
sub
xchg
stos
pop
lock
jmp
push
fstl
rcrl
push
movsb
rorb
bound
imul
push
and
mov
mov
dec
jnp
cmp
add
push
mov
out
xor
dec
push
add
or
in
xchg
cmp
inc
sub
or
xor
stc
daa
mov
lret
fs
xlat
daa
push
sbb
gs
lret
add
lods
pop
lret
orl
jne
aaa
notb
jmp
mov
adc
add
add
mov
add
cmp
mov
inc
mov
dec
and
push
sbb
pop
sbb
lea
cmpsb
lret
out
dec
call
lds
out
and
cmpsb
jge
sbb
push
ds
dec
popf
pop
xchg
ss
pop
arpl
sub
xor
or
or
rcrb
ss
pop
jg
pop
jo
movsl
sbb
pop
adc
add
sub
test
cmp
mov
adc
sbb
pop
rcl
mov
lahf
lds
xor
mov
insb
xchg
pop
jl
data16
pop
movsb
pop
loope
nop
mov
pop
das
bnd
pop
xchg
shrl
jo
aam
std
mov
jno,pt
mov
jb
mov
daa
mov
and
outsb
lahf
jl
or
push
daa
lcall
dec
lahf
insb
push
inc
in
inc
or
notb
repz
int
roll
jno
and
aaa
dec
mov
das
dec
mov
mov
sbb
add
bound
pushf
repnz
xor
arpl
call
lds
out
adc
and
pop
sti
inc
loope
xor
push
fidivrs
nop
inc
push
ret
xchg
test
cmp
rolb
push
mov
cld
insl
lcall
mov
pop
pop
inc
je
mov
les
loope
jb
mov
xor
jae
pop
cltd
shl
leave
out
dec
jns
sbb
mov
inc
adc
cld
or
or
mov
xor
xor
adc
repz
jecxz
jg
inc
dec
adc
inc
cli
dec
xor
xrelease
popf
jns
pop
inc
pusha
inc
mov
pop
out
xchg
scas
pop
and
inc
pop
mov
insl
add
jecxz
add
repnz
popa
notb
ljmp
imul
aam
sahf
stos
lahf
shrb
add
sbbl
inc
pop
ret
test
popa
ds
xor
data16
sbb
orb
jl
mov
negb
iret
and
push
or
cmc
incb
cmp
rcrb
fcompl
enter
lcall
mov
or
cmp
int
sarl
inc
cwtl
mov
lds
inc
jg
fcoms
das
hlt
jp
pusha
sahf
sbb
jp
xor
fldt
leave
sbb
inc
cmpl
testb
push
cwtl
jo
sbb
pop
cwtl
cmp
cmc
das
xor
sbb
bound
add
jo
shrl
jbe
mov
jecxz
insl
scas
scas
add
int
mov
xor
or
lds
push
push
xchg
xchg
pop
xchg
mov
jl
js
hlt
daa
mov
daa
ret
xchg
and
pop
pop
lods
outsl
and
out
insl
sub
scas
lock
pushf
out
add
arpl
je
jle
lea
push
sub
rorl
dec
push
stc
repz
dec
fcmovnbe
pop
dec
fstpt
aaa
xor
mov
jmp
stc
add
rep
testb
scas
cmpsl
mov
pusha
or
dec
pusha
sub
xor
int3
cmp
cwtl
dec
or
dec
pop
pop
mov
sub
imul
cmp
int
xor
out
lret
or
mov
js
rorb
out
test
lock
mov
ljmp
std
cmp
in
insl
xchg
push
and
jge
jmp
out
aaa
and
mov
testb
cwtl
cmp
xchg
xor
mov
and
lret
ljmp
test
clc
in
outsl
int3
mov
test
imul
subl
mov
pop
in
jg
pop
cmp
lods
rcrb
cmc
hlt
xor
stos
jae
mov
iret
clc
push
insb
jle
int3
xchg
sbb
dec
dec
sub
icebp
or
std
and
lahf
pushl
push
popf
jnp
xchg
inc
push
or
pushf
mov
sahf
addl
cmp
fdivrs
sahf
push
fnstsw
jp
inc
mov
ljmp
or
mov
push
test
adc
dec
mov
pop
add
outsl
jne
add
mov
mov
jo
in
shl
data16
pop
mov
sahf
push
sub
sbb
jbe
cmpsl
xchg
int3
leave
sub
push
sbb
cld
shrb
lret
pop
mov
mov
call
pop
loope
or
das
adc
insb
sbb
xor
les
push
push
xchg
pusha
daa
cmpsl
pushf
int
in
mov
pop
in
dec
lods
mov
or
mov
call
ljmp
rcrb
sbb
mov
mov
xchg
add
and
sbb
mov
repnz
or
stos
mov
pop
mov
or
outsl
jp
or
inc
repz
fstps
ljmp
dec
jns
das
sbb
push
push
cmp
mov
sub
xor
js
fadd
andb
add
adc
pop
in
inc
xor
iret
gs
test
out
lods
addb
repnz
mov
sbb
les
ljmp
mov
cld
push
xchg
outsb
fwait
inc
movb
or
stc
xor
mov
jmp
mov
sti
xorl
xchg
inc
xor
and
and
cmp
call
push
sub
leave
aam
popa
push
and
in
xchg
jb
int
jg
pusha
insl
mov
push
inc
lcall
xchg
mov
xor
loopne
aad
pop
mov
mov
fst
xchg
pusha
xlat
push
call
dec
xlat
or
lea
in
pop
or
cmp
pop
mov
lods
and
dec
pop
push
adc
inc
shll
movsl
movsl
mov
repnz
stos
clc
pushf
loop
cltd
and
mov
incl
xor
inc
push
cmp
and
aaa
pusha
movsb
mov
and
dec
movsl
cwtl
scas
push
or
fldenv
adc
outsb
insl
dec
pop
shrl
cli
and
and
int
lret
xchg
push
sub
stos
adc
cmp
arpl
inc
mov
inc
mov
daa
jp
add
lret
xchg
or
decb
clc
push
in
hlt
insl
shrl
push
ret
lahf
ret
jg
ror
sbb
xchg
mov
hlt
iret
repz
int3
sub
out
mov
int3
mov
fs
inc
xchg
jmp
jo
mov
ja
scas
push
adc
xlat
adc
cmpsl
cs
test
stos
lods
into
pop
insl
push
xchg
arpl
and
pop
loop
fldl
stos
add
jb
in
xor
and
push
shlb
sbb
fidivrs
mov
adc
pop
xor
enter
sbb
insb
lods
dec
nop
fstpt
imul
into
inc
push
imul
loope
mov
dec
push
fldenv
in
jle
cltd
add
out
xor
push
lret
sbb
adcl
je
clc
xchg
push
repz
sbb
lock
xchg
loope
mov
mov
jle
cmp
sub
pop
sbb
ret
xor
pop
sub
cltd
adc
outsl
sub
fdiv
sub
pop
pop
mov
sbb
xchg
fisttps
movb
sbb
je
out
and
or
and
xchg
lret
xchg
xchg
sub
aam
mov
inc
leave
pop
iret
push
add
or
in
hlt
jmp
mov
jnp
stc
pop
jp
iret
push
sub
inc
inc
lods
pop
icebp
insl
push
cmp
lea
xchg
xor
push
pop
rcrb
shrl
fs
mov
pop
xchg
push
mov
pop
repz
mov
mov
xchg
testb
cld
inc
imul
std
jo
out
push
push
push
inc
dec
pop
inc
loop
leave
imul
cmp
call
and
add
in
js
xchg
xlat
out
push
lret
call
cmp
sbb
dec
jl
mov
jbe
cli
scas
xchg
out
mov
enter
dec
mov
xchg
pushf
adc
fdivrs
orl
or
repnz
adc
bnd
adc
dec
rclb
cli
push
mov
mov
dec
ljmp
sub
add
fcoms
or
lods
std
inc
ret
xchg
call
sbb
sti
aad
into
adc
negl
out
test
std
jp
ficoml
mov
rcrb
fwait
push
fnstcw
loop
fnstenv
cmp
jl
enter
cmp
jle
mov
daa
fnstenv
rcl
xor
dec
das
js
dec
cld
push
jne
push
stc
repnz
xlat
outsb
adcb
push
scas
or
lret
aam
or
ja
pop
xchg
sub
inc
dec
ds
sub
ficomps
adc
mov
shll
in
cmpsl
xor
sahf
mov
xchg
xor
hlt
lock
push
shll
sbb
cwtl
jo
mov
sbb
sbb
xchg
xor
gs
mov
xchg
mov
jmp
push
sbb
mov
and
inc
xchg
sbb
sbb
jbe,pt
xchg
mov
stc
mov
xchg
scas
and
daa
push
aam
int3
cltd
mov
or
stos
dec
jo
loop
cltd
aas
les
bound
cltd
pop
fcmovnu
lea
sysenter
add
xchg
daa
inc
xchg
loope
stos
xchg
insb
icebp
mov
lret
and
imul
rorl
movsl
loope
cmp
mov
adc
ret
loope
mov
mov
mov
jns
fmulp
xorl
cltd
sbb
pushf
daa
and
lds
mov
hlt
or
pusha
mov
inc
xor
out
push
sub
nop
jg
lret
pop
stc
out
clc
add
jbe
shlb
mov
sbb
js
imul
lods
lea
out
repz
jae
xor
daa
sub
and
cmp
inc
add
fildll
inc
inc
xchg
aad
mov
adc
mov
sub
cmpsl
jne
add
cld
adc
push
imul
inc
sub
popf
cmp
push
pop
insb
mov
jae
xchg
jns
xor
pop
sub
ljmp
dec
nop
push
pop
sub
fldl
mov
pop
add
lods
push
cli
das
sbb
jle
fcmovne
push
mov
data16
pusha
xchg
sbb
jb
movsb
adc
jle
pushl
out
out
mov
mov
add
lret
mov
jns
sbb
pop
aad
fildll
imul
lcall
ret
scas
sub
int
jo
cmp
ljmp
jo
shrb
mov
rcrb
and
xchg
pop
in
nop
xchg
push
out
outsl
dec
cmc
filds
scas
cltd
aad
idivl
jns
pop
xor
imul
aam
push
add
jnp
ljmp
push
pop
call
fstl
aam
out
sbb
pop
pop
icebp
xchg
jge
cmp
subb
jbe
and
inc
push
into
test
lods
xor
cld
iret
andb
out
adcl
xchg
push
xchg
pop
dec
maxps
jbe
rep
inc
inc
mov
sahf
add
or
or
and
xchg
or
xchg
sbb
test
pop
push
mov
jp
aas
or
mov
fwait
cld
sbbl
data16
clc
repz
das
sub
sbb
jb
sub
cltd
filds
push
mov
push
pop
and
sbbl
mov
gs
mov
xchg
lret
leave
sub
jbe,pt
cmp
or
imul
aad
jae
fistps
cmpxchg8b
mov
add
addr16
negb
lea
and
or
dec
aas
mov
shl
imul
popf
call
clc
out
adc
into
cmp
out
jge
lea
adc
mov
adcl
lea
dec
bound
xchg
pushf
in
and
inc
pop
cltd
push
out
push
dec
add
dec
lret
sub
sbb
inc
mov
mov
inc
dec
dec
pop
cmp
bound
adc
fnstsw
xchg
ss
test
call
mov
sub
sub
xchg
adc
ja
cmp
and
xchg
int
push
sbb
subl
pop
int
lods
and
dec
rorb
les
mov
cmp
fwait
sbb
pushf
inc
aam
xchg
lods
and
ljmp
sub
out
sarl
lock
lret
jl
push
jmp
xor
nop
or
xchg
and
add
rcrb
fs
sbbl
sti
or
push
mov
xorl
cmp
rclb
pop
stos
or
inc
and
xchg
adc
inc
jmp
mov
xchg
push
imul
movsl
cmpsl
jae
xchg
xchg
or
sbb
rcrl
out
addl
rolb
sub
imul
lods
pop
cli
push
adcl
je
scas
mov
mov
adc
mov
outsl
pop
push
lea
sti
nop
imul
pop
pop
das
jo
and
dec
pop
and
rcrl
sti
shlb
out
repnz
xchg
test
dec
addr16
sbb
dec
insb
rcl
js
push
push
in
je
lods
dec
fcomi
xchg
lods
sub
and
ja
sbb
sar
stc
sub
scas
cs
pop
lcall
aaa
sub
aad
cmp
stos
push
int
clc
addr16
jecxz
adc
jnp
dec
push
frstor
cmc
sub
mov
icebp
imul
mov
test
push
xchg
aaa
or
adc
es
add
inc
add
ljmp
orb
and
fisubrl
cltd
outsb
xchg
je
pushf
ret
jle
add
cli
adcl
xchg
ret
sbb
xor
pmaddwd
pop
mov
clc
insl
cli
pop
push
cmc
stc
sub
jb
dec
xchg
lahf
inc
add
cmp
fsubr
cmp
es
push
gs
and
inc
cmp
and
xchg
add
inc
add
gs
sub
cwtl
lahf
push
ds
sbb
je
ret
pop
jb
pop
mov
cmpb
mov
sbbb
arpl
push
push
mov
mov
push
int
or
mov
or
mov
mov
fstpt
push
mov
data16
sub
cmp
aaa
push
dec
cmpsb
cmp
sbb
or
movsl
cmp
test
hlt
stc
sbb
dec
xor
cmp
lcall
das
push
mov
daa
outsb
push
out
pop
dec
dec
stos
xchg
pop
lock
inc
bts
cli
sub
sub
xlat
ja
dec
mov
mov
jmp
inc
push
mov
mov
mov
pop
cld
pop
mov
notl
dec
sub
hlt
jge
shlb
inc
jae
loop
lods
rcrb
or
mov
xor
mov
insl
movsl
jmp
inc
out
cltd
in
cmc
mov
js
inc
or
cmp
xchg
ja
xchg
and
ficoml
jle
mov
dec
inc
dec
xchg
mov
subps
cmpsl
jl
xchg
fldt
xchg
sarb
adc
aaa
jne
adc
mov
and
mov
xchg
and
mov
filds
mov
xchg
dec
loopne
cwtl
mov
pusha
fwait
gs
stos
push
mov
or
jb
push
xorl
push
push
loopne
cs
icebp
cmpsb
mov
adc
mov
mov
xchg
dec
adc
sbbl
std
pop
xor
jae
cmp
movsl
jg
pop
cli
mov
cmp
pushf
dec
out
insl
fwait
cld
jp
mov
out
movsl
flds
out
pushf
lcall
ljmp
fcoms
xor
addl
adc
shlb
mov
sub
jg
scas
inc
lods
out
int
cmpsl
jns
ljmp
cmp
scas
addr16
mov
push
and
lds
xchg
mov
scas
mov
dec
mov
and
or
adc
mov
data16
ffreep
fmulp
lcall
or
push
pop
lret
xchg
gs
aas
loop
test
push
sarl
das
cmp
mov
cmp
sub
and
roll
std
into
cmpsl
ficompl
add
cmp
aad
mov
sub
loopne
in
sbb
ret
xor
out
inc
sbb
pop
pop
popa
adc
pop
mov
jp
or
lods
iret
lea
stos
inc
push
rolb
mov
in
inc
lea
pop
rcrl
in
pop
jp
jmp
ret
or
in
daa
mov
sbb
js
pop
sahf
hlt
les
adc
fstl
pop
idivb
pop
ja
mov
pop
xlat
mov
inc
pop
mov
enter
outsb
cmp
mov
mov
pop
mov
sbb
jp
push
imull
out
add
xchg
pop
sub
sub
pusha
int
fisubl
in
call
cmpb
fwait
pusha
cltd
inc
mov
jg
xor
popl
shr
sbb
imul
orb
add
pop
pop
nop
sub
clc
aas
imul
push
fcompl
jge
inc
jmp
cmp
outsb
in
mov
fwait
popf
mov
fsubrl
das
fistps
add
in
mov
or
xor
mov
bound
dec
push
and
mov
sub
cmpsb
mov
out
add
lods
xor
dec
jle
mov
scas
or
and
push
shrb
shll
lret
adc
sub
lcall
xchg
je
pop
adc
daa
pushf
xchg
adc
test
movsb
push
into
mov
push
inc
fsub
stc
jno
into
outsl
sbb
imul
sbb
negb
and
popa
aas
mov
mov
push
mov
std
xor
mov
addr16
mov
mov
cld
lret
mov
imul
shl
or
mov
xor
movsb
js
push
adc
cwtl
ret
dec
inc
sub
das
cmp
inc
lcall
push
add
push
dec
pop
repnz
inc
jnp
sar
movsb
jmp
sti
aam
jmp
sysexit
mov
push
mov
fists
cmp
ljmp
xchg
fs
mov
cld
xor
cmp
ds
lret
popf
cmpsl
mov
aaa
int3
shrl
sbb
lret
sub
cmpsl
adc
adc
mov
cmp
lcall
xchg
lods
fwait
mov
inc
inc
mov
dec
jp
push
cmpsl
jne
insb
jno
cmp
js
inc
sub
jnp
jbe
dec
out
sbb
cmp
inc
sbb
jbe
xchg
nop
mov
ss
push
mov
test
scas
imul
daa
push
hlt
pop
cltd
mov
or
sub
mov
lahf
adc
in
insl
sti
adc
loopne
out
mov
inc
add
in
pop
lock
int3
fcom
cmp
jns
aas
into
inc
mov
mov
sub
cwtl
push
cmpsl
add
and
test
rcrb
imul
xchg
inc
stc
out
cltd
cmp
inc
push
rorl
mov
lods
bound
jg
clc
push
adc
std
rol
bnd
pop
push
call
cmp
xor
scas
outsb
jmp
pusha
lahf
inc
xchg
pusha
repz
adc
es
int3
mov
xchg
pop
pusha
and
xor
push
sahf
pop
add
lods
shrl
jl
test
sub
push
out
test
sub
int3
mov
mov
nop
mov
pusha
push
pop
inc
pop
stos
xcrypt-cfb
cmpsl
in
pop
je
cmpsb
cs
pushf
dec
nop
stc
test
cmp
inc
inc
push
stc
test
or
cld
test
mov
leave
cmp
jle
repz
ficomps
mov
or
stc
ret
inc
sub
or
iret
dec
sub
testb
jo
push
push
adc
inc
push
mov
inc
xchg
loopne
pop
and
stc
xchg
stos
mov
pop
xor
addr16
imul
call
repz
fwait
int
pop
test
enter
xor
out
scas
das
inc
dec
jle
pop
lds
clc
sbb
sub
cmp
push
loopne
daa
push
daa
push
inc
cmp
mov
test
jle
mov
xchg
mov
addr16
das
xor
out
push
xchg
out
sub
sti
clc
sub
or
hlt
sub
push
adc
fcoml
arpl
and
and
pop
mov
inc
std
mov
mov
insb
push
sbb
loope
data16
mov
int
outsb
aad
aaa
xchg
lods
jle
mov
dec
ja
outsb
xor
sbb
cli
xchg
arpl
outsb
and
xchg
and
dec
rcrb
jl
xchg
mov
mov
xlat
mov
daa
iret
les
mov
dec
jmp
cltd
xlat
leave
pusha
mov
mov
jmp
enter
and
jge
fldcw
mov
sub
fistpll
inc
xchg
sti
xchg
jns
push
repz
in
pop
xor
dec
adc
xchg
ja
leave
andl
stc
push
test
add
pop
push
pop
xor
sbb
xchg
fists
jnp
scas
addr16
dec
push
inc
mov
out
sub
in
xor
data16
xchg
inc
mov
jmp
out
pop
imul
push
push
incl
or
add
mov
cs
sub
fbstp
cmp
mov
test
fcmovnb
mov
pop
sti
lea
stos
xlat
sub
cmp
and
jmp
xchg
jb
rcr
xor
and
or
icebp
jae
push
fbstp
xchg
ds
push
xchg
and
sti
mov
dec
rcl
mov
sbb
aas
cmp
jae
scas
mov
mov
dec
popf
push
jle
in
adc
in
mov
scas
and
pushf
enter
push
fisttps
mov
hlt
ret
push
jo
int
out
fld
jecxz
je
jl
mov
cmp
aad
lret
pop
pusha
repnz
aam
popfw
add
cs
inc
pushf
pop
push
fwait
sbbb
pop
add
shrb
push
fdivrl
jp
mov
movsl
outsb
ljmp
add
aas
jmp
jno
aad
call
push
clc
pop
lds
popf
outsb
push
das
or
mov
rcr
jne
xchg
jle
adcl
cmp
xchg
inc
mov
adc
addb
mov
ds
sub
pop
sub
pop
or
push
ja
movsl
mov
in
push
pop
repnz
pop
sub
adc
xchg
stos
sbb
aaa
int3
das
mov
inc
sbb
mov
call
add
xlat
cmc
inc
arpl
inc
pop
nop
mov
sarl
frstor
stos
ljmp
addb
rcll
out
in
xchg
mov
jge
aad
lahf
sti
or
pop
les
test
out
add
scas
jle
jns
ljmp
adc
sub
mov
jecxz
mov
popf
adc
xchg
or
mov
sbb
or
and
lods
loopne
out
cmpsl
inc
jmp
and
int3
or
xchg
or
jg
aad
mov
mov
arpl
popf
idivb
insl
dec
jb
cli
pop
into
pop
repz
ss
inc
adc
cmp
hlt
imul
inc
inc
call
mov
stos
xor
shl
mov
gs
mov
pop
push
ljmp
sti
mov
dec
add
xchg
jecxz
mov
imul
out
or
les
inc
xor
cli
inc
int
std
fdivrs
push
leave
int3
mov
xchg
mov
add
xor
sub
mov
xchg
shl
or
sub
jns
adc
orb
je
xchg
cmp
dec
pop
xchg
xchg
jp
dec
fs
push
shll
push
mov
sub
pop
scas
jne
shlb
xor
pop
repz
jmp
mov
arpl
jl
addr16
pushf
adc
lret
cmp
or
lock
aas
insl
dec
ljmp
xor
cld
addl
loopne
pop
cmc
sbb
sub
cmpsb
adc
loop
call
mov
dec
jae
adc
pop
iret
dec
fnsetpm(287
adc
sarl
cltd
lret
jle
push
mov
scas
mov
maxps
je
sub
in
je
mov
lds
mov
fldt
dec
push
addr16
dec
inc
shrb
push
mov
sti
push
xchg
dec
xor
mov
lret
test
iret
sti
ljmp
mov
or
mov
rolb
xor
sub
das
adc
lock
mov
mov
pop
scas
mov
xor
fld
mov
xorl
in
fists
lret
inc
loopne
scas
sub
aam
pop
out
je
fcmovb
movsb
pusha
push
inc
push
pop
data16
add
or
adc
jns
and
test
cmp
mov
popa
mov
push
mov
and
scas
pop
lcall
jge
mov
inc
shlb
inc
cmp
mov
sbb
push
inc
mov
sub
nop
sbb
insb
adc
jle
pop
mov
popl
icebp
and
in
push
test
loopne
jb
pop
sbb
in
jns
int
cmpl
fucomp
cmpsl
sub
sahf
or
lods
hlt
cmpsl
mov
das
imull
push
fildl
cmp
dec
pop
mov
int
mov
fcomps
or
loopne
pop
sub
or
inc
movsl
call
sub
or
loop
out
mov
pusha
imul
pop
jae
jecxz
popf
xor
mov
loope
in
push
inc
ds
push
push
in
icebp
dec
int3
shlb
js
pop
ficoml
or
outsl
loopne
mov
mov
enter
add
mov
add
movsb
and
xchg
dec
sub
sbb
cltd
lahf
daa
in
dec
mov
iret
xor
push
adc
imul
push
int3
out
fnstsw
jecxz
sub
stos
loopne
inc
es
push
mov
stos
xchg
and
inc
data16
sub
call
push
sub
ret
pusha
mov
imul
pop
lret
and
jae
xor
and
sti
push
stos
arpl
add
dec
add
fdivrp
and
jl
fnstsw
adc
enter
sub
imul
call
jg
fldenv
or
pop
jo
mov
ror
xchg
push
xchg
sti
add
fadd
xchg
push
add
xor
sbb
fcoml
add
fs
mov
xchg
mov
mov
les
jo
nop
dec
and
pushf
sub
dec
into
dec
pop
and
popa
int3
push
loope
dec
mov
das
iretw
insb
test
nop
xchg
sbb
jbe
mov
sbb
lds
add
lods
push
mov
das
xor
push
jp,pn
and
pusha
fwait
adc
mov
lods
imul
packsswb
aad
mov
out
mov
loop
int
xor
sbb
int3
inc
push
push
mov
ljmp
dec
dec
mov
push
stos
ljmp
aaa
pop
sbb
dec
cmp
jecxz
enter
pop
inc
addr16
adc
xor
jmp
push
repz
call
imul
cmp
pop
pop
sbb
pop
sbb
mov
lea
mov
imul
sub
sbb
cmp
lcall
xlat
out
mov
popf
inc
jbe
scas
push
mov
cmpsb
xlat
sub
pop
lret
mov
mov
int
cltd
pop
adc
mov
mov
cmp
test
xchg
sub
sbb
lock
adc
cmpsl
dec
sub
inc
lahf
scas
ffree
icebp
ss
dec
ret
sub
out
gs
pop
sub
jb
sbb
adcl
shlb
cmp
stc
mov
xchg
cld
inc
push
insl
and
negl
lahf
adcl
mov
cmp
xor
ljmp
xchg
sub
add
fdivr
sbb
cmp
push
mov
insl
jno
loope
stos
mov
addb
add
or
xchg
cmp
das
mov
insl
in
andl
mov
push
out
push
pop
imul
clc
xchg
pusha
negl
fidivrl
jle
jb
pop
stos
mov
jmp
xlat
inc
push
popl
push
mov
cwtl
fcomi
push
inc
jmp
xchg
fwait
popa
es
lea
dec
sub
pop
lcall
ljmp
push
and
call
cmpsl
shll
pop
out
xor
jbe
pop
inc
dec
sahf
sub
jnp
jbe
aad
int
in
dec
dec
cmpsl
sub
ret
adc
push
mov
subb
mov
sbb
rcrb
jae
sbb
subb
dec
xchg
sub
sbb
lcall
and
mov
fsub
std
mov
mov
fsubs
ret
pop
hlt
xchg
lock
movsl
add
aaa
and
imul
jmp
fs
cmpsb
out
mov
or
jne
sarb
cmp
jnp
mov
outsl
pop
push
pop
repnz
xorb
data16
nop
out
pop
sub
xchg
cmp
mov
mov
in
push
leave
call
dec
inc
lahf
cmp
in
sbb
enter
out
mov
inc
fidivl
mov
adcb
push
ljmp
xor
daa
movsl
outsb
shl
iret
xchg
inc
push
pushf
js
mov
add
adcb
xchg
gs
xor
movsb
cltd
movsl
stos
dec
movsb
jae
jo
push
and
mov
lret
mov
cmpsb
dec
push
mov
cmp
loope
daa
mov
add
jecxz
dec
stos
inc
inc
cmp
shrl
xor
pushf
jmp
ss
imul
push
incb
jae
cmpsl
clc
jp
push
lea
outsb
add
jae
data16
cmpsl
jns
inc
or
arpl
mov
cmpsb
jle
idivl
mov
pushw
xor
cmp
jmp
mov
jns
xchg
in
mov
imul
push
out
push
and
jno
sub
push
cmp
test
lret
push
mov
jns
repz
stos
or
xchg
xchg
shlb
test
imul
mov
test
and
rorl
mov
sbb
push
jmp
imul
mov
dec
cmpsb
scas
lds
xor
test
or
inc
mov
andl
lock
mov
mov
ja
cwtl
int3
and
fisttps
mov
jae
cli
jo
push
decl
ret
and
jge
loop
pop
pop
dec
ja
mov
push
icebp
scas
pop
repnz
out
xor
push
pop
psrad
shl
dec
stc
cmp
mov
mov
inc
data16
pop
ljmp
fwait
mov
test
mov
rorl
cwtl
shl
scas
out
or
lahf
jnp
or
push
test
outsl
mov
fdivrl
dec
xchg
pop
lds
scas
jle
dec
xchg
jae
push
daa
mov
std
add
mov
ret
fbld
adc
cld
adc
out
xor
in
arpl
add
xor
movsb
mov
add
ret
push
pop
test
lock
js
add
and
mov
sbb
scas
pop
in
lock
lock
cwtl
int
adc
in
cmpsb
push
push
bound
int3
push
push
jno
or
popf
or
fnstcw
fwait
cld
inc
cli
pop
aam
loop
pop
add
mov
add
or
mov
dec
lods
movsl
sbb
ljmp
data16
sbb
outsb
add
or
dec
sub
inc
inc
pop
arpl
inc
stc
pop
call
mov
shr
or
cmp
cld
mov
cmp
xchg
pop
scas
fildll
push
pop
shl
cld
fnstsw
mov
test
sub
lds
or
sub
cmp
loop
xchg
les
adc
mov
inc
xchg
fld1
lret
sbb
clc
push
mov
out
sbb
jo
sub
cld
call
jae
rolb
sub
sbb
jecxz
push
rolb
xchg
adc
add
call
cmpb
in
andl
xor
out
test
pushf
dec
or
add
add
mov
leave
mov
lret
lret
xor
cmp
std
inc
outsb
add
jns
bnd
gs
outsb
lods
lret
push
pop
inc
ja
cmp
stos
add
mov
fmull
pusha
fisubs
sahf
clc
adc
mov
sti
dec
and
mov
int3
jmp
mov
push
insl
cli
call
adc
movsb
push
insb
adc
xor
cmpsl
xor
mov
fstps
pop
je
enter
std
mov
daa
xchg
shl
xor
xchg
jb
inc
and
sub
mov
xor
outsl
push
mov
sti
push
sbb
or
fidivl
sbb
vorpd
add
jbe
jl
jmp
aam
adc
dec
sbb
popf
xchg
std
shrb
insb
xchg
jns
inc
fidivrs
lods
bound
test
fwait
dec
imul
dec
xchg
stc
aas
push
addr16
lret
ret
push
rclb
or
and
ss
pop
xor
mov
inc
call
bound
sbb
mov
mov
sti
fs
inc
lods
mov
pop
xor
cmpsl
lds
stc
lcall
cmpsl
call
mov
inc
iret
cli
mov
add
xor
cld
mov
addr16
mov
and
jp,pn
xor
in
add
jnp
mov
mov
sbb
xchg
jae
call
push
into
adc
jno
and
push
mov
cld
lock
jb
fcmovbe
orb
xlat
mov
aas
stos
ds
inc
sub
or
repz
mov
jbe
test
out
fimull
push
arpl
clc
adc
stc
pop
sub
push
jle
cld
icebp
or
mov
adc
add
pop
pop
push
pop
lods
pushf
inc
inc
push
inc
out
xlat
sahf
fwait
jg
inc
out
aam
push
mov
inc
lea
in
imul
sub
dec
loopne
xlat
xor
push
movsl
subb
push
adc
or
pop
rcrl
hlt
push
push
test
xchg
sub
jae
addb
add
adc
insl
sti
movsb
outsl
mov
fmuls
inc
mov
push
inc
pop
cmpsb
adc
mov
scas
inc
add
cmp
dec
loop
fldcw
sbb
aam
mov
adc
int
add
pop
xchg
adc
andb
fisubl
mov
mov
les
fmuls
fbld
and
pop
shl
xor
sbb
aas
sub
arpl
std
test
add
das
cmp
gs
call
lcall
jmp
push
and
jno
adcl
jl
rcr
daa
mov
ja
cmp
and
int
in
aas
and
cmp
fiaddl
sahf
cmp
inc
icebp
cmpl
jmp
xlat
js
sbb
rcl
stc
mov
aam
push
mov
or
or
mov
outsb
jo
in
mov
pop
inc
jmp
xchg
aaa
out
lret
je
dec
pop
sub
mov
sbb
mov
hlt
dec
xchg
into
jo
sbb
aas
scas
mov
add
fdivs
subl
test
enter
jl
push
dec
and
push
out
or
sahf
int3
test
loop
out
jl
push
sub
mov
xchg
or
int3
cmpsb
cmp
scas
faddl
inc
stos
jns
inc
fs
cmp
ja
cmp
lock
jmp
mov
mov
cmp
rcr
js
cmp
pop
arpl
int
push
xchg
mov
mov
out
xor
sub
stos
push
jns
cltd
mov
sahf
sbb
dec
mov
dec
pop
mov
insb
and
xchg
and
cmp
adc
and
icebp
clc
xchg
fdivl
in
or
add
mov
lahf
out
push
cmp
inc
iret
jmp
mov
xlat
adc
movl
int3
push
xchg
lahf
push
pop
mov
add
test
hlt
and
fisubrl
orl
pop
in
fs
inc
shll
sbb
ret
popf
mov
fldcw
xchg
xchg
xor
mov
lret
repnz
clc
pop
push
add
aaa
adc
mov
or
jmp
lods
lea
cmpsb
or
inc
adc
das
lods
fcmovnbe
aaa
cmp
push
lea
outsb
stos
test
mov
and
movsb
sbb
jnp
inc
out
mov
lret
dec
adc
inc
cmp
rol
pop
insb
cs
pop
mov
lret
sub
repz
mov
xlat
pop
popf
aaa
push
ja
addr16
mov
fiadds
int3
outsl
mov
jecxz
push
fsubr
int
cmp
cmp
jb
pop
sbb
mov
loopne
mov
shlb
daa
inc
adc
orl
bound
xor
add
test
xor
outsl
xchg
lcall
scas
int
fldl
and
sub
adc
imul
push
push
aad
or
shr
inc
mov
ret
clc
ret
xchg
rcll
pop
sbb
mov
call
movsl
mov
aam
fwait
jle
ja
mov
xor
mov
mov
pop
mov
fcmovnb
into
es
mov
mov
scas
inc
je
cli
sbb
inc
gs
dec
mov
pop
cld
push
js
dec
inc
jge
lods
or
popa
add
pop
sub
pop
fidivrl
mov
gs
mov
ret
clc
mov
add
jo
arpl
lcall
aad
mov
loop
shll
mov
adc
and
ficomps
andl
pop
and
lock
leave
dec
jmp
lods
xlat
loop
and
sub
mov
mov
sbb
into
pusha
adc
push
aam
inc
mov
stc
imul
outsb
add
pop
mov
pop
sarb
ror
jbe
cli
std
dec
or
mov
mov
imul
dec
sbb
cmpsl
or
cld
xchg
mov
mov
push
fsts
xchg
int
fcompl
jbe
mov
xor
jp
jnp
mov
jb
inc
test
sub
inc
inc
xorl
xlat
mov
inc
adc
xor
aam
fistpll
dec
jnp
ret
decb
pop
mov
inc
mov
pop
les
popa
loopnew
orl
cld
jae
inc
add
jmp
pop
mov
mov
push
mov
and
sbb
sbb
xchg
xor
pop
add
cmp
ret
mov
dec
push
push
mov
push
das
cmp
adc
or
je
pop
movsb
xchg
xorb
ss
hlt
pop
out
sub
cmpsb
adc
inc
adc
cld
lds
into
stos
mov
adc
jns
pop
aaa
int3
add
add
sarb
cld
jo
mov
pop
ds
mov
cltd
int
int
test
in
push
addr16
and
xchg
fs
clc
cmp
lret
mov
pushf
push
add
xor
aaa
cmpsb
aad
sub
fisubs
pop
inc
push
inc
ja
hlt
mov
mov
sub
add
mov
mov
rcrl
push
notl
pop
xchg
mov
xor
cmp
ja
jb
lea
pop
xor
sbb
jae
sub
adc
into
push
lock
mov
mov
push
insb
lock
in
test
shrb
test
adc
enter
add
nop
pusha
mov
outsb
loop
xlat
jbe
pop
mov
add
sub
push
rorl
sbb
pop
push
mov
cmp
xor
xchg
subb
mov
and
divl
cmpsb
mov
cmp
mov
loopne
outsb
dec
cmpsb
sti
fbld
xor
mov
pop
shld
sub
and
in
sarl
xchg
jb
mov
nop
popa
sti
jge
mov
sub
fwait
lock
mov
inc
mov
lea
ret
push
push
mov
popa
pop
nop
pop
mov
ljmp
das
cmp
shrb
pop
scas
and
sbb
loope
lret
dec
push
jge
sbb
sbb
pop
ljmp
icebp
repnz
push
push
sbb
fmull
mov
xlat
mov
leave
push
jp
rclb
pusha
aad
adc
pushf
jp
shlb
sub
push
enter
cmpsb
fnstenv
cmpsb
fdivrs
pop
and
test
or
or
pop
or
mov
mov
xor
mov
dec
mov
ucomiss
test
cmpsb
daa
push
shlb
or
test
xchg
cmp
lds
or
dec
sbb
jnp
and
gs
nop
sub
or
dec
shrl
fstps
data16
sbb
sbb
xchg
inc
mov
add
push
xor
shrl
push
sbb
mov
out
addr16
addr16
xchg
test
enter
adc
scas
lods
mov
and
cmp
les
mov
xchg
or
aad
arpl
or
in
sub
pop
aas
out
push
lods
jmp
stos
jnp
sbb
cwtl
fcomp
push
lcall
imul
inc
sub
push
ret
mov
jecxz
imul
and
lods
push
fsubrl
add
orl
xor
pop
pop
dec
pop
in
push
xchg
repnz
cwtl
call
and
in
xor
lea
sbbl
xchg
xchg
xor
imul
nop
cli
or
jle
lods
iret
stos
mov
fsubl
movsl
js
pop
sar
mov
stc
jno
push
mov
jbe
andl
cvtps2pi
icebp
dec
loope
std
addr16
fdivr
cmpsl
add
mov
dec
inc
xor
call
cmp
sbb
and
cmpsb
ja
mov
in
shlb
imul
inc
mov
jbe
xor
inc
add
or
mov
or
into
xor
decb
arpl
fimull
rolb
test
das
mov
pop
bnd
in
mov
pop
xor
push
jnp
push
inc
and
pop
in
test
movsb
xchg
pop
mov
scas
mov
xor
jle
mov
pop
jmp
test
or
pop
adc
sub
sbb
add
push
pushf
pop
jae
sbb
jae
ret
or
cmp
lods
stos
std
lret
inc
lahf
xchg
stc
jp
mov
outsl
out
adc
js
outsb
sbb
mov
gs
bound
fldenv
ret
xchg
cmc
nop
popf
push
andb
std
sbb
xchg
jle
loopne
or
lcall
sbb
adc
mov
jp
insb
adc
ds
inc
mov
push
pop
pop
out
pop
push
cmp
jae
jnp
jb
cs
or
inc
push
or
add
in
stos
aad
cltd
je
pop
aas
fistpl
inc
das
out
xor
sub
dec
mov
out
lods
gs
pop
dec
mov
mov
into
sbb
pop
push
pop
cltd
jecxz
cmp
xlat
shlb
mov
clc
in
push
sbb
nop
and
adc
fisttpll
inc
push
jnp
jo
xchg
sarl
or
mov
and
dec
pusha
pop
pop
inc
divl
push
fdivrl
dec
mov
lods
cli
shrb
adc
cmp
add
fwait
cmpsb
test
repnz
daa
cld
sub
dec
xor
mov
jbe
idiv
int
aam
push
fsts
push
fiadds
lods
aam
js
sub
inc
push
jbe
jns
pop
jae
loop
pop
mov
shlb
or
add
push
mov
sub
ljmp
inc
xchg
xlat
push
pop
xor
out
sarl
inc
and
push
xchg
mov
test
out
incb
mov
lds
mov
sbb
in
out
adc
jns
dec
mov
insb
jbe
sbb
cmp
cmp
dec
jp
add
arpl
daa
call
je
inc
mov
les
cmp
and
imul
js
test
ss
orl
push
ud0
pop
lods
sub
xor
outsb
jo
loope
mov
xor
mov
dec
xor
loop
sti
inc
jmp
lock
jnp
ret
and
push
negl
popa
and
rep
movsb
jmp
ss
xchg
adc
push
out
and
js
icebp
movsb
jecxz
in
cmp
ja
repz
adc
adc
addl
rcr
testl
cmp
fs
stos
adc
jl
xlat
pop
push
sbb
xchg
adc
rolb
cmp
or
sbb
lea
inc
jb
inc
push
icebp
inc
divb
xchg
jno
inc
mov
mov
outsb
or
adc
pop
pusha
fldl
aas
dec
cmovge
incl
inc
jl
test
lods
into
sub
mov
dec
or
push
lea
popf
xchg
mov
and
fstl
les
addl
sbb
mov
or
ja
jns
push
xchg
ljmpw
pop
xor
or
stc
hlt
xchg
mov
shlb
ja
dec
push
xor
movzbl
add
push
jne
shr
dec
lret
setge
sbb
int3
iret
sub
pop
fcomp
mov
xchg
jl
inc
add
pusha
cltd
mov
push
jmp
and
enter
int
cmpb
cmp
ror
test
pop
fwait
add
push
sub
jnp
mov
ret
nop
jae
sub
adc
ss
sbb
insl
orb
ret
mov
dec
outsb
imul
fimull
pop
ljmp
mov
inc
xchg
pop
out
xor
in
and
push
mov
xor
jae
mov
lcall
fbld
sub
or
pop
push
and
and
rcrb
xor
jl
add
ljmp
cltd
movb
push
xchg
nop
cli
sbb
mov
ret
mov
gs
pop
fldcw
sub
add
cmp
scas
ret
cs
cs
cltd
sti
lret
stc
mov
cmp
sbb
add
aam
fistpll
shll
shll
cmp
fwait
into
push
xchg
fdivl
xchg
sub
mov
pop
stos
neg
sti
jo
loope
inc
aas
ss
sub
stc
inc
sbb
xchg
pop
fwait
cmpsl
xchg
xor
jne
lcall
xor
fwait
rcrl
lret
jg
out
add
int
sbb
jns
mov
dec
xor
or
xchg
xchg
adc
test
flds
inc
scas
xchg
dec
xchg
scas
movaps
dec
lret
das
adcl
roll
push
fwait
xchg
sbb
jecxz
or
inc
dec
jmp
gs
jl
test
sub
mov
dec
jp
lcall
sbb
mov
sbb
fcompl
dec
xor
adc
mov
or
add
out
xor
repz
mov
lock
out
push
movsl
stos
push
pop
cmp
mov
mov
popf
cld
imul
fldcw
xchg
hlt
sbb
jo
dec
outsl
loopne
push
ds
pop
cmp
fildl
sub
mov
push
sub
adc
sub
jb
ljmp
js
ds
scas
or
sti
push
leave
sub
test
inc
aaa
xor
dec
stc
xor
xor
stos
int3
ljmp
mov
jg
dec
lock
xor
push
dec
xor
fstpl
adc
jg
dec
jle
aaa
sbb
bound
xor
icebp
dec
stos
popf
mov
and
js
mov
daa
cld
icebp
pop
xchg
rorl
test
mov
adc
pop
lock
data16
sbb
js
cmpsl
and
pop
testl
sub
sub
mov
daa
sbb
inc
iret
pop
mov
sti
jne
mov
rclb
mov
and
dec
mov
int
inc
test
mov
push
xchg
movl
inc
xchg
pop
inc
pop
or
cmp
lods
mov
mov
and
dec
aad
fcoms
or
xchg
pop
dec
movsb
jae
movsb
pushf
sbb
fsubrl
sbb
adc
aad
push
icebp
sti
out
pop
movsb
jns
dec
das
jnp
out
stos
enter
xchg
jns
scas
insb
sahf
mov
sub
ss
fwait
inc
into
insl
clc
cld
adc
adc
dec
test
inc
jmp
and
xor
bound
inc
hlt
mov
scas
or
pop
xchg
sarl
or
repnz
pusha
cmp
cmp
js
push
xchg
sahf
or
into
xchg
addr16
cmpsb
and
ret
xchg
fsubrl
loopne
jmp
out
insl
mov
inc
dec
cmp
out
sti
jnp
mov
mov
pop
cmp
testl
sbb
adc
sub
bound
ds
lahf
or
jecxz
dec
or
scas
sbb
ljmp
push
test
sahf
push
or
mov
out
fwait
in
aam
mov
jnp
push
lock
pop
adc
pop
add
es
dec
jb
and
xrelease
mov
mov
adc
fldt
jl
mov
sub
repz
pop
pop
filds
adc
adc
stos
cmp
es
xlat
ret
mov
cmc
lods
fstps
insl
mov
mov
and
mov
test
daa
je
jg
pushf
pop
fsubs
sbb
cmp
adc
inc
cmp
jb
out
and
stos
sti
pop
mov
adc
rolb
or
stos
push
ja
mov
adc
xchg
test
lret
xor
jl
dec
sub
aad
rcrb
mov
fs
shll
xor
or
test
add
pop
sbb
add
outsl
fwait
or
jle
push
mov
pop
inc
clc
imul
or
pop
call
adc
sbb
inc
je
in
jbe
and
icebp
cmp
inc
test
mov
test
ret
fnstcw
jo
lods
adc
cld
fcmovnbe
lods
outsb
cmp
and
jne
or
pop
fldl
imulb
mov
xlat
stc
xor
adc
xchg
jecxz
adc
subl
pusha
mov
and
cwtl
loope
add
add
mov
jo
add
lods
mov
rclb
adc
jno
jg
xchg
cltd
inc
outsl
roll
mov
gs
mov
xchg
mov
pop
mov
xchg
sub
ffree
mov
in
mov
leave
cmp
adc
sub
push
das
inc
out
test
push
push
lods
out
nop
in
add
push
aad
hlt
bswap
test
cmc
pushf
mov
mov
sub
add
jecxz
fsubrl
movsl
je
xor
and
xchg
push
xchg
mov
stos
push
leave
and
inc
push
pop
mov
add
out
jmp
sub
pop
outsb
imul
int
mov
call
mov
sbb
pop
lods
add
xor
sub
push
inc
test
popa
repz
incb
loop
call
mov
cmpsb
popf
or
mov
mov
jbe
mov
lea
add
pusha
jo
sub
cmp
xchg
shlb
and
push
or
jg
mov
jnp
pop
mov
lods
pop
clc
add
in
push
into
jge
push
imul
jle
xchg
add
stc
js
pop
jno
fisttps
ljmp
repz
cmp
adc
orb
xlat
aad
or
dec
jb
gs
imul
push
cmpl
sub
xchg
lcall
and
out
mov
sahf
notl
jl
fisubrl
adc
push
pop
in
aaa
ficoms
dec
or
or
sarl
and
push
add
sti
clc
rorb
ja
mov
mov
xchg
jne
test
das
punpckhbw
ljmp
pop
sub
pop
call
loope
mov
lcall
pop
push
cmp
mov
push
push
icebp
negl
mov
leave
nop
repz
mov
nop
out
sbb
sbb
xchg
mov
adc
jno
inc
dec
xchg
dec
iret
arpl
mov
xchg
sbb
popf
mov
sub
std
aas
sbb
imul
cld
push
scas
lods
push
pop
cwtl
lahf
sbb
cmpsl
add
inc
xor
push
jne
or
adc
pushf
sub
insl
in
call
or
pop
fisttpll
cli
movsl
pop
bound
pushf
jns
mov
cmpb
inc
jmp
testb
xchg
das
cmp
mov
cmpsb
push
js
jl
jecxz
test
fwait
sbb
push
test
jg
inc
leave
aaa
mov
and
jb
dec
adc
mov
in
jnp
rcl
sar
push
nop
orb
rorb
fs
std
pop
stos
shlb
xor
cltd
inc
lret
movsb
gs
hlt
xchg
sub
dec
jg
cs
add
jo
popa
sbb
sbb
mov
pushf
data16
int
lock
mov
or
jle
sub
xchg
icebp
and
adc
ds
xlat
and
cmp
std
xlat
add
dec
jne
inc
mov
ret
mov
jbe
push
add
adc
push
inc
cmp
mov
fnstsw
jnp
xor
mov
test
insb
fwait
push
mov
sbb
sub
dec
push
mov
sbb
repnz
jb
outsb
mov
push
adc
jnp
xor
ja
push
dec
das
into
std
repz
jb
rcll
and
and
adc
out
shrl
imul
push
push
or
shlb
jne
inc
int
rcrl
xchg
test
jne
ja
or
push
inc
xchg
dec
xorb
and
test
xchg
jae
in
jl
inc
subb
nop
or
outsl
mov
and
jmp
inc
lret
sbb
leave
and
or
cmc
xor
or
jmp
out
jge
test
loopne
lret
scas
mov
push
cli
push
es
adc
adc
pop
fcmovnbe
sbb
xchg
or
orl
sub
mov
and
mov
mov
ljmp
out
fsubrl
add
cmp
pop
mov
jg
or
fstl
fmuls
jmp
or
insl
mov
pop
jns
in
int
push
lods
test
fsubs
mov
out
testl
sbb
lahf
mov
insl
popa
sbbl
mov
mov
add
cmp
pop
xchg
mov
movsb
std
xchg
jl
hlt
enter
pusha
test
mov
mov
lret
je
sub
pop
mov
ss
sbb
daa
iret
lods
mov
inc
sahf
xor
push
mov
lea
sti
stc
jge
mov
mull
push
push
test
std
add
jge
mov
pop
adc
sbb
lock
pop
inc
or
scas
in
sti
sub
stc
jno
jno
hlt
sbb
adc
pop
not
in
mov
pop
test
aaa
inc
push
adc
mov
xchg
pushf
stc
lret
add
cmp
data16
nop
call
cltd
sbb
pop
push
int
cmp
in
dec
inc
repz
mov
bound
sub
xlat
fdivs
dec
adc
fdiv
mov
xchg
shrl
mov
sbb
mov
iret
mov
stos
fidivrs
dec
inc
inc
int3
aaa
rolb
add
or
int3
add
sarl
loopne
and
sbb
mov
je
icebp
gs
adc
in
xor
aas
lcall
movsb
sbb
mov
dec
or
scas
dec
jp
shlb
jo
xchg
std
jae
xchg
repz
aaa
push
fxch
aaa
dec
nop
xor
xor
js
imul
pop
and
jne
and
jns
xchg
popf
jb
std
add
inc
pop
aam
xchg
and
sbb
pop
push
out
aam
push
and
mov
cmp
dec
xchg
in
arpl
pop
push
pop
push
mov
sub
jmp
mov
pop
xchg
mov
mov
and
jno
xorb
add
pop
movsb
out
sti
mov
shrb
les
and
jecxz
je
jo
or
push
xor
aam
out
sub
xchg
adc
inc
iret
cmc
repz
rcrb
gs
icebp
inc
or
mov
cmpsl
cmp
fs
mov
push
int3
push
mov
xchg
cmp
and
sbb
aaa
pop
popf
sbb
push
ret
mov
fwait
xchg
mov
popa
dec
jle
std
cmpsl
iret
ret
into
push
push
mov
and
data16
int
ret
popl
and
mov
shl
xor
mov
lcall
ljmp
mov
cltd
push
mov
dec
in
adcl
leave
arpl
sbb
xor
lds
mov
xchg
cmp
insl
insl
and
jbe
adc
insb
cmp
add
fsubl
lea
fabs
add
cmp
test
pop
mov
xor
sub
push
add
xchg
iret
ret
in
aas
and
sahf
and
mov
and
push
and
sub
cmp
xlat
faddl
ret
mov
pop
cmp
pop
mov
rcrb
aam
push
inc
inc
shll
lea
fcompl
adc
loop
orps
add
in
movsb
lock
divl
inc
clc
shll
pop
popa
push
pushf
xor
push
push
mov
daa
scas
repnz
ss
sub
aad
cmp
test
push
call
push
and
dec
xor
cs
aam
xor
out
cld
stos
dec
ljmp
outsl
push
and
adc
fdiv
fidivs
mov
mov
push
or
das
push
mov
bound
inc
imulb
xor
out
mov
hlt
out
cltd
test
sahf
cld
addl
enter
mov
push
mov
insl
or
movsb
xchg
mov
out
pop
mov
sbb
rorb
aas
stc
scas
sbb
cs
repz
stc
nop
jl
cld
cmp
inc
inc
pop
dec
jecxz
mov
in
adc
inc
mov
sub
sbb
cmp
or
shrl
jne
jb
fiadds
je
fcmove
xlat
adc
lahf
imulb
cmp
push
xor
pop
aaa
pop
add
movsb
pop
jl
dec
sbb
cli
pop
add
loopne
rcr
fnsave
std
inc
and
fcom
out
mov
ret
cs
lods
mov
dec
mov
addb
mov
mov
and
mov
bound
mov
aaa
pop
in
popf
cmp
jl
sub
dec
cwtl
mov
xlat
les
iret
mov
jmp
les
mov
das
xlat
inc
js
sub
fcmovnb
push
mov
in
push
cmc
scas
adc
or
or
popf
mov
lcall
push
pop
sub
mov
push
push
jg
fwait
and
pop
mov
not
mov
fildll
xchg
popa
jo
xchg
xor
push
dec
xchg
std
orb
sahf
jne
fs
aas
ljmp
cmc
mov
sub
jne
int3
das
and
add
gs
or
cmp
ret
sbb
aas
ja
fisubs
loopne
int
leave
xchg
pop
loope
test
dec
and
push
ficomps
mov
hlt
das
punpcklbw
shll
mov
pop
jmp
sbb
lahf
in
push
xchg
pop
fwait
addb
add
daa
daa
dec
cmpsl
cmpsb
movb
cmp
xor
cmpsb
pop
pop
repnz
inc
xchg
das
cmpb
push
jo
adc
cmp
or
decb
pop
or
rolb
jmp
sbb
test
mov
push
imul
fdiv
sbbb
outsb
arpl
xlat
push
cmp
jp
cltd
xlat
jg
loop
aaa
inc
cltd
mov
aam
mov
stc
add
push
push
mov
std
outsl
cmc
xchg
jecxz
lahf
cmp
das
inc
mov
sub
out
movsl
xchg
sbb
pop
sub
push
sbb
ret
pop
aaa
lock
xor
cli
clc
xchg
adcb
cmpsb
rorl
int
xor
push
into
stc
cli
adc
mov
jbe
jae
pop
or
xchg
inc
into
jbe
fmuls
pop
cmp
add
dec
mov
mov
out
add
sti
jnp
xor
push
or
test
mov
aas
fs
ja
leave
fisubs
popf
sbb
ret
mov
dec
pop
add
test
je
imul
outsl
mov
stc
mov
push
xchg
rcr
mov
or
mov
fldl
adc
mov
jb
gs
inc
fwait
lds
mov
roll
fiadds
push
and
imul
fdivrp
ss
cmp
mov
int
outsb
inc
jmp
shll
jmp
mov
xor
push
lcall
cmpsl
mov
lret
cmpb
pop
mov
mov
gs
ja
cmpsl
jbe
call
adc
sbb
cltd
jle
pop
jbe
jge
std
mov
shll
mov
sub
add
mov
insb
loopne
jns
dec
fisubs
aad
jns
sub
pop
sarl
lret
out
and
pop
push
jmp
push
shrb
iret
mov
stos
and
movsb
repz
jne
mov
lods
inc
push
mov
and
sbb
add
addb
sub
xchg
loope
jge
adc
mov
mov
in
inc
repnz
or
ss
mov
or
es
xor
sub
int3
gs
clc
lock
into
mov
mov
cmp
stos
mov
dec
xlat
inc
pop
loopnew
push
sbbb
jb
cmpsl
xchg
sbb
cmc
jne
jp
aad
fwait
inc
test
aam
ljmp
pop
cmp
jnp
pop
dec
fcmovnb
sbb
adc
adc
lcall
sub
jbe
mov
mov
lcall
cmc
sahf
cs
mov
mov
jb
cmp
pop
xlat
mov
imul
jmp
outsb
push
cmpsb
mov
jle
jecxz
icebp
add
and
push
cmc
adc
push
pop
fiadds
js
or
addr16
jl
loope
mov
iret
mov
jmp
repz
pop
mov
sub
dec
clc
hlt
add
stos
dec
xchg
lret
pop
std
pusha
mov
in
add
arpl
dec
pop
jns
jmp
push
xor
mov
push
outsb
mov
pop
shl
push
cmp
xor
ret
add
xchg
iret
mov
cmpb
mov
sub
mov
jg
pop
mov
cli
test
repnz
xor
insl
push
add
scas
mov
dec
call
ret
mov
mov
fldl
xchg
sub
mov
fsubl
test
insb
mov
sbb
pop
int3
and
xchg
fsts
push
mov
icebp
sarl
and
scas
dec
mov
repz
mov
lcall
dec
cmp
js
in
xchg
inc
xor
pop
add
adc
fcomps
xor
fs
dec
iretw
lods
or
push
cmp
bound
popa
mov
sahf
ds
jecxz
jl
xlat
xor
leave
shr
mov
das
xchg
fsubs
mov
adcb
pushf
sbb
mov
daa
pop
inc
mov
scas
int
and
cmc
sti
jae
pushf
or
insl
ds
andb
mov
insb
loop,pt
ret
add
scas
dec
jo
mov
or
xchg
sub
push
cli
arpl
divl
cmp
jg
aad
mov
push
sbb
mov
loop
xchg
mov
stos
mov
lret
nop
push
jecxz
into
std
repnz
rcll
mov
dec
cwtl
divb
mov
pop
cmp
lea
scas
sub
aaa
fimull
shlb
pop
fidivrs
add
ljmp
lds
jo
jmp
movsb
in
rol
push
in
outsb
int
inc
sbbl
cmp
cmp
cwtl
test
or
mov
jmp
push
pusha
inc
movb
xchg
in
loop
mov
in
or
pop
xlat
cltd
fcmovne
and
inc
in
imul
roll
shl
xchg
cmpsb
aad
pop
insl
pop
add
fwait
aam
cmp
push
hlt
dec
cmpps
dec
lret
pop
dec
sub
stc
test
pusha
cli
arpl
xor
cmp
push
rcrl
adc
bound
mov
push
inc
ljmp
cld
inc
into
lret
lret
loope
jbe
xchg
fsin
pop
pop
out
aad
lods
shlb
ds
add
xchg
sbb
out
call
push
ret
mov
test
ret
mov
pop
sti
pop
mov
mov
dec
in
cmp
adc
iret
and
mull
daa
mov
xchg
adc
or
xor
imul
jecxz
push
jl
mov
push
call
sbb
sahf
and
daa
inc
fistpl
lods
and
or
fisubrl
int
add
sbb
nop
loop
xor
push
test
push
data16
mov
mov
pop
mov
std
jnp
jb
or
int3
inc
fists
sbb
mov
push
out
jnp
fldcw
sub
stos
cwtl
in
and
or
jo
lods
and
lea
iret
cwtl
add
jp
mov
xchg
xor
cmpsl
sarb
sub
testb
pop
loope
cmpsl
imul
mov
arpl
out
mov
push
mov
add
je
lret
test
testb
jbe
xor
in
in
shl
sbb
das
in
push
pop
adc
mov
cmp
pop
or
xchg
cmpsl
jecxz
push
repz
jbe
rcrb
mov
notl
frstor
push
ret
push
xor
fiadds
xchg
mov
mov
scas
jno
lock
lcall
and
out
add
jmp
sbb
in
iret
fninit
in
je
mov
add
fwait
pop
xchg
mov
xor
pushf
jb
lret
inc
mov
jo
aad
das
mov
fsubrl
mov
cwtl
and
inc
push
lcall
add
stos
leave
adc
inc
push
and
and
cmp
push
add
lcall
cmp
pop
inc
mov
jne
stos
inc
pop
dec
sahf
cmp
pop
sub
jle
and
mov
and
mov
dec
jp
jge
mov
pop
pop
sahf
loopne
je
mov
scas
and
sti
add
mov
or
xor
push
dec
pop
daa
xchg
xchg
sahf
sub
hlt
jbe
adc
sub
lods
xchg
inc
or
lock
inc
scas
inc
jbe
add
aam
dec
adc
cmp
std
sti
and
out
cwtl
xlat
mov
testb
jnp
call
pop
lods
movsl
jle
push
sub
pop
fnsave
lcall
lcall
repz
iret
cmp
push
insb
inc
mov
jle
xchg
jp
insb
lahf
mov
test
sti
xchg
inc
mov
imul
stos
bound
lret
sbb
pop
sahf
std
cmc
scas
sarb
add
popf
adc
push
lea
iret
push
fbstp
je
insl
mov
cld
sub
in
mov
js
xchg
decl
movsl
fxch
mov
jp
push
loopne
cli
fwait
xor
cmpsb
loop
in
int
aas
aam
fisubl
mov
scas
xchg
pushf
repz
in
mov
fisubrs
out
sub
pusha
int
fwait
loopne
ret
adc
xor
jns,pn
mov
push
js
mov
cmp
sub
mov
out
cmpsb
push
add
fdivs
mov
or
or
in
push
dec
mov
or
int
imul
rorb
dec
hlt
clc
inc
jmp
stos
hlt
movsb
iret
mov
xchg
xchg
push
scas
aas
loope
mov
aad
mov
jl
out
enter
jl
mov
add
testb
stc
fimull
push
in
icebp
adcb
adc
xor
loopne
cmp
sarb
ds
rorb
mov
xchg
shlb
and
mov
sub
stc
mov
in
ljmp
cmp
jmp
in
sub
mov
cmpsb
mov
pop
inc
rclb
aaa
push
stc
xchg
xchg
sbb
idivl
sbb
and
inc
or
jmp
mov
mov
mov
test
xor
sarl
sub
outsb
repnz
mov
stc
cmp
test
in
push
jmp
call
xchg
add
push
fmull
jecxz
dec
jecxz
repnz
sbb
push
cmp
lock
into
sarb
divps
out
les
sub
clc
mov
push
inc
in
sbb
shll
movsb
jle
ljmp
jb
pop
and
loope
les
lods
inc
out
add
xchg
andb
gs
sub
pop
lods
mov
stc
inc
push
dec
in
sub
xchg
into
jae
sbb
or
adc
scas
jecxz
test
cmp
inc
cmc
fs
pop
adc
mov
lret
and
mov
inc
int3
jp
add
push
sbb
pop
mov
push
mov
lods
idivb
sti
pop
insl
dec
addr16
dec
pop
hlt
mov
bnd
outsl
out
pop
push
cmc
jo
mov
cs
movsb
repz
inc
iret
cs
subb
pop
out
mov
outsb
stos
pop
clc
das
jb
pop
ss
dec
lret
test
out
push
mov
test
inc
fiadds
arpl
sbb
mov
sarb
or
movb
xor
nop
int
sbb
dec
hlt
fmull
mov
jmp
imul
fdivl
or
inc
test
mov
out
xorb
mov
jl
jle
stc
and
into
add
icebp
or
inc
mov
in
out
push
add
xchg
cmpsl
daa
loope
addr16
mov
insl
push
mov
out
test
mov
adc
push
arpl
loope
mov
push
insl
lds
lahf
push
aad
aaa
xchg
dec
lret
adc
je
jbe
stc
sub
imul
jl
cmp
or
mov
divl
sar
push
imulb
mov
mov
mov
lods
movsl
lods
and
roll
ret
into
xor
sub
notb
repnz
jne
xchg
or
das
into
int
inc
loope
mov
mov
mov
lds
pop
test
mov
mov
pop
pop
movsb
fisttpl
xchg
mov
enter
cmc
xor
push
sub
jns
insb
call
pusha
dec
in
insl
in
and
xchg
add
mov
cmp
cmp
xchg
testl
movq
enter
pop
lret
nop
imul
sbb
push
ljmp
cmp
mov
cmc
movsl
push
jo
les
sbb
xor
sub
shl
fcomip
loop
jg
adc
xor
cmp
xchg
mov
out
mov
xchg
cmpsb
sahf
aam
dec
hlt
bound
je
jo
repz
or
cmp
roll
or
add
adc
jae
fsubrs
in
fcomp
into
cmc
loopne
or
xchg
push
and
sarl
repnz
xchg
imul
mov
push
or
cmp
mov
repz
rcll
xlat
stc
push
lret
icebp
cmpsl
rol
inc
les
sbb
mov
dec
cwtl
fmuls
mov
icebp
or
stos
fsubrl
mov
sbb
sbb
mov
cmc
push
pop
lods
jge
mov
movsl
js
push
pushf
xchg
mov
int3
pop
mov
test
inc
sbb
aaa
mov
sbb
inc
adc
adc
fildl
push
mov
cmp
imul
ja
lods
cmp
fs
fwait
sub
sbb
lods
outsl
fists
fsubs
in
mov
pop
notb
mov
xor
push
jge
std
xchg
sub
jns
mov
aas
push
fmulp
sbb
mov
shl
mov
and
mov
lret
push
and
dec
inc
in
and
and
rclb
mov
adc
pop
sti
lods
xlat
mov
aaa
test
mov
std
inc
out
mov
mov
mov
cmp
inc
cmpsl
cmpsl
pusha
xchg
lcall
test
gs
mov
pop
cmc
jbe
popf
adc
mov
add
push
pusha
dec
mov
test
adc
fistpl
mov
hlt
xor
int
xor
or
push
mov
cmp
mov
mov
add
mov
out
inc
and
sub
mov
dec
cmpsb
adc
mov
mov
adc
lock
daa
mov
pop
dec
divl
or
pop
cmc
lods
cmp
jno
xchg
jmp
fdivrs
pop
push
add
movsl
ljmp
cwtl
xor
push
adc
ficompl
leave
mov
sub
mov
out
push
and
andl
imul
or
add
pop
out
xor
mov
out
push
mov
addr16
in
mov
adc
mov
mov
mov
mov
jecxz
ljmp
adc
bound
cmpsb
rcrb
in
inc
aam
mov
ds
mov
test
xlat
jno
cmp
sub
mov
in
aaa
pop
jle
out
mov
ljmp
fiadds
cmpsl
or
inc
rcrl
out
pop
mov
cwtl
sub
and
cmp
aaa
add
jb
cltd
test
xchg
insb
je
mov
shll
push
cmpb
cmp
data16
mov
dec
sahf
and
scas
pop
or
aas
cwtl
vpaddsb
lret
push
mov
pop
cmp
sub
pop
hlt
loope
pop
or
jecxz
icebp
aad
lds
lret
in
in
pop
xchg
decl
in
inc
test
inc
or
test
cld
pop
jmp
fldcw
jns
aad
ljmp
mov
enter
shll
jmp
xor
mov
pop
jns
cmp
jmp
xchg
or
rclb
sub
xor
pop
ret
add
pop
mov
stos
arpl
pop
jp
std
cmp
pop
into
dec
movsb
xlat
lock
pop
aaa
mov
lret
insl
push
xchg
push
mov
pop
mov
cmp
in
dec
jb
jns
xchg
adcb
sbb
and
jno
cmpsl
or
pop
dec
mov
fwait
jae
add
xchg
cmp
divl
stos
lahf
jmp
popa
pusha
ss
hlt
lahf
ds
pop
popf
inc
xorb
push
add
dec
out
dec
mov
cltd
push
inc
insl
lcall
sub
adc
cltd
xor
scas
shl
in
dec
dec
inc
add
out
pusha
insb
xor
adc
enter
push
sub
xchg
mov
inc
mov
shrb
adc
mov
pop
cmpl
gs
adc
lock
mulb
ja
jae
adc
dec
bound
jp
inc
or
xchg
push
add
ljmp
ja
rolb
mov
fdivrl
scas
adc
push
jp
push
lock
jle
popa
push
pop
push
out
dec
stos
lds
lds
cmp
push
fisttpl
repz
je
in
mov
jbe
das
in
push
std
dec
fdivr
pop
in
push
and
sub
mov
inc
jl
lock
and
filds
sbb
hlt
cltd
jl
mov
leave
sti
sub
mov
insb
sarb
les
nop
insl
jmp
dec
aad
leave
mov
mov
bnd
ret
cwtl
lcall
mov
sbbl
sarl
sub
imul
pusha
push
sbb
data16
dec
je
mov
xor
xor
inc
xchg
inc
jp
mov
or
fprem1
cmp
adc
decl
icebp
xchg
aaa
daa
addr16
mov
nop
xchg
xchg
gs
pop
jg
mov
pop
pop
pop
adc
aam
in
xorb
mov
int
jae
mov
lahf
inc
pop
xor
pop
and
inc
ss
fsubl
icebp
in
add
lock
mov
mov
xchg
lods
dec
mov
in
adc
fcompl
fsubs
repz
orb
into
lods
das
sbbl
ljmp
es
pop
mov
push
fwait
test
aaa
or
cmp
int
jbe
cmp
adc
jecxz
int
mov
add
shl
mov
imul
jbe
aaa
bound
xchg
mov
outsl
cmpsb
adc
cltd
fiaddl
stos
fimull
cmp
pop
add
xor
inc
scas
xor
or
mov
in
mov
jne
fwait
cmp
lods
push
in
mov
mov
dec
inc
adc
sub
cli
mov
out
bound
xorb
mov
test
mov
call
les
mov
ret
xor
cmp
arpl
lea
mov
test
add
mov
cmpsl
mov
scas
jl
xor
mov
cld
mov
push
lods
xchg
or
in
jle
mov
cmp
lcall
or
xor
iret
xchg
mov
xor
sahf
push
imul
stos
adc
in
mov
pop
stc
cmpsl
jmp
xlat
xchg
lods
jno,pt
popf
into
int3
fcomps
stos
xor
or
mov
rep
fs
xor
jmp
cmp
test
cmpl
pop
fcomi
mov
lret
shl
add
inc
push
adcb
orb
int3
sbb
add
scas
jbe
jmp
cmp
leave
out
fdivrs
mov
push
lcall
cmc
sbb
dec
push
adc
sub
loope
movb
dec
leave
shrb
pop
mov
addr16
mov
and
movsb
sar
inc
imul
mov
xchg
mov
addr16
push
sbb
sub
cmp
in
inc
lds
nop
notl
scas
adc
movsb
into
adc
nop
lcall
je
sub
mov
mov
mov
std
mov
push
ljmp
jne
add
pop
cmpsb
dec
jo
call
push
hlt
aaa
test
fistl
hlt
mov
and
add
and
pop
roll
jmp
pop
pop
sbb
dec
cmpsl
jb
pop
xchg
daa
imul
pop
add
ret
push
lret
cmpsb
mov
inc
sti
enter
pop
ss
pop
jge
and
pop
daa
jmp
gs
pop
adc
add
cmp
orl
scas
movsl
xor
dec
sbb
jle
push
mov
inc
scas
stos
fimull
aas
ss
sarl
std
add
enter
outsb
es
xor
test
push
inc
aaa
lea
xor
dec
enter
push
lods
fdivrl
scas
test
add
mov
xor
inc
mov
jmp
dec
pop
xchg
sub
aas
roll
cwtl
mov
xchg
hlt
js
xchg
mov
daa
fisubs
rorb
adc
cmp
das
in
add
mov
btr
cmpsb
cmpl
scas
pop
xchg
mov
fcomip
jl
sarl
xchg
aam
out
sbb
gs
push
inc
icebp
cmp
negl
dec
aaa
mov
std
jp
mov
mov
and
add
mov
shll
adc
mov
fmuls
scas
and
dec
mov
jmp
les
dec
push
test
and
mov
mov
mov
pop
imul
cmp
dec
dec
aad
mov
add
stos
dec
js
movsl
mov
pop
sub
jmp
loop
addr16
adc
sub
in
push
adc
xchg
inc
add
mov
mov
arpl
pop
popa
fs
test
push
movsl
push
xchg
xor
es
add
pop
mov
pop
xchg
adcb
mov
incl
xchg
clc
std
cmp
gs
sub
shrl
in
cmpsl
xchg
jmp
rcrl
adc
shrb
xchg
test
or
jae
push
mov
jmp
stos
cmp
xor
cs
adc
lock
dec
into
call
rcrl
or
mov
lods
jb
add
push
xchg
out
mov
add
hlt
into
add
cmp
push
jno
or
ss
repnz
fs
nop
xorb
rcll
int
cmpsl
iret
adc
out
leave
lods
xchg
sbb
loope
repnz
cmp
dec
aad
int3
pop
pop
repnz
fisubrs
jnp
xchg
jns
push
and
out
cmc
rol
dec
adc
rolb
xchg
xchg
clc
and
cmp
pushf
sub
xor
in
pop
pop
dec
cli
xchg
rcl
jbe
pop
mov
and
push
stos
lar
loop
mov
jge
xchg
dec
enter
cwtl
daa
push
mov
data16
iret
dec
icebp
xor
lcall
cli
fldt
add
je
sub
pop
ljmp
mov
mov
cmp
sbb
cmpsl
and
add
xor
ja
sti
sub
cld
outsl
jecxz
xor
pop
stos
adcl
cmc
ret
call
jl,pt
pop
mov
enter
dec
xchg
outsl
mov
lock
js
enter
mov
xor
das
shll
into
movsl
imul
call
fcomp
add
sub
and
sti
sbb
dec
adc
lods
jo
faddl
mov
jmp
xor
clc
mov
stos
movsl
jo
fistpll
push
cmp
pop
mov
out
mov
icebp
scas
jno
xchg
pop
cmp
insl
aaa
push
orb
adc
mov
mov
adc
sub
adc
out
outsl
scas
and
and
mov
lea
pushf
out
int
andb
mov
mov
sbb
push
or
hlt
jnp
and
lods
leave
in
pop
gs
mov
cmp
fcmovnb
xchg
out
mov
cmp
rorl
sbb
push
inc
adc
jnp
fdivrs
lahf
cmpsb
or
test
fwait
inc
xchg
das
jmp
xchg
add
xor
fisttpll
leave
or
or
pop
test
inc
xchg
test
loop
orl
jbe
pop
sbb
xchg
mov
lahf
jns
push
loope
bound
mov
data16
aam
adc
out
adc
negb
or
inc
cmp
mov
push
add
xchg
js
movsl
mov
addl
dec
out
push
xor
outsb
inc
add
xlat
in
mov
push
int
mov
mov
decb
lret
sbbb
mulb
lods
test
dec
out
xor
stos
mov
push
leave
in
inc
add
test
aaa
inc
fisubs
mov
dec
or
fstl
cmp
pop
into
adc
xchg
push
cli
sbb
jae
fmull
push
xchg
mov
in
lcall
adc
out
sub
xchg
fstpt
leave
mov
in
push
aad
cmc
icebp
pusha
mov
add
and
pop
push
cmp
popa
sub
or
mov
leave
jbe
jle
int3
sub
fs
adc
fsub
pop
and
push
lock
ret
push
fwait
sbb
mov
sbb
rclb
lock
cmp
jne
adc
ret
and
repnz
xor
or
mov
test
xchg
imull
cmp
outsl
in
mov
add
cltd
and
xchg
sub
es
iret
push
pop
xor
scas
sub
into
stos
scas
add
mov
aas
daa
sbb
stos
stc
adc
mov
ja
mov
jo
jne
jno
leave
fcmovbe
pcmpgtw
push
push
test
cmp
add
push
xor
js
inc
mov
out
add
push
mov
and
fwait
addb
sub
shrl
es
xchg
xchg
movsl
and
cmpsb
lahf
les
sar
jne
xchg
in
cmp
loopne
jno
sbb
push
jb
xlat
stos
sbb
and
pop
or
sar
adc
dec
push
data16
mov
movsl
push
dec
inc
or
xor
aad
idivl
pushf
hlt
xor
mov
movsl
xorb
pop
push
inc
push
js
aam
dec
mov
inc
mov
mov
jae
es
jnp
shl
gs
and
aam
fidivrl
imul
mov
and
fdivs
cmp
mov
test
out
xor
or
or
xchg
test
mov
inc
cli
aam
adc
ja
and
mov
jns
cwtl
dec
iret
or
fcmovnbe
sbb
lods
jp
daa
in
pop
loope
adc
mov
xchg
cmpb
stc
xchg
frndint
in
fdivrl
rcrb
push
pushf
push
xchg
sahf
xchg
xor
lcall
ret
jmp
mov
fidivs
sbb
lahf
test
xchg
mov
mov
adc
fistpll
fs
push
sti
test
push
divl
jmp
cmp
and
imulb
mov
mov
flds
aaa
cmp
xor
jg
adc
outsb
jge
pop
sahf
fwait
mov
in
push
sbb
sahf
dec
mov
xor
or
cmp
and
cmp
movl
cmpsl
dec
cmp
xchg
jo
jge
loop
push
movsb
in
outsb
nop
cmp
lea
es
std
imul
imul
adc
push
cmp
leave
add
or
out
icebp
or
dec
inc
icebp
sahf
add
subb
sti
xchg
out
enter
rcl
lods
ljmp
in
out
pop
fdivs
adcl
int3
pop
push
jns
cwtl
incb
mov
xchg
cs
pop
xlat
ss
adc
jg
xchg
xor
and
mov
rcll
pop
jo
cs
xlat
mov
in
mov
mov
mov
xor
stos
stos
dec
adc
jle
mov
push
push
rcrl
push
sti
push
push
in
jp
or
and
jmp
push
jno
insb
push
repz
mov
out
popa
mov
comiss
cli
sub
or
outsl
test
leave
adc
sub
in
sbb
arpl
mov
mov
lock
pop
push
mov
mov
sub
mov
repz
stos
cmp
imul
rcl
arpl
lock
pop
subb
xchg
push
jo
fistpl
les
adc
lods
cmp
bound
iret
add
sbb
daa
sbb
movsl
je
outsl
add
notb
je
ficoms
sub
mov
pop
lahf
add
lret
jo
je
cmp
leave
scas
pop
ficoms
mov
push
in
xor
xchg
mov
xor
jecxz
movsb
arpl
xor
xchg
fdivr
in
xorl
call
mov
dec
stc
push
fs
out
mov
dec
cmpsl
loope
cwtl
mov
and
cmpsb
outsl
push
adc
cltd
std
lcall
jns
dec
xchg
insb
mov
clc
add
pop
stc
sub
dec
xor
stc
or
adc
mov
in
repnz
mov
jnp
xchg
js
push
mov
cwtl
jo
mov
push
mov
xor
adc
push
and
int
adc
inc
sbb
xor
xchg
mov
fdivs
pop
leave
adc
xchg
sahf
movsl
stc
enter
xchg
xchg
push
ljmp
jae
ror
loopne
ljmp
fidivs
sub
loopne
and
sbb
roll
aam
ja
push
pop
sti
mov
mov
sti
inc
loopne
outsb
lock
addr16
out
jbe
aas
pop
xor
inc
rolb
clc
arpl
call
shrl
sbb
loopne
adc
fstpl
je
and
xor
mov
loope
fimuls
push
ret
ret
loop
movsl
xchg
adc
js
insl
js
fiadds
mov
pop
pop
xor
jg
lret
mov
aad
adc
imul
push
sub
mov
mov
cmp
icebp
ret
sbb
mov
adc
rcll
popa
addr16
or
ja
or
in
cwtl
dec
xchg
das
pusha
test
lret
arpl
push
ljmp
jg
sub
pop
int
ljmp
and
addr16
adc
ret
push
adc
stc
sub
and
push
mov
inc
sti
mov
sbb
push
sub
rclb
notl
sbb
stos
test
orb
xchg
out
adc
int
push
loope
mov
fstps
les
sub
sub
ljmp
sbb
fisubrl
insb
into
mov
fsubrl
imul
pop
aad
lods
push
hlt
mov
out
fstpl
mov
mov
test
xchg
xchg
je
shlb
arpl
jp
and
jb
xor
inc
cmp
and
xorb
pop
cmp
adc
pop
add
loopne
fs
lds
ret
aaa
mov
push
mov
stos
mov
in
fdivl
pop
cmc
pop
inc
pop
das
test
push
jno
cmc
mov
lock
cwtl
push
adc
ret
into
pusha
push
inc
dec
jge
pop
jbe
push
cs
std
sub
dec
jbe
sbb
sbb
jb
scas
add
lahf
and
xchg
clc
add
cli
in
lea
adc
mov
xchg
les
cwtl
adc
cmp
stc
icebp
dec
push
repnz
or
fwait
loopne
scas
xor
aad
jb
in
inc
push
xchg
sbb
pop
and
test
mov
imulb
xchg
idivl
lahf
inc
gs
ret
xchg
lods
push
jb
bound
and
repnz
mov
sub
sub
fmull
sbb
dec
sub
xor
pop
inc
push
lods
addr16
push
adc
push
out
push
cmp
insl
loopne
leave
pop
mov
stos
mov
pop
pop
lock
xchg
in
push
into
jno
lds
fdivp
push
ret
pushf
pusha
fwait
stos
popa
mov
icebp
sbb
adc
dec
dec
mov
outsl
mov
out
lcall
or
mov
leave
jno
jno
movb
or
jmp
xchg
cmpsl
mov
rcrl
xchg
push
lock
xchg
enter
xchg
mov
hlt
mov
jae
orb
pop
sti
adc
int
pop
in
enter
xchg
adc
loop
ja
icebp
mov
and
sub
cmp
aam
add
jne
or
push
addr16
and
jbe
sbb
inc
jp
ljmp
cmp
xchg
dec
and
stos
cmp
lret
int3
and
xlat
scas
xlat
xor
or
dec
mov
dec
in
popf
mov
mov
enter
sbb
shrl
inc
ds
pop
arpl
sub
bound
adc
and
fwait
dec
pop
xor
pop
xchg
jmp
outsb
cmp
mov
cs
fldl
jg
xchg
pop
js
and
dec
test
je
xchg
jae
aam
insb
cwtl
mov
test
pop
inc
cmc
call
inc
xchg
loope
xchg
lcall
loopne
mov
jnp
push
lret
dec
jecxz
ljmp
mov
mov
pushl
push
jle
adcl
int3
mov
and
daa
xchg
add
add
mov
loopne
lahf
push
cmp
inc
cli
and
jmp
inc
ffree
xchg
sbb
aas
sub
shll
mov
mov
cli
pop
sbb
aam
shl
js
adc
insb
cmc
repnz
dec
lmsw
mov
test
pop
mov
cmpsb
xlat
dec
mov
adc
pop
cmpl
jg
loop
mov
and
js
cld
or
sub
inc
and
push
fdivrl
or
fstl
sub
in
fisttpl
dec
push
jnp
loop
in
jb
aam
nop
fcmove
out
hlt
jmp
and
fisubs
mov
imul
nop
roll
cli
stos
daa
xchg
aaa
sbb
scas
rorb
movsb
or
pushf
jno
mov
imul
mov
incl
pop
fcom
cmp
lret
pusha
rol
fldcw
loop
mov
sahf
and
pop
aad
mov
dec
adc
jb
or
scas
pop
jns
cmpb
and
cmp
out
cli
and
adc
mov
ljmp
and
cmpsl
dec
jnp
cmpsb
lcall
mov
cwtl
xchg
sub
jo
lea
mov
dec
sti
je
arpl
xchg
push
aaa
mov
cmc
cltd
shlb
jne
icebp
aam
ja
dec
out
cmp
scas
aam
and
imul
int3
dec
test
loop
jne
sub
xor
jge
outsl
xchg
pop
xor
fcompl
jnp
das
lret
push
jmp
push
rolb
outsl
sub
iret
out
out
fdivrl
cmpsb
rclb
dec
and
cmpsb
ss
sbb
push
imul
jo
and
mov
jle
frstor
lods
xor
mov
cmpsl
mov
or
cli
test
adc
mov
rcll
in
mov
lret
dec
sahf
rorb
jns
test
add
jmp
xchg
inc
ljmp
fisttpl
out
enter
sahf
mov
push
push
mov
out
mov
sbb
xchg
cwtl
int3
mov
sarb
jecxz
and
movsl
jno
in
test
cmpsb
pop
cmp
mov
sti
jecxz
incb
call
dec
iret
xor
es
popf
jnp
mov
daa
xor
jecxz
aam
inc
jo
xchg
es
nop
xchg
icebp
daa
mov
movl
mov
mov
int3
popf
xchg
xor
adc
mov
fdivs
fbld
fndisi(8087
push
ds
ret
lods
push
les
add
mov
cli
push
dec
or
popa
xchg
cmp
lock
scas
pop
gs
mov
hlt
fcompl
mov
test
add
adc
clc
nop
xchg
int
lcall
sbb
ss
imul
jnp
jp
xchg
adc
outsl
fmuls
std
fisubl
out
push
jno
addr16
ljmp
inc
sbbl
ss
iret
pop
mov
rcl
sahf
lret
jne
adc
jnp
bound
push
out
paddw
cmc
sbb
out
mov
aas
pop
xor
fsubrl
loope
fwait
cmp
stc
pop
or
mov
fwait
out
mov
outsb
insl
clc
or
sub
fiadds
cmp
lods
in
fcmovnb
aad
fcmovnu
fdivp
dec
stos
cmp
xor
shlb
or
jle
leave
pop
gs
fnstcw
sbb
xchg
loopne
mov
xabort
js
lret
sbb
loop
pop
sub
popa
dec
in
inc
sub
testl
in
pop
inc
les
mov
mov
jno
mov
sbb
sbb
add
lret
sub
push
xlat
fwait
stc
jne
sti
leave
mov
nop
fs
jmp
stos
xchg
xor
pop
test
adc
addb
mov
xchg
inc
ficomps
mov
fistpl
push
mov
sbb
mov
test
pop
je
js
adc
push
aas
gs
add
pop
push
mov
add
subl
int3
push
es
sbb
cmpsl
mov
sub
sub
xor
mov
jle
test
fidivrs
test
xchg
into
idivl
mov
sub
lods
mov
movsb
nop
mov
stos
mov
fcomps
roll
cmpb
lock
in
dec
fdivp
repnz
adc
jl
mov
loop
mov
gs
out
or
inc
mov
dec
fwait
jecxz
sysret
stc
and
imul
or
out
ss
scas
push
lods
mov
jbe
arpl
fmull
popa
jge
push
adc
fwait
mov
subl
fsub
cmc
xchg
test
std
insb
sbb
mov
mov
shrb
lahf
data16
xor
insb
scas
aad
cld
sbb
and
mov
test
dec
mov
push
cmc
xchg
hlt
jle
das
add
mov
push
ficoms
dec
movsl
insl
ret
imul
imul
roll
out
ds
mov
dec
xor
jne
cmp
dec
daa
dec
es
mov
xor
addl
mov
push
or
xor
pop
sahf
push
std
rorl
xchg
cwtl
addr16
xchg
jl
add
das
inc
push
dec
fwait
cmp
mov
cmpb
lret
jne
xchg
inc
in
mov
adc
xor
andl
outsb
cmc
push
mov
adc
mov
popf
cmpsl
push
bound
cmp
xchg
xchg
rorl
mov
cmpsb
ds
pop
xchg
repz
rorl
test
rolb
dec
addr16
mov
sti
clc
dec
stos
jge
push
mov
data16
rorl
adc
inc
out
int3
jmp
jmp
imul
mov
xchg
popa
frstor
xchg
jl
push
pop
lcall
popa
lahf
add
loopne
lock
into
lret
mov
pop
movsl
mov
pop
iret
daa
lods
sarl
stos
mov
test
xchg
xlat
add
movsb
pop
popf
lods
movsl
dec
inc
fsts
jmp
lcall
ror
out
push
popf
lds
inc
adc
mov
push
sub
mov
inc
adc
mov
pushf
mov
out
mov
xor
sbb
in
in
sbb
shl
or
fwait
in
mov
hlt
js
ret
enter
sbb
push
cltd
stos
mov
pop
shlb
rolb
leave
mulb
push
fistps
lret
data16
outsl
sbb
mulb
fidivs
shll
cmova
je
pop
cwtl
mov
sbb
pop
enter
hlt
and
xor
aam
lds
inc
dec
mov
add
ret
inc
fisttpl
mov
iret
movsb
pop
loopne
mov
scas
shrl
das
shlb
test
mov
push
sub
fistps
aam
fldcw
popf
mov
adc
bound
lret
jo
scas
add
cmc
cmp
repnz
pushf
mov
lods
xlat
mov
orb
jne
jnp
xor
mov
mov
arpl
rorl
iret
mov
inc
lods
in
sarb
add
fidivrl
mov
inc
daa
pop
mov
cmp
aam
cs
and
and
in
rcrl
sbb
jns
xchg
xor
jl
cld
fwait
add
cmp
adc
xchg
adc
pop
das
test
mov
out
aas
imul
sub
notl
mov
sahf
test
inc
stos
jae
inc
push
inc
rorb
fwait
popf
cmp
sbb
dec
test
mov
addr16
sbb
xchg
and
add
dec
mov
adc
add
das
xor
sub
push
adc
adc
test
jg
int
jbe
js
adc
nop
xor
dec
cld
or
sbb
jmp
sub
pop
bound
cmpsb
cs
je
loopne
push
mov
mov
lds
sub
aas
cmp
adc
inc
mov
push
xor
dec
insb
push
in
or
stc
and
sar
push
adc
cmovne
int3
jmp
add
loopne
in
sub
shlb
shlb
outsl
stos
and
sbb
pop
mov
cmp
aas
push
dec
icebp
fwait
or
push
sbb
xchg
pop
sub
dec
jbe
std
adc
aas
jo
xor
add
lods
inc
adc
mov
out
loope
sahf
mov
addb
es
jp
iret
pop
data16
sbb
not
insl
add
cmp
rorl
pop
add
push
aam
and
test
clc
out
loope,pt
sub
dec
mov
mov
loop
mov
adc
or
andb
inc
jmp
xchg
les
inc
mov
rol
movsb
xor
mov
cltd
push
shlb
in
femms
dec
xor
scas
and
scas
pop
sub
clc
bound
dec
xor
pop
mov
add
adc
xor
push
repz
jge
std
inc
ja
push
test
cmp
out
adc
scas
push
cmp
pop
jne
add
xor
cmp
push
mov
cmp
and
decb
push
dec
mov
insb
adc
es
cmp
pushf
xlat
cmp
pushf
sub
cltd
imul
inc
adc
ja
jns
and
sub
lret
dec
rcll
test
mov
inc
fs
sbb
ljmp
sub
test
cli
mov
jne
xchg
shrb
push
sbb
mov
adc
mov
jg
cmpsl
pop
inc
dec
test
lcall
cli
lcall
fdivl
std
ror
xchg
mov
lds
mov
dec
mov
fcomps
dec
addr16
cmc
mov
adc
inc
inc
mov
adc
std
arpl
xchg
fimull
xchg
or
mov
lea
pushf
lret
into
jp
test
shl
mov
jg
cmp
xor
data16
pop
cmp
sbb
sub
pop
lds
fucom
sbb
mov
mov
mov
xor
lahf
popa
lods
jno
sti
inc
xor
enter
xor
je
add
movsb
or
popa
test
fadd
pop
orl
mov
mov
shlb
adc
divb
and
mov
lret
sub
std
ret
aam
inc
xor
ss
pop
lea
sarb
fsubr
dec
pop
and
cmc
fnstsw
jno
xor
loop
jno
dec
out
popf
in
or
int3
sbb
push
into
push
mov
mov
dec
pop
insl
xchg
push
je
out
jne
xchg
push
scas
push
fdivr
sub
mov
lcallw
fistl
loop
jb
lahf
jnp
lcall
mov
jmp
into
mov
sub
ljmp
out
jl
mov
sbb
dec
arpl
fs
loopne
sbb
or
adc
cltd
pop
lock
fs
inc
das
movsl
adc
nop
mov
xchg
fnstcw
jb
rclb
adc
mov
inc
jg
das
cmp
rcl
test
push
xchg
sbb
je
dec
lods
outsl
add
jae
stos
xor
bound
jl
mov
nop
fs
sub
mov
jmp
and
div
xor
xor
inc
inc
ret
in
hlt
inc
push
jae
repz
rol
mov
aaa
xor
les
nop
into
mov
sbb
dec
inc
stos
adc
push
jo
out
add
pop
orl
loopne
call
enter
add
cli
loope
aas
cmpsl
and
popa
arpl
jmp
loope
xchg
inc
pop
sbb
sbb
insl
mov
mov
sbb
lods
xor
bound
jmp
or
out
leave
mov
add
cmpsb
test
out
xchg
movsl
fcoms
inc
jecxz
jp
insb
lcall
lock
clc
adc
push
pop
stc
add
add
cmc
aad
test
pop
shlb
scas
daa
dec
push
mov
pop
jae
pop
aas
mov
cwtl
mov
push
and
cli
xor
push
js
push
push
mov
sbb
sbb
fisubs
push
xchg
int3
dec
dec
push
iret
outsb
out
repz
push
fwait
push
lret
push
jns
sbb
cmp
inc
pop
je
inc
push
cmpsb
mov
je,pt
or
leave
outsb
sahf
sub
xchg
lock
push
xchg
mov
lods
add
xor
gs
and
into
out
aam
and
fucomp
gs
push
cmp
dec
repz
dec
cs
sub
sbb
cmp
sbb
or
divl
xlat
scas
pop
pop
cmp
arpl
leave
push
sub
inc
or
ds
stos
mov
ja
push
cmp
sub
push
ret
cmpsl
cmpsl
adc
push
out
lea
call
cmpsl
sub
push
popa
hlt
aas
and
jb
loope
or
adc
sub
push
xchg
stc
lock
add
xchg
adc
mov
jbe
das
imul
ficompl
addr16
icebp
mov
or
cmp
jecxz
outsb
xor
inc
ljmp
xor
jbe
cmpsb
cmp
xchg
xchg
notl
or
aad
mov
or
pop
add
mov
pop
aas
lahf
jmp
cmp
dec
or
xor
stc
inc
idivl
sti
jne
mov
fldcw
loop
xor
inc
ljmp
lcall
sub
ja
loope
dec
sbb
mov
jecxz
adc
sub
std
call
xor
or
rclb
into
leave
xchg
jnp
sub
push
mov
mov
jge
lcall
rclb
push
cmpsl
lahf
icebp
jo
js
sbb
ss
movsb
in
popf
aad
xchg
push
cs
xlat
movsl
lcall
outsl
lahf
cmp
inc
out
inc
mov
xchg
jb
sbb
arpl
jge
pop
xor
add
dec
leave
sarb
mov
test
gs
mov
xchg
mov
outsb
push
push
orb
fldenv
mov
lcall
push
neg
pop
fsubs
xor
je
xchg
jp
jne
add
div
scas
sbb
popf
pop
clc
rorb
cmpsl
int
scas
out
mov
pop
cmp
add
pop
xchg
fst
jnp
xchg
mov
inc
mov
popa
stos
aam
mov
das
popa
ljmp
add
jb
add
adc
icebp
pop
mov
push
xchg
cltd
and
xchg
pusha
pop
or
leave
stos
xchg
sub
add
popf
sub
mov
mov
mov
daa
jmp
push
add
inc
mov
loope
or
out
sbb
popf
push
into
xlat
push
and
mov
cmp
cmp
pop
cli
ss
sub
rorl
out
cmpsb
push
popa
test
inc
jns
js
mov
mov
and
and
in
push
pop
cmc
mov
cmp
mov
mov
push
imul
int
and
std
jno
xchg
dec
stos
mov
in
addr16
ja
jge
not
xlat
mov
shlb
test
ds
lcall
jp
mov
das
lods
cmpsl
inc
sub
movsb
subl
fiadds
dec
mov
xchg
cmp
inc
into
mov
mov
mov
test
xor
fisubrs
out
outsl
sahf
jns
adc
sbb
xor
push
lods
cld
xchg
sbb
add
lods
adcl
mov
ljmp
or
mov
cmp
xor
out
push
leave
cmpsb
shr
jns
popf
in
xchg
add
rcr
mov
scas
xor
out
push
push
arpl
push
test
movsb
cs
fcompl
add
xchg
pop
pop
adc
mov
pop
push
cmp
cmp
imull
push
stos
test
and
push
cmp
mov
jp
jnp
iret
mov
cli
inc
shll
cmpsb
rdmsr
mov
sbb
sahf
pop
nop
xor
int3
pusha
popl
mov
pusha
sub
dec
lea
lods
pop
inc
sahf
aad
mov
push
jbe
rorl
inc
jle
and
and
inc
inc
outsl
xlat
push
xor
cwtl
mov
mov
out
clc
fwait
xor
fwait
push
stos
nop
jl
repnz
cld
sbbb
sub
mov
cmp
pop
dec
clc
mov
cltd
dec
ret
shll
or
fimull
xchg
mov
aam
iret
pop
jp
fstpt
inc
in
sbb
movsl
ja
ds
cmp
les
pop
sbb
xchg
movsl
xchg
jp
ss
pop
fwait
clc
or
jecxz
pop
xchg
sbb
shrb
shll
sub
mull
add
dec
stos
mov
mov
shlb
cmp
movsb
repnz
cmp
call
pop
dec
and
sbb
stos
xchg
hlt
aam
leave
aaa
xchg
sbb
aas
jl
jge
inc
lods
mov
add
in
mov
push
pop
mov
mov
adc
cmp
outsl
push
jecxz
jmp
lock
cmp
cmp
cli
leave
out
call
shrb
adc
mov
and
dec
fstp
lea
jno
jo
and
xchg
sbb
ljmp
add
or
or
or
pop
in
mov
ficompl
subb
add
push
out
cltd
lods
fnstcw
or
and
cli
mov
aam
push
loop
cmc
sbb
sub
sub
cmp
jg
fisubs
xchg
outsb
push
inc
jmp
cmp
int3
dec
inc
adc
push
jns
add
or
mov
or
fcoms
push
jp
xor
mov
loopne
call
aaa
xor
push
addr16
adc
xchg
pop
cmp
sahf
jmp
gs
mov
adc
sti
hlt
test
cmp
mov
xchg
rcrl
add
sbb
mov
mov
arpl
paddusw
push
in
push
pop
aad
int3
push
push
push
enter
stos
dec
popf
rdtsc
pop
xor
or
xchg
pushf
js
lahf
icebp
movsl
and
imul
aad
aam
xchg
or
mov
sub
les
jmp
dec
adc
push
fisubrs
mov
add
xchg
fsubrs
movsb
mov
bound
jle
repnz
lret
fcompl
pop
cmp
xchg
lcall
pop
xchg
pop
adc
fs
xor
rolb
xchg
scas
movsl
pop
mov
dec
adc
xor
cmpsl
mov
mov
into
xor
icebp
push
xor
jno
mov
cmp
adc
jge
arpl
out
icebp
mov
xchg
cmp
mov
mov
sarb
xor
pop
add
cmp
or
mov
xchg
xor
cmp
in
scas
mov
pushf
mov
jge
ss
ljmp
fistl
jno
int3
pop
inc
sbb
add
daa
jae
xchg
mov
cmpsb
loopne
push
sahf
fbstp
push
in
sahf
fsubs
pop
adc
xor
mov
sbb
es
cli
jo
gs
je
mov
jnp
filds
xor
pop
lahf
andb
cmp
jnp
jno
lcallw
mulb
in
mov
sbb
push
fsubl
xchg
outsl
cmc
pop
pusha
cmp
adc
stos
lods
cwtl
inc
push
stos
inc
rcll
inc
arpl
bound
ret
mov
sub
mov
push
sbb
jns
addr16
nop
in
rcrb
ret
les
mov
inc
adc
nop
iret
cmp
lret
adc
ja
mov
cmp
lahf
jmp
fisubrl
cmp
inc
mov
push
iret
and
add
std
mov
andl
mov
sbb
cmp
pusha
movsl
das
jnp
xchg
add
dec
lods
in
out
mov
cmp
push
jecxz
ret
or
or
jmp
pop
jmp
push
mov
aam
sub
push
fcomp
lds
push
loopne
scas
push
mov
xchg
mov
or
sbb
cli
jge
mov
stc
and
lods
ret
inc
int
fsubl
add
push
icebp
repz
adc
jmp
rorl
gs
cmpb
popf
sub
das
cmp
in
sbb
dec
inc
adc
mov
mov
inc
into
in
push
sub
sub
stc
or
lahf
ss
int3
es
push
popa
push
jnp
inc
test
pop
mov
jo
inc
loop
cmpsb
mov
jns
insb
daa
pop
addr16
fidivrl
sahf
jae
lds
in
jns
cli
lds
mov
add
lret
roll
pop
iret
ja
mov
xor
aad
ss
push
icebp
pusha
dec
jnp
daa
jns
sub
mov
push
add
loop
sub
mov
sub
fistpll
loope
int
xor
mov
ret
stc
xchg
sbb
fwait
shlw
pop
aas
lret
stos
repnz
addl
cmpsl
or
xlat
xor
jne
sub
roll
pop
and
shr
adc
scas
pop
lock
nop
mov
cmp
xor
xchg
clc
sbb
cmp
dec
sbb
and
or
in
or
sbb
mov
and
and
sbb
cmp
cmp
jbe
cmpsb
jg
cmp
pop
aad
std
cmpsb
jl
stos
insb
loope
mov
mov
int3
sub
inc
mov
pushf
or
stc
jns
out
or
aam
inc
inc
shll
jge
mov
arpl
add
imul
into
dec
jno
or
imul
mov
mov
fildll
scas
inc
sub
popf
cmp
dec
popl
repz
shlb
clc
jge
push
and
in
loop
ja
mov
movl
and
sub
mov
adc
xchg
xchg
or
push
push
test
inc
loope
data16
test
out
xor
loopne
pusha
jmp
loope
lds
dec
jmp
pop
adc
add
dec
rorl
clc
div
insl
or
rol
icebp
and
inc
loop
lret
stos
mov
xor
in
inc
aas
push
sets
push
cmp
clc
aaa
inc
mov
fwait
mov
stos
jecxz
fs
push
xor
mov
popa
jl
adc
xlat
fldenv
in
stos
sar
insl
in
scas
fmuls
lahf
jno
jo
xchg
dec
jmp
repnz
ret
inc
sub
push
lock
mov
test
jmp
jno
stos
xchg
leave
imul
dec
lock
std
pusha
jae
leave
xor
pop
inc
mov
movsb
inc
sub
loopne
test
adc
in
adc
add
pop
add
pop
cld
add
jmp
aaa
lods
pop
mov
inc
mov
popf
les
pop
ja
shlb
cmpsl
in
ret
jnp
lea
jb
pop
pop
sub
lods
shl
ret
push
imul
mov
mov
test
subb
popf
mov
fs
push
cli
orl
mov
pop
jl
xchg
cmpl
cli
loopne
popf
inc
fiaddl
jp
insb
adc
ja
mov
inc
loopne
in
adc
pop
loope
testl
in
aam
dec
sbb
jge
imul
or
xor
jg
mulb
sbb
xchg
and
dec
in
inc
fbstp
iret
imul
aas
xchg
mov
mov
shll
jae
in
mov
test
outsl
adc
dec
cmp
pop
test
xchg
mov
jno
pop
pop
push
ja
js
add
jge
xor
mov
loop
jbe
test
inc
ret
rclb
sahf
ret
xchg
sub
sbb
push
sub
popa
cli
jp
popa
sub
ret
stc
lods
aas
shrb
xchg
adc
push
or
scas
add
pop
xlat
inc
inc
cld
iret
xor
xor
movsb
or
pop
push
cmp
lds
les
negb
or
mov
stos
jae
ds
out
arpl
nop
mov
arpl
pop
xlat
add
fs
pop
sub
and
int
loope
dec
push
xchg
js
push
nop
lcall
dec
je
mov
inc
inc
jg,pn
jecxz
sub
pop
jmp
stos
iret
push
cs
and
mov
jo
dec
cmp
hlt
insb
adc
inc
inc
and
pop
in
outsb
pop
clc
pop
ljmp
push
pop
je
add
call
or
push
cmc
aad
sub
call
push
insl
add
or
xchg
pop
popa
outsb
mov
icebp
test
sbb
data16
or
arpl
repnz
dec
movsl
sti
orb
sub
and
pop
fs
lret
andb
mov
fdiv
mov
subl
xor
loopne
insl
sbb
xchg
and
lods
lds
pop
les
dec
sub
add
les
ret
incl
sub
movsl
xor
lea
add
push
and
cli
push
lret
jno
cld
mov
aas
xchg
loope
pop
or
lahf
pusha
jb
jne
jo
jg
push
jg
daa
lret
mov
jns
and
lret
sub
mov
stc
pop
or
sub
repz
test
adc
sti
jmp
mull
aaa
dec
mov
inc
in
pop
pop
jo
cld
sbb
xor
out
fmuls
icebp
scas
or
sahf
xchg
jo
aam
lods
int3
inc
inc
ror
shrb
cmp
js
pop
jmp
inc
test
jecxz
mov
xchg
inc
rcrl
xchg
pop
ljmp
jno
decl
enter
lock
xlat
rolb
shl
fs
cmp
inc
mov
dec
ja
pop
repnz
mov
dec
scas
das
ss
xor
ljmp
ss
sbb
mov
inc
push
pop
std
scas
xchg
fsubrs
lods
loop
cmpsb
adc
movsb
fcmovb
cwtl
cld
or
mov
fmuls
icebp
dec
mov
adc
jmp
mov
sbb
in
jb
inc
mov
repnz
popf
in
dec
add
jmp
dec
dec
in
movsl
scas
mov
subl
repz
shlb
sub
loope
or
test
and
and
add
xchg
xor
xor
jne
jp
rcll
jae
cmp
adc
jb
xor
je
cmp
insl
lahf
lret
mov
leave
js
jb
xlat
addr16
subl
aam
divl
push
jg
jo
stos
data16
lcall
call
lret
mov
xlat
jo
xchg
test
testl
lock
je
out
lret
sbb
dec
xchg
aad
jb
arpl
dec
adc
jo
js
sub
jle
iret
push
jne
dec
dec
or
xchg
pop
add
lds
shlb
rorl
lods
cmp
xor
aad
lahf
scas
mov
xor
int3
lret
push
bound
adc
ret
mov
xor
imul
shlb
loope
cmp
sub
mov
dec
enter
mov
icebp
push
mov
stos
fistps
add
cld
fs
rorb
mov
dec
ficoml
mov
jns
clc
in
scas
leave
mov
dec
pop
cmpsl
mov
sbb
pop
rorl
cwtl
out
push
movsb
mov
cmp
add
inc
sub
lcall
add
mov
fbld
jmp
add
out
out
or
outsl
sbb
lcall
mov
or
push
xor
in
aam
aaa
shrl
nop
data16
test
xor
cmpsb
stos
les
mov
push
pop
shr
ljmp
xchg
test
mov
gs
sub
enter
testl
repz
xor
daa
in
xor
jg
jno
add
test
stos
imul
jae
push
sub
push
insl
inc
add
in
adc
xor
dec
fists
sub
rorl
jg
mov
pop
fnstenv
out
fcmovbe
hlt
mov
xor
sub
sub
xchg
dec
cmc
xchg
adcb
addr16
cmp
addr16
mov
popa
imul
jne
cmp
push
fidivrl
push
or
cmp
adc
xor
enter
stos
shlb
das
out
lret
mov
in
and
add
pinsrw
lret
inc
aad
iret
cmp
sub
decb
out
pusha
iret
xchg
icebp
lea
das
mov
mov
or
push
leave
call
cmpsb
adc
add
lcall
shlb
mov
jg
or
or
dec
push
jbe
imul
sbb
mov
inc
iret
mov
mov
lods
push
mov
jnp
and
jae
pop
jmp
movsb
arpl
lea
addr16
mov
test
jl
lods
out
ret
fdivrs
rcll
lcall
pop
sub
add
jmp
xchg
jb
sti
mov
mov
sub
iret
mov
loop
cmp
outsl
popf
pop
ffree
orb
sahf
push
int3
push
push
cmp
push
jecxz
out
mov
cmp
inc
sub
jne
stos
sarl
inc
cs
sarb
dec
clc
jns
rorl
push
and
loope
ret
cmp
dec
inc
push
mov
push
shufps
es
mov
mov
xchg
insb
cmp
jecxz
sbb
lret
mov
pop
adc
hlt
sbb
and
pop
mov
jno
testb
jae
js
sub
scas
pop
movb
push
xchg
lret
mov
add
popa
lods
mov
into
daa
adc
fcmovu
pop
pop
loope
rcrb
jno
cli
clc
lods
and
pop
in
ljmp
sub
cwtl
push
test
jp
pop
test
pop
sub
lcall
mov
dec
sar
sub
cmp
dec
jl,pn
bound
dec
push
hlt
popf
cmp
lcall
inc
in
lcall
or
xchg
ret
inc
lods
cltd
dec
testl
mov
mov
cli
cmp
adcl
sbb
iret
jbe
mov
mov
scas
dec
xchg
lods
imul
jae
test
cmp
and
mov
push
lret
pusha
cmp
icebp
pushf
cmp
sub
xchg
int3
jnp
lods
pushf
jnp
scas
cmp
mov
pop
stos
imul
ss
or
je
cmp
dec
inc
jle
xlat
insb
lods
sub
lcall
push
or
xchg
insl
imul
lcall
mull
cld
adcb
sbb
cmp
and
imul
adc
jl
and
inc
xchg
mov
nop
mov
push
xchg
add
mov
mov
xchg
push
popf
in
dec
inc
jg
rcrl
cld
test
cmpsb
stos
dec
repnz
dec
inc
mov
or
mov
or
pop
mov
clc
pushf
add
js
es
or
aad
inc
icebp
pusha
pusha
mov
mov
xor
es
divb
je
clc
lret
and
cmp
and
mov
int
dec
lret
and
jne
and
dec
sub
out
mov
jmp
add
outsb
aaa
xor
cld
adc
jnp
pop
out
mov
mov
mov
iret
mov
out
shr
and
xchg
cli
fcomp
xor
sub
leave
cltd
pop
cmpsb
nop
sbb
xchg
fdivs
mov
sub
cmc
add
test
leave
lods
add
cmp
jg
and
cmp
lret
xchg
xchg
pop
fcoml
movl
addb
sub
push
outsb
stos
or
mov
sub
fsub
jle
bnd
rorl
inc
mov
daa
icebp
xor
or
mov
loope
cmp
mov
nop
int
sub
jae
sub
inc
stos
ret
into
push
xchg
jmp
mov
jge
jecxz
lods
testb
jp
mov
scas
popf
cmp
sub
jb
and
pop
mov
and
push
cmp
push
out
imul
rolb
dec
stos
inc
dec
fistpl
inc
hlt
mov
pop
add
lods
mov
aam
jne
lods
pushl
sarb
inc
xchg
lcall
mov
or
push
mov
inc
fistl
imul
jmp
call
and
pop
add
rcrb
push
mov
int
sahf
sub
cwtl
mov
test
fnstsw
shrl
xchg
jno
stos
shrl
sbb
add
les
pop
dec
sbb
in
mov
push
xor
xor
adc
scas
movsl
dec
add
imul
push
xchg
fcoms
sub
test
movsl
and
jp
push
pop
test
xchg
aaa
loope
add
sbb
leave
test
xchg
jmp
xchg
testb
lret
imul
je
cs
jmp
scas
ret
inc
shrl
and
add
mov
jo
mov
clc
sbb
jmp
hlt
fbld
jo
push
rcl
and
stos
jb
sahf
into
dec
dec
push
sbb
jl
cli
in
nop
gs
jb
movsb
aas
fs
or
lods
inc
mov
sub
fwait
inc
sbb
mulb
stos
mov
xchg
push
or
push
mov
mov
idivb
hlt
dec
push
xchg
sbb
aam
icebp
cmp
ljmp
jns
dec
mov
jmp
popf
push
pop
mov
aas
sbb
mov
scas
fisttpl
or
shlb
mov
sbb
mov
outsb
scas
dec
insb
out
sbb
jno
cmp
aaa
fdivs
jbe
dec
or
pusha
sub
aam
idivb
xor
dec
sub
popf
dec
and
mov
loope
shrl
cmp
adc
jb
call
sbb
stc
mov
mov
sub
lret
xchg
dec
mov
jb
mov
sbb
xor
adc
out
fcomi
mov
out
mov
mov
jnp
xchg
ret
cld
or
cmp
inc
mov
xchg
stos
shr
in
ja
or
xchg
in
jl
xchg
xchg
mov
cmpb
jne
adc
jg
cmp
arpl
hlt
pop
clc
mov
pop
xlat
insl
out
rcll
arpl
insb
int
add
xor
jb
test
sub
ljmp
les
jnp
jg
add
and
xchg
stc
fdivr
mov
jl
out
sbb
cmp
push
add
and
adc
iret
loop
push
or
or
xor
sbb
int
pop
mov
mov
sub
rcr
xor
into
adc
shrl
dec
inc
fstps
xchg
sub
mov
or
jmp
jbe
lcall
sbb
fstpl
cs
mov
lods
mov
or
frstor
jp
fwait
push
pop
push
adcb
cmc
mov
loopne
lret
stos
lods
icebp
jecxz
xor
std
fdivr
ljmp
fdivrs
cli
popa
shrl
movsb
jo
xchg
xor
inc
adc
leave
jecxz
inc
enter
sbb
in
sub
repz
lahf
xchg
cmp
or
ds
mov
scas
test
cmp
add
negb
lcall
sti
push
ss
test
mov
aam
pop
mov
push
jb
out
cld
movsb
jae
xchg
xchg
sti
les
outsb
gs
mov
cmpl
nop
stos
enter
outsl
mov
mov
icebp
cmp
and
dec
adc
ret
adc
aaa
push
mov
mov
sahf
and
mov
adc
xchg
mov
or
mov
movsl
xor
sarb
dec
and
mov
mov
ds
inc
aad
ljmp
aaa
xchg
sbb
clc
jns
imul
jae
lret
dec
sti
pop
fmulp
mov
cltd
repz
sbbl
dec
shlb
jmp
cltd
outsb
in
loopne
inc
xchg
pop
fdivs
leave
repnz
cld
outsb
sbb
jns
xlat
out
subl
aam
insl
insl
push
cmc
adc
add
cmpsl
jne
jnp
and
fdivl
enter
in
dec
into
pop
push
insb
scas
aad
int
mov
fsubrl
mov
cmp
inc
fcoml
ljmp
mov
sub
stc
mov
stc
or
mov
or
in
xchg
sbb
dec
xchg
roll
insb
int
lds
lods
inc
iret
dec
cmp
outsb
pop
dec
mov
addb
ret
pop
dec
mov
out
scas
xlat
sti
je
shl
inc
outsb
dec
push
sub
jmp
cld
add
movsb
add
addr16
mov
lds
rcll
mov
stos
sub
mov
leave
mov
mov
xchg
add
nop
out
dec
sbb
rcrb
sub
pushf
xchg
or
jne
movsb
shlb
adc
and
adc
data16
test
mov
xchg
loope
push
insb
jecxz
xchg
pop
inc
xchg
mov
inc
into
nop
aam
fnstenv
inc
ret
push
cmpsl
adc
dec
int3
in
and
fldt
cmp
push
and
movsl
or
mov
rcrl
xchg
lretw
xlat
xchg
mov
sub
jns
addr16
push
ja
push
pusha
cmpsl
das
pop
jno
adc
mov
not
dec
in
xor
das
fdivl
mov
into
add
fdivrs
pop
push
sbb
inc
adc
adc
pop
adc
fiaddl
les
add
sahf
mov
xchg
ficompl
cwtl
dec
mov
nop
cmp
je
cwtl
out
inc
add
mov
jmp
cmp
xor
test
add
js
insb
push
mov
movsl
sbb
xchg
pop
sbb
mov
add
jae
insb
fs
jmp
lods
jbe
pushf
js
es
fwait
add
stc
loope
push
fcmovu
jecxz
adc
cs
add
and
cli
xorl
sub
and
neg
xorb
shrl
fs
data16
ds
inc
push
and
cmp
pop
lret
push
mov
xchg
inc
push
or
and
xor
shr
fs
push
movsl
pop
inc
mov
mov
xorb
mov
int
pop
xchg
adc
mov
jno
mov
arpl
popa
pop
out
idivb
push
inc
cld
push
dec
sbb
pop
subl
int
mov
hlt
das
dec
mov
test
lcall
or
xorb
cltd
lds
test
mov
dec
ret
cmp
or
mov
jno
sarl
mov
mov
fsubr
in
ds
xor
stos
lods
inc
fstp
push
or
test
cmpsl
emms
loop
or
movsb
jnp
xchg
adc
fxch
mov
popa
es
popf
stos
mov
into
ret
ret
gs
push
adc
mul
and
sub
dec
mov
inc
lcall
jns
sbb
push
add
shrl
movsl
xchg
fisubrs
insb
roll
pop
insb
test
movb
pop
mov
fidivrs
jno
pusha
jno
insb
repz
cwtl
xor
add
inc
fwait
out
aas
mov
xchg
shlb
mov
hlt
push
push
enter
cmp
lret
je
push
adc
pop
outsb
js
sbb
jae
pop
xor
xor
sub
adc
ret
jecxz
jo
mov
jo
outsl
lock
lret
insl
pop
xchg
xchg
dec
test
ficomps
xor
sbb
add
xor
mov
sub
and
std
leave
out
push
stos
xchg
rcll
loopne
pop
psubsb
sbb
mov
in
lods
adc
lds
fdivrl
pop
sbb
sub
mov
pusha
inc
jle
add
dec
xchg
lret
data16
call
pushf
mov
loopne
dec
jl
jo
add
xor
ds
popw
mov
jmp
cwtl
lea
stos
pop
test
aaa
cmp
mov
out
jle
mov
push
decl
mov
jle
mov
sbb
jle
push
addr16
gs
mov
mov
hlt
movsl
inc
in
loop,pt
pusha
xor
imul
xor
test
out
mov
jnp
movsb
pusha
dec
aaa
adc
aad
sub
lea
mov
stc
std
sbb
push
cmc
mov
jae
inc
xchg
sbb
pusha
sbb
out
jg
or
mov
dec
popa
xchg
mov
adc
cmp
mov
lods
fldt
fcompl
xchg
xor
mov
bound
cld
sbb
fnstenv
xlat
lods
pop
stos
inc
stos
dec
fmull
inc
sbb
jmp
xchg
mov
rcrl
jbe
jg
xchg
movb
insl
sub
adc
pop
xor
add
sbb
sbb
fwait
add
xchg
outsb
push
inc
mov
or
pusha
popa
sub
adc
or
out
push
mov
xchg
imul
xor
sbb
xchg
add
fadd
xor
jbe
jp
cmp
aad
popa
push
sti
and
add
das
xchg
daa
testl
push
and
mov
stos
mov
idivl
fadds
jecxz
jg
add
xchg
lods
ds
and
std
add
xchg
fisubl
aad
mov
cld
xchg
into
lcall
xchg
sbb
cmpsl
lods
add
rorb
fnsave
call
jg
adc
pop
test
pop
jge
fucom
test
add
sub
inc
mov
mov
mov
sub
pop
mov
jl
popa
dec
sub
lahf
stos
imulb
in
sbb
jae
sbb
fidivrs
inc
inc
std
sbb
mov
dec
iret
dec
jle
stos
aaa
stc
dec
loopne
or
push
shlb
push
pushf
or
pop
mov
test
stos
xchg
dec
push
out
xchg
cmp
jns
icebp
jno
jno
cld
add
pop
jmp
xchg
mov
push
fdivs
mov
call
push
sbb
inc
in
pop
and
sti
mov
gs
in
push
cmp
sbb
push
push
and
jecxz
cmpsl
push
inc
outsl
sbb
pop
jge
nop
insl
lock
mov
and
xor
xchg
lahf
jns
das
call
addb
int3
and
gs
fucomi
in
fcoml
xlat
dec
mov
inc
addr16
imul
das
push
andb
and
add
sbb
mov
int
das
lods
mov
or
adc
push
mov
mov
mov
repnz
std
or
iret
pop
ljmp
fsubrs
fbstp
mov
cmp
pop
mov
dec
jnp
push
scas
arpl
mov
loope
roll
xorl
popf
sbb
stc
lahf
lcall
test
mov
int3
negb
fwait
push
sbb
push
mov
dec
adc
sbb
gs
jbe
xor
mov
iret
xchg
cwtl
test
icebp
sbb
jg
pop
dec
cs
in
repz
fcmove
fldenv
jmp
lods
out
fsub
jae
pop
sbbb
push
add
sub
or
mov
mov
cltd
gs
cld
je
xchg
repz
mov
fsubrs
ss
mov
mov
sub
mov
sbb
stos
in
add
mov
pop
or
repnz
pop
dec
cmp
lahf
add
and
xchg
jl
cmp
cmp
mov
sbb
lods
jecxz
add
and
jnp
mov
fs
iret
sbb
int
notl
int
adcb
hlt
sub
xchg
lea
mov
jmp
dec
inc
cmp
negb
push
mov
xor
dec
jne
sub
pop
xor
mov
rorl
cmp
out
mov
jecxz
sar
jo
cmp
pusha
xor
imul
add
aas
sahf
dec
addr16
push
sub
hlt
rcr
repnz
aam
push
inc
dec
cs
jge
sbb
push
negb
inc
mov
ljmp
aas
inc
dec
orl
mov
imul
inc
lahf
jl
pop
or
jnp
add
dec
outsb
stos
ljmp
mov
ret
ss
test
jbe
das
cmp
lods
stos
fldt
iret
xor
outsb
insb
jae
xor
or
mov
xor
jge
cwtl
lods
ja
cmp
popa
xor
cld
pushf
aas
mov
dec
jecxz
movb
jno
push
jne
int
jmp
sub
mov
lret
cmovp
sub
pop
xor
test
cld
lds
mov
and
mov
test
in
jl
test
sbb
fcom
mov
xor
xor
xchg
pop
cmp
mov
shll
das
adc
mov
sarl
loop
dec
loop
in
int3
notb
sbb
popf
lret
pop
mov
sub
and
mov
pop
out
outsb
les
jle
mov
cmc
xchg
adc
es
xor
add
pop
adc
jmp
in
xchg
lods
mov
mov
int
push
movsb
sbb
adc
pop
insl
cli
inc
mov
sbb
stc
loopne
stc
jle
sbb
cwtl
mov
jl
push
pop
adc
inc
sub
fs
in
push
xchg
stos
add
popf
incl
jmp
jbe
iret
xlat
jp
xor
push
daa
xchg
ja
ds
mov
jno
movsb
sti
sub
jmp
jnp
ljmp
push
push
push
daa
adc
and
insb
or
push
int3
sbb
inc
sahf
je
std
xchg
dec
aam
addl
pop
mov
mov
mov
push
sahf
inc
push
fstps
mov
push
mov
dec
pop
mov
lock
call
xchg
pop
pop
adc
and
iret
iret
lret
xor
stc
dec
loope
inc
mov
mov
xchg
ss
push
push
arpl
outsl
cmp
minps
idivl
divl
cmc
fildll
inc
xor
xchg
jb
inc
fnstcw
add
sbb
cmp
push
push
enter
add
vpxor
fs
xchg
and
sub
out
loope
xlat
inc
cmpsb
shll
stc
push
sub
in
pop
int3
xorb
pushl
cmp
jmp
mov
xchg
xchg
call
jecxz
mov
loope
loop
pop
stc
inc
js
jnp
jnp
mov
pop
rorb
mov
mov
dec
repz
sub
dec
lahf
add
add
jp
and
aam
jnp
je
jl
sbb
mov
outsb
push
mov
xchg
mov
mov
sub
cltd
mov
inc
rcr
fsubl
cmp
cmp
lds
outsb
mov
inc
inc
push
jp
lahf
add
lcall
add
aad
ljmp
sbb
jl
test
aas
mov
push
xchg
xchg
fwait
iret
incb
and
fdivr
push
lret
add
jae
sub
fsubrl
adc
adc
imul
outsl
andl
push
lret
mov
xchg
loop
jle
mov
fsubrl
sbb
push
aas
aaa
cli
sub
xchg
fisttpl
movsb
ret
lock
into
pop
outsb
sbb
xor
pop
ljmp
inc
aaa
dec
mov
cmc
repnz
xor
lds
xor
or
xchg
je
movsb
in
push
ljmp
or
sub
mov
call
dec
jb
cld
push
push
enter
pop
xchg
sbb
sbb
out
adc
aad
add
sbb
setp
fsubrp
fmuls
mov
stos
shll
sub
dec
push
ljmp
adc
in
mov
push
mov
inc
rcl
popa
inc
stc
pop
adc
addr16
bound
lods
jno
fucomip
imul
popf
mov
mov
in
pop
imul
sbb
pusha
stos
add
fdivr
test
in
sub
mov
cmpsl
in
aaa
out
insb
xor
xchg
int
int
mov
fildll
xchg
cmp
aam
insl
xor
cmc
mov
inc
out
mov
es
sub
inc
pop
xor
xchg
faddl
ret
or
add
jae
push
lock
int3
aas
mov
push
cmpsl
imul
dec
cmc
pop
xor
cmp
mov
ds
out
sbb
sbb
jne
mov
dec
fsubrs
inc
cmp
pushf
add
jp
es
pop
shll
into
cmp
xorb
jnp
xchg
cmp
test
aas
adc
jg
pop
lods
pop
sub
stc
fstps
lea
adc
mov
adc
ds
inc
shr
or
cmp
push
subl
inc
mov
jae
adc
es
jbe
jbe
aaa
aaa
fdiv
pop
cwtl
cmp
mov
pop
es
out
call
stc
add
xor
or
gs
sbb
xor
in
push
xchg
mov
cmp
dec
inc
in
mov
mov
cmpsl
inc
lds
jns
mov
jmp
or
mov
xor
repnz
dec
lds
xor
in
fistps
pop
rclb
std
clc
dec
push
ljmp
popf
cmp
adc
enter
cmpl
push
inc
sub
rorl
cmp
cwtl
xor
dec
rclb
dec
out
mov
xchg
mov
mov
testb
scas
adcb
mov
imul
jae
pushf
sarb
xchg
cmp
xchg
push
repz
into
jnp
push
sbb
stos
xchg
mov
pop
dec
mov
inc
stc
inc
fs
push
fcmovbe
xchg
mov
add
sbb
loope
enter
inc
ds
xchg
jecxz
mov
pop
mov
xlat
or
push
push
call
sbb
and
jbe
fistl
xchg
inc
mov
ret
cmp
adc
mov
mov
lds
xor
repnz
jns
scas
cwtl
cltd
pop
dec
mov
rclb
mov
lret
frstor
out
xchg
jp
add
gs
jns
ja
sub
aas
xor
test
imul
mov
call
ret
and
push
popa
dec
dec
sbb
inc
out
arpl
punpcklbw
cmc
and
orl
lahf
pop
fcmovnb
mov
popa
cwtl
inc
adc
jecxz
push
push
test
fwait
or
in
mov
iret
movsl
lea
loope
adc
inc
int
mov
jbe
mov
dec
pop
repz
mov
dec
ds
inc
add
inc
and
xchg
add
or
test
pop
inc
mov
inc
xchg
lret
cmp
xchg
pushf
xchg
pop
mov
dec
ret
jb
ficomps
and
push
adc
nop
ss
push
push
aad
inc
rcrb
pop
test
pop
mov
dec
fs
mov
test
push
jb
sub
sbb
mov
xchg
adc
out
pop
dec
les
add
movsl
jge
push
cli
dec
pop
inc
test
push
call
pop
xchg
jb
scas
jne
es
xchg
sub
lret
out
jmp
adc
mov
sbb
xor
repnz
push
ret
xchg
mov
faddl
mov
add
out
ret
pop
das
xchg
adc
sub
mov
and
pop
cmp
push
adc
pop
mov
imul
or
cmp
es
fisttpl
inc
ret
jp
stos
popf
std
or
jmp
xor
bound
sbb
mov
in
adc
jb
orl
pop
pop
adc
dec
cmp
iret
fstl
idivb
xlat
pop
movsl
rcrb
bound
scas
xchg
cmp
inc
daa
in
cmp
in
dec
sub
out
iret
insl
inc
jae
xor
inc
jae
xor
pop
std
xchg
xchg
dec
fstpt
push
dec
inc
shl
dec
repz
push
test
xchg
and
mov
loopne
mov
lds
icebp
daa
cli
iret
add
in
add
lcall
adc
jae
pop
jge,pn
sbb
test
adc
leave
mov
or
das
push
or
inc
test
push
cmp
xchg
adc
cmp
add
mov
inc
popa
add
scas
and
fwait
cmp
leave
jecxz
lods
or
lock
inc
adc
sub
lcall
mov
aaa
fs
aam
outsl
lds
jb
adc
decb
ret
leave
shrb
outsb
dec
fwait
push
lahf
leave
mov
sub
ret
xor
xchg
or
les
jae
mov
bound
mov
mov
add
lods
sub
decl
push
mov
push
and
fcmovb
xchg
scas
test
gs
fldcw
lea
push
in
out
out
int3
ljmp
and
xchg
pop
push
jae
jle
inc
lret
pushf
out
mov
jb
ss
mov
xchg
pop
aam
pop
cwtl
push
scas
scas
jae
jg
pop
and
inc
inc
pop
push
ds
inc
lds
js
lds
xchg
mov
clc
xor
add
ljmp
ds
lcall
jmp
addr16
dec
insl
push
xor
inc
mov
call
sti
mov
rcrl
test
in
xchg
pushl
hlt
jae
push
mov
sarb
and
jo
pop
sub
outsb
imul
sbb
pop
sub
imul
mov
mov
push
call
inc
fadd
ds
push
adcb
sbb
aad
imul
pop
fnstenv
or
ret
pop
xchg
leave
or
dec
or
es
push
inc
sahf
pop
mov
fisubrs
mov
mov
or
jle
ljmp
data16
xor
mov
aaa
dec
mov
dec
push
push
or
insl
addr16
and
xor
fildll
mov
daa
ficomps
cmpsb
push
lds
pop
popf
mov
into
nop
mov
or
adc
xchg
lret
push
dec
les
ret
sti
inc
jns
call
cmpsl
pop
jo
into
adc
dec
popl
ret
adc
clc
pop
xchg
std
insb
jge
pop
hlt
push
cli
push
sti
das
or
push
ret
sahf
jge
dec
mov
scas
push
nop
jno
mov
js
pop
inc
mov
js
movl
cmpsb
mov
insl
adc
jp
sub
ret
lret
xchg
dec
push
sub
push
fmuls
mov
fcoml
ficompl
aaa
pop
hlt
jp
xchg
adc
aad
lea
push
mov
mov
add
sbb
and
adc
mov
push
cltd
pop
mov
sub
loope
mov
sbb
mov
jae
sbb
pop
push
and
and
mov
jmp
xor
cs
es
lds
mov
cltd
xchg
fldl
jmp
mull
lods
mov
xor
ss
aas
push
shr
pop
repnz
int
adc
int3
sub
out
in
mov
pusha
sub
or
mov
mov
cmp
rcr
and
lahf
cmc
ffree
lret
mov
dec
add
call
jb
mov
xor
ljmp
std
sti
test
fldenv
dec
sbb
push
popf
test
pop
sbb
add
push
cmpsb
xchg
mov
mov
adc
repz
or
cmc
xchg
lods
dec
lods
or
mov
inc
addr16
test
ss
loop
mov
mov
lcall
inc
adc
dec
ret
mov
push
mov
inc
dec
push
pop
jb
add
mov
add
mov
sub
leave
ret
icebp
popa
imul
pop
sbb
xchg
lea
jg
int
stos
or
inc
movsb
jl
fidivl
jle
cmp
add
in
adc
cmp
stos
mov
xchg
sbb
mov
rclb
dec
jg
mov
sti
jmp
push
inc
ss
adc
das
jae
fwait
xor
pop
ja
stos
mov
sbbb
jbe
xor
jle
and
mov
dec
adc
insl
jg
jae
mov
ret
cmp
ret
pop
pop
or
arpl
jb
fstpl
inc
popf
push
push
cmp
pop
and
jbe
int
add
decl
push
mov
shlb
es
mov
scas
cmpsb
sar
pop
jns
sub
test
lods
xorl
mov
test
jp
dec
sbb
jnp
sbb
mov
push
xchg
add
scas
daa
stos
mov
hlt
in
jle
mov
add
movsl
xor
mov
in
mov
lock
dec
repnz
pop
mov
sbb
xlat
cwtl
push
movb
xor
and
inc
lret
mov
inc
add
xchg
mov
adc
daa
orb
dec
jbe
pop
aas
xchg
imul
and
je
add
call
scas
or
mov
stos
lea
inc
jne
shll
push
testl
aad
sbb
testl
adc
lds
shll
sub
pop
pop
and
mov
sub
mov
xor
sub
jg
gs
xchg
sbb
popa
divb
and
cmpsb
fwait
cmpl
inc
and
pop
shrb
fs
or
pop
xchg
dec
stc
and
cmpb
xchg
adc
je
in
sub
inc
cwtl
and
dec
clc
xchg
inc
xor
daa
icebp
insb
int3
mov
test
xor
cmpsl
pop
addr16
jb
mull
icebp
or
lds
pop
leave
scas
aam
loopne
mov
or
stos
sarb
inc
imul
jge
andb
mov
cmp
lock
mov
sbb
lea
add
popa
mov
leave
mov
push
push
sub
or
pop
stos
jl
fiadds
dec
nop
push
inc
xchg
mov
xor
pop
shll
movsb
aaa
setne
add
xchg
pushf
iret
aam
incl
lahf
mov
jb
xchg
pop
fisubl
adc
std
daa
mov
mov
mov
shlb
inc
sar
push
cmp
cmp
lods
mov
push
arpl
xor
addr16
clc
lods
pop
cmpsl
stos
faddp
push
or
scas
mov
adc
fs
iret
repz
or
or
fisttpll
and
adc
xor
arpl
cmp
jnp
bound
cmc
test
aad
and
pusha
test
rcrb
cwtl
int3
cmp
mov
jnp
jae
fildll
xlat
mov
ret
stos
pop
mov
sbb
push
push
stos
jg
pop
call
xchg
inc
cltd
mov
arpl
jo
inc
lods
push
sub
dec
rolb
in
pop
push
sub
xchg
andb
lea
call
pop
into
dec
push
divb
jnp
add
shlb
or
iret
lock
les
push
xchg
sbb
je
addr16
xor
xchg
out
sbb
shll
push
and
add
xchg
daa
out
mov
fwait
ret
cli
cmp
fidivl
cmpl
or
outsl
jecxz
ror
mov
mov
mov
cmpsl
mov
sub
mov
imul
out
mov
std
sarb
mov
jecxz
inc
push
cltd
or
inc
sbb
jl
test
inc
sbb
or
loope
sbb
xlat
mov
rcll
filds
scas
into
lea
cltd
push
xchg
inc
loop
movsl
and
mov
xor
push
fwait
jle
and
fnstenv
loope
gs
icebp
mov
xchg
xchg
fidivs
ret
pop
and
loopne
cmp
sbb
pop
xor
jns
jnp
xor
xchg
rclb
mov
les
inc
nop
adc
add
lods
dec
jnp
jnp
jae
arpl
scas
in
mov
pop
push
cmp
cmp
dec
jg
or
sbb
call
xchg
add
sub
stos
dec
imul
fnstsw
ret
stc
push
in
shlb
jle
aaa
iret
pop
and
pop
push
js
mov
fcoml
insb
adc
cmpsl
icebp
lret
mov
nop
sub
cmp
aam
fisubrs
mov
test
in
in
mov
and
dec
imul
fs
inc
or
add
out
mov
dec
sub
pop
xchg
cmp
mov
insl
adc
jl
fnsave
cmp
pop
jmp
in
out
popa
stos
stos
fdivrl
shrb
bound
xor
sbb
fstpt
test
in
clc
in
out
jnp
cmp
push
pop
outsl
outsl
pushf
lea
jmp
cli
mov
sbb
xchg
pop
mov
xchg
scas
sbb
jmp
mov
cmp
flds
xchg
cltd
xchg
adc
test
push
ffree
pushf
ret
add
push
inc
dec
mov
sahf
das
push
test
jle
ljmp
add
jg
loopne
jns
xlat
gs
jp
sbb
sbb
fimull
cwtl
cs
rclb
or
sti
push
pop
cmp
jmp
jl
in
pop
or
inc
jb
jo
das
gs
cmc
adc
ret
mov
jne
out
test
jae
arpl
sub
dec
shld
popf
lds
mov
sbb
callw
cmp
mov
popa
adc
cmovge
mov
test
and
imull
dec
dec
xchg
aam
movsl
divl
sahf
push
fdiv
out
pop
and
sub
lea
adc
or
cmp
hlt
movsl
jp
pop
inc
sahf
mov
popa
lahf
dec
or
add
pop
jbe
aam
xchg
data16
and
and
cmp
stc
pop
ljmp
xor
ss
pop
sub
sub
sti
cmp
and
mov
push
sbb
mov
dec
in
and
pop
cmp
scas
sbb
bound
pop
mov
push
add
add
cld
ficoms
loopne
jle
sub
cmp
int3
push
xor
test
add
out
out
incb
in
dec
dec
aaa
lds
pop
mov
in
mov
stos
inc
lret
or
or
repz
jnp
in
pop
inc
jns
out
out
int
push
push
movsl
sbb
iret
mov
mov
xchg
inc
mov
insb
xor
push
push
repz
addr16
fcoml
out
xchg
mov
push
inc
jns
dec
push
in
repz
xchg
adc
adc
add
sub
push
pop
fistl
jge
mov
loope
adc
sub
shl
pushf
sub
push
mov
or
cmp
or
dec
or
movsl
outsl
divl
or
into
jmp
int
aas
cmpsl
shlb
push
lret
ret
movsl
sbb
rcl
in
push
loop
scas
push
xor
cmp
adc
and
into
cs
cmp
cmp
fiaddl
push
scas
cwtl
or
hlt
std
enter
push
sbb
inc
in
bound
movsl
push
inc
repz
adc
dec
sub
ret
and
sarl
mov
sub
imul
push
and
fwait
mov
scas
mov
xchg
cld
xorb
xlat
jp
ja
jp
mov
pusha
shll
and
into
hlt
cmp
rol
add
cmc
stos
orb
repnz
stos
call
orb
outsb
andb
movsb
add
cs
xchg
dec
inc
test
pop
decb
pop
push
jl
mov
sahf
push
mov
addr16
cmp
add
push
shlb
scas
sahf
pop
bound
in
out
test
xlat
xchg
leave
stos
pop
inc
pop
mov
repz
xlat
enterw
jbe
sub
sbb
mov
and
popf
sbb
xor
jg
cmp
addr16
scas
and
mov
pop
jnp
pop
mov
movsb
arpl
dec
int3
push
sbb
rclb
jb
iret
cmp
mov
pop
nop
ds
push
ds
std
add
stos
dec
pop
mov
call
sub
cli
lods
adc
jmp
inc
fisubl
or
mov
mov
dec
aas
fucomp
pop
xchg
in
aaa
jp
cltd
movsb
inc
sub
insb
gs
jge
nopl
mov
mov
lock
mov
jo
jmp
gs
mov
cmp
sti
cmp
pop
or
mov
test
mov
mov
fstl
clc
lods
js
sbb
test
mov
fxch
cmp
mov
jb
and
lahf
jp
jle
in
xor
daa
testl
shl
xorb
jg
mov
adc
cmp
arpl
scas
add
inc
mov
popa
lcall
push
mov
gs
test
sti
out
ss
jmp
addr16
lods
inc
call
pop
int3
xchg
adc
mov
mov
cmc
data16
cmp
ljmp
fistl
stos
and
int
mov
imul
fsubs
sahf
das
jae
pop
cs
dec
mov
bnd
xlat
cmpl
int3
je
insb
push
inc
mov
shll
and
shll
or
pop
fildl
or
add
lea
in
fldenv
lock
jmp
inc
addl
adc
out
xor
adc
push
jns
push
mov
out
cmpsl
in
shrl
xor
mov
lods
push
cs
in
mul
clc
and
push
push
jns
aad
lcall
cmp
adc
or
mov
sbb
dec
pop
push
into
lods
or
shrl
pop
adcl
pop
sub
sbb
ret
mov
jo
data16
mov
roll
mov
pop
mov
test
cli
dec
pop
lahf
aam
fstpl
scas
jecxz
inc
or
xchg
pop
cmpsl
popf
add
add
inc
dec
fsubrl
stos
and
cmp
repnz
lea
add
in
jge
push
dec
mov
negl
pop
lret
xor
ljmp
sub
push
push
mov
pop
ds
es
movsl
adc
mov
xor
pusha
sub
icebp
insl
push
mov
pop
adc
jl
jno
lcall
idivb
lods
xorb
lds
shlb
das
xor
jne
js
and
shlb
mov
inc
and
mov
idivl
test
rolb
cld
xchg
xchg
out
in
add
stos
xchg
je
and
jecxz
adc
add
in
cmpb
add
lret
int3
pop
imul
ret
pop
jnp
mov
xchg
pop
dec
je
jnp
andb
or
push
push
data16
mov
xor
xor
cmp
adc
dec
pop
sub
pop
mov
sbb
movsl
leave
jae
insb
jns
push
jnp
cmp
inc
insb
jg
fsub
push
adc
into
jne
add
inc
gs
xchg
aad
jmp
jae
aas
mov
sbb
hlt
popa
add
xchg
rcrl
pop
dec
clc
xor
cmp
les
mov
nop
in
fstpl
inc
add
jl
cmc
ja
jns
jb
jb
je
lahf
std
test
cmp
mov
pop
cmp
hlt
fidivrs
and
ljmp
cld
add
jae
js
les
rep
out
xor
movsl
jns
mov
in
inc
int
stos
pop
outsl
dec
lods
add
scas
gs
jae
mov
pop
push
inc
sar
mov
mov
shl
cmpsl
popa
mov
mov
out
and
insl
mov
mov
mov
adc
xor
hlt
push
inc
cs
push
inc
add
mov
aaa
mov
sbb
pop
dec
in
xchg
clc
push
mov
lock
ror
out
and
jne
aaa
enter
inc
cmp
outsl
cmp
inc
xor
add
aad
fsubrs
in
iret
loope
lods
dec
pop
sahf
hlt
lcall
xor
mov
adc
es
mov
mov
mov
call
lods
int
loope
mov
in
or
mov
pop
into
nop
mov
mov
add
das
movsl
into
mov
stos
dec
pop
mov
mov
popf
fbld
aas
mov
mov
or
ljmp
sbb
jno
add
cltd
lret
sub
mov
adc
cmp
shll
sub
pusha
in
sub
inc
lahf
movsb
or
xlat
int3
int3
movsl
xchg
push
push
lret
push
aad
rol
or
add
lret
or
xchg
cwtl
or
fxch
arpl
mov
out
push
sub
mov
mov
jo
mov
push
mov
pusha
mov
cs
outsl
inc
lret
pop
ret
dec
pop
xor
push
mov
add
stc
rolb
andb
inc
aas
sub
xchg
push
div
nop
mov
sub
sbb
jmp
sub
mov
sub
stos
mull
sub
pop
insl
push
in
xor
and
sbb
add
add
sti
cmpsb
arpl
test
jg
je
cmp
or
je
push
scas
lea
dec
push
fucomp
or
push
shrl
aam
shll
or
jmp
iret
and
insb
lock
lret
mov
or
mov
inc
jmp
call
push
adc
dec
push
outsb
repz
out
jg
adc
jnp
mov
mov
shlb
add
lds
or
add
dec
and
xor
pop
cmp
pop
cmpsl
out
loope
jle
cmpsb
sbb
test
dec
leave
dec
movl
mov
daa
nop
int3
pop
or
xchg
mov
push
sahf
mov
push
out
aas
jecxz
xchg
fdivrp
inc
xor
push
mov
nop
out
in
in
dec
inc
repz
xchg
daa
push
fwait
mov
add
lret
clc
cmp
aaa
add
dec
fidivs
ljmp
inc
sahf
push
and
jns
test
cs
cmp
aad
gs
sar
call
neg
nop
cmp
imul
push
mov
jnp
or
jg
sbb
xchg
xchg
jecxz
or
mov
insb
push
dec
xor
xchg
mov
inc
fs
out
xchg
stos
mov
mov
mov
dec
sub
xchg
rep
rcr
cwtl
movl
imul
jae
mov
push
add
inc
sahf
lcall
shl
push
divb
imul
fwait
add
bound
orl
and
idivb
jae
inc
or
lcall
mov
or
scas
in
inc
and
lcall
cmp
out
stos
cld
and
inc
mov
sahf
test
lds
push
mov
dec
mov
cmp
cmp
inc
or
mov
idiv
push
clc
pop
and
mov
rcrb
cld
fs
jb
ljmp
out
test
out
cmpsl
roll
stc
in
lahf
aam
xchg
mov
dec
fwait
imul
popa
xor
cmp
idivl
and
sbb
add
mov
into
out
sbb
jb
mov
xchg
or
aad
sbb
mov
outsb
addr16
add
bound
ljmp
mov
adcl
mov
and
sub
mov
mov
dec
hlt
pushf
addr16
stc
orb
pop
push
jb
lcall
loop
mov
lock
adc
ret
cmp
jns
jnp
inc
xchg
fdivp
dec
pushf
push
add
pop
fs
cmpsb
imul
jnp
adc
scas
fimuls
cmp
shl
les
test
push
add
bnd
out
movsb
inc
outsb
adc
mov
movsb
cwtl
fbstp
enter
pop
ja
jge
push
xchg
cmp
sub
loop
cmp
pop
dec
mov
repz
inc
bound
fadds
aam
xor
dec
in
rolb
cmp
out
xchg
xor
leave
cmp
inc
dec
cmp
aad
xchg
push
mov
movl
loope
pop
or
je
jg
jmp
outsb
in
out
arpl
sbb
nop
push
data16
popa
test
push
in
pushf
push
xor
or
jl
jg
enter
push
xor
jnp
pop
xor
push
mov
jo
push
inc
cwtl
mov
ja
adc
shll
rol
push
lods
and
and
sbb
pop
lcall
stos
les
leave
cltd
cmpsb
movsl
sbb
cld
pop
push
sbb
xchg
push
jle
dec
push
mul
xor
add
repnz
push
das
push
xchg
jmp
push
mov
add
pushf
sub
in
jge
stos
gs
jo
icebp
mov
add
sbb
lcall
push
fistpl
xchg
push
clc
xchg
sub
mov
dec
inc
out
mov
sub
xor
les
fxch
add
mov
dec
pop
outsb
mov
xor
ret
scas
mov
xchg
sbb
xchg
pop
mov
outsb
popf
cmpb
ds
clc
jbe
shll
movzwl
cmp
dec
pop
and
stos
ret
aam
ss
lods
sbb
and
shlb
int
subl
jmp
dec
dec
in
xchg
out
loopne
fldcw
sub
std
fcoms
iret
and
add
aad
pop
mov
outsl
lods
ss
xlat
mov
ret
or
faddl
mov
mov
or
mov
pop
pop
das
bound
mov
loopne
xor
inc
fstl
lea
leave
or
mov
pop
imul
pop
repz
xor
xchg
sub
test
mov
jecxz
xor
outsb
es
mov
shlb
and
jb
aad
enter
stc
sub
stos
cltd
xor
ds
arpl
mov
outsl
cmpsl
in
gs
mov
jnp
mov
sbb
into
mov
adc
cmpb
jne
dec
push
cmc
ret
xchg
cmc
mov
les
scas
dec
cwtl
fnstcw
insb
shrl
pop
cmpsb
das
in
mov
inc
mov
sahf
scas
and
shlb
mov
js
inc
pop
cmc
cmpsb
stc
les
int
cltd
outsb
arpl
or
sbb
in
data16
insb
pop
push
test
push
xor
stos
and
adc
lods
shll
xor
sub
fcmovnb
push
pop
xor
xchg
jg
cld
shlb
in
sub
or
xchg
mov
and
xor
lods
sbb
mov
rcrl
rcll
jp
into
ds
add
cmpsl
xor
scas
push
ljmp
pop
movsl
mov
mov
xchg
fildl
pop
push
lea
push
dec
ret
icebp
or
push
int3
mov
loope
adc
rorb
xor
cmp
pop
jle
sbb
cmovns
xor
push
lahf
xchg
addl
dec
dec
scas
into
repz
movsb
icebp
stc
dec
outsl
mov
andb
pop
push
mov
xchg
mov
add
lret
adc
mov
inc
pop
arpl
jae
mov
inc
jno
iret
das
mov
rcrl
mov
loopne
sub
pop
fsubp
movsb
cmp
dec
filds
sub
xor
push
imul
scas
add
mov
xchg
jbe
and
cmp
xor
fdiv
stos
dec
int
xchg
loopne
fsubp
add
into
repz
clc
jmp
mov
mov
stos
sbb
sbb
mov
mov
mov
xchg
adc
xchg
outsl
or
sahf
push
clc
shlb
mov
lds
loope
imul
mov
xlat
adc
mov
sub
xor
xlat
jnp
or
fldl
cltd
test
ret
add
push
pusha
cltd
or
inc
xchg
jl
nop
cmpsb
add
sbb
shl
xchg
add
cmp
add
or
jge
jmp
inc
sbb
sbb
and
add
fnstcw
addb
dec
jl
adc
imul
out
lahf
add
xorl
mov
add
out
outsb
ret
daa
stc
out
scas
pusha
lahf
inc
insl
das
jp
jg
mov
jecxz
aad
and
xchg
and
aad
adc
sbb
jo
push
data16
mov
xor
fdiv
or
enter
out
jge
icebp
cs
pop
inc
add
lods
aas
add
xor
inc
fisttpl
xor
add
sub
xchg
fwait
mov
or
je
sub
mov
and
cli
sti
aad
gs
pop
mov
cli
pusha
ret
ljmp
and
enter
cwtl
mov
mov
mov
ss
pop
in
lea
movsb
add
jo
nop
cmp
cmp
out
pushf
mov
mov
imul
call
cmpsl
push
rep
das
sbb
adc
mov
sbb
insb
jp
mov
pop
pop
push
sub
and
inc
or
insb
int
out
std
jo
shlb
fcmovu
mov
sbb
jge
push
pop
jno
jecxz
outsb
and
jbe
imul
add
mov
or
sbb
cs
mov
mov
sub
in
push
cld
test
and
jmp
movsb
xchg
cs
cmpsl
inc
sub
mov
mov
mov
push
cmc
mov
pop
inc
lret
sbb
adc
xor
inc
xchg
adc
lea
int3
in
push
nop
lds
sbb
mov
mulb
sbb
xchg
mov
push
xor
and
mov
xor
inc
test
pop
sbb
add
xchg
std
xchg
fucom
cwtl
mov
push
fwait
xchg
dec
rorb
and
add
cld
scas
ja
adc
imulb
sbb
jp
cmp
in
cmp
and
in
xor
cmp
add
sbb
loop
ds
movsl
xchg
adc
mov
push
into
mov
pop
mov
mov
shll
push
sbb
hlt
bound
fildl
iret
mov
mov
pop
inc
mov
jno
lret
xchg
adcl
and
xor
xor
adc
push
aaa
mov
subb
xorb
mov
mov
push
xor
or
push
xchg
add
imul
inc
push
dec
xor
addb
jge
mov
lods
lret
out
aam
leavew
ret
cvtps2pi
lcall
jmp
enter
push
jecxz
jnp
cmp
js
das
fmuls
scas
negl
and
adc
lret
cs
ret
outsl
dec
xchg
ficoml
insl
sub
rolb
push
cmp
dec
sbb
and
imul
push
ficoml
je
negb
add
into
rcr
cli
push
pushf
out
pop
loop
sub
push
mov
pop
add
push
insb
roll
outsb
cmp
dec
mov
imul
mov
lret
paddusw
add
js
cltd
insb
addr16
and
mov
or
bound
push
pop
js
in
push
imul
fsub
leave
push
cmc
xchg
mov
inc
xchg
out
push
enter
lcall
pop
xor
pop
repz
add
jno
cmpsb
in
dec
dec
jmp
or
cmpl
outsb
inc
sbb
and
jmp
shlb
fnstsw
jmp
lods
jecxz
mov
inc
or
mov
test
sbb
lret
mov
fs
add
mov
xchg
fisttpl
mov
mov
sub
push
cltd
push
out
js
mov
xchg
mov
stc
sti
pop
daa
std
fidivrs
and
inc
push
sub
mov
mov
jne
loop
mov
inc
xor
out
test
sub
sub
sysenter
inc
push
lcall
cmpsl
xor
mov
adc
sub
mov
test
dec
fbld
push
lds
sbb
inc
fxch
mov
lea
dec
cli
sarb
sub
lret
xlat
imul
or
inc
pop
add
loope
cmpsb
inc
fisubrl
mov
cwtl
sub
aaa
cmp
or
negl
ret
scas
mov
mov
xchg
adc
mov
push
jne
and
in
inc
sbb
cwtl
xchg
push
jb
dec
xchg
arpl
cld
out
xchg
push
push
push
xor
xor
inc
lds
insb
stc
add
mov
mov
mov
and
fmull
repnz
mov
cs
and
dec
or
call
ss
aam
inc
stos
mov
ljmp
cmpsl
repnz
ja
and
cli
mov
inc
xor
ljmp
ja
push
jno
popa
cmp
sbb
adc
mov
mov
xor
sub
mull
mov
fs
push
pop
pop
lds
lods
pop
inc
dec
pop
lods
and
ja
outsl
jp
inc
cli
int3
stc
inc
dec
pop
inc
mov
sub
jge
rolb
push
call
jle
or
pop
and
stos
adc
mov
mov
push
into
dec
push
out
scas
dec
data16
mov
adc
sub
inc
mov
xchg
fnstenv
jne
aaa
xchg
or
and
sti
push
push
ret
sub
push
or
mov
fs
and
mov
cmp
or
and
jl
pushf
call
sarb
and
mov
daa
or
shrl
sub
orb
mov
or
sub
movsl
movsb
popa
lahf
adc
adc
addr16
in
cli
lret
daa
mov
mov
sar
xchg
out
jle
scas
push
daa
jo
in
adc
subb
repnz
ljmp
movsl
mov
dec
lret
jmp
cmp
inc
inc
repz
or
ljmp
adc
ss
mov
scas
and
adc
filds
cmpsb
jecxz
xor
ljmp
les
out
pop
push
les
outsl
iret
pop
adc
inc
and
sti
mov
mov
iret
adcb
lds
bnd
ja
in
push
int3
inc
mov
inc
mov
das
fists
scas
jae
fdivrs
mov
sahf
cmp
xchg
dec
js
adc
pop
lahf
mov
xchg
nop
in
lret
pop
popf
mov
push
test
mov
mov
cmp
mov
push
out
ljmp
add
mov
nop
pop
push
push
imul
ljmp
sbb
fwait
push
mov
pop
lahf
negl
rclb
shlb
add
jl,pt
ljmp
ret
xor
mov
fstpt
fwait
rcl
insl
addr16
xlat
jns
or
notb
pop
sarb
push
mov
push
les
mov
push
pop
or
inc
lahf
fs
insb
lock
sbb
xlat
rcrb
adc
cmpsb
mov
push
mov
in
ljmp
pop
add
mov
dec
push
lods
rclb
test
cmp
mov
adc
daa
jge
mov
sbb
and
dec
adc
lea
xchg
or
hlt
nop
fidivs
jno
fiadds
fbld
fsubrp
call
push
and
push
or
js
xchg
sbb
inc
inc
addl
adc
test
call
icebp
lret
mov
ret
mov
pushf
pop
clc
mov
sbb
mov
cltd
insb
imul
test
arpl
outsl
insb
mov
aaa
gs
sub
push
aad
dec
mov
lss
outsb
cmpsl
cli
jae
sub
lret
iret
ficomps
out
inc
cmp
ret
popf
sbb
out
mov
mov
scas
into
fcmovbe
jo
adc
lods
sub
lahf
mov
lret
xor
cwtl
es
jbe
or
stos
shll
testb
js
leave
ja
add
mov
xchg
mov
and
mulb
in
sub
cmc
adc
xor
lret
pop
mov
inc
jae
xchg
xor
cmp
cld
vcvttsd2si
add
sbb
inc
xor
pop
popa
sbb
xchg
rolb
test
lods
fbld
or
mov
call
mov
daa
in
jae
pop
dec
or
pop
into
insb
pushf
mov
imul
pop
add
and
imul
push
jmp
pop
lahf
cli
ljmp
adc
sbb
mov
jb
jbe
add
pop
mov
sarl
aaa
jns
mov
and
fcomps
mov
jl
dec
xlat
and
or
fwait
loop
out
pop
push
mov
xor
cld
jecxz
fildll
pop
push
fisubs
cmp
xlat
push
fmuls
pop
mov
notl
sbb
add
and
sbb
scas
pop
add
rcrl
lahf
jmp
int3
arpl
push
pop
jle
cmc
pop
dec
add
push
adc
outsl
stos
xchg
scas
pop
or
jo
movb
mov
fcoms
or
inc
nop
dec
sub
sub
push
sbb
cmpsl
cmp
mov
push
push
adc
rcll
adc
dec
xchg
push
xor
push
cs
test
pop
insb
and
inc
sbbb
not
mov
and
dec
or
push
fldl
mov
cwtl
xor
pop
rorl
pop
mov
fistpll
lods
push
pop
add
pop
cmovns
lret
dec
push
push
inc
push
mov
and
ror
js
mov
cmp
lret
fstpl
sub
les
sbb
test
std
cs
push
ss
shll
adc
add
sub
push
lods
repnz
sub
arpl
sbb
adc
inc
sbb
test
sub
ds
mov
cmp
fists
mov
leave
dec
pop
and
ficoms
mov
mov
mov
insb
xchg
and
cmp
fucomp
push
cld
and
mov
push
xchg
fadds
out
scas
sbb
adc
sbb
cli
mov
pop
ljmp
in
lea
xlat
bound
mov
pop
pop
repnz
scas
jp,pt
xchg
push
iret
es
bound
cli
adc
ljmp
add
mov
aaa
rcr
xor
ret
add
ja
push
and
jns
shl
mov
dec
mov
hlt
mov
repz
ds
aad
cmc
mov
pusha
jge
pop
ss
popa
lods
adc
ja
in
cmpsb
jecxz
mov
jmp
out
inc
jne
lock
nop
lds
lahf
test
hlt
fs
sbb
sbb
shlb
mov
orl
push
mov
or
iret
jmp
jb
and
mov
add
sub
pop
jg
rep
mov
orl
inc
sub
jecxz
in
cltd
fistps
sbb
inc
push
movsb
mov
sub
xor
nop
jmp
arpl
idivb
in
dec
sbb
enter
xor
cmp
jp
sub
cmp
or
sbb
data16
popa
pop
movsb
imul
mov
subl
xor
aaa
cmp
push
les
ret
mov
push
xor
adc
jg
aam
adc
mov
cmpl
mov
and
fstpl
lahf
clc
adc
jnp
xchg
fxch
in
rolb
xor
add
cltd
jnp
and
jmp
je
insl
cmp
orl
jle
jb
pop
pop
out
jmp
sbb
mov
in
sub
ja
jne
rol
or
fidivrl
sub
sub
jecxz
into
loopne
cmpl
fimuls
sub
jnp
pop
cli
inc
mov
cmp
call
ficoms
dec
ret
je
rcrl
xor
sub
leave
in
xor
popa
pop
xchg
out
and
xchg
cmp
xchg
pop
add
adc
lahf
mov
stos
fistps
push
sbb
inc
and
divl
mov
sub
xor
out
outsl
js
or
mov
rcr
push
fstl
pop
push
fsubrs
aaa
mov
adc
ror
scas
sbb
repnz
stos
adc
mov
jnp
fsubr
pop
xor
je
add
xor
aad
mov
ds
cmpsb
mov
lock
cld
mov
ret
cmp
rcll
dec
outsb
test
addr16
lret
imul
mov
push
jl
popa
inc
mov
push
cmp
xor
in
push
ja
push
mov
std
xor
push
out
or
lock
sub
mov
es
rcrb
sbb
inc
ds
xchg
das
cmpsl
lcall
or
xchg
aad
lock
add
hlt
int3
test
and
add
inc
sbb
mov
dec
pop
nop
jge
gs
mov
pusha
dec
add
data16
je
leave
loopne
sub
or
mov
enter
inc
dec
inc
sbbb
and
jge
add
mov
pop
mov
ret
lahf
dec
sbb
xor
icebp
sub
jle
cwtl
mov
dec
faddl
xchg
lods
cmpsl
mov
push
in
call
shll
and
insb
into
adc
sbb
sub
xor
insl
or
push
and
fwait
std
stos
lods
out
mov
scas
adcl
push
xchg
iret
dec
pop
push
pushf
fldcw
pop
out
orl
lds
cmp
sbb
mov
leave
mov
sbb
out
shll
or
pop
or
fistps
outsb
push
push
scas
xor
xchg
xchg
xchg
dec
test
mov
xor
out
sbb
mov
ljmp
push
add
pop
in
sbb
lcall
xchg
dec
leave
stc
sbb
imul
mov
je
fists
pushf
pop
dec
mov
int
mov
gs
push
xchg
xor
mov
mov
jbe
dec
gs
and
jbe
lods
leave
iret
adc
add
push
fsubrl
iret
jne
pop
pop
or
mov
lods
ficomps
je
push
leave
pop
aam
lcall
movsl
shrb
scas
adc
adc
les
sbb
mov
or
dec
hlt
fstpl
and
xchg
inc
xchg
jl
scas
arpl
cmp
sub
fxch
ds
dec
sub
dec
xchg
xchg
or
xchg
out
and
jnp
daa
shl
stos
iret
fsts
into
sbb
gs
add
xlat
add
scas
xor
adc
mov
cmp
es
cltd
aam
gs
pusha
xlat
sub
repnz
sub
xor
dec
shrb
pop
out
or
in
js
ja
into
ljmp
push
in
push
pop
icebp
inc
loopne
sbb
test
mov
hlt
in
dec
push
xor
xor
insb
adc
mov
scas
adc
inc
out
inc
mov
insb
daa
lock
into
pop
sti
sbb
ficoml
insb
sbb
loopne
or
ds
inc
mov
push
ja
lds
loop
cmpsb
iret
mov
gs
enter
aam
fistps
lea
push
in
mov
clc
movsl
loopne
rolb
add
pop
aad
adc
jecxz
movsl
fidivrl
dec
xchg
in
lcall
leave
dec
int3
xchg
aas
and
sub
adc
shlb
lahf
adc
ficomps
pop
pop
ja
rolb
sub
push
outsl
mov
cmpsb
aad
cmc
sahf
decl
cmp
mov
push
fsubp
cmp
sbb
push
xor
jg
xchg
imul
mov
or
imul
mov
nop
or
jle
mov
lock
pop
add
pop
orl
and
mov
push
fiaddl
jle
jmp
mov
clc
fidivl
movsb
sub
and
push
xchg
insb
jl
xor
mov
rorl
add
loopne
inc
mov
and
sub
xlat
out
cmpsb
adc
pushf
loopne
jne
or
xor
fisubrl
dec
out
gs
mov
jne
pop
fmull
insl
call
fcmovnbe
leave
cmpsl
xchg
mov
push
jmp
jl
push
push
hlt
into
insl
cmp
scas
xchg
test
mov
sub
into
sub
mov
add
add
cmpsb
les
ljmp
aam
in
fidivs
es
ds
leave
add
mov
in
test
adc
xor
lods
loopne
or
mov
cmp
xor
jle
lock
sub
fs
push
outsl
ds
adc
lods
cmpsl
movsl
cli
ja
mov
mov
or
pop
mul
in
xchg
lret
stos
cmp
test
mov
sbb
mov
out
jne
loop
fsts
lahf
movb
push
sbb
pop
push
cmc
lods
mov
std
shll
clc
adc
pop
call
in
or
shlb
daa
repnz
call
xchg
push
sbb
jge
cmpb
pop
mov
push
inc
mov
push
fs
xchg
stc
or
cli
inc
into
adc
fnstsw
push
mov
jle
cmp
jecxz
lea
pop
insl
jg
loop
mov
xor
jg
mov
pop
ljmp
inc
jne
fisubrl
push
jae
das
leave
lock
sahf
mov
jns
xlat
ret
xchg
add
or
jmp
fwait
jno
push
popf
sub
push
xorl
imul
iret
jl
add
or
into
jecxz
jge
push
prefetch
sub
pop
xor
pop
out
repnz
in
mov
sub
push
aaa
push
xchg
or
icebp
inc
dec
icebp
mov
adc
int
aad
out
cmpsb
into
push
hlt
pop
movsl
add
mov
or
cmp
shl
in
jge
sub
out
int
roll
mov
call
test
fsubrl
fsubs
frstor
push
imul
inc
jbe
xor
mov
dec
lea
or
push
or
movsb
jno
xlat
add
push
mov
mull
mov
add
loope
stos
mov
dec
sbb
jb
and
xchg
scas
ljmp
push
pop
sub
adc
cmpsl
sub
mov
insl
sub
push
out
add
aad
xor
mov
mov
xchg
inc
hlt
sub
mov
movsl
cli
cmc
or
xor
push
pushf
xchg
push
jg
sbb
xchg
pop
sub
loop
push
mov
inc
mov
push
rorb
fcmovbe
stc
dec
pop
repnz
dec
fsubs
jnp
jge
shll
mov
mov
jns
sub
mov
ss
push
adc
lret
dec
fsubs
sbb
daa
xor
jae
fsubr
in
cmpsb
cmp
mov
push
es
push
js
lcall
mov
scas
out
jl
add
pop
pop
jne
or
xchg
xchg
cmp
in
movsb
xchg
mov
add
adc
scas
mov
xchg
inc
outsb
inc
push
xchg
loop
mov
fisttps
jb
js
out
loope
add
add
das
lahf
mov
arpl
or
push
lea
xchg
mov
or
xchg
pop
popa
pop
pushl
fidivs
mov
xor
mov
mov
div
insl
pop
add
mov
push
cs
mov
dec
push
les
das
loop
es
fcompl
int
lock
jb
testl
loopne
enter
sub
inc
test
incl
dec
mov
sub
mov
cmp
xor
sbb
mov
push
xchg
pop
rcr
movsb
ret
popf
or
sti
jae
inc
xor
ljmp
xor
and
push
adc
pop
or
cmc
hlt
mov
fsubr
cmp
call
sbb
push
mov
cmc
fcompl
dec
jno
xchg
sub
loop
jnp
sub
les
jp
mov
mov
push
out
pop
jo
sbb
scas
in
rcll
inc
test
imull
and
filds
ds
ds
sahf
dec
mov
jns
aas
frstor
inc
pop
repz
mov
inc
lock
cmp
cmp
sub
or
repz
xchg
ret
mov
or
sti
mov
imul
xor
push
shl
sub
sub
jno
out
popf
fstpt
sahf
cmpsl
mov
aaa
scas
rcl
jns
push
push
out
or
inc
enter
push
and
es
sub
stos
adc
mov
inc
xchg
insl
inc
inc
xchg
into
dec
add
sbb
iret
aad
adc
int
daa
sub
mov
or
xchg
into
int3
std
int
mov
test
and
cltd
outsb
push
push
std
test
push
cs
in
jne
les
xorb
or
jae
les
inc
enter
xor
push
popf
aaa
jle
popf
cmp
int3
mov
sub
pop
sti
lds
pop
and
fldt
enter
mov
jg
push
cmpsl
das
adc
push
test
shll
xchg
testl
mov
or
clc
sbb
cltd
arpl
movsb
movsl
je
mov
leave
cld
test
push
pop
imul
sub
repnz
push
push
frstor
cmc
dec
addr16
jb
ret
stos
outsl
imul
loop
xchg
je
push
inc
jne
subl
cmp
add
mov
test
testl
sbb
ret
cld
je
outsb
pop
jbe
jne
pop
stos
jge
lock
dec
jb
pop
ss
xor
in
xor
adc
pop
rorl
mov
sbb
push
adc
sbbl
add
jo
adc
rcrb
into
push
sub
mov
mov
adc
add
sbb
fcmovb
loopne
aam
cmp
ss
xor
mov
pop
daa
out
cld
in
cs
add
lcall
in
add
adc
dec
scas
and
jmp
test
jne
insb
mov
xchg
sub
inc
or
ja
sub
mov
push
std
adc
rorl
lahf
int
cmc
scas
in
jl
dec
setp
dec
mov
iret
inc
and
ret
sti
mov
sbb
lahf
mov
insb
sub
fcmovu
pushf
into
xchg
push
pop
sub
xchg
ds
stos
xor
cmc
aaa
or
inc
fwait
dec
sub
pop
sbb
inc
adc
push
imul
iret
aaa
adc
xor
mov
mov
popf
in
jle
mov
cmp
repnz
fstps
orl
jle
sbb
pop
lea
int3
into
mov
int
push
and
imul
into
jno
push
cmp
add
mov
or
pop
fldcw
fstpt
ret
hlt
aaa
push
add
push
les
int
das
pop
sbb
ficoms
ja
xchg
loopne
xchg
lcall
lock
popf
push
jp
sbb
out
movb
mov
es
ficoms
repnz
mov
fidivrs
dec
sub
mov
cmp
fidivl
add
icebp
xchg
test
imul
loopne
outsl
adc
pop
push
es
addb
add
dec
or
mov
ret
addr16
mov
sub
imul
and
test
adc
pop
out
mov
cmp
mov
or
outsl
mov
test
inc
aas
loop
and
adc
cmp
xor
std
push
jl
mov
pop
push
in
rcll
enter
loopne
jl
std
mov
aas
outsb
cwtl
aad
pop
sbb
dec
sbb
add
aad
and
push
popf
ljmp
outsl
adc
adc
cmp
pop
in
sbb
xor
xchg
icebp
adc
pop
pop
jae
lahf
andl
jmp
out
push
mov
mov
sbbb
cwtl
sbb
pop
aam
sbb
les
inc
xor
les
inc
mov
sbb
dec
xchg
pop
out
jl
xchg
inc
mov
cmpsl
pop
jecxz
pop
daa
out
lods
sub
fs
inc
mull
or
add
cmp
subl
dec
xchg
ja
jp
jg
fidivs
push
mov
mov
sarl
xor
popl
loope
and
adc
repz
sbb
pop
or
jo
lea
sub
sbb
mov
push
xor
push
jno
arpl
lret
lcall
or
gs
imul
pop
cli
ficoml
mov
jp
sub
aad
movsl
xor
rorl
jecxz
ret
and
adc
push
adc
adc
and
jmp
jge
aas
sub
push
adc
and
jg
xchg
aas
or
push
popf
push
stc
mov
inc
dec
mov
xor
in
imul
loop
push
rcrb
xor
sbb
push
std
out
lahf
and
cmp
push
jle
out
mov
lock
adc
pop
inc
jne
lods
jecxz
mov
dec
ljmp
jl
pusha
addr16
and
sub
das
loopne
xchg
jno
cmp
dec
xchg
lods
dec
adc
shl
negl
jge
cli
ljmp
mov
lods
in
ss
mov
icebp
ret
jo
xchg
pop
and
movsb
xchg
mov
xor
mov
sbb
lds
into
dec
lahf
and
cwtl
jge
jo
jle
adc
xor
inc
dec
lds
pop
jmp
cmp
aas
jecxz
push
jp
andl
repnz
push
and
inc
lret
js
inc
adc
addb
jl
lahf
mov
movsb
or
xchg
cmp
inc
cmc
ja
xchg
mov
xor
in
jp
xchg
mov
loopne
je
mov
xchg
cmpsl
call
add
cmpxchg
xor
fs
out
lret
and
stos
pop
adc
jl
cmp
and
mov
shll
add
sub
xlat
test
mov
mov
xor
cld
jmp
xchg
neg
aaa
fdivs
jge
ja
sarb
jne
add
or
out
pop
fwait
ret
rorb
jne
ret
fisttpl
cmp
xchg
inc
xor
and
rcll
adc
loopne
or
xchg
jge
sub
faddl
pushf
mov
repz
push
xchg
arpl
mov
test
sbb
leave
xchg
js
jne
jo
dec
sbb
or
mov
mov
mov
insl
jmp
cmp
and
enter
ret
aam
sbb
mov
mov
jb
cmp
mov
pop
add
mov
cmp
sbb
fs
push
lahf
movsb
and
subl
decb
cwtl
std
aam
rcl
shrb
mov
or
dec
icebp
fcomi
lea
mov
aas
repz
jmp
pop
jp
imul
inc
aaa
jne
std
ret
add
add
lds
aaa
push
int3
rcl
adc
add
lods
inc
mov
or
adc
and
inc
jae
imul
push
scas
es
sub
push
inc
mov
xor
mov
aam
pop
push
mov
xor
xchg
lret
nop
mov
fnstcw
mov
mov
xor
mov
jle
call
pop
clc
adc
inc
adc
cmp
push
lock
xor
in
shrd
lock
lcall
notb
iret
xor
jb
add
shlb
dec
pop
ret
popa
push
mov
rcrl
movsb
not
cmp
push
and
xor
inc
mov
loopne
xchg
inc
test
sub
push
adc
fcomp
push
sbb
lods
mov
fsubs
pop
pop
mov
xchg
push
jo
fdivs
scas
or
lods
and
movsl
lret
push
sbb
stos
pop
bound
idivl
and
mov
out
lods
movsb
push
notb
movsb
xchg
xor
icebp
adc
mov
jne
fiadds
jae
dec
repz
xor
lret
mov
mov
shll
imul
xchg
addr16
fcmovb
in
or
fs
es
mov
lock
sti
jl
icebp
sub
fwait
lahf
adc
mov
aam
mov
xchg
push
insb
enter
lcall
loop
pop
in
dec
ljmp
dec
inc
sbb
push
repz
shll
leave
mov
dec
adc
cld
and
mov
fdivs
jbe
lahf
stc
inc
jmpw
aad
cmpsl
xor
push
xor
and
or
sbb
rcrb
ffreep
xor
jb
jmp
inc
loop
mov
cld
adc
push
push
addr16
push
test
dec
cmc
and
push
jp
lcall
mov
dec
js
data16
ja
xor
lods
cs
mov
loopne
mov
inc
jbe
mov
lahf
aad
mov
ds
fdivl
mov
jbe
sbb
cmpb
add
mov
ds
jge
fst
lds
stos
mov
xlat
in
dec
sbb
es
enter
cmp
cmpsl
xchg
lret
sub
cltd
dec
or
sti
repnz
jge
or
mov
mov
or
ficoms
xchg
clc
loope
arpl
mov
lcall
frstor
and
call
lahf
jno
xor
and
sub
lahf
jmp
call
pop
cmp
sub
push
clc
test
ljmp
cmp
lea
xchg
mov
push
faddl
fs
lret
scas
pop
inc
dec
pop
or
cmp
mov
push
xchg
mov
outsl
bound
out
xchg
sbb
stos
add
sti
flds
pop
pop
shrb
mov
add
iret
dec
lahf
add
jno
jge
push
iret
push
dec
and
xchg
stc
sub
mov
push
divl
dec
push
xchg
push
arpl
cmpl
mov
sbb
cs
ror
call
in
pop
push
jecxz
aad
cli
dec
das
pop
cwtl
test
test
mov
push
les
iret
and
std
ret
fnstenv
cwtl
pop
adc
adc
test
inc
xor
sbb
inc
cltd
and
lock
and
loopne
adc
sbb
test
in
dec
lea
lcall
aas
dec
incl
xchg
out
or
xchg
xor
dec
and
mov
xchg
in
xlat
mov
enter
in
cmp
xchg
cmp
mov
lock
nop
add
dec
dec
dec
out
sbb
rolb
pop
xor
js
dec
pop
lahf
cs
push
es
sbb
pop
sbb
les
loopne
ret
out
cltd
xchg
push
push
pop
pop
sarl
inc
sbb
rcll
jecxz
aad
dec
faddl
mov
jecxz
in
or
lret
jle
mov
hlt
mov
pop
pop
and
dec
paddq
inc
ret
or
push
stc
cmp
flds
pushf
pop
imul
in
aaa
stos
sub
shlb
and
xchg
loope
loopne
mov
into
mov
inc
je
mov
push
push
jp
scas
inc
adc
shr
add
fisttps
roll
dec
nop
or
stc
sarl
pop
cltd
sub
sbb
push
cwtl
xorl
jo
lret
lea
push
iret
or
pop
pop
jbe
shll
scas
mov
aad
jbe
add
lds
xlat
pushf
push
loope
cwtl
add
jno
jno
push
in
xchg
movsl
inc
cmp
pop
imul
sbb
adc
mov
out
xor
ror
cmpsl
gs
int
shr
fwait
inc
xor
mov
jns
sub
lock
fdiv
dec
das
mov
mov
das
mov
jp
push
lock
push
lods
rcl
js
push
fsubs
imulb
aad
xchg
add
cmpsl
loopne
cmp
push
mov
scas
xor
daa
xchg
pop
out
jecxz
jecxz
test
mov
sub
imulb
mov
push
mov
sti
and
divl
push
mov
pop
in
int3
xchg
jmp
es
inc
addr16
negb
js
cmpsl
xor
cli
mov
jo
mov
cmp
in
mov
loope
outsb
mov
out
lret
add
fildll
cmp
insl
or
mov
dec
mov
jmp
mov
mov
sbb
mov
jp,pt
mov
sbb
add
nop
mov
add
push
inc
sbb
xchg
add
dec
inc
mov
push
rcl
jo
mov
test
loopne
jbe
xchg
mov
and
jmp
insb
sub
addr16
enter
sbb
xlat
jns
data16
mov
std
jmp
push
sub
lea
and
out
dec
sbb
mov
fdivr
fidivs
mov
xor
sbb
mov
scas
data16
inc
aad
mov
dec
push
xchg
dec
push
je
out
cmp
jo
in
add
mov
mov
add
xor
loopne
mov
int3
cmp
cmp
lcall
xor
pop
sub
sbb
out
pop
pop
cmp
mov
add
cmpsb
jge
movsb
xor
gs
das
mov
push
pop
xchg
int
sub
sbb
outsb
or
test
lret
shr
ret
icebp
push
sti
dec
fcompl
rcr
dec
test
sti
fstp
sub
outsl
push
scas
inc
outsb
push
pop
or
aas
adc
les
xchg
jge
mov
jecxz
insl
iret
fimuls
jae
mov
xchg
sub
in
int3
and
cmp
orl
mov
or
and
addl
push
in
cs
sbb
mov
loope
test
xor
jle
dec
sub
lret
loopne
dec
icebp
lds
jg
into
out
icebp
adc
sahf
ret
jbe
lods
cmp
add
js
fs
aaa
insb
and
testl
jnp
inc
popa
test
sbb
and
dec
and
outsl
push
or
outsb
inc
int
popa
push
mov
pop
out
mov
adc
adc
cwtl
cs
daa
push
push
shrb
push
cmc
or
rclb
pusha
gs
rcl
jg
mov
adc
cmp
sti
cltd
jle
xchg
nop
mov
lahf
jecxz
cmp
add
notl
popf
jnp
xchg
scas
mov
mov
mov
jl
or
hlt
shlb
and
and
adc
test
sar
add
push
mov
pop
xlat
std
dec
cmp
cmp
pop
sub
pop
mov
into
lcall
int3
sahf
lds
imul
dec
loope
xchg
lahf
pushf
cmp
ja
test
loope
or
pop
loop
mov
test
lret
mov
mov
fcmovne
hlt
icebp
pop
adc
and
add
or
or
inc
xchg
aaa
xchg
dec
pop
mov
int3
shlb
enterw
push
mov
out
faddl
loop
push
jp
pop
test
or
mov
push
test
aas
or
stos
adc
lret
cmp
sub
ss
cltd
loop
inc
popf
repz
add
jle
push
cmp
iret
fs
jb
repnz
xchg
jne
nop
js
hlt
jmp
sbb
aam
mov
xchg
mov
pushf
jle
dec
pusha
loop
and
push
mov
push
lret
adc
addr16
fidivrl
daa
loopne
xor
xor
ljmp
sahf
lods
ss
xchg
out
inc
adc
dec
outsl
lret
imul
push
les
decb
add
add
xorb
jp
push
jmp
insl
sub
pop
mov
push
mov
loope
sbb
jge
pop
into
dec
jae
test
push
push
jb
mov
add
hlt
mov
mov
adc
cmp
mov
xlat
jge
mov
fildl
push
sbbb
mov
scas
mov
ds
popl
push
sub
adc
cmove
ljmp
cmpsl
les
push
popf
mov
mov
adc
adc
out
xor
mov
lods
ljmp
mov
test
int3
cwtl
dec
test
icebp
adc
adc
cmp
and
cmp
addl
xchg
stc
mov
inc
insl
push
xor
shrl
popa
sarl
push
lret
je
adc
add
and
mov
or
xchg
xchg
int3
shll
aaa
sub
leave
in
jge
fdivr
out
fidivl
mov
sahf
lock
sbb
int3
dec
pop
pop
xor
lret
xchg
in
or
and
xchg
jnp
dec
pop
pop
adc
jb
in
loope
mov
push
sarl
jl
rolb
mov
std
push
sub
fsts
sahf
xchg
sbb
lods
nop
aaa
and
in
test
scas
mov
outsb
inc
ss
or
jns
cmp
jno
pop
push
adc
adc
xchg
imul
rolb
or
int
pop
in
adc
fnsave
xchg
js
xlat
rcl
jle
mov
inc
call
sbb
add
add
insl
mov
subb
fnstenv
mov
adc
pop
or
or
mov
pop
lret
lds
mov
orl
mov
in
jp
xor
push
fisubl
cmp
dec
sti
or
outsb
ror
sbb
sahf
outsb
mov
jns
push
push
ja
xchg
sbb
xchg
fs
leave
pop
ds
xchg
mov
xchg
sarb
jle
lret
hlt
lods
jb
jb
push
mov
test
adc
lods
lcall
jl
mov
dec
push
loope
inc
xchg
adc
dec
jns
testl
jmp
cwtl
push
out
out
fstpt
aad
pop
pop
out
pop
mov
scas
enter
mov
lcall
dec
mov
dec
adc
dec
imul
dec
jo
lret
push
cmp
and
ja
mov
fcomps
lahf
dec
mov
cmpl
push
ljmp
and
pop
loop
xchg
sbbw
mov
adc
pop
aas
dec
repnz
jge
pinsrw
xor
cmp
out
stc
sbb
test
dec
repz
jbe
sub
push
ficomps
test
and
repnz
xor
jae
sbb
xorb
fidivs
lea
adc
bswap
fsubl
inc
mov
cmpsb
mov
sub
mov
scas
jae
jnp
cmp
or
inc
fs
and
mov
ror
aas
fnclex
pop
pushf
or
mov
in
lahf
inc
pop
sbb
and
push
gs
shrb
sbb
fstpl
add
xlat
pop
mov
stos
pop
sub
cld
xchg
fidivl
or
sub
jp
pop
test
das
adc
sbb
rorl
push
stc
or
or
xor
sbb
pop
push
cwtl
sti
or
out
into
loop
adcb
rclb
dec
inc
sahf
stc
mov
or
mov
inc
xchg
sbb
xor
loope
adcb
push
jmp
sarl
adc
call
fsubrs
push
jns
or
iret
andb
pop
mov
push
jl
fimull
and
pop
ja
test
sarl
push
movsb
aas
and
push
cmpsb
push
mov
out
aam
arpl
fisubrs
pop
push
enter
imulb
push
sbb
ret
mov
xor
aam
jmp
sub
addr16
dec
out
push
out
mov
aad
xchg
push
lods
jmp
imul
mov
cmp
addr16
push
je
jno
or
push
hlt
fmull
mov
inc
dec
test
dec
mov
les
aam
cmp
jno
cmp
movsl
cmc
pop
sbb
dec
xor
or
xor
jns
dec
mov
adc
mov
fldcw
mov
sub
and
call
add
ret
or
xchg
inc
push
addr16
ret
sub
lock
out
stos
imul
inc
fstp
mov
jbe
test
or
jnp
lea
sbb
ret
in
sbb
aaa
xchg
jg
out
jl
xor
movsl
xor
leave
mov
fists
sub
ret
cmp
shr
sarb
pop
mov
or
jbe
scas
adc
pop
jne
and
cmp
pop
mov
jge
jns
sbb
out
je
repz
pop
jno
mov
repz
cs
mov
fdivrs
jle
pop
aad
adcl
sub
hlt
and
rcr
shrl
je
aad
or
mov
inc
mov
mov
push
jge
pop
cmpsb
pushf
xlat
outsl
ss
test
xlat
adc
or
adc
jb
sarb
lea
idiv
inc
int
xor
gs
int
and
inc
sub
add
ja
shll
loope
stos
cwtl
adc
push
jns
xor
dec
leave
add
push
sbb
in
sahf
xchg
mov
fmulp
mov
mov
pop
lds
ret
aaa
sub
inc
xor
mov
sahf
loop
popf
add
cli
rclb
call
pcmpgtb
mov
shll
cltd
xor
pop
ret
or
jbe
xlat
in
jge
and
jl
dec
addl
or
hlt
inc
sbb
lods
lret
sub
test
cmp
cwtl
mov
pop
xchg
nop
in
adc
lock
rcll
dec
mov
sbb
out
cmpsl
lods
jecxz
lcall
inc
xor
push
jmp
pop
jl
mov
mov
push
dec
dec
or
in
and
mov
sub
popa
mov
dec
fdivl
es
out
xor
adc
in
scas
icebp
repnz
nop
pinsrw
clc
out
addr16
pop
xchg
sub
outsb
je
test
bound
out
pop
lcall
mov
xor
ja
cmp
fsubr
push
fwait
or
xor
jmp
pushf
xchg
mov
push
in
cwtl
lret
mov
cmc
mov
scas
push
pop
rclb
ret
inc
xlat
pusha
imul
test
cmp
dec
std
out
imul
push
jmp
js
movsl
xchg
in
mov
adc
push
fisttps
pop
imul
lcall
or
mov
rcrb
insb
sbb
loope
mov
imull
dec
es
push
mov
sbb
xor
decl
adc
fnstsw
or
les
out
movsb
adc
int
sbb
out
andl
outsl
pop
sub
dec
int3
or
mov
stc
push
in
ret
push
dec
inc
rclb
int3
mov
add
add
cmpsb
aad
jo
jmp
and
shrl
sbb
repnz
imul
or
pop
push
pushf
out
scas
loopne
jae
xchg
xorb
nop
daa
add
stc
jns
sbb
jbe
sub
mov
iret
jne
mov
push
add
test
nop
pop
jmp
shrb
push
mov
cltd
add
js
push
push
leave
adc
scas
insl
or
out
out
fnstsw
xchg
std
sti
jne
and
xchg
lds
jae
ss
jb
out
fiadds
jge
fnsetpm(287
adc
add
mov
fsubs
and
adcb
mov
dec
daa
dec
mov
add
es
push
ljmp
pop
in
adc
or
and
addr16
cmpsl
xor
aaa
adc
enter
jnp
std
pusha
xorl
pop
sti
out
incl
push
and
xlat
lcall
into
inc
xchg
stos
inc
inc
mov
mov
push
xchg
hlt
sub
movsb
jp
arpl
in
xchg
pop
cmpsb
cwtl
pop
xor
je
add
cmp
sbb
out
out
inc
andl
lret
sahf
jns
pop
notb
popf
mov
push
jmp
sbb
jmp
dec
mov
decb
bound
xchg
gs
ds
jp
sbb
lret
addr16
out
xchg
and
rcrb
sarl
shl
fistpl
das
rcr
dec
mulb
lret
mov
jl
ljmp
std
notl
daa
out
jb
jae
pop
or
xchg
lcall
mov
fiaddl
cmpsl
das
stc
dec
pushf
mov
cmp
push
sbbl
and
adc
mov
adc
pop
in
jle
mov
faddl
adc
out
fs
and
faddl
pop
cmc
push
xor
push
fwait
mov
jge
movsl
push
or
push
insb
lahf
je
sbb
cld
inc
mov
jle
cmpsl
imul
stc
lret
jb
pusha
lcall
jle
mov
int
ds
pop
jo
add
sti
cmp
int
push
pop
adc
dec
out
inc
xchg
lock
push
dec
mov
ret
hlt
xlat
and
sbb
shlb
hlt
xor
stos
negl
loope
movsl
push
rorl
repz
pop
cld
mov
push
fimull
and
and
dec
or
insl
add
ljmp
add
cmp
xor
orl
adc
dec
lea
into
lea
imul
sub
push
int
pop
push
clc
lods
aad
insl
mov
es
push
sahf
in
xor
pop
pushf
xchg
mov
mov
clc
pop
dec
cltd
adc
pop
dec
jecxz,pn
and
int
jae
mov
push
jbe
jb
mov
jb
xchg
scas
cmp
mov
inc
xor
or
scas
pop
lods
mov
cltd
sbb
pop
mov
mov
add
sti
mov
jge
sub
mov
bound
sub
les
addr16
fcmove
inc
pop
jne
xchg
mov
pop
mov
cld
js
add
pop
pop
xchg
adc
or
xchg
xchg
rorb
dec
cltd
push
adc
mov
jmp
outsl
in
bound
stos
xor
mov
les
subl
mov
or
dec
push
into
pop
imul
xor
in
xor
dec
and
xor
cltd
out
cltd
inc
mov
pusha
push
movsb
pop
or
pop
sbb
mov
ljmp
cmp
xor
jb
add
cli
pcmpeqb
lcall
and
xchg
shr
movsb
cmpsl
cmp
xchg
and
mov
inc
out
pop
xor
mov
xor
lods
add
mov
idivb
jns
xor
cmpsl
je
aas
ds
mov
in
push
mov
and
fiadds
mov
in
push
lds
cld
inc
push
fisttps
sub
ja
or
sub
mov
popf
xchg
and
inc
mov
push
add
mov
jo
stos
xchg
fbld
jecxz
mov
sub
cmc
push
adc
cmpsl
push
push
scas
push
arpl
enter
loopne
pop
xchg
fst
lret
aam
ret
xchg
pop
mov
push
or
cmp
jae
popa
mov
pop
insl
out
or
sub
dec
push
jecxz
clc
adc
outsl
outsl
dec
xchg
out
imul
mov
cmc
jbe
and
mov
xchg
adc
lock
or
shrl
cli
jge
push
cmp
jmp
ds
mov
inc
sahf
xchg
mov
and
test
gs
int
sub
cld
or
scas
test
sbb
pop
add
pop
mov
sbb
jmp
mov
push
mov
add
das
mov
cmp
out
xchg
stos
sub
mov
jg
shll
negl
push
incb
add
or
ret
and
roll
cmp
pop
pop
fcomp
jp
pop
lret
or
mov
cmp
jecxz
xchg
and
mov
daa
mov
lret
fwait
cmp
int
or
arpl
pop
mov
les
add
cmp
out
fldcw
pop
jb
push
sub
mov
iret
in
jno
fnstsw
or
das
fcoml
dec
out
push
cs
jns
test
mov
dec
gs
inc
pop
dec
sub
sbb
repnz
mov
adc
jge
pushf
mov
xor
push
or
sbbb
ret
jmp
dec
mov
xchg
cld
adc
ja
rcll
test
mov
clc
shrl
add
es
lods
cs
rolb
cmpsb
aaa
push
xchg
lret
xchg
ds
flds
jnp
mov
xlat
lea
shrl
lcall
jno
cs
or
das
jne
arpl
rcll
push
das
mov
addr16
sbb
cmpsl
jecxz
xchg
adc
mov
call
sub
push
iret
sub
lock
js
dec
or
in
idivb
and
or
sub
js
jns
inc
in
push
pop
sbb
jns
xchg
mov
sub
push
inc
stos
leave
jmp
xor
je
int
cmp
out
mov
bound
and
mov
movsb
jg
mov
aam
xlat
das
pop
or
int
dec
cld
lret
xchg
pop
in
outsb
pop
adc
rcll
mov
adc
sub
gs
mov
lahf
xchg
xor
inc
das
push
sbb
leave
xor
dec
adcl
adc
fistl
dec
pop
addl
mov
test
insl
xor
or
adcb
jecxz
rcl
pop
cmpsb
aad
xchg
fs
sbb
cmp
loopne
and
shrl
xor
cmpsl
cltd
popa
and
jne
data16
and
shlb
lahf
push
cltd
sarl
fwait
jmp
pop
insl
notl
lods
adc
fisttpl
xchg
xchg
pop
lods
mov
fisttpl
mov
imul
pop
lret
dec
fnstsw
xor
testl
add
jecxz
loope
scas
fldenv
cmp
xchg
fmuls
cld
mov
aam
push
push
mov
loopne
int3
pop
dec
mov
mov
add
hlt
cmpsl
popf
sub
mov
inc
insl
insl
ja
les
leave
and
jnp
ss
fsubrs
push
div
das
pop
inc
ret
jle
xlat
xchg
fidivl
dec
out
mov
jmp
fcompl
lods
push
mov
xlat
fwait
jne
mov
add
jl
test
jb
sbb
pushf
imul
or
sbb
xchg
push
inc
cwtl
jne
push
jo
jns
enter
ljmp
xchg
jg
stos
leave
jne
mov
lock
filds
xchg
inc
jecxz
inc
cmp
sbb
loop
jp
sbb
sbbb
xchg
jo
adc
sub
dec
test
stc
fdivs
inc
in
jp
inc
fsubs
add
sbb
aam
mov
and
andl
sbb
fisubrl
lahf
sbb
in
cmp
rcrb
xchg
shrb
xchg
mov
dec
dec
pusha
shlb
fistl
push
jp
xchg
dec
push
inc
aaa
pop
jns
xor
push
jmp
das
out
xchg
adc
sti
dec
sub
aam
rolb
sub
add
cmc
xchg
add
pusha
cmpsb
and
sbb
push
or
lahf
add
dec
xchg
test
aas
lods
repnz
mov
jbe
insb
imul
sbb
push
mov
push
loopne
fs
outsb
and
lock
inc
ss
sbb
ljmp
lods
adc
mov
mov
outsb
movnti
pop
mov
pop
mov
sarl
push
xchg
pop
sbb
pop
cmp
testl
aaa
sbb
jbe
jnp
sbb
bound
jno
ds
xor
dec
leave
cld
aaa
sub
inc
or
jbe
mov
xor
add
mov
and
lds
adc
mov
jae
dec
aaa
daa
and
leave
mov
into
and
xor
dec
gs
cmp
clc
leave
cmp
out
cli
lods
and
test
dec
mov
imul
clc
lods
sarl
mov
or
pop
or
call
loopne
mov
imul
mov
push
sbb
and
or
arpl
and
js
cmpsb
lock
push
mov
movsl
int
cmpb
iret
mov
sub
xor
sub
push
fstp
push
cmp
or
ret
ret
popa
enter
dec
xor
jg
sub
loopne
ret
mov
repz
lock
iret
adc
mov
ja
fidivs
leave
xchg
jge
dec
adc
aam
inc
push
mov
cwtl
cmp
jmp
pushf
mov
cmpsb
daa
in
out
cmpsl
push
inc
ret
dec
jbe
mov
push
addr16
jl
jle
mov
repnz
and
inc
stos
or
aad
add
adc
lcall
pop
adc
mov
scas
sub
movsl
mov
pop
popf
pop
out
xlat
hlt
mov
loop
xor
mov
out
lcall
pop
cmp
out
popa
push
fs
inc
jns
cmpsl
adc
jp
std
sub
lods
aad
or
fidivs
dec
cmp
dec
and
add
mov
stos
ja
and
adc
cmp
lods
push
sub
addr16
mov
cld
mov
gs
and
cld
xchg
xor
push
inc
and
pusha
xor
dec
lahf
lret
jo
jl
inc
jno
xchg
inc
cmp
cmpsb
sahf
jge
adcl
inc
cli
test
insl
or
push
sbbb
jg
sbb
push
cmp
stos
out
mov
pop
pop
mov
push
movsl
push
inc
adc
pop
dec
pop
arpl
jge
jne
pop
scas
push
pop
xor
outsb
xor
insb
cltd
xlat
pop
jo
clc
pop
mov
sub
fs
mov
ss
jns
ds
call
and
int3
ret
xor
adc
adc
add
arpl
jg
dec
sahf
movl
call
cli
stc
shlb
outsl
pop
and
cmpsl
enter
mov
mov
int
cmpsl
cmp
fwait
mov
or
out
and
addr16
jp
mov
subb
or
pop
es
imul
lcall
aaa
push
xlat
adcl
inc
sbb
ficomps
cmp
lcall
push
out
xor
rclb
call
pop
clc
mov
rclb
into
cmp
cmp
mov
pop
jl
popf
pop
add
fisttps
scas
cltd
and
out
jae
sti
fstps
adc
clc
in
dec
xor
stc
and
push
pop
movsl
jae
cmp
inc
jo
ja
jb
sub
pop
in
and
ret
sub
add
das
inc
xor
scas
and
sub
ljmp
sub
bound
mov
rcl
sub
lret
frndint
ret
out
sbb
inc
movsb
cmp
lahf
sbb
sub
mov
jge
sbb
or
pop
push
or
pop
into
cs
or
sub
sbb
dec
ljmp
sbb
loope
jb
mov
pop
in
fbstp
xchg
testb
loop
or
rolb
inc
or
jo
adc
and
cmp
sti
hlt
icebp
pop
cli
sti
shrl
aam
bound
sbbb
xchg
leave
cwtl
push
lods
int3
data16
fisttpll
test
les
insb
mov
cmp
lock
gs
pop
jmp
xchg
bound
inc
movsl
add
add
outsb
cmp
divl
dec
popa
fwait
jl
aas
aad
jae
mov
sub
pop
fucomp
add
decl
cmp
push
pop
incb
shll
xchg
movsb
pushf
sbb
icebp
loop
out
stc
jb
lods
and
add
das
cmp
mov
cli
repnz
stos
sub
adc
fneni(8087
xchg
into
xor
dec
fwait
sub
or
push
in
mov
call
mov
sarb
jns
xchg
imul
cli
xchg
sub
dec
adc
pop
mov
fdivrl
mov
cld
js
xor
ret
addr16
pop
adc
add
ljmp
call
ror
mov
fs
scas
out
popa
sub
aas
fdiv
pop
sbb
out
fadd
pop
sub
or
and
mov
bnd
cmp
call
cld
jp
mov
iret
jne
data16
jmp
jmp
or
adc
loop
xchg
cmp
fadds
or
add
rorl
lcall
xor
or
add
jp
in
dec
les
test
jge
ret
loopne
mov
xlat
mov
rcr
mov
lcall
repz
mov
mov
repnz
movsb
in
lahf
lcall
sbb
jb
add
das
faddl
lret
hlt
jbe
call
outsb
sub
call
jo
test
imul
adc
popf
pop
adc
mov
fimull
xchg
or
push
test
aaa
and
and
out
jns
cmp
and
shrl
add
mov
lret
fnstsw
jno
lcall
pusha
push
xlat
rcrb
orl
leave
dec
jge
icebp
out
sbb
push
cmc
arpl
adc
in
inc
inc
add
scas
adc
push
cld
add
inc
mov
es
ja
mull
push
jg
add
push
jnp
sbb
push
mov
sbb
in
sbb
je
lods
fisubs
shrl
cltd
in
in
lock
dec
add
ja
pop
stc
jae
aam
je
jns
cltd
pop
add
cmp
pop
mov
adc
scas
inc
pop
pop
inc
xor
mov
xchg
inc
push
xchg
mov
add
mov
cld
mov
inc
pop
clc
sub
cmp
aam
popf
mov
fstps
cwtl
dec
jl
mov
pop
pop
mov
xchg
shrl
in
push
enter
aad
mov
imul
jnp
ficoml
inc
mov
cmpsb
pop
pop
stc
jle
fdivr
dec
add
ds
jge
xchg
div
outsl
jmp
bound
aaa
shll
pop
fadds
test
pop
mov
or
push
sbb
or
outsl
std
pop
adcl
jno
sarb
xchg
or
insl
pop
scas
sub
pop
and
mov
movsl
scas
into
mov
push
out
sub
daa
jne
addr16
nop
pushf
popf
mov
inc
jg
movsb
icebp
push
adc
aam
fwait
das
inc
pop
xor
setle
xor
outsb
sub
loop
aam
inc
jbe
sub
jne
stc
in
jb
int3
or
sbb
leave
add
cmp
xor
sar
adc
aas
stos
les
xchg
fisubl
loope
cmpsb
sub
cmp
push
adc
xor
int
jno
js
cmp
les
jg
gs
xchg
pop
dec
or
jnp
fs
fs
pop
jp
testb
fsubr
inc
lds
gs
mov
sbb
inc
bound
cmpb
jg
dec
jno
push
lret
js
adc
mov
dec
jmp
leave
sub
int3
and
jmp
sahf
pop
aad
rclb
mov
rcll
cmp
jg
jmp
add
mov
pop
in
repz
and
fstp
pushf
mov
xchg
jmp
xor
xchg
mov
in
fwait
gs
push
add
in
xchg
inc
cmp
in
push
mov
rcr
jb
sub
ljmp
cli
pop
fcoml
dec
add
cmpl
or
push
push
sbb
lods
mov
xchg
imul
pop
mov
test
dec
std
xor
push
shrl
insl
mov
adc
cmc
fsubr
lods
dec
gs
jo
and
mov
pusha
jae
sub
or
ficomps
les
int3
popa
rol
pop
jne
jae
aas
repnz
dec
ret
mov
mov
cmp
sub
and
hlt
mov
jle
xor
inc
ret
loop
inc
mull
pop
sub
adc
out
fwait
xor
xor
shlb
mov
int3
mov
test
ret
mov
aas
mov
pop
imul
hlt
out
pushf
jp
cmpsb
xchg
pop
leave
loopne
mov
fsts
and
sub
mov
int
ss
push
cmp
fistpl
in
out
jl
sbb
inc
jmp
test
mov
pop
adc
aaa
mov
jge
in
bnd
or
cmp
xchg
stc
popf
pop
arpl
push
sbb
ret
push
das
ja
pop
test
mov
data16
cmp
mov
dec
enter
test
inc
cwtl
xchg
mov
cmp
mov
fcmove
fstps
cmp
xor
pop
aad
fistl
mov
inc
cltd
cmp
pop
es
aad
jp
push
jge
xorb
adc
int3
add
lods
rclb
rol
addr16
sbb
in
shl
adc
repz
jno
dec
subl
pop
fistps
mov
adc
and
in
arpl
xchg
pushf
push
insb
mov
jno
fwait
clc
sti
sub
ret
cld
sub
in
scas
cmp
outsb
xchg
inc
lahf
test
shl
mov
jno
xor
cwtl
pop
movb
scas
or
iret
xlat
jecxz,pn
cmpsb
pop
push
icebp
insl
icebp
inc
ja
scas
xor
mov
shlb
mov
movsl
adc
cmp
loopne
mov
inc
jb
inc
ja
pop
sahf
xchg
or
lcall
dec
xor
mov
nop
pop
cmp
jae
xor
mov
mov
and
fs
mov
mov
add
mov
jg
push
std
cmpsb
ss
ljmp
loop
fsubs
out
in
lea
cmp
fcoms
insl
fidivl
adc
sbb
cltd
insl
imulb
pop
sti
popa
imul
inc
aaa
mov
imull
jecxz
stos
push
scas
mov
aam
xchg
or
xor
mov
stc
rcrl
mov
dec
sbb
cld
sbb
fwait
xchg
popa
cmp
cmpb
daa
push
loope
sub
js
sbbl
mov
aad
nop
pop
nop
cli
pop
imul
rcrb
mov
test
xchg
daa
and
sbb
cli
fld
mov
hlt
jnp
ds
fisubl
js
jp
push
paddusw
cwtl
mov
aad
sub
sti
push
jno
call
mov
mov
and
mov
adcl
cmp
rcr
in
cli
add
push
mov
icebp
xor
mov
gs
jns
loop
aam
cli
or
dec
fwait
aaa
dec
enter
outsl
mov
sub
dec
add
mov
out
fsts
jle
fucomip
out
and
xor
mov
and
fdivrl
pop
mov
jp
nop
jmp
mov
or
xchg
sub
daa
or
in
jnp
data16
xchg
aam
pushf
push
push
dec
xchg
inc
cmp
clc
lods
xor
cmp
sbb
addl
inc
mov
push
cs
inc
aas
or
inc
test
add
push
jecxz
jb
inc
test
sbb
fstpl
adc
mov
sub
sysret
mov
fbld
and
xchg
dec
sub
int
es
xchg
fdivrl
mov
mov
cli
inc
aas
arpl
push
cmc
aaa
inc
insl
add
sbb
fs
pop
cmp
pop
mov
leave
push
movsb
orb
nop
cld
fsubr
xchg
xchg
int
call
ljmp
xor
movsl
mov
mov
adc
xor
outsl
aad
insl
sbb
and
push
js
cltd
xlat
fwait
out
aaa
into
bound
push
xchg
mov
pushf
sbb
rclb
in
cld
cmp
sbb
cmp
fnstsw
faddl
xor
ss
stc
xor
jae
cmpsb
cwtl
jmp
and
aam
nop
sar
push
jecxz
imul
shlb
push
push
push
sbb
jecxz
inc
ja
push
les
das
ret
lahf
sbb
inc
std
cmp
adc
mov
pop
mov
mov
adc
fs
aaa
in
fcoml
pop
push
push
das
notl
sub
movsl
cwtl
adc
cmpsl
mov
inc
or
int3
sub
lcall
aaa
pop
mov
jae
sahf
pusha
pusha
cmpsl
loop
loope
js
jne
or
daa
push
adc
adc
fildll
and
stc
les
fwait
ret
addr16
xchg
adc
pusha
frstor
jecxz
imul
loop
sbb
aaa
loope
test
mov
jns
les
leave
movsb
fstps
cltd
outsl
dec
repz
jb
iret
jmp
jmp
mov
std
bound
pop
xchg
push
mov
xor
out
aad
ret
scas
add
into
js
xor
movsl
insl
mov
adc
jns
mov
inc
sti
add
add
pop
test
dec
sbb
sub
jno
ds
lcall
mov
mov
inc
ret
xor
mov
clc
mov
lcall
cltd
pop
outsl
xor
mov
mov
repz
loope
iret
call
aas
cwtl
mov
pop
push
push
or
leave
sbb
bound
in
mov
pop
adc
dec
ja
inc
cmp
mov
je
pop
push
jb
push
jbe
popa
rclb
sub
adc
cmp
ror
rorl
mov
notl
cmp
test
xchg
xchg
fstpl
rorb
repz
loope
jne
les
add
xor
nop
inc
icebp
test
out
lods
cmpsl
jmp
decl
rolb
inc
fs
lods
mov
add
loop
pop
mov
pusha
popa
std
int
sub
pusha
push
pop
sbb
call
sub
jo
call
push
outsl
adc
out
aad
jmp
sahf
outsl
out
sub
aaa
adc
xor
lret
test
mov
jle
and
xchg
xor
xor
cmc
ffreep
dec
sbb
mov
pop
inc
mov
adc
fwait
inc
jecxz
cs
cmp
cltd
rorb
sbbl
rorl
add
or
inc
push
imul
pusha
sub
stc
stc
pop
fwait
ret
call
inc
jmp
shlb
lods
xlat
mov
aaa
jp
and
mov
sti
shrl
lea
push
lods
pop
jmp
pushf
push
je
push
and
sbb
maskmovq
mull
inc
push
push
xchg
mov
jno
mov
push
jbe
pop
mov
test
add
push
ljmp
mov
cli
pop
or
lar
addl
xchg
lcall
mov
push
insb
push
sbb
sub
inc
test
loope
pop
or
sbb
test
aam
sbb
cmp
jge
lea
or
mov
push
pop
sbb
jo
cmp
push
xchg
pusha
mov
xor
and
fstp
push
lahf
sub
adc
fisubrl
and
adc
inc
mov
mov
cltd
ss
adc
aaa
adc
xchg
jbe
push
lods
ds
push
adc
push
mov
xor
hlt
in
sub
aas
shlb
cmp
cmp
sub
ss
jmp
fistpl
pop
sbb
lods
iret
jge
xchg
outsl
jnp
add
inc
int
sbb
mov
add
addr16
push
xchg
sbb
ljmp
add
sub
add
nop
or
xor
push
mov
gs
loopne
and
or
push
sbb
loop
sub
gs
daa
lods
notl
mov
shlb
mov
pop
mov
scas
or
cld
mov
and
xchg
xor
push
inc
push
pop
cmpsb
sahf
adc
xchg
xor
and
cmp
adcb
pop
xor
dec
sub
jo
add
mov
mov
fld
inc
and
jb
pusha
mov
fwait
stos
out
mov
adc
jmp
mov
pop
dec
cli
icebp
inc
vmread
cmc
dec
ljmp
push
xorb
fstpt
movsl
fidivrl
mov
mov
std
andl
test
cmp
push
or
adc
aaa
popa
cmpsl
shlb
pop
fucomip
ljmp
inc
jno
xchg
add
cmp
cmp
and
ret
add
cmp
inc
or
repnz
ret
jmp
or
stos
push
je
add
lock
stos
std
jne
imul
jg
add
adc
out
fnstsw
les
push
and
aad
jno
lods
das
pusha
add
or
mov
mov
icebp
mov
arpl
imul
lcall
xor
push
in
insb
leave
or
cs
imul
add
add
insb
lret
leave
push
cwtl
imul
mov
dec
in
jecxz
xchg
push
push
aam
scas
aam
jmp
adc
and
ljmp
mov
ds
repz
in
add
sbb
and
fildl
ficomps
out
test
out
mov
insl
test
and
les
call
mov
xor
imul
mov
sub
loope
xchg
cmp
sahf
into
ljmpw
cld
dec
inc
dec
dec
mov
gs
pushf
pop
faddp
mov
sub
repz
mov
data16
outsb
cltd
fcom
out
shrl
lds
in
pop
mov
push
cmc
mov
movsb
dec
rclb
movsl
scas
mov
loopne
fcmovne
ja
gs
movsl
add
movsl
jl
sub
sub
push
ljmp
lods
push
dec
sub
enter
ret
mov
not
lcall
enter
and
fucomip
movsl
pop
movsl
jo
sahf
fidivs
mov
pop
sub
jp
or
arpl
mov
xchg
out
popa
mov
shlb
push
push
gs
dec
cmpsl
xchg
pop
into
fdivl
xor
adc
aad
mov
jb
sbb
ljmp
fstpl
sti
aas
fcmovb
xchg
mov
sub
loopne
fsubrl
xor
or
cmp
xor
out
fildl
inc
repz
subl
pop
fyl2x
test
js,pt
fistpl
popa
mov
xor
jbe
and
pop
cmc
lods
jmp
out
testb
lcall
imul
pop
pop
xchg
pop
rol
fstl
and
jbe
aas
cs
out
daa
and
push
imul
and
xor
scas
call
and
pop
arpl
jg
cmc
jmp
xor
movsl
popf
xor
popf
adc
loop
sub
test
or
mov
sub
jecxz
mov
cli
inc
daa
std
in
lea
jne
lods
cs
add
jb
jg
out
mov
ret
into
mov
shl
repz
and
lods
jne
pop
and
add
fdivrs
arpl
xchg
pop
mov
shrl
fsubrs
mov
test
xor
mov
push
push
shrb
cmc
adc
fdivl
mov
sub
cmpsl
inc
pusha
ret
and
push
push
mov
pop
or
dec
push
das
sbb
xchg
std
nop
fs
add
pusha
xchg
mov
mov
mov
pop
lea
outsb
rolb
call
in
mov
inc
mov
push
out
sbb
idiv
add
insl
aam
sbb
rcrl
sub
mov
fsubrs
and
lods
push
or
mull
data16
push
jb
and
sub
pushf
pop
or
push
idiv
cmp
pushf
subb
fwait
inc
scas
int3
pop
ss
jle
add
arpl
xlat
jl
imulb
mov
mov
mov
add
push
stos
icebp
jmp
inc
scas
std
lahf
in
xor
jo
or
movsl
xchg
imul
ret
push
scas
sbb
inc
stos
push
dec
mov
fucomi
mov
mov
out
mov
jp
jmp
mov
pop
jp
mov
cltd
fcomp
push
jae
mov
or
xchg
push
aaa
bound
pop
add
subl
enter
add
cli
push
adc
loope
and
inc
and
dec
adc
xchg
fbld
mov
sbb
imul
mov
pop
mov
das
add
push
movsb
xchg
psraw
loop
jg
inc
fiadds
lcall
cmc
mov
fdivs
adc
pop
andl
in
jmp
test
jbe
xchg
xor
stos
insl
or
loopne
inc
xor
sub
jns
iret
mov
cmpsl
shl
inc
push
stos
mov
xor
adc
fbld
test
xor
dec
xchg
push
scas
inc
sbb
adc
pushl
fdivrl
dec
adc
loope
push
lds
pusha
fstl
jb
cwtl
push
pop
fadds
xchg
leave
mov
jb
cs
fwait
and
fbld
cmp
pop
sub
addr16
jbe
dec
ds
pop
cli
pop
scas
lret
dec
mov
cs
clc
xor
push
outsl
pusha
cmp
es
or
int
lret
add
int
sub
pop
adc
push
mov
fbld
cs
bound
jns
xchg
and
add
int3
mov
btr
and
jno
adc
lods
dec
xor
imul
xchg
fs
add
xchg
pusha
shrl
lods
xchg
pop
pop
mov
mov
mov
add
movsb
nop
cmc
xchg
in
mov
inc
jg
frstor
aaa
jnp
inc
cld
or
jb
and
cmp
mov
ds
ss
push
xchg
sub
popa
pop
jbe
fcmovb
shrb
in
test
and
mul
test
adc
push
jo
bound
and
or
mov
lods
or
test
ret
fwait
pushf
cli
movsb
popa
and
int3
xor
pop
out
push
mov
push
mov
xchg
push
cld
pop
lcall
cmp
pop
pop
ficoml
test
subb
out
imul
or
je
dec
test
rcrb
imul
out
xchg
jbe
repz
in
iret
test
push
bound
fwait
mov
or
inc
add
enter
xchg
lahf
pop
inc
jb
mov
shlb
push
dec
cmp
loopne
aas
out
xlat
dec
in
adc
fsubrl
insb
or
jecxz
fs
fisubrs
scas
pop
scas
adc
push
mov
push
stos
add
mov
test
rclb
mov
cwtl
adc
shlb
cwtl
fists
out
or
sub
movsl
outsb
test
std
inc
fwait
gs
js
xchg
jnp
outsb
pop
jge
adc
xchg
push
das
shlb
movsb
sbb
daa
add
push
mov
jns
jnp
cmpsb
call
or
das
int
inc
xlat
jle
gs
cmp
iret
test
inc
or
sub
push
xorl
inc
dec
push
pop
adc
out
and
and
ja
in
hlt
or
pop
bound
sub
aas
push
push
test
movsl
outsb
ficompl
fists
add
stos
in
push
jno
sub
mov
mov
pop
fwait
mov
jmp
pop
decb
addr16
ja
mov
ficompl
cld
loope
fsts
fnstcw
or
les
mov
jge
into
lret
dec
cmp
mov
and
addl
cmc
inc
or
sbb
jmp
xor
push
mov
lods
pop
outsb
cwtl
fidivs
adc
cs
push
dec
rorb
int3
lahf
fcoms
rep
mov
lcall
std
mov
test
shll
or
ror
int
pop
cltd
movsb
inc
pop
repnz
mov
jne
shrb
push
mov
sub
jb
in
dec
dec
jp
lcall
rcll
xor
dec
lret
int
mov
pop
xchg
cltd
mov
inc
push
sar
sti
jecxz
loop
in
je
lret
out
pop
into
pop
push
imul
movsb
scas
or
ficoms
inc
in
fs
movsl
xchg
mov
into
jo
cli
imul
movsb
inc
les
and
stos
mov
inc
mov
jmp
ljmp
sbb
insb
mov
dec
aaa
js
arpl
js
jne
ficoms
sub
popf
jmp
fldl
imul
cmp
into
imul
das
mov
cwtl
addb
addl
and
aaa
out
jmp
adc
out
rclb
lahf
and
mov
je
out
mov
lea
push
xor
pop
sub
xchg
or
lahf
std
cmpsl
add
mov
fmull
adc
loope
fidivl
xchg
sub
cmp
jmp
fsubs
push
mull
addl
bound
or
aas
fcoml
xor
stc
jbe
push
out
sbb
pusha
lods
adc
or
jmp
clc
dec
daa
push
fsubl
mov
mov
dec
mov
ljmp
out
xchg
cmp
xchg
out
inc
ljmp
cmp
arpl
mov
movsb
adc
jg
aas
stc
dec
pop
xchg
mov
jl
fimuls
pop
push
out
adcl
out
mov
sti
jno
jg
xchg
dec
into
inc
fdivl
movsl
mov
push
xlat
jno
das
sub
dec
das
das
cmp
ja
xchg
movsl
fdivl
push
rolb
jae
movsl
sub
mov
pop
imul
fstp
push
jmp
xor
or
pop
xor
sub
cld
sar
push
mov
mov
xchg
loop
es
clc
ljmp
adc
into
nop
cmp
jmp
push
mov
sbb
mov
popf
cld
push
lahf
call
push
dec
das
into
xchg
mov
stos
jl
xor
and
jbe
in
insl
mov
dec
add
or
adc
xchg
subl
mov
mov
ljmp
fisubl
dec
test
gs
sti
push
or
or
js
push
std
or
jno
fcomps
btr
pop
and
adc
adc
test
int
sub
mov
cmp
je
outsl
rorl
arpl
loop
sub
loop
aaa
lea
fwait
dec
inc
mov
mov
xchg
xchg
mov
xchg
jle
xchg
push
ret
fmull
push
cmp
or
jae
stc
sub
fucomi
cwtl
cmp
push
in
sahf
or
movsl
cmp
cld
dec
call
mov
les
push
data16
roll
aaa
and
push
lcall
stos
outsl
dec
inc
dec
aam
jl
dec
mov
sbb
and
cmp
jge
sbb
sbb
inc
dec
rcrb
push
repz
pop
outsb
test
cmovne
mov
sahf
push
pop
dec
sbb
fiaddl
divl
lret
xor
loopw
xor
mov
aad
testb
in
loop
inc
or
mov
divb
xor
inc
inc
loopne
add
xor
leave
mov
mov
sub
loope
addr16
and
fs
xchg
call
inc
cli
out
rcrl
in
lods
xchg
mov
stc
xchg
ret
xchg
loopne
inc
mov
test
jl
or
jl
shrd
pop
xchg
out
pop
sbb
push
pop
dec
out
outsb
shrb
and
hlt
aad
jmp
add
dec
mov
pop
jno
loope
dec
lret
mov
push
push
cwtl
push
mov
xchg
lcall
rclb
rcrb
mov
roll
les
addr16
sub
mov
movsl
cmpsb
xor
nop
add
jp
fcoms
cmp
jns
fisttpl
push
jmp
push
arpl
pop
addr16
dec
movsl
daa
push
or
xchg
out
dec
sub
xchg
add
andl
dec
nopl
iret
jmp
int
sbb
loop
jb
push
xor
sub
xor
and
mov
out
ret
add
push
dec
mov
mov
outsb
add
addb
adc
pusha
sub
push
push
dec
aaa
xchg
dec
lods
push
mov
pop
test
sub
lret
sar
enter
sub
mov
cmpsl
adc
dec
sbb
jmp
lcall
pop
jbe
lret
xor
jl
fwait
iret
lods
dec
dec
adc
movsl
imul
out
ror
sub
sbb
mov
ss
mov
adc
xchg
movsb
cwtl
dec
pop
jo
nop
xchg
fs
dec
adc
add
icebp
rcrb
adc
scas
sbbb
xchg
fisubrs
popa
loop
imull
insb
cmpsb
aam
xor
xchg
outsb
cltd
scas
sub
icebp
test
sub
sbb
das
pop
sub
sbb
pop
xadd
cs
sar
movsl
mov
scas
sahf
lret
out
xor
lods
add
sub
ret
fcomi
jecxz
fs
and
ficoml
ficoms
xchg
arpl
fs
adc
inc
mov
push
lret
jge
pop
lahf
pop
jno
fiadds
sbb
cmp
loope
mov
push
jl
inc
lret
xor
dec
push
int3
jl
dec
cmp
mov
aad
inc
jnp
pusha
cwtl
or
ror
mov
mov
adc
jnp
mov
jl
push
jo
ret
mov
cld
outsb
pop
out
pushl
mov
jge
pop
insb
inc
jecxz
pop
or
add
jmp
and
lds
and
cmpsb
mov
xchg
xchg
sahf
mov
aas
pop
sub
mov
test
sub
lahf
sbb
dec
mov
in
jnp
pushf
xchg
mov
xchg
call
sbb
pop
jecxz
test
adc
inc
cmp
das
push
ljmp
les
xor
xlat
mov
jle
mov
mov
addl
or
lahf
testl
cmp
add
lret
adc
fwait
fdivl
xor
inc
loop
cmpl
add
ret
insb
mov
push
pop
shl
push
loop
aas
inc
ret
mov
or
mov
fstps
inc
in
xchg
outsl
mov
sbb
mov
hlt
sbbb
mov
inc
repnz
popa
xchg
aaa
mov
call
mov
push
in
out
cltd
test
fmuls
sbb
bound
jmp
cwtl
mov
mov
or
out
leave
std
lods
pushf
push
mov
inc
push
jge
sbb
or
pop
inc
sti
inc
arpl
mov
in
or
inc
push
sub
jb
pop
popa
mov
int
add
daa
xor
xor
pop
shll
sbb
jno
out
push
push
xchg
push
outsl
std
jmp
push
or
loope
adc
add
add
imul
cmp
dec
test
out
mov
rol
cmpsl
lret
movsl
mov
mov
out
mov
out
xor
xchg
xor
mov
push
lcall
out
mov
ficoms
push
aam
and
mov
inc
imull
sti
ljmp
adc
lahf
lcall
cmp
or
outsl
adc
loopnew
pop
jbe
loopne
ret
sahf
add
lock
or
in
mov
in
jne
sahf
test
xor
out
insb
shrl
mov
mov
rorb
sti
aas
lea
pop
pop
pop
mov
push
jmp
insb
fisubl
aaa
pop
gs
adc
cltd
loopne
xchg
imul
adc
adc
xchg
xchg
push
aas
mov
lahf
xor
pop
xchg
pop
outsl
sbb
or
aaa
push
data16
scas
loopne
ss
fsubs
fwait
sub
scas
gs
outsb
sbb
add
jge
dec
cmp
xlat
adc
insl
data16
inc
push
pusha
lods
push
xchg
inc
inc
cld
rcrb
les
mov
pop
mov
dec
dec
mov
pop
dec
cmp
daa
mov
lret
lret
aad
pop
lahf
sub
sbb
sub
and
cmp
lds
cmpsb
dec
repnz
jne
outsb
call
in
mov
push
lods
lea
push
pop
jecxz
cmp
ljmp
scas
hlt
cmp
xor
xor
cmpl
cwtl
out
add
les
jecxz
mov
xor
lods
jecxz
stos
or
mov
adc
mov
mov
add
xor
cmpsb
cmovne
xor
in
mov
es
or
push
sub
shl
call
jge
push
in
mov
into
mov
aam
std
aaa
popa
cmpsl
les
mov
pushf
pop
mov
jmp
mov
jg
lahf
cltd
jg
xchg
xor
jns
dec
add
mov
pop
adc
ret
cmp
push
jge
jle
lds
and
das
stos
push
xchg
test
add
mov
repnz
add
add
fdivr
ficompl
mov
jae
and
jecxz
mov
int
in
push
clc
icebp
les
mov
int3
or
pusha
faddl
ret
push
iret
or
mov
test
inc
pusha
mov
test
sbb
xlat
pop
adc
xchg
fbstp
cmp
and
rorl
xor
jb
lcall
xor
jbe
lret
cmp
in
xor
test
cmp
sbb
fcompl
push
dec
stos
pop
enter
or
cmc
jns
xchg
lahf
xlat
cwtl
inc
fs
pop
xor
stc
xor
dec
psubw
clc
jnp
mov
push
call
push
cmc
xchg
lods
rorl
lcall
mov
loop
mov
jns
jge
sti
xor
xor
jle
enter
push
sbb
sub
pop
insl
fdiv
dec
lds
sti
mov
sbb
mov
js
lret
add
jg
cld
jl
add
xor
scas
sar
dec
test
loope
fadd
add
xchg
pop
jp
nop
mov
push
add
mov
and
orb
or
lds
or
es
xor
adc
lods
inc
std
fdivrs
iret
jns
mov
mov
lods
shrl
sahf
dec
push
pop
fldt
ror
imul
jae
inc
jb
das
call
inc
mov
cmpsl
and
adc
inc
gs
insb
jp
cs
pop
mov
xchg
addb
inc
mov
dec
xchg
cld
cld
rorl
or
inc
dec
xor
in
xchg
aad
cld
push
fucom
dec
cmp
jmp
adc
pop
mov
xchg
mov
and
es
jl
sub
xor
mov
xor
or
dec
inc
xor
mov
leave
test
ror
pop
fstp
shlb
push
loope
inc
jg
lahf
jmp
insb
push
movsb
xchg
es
ljmp
dec
js
aam
adc
aas
cmpsl
sbb
add
push
and
adc
add
mov
lea
inc
dec
enter
pop
or
push
jp
pusha
int3
fidivl
je
xchg
popa
stos
add
mov
xor
lea
pushl
ss
cwtl
mov
and
nop
sahf
xor
jb
ljmp
xchg
push
cmp
mov
orl
or
shrl
rcrb
adc
into
nop
push
add
icebp
shrl
lods
adc
ret
call
push
push
loop
std
mov
push
popa
das
pop
xchg
ljmp
and
xchg
dec
pusha
insl
mov
fucomp
add
loopne
jecxz
lods
xchg
push
jp
jle
fs
test
test
push
aam
fistpl
mov
enter
mov
pop
sbb
out
pop
pop
adcl
inc
aad
cld
stc
push
fwait
mov
ja
sub
test
pop
xchg
jns
mov
lcall
aas
movsb
test
jae
or
sub
mull
jns
dec
in
scas
cli
inc
and
mov
loope
mov
test
mov
and
sahf
in
adc
inc
movsb
dec
push
or
fcoms
ja
cltd
mov
or
cmpsb
insl
dec
fcmovu
aad
mov
mov
stos
xchg
jle
pop
xchg
stc
mov
imul
push
adc
ja
shlb
jp
stos
add
gs
repz
push
loope
subl
cld
pushf
mov
jg
mov
xor
aam
xlat
mov
and
cld
out
sub
add
jl
scas
jae
jl
stos
cmpsl
xor
jmp
sbb
adc
repz
stos
mov
idivb
movsl
outsb
imul
subl
ds
adc
mov
imul
out
call
imul
pop
mov
sub
inc
and
adc
je
and
sarb
outsl
mov
jp
mov
jl
sahf
mov
fwait
inc
mov
inc
out
sti
add
adc
add
jo
stos
je
dec
out
aas
andl
daa
shl
sbb
in
aam
loop
mov
loopne
dec
es
repz
push
loop
lods
ds
into
lret
mov
pushf
xor
xchg
xchg
adc
jbe
cmpsb
and
jo
sub
stos
lcall
mov
popf
inc
sub
lret
ds
and
cld
ret
fnclex
cmp
ja
mov
sbb
jo
mov
mov
inc
dec
movsl
pop
jae
pop
notb
ret
daa
dec
xchg
dec
lds
stc
push
xchg
shl
dec
in
sub
test
xor
cmpsb
cltd
fldt
bound
mov
adc
enter
dec
ja
mov
xor
sub
int3
out
dec
xchg
test
shrl
push
in
std
push
mov
xor
add
leave
inc
in
sbb
adcb
jle
cld
adc
jle
out
cmpsb
sbb
cmc
and
mov
sahf
fisttps
jp
xchg
push
insl
rcr
add
pop
sub
fwait
jg
xor
sub
ss
ja
and
lret
cwtl
inc
stc
gs
push
pop
mov
das
inc
sti
push
inc
leave
out
lods
sarb
aaa
aaa
jl
aas
adc
lock
add
push
testb
lret
xchg
fsubrp
imul
lret
dec
jecxz
jmp
jo
lock
in
mov
add
fwait
movsb
add
mov
jmp
fwait
xlat
add
aam
std
mov
sub
fs
test
ljmp
clc
adc
adc
add
cmpsb
scas
popa
adc
dec
adc
es
xchg
xor
leave
jle
jnp
push
clc
xor
pop
push
aad
adc
jbe
sbb
inc
mov
or
int3
rcll
xor
in
iret
fnsave
hlt
cmp
jle
or
sarb
push
and
stos
int3
push
cmc
inc
push
es
rorb
das
push
out
sbb
fs
and
pop
add
mov
mov
pop
fwait
dec
pop
out
mov
lahf
int3
and
jmp
fldl
dec
rclb
cmc
imul
pushf
loopne
mov
in
rcll
jae
es
mov
inc
xchg
jle
mov
sarb
dec
push
movsb
insl
cs
cmp
mov
bound
jb
add
flds
aaa
dec
popa
or
aam
repz
lods
push
mov
sub
and
cmc
add
sbb
jb
rolb
ret
sub
mov
mov
mov
cmp
in
mov
je
int3
mov
cld
mov
push
idivl
sbb
or
jmp
test
jmp
popf
sub
inc
sbb
fdiv
push
adc
add
stos
test
daa
mov
sbb
dec
push
push
add
inc
add
jno
movsl
cltd
in
orl
iret
mov
fisttpl
mov
lds
cwtl
sub
cwtl
pop
push
lret
jbe
in
insl
sti
lods
add
pop
adc
and
or
dec
or
jae
stc
jo
fistl
push
adcl
cmp
mov
addr16
push
ret
enter
mov
std
sbb
lret
insb
jae
pop
jmp
inc
mov
cmc
pushf
push
lret
scas
cmp
out
in
push
sbb
dec
mov
repz
addl
cmpsb
cld
aad
addl
sbb
cmp
and
jecxz
and
cs
lret
xchg
js
cmpsb
movsl
mov
lret
jae
out
aad
sub
iret
xor
fisttps
pusha
mov
ds
shl
mov
imul
or
push
adc
add
jbe
push
lods
aam
pop
add
push
fs
xor
lahf
mov
shl
arpl
sbb
out
rolb
mov
mov
test
out
mov
fadds
add
mov
ja
mov
sub
stos
sbb
or
xchg
mov
orb
jg
mov
push
mov
lahf
out
cmp
imul
mov
ss
nop
xchg
arpl
cmp
mov
les
mov
popf
lcall
sbb
cmp
aam
movb
jecxz
int
mov
xchg
rorl
cmp
pop
jp
int3
cmp
shlb
std
ret
push
sahf
pop
mov
aas
outsl
into
push
pop
push
mov
sarl
loope
pop
xchg
rorl
xchg
pop
push
in
jo
cs
rorb
jg
lahf
mov
adc
xchg
push
sbb
das
ret
sbb
in
pop
pop
mov
loope
scas
inc
rorl
cmp
jle
stc
dec
dec
xchg
push
push
lahf
jge
leave
test
jae,pt
cltd
test
popa
std
lret
add
dec
mov
and
mov
dec
xlat
ljmp
add
pop
xor
test
lea
cmc
cmp
cmp
sub
inc
mov
mov
push
jb
and
add
nop
pop
xchg
sbb
ficoms
into
ds
jo
push
filds
in
dec
pop
xlat
pop
pushf
xor
pop
mov
adc
jb
jg
push
cmp
jae
push
rcrb
add
in
mov
push
roll
fcmovnb
mov
dec
mov
mov
int
sti
pop
rolb
je
xchg
push
dec
xchg
pusha
or
cmp
hlt
hlt
mov
aam
arpl
pop
mov
pop
sti
mov
sbb
sarb
xor
stos
push
adc
dec
nop
fisubs
test
fstpt
fmulp
movsb
and
out
and
cs
lahf
loopne
lock
jns
mov
ss
out
ret
cmp
jbe
imul
out
or
fiaddl
pop
out
sti
call
jbe
dec
inc
in
std
and
imul
clc
jo
mov
clc
inc
enter
jecxz
sbb
xor
dec
cmp
pop
leave
imul
jo
jmp
nop
xor
pop
leave
out
dec
into
push
test
in
cmp
mov
lret
test
js
bound
mov
hlt
sub
pop
or
pop
repnz
movsb
fsubrs
mov
cld
cmpsl
aas
inc
sub
bound
add
mov
movsl
or
data16
push
cltd
std
mov
sarb
daa
imul
jg
in
les
ljmp
add
sbb
push
adc
mov
jo
mov
je
mov
add
lret
dec
jno
mov
jb
je
popa
sahf
mov
fists
or
adc
push
js
mov
outsl
shll
insl
inc
fmull
fucomi
pop
addr16
movsb
shll
inc
gs
mov
or
repz
push
sarb
jbe
adcl
mov
lea
jno
or
and
cs
pop
loopne
int3
sarb
mov
enter
stc
dec
outsb
test
dec
xor
fs
add
mov
arpl
jle
leave
mov
push
ret
andb
shl
call
jb
jbe
and
pop
xchg
mov
icebp
stos
les
int3
or
push
decb
sbb
in
flds
xchg
into
addr16
push
lret
mov
adc
jle
fisubl
pop
leave
mov
inc
ja
dec
iret
jne
mov
mov
xchg
mov
daa
and
xlat
ret
sub
push
hlt
cli
jmp
mov
add
mov
xor
movsb
jae
push
mov
jle
xchg
mov
xchg
mov
inc
mov
push
stos
pop
or
imul
imul
and
aas
std
hlt
xchg
movsb
imul
pop
jmp
cmpsb
mov
or
sub
mov
inc
aaa
dec
push
ret
pop
scas
jecxz
xor
cli
je
jp
push
test
cmp
imul
scas
xor
scas
push
std
mov
mov
mov
pusha
sub
arpl
sbb
repnz
imul
popa
adc
adc
test
ljmp
push
and
push
xchg
mov
jae
cmpsb
ror
fwait
imul
push
mov
cld
scas
sbb
mov
orl
loope
inc
cmpl
cmp
scas
xchg
or
clc
mov
push
rcrl
bound
xorl
or
xchg
push
mov
sti
sub
incl
in
stos
scas
stos
lods
push
jg
js
shll
test
outsl
stc
loop
sbb
in
xor
roll
sub
and
jne
lods
shrl
sbb
or
in
xchg
push
dec
into
insb
lods
cmp
adc
mov
in
adc
jl
pop
fimull
jge
aam
sarb
mov
test
dec
mov
ret
xor
xor
fwait
lods
inc
add
mov
fwait
jnp
mov
fidivs
addr16
jecxz
jl
jl
sbb
mov
loopne
nop
insb
roll
inc
pop
cmp
mov
imul
cmp
dec
mov
sbb
and
les
outsb
lea
jmp
push
jb
divb
xchg
mov
ja
sbb
sub
scas
pop
cs
idiv
adcl
inc
insb
cltd
push
sub
mov
iret
aam
lahf
loop
xor
xchg
jns
push
mov
sub
inc
stos
pop
adc
stos
dec
iret
ja
mov
xchg
test
inc
pop
fimull
sbb
cltd
fs
and
xor
jmp
dec
dec
or
mov
bnd
sub
fcomip
faddp
cmpsb
jbe
sbb
and
je
cmp
jmp
jno
or
rcrl
or
loop
xor
pop
push
jne
jge
sub
imul
dec
push
push
mov
fnstsw
dec
mov
mov
sahf
push
inc
add
sbb
lods
movsb
sarb
xor
ret
dec
dec
push
jne
cmpsb
xlat
and
scas
enter
dec
mov
test
mov
and
xchg
and
xor
lock
sbb
xlat
jp
adc
scas
and
xlat
mov
outsb
and
inc
mov
mov
pop
pop
dec
sbb
sarl
icebp
jmp
mov
sub
sbb
dec
pop
lret
inc
cmpsb
cmp
andb
in
lret
xor
push
push
jg
mov
xlat
sbbl
rorb
mov
ret
je
mov
xchg
pop
and
and
mov
popa
faddl
adc
bound
ret
add
out
sub
sahf
daa
pop
jbe
jo
hlt
pop
cmp
mov
sub
pop
fnsave
xchg
pop
int3
adc
mov
mov
sub
and
pop
dec
inc
cmp
cmp
std
int3
or
aam
iret
loope
adc
xchg
int3
ja
or
jbe
dec
hlt
repnz
pushf
addr16
scas
pop
and
sahf
leave
dec
mov
cltd
addr16
js
push
daa
push
inc
push
cmp
push
add
loope
mov
mov
xchg
lret
pusha
aam
jge
and
cmp
bound
mov
fbstp
pop
jnp
lods
push
adc
cli
push
daa
mov
test
mov
rorb
sub
mov
movsb
sub
repnz
cmp
sub
es
icebp
mov
cmp
push
out
jmp
sbb
shll
test
repz
push
push
jmp
cwtl
cmp
dec
aas
or
sub
adc
and
push
imul
pop
orb
add
loop
das
push
cmp
xlat
mov
sbb
mov
lahf
rcl
jmp
mov
adc
js
loope
out
jl
cld
dec
enter
ds
sub
stos
out
nop
int
or
lds
mov
sbb
fcompl
xor
aam
xchg
push
fistl
insl
mov
test
xchg
push
pop
rcr
arpl
fwait
inc
test
shlb
adc
lds
fdivrl
cli
rclb
or
mov
stos
out
mov
arpl
vmwrite
les
filds
sarl
sti
mov
lock
into
cmp
and
fimuls
mov
sahf
test
cwtl
fisttpl
cmp
cmp
mov
aas
jle
xor
std
cmpsb
les
jp
loopne
call
icebp
add
adc
lods
hlt
adc
in
add
data16
adc
dec
mov
pushf
int
pop
push
or
pop
add
test
mov
push
pop
add
fmull
jne
or
sbb
bound
jmp
jmp
jle
jno
xor
push
adc
mov
mov
jl
pop
aam
bound
fsts
push
mov
inc
cltd
xor
xchg
fldl
adc
mov
push
dec
mov
addb
ret
into
sub
mov
pop
or
jge
adc
ret
pop
imul
add
dec
dec
dec
and
shrb
inc
mov
js
cltd
push
and
mov
mov
shr
mov
jbe
xor
xor
ret
cmp
ja
pop
push
sarb
ss
sbb
jge
leave
mov
xor
fmulp
or
mov
icebp
pop
xor
int
nop
fwait
bound
std
cmp
subl
push
mov
data16
lcall
mov
mov
pop
mov
scas
fisubl
out
lahf
enter
inc
mov
into
aaa
rcrl
sub
sbb
cld
outsb
pop
or
cs
lret
fs
loop
pushf
xor
mov
pop
xlat
adc
out
xlat
mov
dec
int3
repz
outsb
add
out
rclb
and
cmp
mov
outsl
pushf
pop
push
lcall
in
hlt
mov
xor
and
sub
or
dec
and
mulb
xor
add
movsl
xchg
cmc
pop
lret
out
mov
pusha
cmp
nop
sbb
enter
dec
call
adc
xor
jmp
xor
mov
imul
insb
ds
scas
andl
repnz
mov
aam
pushf
lods
scas
mov
cld
inc
cwtl
insl
repnz
lods
dec
push
fs
cmp
clc
div
mov
int
fldcw
outsb
into
jns
ds
or
mulb
xor
das
andb
fcomps
dec
test
pop
stos
mov
adc
mov
js
adc
scas
add
mov
or
clc
xor
xchg
lods
ja
mulb
into
jmp
nop
inc
add
mov
cmp
inc
std
cmp
mov
push
mov
data16
xchg
scas
sub
aad
mov
mov
lcall
add
cmp
outsb
nop
sbb
mov
mov
lea
add
mov
addr16
push
mov
and
xlat
mov
jo
jo
in
stc
xchg
push
jo
jl
cmpsb
iret
fbld
inc
loop
pop
mov
mov
sbb
ret
out
jo
sbb
push
adc
push
push
mov
cli
inc
dec
xchg
gs
inc
mov
push
sar
loop
popa
fidivrl
int3
leave
mov
or
cmpsl
test
pop
das
shll
inc
lret
jle
mov
dec
add
pmaxub
push
gs
pop
stos
fimuls
jne
gs
dec
mov
push
fidivs
mov
out
cmpsb
scas
jne
mov
arpl
idivb
mov
jae
dec
sahf
pop
hlt
in
dec
data16
in
dec
scas
dec
bound
inc
lock
mov
fcompl
push
dec
aaa
sahf
sbb
add
insl
jp
flds
mov
and
xor
and
pop
pop
add
mov
ficoms
mov
push
outsl
pop
pusha
stos
les
cmpsl
jnp
loop
imul
dec
jge
mov
xlat
dec
dec
or
mov
test
gs
or
test
jl
xchg
js
repnz
lea
aaa
div
pop
push
popf
je
les
inc
dec
pop
fstps
sbb
in
ret
imul
cmp
add
pop
inc
adcb
inc
fstl
push
movsb
xor
fistl
pop
mov
pusha
and
inc
jle
adc
jg
int3
xchg
push
add
xchg
lcall
or
dec
xor
xor
rclb
mov
pop
adc
loop
insb
sarb
fs
mov
jbe
xor
push
inc
mov
in
sub
sbb
lds
mov
sbb
dec
mov
test
inc
inc
clc
jno
ret
enter
dec
add
call
rolb
cmp
aad
lods
into
std
push
ret
nop
insl
popf
fcomps
mov
into
dec
lods
js
daa
out
shrl
movsl
daa
cmp
inc
lret
pop
pop
or
mov
aaa
pop
mov
fists
lods
cltd
xor
mov
jp
xorb
out
fwait
cmp
pop
imul
inc
pop
and
mov
or
ficoms
int3
bound
push
sub
push
cmc
fisubl
fnsave
sbb
mov
xor
imul
jg
sbb
push
nop
mov
arpl
test
mov
sub
std
aam
or
push
es
mov
push
inc
mov
pop
outsl
lahf
mov
jp
dec
addr16
test
ret
cmpsl
inc
jmp
addb
dec
cmp
or
popl
jle
lcall
mov
add
fxch
mov
or
xor
out
rolb
imul
in
add
gs
mov
xchg
mov
sbb
movsl
and
cmp
or
add
stc
cmp
inc
aas
mov
bound
lock
cmpsb
and
add
inc
lods
push
jp
xlat
pop
sub
dec
hlt
mov
mov
sub
pop
sbb
sar
lcall
loope
dec
shrl
orl
xlat
cltd
fsubrs
jl
xchg
mov
fsubl
pop
add
sub
cmp
push
mov
inc
push
mov
jae
fsubs
and
adc
aad
stos
mov
imul
push
int3
js
das
inc
idivl
and
aam
clc
fdivs
xlat
and
jns
xchg
lock
aaa
ss
pop
lahf
lahf
sbb
pop
or
xor
bound
ss
clc
mov
push
shl
pop
int3
xchg
jg
sbb
xchg
mov
out
cmp
jae
mov
inc
sub
add
inc
popa
or
and
inc
fisubl
xlat
xor
test
push
cwtl
or
and
jbe
jecxz
push
xor
daa
sbb
mov
pop
fs
jb
jae
xlat
or
dec
test
fmul
or
shl
cltd
xchg
mov
cmpsb
dec
add
push
ret
arpl
lods
xorb
fnstenv
popf
les
dec
mov
xor
pop
int
or
inc
pop
pusha
jbe
and
js
or
mov
xchg
insl
scas
mov
jge
imull
out
sbb
push
add
xor
jns
out
and
xchg
adc
scas
xchg
movb
or
jmp
sub
sub
inc
jnp
nop
mov
jg
jb
enter
pop
inc
push
sbb
xor
enter
cmp
repnz
add
shrl
mov
lret
sahf
push
fisubrl
bound
sarl
mov
std
xor
xlat
addb
into
xchg
push
inc
div
cli
jmp
pushf
mov
cmc
jns
mov
or
jne
imul
iret
adc
int
cli
hlt
in
inc
or
mov
jbe
outsb
out
adc
xchg
cwtl
stos
sub
jnp
cmpsb
and
jne
mov
lock
stos
mov
or
shll
in
test
fsubl
jnp
movsb
pop
in
popa
bt
adc
int3
lods
cwtl
mov
scas
imul
nop
dec
dec
cld
popa
sub
and
sbb
dec
sbb
inc
aas
fstpt
xchg
or
ss
movsl
mov
dec
repz
sbbb
pop
cmc
push
imull
insl
inc
adc
or
iret
ror
scas
push
cmp
int3
mov
in
xor
daa
fildl
out
ffreep
mov
xor
push
cmpsl
xchg
sub
adc
out
jae
hlt
push
fildll
test
and
mov
call
and
push
test
xor
xchg
je
jg
dec
stc
pop
in
mov
insb
in
fs
daa
mov
sbb
xchg
sub
out
and
popa
outsb
and
inc
inc
stos
in
fwait
pop
inc
nop
mov
imul
orb
cmp
sbb
push
ja
aas
or
add
cmp
and
lahf
dec
hlt
inc
fdiv
sub
dec
mov
pop
pop
pop
xchg
dec
pop
and
pop
xor
sbb
inc
ret
lea
lods
cwtl
lds
insb
pop
adc
jnp
inc
sbb
xchg
inc
xchg
stc
jae
andl
fsubrs
mov
xor
pop
adc
push
shll
push
enter
xor
and
idiv
aad
sub
cli
test
mov
sub
and
sbb
sbb
push
out
setnp
push
adc
cld
test
out
adc
and
jbe
jb
cmp
out
adc
adc
inc
cs
xor
inc
cmp
insl
aas
outsl
sbb
call
mov
mov
xchg
enter
movhlps
sub
push
pushf
cltd
sub
adc
testb
ds
push
jo
inc
lret
cmp
hlt
xor
cmp
adc
hlt
xchg
cmp
mov
aas
pop
jl
inc
iret
inc
iret
sub
pusha
xor
adc
outsl
cld
out
pop
push
data16
repnz
ljmp
sbb
mov
xorb
mov
inc
pop
cmpsl
imul
push
sub
fdivs
test
in
icebp
xor
int
faddl
pop
dec
les
pop
ret
mov
arpl
sbbl
movsl
jecxz
es
pop
pextrw
inc
int
fwait
push
fs
push
sahf
mov
and
jo
mov
xchg
mov
jmp
push
push
outsb
popa
daa
lods
mov
jmp
in
inc
aaa
xchg
frstor
mov
mov
outsl
adc
xchg
in
idivl
fwait
negb
test
dec
lock
mov
es
mov
sub
dec
rcl
pusha
and
loopne
arpl
adc
mov
andl
addr16
popf
sbb
dec
and
pop
cmc
out
fsub
add
imul
jo
repz
push
cmpsb
mov
stos
jne
adc
push
adc
cs
es
orl
lods
push
fs
xchg
icebp
push
push
push
xchg
dec
cld
mov
jae
dec
cmp
sbb
in
rcr
std
add
movsl
insb
andb
jno
xchg
pop
aad
test
sbb
je
sbb
adc
push
lahf
cmc
pusha
icebp
jns
leave
add
inc
pop
dec
push
loope
mov
loop
and
mov
dec
aam
mov
xor
sbb
inc
jecxz
mov
mov
mov
cmp
mov
pop
mov
stc
pop
dec
insl
imul
mov
repz
mov
mov
popf
fs
inc
clc
push
push
psubusw
aaa
lods
and
mov
pop
mov
xchg
test
mov
out
std
mov
in
in
jl
ja
push
sub
lods
aas
out
dec
std
inc
inc
je
stos
push
jge
fcompl
fwait
cwtl
ds
mov
sbb
mov
pop
out
sarb
pabsb
dec
sbb
xchg
cmpsl
cmpsl
cmp
xor
inc
icebp
xor
xchg
arpl
sbb
mov
push
loopne
cmpsl
jo
scas
pop
jb
mov
leave
and
xchg
xchg
popf
xor
mov
std
jno
mov
and
push
fnstenv
out
aas
xor
mov
pusha
pop
xor
daa
xor
mov
push
jo,pn
ds
mov
std
or
xchg
sub
cld
lea
and
test
movsl
mov
sarb
sbb
push
icebp
clc
push
adc
adc
xor
dec
lods
jnp
xchg
pop
push
mul
add
and
cltd
mov
lds
xchg
loop
fcoms
mov
pop
xchg
ret
ret
cmpsl
xor
lret
push
ret
gs
adc
das
je
mov
bswap
inc
jns
pop
xlat
mov
les
stc
data16
cmpsl
dec
xchg
out
lods
xchg
mov
mov
adc
ret
sbb
pop
stos
jb
call
mov
xor
sub
xorl
or
inc
arpl
xor
sub
mov
lods
and
xor
adc
xchg
inc
idivb
andb
or
inc
stc
jmp
fs
jmp
pop
pop
bound
xchg
sub
pop
test
test
mov
adc
stos
stc
pop
jmp
rolb
int3
pop
sub
std
jo
insl
mov
notl
std
sub
bound
sub
push
and
xchg
inc
ljmp
mov
test
push
mov
aam
xor
iret
mov
jmp
mov
or
shlb
push
js
arpl
loope
jne
push
pop
xchg
cmp
mov
pop
add
out
jmp
or
sbb
imul
lock
xchg
mov
fwait
sbb
in
xchg
in
sbb
sahf
xchg
test
push
cwtl
ret
inc
mov
mov
imul
and
cmpsb
jbe
mov
mov
fisubl
pushf
js
cmpsl
inc
adc
jmp
add
pop
in
cld
jno
mov
sub
mov
bound
add
pop
and
mov
xchg
shl
pop
xchg
clc
mov
test
cmp
in
pop
inc
add
push
test
rorb
jo
mov
sbb
bound
fbld
aaa
mov
add
sti
sbb
pop
iret
ja
mov
mov
std
mov
sti
rcrb
mov
and
fimuls
gs
mov
sub
pop
addr16
lret
push
fs
jae
add
jne
push
shrl
push
push
mov
mov
enter
jmp
mov
out
in
xor
filds
cmpsb
int
cmpb
mov
imul
xor
mull
jmp
and
fsubs
lret
enter
rolb
cmc
addb
test
jbe
outsb
mov
aad
lea
repz
sbb
pop
pop
fidivrl
hlt
sbb
jp
fs
adc
or
lds
les
inc
sbb
test
and
int3
stos
adc
push
loope
arpl
xchg
hlt
fwait
or
jl
je,pt
fimuls
sbb
loopne
push
xor
std
adc
bound
xor
jne
or
insb
lret
loope
fidivrs
dec
mov
hlt
shll
sbb
jecxz
pop
jp
rol
cmpl
mov
dec
jo
faddl
sti
pinsrw
mov
xor
and
adc
ljmp
fdivl
cmp
jecxz
test
shlb
mov
cli
fs
data16
add
nop
push
inc
xchg
push
and
cmp
or
dec
fidivrl
jns
fcom
lahf
fcmovb
dec
out
lods
dec
sub
stos
mov
sarb
sub
sbb
int3
xor
adc
repz
jle
and
lds
stos
notb
xchg
test
shll
leave
jno
inc
jnp
pop
stos
movsb
es
leave
fsts
adc
test
punpcklbw
in
adc
mov
test
push
mov
push
cmp
iret
sub
inc
add
lret
pusha
xor
popf
fnstenv
dec
mov
clc
or
test
xlat
mov
mov
jae
pop
xchg
xchg
jle
dec
fdiv
inc
pop
push
xor
inc
insl
xchg
pop
sbb
push
mov
and
pop
int3
jns
lock
inc
sub
addb
sti
add
repz
imul
push
add
sti
aam
xor
test
pusha
and
jle
or
idivb
push
sti
mov
flds
xor
cli
cmp
scas
mov
rcr
enter
and
xor
sbb
leave
jo
xchg
jmp
or
loop
sbb
loop
xchg
mov
bound
in
or
sbb
and
sti
clc
stc
xchg
hlt
mov
adc
xor
test
loop
gs
leave
pop
dec
cmp
mov
in
movsl
stc
in
mov
pusha
adc
jmp
bound
pop
mov
and
out
out
js
and
cmp
jae
into
push
mov
push
js
test
push
push
push
adc
ret
mov
jnp
hlt
mov
fwait
mov
ss
ds
dec
add
mov
add
repnz
mov
jg
lret
add
mov
je
adc
repz
sbb
and
xor
repz
xchg
mov
rol
xchg
sti
mov
mov
lock
std
rcll
loopne
les
insl
es
xlat
xor
cltd
xchg
xchg
inc
pop
xor
mov
push
or
sub
and
cmp
call
lret
xor
dec
cmc
cmp
mov
cmp
lret
data16
dec
add
push
add
and
popa
inc
add
sbb
dec
sti
xchg
and
pop
ret
sbb
push
and
dec
xor
or
push
xor
and
add
sahf
test
lret
mov
fildl
rcrl
sbb
aaa
dec
sbb
sbb
xchg
add
sbb
lret
add
out
inc
mov
sub
xlat
movsl
and
adc
inc
leave
je
leave
loope
adc
popf
lcall
ficomps
cmp
fldcw
ret
sub
pop
xchg
in
popw
sub
in
insb
fstps
inc
mov
cmp
bound
cmp
pop
mov
inc
inc
mov
mov
fwait
in
xlat
xchg
pop
adc
fisttps
or
add
stos
lret
mov
jl
jge
scas
jg
je
mov
dec
mov
adc
imul
ret
addr16
mov
movsl
mov
repnz
pop
test
push
or
mov
xor
push
sub
cmp
jae
pop
sbb
fildll
and
je
push
pop
lea
nop
popf
dec
pop
out
cmp
sub
enter
push
test
shlb
sub
or
lret
mov
ffreep
jns
lods
shr
mov
test
sahf
js
dec
in
push
int
xchg
fs
test
aaa
mov
cltd
jmp
mov
add
scas
sbbl
mov
or
inc
mov
pushf
xlat
mov
fldl
es
das
ljmp
push
cmpsb
not
push
lock
mov
add
inc
mov
lret
add
sar
jae
cltd
push
sbbl
inc
jmp
aam
pop
xchg
fsubrs
js
outsb
negl
xor
notl
and
sub
lods
and
fcoms
test
xchg
out
sub
push
jb
std
pop
test
cs
roll
push
pop
inc
dec
mov
cs
push
lret
lods
mov
xchg
push
jns,pt
js
adc
and
jnp
in
jge
push
mov
sahf
std
nop
xor
les
shlw
push
mov
xor
mov
das
jle
adc
xchg
sahf
sub
cmpsl
aas
fsubp
fstl
sub
add
sahf
sbb
and
cwtl
jnp
adc
out
fcoml
inc
mov
sub
push
mov
cmp
xchg
ja
movsb
cmp
push
mov
lcall
mov
pop
and
in
ds
cmc
mov
adc
cmc
cld
movl
dec
push
test
and
sbb
sbb
mov
cmp
mov
idiv
mov
jmp
mov
jae
dec
sti
adc
imulb
push
or
hlt
movsl
jg
jmp
sub
into
xchg
cmp
scas
jl
dec
fidivrs
inc
ds
dec
movsb
push
pushf
push
inc
mov
cli
ds
dec
or
push
add
mov
outsl
imul
leave
and
mov
jge
dec
int
insl
sbb
sub
addr16
add
inc
xchg
pushf
mov
out
push
in
add
mov
add
repz
outsl
pop
ret
inc
loope
or
aam
iret
stos
js
out
and
push
loop
movsl
cmovp
adc
push
inc
push
inc
jmp
dec
jp
sbb
ret
and
popf
repz
test
xchg
cld
jle
mov
jae
jbe
std
mov
ret
push
inc
dec
xor
fistl
push
sub
in
test
movsb
mov
sbb
and
mov
push
mov
jg
and
inc
into
in
icebp
outsl
push
int3
loop
inc
ljmp
inc
inc
sti
mov
or
fbld
ret
push
or
cmpsb
pop
fmul
mov
jb
es
fists
enter
xchg
nop
adc
xor
fsubr
push
outsb
mov
jl
mov
mov
mov
ret
and
in
bound
mov
mov
add
in
cwtl
mov
stos
andb
mov
jbe
icebp
sbb
popf
pop
add
hlt
xor
repnz
clc
or
loopne
lds
jg
mov
ds
add
fcmovnbe
push
jle
sbb
cmp
mov
sub
fists
jle
mov
cmp
in
mov
popf
xchg
out
enter
pop
cmpl
fldl
xchg
or
cmovs
cs
clc
insb
rcrl
lahf
xor
mov
icebp
add
jns
push
mov
dec
test
xor
push
leave
push
subl
inc
cmp
int
es
mov
xor
dec
js
inc
jecxz
repz
in
inc
addr16
adc
mov
jb
pop
jo
dec
fisttpll
mov
fadd
loop
jle
or
in
rolb
aas
lea
adc
ret
in
sub
popf
mov
inc
xor
das
fs
adc
push
dec
push
idivl
test
dec
xor
or
scas
subl
aad
repz
ja
add
pop
mov
jo
inc
push
sbb
into
stos
rorb
pop
push
and
jmp
cmp
pop
lds
daa
dec
xor
sti
sbb
daa
mov
clc
mov
dec
cltd
fcomi
iret
mov
xadd
jp
pop
rcrb
fidivs
int
cmp
les
sub
pop
sub
fldenv
xor
lahf
jp
and
pushf
xorl
insl
mov
popf
out
dec
cmc
pop
lahf
cmp
pop
clc
aam
dec
ljmp
cltd
imul
fwait
jbe
and
stc
insb
add
add
push
into
in
outsl
out
adc
imul
inc
popl
das
fisttpll
sbb
outsb
pop
sbb
cmp
inc
push
dec
stos
mov
mov
sbb
test
cmpb
out
clc
fcoms
mov
testl
orl
lea
push
adc
fsub
out
mov
lds
and
xchg
inc
sarb
enter
aad
cmp
pop
xor
push
push
fists
sbb
icebp
or
adc
pusha
dec
rolb
mov
push
xor
xlat
jo
imul
loopne
and
jne
dec
mov
fimuls
pop
xchg
sbb
inc
push
scas
sub
jae
rclb
xlat
jp
and
push
loop
jl
cmp
sub
mov
push
fwait
pop
inc
movl
rolb
cmp
xchg
jae
cmc
mov
hlt
xor
push
repnz
mov
std
stos
dec
add
outsl
ret
into
repz
fs
fcoml
andb
shlb
loop
scas
outsl
adc
pop
sbb
mov
xchg
scas
jbe
push
rorl
call
je
cmc
mov
in
fstps
sahf
xchg
lods
pop
add
mov
std
rcll
sub
jae
or
lahf
mov
push
mov
lret
addb
cmp
xchg
hlt
lea
adcl
mov
imul
dec
ja
in
mov
pop
mov
bound
loop
sub
fiadds
shll
or
cli
cmp
out
roll
dec
flds
adc
movsl
jbe
ja
pop
mov
dec
adc
rcr
inc
arpl
xlat
push
or
add
or
fmull
shrl
in
shll
push
ficomps
xor
push
push
into
cld
xlat
scas
add
jmp
cmp
es
mov
out
nop
jg
in
popf
pop
mov
inc
jl
loopne
movsb
sub
dec
hlt
mov
push
dec
adc
jmp
andb
sbb
pop
jno
pop
fwait
xor
roll
idivl
cmp
xchg
pusha
or
ss
lret
or
in
inc
push
jg
in
cmp
sub
dec
and
addl
mov
push
shll
data16
xchg
sahf
adc
adc
sub
jno
das
and
add
lcall
sarb
jno
cmp
cmp
jge
call
into
ljmp
fsts
jae
js
and
or
and
pop
ret
aas
ret
ficomps
push
out
out
mov
add
jae
fdivrs
mov
or
cmp
pushf
mov
stos
mov
mov
adc
and
and
repz
dec
cmp
jmp
or
jnp
push
ret
cmpb
js
test
repnz
mov
pop
cwtl
push
sahf
pop
lret
je
or
stos
jle
imul
sbb
popa
inc
aas
int
jbe
bnd
mov
xor
xchg
aad
iret
ljmp
jp
xor
mov
fsubs
add
lock
into
fcoms
jle
mov
in
test
push
inc
mov
mov
xchg
popf
cmp
adc
pop
sbb
fmulp
pop
pop
sbb
xor
and
adc
sbb
and
push
insb
sbbb
imul
mov
jl
mov
xchg
mov
test
jb
mov
fsubl
add
dec
push
fldt
arpl
outsb
ljmp
mul
lock
push
jmp
dec
adc
and
loope
js
add
scas
cmp
js
and
enter
sbb
adcl
sub
push
orl
inc
dec
xlat
jl
xor
lods
inc
aad
les
xchg
lds
insl
cwtl
pop
pop
rcrb
add
inc
in
push
push
push
xlat
roll
idivb
cltd
movsl
ret
in
sahf
mov
and
mov
fidivl
push
movsb
movsb
mov
lods
adc
repz
pop
sub
ljmp
inc
xchg
inc
ret
mov
stc
xchg
dec
ficoml
cmpsl
pop
jg
jae
lds
dec
pop
pusha
xchg
cwtl
xor
arpl
mov
cmpsb
cmpsb
out
jg
out
dec
dec
call
push
mov
sbb
push
scas
gs
jmp
fwait
sbb
int
pop
mov
mov
cmpsl
push
add
lret
cmc
lcall
popa
fpatan
xchg
xchg
icebp
and
jnp
movsl
insl
sub
and
pop
mov
push
stos
push
arpl
jl
dec
and
jne
scas
adc
cs
push
fstp
jg
into
or
inc
mov
xchg
adc
push
mov
es
xchg
jecxz
sti
cmc
and
pop
xorl
mov
icebp
in
sub
pop
rcll
rorl
add
inc
shll
mov
mov
mov
sub
fsubrp
add
xchg
jae
lahf
mov
push
xchg
ja
mov
addr16
mov
nop
xor
add
in
lea
pop
out
jae
mov
clc
out
cltd
pushw
cmp
insl
sbb
dec
and
pop
mov
xchg
xchg
jge
pop
dec
ret
aam
cmp
test
pop
mov
or
sub
cmpsl
enter
pop
out
jo
mov
jle
icebp
or
lods
adc
fnsave
imul
xchg
cwtl
lods
xor
ret
movsl
mov
jbe
bound
push
ret
xor
mov
iret
sub
dec
jg
mov
sahf
aam
imul
stos
clc
xchg
repz
jno
mov
mov
pop
push
test
addb
xchg
and
mov
push
and
mov
push
gs
movl
movsl
lahf
and
fcoml
adc
imul
mov
repnz
das
pop
call
loopne
shlb
xchg
cmp
push
pop
sbb
cwtl
test
ljmp
add
cwtl
popl
es
lret
xchg
outsl
pushf
ret
dec
sbb
xor
adc
pop
imul
sub
inc
pushf
mov
xchg
clc
adc
push
cmp
sbb
enter
push
xor
inc
insb
xlat
pop
ja
mov
xchg
sub
data16
loop
xchg
sbb
xor
xor
stos
out
xor
addr16
sub
push
and
jecxz
daa
pop
loope
xor
shl
and
fstpl
mov
push
inc
repnz
sti
push
repz
push
rcrb
mov
xor
lahf
ret
mov
dec
into
and
inc
push
nop
inc
and
jl
push
out
mov
push
sbb
sbb
mov
data16
into
icebp
pop
movsb
sub
fcompl
xor
out
into
pushf
add
jge
nop
sub
out
jno
not
sbb
outsb
mov
fistpll
movsb
pop
mov
ret
int3
jmp
mov
inc
adc
daa
push
adc
mov
fcomip
es
sbb
bound
push
je
bt
inc
lcall
or
or
sub
into
inc
shll
notl
push
cltd
cltd
adc
lret
cli
xchg
cltd
jne
pop
ss
adc
gs
enter
add
jp
fisttpll
std
test
mov
inc
out
push
inc
into
movsl
incl
stos
xor
andl
sbb
lods
mov
xor
xchg
xchg
cwtl
fmul
cmc
sub
ss
mov
leave
mov
jnp
pop
pop
jnp
mov
dec
cltd
jns
fists
testb
cs
sbb
jae
out
inc
mov
and
fsubr
out
cmpsb
out
mov
dec
cmpl
push
dec
stos
xchg
fisubrl
aam
add
scas
daa
jb
cmp
rep
xor
mov
and
andb
stos
shlb
mov
jg
jp
mov
fidivrl
jle
jmp
adc
xchg
mov
es
mov
sub
inc
add
hlt
sub
std
cli
jns
sub
mov
lcall
pop
repz
push
sbbl
lds
mov
xchg
adc
movsb
jne
push
aaa
movsl
repz
xchg
scas
icebp
mov
ljmp
mov
pusha
mov
jl
push
sub
enter
adcl
or
mov
push
adc
mov
mov
jns
in
mov
bound
add
les
push
and
add
mov
push
adc
lods
std
mov
pop
test
add
outsb
push
push
xchg
inc
and
pop
lahf
xor
cmp
dec
lret
mov
push
fcoml
out
frstor
out
adc
mov
cmc
cmp
xchg
mov
nop
or
lds
and
loop
outsl
cli
shl
scas
jbe
out
xor
pop
cltd
cmpb
sub
sub
ret
mov
stos
pop
xor
sub
xchg
lret
test
mov
and
mov
dec
jmp
aas
test
cmpsb
ljmp
movsl
cmp
inc
dec
lcall
daa
sbb
aas
enter
pop
jo
rorb
mov
stc
cmpb
outsb
jns
xchg
fmuls
jb
repz
jge
or
ja
mov
pop
jbe
in
mov
xchg
cmpsl
shlb
push
pop
out
std
js
sbb
or
andl
push
adc
mov
mov
jg
test
lea
idivb
jno
int
sub
mov
ss
fstl
inc
leave
mov
add
andnps
jne
aas
pop
cltd
std
test
addb
loope
daa
test
les
pop
mov
adc
repnz
sub
mov
fucomp
mov
cwtl
pop
popf
jb
out
pusha
push
or
dec
adc
jne
and
insl
imul
cmp
rcrb
in
mov
mov
jg
mov
cli
or
sub
xchg
sub
enter
in
xchg
adc
fwait
mov
std
xor
daa
fbstp
mov
pop
adc
cmpsb
movlps
dec
sub
pop
pop
mov
mov
sbbb
or
or
outsb
clc
or
out
mov
scas
sub
adc
push
sbb
and
imul
pop
cmpsb
xorb
push
loope
and
cmp
es
roll
jne
ret
dec
fisttps
rep
add
and
data16
xchg
push
pusha
arpl
divl
jbe
test
mov
inc
dec
test
out
insl
push
arpl
xchg
cmp
push
xchg
std
je
and
aas
mov
and
pop
rclb
out
sbb
add
cmpsl
mov
hlt
push
add
in
lds
mov
and
loopne
sbb
aad
xchg
cmp
movb
dec
push
mov
sub
pop
loope
sbbl
out
xor
xor
add
or
popf
sub
push
or
loop
enter
sbb
lds
xor
imul
xor
in
lea
aam
jnp
inc
stc
lock
ss
fadds
sub
aaa
shr
add
pop
je
mov
add
hlt
outsb
fiadds
daa
push
inc
in
and
push
loop
push
or
sub
dec
mov
inc
add
pushf
popf
cwtl
sbb
mov
xchg
scas
sbb
cld
jns
adc
aas
pop
push
mov
cmpb
xor
cli
jne
mov
fldcw
sub
mov
lds
mov
adc
gs
loopne
mov
inc
pop
and
push
sbb
xchg
outsl
pop
flds
pushf
xchg
xchg
and
bound
push
ret
or
enter
js
jge
jle
test
inc
cld
dec
inc
push
mov
lods
cli
and
bnd
outsb
push
dec
jle
inc
add
jo
or
push
jge
push
xchg
sbb
fmuls
ljmp
cmp
jl
aaa
xchg
dec
push
pop
daa
loopne,pn
shl
cwtl
je
mov
add
sbb
mov
lea
js
pop
sub
jns
xchg
add
lret
dec
jp
lods
aas
je
aas
cs
jns
dec
and
addr16
enter
lock
pushf
push
aam
lods
add
imul
daa
mov
jbe
pop
lret
cli
fs
push
outsb
inc
cmpsl
push
push
lds
fwait
es
jne
push
xor
in
mov
sarl
push
out
add
loope
adc
sarl
push
dec
std
xor
jno
mov
inc
repz
sbb
push
or
gs
mov
fs
push
push
xchg
adc
push
insl
inc
test
lcall
xor
jnp
lock
mov
and
lods
shl
mov
scas
xchg
pusha
lret
sar
inc
addl
mov
or
mov
loop
sbb
in
and
add
lcall
or
xchg
add
rcll
repz
add
pop
push
mov
pop
ljmp
mov
test
imul
scas
mov
repnz
testb
fistps
push
pop
xor
push
and
fs
out
aaa
mov
jl
sbb
pop
aam
stos
fnstcw
mov
outsb
mov
out
sahf
push
gs
cltd
mov
cmp
xchg
sub
sub
jns
push
hlt
stos
lds
adc
por
mov
imul
cmp
fcomps
push
sub
inc
mov
add
mov
lods
ret
add
pop
lock
imul
in
xchg
mov
xchg
ficomps
inc
pop
mov
mov
aam
rorb
daa
pop
or
movsb
push
repz
das
pop
pop
je
gs
xchg
or
cmpsl
jne
dec
std
mov
cmp
loopne
push
or
cmovns
mov
hlt
addl
loope
pop
dec
xchg
out
xor
pop
test
mov
pop
fisubl
orl
ja
loopne
je
icebp
adc
cld
fcomps
xor
pop
in
ret
add
mov
adc
dec
bound
inc
orb
aas
mov
fadds
xor
lods
push
pop
inc
imul
add
rolb
idivb
out
add
and
or
cmpsb
rcrl
scas
sub
loop
lds
hlt
ds
or
nop
scas
rcll
data16
out
inc
push
adc
mov
sarl
or
lea
in
inc
rorl
bndstx
imul
inc
cld
jecxz
dec
push
aad
ja
xchg
adc
stc
arpl
je
sbb
popf
shll
mov
add
mov
sbb
jmp
or
movsb
and
loope
hlt
sub
repz
repz
xor
bound
pop
push
adc
push
es
inc
jl
dec
xchg
mov
sub
hlt
inc
lret
jnp
xchg
mov
push
mov
cmpsb
and
scas
inc
int
adc
xchg
mov
add
imul
leave
negb
movsl
insb
lods
push
jl
jmp
lock
popa
sbb
fwait
insb
mov
test
popf
cmc
add
popf
addl
xchg
std
push
leave
fisubl
adc
xchg
sahf
js
mov
dec
rcl
addr16
xchg
jae
xchg
mov
aas
xor
jo
jmp
nop
negl
gs
cmc
jl
rcrl
mov
loop
loop
test
add
repnz
pop
movsb
cs
lahf
loopne
pop
popw
ret
push
or
mov
fcomp
in
out
orl
in
cmpl
adcb
fwait
or
aam
ds
loope
mov
and
fidivs
sub
lea
inc
mov
lea
push
into
mov
adc
dec
add
push
outsl
loopne
lahf
inc
or
mov
bound
mov
xor
dec
xchg
xchg
scas
mov
push
aaa
mov
mov
dec
push
mulb
add
clc
cmpb
lcall
call
jp
mov
lret
mov
test
cmpsl
shrl
pop
sbb
leave
push
subb
push
pop
push
xor
jnp
mov
push
call
psubusb
addr16
lods
and
push
std
xor
jge
rcrb
xor
xchg
cmp
mov
mov
insb
jnp
sbb
sub
pop
xor
stc
sub
sbb
lahf
xor
loope
pop
in
test
and
inc
adc
cmpsb
stos
jns
mov
dec
cmpsl
inc
repz
out
call
ret
jle
cmc
mov
xchg
sub
neg
int
pop
gs
rolb
sbb
jbe
add
mov
enter
mov
pushf
mov
adc
mov
mov
pop
divl
pushl
fbstp
aaa
sbb
fstpt
lods
inc
mov
loope
mul
sti
lods
xor
adc
xlat
cmpsb
lock
incb
cmp
roll
inc
inc
xor
push
mov
ret
sub
and
xchg
mov
inc
cli
add
shlb
adc
or
mov
divl
and
lock
ficoms
push
add
jge
and
in
icebp
loop
mov
pushl
mov
cmp
mov
ds
ret
push
inc
imul
lcall
cltd
aas
mov
shlb
addb
inc
adc
dec
in
inc
xchg
cs
mov
iret
sbb
enter
lods
push
push
popf
xchg
or
xchg
icebp
pop
sbb
push
loope
stos
push
push
cmp
sub
pop
loop
jno
daa
out
or
shll
xor
cmp
jno
stc
pop
cmpsl
add
xor
stos
jmp
push
and
or
dec
int3
shlb
add
push
popa
stc
mov
and
lret
movsl
sarl
jp
add
stos
or
pop
sub
xor
inc
lods
cltd
cmovne
rep
in
imul
mov
inc
cmp
bound
pop
mov
mov
mov
mov
xchg
stos
fsubrs
in
add
mov
enter
lahf
ss
cmp
jmp
xchg
push
outsb
scas
fdivs
and
cwtl
out
sub
adc
jl
mov
pop
jns
daa
mov
cmp
pop
lahf
nop
push
adc
aaa
shr
xor
mov
mov
pop
adc
xchg
jo
mov
outsb
sbb
fadd
js
addr16
lea
cld
arpl
cmp
movsl
xchg
cmp
cmp
mov
jg
push
aad
xchg
cs
stos
xchg
pop
cs
pop
test
shl
or
rol
test
divb
out
ds
mov
sbb
xor
out
mov
pop
jne
sub
jp
cwtl
pop
mov
xchg
cmp
mov
xchg
js
ret
mov
fstps
mov
and
push
pop
add
mov
dec
xchg
adc
mov
int
jmp
and
inc
enter
fdivp
xchg
jmp
adc
insb
mov
xor
mov
out
cs
je
jns
push
dec
lahf
gs
hlt
inc
ds
xchg
mov
cmp
pop
mov
jp
mov
popa
ds
lea
lods
xchg
mov
scas
sbb
out
inc
jmp
cs
inc
inc
xor
out
mov
dec
int3
or
add
xor
insb
pop
cmp
fs
sbb
shrb
in
repnz
sbb
adc
inc
dec
int3
negl
cwtl
popw
sub
pop
mov
div
repnz
call
jmp
xchg
bound
shlb
push
test
add
cltd
mov
je
cmp
inc
popf
mov
inc
hlt
icebp
pop
jbe
dec
mov
xor
mov
popa
daa
cmp
data16
xchg
xchg
push
stos
mov
mov
lret
icebp
fisttpll
aaa
jecxz
loop
scas
int3
test
jmp
sub
mov
popf
sahf
lret
fisubrs
fimuls
icebp
push
cs
mov
dec
hlt
xchg
xchg
mov
cmp
leave
in
pop
cltd
mov
inc
or
stos
into
out
xor
cmp
movsl
insl
or
jnp
dec
scas
cmp
xchg
repz
popf
sbb
and
out
cmpsl
add
xchg
jo
adc
xor
pop
dec
inc
pushf
xor
cltd
fdivr
inc
mov
cltd
arpl
negb
ds
mov
enter
insl
lret
mov
push
mov
call
sub
dec
scas
sbb
dec
mov
push
jmp
icebp
shl
subl
enter
sti
mov
es
inc
fdivs
mov
and
mov
das
pushl
int
aaa
mov
jne
add
inc
or
push
mov
in
xor
in
into
and
seto
lret
xor
add
add
out
inc
fistpll
je
push
adc
adc
cmp
xchg
jl
test
add
cmpb
sti
push
fldl
inc
out
xor
lods
lret
stos
in
or
and
ljmp
gs
mov
adc
ja
xchg
and
sbb
pop
call
out
mov
dec
in
imul
jb
mov
adc
jmp
jecxz
jg
addr16
cmp
cmp
dec
popf
nop
cmp
lods
fnsave
lret
scas
std
inc
lea
out
aaa
bound
jne
pop
lods
int
out
lods
jp
xor
or
ja
xlat
dec
imul
jne
add
cld
test
ds
xchg
lcall
int
pop
out
xor
mov
xchg
cs
adc
les
and
ret
test
mov
and
dec
mov
or
es
adc
movsl
enter
mov
stos
cltd
pusha
jmp
add
xor
js
push
stc
std
cld
mov
mov
mov
sub
add
test
insb
jp
loope
fs
aam
push
stos
xor
mov
xorb
mov
and
ljmp
out
rcrb
inc
or
jne
mov
out
prefetcht0
push
xor
mov
or
sahf
push
jp
xor
cmp
mov
cmp
fisttps
shll
fs
nop
xor
xor
bound
push
adc
lret
lret
jle
lods
addb
rorl
and
shlb
push
int3
xchg
out
cmp
stos
es
mov
cmp
repz
dec
inc
mov
test
mull
or
pop
dec
sbb
cmp
mov
dec
mov
xlat
adc
add
push
sub
outsl
aad
jg
inc
loop
mov
fdivs
pop
dec
frstor
inc
iret
aad
jmp
repnz
dec
jo
fstpl
or
addr16
push
pop
imul
and
jb
push
mov
sub
inc
xchg
pop
test
xchg
dec
and
lcall
xchg
ret
in
jnp
ljmp
insl
hlt
jge
fistl
popf
xchg
fs
fsubs
mov
insl
sti
lea
je
call
out
add
sbb
adc
notl
jno
or
mov
ret
push
mov
ret
xlat
adc
push
push
add
enter
xchg
insl
sub
aam
or
sarb
jo
lahf
stc
jl
jnp
and
add
sub
sub
aaa
cs
dec
rcll
mov
fadds
mov
int3
cld
es
mov
ljmp
or
cmp
lret
push
test
sbb
push
popa
fstpl
jo
adc
cmpsl
iret
stc
cmp
mov
cmp
xchg
or
sub
test
dec
xor
and
imul
cmp
sti
pop
inc
adc
and
inc
outsl
das
push
in
push
inc
jmp
test
sub
mov
or
jne
jnp
outsb
mov
and
xor
aas
sub
push
stc
or
push
mov
rcll
xor
lcall
lods
cld
test
rorb
add
inc
add
ret
outsb
mov
je
mov
push
daa
xor
dec
fiadds
push
push
pushf
in
add
xlat
pop
inc
jl
mov
stos
test
addr16
mov
push
addr16
cmpl
push
stc
pop
adc
out
pop
cli
push
fdivrl
test
fdivr
lods
pop
xor
pop
jo
mov
add
mov
lock
xor
rol
int
mov
imull
hlt
and
mov
xor
inc
loopne
scas
mov
mov
adc
sbb
jbe
mov
scas
fcompl
ljmp
bound
push
lds
out
and
add
negb
push
mov
xchg
xchg
loope
int3
div
adc
out
scas
es
out
call
cmp
mov
sub
popf
nop
xchg
push
mov
ja
ret
cltd
push
pop
jg
inc
ret
sbb
aaa
push
pop
add
fsubrs
mov
fwait
mov
jmp
jb
ret
mov
cmp
scas
lret
out
out
mov
psubq
inc
leave
jns
and
jle
dec
imul
mov
dec
mov
and
or
xor
mov
fiaddl
xchg
inc
test
ret
mov
inc
xchg
in
loop
push
adc
push
popa
or
mov
sub
pusha
iret
gs
in
cmp
es
sahf
lea
stos
insb
outsl
les
add
dec
pop
cltd
cli
gs
stos
adc
repz
push
push
lcall
mov
fucomip
lcall
sbb
pusha
fcoml
or
stc
in
stos
les
es
cltd
out
xchg
mov
pop
lds
add
cs
movl
sbb
mov
push
sub
mov
lods
aam
sub
mov
fists
jnp
rcll
rolb
inc
shl
jge
inc
sub
xchg
pop
clc
or
shrl
stos
pop
shll
je
add
push
inc
fwait
iret
mull
test
jl
inc
mov
sbb
cld
dec
jg
jno
rcr
test
xchg
in
push
cmp
fs
scas
es
jno
mov
dec
subl
test
push
xorb
pop
inc
imul
pop
mov
adc
icebp
xchg
push
inc
push
in
sbb
lcall
jg
jmp
pop
test
add
or
xchg
cmp
jmp
xor
int3
call
pop
js
sub
inc
inc
aad
leave
fs
add
inc
cmp
arpl
sbb
fimuls
xorl
jle
adc
ret
lods
ficoml
mov
ja
adc
dec
xchg
cmp
or
int3
rorl
mov
sub
sub
cmp
sub
mov
test
inc
cmpsb
adcl
push
repnz
inc
jmp
mov
add
mov
xchg
lods
adc
lret
pop
adc
and
cmp
mov
sub
iret
subb
add
adcl
push
xchg
jmpw
push
fs
inc
fwait
shl
mov
mulb
dec
lock
mov
hlt
hlt
test
dec
push
dec
outsl
lock
out
cmp
arpl
in
push
lret
push
out
cwtl
fnstenv
adc
scas
fsub
sub
inc
dec
les
call
or
ss
xlat
popf
cmp
outsl
jle
or
mov
in
lods
mov
test
mov
pop
test
push
cmc
xchg
dec
and
dec
lods
icebp
xchg
popa
fs
inc
mov
mov
xor
lds
push
or
add
flds
push
imul
js
in
mov
sbb
sbb
sbb
sbb
mov
cmc
pop
sbb
cli
test
push
xor
loopne
mov
out
add
jnp
and
jl
frstor
or
fs
push
sbb
jno
shl
into
in
in
mov
shlb
xor
mov
arpl
imul
inc
jp
insl
xchg
daa
lds
in
mov
push
sbb
push
jg
les
inc
cwtl
imul
std
fstl
or
mov
or
xchg
sbb
jge
jp
daa
dec
fisttpll
pop
push
bound
subb
call
xchg
inc
shlb
mov
cmpsl
mov
in
arpl
rcll
cmp
mov
lods
loopne
push
sbbl
mov
mov
mov
adc
mov
lcall
and
stos
aaa
not
jmp
dec
pop
arpl
fsubp
and
pop
push
adc
adc
adc
shlb
mov
xor
sti
fimuls
scas
negb
xor
cmpl
push
pop
fs
scas
mov
loopne
std
sbb
xchg
ja
mov
push
jmp
ljmp
cwtl
cmp
in
addr16
lret
mov
or
lock
cmp
mov
mov
ret
sub
sub
mov
cmc
inc
push
and
push
pop
push
add
movsb
mov
pop
popf
leave
enter
ficompl
push
test
add
arpl
adc
jne
subb
daa
scas
and
xchg
mov
or
ds
les
inc
sub
sahf
and
loop
aad
sbb
dec
pop
dec
loope
clc
pop
enter
xchg
jae
repz
xlat
adc
lahf
mov
pop
adc
push
ret
das
mov
loopne
les
cmp
in
cwtl
and
push
pop
ja
mov
in
lods
jl
xor
cmc
shll
cmc
fwait
icebp
arpl
jg
cwtl
cld
ds
test
cmpsb
in
movsb
cwtl
imul
adc
ds
add
jge
adc
adc
popf
mov
dec
nop
jp
and
lahf
leave
aam
sub
insb
rcrl
lret
pop
xchg
ja
cs
sub
dec
test
dec
repnz
bound
shlb
popa
cld
pop
insl
aaa
fidivrl
mov
xchg
dec
xor
out
fsubrs
mov
sti
dec
jo
in
cmp
arpl
jns
test
push
mov
jo
js
cs
pop
fisubrs
in
sub
push
push
fstpl
cmp
lahf
out
sbb
mov
lock
mov
sub
aaa
icebp
xchg
jnp
mov
fldenv
gs
pop
mov
movsb
test
ljmp
push
stos
ss
adc
jmp
jbe
outsb
mov
sar
popf
repz
push
jecxz
es
sub
push
repz
rclb
dec
push
mov
outsb
test
mov
cwtl
or
mov
sub
jl
or
fs
ret
scas
sbb
mov
stc
aad
js
test
out
mov
stos
rcl
popa
sub
mov
pop
pop
jge
cld
insb
cltd
outsl
cli
aas
inc
outsb
rorl
lods
inc
dec
and
inc
loop
mov
int3
xlat
out
and
jmp
sbb
mov
jno
xchg
in
scas
fldenv
int
scas
adc
cmp
loope
les
ljmp
shrl
jmp
fldl
jb
mov
call
xor
es
xor
and
repz
cltd
int
xchg
push
imul
lret
fsubrp
test
pop
inc
jbe
fdivrl
shll
ret
xchg
loopne
imul
out
ds
push
mov
out
aaa
sbb
or
mov
and
popf
push
cltd
daa
push
std
fdivrl
add
sbb
inc
out
sbb
outsb
test
mov
clc
mov
fcmovne
xor
sbb
jp
cld
andb
movsb
das
outsl
shr
sub
aad
xchg
scas
push
outsb
lods
das
sti
jle
sbb
xor
jmp
sbb
and
iret
ja
inc
pop
mov
orb
imul
jnp
mov
pop
pop
cmp
ja
lods
cmpl
sti
scas
xchg
shlb
adc
cmp
lret
jne
jmp
dec
push
mov
inc
out
pop
push
setnp
dec
cmp
enter
dec
lods
jnp
scas
mov
cltd
pop
mov
popa
cmpsl
adc
repz
sub
int
adc
imul
ljmp
mov
sub
fcomp
inc
push
inc
cmp
xchg
mov
das
add
lds
sbb
mov
adc
mov
sbb
out
jmp
lea
inc
pop
add
dec
xor
jne
notb
push
mov
pop
or
jae
mov
mov
push
mov
loop
ret
insl
mov
mov
mov
pop
mov
gs
or
fs
cmp
xor
mov
mov
aad
lods
leave
ret
or
in
fdivrs
pop
fdivr
inc
scas
mov
dec
repz
cmp
push
cwtl
add
rcll
xchg
roll
push
pusha
inc
pop
les
fwait
test
arpl
sub
xor
sbb
in
mov
or
adc
inc
iret
adc
aad
dec
pand
pusha
mov
cmc
test
out
insl
add
cmp
xor
out
aam
xchg
xor
sub
xchg
fdivrp
xor
mov
and
ss
pushf
out
imul
xchg
lret
out
push
pop
mov
into
je
xor
dec
mov
add
cmp
dec
cmpsl
adc
inc
std
aaa
out
nop
insb
fwait
stos
sbb
dec
iret
pop
ss
push
and
rdmsr
mov
dec
into
mov
fnstsw
dec
jge
testl
stos
push
mov
cmp
test
fsubrs
xchg
mov
mov
mov
push
mov
shrl
shlb
pushf
push
push
in
lahf
cmp
ret
ret
dec
adc
xchg
inc
into
add
inc
push
out
xor
xchg
push
mov
shll
ret
mov
shrb
jl
shlb
nop
nop
pushf
push
jno
or
inc
sbb
jns
repnz
cmp
adc
jecxz
stos
ret
in
mov
pop
xor
fisttpll
mov
fisttpl
sbb
sub
sub
je
repz
xchg
push
int3
add
adc
lret
sbb
rclb
outsl
fidivl
inc
clc
fwait
int
add
arpl
or
jo
ja
mov
pop
push
xlat
sbbb
lock
xchg
mov
mov
or
inc
fdivl
lods
and
mov
pop
dec
imull
call
inc
lds
aas
push
cmpb
insl
hlt
andb
arpl
out
in
fdivrs
mov
ljmp
pop
lds
dec
outsb
xlat
dec
aas
mov
popa
add
idivb
mov
sbb
loop
xchg
idivl
push
pop
mov
imul
or
jecxz
inc
adc
aad
out
movsl
adc
test
inc
xlat
cwtl
cmp
pop
mov
pop
shl
repz
xor
pusha
leave
add
ret
lret
and
xor
add
fdivl
xlat
sahf
pop
xor
ret
xor
cmp
and
dec
or
inc
mov
mov
ret
int3
or
imul
inc
inc
push
rcrb
mov
lods
aad
jnp
add
gs
outsl
jge
jb
jecxz
jnp
lods
iret
lret
into
imul
movsb
and
dec
mov
pushf
mov
fsts
hlt
push
push
in
mov
rclb
or
testb
rdpmc
push
or
fsubrp
xor
lcall
adc
cwtl
pop
sbb
xchg
and
mov
push
jmp
frstor
xor
ds
inc
mov
sahf
ror
dec
ja
repz
pop
andb
push
or
jnp
fnclex
mov
mov
pop
inc
or
push
mov
inc
mov
popa
sti
mov
ljmp
fcoms
rcll
pop
adc
ss
mov
mov
insl
pop
popa
dec
sub
xchg
call
mov
lods
xor
jnp
cld
and
mov
test
inc
and
and
inc
xor
cmpsb
test
stos
jns
iret
shll
gs
jbe
sub
mov
test
xor
inc
push
mov
mov
arpl
push
xor
sbb
cmp
fucom
jge
nop
scas
xor
lods
icebp
movsl
cmpsl
fimuls
xchg
pop
push
lock
sbbl
sbb
jb
scas
and
pop
mov
push
outsb
mov
int
lahf
pop
mov
loope
icebp
sbb
mov
repnz
call
out
imul
gs
sbb
cmc
cmp
or
fnstcw
mov
addr16
outsb
lret
add
sub
ds
cltd
xchg
mov
pop
cmp
mov
fmuls
inc
fisttpl
pop
fistps
xchg
sti
and
enter
rcrl
fstp
out
sahf
and
js
add
add
lea
push
and
fmuls
xchg
shrb
cmp
mov
in
mov
mov
dec
pop
mov
in
jl
sbb
and
mov
or
push
test
sbb
or
cmp
insl
cmc
inc
lcall
xchg
std
sahf
outsl
ss
xchg
add
or
xor
rcr
push
pop
iret
sub
out
adc
mov
inc
adc
and
add
push
nop
mov
cmp
xchg
xchg
and
xlat
cs
push
fcom
repz
xor
jo
mov
hlt
add
pop
loope
in
jmp
in
jnp
fmul
ret
call
inc
or
fidivl
sub
shlb
sbb
inc
or
push
or
rcl
fidivl
call
jo
xlat
les
pop
ss
xchg
fwait
or
mov
arpl
dec
mov
das
out
sti
out
ds
lahf
andl
push
repnz
shrl
jo
cmp
dec
insl
pop
jecxz
ficoml
inc
jmp
fmulp
shlb
enter
pusha
push
cmp
aas
jnp
push
rol
mov
mov
xchg
and
inc
xchg
popa
icebp
xchg
lret
or
aaa
pop
fdivp
sub
mov
fisttps
push
loop
jecxz
mov
aas
mov
sbbb
add
pop
xchg
xor
sub
mov
jbe
sti
pushf
push
cmpsl
push
lock
test
popf
push
shl
cmp
inc
adc
lret
mov
xchg
add
loope
pop
inc
loop
jne
subl
mov
xlat
or
mov
leave
insl
xchg
mov
jns
or
xchg
jp
outsl
les
sub
int3
std
inc
inc
nop
push
mov
add
jo
jae
test
dec
inc
in
jg
pop
inc
mov
pop
aam
push
jmp
hlt
iret
ja
cmp
std
push
jecxz
es
jno
push
notb
cmp
jg
test
out
andb
dec
fs
or
and
stos
or
mov
cmp
mov
mov
imul
test
cli
repnz
jmp
int3
mov
cltd
sbb
insl
popf
dec
test
push
push
push
adc
dec
insb
mov
cmpsl
lods
push
jle
mov
pop
outsl
int
out
xchg
mov
push
dec
js
outsl
mov
dec
das
sub
cmp
bound
xchg
out
fs
rolb
std
mov
lahf
sub
xchg
lock
cltd
cmp
adc
xchg
shrb
scas
aad
xchg
ds
jno
lahf
adc
sub
cmp
dec
lcall
fists
push
aas
dec
jecxz
cmp
aam
and
cmc
bound
out
out
enter
movsb
outsl
and
and
push
sbb
and
in
adc
xor
enter
dec
ljmp
sbb
mov
enter
dec
sbb
dec
cvtpi2ps
inc
pop
add
jbe
mov
fwait
scas
mov
jno
push
outsb
pop
sub
sbb
rcl
mov
adc
call
loop
xchg
testl
and
sbb
mov
arpl
test
add
js
adc
add
rolb
sub
iret
xor
iret
rorl
xchg
cmp
mov
insb
daa
testb
int3
jp
cs
scas
xor
cli
xor
data16
pop
fisttpl
inc
add
cltd
lahf
sbb
jp
and
iret
sbb
ds
mov
xor
cmpl
sbbl
dec
jmp
push
xchg
stos
push
or
fdivr
sub
mov
ljmp
ljmp
mov
aas
je
orb
pop
mov
test
xchg
ljmp
add
rcrl
xchg
mov
stos
jp
pop
ret
and
mov
push
inc
add
push
movsl
jg
mov
inc
pop
jg
xchg
mov
mov
sbb
xchg
lock
mov
xor
mov
mov
das
rorl
adcl
mov
inc
jl
mov
lahf
test
sbb
lock
leave
loop
push
add
mov
test
fists
jl
int
sahf
xor
imul
subl
imul
pop
test
iret
jmp
out
in
stos
popa
sub
jmp
stos
sbb
out
pushf
into
sarb
cmc
in
lock
adc
or
inc
ret
jl
push
bound
push
stos
xchg
inc
adc
dec
dec
adc
add
aas
sti
mov
popf
in
jg
nop
dec
push
hlt
push
or
int3
cli
xchg
int
lahf
mov
push
sub
xchg
scas
mov
test
test
lods
xlat
fidivs
rolb
mov
cmpsl
dec
and
dec
jmp
cmp
dec
addr16
test
fisttpl
cmp
clc
in
into
stos
or
fidivs
hlt
jge
inc
dec
pop
insl
leave
sub
cwtl
push
rcrl
mov
or
inc
dec
fidivs
rorl
mov
nop
push
add
push
in
or
lock
data16
dec
filds
jl
mov
das
jne
jle
push
cltd
rclb
out
jp
into
add
nop
jno
pop
jl
mov
out
inc
push
and
push
add
fnstcw
aam
push
insb
sub
mov
daa
mov
je
imulb
stos
mov
jns
push
fisttpl
pop
mov
dec
pop
nop
push
lahf
or
jno
xchg
xchg
insb
and
mov
lahf
pop
mov
repnz
ss
mov
cld
stc
inc
lahf
int3
adc
inc
inc
out
push
dec
insl
cmc
and
repz
pop
mov
pop
rcrl
lret
mov
cmp
enter
mov
inc
or
mov
pop
lock
out
es
push
mov
dec
inc
pop
repz
or
shrl
pop
cmp
out
repz
mov
xchg
pop
aad
mov
push
cli
repz
push
in
lea
shrb
repnz
rcr
cld
lret
fwait
or
int3
and
into
sbb
cmp
jbe
cmp
subl
xor
ds
repz
loope
clc
outsl
jae
xchg
inc
mov
jae
cmpsb
mov
mov
pop
out
out
mov
shrb
mov
mov
mov
xchg
lock
loop
out
pop
bound
push
xchg
and
sahf
mov
pop
int
cltd
stc
hlt
and
mov
push
test
aad
into
lods
sbb
inc
aad
inc
frstor
das
lea
mov
mov
mov
push
outsl
sub
hlt
push
dec
cmp
fdivrl
add
push
sti
rorl
lret
push
dec
frstor
xor
es
add
sub
mov
int
aad
mov
ljmp
sub
les
mov
jae
out
mov
push
xchg
sub
and
adc
sbb
mov
loopne
das
mov
out
ja
adc
or
iret
push
in
adc
int
mov
lock
and
lret
sbb
cwtl
nop
fistps
dec
rcrl
sub
movsb
jmp
xchg
bound
cmp
ljmp
jns
out
sub
add
jae
mov
rorb
xor
add
in
xlat
movsl
xor
push
pop
add
mov
fsubr
mov
inc
sbb
js
incb
pop
test
iret
sti
icebp
push
pop
daa
xor
xchg
mov
lcall
mov
out
jge
pop
pop
std
das
sub
fiadds
das
inc
aam
arpl
pop
push
cmp
call
mov
xchg
lods
sbb
adc
cltd
push
dec
and
std
mov
push
shll
mov
test
repz
movsb
dec
addr16
fucomi
pusha
adc
mov
repnz
das
sbbb
je
aad
jnp
jns
pushf
negb
rsm
test
cmp
cmpb
incl
pop
iret
cmp
nopl
int
cmp
lret
faddl
xchg
add
xor
xor
dec
jp
xor
adc
dec
repz
cmpsl
jge
add
rcrb
repnz
add
mov
mov
call
stos
inc
inc
xchg
inc
mov
xor
sbb
fcomip
inc
into
xlat
and
adc
fld
das
and
stos
xor
xlat
shlb
adc
xor
std
mov
nop
mov
pusha
pop
cmpsl
jb
enter
and
inc
clc
fs
int3
pop
jb
or
pop
mov
xor
dec
pop
imul
add
ret
mov
scas
lret
mov
mov
ja
mov
pop
xchg
dec
fs
xorl
aam
mov
push
push
inc
pushf
out
clc
repnz
jl
mov
insb
iret
sub
inc
xchg
xlat
pop
cli
xchg
and
divl
mov
ret
in
lds
inc
pop
lret
jns
test
aaa
cmpsl
add
loop
daa
mov
push
push
sbb
dec
adc
stos
or
jnp
enter
int
and
in
gs
leave
pop
pop
inc
push
push
mov
adc
fiaddl
fdivl
rorl
cld
jmp
in
mov
inc
jmp
jnp
add
cmp
add
fidivl
and
dec
pop
xorb
jnp
in
int
lret
jne
arpl
ss
pop
hlt
test
aas
adc
mov
movsl
pop
mov
xlat
adc
push
mov
cs
sub
push
iret
mov
inc
testb
xor
mov
shlb
pop
sub
jb
loope
mov
loop
into
and
sub
push
aaa
in
jne
xchg
push
enter
mov
pop
lret
or
lods
lret
scas
inc
scas
fsts
sub
xlat
add
popf
sbb
xor
and
in
inc
sub
xchg
popa
iret
movsl
push
xchg
adc
dec
adc
lods
sub
arpl
mov
xchg
ljmp
sbb
lods
sub
mov
rcr
mov
lret
mov
inc
pop
cli
loop
pop
mov
xchg
mov
mov
test
dec
or
ret
mov
adc
or
mov
sbb
popa
mov
adc
ss
adc
push
push
int3
fwait
arpl
hlt
les
aad
ret
popl
out
sti
scas
fimuls
mov
cmp
fidivl
lret
aad
xlat
lahf
or
push
dec
addr16
lds
xchg
inc
insl
mov
fiaddl
aad
rcrb
mov
inc
push
sub
inc
sub
xorl
sbb
and
dec
fwait
rcrl
lea
xor
outsl
int
sbb
xchg
push
cmp
in
daa
out
xadd
add
sub
mov
mov
ret
in
inc
and
nop
nop
or
out
adc
outsb
inc
popf
push
pop
int
movsl
push
ret
fimull
push
lret
imul
xchg
in
cmp
out
and
inc
jmp
movsb
jnp
xchg
stc
jns
or
lahf
pop
cli
movl
mov
movsb
cld
sub
adc
cmp
dec
pushf
add
push
pop
int3
mov
pop
xchg
cmc
mov
sarb
jae
add
movsb
shrb
jl
lock
and
push
sar
xchg
inc
mov
les
jne
lds
add
out
push
jmp
cmpsl
aad
push
shl
fists
inc
out
sbb
sbb
addr16
dec
dec
dec
xchg
add
mov
and
or
hlt
bound
push
arpl
fdivrl
sbb
cmp
xor
dec
outsb
icebp
add
xchg
loop
xchg
aas
jmp
mov
xchg
cmp
cmp
gs
loopne
cmp
cs
popa
xchg
jl
int3
sub
jns
cld
mov
inc
pop
test
cwtl
inc
movb
jnp
outsl
lret
cwtl
sub
test
bsr
adc
test
jae
xchg
mov
aad
or
jmp
dec
addr16
test
xor
test
into
jae
jle
and
sarl
or
out
std
mov
mov
outsb
inc
loop
inc
out
dec
cmc
jl
in
ss
cmp
out
xor
jo
aas
int
xchg
push
test
int
dec
lahf
xor
dec
bound
or
gs
js
jg
ss
cmp
cmpsl
xchg
jae,pt
movb
and
pop
movl
dec
push
insb
push
mov
inc
jae
push
xchg
mov
jle
mov
rcll
cmp
cmpsl
pop
gs
mov
cmp
aaa
fisttpll
hlt
mov
lock
mov
sti
add
icebp
inc
insb
orl
push
cmpb
nop
popa
addb
jecxz,pn
loop
mov
mov
not
adc
mov
call
fwait
loopne
lret
jecxz
sbb
jle
mov
test
leave
mov
scas
inc
jns
fwait
jne
inc
pop
push
mov
push
push
decb
jmp
add
adcb
movsl
mov
sbb
sbb
out
lea
in
pop
sar
jne
scas
pop
call
cli
flds
js
stos
bound
sti
push
addr16
lahf
sub
adc
pusha
jne
pop
sbb
push
push
inc
push
dec
xlat
jns
das
dec
fistpl
push
xchg
int3
or
inc
int3
outsb
jo
fldcw
cld
cmp
and
or
or
movl
xchg
mov
dec
or
xchg
lret
in
out
jg
imul
cmp
rcll
andl
xor
cmc
sub
xchg
xchg
mov
inc
aaa
aad
in
sbb
roll
inc
pop
mov
arpl
ss
sub
loope
adc
shll
scas
mov
scas
pop
xchg
ljmp
sub
scas
push
dec
das
test
add
incb
sub
test
mov
pop
es
jl
int
pusha
imul
iretw
sahf
int
mulb
pop
mov
mov
xor
jae
cli
mov
jae
or
jmp
mov
push
stc
fcmovnu
ror
idiv
push
lods
std
jmp
aas
push
or
push
cli
pop
pusha
in
mov
cwtl
sbb
mov
sbb
and
xorb
pop
loopne
sahf
sub
inc
or
xor
inc
pop
lds
in
rclb
cmp
lds
push
sti
rclb
sub
icebp
loop
xchg
dec
push
or
push
cmpsl
sahf
cmp
out
js
push
ret
push
sarl
lret
jae
dec
lret
fs
jmp
and
loope
cmpb
out
repnz
jae
add
cvtdq2ps
xchg
mov
mov
lret
xor
into
jecxz
cmpsb
out
or
loopne
out
push
scas
nop
cwtl
cmpsb
sbb
sub
fs
insl
jb
add
adc
jae
nop
es
jmp
jmp
push
popf
mov
pop
xlat
imul
add
cmp
mov
faddl
push
in
jl
movsl
add
pusha
cmp
sub
cmp
xor
scas
pop
ja
rol
adc
push
and
icebp
lret
test
stc
into
outsl
mov
mov
leave
stc
push
or
xor
dec
push
add
adc
push
loop
adc
lahf
xchg
out
xchg
xorb
adc
in
mov
push
hlt
mov
in
jl
loop
or
pop
push
pop
mov
in
pushl
mov
sbb
adc
into
cmp
lahf
js
dec
inc
sub
fwait
lock
out
movsb
subl
aaa
add
or
ret
pusha
sub
adcb
je
inc
fcompl
cmc
inc
fisubl
inc
repnz
in
and
or
adc
push
repnz
sbb
mov
xchg
mov
shrl
mov
jle
sbb
fidivrl
sub
and
cmpsb
sarl
in
sub
sbb
sbb
insb
mov
and
inc
inc
xlat
stos
xchg
mov
push
mov
mov
jl
jne
and
inc
cmp
arpl
stos
in
das
jae
gs
dec
in
sub
hlt
mov
aam
fdiv
fwait
popa
cmp
sub
xchg
mov
imul
iret
lret
push
mov
faddl
mov
and
out
in
jo
imul
mov
adc
push
mov
icebp
xor
mov
xchg
fdivrs
ficompl
mov
mov
jbe
sbb
in
ret
out
mov
add
in
test
shl
dec
xchg
sbb
push
mov
mov
insl
mov
ret
dec
loope
out
jae
cwtl
movsb
add
sbb
or
stos
push
dec
adc
lods
mov
jns
mov
loope
mov
icebp
idiv
pop
cld
ret
push
jecxz
popa
xchg
xlat
incb
mul
or
adc
aaa
ror
cli
repz
and
inc
das
jo
add
rcrl
dec
fistpl
scas
jb
and
test
xchg
fcomps
cmp
je
mov
sbb
jns
fs
pop
sub
xchg
mov
ja
mov
aam
out
push
hlt
push
or
xor
fnsave
adc
dec
jne
inc
add
fsubs
call
pop
or
jge
shlb
sub
xor
xor
pushf
aaa
cltd
or
dec
jmp
mov
lea
cs
shlb
xchg
mov
jne
cmp
loopne
scas
adc
jl
fsts
jae
push
or
popa
dec
xchg
sbb
stc
jecxz
sub
dec
hlt
cmp
and
mov
pop
cmp
adc
lahf
aas
dec
adc
pop
xchg
sbb
aaa
push
iret
jg
xchg
mov
xor
mov
fisttpll
je
cltd
sbb
cmp
or
dec
ficoms
rolb
test
sub
jge
dec
js
inc
outsb
jp
add
insb
decl
or
out
inc
es
out
pop
mov
cmp
add
pop
int3
add
cld
sub
push
pop
mov
fldenv
in
mov
mov
je
lds
fucomip
sbb
xchg
test
jno
aas
mov
out
mov
sub
scas
jns
bound
jo
xchg
dec
rorb
inc
mov
adc
roll
jp
and
push
jge
daa
shlb
push
mov
flds
int
xchg
addr16
loop
push
or
cs
inc
pop
mov
lds
mov
out
lret
jnp
cmp
leave
sub
dec
or
push
mov
and
into
jecxz
jg
adc
xchg
outsb
aad
movsb
shrl
xchg
jae
pmullw
testb
les
adc
inc
sub
xor
xor
insl
mov
or
lcall
mov
and
sub
div
outsl
aas
ret
mov
insb
popa
xor
repz
pop
or
push
movsb
mov
test
mov
inc
mov
cmp
push
push
jns
lods
mov
mov
push
cmp
je
loopne
or
mov
fdivrs
movsb
enter
mov
push
cmpsb
lahf
add
jecxz
xor
fsubr
fstp
xchg
xchg
hlt
mov
sub
adc
fimuls
loope
outsl
scas
add
cmp
fdivs
in
xchg
add
pop
adc
int3
dec
xchg
jecxz
repnz
mov
cli
outsb
jnp
mov
int3
fldenv
xchg
inc
ret
lods
push
popa
les
mov
test
bound
or
leave
jns
int
or
outsl
hlt
mov
dec
test
mov
and
in
scas
sahf
mov
pop
aam
push
add
imul
hlt
mov
mov
push
push
icebp
cwtl
xor
test
cmp
cmp
inc
mov
sub
and
lock
cmp
add
pop
jecxz
ljmp
rcrl
adc
lea
push
mov
sub
xchg
loope
dec
fsubr
mov
cmp
std
ja
pop
inc
mov
push
xchg
pushf
fildll
dec
lret
add
adc
inc
stc
daa
call
outsb
lret
adc
xor
cmp
aas
fldl
and
divl
pop
xor
jnp
lds
xchg
mov
movsb
out
out
pop
xchg
mov
aaa
add
call
imul
jae
mov
rcll
mov
insb
adc
cmp
mov
xor
fdiv
push
or
clc
loop
mov
lcall
addl
jecxz
loop
js
mov
aam
xorl
shl
adc
push
or
mov
add
iret
daa
stc
mov
jbe
inc
das
jne
outsb
inc
dec
and
mov
and
out
jg
dec
xor
dec
andb
pop
and
mov
push
push
xchg
xchg
inc
fs
xlat
adc
js
or
je
stos
xchg
jb
shlb
jnp
lock
mov
call
pop
lods
or
cmp
inc
aas
and
imul
adc
hlt
or
pop
ss
sbb
repnz
outsl
pop
mov
lods
inc
hlt
add
mov
lock
adcb
ja
xchg
push
pushf
xor
xlat
dec
mov
out
ljmp
jno
and
push
adc
filds
and
mov
loopne
mov
xor
ret
pushf
add
lret
sub
jb
xchg
cmp
xchg
out
jge
and
lret
and
xchg
dec
addr16
lahf
fcoms
jmp
mov
adc
ja
loopne
jnp
sbb
xor
insb
aaa
shrl
sti
cmp
and
or
test
and
lds
xor
pop
jg
add
mov
in
mov
cmp
xchg
ss
dec
int3
stc
pop
mov
sti
xor
and
xchg
shr
addr16
call
jae
add
icebp
mov
pop
push
xor
test
cmp
pop
in
jl
rclb
into
xor
dec
shrb
push
sub
lret
mov
adc
mov
dec
stos
add
or
outsl
xchg
adc
idiv
nop
jae
jnp
add
pushf
add
jle
hlt
adc
mov
frstor
idivl
sub
filds
loopne
mov
push
mov
sbb
mov
iret
sbb
movb
int3
clc
and
jo
jne
xchg
sbb
jno
out
add
sbb
sbb
rcrl
sub
and
push
das
xor
dec
flds
sbb
loope
jp
or
jle
push
jge
inc
mov
push
ret
inc
jb
popa
push
dec
insb
mov
jae
dec
push
push
cmpb
repz
cmpsb
cs
or
in
frstor
lds
les
fadds
fidivs
adc
movb
sub
push
xor
lds
xchg
mov
xchg
sub
xchg
sbb
xor
sub
das
push
in
mov
adc
push
dec
push
sarb
mov
loope
lock
and
push
cld
filds
or
addb
sar
fidivrl
mov
or
ljmp
into
fcomp
inc
test
lret
and
or
inc
xchg
popf
dec
xchg
mov
jns
popf
fwait
cwtl
or
mov
out
dec
cmp
mov
xchg
push
outsb
mov
inc
pop
jecxz
pushf
imul
adc
rcrb
lret
les
sahf
push
xchg
mov
add
mov
aam
lcall
cmp
pop
test
loope
xor
jo
ds
dec
out
pop
dec
xchg
cmp
push
lret
je
in
or
and
xor
jae
es
mov
mov
rorb
test
mov
ror
or
imul
mov
pop
nop
sar
or
bound
mov
inc
aas
test
cmpsb
xor
mov
sahf
push
cmp
push
imul
icebp
mov
popa
das
pop
cmp
pop
call
add
cmp
fisubl
push
adc
cmp
mov
fisttpll
jle
or
mov
cltd
scas
testl
test
sti
fnsave
lret
xor
imul
shr
inc
test
dec
cmp
int3
mov
repnz
adc
jnp
push
sub
sahf
inc
leave
fcoms
mov
movsb
adc
push
bound
push
inc
push
mov
push
jecxz
mov
cmpsb
jge
popa
pop
mov
xchg
and
das
clc
mov
mov
int
mov
repnz
add
repnz
adc
int
or
mov
adc
pushf
stos
in
cmp
movsl
mov
or
adc
pop
xor
push
xor
sub
dec
call
test
dec
sahf
add
repz
xor
mov
adc
leave
xor
iret
movsl
ljmp
pushf
sub
int3
outsb
adc
jo
mov
jb
loope
popf
mov
in
stc
sub
pop
cmpsb
mov
leave
mov
xchg
int3
stos
lods
xor
mov
icebp
es
call
pop
in
out
or
nop
imul
dec
cmpsb
les
sbb
push
mov
inc
pop
mov
ret
bnd
fisubrl
push
sbb
mov
sbb
cli
cmp
xchg
adcb
outsl
push
add
adc
jge
ljmp
jne
outsl
pusha
lret
sub
jae
stos
xchg
cmp
int
jg
in
adc
arpl
xchg
jns
es
fmul
clc
popl
into
sub
xor
lods
adc
sub
shr
cmp
loope
adc
movsl
pop
xor
pop
push
mov
shl
jge
mov
dec
xor
adc
xchg
cld
pushl
fadds
in
sub
psrld
rcl
das
mov
cmp
xor
mov
insl
int3
jmp
xchg
stc
rcrl
dec
adc
push
jmp
popf
popl
das
aad
test
adc
jecxz
fisttpl
adc
mov
add
imul
fs
xor
loopne
scas
je
inc
push
popf
iret
aam
adcl
adc
dec
mov
int
sbb
or
iret
mov
jb
cmp
fisubrl
adc
ficoms
push
stos
inc
cmpsl
enter
test
xor
popa
jo
nop
fdivl
call
dec
scas
and
adc
cwtl
push
jle
icebp
test
sti
dec
xchg
push
stos
xor
and
jle
jb
cmc
cmp
pusha
stos
inc
clc
and
mov
movsl
outsl
pop
packssdw
push
jl
mov
cld
xor
dec
test
dec
in
rcrl
mov
mov
xchg
dec
xor
cmp
mov
xchg
aam
push
inc
push
jmp
add
mov
imul
aad
pop
xor
jmp
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
insl
or
add
add
add
add
add
out
roll
data16
ljmp
inc
fnsave
add
outsl
cli
adc
adc
cmc
push
adc
xor
cmp
ret
mov
adc
mov
lods
pushf
mov
jmp
dec
fsubrs
int3
jge
jne
rclb
lret
dec
jl
add
das
shlb
or
and
jg
and
cmp
xchg
mov
scas
clc
lcall
pop
pop
mov
movsl
in
mov
popf
dec
dec
push
sbb
testb
arpl
xchg
aas
cltd
sbb
jp
fnstenv
xchg
dec
insb
xchg
sbb
xchg
jbe
addr16
lea
fs
loop
pop
out
mov
pop
cmp
cmp
mov
mov
inc
outsb
iret
mov
loope
out
cld
cs
mov
dec
sub
dec
adc
shll
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
