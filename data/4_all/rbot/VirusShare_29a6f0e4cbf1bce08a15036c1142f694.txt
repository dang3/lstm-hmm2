mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
push
jge
into
pop
push
sbb
and
aas
sbb
ss
and
sub
jmp
mov
mov
repz
and
mov
push
push
lock
outsb
xor
or
aam
sub
nop
shll
sbb
jo
jmp
mov
outsb
xchg
push
push
push
test
imul
cmp
push
js
lods
sub
call
jmp
sub
pop
adc
dec
lock
imul
call
adc
aas
loopne
add
sub
mov
int3
mov
iret
push
push
push
sti
sub
mov
sahf
out
push
pop
mov
jp
and
jo
or
ds
jle
push
pop
lret
sti
cli
dec
push
sub
sbb
fiaddl
adcb
or
in
loopne
das
pop
pop
out
adc
rcll
jp
jge
gs
pusha
and
adc
jbe
out
fwait
sbb
ljmp
hlt
pusha
out
xorl
mov
inc
adc
jecxz
nop
adcl
sbb
xor
dec
lods
sarl
xchg
adc
rcll
bt
mov
jae
test
sahf
lret
inc
inc
mulb
insb
jle
stos
push
xchg
dec
enter
aas
push
adc
or
arpl
mov
outsl
sub
jge
or
std
scas
outsb
or
popf
gs
sbb
sbb
lea
pop
stos
out
jecxz
inc
mov
in
insl
or
loop
xor
lret
push
sbb
fdivp
in
push
mov
pushf
sub
mov
jae
mov
jnp
imul
fildl
jmp
push
hlt
movl
mov
addr16
cld
cmp
mov
cmp
xor
sub
pop
and
adc
push
cmp
mov
sub
lahf
outsl
pop
clc
cmp
or
and
hlt
bound
lea
mov
xorb
pop
xlat
sbb
addr16
dec
sbb
int3
jne
cmp
mov
ds
lds
das
mov
pop
fwait
mov
lret
mov
ljmp
repz
hlt
pop
inc
mov
imul
out
push
out
cmpl
sub
pop
or
mov
or
adc
inc
adc
clc
and
mov
mov
loope
sbb
cmp
xchg
xchg
dec
decl
stos
mov
xchg
and
cmp
es
leave
mov
jae
pop
pop
fmuls
jecxz
mov
fs
repz
into
adc
jb
xor
sahf
jg
stos
xchg
xchg
outsl
pop
hlt
sbb
or
jg
mov
fwait
jg
sbb
push
in
outsb
jno
jmp
sub
mov
sub
adc
je
lahf
fnsave
pusha
loope
mov
push
arpl
jg
lods
jne
cli
shll
js
fstpl
mov
mov
mov
lahf
cltd
cmp
mov
cmp
or
mov
cmpsl
jne
lods
jnp
pop
cmpsl
push
jl
out
in
mov
sbb
mov
mov
mov
xor
pusha
outsb
sub
mov
cli
call
fstpt
repnz
xor
lret
in
jp
mov
insl
out
flds
mov
cmp
pop
mov
cmp
inc
mov
mov
mov
or
pushf
jp
mov
stos
sub
lcall
aad
jbe
popf
xchg
ja
adc
pop
sbb
cmpl
mov
adc
popf
dec
gs
mov
xor
push
lret
in
outsb
hlt
shll
out
adc
sub
mov
out
xchg
in
and
pop
pop
lcall
xlat
inc
sub
ret
je
stos
popf
inc
mov
filds
int3
mov
adc
imul
dec
ds
fstpl
sbb
iret
cmp
pop
rolb
and
dec
adc
jmp
pop
inc
mov
lret
and
mov
dec
and
pop
loop
dec
xor
call
push
push
ja
inc
cmp
sbb
es
adc
pop
jae
or
rol
sbb
or
xor
dec
push
dec
loop
add
push
cmp
bound
fnsave
push
and
movsl
cmp
jge
or
mov
xchg
call
dec
scas
push
sub
mov
pop
lock
lea
fcoml
aas
dec
mov
or
stos
out
into
jmp
xor
jbe
push
lods
clc
pop
in
xor
or
div
or
sub
in
frstor
sbb
mov
fs
dec
xchg
insb
and
and
call
call
shll
inc
es
insl
pushl
or
pop
sbb
shrb
div
icebp
pop
js
loope
jp
mov
stos
and
repnz
sbb
les
pushf
cmp
jecxz
subl
icebp
loopne
repz
cltd
add
notb
movsb
insb
insb
sbb
inc
mov
addr16
sbb
data16
add
ret
add
jecxz
testl
daa
mov
xor
cmpsb
and
jnp
in
xor
in
es
xchg
pop
jg
push
mov
add
scas
or
jle
cmp
ja
cmp
mov
pop
ret
and
mov
jecxz
bound
and
mov
or
cmp
enter
hlt
push
and
insl
jg
mov
sub
jnp
mov
lret
movsl
ljmp
adc
shll
push
andb
lock
xorb
aas
je
aad
lock
mov
into
out
xor
cmp
out
add
aas
scas
xlat
sub
out
pushf
cmp
or
jno
mov
pop
aas
add
fnstcw
mov
outsl
mov
fisttpll
xchg
push
cmp
aad
mov
sbb
push
jle
cli
sub
cmc
pop
cmp
pop
adc
push
push
idivl
sbb
scas
out
notl
push
shrb
jmp
into
addl
shrl
into
push
adc
scas
outsb
in
xchg
and
ret
xor
gs
daa
pop
ljmp
mov
push
cmp
hlt
js
addr16
adc
outsl
cmp
popf
ds
fcom
shl
je
dec
pop
mov
out
add
pop
pop
addr16
mov
mov
push
call
pavgw
add
sub
ficoms
push
stos
jns
xchg
daa
shlb
imul
inc
inc
sub
cmpsb
bound
mov
mov
mov
or
rorl
mov
aam
sbb
push
mov
enter
das
and
pop
mov
jge
outsb
push
xchg
dec
out
push
popa
cmp
outsl
jbe
imul
inc
ret
or
or
aas
jnp
enter
mov
mov
inc
xchg
mov
jmp
insb
das
jle
pop
mov
push
push
stc
js
pop
xor
bound
clc
mov
sub
push
push
xchg
fisttps
dec
mov
sbb
js
out
jmp
insb
push
xchg
int3
ret
mov
fwait
sub
and
pusha
sarl
shrb
in
xchg
negb
cmpsb
mov
in
push
inc
insb
xchg
decb
sbb
jbe
dec
sahf
cwtl
insl
jmp
orb
cltd
inc
mov
pop
sub
enter
xor
adc
pusha
hlt
mov
push
jb
adc
xor
popf
lret
lret
lods
xor
std
inc
lock
inc
xchg
xchg
pop
daa
les
inc
lret
imul
mov
mov
clc
jmp
cmp
sti
push
cmpb
xchg
xchg
enter
cmpsb
pusha
outsl
mov
lock
in
dec
cmp
or
shll
mov
mov
inc
sub
pop
mov
lret
jns
jb
push
adc
rol
mov
ret
mov
ljmp
mov
int
sbb
add
shl
je
test
sti
js
cmp
and
subl
cmp
pop
mov
cmovns
cmp
mov
imull
or
inc
inc
jne
inc
and
push
sbb
mov
sbbl
lret
xor
pop
movsl
and
and
jbe
adc
push
mov
xlat
lea
sub
outsl
repz
mov
adc
push
ret
mov
or
insl
mov
jmp
lds
mov
push
pop
imul
data16
in
pop
pop
cli
jp
out
rorb
bound
icebp
popf
push
rol
popf
test
pop
mov
loope
stc
imul
ret
xchg
xchg
ret
imul
inc
test
dec
mov
cmpsl
pop
insb
add
stc
add
xor
sbb
xchg
lods
push
out
adc
or
xor
loop
cld
xchg
mov
or
and
cmc
fdivr
mov
sbb
fucomip
rcr
fsubp
repz
xchg
or
mov
mov
xor
shrl
xchg
es
lods
add
loop
enter
and
or
fbld
jb
jle
out
mov
xchg
or
push
negl
pusha
int
push
enter
sub
lea
hlt
cmp
insl
push
xchg
sbb
fs
addl
cmpsl
dec
loopne
and
loop
test
sub
cmp
pop
fs
hlt
call
je
lea
ja
sar
cmpsb
add
xchg
sbb
fcmovnbe
dec
sbb
into
sahf
xchg
push
jno
loope
negb
fdivrs
out
mov
mov
stos
dec
pop
push
inc
adc
jmp
pushf
mov
fldl
jne
dec
test
ja
sub
mov
dec
rcll
insb
pop
jge
cmp
mov
mov
das
outsb
mov
jmp
cmpsb
cwtl
mov
push
mov
lcall
lods
cmc
outsb
div
mov
test
fnstsw
mov
push
sub
mov
add
mov
and
mov
cmp
sahf
inc
shlb
jg
and
in
xchg
loopne
fmuls
xor
inc
mov
pop
push
or
hlt
mov
daa
push
or
or
icebp
mov
pop
push
scas
or
je
test
popf
lahf
mov
dec
dec
mov
addr16
into
adc
lret
push
jle
add
jmp
xchg
pop
fs
xchg
inc
in
push
jne
xor
enter
imul
add
fmuls
push
and
add
dec
sub
into
hlt
out
repnz
clc
inc
and
mov
pop
mov
inc
and
inc
mov
mov
xchg
addr16
sbb
movsl
push
call
cmp
cwtl
push
pop
mov
or
and
ret
mov
sub
mov
inc
push
in
xor
pop
repz
stc
cs
xchg
dec
insb
inc
jne
fwait
std
lahf
mov
movsb
cld
sub
jmp
add
sahf
pop
negl
xor
cld
jge
insl
pcmpgtw
js
dec
sbb
sti
dec
adc
aaa
js
fsubs
sbb
adc
dec
inc
pushf
add
sbb
popa
in
mov
cltd
cmc
movsb
xchg
add
test
xchg
jo
insl
adc
stc
sub
int3
cld
mov
loope
push
mov
mov
ja
sub
aam
lods
pop
lcall
scas
mov
jle
stos
jo
fucomip
pop
xchg
shlb
outsb
movsb
mov
sub
stc
cmpsb
pop
scas
inc
mov
jne
hlt
cmp
idivl
popf
in
sub
adc
cmpsl
pop
lds
dec
sub
sti
cmp
leave
jg
add
push
push
mov
gs
mov
insl
mov
or
jbe
sub
repz
out
xchg
mov
loope
pop
insl
fcom
pushf
es
out
inc
xor
repz
mov
decb
cmp
push
test
mov
xor
bound
das
in
inc
xor
sar
cmp
test
flds
and
sub
lea
dec
movsb
scas
xor
add
pusha
jne
pushf
sbb
fs
inc
xchg
mov
inc
adc
and
inc
and
bound
insb
mov
cmp
mov
cmp
popf
enter
adc
mov
xlat
dec
push
aaa
fsubrp
jle
pop
or
clc
jl
adc
subl
fdivr
lods
pop
and
aaa
cli
jb
push
fldt
pop
pop
lret
dec
and
adc
sub
adc
adc
rolb
add
pop
fdiv
and
mov
mov
les
les
outsb
hlt
pop
xor
mov
cmpb
pop
psubb
int3
adc
das
sub
rep
mov
jo
xor
daa
lea
fistpll
aam
mov
lds
jmp
das
jne
lods
fistpl
inc
push
jns
xchg
adc
or
hlt
adc
popf
lcall
add
sbb
and
sub
xor
ljmp
rclb
popf
and
mov
jle
pushf
cmpsb
push
cld
xchg
jmp
sub
rcrb
xchg
scas
cmc
sbb
lea
leave
adc
xlat
jmp
mov
ret
fldcw
jle
stos
xchg
adc
jp
jae
in
xchg
lock
enter
push
sbb
addb
leave
and
xchg
iret
daa
rcrl
pop
ret
into
int3
mov
aad
lar
sub
push
stos
orb
mov
shlb
out
std
jl
lahf
inc
iret
lea
xchg
neg
inc
scas
mov
mov
loop
jle
xor
shlb
mov
sbb
cmc
out
es
clc
cmp
or
push
outsb
mov
inc
or
add
dec
std
sbb
or
and
mov
dec
cmp
mov
mov
and
dec
call
xchg
mov
or
sub
mov
cmp
xchg
andps
push
outsb
cmpsl
fbstp
inc
adc
cmp
sti
mov
mov
jg
jb
sbb
sbb
mov
fsts
xor
call
cld
enter
ja
call
fwait
loop
adc
sahf
fs
push
jg
aam
cmp
stc
mov
sbb
out
sbb
outsb
and
rclb
sbb
fcompl
rcrb
out
or
inc
xchg
cs
mov
pop
insl
ret
or
test
data16
mov
daa
test
sub
push
push
cld
add
arpl
arpl
cmp
shlb
lock
push
push
iret
hlt
mov
push
sbb
push
mov
jg
add
mov
and
adc
fs
dec
in
sub
xor
in
sbb
movl
fisttps
mov
outsl
xor
cmc
ja
loope
push
in
jb
cmp
mov
push
xor
int
jle
daa
shlb
mov
imul
and
jbe
imul
adc
call
loop
cmp
jno
mov
rcr
iret
into
jge
and
push
lcall
ljmp
insl
cld
sub
nop
scas
xlat
pop
sub
rcl
and
jns
fisttpl
lret
pop
push
popf
dec
pop
ja
int3
scas
mov
fucomip
out
push
loopne
mov
adc
jg
mov
pop
mov
sub
adc
jmp
in
pusha
xchg
mov
push
inc
pushf
cmp
sahf
loope
pop
lock
push
cs
and
loopne
ss
outsl
lahf
dec
cmp
repnz
jmp
push
arpl
int3
dec
or
flds
fildll
ds
lret
sub
xor
add
pop
dec
stc
shl
sub
or
in
outsb
out
mov
and
out
and
loopne
push
fisubs
es
loope
icebp
pop
xor
call
or
mov
aaa
popa
adc
and
movsl
fnstenv
xlat
std
xlat
in
dec
xchg
fsubrl
int
outsl
into
dec
fmul
sbb
gs
into
lcall
or
popf
adc
mov
xlat
fucomip
inc
andb
sahf
jo
ficompl
das
push
stos
mov
mov
sub
or
push
xchg
cmp
jle
jne
daa
adc
cmp
das
movups
std
xchg
mov
add
and
gs
das
bswap
xor
mov
loop
popf
icebp
in
imul
mov
icebp
push
imul
nop
push
dec
imul
pushf
int
sbb
cmpsl
mov
lock
lock
ss
fstps
mov
pop
or
inc
cmc
mov
xor
fbld
cltd
repz
add
cmp
push
loop
fldcw
inc
mov
mov
and
repz
fs
in
mov
jmp
fwait
xor
and
pop
mov
andb
dec
sbb
arpl
pop
ja
mov
xchg
sbb
imul
popf
push
cmpsl
das
adc
enter
std
mov
xchg
jp
nop
das
iret
push
repnz
in
lret
dec
push
in
inc
fucomip
stos
push
mov
and
mov
and
push
mov
cmc
add
xor
mov
jo
ret
outsl
fimull
movaps
mov
in
mov
inc
fiaddl
iret
mov
push
lcall
stc
scas
outsl
add
mov
aas
movsb
mov
and
inc
fsubrs
push
jg
sub
sub
mov
dec
call
inc
xor
ficompl
or
imul
dec
mov
imull
in
add
test
dec
xor
adc
les
std
shlb
into
cmpsb
pop
repz
mov
push
pop
pop
xor
jg
cmpps
ret
mov
lds
in
and
fcomp
xchg
jl
lods
dec
aas
xchg
call
pop
cmp
jp
cmpsb
and
fisttps
pop
push
dec
faddp
and
sbb
cmc
es
mov
xchg
shrl
xor
cmp
jae
add
or
push
lods
into
clc
or
daa
xorb
pop
idivl
inc
ja,pt
stc
gs
jge
sbbl
ret
call
jge
xchg
stos
roll
dec
adc
add
dec
lahf
mov
pop
mov
fisttpl
jmp
jp
arpl
sbbb
pop
pop
mov
sbb
sbb
push
cmp
iret
push
dec
and
cltd
cmc
stos
loop
push
inc
gs
adc
pop
ja
test
sarb
popl
jnp
or
aad
sub
test
pop
cli
adc
in
popf
jl,pt
out
mov
mov
or
xchg
inc
test
lods
dec
mov
sub
aas
adc
mov
lret
int3
pop
hlt
mov
pushf
mov
pop
jle
stc
es
sub
loopne
and
mov
lock
pushl
lock
xor
adc
push
dec
lahf
lret
pop
add
mov
or
mov
les
sti
pop
jmp
into
add
mov
lahf
insl
or
movsb
popa
scas
or
and
mov
push
roll
dec
sub
test
pop
add
cmp
scas
scas
inc
cltd
fimull
aaa
imul
dec
inc
jge
arpl
cmp
outsl
mov
inc
inc
gs
repz
fucom
pop
cs
dec
stos
iret
jno
cs
add
xchg
add
jb
bound
outsb
lret
sbb
popf
lcall
mov
into
fldenv
xchg
fisubrs
lret
sub
cmpl
jbe
dec
sbb
pop
and
mov
testl
jb
loope
scas
xchg
incl
mov
popa
sbb
stos
dec
sti
test
icebp
and
adc
dec
xchg
mov
mov
jl
pop
pop
dec
clc
dec
in
filds
mov
in
aad
shll
ret
add
clc
add
jmp
jae
and
mov
adc
xchg
pushl
jne
push
sub
mov
xchg
fisubrs
jle
ja
push
adc
loopne
popa
shl
outsl
inc
sahf
ret
inc
lcall
call
and
rcr
xorl
jae
add
xchg
js
sbb
out
xchg
popa
pop
movsb
sbb
or
sbb
in
push
push
mov
out
or
call
pop
xchg
mov
mov
push
mov
and
arpl
into
loop
jo
imull
sbb
pop
mov
negb
popa
ja
pop
push
outsl
aad
lods
sub
mov
jp
push
popa
inc
cmc
xchg
adc
inc
mov
sub
xchg
fwait
ljmp
shll
sbb
mov
sbb
jle
pop
outsb
add
jnp
inc
fs
xor
mov
mov
xchg
mov
insb
pop
jecxz
mov
adc
mov
and
into
lcall
sbb
pop
js
push
fiadds
add
jne
mov
ljmp
cmp
add
jb
mov
fcoms
dec
imul
sub
inc
xor
arpl
xor
stos
sti
mov
test
clc
icebp
popa
cli
xor
fwait
leave
sub
dec
fucom
data16
jne
adc
fdivrl
jbe
inc
sbb
cmp
test
jns
sbb
lods
and
pop
sahf
sbb
mov
lret
sbb
cmp
iret
mov
pushf
out
mov
xchg
outsb
fsubr
sbb
jne
dec
dec
jne
ret
sub
xor
rcll
addr16
ds
sub
sti
mov
or
fucompp
jmp
pusha
imul
ss
icebp
inc
fisttpl
lock
jno
je
inc
repz
orl
dec
add
push
or
add
xchg
pop
xchg
mov
mov
popf
pop
mov
jns
insl
sbb
adc
or
out
fistl
int
cmp
neg
addr16
cmpsb
jp
xchg
adcb
cmpsl
loopne
lcall
enter
add
outsb
mov
dec
xchg
sbb
movsl
inc
adc
or
cmp
xchg
dec
cwtl
xchg
sbb
aas
push
mov
cmp
inc
pop
lcall
ljmp
les
in
jo
stos
int
or
adc
inc
enter
addr16
imul
es
orb
cs
in
in
lods
fldt
fstsw
fisubs
xlat
es
ret
sahf
jbe
sbb
mov
xor
adc
jnp
inc
paddw
rcrl
push
xchg
mov
test
out
scas
sub
adc
out
sub
fildl
imul
shrb
adc
sub
and
mov
iret
arpl
fwait
loope
bound
aas
jbe
cmp
jmp
sahf
mov
pop
rcrl
jno
loop
cmc
push
pushf
mov
aam
add
inc
adc
enter
pop
push
out
movsl
inc
lahf
or
mov
dec
jnp
pop
js
jp
int3
mov
iret
jbe
jge
dec
out
dec
xchg
loopne
cmc
or
push
popf
fcmovnb
xchg
rcrb
cmp
mov
cs
out
dec
jp
fldcw
inc
es
fists
sub
xor
shr
pop
mov
incb
add
inc
or
or
xchg
sbb
nop
stos
mov
push
lret
sbb
sub
mov
add
int3
cmp
mov
mov
pusha
and
or
testl
ds
adc
cmpsl
xchg
and
addr16
outsl
fwait
sub
adc
iret
outsb
adc
push
loope
pusha
cs
ss
lret
dec
ja
fs
mov
and
mov
jno
cmp
mov
mov
sub
in
aam
ret
mov
sub
pushf
stc
inc
push
push
roll
inc
mulb
incl
fwait
sbb
loope
xor
xchg
cli
repz
pop
push
gs
loopne
xor
push
pop
xchg
loope
mov
fstpt
xchg
ljmp
orl
inc
roll
cmp
push
sbb
fwait
rclb
imul
jb
adc
test
and
xor
fbstp
out
test
scas
jmp
test
mov
into
pop
add
mov
mov
iret
mov
sbb
sbb
stos
ja
xchg
or
pop
imul
repz
push
sbb
mov
mov
out
in
sbb
pop
or
outsb
fdivrp
pop
ljmp
adc
xor
push
mov
fwait
iret
mov
incl
pop
aad
add
dec
or
add
jne
push
stos
push
in
inc
mov
leave
jg,pn
mov
xlat
inc
test
out
pop
mov
jne
jo
fadds
fcoms
mov
add
notl
mov
adc
adc
or
add
into
test
scas
adc
inc
loope
sub
sbb
dec
mov
stos
jae
orb
ret
lock
push
add
jl
out
push
xor
ss
les
rcll
cmp
idiv
jle
out
mov
inc
jecxz
jle
fadds
js
inc
scas
and
push
mov
xlat
cmpl
das
in
sti
aam
mov
addl
jg
lret
orb
out
cmp
adc
push
mov
xchg
or
cli
sahf
inc
mov
fmuls
js
pop
push
add
xor
add
add
jbe
inc
xchg
movsb
fld
aam
adc
out
mov
sub
shrl
movsl
cltd
std
hlt
inc
stos
inc
push
iret
leave
idivl
out
divl
loope
aam
dec
xor
add
cli
test
cmp
call
or
loope
jge
loope
cli
rolb
addr16
jns
sti
loop
je
sub
mov
arpl
push
dec
push
push
fsubrl
mov
lret
lea
mov
sbb
sub
xor
sub
sahf
sbb
data16
dec
push
or
and
xchg
aaa
xor
cmp
aad
mov
mov
stos
ret
sarl
push
push
into
and
sub
push
imul
sbb
fdivs
mov
pusha
cmp
pop
shll
cmp
in
inc
rcr
mov
pop
or
sarl
lret
dec
movsb
dec
pop
dec
test
push
xchg
ret
and
testb
or
pop
cmp
jle
push
fs
ficoml
imul
clc
popf
fnstenv
and
xchg
shrl
mov
imul
or
testl
adc
insl
imul
sub
jns
cs
test
xchg
aad
addb
lret
in
push
xor
mov
cmp
pop
scas
jle
add
bound
test
mov
jg
fbld
mov
adc
push
sub
popf
cmpsb
adc
mov
sbb
fs
ficompl
dec
jl
loopne
adc
and
and
fdivrl
add
iret
lret
mov
pop
mov
les
jno
jnp
sub
icebp
jmp
inc
sahf
imul
cmp
int
jae
test
push
mov
enter
mov
jbe
inc
outsb
fwait
pop
jmp
or
nop
dec
movsl
in
fdivl
cs
xor
stos
loope
mov
inc
mov
or
xchg
xor
inc
mov
fstps
cwtl
fiaddl
xchg
shll
shll
jno
sbb
icebp
ljmp
add
das
pushf
mov
sub
jmp
lcall
cmpsb
cli
stc
xor
and
jmp
sub
jecxz
je
push
mov
popl
push
out
jb
decl
jmp
push
mov
fstp
out
jmp
les
or
mov
mov
sub
jns
in
mov
dec
mov
mov
lea
xor
daa
gs
insl
mov
aas
sbb
bound
lcall
movsl
push
xor
add
lcall
popf
inc
nop
jg
lahf
mov
fcomps
aas
add
or
imul
pop
and
pop
jb
shll
inc
adc
lods
adc
mov
mov
mov
jge
movsb
insb
jns
xchg
cmpsb
testb
push
fstps
and
ret
and
lahf
mov
mov
subb
lea
push
pop
mov
add
shl
jb
lock
loopne
sub
sbb
mov
imul
inc
mov
cmp
sbb
mov
mov
inc
lahf
sub
filds
shll
int
push
cmp
dec
fnsave
adc
dec
mov
mov
insl
push
idivl
je
repnz
push
xchg
clc
lret
idivl
dec
add
call
jg
adc
mov
mov
mov
xchg
sbb
sarb
fdivrp
ficomps
jae
in
das
imull
shlb
jp
adc
and
sub
fs
add
push
fdivrp
adc
jmp
and
popa
or
dec
fildl
test
xor
popf
ja
dec
fsts
push
or
popf
mov
add
add
jle
xchg
fisttps
xor
sbb
cli
pushf
fisttpl
mov
stc
jle
enter
dec
mov
cmp
fisttpll
inc
outsl
lcall
scas
stos
outsl
xor
mov
cmp
lret
outsl
mov
out
push
add
in
adc
mov
push
or
ret
gs
lea
add
repnz
outsb
imul
in
cs
popf
insl
andb
cmp
in
lds
mov
push
hlt
jp,pn
push
dec
popf
push
jne
inc
fcmovnbe
mov
pop
or
cmp
out
js
cmp
mov
jle
pop
xor
in
das
and
jecxz
orb
test
mov
fmuls
jl
pushf
and
push
cld
arpl
lods
int3
cmp
rorb
adc
fs
hlt
pop
pop
mov
test
mov
lahf
loope
mov
sub
adc
mov
push
lahf
xchg
imul
xchg
jne
jp
mov
jo
mov
pop
or
les
ds
sbb
xchg
push
or
lods
gs
mov
mov
stc
test
into
mov
or
xor
and
ja
xorl
popa
dec
lds
cli
out
xchg
lods
ret
adc
hlt
sub
xchg
cmp
mov
fidivs
sub
in
leave
lock
mov
sti
inc
or
movb
mov
jl
pop
inc
pop
icebp
or
xchg
add
cwtl
jge
mov
mov
bswap
nop
in
lods
ret
out
cmp
jg
leave
repz
mov
mov
daa
out
dec
xlat
pop
shl
mov
rolb
pop
std
leave
fdivrl
mov
push
pushw
add
shl
das
ja
xchg
faddp
outsb
fsubl
ds
mulb
adcb
mov
jl
xor
icebp
jl
sbb
in
jl
ds
fwait
mov
loope
add
aas
xlat
scas
repz
xorl
nop
xchg
mov
lcall
sub
dec
imul
test
movsb
xchg
xor
and
cmp
inc
push
mov
xchg
dec
or
shl
mov
in
cmp
jbe
sbb
lock
leave
scas
mov
push
shlw
ljmp
inc
and
inc
xor
mov
sub
inc
jmp
testl
or
cmp
cmp
or
mov
in
inc
jle
lods
js
pop
sub
push
sub
cmc
sbb
js
sub
xabort
pushf
cmpsl
pop
lea
out
out
insl
hlt
sub
gs
aaa
je
ret
test
lds
rclb
dec
lcall
and
sbb
std
dec
or
jb
rorb
jle
lods
into
loopne
fwait
or
sbb
pop
inc
mov
sub
mov
popa
and
mov
xor
mov
arpl
int3
pop
scas
cltd
adc
mov
in
pop
mov
shll
aas
mov
scas
enter
sarb
popa
stos
dec
mov
add
fmulp
pop
pop
xlat
add
pop
fisttps
pop
and
subb
fists
sbb
and
int
data16
jg
pop
inc
jecxz
js
dec
movsb
gs
and
gs
fcompl
xchg
sub
add
icebp
jne
mov
popf
lret
sub
sbb
push
push
or
xchg
inc
leave
sbb
insl
pusha
mov
scas
daa
push
add
push
rorl
inc
popa
sarl
fimull
sub
push
push
lock
sbb
insl
mov
lret
jb
addr16
sbb
fisubrl
xchg
adc
adc
push
ljmp
ret
mov
mov
loope
pop
mov
fstl
daa
loope,pn
mov
lods
adc
cmp
data16
push
dec
int
std
xchg
sahf
rclb
fisubrs
stos
fiadds
mov
aas
mov
or
or
pop
pop
fbld
push
arpl
divl
push
dec
in
sbb
insl
sbb
pop
lret
sbb
mov
pushf
sti
add
mov
add
fs
ja
aaa
xchg
nop
and
xor
insl
inc
in
es
lea
push
sub
scas
movsb
outsl
dec
mov
jbe
movsb
sbb
inc
fcmovnu
push
or
int
jbe
push
scas
jae
pop
cltd
pop
lods
int
leave
dec
int3
cmc
sbb
into
mov
fiadds
pushw
mov
xchg
xor
push
cmpsb
gs
xor
ret
mov
mov
mov
es
pop
imul
cmp
cltd
mov
pushf
imul
mov
pop
inc
sbb
scas
int3
and
adc
hlt
into
test
pop
ja
add
dec
jg
dec
test
inc
cmp
sub
nop
and
test
mov
sub
xchg
sbb
sub
fisttps
xchg
push
mov
jmp
sti
push
mov
pop
and
pop
sbb
add
mov
sub
testb
clc
mov
sub
add
pop
iret
scas
in
dec
dec
lahf
popa
add
or
pop
mov
jno
inc
dec
dec
jge
mov
push
sbb
test
mov
lea
iret
mov
out
lret
lret
mov
mov
addr16
add
lcall
pop
cmp
mov
je
xchg
push
std
sbb
aas
cld
xchg
popf
and
mov
push
cmpl
dec
stos
cs
rcrb
mov
divl
cmpsl
rclb
cwtl
out
pop
jg
mov
jecxz
adc
mov
or
push
mov
pop
cmpsb
xor
mov
loope
ficoml
xor
lea
mov
and
testb
cs
or
jnp
mov
mov
mulb
dec
dec
pop
mov
mov
or
dec
dec
test
jno
cmpsb
inc
and
lock
xchg
lcall
jmp
shll
cmp
jae
sarb
xor
les
outsl
mov
das
cwtl
dec
call
sbb
js
ret
sti
xor
cmp
lahf
adc
imul
jp
push
xor
or
pop
sbb
lahf
pushf
imul
xchg
imul
xor
fstps
sub
pop
stc
outsl
aas
das
add
mov
jne
xchg
pusha
in
hlt
cmp
sub
ret
and
pop
test
sub
lds
adcl
rol
jl
cltd
cltd
sub
fwait
iret
sbb
inc
fcmovnbe
sub
cmp
cmp
mov
std
pusha
adc
sahf
dec
scas
subb
bound
sti
popa
ret
push
subl
test
mov
dec
xor
and
inc
mov
nop
sbb
mov
sub
insb
or
call
dec
insb
and
cltd
sub
mov
mov
ja
test
scas
push
sbb
jle
push
sub
dec
mov
sub
cmpsl
sbb
loope
jno
aam
xchg
jecxz
rcl
rclb
mov
pop
and
pusha
loopne
aam
icebp
arpl
mov
push
das
xchg
add
mov
rol
loopne
pushf
inc
xchg
clc
pop
aas
xchg
mov
and
pop
xchg
pop
and
arpl
out
and
sub
popl
xor
or
ficoms
data16
cs
push
mov
push
js
das
leave
packssdw
mov
test
add
nop
dec
enter
push
or
jbe
pop
loop
mov
xchg
jns
adc
or
cwtl
jl
sahf
push
and
testb
je
add
in
mov
out
inc
shll
test
test
sub
sbb
inc
mov
cmp
jns
xor
hlt
mov
js
push
es
lods
xchg
dec
pop
js
sub
addr16
scas
jnp
lock
or
jnp
and
fcomp
stos
fs
xchg
lods
out
sub
xchg
mov
arpl
push
xlat
xchg
inc
mov
jmp
push
mov
in
or
push
xchg
mov
mov
push
sub
pop
ret
fs
cs
sbb
das
rcrl
cld
pushf
xchg
mov
jae
lods
pop
dec
push
or
les
and
add
mov
outsl
aaa
sub
xchg
sbb
jl
psubusw
iret
mov
and
mov
out
ds
stc
mov
add
movsl
add
dec
dec
out
adc
inc
and
arpl
jge
mov
hlt
cltd
jo
out
xor
imul
xchg
mov
loope
cmc
sti
popf
outsb
sbbl
into
jno
xchg
pop
inc
lret
das
mov
lea
add
clc
enter
cmp
jo
iret
pushf
mov
aaa
cmp
out
cmpsb
daa
aad
xchg
jae
loop
scas
or
mov
pop
xchg
and
pop
cmp
je
xor
or
adc
fstps
lods
xchg
dec
int3
clc
in
dec
loop
inc
jle
or
jb
jg
jae
cmpsl
fsts
jne
loope
dec
pop
lahf
cmc
popf
push
test
xchg
mov
fsubrp
lret
inc
cld
or
xchg
xchg
cld
addr16
outsl
in
fistpll
and
movsb
inc
fcoml
mov
js
xorl
lret
int
cmp
std
add
or
xor
inc
ret
pop
int3
sub
or
mov
test
xor
das
lret
push
push
movsb
xor
mov
lods
jae
push
in
subb
mov
cmpsb
addr16
dec
push
aaa
xchg
push
lods
and
repz
ret
lock
aad
fcmovne
mov
dec
push
dec
sub
cltd
addb
mov
shrl
pop
test
xchg
popa
ja
ss
hlt
inc
cs
inc
ret
mov
mov
push
and
push
fbld
inc
jecxz
add
fimull
scas
push
mov
cwtl
mov
push
in
sti
jecxz
mov
pop
ret
call
push
popl
jns
jo
gs
incl
or
adc
sub
dec
dec
lcall
test
adc
cmc
and
leave
adc
lock
sub
call
sbb
popf
aad
and
call
mov
sti
rcll
adc
stc
add
leave
popa
into
or
test
inc
pop
xor
xchg
pushf
sti
inc
adc
fwait
inc
push
rolb
aad
xchg
and
sub
sbb
fbld
mov
out
xor
cmp
pop
cmc
mov
adc
aam
pop
xor
enter
add
fnstsw
sub
sbb
lcall
push
les
xchg
xchg
inc
inc
je
nop
enter
and
jge
dec
push
jp
popf
mov
cs
daa
stos
mov
sbb
xchg
leave
je
or
ds
outsb
ret
inc
jae
fdivrs
push
bound
inc
data16
mov
loop
popa
or
adc
dec
add
les
fucomi
pop
pop
adc
mov
push
stos
out
cmpsl
jmp
inc
repnz
sbb
fisubl
mov
xor
sbbl
roll
jmp
test
lods
stos
xor
lea
inc
mov
mov
pop
jne
aaa
sar
loope
jl
negb
addr16
mov
scas
cmpsl
xor
test
jp
outsl
data16
std
push
movsl
aam
add
pop
xchg
cmp
cmp
mov
xchg
sbb
mov
or
std
fsubrl
sahf
test
loope
cwtl
xchg
lock
or
outsl
jne
xorps
jl
dec
sub
xchg
pop
clc
frstor
orb
push
xchg
dec
sbb
clc
jnp
daa
sbb
push
scas
shl
rclb
cmp
add
rcr
dec
leave
xchg
insl
adc
pop
lcall
add
addr16
out
insb
sub
rcl
cmp
or
lahf
out
mov
pop
mov
lret
hlt
repz
out
xlat
adc
rorb
ljmp
lods
mov
cld
xchg
in
cmp
jnp
inc
and
jns
insl
icebp
pop
dec
aas
xorl
out
mov
push
xchg
popf
xor
jns
adc
mov
inc
das
push
gs
mov
cmp
jge
pusha
mov
hlt
out
imul
mov
or
data16
and
call
movsb
jl
mov
in
pop
adc
insb
mov
push
xor
fwait
sbb
sub
cmp
jbe
push
jns
lock
xor
call
xchg
xchg
out
sti
mov
add
mov
mov
cmp
scas
les
jmp
inc
mov
fmul
imul
xor
cltd
mov
movb
dec
mov
xor
adc
iret
jns
bound
or
stos
inc
scas
mov
les
cmp
or
out
mov
icebp
dec
push
in
lahf
mov
or
inc
mov
cmp
lock
or
fincstp
push
adc
iret
lea
ror
aam
in
mov
lret
add
iret
icebp
xchg
sub
outsb
call
jae
jbe
xchg
xchg
mov
pop
repz
dec
pop
or
and
bound
dec
mov
cmp
push
cmp
mov
or
cwtl
fstl
or
dec
adcl
sub
repnz
sub
ds
or
into
xchg
loopne
push
and
xchg
inc
rep
repz
mov
cmp
mov
in
out
inc
xchg
insb
sti
mov
sbb
cltd
sub
jae
sub
cltd
imul
pop
test
insl
push
inc
imul
mov
loop
test
or
into
mov
in
xor
add
sub
fistps
enter
cmpl
in
dec
in
xchg
loop
mov
adc
sub
and
mov
cmp
mov
xchg
pop
adc
inc
cli
iret
push
add
mov
jns
lock
lcall
dec
dec
rcrb
push
idiv
test
inc
idiv
xlat
sub
xlat
add
sbb
push
int3
popa
mov
fiadds
ds
ret
sbb
and
aam
xor
mov
outsb
das
and
and
jb
in
ja
lcall
out
mov
adc
and
call
lcall
jmp
jmp
add
xchg
lods
sbb
jb
xor
mov
std
inc
getsec
inc
ret
shl
pop
pop
out
mov
pop
jmp
int
ret
mov
pop
cmp
imul
adc
mov
pop
lret
imul
shll
mov
pushl
popf
test
movsb
movl
mov
imul
shrl
rcll
lods
cmc
mov
inc
mov
add
lcall
or
das
out
jecxz
xchg
sbb
and
pop
jnp
cmp
enter
cmp
clc
xchg
sub
jbe
push
subb
std
arpl
push
jge
iret
pop
xor
adc
lret
lea
insb
dec
js
xor
stos
push
inc
int3
rorl
fs
fcoml
in
ret
xor
and
mov
or
test
mov
es
stos
lret
rolb
push
test
dec
fsubr
inc
jb,pt
cmpsl
jg
mov
inc
push
xchg
xchg
ret
in
fsubrs
ror
add
mov
push
add
scas
ljmp
xchg
mov
mov
dec
mov
out
pusha
xchg
mov
push
xor
cwtl
fsubs
out
xor
mov
loop
sub
cmp
sbb
jge
test
jo
sub
movsl
lret
jo
mov
shlb
add
stos
pushf
sbb
sub
and
sbb
xchg
cld
gs
rol
aas
adc
mov
jo
adc
push
lea
cs
xchg
in
aad
ljmp
jne
cmp
outsb
push
lahf
imul
push
jle
jbe
mov
dec
jmp
dec
shlb
push
aaa
imul
xor
and
arpl
nop
push
xor
add
add
xchg
repnz
dec
inc
call
nop
or
cmp
xchg
push
lock
xor
and
ficoml
js
mov
mov
and
insl
lret
adc
mov
jmp
sbb
ficoms
pop
sti
fisubl
xor
inc
cmp
inc
lods
jecxz
xor
push
ficomps
aas
mov
stc
inc
arpl
adc
cmp
or
add
jge
jno
jne
jge
mov
inc
cwtl
stos
or
fldt
cmpsl
pop
mov
repz
sbb
cmpl
aam
cmp
cmpsl
jmp
lret
mov
sahf
mov
adc
xchg
rclb
insl
mov
enter
dec
dec
pop
and
sti
inc
les
ja
cmp
shlb
jg
jle
push
lds
out
cmc
test
inc
ret
lock
lret
in
iret
clc
ja
stc
bound
sarb
mov
add
dec
hlt
pop
and
das
ss
push
imul
mov
inc
dec
sbbb
cld
dec
jp
mov
ret
mov
jbe
xor
mov
xlat
ret
sbb
je
jecxz
xor
mov
outsb
cs
shll
add
frstor
jns
loope
pop
pop
xor
outsl
jnp
inc
inc
xchg
inc
mov
outsb
loopne
imul
fs
inc
push
sbb
push
aaa
add
xchg
push
jmp
mov
mov
cld
pop
adc
stos
add
fsubr
fimull
and
js
addb
sti
jae
lret
out
mov
lds
icebp
rcrl
lret
fsubrl
sub
mov
vandps
and
jne
or
iret
push
xchg
cld
add
cmp
lods
sarl
mov
pop
push
cmp
push
test
jmp
aaa
dec
fsubl
outsb
jl
push
daa
mov
mov
sarb
mov
push
lret
stos
test
push
lret
pop
inc
lret
jo
cmp
jo
xor
add
inc
cltd
popa
mov
lods
mov
mov
jbe
loop
mov
mov
test
mov
aad
out
dec
adc
dec
add
mov
popa
imul
rcl
cld
ljmp
scas
ret
call
pop
lcall
pmaxsw
js
int3
jle
mov
cmp
testb
lods
mov
sbb
orl
call
mov
lods
lret
shll
and
loop
call
insb
scas
mov
or
rolb
int
xchg
fcos
test
mov
lret
push
pusha
and
add
sub
cmp
mov
jmp
add
xchg
dec
fists
dec
iret
push
jne
and
adc
or
sub
div
ret
push
test
jno
or
add
call
stc
adc
mov
lret
fadd
push
inc
xor
frstor
pop
dec
sbb
cmp
idiv
ja
push
rol
test
mov
stos
leave
sbb
push
aas
mov
iret
add
jp
sub
jl
lret
inc
jl
es
adcb
or
rol
pop
and
pop
mov
les
hlt
add
das
sahf
es
addr16
and
orl
ret
mov
and
cs
sub
pop
adc
pop
sahf
aam
and
pop
jnp
jnp
and
and
xchg
cmp
sub
push
dec
xor
in
negl
xchg
mov
push
jo
adc
fidivs
data16
sahf
shrl
mov
adc
sub
rorb
xor
addl
pop
and
sbb
shll
inc
mov
movsb
insl
xor
cmp
sub
movsl
fisttps
hlt
adc
cmpsb
btc
jbe
add
ret
mov
lea
rolb
xchg
inc
divl
and
ret
js
daa
fdivrl
cmc
out
cmp
dec
mov
or
mov
dec
pop
incl
pop
in
push
sub
xchg
jge
jg
sarb
pop
lahf
stos
fisubs
fidivs
fwait
ds
cmc
jecxz
lcall
test
sbb
sub
ret
inc
adc
movsb
ds
and
adc
cmp
jecxz
cld
add
mov
add
test
sub
mov
mov
or
sub
xchg
dec
movsl
jb
aam
jo
pushf
repnz
xchg
jmp
jmp
lods
cmpl
mov
addr16
mov
repz
nop
sbb
cs
cmp
enter
fisubrs
vcvttpd2dqx
mov
mov
dec
jmp
push
xor
in
daa
mov
sbb
in
lods
and
nop
mov
mov
xchg
into
orb
mov
adc
ss
jb
jecxz
sbb
mov
pop
jns
testb
pop
jnp
pusha
jb
and
inc
xor
xor
push
jnp
inc
mov
pop
mov
aaa
mov
or
mov
sub
dec
sub
xchg
cld
pop
jle
test
nop
jnp
call
adc
testl
add
push
iret
and
push
and
xchg
repnz
push
inc
fadds
shlb
pop
pop
add
andl
jno
xor
cmp
into
sub
imul
xor
fwait
call
ret
pop
int3
push
sub
push
xor
pushf
lea
mov
push
inc
shl
test
sbb
push
push
repnz
test
pop
cmpsl
xchg
push
stc
imul
subl
jge
ret
xchg
fsubrl
xor
cld
add
add
mov
push
xchg
addr16
rcrl
aaa
ret
pusha
pop
jae
std
out
imul
imul
divl
pop
shrb
push
cmp
lea
add
and
cli
fs
sub
lods
mov
rcrb
ret
xchg
dec
sbb
jg
xor
cmp
nop
iret
rcll
sub
xor
clc
and
add
subl
inc
mov
push
inc
mov
push
sub
call
pop
outsl
aam
dec
xchg
aas
xor
movsb
fstps
xor
arpl
jnp
cmp
add
add
clc
push
ret
pop
shrl
arpl
push
xor
dec
add
sub
push
pop
pop
das
adc
xchg
xchg
sub
add
cmc
mov
rolb
xor
push
mov
rcrl
pop
push
push
xor
cmp
inc
dec
push
pop
add
and
popa
xor
push
xchg
fnstsw
aad
cmp
aad
xchg
push
cmp
push
mov
dec
int
dec
jne
inc
add
xchg
cwtl
or
sbb
es
lret
dec
dec
enter
add
or
cs
cmp
jge
dec
adc
mov
cmp
or
into
mov
std
imul
js
mov
mov
leave
push
jle
out
clc
inc
jae
adc
call
in
push
dec
push
push
loopne
aaa
aas
popa
adc
inc
sbb
sbb
mov
cmc
test
ret
scas
out
mov
push
fcomp
mov
push
mov
les
jb
mov
or
dec
test
cmp
dec
ja
loop
loop
pop
xor
dec
jecxz
cmp
out
cmp
inc
mov
cltd
cmpsb
mov
xchg
sbb
xor
push
loop
inc
jle
xor
ficompl
ret
test
rorb
lods
dec
loop
test
and
adc
testl
rorb
push
stc
jp
fwait
aad
cmc
negl
and
icebp
pop
popf
xor
dec
dec
fdivs
cltd
cmc
xchg
jbe
mov
imul
aam
inc
stc
fistpll
in
lock
jge
xchg
push
loopne
xchg
outsl
push
test
inc
ljmp
nop
sahf
mov
xchg
dec
sub
repnz
sub
movsb
mov
push
sahf
mov
push
and
sbb
stc
mov
xor
pop
mov
push
pusha
sub
dec
cmpsl
jmp
aaa
jp
std
mov
scas
push
or
mov
lea
cwtl
call
pop
add
stc
inc
or
cmp
sti
cmp
nop
lret
loopne
icebp
pop
test
push
sub
dec
dec
xor
add
add
push
push
fs
movsl
int3
mov
hlt
pop
jge
mov
ss
fcom
cli
cmpl
and
rcrb
sub
cltd
loopne
test
or
pop
xchg
sbb
and
rolb
decb
jo
mov
jno
js
push
jo
dec
push
lahf
in
push
jno
sbb
xor
mov
cwtl
addr16
fcoms
adc
jge
insb
dec
dec
pop
bound
jae
xchg
pop
adc
xor
aam
mov
mov
pop
xor
cwtl
imull
add
pop
int
lock
cmp
push
sbb
mov
test
or
movsl
push
sbb
cmp
pop
in
cmp
nop
jae
ficompl
add
and
push
sbb
jl
fmull
pop
insl
and
xor
push
data16
mov
or
outsb
test
mov
xchg
inc
xchg
scas
push
mov
adc
ret
cmp
fdiv
pmaxub
sub
hlt
lret
push
lret
js
push
push
xor
jmp
rcll
adc
cli
out
and
or
xchg
inc
cltd
xor
mov
mov
xchg
sbb
push
or
ja
mov
out
out
sub
sarl
bound
mov
jp
cwtl
sub
in
shlb
stc
jge
add
lds
shrl
xchg
lea
push
or
repnz
mov
xchg
or
mov
mov
dec
ret
sub
outsb
lret
add
mov
les
pop
push
scas
mov
shrl
mov
xor
dec
jae
imul
cltd
pop
mov
enter
xchg
out
cld
ss
fmuls
xchg
mov
xchg
pop
mov
mov
cwtl
lock
sub
call
cwtl
add
or
xlat
bound
push
out
dec
cmp
xor
xchg
and
fs
or
cli
push
cmp
stos
imul
sub
cld
sbb
adc
aad
mov
dec
add
aaa
and
arpl
mov
rorl
jmp
push
cmpsl
mov
mov
mov
mulb
xor
dec
sub
std
out
jns
addb
xchg
dec
mov
in
enter
cmp
mul
xor
aad
mov
sub
jbe
jle
jmp
dec
pop
cmp
mov
sti
xor
loop
and
adc
inc
xchg
fxch
testl
incb
dec
es
mov
fmull
adc
in
fnstcw
enter
rcll
adc
pop
sbb
mov
mov
push
mov
cmc
mov
test
out
dec
rcrb
rorl
mov
mov
outsb
out
insb
push
or
aam
add
dec
imul
mov
adc
je
ret
rcrb
pop
fidivrs
idivb
lret
mov
xchg
inc
es
cld
cmp
ss
aad
addr16
stc
or
jge
mov
pop
rcrl
mov
sub
rcrl
cmp
sahf
mov
and
mov
inc
add
inc
out
ror
in
jbe
loope
mov
out
xchg
pop
xlat
dec
daa
outsl
int3
push
sti
mov
outsb
pop
dec
push
inc
jb
outsb
pop
push
jle
pop
out
jo
add
clc
lods
movsl
repnz
push
lods
repz
leave
push
adc
sub
insl
mov
sbb
inc
mov
mov
mov
sbb
mov
xor
cmp
mov
enter
stos
decl
mov
movsl
mov
shrb
push
mov
cmp
je
cmp
mov
leave
lock
loope
jmp
sub
out
aas
outsb
jp
ja
add
and
outsl
push
mov
fisttpl
fisubs
xchg
into
call
sub
or
jg
inc
popf
shll
add
movsb
pop
xchg
lret
call
pop
clc
fistpl
mov
jge
cmp
sbb
pusha
jns
fimull
mov
loope
mov
jmp
insb
jecxz
sbb
in
loopne
or
xchg
test
xchg
sbb
rorb
mov
or
push
mov
adc
inc
dec
sub
int
shr
dec
imul
cld
inc
adc
mov
sub
jg
mov
sbb
addr16
adc
repz
addr16
cld
mov
in
stc
dec
stc
xor
fdivs
leave
je
push
jle
leave
out
int3
sbb
inc
sahf
shlb
xor
mov
insb
inc
pop
jns
es
cli
xchg
mov
mov
push
lock
push
xor
ficoml
fwait
mov
test
add
adc
inc
xor
xor
fbld
xor
clc
jle
push
je
and
mov
insb
ficoml
rcrl
aas
sbb
sbb
pop
xchg
leave
sbb
xchg
xor
popf
push
cmp
adc
in
ret
popf
and
stc
inc
sbb
lods
fsub
imull
inc
xor
xor
add
mov
movsl
sbb
mov
add
inc
sahf
lods
ljmp
aas
pop
pop
aaa
fs
inc
or
jbe
insb
dec
push
add
loopne
push
movsl
data16
inc
lea
in
xchg
movsl
sti
xor
mov
das
daa
pushf
xchg
decl
and
sbb
pop
cs
repz
in
shrb
sbb
add
mov
in
inc
addr16
jp
pushf
pushf
outsb
popf
xor
pop
insl
loopne
fisubrl
push
cwtl
inc
adcb
pop
sbb
mov
cmpsb
add
dec
and
in
rcrb
push
jno
add
and
xchg
sbb
lea
lahf
sub
dec
add
cltd
pop
decl
inc
ss
fisubrs
mov
js
push
jg
cmc
incb
repnz
clc
mov
shlb
dec
loope
push
sbb
push
js
popa
jo
mov
outsb
ljmp
int
pop
push
mov
test
add
testb
push
shll
or
jo
xchg
mov
sti
pop
cmp
in
add
jo
mov
das
jnp
inc
pop
rcll
pop
imul
imul
leave
lods
icebp
push
dec
out
out
movsb
jl
std
pop
or
push
dec
ret
sub
fs
ja
test
jmp
mov
mov
gs
cmp
fcmovb
ljmp
aas
fdivl
adc
jp
lahf
xor
aam
scas
pop
in
xor
pop
push
nop
cld
leave
outsb
sub
out
and
add
aam
mov
jbe
xor
imul
int
outsl
test
insb
xlat
jo
pop
in
push
xorb
pop
and
ret
mov
dec
clc
mov
xor
movsl
std
lret
sbb
sahf
sahf
mov
pop
ja
adc
inc
push
rcr
sti
leave
mov
shll
xor
xor
insl
lret
mov
xor
stc
fistps
lock
pop
mov
xorb
mov
leave
mov
adc
scas
mov
ljmp
subl
shld
movsl
xchg
jno
cs
idivb
js
cld
jp
int
push
hlt
jno
sub
out
in
loope
dec
addl
mov
stos
rorl
add
dec
ret
ljmp
addl
cmp
inc
push
mov
lahf
outsb
or
icebp
jns
push
fsubl
jno
ret
adc
inc
add
xor
gs
into
ror
sbb
leave
outsl
jb
adc
cmp
add
movsl
mulps
daa
push
mov
inc
xchg
mov
sbb
push
lahf
out
mov
mov
adc
mov
inc
cs
mov
push
push
and
int3
mov
inc
cmpsl
js
ja
mov
call
popa
arpl
aas
movsl
movsb
adc
jbe
sbb
repz
out
jno
pop
xchg
sbb
out
clc
insb
and
popf
rcll
fmuls
pushf
and
daa
in
stc
fimuls
stos
cmp
cmp
xor
fcompl
ds
sbb
shrb
rol
test
cwtl
fdivr
sub
clc
mov
jno,pt
inc
pushf
int3
cmp
inc
sbb
pop
xor
or
xlat
and
aaa
mov
aad
cmp
push
test
jecxz
scas
mov
add
je
cmp
jp
popl
movsb
je
mov
sbb
test
insb
loopne
in
rdmsr
pushf
inc
fsubrs
or
std
and
sbb
addr16
dec
xor
in
std
sub
and
movsl
sahf
cwtl
jle
and
adc
cmp
inc
lret
pop
and
sbb
scas
mov
test
sub
xor
bextr
imul
incb
mov
jo
push
sti
sub
jbe
es
cmpsl
scas
stos
cwtl
xor
push
aad
xor
aam
popa
xor
pop
mov
mov
popa
jg
xchg
add
sahf
and
fsubrl
fisttps
cmp
mov
and
push
mov
jg
in
rcrl
cld
xchg
dec
mov
icebp
mov
inc
pop
mov
loope
xor
addr16
mov
add
dec
inc
mov
outsb
and
out
pop
inc
lahf
lahf
scas
imul
stos
iret
shl
or
movsl
adc
lret
push
lahf
and
push
loopne
pop
or
add
pusha
xchg
xor
pop
dec
sbb
leave
ja
in
xchg
mov
xchg
jnp
negl
mov
add
mov
dec
and
inc
jnp
repz
jecxz
sbb
push
inc
fstps
idivb
dec
sbb
adc
mov
daa
pop
lcall
sbb
insl
je
xchg
push
and
jg
pushf
dec
mov
push
mov
rorl
je
mov
cmp
push
shrl
pop
mov
mov
leave
jl
shlb
mov
lahf
sbb
mov
cmp
cltd
inc
and
pop
lret
and
inc
sub
or
xchg
pop
bound
mov
sub
pusha
inc
xor
pusha
aad
jg
mov
lret
sbb
mov
shrb
push
mov
xor
lahf
sub
daa
je
and
dec
in
dec
aam
mov
push
pop
out
xchg
fidivs
lret
stos
and
jnp
rcr
rcr
icebp
leave
xor
das
out
ja
xchg
xchg
ret
cmp
rorb
mov
push
pop
xor
xchg
movsb
ss
lods
loop
inc
lock
jae
xchg
pusha
lcall
or
pop
mov
fcoms
sub
loopne
pusha
adc
adc
xchg
xchg
lahf
add
push
shll
push
xor
dec
push
jb
leave
loope
mov
dec
mov
sbb
out
xor
push
lcall
icebp
add
sub
into
popf
cli
not
out
shll
mov
mov
mov
repnz
jnp
mov
pop
shlb
shr
cs
xchg
cmpsl
mov
dec
popf
test
inc
shr
je
lods
mov
jb
rol
in
cmp
mov
cmp
ret
pop
and
shl
push
adc
cmp
hlt
dec
xor
outsb
call
jno
daa
arpl
mov
les
imul
xchg
xlat
cmp
jo
sbb
jne
cmp
movsb
mov
push
inc
push
or
push
lret
dec
mov
rorb
xor
idivl
xor
xlat
cli
insl
mov
repz
sub
in
mov
push
movl
mov
cmp
imul
add
jp
and
dec
and
popf
and
xor
adc
enter
mov
pop
fisubrs
mov
inc
mov
inc
xchg
pop
or
enter
addl
scas
mov
sub
in
cmp
mov
lea
movsb
mov
inc
inc
cmp
sbb
popf
inc
adc
jae
pop
clc
decb
in
js
or
in
int3
popa
push
mov
int
mov
xchg
cmc
mov
fs
inc
dec
test
or
cmp
jp
mov
aaa
mov
mov
jnp
adc
jmp
dec
or
gs
mov
mov
int
hlt
and
sbb
inc
fwait
stos
cmp
jmp
int
js
mov
adc
mov
add
mov
or
fmulp
scas
cmp
pop
je
cmp
push
leave
xor
mov
xor
adc
cmp
lcall
sub
cmp
orb
ret
mov
rcl
mov
adc
sub
cltd
mov
dec
pop
mov
sub
andb
dec
and
add
out
add
adc
fstpl
and
ds
insl
mov
jle
jb
jne
stos
aam
in
aad
sbb
lcall
mov
mov
clc
or
cmpsb
loopne
lahf
in
sbb
lods
xchg
movsl
cmpsb
dec
dec
lcall
out
jo
xchg
test
shl
cmp
push
pop
out
mov
loop
popf
ljmp
pusha
add
mov
mov
test
daa
cmp
push
loopne
push
movsb
aaa
dec
dec
mov
dec
xchg
push
xor
mov
movsl
insb
negb
add
pop
mov
mov
stos
jno
stc
mov
jge
jno
movl
ret
xor
mov
je
xchg
in
scas
or
bnd
arpl
cwtl
out
lret
push
ljmp
inc
js
and
fxch
mov
outsl
sub
cmp
xor
push
inc
mov
aad
dec
mov
mov
add
xorl
adc
inc
loop
gs
sub
or
inc
push
mov
xchg
pop
push
popa
inc
push
xchg
out
push
mov
xlat
adc
scas
mov
lods
pop
and
pop
push
push
test
pop
xor
cld
mov
dec
cmpsl
ret
aad
sub
push
cmp
pop
xor
fucomi
addr16
mov
popa
aas
ds
sub
fwait
fs
or
movsb
sbb
data16
test
mov
mov
das
add
fidivl
nop
daa
and
test
mov
mov
jae
adc
imulb
jmp
fcomp
popf
lock
mov
ds
ret
push
sti
xor
jge
inc
cld
cld
call
arpl
std
and
loope
addr16
fwait
jl
xor
or
cmc
mov
xchg
jne
mov
insl
sbb
sahf
notl
adc
and
repz
popa
int3
jecxz
push
xchg
sub
or
and
mov
mov
out
sub
icebp
push
cmp
xor
ljmp
ds
or
lret
cli
cmpsl
leave
jle
fnstenv
mov
push
add
xchg
dec
cmp
repnz
in
or
xchg
fs
rol
pop
shlb
mov
xchg
fldl
jns
fwait
popf
mov
mov
adc
cmc
cmc
inc
cwtl
and
cmc
pop
andnps
jb
mov
push
imulb
xor
mov
push
mov
clc
mov
mov
popl
or
jae
adc
adc
sti
rorb
popf
jle
dec
pop
scas
or
ljmp
pop
mov
lock
jne
jg
or
insb
pop
clc
xor
jmp
xor
pop
es
jns
mov
outsb
cmp
adc
pop
jecxz
loopne
shr
cwtl
xchg
leave
mov
aam
xor
push
pop
and
mov
lea
jge
in
push
fiaddl
mov
jg
mov
push
push
sub
mov
cs
inc
adc
lahf
mov
mov
int3
std
xchg
mov
pop
mov
pop
xchg
mov
sub
sbb
iret
test
aam
movsb
or
jmp
dec
jge
inc
mov
or
lds
xchg
cmp
mov
and
pop
fs
in
dec
inc
add
jp
mov
lods
movsb
rcll
fcoms
push
mov
pusha
popf
sbb
test
or
popf
je
aaa
inc
subl
fidivrl
ljmp
fstpl
sub
mov
outsl
xor
jno
mov
push
mov
sub
cmp
sub
pop
out
push
cmp
ja
test
push
icebp
pop
add
xchg
pop
sbb
mov
fnstenv
mov
rorl
pop
sbb
into
fcmovu
aad
fildl
shll
sub
or
adc
pop
pusha
shlb
addl
sbb
insb
sub
or
pop
pop
and
lret
xor
push
repz
icebp
into
or
cltd
ss
in
mov
nop
push
and
mov
imull
lea
icebp
shll
imul
and
jns
mov
mov
cld
inc
adc
push
inc
jp
inc
mov
jno
adc
and
popa
jno,pn
pop
lds
pop
std
sub
inc
in
jne
cmp
jo
or
cmp
insl
jne
sti
mov
je
mov
loop
push
xchg
imul
cli
pop
push
push
orl
jle
les
in
clc
fnsave
pop
in
insb
cmpsl
psubsw
push
mov
cmpsb
test
push
nop
cld
jne
cmp
lahf
sbb
cs
addr16
shrl
cld
dec
lret
push
xchg
popf
fimuls
jl
jg
push
nop
dec
cmp
ja
mov
and
adcb
jnp
xchg
xchg
push
push
inc
jp
mov
ja
lods
out
pop
repz
rorb
adc
inc
lods
adc
adc
repnz
out
insl
xor
mov
pusha
push
das
es
xchg
dec
jl
mov
cmp
aam
lret
and
add
test
dec
shrl
fmuls
xor
xorl
outsl
mov
or
mov
adc
add
fisttps
repz
mov
mov
loopne
jle
repnz
ret
xor
adc
mov
adc
sbb
ja
movsb
fwait
xor
mov
icebp
xor
add
and
mov
fnstenv
sbb
mov
cld
jns
sub
jnp
test
popf
xlat
jnp
mov
pusha
sub
inc
aam
sbb
and
mov
push
and
mov
dec
fisttpl
jecxz
cmpsl
mov
mov
push
loope
jnp
xchg
adc
daa
and
ret
pop
in
test
stc
arpl
jle
add
int
rolb
ja
and
pop
add
ret
xlat
xchg
mov
mov
lea
or
cmp
pop
push
add
or
sbbb
xor
mov
jp
and
cmc
lea
fcomip
sbb
jb
aaa
adc
test
clc
icebp
push
mov
fdivl
mov
sbb
cmp
mov
pushf
lcall
xchg
fwait
sub
decl
xor
cmp
sub
divl
jmp
pop
and
jmp
mov
cwtl
inc
nop
pop
daa
hlt
mov
jae
mov
or
cmp
dec
mov
aad
test
mov
fsubrs
fcoms
stos
fstps
fldt
in
push
pop
testb
inc
imulb
fidivs
popf
dec
sarb
dec
mov
jns
jne
jno
or
mov
stc
push
lds
movsl
and
popf
sub
pop
in
int3
push
lahf
out
scas
inc
mov
dec
ljmp
adc
and
adc
adc
dec
mov
and
sub
icebp
xchg
adc
and
mov
xchg
jnp
add
lret
scas
mov
in
lock
test
jmp
pop
pop
dec
jg
pushf
xchg
mov
sub
js
fwait
outsb
push
js
fsubs
lcall
mov
push
mov
adc
iret
cmc
jb
push
icebp
mov
orl
dec
mov
jb
and
pop
dec
stc
rcl
jmp
push
out
push
lret
mov
cmp
push
and
xor
mov
add
inc
push
push
es
mov
cltd
arpl
cmp
jno
sub
arpl
cmpsb
call
xchg
dec
mov
adcl
inc
sub
shrl
sarb
inc
sub
gs
pop
leave
mov
cmp
ret
sbb
sbb
out
int3
jmp
jecxz
pop
mov
repnz
cmpsl
dec
mov
ret
mov
push
cmpsb
in
add
int
leave
jmp
jmp
or
push
fwait
and
lds
stos
sub
jo
les
lock
out
jp
lret
lahf
aam
outsl
femms
call
popl
into
fsubs
jmp
pop
inc
push
push
outsl
popa
data16
pop
push
mov
jp
imul
dec
add
push
loop
mov
mov
aam
sti
xor
add
adc
das
sub
int
pop
jbe
in
sub
mov
jne
mov
xchg
xchg
xor
xor
push
pop
fwait
shl
xchg
mov
leave
test
mov
cmpsb
xchg
mov
insl
pop
ret
test
lret
xor
or
out
adc
addr16
lret
or
ja
out
dec
in
fadds
fsub
push
lea
push
enter
add
sti
cmp
clc
insb
movsb
mov
mov
add
iret
or
testb
dec
dec
rclb
notl
dec
pop
sub
call
inc
nop
inc
xor
mov
xchg
adc
sbb
mov
in
fwait
add
sub
icebp
push
xor
fisubrs
leave
jnp
clc
xchg
mov
sbb
mov
cmp
jns
pop
cmpsl
inc
popa
stos
jmp
out
mov
sub
out
rorl
or
je
jg
adc
pop
xcrypt-ctr
cmpsl
pop
cmp
push
lret
das
sub
xchg
sub
dec
pushl
repnz
cmpsb
sub
add
push
inc
dec
mov
and
adc
sub
inc
movsb
mov
imul
xor
push
xchg
mov
jne
mov
adc
add
push
pushf
jg
test
lods
rcll
cmpsw
loope
jecxz
pushf
mov
popf
movsl
push
roll
dec
fisubs
jne
mov
jnp
mov
aam
sub
mov
cltd
inc
push
data16
and
inc
fstpl
enter
and
pop
mov
sub
jae
rclb
sarl
add
lahf
and
stc
movl
lahf
mov
or
adc
rol
push
mov
test
pop
cwtl
push
aaa
dec
mov
cmc
cmp
int3
in
les
daa
loop
ja
filds
leave
push
mov
xchg
jle
xchg
lods
bound
cmp
lcall
and
xor
mov
stos
pusha
mov
ss
xor
mov
push
dec
js
dec
lods
or
sbb
cmp
jg
hlt
cli
add
add
push
pop
xor
ljmp
stc
test
nop
clc
andl
sub
leave
inc
jb
pop
and
insb
xor
aam
in
mov
gs
mov
add
mov
xor
pop
das
push
repnz
add
ds
mov
mul
fwait
pop
pop
neg
in
jmp
fcompl
inc
mov
dec
not
popa
pop
ljmp
rcrb
lods
fwait
shlb
je
imul
mov
orb
sub
mov
xor
fistl
sub
jl
adc
jo
sub
inc
sti
pop
cs
pop
test
pop
arpl
imul
aaa
movsb
mov
fcomip
pop
jg
enter
mov
outsb
sbb
push
icebp
sub
mov
lods
push
mov
add
add
push
xor
loop
sahf
xchg
or
and
add
gs
mov
cmp
rclb
jecxz
pop
or
inc
cmpsl
xor
jmp
lret
xchg
arpl
sub
fucom
in
stos
std
jno
add
mov
pop
and
xchg
xorb
push
inc
inc
mov
jecxz
dec
fwait
adc
pushf
push
and
push
pop
add
nop
icebp
sub
fwait
pop
push
mov
cmp
or
in
sbb
cwtl
mov
or
out
jp
dec
std
sbb
adc
stos
push
mov
rorb
ljmp
pop
jl
adc
mov
insl
adc
shll
aam
push
subl
dec
cmc
xchg
mov
outsb
fwait
sbb
sbb
xchg
jne
sbb
call
push
mov
push
stos
sbb
fs
ret
lcall
adc
add
xor
sbb
test
cltd
std
fistl
stos
in
xchg
in
mov
push
jo
pop
jecxz
jl
loop
repz
in
jne
add
and
daa
outsl
fbld
xchg
in
mov
out
inc
mov
cmp
jl
sub
movsl
mov
addr16
mov
xor
dec
dec
jno
or
dec
dec
aam
xchg
gs
sbb
popf
mov
popl
daa
orl
push
es
mov
mov
sub
aaa
dec
and
cwtl
ljmp
ja
stc
ja
shl
nop
xchg
loope
mov
xchg
push
je
dec
out
test
jne
sbb
dec
jo
and
roll
shrb
cmp
lahf
in
pop
or
int
les
adc
push
cmp
and
movsb
data16
testl
lret
and
cmpsl
inc
and
leave
jp
int3
fimuls
dec
std
stc
xchg
push
in
shrl
popa
aaa
jp
xor
jne
std
push
movsl
mov
inc
test
cmpl
or
sub
fucomp
dec
lret
scas
dec
lods
push
testl
leave
mov
mov
cmp
orb
push
ljmp
push
aad
lret
xchg
pop
mov
fstp
jecxz
outsl
mov
jmp
shlb
xchg
dec
lock
or
sbb
sbb
into
push
stc
jae
mov
fisubrl
and
popa
pushf
scas
hlt
inc
bound
out
mov
loope
mov
ret
fcomip
pop
pusha
and
lea
fwait
stos
mov
push
repnz
dec
and
test
mov
stos
rorl
sub
xchg
dec
test
sub
mov
pop
add
cmp
cmp
sbb
sub
xor
movl
cmpsb
add
stc
jecxz
xchg
mov
jge
add
jne
aas
sbbl
push
stos
push
dec
lret
xor
jns
mov
test
dec
mov
movsb
mov
out
lret
sub
je
arpl
dec
sahf
lds
leave
dec
sahf
clc
sbb
into
jb
out
pop
add
lock
xchg
ds
ja
xchg
push
loop
push
out
cwtl
push
push
push
adc
hlt
mov
ret
push
sbb
push
mov
xor
sbb
jge
shlb
inc
add
fdivs
xchg
push
sbb
jp
sbb
in
movsl
enter
jl
mov
das
and
aam
dec
aaa
and
push
fadd
or
inc
inc
cmp
xchg
pusha
adc
shrb
xor
adc
pusha
dec
arpl
jg
mov
call
jl
adc
scas
movsb
dec
testl
data16
scas
shll
fmul
mov
bound
lea
or
test
sbb
pop
mov
xor
scas
mov
loope
fildll
fcoml
cmc
subl
jno
xchg
ljmp
mov
sub
and
ficoms
cmp
mov
mov
cmpsl
stc
and
and
adc
push
mov
xchg
jns
dec
dec
mov
insl
jmp
xchg
add
mov
test
sub
xor
add
mov
shll
dec
out
out
enter
sbb
cmp
jb
mov
xor
fistpl
scas
xchg
inc
mov
lods
push
pushf
mov
adc
nop
in
xchg
push
cmc
xchg
adc
jl
fisttps
lods
es
pop
xchg
mov
out
mov
ret
pushf
add
push
gs
mov
imul
push
orb
xor
or
lahf
insb
add
frstor
jno
insb
fisubl
or
jg
imul
inc
adc
test
xorb
loop
cmp
aam
lret
xchg
add
lods
insl
add
ret
mov
jae
xchg
xor
jle
insb
rol
cmp
ja
mov
xchg
mov
fwait
jno
cmpsl
push
adc
dec
jmp
ja
and
pop
or
or
mov
push
adc
rorb
out
ja
mov
ja
xchg
movsl
das
cmp
sub
outsb
cmp
les
sahf
das
lcall
pop
cmp
inc
jb
and
fnsave
xchg
rcrb
fisubl
test
jp
out
popa
leave
xchg
movsb
stc
and
leave
or
jl
lds
stos
repz
mov
cmp
sbb
fucomp
mov
lods
test
fisubl
cmpsb
ljmp
xchg
cmp
jo
dec
lcall
ljmp
pop
ja
jae
fisubrl
add
xchg
pop
xor
add
or
add
lods
aad
das
movsb
jle
pop
and
fwait
xchg
hlt
push
sahf
mov
test
cltd
nop
fcmovnb
adc
sbb
in
sbb
mov
fildll
adc
xlat
mov
pop
out
xlat
mov
dec
adcl
add
repnz
aas
addl
sub
and
call
mov
push
lods
mov
ja
loop
pop
cmp
mov
sub
stos
repz
sbb
sar
pop
dec
jg
dec
shl
jns
adc
sub
sub
pop
popf
mov
inc
mov
push
nop
mov
dec
xchg
lret
cltd
shrl
stos
mov
rcll
std
jns
mov
mov
iret
adc
in
int
pop
enter
add
and
mov
xchg
mov
jecxz
mov
cltd
bound
lock
in
adc
cmp
jl
add
dec
push
inc
adc
mov
mov
fbld
or
sbb
call
pop
or
push
dec
mov
inc
movsb
jnp
enter
mov
fistps
enter
dec
dec
fmul
ja,pt
jl
jnp
mov
xor
mov
push
sbb
jge
mov
into
lods
or
xor
pop
pop
cmpl
xor
repz
jp
mov
fistl
xchg
jo
inc
ja
notb
ret
mov
push
enter
ja
imul
in
mov
xor
mov
cmp
lret
out
or
sub
daa
insb
dec
jnp
sbb
jb
jo
dec
popa
sahf
cmp
fdivs
mov
cld
sub
popf
loope
pushf
std
sbb
push
aas
mov
mov
shl
push
and
pop
xchg
int
popa
dec
decb
mov
xchg
adc
mov
loope
loopne
xchg
push
jmp
imul
add
repnz
cmp
icebp
fistps
jb
loopne
or
dec
mov
mov
test
mov
outsb
mov
xor
and
pushf
mov
scas
mov
xchg
jmp
mov
icebp
mov
mov
xor
inc
sub
and
cmp
sarb
sarl
xchg
out
bound
pop
cld
sbb
cmp
jg
jp
dec
add
test
push
sbb
inc
lret
addb
xchg
pop
and
loope
scas
fs
mov
dec
fdivrs
scas
out
lock
xchg
jne
push
mov
leave
pop
out
rol
or
jns
loope
fs
mov
test
cli
vsqrtss
xchg
stos
stc
mov
std
int
and
popa
cmp
ljmp
ja
xor
xchg
scas
jno
pop
push
cmp
mov
pop
cmp
arpl
fs
inc
or
push
add
mov
lods
outsl
mov
sub
in
addr16
xchg
and
fdivl
xchg
scas
in
cli
fistps
cmc
xor
push
loopne
mov
icebp
lea
sub
pop
mov
ljmp
icebp
stc
sbb
mov
jo
dec
mov
push
xchg
pop
push
pop
outsb
push
nop
imul
imul
lods
push
rcll
mov
hlt
dec
pop
scas
sbb
sbb
jnp
pop
push
dec
mov
pop
pop
loop
adc
jmp
fiaddl
mov
lret
aad
cwtl
push
rep
dec
xor
mov
pop
mov
arpl
lock
xor
dec
jmp
dec
xor
pop
ficompl
mov
adc
push
les
shl
je
in
movsl
ja
dec
add
out
sub
in
or
stos
push
das
test
cmp
dec
rcll
dec
nop
roll
movsl
data16
aaa
mov
insl
mov
pop
sbb
imul
dec
pop
pop
fstps
dec
sti
xlat
sbb
or
xchg
push
sbb
sub
pusha
and
jb
jmp
lret
enter
mov
push
xchg
sbb
adcb
repz
ss
arpl
rcll
nop
mov
icebp
adc
jp
fucomp
push
popl
jnp
adc
call
mov
das
int
cmp
dec
xor
cmp
mov
cmpsl
in
aad
jge
shll
shlb
ss
add
daa
sbb
jg
xchg
divb
mov
jge
imul
add
ret
insb
daa
sub
lods
dec
js
jo
jns
test
jbe
pop
jnp
decb
mov
js
in
fmull
pusha
add
or
or
xchg
enter
cld
xchg
out
dec
negb
and
jmp
mov
adc
imul
in
sar
lahf
pop
jge
cltd
xchg
loope
pop
add
enter
mov
dec
fidivs
addr16
cli
shrb
dec
jl
push
test
imul
stos
add
xchg
adc
cmpsb
mov
or
loopne
or
or
and
leave
xor
jmp
sub
add
addb
cli
call
xchg
xor
push
into
xor
in
shl
pop
pusha
or
or
inc
push
xchg
or
aad
add
jae
scas
mov
xchg
cwtl
jne
pop
cmp
push
sbb
and
pop
std
jl
inc
dec
popf
mov
lock
pop
xor
push
idivl
add
sub
hlt
mov
mov
lds
lds
cmp
pusha
hlt
test
ss
int3
test
or
int
adc
or
add
insb
js
adc
push
cmp
jg
daa
decl
jbe
xchg
cld
xlat
mov
mov
cmpsw
inc
mov
push
dec
mov
add
cmp
test
loopne
getsec
push
rolb
jp
js
fadds
loop
adc
jne
rep
in
scas
add
add
shrb
leave
cmp
add
mov
in
in
aam
jns
dec
sub
dec
lret
inc
pop
into
das
std
jbe
cmp
mov
push
or
jns
pushf
pop
in
mov
sbb
lahf
dec
push
xor
dec
ds
dec
xchg
jecxz
hlt
mov
sub
push
aas
repnz
bound
insl
dec
je
jnp
out
jg
mov
add
movsl
jge,pn
and
dec
add
xor
pop
movsl
or
in
imul
push
dec
fprem
iret
xchg
cmpsl
fnstsw
clc
out
jle
dec
movl
mov
outsb
pop
inc
sahf
or
int3
les
pop
mov
sub
dec
xchg
mov
std
sub
xor
rcll
adc
and
adcl
loopne
mov
xchg
insb
stc
je
hlt
mov
adc
add
jp
in
sbb
push
lea
add
jae
pop
mov
mov
and
fdivl
rclb
inc
scas
sbb
ret
negb
ja
in
xchg
or
cmpsb
jmp
mov
fadds
incl
icebp
ljmp
dec
lods
jecxz
dec
mov
test
jl
js
mov
popf
lods
mov
loopne
ret
fstps
sub
hlt
sbb
std
fwait
xchg
cld
dec
or
push
dec
pop
add
mov
inc
ds
cmpsb
fwait
cmp
aam
push
push
cmp
rol
std
fwait
arpl
jecxz
test
pop
jle
lds
and
lock
mov
mov
je
scas
lcall
out
mov
add
pushf
es
xchg
loop
inc
cmp
add
test
inc
mov
sub
cmp
jg
wbinvd
imul
ret
add
jnp
fcompl
push
mov
inc
cmp
add
loope
xor
inc
fists
xor
test
mov
inc
loop
xchg
mov
xlat
nop
or
pop
in
repnz
dec
lcall
repz
scas
push
out
outsb
es
movsl
mov
inc
adc
outsb
inc
xlat
cmp
cmovne
sbb
scas
or
adc
je
mov
sub
js
rolb
dec
lcall
out
xor
test
push
jge
cmp
lret
inc
mov
aaa
inc
dec
mov
push
or
repz
int
shll
jp
loopne
call
fldl
dec
pop
inc
movsl
outsl
aam
cmc
xchg
js
addl
sub
xchg
add
data16
lock
and
test
sub
dec
je
ret
repz
idivl
push
adc
cld
inc
lods
xchg
loop
outsl
mov
idiv
xor
outsb
jns
mov
das
movsb
sbb
mov
lea
jno
xchg
cmp
insl
lods
mov
or
sub
xchg
mov
sub
aam
and
ljmp
pop
cmp
adc
pop
or
sbb
mov
incb
fldt
mov
xor
jle
ret
pop
call
pop
imul
push
mov
push
jne
fndisi(8087
cld
and
sub
add
in
or
shr
sahf
push
sub
es
cmc
inc
sbb
mov
int
std
cmp
xchg
push
stos
push
loope
cmpsb
xor
arpl
or
mov
pushf
inc
leave
cmc
push
stos
ss
repnz
lods
cld
shr
jmp
cmp
pop
scas
rorb
jecxz
dec
rolb
les
cmp
pushf
negl
jae
cmp
pop
sbb
pushf
aaa
mov
pop
jb
mov
adc
push
lret
test
rolb
add
and
fistpll
or
mov
loopne
inc
insl
xlat
dec
repz
mul
je
out
sub
fwait
mov
rcll
mov
inc
xchg
aam
sahf
pop
ss
test
jb
sbb
adc
pop
mov
jbe
adc
sbb
pop
cmp
adc
mov
fs
js
adc
inc
sbb
and
dec
adc
sub
jg
clc
pop
mov
lcall
adc
lcall
insl
push
cmpsl
pushl
sbb
test
and
in
jns
mov
jnp
inc
push
stc
clc
cltd
dec
dec
mov
fstpl
mov
add
in
mov
daa
lret
sub
fcmovb
mov
mov
lahf
icebp
add
inc
push
cwtl
jl
inc
jo
push
inc
cmp
cmp
cmp
pop
daa
mov
lock
fistpll
sbb
or
cmpl
lretw
ljmp
lret
push
or
cmp
xlat
lret
aam
fdivs
sub
movsl
aam
xchg
jl
sbb
js
xchg
repz
or
push
insb
fcmovu
pop
sbb
lahf
out
aaa
cmp
test
push
stos
jne
loop
xchg
cli
into
test
xchg
lods
cmp
shll
pop
xor
es
in
push
repz
rcr
mov
and
and
push
fwait
sbb
sahf
stc
jecxz
lods
mov
or
pop
iret
xor
inc
mov
scas
stc
mov
cld
jle
mov
jge
mov
and
jle
push
pop
shlb
in
sub
jmp
or
mov
push
fwait
sbb
insl
cmpsb
cmp
cld
jmp
out
sbb
mov
mov
inc
lcall
jb
fs
cmpsb
sbb
in
aaa
or
imul
xlat
fs
test
sbb
pop
push
xor
jo
clc
xor
cmc
fcmovbe
and
std
or
test
jmp
in
scas
icebp
push
push
test
xor
inc
das
or
ret
jo
mov
xchg
sub
cld
jl
leave
dec
mov
idivb
dec
cmpl
cmp
je
jmp
std
icebp
pop
and
sub
or
inc
xlat
mov
fisubrl
mov
adc
xor
xor
jo
js
insb
andb
or
mov
dec
call
xor
shrl
mov
call
xor
lcall
fisttpl
outsb
pop
jle
js
stos
adc
fildl
jbe
popa
add
mov
xor
bound
ror
push
and
inc
cltd
shrl
cmp
or
mov
cmp
jecxz
lods
iret
sub
jmp
inc
xor
out
fs
inc
push
mov
xchg
sub
inc
xchg
test
loop
adc
cmpsb
lds
pop
imul
xchg
in
add
xchg
repz
adc
pushf
mov
sbb
cmp
dec
jp
push
pop
stc
or
aaa
or
adc
lret
add
push
test
xor
xchg
pop
fwait
mov
inc
pop
xchg
lcall
cmp
sbb
ret
jnp
data16
pusha
or
xchg
cmp
fstpt
or
dec
loope
lods
pop
idivl
cmc
popf
lret
dec
imul
add
lea
pop
jg
leave
pop
push
push
fcomip
out
jge
mov
sub
inc
test
test
jle
jl
jmp
jg
dec
mov
jae
stc
dec
outsb
les
push
mov
add
sahf
sahf
in
mov
rolb
test
imul
mov
ret
loope
fldl
mov
cltd
xchg
int
xchg
jmp
adc
pop
adc
adc
loopne
mov
dec
daa
aas
or
cmp
sub
pop
dec
adc
add
mov
out
sbb
push
and
popa
scas
xchg
lds
or
pop
pop
adcb
int3
int3
and
lcall
jecxz
faddl
cmp
adc
mov
add
test
and
adc
jl
and
mov
out
push
call
push
jae
out
lret
cmc
fildl
bswap
ljmp
cli
adc
dec
inc
ds
bound
lds
and
ret
movsb
inc
lahf
mov
lds
sub
push
outsl
push
mov
adc
sub
sub
jecxz
cltd
pop
xor
add
jle
test
adc
rcll
scas
sbb
mov
in
and
or
xlat
mov
inc
mov
xor
add
imulb
pop
mov
and
cmp
inc
xorl
push
hlt
push
les
sbb
or
out
xor
ret
js
ret
cmp
in
outsl
or
lock
pop
clc
add
push
push
mov
sub
daa
pop
dec
stos
lret
jecxz
push
mov
push
jmp
icebp
mov
pop
jl
xor
pop
insb
mov
in
pop
add
repnz
daa
aad
mov
xchg
jecxz
pushf
shlb
fldl
mov
fucom
sub
cs
fidivrl
sti
pop
or
xchg
mov
inc
mov
mov
out
jmp
jnp
jnp
sub
rcll
mov
jae
push
cli
loop
mov
bound
or
jg
in
pop
and
jo
sbb
mov
xchg
push
inc
cmp
shll
mov
xor
ss
and
sbb
shl
jno
cwtl
insb
jecxz
push
arpl
fwait
push
cmp
nop
inc
push
imul
push
int
jecxz
sub
xchg
pop
sub
rorl
clc
add
push
adc
push
jnp
mov
add
add
adc
mov
mov
lods
adc
sub
mov
inc
pop
dec
mov
pop
inc
daa
fisubl
lods
mov
cmp
sahf
sti
js
push
test
std
xlat
ja
jle
inc
xor
aad
cmp
ds
mov
call
out
or
bound
cmp
lcall
fistpll
sbbb
xchg
movsb
xor
dec
push
mov
inc
ja
imul
stc
xchg
jne
and
fcmove
repz
insl
add
pop
pop
xor
pop
or
inc
je
jg
insl
ss
adcb
xchg
cmp
push
sti
pop
ret
mov
mov
iret
rorb
std
cmp
xchg
ljmp
rcll
push
cmp
xchg
xchg
mov
xor
push
xchg
ret
nop
mov
emms
add
test
test
mov
xchg
xchg
mov
xor
leave
lcall
mov
jo
add
mov
sbb
inc
jge
push
sti
mov
subl
jle
jg
test
push
leave
inc
sbb
arpl
pop
fs
push
es
jmp
sbbb
rol
or
or
add
jle
andl
inc
mov
adc
data16
notl
inc
dec
lret
out
psrlw
xchg
pop
push
jp
lods
imulb
xlat
cwtl
cmp
je
lods
emms
fadd
lcall
iret
sarl
xchg
jno
jecxz
xchg
add
out
inc
ds
mov
mov
pop
add
mov
std
enter
aaa
imul
add
dec
sbb
mov
jo
add
sahf
int3
sbb
nop
add
adc
fisttpl
shl
mov
mov
xchg
inc
sub
xor
jl
shufps
and
lock
mov
adc
jae
and
mov
aam
gs
mov
mov
or
sub
or
mov
insl
test
adc
push
in
add
out
add
lea
dec
in
adc
mov
dec
push
add
call
aad
insb
lods
dec
add
ljmp
out
sbb
lcall
inc
jle
insb
push
pushf
daa
pop
push
xchg
push
fldz
lcall
and
test
rclb
int3
sub
dec
push
sbb
mov
inc
cmpsb
cmp
popa
dec
lock
js
push
jmp
flds
dec
pop
cmp
cmp
imul
and
shl
insl
int3
out
jl
jecxz
push
jae
xlat
xchg
mov
ret
mov
and
inc
jge
clc
fbld
add
cli
xor
ret
movsb
clc
mov
loope
cmp
add
xchg
test
inc
xchg
bnd
xor
dec
pop
pop
pusha
push
popf
je
push
add
pop
mov
ret
out
mov
mov
mov
mov
leave
insl
pop
sub
es
sub
mov
lret
mov
mov
add
inc
inc
repnz
jbe
pop
jge
push
sub
mov
rcll
cli
dec
iret
in
pushf
imul
dec
int3
aas
adc
xchg
push
sub
bound
bound
xchg
push
adc
inc
cld
lea
jno
lea
push
inc
mov
les
xor
lods
fmuls
aaa
ja
lret
adc
or
add
jb
aaa
jae
stos
scas
test
adc
adc
leave
mov
loopne
sbb
mov
loopne
or
sub
ret
movsl
in
aad
add
mov
movsl
fiadds
push
int3
pop
jp
xor
mov
icebp
movb
in
mov
sbb
mov
outsl
movl
sbb
aad
adcb
ror
iret
or
test
dec
ss
hlt
ss
in
stos
cmp
add
out
pop
add
shl
xor
in
icebp
scas
xor
cmp
testl
das
xor
or
dec
pop
sub
cltd
or
fistps
sbb
cmp
add
adc
xor
dec
scas
or
add
xor
mov
xchg
gs
fdivl
out
aam
loopne
push
push
iret
jbe
jl
test
mov
sub
jg
in
cld
dec
pop
loopne
popf
nop
notb
inc
mov
stc
jge
xor
mov
jns
gs
inc
jb
stos
sbbl
sub
xchg
aaa
cmpsb
lods
xor
aas
cmp
xor
movsl
cld
push
dec
push
les
leave
out
mov
pop
out
nop
pop
test
adc
inc
sbb
loope
push
icebp
push
push
ret
lods
mov
repz
pop
adc
lret
fsubrl
jo
cwtl
push
loope
nop
leave
cmp
push
leave
mov
outsl
flds
adc
js
mov
mov
or
hlt
sbb
mov
and
pop
xor
jp
push
orb
pop
lahf
pop
js
adc
cmp
push
mov
fcmovne
pop
inc
add
sti
divl
push
rclb
iret
mov
fsubrp
lcall
xchg
out
inc
mov
lods
sbb
mov
xor
mov
and
hlt
sbb
out
or
nop
push
jns
jl
lahf
ljmp
es
dec
xchg
lds
popa
fwait
inc
popf
sub
in
out
xor
loopne
mov
cmp
test
call
scas
das
imul
xchg
jmp
adc
lock
fcompl
dec
xchg
lods
jl
mov
popf
cmp
bound
xchg
movzwl
xchg
in
sub
add
jno
jmp
stos
pop
sarw
inc
aas
subb
fildll
lahf
mov
int3
xchg
or
sbb
imul
xchg
push
jle
and
daa
pop
push
jle
out
xor
fmulp
clc
clc
or
mov
ret
inc
add
pop
jp
fldl
data16
movsl
dec
popa
mov
push
test
and
ret
decb
or
je
frstor
insl
mov
xor
cmp
push
aaa
jns
lods
lods
and
jle
mov
and
mov
loope
xchg
add
push
gs
pop
pop
add
push
jnp
stc
sub
push
adc
jne
ss
mov
mov
pop
outsb
int3
xchg
leave
pop
ds
or
cmp
test
ret
int3
cmp
imull
in
mov
add
leave
pop
loop
jp
or
inc
cmp
lods
gs
mov
pusha
mov
lods
aas
adcl
and
mov
sbbb
mov
scas
mov
out
or
ret
xchg
cmp
push
adc
jmp
push
mov
lods
lcall
icebp
ret
sahf
aad
orl
mov
or
sahf
aad
lret
jb
adc
stc
outsl
mul
decl
xor
and
stos
fsubr
or
push
xor
cmp
xchg
call
mov
sbb
stos
arpl
in
shl
jp
lock
jo
push
ret
pop
bound
fs
dec
loopne
sbb
mov
hlt
fimull
add
lock
dec
in
jmp
repnz
add
rol
mov
shll
lods
add
push
int3
lds
jae
push
rorb
arpl
cwtl
int
mov
push
jno
jb
push
jmp
ss
jmp
test
cltd
stc
cltd
xchg
sbb
movsb
test
push
push
cld
inc
mov
aaa
loop
pop
hlt
dec
pop
mov
cmpsl
out
pop
repz
jge
jl
inc
add
icebp
mov
je
and
pop
sbb
nop
orb
cmp
add
jmp
adc
insl
sbb
jp
sbb
clc
adc
jbe
icebp
dec
inc
cmp
je
insl
test
rorb
and
test
add
je
nop
lds
loop
ljmp
jne
out
pop
and
sbb
dec
jp
sbb
mov
mov
movsl
jne
add
push
push
das
push
mov
les
in
lds
jl
adcb
ljmp
and
mov
stc
repnz
sti
vcmpss
push
and
xor
repz
ljmp
cmp
fcmovne
iret
sbb
inc
movb
je
hlt
aaa
iret
cmp
push
push
sub
and
push
test
inc
xor
mov
jae
aaa
dec
outsl
and
sub
dec
mov
pop
cmp
hlt
sbb
xchg
movsb
mov
or
xor
add
cwtl
mov
mov
xor
push
inc
ss
dec
loope
mov
mov
test
sub
out
repnz
add
push
jle
jns
dec
and
pusha
in
popf
push
mov
repnz
inc
mov
rorb
sbb
je
lock
cltd
cmpsb
mov
aam
jle
lcall
pop
cwtl
jnp
inc
imul
sub
and
cmp
add
add
pop
lea
dec
mov
negb
lea
pop
lret
jl
sub
xchg
mov
gs
jo
movsb
pop
outsl
imul
mov
xchg
mov
stc
cwtl
subl
mov
lret
sbb
sub
fsubs
mov
push
xchg
push
xlat
icebp
repz
dec
fisubl
dec
popf
push
mov
xchg
fidivrs
adc
xchg
in
jle
and
ret
cs
sti
jle
cltd
push
inc
lcall
pop
push
mov
xchg
loop
imul
scas
loop
je
loope
xchg
cmpb
cli
pop
les
jnp,pn
cli
iret
sbbl
lock
inc
xor
xor
int
adc
adc
movsl
push
movsb
sbb
jbe
popa
nopl
and
mov
jecxz
xchg
jnp
and
sbb
push
mov
dec
adc
ret
rcrl
sti
mov
push
mov
mov
pop
data16
mov
or
dec
add
mov
mov
mov
pop
lea
push
push
arpl
pushf
aas
lret
add
mov
fldt
sub
mov
sub
adc
sbb
nop
push
adc
mov
add
ds
push
test
sub
xor
jns
sahf
imul
dec
int
stos
sub
lcall
aam
or
mov
cld
ret
iret
jmp
jge
rcrl
jbe
das
mov
sti
cltd
mov
enter
f2xm1
inc
pusha
add
pop
pop
mov
shl
push
jl
in
enter
push
movsb
pop
push
cwtl
push
outsb
pop
outsb
mov
rclb
mov
aaa
pop
ja
sub
adc
and
adc
scas
std
push
pop
les
cmp
xchg
or
cmp
cmp
lret
cmp
outsb
addl
leave
sbb
mov
add
fmull
movsb
adc
mov
fsubl
loope
mov
cli
mov
test
in
js
dec
mov
nop
pop
mov
mov
std
sub
aad
mov
push
push
das
inc
push
xchg
push
ja
dec
ret
out
fidivs
dec
pop
dec
xchg
cmpsb
stc
test
sahf
jbe
pop
roll
data16
or
insl
push
xor
mov
xchg
and
jge
pop
add
aaa
nop
jb
mov
int3
xchg
sbb
scas
imul
outsl
or
jmp
lahf
out
scas
cmpsl
lret
adcl
sti
leave
in
add
ljmp
aam
loope
xchg
pop
lcall
adc
pop
repnz
adc
dec
gs
dec
mov
dec
pop
stos
xor
aad
call
xor
js
inc
xchg
adc
fsub
cltd
in
lea
mov
inc
es
adc
mov
and
cmp
fcomip
xor
xchg
xor
mov
outsl
sub
and
mov
and
mov
addr16
or
mov
das
add
test
or
mov
in
stc
xchg
adc
cmp
push
popa
sub
mov
decl
aam
sbb
fidivrs
out
insl
sbb
aam
fs
ljmp
into
popa
pop
add
push
ja
scas
and
add
out
imul
add
jbe
sub
cmpb
xchg
aas
push
mov
rolb
push
lods
stos
mov
mov
xor
xchg
jmp
ret
ret
pop
arpl
or
aas
or
dec
leave
sarl
push
mov
or
dec
mov
xchg
test
scas
or
repnz
bound
gs
mov
outsl
sub
imul
ljmp
cmpsl
shrl
mov
roll
out
mov
idivb
aam
insl
pop
xchg
pushf
pop
sarl
pop
xchg
push
aam
cmp
sbb
test
out
cmp
push
cmp
or
incb
jns
icebp
push
or
inc
aad
shrl
sbb
jae
loopne
loopne
mov
scas
jb
adc
aam
fwait
enter
mov
mov
push
push
movsl
nop
push
or
lcall
inc
adc
shlb
push
sbb
xor
les
adc
mov
test
dec
xor
push
sti
xchg
push
iret
xlat
xchg
xchg
dec
cltd
mov
push
pop
and
daa
mov
test
shll
test
movsl
xorb
dec
sahf
outsb
push
inc
jl
subl
insb
enter
xchg
or
jnp
and
mov
mov
fwait
xor
rclb
fistps
sbb
mov
sbb
and
cmp
dec
rcrb
in
mov
stc
mov
pop
daa
mov
inc
pop
dec
ja
dec
pop
mov
les
xchg
subl
loopne
jo
fs
dec
loop
fidivs
sbb
gs
push
out
inc
push
mov
fwait
iret
mov
push
imul
in
add
clc
sub
mov
sahf
inc
push
xlat
popa
adc
ret
in
xor
in
mov
mov
movsl
inc
dec
fsubrp
inc
mov
inc
pop
pusha
inc
loop
add
sub
jp
test
dec
addr16
mov
mov
sbb
fcomp
mov
outsl
jg
fnstsw
outsl
push
stos
sub
mov
js
add
jle
mov
outsb
mov
mov
outsb
xor
outsb
fbstp
fdivs
ret
push
adc
mov
rorl
addr16
stos
sbb
dec
cmp
aas
push
mov
dec
dec
mov
outsl
fldcw
jb
mov
mov
push
and
push
lret
inc
rclb
pushf
push
mov
add
inc
lea
jne
frstpm(287
mulb
xchg
add
jo
pop
imul
and
insl
rcrl
xchg
clc
idivl
nop
mov
fnsave
es
clc
icebp
mov
stc
gs
and
mov
mov
lret
mov
fsts
loope
or
or
mov
mov
out
cmp
mov
out
je
or
cmc
rolb
lahf
inc
jo
imul
mov
call
push
dec
jle
ds
mov
out
adc
in
mov
icebp
lret
adc
in
icebp
xchg
or
mov
pushf
shr
gs
jbe
fst
sbb
jne
mov
lret
popa
mov
inc
and
or
scas
inc
cwtl
cmp
push
hlt
js
cltd
sbbb
loop
pop
pop
xor
dec
xchg
lret
in
sub
dec
movsb
jae
jns
insl
pop
hlt
mov
sahf
push
inc
mov
mov
dec
mov
mov
mov
xchg
aas
jle
lcall
lret
hlt
jmp
orl
mov
shl
mov
mov
fcom
in
notl
dec
popf
dec
mov
gs
ljmp
sub
bound
daa
pushf
lahf
push
scas
cmp
xlat
mov
popa
mov
pop
mov
fwait
sbb
lds
jbe
es
lea
or
scas
iret
push
loop
inc
add
subb
push
aad
dec
push
pop
lock
fmull
loope
mov
add
loop
pop
mov
xor
jo
stos
push
xor
mov
jg
pusha
fnstenv
inc
pop
mov
shlb
push
sbb
mov
push
xor
jl
dec
jbe
pop
pop
std
shll
and
in
mov
mov
sub
sbb
inc
jecxz
cltd
popa
jb
pop
leave
in
mov
out
jp
jbe
clc
dec
cmc
push
mov
mov
addb
imul
mov
xchg
sahf
out
push
jle
clc
sub
repnz
xchg
stc
sub
shll
dec
sub
dec
jmp
jmp
pop
inc
sbbb
int
mull
and
sub
xchg
jge
mov
cld
pop
ret
push
push
xlat
jbe
mov
inc
and
cmp
imul
fs
add
addr16
aas
or
lret
fidivl
push
loopne
movsl
push
and
dec
mov
jbe
std
popa
push
aaa
push
into
call
and
out
out
lret
pop
repnz
hlt
pushl
push
movsb
std
xor
hlt
shl
lock
pop
int
loope
ja
push
lods
push
in
repz
cmpsl
sahf
xor
test
adc
push
push
dec
test
jecxz
push
push
or
adc
mov
jne
fidivl
sub
pop
iret
mov
fwait
test
arpl
std
mov
les
sub
ud2
jmp
mov
out
dec
mov
lea
std
fwait
lahf
add
or
push
xchg
lcall
int3
mov
xorl
cmpsl
jb
inc
lahf
pushf
jno
mov
xor
shlb
bound
mov
sti
sub
dec
test
pusha
test
aas
insb
aad
mov
or
jns
enter
andb
adc
ljmp
mov
and
hlt
fwait
cmp
cmp
outsl
orb
mov
pop
pop
mov
fistps
ss
out
divb
pop
pop
cmpsl
push
jmp
lock
ja
cmp
push
add
and
sub
popa
cmp
ss
mov
xor
pop
pushf
push
cmp
push
mov
mov
mov
ljmp
clc
repnz
jg
jl
clc
cmp
add
lret
iret
push
pop
loop
sub
xchg
xor
and
call
cld
cs
popa
das
lret
scas
in
mov
repnz
jo
ds
pop
aad
lods
into
fisttps
shll
jne
xchg
sub
mov
pop
sbb
cmpsl
sub
xchg
cmpsl
hlt
adc
testl
xor
orl
jns
add
adcl
insl
out
fs
stos
push
pop
cwtl
push
jle
andl
dec
test
in
cmp
lods
mov
scas
insl
lods
push
int3
or
cmp
inc
dec
ret
ficoms
test
jo
adc
mov
adc
pop
sub
lods
jae
mov
in
pushf
popa
jo
sbb
loopne
insb
bt
or
dec
adc
dec
inc
je
icebp
ds
stos
loop
mov
repnz
cmp
xchg
inc
xchg
out
jbe
mov
popf
push
out
dec
xchg
adc
xchg
adc
mov
and
pop
das
int3
out
sub
frstor
bound
in
scas
rcll
lock
lret
fdivrl
jg
sbb
daa
adc
mov
wbinvd
sbb
pop
jp
xor
arpl
cli
in
stos
add
jp
enter
cmp
lock
lds
or
inc
scas
iret
lods
xchg
insb
dec
xchg
push
leave
lock
add
in
dec
lods
aaa
push
adc
mov
xor
cld
out
push
sub
out
push
jmp
or
movsb
sbb
in
pop
mov
jo
mov
jno
push
out
jl
out
fs
and
repz
push
jp
cmp
xlat
push
rcrl
test
lret
in
iret
add
cmc
cltd
mov
inc
sti
sti
faddl
pop
ret
mov
jnp
and
or
in
cs
ret
scas
pop
jecxz
sbb
adcl
sub
cmp
sti
stos
sbb
dec
push
leave
ds
sbb
mov
sahf
iret
push
pop
mov
push
out
loopne
fdivp
cmp
xor
and
pusha
and
xor
jge
daa
in
sahf
icebp
inc
test
enter
inc
pushl
push
test
ljmp
popf
stos
imul
xchg
cltd
add
lods
aam
addr16
fildll
rcrb
popf
pop
aaa
mov
enter
mov
ljmp
rol
adc
jmp
and
push
loope
dec
or
jbe
loopne
and
mov
adc
mov
sub
in
sbb
mov
dec
jge
test
sub
mov
add
mov
movsl
add
mov
push
push
add
mov
jns
mov
push
sub
lret
dec
xchg
mov
stc
aas
jle
mov
cmpsl
or
jle
int
adc
test
or
push
mov
and
pop
data16
pop
outsl
negl
sub
insl
outsl
mov
cmp
es
sub
jae
jo
out
or
or
push
add
das
sub
jmp
int
push
jo
push
and
inc
addl
in
lods
clc
inc
fwait
dec
add
jl
outsl
push
jae
xchg
daa
dec
popf
bnd
push
flds
or
std
les
jmp
into
shrb
dec
in
add
xchg
dec
add
pop
cmp
imul
mov
inc
pop
pop
loope
aam
mov
dec
jp
add
lock
xchg
sub
adc
pop
mov
subb
in
cld
or
je
scas
hlt
mov
push
into
leave
movsb
into
inc
sub
and
aam
insb
xchg
push
mov
pop
and
test
push
jge
mov
and
push
nop
xchg
push
outsb
adc
mov
addr16
movsb
xor
bound
cmp
or
xor
movsb
cmp
mov
adc
lcall
adc
das
jns
sti
dec
fsubrl
andb
sbb
pop
mov
cmp
mov
adc
lods
out
decb
inc
add
mov
insl
test
fs
dec
cs
sbb
daa
out
add
in
lcall
ja
inc
adc
fwait
inc
push
aad
ret
cmp
call
insl
push
fmull
sub
insb
sbb
imul
arpl
add
and
test
mov
pop
inc
mov
inc
adc
std
pop
push
dec
jl
push
mov
out
and
sbb
lcall
sub
arpl
mov
mov
jge
call
jg
enter
pop
and
ds
mov
stc
insl
mov
and
jmp
sbb
xorb
js
arpl
dec
jb
enter
pop
mov
ret
push
mov
ficoml
push
pop
aaa
ficompl
push
imul
mov
push
pop
sahf
loopne
mov
call
ds
xchg
fsubr
fadds
aaa
xchg
rorb
push
or
mov
std
and
popf
pop
mov
aaa
jle
stos
push
loop
std
stos
in
std
ja
inc
cmp
dec
xchg
in
popa
out
imul
jo
aas
fisubl
jbe
popa
mov
jo
fcomps
insl
mov
xor
mov
mov
inc
lea
dec
sbb
push
loop
lcall
pushf
fwait
push
pop
adc
ljmp
mov
inc
shlb
cli
xor
movsb
or
mov
mov
sbb
sbb
add
dec
movb
in
or
cwtl
push
lock
mov
cmp
jecxz
sub
mov
cltd
dec
fsincos
sbb
sub
jno
add
arpl
test
dec
jmp
or
mov
xor
xorb
push
outsb
cmpsl
fdivrs
xor
test
fimuls
and
jae
add
push
xchg
ret
inc
xchg
add
xor
int
shlb
sub
roll
mov
xchg
fbstp
adc
sti
pop
notb
test
aad
shl
aaa
imul
adc
jge
aam
push
stos
jp
push
add
add
dec
jmp
leave
mov
ret
push
xor
adc
jge
jle
fiaddl
push
add
jg
pop
inc
adc
adc
ret
jle
loopne
push
jp
mov
mov
cmpsl
loop
movsb
mov
outsl
push
pusha
jg
notb
outsb
push
cmpl
bound
sub
adc
loopne
mov
sbb
adc
mov
aas
dec
gs
and
jmp
mov
ret
mov
pop
jge
outsb
adc
adc
push
or
inc
shr
dec
jle
int3
cmp
ret
out
cld
ret
sbb
enter
pop
jle
ficoms
xchg
add
inc
std
adc
mov
fmull
xlat
mov
sbb
pop
xchg
repz
mov
xchg
add
sub
ds
lret
test
lret
adc
push
dec
in
lret
xor
lahf
aaa
jo
cmpsb
add
mov
scas
loope
inc
cmp
sub
dec
ret
out
movsl
mov
out
jl
aas
test
cmp
mov
mov
sub
rclb
adc
xchg
xor
idiv
jns
in
mov
adc
popa
bound
pop
scas
out
aam
pop
fcmovne
pop
adc
popa
outsl
adc
and
je
mov
add
xchg
inc
sbb
jge
and
test
jae
loop
loop
popa
call
cmpsl
rcll
test
pop
mov
lds
not
add
je
jg
adc
inc
lods
xchg
mov
test
pop
test
das
pop
iret
inc
mov
jnp
jo
fidivl
mov
adc
add
bound
cmp
nop
in
subb
je
xchg
cmpsl
in
mov
or
addl
pop
in
stc
pop
adc
inc
pushl
pop
add
push
mov
subps
push
and
stc
int
xor
push
jne
mov
sub
mov
jl
in
pop
push
testl
and
dec
stc
inc
and
bound
mov
xlat
aaa
jb
xor
mov
push
push
into
sbb
adc
adc
sbb
push
mov
fimull
pop
aaa
out
jb
pop
dec
push
mov
dec
and
adc
jecxz
inc
data16
or
jb
enter
test
mov
andb
mov
dec
popf
ret
cli
and
sub
cmp
mov
in
or
xor
test
imul
call
jp
aaa
fcmovb
std
push
xchg
ret
int
dec
test
or
rcll
je
mov
stos
and
xor
jae
pop
or
mov
jo
fdivrs
xor
iret
js
inc
pusha
jne
mov
xlat
xchg
jno
sarb
push
push
jo
gs
rol
aas
ficoml
xchg
int
add
lods
addb
popl
arpl
inc
add
arpl
xlat
bnd
rcl
sbb
dec
sti
cmp
and
popa
fdivrs
xor
xchg
sub
mov
repnz
mov
push
add
sbb
jmp
add
fldt
scas
jae
lods
push
jg
add
adc
ljmp
aam
js
fstpl
push
loop
xor
xchg
adc
xchg
out
lods
inc
ret
repz
push
repz
icebp
sbb
cmp
lret
mov
pop
aam
xor
pop
inc
lcall
dec
jae
rcrl
pop
or
xchg
mov
inc
mov
shll
int
mov
push
nop
in
in
inc
sbb
pop
sub
das
dec
addl
mov
iret
sahf
fadd
sub
jmp
gs
popa
gs
adc
jnp
lahf
cs
mov
pop
sub
lods
aas
stc
shrl
and
lock
outsl
xor
and
sbb
std
xor
ret
inc
inc
push
mov
xchg
cmp
xor
xchg
scas
sub
jmp
or
ret
adc
inc
adc
cmp
jns
inc
xor
dec
fwait
mov
jo
sbb
arpl
cwtl
mov
xor
push
inc
out
fnsave
adc
jnp,pn
sar
pop
pop
rclb
lock
cltd
loopne
xchg
movsb
inc
cwtl
imul
test
mov
xor
frstor
pop
movsb
dec
mov
in
in
nop
xchg
in
addr16
push
hlt
mov
rcrl
and
std
pusha
sahf
inc
push
pop
xchg
pop
test
icebp
cmp
mov
xchg
sbb
aas
xchg
mov
mov
and
pop
daa
push
mov
jb
mov
adc
or
dec
jecxz
ret
push
bound
scas
imul
jae
jmp
clc
push
mov
nop
lods
add
aad
popa
push
insl
cld
xor
add
jmp
idivb
testb
lods
inc
mov
out
mov
inc
shl
call
or
xor
xchg
inc
xor
push
dec
test
pop
loopne
inc
addr16
fwait
dec
inc
jp
xor
mov
adc
je
dec
insb
jnp
dec
xor
fadds
push
mov
cli
xchg
jbe
mov
std
mov
or
nop
hlt
push
mov
push
cmc
fcomi
or
out
cmp
sub
gs
stc
cmp
mov
loopne
inc
es
mov
and
sbb
push
mov
test
js
xchg
xchg
inc
pop
popf
mov
lret
daa
and
push
sbb
add
ret
sub
cmp
xor
mov
xlat
jmp
pop
repz
movsl
pop
jb
ret
push
and
ljmp
das
movsbl
mov
sub
sbb
loopne
in
int3
mov
sub
sarb
cmp
dec
sbb
outsb
pop
popa
popf
fcomip
xchg
xor
sub
jo
dec
push
adc
pushw
js
rolb
mov
cltd
pop
add
or
push
sbb
mov
xchg
xchg
lret
sti
fcmovb
dec
inc
mov
lods
pop
add
sub
xor
aad
xchg
or
call
inc
push
adc
dec
call
out
sti
loop
push
ret
jno
cmp
pop
sbb
add
mov
xchg
jmp
pop
int
pusha
leave
or
jbe
mov
sbb
xchg
ja
add
cwtl
rcrl
sbb
mov
jae
aaa
cmp
xor
mov
cwtl
xchg
cmp
cmp
dec
insb
clc
inc
bound
out
fldenv
shlb
cmp
or
mov
jle
call
xor
jae
js
repz
out
sahf
dec
dec
xor
outsb
xlat
test
or
int3
aaa
ljmp
loopne
adc
pop
xchg
mov
lods
dec
push
cmp
icebp
pop
fmul
sbb
fcomip
inc
mov
inc
ljmp
clc
fbld
js
test
stc
xchg
mov
adc
cmp
push
pop
dec
imul
pop
shl
pushf
fnsave
mov
mov
add
pushf
cmc
jmp
dec
inc
xor
inc
jp
mov
sarl
inc
mov
xchg
je
sub
das
shl
out
fiadds
inc
push
dec
jl
add
jmp
and
rorl
sbb
xor
lret
sub
push
xchg
mov
push
popa
pop
xchg
leave
int3
xor
push
mov
mov
mov
lcall
jns
sbb
mov
cmp
es
pop
push
fwait
fwait
stos
mov
mov
add
push
push
lea
cmp
cmp
rorl
push
jne
dec
shrb
rcll
out
or
cltd
push
repz
and
ds
xor
dec
into
stc
xor
sub
xchg
arpl
adc
test
in
cmp
leave
orb
xor
mov
mov
or
add
pushf
sbb
or
cmp
mov
mov
mov
mov
inc
jp
dec
jne
pushf
rol
sarb
test
cmc
das
lock
mov
adc
lock
jb
sbb
sbb
sub
pop
ljmp
rcrb
sub
push
lods
xchg
in
cwtl
fists
hlt
loopne
lods
inc
inc
aas
in
and
das
jae
mov
jl
cmp
pop
pushf
loop
mov
in
movsl
imul
ret
fdivrs
push
decl
and
dec
cmp
je
inc
jmp
push
push
push
and
ss
inc
in
jle
addl
adcl
add
inc
cmp
dec
cmp
dec
cwtl
popa
push
int
mov
mov
out
movsb
js
imul
lret
jne
outsl
jnp
mov
scas
push
inc
int
push
sbb
cwtl
ljmp
cld
lds
repz
imul
mov
testl
push
out
rcl
out
repnz
inc
fdivp
push
popa
mov
dec
cmpsl
sub
push
cvtdq2ps
mov
xchg
sub
bound
xorb
xor
lods
test
test
dec
addl
mov
jns
not
dec
clc
out
cld
cmc
sahf
push
shll
fs
xchg
dec
and
pushf
push
pop
and
das
lcall
push
xchg
out
xor
stos
sbb
add
fimull
insl
mov
cmp
cmp
test
push
popa
jns
addb
adc
pxor
aam
mov
jne
adc
or
mov
xchg
hlt
adc
jae
push
jp
sbb
push
ljmp
push
mov
test
incl
dec
xorl
push
push
add
mov
add
cmpsb
mov
push
jg
addr16
push
insb
dec
add
jbe
sub
or
out
jne
sarb
jo
mov
mov
shrl
fdivs
arpl
std
lret
call
nop
mov
scas
add
adc
decb
or
icebp
mov
cltd
mov
xchg
xchg
mov
mov
js
movb
push
xor
incb
mov
cmp
jp
insl
push
mov
mov
xor
inc
sub
cmp
sbb
fcom
out
lahf
add
add
icebp
test
lret
clc
addr16
movsl
mov
test
mov
push
call
jnp
push
adc
cmp
loop
lea
stos
and
in
or
out
or
sub
jp
and
lcall
nop
inc
loope
pop
push
sub
scas
push
and
sahf
and
scas
sub
outsb
jne
mov
mov
cli
xchg
sarb
imul
jmp
mov
stos
jb
xor
xor
stos
out
sbb
xchg
fistps
push
push
xchg
inc
mov
mov
mov
mov
mov
sbb
icebp
shll
arpl
push
jnp
out
ljmp
mov
mov
pop
out
test
push
fstps
pop
pmuludq
lahf
mov
and
cmp
imul
jno
jnp
movb
cmp
pushf
imul
iret
push
mov
lock
imul
iretw
aad
outsl
push
adc
or
xchg
and
jo
or
jmp
mov
lret
rolb
and
jl
push
fstpt
jg
popa
xchg
adc
push
in
xchg
out
push
insb
insl
les
mov
ja
js
jge
add
push
enter
pop
int3
in
mov
mov
cwtl
push
call
enter
fldl
in
dec
mov
jae
and
jle
jge
mov
rcrl
fsub
xor
aas
jmp
jae
outsl
inc
div
or
dec
dec
inc
sahf
out
js
xor
xorb
pop
frstor
rorl
scas
daa
rcl
ret
mov
jae
pop
decb
xchg
jmp
mov
and
insl
jo
pop
nop
mov
stc
cmp
outsb
cmp
shl
inc
sti
daa
movaps
into
ror
pop
cmp
sbb
lock
aam
imul
and
push
push
sub
out
mov
leave
cmp
and
lods
pop
int3
mov
push
jbe
adc
add
mov
fistpl
dec
imulb
xchg
in
adc
imul
sub
xchg
in
mov
jne
xor
out
or
insl
mov
mov
imul
or
ljmp
xor
xchg
inc
rol
mov
mov
scas
ja
lea
cmp
nopl
mov
adc
push
cmp
jno
sbb
inc
outsl
adc
lds
add
push
cmp
cmp
sbbb
jmp
inc
test
mov
pushf
mov
sbb
pushf
shl
test
or
xchg
aaa
jecxz
into
jo
adc
xor
push
andl
lahf
out
jnp
sti
mov
cltd
jmp
outsl
push
cmpsb
loop
adc
push
daa
hlt
mov
or
adc
lea
sub
int
and
cwtl
shrb
inc
daa
mov
sub
cmp
data16
jnp
lret
insb
out
pop
loopne
sbb
sub
jne
ss
in
cltd
test
movsb
jle
inc
xchg
cmpsb
sbb
jmp
cmp
hlt
xor
push
fisttps
jns
and
push
cmp
xor
jnp
fcompl
aad
ficoms
sbb
sbb
xchg
and
sbb
outsl
push
and
gs
cmpb
pop
xorl
sti
inc
cmc
pusha
out
mov
or
lods
mov
sbb
idivb
or
lahf
add
sub
mulb
aas
mov
and
pop
pop
xchg
xor
inc
test
aas
insl
shlb
mov
js
scas
inc
mov
es
sahf
push
pop
add
xchg
adc
orl
push
jbe
les
testb
jge
sbbl
rorb
adc
sub
adcl
int3
xor
push
iret
popa
mov
imul
fcmovbe
push
popa
divb
and
jae
fldenv
dec
push
sbb
sti
pop
push
les
dec
sub
inc
orb
jae
cwtl
xchg
or
mov
cltd
or
aaa
leave
mov
jae
mov
stc
dec
push
fldenv
jmp
mov
clc
sbb
add
ds
imul
sub
outsb
or
lret
stos
or
fs
mov
mov
mov
mov
inc
and
mov
addb
out
popa
mov
popf
sti
mov
jo
pop
dec
add
sub
arpl
pop
mov
mov
mov
jmp
xlat
mov
push
xor
pop
stos
shl
in
jae
or
lods
push
iret
fadds
xchg
scas
hlt
or
push
push
inc
lock
push
xorl
faddl
mov
ret
xor
popa
xchg
cmp
pop
jno
popa
mov
sub
iret
push
jno
or
pop
out
add
cmp
xchg
inc
adc
pop
js
jns
in
inc
sbb
push
adc
orl
lahf
and
int
push
iret
xor
xlat
push
loopne
nop
xor
loope
or
mov
adc
mov
xor
and
fadds
sub
test
ret
bound
jge
push
dec
fsubr
cmp
inc
cmc
mov
mov
sub
mov
xchg
popf
mov
icebp
das
jle
mov
and
mov
pusha
in
push
pop
movl
arpl
pop
mov
pop
inc
notl
lods
xchg
sti
imulb
sub
lods
pop
xorb
test
dec
pop
cwtl
movsb
push
aam
xlat
mov
add
sub
decl
mov
pop
hlt
or
dec
shrb
dec
shrl
std
enter
scas
fs
cmpsb
xor
bound
mov
inc
inc
jle
aas
lret
xchg
pop
insl
mov
adc
sbb
shrb
and
scas
xor
je
add
pushaw
or
sahf
daa
in
and
adc
pop
inc
jno
adc
cmp
in
orl
pop
dec
adc
push
and
in
inc
mov
aas
mov
push
adc
std
aas
xor
fdivs
push
mov
movsl
mov
cld
loope
or
test
clc
sub
iret
sbb
insl
imul
cs
jmp
jbe
sub
ds
lock
xor
or
jecxz
or
pop
mov
popa
dec
pop
imul
jge
rcll
imul
inc
and
loop
inc
cmp
fldt
test
mov
dec
lock
mov
dec
shlb
sub
hlt
jae
stos
je
je
pop
dec
pop
inc
loopne
or
inc
inc
mov
test
into
mov
icebp
mov
sub
int3
clts
cmp
mov
push
jo
popf
ret
sarb
or
iret
adc
insl
lcall
sub
ja
pop
push
and
je
addr16
and
and
adc
mov
popf
loope
inc
ficoms
xor
out
xor
pop
push
mov
in
push
mov
dec
mov
test
mov
movsl
xor
push
into
cwtl
sbb
push
cmp
and
dec
xchg
xor
lret
insl
outsb
cmp
adc
jp
push
repz
jo
int3
loop
dec
mov
xor
dec
mov
pop
ljmp
cmp
addb
jl
and
sbb
hlt
bound
notl
sub
push
scas
push
cmp
sub
mov
aad
rcrb
test
pop
jmp
xchg
jo
xchg
or
add
mov
cmpsb
in
testb
in
ja
inc
out
xchg
jp
adc
ljmp
lahf
mov
outsb
pop
xor
nop
add
xchg
imul
jmp
inc
es
lds
lea
ficomps
sub
inc
insl
cmp
xorl
dec
popa
sbb
outsb
fcomps
shlb
loopnew
adc
data16
add
push
sub
pusha
outsb
jnp
inc
or
and
dec
sbb
insb
mov
aam
sbb
ds
adc
icebp
test
add
rorb
call
or
ljmp
call
pusha
cmp
test
jo
shrb
mov
jge
imul
arpl
mov
out
aam
repnz
mov
pushf
mov
add
add
push
mov
xor
ja
cli
ljmp
sbbb
sarb
mov
lret
pop
or
ja
sbb
scas
mov
roll
les
fdiv
lcall
sbb
jbe
pop
aaa
xor
mov
push
mov
mov
fninit
std
enter
jmp
mov
imul
xchg
in
mov
xorl
sbb
imul
or
mov
repnz
and
push
sub
insl
in
add
push
pop
add
cltd
pop
fadds
roll
xor
loopne
into
mov
stos
insb
jbe
pop
cmpsb
in
dec
in
mov
push
push
stos
add
sub
adc
mov
dec
dec
pop
divb
ror
test
mov
dec
outsl
iret
push
mov
xchg
and
pop
pop
jae
mov
js
jbe
or
pop
adc
add
loopne
mov
jp
imul
add
sub
sub
jo
mov
inc
dec
push
orl
test
mov
mov
pop
lods
mov
pushf
fdivr
repnz
jmp
pop
jno
xlat
out
add
lods
mov
repz
push
imul
adc
push
nop
adc
cmp
lret
dec
into
lahf
add
jp
dec
hlt
pop
mov
xchg
mov
repz
cmp
or
inc
inc
mov
push
jmp
add
insb
nop
dec
sbb
int
pop
jle
loopne
test
iret
shl
mov
jp
aad
rorb
pop
mov
fs
inc
mov
cs
pushf
sub
jle
lock
mov
stc
das
dec
mov
push
mov
mov
ficoms
mov
adcl
cld
lahf
dec
lods
mov
je
fisubrs
movl
push
add
mov
mov
mov
icebp
shlb
mov
add
cli
jb,pn
cmpsb
std
xor
sarb
push
andb
in
and
or
and
jae
leave
sahf
popf
push
fcmovne
leave
add
xlat
mov
pop
and
pop
icebp
adc
mov
cmpsl
aas
sbb
push
xor
xchg
popa
or
cmp
lock
mov
mov
inc
cmp
xor
add
lahf
push
fs
add
xor
lea
repnz
push
scas
out
sbb
out
out
inc
sub
sub
dec
pop
pop
push
pop
sbb
pop
mov
dec
fwait
roll
jb
and
shlb
and
cmpsb
jne
sub
daa
mov
ror
mov
mov
xchg
dec
nop
cmc
imulb
int3
fwait
pop
sti
push
dec
out
orb
aad
pop
lock
push
xor
mov
aam
mov
sub
jg
or
jbe
pop
dec
mov
pop
mov
adc
adc
inc
sbb
std
subb
imul
cmc
stos
xor
test
sub
cmp
jmp
cmpsb
adc
mov
in
mov
push
jle
std
jmp
sub
dec
sub
mov
jl
and
add
gs
mov
hlt
fwait
adc
jne
jg
lcall
out
sub
mov
fistpll
movsb
shll
bnd
ror
and
pusha
jne
stc
test
dec
aas
add
sarl
jno
pop
lock
in
sub
jmp
mov
incb
popf
push
pop
inc
setne
hlt
stos
jg
pop
xchg
mov
cmp
arpl
mov
jl
pop
fcoml
sub
js
push
inc
pop
hlt
out
imul
sbb
xor
imul
icebp
loopne
divb
roll
dec
dec
nop
mov
cwtl
int3
inc
dec
push
sbb
or
push
lods
or
cmp
jg
clc
jbe
pop
push
jno
imul
adc
mov
mov
test
cld
adc
add
subl
fisttps
adc
mov
sbb
out
and
pop
xchg
fisttps
imul
push
pop
mov
inc
xchg
test
sbbb
push
dec
inc
xchg
pop
mov
out
andl
int
test
xchg
in
je
lahf
gs
lods
dec
sub
push
add
cltd
adc
lret
xor
push
lcall
push
sub
mov
adc
and
out
iret
and
adc
idivb
mov
mov
push
pushl
inc
and
mov
cmpsl
dec
xchg
lcall
or
lea
dec
mov
or
mov
jg
pop
out
test
lds
mov
pusha
pop
or
push
mov
fwait
arpl
std
popa
fistps
adc
sahf
mov
pop
dec
cmpsb
imul
sahf
ss
lret
push
adc
pop
pushf
shrb
imul
int
test
stos
mov
daa
fbstp
pusha
std
hlt
jl
pop
push
fldenv
push
ret
ds
push
fstl
adc
push
ss
leave
and
xchg
jae
inc
movsl
mov
mov
mov
adcl
and
mov
orb
imulb
outsl
push
cwtl
push
sbb
adc
lods
push
lods
shll
shlb
ds
xor
mov
inc
je
jbe
aam
jp
push
in
sub
lds
mov
out
jmp
xor
push
add
fstpt
scas
imull
adc
dec
sbb
out
adc
push
int
dec
int
push
mov
ljmp
adc
lods
and
mov
add
mov
cwtl
add
testl
inc
imul
pop
pop
dec
jbe
push
pop
hlt
mov
fst
lret
popa
sti
pop
push
mov
mov
push
pop
lods
sub
mov
push
fbld
add
lea
or
cli
lea
sbb
sbb
mov
cmp
loopne
cli
shlb
lahf
in
xchg
cmp
add
mov
mov
cmp
mov
push
movsb
ja
mov
mov
lea
loop
pushl
loope
xchg
pop
push
jnp
int
shll
sbb
dec
mov
mov
jns
jg
dec
mov
add
or
pop
iret
inc
xchg
andl
cli
lds
idivl
inc
pop
jo
and
inc
aad
subb
cmpsb
inc
add
call
mov
add
xchg
sbb
leave
int
sahf
pop
add
test
sti
rorl
es
jp
fildll
pop
ficoms
push
sbb
fnstsw
dec
es
mov
call
xchg
test
lcall
insb
sub
jecxz
fcomip
iret
push
pop
jge
lahf
sub
jno
pop
mov
or
and
sahf
jae
adc
and
inc
adc
fsubrs
inc
mov
pop
popa
pop
shll
push
cs
popf
movsb
lods
iret
inc
pop
lods
or
cltd
jecxz
xchg
xchg
mov
icebp
ds
andl
fs
mov
stos
cli
ja
jecxz
aaa
adc
imul
push
jge
inc
test
xchg
push
pop
sahf
mov
sbb
mov
jle
std
mov
movsb
cwtl
sub
lcall
push
test
jp
ds
mov
les
jle
push
pop
lret
mov
rolb
push
stos
mov
jg
jle
jae
jp
lret
in
push
inc
ret
daa
shlb
or
push
and
fst
xchg
lahf
sarb
push
nop
loope
jbe
and
loop
jne
lret
testb
movsb
push
push
adc
mov
stos
data16
ds
jl
sbb
mov
sub
hlt
jne
das
out
pop
hlt
mov
in
jmp
xchg
cmp
cmpsl
test
fwait
js
out
push
lods
js
xchg
sub
leave
lods
movsb
mov
push
sub
inc
dec
cld
ljmp
int3
cmpsl
test
decl
outsl
dec
mov
dec
inc
cmc
push
test
xor
lods
lods
inc
pop
bound
mov
mov
ret
dec
lods
test
cli
jle
or
addr16
test
xor
jmp
cmpsb
pusha
and
push
test
xchg
push
xchg
fldenv
fdivl
inc
fwait
jb
add
nop
ds
pop
mov
test
aad
in
inc
sub
jno,pt
push
cmpsl
jg
sbbb
push
xchg
cmp
and
subl
test
jl
adc
faddl
jl
pop
jnp
pop
sbb
cmp
mov
mov
in
std
fbld
and
mov
mov
cmc
dec
popf
adc
pop
mov
les
cmc
loope
jno
mov
jo
call
enter
and
daa
int
fwait
dec
xor
movsb
jl
std
inc
arpl
mov
or
fistl
sbb
pop
adcl
inc
jle
movsl
lods
xchg
push
mov
mov
mov
inc
cld
lcall
cmpl
fisubrs
pop
add
iret
int
in
mov
lds
lahf
outsb
idivb
jbe
inc
or
mov
mov
and
fisubrl
lret
pop
cmc
lods
je
sub
dec
lea
or
jnp
fisubrs
pop
js
scas
mov
jecxz
lahf
mov
cmc
rcrb
sti
nop
aam
movsb
xor
cmpsb
xchg
cld
and
xchg
int
sub
mov
ljmp
iret
fldenv
pop
mov
xchg
or
inc
jecxz
and
stos
icebp
jnp
cmpsl
and
push
and
mov
or
mov
mov
lret
xchg
mov
or
push
lret
cmp
sbb
sti
sbb
lret
jbe
repz
or
outsb
fs
mov
adc
cmp
in
popa
sbb
jne
ret
sub
call
jl
test
int
fwait
sub
and
pop
xchg
repz
cmpl
shrb
cmp
xchg
jp
dec
push
pop
out
sbb
jo
or
pop
or
jmp
movsl
or
jb
mov
dec
daa
mov
cmp
aas
mov
movsb
sub
popf
dec
jno
push
fcomps
mov
call
rolb
and
push
jb
xchg
dec
jge
out
cmp
jb
inc
pop
push
daa
xchg
or
mov
sbb
movsl
sti
ret
xchg
and
popf
cmp
dec
loopne
mov
pop
fsubrl
pop
lods
sub
pop
pusha
cltd
mov
lods
es
mov
jne
mov
ljmp
inc
lods
and
lods
dec
fisubs
sti
push
mov
sub
insl
loopne
fld
sub
ljmp
xchg
imul
sub
adc
add
add
daa
xchg
adc
add
hlt
mov
mov
ss
dec
insb
shrl
sbb
stc
pop
push
popa
bnd
decb
fcoml
pop
mov
mov
lds
jg
pop
cmpsb
mov
xchg
ss
out
ret
sub
mov
nop
cmp
mov
cmp
sbbb
inc
jns
outsl
xchg
test
cmpl
clc
mov
movsl
pcmpgtb
fsubrl
in
fcoml
push
or
jae
iret
lret
jge
scas
cmp
and
mov
enter
jge
and
xor
dec
or
xchg
shll
in
pusha
push
pushf
push
int
out
movsb
sub
mov
lahf
outsl
jl
add
je
das
outsb
jle
jle
fldl
dec
jg
fmull
lock
push
hlt
ss
adc
aas
jns
std
xlat
dec
addl
add
jb
jbe
inc
stos
pop
pop
adc
inc
in
push
testl
sbb
movsb
pop
or
push
mov
xor
xchg
mov
pop
pop
fsubrl
xchg
das
imul
data16
adc
mov
std
call
sbb
inc
shlb
xchg
push
dec
sbb
xchg
jnp
outsl
adcl
imul
or
insb
hlt
mov
push
dec
jmp
pusha
adc
sub
lahf
js
clc
or
and
movsb
cmp
sbb
add
mov
xor
sub
mov
dec
divl
ljmp
push
sahf
xchg
cmp
lea
push
mov
es
xchg
test
loope
inc
cmp
testl
shr
and
loope
ror
int3
push
fisubl
or
and
sbb
mov
inc
pop
mov
loop
jbe,pn
fs
movsl
add
nop
mov
mov
cmc
inc
cs
pop
adc
xchg
xor
push
sub
roll
push
mov
lahf
inc
pop
sub
sahf
inc
dec
jnp
push
test
add
jle
mov
outsl
sub
stos
mov
mov
cmc
iret
pop
adc
push
or
inc
cmp
cltd
js
out
pop
int3
jl
mov
dec
adc
push
cmp
mov
sahf
jmp
cmpsl
or
push
jl
or
jmp
pop
stc
mov
jae
mov
xorl
xor
push
pop
test
push
or
test
mov
push
push
into
push
jp
pushf
inc
std
lahf
jo
in
cmp
test
in
jge
movsb
cwtl
clc
lret
int3
in
xchg
imul
imul
shr
push
outsl
flds
sub
sbb
aad
and
sub
outsl
push
xchg
dec
notb
les
inc
aam
dec
movsb
jg
repz
int3
xchg
inc
mov
ret
out
scas
stos
movsl
loop
mov
or
jb
es
mov
aas
cli
int
and
ss
sub
add
mov
xor
fadd
fisubl
rcr
xchg
inc
repz
enter
addl
jp
lock
ss
pop
inc
mov
out
push
mov
cmpsl
cmp
repnz
sub
inc
xchg
bound
in
fyl2x
jle
nop
sub
flds
mov
jo
shrb
add
fwait
xor
jne
mov
jmp
je
cmp
scas
filds
push
and
repnz
pop
out
ljmp
jecxz
addb
cmpsl
adc
xchg
ret
cmp
loop
into
insl
sti
into
add
sub
std
xor
add
fiaddl
stos
dec
stc
outsl
mov
insl
cmc
jns
movsb
clc
ss
sar
xorb
or
xchg
add
addr16
push
sub
repnz
inc
fidivrl
xchg
sbb
iret
pop
and
mov
loope
mov
insl
sub
fmuls
lods
ret
push
test
push
iret
adc
mov
mov
mov
lock
add
cmp
push
mov
inc
sub
in
aaa
xchg
mov
pop
xor
xchg
lret
cmc
or
jl
shrb
addr16
fldl
cs
xchg
xor
push
std
xchg
arpl
bound
ja
cltd
cs
daa
andb
and
repz
outsb
fstpl
test
sub
test
dec
inc
cmp
sbb
cmp
out
mov
cli
mov
hlt
hlt
xchg
orb
dec
in
scas
lret
add
xor
inc
ljmp
mov
ds
lret
push
fadds
cmp
stos
dec
movsl
les
scas
es
xor
mov
xlat
push
or
xor
push
mov
das
jmp
add
lret
scas
out
outsb
jl
mov
repnz
cltd
xchg
mov
int3
push
mov
mov
fbld
sub
and
push
int
aaa
push
insb
test
cmpsl
dec
mov
popa
movsl
in
fstl
shrb
sub
imul
or
xchg
cmp
movsl
jl
in
iret
clc
test
bound
incb
sbb
ret
jmp
testb
addb
mov
cmp
movsb
movsl
sbb
pop
loopne
or
lods
insb
mov
orl
inc
push
cwtl
test
add
ja
jne
cli
push
std
xchg
cmpsb
mov
push
push
in
mov
loopne
and
cmpsb
inc
mov
jnp
int3
icebp
dec
data16
inc
sbb
sbb
daa
inc
popf
stos
insb
fwait
sub
push
ja
lea
mov
push
bound
lret
stos
add
enter
mov
cwtl
scas
xchg
test
je
andl
and
jo
xor
xor
aaa
das
push
outsb
arpl
dec
lcall
xchg
sbb
jne
loope
lds
enter
out
mov
in
aaa
xor
jb
outsb
mov
cmc
repz
fucomp
loop
dec
cli
ficompl
aam
rclb
clc
mov
lods
cmp
imul
xchg
pop
and
insl
or
fcomps
shlb
xchg
mov
pop
mov
xchg
or
xor
cld
pop
into
idivl
out
sarl
and
sbb
mov
jnp
sbb
inc
loope
mov
xorps
jae
decb
jno
jg
gs
test
shlb
cmp
or
push
rolb
xchg
sub
test
cmp
mov
mov
xor
jge
mov
mov
push
outsb
in
arpl
push
lret
aas
jp
rcr
mov
cmp
sub
loopne
jge
in
fld
inc
into
out
add
das
inc
sub
movsb
fisttpll
adc
xor
and
jnp
mov
jecxz
mov
insb
fwait
adc
loopne
loop
cmp
push
xchg
mov
icebp
into
fwait
adcb
lods
xchg
in
test
xor
and
mov
xchg
fnstsw
jmp
cmp
fnsave
pop
inc
mov
dec
rclb
pop
in
bound
out
mov
nop
cmp
insb
dec
adc
movsb
loopne
push
ja
incb
or
mov
xorl
adc
test
xor
in
inc
add
addl
dec
pop
dec
cmp
sub
cs
and
xchg
jle
jbe
jno
and
aam
push
out
nop
push
xor
sbb
or
mov
jno
fcoml
insb
out
mov
lcall
ret
fisttpll
or
jb
jge
lret
mov
jb
cli
js
rcll
setno
insl
dec
mov
ja
sbb
push
mov
or
push
lret
sub
push
mov
stos
cmp
sbb
mov
fmull
dec
jp
lods
fwait
adc
xor
lret
popf
mov
in
adc
push
xchg
or
shl
mov
push
adc
dec
pop
in
inc
jle
ja
cmpsb
mov
fldcw
shlb
mov
adc
cmp
ss
repnz
add
xor
loop
aad
imul
pusha
sub
mov
jecxz
xor
cmc
ljmp
mov
adc
xor
test
lds
int3
jecxz
pop
dec
movl
andb
inc
in
mov
sbb
into
lods
add
js
cmp
adc
mov
cmp
popf
xlat
lods
stc
testb
fmuls
mov
cltd
xchg
push
jecxz
mov
jbe
mov
xchg
mov
insb
sub
cli
mov
dec
out
mov
mov
iret
je
std
andl
jp
lock
ret
pop
jo
push
and
jnp
jae
mov
rol
aam
jge
adc
mov
xchg
sub
sub
adc
or
leave
mov
and
mov
loopne
add
rolb
sti
cmp
adc
cmp
cmc
cwtl
movsb
xorps
lods
lods
inc
ret
mov
mulb
call
cmpsb
scas
mov
aad
pop
nop
imul
ss
cmc
ds
lret
jle
out
jae
xchg
xor
subl
shll
sub
inc
jne
pop
adc
sbb
aaa
mov
shrl
dec
outsl
mov
or
hlt
filds
mov
orl
or
pop
jb
push
add
add
scas
mov
sti
jne,pn
jmp
push
pop
dec
mov
sbbb
inc
adc
inc
push
jecxz
insl
es
push
pop
rcrb
rcl
jbe
dec
adc
mov
pusha
pop
jnp
jae
cmpsb
lock
fisubrs
xchg
or
cmp
repz
push
sub
out
rorb
jo
xchg
fwait
loope
vmovhps
and
bound
jne
fisttpl
loope
test
cmp
jb
pop
cmp
mov
loop
int3
test
jnp
mov
call
add
pop
je
lds
push
sub
cld
jbe
xchg
in
imul
movsl
xlat
rol
sar
push
or
sbb
mov
addl
and
cmp
mov
lahf
ljmp
stos
fisttpll
add
xchg
test
push
and
push
mov
and
cmp
add
pushf
xor
ret
icebp
test
cmp
in
in
aas
mov
push
rol
das
addb
scas
fstp
mov
lods
or
or
mov
sub
in
rorl
jae
add
dec
sbbb
xchg
inc
shll
inc
mov
and
pop
add
loop
cmp
xchg
mov
sahf
fsubrl
inc
arpl
sbb
ljmp
pop
out
in
fldl
xchg
sarb
jl
int3
dec
mov
imul
es
cmpsl
add
fisubrs
dec
test
mov
push
sbb
pop
and
push
sub
pop
mov
mov
mov
pop
mov
sbb
into
mov
repz
stos
mov
ss
mov
sbb
cs
out
outsl
pop
mov
sbb
ficoms
jbe
in
xchg
mov
adc
push
push
pushl
lds
adc
in
push
push
cmpb
stos
push
mov
fchs
push
in
fcmovnb
mov
outsb
xchg
pop
outsb
sub
push
and
adc
xchg
ret
fists
les
jb
fsubrl
push
sub
pop
or
mov
cmp
dec
je
rcrl
enter
aad
or
test
or
es
dec
shl
jnp
repz
xor
mov
and
repnz
jbe
ljmp
dec
inc
inc
lahf
xchg
rorl
icebp
in
inc
pop
cs
std
pop
dec
sbb
aad
sbb
cld
leave
inc
or
loopne
rcrb
addr16
ret
sbb
sbb
push
add
add
fdivrl
es
dec
inc
and
xchg
icebp
clc
movsl
cmc
int
dec
cwtl
mov
jmp
inc
nop
ja
enter
xchg
add
pop
mov
repnz
add
push
out
pop
sub
mov
dec
push
jb
movsl
mov
push
add
push
push
out
fistpl
add
jmp
xor
addb
push
in
cmpsb
outsb
scas
push
imul
mov
mov
pushf
lods
sbb
lahf
xorb
cmpsl
test
in
fsub
dec
pusha
dec
insb
ss
cld
lds
xor
pop
mov
sub
rolb
jbe
lcall
pop
popf
jmp
mov
rclb
jb
jl
dec
mov
jb
inc
and
int3
arpl
outsl
daa
mov
mov
mov
pop
pop
test
and
out
cld
jnp
sub
push
lods
insl
push
add
push
aam
test
cmp
bound
mov
xor
fistl
insl
lds
inc
aam
testb
pop
popa
mov
inc
rolb
add
inc
out
daa
sub
hlt
dec
cmp
sub
xchg
sbbl
xchg
ss
add
or
fldl
xchg
cli
mov
mov
push
xor
mov
inc
jb
xchg
jbe
rcrl
clc
cmp
arpl
into
sub
loop
aad
rorb
inc
in
aam
jl
xchg
daa
in
mov
bound
xor
arpl
pop
pushf
xchg
push
das
adc
sub
rorl
sub
cwtl
cmp
inc
mov
push
add
shrl
inc
je
jl
jl
aas
sub
sub
mov
out
cmpsb
cmp
movsl
cmpsb
mov
rclb
push
ret
or
and
outsb
scas
mov
mov
repnz
stos
push
sbb
or
and
fidivs
pop
inc
es
imul
lds
cmpsl
adc
push
xchg
jbe
add
sbb
mov
dec
outsl
push
mov
mov
push
and
movsl
or
frstor
sbb
jnp
or
sbb
push
popa
adc
movsl
ljmp
cmp
in
push
insl
jecxz
jo
pop
lods
push
ja
mov
fucomip
cmpsb
lds
push
pusha
pop
jbe
mov
push
jp
filds
sahf
mov
or
out
into
sub
xor
xchg
xchg
cs
xlat
insl
popf
std
leave
shrl
inc
mov
inc
rcrl
aas
imul
and
test
pop
lretw
iret
xchg
lods
loop
in
inc
dec
lret
popl
outsl
test
or
xchg
frstor
or
mov
in
repnz
push
shl
lret
mov
sbb
gs
bound
daa
inc
jno
sbb
and
mov
leave
out
fs
aad
jne
out
fisttps
adc
or
outsb
fimuls
add
cmpsl
stc
hlt
sub
cs
rcrl
aaa
adc
fstpt
mov
fdivp
pop
stos
in
add
sbb
jge
sbb
pop
scas
shlb
loop
movsb
jns
mov
xor
test
push
jg
dec
add
aaa
jae
sub
shrl
cwtl
inc
ret
cltd
dec
jg
push
dec
jle
jnp
ret
sbb
jo
repz
jmp
mov
add
xchg
mov
out
les
scas
arpl
movsl
cltd
adc
lock
xor
and
sub
adc
out
mov
mov
or
push
ds
inc
ss
lods
movsb
call
jb
pushf
ret
repnz
jecxz
pop
repnz
inc
sbb
call
or
inc
sub
aad
push
ja
cmp
xor
cmp
xor
add
mov
subl
dec
jns
adc
rol
xlat
dec
cmp
into
cmp
jg
push
mov
fistpl
lods
nop
add
xchg
add
testl
pop
xor
stos
test
cmp
sub
xor
sbb
inc
xchg
cmp
and
xorl
sahf
lret
in
pop
add
aas
adc
icebp
fcmovu
ds
mov
es
shll
ljmp
lods
dec
xchg
jbe
pop
mov
in
ret
push
test
pop
mov
stos
inc
frstor
xlat
push
xor
sarl
xchg
and
jno
lock
loope
sahf
test
fsubl
aas
ret
in
mov
push
jne
dec
iret
mov
mov
pusha
ret
aad
pop
jecxz
xchg
pop
mov
popf
call
sbb
iret
je
mov
leave
mov
ret
xchg
jecxz
inc
pop
outsl
sub
jmp
push
cltd
fnsetpm(287
movl
cld
jnp
popf
call
aam
or
out
dec
gs
in
xlat
ss
imul
fwait
aaa
ja
gs
xor
stc
add
in
sbb
imul
leave
sbb
push
lcall
int3
lret
imul
mov
jecxz
popf
mov
inc
jle
sub
or
ret
or
xchg
adc
pusha
mov
mov
or
xlat
fisubrs
das
adc
out
mov
push
sbb
scas
pop
into
push
or
mov
stc
lods
into
jmp
insb
jno
sbb
push
or
insb
push
push
pop
mov
test
cmp
lock
mov
push
jns
sub
adc
push
add
pop
mov
cmpsb
push
imul
xor
aam
aam
xchg
cld
jb
jbe
pop
and
dec
sahf
int
jmp
into
jmp
cmp
stos
and
int
ds
dec
lahf
out
push
or
mov
cltd
cvtdq2ps
cmp
and
sbb
push
insb
lcall
sbb
adc
js
add
ds
xchg
inc
enter
pushf
push
push
mov
ud1
mov
xchg
les
rcrl
push
add
lret
sbb
sbb
aad
into
and
mov
or
aam
pop
inc
cmpb
cmp
jnp
jle
cmp
inc
loope
mov
lock
pop
in
das
imul
lahf
xor
or
out
pop
ret
in
rclb
add
pushf
gs
inc
pop
pusha
mov
xchg
pushf
movsb
insl
addr16
clc
jno
fcmovnb
dec
jp
dec
js
mov
icebp
push
or
lcall
adc
pop
mov
das
push
cmp
clc
iret
jnp
cmp
mov
jmp
sbbb
pop
fs
xor
scas
xchg
inc
or
dec
call
outsl
clc
mov
pop
sub
and
pushl
inc
dec
loope
mov
cltd
ljmp
das
xchg
mov
or
jmp
lcall
leave
push
ret
sub
sub
adc
cmp
adc
cmp
xchg
mov
sub
dec
mov
inc
sbb
js
in
lret
loope
lds
orl
fwait
les
fldt
fcomi
pop
ja
scas
adc
xlat
pop
add
push
rcl
dec
clc
ret
std
or
jno
inc
add
and
insl
int3
out
call
adc
add
test
adc
outsb
or
xor
and
jae
xchg
insl
aaa
or
cmpsb
rcll
not
shl
imul
mov
insl
addr16
out
sbb
jo
jbe
mov
in
je
jnp
pop
iret
fwait
xor
or
cltd
mov
iret
scas
fsubr
sahf
and
inc
mov
add
jl
loope
mov
jmp
xchg
fsubs
mov
aas
fisttpll
mov
mov
pop
sub
out
pop
add
jle
ljmp
mov
push
jmp
icebp
iret
jnp
xchg
loope
sub
push
jg
sbb
mov
xor
inc
into
int3
inc
in
mov
cmp
jno
cmp
sub
icebp
clc
fcoms
push
mov
cmp
add
adc
add
fnstenv
cmp
sti
jmp
xor
dec
scas
imul
lods
aad
mov
cld
add
lret
bound
lcall
jg
fistps
je
les
mov
mov
pop
xor
jl
and
scas
push
fisttps
aaa
mov
push
leave
inc
or
or
popa
jp
sub
sbb
stos
inc
aas
sbb
xor
imul
and
cmp
test
jl
xlat
pushf
pop
push
arpl
jecxz
aas
and
mov
fisttpll
sub
xchg
sbb
mov
popf
mov
loop
mov
xchg
push
pop
add
mov
dec
push
leave
sub
stos
lds
arpl
pop
imul
and
imul
in
mov
pop
movsl
inc
das
push
inc
jecxz
fistps
iret
cmp
or
insl
sbb
push
pop
cmc
xchg
mov
add
pop
stos
jne
call
movsb
gs
inc
xchg
xchg
mov
fisubrl
hlt
movsl
jnp
in
add
lcall
sub
or
insb
jb
fwait
test
gs
cmp
mov
pop
jae
mov
pop
pop
cltd
dec
xlat
adc
add
movsb
stos
addr16
pop
sub
jo
cs
aad
pop
mov
lods
dec
jmp
mov
xor
inc
cmp
dec
mov
sbb
inc
xchg
stc
and
or
adc
rcll
pop
data16
pushf
inc
push
pop
inc
insb
out
push
add
and
icebp
and
neg
jae
out
cs
int
bnd
pop
jecxz
xchg
sub
out
or
shl
xor
sbb
out
mov
sbb
mov
lret
cmp
cmp
add
pop
ja
and
jae
int
popf
hlt
out
rcrb
movl
push
mov
pop
loopne
and
sti
negb
repz
repz
lahf
enter
cmpsl
sbb
nop
enter
lret
xchg
movb
imul
popa
in
push
xchg
enter
mov
adc
add
sbb
jmp
push
cmp
cli
push
aam
enter
push
cmpl
pusha
arpl
lret
ror
mov
xchg
popf
scas
sti
xchg
leave
lods
hlt
sti
std
insl
cmc
rclb
call
pop
ficompl
mov
sahf
cld
lds
es
push
mov
call
stos
mov
mov
dec
mov
test
mov
jp
xchg
mov
stos
cmpsl
push
push
dec
imul
mov
dec
mov
inc
test
lret
rorb
mov
clc
sbb
sub
xchg
das
fwait
inc
repnz
jl
ret
shrl
cltd
roll
ja
pop
fcompp
cld
jbe
call
jnp
add
dec
ss
mov
and
push
xor
rolb
adc
sub
inc
arpl
lret
andb
addr16
aaa
cli
lret
insl
mov
jg
dec
in
xor
ljmp
xchg
push
pop
adc
push
dec
lods
lahf
push
or
and
push
pop
out
sbb
in
fmull
xchg
popf
sbbb
pop
mov
and
and
cmp
adc
cmpl
orb
xlat
jae
hlt
adc
dec
rcrb
dec
and
sub
loop
or
push
and
pushf
mov
dec
xchg
sarb
pusha
outsl
inc
pop
lcall
dec
insl
dec
xchg
test
xchg
mov
adc
loopne
mov
lret
out
fildl
cwtl
cs
mov
faddl
and
cli
fsubrp
pop
aad
xchg
in
push
adc
lea
jl
nop
mov
pop
inc
int
inc
hlt
mov
gs
ljmp
in
inc
shlb
adc
inc
das
cld
lcall
push
push
mov
inc
fs
sbb
leave
ret
mov
js
jb
hlt
mov
mov
sbb
xor
mov
pop
nop
imul
insb
pop
popf
adc
adc
popa
dec
pushf
es
xor
jle
mov
imulb
mov
xor
ret
repnz
arpl
pop
int
pop
fiaddl
xchg
and
or
and
cmpsb
jmp
jnp
std
or
push
xchg
mov
callw
sahf
call
es
cli
insl
lea
push
dec
cmpb
mov
sub
in
outsl
sbb
sub
mov
jmp
adc
pop
dec
adc
je
jp
jg
or
xchg
fisubs
int3
enter
mov
arpl
mov
jns
pushf
movsl
ja
int
lea
sti
cmp
adc
adc
das
push
and
sbbb
inc
dec
push
aam
push
or
lret
pop
insb
scas
lret
inc
pop
fistps
lods
fisubrl
xor
fsubrl
cmp
leave
test
das
leave
and
lahf
loop
mov
sbb
add
or
in
sbb
jmp
xor
mov
add
clc
sub
jl
or
jl
cld
mov
jnp
add
mov
cs
in
mov
call
mov
mov
xchg
lods
cmpsl
aam
jb
adc
dec
mov
pop
xchg
rcll
adc
xchg
sbb
repz
pop
adc
mov
repnz
mov
cmc
mov
lea
dec
or
loopne
mov
jle
ds
popf
sahf
and
push
test
pop
cld
push
inc
pop
les
adc
stc
bnd
push
lods
subl
xor
das
sub
inc
fnstenv
sahf
ss
lock
aaa
out
data16
cmpsb
rolb
in
pop
dec
movsb
xchg
mov
mov
sbb
inc
lds
sub
jno
shlb
mov
push
push
xchg
adc
dec
pop
cmp
jb
or
push
in
push
outsl
mov
inc
dec
pop
adc
xchg
rol
movsb
fucom
cmpsb
mov
sahf
jge
xor
frstor
mov
es
repz
sub
or
sub
and
mov
push
shrb
cmp
pop
popf
pop
cmpsb
jne
subl
or
test
fldl
movsl
mov
xlat
mov
adc
dec
scas
cmp
imul
xor
mov
cmp
mov
adc
mull
dec
popa
adc
jmp
ffree
ret
push
xchg
popf
mov
inc
sbb
jnp
add
rol
lods
stos
nop
aad
or
xchg
ret
clc
add
je
fcmove
in
fdivr
and
fs
push
es
or
lds
subl
xchg
push
rcrb
mov
lods
mov
popa
push
mov
xor
xchg
addr16
and
mov
xchg
and
sbb
icebp
in
call
jno
outsb
jo
jmp
hlt
pop
lock
push
mov
scas
sub
add
jmp
int3
out
adc
xor
lret
lods
mov
pop
scas
xchg
mov
push
call
pop
cmp
jnp
cmpsb
mov
popa
add
add
mov
int
dec
mov
cs
inc
mov
xor
lds
iretw
mov
xchg
mov
mov
loopne
jmp
xor
pop
ficoml
testl
jae
dec
mov
or
or
shl
int3
out
lock
or
outsl
inc
cld
mov
jle
ja
mov
mov
xlat
and
jbe
scas
inc
jmp
cmp
movsb
call
ljmp
arpl
mov
jl
cld
test
test
fisttpl
mov
pop
push
cli
mov
xor
std
insl
mul
mov
jmp
push
add
xor
jl
rolb
push
push
jno
dec
push
stc
cmp
mov
andps
add
std
out
jg
or
outsb
ljmp
aaa
or
xchg
les
ret
or
and
jl
sahf
outsb
mov
testl
xor
mov
cmp
shr
jnp
neg
es
xlat
es
negb
in
and
fidivrs
push
pusha
xor
or
ret
jnp
fbstp
push
inc
fnstsw
sub
in
sbb
mov
push
dec
xor
jns
adc
mov
dec
jo
repnz
xlat
dec
sub
adc
or
jnp
sbb
int3
pop
sub
out
jae
mov
pusha
stos
gs
jno
pop
adc
jmp
inc
fsubs
repnz
fildl
insl
sub
push
lea
push
mov
push
push
fcompl
cmp
mov
nop
add
cmpl
adc
clc
jecxz
adc
fcomps
push
in
movsb
cmc
pop
mov
fcoms
outsl
cmpb
sbb
mov
lods
pushf
outsb
or
push
in
repz
jle
inc
popa
icebp
out
movsb
ret
push
cmp
cs
jne
mov
sbb
sbb
outsb
es
sub
aaa
dec
xor
pop
xchg
mov
xchg
xor
cmpsb
scas
daa
jecxz
sbb
xor
ds
fsubrs
lcall
jp
cmc
je
mov
ficoml
mov
jns
sub
daa
fldenv
xlat
stos
sub
mov
mov
pop
cwtl
sahf
push
mov
mov
daa
int3
jns
mov
in
mov
inc
inc
aaa
push
mov
loope
sub
out
add
or
xor
call
adc
xchg
jbe
out
fdivr
loope
into
push
add
into
fnstcw
mov
inc
jno
int3
setno
push
push
mov
jp
in
sub
mov
into
jl
lods
sbbl
sub
mov
notb
test
stc
or
leave
xchg
dec
or
push
test
in
cmp
or
mov
lahf
add
xor
es
jecxz
in
lahf
loop
inc
test
ds
push
push
or
pop
add
pop
pop
loopne
add
sbb
out
add
inc
xchg
lahf
add
mov
jge
or
aam
test
xchg
inc
jmp
repnz
pop
lcall
xor
sbb
pop
mov
dec
mov
or
xchg
clc
mov
mov
mov
sub
jg,pt
mov
mov
xor
adc
or
movsb
pushf
movsl
mov
jno
stos
dec
mov
jb
push
dec
and
mov
movsb
mov
cmp
mov
inc
cli
sub
mov
mov
push
add
fisttpll
scas
push
outsl
aaa
insl
mov
cwtl
bound
movsb
pop
push
imul
in
test
inc
loop
dec
and
ss
mov
xor
ficomps
mov
add
lcall
jecxz
xchg
lods
std
pop
jnp
or
jns
dec
stos
mov
mov
stos
jge
push
sub
add
imul
lds
inc
lock
pop
fstps
xlat
sbb
xchg
cmpsb
xor
dec
jmp
cltd
hlt
cmp
xchg
stos
and
ss
mov
xchg
jno
ret
inc
add
push
ss
jge
nop
jbe
les
push
bound
push
int
or
dec
fcmovbe
out
stos
cmpsb
add
out
cmp
mov
fwait
repnz
incl
out
cmc
popa
ror
arpl
out
dec
or
lea
xchg
daa
jle
or
add
dec
and
adc
lock
adc
jno
rorb
in
cld
fiaddl
or
dec
cmp
movsb
fdivs
mov
notb
imul
jnp
in
cmp
rclb
popf
bound
lods
fidivs
mov
lret
and
les
lods
push
or
test
lea
outsb
mov
dec
or
mov
nop
jns
push
push
rorl
fwait
mov
mov
inc
mov
mov
jne
inc
mov
jl
pop
inc
out
mov
sub
lret
jl
bound
jl
mov
jle
pop
xlat
in
arpl
jle
pop
push
xchg
into
faddl
dec
push
push
aaa
jns
cmp
mov
out
bound
xor
or
xorb
outsb
cmp
xsavec
mov
cltd
push
lahf
and
xor
insb
xlat
xchg
lods
mov
sub
mov
add
or
add
fsubrl
rcrl
ror
gs
cmp
inc
inc
add
enter
clc
cmpsl
add
dec
push
lods
enter
mov
cmp
inc
loopne
insl
mov
jns
fstps
fldt
hlt
mov
fisubs
sub
out
inc
std
repz
dec
cmpl
out
lahf
push
cmp
jecxz
inc
outsb
jo
test
mov
xlat
push
jae
repnz
fiaddl
loopne
or
xchg
push
sbb
testb
and
add
jl
clc
sub
fistps
adc
xor
bound
test
hlt
xchg
int3
loop
adc
aad
rep
sub
gs
dec
shl
scas
div
es
cmp
add
fidivrl
js
mov
and
dec
mov
lock
into
out
pop
dec
sbb
nop
add
adc
mov
xor
pop
or
cld
scas
adc
ss
push
xorb
fwait
jecxz
dec
push
jge
lcall
enter
je
mov
xlat
jno
imul
adc
cwtl
aas
into
xchg
lods
les
and
fiaddl
jl
xchg
jl
outsb
arpl
sub
sbb
movsb
shl
and
inc
orl
jl
mov
roll
mov
jns
lods
inc
imulb
mov
cmpsl
nop
frstor
cmp
rol
dec
test
inc
cmpsb
jecxz
idivl
repz
aaa
xor
inc
inc
sbb
dec
lret
scas
pop
imul
es
xlat
fists
in
in
lods
jle
mov
add
rcrb
mov
rcll
sbb
fs
arpl
daa
adc
mov
fcompl
enter
aad
ret
lahf
inc
orb
jne
ljmp
and
mov
hlt
mov
loop
push
or
hlt
xchg
lea
testb
out
jp
mov
sbb
hlt
pop
pop
inc
mov
jl
imul
or
sbb
xchg
ret
dec
mov
hlt
into
mov
filds
mov
les
icebp
shll
sub
sub
stc
rclb
rcll
repz
xchg
lcall
sub
cmp
out
aas
cmp
sub
imul
into
xchg
xchg
icebp
xor
add
int3
lods
inc
shll
rcll
daa
xchg
insl
call
cltd
test
add
loope
xchg
je
inc
fs
movsl
movsb
je
pop
jle
sbb
sahf
jmp
int3
repnz
mov
iret
mov
call
xchg
mov
data16
int
ficoml
push
xor
push
sbb
mov
mov
fsubrl
pusha
xor
enter
adc
rorl
push
push
hlt
lret
outsl
add
aaa
nop
test
std
scas
lds
into
sbb
pop
and
lea
shll
cli
lods
mov
pop
xor
jl
lcall
cmp
adc
dec
stc
lods
adc
notb
jg
pop
out
popf
lods
inc
mov
cmp
ljmp
data16
icebp
fdivl
push
sbb
push
cmc
and
jo
jae
enter
add
jp
gs
cmp
ret
mov
out
add
jg
xlat
sub
or
jbe
pop
dec
sub
xchg
je
fwait
repz
mov
ret
pushf
dec
mov
inc
fsubl
jge
stos
push
movsb
movsl
lret
dec
dec
adc
icebp
aad
cmp
fs
mov
outsb
decl
inc
scas
mov
pusha
imul
adc
and
repz
loope
inc
std
sti
mov
xor
das
scas
push
clc
sbb
scas
add
mov
add
pop
push
jns
adc
lock
cli
lret
adc
xchg
pop
jmp
push
jmp
or
xchg
stos
xchg
pusha
pop
lock
es
add
xchg
aaa
lret
mov
fbstp
data16
fsubrl
repz
jle
andb
imul
pusha
ret
iret
stos
fidivrl
int
adc
sbb
sub
movsl
out
sbb
pop
mov
cwtl
add
sbb
scas
test
and
adc
inc
in
stos
inc
rcrb
adc
leave
cmpb
jmp
pop
xchg
int3
ds
jne
push
ljmp
icebp
mov
pop
mov
inc
jnp
test
clc
in
in
push
mov
fisubs
fidivs
sti
add
cs
push
cltd
add
cld
xor
data16
xor
pop
dec
mov
jno
push
movsl
aad
pop
movsl
outsb
rorb
push
das
insl
sbb
ja
shll
push
cltd
dec
movsl
js
in
cld
mov
xor
int3
clc
adc
adc
mov
push
fidivrl
rcrl
pop
jbe
sbb
mov
mov
sub
test
mov
xchg
pop
js
icebp
push
cwtl
imul
dec
pop
setp
push
sub
loope
xchg
jnp
enter
outsb
lods
out
lea
shr
or
pop
jmp
adc
push
sub
dec
add
test
sbb
push
or
jg
in
jl
add
mov
xor
stos
xorb
rclb
lods
jge
out
neg
cwtl
add
and
mov
cwtl
xor
cli
imul
stos
pusha
aam
je,pt
in
notb
lret
mov
les
mov
and
xor
rclb
cmpl
inc
je
ja
sub
das
cmp
test
add
pop
pop
inc
mov
sub
push
or
and
movsb
xchg
repz
sti
sub
jmp
add
das
mov
mov
sub
insl
lods
ss
pushf
stos
aam
mov
push
dec
mov
cmc
psubw
cld
sub
icebp
xchg
jg
xchg
pusha
repnz
and
daa
add
in
movsl
or
mov
lret
inc
push
outsl
push
xchg
cwtl
lcall
lock
xor
push
sbb
dec
dec
lock
push
fisttpl
ret
aas
aam
cmp
cmc
sub
stc
pop
test
mov
cmpsl
mov
clc
jmp
cli
fcmovbe
ljmp
add
js
jo
sahf
pop
fwait
push
dec
jge
popa
pop
std
sub
inc
hlt
negl
mov
fldl
je
mov
xchg
mov
jl
lock
pop
in
adc
push
in
mov
ret
fcmovnb
ret
mov
leave
sbb
rcrb
hlt
mov
push
int3
rclb
jp
sbb
mov
adc
cltd
jmp
sbbb
rorb
in
iret
sub
pop
js
adc
push
stos
out
clc
mov
jl
jl
adc
pop
das
mov
ljmp
and
sub
lods
cmc
dec
sbb
push
push
sub
int3
xchg
push
cmp
sub
jns
cmp
mov
jmp
xor
push
or
push
sbb
mov
lock
dec
xor
test
dec
rclb
jecxz
pop
cmc
mov
lods
xchg
int3
mov
repnz
xchg
xorl
in
fstpl
fcoms
or
repnz
add
push
and
je
hlt
adc
gs
ljmp
dec
repz
add
jbe
lock
inc
dec
mov
xchg
xor
lcall
test
cmpsl
pop
sub
or
leave
pop
push
pop
into
leave
or
mov
fadds
xchg
fnstcw
mov
fstpl
out
adc
jns
into
nop
popf
sbb
pop
xlat
test
aam
scas
test
idivb
addr16
cwtl
jb
push
movsl
push
xchg
mov
xor
inc
aaa
mov
sarl
jnp
push
push
mov
cltd
jns
mov
popf
inc
xlat
mov
mov
daa
add
push
sub
jns
cmc
inc
xor
and
adc
insl
mov
dec
imul
xchg
pusha
mov
dec
jp
inc
in
push
shrb
out
xorb
pop
pop
popf
icebp
out
xchg
push
dec
out
xchg
mov
mov
les
jp
pop
sarb
je
sarl
mov
mov
call
push
and
stc
mov
rclb
outsb
pop
and
rcrb
dec
xor
cld
mov
xlat
adc
hlt
xchg
push
add
mov
mov
test
cmp
lods
dec
pop
jns
popf
dec
xchg
sub
mov
and
xor
lods
mov
mov
rclb
sub
arpl
fstps
outsb
es
pop
push
je
leave
stos
in
lcall
addb
sbb
add
pop
ret
in
mov
mov
jg
mov
sbb
fwait
stc
xchg
psrld
rolb
clc
pusha
push
leave
test
sarl
pop
xchg
push
cmp
mov
movsb
or
sub
pushf
scas
test
lret
fisttpl
lret
pop
add
xchg
mov
push
mov
push
cmpsl
pusha
cmc
pop
adc
sbb
cmp
scas
dec
scas
shlb
push
hlt
and
fstp
das
not
ss
jecxz
lret
testb
lods
notl
hlt
clc
fucomp
jge
mov
lods
insb
add
or
dec
push
sbb
sub
icebp
repz
ret
jmp
push
jnp
add
mov
loopne
or
repnz
xchg
pushfw
subb
or
mov
cwtl
sub
int
dec
dec
push
shl
cld
jle
inc
push
cmp
add
data16
xchg
cmpsl
shl
xchg
lret
cmc
mov
test
dec
sub
xor
je
push
mov
sbb
lds
add
xchg
out
loop
stos
sub
or
fisttpll
adc
mov
dec
fmull
shrb
out
aam
mov
inc
ja
pop
movb
adc
rcr
std
insl
mov
cmpsb
jmp
lcall
adc
filds
mov
lods
xor
imul
mov
dec
dec
push
push
lcall
imull
mov
insl
jecxz
ret
mov
push
push
or
sbb
mov
ret
mov
repz
in
or
adc
mov
mov
dec
rol
or
cmp
xchg
ss
jnp
in
xor
ja
adc
dec
xor
mov
xchg
aad
ret
dec
mov
ret
and
ret
mov
sbb
inc
adc
repz
testl
lret
call
push
add
cltd
cmpsb
lcall
push
test
pop
out
dec
or
in
fstpt
inc
or
idivb
out
movsl
shlb
jb
jecxz
cmpsb
mov
xorl
sub
push
fbld
ss
hlt
lret
cmpsl
dec
in
pop
sahf
push
cmp
push
jno
rcrb
scas
mov
aad
sti
add
and
hlt
iret
or
in
xor
imul
mov
cmp
in
mov
orl
or
mov
xor
push
xor
sbb
aaa
cmp
jecxz
push
in
fnstsw
mov
sbb
sub
jecxz
cmp
jb
sub
cmc
mov
mov
sbb
xchg
xlat
adc
arpl
jge
jmp
int
mov
popf
dec
cmp
xchg
pop
push
mov
out
or
mov
mov
jle
mov
fimuls
lahf
test
movsb
sahf
or
sti
test
and
push
cmp
mov
mov
or
in
iret
rcr
leave
rcrl
stos
mov
xor
jmp
sbb
mov
mov
and
lods
enter
inc
add
adc
dec
cmp
cwtl
pop
stos
notl
sbb
lea
pop
and
or
insb
push
inc
xor
das
inc
mov
pop
push
gs
mov
and
sub
dec
lahf
mov
and
xlat
or
outsb
xchg
in
cmp
pop
pop
xchg
arpl
jecxz
in
mov
clc
add
enter
in
pause
in
fcomps
mov
jo
xor
sbb
sbb
aad
jle
test
jg
clc
ficoml
inc
sub
and
pop
mov
imul
fucomi
or
push
mov
pop
inc
push
je
adc
cmpsb
call
or
not
mov
pop
mov
add
jb
psubusb
xor
rol
fsub
pop
xor
faddp
mov
rcl
mov
test
in
fisttps
jb
dec
fistl
stc
sbb
xor
into
leave
fwait
adc
push
stc
outsl
pop
or
cmp
stos
adc
icebp
aaa
sub
lds
lods
dec
sub
pop
push
cmpsb
pop
fisttps
out
aad
pushf
jl
push
psraw
push
call
push
xor
pop
dec
jo
lods
push
or
xchg
adc
sbb
stos
repnz
sub
mov
mov
popa
negl
sub
jl
fisttps
in
sahf
movsb
sbb
cli
sbb
sub
loope
lds
in
pop
xlat
aas
nop
push
shlb
push
cmp
mov
das
jge
jb
lds
xor
or
rdmsr
pop
dec
sub
inc
or
and
push
ds
push
in
aad
mov
pop
add
push
push
enter
jbe
cmpsl
cli
insl
xlat
repz
sarl
das
insl
jb
imul
dec
cli
add
inc
mov
mov
pop
xchg
arpl
mov
cmp
pop
or
mov
imul
lcall
rcll
sbb
into
jecxz
inc
sbb
lods
jns
movsb
fistpl
jbe
or
sarl
cmp
inc
mov
shll
movsb
fsubrl
cmp
fcomi
pop
adc
lock
fsubl
loopne
sbb
aaa
loop
inc
ja
cmp
jecxz
adc
jg
inc
int3
pop
movsl
jbe
sbb
add
test
push
aas
mov
jae
sub
jne
or
shl
mov
adc
sbb
jae
roll
jge
dec
insb
shlw
add
dec
arpl
sub
aam
and
cwtl
ret
fiadds
mov
loop
movsl
iret
jge
inc
popa
inc
cmpsb
nop
add
sti
insb
xor
inc
sbb
mov
cmp
dec
cmpsl
idiv
pop
push
jbe
sub
ljmp
faddl
mov
shll
mov
test
stc
in
jmp
jmp
pop
xchg
cmp
int
insb
mov
jne
scas
loopne
mov
mov
shr
pop
ret
andl
movsl
dec
hlt
cs
mov
shrb
jae
mov
shlb
aas
mov
mov
sahf
outsb
lds
pop
add
dec
add
add
mov
roll
test
add
out
jae
add
mov
dec
mov
mov
mov
movsb
gs
mov
fwait
js
lret
inc
ret
test
dec
out
repnz
outsb
push
stc
push
sbb
push
dec
jp
jmp
negb
jg
pusha
dec
push
loopne
fucom
nop
cmc
mov
and
xchg
iret
es
aam
dec
cmp
adc
dec
into
cli
inc
call
arpl
notl
sub
dec
jno
test
mov
push
lret
jae
mov
shr
cmp
rcrb
pop
fldenv
lock
inc
cli
fs
stos
add
inc
sub
mov
jle
adc
outsl
shr
mov
rcrl
xchg
mov
ffree
jo
fidivrs
insl
imul
repnz
addl
jns
add
fidivrl
jo
xor
cmpsl
cmp
daa
xchg
fcomps
inc
or
cli
cmc
cltd
pop
xchg
testb
push
aad
and
push
repz
fistpll
pushf
lock
test
sti
mov
push
loope
mov
cmp
cmp
xor
in
pushf
add
loop
lret
ficompl
jns
mov
xchg
pop
inc
push
jmp
ljmp
push
fwait
mov
cmpsl
xor
fwait
ret
inc
movsb
and
lea
pop
cld
scas
push
mov
test
mov
jge
jbe
sbb
loop
mov
or
xor
lcall
inc
jmp
push
or
xchg
push
mov
stos
mov
in
add
xor
insb
xor
or
lcall
cmp
sbb
arpl
in
ja
insb
cmp
test
xchg
jo
cmpsl
cmpl
ds
je
addr16
shl
ret
clc
lock
je
in
andb
daa
fcmovne
pop
push
out
and
je
fcoml
stc
dec
sub
cmp
ret
mov
out
fsubrl
test
sbb
add
outsl
iret
lods
in
dec
and
pop
adc
adc
mov
clc
jge
pop
dec
mov
aaa
push
test
pusha
xchg
loop
dec
inc
add
aam
test
mov
pop
movsl
adc
xchg
jmp
push
mov
decl
and
test
xor
lret
cmp
cli
loop
and
out
out
mov
or
jge
jo
add
ret
je
and
cs
push
or
lcall
cmp
mov
ja
pusha
sbb
ljmp
test
iret
mov
sub
mov
jbe
mov
inc
gs
mov
outsb
jg
popa
cmp
shlb
cmpsb
pop
inc
lock
ret
outsb
stos
pusha
pop
mov
movsl
addr16
and
dec
or
addl
sbb
mov
push
xor
test
arpl
jo
ret
shr
pop
shrb
push
ja
cs
sbb
mov
xchg
stos
cltd
adcb
sub
scas
xlat
mov
dec
popa
mov
jae
int
push
xor
in
jg
jb
in
imul
pop
xor
cmpl
pop
xchg
inc
mov
ret
or
xchg
sbb
lret
nop
pop
clc
push
stc
fnstenv
test
cmp
movsl
repnz
xchg
jnp
xchg
mov
sub
adc
test
loope
gs
mov
pop
xchg
sub
loopne
add
popf
jae
pop
mov
pop
jp
pop
orl
out
in
push
xor
js
push
js
js
mov
dec
mov
movsb
cmp
xchg
sti
lret
push
xchg
cmp
xor
in
sbb
mov
sbb
lock
adc
sbb
jne
das
lret
scas
xchg
or
fisubrs
push
imul
cli
or
sbb
or
data16
sub
aaa
fwait
sbb
das
push
arpl
xchg
dec
arpl
shll
push
testl
jecxz
outsl
xor
mov
xchg
or
xchg
rorl
fwait
mov
andl
inc
inc
call
sti
or
jle
mov
lds
or
rorl
xor
dec
jge
in
mov
imul
jae
aad
js
jnp
push
mov
xchg
push
jo
sahf
adc
ljmp
daa
mov
iret
mov
or
push
loope
repnz
xor
jne
rcrl
mov
sub
jge
mov
fidivrs
int3
sub
and
cld
movsb
sub
xchg
or
shlb
out
shll
sub
xchg
addl
push
xchg
inc
in
cmpsb
push
sub
inc
xor
mov
cmp
mov
aad
daa
int3
aaa
push
hlt
lret
mov
xor
stc
mov
jle
rcrb
ljmp
dec
int3
push
stc
push
jg
idivb
mov
cmpsl
cmp
bound
or
insl
mov
mov
add
mov
popf
cmp
loope
stos
test
lea
jmp
in
add
rorl
scas
xchg
fwait
xor
ret
or
xlat
lock
ret
cmpsb
dec
sbb
xlat
in
mov
mov
dec
fimuls
inc
mov
push
and
push
es
xchg
and
js
xlat
idiv
add
arpl
jp
loopne
cmpsl
mov
clc
sbb
jbe
lret
cmpl
pop
xchg
inc
cli
push
cmpsl
dec
sub
push
ljmp
and
cmpsl
xorl
cmp
sbb
inc
xchg
in
add
stos
movl
pop
add
test
pop
add
add
fs
bound
mov
mov
dec
in
lret
add
jmp
mulb
cmp
push
cld
push
xchg
hlt
jns
cmp
paddusw
pop
pop
rcll
jns
sbb
test
xor
lret
mov
call
and
pushf
out
pop
push
pop
mov
lods
cld
loope
push
andb
xchg
add
mov
mov
jbe
dec
imul
sub
loopne
adc
imul
jmp
arpl
int
pusha
lods
dec
mov
int3
and
sub
mov
mov
dec
mov
repz
sub
cmpsb
push
loopne
filds
and
pop
and
je
xchg
imul
mov
mov
push
mov
dec
inc
rorl
or
arpl
es
sbb
adc
ja
sti
orb
call
cmc
int
jmp
push
std
adc
mov
push
jg
sahf
xchg
pop
rcrb
test
outsb
or
push
inc
jmp
mov
cmp
roll
sub
jp
pop
or
jecxz
jg
dec
cli
push
dec
adc
mov
daa
push
pop
jle
fdivs
jnp
out
cmpsb
inc
mov
ficoms
test
jbe
cmp
lds
adc
mov
pop
push
test
jl
push
pop
pop
in
dec
outsl
ja
xor
add
lea
shll
clc
in
jmp
jno
mull
mov
xchg
inc
std
pop
js
iret
xor
in
incl
not
jns
cmp
jb
xchg
and
adc
mov
or
xchg
and
lret
aas
mov
jle
in
mov
mov
and
ret
imul
mov
inc
cmp
mov
sbbb
je
imulb
sahf
sbb
shrl
shll
mov
scas
repnz
mull
enter
mov
xchg
or
lahf
mov
xor
push
push
jae
jno
adc
xor
ret
sti
leave
out
mov
cmpsl
hlt
insl
mov
das
fs
cmp
es
lock
sub
mov
xchg
scas
adc
outsl
lds
sarb
lret
subb
in
sbb
shrd
lret
test
sub
repnz
in
lret
jbe
sub
out
xchg
js
testl
stos
push
pushf
mov
mov
loop
andb
imulb
jns
push
and
cli
jne
idiv
adc
call
in
jl
out
outsb
xchg
adc
mov
mov
out
mov
into
adcl
inc
cmc
and
push
cld
xchg
or
lret
mov
fistps
mov
out
insb
fstl
popf
ja,pn
mov
rcrl
cmp
test
and
rclb
mov
daa
scas
mov
sbb
out
push
xor
jge
push
push
lea
xchg
mov
inc
adc
cli
stc
lods
jmp
xchg
jp
lods
ret
fdivr
outsb
mov
outsl
xchg
imulb
ljmp
dec
adc
mov
xor
imul
adc
adc
jno
mov
push
fstpl
lods
or
int3
sahf
loop
xchg
xchg
lock
mov
push
pop
insb
int3
jl
xchg
mov
xchg
ret
mov
xor
dec
ljmp
inc
xor
dec
test
orb
mov
pop
aam
in
cld
imul
stos
movsl
jge
aad
pusha
xchg
mov
sub
int3
or
scas
add
dec
ret
adc
rcll
fsubrp
in
test
stos
mov
les
out
sbb
lea
sbb
jb
call
sti
iret
push
jbe
pop
inc
sub
in
jp
pop
mov
imul
jae
xor
cmp
pop
xchg
clc
or
test
or
das
or
aaa
mov
mov
stc
loopne
fmull
jb
cmp
cmp
cs
hlt
mov
lea
les
sbb
xchg
jbe
mov
add
repnz
ret
lea
cmp
xchg
dec
shlb
bound
mov
fdiv
inc
insb
push
cli
mov
push
push
mov
cmp
imul
add
sbb
fdivrl
xor
cmp
add
xor
mov
lahf
and
sbb
shll
push
dec
mov
test
gs
pusha
imul
mov
outsl
jge
fistps
jl
adc
adc
xor
lret
out
fsubrs
int3
inc
outsl
mov
leave
mov
mov
leave
push
insl
xor
jge
mov
pop
mov
pop
or
xor
jns
test
or
mov
mulb
sub
mov
jl
ficomps
cmpsl
jle
add
mov
mov
inc
xor
shl
xchg
in
pop
sub
sub
push
mov
mov
xchg
outsb
xor
mov
jno
inc
xor
fcoml
mov
or
add
outsb
cwtl
push
rolb
mov
inc
push
jmp
cmp
push
icebp
cmp
xchg
clc
loope
mov
dec
cmpsl
test
jno
cmp
jnp
or
dec
sub
cmpsl
xchg
add
clc
sub
jo
aas
cmp
xchg
cwtl
fcomps
xchg
test
out
xor
jl
jns,pn
sub
xor
jns
daa
or
and
and
pushf
stc
jns
bound
arpl
cmp
push
shrl
push
out
in
add
out
mov
popf
out
out
add
jp
jno
faddl
lahf
fs
pop
mov
fisttpll
sub
repnz
inc
std
je
js
sar
or
xor
lret
xchg
mov
stos
fiaddl
pop
push
enter
rorb
jbe
mov
and
cmp
fadd
adc
mov
lret
dec
int3
or
arpl
dec
mov
cmp
xchg
sub
inc
call
jns
popa
pop
cmp
call
mov
adc
sti
jns
push
iret
and
jmp
in
andb
add
hlt
cmp
jb
int3
jne
sbb
push
sub
add
stc
jecxz
push
lods
insl
adc
out
dec
rorl
in
sub
cmc
insb
mov
in
hlt
jl
xlat
bound
test
shlb
push
push
into
ret
and
loopne
and
jmp
and
enter
nop
push
mov
pop
clc
imul
mov
xor
push
bswap
lcall
cmp
fs
jge
or
icebp
dec
flds
loope
cmp
mov
sbb
mov
lcall
dec
pop
push
cmc
xor
or
push
mov
in
jg
or
sahf
stc
xor
sub
sar
leave
push
arpl
insb
aam
pop
inc
inc
stos
dec
lret
aas
mov
in
hlt
xorl
xchg
int
push
out
test
jno
orb
adc
je
xlat
xlat
add
jg
call
pop
scas
imul
jne
mov
adc
ja
pop
addr16
bnd
mov
push
xor
pop
test
stos
cmp
sub
cmp
lods
mov
jmp
mov
mov
and
fmuls
push
pop
pop
add
ja
dec
push
sbb
cmp
or
sub
movsl
daa
imul
dec
notb
nop
aad
cmp
pop
adc
ror
jns
aaa
pusha
ss
sub
js
or
enter
cmc
jnp
mov
loope
add
das
xchg
xor
mov
cld
fwait
adc
out
divb
lea
mov
mov
cmp
push
aad
push
orps
les
sbb
mov
add
pushf
push
dec
mov
push
jge
jns
xor
xrelease
ret
repnz
ss
jecxz
daa
in
or
ds
lock
addr16
test
stos
sbb
pop
xchg
outsb
hlt
shrb
push
bound
xchg
xchg
out
mov
cmp
fdivl
mov
cvtpi2ps
mov
jle
and
add
lods
jecxz
arpl
mov
mov
xor
sub
lret
lods
xchg
cmpl
loop
jecxz
cmc
push
pop
mov
in
pop
lret
jno
lock
adc
test
cmp
adc
test
aam
pop
add
cmc
jecxz
add
int
das
sub
int3
xchg
int
push
sbb
in
cli
or
outsb
pop
dec
loopne
jbe
ret
lret
lock
loope
inc
xchg
jbe
rolb
push
jmp
dec
arpl
sub
push
jbe
sti
push
pushf
xchg
and
xor
nop
cmp
push
fisubrl
lcall
pop
jnp
adc
mov
xchg
imul
cmp
mov
idiv
add
in
movsl
cs
cmp
sub
push
and
ficoms
inc
push
into
xor
jb
jecxz
add
stos
dec
loopne
mov
cli
std
mov
shl
or
ss
adc
lds
sub
fisttps
inc
divl
sti
notb
xor
and
mov
icebp
sbbb
aam
inc
fisubs
cmp
sub
xor
mov
mov
ljmp
sbb
adc
dec
or
xor
andb
sub
aam
imul
xor
ret
adc
sqrtps
aas
mov
mov
lcall
and
ss
xor
fisubs
pop
or
mov
add
andb
pop
test
fistl
fisubrs
icebp
scas
movsb
test
or
sub
sti
push
sub
lcall
fwait
jge
mov
push
loop
les
fwait
and
in
insb
lods
pop
lret
inc
popf
mov
jo
push
add
je
aam
mov
push
aaa
and
inc
or
dec
push
jne
add
addr16
adc
cmp
add
xchg
sub
mov
orb
cld
loopne
or
xor
pop
mov
inc
lahf
xchg
sbb
pop
rorb
cmp
stos
xchg
cmp
push
movsl
jl
gs
imul
loop
xor
cli
in
dec
movsb
mov
subb
push
and
bound
mov
es
sub
call
icebp
lock
jb
test
push
mov
mov
aaa
pop
gs
fcmovnbe
add
and
jno
cmp
mov
psadbw
lds
cmpsb
ficompl
xor
xchg
fs
sub
mov
jp
push
jl
adc
ja
xchg
scas
jne
std
in
cmpsb
cmpsb
xchg
call
loopne
adc
jmp
mov
adc
add
cli
xchg
dec
mov
jp
mov
sub
pushl
adc
sbb
pop
stc
int
loop
movsb
shrl
lret
nop
nop
enter
sub
mov
push
xor
pushf
roll
xchg
mov
jo
pop
inc
adc
mov
push
xchg
imul
sarl
push
jg
jecxz
nop
xchg
xchg
std
mov
jecxz
jge
ljmp
mov
nop
inc
jp
pop
jns
ss
out
inc
pop
xchg
jns
rorl
xor
repnz
add
adc
push
xor
xchg
mov
and
or
scas
xor
sbb
fnstcw
je
popf
lret
es
inc
mov
jmp
pop
jg
stc
and
sub
mov
in
rcrb
fs
push
jne
cmp
pop
aam
pusha
pop
rolb
sub
fstpl
stos
lea
divl
xchg
mov
ret
js
call
int3
aam
cmp
popf
cwtl
insl
adc
sbb
xor
add
test
fistps
out
rcrb
int
test
jae
pop
std
fsubrl
inc
scas
xchg
rcll
jmp
cmpl
and
fisubl
pop
fnstsw
sbb
mov
fisubl
xchg
mov
push
push
inc
mov
into
lret
mov
sbbb
imul
xlat
cld
xor
nop
imul
psrlq
incb
std
mov
loop
icebp
in
cs
add
insb
loope
mov
out
dec
mov
push
jbe
movsb
lock
add
jno
das
rcrb
sbb
xor
mov
rcl
cli
es
cs
dec
mov
cmpsl
fildll
jo
add
shl
js
sbb
jl
pop
ja
adc
lds
mov
scas
ret
inc
xor
jl
jae
mov
sub
shlb
jle
mov
std
popa
pop
mov
sbb
jge
lret
adcb
test
dec
imul
push
out
mov
mov
sbb
popf
cmp
and
daa
pusha
out
xchg
jmp
mov
cs
cmc
incb
cmp
icebp
mov
xchg
mov
das
repnz
jecxz
inc
adc
mov
push
and
lods
cmpsb
or
jle
cmp
mov
inc
pop
clc
pop
mov
inc
xchg
dec
mov
shrb
xor
shl
stos
or
jns
sub
in
repnz
mov
sbb
ja
mov
xchg
sbb
clc
jo
cmp
push
mov
sarl
inc
jns
lods
push
cmp
mov
sahf
in
mov
repz
fadds
push
lods
adc
clc
into
gs
mov
xlat
push
add
mov
ss
jne
add
xorl
and
xchg
popf
pavgw
and
cmpsb
dec
insl
loopne
pop
in
inc
inc
jnp
insl
jge
insl
mov
adc
fimuls
loop
push
xchg
jmp
mov
shlb
adc
dec
cwtl
loopne
or
loopne
sbb
pop
sub
xor
pop
mov
xlat
xchg
repnz
push
testl
mov
mov
fdivs
and
jecxz
test
mov
adc
cmpsb
mov
sbbl
xlat
dec
inc
mov
cmp
mov
dec
jne
shrb
xchg
js
sahf
popa
hlt
lea
jp
dec
push
xor
data16
fnstsw
mov
jno
stos
pushf
and
rclb
loop
lret
mov
pop
jne
inc
outsl
adc
push
and
fcoms
push
imul
dec
sub
and
cli
fs
sub
ret
fcoml
out
testb
cs
xchg
pusha
iret
pop
lret
daa
sub
sbb
jnp
test
xor
mov
or
lret
je
aas
jle
rcll
xor
mov
adc
sub
cltd
push
into
sbb
adcl
xchg
ret
je
sbb
je
cmpl
sbb
cmp
popa
in
dec
sbb
mov
addr16
jae
mov
lcall
inc
cmp
xchg
xor
jmp
mov
jle
xor
or
insb
mov
inc
or
push
andb
imul
loopne
fstpt
xchg
lret
pop
adc
mov
lea
iret
leave
test
mov
inc
ror
in
cmp
or
jo
pop
dec
cli
mov
aam
xchg
push
mov
les
pop
or
mov
jne
and
xor
push
fwait
sbb
xchg
mov
jne
leave
inc
jo
pop
and
and
sub
ss
xor
mov
xchg
jg
inc
cmpsb
xorl
test
lret
inc
fisttps
mov
dec
xchg
add
lods
add
jae
stc
iret
pop
bound
outsl
mov
cmp
iret
mov
mov
jb
mov
or
bound
fcomps
sbb
lods
stos
fstl
out
scas
sahf
stos
inc
inc
sbb
movsl
jne
or
push
push
jl
adc
jge
add
sub
push
push
enter
fwait
ret
in
push
rclb
in
lock
cwtl
mov
hlt
pop
mov
pop
and
test
jbe
xor
or
test
shrb
push
fsub
inc
mov
push
mov
testl
mov
out
mov
push
pop
adc
aaa
sbb
stc
scas
xchg
fbld
fs
add
in
xchg
movsb
repz
push
aaa
pop
loop
mov
lcall
out
mov
adc
jb
loope
stos
mov
xchg
dec
scas
arpl
pop
pop
stc
test
sub
mov
or
or
dec
fld
pop
dec
sub
in
jg
mov
xor
xchg
lcall
and
test
fbstp
inc
loopne
cmpl
test
int
or
sbb
movsb
cld
jns
repnz
outsb
sub
jl
into
jg
xor
pop
es
cmpsl
jmp
sub
push
scas
xor
xor
int
stc
push
xchg
mov
cmp
cli
add
int
stos
mov
in
adc
lret
cmc
xchg
add
lods
xchg
mov
in
adc
add
cmp
int
sbb
adc
or
popa
mov
xchg
push
xchg
loop
push
adc
or
cmp
leave
cli
dec
mov
scas
mov
aaa
push
subl
or
mov
push
sub
outsl
pop
jns
inc
loopne
aas
and
dec
xchg
iret
jnp
inc
sbb
nop
or
push
sub
test
ljmp
adc
or
mov
pushf
push
add
sub
xchg
lods
lea
ja
rorb
js
xchg
pushf
in
test
push
or
mov
xor
scas
movaps
push
fidivrs
or
add
enter
push
orl
mov
fists
in
ret
mov
mov
pop
xchg
jae
or
mov
push
dec
popf
sub
outsb
sti
test
cmc
hlt
pop
std
stos
sti
mov
in
insb
mov
outsb
mov
fwait
xorl
fsubrs
les
inc
jg
cmc
xchg
jne
adc
icebp
das
and
sbbb
xlat
out
movsw
ffreep
sarb
sahf
popa
add
hlt
push
add
jne
dec
push
jno
mov
aas
in
popf
inc
out
cmp
rcrl
xchg
jae
pop
ja
xchg
sbb
adc
push
pop
arpl
inc
out
daa
dec
mov
roll
dec
arpl
fidivrs
pop
xor
rolb
mov
fildl
sub
add
or
add
pop
lock
insb
lock
xor
add
add
add
lock
add
add
decl
add
lock
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
lcall
add
add
mov
stos
push
or
cmc
cmp
movsb
ja
mov
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
push
cmp
cmp
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
repz
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
or
into
outsb
mov
add
fmuls
pop
adc
sbb
out
repz
icebp
jae
pop
mov
rolb
cmpxchg
ret
mov
andb
adc
cli
adc
sbb
add
popa
cmpsb
or
or
xchg
dec
jne
ss
pop
or
adc
adc
adc
punpckhwd
sbb
lock
xchg
xchg
sbb
or
push
push
or
sub
lcall
insl
std
add
mov
sahf
adc
push
andb
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
repz
ret
imul
pop
add
pop
push
call
mov
cmp
subl
and
xor
int3
in
mov
ret
mov
shlb
mov
inc
push
and
jecxz
inc
sub
movsb
sub
add
push
push
je
adc
jnp
push
leave
hlt
add
popf
rorl
fwait
mov
mov
mov
mov
sbb
adc
sub
nop
sub
jmp
fs
pusha
sbb
xchg
js
xor
jp
push
xor
dec
pop
shll
push
out
fcompl
outsb
bound
imul
mov
shl
out
mov
inc
sbb
mov
mov
test
push
or
in
and
or
or
xor
cwtl
dec
jmp
jmp
inc
repnz
xor
pop
pusha
xchg
mov
pop
jno,pn
das
xor
add
mov
adc
push
mov
leave
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
or
ss
dec
jmp
xchg
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
jge
add
or
or
jmp
shr
add
cmp
mov
or
lea
mov
xchg
dec
sbb
inc
mov
cltd
jge
daa
test
adc
orl
sbb
pusha
jb
mov
add
or
add
lea
xchg
inc
imul
in
mov
lock
jno
hlt
add
fidivs
inc
or
push
lret
add
mov
dec
ds
mov
mov
sbbl
cmp
mov
xor
xchg
xor
inc
xchg
adc
out
push
or
push
pop
idiv
ljmp
adc
xchg
or
mul
jge
inc
out
pushf
test
xchg
sub
nop
in
add
push
call
xchg
push
sbb
cld
cld
jle
push
mov
or
outsb
mov
push
dec
mov
pop
pop
mov
jo
stos
dec
adcb
loopne
stos
add
imull
and
push
adc
nop
movsl
push
lcall
mov
stos
add
push
add
and
push
sarb
out
scas
or
or
movsl
imul
xor
lcall
adc
mov
outsb
push
adc
mov
scas
cmp
stc
add
add
xor
or
push
loop
add
shl
lea
inc
cld
add
cmp
lock
fimuls
aaa
adc
add
lea
lods
stos
add
cmpl
add
jae
test
mov
addl
inc
push
cli
rep
fistps
jb
xor
add
popa
repz
or
call
add
mov
mov
inc
inc
dec
push
jnp
xchg
aaa
and
push
call
jb
sbb
ss
ror
inc
mov
push
dec
pop
nop
dec
add
xor
leave
xor
movsb
test
or
inc
inc
push
or
je
jnp
xchg
stos
sbb
lea
mov
test
or
loope
xchg
jg
sbb
mov
aas
pop
mov
sbb
cmp
inc
mov
aas
shr
sub
or
stos
mov
mov
inc
or
aaa
ficoms
and
ss
inc
mov
movb
add
ds
and
inc
and
repnz
dec
ds
xor
sbb
dec
cmpsb
cmp
adc
add
pop
pop
pop
pop
ret
les
pushf
call
jmp
adc
push
add
adc
xchg
and
xchg
jmp
jle
sbb
xchg
sti
sbb
push
push
negl
ret
push
enter
xor
pop
add
add
in
pop
lods
push
jne
lds
cmp
int
rcrl
adc
pop
add
lock
jmp
hlt
cltd
and
icebp
pop
push
or
rcrb
or
xor
pop
dec
add
inc
adc
jge
aam
cltd
xchg
test
insb
mov
arpl
inc
pop
adc
add
clc
cmp
jge
xchg
push
inc
loopne
rolb
andnps
sub
shll
dec
mov
xor
sub
ret
data16
call
xchg
push
orb
add
mov
pop
pop
dec
mov
xor
lds
pop
popa
jmp
sbb
push
mov
in
add
pop
jbe
push
add
cmpsl
decb
mov
dec
aas
es
out
mov
in
inc
pop
out
fists
jb
fiadds
and
jae
pop
jge
dec
pop
or
cmp
test
add
movsl
subl
push
cli
sahf
movsb
push
aam
sbb
stos
and
or
mov
cmp
ret
add
mov
adc
stos
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
dec
enter
push
dec
pop
and
pop
pop
mov
push
hlt
push
fs
or
dec
mov
push
fistps
mov
in
mov
lock
and
adc
adcl
push
test
lret
sbb
sbb
stc
jmp
adc
out
inc
add
decl
dec
stos
adc
or
loopne
sub
pushf
dec
pop
jno
out
fisubl
or
inc
or
sub
lret
sti
inc
add
jbe
andb
pop
sub
and
or
dec
or
push
test
and
push
push
push
adc
pop
aam
sbbb
inc
mov
ret
adc
dec
lds
insl
jae
jb
jmp
in
sbb
inc
or
dec
sbbl
and
scas
push
testb
xchg
out
pop
dec
pushf
scas
cmp
pop
test
jo
dec
out
rorb
mov
sbb
into
jge
mov
adc
shl
add
in
test
repnz
push
outsb
mov
inc
push
dec
jg
pushf
and
and
sub
add
out
push
inc
pop
dec
xchg
pop
xor
push
dec
mov
push
inc
mov
pushf
stos
pop
test
scas
repz
xor
icebp
mov
call
and
or
add
xor
xchg
insl
movsl
xchg
sbb
and
add
dec
adc
lea
add
call
pusha
cmp
cltd
push
lea
insl
dec
xchg
sarl
push
add
add
call
sbb
movsl
and
test
or
enter
dec
and
scas
and
xor
in
add
sub
push
xor
pop
cmpsb
ficomps
jo
insb
imul
outsb
and
outsb
jl
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
push
dec
daa
arpl
jae
sbb
xor
popa
xchg
js
pop
ja
xor
data16
adc
cmp
ss
aas
add
push
movsb
dec
loopne
fadd
push
fs
dec
jp
icebp
pop
sbb
je
dec
mov
cmpl
je
sbb
test
xchg
xor
dec
stos
mov
insl
cmp
or
mov
dec
cltd
xor
dec
pushf
or
ja
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
lock
pusha
push
add
or
add
lock
sbb
or
add
inc
add
lock
adc
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
