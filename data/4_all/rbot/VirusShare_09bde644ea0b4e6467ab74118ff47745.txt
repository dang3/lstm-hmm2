mov
fsubrs
dec
pop
xchg
mov
mov
leave
push
or
sahf
sbbb
fprem
mov
negl
dec
dec
xchg
xlat
fcmovne
inc
out
mov
or
lret
cwtl
sub
mov
cwtl
push
ret
inc
popf
sub
sahf
and
shrl
aam
loopne
pop
push
test
jne
cs
jb
sbb
movsb
xchg
pop
mov
push
xor
sub
cs
int3
and
aas
xchg
out
xchg
push
mov
pop
fcmovnbe
mov
mov
in
pop
add
outsb
dec
dec
ja
mov
pop
mov
shl
int3
cli
ljmp
jne
mov
dec
sbb
pop
xchg
mov
xchg
push
lds
out
xchg
call
mov
jl
and
std
pop
test
sbb
jbe
inc
xchg
jmp
inc
lock
cmpsb
xor
sub
mov
stos
or
xchg
dec
push
and
cmc
das
mov
mov
daa
lds
dec
imul
in
jg
inc
es
rcrb
mov
dec
dec
pop
das
mov
pop
loopne
decb
test
cld
test
arpl
aam
neg
into
movb
in
movsl
rclb
pop
sub
sub
lret
pusha
cmpsl
ss
lcall
ds
test
and
inc
xchg
out
mov
shlb
push
pop
rcl
lock
jecxz
ljmp
fucomip
mov
in
out
mov
xor
jmp
pop
jmp
add
gs
xadd
sbb
ja
fists
mov
pop
cli
add
mov
push
push
loopne
mov
sub
push
in
or
add
push
outsl
xchg
cwtl
inc
sub
out
lods
push
std
enter
push
dec
pop
scas
imul
lcall
arpl
pop
scas
jnp
subl
cmp
pop
push
pop
cli
lds
push
xor
outsb
mov
das
out
stos
stos
fldt
aad
fistpll
dec
sbb
in
jbe
sub
icebp
mov
scas
mov
jle
outsl
pop
pop
add
sbb
jg
inc
call
push
push
inc
out
sbb
sub
sbb
ss
mov
adc
push
out
mov
adc
mov
and
js
lods
sbb
fsts
jns
dec
jl
sbb
mov
jnp
jne
jbe
adc
hlt
imul
stos
xchg
ljmp
fisttpll
push
bound
mov
sub
dec
fldt
lret
lods
or
push
or
movsl
aas
pop
lret
hlt
push
es
mov
jecxz
stos
mov
add
push
push
lods
xor
and
cmp
fwait
pop
inc
test
push
jmp
xor
dec
daa
mov
or
rolb
int
ljmp
lret
idivl
repnz
mov
adc
push
in
scas
cwtl
jb
pop
pop
xlat
mov
fs
xlat
movsb
sbb
pusha
fs
jl
lret
je
pop
data16
nop
jmp
fidivrl
shl
lds
xchg
ret
fldt
out
mov
xchg
dec
xchg
dec
jo
addr16
xchg
add
dec
fsub
jns
cmc
jmp
cmpsl
adc
ds
arpl
ss
mov
rclb
popf
ret
or
pushf
sbb
cmpsb
mov
iret
mov
lahf
pop
fwait
aaa
push
jmp
enter
adc
push
sbb
clc
mov
pop
push
mov
xlat
scas
dec
pop
fsts
pop
adc
test
outsl
sbb
lahf
xor
nop
mov
mov
out
sbb
fldl
push
sub
pop
cli
jl
xchg
shll
jne
outsb
xor
dec
punpcklwd
push
imul
lea
scas
outsb
jp
data16
pop
push
ljmp
push
in
bound
jae
pop
xor
push
xor
pop
iret
add
jbe
ret
repnz
pop
adc
sub
mov
pop
imul
add
xlat
push
jns
jb
pushf
xlat
xchg
jp
aam
mov
pop
sahf
and
out
or
pop
dec
ret
add
push
pop
jle
repnz
push
lahf
dec
icebp
sti
jmp
lods
xor
lock
push
push
mov
pop
rcll
test
xchg
lods
lcall
sbb
xchg
push
mov
sti
nop
dec
das
dec
or
push
and
jno
dec
mov
xchg
jecxz
xchg
enter
cmp
repnz
mov
mov
or
sub
inc
insl
into
cmp
loopne
cmpb
adc
sub
push
sbb
lahf
stos
inc
and
jg
leave
nop
dec
stos
push
stos
jecxz
scas
cmpsb
push
push
cmovo
pop
nop
mov
mov
xchg
jae
push
adc
ret
inc
mov
rcrb
mov
jecxz
pusha
ficomps
stc
xor
sub
pop
adc
inc
scas
lret
or
jecxz
scas
aaa
mov
mov
xchg
push
std
mov
push
cmp
mov
shl
pop
repz
add
push
nop
sub
cmpsb
cs
in
mov
aaa
adcl
scas
pop
inc
outsb
addr16
push
int3
jno
aas
sub
push
or
xchg
sub
sub
or
inc
mul
fsts
lock
sub
popa
inc
adc
dec
fisubrl
cwtl
xor
sti
mov
mov
out
xor
mov
mov
stos
pop
or
mov
push
xlat
imul
rclb
mov
push
sahf
je
sub
and
loop
adc
mov
dec
cs
aam
rcrb
mov
outsb
dec
imul
and
cltd
cmpsb
sbb
lock
push
adc
loope
sbb
fldenv
daa
pop
cmp
xor
fistps
les
test
or
push
dec
push
cmpsb
dec
push
inc
inc
enter
jp
in
popl
cltd
mov
fcmovb
in
faddl
or
in
ss
and
js
ficoml
pop
push
push
push
std
xor
pop
das
jne
xchg
inc
jne
cmpsl
test
or
cld
enter
cmpsl
xlat
adcl
push
adc
stos
addb
pusha
enter
in
or
lahf
dec
int3
cmp
scas
xchg
push
mov
cltd
sti
jbe
push
inc
pop
lret
leave
test
jmp
shll
imul
leave
add
lods
loop
pop
cs
lea
fildll
nop
test
push
in
lods
inc
out
loope
sbb
js
mov
sbb
popl
pop
bnd
jle
mov
add
cs
pop
xor
lcall
imul
xchg
negl
orl
or
jp
adc
cld
pop
loopne
bound
push
out
sar
xor
insl
dec
fstp
push
jbe
sub
sbb
les
push
addl
lret
xchg
pop
push
insl
fs
fiaddl
popa
lods
out
mov
mov
bound
test
or
stos
xor
test
test
xchg
rolb
imul
push
mov
mov
mov
xchg
mov
inc
cwtl
jl
inc
mov
dec
inc
aam
sbb
push
pushf
push
repnz
push
pusha
ljmp
in
rcll
into
aam
ret
insb
test
cli
or
mov
pop
push
ret
lods
das
jmp
popa
xchg
dec
dec
sub
mov
jmp
xchg
rolb
mov
lods
cmpsb
scas
pushf
jno
inc
in
enter
xor
cmp
mov
mov
sti
jb
sbb
mov
push
lods
mov
shrl
add
add
xchg
xchg
jp
pop
subl
and
pextrw
mov
inc
add
dec
scas
adc
cli
push
add
rcl
inc
inc
repnz
fldenv
adc
adc
jno
pushf
pop
pop
mov
jmp
jl
cmpb
mov
add
scas
out
push
push
fldt
xor
or
int3
cs
push
cld
inc
jmp
js
aas
cltd
repz
push
pusha
inc
cmpsb
outsb
dec
inc
mov
into
inc
shrb
rcr
add
sub
pop
mov
inc
pop
jb
adc
mov
xchg
iret
or
pop
adcl
xchg
lds
mov
mov
lods
jmp
das
nop
aaa
call
stos
repnz
or
out
popa
aaa
lock
sub
loop
hlt
push
push
mov
xchg
mov
and
inc
les
push
mov
negl
ljmp
outsl
xchg
outsb
xlat
out
jmp
mov
out
adc
mov
lret
shlb
xchg
push
jo
add
push
aad
sbb
xor
data16
test
cmp
or
jae
int
mov
sub
push
pop
mov
and
int3
dec
xchg
outsl
add
repz
adc
leave
cltd
pop
test
fidivrs
shll
add
dec
push
fcoms
push
nop
aaa
lcall
mov
inc
dec
pop
dec
scas
subb
lahf
dec
scas
sub
call
lahf
notl
out
jge
into
pop
ss
loop
pop
mov
xchg
rclb
mov
push
cmp
in
call
add
icebp
iret
inc
inc
sub
shll
push
in
jle
idiv
mov
sub
push
ret
jle
fidivs
ss
mov
xchg
out
xchg
mov
push
adc
mov
mov
bound
push
cltd
pop
in
fimuls
and
sbb
cmpsb
cs
repz
sbb
int
push
test
addr16
mov
ds
mov
dec
add
outsb
sub
adc
test
sub
fs
inc
clc
push
nop
popf
arpl
push
aas
mov
mov
lret
dec
dec
push
add
movsb
fisttps
xchg
pop
das
outsl
ret
xchg
mov
call
pop
xor
sbb
or
scas
cltd
cld
sbb
adc
pop
into
xchg
dec
push
mov
hlt
bound
push
push
jp
or
mov
pop
or
adc
sti
inc
pop
ss
mov
mov
sbb
jnp
notl
pop
push
push
add
hlt
pop
cmp
mov
ret
pop
enter
mov
aaa
or
mov
outsb
test
rorl
or
mov
pop
mov
sbb
pop
dec
dec
mov
popf
pop
adc
inc
rcll
and
cmp
scas
rcrb
lock
and
adc
cmc
xor
dec
jno
sub
pop
pop
pop
xor
mov
xchg
push
jo
cmp
mov
inc
mov
xorl
push
dec
fisubl
fmull
divb
in
sub
and
sbb
std
dec
fnstcw
inc
nop
fiaddl
repnz
mov
data16
iret
mov
mov
push
pop
cmp
aas
sbb
xchg
test
cld
jmp
pusha
scas
or
mov
out
ret
sub
ret
lret
sub
add
xchg
mov
repnz
sub
mov
andb
pop
push
shl
adc
sub
sbb
pop
lea
xchg
rorb
sbb
dec
call
ss
orb
enter
mov
scas
cmp
inc
xchg
flds
jp
sarb
scas
and
push
xor
pop
jge
stos
jle
xchg
lock
dec
xchg
cmp
pop
push
ljmp
sub
repz
pop
cld
xchg
rep
mov
rorb
dec
sub
xor
jp
add
aam
jbe
loop
fsubs
fisubrs
push
pop
into
mov
loopne
pushw
sub
xchg
loopne
push
daa
jg
and
cmp
push
int3
mov
fs
stos
test
xchg
es
sbb
ljmp
fsubrs
adc
dec
push
outsb
jp
pop
sbb
insb
leave
cmp
insb
jecxz
cmp
out
mov
aad
ja
xlat
scas
jnp
pop
inc
mov
cmpsl
fs
int3
xor
popa
sahf
lods
fisubs
push
aad
push
test
pop
xchg
jne
cmc
sub
negl
mov
gs
dec
mov
loope
inc
je
je
push
rcrb
iret
sub
sbb
lods
insb
outsb
andl
arpl
pop
jno
inc
popa
and
add
mov
popa
loope
out
mov
pop
add
outsl
pushf
fistps
mov
add
andb
add
or
fwait
jmp
sub
scas
add
lahf
and
inc
cmpsl
leave
mov
ljmp
push
mov
icebp
push
sti
push
inc
out
mov
xor
sbb
dec
pushf
pop
into
xor
dec
mov
cld
push
je
mov
pop
pop
adc
test
pop
daa
out
dec
push
adc
xchg
cli
mov
xlat
out
test
dec
ljmp
sub
cmp
notl
inc
jg
sbb
popa
sbb
xchg
jmp
mov
mov
loopne
push
clc
fcmovnu
inc
push
stos
out
hlt
into
dec
add
dec
jp
addr16
sahf
lret
bound
aas
pop
push
pop
out
sti
pop
daa
mov
or
mov
dec
mov
loope
and
mov
mov
xlat
fdivl
rcll
and
ret
dec
sub
fistl
addr16
add
fsubs
push
outsb
pop
and
iret
sub
pop
mov
addl
shlb
or
pop
cmpsl
test
insl
mov
xacquire
mov
inc
rol
pop
pop
stos
push
mov
xchg
adc
cmpl
rorl
ljmp
add
ret
pop
mov
test
out
mov
xchg
movsl
gs
jno
aad
push
stos
or
xchg
dec
sbb
cmpsl
jbe
or
jmp
jmp
xchg
je
cmp
dec
arpl
aad
testl
add
ss
dec
xchg
sbb
add
cs
js
jne
out
lea
jae
sub
ret
dec
or
jnp
sbb
mov
push
in
xchg
insb
hlt
out
pop
popa
pop
orb
jb
hlt
xor
cmpsl
push
movsb
mov
fwait
inc
es
sahf
iret
imul
or
jg
jle
and
jo
adc
fiaddl
ljmp
sbb
inc
jnp
jle
in
mov
std
mov
mov
cs
in
xchg
mov
mov
fidivrs
cmpb
hlt
popf
mov
cmp
xor
xorb
push
mov
lret
imul
ja
out
scas
xchg
jns
xchg
test
les
repnz
sub
mov
fstl
jle
aam
movsb
push
enter
scas
repnz
lcall
adc
dec
mov
lods
push
mov
xchg
push
fs
xor
ret
aas
lahf
repz
rcll
leave
test
aaa
out
mov
xor
push
add
jle
cmp
stos
sbb
adc
xlat
stos
bswap
inc
or
mov
leave
pushl
lahf
fdiv
sub
roll
popa
or
scas
inc
xchg
test
push
mov
js
out
aas
jnp
addb
mov
repnz
add
into
into
mov
clc
fdiv
dec
jecxz
jae
or
lea
testb
cmpsb
iret
add
push
pop
repz
into
cwtl
cli
int
mov
and
xor
cltd
mov
fldenv
inc
pop
das
std
nop
sub
pop
leave
test
in
sahf
hlt
fcomps
fucomip
sbb
inc
or
dec
inc
scas
loop
sahf
xor
push
cmp
xchg
repnz
fcompl
mov
mov
fs
repnz
call
stc
stos
xchg
lock
cmpsl
push
cli
xchg
or
sub
lea
push
push
xchg
jge
sbb
pop
cmp
push
loopne
and
cmp
push
sahf
push
daa
jo
add
inc
hlt
adc
mov
out
push
cmpsb
inc
daa
sub
notl
pop
push
cld
lcall
pop
outsb
out
push
inc
scas
push
divb
push
xchg
aaa
xor
ds
je
cmpsl
xor
dec
aas
inc
xlat
dec
sbb
mov
xchg
xchg
xor
outsl
notl
push
cmp
mov
and
stos
rorl
loopne
into
xor
cmpsb
mov
cmc
movsl
mov
pop
or
cld
mov
int3
pop
cmpsl
add
jmp
scas
adc
out
fisubrs
cltd
push
jno
cmp
mov
push
jnp
jns
ja
loope
sti
dec
mov
jb
jae
fwait
aas
mov
fsubl
enter
iret
xor
lods
ret
inc
xchg
push
push
stos
lods
or
dec
cmpsb
xchg
inc
xchg
cld
push
fcomps
test
xchg
pop
fcmovb
sti
aas
movsl
lret
dec
push
out
push
out
xor
jg
cltd
repz
inc
ja
lret
lahf
cmpsb
stos
js
cmp
bound
adc
jecxz
push
jecxz
arpl
xor
push
adc
or
repz
push
in
fldt
dec
inc
aam
test
pusha
pop
mov
push
movsl
into
sbb
mov
lret
cld
add
inc
cwtl
repnz
lcall
in
xchg
push
push
jbe
mov
xchg
fdivs
mov
ret
jbe
lret
sub
mov
aam
mov
cli
xchg
out
fldenv
cs
arpl
aad
push
incb
mov
push
jae
repnz
sti
out
dec
inc
xchg
pop
sub
outsb
pop
add
xor
out
ss
out
or
repz
mov
nop
stc
loop
jmp
mov
dec
ljmp
dec
jle
test
cmp
fcmovne
pop
pop
int
data16
dec
xchg
pop
xor
jmp
lock
mov
push
ja
in
pop
into
push
fisubl
je
insl
outsb
insb
sbb
xor
mov
mov
push
jle
arpl
mov
adc
mov
imul
pop
les
imul
cmpsb
mull
pop
lds
push
int3
or
test
popl
cs
push
adc
call
or
add
mov
pop
push
jb
rcrb
bound
cld
mov
lods
int
test
mov
mov
jo
inc
shll
fidivl
loop
mov
and
mov
sahf
dec
aad
mov
add
dec
arpl
xchg
clc
push
lods
xchg
xor
negl
mov
jb
sub
out
lret
loopne
lcall
mov
and
ljmp
fimull
aas
fdivs
or
mov
add
andb
mov
lea
push
in
outsb
imul
sbb
cmp
cld
mov
mov
in
aad
test
imul
popf
pop
adc
jecxz
inc
divl
cmp
jg
dec
cltd
cmp
mov
mov
dec
push
mov
inc
adc
sarl
nop
cltd
sub
cmp
inc
xchg
mov
ret
and
and
pop
fdivs
and
sbb
pusha
sar
filds
and
pop
cmp
jmp
popa
fdivrl
cli
jnp
out
pop
mov
lahf
or
pusha
fistl
jb
cmp
cmpsl
xor
push
gs
cwtl
mov
scas
add
mov
out
xchg
imul
xchg
fimuls
mov
add
ds
bound
scas
dec
repnz
cmp
push
loopne
dec
push
inc
arpl
push
mov
jecxz
test
pop
adc
dec
mov
ss
push
loop
rcll
notl
shll
call
mov
cwtl
inc
fnstcw
shlb
sbb
push
mov
pop
cmc
movsb
jno
adc
and
ret
add
fsubrl
gs
pop
mov
mov
cli
lea
fdivl
xor
lods
xchg
lods
dec
xchg
mov
pop
jae
pushf
sub
fs
mov
adc
pop
aad
mov
sahf
inc
clc
dec
xor
push
cmpsl
outsb
nop
out
dec
lods
cmp
push
mov
cmp
jb
fildll
mov
adc
cmp
ret
mov
iret
sbb
out
mov
mov
dec
lret
xchg
jle
mov
xor
aad
mov
xor
shll
mov
and
aad
pop
pushl
inc
pop
add
cs
out
popa
mov
out
repz
sahf
push
cli
add
xor
fidivl
rorl
js
cwtl
jle
ret
ret
adc
mov
andb
xor
pop
into
mov
mov
stos
mov
int
mov
stc
cmp
ljmp
shll
outsb
fs
jecxz
pcmpeqb
jo
lea
cli
test
jg
scas
adc
sub
shll
mov
aam
repnz
xor
inc
clc
fwait
push
dec
pop
stc
sahf
mov
xchg
das
imul
lahf
push
add
pop
xor
push
sbb
mov
xlat
imul
pop
adc
pop
inc
inc
icebp
mov
or
inc
cmpsl
bound
lods
aam
jp
lock
push
repz
xchg
dec
xor
adc
cmp
and
jo
xor
insb
or
das
jecxz
sub
scas
jno
push
and
insl
pusha
sbb
push
mov
sub
lret
out
iret
xor
push
cwtl
stos
jmp
cmp
lock
push
cmp
push
jbe
cmp
in
rcrl
leave
dec
out
mov
dec
lret
fidivrs
and
lahf
xlat
cmpsb
cmp
cld
xchg
xor
insl
pop
lret
idivl
pop
insb
insl
mov
dec
out
jmp
pushf
sub
fwait
stc
mov
rcrb
jg
jle,pn
popf
jno
dec
jb
sti
int3
pop
pop
pop
dec
push
fcomip
cmpsb
push
cmp
xchg
xor
push
pop
mov
test
jmp
adc
dec
push
mov
jecxz
das
jmp
add
jmp
or
cmp
fwait
data16
insl
mov
outsb
push
push
add
jecxz
nop
adcb
push
dec
loope
ret
or
push
lea
lcall
rclb
jmp
aaa
cmp
movsb
in
inc
cmp
mov
push
outsb
and
push
mov
sarb
cmpsb
out
fisttps
jae
adc
sbb
shl
xchg
roll
cmp
sub
xchg
add
cwtl
out
sub
or
out
inc
ret
in
xchg
jns
js
lret
sarl
xorl
enter
cmpsb
cmp
popl
inc
mov
and
das
repz
cmpl
les
out
mov
xor
inc
mov
jb
xor
cmpsb
ret
ds
dec
out
jnp
mov
in
lods
out
data16
push
sub
push
ds
mov
jbe
dec
pop
adc
jb
ja
lods
mov
ror
sti
cmp
fmuls
jb
xor
mov
push
fcmove
leave
fisubrs
dec
sub
icebp
call
loopne
or
push
and
ds
mov
mov
shll
sub
adc
jecxz
add
push
pop
pop
and
sahf
dec
adc
movsb
and
lcall
cmp
pop
cmp
shl
xchg
mov
add
popa
sbb
dec
flds
ror
mov
pop
and
mov
pop
rcrb
loopne
out
into
lods
and
ds
das
jb
cs
push
jo
push
cwtl
lock
dec
jl
imul
fmull
fstpt
scas
or
add
imul
scas
rcr
cld
push
mov
ficompl
sbb
repnz
jo
xchg
dec
sbb
lods
int3
mov
test
nop
jmp
loopne
push
aas
mov
jns,pn
dec
daa
hlt
add
xor
xchg
in
jne
sti
dec
lcall
mov
inc
lock
aam
jbe
loope
pop
bound
or
cmp
fwait
jbe
push
sbb
sub
jae
je
lret
pop
adc
insb
stos
xchg
mov
out
out
pop
jnp
inc
or
sub
aad
dec
test
aaa
leave
mov
ss
scas
cmp
js
cmp
pop
sahf
rclb
popa
addb
cli
sbbl
out
std
fistpll
fisubrs
leave
movsb
mov
std
dec
lds
mov
insb
loopne
push
cwtl
pop
push
or
pop
jb
inc
test
mov
dec
int3
sub
popa
leave
imul
gs
aas
and
cmp
fisttpl
es
in
data16
rcll
dec
in
lds
aas
push
fcompl
sub
repnz
pop
out
pop
xchg
dec
mov
inc
pop
push
pop
adc
pop
popa
aaa
fs
pushf
and
mov
jp
js
dec
ljmp
addb
sub
dec
push
insb
stc
adc
mov
loop
rorb
push
or
scas
shl
inc
out
gs
scas
ret
cwtl
jno
adc
mov
fcomps
stos
insl
xchg
inc
add
mov
push
mov
fistpll
add
popa
add
clc
xchg
xor
adc
dec
jbe
add
mov
inc
in
sbb
dec
sti
aas
mov
jo
mov
aas
push
and
dec
inc
push
popf
cwtl
stos
sbb
sbb
mov
into
sahf
movsl
xchg
xchg
lock
mov
ret
insl
jp
mov
sub
cmp
dec
inc
movsl
out
pop
fistpl
loop
call
repz
xchg
cltd
pop
mov
leave
fbld
dec
pop
jno
call
or
test
loope
sahf
mov
daa
or
and
mov
mov
pop
xor
jbe
xchg
pop
fld
lret
adc
idivb
ds
jno
mov
scas
lods
cmpsl
dec
jmp
fdivrp
insl
movl
lcall
gs
aad
sub
imul
mov
fisubs
pop
lods
enter
dec
loopne
mov
cmc
pushf
cwtl
add
or
jmp
cmpsl
or
aad
mov
adc
cmp
xchg
testl
mov
dec
dec
das
in
adc
sti
adc
lods
jmp
ss
orl
std
add
cmp
into
cld
in
or
outsb
std
les
push
xchg
mov
adc
sbb
cmpsl
push
inc
iret
pop
inc
es
out
sub
insl
jg
sub
cmp
adc
push
das
shlb
dec
add
xorb
ljmp
lret
arpl
aam
xlat
out
lds
push
ss
mov
cmc
cmc
adc
mov
inc
pop
repnz
xor
dec
imul
xchg
mov
push
stos
xor
xchg
push
mov
or
imul
fisubrs
push
pusha
outsb
fcoml
mov
sar
popf
mov
mov
test
cwtd
fwait
mov
adc
ljmp
pop
or
sub
xor
mov
or
sbb
and
sbb
aam
bound
mov
pop
daa
or
push
loop
push
cld
xchg
mov
in
dec
decb
push
and
cmp
mov
mov
push
jnp
data16
repnz
jmp
xchg
aam
fimull
aam
and
dec
iret
lods
push
stos
lret
bound
scas
iret
adc
sahf
daa
push
repnz
xor
fstpl
test
leave
cmp
push
adc
or
cld
and
pushf
repnz
sbb
int3
pop
scas
mov
sbb
rcrl
xor
mov
xchg
subl
mov
jge
test
cmp
dec
mov
cltd
mov
xlat
mov
xor
or
hlt
xor
out
or
mov
or
add
test
or
add
stc
lea
scas
stos
push
aad
mov
lods
cmpsl
push
push
sahf
clc
sbb
mov
adc
pop
scas
push
inc
push
dec
call
jl
push
negb
mov
xor
push
insl
add
adc
xor
pusha
scas
inc
sub
mov
test
sbb
push
outsb
add
xlat
dec
and
mov
pop
testb
cmp
xchg
incl
aaa
jnp
idivl
mov
xchg
and
aas
push
push
mov
inc
pop
mov
mov
jne
add
lds
in
pop
push
call
mov
sub
aas
loop
mov
out
mov
stos
push
adc
out
loop
cwtl
gs
mov
jmp
stc
jle
dec
adc
push
push
xlat
leave
cmc
dec
pop
inc
xchg
add
mul
adc
push
push
sub
das
sbb
push
jno
xchg
push
sbb
push
mov
testl
and
scas
hlt
cs
or
into
out
jo
sub
cmpsl
sahf
mov
dec
xchg
mov
ret
push
ss
pop
mov
mov
pushw
inc
push
fmull
shrb
addb
jbe
push
pusha
adc
pop
je
mov
arpl
inc
ret
in
mov
outsb
sbb
pop
into
xchg
mov
pop
subl
fsubrp
inc
rclb
lahf
inc
in
lret
mov
pop
icebp
mov
adc
or
repz
lret
insl
dec
in
mov
aad
jp
sbb
and
and
cmp
stos
insb
ljmp
push
dec
dec
xchg
cmp
ss
cwtl
lahf
push
mov
adc
rcr
sub
or
std
dec
mov
mov
cli
loop
jno
cmp
adc
in
sarb
mov
ja
sub
sub
scas
lcall
cmp
mov
xor
or
push
inc
pop
test
jbe
and
cwtl
mov
xchg
xor
pop
dec
in
and
lods
aaa
cmp
popl
ljmp
adc
cmp
ds
inc
and
sarl
lods
into
or
jmp
mov
xor
mov
lret
mov
mov
addl
add
ret
adc
sub
jno
xor
cmp
out
push
pop
mov
test
xor
pop
inc
jae
aas
stos
sub
loopne
ret
in
push
lcall
fwait
adc
pop
or
test
jb
rorb
bound
add
cs
xchg
push
call
push
mov
mov
adc
int
sbb
enter
or
imul
test
pop
add
dec
xor
fwait
or
mov
das
cmp
outsb
sbbb
jno
test
xchg
xlat
and
and
adc
mov
cmp
imul
test
stc
gs
data16
aaa
cltd
das
jbe
jmp
jo
pusha
add
fdivl
mov
sahf
inc
leave
push
sbb
hlt
jne
inc
jmp
insb
or
mov
adc
cmp
add
jae
scas
jne
fisubrl
insb
jb
mov
and
test
lret
fwait
mov
cs
pushf
pop
jmp
out
xchg
in
fwait
pop
test
mov
xor
inc
sub
mov
shrl
outsl
push
addl
jmp
cld
mov
bound
fcomps
xchg
lods
sbb
out
cli
add
xor
xchg
sub
xchg
xchg
imul
sti
dec
or
xlat
icebp
xor
lods
sub
clc
in
jne
add
xchg
or
mov
xor
pop
and
call
das
stos
push
pop
pop
sti
pushf
jae
sbbl
fists
pop
mov
into
lret
fcompl
mov
pop
gs
lock
sbbb
pop
jle
sub
in
jge
adc
js
in
xlat
add
pop
cmp
xchg
out
scas
lods
imul
mov
lcall
push
dec
inc
pop
jno
loopne
jle
cmp
pop
push
push
test
lods
pusha
jne
test
pushf
fadds
pop
inc
add
out
out
xor
adc
lcall
loopne
or
leave
lahf
adc
pop
cmpsb
or
push
daa
popa
out
sub
cmp
sub
pop
xchg
repz
mov
push
cltd
sub
in
mov
dec
dec
push
adc
sarl
adc
mov
pop
mov
mov
das
outsb
js
pop
jns
repz
inc
test
roll
fwait
int
ret
mov
subl
mov
dec
leave
fdivrp
dec
mov
xor
into
mov
rolb
std
push
out
cmpsb
orl
or
fiadds
pop
xchg
mov
jecxz
pop
and
sbbl
push
andl
xchg
shrb
movsl
add
add
es
jge
jbe
push
decb
ljmp
mov
jle
pusha
or
mov
loop
cli
xor
mov
pop
add
mov
lock
ljmp
out
subb
pushf
arpl
jg
xor
repnz
data16
rorb
push
pop
cli
jbe
push
inc
mov
loope
adc
mov
and
cli
jae
xchg
or
aam
lahf
inc
lds
aas
or
arpl
addr16
jne
hlt
ret
je
mov
imul
adc
lret
jae
mov
outsb
and
fucomp
add
fdivrl
push
jge
jp
fiadds
fcmovnu
outsb
test
and
mov
jmp
orl
cld
inc
xchg
xchg
incl
adc
scas
clc
lcall
imulb
mov
adc
addl
flds
jbe
pop
ljmp
lret
xor
repz
in
loop
xor
push
jmp
xor
mov
ror
inc
pushf
sbb
add
pop
lcall
mov
xchg
js
sub
mov
ret
outsl
mov
mov
ret
fisubl
pop
sub
mov
mov
lcall
cmp
pushl
bound
add
pop
jnp
cmp
dec
rcrl
cld
rclb
push
sub
stos
out
and
scas
loopne
stc
sub
je
insl
inc
cli
test
and
adc
xchg
adc
insl
jbe
scas
push
scas
jb
sub
fistl
pusha
mov
mov
leave
aas
mov
dec
push
test
pop
push
jne
add
push
aaa
test
jmp
mov
cwtl
jle
loope
outsb
neg
mov
out
push
es
js
cmp
and
mov
inc
add
sahf
std
popa
iret
jb
shll
cmp
xor
inc
fsubp
dec
adc
pop
pop
movsl
sbb
jb
mov
test
jecxz
mov
mov
int
out
stc
push
repnz
repnz
jo
mov
out
xlat
aaa
out
xor
and
fsubp
rcl
jmp
arpl
mov
inc
sub
or
stos
shl
sbb
and
repnz
cli
or
lret
imul
sbb
jle
mov
leave
mov
in
ret
or
aad
lea
popa
xor
aad
pop
jo
mov
pop
adc
insb
adc
popa
add
jnp
push
lds
xchg
loopne
div
ss
pop
daa
int
xchg
dec
sub
popa
sub
jmp
sub
push
jno
cs
push
ljmp
imul
in
mov
movsb
cmc
in
xchg
sub
mov
nop
mov
pop
outsl
aad
xor
dec
stc
orb
cmp
pop
faddl
sbb
inc
add
ficomps
daa
sub
pop
cmpl
cltd
lahf
pop
into
push
test
pop
sbb
push
jmp
xor
pop
push
fs
or
or
call
loope
imul
test
out
dec
andb
jmp
pop
cltd
mov
push
stos
lods
lcall
incl
xchg
inc
push
pop
sbb
out
mov
imulb
sbb
mov
cmpsb
xchg
mov
js
add
jnp
pop
xchg
sarl
shr
mov
hlt
call
into
jbe
mov
or
cmp
cld
jmp
jmp
roll
repz
daa
inc
inc
pop
mov
cmp
dec
je
sahf
movl
push
push
enter
stos
pop
fbld
mov
mov
sub
dec
pushf
lods
push
ljmp
sub
fstpt
sbb
test
pop
push
fidivrs
rorb
ret
mov
jmp
lret
xlat
inc
popf
movsl
jmp
test
push
cmpsl
sub
xor
jns
ds
cld
test
in
jb
hlt
test
clc
xchg
pop
push
out
mov
or
iret
out
xchg
or
or
adcl
jge
in
arpl
nop
or
adc
ret
pusha
push
jo
outsl
add
cwtl
int3
sar
ss
out
cmp
jae
lcall
add
movaps
and
arpl
dec
loope
bound
and
ljmp
xchg
ret
push
jp
inc
dec
into
pop
lcall
movsl
dec
xchg
fisubl
pushf
in
and
mov
mov
ret
stos
xchg
orb
sbb
cltd
pop
sarl
scas
push
cmp
mov
push
daa
movsb
sub
xor
ret
push
sbbb
adcl
inc
mov
mov
out
xor
lds
sar
xor
or
jge
inc
lods
xor
inc
jb
pushl
xchg
xor
push
mov
f2xm1
sub
cmp
popa
jno
cwtl
pop
loop
subb
repz
mov
pop
lret
add
mull
fcmovnu
sti
pushf
jl
cwtl
andb
popf
fdivrl
lods
jno
in
xchg
outsl
cmpsl
cld
push
insl
cld
push
aad
js
and
jecxz
hlt
sbb
ja
jno
push
sub
loope
test
mov
ljmp
add
mov
push
iret
mov
aad
sbb
and
jo
sbb
jp
loope
jbe
lret
movsb
imul
mov
dec
ja
jae
push
push
into
pop
pop
cmp
sub
lret
pusha
jne
xchg
xor
sub
sahf
pop
je
pusha
pandn
sub
mov
inc
pop
mov
adcl
outsb
and
mov
mov
out
filds
sbb
lcall
jno
xor
pop
mov
cs
cmc
stos
mov
rolb
sbb
xchg
adc
cmpsb
sbb
push
dec
mov
andb
bound
scas
pop
int
scas
jb
xchg
dec
adc
mov
test
das
sub
aad
dec
movsl
push
sahf
clc
pop
ja
ficompl
cmp
mov
or
lahf
dec
fistpl
popf
scas
cmp
cmpsb
fwait
out
loope
fiaddl
mov
scas
sbb
dec
js
adc
pop
je
test
adc
xchg
xchg
add
loopne
outsb
pop
icebp
jno
shlb
dec
xchg
rcr
ljmp
outsb
sub
xorl
mov
pop
es
jmp
xor
popa
cli
sahf
lahf
mov
xchg
mov
xor
out
dec
or
push
mov
inc
cmp
mov
lcall
aam
lods
in
push
jbe
sub
out
data16
inc
test
ja
xchg
pop
jp
mov
out
mov
and
std
cmc
test
or
outsl
cmpsb
outsb
inc
into
adc
int
idiv
test
push
out
cmp
pop
mov
adc
add
int
cld
fcmovne
add
xchg
rcrl
lds
into
dec
xor
sahf
sbb
popa
lret
aas
adc
cli
ljmp
aaa
popa
ret
pop
dec
adc
inc
stos
aaa
enter
decb
outsl
xchg
jmp
lret
mov
outsb
js
das
popf
mov
aam
push
or
mov
pop
sub
scas
add
fistpl
rol
shlb
or
cltd
jge
mov
jbe
aad
mov
jae
ret
jg
jp
jns
andl
inc
rclb
stos
mov
popf
mov
je
pop
sbb
ljmp
mov
rcll
dec
lret
imul
in
xchg
ficoml
sub
in
jmp
pop
mov
mov
or
jne
sub
and
aaa
out
sub
sub
mov
pop
ljmp
arpl
sub
add
pop
call
in
or
cltd
inc
mov
loope
mov
fcmovnu
das
out
push
leave
lcall
push
mov
ficoms
dec
pop
pop
dec
dec
mov
xlat
xchg
dec
dec
arpl
add
mov
or
sub
jmp
mov
jl
out
in
pop
arpl
push
cld
dec
pop
hlt
repz
dec
mov
repz
jge
rcll
adc
dec
jae
jg
push
dec
insb
add
push
mov
movsl
lcall
aas
sahf
ret
pop
dec
popa
pop
rorl
mov
cmpsl
or
jno
fsubl
fidivrs
cmpb
or
add
sub
xchg
out
ja
daa
sub
sbb
jbe
pop
bound
sbb
mov
call
outsb
xchg
mov
daa
out
pop
xor
in
add
cmc
jmp
sti
pushf
inc
rorl
aaa
xor
push
es
test
cmpsb
and
scas
rorb
mov
rorb
xor
cltd
pop
sbbl
cmpsl
mov
std
popf
pop
je
push
jg
roll
pop
das
out
mov
icebp
pop
dec
ss
xor
popf
dec
data16
imul
shl
pop
js
pop
loopne
jns
arpl
movsb
loopne
fildll
out
int3
pop
or
cmp
daa
push
jle
mov
in
push
xor
test
loopne
cli
int3
jp
popa
int3
mov
lods
ret
les
inc
xlat
mov
jno
push
mov
test
pop
out
repnz
stc
cmpsl
loopne
mov
out
scas
dec
loop
lock
mov
mov
clc
andb
mov
pop
cmp
out
xor
add
arpl
sbb
mov
popa
jmp
or
mov
push
dec
mov
cmpsb
add
fcmovnb
insb
jb
push
pop
xchg
iret
sbb
sub
pop
mov
in
dec
fisttpl
cmp
test
dec
iret
adc
xchg
and
or
sbbb
rcr
ljmp
repz
mov
inc
pop
inc
fwait
int
cli
loopne
push
jo
in
add
mov
sub
in
push
test
or
mov
out
add
mov
imul
out
roll
js
popf
dec
sbb
mov
dec
dec
push
mov
push
out
push
shll
push
int
loopne
nop
push
lret
pop
test
rcll
jnp
push
add
movsl
test
xchg
inc
fwait
xchg
mov
arpl
clc
bound
xchg
or
out
mov
lods
add
imul
dec
cld
ja
pop
or
xchg
jp
push
jle
out
scas
xchg
enter
cmp
push
adc
arpl
test
push
sahf
inc
push
mov
xor
push
push
movsb
xchg
rcrl
test
shrl
xor
leave
sahf
cs
push
jle
adc
insl
fimuls
pop
xor
lret
test
jecxz
add
insl
lds
dec
clc
and
xchg
sbb
in
xorb
push
pop
jecxz
xchg
call
push
mov
jle
andb
xchg
mov
xchg
xchg
and
in
mov
addr16
mov
repnz
inc
sbb
xchg
faddp
scas
stc
cltd
pop
sub
or
mov
mov
pop
mov
cmp
popa
push
repnz
mov
gs
jl
mov
pop
lahf
xchg
hlt
inc
and
mov
daa
or
sub
pop
pop
rcr
loope
mov
dec
outsl
jge
push
inc
fwait
cmp
push
add
cmp
pop
cmp
shll
std
dec
mov
in
sbb
mov
pop
subb
pop
xchg
cmpsb
scas
ljmp
mov
jbe
hlt
out
mov
sbb
scas
pop
lret
cmpsl
lret
or
addb
andl
cmp
or
outsl
inc
or
pop
inc
insb
or
lods
inc
fwait
pushl
cmpsb
aad
imul
out
sub
dec
cs
outsb
int3
fiadds
les
xchg
es
xchg
cmc
push
or
in
sbb
push
ror
mov
inc
sbb
cs
outsl
ja
pop
push
jne
dec
push
out
jmp
outsb
push
mov
or
out
mul
fdivs
jb
ss
mov
jmp
scas
adc
mov
shrl
rcrl
mov
mov
dec
into
out
jns
out
jge
test
cmp
xor
inc
aas
push
sub
pop
sbb
loop
xchg
adc
pop
sub
xlat
ret
popa
aad
daa
out
sbb
jl
popa
pop
into
inc
aam
mov
sbb
cmpsl
ljmp
lea
dec
lahf
lock
ja
nop
cmp
mov
inc
aam
and
mov
pushf
dec
scas
cmp
cmp
or
xor
repz
mov
mov
mov
push
imul
pusha
test
lods
jne
jle
loope
in
bound
and
insl
inc
inc
bound
jb
xlat
mov
and
lea
inc
in
outsl
les
icebp
jmp
aaa
pop
sbb
arpl
call
repnz
cmc
mov
jmp
pusha
icebp
sub
and
xchg
xor
shl
push
mov
and
mov
mov
movsb
loop
sbb
inc
and
inc
aaa
sti
popf
cmp
cmpsb
scas
inc
iret
adc
xor
outsb
loop
insb
push
sbb
push
mov
movsb
push
push
fbld
lock
dec
ljmp
ljmp
adc
add
jle
into
repnz
xchg
cmpsb
mov
mov
dec
mov
imul
dec
pop
mov
int3
imul
fwait
inc
cwtl
arpl
mov
neg
aas
xor
lret
push
dec
cmp
movsb
aaa
mov
add
outsl
lods
or
xchg
mov
mov
pop
dec
xchg
mov
fisubrl
out
cmp
std
mov
mov
nop
push
repnz
out
adc
sub
arpl
and
push
pop
xchg
aaa
xor
nop
fidivs
cmp
mov
push
lahf
jmp
push
shll
push
pushl
mov
push
xlat
iret
mov
imul
lea
rorl
xlat
lods
or
push
add
mov
add
bound
mov
cmp
ss
popf
leave
mov
xchg
test
popf
dec
out
cmc
push
or
rclb
cmp
mov
in
sbb
lcall
jno
out
stos
jne
movsb
outsl
out
lea
and
adc
jge
pushl
bound
int3
xchg
add
pop
dec
fdivl
push
aam
sbb
clc
sbb
and
in
mov
imul
sub
xor
adc
rolb
imul
hlt
xor
rolb
push
or
push
out
ljmp
fdivrl
push
movsl
adc
orl
mov
cli
mov
lods
push
sbb
adc
jle
sub
js
lret
in
mov
or
or
jmp
push
push
insl
test
out
outsb
mov
push
push
dec
add
mov
mov
fsts
out
out
jmp
jae
cwtl
into
cmp
lock
lcall
xchg
inc
divl
lret
mov
cmpsl
push
mov
enter
dec
jnp
gs
sbb
jno
mov
ret
mov
out
mulb
cltd
adc
mov
fisubl
dec
popa
out
data16
aam
icebp
ret
lret
push
add
testl
dec
lcall
push
sub
adc
push
inc
mov
aaa
inc
xor
mov
or
adcl
sar
pop
xor
mov
xor
pop
rclb
fistps
stos
mov
cmpsl
xlat
mov
push
gs
nop
lods
jb
aam
sbb
pusha
inc
outsb
pop
push
push
dec
pop
into
mov
inc
popl
repz
xadd
dec
and
fiaddl
shlb
scas
xor
out
mov
icebp
dec
xor
in
cmp
xchg
dec
add
test
sbb
sbb
incb
scas
mov
jns
cmp
bound
lock
mov
ja
enter
dec
fsubs
and
pusha
les
in
and
mov
out
push
stos
inc
mov
negl
test
lock
bound
in
insl
lcall
fcmovne
dec
in
mov
push
xchg
popf
pop
xlat
pop
jg
dec
repz
mov
xchg
repnz
sbb
stos
fldt
stc
adc
add
pop
dec
loop
ss
rcrb
sbb
mov
bound
scas
mov
fidivs
lcall
rcrl
xor
test
dec
rcr
dec
imul
mov
nop
movsb
inc
push
mov
testl
push
adcl
shr
arpl
sub
adc
hlt
rcll
cmp
xor
movsb
ljmp
xor
fstpt
cs
andb
mov
in
cld
or
pop
call
sbb
add
push
call
and
in
rcrb
and
das
xchg
mov
dec
cmp
adc
pop
les
mov
popa
out
push
mov
jg
dec
ja
cmp
xchg
sbb
pop
mov
jle
add
data16
inc
aad
iret
call
jmp
int
mov
imul
testb
lea
jae
mov
mov
scas
dec
add
mov
lret
inc
jae
push
xor
push
arpl
and
add
repz
pop
insb
movsb
xchg
push
inc
mov
add
enter
xchg
scas
iret
out
enter
fs
rcl
std
dec
sub
test
in
xchg
pop
cmpb
cmp
mov
les
jl
sub
add
jg
jp
sbb
or
mov
enter
sbb
adc
push
xchg
mov
cmpsb
insb
push
inc
cmpsl
out
out
adc
dec
orl
cmp
mov
and
jle
jle
pop
ja
jb
dec
shl
fisttps
inc
test
adc
stos
mov
mov
sub
bnd
and
mov
fidivs
fists
mov
fmul
push
dec
or
idivb
pop
bound
dec
dec
mov
insb
pop
cmp
mov
xor
imul
jge
into
lock
xchg
mov
dec
icebp
jnp
cld
lahf
dec
test
std
xchg
cli
dec
cmpsl
jl
and
gs
or
cmpps
and
inc
lcall
aaa
mov
stc
pop
out
pop
loope
pop
lcall
dec
lea
insb
inc
and
pop
mov
dec
pop
xchg
fstp
xchg
js
dec
icebp
xchg
and
mov
mov
lret
outsb
jmp
bound
sbb
and
cli
fwait
sarl
xlat
fists
xor
neg
scas
fisubrl
inc
in
lcall
xchg
cs
pop
xchg
mov
dec
ss
or
aas
xchg
inc
inc
jl
pop
fistl
sbb
popf
jp
cmc
cwtl
lcall
and
fs
int3
sbb
pop
xor
xor
cmp
pop
and
ljmp
cmc
xlat
mov
push
cmp
scas
movzbl
int3
imul
mov
cmc
push
in
mov
lret
dec
iret
imul
loop
and
xchg
add
cmp
aam
popf
stos
cmpl
jo
adc
icebp
or
outsb
pop
out
pop
aam
jnp,pt
cmp
mov
xchg
jnp
stos
fmul
call
xor
mov
dec
adc
bnd
mov
mov
push
xor
rol
cmp
sarb
rcrb
push
scas
and
cmp
adc
pop
shrl
lcall
shrb
fisubl
in
inc
aad
mov
dec
jg
pushf
cmc
mov
lcall
nop
push
push
mov
fimuls
lcall
mov
ljmp
add
mov
loopne
inc
pop
xchg
xor
dec
ret
jo
xor
mov
pop
push
pop
pop
sub
bound
inc
jmp
fcomps
paddw
movsb
or
push
jnp
cmpsl
sub
xlat
daa
rcll
sti
mov
add
mov
test
movsb
pop
mov
enter
stc
xor
mov
push
dec
mov
pusha
dec
push
shll
pop
xchg
pop
imul
sbb
pop
mov
insb
aam
movsb
in
ret
adc
push
push
test
iret
xor
inc
sub
out
cmp
into
mov
idivb
fwait
popf
sahf
lods
ss
lea
shlb
mov
insl
jmp
loop
sub
inc
popa
push
mov
in
xchg
jae
std
sbb
dec
jle
call
pop
lock
xlat
xor
enter
addr16
leave
rcll
repnz
fcoml
aaa
pop
fld1
adc
lahf
mov
icebp
sbb
mov
push
sub
imul
xchg
cli
jge
push
gs
or
or
mov
and
add
xor
jae
in
pushf
hlt
ret
mov
or
xchg
push
push
push
shl
jns
bound
repnz
addr16
lret
in
inc
push
out
cld
cmp
push
gs
mov
sbb
cmp
nop
std
js
je
mov
push
push
dec
cmp
in
je
push
imulb
outsl
push
into
jnp
popa
outsb
testb
mov
push
stc
cmp
mov
nop
mulb
ja
add
fldcw
ss
daa
mov
cltd
stos
cmp
enter
subl
push
nop
adc
xlat
sbb
cs
push
lret
ret
je
sub
pop
and
cld
shll
aaa
push
rcrb
lock
jmp
push
inc
out
mov
add
shrl
sahf
fs
xor
sarb
iret
fs
test
pop
jle
push
movsl
je
cmp
fsubrs
sbb
imul
mov
mov
xchg
mov
dec
sbb
cmpsb
je
mov
repz
sub
nop
inc
int3
dec
jmp
xchg
outsb
dec
or
pop
js
cltd
dec
notl
test
xor
shr
pop
pop
cmp
loope
push
push
and
push
mov
test
inc
flds
sti
jle
out
jne
inc
data16
jne
inc
adc
jae
rolb
jle
aas
fcom
divb
repnz
fisubrs
cmpsl
push
ja
pop
out
xor
insl
cwtl
jp
pop
push
scas
int
mov
sub
mov
push
int
pop
cmp
movsb
and
mov
leave
out
inc
xchg
sarb
sarb
jne
dec
inc
fistps
outsb
enter
sarl
into
xchg
outsl
sbb
pop
lret
cmp
aam
pop
mov
cmc
xchg
fisttpll
insl
jge
jle
push
or
xlat
mov
pop
cmp
cwtl
xor
in
sub
test
out
movsb
rcrb
push
xchg
test
pushf
pop
push
mov
scas
dec
call
scas
cmc
rcrb
jg
les
push
add
std
fcmovnbe
cmpsb
in
nop
in
inc
fwait
pop
jl
pop
arpl
jns
jmp
lds
jnp
jo
push
cmc
push
bound
fstps
test
iret
stc
rcl
push
or
push
adc
enter
mov
outsb
mov
inc
fdivs
jmp
add
jo
fcoml
cmp
add
shlb
jmp
cmp
jo
enter
cmc
inc
push
out
loopne
cli
jge
push
lods
or
iret
fimull
ss
cmp
pop
test
dec
mov
xchg
fwait
scas
adc
lea
hlt
ljmp
jno
sub
iret
mov
icebp
push
bound
dec
adc
mov
mov
idivb
popf
mov
mov
dec
ret
movsl
ficoml
in
inc
pop
cld
xlat
sbb
imul
ds
xchg
xlat
dec
pop
sti
sbb
out
iret
mov
or
sub
and
xchg
stos
mov
mov
and
mov
jg
dec
orl
jno
mov
orl
push
sub
in
cmp
into
int3
add
jne
adc
and
sbb
inc
sub
inc
jne
aad
dec
jo
lret
mov
cmp
pop
sarb
cmp
int
pop
pop
ror
mov
pop
fists
fdivrp
pop
lret
pop
jnp
mov
pop
mov
dec
dec
mov
lock
push
pop
andb
es
cmp
lea
push
andl
sbb
ja
xor
lds
scas
aaa
jp
xor
mov
mov
sbb
lahf
dec
insb
fsubrp
sub
repz
cmp
jb
mov
jne
add
cmp
and
mov
add
sti
cld
insb
lods
es
cmc
hlt
xlat
clc
and
cld
and
cmp
pop
fisubl
inc
or
lock
jge
xlat
outsl
pop
sbb
mov
jg
xchg
pushf
jnp
je
inc
enter
cmp
jl
pop
hlt
pop
jecxz
rcrl
in
mov
scas
mov
add
and
dec
adc
decb
inc
in
jnp
das
mov
mov
fwait
dec
mov
sti
fistpll
mov
scas
add
shlb
add
cmp
pop
dec
fbstp
cmp
push
insb
and
jbe
jb
mov
sub
andb
insl
mov
cmp
jb
xor
test
lcall
repz
movsb
push
fiadds
fwait
ds
insb
mov
xor
mov
in
sbb
je
mov
inc
std
mov
or
cmp
test
push
mov
pop
adc
loopne
cmp
or
push
or
addr16
sahf
pop
sub
std
and
add
aad
add
shll
outsb
dec
lods
ss
sahf
xchg
js
xor
testl
inc
fmulp
fwait
xchg
add
mov
mov
mov
int3
pushf
mov
mov
bound
js
out
cmpsb
push
imul
jp
cmpb
sub
or
dec
fistpll
push
or
test
cmove
jl
inc
idivb
into
pushf
fdiv
mov
jne
sub
clc
imul
pop
push
dec
out
cwtl
jbe
loopne
das
mov
inc
pop
mov
imul
fmull
pop
jbe
xchg
sbb
mov
pop
xor
clc
xor
call
movsb
imulb
lea
xor
jae
sbb
pop
xchg
fsubrl
js
outsl
xchg
or
lock
outsb
cltd
mov
fnstenv
outsl
stos
xor
fcoms
cmpsb
fmull
push
xor
aas
loop
sub
out
adcl
push
test
outsb
jle
call
mov
fcmovu
ret
andb
ret
push
fidivrl
push
jae
rorl
jl
jo
cltd
xor
dec
dec
into
jo
and
outsl
push
sbb
push
fisttps
scas
mov
jb
push
adc
mov
cltd
in
call
xorb
stos
push
repnz
mov
xchg
lods
push
xchg
test
cli
or
push
mov
or
scas
mull
xchg
loope
adc
and
dec
movsb
xchg
fsubs
stos
scas
or
xchg
aam
mov
mov
dec
nop
pop
mov
clc
push
cs
adc
jle
inc
jns,pt
sarl
add
sbb
rclb
xchg
test
dec
inc
bound
and
cmp
mov
addb
inc
push
shlb
hlt
or
push
push
jmp
stos
jp
insb
jb
push
jmp
hlt
cmp
mov
aas
popa
xchg
lahf
inc
js
jecxz
sbb
dec
jns
jmp
ss
inc
push
inc
xorl
scas
shrb
imul
mov
xor
and
addl
test
aas
das
sub
inc
insb
mov
pop
xchg
mov
bound
pop
ret
jmp
pushf
fisubrs
jb
aaa
push
pop
push
hlt
fidivrl
pop
pop
add
cmpsb
mov
aad
sti
ret
inc
aas
leave
ss
stos
push
into
jo
jbe
push
push
xchg
jae
cmpsb
push
mov
roll
shlb
sti
push
andl
cmp
mov
scas
dec
mov
fldt
xor
inc
fisttps
cli
pop
icebp
mov
add
pop
jmp
adc
aam
sub
inc
pop
loope
jle
out
pushf
or
je
pop
ficomps
jb
dec
test
lcall
add
mov
loopne
or
jl
data16
xchg
fcompl
mov
lods
jnp
xchg
mov
sbbl
mov
mov
roll
data16
aas
inc
mov
stc
enter
fbld
or
imul
imul
fidivrs
fisttpl
into
outsb
out
ficomps
dec
scas
sub
inc
xor
movb
cltd
dec
sbb
fildl
hlt
cli
aas
pop
cmpsb
std
test
cmp
jo
ror
adc
pop
dec
into
aas
inc
jo
shrb
scas
jle
call
mov
jae
mov
push
or
in
test
mov
dec
and
cld
popa
push
cmpsl
repz
sti
test
ds
out
xchg
aaa
pop
cmp
push
adc
or
xor
fimull
push
mov
inc
ret
sarb
mov
icebp
jae
add
lods
push
mov
jae
add
aas
push
fsts
mov
outsb
out
sub
cmpb
stc
int
idivl
ret
repz
stc
sub
sbb
jae
lea
cli
dec
jb
ret
out
idiv
mov
es
mov
pop
je
or
test
test
mov
push
add
insl
fs
loop
push
mov
test
leave
int
aas
addb
sub
jb
sarw
stos
dec
sub
push
int3
mov
and
pop
cli
mov
dec
popa
out
xchg
push
sub
sbb
rcrl
mov
jp
out
push
outsb
push
call
loop
lret
lret
lea
xlat
lea
jecxz
ds
inc
mov
outsb
or
pop
push
pop
xchg
ret
incl
clc
inc
ficomps
ret
cmp
call
inc
push
pop
mov
gs
pop
pop
cmp
int
and
jge
pop
ja
pop
sub
lea
insl
push
mov
xlat
add
xchg
cs
pusha
or
and
and
lcall
jno
outsb
incb
pusha
loop
xchg
jne
sbb
test
jp
call
jg
dec
mov
out
jmp
mov
popa
dec
push
push
xchg
lods
fs
scas
add
xor
ret
into
paddusb
mov
cmp
fldt
aaa
mov
aad
mov
sarb
fidivl
xchg
hlt
sub
sub
test
ret
or
loop
jmp
jmp
cltd
push
call
repz
push
call
push
iret
push
lods
aam
mov
fcmovnbe
push
mov
sub
and
cmpsl
test
mov
push
js
call
add
in
scas
sar
pop
cwtl
mov
push
mov
jae
cmp
mov
arpl
andb
pop
xchg
test
push
repnz
xor
aaa
iret
pop
scas
xor
insb
data16
sbb
or
mov
and
je
sti
ds
outsb
lock
xchg
sbb
add
icebp
xchg
negb
jmp
jb
xchg
adc
ret
gs
outsl
push
repnz
arpl
daa
jle
adc
mov
scas
push
movsb
nop
adc
add
out
inc
daa
xchg
rclb
test
test
pop
cltd
sub
repnz
jb
cmpsb
pop
mov
xor
ljmp
push
inc
pop
dec
stos
mov
sti
mov
inc
or
sbb
pushf
xor
sub
xchg
insl
push
addr16
push
sbb
sbb
jge
fwait
stos
cmpsl
sbb
mov
jae
repnz
int3
scas
out
test
sahf
sarl
mov
dec
lods
pop
fnstenv
xlat
xchg
add
add
out
mull
jg
xchg
es
das
push
loop
and
mov
push
xor
es
rclb
repz
fistpl
test
out
mov
mov
xlat
dec
or
gs
push
js
lods
nop
pop
cmpsl
lds
loope
loopne
ror
sub
xchg
and
call
jbe
outsb
fmull
sbb
jae
dec
inc
aam
data16
mov
rclb
imul
mov
push
pmaxsw
mov
aad
ja
xchg
dec
sbbb
shlb
mov
mov
xor
or
lahf
push
insb
push
dec
jle
and
jl
adc
fisubrl
push
mov
sub
jae
repz
mov
mov
pusha
outsb
ret
jo
sahf
or
in
mov
jp
pushf
pop
xchg
jge
js
fistpl
push
or
stos
lods
pushw
hlt
fucomi
mov
pop
jo
fisttpll
faddl
testb
shlb
pop
mov
imul
fimuls
sbb
imul
xor
pop
pop
pop
xchg
icebp
pop
das
xchg
add
mov
sbb
dec
add
aaa
ljmp
clc
inc
jo
pop
or
jbe
popa
mov
testb
sbb
into
imul
stos
fisubs
push
push
sub
dec
mov
jbe
lock
loopne
dec
lret
sbb
iret
xor
and
dec
decl
dec
jb
jle
dec
sub
push
jge
add
lods
sub
outsb
or
test
ljmp
push
outsl
lock
pop
jns
adc
inc
cmp
shr
mov
cmp
jmp
aaa
mov
xchg
fwait
adc
mov
xor
xchg
incb
aam
ror
daa
adc
test
cmpsl
ljmp
xchg
pop
ss
cmpl
sub
xchg
enter
adc
stos
pop
sbb
fsubl
jg
lret
fisubrs
add
outsl
jbe
or
xchg
pop
jns
xchg
jns
push
or
pop
out
mov
mov
mulb
arpl
fucom
xor
lds
sbb
dec
test
inc
xor
mov
mov
cmpsb
and
xchg
dec
in
fdivs
adc
lcall
jno
ret
pop
jne
or
dec
cmp
push
mov
dec
repz
mov
lret
into
and
leave
mov
rorb
int
pop
push
inc
inc
push
jne
inc
rcrl
sub
pop
cli
mov
dec
jp
jno
mov
insb
sbb
sarb
popa
xor
lcall
inc
test
adc
rol
mov
mov
sar
cmpsb
mov
aad
ja
push
adc
mov
scas
aad
dec
cmpsb
lret
sub
cmp
jge
pusha
imul
pop
adcb
xchg
push
push
xchg
and
push
ret
jae
mov
pop
inc
cmp
fs
push
dec
ljmp
ljmp
push
int
push
sub
mov
ds
inc
sahf
sarb
mov
scas
dec
mov
cli
push
mov
push
jecxz
ret
push
mov
adc
dec
movsb
dec
mov
and
ret
aad
pop
test
cs
outsb
jle
push
outsb
mov
jo
int
mov
push
je
or
shl
cmpsb
inc
pop
xchg
out
mov
cmp
cmpsb
outsw
or
lea
sub
xorl
sub
jo
scas
adc
cmpsb
pusha
xlat
sub
xor
shll
mov
gs
std
mov
jae
loopne
mov
cmp
mov
add
add
inc
push
faddp
popf
leave
rcl
scas
popa
leave
sub
inc
push
mov
sbb
pxor
fs
cmp
mov
xchg
popa
or
pop
daa
cwtl
push
pop
xlat
mov
loopne
shrb
sbb
cmpl
push
rcrb
push
sbb
jns
jbe
nop
and
std
sub
dec
jbe
pusha
push
cmp
xchg
clc
dec
ss
pop
sub
cmpsb
xchg
int
inc
sbb
lea
or
mov
inc
dec
cmp
inc
pop
outsb
sbb
sbb
hlt
cmpb
xchg
ret
pushf
adc
mov
iret
rorl
fsubs
mov
cmp
jmp
mov
jae
sarb
mov
mov
insb
mov
jo
outsl
icebp
icebp
rorl
push
lahf
jo
xor
dec
shll
pusha
add
test
cmpsb
mov
test
stc
lret
mov
cmp
dec
imul
add
push
push
das
jmp
xchg
popa
lcall
lret
dec
sahf
sub
jl
por
pop
subb
bound
add
push
insl
imul
rorb
pop
stos
mov
repz
lods
call
cmc
mov
movsl
imul
mov
jecxz
adc
popa
test
xchg
xor
inc
test
lds
hlt
repnz
andl
pop
push
ljmp
aas
fisttpll
push
mov
fwait
stos
out
ret
dec
and
iret
sbb
nop
sub
into
dec
mov
insl
mov
je
inc
jo
fiadds
repz
hlt
jecxz
cmp
fiadds
inc
ja
pop
mov
int3
das
add
sub
mov
jb
ss
jne
and
xor
jp
lret
cwtl
jb
fistps
cli
loopne
cmp
xor
xchg
cmpsl
ss
xchg
div
ss
mov
xchg
int3
andl
sub
fdivr
inc
jmp
push
inc
and
mov
outsb
xchg
push
int3
test
mov
and
jl
clc
adc
mov
cmc
mov
repz
jb
jl
data16
mov
stos
adc
arpl
inc
sbb
and
notb
aam
rorl
jle
mov
and
sub
push
mov
sbbl
bound
scas
or
clc
dec
test
movsl
add
movb
or
clc
push
scas
je
sti
inc
jb
cmpsl
or
xor
fiaddl
mov
or
sub
xor
ret
test
jne
sub
leave
test
sbb
pop
xchg
lahf
arpl
insb
sbb
fdivrs
xchg
pop
push
mov
das
rcrl
push
jle
pusha
andl
cmpsl
mov
stos
in
test
fwait
cmp
fs
sbb
xchg
out
xorb
dec
ja
insb
fisubrl
jg
mov
lret
cmc
pusha
imul
stos
mov
outsb
ret
jno
mov
pop
push
popf
dec
xchg
xorl
idivb
fwait
loopne
cltd
pusha
scas
push
outsb
jge
add
lret
sbb
pop
lcall
icebp
inc
xchg
push
cmp
or
sub
cli
add
div
pop
xchg
sub
adc
stos
js
jp
rclb
add
fldenv
mov
jp
mov
rclb
subl
mov
xchg
inc
das
push
hlt
sub
add
popf
push
scas
leave
aam
push
push
mov
mov
icebp
jnp
loop
insb
hlt
mov
mov
nop
xor
push
push
jle
outsb
jns
insb
cmp
rclb
jg
testl
mov
into
jo
push
sti
xor
mov
pop
push
idivb
test
out
add
jmp
imul
dec
cwtl
imul
cwtl
mov
lcall
into
mov
or
mov
ljmp
ljmp
pop
mov
mov
in
or
sarb
hlt
test
jmp
mov
fld
pop
divl
dec
and
sbb
add
push
sbb
iret
jmp
cmp
sub
insl
and
subl
push
stos
push
mov
addr16
jns
add
nop
cmp
or
ss
jp
xor
test
lcall
mov
jae
add
xchg
daa
ficoml
mov
insl
into
leave
pop
or
jl
jo
lods
add
repz
mov
dec
xchg
push
and
incb
pop
pushf
sbb
in
mov
push
pop
fsubrs
rcrl
insl
fdiv
into
xchg
and
pop
mov
lods
mov
cmp
push
enter
arpl
mov
jno
cmc
mov
jns
mov
stos
xor
subb
cmp
les
pushf
mov
mov
mov
jecxz
jae
rcr
pop
add
sahf
fimull
fucom
mov
mov
cmp
pop
dec
jne
adc
flds
icebp
addl
inc
in
pushf
in
test
inc
push
sahf
xchg
lcall
mov
jbe
lods
pop
inc
das
adc
dec
inc
dec
mov
xlat
push
mov
outsb
jno
push
in
mov
pop
jecxz
ds
jo
pop
aam
shlb
xchg
mov
xlat
fdivr
pop
pop
arpl
cltd
push
testb
adc
stc
mov
stos
stos
dec
aam
jl
xchg
sbbb
sub
imul
inc
ljmp
ret
inc
adc
jno
rcr
leave
ljmp
pushf
out
dec
jl
jge
filds
inc
cmp
pop
out
data16
testb
fcompl
out
xchg
mov
pop
jecxz
js
push
dec
insl
or
test
addl
nop
aaa
pop
je
sbb
loopne
xchg
mov
lret
pop
xor
sub
fists
xchg
shll
mov
and
ljmp
push
xor
xor
cmp
jno
mov
out
aaa
fdivrs
add
test
xor
testl
push
lock
cmp
inc
andb
aaa
out
add
jmp
loop
jo
test
outsl
pushf
sbb
mov
in
fistpl
push
into
jns
xlat
ss
int
sub
xor
dec
mov
inc
fcmove
out
stos
enter
rclb
dec
popa
aaa
imul
fldl
dec
cwtl
sbb
xor
sbb
lock
or
adc
mov
cmc
cs
mov
fisubs
push
sti
ret
pop
or
jge
sar
push
movsl
mov
je
jle
mov
or
jns
mov
fsts
inc
loop
enter
sti
cmp
enter
dec
adc
and
or
cmp
filds
scas
add
mov
inc
sub
xor
dec
pop
int
jl
ja
push
jmp
sub
xor
lahf
nop
ljmp
jae
mov
das
add
xor
aad
sub
inc
pop
incb
dec
aad
lcall
dec
adc
lea
dec
aam
cmc
jecxz
test
sti
xchg
lret
adc
inc
lock
mov
cwtl
lret
or
rcrl
daa
int3
pop
xor
ret
in
push
lea
jae
pop
test
sbb
inc
fistpl
call
pushf
rcrl
cmpsl
sahf
pop
test
dec
fucomi
int3
jnp
push
fs
fimull
imul
inc
shlb
imul
jb
inc
mov
jne
or
or
and
inc
stos
ret
cmp
iret
stos
aaa
inc
filds
insl
insl
fldl2t
and
mov
jns
mov
xchg
lock
mov
movsl
push
adc
lods
mov
jmp
loopne
sbb
mov
push
and
sub
popa
imul
popf
cli
into
mov
addr16
mov
int3
cmp
jno
iret
in
in
push
test
jg
pop
push
lcall
or
xchg
or
xchg
sub
and
and
xchg
lcall
push
jbe
cmp
mov
loopne
rcrl
jmp
lods
mov
pop
into
pop
rcr
pop
push
outsb
jle
sub
ret
pop
mov
sahf
mov
js
cmpsb
lret
out
lds
les
push
lea
pop
inc
xchg
cmpsb
test
mov
loope
sub
ss
dec
iret
ss
push
lock
push
test
cmp
mov
jp
lds
xorl
sbb
mov
xchg
clc
cmp
add
inc
xchg
sti
xor
cld
inc
jbe
loop
mov
fsincos
dec
popa
xchg
psubsb
in
pop
push
push
in
push
mov
movb
jge
push
dec
mov
bound
sbbb
stc
mov
fldcw
movsl
pushf
popa
filds
daa
fsubl
mov
loope
outsb
cmp
cmp
in
mov
and
pop
js
pop
push
push
push
clc
test
xor
inc
sbb
clc
scas
imul
push
mov
aaa
data16
fcoml
xchg
jae
mov
mov
push
fs
xor
lea
dec
xchg
ja
or
popa
imul
adc
jb
mov
rorb
int
dec
fdivp
out
dec
incb
sub
or
cltd
and
mov
imul
dec
sub
xchg
fldcw
dec
popa
pushf
cmp
sbb
test
push
nop
mov
push
or
fucomip
xor
push
nop
mov
mov
or
mov
xor
cmp
pop
cmpsb
hlt
inc
xor
sahf
enter
and
sbb
xchg
test
push
mov
rcl
or
xchg
cltd
into
in
inc
and
and
fs
into
cmp
pop
ss
cmp
in
adc
lahf
movsb
cwtl
clc
data16
fs
jl
jnp
adcb
fsubrs
rcr
pop
in
inc
ret
push
imul
test
lods
pop
jl
sbb
xchg
push
mov
cmpb
dec
jns
leave
mov
push
jno
lock
dec
mov
inc
test
xchg
int3
sbb
test
sub
push
jle
jbe
pushf
orl
das
aaa
inc
into
mov
into
insl
or
hlt
push
cmp
stc
ret
mov
xor
ljmp
mov
loopne
pop
cmp
fadds
mov
jb
dec
fimull
inc
shll
test
mov
mov
xchg
ja
into
jns
cmp
xchg
jae
jmp
lcall
push
ss
xchg
pop
sbb
mov
into
sub
in
stc
pop
jno,pn
add
incb
jbe
orb
lret
mov
lods
int3
add
std
sarl
enter
jmp
add
addb
das
sub
mov
push
inc
sub
jb
mov
cmp
push
add
dec
stos
outsb
dec
jo
inc
jae
loopne
xorb
outsb
dec
adc
cmp
mov
into
jne
pop
in
icebp
fiadds
mov
dec
xchg
hlt
insl
or
mov
xchg
repz
icebp
cli
sub
add
insl
bound
pop
xchg
insl
adc
inc
xor
sub
mov
in
inc
sbb
push
fisttpl
pop
xor
mov
sub
lret
roll
jnp
jge
test
xor
je
fwait
test
xor
xor
xchg
cmp
add
test
data16
int
push
cmpsb
sub
cwtl
test
icebp
pop
inc
mov
ret
cmp
cmpsl
out
mov
jg
adc
jae
ret
lahf
jno
and
test
dec
out
test
cs
xchg
or
mov
sub
ficompl
dec
push
mov
repnz
sub
inc
xchg
sahf
cmpsl
ret
rorl
cmp
lods
out
addl
mov
ret
stos
mov
mov
inc
cmp
out
cmpsl
xchg
push
arpl
jns
fisttpl
stos
mov
mov
call
or
and
das
push
fwait
shrl
test
nop
lret
insl
in
or
mov
dec
push
jb
jle
idiv
repnz
cmp
lcall
data16
pop
lea
jbe
lock
cmpsb
inc
jo
dec
ficompl
ffree
dec
fucom
pop
xor
cmp
pop
fwait
int
pop
xor
mov
sbb
push
xchg
test
nop
mov
jge
xor
push
pop
and
mov
inc
push
sub
push
enter
and
push
sahf
or
pop
repnz
jle
jno
int
push
ja
in
arpl
sbb
adc
xchg
out
xor
xchg
sbb
jnp
cmp
xchg
outsl
mov
pop
jbe
add
pop
cs
nop
push
pop
and
fcmovu
repz
sbb
or
into
inc
aaa
dec
jnp
pop
in
xor
pop
test
into
sti
das
aad
cltd
push
lahf
xor
mov
imul
insl
rorl
pop
add
jo
push
mov
stc
dec
mov
mov
add
jne
out
sbb
jge
mov
or
movsb
jp
outsl
cmc
push
das
or
repnz
dec
fstps
xchg
lahf
add
imul
mov
sahf
mov
pop
cmp
push
dec
sub
add
lock
out
push
lcall
arpl
cmp
test
imul
cmp
xchg
lret
push
sub
sbb
loop
cmp
sbb
push
sbb
dec
jno
sub
aaa
out
dec
loope
mov
cmp
repz
mov
dec
aaa
sbb
jno
jns
sub
sbb
and
sahf
xchg
stc
mov
sub
imul
into
pmulhuw
jge
adc
or
cli
cli
jne
dec
xchg
jge
adc
mov
int
and
mov
fldt
push
mov
lret
cwtl
adcl
leave
jo
jmp
push
in
pushf
outsl
mov
adc
idivb
push
fwait
cmp
in
ret
faddl
jns
bound
xor
push
dec
stc
push
jae
push
mov
xor
push
or
arpl
leave
lret
pop
lods
pop
cmp
sahf
pop
xchg
lods
inc
ljmp
ror
xor
testb
inc
test
mov
sbb
xor
cmc
mov
imul
push
sub
clc
lcall
les
mov
adc
add
cmc
push
jg
fisubs
gs
ror
push
aad
imul
stc
lret
scas
dec
push
sbb
scas
add
bound
cmpsb
popa
pop
cwtl
sbb
push
lcall
rclb
sarb
xor
sar
jae
xor
jae
and
sbb
dec
jno
and
inc
dec
pop
sub
hlt
gs
inc
dec
and
xchg
test
jno
imul
cld
int
and
cmp
dec
loop
fsqrt
inc
arpl
stos
add
mov
mov
shlb
cwtl
pop
stc
ficoms
dec
sbb
mov
repnz
sahf
aas
sar
lods
sub
pop
sub
sbbb
inc
test
mov
rolb
lock
mov
fistl
pop
cmp
push
dec
daa
push
shlb
pop
xorb
adc
cmp
inc
mov
and
fst
xchg
mov
mov
cli
aad
repnz
lods
pop
rorb
dec
inc
imul
fidivl
scas
sbb
xabort
mov
in
lret
and
shrb
inc
xorl
dec
mov
movd
sbb
and
mov
ljmp
lret
jmp
pop
cmovp
xchg
or
out
mov
repz
push
roll
adc
and
dec
xor
stos
inc
in
push
pop
add
push
test
sbb
add
jge
lea
push
push
and
pusha
mov
jnp
cmp
repz
pop
js
jo
and
mov
into
mov
lock
imul
push
jns
and
mov
nop
push
icebp
in
sbb
das
loop
testl
out
stos
xchg
mov
dec
dec
pop
fistl
mov
mov
std
ja
stc
daa
pop
fwait
xor
fnstsw
lahf
in
mov
mov
mov
enter
inc
jnp
pop
shr
xor
xor
je
scas
sbb
pop
mov
and
jo
fcmovnbe
out
inc
mov
and
enter
mov
push
dec
sub
insl
enter
xchg
jmp
pop
mov
cmp
cld
xor
push
dec
add
fwait
dec
pushw
lods
cmp
xchg
sub
mov
mov
lret
in
sbb
inc
outsl
sbb
or
ds
mov
xor
adc
xor
pushf
lea
sbb
xor
arpl
ss
mov
adc
xchg
xor
add
repnz
mov
dec
adc
stos
cli
xor
fisttpll
js
scas
psubq
loop
and
les
repnz
call
jae
jmp
jge
daa
enter
into
mov
ja
fnstenv
int
popa
jecxz
adc
out
push
imul
xchg
hlt
idivb
jl
je
movsl
sub
test
mov
aaa
cmp
in
cmpsb
inc
in
daa
or
cmc
in
das
or
lret
jbe
cwtl
ljmp
stc
cmp
jmp
adc
mov
je,pn
xchg
push
cmp
adc
and
jecxz
mov
out
imul
sub
imul
add
mov
xchg
sarb
or
imull
or
rclb
mov
adc
or
imul
fsubrs
enter
jg
outsb
pop
sbb
out
add
sbb
jns
loop
inc
cmp
dec
cmpsb
daa
and
mov
mov
cmpsb
or
mov
xor
lods
add
xor
pop
daa
in
or
pop
and
in
negl
dec
inc
adc
inc
outsl
fcmovnbe
aaa
in
adc
cmpsl
jbe
outsl
dec
dec
adc
std
dec
cmpb
jo
jle
popf
fstpl
scas
jne
cvtdq2ps
lea
insb
aam
icebp
lcall
xchg
pusha
mov
je
fmul
xchg
adc
or
movsl
xor
pop
decb
arpl
xchg
pop
in
xor
ficompl
pop
addl
push
xchg
jmp
lahf
xchg
ja
test
push
or
inc
pop
dec
shll
xor
pop
movsb
dec
icebp
xchg
pusha
rcr
imul
pop
xchg
mov
dec
cmpsl
jnp
xchg
dec
mov
lea
test
dec
filds
mov
lcall
jns
testl
ret
test
jge
lret
mov
lock
and
les
mov
mov
mov
push
and
punpckhwd
push
enter
int3
lcall
repnz
mov
out
mov
and
mov
dec
repnz
mov
dec
movsb
lcall
les
out
mov
clc
push
into
or
mov
loope
mov
out
push
mov
and
push
jmp
jle
stos
fistpll
pop
mov
mov
cmp
lock
cld
mov
lcall
loop
repz
lea
pop
jbe
sarb
pushf
mov
pushf
icebp
fwait
inc
fidivrl
mov
mov
and
mov
cmp
jecxz
or
dec
testl
subl
insl
sub
imul
fstpt
jbe
or
sbb
mov
xchg
xor
xchg
inc
aam
push
sahf
insb
je
and
mov
add
std
push
mov
xchg
loope
jge
cltd
pop
out
push
xor
js
push
mov
jmp
cli
lahf
push
pusha
xor
push
inc
add
cmp
dec
stc
insl
jae
ret
ret
bound
xor
push
lahf
movsb
mov
mov
mov
addr16
repnz
pop
dec
dec
add
push
ficoml
leave
loopne
xchg
mov
or
shlb
int3
std
dec
mov
push
pop
mov
rcrl
adc
pop
mov
icebp
cmp
sarl
and
je
test
mov
out
pop
sbb
test
jmp
inc
cmpsl
mov
subl
loope
mov
sbb
add
pushl
xor
orb
fabs
loopne
sub
outsb
aaa
imul
jp
push
push
and
outsl
pop
add
adc
into
std
xlat
outsl
mov
sub
sbb
xchg
push
pushf
out
ret
dec
fwait
inc
sarl
inc
xor
outsb
or
jg
xor
subb
lock
add
xorb
jns
les
fs
cs
decl
popf
fs
in
js
push
xchg
pop
fs
add
and
mov
mov
xrelease
push
inc
mov
pusha
and
add
lock
pop
das
push
add
push
xor
sbb
imull
lods
mov
dec
pop
xchg
push
xchg
enter
cmc
push
pop
pop
sbb
jne
clc
dec
mov
scas
jne
inc
mov
clc
add
mov
xchg
rcll
push
das
xchg
aas
mov
nop
jno
mov
xchg
or
adc
bound
loop
test
pop
push
xor
mov
dec
in
gs
sbb
fisubs
popa
mov
mov
es
jnp
pop
xchg
adc
test
or
mov
inc
inc
lods
jge
test
shlb
jne
orl
lea
cmp
aam
je
or
xor
mov
push
clc
mov
andb
mov
xchg
sbbl
dec
sbbb
popa
mov
cltd
aas
imul
sti
lret
mov
out
xlat
scas
mov
pop
or
inc
lcall
or
cli
adc
nop
fcmovu
aad
mov
je
cmp
in
mov
test
cmpsl
jmp
scas
pop
mov
xchg
test
dec
jmp
mov
seto
push
or
lahf
imul
enter
popl
xor
sbb
mov
lods
xor
dec
gs
arpl
adc
rorl
jns
jp
arpl
test
icebp
js
pop
mov
insl
mov
mov
add
mov
dec
jne
mov
xchg
fs
imul
inc
fstpt
jb
scas
mov
ljmp
inc
cmp
inc
lds
and
push
inc
imul
movsb
xlat
or
cmp
jmp
sahf
jecxz
dec
lods
out
dec
dec
mov
lods
cmpsw
pop
imul
mov
jno
push
push
adc
str
js
push
pusha
add
data16
nop
push
test
cmovne
inc
dec
mov
xchg
xlat
mov
push
jmp
or
push
lret
xor
jnp
data16
stc
test
test
jne
jne
nop
cltd
in
pop
fisubrs
shlb
or
mov
pop
cmpsl
repz
loopne
loopne
jg
or
insb
sbb
scas
ror
push
stos
dec
mov
inc
jecxz
test
and
orb
addl
ds
ret
mov
cmpsb
mov
pop
pop
pop
add
fisubs
dec
dec
push
ret
sub
mov
dec
test
shll
pop
adc
mov
insb
mov
mov
pop
testl
inc
cmp
xchg
repz
shlb
mov
adc
cmpsl
cld
clc
imul
pop
sbb
sbb
xchg
ss
hlt
sahf
push
sub
xlat
mov
out
popf
pop
cli
cmp
lea
je
decl
xor
loopne
je
enter
dec
jg
or
or
push
lcall
sub
aad
test
psubb
fwait
xchg
pop
xchg
fisubrs
out
rolb
adc
into
dec
dec
sbb
aas
notl
movsl
insb
repnz
scas
hlt
push
scas
inc
nop
mov
add
or
and
push
fcompl
push
dec
push
xchg
pop
stos
and
pop
and
sbb
mov
iret
or
sbb
adc
push
aaa
pushf
into
mov
dec
aas
xchg
cmpsb
push
addr16
es
or
cmp
imul
mov
out
or
stos
fs
cmp
pop
xchg
test
lods
jge
jmp
jbe
jnp
dec
jb
or
mov
or
inc
enter
cmc
leave
ss
adc
pop
inc
sbb
cmp
sbb
dec
inc
loop
test
sahf
das
xchg
sbb
enter
outsb
sub
xor
leave
push
clc
push
sbb
fsubs
daa
pop
sub
cli
jnp
pop
pop
mov
xchg
mov
outsl
in
imul
lods
push
push
ret
dec
adc
sbb
arpl
movsl
push
jb
pop
xchg
std
fwait
test
push
pop
call
adc
xor
clc
xor
ficoms
imul
data16
ds
icebp
jne
jmp
loopne
inc
add
inc
inc
insb
jl
sbb
sahf
xchg
aas
hlt
jp
repnz
movsb
xor
sub
loopne
or
ret
notb
lcall
fcomps
notl
testl
xchg
or
shll
jl
pop
inc
inc
jne
and
in
orl
mov
xchg
dec
mov
outsb
add
nop
scas
pop
jg
adcl
push
mov
push
xor
fwait
push
adcb
movsb
jmp
or
into
out
xchg
add
ficoms
outsb
cmc
push
and
lods
in
mov
push
rclb
lret
subb
loopne
fidivrs
out
idivl
popf
pop
imul
mov
xor
jnp
pop
stos
xor
cld
leave
and
aaa
adc
inc
popf
scas
xchg
filds
mov
and
inc
pop
fwait
sbb
outsl
cld
push
xchg
scas
cwtl
and
addr16
cmc
incl
adc
mov
out
push
cltd
or
cld
dec
stc
push
jl
inc
push
sub
inc
test
xchg
mov
mov
mov
inc
mov
cmp
loopne
rcll
xor
inc
mov
mov
rclb
cmp
stos
popf
mov
pop
push
pushf
cwtl
or
jo
xchg
lds
test
or
aad
dec
inc
scas
mov
iret
sar
inc
out
mov
push
jo
lcall
pusha
test
shlb
stc
push
and
inc
pop
insb
outsl
subl
fiaddl
test
push
out
xchg
outsl
mov
dec
sub
jge
mov
hlt
ljmp
aam
inc
ret
out
push
rorl
push
jnp
rcl
imul
cmp
test
out
nop
mov
in
xchg
dec
push
sub
sub
fs
cli
popf
and
xchg
inc
cmp
enter
xchg
dec
sti
ss
in
and
inc
dec
xchg
pop
rcrb
adc
sti
mov
adc
add
pop
mov
push
xor
ljmp
xor
popa
mov
jns
fstpl
push
add
pop
adc
dec
pushf
div
imul
lock
mov
push
mov
enter
hlt
cld
hlt
and
or
call
xor
lret
cli
jnp
dec
mov
subb
ret
cmp
test
mov
dec
ret
popf
or
xchg
xchg
cmp
push
aad
mov
in
int3
or
lods
shl
dec
mov
into
push
pusha
aad
js
shll
add
hlt
movsl
js
daa
aaa
mov
cs
pop
in
cmp
lcall
dec
lret
and
cmp
jnp
lods
dec
test
or
lds
out
insb
pop
js
movsl
cli
push
andb
cs
ja
push
mov
ret
xor
add
aam
mov
pop
jns
flds
xchg
call
xchg
xchg
scas
in
ret
test
sub
movsb
clc
dec
push
jns
js
divl
jb
aas
out
xchg
adc
xchg
call
rorl
mov
push
outsb
cmp
and
fmuls
sbb
inc
push
push
lret
ficomps
jl
leave
xchg
ss
popa
dec
rcr
sbb
pushf
sahf
scas
mov
stos
push
inc
cmp
jne
lds
jle
xor
cmp
sbb
call
jmp
sbb
insb
xchg
lods
xchg
sbb
sbb
mov
inc
dec
jl
jne
inc
mov
das
xchg
jge
push
xchg
bnd
jmp
cmp
add
jge
jo
sti
shr
sub
clc
rcll
test
fcomps
pop
hlt
add
aaa
sti
mov
sarb
lods
cmpsb
insb
dec
lahf
jb
fsubs
push
ds
xchg
sar
jmp
push
in
das
push
adc
adc
or
fs
pop
mov
addr16
ljmp
or
dec
add
mov
lea
pop
or
inc
adc
xor
lods
cmc
pop
xor
lcall
test
sbb
cs
push
in
mov
pop
shll
sub
enter
add
outsb
aaa
std
mov
iret
loop
cmpsl
push
fcoms
daa
shl
sub
pop
lods
cmp
les
into
inc
ja
arpl
mov
stc
push
pop
scas
xchg
inc
pop
push
cmp
bound
add
sbb
jne
aam
pop
roll
jb
mov
js
js
xor
xchg
or
cmp
xchg
xor
jb
scas
mov
dec
in
dec
cs
out
lods
jbe
mov
mov
sbb
and
xchg
in
and
arpl
das
roll
sbb
mov
mov
cmp
mov
shlb
mov
pop
scas
pop
ret
push
orb
pop
aam
xchg
mov
fdivrl
fcmovu
and
fs
loope
rclb
cmp
mov
loopne
enter
fs
shrb
lods
mov
cmp
xchg
jmp
cltd
cmpsb
push
scas
pop
and
in
dec
hlt
in
in
inc
adc
push
sarb
int
movsb
xchg
outsl
dec
xor
push
lock
push
push
mov
cmp
push
insl
subl
stos
cmp
cmp
out
adc
add
mov
test
and
out
dec
add
aaa
mov
stc
pop
pop
inc
aaa
sub
add
lea
fimull
adc
or
push
rclb
xor
testb
loopne
or
mov
sbbl
mov
sbb
clc
data16
jno
gs
int
out
push
jbe
xchg
pop
xchg
icebp
fsub
jo
ja
fstps
jo
daa
jp
mov
push
stos
xchg
pushf
pop
or
cwtl
push
movsl
mov
lret
or
repnz
adc
mov
out
incb
enter
loopne
lds
outsl
rorl
call
test
mov
or
sbb
xchg
mov
dec
cli
jmp
inc
ss
das
cmp
or
xor
mov
pop
adc
xor
notl
push
mov
sbb
fisubl
pop
inc
pusha
jb
xchg
dec
push
into
pxor
test
fsubl
test
shl
outsl
into
stc
lds
dec
sub
mov
inc
xchg
dec
sbb
xor
rcll
xchg
js
shr
add
jecxz
or
xchg
adc
imul
shlb
ret
or
fimull
addb
mov
jle
in
fisubrl
xor
out
and
in
pop
loopne
aas
xchg
or
lds
stos
out
cmpb
and
sbb
pop
fcoms
sbb
push
out
push
dec
push
negl
outsb
dec
outsl
or
je
xor
dec
dec
mov
jg
out
pop
adc
sub
imul
cmp
jmp
sbbb
mov
push
test
cmp
sub
mov
push
xor
mov
or
sub
sti
lret
addb
scas
sub
mov
cmp
inc
iret
or
repz
mov
xlat
jp
cmp
cmp
cs
out
lods
xchg
jne
mov
push
sahf
mov
test
lods
pop
aad
and
fistps
lret
xchg
pop
out
movsl
jmp
adcb
pop
or
xchg
clc
jl
outsb
cmpsb
int3
push
xchg
lock
fildll
mov
mov
mov
push
stos
and
xchg
scas
cmpsl
inc
mov
xor
fldln2
imul
cmc
dec
sbb
std
xor
mov
cwtl
mull
loope
in
loope
adc
shl
fdivs
jae
pop
sbb
enter
fnstcw
out
daa
and
mov
jbe
fldt
and
cmp
pop
icebp
push
xor
dec
push
rorb
jnp
sbbb
into
jge
mov
lds
sbb
push
and
cwtl
xor
fwait
adc
movsl
jecxz
outsb
outsb
out
pop
out
cmpsb
call
sbb
aaa
mov
enter
outsl
stos
add
fists
subl
push
outsb
mov
pop
arpl
sahf
orl
xor
mov
out
mov
cld
cmp
sbb
into
test
jns,pt
push
scas
fisttpll
push
scas
testb
xchg
pop
push
dec
inc
enter
cmp
mov
add
ret
add
dec
loop
mov
fisubs
insb
jl
mov
iret
les
add
das
scas
leave
push
cmp
cli
mov
fisubs
jp
pop
ficoml
mov
fs
sub
add
jnp
stos
lods
cmc
push
xor
iret
push
inc
mov
jbe
jne
dec
loopne
aad
xchg
add
hlt
aas
mov
popf
cmp
push
sub
pusha
push
mov
ljmp
mov
dec
ficoms
test
ds
pop
inc
xor
pop
shrl
sbb
jmp
mov
add
jecxz
pop
fsubl
fwait
jg
dec
xchg
ja
mov
or
int
jmp
jb
stos
mov
adc
jp
pop
add
xchg
push
jbe
fstl
dec
sti
and
insb
enter
add
adcb
cmp
test
clc
xchg
pop
iret
iret
daa
sahf
sbb
mov
outsl
das
fs
fistpll
mov
inc
jbe
jnp
mov
dec
sbb
out
seto
dec
pop
scas
jecxz
inc
bound
dec
orl
inc
inc
mov
lds
mov
cmpsl
pop
stos
das
mov
pusha
xchg
aas
fmuls
test
cltd
pop
cld
loopne
push
jle
adc
push
jl
scas
loope
call
addl
fiaddl
testl
xchg
int3
push
out
clc
out
loope
fcomps
call
out
insb
jne
cmp
dec
dec
nop
cmp
jge
jmp
mov
jbe
fmuls
js
jbe
ds
mov
lods
faddl
sbb
xchg
aas
cmp
mov
jb
mov
cli
xchg
xchg
into
xchg
out
pop
adc
mov
outsb
mov
dec
lcall
or
inc
mov
mov
sarb
loope
orb
pop
jb
pop
add
inc
scas
mov
popa
xor
sahf
test
or
or
xor
aas
loop
test
repz
enter
jbe
adc
dec
dec
sbb
sahf
mov
sbb
inc
mov
stc
adc
testb
sbb
pop
movsl
sbb
xchg
mov
shll
lock
push
ljmp
lds
in
dec
lret
cmp
xchg
imulb
jbe
and
adc
aaa
out
cmp
movb
stos
push
inc
cmp
ja
mov
scas
in
dec
out
test
lock
test
push
call
mov
cli
pop
dec
gs
push
fwait
ss
push
jle
jb
jae
das
pusha
push
lret
fdivp
mov
test
insb
jg
stc
imul
fsubl
dec
add
mov
cwtl
imul
lret
pop
mov
mov
sbb
js
hlt
inc
inc
xor
add
call
or
jo
dec
inc
xchg
pop
push
cwtl
xchg
dec
imul
fcmovu
jnp
jns
push
xchg
or
push
mov
js
mov
fiaddl
mov
mov
int3
popf
inc
orb
mov
jns
inc
fstpl
gs
sti
dec
insb
into
sub
stc
pushf
pop
scas
cmp
test
popa
addl
push
outsb
insl
push
sbb
or
sahf
out
mov
jo
aaa
out
fmull
push
outsb
or
gs
fadds
mov
mov
loope
push
leave
xchg
inc
outsb
xchg
jno
jnp
push
test
je
popa
fmul
stos
push
lds
xchg
es
jmp
pop
sbb
inc
mov
mov
scas
stos
jnp
fists
mov
adc
lret
out
xchg
mov
xchg
push
xchg
mov
dec
enter
dec
arpl
insl
into
stos
pop
scas
stc
jge
in
dec
bnd
repnz
inc
jns
jg
fisttpll
pop
pop
push
and
or
pusha
add
idivb
jno
jl
pop
andb
dec
mov
adc
jmp
mov
in
int
iret
jp
mov
push
add
fildl
rolb
inc
fidivl
cld
rcrl
push
mov
in
mov
mov
mov
xchg
pop
sub
lods
leave
fists
scas
lea
xchg
adc
addr16
or
xlat
sbb
push
dec
pop
fiaddl
cltd
sti
sahf
or
cli
adc
inc
push
dec
jmp
pop
mov
or
mov
mov
out
nop
addr16
adc
enter
push
incb
and
jo
daa
fwait
cmc
push
dec
cmp
mov
js
jge
das
adc
and
insl
mov
lcall
aad
xchg
jecxz
and
cwtl
je
ret
ds
adc
push
fidivrs
incb
vmovaps
xchg
cld
xchg
scas
xchg
inc
lret
cmp
lahf
jno
xlat
insb
push
int
jp
dec
ret
mov
mov
jmp
ljmp
and
mov
leave
ret
dec
insl
push
clc
mov
stos
shl
pop
shll
xchg
test
lret
dec
or
dec
pop
rcrl
sti
fsubl
pop
jg
fsub
pop
nop
jb
xor
out
out
xlat
mov
mov
fbstp
into
lcall
das
xchg
jle
test
push
xchg
pop
jp
jbe
lahf
fidivrl
mov
mov
xchg
mov
sub
sub
push
cmp
mov
arpl
push
inc
mov
pop
and
jg
xlat
in
loope
in
enter
push
je
ret
in
jno
add
iret
fmul
data16
push
int
pushf
fsubs
cmpb
int
cwtl
push
or
lea
sbb
lcall
int
push
cmpsl
xchg
mov
sbb
es
dec
out
aas
fdivrl
mov
mov
outsb
rorl
mov
and
mov
mov
data16
loopne
dec
and
pop
scas
mov
mov
sarb
out
fwait
push
and
out
mov
dec
pop
test
mov
pop
jle
sbb
inc
jnp
sete
dec
xor
push
xchg
sub
pop
test
mov
jp
leave
add
add
iret
jne
jecxz
pop
jb
cmp
pushf
mov
push
and
imul
pop
les
mov
or
or
fists
icebp
inc
mov
pushf
gs
lahf
and
dec
scas
or
xor
outsb
js
adc
inc
int
and
shll
cmp
xchg
dec
hlt
hlt
int
loop
lahf
mov
shrb
imul
dec
in
pusha
mov
icebp
add
imul
jl
xor
xor
mov
gs
enter
cli
mov
int
dec
movl
jecxz
fistl
mov
call
lret
xlat
adc
lods
cmp
aaa
aam
fildll
mov
call
call
xchg
aas
mov
mov
popa
addr16
inc
dec
xchg
dec
mul
jmp
mov
or
pusha
sahf
aad
pop
divl
jmp
dec
jno
stos
sub
inc
jns
inc
xor
cmp
stos
mov
mull
addr16
mov
in
test
jbe
lods
sbb
push
insb
sahf
repnz
push
lret
insb
push
mov
push
mov
or
imul
ljmp
or
and
enter
and
cmc
mov
outsb
push
aas
adc
sbb
repnz
mov
sub
fxch
sarb
mov
push
dec
xor
enter
inc
mov
cmp
stos
loope
pop
xor
fwait
ror
inc
sub
cmp
mov
dec
negb
fidivl
cli
and
push
sar
dec
in
jns
fs
xchg
push
mov
sbb
mov
stc
adc
dec
fildll
or
mov
push
bound
xchg
mov
mov
cld
sub
ja
jno
mov
cmp
sahf
sbb
stos
mov
jle
sub
nop
cmpsl
stos
lea
je
loopne
dec
cltd
or
ds
fstpl
pop
sbb
or
inc
inc
pop
mov
jle
daa
test
mov
xchg
out
adc
stos
xchg
aaa
inc
sbb
lods
stc
stc
jb
aaa
or
jmp
push
lret
out
inc
push
inc
lock
xchg
fsubrs
shl
or
int3
cltd
dec
cmp
lods
push
or
fs
xchg
push
iret
jnp
and
outsb
or
shrl
pushf
mov
jns
negb
or
cs
mov
mov
dec
mov
inc
into
pop
mov
inc
lods
sbbb
ds
arpl
pop
add
push
sarb
adc
movsl
dec
inc
das
sahf
or
jmp
pusha
or
cmp
test
or
imul
scas
push
dec
aaa
dec
sub
lods
ljmp
mov
mov
dec
dec
mov
xor
sahf
mov
or
dec
jnp
test
cltd
pop
push
sbb
cld
enter
out
inc
imul
adc
mov
cli
dec
dec
das
inc
movsl
loopne
sbb
imul
add
aam
pop
cmpsl
scas
pop
je
mov
and
jns
outsl
xor
sahf
dec
fldcw
xor
fldt
xchg
or
loop
lds
arpl
arpl
in
mov
pushf
inc
sahf
mov
add
lcall
leave
mov
xor
dec
jbe
pop
and
je
dec
jmp
sub
mov
push
decb
push
and
scas
mov
into
ret
cmpsl
or
mov
repz
imul
fdivl
cmpl
push
dec
mov
cmp
and
aas
xor
dec
push
inc
mov
pop
inc
cmp
mov
dec
bound
stc
testl
add
dec
dec
ret
pop
vandpd
ljmp
test
inc
fwait
or
adc
bound
and
cmp
adc
mov
xor
insb
mov
pmuludq
mov
mov
mov
popf
jb
mov
add
pushf
hlt
lcall
rol
jo
mov
mov
scas
popl
mov
ds
sbb
fs
xchg
ret
sti
sub
lret
cmc
mov
dec
out
in
or
adc
js
sbb
fimuls
fsubrs
stos
jno
xchg
and
or
shrl
adc
push
and
jl
mov
push
pop
aad
std
das
mov
adc
hlt
pop
inc
bound
cmp
cwtl
add
loop
outsb
push
hlt
xor
cmp
inc
imul
stos
and
cmp
les
sub
dec
and
lret
pop
jb
cmpsb
cmp
scas
adc
fdivl
xchg
pop
lods
xchg
shlb
outsl
lock
cli
into
lock
call
xchg
outsl
or
bnd
pop
data16
aas
cs
fadd
sti
lret
movsl
test
xchg
push
sub
mov
outsl
cmp
mov
dec
push
lock
das
jb
leave
out
icebp
in
xor
bound
or
shlb
pop
call
ja
mov
dec
jl
mov
lret
idivl
nop
push
push
xor
stos
cs
stos
cmp
ss
cs
jbe
xchg
std
jae
lcall
pop
scas
fnsave
and
or
pushl
add
or
fs
repz
adc
lahf
add
ret
push
mov
lahf
lcall
addr16
add
push
or
mov
lcall
sub
mov
push
insb
inc
sub
mov
jge
cmp
js
inc
push
or
cmpsl
xchg
test
mov
jg
push
roll
les
lret
repnz
mov
popa
mov
push
test
gs
or
mov
adc
rcrb
pusha
mov
pushf
fsubr
pusha
mov
push
out
cmp
fs
push
mov
aam
rolb
xorb
fsubr
cwtl
push
pop
and
lahf
icebp
jbe
inc
stc
lcall
arpl
dec
outsl
in
fsubl
mov
ljmp
pop
mov
outsb
sbb
cmp
mov
test
dec
or
scas
cmc
jo
and
gs
or
pop
and
loop
push
fcmove
cmp
ja
jp
or
decl
scas
pop
movsl
inc
lret
aas
inc
jmp
pop
jae
mov
add
push
mov
insb
dec
scas
and
jne
in
cltd
loopne,pt
adc
add
lcall
pop
cmp
dec
xor
cmp
push
enter
pop
sahf
xchg
insb
or
or
inc
data16
ljmp
shl
jb
lret
cs
aaa
in
push
push
jno
add
mov
xchg
or
fwait
sbb
xor
push
addr16
or
xor
cmpsb
loope
ss
jmp
insb
sahf
pop
jle
ss
jmp
sahf
aaa
dec
ja
mov
mov
mov
das
adc
loopne
or
mov
outsb
or
subb
daa
outsb
mov
dec
push
mov
scas
jae
dec
lds
push
dec
push
sbb
hlt
mov
dec
insl
mov
lods
mov
dec
ficompl
lret
push
pop
cli
or
mov
sub
inc
dec
sbb
sbb
mov
push
add
je
pop
jmp
into
cs
xor
sub
out
add
lahf
mov
mov
shlb
ret
inc
movsl
sbb
test
fimull
movsb
jne
xchg
adc
add
cmpsb
pop
aas
dec
push
aaa
dec
das
jp
xor
lahf
jnp
mov
mov
push
dec
cwtl
aas
cmpsl
sti
dec
cmpsb
or
add
mov
mul
loope
scas
scas
pop
je
add
push
fdivp
enter
xor
negl
jecxz
inc
scas
or
mul
jp
ret
inc
fisttpll
sbb
cmp
outsb
inc
daa
sbb
cmp
xor
lock
gs
call
cmpsb
add
rcrb
pop
pop
cmp
loope
ret
movsl
mov
lcall
mov
fdivrl
out
xor
lock
add
mov
xor
aam
sti
dec
mov
gs
mov
in
andl
add
mov
sbb
test
adc
xor
dec
or
out
repnz
shll
adc
xchg
xchg
stos
adc
push
sub
push
clc
fcompl
mov
jl
arpl
aaa
cwtl
outsb
adc
outsl
jbe
add
add
leave
pop
pop
push
in
das
mov
fstl
mov
pop
pop
dec
inc
in
adc
xor
int3
xor
mov
call
outsb
mov
push
mov
rorl
xchg
movsb
cmc
sub
and
adc
mov
and
sarl
pop
outsl
or
aam
push
xchg
jo
rcrb
rolb
sub
cmpb
sub
jp
fiaddl
ret
and
pushf
jge
cmp
ja
hlt
outsl
xor
push
jp
outsb
mov
movsl
adc
mov
movsb
mov
sbbl
shrl
movd
lcall
daa
cmp
or
sbb
das
rcll
mov
mov
mov
mov
in
cmp
rorl
cmp
jo
cli
bound
or
cmp
xor
or
mov
scas
or
aaa
pslld
pop
xor
mov
dec
iret
inc
adc
push
sahf
xor
sub
push
es
dec
or
imul
push
pop
dec
fs
bound
sub
lret
push
into
push
mov
ficompl
or
das
sub
in
outsb
incb
inc
sub
outsb
or
addl
inc
clc
movsl
lcall
lock
pop
jl
jnp
sub
sub
ret
leave
push
jnp
adc
xchg
mov
pop
mov
mov
xchg
bound
adc
sub
in
mov
pop
mov
lret
pop
or
push
mov
or
fadd
mov
lds
daa
mov
pslld
movsb
mov
adc
xchg
cmpsb
call
cs
testl
push
xchg
stos
int
pop
mov
fdivr
xor
pop
pop
sbb
out
and
cmp
addr16
das
sbb
xor
jge
mov
icebp
sub
push
data16
fldcw
in
adc
popa
mov
jmp
cmp
jecxz
add
dec
inc
xchg
popa
or
inc
and
sti
test
pop
jp
fdivs
mov
in
sub
js
push
jle
lret
loop
outsb
leave
push
test
ss
mov
sarl
xor
xchg
pop
outsl
xchg
lret
gs
or
push
xor
lret
add
int
jo
popa
adcb
pop
icebp
pop
out
xchg
mov
inc
out
imul
or
out
xor
mov
aad
pop
add
dec
push
xchg
sbb
push
ds
test
push
and
mov
arpl
mov
aaa
sbb
lods
loop
ret
xchg
loope
pop
pop
push
arpl
mov
pusha
dec
outsb
arpl
adc
ret
bound
ficompl
push
or
cmp
frstor
or
add
loop
cmc
cwtl
dec
mov
sahf
pop
inc
testb
push
add
cmp
fwait
sti
sub
lock
jp
test
and
imul
push
jmp
push
lds
shr
mov
push
ret
sub
jae
cmpsb
adc
ss
daa
xchg
shl
stos
stc
add
adc
movsb
hlt
inc
test
dec
int
sbb
outsl
jmp
loopne
stc
jo
push
xchg
sbb
adc
cmpsl
adc
lret
mov
pusha
ja
cmpl
inc
iret
lds
dec
dec
mul
push
mov
pop
dec
mov
inc
or
or
jmp
sub
dec
addl
data16
adc
add
ja
push
ror
lret
icebp
push
inc
fdivp
xchg
mov
fimull
insl
js
cmp
rcrl
cmp
shll
push
adc
lret
or
out
sub
ss
js
leave
xchg
pop
repnz
ret
scas
pop
cmc
pop
into
jcxz
add
js
into
mov
pushf
in
xor
dec
dec
imul
mov
xor
sti
insl
mov
cwtl
adc
loop
adc
or
jns
sbb
adc
inc
ficomps
cwtl
sub
or
hlt
movsl
pop
loop
gs
ret
cld
mov
sbb
cmpsl
lret
xchg
jmp
and
cwtl
sarl
jno
xchg
add
arpl
push
mov
add
sbb
push
aam
inc
sub
dec
std
pop
or
aaa
lods
dec
repz
dec
iret
xor
popa
push
nop
xchg
jae
stos
mov
outsl
add
aaa
inc
arpl
add
popa
sub
xchg
xchg
push
idivl
jo
inc
lea
in
dec
aaa
add
xchg
ljmp
mov
xchg
pop
cmp
xchg
popa
mov
push
fidivrs
pop
les
in
cs
loope
mov
mov
ds
or
push
or
into
loope
data16
adc
cld
test
hlt
push
mov
imul
dec
push
mov
cmp
lret
dec
test
icebp
push
dec
loope
push
sbb
mov
or
mov
test
xchg
push
mov
or
lock
bound
push
mov
subb
cmpsb
test
push
xchg
dec
stos
lea
cmp
test
pop
xchg
add
xchg
cs
fs
outsb
cmp
xor
mov
or
adc
inc
inc
fwait
pop
sahf
clc
xor
test
inc
repnz
xchg
enter
test
xor
data16
and
incb
xchg
inc
xchg
xor
rclb
sahf
inc
leave
cmc
or
popa
cld
aas
pop
dec
rclb
sarb
test
mov
iret
movsl
jl
ljmp
xor
sti
stos
mov
jp
rcrb
cmpsl
out
dec
test
mov
rolb
mov
and
nop
outsb
pushf
pop
loopne
mov
jbe
push
stos
add
xor
scas
adc
fwait
dec
data16
mov
mov
add
sub
in
dec
es
or
cmp
push
test
jl
push
or
push
xor
mov
cs
cmp
bound
sub
pop
test
lcall
mov
pop
push
sbbb
xchg
or
push
xor
hlt
lcall
sbb
sub
adcl
mov
test
mov
popl
mov
inc
mov
jmp
push
push
iret
stc
pop
cmp
call
sbb
adc
lret
sbb
in
push
sbb
sti
add
sbb
mov
lock
push
imul
repz
scas
mov
inc
rcl
out
dec
sbb
scas
lea
xor
into
insl
roll
cmp
rcrl
outsl
ljmp
cmc
fmuls
mov
jge
sbb
enter
cld
cmp
dec
lock
aaa
stos
cld
dec
out
adc
sub
inc
xchg
ja
jno
movb
xor
sbb
jno
or
js
mov
push
cmp
and
cmc
hlt
fisubs
push
fs
add
int
sub
mov
pop
test
pop
incb
and
clc
mov
sbbb
pop
std
jno
movsb
sub
in
std
fstps
mov
or
jl
push
pop
lods
lea
fnsave
mov
mov
cmp
es
cmpsb
test
xor
shl
fistps
pop
dec
dec
ja
and
jle
pushf
insb
inc
addr16
ja
mov
jo
cmp
test
call
in
scas
mov
aad
scas
push
pusha
cld
cmp
icebp
xchg
insl
cld
dec
in
out
jae
stos
mov
outsb
jg
adc
fistpll
pop
test
repz
and
enter
cmp
repz
sbb
stos
fs
xor
push
xchg
dec
mov
push
call
push
call
into
fwait
sahf
or
cs
mov
jnp
dec
test
jo
inc
out
dec
and
roll
push
aam
pop
mov
push
dec
jecxz
jg
jmp
notrack
cld
aam
dec
frstor
gs
cmpsb
mov
fimuls
xchg
sub
lcall
jmp
shl
push
dec
push
fsubrl
dec
divb
lcall
mov
jp
cwtl
test
jge
dec
arpl
popa
into
pop
add
lods
mov
xchg
daa
push
mov
sahf
mov
or
divb
add
pop
les
inc
mov
fbstp
mov
adc
lcall
xchg
out
inc
out
ret
and
mov
test
pop
out
inc
enter
aas
jae
dec
mov
stos
imul
insl
dec
decb
out
xchg
ficompl
cmp
pop
gs
enter
and
outsb
test
out
push
dec
shll
adc
jmp
push
xchg
lahf
lahf
push
inc
jb
fdiv
popa
ds
ficompl
out
push
aas
loope
repnz
and
pop
addb
packsswb
ret
pusha
mov
xor
lods
je
mov
push
outsb
or
cwtl
arpl
ss
dec
das
xchg
mov
hlt
xorb
stos
decl
sbb
lret
mov
dec
call
ja
and
and
cwtl
mov
in
xor
jo
outsl
mov
popa
leave
or
xor
popf
je
xchg
dec
dec
divl
ljmp
push
scas
out
or
inc
shlb
fs
push
ss
push
mov
mov
dec
pop
mov
into
fbstp
inc
movsb
test
dec
js
xchg
inc
frstor
lea
fwait
cwtl
test
dec
outsb
into
stos
cmpsb
subl
inc
fisttpl
push
jbe
mov
stos
xchg
xor
aaa
imul
stc
int
pushw
fs
dec
inc
fdivp
xchg
out
add
mov
jg
pusha
jnp
fwait
push
pusha
out
mov
inc
in
leave
and
pop
mov
mov
popf
jbe
lret
dec
out
jne
lods
push
jl
loopne
xchg
mov
rcrb
or
lock
pop
jl
cmp
popa
add
or
movsb
adc
adcl
push
mov
dec
in
push
jbe
mov
lock
hlt
mov
test
or
jbe
dec
mov
popf
jae
add
dec
jno
inc
sub
stos
stc
xlat
fs
stc
imul
xchg
jns
cltd
mov
lds
rorb
movsl
adc
pop
aad
arpl
sub
jno
jp
mov
in
push
out
fstpl
ror
mov
pop
inc
lret
loope
sbb
push
xor
int3
daa
inc
mov
push
lock
out
das
lret
pop
sbb
xor
sub
pop
pop
add
gs
xor
addr16
outsb
mov
sti
mov
mov
popa
outsl
jp,pt
xchg
stos
fistpll
mov
fists
shll
mov
lret
and
pop
xchg
int
ja
pop
push
iret
pop
pand
dec
xor
sub
dec
xor
ds
add
call
or
sub
mov
and
xor
lahf
push
mov
cmp
call
movsb
ja
mulb
mov
cli
mov
sbb
pop
xchg
mov
test
jae
or
loopne
decb
ss
ficoms
mov
lcall
mov
pand
xchg
cld
sbb
int3
push
xchg
cmp
jp
pop
les
inc
push
out
adc
xchg
sarl
repz
jae
fsubr
inc
aad
pushf
fists
dec
cs
insb
jno
xor
addb
mov
add
and
mov
mov
jns
movb
jo
mov
ret
fdivl
push
aas
lods
xlat
adc
in
mov
fbld
or
jno
push
cmp
inc
and
sbb
fidivrs
dec
jg
mov
into
pop
jb
xchg
rcl
mov
push
insl
add
and
fucomi
ret
or
push
add
repnz
ljmp
mov
mov
cmp
and
sub
or
cmp
dec
or
add
cmp
and
ja
jecxz
xchg
jp
cmp
cs
jmp
lret
mul
lock
dec
add
sbb
and
cmp
mov
stos
and
dec
xchg
out
shrl
push
xchg
dec
pop
pop
sahf
jl
cmpsl
int3
mov
in
test
jnp
jmp
fcmovnb
add
or
lock
pusha
mov
lahf
jb
orl
pop
jmp
sahf
jno
cmpsl
xchg
mov
movq
xor
dec
mov
adc
imulb
arpl
inc
pop
rcr
lods
sahf
out
mov
jns
push
xchg
add
push
cmpsb
mov
cld
xor
cltd
jecxz
or
ret
out
xchg
push
hlt
out
xchg
int
cld
jle
aas
mov
adc
icebp
rorl
outsl
or
sar
pop
sbb
lds
xchg
jg
jb
into
lods
xor
ret
jns
lea
jb
add
push
aaa
adc
xor
mov
mov
scas
icebp
add
push
test
cmp
and
xchg
push
jmp
into
lret
sbb
push
jmp
xchg
add
or
testb
and
dec
pop
das
cli
jp
ds
mov
sub
mov
lahf
mov
pop
pop
popa
enter
pop
in
dec
mov
jecxz
push
cltd
cmpsb
sbb
testb
ljmp
xor
out
mov
mov
insl
cmpsb
shrb
scas
mov
bound
mov
add
cmp
adc
adc
scas
lea
push
lcall
int3
xor
mov
mov
pop
loopne
cmp
stos
sub
push
mov
pop
jmp
call
popa
adc
mov
mov
mov
sub
cmc
or
dec
inc
les
rol
pop
pop
mov
jne
dec
sub
jge
nop
pop
ret
ljmp
sbb
and
insb
jle
jg
xor
xchg
inc
sbb
mov
push
sub
jo
mov
out
jo
mov
fdiv
rcr
xor
jg
lret
cmpsl
jns
add
push
mov
inc
loopne
scas
fsub
mov
xor
addr16
mov
sarl
cwtl
cs
pop
jle
movsl
pop
jle
jl
push
or
scas
fmul
jnp
xor
dec
fsubr
clc
jecxz
cltd
sbb
push
mov
pop
pop
sub
out
shrl
or
les
lahf
pop
divl
dec
imul
sbb
jge
mov
out
sbb
mov
xchg
rolb
jge
sbb
gs
and
and
mov
dec
inc
lds
fisubrs
pop
xor
cmp
mov
xchg
sub
out
or
loop
test
enter
sbb
pop
pop
xchg
adc
dec
xchg
push
dec
and
cwtl
pushf
insl
int3
and
scas
xchg
mov
or
dec
cmp
testb
mov
mov
mov
imul
sbb
or
cmp
das
inc
call
movsb
sarl
mov
popl
xor
lea
cmpsb
and
add
adc
nop
shr
lock
lock
cmpsb
ficoms
sbb
lods
jle
jnp
add
dec
ficoml
jnp
notl
andb
sbb
movsb
inc
xchg
sbb
divl
pop
movb
push
ja
test
pop
add
or
out
jl
in
xchg
push
mov
loop
pusha
shll
dec
mov
push
pop
sbb
int3
pop
mov
mov
lret
push
sub
jo
adc
dec
xchg
push
lcall
cmpb
mov
cmpsb
cwtl
jae
cmp
lods
stos
lret
mov
aam
jo
cs
popf
pop
push
sar
insb
jle
mov
popa
loope
lock
sub
lock
or
addr16
test
push
push
xor
pop
mov
jecxz
jbe
xor
mov
mov
fcompl
scas
jge
dec
pushl
jnp
imul
stos
cmc
and
je
aaa
adc
xchg
lcall
or
pop
sbb
idivb
popa
push
dec
sbb
or
and
and
mov
insb
stos
dec
inc
add
xchg
popf
jo
stc
and
pop
pop
push
pop
mov
or
ja
jns
xchg
add
mov
xor
pop
pop
data16
int3
xor
pop
aaa
adc
sarl
mov
sbb
xchg
sbbb
test
ret
ds
inc
pop
fstpl
xorl
mov
pop
dec
xchg
enter
mov
fisubrl
lods
in
xor
lods
push
cs
pop
and
popa
imul
imull
les
adcl
pop
pop
retw
fcmovne
mov
in
dec
daa
sub
in
sti
fldt
lcall
push
and
jp
scas
sbb
fldt
into
xor
pushf
cltd
es
cmp
orb
fiadds
mov
lods
xlat
mov
jp
push
and
push
sar
idiv
and
les
push
test
outsb
or
pop
pop
incb
xchg
mov
adc
fcomps
daa
mulb
inc
cmp
add
js
and
pushf
orl
in
hlt
adc
mov
icebp
jle
mov
stos
dec
sar
pop
cltd
jo
icebp
jnp
xchg
dec
insl
add
push
pop
cltd
push
repnz
and
jb
xrelease
pop
in
jo
scas
enter
ljmp
shll
fists
pop
mov
sbb
mov
push
mov
fwait
loopne
out
mov
add
jmp
loopne
lret
gs
mov
iret
and
push
loop
xor
pop
sahf
push
imul
or
aas
test
fsubrl
dec
sub
decl
push
mov
xchg
xchg
pop
popa
sub
call
subl
push
sbb
xor
stos
fstps
call
xor
xchg
inc
into
mov
call
shll
dec
add
jle
imul
dec
push
push
js
and
adc
xlat
xor
clc
stos
or
stos
shll
aad
sub
decb
push
jg
mov
sbb
push
aam
jbe
fldcw
cwtl
inc
inc
fsubrl
or
stc
jecxz
call
outsb
addr16
shll
jl
or
and
fs
iret
dec
leave
dec
mov
cwtl
xchg
gs
jl
sub
push
adc
lods
adc
or
ss
fiadds
push
rcll
sbb
mov
je
lret
xchg
mov
and
cmp
fisttpll
xchg
in
push
ds
bound
scas
outsl
ljmp
testl
lret
pop
jmp
sbb
mov
cmp
into
or
xor
pop
mov
call
data16
pop
into
ljmp
jno
jecxz
call
inc
jge
cmc
shll
push
iret
cwtl
pop
test
cmp
pushf
cmp
outsb
iret
movsb
test
call
adc
jmp
jnp
add
sti
inc
push
push
loop
or
add
sub
inc
mov
cmp
mov
out
push
orl
stos
filds
push
dec
mov
enter
fimull
push
sti
ljmp
xchg
in
or
xor
out
add
inc
sbb
subl
out
cs
add
jmp
fwait
jae
push
fldl
or
clc
ljmp
add
sbbl
cmp
dec
mov
shlb
fimuls
xlat
mov
jecxz
jnp
rdpmc
in
in
push
jp
aad
popa
pop
or
xchg
jge
into
aad
push
add
mov
lcall
cli
cmp
inc
mov
jp
lods
inc
jmp
pop
test
mov
fiadds
fsubl
les
call
ret
jl
in
insl
shlb
pop
out
jo
into
pop
mov
pop
mov
addr16
das
mov
enter
bnd
mov
ficoms
in
int
xchg
fiadds
cmpsb
imul
shl
cli
out
jne
push
cmp
leave
imul
sub
out
mov
mov
mov
fwait
mov
mov
ja
test
dec
jmp
lret
push
test
sub
push
pop
stos
jno
dec
mov
outsl
fstpl
mov
xchg
fidivs
mov
sub
ja
icebp
or
or
sbb
lock
sbbl
ret
arpl
mov
pushf
fcompl
rorb
jle
cmpsb
shlb
cmpl
inc
mov
scas
stos
push
jbe
dec
out
ret
mov
pop
sub
outsb
rcrb
pop
xchg
jo
pop
sub
xor
addr16
fmuls
icebp
mov
jle
mov
jg
push
fbld
dec
testb
jp
fwait
in
jno
test
add
or
je
jmp
ret
jp
in
xor
incl
jbe
or
movsl
das
repnz
or
and
inc
int3
mov
lret
je
push
js
ret
add
adc
mov
inc
in
jp
mov
push
sahf
jp
fs
mov
int
push
inc
add
cltd
pop
imul
jno
pop
frndint
push
pop
jnp
xor
xorw
mov
in
sub
and
mov
push
shll
ret
fistps
sub
fistpll
out
addr16
push
cmpsl
push
jo
sahf
rorl
pop
shll
adc
and
cmp
mov
outsl
lods
cltd
xchg
xchg
or
fwait
mov
dec
jl
dec
addl
std
popf
mov
pusha
cli
cld
leave
xadd
add
sub
inc
lods
and
sti
data16
test
dec
fwait
stc
adc
xchg
inc
mov
cmp
sbb
fs
pop
mov
or
pop
adc
pop
push
into
leave
pop
push
ljmp
pop
decl
mov
lods
rorb
pop
add
stos
cmc
push
mov
xor
push
jg
jne
jecxz
push
insb
scas
mov
outsb
pushf
shll
inc
out
mov
iret
icebp
aad
push
fs
inc
ljmp
inc
cmp
sub
pop
adc
dec
outsl
sbb
dec
pop
mov
out
xor
pop
divb
or
imul
test
iret
je
pop
popa
inc
into
out
jge
in
mov
push
pop
dec
lods
das
sahf
adc
inc
add
cmpsb
stos
ljmp
inc
xchg
lcall
lret
orb
push
lock
inc
mov
jbe
mov
lods
bound
shlb
mull
test
or
aaa
push
sbb
stos
mov
add
adc
fwait
xor
js
inc
or
add
in
icebp
mov
sbb
dec
mov
push
daa
gs
cli
test
scas
aam
insl
jbe
sbb
lea
xchg
jns
lahf
xor
outsl
mov
or
sub
sub
lret
push
xchg
sbb
inc
aam
jle
aaa
aaa
pop
or
inc
gs
lret
outsl
int3
and
test
mov
je
pop
sub
dec
stos
xchg
xchg
pop
fcomi
cmp
mov
push
pop
outsb
cmp
push
test
test
jbe
pop
cld
inc
push
dec
hlt
or
push
hlt
fsubl
bound
mov
std
gs
mov
jb
outsl
rolb
outsb
sarb
dec
popa
ficoms
xchg
mov
pop
fsubl
adc
mov
or
fs
mov
ret
mov
fcomip
mov
repnz
push
mov
int3
cmp
mov
mov
leave
int3
aam
cmp
mov
data16
mov
inc
ljmp
mov
adc
push
cmpsb
lret
or
and
hlt
pop
adc
or
lret
fbstp
mov
add
add
cmp
xor
inc
stos
mov
cmpsl
aam
cmc
sbb
pop
test
orb
sbb
mov
pop
push
mov
cmp
push
or
sbb
popa
xor
xor
dec
push
lock
dec
fistl
dec
mov
cs
adc
movsb
push
outsl
popf
hlt
jo
jmp
in
es
mov
xchg
imul
adc
clc
repz
fs
dec
or
in
pop
or
out
or
and
mov
es
or
xor
lret
dec
mov
loop
adc
fisubl
pop
push
jle
arpl
mov
rorb
ss
and
mov
add
nop
inc
loop
ljmp
dec
jns
rol
pop
push
cmp
jns
add
std
shll
jmp
clc
xchg
xchg
add
pop
xor
mov
int3
jno
and
mov
shll
add
adcb
mov
lods
es
loope
mov
pop
addb
lcall
pop
out
popa
fmull
and
lcall
test
pop
xchg
dec
bnd
lcall
out
add
mov
or
pop
mov
sub
fisttpl
fldenv
pop
popa
ret
jo
mov
mov
loopne
push
je
jno
push
insl
ds
insl
sti
sbb
aaa
rorl
in
add
push
in
add
out
fsubs
sub
push
pop
or
inc
shll
xchg
jo
and
pop
icebp
pop
inc
mov
jl
mov
sbb
dec
gs
pushl
pop
lock
popa
cltd
mov
jp
jmp
jmp
mov
pop
dec
dec
iret
scas
test
or
or
cltd
scas
mov
ret
cwtl
mov
out
sti
dec
movsb
sbb
cmpsb
jne
outsb
fidivs
hlt
in
icebp
stos
mov
or
mov
fidivrs
dec
ror
iret
xor
ds
pop
cmp
mov
stos
mov
xor
and
lret
shr
jge
into
lds
cltd
pop
xchg
pop
rorb
std
mov
xor
arpl
mov
cwtl
cltd
xorl
xchg
push
inc
lcall
jg
and
mov
mov
loop
adc
rcrb
das
or
sbb
fdivrl
stc
fdivr
push
aaa
mov
std
aas
push
ss
xor
out
test
cmp
jmp
sti
test
scas
dec
cmp
pusha
out
xor
cmc
jne
jp
aas
ret
pop
int3
adc
lods
inc
xlat
lods
xchg
lcall
mov
in
push
push
ja
inc
jno
push
iret
mov
jl
inc
imul
dec
sbb
and
ret
outsb
daa
lods
fimull
testb
jnp
out
outsl
push
push
addl
fwait
mov
fs
push
rcrb
mov
add
push
xor
movb
fnsave
and
loopne
inc
cmpsb
xlat
sub
cmp
call
mov
jg
cwtl
addr16
push
inc
mov
mov
pop
mov
lahf
insl
lcall
int3
ljmp
movsb
xchg
out
sbb
pushf
push
mov
adc
out
cmp
int
loopne
xor
arpl
bound
jo
lods
int3
push
and
cld
push
popf
pop
pop
outsb
js
out
sub
popa
push
loope
cmp
mov
mov
enter
inc
ljmp
push
pop
fistpll
and
enter
inc
xlat
mov
or
jle
pop
div
dec
enter
xchg
insl
or
push
push
mov
sbb
adc
imul
or
shr
gs
addl
jge
int
stos
ja
cmp
cmc
dec
jle
or
push
mov
cmp
shrb
jmp
xchg
fsubl
in
mov
pop
xchg
loopne
call
sar
icebp
gs
sub
pop
push
cmp
imul
mov
sbb
push
stc
std
popl
imul
sarl
or
out
jmp
cwtl
dec
mov
sbb
dec
in
jmp
fisttpll
cmp
int3
fstpl
xor
int
jne
lea
xchg
xor
in
sahf
mov
mov
cmp
and
sahf
fcmovnbe
enter
mov
ficoml
xchg
add
xor
stos
int
scas
push
xor
mov
sti
xchg
into
nop
shlb
xor
repnz
jae
mov
push
pushf
lret
mov
mov
jecxz
mov
std
or
fwait
movsb
xchg
cmp
into
nop
mov
mov
xchg
push
out
mov
or
ret
or
dec
daa
mov
sub
dec
incl
add
add
int3
push
rorw
mov
push
jo
dec
pop
dec
xor
stos
pop
mov
daa
pop
int3
pushf
imul
xchg
scas
pop
sahf
enter
xor
mov
or
add
pop
or
push
ret
rorl
cmp
outsl
into
pop
sbb
ret
pop
sbb
dec
movsl
mov
xorl
lcall
mov
xlat
js
xchg
sub
fadds
in
lock
sbb
mov
sub
dec
xor
push
scas
push
les
dec
mov
imul
das
xchg
push
mov
repz
push
shrb
sbb
xor
push
xchg
dec
sbb
decl
xor
ja
ret
cmp
loope
mov
int
mov
xchg
cltd
cwtl
inc
ljmp
mov
or
mov
pop
into
sti
daa
arpl
sbb
adc
jl
add
mov
xchg
cmpsb
sub
xchg
mov
pop
iret
pop
call
imul
das
and
or
mov
fbld
jne
sbb
xchg
shlb
lahf
cmp
mov
arpl
adc
imul
das
aam
jmp
incb
ret
arpl
insl
sub
jno
push
xor
pop
adc
mov
cmp
sub
inc
repz
idivb
xor
jb
cmc
push
sbb
mov
xor
sub
in
pop
std
xchg
sub
fistl
fsubp
xor
cld
pop
lret
out
call
ds
mov
mov
pop
jb
jae
sbb
push
out
jno
cwtl
out
cmp
xchg
xor
mov
xor
popa
jnp
dec
xchg
mov
lock
cwtl
mov
pop
or
neg
flds
lock
adc
shll
in
arpl
mov
push
rol
stos
inc
mov
es
pushf
stos
cmp
push
push
sub
pop
cli
mov
ljmp
in
dec
cmc
push
and
pop
inc
cmp
cmpsb
lret
je
loop
pop
sarb
fs
test
xor
adc
fidivl
stc
insl
add
push
ret
aad
aam
sbb
mov
xchg
fsts
cmp
iret
inc
out
mov
test
jo
jo
pop
arpl
cmpsl
jno
loopne
pop
ljmp
repz
ret
and
mov
sub
pop
push
adc
in
shlb
ljmp
jb
repz
xlat
pop
push
push
mov
jmp
dec
pop
lret
pop
push
neg
or
bound
inc
shlb
mov
jle
sub
pop
nop
mov
or
xchg
imul
inc
cli
test
outsl
mov
mov
es
loop
into
jge
fisubrs
mov
mov
push
jle
lahf
mov
sub
mov
mov
adc
pusha
mov
pop
jbe
loope
out
lahf
cmpsl
rcrb
adc
mov
add
or
insl
jle
inc
push
sub
pop
fwait
out
repz
loop
outsb
pop
push
test
scas
stos
mull
sbb
scas
dec
and
lcall
mov
ljmp
mov
mov
mov
add
cs
cmp
aad
out
xchg
or
addr16
pop
enter
leave
dec
xchg
icebp
push
cld
or
and
bound
push
xchg
cmp
push
cs
push
and
ficoml
xchg
incb
fs
inc
fldenv
and
outsb
cmp
inc
fstl
inc
inc
pop
mov
dec
inc
sub
cmp
mov
daa
das
mov
divb
pushf
or
cld
lea
cmpsb
outsl
test
xrelease
sarb
dec
sbb
inc
popa
push
cmp
pop
inc
aaa
xchg
movsb
sarb
mov
inc
pop
pop
out
lret
std
cmp
mov
mov
repnz
subb
imul
jae
xchg
pop
or
mov
inc
adc
lods
insb
aas
in
insl
mov
adc
push
cmpsl
mov
push
bound
inc
out
scas
adc
jnp
lret
nop
lret
rcl
mov
mov
data16
jae
mov
out
sti
lret
and
aaa
imul
push
int3
popf
jmp
sub
push
out
rol
fstps
cli
mov
push
stos
mov
pop
andl
pop
adc
xchg
jp
and
mov
xchg
cmpsb
mov
cwtl
mov
cmpsl
lods
sbb
arpl
xchg
fs
stc
outsl
jb
mov
pop
mov
xchg
movsb
jae
lret
push
mov
out
xor
addr16
jg
je
inc
xchg
es
test
or
mov
enter
push
jae
jecxz
add
jns
dec
lds
cli
and
cmpsl
sbb
push
dec
fstpt
sbb
js
pop
adcl
push
leave
mov
pushf
lds
fdivrs
aad
js
int
jno
ror
push
and
addr16
cli
xlat
mov
sub
ljmp
into
sub
xor
outsb
push
outsb
ret
jmp
dec
jae
sti
bound
stos
xchg
addb
addr16
inc
in
lahf
dec
dec
mov
popf
push
xor
insl
xor
push
shrl
adc
sbb
sub
pop
out
cld
js
das
jg
test
cmp
mov
hlt
jl
nop
cmp
stc
fwait
cmp
inc
clc
ret
sahf
lods
stos
icebp
jae
push
adc
mov
jnp
sub
and
test
sbb
add
mov
ljmp
cwtl
ret
push
push
jb
jle
jmp
sub
mov
test
mov
xchg
bound
xchg
testb
lods
cmpsb
jmp
cmpsl
jl
jmp
fldt
loopne
andb
fdiv
cld
lods
out
dec
xchg
cmpsb
cmpsw
ret
push
adcb
test
sub
jp
sbb
mov
sbb
inc
sub
in
lret
and
repnz
adc
xchg
sahf
and
lods
lcall
int
gs
cmpsb
dec
sbb
loopne
jmp
test
cltd
pop
pop
div
cltd
mov
outsb
leave
mov
jecxz
sub
scas
cmp
sbb
lds
add
daa
push
xor
fwait
movsl
andl
or
mov
js
cmp
scas
popf
push
je
mov
push
andb
cltd
lock
pushf
addr16
fsts
out
adc
loopne
push
mov
outsb
fisubrl
mov
or
je
add
je
std
cld
out
or
fsubl
and
lret
insl
vcvttps2dq
je
xor
ljmp
clc
lea
in
mov
lcall
mov
movsl
stos
cs
dec
cmp
add
adc
sbb
xorl
out
and
aaa
mov
pop
pop
xchg
icebp
and
popf
data16
and
pop
sbb
fwait
push
arpl
jne
inc
inc
in
add
test
push
mov
es
out
lods
and
mov
jmp
jl
popa
lock
jns
jg
sub
sti
or
pop
pop
outsl
fwait
mov
ja
push
and
rorb
js
sbb
push
lds
push
in
pop
dec
fnstenv
aad
js
xchg
push
iret
mov
sbb
lock
sbb
ja
mov
aad
stos
jb
add
lods
dec
dec
xchg
int3
push
mov
sub
imul
mov
nop
shrb
inc
movsb
insb
stos
clc
sub
adc
adc
dec
sub
cmp
inc
mov
mov
and
add
mov
push
iret
test
ljmp
scas
push
jbe
mov
scas
fisubl
divb
mov
mov
push
adc
call
nop
push
shr
jle,pn
adc
inc
aam
pop
dec
fbld
ljmp
sub
xor
scas
roll
push
adc
movsb
pop
inc
cmpsb
cmp
push
loope
xchg
xchg
push
sub
xor
cmc
int
pop
xchg
js
push
in
add
pop
sbb
push
imul
dec
push
sbb
dec
add
shlb
xchg
cmpsl
std
lea
fistl
or
sbb
xchg
add
dec
movsl
out
adc
fst
xorb
and
lea
xor
nop
test
cmpl
add
mov
jae
pop
dec
adc
cwtl
int3
test
pop
xchg
ret
and
dec
jecxz
mov
repz
sub
sbb
sti
lcall
add
adc
std
rorb
mov
mov
push
xchg
mov
repz
out
fisubrl
or
push
xchg
push
dec
je
or
adc
add
or
add
cmpsb
sub
out
push
push
mov
dec
pop
aam
sbb
lods
inc
sti
pop
pop
jl
push
pop
mov
pop
call
xor
bound
push
mov
push
repz
rorb
nop
addr16
cmp
js
jp
leave
into
fdivl
pop
dec
enter
sub
or
int3
mov
xor
lock
pop
ss
mov
repnz
lret
stos
bound
xchg
gs
out
out
mov
stos
pop
scas
or
push
aas
sbb
gs
mov
repnz
xchg
call
test
push
jno
call
pop
rcrb
xlat
or
clc
sbbl
xor
lds
mov
pop
adc
add
fimull
pushf
sbbb
aas
sub
es
pushf
xor
repnz
mov
pop
cs
sbb
lods
cmp
dec
and
loope
inc
pushf
sub
sub
cmp
sbb
mov
sub
ret
ds
push
push
out
mov
lret
pop
cmp
test
xor
fistpl
cmc
nop
xchg
push
xchg
push
mov
shll
jmp
mov
mov
in
lret
mov
outsb
sbb
sbb
cmp
mov
and
dec
outsl
or
push
into
pop
or
cmpsb
cmp
adcl
dec
or
cmpsb
shlb
sbb
mov
insb
fucomp
sbb
enter
sbb
mov
push
and
mov
stos
cli
fsubs
test
test
mov
dec
mov
int3
test
cld
scas
sub
dec
pmovmskb
repnz
dec
push
cmp
cld
pop
hlt
fwait
mov
adc
fdivrs
xchg
cmpsb
bound
pcmpeqd
std
loop
adc
ss
mov
pop
inc
and
test
test
es
push
fistl
sub
jno
lea
push
int
jecxz
adc
xchg
jnp
and
xor
shrb
xchg
adc
mov
lea
adc
mov
imul
mov
pop
pop
dec
mov
push
sbb
pop
scas
outsl
int3
mov
xor
pop
pop
dec
fbld
or
cltd
in
push
std
sub
jnp
xor
push
dec
xchg
add
dec
jge
push
and
inc
dec
inc
push
inc
add
xchg
adc
movsb
dec
and
cmp
mov
pop
js
pop
pop
xor
addr16
and
dec
inc
ds
adc
cmp
imul
cmp
jno
mov
iret
inc
rep
loop
or
sbb
mov
popl
nop
les
js
cmp
sahf
subl
movsl
loopne
pushf
pop
sub
push
xchg
out
cltd
ljmp
jae
lock
mov
sub
push
mov
jbe
mov
addl
inc
iret
push
scas
sbb
dec
movsb
xor
cs
push
add
je
in
xchg
es
movsb
fdivl
fiaddl
inc
cmp
mov
xlat
stc
in
dec
inc
fld
and
stos
clc
aaa
insb
nop
mov
into
outsl
push
pop
push
outsb
push
xchg
sti
fdivs
cs
mov
pop
adc
sbb
fisttpl
dec
sbb
pop
push
ficomps
dec
mov
cmp
repnz
jp
outsl
pop
xchg
int3
or
cmpsb
call
add
mov
repnz
add
mov
xchg
xchg
insb
xor
add
and
or
push
and
lea
push
adcl
outsb
imul
pop
fdivl
mov
enter
add
sarb
popf
ficoms
cltd
loopne
pop
lock
icebp
mov
jo
adc
scas
xchg
stos
into
ja
or
outsb
mov
mov
jns
jp
insl
push
and
in
mov
pop
and
inc
cmpsb
cmovno
leave
sti
xchg
sub
out
aad
js
cmp
je
jnp
jbe
test
pop
sahf
dec
inc
sub
hlt
xchg
add
cmp
inc
cmp
outsl
sbb
cltd
mov
dec
repz
dec
rol
inc
mov
jmp
cmpsl
dec
in
jle
int3
insb
ljmp
inc
hlt
imul
stc
test
stos
or
sti
and
inc
push
ret
out
subb
or
pop
popf
test
push
lock
and
shrl
rclb
int
out
mov
popl
pusha
enter
inc
shlb
pop
inc
dec
jbe
fidivs
or
lods
add
dec
out
xchg
jnp
rolb
frstor
pushf
dec
sti
jbe
pop
xor
gs
lock
jl
shrb
imul
xor
test
cli
rcrl
cmp
or
mov
setle
incb
mov
add
clc
mov
jecxz
xchg
pop
xor
hlt
mov
add
or
repz
xchg
imul
xor
push
mov
jbe
jbe
or
es
addr16
push
mov
nop
xor
test
out
ljmp
ret
jg
test
mov
push
add
inc
jbe
addr16
xchg
movsb
and
cs
cltd
mov
adc
dec
leave
outsb
xchg
test
mov
mov
into
sub
lret
incl
sbb
andb
push
fstpl
aad
ret
cwtl
daa
outsl
mov
adc
ret
xorb
lret
dec
adc
dec
push
rep
lahf
scas
fisttpll
addr16
rcrl
jnp
sbb
mov
test
imul
int
inc
jae
mov
aad
jns
mov
push
fisttpl
pop
xchg
jbe
xchg
mov
jg
pop
mov
xchg
push
xchg
mov
inc
insl
lretw
dec
lock
mov
jecxz
cli
in
andb
push
pop
lcall
xor
cmp
sbb
cli
add
jp
sbbl
mov
pusha
mov
cmpsl
jnp
outsl
fcmovne
push
rorl
adc
jecxz
outsb
mov
xchg
ret
in
adc
jp
push
push
jb
jno
push
popf
xchg
repz
test
ret
ljmp
mov
fisubrl
aam
bound
push
pop
orb
sahf
and
outsl
mov
lock
jmp
pop
bound
xchg
divl
aam
mov
jl
push
leave
in
sahf
dec
cmp
add
or
dec
dec
ret
cs
addb
das
jle
adc
fwait
adc
mov
pop
mov
aad
nop
sbb
dec
push
aas
mov
lea
or
cmp
out
lea
pusha
sub
mov
push
dec
insb
dec
dec
sarb
stos
push
iret
jmp
mov
adc
imul
lock
mov
cs
sub
mov
xchg
jo
int
sbb
pop
mov
and
cmc
loope
imul
mov
push
lea
push
in
fwait
jp
bnd
mov
push
aas
xor
pop
adcl
or
mov
push
je
cmpb
xchg
fs
sub
dec
stos
fldl
dec
add
cmp
inc
add
data16
mov
mov
push
mov
out
jns
scas
cmp
jg
repz
frstor
mov
outsb
add
cli
fildl
fisttpl
mov
rcl
xchg
arpl
fisubl
push
test
mov
fdivl
pop
in
icebp
xchg
cmpsb
sub
stc
dec
and
push
shll
test
in
dec
outsb
lds
xor
jle
push
test
stc
jae
mov
xchg
bound
repnz
cwtl
pop
inc
repnz
mov
test
cmp
lods
mov
out
mov
adc
jnp
jbe
jge
pop
push
jg
rorb
pop
daa
mov
in
in
aas
and
xchg
jo
and
scas
mov
jge
das
outsl
into
nop
dec
outsl
dec
incb
jo
and
in
leave
push
les
arpl
outsb
pushf
out
in
mov
cmovb
mov
or
xchg
fisubs
cmp
ficompl
lcall
arpl
cmp
or
mov
jns
jbe
cmp
xchg
jnp
iret
js
and
cmpsl
outsb
xchg
push
cwtl
and
sub
mov
imul
stc
mov
orl
aam
cmp
xlat
xchg
fsubl
sbb
inc
ds
ss
inc
ljmp
push
cmp
sahf
dec
aad
and
xchg
int
mov
xor
lock
out
xor
shl
adc
adc
pop
loopne
rcr
cmp
xor
popf
and
jg
push
std
xor
lcall
movsb
add
jmp
cli
add
mov
shlb
ss
mov
dec
test
lret
mov
inc
inc
lret
adc
arpl
das
icebp
testb
adc
in
cld
inc
push
testb
push
ret
out
cli
fbstp
fmulp
sbb
xor
jns
std
stos
lret
dec
not
gs
xor
out
xchg
das
scas
mov
movsl
dec
pop
xchg
cld
enter
cld
mov
mov
push
cmp
rcr
repnz
bound
lock
mov
arpl
pop
lret
popf
push
int3
test
jb
outsb
xor
into
lret
insl
fwait
cmpsl
or
mov
in
cmp
enter
jge
sub
sbb
dec
call
loop
jecxz
jb
mov
xor
sbb
test
mov
cmp
aas
cmp
ljmp
scas
dec
and
fs
fs
hlt
inc
dec
push
rolb
into
sub
cs
jecxz
addb
adc
repnz
push
inc
jbe
mov
lods
fwait
xchg
nop
sbb
xchg
jecxz
jg
popa
aas
nop
pop
add
lock
sbb
sbb
sub
test
aaa
aam
ret
rcrl
jno
dec
sub
mov
icebp
dec
enter
dec
mov
cmp
pusha
andb
dec
je
dec
lods
test
pop
jp
xor
fnstenv
mov
xchg
mov
cmp
push
stos
dec
adc
mov
popf
mov
cmp
cmp
mov
mov
mov
and
fucomp
dec
pop
pop
sbb
mov
mov
adc
lcall
and
inc
push
scas
mov
or
andb
cmpsb
jp
outsl
inc
leave
bound
dec
adc
xor
pop
pop
sti
dec
cmpsb
bound
mov
lret
xchg
jl
sub
in
and
sbb
cmpsb
ds
mov
fs
add
xor
cmpsb
add
jb
lret
push
xor
pusha
test
add
lret
lahf
lds
popf
and
aad
sub
xlat
xchg
and
pop
fucomp
push
inc
xchg
inc
pop
jle
jb
sub
popf
leave
hlt
jns
shl
inc
sarb
sbb
js
addr16
mov
push
adc
pop
mov
pop
mov
sbb
xchg
mov
in
lcall
cmp
bound
femms
jg
sbb
pop
lods
mov
aam
insb
mov
xchg
sbb
popa
int3
ss
push
mov
les
sar
popf
mov
sbb
hlt
add
imul
rcrb
xchg
push
fisubs
insb
scas
inc
fisubs
push
lods
fmuls
jbe
imul
dec
xor
jle
jno
and
cs
pop
repz
sahf
jb
adc
daa
negl
scas
inc
data16
jbe
cld
xlat
aaa
and
xchg
sub
dec
mov
mov
pop
es
clc
and
or
stc
cmpsb
and
jg
push
jo
mov
jle
pusha
lcall
nop
hlt
xchg
call
dec
jge
mov
int3
cld
adcb
cmp
jbe
outsl
rclb
int3
push
in
jmp
call
and
jno
xchg
sarb
push
jl
add
lea
pop
jp
sbb
adc
cli
jbe
stos
pop
mov
clc
decl
int
mov
sbb
imul
or
mov
ret
fimull
dec
jns
inc
dec
pop
dec
into
mov
aas
jb
mov
push
pusha
add
loope
pop
clc
push
jmp
loop
fimull
dec
andl
pop
dec
leave
and
push
sti
pop
cli
cmp
sti
repz
jp
pop
hlt
aad
lret
xor
stos
push
cmp
pop
pop
dec
adc
mov
xor
movsb
fsubl
lahf
dec
outsl
test
mov
and
cltd
in
push
sub
sahf
popa
movsl
fnstcw
and
or
push
sbb
sbb
cli
add
jle
andb
lea
iret
icebp
push
dec
jg
or
push
test
jbe
or
test
mov
repz
scas
mov
sbb
fisttpll
sub
mov
and
sub
cmpsb
pushf
fdivl
mov
add
pop
or
and
fadds
push
je
outsb
add
sub
pop
addb
xchg
loopne
jns
jle
push
les
xchg
or
fsin
dec
pop
xor
popa
mov
cmpsb
das
movsl
inc
out
jns
push
js
jno
and
xchg
bound
mov
pop
scas
cmp
push
jne
mov
jno
jnp
lods
push
aaa
dec
push
add
cmp
pop
cltd
dec
popf
pop
xchg
and
loop
cmpsl
push
or
ds
pop
cltd
fsubrl
in
add
fs
mov
jmp
jg
sarl
cltd
in
mov
subb
dec
add
rorl
imul
aaa
leave
xchg
dec
add
decb
movsb
push
cmp
scas
test
and
aaa
jp
xchg
insb
lock
push
outsb
int3
popf
out
add
xchg
lret
mov
xchg
lcall
push
imul
push
add
add
push
scas
mov
sub
filds
fwait
lret
loop
loope
or
add
data16
fcmovnu
jbe
in
cmp
cmpsb
std
ja
dec
int
lds
inc
fcmovnb
inc
data16
pop
push
push
push
inc
in
fcmovnbe
xchg
aam
mov
jb
dec
scas
or
int3
and
pop
jnp
push
imul
insl
adc
fisubrl
fadds
sbb
fcmovu
xor
push
adc
jb
sub
or
popa
adc
pushf
lcall
test
pop
ret
fnsave
jge
in
xor
cmp
into
ret
cmp
dec
daa
jno
rcrl
mov
imul
dec
cmpl
hlt
or
test
push
xor
adc
push
daa
add
inc
pop
test
int3
lock
push
or
repz
into
stc
or
stos
nop
jg
push
jp
in
movsb
lcall
imul
imul
pop
cli
push
lahf
fsts
fwait
inc
push
cli
les
ja
jmp
sbb
hlt
mov
xor
incb
call
fwait
adc
gs
stc
test
mov
jge
fdivp
pop
cmp
jns
idivb
lods
push
int3
loop
sbb
bound
loope
int
inc
rcll
mov
jno
movsb
adc
das
jns
xor
fs
pop
pop
inc
push
fiaddl
push
movsb
popl
icebp
out
cmc
shlb
adc
std
imul
mov
es
jbe
sbb
cmc
scas
orb
nop
pop
xor
pop
and
in
sub
std
mov
data16
faddl
lret
adc
xchg
mulb
test
loopne
stos
or
js
dec
cmp
jecxz
mov
jecxz
cmp
scas
or
aas
lret
cltd
outsb
pushf
int3
xor
xor
jecxz
test
push
loope
cs
sti
cmp
movsb
lods
cwtl
fldlg2
or
push
mov
insb
and
fsubrs
in
cs
dec
insb
sbb
xchg
push
mov
jns
mov
pusha
in
sub
iret
std
sbb
scas
in
xor
xchg
cs
bound
lcall
jno
jnp
adc
arpl
out
call
add
xchg
int
loop
enter
dec
ret
pop
repz
dec
ror
les
or
xchg
mov
hlt
in
xor
out
stos
jp
stos
sub
jmp
pop
jl
test
ret
pushf
adc
imul
outsb
mov
cmc
dec
pop
mov
sar
jp
mov
fists
cmpsb
repnz
imul
sub
cs
jnp
sub
mov
and
lahf
dec
xor
les
sahf
daa
mov
stc
cwtl
xlat
fwait
adc
mov
ret
mov
pop
push
out
dec
lods
mov
jns
sub
lods
ficoml
ja
sbb
pop
xor
ss
cs
fstl
idiv
cmp
adc
push
cmp
test
xlat
aas
testb
cmp
xor
jb
sbb
out
jne
stos
in
xor
loop
outsl
push
rclb
cmpsl
andb
mov
mov
adc
in
into
lds
xlat
out
xor
adc
jbe
push
filds
repnz
and
and
movsb
sbb
xor
jmp
jno
imul
pop
xlat
inc
push
std
mov
outsb
movsb
add
cmp
sub
and
add
mov
fbld
shrl
sti
je
dec
outsb
add
testl
mov
fucomi
mov
into
test
rcll
in
mov
fidivs
cmp
outsl
lret
loopne
sbb
dec
mov
sub
sti
sbb
fcoml
sbb
jmp
push
push
es
xor
stos
mov
jnp
or
lods
imul
mov
or
rolb
paddsw
push
jge
sbb
jnp
lea
jmp
cmpsb
das
mov
jle
jnp
mov
out
fidivs
iret
mov
scas
jle
addl
nop
jo
std
sub
jp
clc
push
push
aaa
or
xchg
mov
push
test
add
lock
pop
fadds
jmp
loope
aam
mov
xchg
and
in
mov
imul
pop
pop
int3
or
imul
inc
mov
repz
out
loopne
ret
push
xchg
dec
mov
inc
inc
es
shlb
adc
fbstp
xchg
out
sahf
lea
pop
mov
push
test
ds
mov
push
lds
cmp
xchg
pop
repnz
add
add
push
cmp
push
out
jge
or
dec
out
fs
cmpb
adcb
jg
lret
out
mov
roll
xchg
xchg
jmp
insb
clc
movsl
idivl
std
pop
pop
mov
shlb
or
mov
jnp
mov
cmp
daa
ss
stos
in
loopew
bound
cmp
lock
mov
sbb
jl
push
mov
pusha
in
mov
clc
fwait
xor
sbb
mov
xchg
arpl
imul
pushf
push
fs
aas
xor
aad
xchg
out
test
xor
ror
xlat
cmp
sub
and
mov
sti
cld
aad
jecxz
je
and
out
call
addr16
pop
lret
test
into
and
cld
pop
jno
outsb
loop
xor
push
add
jmp
and
dec
jb
mov
sarb
fs
mov
aam
mov
or
fldl
xchg
xchg
jl
mov
cmp
jmp
jg
inc
and
lods
push
xor
xchg
push
and
sub
lds
xchg
and
xor
imul
jb
jbe
stc
push
dec
test
and
into
push
jne
fistl
fwait
jno
int3
bound
stos
dec
std
adc
jle
mov
pop
aas
sti
and
inc
jns
out
adc
or
mov
xchg
push
mov
je
mov
mov
ds
fcmovne
addl
adc
sbb
pop
inc
and
adc
les
lcall
lods
mov
pop
push
loopne
flds
aad
xchg
add
dec
jbe
lret
push
push
enter
jmp
popf
pop
add
cmp
push
dec
out
pusha
mov
in
scas
aad
cmpsb
push
mov
std
out
mov
std
cmp
je
sbb
insl
lea
hlt
inc
cmp
hlt
push
sahf
test
test
xor
in
xchg
sbbb
cmp
decb
push
loopne
in
inc
adc
out
cmp
jns
jns
xchg
test
outsb
test
pop
mov
lcall
push
je
mov
inc
mov
ficoml
inc
cmp
or
mov
popl
push
and
mov
cli
cmp
push
aaa
lret
call
xor
lea
xchg
outsb
push
fnstenv
push
jmp
dec
movsb
jnp
mov
lcall
mov
mov
imul
jae
push
imul
jo
cmp
dec
ja
inc
mov
pop
pop
or
jmp
mov
fwait
js
cmp
gs
sub
fiaddl
test
pop
mov
outsb
sub
xchg
cmp
imul
mov
jle
sti
adc
int
mov
mov
aad
testb
xor
fcmovbe
cmpsl
cld
call
lods
push
fisttpl
pop
add
mov
inc
lock
aas
ds
aaa
or
xchg
push
outsb
inc
mov
in
mov
dec
imul
push
outsl
imul
and
push
aad
and
sbb
xchg
scas
lcall
in
push
fimull
pusha
sarb
mov
hlt
jmp
scas
cmp
jle
push
mov
mov
inc
dec
inc
cli
pop
pusha
sahf
mov
lds
jl
icebp
and
fdivrs
aad
sub
mov
xchg
lea
xchg
mov
cmp
notl
jl
jle
jno
dec
inc
cmpsl
jge
sarb
andl
jp
inc
insb
cld
xchg
xor
xor
mov
xlat
fidivs
ja
mov
negb
mov
and
xchg
or
or
push
enter
mov
enter
gs
and
add
popa
dec
sbbb
pop
jb
inc
cmpsb
sahf
out
mov
lea
outsb
rol
dec
jle
xor
sub
xchg
in
jne
std
push
push
jle
inc
scas
jge
loop
cmpsl
daa
outsb
pop
int3
fisubrs
cmp
push
push
or
lods
dec
test
cmp
ja
push
sbb
or
int
mov
push
xchg
add
mov
int
inc
xor
mov
fisubrs
xchg
xchg
rolb
jmp
fdivl
pop
jmp
inc
dec
cs
in
out
ret
and
mov
rcll
cwtl
out
push
sbb
mov
je
adc
push
mov
data16
subl
inc
dec
fimull
pop
sub
gs
jbe
outsb
out
sarl
addl
lods
jg
pushf
bound
dec
jp
push
mov
inc
aam
pop
inc
lahf
pmulhuw
xor
lods
push
sti
shrb
jno
xchg
outsb
push
nop
or
fistl
push
imul
cmp
rorl
dec
sbb
sahf
and
xchg
jmp
mov
or
sub
fs
lods
or
sub
jno
js
adc
cmp
cmp
pop
in
mov
mov
push
adc
arpl
sub
cs
aaa
dec
aaa
andb
xor
cs
scas
ljmp
mov
popa
outsb
push
dec
out
xchg
mov
lcall
sub
sub
lods
popf
popa
inc
mov
cmpsl
or
call
sub
loopne
in
in
inc
sub
popf
mov
pusha
std
lea
cmp
movsl
pusha
sahf
dec
mov
push
call
mov
aas
icebp
or
jae
push
xchg
in
xchg
add
outsl
lret
shlb
int3
fadds
je
lahf
cmp
hlt
cmp
jnp
and
push
xchg
pop
dec
loop
test
and
sub
int
cmp
sbb
enter
add
push
adc
out
pushf
push
pop
scas
dec
test
test
lock
lock
pop
daa
fcoml
xchg
fisttps
clc
add
insb
popf
lahf
jge
mov
and
repnz
xor
or
xchg
sbb
ljmp
push
nop
push
mov
push
dec
ficoml
clc
shlb
pop
roll
inc
mov
pop
dec
add
pop
les
xchg
jl
adc
push
cwtl
jecxz
mov
xchg
dec
mov
sarl
adc
pop
pop
push
test
sbb
jo
sub
shr
jns
dec
aas
std
mov
mov
pusha
pop
fwait
arpl
mov
dec
dec
outsb
push
test
lcall
repnz
fucomp
jbe
mov
rcll
or
test
lods
repnz
test
mov
lahf
pusha
mov
clc
ret
loop
mulb
stos
stos
subl
and
cwtl
jl
cwtl
je
sarb
pop
jno
call
push
lods
push
imul
movsb
push
es
das
add
stos
imulb
or
mov
mov
xlat
xchg
lret
test
cmp
lods
repz
jle
arpl
dec
cmp
leavew
iret
std
fdivs
sbb
sar
cmc
rorb
movsb
arpl
leave
mov
fisttpl
mov
mov
fisubrs
mov
dec
cmpb
xrelease
cltd
jae
and
leave
sti
sub
in
cmp
imull
dec
repz
mov
mov
dec
push
push
or
dec
clc
lahf
push
add
dec
xchg
mov
dec
sbb
mov
into
mov
xor
push
xor
pop
loop
fistpl
popf
ss
xlat
in
adc
mov
add
pop
jne
out
arpl
aaa
cmp
enter
jne
in
pop
inc
movsl
jmp
testb
loope
in
jp
jle
jne
das
loopne
jle
test
mov
inc
add
sbb
cld
aaa
jmp
adc
js
dec
sub
push
ret
inc
leave
jp
cmp
xor
mov
jns
scas
test
pop
jg
xchg
lock
and
sbb
jge
lea
popa
lcall
jp
rcr
dec
xchg
arpl
sbb
sahf
pop
arpl
arpl
pusha
es
xchg
pop
jnp
xchg
out
pushf
lret
push
ret
sahf
ljmp
out
popf
mov
insb
add
add
test
push
pop
dec
push
xchg
popa
sub
dec
jp
out
mov
loopne
or
dec
add
repz
ficoms
jmp
pop
or
mov
clc
sar
rorl
loopne
jmp
in
pusha
stos
ret
sub
or
fmuls
pop
add
cli
jno
push
xchg
push
lea
sub
aad
mov
ds
mov
dec
sbb
nop
fimull
push
pop
sti
xor
mov
push
dec
cmp
lock
scas
lret
jecxz
inc
mov
andl
cli
loope
or
stos
or
idivb
repz
pop
pushf
es
jmp
xor
push
jbe
add
fldl
jg
faddl
bound
mov
adc
mov
dec
lahf
cmp
push
cmpsb
icebp
scas
push
loop
outsb
cli
int3
inc
pop
rcl
sbb
xchg
mov
hlt
and
psrld
and
xchg
and
imul
or
jne
enter
push
xlat
rol
mov
xor
jns
mov
push
adc
mov
and
mov
cmpsb
test
in
ljmp
xchg
fimuls
sub
sub
xchg
pushf
pop
clc
test
pop
and
or
push
das
mov
outsl
mov
in
popf
adc
nopl
push
sahf
jp
outsb
fcoml
lea
xchg
push
cmp
add
in
push
pop
outsb
lahf
jmp
xchg
into
push
ss
jnp
xchg
jns
das
out
jl
mov
sbb
sahf
out
ljmp
add
orl
and
pop
scas
push
sbbl
push
int3
sti
and
adc
iret
outsl
inc
cmp
adc
push
fildl
xchg
popf
push
lcall
inc
outsl
jmp
dec
and
pop
aam
jns
ds
in
sahf
out
sub
dec
scas
or
and
imul
psrlw
lcall
mulb
xchg
sbb
fs
test
aad
push
call
jno
xlat
adc
mov
pop
xor
sti
sbb
pop
lock
clc
push
in
mov
xchg
imull
push
ret
xchg
cwtl
enter
add
xlat
dec
pop
lea
cmp
mov
call
in
dec
cmp
jg
call
aaa
stos
fnstsw
in
inc
and
rolb
and
mov
mov
stos
jne
inc
insl
dec
aad
ficoms
jge
push
adc
push
mov
imul
aaa
mov
dec
mov
icebp
je
push
stc
hlt
pop
or
jo
ja
sahf
and
sbb
sbb
or
dec
mov
loope
fiadds
into
inc
scas
inc
out
cmp
mov
dec
imul
mov
push
faddl
xor
fistpl
mov
push
dec
lcall
inc
push
imul
lret
push
mov
push
jns
test
shlb
and
imul
imul
sub
imul
add
sub
sub
xchg
lods
lret
popa
int3
sbb
out
inc
dec
out
inc
and
xchg
jo
cli
xor
shlb
jne
pop
fs
or
push
adc
push
jg
jmp
out
xchg
mov
mov
xchg
les
data16
loop
in
imul
mov
push
lcall
push
outsb
fwait
iret
adc
dec
fwait
stos
fsubrs
push
adc
scas
dec
jo
ljmp
rep
sbb
add
mov
std
sarl
xor
mov
pop
pop
pop
out
sub
and
or
push
les
in
sahf
mov
dec
fists
push
cmp
dec
mov
ret
test
push
pushf
mov
test
pop
push
xor
jae
or
mov
shlb
leave
ja
pop
mov
adc
outsb
inc
pop
daa
insb
push
adc
dec
insl
xchg
and
inc
xchg
push
push
out
insl
sti
js
lret
inc
fisubrl
pop
shrb
push
subb
cmpsl
sub
andl
cmpsl
pop
push
sub
inc
in
mov
rcrb
fwait
repnz
pop
xchg
mov
fstps
lds
lret
pusha
xor
mov
test
add
jns
push
or
divb
fs
cld
mov
pop
fsubrs
mov
inc
push
or
inc
cs
mov
inc
sub
aas
dec
pop
jmp
repnz
xorb
ficompl
test
js
int3
movsb
pop
pop
adc
adc
jbe
outsl
pop
popl
xor
mov
aam
int3
enter
adc
add
loopne
aaa
and
mov
popf
push
mov
scas
mov
inc
pop
outsl
mov
movsb
or
sbb
or
fcmovb
push
cltd
jb
pop
test
stos
sub
push
in
and
mov
push
test
test
inc
dec
xchg
aas
add
in
int3
dec
sub
dec
mov
nop
popf
push
fsub
dec
mov
dec
or
add
sti
sahf
mov
sbb
and
je
jo
scas
mov
call
shl
orb
testl
stc
dec
minps
outsb
mov
lret
push
mulb
imul
shll
inc
jle
test
aaa
add
loopne
dec
xor
call
mov
orb
and
jecxz
sbb
cmp
fwait
xchg
pop
xchg
shrl
cwtl
fildl
inc
lods
inc
pop
ror
adc
test
xchg
ja
ret
push
pop
outsl
sub
daa
push
cli
sarl
cmp
xchg
mov
in
in
or
pushf
scas
pop
popa
lock
xchg
dec
rol
int
mov
mov
movsl
add
lret
pop
adc
xor
push
and
pushf
pop
xchg
sub
mov
ret
mov
pushf
stos
cs
lock
aaa
mov
inc
fwait
push
insl
lahf
ljmp
push
push
xchg
mov
cmp
mov
sahf
lcall
and
aaa
and
xchg
jns
clc
mov
enter
push
sub
lds
inc
add
push
mov
mov
iret
and
scas
sub
dec
jle
mov
fnstcw
addb
int
inc
in
push
inc
enter
xchg
movsl
addr16
lcall
sub
jmp
loope
ljmp
jg
xchg
jb
cltd
sarb
or
inc
add
ja
sub
inc
cmp
xor
xor
jae
dec
icebp
xchg
mov
mov
push
and
and
xchg
inc
lret
fidivrl
loopne
jb
or
les
jg
push
insb
xchg
cmpsl
repnz
gs
pop
lret
adc
mov
push
dec
int3
pop
mov
push
add
and
jnp
mov
mov
les
add
aas
ja
sti
and
jle
shrl
xor
sbb
mov
dec
push
adc
mov
jp
sti
pop
mov
mov
pop
inc
fnstsw
dec
test
sbbb
xor
imul
mov
mov
out
cmpsb
or
mov
cltd
setbe
mov
mov
pusha
mov
mov
mov
pop
std
lahf
mov
xor
lds
sub
imulb
xor
outsl
mov
adc
adc
push
pop
daa
mov
pushf
or
cmpsb
iret
fildl
lret
or
dec
pop
or
adc
out
dec
jbe
jo
aaa
ds
cwtl
adc
cli
mov
push
jecxz
inc
xor
push
jmp
rclb
fcmovne
cmc
push
push
jl
jo
int
push
int
cmc
xchg
adc
xlat
fdivl
sarb
int3
js
cmp
or
sub
and
inc
add
sbb
repz
xchg
out
stc
int3
push
pop
or
push
adc
andb
mov
mov
or
mov
cs
xor
cs
push
mov
gs
test
inc
cmc
sub
sahf
sbb
in
dec
jns
mov
aaa
gs
mov
nop
repnz
adc
mov
mov
cmp
sub
imul
dec
ss
mov
stc
mov
call
xadd
inc
pop
lea
fwait
mull
mov
sub
popf
xchg
out
arpl
andb
push
scas
stos
cmpsl
inc
sub
push
xor
lret
inc
ja
push
xadd
cli
aam
jmp
test
xor
test
nop
data16
test
dec
pusha
jecxz
jecxz
int3
xor
ffree
mov
jg
call
loopne
mov
pop
inc
cmp
pop
cmp
pop
and
or
or
mov
jns
inc
jecxz
dec
or
stc
es
or
mov
fdivrs
cmpsl
test
sbb
or
mov
call
rdmsr
orb
dec
jns
pop
adc
outsl
and
pusha
push
cmp
mov
xor
lcall
inc
push
xchg
inc
push
cmpb
call
xor
mov
and
pop
mov
push
dec
mov
dec
mov
repz
stc
xchg
insb
addr16
cltd
push
or
lea
nop
push
loopne
daa
mov
fsubrl
adc
cli
mov
adc
js
movsl
sarl
ret
or
inc
and
mov
add
lock
mov
pop
aas
jne
push
test
push
push
fwait
dec
inc
sbb
pushf
cli
loop
loopne
test
fmuls
mov
mov
in
xchg
mov
push
push
mov
push
inc
or
push
push
test
and
out
aad
dec
sub
sbb
xchg
daa
or
dec
jg
lahf
jl
dec
pushl
add
out
jno
cmp
mov
jae
test
inc
mov
out
js
jno
scas
lret
xlat
iret
popa
ret
shl
pop
andl
test
pop
cmpsl
mov
fwait
or
sarl
jno
push
mov
pop
outsl
mov
addr16
cmc
loop
test
push
xor
lcall
in
lods
es
pop
add
out
pop
mov
sti
xchg
pop
stc
mov
jp
xchg
test
cmp
sub
xor
aas
push
cmp
mov
out
jb
daa
test
or
xchg
sub
cmpsb
fnsave
xor
mov
in
or
or
cmp
pop
xchg
mov
mov
insl
and
mov
xor
in
mov
mov
mov
inc
sbb
add
mov
mov
frstpm(287
cld
inc
mov
mov
jno
mov
or
aad
mov
movsl
out
and
arpl
sbb
xchg
or
es
ja
mov
lods
out
nop
pusha
inc
aas
mov
xchg
cli
mov
scas
jg
inc
bound
sbb
xchg
push
inc
sti
push
popa
pop
pop
mov
imul
pop
aaa
dec
dec
out
imul
data16
push
push
jo
out
fmul
into
xor
lods
mov
rcll
adcb
jmp
dec
aad
nop
inc
mov
jbe
arpl
mov
mov
int3
lret
outsl
in
mov
dec
or
jmp
jle
dec
adcb
sti
out
cmp
dec
mov
aaa
add
xchg
stos
mov
push
push
insl
xchg
xchg
push
push
mov
pop
nop
mov
in
or
mov
mov
jae
fldz
cmp
es
mov
decb
and
jecxz
stos
mov
scas
movsb
mov
push
cmpsb
cmp
ljmp
mov
daa
aaa
std
cs
jge
jle
in
jmp
cwtl
popa
mov
cmp
pushf
mov
cmpsb
adc
in
out
push
add
lea
push
push
xor
fadd
gs
dec
mov
popa
rclb
mov
inc
popf
repnz
push
out
incb
mov
mov
cmc
lea
popf
jns
fwait
or
push
xchg
pop
movsb
or
les
push
dec
int
cmpsb
pop
outsl
nop
push
pushf
jns
jbe
and
xor
and
mov
cmp
lahf
xchg
int3
scas
and
mov
movsb
xlat
pop
testb
jbe
cltd
shll
pop
pop
dec
ja
verw
insl
sub
inc
pop
mulb
fmuls
lock
cmp
popf
ds
out
jmp
bound
dec
fsubrp
pushf
subb
fdivr
pop
sub
cli
lret
lahf
outsb
pop
dec
pop
mov
cmp
pop
push
mov
fsubr
xchg
push
jns,pn
xor
sbb
and
je
add
pop
jno
aam
addr16
cs
xor
or
xor
lret
and
push
xlat
mov
lds
or
stos
mov
movsb
repnz
ljmp
enter
sbb
jge
push
rcrl
sub
out
fdivrs
cwtl
mov
inc
push
push
scas
xorb
in
sarl
push
sbb
daa
lea
inc
out
jb
xchg
push
into
pushf
imul
dec
iret
bts
and
sub
enter
ficoms
adc
push
adc
in
pop
out
inc
mov
inc
outsb
lods
mov
mov
cmp
movsl
int
pop
cmpsl
loopne
mov
jmp
mov
mov
adcb
dec
add
arpl
pop
pop
in
call
outsb
dec
scas
pop
dec
mov
dec
mov
jmp
sbb
iret
imul
dec
lods
stos
or
daa
test
out
xor
push
add
cli
push
lahf
fisttpl
push
popa
add
or
mov
out
mov
sub
outsb
mov
out
ljmp
decl
imul
or
bound
in
push
fucomi
push
xor
aaa
push
push
push
fists
jno
stc
pop
dec
pushf
mov
insb
ds
aam
sarb
cmp
call
lahf
mov
add
pop
out
sbb
xchg
call
xor
mov
add
mov
xor
ja
arpl
inc
lea
mov
in
mov
inc
inc
aam
mov
mov
call
adc
dec
fwait
cmp
inc
lcall
adc
cmp
push
cli
out
out
xor
mov
push
add
orb
jmp
mov
dec
cmc
repnz
mov
rcr
icebp
sahf
dec
das
cmpb
cmpsl
mov
sbb
add
gs
jle
mov
lret
add
outsl
mov
sbb
aam
rclb
cmp
sbb
test
repnz
sbbl
pop
stos
loope
xchg
add
dec
inc
inc
ret
leave
jns
push
aaa
stos
lods
cmp
mov
add
mov
mov
negl
loopne
rcr
lahf
test
dec
dec
mov
inc
sbb
imul
cmp
mov
out
fucomp
fdivp
mov
bound
mov
dec
cmpb
xchg
sarb
push
pop
fistps
in
cmp
repz
sub
sub
fs
inc
sbb
mov
mov
lret
stc
dec
add
mov
adcl
gs
adc
mov
repnz
mov
mov
pop
mov
dec
out
inc
loope
aam
mov
or
lahf
inc
rorl
mov
mov
push
or
inc
mov
add
mov
shrb
cs
fdivrl
loopne
iret
mov
mov
lods
xchg
stc
fnstenv
mov
test
xor
rcll
cmpsl
cmp
fisubs
push
shrl
dec
das
adc
lcall
test
mov
stos
inc
andb
mov
sub
push
aad
add
adc
add
mov
sbb
fs
mov
inc
repnz
sub
int
fisubrl
dec
daa
xchg
xchg
mov
jecxz
std
dec
push
rorb
push
outsb
call
loopne
and
push
push
inc
push
stc
jg
xchg
dec
stc
jle
cwtl
inc
enter
jne
in
fmull
fwait
push
mov
lock
decb
sub
out
dec
inc
in
rcll
sbb
cmpsb
lods
push
shrb
and
loope
xor
jb
aad
movsl
out
adc
loope
cmp
mov
test
ljmp
mov
lcall
addr16
aaa
sbbl
popa
iret
icebp
push
cmp
aaa
xchg
idivb
inc
xor
shlb
push
pop
inc
loope
cmp
jns
loope
data16
das
lea
outsl
jmp
adcl
icebp
mov
pop
push
repnz
movsl
xor
inc
adc
arpl
push
jl
and
es
loope
adc
push
cmp
jnp
out
fwait
inc
lea
dec
shrb
bound
fwait
jae
sub
fs
push
roll
sti
loopne
cmp
cwtl
push
and
punpckhdq
fwait
push
xchg
xchg
inc
sbb
jmp
jl
addr16
or
insb
pushf
lods
mov
ds
dec
jmp
mov
jp
rclb
mov
jo
test
lock
push
pop
dec
mov
mov
push
and
dec
clc
cwtl
shll
mov
pop
movsl
sub
outsl
push
push
std
jg
pop
rcr
into
mov
adc
loope
movsl
es
ljmp
mov
or
std
inc
fwait
add
cltd
push
mov
fcmove
adc
xchg
testl
test
stos
outsb
ret
cmpsl
sub
adc
out
lods
ror
jae
popf
cltd
jecxz
sbb
cli
sti
xchg
ljmp
jns
pop
ss
bound
add
mov
ficoml
mulb
ret
je
rorl
cli
lcall
pop
std
xchg
in
add
mov
mov
jg
sub
pop
xchg
pop
xor
in
imul
push
inc
imul
and
hlt
cmp
leave
ljmp
jl
sub
xchg
sahf
aad
cmpb
dec
mov
push
push
popl
pop
test
inc
or
mov
call
jle
adc
mov
sub
rorb
or
mov
cmpsb
lods
or
aam
and
enter
xchg
jmp
and
stc
loope
dec
mov
enter
dec
dec
fs
outsb
or
dec
xor
in
mov
sub
nop
xor
cmp
lods
mov
cmp
jnp
call
lods
mov
jb
lcall
pop
pop
shll
sahf
rcr
add
ss
in
mov
call
daa
insb
cmp
je
push
sub
mov
push
outsb
jae
mov
test
xor
into
out
movsb
jmp
mov
stos
and
popa
mov
ljmp
ret
inc
mov
push
cmp
pusha
out
sahf
ja
push
addr16
mov
push
out
xor
dec
shrb
jns
imul
xor
xor
xor
pusha
rcrl
addr16
push
dec
scas
mov
popf
cs
jle
mov
and
test
ja
out
mov
pusha
mov
add
cwtl
inc
dec
das
outsl
cmpsb
cltd
xchg
ljmp
int
loopne
test
sbb
mov
das
addr16
jecxz
pop
xor
inc
dec
pop
cmp
jg
fdivs
dec
push
push
pushf
xchg
xlat
js
xor
popf
scas
add
aad
mov
xchg
test
out
jp
mov
mov
cmp
aas
mov
shr
loop
dec
mov
cwtl
xlat
fs
mov
mov
bound
cmpsb
xlat
fldcw
sub
jno
daa
xchg
je
xchg
xchg
mov
in
lods
test
dec
mov
xchg
test
jne
cmp
les
xchg
ret
inc
push
pop
mul
lret
subb
iret
jnp
jecxz
xor
and
loope
insb
xchg
xor
fwait
ja
jo
and
outsb
imul
push
lea
jp
ret
out
sbb
adc
mov
xor
mov
lcall
das
pop
mov
mulb
xchg
aas
mov
jo
sub
negb
mov
jae
dec
cmp
ret
ret
mov
jbe
stos
mov
cmp
clc
notl
cmc
fisttpll
data16
mov
or
jnp
addr16
sub
mov
jmp
jmp
insl
loope
or
mov
push
cli
arpl
or
xchg
add
jnp
sbb
and
push
or
ret
adc
xchg
lahf
dec
test
xlat
cmp
pop
or
jns
mov
fnsave
cmpsb
call
xchg
pop
xor
je
adcb
cld
mov
std
cmpsb
aas
in
fimuls
bound
outsb
push
shlb
imul
xor
pop
mov
into
push
les
bound
lock
xchg
mov
inc
xor
push
push
sub
dec
out
sbb
lcall
pop
or
sarb
pop
add
mov
lret
sbb
scas
aam
adc
add
mov
repnz
xor
jbe
or
and
loop
push
pop
pop
adc
aad
adc
stos
mov
imul
dec
cmp
xor
push
stc
mov
dec
push
enter
mov
or
out
mov
add
rcrl
sub
xchg
push
pop
push
rcrb
adc
ss
mov
stos
jl
out
insl
ss
sub
pushf
and
and
and
cmp
popf
mov
xchg
lcall
dec
and
incb
cltd
inc
or
aaa
das
push
int3
adc
out
inc
ret
jae
push
sbb
imul
or
push
int
pop
xchg
xchg
xor
adc
out
outsl
dec
jg
inc
rolb
pop
add
add
jne
or
popa
push
lea
cwtl
out
movsl
xorb
sub
inc
or
popf
push
pusha
mov
mov
xchg
jne
std
mov
and
in
sub
add
cmp
push
ljmp
rol
sti
sub
inc
out
inc
and
mov
cmpsl
inc
mov
dec
dec
insl
je
fs
or
outsl
adc
mov
fldcw
je
adc
imul
jae
or
inc
mov
adc
jnp
inc
dec
es
inc
insl
or
inc
jmp
inc
stos
pop
sub
scas
imul
cmp
data16
adc
add
and
lcall
add
shll
or
shufps
pop
data16
xor
push
mov
es
sahf
dec
scas
cmp
int
ffree
scas
ret
sti
test
aaa
push
jle
push
mov
cwtl
push
cmp
xor
popa
push
std
xchg
push
push
sbb
fwait
movsl
stos
rcrl
int3
leave
mov
push
add
inc
mov
sub
call
adcl
cmp
dec
shll
lock
push
dec
stos
shl
jno
icebp
bound
and
pop
xchg
xchg
mov
xchg
pop
insl
push
dec
rol
popa
add
sahf
in
call
push
mov
inc
and
mov
mov
inc
js
dec
rcll
jl
jae
stos
addr16
cmpsb
xor
push
mov
push
pop
cmp
pop
jl
popa
add
mov
fdiv
jns
lcall
or
mov
in
push
dec
add
or
add
dec
pop
int3
inc
sub
ror
out
push
lahf
jge
xchg
jle
arpl
dec
insb
popf
push
lret
ret
fwait
mov
ss
xchg
dec
adc
loop
pusha
fldcw
add
mov
dec
jns
loope
es
sub
lahf
jmp
lret
sub
and
xlat
push
jp
pop
lock
scas
mov
push
push
pusha
mov
cmp
pop
inc
clc
and
out
getsec
fisttps
enter
add
fdivrl
rcrb
int
out
cmp
lret
mov
stos
test
xlat
push
aaa
sahf
mov
mov
rolb
addr16
xchg
xchg
push
dec
data16
aad
lahf
or
cmpsl
inc
and
repnz
in
pushfw
xchg
subb
sbb
and
sub
loop
sbb
imul
push
cmc
clc
and
mov
mov
pop
lds
push
dec
jns
ret
outsb
dec
add
push
adc
in
push
fwait
and
lcall
imul
rcr
sahf
push
cs
adc
lcall
jns
dec
ret
push
aad
push
mov
and
aaa
mov
out
mov
fstpl
mov
popf
pusha
ret
cmpl
ljmp
icebp
add
dec
aam
push
pop
sbb
sbbb
movsl
test
lret
mov
push
insb
sbb
sbb
xor
inc
sub
or
mov
testb
notb
enter
movsl
dec
dec
sbb
lret
or
rcrb
dec
pop
dec
insl
cmpsb
add
mov
push
dec
sahf
shrl
push
sbb
popa
jnp
sarl
adc
sbb
sarl
mov
mov
loope
js
xchg
std
adc
mov
xor
mov
cli
int
es
outsb
data16
pop
jp
mov
je
movsl
xor
cmpsb
push
ds
sub
in
xchg
mov
sti
push
movsl
out
out
ss
mov
dec
push
cmpsl
sub
pop
jne
xchg
bound
ret
mov
jae
mov
stc
lcall
jl
pop
imul
adc
fnstenv
xchg
mov
pop
push
dec
aad
dec
xchg
sbb
lahf
pop
outsl
mov
push
cmp
mov
into
adc
das
clc
push
jns
fwait
popf
dec
icebp
lea
fbstp
or
call
cld
xchg
aam
xor
push
or
mov
inc
sbb
rcrb
aam
xlat
sub
mov
ja
cld
loopne
push
cmp
inc
jle
fwait
mov
jne
icebp
mov
lds
mov
or
lahf
adc
fs
push
dec
popa
push
lcall
outsb
add
xor
pusha
jmp
das
jno
movq
inc
fisttpl
imul
push
icebp
push
pop
push
sbb
scas
mov
xor
jmp
in
push
ret
fmuls
cwtl
adc
ret
nop
int
push
pushf
xchg
dec
addl
or
movsb
mov
int3
movsl
push
incl
pop
lret
sub
pop
in
dec
cmpsl
sbb
dec
test
push
sbb
movsb
pop
jp
mov
sub
adc
test
sub
lret
xchg
lahf
addr16
cmp
or
adc
xchg
mov
ljmp
fisubrs
push
sub
cs
ljmp
enter
push
divb
imulb
pushf
jge
push
inc
clc
sub
sub
fwait
pusha
xlat
sbb
and
xor
bound
pop
test
adc
xchg
daa
inc
test
ret
icebp
out
mov
pop
push
sub
push
icebp
ja
outsb
xor
or
push
jne,pt
xchg
fs
mov
mov
fs
lods
das
lahf
cmc
sarl
imul
and
adc
push
ret
pop
mov
fs
pop
scas
xchg
cmp
adc
sbbb
and
out
sbb
test
mov
xor
xchg
cmp
xchg
sbb
shll
shlb
leave
jno
cli
aas
mov
and
sarl
sub
xchg
mov
mov
lret
inc
cmpb
insb
mov
dec
add
or
push
stos
ds
rclb
sahf
adc
mov
int
xor
popf
add
xor
lret
rcll
out
ja
fistl
jmp
mov
in
mov
fcomps
mov
loope
bound
scas
out
fwait
mov
push
popf
pop
negb
pop
movl
xchg
xor
or
std
xor
adcb
daa
not
idivl
ret
pop
leave
stos
xchg
mov
fbld
clc
xor
xor
dec
push
add
fmull
lods
enter
cmp
jge
pop
push
ficoms
dec
mov
stos
out
enter
and
popa
not
pop
hlt
aam
xchg
cli
mov
push
xchg
inc
adc
roll
cmp
pop
mov
stos
fisttpl
dec
mov
push
mov
daa
rcl
pop
and
loop
mov
jp
or
shll
cmpsb
sub
xchg
inc
cmp
lcall
pop
das
lods
mov
rorl
and
inc
int3
fdivr
mov
fcoml
push
pop
xchg
xchg
mov
std
mov
cli
cmc
push
rolb
jns
sbb
aas
mov
cwtl
pushl
and
push
scas
xor
fisubrl
jbe
mov
mov
imul
sub
test
push
lea
push
mov
mov
ljmp
or
mov
pop
pop
aas
fstpl
mov
scas
nop
shl
jno
jae
xchg
mov
jge
std
jp
imul
pop
pop
or
aam
mov
inc
fcoms
in
lcall
cmp
xchg
lcall
push
mov
xor
xchg
enter
in
ficomps
or
sub
lea
cld
fcmovb
or
fcomp
pop
mov
scas
or
xor
sahf
shrl
popf
push
insb
outsb
jecxz
fcmovnbe
add
mov
out
scas
jns
mulb
mov
shrl
repz
fstpt
js
lahf
out
sub
lock
push
fsub
mov
mov
orb
and
push
je
outsb
in
fldcw
push
mov
ret
out
and
and
pop
lret
dec
inc
cmp
push
mov
pushf
fldl2t
or
cmp
in
out
out
mov
jecxz
inc
leave
pop
dec
jg
and
imul
mov
int3
bound
jns
pop
inc
fldl
sub
and
pop
xchg
mov
test
pushf
sub
mov
loop
enter
ss
push
pop
inc
jns
mov
out
repnz
loopne
loopne
push
aam
fistl
pop
adc
jnp
and
mov
xorb
sub
push
outsb
inc
cmc
scas
fwait
test
popa
loope
push
lahf
orb
scas
adc
sbb
sbbb
movsb
jo
setle
push
loop
xchg
jbe
push
lock
roll
shrl
repz
ret
cmp
push
push
fwait
push
js
mov
xchg
je
testl
adc
popa
in
fldl
out
int
out
cmpsb
push
mov
adcl
filds
pop
movsb
sarb
xor
stos
scas
mov
std
imul
add
mov
les
jo
pop
loopne
push
subl
mov
rorl
jo
inc
pop
adc
je
cmp
or
ss
or
mov
addb
cmp
sti
xchg
pop
jno
mulb
add
ljmp
shrb
sub
dec
cmp
sti
insb
jno
cmp
pop
mov
loop
sarl
pop
adc
lock
sbb
mov
scas
xor
pop
lods
pop
add
dec
cs
cmp
out
clc
aad
adc
sarl
aaa
enter
jo
or
stc
push
fsubrl
sub
push
les
ljmp
in
fsubs
lods
pop
inc
pop
pushf
jge
movsbl
dec
lods
push
arpl
cmp
outsb
add
dec
mov
cmpsb
xor
mov
gs
bound
inc
jge
int3
pop
divl
daa
adc
iret
test
mov
outsb
jmp
or
inc
pop
and
jne
mov
dec
inc
jb
inc
sbb
call
mov
ljmp
add
daa
out
mov
jae
test
dec
and
dec
xor
pop
lea
out
ja
sbb
xor
std
ss
aad
pop
aaa
lods
loop
mov
std
mov
sbb
les
pusha
xchg
mov
sub
or
dec
pop
mov
or
mov
adc
lret
xchg
clc
divl
push
repnz
adc
inc
pop
aam
test
push
or
je
xlat
ficoml
lahf
cmp
jb
data16
sub
leave
push
sti
push
dec
mov
xlat
loop
mov
sub
xor
ret
inc
hlt
fadds
test
cmp
imul
sahf
xor
mov
adc
dec
dec
sub
imul
xchg
or
sub
imul
rorb
ljmp
imul
sub
hlt
xchg
testb
add
add
xchg
or
dec
cld
and
enter
out
mov
mov
jmp
sub
fsub
jns
addr16
or
xchg
rcrl
adc
popa
mov
xor
mov
flds
in
push
sbb
or
rcr
nop
dec
mov
sub
in
mov
sub
gs
bound
fisttps
pop
lret
dec
xor
mov
arpl
pop
push
and
ss
cmp
fnsave
insb
or
fildl
call
ret
xor
repz
inc
cmp
or
fs
lcall
int
testb
push
out
dec
lock
cmc
sbb
int
lret
repnz
nop
clc
ds
lcall
in
les
fstp
std
or
cmpsb
xchg
xchg
dec
mov
dec
fcomps
mov
rcll
sbb
gs
insb
xor
pop
mov
popa
push
inc
aaa
xchg
dec
pop
test
pop
xor
pop
popa
mov
push
ja
jecxz
gs
into
mov
sar
scas
jp
pop
cmp
cmc
leave
push
mov
mov
lds
fcmovnu
sbb
sub
push
pop
lret
mov
std
xchg
xchg
call
lea
mov
repnz
ljmp
ficompl
divl
mov
mov
pop
test
jo
xchg
fiaddl
pop
and
popa
test
cmp
out
enter
iret
inc
jno
lcall
add
outsl
mov
loope
outsw
push
jecxz
aad
mov
outsb
cwtl
dec
pop
push
incb
daa
xchg
fcompl
cwtl
je
push
sti
push
push
fildl
jle
popa
in
xchg
dec
std
or
lret
cmc
cwtl
scas
sti
mov
fisubs
inc
aam
fadds
mov
dec
ret
and
mov
pop
enter
and
push
or
xchg
or
mov
test
sbb
pop
gs
or
pop
sub
or
push
mov
mov
pop
jno
gs
cmp
popf
cmp
movsb
sbb
mov
xor
lea
dec
mov
dec
pop
aam
lds
sub
aad
shrb
mov
sti
popa
hlt
mov
fistpll
push
dec
loop
imul
mov
dec
and
pop
xor
mov
mov
imul
push
scas
xlat
aad
or
xchg
int3
xlat
sub
les
clc
inc
lock
pop
je
aad
adc
adc
push
imul
fisubl
inc
jne
in
aas
notb
cmp
test
dec
inc
sbb
jge
dec
addb
lds
xor
stos
mov
stos
sbb
jbe
lock
sub
lret
adc
push
sti
cmpsl
inc
jmp
test
pop
mov
shr
or
int
lea
mov
mov
adc
and
and
add
lret
push
sbb
outsl
call
frstor
inc
cmpsl
shrb
and
divb
jecxz
or
ljmp
in
fbld
push
ret
sub
xor
lods
icebp
mov
mov
test
into
fs
xchg
hlt
adc
push
mov
xor
jnp
xor
jg
push
negl
dec
pop
test
popf
push
fisubs
jo
mov
ret
jns
lcall
sub
sub
jmp
pop
cmp
push
mov
iret
pop
dec
add
mov
jae
jle
iret
decb
dec
out
dec
sti
daa
dec
stos
testl
outsb
adc
mov
aad
pop
out
or
or
jnp
stos
loopne
inc
fstl
xchg
jg
rcr
fldcw
fwait
adc
sub
and
call
push
adc
mov
push
mov
jg
pop
fildll
rcll
in
lock
xchg
mov
sar
imul
jne
into
push
dec
or
test
loop
ds
or
into
repnz
push
or
dec
test
fcompl
jp
cmp
push
std
lahf
push
pop
mov
inc
js
push
in
xor
or
sub
jp
mov
scas
shrl
mov
cmpsb
packuswb
loopne
test
scas
repnz
push
movsb
scas
push
leave
mov
sbb
push
nop
sub
mov
push
jb
ffree
push
mov
push
mov
test
push
sahf
push
push
mov
in
adc
dec
inc
push
and
loop
xchg
jmp
cltd
mov
jns
arpl
outsl
add
mov
in
sub
adc
sub
popa
and
into
dec
fisttps
dec
cmpsb
cmp
jne
gs
in
outsb
jae
shlb
and
dec
das
insl
mov
dec
popa
sbb
add
mov
jns
ljmp
pop
mov
mov
mov
push
mov
fsubs
pop
outsl
rcrb
xlat
adc
and
xor
jp
lds
pusha
ficomps
sub
js
mov
inc
cli
mov
cmp
xor
imul
jp
int
flds
xchg
push
out
loope
mov
mov
lods
fcoml
xchg
add
adc
or
jb
pop
sub
notb
fs
aad
mov
out
sbb
fcoms
enter
xchg
fnstenv
xor
inc
enter
sub
or
inc
and
repnz
orb
xor
les
xchg
les
pop
outsb
push
ss
xor
popa
push
jno
xchg
jge
mov
ror
notl
xchg
out
dec
xchg
addr16
jbe
pushf
mov
xchg
out
movsb
pop
inc
and
cli
mov
imul
fcmovne
push
or
push
push
ret
push
adc
push
mov
lret
sub
test
movsb
jno
cli
jle
push
pop
jge
mov
jg
loop
int
leave
shlb
mov
loopne
adc
outsb
insl
xor
cmp
fildll
xchg
push
add
shll
add
mov
into
fwait
mov
add
pop
je
aaa
sbb
jecxz
add
push
data16
aas
push
aaa
dec
imul
arpl
outsb
lock
pop
push
arpl
ficoml
sbb
dec
or
cmp
fbstp
lcall
fucomp
mov
bound
cli
sahf
test
or
cmpsl
imul
lcall
xor
sub
jo
lock
fwait
push
sbb
push
push
and
scas
xor
addb
jle
pop
cmpb
sbb
mov
aas
lret
scas
lcall
mov
imul
xor
imul
sbb
orb
add
and
inc
stos
loopne
dec
ljmp
iret
push
daa
lcall
xor
xor
xchg
ja
out
test
lcallw
scas
mov
pop
int
sub
mov
jo
rorl
ljmp
pop
mov
out
inc
dec
inc
mov
jecxz
and
jnp
inc
mov
pop
ljmp
cmpsb
scas
fidivrl
outsl
cmpsb
add
in
out
cltd
inc
ljmp
in
mov
fcmovne
jne
mov
imul
mov
xor
mov
fstps
sbb
add
testl
sub
adc
lock
push
or
int
inc
out
bound
mov
xchg
dec
cmp
mov
push
dec
push
fisttpl
jecxz
sbb
jne,pt
ds
dec
ljmp
stos
jbe
enter
ds
adc
dec
add
add
iret
pop
push
dec
jnp
aas
mov
pop
ficomps
xchg
scas
pop
sti
jmp
push
pop
sub
inc
aaa
mov
enter
outsb
add
addr16
mov
punpckldq
push
cmpsl
mov
or
xchg
inc
dec
sub
mov
jno
inc
adc
inc
xlat
mov
leave
bound
fcmove
inc
sub
pop
into
mov
push
pop
rcrb
push
xor
rol
dec
and
and
mov
pop
cmp
cmp
inc
in
xchg
stos
sub
out
dec
push
mov
rclw
mov
cmp
xchg
mov
test
inc
pushf
inc
rolb
mov
rorb
push
push
filds
adc
push
add
ret
ret
inc
test
push
mov
gs
sub
mov
push
mov
lods
imulb
mov
imul
cmp
leave
les
hlt
xchg
xchg
aad
arpl
jo
mov
xor
cwtl
cmpsb
xor
sub
cmpsl
gs
mov
push
jae
pop
lds
sbb
mov
sub
cli
dec
push
fucomip
iret
jae
add
fstpl
mov
and
dec
jns
popa
or
dec
cmp
sbb
out
stos
cmp
jnp
data16
ja
jle
ret
out
mov
xchg
insb
pop
mov
adc
dec
je
mov
loope
mov
aas
dec
cmpsl
cs
adc
jmp
mov
aaa
mov
pop
stos
jb
js
loopne
aad
popa
xchg
ds
mov
sub
or
ss
push
cmp
cmp
push
test
mov
lds
xchg
lret
xchg
fwait
push
mov
fcomps
dec
jmp
push
mov
cwtl
mov
xlat
sub
fsubrs
mov
iret
aas
fwait
inc
mov
jno
rorb
mov
push
xlat
push
and
push
jbe
mov
dec
mov
bnd
popf
adc
xchg
mov
mov
imul
ja
jne
jp
sbb
dec
icebp
data16
aas
mov
xchg
sti
inc
repnz
lock
mov
and
nop
iret
xchg
lock
jbe
sbb
jle
xchg
pop
inc
fsubrp
push
inc
addb
push
jo
sub
fstpl
sahf
or
enter
adc
js
inc
mov
call
pop
add
out
popa
loope
scas
js
jp
loope
pushf
call
xor
xchg
mov
dec
mov
shl
xlat
jecxz
adc
mov
call
mov
mov
mov
xchg
fbld
push
and
push
outsl
nop
push
call
mov
roll
push
cmp
add
fiadds
dec
pop
jge
sbb
mov
repnz
cmp
shlb
ljmp
rorb
imul
xorl
insl
jle
sub
xorb
sbb
test
movsl
push
jle
xchg
dec
fisubrl
inc
cmp
sbb
push
testb
mov
sub
fisubl
cmc
rolb
aas
jp
mov
shll
pop
mov
mov
sar
leave
or
pop
fs
adc
push
arpl
pop
fisubrs
roll
in
pop
enter
sbb
mov
add
cmpsb
sbb
aad
xor
hlt
sub
push
push
mov
or
pop
sub
ror
call
xchg
mov
iret
call
cmp
or
andl
dec
or
xchg
dec
adc
xor
mov
or
pop
sbb
xchg
xchg
pop
pop
mov
je
pop
cmpsb
mov
dec
pushf
xchg
sub
mov
inc
pop
jb
scas
push
notb
adc
out
jno
ljmp
pop
push
cmp
or
push
jp
push
push
sbb
mov
ss
push
mov
mov
inc
adcl
mov
sub
inc
dec
aaa
push
sbb
data16
cmp
or
and
int
sub
js
mov
pop
pop
loop
jns
xchg
addl
mov
notl
testl
xchg
mov
jnp,pn
in
xor
push
jge
xchg
ja
out
cltd
ja
rcr
pop
mov
scas
orb
fucomp
mov
mov
pop
xor
mov
cmpsl
ljmp
bound
xchg
mov
std
test
sub
stc
jmp
sub
push
lods
jb
fisubs
jns
pop
dec
mov
push
das
push
cli
outsl
pop
inc
fisubl
adc
sub
sbb
cli
lcall
loopne
mov
cmc
leave
inc
jecxz
out
mov
jo
push
add
push
pandn
inc
and
ror
shl
mov
pop
cmpsl
push
sti
adc
fs
leave
adc
xchg
cltd
addl
mov
or
les
xchg
scas
pusha
add
gs
mov
cltd
xchg
nop
sub
gs
ffreep
pop
jmp
fbld
ret
push
lret
add
inc
dec
or
hlt
add
lock
push
lcall
imul
pop
sbb
xchg
scas
addr16
repnz
cmp
push
cmpsb
clc
mov
mov
or
push
or
jp
test
jecxz
or
jae
js
iret
rolb
jae
dec
lahf
push
mov
pusha
mov
adc
sub
mov
out
mov
dec
or
testl
or
outsb
faddl
cmp
bnd
xor
fdivr
add
movsb
imul
dec
and
push
incl
push
aam
mov
movsb
adc
testb
xlat
xchg
in
sti
nop
push
mov
subl
sbbl
dec
dec
pop
xor
jae
and
push
jmp
outsl
inc
cmp
sbb
enter
dec
cmp
jnp
cli
les
sbb
pop
mov
sub
test
mov
dec
xchg
or
aaa
ret
sbbb
fisubs
idivl
cmp
pop
jge
push
pop
inc
scas
ret
inc
nop
or
dec
cmp
fstps
xor
aam
call
pop
pop
xchg
pop
mov
cwtl
add
push
adcb
push
adc
dec
out
sbb
mov
inc
or
int
int3
inc
sbb
inc
scas
add
cltd
test
mov
in
aam
add
mov
cwtl
add
xor
imul
xchg
mov
movsb
dec
int3
xchg
mov
out
jb
mov
ljmp
jmp
or
push
sbb
ror
sub
lcall
out
mov
ret
and
aas
idivb
iret
insl
and
and
cmp
jbe
mov
push
js
lods
inc
push
or
pop
jmp
inc
fists
mov
dec
imul
data16
xlat
lret
mov
and
pop
lods
push
stos
push
mov
inc
add
in
xor
cli
aaa
loope
mov
sahf
js
pop
push
insb
xchg
pop
and
lahf
in
hlt
add
push
cld
and
push
rclb
dec
aas
cli
or
ss
je
out
jae
sub
or
jae
and
aam
repnz
iret
punpckhdq
lahf
pop
fld
xor
or
in
out
sub
jecxz
pop
inc
cwtl
fwait
xchg
add
popa
mov
cli
dec
divb
stos
sbb
mov
and
fbstp
jae
mov
movsb
xchg
cmc
es
and
add
in
fisttpl
pop
aaa
dec
sbb
in
dec
sub
dec
pop
iret
int
std
push
cmp
mov
mov
sbb
ds
dec
mov
lret
gs
aad
xor
sbb
add
leave
in
adc
cmp
xchg
add
adc
push
cmp
lret
in
and
push
cmpl
push
jl
scas
cli
jnp
pop
dec
negb
fstl
cltd
fldcw
sbb
and
sbb
jae
ret
jns
mov
into
xchg
cmpl
lret
xor
xlat
xchg
or
shrl
xor
call
mov
das
scas
insl
hlt
mov
shl
push
jne
cli
mov
subb
xor
repz
push
in
in
push
in
sub
xchg
mov
pop
xchg
outsb
arpl
in
mov
cwtl
outsl
scas
nop
cmp
mov
les
aaa
dec
lock
push
fldcw
sbb
into
xchg
sub
insb
jnp
inc
iret
leave
push
lock
or
fwait
outsb
sub
adc
inc
divl
cmp
data16
or
cmp
push
int
ss
and
dec
lret
mov
or
fst
bound
pop
mov
xchg
loopne
nop
add
cmp
cli
pop
out
shrb
aam
pop
jo
inc
xlat
pop
jecxz
psraw
fsubl
or
cmc
dec
pop
jns
inc
movb
mov
pop
adc
add
dec
aaa
xchg
jne
jp
xlat
jle
xchg
cmpsl
xchg
out
clc
rcrl
int
cmpsb
data16
les
dec
adc
cmp
nop
lock
cmp
pop
inc
dec
push
lahf
jne
cli
and
and
das
lret
xchg
mov
stc
inc
mov
xor
add
fists
add
ljmp
inc
inc
sbb
dec
jmp
arpl
lret
dec
iret
cwtl
fcomp
insb
aad
and
inc
mov
outsl
jmp
add
test
push
leave
adc
jle
jl
jle
aas
jle
je
xor
int3
sti
mov
inc
lods
imul
in
mov
fcomps
inc
mov
lds
fsubrl
push
cmp
xor
daa
jbe
push
push
enter
pop
cltd
push
mov
aam
dec
add
adc
xchg
xor
aam
jp
movsl
cli
in
mov
sub
stos
pop
xchg
lods
outsl
pop
cmp
js
rorb
popa
pop
add
push
mov
adc
jmp
cltd
inc
scas
mov
mov
inc
aaa
mov
rorb
dec
cmp
mov
push
xor
ss
jne
dec
push
fldenv
jb
pop
and
repnz
mov
inc
test
bound
cmp
in
sub
sti
je
bound
in
inc
dec
dec
mov
in
loop
jl
fildll
sbb
sarb
xor
push
sbb
pop
jmp
movsb
pop
sbb
cmpsl
lcall
scas
aad
push
push
inc
inc
lret
dec
notl
inc
or
fisubs
cmp
dec
add
pop
loopne
xor
pop
mov
lret
fldenv
sbb
sub
lahf
push
icebp
mov
lahf
push
sbb
mov
xchg
dec
clc
fidivrs
nop
scas
jbe
push
inc
repz
out
rcl
cwtl
ss
push
rcl
or
scas
sub
insb
dec
pop
jne
movsb
push
mov
out
fnsave
dec
xlat
into
scas
mov
mov
inc
enter
sbb
adc
mov
push
adc
orb
mov
or
sub
insl
dec
insl
cltd
sub
sub
push
xchg
loope
imul
or
and
mov
sbb
test
int
dec
imul
mov
ret
adc
xor
aas
and
jnp
mov
dec
pusha
dec
fs
xchg
dec
push
nop
in
sub
rcl
adc
or
pop
push
test
push
push
daa
dec
add
pop
scas
das
jo
ret
sub
repnz
mov
push
lret
inc
pop
scas
jbe
add
and
mov
pop
jb
adc
sub
sbb
push
xor
loope
cmp
pop
pop
lret
jmp
jge
sarl
ds
or
push
pop
jb
xchg
mov
in
ds
add
mov
mulb
or
push
ljmp
cmp
xchg
mov
cmpl
adc
clc
cmp
xor
dec
cmp
pop
hlt
and
js
xchg
daa
push
cmpsl
mov
mov
xor
push
loope
jle
jns
out
and
insb
adc
lcall
hlt
sbb
fs
dec
aas
add
test
je
fdivs
je
cmp
loopne
pop
mov
xchg
mov
push
andb
inc
hlt
mov
xor
dec
insb
jmp
cmp
adc
pop
icebp
mov
in
inc
in
into
aam
cwtl
mov
sub
push
jl
inc
jno
fdivs
dec
insb
ret
ja
push
and
rolb
pop
inc
inc
push
push
jg
lret
cmc
in
rcr
imul
dec
pop
insl
in
mov
int3
fwait
outsl
jbe
ss
ljmp
aas
xlat
inc
xor
sub
xor
sub
inc
mov
push
mov
mov
sbb
sub
enter
xchg
out
push
gs
xchg
or
test
in
sarb
xchg
lods
scas
sub
inc
in
movsl
cmpsb
cmp
xchg
cmpsl
out
fstpl
cltd
fsubl
enter
sub
xor
xlat
icebp
imul
int3
jp
std
pop
mov
push
insb
inc
adc
fs
mov
dec
mov
sub
daa
lret
jecxz
push
std
cmp
jns
adc
out
mov
push
cmp
popf
addr16
jbe
test
cmp
call
add
xchg
inc
jp
pop
dec
cmp
cmp
in
aaa
arpl
push
xchg
pop
test
ds
xchg
and
adc
cmp
les
and
hlt
jnp
ret
mov
mov
popa
fadds
push
xchg
test
mov
cs
pop
sub
pusha
popf
dec
mov
roll
ds
out
sub
loopne
jl
dec
insb
mov
xchg
lock
adc
mov
pop
loope
lret
nop
dec
push
push
jmp
dec
aas
pop
fnsave
call
ret
sub
dec
fsubp
out
or
sub
test
into
or
in
sub
push
sahf
jmp
add
mov
xchg
xlat
jp
popa
aad
xor
cmpsb
and
int
xchg
repnz
dec
fs
addr16
dec
std
call
cmp
pop
dec
add
out
sbb
mov
leave
mov
std
mov
pop
pop
xchg
sub
notb
adc
push
and
inc
mov
repnz
idivb
sbb
jo
lcall
rorb
fimuls
or
xor
mov
mov
pop
xchg
stc
or
dec
push
ret
xor
sahf
lret
or
mov
std
int
inc
decl
lock
loopne
rorb
int3
mov
mov
es
adc
jl
test
outsl
repnz
sub
sub
mov
xchg
les
jge
sahf
loop
jecxz
push
ljmp
ss
push
lods
or
ljmp
into
xchg
ja
jne
and
sbb
notb
jo
and
pop
push
addb
and
inc
jmp
add
ja
sub
add
shr
test
sti
in
stos
lea
js
adc
xchg
andb
and
adc
fistps
out
pop
aam
and
punpcklbw
fldl
std
and
sub
ja
jno
mov
lds
mov
push
rcrb
aaa
jnp
imul
add
mov
out
push
shll
enter
mov
test
inc
test
fidivrl
cli
hlt
or
int3
sbb
jno
rcrl
daa
add
movsb
cli
cmc
das
jg
inc
jl
bound
add
pop
jns
push
add
cmp
pop
in
dec
sub
xchg
mov
push
mov
pop
mov
pop
push
and
sbb
int3
push
stc
imul
aas
scas
adc
mov
shrb
out
inc
mov
in
loopne
scas
repz
andl
aas
stc
insb
rorb
mov
sarl
ret
fs
jno
or
fistpll
mov
lds
mov
out
aad
mov
xor
test
pop
fs
and
shlb
lods
je
xor
pop
ret
cmpb
xchg
or
lods
repnz
ds
adc
aad
mov
push
pop
ss
xchg
outsl
dec
popa
mov
imul
adcl
movsl
jle
dec
push
sub
ds
sbb
xchg
rcl
or
sbb
sti
pop
popa
xchg
push
cmc
xchg
dec
push
sbb
jle
mov
aas
lret
inc
mov
dec
bound
push
lcall
imul
out
push
xor
sbb
jge
aaa
push
xor
insl
push
mov
jmp
mov
es
jp
out
push
rorb
pop
pop
aaa
popa
sbb
leave
dec
xchg
mov
in
in
cmp
test
pop
push
mov
fs
out
lret
ret
sbb
int
gs
ret
xor
addr16
mov
mov
mov
pop
mov
pop
or
fbld
pushl
xorb
pop
js
test
aas
xchg
ja
inc
xor
or
mov
lahf
inc
cwtl
mov
fcoms
mov
mov
bound
shrb
inc
into
ja
mov
xor
fisubs
and
push
adc
mov
ret
bound
aaa
enter
test
sahf
jae
ja
pop
call
rcrb
mov
xchg
enter
fildll
outsb
pop
sbb
jae
aas
popf
addb
pop
stos
addr16
push
mov
addb
aaa
mov
or
cmp
mov
adc
mov
insl
or
test
mov
cmp
pop
imul
popf
mov
xchg
jle
mov
rorb
sub
adc
mov
jmp
popa
jbe
stos
sbb
daa
dec
adc
add
shrb
xchg
cmp
pop
mov
jmp
cmp
lods
mov
ljmp
repz
dec
inc
xchg
add
jp
xchg
push
sub
popa
das
test
cmp
movsl
ficompl
hlt
adc
sbb
incl
add
mov
xchg
loop
in
mov
pop
in
inc
imul
or
enter
jle
es
ljmp
sti
pop
gs
and
mov
push
sbb
sti
push
outsb
fcomps
jle
mov
stc
mov
mov
out
jo
pop
mov
pop
push
daa
mov
mov
pop
xor
imul
imul
test
stc
test
push
into
bound
sbb
inc
sbb
addr16
mov
cltd
push
fxch
call
jmp
out
lods
or
popa
cmp
daa
push
pop
mov
in
push
mov
adc
add
xchg
jne
cmpsb
loopne
clc
sbb
pop
scas
xor
or
cs
xchg
cmpsl
push
push
pop
mov
add
mov
test
pusha
mov
cld
push
add
cmp
xor
ret
and
xchg
leave
push
int3
sub
add
pop
jae
xchg
xchg
lret
pop
mov
xchg
cld
repz
clc
push
icebp
in
sub
shlb
cmp
stos
add
int3
movsb
pop
xchg
loope
enter
mov
andl
or
jmp
popa
cltd
js
push
les
inc
inc
es
mov
fbstp
add
inc
xchg
data16
ret
push
fldt
pop
jecxz
hlt
push
jbe
pusha
loopne
pop
push
arpl
pusha
xchg
int
push
cmpsb
shll
mov
aas
testl
pop
addl
jmp
out
sarl
dec
sbb
lret
xchg
xlat
mov
sub
cmpsl
ret
or
fstpl
js
sub
cmc
es
xor
cmpsb
stc
ss
mov
lods
cmp
fadd
xchg
fisubs
push
subb
and
pushf
push
inc
xchg
adc
roll
jecxz
cli
test
push
adc
cmp
lock
decb
shll
cmp
loope
push
stos
aaa
xchg
dec
lcall
dec
es
jle
inc
sub
fsubrl
add
dec
loop
cmp
cmpsl
mov
xchg
stc
in
xchg
add
scas
pop
jg
xchg
xchg
pop
stos
jo
or
out
and
clc
cmc
nop
subb
loop
ds
in
adcb
aas
ss
cltd
ret
fisubrl
loop
ljmp
fisubs
loope
mov
jge
jbe
mov
cs
lock
push
mov
xchg
je
loop
cmp
out
jb
inc
std
inc
mov
xor
out
mov
push
mov
and
lret
xorb
adc
push
or
pop
cmp
push
mov
ljmp
push
mov
adc
mov
iret
icebp
mov
cli
xor
rcrl
jg
scas
cmp
xor
mov
sbb
xor
sub
sub
xor
popl
and
dec
imull
sub
stos
cwtl
cmpsl
mov
orb
into
lods
mov
xor
mov
push
or
sub
scas
fmull
mov
xchg
ljmp
outsb
rcrl
xchg
inc
je
jnp
or
dec
out
out
pop
sub
adc
lea
xor
mov
sahf
aam
lods
push
xor
mov
inc
sub
call
xor
xchg
rcr
loope
lcall
outsb
lret
call
sub
hlt
add
dec
pop
lds
imul
aaa
mov
push
ljmp
xchg
fwait
or
mov
push
mov
sbb
cwtl
mov
les
int3
adc
orb
into
xchg
pop
cs
inc
dec
andb
pop
aam
popf
pop
mov
dec
xor
sarb
rclb
stos
pusha
lock
jb
jnp
xrelease
inc
and
dec
loope
cld
dec
push
mov
daa
dec
jmp
cmp
dec
add
and
mov
stos
sub
fsincos
sub
jb
stos
dec
and
mov
stos
pop
push
sbb
scas
pop
mov
fwait
xlat
xchg
fdivl
xor
aam
push
lock
int3
int
enter
dec
push
push
popa
repz
sub
inc
mov
xchg
das
cmp
leave
xchg
je
addr16
pop
push
in
popf
push
mov
int3
dec
push
mov
xchg
mov
aad
cmpsb
mov
shr
stos
fs
idiv
mov
pusha
or
das
cmpsl
mov
scas
mov
aaa
popa
ja
gs
out
xor
enter
stos
inc
sbb
xor
pop
jnp
aam
jge
lahf
add
cmp
lret
pop
cli
sub
xchg
adc
test
add
clc
pop
cli
inc
scas
addr16
incl
fldcw
or
lahf
inc
jne
cmpsl
mov
jb
stos
mov
xlat
leave
call
and
mov
out
aad
pop
sub
sahf
repz
lret
inc
mov
push
dec
add
sbb
mov
loope
jg
mov
fistl
andb
sbb
dec
and
aam
addr16
lcall
clc
fstps
and
sub
push
aas
and
inc
test
adc
xor
icebp
push
jne
ret
and
ret
push
pop
sbb
fstp
scas
leave
fildl
sub
mov
push
and
adcl
xchg
aas
pop
aas
popl
push
mov
imul
inc
ja
mov
insb
sbb
add
push
std
pop
ja
push
push
mov
push
add
fcmove
add
jmp
test
mov
sbb
loope
roll
push
fildll
jbe
fcmovnb
outsl
jl
test
arpl
cmp
shl
aam
lahf
movsl
insb
cmp
or
dec
mov
pop
testl
sbb
xchg
mov
pop
punpckhdq
sub
pop
fst
lods
inc
mov
adc
vxorps
sub
adc
in
xor
mov
notl
imul
and
or
pushf
jle
jmp
div
push
iret
in
int
clc
xorb
adc
xchg
movsb
or
lock
cmp
inc
js
or
scas
sbb
daa
lods
shrb
xorl
int
icebp
iret
data16
mov
cli
push
push
push
mov
jg
mov
push
lea
iret
and
push
pop
sbb
dec
sub
push
sti
pop
inc
hlt
add
inc
jle,pt
jb
out
pop
in
ds
je
mov
inc
aaa
adc
push
fisubs
cwtl
cld
loopne
add
pop
or
sti
push
push
mov
mov
or
cmp
inc
les
decl
cltd
xchg
cmp
xor
dec
jmp
lahf
add
out
push
dec
mov
aam
fld
cmp
rcrb
pop
and
adc
pop
andb
inc
fisttps
lock
mov
xor
xor
shrl
cmp
mov
jo
sbb
insb
ljmp
popa
rol
pop
stos
cltd
adc
adc
jge
nop
push
sub
lods
mov
ja
sub
push
roll
stc
xchg
dec
cwtl
popf
inc
inc
jno
jl
aaa
pushf
outsb
push
or
cmpsl
push
subb
or
pop
xchg
dec
push
push
bswap
dec
inc
pop
pushf
rclb
mov
sbb
xor
dec
adc
push
fadds
pop
xor
jbe
shlb
mov
push
or
sbb
cmp
loopne
mov
fbstp
push
mov
pop
shrl
xor
xor
fidivs
adc
test
int
and
add
dec
mov
mov
enter
in
pop
cli
mov
fsubs
lret
cwtl
fcmovnu
cmp
mov
jno
xor
fbld
mov
shrb
dec
jp
out
push
push
test
cs
imul
jp
or
mov
pop
and
rsm
out
fstl
push
loopne
lcall
jle
rolb
push
fisubrl
mov
rol
pop
stc
movsb
xchg
jecxz
cltd
push
idivl
pop
cmp
cmp
mov
sbb
jg
mov
mov
xor
repnz
mov
inc
fildl
and
adc
cwtl
cmp
jecxz
scas
ss
adc
test
inc
push
ljmp
aad
stos
jns
or
test
cmp
outsb
push
clc
hlt
out
push
push
fildll
in
outsb
lcall
fdivr
aad
jmp
sti
pushf
ja
sbb
jp
mov
mov
aad
inc
add
fcoml
add
arpl
enter
mov
fimuls
adc
mov
jg
push
mov
das
mov
cmpsb
xchg
out
dec
pop
add
out
pushf
mov
sub
mov
cmp
push
mov
jl
or
or
scas
mov
mov
sub
ss
pop
and
jae
outsb
dec
lahf
leave
dec
xchg
cmp
popa
mov
push
in
iret
pop
insl
notb
dec
fidivl
in
and
test
std
inc
les
jb
sti
xchg
sbb
xchg
nop
lock
and
stc
lock
out
jge
insl
sbb
xchg
or
rorb
outsb
cmp
inc
sbb
ficoml
loopne
sub
or
imul
ret
arpl
add
dec
cmp
and
or
gs
cmpsb
pop
or
dec
push
fiaddl
or
enter
loop
push
shlb
sahf
sbb
mov
xchg
sti
adc
loop
mov
cmp
aam
add
lds
pop
xor
and
std
jg
jle
mov
xor
sarl
addb
mov
shrl
inc
into
mov
sbb
out
outsb
ljmp
pop
jmp
pop
pop
mov
leave
adc
cmp
addr16
dec
rorl
dec
dec
sahf
fwait
push
sbb
dec
jnp
mov
loop
pop
inc
push
lret
pop
mov
or
fisubs
mov
mov
out
dec
dec
sbb
xchg
jle
pop
push
fstpl
stos
fwait
call
sub
leave
jmp
mov
popa
fimull
lahf
mov
lcall
roll
data16
ret
mov
ficomps
push
pop
call
cmpsl
or
lahf
arpl
cli
cli
enter
fneni(8087
pop
fsub
xor
fs
jo
jmp
lret
mov
das
int
aaa
jge
lods
mov
aam
out
call
fdivrs
xchg
jmp
aas
push
push
xor
add
cmpb
mov
inc
or
cmp
sbb
mov
or
dec
mov
jne
push
lret
in
or
push
orb
arpl
push
mov
push
outsl
sbb
ja
cltd
dec
mull
rorl
xchg
enter
dec
bound
xchg
testl
rorb
dec
les
into
sbb
pusha
or
xchg
xor
loop
sbb
or
sub
push
pop
icebp
arpl
mov
adc
repz
ucomiss
xchg
jne
dec
lahf
push
lea
mov
fisubrl
and
roll
mov
mov
jae
push
dec
std
push
es
add
push
das
pop
in
mov
dec
jns
mov
and
mov
push
xlat
dec
dec
fwait
cmpl
push
fisttpll
or
mov
pop
add
shrl
dec
or
mov
test
into
shrb
fwait
push
rcr
ss
daa
mov
push
push
std
fcompl
lea
push
lret
jno
pusha
fwait
mov
xor
movsb
int
sub
adc
cld
sarl
test
ret
fildll
fs
sti
push
das
mov
sub
mov
pop
jae
popa
inc
jbe
scas
xchg
imul
xor
jns
punpcklbw
xor
sbb
fldt
push
xchg
mov
lcall
daa
jno
shlb
mov
js
imul
addr16
mov
pushf
rolb
adcl
sbb
push
jmp
ficoml
daa
mov
shrb
loope
mov
push
shll
in
xchg
or
jmp
or
std
xchg
sub
sub
out
lods
sbb
jp
and
xor
pushf
mov
dec
xchg
in
jns
outsb
idivb
xchg
out
adc
mov
out
add
add
ud1
jmp
adc
mov
and
sbb
pusha
bound
sbb
jne
and
or
mov
pop
insb
adc
cld
jp
xor
inc
sahf
or
repnz
cmp
cmc
sbb
and
dec
push
adc
std
lahf
roll
test
pusha
bound
lods
xchg
and
cltd
testl
or
pop
push
dec
jmp
cli
sub
aad
cmp
aad
out
insb
ret
jo
insl
movsl
cli
mov
xchg
dec
lret
test
push
fidivs
jbe
fstps
fistl
daa
mov
cmp
imul
ficoms
loope
sbb
inc
mov
loop
outsb
pcmpeqd
sbb
cmp
xchg
jecxz
adc
jnp
repz
fstl
push
lret
outsl
push
mov
xchg
dec
pushf
les
jbe
aam
orb
jmp
fcoml
dec
mov
loope
jns
xchg
jecxz
insl
loopne
test
dec
lret
mov
lds
xchg
mov
fsubl
ret
mov
mov
and
cmc
js
push
cmpsl
add
dec
add
mov
sbb
pusha
mov
mov
ljmp
imul
or
dec
adc
pop
and
or
insl
dec
cmp
lcall
cmp
ja
es
outsb
adc
xlat
and
fcom
push
jno
arpl
pop
jns
and
cmp
mov
inc
pop
jle
dec
jmp
stos
inc
aad
adc
icebp
loop
adc
cmp
push
sub
xchg
dec
or
push
cli
imul
movsb
insb
test
leave
ss
ficompl
int
xchg
scas
push
adc
fisubs
jg
or
add
mov
mov
pop
jae
push
push
sbb
loop
test
cmpsb
cmpsb
add
sbbb
jmp
or
push
dec
adc
jg
dec
cmp
popa
stos
movsl
mov
mov
rorb
cmc
jo
push
or
fs
lret
enter
jecxz
ja
jb
les
sbb
pop
inc
sahf
dec
stos
lret
call
jg
shl
das
and
ds
ds
jne
inc
hlt
popf
cli
or
int3
out
inc
fimuls
scas
pop
std
or
cmp
inc
dec
or
dec
mov
xchg
sub
movsl
bound
stos
or
xor
push
idivb
out
lret
sub
jns
stos
enter
mov
xor
es
aad
es
fldl
add
adc
or
in
fsubl
dec
xchg
adc
inc
mov
aam
rorb
imul
mov
in
addr16
adc
dec
xor
jl
lods
loopne
jmp
mov
mull
cmp
xchg
push
repz
mov
add
mov
loop
jbe
push
std
popa
mov
dec
in
add
insb
cltd
aad
xor
loopne
aad
cmpsb
inc
mov
sbb
dec
repz
cmp
jns
in
cs
and
inc
add
bound
sbb
adc
pop
add
lahf
xchg
or
into
aas
push
dec
cmp
ret
insb
cmpsl
insb
pop
and
in
gs
xlat
xorl
outsl
sbbl
imul
adc
stc
push
cmp
aad
std
cmp
pushf
push
or
or
dec
dec
imul
adc
cmp
push
iret
inc
jb
imul
stos
jo
ja
xor
pop
pop
pop
test
pop
sbb
pop
lahf
xchg
jecxz
mov
adc
mov
stos
aas
xrelease
out
loope
mov
lock
lods
adc
cs
inc
mov
dec
rol
xor
aam
jl
xchg
cmpb
pop
lods
cmpsl
xchg
push
inc
mov
pop
dec
fadds
scas
clc
shrl
push
cmpsl
dec
push
cmp
ss
cwtl
mov
rcrl
jb
push
push
outsl
movsb
inc
and
outsb
xor
inc
call
int3
inc
negb
jp
lea
js
lcall
pop
lret
mov
jb
pop
lcall
shrb
xor
leave
jbe
mov
repnz
push
inc
or
adc
mov
sub
idiv
pop
andl
mov
insb
push
add
and
lcall
push
data16
inc
lds
repnz
pop
xor
jno
xchg
lcall
xlat
ljmp
leave
shlb
mov
cmpb
mov
icebp
mov
out
add
fisttps
clc
or
dec
mov
int
adc
dec
and
fsubs
xchg
test
jae
imul
je
icebp
pop
mov
clc
pop
mov
popa
ds
comiss
addb
into
rcrl
mov
sbb
and
mov
mov
fsubs
fistl
adc
mov
push
sarb
lahf
pop
leave
ret
imulb
lret
pop
das
call
add
cmp
clc
pop
push
fsubr
imul
mov
xchg
pop
or
lahf
in
test
popf
inc
jmp
cwtl
push
fdivs
into
ds
xchg
dec
dec
fadds
mov
incb
fs
cmpsl
out
xor
mov
push
imul
mov
pushf
lods
or
dec
cmc
rcll
mov
wbinvd
push
jp
call
sbb
fs
sarb
xchg
aam
mov
cmp
stc
hlt
insl
sbb
sub
push
addr16
in
mov
mov
int3
xor
dec
int
dec
fnstsw
add
pop
pop
divb
and
push
cmp
fmull
call
cmp
fcoml
rorl
cmpsl
cmp
jns
jg
popf
aaa
stos
fs
mov
push
and
or
jmp
push
inc
xchg
jp
ds
insl
stos
leave
out
ret
xchg
mov
add
mov
sub
stc
mov
push
sbb
ret
cs
test
iret
adc
lret
out
outsl
mov
mov
in
mov
into
mov
pop
or
or
mov
jo
cwtl
std
repz
xor
mov
xor
call
faddl
mov
mov
cmpsl
dec
pop
jns
push
cmp
test
pop
stos
push
dec
mov
dec
push
jbe
popa
das
or
rcrl
xchg
repnz
or
std
lock
sti
je
repz
push
inc
xchg
leave
ja
push
fimuls
lret
outsl
call
shll
dec
nop
xchg
mov
dec
pop
into
and
mov
inc
imull
xchg
outsl
fsubl
jle
addr16
fnstcw
sti
call
cmpsb
inc
or
cmp
push
cmpsb
mov
mov
pop
imul
lock
std
sub
clc
clc
xchg
test
mov
loopne
cmpsb
inc
jecxz
iret
repnz
mov
sub
mov
nop
sbb
mov
jae
cli
fs
adc
xor
and
sbb
jmp
lret
stos
call
movsl
or
test
sbb
mov
pop
clc
jnp
clc
pop
decb
test
std
rorl
cmp
sub
insl
push
pop
hlt
pop
push
mov
and
sti
imul
fs
pop
scas
cwtl
push
lcall
mov
xchg
xor
inc
or
pop
inc
dec
or
mov
out
repz
lods
rcrl
sbb
test
sub
jmp
lret
lock
and
mov
dec
and
or
cmpsl
and
mov
sbbb
add
mov
ljmp
push
push
xchg
testb
jbe
mov
dec
pushf
insl
inc
xchg
sub
pop
inc
dec
mov
cmpsb
scas
jmp
mov
mov
movsl
dec
sbb
and
push
jae
out
fmul
xchg
mov
and
dec
scas
sbb
jecxz
pop
xor
sub
adc
aad
ret
sbb
notb
jns
dec
cmp
rcrl
imul
sarb
push
dec
stos
pop
dec
mov
call
dec
sahf
cwtl
push
fimuls
pop
mov
cmp
jns
dec
xchg
mov
test
repnz
or
pushf
popf
cmp
outsb
jle
mov
push
cmpsb
adc
and
pop
dec
push
sub
and
add
arpl
mov
cmc
adcb
push
imul
mov
mov
arpl
dec
mov
adc
push
xchg
add
cmp
mov
std
fwait
clc
jns
mov
mov
loope
popa
pop
sub
or
das
sbb
xchg
add
sbb
xchg
mov
mov
add
push
mov
call
pop
gs
xor
into
je
nop
fwait
inc
mov
or
in
dec
inc
or
sub
aas
lcall
xchg
bound
repnz
sbb
push
or
mov
xor
lods
xor
push
pop
adc
popf
inc
movsb
aaa
push
add
gs
scas
jmp
fimuls
into
xor
add
xchg
sti
sub
arpl
pusha
xchg
xchg
push
ja
xor
mov
aaa
xchg
push
and
lods
pop
out
push
adc
adcl
bound
push
push
inc
xchg
fs
dec
popa
lret
inc
fcmovu
sbb
loopne
mov
dec
xchg
cli
mov
and
jnp
pop
and
pop
insb
add
push
mov
jnp
xor
sbb
lods
push
xchg
loopne
in
ds
mov
das
jecxz
jb
and
xchg
and
xchg
mov
sbb
mov
fwait
imul
ja
jae
add
add
xchg
je
mov
inc
outsl
movsl
xchg
movsb
fstpl
popa
sahf
jnp
popa
aas
mov
cld
mov
les
xor
and
leave
lock
fwait
js
incb
mov
pop
adc
inc
sti
out
mov
push
jmp
jmp
cmp
pop
dec
int3
push
adc
pop
ljmp
sahf
clc
push
push
out
push
lcall
inc
cmp
adc
xor
rol
xchg
pop
mov
cmc
stos
negb
push
pop
sub
out
jge
mov
shlb
stos
lods
cwtl
daa
pop
push
mov
cmpsl
arpl
rcl
rcll
mov
mov
adc
lock
push
mov
pop
repnz
jae
mov
dec
pop
adc
or
fs
pop
and
and
inc
xchg
sub
ljmp
dec
data16
add
or
push
jns
outsl
mov
xchg
bound
jle
cli
rcrb
sub
in
and
js
cmp
lcall
mov
int3
das
xchg
xchg
jo
dec
cmp
or
imul
hlt
ds
or
movsb
nop
sbb
sbb
stos
test
movsb
push
sub
cmpsl
mov
int
loope
clc
aaa
stc
in
cmp
into
or
xor
pop
mov
popf
xchg
mov
loope
add
pop
fwait
dec
or
adc
mov
mov
enter
mov
aam
add
imul
fldz
outsb
inc
rorb
mov
or
push
repnz
pushf
mov
cmpsl
mov
test
into
test
js
lods
push
out
and
scas
cs
test
mov
add
adc
push
mov
pop
mov
sub
aas
sub
xchg
scas
adc
jne
lods
mov
fiadds
mov
push
imul
mov
repnz
fdivs
getsec
sub
sub
out
inc
hlt
jnp
xchg
cmc
push
jne
in
nop
add
int3
ja
insl
sbb
push
ja
out
into
add
or
or
pop
xchg
mov
sub
es
xor
js
lea
add
nop
sub
push
xchg
push
adcl
mov
aas
xorb
xor
or
add
inc
lods
pop
xchg
ret
add
lock
stc
loope
xor
jo
lret
jle
cs
add
push
jbe
jbe
cmpsl
test
xor
xchg
dec
add
divb
orb
jl
push
loop
pop
mov
pushl
mov
mov
or
inc
adc
movsb
jmp
fcos
test
push
test
pusha
out
in
pop
movsb
mov
mov
add
data16
test
inc
push
sbb
mov
jl
mov
push
and
outsl
les
cmp
and
cmp
cmpsl
push
push
std
push
decb
add
mov
inc
pusha
enter
pop
cmp
adcb
push
mov
nop
push
and
cmp
jne
out
mov
pop
in
mov
outsb
xor
repnz
sbb
ds
pop
pop
int
pop
sti
or
and
and
pop
test
add
aaa
movsl
stc
fidivrs
fimuls
pop
sbb
out
es
sub
dec
in
enter
out
mov
gs
inc
jmp
inc
das
popa
mov
xchg
jmp
mov
xlat
pop
pusha
in
psubq
lods
lret
xchg
adc
sub
insl
cmp
sbb
leave
out
dec
push
add
insl
lcall
push
xor
jbe
ja
push
test
mov
add
mov
push
icebp
adc
mov
cmc
test
shll
jmp
add
xchg
test
xchg
adc
arpl
arpl
and
jne
test
mov
jae
test
adc
dec
subb
or
stos
ret
inc
stos
push
popf
adc
pop
pop
and
push
cmp
dec
mov
das
pop
sub
inc
aas
push
out
adc
cmpb
lds
je
lret
lret
rol
cmp
bound
test
sbb
mov
cltd
xchg
outsl
push
fwait
je
jl
ss
jecxz
xor
and
mov
scas
mov
into
shr
imul
subl
dec
push
xor
xchg
in
movntps
mov
mov
jo
jbe
je
fdiv
xchg
jecxz
add
sub
nop
aad
pop
xor
das
mov
ret
adc
and
lods
in
inc
jecxz
imul
adc
mov
fcomi
test
push
mov
xor
push
xchg
sub
or
and
dec
outsb
add
xlat
ljmp
xchg
and
loopne
mov
pop
mov
dec
push
aaa
ds
fwait
jecxz
dec
inc
jmp
pusha
pusha
lahf
sti
mul
mov
mov
jle
out
mov
jmp
je
iret
sub
xor
cs
adc
jne
or
mov
push
ljmp
stc
fsubl
hlt
mov
jnp
leave
out
and
mov
lret
sbb
dec
aad
movl
mov
xor
pop
mov
inc
arpl
stc
adc
lret
push
or
out
rolb
lcall
or
cmpsb
fdivrs
sbb
nop
mov
or
cmp
mov
cltd
or
insb
add
xchg
rorl
mov
in
mov
scas
mov
stos
dec
jae
inc
xor
and
mov
push
iret
mov
jno
out
dec
xor
inc
sahf
lret
aam
push
stc
jmp
mov
mov
cmp
push
out
inc
scas
cs
push
or
ss
dec
rclb
dec
fucomi
xor
jecxz
push
pop
ss
stc
jmp
stos
pusha
mov
lcall
pop
jb
dec
or
pop
dec
pop
adc
test
xor
or
jecxz
jp
bound
fs
leave
sbb
pop
xchg
insl
outsb
xor
lahf
or
jp
in
xor
fstl
push
xchg
ss
iret
push
dec
or
push
scas
lea
icebp
jg
mov
sbb
outsw
xchg
mov
or
mov
jae
sub
mov
xor
testb
sub
pusha
jns
mov
fsubrl
cmpsl
pop
lds
xor
shl
mov
outsb
sub
mov
mov
cmpsl
dec
data16
cmpsl
adc
leave
test
les
xchg
mov
dec
enter
icebp
and
push
mov
lahf
push
icebp
mov
imul
out
int
repz
das
js
mov
push
sbb
mov
dec
jge
push
jne
pop
repnz
popl
ljmp
pop
test
les
imul
gs
into
sub
mov
mov
add
jbe
push
or
push
daa
dec
test
repz
adc
dec
xchg
mov
test
data16
mov
call
mov
inc
jmp
daa
data16
xlat
faddp
pop
sub
xchg
sbbb
sti
movsb
out
push
sub
movsb
sub
movsl
cli
mov
push
ret
mov
imul
jb
fcmovb
push
ret
je
mov
test
insb
leave
je
mov
jb
push
sbb
test
std
add
mov
insb
sbb
test
sub
dec
dec
mov
jne
push
push
cli
dec
inc
cs
xchg
push
popa
mov
repz
addb
pop
shrb
out
dec
incb
clc
sbb
xchg
xchg
scas
pop
les
test
sbb
ss
push
movsb
adc
cli
mov
ja
int
mov
adc
mov
test
ds
or
sahf
dec
call
cltd
pop
push
ds
imul
lcall
repnz
inc
sub
or
aad
jmp
push
test
jmp
mov
pop
jnp
addl
adc
imul
addr16
add
xchg
jl
push
inc
in
xchg
test
aaa
and
inc
push
mov
fimuls
cmp
sub
arpl
inc
lahf
xor
mov
sub
cs
lret
pop
dec
sbb
xchg
inc
repz
cmpsb
mov
or
imul
cmpsb
repz
sbb
dec
push
pushf
ret
in
adc
aam
clc
add
shrl
aaa
jl
sub
insl
mov
rsm
cmpsb
ret
arpl
dec
in
pop
js
pop
cmc
or
xchg
push
jecxz
cli
call
fcomps
shll
das
mov
mov
xchg
repnz
clc
sahf
pop
push
sbb
jecxz
and
mov
incl
imul
mov
dec
pop
jecxz
xlat
repz
loopne
xchg
int3
ror
fsubr
pop
loope
inc
and
lea
sbb
cmp
nop
pop
in
add
push
push
add
rorb
mov
cmpsb
mov
ljmp
mulb
sahf
js
dec
sub
xchg
inc
jmp
dec
aad
inc
add
jbe
ja
out
jne
icebp
data16
pop
andb
ds
roll
sar
ljmp
rorb
popf
xchg
daa
sub
scas
inc
stos
mov
loope,pt
shrb
insb
jl
add
mov
and
cld
enter
xchg
sar
aad
movsl
sbbl
nop
in
inc
xchg
lock
and
adc
dec
xchg
sub
sbb
aaa
jp
dec
call
jo
mov
daa
outsb
andb
dec
pop
mov
mov
inc
cld
lods
in
cmp
cmp
mov
add
sub
pushl
mov
mov
mov
sbb
mov
mov
mov
cmp
inc
mov
xor
pop
insl
lea
xor
int3
test
push
sbb
out
sarb
cmc
xor
and
and
sub
jne
jecxz
inc
inc
ljmp
pusha
mov
or
cmpsl
into
inc
sub
sbb
aas
rcl
in
into
mov
enter
push
dec
lods
test
lahf
jo
stos
and
bound
loope
xorl
adc
adc
sbb
jp
push
cmpsb
fistl
cmp
push
loope
adc
mov
or
sub
inc
mov
cltd
insl
mov
mov
jecxz
test
lods
loopne
stc
xchg
outsb
mov
add
mov
xor
xor
mov
adc
xchg
xchg
mov
inc
out
xchg
dec
fwait
cmpsb
mov
lods
pop
or
push
test
adc
adc
inc
inc
sub
lcall
lea
pop
push
lahf
dec
adc
xor
adc
sub
dec
dec
rol
sub
sahf
outsb
subl
lock
inc
cmp
and
imul
pop
cld
dec
jp
pop
in
in
jecxz
xor
mov
dec
or
pop
rorl
mov
mov
push
push
mov
mov
gs
out
sbb
xlat
fidivl
mov
xchg
dec
rorl
add
pop
jb
pop
mov
dec
xchg
pop
or
faddl
fwait
push
fistps
lret
outsl
xor
fisubrl
sarl
nop
mov
pop
mov
mov
mov
push
cmpsb
jno
jne
in
fimuls
jmp
mov
int3
sbb
es
dec
testl
pop
xchg
sub
repz
divb
jns
dec
mov
xchg
fbstp
push
or
cmp
cmp
inc
repnz
add
lods
mov
lds
lret
sub
pop
jmp
or
dec
fdivs
imul
mov
sub
jno
mov
dec
push
fwait
in
or
push
mov
sub
push
push
mov
cmpsb
ret
sbb
fstl
imul
rorb
lods
dec
adc
pop
mov
loop
mov
cmp
ss
jecxz
pop
jno
loopne
jg
or
sub
mov
ja
int3
pop
mov
push
inc
test
sbb
movsb
call
xor
mov
arpl
sbb
popf
xor
mov
jecxz
pop
xor
outsb
jb
push
xchg
sbb
mov
pop
andb
out
fstpl
sti
iret
in
sub
cmp
push
mov
mov
jge
shlb
lods
roll
xchg
mov
xchg
or
in
in
out
in
lcall
pop
and
dec
push
mov
bound
jg
adc
leave
les
outsb
dec
mov
ret
xor
test
int
xchg
inc
xchg
dec
outsl
mov
loope
pop
popa
sub
mov
push
or
scas
iret
cmp
push
cmp
inc
pop
pushf
stc
sti
push
sub
je
xor
roll
nop
inc
cmpsl
jmp
leave
adc
nop
mov
cmc
pop
fistpl
ja
ret
xchg
xchg
ljmp
cld
test
std
fidivrl
mov
movsl
and
inc
fsubl
add
or
sub
sti
jbe
or
mov
call
cwtl
test
lret
or
sahf
stos
lock
cmp
hlt
pop
aad
inc
adc
jecxz
lret
fsub
andb
out
jns
fcoml
addr16
incb
and
mov
scas
cld
sahf
into
mov
lahf
adc
sti
inc
lret
shlb
adcl
test
lahf
jo
dec
jmp
pop
cli
xor
xchg
clc
or
push
xchg
cs
pop
lods
adc
or
mov
xchg
lds
xor
or
lcall
jbe
cli
addr16
push
aad
ret
sbb
xor
or
aas
ds
in
push
pop
stos
dec
push
call
or
pop
xor
jns
xchg
iret
xor
add
jmp
and
out
iret
push
daa
mov
xchg
push
add
push
imul
mov
int3
imul
repnz
dec
cmp
pusha
in
test
sbb
jo
in
popa
mov
je
cmp
scas
pop
stos
mov
leave
out
aaa
sbb
out
push
push
pusha
mov
add
push
andl
jg
mov
in
into
ljmp
mov
xchg
cli
iret
dec
mov
sbb
jo
xor
sub
in
enter
pushf
ret
or
jo,pt
xor
fstpl
fdivrp
mov
jno
jne
lds
mov
adc
stc
ja
mov
pop
test
jle
mov
dec
bswap
aam
jp
inc
xor
mov
lods
arpl
shlb
bound
repz
ret
ljmp
lcall
out
dec
adc
sub
cmp
fisttpl
mov
loop
sub
lret
sbb
imul
insb
push
xor
aad
jg
mov
daa
arpl
sbb
imul
inc
pushf
inc
xchg
jb
out
lods
push
mov
aam
fildl
repz
adc
jle
adc
sub
mov
out
int
das
lret
cs
hlt
sub
cmpsl
jle
jns
insb
andl
pop
out
icebp
js
ret
rorl
sbb
adc
pusha
es
inc
adc
xlat
mov
ljmp
scas
insb
test
or
outsb
jb
pop
dec
jge
sarl
shll
andnps
imul
cmp
cli
decl
fistpl
stos
out
mov
cmpsb
fcmovu
adc
loopne
inc
cs
stc
fs
and
lcall
cwtl
xorb
adc
mov
pop
clc
xchg
dec
lods
cmc
shr
test
sub
dec
jl,pn
loopne
dec
out
je
fidivl
shll
push
mov
fdiv
gs
call
and
dec
pop
test
fists
lea
jnp
in
or
and
sbbl
js
mov
xchg
aas
jle
or
loopne
stc
xchg
mov
sbb
fwait
iret
xchg
jp
cltd
sub
in
push
out
idivl
adc
shll
cmp
loope
cs
cmp
pop
adc
mov
orl
dec
imul
xlat
and
outsb
shl
insb
cmp
mov
push
push
scas
push
cmp
cmpsb
cld
sub
lcall
jmp
mov
and
xor
rorl
movsl
mov
cmp
movsl
les
dec
ret
adc
mov
lcall
sub
dec
out
mov
clc
xor
fadds
pop
pushf
dec
outsl
and
push
rclb
adc
lea
jb
stos
mov
mov
or
imul
pop
out
iret
mov
push
shl
add
adc
jns
aaa
shrl
lea
jp
or
mov
lea
das
push
cli
pop
jno
or
jne
stos
add
ret
adc
mov
nop
leave
xchg
lcall
cmp
std
xchg
mov
inc
adc
inc
xor
test
cmp
sub
lret
out
movsb
add
and
stos
cmp
mov
mov
sub
rorl
inc
fldenv
adc
pop
mov
inc
sti
sub
sub
mov
scas
test
inc
fcmovne
lahf
dec
xchg
dec
or
aas
loop
fwait
inc
sbbb
add
adc
and
cmp
ss
loope
xchg
fisubl
sbb
out
adc
test
test
ret
xor
jecxz
addr16
fcomp
push
fstp
inc
and
ljmp
stos
jae
les
ret
out
inc
or
fs
xchg
mov
scas
jecxz
add
repnz
cmc
push
lahf
pop
xor
mov
push
mov
insl
pop
jns
jno
cs
push
jmp
and
jae
gs
mov
es
pop
push
dec
dec
data16
popa
jge
imul
je
pop
adc
into
out
sbb
xchg
jno
and
fidivrs
inc
push
dec
lds
xor
push
mov
or
out
out
hlt
cld
push
dec
cmp
xor
arpl
sub
cltd
pusha
mov
or
ljmp
jg
scas
add
mov
out
test
sahf
jno
mov
out
mov
call
sub
fcmovu
xchg
popa
out
mov
and
push
mov
out
and
dec
add
or
jecxz
lock
add
punpckhbw
xlat
nop
outsl
xor
mov
out
popf
xlat
fcoms
fucomip
dec
repz
cmp
mov
jmp
pop
cltd
and
arpl
insb
nop
cltd
jle
movsl
outsb
call
sbb
cmp
xlat
fwait
push
adc
add
jmp
movsb
mov
rol
dec
cmp
inc
xor
outsl
fcomip
int3
mov
mov
int
rep
sub
outsl
jp
cmp
pop
outsl
outsl
jge
int
not
dec
lds
pop
xor
adc
inc
add
add
stos
lahf
jno
imul
xor
imul
inc
jmp
sbb
aad
sub
mov
idivl
loope,pn
mov
dec
mov
mov
dec
and
lds
mov
int3
test
xor
outsb
fcomip
sub
in
add
das
inc
mov
loope
push
in
mov
push
mov
push
in
push
xchg
loopne
dec
jl
jp
pop
jb
cs
lret
dec
jae
push
stos
shl
adc
push
test
inc
inc
pop
lds
adc
outsb
or
inc
test
or
sarl
pop
gs
jo
inc
addr16
popa
fisttpll
sbb
sbb
inc
jl
jo
sbbl
xor
inc
aad
jl
loop
mov
pop
cmp
pushf
daa
dec
cmp
test
push
enter
adc
test
popf
stc
lods
int
mov
lods
xor
mov
ret
xchg
sub
dec
adc
push
pop
in
push
jns
sbbb
outsl
jmpw
push
stos
je
and
push
dec
dec
mov
push
lret
pop
jae
mov
push
cmpsl
pop
xor
scas
ljmp
test
xchg
mov
and
jl
test
fildll
push
mov
gs
add
sti
cmpsb
mov
sahf
les
xor
rcrl
or
push
out
paddusb
out
cmp
mov
push
mov
sbb
xor
dec
fs
mov
sub
iret
dec
out
and
ss
xor
repz
pop
adcb
and
js
test
scas
outsl
sahf
fisttpll
stos
sti
lea
jp
test
in
push
rorb
jno
or
popf
mov
mov
rorb
dec
lahf
cwtl
jae
and
imul
aad
xchg
lds
xchg
je
in
jo
out
gs
xor
xlat
mov
fisttps
cmc
cmpsl
push
pop
inc
mov
fsubp
stos
cltd
pusha
fwait
pop
lahf
repz
stos
cmp
lcall
push
pop
adc
cli
pushf
imul
test
xor
bnd
outsl
add
lret
cmpsb
sub
push
icebp
inc
and
ret
dec
jne
clc
sbbl
cmpsl
loopne
push
imul
scas
mov
push
cmpsl
adc
test
adc
xchg
push
dec
mov
xchg
sbb
lcall
jne
xchg
lods
dec
cmp
jno
add
ror
xor
gs
ja
or
enter
lods
xchg
xor
jns
out
mov
imul
and
and
jns
cli
dec
pop
mov
or
pop
clc
add
jecxz
and
ja
adcl
mov
mov
aas
mov
sub
xchg
push
dec
repnz
dec
sbb
pop
arpl
ja
in
sbb
sbb
pop
cmove
movsl
and
jecxz
loope
sub
fdivp
nop
mov
pop
dec
nop
jne
fidivrs
pop
cltd
popf
mov
ds
lods
mov
stos
loopne
mov
insb
addr16
inc
dec
loop
pop
xlat
push
sahf
cwtl
call
push
mov
std
imul
jb
dec
les
xor
pushl
xchg
cmp
cltd
dec
cmp
pop
mov
cmp
dec
dec
fmull
sti
test
rcr
insl
jbe
sti
adc
lock
push
cwtl
out
push
outsb
outsl
ljmp
xorb
shlb
nop
push
stos
cmpsb
and
mov
dec
out
sub
roll
push
pop
or
ja
fmull
test
inc
popa
mov
push
std
push
lret
es
imul
xor
sub
jns
out
fwait
xor
decb
jnp
cmp
pushf
xchg
ljmp
xor
or
mov
dec
lcall
jb
jo
sbb
or
jb
sbb
dec
xor
mov
xlat
popf
pushf
test
dec
mov
lods
daa
sbb
lret
sti
jnp
cld
imulb
arpl
cmp
movsb
cmp
scas
lds
jno
scas
xchg
inc
ret
ljmp
ljmp
xchg
lods
dec
sub
inc
arpl
aam
lcall
stos
lcall
lret
bound
pop
lods
int
ds
es
mov
push
sub
lock
mov
fs
out
pop
arpl
push
es
bound
push
xor
xor
and
sbb
aas
sub
adc
push
xlat
and
push
push
xchg
lock
sbb
test
shr
push
out
sahf
cltd
pusha
pop
push
addr16
int3
outsb
int
mov
sahf
xchg
sbb
mov
add
xchg
mov
pop
push
les
imul
or
das
push
out
push
bound
xor
icebp
pusha
dec
inc
fcmovne
pop
dec
fsubrs
mov
add
inc
jg
jmp
mov
adc
add
jecxz
sahf
mov
into
mov
and
out
pop
cld
dec
in
mov
add
dec
xor
mov
scas
push
pop
es
inc
adc
mov
inc
call
mov
dec
outsl
into
lds
leave
fldl2e
dec
orb
nop
or
or
lds
dec
fsubr
xor
inc
test
out
outsb
ret
adc
int3
movsl
scas
mov
enter
push
insl
xor
daa
sbb
loopne
lret
dec
int
or
jo
mov
mov
pop
fisubl
cmpsl
daa
jne
outsb
test
pop
xchg
out
outsb
mov
mov
out
mov
call
sahf
aas
push
cmp
pop
inc
dec
inc
push
cmp
dec
xor
pop
call
fwait
loopne
rolb
jnp
jge
xchg
xor
test
xchg
push
or
stos
xor
rol
jl
xchg
popa
icebp
fcom
movsl
into
xchg
ret
jp
inc
ret
hlt
mov
stos
inc
out
negl
mov
lods
add
data16
jae
pop
xor
sbb
sahf
push
cmp
pop
cmp
movsb
clc
pusha
xchg
out
xlat
pop
outsl
je
xlat
cld
repz
jb
in
xchg
lcall
sahf
js
out
lcall
cwtl
push
imul
jg
lods
cmp
cmp
mov
aaa
in
std
insb
mov
sub
test
dec
cltd
sbb
andb
test
mov
pop
enter
sbb
andb
jbe
fcomp
fwait
ja
mov
jnp
int3
mov
dec
shrb
sub
cmpsb
adc
fisttps
xchg
inc
cmp
lods
pop
push
xchg
rcrb
aas
xchg
fisubrl
popa
cli
cmpsl
bound
cmp
sbb
mov
call
inc
aad
inc
xlat
fidivrs
add
mov
sub
jne
push
fisubs
adc
sbb
sub
lret
insb
push
cmp
mov
popf
or
xor
hlt
and
sbbb
add
cld
out
pop
push
push
jecxz
movsb
andb
outsb
jp
sub
pop
test
jbe
test
cli
sarl
jnp
jg
insb
gs
lea
push
gs
sub
mov
mov
rcl
ret
vpcmpgtd
adc
sub
cmp
shlb
xor
xchg
add
push
push
jp
aam
push
pop
rorb
cmpsl
js
inc
or
fwait
add
bound
xlat
aam
pushf
mov
adc
push
mov
les
sbb
popa
popf
call
aam
xchg
scas
push
loopne
iret
gs
cmpsb
pop
pop
sub
pop
daa
aam
inc
dec
inc
fstpt
add
icebp
jp
mov
imul
das
sub
orb
and
scas
into
decl
inc
pop
dec
push
jne
adc
test
shl
jp
jg
xor
mov
sub
sbb
jl
cli
in
sbb
test
push
ret
xlat
jle
pop
sub
pop
fidivrs
jno
dec
pop
cli
xchg
cmpsl
fs
add
dec
ds
insl
xchg
mov
stos
push
xor
jle
xchg
xchg
push
push
pop
imul
push
mov
cld
out
dec
mov
pop
lcall
cmp
cwtl
lds
mov
jne
lcall
cs
lret
add
iret
mov
aaa
push
mov
jno
inc
mov
push
es
mov
ljmp
inc
mov
push
ss
sahf
aaa
push
dec
push
scas
jp
scas
mov
ret
inc
filds
ljmp
jb
jnp
pop
mov
cmpsl
cmp
xlat
push
jne
iret
daa
lea
push
add
push
push
xor
insb
push
lret
cmp
gs
test
xor
roll
aaa
xchg
cmp
jle
add
arpl
bnd
jp
bound
pop
mov
mov
hlt
ja
ss
inc
jle
pop
adc
test
mov
jle
xchg
or
lahf
xor
dec
faddl
add
fstpl
and
pop
mov
daa
cld
sti
adc
cmpsl
add
cmp
cmpsl
and
and
es
dec
sub
fwait
or
frstor
rcrl
and
and
pop
fnsave
jae
rol
mov
imul
push
in
rorl
stc
filds
jp
stos
inc
push
out
pusha
dec
testb
test
bound
fucomp
fistl
rol
and
push
sbb
xchg
sub
cmp
sarb
mov
aad
sahf
aaa
sbb
call
mov
pop
es
mov
lods
loopne
pop
mov
xor
push
mov
push
lea
jle
fs
mov
push
push
insl
mov
aas
push
enter
stos
cmp
dec
cmp
sub
ret
xchg
insl
std
xorb
je
loopne
inc
out
int3
in
in
xchg
pop
dec
xchg
push
cmp
adcb
movsb
inc
pop
jae
push
push
xor
rolb
rcrb
push
lods
fs
sub
pop
sahf
iret
or
push
test
mov
mov
pop
sbb
cli
pop
xor
mov
jmp
in
xchg
mov
and
pop
xor
fsts
inc
push
sub
adc
mov
test
lcall
repz
sub
or
jbe
out
cmp
pop
inc
inc
mov
push
inc
test
inc
xchg
and
loopne
add
es
subb
repz
inc
dec
mov
mov
jle
and
ljmp
ss
subl
out
hlt
or
pop
sarb
das
xor
sti
loopne
fcmovb
gs
cmp
pop
repnz
sbb
cmpb
aas
test
and
outsl
out
sub
movsb
cli
out
mov
push
xchg
repnz
leave
mov
sbb
sub
mov
fsts
xor
popf
dec
bound
popaw
jmp
add
lock
push
jo
push
xor
notb
add
pop
push
repz
test
in
pop
sbb
sub
push
push
imul
hlt
xor
int3
ja
xacquire
iret
sub
outsb
dec
outsb
jp
mov
movups
int
xor
fs
popf
mov
hlt
jae
mov
adc
or
fisubl
daa
pop
rorl
dec
and
xor
dec
loopne
aas
cmp
mov
ret
fwait
jo
mul
inc
sbb
idivb
inc
sbb
dec
out
xor
outsl
mov
mov
jl
and
cld
test
dec
adc
addl
add
lods
mov
dec
aad
inc
ja
and
into
fcoms
jns
imul
jne
insl
add
jmp
out
test
or
lock
add
rcrl
fs
mov
testl
fiadds
push
cmp
cli
or
dec
mov
jne
jp
mov
movsb
add
jp
push
in
inc
aad
push
pop
sahf
in
out
mov
cld
fbstp
fimuls
cwtl
cmp
xlat
sbb
clc
mov
leave
jecxz
xor
dec
sub
insl
mov
adc
adc
inc
out
inc
cmp
sbb
mov
out
ficoml
pushf
cmp
push
push
mov
orl
mov
mov
sub
int3
mov
mov
and
or
adc
fldcw
je
jmp
sti
add
fisttps
xchg
xor
pop
mov
xchg
movsb
mov
inc
mov
insl
pop
repz
xchg
sbb
push
or
add
mov
inc
jnp
or
sub
jbe
gs
xor
and
or
lahf
or
dec
dec
cmpsb
push
cmp
push
sub
mov
inc
sbbb
push
incb
frstor
add
or
sub
cmc
dec
jo
aaa
test
pop
bnd
cmc
cmp
imul
inc
and
mov
adc
push
call
xor
sub
loop
xorb
orb
mov
jge
lret
ja
into
jns
jne
insb
rcl
jnp
jle
imul
xor
lods
inc
ja
pop
outsb
push
dec
leave
hlt
jg
and
pop
xchg
push
xchg
das
dec
mov
add
xchg
fwait
pop
sbb
xor
lods
xchg
mov
and
fs
jno
pop
enter
lea
xor
xlat
or
adcb
and
xor
xor
pop
enter
cli
mov
dec
into
mov
popa
out
insb
in
xchg
or
pop
arpl
push
lods
mov
xchg
pop
cmp
movsl
dec
subb
mulb
fsubr
movsl
dec
sbb
or
cmp
iret
push
cmpsl
jno
cld
lea
stos
enter
xor
clc
aaa
jle
scas
inc
fninit
pop
mov
sbb
daa
insl
lock
adc
push
and
and
sub
push
mov
test
in
add
ljmp
je
scas
pop
sbbw
cmp
pusha
add
mov
cmp
lock
in
in
sub
in
popa
cmp
pop
popa
and
mov
sub
xchg
pop
clc
ds
inc
push
inc
mov
push
mov
cli
mov
rclb
adcb
test
or
or
sbb
mov
loope
insl
test
dec
lock
gs
jb
rorl
cs
pop
aaa
mov
xchg
or
out
mov
jl
lds
jl
mov
data16
push
and
push
xor
inc
addr16
jmp
and
or
aam
insl
adcl
inc
xor
enter
ss
hlt
insl
or
in
or
sbb
ret
cld
js
mov
sbb
xor
or
ja
xor
jl
add
sub
push
fldcw
leave
pop
jle
pminsw
notb
jmp
scas
mov
aam
and
xchg
movsl
and
pop
stc
adc
adc
aaa
mov
pop
rcr
orb
jl
es
xorb
xchg
out
push
ret
fnstcw
inc
xchg
loopne
jle
out
call
pop
cmpsl
ljmp
fldcw
outsl
adc
mov
mov
mov
and
test
call
pushl
ret
jae
push
pop
pop
lahf
fldenv
aas
fldcw
nop
nop
mov
testb
xor
adc
cli
repnz
sbb
fnstcw
add
popl
and
clc
int3
xchg
into
imul
out
xor
xor
adc
inc
roll
sbb
cmp
in
xor
je
imul
cmp
lds
out
or
test
mov
mov
lret
push
orb
mov
test
sub
or
pop
push
dec
mov
xchg
bound
aas
and
mov
dec
xchg
adc
hlt
and
in
shr
int
mov
js
mov
xchg
mov
hlt
and
pavgb
cmpsl
fwait
pop
adc
jp
mov
outsb
jnp
in
pop
cmp
icebp
cmc
lcall
pop
jb
popa
adc
rcrb
jbe
xchg
nop
sub
cmpsl
and
mov
xchg
sbb
loop
les
test
jb
ja
imul
lods
enter
or
or
xchg
cmp
mov
scas
test
add
xchg
mov
and
ja
inc
lea
push
mov
repnz
les
jo
ss
push
mov
dec
add
inc
dec
mov
arpl
fdivr
mov
scas
add
xchg
bound
pop
gs
stos
pop
xor
hlt
xchg
lcall
in
add
jne
outsl
adc
push
in
mov
adc
mov
cmp
imul
outsb
jne
subb
adc
out
or
leave
dec
mov
and
and
pop
leave
outsb
xlat
cmpl
fcmovu
sbb
imul
dec
gs
push
xchg
sub
pop
pop
cmpsb
shl
xchg
pop
jp
xor
pop
adc
pop
aad
adc
cmp
insb
inc
add
lds
adc
std
fistpll
aaa
fstpt
adc
loop
bound
imul
add
popa
add
nop
and
mov
test
pop
mov
mov
add
mov
ret
es
out
push
or
xchg
add
dec
mov
inc
add
scas
test
shr
pop
insb
dec
jle
xor
xchg
cmp
mov
push
test
xchg
dec
pop
sub
lds
or
outsl
add
dec
repnz
adc
mov
adc
popf
enter
imul
outsb
and
in
sbb
adc
mov
pushf
jp
dec
addl
int3
pop
lods
push
bound
stos
loopne
ja
lcall
push
icebp
push
mov
adc
shl
add
out
fs
inc
push
imul
pushf
stos
loope
ror
sbb
neg
out
xor
add
cs
mov
mov
repz
dec
test
pop
dec
mov
sarl
and
xchg
icebp
loopne
sub
out
add
sbb
imul
push
mov
and
fldl
imul
subb
mov
xor
rorl
push
pop
push
out
call
pop
test
in
fstpt
cmp
adc
popl
into
std
or
scas
cmp
push
scas
push
mov
inc
fmull
xor
pop
push
mov
adc
inc
into
fchs
pop
add
into
test
mov
pushf
dec
ror
push
imul
imull
inc
jle
lock
push
sbb
mov
stc
xchg
test
adc
xlat
jo
ds
lret
jne
jno
lds
cmp
jge
mov
icebp
int
xchg
jp
xchg
nop
outsb
jge
jmp
mov
mov
sub
sti
push
push
out
pop
rorb
repnz
jle
ss
movsb
cmp
aad
test
ret
rcrb
jb
pop
dec
push
mov
mov
and
inc
addb
mov
mov
les
dec
sub
add
dec
xchg
ss
sub
hlt
push
mov
inc
mov
adc
movsb
xchg
pop
sahf
je
icebp
js
inc
push
add
les
sbb
into
push
push
mov
xor
fbld
or
iret
mov
lea
adc
jecxz
stos
sub
jge
xor
or
pop
out
or
xchg
stos
mov
sbbb
test
rcll
sarb
sbb
mov
dec
out
pop
pop
jmp
out
pop
push
xlat
jo
ds
arpl
inc
gs
loopne
in
push
int
fs
mov
cli
cs
xor
inc
idivb
stos
outsl
test
push
pop
mov
dec
mov
and
adc
ljmp
mov
adc
fnstenv
sarb
push
mov
mov
pop
push
add
mov
je
enter
sub
push
jl
aas
mov
shll
orb
pop
jle
xchg
pushf
bound
mov
xchg
cltd
add
sahf
sub
push
shll
push
outsb
into
cwtl
xchg
call
je
jle
lret
jmp
lods
cmp
fbstp
out
shr
call
std
sbb
leave
mov
pop
dec
jo
int
sub
call
loop
mov
fs
shl
push
hlt
jp
dec
jno
inc
pop
push
inc
xor
cmp
jp
imul
cmp
test
pop
mov
mov
push
test
lret
cmpsb
lods
ret
loopne
push
xor
ret
push
push
data16
jmp
push
xchg
out
adc
pop
dec
push
dec
mov
xchg
push
push
loope
xchg
cli
popf
or
dec
xor
cmpsb
mov
mov
sahf
int
jb
out
dec
mov
add
add
shlb
xchg
movsl
mov
iret
shlb
mov
insb
xchg
pop
jmp
loop
and
cmp
in
add
cwtl
icebp
or
shll
sub
rcrb
xchg
inc
bound
push
pop
popl
push
ljmp
mov
popf
stos
jle
ljmp
sahf
lods
mov
dec
loop
mov
push
cltd
nop
cmc
sti
pop
push
iret
mov
inc
mov
xchg
push
jmp
jnp
inc
pushf
lock
in
lret
dec
stos
insb
xchg
adc
pop
push
popa
pop
callw
in
mov
sub
dec
xchg
xor
into
jo
aam
cmpb
cwtl
xlat
push
xchg
cs
jp
pop
xchg
jmp
xchg
sub
pop
into
leave
das
aam
inc
aaa
out
push
dec
repnz
inc
iret
xor
jo
jmp
ffreep
mov
and
xchg
sbb
imul
and
jo
mov
sub
jb
repnz
sahf
ret
pop
jecxz
incb
pop
xchg
cmp
into
push
add
push
fs
mov
adc
lods
mov
fstps
sbb
xchg
xchg
pop
dec
dec
pop
call
cmpsb
pop
mov
cmpsb
cltd
repz
push
sahf
mull
mov
push
and
fcmovnu
hlt
insb
data16
sub
mov
jp
pop
ds
push
es
dec
inc
out
outsb
insl
outsb
add
sub
adc
xor
pop
ds
pop
imul
and
or
sahf
mov
push
xchg
iret
rolb
xchg
sub
add
adc
in
punpckhdq
mov
icebp
lret
mov
mov
inc
xor
push
std
aad
test
ret
sarb
rolb
aad
mov
sbb
or
inc
popa
xor
xchg
lahf
inc
fisubl
shll
sub
orb
and
xchg
jecxz
jae
pop
test
leave
jo
out
test
xor
cmp
cmp
pop
mov
sub
mov
or
pop
popa
out
add
cs
dec
nop
mov
adc
sub
sbbl
mov
pusha
adc
addb
enter
lea
insl
and
pop
insb
int3
or
push
mov
movl
enter
or
xlat
push
nop
dec
aad
out
mov
jge
pop
vpmaxsw
pushf
clc
mov
xor
jbe
fwait
data16
in
cmp
inc
dec
icebp
imul
and
push
int
divb
xor
test
mov
adc
test
mov
lock
movsl
paddd
cmp
hlt
inc
imul
mov
dec
and
in
jl,pt
add
cmp
loopne
cmc
mov
nop
mov
leave
mov
aam
loopne
jb
adc
fnstcw
push
insb
or
iret
mov
sbb
cmp
xlat
xor
sub
cmpb
std
xor
lods
mov
sbb
dec
jge
pop
mov
stos
ljmp
jmp
cmp
dec
mov
add
xchg
pop
adc
jge
in
push
jns
out
push
mov
mulb
mov
dec
scas
scas
repz
cmc
jae
push
cmpsb
into
ljmp
sarl
pop
rcrb
int3
push
and
divl
cmpsb
jg
enter
inc
or
icebp
insl
imul
mov
or
xor
ja
pushf
mov
ds
jmp
push
mov
faddl
mov
mov
scas
sbb
xchg
hlt
scas
inc
enter
jp
orl
mov
fwait
inc
mov
mov
repz
bound
fiaddl
rcll
movsl
out
outsb
xchg
dec
xchg
stc
and
and
and
jle
lea
xor
rorb
and
pop
fiaddl
push
rorl
sub
pop
or
cmc
mov
rcll
imul
loopne
xchg
push
mov
rcll
enter
xchg
mov
cld
inc
adc
cmpsl
mov
jmp
push
outsl
pop
test
inc
scas
and
cmp
or
jmp
xchg
push
pop
nop
test
push
or
cld
addr16
movsl
inc
loope
jp
nop
in
int3
xlat
and
mov
je
adc
or
mov
sti
mov
jmp
jmp
scas
pop
push
or
lds
scas
jnp
insl
cmpsl
hlt
cmp
push
xchg
sbb
lahf
adc
dec
jo
xchg
mov
aas
loope
cmp
cmp
out
cltd
and
push
add
adc
push
movsl
xor
into
xor
push
rcl
insl
sub
xchg
leave
add
sahf
or
pop
or
fld
cmpsl
punpckhwd
cltd
adc
pop
xchg
stc
lea
sbb
jmp
add
in
outsb
lds
leave
xchg
jmp
push
pop
outsl
clc
jecxz
xchg
inc
push
xchg
dec
sbb
enter
mov
out
fwait
and
sub
jnp
xchg
xchg
push
leave
enter
movsb
adc
enter
je
mov
imul
xlat
ss
es
jno
push
jbe
mov
dec
aaa
xor
push
cmp
inc
jp
imul
push
add
mov
pop
mov
ret
pusha
jo
aaa
push
mov
or
cmpsl
ret
pop
dec
jno
pusha
insb
jne
repnz
lock
jg
bsr
cmpsb
loopne
push
jb
pop
add
push
push
fidivrl
mov
xlat
and
dec
push
or
lret
insb
jbe
sarl
sbb
or
pop
dec
xchg
aaa
ss
xor
ds
jnp
cmp
and
jne
insb
test
xor
cmp
out
mov
xor
inc
cwtl
outsb
jae
loope
mov
push
jecxz
test
rorl
dec
jo
xchg
enter
mov
lods
pop
mov
inc
movsb
push
sbbb
lock
ja
mov
testb
mov
ss
pushf
in
mov
fistps
sarb
inc
imul
daa
dec
dec
pop
push
scas
add
mov
mov
fwait
dec
mov
mov
idivl
into
subb
inc
dec
mov
mov
jmp
or
scas
outsl
fdivrl
movsl
les
xor
sti
fisubl
arpl
push
inc
xor
push
les
jb
addb
js
or
outsb
fdivrs
pop
aaa
fs
cmpsb
adc
pop
mov
or
jl
push
push
int3
sbbl
outsl
dec
cltd
xor
es
ljmp
push
pop
mov
sbb
mov
ret
test
or
shll
mov
push
xchg
xor
and
and
cmp
jnp
pop
dec
mov
jbe
push
test
popf
or
es
sub
ret
rorl
mov
enter
jle
jle
push
cmpb
ret
clc
jge
dec
fucomp
cli
cltd
stc
popf
inc
mov
cmpsb
fwait
aaa
jns
ret
rcrb
or
addr16
jno
push
sahf
cwtl
test
xchg
jl
outsl
inc
pusha
mov
fucomp
in
mov
mov
or
mov
jmp
mov
or
push
imul
pop
mov
jmp
into
enter
push
mov
aaa
mov
push
test
or
push
movsb
cmc
xchg
aas
sub
inc
movsb
mov
cmp
and
or
adc
insb
sbb
test
mov
mov
mov
popf
dec
aam
or
xor
mov
push
filds
rclb
movswl
inc
scas
xor
test
test
fimull
xlat
imul
pop
inc
out
fcomps
sub
fcomp
xlat
jne
cltd
mov
jge
mov
dec
ret
test
push
pop
loope
popf
and
bswap
lock
les
pop
fiadds
sub
ss
cmc
in
fimuls
add
stos
ret
or
rcl
mov
jo
pop
push
aaa
data16
pop
data16
sub
pop
in
int
loop
dec
inc
jmp
cli
ja
rcr
or
push
xchg
push
jle
dec
mov
mov
jmp
aas
mov
xchg
pop
xchg
pop
or
dec
or
pcmpeqd
test
sub
rorb
cmp
aam
pop
jns
and
lcall
shlb
int3
insb
jo
mov
pop
js
loope
xor
insb
cmpsl
jbe
sahf
aas
cmp
push
sub
dec
inc
das
cmp
add
and
fistps
cltd
faddl
dec
xchg
push
fwait
lock
or
orl
ja
mov
outsl
js
mov
mov
xor
xchg
dec
into
fisttpl
dec
pop
data16
xchg
scas
cltd
sub
xchg
xor
jp
pop
sub
mov
stos
cmp
jge
mov
xchg
outsb
mov
xchg
cmp
pop
cmpsb
mov
movsl
adc
ficoml
push
pop
in
mov
fdivs
arpl
call
lcall
into
stc
cmp
jo
xor
hlt
push
out
jae
adc
mov
adc
aad
add
dec
and
jno
test
jmp
sub
incb
dec
rol
jo
xchg
das
push
les
xchg
ljmp
push
inc
sbb
sbb
jl
mov
sbb
push
or
gs
add
pop
out
pop
inc
mov
sbb
pop
mov
mov
push
dec
xchg
popf
int
xchg
xor
pop
pop
int
popa
out
scas
loopne
lret
jl
push
aas
dec
out
mov
outsl
and
clc
pop
ret
mov
fbstp
cli
mov
adc
nop
pop
lcall
fwait
je
mov
sbb
data16
scas
out
dec
jae,pt
movsl
mov
dec
xchg
pop
push
scas
cld
movsl
add
jl
popa
cmc
xchg
int3
push
xchg
int
movsl
je
divb
data16
stc
xor
call
sbb
and
or
adc
loopne
int
cli
and
lea
repnz
test
jbe
pop
xchg
leave
sub
sub
and
push
xchg
push
dec
fcoms
jp
mov
ret
mov
incb
sub
push
ja
mov
je
jne
push
sub
jnp
aam
adc
jge
in
lods
xor
and
pushf
xchg
inc
call
into
jp
out
or
mov
pop
or
mov
cmpsb
or
test
sbb
int
mov
or
ja
add
iret
cmp
ds
mov
ret
sbb
outsl
mov
push
ret
adc
nop
fcoml
xlat
mov
fsubrs
sbb
pop
sbb
dec
and
aaa
je
imul
rorb
imul
idivb
mov
shlb
push
data16
sbb
loop
or
out
cltd
push
jp
jnp
ja
sahf
jl
add
jg
xor
xchg
clc
lea
mov
adc
jl
outsb
pop
ret
mov
xlat
mov
jl
pop
or
ss
push
fadds
mov
inc
fwait
aas
mov
push
imul
notl
loope
lret
aam
cmpsb
ret
fsubrs
and
or
xchg
push
adc
jg
imul
mov
ret
add
mov
ret
inc
lahf
adc
adc
xchg
mov
pusha
imul
mov
mov
loopne
dec
pop
dec
push
push
adc
pop
bound
mov
xlat
mov
dec
pusha
cmp
call
pop
pop
xchg
jo
sbb
adc
test
nop
fdivs
mov
outsb
sub
inc
mov
mov
jle
mov
dec
cwtl
sti
in
aas
shl
ror
dec
in
cs
cmp
jmp
fwait
jecxz
xor
leave
mov
xor
lea
push
popf
cs
test
je
inc
or
xchg
sub
and
js
or
dec
cmp
das
fldt
outsl
mov
xchg
test
or
xchg
es
imul
xchg
aad
mov
imul
negl
mov
mov
ret
rcl
pop
cmpsl
add
mov
arpl
pop
pop
iret
sbb
sahf
loopne
mov
xchg
rorb
sub
sbb
fwait
pop
popa
fstl
jb
lods
pop
rcrb
repnz
aas
mov
sti
or
int
lret
pop
jnp
pop
add
aad
sub
inc
pop
mov
pop
cmpsl
mov
pop
xor
mov
mov
in
lock
mov
dec
sub
cli
fsubp
jnp
test
jo
push
inc
dec
test
subb
cmpsl
sarl
mov
outsb
dec
clc
in
loope
push
push
jnp
imul
loop
int
cmp
ret
shl
xor
cmpsb
sub
nop
ja
loop
in
jo
test
jge
popf
xchg
in
push
pop
mov
sbb
aam
cmpsb
inc
outsb
scas
fwait
mov
out
pop
pop
cli
xchg
sti
sbb
mov
cmc
mov
outsb
in
enter
sub
sub
jne
dec
jne
fisttpll
test
scas
add
jl
movsb
repz
out
adc
jno
es
xrelease
mov
out
push
dec
push
mov
pshufw
dec
imul
xchg
dec
mov
insl
pop
loope
int
sarb
loope
jns
jle
imul
mov
fdivs
sbb
dec
movsl
or
xor
dec
or
xchg
mov
pop
leave
add
or
sbb
es
and
xor
jne
push
bnd
mov
add
call
adc
pushf
sub
add
mov
cmp
fadds
imul
pop
xor
sub
xor
fstpt
mov
repz
sbb
sahf
or
loopne
push
adc
lret
lret
out
out
mov
mov
adc
push
sub
in
je
jnp
lods
pop
mov
jle
out
push
push
scas
inc
ret
xor
arpl
sub
cmp
cld
pop
enter
jo
test
and
stc
ret
pop
bound
insb
sahf
lret
jno
mov
stc
divl
jbe
cmc
cmp
les
xor
aas
mov
shrb
mov
or
inc
cmp
inc
shll
dec
push
pop
xor
and
stos
sub
cwtl
lahf
adc
popa
les
pop
iret
lcall
outsl
lods
pop
pop
repz
jb
test
xchg
pop
lcall
es
jo
daa
push
dec
ljmp
cltd
push
mov
sahf
adc
xchg
icebp
inc
xchg
lea
xchg
inc
in
mov
aas
xor
mov
and
mov
adcb
inc
cmp
xchg
jns
subl
pop
out
sti
push
pushf
push
bound
gs
nop
int3
loope
pop
bound
lret
mov
aam
jmp
xchg
sub
incl
push
xchg
cmp
nop
push
mov
inc
arpl
out
cmp
jmp
test
sti
cwtl
jp
test
outsb
cwtl
adc
mov
addr16
stos
pop
shll
jo
lods
shrb
push
jecxz
rcrl
and
lcall
pop
scas
into
fbstp
inc
pop
inc
inc
mov
repz
lahf
cmp
push
leavew
imul
test
pop
daa
inc
movsl
adc
xchg
jbe
les
nop
ficoms
cmpsl
inc
sbb
xchg
push
stos
pop
insb
and
add
mov
clc
pop
cmc
sar
out
pop
adc
notl
in
push
pop
push
mov
xchg
mov
int
sbb
addr16
xor
sub
iret
leave
mov
mov
or
pop
cmpsb
imul
xor
or
jns
pop
or
lea
rcrl
popf
cmp
cmp
mov
push
add
pop
or
mov
cmp
push
cmp
mov
mov
push
ret
cmp
rorb
push
and
or
ret
movsl
jae
xor
aam
sub
fdivs
fnstcw
stos
mov
jl
mov
dec
subb
add
inc
inc
fwait
shrl
push
inc
fs
gs
add
leave
inc
xchg
fsubrl
push
lret
pop
push
ret
push
pop
dec
mov
clc
daa
mov
in
mov
and
or
xchg
test
jecxz
jle
ljmp
dec
std
push
or
sub
into
jae
inc
mov
pop
test
ss
push
dec
push
filds
or
lods
test
test
imul
ret
mov
lahf
repz
popa
cmpsb
insb
and
fadds
cltd
icebp
sub
push
int3
push
cwtl
icebp
cmp
pop
aam
test
ss
xlat
jge
call
cmpsb
mov
jecxz
pop
cmp
sub
add
adc
cmpsl
pusha
loope
clc
fstps
out
popa
hlt
inc
dec
xor
cmp
andl
aaa
sti
xchg
popa
ss
mov
ret
adc
sub
pop
aad
lock
dec
cmpsb
fcmovbe
sub
cmpsb
mov
in
mov
aaa
xchg
dec
sbb
loopne
ds
mov
ret
cmp
js
pop
sbb
xchg
dec
sti
movl
push
and
lret
pop
sub
dec
fadd
imul
jmp
popa
imul
jno
orb
xchg
push
cmp
jne
lods
mov
insb
push
or
lahf
mov
flds
xchg
and
xlat
ret
repnz
jne
decl
push
scas
decb
jmp
cmc
testb
sbb
into
dec
jp
jle
insl
decb
cmc
inc
add
mov
in
push
dec
mov
lods
push
sub
gs
imul
addr16
cmp
insb
stos
fcomps
xchg
addb
xlat
imul
hlt
pop
xchg
and
imul
movsl
mov
mov
dec
dec
bound
cltd
dec
adc
lret
jl
fiadds
popa
mov
stos
add
or
les
rcrb
stos
xchg
and
stc
jns
arpl
add
and
push
mov
mov
movb
jl
repz
mov
xchg
insl
call
stc
mov
ret
lahf
enter
mov
pop
stc
ja
in
test
cmpl
push
xchg
shl
call
aas
push
jae
je
pop
in
es
sub
cwtl
test
jnp
pop
jnp
xor
or
pop
mov
stc
dec
mov
enter
fldenv
test
sub
or
mov
push
lahf
mov
and
jl
stos
inc
lods
ljmp
adc
or
pop
push
repnz
hlt
or
jae
xchg
addr16
sub
fcmovnb
sbb
nop
mov
mov
ret
cmpsl
mov
clc
mov
notl
hlt
sub
fbld
pop
push
xchg
pop
js
push
sti
pushf
imul
lock
push
mov
lds
pusha
push
dec
mov
inc
cltd
jp
jp
lcall
pop
data16
jbe
filds
shlb
popa
xchg
clc
lea
add
fildl
aaa
add
roll
in
cli
xor
into
mov
mov
and
push
add
scas
xor
xchg
push
sti
imulb
lret
push
mov
adc
sarb
push
dec
cli
sbb
scas
dec
or
in
pushf
jno
push
stos
fst
xor
push
outsb
out
loopne
jecxz
outsl
mov
mov
out
aam
lock
inc
pop
mov
sbb
mov
push
cmp
test
lret
std
mov
cmp
jecxz
mov
xchg
mov
jecxz
mov
in
mov
test
nop
push
dec
adc
mov
mov
adc
lds
adc
jb
dec
shlb
mov
in
clc
bound
aam
push
andl
push
ljmp
jg
arpl
mov
in
push
or
fimuls
pop
inc
push
xchg
mov
xchg
and
sub
dec
pop
scas
data16
out
lret
push
jle
lds
pop
dec
mov
mov
mov
or
in
inc
mov
jb
mov
lea
fisubrl
mov
mov
shll
jo
pop
test
in
jbe
inc
out
cmpsb
dec
mov
loopne
jno
xchg
adc
or
cmp
out
cld
sahf
into
in
call
fisttpll
mov
clc
push
rcrb
add
fdivrp
repnz
mov
fisubs
enter
dec
loop
mov
add
mov
popa
xchg
or
nop
rclb
sub
push
in
lcall
ret
and
pushf
dec
jp
mov
pop
xor
add
pop
fstps
push
fwait
push
mov
pop
std
lock
lret
ror
mov
cmp
push
pop
mov
movsl
jecxz
pop
daa
addl
stc
jmp
mov
sbb
push
push
sti
pop
dec
or
insl
and
bound
cs
ds
xchg
mov
leave
xchg
mov
cmp
les
cmp
pushf
call
dec
pop
push
stos
mov
mull
fidivl
imul
in
or
insb
jbe
insl
mov
push
and
iret
js
pop
inc
out
insl
mov
jbe
cwtl
insl
or
sar
xchg
mov
ret
in
rsqrtps
call
cwtl
inc
leave
sub
pop
push
cmp
es
mov
sbb
ret
stos
pop
in
xchg
dec
mov
jno
add
pop
aad
add
push
lret
out
out
sub
xor
bnd
std
outsb
dec
sarb
outsb
sbb
xchg
mov
into
call
call
xor
stos
mov
mov
push
insb
js
ds
imul
xchg
lock
xor
inc
out
int
lret
inc
rclb
push
insl
mov
arpl
xchg
outsb
jle
pop
fs
or
adc
push
mov
and
scas
addr16
sbb
stos
call
call
mov
sbb
inc
and
jb
jb,pt
xor
jo
in
dec
sbb
int
test
repz
and
dec
mov
jmp
or
pop
movsl
popa
xchg
pop
mov
daa
jnp
sub
std
pop
cmp
push
inc
jecxz
dec
nop
xor
push
leave
popf
or
cmp
sub
adc
xchg
out
inc
out
adc
lahf
pop
fwait
lahf
aad
into
dec
jbe
mov
in
xor
repz
push
sbb
inc
xorb
hlt
inc
mov
jmp
add
dec
mov
ret
ret
xlat
addb
sbb
shll
es
mov
daa
sahf
sti
pop
mov
into
fisttps
cmpsb
out
dec
mov
lahf
push
xchg
or
testl
cmp
mov
and
test
insb
cwtl
push
push
popa
adc
pop
or
insl
xchg
stos
stos
and
dec
jl
movsb
sub
fs
adc
ljmp
cltd
enter
ss
pusha
into
push
xchg
jle
pop
fistpll
popf
jle
inc
inc
xor
adc
xchg
dec
out
pop
dec
cmp
xchg
pop
setnp
fdivs
pop
daa
dec
xor
inc
icebp
jl
aas
dec
pop
iret
inc
lock
pop
cmpsb
push
inc
aad
cmc
dec
outsb
into
dec
inc
fistl
popa
lcall
mov
js
push
inc
mov
jp
and
jnp
insb
adc
mov
mov
add
xor
dec
rorb
loope
imul
xchg
xor
add
push
xor
xchg
iret
mov
mov
push
insl
adcw
js
cmpsb
fcmovnu
ficoml
repz
or
inc
addr16
orl
xchg
addr16
pop
xchg
repz
adc
icebp
popa
sbbl
lds
dec
pop
or
test
enter
cld
imul
mov
add
add
in
and
xchg
inc
sbb
ficoml
jp
lcall
fwait
xor
dec
xor
out
cs
lock
fadds
imul
pop
sub
je
sub
lcall
rolb
jno
mov
out
dec
cmp
and
xchg
dec
sub
filds
add
bound
cmpsb
sarb
stos
cmpsl
cmp
insl
cwtl
lret
or
jp
out
fnstenv
add
leave
push
ret
sbb
mov
xchg
dec
push
add
std
jns
aas
pop
loope
clc
cmp
dec
or
and
dec
adc
lea
xchg
cmp
test
scas
push
cli
mov
lock
inc
cmp
dec
mov
outsl
out
notl
dec
stos
mov
mov
test
es
std
dec
jbe
xchg
js
push
hlt
mov
adc
or
cld
mov
inc
dec
das
mov
xor
out
mov
out
jbe
imul
push
stc
insb
sub
scas
lock
mov
add
xchg
lds
adc
mov
add
jmp
dec
dec
dec
fsub
dec
loope
xchg
cmpsl
mov
pop
movsl
bound
flds
lock
mov
inc
ret
cs
dec
aaa
pop
shr
or
cmpsb
inc
out
sbbl
add
cli
mov
cmpsl
ds
mov
push
cwtl
dec
pop
xor
fisttpll
or
test
lods
mov
leave
pop
or
fs
rcrb
lods
or
fists
or
mov
fwait
and
sbb
dec
pop
dec
iret
pop
cmp
and
pop
repz
lret
mov
inc
movsl
xchg
mov
and
xor
xchg
out
pop
bound
or
sbb
or
int
js
cs
ja
pop
or
clc
fsubrl
sbb
jae
push
leave
jo
and
ret
jg
sbb
dec
dec
jmp
out
out
imul
int3
inc
lock
aas
inc
cltd
incb
aad
mov
inc
ljmp
mov
mov
mov
loope
pop
into
sbb
dec
cmp
jb
pop
test
mov
inc
jmp
nop
in
mov
test
or
ljmp
push
popf
pop
and
cs
fcomi
jecxz
or
pop
ffreep
dec
cmp
cmc
test
inc
fwait
pushl
mov
mov
inc
and
jmp
int3
adc
xlat
dec
lds
divb
pop
clc
sub
je
or
sbb
mov
pop
fcos
jl
jns
and
ret
adc
adc
or
xor
rcrl
mov
andl
pop
push
testb
inc
adc
pop
pop
ret
popf
call
cmp
sub
scas
sbb
sub
jae
mov
int3
je
jae
into
pop
aam
test
push
ljmp
dec
arpl
es
jle
or
test
test
pop
insl
pop
jp
test
jp
lods
jge
pusha
outsb
notl
sbb
add
leave
add
stos
sbb
sub
ja
pop
mov
iret
push
push
and
sahf
js
insl
xchg
dec
push
mov
sub
mov
mov
pop
lea
data16
pop
cs
mov
cs
add
movl
and
lock
push
popa
xchg
sbb
push
mov
push
mov
test
xchg
push
out
lods
and
sti
loope
xchg
push
push
and
insb
loopne,pt
jae
add
pop
pop
aad
dec
inc
hlt
cmpsl
rcl
mov
out
dec
xorl
or
push
and
lahf
adc
loopne
mov
push
pop
jb
inc
xor
sub
popa
adc
in
fucomip
xchg
push
cld
orb
xchg
ljmp
pop
in
mov
and
into
xchg
fcoms
inc
ret
jae
pop
inc
int
arpl
push
add
push
inc
mov
add
add
cmc
dec
je
imul
inc
test
loope
outsl
lds
nop
mov
mov
insl
add
add
dec
mov
xor
test
movsb
push
popa
fisubl
leave
fisttpl
ljmp
push
subl
sbb
adc
es
dec
mov
push
pop
lret
ss
scas
dec
shrb
js
sbb
xchg
icebp
xor
push
xchg
popa
sub
cmpsb
dec
xlat
sbb
int
mov
fs
xor
lea
mov
lods
pop
xchg
pop
ret
enter
dec
shlb
outsl
in
cmp
aad
popf
dec
mov
adc
ficoml
scas
movd
inc
push
and
mov
in
pop
aam
inc
fcomp
push
push
sbb
inc
hlt
cmp
pop
call
std
hlt
xor
dec
in
cmp
sbb
lcall
fwait
mov
leave
int
arpl
jne
jns
sub
pop
lcall
in
out
in
cmp
cmp
push
jbe
pop
out
inc
sub
mov
scas
adcb
mov
fisubrl
fwait
adc
lcall
in
enter
cmpsb
andb
adc
nop
sbb
push
cld
push
adc
xchg
dec
cwtl
aas
jl
add
mov
cmp
fnsave
push
cwtl
add
xchg
xchg
mov
mov
maskmovq
divl
pop
pop
cwtl
push
sbb
popa
sbb
xor
lods
pushf
xchg
leave
sbb
dec
movsl
and
adc
imul
movsl
sub
adc
test
push
ljmp
adc
ss
inc
inc
adc
neg
jno
and
sar
icebp
dec
mov
cmp
das
das
nop
decl
jmp
fwait
adc
push
scas
adc
sbb
bound
and
jno
jno
nop
inc
repz
and
lods
in
push
lret
pop
or
cld
mov
add
jae
jae
mov
mov
rorb
cmp
out
jae
fidivrs
loop
icebp
adc
sub
aaa
dec
dec
nop
pop
scas
inc
push
jns
cmp
jg
dec
and
mov
jl
add
pop
aam
pop
cmpsl
jns
adc
inc
xchg
inc
push
clc
jl
pop
shll
hlt
push
test
cli
and
or
enter
jbe
or
lahf
fistpll
push
in
add
sbb
int
adc
lret
insl
push
adcb
cmp
fs
lcall
dec
sbb
sbb
mov
loope
inc
js
adc
mov
popa
les
in
inc
cmpsl
xor
rcrb
outsb
ret
ss
push
adc
jmp
cmp
popa
xchg
add
nop
xor
ret
mov
adc
rorb
sar
lods
adc
and
lcall
jg
mov
dec
lret
cli
xor
dec
push
push
adcb
fildl
lcall
fwait
movsb
sub
xchg
add
mov
int3
push
mov
lcall
xor
inc
ret
sarb
decl
jmp
xchg
cmc
fmuls
sub
jae
xchg
cwtl
popa
sbb
push
out
sbb
mov
xor
or
lcall
push
lcall
movsl
adc
rcrl
mov
shrb
mov
dec
and
cli
mov
fdivrl
cs
xchg
scas
loop
inc
inc
dec
bswap
cltd
mov
xor
or
imul
fstl
gs
hlt
inc
jb
cmp
sub
jae
sar
outsb
je
jbe
xor
or
dec
clc
loopne
popa
inc
loopne
adc
sub
xchg
sub
int3
mov
pop
incb
out
mov
sarl
jbe
int
outsb
push
adc
jnp
movsb
mov
jns
lods
cli
jne
push
out
movsb
aaa
icebp
add
xor
add
pop
dec
push
xchg
jbe
xchg
add
pop
push
std
loop
jmp
rclb
pop
mov
fcmovne
outsl
inc
imul
addb
aam
add
jo
ja
push
pop
mov
inc
stc
mov
inc
xlat
fwait
loopne
outsb
jno
adc
sahf
out
dec
pop
fnstsw
arpl
fbld
pop
mov
cmpsb
lret
jae
stos
cmc
pop
out
sbb
fsubp
xlat
inc
cmc
mov
cmpsl
mov
ret
cld
and
or
pop
or
sub
ret
hlt
inc
andl
ja
int3
xor
xor
mov
repz
push
and
mov
pop
icebp
in
scas
or
sarb
mov
arpl
cmp
lret
push
jp
xchg
test
stc
imul
sub
fistps
jnp
push
lds
cld
inc
xlat
push
aad
xchg
xor
jmp
push
pop
mov
outsb
testb
neg
mov
cli
lods
or
dec
lods
push
clc
lcall
mov
adc
fcoms
sub
lcall
loop
push
mov
out
lcall
inc
mov
and
cmc
roll
mov
xchg
rcrl
fs
xchg
cmp
sub
lock
movsl
dec
xor
test
ja
lock
rcrl
mov
jmp
lods
in
mov
fwait
mov
mov
adc
inc
xor
das
popf
mov
jo
pushf
aas
into
lret
jo
mov
cmp
andl
es
push
ficompl
add
adc
gs
jp
lret
cli
mov
mov
and
jnp
out
dec
add
jmp
cld
adc
jmp
mov
int
incb
in
sahf
int3
mov
push
mov
pop
xlat
mov
pop
push
fs
imul
ror
cmpsb
ja
cmp
dec
or
and
add
scas
aam
out
jo
mov
xchg
fisttpl
jle
call
xchg
jns
add
std
push
sbb
pop
lods
push
xchg
pop
inc
cmc
das
push
jo
out
dec
mov
sub
icebp
data16
fwait
imul
mov
dec
adc
lret
sbb
xchg
js
sti
push
mov
aaa
push
pop
mov
push
in
xchg
outsb
sub
add
dec
xchg
adc
lods
inc
push
pop
je
inc
cmp
xor
test
pop
jo
dec
scas
scas
aaa
aad
sti
pusha
aaa
fdivrl
ljmp
fsubrs
repz
pop
pop
icebp
mov
inc
scas
sub
mov
leave
rclb
mov
jg
rol
xor
pushf
cmp
cs
and
andb
stos
jns
sub
movsl
call
xchg
movsb
push
fistl
mov
dec
out
mov
cmp
sbb
cwtl
test
xchg
mov
aas
and
push
mov
mov
ljmp
jg
ds
push
jbe
mov
stc
cltd
jmp
iret
and
mov
je
dec
jmp
ror
mov
jmp
sub
lret
mov
jg
inc
xchg
inc
or
movsb
loope
mov
lcall
test
into
add
mov
add
push
and
rcrb
bound
or
ds
aaa
rclb
mov
push
ss
xchg
mov
mulb
out
pop
mov
mov
into
add
push
dec
mov
in
insl
jbe
dec
cs
test
test
or
lods
dec
jnp
push
ret
cmp
push
dec
popa
icebp
lret
mov
dec
les
xchg
push
mov
shl
push
cmp
push
call
add
mov
mov
ret
or
imul
add
jmp
ljmp
shrb
or
adc
aaa
mov
cltd
test
adc
out
rep
cvtps2pi
js
aaa
rorl
xlat
adc
add
jae
jmp
or
aam
fidivl
pop
loopne
and
dec
fistps
insl
popa
loop
rorb
xor
or
nop
push
mov
mov
aas
sti
mov
hlt
outsl
mov
pop
mov
sbb
adcl
arpl
sub
andb
loop
mov
mov
push
pop
divl
lcall
and
dec
cltd
pop
lods
imul
mov
xlat
xchg
loop
inc
fildl
jmp
stc
push
stos
outsb
mov
jmp
shr
push
roll
jle
fisubl
shlb
fidivrs
push
test
sbb
outsl
mov
bound
cmp
push
clc
aas
xchg
test
push
jge
push
fwait
dec
fisttps
mov
in
pop
jb
inc
sub
test
out
push
and
inc
cmc
jg
mov
mov
lock
jb
inc
mov
pop
mov
clc
ret
push
and
out
jecxz
jae
gs
movsl
sub
add
enter
aas
lods
pop
sbb
jbe
sti
pop
call
dec
das
dec
dec
int
aaa
daa
mov
mov
push
cmpb
ds
mov
orl
fwait
dec
or
enter
mov
sbb
jno
sbbb
push
push
bound
cltd
pop
push
outsb
mov
cmp
dec
lods
iret
inc
xchg
mov
mov
cmp
mov
mov
scas
hlt
fdivrl
pop
scas
jle
add
mov
movsl
mov
scas
outsl
xor
imul
dec
pop
nop
cmpsl
sbb
je
pop
fucomi
sub
icebp
hlt
das
and
leave
nop
test
jnp,pt
sub
mov
addr16
pop
clc
fildl
rcll
jne
jge
pusha
clc
mov
popl
sti
mov
inc
mov
jmp
lods
sbb
pop
sbb
cltd
xor
pop
ljmp
popa
jle
ret
inc
addb
shll
push
fisttpll
adc
fwait
ljmp
mov
jnp
cmp
cmc
cld
or
adc
cmp
sub
arpl
sub
jno
xlat
xchg
add
jns
les
iret
pop
push
test
mov
cmovnp
adc
bound
not
imul
add
pop
cmp
push
pop
jae
inc
aam
fwait
int3
push
mov
ret
fdivrs
dec
push
mov
addr16
inc
push
imul
dec
ds
out
cmpsb
jb
xchg
pop
aas
inc
lea
out
aaa
mov
cmc
hlt
hlt
inc
filds
out
inc
xorl
mov
jmp
fdivrp
ficomps
out
scas
push
cs
aas
sub
mov
jbe
jecxz
and
cli
and
cmp
xchg
cmpsb
gs
rcr
movsb
add
mov
push
aaa
int3
mov
mov
fstpl
ficomps
out
dec
jl
inc
cmp
shlb
orl
mov
loope
lcall
fwait
mov
dec
push
sub
rolb
pop
jns
pop
mull
dec
ret
dec
js
dec
push
out
dec
or
data16
int
cmp
fwait
iret
xchg
or
test
data16
mov
jecxz
ret
mov
xchg
push
cli
outsb
movsl
int3
sbb
add
add
jg
ficoms
aas
and
jb
leave
shll
test
cmp
jmp
daa
mov
xchg
lds
mov
sti
xor
sbb
sbb
mov
daa
ret
int3
xor
stc
mov
push
fists
sarb
adc
popf
das
out
notb
xchg
ss
mov
scas
sarl
cld
pop
cli
or
mov
inc
mov
push
lret
jb
pop
popa
inc
add
shll
mov
fwait
cld
inc
jo
push
mov
movsl
mov
mov
add
es
jo
push
mov
je
outsl
jecxz
aad
sub
cmp
es
mov
cmc
clc
cli
adc
push
call
pmuludq
push
in
xchg
mov
mov
call
fs
test
pop
or
scas
and
mov
aam
mov
inc
not
sub
test
jecxz
sar
hlt
lods
cld
xchg
mov
xchg
outsb
lods
dec
cmp
rcrb
dec
rolb
rolb
popa
xlat
add
test
inc
add
imul
mov
pop
ss
std
dec
stc
arpl
lock
push
lea
stc
das
subb
push
inc
jnp
iret
xorb
call
std
das
pop
push
hlt
jmp
rcrb
sarl
jo
dec
mov
dec
mov
test
dec
mov
icebp
cli
pop
jo
push
xchg
jecxz
mov
pusha
dec
and
jl
xlat
mov
out
mov
cmc
lods
movsb
sub
adc
lahf
ficoml
jmp
mov
cmpb
ret
and
sub
pop
adc
push
mov
add
cmp
imul
and
push
scas
mov
mov
std
or
xlat
jns
shll
lods
adc
faddl
xor
fs
sub
aaa
sbb
bound
inc
xchg
add
out
cmp
shl
push
jno
popa
scas
push
mov
xchg
dec
jle
ficomps
pushf
aaa
pop
fcmovb
or
das
push
xchg
push
into
or
ljmp
lods
ret
push
lret
imul
into
loopne
imul
xchg
lock
testb
out
ret
sub
fmuls
dec
test
fs
and
cmpsl
cmpsb
dec
jnp
lahf
xor
mov
jmp
push
mov
push
test
push
notb
or
dec
out
jbe
imulb
pushl
cmp
cltd
ljmp
aad
into
mov
je
pop
scas
xchg
pushf
fmull
xchg
pop
mov
sub
push
ljmp
rcrb
cmpsb
scas
jnp
lahf
rolb
shr
pop
and
mov
out
in
xorb
mov
cmpsl
add
xchg
push
idivb
adc
xchg
pop
cmp
jno
popa
repnz
sub
xchg
out
jle
fidivrs
repnz
pop
stc
outsb
mov
pop
sub
push
addr16
pop
push
insb
push
out
cmpsb
sarb
xor
mov
xchg
cmp
lods
inc
hlt
xor
xor
das
xchg
xchg
sub
mov
push
fisubl
divl
lcall
add
shll
mov
test
dec
mov
push
out
call
mov
and
or
push
cmp
add
or
push
mov
lahf
push
addl
lock
lods
xchg
adc
adc
inc
daa
bound
xchg
fcmovne
ljmp
les
mov
ret
lds
lds
out
pop
cmp
pop
aas
mov
cli
fisubrl
insl
testb
test
andb
shlb
xchg
add
ljmp
out
dec
mov
pop
push
jnp
sub
inc
and
test
mov
scas
cmpsl
sub
test
mov
pop
sbb
insl
mov
pop
lds
dec
loop
pop
popa
xor
leave
push
jo
push
insb
jp
add
mov
sub
dec
inc
sub
mov
adc
pop
ss
and
cli
mov
mov
xchg
orl
cs
jl
lods
aad
mov
inc
xchg
xchg
mov
adc
pop
or
negb
addl
mov
mov
ds
mov
push
es
push
bound
sbb
rcll
std
mov
fildl
aad
jno
jl
xchg
jmp
aam
xchg
inc
lods
jp
xchg
in
ljmp
xor
jg
mov
out
arpl
mov
enter
jb
push
xchg
cmp
sbb
push
in
push
cwtl
pop
push
js
jo
ror
shll
jno
or
pop
xor
adc
das
mov
mull
cltd
in
or
add
add
or
inc
add
mov
jmp
or
pop
mov
push
popa
pop
xor
pusha
insl
mov
dec
test
xchg
movsb
cmp
sbb
or
xchg
add
sarb
aas
nop
push
or
cwtl
loop
push
out
mov
in
pop
sub
push
cwtl
mov
outsb
dec
and
popa
xchg
mov
xor
popf
loope
rorl
push
orb
and
aaa
mov
dec
mov
push
or
in
in
repz
xor
dec
in
dec
pop
lret
repnz
push
adc
ficoms
scas
pop
.byte
aas
jno
push
