sti
fld
cmc
das
jge
sbb
and
out
aad
adc
lods
notb
cltd
xchg
fdivs
std
fsts
push
adc
dec
pop
test
cmovg
test
and
dec
or
inc
push
sub
ss
aam
out
cmp
addl
stc
sub
mov
xor
sub
lock
popf
loop
dec
icebp
idivl
pop
mov
and
pop
push
pop
jg
int
pop
mov
mov
inc
add
dec
inc
cmc
or
dec
fwait
push
add
scas
inc
mov
mov
mov
imul
cmc
adc
imul
adc
adc
in
cmp
ss
jbe
lea
push
cmp
ret
jb
stc
dec
pop
xchg
pop
or
scas
dec
orl
repz
stc
jp
addr16
sub
add
fdivs
jns
sti
sbb
lock
pop
cwtl
cmpsb
adc
negl
dec
push
icebp
in
andb
scas
xor
cs
mov
fadd
pop
mov
push
add
jg
stc
add
jne
or
mov
outsb
nop
and
in
lcall
push
mov
orl
mov
xlat
or
lods
or
into
mov
loop
clc
inc
mov
lods
xchg
mov
fnstcw
push
mov
ret
imul
or
mov
push
ja
sbb
pop
jno
jp
push
lret
loope
mov
inc
rolb
mov
in
pop
insb
in
lret
insl
int
addb
push
inc
sahf
xor
sub
inc
cli
xchg
xor
ds
insb
sub
out
outsb
mov
sahf
inc
mov
stos
push
movsl
mov
push
and
fs
call
cmp
or
dec
daa
sbbb
ret
pop
lret
out
pushf
dec
mov
sub
fwait
adc
pop
or
clc
xchg
stos
pop
ret
mov
push
les
subb
pop
outsl
stos
testb
push
scas
cmp
jecxz
xor
mov
inc
add
stos
pushf
inc
mov
inc
arpl
cmp
push
jno
and
add
sbb
add
stc
cmpsb
imul
loope
ret
add
arpl
inc
ret
nop
enter
inc
lcall
daa
mov
push
enter
test
mov
sub
dec
and
sub
mov
dec
popa
cld
and
mov
es
and
lcall
out
mov
sbb
lods
dec
sar
movsb
and
sbb
insl
test
xchg
push
out
lds
jne
mov
jl
pop
xor
outsb
jmp
mov
mov
fisubrs
scas
add
int3
xchg
daa
mov
roll
out
and
push
jp
cmpsl
inc
lret
addr16
jp
mov
in
mov
ret
push
add
cmp
les
repnz
mov
lcall
loopne
int
dec
xchg
xor
filds
nop
ficomps
scas
test
in
mov
lds
test
cmp
addl
js
push
add
sbb
or
pop
movsl
or
aas
clc
test
andl
nop
or
pop
sub
push
dec
add
mov
jb
loopne
sub
pop
dec
enter
das
push
test
pushf
push
inc
jne
inc
loope
loope
adc
outsl
mov
in
xor
xchg
sub
lret
pop
add
imul
xchg
je
xchg
pushf
push
push
mov
or
stc
lcall
out
leave
test
sub
sbb
rorl
aas
dec
fstl
out
jge
jg
int
fimuls
iret
sahf
aam
ss
popf
aaa
scas
inc
push
bound
imul
jae
fs
push
cltd
notb
push
sbb
daa
cmpsl
jle
int3
jo
mov
cmp
sub
popl
sub
bound
mov
or
idiv
adc
cmp
pop
test
out
cld
mov
inc
jg
sahf
inc
mov
add
cmc
push
jecxz
add
inc
sbb
loope
stc
or
jbe
out
push
push
rclb
mov
cmpsb
fsubrl
push
jle
daa
fnstenv
scas
mov
xchg
les
adc
fdivrp
push
orb
lea
inc
pop
push
fildl
js
mov
andl
decb
test
or
into
shll
adc
pop
sti
in
scas
dec
nop
stos
movsb
fcomps
fcoms
out
pop
pop
mov
pop
loope
in
adc
or
push
not
cmp
loope
subb
das
call
mov
mov
jne
cmp
and
lock
inc
mov
adc
iret
add
push
cmp
rcll
rcll
lea
lret
aam
sub
dec
jg
pop
rcrb
inc
lcall
sub
inc
lds
dec
out
out
fstl
xor
or
xchg
adc
arpl
mov
push
stc
mov
fidivl
es
mov
cli
sub
test
scas
scas
cmp
iret
enter
mov
cmp
mov
xchg
inc
dec
sub
std
les
dec
adc
add
enter
push
jg
cmpsb
dec
or
inc
cmc
les
inc
lock
sbb
xchg
pop
out
pop
add
xor
fmull
inc
push
jecxz
push
sbb
xor
jo
mov
pop
xchg
testl
inc
inc
adc
int
adc
out
cmp
out
jbe
aas
inc
frstor
and
cmpsl
outsl
sbb
xor
jge
nop
cs
lret
out
mov
rorb
sahf
mov
push
xorb
ds
xor
inc
cltd
or
rcl
sbb
dec
sub
cmpsb
xor
jp
cs
cmc
xchg
cld
adc
leave
fimuls
test
testb
add
mov
loop
jae
jge
xor
dec
or
xchg
jnp
cli
clc
data16
push
sub
mov
jae
insl
jae
add
push
jp
adc
insl
ds
xchg
lret
sbb
push
xor
cmp
pop
out
dec
cmp
mov
jne
mov
fs
dec
in
dec
adc
shll
outsb
push
sbb
lea
aas
out
sbb
int
popf
in
xor
dec
sarb
mov
ja
and
pop
out
test
push
and
imul
mov
cmpsl
testb
fs
mov
mov
into
loop
out
add
in
fmul
pop
push
gs
sub
call
push
pop
in
iret
icebp
mov
adc
rcrb
lods
out
mov
push
clc
sbb
repnz
sub
mov
cmp
int3
adc
negl
dec
jge
mov
out
adc
leave
loop
stc
int3
cmp
xor
fstl
loope
sbb
aam
mov
sub
orl
cmp
icebp
and
popf
cmpsb
lret
push
push
neg
push
sahf
mov
xlat
jl
test
fs
out
lds
aas
call
imul
sbb
sbb
inc
xchg
sub
mov
jmp
cmpsl
mov
push
inc
sbb
xor
sub
int3
loop
xchg
inc
push
das
push
test
inc
lods
ret
cmp
das
lret
out
lea
addb
in
or
roll
rol
adc
imul
cmc
sub
dec
int
xor
adc
sbb
out
mov
gs
xchg
sub
fcmovb
fimull
iret
inc
push
mov
add
pushf
es
push
push
test
pop
jl
out
push
stos
cmp
shlb
inc
push
sbb
dec
repz
jno
fidivrs
out
push
pop
inc
insl
jg
cmc
in
push
ret
sub
inc
icebp
adcb
pop
push
lods
add
sarl
mov
mov
lods
or
pop
out
or
ds
adc
dec
negl
fistpl
mov
inc
cld
push
or
movb
sub
and
mov
mov
pop
mov
pop
dec
fdivr
sub
dec
cmovno
sahf
jne
or
pop
stos
sbb
sub
mov
daa
subb
scas
add
cwtl
ret
shrl
cmp
xchg
data16
push
leave
jle
and
lcall
cli
imul
xchg
pop
adc
adc
lcall
mov
push
icebp
sub
outsb
mov
push
pop
in
mov
mov
es
clc
icebp
pop
mov
sub
add
rcrb
push
mov
mov
xlat
mov
dec
loopne
sbb
xchg
jno
dec
add
loope
mov
pop
mov
in
mov
dec
or
pop
push
lret
mov
lods
pop
test
lods
inc
xchg
sbb
loope
pusha
loop
push
lret
jnp
jge
test
pop
xor
in
push
dec
loop
cltd
aas
mov
sub
mov
sahf
sbb
or
js
mov
adc
adc
dec
push
xchg
sarl
mov
aam
std
mov
sub
repz
mov
fmuls
sbb
mov
jg
out
ret
push
scas
xchg
xchg
cmp
int3
pop
and
mov
fistps
mov
leave
pop
xchg
or
xor
insb
push
push
push
fstl
loope
dec
lea
sub
pushf
mov
inc
loope
movsl
cli
fnstsw
push
mov
iret
sub
lret
arpl
movsb
jecxz
stos
mov
cmp
push
rorb
jne
lods
or
test
cmc
fisubrl
aaa
inc
adc
sub
xchg
rcll
leave
lret
jno
lahf
cld
mov
leave
mov
insb
rep
sub
mov
test
js
pop
bound
repz
jns
dec
sbb
ficomps
cs
int3
into
and
mov
push
stc
arpl
xchg
jmp
dec
mov
push
dec
mov
xlat
dec
fistpll
pop
icebp
add
adc
xchg
imul
dec
sbb
xchg
cmpsl
mov
mov
popf
inc
or
imul
or
cmpsl
pop
sbb
in
lods
mov
lcall
outsb
into
in
idivb
adc
pop
xor
pop
ljmp
inc
cwtl
test
add
cmp
dec
add
out
push
fstpl
adc
mov
push
or
aas
adc
ss
cmpsb
adc
int
std
mov
lcall
ds
push
push
sub
das
mov
pop
inc
sub
pushf
pop
std
or
sbb
mov
pop
aas
daa
pusha
in
sub
cmpsb
sub
popf
rcr
out
or
or
subl
push
call
inc
imul
push
mov
xorl
sbb
mov
fidivrs
add
int
neg
stc
dec
and
fdivrs
push
sub
add
test
xchg
lea
jno
adc
insl
ja
xor
aaa
sbb
sbb
rorl
mov
inc
js
cltd
cmp
jb
pop
pop
in
push
cltd
daa
aaa
mov
inc
loope
daa
sub
lahf
andl
testb
xor
add
in
lods
scas
out
pop
rcll
data16
pop
mov
push
jecxz
dec
add
mov
fidivl
xchg
lahf
sub
nop
imul
xchg
bound
mov
jl
mov
push
test
cmp
mov
adc
xor
xchg
add
cwtl
mov
push
mov
gs
sahf
xorb
adc
mov
rclb
sahf
leave
es
outsb
ljmp
test
mov
add
ss
clc
sub
and
ljmp
sub
adc
test
or
add
call
out
les
daa
jo
xchg
setp
sub
xor
sbb
lods
push
and
jecxz
mov
call
fldcw
es
lret
insb
dec
mov
inc
out
in
ljmp
pushf
sub
cmpsb
into
popa
popa
fs
xor
jge
jge
xchg
mov
sbb
and
pop
sbb
inc
cmp
xor
push
daa
mov
sub
mov
rcrl
xchg
test
push
lret
mov
out
fdivrl
inc
xor
inc
or
mov
cmp
and
out
sub
mov
pop
xchg
repz
shrl
scas
insb
std
movsb
push
inc
clc
sub
aad
movsb
enter
dec
dec
jge
loope
dec
scas
jo
nop
inc
cmp
shrl
lods
les
inc
out
push
inc
pushf
imul
mov
pop
ret
push
push
decb
fmul
les
es
loop
adc
cmp
lods
mov
and
lods
cmpsb
push
clc
dec
jp
inc
out
aaa
adc
lret
push
adcl
pop
out
jbe
sahf
mull
mov
push
popf
or
outsl
push
inc
in
cs
mov
in
rsqrtps
cmc
aam
lahf
pop
xchg
xchg
push
inc
cmpsb
or
outsb
dec
dec
sub
jmp
mov
sbb
stc
push
inc
dec
sbb
mov
pop
fs
add
jl
out
iret
mov
cmp
pop
and
and
mov
out
and
int3
cltd
imul
je
int
adc
test
aad
sub
scas
sbb
jge
or
push
repnz
push
inc
mov
sub
inc
repnz
jnp
cld
repz
xor
aam
pusha
inc
xor
lea
into
punpckldq
cld
push
stos
sbb
lds
mov
fcoml
sbb
inc
movsl
sti
or
fistpll
movsb
out
mov
movb
pop
sbb
std
fiaddl
jno
mov
fcoms
daa
jg
mov
jl
jmp
mov
cltd
push
add
lcall
and
in
ret
inc
push
lret
sub
push
jp
cmc
mov
je
js
loop
test
nop
mov
xlat
lcall
or
fcmovbe
jp
jp
add
out
sbb
shlb
leave
aad
cmpsb
pushf
pop
insb
bound
lret
inc
gs
jle
mov
movsl
or
shrl
addl
xor
cmpsb
pop
testl
xor
leave
repnz
repz
inc
into
stos
cmp
cmpsb
daa
pop
add
out
add
imul
popf
sub
test
stc
jb
mov
xor
data16
jge
jnp
jge
lahf
ljmp
or
pop
jbe
call
mov
inc
adc
push
xor
sub
jmp
cwtl
mov
loopne
or
and
adc
sbb
ficomps
mov
sub
stc
jmp
gs
mov
fistpl
add
leave
or
jb
push
loopne
cmp
cmpsl
push
ss
ljmp
bound
addl
jo
inc
into
movsl
stos
xchg
repnz
push
or
xor
rolb
mov
mov
pop
mov
mov
lret
pop
cmp
mov
pop
dec
push
popa
push
repz
and
movsb
xchg
inc
lea
call
std
testl
stos
mov
addb
es
sbb
jae
push
lcall
xor
jmp
leave
mov
lcall
pusha
mov
sub
cmp
mov
les
pop
xor
bound
in
fstpl
add
pop
jecxz
sub
xchg
pop
push
mov
dec
inc
pop
push
outsb
daa
mov
imul
xchg
push
or
jne
sub
xchg
mov
nop
push
les
mov
push
sub
dec
sub
lds
pop
outsl
push
mov
add
pushf
es
jg
pop
into
data16
test
pop
in
out
push
mov
gs
mov
pop
jno
mov
stc
lock
sbb
or
movsl
xor
cli
pushf
cmp
sbb
aas
mov
inc
mov
jge
leave
sbb
cmp
popf
addb
mov
aaa
jns
sbb
xchg
add
scas
sbb
and
test
cmp
lods
mov
mov
fcmovne
cmp
rorb
mov
subb
pop
cmpsb
aaa
into
pushf
fs
sbb
jne
mov
xchg
and
movb
sarl
shr
or
inc
sbb
movb
fcompl
adc
mov
addr16
shll
add
push
fimuls
jmp
wrmsr
fisubrl
stc
push
fisubrl
sbb
mov
pop
sub
pop
icebp
lods
out
sub
push
push
adc
loopne
test
jl
mov
sub
inc
jb
lea
nop
cwtl
and
movsb
ficompl
call
or
test
mov
push
notl
mov
jbe
adc
rcr
mov
jl
out
loope
adc
fimull
lods
aad
in
das
divb
mov
sbb
scas
inc
xchg
mov
or
outsb
adc
inc
scas
cli
sub
sub
mov
add
jb
aad
data16
inc
xchg
sbb
cmp
lea
lret
xchg
xchg
lcall
cmpsb
push
or
fcompl
mov
jnp
jo
mov
out
or
mov
lods
or
sbb
add
add
fsubrs
adc
pop
in
pop
and
jo
lds
cltd
pop
push
les
mov
mov
pop
mov
xlat
mov
add
outsl
sbb
fistps
stos
xchg
mov
adc
cmpsl
mov
mov
push
cmc
mov
mov
in
ret
push
xor
inc
sbb
rorl
ret
mov
les
push
jecxz
add
mov
inc
sub
sub
mov
xchg
cld
push
loope
loop
sbb
out
inc
mov
fdivl
int
adc
push
push
dec
lret
in
pop
pushf
movsb
aad
movsb
cmpsl
mov
and
mov
push
mov
cmpsb
shlb
fidivl
in
dec
and
daa
jne
fdivr
sbb
std
outsb
insl
movsb
test
repnz
ret
inc
cs
push
sbb
pushf
test
mov
sti
add
in
in
sub
pop
xchg
orb
mov
push
mov
jl
add
dec
or
addr16
mul
mov
into
pop
pop
jns
shll
std
into
dec
pop
lds
or
aad
push
mov
push
loop
mov
es
dec
inc
ss
cs
scas
or
test
or
mov
jo
loop
mov
lret
test
clc
jl
aad
push
cmp
lret
add
lock
popl
cmp
jnp
add
mov
xlat
inc
popa
add
mov
cmpsl
mov
lcall
sub
inc
int
ret
dec
int3
mov
shrl
xchg
mov
jae
mov
divl
jecxz
jp
mov
lods
xchg
sbb
mov
out
dec
xlat
mov
repnz
popf
adc
into
fsubs
test
add
mov
lds
lahf
xchg
xchg
fbld
negb
pop
scas
push
divl
imul
mov
shlb
dec
mov
ljmp
lock
out
pop
cmp
dec
ror
clc
outsb
ds
insb
lea
repnz
xchg
test
clc
shl
pop
iret
inc
inc
inc
jmp
cmova
adc
fcmovne
or
movb
jge
leave
hlt
push
fsub
mov
and
mov
inc
aad
in
adc
push
int3
cmp
adc
movsl
movsl
jg
xchg
fcoml
std
push
xchg
data16
xchg
inc
adc
cmp
dec
add
cltd
decl
out
shll
or
mov
xor
in
cmp
fcoml
xchg
push
mov
daa
add
pop
pop
pop
ljmp
clc
lods
fdivrl
push
cmp
xor
xchg
ret
jno
mov
xchg
fimull
dec
shl
jnp
cmp
xor
pusha
mov
mov
lret
out
pop
jbe
lea
or
rcrl
push
or
jg
mov
lock
ret
mov
xor
jg
dec
xor
jle
push
and
xchg
jmp
ss
test
insb
mov
imul
adc
pop
lea
push
jl
pop
fs
adc
cmp
rcrb
xor
pop
stos
sti
adc
inc
dec
cs
rcl
rcl
ficomps
dec
ret
mov
jecxz
les
out
testl
or
aaa
int
push
ret
mov
js
jle
xchg
add
int3
add
js
movsl
cmpsb
loopne
inc
mov
shr
add
xor
outsl
or
cs
in
addr16
mov
pop
push
rorb
lret
loop
push
mov
mov
mov
xlat
sbb
out
movsl
pop
add
push
lock
jne
lret
sub
sub
leave
jge
insb
jle
pop
pop
pop
mov
dec
inc
or
adc
sub
addr16
adc
stc
pop
popf
data16
popa
lahf
popa
test
sub
data16
fidivrs
pop
mov
aad
cmp
jmp
dec
test
stc
fistps
and
add
movsb
add
gs
sbb
mov
mov
cs
test
imul
mov
mov
repz
out
cmp
gs
xchg
aas
nop
dec
popf
mov
add
inc
or
lcall
dec
clc
xor
rolb
xor
stos
or
or
ss
cmp
adc
inc
sbb
mov
enter
movsl
push
stc
mov
cmp
xchg
repnz
push
mov
arpl
cmp
out
pop
sub
out
or
cmp
pop
loop
mov
mov
aam
iret
push
cmp
or
or
mov
daa
pop
or
push
addr16
aad
lds
jne
pop
dec
lret
lea
xchg
data16
mov
in
pushl
push
cltd
out
fldl
lahf
call
add
lahf
xchg
aam
ds
stc
pop
cmc
fisttpl
subl
xor
mov
data16
shrb
lea
xchg
cli
or
idivb
ds
shl
add
sub
je
xchg
cld
enter
leave
ret
xchg
cmp
lea
push
out
jnp
test
popf
inc
rolb
lahf
in
sbb
xchg
add
and
push
insb
insb
sub
cmp
mov
dec
pop
mul
add
sub
enter
decl
std
ret
out
or
mov
enter
xchg
enter
adc
sbb
or
leave
mov
enter
add
jl
lahf
jne
or
or
add
rcrl
enter
fnstenv
inc
inc
jl
shll
mov
cmp
cli
enter
test
insl
sarl
jle
mov
lret
in
push
add
adcl
mov
jge
ss
xor
mov
scas
sub
sarb
fdivrl
loopne
xchg
rorl
out
sub
mov
or
adc
inc
xchg
push
mov
inc
mov
sub
or
jne
mov
push
mov
aad
adc
inc
adc
iret
inc
push
adc
inc
ds
inc
bound
out
and
jg
xchg
mov
fstl
shll
addb
mov
push
pop
inc
pop
icebp
sahf
mov
sub
push
enter
popa
sub
fs
adc
mov
enter
aad
sar
enter
lea
mov
mov
xchg
mov
add
aad
and
aad
jne
in
pop
mov
gs
or
or
aas
xor
std
es
and
adc
enter
xchg
push
push
fidivrs
sub
inc
mov
insb
dec
xlat
in
shlb
sbb
cmp
jle
imul
mov
sub
outsl
ror
add
jl
mov
pop
xchg
inc
ljmp
cmpsl
add
mov
jp
enter
add
mov
jp
push
fstl
stc
pop
test
out
sbb
frstor
fldcw
lcall
cmpsl
adc
sub
bswap
jge
divl
insb
push
or
or
jo
out
dec
xchg
jbe
sar
mov
inc
daa
pop
stc
add
out
or
fldl2e
lahf
stc
add
repnz
aad
shl
xchg
rclb
nop
xchg
in
xchg
adc
push
leave
das
inc
mov
or
sub
mov
and
adc
rcrl
and
pop
in
mov
dec
pop
cmp
mov
adc
dec
mov
cmpsb
adc
loope
js
movsb
inc
aad
xchg
xchg
dec
or
roll
mov
pop
int
xor
inc
pop
lea
enter
js
inc
loopne
cli
mov
mov
imul
xchg
idivb
aas
pop
insl
cmpb
clc
sub
and
es
ljmp
mov
mov
adc
ja
mov
fsubs
cmp
xchg
nop
jb
cmc
mov
xchg
std
dec
pushf
stc
push
pop
sub
cmpsb
enter
xchg
in
int3
leave
les
push
push
xchg
popf
inc
cmp
xchg
or
movsl
mov
cld
mov
test
add
cltd
jecxz
inc
xchg
mov
or
andl
out
stos
adc
fisubl
lock
into
imul
mov
fsubl
das
imul
leave
pop
loop
jae
test
aaa
mov
push
dec
and
repz
mov
mov
jns
mov
cltd
xchg
cmp
xchg
cmpsb
imulb
ficoml
pushf
jne
add
xor
sbb
out
mov
jle
iret
cwtl
mov
lods
inc
jbe
sahf
mov
cmp
sbb
lret
xlat
dec
sub
insb
xor
out
and
mov
rcr
lahf
and
push
mov
inc
push
hlt
sahf
push
es
es
push
ss
pop
sub
cmpsl
repz
flds
inc
xor
lds
repnz
xchg
scas
add
jg
push
fldl
iret
inc
insb
inc
fucomip
test
test
movsb
sub
push
test
loope
jb
lods
mov
stos
shlb
sub
mov
inc
pusha
loop
jae
movsl
dec
inc
pop
sub
sahf
gs
mov
push
add
xchg
adc
arpl
mov
push
or
shll
shl
pop
mov
ss
sub
xchg
sbb
aad
sbb
fcoms
mov
daa
fxch
push
xchg
iret
mov
pop
insl
lret
lret
loop
mov
idiv
xor
and
dec
lcall
dec
mov
rorl
mov
dec
movsl
cmp
mov
jbe
adc
aaa
lahf
lret
cmp
test
mov
mov
int3
inc
popl
ljmp
push
adc
out
push
leave
push
sbb
xor
out
scas
dec
test
pusha
in
addr16
pop
fsubrs
jmp
mov
jecxz
xchg
add
dec
sbb
mov
jge
xchg
dec
fcomp
jne
push
inc
inc
and
lods
add
adc
mov
xor
mov
xchg
mov
fwait
outsb
pop
loop
les
cmpsb
inc
mov
rol
dec
adc
in
push
and
ret
mov
adc
inc
shrl
dec
ljmp
cmp
and
jb
cmp
inc
sbb
adc
sti
inc
movsl
xor
iret
add
push
push
in
lock
push
out
movsl
lret
inc
cmpl
mov
subb
fisubs
jge
or
dec
mov
inc
data16
xchg
addr16
stos
xchg
bnd
sbb
fadd
or
je
pop
lret
push
xchg
or
ds
bound
not
mov
xchg
icebp
sarl
lret
loopne
int
pop
es
arpl
dec
pop
scas
push
sbb
lea
gs
sub
gs
imul
xor
mov
out
and
data16
loopne
adc
adc
cmp
cmpsl
leave
pop
mov
cmp
cmp
dec
cmpsb
lahf
in
dec
ror
lcall
in
mov
mov
xchg
in
push
cmp
xor
pushf
push
xchg
icebp
sub
stos
je
loope
mov
pop
dec
mov
les
dec
ret
xor
rcll
ficompl
mov
mov
sbb
or
bound
incb
add
rcll
lea
loop
call
push
cmp
jnp
mov
xchg
pop
add
fsubrp
jno
xchg
loop
lret
pop
jl
and
dec
adc
lcall
jg
or
push
sub
cmc
xlat
es
aas
or
in
xor
jne
ja
inc
icebp
or
int
lods
sub
ljmp
insb
mov
adc
pop
pop
xor
xor
pop
mov
or
in
xchg
lret
in
daa
mov
sub
pop
sub
fs
sub
pop
in
outsl
xor
dec
jp
out
movsl
inc
fmuls
insb
mov
lods
add
pop
jle
sbb
pop
repz
and
mov
and
adc
lcall
call
inc
and
mov
ret
sbb
lcall
ss
mov
insl
sbb
adc
sbb
loopne
test
cmp
xchg
repnz
lret
scas
lret
mov
jo
cmp
sub
mov
mov
adc
repnz
pop
shl
and
shll
mov
mov
pop
mov
push
les
orl
inc
sbb
jl
mov
out
push
sub
sbb
inc
mov
mov
inc
fimull
sahf
mov
orl
jle
mov
lcall
insb
sbbl
mov
roll
or
iret
add
pop
insl
mov
loopne
test
test
ss
lret
add
movsl
fs
pop
leave
push
fdivs
mov
inc
pop
movsl
cmp
pop
xchg
sbb
or
movsl
inc
scas
daa
rcrl
add
inc
mov
mov
inc
gs
fs
das
jae
inc
ss
lret
push
xchg
pusha
ja
lret
fcoms
dec
pop
in
fadds
jb
rcrl
jns
push
rolb
testb
notb
push
xor
insb
lcall
les
scas
dec
mov
stos
ret
inc
push
add
mov
dec
dec
insb
cmp
sub
mov
pop
pop
pop
mov
mov
cs
scas
pop
test
push
sarl
mov
xchg
orb
out
mov
mov
sbb
pushf
sbb
dec
repz
xchg
sbb
inc
push
fiaddl
popa
cmp
ret
fcoml
es
gs
pop
ds
xor
rcll
pop
push
push
stc
int3
inc
out
sub
push
rep
outsl
cld
cmp
insb
es
cmp
imul
sbb
std
mov
and
insb
mov
sbb
pop
mov
test
xchg
jb
fwait
adc
mov
leave
pop
inc
mov
sub
cmpsl
inc
roll
cmc
mov
push
cli
push
lcall
push
inc
loopne
inc
cmc
jbe
xor
insl
push
xchg
fwait
loop
pop
test
jnp
leave
int
lret
std
pop
xor
jmp
clc
xchg
or
in
mov
int
imul
addr16
jne
push
jnp
sub
mov
add
and
shrl
clc
mov
js
scas
mov
addb
xchg
push
sarl
sbb
pop
aam
and
inc
inc
dec
movsl
fsts
icebp
adc
flds
pushaw
shll
xchg
sti
cmp
fwait
mov
sub
repz
cmp
pop
mov
adc
fcmovu
and
fsubs
testl
cmp
dec
loopne
xor
xchg
stos
mov
mov
mov
and
mov
and
call
icebp
push
or
adc
cmp
sbb
dec
decb
out
lods
dec
icebp
scas
cmp
dec
mov
std
xchg
push
cwtl
daa
adc
je
mov
pop
inc
adc
pop
xchg
inc
jecxz
lock
divps
ja
aas
call
cmp
mov
inc
data16
mov
sub
or
jbe
mov
loop
shl
adc
stos
sbb
and
ds
xor
pushf
fcmovne
pushf
pop
and
push
addr16
movsb
sub
movsl
je
or
and
sarl
repnz
lock
fiadds
sub
idivb
lcall
rorb
stc
cmp
out
cmc
into
pop
pop
mov
cli
xor
imul
push
loope
mov
mov
lods
ret
mov
inc
pop
out
sbb
daa
cmp
push
xor
repnz
inc
push
stos
orb
int3
mov
insb
add
rcr
sub
out
pop
pop
mov
dec
stos
sahf
jb
es
mov
mov
sarl
add
in
adc
sbb
out
lret
and
push
cmpsl
pop
jne
mov
cmp
inc
or
jb
inc
cwtl
dec
mov
push
leave
leave
mov
testb
leave
xchg
inc
sbb
xchg
sub
es
mov
scas
xor
stos
out
xor
clc
pusha
sub
cmpsl
not
pop
rorb
adc
jne
mov
inc
mov
test
cmc
cmpsl
jle
or
xor
lcall
mov
mov
push
lret
repnz
ljmp
adc
xchg
out
insl
adc
insl
loopne
stos
push
shlb
shl
fcomps
iret
testb
cwtl
pop
mull
cmpl
push
iret
push
xor
icebp
mov
or
jmp
and
sub
push
sahf
add
std
dec
out
xor
gs
lcall
mov
dec
jbe
cmp
sbb
loop
into
dec
sti
aam
rol
out
sbb
ljmp
inc
inc
or
mov
jb
sub
adc
sbb
in
push
sbb
xchg
fiaddl
rol
pop
int
xor
jmp
mov
icebp
hlt
add
fistpll
xor
movsl
mov
inc
addb
pop
mov
push
xchg
negb
dec
and
stos
push
jmp
mov
inc
sti
pushf
xor
sahf
loopne
sbbb
daa
test
mov
adc
mov
mov
jmp
mov
imul
jne
mov
out
add
shll
xor
jp
div
nop
xchg
in
mov
mov
xor
andb
inc
mov
dec
dec
push
in
sub
add
fwait
mov
mov
cmp
cmc
mov
pop
stos
adc
test
out
cmp
lock
or
fldl
push
mov
fimuls
je
popa
movsb
in
jge
jmp
dec
cmp
arpl
test
and
sub
push
or
xchg
cmp
dec
pop
inc
or
jno
jle
mov
jecxz
mov
rcl
pop
movsl
lret
cmp
jp
push
loop
xor
flds
sarl
fs
ficompl
mov
xchg
iret
pop
mov
test
push
sbb
fmul
cli
mulb
adc
orl
inc
jo
jno
sbb
mov
push
sti
push
arpl
ret
dec
jp
adc
imul
push
push
jmp
xlat
shlb
mov
pusha
out
mov
jg
cmp
shlb
ss
pop
cmpsl
icebp
sbb
aaa
push
int
xchg
scas
inc
xchg
sub
xor
sbb
push
push
lods
or
hlt
insl
dec
nop
sub
popf
movsl
jl
lret
pop
and
pop
jl
add
mov
mov
and
and
pushf
and
sub
shll
ficomps
mov
outsb
push
shll
dec
ja
mov
enter
or
fcmovb
mov
cmp
fwait
push
fdiv
je
js
sub
insb
test
ljmp
into
xchg
popa
mov
jl
ret
xchg
rcl
iret
cmp
out
repz
or
push
testl
jl
fwait
sub
mov
xchg
popf
int3
mov
xlat
lahf
aad
xchg
adc
inc
jo
sub
loopne
jecxz
mov
mov
jmp
mov
inc
scas
sbb
daa
fsubrs
ret
inc
stos
push
lret
test
lcall
mov
or
daa
ja
gs
pop
sbb
ds
pop
test
pop
icebp
and
inc
xchg
sbb
mov
pop
in
iret
mov
ds
mov
jo
push
or
dec
mov
fisttpl
mov
orb
ret
cmp
sbb
lods
add
out
mov
cmp
rorb
loopne
mov
inc
cmpsl
pop
imull
test
sub
sahf
cmc
mov
pop
clc
add
dec
loopne
decl
out
adc
enterw
js
rcrb
mov
nop
mov
push
in
xchg
shlb
pop
loop
outsl
repnz
les
daa
xchg
and
loop
mov
jne
fcoml
nop
aam
std
test
fcmovb
int
ror
pusha
inc
xchg
aad
movsl
push
es
aam
ss
fildl
dec
mov
leave
jns
lret
pop
shl
adc
sub
jecxz
lret
jmp
movsl
sbb
pop
stc
testl
mov
ret
pop
or
push
stos
lods
mov
cwtl
mov
arpl
mov
and
into
out
inc
dec
or
add
sbb
movsb
cmp
mov
sbb
add
mov
pushf
inc
imull
in
in
and
adc
push
fistl
stos
in
mov
xchg
insl
stos
add
mov
popa
and
shll
sbb
xlat
inc
inc
sub
jle
sti
aad
sbb
sbb
cmp
pop
xchg
xchg
ja
mov
mov
and
xchg
xlat
fwait
mov
jmp
arpl
fstpl
iret
mov
push
push
or
push
xchg
cmp
pop
lcall
mov
add
into
dec
sbb
into
adc
push
sbb
cld
mov
daa
jp
mov
or
outsb
out
xchg
loop
jp
imul
sti
or
insb
stc
jns
lret
inc
in
imul
mov
out
and
push
or
lock
jmp
dec
lea
imul
xchg
jmp
add
inc
mov
cltd
push
push
pop
fs
mov
and
sub
mov
cs
ret
cwtl
fwait
inc
mov
jbe
mov
shl
in
mov
mov
or
pop
pop
xchg
inc
cld
dec
sub
sbb
add
aam
cmc
mov
mov
jo
xchg
mov
pop
add
jmp
add
sub
stos
fcmovnu
mov
ds
dec
and
mov
add
js
mov
xchg
in
add
in
movsb
add
lcall
mov
sbb
movsl
mov
push
adc
mov
xorl
pop
insl
sahf
xlat
int
stos
inc
xor
movsl
lret
sbb
add
sbb
cltd
aaa
loop
mov
insl
and
jae
scas
sbb
shlb
popa
iret
clc
hlt
test
jecxz
inc
mov
xchg
or
lcall
cmp
in
leave
mov
sti
sbb
sbb
mov
cld
leave
pop
dec
add
es
or
and
inc
pop
out
mov
pop
inc
xorl
stc
lret
cld
mov
or
or
divb
pop
lea
out
lds
fists
in
mov
adc
movsb
lret
aaa
ljmp
vdpps
es
push
push
mov
cmp
jno
sub
add
pop
and
mov
nop
addr16
pop
iret
cmp
sbb
xchg
idivl
incb
push
add
xchg
sub
or
sbb
cmpsl
or
movsl
fwait
sub
cmpsl
movsl
cmc
fldt
cwtl
fwait
or
lret
or
mov
negl
clc
sbbb
sbb
ljmp
fwait
jo
xor
cwtl
pushf
cmpsb
jg
imul
out
outsl
lret
bound
xorb
push
jns
cmp
lods
inc
or
xchg
jo
out
sbb
in
pop
xor
jb
orb
seto
add
sbb
pop
sbbb
xor
pop
xchg
mov
pop
push
cmp
outsb
hlt
divb
jp
sar
js
pop
cmp
int
dec
nop
cmpsb
sub
repz
ljmp
sub
sbb
sbb
lods
das
xor
roll
add
cwtl
xor
sbb
jbe
ss
xor
daa
js
mov
pop
pop
daa
out
sahf
mov
in
dec
loopne
mov
mov
fnstsw
xlat
ja
xor
cwtl
imul
cli
xchg
push
sbb
or
xchg
ret
mov
mov
jg
out
ret
adc
ret
inc
lods
std
xor
inc
mov
cmp
add
lea
adc
mov
sbb
call
jg
and
clc
xchg
add
pop
dec
cmc
insb
mov
out
lcall
repz
cmp
fcmovne
pop
mov
movsl
pop
inc
loope
shrl
test
adc
mov
xchg
scas
sti
mov
xchg
or
push
shl
cmp
mov
int
loope
movsl
and
mov
sbb
stos
cmpsb
push
sub
idivb
push
or
stc
ror
mov
inc
add
sub
cmpsl
mov
jae
dec
fldt
and
or
fs
test
add
rcl
mov
mov
fidivrl
mov
mov
push
sahf
sbb
loope
lret
push
and
in
aam
cmp
jbe
xchg
mov
mov
inc
adc
mov
sbb
add
and
sbb
scas
mov
sbb
in
push
mov
push
addr16
jl
mov
ret
sti
or
int
and
or
shrl
fldl
aas
xor
cmpsb
mov
dec
lret
jne
xor
jl
push
movsl
movl
jl
out
gs
push
push
icebp
fisttpl
outsl
int3
and
jp
jp
inc
adc
jg
pop
jecxz
aas
ret
dec
stc
lods
mov
stc
arpl
in
or
jmp
xor
xchg
je
js
or
arpl
pop
fwait
movsl
or
testb
pop
fs
mov
xor
je
jmp
sbb
pop
add
fists
sbb
pop
das
xchg
mov
cmp
repz
jbe
addr16
daa
test
ret
movsl
sub
mov
inc
lock
and
inc
jae
push
sahf
adc
pop
sbb
push
inc
dec
loopne
mov
add
mov
movsb
xchg
mov
lahf
xor
xchg
inc
jmp
rorb
sub
mov
ds
outsl
add
arpl
adc
cld
insb
ja
test
mov
sub
repz
xor
icebp
stos
out
fcmove
sub
rcll
jmp
and
mov
shl
inc
mov
pop
loop
lcall
push
imul
mov
lahf
cmp
adc
insb
and
clc
jmp
jge
leave
insb
cmp
dec
pop
fisubrs
xchg
pop
mov
inc
fstl
insb
les
fstps
inc
inc
mov
nopl
or
cwtl
adc
lock
into
data16
lahf
movsl
mov
movsb
inc
push
cmp
aaa
incb
in
xor
je
pop
addl
lods
fwait
cmp
orb
xorl
push
mov
push
xchg
mov
xchg
inc
orl
adc
test
mov
mov
roll
xor
neg
mov
cs
xchg
mov
leave
lcall
add
pop
addr16
test
mov
repnz
lret
jmp
or
pop
mov
int3
jo
mov
pushf
lret
ljmp
mov
mov
mov
in
push
sub
sbb
and
enter
jecxz
push
mov
mov
cli
adc
lock
xor
int3
pop
aad
add
gs
imul
pop
lcall
stos
adc
jp
dec
push
decl
call
mov
cltd
push
push
es
fs
pop
push
push
dec
scas
jns
jo
movsl
stos
sub
mov
lods
push
adc
or
addr16
imul
pop
cmp
addr16
inc
pop
fisubrs
push
jecxz
jmp
in
cmc
in
and
xchg
or
jb
adc
fimull
mov
fidivrs
push
dec
xlat
ja
cmpsl
orl
clc
jne
stos
sbb
jle
inc
loopne
pushf
and
ja
hlt
add
mov
lret
mov
movsl
or
sbb
scas
cwtl
jbe
data16
jecxz,pn
jl
jmp
jge
ss
sti
fildl
pop
mov
push
int3
insl
test
mov
sub
cltd
pop
mov
imul
or
xchg
clc
shl
lret
mov
ss
lret
cltd
sub
ss
pop
cmp
dec
dec
enter
in
cli
call
add
scas
push
cs
roll
mov
or
adc
add
xchg
repnz
push
adc
insl
mov
stc
or
mov
or
adcl
push
rcrb
cltd
dec
sahf
loop
jmp
neg
divl
ds
lret
push
push
xchg
mov
dec
add
sub
div
test
jb
stc
add
jnp
ljmp
fdivs
mov
das
xchg
idiv
push
add
in
in
in
loop
int3
jmp
iret
mov
cltd
lret
cmp
xchg
mov
lcall
cs
adc
loope
addr16
cmpsb
pushf
iret
out
push
dec
imul
hlt
je
xchg
mov
aam
cltd
shr
jo
ljmp
out
pushf
cmp
fldt
in
mov
mov
or
xchg
sbb
add
adc
cmc
or
in
and
cmpsl
push
in
sub
pop
arpl
cmc
negl
xlat
outsb
adc
add
cmp
adc
in
shr
out
outsb
mov
mov
dec
stos
add
sbb
loopne
into
xchg
leave
pop
or
jmp
dec
ja
and
xchg
lock
xchg
inc
xchg
and
dec
sub
mov
pop
in
dec
scas
lret
xor
adc
cld
outsb
inc
mov
jp
and
mov
or
xchg
cmp
pop
add
sub
or
scas
mov
dec
sbb
xlat
div
insl
and
fnstsw
sbbl
pushf
add
xor
xor
loopne
arpl
scas
aaa
push
out
pop
lret
xchg
add
int
cmp
mov
and
icebp
pop
cmp
add
test
test
std
push
icebp
flds
pop
add
movsb
loope
mov
divb
push
aas
inc
xchg
add
pop
jbe
int3
cwtl
xchg
dec
or
and
or
shl
xor
jmp
mov
pop
jmp
aaa
fisttps
mov
cmp
mov
in
sti
ds
pop
daa
clc
in
in
push
jle
and
push
outsl
leave
ss
dec
add
aas
xor
or
adc
sti
sub
sub
hlt
and
jle
cld
xor
popf
mov
out
sbb
scas
cmp
imul
mov
pop
ficoml
subb
jae
rcrl
or
rcrb
pop
cmp
ljmp
dec
mov
pop
pop
lods
sbb
xchg
pop
sub
sti
stc
dec
loope
aas
mov
or
pushl
jnp
xchg
xchg
add
stos
sub
cmp
xchg
js
in
xchg
pop
cwtl
rorb
lret
out
dec
pop
push
mov
sbb
iret
data16
pop
imulb
jns
fwait
js
mov
aaa
popf
push
imul
lret
fimuls
push
jl
lret
outsl
fwait
insb
test
cmp
lret
xlat
jne
mov
orb
jne
jmp
sbb
mov
lcall
xchg
inc
and
loop
cmp
pop
sti
mov
ljmp
sub
insl
je
dec
or
jg
jge
ss
pushf
les
add
insl
push
aad
mov
cmpb
xchg
jg
stos
adc
pusha
nop
fwait
fwait
les
adc
adc
subl
enter
stc
movsl
cmp
xor
dec
jg
enter
push
push
in
inc
pop
out
cmp
cltd
nop
inc
xchg
lcall
shlb
insb
dec
pop
out
outsb
pop
imul
cmc
scas
test
inc
cmpl
shll
adc
aam
shll
subb
dec
push
mov
mov
xor
fimuls
xchg
sub
cmp
dec
jno
xor
xchg
adc
inc
ficomps
push
cmc
mov
rorl
mov
pop
pop
mov
lahf
adc
mov
arpl
push
push
push
cmp
outsb
arpl
and
sbb
scas
jge
lea
inc
in
pop
inc
out
sbb
test
test
ret
xchg
inc
shl
test
lahf
pop
cmpsb
fsin
push
adc
inc
std
js
sub
cmp
inc
mov
mov
mov
pop
outsb
mov
mov
leave
mov
and
mov
dec
jmp
fwait
mov
sbb
jb
scas
dec
or
test
or
roll
stc
dec
fwait
add
adc
loope
rcrl
cmp
mov
inc
xchg
cmp
or
cmp
cwtl
cmp
sbb
mov
test
pop
mov
test
mov
sub
mov
add
dec
mov
aaa
inc
scas
jb
dec
push
add
add
out
ss
subl
clc
pop
pop
shlb
inc
cmpsl
add
inc
mov
sbbb
pushf
sub
test
xchg
ret
in
lret
lahf
lods
cmpsb
int3
and
js
orl
mov
sbb
cmp
into
fadd
jne
inc
adc
mov
xchg
and
movsl
faddp
sarl
or
outsb
cmc
mov
sbb
cmp
push
scas
add
outsb
pop
aad
pop
call
repnz
sub
in
add
fildl
add
outsl
adc
std
pop
jns
out
mov
jg
dec
fidivrl
xor
lret
inc
icebp
adc
out
fidivrs
dec
pop
mov
bnd
lcall
push
and
stc
pop
fimull
std
popf
jle
push
outsl
pop
test
lret
mov
or
ds
cmpsl
or
cs
fildl
ljmp
jmp
les
mov
add
xor
cmpsl
mov
and
pop
js
pushf
addr16
xchg
cmpsb
loopne
add
dec
in
sub
cmpsb
std
sub
enter
mov
outsl
push
or
jb
fs
mov
outsb
xor
adc
mov
dec
loopne
imul
push
sub
idivl
pusha
sbbl
cmpsb
in
mov
aaa
lret
cmp
xchg
pop
inc
mov
jns
or
cld
mov
mov
or
inc
out
aam
pop
sbb
push
pop
adc
repz
jb
subb
in
cmp
mov
idivl
sub
mov
inc
mov
mov
adc
add
pop
in
testb
mov
loopne
sbb
std
scas
sub
push
flds
lods
out
mov
cmp
mov
push
sbb
cmpsb
loop
inc
lret
lret
xor
adc
ss
pushf
stos
jge
inc
adc
into
mov
jbe
popf
jmp
into
mov
dec
imul
mov
mov
aas
fstps
data16
push
add
aad
cmp
pop
fwait
mov
pop
inc
out
dec
jp
ss
adc
lock
jg
cmp
testb
mov
fwait
out
fcoms
leave
pop
mov
imul
push
outsb
mov
insb
push
sub
inc
pop
mov
test
xor
out
dec
test
insl
cli
jg,pt
push
xor
add
fcmovnbe
lods
notb
pop
insb
lret
test
test
shll
dec
pop
mov
clc
fstps
adc
cmp
xchg
aas
popf
push
mov
stos
aad
mov
ljmp
js
pop
cmp
std
mov
mov
data16
addr16
add
push
lods
jge
jecxz
sbb
aad
sub
insb
imul
call
les
loop
pop
mov
push
lret
mov
lock
fidivs
ljmp
pop
xchg
sahf
fidivrs
add
pop
leave
iretw
gs
xor
cltd
mov
mov
mov
data16
daa
repnz
dec
gs
cwtl
out
je
inc
je
jbe
cs
lods
inc
inc
nop
insl
andl
pop
add
adc
jle
dec
fwait
movsl
dec
mov
and
ja
ds
cld
and
mov
inc
ret
mov
or
fcomi
mov
ret
cmpsb
aas
cmp
imul
inc
push
mov
inc
pushf
sbb
movsl
inc
loop
dec
sahf
iret
aad
and
jns
and
inc
in
movb
pop
std
mov
adc
out
jge
cmpsl
cmp
mov
and
push
les
push
lret
push
cmp
mov
jns
test
sti
ss
lds
stos
lds
and
mov
call
sbb
xchg
adc
lea
test
push
loope
adc
xchg
repz
or
int
movb
pop
cmpsb
add
sub
inc
xchg
xor
test
lds
js
aam
adcb
pop
int
dec
cmpb
inc
pop
inc
pop
add
sub
popa
or
jg
jmp
lret
in
idivl
dec
cmpsl
lret
push
cmpsl
inc
rol
lock
push
aaa
fs
in
sti
xchg
enter
aaa
iret
mov
mov
jb
mov
adc
subb
ljmp
insb
fildll
mov
jbe
into
loope
lock
in
cltd
push
inc
or
push
adc
fsubp
cli
in
lds
xchg
sbb
rclb
fs
cmp
or
xor
sbb
jb
or
mov
cmpsl
in
es
insb
loope
mov
and
popl
pop
mov
or
jp
in
dec
xor
cmpsl
loopne
adc
mov
push
jae
inc
adc
fdiv
cltd
pop
xchg
icebp
and
in
pop
xchg
dec
fnsave
icebp
lret
gs
roll
add
jge
jl
repnz
faddp
mov
cmp
xchg
sub
arpl
inc
mov
ljmp
xchg
sbb
out
mov
data16
and
push
cmp
and
inc
addr16
add
jle
addr16
repz
dec
add
sub
out
and
dec
popf
stos
out
in
filds
out
sbbb
int3
sbb
daa
lret
xor
sbb
push
mov
dec
and
iret
or
xchg
cld
pop
xchg
daa
push
adc
add
out
adc
jbe
push
or
mov
inc
mov
pop
pop
jae
jmp
sarb
das
pop
stc
pusha
lret
je
int3
inc
inc
insl
dec
mov
inc
inc
aad
imul
cmp
add
popa
adc
out
arpl
dec
and
test
cs
push
jo
into
loopne
les
cmp
sub
jl
out
cs
out
mov
sub
inc
scas
outsb
ret
xchg
push
insl
jle
mov
xchg
sbb
or
jp
repnz
push
stos
adc
cmp
test
add
leave
xchg
jno
and
inc
pop
lods
sub
and
cmp
jbe
std
mov
ret
mov
fmul
fsubrs
lods
mov
and
pusha
push
adc
add
daa
mov
cmpsl
sub
jl
hlt
xchg
mov
inc
mov
mov
xor
sub
inc
add
sbb
in
dec
inc
sbb
pop
or
mov
push
clc
loop
out
testl
test
mov
pusha
movsl
scas
xchg
xchg
mov
jecxz
lcall
sub
ljmp
inc
push
cmp
xchg
aad
jb
mov
ss
lret
lret
popa
in
aam
ds
adc
lahf
mov
stos
mov
cmp
lcall
cs
mov
sar
std
nop
and
push
sub
shrb
xor
testb
inc
xlat
clc
lea
lock
test
inc
adc
fisubrl
pop
add
dec
mov
xchg
lea
das
dec
dec
and
pushf
fwait
sub
adc
inc
outsl
xchg
out
pop
std
test
pop
jecxz
and
and
dec
push
ljmp
inc
mov
push
shlb
xchg
mov
out
jbe
jmp
dec
pop
jnp
test
data16
pop
mov
xlat
scas
add
in
mov
pop
pop
mov
push
icebp
shll
dec
push
jno
inc
dec
out
ds
cmp
push
lock
push
movsb
testb
xchg
xchg
push
stos
mov
pop
das
add
ds
into
aas
lods
sub
cmpsb
outsb
in
pushf
lret
mov
jg
add
pop
mov
adc
pop
adc
mov
movsb
mov
push
aad
jo
shll
mov
out
rcr
mov
or
sar
sbb
repnz
arpl
lret
and
mov
adc
pop
mov
notb
xchg
mov
sbb
push
mov
push
lds
jne
js
mov
jo
push
dec
insb
sbb
xchg
in
sub
xchg
call
sub
sub
lods
test
jge
je
cltd
mov
lock
and
notl
jns
push
xor
dec
mov
lret
and
or
add
dec
xor
push
out
mov
sbb
jae
fs
popa
cltd
jp
cmp
scas
mov
cmp
mov
mov
jmp
and
xorb
xchg
andb
mov
jb
fimuls
lret
sbb
push
jmp
pop
cmp
mov
jo
or
sbb
pushf
pop
sbb
out
fs
insl
cld
lea
out
loop
cmpsl
cld
jnp
loope
dec
cmpsb
fisubs
insl
xchg
test
and
in
cmpsb
out
dec
pop
mov
ror
mov
mov
jecxz
xlat
dec
cld
push
fcoml
mov
or
adc
mov
fisubl
push
test
xor
xchg
in
mov
xor
fstl
sbb
xor
jecxz
sbb
and
fwait
cmpsl
lcall
mov
inc
std
mov
xchg
pop
adc
scas
dec
jne
mov
jl
adcl
aad
cmp
lret
push
pop
mov
movsb
mov
mov
loop
push
fcmovnu
lds
cwtl
mov
jp
inc
jb
cmc
mov
scas
dec
xchg
cmp
ds
add
add
mov
and
lea
shrb
xor
add
add
std
roll
js
loopne
pop
mov
mov
out
xor
pop
pop
icebp
xor
inc
rcrl
sbb
fisttps
add
sbb
cmp
adc
dec
cmc
push
leave
call
sub
jne
call
int
push
movsb
test
jae
mov
es
ss
cs
inc
es
add
xchg
dec
xor
nop
pop
add
ljmp
cmp
xchg
cmp
dec
xor
xchg
mov
dec
jmp
movsl
aaa
mov
mov
fdivl
cmp
hlt
lahf
mov
jae
xchg
pop
std
jp
loopne
lods
ret
xor
cli
push
jae
pop
mov
adc
psrad
lret
inc
cmp
xchg
push
lahf
sbb
in
mov
dec
add
movsb
sbb
xchg
mov
fucomi
aam
pop
mov
jb
pop
lahf
mov
sbb
inc
cs
pop
mov
jo
leave
cmp
pop
mov
outsl
push
stos
or
cmpsb
push
or
pop
mov
fwait
and
xorb
lahf
pop
mov
xchg
lods
xchg
pop
cmp
jne
rdpmc
mov
inc
insb
mov
mov
xor
out
je
dec
pop
insb
xchg
addl
mov
mov
gs
fdivs
jecxz
mov
aaa
aas
jns
roll
sti
inc
insb
mov
lods
mov
mov
fwait
jp
mov
outsl
push
inc
nop
sbb
mov
dec
lahf
lods
xchg
loopne
lret
icebp
adc
inc
mov
jnp
cltd
sbb
push
loope
mov
pop
ljmp
flds
xchg
xor
movsl
mov
lret
fsubs
xlat
orl
pop
ljmp
fstpt
fcoms
and
lock
adc
pop
inc
pop
aad
xor
and
mov
sbb
arpl
in
push
insb
push
add
popf
cld
daa
insb
cltd
jne
pop
and
jo
mov
mov
push
cmpsb
bound
lcall
loope
xor
inc
rcr
mov
repnz
lds
fistpl
inc
js
out
mov
mov
mov
mov
imul
xor
or
movsl
sbb
mov
sbbl
push
icebp
loopne
pusha
lea
sub
lods
aaa
adc
repz
xor
lret
pop
mov
mov
push
out
mov
adc
mov
dec
xchg
cmp
add
or
les
mov
xor
inc
movsb
or
test
push
push
jns
jmp
in
icebp
in
or
or
lret
dec
cld
xchg
fwait
jo
adc
insb
adc
mov
pop
adc
pop
fldt
lds
dec
or
xchg
pop
push
sub
xor
or
inc
push
ficomps
int3
cld
mov
pop
mov
jecxz
and
lea
lret
scas
dec
push
filds
mov
sub
dec
push
sub
mov
test
dec
sub
pop
xor
ret
in
adc
movsb
imul
pop
xchg
popa
cmp
mov
mov
shrl
push
inc
push
outsb
dec
push
xor
lcall
mov
jno
mov
test
adc
xchg
inc
test
inc
pushf
div
push
sbbb
outsl
or
xchg
add
addps
out
cmp
test
and
cmp
movb
dec
sbb
and
lods
sub
mov
test
cwtl
jmp
dec
js
fadd
pop
gs
jnp
pop
pop
jno
std
mov
mov
sbb
ficoms
xchg
dec
or
pop
icebp
daa
mov
pop
mov
mov
call
andb
std
push
mov
or
cmp
leave
mov
aad
jle
hlt
and
movsb
lcall
cld
sbbb
push
sub
das
jb
xchg
push
cmp
jl
gs
pop
add
mov
push
scas
stc
pop
lcall
xlat
test
fildll
out
xchg
test
lret
repz
hlt
orb
outsb
push
pop
test
jge
rorb
or
pop
ret
ret
xchg
fimull
lahf
cmp
push
insl
jmp
cmp
mov
mov
push
cmpsb
mov
mov
push
pusha
inc
test
pusha
xor
xchg
out
sub
mov
mov
jge
push
std
push
cmpsl
stc
pop
outsl
dec
iret
mov
pop
test
mov
outsb
cli
xor
inc
xchg
cmpb
insl
orb
push
cmp
sarb
xchg
scas
test
int3
es
fistpl
in
add
mov
push
xchg
stc
jmp
lahf
inc
push
xlat
mov
aam
mov
lock
mov
or
imul
movsl
fisttpll
lcall
add
xor
mov
mov
pop
movsl
flds
cmpsl
in
push
daa
es
cwtl
or
add
ds
sub
adc
inc
lcall
cmpsl
repnz
rclb
jecxz
jnp
jns
cmp
stc
dec
pop
ja
test
cli
cwtl
sbb
nop
mov
ret
and
aad
jae
mov
mov
lcall
lods
dec
ret
and
popf
mov
aas
sbb
jle
mov
das
lea
mov
icebp
push
cmp
cmc
and
xor
xchg
or
mov
rolb
inc
sahf
in
push
fsubs
out
call
pushaw
and
xchg
pop
pop
dec
lds
and
nop
xchg
xchg
sarb
sbb
mov
jl
inc
es
rol
insb
rorl
push
stos
xchg
in
leave
add
cmp
mov
push
sub
pop
je
mov
jge
adc
repnz
add
cwtl
call
xchg
sbb
mov
ret
lds
mov
outsb
int3
sub
dec
pop
xchg
rol
into
and
mov
stos
inc
xchg
stc
mov
sub
cmpsl
push
or
je
aam
xor
push
push
test
add
fldt
shll
add
and
push
xchg
mov
test
xchg
out
fstl
stos
xlat
dec
xchg
and
ficoml
xchg
sbb
mov
sub
clc
xchg
adc
or
icebp
addr16
pushf
es
cli
cmp
lret
mov
sub
fdivrl
out
in
out
inc
sbb
popf
cmp
in
cmp
movsb
mov
dec
out
add
mov
cli
ret
hlt
and
lods
clc
mov
xchg
repz
mov
add
jbe
data16
stos
cld
sbb
dec
push
nop
jecxz
mov
mov
mov
xchg
pop
pushf
or
sbb
clc
into
xor
insb
and
sub
std
inc
fdivrs
xchg
cli
push
loop
jl
jle
sbb
data16
add
sub
cmp
jno
in
pop
out
add
adc
adc
jb
mull
sbb
sbb
dec
mov
popa
ret
xor
xor
add
sub
scas
sub
movsl
dec
adc
mov
push
test
push
popa
rcll
pusha
fistl
mov
mov
or
xchg
inc
mov
es
sbb
out
inc
sbb
loope
scas
inc
inc
dec
inc
loop
push
dec
sbb
daa
sahf
scas
roll
icebp
xchg
test
sahf
sub
jo
jnp
inc
ret
je
dec
roll
je
sbb
mov
sahf
daa
mov
int
mov
in
mov
mov
xchg
sub
sti
jb
xchg
lea
pop
sub
int
dec
mov
inc
lret
dec
mov
pop
lret
add
lcall
cltd
sub
xor
popf
aam
pop
and
fisubrs
jns
cmp
stc
or
mov
push
push
stos
js
fwait
mov
dec
jb
add
inc
lock
lcall
ror
pop
cmpsb
inc
mov
xchg
roll
or
loop
dec
lcall
into
inc
mov
cld
push
mov
mov
jne
mov
pop
insb
mov
xchg
popf
xchg
jp
mov
test
adc
adc
sahf
addl
and
rolb
xchg
fldl2t
xor
inc
cmp
sub
mov
add
ljmp
sub
in
xor
jb
roll
rclb
leave
dec
xchg
push
aad
in
mov
mov
pop
jbe
repnz
div
and
in
mov
rol
je
push
jge
ss
shlb
jbe
in
mov
push
jl
inc
push
lock
adc
dec
into
lods
sub
call
popa
sub
stc
or
testb
fistps
push
push
and
xchg
daa
sbb
sahf
fldt
adc
lret
out
and
mov
lea
mov
outsl
aas
aas
shrl
jb
sbb
pop
fisubrs
aas
xor
sbb
push
popf
push
or
pop
std
push
mov
lret
dec
push
adc
mov
cwtl
imul
cmpsl
add
adc
mov
or
push
test
daa
or
fldt
aas
inc
scas
testb
xchg
dec
inc
jge
int
aas
ljmp
or
sub
sbb
jne
push
mov
jecxz
mov
push
jno
jp
jae
jno
pop
add
jb
sub
jbe
in
mov
sub
jl
xchg
xchg
pop
mov
mov
and
mov
add
pop
adc
fstpl
push
in
pop
mov
mov
adc
adc
out
outsl
inc
push
xchg
pop
xchg
test
pop
cmp
rolb
xor
xlat
inc
cmpsb
insb
inc
fldenv
lret
icebp
add
dec
out
lahf
push
mov
ja
pop
jbe
rcrl
lret
jmp
push
jl
xchg
xchg
cmp
pop
mov
cmp
sti
fcomp
ljmp
xchg
movsl
cmp
addb
fimull
pop
lock
or
inc
jb
inc
mov
xchg
mov
insl
mov
mov
inc
jns
mov
and
inc
aaa
cmpsb
shll
cmpsb
in
fwait
stc
test
mov
pop
lahf
and
movsb
xchg
add
movsb
shll
stos
in
sub
pop
jle
pop
push
sub
pop
and
imul
xchg
sti
jp
cmp
mov
lcall
mov
pop
jne
xchg
sbb
outsl
or
dec
in
pop
sub
inc
and
xchg
aas
adc
sarb
push
fmull
mov
mov
inc
dec
insb
xor
add
rorl
mov
dec
or
lea
sbb
pop
sub
xchg
adc
aaa
pop
xchg
inc
lock
leave
repz
mov
repz
xor
jae
adc
or
in
mov
aam
inc
mov
fsubs
das
or
inc
xchg
mov
fs
popf
dec
fldt
es
mov
cmc
pop
add
mov
jle
cmp
je
stc
test
xchg
or
jns
int
aam
cmpsl
pop
xor
xorb
jmp
jmp
daa
push
mov
dec
in
or
das
pop
or
pusha
lahf
jmp
out
and
cmpsb
push
pop
pop
or
and
sub
rclb
outsl
aas
aas
shrl
ds
rorl
and
and
add
lea
sub
cmpsb
or
lea
mov
pop
mov
out
fcompp
pop
cltd
jl
dec
fildl
xchg
es
loop
push
test
mov
inc
js
mov
push
jle
jb
sbb
lret
dec
out
jge
mov
shrl
pushf
xchg
fcmovu
dec
pop
pop
sub
push
ret
imul
fdivr
push
mov
test
xor
jmp
cmpsl
push
jnp
into
fsubrl
adc
mov
dec
inc
mov
adc
and
jl
rol
fnop
add
cmp
or
mov
in
add
sarl
fistpll
in
dec
mov
and
cmpsb
jp
movsl
mov
bound
lret
mov
pop
outsb
mov
push
xor
inc
hlt
jmp
mov
lods
popa
std
jp
popa
cmc
negb
pop
test
cmp
inc
daa
sub
call
mov
pusha
mov
or
adc
mov
cmp
cmpsb
sbb
fbld
xlat
cmpsl
cmp
ja
popa
inc
loopne
neg
mov
mov
mov
stos
mov
insl
pushf
pop
int3
pop
filds
jmp
std
lods
xchg
aad
mov
xchg
sub
call
mov
jl
push
cltd
push
lea
cld
cmpsb
pushf
je
stos
mov
mov
xor
mov
test
dec
nop
adc
mov
shll
mov
out
insb
mov
dec
idivb
mov
inc
jo
test
add
xchg
mov
adc
orb
add
repz
push
aad
dec
shl
in
pushf
ret
pop
mov
jmp
xor
mov
into
cmp
in
mov
cmp
cs
mov
dec
pushf
ret
xchg
cmpsl
sbb
add
and
and
test
dec
scas
xor
test
inc
or
cmpsb
add
mov
and
and
popa
pop
fs
shll
jecxz
jnp
cmp
push
out
dec
sti
loope
outsl
mov
scas
push
dec
orb
cmp
mov
mov
sbb
add
fiadds
repnz
xchg
cmpsb
cmp
cmp
mov
mov
int
xor
sub
aad
xchg
pushf
pusha
xchg
repz
push
or
jb
mov
aaa
movsl
pop
pop
pop
in
adc
adc
mov
leave
sub
not
out
adc
lret
xchg
in
adc
dec
test
sbb
mov
dec
xchg
jmp
sub
mov
sub
shr
fldenv
mov
dec
lock
cmp
sbb
sti
cmpsb
sarb
mov
insb
stc
mov
popf
ljmp
lea
jno
dec
inc
mov
es
inc
jmp
or
daa
in
mov
mov
dec
pop
lock
movsb
or
mov
push
scas
inc
mov
dec
cs
clc
hlt
or
jb
stc
mov
xchg
dec
ljmp
frstor
in
cmpsb
je
dec
inc
pop
add
es
cmp
je
jle
xchg
sti
insl
mov
scas
adc
leave
pop
inc
popa
clc
xchg
mov
pop
jmp
imul
inc
dec
stos
pusha
mov
int3
add
popa
xchg
test
icebp
jl
and
scas
loop
dec
lret
and
mov
das
scas
rclb
in
xor
add
and
adc
popf
add
jle
lret
xchg
pop
movsb
retw
int
pop
pop
movb
cmp
jns
fisttps
loopne
cld
cmc
push
adc
popa
jecxz
lret
into
incb
shl
das
sbb
lds
push
jmp
mov
xlat
sarb
cmpsl
ds
popa
mov
dec
insl
mov
test
adc
push
dec
inc
cltd
test
xchg
mov
in
jne
fisubl
std
inc
sarl
insl
pushf
push
dec
daa
jge
mov
nop
sbb
and
imul
lds
xchg
pushw
ljmp
paddusw
leave
ja
dec
lret
mov
cltd
stos
sbbl
popa
jo
les
maskmovq
mull
cmpsl
sarb
repz
es
push
lock
jecxz
xlat
ret
xorl
scas
xor
sbb
fdivr
aad
sbb
enter
in
lahf
sbb
decb
pop
mov
les
inc
repz
aad
hlt
jae
mov
push
jecxz
xchg
mov
imul
adc
sti
cmp
pop
xor
pop
xchg
cltd
mov
xor
outsb
lret
mov
loope
push
xor
cld
push
inc
push
mov
xchg
in
and
pop
xor
daa
dec
psubsb
pop
jp
addr16
push
test
outsl
or
fisubl
dec
xchg
cmpb
int3
cmp
add
sbb
mov
cwtl
or
psubusb
adc
push
mov
sub
pop
mov
gs
jle
aam
int
fiaddl
js
sbb
jno
mov
les
xor
shlb
lods
push
notl
push
xchg
jmp
or
fidivrl
mov
mov
push
add
ret
je
filds
sub
push
addl
or
out
data16
idivb
mov
jmp
sub
mov
mov
sti
mov
push
stos
inc
pushf
lcall
test
stos
lcall
ds
shll
add
out
jo,pt
aad
jo
cwtl
add
daa
xor
daa
jl
mov
xchg
push
hlt
add
iretw
ss
push
inc
push
xchg
cmovge
push
jle
mov
lods
pop
push
test
jno
roll
dec
inc
jo
dec
jns
mov
shl
mov
mov
stos
int3
cltd
je
loop
aad
fwait
inc
sub
push
xchg
adc
out
jne
dec
loop
sbb
xor
adc
add
sbb
push
daa
loop
in
dec
cmp
fmul
lret
js
adc
fsubrp
lock
or
rorl
ljmp
mov
ljmp
mov
repz
push
ljmp
faddp
cld
les
mov
fwait
shlb
mov
add
adc
mov
sti
mov
test
inc
mov
pop
xor
test
xor
inc
bswap
sti
adc
ds
iret
es
shrb
shl
stos
or
repnz
mov
lret
rclb
mov
mov
ret
xor
cmp
xlat
inc
sub
insb
popa
js
cmp
inc
push
aaa
ljmp
mov
mov
jnp
imul
xchg
adc
jle
imul
sbb
mov
cli
dec
lea
cmp
adc
ret
stos
repz
ljmp
or
cwtl
imul
and
add
sbbl
ret
fwait
and
ss
test
xor
pop
mov
lahf
push
in
mov
rcl
inc
push
rorb
jno
sbb
aaa
push
push
sarb
or
add
dec
stc
push
lds
shlb
pop
mov
insl
rolb
sbb
and
mov
push
mov
cmpsl
push
gs
adc
xchg
dec
pop
outsl
pushf
push
jno
adc
cli
jge
pushl
xchg
pusha
sarb
or
inc
data16
and
or
clc
pop
leave
push
popa
cmpsl
lret
andb
mov
dec
out
or
adc
jae
cmp
in
int
or
lods
js
xchg
xchg
arpl
dec
push
fmuls
mov
outsb
or
data16
cmp
mov
sub
lret
xchg
add
ljmp
jbe
movsl
pushf
icebp
or
mov
cmp
hlt
jnp
mov
dec
notl
rorb
leave
fildll
pop
sub
popf
push
pusha
inc
inc
cltd
inc
push
sbb
jg
rorb
je
rcrl
adc
and
ror
std
mov
or
fwait
push
stos
jnp
push
out
loop
clc
xchg
enter
cmp
lods
dec
ret
push
mov
sti
ret
mov
mov
fiadds
popa
cmp
push
dec
cmc
scas
lea
fcmovnu
and
fldcw
lods
cmpsb
xor
iret
pop
xchg
mov
in
mov
cmpb
push
nop
sbbl
cmp
sbb
nop
in
ljmp
cmp
in
aas
jmp
sub
inc
orl
stos
stos
cmp
hlt
xor
pop
push
mov
mov
or
in
outsb
bound
pop
cwtl
and
pop
vpsllq
out
inc
and
push
xchg
ret
cmpsl
mov
push
and
int3
outsl
or
imul
daa
cmp
cmp
fcoms
mov
cmp
insb
sbb
imul
test
adc
lods
adc
imul
aad
adc
jo
test
and
jge
les
pop
shll
dec
iret
xchg
dec
fildl
add
push
divb
subl
add
push
push
adc
in
pop
in
std
pop
fistl
movsl
mov
pop
lret
jae
push
cmpsb
pop
xchg
sbb
or
sub
addl
hlt
xor
jle
xor
ss
mov
test
out
jbe
in
std
out
sbb
repz
sahf
sbb
fmull
adc
stos
pop
mov
out
mov
inc
int
push
jno
mov
dec
add
dec
int3
popa
mov
movsb
int
ficoml
jg
adc
sub
inc
and
adc
mull
in
dec
sbb
shrb
imul
push
imul
leave
pop
cli
adc
jne
shl
pop
ficoms
inc
icebp
jmp
mov
mov
insb
or
orb
std
or
loope
pusha
cmp
xor
popf
adcb
jmp
in
repnz
lock
orl
mov
imul
stos
loope
popa
loop
jge
out
sub
or
js
gs
outsl
dec
mov
shl
outsb
not
xchg
js
es
pop
loope
adc
pop
pop
push
mov
mov
mov
or
leave
inc
lods
inc
xlat
pop
les
add
jb
xchg
jne
and
sbb
or
sar
test
fstpt
cmp
cs
mov
dec
xchg
in
inc
stc
js
sub
mov
cs
jns
push
xchg
cmc
mov
fildl
xor
push
icebp
mov
popa
push
fildll
popl
lods
inc
jns
sti
and
inc
inc
jmp
mov
or
fcmovnu
mov
mov
je
out
sub
xor
xor
inc
mov
call
jno
jmp
xchg
loopne
add
jno
xchg
mov
push
adc
sbb
stos
or
xchg
cmp
jnp
push
rclb
pop
dec
push
sub
push
jmp
lret
shll
lock
lcall
push
cmp
je
and
push
xor
xchg
sti
mov
push
aas
test
mov
stos
pop
cmpsl
push
cld
sub
pop
mov
divl
push
popf
lret
push
adc
shr
insb
pop
sbb
mov
inc
loope
cmpsl
mov
fs
xor
adc
xchg
aaa
cmp
inc
in
lock
mov
mov
adc
das
in
aas
inc
jp
mov
loope
data16
dec
fwait
lods
outsb
mov
call
rcrl
push
fistps
movsl
or
sub
mov
lret
or
aas
cmpsb
imul
sub
push
adc
iret
inc
mov
fwait
rorl
sub
pop
adcb
cmpsl
push
mov
mov
jle
push
cli
xlat
jl
popf
xchg
pop
pop
or
into
inc
lock
adc
cld
add
mov
negb
xchg
test
fldl
or
jae
dec
pop
mov
mov
mov
lret
push
jmp
psubw
pop
mull
and
xchg
cmpsl
and
or
loopne
lahf
xchg
mov
cmp
icebp
cld
xor
lods
mov
adc
fldt
xchg
lcall
mov
movsl
mov
call
pop
push
arpl
xchg
loop
sub
imul
or
fisubs
sub
popf
dec
xchg
add
imulb
sbb
xchg
xchg
lcall
mov
push
loopne
or
cs
jbe
lcall
loop
xchg
push
jbe
in
jl
pop
data16
dec
fnstenv
push
mov
add
ret
add
and
mov
shl
lds
sti
in
jne
and
and
mov
mov
les
movb
pop
xor
dec
cmp
sete
mov
xor
sarl
pop
push
fldt
rclb
fwait
loope
je
out
lret
inc
loop
shr
bound
and
hlt
push
je
or
ret
mov
dec
dec
lret
dec
addr16
pavgw
or
push
push
insl
mov
std
and
pop
nop
shrl
or
adc
jg
repz
cmp
mov
inc
vshufpd
cwtl
xor
add
pushf
mov
sub
xchg
inc
lret
es
iret
sbb
xlat
or
push
or
or
rol
popa
je
or
dec
std
inc
cmp
cmpsl
mov
add
cmp
inc
jmp
sbb
fsubl
sub
in
xchg
nop
pop
jne
cwtl
fcoml
mov
es
fcomi
or
add
out
xchg
sti
fnstcw
push
jp
pushf
mov
std
in
pop
outsb
cs
xchg
sbb
cmp
inc
movsb
pop
push
mov
daa
adc
sub
add
inc
mov
jecxz
in
mov
inc
inc
scas
fldl
int3
adc
inc
add
or
pop
xor
cmp
out
inc
add
imul
popf
mov
jle
imul
push
or
stos
gs
or
xor
mov
pop
int3
push
lea
mov
xrstors
or
test
or
test
fadds
xchg
add
push
and
inc
inc
aaa
xor
testb
addr16
ss
stc
xor
pop
mov
cs
repz
es
leave
pop
inc
imul
pop
and
rcll
pop
adc
xchg
sub
push
adc
test
pop
sub
shlb
push
into
orl
push
inc
jo
test
pop
jmp
stc
pop
ss
iret
xchg
and
jmp
pop
push
jl
push
add
xor
dec
cmp
cmp
mov
inc
xcrypt-cfb
cmpsl
mov
jo
xchg
mov
test
lret
repz
push
xor
jmp
sbb
lds
out
or
adc
cld
mov
mov
sub
rcll
xchg
mov
adc
lcall
mov
jmp
push
cmpsl
leave
inc
in
fistps
lock
pushf
mov
je
push
js
lcall
xchg
sets
mov
mov
fmul
pop
push
popf
push
in
leave
fld
adc
call
pop
js
jno
nop
test
and
and
and
je
dec
fmull
insl
inc
pushf
pop
add
jp
cmp
insb
adc
add
xor
test
aad
pop
shll
pop
lret
div
mov
sti
pop
aam
sub
and
cmp
adc
das
push
push
cmc
mov
mov
mov
jle
cmp
nop
out
ret
lds
mov
mov
jge
bound
fs
cmpsb
aad
imul
pop
ds
das
out
sbb
xor
mov
dec
call
mov
push
scas
cs
cmp
les
mov
out
not
mov
mov
imul
fstpl
jmp
cmc
cmp
xchg
push
jns
adc
mov
add
cmp
mov
push
mov
ss
push
das
dec
and
push
dec
loope
loopne
out
cltd
lret
icebp
jae
or
mov
addr16
sbb
pop
data16
xchg
or
mov
jl
fwait
out
jo
outsb
ja
test
or
push
lahf
dec
mov
daa
mov
add
jmp
mov
xchg
ficoms
mov
shrl
rorl
push
les
or
mov
daa
int
push
in
xor
les
inc
jo
movsl
mov
testb
mov
xor
dec
push
mov
jmp
lods
dec
lret
xchg
add
sbb
stos
mov
stc
dec
adc
outsl
fs
loope
cmp
cwtl
push
add
sub
js
lods
cmp
les
ret
and
mov
mov
enter
es
dec
push
inc
or
loope
sbb
and
sub
movsl
adc
xor
cmp
sbb
popf
jb
mov
movb
inc
std
push
inc
pop
out
mov
jno
into
add
jb
cmp
in
ficoml
loope
inc
xchg
or
inc
shr
inc
psadbw
cmpsl
cld
fldcw
mov
data16
hlt
call
or
data16
sbb
stos
clc
xchg
inc
adc
fsubrp
sbb
push
mov
cmp
dec
mov
xchg
adc
in
inc
push
adc
dec
xchg
loop
stos
mov
jb
rorl
leave
pop
or
mov
and
dec
loop
jmp
adc
or
flds
xchg
loop
rclb
push
in
adc
push
bnd
test
sub
call
xchg
or
push
pop
hlt
idivb
hlt
fidivs
ds
jo
xor
pop
imul
out
ficompl
fwait
or
mov
mov
frndint
aaa
repz
data16
push
inc
lret
sub
mov
xchg
ss
js
aam
push
out
push
and
test
lods
and
add
jmp
ds
mov
xchg
loope
mov
mov
lods
bound
cmp
ret
insb
cmpsb
cmp
nopl
xchg
cmp
test
push
cmp
sbb
jg
sarl
sar
fsubs
or
sysret
and
std
pop
repz
dec
mov
out
aaa
push
dec
mov
and
lahf
jbe
push
repz
mov
mov
popf
and
mov
dec
adc
xor
ror
int
sbb
cmc
daa
mov
and
cli
call
and
mov
xchg
mov
mov
lea
daa
ret
inc
push
icebp
xor
adc
inc
mov
cmc
mov
out
add
out
lock
insb
ja
xchg
cmp
nop
std
cmp
jle
scas
insl
repnz
int
push
jg
xor
fbstp
js
fstpt
mov
lods
sbb
pop
idiv
dec
sti
mov
mov
hlt
shl
mov
add
push
jl
imul
mov
out
cli
ret
lock
or
stos
test
es
or
es
push
lret
xchg
es
add
imul
test
xlat
dec
pop
jb
and
mov
sub
inc
or
jno
mov
pushf
xlat
cmp
jb
and
icebp
aaa
xlat
dec
sub
imul
fs
fiadds
out
std
fildl
pop
dec
pop
daa
outsl
paddd
outsb
xlat
fs
fs
mov
std
mov
mov
mov
mov
jmp
lods
jnp
adc
sub
shl
popa
hlt
imul
lds
es
push
mov
nop
pop
cmpsb
sbb
imul
aaa
jg
inc
mov
or
mov
lock
pop
push
dec
jae
push
shll
pop
mov
roll
sbb
lret
pop
xor
test
fcmovu
rcl
sbb
cltd
push
insl
ror
mov
stos
sub
sti
dec
out
xchg
dec
pop
xchg
lods
lea
stos
shl
es
cld
pop
cltd
xchg
jge
dec
fstps
jo
adc
sar
pop
movl
imul
jp
out
jge
sub
fsubrl
adc
movsb
outsl
rcll
in
popa
dec
int
sub
push
jle
scas
mov
mov
aaa
cmc
add
xchg
adc
pop
cs
lods
adc
xchg
cmp
scas
jb
cmc
cmpl
mov
aas
inc
insl
in
xor
cmc
in
or
sub
jnp
and
aaa
test
inc
and
adc
or
mov
jae
pop
ljmp
pushf
ljmp
sub
pop
jo
or
ss
mov
inc
daa
outsl
aas
in
test
lock
icebp
add
movsl
rorl
insl
mov
sarb
pop
lahf
faddl
cs
stos
popf
lahf
sbb
cmpl
mov
mov
stc
mov
jne
repz
inc
arpl
xchg
call
sub
sbb
adc
sbb
xchg
fbld
sub
adc
insl
mov
inc
fs
xor
lret
iret
movsb
push
shrb
cmpl
inc
pushf
loopne
pop
mov
inc
cmp
pop
lods
rorb
adc
ret
ljmp
mov
dec
push
adc
xchg
outsb
sbb
sbb
push
jno
iret
cmpsl
call
insb
dec
je
jmp
cmpsl
subl
xchg
push
in
loope
cmpsl
icebp
sub
inc
cmpsb
dec
xor
mov
fs
mov
add
mov
inc
inc
jae
shrl
pop
or
add
xor
std
adc
or
pop
test
int3
fcmovne
gs
arpl
ds
jne
cli
sub
fs
aad
mov
clc
push
xor
int
mov
inc
cmp
jne
lock
data16
xor
mov
mov
push
add
add
lds
add
fwait
inc
sti
cmp
jae
and
or
insb
cmpsb
shlb
dec
pop
push
ja
add
icebp
cli
imul
imul
sbb
cs
dec
mov
imul
loop
repnz
inc
lcall
push
sbb
xchg
inc
push
icebp
sbb
xor
lret
pop
gs
adc
stc
fadds
movsl
fisubrl
clc
pop
das
cmc
aam
in
gs
mov
insb
or
outsl
loope
loop
dec
orl
test
pop
movl
mov
cld
and
push
fcmovnu
sbb
outsl
push
inc
mov
negl
repnz
and
xor
cmp
pop
inc
push
mov
jmp
pop
xor
jmp
xchg
insl
in
jnp
fildl
xchg
sub
jp
fistl
cmc
adc
ret
pushf
inc
pop
mov
lret
movsl
inc
aaa
mov
push
cmp
cli
jg
dec
jbe
lret
hlt
addr16
cmp
push
jp
sar
fcmovnbe
xor
sbb
push
mov
into
icebp
mov
jmp
movsl
add
mov
push
cwtl
push
add
outsl
orb
pop
jmp
movsl
lret
shrl
ljmp
pop
sub
ja
mov
cli
or
add
ret
push
in
dec
add
fisttpl
xchg
out
jmp
sbb
add
outsb
ds
cmp
mov
adc
dec
test
jb
sub
rcrb
mov
dec
aas
mov
popf
push
insb
add
or
sahf
xlat
nop
test
inc
push
cmc
pushf
les
pop
inc
inc
lock
jmp
adc
inc
mov
sub
or
cld
jge
push
cmp
sbb
ret
push
pushaw
xchg
xlat
mov
cmp
inc
movb
sbb
loopne
ficompl
movsl
addr16
popf
adc
insl
inc
outsl
xchg
push
jge
pop
mov
dec
add
xchg
nop
mov
out
adc
jnp,pn
push
test
pop
movsl
push
filds
xor
addr16
cmpsl
mov
loopne
lahf
imul
mov
mov
test
cli
stos
mov
cli
push
test
fdivrp
pop
aad
mov
inc
insl
xor
ss
push
jnp
pusha
in
mov
cmp
int
xor
sub
jp
ljmp
lret
mov
leave
loope
cmp
mov
push
xchg
xchg
loopne
in
sub
daa
mov
and
push
cmp
jno
inc
iret
xor
loop
or
shll
pusha
mov
xor
xchg
sbb
fwait
aam
clc
in
mov
cmp
sub
call
subb
push
xor
ret
xor
pop
inc
insl
outsb
pop
inc
dec
mov
jb
or
iret
rcrb
push
mov
mov
out
sub
mov
seto
sub
out
aaa
inc
xchg
pop
out
pop
pop
cmp
fistps
add
loop
popa
dec
fsubl
add
subl
add
pop
sub
jne
out
push
stos
mov
adc
in
push
aam
mov
xor
pusha
sbbl
add
jns
xchg
cmp
push
sbb
pop
inc
jbe
aam
sahf
inc
loope
inc
leave
dec
mov
xor
outsl
roll
in
imul
roll
push
xchg
xor
add
mov
or
jae
leave
popf
pop
mov
sarl
test
xchg
arpl
mov
divl
mov
dec
push
aas
fisttpl
jecxz
lcall
lea
lock
cmp
add
jne
in
lods
out
std
dec
ljmp
clc
inc
sbbb
lds
sub
and
xchg
test
xorb
push
cmp
push
and
mov
or
ja
ds
push
pop
aam
jae
mov
je
movsb
or
gs
loope
inc
mov
xor
add
dec
out
push
in
and
int3
aas
sahf
insb
push
push
les
and
sti
sub
cmp
daa
xor
mov
in
push
cld
mov
ret
ret
xor
mov
fcmovne
in
es
dec
leave
mov
jge
mov
sbb
mov
call
fcmove
xor
aad
dec
or
fcmovb
addb
inc
std
test
lds
clc
stos
rcll
or
es
cld
xor
das
inc
jge
cs
and
jge
mov
sbb
in
cld
or
incb
jecxz
and
mov
or
sbb
mov
and
mov
lcall
dec
lock
sbb
or
fbstp
int3
jp
insl
orb
adc
xor
and
mov
frstor
mov
hlt
or
lods
rcrb
test
pop
xchg
es
fs
out
push
mov
scas
push
xor
pop
or
mov
cmp
mov
sub
cld
jmp
icebp
aam
inc
pop
jle
enter
pushf
shrl
sbb
pop
lock
in
adc
jmp
mov
mov
inc
loope
rcl
ficoml
aam
lcall
fxch
sbb
mov
int
out
mov
mov
mov
inc
mov
out
mov
lret
add
es
notb
in
sahf
scas
dec
jno
gs
shll
inc
dec
data16
xor
jmp
test
call
cld
cwtl
push
pusha
or
pop
pop
jl
mov
jb,pn
xchg
push
lret
gs
mov
out
or
out
mov
push
fstp
sahf
fisttps
xor
push
sbb
mov
int
xor
adc
fmull
pop
aad
and
add
stos
xchg
sbb
jmp
lcall
out
jmp
pop
or
repz
pop
outsl
mov
repz
out
stc
popf
jb
sbb
stos
xor
dec
aam
cld
imul
mov
div
aad
sbb
xchg
aaa
popa
add
test
lret
inc
push
sub
stos
jle
cmp
movsl
xchg
adc
dec
mov
push
jl
sbb
loop
fbstp
xor
icebp
mov
mov
lock
outsl
mov
jmp
adc
or
and
sub
cmp
adcl
imul
dec
mov
dec
sbb
es
cmpsl
jo
xor
lea
pop
orb
loope
or
pushf
push
movsl
and
and
mov
xor
dec
push
push
in
mov
out
movb
int3
pusha
or
dec
lea
mov
jo
xchg
xchg
jbe
shll
mov
push
lds
adc
jb
outsb
or
jo
out
jp
xor
ss
fsubrl
or
psubusb
gs
cwtl
sbb
sub
push
aas
out
xchg
pop
lret
insb
jg
lahf
mov
pusha
movsl
fldcw
add
pop
lock
addr16
ret
add
push
and
pop
jmp
pushf
add
dec
int3
xchg
push
movsl
sbb
out
jbe
sti
sahf
enter
or
sub
int
mov
sub
xchg
add
adc
popf
movsb
popf
dec
xlat
mov
push
mov
cmp
les
dec
insb
fidivl
inc
nop
scas
sub
stos
and
xor
sbb
hlt
stos
int
dec
dec
arpl
xchg
cmp
notb
dec
mov
leave
mov
pop
add
and
mov
sbb
inc
andl
mov
lods
inc
scas
push
fisubrl
pop
push
push
sbb
mov
pop
pop
jmp
sbb
mov
decl
pop
std
bndstx
mull
cmovno
cmp
scas
andb
push
pinsrw
data16
rorl
leave
pop
xchg
mov
imul
enter
sub
ljmp
fs
xchg
mov
jae
jo
and
incb
lock
lods
xchg
sahf
pop
jp
lret
ficoms
sti
lret
add
pusha
dec
dec
pop
in
mov
out
js
mov
rcrl
mov
into
push
push
popf
and
pop
dec
and
dec
inc
jo
loope
loope
aad
roll
ljmp
adc
mov
add
in
leave
pop
add
test
repz
call
popf
aad
stc
cmpsb
setb
cmp
dec
or
hlt
jno
xchg
sahf
outsb
lret
dec
adc
xchg
shr
or
mov
fwait
or
push
loop
inc
dec
stos
mov
inc
ret
out
lret
pop
lea
jle
sub
dec
sbb
pusha
scas
xchg
repz
and
cmp
dec
xchg
inc
in
jno
cmc
loop
pop
leave
mulb
icebp
sub
fstpt
imul
cmp
ja
inc
orb
or
lea
or
out
loopne
loopne
bound
ds
mov
rcrl
xchg
add
jo
loop
mov
lret
cmp
andl
jge
stos
movsl
out
ljmp
xchg
sub
mov
or
push
jmp
inc
stos
xor
sahf
jecxz
es
mov
jnp
popf
ja
or
mov
add
ss
aad
mov
jl
sbb
mov
push
add
sbb
xor
sub
arpl
lea
cmp
subl
iret
call
sbb
jnp
mov
in
xchg
test
cmp
mov
sbb
push
cmp
and
mov
push
movsl
out
outsb
dec
int3
movsl
das
inc
mov
mov
mov
xchg
push
cltd
mov
popa
mov
movsl
or
ret
jbe
out
js
cmpsb
cmp
cmc
ss
cli
cmp
cld
or
and
sahf
pop
jnp
and
imulb
ss
out
pop
cmp
mov
xor
dec
movsl
pusha
mov
cmp
inc
mov
outsb
inc
cs
into
popa
push
cmp
push
aaa
leave
add
xor
sti
add
jl
out
cmp
cmp
sbb
adc
fwait
into
mov
test
addb
cmc
inc
mov
dec
adc
pop
push
movsb
gs
in
cmp
fadds
lret
dec
movd
lret
xchg
pop
cmpsl
add
aas
cmp
or
mov
push
mov
or
xchg
push
push
sbb
popf
pop
and
inc
dec
sbb
es
cli
cld
rcrb
xchg
lcall
imul
xor
mov
dec
adc
dec
cs
inc
scas
sub
in
mov
out
addr16
mov
test
fldt
sti
out
jae
inc
adc
fildll
inc
fadds
out
data16
addb
pop
test
lods
inc
or
fmull
daa
push
or
aad
mov
push
add
cmp
push
cmp
in
or
pop
outsb
mov
add
cmpsb
adc
cwtl
xorb
sub
mov
in
adcb
sub
ja
and
mov
clc
xchg
cmp
lret
mov
add
dec
xor
fisubrl
repnz
cmp
xlat
pop
cltd
lock
or
mov
cli
mov
mov
inc
mov
push
lock
mov
insl
dec
std
cltd
shrb
jo
mov
mov
dec
leave
cmp
inc
xchg
lock
leave
addr16
push
dec
insl
into
jns
push
cmp
jnp
fsubr
adc
push
nop
sbb
bound
in
jb
xchg
pop
es
inc
aaa
clc
add
outsb
fbstp
push
push
fdivrl
test
sar
mov
push
pop
ds
mov
pop
cli
sbb
xor
inc
int
ds
into
xchg
rep
pop
out
xor
jb
push
jl
sub
add
dec
sbb
aad
push
adc
ja
dec
xor
jl
mov
xor
pop
and
imul
or
decl
ja
dec
xor
and
or
push
aad
jmp
mov
rorb
pop
mov
in
jnp
inc
inc
outsl
pause
jae
fistpll
ss
in
adc
ds
into
mov
fidivrl
int3
sub
jp
adc
pop
inc
inc
mov
sub
jecxz
scas
sti
lock
ret
push
dec
mov
hlt
scas
push
movsl
cmp
and
xchg
pop
stos
cmp
sub
xchg
cmpsb
mov
adc
lcall
push
loop
outsb
ja
addr16
movsl
imul
cld
outsb
rorb
out
pop
and
test
shl
sbb
xor
cmpl
push
jbe
test
mov
ret
dec
es
push
add
adc
mov
cli
push
ljmp
aas
movsb
pop
sbb
dec
lds
scas
arpl
insl
or
sahf
gs
call
inc
into
testl
lret
outsl
js
into
inc
ds
jecxz
pop
mov
dec
add
add
test
cmpsl
addr16
adc
jno
jo
in
mov
jp
or
lods
sub
xchg
xor
sub
cs
pop
clc
push
sti
and
dec
mov
aas
mov
push
addr16
jecxz
cmp
pusha
iret
mov
mov
add
mov
ror
outsl
inc
pop
and
inc
mov
jne
aas
push
in
xor
mov
aad
in
sub
pop
pop
push
mov
cmp
push
mov
stc
jne
pop
sbb
mov
bound
mov
dec
in
dec
and
pop
ja
nop
adc
je
stc
lahf
dec
test
addr16
mov
and
sub
xchg
inc
icebp
jge
or
cs
pop
pop
test
push
cmp
bound
xchg
hlt
jmp
int
jl
and
movsl
clc
rclb
mov
std
repnz
sbb
shll
xor
or
icebp
loope
jb
xor
mov
mov
cmp
or
mov
cmpsb
sti
cmp
nop
nop
sbb
dec
pop
lods
pop
into
ficompl
test
inc
test
add
int
dec
repnz
insl
out
test
sub
mov
push
gs
add
cli
cmp
ret
jl
shll
ljmp
divl
insl
xor
pop
jp
scas
outsb
outsl
lods
xchg
jns
pop
mov
cmp
adc
mov
adc
in
add
and
cltd
mov
or
xchg
pop
rdpmc
mov
insb
push
fstl
loope
cmp
orb
repz
cwtl
outsl
fistps
bound
xchg
push
push
mov
cld
std
or
inc
ja
data16
add
mov
repz
clc
mov
inc
cmp
mov
mov
add
lock
inc
jae
std
call
sbb
scas
jnp
dec
mov
jb
inc
inc
mov
sub
xchg
mov
jns
cmp
nop
pop
lret
mov
imul
jb
shlb
sub
mov
sahf
inc
fcmovnbe
imul
lret
mov
fstpl
dec
dec
lods
loope
scas
pop
leave
mov
cmp
aaa
les
dec
popf
in
sti
loop
xchg
bnd
push
testl
or
mov
das
imul
sub
fstl
mov
shlb
repnz
in
sbb
sub
mov
loopne
call
cmp
or
push
adc
pushf
aas
stos
enter
jp
mov
jle
aam
jge
cmc
jge
pop
scas
movsb
lea
loopne
test
lret
loope
xor
or
out
or
sub
sub
add
adc
jbe
cmpsl
and
into
cmp
jae
in
cmc
jnp
sti
add
ret
xchg
xorl
mov
xchg
fadds
mov
cmp
push
ret
jmp
into
ss
add
loopne
xchg
xor
fsubrs
cmp
jl
lea
aad
scas
ljmp
xchg
xchg
in
jo
lret
add
loop
in
fsubs
pusha
mov
pop
pusha
push
sbb
adc
jbe
push
cmpsb
mov
add
pop
insl
lcall
and
inc
or
cwtl
pop
lret
pop
or
in
outsl
sahf
mov
xor
inc
add
stos
leave
lea
int
lcall
or
std
xor
mov
call
lret
jmp
ficomps
mov
insl
adcl
test
mov
xor
loopne
cmpsl
adc
rcrl
xchg
mov
lret
lret
daa
cmp
dec
pop
addb
mov
int3
testb
nop
sub
add
inc
sti
int3
cmpsl
mov
pop
push
sbb
xor
inc
adc
int3
lods
inc
std
pushf
xchg
iret
cmp
and
cltd
popa
push
ror
lret
ret
sbb
sub
mov
popa
cmpsl
xor
pop
sbb
xor
aam
and
pop
mov
sbb
and
xor
jno
lahf
mov
ljmp
sub
jge
jge
pop
pop
jp
push
push
add
cmc
add
xor
fsubl
lahf
jne
and
je
outsl
insl
out
ret
mov
mov
enter
data16
jne
scas
int
pop
push
ret
mov
enter
jnp
shll
sub
jmp
dec
cwtl
jae
mov
jo
call
mov
stos
outsb
pop
pop
loopne
mov
mov
xchg
mov
shrb
ja
sbb
imul
pop
xor
stc
neg
or
push
pop
les
js
pop
cmp
jns
test
pop
inc
lds
add
cmc
cmp
jo
repz
adc
jmp
stos
jmp
jg
xchg
leave
es
cld
cmc
push
int3
add
mov
sahf
and
xchg
inc
idiv
xchg
in
push
and
es
cmp
stos
pop
dec
push
mov
mov
in
fs
jl
mov
mov
adc
lret
scas
jno
cmp
xchg
jmp
mov
std
in
rol
sbb
sbb
sbb
mov
nop
pop
lds
out
rorl
dec
test
fsubrl
insb
ret
outsl
adc
push
mov
xchg
adc
mov
enter
and
lock
lock
cmovl
pop
ds
fimuls
push
sub
ds
fisttpll
clc
sarb
shrl
sbb
mov
cmpsb
jle
pop
ss
xchg
cli
xchg
mov
in
mov
mov
jle
mov
out
pop
mov
cs
dec
lcall
sub
xchg
xor
data16
or
popf
cmp
add
mov
sub
mov
mov
subb
jge
aam
xchg
push
lcallw
in
fsubrs
pusha
and
sub
inc
fsubrs
stos
mov
rclb
cmp
cltd
xor
or
popf
mov
push
xor
in
and
int3
daa
mov
imul
lea
add
sub
push
xor
lahf
sub
or
andb
and
in
data16
or
add
cmp
lods
mov
adc
push
out
fstps
iret
xchg
push
add
mov
jno
cwtl
xor
inc
jno
aad
dec
fmuls
fstps
mov
lahf
inc
jne
and
in
xor
mov
cmpsb
xchg
jbe
push
cmpsl
mov
je
or
fucomp
inc
jmp
mov
rcrb
dec
into
jg
jae
adc
cltd
jge
das
cmp
fcomp
into
cmpsl
stos
icebp
aam
rcrb
arpl
jb
cmp
mov
int3
mov
lret
pusha
dec
xlat
mov
ficomps
cli
jne
out
xor
fldt
leave
scas
addb
ds
pop
jp
fdiv
lea
inc
sub
dec
mov
gs
out
pop
in
repz
cmp
shll
out
push
daa
or
out
lock
fildl
cltd
out
into
mov
push
cwtl
xor
push
inc
pop
fwait
movsl
popf
inc
sub
ret
xchg
ja
inc
test
adc
jbe
cmp
xchg
dec
push
inc
and
fisubs
mov
fimull
sub
popa
das
push
jmp
sbb
iret
adc
mov
into
loope
adc
xchg
jmp
rcrb
int3
iret
or
cmp
xchg
pop
lret
fidivrs
sbb
sbb
in
test
into
mov
pop
inc
cmp
add
rorl
mov
bound
mov
and
fstp
in
inc
sub
and
arpl
fsubs
test
faddl
pop
inc
xchg
xchg
dec
add
xor
xchg
dec
cwtl
jns
jle
pushf
inc
in
outsl
movsb
cmpsb
mov
pop
and
cmp
lock
fcompl
add
sahf
and
fcmovbe
mov
mov
dec
pop
adc
xchg
jmp
lods
push
jge
push
ja
enter
cmc
sbb
test
cmpsb
or
cmp
scas
adc
dec
and
subb
fnstcw
test
mov
dec
bound
xchg
push
out
shlb
dec
shrl
mov
js
pop
push
shrb
jmp
scas
sbb
test
out
mov
jecxz
inc
push
jbe
push
in
or
lods
dec
jmp
inc
cwtl
dec
fsubl
call
push
sub
sbb
movsb
cli
lods
int3
es
push
mov
bound
bound
mov
add
mov
test
push
jnp
scas
xchg
sarl
mov
das
jecxz
gs
lcall
popf
bound
aaa
inc
jmp
loop
sub
push
sbb
jo
out
std
sub
ja
loopne
add
test
and
sbb
adc
or
sub
repnz
cmp
dec
cli
in
xor
aam
call
mov
sbb
and
inc
mov
push
mov
sub
sahf
lret
out
inc
or
adc
insb
push
cmp
test
pusha
mov
insl
rclb
test
dec
subb
jno
call
mov
out
or
bound
popf
in
add
pop
loope,pn
iret
mov
pusha
inc
jne
add
test
ljmp
lock
addl
add
lret
std
push
popf
fisubrl
stos
inc
mov
cmp
cmp
inc
xchg
bnd
sti
dec
mov
in
dec
lret
imul
ljmp
in
jg
mov
push
add
sbb
mov
inc
dec
push
into
cmpsl
jp
mov
icebp
insb
ljmp
cmp
add
jno
test
xor
pop
mov
and
cmpsl
fdivs
mov
movsb
lods
jle
mov
sbb
push
mov
test
add
icebp
push
mov
xor
imul
icebp
pop
sub
into
xor
inc
or
xor
insl
mov
push
xchg
gs
lret
xchg
cld
in
cmp
and
inc
jae
jnp
inc
jecxz
pop
jl
pop
push
sbb
sbb
mov
add
sbb
push
cmp
test
es
mov
nop
pop
and
pop
inc
cmpb
mov
pop
insb
mov
imul
iret
ret
popf
in
iret
lret
or
into
pop
mov
mov
dec
cltd
stc
data16
pop
xchg
jge
rorb
addr16
mov
mov
inc
fmull
pop
or
sbb
cmpb
or
mov
scas
ficoms
loopne
jle
cwtl
fmull
xor
cmpsl
jnp
cld
div
les
sub
jmp
popf
mov
or
pushf
mov
mov
lea
or
jge
mov
pop
dec
add
loop
cmp
push
call
cmp
jne
mov
add
pushf
xchg
call
fisubrl
movsl
mov
push
lret
sub
test
sub
jl
test
xchg
dec
sub
les
out
test
cmpsb
adc
sub
adc
cmp
mov
int
mov
push
nop
into
adc
mov
cmp
inc
dec
scas
push
adc
icebp
cmpsl
inc
push
mov
mov
ret
daa
fidivrl
adc
mov
push
mov
mov
xchg
mov
adc
fwait
push
adc
sahf
xor
inc
or
and
in
addr16
outsb
test
mov
sbb
xor
addr16
sub
scas
jl
or
ret
aas
adc
push
sbb
cmpsb
int3
and
push
inc
shrl
mov
int3
or
jns
pop
repz
push
fbstp
mov
into
mov
or
scas
push
imul
movb
insb
jne
into
push
test
cmp
push
out
aaa
inc
cld
loopne
lcall
xlat
adc
mov
xchg
aad
jecxz
jg
mov
push
cltd
rorb
adc
call
hlt
adc
aad
push
call
jle
ljmp
pop
xor
cmp
inc
clc
and
push
ret
push
xchg
push
test
adc
fisttpll
imul
ret
fcmovbe
sub
roll
xor
mov
movb
loopne
jb
mov
push
sar
cmp
icebp
fistps
mov
movl
ficomps
dec
adc
inc
jecxz
add
mov
cmpsb
cld
jl
mov
jmp
push
cmp
rorb
mov
sbb
lods
dec
jecxz
mov
xor
lods
xor
dec
mov
jecxz
adc
sub
das
popa
dec
cmp
push
decb
fcoms
jno
xchg
sahf
ja
fcoms
jo
push
sub
sbb
dec
sbb
and
add
movsl
sbb
sbb
cmp
jle
xor
leave
inc
and
xlat
pop
dec
ljmp
fwait
jg
pop
push
sbbb
shrw
add
shld
loope
stos
lds
and
loope
out
sub
cmp
push
pop
mov
loope
cs
xor
nop
adc
inc
mov
sbb
mov
ret
cmp
aad
mov
sbb
outsb
push
or
lock
imul
pop
imul
adc
int
sub
push
jnp
mov
out
lcall
outsl
inc
ret
sub
mov
sub
dec
outsb
push
push
mov
sbb
loope
popa
push
bound
xchg
dec
idivb
aam
fstp
inc
mov
out
ja
rcl
outsl
cmpsb
xchg
push
lret
lcall
js
xchg
jp
mov
neg
cwtl
mov
jge
lcall
xor
dec
sti
cmp
dec
dec
pop
repz
outsl
ja
mov
push
movsb
and
xchg
ljmp
xor
xor
xor
data16
popl
cmpsb
ds
mov
and
dec
js
push
pop
jmp
inc
out
pop
aam
mov
sub
imul
mov
lods
repnz
icebp
or
mov
xchg
mov
daa
mov
dec
mov
fidivl
mov
xchg
sbb
in
jbe
fstps
push
rcrb
aas
add
pop
movb
push
push
mov
jl
add
pop
sbb
sub
and
stos
out
xor
adc
fstpl
nop
and
pop
loope
rcrl
xchg
mov
and
mov
adc
dec
aas
in
push
stos
cmp
pusha
push
clc
das
andb
movsb
mov
cmp
jns
cmp
push
int
cmp
pop
fucomi
inc
sub
stos
cmc
outsb
icebp
mov
pop
adc
cmpsb
or
cmpsb
roll
aad
and
inc
ss
dec
inc
fbld
movsl
push
xchg
movsl
and
pop
out
ret
dec
sub
cmc
insb
cmp
popa
cmp
insb
mov
std
mov
push
inc
xor
push
sub
push
insb
mov
push
loopw
sbb
add
mov
or
icebp
mov
lods
mov
rcl
imul
es
test
dec
jge
fisttpll
mov
bound
sahf
xlat
push
mov
subl
and
stos
mov
jp
inc
push
movsb
out
outsl
cmpsb
mov
and
inc
into
push
sub
popf
pop
stc
xchg
xchg
cmc
cmp
outsb
stos
or
aaa
rcrl
leave
dec
sbb
mov
pop
fistpl
scas
mov
out
sub
gs
jecxz
and
test
cld
nop
add
push
add
pop
mov
inc
adc
pusha
inc
repnz
adc
ds
xabort
xchg
lds
sub
scas
dec
lcall
xor
aam
adc
out
or
in
fisttpll
out
lahf
or
popl
dec
sti
aaa
dec
mov
xor
cmp
cs
mov
cmpsl
push
ss
push
jnp
xchg
pop
pop
xchg
pop
pusha
test
mov
sub
fiaddl
cltd
pop
and
int
push
sbbl
xchg
dec
out
pop
xor
or
in
sub
jno
mov
push
sbb
dec
fs
movsl
in
sti
push
xchg
jbe
lods
mov
cmpsl
sahf
pop
mov
inc
inc
mov
pusha
lock
xchg
jp
sbb
xchg
jo
adc
data16
inc
sbb
adc
cmc
icebp
aaa
mov
out
dec
mov
sub
leave
inc
sbbl
or
push
cli
pop
std
jle
lods
push
jns
xchg
cmc
cmp
jl
insl
xchg
es
icebp
add
dec
xchg
cmpsl
fs
icebp
aas
in
leave
cmp
in
es
sbb
sbb
insl
fldt
mov
lea
rclb
scas
cld
repz
sub
push
cli
ja
insl
out
insl
mov
mov
incl
mov
out
aas
or
sti
orl
jbe,pt
arpl
cmc
test
jge
push
mov
loop
or
mov
pop
in
sub
jno
in
rcll
pop
negb
out
in
out
jo
add
data16
scas
aas
pop
out
jmp
and
icebp
pop
or
stc
pop
cltd
xchg
mov
lods
leave
out
out
cmp
repz
inc
stc
mov
mov
inc
and
cmp
adc
inc
jg
bound
sarb
jge
push
cmp
xchg
lret
lea
push
cmc
mov
lods
sub
cmp
mov
test
and
fistpll
push
adc
xor
mov
stos
daa
push
pushl
jae
sub
out
repnz
or
adc
stc
idivb
pop
add
sbb
scas
mov
arpl
push
shll
fistpll
pop
cmp
pop
les
xchg
jp
inc
push
pop
faddl
clc
cwtl
mov
dec
pop
and
sti
aaa
mov
lret
xchg
pushf
addr16
cmc
js
pop
bound
addr16
cmp
dec
dec
mov
pop
xchg
dec
cmp
sahf
fsts
push
int3
lea
inc
sub
mov
inc
xchg
sti
std
pop
ljmp
in
mov
or
clc
push
sete
xlat
daa
xchg
inc
ret
xchg
scas
mov
enter
fcmovne
bound
inc
ja
xchg
xor
pop
sub
cltd
or
das
js
xor
lock
xchg
shl
sahf
outsb
xchg
cmp
cmp
lret
xor
out
addr16
addr16
or
shll
loopne
mov
test
stos
or
arpl
mov
cmp
shll
mov
mov
push
lea
insb
rclb
mov
jmp
pop
lds
lret
pop
insb
jecxz
pop
bnd
sbb
mov
cmp
jge
icebp
cli
stos
pop
sbb
pop
cmp
inc
and
cld
cmpb
push
add
mov
sub
les
into
in
test
push
fisttps
paddsb
in
sbb
in
jne
jnp
shrb
imul
mov
push
std
movsl
inc
lods
sbbl
ds
xchg
add
fwait
bound
mov
int3
sub
cwtl
or
les
or
add
out
addr16
mov
lock
cmp
xchg
fldl
fcmove
fists
push
movsl
jmp
pop
nopl
push
lret
inc
cmp
mov
cmc
push
adc
aad
cmp
fimull
mov
jmp
and
xlat
neg
jae
cs
sahf
lret
pop
xchg
sbb
loope
and
push
ljmp
aam
mov
das
mov
jl
add
lods
imul
mov
cmpsb
loope
mov
or
adc
leave
mov
mov
mov
mov
pop
mov
ss
xchg
les
das
xchg
push
test
mov
cmpsl
imul
imul
jo
sub
mov
mov
pushl
in
cld
stc
fsubs
lods
xor
pop
notb
pop
call
pop
jb
testb
leave
mov
cld
cmc
int3
fsubrs
inc
jp
sub
hlt
stc
xlat
cld
pop
jge
mov
mov
jge
inc
jnp
or
inc
rcll
lahf
scas
stc
push
aad
lods
or
shrl
sbb
jbe
jp
lret
daa
xchg
pop
lcall
popa
lods
lret
in
lods
cmp
jbe
lret
cmpsl
addb
pop
jo
xchg
es
in
sti
cmpsb
aad
imul
popa
inc
sti
ret
aad
rcr
iret
jne
cmp
xor
dec
fwait
dec
mov
sahf
cmp
adc
push
mov
inc
mov
push
sbb
mov
bound
lret
mov
add
mov
popa
inc
imul
lcall
sahf
xchg
lret
jbe
es
in
cmp
and
sbb
push
xchg
push
mov
testb
mov
xchg
mov
push
arpl
aad
push
out
add
pop
push
mov
pop
cmp
sbb
mov
popa
stc
test
add
push
mov
std
imul
add
sub
lds
cmpsl
icebp
ss
cmp
scas
fisubrs
into
sbb
and
das
adc
fstp
push
xchg
out
jl
or
lods
push
inc
in
jp
nop
xorb
inc
lods
mov
pop
fimull
sbb
stos
dec
or
adcl
mov
rorl
lret
pop
jecxz
das
xor
ret
push
adc
sti
imul
orb
cmc
lea
push
scas
ret
and
in
push
inc
xchg
push
pop
mov
in
into
add
test
mov
out
fwait
mov
fidivs
in
mov
sbb
cmp
ds
pop
hlt
mov
cltd
testl
mov
xlat
lock
out
addr16
out
aad
int
xlat
int3
xchg
fldl
jae
inc
adc
or
adc
cmp
sub
or
or
stos
pushf
test
mov
cmpsl
fldcw
int3
rcll
cmp
push
insl
addr16
lahf
mov
aad
jbe
mov
dec
dec
add
mov
fstps
ret
adc
int
pop
mov
mov
ret
xchg
sub
addr16
cmp
lret
add
xchg
cmc
stos
imul
sti
imul
iret
shl
mov
jle
mov
mov
inc
nop
es
sti
cmp
insb
jnp
jns
int
icebp
stos
xor
int
cs
aad
cmp
jnp
loopne
int
das
out
rcr
roll
mov
jg
mov
mov
mov
aaa
inc
xchg
mov
addb
cli
dec
jg
fisttpll
gs
mov
imul
sbb
jo
aaa
push
xor
orb
jge
test
gs
cmp
in
dec
sbb
sub
xchg
adc
insb
int
push
cmp
data16
xchg
dec
dec
dec
int3
adc
mov
add
pavgw
cmp
jmp
out
lret
int3
xchg
mov
or
popf
in
into
insl
xchg
addr16
cltd
xchg
add
ffree
dec
xchg
mov
xchg
mov
sti
dec
mov
xchg
sbb
mov
int
adc
out
jecxz
sbb
jb
jns
repnz
cmpsb
sbb
test
dec
pop
leave
dec
mov
fdivl
test
jne
xchg
xorl
and
ja
pop
rol
inc
scas
orb
cld
addb
inc
mov
fstps
mov
sbb
imul
fistpl
repnz
addr16
adc
jge
daa
add
mov
sub
add
jmp
and
mov
scas
mov
push
inc
enter
xor
adc
test
add
dec
shrb
movsl
sub
push
xchg
mov
test
mov
fildl
sub
pusha
jmp
jmp
mov
ljmp
fiaddl
negb
mov
outsl
shrb
ret
loopne
pop
shll
aad
or
out
out
mov
int
mov
daa
mov
jg
rcr
dec
mov
aad
add
push
mov
lea
dec
mov
dec
sub
or
popf
jge
inc
and
xor
mov
mov
scas
cltd
mov
mov
mov
imul
add
inc
cmp
xchg
dec
cmp
add
cmp
fisubrs
outsl
xchg
out
dec
gs
pop
cmp
loope
cmp
cld
inc
lods
dec
mov
and
mov
cmp
jb
mov
sbb
sbb
notb
jecxz
mov
pop
pushw
pop
sbb
pop
mov
daa
jb
data16
in
mov
nop
sti
xchg
das
mov
ret
fstpt
ljmp
andb
pop
insb
gs
neg
lods
adc
fists
cmp
jmp
cmp
cld
add
int
inc
xchg
push
inc
lods
rol
ficoms
push
lcall
mov
pushf
ficomps
es
out
inc
inc
jge
int3
sahf
pop
lea
xor
cmp
pop
scas
sbb
loope
inc
loopne
jg
and
pushf
jno
mov
cld
mov
loop
dec
jno
cmp
mov
pop
sub
loope
inc
and
mov
rcr
adc
dec
dec
rclb
push
cmpsl
or
outsl
nop
pop
jg
pop
pop
dec
ljmp
fs
sbb
lods
xor
mov
pop
mov
adc
sbb
add
cs
sub
xchg
leave
loop
or
in
jecxz
stc
adc
ror
cld
fsubrl
loope
mov
mov
xchg
pop
xor
pop
jg
sub
jmp
stos
mov
cmp
mov
or
cmpsl
xchg
lds
dec
xchg
add
jmp
arpl
pop
cmp
and
pop
jge
xchg
inc
fdivl
xchg
in
mov
mov
mov
fwait
imul
shrb
add
or
lcall
mov
or
popa
push
or
inc
xchg
or
lds
xor
adc
mov
fists
aas
dec
movsb
or
inc
mov
jo
addl
cmp
movl
inc
cvttps2pi
or
pop
hlt
mov
outsl
lret
inc
mov
imul
vpmuludq
pop
inc
lcall
xor
jmp
push
sarl
and
lret
push
fucomi
mov
sbb
rcrl
or
push
sub
dec
repnz
ret
pop
inc
xchg
data16
mov
in
cmp
mov
and
xchg
fldt
ja
inc
mov
int3
call
mov
jg
scas
inc
data16
aaa
icebp
jge
aad
shrl
stos
mov
pop
outsb
cmp
mov
cwtl
das
inc
dec
stos
and
daa
or
push
sbb
in
xor
aam
sti
or
cmp
fnsave
pop
clc
data16
push
inc
insl
and
pop
lods
mov
sbb
mov
enter
xlat
mov
and
fwait
cmp
loope
aad
dec
adc
dec
inc
imul
jp
mov
loopne
dec
inc
xchg
daa
mov
dec
xor
fildl
push
cmp
aad
lea
mov
adc
fcmovne
and
inc
push
and
mov
sub
xchg
loop
or
sbb
dec
roll
sub
loopne
sbb
fmuls
pop
lods
fcoml
mov
mov
in
jl
mov
adc
pop
inc
sub
fldt
add
lock
pushf
data16
lods
adc
daa
cmovbe
daa
add
pop
ret
mov
lea
inc
push
jecxz
jge
cmpsl
pop
push
popf
stos
pop
cmp
sbb
sahf
out
scas
xlat
xor
loope
nop
fcmovne
cmp
popf
in
lret
test
dec
out
cmp
inc
pushf
sbb
xchg
add
rorb
movsl
lret
xor
loope
call
dec
pop
test
xchg
mov
iret
inc
jae
xchg
pand
ret
sub
aad
repnz
or
lahf
leave
movsl
sub
mov
movb
ficoms
stos
in
jnp
mov
cmp
lret
xchg
jns
sub
inc
and
mov
mov
movsb
xor
movsb
movsl
or
flds
push
cli
adc
pop
jno
inc
adc
scas
in
cmp
scas
xor
inc
cmovge
sub
sub
mov
repz
push
xchg
stc
sub
mov
aaa
mov
test
jg
in
and
lods
mov
pop
adc
stos
lret
shlb
insb
pop
adc
rclb
nop
mov
fwait
lret
in
mov
push
xor
fisubs
dec
sub
mov
xor
repnz
mov
push
sub
out
test
cmc
call
mov
insl
in
xor
aaa
mov
int3
sbb
pushf
in
mov
mov
sbb
mov
jl
fnstcw
imul
fs
xor
xchg
sbb
movsl
add
sarb
es
leave
and
scas
mov
sbb
jnp
or
out
push
mov
push
xor
adc
cld
out
or
or
js
sub
mov
inc
lock
lret
cmpsl
jg
out
cmp
jge
push
daa
divb
sahf
jge
sub
aas
inc
jmp
data16
iret
pop
imul
mov
mov
cmp
mov
fwait
in
cmp
sti
rorl
in
in
mov
mov
add
cmp
mov
push
jecxz
aaa
and
scas
push
pop
mov
inc
loope
ret
add
xor
in
jmp
out
xchg
fcmovnu
dec
adc
nop
push
imul
sti
int
loope
dec
or
sub
imul
add
mov
add
pop
inc
cmp
sub
xor
and
cltd
pop
movsl
push
loopnew
sub
jl
lds
imulb
jmp
rol
mov
dec
movsl
sub
test
xchg
test
cli
mov
repz
sub
dec
shr
xchg
nop
inc
rcll
lahf
jne
out
pop
outsl
pop
imul
add
sti
jge
ljmp
push
mov
jmp
gs
inc
xor
nop
mov
aaa
dec
dec
stos
int3
cmpsb
lahf
or
mov
in
and
movsl
js
adc
movsb
dec
pushf
cld
into
mov
inc
mov
mov
das
popf
mov
nop
pop
or
insl
imulb
inc
mov
ja
push
dec
add
ficoml
lahf
pop
xor
pop
rcll
and
inc
outsb
mov
pop
fadds
jmp
inc
pop
or
stc
push
repnz
push
clc
mov
mov
mov
adc
inc
sbb
leave
jl
mov
sub
dec
loopne
adc
popf
jns
repnz
mov
adc
mov
rcl
sti
xor
pop
test
mov
cmpsb
clc
or
mov
push
mov
shll
fwait
enter
rcrl
cmc
pop
stc
mov
and
inc
xlat
insb
mov
imul
mov
imul
mov
cs
or
clc
xchg
in
movsl
in
lret
or
cwtl
xor
adc
out
movsb
inc
lock
adc
lock
pop
popf
repz
mov
test
rorl
lods
adc
pop
xchg
fistpl
outsb
cmpsb
fisttpl
divl
lret
rcll
jmp
jnp
sti
xchg
and
pop
inc
pop
cmp
aam
add
test
loop
mov
loope
gs
out
inc
in
xor
lods
xchg
inc
dec
std
divb
pop
mov
add
cli
inc
rolb
daa
in
jmp
dec
fcos
add
aas
loop
mov
andps
inc
or
sarl
jge
or
imul
mov
and
mov
push
sbb
jae
cld
jle
stos
stos
jne
jmp
out
adc
xor
out
xorb
pop
scas
incl
cld
orl
xor
pop
shlb
add
sbb
lcall
cmp
pop
fwait
repnz
fadds
xorb
cld
add
pop
xchg
test
jmp
push
mov
cld
add
ret
imulb
mov
les
mov
xchg
frstors
pop
mov
sub
arpl
dec
frstor
popf
sub
bound
test
idivb
mov
fstps
hlt
cmp
insl
dec
arpl
movsl
lahf
xor
andl
ret
ret
jecxz
dec
ljmp
hlt
jmp
push
fisttps
std
xor
inc
cmp
les
ja
dec
mov
sub
int3
sub
cld
iret
sbb
rcl
popf
pop
mov
or
dec
add
ljmp
fwait
dec
pop
iret
jmp
pop
cmpsb
lods
inc
out
jmp
cmp
and
mov
sub
cmc
out
jo
dec
popf
insl
fiadds
int
mov
into
lock
push
add
fnstsw
mov
add
jg
adc
fmuls
sbb
add
dec
scas
sub
dec
sbb
frstor
daa
mov
leave
push
out
outsl
int
jecxz
pop
mov
mov
mov
xor
mov
or
daa
xor
icebp
rcrl
mov
pushf
scas
lods
bound
jmp
cmp
pusha
or
jecxz
scas
imul
inc
cs
pop
push
jmp
sub
dec
arpl
dec
js
jmp
mov
pop
movsb
ds
push
inc
insl
lods
sub
jne
jecxz
sbb
or
fs
inc
loop
xor
enter
xchg
shrb
addl
sub
aaa
aaa
and
cmpsb
in
sti
ficoms
push
scas
cmp
lret
jmp
pop
xlat
shrl
lret
xor
sub
or
cmpsb
lcall
pop
push
cmc
ja
push
pop
lahf
mov
mov
call
or
pop
pop
in
xor
xlat
cmpsb
dec
add
inc
xchg
lock
mov
add
dec
cmc
xor
push
es
sbb
inc
mov
insl
cmp
mov
adc
iret
mov
iret
adc
std
leave
adc
sub
jo
sub
or
mov
or
test
scas
pushf
mov
shll
mov
notl
bound
adc
shll
jne
sti
imulb
cmpl
xchg
mov
push
call
rolb
adc
add
daa
pop
inc
movsl
xchg
sarb
in
js
arpl
push
xchg
and
dec
jl
fldl
push
inc
cmp
movsl
jne
movsl
and
clc
dec
xchg
ret
das
jmp
add
orb
cmp
pop
mov
repz
out
inc
push
mov
adcb
fs
adc
cmpsl
fdivrs
mov
add
sbb
shl
ja
daa
pusha
cs
movsb
std
addl
lret
repnz
dec
pop
or
add
adc
jg
iret
les
lods
dec
xchg
sub
int3
sub
roll
push
mov
stc
or
jnp
cmpsl
sub
out
add
mov
imul
in
add
push
int
mov
mov
popf
xor
xchg
cmp
fsubs
sbb
mov
mov
cltd
fcmovbe
les
in
std
cmp
mov
pusha
mov
sub
stc
xchg
cli
mov
iret
icebp
jmp
pop
dec
sahf
popf
push
mov
call
dec
add
sbb
scas
pop
push
jge
push
mov
test
test
mov
xor
sahf
faddl
xchg
sbb
mov
mov
test
shr
sub
mov
or
inc
sbb
and
faddp
pop
in
cmp
adc
cmpb
mov
cld
push
adc
fstps
aam
add
fdivrs
push
mov
cmp
jg
outsb
cwtl
dec
mov
dec
xor
push
cmp
sub
mov
xchg
popl
mov
rolb
ds
sub
test
or
xchg
std
inc
jns
xchg
inc
leave
fucomi
mov
sbb
xchg
cmp
aaa
sbb
cwtl
arpl
movb
jno
fsubrl
inc
fisubl
add
push
push
or
jae
push
out
xchg
ja
jo
fisubrl
push
mov
les
mov
loopne
into
loop
inc
xchg
fistps
cmpsb
les
ss
sub
imul
jmp
sbb
das
dec
inc
and
dec
sub
add
sbb
sbbl
dec
or
int
movsl
dec
clc
cmp
sahf
mov
xor
dec
dec
jae
xchg
push
test
add
inc
lods
sub
inc
mov
jnp
pop
inc
or
ret
ljmp
push
imul
popf
stc
mov
data16
mov
into
cmp
gs
test
mov
fcmovnb
dec
clc
out
sub
cli
test
lods
inc
arpl
cmp
cs
fisttpl
mov
fwait
cld
cmp
sub
sub
popf
loopne
pop
lods
xchg
and
and
push
cmpsb
xchg
mov
adc
fwait
iret
lahf
or
lea
mov
cwtl
adc
repnz
inc
adc
jecxz
pop
and
gs
lret
sar
cmp
out
xlat
das
push
test
jg
test
gs
pop
pop
dec
aad
mov
mov
roll
sub
cmp
mov
loop
int
mov
mov
das
pop
out
enter
pushf
push
or
cmpsl
dec
in
push
cmp
call
ret
add
std
bound
es
in
add
xlat
inc
add
fadds
movsb
mov
lcall
fadd
movsb
xchg
iret
imul
dec
xor
mov
sub
cmp
adcb
push
cmp
mov
lret
pop
add
test
cmp
movsl
cmp
sahf
fwait
mov
jne
ret
xchg
mov
push
loope
sahf
mov
dec
ja
jl
lahf
add
mov
ret
pop
arpl
xor
insb
cmp
or
out
inc
cmc
adc
shr
pop
lds
lods
mov
and
aas
jmp
mov
pop
dec
jl
pop
imul
pop
sub
mov
movsl
sbb
icebp
cld
jae
pop
repnz
or
les
ss
fcoms
fsubs
adc
inc
adc
and
jo
xor
mov
pop
ss
stos
xor
sub
fisttps
and
or
xchg
fcomp
aad
bound
pop
leave
insb
shlb
sbb
pop
mov
enter
mov
push
push
loop
not
pushf
sbb
jl
js
mov
jne
icebp
push
add
mov
dec
sub
test
xor
bndstx
and
stc
mov
cltd
mov
jecxz
in
mov
cmp
jmp
xlat
subl
cmp
test
addb
pop
pop
xchg
in
dec
insl
fstpl
push
imul
cmp
xchg
pop
xor
clc
dec
test
movsl
jmp
aad
lods
loopne
lret
mov
jmp
cmp
sbb
add
leave
mov
cmp
out
neg
fcmovu
cmp
mov
sub
mov
adc
fwait
aam
imul
jge
lea
pop
add
sub
cmpsl
pop
and
cwtl
push
adc
repz
inc
nop
mov
jg
xor
xchg
jns
mov
push
inc
mov
xor
add
cmp
xchg
xchg
xchg
out
scas
inc
xor
loopne
mov
cwtl
add
pop
cmpsl
inc
push
jb
ss
mov
bnd
jae,pn
out
jp
add
cmp
adc
and
push
loope
out
fimull
mov
in
inc
and
push
movsb
pop
paddsw
mov
inc
movl
xor
arpl
mov
jne
sbb
addr16
mov
jp
in
adc
es
mov
xchg
sub
mov
add
adc
mov
jp
or
cmpsl
jnp
popf
pop
sahf
stos
loope
add
stc
mov
enter
stos
outsl
repz
arpl
jl
mov
stos
mov
jbe
loopne
fwait
push
sbbb
cltd
adc
adc
ljmp
cmc
movsb
dec
je
insb
js
ss
orl
add
mov
pusha
pusha
mov
jmp
adc
jnp
xchg
pop
cltd
mull
mov
mov
mov
dec
mov
or
cmp
int3
or
loope,pt
int
call
cmp
shrl
pop
sub
sub
out
mov
icebp
les
cmp
mov
adc
mov
icebp
xor
jl
push
push
rcrb
or
ljmp
cmc
pop
test
mov
cltd
jle
sbbb
mov
pop
and
push
mov
sbb
adc
mov
xor
std
test
adc
xchg
insl
pop
inc
shr
pop
mov
rorb
fsub
arpl
aam
adc
out
pop
scas
enter
fstp
push
jb
cmp
shll
insl
mov
push
mov
mov
in
gs
inc
cs
shlb
scas
mov
sbb
jns
inc
inc
stos
incb
adc
mov
mov
jb
lea
mov
leave
cmp
scas
decb
adc
fsubs
ret
push
pushf
jae
mov
jno
mov
movl
pop
out
mov
jge
mov
jmp
cmp
lock
subl
and
movb
push
test
mov
into
xchg
pop
mov
inc
xorb
jp
and
jno
push
popa
cmc
xor
les
mov
xchg
sbbb
les
pop
out
xlat
dec
repnz
mov
lret
pop
cld
dec
lret
add
das
mov
cmp
sbb
xchg
sbb
hlt
stos
mov
pop
and
mov
adc
int3
xlat
divb
pop
and
inc
daa
xor
push
movsl
inc
dec
sbb
and
imul
lds
mov
leave
aam
bound
inc
adc
inc
xlat
mov
jge
cli
movsl
inc
mulb
aad
ljmp
cld
and
test
aad
pop
inc
lea
dec
pop
popf
mov
add
test
cmp
leave
cmpsl
sbb
jmp
pop
fisubs
scas
mov
mov
add
out
test
fidivrl
dec
roll
pop
fadds
sarl
xlat
inc
stos
pop
inc
adc
mov
push
xor
cmp
push
jns
lods
fists
out
mov
movsl
cmp
test
cmp
neg
and
sub
sbb
int3
jae
push
sahf
sbb
shr
xor
rorl
inc
or
lcall
lcall
dec
xchg
mov
ret
inc
sbb
and
xchg
aam
sub
or
imull
imul
ljmpw
aad
push
ss
repnz
mov
mov
jnp
popf
sahf
xchg
jmp
mov
icebp
or
popa
nop
xor
jle
cmp
jbe
adc
das
xchg
stc
cmp
cmpsl
sub
out
mov
pop
xchg
into
fisubs
adc
mov
push
or
popa
add
ret
les
xchg
adc
orb
aas
cltd
jmp
jne
xchg
lods
loope
cli
inc
out
cs
fcmovb
adc
dec
add
dec
fs
mov
cmp
ficoms
dec
sbb
jne
shll
fisubl
test
add
repz
addr16
js
or
lock
add
mov
fcomps
add
ffreep
sbb
dec
xorb
add
gs
in
mov
ds
loope
ror
mov
in
out
popf
adc
jns
fsubr
mov
out
xorl
inc
cwtl
push
inc
sbb
adc
maxps
or
shlb
adc
shlb
xor
mov
aad
mov
pushf
int
mov
in
loop
insl
out
shll
int
js
dec
clc
clc
mov
xchg
testb
aaa
add
push
inc
stos
les
outsb
or
pop
mov
push
cmp
loop
mov
push
pop
stc
aaa
rorl
jo
addr16
cmp
push
or
stc
stos
shrb
xchg
or
mov
sbb
lret
lods
push
inc
cmpsb
pop
ss
cmp
out
and
mov
les
lods
sbb
stc
mov
xchg
pop
sub
adc
cmp
clc
mov
in
cmp
pop
cld
repnz
pop
rorl
jl
lods
xor
test
jg
dec
int
sahf
lds
scas
xorl
mov
sbb
lahf
fcmovbe
mov
pop
std
ss
lret
mov
or
mov
pop
dec
pop
mov
cli
mov
mov
repnz
xor
movsb
xchg
inc
nop
jns
lea
into
cwtl
outsl
daa
xchg
pop
dec
leave
and
xchg
xchg
mov
mov
sahf
insl
incb
xor
mov
cmp
sti
mov
sub
lret
or
add
dec
add
aam
imul
mov
mov
test
jo
adc
out
dec
pushl
es
imul
inc
ljmp
das
fcmovbe
lret
int
aad
push
nop
outsb
ffreep
pop
mov
dec
int3
insb
mov
sbb
dec
push
adc
out
repnz
ss
cmpsb
rorl
lret
adc
push
pop
imul
or
xor
push
sub
aas
test
xor
push
and
mov
push
or
adc
jbe
push
fsts
add
popf
cmc
js
inc
outsb
daa
scas
sbb
lea
mov
imul
or
cmp
sbb
mov
pushf
inc
repz
xchg
test
cmp
lds
xchg
sbb
idivb
test
inc
xor
out
jns
jne
out
std
mov
adc
out
fldcw
jecxz
jnp
xchg
in
jecxz
add
fimuls
insb
dec
into
and
gs
scas
xlat
out
imul
or
pop
pushf
outsl
add
cmpsl
inc
aad
jo
lret
addr16
pop
dec
inc
mov
int3
stos
cmp
jae
cli
mov
xchg
cwtl
in
bound
pop
ret
push
in
xor
cmpsb
push
in
rcrb
jb
mov
leave
daa
mov
and
inc
adc
adc
sbb
xchg
jno
orb
jbe
adc
in
test
les
pop
xlat
clc
and
lcall
xlat
jg
inc
popw
lods
sti
xor
mov
xor
jge
test
mov
lahf
mov
popf
mov
adc
jecxz
and
cmp
dec
inc
sarl
mov
imul
mov
inc
movsb
movsb
mov
fdivrl
xorb
dec
fs
pop
adc
int
sbb
into
stos
push
push
sub
adc
ljmp
mov
outsb
out
insb
dec
inc
cmp
mov
jne
dec
push
icebp
imul
stc
in
js
mov
push
sub
in
je
add
cmp
lock
out
addl
jae
mov
push
or
mov
inc
mov
repz
stos
movsb
add
ja
lds
fisttpl
jp
movsb
sub
jb
inc
jae
sub
or
test
fcomps
mov
ss
cmp
cltd
scas
insb
jmp
xor
and
pushf
call
in
push
cmpw
mov
scas
mov
clc
add
insl
pushl
sbb
dec
sbb
out
jbe
jg
and
or
pop
out
aas
sbb
fldt
leave
push
cmc
sarl
mulb
mov
or
mov
xor
dec
std
das
and
test
adc
xchg
std
aad
fwait
pop
mov
inc
mov
pop
pop
cmc
or
int3
js
and
jmp
jne
test
mov
popa
pop
aaa
hlt
ja
mov
jecxz
jecxz
pusha
sbb
and
out
out
lahf
mov
fcmove
pop
dec
xchg
dec
inc
push
xchg
dec
fildll
dec
fdivl
xor
cmp
ret
lahf
lret
cld
add
std
scas
push
lods
shlb
or
mov
fnstsw
mul
out
rorl
dec
dec
in
jle
inc
jne
fcmove
pop
or
mov
pop
dec
sti
xchg
jecxz
inc
popf
mov
mov
jno
cld
cmp
pop
aas
xchg
movsl
push
mov
iret
jae
push
dec
outsb
inc
xchg
out
pusha
sahf
sarl
sbb
clc
outsb
cmp
xor
inc
cmp
sub
and
jg
push
in
gs
and
cmp
jl
inc
inc
inc
cmp
add
fstpt
lret
int
and
ret
dec
push
lcall
dec
sarl
xchg
xor
mov
icebp
lods
sub
movsb
in
aaa
out
movsl
and
pop
cmp
mov
pushf
int
test
inc
xor
dec
dec
add
into
pop
fcmovnbe
sbb
fs
lea
hlt
inc
jecxz
mov
push
ja
xchg
and
mov
in
sub
cmpl
fnstenv
adc
sub
sub
xchg
push
push
sti
pop
popf
sbb
dec
mov
sbb
xchg
xchg
stos
out
fiaddl
insl
or
jno
in
mov
and
push
jecxz
jmp
ds
cmp
rorl
pop
jb
stos
popa
add
fimuls
cld
fsubs
add
cmp
mov
jecxz
call
and
mov
popa
cmp
add
sbb
jg
jl
push
fmuls
xlat
lods
push
cmp
adcb
dec
lret
xchg
ja
int3
and
mov
jnp
add
cmp
pop
addr16
lfs
ret
cmpsb
xor
push
dec
shl
scas
ljmp
push
lods
daa
jbe,pt
divl
loopne
pushf
cmp
adc
mov
roll
xor
cltd
insl
mov
movsl
test
movsb
shl
std
and
test
mov
inc
xor
lcall
add
in
in
adc
scas
xor
popf
pusha
mull
xor
incl
add
jecxz
sbbl
int
dec
push
pop
xchg
xchg
mov
push
leave
cld
sub
addr16
es
fwait
jge
jge
pop
xor
mov
inc
cmpsb
mov
cmp
mov
test
adcb
loop
movsb
pop
xor
xorb
push
lea
outsl
dec
inc
inc
pushf
repnz
iret
cwtl
nop
cmpsl
fdivrl
mov
adc
mov
test
cld
mov
int
push
pop
inc
or
ficompl
jns
push
out
pop
mov
in
pushf
iret
inc
mov
in
mov
mov
xor
push
dec
in
dec
adc
orl
push
pop
or
xlat
sub
xor
push
out
mov
sub
cmp
loopne
in
cmp
les
xchg
sbb
add
add
call
push
mov
pop
mov
push
mov
mov
ret
loopne
repnz
aad
insl
repz
shlb
push
xchg
mov
orb
xchg
inc
cs
mov
lea
inc
lock
xorl
out
lods
jecxz
repz
cs
ret
mov
scas
or
nop
inc
jae
movsl
cmp
jge
imull
push
pop
nop
mov
cmp
pop
pop
cmp
inc
loopne
adc
pop
in
add
scas
adc
mov
std
cmpsl
mov
cmp
cld
inc
mov
rcrb
push
cs
add
ss
insl
aam
popf
daa
jbe
adc
iret
mov
shrb
cmp
push
adc
data16
in
imulb
xchg
sbb
repz
movsb
add
jmp
push
cmp
sahf
aad
sub
ja,pt
mov
aad
push
inc
shl
insl
dec
sti
das
or
inc
dec
sub
mov
xchg
outsl
test
dec
popf
enter
in
sbb
mov
adc
lret
sbb
pop
shrb
xor
or
je
dec
sbb
into
add
jns
and
dec
in
pushf
leave
sub
inc
inc
dec
dec
in
movsb
bound
movsb
xlat
fdiv
or
push
fcom
mov
es
dec
sub
cmc
ss
bswap
mov
call
push
out
fmull
aas
or
cmpsl
cmp
test
pusha
mov
adc
test
add
mov
pop
mov
cmp
rcrl
aas
xchg
or
rcrb
add
lret
repnz
test
es
nop
xchg
cmpsl
mov
les
lock
push
mov
int
scas
test
mov
lcall
les
int
xchg
into
mov
addr16
into
sub
int3
pop
xor
xchg
daa
mov
pop
cmp
or
inc
mov
bound
ret
jns
call
bnd
lret
xchg
and
pop
jp
push
xor
push
loop
jg
mov
stos
test
jge
cmp
add
mov
mov
inc
jbe
inc
lahf
push
push
or
dec
loope
add
pop
clc
cmpsl
lahf
ljmp
fsts
push
int3
imul
mov
lret
icebp
jo
imul
pop
pop
call
mov
inc
or
push
inc
imull
sti
imul
sbb
mov
push
adc
dec
outsb
inc
aam
jmp
xor
repz
xor
push
inc
mov
pop
pop
inc
fucomp
scas
testl
fsts
add
out
or
popf
push
bound
cmp
pop
dec
add
pop
loopne
jo
lock
cmp
leave
testl
push
inc
push
fcomi
mov
inc
and
mov
or
sub
or
sahf
movsb
cmpsl
or
in
push
inc
jge
mov
adc
jo
inc
jne
repnz
pushf
in
push
call
test
dec
repz
dec
fwait
cs
lahf
int
push
push
ret
cld
popa
or
ja
movsl
inc
fnop
jl
lcall
rcl
clc
add
mov
xor
dec
movsb
movsb
std
test
popf
inc
cmpb
cmp
lahf
sub
cmp
mov
cwtl
xor
cmp
inc
test
pop
pop
push
roll
xlat
scas
insl
cmpsl
cmp
jb
and
xchg
lock
dec
push
popf
cmpsb
pop
xor
push
rcrl
scas
inc
adc
icebp
cmp
dec
inc
aad
lods
rcrb
push
iret
dec
cmpsl
mov
lret
addl
pop
sbb
sub
jb
jne
xor
jo
lods
int
dec
cs
movb
push
aas
push
sti
add
sti
mov
and
sbb
repnz
cltd
popa
adc
inc
adc
cmpsl
mov
xor
testb
nop
jb
out
mov
fisttpl
popa
lock
and
imul
out
mov
test
or
adc
xchg
mov
mov
jl
inc
pop
cmpsl
loopne
rcll
cld
cmp
xchg
sub
inc
call
or
call
jmp
loop
sbb
inc
cmp
rcrl
jg
popa
mov
mov
bound
push
out
xchg
mov
jp
pushf
mov
mov
fwait
xchg
cmp
hlt
cmp
push
jecxz
pop
rclb
call
dec
cmp
repz
xor
fimull
push
cmpsl
adc
pop
fmuls
mov
add
mov
pop
stc
push
jne
ss
lcall
jmp
dec
cmp
jmp
mov
jecxz
push
inc
jno
lock
add
popa
scas
insb
cmp
pushf
out
hlt
cli
leave
sbbl
dec
call
mov
cmc
cmp
cmp
popa
or
popf
add
pop
mov
jbe
rcrl
ss
push
jae
sahf
cmpsl
std
jmp
int3
pushf
les
fildll
insl
xor
sbb
sub
pop
push
adc
nop
clc
bound
push
dec
sbb
jb
adc
repz
sub
outsb
sbb
shrl
adc
inc
sub
push
test
or
dec
ret
scas
add
je
adc
xor
or
fldt
mov
dec
sahf
xchg
outsl
notl
mov
adc
sbb
popl
in
popa
test
mov
sahf
cmovb
inc
dec
out
aas
mov
std
sub
icebp
mov
push
and
lahf
cs
dec
out
push
lods
add
jge
cmpsl
inc
lahf
insl
into
aad
insb
cld
or
cmp
xor
or
fs
int
pusha
push
imul
cmc
repnz
pop
cmp
sbb
mov
sahf
push
cmpsb
xchg
sti
dec
pop
jne
pop
adc
jmp
lods
jo
push
es
imul
test
mov
or
loope
test
inc
lock
jge
mov
sahf
push
pop
mov
cmpsl
cli
mov
bound
outsl
adc
loopne
push
mov
xchg
xor
imull
push
inc
lods
outsl
dec
mov
test
addb
insb
mov
xchg
push
shrl
cld
push
mov
mov
pop
jbe
hlt
dec
clc
movsl
fstps
dec
or
add
xor
std
lock
mov
inc
fldenv
mov
test
or
sbb
add
lret
mov
das
je
imul
outsl
and
das
into
jb
jg
icebp
lock
xchg
icebp
jne
cld
mov
xchg
rcr
sahf
inc
jo
repnz
add
xchg
pushf
and
adc
pop
xorl
mov
cmp
push
mov
dec
mov
nop
mov
and
fsubrl
adc
lock
hlt
leave
push
inc
jl
shll
loop
into
add
sub
mov
shlb
les
sahf
and
adc
xchg
addl
push
pop
iret
adc
imul
or
or
fmuls
xchg
jecxz
out
add
cld
aam
andl
and
xlat
div
mov
mov
cmp
lret
adc
push
ja
add
scas
decl
int
mov
pop
add
lcall
or
ret
insl
xchg
push
adc
add
xor
push
in
inc
adc
in
leave
pop
dec
idivl
and
call
add
bound
adc
inc
dec
inc
das
pop
pop
ss
jo
repz
sbb
or
cmp
stos
test
mov
pushf
dec
lahf
pop
add
dec
inc
fcmove
out
jl
mov
cmp
scas
dec
scas
in
mov
inc
xchg
jecxz
inc
aaa
jg
pop
dec
out
lds
inc
cvtpi2ps
in
movsl
rolb
out
movsb
out
ficoml
push
and
int3
inc
lcall
jl
fxch
loop
xchg
sbb
mov
xchg
jbe
es
cmp
std
xlat
and
leave
enter
push
add
add
fisubs
sahf
jp
daa
and
jp
xchg
fisubl
sahf
sub
rcrl
mov
pusha
jmp
mov
or
lock
stc
inc
mov
jge,pt
mov
rclb
pop
cs
test
aaa
cmpsl
movsb
rcll
call
push
sub
xorl
cmp
adc
stc
sahf
dec
mov
out
xchg
mov
orl
inc
divb
and
cmp
sbb
jg
test
mov
xor
or
fisubrs
sub
xchg
cwtl
aad
hlt
mov
xchg
mov
jae
popf
repnz
jge
and
dec
aas
fcmovbe
daa
sbb
mov
outsb
sbb
fldt
push
pop
les
cmpsb
and
cmp
cmpsb
lea
mov
push
sub
mov
xchg
mov
mov
push
pop
in
orl
bound
scas
nop
sahf
test
jl
imul
outsl
mov
into
mov
xor
popf
mov
push
push
cltd
insl
inc
cmp
pop
call
xorb
fldcw
stos
ljmp
and
gs
fsubp
or
cwtl
sub
call
xor
mov
sti
and
cmp
inc
or
out
xlat
lcall
add
fdivrl
lods
mulps
push
data16
nop
fcmovnb
lcall
ja
popa
mov
aam
adc
inc
inc
lahf
in
inc
test
fcmovb
push
cmpsb
dec
xor
sarl
mov
push
pop
das
aas
push
push
fiadds
mov
add
jae
mov
pop
sti
lds
out
add
fadds
or
sbb
int
adc
pop
out
or
push
sub
jge
mov
cmp
pusha
pop
lahf
sbb
fdivrs
mov
rolb
sbb
fadd
cmp
lahf
lds
decb
adc
and
shrl
dec
out
jb
adc
push
xorl
fsubl
scas
dec
fimull
cmp
ret
outsl
inc
stos
push
inc
in
pop
data16
pop
or
daa
lahf
pusha
xor
leave
fcomi
cmp
sbb
mov
lahf
inc
loopne,pn
iret
dec
out
jo
cmc
mov
cmp
mov
in
fwait
jne
jo
dec
xchg
xor
dec
dec
and
pop
cmp
or
lock
mov
f2xm1
fldenv
mov
insl
adc
add
stos
mov
cmp
movsl
imul
xchg
push
lods
sbb
out
int
pop
jb
cmp
xor
pop
mov
add
repz
xor
in
enter
dec
cmp
adc
inc
adc
mov
push
es
add
push
add
add
loopne
mov
push
int3
pop
andl
ja
and
dec
mov
or
jecxz
dec
data16
jle
pusha
lret
int3
pop
arpl
jb
cmc
xchg
gs
push
inc
adc
jl
jb
lds
jle
or
and
sbb
jmp
ret
xor
sbb
push
popf
insb
adc
decl
xchg
jnp
push
orb
add
loop
int
stos
cmp
or
cmpsl
lods
sbb
scas
add
pop
or
mov
xor
cs
sbb
or
dec
push
mov
shl
fcoms
scas
and
pop
cmp
mov
out
outsl
in
and
mov
cmpsl
or
mov
shr
jge
hlt
jge
stc
fs
orb
fwait
adc
int
pop
or
dec
push
fcmovu
outsb
mov
into
nop
adc
movsb
dec
bnd
pop
mov
push
dec
out
jge
mov
add
xlat
xor
lods
pop
rcll
push
rorb
and
imul
add
insb
xlat
dec
xchg
les
imul
and
testl
addr16
xchg
mov
adc
outsl
jle
inc
lret
pop
icebp
adcl
sub
leave
and
rcrl
inc
push
aad
in
xchg
ss
mov
addr16
mov
stc
xor
mov
push
mov
pop
xchg
gs
mov
fsubp
push
or
cmp
and
daa
add
dec
popa
mov
pop
xchg
inc
xchg
cmp
and
jns
cmpsl
sbb
jle
popf
cwtl
mov
pop
push
pop
push
movsb
je
insb
mov
lds
sbb
and
pop
inc
xor
pop
cli
cmpsl
mov
movsb
out
xchg
pop
imul
push
sub
and
rcrl
xlat
adc
dec
add
mov
dec
js
cmp
test
punpcklwd
inc
mull
movsl
push
cmp
inc
pop
dec
int3
mov
cld
arpl
mov
shl
je
roll
imul
mov
push
jbe
xchg
arpl
popf
cld
ret
dec
arpl
dec
push
xor
outsb
cld
mov
pop
xchg
mov
xor
ret
cmp
movsl
mov
das
cmp
shr
fistpl
push
mov
fists
je
xlat
jge
inc
dec
xchg
into
sbb
inc
ljmp
dec
pushf
outsl
dec
aad
fildll
addb
cltd
or
loope
pop
rclb
mov
inc
mov
jl
orl
divl
pop
popf
dec
aaa
cmp
pop
mov
mov
cmc
mov
cmp
add
pop
stos
cmpsb
inc
inc
lods
inc
inc
jno
push
mov
repz
dec
xorb
dec
adc
inc
arpl
sbb
sbbb
mov
movsl
lods
mov
and
test
out
iret
jg
push
mov
push
inc
enter
pop
test
insb
pop
popa
loop
inc
inc
out
sbb
add
push
or
lea
sub
mov
aas
and
rcr
xchg
into
ds
insl
addr16
stc
in
loope
ficoml
lahf
mul
loop
int
call
fwait
dec
fucomi
popl
push
push
test
fmuls
xchg
pusha
xchg
leave
cmp
sahf
mov
push
fcomps
and
imul
ljmp
icebp
outsb
int
inc
fsubrp
ja
xor
inc
gs
stos
add
sub
inc
and
mov
clc
xchg
jmp
mov
adc
int3
lcall
adc
and
xor
stos
xchg
xchg
orl
outsb
xor
and
ss
cmpsl
xor
pusha
jo
adc
cwtl
sub
jns
ds
test
mov
das
inc
adc
ror
fwait
loope
pop
and
xor
mov
dec
adc
mov
or
dec
or
enter
mov
ret
int
not
pop
xchg
icebp
fldcw
cmp
fisubrl
scas
std
mov
jnp
xchg
push
mov
dec
rorb
sbb
xchg
cmpsl
ret
xor
test
add
cmp
dec
cld
mov
mov
mov
or
sub
lcall
bound
inc
cltd
xchg
push
inc
and
dec
cmp
pop
inc
loop
rorl
loop
pop
mov
inc
loopne
mov
in
lret
jmp
push
loopne
push
dec
mov
testl
pop
dec
es
mov
mov
imul
ret
and
test
adc
mov
inc
popf
ja
loop
xchg
adc
aaa
out
aaa
sbb
adc
xchg
fildl
out
push
adc
jecxz
int3
les
or
test
pop
pop
test
dec
outsb
inc
popa
mov
push
sub
lcall
inc
outsl
inc
pop
mov
outsl
aad
aas
ljmp
shlb
xchg
imul
aas
cmpsl
mov
mov
pop
cld
dec
insl
insb
push
xlat
cmpsl
cld
push
mov
dec
cmc
lods
inc
add
push
mov
jae
ficomps
ficoml
or
cmp
and
push
push
leave
fildll
call
pop
test
lret
mov
lds
cwtl
sub
push
les
and
push
mov
iret
sarb
inc
jge
or
pop
rolb
aas
lret
add
or
and
andb
and
mov
adc
rcr
test
ret
mov
lret
xchg
inc
mov
mov
adc
pop
daa
push
jl
ds
iret
in
aaa
mov
mov
xchg
adc
scas
lea
push
mov
cltd
fisttpl
push
das
ret
stos
xor
sti
adc
adc
mov
pop
fiaddl
add
xchg
testl
or
divb
fwait
sub
fs
data16
mov
and
aas
gs
sbb
mov
xchg
imul
xlat
inc
cs
pop
sbb
ja
dec
xchg
stc
inc
mov
pusha
lahf
mov
pop
cli
aam
jl
pop
insb
xchg
rorl
call
mov
push
xor
xlat
mov
out
cld
and
mov
inc
sub
push
leave
and
cmpsb
cmp
jle,pn
hlt
sub
cmp
outsl
fdivrl
xor
push
mov
loope
int3
hlt
sub
sbb
push
pop
adc
inc
jg
inc
aad
add
jmp
fcmove
adc
out
dec
aaa
cltd
loope
inc
jg
out
out
add
stos
iret
pop
imul
inc
pop
mov
repnz
sub
push
fcomi
mov
fwait
scas
popf
das
and
jmp
in
fidivs
xchg
inc
scas
sti
fwait
out
popl
push
fsubs
push
ret
cmpsb
fdivrl
jno
out
push
test
orb
or
pop
jbe
mov
push
pop
insb
mov
jecxz
xor
aad
jo
ja
xlat
push
adc
inc
ljmp
popf
sbb
std
add
jecxz
adc
leave
push
cmp
incl
push
push
sahf
xor
mov
in
dec
jmp
xchg
or
sbb
push
and
sarl
lock
dec
ds
pop
testl
in
jmp
cmp
and
or
clc
jecxz
loope
loopne
pop
fcmovnb
sub
xor
sub
pop
dec
jae
lret
fsubrl
das
popa
ss
sarl
js
fildll
pop
lock
lea
in
out
in
push
int3
test
cmpsl
rcl
jbe
xor
pop
cmpsb
push
pop
mov
and
bndstx
aas
push
enter
ss
fst
dec
dec
and
outsb
mov
jne
push
aam
sbb
xchg
outsb
pop
pop
mov
dec
jge
cltd
popf
scas
sbb
xor
pushf
push
inc
sub
jmp
lds
test
sbb
inc
in
int
jns
mov
out
mov
add
pop
xor
xor
sub
push
sahf
cltd
inc
jne
int
xchg
cmp
mov
fsubrs
mov
icebp
pop
sbb
repnz
es
nop
jbe
icebp
mov
mov
pushf
xchg
push
mov
scas
adc
cli
add
xchg
push
xchg
incl
inc
mov
cmc
mov
sahf
iret
ja
and
and
mov
test
dec
sbb
mov
sbb
int3
int
inc
pop
cltd
sarb
sahf
and
daa
rcr
xor
mov
ss
pop
sbb
xchg
add
loop
inc
lahf
fwait
into
and
dec
pop
call
mov
lret
in
mov
sbb
inc
fwait
aaa
or
or
mov
mov
movsb
insl
mov
cwtl
pop
mov
sbbb
into
sub
push
mov
mov
adc
ja
xor
pop
aaa
cltd
lahf
dec
pop
or
ds
pop
cmp
jo
icebp
outsb
jmp
outsb
mov
pop
fistpl
fs
jg
mov
xor
mov
mov
mov
loop
and
mov
dec
xor
mov
mov
xlat
shll
dec
push
inc
orb
mov
in
or
pop
cli
rorl
or
mov
cmp
cwtl
xchg
pop
les
cmp
sbb
push
cmp
adcb
into
and
xchg
into
sbb
xchg
jno
push
aam
push
sub
jo
lret
mov
sar
rcr
cmpsl
imul
mov
repnz
nop
test
jns
mov
into
mov
sarl
loop
jne
pop
adc
mov
cmp
xor
hlt
jb
mov
aad
push
test
inc
js
repnz
jne
sub
in
mulb
xor
es
mov
inc
loopne
mov
mov
adc
fistpll
loope
stc
cmp
adc
jecxz
cmc
mov
sub
cmp
mov
push
addr16
sbbl
jns
push
and
cmp
mov
mov
mov
sahf
xor
xchg
call
mov
adc
lea
cmp
shrl
sub
cmpsl
lds
mov
sahf
rolb
mov
fwait
jmp
repz
xchg
popa
sub
fs
je
adc
sbb
xor
idivl
push
nop
mov
cmpsb
in
daa
out
and
fisubrl
cmp
sahf
pop
xor
sbb
test
and
or
cs
out
cmpsl
jmp
inc
sbb
push
es
inc
mov
push
pop
lcall
jb
add
enter
fisttpll
out
sub
rcrb
mov
addl
cs
test
xchg
cmp
iret
insb
and
jg
inc
add
mov
pop
bound
push
lods
mov
rorb
xchg
ljmp
lcall
xor
jae
and
test
cmp
mov
cmp
cmp
movsl
call
pop
ret
jg
jmp
dec
xchg
dec
out
rclb
in
scas
jmp
sti
aam
lea
pusha
or
dec
movd
adc
cmp
dec
insb
lahf
pop
cmpsb
leave
cmp
pop
les
push
inc
or
xor
jb
insl
mov
cmp
mov
dec
insl
pop
pushf
dec
xchg
iret
xchg
adc
sub
mov
dec
or
mov
add
sbbb
xor
push
xchg
xor
sbb
adc
xchg
push
push
popf
pop
loop
xchg
mov
arpl
jb
pop
and
imul
repz
pop
mov
pop
pop
adc
mov
xor
in
aad
popa
cwtl
pusha
or
mul
cs
xchg
cmpsb
lock
jge
inc
add
pusha
mov
fcoml
pop
mov
sbbl
xchg
pop
jmp
xchg
lret
popa
cmpsb
repnz
pop
mov
outsb
pop
aas
fnstenv
and
in
cmpb
dec
xchg
mov
sti
sub
add
insl
and
add
aaa
fsts
sbb
xor
push
shl
aad
shl
shr
mov
inc
outsb
jnp,pn
xor
repz
push
cmc
scas
dec
mov
mov
xor
test
out
sub
xor
inc
cli
lds
push
scas
outsb
or
dec
cmpsl
cltd
xchg
fwait
adc
hlt
sahf
push
setne
test
je
out
cmp
nop
inc
out
stos
mov
testl
fwait
dec
inc
enter
cmp
inc
push
sbb
xchg
into
mov
xor
cmp
arpl
mov
es
lock
testl
addr16
jg
imul
inc
pop
cmp
mov
inc
bound
xchg
adc
add
inc
rcrl
loope
icebp
sub
jmp
jl
xchg
sbb
push
js
cmp
mov
push
xchg
call
add
jmp
roll
in
mov
loope
adc
sub
mov
dec
mov
into
loopne
mov
pop
cmpsb
inc
in
push
push
sbb
push
or
lret
test
adc
pop
mov
xor
adc
mov
addr16
inc
cmpsb
sahf
dec
sbb
cli
in
out
add
loope
add
mov
adc
xchg
push
lods
push
inc
xchg
xchg
mov
push
mov
fmull
aaa
inc
inc
pushl
cmpsl
or
test
pusha
pop
fucomip
fsubrl
sub
xchg
bndldx
test
push
pop
sub
mov
fisttps
push
nop
xchg
mov
cmc
sbb
ljmp
jno
daa
pop
and
or
orb
fimull
push
test
ds
push
inc
stos
mov
sbb
mov
fsub
lret
or
jnp
xor
mov
adc
pop
mov
iret
cmp
push
in
xchg
scas
mov
cltd
push
aad
dec
ds
jns
adc
lcall
lret
cltd
js
subb
inc
out
xchg
arpl
pop
outsl
cmc
into
jns
push
movsl
ret
out
pop
aas
movsl
push
and
es
or
stos
lea
dec
in
ret
scas
dec
xor
jge
repnz
lock
cmp
test
xlat
dec
sbb
push
pop
mov
pushf
scas
fdivr
dec
pop
sub
xchg
nop
repnz
ret
inc
and
xchg
arpl
cmp
jle
scas
loopne
int3
call
popa
std
pop
test
jo
jo
ljmp
mov
push
std
cs
xchg
pop
xchg
aam
enter
test
ja
mov
out
mov
test
stos
call
xor
das
out
add
cmove
adc
jge
aas
fstpt
dec
mov
pop
mov
jnp
mov
ss
jmp
xchg
dec
xlat
loopne
fwait
test
arpl
mov
or
icebp
xchg
cmp
xor
rcl
cs
pushf
or
jmpw
fcmovnbe
cmpsl
mov
inc
lock
fimull
mov
out
inc
aam
hlt
pop
mov
mov
xor
add
adc
jo
pop
and
and
inc
push
mov
inc
adc
int
imul
ficomps
mov
xchg
mov
mov
add
iret
push
mov
test
scas
dec
int3
mov
mov
clc
imul
adc
mov
jno
andl
out
movsb
pop
mov
mov
pushf
mov
push
lret
ds
out
loop
add
insl
loopne
out
es
cmp
mov
nop
je
cmp
aas
jge
cmp
jno
sub
addr16
cmpsl
out
fwait
add
loop
gs
sbb
push
mov
les
pusha
push
pop
in
add
movsb
jp
or
push
iret
add
dec
mov
inc
scas
imul
xchg
in
daa
xor
test
mov
test
sbb
adc
mov
out
dec
lods
out
cmpsb
outsl
rol
or
sub
out
pop
mov
mov
mov
mov
and
into
cwtl
nop
nop
xor
aas
ret
adc
push
ror
into
jb
inc
lock
loopne
cmp
cmp
stos
lret
add
ss
lods
sahf
mov
out
xlat
hlt
jge
imul
in
sbb
ret
nop
outsb
fisubrl
and
andl
or
aam
mov
ja
adc
fsubrs
inc
out
pop
stos
xchg
movsb
mov
sub
pushf
push
stos
xchg
outsb
sbb
ja
push
mov
cmpsb
and
aam
nop
in
and
nop
mov
push
mov
push
lods
ljmp
pop
dec
rcrl
inc
push
lods
aad
js
ljmp
dec
inc
jnp
popl
call
and
jno
xor
or
movsb
cmp
call
lcall
sub
mov
xchg
mov
ds
jle
cmp
jle
jnp
adcl
hlt
cld
ficomps
mov
pop
push
dec
rcll
inc
outsl
stos
mov
or
mov
xchg
mov
loope
mov
pop
dec
data16
push
icebp
loop
jge
lods
call
iret
aad
sbb
jnp
jne
cs
mov
dec
fs
stos
jno
mov
mov
dec
cli
adc
test
sub
das
imul
std
adc
in
dec
push
outsb
jno
push
push
mov
inc
dec
and
mov
sub
mov
ljmp
jno
sub
mov
pop
inc
and
sub
add
mov
sbb
push
pop
push
pop
dec
sub
mulb
lahf
ja
xchg
sub
int3
jle
inc
and
mov
cs
scas
add
aas
into
lahf
outsb
lcall
pop
ljmp
into
push
sub
mov
cltd
js
les
pop
pop
lock
loopne
push
mov
ficompl
iret
dec
dec
pop
xchg
mov
ss
mov
pop
sbb
gs
cmp
inc
loopne
sub
xchg
add
or
cmp
inc
adc
xchg
pop
mov
mul
sbb
lea
add
outsl
mov
sub
in
ljmp
icebp
out
push
add
jae
pusha
adc
sbb
sti
inc
aaa
imul
in
mov
cmp
clc
outsl
je
adcl
adc
push
fs
lds
cwtl
xor
push
ror
into
ds
inc
stos
xor
pusha
inc
mov
jns
repnz
out
dec
push
cmpsb
mov
cmp
out
loopne
jb
cmp
or
inc
pop
in
lret
xchg
pop
push
andl
lods
mov
lcall
and
jb
imulb
sbb
pop
cmpsb
pop
icebp
push
jo
sti
ja
add
sti
cmp
sbb
adc
dec
dec
sbb
icebp
ja
cmp
inc
cmp
dec
lret
sbb
sub
jns
push
pop
dec
or
lret
inc
dec
pop
mov
pop
outsb
xchg
ret
dec
pop
ljmp
out
out
jge
cmp
popa
jecxz
or
inc
ljmp
and
mov
push
pusha
jecxz
lock
or
int
sbb
insb
push
dec
repz
mov
pop
jge
ja
rolb
pop
push
xlat
mov
pop
mov
andnps
cmp
or
cmp
inc
das
lods
mov
fisttpll
es
mov
xchg
loope
popf
adc
pop
test
faddl
push
imul
jl
fsubl
inc
loope
jb
xchg
pop
lods
stos
jecxz
fldenv
lret
scas
push
insb
outsb
popf
mov
enter
push
int
jb
aad
and
addr16
lret
sub
pop
mov
inc
cmpsb
rcrl
cmp
add
mov
mov
enter
sbbl
pop
sub
or
iret
into
jle
xor
sbb
insb
enter
fwait
sub
ffreep
in
lds
lods
push
mov
cmp
std
decb
cli
cltd
and
fnstsw
adc
loopne
shlb
xchg
pop
add
jmp
pop
daa
loope
inc
mov
dec
jmp
insb
outsl
mov
add
imul
xchg
loopne
push
sti
cmpsl
mov
xchg
ret
inc
cmp
inc
lret
fiaddl
pop
enter
cmp
out
mov
fidivl
insb
lods
push
pop
add
cmc
adc
decb
xchg
aam
inc
jg
pop
inc
popa
ffree
gs
stos
sub
lods
ret
cmp
ds
repz
fadd
add
xchg
ret
das
jecxz
xor
mov
push
xchg
iret
fwait
popa
test
mov
inc
xor
out
je
cmp
pop
test
pushf
pop
popa
sbb
out
jmp
fs
pop
pop
xchg
cmp
int3
fsubrs
add
cli
les
jmp
push
roll
adc
jecxz
gs
inc
into
and
dec
or
ja
pushf
cmpl
sub
fxch
or
push
xchg
sbb
and
leave
adc
out
jnp
adc
es
or
cmp
dec
mov
xchg
cld
mov
dec
push
out
pop
xor
cmp
inc
jb
bound
or
adc
in
out
mov
or
js
push
adc
inc
fs
sbb
jecxz
or
insl
pop
lods
aam
mov
or
repnz
or
jmp
lahf
xor
jg
sub
daa
inc
mov
inc
push
xchg
dec
dec
dec
ret
jecxz
pop
cmpsb
leave
and
mov
stc
sti
sbb
loopne
daa
jo
movsb
sbb
dec
mov
xchg
sqrtps
loop
fidivs
test
cmp
mov
aad
test
sbb
pop
jecxz
adc
pop
mov
push
insb
inc
out
divl
dec
insb
arpl
call
mov
mov
mov
jg
adc
outsl
loop
sub
jae
aad
mov
pop
push
add
filds
imul
cmp
mov
xchg
imul
lahf
ret
es
xlat
es
lods
push
adc
sub
out
faddl
lahf
scas
cli
pop
scas
add
xor
or
lods
inc
or
es
adcl
or
mov
in
into
out
cmp
sahf
xchg
mov
lcall
inc
shl
mov
sub
fwait
inc
push
int
sarb
pop
das
ds
inc
and
jmp
pushf
iret
scas
xchg
aad
cmp
cmp
inc
sub
dec
push
mov
into
add
orb
fisttpll
cmpsl
mov
pop
pop
xchg
cwtl
cltd
adc
insl
lcall
pop
ljmp
pop
testb
daa
pushf
outsb
dec
sbb
mov
ljmp
mov
inc
sbb
cmp
sbb
sti
insb
adc
or
insb
and
in
mov
dec
lret
ror
mov
adc
dec
fisubrl
dec
mov
sbb
sub
inc
dec
xor
pushl
loop
inc
mov
fs
mov
lret
mov
sbb
adc
ljmp
mov
push
xchg
movsb
push
xlat
stos
int
push
mov
popf
ljmp
popf
mov
in
xchg
mov
push
sub
add
lahf
xor
xchg
ret
inc
cltd
fcmovnu
into
push
scas
leave
movsl
push
mov
and
ljmp
inc
dec
bound
lea
subb
pop
sbb
shlb
aad
shll
xlat
add
fs
push
sbb
ret
lods
lahf
xchg
pop
dec
or
or
popf
cmp
add
test
lods
cmc
mov
popf
repz
fdivp
cltd
mov
pushf
lret
sub
int
push
xchg
addps
mov
mov
mov
sub
lret
and
mov
insb
push
push
and
sub
sahf
dec
or
jl
jg
xchg
sub
push
pop
mov
in
sbb
lods
add
loop
sbb
mov
incl
and
jbe
cmp
data16
push
xchg
arpl
xchg
mov
and
ds
out
iret
ror
mov
outsl
out
insl
dec
push
sub
push
fistps
daa
out
push
jmp
lods
cmp
cs
inc
sub
mov
pop
and
cmp
test
cwtl
movsl
push
sub
shl
dec
inc
sbb
pusha
ds
adc
and
gs
xchg
and
pushf
xchg
jmp
loopne
addl
lods
xchg
test
lret
sti
mov
push
inc
lahf
je
pop
push
loope
cltd
mov
mov
mov
xor
mov
subb
pop
mov
sub
jl
aad
dec
push
addl
jae
cmpsl
pop
not
pop
out
sahf
out
shll
inc
push
int3
cmpsb
notb
mov
xor
xchg
rorb
sub
jnp
inc
push
mov
push
mov
call
mov
ret
sbb
mov
push
push
push
push
icebp
ret
inc
in
ljmp
pushf
in
inc
push
ror
and
or
sub
mov
mov
andl
pop
sbb
and
sbb
mov
pop
imul
sbb
and
fldenv
shlb
rcrl
popa
mov
ret
mov
mov
int3
or
icebp
mov
lods
mov
iret
pushf
cmpsb
sbb
daa
sbb
lret
in
hlt
lret
jg
repz
jb
test
mov
cmp
adc
iret
fs
cmp
xor
jns
pop
xchg
push
add
hlt
or
push
lds
popa
mov
mov
rolb
inc
into
xor
push
sahf
xchg
test
xchg
jnp
gs
lahf
push
pop
lcall
sub
fcmove
int
sub
sbb
mov
push
shll
inc
iret
aad
enter
or
inc
pop
sbb
and
addr16
mov
push
dec
push
or
sbb
loop
lods
pop
xchg
jge
jp
sub
mov
cmpsl
mov
sub
xchg
insb
add
cmc
xchg
test
pop
mov
pop
cmp
add
jmp
mov
jge
push
and
shl
out
jo
mov
adc
dec
es
fcoml
push
iret
xchg
xor
lods
lods
outsl
rcrb
pop
int
xchg
pop
dec
sub
test
stos
pop
lret
mov
icebp
push
jbe
push
popf
push
cs
add
fstpl
cmpsb
mov
fldl
xchg
loop
insl
jp
xchg
shrl
mov
pushf
xor
out
add
push
mov
icebp
fiaddl
inc
stos
sbb
push
lds
cwtl
xchg
cmpsb
cmp
and
lea
out
int3
mov
movsl
push
dec
mov
push
dec
inc
daa
in
dec
or
cs
add
ret
push
mov
cmpsb
rcll
int3
push
cmp
aas
pop
push
xor
notl
aas
cmp
dec
add
or
imul
imul
fmuls
xor
out
sar
xchg
or
adc
add
mov
test
mov
adc
das
xlat
dec
sub
movmskps
xchg
loopne
mov
pop
movsl
lock
jne
xchg
jmp
popa
jecxz
std
dec
out
loop
mov
stc
arpl
jno
adc
lret
jp
mov
xchg
je
xchg
or
or
sti
and
pop
hlt
fcmovnu
cmp
push
or
cli
xor
dec
ss
out
fs
ficomps
faddl
rol
imul
pushf
push
or
mov
ss
arpl
sub
cwtl
cltd
sbb
in
mov
in
jmp
inc
or
mov
push
inc
or
mov
push
mov
push
loopne
fwait
jmp
cmpsl
in
int3
mov
or
xchg
sbb
arpl
and
cmp
lock
js
arpl
cmp
iret
push
mov
aaa
mov
mov
dec
nop
mov
xor
icebp
fstl
jg
insl
lods
pop
adc
pop
xchg
pop
pop
cs
adc
adc
xchg
sbb
push
movsb
int
inc
mov
dec
ljmp
mov
into
popa
and
push
lock
xor
loopne
sbb
add
push
lret
cltd
lea
scas
lods
test
mov
adc
les
movsb
int3
subb
ret
lret
and
out
xor
push
xor
int
insb
dec
adc
repz
cmp
out
sub
ljmp
mov
adc
or
insb
xchg
mov
mov
ljmp
cs
jmp
ficomps
dec
testl
fsts
mov
out
sahf
adc
xchg
ljmp
sbb
jg
ljmp
and
sub
testl
dec
rcrb
aad
mov
ret
mov
iret
lret
popa
mov
insl
push
xchg
mov
lcall
mov
adc
add
or
outsl
mov
shlb
shlb
inc
push
sbb
pop
add
int3
test
popa
orps
sub
xor
add
jbe
xchg
sbb
push
mov
sbbl
xchg
nop
call
xor
dec
xor
addr16
cli
popw
sub
int
inc
stc
outsl
loop
shrl
and
pop
mov
and
push
mov
cmp
sub
sub
xchg
test
push
cwtl
jecxz
jl
rorb
outsl
imul
sub
xor
sbb
movsl
adc
pop
mov
xor
ss
pushf
loope
jns
mov
pop
sub
push
test
pop
xlat
push
or
jp
pushl
mov
inc
sbb
mov
lret
sub
inc
add
and
stc
lret
roll
dec
inc
push
ficoml
inc
lock
jno
movsl
cmpsb
fcompl
repnz
push
fistpl
xchg
cmp
or
xor
xor
push
jns
sub
cwtl
push
push
jecxz
shlb
pop
imul
add
pusha
or
enter
mov
out
leave
add
inc
ss
mov
test
push
inc
xchg
push
sub
fmul
inc
inc
cld
push
rclb
shrl
test
out
jo
lret
andl
sti
sbb
inc
mov
dec
sbb
rorl
pop
xor
in
sub
out
adc
outsl
jbe
outsl
decb
sbb
xchg
in
sbb
adc
inc
in
fsubl
sbb
scas
leave
cmp
repnz
not
and
insb
xchg
repz
int3
adc
stc
inc
imul
push
add
jnp
mov
ret
xor
jo
jno
xchg
sub
insb
inc
arpl
stc
test
rcl
sbb
ss
push
pop
imul
mov
fwait
inc
outsb
jle
inc
xor
cmp
inc
mov
mov
leave
lret
lock
movsb
add
out
add
cmp
mov
sub
dec
push
in
mov
push
inc
inc
or
push
or
enter
xchg
jne
shll
or
jo
xchg
adc
push
insb
pop
dec
push
sub
dec
jae
std
push
mov
sbb
cs
jmp
adc
aaa
lret
clc
or
cs
dec
inc
cmp
push
and
enter
jae
es
mov
ror
lret
inc
mov
push
fistps
cmp
lret
dec
out
ljmp
mov
mov
mov
or
pop
les
ret
pop
insl
inc
push
mov
test
dec
and
addl
cmpsb
and
setne
or
dec
jb
mov
dec
repz
jne
cmp
cld
and
or
push
adc
andl
aad
enter
stc
outsb
outsl
test
push
test
aaa
xchg
dec
cmp
sarl
mov
jp
adc
scas
mov
push
and
push
or
lcall
aad
pop
mov
stc
xchg
xor
mov
pop
cmpsl
xor
pop
xchg
fidivrl
and
out
and
inc
jno
mov
sahf
xor
repz
sbb
fidivs
lret
xchg
les
mov
push
mov
sahf
adc
cmpsl
and
orl
xor
data16
and
inc
fsubp
jge
rorb
gs
dec
fs
push
and
sbb
jnp
scas
loop
adc
mov
and
xchg
std
das
pop
xchg
jl
out
add
xor
in
imul
or
pop
push
inc
jmp
push
sbb
outsl
xor
or
cltd
sbb
into
and
push
lea
xor
and
nop
lret
jmp
mov
or
fmulp
imul
push
mov
push
xchg
cs
push
movsb
test
xchg
je
int
lcall
cmp
int3
adc
mov
inc
dec
push
imul
enter
mov
jmp
sub
scas
inc
push
dec
lret
xor
adc
add
movsb
and
and
adc
sbb
adc
mov
xor
cmp
or
roll
adc
test
cmp
data16
pop
xchg
dec
mov
lods
mov
adc
jne
push
fstl
cmp
adc
jge
scas
xchg
mov
add
call
ss
cwtl
push
fiadds
cs
lret
mov
aaa
pop
pushl
out
mull
mov
lods
push
test
fdivrl
lret
xor
fsubs
sub
in
adc
iret
shrl
scas
mov
sub
fs
and
outsl
mov
inc
and
inc
int3
mov
adc
ljmp
jecxz
push
and
push
pop
inc
lea
es
push
bound
les
das
pop
or
test
dec
insb
xchg
and
test
mov
cmp
test
inc
jle
add
pop
sbb
inc
xchg
out
ret
jg
add
lcall
repz
scas
fcomps
notb
lret
out
dec
push
adc
jecxz
in
cmp
push
or
dec
ficoml
clc
pop
outsl
pop
stos
push
movsl
dec
add
enter
cmp
jb
jne
push
jno
push
pop
out
cmc
stc
js
sti
mov
mov
test
push
mov
cs
jns
xchg
fldenv
or
gs
mov
xchg
xor
add
les
and
pushf
mov
mov
and
jne
iret
pop
mov
jno
stos
vpandn
rolb
ss
in
jnp
pop
inc
enter
ds
ss
outsl
push
mull
cmc
ret
les
mov
dec
notl
fistps
ljmp
and
dec
mov
add
or
test
xchg
cmc
lret
outsl
insb
xor
test
insb
push
sub
inc
cmp
pushf
addr16
cmc
js
jecxz
popa
push
loop
inc
es
sbb
sahf
xchg
aam
out
adc
shlb
stc
jle
inc
inc
nop
cmpsb
movsb
xor
sub
mov
mov
xchg
lcall
sbb
scas
mov
push
out
shrl
xor
sub
inc
out
pop
dec
leave
push
inc
repnz
mov
daa
mov
pop
mov
mov
jns
sbb
orl
sahf
xchg
loop
shll
adcb
ja
rol
mov
jnp
sbb
sbb
cmc
push
lret
stos
fsts
mov
add
call
lret
xchg
lods
xchg
mov
hlt
testl
xor
js
pop
cmp
dec
popa
sbb
sbb
pop
out
xchg
push
inc
lock
lret
adc
fnstsw
xchg
mov
into
mov
cmp
test
testl
in
fildl
out
mov
push
hsubps
sub
ror
inc
les
negl
nop
pop
mov
or
xor
frstor
stos
test
jae
rcll
or
test
iret
sarl
or
xor
sbb
inc
push
idivl
popa
cmp
divb
stos
fs
lret
or
sbb
pop
sub
jne
ljmp
jge
add
mov
cmc
ds
jecxz
mov
call
cmp
pop
int3
sub
or
mov
outsb
out
dec
push
inc
repz
or
fsubr
push
or
dec
push
loope
lret
xor
lods
arpl
cmc
sub
js
aad
roll
xchg
pop
jbe
outsl
aad
dec
lods
orb
xor
sbb
lcall
aad
xor
sub
inc
inc
adc
icebp
cs
xlat
mov
sub
sti
arpl
icebp
or
aas
fdiv
pop
jbe
cmpsb
lret
scas
xlat
mov
stc
dec
fnstcw
and
test
or
popf
in
inc
mov
into
adc
add
aaa
sbb
cmp
vpshuflw
inc
pop
adc
ret
mov
test
int
dec
cmpsb
xor
xor
mov
mov
push
adc
in
inc
dec
aad
mov
mov
pop
les
cmp
ss
test
xchg
adc
loopne
add
xor
push
mov
sub
mov
into
sbb
clc
mov
xchg
mov
xchg
enter
in
pusha
aaa
stos
push
fdivrs
loop
add
sbb
and
jo
popa
dec
adc
iret
aas
loop
cld
mov
dec
fsubrl
in
pop
mov
lea
mov
addr16
ds
push
cmp
push
in
pop
jecxz
cmp
pop
ret
or
cmp
fstps
or
rcll
fnstsw
xchg
mov
ljmp
push
fstp
in
and
scas
xchg
mov
xor
bswap
stc
nop
mov
mov
mov
mov
out
push
inc
insl
icebp
xlat
and
imulb
push
jle
mov
or
sbb
push
daa
inc
jo
imul
mov
mov
loopne
and
jmp
leave
test
xchg
aaa
out
mov
mov
xchg
cmp
or
cmp
dec
push
xchg
daa
clc
and
inc
shr
divps
mov
push
clc
and
pushf
cmp
in
add
mov
fsts
fisubrs
sub
in
icebp
pop
rorb
popf
pushf
or
xorb
aas
lret
and
iret
mull
xor
shrb
jg
addb
fistps
mov
mov
lock
in
imul
std
sbb
mov
pop
push
mov
rorl
movsl
or
inc
pop
xchg
jmp
aad
fbstp
in
adc
fistpll
out
daa
int3
leave
scas
mov
dec
mov
xor
or
dec
mov
ficompl
and
mov
adc
arpl
jmp
les
in
pop
dec
mov
repz
jge
lret
fsubrp
adc
dec
icebp
inc
mov
cmp
sarl
or
sti
lds
dec
jg
sub
push
push
inc
lret
mov
cmp
and
mov
scas
mov
mov
add
popf
jo
imul
out
jge
adc
adc
clc
xchg
push
mov
pop
iret
call
mov
or
xor
pushf
mov
jno
push
mov
mov
pop
imul
ss
cmp
jmp
adc
sti
and
dec
aaa
adc
fwait
jo
cltd
fwait
dec
push
bnd
sub
add
cwtl
add
fnsave
adc
mov
push
addr16
ja
push
imul
dec
outsl
sub
add
and
cmp
mov
insb
cmc
lods
arpl
mov
insb
cmp
add
cmp
push
mov
add
adc
sub
mov
fildl
xchg
dec
fsubp
pop
jb
imul
sub
jg
insl
scas
jmp
aaa
push
sub
jmp
push
sub
add
lods
cmp
lret
push
gs
shrb
nop
dec
xor
lret
rorb
and
xor
ss
adcl
cmpsb
jge
daa
adc
nop
cmp
stos
std
adc
out
js
fwait
cs
sti
fisttps
sbb
mov
test
ret
cwtl
pop
push
jl
mov
fs
or
pushf
or
and
push
fcoml
mov
pop
incl
repnz
ret
shlb
mov
mov
clc
xor
in
and
mov
movsb
lods
pop
xor
les
lds
xor
les
rcl
adc
pop
popf
stc
arpl
push
in
dec
xor
or
int
loopne
fstp
dec
jge
imul
jle
lods
push
cwtl
arpl
xchg
in
sbb
out
cs
pushf
mov
in
add
xorb
cmp
push
sub
cmp
ja
stos
dec
mov
cmpsl
sbb
jg
cmp
int3
mov
or
inc
adc
sbb
test
or
rcll
clc
sub
mov
aad
lret
cmp
test
jb
out
mov
out
xor
pop
je
clc
lods
jmp
adc
sub
leave
stos
dec
sub
add
stos
mov
rorb
pop
sub
mov
and
and
pusha
push
ja
mov
cmp
add
mov
xor
xchg
mov
cli
cs
cmp
movsl
gs
add
mov
push
or
mov
xchg
sbb
mov
pop
xor
adc
inc
cmpsl
mov
imul
popf
sbb
xchg
fwait
clc
pop
sbb
xchg
adc
loope
fs
push
mov
test
dec
mov
sub
sbb
scas
mov
in
out
mov
xchg
xchg
ret
sahf
rcrl
fstps
adc
nop
clc
mov
test
repnz
into
neg
and
fcmovb
mov
or
test
divb
insl
sub
aas
and
pop
mov
xor
dec
adc
add
stos
jmp
gs
rorb
out
mov
or
cld
sub
add
push
cld
into
jl
ds
pop
jge
nop
sbb
cmpsb
stos
aam
fsubr
add
daa
dec
xor
pushf
test
and
outsl
fwait
pop
cmp
inc
and
ret
or
test
pop
xor
mov
test
shrb
or
cmpsl
stc
push
mov
sub
jecxz
adc
gs
fisubrs
sub
je
jmp
adc
leave
loope
imul
sbb
and
dec
or
or
pusha
push
jecxz
or
jmp
scas
mov
mov
stos
movsb
mov
out
mov
lret
sbb
inc
in
sbbb
push
nop
test
pop
outsl
push
inc
inc
lock
sbb
mov
add
ds
sub
xchg
leave
lock
mov
inc
gs
and
dec
divl
pop
ds
xor
mov
push
fcoml
pop
jnp
or
rclb
push
mov
cmp
add
mov
pop
out
sbb
pop
push
xchg
inc
sti
adc
xchg
shrb
lahf
insb
jecxz
add
pop
ss
fiadds
xlat
sbb
pop
scas
mov
stos
repnz
pop
lock
and
enter
in
sub
mov
cmp
loope
or
ljmp
pop
test
mov
push
cmp
sbb
and
leave
loopne
nop
and
fidivrl
pop
gs
push
mov
repnz
stos
pop
jo
fstpt
mov
flds
add
sub
push
std
xchg
flds
sub
xchg
xchg
adc
xchg
inc
fsubl
adc
sub
test
in
add
cmp
sbb
mov
out
jle
je
cmpsb
and
and
lahf
xlat
add
loopne
idivl
mov
mov
push
inc
lcall
inc
xchg
dec
adc
push
movsb
adc
sub
sbb
test
dec
lahf
adc
xchg
pop
dec
xor
xchg
insb
cmp
les
adc
cs
vmovups
adc
adc
xlat
imul
pop
or
mov
xchg
imul
dec
cmp
lahf
adc
cmp
and
xor
dec
push
les
loopne
adc
dec
in
adc
pop
cwtl
scas
aam
out
jo
ret
mov
andb
ljmp
xchg
or
loope
cwtl
jns
xchg
inc
or
int
cmp
xchg
mov
mov
addr16
and
push
inc
cli
fisubl
mov
mov
mov
bswap
jge,pt
mov
sub
pop
test
push
xor
push
scas
mov
pop
mov
movsl
or
mov
lcall
push
and
mov
iret
mov
xchg
sbb
dec
daa
popa
popf
stc
scas
pop
jns
test
xlat
or
mov
add
xchg
mov
jno
xchg
mov
sti
cmpsl
mov
hlt
inc
andb
add
les
lods
orl
lods
dec
jo
push
inc
and
test
cmp
jp
stos
pop
and
push
xor
inc
dec
mov
mov
pop
adc
cltd
nop
fs
in
adc
out
rcrl
test
push
add
mov
adc
jle
lcall
inc
adc
sub
ljmp
mov
loopne
and
cld
jle
ror
add
fldt
pop
loop
adcl
add
jbe
adc
or
dec
incl
cmp
rorl
sub
popf
cmp
test
iret
sub
and
repnz
cmc
sahf
mov
pusha
push
mov
mov
xchg
inc
sbb
inc
mov
push
jp
mov
maskmovq
jo
mov
repz
cmpsl
rcrb
ljmp
sbb
sbb
iret
cli
cmp
mulb
xchg
cs
lea
outsb
adc
in
popf
xor
mov
mov
dec
jl
sub
mov
add
add
and
or
jl
push
mov
jae
inc
fldln2
dec
or
and
loope
push
call
inc
stc
test
cli
push
xor
cmc
mov
rcrl
out
jnp
mov
mov
fildll
stos
mov
lock
and
xchg
fidivl
xor
xchg
sub
mov
dec
push
sbb
and
push
mov
xor
insb
xor
jnp
fsubs
pop
jbe
out
fiaddl
adc
adc
sahf
into
cmp
xor
mov
loope
xchg
test
stos
idivb
in
sbb
xor
cmp
mulb
cltd
in
inc
mov
bound
call
roll
push
add
jle
sar
pop
mov
inc
rcll
xor
in
lock
mov
test
xor
scas
add
sub
lods
fisubs
dec
mov
and
jp
scas
fstpt
pop
sahf
rclb
test
mov
xlat
sti
inc
push
cld
cmp
enter
addr16
dec
into
shlb
daa
iret
hlt
push
out
sarl
pop
mov
pusha
nop
clc
pushf
repnz
dec
repnz
std
es
mov
lret
setb
pusha
jg
sub
in
xor
repnz
sbb
lcall
loopne
push
pop
mov
cld
xor
idiv
xchg
inc
and
mov
xchg
mov
aas
mov
push
fadds
inc
inc
jg
daa
aaa
sub
jge
mov
inc
addb
rolb
lcall
frstor
pop
shlb
push
adc
adc
cld
sub
inc
mov
jns
xor
push
daa
aas
adc
or
daa
vmwrite
or
shrb
into
xchg
xchg
mov
xlat
iret
ficomps
cs
inc
mov
and
fstps
fwait
dec
aam
out
push
sbb
sbb
stos
pop
scas
xchg
mov
imull
sub
add
xor
sbb
xor
imul
xchg
sub
xor
push
mov
jbe
icebp
and
mov
mov
loopne
mov
xchg
enter
mov
je
pop
and
or
xchg
mov
out
xchg
mov
sbbb
lret
data16
fdivrs
mov
incb
movsl
fstpt
ret
or
jmp
fs
nop
mov
adc
jl
shlb
stc
negl
fcmovu
pop
and
popf
lret
cld
shufps
cli
mov
cmp
xchg
jno
hlt
adc
in
test
inc
fstpt
xchg
and
inc
mov
int3
lahf
in
subl
mov
dec
inc
sub
push
js
lret
les
loope
add
data16
inc
sahf
sbb
lahf
scas
aaa
sbb
add
mov
pop
jmp
push
pop
clc
loopne
ljmp
aad
stos
sahf
pop
and
pop
pop
fistps
or
xchg
lret
add
ss
lods
cld
xor
call
stc
cmp
jmp
pop
mov
movb
mov
inc
jne
push
lret
mov
test
insb
mov
xor
push
pop
inc
lret
movsb
in
xchg
lods
push
sbb
and
fwait
ljmp
sub
ja
mov
mov
loope
rorl
xchg
rolb
lea
lods
les
inc
sahf
dec
data16
add
push
dec
enter
lret
aas
mov
jmp
pusha
insl
mov
pop
iret
dec
std
cs
inc
mov
mov
std
sub
dec
xchg
ffree
jl
imul
adc
mov
or
inc
sbbb
cmp
js
les
push
sub
fiaddl
shlb
repnz
mov
dec
cld
mov
dec
dec
movsb
add
cmp
movb
xchg
adc
inc
xchg
cmpl
xor
test
in
lret
fs
mov
shll
out
mov
xor
xchg
jne
inc
xchg
dec
adc
dec
pop
test
call
and
lret
mov
popl
cld
push
push
push
inc
sub
mov
dec
xor
daa
or
push
lcall
pop
ficompl
enter
inc
mov
jge
dec
jg
pop
and
xchg
inc
mov
outsl
cmp
dec
sbb
fs
pop
push
sahf
icebp
pop
mov
fcoms
test
push
test
xor
pop
mov
adc
fisttpll
lret
std
inc
or
push
scas
or
das
pop
mov
les
cmp
xchg
mov
push
fsubs
adc
mov
add
stos
inc
roll
int
pop
loop
mov
cmpb
sub
pop
sub
nop
test
insl
dec
inc
stos
cmpsl
fidivl
arpl
lods
cltd
push
repnz
pop
inc
mov
mov
int3
popf
aad
push
mov
mov
jge
sbb
xor
lock
dec
cmpb
and
xchg
xchg
push
pop
insb
mov
stc
xlat
test
in
xor
mov
inc
scas
andb
push
gs
in
xchg
add
pop
mov
cmpsl
rorl
jbe
and
nop
xor
les
push
mov
sub
sbb
in
lods
outsb
push
push
mov
stc
jl
jle
lock
fnsave
xchg
fiaddl
cmp
sbb
xchg
es
aam
inc
test
in
jmp
mov
xchg
sqrtps
mov
sbb
rcrb
loopne
sbb
add
cmp
jbe
mov
ljmp
test
push
aad
in
sbb
dec
xchg
ret
lret
xchg
loope
or
rclb
xchg
outsb
mov
loope
push
push
nop
add
mov
add
mov
add
insb
sbb
cwtl
adc
outsb
imul
mov
xchg
clc
shrl
sahf
loopne
insl
push
jne
jl
sahf
cs
sbb
cmp
jbe
in
push
xchg
add
lcall
aas
ret
lock
cmpl
pop
pushf
dec
add
mov
cmpsb
push
add
sub
leave
jne
push
movsb
insl
jb
pop
popf
mov
sbb
cs
fs
leave
push
daa
sub
cwtl
mov
sbbl
xor
in
push
or
mov
cld
add
mov
add
repnz
and
sti
dec
cmpsb
sub
pop
xor
sub
js
jge
mov
test
adc
dec
repz
sbb
jae
xorb
fbstp
add
clc
and
fdivl
cmp
sbb
mov
outsl
sub
loop
cmp
lcall
movsb
push
adcl
cmp
mov
xchg
and
cmpsl
xor
inc
cmpsb
movsl
test
jne
push
xchg
xchg
daa
push
inc
notb
sbb
mov
ret
ret
inc
push
fcoms
xchg
shll
cmpsb
pushf
stc
push
xor
add
pop
repnz
adc
repz
cmpsl
cs
jmp
xchg
adc
lods
mov
add
ja
insb
in
fwait
jo
add
icebp
ficompl
jno
push
lret
ja
movsl
xor
push
incl
mov
cs
cmpsl
push
mov
fnstsw
clc
mov
push
daa
sub
dec
sbb
pop
daa
xchg
push
adc
call
scas
dec
out
push
loop
hlt
sub
jns
clc
dec
dec
pop
jb
iret
int
adc
push
cmc
pop
fwait
icebp
mov
cmp
das
dec
cltd
mov
cs
fldl
add
adc
out
add
jle
cs
mov
ror
inc
and
sub
in
movsl
lcall
fidivs
mov
push
pop
call
mov
jp
cltd
rclb
or
shlb
pop
xchg
pop
in
add
dec
mov
push
xchg
or
lahf
iret
cmp
jmp
or
sbb
fsubrl
jmp
cmpsl
cmp
loope
inc
dec
cmpsb
arpl
adc
mov
je
std
sub
jecxz
pop
cmpsl
out
aam
in
shr
mov
or
iret
adc
lret
xor
cwtl
sbb
push
cmp
aad
arpl
fmulp
repnz
leave
xor
cmp
mov
jb
cld
leave
inc
or
sahf
ret
sbb
mov
in
fildll
outsl
add
jp
or
in
iret
imul
dec
cmp
lock
ror
stos
dec
lret
stc
dec
add
mov
mov
mov
arpl
mov
cltd
mov
les
cmpsb
sub
stos
inc
push
out
leave
lret
pop
push
sbb
dec
cmpsl
sub
mov
xor
fnstenv
adc
dec
push
push
mov
iret
sub
cs
ja
out
xor
insl
les
aad
or
xchg
ret
add
rcrl
mov
xor
jno
sbb
mov
xor
or
vcvtsi2sdl
rcrb
mov
ljmp
xor
fdivrl
cmc
xchg
add
xabort
int3
test
push
addr16
std
ljmp
cld
out
fcom
into
fs
cmp
in
out
outsl
repnz
sub
mov
enter
pusha
and
cmp
cs
outsb
pushf
push
scas
loope
fwait
jmp
dec
sbb
ja
mov
mov
jbe
push
mov
fisttpll
out
int3
add
sahf
push
inc
pop
jp
repnz
imul
sarl
sub
push
divb
cld
jb
shl
inc
fsubrp
sub
sbb
cmp
mov
mov
mov
sbb
mov
pop
push
jo
cmpsb
test
mov
adc
dec
pop
mov
pusha
pop
mov
inc
add
movsl
inc
lods
inc
daa
mov
pop
sbbb
inc
jg
inc
mov
leave
jne
cmpsl
jns
mov
loope
pop
xchg
roll
pop
insb
lahf
jmp
and
pushf
in
pop
inc
rcll
sbb
ds
mov
stc
ja
cmp
stos
nop
dec
xlat
test
pop
enter
cmpsl
andl
es
jb
ss
sbb
in
arpl
stos
bound
ror
cmpl
gs
icebp
or
inc
insl
xor
dec
sub
out
ror
jo
rcl
jge
bound
icebp
mov
dec
jge
dec
ss
out
push
push
gs
inc
and
or
das
cmp
mov
jmp
xorl
mov
and
lahf
sbb
jp
lock
and
sti
test
iret
clc
mov
or
cmp
cs
mov
sub
cmpsl
mov
inc
push
loopne
dec
dec
push
scas
xchg
mov
hlt
in
stos
lret
mov
inc
aaa
dec
push
adc
mov
push
jae
push
enter
jecxz
loopne
imul
pop
fdivrl
loop
or
mov
mov
xor
int
negb
and
push
xchg
jecxz
movsb
leave
es
mov
adc
daa
stos
cmp
cmp
push
addr16
push
pop
sbb
ljmp
stos
loopne
js
mov
and
fdivrl
cmp
pusha
test
dec
imul
int
or
lds
ret
orl
les
scas
jmp
cmpsl
pusha
cmp
cmp
xchg
in
dec
gs
decb
xchg
test
push
repnz
push
aas
out
mov
fiaddl
jge
sbb
stos
test
movsb
inc
adc
sahf
xchg
das
stos
sbb
sub
cmpsb
dec
inc
aam
adc
lahf
stos
inc
rclb
imul
sub
mov
jecxz
mov
pop
icebp
orl
aas
mov
imul
jo
and
mov
subl
xchg
add
outsl
mov
std
jae
mov
leave
mov
test
rcll
scas
aas
sub
sbb
mov
call
test
adc
das
jo
add
bound
sbb
inc
cmpb
sahf
mov
sarb
filds
mov
pop
das
adc
xchg
and
mov
imul
mov
mov
loopne
sbb
fstps
push
and
jge
movsl
push
mov
dec
fdivrs
iret
jmp
pop
pop
jns
mov
mov
pop
lock
sahf
std
jl
int
shlb
cld
mov
gs
mov
cmp
sti
pop
push
nop
cmp
ja
cmp
movsl
push
mov
sbb
pop
js
lds
arpl
or
adc
dec
data16
xor
push
pushf
cmpl
xor
clts
sarb
mov
or
cmc
xchg
push
xchg
sub
add
dec
xchg
loop
inc
in
pop
sti
mov
cmp
fwait
scas
push
mov
movsl
adc
inc
xor
push
adc
out
mov
add
xchg
movsb
mov
loop
in
insl
faddl
test
jge
arpl
out
jg
mov
jne
cmc
sbb
std
mov
or
cmp
hlt
mov
pop
pop
shrl
and
add
clc
push
call
dec
mov
lret
mov
aas
mov
pop
inc
or
je
adc
add
gs
push
jp
sbb
cmpsb
or
into
std
out
inc
cmpsl
jae
imull
fmull
into
seta
dec
fdivl
jl
ret
cmpsl
jb
pop
mov
mov
dec
aas
and
sbb
mov
rep
dec
inc
mov
cmc
push
push
pop
xlat
cmpsb
ret
mov
rcr
pop
cmpsl
or
fsubrs
mov
lock
pop
dec
push
hlt
xor
dec
outsb
gs
fidivl
and
jl
lods
icebp
push
repz
pop
sbb
repnz
xor
jnp
dec
add
mov
push
xchg
shll
dec
pop
xchg
lock
inc
mov
fisttpl
mov
mov
jge
out
push
std
aaa
in
push
repz
shlb
jbe
lcall
outsb
sbb
and
fcomi
sbbl
mov
pop
pop
mov
enter
or
out
ljmp
imul
jae
repz
jae
xchg
jo
jge
or
cmpsl
adc
pop
jl
dec
and
movl
mov
push
gs
pushf
push
into
in
aas
subb
jge
jecxz
jno
int
xlat
sbb
sbb
notl
movsl
jns
test
int
xor
jle
je
in
mov
push
mov
cmp
test
dec
in
inc
lea
add
movsl
push
dec
out
int3
imul
push
cmp
adc
aas
push
lret
fldt
xchg
adc
mov
shrb
out
xor
jge
xchg
sub
xlat
sbb
iret
insl
mul
test
or
pop
or
nop
and
adc
push
rolb
or
cmp
xchg
cmp
jb
dec
mov
daa
rcrb
and
aas
pop
sti
rep
pusha
sub
js
lods
cmp
cmp
inc
push
dec
xorl
mov
lea
jae
cmc
dec
pcmpeqb
push
or
jo
in
mov
dec
in
stos
repz
mov
sbb
add
inc
pop
int3
and
popf
push
dec
in
dec
inc
jb
inc
ficomps
mov
mov
addr16
xchg
mov
int
shll
mov
ror
lcall
or
dec
or
mov
outsb
cmp
xchg
xchg
in
stc
rcrl
pop
xchg
stos
bound
cmp
bound
dec
ret
mov
js
pop
dec
xchg
imul
mov
cmp
lock
cmp
dec
mov
mov
jo
xchg
cwtl
xlat
insl
mov
iret
jp
push
fnsave
mov
stos
adc
push
ret
push
in
jmp
mov
adc
cmp
enter
out
dec
sub
test
lea
jg
and
adc
stos
add
in
xor
out
out
sbb
fldl
pop
mov
loopne
or
pop
out
push
push
ss
sub
int
hlt
sbb
lea
fisubrl
adc
dec
loope
js
xor
lods
jp
or
shll
jno
mov
xor
xchg
add
adc
lock
or
or
push
sbb
jae
insb
inc
insl
push
scas
jae
iret
sub
insb
mov
dec
jmp
mov
clc
fninit
mov
xor
sub
cld
push
mov
popf
daa
add
sbb
sub
pushf
in
pop
mov
dec
insb
adc
fcomp
faddl
and
lods
pop
and
and
xchg
andl
cld
inc
insl
jno
jbe
in
mov
mov
or
ss
clc
in
xor
in
testb
mov
es
divl
and
addr16
inc
dec
cmp
or
aas
fisubl
jmp
mov
xchg
arpl
pop
and
stos
mov
cmp
pop
xor
pop
sbb
sbb
fs
mov
aaa
icebp
lds
mov
mov
push
pop
in
xchg
or
add
and
dec
aam
jbe
sbb
jg
push
fmull
shl
inc
pop
movsl
sbb
push
out
jne
pusha
fwait
jge
xchg
jno
rorb
and
stos
pop
mov
adc
add
ss
lods
ret
adc
std
les
cli
mov
add
stos
gs
push
pop
cmp
cmp
pop
lods
mov
or
out
into
push
insl
xchg
scas
fnstsw
adc
xor
in
out
lock
inc
jbe
mov
jl
lea
int3
shl
mov
pop
push
push
pop
push
push
cmpsl
loopne
sub
mov
lcall
ja
xor
cmp
sarl
and
nop
xchg
push
pop
leave
jb
movsl
adc
sub
jnp
add
fistl
aam
decb
and
out
push
fidivs
jne
loopne
les
pushf
pop
jae
inc
dec
pop
dec
jmp
jb
and
add
test
xor
pop
xchg
stos
dec
insb
lret
mov
and
cmp
or
push
mov
sti
addr16
into
clc
mov
sbb
mov
pop
sbb
mov
icebp
mulb
out
xchg
mov
xchg
daa
stos
xchg
mov
push
sbb
stos
iret
cmp
jmp
mov
pop
lods
dec
add
inc
pop
dec
pop
jmp
sub
int3
mov
lock
jp
mov
push
or
xchg
add
dec
ss
cld
test
data16
xor
pop
pop
jbe
jb
mov
into
sti
ficoms
and
jle
sbb
stc
imul
test
data16
and
jge
stos
insl
adc
mov
add
inc
or
stc
fmull
in
xchg
push
or
scas
cs
mov
pushl
sahf
pop
addr16
mov
out
xlat
and
in
mov
insb
or
rcll
jbe
int
roll
push
and
cmp
and
mov
leave
dec
leave
divb
mov
sub
jbe
pop
pushf
dec
insl
popa
cmp
sub
xchg
cmpsb
movsl
je
dec
frstor
sahf
sbb
pop
and
add
xor
fiadds
adc
adc
imul
xor
sti
cs
lahf
sti
and
mov
flds
inc
lcall
jge
fstpl
ds
ja
stos
daa
imul
rolb
fadd
or
push
jnp
adc
push
fcompl
mov
mov
movsl
cmc
sub
push
popa
out
xor
sbb
daa
scas
stc
jl
test
dec
es
add
loopne
stos
ljmp
shr
cs
sarl
popf
nop
adc
and
sbbb
bound
mov
push
xchg
mov
sbb
push
xchg
rcll
or
adc
sahf
cli
xor
cld
mov
mov
mov
mov
outsl
sbb
stos
ficoms
in
fs
mov
hlt
pop
addb
sbb
jp
pop
or
sti
or
imul
popf
mov
aas
int3
mov
leave
pop
insl
pop
ror
push
push
cs
jmp
daa
or
and
aam
add
dec
cmp
imul
rcl
jmp
dec
pop
imul
leave
jecxz
scas
jae
sar
dec
icebp
sti
jo
sbb
xor
int
or
les
jge
cmp
pop
inc
or
jo
pop
inc
ja
mov
ret
adc
insb
add
cmc
xchg
sbb
dec
ret
adc
imul
mov
arpl
repz
or
add
add
sub
pop
jge
jne
add
push
sbb
stos
in
clc
inc
cmp
inc
sahf
fisubrs
jno
dec
sbb
or
jns
xchg
mov
sbb
jbe
xchg
mov
into
aam
cwtl
and
push
and
xor
xchg
jae
repz
push
insb
jo
enter
ror
mov
mov
daa
icebp
inc
xor
mov
into
and
xchg
rcrl
imul
mov
das
sbb
lea
lock
adc
mov
out
pop
sti
jg
cmp
or
inc
test
adcl
rorl
cmp
scas
pop
mov
enter
mov
push
jl
inc
cwtl
push
cltd
std
roll
jl
mov
rcl
rolb
cmc
inc
jb
cmpsl
push
mov
repz
mov
pop
and
pop
jle
sub
imul
mov
jl
lret
cmpsl
mov
push
adc
xchg
adc
dec
mov
lret
fiaddl
pushl
imul
leave
in
jo
shlb
add
lods
xchg
or
lock
jmp
scas
sbb
xor
adc
inc
mov
jnp
mov
push
shl
js
aad
addl
test
sub
into
xor
clc
sbb
pusha
scas
fisubrl
stc
cmp
negl
and
xchg
jp
js
jge
fisubs
mov
ljmp
pop
aaa
and
ret
hlt
subb
xchg
imul
xchg
inc
rorl
ljmp
ja
testl
pop
sti
jp
push
lock
dec
aaa
les
cmpsb
lret
fstp
add
stos
bound
add
xor
pop
xlat
and
sub
insb
add
adc
or
insb
bound
insl
cli
push
insb
jne
push
pop
push
sbb
out
jg
mov
dec
jo
jmp
or
jns
mov
rcr
enter
imul
int3
aad
adc
mov
mov
pop
adc
lcall
shll
stos
out
mov
lahf
pop
sub
call
rcrl
mov
inc
sti
sarb
movsb
in
cltd
outsl
or
and
jns
add
push
lock
mov
fwait
hlt
clc
imul
int3
out
out
mov
push
sub
add
pop
sbb
or
and
notb
mov
aas
rcr
sbb
fisubrs
in
xor
movsl
decl
mov
mov
in
and
or
daa
or
dec
lock
aas
cmpsl
xchg
sbb
mov
or
fdiv
fisubrl
lods
push
inc
ja
not
sbb
jne
xchg
cld
add
xchg
pop
ret
inc
test
xchg
push
pop
mov
aas
cmp
out
inc
into
cmp
fdivp
data16
scas
sbb
dec
cmp
adc
cli
adc
das
add
sahf
xor
mov
sbb
mov
filds
xchg
int3
sbb
ss
cmp
sbb
inc
pop
jo
push
pop
adc
mov
fisubs
sbb
lock
dec
or
xor
repz
aad
sbb
clc
arpl
or
arpl
loope
dec
out
rolb
jl
mov
pop
push
hlt
dec
sbb
stc
rorb
sub
and
ja
push
int3
cwtl
xchg
xchg
push
clc
js
and
lahf
test
xchg
jp
repz
lock
push
aad
es
out
loope
sub
fsubl
cmp
stc
jae
ret
cmp
test
cld
stc
jl
in
dec
fldenv
insl
pop
jae
sbbl
push
shl
cmp
movb
jle
adc
jl
sub
mov
pop
push
enter
pushf
test
int
xchg
xchg
dec
and
mov
and
adc
xor
dec
mov
and
sub
out
cmp
scas
and
daa
lret
mov
imul
jns
cmp
not
or
clc
icebp
or
lret
shlb
repz
or
lock
mov
mov
adc
push
or
or
push
enter
xchg
test
push
mov
jmp
mov
clc
add
push
repz
sub
les
outsl
pop
repnz
rcrb
shl
inc
pusha
enter
clc
adc
cmpsl
lods
cmp
xor
je
rcrl
cli
mov
push
iret
jle
mov
adc
inc
sbb
or
sahf
insb
pop
mov
sub
pop
xor
in
movsb
stos
das
add
mov
push
dec
mov
cmp
mov
out
adc
nop
and
mov
mov
sub
mov
cmc
rcr
mov
push
mov
and
pop
xor
test
jno
xchg
inc
movsl
jno
mov
cmp
xor
sahf
enter
mov
adc
lods
add
into
xor
mov
jo
or
add
je
out
daa
mov
ret
cmc
jnp
mov
std
or
loope
loopne
pop
jns
xor
mov
sbb
ret
or
mov
cwtl
dec
stos
mov
leave
mov
jg
icebp
and
sarl
jg
and
leave
repz
loopne
out
and
jb
loope
mov
cltd
push
pushl
xchg
cmp
es
dec
cmp
jl
adc
rorb
jl
jp
xor
sbb
mov
jne
xor
aam
dec
inc
ret
xchg
push
movsb
pop
push
dec
and
and
clc
add
push
mov
fs
jl
mov
stc
jns
shlb
pop
ljmp
mulb
fldl
call
mov
and
sub
test
lret
push
jg
jno
push
cmp
push
xchg
cmp
or
mov
and
clc
lods
lods
jb
shrd
push
pop
xchg
subb
xchg
ret
jo
nop
or
ja
sti
pop
std
inc
mov
mov
jb
dec
out
ret
stos
mull
mov
jns
sub
outsb
xchg
and
mov
stos
xchg
lock
lock
xor
jmp
inc
add
es
fsub
sub
cmp
jo
test
add
jecxz
jae
icebp
clc
add
arpl
mulb
pop
subb
or
mov
insw
out
das
outsb
icebp
sbb
xchg
popf
cmp
mov
push
mov
mov
insl
push
call
jg
fcompl
int3
cld
stos
push
lret
dec
mov
shll
add
add
and
or
lahf
mov
jne
mov
mov
data16
pushf
xor
mov
fs
in
inc
and
out
imul
adc
es
mov
xor
rolb
repz
repnz
xchg
fidivrl
xchg
jg
mov
push
xchg
xor
dec
and
dec
inc
jp
divl
popa
sub
mov
mov
mov
and
icebp
js
aas
inc
out
xchg
xchg
mov
cmp
add
out
push
aas
or
dec
cmp
out
and
mov
push
ret
mov
subl
nop
and
fwait
mov
out
cmp
test
pop
lock
pop
test
sub
mov
ret
roll
scas
mov
or
or
jns
ret
mov
xchg
out
repz
stos
fisubrl
adcl
lret
das
jge
repz
insl
xchg
jecxz
fistps
ret
pop
mov
push
cmp
cltd
adc
mov
dec
stos
add
inc
das
enter
sub
xchg
out
inc
add
pop
sarb
mov
call
sbbl
test
add
jg
test
push
mov
pop
bndldx
xor
adc
in
push
dec
sarl
adc
rcll
mov
dec
sub
int3
dec
stc
mov
push
leave
or
add
rcl
daa
mov
sub
inc
fidivrs
pop
xor
mov
ret
fwait
jg
int3
leave
int
mov
pop
fistl
jmp
enter
popf
cmp
xor
ret
test
call
repz
outsl
dec
cli
lock
add
mov
xor
mov
out
fdivrs
imul
test
jg
cwtl
lcall
loop
inc
xchg
sbb
or
pushf
and
andb
jae
test
jnp
pop
int
adc
mov
pop
test
sub
and
sbb
sub
jns
mov
xor
pop
cld
into
pop
mov
add
mov
and
adcl
xchg
out
xor
ja
dec
shll
sub
xor
push
add
inc
mov
cwtl
inc
push
or
gs
movsb
loopne
jle
mov
repnz
xchg
mov
dec
js
mov
inc
mov
and
stos
cltd
loope
fcomps
adc
xor
mov
lock
test
inc
xchg
in
dec
fwait
das
pop
stc
das
pop
movsb
rcrb
dec
or
mov
test
out
cmp
rolb
xchg
sbb
mov
test
push
loopne
and
jo
mov
pop
cs
movsb
fucomip
cmp
mov
inc
enter
and
jns
xchg
lea
sahf
mov
mov
enter
push
in
or
jge
pop
mov
dec
fcmovnbe
stc
push
std
mov
ja
enter
sar
cmp
stc
adc
jmp
repz
inc
push
subl
mov
rorl
adc
mov
leave
jae
in
xor
cmp
fcomi
ja
lret
shll
jp
dec
icebp
and
mov
cmp
fldenv
cmp
mov
mov
js
imull
cmp
adc
idivb
add
fidivs
popa
cltd
and
je
push
pusha
shll
cmp
cli
scas
pusha
lahf
loopne
cld
push
scas
inc
cwtl
fsubs
ret
mov
mov
and
sarb
jmp
fwait
cmp
xchg
jmp
cld
xor
sbb
das
mov
xchg
and
add
push
stos
pop
xor
or
aaa
mov
lcall
into
cld
adc
or
test
add
rcrl
dec
cmp
push
rorl
sarl
inc
pop
xchg
stc
daa
mov
mov
sahf
and
and
fcompl
pop
in
xor
das
out
es
fnstsw
xor
cmpsl
sub
loopne
outsb
jne
fists
inc
stos
sbb
jg
and
insb
sub
cmpsl
ds
push
add
and
cld
add
call
jno
adc
sub
sbb
shrb
scas
sub
and
mov
xchg
cmp
dec
xchg
or
pop
fiadds
xor
mov
jmp
subb
and
stc
mov
push
adc
and
push
popf
xchg
mov
cmp
dec
ds
pop
fsts
sub
test
dec
mov
push
mov
xchg
push
lods
mov
adc
adcl
adc
or
scas
mov
push
cs
icebp
xchg
mov
adc
inc
mov
adc
mov
or
cmp
sub
mov
out
mov
test
loop
or
or
std
mov
call
icebp
mov
adc
data16
cmp
repnz
js
inc
dec
das
leave
mov
or
xchg
pop
call
sub
repnz
pop
lret
outsb
fcomi
aam
ljmp
xor
pop
push
sub
int
dec
fistpl
sub
ds
dec
popf
xchg
test
aad
adc
lods
and
pop
hlt
sbb
mov
or
imul
cmpsl
inc
jge
imul
sbb
cwtl
mov
jg
lds
inc
and
mov
dec
rcrb
jge
xchg
fimull
fcompl
cwtl
mov
cmpsb
or
sbb
pop
xchg
pop
les
dec
pop
popa
adc
sbbl
in
lea
daa
je
push
lods
xor
xchg
sbb
jo
mov
fimull
mov
test
xchg
xchg
test
add
iret
mov
inc
fcmovnbe
outsl
jns
sar
push
test
mov
icebp
cmp
test
mov
ret
add
mov
mov
iret
add
mov
xlat
ds
xlat
sub
pop
mov
jmp
and
cmp
jle
pop
xchg
or
push
or
pop
xchg
pushf
mov
pop
jns
cmp
int
adc
addl
movsb
lret
mov
xchg
cmp
aam
stc
stc
iret
xor
pop
mov
pop
push
sub
jae
fmull
test
pop
sbb
jae
and
pop
es
int
inc
push
cli
imul
jmp
jp
mov
fdivs
int
lahf
std
movl
xchg
test
adc
loopne
push
ljmp
or
xchg
test
jns
xchg
clc
ljmp
mov
int3
repz
mov
pop
fstl
sub
outsb
sub
repnz
jl
sub
xchg
ljmp
adc
or
fistl
ja
cld
mov
dec
ljmp
movsb
das
inc
out
in
xorl
xor
push
pop
lock
ds
xor
or
icebp
loope
addr16
push
je
pop
mov
lock
das
sbb
cmp
testl
adc
push
aam
and
inc
inc
jmp
lea
push
push
and
lea
pop
push
js
adc
clc
mov
push
stos
mov
test
pop
jp
icebp
jle
and
and
outsb
ds
mov
fistps
je
into
and
sub
pop
add
ss
mov
rcl
sar
fcmovu
xlat
jge
inc
aam
arpl
insl
ja
mov
pop
push
lods
mov
mov
ljmp
cmp
sti
lods
sub
cmp
adc
add
imul
mov
add
roll
cwtl
xchg
popf
incl
jns
test
xchg
nop
pop
and
lret
mov
out
dec
fs
shll
int3
in
cmpsb
cld
int
jne
add
sbb
in
mov
cwtl
xor
loopne
mov
nop
mov
push
mov
lock
outsl
sbbb
dec
sti
sarb
in
or
out
cmpsl
imul
loopne
mov
and
out
dec
add
loope
push
add
or
xorl
push
aam
or
clc
push
sub
test
testl
adc
jg
or
mov
jmp
jp
mov
mov
xor
and
iret
cltd
int3
lret
add
cmpsl
and
loop
cmc
jge
fwait
mov
std
xchg
fwait
js
gs
clc
es
stc
jo
int3
sbb
shrb
rcr
jge
cmp
sti
mov
pop
lret
roll
es
sub
mov
mov
lret
mov
test
lcall
mov
mov
aad
adc
push
dec
adc
subl
ja
mov
add
scas
push
dec
stos
lret
in
das
mov
movsl
pushf
lcall
int3
cmp
insb
sbb
popa
mov
push
std
movsb
sub
insl
mov
xchg
add
push
pop
inc
nop
mov
das
lret
std
rcr
in
adc
add
and
call
cmp
pushf
mov
cs
fcoms
xchg
dec
dec
sti
cmpsl
je
push
mov
mov
push
cmp
cld
pop
cmc
arpl
lea
adc
push
popa
cmc
cmpsl
cmp
xorl
sub
imul
lahf
int
mov
leave
pop
outsl
lret
jle
mov
mov
and
xor
adc
loopne
inc
or
jns
cmp
in
push
or
mulb
loopne
imul
into
or
loope
dec
sub
mov
or
inc
je
xchg
inc
jl
or
popf
mov
pop
cmp
lock
pop
add
sub
jp
sub
dec
pop
xor
repnz
sbb
jmp
sti
dec
push
and
sub
adc
arpl
int
xor
clc
inc
or
sbbl
gs
fisubl
dec
dec
jo
mov
clc
out
pop
test
icebp
push
js
and
pop
sbb
ljmp
mov
imul
das
xor
push
jl
iret
pop
dec
nop
shl
je
fcmovu
sbb
mov
in
push
shr
dec
jns
mov
sarb
fld
push
je
jnp
ret
dec
mov
add
test
dec
arpl
hlt
dec
jbe
xchg
push
adc
in
pop
lock
and
in
jnp
setbe
imull
sti
pop
dec
xchg
cli
mov
jle
jmp
cmpsl
rorb
das
sbb
flds
loopne
pop
nop
xchg
hlt
push
cmp
cltd
clc
dec
inc
lret
loopne
mov
shr
sbb
dec
stc
outsl
fdivs
shrl
jp
sub
sti
pop
jns
dec
or
loopne
pop
inc
cmp
fs
sarb
insl
push
ds
or
int3
out
mov
testl
pop
mov
fnsave
inc
lods
dec
stc
cli
mov
pop
enter
cmp
cld
fnstsw
stc
jmp
lea
or
add
inc
stc
hlt
in
mov
outsb
cmpsl
daa
pop
add
pop
cmp
ss
xor
lock
out
cltd
fnsave
cld
ljmp
push
les
sbb
push
adc
imul
adc
xchg
dec
gs
pop
pop
inc
jmp
jo
jb
jmp
dec
imul
fcmovne
inc
mov
adc
repz
fbld
stc
xchg
xor
adc
push
sbb
jg
xchg
icebp
lods
outsl
bound
jae
insb
cli
fimuls
fcmovnu
cs
mov
mov
pop
inc
mov
movsb
add
xor
xchg
add
rcrw
fisubrl
pop
mov
and
cmp
stos
jno
hlt
dec
inc
clc
mov
cmp
lods
data16
and
leave
in
gs
cmp
lods
mov
and
and
mov
test
and
subb
push
fdivrl
jo
mov
mov
aam
lods
movsb
shrl
ret
gs
outsb
jae
mov
mov
mov
in
fneni(8087
insb
dec
fcoms
xchg
mov
sbb
xchg
nop
loope
out
lret
jb
adc
into
lods
dec
es
ss
push
lock
subb
ret
in
outsl
mov
jl
dec
jecxz
out
andb
jb
fcoml
inc
fstpl
sub
mov
xchg
cwtl
fldt
lock
pop
xor
arpl
mov
push
testl
add
sbb
mov
jns
mov
mov
fisttpl
jl
out
jbe
fcoml
or
cmp
pop
ljmp
add
mov
inc
sbb
ds
inc
xor
cli
inc
push
dec
in
jb
inc
or
rcrb
add
call
jnp
sbb
push
mov
add
int3
mov
popf
in
cmp
jle
mov
jns
sti
bound
std
loope
lock
mov
gs
aas
ljmp
cmp
cmp
mov
mov
push
pop
lock
hlt
pop
ret
fadd
rorb
mov
pushf
cmc
jae
sub
add
push
fwait
adc
pop
test
push
and
cmp
push
mov
push
jmp
stos
dec
arpl
fwait
sub
lea
sti
dec
and
jb
jle
iret
maxps
mov
sbb
jo
cmp
movsb
jnp
sub
test
loopne
shrb
and
lahf
jle
mov
mov
outsb
shrb
arpl
cmp
int
mov
out
push
mov
cmp
aad
test
sub
loop
dec
lret
pop
or
daa
jno
mov
cmc
sbb
das
repz
pop
sar
mov
fstps
xor
fcmovnb
sub
shl
mov
add
sbb
movsb
pop
std
scas
cmp
fistl
iret
add
hlt
jae
xchg
mov
fwait
test
scas
push
ss
cmp
imul
pop
xchg
jle
je
test
mov
cmp
mov
fs
mov
enter
sub
mov
push
repz
push
inc
dec
in
push
mov
nop
push
pop
sti
test
mov
fmul
push
xor
fcmovnb
orl
out
cmp
pushf
sub
jge
mov
leave
incb
fdivrl
stos
push
shlb
jge
sti
dec
fildl
fiadds
jmp
bound
je
add
jae
repnz
cmp
data16
fcmovne
pushf
mov
fidivrs
or
js
mov
adc
xchg
arpl
cmp
int
in
mov
fcompl
arpl
jle
or
sbb
dec
sub
mov
mov
cmp
jo
pop
test
mov
push
decb
ds
loop
js
push
orl
and
xor
sub
dec
dec
mov
jmp
and
cwtl
mov
arpl
test
popf
fnsave
or
jb
test
dec
in
imull
mov
add
cmc
xchg
es
inc
push
mov
adc
sarl
mov
push
imul
push
pop
cmp
sbb
stc
lods
cmovle
jo
sub
dec
inc
push
shlb
or
mov
aas
xchg
jge
in
jns
dec
dec
addr16
cld
dec
xchg
sub
arpl
pop
hlt
mov
jg
or
or
mov
or
popa
stc
xlat
xor
or
cwtl
incb
cmp
push
into
aam
inc
jge
mov
jbe
sbbl
sbb
sahf
in
pop
push
leave
fidivrl
loopne
jne
pop
add
sbbl
iret
rol
fcoms
push
wbinvd
cli
dec
xchg
daa
push
dec
cmovl
loopne
adc
xor
xor
ja
push
adc
xchg
imul
call
out
xchg
cs
mov
add
jg
sbb
mov
aad
mov
xchg
loopne
jecxz
fisttpl
dec
xchg
ds
hlt
clc
lea
cmp
sub
dec
pop
sbb
imul
int3
mov
daa
add
cli
xchg
inc
xor
xor
int
mov
cmp
pop
fdiv
dec
and
sub
clc
test
mov
loope
mov
inc
pop
and
xlat
xor
lds
sub
shrl
movsb
dec
push
push
aaa
stos
jge
add
push
mov
cmp
xchg
xchg
mov
cld
or
push
mov
ja
lock
lea
add
xor
jle
pushf
ljmp
or
pop
adc
mov
data16
sbb
add
add
adc
js
and
sub
mov
jge
sbb
pop
daa
data16
ja
adc
lcall
jmp
arpl
inc
xchg
inc
pop
test
lcall
mov
add
jns
dec
push
inc
rcl
ja
popf
xorb
cmp
iret
pop
mov
nopl
xor
xchg
pop
pop
or
cmp
es
mov
push
out
xchg
inc
js
mov
mov
clc
and
jge
adc
inc
fstpt
xor
mov
stos
cmp
in
jo
add
mov
cmp
xor
cmp
ja
iret
insl
repz
xchg
xchg
dec
pushf
mov
adc
jp
jg
lret
or
cmp
push
pop
adc
mov
clc
mov
dec
adc
rcrl
iret
jmp
lret
dec
cmp
lret
xchg
out
loopne
mov
mov
mov
out
inc
or
dec
jns
push
fisubl
mov
loopne
xor
lock
jns
dec
hlt
sbb
cwtl
in
dec
orl
dec
cwtl
add
movsl
lock
push
shr
stos
sbb
sub
outsb
or
fimuls
loop
dec
loope
jbe
xchg
test
cmp
pop
mov
push
dec
or
out
xchg
gs
fsubrp
push
inc
fldenv
ret
les
cwtl
add
xchg
imul
cmpsl
idivl
push
sub
nop
pop
xchg
lea
outsb
pop
sbb
sbb
mov
sbb
pusha
ret
or
fdivs
xorb
ljmp
inc
dec
out
gs
or
insb
ds
and
test
jge
aas
in
popf
jae
mov
repz
and
cltd
jecxz
in
lahf
cli
push
jmp
es
dec
xchg
pop
mov
out
mov
movsb
push
and
push
stc
imul
mov
xlat
hlt
jne
or
jns
dec
bnd
les
loopne
dec
cmp
int
inc
push
rolb
std
aad
cmpsb
jmp
add
pop
jmp
inc
mov
outsb
ljmp
push
lea
or
add
nop
mov
fwait
dec
negl
inc
stos
imul
sub
lahf
ret
adc
bound
dec
push
jne
adc
mov
dec
xchg
cld
and
aad
and
adc
sub
je
jle
xchg
mov
call
ljmp
popa
pop
je
lret
cmpsl
ljmp
inc
pusha
mov
pop
js
hlt
or
nop
xor
inc
scas
cmc
cmp
sarb
mov
jbe
inc
in
jp
jmp
dec
jge
imul
mov
or
mov
pop
mov
testb
jl
add
stos
mov
mov
aad
jbe
cmc
pop
push
xor
cmp
adc
cmp
out
add
test
les
xchg
insl
xchg
lcall
in
dec
jb
imul
fdivrl
xor
xchg
stos
mov
in
lea
stc
pop
push
mov
add
movsb
xchg
or
lret
loop,pt
add
xchg
mov
hlt
stos
push
push
nop
icebp
xor
lods
inc
pop
mov
cmp
bound
sub
and
push
dec
mov
push
jp
std
ds
in
popf
add
push
sbb
ret
cmp
loopne
lea
and
pusha
cmp
popf
js
cld
sub
std
xor
and
call
mov
lahf
test
and
sub
and
push
mov
push
adc
xchg
ds
mov
or
sbb
loopne
loop
add
or
test
and
pusha
les
inc
or
std
and
and
subl
js
fsubrs
adc
scas
loopne
lea
loope
outsb
nop
xor
cmp
xor
mov
imul
xor
cmp
xchg
or
std
insb
dec
and
push
bound
ds
mov
xchg
repnz
or
pop
mov
rcrb
or
std
sbb
and
jae
or
mov
ds
in
roll
clc
stos
pop
push
nop
icebp
xor
mov
xor
cmp
movsb
bound
sub
push
mov
or
test
inc
fwait
shrb
xchg
cmpb
lea
aad
jbe
jmp
xor
mov
adc
push
cs
dec
pop
push
cli
cmp
xchg
in
or
push
fdiv
je
hlt
fwait
dec
outsb
in
adcl
fidivrs
std
hlt
mulb
imul
xchg
and
push
push
in
and
mov
pusha
test
dec
stos
fmuls
sbb
mov
outsb
shl
jp
std
cmp
loopne
lea
mov
mov
mov
sbb
pop
pop
int3
xor
popf
pop
bound
stos
js
fmull
sbb
mov
outsb
rcl
xchg
dec
mov
lea
fdivs
call
repnz
xchg
cmp
ds
sub
mov
pushf
icebp
xor
mov
adc
push
sub
dec
xor
cmp
nop
or
std
jo
and
push
outsb
mov
ds
mov
push
push
xchg
repnz
or
cmp
popf
jl
cld
sub
std
xor
and
clc
push
js
fdivrs
xor
xchg
scas
mov
in
jp
std
pop
sbb
popf
sbb
aaa
adc
cmp
cli
in
jns
mov
and
pusha
mov
clc
stc
xchg
push
mov
mov
outsb
push
aad
mov
pop
xchg
mov
or
mov
rcrb
or
inc
nop
repz
int3
bound
or
push
stos
cmp
ds
in
loope
mov
mov
add
and
hlt
cmp
int3
bound
lods
or
push
jb
cmc
push
push
mov
push
in
mov
call
lret
ds
in
jge
mov
cmp
xchg
mov
enter
mov
mov
call
repnz
ljmp
cmpsb
in
cmp
stos
inc
push
in
pop
mov
mov
xor
cmp
fsubs
sub
stos
and
push
dec
mov
push
bound
test
push
in
movsl
adc
mov
jno
xchg
mov
pusha
cmp
popf
jl
cld
sub
nop
std
xor
and
lcall
add
and
mov
lock
push
push
call
fwait
cmp
mov
cmp
cmp
fsubs
sub
push
and
push
dec
mov
push
push
xchg
ds
lods
adc
push
cmp
cmp
loopne
lea
cmp
jne
dec
lret
add
pushf
xlat
mov
adc
jne
fnsave
fdivrs
mov
and
lea
mov
test
sbb
xchg
push
inc
push
loope
xchg
jnp
sahf
scas
dec
out
loope
cmp
aam
dec
mov
jle
cmp
js
negb
std
scas
sti
jne
les
pop
jmp
xchg
in
loope
jle
icebp
push
pusha
jmp
jmp
cmp
hlt
add
cli
xchg
add
jecxz
fs
push
push
pusha
cli
xchg
rorl
push
cmpsl
cltd
sbb
pop
dec
jg
testb
mov
add
adc
dec
gs
pop
hlt
out
mov
inc
testl
inc
sub
loope
bound
mov
pop
add
imull
jmp
mov
into
sbb
mov
mov
addr16
adc
dec
loop
sbb
mov
out
mov
adc
ljmp
inc
in
out
adc
mov
cmp
stc
push
cwtl
cli
mov
imul
fs
mov
adc
imull
xchg
leave
test
adcb
mov
jnp
test
pop
mov
es
push
xor
fnstcw
cld
push
dec
lea
jge
xchg
jbe
mov
xor
in
pop
mov
in
dec
fs
push
gs
stc
mov
jp
hlt
push
dec
lcall
pop
dec
xchg
mov
jl
mov
and
add
jmp
push
movsl
push
push
sub
mov
hlt
movsl
and
outsb
sti
hlt
and
sbb
mov
pusha
jge
lods
dec
dec
cmpsl
lahf
or
pop
repz
sbb
mov
loopne
xchg
pushf
mov
jae
mov
jp
or
stos
mov
dec
shll
scas
adc
jg
dec
jge
in
mov
ja
jmp
push
cmp
inc
push
test
arpl
sub
sub
xor
mov
inc
call
in
sbb
xor
addb
add
push
mov
das
xchg
clc
mov
mov
movsb
xchg
pusha
imul
test
pop
test
jge
shrl
push
andnps
sub
movsl
jmp
mov
std
das
adc
cmc
aad
add
mov
into
in
leave
addr16
pop
mov
ljmp
fdivs
mov
lods
das
cmp
aam
and
push
call
fwait
aam
out
jb
cmp
inc
or
insl
adc
xor
xchg
adc
bound
or
test
mov
ljmp
push
cmp
xchg
cmp
ret
in
push
gs
jp
movsl
lock
loopne
stc
inc
icebp
push
pushl
fsub
mov
push
cmpsl
push
mov
add
jl
xor
insl
sub
out
adc
popf
mov
inc
ds
inc
out
insb
mov
and
or
das
adc
cmp
leave
shll
mov
test
cmp
mov
xchg
fsubrs
movsl
sub
cwtl
push
js
mov
jns
lcall
xchg
lcall
ret
and
movsb
pop
xchg
ds
push
imul
xchg
imul
mov
cmp
cmp
fdivrs
jp
mov
and
shll
loope
fs
sti
jmp
shlb
fcomip
and
fsubrp
inc
sbbb
mov
jle
adc
cmc
push
mov
out
xor
and
dec
cmp
clc
push
lds
push
data16
ss
or
in
pop
arpl
pop
fdivrs
mov
xor
movsl
cld
mov
test
ret
nop
sarl
adc
fstl
in
pop
xchg
bnd
call
xorb
sbb
lea
mov
or
mov
std
push
sbb
mov
dec
icebp
jmp
test
cmpsb
cmpl
push
inc
loopne
insl
std
mov
outsb
movb
jbe
pushf
test
xor
insl
arpl
into
xor
cli
jge
inc
sbb
push
das
and
nop
xchg
fnsave
out
sub
pusha
mov
dec
cs
and
sub
popa
repnz
mov
cld
jl
test
ret
or
xchg
popf
mov
pushf
pusha
pop
sti
out
pop
sbb
lret
addl
or
jle
push
mov
mov
ret
test
das
lods
mov
insb
cmp
mov
jecxz
mov
scas
std
dec
rcrb
dec
es
sbb
daa
loope
fs
and
xchg
outsl
xchg
jns
pop
jae
rorb
data16
daa
adc
cld
or
adc
mov
shl
test
out
cs
mov
push
fwait
movsb
mov
adc
cmpsl
push
adcl
into
jmp
cmp
test
sbb
es
adc
sbb
cmp
mov
xchg
pop
cmp
in
scas
pop
jmp
push
mov
test
cwtl
jb
sbb
in
flds
loope
stos
or
je
jnp
movsl
xorl
cld
hlt
push
mov
lcall
sbb
insl
sbb
push
mov
out
xchg
jns
idivb
or
outsb
mov
loopne
pop
andl
push
fnstenv
rclb
cmpl
daa
hlt
fisubrs
in
nop
in
dec
repz
fcoms
test
dec
int3
xor
fwait
fs
in
jecxz
dec
shrl
clc
sub
pop
mov
insl
test
std
mov
cmc
pop
xor
loope
sub
into
sarb
nop
enter
in
sbb
fs
in
sub
outsb
ror
rcrl
mov
push
ja
mov
mov
xchg
or
icebp
hlt
enter
dec
js
jns
sbb
in
dec
int
loop
movsb
cmp
pop
mov
sub
fs
lret
imull
test
pushf
fwait
int
sub
xor
sub
sbb
mov
adc
popa
call
pop
jg
mov
dec
int
mov
push
lock
jns
cmc
lret
or
dec
es
lods
inc
std
lds
pop
add
dec
xchg
cmp
scas
je
mov
pushl
xor
std
mov
data16
icebp
rclb
cli
roll
aam
add
in
mov
jge
adc
imul
pop
mov
fildl
or
scas
ljmp
cmp
es
sub
arpl
or
ret
scas
push
pop
pop
cmpsl
xor
fisttps
aaa
stos
pushf
pop
xchg
outsb
lret
incb
std
mov
push
repnz
loop
hlt
test
movsl
je
out
icebp
jae
int
cli
push
mov
cltd
sbb
lock
ja
leave
jle
push
testb
xor
lock
shlb
in
jmp
dec
aaa
or
cmp
call
dec
fildl
mov
jmp
aam
aas
xor
dec
es
imul
and
jns
cli
inc
jmp
jp
lods
mov
mov
sub
cltd
sub
fidivrl
push
inc
jne
sub
lea
movsb
loopne
fsubrs
leave
pusha
std
inc
inc
xor
pop
push
rorl
icebp
dec
es
inc
add
hlt
dec
push
lea
hlt
hlt
push
mov
es
ljmp
scas
gs
inc
dec
pop
push
cwtl
push
mov
jae
sbb
shrb
icebp
data16
sub
cmp
mov
jl
mov
sbb
movsb
notl
icebp
ss
outsl
data16
jns
adc
and
scas
sub
pushf
dec
or
mov
insl
fs
cmp
rclb
testl
mov
and
cltd
pusha
jp
in
inc
push
mov
inc
mov
lcall
arpl
mov
mov
aaa
pushf
mov
clc
adc
pop
data16
xchg
push
pushf
mov
xchg
notb
jo
in
adc
dec
push
cwtl
ja
inc
xorl
gs
shlb
dec
mov
into
les
cmp
loope
rolb
add
add
cmp
sahf
xor
sti
imul
clc
xorl
aad
cmc
jmp
out
xor
adc
inc
int
scas
add
sbb
in
push
insl
pusha
and
int
scas
xor
enter
fs
jbe
std
jmp
lcall
ss
or
xorb
lods
mov
push
dec
lods
or
sbb
push
push
mov
lds
xchg
lds
into
inc
data16
xor
adc
divl
mov
xchg
add
mov
std
jge
pop
movsl
es
roll
mov
jns
idivb
push
mov
jns
nop
dec
mov
inc
ja
push
sbb
jb
pop
mov
cmp
mov
push
stos
xor
push
adc
push
ret
mov
sbbb
pop
jns
sub
dec
pusha
mov
lods
xor
repnz
xor
notb
mov
ljmp
mov
cli
and
sahf
sub
mov
dec
jmp
cmp
mov
rolb
jae
pop
data16
syscall
cmp
scas
adc
clc
mov
sbb
sbb
loopne,pt
imul
popf
mov
enter
addl
shrl
or
testl
and
sbb
xor
cmpsb
in
dec
add
std
sbb
test
add
enter
mov
nop
xchg
stos
pop
arpl
sbb
in
push
pusha
sbb
or
loopne
dec
mov
bound
pop
les
pop
mov
popa
cli
push
and
inc
js
pop
je
mov
lods
sar
pop
and
xchg
adc
les
test
jns
adcb
imul
sbb
icebp
insb
cld
adc
mov
mov
jo
lds
xchg
cmp
mov
mov
ret
mov
das
clc
in
dec
jae
xchg
push
inc
lea
add
cltd
out
data16
cmpsb
or
ljmp
mov
sbb
jno
adc
in
in
jmp
cmp
ret
xor
add
sub
ds
out
out
ret
or
lock
xchg
adcl
arpl
mov
push
cltd
repz
in
pop
add
shl
xchg
mov
fidivrs
ret
subb
call
sub
hlt
dec
cli
sub
int
imul
xchg
mov
push
lock
cmp
sub
cwtl
test
lock
clc
sub
push
jb
in
sub
cmp
add
clc
cmpl
dec
dec
out
dec
fs
andl
mov
pusha
mov
dec
lock
pop
push
in
enter
pusha
sbb
test
mov
scas
pop
or
in
into
cmp
or
in
in
arpl
jmp
into
fdivrp
jecxz
pop
shr
dec
fdivrl
push
sub
pop
add
in
in
mov
cmp
dec
insl
jl
pop
jne
int3
pop
push
pop
and
xchg
stos
sub
jle
xor
mov
xchg
testl
lock
add
xchg
in
mov
fdivr
mov
push
gs
mov
insl
popf
negb
or
in
or
sbb
xchg
loopne
dec
xor
sbb
mov
pop
mov
outsl
stc
mov
jo
icebp
pop
popa
es
jne
mov
orb
mov
lcall
pushf
and
sub
clc
nop
pop
push
sub
repz
movsb
nop
hlt
in
jns
xor
sbb
pusha
sbb
or
jns
jbe
xchg
lret
mov
pop
cmp
fcomi
push
pushf
shll
ljmp
lea
push
mov
xor
lret
mov
movsl
add
mov
pop
dec
xor
dec
aam
sub
imul
scas
jle
cwtl
xor
inc
stc
fstl
pop
push
xchg
leave
cmpsl
or
jle
jb
jle
mov
push
xchg
movsb
push
adc
std
mov
add
cmp
adc
fisttps
scas
add
xor
xor
push
and
push
push
insl
xlat
jbe
shr
xor
ret
sbb
push
gs
pop
pop
push
xor
xor
mov
xchg
xor
xchg
std
je
lods
es
mov
cmp
or
bound
dec
ss
das
pop
xor
cmpsl
jno
push
jmp
out
dec
mov
mov
incb
fs
mov
mov
cmp
push
das
pop
cmp
cmpsl
jno
push
jmp
out
add
ds
pop
xchg
cwtl
and
mov
dec
cli
fmuls
movsl
xchg
push
pusha
int
xor
cwtl
and
call
pushf
bound
dec
cmp
das
pop
aaa
adc
cmpsl
jno
push
jmp
out
or
ds
or
pop
jle
dec
cmp
adc
mov
add
mov
push
ja
jl
xor
stos
and
mov
cmp
xchg
fs
push
push
pushf
fwait
ret
jne
mov
hlt
cli
cmp
cltd
cmp
adc
mov
aaa
or
dec
lcall
inc
pop
js
mov
add
sarb
mov
arpl
gs
dec
mov
sub
or
js
pop
insb
dec
shrl
push
xor
sbb
adc
daa
add
aas
add
pop
js
pop
jmp
lods
mov
mov
sbb
jp
stos
pop
jg
fs
ret
cmpb
out
or
mov
inc
adc
cmpsl
mov
mov
dec
push
nop
fistps
lahf
stos
xchg
push
not
out
pop
int3
mov
adc
sub
mov
adc
pop
dec
lret
lea
cmp
add
in
into
out
adc
xor
push
in
das
mov
push
arpl
int3
mov
mov
add
mov
outsb
and
xchg
push
mov
push
xor
cmp
adc
inc
imulb
je
enter
fsubrs
adc
cmp
mov
pop
inc
enter
clc
popf
push
bound
cmp
and
pop
fiadds
mov
cli
cmp
xchg
in
or
and
pusha
mov
hlt
in
xchg
bound
popf
lea
mov
loopne
jne
ds
mov
mov
or
push
cmpsb
mov
jbe,pt
jmp
xor
mov
add
movsb
fwait
sbb
push
pop
pop
rcrb
loopne
je
int3
or
mov
mov
ds
in
int
mov
clc
icebp
push
mov
sbbb
cmp
loopne
lret
cmp
loopne
lea
or
test
cmp
push
jbe
in
push
mov
push
push
dec
mov
cltd
ds
test
in
push
push
or
cld
into
add
int
mov
fwait
aam
or
orb
std
nop
stos
and
push
inc
mov
push
jb
cmc
ds
lea
mov
mov
pop
pop
popfw
shlb
aam
push
sbb
mov
xor
ds
in
aad
mov
in
icebp
and
cwtl
fwait
cmp
test
lcall
je
int3
mov
sbb
xchg
mov
xor
pop
shlb
cmp
popf
dec
loopne
pop
loop
sub
or
mov
dec
mov
cld
mov
pusha
jns
xchg
mov
sbb
pop
mov
fcomps
dec
or
std
pop
push
and
push
cmp
mov
cmp
xchg
in
or
and
cwtl
mov
rcr
jb
cmc
cmp
orl
cmp
mov
stos
les
js
aam
adc
test
add
xchg
mov
sub
mov
mov
pop
inc
enter
in
pop
bound
add
and
ret
ret
jp
adc
out
jns
xchg
cmp
ds
mov
shl
insb
mov
cld
cmc
xchg
outsb
mov
popf
lea
mov
in
lods
push
push
lret
ds
in
jge
mov
or
test
sub
xchg
dec
mov
std
lea
mov
or
mov
fs
mov
xor
cmp
popf
lods
bound
sub
scas
and
push
pop
mov
push
dec
cmp
jp,pt
icebp
pop
mov
mov
add
mov
mov
push
jo
int3
mov
sbb
cmp
mov
pop
dec
enter
clc
popf
pop
bound
cmp
and
lds
mov
or
int3
out
and
push
mov
sub
mov
les
dec
mov
pushf
xchg
xchg
or
fwait
cmp
jb
in
ret
push
decb
ds
nop
push
sub
pusha
mov
int3
in
jle
cmc
cmp
test
add
fwait
loopne
lods
dec
push
ret
ds
in
jno
mov
or
test
ror
xchg
inc
mov
jmp
pop
adc
or
sub
cmp
push
shlb
icebp
test
add
mov
mov
loopne
lea
in
pop
data16
xor
cmp
sub
or
inc
lret
pop
dec
xor
and
cli
and
ljmp
ds
and
icebp
jl
lock
push
outsb
call
popf
cmp
loopne
lea
mov
adc
mov
add
mov
xor
shrb
insb
or
std
jl
and
push
bound
ds
mov
adc
push
insb
in
clc
xchg
push
ret
mov
xchg
lea
xor
ds
in
leave
je
enter
in
pop
mov
mov
xor
mov
std
clc
repnz
loop
jns
xchg
cmp
ds
test
aam
fs
cld
icebp
xchg
push
mov
cltd
lea
mov
iret
fisubl
pop
push
testb
xchg
in
adc
mov
sub
fs
lock
cmp
loopne
lea
mov
cwtl
outsb
pop
imul
pop
ds
jne
mov
or
test
aam
xchg
inc
mov
jmp
pop
sbb
popf
adc
xor
sti
mov
gs
fmuls
adc
lods
mov
cmp
xchg
push
mov
push
xor
mov
adc
and
stos
inc
stos
clc
push
je
enter
fsubrs
or
mov
mov
pop
pop
les
js
hlt
popf
dec
in
push
or
std
and
and
push
cs
mov
or
cld
repnz
out
mov
push
lcall
mov
fdiv
je
enter
clc
stc
xchg
adc
movsl
lea
mov
lock
push
out
jns
sahf
cmp
ds
sub
fs
fdiv
je
hlt
fwait
dec
outsb
loopne
xchg
adc
cltd
lea
mov
rcr
and
testb
xchg
in
or
mov
mov
fcom
xchg
dec
mov
icebp
lea
sbbl
mov
jne
or
xor
cmp
fsubl
sub
mov
mov
push
dec
cmp
jle,pt
cmc
pop
mov
xor
mov
mov
mov
rorb
std
int3
loop
jge
xchg
mov
push
mov
and
cwtl
mov
icebp
js
cld
fwait
push
outsb
in
test
push
loopne
lea
mov
in
ret
push
decb
ds
mov
fdiv
jo
enter
clc
icebp
xchg
push
cmpl
push
mov
cwtl
insb
push
jo
loop
pop
testb
movsb
cmp
popf
mov
or
push
dec
mov
push
jle
cmc
ds
lea
mov
adc
in
inc
jo
dec
mov
mov
fs
fdivrs
or
xchg
mov
loopne
lea
rcrl
cld
xor
in
popf
and
sub
mov
adc
and
stos
pop
stos
clc
push
je
int3
mov
sbb
xchg
mov
xor
lea
fstps
in
pop
cmp
cmp
mov
adc
and
lock
js
xchg
ljmp
lea
sub
fs
popf
je
enter
in
and
and
push
cmp
mov
mov
mov
bound
mov
push
push
fwait
mov
or
xchg
cmpsb
mov
leave
lea
fstps
clc
xor
nop
popf
sub
subb
or
cmp
cmc
cmp
mov
or
and
cwtl
mov
int3
in
jp
stc
cmp
loopne
lea
mov
call
idivb
imul
mov
xor
mov
aam
xchg
inc
mov
cmc
lea
test
test
cmp
mov
or
xor
call
in
pop
les
adc
movsb
mov
xor
xchg
mov
loopne
lea
fstps
clc
xor
popf
and
pushf
sub
mov
add
and
fst
jp
lea
fwait
adc
pop
push
mov
inc
imull
loop
push
test
repz
out
or
lret
scas
jae
shll
xchg
fndisi(8087
insl
mov
lret
xor
jo
call
mov
xchg
adc
rolb
frstor
xor
loopne
popf
mov
adc
mov
out
outsl
adc
adc
xor
push
and
lret
mov
lds
test
dec
mov
int3
jmp
test
fstp
dec
mov
fstl
dec
cmp
or
mov
loopne
bound
aad
call
fdivr
adc
ds
dec
lret
imul
dec
mov
inc
mov
or
push
mov
and
mov
movsb
lock
sub
fwait
cmp
lret
pop
jbe
xor
pop
pop
test
mov
pop
pop
adc
pop
jl
inc
lret
jg
jae
jge
xor
ljmp
and
pop
inc
lea
imul
aaa
ja
dec
jo
and
jnp
add
adc
push
cmp
jnp
popf
int
and
or
sub
call
push
cmpw
es
add
fstl
fmul
xor
sub
fisttpl
es
add
xor
out
mov
jbe
insl
add
mov
push
or
clc
int3
dec
jmp
inc
sbb
mov
push
ds
iret
or
and
mull
adc
mov
out
fwait
cmp
fidivl
loopne
mov
roll
jp
in
cmp
aad
das
fcmovnu
sub
daa
and
add
into
jl
mov
add
fdivr
test
xchg
aad
lds
inc
push
sbb
nop
and
hlt
push
popf
lret
int3
xor
mov
call
ja
mov
insb
dec
dec
mov
fiaddl
sbb
nop
jae
movsb
test
inc
pop
xchg
fisttps
mov
outsl
mov
loopne
lcall
leave
add
lods
adc
xchg
pop
pop
std
jmp
inc
or
dec
pop
aas
lret
mov
int3
add
sub
pop
fst
sub
in
push
or
xchg
test
into
std
test
jl
es
insb
es
push
rcll
mov
sub
mov
lods
je
fstps
xor
or
outsb
inc
test
xor
pop
and
dec
push
scas
aam
sbb
jae
mov
push
shlb
push
lds
or
mov
push
dec
loopne
aam
out
lcall
jp
jg
or
inc
cmp
or
cmpsb
ss
jmp
dec
sahf
mov
mov
mov
inc
push
push
add
jp
mov
movsb
or
fists
mov
es
mov
sbb
jae
xor
dec
arpl
xchg
dec
pop
ret
xor
flds
mov
mov
mov
jnp
sub
cltd
adc
data16
inc
out
jge
jb
mov
cmp
aam
insb
incb
add
inc
mov
mov
jg
mov
adc
into
sahf
or
dec
cmp
xchg
push
adc
movsb
inc
pop
dec
dec
jbe
push
adc
lds
gs
jae
inc
or
cmp
pop
js
mov
insl
outsl
cmp
push
icebp
rcr
mov
adc
or
or
rorb
cmp
loopne
mov
mov
in
mov
push
pop
and
fdiv
mov
mov
push
or
cmc
mov
mov
jmp
inc
insb
add
cmp
mov
test
dec
ror
sub
or
and
push
xchg
xor
test
inc
and
mov
add
cltd
jne
adc
lock
scas
inc
cmp
arpl
xchg
mov
pop
lds
push
jb
dec
push
and
xor
push
ja
xchg
mov
add
mov
mov
inc
pusha
or
ret
mov
repnz
pushf
push
mov
das
dec
xor
lds
adc
mov
insl
adc
ret
jecxz
mov
cmp
cmpxchg
xor
insb
jne
rclb
mov
stc
jp
fcmovnu
or
and
jae
sub
xchg
push
incb
push
mov
dec
cli
inc
adc
stos
cmp
cmp
inc
stc
sbb
fst
push
add
or
push
jle
push
add
jg
pop
mov
stos
int3
gs
in
xor
dec
and
call
repnz
cltd
cmc
and
cmp
sub
mov
jne
ret
jg
into
xor
mov
dec
mov
add
mov
and
test
and
int
cmp
mov
inc
std
scas
cli
mov
out
pop
sbb
mov
sub
pop
aaa
pop
push
test
pop
jne
cmp
mov
push
in
push
aas
and
jmp
dec
or
adc
push
fdivr
sti
adc
or
idivb
mov
add
push
mov
jp
fbstp
adc
and
sub
sub
cmp
push
div
mov
ss
mov
or
js
cmp
aas
mov
sub
mov
push
push
test
lock
mov
pop
or
mov
aad
imul
aam
xchg
int3
es
or
xchg
cmove
mov
pop
ret
dec
imul
int3
or
inc
inc
mov
dec
and
jns
xor
mov
les
xor
lret
mov
push
push
sahf
or
imul
or
or
mov
xchg
xlat
test
inc
loope
xor
pop
xchg
test
add
add
frstor
adc
shlb
xor
iret
mov
push
call
dec
aad
and
mov
lret
inc
jnp
xchg
stos
sbb
cmpsl
outsb
push
stc
lret
test
jbe
std
rolb
icebp
in
and
push
int
inc
and
xchg
outsb
inc
dec
push
mov
cmp
add
cmp
rcrl
fdivl
mov
jl
jnp
mov
fsubl
in
outsl
jle
jo
sbb
mov
jp
mov
test
push
add
addr16
imul
jbe
and
push
mov
xchg
push
sub
cmc
jge
jns
mov
or
js
cld
into
cmc
jae
fsubrs
sub
dec
mov
mov
push
sbb
adc
and
mov
jg
mov
dec
into
xor
adc
ljmp
les
jno
aaa
jg
pop
pushf
mov
push
sbb
jbe
data16
fidivrl
incb
inc
rcll
xor
sub
push
imul
mov
std
shll
mov
push
and
sbb
call
mov
mov
mov
lea
test
or
or
fs
insb
xlat
push
pop
adc
insb
sbb
ja
sti
push
imul
inc
es
mov
fcmovnu
out
in
dec
ret
inc
subl
push
fs
cmc
pop
jg
pop
dec
push
mov
mov
xchg
add
cmp
cmp
shrl
dec
mov
repz
insb
cmc
or
or
in
pop
cmp
cmp
jge
or
fnsave
jp
sahf
push
mov
ret
and
repnz
mov
and
mov
test
or
cmp
fcomip
cmp
fldl
mov
xor
pop
or
rorb
inc
xor
pusha
or
add
sub
xor
imul
scas
adc
gs
mov
xchg
fnstenv
incb
xor
popf
daa
or
mov
fdivl
dec
out
dec
jnp
into
popa
cmp
aad
cmpsl
mov
pop
cs
xor
ja
or
fiaddl
ds
dec
mov
out
sub
mov
xchg
add
std
fldln2
and
mov
mov
int3
das
lds
rcll
add
js
mov
mov
inc
xchg
add
xor
lret
idivl
mov
into
mov
push
or
xor
xchg
adc
loope
std
inc
fwait
stos
jno
fs
dec
pop
add
in
cmp
iret
loope
fwait
push
adc
add
fsubrl
out
mov
or
popa
frstor
in
mov
lea
cmp
fimuls
js
shrl
mov
pop
sarb
mov
and
subl
repz
mov
aad
pop
loopne
shll
push
mov
jle
cli
ret
add
in
cmpb
dec
or
mov
mov
in
jne
cmp
fdivl
mov
neg
icebp
adc
cmp
mov
lcall
rorl
pop
out
or
or
movsb
pop
jnp
add
cmp
mov
lea
xchg
and
mov
fwait
imul
add
push
add
shlb
dec
in
jmp
stc
mov
sahf
movsb
and
in
or
add
mov
inc
lock
ja
sbb
mov
xor
dec
or
mov
sbbl
adc
mov
push
sbb
push
cmp
dec
add
push
mov
mov
int
aas
int
push
movsl
sbb
daa
cmp
repz
inc
movsb
das
jg
xchg
int
ret
aad
cmp
test
ficoml
sub
mov
fcomps
mov
and
sub
es
sub
leave
push
es
fmull
xchg
cs
cmp
int3
jmp
or
in
outsl
cmp
push
and
xchg
clc
bound
add
inc
jecxz
or
or
lods
sub
inc
cld
jb
insl
add
mov
mov
faddl
jmp
mov
ds
pushf
and
fwait
jnp
xor
test
sarb
push
neg
cltd
xor
sbb
test
xchg
repz
mov
and
add
xor
or
sahf
int
pop
lret
xor
mov
add
and
sub
cmp
cld
mov
mov
inc
push
pop
lahf
cmp
and
mov
sbb
add
mov
add
out
jl
jge
rolb
mov
pushf
insl
mov
cmp
sub
jge
inc
int3
or
dec
mov
pop
mov
and
adc
or
jle
aas
lds
movsl
sbb
ss
push
jbe
jle
push
xchg
imull
dec
iret
add
add
mov
leave
imul
test
fcomi
js
inc
xchg
lods
xchg
xor
add
fcmovne
push
inc
stos
pop
int3
inc
movb
mov
mov
sub
mov
hlt
or
lea
push
movsl
mov
repz
or
pop
pop
dec
cmp
or
les
mov
mov
xchg
es
dec
mov
and
cmp
pop
addr16
xorb
cltd
adc
add
mov
or
pushf
inc
mov
dec
inc
mov
add
mov
ret
xlat
jp
or
rorl
sbb
mov
rcr
mov
adc
mov
mov
dec
mov
mov
js
leave
mov
mov
shll
xchg
adc
xor
push
jbe
insl
lea
stc
in
adc
mov
test
add
or
jne
push
arpl
icebp
addb
sub
loop
mov
or
mov
cmp
mov
xchg
lret
stos
inc
mov
fimuls
adc
sbb
inc
adc
dec
es
dec
or
xchg
adc
loopne
js
mov
cltd
mov
lcall
cmp
or
out
add
dec
mov
pop
jecxz
mov
iret
loopne
sbb
orb
stos
in
outsb
mov
or
out
loope
cmp
in
pop
adc
mov
mov
xchg
sahf
push
mov
cmp
fs
hlt
pop
loope
xchg
popf
mov
cmp
mov
sub
insb
push
xor
aas
dec
push
test
dec
inc
push
jp
fidivl
enterw
mov
pop
add
fisubrl
cmp
or
add
lahf
mov
push
or
push
es
test
inc
into
xchg
add
pop
lret
in
inc
in
mov
pop
fistpl
xor
xor
cmp
sar
out
mov
xor
arpl
ret
mov
push
xor
adc
in
or
ret
sub
movsb
lret
outsb
mov
test
adc
xor
hlt
lea
js
movsb
xor
fcomi
andl
data16
aas
fnstenv
in
jns
loope
ret
mov
rcr
or
test
lock
cwtl
int3
dec
inc
shll
dec
sbb
fsub
dec
fdivs
inc
mov
mov
cwtl
mov
pop
xor
pop
pop
or
rcll
fbld
sbb
clc
sbbb
add
sub
xor
adc
divb
add
fidivs
daa
and
sti
shlb
mov
lods
fcomps
adc
les
add
add
ja
and
mov
push
filds
cmp
mov
ficompl
adc
lock
or
xor
jne
mov
push
std
and
lea
add
adc
fcom
outsl
pop
inc
adc
fadd
lret
cmp
mov
xor
lds
jg
mov
test
iret
or
jle
shrl
insb
mov
lahf
mov
jle
pop
out
xchg
add
sarl
push
add
outsb
push
cmp
mov
sbb
aaa
or
mov
arpl
adc
out
mov
xor
jge
pop
mov
fdivl
inc
xchg
jg
aas
add
lret
std
cli
inc
or
adc
ljmp
xchg
add
or
add
adc
cmp
or
fucom
test
mov
ja
test
add
loopne
test
add
into
lods
enter
jp
mov
xor
jle
imul
and
adc
sub
enter
scas
aad
mov
push
jp
cmp
mov
cmp
in
clc
or
xchg
jecxz
sahf
pop
and
jb
mov
xchg
addb
dec
repnz
xor
test
xchg
jecxz
or
xor
pop
pop
int
dec
push
add
push
iret
xlat
je
jbe
inc
fmull
jnp
popa
inc
xchg
mov
sub
dec
mov
leave
nop
out
pop
mov
test
aad
out
test
mov
dec
add
and
mov
sub
cmp
sub
pop
insl
jge
adc
pop
leave
xchg
mov
mov
inc
icebp
mov
ficompl
dec
cmp
jp
rcr
fisubrl
aad
hlt
xor
dec
fnstenv
fstp
cmp
pop
out
rorb
loope
aaa
xchg
data16
movsb
add
into
or
icebp
popa
or
loopne
xchg
pop
inc
xor
cmp
lahf
mov
data16
movsb
icebp
mov
test
popf
and
das
jp
mov
scas
adc
inc
gs
in
cmp
or
arpl
push
or
jns
or
dec
ret
or
in
loopne
mov
xor
fxch
push
es
jno
arpl
mov
jae
sti
vphaddbw
xor
push
ds
cmp
in
in
xor
out
add
mov
push
dec
xchg
movsb
les
test
pop
popf
mov
imul
rorb
dec
or
lods
jo
mov
int
mov
clc
sbb
lds
sub
jbe
dec
push
imul
repnz
mov
icebp
test
push
ret
fisubl
shrl
rolb
dec
rorb
imul
sbb
inc
mov
shlb
mov
xor
sahf
mov
xor
or
sbbb
in
jge
pop
call
jbe
pop
lahf
aad
mov
lods
jge
daa
fiaddl
mov
xchg
je
jl
push
std
jbe
mov
and
or
std
mov
sarb
jmp
fildl
into
pop
cwtl
fbstp
ror
pusha
inc
cli
mov
adc
push
rorl
int3
rep
dec
jo
push
dec
popa
pop
xchg
leave
inc
std
xor
rolb
mov
lea
or
lods
push
jbe
mov
fiadds
and
jae
xchg
adc
leave
xlat
jae
cmc
mov
mov
and
ret
adc
lods
hlt
and
ds
dec
arpl
shl
enter
inc
cli
rclb
or
test
xorb
and
fnstenv
cmp
movb
lret
pop
popf
mov
stc
fistpll
mov
movsb
in
mov
fmull
mov
lods
outsl
mov
mov
mov
and
leave
aad
int
pop
test
add
or
xlat
movsl
sbb
aam
or
fsubrl
and
in
jnp
sub
dec
call
sbb
test
lock
dec
sbb
nop
xchg
fsubs
loope
dec
mov
xchg
mov
test
or
leave
sahf
sbb
lcall
xor
rclb
int3
ret
gs
int
adc
xor
or
sbb
jo
jecxz
sub
mov
xchg
jge
mov
clc
fs
push
and
add
xor
in
es
int3
aas
loopne
mov
popa
js
mov
or
mov
cmp
test
inc
dec
mov
lea
push
cmp
stos
adc
mov
adc
fmull
sbb
int
loope
pop
repz
jno
push
cli
aam
lock
fcomp
rcl
adc
mov
enter
mov
xor
cmpsb
sub
adc
mov
mov
push
push
es
aaa
jg
in
xor
std
mov
mov
nop
ss
scas
stos
adc
dec
fimuls
nop
lock
lcall
or
jns
sub
push
dec
into
cwtl
pusha
xor
outsb
and
jb
lret
sbb
inc
cmp
xor
cmpsb
push
fcmovnb
loop
pop
dec
mov
push
je
jmp
es
mov
xchg
add
outsb
and
jno
jle
pop
mov
xor
and
xlat
mull
insl
push
and
and
out
mov
shll
pop
les
adc
sbb
dec
popa
loope
cmp
cmp
dec
fcoml
jg
push
push
and
adc
scas
insb
mov
loop
jl
xchg
lcall
add
inc
mov
cmc
andb
test
das
mov
mov
push
adc
lret
xor
not
loopne
scas
mov
int3
rcrb
fcomps
xchg
jne
xchg
insb
mov
es
inc
jne
add
inc
int
mov
xchg
imul
sarb
imul
mov
pop
add
or
sbb
mov
pop
rolb
sbb
jo
jl
jmp
pushfw
xlat
dec
pop
cmp
lods
js
mov
fsubp
sarb
data16
rolb
pushf
jle
xor
add
jns
cmp
jmp
jb
stc
push
pop
mov
les
aad
push
dec
insl
xlat
cmp
leave
addl
out
jno
ficoms
xorb
jle
stc
xchg
add
sbb
mov
push
jns
mov
mov
test
pop
cli
mov
adc
arpl
add
xor
int3
dec
loopne
xchg
test
stc
sub
leave
lea
fidivrl
test
cmpsb
ficompl
test
push
mov
mov
dec
les
pop
pushf
aam
add
xchg
cmc
ljmp
pop
lds
fwait
ret
hlt
adc
into
testl
dec
bound
or
int
dec
xor
ss
and
ret
mov
les
sub
inc
fs
outsb
push
adc
jp
jns
cmp
or
fstpt
mov
das
or
mov
andl
mov
and
stos
mov
jne
and
mov
mov
dec
cmp
mov
cltd
imul
xchg
sbb
cmpsl
int
lret
mov
pop
arpl
inc
adc
sti
add
push
lcall
push
add
mov
in
sbb
pop
jbe
je
imul
movsl
inc
inc
orb
xchg
hlt
int3
pop
fiaddl
jae
jle
cmc
rol
xchg
inc
fsubrl
mov
or
loope
xchg
fistps
or
pop
jns
pushf
sub
test
jp
lret
fcmovnbe
push
imul
in
add
aad
sbb
adc
leave
rep
or
sub
sbb
movsb
in
xor
jb
xor
dec
cmp
insb
sti
sbb
fdivs
outsb
adc
test
xchg
jno
push
out
stc
push
in
or
dec
jae
jp
std
mov
cmp
pop
inc
mov
pop
sub
pop
in
js
rcrl
mov
out
in
lock
jbe
shrl
xor
xchg
rorl
call
rep
add
xlat
imul
adc
sbb
inc
inc
jecxz
scas
loop
jecxz
add
aaa
sub
adc
jmp
in
mov
aam
movsb
aad
sbb
mov
pop
sbb
fsubs
jg
mov
adcb
xor
and
push
push
inc
clc
outsl
or
arpl
jae
mov
insl
pop
out
add
shll
push
int3
fwait
scas
cmp
fmull
jmp
sbbb
sub
and
jg
out
imul
cmp
push
loopne
add
outsl
inc
pop
lret
xor
imul
das
pop
test
or
cmp
jmp
sbb
cmp
jle
es
and
mov
mov
cli
call
jl
movsb
in
dec
aad
mov
fsubr
in
adcl
jne
push
lods
mov
stos
jno
repz
call
jbe
cmovs
sub
fwait
mov
test
mov
xor
add
or
cmp
dec
mov
and
int3
jne
aam
xor
in
dec
lret
inc
imul
inc
jg
xchg
add
xor
add
xchg
pop
movsb
sub
cmp
push
jg
int
shl
inc
pop
cmpsl
push
sub
repz
in
push
or
pop
xor
or
inc
pop
jne
sub
lock
ds
lea
jno
lods
cmp
sti
jo
pop
mulb
push
cli
loop
dec
cwtl
dec
ljmp
jmp
int
push
mov
xor
adc
push
inc
push
fdivrl
std
clc
jge
mov
shrb
addr16
stc
scas
mov
incl
push
jae
stos
xchg
lea
push
jae,pt
hlt
push
fdivrp
jmp
arpl
inc
stos
movsl
jns
fistpll
js
sub
add
adc
rcrb
cmpb
cmp
xor
xchg
sbb
out
xchg
mov
or
xor
fcmovbe
adc
jae
dec
pushf
addr16
das
dec
mov
movsl
jecxz
jne
pop
fchs
lods
cld
fldcw
loopne
push
xchg
push
mov
insb
in
lods
lea
aas
inc
xor
addr16
jecxz
cltd
pop
pop
sbb
mov
inc
cmp
jg
mov
addb
frstor
dec
fstl
lcall
mov
pop
or
push
mov
and
push
iret
xor
fs
bound
mov
sub
mov
sub
sbb
mov
loop
inc
nop
xchg
inc
push
adc
dec
adc
sahf
push
leave
adcb
rclb
sub
jo
inc
fbstp
or
aas
pop
dec
mov
sbb
sbb
xor
pop
and
xchg
adc
xchg
cli
jbe
cmp
fcomps
movsb
jmp
leave
ljmp
push
test
cmp
aad
inc
fdivs
aaa
push
ljmp
add
das
icebp
add
or
push
stos
mov
ljmp
hlt
hlt
jne
xor
add
dec
cmp
pop
inc
xchg
inc
mov
adc
notb
dec
xorl
and
test
push
out
cmpsb
or
test
ss
xor
sarb
gs
fmull
adc
lods
mov
xor
sbb
outsb
sub
pusha
mov
clc
sti
insb
push
xchg
imul
cmp
xchg
adc
mov
add
movsl
or
lods
xor
or
dec
sbb
jp
mov
adc
out
jne
out
and
push
mov
and
pop
jns
fwait
pusha
mov
roll
mov
sbb
jmp
ds
in
lea
mov
mov
leave
xchg
shrb
in
jle
mov
cwtl
adc
or
rcrl
sub
hlt
cmp
add
add
sbb
lods
sbb
fisttps
adc
lea
or
cmp
ret
cmp
cld
dec
test
in
mov
arpl
cmc
pop
jns
pop
jo
or
dec
xor
cmc
fisubrl
imul
sti
icebp
pop
jp
repz
mov
in
loopne
pop
jg
ss
jg
jmp
pusha
pop
int3
clc
cmp
xor
jecxz
xor
inc
popf
xor
ret
inc
nop
mov
in
mov
cmp
mov
inc
xchg
out
sti
out
pop
jbe
mov
dec
into
or
ljmp
fldl
ficoms
xor
movsb
test
sbb
pushf
cmp
add
dec
out
xlat
adc
repnz
or
fs
inc
fwait
mov
mov
sub
push
push
jb
jmp
and
movsb
inc
ljmp
aaa
sbbb
cmpsb
lret
inc
pop
inc
or
mov
pusha
mov
aaa
mov
xor
cs
popf
xorb
out
sub
sbb
or
gs
and
xchg
jp
mull
sbb
jp
insb
scas
adc
inc
jo
mov
mov
adc
test
out
pop
sub
scas
insb
sti
lcall
xchg
idiv
in
or
add
jecxz
xchg
rclb
inc
subl
cwtl
subb
sbb
jecxz
jge
mov
cmc
es
pop
or
sbb
or
adc
cmc
cmp
pop
stc
mov
hlt
dec
call
jmp
ljmp
xor
sbbb
sbb
mov
mov
mov
xchg
mov
sti
int3
push
mov
inc
aas
cmp
mov
xor
dec
lret
in
jl
out
enter
dec
jg
inc
lcall
xor
aaa
aas
inc
mov
push
fisubrl
loopne
pop
sub
mov
xchg
mov
jg
cld
popl
imul
cmpsl
pusha
add
orl
and
in
mov
pop
lret
push
push
ljmp
icebp
repnz
test
xor
mov
or
add
or
rorb
test
push
mov
test
inc
and
cltd
xchg
fsin
jge
test
sub
loop
filds
add
std
dec
bnd
xor
adc
pusha
mov
dec
mov
je
and
mov
fadds
notl
jmp
mov
or
inc
out
stos
ficompl
add
inc
jecxz
xor
ffreep
aad
fucomp
out
mov
into
push
lret
cmpsb
daa
ss
jp
cmp
and
push
rol
int
jnp
jo
cmp
push
ja
ss
shlb
popf
xor
bound
pop
out
fdivrl
call
rcll
mov
xchg
xor
inc
testb
xchg
jl
data16
vprotb
pop
mov
outsb
nopl
jb
mov
jp
aas
pop
push
jne
inc
sbb
inc
cmpsl
xchg
mov
sbb
push
adc
fidivrl
inc
pop
push
gs
je
add
shrb
stc
sub
pop
cmpsb
sbb
push
fdivrs
mov
push
loope
inc
loope
test
mov
xchg
mov
lods
xchg
mov
mul
and
psubw
sub
push
inc
out
dec
jmp
xchg
cltd
mov
aas
gs
mov
insl
cs
sbb
push
andl
imul
xor
inc
nop
mov
jo
add
ds
xchg
int3
test
xchg
jnp
cmp
and
aas
arpl
add
jle
mov
aam
cld
cmp
mov
jae
mov
cmp
andb
imul
into
movsl
iret
mov
xor
pop
out
test
inc
pop
movsb
xchg
lea
add
or
adc
les
cwtl
pop
ss
pusha
mov
adc
xchg
dec
mov
xor
mov
inc
iret
into
xor
aad
xor
inc
mov
arpl
sub
pop
and
repnz
adc
repz
aam
jo
push
movsl
adcl
mov
add
jmp
sarl
add
rclb
imul
std
push
mov
jecxz
ret
leave
sarb
xor
sbb
subl
sbb
int
pop
sti
mov
push
push
gs
ret
into
sbb
movsb
push
fldcw
or
ficomps
mov
push
or
xchg
cli
or
andl
out
aad
ds
inc
adc
orl
sbb
jecxz
jecxz
mov
mov
or
lock
fldl
mov
jo
jne
sbb
cmpsl
in
cld
shll
movsb
jp
cmpsl
mov
xor
lret
jl,pt
mov
lea
jno
mov
daa
scas
aam
mov
aad
pop
shl
das
lea
cmp
push
andb
mov
add
stos
ds
ret
into
xchg
mov
jp
or
or
pcmpgtb
pop
lea
enter
sub
adcb
adc
outsl
aad
xchg
adc
bnd
xor
mov
jbe
rcrb
mov
cwtl
pop
repnz
jl
sub
sbb
test
sbb
inc
push
or
in
mov
xor
sbb
fdiv
xor
je
sub
or
loope
mov
pop
pop
pop
cli
xor
pushf
mov
cmp
jae
cmp
flds
stos
xor
sbb
movsl
sbb
sbb
cmp
idivl
pushf
andb
sbbl
dec
imul
jp
jecxz
pop
repz
inc
sbb
xor
repnz
dec
add
repnz
add
mov
in
jecxz
mov
push
dec
pop
jp
aam
pusha
mov
inc
insb
xchg
lock
repz
jns
sbb
imul
xor
xor
adc
mov
pop
fs
mov
ret
mov
repnz
push
hlt
daa
lret
adc
lahf
aad
icebp
sub
and
jae
mul
inc
scas
inc
pop
add
or
sbb
aam
and
sub
and
jb
mov
filds
push
mov
xor
fstpt
mov
popa
push
inc
in
rcrl
mov
inc
int3
mov
mov
popa
pop
xlat
pusha
pop
or
call
rcr
jno
xorb
mov
loop
adc
movsb
jge
dec
gs
inc
pop
aad
dec
out
aad
mov
into
sbb
pop
test
fstl
xchg
adc
stos
repnz
sbb
and
and
push
mov
pop
fsubrs
in
outsl
in
cmpl
mov
fisttpl
mov
loopne
mov
dec
orl
add
sbb
lds
gs
test
or
jno
dec
sub
test
pop
out
frstor
inc
fldenv
sarb
out
xor
ret
pop
pushl
mov
shll
add
mov
jp
testb
out
adc
int3
sti
loopne
jl
adc
mov
push
sti
mov
xchg
mov
lcall
jmp
ds
cltd
dec
ss
inc
ss
enter
push
mov
std
rcrl
mov
imul
add
dec
ss
shlb
mov
ss
pushfw
sti
andl
and
push
icebp
pop
xor
outsb
loope
pop
jle
popf
scas
pop
jb
dec
add
dec
fucomip
cmpsb
xchg
sti
out
mov
idivb
sub
dec
cmp
mov
fstpt
es
shr
or
cmp
mov
jne
sbb
decb
add
dec
in
xchg
pop
and
sub
insb
add
xor
and
xchg
jbe
lods
push
jg
mov
or
xchg
push
pop
ja
or
or
into
push
inc
fbld
xchg
mov
add
nop
adc
jmp
pop
popf
cs
jbe
mov
xchg
adc
and
dec
jge
cmpsb
ss
push
rcl
lcall
inc
mov
mov
and
dec
insl
jp
jp
cwtl
movsl
add
test
test
ljmp
cld
dec
lea
test
push
xchg
fwait
dec
nop
ss
dec
xor
mov
mov
sbbl
dec
sub
rcr
incl
inc
push
sbb
cmp
sti
add
sbb
outsb
sbb
into
jbe
jecxz
aad
das
mov
dec
cli
add
push
xchg
xor
dec
xchg
loop
xchg
sbb
mov
lock
pop
inc
call
aad
mov
mov
sbb
cmpsl
js
jne
xchg
repnz
mov
cmp
jl
sti
mov
xchg
push
lret
jno
fnstenv
mov
dec
inc
adc
in
sub
mov
lret
cmp
mov
or
pop
xchg
lret
sbb
mov
mov
les
jne
fsubrl
sahf
xchg
mov
mov
mov
jmp
outsb
inc
stos
sbb
mov
jo
into
loop
cmp
xor
and
inc
pop
adc
sbb
inc
fidivs
movsl
pushf
stc
adcb
iret
pop
push
push
jmp
cmpsb
or
mov
int3
jl
push
and
scas
repnz
mov
fisttps
jmp
stc
fwait
inc
inc
pop
mov
cmpsl
scas
adc
data16
mov
jns
adc
mov
xor
outsl
stos
dec
into
ja
xorl
fs
jl
mov
xchg
mov
mov
out
jecxz
lds
jb
sub
rorb
mov
pop
mov
push
push
fcmovu
xchg
fstl
pop
xor
ret
shrb
movsl
aam
out
fmuls
enter
mov
fildl
sub
inc
push
ja
shlb
mov
ds
push
addr16
mov
ficoml
jb
mull
xchg
and
cmp
jl
and
cmp
lock
popf
dec
and
ficomps
push
push
aad
pop
movsl
out
push
ret
inc
mov
in
stos
add
push
gs
pop
cmc
sub
pop
leave
inc
pop
mov
mov
subb
mov
fwait
aam
dec
fmul
aas
cmp
pop
dec
andl
lret
add
roll
aad
xor
cld
scas
testl
xor
std
gs
cmpl
pop
mov
fidivs
enter
mov
sbb
mov
lock
out
xor
mov
add
addr16
icebp
jb,pn
cmpsl
mov
ss
xor
in
ja
lcall
mov
mov
cmp
mov
dec
or
pop
scas
mov
ljmp
sub
cmp
scas
jb
push
cld
pop
dec
lret
std
stos
push
jnp
cli
xchg
adc
mov
lods
and
insl
lock
xor
out
aam
icebp
mov
pop
push
cmp
adc
call
mov
xlat
add
cld
bound
cmp
into
loope
xor
cwtl
pushf
push
enter
lret
ja
cld
mov
dec
xchg
cltd
roll
lret
mov
nop
add
cwtl
ja
arpl
dec
js
mov
js
fsubrl
jmp
data16
push
mov
or
jnp
sub
popf
xor
cmp
jo
jb
jo
mov
or
mov
add
cld
int
out
lahf
aad
jno
movsb
jp
jne
stc
adc
push
and
adc
push
sbb
movsb
insl
sbb
ret
adc
mov
push
push
aaa
aad
lods
sub
pop
mov
lods
fbld
mov
mov
mov
js
ds
leave
cmp
adc
stos
and
inc
ds
rcrl
push
push
adc
xchg
jle
push
test
sbb
adc
and
mov
in
jle
test
lea
cmp
sub
adc
mov
push
cmpsl
popa
pushf
testb
cwtl
and
stc
sub
push
sub
pop
sub
test
sub
mov
fadds
xchg
pop
xor
cmp
add
popa
loope
xchg
or
jp
imul
pop
jno
movl
jg
test
insb
pop
mov
incl
inc
shl
fwait
and
stos
loop
in
sbb
pop
stos
test
fs
stos
push
repz
sbb
pop
mov
ljmp
xchg
and
fst
jg
scas
scas
add
sahf
int3
fiaddl
stos
cmp
or
mov
cmp
and
out
testl
add
mov
scas
fistps
aad
js
pop
rol
mov
pop
clc
xor
jmp
push
lahf
loopne
push
stos
or
push
push
loopne
incl
std
sbb
cltd
mov
sbb
push
jne
dec
loope
insb
sub
push
je
mov
pop
fsubs
es
mov
mov
data16
pop
ret
test
lret
call
js
sti
sub
movsl
dec
mov
stos
mov
fisubs
mov
dec
dec
cwtl
xchg
mov
mov
xor
dec
sbb
mov
add
push
sarl
xchg
insb
xorl
sub
int
cmpl
adc
andb
push
arpl
aad
outsl
mov
aam
jo
dec
das
out
xchg
or
fidivrs
loopne
sbb
into
push
push
and
xchg
push
pop
fsubl
add
pusha
test
mov
or
mov
cmpsl
hlt
lea
mov
dec
pushf
mov
clc
adc
jl
sub
stos
adc
loop
sub
sub
push
aad
mov
jb
mov
daa
push
popf
xchg
js
lock
loopne
je
cmpsb
xchg
inc
push
nop
xor
js
sbb
mov
sar
rcrb
sbb
mov
push
sub
sub
out
add
sub
dec
rorb
cmp
xor
sub
inc
sub
and
xchg
adc
sbb
pop
and
mov
cs
popf
out
inc
arpl
mov
mov
outsb
scas
pop
lds
lret
lds
fcompl
aad
pop
shrl
test
nop
fistps
out
inc
fnstcw
jns
mov
sbb
sahf
xchg
xchg
aaa
pushf
rcll
lret
dec
sub
insb
cmpb
pop
sti
lcall
cmp
mov
sub
lods
and
je
dec
lahf
stos
sub
repz
inc
cwtl
and
clc
lret
cmpsl
repnz
sub
cltd
pop
popa
dec
outsl
pcmpgtd
dec
mov
mov
or
ss
pop
push
cmp
mov
push
sub
notl
stc
jmp
jns
in
dec
jge
loopne
xchg
shlb
inc
ret
inc
xchg
jl
xor
pop
pop
imul
lods
sub
test
sub
sahf
mov
mov
push
mov
call
xchg
dec
cwtl
dec
add
mov
lods
push
scas
shll
xorl
out
adc
xchg
pop
out
jmp
lock
mov
sub
mov
imul
xchg
mov
mov
jp
mov
dec
and
cmp
insb
cmpsb
inc
je
cmp
dec
inc
inc
stc
sub
std
cmp
and
cli
and
sub
xor
loopne
jg
cmpsb
dec
sbb
and
or
jp
clc
int3
inc
cs
fwait
aad
adc
pop
jg
cmp
fidivs
sbb
cwtl
bound
int3
ss
leave
stos
fisttps
cwtl
aas
mov
scas
pop
pop
shrb
jle
inc
xchg
popa
in
mov
push
shl
inc
push
jo
addr16
cli
and
xchg
test
pusha
jg,pn
xlat
test
and
inc
mov
add
and
inc
mov
dec
das
xchg
xor
shll
mov
std
push
arpl
sbb
mov
add
cld
sub
movsl
dec
fcmovnb
pop
andb
and
loopne
adc
push
cmp
movsl
pop
xchg
cld
xchg
hlt
mov
push
bound
dec
les
push
push
idiv
sub
pusha
fs
jno
cmp
xor
lret
mov
inc
sub
jle
mov
inc
fldenv
in
dec
imul
sub
shlb
je
inc
mov
adc
mov
mov
dec
mov
mull
loope
shlb
sbb
push
pop
hlt
les
mov
or
mov
xor
popa
and
je
cmp
mov
mov
xor
or
jmp
out
jmp
ret
lods
lahf
sub
rcr
shrb
pop
mov
inc
lret
sub
ds
add
mov
jb
mov
in
fs
inc
xchg
cmc
test
dec
loopne
xor
cmp
inc
out
dec
cli
popa
hlt
jb
sbb
movsl
clc
shl
js
leave
mov
dec
stc
and
call
popa
adc
xor
xor
pop
in
push
inc
in
lods
stc
jp
in
sbb
cmp
xor
mov
shlb
or
push
clc
rcrl
add
sub
xchg
out
lea
mov
xchg
rorb
fs
stos
dec
incb
pop
jmp
push
aas
cmp
icebp
mov
cltd
notb
push
mov
repnz
jo
xchg
inc
xor
jns
dec
lahf
test
movsb
push
imul
cmpsb
fsubrs
cmpsl
adc
sti
and
push
lcall
mov
or
mov
adc
pop
sbb
ljmp
sbb
cmp
push
mov
pop
and
arpl
dec
sti
mov
popa
addr16
push
sub
movsb
lds
dec
xchg
push
jge
and
repz
jecxz
sbb
std
xchg
or
cwtl
cmp
lret
lahf
ret
mov
vmovaps
cmp
repz
mov
cmp
aad
sbb
aaa
push
data16
xchg
jno
push
sbb
lcall
rol
shll
cmpsb
jmp
mov
test
push
test
xor
mov
xor
sub
mov
push
mulb
xor
push
fdiv
sti
sub
shll
sbb
into
or
jge
push
jnp
mov
sbb
xlat
and
das
fnstcw
imul
cmpsl
mov
ret
arpl
pusha
out
and
movsb
mov
scas
jno
sub
ljmp
loop
pop
adc
aad
inc
mov
dec
fisubl
sbb
inc
lcall
and
and
lods
imul
inc
mov
addr16
dec
mov
xchg
mov
dec
mov
pushf
dec
repnz
stc
arpl
mov
loop
adc
sbb
out
mov
mov
daa
test
fsts
aam
sbb
nop
stos
jp
mov
jb
mov
mov
dec
mov
jb
mov
sbb
sahf
jne
test
pop
ljmp
jns
outsl
push
adc
test
aas
es
outsl
mov
std
dec
sarl
cli
mov
push
push
aad
adc
test
jp
rclb
sub
jo
jecxz
jp
and
shrb
pop
add
ficoml
inc
push
lahf
xor
dec
push
sub
popf
sub
push
adc
mov
cld
mov
and
push
xor
and
out
xor
xchg
and
stc
xor
loope
push
iret
movsl
adc
inc
push
aaa
cmp
test
inc
into
repz
test
mov
or
sbb
arpl
jne
cwtl
push
sbb
mov
cmc
adc
aaa
jl
test
ret
repz
inc
popf
sbb
aad
jge
push
ss
lret
mov
dec
es
iret
hlt
adc
jnp
mov
loopne
sahf
pop
cmp
sub
jg
aad
pop
dec
je
lea
incb
ret
cmp
sbb
je
push
push
cmpsb
sub
mov
fimull
sub
jns
add
xor
stc
pop
stc
adc
lcall
inc
sub
mov
adc
fists
rclb
sbb
ficompl
cs
mov
out
push
add
sbb
mov
test
cmpl
imul
das
pop
lock
jnp
mov
aam
es
mov
clc
xchg
or
push
dec
sahf
pop
mov
or
pop
xchg
jmp
clc
sbb
or
lret
fdivrl
jge
and
loop
int
inc
movsb
mov
clc
pop
cwtl
mov
xor
inc
je
add
pop
fwait
and
loope
pushf
mov
clc
dec
sbb
lea
orl
xor
rol
fs
push
pop
cld
rcrb
shll
ret
push
aas
and
repnz
lahf
pop
pop
jbe
repnz
test
cli
or
jne
fnstenv
xor
or
inc
sbb
sbb
mov
mov
sbb
mov
mov
inc
mov
mov
push
and
repnz
sbb
iret
jg
sub
mov
add
clc
sbb
outsl
jne
imul
pop
mov
fcmovnu
cmp
rcr
lods
stc
stc
pop
jg
add
ds
xchg
or
push
sarl
adc
outsl
andb
fs
stc
out
xchg
lds
out
add
push
adc
push
and
cmp
mov
add
nop
pop
jle
stc
xor
mov
repz
xchg
and
mov
in
scas
add
subl
shl
jns
sub
loopnew
and
mov
testb
inc
jg
sbb
and
jns
and
push
xchg
sti
sub
cli
fmuls
ds
inc
nop
pop
xor
insb
imul
dec
sub
xchg
and
mov
add
pop
cmp
push
push
xchg
mul
mov
bound
rcrl
or
push
fcoml
test
push
sbb
or
sti
xor
mov
insb
out
test
outsl
sub
subb
push
loop
out
push
mov
mull
add
or
adc
or
test
cs
pop
xor
adc
mov
std
in
push
je
lcall
imul
rcrl
lea
mov
cmp
pop
adc
and
mov
and
cmp
add
mov
aam
dec
jmp
add
in
dec
mov
ljmp
lds
xchg
pop
hlt
adc
pushf
sahf
cmpl
aam
dec
cmp
xor
mov
sub
popf
push
sbb
mov
sub
test
std
mov
test
popf
cmp
mov
mov
clc
pop
push
sub
mov
ds
stc
stc
lahf
xchg
pop
in
pop
xor
pop
mov
cmpb
mov
and
mov
fsub
outsb
inc
ljmp
lret
sub
and
xchg
insb
push
loopne
lea
mov
pushf
cmp
sub
std
je
and
push
and
cmp
ds
in
icebp
add
call
fwait
adc
mov
push
mov
movsl
cmpsb
outsb
mov
or
mov
sub
or
scas
call
push
mov
lock
test
test
aad
push
or
jbe
dec
stos
lock
push
mov
movsl
ret
inc
aad
push
subb
add
and
lods
js
mov
outsb
mov
es
xchg
loop
rorb
sub
and
jo
mov
insl
dec
or
xchg
adc
leave
sub
push
mov
and
mov
and
lahf
insb
cmp
sub
mov
test
mov
xchg
ret
xchg
push
mov
inc
lea
mov
loopne
test
sub
enter
mov
pop
push
sub
insb
stos
cs
in
adc
in
mov
mov
cld
xchg
out
mov
mov
mov
pop
sub
add
adc
out
popf
test
mov
cmp
sub
out
jno
pushf
jge
mov
test
jnp
out
and
hlt
cmp
sub
and
call
xchg
adc
ljmp
jp
sti
adc
mov
mov
jmp
add
xor
lea
in
jnp
fs
cltd
in
mov
or
add
adc
mov
inc
int3
sub
inc
cmp
mov
push
xor
das
lret
mov
and
inc
mov
stos
mov
daa
fcoml
jge
rcl
loope
add
jns
in
dec
xor
pop
nop
cmp
pop
sub
ja
popl
cld
push
ljmp
sub
bound
test
jmp
pop
nop
xor
subb
leave
mov
fcom
test
dec
enter
mov
jns
outsl
sub
push
pop
mov
push
movsl
mov
lcall
loope
into
cvtpi2ps
cwtl
inc
ljmp
aaa
imul
mov
mov
xchg
jo
popa
cmp
xor
icebp
iret
adc
xchg
or
imull
xlat
push
jecxz
and
dec
insb
out
enter
out
sub
pop
mov
mov
daa
cmc
test
stos
lahf
fistps
iret
sub
stos
sti
aam
pop
cli
cmpsl
lcall
pextrw
call
push
sbb
test
and
jge
mov
xlat
and
scas
scas
test
out
pop
faddl
in
mov
fstpt
pop
dec
adc
jle
test
jnp
cmp
and
in
jns
or
arpl
and
shrb
sbb
inc
ljmp
mov
outsb
adc
adc
inc
mov
pop
les
or
dec
aam
int3
sub
and
mov
imul
inc
and
push
sbb
xchg
cwtl
xchg
sti
nop
mov
insl
aas
add
jg
shlb
push
ljmp
cmp
test
mov
add
mov
jp
aas
sub
cmpb
jb
sahf
ljmp
scas
cmp
jmp
outsb
test
stos
cmp
sub
out
mov
ret
push
xchg
jae
mov
popa
roll
fidivl
pop
xchg
jo
sub
pop
jmp
push
xor
fndisi(8087
sub
push
sbb
jbe
sar
pusha
mov
or
aas
jno
add
or
pop
jno
add
or
xorb
mov
add
add
add
add
add
add
add
add
add
jno
add
add
add
jno
add
add
add
add
addb
add
in
jo
add
jo
add
jo
add
or
add
or
and
or
adc
add
or
push
jno
add
or
sub
add
or
xor
or
inc
jo
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
pop
or
mov
pop
inc
bound
jo
xor
clc
sub
mov
cmp
cmp
shrb
push
adc
loop
movsl
dec
out
popa
jmp
jmp
out
mov
xor
imul
lret
pushf
insb
ret
add
shll
das
or
push
add
or
stos
out
xor
sbb
popa
add
or
out
and
push
test
sub
lea
add
push
add
dec
cwtl
xor
dec
bound
or
in
add
icebp
add
rolb
adc
test
sahf
add
xor
xlat
dec
imul
mov
sbb
les
call
mov
bound
aas
cmp
shlb
and
xor
stos
jno
out
push
icebp
adc
or
fwait
sub
cmp
or
xor
adc
adc
add
mul
xchg
test
movsb
xor
jl
addb
and
in
bound
sbb
loopne
scas
andl
rcll
sub
sbb
dec
je
cmp
mov
cmc
adc
cmp
add
and
fiadds
inc
pop
ret
xor
inc
imul
cwtl
loopne
js
and
or
mov
xchg
or
push
add
push
push
pop
sub
in
xchg
js
jo
pop
hlt
sahf
or
adc
add
movsb
mov
add
jg
repz
and
push
or
and
sbb
scas
xchg
movsl
addr16
mov
sbb
sbb
pop
jns
orb
aad
mov
xor
sar
sub
add
lods
push
and
jmp
and
add
mov
dec
adcl
cld
adc
adc
dec
in
pop
in
xor
clc
xor
aam
jmp
sub
jns
xor
icebp
adc
lods
movsb
mov
jmp
insl
hlt
jl
xor
into
xchg
add
cmp
add
in
insb
enter
enter
pop
xchg
pop
mov
and
incl
add
mov
sbb
push
mov
sub
bound
rcrl
sbb
push
inc
fimull
sub
or
ret
push
adc
out
mov
sub
inc
jnp
and
and
out
cmpsb
inc
or
cwtl
scas
jno
mov
xchg
mov
inc
loope
push
and
xor
cwtl
add
jo
or
mov
push
mov
sub
add
push
sub
sub
xchg
lret
jle
es
out
adc
je
sub
or
pop
int3
stos
cmp
in
mov
adc
mov
fcompl
add
js
mov
mov
pop
lods
shlb
sbb
jbe
int3
repnz
sub
sarl
in
mov
lock
inc
cli
std
fdivrs
xchg
out
cmp
pop
ficompl
or
cmp
movsb
mov
negl
jae
add
outsb
jnp
adc
es
adc
push
or
imul
jmp
mov
adcb
cvttps2pi
or
sbb
inc
aas
inc
inc
inc
cmc
inc
inc
inc
inc
cmpsl
sti
add
inc
add
inc
add
dec
add
lds
or
imul
push
adc
push
and
mov
lahf
add
ret
add
les
movb
sbb
lret
lret
sbb
add
leave
rolb
data16
ficoms
jecxz
in
sti
sbb
cmp
pop
je
dec
pushf
add
mov
jecxz
mov
popf
inc
out
inc
out
xchg
add
shlb
js
fstpl
fcoms
add
sbb
adc
add
imul
jb
pop
jns
fmull
xor
add
or
cwtl
sub
and
xchg
mov
dec
movsb
gs
mov
loope
xchg
dec
and
inc
rol
add
into
push
shl
mov
xlat
aam
pop
push
jmp
stc
loop
sub
mov
testb
fs
xchg
std
pop
adc
leave
sbb
sbbb
out
orb
xorb
lds
in
call
cmp
or
adc
and
push
mov
jns
mov
dec
movsb
lret
and
fcmovne
add
dec
xchg
xchg
cmp
mov
adc
adc
movsb
inc
dec
sub
push
fwait
or
or
pushf
adc
mov
dec
or
or
sbb
mov
jo
add
or
mov
int3
jno
movsb
and
add
inc
fsts
add
push
push
and
and
and
sbb
and
xor
insl
and
push
push
push
cmp
push
iret
enter
jae
jp
xlat
test
mov
sbb
movsl
adc
xchg
adc
xchg
pop
mov
add
adc
ja
lret
hlt
sbb
stos
add
add
add
push
fwait
lods
mov
pusha
xlat
mov
sbb
ss
pop
rorb
pop
inc
mov
add
mov
adc
rolb
xchg
sub
xor
js
push
rcr
les
cwtl
pop
xchg
movsb
inc
test
or
xchg
mov
xor
jne
push
jbe
clc
inc
mov
mov
popf
add
roll
loopne
add
xchg
sub
or
xchg
sbb
or
push
inc
out
bnd
decl
insb
sbb
xor
adc
adc
add
mov
aam
lret
pop
jae
dec
add
pop
div
fisttpl
cmp
sbb
adc
sub
les
inc
sbb
shrl
pop
or
in
xor
xor
lcall
sti
fcomp
mov
jmp
or
or
xchg
mov
sub
xchg
add
mov
pop
push
fildl
sub
stos
enter
test
push
add
or
cmp
rcrl
nop
insb
push
dec
inc
or
sub
test
xor
aam
loope
arpl
or
sbb
fistpll
push
fldl
adc
test
fwait
jno
add
mov
push
fcomps
push
pop
les
enter
xlat
fbstp
dec
add
and
push
cwtl
addb
xorb
dec
push
subb
jle
or
add
jns
push
ja
les
lcall
fiaddl
or
mov
out
int3
je
cld
nop
pop
add
add
xchg
jge
fisubrs
add
add
jecxz
pushf
movsb
inc
or
cmc
adc
xchg
lea
js
inc
and
int3
stc
sti
or
inc
clc
loope
cmp
adc
outsb
adc
add
jnp
cmc
push
outsl
mov
scas
and
mov
push
sahf
shr
inc
jnp
fildl
inc
fisubrs
movb
inc
xor
pop
add
std
pushf
cmp
or
mov
cmpsb
xor
xor
and
adc
adc
paddusb
aam
add
push
or
addr16
call
in
enter
ret
sbb
and
hlt
ljmp
xchg
mov
pop
mulb
push
cmp
ds
mov
xor
cmp
test
cwtl
adc
xchg
inc
aam
pop
out
push
mov
mov
adc
mov
and
rcll
and
push
sub
xlat
nop
dec
cli
xor
mov
push
nop
dec
or
hlt
mov
popa
dec
push
sub
inc
push
or
lods
pop
cmpsb
sub
xor
enter
psrlw
les
push
mov
sbb
or
or
and
adc
cmp
test
insl
mov
or
jne
push
and
arpl
or
mov
lock
xor
or
add
rcrb
hlt
fst
fsts
add
dec
cwtl
icebp
inc
cltd
je
lret
add
push
nop
aam
loopne
cmp
filds
sbb
inc
lock
mov
bound
mov
mov
in
jne
sbb
dec
lods
scas
shll
sbb
movsb
jp
andb
dec
xor
add
icebp
js
add
sahf
aaa
sub
notl
push
or
les
add
dec
adc
mov
mov
enter
mov
out
mov
cmpsb
push
aad
cmp
popa
sbb
add
cmp
outsb
sub
adc
inc
inc
clc
xor
add
frndint
xchg
stos
cmp
push
dec
jle
mov
push
add
hlt
leave
daa
cmc
add
sbb
dec
push
and
or
sbb
std
mov
cmpsl
jmp
jmp
in
sbb
mov
xchg
xchg
cmpb
push
arpl
fsubr
or
pop
das
jnp
xchg
stc
xchg
mov
add
cs
pmaxub
cmp
or
inc
cmp
fsubrs
fnstenv
add
inc
icebp
ret
mov
dec
rolb
mov
mov
and
and
push
loopne
or
or
push
adc
jnp
add
lock
mov
mov
add
out
inc
out
out
pop
test
xchg
jne
sub
jmp
or
add
dec
mov
mov
jb
lahf
fs
icebp
push
sbb
mov
jno
loop
js
sbb
imul
add
aam
sbb
out
add
lds
movsl
xchg
adc
loop
add
out
jl
inc
inc
scas
cwtl
lret
push
stc
jo
fcomps
rorl
inc
daa
insl
add
jno
pop
pop
xchg
lret
jmp
hlt
add
sub
mov
js
jno
jg
shrl
add
xor
inc
xlat
repz
fdivrs
out
lods
adc
orb
or
add
xlat
jnp
mov
pop
fmuls
or
push
adc
push
inc
or
cmc
dec
addr16
in
pop
iret
push
lods
testl
fnstcw
dec
push
xchg
and
dec
lds
lock
push
add
dec
mov
in
xor
or
mov
mov
lds
sbb
xor
test
cmp
rcll
jmp
adc
pop
stos
jnp
add
lea
or
adc
inc
or
pop
jle
mov
add
pusha
leave
mov
add
or
add
iret
push
xor
les
sbb
bound
xchg
and
dec
insb
pop
dec
rcrb
jo
repnz
mov
mov
ret
push
and
pushf
sahf
bound
or
test
aaa
iret
lds
shlb
lods
fwait
pop
jp
push
hlt
sub
test
iret
movb
jae
sbb
mov
xchg
fisttps
bound
push
pop
cmp
jg
mov
shrb
sarl
cmp
dec
lret
es
mov
cmp
nop
sbb
pop
jl
scas
xchg
aas
dec
fimuls
cwtl
sbb
add
or
clc
mov
cmpsl
or
or
int
shrb
push
cltd
adcl
jb
dec
mov
shlb
or
push
call
fwait
and
addb
stc
data16
pop
fildll
pop
jmp
or
jl
sbb
ds
jns
or
add
lods
cmp
xor
int
into
movsl
loope
sub
mov
in
mov
add
out
mov
test
lods
add
call
inc
inc
mov
sub
roll
xchg
xchg
pushl
or
jne
jecxz
stos
inc
movsl
ss
cmpsb
pop
dec
or
push
mov
jno
cwtl
add
pop
push
jne
xchg
das
and
out
out
push
or
xchg
mov
mov
xlat
dec
orb
pushf
xor
add
int3
and
lcall
les
push
mov
jae
add
cmc
and
out
data16
and
leave
mov
in
in
push
dec
ja
xor
and
rolb
test
and
fadds
add
jo
rolb
and
fisubl
pop
adc
fstl
mov
xor
xor
add
sbb
insb
add
adc
in
xor
ret
pop
inc
clc
fildl
call
dec
sub
jge
add
shr
test
push
call
or
push
test
pusha
inc
movsl
dec
clc
add
sbb
movsb
pop
add
lret
add
xor
push
and
rorb
push
jg
fcoml
or
add
iret
adc
out
xchg
rorb
shll
push
pop
pop
add
push
and
sub
imul
shl
test
add
cli
mov
jb
and
add
mov
push
and
xchg
inc
add
sub
push
inc
jle
and
xor
xor
push
xchg
or
mov
inc
jmp
xor
push
rolb
xlat
adc
test
outsb
testb
xchg
cmp
mov
add
sar
mov
mov
decl
or
scas
sbb
out
and
cmpsb
icebp
into
and
jns
or
movswl
test
aaa
lsl
out
subl
pop
jne
ret
leave
add
aam
loop
mov
jmp
push
xor
add
adc
out
jp
mov
and
insb
jge
xor
cmovg
loope
aas
cwtl
lret
stos
scas
add
dec
jo
pop
pop
inc
cli
and
dec
push
mov
test
mov
cmp
mov
xor
xchg
popa
sbb
int
fadd
mov
movsb
add
shlb
mov
les
int
inc
ljmp
out
pop
pop
push
inc
jnp
adc
push
je
or
adc
jo
sub
aad
push
stos
lods
scas
and
sub
mov
outsb
popf
sbb
pop
not
and
push
jns
mov
pop
push
push
fwait
push
sbb
xor
mov
loopne
add
mov
inc
push
adc
aad
adc
inc
add
dec
xchg
in
cld
roll
lock
std
das
push
pop
pop
add
and
out
jle
not
loop
and
lret
push
dec
ds
lods
cmp
outsb
lcall
mov
das
push
pop
pop
push
inc
loope
inc
loope
orb
and
mov
int
imul
push
in
sbb
lock
icebp
cwtl
sub
iret
test
mov
bswap
jo
shl
mov
cmp
and
iret
cmpsb
lret
nop
icebp
arpl
dec
insl
push
je
mov
mov
and
add
test
add
inc
xchg
arpl
faddl
add
sub
daa
inc
test
adc
cmpsb
sub
movsb
pop
fadds
pop
cli
push
add
ljmp
nop
fcoml
repz
lret
fcmovu
andb
mov
jne
repz
adc
ret
lods
in
adc
cmpsb
call
aam
pop
pop
dec
notb
subl
mov
jne
test
mov
jle
in
pushf
xorb
push
int
shll
movsb
inc
testl
mov
xchg
dec
test
roll
int
add
leave
cmp
mov
dec
dec
ret
test
mov
mov
imulb
xchg
or
adc
int3
mov
xlat
filds
xor
push
sbb
mov
aam
sarb
popf
adc
push
movsl
mov
sub
ret
pop
sub
ficomps
jae
sub
jle
or
imul
add
adc
mov
xchg
ljmp
sub
xchg
fcoml
dec
dec
out
or
add
test
inc
wrmsr
xchg
ret
clc
das
cmp
add
iret
jg
add
mov
inc
xor
mov
movsl
xchg
sbb
mov
push
add
jmp
flds
or
cmp
add
dec
out
sbb
xchg
xor
rorb
adc
stc
adc
mov
icebp
or
sbb
cmpb
adc
lret
addr16
dec
add
fcoms
or
ret
mov
pop
loop
subl
lods
pop
es
or
enter
shll
or
les
push
addb
push
xor
sub
or
mov
jns
xor
xlat
jle
dec
cwtl
jecxz
push
jnp
fbld
fcmovnb
aaa
xor
int3
or
push
pop
pop
adc
gs
repnz
xchg
ret
sub
push
push
pop
pop
mov
shl
cld
repnz
push
xor
out
pop
push
xor
mov
adcb
loopne
shl
shrl
cmp
cmpsl
add
fwait
movsb
popa
leave
mov
dec
out
cmpsb
push
arpl
cmp
insb
xchg
pop
inc
xor
push
inc
movups
or
mov
cmp
mov
push
loop
pusha
insb
rcrb
test
not
fbld
loop
push
fs
leave
int3
add
or
lcall
xchg
sbbl
or
rorb
loope
notb
icebp
fcmovb
sbb
pusha
sub
mov
pop
pop
test
adc
push
popf
cmpl
ja
xchg
icebp
cmpsl
jmp
enter
ljmp
mov
or
roll
xchg
loope
cmp
shl
jae
sbb
mov
mov
dec
pop
ret
dec
mov
scas
in
mov
not
cmp
add
jo
push
mov
incb
mov
xchg
add
push
loop
inc
rorb
or
mov
pop
cmpsb
xchg
add
or
subl
aad
addl
cmp
push
test
pushf
sub
add
bts
fcmovnu
mov
jns
adc
cmp
sbb
rorl
push
adc
add
enter
es
pop
inc
dec
add
and
movb
sub
dec
lds
pop
in
and
mov
rcrl
orb
mov
repz
xor
adc
jo
subb
loope
inc
subl
aam
lds
add
nop
cmp
int
out
adc
in
pop
dec
or
lock
pusha
movsb
xor
xor
data16
mov
push
cmp
push
shll
mov
add
mov
fimull
push
mov
pusha
arpl
test
add
outsl
push
or
jno
rcll
dec
aad
and
xchg
rcrb
mov
les
rol
cltd
mov
push
js
pop
sbb
decb
sti
ftst
popf
mov
pop
pop
or
mov
movsb
popa
adc
ja
iret
dec
lret
jb
pusha
cmp
loop
mov
pop
test
sti
adc
adcb
add
pop
xor
push
inc
adc
loope
fdivl
mov
fildl
dec
bound
push
in
test
lds
andl
popa
cmp
gs
inc
movb
push
mov
push
neg
mov
pusha
mov
adc
flds
in
test
xchg
test
xchg
daa
mov
pop
not
xchg
rolb
rorl
cmp
add
insl
dec
add
mov
not
mov
pop
adc
ret
xor
fs
cmpsl
ja
adc
or
test
mov
xchg
cmpsb
hlt
stc
dec
shrl
lock
cld
or
push
popa
dec
rolb
adc
mov
test
pop
lret
sarb
in
or
sbb
inc
or
cmp
fwait
inc
test
fiadds
or
sub
call
je
dec
cmpsb
sbb
insl
or
jns
jbe
and
jmp
xor
or
loopne
pusha
stos
stc
ret
add
push
mov
ror
pop
jl
cmpsb
cmp
int
and
into
dec
add
mov
adc
mull
rclb
fstps
mov
mov
mov
push
bswap
sti
lea
pop
jp
mov
aaa
fincstp
sub
in
add
mov
popa
add
inc
pop
andl
pop
push
push
out
test
dec
cmpsb
xchg
pop
orl
adc
data16
gs
push
pop
pop
pop
pop
dec
stos
aaa
mov
mov
cmp
add
jecxz
mov
pop
adc
sub
adc
mov
push
pop
or
lcall
xchg
mov
pop
add
pop
dec
sahf
jle
sti
shrb
test
jo
sbbl
loope
sarl
add
das
bound
dec
sbb
jae
xor
inc
pop
jl
dec
in
bound
push
fs
dec
divb
shll
addl
mov
fnsave
insl
add
inc
scas
imul
rcl
imul
push
jne
push
adc
add
add
inc
outsb
ret
lahf
sub
shll
pusha
aaa
xchg
or
mov
mov
jecxz
setb
mov
mov
pop
pop
cmp
xor
jo
int3
add
or
inc
fistpll
ss
mov
adc
xor
movsb
outsl
test
in
pusha
into
jns
mov
jae
outsl
add
mov
jnp
push
jp
scas
addr16
mov
test
daa
or
insb
sbb
cwtl
bswap
testb
or
or
int3
adc
xor
data16
xor
pop
cwtl
lcall
push
das
dec
push
in
dec
dec
mov
and
xchg
push
sbb
dec
jne
loope
add
repz
add
data16
in
cmp
sub
or
filds
shld
inc
push
inc
sbb
testb
mov
mov
sahf
jne
pop
add
pop
gs
test
cld
add
adc
aaa
push
push
jae
push
std
leave
popa
repnz
scas
leave
repz
iret
mov
icebp
add
rorl
xlat
fstpl
dec
js
das
imul
cmpsl
mov
loop
lods
popa
cmp
in
ds
jae
dec
lret
xor
lds
push
jo
pop
ljmp
xor
cld
sub
clc
sub
sbb
call
push
pop
adc
and
inc
jns
mov
mov
leave
ja
jbe
pop
out
insl
adc
xor
inc
arpl
nop
leave
xor
lds
mov
aas
add
inc
dec
aaa
xlat
test
push
les
push
add
mov
inc
push
pop
and
or
dec
int
rcrb
push
inc
pushf
add
iret
int3
into
mov
pop
out
add
and
xor
push
rorb
movsl
out
mov
jns
push
mov
xlat
dec
dec
dec
and
rorb
mov
inc
xor
inc
lret
sarb
mov
sub
loope
add
test
xor
lret
add
fldcw
and
idivl
cs
outsl
movsb
rcr
mov
fcomip
push
out
inc
mov
ficompl
xchg
and
mov
aad
mov
and
pop
test
cwtl
cmc
test
jae
xchg
inc
xor
fs
and
icebp
mov
jns
fnstcw
nop
lahf
nop
xor
xchg
and
sbb
adcb
mov
std
ds
and
xor
out
mov
and
inc
setno
cltd
push
lea
in
rorb
std
dec
push
das
push
subl
or
sbb
addl
cwtl
mov
jnp
mov
mov
cltd
pop
nop
cwtl
mov
pop
adc
leave
mov
xlat
dec
out
js
aaa
cwtl
mov
adc
or
pop
xchg
outsb
xchg
pop
xchg
ds
adc
cmpsb
test
movsl
lea
push
call
popw
add
addr16
jo
inc
shlb
je
xor
test
dec
xor
rorl
inc
add
lods
mov
out
pusha
inc
mov
nop
adc
out
xchg
cwtl
ret
lds
rolb
inc
sbb
cmp
dec
inc
pop
and
sub
add
fwait
mull
push
iret
test
xor
cli
adc
loope
ret
push
jae
std
mov
xor
ret
into
add
pop
cmp
mov
inc
dec
and
dec
dec
outsl
rcr
push
pop
pop
sub
shlb
push
decb
lahf
int3
cli
aad
jnp
adc
mov
in
pushf
hlt
pop
lahf
dec
pop
jbe
insb
inc
sub
mov
adcl
add
fcmovne
xchg
andl
dec
jg
and
pushf
arpl
inc
ficoms
and
mov
shl
daa
push
pause
jmp
mov
inc
push
das
outsb
ret
or
mov
out
pop
pop
ret
test
xor
pop
jge
sbb
fmull
add
sub
jne
jns
add
inc
data16
push
iret
call
pusha
mov
jns
pop
test
arpl
add
adc
das
mov
or
mov
faddl
fadds
enter
push
sbb
mov
cwtl
rolb
xchg
arpl
ret
jne
inc
fiadds
dec
fisubl
mov
aam
icebp
cs
xchg
adc
test
cwtl
faddl
imul
pop
adc
repnz
inc
ret
icebp
ljmp
not
popf
sbbb
sub
jno
aad
cmp
shl
xchg
popa
gs
enter
xchg
add
and
iret
dec
xor
out
jg
leave
cmp
xor
xor
hlt
jl
cmp
xchg
xor
mov
loope
adc
dec
test
test
mov
inc
pop
incb
roll
mov
sahf
xchg
mov
enter
pusha
push
jb
sbb
test
cmc
adc
mov
adc
inc
push
dec
cmp
je
flds
adc
inc
push
xchg
jae
xor
mov
aas
test
adc
repz
inc
cwtl
mov
or
mov
pop
int3
or
sbb
repz
push
pop
inc
mov
addr16
sti
cmp
push
mov
loopne
loop
jo
rclb
sti
fcmovb
out
setb
xor
out
add
leave
fdivs
cld
mov
int
dec
mov
and
push
cmp
push
fidivs
push
inc
testl
add
test
pop
rcl
aaa
jo
cli
aaa
or
push
testb
cltd
jns
sbb
ss
ret
pop
sete
dec
fisubl
push
aaa
or
cli
and
sbb
fidivl
imul
fs
add
pop
fildll
or
bound
loopne
pop
mov
sbb
push
push
adc
test
aaa
pop
dec
push
cmpsb
xchg
xor
pop
pop
orb
pop
sbb
daa
adc
mov
jl
lock
repz
pusha
and
outsl
push
jno
nop
lods
push
iret
jnp
add
inc
cmp
pop
xor
add
adc
neg
mov
mov
into
imul
pop
fnstsw
pslld
mov
add
pop
popf
jbe
mov
cwtl
adc
push
mov
xchg
jp
push
rorl
mov
filds
shl
outsl
xchg
dec
adc
xor
pop
and
je
stc
xor
mov
mov
inc
xor
fldenv
add
jne
jp
cwtl
push
fdivr
push
mov
sub
mov
repz
pop
in
outsl
mov
stos
xor
or
out
cmc
sbb
sbb
mov
inc
dec
mov
bound
int3
scas
add
cmp
repz
out
or
lds
xchg
es
test
or
sbb
push
or
cli
push
mov
lret
mov
rolb
and
sub
sub
enter
int
dec
aaa
jg
popf
inc
sub
and
add
dec
movsb
lea
out
dec
lret
fnsave
mov
or
sub
inc
arpl
insb
adc
shrb
cmpsb
fwait
pop
jp
or
mov
out
call
shrb
testb
or
add
cmpsb
mov
push
cmp
sarl
loopne
addr16
jmp
popf
test
sub
testb
mov
pop
sbb
ss
leave
bound
sub
cmp
adc
inc
add
imull
sub
adc
lea
adc
aaa
or
sub
and
mov
sarb
push
jecxz
fimull
add
add
jp
xchg
pop
lret
icebp
add
lret
mov
jmp
and
inc
sahf
sahf
mov
xor
js
sub
or
data16
cmp
aas
mov
or
negl
mov
es
cltd
add
dec
test
xchg
icebp
adc
push
inc
xchg
out
dec
scas
pop
lcall
enter
add
dec
mov
xlat
inc
xchg
pop
shlb
pop
jno
cs
cmp
add
xchg
insl
cmc
mov
mov
lock
xor
add
fstpt
pusha
aad
enter
adc
aas
inc
test
stc
in
mov
cmpsb
sahf
push
nop
scas
push
xchg
push
mov
mov
das
cmp
mov
mov
or
or
jo
mov
push
out
pop
imul
jnp
dec
sub
dec
or
dec
xor
lret
push
cmpsb
rcll
jne
cmc
je
xchg
out
int3
cmp
into
lahf
dec
xor
les
mov
pop
add
push
dec
adc
jae
mov
jns
mov
pop
jnp
loope
fdivrs
push
pop
jg
jecxz
push
pop
int3
or
cmp
fwait
sub
pusha
inc
out
fcoms
ja
inc
jo
flds
xor
sbb
test
jno
adc
test
mov
pop
add
mov
out
sub
shll
jp
adc
lods
mov
stos
mov
fs
fstps
mov
addb
and
add
loopne
xor
mov
inc
pop
xor
adc
cmp
nop
shll
jecxz
add
mov
inc
ret
cwtl
mov
icebp
or
outsl
cmc
and
push
call
es
jecxz
or
dec
outsb
mov
bound
mov
cmpsb
xchg
push
and
or
pop
cwtl
cmc
jns
fcoms
sub
mov
std
addr16
and
xchg
push
es
lock
imul
inc
push
loopne
inc
nop
jns
sub
in
sub
jp
jnp
cmp
add
mov
inc
test
shrl
dec
push
inc
inc
mull
push
loopne
rcr
dec
popl
push
aad
pop
pop
or
sbbb
fstpl
nop
adc
stos
test
pop
inc
inc
mov
or
xor
test
sub
inc
jecxz
fwait
mov
xchg
and
cld
xorl
mov
imul
xor
inc
ds
cmp
adc
imul
test
fwait
xlat
clc
shlb
das
sub
ss
xor
pop
adc
adc
push
xor
inc
push
add
sub
repz
dec
subb
and
and
out
push
adc
mov
lcall
adc
aaa
aas
int
jo
out
movsb
outsb
pop
and
inc
mov
xchg
in
pusha
test
mov
or
add
ret
add
hlt
or
inc
cmp
xchg
mov
mov
nop
cmovbe
sbb
pop
mov
sbb
jnp
dec
mov
int3
js
dec
xchg
nop
outsl
sub
xchg
sub
ret
dec
xor
leave
add
sbb
repz
fwait
cmpsl
sub
inc
add
xor
dec
ret
cwtl
xchg
das
jb
mov
or
jl
out
pushf
mov
adc
imul
pop
sbb
scas
sub
and
lcall
scas
sub
mov
scas
test
movl
xor
jg
pop
out
lods
cmc
xchg
loope
movsb
repz
ret
rcrl
ljmp
fisubrs
shr
outsb
ss
out
jno
push
test
sti
mov
out
mov
inc
mov
pop
jmp
lds
xchg
cld
mov
sar
mov
in
hlt
pop
sub
jbe
test
clc
jle
mov
cmpsb
out
out
repnz
mov
mov
sahf
rep
jno
loopne
lcall
outsl
int
movsb
push
sbb
push
jbe
cmp
jne
ret
fcomps
out
repz
sti
stos
test
int3
inc
nop
rcrl
mov
sub
fcomp
jbe
test
ds
mov
jecxz
sbb
andb
test
jle
addb
xchg
pop
popf
mov
push
pusha
cwtl
nop
push
call
sub
hlt
xor
roll
jmp
xchg
lret
or
sarl
mov
movsl
stos
fucomp
pop
scas
sbb
cmpsb
pop
mov
in
test
int
xlat
insl
mov
xchg
out
push
ret
pop
out
int
mov
ljmp
test
push
sti
lea
mov
mov
aad
xchg
ret
fst
mov
aad
nop
xchg
push
xorl
in
sti
mov
pop
ret
incb
cmp
pop
dec
cmpsb
adcb
jne
xchg
repnz
sti
loop
addl
cld
lods
call
aad
in
pop
mov
outsl
push
mov
mov
mov
insl
test
into
or
adc
pop
xor
jns
adc
xchg
xor
mov
imulb
cmp
movsl
adc
dec
mov
jbe
pop
push
sub
jae
pushf
adc
out
stos
scas
mov
or
push
scas
insl
sbb
stc
or
loope
push
cwtl
sub
pop
nop
pminsw
cltd
cmc
xor
dec
sbb
mov
outsb
cld
mov
loope
adc
sti
jge
and
out
and
rol
popf
stos
call
sbb
icebp
pop
ror
fcoms
aad
in
leave
shlb
test
aaa
in
inc
rclb
add
sub
add
push
lcall
jo
pusha
orb
stos
aaa
mov
xchg
and
jl
loop
lcall
push
int
ljmp
jp
in
fwait
std
sti
pushf
fwait
sti
leave
xchg
sub
and
out
int3
or
xchg
or
pushf
mov
lret
xor
push
pop
fdivrl
mov
inc
xchg
movsl
lods
loop
iret
xor
or
jne
jle
call
test
pushf
inc
lods
out
scas
in
sbb
fcom
pop
mov
mov
cmpsl
scas
stc
or
mov
fstps
aas
add
movsl
push
pop
pop
sbb
lret
out
pop
jecxz
popa
pushf
jp
cli
andl
inc
lea
jae
dec
out
movq
mov
dec
ds
xchg
lods
out
jecxz
ret
fcoms
inc
push
imul
lods
cwtl
adc
orl
scas
push
jne
insb
shrl
pop
fidivrs
popf
and
aam
add
and
lods
push
rol
scas
jmp
les
sahf
inc
mov
inc
fsubl
xor
mov
lahf
fsubs
and
jb
cs
mov
cli
xchg
mov
mov
add
movsb
xorl
sbb
mov
sbb
nop
enter
cmc
lods
sub
repz
inc
outsb
or
ss
outsb
mov
sub
xchg
mov
movsl
inc
in
notb
inc
add
sbb
enter
and
fs
daa
xchg
pop
leave
jae
cmpsl
into
lds
fstp
dec
sbb
xor
xchg
jnp
add
mov
ljmp
push
pop
pushf
pop
int3
dec
faddl
fstpt
pop
fcomi
popf
lds
add
cmp
jl
sub
mov
fld
inc
mov
gs
rcl
add
jl
xor
int
mov
mov
stos
or
inc
mov
cvtps2pi
inc
fnstsw
aad
sahf
xchg
sar
and
mov
push
and
dec
sbb
adc
leavew
rorl
jae
faddl
inc
add
test
sub
rorb
test
sbb
push
xor
mov
lret
sbb
adc
xlat
jns
xchg
xchg
mov
cli
shrl
fdivl
mov
rcl
rcrl
and
roll
out
inc
sub
nop
or
cli
ret
sar
arpl
and
mov
les
jmp
push
jae
repz
sti
fs
repnz
int3
call
add
sbb
mov
or
lret
cmp
inc
cmpb
inc
mov
mov
insb
popa
inc
dec
xor
addr16
int
rorb
inc
leave
add
jno
cmp
mov
aam
sti
stos
loop
or
scas
fidivl
out
imulb
push
test
cwtl
push
mov
sub
and
adc
dec
sbb
jbe
add
pop
cmp
in
mov
mov
jo
push
xor
cwtl
push
sub
sub
mov
cli
mov
dec
hlt
jb
mov
add
xchg
rep
arpl
fldt
sub
imul
pop
mov
sbb
out
idivl
xchg
shlb
jbe
inc
out
int3
hlt
lret
test
mov
jns
fwait
out
cmp
or
sub
lods
shlb
jle
inc
das
roll
mov
inc
adc
lods
aaa
jl
sub
xor
imul
push
ret
pop
inc
movl
fwait
stos
push
out
pusha
fists
and
xchg
xchg
ret
xchg
inc
mov
ret
lods
mov
arpl
push
xor
inc
jmp
or
push
jbe
jns
js
repz
push
gs
mov
iret
xor
lods
pop
push
xor
xchg
mov
adc
cltd
test
mov
push
xchg
or
lods
fwait
or
mov
xchg
fmull
test
iret
fwait
lcall
ja
imul
test
setle
test
in
inc
push
sub
gs
cmp
mov
test
bound
in
xor
adc
stos
jp
push
icebp
sub
cld
stos
shl
popf
leave
icebp
jle
inc
sbb
mov
xchg
xchg
xor
inc
add
xchg
or
out
imul
adcl
insb
pop
jns
mov
mov
lret
mov
into
test
loopne
mov
inc
or
jb
ficomps
ds
xlat
cmp
popf
mov
push
movsl
push
insb
int
ror
lea
jo
into
into
and
push
pushf
ror
arpl
xchg
sarb
movsl
aas
push
aam
xchg
and
adc
adc
shll
xchg
lods
stc
lahf
xchg
fimuls
mov
cmp
les
fisttpll
aam
xor
xchg
daa
xor
or
add
loopne
cmp
xchg
popf
divb
sub
or
and
sbb
add
mov
xlat
gs
lcall
jns
int
inc
cmp
adc
add
dec
in
mov
jo
mov
test
jl
xor
xorb
fs
insb
lods
adc
push
pop
mov
jl
cmp
popa
fs
fwait
dec
repz
punpcklwd
rorb
aad
and
arpl
loop
sbb
fs
jns
jle
mov
inc
div
inc
pop
adc
jge
roll
xchg
xor
addl
cld
gs
scas
sbb
pop
aam
dec
cmp
mov
ljmp
inc
lock
addl
mov
mov
stc
lock
ret
xchg
inc
or
xor
repz
mov
mov
mov
sahf
fs
outsb
add
xchg
lods
loop
cmc
adc
fs
lods
cltd
out
cmp
icebp
inc
popf
xchg
pop
mov
cs
pxor
ret
xchg
int
fsub
loop
les
lock
inc
aam
pop
cmpsl
jno
mov
dec
ret
jne
jmp
mov
ret
xchg
and
sbb
je
adc
pusha
les
dec
and
xlat
mov
xor
in
lret
lahf
ret
test
pop
dec
arpl
adc
cmp
loop
stos
xor
mov
mov
cmc
ficoml
les
in
mov
xchg
dec
movsl
pop
gs
andb
rcrb
call
xchg
leave
imul
sbb
pop
pop
negl
int3
mov
addr16
cmpsb
rol
and
enter
xchg
rcrb
adc
shl
fstpt
mov
movsl
scas
sub
xchg
and
aam
cmp
pop
adc
jg
in
idivl
aad
test
mov
push
adcl
push
negb
adc
addb
sbb
xchg
pop
je
fimull
cmp
test
sbb
xchg
roll
jmp
test
jbe
mov
test
inc
sbb
sub
stos
inc
out
enter
rorb
mov
sbb
or
shr
mov
dec
ret
or
sahf
sbb
shlb
lea
outsb
int3
nop
sahf
aaa
sti
mov
mov
jp
sbb
jns
mov
andb
sbb
lret
pop
push
cld
mov
push
pop
fldcw
or
mov
cmovne
fldt
out
in
lods
cmpsl
cltd
ja
int
lds
adc
inc
mov
les
mov
xchg
xchg
rcll
add
dec
mov
sbb
mov
add
push
shr
push
imul
pop
add
clc
stc
add
jg
cltd
dec
xor
xor
push
neg
sarb
out
mov
and
adc
mov
pop
ror
mulb
dec
sahf
jno
mov
and
sub
nop
mov
add
xor
adc
arpl
ret
bound
inc
cmp
xchg
nop
lret
test
scas
cmp
imul
lret
push
loopne
mov
test
push
pop
xchg
lock
jg
sub
scas
int
dec
es
sahf
addr16
mov
fidivrl
imul
mov
pop
out
insb
dec
jp
cmpsb
pop
lcall
sbb
repz
sbb
add
cld
iret
pop
sbb
adc
sti
stos
sub
mov
insl
pop
int3
dec
xchg
ret
push
sahf
dec
bts
push
push
dec
push
lds
into
pop
std
sbb
push
nop
call
cld
sub
movsl
inc
push
mov
lock
test
cmc
mov
adc
enter
repz
add
in
lods
cmpsl
js
addr16
les
rcll
enter
lret
insb
push
xchg
sbb
scas
test
sub
and
test
jmp
mov
mov
jl
in
xor
xchg
push
mov
mov
nop
icebp
mov
mov
pop
mov
mov
ja
adc
sbb
lea
insb
mov
and
fdivrl
jecxz
xor
add
imul
daa
mov
ret
sub
ret
adc
ja
fisttpll
insb
add
mov
add
jmp
adc
adc
mov
fwait
mov
stc
xchg
das
mov
fmuls
arpl
mov
icebp
sahf
aad
sbb
mov
mov
jnp
mov
jns
pop
int3
cmp
stc
mov
pop
mov
xchg
shl
xchg
decb
stos
mov
cmpsl
enter
data16
adc
popf
sbb
ret
xchg
in
push
mov
ja
pop
inc
addb
sub
push
aad
xchg
xchg
cmpps
jg
rorl
sar
xlat
cwtl
mov
and
js
pop
mov
mov
ds
lds
frstor
imul
outsb
les
in
sbb
add
xchg
or
cmpsb
adc
xchg
or
cmc
jne
mov
sti
sbb
bound
inc
jmp
adc
stos
icebp
test
push
xor
outsb
fmull
lret
sahf
xchg
lcall
repz
outsb
fcmove
push
jecxz
clc
xchg
in
jle
push
pop
test
add
cwtl
cld
push
xchg
xor
ret
xorb
movsb
bound
adcb
in
xor
cld
jb
mov
divb
push
ror
insl
test
mov
sbb
xchg
shl
aam
push
mov
neg
sti
xchg
dec
and
push
mov
lods
adc
adc
jmp
xorb
paddusw
pop
subl
jecxz
mov
pushf
add
leave
mov
push
inc
arpl
fs
mov
jmp
xlat
cmp
rorb
cld
scas
pop
pop
lock
and
sub
xlat
and
mov
lods
jg
fcomi
data16
fmull
cmp
sti
out
xchg
ffree
cmpsb
mov
push
push
int
sti
push
pop
jecxz
faddl
pop
jecxz
push
test
out
sti
in
mov
jnp
into
or
imull
push
xchg
repz
test
dec
ljmp
and
jno
addl
and
cwtl
cmp
mov
add
pusha
mov
sub
jae
stos
rcll
add
loop
loop
pop
test
sbbb
stos
enter
cli
imul
inc
fwait
in
dec
roll
pushf
cli
rcll
inc
mov
mov
scas
jp
js
mov
iret
nop
stos
stos
lcall
xorl
pop
addr16
ja
sub
out
sbb
xor
push
out
lea
js
icebp
sbb
mov
xor
repnz
push
scas
fdivl
jmp
dec
fwait
ja
inc
jp
dec
fcom
adc
mov
pop
mov
mov
adc
sbb
mov
test
jb
jb
gs
push
adc
jge
lods
sub
mov
add
insb
mov
sbb
push
adc
push
int3
setns
mov
jmp
mov
int
mov
add
int
in
mull
adc
movl
in
push
mov
andl
jp
cmp
insl
mov
cli
lret
dec
xchg
or
movsb
scas
push
jae
pop
test
xchg
xchg
xchg
sbb
leave
popf
into
mov
sahf
daa
ret
jp
fisubs
pop
pop
icebp
cmpxchg
xchg
mov
mul
jg
je
test
test
sub
lcall
xor
jbe
sub
jp
and
adc
cltd
add
add
imul
ja
jmp
pop
xchg
add
movsb
dec
mov
and
addr16
xchg
sahf
inc
push
mov
mov
fnstenv
fstps
out
jl
loopne
mov
shlb
arpl
enter
pop
arpl
push
sub
fldl
push
or
out
sbb
lahf
mov
inc
mov
mov
xor
jecxz
pop
unpckhps
repz
jno
adc
xchg
jmp
pop
push
mov
mov
sub
fstps
lcall
or
ljmp
into
cmp
add
mov
aam
in
loope
mov
xor
inc
lods
lds
pop
xchg
insl
imul
out
out
insb
mov
sbb
fistps
test
jge
clc
jb
fdivrs
arpl
mov
out
xor
insb
pop
lea
add
push
cmp
xlat
or
jge
jl
xorl
bound
or
fstpt
sub
sarl
scas
jle
enter
xorb
inc
xchg
jb
adc
pop
cmpsb
xchg
inc
fidivs
xchg
xchg
add
lods
add
out
sbb
aam
pop
das
mov
mov
sbb
mov
stos
xchg
fwait
outsb
ja
mov
pop
sub
push
cmp
lcall
scas
xchg
dec
in
icebp
add
sti
popa
stc
mov
mov
stos
aas
ret
cmc
mov
mov
or
out
imul
mov
mov
sbb
imul
cmp
stc
push
jecxz
enter
adc
mov
and
loop
lods
popa
out
pop
lret
into
fwait
cwtl
adc
jns
mov
or
scas
mov
adc
dec
aam
xchg
pop
dec
cmpsb
ficomps
jle
add
idiv
lea
cmpsb
push
popa
mull
jmp
add
mov
js
leave
mov
int
dec
mov
push
in
fstp
fldenv
lret
int
mov
sahf
stos
xchg
cmc
shll
dec
xchg
mov
ffree
mov
std
cli
nop
psrad
and
out
cltd
std
xor
sbb
cmpsb
lods
bound
pop
cmp
inc
arpl
mov
sti
and
shr
int
shr
push
adc
iret
into
fldl
cli
fcmove
bound
jle
jmp
pop
aad
ljmp
xchg
dec
fistps
inc
xchg
ret
mov
xchg
in
outsb
xchg
sbb
insl
pop
outsb
out
mov
dec
rolb
jecxz
lods
adc
enter
inc
and
popf
nop
xchg
pop
aad
sbb
mov
es
gs
xor
cmp
test
movsb
and
loop
mov
cmc
test
mov
std
inc
insl
inc
cmp
and
shrl
sbb
clc
jmp
jno
rorl
jecxz
in
leave
repz
mov
popa
popl
loopne
push
mov
sub
aaa
iret
mov
jne
xchg
mov
adc
xlat
pop
xchg
adc
add
das
jle
sbbl
mov
xchg
das
jge
pushf
cmpl
jecxz
rorb
pop
cltd
cmp
add
lret
sahf
cmp
aaa
mov
xchg
lock
test
mov
cmpsl
mov
popa
stos
iret
sahf
cmc
dec
std
pop
jecxz
out
cltd
add
add
mov
mov
inc
das
cmp
daa
jg
mov
lock
xchg
ret
ror
push
xchg
xor
mov
out
sahf
outsb
xchg
pop
lcall
jne
push
mov
cmc
data16
and
out
xchg
mov
lods
stos
and
sbb
fwait
test
xchg
ror
fisubrl
bound
test
hlt
outsb
pop
fisubs
rcll
stos
dec
add
js
enter
xchg
sbbb
mov
sti
or
loopne
fsqrt
sub
xlat
rcrl
mov
icebp
fcmovne
sbb
push
int3
jb
nop
rcrb
adc
sar
sbb
popf
push
cmp
mov
movb
imull
lock
scas
adcl
and
je
fwait
ret
xchg
inc
fiadds
sub
cli
test
jns
int
xchg
cmpsl
test
nop
push
dec
repz
push
cld
insb
push
loopne
fs
sbbb
adc
sbb
in
stc
mov
sar
mov
into
mov
jle
mov
sbb
nop
cmc
test
fdivr
ljmp
add
mul
fs
xlat
call
adc
outsl
shrl
mov
xor
push
push
inc
rorl
and
in
add
sbb
xchg
into
push
lds
fstl
mov
fistpl
mov
cmp
data16
enter
filds
jbe
jg
dec
lretw
aam
iret
mov
xchg
jbe
xchg
in
arpl
sbb
dec
aaa
or
daa
mov
imul
in
pop
pop
inc
movsl
adcb
jecxz
insb
data16
sub
data16
inc
gs
lock
add
lcall
jp
cmp
stc
aam
mov
addr16
sub
mov
insb
push
inc
mov
pop
or
mov
and
cld
js
xlat
mov
lret
cli
int
imul
out
push
pusha
lods
mov
mov
sub
sbb
push
out
lock
mov
mov
push
jmp
mov
loop
mov
cmp
mov
loopne
mov
push
roll
or
pop
shlb
push
enter
int3
mov
inc
insl
lods
scas
mov
ret
lret
lea
ds
push
iret
jae
insl
dec
xor
mov
out
rcrb
or
aad
int
sub
stos
and
test
movsb
xchg
in
jle
push
cmp
xor
sub
aaa
in
int3
ljmp
push
int3
sub
ja
rcl
or
das
outsl
jle
push
out
xor
mov
stos
ret
stos
je
cmp
scas
insb
sub
mov
inc
test
add
dec
fdivr
das
sti
shrb
loopne
adc
sbb
inc
jmp
sti
fs
pop
inc
je
ret
pop
mov
into
mov
mov
loope
pop
leave
xchg
bound
mov
mov
adc
push
ret
icebp
jg
mov
rolb
ret
out
inc
lcall
out
filds
push
lea
mov
iret
out
mov
mov
jecxz
dec
test
xchg
lods
loope
dec
test
cwtl
push
xlat
sahf
sbb
and
sub
iret
jge
dec
rorl
fisttpll
mov
add
shll
movsb
pushf
lock
pop
inc
lcall
out
repnz
sahf
rcll
test
dec
fmul
popf
pop
inc
aam
mov
fiaddl
lcall
and
ds
mov
enter
in
shlb
es
pushf
add
mov
lods
xor
ljmp
outsb
loopne
jge
sbb
mov
fistl
sub
adc
pop
lods
data16
xchg
cwtl
jp
mov
cmp
or
test
loopne
addl
mov
dec
fidivrs
pop
or
sbb
pop
incb
test
iret
xor
fimull
sti
das
xchg
addr16
pop
in
sub
add
scas
cmp
ds
data16
or
icebp
mov
adc
fildll
xchg
mov
mov
rclb
adc
mov
dec
test
push
orl
pop
sahf
data16
fiaddl
mov
ja
xor
or
adc
push
test
push
jmp
mov
out
out
lock
jle
add
mov
out
rol
mov
lahf
dec
daa
adc
cmpl
fldt
push
push
xor
add
fcmovbe
pop
addr16
adc
inc
subb
arpl
inc
outsb
adc
ret
add
into
and
int
movsb
movsb
out
movsl
mov
cmp
pop
imul
stos
orb
int3
out
loop
aad
sahf
rolb
std
mov
mov
jbe
pop
int3
sub
imul
jno
cltd
les
leave
lcall
xor
inc
fsubl
xchg
adc
test
lock
cmp
push
dec
mov
sub
pop
add
lods
xor
xchg
rorl
pop
cmp
mov
les
ss
lahf
jg
mov
test
dec
fidivs
add
rol
das
xor
andb
or
push
shl
lret
sarb
movsl
ja
in
lret
sbb
fstps
js
jne
mov
mov
repz
mov
movsb
pop
xor
fcmovnb
ficoms
mov
adc
fistpl
sbb
fsubs
xchg
jb
cmp
loop
add
sub
pop
add
les
mov
enter
stc
into
cmpsb
clc
push
icebp
fadd
enter
xchg
cmc
das
fstpt
push
mov
jno
cmp
inc
pushl
inc
pop
jb
pop
fidivs
fs
xchg
scas
push
jp
push
nop
inc
enter
daa
repz
push
push
xor
out
pushw
ljmp
mov
and
pop
cs
mov
je
pop
sbb
idivl
mov
mov
jne,pn
incb
fcompl
out
add
push
dec
lcall
ret
cld
in
flds
fldl
mov
or
cmp
xchg
cmpsl
clc
das
mov
mov
repz
adc
shr
out
add
bnd
jp
in
mov
mov
movsb
or
int3
movsl
pop
fistl
into
mov
loope
and
lret
ss
test
es
into
out
fld
and
outsl
dec
jge
stos
lds
and
mov
push
loope
adc
pusha
outsb
add
push
sbb
arpl
lds
fcomip
rcrl
xchg
lock
addr16
and
lock
insl
int
out
add
clc
loop
js
lret
dec
xchg
pop
sub
dec
pop
and
aad
add
imul
into
out
add
pop
test
fs
lcall
or
sub
mov
outsb
jno
bound
push
cmp
subb
pop
iret
insl
aam
gs
shl
cwtl
push
iret
in
mov
sub
mov
pop
and
jns
mov
xor
and
verw
pop
ljmp
aam
out
mov
icebp
xchg
or
mov
jne
push
pushf
cmpsl
sbb
outsb
mov
adc
out
mov
push
in
push
sub
out
inc
scas
insl
push
cli
dec
or
cmpsl
inc
mov
push
xchg
ret
dec
jnp
clc
test
enter
pop
xchg
repnz
jl
mov
cmc
adc
gs
push
icebp
mov
mov
jns
in
lds
mov
rcll
xchg
addl
outsl
sbb
daa
gs
pop
cmp
pushf
test
sbbl
cli
mov
xchg
jae
push
xchg
pop
int3
push
push
push
sbb
jnp
dec
inc
pop
jg
cmp
add
push
hlt
mov
insb
or
jno
hlt
fidivrs
mov
orl
outsb
pop
push
mov
cmp
cmp
mov
cmc
xchg
mov
fists
out
xlat
out
insb
into
and
lahf
and
or
aad
sbb
or
xlat
sarl
mov
repz
mov
mov
push
scas
inc
pop
in
rol
push
arpl
cltd
push
aaa
popf
clc
lea
scas
dec
lock
push
in
adc
bound
in
aas
data16
push
dec
cwtl
leave
or
movsl
lods
call
ja
sbb
mov
gs
hlt
stos
sahf
pop
xchg
sbb
ficompl
mov
or
inc
ror
data16
push
in
sub
rorl
es
fimull
dec
sbb
xchg
dec
push
aas
sbb
test
in
lods
jle
mov
mov
jae
jbe
sbb
stos
scas
push
mov
sar
addr16
out
mov
ja
cmc
icebp
jbe
cs
dec
insl
pop
mov
cmp
inc
jp
leave
push
lods
movsb
cli
lods
mov
cli
nop
mov
cli
stos
mov
cli
mov
test
pop
cli
fst
stc
xchg
and
pushf
push
out
scas
popf
clc
push
pop
pop
gs
repz
fimull
loope
mov
rcrl
xchg
jecxz
sbb
in
dec
les
pushf
cmpsl
inc
frstor
repz
fwait
lods
jecxz
or
xor
xor
sti
add
lds
fs
adcl
iret
cwtl
add
xchg
xchg
adc
iret
outsl
aad
mov
jae
pop
pop
mov
fxch
rcrb
fwait
mov
testl
pop
mov
push
push
mov
mov
mov
pushf
cmp
or
pop
rep
xchg
out
stos
mov
into
cld
out
sahf
xor
and
lods
hlt
in
gs
dec
fidivrl
xchg
xlat
inc
mov
sub
in
jp
dec
ficompl
fists
insl
iret
cwtl
push
cltd
les
imul
sti
dec
nop
ss
cmc
fcomps
sarl
sbb
addr16
out
sub
xchg
or
ljmp
int3
jo
leave
je
lahf
xchg
dec
mov
mov
call
mov
xor
repz
xlat
arpl
mov
xlat
push
aad
push
bound
mov
mov
aaa
out
mov
cmpsl
mov
mov
mov
dec
ss
mov
mov
xor
mov
lods
dec
icebp
inc
jle
push
enter
bound
jnp
hlt
or
sub
scas
or
ret
xchg
fwait
shrb
data16
movsb
xchg
inc
movsl
out
mov
ja
xor
xor
xchg
icebp
js
lods
mov
mov
mov
pusha
sub
sbb
mov
iret
sbb
jle
xchg
aam
popl
mov
jecxz
cmpb
fidivs
push
mov
and
dec
inc
call
test
inc
in
fwait
out
icebp
lret
jge
dec
sub
dec
sub
mov
clc
ret
pop
push
jle
add
inc
jmp
test
cmp
pop
push
into
inc
stos
cmp
ljmp
test
js
pop
fists
ja
xlat
inc
icebp
or
sub
sbb
mov
cld
out
mov
mov
cmp
mov
ret
sbb
pop
sbb
shrl
cmpsb
pop
icebp
ret
aas
rdpmc
mov
xchg
lock
iret
add
and
loop
fiadds
inc
loope
movsb
mov
repnz
add
jecxz
rcrb
cwtl
std
cmp
insb
sti
stos
xlat
adc
ret
xchg
ret
pop
mov
xchg
mov
in
ss
test
mov
push
inc
leave
andb
jg
adc
ss
inc
rolb
xchg
dec
mov
push
sbb
and
mov
add
sub
bound
pop
int
cmpsl
int3
push
int
inc
sbb
cmp
xchg
jge
leave
or
in
pop
cs
cmp
icebp
inc
in
sbb
int
sub
ret
and
sbb
mov
in
sti
jmp
inc
lcall
aam
mov
lods
rcll
sti
mov
cltd
jb
or
mov
push
int
mov
in
cmc
inc
sbb
mov
adc
inc
dec
pop
outsl
stc
xchg
cmpsl
lret
xchg
popa
cmp
dec
fstps
fcmovu
xlat
mov
lahf
movsl
push
mov
adc
mov
mov
mov
lock
xchg
mov
je
movsb
jge
ds
aam
aad
and
cmp
cmp
cmpsb
xor
test
mov
push
out
fistpl
sbb
sahf
imul
popf
xchg
popf
mov
pop
mov
lcall
mov
movsb
mov
in
sti
cltd
xchg
addb
adc
jns
fists
neg
cmc
mov
and
notb
lret
ret
jecxz
imul
sbb
pop
jo
imul
cli
xchg
loop
push
jl
add
add
stc
outsl
stc
bnd
fmull
push
xor
mov
mov
fdivp
pop
je
fnsave
lods
fwait
subb
push
cmc
das
repnz
js
push
test
mov
ljmp
cs
mov
mov
lds
dec
and
orb
sub
dec
movl
daa
xchg
sbb
mov
int3
mov
mov
sbb
mov
xor
adc
adc
xchg
faddp
cmc
sarl
mov
arpl
or
cli
movsl
das
lds
sbb
lret
cltd
ret
dec
sar
addr16
and
rcr
rol
jle
movsl
mov
push
lods
inc
das
xchg
mov
nop
adc
inc
inc
mov
sbb
sar
fs
nop
add
sub
mov
mov
inc
cli
xchg
stc
mov
jecxz
xchg
sub
pop
jo
push
push
adc
xorl
cs
push
mov
pushf
mov
out
push
scas
jae
lods
popa
add
data16
bound
push
ja
loopne
push
scas
mov
sub
xor
sbb
jns
nop
jmp
stc
jb
pop
popl
jecxz
push
into
mov
fcmovbe
in
cmp
fisttpll
clc
fildll
jge
lds
pop
shl
adc
sub
pop
les
jmp
fwait
lret
mov
dec
mov
fnstsw
cmp
std
leave
out
mull
mov
jle
mov
cmpsb
mov
mov
dec
pusha
pop
add
bound
xchg
xchg
mov
xchg
mov
lcall
adc
xor
test
je
mov
fmull
fidivs
lock
jb
xchg
xchg
repnz
js
repnz
xchg
cli
xor
hlt
data16
bound
loopne
negb
int3
pop
incl
iret
sbb
jno
push
push
pop
enter
stos
fdivrs
test
xchg
dec
ljmp
mov
test
mov
cmp
testl
roll
push
lods
mov
scas
lcall
cs
xor
adc
out
fldt
out
ljmp
lret
std
sub
shrb
mov
bound
sahf
das
xchg
shrb
nop
cmpsb
add
inc
test
out
or
mov
cmp
jb
or
inc
ljmp
out
or
aam
dec
inc
mov
xor
mov
mov
and
clc
cmc
int
xor
lret
inc
pop
cmp
rcr
pop
xor
adc
lea
stc
ret
dec
bound
popa
rol
aaa
xchg
push
or
sahf
ljmp
and
lcall
hlt
ss
fsubrs
leave
add
out
pusha
fistl
ja
mov
scas
lret
mov
test
loope
nop
or
sahf
xchg
push
mov
jo
mov
push
ret
jmp
paddw
dec
dec
adc
xchg
mov
or
or
and
sbb
enter
ret
outsl
popf
mov
and
pmulhuw
jae
mov
popa
xchg
ljmp
ret
push
loop
in
testb
fldl
clc
popf
mov
lock
enter
mov
test
jae
in
sub
cmp
jp
imul
or
xchg
sub
lds
clc
imul
sbb
and
les
adc
mov
xchg
or
shll
and
mov
loopne
ret
clc
data16
adc
sub
cmp
ret
mov
data16
jecxz
ror
test
cmc
inc
inc
inc
shll
sbb
jmp
add
sbb
mov
ljmp
fmul
test
push
push
in
ret
iret
mov
inc
mov
mov
leave
fcmovb
test
push
dec
out
mov
gs
xchg
cmpsb
pop
roll
pop
popf
enter
loopne,pn
add
fidivl
and
mov
ret
test
push
mov
testb
pusha
xchg
or
insl
xor
add
out
add
jae
cltd
push
mov
fnstenv
enter
into
jp
push
or
and
cld
inc
ljmp
xchg
push
push
mov
pop
xchg
fcoms
push
cs
fnstenv
jg
fcmovb
add
fcmovb
lcall
pop
addr16
dec
mov
cltd
in
pop
or
ja
fisttpll
inc
xor
outsl
ja
fimull
les
dec
mov
int
push
mov
xchg
xchg
test
mov
lock
push
pushf
mov
rcr
aas
jmp
orl
mov
ret
lods
mov
nop
fcomps
sub
inc
mov
stc
outsl
push
push
mov
xlat
add
and
xchg
add
mov
cmp
movsl
in
adc
call
gs
mov
jns
add
cmp
jne
cmp
insb
in
xor
jo
add
mov
fiaddl
add
and
data16
or
xchg
sub
arpl
sub
popa
jne
xchg
pop
test
sti
pop
pop
xorl
inc
inc
and
cld
dec
cmp
push
mov
jbe
pop
sbb
dec
jecxz
fimuls
imul
push
push
and
mov
mov
fisubrl
or
inc
add
das
inc
jne
xchg
aas
test
sti
cmp
and
and
sub
pop
cld
sub
pop
xchg
sub
mov
faddl
and
ret
add
mov
lret
and
fdivs
loop
sahf
push
add
push
xchg
cmc
xchg
das
cmpsb
pop
xchg
mov
xchg
out
test
lds
or
out
lods
cmp
notb
hlt
cmpsl
xchg
and
in
ja
int
pop
xchg
inc
add
scas
dec
push
jmp
fidivs
stos
jmp
test
repnz
pop
mov
lcall
cld
jecxz
mov
leave
push
mov
dec
cs
ret
sub
aas
dec
leave
xor
jl
fisubl
stos
nop
add
cmpsb
mov
jle
int3
orl
add
out
dec
fwait
andl
lret
jge
loope
adc
gs
out
ret
cmpsl
mov
hlt
inc
les
leave
jno
add
fwait
mov
loope
scas
xchg
push
iret
lcall
cmp
jecxz
fsubrl
test
and
ja
leave
sub
add
cli
pusha
pusha
cltd
dec
popf
or
mov
leave
xor
mov
aas
mov
cmp
popf
daa
cmp
pop
add
scas
and
outsb
loop
cmpsl
push
or
xor
leave
push
jbe
les
ja
enter
sub
out
sbb
jne
mov
xor
mov
xor
mov
rcl
adc
int
pop
fwait
rcr
imul
sbb
neg
lret
aas
inc
into
pop
cmp
lret
shlb
mov
sbb
mov
pop
mov
and
xchg
xor
jecxz
sahf
loop
inc
add
popf
popf
dec
ror
mov
lahf
and
in
test
pop
inc
repnz
stc
lcall
mov
xchg
lret
mov
sub
xor
outsb
push
leave
cmc
fdiv
imul
mov
int
fistpl
mov
jne
push
aam
scas
push
addb
mov
mov
in
mov
push
movsl
add
mov
jbe
push
dec
cwtl
notl
mov
jb
mov
loope
hlt
out
mull
add
nop
inc
testb
xchg
insl
cltd
cmpsb
out
fucomp
mov
fcmovnbe
stos
mov
stos
test
adc
shll
movsb
dec
push
rorl
int3
into
push
dec
nop
ror
lret
pop
xor
sub
push
cs
cld
pushf
mov
mov
cmc
or
ja
xor
test
gs
shlb
rolb
insb
cmp
out
fwait
xor
xchg
pop
out
xlat
roll
lock
push
bts
xchg
lea
mov
shlb
pop
or
pusha
cmp
xchg
sub
jmp
xchg
dec
icebp
fsub
rorl
pop
mov
pop
push
mov
sbb
aad
xlat
lret
stos
xor
lods
lods
cmp
outsb
data16
or
mov
inc
sub
cmp
rcl
daa
out
nop
or
sub
inc
dec
call
sahf
and
push
orl
jns
je
sbb
test
cmc
xchg
mov
or
into
inc
aam
push
and
mov
fisubs
fcomip
pop
add
shlb
fadd
mov
sti
jno
mov
sbb
adc
daa
adc
xchg
cwtl
jecxz
dec
add
repnz
enter
rorb
push
mov
mov
jmp
pop
jae
xchg
out
sbb
out
les
push
popf
stos
aam
scas
iret
into
inc
xchg
adc
repz
mov
loop
add
aad
andw
jge
push
jbe
in
and
movsl
psubd
out
push
xchg
pop
mov
xor
rcrl
pop
or
sub
int3
ret
cmpsb
sbb
fcoml
jns
mov
mov
jmp
mov
push
shrb
push
cltd
fisttpll
dec
cli
mov
dec
cli
outsb
rcr
pop
inc
repz
mov
xor
ss
cld
pushw
xchg
fsubr
pushf
shll
fcomps
mov
std
xor
iret
int3
scas
xor
mov
mov
minps
dec
scas
pop
cmp
sub
pop
in
xchg
cmp
popf
dec
pop
xor
sbbb
push
in
mov
mov
inc
jne
les
mov
aam
fldt
jecxz
lods
std
add
shll
enter
xorb
das
xchg
repz
imul
adc
leave
dec
stos
and
pop
test
mov
outsl
and
mov
je
sub
pop
fstps
mov
sub
loop
cmpsl
aam
mov
subl
inc
mov
movsb
lock
mov
dec
mov
ret
push
out
jp
lods
jb
sub
call
jbe
lea
sahf
insl
or
xor
mov
cmp
nop
mov
iret
loope
data16
inc
push
gs
mov
pop
lahf
lret
xlat
dec
inc
ja
pop
add
js
inc
daa
clc
xchg
cmpsl
out
and
and
aad
fisttpl
les
adc
xchg
mov
push
pop
cmp
push
mov
icebp
ss
stos
fs
pop
pop
xchg
lea
out
fsubl
aad
mov
fdivrs
sub
mov
cmpsl
push
cmp
xchg
mov
pop
mov
sub
ss
mov
and
fld
jg
movsl
mov
aas
leave
pop
jmp
jbe
das
xchg
aaa
mov
mov
std
sbb
sub
adc
aad
xchg
jae
shr
push
mov
aam
cmp
pusha
mov
pop
mov
jg
add
sti
xor
push
repz
lds
cmpsb
mov
cmpsl
xchg
mov
ljmp
add
int3
mov
scas
jmp
cmp
cmc
xchg
mov
xlat
pop
ficomps
push
mov
repz
in
insl
or
sub
mov
fistpl
jp
sbb
pop
lret
push
xchg
or
ja
inc
mov
loop
dec
popl
lods
insb
push
add
mov
xchg
dec
cli
add
ret
rclb
sarb
mov
into
dec
iret
movsl
out
inc
rorb
inc
cmpsl
add
mov
lret
lcall
xor
jl
xchg
pushf
nop
popf
loop
sub
add
jnp
shll
sub
xor
popf
xchg
xorl
jecxz
rorl
cwtl
adc
subl
ret
insb
cmc
in
in
dec
mov
popf
loope
shll
xchg
pop
jo
add
jp
imul
sti
xchg
jmp
and
mov
test
notb
lods
pop
push
gs
pop
push
push
fucom
mov
loop
mov
rclb
push
adc
push
pop
fnstenv
jmp
and
jae
lahf
pusha
rcrl
xchg
mov
cmpsb
and
insb
xchg
comiss
cmp
xor
mov
out
mov
inc
lret
jbe
jo
dec
nop
add
add
js
into
fbstp
cmc
jno
sbb
xchg
loopne
frstpm(287
xchg
bound
ret
push
sbb
pop
std
mov
sub
jbe
mov
adc
or
mov
jb
hlt
push
mov
enter
inc
cwtl
stc
jbe
mov
movb
add
pop
fcmovnu
sti
call
mov
bsr
popf
xor
sub
inc
push
movsl
out
ss
imul
pop
popf
dec
xchg
cmp
out
sbb
das
adc
adc
shl
cmp
jmp
lahf
sbb
popa
icebp
rcrb
test
adc
xor
clc
xchg
push
pop
fimuls
xrelease
jns
sub
ja
popa
sub
movb
push
pushf
cmp
sti
pop
test
sub
sbb
or
out
ret
out
mov
inc
gs
jmp
sbb
out
int
movsb
xchg
cli
pop
outsl
mov
std
stos
push
into
mov
pop
popf
bound
xchg
add
out
insl
sub
js
adc
into
jg
out
lsl
dec
adc
adc
mov
andb
or
or
or
and
nop
mov
les
pandn
jns
cmpsb
insl
icebp
and
pop
pushf
inc
mov
xchg
stos
sub
aas
test
cld
iret
pop
shll
fcomps
aam
sti
fs
jbe
ss
aad
mov
pop
arpl
mov
rcrb
lods
and
jb
pop
ljmp
aaa
cmp
push
inc
lret
popf
jle
pop
inc
xchg
push
sbb
mov
xchg
mov
adc
mov
lahf
iret
test
cltd
cltd
ret
sub
jns
data16
test
lds
add
shlb
xchg
inc
data16
push
dec
and
pop
inc
jo
inc
and
cs
je
mov
mov
call
fdivrl
push
dec
sub
cli
jp
jmp
into
fs
rorb
fmull
or
cli
inc
les
adc
ret
ja
push
cltd
cmp
gs
add
gs
dec
jb
stc
inc
cmp
xor
lods
jns
cltd
push
mov
cltd
cmp
lcall
lcall
push
out
push
arpl
push
jno
jne
sbb
adc
bound
xchg
push
addb
push
pop
mov
in
test
gs
cwtl
sbb
push
adc
cmp
push
inc
jnp
jno
jle
ss
cmp
lret
in
mov
lds
jge
inc
dec
xchg
ja
push
push
xchg
popf
mov
mov
mov
loop
push
cld
mov
jns
loope
repz
jne
ja
nop
xchg
add
insl
leave
xchg
mov
sbb
lods
dec
arpl
mov
loopne
das
fwait
jge
test
scas
test
cmp
ss
mov
mov
xchg
or
jns
out
stos
jo
mov
inc
mov
shl
cli
cld
pop
lcall
enter
inc
pop
dec
shlb
aad
scas
mov
sbb
subl
lcall
repz
pop
xchg
add
movsb
push
ret
inc
test
dec
fcmove
cwtl
mov
scas
mov
adc
lods
stos
stos
dec
mov
xor
xchg
bound
or
and
int3
sbb
lock
xchg
pop
xchg
mov
iret
lret
jno
mov
fdivs
fdivrs
add
mov
aas
call
push
aas
mov
lods
cs
mov
test
pmaddwd
cmp
je
aam
mov
pop
int3
cs
in
into
pusha
fstps
das
push
pop
adc
dec
add
les
cli
sahf
lea
sbb
or
lock
and
xchg
xchg
pop
movb
mov
ja
pop
fistl
gs
out
adc
int3
filds
fldt
adc
jmp
lods
stc
fistps
fimull
gs
mov
xchg
iret
stos
jge
lret
dec
out
cmpb
lcall
jp
out
iret
enter
test
and
in
fstpt
ffree
movsb
rol
inc
jecxz
pop
aaa
xchg
outsb
cmpsb
or
into
fidivrl
test
cmpsl
mov
icebp
into
mov
cld
ss
aad
popf
xor
mov
xor
xchg
mov
push
es
jne
adc
and
dec
es
icebp
shl
addr16
cmpsl
mov
test
in
inc
notl
pushfw
sbb
mov
xor
xchg
lods
pushf
mov
sbb
adc
cmpsl
push
mov
and
imull
leave
mov
push
stos
add
mov
daa
push
daa
jae
adc
int3
sub
aad
bound
pop
cmp
pusha
pop
sti
aam
pop
cli
cwtl
ljmp
xchg
sbb
xor
push
pushf
adc
or
pop
push
mov
lret
push
bswap
or
push
insb
insl
jbe
call
xor
stos
ljmp
or
test
movsb
add
dec
aad
pop
rorl
hlt
mov
sub
mov
cmpb
pop
adc
jecxz
xchg
mov
xlat
cli
pusha
cmp
fcomps
sub
pop
sub
lock
scas
cmp
lret
subl
jecxz
xor
out
pop
sahf
inc
push
mov
jb
jbe
adc
test
inc
loopne
cwtl
cmp
xchg
mov
cmpsb
mov
dec
jne
mov
xchg
jl
ret
inc
addb
stos
fbld
insl
subb
mov
mov
or
into
gs
dec
lds
pop
cld
aaa
mov
scas
xorb
daa
inc
mov
xchg
mov
jp
addl
pop
mov
dec
jmp
out
mov
xchg
dec
stos
popf
xchg
out
das
dec
rol
push
sar
jns
jp
push
mov
outsl
or
add
cmp
sbb
insb
or
movsl
and
push
bound
jg
test
aam
in
xor
jne
mov
fwait
iret
loop
add
ret
push
inc
mov
lcall
xchg
pop
outsb
xchg
loopne,pt
mov
jl,pt
js
iret
xchg
cmc
xor
jno
inc
pop
push
nop
xchg
call
push
fisttpll
mov
or
fidivs
pusha
sbb
and
jge
out
dec
fimuls
dec
push
or
test
gs
jae
ja
rol
nop
mov
sub
or
insl
add
mov
cmp
out
repnz
rclb
and
out
xchg
lcall
pop
ljmp
xor
push
clc
aaa
mov
dec
ss
pop
icebp
xchg
xchg
arpl
pop
into
or
into
push
int3
data16
out
sti
imul
mov
sbb
push
and
jbe
stc
sub
clc
or
or
clc
xor
jne
sti
dec
ret
enter
jbe
out
add
clc
aas
and
in
loope
or
mov
xchg
fsubrl
mov
push
insl
movsb
and
cmpb
ret
popa
inc
fwait
js
dec
inc
xor
mov
xchg
fcom
pop
xor
les
inc
push
fmuls
idivl
cmpb
push
popa
mov
jbe
push
outsl
jno
enter
stos
pop
sbb
mov
mov
aam
dec
in
and
ret
inc
mov
jno
mov
lds
cs
lcall
lds
cmc
dec
lods
push
lahf
nop
idivl
fbld
outsb
test
fcompl
out
addr16
jp
cmp
popf
ds
daa
xor
cwtl
aam
aas
dec
iret
jb
inc
and
mov
sbb
leave
jp
movsl
addr16
pop
jns
xor
outsl
ret
adc
jnp
int3
push
fsubrs
pop
fwait
ret
pop
ret
mov
fstp
push
or
mov
jecxz
push
xor
sub
xchg
lock
mov
sbb
pushf
sarl
pop
add
lea
xchg
mov
mov
xchg
scas
mov
inc
popa
test
idiv
loopne
aam
or
adc
test
mov
inc
fists
outsb
sahf
push
mov
push
pusha
cmp
pop
jge
mov
int
fists
out
test
lods
in
sti
mov
pop
rolb
xor
jecxz
test
lret
jmp
lahf
adc
and
sub
les
dec
repz
test
in
or
adc
xchg
dec
aas
lcall
ja
je
mov
arpl
or
jge
xchg
hlt
fcmovbe
inc
xchg
dec
xor
lcall
and
pop
fsubl
test
shl
jb
insb
bound
andnps
aaa
pusha
xlat
gs
mov
jno
or
dec
and
add
das
ds
pop
jl
fdivrs
in
lahf
test
mov
dec
movsl
sub
mov
xchg
ret
mov
fsts
sbb
fsubp
xlat
sbb
xchg
dec
jle
test
lock
les
jg
cli
mov
popa
rcll
rcll
std
insb
push
stos
mov
lea
stc
outsb
lods
test
cmc
ret
cltd
sub
ss
bound
jge
jg
xchg
mov
sti
lods
in
push
and
lds
out
hlt
pop
pushf
xchg
aaa
mov
imul
mov
pusha
mov
shlb
sti
fwait
mov
pop
push
lcall
cmpl
nop
or
add
shrl
xchg
jecxz
cmp
dec
mov
stc
mov
cmp
hlt
mov
cli
mov
icebp
push
out
lods
mov
push
loop
cmp
shll
out
adc
cmp
scas
and
shl
sub
sub
loop
nop
ljmp
int3
xchg
js
cmp
pop
fxch
sbb
jb
popa
data16
and
inc
dec
adc
fldenv
push
ret
dec
mov
sub
ret
adc
xchg
adc
and
jp
or
shll
mov
addb
xlat
sub
in
sahf
mov
jmp
es
dec
dec
mov
bound
ret
imul
imulb
cld
notl
lret
cmpsl
jmp
add
mov
mov
xchg
add
xchg
dec
notl
jg
ljmp
cmp
push
xchg
lods
sti
add
dec
stos
rorl
cvttps2pi
xor
sub
arpl
mov
jecxz
data16
sti
dec
xor
mov
aad
testl
pop
aam
push
jb
test
pop
mov
pop
rorl
jge
loop
lahf
nop
nop
fmuls
pop
mov
add
fwait
adc
and
cmp
lahf
mov
ficoml
jae
fcomps
aaa
je
lds
push
add
or
mov
or
inc
or
cmpsl
fcoms
in
or
mov
cmpsb
or
fs
dec
jmp
testb
and
push
ljmp
pop
or
jp
je
xchg
daa
adcl
jp
push
popa
int3
pop
in
push
cmpsb
xchg
lea
mov
daa
pop
mov
stos
negb
push
imul
jecxz
sub
mov
jns
jne
mov
inc
push
cli
jmp
test
aad
mov
mov
xchg
stos
cmc
xchg
in
movb
movsb
push
aad
stos
mov
rorl
lods
fldt
adc
sbb
sub
scas
xchg
jmp
out
out
push
cltd
dec
stos
clc
sbbb
je
and
inc
lods
arpl
mov
dec
adcl
icebp
int
lds
bound
xor
mov
and
shl
inc
push
add
stos
xlat
cltd
xchg
shrb
mov
jb
add
sahf
test
dec
mov
xchg
pop
jl
lret
ret
sti
pop
addr16
jp
sbb
and
cs
stc
fsubl
or
or
jno
adc
mov
xlat
mov
lds
ret
cwtl
xchg
sub
adc
test
shr
jp
movsb
outsb
push
cwtl
xchg
inc
imul
sbb
sbb
cmp
pop
xchg
pop
cs
int
xchg
sbb
popf
and
mov
xchg
dec
ljmp
jae
popf
lahf
scas
aam
or
push
aad
cmc
es
data16
push
into
cwtl
inc
cmp
les
aam
mov
out
aad
adcl
add
popa
dec
pop
mov
xchg
gs
mov
js
push
out
dec
jmp
push
in
imul
dec
pop
cmc
adc
es
popf
sti
aam
inc
out
mull
jo
push
jmp
loope
shlb
jp
std
push
cmp
xchg
imul
adc
ret
pop
fwait
or
sub
and
negb
out
and
test
add
mov
dec
sub
lahf
aam
sub
jg
xchg
sub
rcll
test
push
xchg
shlb
sti
cmp
adc
inc
neg
sbb
or
push
std
add
leave
mov
into
icebp
gs
and
jle
jbe
std
push
mov
loope
xchg
out
into
cwtl
int
adcb
mov
call
mov
inc
add
push
outsl
lea
call
popf
jb
and
in
sahf
into
mov
mov
push
out
mov
sbb
pop
mov
xor
mov
and
cmp
jmp
enter
popa
scas
dec
adcl
arpl
lahf
inc
push
jbe
adcl
inc
xor
add
push
leave
mov
push
int
jle
xchg
insb
xor
int
movsb
lods
in
das
sahf
rorl
lcall
xchg
mov
jmp
fiaddl
aad
inc
ret
push
add
lds
xorb
push
das
push
fistpl
and
mov
les
cltd
movsl
sub
mov
add
fsubrl
push
push
outsb
add
or
pop
sbb
ds
sbb
int3
icebp
test
push
fs
insb
and
cli
mov
xor
data16
clc
lahf
lock
enter
jo
pop
das
push
test
out
xchg
push
mov
out
mov
jle
cmpsl
imul
push
push
cld
adc
sbb
out
addl
push
cmc
call
in
lods
add
pop
xchg
xor
xor
lret
insl
mull
outsb
addr16
incl
in
jecxz
lret
cltd
mov
push
xor
sbb
or
sub
mov
push
test
xchg
cmp
cmp
xorb
int3
mov
stos
je
in
pop
xchg
les
iret
mov
xchg
ret
add
data16
std
cmp
and
movsb
bound
and
addr16
xchg
pop
push
cmpsb
scas
lods
outsl
sub
rorb
nop
mov
dec
mov
ret
ljmp
subl
outsl
rcrb
fs
fistps
leave
inc
pop
pop
sbb
push
lods
pop
or
cmp
int
ret
lcall
cmpsb
bound
aam
test
sub
jecxz
imul
xchg
ret
scas
or
xchg
sahf
jecxz
xchg
sub
ffreep
pop
out
add
ljmp
fmull
xor
xor
aam
popl
loopne
test
stos
push
xchg
imul
push
inc
cld
mov
sbb
rcr
dec
cmpsb
xchg
in
fisubl
dec
fwait
cmp
loope
fdivl
dec
ljmp
jno
cmc
sbb
enter
sarb
xchg
in
sbb
sub
idivb
loop
mov
xor
aad
lret
jecxz
xchg
scas
xchg
pop
mov
in
in
mov
jp
push
or
inc
into
jnp
mov
push
int3
add
xchg
aad
shlb
mov
leave
dec
inc
or
xchg
pop
insl
lret
in
push
xchg
mov
sbb
or
mov
jmp
adc
dec
mov
pop
xchg
in
out
jecxz
movsb
push
aam
adc
xchg
jecxz
cmp
fsubrs
in
mov
sub
leave
hlt
shll
xor
xchg
out
jbe
dec
push
loopne
sbb
pushf
repnz
cmc
out
inc
mov
push
ret
nop
rcrl
and
lods
jns
mov
ret
inc
test
mov
add
adc
in
repnz
cs
xchg
aam
xor
inc
pop
xor
pop
pop
adc
adc
mov
inc
inc
ret
nop
sbb
aad
in
add
mov
addr16
mov
inc
clc
add
or
mov
notl
sbb
outsb
test
aas
idivl
sbb
pop
outsl
test
xchg
lahf
mov
je
push
sbb
lret
sub
fs
pop
jae
mov
daa
cmp
mov
das
hlt
cmpsl
lods
jecxz
inc
test
sub
in
lea
mov
shrl
out
nop
loop
sub
ret
fs
in
push
rol
mov
inc
enter
scas
xchg
pop
lods
testb
fisubs
pop
out
in
jl
lcall
enter
in
jg
loope
inc
repz
lds
pusha
or
lea
movsb
lods
addr16
cmp
leave
and
lret
xor
fldt
sbb
add
xor
cli
fs
stos
loopne
dec
imull
inc
aas
mov
push
bound
arpl
mov
cmp
movsb
mov
cmpsl
stc
adc
sahf
sub
pop
xchg
push
lds
dec
mov
rcrl
pop
nop
cld
mov
dec
lods
mov
jle
in
rorb
jbe
out
fcmovnu
test
pop
push
mov
pop
push
xor
adc
mov
das
add
test
repz
dec
aam
fsubr
mov
into
sbb
pop
and
mov
movsb
sahf
pop
push
test
gs
push
push
ds
and
sbb
std
out
jp
jle
inc
or
movsb
sub
dec
imulb
and
jmp
cmp
and
push
outsl
jle
jnp
mov
jp
insl
push
loope
cld
jmp
mov
cld
add
jnp
or
stos
jae
mov
ret
ret
xor
dec
mov
ret
sarl
add
mov
arpl
mov
xchg
xchg
adcl
in
orl
iret
push
dec
mov
push
mov
hlt
data16
negb
in
adc
cwtl
add
test
aad
push
mov
xchg
lret
mov
cld
push
mov
lock
or
sub
add
add
ss
popf
aam
movsb
add
pop
or
pop
scas
das
lahf
and
xchg
sub
xlat
inc
and
iret
cmp
lahf
lods
andb
rcrb
mov
jle
orb
mov
scas
rolb
mov
ret
fldcw
cmc
pop
mov
stos
dec
adcb
mov
loope
mov
pushf
mov
movsb
jge
push
pushf
sub
test
cmp
out
adc
cmpsl
mov
dec
jmp
out
inc
jge
decb
pop
btc
push
adc
sbb
mov
fisttps
dec
pop
ret
outsb
pop
xor
cmc
mov
pop
sbb
sbbb
mov
jecxz
ret
inc
daa
stos
popf
hlt
jmp
mov
aad
sub
mov
popf
jb
mov
lds
dec
sbb
pop
cmp
lds
dec
lds
ret
lods
or
sti
sbb
cmp
sbb
out
sbb
dec
outsb
jmp
sbb
stos
in
dec
repz
outsb
fisttpll
xlat
sbb
cmp
aas
ret
outsb
cs
addl
mov
out
sbb
fcmove
dec
xchg
ret
insb
push
cli
ret
lret
insl
daa
imul
mov
dec
sub
cltd
jns
fwait
stos
jle
loope
pop
mov
scas
mov
mov
pushf
jmp
mov
pop
ret
jg
faddl
in
mov
mov
test
std
dec
pop
mov
cmpsb
xchg
arpl
sti
outsb
fcoms
repnz
xchg
mov
pop
daa
sub
cs
push
jnp
fwait
test
add
dec
xor
push
movsl
push
sbb
movsl
mov
test
sub
es
fisttpll
bound
loop
mov
fidivrs
std
popa
push
lods
fwait
push
xor
mov
loop
cs
loop
in
mov
std
push
popf
push
push
jg
mov
xor
jb
xchg
jp
sbb
push
push
cmpsb
out
fcmovbe
test
fmulp
xchg
lcall
inc
cmc
js
rcrl
clts
cmp
xchg
jg
or
mov
xchg
rorb
sub
sub
sahf
mov
xchg
test
cmp
push
mov
lea
adc
xlat
and
pop
inc
rcrb
je
or
lods
cmc
cmpsb
outsb
add
mov
lods
ja
xchg
add
jbe
and
rorb
inc
xchg
sub
jmp
stos
fnstenv
dec
out
adcb
mov
mov
stos
in
xor
iret
dec
mov
ret
movzwl
mov
nop
xor
xchg
in
test
push
outsb
mov
movsb
in
es
xchg
loopne
in
leave
test
and
sub
push
push
xor
fldl
cs
sti
or
fwait
sbb
ret
gs
mov
cwtl
rclb
into
pop
in
or
addl
arpl
push
add
fldl
add
popa
mov
pop
inc
and
add
sub
push
lahf
adc
fsub
inc
psubusw
hlt
pop
sbb
repz
xchg
inc
mov
mov
call
pop
ss
js
pop
sub
jb
cld
ret
dec
xor
ret
xorl
ret
std
xchg
cmp
push
mov
sub
orb
sbb
sbb
and
iret
fiaddl
dec
mov
int3
mov
xchg
push
mov
fstpl
fdivrs
xchg
ljmp
cs
iret
cmpsl
les
fcoms
into
popf
push
sub
xchg
xchg
sbb
jne
jbe
cmp
mov
aad
pop
addl
xchg
pushf
call
dec
mov
cmp
xchg
and
test
mov
outsb
xchg
inc
mov
rcl
outsl
cwtl
cli
test
popa
xchg
mov
mov
cld
mov
arpl
enter
fisubrl
nop
loopne
out
nop
pop
test
push
lea
movsl
nop
mov
ja
jae
negb
jns
repz
mov
dec
insb
int
adc
fs
and
push
lods
lret
clc
sbb
test
xchg
in
lods
jmp
std
data16
lret
and
addl
cli
outsb
mov
imul
in
repz
xchg
dec
sbb
mov
add
lds
fwait
ss
call
push
xor
jmp
in
inc
ljmp
mov
mov
stos
out
jmp
scas
out
int
push
scas
xchg
xchg
xlat
sahf
add
push
jb
xor
dec
mov
ds
gs
aam
test
notl
cltd
ret
out
sbb
push
orb
xchg
lcall
adc
mov
call
xchg
test
add
ss
push
add
jmp
xchg
sub
mov
mov
icebp
insl
jmp
out
pop
sbb
push
sbb
les
dec
daa
add
xor
mov
sbb
shlb
inc
fs
test
cwtl
xchg
out
and
inc
jp
or
std
stos
mov
lds
movsb
or
mov
leave
xchg
into
out
xchg
add
dec
xrelease
mov
fwait
xchg
aad
stc
scas
aad
les
dec
call
stc
mov
push
mov
and
outsl
shlb
addl
inc
aas
xlat
mov
mov
mov
popf
adc
sar
mov
or
sbb
fisubl
test
cmpsl
push
xrelease
lahf
jbe
mulb
or
inc
repnz
adc
bound
dec
out
in
xor
inc
sub
mov
sbb
jne
pop
jg
into
adc
xchg
popa
xorl
jno
add
lea
ret
es
jmp
push
cs
mov
push
and
popa
std
testl
popa
aas
mov
and
lds
jnp
push
and
sbb
or
ja
in
and
into
aad
test
out
or
fs
lods
xchg
movb
mov
int
or
ret
mov
stc
in
dec
mov
test
out
push
mov
xchg
in
mov
f2xm1
pop
mov
repnz
sahf
stos
das
mov
sbb
mov
sub
aad
mov
dec
test
call
xor
test
inc
jmp
incl
fidivs
incb
mov
fisubrs
orl
pop
pop
dec
push
aaa
push
mov
push
push
nop
xor
jg
xchg
js
arpl
sub
jns
xchg
pop
insb
stos
add
lods
sub
pop
jb
dec
out
lods
in
push
xchg
inc
stc
and
xchg
into
mov
jbe
pop
out
add
cmp
sbb
lea
es
inc
lock
mov
jno
inc
lret
mov
mov
fstpl
cmpsb
mov
jg
xor
jge
push
push
xchg
pop
lds
jbe
in
mov
icebp
mov
pop
push
iret
inc
mov
lods
out
imul
popa
push
pop
push
enter
mov
mov
pop
addl
aaa
bound
jle
jg
dec
repnz
outsl
sbb
jns
fwait
mov
test
mov
jg
pmulhuw
push
jp
pop
int3
rcrb
cmp
in
add
pop
cmp
aaa
adc
mov
popf
int
fsubp
lea
mov
movb
clc
and
mov
mov
inc
loopne
mov
enter
movsb
adc
sub
sub
xorl
or
jmp
sub
sub
xor
cmc
lcall
lds
xor
test
jmp
ljmp
mov
push
jp
addr16
stos
rclb
out
clc
shlb
add
pop
sbb
jbe
mov
xor
xlat
out
mov
fldenv
or
add
pop
pop
fstps
jmp
test
and
in
push
ret
test
aas
divl
push
fs
out
cmpsl
scas
pop
jo
or
ud1
cmp
out
mov
imull
inc
inc
out
mov
fimull
xor
das
mov
ds
fildl
mov
cmpl
imul
stc
rcrl
xchg
and
out
out
dec
sbb
popf
repnz
pop
insl
xchg
jne
and
repz
adc
lea
leave
mov
mov
sarb
pop
mov
test
mov
fsts
out
adcl
leave
testb
pop
cli
xchg
xchg
into
repnz
mul
shrl
fnstcw
jecxz
cmpsl
cmp
ror
sub
outsl
inc
jmp
out
or
rorl
and
gs
cltd
fs
pop
push
jae
adc
das
adcb
dec
roll
icebp
out
xchg
mov
xor
or
lods
fnstsw
pop
in
loop
scas
ret
add
addb
cmpl
aaa
lcall
mov
addl
pop
mov
mov
xor
leave
cmp
xchg
subl
mov
jecxz
sbb
stc
pop
lods
test
mov
roll
fidivl
sub
ret
in
jp
pop
scas
into
and
inc
call
je
adcl
jmp
into
dec
sahf
ror
into
sbb
sahf
adc
mov
jle
sbb
xchg
clc
lock
loopne
sahf
cmp
fcmovnb
aas
nop
mov
adc
dec
inc
addr16
xor
pusha
das
stos
dec
pop
pushf
add
mov
shl
inc
fwait
cmp
outsb
jb
pop
rclb
arpl
data16
sti
push
ljmp
xchg
into
loopne
jnp
cltd
adcb
mov
cmp
jp
loop
lret
rcl
push
adc
push
xchg
lcall
negl
sbb
out
lahf
pop
rorl
ljmp
std
mov
sbb
jmp
push
imul
inc
pop
adc
push
int3
in
enter
mov
imul
insl
jb
mov
cli
jmp
mov
add
or
inc
lahf
lahf
xchg
loope
mov
repnz
sbb
std
sub
das
xchg
pop
bound
in
adc
cmpsl
sbb
jbe
pop
jbe
out
arpl
test
xchg
push
cmpb
mov
rol
addr16
cltd
jbe
mov
sub
repnz
or
js
out
in
loop
jb
je
xchg
cld
mov
fiadds
xor
sub
out
mov
test
push
xor
xor
js
mov
out
mov
add
mov
adc
xchg
lcall
sti
or
push
popa
test
std
ret
lahf
sub
adc
sahf
add
add
movsl
icebp
in
inc
in
mov
fcomi
and
cltd
ret
mov
es
pop
or
mov
imul
movsb
adcb
lahf
and
mov
jne
pop
lods
sbb
loop
pop
into
pop
dec
sub
mov
or
loop
sahf
mov
loop
imul
sub
inc
or
adc
cmpsb
inc
mov
sub
mov
addr16
and
xorb
add
push
inc
lret
mov
popf
sbb
inc
xlat
mov
adc
mov
mov
xchg
push
insb
aaa
imul
cmpsl
mov
xchg
test
add
ret
jl
jecxz
test
out
inc
or
lods
fmulp
and
daa
xor
inc
aaa
pushf
int3
mov
and
xchg
mov
adcb
and
loop
adc
js
xchg
and
int3
mov
cli
xchg
repz
push
add
incb
std
xchg
push
sbb
jbe
pop
in
mov
mov
push
scas
incb
in
adc
mov
iret
leave
stos
jns
inc
ljmp
ret
or
fldcw
xchg
bnd
pop
and
or
inc
notb
xor
ljmp
sbb
je
add
int3
test
jg
ret
ret
dec
push
cmpsl
dec
adc
xchg
fwait
push
jl
push
xor
mov
test
jl
movsb
fmull
mov
lret
lock
shr
cli
add
sub
sub
outsl
sub
scas
fwait
adc
out
sbb
js
mov
pop
xor
mov
cltd
cmpsl
or
fwait
je
add
test
rcl
xchg
mov
jbe
insb
mov
outsl
mov
cmp
hlt
test
into
pop
dec
mov
jle
dec
and
je
rcrb
mov
cmp
xor
test
add
lods
mov
inc
cs
jl
into
enter
mov
aad
imul
and
mov
pop
mov
test
je
daa
shll
xor
dec
or
xchg
std
and
sbb
or
mov
aad
adc
dec
loope
inc
xor
mov
mov
movsb
pop
arpl
mov
test
or
xchg
mov
adc
xor
fldcw
outsl
adc
or
adc
adc
push
mov
addr16
int
dec
mov
orb
cmp
addl
jecxz
and
dec
rcl
out
mov
addb
sub
xchg
outsl
sbb
xchg
ficoml
cmpsb
ljmp
xchg
je
sahf
mov
mov
jg
add
data16
lea
mov
jno
cmp
or
mov
pop
stos
shlb
stc
mov
inc
pop
ficoml
jle
popf
shlb
int
imul
pushf
mov
jg
nop
lret
mov
jb
mov
push
test
push
sub
adc
or
mov
adc
inc
inc
xor
push
sub
mov
pusha
inc
outsl
pop
aaa
pop
xchg
jnp
mov
js
fidivrs
out
cmp
orb
adcb
cmp
imul
dec
dec
addl
xlat
jle
jecxz
mov
les
into
jne
ja
dec
cmpsl
mov
int3
sahf
gs
xor
nop
lahf
pop
inc
and
mov
fs
mov
mov
push
and
sbb
xor
and
ds
ljmp
rcrb
pusha
fcoml
pop
shll
jnp
icebp
xchg
mov
inc
or
adc
in
leave
fdivrs
inc
xor
test
adc
push
js
aam
push
add
pop
push
xchg
xlat
add
sbb
mov
cmpsb
in
xchg
xor
adc
jecxz
mov
ja
xlat
int
xor
enter
push
lret
aad
xchg
repnz
rol
movsb
lret
mov
ret
mov
ret
xchg
mov
les
mov
mov
pop
nop
xchg
pop
outsb
xor
imulb
dec
sti
adc
push
lds
pushf
ret
insb
imul
dec
rorb
push
loopne
dec
shr
add
and
sti
into
stos
add
lahf
test
dec
in
shrb
stos
push
out
out
out
or
mov
pushf
inc
push
mov
lcall
cmp
xchg
dec
fdivrl
or
dec
dec
divl
add
and
adc
into
loope
sub
adc
fistl
push
inc
out
and
inc
fstl
lcall
mov
nop
jb
or
jo
incb
adc
push
mov
cltd
movsb
idivb
mov
adc
enter
adcl
mov
pop
mov
or
dec
mov
cmp
popa
xor
insb
or
out
lock
leave
dec
jge
sbb
loopne
andl
sarb
pop
int3
jo
jge
cmc
in
push
dec
aad
or
cmpb
loop
mov
fsts
hlt
sub
or
test
test
mov
out
cmp
adcl
adc
jae
xchg
dec
daa
ss
sti
inc
mov
jg
mov
aad
sahf
push
dec
lock
mov
mov
cmp
push
jo
mov
dec
pushf
adcb
popl
movsl
sub
scas
hlt
aaa
outsb
pop
fsts
mov
xor
mov
xchg
sti
dec
jb
aas
xchg
jmp
pop
cmp
mov
add
xchg
mov
cld
sarl
out
push
loop
fs
call
xchg
push
dec
cmpl
lods
mov
ror
insl
pop
orl
sbb
movsb
sbb
mov
call
add
iret
and
test
add
scas
repz
daa
inc
mov
sbb
daa
iret
fcomps
lock
jge
in
jmp
xchg
add
cmpsb
xchg
inc
lahf
xchg
into
push
xchg
xorb
cmpsb
mov
test
pop
jnp
mov
adc
xchg
out
jmp
xchg
stos
sbb
push
adc
aam
std
fs
jl
sub
dec
adc
xlat
add
jge
xor
movnti
bound
loopne
cwtl
jbe
cld
xchg
shrb
add
inc
pop
push
inc
aad
aad
movsl
push
inc
loop
push
lea
cli
xchg
imul
xchg
shlb
push
sahf
push
add
cmp
inc
cmp
popa
sbb
add
pop
pop
out
mov
sbb
cmpsb
add
ds
mov
sar
ss
jl
or
int3
sti
push
adc
xchg
fidivl
adc
mov
sbb
pop
ret
jl
pusha
scas
xchg
leave
outsb
in
inc
lock
aaa
fs
dec
cmp
cmpl
cmp
push
clc
hlt
sbbl
shl
xchg
out
adc
and
insl
lret
loop
aam
out
mov
insl
push
roll
call
mov
or
sub
push
or
pushf
jbe
stos
out
xchg
sbb
fistps
out
leave
jl
adcb
mov
lods
mov
lahf
pop
mov
dec
sub
mov
jmp
out
dec
inc
jmp
push
loope
je
inc
inc
popa
pop
loope
pushf
cs
xor
lret
jno
or
sbb
ja
fidivs
xchg
mov
mov
and
xor
sub
push
test
mov
adc
arpl
out
add
outsl
mov
call
push
stos
shrb
addb
mov
int
push
pop
pop
scas
gs
xor
cmp
rolb
xor
fadd
sbb
mov
sbb
sahf
mov
xchg
not
or
jecxz
sbb
cwtl
sbb
int
test
sub
das
mov
out
std
movsb
or
into
mov
lahf
sbb
ficomps
and
stos
mov
xchg
adcl
fiadds
aam
mov
cmp
jno
and
jp
mov
aad
or
pandn
xor
adc
je
lcall
imul
jae
je
mov
lock
sbb
pop
inc
fldenv
xchg
mov
sbb
repz
add
cwtl
ja
jnp
bswap
add
test
mov
and
testl
lock
test
fs
jnp
lahf
test
mov
jae
sbb
dec
mov
push
jle
sbb
dec
imul
ret
ret
dec
les
push
iret
xchg
adc
sbb
jl
mov
adc
aas
mov
stos
adc
jb
mov
dec
mov
dec
not
pop
ja
cmp
outsb
imul
lcall
sbb
sub
pusha
imul
cmp
imul
scas
lods
pop
dec
and
sahf
mov
sbb
ret
hlt
adc
fwait
ds
in
cmpl
ret
jecxz
out
push
aas
mov
add
inc
add
iret
lock
adc
or
mov
jno
in
mov
or
rol
push
mov
out
dec
ja
mov
test
fists
push
xchg
add
sahf
mov
dec
ds
cmp
jp
es
outsb
push
cmp
inc
or
mov
mov
clc
mov
fists
pop
mov
insb
in
lahf
fdivrs
mov
lods
pop
push
sbb
lret
cs
mov
out
and
dec
mov
mov
and
cmp
dec
xor
cltd
ret
ret
dec
jg
arpl
imul
pop
mov
ret
ret
dec
idivl
dec
or
sub
aaa
push
ret
sub
scas
add
push
xchg
aad
int
fwait
lods
in
inc
dec
hlt
and
push
sahf
adc
add
inc
inc
arpl
or
scas
xchg
xor
adc
testl
ret
roll
or
std
xor
out
out
push
dec
bound
rclb
xchg
sub
ficoms
scas
pop
ljmp
sbb
lret
jno
fs
push
jp
mov
cmp
pop
and
out
push
jne
fs
mov
lea
inc
icebp
insb
mov
fcmovnb
inc
jecxz,pn
movsb
pop
mov
or
or
cltd
cmp
jp
js
adc
adc
shl
sub
sti
test
int3
inc
jmp
pop
hlt
jge
fwait
shl
mov
std
mov
cmp
dec
adc
cmp
lcall
imul
pop
jge
test
in
leave
add
cmp
adcb
rcrb
mov
dec
stc
int3
aas
add
xor
ret
data16
jae
les
inc
pop
xchg
lods
inc
xchg
jne
dec
sti
push
xchg
decl
sbb
fwait
out
adc
cmp
sub
or
dec
add
fistps
in
in
cltd
outsl
pop
ror
xchg
dec
inc
mov
sub
xchg
or
add
mov
jl
pop
lcall
and
sbb
pop
sti
mov
ffreep
mov
out
scas
xchg
jbe
mov
xchg
inc
fistps
mov
shrl
ficoms
bound
fs
shll
lds
fcomps
inc
or
add
push
prefetch
rcll
fdivrs
adc
lret
sub
dec
loop
sub
out
in
cmp
add
ret
cltd
test
sbb
xchg
popf
ret
dec
and
dec
sbb
loop
pop
mov
shl
movsl
push
sub
mov
mov
and
vpmullw
fistpl
popa
dec
leave
mov
pushf
outsl
add
inc
sti
push
out
aad
pop
xchg
xlat
xchg
das
xor
mov
jb
mov
movsb
dec
cmp
in
ret
int3
add
xor
fcoml
mov
lds
xchg
aad
ss
or
fsts
aam
adc
sub
lret
push
dec
icebp
pushf
iret
mov
fwait
scas
jmp
outsb
add
loope
ret
jmp
mov
push
jl
mov
or
cmp
fsincos
rol
jne
xor
orl
push
adc
dec
adc
stc
push
xor
fcompl
pop
cwtl
sub
mov
adc
pop
and
inc
cmc
xor
mov
lea
test
push
xor
ss
lea
lods
ret
xchg
inc
or
adcb
loope
dec
mov
mov
and
cmp
or
push
pushf
sub
outsb
xlat
mov
xchg
push
faddl
or
fcomps
sbb
pusha
inc
mov
push
dec
sbb
sbb
insb
ror
dec
jns
data16
mov
andl
cmp
cmp
fldcw
sub
outsb
jle
gs
lock
ljmp
jbe
or
mov
dec
inc
ss
push
in
jmp
fcompl
xor
xchg
jecxz
mov
enter
add
ror
and
push
ljmp
or
lea
jg
fildl
xor
ret
lret
into
and
mov
cli
lahf
mov
xor
iret
repz
pop
iret
fmuls
insb
fld
adc
mov
int3
iret
cmpsl
les
popf
xor
jbe
xorb
inc
dec
cld
xchg
testl
shlb
imul
outsl
jp
mov
cwtl
cmp
dec
jmp
jp
dec
or
call
jecxz
mov
sub
sbb
rolb
mov
mov
lods
outsb
add
movsl
xorb
adc
xor
cltd
nop
mov
fildl
repz
or
and
xor
mov
loopne
sbb
insl
fadds
aam
in
pop
adc
enter
call
pop
push
jne
adc
dec
fs
or
adc
ja
xchg
aad
xor
xchg
push
cs
adc
push
repnz
add
int
mov
outsl
ret
imul
out
incb
test
mov
iret
mov
adcb
push
mov
and
jbe
sub
inc
adc
fs
mov
rcll
dec
in
pop
lock
or
shll
into
rcrb
testl
cmc
ljmp
out
inc
sbb
and
outsl
jno
inc
pop
pop
push
jo
mov
or
push
sbb
cmp
roll
jnp
int3
add
in
les
push
pushf
dec
add
fs
mov
mov
inc
pop
std
insb
cwtl
mov
fwait
mov
ja
ret
jb
xchg
into
data16
lret
lods
pop
jb
std
and
cmp
in
out
ret
sub
fs
lret
cwtl
int3
sti
dec
add
jbe
imull
mov
pop
leave
bound
cltd
in
scas
and
or
inc
lcall
jno
insl
push
push
movsl
adc
jle
into
inc
inc
mov
push
pop
lret
pop
mov
test
stos
ja
cwtl
xchg
mov
stos
loop
add
lret
outsb
stc
pushf
cmc
les
fnstenv
add
jmp
push
add
into
rol
lahf
pop
out
inc
ret
cltd
push
mov
scas
fmuls
xor
xchg
cmpl
fidivrs
pop
mov
mov
les
mov
sbb
lahf
pop
in
pop
daa
int
dec
mov
jns
cmc
fmul
js
insb
cmp
dec
aam
bswap
sub
test
enter
pop
out
ds
rcl
call
repnz
push
inc
jp
sarb
mov
shlb
xchg
popf
add
int3
mov
rorb
jo
outsb
fldl
stc
xor
xlat
insb
sub
loopw
add
stc
sbbb
cwtl
adc
imul
sarl
xchg
adc
frstor
lds
or
xor
fadd
in
in
inc
push
stos
loopne
lret
add
dec
pop
sbb
or
push
testl
add
cmp
hlt
notb
sahf
dec
cmpsb
or
lcall
out
scas
jge
repz
clc
loopne
xchg
or
out
pop
and
push
iret
stc
and
mov
adc
and
loop
pop
jecxz
enter
sub
adc
sbb
push
push
pop
lods
into
jl
cld
mov
inc
subl
int3
pop
int
inc
inc
xor
sub
pop
jg
subl
vaddsubpd
and
arpl
xchg
subl
jle
test
mov
mov
ljmp
and
mov
cmp
loopne
mov
imul
popa
fidivrl
fs
mov
mov
cld
repnz
movsl
loopne
lea
or
lods
cmp
pop
call
add
divl
inc
aam
sahf
sbb
gs
push
daa
shrl
mov
int
rcr
push
test
into
lret
jmp
pause
movsl
je
or
adc
cltd
push
sbb
jbe
fcoms
out
in
add
mov
pop
xor
dec
mov
xchg
movsb
in
data16
out
das
insl
stos
in
sub
lock
rcll
ret
mov
push
push
xchg
lds
dec
aad
sbb
shlb
stos
out
loop
mov
rol
pop
add
sub
jmp
mov
ret
pop
sbb
loopne
or
adcb
repz
std
jecxz
pop
mov
mov
ds
mov
and
and
inc
lret
out
fcomps
lret
and
popf
out
pcmpgtd
hlt
loope
inc
xor
cvtps2pd
jno
ficomps
mov
pop
rorl
jge
xlat
xor
xchg
out
cmp
fldenv
stos
cmp
test
sub
lcall
pushf
in
sbb
xor
fmull
aaa
or
mov
pop
pop
or
jno
and
pop
enter
fildll
arpl
mov
dec
and
mov
sub
stc
aam
pusha
mov
or
xor
iret
pushl
or
xor
add
xchg
aaa
in
movsb
xchg
pop
out
fmul
sbb
lret
movsl
loopne
fimuls
nop
es
test
leave
dec
mov
test
push
nop
cs
sub
xor
push
movlps
insb
jno
xlat
sbb
pop
popl
loopne
pushf
add
sbb
add
mov
sbb
sbb
arpl
repz
cmp
pop
mov
pop
mov
and
mov
int
fs
push
pop
adc
add
int3
gs
xchg
enter
dec
lahf
clc
nop
int
outsl
pop
lahf
out
fcmovbe
jns
test
xor
dec
fwait
push
mov
cmp
push
in
dec
stos
fistpl
push
xchg
mov
push
jp
sbb
scas
icebp
mov
ss
mov
in
int
pop
jne
xchg
sahf
in
sub
rclb
test
popf
mov
pop
test
dec
test
sub
fldt
adc
adc
xlat
in
mov
addl
sbb
lahf
aad
mov
popa
xchg
popaw
mov
xchg
fsubr
lods
scas
mov
int
je
repz
ret
ret
xchg
std
pop
cmp
loop
xchg
adc
push
cltd
into
push
xorl
ja
rorl
sbb
sub
mov
mulb
or
jne
icebp
js
inc
jo
pop
jnp
jns
out
xorl
pop
bound
xor
sti
std
pushf
outsb
pop
or
cmpsb
sub
cmpsl
sub
cmp
adcl
testl
fcomps
shrb
sbbb
lret
push
scas
push
cli
jle
dec
xchg
mov
adc
fs
adc
mov
adc
cli
mov
inc
gs
scas
inc
inc
inc
jle
fimull
sbb
mov
push
loope
int
xchg
xor
fwait
test
icebp
aam
lea
mov
sbb
in
fwait
xchg
xchg
lahf
mov
sbb
adc
mov
mov
xlat
das
or
into
push
xchg
jb
jmp
sbb
mov
push
sbb
pusha
scas
test
xchg
mov
icebp
enter
cmp
loop
pop
int3
imul
pop
inc
loop
sub
xchg
mov
mov
mov
pop
scas
lds
jmp
das
lcall
cltd
repz
mov
je
xchg
mov
cs
inc
bound
mov
mov
mov
jle
or
lret
dec
jnp
cmp
fldcw
popf
lods
mov
mov
addr16
lea
in
add
in
clc
inc
stos
sahf
aaa
pop
cmp
subb
adc
shrl
loop
xchg
sub
push
and
mov
sbb
add
sbb
stos
cli
push
cmp
mov
iret
jne
ret
push
pop
test
mov
ret
sbb
fbstp
adc
dec
adc
ds
cmp
arpl
mov
inc
pusha
jbe
cld
mov
aaa
mov
mov
mov
adc
iret
mov
sub
xchg
pop
mov
xchg
adc
xor
dec
into
jg,pn
or
lods
out
dec
dec
imul
mov
mov
repnz
mov
sub
and
jne
cmp
push
insb
insb
int
out
outsb
sbb
inc
rcll
cmp
scas
rcll
sti
add
dec
in
repz
lahf
pop
push
inc
lcall
jge
sbb
xor
ljmp
push
mov
sbb
xchg
xor
movsb
das
pop
pop
xor
jge
jge
jle
aas
repnz
sbbb
fisttpll
data16
shrl
cmp
movsl
in
pop
inc
fldz
push
dec
adc
dec
adc
scas
jge
fidivrl
pushf
dec
adc
sub
loop
cmpsl
imul
jecxz
roll
mov
jnp
mov
mov
jecxz
mov
xchg
lds
or
push
aas
pop
int3
mul
mov
inc
aad
cs
xor
mov
xlat
xchg
jb
cs
int3
jmp
loop
cmp
mov
add
cmp
fcompl
dec
add
insl
push
lock
mov
jp
and
ficompl
repz
sub
mov
orl
das
push
sbb
dec
ret
xchg
jmp
fisttpl
out
inc
xor
push
mov
stos
inc
test
ret
fs
inc
fs
daa
mov
fs
test
stc
int3
xchg
rcll
aaa
adc
xchg
mov
push
fidivrl
arpl
push
loope
sub
mov
pop
mov
les
add
mov
sbb
mov
or
pop
adcl
dec
fmulp
out
leave
or
clc
repz
push
cmp
mov
mov
xchg
setnp
xchg
lcall
fistps
repz
cld
daa
jg
aad
in
std
sbb
mov
mov
mov
leave
sbb
ljmp
cmc
xor
jle
rclb
test
aaa
ret
or
lahf
ret
jecxz
pop
push
ja
lahf
jmp
sbb
adc
shll
lahf
cmp
mov
mov
aam
mov
xchg
fnstsw
jns
test
enter
or
inc
addb
insb
cs
mov
dec
fstl
jmp
mov
rcr
test
bound
stc
sub
mov
mov
stos
ret
xor
mov
xor
fwait
add
mov
call
xor
fidivrs
pusha
lods
ljmp
ja
cld
pop
add
mov
mov
popf
inc
addb
insb
jmp
cltd
add
fsubp
into
and
or
dec
test
and
push
popa
xchg
mov
jp
mov
clc
adc
fdivl
je
lret
into
lahf
add
fisubrl
in
fisttpll
jno
cs
cli
movsl
cmpsl
nop
lret
decb
ret
test
jns
sarl
insl
ret
jno
iret
cmpsl
dec
les
insb
jmp
rcr
bnd
xor
testb
sbb
test
lahf
cld
push
dec
sbb
lods
xor
pop
ljmp
addr16
inc
sahf
clc
movsb
mov
cmp
sub
add
adc
xchg
fdivs
ss
stos
jle
ret
dec
sbb
hlt
ja
cmp
mov
popa
jmp
insl
dec
xor
pop
movsl
xchg
repnz
mov
xor
xchg
test
jp
int3
enter
lret
shll
push
aaa
lds
dec
addb
inc
jne
mov
mov
in
int3
xchg
inc
out
mov
jle
mov
add
xor
jnp
jns
xor
jnp
or
mov
das
test
test
bound
mov
ja
dec
stos
addr16
xchg
leave
arpl
mov
jmp
push
xchg
nop
push
mulps
mov
clc
das
outsl
adc
add
push
cmp
out
in
push
add
insl
mov
stos
cmp
mov
cld
ret
xlat
int3
and
fcmovnu
xchg
adc
test
inc
in
mov
sbb
adc
pop
rorl
movsl
dec
out
ucomiss
xchg
xlat
nop
push
cmpsb
mov
shll
push
lds
sbb
jbe
xchg
dec
repz
xor
xor
pusha
in
fdivs
fists
cmc
movsb
adc
xchg
out
repnz
in
push
xchg
add
pop
cmp
push
repnz
inc
outsl
add
adc
icebp
lcall
and
cli
or
push
jl
adc
adc
test
mov
negl
mov
and
jmp
cmpsb
jnp
xchg
pop
daa
aad
mov
ss
sbb
pop
int
mov
add
adc
mov
addr16
xchg
clc
lret
mov
into
jne
out
sti
movsb
pop
sbb
das
lret
push
pop
dec
lret
mov
fmuls
mov
add
stos
jnp
adc
mov
mov
cmpsl
orl
xchg
std
popa
idiv
divb
xchg
mov
out
fcomip
jb
subl
mov
mov
daa
sub
xchg
nop
mov
fisubrs
add
sbb
jbe
adc
dec
inc
je
adcl
iret
in
and
ds
imul
mov
insl
ss
or
sub
jo
cs
int3
ja
lea
mov
and
insl
jg
dec
jg
popa
scas
mov
or
add
fmull
rcl
fcompl
jo
pushf
xchg
jbe
mov
scas
add
rclb
in
test
sub
lds
xor
es
jg
cwtl
cs
and
shr
mov
cltd
mov
ds
lea
sbb
fimuls
or
sti
addl
and
into
filds
aas
icebp
dec
out
or
mov
iret
xchg
lock
inc
mov
flds
pop
mov
test
popf
fbld
mov
sub
testl
ret
shl
test
mov
add
sbb
cltd
out
outsl
lcall
jle
out
daa
aaa
jo
dec
or
mov
sbb
shr
ja
test
jecxz
inc
xchg
jp
ror
and
shlb
in
lahf
bound
adc
fbstp
test
cmpl
mov
cmc
mov
mov
push
in
cwtl
filds
mov
xchg
subb
jae
int
sbb
rorl
mov
mull
rclb
xchg
insb
les
cmpl
pop
notb
xorb
jno
lds
sahf
fistpl
sbb
jb
lret
and
iret
xchg
fcmovb
faddl
aam
std
mov
int3
xchg
adcl
std
or
sub
lahf
xor
test
push
lret
sahf
fstps
movl
in
mov
pop
repz
mov
push
jb
jmp
fcoms
mov
ffree
shrl
mov
pop
fldl
fists
sbb
lock
xlat
test
jp
ja
orb
cmc
push
out
pop
fldenv
jbe
mov
xchg
imul
loope
cwtl
cmp
sbb
repnz
mov
int
push
shl
gs
pop
in
adc
pusha
push
pop
sub
sub
and
jle
xor
mov
out
scas
mov
rorb
test
nop
outsb
in
subl
ljmp
inc
lret
outsb
dec
lea
outsb
pop
sbbl
xchg
nop
outsb
jns
cmp
xchg
std
stos
mov
iret
pop
mov
subb
xchg
ret
xlat
fldenv
mov
pushf
sbb
jbe
or
lods
aaa
orb
jge
xchg
pusha
jne
xchg
test
pop
hlt
notb
sarl
iret
aam
xchg
in
adc
add
bound
sub
sbb
scas
incb
mov
inc
pop
cmp
hlt
xchg
pop
or
cmp
nop
sub
mov
in
pop
and
lret
outsb
mov
flds
mov
pushf
cld
loop
ljmp
sbb
pop
repnz
arpl
scas
cmp
aam
stos
pop
mov
pop
inc
in
lret
insb
adc
aas
pop
call
lahf
shrl
and
mov
mov
mov
ret
inc
testb
enter
out
add
mov
sub
and
enter
pop
mov
movsl
push
push
jns
test
testl
ja
xchg
ret
inc
mov
into
sbb
mov
sub
and
adc
mov
andl
cld
scas
data16
stos
xchg
call
aad
lret
das
rorb
test
mov
fmulp
gs
lret
or
sub
mov
push
imul
ret
inc
inc
loopne
lea
mov
lods
xor
sbb
ret
inc
outsl
mov
inc
pop
imul
repz
testl
call
jno
inc
ljmp
mov
imulb
loopne
out
aam
fucom
cs
shrb
xchg
iret
jp
sahf
push
lcall
cmp
mov
lock
aam
stos
mov
pop
xchg
cmc
lret
outsb
mov
pushf
or
jp
sub
jecxz
jnp
fdivl
lcall
sahf
mov
sub
and
xchg
out
mov
sub
mov
movsb
add
dec
and
inc
std
notl
jbe
lds
jbe
in
mov
lock
cli
sarb
mov
xchg
mov
aad
test
testb
xlat
push
xchg
add
mov
arpl
mov
mov
in
repz
mov
pop
fstps
std
loop
aam
mov
jne
int3
sbb
adc
int3
lea
lret
fadds
mov
add
or
lahf
loop
test
cmp
mov
or
xor
dec
lahf
out
cmpsl
lret
sti
mov
cltd
inc
mov
sub
fidivrl
lcall
movsl
xorb
push
fcomi
push
int
jo
lds
ret
pop
pushf
mov
push
fstpl
orl
mov
cld
xor
test
and
mov
jecxz
pop
sbb
adc
sbb
stc
cmpsb
pushf
or
mov
popa
push
add
mov
out
mov
paddusb
out
mov
je
sbb
cltd
mov
outsl
stos
les
mov
adc
add
lea
dec
dec
ret
xor
adc
sub
rcll
out
dec
in
adc
fnstcw
xchg
mov
mov
out
lret
loope
mov
clc
scas
popf
std
pop
test
pop
mov
fsubrs
out
fdivrs
scas
rclb
fdivrs
scas
lret
xorl
push
xchg
icebp
lds
push
mov
pop
sbb
fadds
sbb
xlat
ss
jno
loope
adc
aas
scas
cltd
push
mov
and
or
fwait
cmp
jne
les
cmp
fwait
and
pop
add
int3
cmp
cmp
push
mov
fstps
adc
mov
jmp
inc
in
adc
lahf
fs
xor
inc
adc
int3
or
push
scas
andb
jle
push
fwait
cli
ror
inc
outsb
xor
bound
sti
clc
repz
inc
scas
add
aad
fsts
test
and
subb
and
data16
add
pop
scas
imul
insl
mov
inc
push
and
sub
xchg
sbb
push
mov
and
xlat
scas
push
fcompl
pushf
sbb
jmp
sub
mov
ret
into
out
lea
leave
test
mov
cmp
imulb
mov
test
cmp
jl
insl
sti
sti
pop
xor
push
push
movsb
adc
xchg
popa
arpl
repnz
cmp
add
aaa
and
push
push
inc
cmpsl
xor
insl
jmp
pop
sahf
sbb
aaa
stos
jle
enter
cmpsb
cmpsl
sbb
mov
sti
test
test
imul
lea
out
ror
mov
iret
cli
xchg
push
into
gs
and
inc
shlb
sbb
dec
xchg
jns
pusha
movsl
pop
inc
stos
popa
sahf
rcll
negb
sbb
pop
jecxz
arpl
inc
jg
imul
test
pop
lea
fidivl
arpl
testl
in
xorl
leave
daa
xchg
sbb
cmp
setge
or
test
xchg
inc
xchg
mov
out
int
insl
xlat
lret
in
push
inc
push
fwait
sbb
cmpl
in
shlb
psadbw
xchg
inc
xchg
mov
adc
add
mov
idivb
mov
scas
cmpsl
jno
js
repz
sub
dec
sbb
lds
repz
xor
movsb
outsb
arpl
mov
lods
shl
adc
mov
and
lcall
loop
sub
hlt
sub
fisttps
icebp
rclb
subl
hlt
js
subb
sar
and
xor
in
push
mov
add
and
fimull
fbld
into
xor
subl
xlat
or
cld
dec
scas
nop
stos
aad
mov
jnp
pop
xchg
out
loope
ds
call
hlt
leave
stc
addl
lods
adc
rclb
jmp
iret
outsb
subb
int
cmp
call
cmp
cmc
sbb
xchg
mov
ds
test
out
add
shrl
insb
push
call
lahf
lcall
mov
xchg
pop
mov
sub
jno
data16
xchg
sbb
scas
popf
shll
push
adc
in
push
mov
fs
sti
pop
orw
inc
cltd
int3
jbe
stos
lret
imul
xlat
pop
xchg
mov
sti
jecxz
and
std
dec
ficomps
lcall
movsl
or
andl
cmpsl
lahf
mov
scas
sti
rcrb
sti
mov
jnp
rolb
pop
movsb
arpl
jo
xchg
push
int3
lods
insb
dec
mov
xor
fwait
scas
repnz
add
inc
mov
jb
cmpsl
xor
fistpl
mov
and
out
aad
pop
mov
xor
mov
lahf
dec
push
cmp
add
out
lock
adcl
pop
xchg
add
out
jno
inc
xorb
sub
test
xchg
std
ret
leave
xchg
data16
movsl
notl
in
adc
test
pop
dec
inc
dec
mov
xlat
sub
adc
cld
add
data16
or
sbb
mov
les
in
nop
cmpb
addr16
inc
cli
rcll
ret
aam
add
adc
pop
sub
adc
cmpsb
or
shlb
negb
les
adc
dec
mov
add
xorb
je
inc
cmpsl
inc
iret
cltd
cmp
mov
mov
arpl
xchg
cmpsb
gs
xor
js
sub
fildll
cli
xchg
enter
mov
fnstenv
enter
jbe
clc
push
mov
mov
and
lahf
add
adcb
push
mov
jnp,pt
aam
test
mov
imul
sbb
mov
outsb
mov
cmpsl
pop
fsub
ss
out
out
sub
inc
hlt
lret
mov
lcall
out
les
or
test
fistps
lea
dec
sbb
fidivrl
movsl
lret
repz
mov
push
cltd
pop
push
mov
and
xor
fnstcw
lret
aad
mov
orb
xor
mov
jbe
pop
xlat
filds
rolb
rolb
mov
sbb
sub
mov
mov
pop
xlat
ror
jmp
jo
pusha
bound
divb
popf
inc
jmp
out
sti
repnz
ret
mov
ret
in
roll
dec
mov
movsb
xor
xor
ja
sub
dec
das
out
pop
cmp
dec
in
inc
popa
mov
divl
ljmp
mov
xorb
adc
scas
lret
xlat
dec
inc
dec
add
mov
add
lcall
dec
sbb
sbb
das
jmp
inc
jne
int3
pop
test
fwait
mov
enter
sbb
test
mov
and
fcos
xchg
pop
jb
jmp
cmp
rcrl
adc
ud1
lret
and
scas
sbb
xchg
nop
pop
out
xchg
and
push
ds
cmp
push
xchg
push
fsubrl
das
pop
iret
insl
dec
arpl
test
cmpsb
adc
cmp
jno
frstor
add
or
dec
push
mov
mov
cltd
cmpsb
mov
cwtl
push
ret
jg
sub
subb
push
xchg
xlat
or
movb
ljmp
pushf
push
sbb
negl
out
dec
stos
mov
std
xchg
outsl
xor
pop
dec
pop
xor
fistl
sub
out
push
scas
pop
xchg
lahf
sahf
jo
xchg
add
fs
in
roll
test
lods
xor
popf
stc
xchg
in
inc
cwtl
out
mov
loop
outsb
cli
fwait
loope
into
popf
aaa
ljmp
jge
mov
push
mov
outsb
pop
jmp
adc
fucomi
cwtl
das
lods
je
xchg
mov
in
xchg
in
sbb
data16
cmp
lcall
out
aas
addr16
dec
jns
add
nop
sub
jnp
jmp
xchg
push
ror
jo
fsub
movsb
ret
mov
sahf
cltd
cmp
add
lock
gs
cwtl
aad
pop
or
iret
push
jle
test
insb
jge
mov
push
test
pop
imul
push
and
lcall
ds
int
push
js
cmpsb
pop
push
jecxz
sbb
iret
push
mov
shl
ret
rcrw
inc
inc
mov
dec
gs
xchg
pushf
shlb
xlat
insb
ret
jbe
cmp
mov
jns
xchg
stc
mov
add
loope
shlb
lret
int3
sbb
sbb
popf
in
jne
ja
ret
roll
leave
lcall
jae
or
insl
xchg
jno
movsl
les
out
xlat
ret
lock
stos
jecxz
push
loope
xchg
xchg
xor
push
sbb
aam
or
stos
mov
insl
std
outsb
in
inc
inc
arpl
lret
insb
mov
shlb
clc
pop
xchg
mov
movsb
push
xor
inc
xor
mov
testl
mov
lret
clc
mov
mov
inc
dec
arpl
dec
loopne
sbb
lahf
out
mov
adc
mov
push
imul
dec
pop
fcmovnbe
orl
and
subl
inc
cmc
xchg
and
jge
es
into
fs
mov
arpl
hlt
nop
in
nop
into
in
out
add
lahf
shlb
inc
movsb
jp
push
aaa
fnstsw
out
stos
pop
arpl
cmp
popa
les
test
sahf
pop
cli
mov
negb
push
mov
xchg
jnp
fwait
pop
jecxz
xlat
pop
imul
sub
dec
das
push
aad
popa
xor
xchg
test
addb
pop
push
sahf
inc
int
mov
xlat
lods
mov
dec
sar
xor
pop
adcb
bound
push
out
shl
and
shll
inc
lcall
push
divl
ds
sub
outsl
cmpsb
stos
sbb
movsb
sti
push
jl
bsr
insb
fucomi
fisttpl
or
movsb
xor
adc
push
imulb
out
mov
nop
test
fcmovnb
push
test
inc
fiaddl
cld
cmc
mov
add
stos
in
xchg
lret
idivl
stc
mov
mov
repnz
in
mov
mov
movsb
mov
sbb
sbb
xchg
repz
mov
jae
mov
aad
lret
out
dec
xor
ret
ss
xlat
inc
cmpsb
mov
add
mov
dec
sub
div
test
dec
ss
fmull
movsl
push
mov
iret
outsl
decl
pop
fcompl
sub
fnstenv
cli
add
push
jno
outsb
pop
inc
fisubl
pop
pop
xor
gs
nop
push
mov
shl
push
ljmp
inc
cmpsl
clc
jne
sti
cwtl
arpl
fiadds
jmp
ret
dec
repz
mov
repz
or
lret
test
pop
inc
loopne
push
pop
cmp
and
mov
jecxz
mov
mov
adc
into
sahf
inc
iret
sbb
add
mov
mov
adc
xchg
pop
and
les
xchg
and
xchg
nop
sub
push
xchg
xor
mov
push
lahf
mov
pop
test
ror
mov
sahf
movsb
test
sub
repnz
lea
add
into
negb
push
push
cmp
mov
stos
pop
psubsw
dec
cwtl
aad
cmp
int3
mov
mov
ljmp
movsb
lods
mov
cmp
xchg
xchg
sti
dec
test
inc
push
mov
pushf
int3
xchg
data16
adc
jmp
inc
fmulp
fsubrs
pcmpeqw
ljmp
ret
stos
cld
cmpsb
fxch
pop
and
outsb
mov
xorb
push
dec
js
xor
loop
aaa
lahf
mov
aas
xchg
lods
in
add
insb
insb
shlb
dec
jl
sbb
negb
lcall
out
sbb
inc
fldenv
jmp
mov
loop
call
icebp
iret
push
adc
dec
sahf
xchg
icebp
jne
pop
add
ret
lock
and
mov
test
sub
dec
sub
data16
movsl
pop
mov
fstps
icebp
dec
sbbb
mov
sbb
cmp
sti
mov
adc
jo
ja
jno
inc
je
jne
add
lret
sbbl
mov
ficoml
cmp
adcl
ds
and
test
leave
inc
jg
outsb
xchg
sbb
pop
cmp
dec
adc
cmc
dec
adc
sar
dec
int
dec
pop
aaa
jae
jp
outsl
pop
push
mov
inc
sub
leave
jae
aaa
fwait
in
cmp
pop
mov
rcrl
and
jno
dec
leave
iret
js
movsb
dec
in
sahf
test
ficomps
shrb
cmp
jmp
imul
or
mov
mov
push
jle
pop
out
inc
push
mov
sub
and
bound
mov
xchg
sbb
lcallw
inc
out
xchg
aam
out
fwait
hlt
test
push
inc
dec
loopne
mov
mov
fucomi
sti
cltd
ret
sub
pop
lea
xor
inc
mov
sub
cmpsl
stos
test
les
in
scas
xchg
in
xchg
stos
lock
iret
addl
mov
jge
lret
xchg
sar
inc
ret
and
jb
lret
std
iret
adc
or
jne
movsl
xchg
xor
std
repz
pop
mov
fcomi
mov
loop
ja
mov
in
adc
scas
aaa
cld
in
out
divb
mov
xor
mov
adc
xchg
dec
scas
iret
ficoml
xchg
aad
stc
mov
arpl
push
xorb
test
mov
inc
cli
xchg
clc
mov
divl
push
gs
popa
xor
mov
jg
add
inc
lret
scas
sahf
mov
jno
lahf
out
rcrl
lcall
and
dec
and
lret
rolb
adc
test
sbb
inc
std
shrl
lods
mov
rcrl
out
mov
push
xorb
lcall
jo
out
jnp
mov
cmpsl
into
mov
pop
xorl
in
lods
pop
or
xchg
xchg
pushf
gs
mov
subl
dec
lcall
inc
cmp
pushf
ret
sub
add
ja
xchg
inc
mov
adc
mov
repnz
ret
xor
jge
aam
mov
rcrb
fidivl
push
repz
fsubrp
stos
sahf
fdivrs
lock
and
js
cmp
loope
or
xchg
lahf
ret
test
cmc
cmpsl
adc
sbb
mov
xchg
data16
xchg
scas
aad
and
mov
js
sub
adc
mov
jle
fwait
cmpsl
sbb
mov
jp
fnstsw
lea
movsl
mulb
mov
mov
cld
mov
cwtl
jnp
xchg
into
rcl
leave
cld
in
repz
and
in
js,pn
out
icebp
lcall
movsl
outsl
daa
leave
loopne
adc
aas
imul
lods
or
inc
popfw
mov
movsb
push
call
mov
push
sbb
cmpsb
fidivs
das
sub
out
adc
sbb
out
sub
xchg
push
xchg
xchg
orb
int
xor
mov
stos
sahf
cmp
add
sub
or
pop
pusha
iret
into
addr16
ficompl
arpl
jns
inc
xchg
lds
pop
mov
sti
push
mov
and
xor
push
repnz
cmpb
inc
lret
movsl
pushf
cwtl
test
sar
or
out
adc
lret
call
out
test
rcrb
into
fcomps
lahf
sbb
push
shr
dec
leave
mov
out
mov
mov
add
mov
inc
push
icebp
cmc
add
fldt
push
icebp
mov
in
clc
push
mov
movsb
push
mov
jbe
sbb
adcl
inc
movsb
scas
mov
push
iret
ljmp
xchg
jl
loope
adc
test
lods
movsl
xchg
jb
cmp
inc
pop
in
stos
test
inc
movsb
inc
sbb
or
adc
popf
or
gs
scas
ljmp
jle
xchg
das
ficoml
aad
lea
mov
popl
mov
lods
pop
lods
xchg
fsts
insb
jne
popl
mov
pusha
sahf
jno
xchg
ljmp
push
add
aad
lea
arpl
inc
mov
movsb
push
mov
negl
push
xchg
pop
popf
push
popa
enter
push
dec
and
xchg
or
jnp
rorb
push
push
push
aad
mov
dec
pop
test
push
mov
adcl
jg
lds
push
jle
mov
inc
jno
mov
mov
or
aas
cmp
xchg
inc
inc
mov
aas
jae
mov
divl
bound
cli
repz
cwtl
push
inc
pop
out
jp
in
jecxz
xchg
xchg
lret
loop
mov
adc
stos
ret
sub
push
repnz
loopne
add
xchg
movsb
lret
fiaddl
dec
lret
insb
out
mov
aas
adc
adc
pop
xchg
and
aam
jge
mov
in
cli
adc
push
dec
mov
rcl
das
loop
jbe
fwait
mov
jecxz
andl
add
rorl
repnz
int
dec
inc
hlt
insb
xchg
sahf
in
jle
loope
hlt
lds
xchg
sahf
inc
clc
push
fldcw
mov
add
push
mov
xor
lret
or
ret
jle
sbb
jg
xlat
pop
mov
mov
add
cli
popf
in
fldt
push
rorl
mov
lock
insb
mov
stc
in
push
jmp
gs
imulb
add
sub
mov
mov
adc
sahf
jno
lret
jnp
adcl
inc
mov
nop
xchg
ljmp
or
sub
fisttps
in
dec
ret
mulb
fcmovbe
bound
mov
cmp
mov
ret
xchg
or
movsb
out
dec
test
test
loop
sbb
add
mov
sbb
xchg
scas
stos
mov
lods
sub
push
add
sbb
fisubl
jns
sahf
xor
ljmp
jns
shlb
cltd
sub
adc
out
loop
mov
es
mov
pushf
sahf
dec
pop
xor
mov
movsl
mov
mov
xor
add
ja
fs
or
xor
std
xchg
shll
mov
mov
outsb
mov
lods
mov
lretw
xchg
pop
hlt
lret
cmpsl
cmp
repz
mov
mov
xlat
aad
test
cmc
inc
divl
movsl
out
xlat
mov
repnz
inc
cltd
add
in
mov
jb
sahf
mov
loop
scas
enter
dec
mov
test
divl
out
xlat
mov
and
shr
shll
mov
and
outsl
mov
std
mov
or
je
dec
pushf
pop
adc
insb
lea
lret
cmc
sahf
dec
push
aas
rol
roll
inc
mov
cmp
gs
jo
loopne
daa
lods
fisttps
int
inc
pop
pushf
ret
mov
cwtl
lahf
popf
cs
or
in
ja
inc
add
push
ljmp
cmp
and
imul
cwtl
rolb
lret
add
sub
inc
arpl
orl
xchg
mov
aam
shll
into
int
mov
mov
mov
sub
movsb
nop
mov
sbbl
lcall
push
mov
sbb
jne
enter
pop
nop
xor
cld
in
in
std
mov
inc
fisubrl
mov
cmpsl
sub
xchg
mov
mov
xchg
mov
nop
mov
pop
loope
ret
xchg
lock
lock
or
mov
mov
mov
fildl
cmpsb
vlddqu
jb
or
xor
fcoml
mov
pop
xchg
xchg
sahf
inc
cmp
pop
lds
mov
rclb
xchg
stos
mov
test
adc
xorb
sbb
and
not
out
mov
aad
xchg
sti
repnz
dec
and
or
cmpsb
ret
ljmp
pop
scas
dec
popf
sbb
stos
lret
test
in
cltd
jno
or
mov
ret
loopne
pop
cli
fs
pop
mov
jle
xchg
outsb
or
and
imul
xor
cmp
std
push
loope
stos
jecxz
mov
out
stc
inc
stos
scas
mov
movsb
mov
cmp
mov
sahf
mov
cmpsl
movsb
out
jp
inc
popf
popl
xor
vmovups
pop
sar
xchg
cmc
mov
pop
leave
scas
or
cli
jp
and
inc
test
lods
rcl
fs
push
or
int3
rep
fdivp
add
in
rol
xchg
shll
mov
mov
addl
pop
fsubrp
insb
rorl
iret
inc
mov
out
mov
int
movsl
cmp
cli
test
push
aam
loop
lods
imulb
clc
sub
and
fdivl
mov
dec
lds
lea
mov
adc
sub
loope
test
mov
xlat
inc
dec
ret
mov
arpl
mov
mov
shll
repnz
into
push
mov
ret
push
sub
xchg
mov
jge
push
ss
addr16
pop
jno
pop
rcl
sbb
jo
fsubrs
loope
das
mov
popa
lahf
or
insb
mov
mov
or
lcall
test
xor
ljmp
sbb
cmp
mov
ret
leave
sti
iret
aam
push
inc
jge
out
or
adc
dec
int
cltd
cmpsl
int3
mov
lret
inc
mov
aam
cmpsb
sbb
mov
inc
add
jmp
add
xor
xorl
adc
jp
dec
loop
sub
dec
aam
insb
inc
dec
push
mov
divl
popf
jmp
sbb
rorb
dec
cltd
mov
xchg
rorl
push
mov
xchg
fs
xchg
decl
sub
mov
or
clc
xlat
std
and
movsb
ss
scas
mov
xchg
mov
push
lds
in
mov
shll
inc
add
cmc
popf
inc
or
iret
mov
pop
test
in
xlat
sbb
xor
loop
adc
mov
xor
faddl
lcall
es
pop
add
jecxz
leave
jb
inc
scas
dec
dec
xor
lret
fimull
rcrb
ss
xchg
iret
rclb
mov
mov
movsl
data16
adc
pop
js
pusha
movsb
call
and
xchg
mov
mov
xchg
int3
mov
std
adcb
stc
ljmp
cmc
xchg
jmp
adcl
mov
repnz
and
fadd
push
jnp
xor
imulb
das
pusha
cmp
loop
mov
mov
push
and
fdivl
xchg
and
lds
push
gs
jecxz
xor
sbb
inc
cs
in
push
inc
jmp
jns
inc
rcr
out
fwait
dec
pushf
sahf
fstps
sub
cltd
shr
lahf
lds
jmp
ret
sub
xchg
in
lcall
ret
testl
shrb
xchg
jae
cld
inc
mov
push
cli
lds
fdivrs
sahf
fwait
nop
lret
test
dec
aam
dec
pop
ss
mov
movsl
inc
call
addr16
mov
cmp
out
stos
ss
in
into
enter
lock
loopne
xchg
pop
es
sbb
scas
xchg
stos
push
xchg
movsb
add
pop
movsb
iret
lret
cmp
vpslld
add
mov
cli
mov
das
mov
cmp
arpl
mov
dec
fidivl
repz
outsb
lret
leave
xchg
jecxz
mov
repnz
or
sub
shll
int
mov
mov
js
sbb
fistpl
ret
adc
cmp
push
sbbb
push
xchg
inc
push
mov
jg
xor
insb
mov
sub
mov
jmp
xchg
xlat
sbb
push
movsl
addr16
mov
ret
and
pop
popa
xlat
xchg
in
rcll
and
movsb
and
stos
pop
popf
popw
lods
loop
test
nop
sbb
adc
push
in
sub
mov
ljmp
push
xchg
mov
popa
push
sub
push
and
cmc
lret
push
mov
fstl
arpl
pop
popa
push
test
xchg
fucomi
faddp
addr16
lds
ljmp
ffree
insl
mov
in
xor
pop
cmc
jo
mov
fs
std
icebp
test
inc
fmul
xchg
leave
sbbb
insl
lds
cmpsl
xor
inc
sahf
pop
cli
inc
xor
outsb
mov
cmpsb
pop
dec
leave
cltd
lret
dec
push
mov
pop
shl
or
push
out
les
inc
cmp
int3
jb
lahf
inc
cli
cmpsb
xchg
jecxz
push
jmp
js
popa
pop
xchg
jecxz
mov
or
push
dec
dec
lahf
cmpb
out
xchg
push
inc
xor
mov
mov
loop
fdivrs
xchg
sahf
pop
dec
jmp
out
int3
pop
repnz
imulb
or
sti
ret
jne
in
push
pop
shlb
push
sub
cld
hlt
and
xchg
in
pop
xor
mov
fwait
pop
mov
ds
sbb
mov
cmpsb
xor
jb
sbb
hlt
out
lea
das
push
aad
jl
fiaddl
sub
sbb
lcall
xchg
clc
add
dec
mov
in
jbe
pushf
mov
stos
push
fistl
sarb
cs
jne
mov
cmp
lods
jbe
jge
ret
ds
fcmovne
insb
jmp
jne
add
call
adc
out
out
mov
or
outsl
push
arpl
push
or
xchg
leave
add
push
movb
mov
xor
adcl
pop
sbb
xchg
iret
or
ficompl
dec
xchg
xchg
jmp
adc
test
les
scas
jae
mov
rorl
cmc
pop
shr
lret
mov
add
fistps
aaa
loope
aaa
sarb
pop
aam
mov
mov
jb
arpl
nop
jecxz
cwtl
sti
jns
shrl
or
add
test
int3
cmc
adc
mov
push
sbb
lods
adc
xsha256
cmpsb
adc
or
fdivrs
xchg
sbb
loope
dec
test
mov
popl
lcall
push
and
in
mov
jnp
in
shl
addr16
and
push
cs
xor
sub
daa
fwait
add
mov
xchg
out
sbb
rclb
inc
xchg
sarb
fdivl
xchg
pop
mov
fmulp
int
sahf
sub
jle
cmp
js
lock
insl
jne
xlat
das
jns
popf
clc
and
out
sub
xchg
add
mov
mov
das
lods
dec
adcb
incb
mov
outsb
int3
popf
rorb
lcall
out
cmc
test
cli
mov
sub
or
mov
xchg
into
adc
mov
mov
popa
mov
int3
int
jp
pushf
lds
xchg
jmp
std
test
mov
or
sub
inc
leave
inc
jp
rcr
es
xchg
pop
insb
and
jg
ljmp
mov
movsb
in
sbb
popa
test
mov
pop
push
test
jae
leave
dec
mov
sbb
mov
fidivrs
add
cli
dec
push
cli
out
cwtl
adc
int3
icebp
mov
fldl
xchg
xchg
cld
dec
lds
push
addl
imul
mov
fists
lock
nop
mov
jae
pushf
ud1
out
aam
jle
lea
jge
push
icebp
fs
dec
mov
pop
in
enter
lret
jge
lods
cli
in
fwait
mov
insb
test
xchg
ret
cwtl
outsl
ficoms
cwtl
add
out
sbb
mov
sbb
not
andb
fnstsw
jle
mov
data16
nop
and
xchg
jnp
cli
mov
addl
adc
in
shl
stos
sbb
and
jb
pushf
nop
fsubs
jge
mov
and
mov
je
xor
inc
mov
adc
loopw
out
lcall
sti
subb
mov
mov
loop
adc
xchg
mov
iret
mov
stos
scas
add
cmpsb
push
test
mov
sub
lock
sti
loop
xchg
add
data16
lods
xchg
lods
or
stc
mov
mov
cmp
lcall
sbb
enter
add
mov
jg
into
ss
aam
jge
dec
insb
push
fisubrl
mov
pop
jp
cmp
and
das
cli
inc
pop
adc
or
sbb
insb
adc
push
and
mov
jns
mov
cli
adc
pop
pop
xor
rolb
fldcw
lcall
in
lds
mov
jmp
nop
test
and
insb
in
push
pop
inc
addr16
sub
adcl
test
out
pop
ret
outsb
loope
lods
outsb
push
adc
pop
ja
inc
adcb
cmp
aaa
sti
cmpl
shrl
aad
pusha
mul
xlat
mov
or
sbb
mov
gs
andb
xlat
mov
mov
sbb
mov
pop
sbbl
leave
mov
leave
jns
xchg
rcr
rorb
or
fs
out
outsl
sbb
jbe
data16
rcrl
loopne
pushf
adc
xor
mov
sarb
mov
sbb
cmp
add
flds
nop
jno
icebp
mov
sub
add
in
sarl
cli
dec
iret
fincstp
pop
ror
dec
xchg
pop
scas
in
imulb
dec
adcl
pushf
sub
test
jbe
shr
pushf
add
mov
dec
out
sbb
pop
mov
pop
loope
cmpsw
jns
les
cmp
fisttpll
adc
dec
xor
in
cmp
jmp
add
fistl
inc
lds
jns
fisubrl
fists
sarb
call
stc
inc
bound
cltd
stos
ss
inc
div
sbb
je
data16
push
fsubrl
jg
gs
jne
dec
ret
lea
mov
push
sbbb
inc
ret
xchg
pop
in
lcall
mull
mov
in
lds
inc
cmp
mov
jno
push
insl
data16
and
lret
jb
rclb
inc
out
sahf
jns
fsts
push
mov
aaa
cmp
inc
jns
dec
test
push
jne
mov
jg
int3
push
jno
mov
popf
pop
mov
xchg
bnd
popf
push
mov
sub
mov
mov
sahf
out
pop
repz
mov
mov
sahf
shll
jnp
sbbb
inc
mov
fiadds
fistpll
stc
mov
adc
das
lea
sub
xchg
in
roll
enter
pushf
subb
push
lock
fdiv
out
fistl
mov
add
test
insl
fidivrl
in
out
pop
cmp
inc
sbb
mov
aam
mov
cs
into
nop
jns
insb
faddl
add
inc
int3
stos
mov
arpl
subb
insl
pop
out
dec
lret
call
xchg
xchg
and
repz
push
scas
push
mov
movsb
jno
inc
in
jno
add
aaa
mov
sbb
lahf
ja
icebp
xor
shll
lods
jno
cmc
sub
cmc
mov
fldl
pop
inc
ror
out
sbb
push
mov
clc
test
into
sbb
xchg
sarb
ret
ss
mov
in
repz
test
ss
mov
xchg
cli
mov
cmp
outsl
pushf
movsl
bound
fwait
add
inc
inc
jp
aad
push
scas
popa
dec
mov
test
mov
inc
aad
test
sbb
mov
int3
int3
loop
test
leave
shll
int3
xchg
shlb
pop
shrb
ja
lea
ret
test
sarb
jl
sbbb
dec
popa
test
jb
hlt
scas
dec
mov
dec
dec
imull
push
mov
movsb
in
pop
inc
mov
xchg
push
std
inc
rorb
mov
in
add
outsb
push
adc
xor
stc
xor
inc
stc
add
mov
mov
lahf
push
test
or
test
jge
loope
aad
dec
sbb
out
inc
sub
ss
adc
pushf
lret
sub
xor
mov
push
test
fisttps
in
fbstp
subl
test
sub
fdiv
shll
and
fistpll
sbb
push
xlat
mov
stc
movsb
clc
enter
mov
or
testl
pop
sbb
xor
pop
iret
dec
pop
and
xchg
fnsave
dec
movq
or
pusha
jmp
and
fcmovnbe
andl
xorb
mov
add
add
in
and
test
fs
leave
fcomi
adc
ja
mov
inc
fmull
inc
cmp
jo
ds
sahf
and
jb
cltd
mov
sti
scas
add
xchg
adc
inc
mov
mov
lret
add
push
lret
pop
cli
push
sub
mov
aaa
clc
xlat
mov
mov
insl
in
inc
ljmp
repnz
xchg
in
mov
outsb
mov
push
push
dec
xchg
and
shll
mov
pop
pop
fidivrl
enter
lds
test
inc
mov
cmpsb
daa
push
mov
addl
mov
xlat
lea
xor
test
mov
call
imul
test
and
jo
pop
fisubrl
xchg
int
push
push
sbb
xlat
bound
mov
stos
fstpl
in
inc
inc
adc
sbb
mov
or
clc
sahf
cld
mov
leave
xlat
pop
jo
xchg
cmc
pop
adc
repnz
xor
xacquire
or
frstor
cld
shrl
leave
and
cmpsb
mov
insl
push
test
or
mov
aas
enter
fcompl
jmp
movsb
adc
xchg
xchg
outsb
dec
sub
adc
ret
js
das
ficompl
rclb
pop
and
or
mov
mov
jle
push
sti
xor
enter
arpl
les
mov
out
xchg
mov
jecxz
rorl
mov
mov
push
stos
andl
and
aam
std
xchg
lcall
jl
mov
xor
stos
addr16
aam
fwait
icebp
aas
test
xorl
jae
lret
ja
in
rclb
mov
mov
jae
movl
rcrb
gs
das
int
push
out
pushf
imul
add
inc
rorl
dec
int3
in
sbb
jnp
mov
inc
test
sahf
and
out
pushf
test
flds
adc
xchg
test
fs
push
aad
adc
ja
jl
bswap
inc
cmp
rolb
push
pop
inc
mov
jmp
cmc
push
in
and
and
dec
sbb
push
adc
fimull
ljmp
dec
shl
push
lret
shll
les
cwtl
cs
jl
and
xchg
shlb
je
bound
xor
mov
jnp
test
test
leave
sahf
add
dec
and
dec
and
adc
popf
fwait
ds
popf
divl
ds
ret
fwait
mov
repz
int
out
lret
mov
jge
mov
pop
jge
ss
inc
popa
push
or
jge
or
push
xchg
int
faddl
dec
lock
and
cmc
daa
out
imul
jl
xchg
cwtl
jns
mov
shlb
fisttpll
xor
mov
cbtw
fisttpl
ret
shlb
push
movsb
aas
jb
in
aas
xchg
xchg
cld
or
cmpsl
idivb
xlat
rcr
sub
cltd
mov
dec
test
outsl
filds
lods
mov
or
rclb
pop
ss
mov
xchg
jb
aad
jg
and
shll
rclb
mov
add
fisubrs
shl
jl
xor
clc
sahf
pop
xchg
push
cs
int3
push
push
adc
int3
lock
lea
ret
mov
out
loope
mov
andl
aad
mov
mov
xchg
nop
cmp
hlt
fcoms
fcoms
sbb
cltd
call
mov
idivb
jbe
xor
dec
out
scas
mov
je
test
cmp
shlb
int
add
in
aad
mov
jge
jle
subb
test
jg
fidivrs
pushf
sahf
push
mov
mov
dec
out
in
repz
test
stc
or
jb
mov
idivl
in
loopne
sub
xor
lcall
mov
pushl
pop
mov
add
in
scas
in
in
sbb
mov
push
ror
xchg
int3
enter
loop
sub
sub
es
push
andb
jbe
mov
hlt
bound
mov
dec
pop
mov
arpl
cli
push
jne
inc
mov
pop
stos
pop
and
dec
mov
xor
sub
dec
lahf
jno
pop
jb
popf
shll
inc
push
lock
cmpsl
adc
divb
pushf
sbb
mov
push
outsl
les
repz
mov
xchg
mov
jae
mov
data16
in
cmc
popa
test
pop
xor
pop
mov
xchg
int
rclb
inc
pusha
fiadds
xchg
dec
push
sub
or
dec
out
lret
outsl
fdivr
inc
test
add
jmp
xor
sahf
int3
mov
mov
adc
movsb
fcmove
subl
loope
sti
sbb
fwait
repnz
ds
rcrb
sti
adc
add
cmpsb
out
or
lahf
repz
inc
pop
sub
mov
xlat
sbb
sub
add
not
iret
jne
push
test
mov
aad
push
xor
xchg
repz
clc
cmpl
out
pop
stc
test
je
pop
test
mov
add
jo
rclb
je
das
repnz
in
sahf
in
stos
dec
mov
stos
int
daa
or
lahf
xlat
dec
shll
jno
aam
mov
pushf
mov
scas
add
fisubrl
push
cmp
mov
sbb
xchg
push
mov
mov
cs
out
cmp
pop
push
shrb
arpl
mov
out
mov
mov
xchg
int
mov
ret
jo
xchg
mov
scas
mov
pusha
leave
test
mov
les
xor
mov
inc
mov
cmp
xchg
pop
cwtl
mov
mov
fistps
dec
in
add
movsb
shrl
fcmovb
scas
repnz
loopne
mov
bound
jo
mov
fnstsw
nop
in
test
aad
je
das
jp
ja
jns
test
jp
loopne
in
in
repz
mov
ljmp
popaw
sahf
add
addb
mov
lods
pushf
popa
enter
dec
cmp
iret
gs
inc
mov
push
orl
nop
push
test
xor
dec
mov
lcall
scas
gs
test
lcall
pushl
jg
ja
jl
stc
iret
mov
in
xlat
cld
test
stos
pop
int3
ucomiss
pop
adc
cltd
sub
scas
jmp
and
lock
imul
cmp
loopne
shlb
test
push
call
sbb
dec
dec
arpl
jns
cmpl
leave
and
loopne
daa
and
mov
jmp
loopne
xchg
jle
movsl
jmp
lds
aad
add
mov
int3
or
mov
lahf
jmp
and
clc
int3
push
mov
xor
push
arpl
enter
add
scas
jecxz
pusha
lret
mov
and
test
lcall
mov
iret
stc
push
or
scas
push
jp
mov
in
pop
out
out
cli
jbe
aas
push
mov
mov
outsl
fistpll
xchg
mov
shll
mov
leave
mov
xchg
aad
mov
pusha
mov
out
cmp
pusha
sbb
push
shll
test
cmp
popf
lcall
jg
shl
jns
or
xchg
sbb
hlt
inc
in
popl
movsl
in
sbb
jl
cltd
scas
xchg
jbe
mov
scas
and
jno
or
lds
add
adc
mov
mov
adc
lods
pop
cwtl
xchg
aad
lret
outsb
into
subl
lcall
rol
shl
add
in
out
stc
jbe
aas
push
test
mov
xchg
sarl
mov
leave
mov
add
aad
mov
out
data16
nop
pop
stos
push
aam
mov
mov
inc
popf
xchg
dec
lods
adcl
shrl
nop
cltd
cltd
clc
nop
jmp
out
aad
push
push
xlat
inc
repz
rclb
push
fwait
nop
mov
fwait
nop
push
cmp
scas
pop
mov
or
pop
cld
sbb
xchg
pop
mov
inc
outsl
lcall
cmc
call
stos
mov
sub
fwait
sub
push
out
jmp
xchg
sub
mov
or
sbb
mov
push
test
push
jmp
out
push
lcall
les
in
fxch
jmp
in
ljmp
xchg
out
rolb
ret
lods
push
stos
test
mov
pushf
push
cmp
sbb
or
lods
pushf
xchg
outsl
mov
xchg
mov
mov
bound
scas
fisubrl
ljmp
mov
in
mov
pop
int
jb
in
lret
scas
push
push
cs
jl
add
pop
loope
mov
mov
xlat
leave
test
or
les
mov
xchg
jmp
ljmp
les
hlt
test
cli
jbe
in
dec
outsl
in
and
decl
jl
mov
inc
adc
push
push
movsb
inc
dec
test
js
sbb
xchg
mov
xchg
add
pop
pop
xlat
xor
pop
iret
mov
in
icebp
mov
mov
das
leave
mov
xor
xchg
xchg
cmp
sarb
cwtl
lock
clc
push
add
ss
popa
je
aaa
lea
mov
mov
in
dec
aad
pusha
cmpsl
sbb
data16
xchg
lahf
sub
and
jle
iret
out
ljmp
pop
mov
or
xchg
cwtl
ljmp
scas
int
jae
mov
mov
in
cmc
xchg
test
xchg
xchg
mov
adc
push
add
cli
test
xor
inc
xchg
ret
out
mov
sub
int3
xchg
test
inc
mulb
adc
mov
in
mov
daa
ss
sbb
pop
es
leave
in
sbb
sti
jg
rorb
ljmp
cmpl
imulb
int
cmp
lods
arpl
int
in
aam
and
mov
mov
xorb
popa
outsl
pop
out
jae
mov
jle
loopne
loope
out
out
imull
add
mov
jbe
mov
mov
adc
ret
add
jbe
mov
mov
test
repz
lock
cmp
mov
xchg
mov
mov
inc
xchg
int3
jecxz
test
lds
sbb
in
cmp
mov
shl
sbb
push
jae
pop
xchg
stos
adcb
lods
shll
mulb
test
xchg
or
jbe
sub
aam
clc
cmp
pop
mov
push
cmp
mov
rclb
pop
data16
in
inc
out
sbb
mov
addr16
loop
out
ret
std
mov
int3
pop
xor
sahf
nop
xlat
xchg
in
adc
xlat
call
jnp
mov
lret
bound
ss
dec
lods
cwtl
jne
aaa
in
popa
inc
mov
scas
sub
sbb
cmp
test
add
idiv
jmp
fsubs
push
std
push
dec
pop
push
sti
push
loop
lret
popf
movsb
push
adc
loopne
sub
xlat
push
pop
fistpll
bound
mov
inc
cmp
or
rolb
les
cmpl
cmc
xchg
mov
bound
ds
inc
xor
test
repz
jnp
repz
mov
jns
scas
lcall
lods
sbb
ret
popa
aad
cs
scas
cwtl
adc
pop
movsl
int3
sbb
les
in
and
xacquire
leave
inc
setb
mov
jmp
outsl
es
subl
ret
jo
dec
outsl
dec
xchg
pushf
in
int
stos
sbb
leave
sbb
fcomip
jae
jb
mov
jns
icebp
mov
out
cmc
in
sbb
push
in
lea
adcl
mov
cs
rol
fs
shll
cmp
sub
push
and
jp
pop
repz
cltd
das
rclb
jl
dec
adc
mov
in
mov
arpl
int3
sti
mov
and
dec
lcall
xchg
not
iret
inc
subb
adc
movsb
gs
std
sahf
adc
and
mov
push
jmp
aam
test
and
lods
scas
lcall
mov
stos
push
lods
or
sub
mov
fld
test
cld
mov
jecxz
ret
ror
xchg
sbb
jg
or
pop
ficoms
jbe
cs
lods
jge
in
sbb
pop
sbb
out
cmpsl
adc
cwtl
fisubs
dec
nop
incb
repz
out
push
xor
mov
dec
cwtl
sub
pop
iret
out
sbbl
inc
negb
push
mov
iret
push
inc
xchg
fcmovb
pop
pop
pop
call
push
iret
jmp
xchg
sbb
xchg
mov
mov
lea
daa
dec
push
cwtl
push
jecxz
cmp
testl
add
lahf
inc
iret
pushf
add
xchg
imul
lock
xchg
in
lret
cmpsl
xchg
jns
bound
jb
sahf
repnz
out
jp
movsb
push
xchg
and
aad
mov
mov
dec
mov
ss
out
jmp
push
ret
insb
xchg
mov
jbe
mov
xchg
ja
xchg
sbb
mov
sub
cld
xor
or
push
dec
sbb
inc
nop
sbb
push
dec
es
insl
or
add
fs
xlat
pop
sbb
or
sub
lock
mov
mov
sub
sbb
jbe
xchg
addr16
hlt
xchg
mov
nop
mov
popf
xor
test
xchg
xchg
lds
clc
pop
sti
fs
mov
inc
xor
ret
adc
test
mov
lret
outsb
push
orl
fstps
cs
mov
pushf
pop
loop
dec
push
pop
lea
and
cwtl
ret
cltd
push
imull
div
mov
xchg
xchg
mov
stos
xchg
mov
lea
into
jecxz
xchg
dec
mov
in
mov
sti
mov
sbb
mov
cmp
push
xchg
repz
cmpl
into
out
xlat
jmp
push
mov
and
mov
repnz
scas
adc
jno,pt
push
jecxz
pop
add
push
pop
cmpb
orl
pop
fstps
jbe
cwtl
cs
dec
sahf
mov
fidivrs
cmc
xchg
mov
scas
cmpsb
add
lds
rorl
lret
outsb
push
orl
int
mov
pushf
sub
daa
dec
push
pop
cmpl
jle
call
lock
sub
insb
sub
in
cltd
fnstcw
mov
fwait
lds
mov
inc
call
out
inc
pop
push
je
mov
shr
lret
mov
sbb
pop
mov
sub
ss
in
xchg
ret
loope
fsubrp
cwtl
int3
in
sbbb
pushf
adc
fwait
xchg
call
mov
clc
inc
dec
adc
jo
xor
sub
pop
in
push
out
and
mov
xchg
push
xlat
mov
ljmp
cwtl
pop
mov
stos
add
xchg
mov
fadds
dec
cmp
lahf
bound
call
dec
ds
xchg
push
int3
ret
pop
repnz
cltd
mov
jmp
dec
arpl
push
in
xchg
aaa
bound
cmpsb
xor
fmull
dec
stos
mov
and
adc
adc
out
push
outsb
mov
jmp
test
sbb
loop,pt
movsl
divl
pushf
into
push
mov
xchg
mov
jne
xchg
leave
xchg
jmp
lods
xorl
or
inc
je
xchg
loop
je
pop
xchg
subps
aas
pop
and
aas
mov
or
pop
xchg
sbb
mov
lahf
sbb
cwtl
lock
out
and
push
scas
mov
push
mov
pop
jb
pop
leave
inc
xor
out
out
push
xchg
cltd
push
mov
and
xchg
mov
cmp
cli
out
push
sti
lret
push
out
dec
mov
decl
pop
mov
adc
pop
scas
inc
push
mov
and
push
cmc
xor
jns
mov
stos
mov
imul
lahf
daa
pop
mov
out
sbb
lcall
dec
push
lea
xlat
jmp
mov
arpl
jb
xchg
pushf
sub
inc
out
push
leave
adc
jbe
mov
das
mov
jp
pop
add
insl
sbb
push
repz
inc
dec
add
adc
lock
inc
mov
in
pop
sub
shlb
push
fistl
jb
push
and
cmp
out
rorl
sbb
repnz
pop
sub
jecxz
je
in
into
stos
test
setnp
xchg
xchg
movsb
iret
xchg
loope
push
lcall
stos
and
mov
lods
inc
mov
push
and
push
iret
pop
cs
stos
out
lds
inc
jbe
es
add
mov
leave
mov
jnp
cmp
pop
dec
mov
pop
jl
push
xor
lret
xchg
adc
leave
inc
sub
stc
jne
repnz
sbb
adc
rorl
jmp
sub
cwtl
push
shlb
int3
push
adc
leave
pop
pop
xor
pusha
out
xor
nop
outsl
add
out
mov
or
adc
add
test
xchg
inc
sbb
adc
out
pop
mov
jmp
push
test
icebp
cs
repz
cltd
sbb
push
arpl
test
idivb
inc
jp
sub
mov
lock
mov
sbb
orl
test
push
xchg
xchg
xchg
jle
cmp
mov
imull
scas
out
sbb
inc
orl
xchg
xchg
jb
popf
or
leave
lcall
mov
das
std
pop
dec
mov
mov
cmp
inc
add
inc
inc
jae
mov
pop
lret
xchg
aas
sbb
mov
test
lea
xchg
outsl
loope
addr16
out
lahf
sub
hlt
inc
loop
fstpt
lcall
push
cmc
test
pop
imul
push
popa
dec
mov
in
pop
push
adc
push
jbe
sbb
out
inc
cmp
mov
popf
shll
daa
nop
loop,pt
jecxz
fiadds
aam
mov
sbb
adc
xchg
pop
addb
push
mov
lock
loop
mov
out
pushf
adc
mov
mov
inc
jns
rolb
dec
nop
loopne
mov
aam
pop
addl
push
jp
dec
out
out
or
js
movsl
andb
and
sbb
and
push
sbb
xchg
adc
cmpsl
sbb
lods
mov
lods
out
push
cld
out
push
out
in
shlb
lcall
dec
dec
ret
mov
mov
add
sbb
je
mov
adc
jbe
inc
sbb
in
push
push
in
out
push
push
into
xchg
loop
xchg
or
fisubs
iret
or
inc
sti
pushf
cmp
xlat
pop
xchg
jle
push
inc
in
shl
outsl
push
flds
test
cmp
int
inc
cmpsb
sarb
and
xchg
mov
outsl
stos
in
and
xchg
negb
addr16
sbb
jb
or
mov
in
pop
xchg
loope
cwtl
mov
out
pop
nop
xchg
mov
roll
ds
out
ret
icebp
out
xchg
mov
jne
aad
fldt
mov
loop
or
mov
cmpsb
sbb
or
ret
pop
cmp
std
aam
mov
clc
mov
xor
and
je
std
icebp
jbe
call
imul
push
sub
sbb
jg
int
test
mov
in
repnz
pop
pop
pop
mov
sbb
clc
ds
push
jge
pop
mov
gs
pushl
add
and
add
test
out
call
idiv
push
pop
aaa
out
stc
xlat
xchg
ss
faddl
mov
dec
mov
fists
addb
sahf
mov
add
ret
das
les
out
lea
cmpsb
jle
mov
xchg
imul
das
inc
cwtl
mov
jl
jle
xchg
test
sub
mov
icebp
loopne
sub
sbbb
push
sbb
ja
or
xchg
andb
inc
loope
mov
xor
daa
mov
push
add
adc
clc
lods
out
bt
movsl
mov
push
xchg
cs
cld
or
add
lahf
pop
pop
lret
sub
push
pop
mov
fwait
shrl
mov
jb
shll
push
ret
fldcw
pop
movsb
outsl
xchg
xor
clc
fcoms
in
insb
aad
icebp
into
je
outsb
mov
fstps
mov
pushf
pop
loop
jg
push
lods
aam
stos
icebp
mov
lret
outsb
dec
orl
outsb
jb
enter
push
out
movsb
rol
inc
sbbb
or
add
add
cmp
aam
add
jecxz
mov
cli
std
mov
mov
mov
fistpll
cmp
shrl
pop
testb
imulb
xor
enter
sahf
jns
pop
lods
sbb
fsubs
mov
xor
mov
test
sub
stc
clc
orb
push
mov
or
test
adcb
mov
scas
inc
add
lds
int3
or
out
outsb
mov
fldenv
push
aas
dec
bound
mov
out
mov
aad
roll
aad
mov
pop
sbb
jno
xor
inc
adcl
data16
xor
xlat
jmp
in
fsubr
mov
mov
mov
push
mov
scas
cmp
push
lds
ss
jg
insl
or
lret
aad
fwait
inc
cwtl
dec
jbe
mov
mov
pushf
addr16
popa
xchg
shrb
aad
mov
adc
jae
cmp
add
jle
iret
roll
movsl
lahf
ret
lods
loope
cltd
add
inc
pop
and
and
inc
and
add
mov
push
lods
lods
iret
adcb
mov
scas
dec
add
data16
adc
jl
push
xchg
add
sti
mov
ret
fnstcw
sub
xlat
pop
sub
sub
cli
pop
test
out
addr16
adc
lahf
das
adc
jns
clc
xchg
xlat
fdivrs
dec
loope
lods
lods
and
shlb
loope
jg
cmp
fdivl
or
mov
cli
cmp
insl
mov
sahf
ficomps
test
push
jl
jge
xchg
inc
aam
nop
testl
fsubrp
fcoms
sub
stc
push
xchg
mov
cli
call
inc
test
cmpsb
jp
fstpl
lret
dec
push
cltd
jl
out
mov
testl
sbb
pushf
lea
pop
jl
adc
push
pop
rol
cli
jg
test
sar
repz
ret
ret
sub
inc
test
mov
xor
pushf
mov
fsts
jmp
popf
pop
jno
sarb
mov
pop
fyl2xp1
push
inc
jmp
sbb
mov
fdiv
or
lods
cld
aas
or
ficoml
xchg
xchg
ljmp
mov
adc
outsl
outsb
out
jp
movsl
loope
mov
push
in
faddp
out
xchg
out
arpl
or
dec
push
fadds
int
and
into
call
add
scas
cmpsl
and
outsl
dec
inc
insb
out
in
lods
into
cwtl
xchg
sahf
std
and
testl
adc
add
push
test
lock
cmp
lea
pop
cmp
outsb
cmp
dec
sbb
dec
jle
mov
lea
push
or
rclb
cmp
xchg
mov
xlat
jno
mov
lret
out
mov
and
adc
pop
popf
sub
and
aam
lea
jmp
mov
xor
shll
fstpl
rcrl
xchg
cwtl
xchg
mov
inc
xor
repz
cmp
mov
insb
jno
jno
adc
adcl
inc
sbb
sub
insl
xor
xor
fdivs
or
pop
scas
xor
jns
iret
daa
stos
jne
sub
jne
push
shlb
jmp
jp
cmc
test
scas
mov
push
mov
addr16
negl
rolb
sub
sbb
aam
push
cmc
rcrb
sub
bound
outsl
jecxz
push
push
inc
xchg
int
or
sub
lcall
sbb
popf
icebp
repnz
xchg
rorb
push
inc
lods
stos
mov
sub
or
ret
mov
adc
or
adc
or
in
add
xchg
lret
mov
fimull
sti
add
ret
cmpsl
xor
jecxz
mov
cmp
into
jmp
jmp
mov
sbb
shlb
cmpsl
sub
mov
mov
je
bnd
rolb
mov
jecxz
inc
xor
stc
jb
loop
fisubs
ret
mov
scas
andb
scas
mov
fwait
insb
nop
ja
adc
mov
out
test
inc
fcomi
push
ret
mov
imul
lret
in
dec
lods
int3
xor
and
pop
aam
clc
or
int
and
sub
sub
mov
roll
sub
lea
sbb
inc
outsb
push
mov
push
jne
adc
fnstcw
xchg
stos
push
test
rcll
pop
lock
jg
mov
fwait
mov
jne
fmull
rolb
fmull
scas
ljmp
lret
push
jp
test
cmp
push
js
adc
pop
xor
ja
dec
or
pop
push
push
inc
add
loope
insb
inc
test
add
sbb
daa
add
pop
push
cs
call
xor
dec
lods
shl
and
cld
mov
pop
nop
fsubrs
call
int
fsts
or
int
stos
jge
arpl
pushf
xorb
pop
popa
rol
jno
adc
mov
stos
ficomps
stos
xchg
xchg
loope
stos
std
cmc
mov
fstl
xchg
cmp
fsubr
dec
repz
test
fcoml
mov
add
jmp
in
out
jbe
jecxz
jnp
popf
xchg
out
sub
jns
cld
and
js
daa
mov
mov
mov
pop
hlt
es
lcall
fcmovbe
xchg
or
xchg
jnp
or
cmpsb
jnp
or
mov
jnp
or
insb
jnp
or
or
pop
or
sub
jl
cmp
mov
fadd
lods
mov
sarb
rcr
pushf
shr
lods
sar
pop
shrb
push
rorb
rcrb
into
or
into
sar
mov
xor
mov
cld
dec
fidivl
adc
ja
test
mov
add
jne
add
jne
add
and
mov
add
repz
rclb
sbb
notl
sbb
or
sbb
push
push
sub
jg
pop
push
sahf
cld
std
push
and
add
xor
push
add
and
sbb
cmp
lods
add
jne
add
jne
add
jne
add
test
xorb
incl
mov
lcall
adc
lods
shl
pusha
rolb
jl
pop
mov
shlb
push
cmc
mov
jecxz
xchg
rcr
movsl
int
loop
lahf
mov
in
cld
sub
cld
addr16
mov
movsl
push
lods
faddl
decb
popf
hlt
mov
shl
mov
xchg
push
jecxz
xchg
gs
sti
mov
jp
clc
or
dec
jnp
or
mov
pushl
shlb
rolb
pop
mov
push
pop
outsl
cs
or
push
pop
cmp
xor
mov
mov
add
je
add
fisubrs
jne
jne
jecxz
loopne
stos
lret
fistl
mov
shl
push
roll
fnstcw
fadds
test
fdivp
test
fisubrs
test
fimuls
adc
adc
sti
jb
dec
decl
and
testl
push
xchg
cmc
ret
push
and
and
das
test
mov
cld
sti
mov
cld
out
pushf
cld
adc
cld
xor
mov
cld
push
mov
ret
sti
mov
or
pop
sub
bound
or
loope
test
int3
loope
test
sbb
dec
test
mov
push
jp
xchg
xor
sbb
inc
xlat
adc
sahf
mov
pop
out
mov
jecxz
ficompl
mov
mov
repz
sarb
push
shrb
das
lods
insl
das
ret
push
sub
sbbb
xchg
pop
fisubrl
lods
pop
out
mov
pop
lahf
cs
test
xor
sub
push
pop
and
pusha
pop
xor
nop
lods
mov
cld
repnz
cld
jmp
jle
dec
test
ficomps
sub
jb
lret
ficoml
fisttps
test
sbb
pop
test
inc
fists
push
fbld
fbstp
je
flds
in
movsb
add
jne
repnz
xchg
je
add
inc
adc
insl
inc
push
sbb
xor
dec
test
push
loope
test
jae
or
mov
faddl
lods
jne
add
push
fsub
pushf
xchg
in
jecxz
xchg
cld
jecxz
xchg
or
dec
scas
sbb
incl
cmp
push
dec
or
adc
push
or
xor
je
divb
mov
std
mov
loopne
imull
call
push
ljmp
or
pop
test
push
sahf
add
test
mov
jmp
mov
incl
mov
jmp
sbb
ja
or
inc
mov
call
sub
aaa
cld
dec
mov
mov
inc
mov
jne
add
jecxz
xchg
into
jecxz
xchg
fsubp
sahf
xchg
out
enter
jmp
pushl
or
inc
mov
call
sub
daa
mov
pushl
mov
incl
lea
inc
mov
cltd
push
negl
mov
push
cmpsl
in
addr16
mov
repz
cld
out
fs
or
and
loope
test
jno
add
out
mov
dec
dec
shrb
mov
mov
stos
rolb
push
rclb
pop
ret
cs
dec
dec
sbb
and
rolb
movlps
sti
mov
popf
pop
notl
mov
cmpsl
adc
pop
stos
adc
push
mov
lds
loope
test
and
push
test
push
loope
test
xchg
loope
test
test
ljmp
in
loope
test
icebp
loope
test
loope
xchg
test
cmp
push
test
sub
loope
test
jno
loopne
cltd
loope
test
mov
sti
test
mov
loope
test
loope
xchg
test
adc
arpl
sub
loope
test
inc
loope
stos
dec
push
add
xchg
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
or
pop
jne
add
sbb
outsb
jne
add
inc
ficoms
mov
shlb
push
mov
negb
cs
pop
inc
cs
pop
dec
cs
pop
push
cs
pop
push
inc
pop
adc
push
pop
sbb
aam
and
data16
data16
xor
stos
out
jg
jne
add
std
addb
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
add
pusha
inc
mov
or
shrb
rcrb
loope
mov
add
mov
test
rcr
cmpsb
test
sbb
pop
mov
inc
cmp
maxps
or
jnp,pt
sub
fisttpl
or
fidivrs
or
lcall
or
mov
ds
je
cmp
mov
cld
pop
mov
cld
inc
mov
push
imul
repz
mov
adc
ljmp
add
je
add
je
add
shr
xchg
mov
xlat
pushf
neg
rcrb
je
dec
add
iret
movsb
addl
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
xor
rol
std
mov
dec
and
push
iret
jno
stos
nop
cmpsb
push
xor
jnp
cmp
frstor
mov
cld
jp
adc
lds
out
mov
jne
xor
and
andl
mov
inc
jecxz
sti
test
mov
jno
ffreep
add
mov
cmpsb
sbb
push
push
dec
sarb
mov
sbb
xor
dec
mov
popf
lahf
icebp
clc
rol
test
ret
test
sbb
rorl
xchg
pop
xchg
pop
xchg
adc
push
jb
bswap
jge
fbld
test
fildl
inc
je
add
je
vmwrite
jne
fidivs
mov
rol
adc
xchg
sbb
and
push
and
sbb
and
xor
and
sbb
incl
jle
adc
lods
leave
mov
pop
lock
inc
xchg
loop
mov
mov
and
xor
inc
push
and
imul
movsl
xor
mov
cld
xor
push
push
push
repnz
mov
sub
xchg
jecxz
mov
xchg
add
arpl
lock
mov
inc
mov
int
repnz
sbb
jns
cs
aas
das
lcall
lods
cld
iret
mov
cld
adc
cld
pop
mov
xchg
xchg
lock
adc
push
mov
adc
test
insl
jecxz
cmc
mov
mov
add
movsl
rcr
mov
lret
shlb
inc
sarb
dec
shlb
push
lds
jecxz
dec
sbb
fnstsw
nop
xchg
jbe
cmp
mov
ret
cwtl
insb
imull
fiadds
lret
jne
pop
test
inc
leave
btc
cmp
cltd
and
jecxz
or
jb
xor
add
dec
dec
or
sub
jle
and
inc
inc
cld
loopne
and
sbb
ljmp
leave
mov
xlat
cmc
push
fdivrp
test
fdivp
mov
adc
sbb
mov
cld
inc
sahf
cmp
mov
pop
and
jecxz
test
sbb
test
movsl
cmovge
pushf
mov
xchg
mov
loopne
cmpsb
test
dec
mov
lcall
pop
pushl
dec
incl
mov
loopne
mov
rcr
mov
shrb
pop
xchg
xchg
lret
rorb
test
push
fisubl
daa
push
jge
add
je
add
aaa
or
xlat
mov
mov
add
pop
inc
adc
pop
push
sbb
movsl
dec
cmpsl
adc
sti
sahf
cmpsb
mov
or
je
xor
add
inc
or
and
fs
filds
in
movsb
add
ffree
pop
mov
in
test
lret
lcall
or
inc
test
sub
and
test
mov
je
add
fiadds
in
movsb
daa
lods
sti
mov
test
or
nop
lea
adc
sbb
push
xchg
cld
xor
cld
push
mov
cld
inc
lahf
cmp
jl
cmp
mov
cmc
scas
les
out
mov
cmpxchg
pcmpeqd
unpcklps
psraw
push
fadds
mov
add
or
jnp
stos
fidivrs
lret
sahf
ljmp
icebp
loope
stos
pop
mov
idiv
pop
lds
mov
ljmp
dec
mov
aaa
mov
lds
mov
test
shll
loop
insb
jecxz
pop
mov
add
clc
pop
pop
lahf
popf
inc
inc
popf
cmp
and
inc
lods
adc
lea
sti
sbb
dec
pmulhw
ret
cmp
mov
and
push
and
rorl
mov
stc
mov
jge
iret
dec
mov
mov
xor
add
mov
cmp
mov
icebp
gs
loope
stos
out
or
daa
fdivrp
cs
or
adc
add
jle
sbb
sbb
lret
jnp
pop
clc
xor
faddp
test
fisubrs
xor
xchg
mov
sbb
add
pop
cmp
fmul
sub
sbb
and
push
and
xor
shlb
jne
js
inc
push
cli
jae
fidivs
or
jo
sbb
outsl
and
sarl
loopne
popf
or
xor
enter
aaa
movsl
mov
jmp
mov
push
mov
cmp
les
or
cmp
mov
pop
outsl
sbb
test
fidivrs
xor
mov
sbb
aad
add
ds
dec
push
sti
mov
jecxz
xchg
sbb
pop
xchg
sub
jbe
xor
or
pop
int3
xchg
repnz
imull
fisubrl
sub
insb
jne
js
cmp
jbe
pop
scas
stos
repz
stos
iret
out
jmp
xchg
daa
mov
jmp
xchg
add
inc
loop
jle
add
jecxz
xchg
push
sub
fnstsw
fbld
jle
dec
mov
cld
jo
or
mov
loopne
jno
inc
add
das
adc
cli
test
dec
mov
lret
int
jbe
test
divb
int
hlt
adc
cs
and
cmp
and
jecxz
call
dec
loop
jg
inc
or
ss
push
and
add
inc
outsb
es
loope
mov
pop
jo
mov
pop
rcr
int
dec
inc
icebp
pop
dec
loop
push
arpl
cli
test
sbb
pop
inc
ja
mov
in
int3
dec
cmc
cmc
or
sub
mov
inc
popa
jb
or
mov
or
push
fwait
lahf
mov
cld
sbb
push
je
and
add
cld
inc
mov
cld
dec
popl
in
xchg
cs
daa
lods
ss
jp
insb
xchg
xchg
pop
out
repnz
rorl
les
ret
hlt
ficompl
jo
mov
mov
add
jae
cmpsl
pop
shrb
bound
cmp
mov
cmpsb
pop
mov
lds
cmpb
pop
cmp
aaa
es
xchg
mov
cld
popf
pop
adc
jecxz
xchg
mov
cli
xchg
into
fiadds
mov
push
sahf
rcrb
cs
lret
cli
xchg
push
fwait
rcrb
ja
add
imul
xchg
jge
out
mov
enter
mov
mov
jecxz
out
cmp
cmp
adc
or
mov
mov
aad
shll
dec
ret
fsubp
test
out
pop
cmpsl
lret
cmpsb
dec
arpl
hlt
mov
xchg
dec
or
sub
out
xchg
cs
pop
dec
cs
jne
cmpsl
addr16
fildl
lahf
mov
push
mov
inc
push
push
addr16
sub
stos
dec
xchg
lcall
and
adc
pop
xchg
int3
in
fwait
outsb
dec
add
ss
add
add
mov
jecxz
lret
add
data16
mov
push
mov
push
fbld
test
xchg
jmp
cmc
in
xor
fld
addl
test
xor
sbb
pop
xchg
sbb
xor
inc
xor
ja
xchg
mov
ficoms
repnz
mov
in
pop
imul
cmp
and
push
nop
ss
pushl
push
aam
xor
dec
xor
clc
push
jl
rcr
jne
fbld
test
filds
lahf
jne
int
sti
push
push
ds
mov
sbb
out
pop
cmp
xchg
stc
test
fidivs
mov
cmpsb
andb
test
insl
sub
sbbl
add
and
mov
lret
push
cmpsb
jecxz
push
lcall
or
add
data16
in
push
sbb
inc
jmp
inc
sub
stos
mov
rorb
mov
sub
jecxz
sti
lea
mov
sbb
jbe
xor
daa
add
lret
fidivs
movsb
jmp
call
add
jbe
push
ucomiss
das
inc
cmp
mov
or
mov
in
mov
test
and
xchg
call
in
aad
sti
stos
mov
enter
fwait
test
loopne
mov
jbe
or
sbb
nop
mov
adc
pop
xchg
notl
or
ljmp
fcmovnu
fs
in
push
dec
rcrb
into
pop
mov
icebp
lods
cltd
push
xchg
pop
shrb
mov
adc
imul
jne
fidivs
and
std
sbb
in
xlat
out
and
pop
jbe
in
jecxz
jg
jecxz
xchg
stos
jecxz
xchg
pushl
aas
sar
or
or
fidivrl
fisttpl
mov
in
lret
add
mov
pop
fistps
adc
fsubr
jecxz
roll
mov
push
and
sbb
cmp
cs
inc
mov
cs
pop
push
adc
pop
pop
adc
xor
insl
ja
mov
ret
pop
pusha
ljmp
cwtl
mov
fsubrl
jb
adc
out
xchg
fimull
push
ss
stos
mov
cld
aad
test
sbb
xchg
popf
lock
sbb
stc
dec
mov
pop
mov
mov
lcall
add
cmp
popf
clc
test
xchg
xchg
add
xor
stos
in
cs
push
ret
mov
jge
jecxz
lods
rcrb
add
inc
mov
xor
jg
mov
or
mov
mul
mov
xor
push
add
or
sbb
testb
sahf
fisubrs
test
fimuls
adc
ss
jmp
jecxz
xchg
enter
cmc
jecxz
xchg
and
jg
xor
out
into
push
or
test
cmc
and
mov
lock
icebp
into
ficoms
xchg
cld
jl
popa
jmp
mov
lds
mov
enter
lods
sbb
test
dec
inc
shlb
add
fdivl
divl
adc
jnp
fisubrl
or
inc
adc
loope
test
xchg
ss
fstp
imul
cs
subb
mov
out
mov
adc
adc
adcb
jecxz
popa
lods
cmp
ja
mov
pop
mov
sbb
ss
push
sbb
sahf
and
push
and
xor
pushf
xchg
test
imul
mov
incl
mov
int
mov
stc
clc
ret
adc
inc
insb
push
sarb
daa
sub
fcoms
mov
dec
call
into
test
sub
jno
dec
jo
add
dec
dec
mov
cli
mov
shlb
cs
js
sub
fisubl
bound
stos
or
mov
fmulp
in
mov
pushf
inc
inc
pop
mov
iret
pushl
test
mov
loopne
sub
sub
int
int3
jecxz
test
pop
test
jne
fcmovbe
inc
lods
or
enter
cld
push
dec
mov
cld
in
outsl
dec
pop
push
setb
in
push
mov
mov
cld
addr16
data16
das
in
stc
fidivs
jmp
out
mov
insb
movaps
wrmsr
inc
dec
imul
in
pop
jg
bound
or
loope
iret
dec
cltd
lea
rcr
or
xchg
ror
mov
into
mov
rcrb
dec
dec
gs
in
imul
inc
daa
out
cmp
push
and
ficoms
jp
cmpsl
add
rorl
cmc
mov
les
push
xor
fcompl
adc
push
cwtl
xor
pop
fimull
das
mov
pop
mov
call
lahf
mov
push
add
push
jecxz
cmp
mov
mov
push
faddp
popl
mov
fcmovnu
shlb
jmp
pop
or
and
push
and
xor
loopne
sub
aaa
mov
in
xlat
mov
or
shlb
xchg
ja
lret
cld
mov
rorb
dec
movsb
sti
pop
or
int3
aad
mov
ret
shrb
fidivrs
mov
paddsw
pmaddwd
paddw
vmread
push
xor
mov
dec
and
pop
sub
add
lcall
xchg
or
pop
mov
sbb
movsl
addr16
mov
out
loope
stos
add
lods
mov
jne
leave
pop
xchg
shl
xchg
in
mov
das
cwtl
fs
sti
mov
les
divb
rolb
mov
xchg
icebp
mov
jo
mov
int
shlb
inc
inc
daa
cvtpi2ps
fiadds
fidivs
mov
pop
push
mov
jge
int3
scas
sti
imul
movsb
jne
add
add
pushf
lea
sub
scas
ljmp
cmc
and
push
and
imul
pop
cmpsb
xchg
stos
mov
out
loop
lret
xor
inc
or
movnti
cwtl
orb
pop
add
add
jne
add
mov
xchg
cs
enter
xor
cltd
jecxz
xchg
shl
xchg
push
fists
hlt
sub
xchg
pushf
loope
fcomi
fistpll
cmpsb
fs
ljmp
push
ret
shll
and
inc
mov
rorl
loop
mov
fcoml
sbb
cltd
xor
or
bound
xchg
push
fs
fsubs
stos
loope
test
aaa
sbb
scas
push
add
pop
or
pop
dec
cs
mov
lods
mov
sti
setns
xchg
scas
jmp
sbb
stos
pop
data16
jns
leave
jno
sub
addl
pop
cli
cmp
sub
sbb
sbb
loope
ja
and
into
jecxz
mov
add
scas
mov
aad
add
je
add
jb
xor
outsb
iret
shll
push
test
or
je
add
cltd
xor
movsb
iret
xchg
inc
cs
lds
xchg
mov
sbb
mov
pop
dec
add
insl
call
nop
or
clc
je
xor
cmp
cld
jecxz
jmp
ret
mov
pop
imul
popf
add
outsl
add
sahf
cmc
xorb
icebp
test
adc
cltd
pop
data16
and
sbb
xor
xchg
push
jb
xchg
or
inc
clc
mov
fidivl
in
jne
jo
mov
ss
in
ret
enter
incl
xchg
mov
xor
call
rcl
and
inc
adc
int3
fsubrs
lds
sub
push
mov
inc
hlt
mov
inc
testb
pop
fidivrs
ret
into
test
les
push
cmpb
mov
cwtl
jnp
stos
push
repnz
or
inc
push
das
dec
cmpsb
pushl
je
test
test
mov
dec
std
adc
cli
dec
cmp
repnz
arpl
xchg
popf
imul
loop
test
xchg
aad
add
cmp
icebp
xor
and
adc
sub
pop
or
and
daa
std
aam
leave
xchg
leave
mov
fstpl
sbb
je
mov
mov
rcrb
pop
shrb
push
cmp
push
xor
nop
mov
jmp
fwait
shl
jle
ficoml
lahf
loop
sahf
mov
test
icebp
aad
add
ret
hlt
fisubl
mov
jle
stos
add
jne
js
cmpl
cwtl
sbb
hlt
sti
adc
lock
sbb
push
pop
dec
add
cmp
xchg
adc
push
repz
shlb
shrb
popf
xchg
mov
lds
fisubrs
xchg
mov
out
scas
mov
test
xorb
push
mov
lds
cmc
rcrb
xchg
cli
stc
push
add
add
subl
fwait
ja
cs
sub
test
jg
sbb
xor
rcr
jle
push
push
lcall
and
xchg
outsb
jecxz
loopne
scas
jle
jle
adc
xchg
xchg
gs
stos
fidivrl
pop
cmp
cs
ss
jns
push
in
shll
rorl
mov
rolb
popa
xchg
orb
into
orb
enter
push
aam
movsb
push
jg
insb
aam
stos
outsl
mov
pop
outsb
in
sbb
pop
aad
repnz
and
addr16
xchg
nop
xchg
loope
lret
rcl
xchg
adc
jb
inc
add
scas
out
ja
ud0
rcrl
frstor
mov
xorl
adc
inc
out
push
test
push
outsl
push
dec
fisttpl
sbbb
mov
push
mov
outsb
frstor
cmpsb
inc
cwtl
int
fiadds
sbb
shlb
test
sbb
mov
lock
outsb
in
xchg
outsb
cmc
pslld
add
add
inc
test
or
xchg
pop
cld
lcall
enter
pop
test
lahf
fsub
mov
popf
in
ljmp
subb
clc
mov
and
enter
xchg
xchg
sahf
mov
rclb
or
inc
in
xor
adc
ss
into
mov
shr
subb
or
stos
xchg
sub
je
roll
jecxz
outsl
jmp
add
sub
inc
leave
scas
sbb
push
into
xchg
pusha
popf
int3
into
loop
outsl
cltd
mov
cwtl
inc
pop
stc
xor
fsub
xchg
mov
divb
or
adc
stc
sbb
stos
mov
or
sbbl
rcl
clc
clc
stos
push
das
cli
mov
dec
hlt
jp
cmp
fwait
pop
add
cmpb
frndint
not
inc
mov
mov
mov
seto
in
out
sub
test
mov
jnp
shlb
sbb
ljmp
add
scas
shl
test
pop
test
cli
mov
sar
cmp
sbb
ror
xlat
xchg
insl
mov
loop
pusha
jno
or
lods
insb
movsb
mov
rorl
jecxz
out
cmpb
test
sub
outsl
addr16
scas
sti
test
jmp
inc
out
cltd
push
lock
cmp
push
adc
xchg
movsb
jge
xchg
sub
xchg
xchg
idivb
call
loope
shll
imul
jl
pop
rdmsr
fsubl
cmp
xchg
cmp
fsin
jl
sub
ret
cmc
xor
cwtl
fdivl
iret
test
mov
inc
fisttpl
icebp
fcomp
movsl
leave
pop
inc
mov
repnz
xchg
mov
xchg
adcb
into
lahf
imul
adc
mov
mov
push
sahf
cli
jge
mov
cmc
mov
push
mulb
shlb
mov
stos
ficomps
mov
out
out
sub
push
stos
test
outsl
shlb
sub
in
lret
cmpsb
ret
sti
movsl
sarl
orb
mov
sarl
pop
daa
xchg
ret
inc
fadd
movsb
ja
out
jo
mov
push
dec
fsubrs
xchg
pop
jl
inc
je
popa
lea
jbe
or
xchg
ljmp
mov
inc
je
mov
ss
out
mov
jbe
add
mov
call
xchg
mov
add
or
subb
xor
mov
jle
or
test
pop
lea
cmpl
mov
inc
in
andb
aaa
int
xchg
out
pop
jmp
cwtl
pop
aas
lods
mov
stc
mov
andl
inc
shrb
push
or
vpaddd
mov
cli
rclb
cmp
test
pop
repz
xchg
enter
lret
sar
lahf
test
push
mov
mulb
or
outsl
jae
add
cmp
dec
sbbb
jne
dec
mov
scas
pop
or
clc
shl
xor
in
lock
dec
push
push
cmpsl
nop
xchg
out
lods
mov
dec
adc
pop
mov
movsl
lea
cltd
repz
mov
push
sti
movsb
and
xor
push
test
data16
aas
xlat
adc
add
insb
sahf
cmc
xchg
xor
mov
fcomi
scas
mov
fldl
decl
sti
pop
lock
and
icebp
ret
or
lcall
movsl
into
movsl
aas
sub
add
and
fs
mov
xchg
insl
test
imul
lods
or
jp
mov
mov
rep
ss
call
stos
sahf
mov
dec
clc
mov
xor
mov
jmp
ret
xchg
cmpsb
mov
pop
scas
ret
pop
cmc
in
aad
mov
push
repz
mov
out
sub
test
xor
cld
mov
cli
xchg
lods
aam
mov
xor
jbe
test
cmpsl
sub
push
pop
lret
xchg
fisubrs
push
fcomps
mov
mov
lods
arpl
int
dec
sbb
sti
fadds
lret
rcl
aam
xchg
test
rcll
jle
loopew
sbb
mov
sbb
popf
icebp
lret
xchg
rolb
call
pop
sub
sub
neg
btr
adc
add
test
or
bts
bts
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
neg
sub
shl
btc
xor
sub
bsf
btc
jmp
lcall
ret
or
mov
mov
bts
neg
inc
test
cmp
add
jmp
lcall
xor
add
add
pop
xor
xchg
push
sub
xor
add
neg
adc
add
bt
call
lcall
incl
ret
neg
sub
xor
shl
inc
or
bts
btc
and
adc
jmp
lcall
shl
bswap
shr
and
test
or
bts
mov
inc
mov
mov
xchg
push
push
xchg
dec
add
add
call
and
btr
and
xor
adc
and
add
mov
test
shl
shl
bsf
xor
and
mov
xor
mov
shl
sub
xchg
mov
test
test
sub
movsbl
btr
test
add
and
jmp
lcall
ret
or
mov
test
sub
dec
shl
xor
mov
add
inc
call
lcall
add
xorl
pop
xor
xchg
push
dec
mov
or
mov
inc
test
add
shr
add
jmp
lcall
stc
add
xchg
ret
neg
sub
xor
xor
cmp
xor
shr
and
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
shr
bsf
movsbl
bsf
xor
shr
not
sub
bt
inc
jmp
lcall
or
call
btc
adc
test
sub
cmp
mov
add
add
mov
not
adc
adc
test
add
adc
bswap
call
lcall
add
or
bts
bswap
adc
movzwl
bts
mov
xor
and
call
lcall
or
add
btr
and
test
neg
btc
shl
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
movzwl
mov
cmp
test
shr
test
and
inc
bt
call
lcall
out
inc
or
sub
not
bts
movzbl
test
movzwl
mov
jmp
lcall
and
aad
loopne
sub
xor
btc
neg
bt
mov
movzbl
and
dec
cmp
test
cmp
test
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
adc
cmp
shl
btr
sub
add
add
dec
push
shl
or
neg
shr
add
add
xor
movzwl
add
not
xor
cmp
cmp
bts
add
sub
dec
add
mov
and
cmp
cmp
test
shr
test
bts
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
add
bswap
and
or
mov
bts
bts
cmp
call
lcall
add
add
dec
cmp
adc
xor
mov
btc
mov
add
shl
and
or
add
bts
xor
sub
sub
mov
cmp
btc
movzwl
adc
not
bsf
cmp
btr
call
lcall
mov
inc
test
adc
cmp
test
shr
mov
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
and
add
cmp
cmp
cmp
cmp
bt
shr
btc
add
test
bts
or
add
neg
jmp
lcall
add
mov
mov
jb
push
add
jmp
shll
adc
mov
add
xor
sub
bts
adc
mov
neg
cmp
call
lcall
add
cmp
xor
mov
neg
btc
test
btc
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
bts
xor
adc
add
or
shr
sub
mov
shl
test
xor
and
adc
not
and
inc
movswl
inc
bsf
sub
neg
btc
xor
test
mov
add
cmp
btc
add
or
shl
or
cmp
mov
lea
inc
cmp
jne
mov
mov
test
bts
bts
or
test
mov
inc
add
mov
bts
xor
cmp
cmp
xor
bswap
bt
bswap
call
lcall
je
bt
adc
sub
cmp
bt
movswl
add
adc
inc
sub
mov
cmp
cmp
add
not
test
mov
btr
call
lcall
mov
mov
add
add
shr
and
cmp
btc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
neg
movsbl
bt
mov
cmp
cmp
shl
cmp
call
lcall
cmp
movsbl
sub
neg
movzwl
inc
not
and
bts
add
cmp
and
cmp
neg
cmp
not
btr
or
jmp
lcall
inc
btr
cmp
btr
and
adc
sub
mov
add
xor
btr
mov
and
mov
not
btc
call
lcall
add
not
test
shr
sub
cmp
bts
bsf
xor
push
pop
inc
add
loop
or
cmp
mov
dec
bt
movzwl
test
movzwl
push
decl
mov
add
mov
shl
not
or
adc
test
cmp
call
lcall
jmp
addr16
jmp
stos
or
shl
cmp
sub
bts
or
push
shll
bts
mov
mov
bt
sub
movswl
adc
mov
push
test
adc
and
xor
btr
cmp
sub
mov
sub
adc
test
shl
or
adc
dec
push
push
pop
add
add
call
mov
test
or
and
bswap
add
and
inc
xchg
cmp
xor
and
btr
and
sub
test
add
mov
not
sub
btr
test
bsf
movzbl
xor
cmp
call
lcall
mov
shrb
dec
mov
movzbl
shr
and
or
not
add
sub
add
dec
adc
xor
shl
neg
mov
add
call
lcall
jmp
add
cmp
or
shr
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
adc
movzwl
bts
or
bt
movswl
test
add
adc
shr
test
or
cmp
test
inc
call
lcall
mov
test
xor
cmp
mov
shr
cmp
shr
mov
dec
sub
or
adc
and
movsbl
btc
mov
test
btc
cmp
je
btr
sub
neg
xor
btr
bt
mov
inc
add
mov
btc
not
bt
bsf
adc
btc
adc
inc
call
lcall
shr
cmp
movsbl
btr
or
add
not
cmp
bt
sub
mov
adc
test
xor
dec
bt
shl
shl
movsbl
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
bt
cmp
bts
or
btr
cmp
not
bts
movzbl
push
decl
mov
add
bswap
btr
btc
adc
or
sub
sub
dec
push
decl
mov
add
xor
btc
adc
movswl
test
inc
mov
shr
or
add
xor
or
shl
bsf
shr
test
not
adc
jmp
shl
cmp
and
btr
or
test
shr
or
and
mov
cmp
xor
sub
btc
bswap
bsf
sub
mov
mov
adc
bts
cmp
shr
add
cmp
xor
add
mov
xor
add
test
mov
or
test
and
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
adc
or
cmp
adc
btr
test
cmp
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
bt
and
test
test
adc
test
shl
mov
push
push
shr
adc
test
shr
dec
adc
adc
push
sub
mov
or
shl
sub
shr
btc
adc
add
mov
add
bswap
bswap
bts
neg
test
btc
movzwl
neg
and
dec
call
lcall
js
mov
stos
out
add
out
shrl
btc
shl
shl
dec
lea
sub
add
not
cmp
sub
dec
test
test
mov
btr
shr
and
sub
bts
shr
sub
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
and
sti
jae
test
xlat
repnz
jecxz
cmp
lcall
sub
mov
and
or
xor
mov
xor
add
adc
push
sub
bts
btc
not
sub
cmp
btr
shr
push
bt
add
neg
xor
or
add
shl
push
add
btc
test
shr
adc
test
mov
btr
call
lcall
mov
bsf
xor
xor
add
bt
or
not
cmp
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
inc
btc
cmp
mov
sub
btc
and
call
lcall
sub
movl
std
shl
adc
neg
btc
cmp
shr
add
xor
neg
or
cmp
neg
sub
not
test
bts
call
lcall
mov
test
bts
adc
test
btc
sub
and
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
jnp
push
orb
int3
or
push
scas
add
dec
sbb
add
popf
bound
mov
imul
jno
jae
out
loopne
flds
rorb
pop
and
xchg
or
mov
or
jb
sbb
add
outsl
cld
push
insl
inc
xchg
testb
js
dec
xor
fucomi
sbb
add
outsb
push
jmp
mov
es
xor
fstl
sbb
add
mov
out
add
jle
daa
push
testb
cmp
cmp
add
cld
gs
or
dec
add
or
out
adc
add
cmpsl
or
jmp
mov
pop
xchg
in
or
jo
or
or
add
shlb
lahf
jno
mov
add
movsl
sbb
or
add
mov
sahf
mov
fcompl
xchg
sbb
mov
enter
inc
add
cmp
gs
sbb
or
push
mov
sbb
sahf
add
aad
jp
call
add
mov
xor
push
inc
push
dec
push
loopne
inc
pop
inc
aaa
push
cmp
pop
dec
push
dec
into
inc
inc
inc
xor
xor
jnp
cmp
push
jl
dec
inc
xor
rclb
pop
hlt
push
push
dec
push
inc
push
fmulp
cmp
push
inc
inc
xor
adc
inc
aaa
cmp
xor
mov
xchg
dec
test
dec
dec
ss
push
push
aas
inc
inc
stc
sbb
dec
inc
test
add
gs
dec
dec
cmc
adc
add
test
push
aaa
xor
dec
jns
add
dec
push
cmp
push
shll
shlb
pop
repz
ds
fs
cmp
sub
sbb
xor
inc
cmp
cmp
pop
pop
mov
push
inc
in
rcrl
inc
push
lret
jns
cli
ss
jbe
nop
inc
loope
add
and
aam
sub
insb
outsl
jae
and
sbb
jne
jp
jb
popa
outsb
popf
cmp
cmp
je
out
repnz
ljmp
ja
imul
bound
mov
adc
inc
pop
cli
and
outsl
push
sti
ret
cld
adc
push
push
imul
dec
push
xchg
pop
stc
push
gs
repnz
jmp
jp
jbe
stc
shrb
stc
into
inc
es
push
jns
in
arpl
pop
jb
call
sbb
gs
into
sbb
adc
push
test
or
addr16
call
inc
adc
add
and
adc
outsl
fs
pop
data16
cwtl
add
jmp
insl
dec
sbb
decl
cmpsb
push
lock
adc
stos
mov
cmc
stos
add
repnz
push
push
inc
push
dec
push
je
or
fcoml
call
loop
sbb
lahf
add
or
push
gs
int3
sbb
jae
popa
jne
fwait
add
in
movsb
ret
jae
and
or
pop
insb
jns
imul
adc
daa
or
mov
pushf
fsubl
jle
bound
das
push
sub
sub
sarl
jmp
insb
fs
inc
pop
push
push
dec
sub
mov
jmp
rclb
jl
add
push
add
inc
push
inc
pop
sarl
lret
push
or
dec
inc
jp
lods
addb
