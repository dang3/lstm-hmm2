push
pushf
pusha
call
xor
or
inc
jo
add
or
push
jo
add
or
jno
or
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
je
jb
arpl
fs
jae
add
add
fs
imul
add
add
jb
jne
insb
push
jb
je
arpl
pop
cmpl
jne
cld
mov
mov
xor
call
mov
jecxz
lea
lea
mov
lea
mov
push
dec
jne
mov
push
push
pushl
call
add
add
loop
add
mov
mov
call
mov
test
je
mov
jecxz
push
call
test
je
mov
mov
mov
jecxz
test
jne
add
inc
inc
jmp
and
push
pushl
call
stos
jmp
add
jmp
mov
lea
lea
lods
xchg
jecxz
push
mov
push
push
push
lods
xchg
lods
push
push
call
pop
loop
pop
popa
popf
ret
sub
mov
mov
mov
lods
test
je
stos
jmp
call
and
je
outsw
jne
add
stos
test
jne
push
push
push
push
call
inc
jb
outsl
jb
pop
lods
stos
test
jne
call
push
push
inc
push
xor
cs
dec
dec
add
push
sub
or
add
dec
gs
popa
addr16
outsl
js
add
push
sub
rolb
enter
pusha
mov
mov
lea
mov
push
xor
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
rep
push
pop
call
dec
jne
push
pop
mov
mov
mov
and
shl
add
lea
call
jae
call
movzbl
imul
xor
mov
inc
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
lea
lea
call
jae
call
add
test
jne
jmp
call
test
lea
je
cmp
jl
jmp
mov
lea
call
jae
call
add
jmp
call
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
call
mov
mov
lea
call
jae
call
cmpl
mov
mov
mov
mov
mov
mov
jge
andl
jmp
push
popl
mov
add
jmp
call
mov
mov
lea
call
jae
call
mov
add
shl
mov
add
lea
call
jae
call
mov
xor
cmpl
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
call
jmp
call
mov
mov
lea
call
jae
call
mov
jmp
call
mov
mov
lea
call
jae
call
mov
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
call
jae
call
push
shl
lea
jmp
call
add
call
jae
call
shl
lea
push
push
jmp
call
lea
push
push
pop
mov
push
call
pop
xor
inc
mov
shl
pop
sub
add
cmpl
push
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
push
popl
call
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
push
call
shr
add
cmp
jb
sub
or
pop
loop
mov
add
shl
push
popl
push
popl
call
inc
mov
pop
je
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
pop
mov
jmp
pop
mov
jecxz
push
mov
mov
pop
add
cmp
jae
lods
inc
cmp
je
cmp
je
cmp
jne
cmp
jae
lods
inc
cmp
jb
cmp
ja
cmp
je
mov
cmp
jne
xor
bswap
sub
mov
add
add
jmp
popa
leave
ret
cmp
jae
push
mov
mov
movzbl
shl
or
shl
incl
mov
pop
ret
call
mov
mov
shr
imul
cmp
ret
mov
mov
sub
shr
add
ret
call
mov
ret
sub
sub
mov
shr
sub
ret
call
mov
ret
xor
inc
push
call
mov
call
jae
call
mov
add
pop
jmp
call
mov
lea
pop
or
shll
decl
jne
ret
call
add
add
add
inc
add
outsl
inc
add
dec
add
add
add
adc
xchg
fadds
add
add
add
adc
inc
inc
add
push
add
add
add
sub
add
mov
add
push
out
add
or
add
push
cmp
add
sub
cs
stos
mov
xchg
adc
test
xchg
xchg
add
xchg
cmp
pop
hlt
jns
xor
fwait
pop
subl
je
xchg
mov
outsb
jne
mov
push
int
div
in
ret
outsl
fs
inc
pop
xor
mov
mov
push
inc
loope
orl
mov
rorl
xor
sbbb
pop
mov
aad
jne
inc
iret
stos
rclb
mov
repnz
jl
inc
pop
icebp
int
call
ret
sti
push
mov
sbb
mov
xchg
sub
sahf
lock
aam
mov
sbb
xchg
aad
loope
mov
std
mov
push
mov
loop
dec
sub
and
loop
faddp
adc
cli
jl
pop
adc
pop
mov
jmp
cltd
inc
xchg
fmull
dec
push
popa
pushf
pop
aam
shl
in
jmp
sub
popa
or
test
aad
cwtl
sahf
xor
imul
scas
ja
lods
pop
mov
xchg
adc
jge
sbb
add
and
mov
mov
sbb
ret
pusha
inc
rcrl
push
xchg
pop
sbb
mov
test
lea
hlt
add
sub
outsb
fcmovne
std
test
mov
dec
adc
out
xor
call
loop
gs
lret
sub
out
movaps
nop
imul
into
adc
inc
and
xlat
ja
cmp
xor
jecxz
sub
ret
mov
iret
lret
mov
xchg
cmpsl
adc
mov
daa
imul
pop
xorb
aaa
mov
jecxz
pushf
jle
stc
sbbb
pop
cmpsl
jo
in
push
cld
das
xlat
fildll
sbb
inc
fyl2xp1
mov
mov
je
in
leave
and
cmp
and
bound
sbb
mov
sbb
addr16
xchg
ja
mov
aam
cmpsb
bound
or
adc
in
xlat
arpl
push
in
loope
mov
xor
into
sub
in
sbb
fwait
sub
jnp
in
stc
inc
dec
rclb
or
and
push
in
movsb
arpl
mov
ficoms
lods
sbb
in
mov
push
cltd
aas
subb
adc
adc
lods
lds
mov
cmp
lock
rorl
js
adc
inc
mov
inc
imul
stos
push
jp
lahf
adc
mov
and
xor
fnstenv
imul
mov
add
and
popa
ljmp
push
lea
xor
and
repz
out
popa
inc
dec
int3
test
ret
mov
test
mov
outsb
test
mov
xorb
push
mov
popa
stos
jge
aas
mov
push
aaa
cmp
and
inc
push
imul
mov
andb
mov
jae
adc
rclb
sbb
popa
sbb
pop
ja
das
jno
xor
pop
je
loop
dec
dec
xor
inc
sub
lods
mov
cs
xor
enter
es
ret
add
rorb
test
adc
pushf
xchg
xor
movsb
int3
or
pop
lcall
movsl
dec
mov
mov
adc
leave
jmp
mov
test
std
or
in
push
jp
adc
icebp
cmp
mov
fistpll
xchg
sbb
pop
xchg
cld
push
sbb
inc
dec
dec
push
xor
push
adc
out
sub
push
pop
and
lcall
cltd
insl
stc
cmc
cmc
pop
stos
repz
movsb
sbb
push
fsubrp
ret
fdivrl
add
jnp
ja
mov
cmpsl
push
lods
inc
cmpsl
mov
mov
or
add
mov
jnp
leave
push
shll
lret
aam
xor
mov
inc
push
rcrb
inc
mov
not
mov
jno
inc
jb
push
sahf
lds
std
movsb
fnstsw
je
sbb
stos
subb
inc
mov
ds
aaa
dec
sbb
and
sub
adc
sub
jle
loopne
pop
or
xchg
or
jns
xor
ljmp
adc
fistps
or
jne
imul
mov
mov
pop
jge
dec
xchg
js
dec
mov
lock
and
enter
lods
or
adc
mov
push
add
or
popf
call
call
cmp
and
lcall
sub
subl
sti
push
test
rorl
pop
dec
xor
imull
cmp
rcrb
mov
dec
sbb
push
cltd
or
push
xchg
mov
icebp
les
daa
fs
jp
jae
shlb
or
movsl
rcrl
sbb
inc
xor
sub
or
push
xor
inc
jecxz
pop
push
stos
test
inc
fisubl
lret
aad
scas
je
pop
lret
mov
xchg
iret
fstpt
rcr
test
mov
aam
into
repz
xchg
into
sbbl
push
rcrl
mov
cmpsb
mov
xchg
sbb
xor
xchg
dec
aas
inc
mov
jnp
icebp
outsl
les
stc
fldl
out
adc
imul
xchg
xchg
ss
or
mov
bswap
or
mov
ret
mov
lods
and
mov
jno
pop
mov
add
add
mov
mov
xchg
testb
rorb
push
aas
icebp
cmp
and
xchg
fistpl
aaa
jmp
aam
xchg
cmp
dec
xchg
inc
lods
mov
cmpsb
lret
in
or
insb
orl
and
mov
cmpsb
jmp
leave
fsubr
jl
popf
mov
call
shrl
mov
mov
out
mov
push
dec
aam
das
cmp
xchg
jl
enter
cmp
scas
push
adc
and
pushf
pusha
mov
mov
mov
rolb
adc
inc
leave
lds
pop
lahf
iret
loopne
cmp
aaa
lahf
mulb
or
or
out
pop
cmp
ja
jb
sub
out
jne
dec
inc
roll
outsb
pop
sub
std
jae
nop
xchg
pop
das
arpl
mov
jne
or
or
loope
and
out
repz
fs
pop
xchg
push
jecxz
jmp
push
or
ds
out
dec
add
push
loope
out
pop
shll
fldt
jp
mov
cmp
sarb
out
stos
popf
or
mov
jne
mov
pop
roll
bound
test
and
cs
pop
or
mov
mov
or
leave
popa
add
movsl
sub
cmp
jbe
add
sub
popl
xor
lods
sub
xchg
mov
push
sbb
in
rolb
add
out
roll
jo
push
sbb
insb
fs
daa
lcall
je
loopne
repnz
sbb
gs
inc
adc
stc
mov
testb
and
or
push
mov
lods
lea
jg
inc
fmuls
xchg
and
jp
push
in
outsl
mov
or
cmp
jg
call
dec
fidivl
sub
in
loope
test
xchg
movsl
or
js
fs
adcb
and
mov
es
pop
xchg
dec
mov
into
push
adc
rorl
int
cld
icebp
int
sbbb
or
stos
inc
loop
or
push
popf
or
out
pusha
pop
lret
mov
mov
in
mov
inc
jg
sbb
xchg
in
cmpsl
sub
jb
mov
sbb
mov
popa
sahf
mov
dec
pop
jecxz
bound
xchg
mov
lds
outsb
lock
fmull
pop
jmp
jl
dec
and
sub
xchg
or
mov
movsl
shl
movq
dec
icebp
test
addl
in
scas
mov
or
popa
mov
mov
nop
mov
fwait
mov
aad
xchg
sbb
jnp
xchg
jmp
pop
cmp
sub
push
iret
jl
mov
push
sbb
mov
out
gs
inc
jo
stos
nop
fnstsw
sub
pop
lea
rorb
sub
mov
loopne
or
jno
xchg
loop
xchg
jb
test
out
or
xor
outsl
pop
jl
jecxz
dec
testl
add
push
add
xchg
subl
mov
inc
lahf
andb
fwait
push
mov
jnp
pop
pop
jmp
jo
rcrl
rcl
jns
lods
sbb
cs
xchg
jmp
loop
fnstsw
push
add
shlb
loop
repnz
sbb
mov
xorl
jle
in
cmpsb
cmp
jne
mov
dec
outsb
mov
cmp
lock
cs
inc
xlat
mov
lret
pop
push
aam
add
jecxz
in
add
fnstcw
shll
into
sub
xor
mov
jno
lds
stc
pushf
out
data16
jnp
jno
mov
pop
mov
rolb
shrl
lea
inc
jp
mov
cwtl
adc
adc
lret
or
repnz
sbb
sub
adc
cld
das
lcall
mov
lret
lock
cli
fs
out
xchg
and
ds
sub
aaa
stc
mov
cmp
sub
add
mov
stc
dec
enter
and
sbb
xor
pop
hlt
repnz
aam
push
xor
in
js
or
xor
imul
and
call
cwtl
jnp
loop
mov
enter
inc
popf
sti
fwait
cmp
inc
hlt
xor
movsl
dec
pop
shll
cmpsb
adc
fs
divl
les
fwait
jg
fcoml
jp
xorl
mov
sbb
icebp
jle
cmp
scas
push
fsubrp
xchg
shll
jno
jne
loopne
jb
scas
fstpl
mov
in
jecxz
xor
adc
jo
mov
pop
testl
xchg
jg
push
cmp
mov
and
inc
scas
push
pop
inc
lods
into
lcall
sbb
iret
icebp
jo
cs
cmp
jae
cltd
pop
out
and
popf
add
xlat
mov
es
and
movsl
xchg
push
pop
push
pop
pop
imul
mov
dec
adc
pop
cmp
jmp
cmp
sti
lea
mov
cli
ret
in
das
adc
insb
rorb
push
dec
rcrb
fimull
fnstenv
adcl
cs
xchg
adc
push
cmp
stc
dec
xlat
shll
out
pop
test
movsb
std
xchg
es
aas
ja
xor
cwtl
lods
lock
test
movups
rcrb
cmp
iret
in
xchg
jae
push
adc
rorl
push
or
data16
or
incl
bswap
rclb
shrb
lea
popf
sti
out
aam
push
aas
ja
mov
push
jae
pop
addl
xchg
cli
or
mov
and
pop
std
push
sbb
sub
jg
cmpsl
and
jno
pop
sarl
daa
lret
clc
push
xchg
push
push
cmp
fcompl
je
in
mov
pop
jg
jg
lcall
stc
push
add
adc
dec
mov
je
jg
js
sub
or
cmp
mov
xchg
sarb
mov
and
into
decb
sub
or
fwait
jle
xchg
cmp
enter
xchg
or
push
xchg
test
scas
rorb
or
stos
xor
negl
lods
jge
je
jl
xchg
out
inc
xorb
in
dec
in
jne
popa
loop
mov
cld
push
daa
pop
sbb
aaa
shlb
mov
popf
rcrl
loopne
cmp
push
mov
fisubrl
mov
jl
xchg
mov
dec
mov
xor
inc
add
or
add
jno
add
shlb
sub
insb
jne
or
mov
push
repz
cld
and
push
adc
fcmovnu
sub
dec
pop
pcmpeqw
inc
nop
mov
sub
imul
fcoms
push
call
insl
lods
out
jmp
push
pop
sbb
dec
adc
push
inc
adc
iret
add
adc
inc
fldt
ljmp
out
mov
mov
xchg
cs
cld
sub
sub
cmpsl
testl
out
idivb
mov
sti
mov
arpl
cmpsl
js
and
jae
ja
outsl
stos
jle
mov
lock
mov
cld
add
xchg
jno
xchg
in
sahf
pop
xor
out
or
bnd
inc
pushf
add
in
cmpsb
xor
stc
pop
pop
jnp
xor
jg
cmp
jne
cwtl
es
das
call
sub
jle
or
loope
fcoms
jge
push
pop
lods
cmc
inc
fadd
test
push
xchg
pop
mov
dec
mov
jne
lret
outsb
setae
dec
push
jmp
lods
mov
popf
sbb
and
inc
cld
sbb
xchg
incl
dec
or
mov
mov
xchg
fwait
and
sub
mov
adc
insb
lea
lods
xchg
push
push
je
sbb
adc
out
popa
dec
pop
inc
fstl
jl
adc
push
rcll
fcomps
inc
adc
mov
adcl
sub
incl
lret
sub
mov
bound
dec
cwtl
in
mov
cli
mov
mov
cwtl
and
xchg
repnz
and
inc
inc
mov
xchg
addr16
scas
test
in
mov
mov
cmc
mov
adc
and
insl
jle
mov
sub
rcr
and
jno
out
les
arpl
jb
mov
or
loopne
bound
sarb
out
xchg
movsl
push
mov
xor
sbb
push
mov
test
out
scas
pushw
movsl
sub
cmp
adc
or
push
mov
cs
lret
pop
sbb
xchg
cmpsb
aad
adc
cmp
into
int
in
subl
dec
jne
out
iret
cmp
fmull
dec
dec
push
cmp
mov
adc
sub
sbb
jecxz
xor
fldt
mov
mov
leave
outsl
scas
mov
xor
push
adc
inc
dec
add
je
cmp
das
mov
les
push
pop
dec
pop
mov
clc
pop
mov
out
and
pop
sbb
push
and
popf
rolb
insl
sahf
outsb
jae
aas
ss
and
xchg
mov
mov
int3
mov
shr
into
mov
ret
add
fwait
jns
shlb
adc
pop
ds
mov
pop
xchg
jne
cmp
loopne
cmp
addr16
mov
cmc
mov
xchg
sbb
test
aas
mov
mov
js
sub
push
and
outsl
gs
and
pop
cmp
pop
mov
sbb
push
outsl
int3
xlat
inc
inc
cmc
mov
test
dec
adc
xchg
dec
cmp
aaa
inc
imul
push
icebp
pop
cmpsl
cmp
test
shl
aad
cwtl
and
sub
cwtl
pop
xchg
mov
push
mov
test
rolb
mov
mov
movsl
test
les
out
xor
push
push
mov
xorb
dec
or
sub
fidivrs
cmp
fnstenv
add
cmp
ret
dec
dec
jecxz
sahf
fldt
in
out
nop
dec
add
loope
cmpsb
fstl
jl
xlat
nop
cltd
psrlq
mov
orl
ljmp
fiadds
push
or
mov
and
push
or
loop
pop
add
es
mov
sti
insb
mov
ds
hlt
fdivrs
cmp
sbb
lods
je
mov
mov
sbb
cmp
and
loop
cmpsb
sub
mov
sbb
jl
movsl
mov
aaa
icebp
adc
add
in
xor
pop
jmp
mov
cmp
mov
xor
cmp
out
mov
push
inc
add
pop
out
das
xor
jns
movsb
hlt
jge
pushf
push
or
lret
pop
fs
cmp
pop
addb
icebp
jmp
xlat
sbb
add
dec
lahf
mov
dec
cwtl
xchg
pop
andl
inc
faddp
sub
cli
aam
aam
push
push
int
or
pop
sahf
mov
sub
lret
std
sbb
add
daa
jns
xorl
and
sub
cmp
xor
int3
test
cwtl
xor
xor
jecxz
add
inc
imul
xor
fcomps
arpl
sbb
insl
jb
and
add
adc
sbb
mov
int
aas
pop
repnz
dec
ffree
xor
ljmp
insb
dec
xor
outsb
pop
gs
adc
pushf
dec
adc
xchg
mov
push
push
jbe
cmp
inc
xlat
cmc
sub
jg
pop
inc
mov
push
sti
data16
cmp
mov
or
int
jle
xor
lret
push
mov
dec
insb
movsb
cmpsl
in
and
mov
pushf
mov
pusha
xchg
lcall
mov
push
ret
test
jae
pop
imul
lret
pop
sbb
mov
mov
stc
dec
mov
mov
sbb
push
cmp
mov
push
ret
insb
addb
cmp
pusha
cmp
mull
test
lcall
push
out
test
dec
out
enter
scas
mov
fidivrl
sbb
decl
add
mov
and
xor
pop
pop
pop
ror
inc
repz
pop
adc
and
das
xor
aaa
or
adc
enter
cmp
and
inc
and
jmp
outsl
in
lock
fwait
jmp
sub
aam
lds
ret
cmp
dec
leave
outsb
das
jp
fisttpl
push
lock
jo
shll
and
adc
inc
cltd
int
mov
in
dec
mov
add
mov
leave
fisttpl
das
lss
imul
mov
cltd
lahf
call
sub
stc
jle
notb
sar
arpl
enter
or
int3
sbb
data16
jge
cmovge
cmp
pusha
xchg
mov
push
call
xchg
int
ljmp
popf
movsb
jns
or
lret
sbb
push
or
out
push
jno
mov
arpl
les
mov
jo
aas
shrl
mov
enter
and
push
dec
insb
jmp
push
sub
dec
std
test
or
dec
sbb
ret
mov
repnz
mov
pop
and
mov
inc
xor
xor
fiaddl
in
sub
dec
jbe
movsb
fists
inc
jbe
push
aas
push
sahf
sub
or
sbbb
rcrb
loopne
jl
popa
push
ret
pop
movsl
xchg
lea
lahf
adc
stc
push
je
aas
jp
fists
mov
xor
jmp
lods
out
iret
mov
sbb
inc
mov
repnz
jmp
jp
add
mov
outsb
imul
es
pop
pop
dec
aaa
or
pop
negb
dec
in
sar
out
pushf
outsl
jp
inc
push
xchg
loop
jnp
in
xor
mov
mov
adc
imul
test
inc
mov
hlt
icebp
outsb
jmp
ljmp
wbinvd
sbb
cmpb
add
lock
mov
enter
data16
xchg
fstpl
out
leave
aam
in
sbb
mov
gs
sbb
xor
pusha
jge
sbb
aad
push
push
xchg
call
in
push
fucomi
xchg
and
jmp
lea
mov
pop
xor
push
lods
mov
pop
xchg
sbb
int3
xor
push
cld
mov
mov
xchg
mov
cmp
rep
xor
sub
ds
dec
loope
xor
adc
inc
aad
sarl
xchg
jae
sub
jno
stos
test
push
push
in
adc
movsl
sub
arpl
adc
or
mov
movsl
popa
mov
add
xchg
cmp
lcall
test
movb
jno
mov
cmp
test
hlt
test
dec
adc
mov
xchg
hlt
add
mov
jg
cmc
out
pop
daa
cs
inc
mov
adc
lods
sbb
xchg
pop
popa
adcb
test
stc
popf
sub
cmp
dec
aam
dec
adc
mov
pushf
sub
sbb
xchg
sbb
dec
sbb
dec
sub
lods
leave
jae
sti
aad
imul
or
je
rcrb
add
pop
adc
cwtl
in
ljmp
daa
faddl
or
push
int
or
push
push
inc
push
push
clc
dec
lret
inc
or
lods
jns
les
scas
lret
mov
lret
jge
cmp
inc
jae
clc
call
mov
fildl
nop
mov
xchg
adc
dec
out
jb
push
mov
movsl
mov
xchg
bound
sbb
xchg
push
out
sahf
xchg
movq
insb
xchg
fimuls
pop
aam
or
and
push
es
mov
lcall
push
test
mov
ds
cmp
orl
xlat
lds
pop
aam
mov
int
cmpsb
sbb
out
xor
xchg
or
sub
or
cmp
nop
jnp
sbb
aas
jno
adc
and
repnz
rcl
dec
xchg
loope
adc
rorb
sbb
fisubrl
cmp
jle
outsl
aas
lret
shll
inc
scas
stos
push
and
rol
cwtl
cli
sbb
gs
repnz
push
cmp
cwtl
xchg
mov
ret
addr16
outsl
lock
pop
into
or
data16
mov
ss
cs
in
mov
in
icebp
mov
icebp
mov
lahf
cmp
and
js
mov
popa
mov
xor
push
lret
divb
jo
mov
pop
lea
dec
add
mov
pushf
fisttps
cltd
arpl
jnp
mov
aad
lock
pushl
xchg
push
xchg
mov
test
enter
in
fiaddl
adc
lret
or
cld
xor
stc
and
inc
rol
mov
je
push
rcl
out
pop
mov
jmp
scas
cmp
enter
sub
cmp
imul
fistpll
mov
mov
into
enter
sub
xchg
fwait
inc
and
outsb
aas
dec
jae
mov
or
fsts
ss
jnp
pushf
fidivs
ret
rcll
mov
inc
loop
push
add
cmc
test
cmp
mov
hlt
pop
in
negl
dec
mov
in
pop
xchg
pop
mov
add
rorb
cmovae
jo
cltd
stos
add
les
popa
jns
repnz
setbe
jle
lods
les
lods
je
push
dec
cmp
xor
add
popf
sbb
push
out
mov
jecxz
popa
xor
add
dec
xor
out
pop
sarl
xchg
and
stc
xchg
movsl
sub
fwait
jmp
and
push
repz
pop
sub
adc
add
mov
adc
mov
mov
psubw
fiaddl
sub
dec
mov
mov
jg
mov
dec
mov
and
pop
adc
loop
push
cld
sub
fnsave
hlt
mov
clc
repnz
push
test
lods
and
and
jmp
int
adc
adc
popa
push
lods
int3
fsubrs
cwtl
mov
mov
inc
or
dec
push
sahf
xchg
cmpsb
mov
out
fistl
mov
je
mov
jg
out
rcll
fsts
icebp
cmp
ja
jmp
jno
jne
pop
cld
pop
rcll
pop
inc
and
andl
dec
lods
cmp
pushl
or
rol
mov
out
aaa
ss
fsincos
imul
and
movsl
clc
lahf
xor
in
xchg
andl
mov
insb
or
push
scas
push
daa
or
int
pop
mov
mov
pop
inc
mov
sub
xchg
mov
push
and
cmp
fistl
das
push
sub
clc
xchg
or
repz
out
ror
mov
icebp
sbb
or
ss
fwait
add
dec
jnp,pn
cltd
xchg
in
out
jmp
push
stc
lock
sub
std
ljmp
les
nop
pusha
inc
hlt
into
mov
pop
stos
inc
adc
lcall
pop
out
xchg
inc
inc
outsl
xchg
fimuls
fs
add
add
stc
add
xchg
cmp
xlat
xchg
in
stc
lret
push
movsb
sti
insb
jbe
call
jp
dec
bound
push
popf
shlb
ret
or
fsubs
mov
mov
and
jmp
test
mov
out
fwait
inc
push
imul
out
je
adc
mov
test
test
mov
pop
cmp
inc
dec
daa
fwait
inc
add
xchg
cltd
andb
mov
addr16
pop
jns
jne
outsb
stos
mov
je
dec
lock
sar
rolb
rclb
sti
stos
inc
xchg
lret
mov
imul
adc
xor
jmp
out
sub
xor
stos
pop
out
push
iret
and
mov
ror
in
std
mov
adc
int3
repz
in
pop
mov
push
mov
loop
add
cmc
je
stos
jae
je
push
int
cli
out
insb
js
xor
mov
dec
dec
loope
popf
dec
or
ficoml
xlat
scas
daa
mov
pop
bsr
dec
pop
lods
add
aam
cli
lds
mull
cmp
pop
mov
ret
mov
adc
jmp
push
sbb
ds
jle
icebp
dec
out
aad
int
mov
mov
pop
jns
mov
outsb
pop
iret
dec
jle
lods
and
insl
lods
les
push
rclb
jmp
lods
ja
rcl
pop
stos
dec
pop
stc
punpckhdq
lods
ljmp
mov
in
dec
xor
movsl
jecxz
inc
adc
mov
push
das
out
fsubrl
shrb
rorl
enter
mov
pushf
ja
xor
pop
int
add
fwait
mov
lock
testb
ljmp
cmp
jl
cwtl
cli
inc
push
sbb
adc
cmc
push
ljmp
mov
push
mov
mov
fwait
or
and
inc
or
js
insb
fisubs
aaa
push
xor
add
mov
jno
roll
cs
adc
mov
addr16
sbb
lds
repnz
repz
dec
add
enter
mov
cmp
or
mov
imul
and
lods
fisubs
je
sbbb
fnsave
test
sarl
push
cmp
adcb
stc
xchg
or
jle
js
pop
cmp
mov
inc
xor
cmp
push
add
and
enter
lret
movsb
pusha
mov
out
andb
shrb
ljmp
mov
and
jo
xchg
xchg
aam
les
jns
cltd
jle
mov
sarb
adc
xchg
ja
sub
pop
lds
jecxz
xor
dec
dec
sub
mov
xchg
xchg
or
loopne
outsl
pop
repz
xchg
popa
jnp
pop
or
leave
call
xchg
mov
jecxz
lds
pop
out
sbb
dec
movsl
pop
mov
xor
mov
push
cmp
fucom
mov
mov
shl
shrb
xchg
lods
das
sarb
jb
mov
inc
test
inc
jne
orl
inc
add
mov
or
mov
nop
push
jno
push
scas
fwait
inc
ljmp
and
lret
cmp
mov
dec
jno
out
repz
push
xchg
jge
iret
stos
add
nop
das
xchg
lock
sub
sbb
inc
xor
cmp
rolb
call
addr16
ret
int
push
imul
inc
popa
cli
inc
sub
or
and
mov
adc
stc
imul
test
nop
jecxz
sub
movsb
outsb
sahf
bound
cmp
nop
into
leave
push
mov
adc
push
mov
sbb
push
mov
leave
lds
xchg
add
ret
sub
push
jge
jecxz
ja
shlb
lock
roll
dec
hlt
ds
addr16
add
popf
scas
xor
cmpl
jno
ljmp
push
add
adc
loope
pop
mov
add
push
gs
addr16
and
push
call
cmp
xor
adc
iret
xor
pop
cwtl
adc
fs
inc
push
call
aas
in
add
jle
gs
push
pusha
enter
test
mov
and
add
aas
fldenv
arpl
push
clc
in
xchg
js
or
jle
out
rcrl
mov
daa
into
cmc
add
insb
xchg
adc
int3
xor
adc
and
pushf
adc
mov
aas
sub
daa
and
lret
out
push
xchg
pusha
push
pop
scas
push
jmp
icebp
pusha
daa
mov
loope
in
loopne
es
fisubs
loopne
addr16
pusha
pop
mov
sub
jl
xchg
icebp
push
sahf
push
movsb
mov
pop
inc
cmpsl
lret
dec
cld
adc
mov
sub
int3
dec
pop
shl
push
es
out
pop
call
fnsave
and
cmpsb
sahf
mov
sbb
jecxz
dec
fcmovne
sbb
mov
jle
scas
jmp
or
or
mov
into
int3
fdivl
sbb
jg
add
jmp
dec
dec
jb
jg
cmp
scas
lahf
mov
lods
ret
sbb
pop
adc
jg
inc
lcall
movsl
or
mov
and
shrb
push
jge
vandpd
loopne
int
popa
jns
push
orl
dec
movsb
cmp
aad
loopne
dec
push
test
mov
test
mov
push
jnp
push
iret
and
and
dec
push
push
pop
push
mov
cs
or
dec
mov
mov
lahf
pop
add
test
push
sub
andb
jb
pusha
pop
xchg
das
pop
sbb
andl
movsb
and
or
pop
mov
rclb
pop
jl
dec
shrl
mov
aas
out
pop
and
mov
dec
and
add
int3
pop
lcall
sub
adc
sbb
mov
cs
faddp
loope
jbe
pusha
jl
pop
jne
xor
add
mov
rcl
shlb
sbb
aam
fldenv
pop
inc
mov
lcall
scas
dec
inc
push
inc
jle
mov
ljmp
push
shlb
xor
dec
stc
fcomi
pushf
pop
mov
test
lcall
pop
loopne
pop
xchg
or
dec
push
outsl
jmp
std
aam
mov
dec
cmp
jbe
cmp
jno
pop
sbb
jbe
fcmovb
sahf
mov
mov
loope
ds
leave
inc
adc
scas
enter
pop
xorb
popa
hlt
adc
cmpsb
or
and
pop
arpl
cmp
pop
push
cs
stos
adc
mov
clc
mov
in
adc
cmp
ja
nop
mulb
repz
mov
mov
ljmp
xchg
scas
adc
mov
shl
aaa
jnp
scas
adc
shrb
inc
lock
or
not
loop
xor
pop
or
jae
push
add
mov
mov
ret
notl
sbb
data16
and
xor
fistpll
and
shll
gs
inc
das
xchg
loop
insl
das
pop
gs
scas
arpl
sbb
or
loop
iret
and
adc
jns
push
fstpl
idivb
xchg
scas
push
roll
icebp
sbb
test
loopne
rcll
push
add
in
jp
test
sub
into
js
cltd
fsubrp
adc
or
aaa
or
fimull
int
shr
pop
mov
sub
mov
xlat
rolb
cmpsl
leave
mov
hlt
jno
hlt
dec
sbb
stos
pop
repz
xor
xor
jecxz
test
jg
mov
push
fists
xlat
jbe
adc
popf
adc
test
xchg
out
ret
pop
scas
cwtl
repnz
shl
xchg
jl
dec
cmpl
imul
out
fmuls
dec
sub
pop
lcall
xchg
shll
dec
or
sub
in
out
outsl
scas
cltd
sbb
cmp
addr16
push
nop
addr16
rcrb
ret
adc
fdivl
push
repz
or
mov
lea
fdiv
cli
cmp
aad
jnp
cmpsb
outsb
mov
sahf
xor
mov
mov
into
mov
call
jg
icebp
mov
jo
and
mov
idivb
leave
in
popf
mov
xor
jmp
stos
sti
adc
mov
inc
daa
cmpsl
xchg
loopne
inc
add
dec
loopne
test
mov
out
pop
stos
add
mov
lods
xchg
mov
mov
sub
fwait
and
cwtl
sub
dec
sub
cmpsl
and
outsl
xchg
push
push
lods
mov
jl
shl
mov
push
inc
push
insl
mov
mov
lock
push
mov
call
sub
aas
xchg
lods
pop
test
movsl
sbb
fidivl
jb
pop
mov
test
mov
popa
scas
orl
enter
jnp
and
cli
push
cltd
hlt
mov
movsl
ja
fsubrp
std
outsb
add
stos
jl
daa
mov
inc
loopne
sbb
sbb
out
out
in
and
adc
adc
cmp
or
ret
add
mov
jl
rcrb
or
mov
lods
rorb
hlt
mov
or
mov
popa
xor
xchg
or
dec
fxch
call
aad
sarl
xor
mov
mov
or
cli
les
push
stc
cmp
xor
sub
lahf
mov
cmp
dec
in
mov
jno
idivb
negl
stos
mov
inc
cmp
add
push
vmovupd
fldcw
test
dec
xlat
outsb
fbld
stc
or
or
cmp
xchg
loopne
pusha
xchg
jbe
xchg
mov
mov
int3
jns
cmp
mov
cmp
mov
inc
xchg
jmp
add
sub
sub
sub
dec
cmp
inc
pop
in
dec
subl
dec
push
leave
xchg
je
or
andb
pop
loopne
sahf
adc
mov
fnsave
sti
pop
push
jmp
xchg
fimuls
int
ficoms
adc
icebp
xchg
in
and
add
xor
adc
ror
cmpl
clc
scas
sti
mov
cmp
lret
xchg
xorl
jge
loope
lea
xchg
sbb
pusha
inc
das
mov
shr
adc
jmp
fs
arpl
push
pusha
xchg
sub
fsubrp
in
leave
enter
adc
out
roll
out
flds
sub
xor
ja
mov
mull
hlt
xor
adc
and
insl
aad
shl
cmc
and
mov
aad
pop
mov
enter
in
fdivrs
xchg
scas
cmpsb
ljmp
int3
sub
pop
jbe
inc
lock
dec
lds
in
sub
repnz
loope
addr16
mov
cltd
pop
mov
mov
push
lods
iret
punpckhbw
ret
faddl
movsl
jo
pop
std
in
mov
cwtl
test
popf
cmpl
push
and
dec
imul
mov
adc
cmp
jge
push
movsb
inc
mov
repnz
gs
cmp
stos
negl
fdivrl
cli
dec
shll
push
inc
outsb
inc
int
int3
call
dec
mov
mov
cltd
imul
dec
jns
icebp
fucomi
push
mov
adc
loope
and
jle
sub
outsb
lea
mov
es
popl
inc
sub
int3
push
imul
inc
lock
daa
ret
inc
int
mov
cmp
cmp
adcl
inc
inc
and
sbb
test
insb
stos
popa
inc
je
adc
cld
xor
push
psadbw
ja
pop
loopne
xchg
loop
into
dec
jg
push
loope
xchg
jae
jns
mov
push
push
cmp
sbb
out
lret
ss
daa
cmpsb
pushf
imul
popf
jb
xlat
out
xlat
movsb
rcrl
add
xchg
mov
div
popf
xor
mov
sub
stc
sbbb
mov
sbb
out
jge
sbb
es
repz
fdivr
sarl
lahf
notb
dec
rorl
jne
jb
daa
jbe
lret
and
repz
xor
sbb
jo
xchg
mov
xor
jmp
scas
pop
rcrb
jae
pop
mov
jo
out
mov
mov
and
dec
and
cmp
add
push
fsubs
mov
out
daa
cltd
mov
push
flds
push
and
and
or
fs
sbb
stc
sbb
mov
jae
jnp
cwtl
and
in
add
push
cmp
sbb
cmpsb
adc
dec
cltd
xchg
add
xor
lods
sti
mov
pop
and
in
sarl
in
les
and
rcll
mov
cmp
pop
dec
xor
mov
xor
mov
loop
mov
inc
aas
and
lods
sbb
adc
and
outsl
into
mov
int3
ss
mov
sti
cmovnp
jl
movsb
xchg
aad
push
clc
orb
sbb
push
mov
in
sub
hlt
out
addr16
mulb
jle
xor
in
xlat
add
adc
adc
xor
jnp
pop
in
mov
fists
cli
xor
fists
mov
loope
mov
jns
call
cltd
xchg
enter
nop
in
in
aas
adc
xlat
fwait
std
mov
sub
mov
int3
push
dec
negl
add
mov
test
adc
push
jbe
sub
sbb
push
xchg
fists
in
dec
fstps
fists
cmp
cmpsl
imul
fcompl
add
clc
push
xchg
cmp
dec
and
dec
jecxz
dec
jb
mov
xchg
jmp
gs
jae
or
add
xchg
add
es
aam
push
hlt
fsubr
pop
sarl
movsl
mov
or
outsl
cli
sbb
in
jle
stc
cmp
inc
stos
mov
xorl
loope
jae
push
mov
cmp
insb
xchg
in
dec
test
xchg
ret
loope
jg
rorb
mov
fs
xchg
jo
int
out
inc
sti
in
mov
inc
or
cmpsl
dec
insb
lds
xchg
outsl
pushf
inc
fildl
cmp
mov
or
notb
ss
xor
gs
mov
lret
mov
ficoms
scas
pusha
dec
fldl
adc
and
mov
add
sub
cltd
std
shl
in
int
push
or
loope
sub
in
je
cltd
push
lods
pop
sbb
ret
pop
test
xlat
mov
inc
adc
pusha
test
movsl
and
test
jmp
mov
in
adc
inc
jp
iret
in
mov
popf
jne
arpl
aaa
scas
xor
cmp
cld
into
popa
lret
cmp
lcall
xor
jp
aaa
addb
hlt
push
xchg
insl
ja
mov
sub
jge
int
mov
jno
push
adc
mov
loopne
loopne
scas
test
sub
cltd
incb
pop
iret
sub
repz
push
movsb
dec
mov
or
test
into
dec
sub
sbb
scas
pop
lahf
out
dec
fists
dec
into
jne
fimull
push
sti
add
lcall
ja
cld
inc
pop
dec
mov
iret
xor
roll
aam
pop
pop
xchg
int
jae
stos
jp
push
sbb
iret
push
call
jo
add
fstps
insl
loope
fnstsw
sbbl
xchg
nop
add
icebp
aas
jbe
adcb
mov
aam
aad
adc
push
pop
jp
pushf
sub
xchg
sbb
sbb
pop
cld
ret
mov
out
or
inc
add
rorl
rcrb
in
pop
data16
xchg
jmp
adcb
add
jne
das
fcoms
outsb
mov
mov
pop
scas
jne
sbb
add
xchg
jecxz
or
pusha
jmp
cmc
ret
testb
insl
jo
jo
jns
jl
jge
push
pop
loope
call
sub
outsl
mov
pop
les
add
xchg
in
fimull
cmc
lock
aaa
sbbl
lods
enter
pop
cmp
cld
mov
sub
mov
out
and
cmpsl
xchg
push
inc
scas
insl
cmp
cmpsl
sub
mov
test
mov
int3
push
pusha
das
cmp
dec
push
pop
sahf
nop
pop
and
rcrl
pushw
rolb
addb
adc
dec
mov
or
mov
leave
out
sahf
add
adc
push
adc
xchg
in
fiadds
mov
xchg
mov
sbb
test
ss
dec
sub
sti
push
dec
inc
xchg
bound
jbe
mov
jge
repz
das
int3
cli
int3
dec
mov
mov
shll
sahf
imul
mov
jb
adc
sub
inc
mov
xchg
lcall
mov
mov
lea
rcr
sbb
test
scas
xchg
cmc
repnz
push
int
js
in
adc
inc
mov
push
xchg
pop
add
insb
scas
push
stos
add
jns
cpuid
add
sahf
push
xchg
leave
dec
out
dec
push
mov
lods
push
rcll
outsl
fs
roll
sub
cmp
push
mov
or
push
imul
cmp
sti
outsb
fadd
lock
cmp
test
roll
stos
pop
inc
dec
jecxz
jns
scas
and
mov
add
lock
stc
pop
push
cmp
stc
rorb
shrl
jb
xor
push
add
mov
sbb
rclb
fsubr
cmp
mov
or
sbb
mov
pop
or
mov
cmpsl
pop
pop
and
arpl
dec
lock
popa
ret
lods
jne
adc
or
pop
js
xlat
push
mov
mov
lds
inc
mov
imull
nop
jns
mov
nop
xchg
push
test
fidivl
push
lahf
mov
or
pop
jecxz
mov
jg
add
dec
push
fsubrp
push
jnp
call
mov
and
pcmpgtw
or
js
push
mov
out
iret
add
scas
jns
sub
jl
xchg
cmpsl
push
dec
ret
cmp
xchg
push
or
xchg
das
xor
iret
mov
sbb
aam
je
xor
pop
and
xor
mov
lods
pop
sbb
mov
dec
pop
shr
mov
jmp
stos
and
out
hlt
bound
sbb
flds
fsubrs
mov
testl
loopne
push
adc
push
inc
ljmp
je
pusha
int3
movsl
iret
pop
je
andb
nop
inc
out
xchg
sbb
pop
sbb
mov
xchg
fildll
jl
push
in
aam
in
inc
iret
out
aam
es
push
xchg
aaa
jns
xchg
out
sub
in
jne
insl
int
cs
sub
aaa
cmpsl
fimuls
add
or
sbb
mov
push
push
cmpl
repnz
sbb
sub
or
clc
addr16
aam
xor
xor
je
dec
inc
pop
aad
add
or
inc
push
add
fimuls
mov
ret
xchg
les
cwtl
sarb
adc
adc
mov
sbb
add
das
push
inc
pop
mov
adc
cmp
imul
add
mov
fistps
sub
jne
mov
mov
dec
inc
push
mov
aas
cli
ret
xor
dec
mov
shrb
pusha
add
std
sbb
fcompl
cltd
xchg
shlb
cli
xor
dec
mov
inc
inc
std
xchg
aad
std
insl
stc
jle
inc
mov
dec
mov
fiaddl
test
or
adc
cwtl
insl
movd
mov
cltd
cmp
cmp
repz
inc
sbb
pushf
cmp
pop
scas
pop
jne
in
or
fdivs
lret
mov
sub
inc
fidivs
std
jecxz
adc
lahf
sub
les
scas
in
shll
pmaxsw
and
mov
dec
leave
mov
xchg
adc
hlt
or
xchg
pushf
inc
in
jns
fldcw
jl
sbb
jne
push
mov
lcall
ss
mov
mov
lahf
ss
pop
dec
mov
lock
and
insb
sub
pop
shll
mov
fistpll
leave
dec
cmp
mov
xchg
dec
and
inc
clc
test
adc
enter
aam
cmc
jno
mov
insb
lods
xor
xor
lea
dec
mov
push
std
push
andl
fs
mov
out
mov
fidivl
cltd
push
add
inc
es
test
outsl
dec
test
ret
xor
inc
ds
jnp
repnz
dec
push
cwtl
xor
lds
test
lcall
std
iret
bound
imul
ret
fldt
decb
mov
xchg
mov
scas
enter
sahf
mov
pop
lds
repz
push
cmpsl
push
mov
push
pushf
mov
cmpl
sbb
push
sub
mov
pop
cli
andb
out
xchg
subb
test
mov
jp
jns
loope
sti
mov
jns
sbb
out
dec
mov
insb
fsubp
addr16
push
and
outsl
and
xchg
add
pop
mov
cwtl
mov
fs
out
cmp
mov
shll
inc
out
pop
mov
adc
bound
iret
scas
enter
inc
sti
pop
xchg
aas
data16
xchg
inc
xchg
les
leave
out
pop
incb
idiv
jae
mov
add
fsubrl
sbb
outsb
mov
in
dec
mov
out
lock
sbb
xor
sbb
stos
dec
repnz
cmp
out
mov
xchg
dec
push
and
pop
xchg
pop
out
icebp
std
fldt
add
sbb
push
cwtl
outsl
mov
fwait
test
ljmp
mov
mov
sub
inc
aam
jecxz
inc
test
sub
push
sub
imul
sub
scas
lock
iret
loopne
jb
xor
adc
cmp
aam
pop
pop
dec
push
mov
mov
lret
icebp
hlt
in
test
xor
push
mov
add
ds
add
pop
cli
fmul
jbe
push
ja
mov
sub
inc
jno
xor
or
int3
mov
cmpsl
push
ret
xchg
sar
push
pop
loope
xchg
and
imul
rolb
in
pop
inc
fs
xchg
loope
shlb
push
xchg
movsb
mov
xchg
loopne
bound
ss
test
cmp
fildll
cltd
mov
cs
in
push
inc
pop
mov
insb
sbb
inc
pop
scas
les
push
and
mov
std
mov
fstl
xchg
jg
mov
xchg
loope
cmovg
xchg
int3
cmpb
add
cmc
lret
push
adc
jbe
push
pop
aad
ja
cs
mov
cltd
adc
fwait
shl
jne
adc
jno
test
jp
mov
xchg
push
add
cmp
test
clc
in
mov
xor
insb
gs
or
mov
leave
pop
cmpsb
dec
shll
lahf
push
rorb
ucomiss
mov
in
call
les
xchg
jns
in
pop
add
xchg
clc
push
mov
dec
leavew
imul
ljmp
int3
sub
mov
mov
jp
dec
mov
xchg
test
dec
fst
inc
dec
out
and
jmp
mov
lahf
add
push
ja
ret
cwtl
xchg
xor
inc
and
test
mov
mov
xchg
xchg
mov
fistps
cli
test
shlb
lahf
sub
xor
jle
xchg
or
mov
cmp
lods
aaa
dec
mov
cmp
pop
xchg
xor
and
enter
filds
and
or
jns
je
sub
pop
fcompl
imul
icebp
xchg
imul
mov
outsl
fidivrl
loope
repnz
pop
mov
cmc
sarb
or
mov
jle
enter
inc
testl
jo
sbb
arpl
add
cmp
inc
mov
xor
adc
inc
push
dec
add
xor
xlat
sti
dec
lea
mov
nop
xchg
inc
mov
mov
xor
adcl
sbb
mov
std
dec
adc
cmp
adc
repz
mov
push
mov
push
dec
mov
arpl
mov
orb
outsb
imul
cmp
shrb
jmp
lods
pop
jbe
pop
mov
ljmp
int3
inc
dec
icebp
decb
repnz
fs
loopne
mov
xor
rorl
mov
mov
mov
popf
push
insb
ss
sysret
imul
or
stc
std
xchg
dec
into
adc
mov
pop
jge
iret
clc
divb
sub
in
pop
add
xchg
stos
cmp
in
and
adc
xchg
test
push
fstp
mov
loopne
mov
push
jo
je
pop
pop
cwtl
subb
and
xor
scas
test
btc
dec
mov
insl
bound
icebp
pop
cmpsb
dec
push
into
xchg
cmp
push
push
mov
mov
mov
mov
rcrb
pop
in
pop
xchg
loope
aam
inc
outsb
lds
popf
add
sub
clc
fldenv
inc
jp
xlat
movsl
inc
sbb
sub
jle
cmc
leave
fisubrl
mov
cmp
jle
pop
scas
jno
mov
cmpsb
js
and
ljmp
mov
jg
jp
pop
mov
inc
test
dec
aad
adc
insl
sub
adc
and
in
movsl
sarl
andl
in
and
andl
mov
or
sub
xor
orb
mov
clc
sbbl
xlat
jmp
add
jl
out
push
add
nop
addr16
lahf
mov
jae
pop
adc
adc
pop
ret
pop
jb
out
lahf
or
mov
xchg
movsl
mov
arpl
xchg
sbb
rorl
inc
sbb
sub
pop
push
mov
inc
outsb
imull
mov
adc
insb
sub
cmpsb
test
mov
test
mov
jmp
shlb
sbbl
sbb
shll
fs
pop
fnstenv
out
and
and
out
mov
rol
shrb
rolb
ljmp
dec
add
in
aaa
mov
xchg
jbe
and
cmp
or
mov
lock
rclb
mov
fld
pop
ret
fwait
cmpb
lahf
and
push
jge
mov
andl
imul
in
inc
pop
jle
mov
in
mov
call
push
fstpt
mov
call
push
lret
loop
je
andl
dec
ret
xchg
dec
fdivrs
pop
dec
orb
mov
stos
ja
pop
roll
push
mov
icebp
test
and
adc
mov
xor
and
push
gs
fucom
and
mov
pop
icebp
jge
sbb
pop
out
push
aaa
mov
pop
or
pop
aas
mov
lcall
inc
lret
cmp
sbb
je
or
mov
ja
jb
add
cli
mov
pushf
jae
dec
push
mov
dec
xor
xchg
jno
pop
lock
inc
aad
push
imul
repnz
xchg
pop
sbb
rolb
jl
mov
xchg
mov
push
in
shrb
sub
adc
dec
or
lods
in
add
idivl
ret
sub
inc
sbb
or
aas
lahf
bound
fstps
mov
popf
outsb
stos
adc
jmp
inc
jno
xchg
in
pushf
popf
push
aas
pop
adc
mov
mov
subl
ret
or
dec
push
hlt
push
hlt
in
pop
hlt
or
sub
loopne
int
and
addr16
pop
push
jo
es
mov
out
fimull
je
add
add
jg
and
cmp
test
ja
sub
inc
movsl
xchg
mov
mov
lods
cmp
mov
imul
sti
jge
inc
nop
dec
xor
xor
jb
aad
sarb
push
cmpsb
fnsave
fmul
mov
test
ja
and
testb
jne
adcl
out
outsl
mov
shll
lret
lret
xchg
fsts
fs
sub
sahf
cmp
push
adc
jb
push
movsl
faddp
jae
orl
mov
lahf
lcall
inc
mov
fisttps
scas
pop
or
repz
pop
test
mov
dec
out
inc
lock
xor
and
add
add
mov
dec
ret
imul
push
jecxz
aam
cs
js
scas
mov
sub
dec
loop
pop
andb
stos
mov
cltd
mov
xchg
imul
lods
cld
aad
xchg
mov
xor
leave
sbbb
sub
pop
shll
loope
ret
dec
and
addr16
lret
lret
mov
cs
fcompl
inc
jnp
pop
mov
push
or
sub
inc
lret
sub
cltd
pop
fdivl
sub
pop
outsb
test
test
mov
cli
lret
jecxz
cmp
jne
push
adc
mov
cmpb
pop
cli
pusha
jno
xor
dec
inc
out
les
enter
fadd
out
es
mov
fwait
push
add
xchg
jle
jecxz
mov
popa
nop
outsb
mov
pushf
loop
lock
mov
jnp
xchg
adc
mov
int3
cmp
div
jmp
and
mov
pop
iret
xchg
and
jne
cmp
cmpsb
popa
gs
sub
mov
jp
sub
jno
insl
incl
stc
dec
mov
aam
stos
cmp
sub
and
dec
rcrl
ja
mov
inc
roll
ret
sbb
mov
sbb
ljmp
push
sahf
dec
fdivrs
stos
jge
fnstsw
xchg
xor
cmp
mov
and
push
push
xchg
test
in
inc
push
ljmp
push
ljmp
pop
pushf
xchg
fdivs
je
mov
pop
call
lea
xor
mov
adc
push
jo
pop
jb
scas
lret
sbb
mov
and
stos
adc
rcll
in
aam
popa
ljmp
mov
fidivl
mov
ror
xlat
lret
stc
rcrb
outsl
loop
notb
or
pop
in
stc
popf
and
outsl
lcall
frstor
xor
push
ja
sbb
mov
or
in
bound
push
pop
bound
mov
andb
sbbb
dec
pop
iret
rcll
push
lods
jbe
and
jecxz
mov
lock
pushf
pop
test
gs
or
inc
stos
enter
mov
mov
mov
lcall
in
repz
stos
adc
repz
pop
mov
cmpsl
adc
cmpsb
cmp
add
xchg
sbb
nop
or
rcll
xchg
cmp
fcomps
and
loop
cmc
imul
jne
xchg
js
lea
push
test
jno
dec
inc
push
sbb
pusha
jg
subb
push
jbe
dec
mov
mov
fsubrs
leave
bswap
sti
and
inc
data16
roll
shlb
mov
jp
xchg
xchg
dec
es
add
cmp
xor
loopne
es
aam
cltd
push
inc
pop
jae
icebp
in
sbb
fbstp
arpl
cmp
sbb
jg
adc
ja
sub
fwait
stos
xlat
mov
mov
pop
mov
stos
test
jecxz
cltd
and
fwait
mov
pop
std
xchg
mov
movsb
xor
inc
fimull
or
rolb
call
repz
sbb
loop
pop
mov
dec
mov
mov
pop
incb
push
push
pop
inc
ljmp
inc
push
push
xlat
push
sub
adc
popf
cmp
lods
test
push
into
pushw
adc
test
mov
mov
mov
push
lods
std
pop
insl
aad
int
and
mov
bound
enter
dec
push
out
mov
jp
add
popf
mov
push
sub
lods
push
mov
test
cld
sub
and
cli
test
gs
push
fnstcw
mov
out
in
fistpll
inc
hlt
jge
movsb
loop
jge
stos
pop
xadd
outsb
inc
push
cmpsl
pop
out
outsb
mov
aas
mov
enter
lahf
adc
cmp
sub
push
cmp
mov
loope
jl
or
and
mov
js
push
dec
xor
pop
xor
push
mov
pop
lods
out
leave
fmul
scas
dec
not
push
xchg
adc
mov
mov
and
pusha
cmpsb
popa
fnstenv
xor
pinsrw
vmovaps
dec
cmp
out
in
sbb
ds
cwtl
xor
mov
mov
imul
push
aaa
shlb
mov
pusha
sub
leave
jge
or
pushf
pop
xlat
and
jl
negb
pop
dec
inc
lret
icebp
jmp
inc
iret
cld
pushf
movsb
ja
lcall
data16
and
jmp
jp
xor
rclb
shr
jmp
push
xchg
xor
jno
repz
pushf
stos
cld
jmp
fstpt
pop
dec
mov
sbb
arpl
fildl
ret
xor
in
cmpsl
push
cmp
pop
lret
push
sub
shl
adc
subl
sahf
sbb
in
sub
add
xchg
cmp
push
lea
std
inc
dec
mov
lds
and
push
in
loop
fwait
in
xchg
sub
into
testl
in
lods
xor
in
lock
jl
les
lret
std
inc
mov
inc
sbb
cmp
push
lahf
scas
pop
gs
pop
hlt
inc
jno
lods
sub
sbb
cmp
aaa
scas
sti
jae
mov
cmp
lea
dec
sub
adc
fwait
pop
push
test
mov
lods
push
xchg
xchg
and
mov
add
inc
aaa
push
xchg
push
sarl
cwtl
shlb
test
rol
sahf
cwtl
jmp
mov
es
push
mov
pop
ds
dec
jl
jns
adc
jle
scas
push
inc
and
add
push
or
push
out
jnp
sbb
out
jg
push
in
pop
jecxz
out
dec
push
ret
dec
mov
cmp
sbb
xchg
xor
popa
mov
loope
lahf
ret
and
jne
xor
popa
repnz
js
push
js
adc
or
fistl
adc
mov
orb
repz
fldcw
jno
subl
xor
data16
sbb
movsl
lret
sbb
pop
enter
imul
xor
ja
push
dec
out
fs
mov
in
ret
fdivr
int3
sbb
arpl
jns
testl
push
xchg
int
fildl
gs
sarb
xor
or
std
adc
xor
aas
sub
in
adc
push
repnz
outsl
gs
clc
fstp
test
jnp
add
fucom
in
test
pop
pop
sub
xlat
xchg
cmp
gs
sti
mov
lcall
jno
cmp
pop
jns
jae
pushf
iret
test
stos
cmp
pop
cmp
aad
cwtl
mov
xchg
dec
inc
pop
mov
jp
mov
adc
jbe
aad
cmpsb
addr16
jbe
fdivrs
adc
pop
jecxz
push
loop
mov
cmp
adc
addr16
xchg
sbb
push
pop
decl
jg
mov
fs
cmc
push
add
aaa
or
fs
add
and
fsts
adc
xchg
sti
and
mov
incl
subl
cli
jg
repz
pop
mov
push
insl
add
jmp
mov
mull
mov
xor
fcoms
add
xor
mov
or
loope
add
mov
je
leave
xchg
push
out
pop
xor
jns
pushf
cli
xchg
push
sub
pushw
mov
test
and
aas
mov
pushl
push
jnp
push
push
rcrl
xor
and
xchg
xor
sbb
or
enter
cltd
in
sbb
mov
push
xchg
orb
ljmp
ds
xchg
dec
das
shlb
xchg
adc
shll
jge
xor
sbb
daa
aas
mov
push
xchg
popf
xchg
inc
sub
cmpl
push
cld
xchg
inc
in
mov
mov
nop
pop
push
jp
test
mov
pop
xchg
stc
or
cmc
cmc
dec
and
lcall
mov
xchg
push
mov
mov
testb
and
movsl
popa
cltd
es
mov
jnp
das
cmp
cwtl
cld
jmp
lea
inc
adc
mov
jns
mov
jl
cmp
push
mov
inc
add
add
mov
pop
xor
inc
push
push
or
xchg
sub
sbb
jmp
loop
mov
push
fistl
cmp
jae
es
xor
push
call
pop
shlb
mov
cmp
jecxz,pt
test
sub
mov
jbe
adc
push
mov
ja
push
fidivrs
mov
pop
pop
and
or
pop
popaw
or
inc
repnz
dec
xor
jae
sbb
nop
mov
lret
pop
push
test
stos
and
mov
inc
pop
jp
das
pop
lcall
repnz
add
cld
push
push
fadds
cs
fisttpll
xchg
cmp
sub
mov
enter
leave
push
icebp
dec
add
cmp
push
xlat
push
pop
imul
insl
mov
dec
and
mov
daa
rorl
or
ret
add
cmpl
push
sbb
les
clc
movsl
cmp
mov
or
scas
xor
mov
js
mov
cli
pop
add
dec
adc
pop
fsubrl
mov
push
cmp
int
or
orb
pop
sub
mov
lret
xchg
adc
adc
vpunpckhwd
notb
out
divl
pop
mov
popf
call
cmp
dec
cmpsl
pusha
inc
fadds
mov
test
inc
iret
cmc
jmp
lods
lret
dec
fstp
pop
xor
pop
mov
int
jge
leave
adc
loopne
sub
popf
mov
push
pop
sarb
outsb
fisubrl
arpl
les
or
push
xchg
pop
pop
icebp
add
pop
xchg
jp
outsl
orb
sub
shl
adc
mov
mov
mov
loope
dec
iret
in
int
in
mov
test
imul
les
or
std
mov
sub
aam
xchg
jecxz
inc
mov
fcom
xchg
push
aad
mov
mov
pop
movsl
test
sbb
mov
or
mov
movsl
inc
mul
dec
imul
cmp
xor
push
and
in
and
mov
sub
mov
pop
sar
arpl
dec
int3
sbb
adc
inc
scas
mov
or
push
sqrtps
pop
adc
loop
xor
cs
or
je
js
or
aaa
ret
add
ss
test
in
cmp
pop
insb
bound
pop
cmp
xchg
mov
pusha
push
and
mov
cmp
outsl
in
stc
or
test
xchg
mov
inc
jle
fsub
xchg
mov
dec
test
movsl
push
push
sbb
mov
sbb
or
mov
out
pusha
clc
cltd
nop
mov
and
das
sub
and
pop
pushf
mov
int
mov
aad
mov
int3
imul
mov
add
shrb
aas
sub
jae
cmp
mov
cmpsb
movsb
and
call
push
mov
lds
dec
lret
call
hlt
lds
and
insb
pop
sbb
out
fcompl
pop
pop
xchg
popa
loop
inc
cmc
push
jns
fidivrl
ljmp
xchg
in
and
jne
xchg
movsb
test
cmp
movsl
lods
lods
or
and
add
mov
sub
rcrl
out
and
imul
nop
test
xchg
mov
pusha
xor
js
xor
dec
inc
mov
sub
inc
lods
mov
std
cmpsl
xchg
sub
daa
xchg
mov
lds
jns
jmp
pop
pop
mov
stos
lret
out
rolb
pop
sub
mull
or
xor
push
lret
jb
ja
fdivs
jl
ja
cld
pop
es
dec
gs
mov
add
pusha
rep
pop
lret
ds
and
lret
adc
sub
pop
insl
loopne
mov
bound
out
ljmp
ret
out
pop
inc
push
ffree
sbb
mov
push
and
fcoml
fidivl
mov
dec
testl
fsts
push
sub
nop
xor
mov
jbe
and
lahf
imul
scas
pushf
cmpsb
shr
decl
or
mov
cmp
daa
xor
adc
dec
ja
mov
jo
and
mov
pop
movsl
lock
shl
lret
stos
add
pop
or
push
pop
sarl
in
stos
scas
ret
xchg
and
xchg
scas
lods
jnp
add
add
inc
mov
cmp
hlt
arpl
repz
cli
test
rcrl
lods
addb
cmp
into
sub
insl
movsb
adc
jmp
scas
repz
pop
sub
and
cmc
sahf
lds
add
aam
test
mov
pop
lahf
insb
js
push
fcoms
and
adc
cmp
sar
push
fdivr
lds
push
aas
dec
mov
cmp
sahf
pop
int
mov
jae
outsb
sti
mov
cwtl
out
shr
sub
mov
jecxz
mov
mov
sbb
xchg
jle
push
jg
jo
xor
jmp
adc
shll
sbb
adc
mov
pusha
jecxz
jmp
cltd
xchg
sbb
shr
mov
scas
or
in
in
cmc
jbe
insl
setns
and
fisttpll
ror
inc
arpl
mov
dec
cltd
mov
les
popf
and
add
fsub
push
sbb
pop
outsb
mov
dec
or
or
pushf
out
add
ds
loopne
mov
pop
and
loopne
mov
jmp
nop
xor
jnp
adc
push
pop
lea
shll
bound
pop
mov
mov
imul
inc
scas
insb
lret
adc
das
insl
cmp
lds
sub
inc
add
or
out
ja
fucom
mov
sbb
mov
xchg
and
ret
and
js
mov
nop
lret
pop
cltd
xchg
sbb
std
push
out
mov
sahf
sbb
mov
adc
in
jno,pn
inc
lock
xchg
cs
cltd
jp
movsb
in
add
in
mov
or
das
jl
pop
test
mov
subb
jecxz
sar
lods
adc
into
dec
sub
push
push
jle
add
inc
outsb
cmp
loop
cmpsl
data16
sub
dec
jae
jge
or
xor
cmp
int
pop
lods
cmpsb
mov
mull
jns
adc
jbe
loope
xor
enter
rorb
cli
stc
xlat
inc
je
mov
clc
lret
and
sbb
mov
inc
add
pusha
aad
pop
cltd
stos
lods
adc
xchg
xor
out
cwtd
dec
push
pop
cmpsl
fcom
add
sbb
jmp
int
xchg
int3
shrb
aas
jns
inc
sbb
testl
clc
mov
xor
xor
mov
pop
les
cmp
xchg
push
adc
pusha
inc
shr
sbb
aam
fcmovnu
inc
mov
push
and
and
or
hlt
dec
lahf
adc
cmp
mov
dec
addb
shlb
iret
add
loopne
mov
inc
cwtl
fdivs
bound
das
or
icebp
jmp
cmp
add
dec
testl
mov
or
cmp
leave
lcall
fldenv
cvtps2pd
test
rcrl
repnz
mov
int
stc
and
repz
nop
sub
pusha
aam
dec
sbb
dec
mov
mov
mov
aam
out
jb
out
pop
sbb
divl
or
sbb
repz
les
insl
fisubrl
into
push
xchg
fcompl
js
hlt
shll
out
mov
xor
scas
cmp
sbb
stc
sub
pop
rol
push
pop
dec
dec
out
stos
clc
test
popf
push
pop
xor
push
cs
scas
mov
fnstenv
inc
test
outsb
insl
or
push
mov
addr16
imul
nop
inc
shl
adc
push
fs
bound
push
int
or
jnp
insl
and
aas
sbb
inc
adc
cmp
xlat
sbbl
icebp
hlt
mov
mov
inc
int3
cmp
xor
mov
cmpb
lods
movsb
in
cmp
and
mov
pop
xor
test
jnp
push
cwtl
inc
inc
fcompl
xchg
mov
dec
out
inc
pusha
and
cmp
movsl
clc
fldenv
mov
jecxz
cmpsb
add
fldcw
out
cltd
adc
mov
cmp
lret
mov
neg
movsb
push
sub
sahf
push
ljmp
mov
imul
les
dec
push
pop
add
imul
bswap
xchg
sbb
lods
stc
addr16
out
pop
outsl
imul
pushf
push
nop
call
and
shlb
in
lods
mov
sahf
and
shl
mov
mov
sbb
imul
dec
imul
push
xor
mov
xlat
adcl
dec
hlt
ja
xlat
das
lock
cvtps2pi
xor
jno
or
loop
es
dec
push
cltd
jb
dec
mov
mov
insb
inc
push
cli
xor
cmp
addr16
repnz
xor
push
mov
aas
sub
sar
xor
setno
xor
adc
cmp
mov
cld
or
icebp
rcrl
aam
test
inc
mov
out
cmp
in
imul
or
adc
nop
mov
cmpsl
leave
imul
pop
cmpsb
cmp
or
pop
cmp
mov
push
aad
ja
cli
adc
rcl
lods
push
lods
adc
and
dec
sbb
or
lcall
inc
les
sbb
hlt
push
outsb
mov
movsl
mov
xchg
cmpsb
jl
pusha
adc
mov
add
ret
fdivrs
cmpsb
mov
jnp
push
mov
mov
xor
jle
mov
pop
js
mov
cmp
cmpsl
dec
push
stos
in
xor
pushf
out
sar
and
int
mov
pop
or
stos
jecxz
add
shll
pop
jnp
lret
rclb
orl
push
pop
into
mov
xchg
mov
sub
inc
inc
bound
sbb
push
mov
inc
jns
or
fmull
pop
mov
cmpsl
scas
inc
aas
adc
and
xchg
paddb
daa
loopne
loope
mov
xchg
cmp
insb
mov
mov
jg
mov
push
rorl
dec
xchg
add
int
push
data16
pop
and
sub
test
jle
pop
pop
or
push
loop
jns
out
ss
cmp
loop
jge
orb
scas
aaa
ljmp
dec
adcb
xor
cmp
mov
cmp
sbb
pop
pop
mov
leave
push
pop
add
push
add
mov
dec
dec
xlat
in
fstps
mov
xchg
jg
test
push
inc
mov
jne
fiadds
je
xlat
xchg
mov
cmpsb
cmpsb
insb
rolb
stc
jnp
jae
mov
jmp
cs
sub
sbb
xchg
adc
repnz
inc
add
fisubrs
leave
ljmp
dec
lods
loopne
lret
and
psrlq
mov
jg
push
mov
pop
enter
mov
pop
js
sbb
ror
out
pop
xor
mov
jmp
ja
test
stos
xlat
sub
adc
test
outsb
mov
sub
das
inc
stc
je
xor
or
add
call
lea
aam
xchg
lea
cmpsl
cs
and
mov
sbb
call
cmpsl
jo
sub
sub
lahf
xchg
pop
iret
jnp
fdivl
adc
cmp
or
adc
orl
cmc
xor
adcl
std
push
inc
or
icebp
out
into
outsl
in
adc
pop
scas
loopne
fwait
ret
testl
jg
fistpl
sbb
adc
pusha
shr
sub
out
sbbb
in
sbb
in
adc
push
clc
fbstp
jne
data16
dec
scas
cltd
fmull
icebp
loopne
js
xchg
cmp
jnp
jge
not
pusha
sub
outsb
mov
pop
in
sahf
mov
and
iret
negb
mov
pop
cmc
adc
addr16
aaa
fs
inc
cmp
mov
sub
je
lea
dec
jbe
fdivrl
push
outsl
xor
jno
lret
jp,pt
inc
xchg
mov
pop
addr16
movsl
xlat
or
xchg
and
sub
nop
std
popa
cs
xor
stos
mov
cmp
icebp
call
dec
or
sbb
mov
xlat
xor
movsb
ss
pop
xor
es
add
sub
lock
xor
addr16
xchg
add
jne
dec
scas
into
fs
int3
jp
adc
inc
jg
fsubr
mov
aaa
leave
mov
pop
jb
push
pop
sub
fisubrl
jmp
cltd
jnp
pop
mov
mov
adc
xchg
cmp
out
cmpsl
xchg
aaa
jecxz
pushf
mov
leave
ds
xlat
add
lahf
xchg
mov
adc
je
xlat
push
add
lcall
mov
pop
mov
xor
mov
add
sbb
add
test
lcall
out
and
adc
test
loope
in
sarl
cmc
mov
in
mov
pop
cli
shlb
or
loop
pop
outsb
mov
add
das
pop
sbb
pop
aaa
pop
test
xlat
testl
push
test
scas
test
adc
pop
test
testl
out
mov
pop
cmp
outsb
fcoms
bnd
xorb
lahf
icebp
jmp
cmp
repz
leave
xchg
lock
pop
mov
inc
imul
loop
jbe
lret
push
daa
sbb
loop
in
lret
cld
gs
inc
fidivl
xchg
js,pn
decl
push
ljmp
hlt
jns
icebp
fcoms
xchg
inc
pop
std
inc
push
aaa
add
stc
and
in
adc
mov
mov
fsub
int3
mov
mov
push
mov
mov
sahf
mov
adcl
mov
iret
push
add
and
mov
sub
ja
mov
add
push
xor
out
movsb
and
fsubrs
in
pusha
push
and
xor
faddl
and
sub
mov
lods
popa
repz
inc
or
adc
sub
movb
out
push
shrb
cmpsb
push
mov
repz
xlat
negb
adc
das
andl
es
xchg
or
cltd
push
adc
sbb
push
cmc
mov
push
mov
jmp
add
fildl
out
cli
cmpsl
push
xor
xlat
sub
loope
fisubrs
dec
push
addr16
mov
jbe
outsb
jle
fs
xlat
jo
pop
inc
popa
pop
push
das
push
movsl
sub
sti
adc
stos
hlt
mov
dec
cmpsb
loopne
and
or
sbb
cmp
pop
ret
jae
cld
nop
mov
pop
and
push
aad
xlat
pop
aad
add
push
andl
sbb
fstpl
mov
dec
jae
movsb
cmp
mov
mov
xor
jo
cmp
push
shrb
jecxz
lods
popf
out
ja
cmc
repz
aas
outsb
popf
cmp
movsl
add
mov
cmp
cmpsl
xchg
sbb
rorl
xor
dec
add
mov
leave
mov
xor
jmp
sub
ljmp
jecxz
pop
ret
mov
movsl
in
nop
nop
scas
add
mov
sbb
aaa
std
add
das
push
ljmp
fcomps
out
jg
push
call
gs
jnp
imul
adcl
sarl
jmp
arpl
or
scas
sbb
sub
clc
stos
push
push
mov
mov
out
mov
dec
dec
push
cmp
ret
cmpsb
fcompl
ffreep
push
inc
pop
out
sar
jns
leave
push
cli
imul
lea
inc
orb
shrb
loopne
sbb
add
add
imul
subb
les
nop
fwait
es
cmp
sub
fiadds
pop
ret
xchg
or
sbb
out
leave
and
clc
mov
subb
movsl
lods
or
lock
std
test
mov
imul
sahf
shrl
test
fisubs
les
add
push
mov
jns
dec
ds
lahf
lock
sbb
jnp
add
rcl
sub
mov
filds
aam
nop
add
jl
xrelease
jae
into
inc
sub
sbb
addr16
bound
dec
push
push
jp
int
jo
into
jns
sbb
jno
not
add
xchg
pop
mov
add
out
mov
sbbb
push
call
add
adcb
xor
js
rorb
fidivl
inc
xchg
subb
and
subl
mov
dec
rclw
lea
loope
sbb
cwtl
lahf
xor
cld
add
dec
in
in
or
fsts
fnstenv
inc
add
or
ret
aad
cmpsb
movsb
stos
ret
adc
cmp
gs
sti
popl
dec
test
js
mov
add
mov
inc
je
data16
xor
mov
pop
or
xchg
xlat
dec
pop
xchg
js
fsubrs
xchg
loope
mov
es
xor
pop
sub
or
or
xchg
add
dec
push
idivl
roll
lcall
insb
call
mov
jo
repz
inc
fsubl
test
and
push
mov
mov
xchg
clc
fimuls
nop
pusha
xchg
outsl
aam
xchg
outsb
mov
jo
decl
mov
adc
fistpl
sbb
pop
push
xorl
mov
mov
popf
cmpsb
popl
push
cmp
mov
repnz
in
into
push
jge
fistl
mov
push
hlt
mov
stos
mov
adc
sarb
push
mov
int
data16
loopne
lods
outsb
sbb
sub
sbb
imul
loope
mov
insl
movsb
xchg
flds
int3
push
ret
push
inc
xor
or
xorl
std
mov
and
xchg
sti
mov
sbb
rcl
push
xor
mov
or
or
jbe
enter
loopne
test
sub
mov
inc
mov
cmpsl
push
outsb
mov
cmp
lcall
and
ljmp
stc
add
mov
jecxz
fcompl
lods
sbb
insl
aaa
out
hlt
cmp
jge
jne
fildll
es
pop
popf
out
xchg
in
dec
lret
loopne
popf
in
pusha
mov
in
sbb
push
scas
insl
loopne
pop
icebp
sub
or
cmpsb
test
dec
adc
dec
pop
stc
xchg
cmp
mov
inc
fiadds
jns
sbb
push
fidivrs
sub
sbb
ret
andl
and
jge
dec
lret
xor
or
enter
mov
push
dec
inc
sub
xchg
add
jle
add
movsl
lahf
js
into
dec
pop
mov
jmp
mov
and
in
inc
int
pop
or
imul
jg
fimull
sub
adcl
mov
mov
jo
jns
pop
popa
pop
cmp
cli
stc
adc
andl
xchg
imul
inc
scas
xchg
lret
sahf
push
leave
xchg
lock
xchg
out
mov
shr
xchg
xor
and
ret
cmp
int3
cli
shl
popa
pushf
mov
clc
dec
nop
sbb
inc
mov
pop
lret
xchg
clc
inc
clc
inc
cmp
test
imul
mov
jo
sub
jno
jmp
jne
fisttpl
popa
push
xchg
das
pop
lcall
lret
in
jne
sub
lods
movsb
sbb
cmp
idiv
pop
cmp
mov
lcall
push
inc
imul
lods
pop
insb
xchg
adc
xor
jno
cmp
inc
sub
or
mov
dec
cmp
fs
shr
sub
sub
imul
ret
pop
mov
jge
jmp
idivl
addr16
xchg
cs
inc
sub
int3
je
mov
neg
mov
rclb
stos
inc
adc
add
int3
ljmp
test
sbb
cmpsb
xchg
jae
xorl
add
mov
or
sbb
inc
cs
dec
sub
cmp
sbb
subl
inc
pop
outsl
faddl
mov
xor
inc
aam
pop
outsb
push
add
mov
movsb
sub
mov
pop
adc
sub
testb
aaa
mov
mov
outsb
mov
sub
pop
push
jg
mov
rorl
add
or
adc
das
jbe
fidivl
inc
insl
insl
jae
pop
lods
mov
lret
jecxz
mov
jae
mov
in
sbb
pop
pusha
xchg
inc
push
aaa
enter
int
mov
icebp
sub
mov
xor
test
push
mov
out
ja
popf
jp
fists
cs
push
xchg
mov
clc
mov
mov
mov
xchg
mov
and
lea
push
pusha
push
jne
dec
push
push
dec
sahf
aad
cli
push
dec
and
cmp
adcb
push
dec
int3
xchg
sbb
mov
dec
js
test
pop
push
sbb
mov
adc
mov
loopne
adc
jno
mov
mov
add
pop
push
cmp
sub
in
aaa
out
pop
mov
arpl
and
movsl
repz
cmp
mov
xchg
adc
mov
xchg
daa
adc
dec
jb
xchg
outsl
jae
lods
push
negb
dec
sbb
addr16
jbe
out
adc
shll
scas
pushl
scas
push
mov
shl
movsb
sub
in
pop
jle
out
xchg
mov
stos
addr16
fildl
and
jle
rclb
out
in
shll
into
cmp
lods
subb
orb
rorb
shrl
test
movsb
rol
push
sub
shl
jecxz
mov
pusha
adc
js
les
dec
js
jo
aaa
aas
scas
sbb
cmp
nop
pop
test
dec
or
jnp
sarl
ret
pushf
loop
ja
es
xlat
mov
or
cmp
outsl
xor
add
lds
ficomps
or
jae
bound
shlb
jbe
push
sbb
loope
xchg
negb
lea
inc
jbe
inc
jmp
xlat
test
popf
mov
pusha
mov
sbb
mov
fsubs
rdpmc
sbb
ja
xlat
sub
xor
pop
push
cmp
cmp
or
push
mov
sbb
andl
sbb
sbb
mov
and
dec
dec
and
fcoml
and
notl
or
and
inc
push
sub
cld
mov
ret
inc
jl
mov
push
mov
cltd
popa
dec
popf
lods
add
stos
xchg
mov
push
arpl
mov
xlat
fsubl
pop
cwtl
mov
fisttpll
out
dec
idivb
ljmp
imul
out
gs
icebp
mov
cs
mov
push
std
jnp
into
add
lcall
or
and
loop
add
pop
repz
ret
pop
push
jo
adc
push
fcmovbe
ficoms
push
sub
mov
enter
loopne
es
stc
insl
sub
pop
xor
xchg
mov
aaa
movsl
sub
xor
mov
data16
jae
mov
das
lods
out
mov
mov
fcos
out
ret
ret
mov
loopne
lds
jo
or
push
mov
lret
out
mov
loope
ret
xlat
enter
add
lret
pusha
cmp
mov
hlt
divb
sub
jno
orl
adc
dec
mov
pop
sub
hlt
into
daa
sbb
inc
in
mov
fidivs
jle
fstl
lock
inc
mov
dec
hlt
nop
jle
dec
inc
mov
push
enter
mov
mov
js
jne
jge
jge
outsb
loope
imul
scas
lock
orl
mov
lcall
xor
push
add
inc
lret
jnp
lds
ds
xchg
sub
pop
xchg
mov
dec
mov
das
out
xlat
cmp
dec
ds
pop
xor
int3
daa
adc
jns
shlb
mov
mov
mov
add
scas
ret
sbb
mov
jns
mov
cmp
jmp
fldt
call
dec
shl
xor
dec
or
or
inc
push
stc
fisttpll
dec
mov
pop
xor
jno
iret
mov
add
jb
lods
cmp
jae
inc
push
insb
fs
testl
sbbl
sub
mov
out
cld
jns
cmpsb
mov
cmpsb
lahf
mov
repz
lahf
lahf
mov
sbb
jne
mov
in
mov
jmp
jnp
pop
mov
mov
add
testl
mov
fdivp
cmpsb
js
mov
mov
outsb
and
mov
xchg
das
jae
movsl
dec
cmp
fisttpl
cmp
mov
or
lahf
cmc
xor
xlat
jge
mov
fistpll
in
jo
aas
fnstenv
xchg
inc
push
mov
mov
mov
add
xor
mov
test
aam
cltd
xchg
xchg
lahf
je
push
adc
movsb
ja
loopne
inc
mov
popf
jb
mov
xchg
mov
lds
or
inc
popf
arpl
push
pop
pushf
xor
push
xor
aam
xor
xchg
jb
sub
call
test
mov
es
mov
inc
push
mov
mov
and
or
lret
or
inc
hlt
mov
sahf
fnstsw
cld
sbb
jb
in
rcr
shll
rcll
push
cmpsl
scas
mov
push
inc
ss
add
jl
inc
jle
jl
and
mov
mov
test
test
xchg
or
jae
inc
sbb
shll
xor
aas
xchg
xor
lahf
test
roll
fwait
xor
lds
in
or
imul
mov
sub
fs
mov
cmp
xchg
outsl
jmp
loope
je
and
imul
mov
cmpsb
rcl
mov
xor
ret
cmpsb
lods
std
lods
je
ljmpw
pushf
and
push
cmp
int
aad
pop
test
mov
loop
adc
cmc
and
push
adc
les
addr16
inc
mov
mov
pop
shrl
into
arpl
lods
inc
mov
pop
mov
sbb
xchg
mov
jp,pn
xor
adc
cmpb
and
fimuls
or
cmp
repz
pop
sbb
loope
jnp
lds
xor
ss
jo
js
aad
jmp
in
cmp
ljmp
mov
push
mov
lds
pop
jbe
inc
loope
mov
xor
in
fisubrs
ss
pop
int3
xor
fwait
std
jne
hlt
cmovnp
inc
mov
repnz
xchg
sbb
pop
mov
lcall
rcl
sub
jbe
outsl
call
lahf
scas
push
mov
lahf
cmp
stos
add
sbb
scas
add
lea
inc
shrb
or
bound
xlat
fdivrs
js
mov
jno
or
int3
jbe
dec
mov
mov
xor
jmp
mov
shr
fcomps
push
testl
xor
or
nop
mov
cli
sub
lock
sbb
pop
push
nop
cmc
cli
mov
pop
nop
adc
ror
push
inc
and
xchg
push
inc
xchg
fldenv
xor
lret
stos
stc
ret
xchg
call
adc
xchg
shrb
enter
clc
mov
pop
imul
sub
test
stos
cmpsb
cmp
popf
xchg
gs
dec
pop
cmp
icebp
mov
cld
fwait
xchg
pop
insl
pop
jne
std
adc
sub
imul
lds
adc
jp
mov
jmp
andb
sbb
insl
dec
push
jg
test
fistpl
pop
jmp
sbbb
xchg
xor
cmc
f2xm1
xorl
dec
out
sbb
outsl
xlat
aam
mov
insl
push
cmc
gs
rorl
leave
xor
mov
jno
fsubr
daa
push
cmp
mov
xchg
xchg
jg
aam
xlat
ss
sub
sarb
push
sub
rorb
or
into
inc
cmp
and
sar
mov
jle
lcall
inc
xchg
lahf
lea
add
inc
or
rcrb
push
jmp
lahf
lahf
adc
fwait
iret
adc
ds
sub
js
pop
mov
test
sbb
xchg
push
jl
cli
sbb
cmp
movl
jp
cmp
mov
out
test
xchg
aas
out
cmp
mov
loope
pop
jns
cld
test
insl
in
out
mov
mov
adc
out
inc
fldt
pop
daa
ss
stc
addr16
gs
adc
xor
out
pop
clc
lcall
out
push
inc
mov
jno
mov
mov
xor
daa
lea
jae
or
xlat
pextrw
mov
dec
mov
add
cs
or
mov
rol
scas
fnstsw
sbb
cmpsb
das
sbb
stc
outsl
sbb
mov
push
sbbb
inc
mov
xor
mov
mov
inc
xor
hlt
in
and
and
inc
iret
jb
adc
sbb
and
mov
dec
insb
adc
sbb
add
nop
decb
mov
addr16
xor
dec
add
dec
jl
jne
jns
mov
jb
fsub
sub
jnp
cwtl
sti
xchg
test
fiaddl
add
inc
jg
ret
stc
inc
out
loopne
jne
lret
and
inc
jno
cmpsl
pop
xchg
out
adc
movsb
mov
xor
xor
mov
out
sarb
add
cld
and
xchg
sub
jle
mov
ret
and
outsl
mov
ja
push
fisubl
gs
test
movsb
mov
inc
xchg
pushf
aas
fsubl
out
and
sbb
lds
push
in
fidivs
fnstenv
movl
push
jge
or
js
adc
ret
ficoms
xchg
fucom
mov
addr16
cmc
xchg
or
lret
jo
sbb
daa
jl
notl
int
cmp
pop
xor
leave
lcall
push
neg
in
pop
je
xchg
hlt
lds
ss
mov
mov
sbb
jle
daa
lret
push
ja
rorl
jns
and
call
push
cmpsb
xchg
ja
pop
mov
pushf
movsb
xchg
push
mov
fldcw
insl
mov
repz
mov
sbb
mov
or
xchg
inc
and
sbb
jae
clc
fucom
sarl
test
fmul
pop
xchg
lahf
insb
jns
mov
push
in
dec
stos
xchg
xlat
jae
sub
mov
pop
xor
and
and
rclb
or
aaa
add
lcall
and
aad
mov
out
in
pop
sub
jno
ss
dec
cmp
and
push
inc
in
mov
and
pushf
sub
arpl
xchg
or
cmp
in
ret
xchg
rorl
popa
cltd
adc
add
out
dec
sbbl
sahf
lcall
jecxz
movb
sbb
test
dec
push
out
fs
std
fmuls
push
repnz
dec
fucomip
test
xchg
fdivrl
faddl
shr
and
sbb
jnp
mov
push
mov
and
icebp
mov
cmp
loope
mov
and
cld
enter
and
xchg
mov
fimull
adc
jecxz
mov
std
cmp
xchg
push
dec
leave
test
int
cmpsl
aaa
insl
cli
scas
sbb
rclb
repnz
pop
aaa
es
adc
popa
cmp
popf
mov
fwait
jmp
into
or
adc
xor
jns
and
insb
xor
sub
and
out
or
lahf
mov
pushl
outsb
fcomps
pop
cmpb
cmpxchg
push
inc
je
divb
fcomp
loope
test
xchg
fwait
or
repz
pop
jp
jge
push
mov
stc
lea
inc
add
in
int
and
push
lock
push
js
ficomps
cmp
mov
arpl
dec
clc
stos
cmpsl
sbb
inc
prefetchw
fnsave
mov
mov
adcl
mov
mov
stos
push
push
jae
push
bound
movsb
xor
cs
sbb
and
mov
popf
xlat
cmpsb
je
push
pusha
js
out
inc
xchg
xor
das
pop
adc
rdtsc
add
call
jl
or
ds
pop
aas
push
int3
cmp
xchg
push
adc
movsb
in
push
int
mov
pop
adc
sub
jmp
movsl
ret
lcall
adc
sub
lock
and
push
push
ret
dec
loope
mov
cltd
sub
sub
inc
xchg
loop
add
xchg
popa
jmp
pop
mov
sub
add
jge
cmc
pop
ret
jg
sbb
xchg
shrl
lds
lods
pop
mov
and
jae
mov
clc
cmpsl
rdmsr
aam
pop
dec
test
mov
icebp
std
add
add
adc
cmpsb
inc
inc
push
in
mov
in
lret
sbb
add
jae
fwait
cli
dec
lret
ret
mov
mov
leave
mov
push
cmp
incb
cmp
sahf
dec
mov
jns
imul
xchg
xor
ss
inc
repz
dec
cli
lret
fwait
cld
ret
popa
sbb
add
xorl
addr16
cwtl
jmp
mov
sahf
outsl
pop
push
sub
jg
std
xchg
cmp
int3
xchg
addr16
lahf
mov
movsb
jno
in
and
in
clc
cmp
lahf
stc
stos
pop
lahf
and
inc
and
lods
mov
fisttpl
pusha
out
dec
shl
cmpsb
nop
icebp
xchg
dec
mov
in
scas
xor
das
pop
addb
fsub
jmp
pop
rcl
test
jmp
jne
inc
loope
rcr
scas
out
xor
sbb
mov
and
mov
jecxz
dec
cs
push
pop
mov
rorb
popa
ja
mov
sbb
push
loopne
lods
stos
pop
dec
sbb
cmp
dec
xor
cs
adc
push
les
jge
mov
cs
sub
xchg
addb
loope
xchg
stos
pop
and
jle
mov
xchg
leave
pop
lcall
push
pusha
cwtl
pop
mov
sbb
jne
cmp
aaa
mov
adc
dec
std
fwait
inc
fwait
lret
lea
clc
mul
push
arpl
sti
xor
sub
aas
dec
sahf
shll
dec
mov
xlat
clc
push
sub
repz
je
xor
or
xchg
jmp
xchg
sub
in
or
rorb
enter
aad
mov
cmp
mov
or
hlt
hlt
or
popa
jp
pop
gs
push
fistl
push
shrl
push
mov
xchg
outsb
pop
fisubs
es
xchg
inc
cmp
dec
pop
push
xor
mov
iret
fsubrs
xchg
jbe
imul
and
cmpb
xor
mov
xor
dec
xchg
call
sbb
xor
out
movsb
pushw
je
notb
std
incb
loopne
faddl
je
repnz
sub
movsb
shll
pop
mov
sub
adc
xlat
sbbb
sub
pop
mov
jmp
xchg
adc
jb
inc
lret
push
mov
push
adc
pushf
push
mov
ja
popf
roll
out
lcall
mov
jae
cmp
dec
decl
leave
cmp
pop
mov
ss
or
mov
lods
add
repnz
fiaddl
and
sti
stc
repnz
andl
and
ret
mov
xchg
ficoms
xorb
scas
xor
sub
and
bound
cs
test
rcrb
mov
pop
ficompl
daa
test
sarl
shrb
mov
push
cmpsl
jb
cmp
mov
cltd
pop
insl
mov
scas
stos
pop
jno
int
pop
pushf
jmp
jae
mov
mov
stos
fstp
lret
fdivrs
xchg
xchg
pusha
out
inc
shl
rol
or
cli
loop
aad
sbb
shlb
mov
enter
int3
lahf
xor
sub
sbb
jmp
scas
push
adc
sbb
sar
jmp
out
lds
dec
in
adc
movsb
sbb
test
pop
sbb
stos
adc
inc
sub
addr16
cmp
xchg
imull
sbb
insl
cmp
insb
pop
sarl
jg
sahf
rcrb
mov
dec
sbb
ficoml
enter
mov
jle
add
xor
adc
nop
clc
ret
dec
popf
dec
mov
loope
movsl
cmc
sbb
in
or
nop
jl
push
and
imul
xchg
xchg
sub
push
mov
jae
ds
ret
out
cmpsb
cmc
dec
pop
sbb
push
dec
daa
test
in
mov
push
push
push
in
cltd
or
inc
inc
mov
sbb
fwait
or
add
ja
lahf
lods
out
dec
mov
dec
inc
imul
out
pop
notb
fistpll
xor
and
jl
sub
or
insl
mov
and
or
pop
pop
test
pushf
lods
aam
adc
lea
jb
into
sbb
aam
mov
stos
push
testl
inc
jmp
popf
mov
cvttps2pi
in
cmpsb
icebp
push
xorl
jno
pop
roll
pop
cmc
jb
nop
xor
or
fwait
jle
mov
mov
out
jmp
mov
inc
in
fwait
aad
ja
push
xchg
aad
sti
addb
mov
dec
cmp
rorb
mov
xchg
pop
cmp
es
rcrl
or
dec
popf
dec
sti
ja
inc
cmp
popa
out
pop
sbb
les
mov
or
dec
adc
je
cltd
jg
mov
adc
xchg
jg
movb
push
mov
mov
push
aad
pushf
lret
fldenv
xchg
imul
lret
push
mov
adc
mov
std
mov
fstl
pop
sbb
call
pop
js
push
cmpb
and
sarb
jne
mov
ljmp
sub
addr16
push
xchg
fwait
mov
pop
cmp
cli
stc
leave
icebp
cwtl
jecxz
ret
int3
cld
xorl
fildll
push
sub
int
imul
mov
popa
jg
xchg
cmp
leave
lock
iret
clc
inc
imul
insb
enter
adc
sub
loope
inc
jmp
sbb
mov
sbb
mov
pushf
mov
mov
jnp
pop
cmpsl
mov
add
inc
mov
push
jns
mov
inc
rorl
or
fwait
inc
inc
and
cmp
pop
je
lods
movsl
jl
popa
and
dec
cmp
test
decb
push
dec
loope
loop
fmuls
and
or
xchg
sub
lds
pop
dec
sbb
gs
gs
mov
sbb
lods
lds
dec
in
loope
enter
mov
mov
pop
push
dec
push
arpl
and
pop
daa
dec
sahf
inc
repz
loop
shll
sub
dec
outsb
insl
sub
rcll
iret
repz
mov
leave
test
fcomps
ret
xchg
mov
popl
jg
inc
mov
jo
mov
aad
fists
rorb
aam
out
sub
xor
cmp
push
xchg
push
cmp
scas
inc
ds
push
insl
roll
jo
inc
stc
repnz
sarb
sub
test
and
pop
out
stc
cmc
sub
push
dec
fbld
mov
adc
add
es
push
mov
testb
mov
jecxz
adc
mov
je
test
xchg
jbe
add
insl
aad
insb
imul
or
push
sahf
push
xchg
add
push
pop
fisttpl
daa
enter
mov
mov
push
rolb
test
repz
sub
and
mov
push
add
pop
adc
push
bound
jb
push
imul
inc
sub
aaa
bound
or
cwtl
jns
fdivs
sbb
xor
mov
push
mov
xor
enter
sub
jbe
fsubrl
scas
add
mov
lcall
sbb
dec
xchg
dec
test
push
cmp
jns
loop
xchg
mov
sbb
cs
xor
mov
pop
pop
cs
mov
movsl
in
jecxz
jg
or
xchg
mov
mov
in
mov
cmc
pop
mov
loope
push
push
rcrl
daa
cmp
and
rcl
fsts
dec
out
xor
in
push
dec
hlt
push
sbb
cmp
sbb
pop
jecxz
cmpsl
or
insb
push
or
cld
push
pusha
jle
and
inc
push
mov
and
pop
or
inc
cld
mov
movsb
aaa
push
inc
xlat
ret
pop
adc
bound
mov
lods
add
loope
dec
addr16
or
add
dec
mov
lcall
fwait
out
nop
mov
push
and
add
jmp
les
and
jge
inc
push
jne
adc
scas
xchg
cwtl
or
cmpsl
or
lcall
loope
add
fidivs
cmp
xchg
outsb
mov
ret
pusha
call
jbe
jle
mov
inc
push
jno
shlb
into
inc
mov
loope
push
pop
cmp
stos
jno
add
and
add
cmc
sysexit
mov
inc
bound
insb
push
fdivl
add
and
dec
mov
ja
dec
dec
mov
inc
sbb
mov
adc
push
push
movsl
cltd
mov
insb
scas
movsl
xchg
cli
adc
or
add
imul
jmp
mov
cmc
test
std
mov
push
out
dec
xor
mov
sti
cli
mov
jl
pop
call
mov
inc
arpl
outsb
arpl
loop
fadds
test
fxch
jmp
xor
xchg
pop
xor
mov
out
popf
pushf
inc
mov
repnz
fisttps
xorb
mov
popa
push
mov
and
sub
in
sbb
aaa
or
mov
or
jo
xchg
xor
clc
dec
adc
or
mov
sahf
fimull
add
push
out
adc
mov
or
cmpsb
fcmovu
mov
xor
or
mov
or
mov
stos
cmp
jae
fadd
rol
jge
mov
in
push
js
je
or
and
cmp
imul
sahf
sbb
push
loope
xlat
cli
add
lods
ret
jbe
mov
dec
jmp
int3
test
or
adc
inc
mov
cmp
fiaddl
das
mov
out
mov
les
test
pop
sbb
cmp
nop
adc
sub
mov
sbb
add
and
dec
mov
sub
push
inc
pop
cmpb
shll
mov
scas
lock
adc
mov
dec
xor
loopne
sbb
popf
sarl
insl
and
fimull
xchg
pop
mov
insl
shl
rcr
lcall
adc
xchg
sub
mov
jle
mov
pop
sub
mov
push
adc
xchg
mov
push
cmp
mov
jae
call
add
or
xchg
fsts
insb
mov
movsl
pop
scas
lock
testb
push
fstpt
xchg
cli
push
test
mov
push
adc
jmp
push
or
sbb
imul
xchg
xor
cmp
cld
aad
or
aam
sub
push
xchg
incb
in
push
push
out
cmp
adc
aam
imul
subl
shlb
pop
jns
push
mov
push
dec
mov
mov
hlt
add
pop
push
dec
sub
push
cmc
loopne
fistps
mov
test
pushf
cltd
and
dec
push
ja
push
lea
xor
sub
jl
jl
es
int
lahf
hlt
push
cmp
mov
movsl
mov
mov
mov
xchg
cmp
push
dec
dec
or
dec
pusha
xor
and
lock
push
std
push
sbb
enter
jae
inc
ljmp
loope
ret
mov
in
mov
stos
jp
pop
cmpl
fstps
scas
xchg
add
xchg
repz
push
ss
mov
adc
rol
loope,pt
fnstcw
cmp
rorl
aad
pop
push
lods
or
repz
push
or
sub
les
jp
inc
pop
dec
fucomip
test
adc
adc
aam
ret
sbb
ss
pop
push
mov
inc
cmpsb
mov
sub
es
adc
adc
imul
or
pop
pusha
aaa
stos
xchg
dec
nop
popf
call
push
and
jmp
negb
lock
cs
push
ds
dec
loopne
int3
ja
dec
add
aam
incb
hlt
add
push
adc
xchg
in
loopne
add
pop
add
sub
dec
xor
xor
test
jge
into
test
jns
pop
call
andb
lods
and
ljmp
or
xorb
or
addr16
adc
das
sbb
jo
pop
mov
pop
call
test
adc
jg,pn
and
dec
std
sub
xchg
mov
inc
and
lea
sar
test
xchg
inc
repnz
cmp
jb
xchg
iret
lock
incb
stos
outsl
jb
out
je
lret
inc
ret
fidivrs
dec
lahf
fldt
in
pop
es
adc
and
hlt
mov
aam
in
loopne
insl
dec
bound
inc
pop
mov
repnz
movsl
mov
pop
aaa
fwait
sub
ljmp
pop
lcall
xor
xchg
scas
outsl
into
pusha
dec
or
or
lahf
and
jecxz
and
or
out
jbe
xlat
stc
jecxz
arpl
push
insl
adc
pushf
mov
ret
aam
sbb
ss
leave
inc
aad
bound
cmp
pop
xchg
jl
jmp
pop
rcrb
adc
arpl
imul
arpl
mov
fdivs
scas
out
add
inc
lahf
pushf
stos
jb
fnstenv
sti
fwait
sti
aaa
pusha
inc
mov
std
mov
mov
push
pop
mov
mov
fninit
lret
cmp
add
mov
andl
adc
dec
sbb
push
pop
pop
loope
inc
add
xchg
in
cmp
js
test
aas
mov
arpl
mov
mov
roll
fstl
and
aas
or
cmp
int3
hlt
sbb
inc
cmp
mov
jo
adc
jne
aaa
pop
in
aam
adc
negl
mov
dec
fcmovne
jae
mov
jb
jle
sub
push
cmpsl
push
jmp
ds
or
push
pop
sbb
jmp
pop
xor
cmp
push
mov
movsl
dec
mov
push
inc
stos
sub
sub
pop
jl
and
icebp
sbb
or
ret
push
cld
popf
movsl
inc
mov
dec
cld
loop
mov
xchg
test
leave
sahf
mov
rclb
bound
movsb
mov
inc
push
out
leave
in
hlt
mov
inc
sub
sbbb
stos
adc
stos
int3
push
loopne
mov
xor
mov
ds
sti
fwait
xchg
cld
jg
shlb
mov
rol
mov
sub
inc
lret
addr16
pop
sbb
cli
insl
daa
popa
out
cltd
rcr
cltd
mov
jae
mov
and
loope
pop
mov
out
clc
cmpsb
fmulp
loopne
scas
inc
scas
je
adc
cmp
insl
mov
lret
clc
iret
cmpsb
dec
inc
xchg
mov
jns
lock
pop
sbb
mov
push
xchg
inc
adc
ljmp
lret
out
mov
int
vmovsd
pop
adc
push
cmc
adc
mov
or
cmp
and
mov
insb
jnp
popf
clc
adc
sbb
sbb
cmc
or
js
push
lcall
lahf
daa
adc
inc
xchg
and
mov
mov
sub
jp
jg
dec
inc
sar
icebp
xlat
mov
out
mov
sub
dec
jge
ret
out
xchg
stos
test
mov
in
lahf
mov
mov
mov
jb
mov
movswl
push
sub
mov
cld
mov
lcall
mov
cmp
cld
xor
lret
push
addr16
shlb
iret
movsl
jecxz
das
and
or
and
and
ret
xchg
mov
sbb
and
and
cs
fstps
push
adc
outsl
imul
jg
aas
into
aad
cmp
fdivrl
int3
pusha
data16
mov
in
jno
fists
xchg
xchg
pop
dec
andl
inc
adc
or
mov
mov
xchg
ljmp
jp
aad
bound
inc
lret
push
add
stc
jb
jo
jnp
mov
xchg
cmp
push
jmp
sti
xor
dec
test
mov
pop
insl
and
or
dec
jl
sub
mov
push
out
add
int
idivb
mov
cmp
mov
add
mov
adc
mov
push
pop
scas
inc
xchg
push
fwait
stos
dec
push
xor
fidivl
fwait
mov
jb
inc
pop
insb
pop
sti
pop
mov
fidivl
in
addl
mov
jns
inc
aam
push
imul
les
arpl
enter
mov
mov
ljmp
adc
sbb
lcall
add
fsubs
mov
jp
and
rorb
sub
push
stos
imul
subb
jb
mov
pop
mov
test
test
and
inc
add
call
and
stc
inc
jo
xchg
push
and
jbe
icebp
das
std
push
notl
mov
bound
jp
movsl
ja
mov
and
mov
xchg
adc
mov
ficompl
dec
decb
test
leave
sbb
xchg
dec
jae
outsl
jne
pop
adc
std
xchg
push
pop
rcrb
sbb
sub
ds
loop
mov
push
add
scas
imul
repz
and
test
dec
fidivs
sbb
fnstenv
fimuls
and
jg
jno
xor
mov
pop
mov
rcrl
add
mov
adc
cmp
in
cld
sbb
lods
inc
icebp
xadd
cmpsb
inc
mov
repz
ret
das
ja
scas
dec
bound
xchg
insl
pop
push
inc
ljmp
movsb
sbb
in
in
stos
scas
xor
sbb
stos
or
shl
pop
outsb
mov
arpl
or
lea
enter
sbb
je
sbb
test
mov
data16
fidivs
mov
dec
pusha
sub
test
push
jno
jge
push
ret
call
xchg
adc
mov
enter
add
sbb
and
fdivr
fcoml
mov
pop
and
repz
iretw
fdivrl
pop
xchg
dec
sbb
jo
and
js
je
sti
fcompl
rcll
dec
aaa
dec
and
out
loop
scas
aas
mov
mov
cmc
or
cld
lahf
adcb
push
lods
div
scas
and
push
loope
test
repnz
test
mov
dec
add
inc
shll
lcall
movswl
out
mov
push
ret
fildl
ja
mov
popf
fldl
pop
xchg
mov
push
sub
hlt
and
into
fs
je
call
iret
call
mov
inc
fbstp
sbb
or
in
mov
ds
xorb
scas
sub
lea
cmp
xor
push
pop
fiaddl
movsl
into
test
fidivl
mov
iret
add
lcall
ljmp
das
add
mov
pop
add
sub
dec
adc
mov
mov
insl
in
loopne
xchg
sbb
aam
stos
jne
andb
mov
push
pop
xchg
sbb
push
xor
daa
rcrl
mov
das
pop
push
xor
xor
xor
jecxz
pop
cmp
sahf
jmp
leave
sbb
aas
xchg
dec
mov
push
adc
aad
fwait
push
add
sbb
fs
iret
sub
cmc
sub
cmp
shrb
lret
inc
scas
jle
nop
nop
inc
scas
sar
and
xor
cmp
fldt
ds
or
cmc
push
adc
int3
xchg
in
xchg
nop
adc
push
mov
cmp
mov
rol
pushf
jmp
sbb
jg
out
sbbl
and
shl
lret
xchg
lcall
mov
xchg
pop
or
sub
sti
mov
insb
pop
cltd
in
xor
pop
rolb
and
fdivrs
jns
pop
punpcklwd
lods
outsb
daa
sti
stc
stos
pop
stc
add
repz
xchg
mov
fsubl
sahf
sub
and
xlat
dec
adc
sbb
das
incb
les
cmc
pop
loop
movsl
cmc
jae
sub
sub
or
push
movsl
std
xor
pop
pop
sbb
fwait
jle
pop
sub
xchg
xchg
mov
aad
push
insb
inc
adc
jo
cmpsl
rolb
out
movb
cmp
cli
adc
into
cmpsl
lcall
es
rcr
je
test
inc
sub
add
in
leave
mov
lds
xchg
add
fiadds
popf
bound
sbb
cwtl
sti
sti
mov
and
jg
insb
mov
xchg
jno
pop
cwtl
mov
int
mov
sahf
mov
insb
cwtl
out
call
sub
sub
or
add
andl
outsb
lds
and
test
mov
sarb
xchg
enter
cmp
mov
repnz
mov
xor
ret
mov
inc
mov
fs
jmp
add
loop
adc
imul
test
mov
rcll
hlt
add
push
sbb
pop
bound
mov
xchg
or
push
mov
lea
out
cltd
dec
ljmp
stos
sub
and
adc
fdivs
maxps
fldenv
fcmovnb
rorl
stos
jmp
pop
jge
test
lds
das
or
pop
add
jle
jmp
jnp
sar
sbb
mov
pop
imul
daa
insb
inc
mov
sbb
and
ret
and
stos
mov
sub
fcmovnb
mov
daa
xor
sub
jmp
outsb
fiadds
test
out
repz
xchg
mov
adc
dec
jnp
dec
xchg
mov
lds
inc
ret
fistps
dec
sbbl
out
mov
ror
lods
xor
push
mov
cltd
test
movsb
shll
push
push
imul
les
mov
push
xor
push
sbb
in
std
in
add
and
sbb
add
jmp
mov
push
lds
jbe
addr16
aad
sub
sub
cmp
lds
mov
cmpsl
mov
add
or
mov
test
jecxz
ret
xchg
jmp
test
jle
add
push
and
xchg
mov
movsl
cmpsl
pusha
pop
xchg
inc
adc
xchg
jmp
aaa
or
and
push
pop
jbe
or
out
jbe
xor
roll
outsb
enter
cmpsb
fisttps
dec
or
sbbb
arpl
outsl
mov
xchg
lds
add
out
test
out
dec
addr16
dec
cltd
arpl
jne
sahf
sbb
mov
mov
or
mov
adc
and
cmp
inc
cmp
sbb
int
adc
fsts
cmp
lock
sahf
popf
pop
xor
and
inc
cwtl
sub
cmp
push
fnstsw
push
dec
pop
out
lods
into
dec
enter
enter
ds
jae
mov
ret
sub
push
lock
fldenv
bound
xchg
mov
cmp
adc
sbb
fmuls
add
sub
js
jl
adc
sarb
pop
fdivl
jl
lds
imul
movb
jnp
jl
sbb
jg
mov
call
add
push
cld
push
jecxz
aaa
jmp
xchg
cltd
nop
mov
sub
cmc
iret
jns
jo
imul
or
and
les
adc
icebp
sahf
mov
push
movsb
cli
daa
pop
test
insl
jp
loop
mov
xchg
inc
sub
adc
aaa
mov
inc
repnz
cmp
mov
sub
call
sarb
mov
inc
push
cwtl
out
push
call
fisttpll
jne
cmc
xor
sub
call
mov
jne
ret
mov
pop
pop
xor
shlb
jb
cs
jns
insl
mov
mov
mov
lea
mov
inc
pop
mov
cmp
outsl
fidivs
mov
xor
cwtl
imul
hlt
xor
out
pop
mov
sub
ljmp
xchg
cli
in
test
xor
mov
cli
inc
repz
loop
inc
scas
pop
jle
dec
cmp
sti
repnz
lds
pop
icebp
jg
and
into
inc
pop
pushf
popa
arpl
mov
push
xor
cmpsl
and
les
dec
jo
je
mov
into
dec
stos
aam
shr
jo
xchg
hlt
mov
push
cmp
mov
adc
dec
mov
or
cmp
das
and
out
scas
out
inc
xchg
jg
cwtl
lret
jno
or
mov
and
xchg
add
xchg
or
xchg
push
das
push
flds
ss
hlt
fcmovnu
test
adc
push
mov
aaa
cmp
jns
aas
jle
lock
and
cmp
fmull
mov
xor
sbb
inc
cwtl
pop
push
lock
inc
xor
inc
mov
mov
push
fimuls
stos
jbe
fsubrl
scas
jmp
adc
add
mov
popa
add
jle
call
insb
adc
je
mov
and
push
repz
ljmp
sbb
cmp
sbbl
jo
pop
jno
popa
xchg
push
out
adc
jmp
pop
pop
js
mov
cmp
mul
ja
xor
je
out
js
jno
mov
lock
sarl
dec
mov
out
test
jmp
ljmp
inc
push
xor
fisttpl
push
popa
inc
sub
or
xor
mov
adc
pop
adc
push
xchg
pop
lea
nop
loope
cmpsb
xchg
mov
push
and
jnp
mov
testb
stos
jp
pop
jge
cmp
loop
out
andl
inc
push
push
cmpb
repz
aaa
repz
stos
lret
mov
in
orl
sub
mov
aam
cmc
fldcw
ljmp
ja
xchg
sbb
nop
adc
push
iret
loopne
push
mov
movsb
dec
insb
stc
adc
pushf
insb
pop
xor
enter
sarb
pop
in
bound
jp
aad
adc
ret
jnp
out
stc
cmp
dec
add
pop
add
sub
mov
xchg
enter
pop
pusha
aam
or
scas
insl
call
sbbb
mov
xlat
ss
ljmp
ud2
adc
xchg
push
out
dec
sub
scas
push
cld
cs
scas
adc
sbb
sbb
shrl
push
add
xor
pushf
push
aas
xchg
adc
cmc
xchg
sub
or
imul
ret
xor
mov
xchg
sbb
es
inc
imul
adcb
jl
or
xchg
push
push
adc
jl
mov
pop
fnstsw
push
push
test
jae
leave
in
mov
loop
adc
ljmp
enter
mov
ljmp
inc
ret
add
mov
hlt
sbb
lock
inc
mov
mov
in
inc
pop
fimull
or
enter
push
je
pop
jge
push
jle
imul
lods
mov
or
call
sub
cmp
and
or
dec
pop
sbb
jmp
xor
mov
imul
movsb
int3
mov
xor
mov
sbb
mov
adc
cmp
push
es
loopne
pop
cmp
xor
loop
jle
lds
jle
jp
int
pop
mov
ret
ret
pop
pop
pop
cli
fs
cmp
mov
jbe
dec
mov
xor
lret
jbe
shll
xor
scas
fstpt
fsubrl
xor
cwtl
sbb
mov
mov
adc
inc
or
bound
bound
pop
mov
inc
loop
pop
sbb
fwait
je
pop
pop
or
stc
jb
out
or
adc
pop
mov
jnp
sbb
cmpsl
mov
jb
cmp
rcll
lods
sahf
or
outsb
add
dec
movsb
scas
out
mov
xchg
xchg
test
add
ret
cmpsl
fwait
adc
xchg
ljmp
repz
in
movsl
cmp
pop
jge
shlb
mov
test
out
xchg
xorb
mov
movd
enter
outsl
test
test
sub
pop
cmpsb
pop
popf
les
xchg
fcmovnu
sub
xchg
mov
lss
mov
inc
or
adc
pop
push
insb
out
sub
sbb
push
or
push
data16
pop
push
loope
loop
inc
jno
xor
push
shl
sbb
jecxz
mov
pop
aas
addr16
inc
imul
mov
lods
adc
out
pop
into
xchg
xchg
mov
in
xlat
sub
xchg
cmpsl
xchg
int3
pusha
ljmp
ret
fmuls
iret
out
xlat
adc
shlb
int3
pushf
leave
movsl
mov
sub
and
xchg
mov
mov
mul
add
arpl
mov
mov
mov
push
rcrl
outsb
call
push
push
in
adc
in
jnp
idivl
clc
stos
rclb
insb
in
test
sbb
test
test
enter
in
add
js
aam
in
test
push
dec
les
ljmp
imul
int3
out
mov
xchg
adc
or
jmp
int3
cmc
push
xor
movb
notb
ds
or
daa
jmp
jp
dec
lret
fstps
pop
fsubrl
pop
inc
gs
stc
pusha
mov
xchg
fs
popa
enter
mov
aaa
jne
push
cmpsb
or
or
dec
sarl
xchg
jo
jmp
repz
jge
mov
xchg
roll
or
lahf
lods
mov
sbb
lcall
add
cmpsb
xchg
xchg
push
out
jle
or
inc
js
mov
imul
les
pop
inc
push
test
sbb
push
pop
cmpsl
jge
hlt
icebp
xor
cltd
xchg
sbb
inc
sub
jp
dec
mov
in
dec
pusha
cmp
daa
out
dec
xchg
pop
lods
adc
popa
mov
ljmp
xchg
xor
clc
mov
aaa
add
aas
add
test
inc
int3
push
mov
adc
fstl
adc
dec
das
xchg
push
sbb
adc
mov
dec
jns
jbe
shll
jle
shrl
cmpsb
arpl
movsl
fwait
lock
es
mov
add
and
aad
out
arpl
mov
sub
mov
push
dec
inc
or
push
mov
scas
inc
nop
mov
jns
sbb
or
aam
dec
push
in
sub
call
xor
stos
cmp
push
cld
push
cmp
fisubs
sahf
imul
push
ja
pop
cmp
ljmp
pop
jnp
gs
push
sahf
xor
mov
jno
fxch
sahf
pop
dec
ret
mov
cmp
jle
cmp
mov
pop
or
loope
lods
push
mov
addr16
cmp
jo
aad
sub
es
sub
fidivs
push
and
shrb
jmp
jo
cmp
enter
cmpb
repnz
add
out
insb
int3
and
pop
mov
dec
mov
cmp
add
dec
lock
out
jne
pusha
mov
insb
scas
decb
add
and
test
mov
jae
fwait
aam
and
mov
fisubs
mov
jno
mov
icebp
sarl
lret
adc
test
les
in
jo
sbb
aad
mov
push
outsb
pop
fld
scas
sarl
push
cld
roll
bswap
insl
push
aaa
and
mov
xor
jmp
sub
and
sarl
sti
pop
push
pop
js
mov
cmp
xchg
push
lahf
fwait
push
lcall
jns
lea
add
push
and
inc
adc
cmp
cld
dec
cltd
movsb
fnstcw
gs
frstor
lcall
pop
ror
mov
pop
lahf
or
or
aad
movsb
incl
outsb
orb
loop
jmp
mov
mov
mov
jno
xchg
cmp
js
and
aam
and
out
and
fsts
xor
jl
data16
mov
cmp
fdivrl
aaa
lahf
insl
add
in
enter
sbb
out
sub
ja
inc
xor
cli
dec
pushf
xor
push
push
dec
inc
lea
lret
cmp
or
out
add
or
adc
pop
movsl
xor
int
loopne
add
inc
dec
stc
pop
fisubl
xchg
movsb
or
and
ja
sbb
push
jl
das
push
add
loopne
inc
jmp
adc
xchg
or
mov
lret
push
inc
and
test
imul
cmpsl
mov
lea
push
mov
lahf
shll
mov
in
push
ss
js
dec
xlat
sbb
dec
lods
push
pop
pop
add
cmp
cmp
aam
pop
mov
mov
mov
in
and
cmp
push
fisttpll
mov
cltd
push
aas
ds
add
insb
gs
push
mov
jp
es
fadds
fiadds
lods
add
mov
jl
and
iret
mov
dec
and
pushf
mov
lods
sbb
leave
call
add
data16
mov
sub
sbbb
sub
lods
call
enter
fcoms
fists
clc
xchg
xor
shrb
movsl
jnp
outsb
push
loop
cltd
push
shr
insl
pop
mov
ret
and
push
les
mov
shlb
stos
xchg
add
pop
push
push
sub
out
xlat
clc
add
mov
inc
lcall
ljmp
add
jae
ds
add
cmp
outsl
and
test
loopne
loop
test
xchg
scas
in
inc
pop
in
add
decl
push
and
mov
rorl
mov
aas
pop
mov
push
pop
xchg
lds
movzbl
rcr
pop
test
imul
inc
lock
dec
cwtl
xchg
fistpll
push
cmp
jbe
fimuls
jne
mov
add
repnz
adc
inc
inc
insb
pop
mov
mov
outsl
stos
xor
mov
push
iret
prefetchw
mov
adc
das
push
inc
in
jne
stos
bound
dec
roll
cmp
pop
add
test
or
js
mov
adc
mov
sub
cld
ja
popf
sub
mov
inc
es
imul
int
call
movsl
cmp
and
cmp
push
lods
cmc
fmulp
push
lret
add
add
iret
repz
and
es
sbb
call
repnz
mov
das
push
dec
jmp
push
stc
sbb
into
or
outsb
pop
pop
cmp
out
jne
adc
decb
faddl
popa
jle
sbbl
icebp
push
cli
adc
add
iret
or
jl
pop
jp
pop
lock
xchg
lock
or
movsb
inc
mov
cmp
mov
int
inc
sub
ret
dec
enter
lret
in
jmp
xchg
aas
cs
enter
pop
test
aad
inc
repnz
xor
std
ljmp
pcmpgtb
cmp
mov
jp
je
cmc
subb
and
pusha
xchg
xchg
add
stos
out
jb
pop
pop
cmp
push
rclb
jecxz
mov
and
cltd
pop
sub
dec
push
mov
pop
shlb
mov
aad
ret
lcall
loopne
sbb
imul
add
cmp
lret
pop
gs
mov
push
ds
lods
dec
mov
test
sub
gs
lret
pop
sahf
pop
leave
cld
dec
rcll
pop
aam
add
or
in
jmp
ret
aam
pop
sahf
lea
push
push
lea
push
or
inc
pop
testb
jb
jecxz
sahf
and
xchg
mov
movsb
cmp
icebp
nop
lret
adc
push
mov
js
aas
out
xor
mov
leave
jno
inc
mov
xchg
inc
cmp
ret
flds
xor
dec
cmp
in
std
mov
je
mov
cmp
xlat
fldl
test
xchg
jmp
mov
inc
fiadds
call
adc
xchg
xor
stc
scas
test
jecxz
mov
in
movsb
aam
cmp
jge
outsl
invd
es
dec
sbb
enter
xchg
mov
out
cmp
je
xchg
sub
sub
push
sbb
je
iret
nop
pop
sarb
mov
std
xchg
das
pop
sub
imul
or
dec
movsl
jp
iret
call
rcl
mov
pop
jb
mov
ret
scas
cwtl
lea
sub
and
xor
sub
or
cmp
dec
sbb
sti
loopne
fdivr
ret
xchg
movsb
popf
sarb
arpl
add
into
subb
lods
test
aas
fcomps
addl
xorb
push
mov
inc
lret
pop
or
jp
xchg
jne
repz
pop
das
push
sbb
int
inc
int
add
popf
mov
mov
mov
mov
xlat
fcmovnu
mov
xchg
jl
iret
ja
cvtdq2ps
ret
repz
out
add
aad
inc
jl
les
outsb
ret
xor
je
push
pop
xchg
gs
cmp
mov
push
aas
lock
fucom
push
xor
add
enter
lret
mov
outsb
jae
and
and
inc
xor
cltd
es
int
sbb
cmp
mov
jg
cli
push
mov
mov
shl
xor
je
test
stos
jne
lea
mov
xchg
js
xchg
mov
mov
iret
mov
cmp
sbb
cwtl
and
andl
mov
leave
hlt
sti
jl
test
fs
popa
pop
in
add
push
inc
insl
clc
xor
pop
pusha
movsb
and
or
mov
mov
stos
lods
cwtl
daa
insb
dec
jno
scas
sti
xchg
gs
jge
cmp
es
data16
cmpsb
out
inc
mov
test
in
adc
xor
or
jno
xor
aad
es
int
add
push
loop
jle
cmpsb
push
add
fisttpl
imul
add
jno
dec
dec
popf
pop
inc
lret
mov
sub
jg
lret
xchg
js
xor
mov
sbb
fmuls
adc
mov
lods
int
cltd
ficomps
ljmp
xchg
dec
clc
push
jae
lods
inc
dec
cmpsb
mov
out
jp
or
jle
lds
cmp
jo
bound
shlb
daa
movsb
add
push
and
push
inc
mov
mov
lods
shlb
adc
aaa
daa
mov
pop
dec
and
repnz
neg
pop
dec
lock
mov
sbbb
lods
fdivrs
lds
cwtl
enter
fdivl
cld
pop
mul
sbb
xchg
push
popf
test
call
push
fbld
shll
adc
enter
addr16
sbb
mov
push
fldl
test
dec
sub
jae
repz
fwait
popf
push
sbb
add
push
pop
bound
lods
in
scas
outsb
jecxz
ljmp
push
xchg
add
test
add
adc
stos
or
push
or
mov
push
lods
jl
sub
fsubrl
add
adc
out
and
fdivrl
stos
nop
inc
jmp
mov
push
xor
xchg
fistpl
xchg
mov
sub
lahf
or
into
clc
and
xchg
orb
dec
xchg
fimuls
dec
sarl
dec
scas
dec
loope
hlt
and
cmpsl
push
pop
lds
jno
test
jp
push
cmp
psllw
xchg
ror
xor
idivl
outsl
out
push
mov
mov
call
test
or
bndstx
movsb
shlb
push
xchg
push
mov
fidivl
inc
ret
ja
jnp
xchg
jbe
push
xor
in
xchg
mov
fwait
xchg
inc
mov
xchg
mov
ret
dec
pop
sbb
or
mov
xchg
insb
and
cmpsl
fmull
dec
cmpb
cmp
mov
cmp
ja
xor
or
push
dec
lahf
push
xor
mov
mov
cmp
repnz
stc
push
sbb
in
adc
mov
stos
movsl
imul
lret
pusha
xor
ss
ds
pop
cli
call
xchg
clc
int3
aas
push
aas
std
and
jl
jge
add
imul
jo
pop
lahf
jp
pop
sbb
jp
dec
repz
movsl
ret
mov
jge
push
xchg
cmp
adc
xor
xor
jb
add
rol
xor
adc
or
lods
sbb
add
repnz
jno
mov
sbb
test
add
dec
mov
ljmp
pop
cmp
imul
sbb
mov
ds
sbb
mov
leave
insl
adc
mov
popa
orl
add
dec
lea
popf
jb
test
jg
insb
pop
nop
fnstsw
sbb
jne
and
cwtl
mov
sub
outsl
sbb
push
in
dec
stos
push
mov
das
fstpl
and
inc
adc
and
cltd
ret
int
xor
decl
xchg
sbb
xchg
and
cmpsb
xchg
pop
mov
push
mov
cmpsb
test
dec
into
push
adc
arpl
cmp
in
and
rclb
scas
lcall
cmpsb
pop
out
mov
loope
mov
add
pop
xchg
hlt
xlat
lods
xor
aad
jecxz
sub
ljmp
mov
ja
dec
es
mov
mov
aaa
ret
dec
mov
pop
xchg
dec
out
les
cmp
dec
cmpb
inc
mov
clc
mov
mov
insl
dec
dec
shll
and
push
mov
mov
jp
mov
sub
jp
push
fldenv
xchg
push
gs
sbb
push
add
mov
test
test
pop
cmp
lods
ret
shll
popa
scas
or
xchg
aad
mov
insb
ss
cmp
int
inc
std
add
pop
mov
inc
lods
push
int3
in
xchg
and
cmp
cs
sahf
andl
enter
scas
mov
cmp
cltd
dec
fucomp
pop
xor
sar
xchg
in
and
addr16
and
jae
push
dec
push
test
adc
or
mov
sbb
cmc
cmpsl
xlat
xlat
dec
vpavgb
aad
pop
push
ja
aaa
arpl
clc
cmp
in
insb
xrelease
cmp
scas
xchg
outsl
xchg
jle
jle
movsl
sbb
xchg
xor
inc
dec
andl
push
jns
jp
push
into
jne
push
fstpl
and
add
mov
mov
in
mov
mov
dec
clc
add
lea
das
incb
xchg
aaa
pop
dec
sub
cmp
push
scas
jo
icebp
add
mov
pop
xlat
mov
arpl
add
or
or
pop
gs
mov
dec
xchg
push
dec
bound
or
pop
mov
jb
test
lea
jns
sbb
mov
jnp
dec
fdivrl
addb
add
rorb
loope
outsb
cmp
pop
js
mov
push
add
insl
mov
call
insl
jp
xchg
insb
sub
ja
into
or
xchg
cmp
adcl
dec
push
jge
or
cmpsl
or
cmp
insb
enter
adc
and
sbb
pushf
cmpsb
inc
clc
mov
mov
push
xor
arpl
jno
dec
xchg
lcall
cmpsb
cs
dec
xor
pop
bound
aad
insb
movsl
xchg
pop
bound
push
es
sub
ret
insl
notb
mov
xchg
or
sbb
sahf
push
clc
stos
mov
int
adc
xor
cmp
daa
or
imul
shlb
icebp
push
mov
push
aam
push
fwait
insl
jns
sbb
addb
and
rorl
insl
mov
push
gs
push
aad
daa
pop
sahf
mov
mov
mov
cmc
cmp
cmp
icebp
test
mov
xchg
pop
fidivrs
and
mov
scas
outsl
jg
pop
mov
add
mov
sbb
clc
and
bound
bound
pop
sub
cmpb
lret
or
xchg
insl
mov
and
pop
out
lods
frstor
cmpsl
mov
cwtl
int
jno
and
sub
and
aaa
jno
cmpsb
pop
pop
test
inc
aad
add
pop
icebp
je
stos
push
aaa
sti
insb
jnp
out
add
rcrl
jns
cmp
out
mov
insb
lret
push
scas
jae
and
lahf
adc
adc
daa
leave
cmc
insb
mov
push
daa
xor
pop
and
mov
cmp
aaa
lock
call
mov
fadd
push
pop
inc
call
das
cmp
in
dec
imulb
enter
cmp
push
mov
mov
fprem1
dec
clc
sub
jns
mov
nop
dec
repnz
sbb
mov
inc
mov
sbb
pushf
add
lret
mov
movsb
inc
daa
out
mov
mov
pop
xchg
jae
ljmp
sbb
lcall
mov
mov
cli
push
push
jmp
dec
shlb
pop
fsubrs
test
fbstp
adc
jge
out
enter
in
ja
mov
je
roll
ret
subb
mov
mov
cli
pop
dec
roll
movsl
cmpsb
loop
xor
push
negb
aad
xchg
xchg
push
inc
cmp
cs
in
push
add
xlat
mov
mov
or
in
jns
sbb
pop
aaa
push
sub
pop
es
mov
xchg
pop
mov
pop
hlt
mov
jle
vxorps
stos
mov
mov
dec
lret
ja
adc
in
mov
cs
sub
mov
fdivl
mov
loop
out
and
mov
es
mov
out
scas
jae
or
scas
into
jns
mov
scas
xor
add
stos
push
xchg
dec
adc
pop
fwait
inc
mov
adc
test
out
and
fwait
sbb
mov
fnstenv
pop
mov
sbb
mov
adcb
add
cmp
pop
repz
sti
aad
ja
rol
jp
or
xor
aaa
aaa
cmp
or
scas
jge
ds
lock
aaa
sub
daa
cmp
lea
inc
push
iret
or
mov
or
inc
mov
insb
cld
pop
mov
mov
fisttpll
fstl
mov
loop
lods
aaa
popa
jmp
jnp
xchg
jae
sbb
inc
lock
sbb
sbb
or
mov
addl
mov
sub
rep
xor
out
decb
nop
xor
js
gs
fdiv
in
and
outsb
jo
cli
js
mov
hlt
std
jecxz
xchg
negl
push
jb
repnz
lock
lds
mov
leave
pushf
inc
xchg
nop
xchg
pop
pslld
aas
adc
mov
fsts
inc
das
mov
imul
ljmp
out
mov
fcmovnbe
cmp
icebp
mov
pop
out
test
bound
add
add
hlt
add
pop
les
ljmp
cmp
rcll
mov
and
mov
aam
stos
test
cmc
dec
inc
clc
mov
test
push
in
dec
icebp
popf
inc
add
out
sbbb
sub
lods
mov
push
and
sahf
cmpl
in
negb
sbb
ljmp
loop
xor
aad
lock
out
and
dec
pop
dec
sub
mov
rclb
adc
mov
inc
and
cmp
sub
dec
std
jmp
mov
mov
stos
xchg
pop
adcl
jmp
hlt
lods
icebp
lods
cmp
addr16
add
push
les
dec
jbe
push
push
nop
lea
cmp
dec
inc
repnz
clc
int3
sub
mov
lret
out
mov
call
dec
test
inc
or
sub
test
cmp
cmpsb
xchg
push
jp
rolb
pextrw
cs
js
jge
cltd
iret
lock
lock
inc
stos
popf
lret
in
nop
mov
adc
imul
sbb
mov
loopne
or
sbb
ret
mov
pop
cmpsl
stc
cmp
and
stos
movsb
and
out
insl
fstl
lea
add
pop
cwtl
pop
popf
mov
idiv
add
es
ret
ret
out
lret
sub
repz
mov
mov
jo
mov
leave
lods
mov
inc
lds
addr16
test
pusha
out
sub
xchg
fimuls
inc
dec
push
mull
sbb
imul
ss
cltd
cmpsl
hlt
lcall
enter
push
das
mov
xchg
add
loopne
jecxz
ds
stc
sbb
fdivs
add
xor
mov
mov
sub
xchg
push
lods
pop
ret
in
mov
mov
dec
loope
bound
mov
dec
and
cmp
mov
cmp
inc
sarb
int3
dec
cmc
jne
inc
dec
ds
sarb
pop
aas
pop
xor
push
mov
dec
dec
imul
mov
xchg
in
aad
orb
out
ret
xchg
fwait
xchg
jne
sub
cs
add
shl
sub
insb
push
addb
subb
xchg
lret
sub
loop
loope
shlb
or
xor
lods
in
clc
mov
cltd
pop
inc
ja
cmp
cmp
mov
dec
mov
in
inc
shll
insb
xchg
loopne
mov
je
mov
cmp
ljmp
pop
mov
repnz
inc
vandps
pop
sbb
push
mov
jne
cmp
ljmp
jne
inc
mov
xlat
xchg
cmc
addr16
mov
jp
xchg
jge
jne
sti
xchg
imul
add
push
cmc
xchg
out
push
push
or
leave
cwtl
lea
lods
lods
sbb
lahf
push
mov
mov
lret
mov
cmpsb
dec
sbb
ret
dec
repnz
cwtl
test
enter
inc
xlat
mov
push
inc
xor
dec
xchg
push
aad
out
sub
mov
jle
mov
es
or
xor
into
incl
mov
cli
inc
lods
loopne
imul
in
outsb
cli
fdivl
roll
clc
mov
outsb
jno
pusha
jge
ljmp
sbbl
rcl
or
mov
lock
pop
js
hlt
jb
enter
lcall
sahf
mov
cmp
in
loopne
sbb
lds
mov
push
and
gs
pushf
jne
imul
sbb
dec
scas
mov
xor
out
int3
out
mov
add
scas
lcall
sub
clc
pop
repz
xor
mov
in
ljmp
int
lahf
addr16
int
frstor
je
jae
dec
cli
and
mov
filds
stos
je
sbb
cs
icebp
shrl
cmp
cmp
mov
aam
int
push
push
fldcw
fisubrs
mov
and
cmpsl
aad
add
adc
pop
dec
add
xchg
out
pop
dec
cmpsb
out
sub
sbb
das
nop
ret
dec
mov
adc
xor
xchg
fcmovu
sub
and
sti
sbb
leave
dec
pop
push
cs
andl
pusha
xor
ds
orb
xor
sbb
pop
movsl
icebp
test
in
push
in
mov
loope
xor
pop
xchg
sbb
sbb
mov
push
dec
call
cs
xor
jl
das
pusha
scas
aas
sbb
out
mov
ds
je
sbb
sti
sbb
cld
testl
shll
lock
or
imul
jle
enter
xchg
pop
cmp
aas
xchg
scas
push
jbe
cmp
sbb
shlb
add
xchg
movsl
and
insb
leave
iret
cmp
ss
mov
xchg
lds
sub
cltd
xchg
mull
and
push
ja
jno
fcmovne
sub
out
data16
insb
lret
xor
xchg
dec
add
and
mov
cwtl
lods
mov
mov
push
adc
push
scas
pop
rorb
ret
mov
sbb
cmp
imul
and
dec
pop
cld
popa
xor
mov
push
cmp
jl
sbb
mov
js
jbe
xchg
pop
movsb
jae
sbb
cmp
pusha
in
call
jp
divb
and
hlt
clc
stos
jmp
fstpl
movl
mov
pop
jg
cwtl
cmp
leave
xor
add
aad
in
stos
adc
lret
mov
lock
cmp
jnp
jns
sbb
jo
pop
aam
inc
cmp
mov
scas
lret
test
jo
jp
lods
xchg
mov
mov
stos
sub
inc
xchg
cmp
insl
mov
sub
shlb
mov
cs
int3
test
scas
jb
popa
push
jno
mov
xchg
popa
push
mov
in
sbb
add
dec
dec
fidivl
pop
sbb
pop
sbb
pop
adc
add
push
dec
out
imul
inc
mov
xor
fisubrl
xlat
push
int
sbb
mov
fisttpll
call
cltd
or
xchg
fisubrs
fidivrl
ficomps
mov
in
push
xor
pop
js
aas
std
lcall
mov
outsl
les
dec
enter
mov
shrl
sahf
int
loope
sahf
mov
std
or
rorl
push
sahf
inc
xchg
jge
pop
inc
lods
mov
dec
jecxz
xor
mov
in
dec
sub
jmp
or
pushf
in
or
add
add
scas
loope
inc
xlat
shlb
xchg
in
dec
jbe
fistpl
pop
pop
outsb
cltd
pop
mov
aad
xchg
mov
jns
add
add
insl
xor
ja
hlt
xchg
popa
push
clc
xor
add
sbb
mov
or
pop
fbstp
jnp
mov
push
adc
insl
cmp
imul
sbb
jbe
mov
cli
pop
sbb
in
sahf
xchg
pop
sub
or
and
popa
add
call
push
ficomps
call
xor
adc
mov
pop
xorb
push
jecxz
aaa
sbb
inc
and
pop
mov
shrl
loopne
inc
leave
push
cmp
cld
lock
in
shl
in
cmpsb
daa
nop
es
mov
aaa
lcall
and
in
jno
lea
mov
xor
jmp
lock
popa
sbb
imul
mov
sbb
mov
or
and
sbb
icebp
sbb
pop
mov
push
nop
loop
cltd
xchg
cltd
int3
mov
push
cmp
sbb
cmpsl
pop
jbe
lret
ret
adc
loopne
xchg
aas
les
or
in
stc
cmp
out
leave
es
lock
fildll
sbb
bsr
inc
popa
or
mov
mov
mov
dec
add
sub
sbb
dec
mov
or
stos
dec
and
arpl
addr16
adc
mov
cmpsb
or
cs
into
lea
xor
sbb
cmp
ljmp
mov
std
lahf
iret
or
imul
lcall
dec
mov
sub
pop
jb
jecxz
test
xchg
test
or
icebp
jecxz
sub
mov
nop
pop
inc
sub
pusha
repz
jns
xor
dec
jl
insl
imul
cmpb
dec
pop
and
fcomip
stos
mov
jb
mov
add
sub
dec
pop
lods
push
push
shlb
adc
sbb
popf
xchg
popa
arpl
cmp
stc
std
pop
xchg
xchg
mov
push
insb
les
push
lcall
xchg
movsl
dec
jb
outsb
sbb
cmp
inc
loop
movsl
push
xlat
fimull
lahf
loopne
adcl
dec
inc
xchg
xchg
xor
push
aad
cld
call
dec
push
push
mov
mov
les
push
jecxz
adc
jmp
xor
shrl
clc
xlat
lret
sbb
adc
sub
cmp
in
lds
fbld
cmpsb
lods
insb
jl
xor
hlt
sub
push
sbb
xchg
jae
xchg
xlat
pushf
in
cmp
mov
lock
aaa
jo
sbb
out
icebp
or
push
sar
notl
call
subb
pop
jb
scas
push
jne
sub
jb
cmp
std
adc
jle
push
pop
adc
mov
repz
xor
loope
dec
fwait
imul
lcall
pop
adc
push
fs
push
pop
outsb
insl
popf
mov
ljmp
xchg
mov
mov
pushf
pusha
mov
insb
pop
dec
sub
mov
xchg
mov
lcall
movsl
rcrl
sub
dec
ljmp
mov
int3
jp
mull
xor
add
scas
sub
mov
and
mov
mov
push
jmp
arpl
cs
ljmp
lahf
clc
cld
xchg
daa
jnp
xchg
or
mov
push
push
mov
sti
repnz
lea
loopne
addr16
scas
jmp
nop
std
mov
jmp
sub
xor
out
pop
cltd
lds
sarb
cmp
fsubr
and
ret
sbb
pop
mov
arpl
xchg
pop
sbb
sbb
in
jno
lcall
jb
inc
xchg
xchg
andl
js
icebp
jnp
out
test
out
test
xor
cltd
aad
in
mov
cmc
into
xchg
repnz
adc
cmovs
and
mov
dec
cmp
repnz
fdivl
mov
sub
sbb
push
mov
xor
pop
shlb
in
inc
fmull
xchg
pop
outsb
add
adc
inc
ljmp
xchg
jg
popf
lret
jae
pop
addb
jp
outsl
push
inc
xchg
outsl
add
and
mov
mov
cwtl
push
jl
roll
stos
push
cmp
mov
icebp
icebp
mov
lahf
sub
mov
push
fidivs
push
push
aas
sub
adc
fmull
pop
sbb
inc
mov
jne
pop
sub
mov
in
fwait
mov
in
mov
adc
and
loope
mov
lock
cli
xchg
dec
sbbl
lret
lret
lds
sti
mov
test
mov
rcrl
or
lods
lock
jmp
loop
shll
pop
push
in
xor
loope
arpl
xchg
push
xor
mov
sub
push
loop
add
lcall
pop
mov
repz
jo
ret
arpl
xchg
pop
push
push
subb
push
out
dec
sbb
sbb
and
adc
shll
shll
ret
cmpsl
fs
cmc
std
mov
push
mov
push
push
sti
scas
aaa
adc
add
pop
or
xchg
fcmovnbe
mov
xor
aaa
sub
pop
jg
pushf
fsub
xchg
push
xchg
xor
fistpll
stos
and
fldcw
pop
rorb
jle
jb
xchg
sbb
or
pop
fidivs
ja
aam
cmpl
xchg
scas
stos
xor
dec
jne
stos
aad
in
and
cmpsl
pop
daa
jl
inc
sub
in
xor
inc
pop
lea
movsl
fmul
fadds
js
xchg
push
psrad
adc
iret
xor
mov
orb
mov
fs
out
xchg
lret
out
aas
jp
or
mov
lock
add
sub
xorl
popf
lret
bound
jp
fildll
incl
mov
jae
mov
ljmp
mov
pop
popa
imul
movsb
pop
push
lds
stc
cs
pop
cltd
loop,pn
xor
pop
shl
sbb
push
icebp
incl
xchg
ljmp
dec
jmp
pop
insl
and
sbb
nop
and
pusha
pop
ds
test
clc
adc
mov
or
arpl
in
jns
mov
inc
inc
dec
add
sbb
lcall
push
push
enter
add
test
jno
push
sti
or
jne
mov
repz
dec
cmp
enter
aaa
jb
sub
adc
dec
les
lahf
cmpb
pop
mov
lcall
rolb
jl
jle
pop
jmp
mov
jl
cmc
mov
in
xchg
stos
xchg
insb
jnp
jb
cmp
cmp
xchg
in
sbb
iret
cmpsl
vprotw
and
loop
and
xchg
or
pop
mov
mov
mov
mov
call
imul
jp
xor
push
pop
jno
pop
add
mov
stos
pop
jmp
mov
enter
jns
popf
inc
outsl
mov
mov
adc
push
enter
mov
pop
mov
mov
pop
adc
push
adc
test
push
cltd
popa
push
cld
push
mov
mov
addb
aad
insl
nop
mov
xchg
xchg
js
notb
mov
rclb
jmp
cmpsb
or
insb
add
daa
test
ja
cmpsb
mov
jle
sahf
arpl
or
and
call
push
idivb
shlb
jbe
rclb
jl
cmp
fdivrl
int
cmp
push
adc
ljmp
ja
aaa
or
jmp
scas
mov
jnp
push
push
mov
cli
cmp
imul
or
or
jb
fldt
mov
pop
in
inc
mov
push
ret
mov
pop
jmp
gs
xchg
sbb
and
scas
mov
jmp
mov
cltd
push
push
push
pop
add
pop
and
jg
push
cmpsb
int
mov
mov
adc
cmovb
lods
testl
dec
xor
sub
clc
repnz
call
ret
mov
jne
sub
mov
sbb
cmp
mov
pop
inc
xchg
push
test
xor
adc
roll
lahf
or
stos
dec
test
xchg
idivl
jmp
rcl
pusha
rolb
loopne
es
shrl
daa
pusha
inc
inc
cmc
ds
fcomps
push
shlb
jno
xor
clc
mov
pop
cmpsl
mov
xchg
mov
mov
aas
add
mov
push
ret
sbb
subl
jne
inc
dec
in
lahf
push
aam
jl
add
lock
add
add
xor
add
push
jnp
and
ja
movl
into
xor
mov
add
rcl
ret
decl
loop
icebp
rep
adc
lds
mov
mov
add
or
test
adc
insl
xchg
insb
mov
pop
xlat
je
out
imul
cmpsb
pop
push
aas
cwtl
enter
jo
mov
pushf
cmp
mov
mov
push
adc
push
out
hlt
mov
cmp
cmp
imul
jne
lret
push
xor
je
ja
hlt
mov
cmp
pop
mov
xchg
mov
dec
xchg
and
jnp
shlb
ret
mov
adc
in
cmp
adc
les
xor
inc
outsl
call
inc
fs
fdiv
movswl
insl
pop
sbb
or
adc
inc
inc
data16
mov
fs
push
xchg
add
test
or
pop
mov
sahf
sbb
adc
stos
leave
into
or
jg
cmp
ficomps
pop
enter
inc
fwait
inc
ret
jno
ds
daa
ret
test
lahf
rcrb
mov
sbb
daa
stos
inc
imul
jb
xlat
sbb
pop
cmp
sbb
push
add
inc
or
ss
push
fisttps
jae
sub
jo
loop
push
ss
dec
mov
into
cmpsb
into
jo
stos
out
sahf
add
sahf
xchg
test
cmp
inc
jae
add
cmpsl
push
xchg
popa
iret
adc
dec
aaa
roll
ljmp
xlat
in
sub
xchg
xorb
add
dec
jmp
repnz
loope
push
xchg
and
push
push
je
pop
fcompl
inc
outsb
ds
mov
paddb
outsl
inc
in
dec
sub
mov
push
loop
jle
xor
insl
pop
js
cmp
iret
lea
sub
loop
xchg
into
inc
lcall
xor
test
out
pop
jp
mov
je
out
and
jecxz
in
pop
and
mov
xor
pop
xor
fwait
inc
stos
pop
rorl
js
pop
es
sahf
addr16
push
pop
inc
jge
xlat
mov
mulb
aam
mov
leave
pcmpeqb
mov
sub
es
ljmp
jbe
es
dec
xorb
rorl
rorb
and
or
inc
notl
pop
das
inc
fwait
enter
and
insb
jae
pop
jmp
fstpt
scas
ja
hlt
jmp
addl
xchg
adc
mov
sbb
xor
inc
jg
mov
sbb
jmp
arpl
loopne
mov
mov
scas
test
lret
scas
mov
movsb
decl
add
inc
pop
mov
pusha
cmp
lret
jp
cmp
jl
loope
out
dec
xchg
dec
push
dec
mov
pop
out
and
mov
movsl
xchg
arpl
xchg
jecxz
imul
push
cmp
fldt
js
scas
xchg
push
insb
pop
and
das
adc
in
pop
lret
pop
push
or
push
orb
cmp
mov
pop
cmp
jecxz
repnz
cmpsl
shr
mov
cmpsb
add
aaa
out
rorl
sbb
cli
xchg
je
lods
mov
jg
xor
fwait
sbb
das
ljmp
push
repnz
out
jo
inc
push
xor
int3
lock
mov
or
stos
lods
sub
mov
dec
subl
outsb
fistpll
lock
mov
lods
popf
in
add
mov
fwait
pop
stc
push
lret
loop
cmp
arpl
pop
out
dec
ja
add
cli
js
imul
xor
imul
pop
jnp
into
pop
das
cld
shlb
lahf
imul
arpl
sti
sti
jnp
mov
jb
sub
or
fwait
jae
dec
sahf
xor
movsl
lcall
or
ljmp
into
lahf
jg
int
mov
or
fnstcw
bound
cmpsb
shrb
sub
pop
sub
jle
imul
sti
pop
mov
jb
mov
and
movb
movsb
shrb
sub
mov
cmp
xorb
inc
jmp
xchg
int3
andb
sub
sbb
jne
mov
inc
mov
cmpl
loop
popa
movsl
xlat
andb
mov
lcall
sub
sub
push
adc
adc
lret
add
repnz
mov
jmp
push
mul
std
or
test
jb
sti
shrb
lret
testl
in
and
and
inc
jle
cmp
dec
test
ret
xor
mov
jp
lock
into
cmp
test
fldt
jns
out
mov
repz
stos
sarl
sahf
dec
lea
int
sub
xor
adc
sbb
cmp
jge
jp
mov
mov
mov
jb
xchg
test
scas
push
aas
mov
ljmp
ja
fsubl
sub
mov
xor
hlt
mov
inc
jbe
or
dec
lock
adc
and
lds
jb
pop
in
into
push
cmp
andb
inc
test
jge
push
lds
fwait
inc
loope
hlt
or
push
das
or
int3
xor
mov
fbld
xor
push
pop
movsl
fxch
sub
push
sub
stc
push
popf
in
in
mov
movsb
bound
repz
enter
push
jmp
ficomps
xor
cmpsl
ror
loopne
add
xchg
pop
push
aas
push
sub
daa
repnz
scas
icebp
call
and
inc
test
jne
loope
adc
fildll
jae
adc
jmp
mov
lods
sbb
fcmovnbe
dec
mov
fstl
je
mov
cmpsl
mov
add
push
cmpsl
call
insl
or
pop
jp
mov
dec
jns
bound
or
insl
lea
icebp
mulb
lea
test
dec
pop
sahf
rcrl
mov
xor
cmp
stc
sbb
xchg
adcl
negl
pop
cmpsl
push
mov
and
fbld
cmp
stos
and
loop
mov
fistpll
jl
mov
imul
icebp
xchg
or
aaa
in
mov
imul
outsb
dec
sbb
dec
dec
dec
in
fisubrl
adc
or
icebp
mov
in
xor
cld
ds
stmxcsr
or
lods
outsl
and
leave
test
cmp
lret
stos
mulb
pop
jbe
out
cmpsb
push
repz
xchg
xor
test
or
pop
push
adc
and
in
ds
dec
push
insb
mov
mov
or
dec
inc
and
xlat
test
sub
pushf
xchg
pop
pusha
call
jne
mov
push
mov
clc
jmp
stos
cmp
into
sbbl
test
add
jg
xor
push
mov
cmp
arpl
in
sub
sub
push
insb
aaa
add
and
xor
arpl
lods
pusha
faddl
ljmp
mov
test
mov
cmpsb
xchg
jge
pop
scas
xor
pushf
call
stos
add
inc
pop
out
sti
jge
adc
insl
test
inc
pusha
push
icebp
jb
and
test
cmpsb
jne
add
les
mov
bound
push
outsb
add
xchg
adc
sti
pop
inc
adc
cltd
xchg
sub
push
lods
dec
out
popa
push
sarl
jb
jns
mov
shrb
icebp
push
mov
jbe
pop
cmc
flds
adc
mov
out
mov
scas
dec
mov
cltd
imull
fsubrs
pop
imul
loopne
addr16
ret
mov
insb
cli
aaa
cltd
inc
test
mov
xchg
inc
mov
mov
xor
and
addr16
cmp
mov
in
ss
lods
cmp
inc
shrl
fdivl
cmp
xchg
inc
in
aad
iret
inc
cmp
aas
mov
mov
mov
scas
test
push
cmp
and
inc
dec
or
mov
rcrl
mov
movsb
add
lds
call
lcall
fists
sub
inc
push
jle
std
sahf
adc
mov
jp
and
xchg
and
xchg
ret
arpl
or
jno
cmp
dec
roll
testb
leave
inc
inc
shl
icebp
test
mov
sub
cld
loop
dec
or
mov
inc
loop
movsl
mov
mov
mov
sbb
mov
xchg
sbb
cmc
or
push
icebp
or
cmp
fnstcw
sahf
add
mov
sub
shlb
int3
jbe
push
outsl
jl
and
dec
add
cld
add
pop
ss
or
xchg
es
sbb
aad
and
mov
push
repnz
pop
dec
jmp
scas
ja
leave
add
adc
mov
fbld
jecxz
mov
std
cld
imul
dec
sbb
mov
dec
out
mov
push
mov
je
in
std
scas
pop
mov
lcall
popa
pop
inc
mov
adc
mov
mov
or
pop
in
jmp
inc
push
adc
paddd
pop
loop
testl
repz
ret
push
ja
adc
lcall
inc
dec
imul
dec
mov
and
andps
xlat
jg
pop
xchg
in
jp
and
pop
leave
jns
testl
mov
and
cmp
aam
xchg
xlat
adc
or
out
xchg
mov
dec
mov
add
inc
dec
xor
lods
and
push
jle
divl
dec
mov
fistpl
xorb
iret
sub
test
fdivrs
sub
sti
dec
in
scas
out
jne
adc
sub
out
inc
outsb
fdivl
push
imul
dec
shll
fimuls
lret
mov
je
sub
repz
int
in
xchg
daa
adc
addb
jge
cwtl
push
inc
bound
hlt
dec
sbb
push
cmpsl
and
jae
in
xchg
and
leave
xor
dec
dec
popa
movsl
inc
je
test
in
jp
repnz
movsb
xchg
ret
push
les
cmp
jbe
bound
dec
loopne
mov
pop
outsl
inc
add
fnstcw
inc
outsb
jb
lahf
pop
fwait
add
rorb
xchg
adcb
pop
leave
mov
out
adc
pop
dec
mov
cmp
and
out
mov
ss
mov
cltd
jb
filds
add
sub
push
js
movsb
mov
dec
jmp
xor
negb
test
add
sub
movsl
popf
shlb
pushf
inc
inc
push
or
in
lea
sbb
adc
add
add
bnd
repz
mov
mov
loopne
popf
add
jbe
lods
add
pop
push
xchg
xchg
or
mov
stos
or
test
jne
xchg
insb
je
xor
cli
jo
jno
mov
out
fcomp
mov
xor
out
or
cmpsb
inc
fldt
adc
adc
pop
loop
lds
pushf
fs
insl
cld
sbb
cmp
sti
scas
sub
xchg
xchg
fmull
loop
aas
xchg
dec
xchg
popf
ja
insb
jg
mov
icebp
and
cmp
icebp
popa
popf
test
subl
dec
aam
mov
fisubs
cmp
iret
inc
mov
out
imul
cli
push
dec
out
fsubrs
cld
repnz
shr
cmp
sbb
jne
push
xchg
and
into
test
mov
mov
mov
stc
push
lea
lret
insb
fcmovnu
xor
sub
cmpb
dec
icebp
fdivrp
aas
cmp
daa
adc
jle
stos
mov
out
ds
mov
shrl
mov
pop
jb
into
dec
mov
push
bound
sub
pop
int3
sub
sbb
xchg
mov
sbb
fmull
mov
pushf
xor
loopne
out
test
dec
leave
nop
insl
loop
addr16
cmp
mov
jns
pop
outsl
and
sbbb
push
push
inc
add
cmc
in
pop
adc
dec
lods
add
jmp
test
and
hlt
repnz
subb
out
cmc
andl
loopne
outsl
push
add
jns
stos
cmc
icebp
xor
repz
faddl
imul
pushf
mov
xor
inc
or
cmp
and
scas
jg
sbb
loopne
dec
cli
jae
dec
adc
cltd
in
sbb
insb
adc
adc
xchg
xchg
pusha
iret
jno
lods
cmp
jmp
mov
xchg
jo
and
mov
add
inc
jno
ja
stc
outsb
mov
mov
lods
mov
or
pop
mov
clc
inc
jno
jmp
pop
dec
sub
and
arpl
idiv
stos
sbb
popf
xchg
inc
dec
dec
int3
or
mov
adc
sub
inc
adc
lds
imul
cmp
out
pushf
mov
lods
dec
dec
jmp
mov
sbb
jne
mov
int3
fs
lods
inc
xor
jne
cmc
inc
rorb
mov
lods
std
mov
popa
xchg
rcll
jns,pt
jnp
cwtl
int3
out
imul
dec
sub
loopne
or
mov
jb
mov
jg
aam
mov
lcall
mov
inc
add
lcall
cmc
mov
pop
enter
sub
or
stc
inc
xchg
xor
ss
or
sub
or
jmp
jb
test
and
xor
mov
push
lods
jmp
pop
push
adc
aaa
mov
mov
xchg
pop
jo
pop
mov
out
pop
cmp
cld
xchg
jge
lods
ret
jg
aad
and
clc
aas
cs
sbb
fstps
ret
repnz
mov
push
out
cmp
push
push
ds
lret
jnp
mov
jp
mov
xlat
movsb
pop
gs
dec
clc
add
push
jp
add
repnz
cmp
mov
add
cmc
stos
pop
mov
or
and
inc
or
cwtl
fidivrs
dec
cmp
dec
les
sub
pop
rcll
jmp
loopne
adc
inc
mov
mov
dec
push
pop
js
push
leave
ss
push
mov
jo
mov
lods
aad
popf
js
mov
xchg
int
xor
mov
subl
sub
leave
xchg
mov
pop
test
xchg
scas
cs
es
ds
fidivrs
frstor
mov
and
add
dec
mov
pop
stos
ja
inc
test
mov
mov
loop
hlt
pusha
mov
xor
xchg
sub
test
add
push
dec
stc
jns
stc
xor
inc
mov
aam
imul
rcrl
dec
fnstcw
insl
test
cli
cmp
inc
xchg
xor
cmp
jge
dec
scas
pop
add
push
mov
dec
sub
inc
dec
aas
xchg
pop
ja
ret
jmp
int3
inc
mov
xor
mov
hlt
mov
mov
pop
sub
inc
femms
mov
jmp
lds
outsb
jbe
pop
dec
ret
ret
jg
push
pop
pop
test
test
test
ficompl
jne
fcmovnb
lods
push
mov
fldt
es
push
add
fwait
sbb
adc
add
xchg
dec
add
ret
repnz
ss
xchg
sahf
jg
pop
in
jnp
dec
jae
dec
loopw
and
sbb
jp
or
or
sti
xchg
xor
scas
mov
fistl
jle
ss
adc
clc
pop
lods
sub
int3
in
jae
lea
dec
mov
mov
sub
in
pop
cltd
imull
pop
loop
dec
dec
pop
mov
rolb
or
dec
or
push
repnz
loop
mov
mov
inc
mov
mov
and
add
mov
mov
add
int
pop
lret
cmp
jl
mov
adc
arpl
ljmp
stos
fstl
les
sbbb
adc
repz
pop
scas
sbb
out
push
xchg
mov
addr16
ret
add
pop
nop
jge
lcall
popa
xor
xchg
push
lcall
and
xor
gs
sbb
pop
pop
mov
rorb
sub
and
lret
or
or
in
fnstsw
fwait
adc
cmp
stos
sub
cmp
xlat
bnd
hlt
fs
adc
sub
jnp
add
sbb
outsl
xlat
pop
ret
cmc
out
inc
lret
in
scas
adc
gs
mov
mov
out
pop
lret
cwtl
rorb
dec
stos
pop
push
out
cmp
mov
xor
js
cmp
lret
cmp
stos
add
out
fdivs
ljmp
cmp
fildll
sub
mov
pop
inc
out
mov
enter
cmp
cmp
sub
adc
dec
jmp
add
push
rorl
les
sub
cltd
xchg
fsubs
out
test
inc
mov
push
sbb
cmc
bnd
mov
pop
mov
dec
loope
js
adc
loope
sbbl
pop
scas
adc
ret
iret
and
ret
add
pop
ljmp
pop
push
mov
cmp
xor
repz
xor
push
fadd
insl
lea
ss
mov
cmp
hlt
push
cmpsb
movsl
inc
jl
pop
sarl
sub
test
js
dec
adc
and
loope
inc
and
loop
jge
push
xor
or
jb
imul
cmpsb
xor
fists
sbbl
push
push
aaa
in
jo
xchg
fisttpll
pop
xor
aam
mov
in
mov
movsl
adc
outsl
sbb
and
push
push
data16
xor
scas
fnstcw
je
shrl
icebp
push
xor
cmp
mov
fistl
cmpsl
mov
popa
jne
std
sub
insl
rolb
mov
es
fisubrl
cmp
iret
dec
outsb
adc
push
aaa
sub
hlt
daa
mov
imul
dec
insl
mov
mov
cwtl
gs
test
repnz
sub
outsb
mov
add
push
dec
and
pop
lock
lcall
add
xor
mov
mov
sbb
push
sbb
enter
xor
sbb
int
arpl
dec
sub
mov
inc
ds
scas
mov
push
pop
cmpsb
xor
rcll
enter
test
pop
mov
jp
cwtl
loope
into
mov
scas
movsl
mov
push
cmpsb
and
insb
pop
jmp
jb
mov
mov
imul
jne
jno
jg
jl
inc
add
sbb
xorb
in
sbb
enter
xchg
fdecstp
sahf
push
mov
xchg
enter
add
jae
sarb
fldenv
lds
inc
dec
je
push
push
lret
inc
test
mov
ret
in
inc
shrl
es
push
lock
add
data16
cs
enter
or
hlt
xchg
add
mov
xor
push
int3
push
inc
add
mov
lods
xlat
adc
jg
or
mov
xchg
jg
sub
aam
mov
adc
mov
sub
pop
jl
sbb
cmp
jnp
cs
addl
hlt
pop
sahf
stos
adcl
sub
lea
pushf
addl
pop
fdivl
jp
mov
xor
jne
jp
xor
std
in
push
sub
outsl
pop
in
mov
ret
push
call
dec
jmp
add
cmpsb
xchg
adc
xchg
adc
cld
les
or
and
or
bound
loopne
out
xchg
outsb
hlt
mov
or
mov
test
dec
ret
mov
and
push
in
ljmp
fdivrl
cli
imul
dec
stc
in
sti
test
or
jbe
cmp
mov
icebp
pop
add
cmp
fs
and
cmpsl
clc
insb
movb
jbe
mov
xor
add
xor
stc
fstp
and
mov
hlt
aad
ss
mov
sbb
mov
repnz
sahf
sbb
fs
aad
cmc
mov
and
dec
sbb
jo
xchg
lret
iret
mov
push
testl
scas
push
dec
lea
dec
nop
sahf
or
mov
adc
lcall
and
xor
dec
mov
daa
nop
cmpsl
add
test
sub
je
push
push
gs
shrb
sbb
mov
rcr
and
push
loop
inc
mov
stos
mov
adcl
shl
insb
lock
popa
or
out
aad
out
xlat
adc
filds
mov
jns
jp
loopne
add
push
or
aad
inc
pop
adc
loope
xchg
or
nop
xorb
cmpsl
stos
xchg
xchg
mov
inc
je
test
lahf
mov
mov
aaa
imul
das
orb
mov
and
aam
push
jb
frstor
outsb
add
push
or
test
icebp
xor
mov
sub
stos
lods
jno
cmp
aaa
fnstenv
rorl
jno
lret
leave
inc
or
int3
xor
mov
pop
orb
mov
jo,pt
sbb
sub
call
or
jne
iret
shrl
pop
mov
jb
pop
sub
sti
decb
rcr
xlat
adc
mov
fucompp
fnstcw
in
dec
dec
and
mov
daa
es
mov
mov
xchg
push
xchg
cli
dec
inc
cmc
into
sub
mov
aam
dec
mov
sbb
jnp
inc
js
add
mov
sti
push
fnstenv
shlb
outsl
sub
les
mov
es
xor
fdivl
fadds
and
lret
lds
sbb
stos
mov
vsqrtps
sub
leave
sbbl
pop
gs
jp
xchg
testb
adc
pop
pop
dec
xor
shll
insb
rcll
inc
pop
aad
push
ja
sbb
xchg
or
jmp
ss
xchg
leave
outsl
mov
adc
cld
rcl
and
ret
int3
int3
cmc
sbb
sub
fwait
enter
lods
jnp
fsubl
or
loopne
cld
mov
add
sub
pusha
test
mov
daa
dec
mov
jmp
jp
pop
lret
fxch
fisubl
popf
push
xchg
adc
cmpsb
adc
pop
fstps
std
mov
jg
arpl
shrl
and
jne
pushf
dec
imul
add
xor
pop
in
ja
xchg
inc
xlat
xchg
and
cli
push
pusha
inc
mov
notb
pop
fs
and
add
sbb
int
push
shrb
sub
ret
negb
mov
inc
adc
xor
push
or
andb
rorl
mov
movsl
jl
jle
popa
movsl
add
or
aam
stos
mov
scas
mov
ret
lret
fdecstp
inc
jl
daa
inc
sub
sbbl
push
jecxz
mov
lret
dec
stc
call
stos
pop
mov
fisttps
hlt
xor
pop
or
inc
nop
je
mov
add
xchg
in
sarl
out
in
popa
mov
mov
or
mov
or
add
clc
repz
and
lds
add
pop
rcrb
jle
jmp
jmp
pop
xchg
mov
mov
test
add
lea
mov
hlt
sahf
push
int
imul
rolb
pop
mulb
pop
jo
dec
in
push
or
or
hlt
and
call
aad
push
addr16
pop
or
in
in
pop
lcall
dec
jnp
pop
xor
jae
aas
dec
cmp
divb
sbb
xchg
jge
push
cmp
inc
push
cli
stos
xor
cld
lods
out
inc
inc
xor
xchg
mov
add
vsqrtpd
dec
and
int3
cmc
repnz
sub
mov
xchg
out
jne
fistpll
out
insl
dec
mov
jp
in
and
mov
outsl
sbb
sbb
out
push
adc
sahf
test
mov
mov
ret
pop
addr16
or
sbb
dec
and
sub
pop
dec
dec
pop
sub
mov
test
mov
and
or
mov
sub
lret
aam
and
imul
jbe
movsb
push
or
push
cli
jg
imul
mov
xor
cmp
in
pop
inc
cmp
push
lret
out
out
std
dec
add
dec
movsb
pop
les
xchg
enter
push
cmp
pop
or
xlat
in
mov
xlat
and
cmp
xchg
clc
or
stos
inc
add
adc
outsb
insl
repz
addr16
mov
mov
or
and
xor
inc
ds
repz
orb
jne
clc
inc
cli
sub
xorl
imul
sbb
adc
xchg
shll
movsb
mov
pop
int3
lea
cs
xchg
sub
inc
sub
push
jnp
scas
movsb
ja
aas
pop
fcoml
loope
int
fcmovnbe
mov
jno
sub
mov
inc
pop
cli
push
push
das
shl
jns
fdivr
rol
cmp
pop
ds
movsb
pop
push
js
out
lret
adc
lods
lahf
jbe
jp
xchg
dec
scas
sub
mov
add
mov
mov
inc
addr16
cmp
aas
addb
mov
es
leave
cwtl
imul
mov
pop
push
call
mov
rcr
or
fcomps
lcall
or
mov
mov
mov
pop
push
push
mov
out
push
and
add
xor
arpl
ja
cmc
inc
jo
aaa
repz
mov
add
cmpb
xor
adc
cmc
mov
into
shll
pop
lret
test
sub
lods
jbe
stos
mov
imull
inc
sub
pop
mov
mov
pop
movsb
ljmp
je
push
into
mov
jb
mov
xor
dec
aaa
jge
aam
sbb
mov
mov
test
lods
mov
push
les
mov
dec
popf
adc
adc
mulb
mov
fcomi
sar
dec
sbbl
test
push
adc
enter
dec
movsb
and
cmp
jo
adc
std
jge
pop
or
pop
cmc
fs
lret
xchg
fstpl
cmp
jmp
push
mulb
mov
add
leave
push
rclb
push
pop
mov
push
mov
mov
mov
mov
loopne
ss
jae
andb
cmc
xchg
ljmp
call
mov
loope
inc
std
enter
mov
ja
push
mov
and
orb
xchg
mov
cmp
aad
or
ss
or
scas
pop
test
pop
mov
test
jmp
mov
icebp
inc
call
shl
icebp
pop
mov
adc
jbe
push
jo
lds
mov
add
imul
mov
mov
dec
in
mov
fdivs
add
xor
mov
add
hlt
dec
outsl
xlat
cmpsb
xor
repnz
rcll
pinsrw
cmp
in
test
push
cmp
enter
mov
dec
test
add
pop
jbe
pop
cmp
test
inc
xchg
lcall
pop
push
aam
mov
mov
adc
fisubrl
push
rcr
leave
mov
test
bound
je
pop
les
xchg
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
and
das
addr16
pop
int3
and
mov
cmpsl
decb
.byte
