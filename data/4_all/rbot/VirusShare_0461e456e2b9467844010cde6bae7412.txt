push
add
push
mov
add
idivb
lea
push
incb
aas
pop
prefetchnta
pushl
add
aaa
push
adc
cmp
je
sti
orb
adc
test
adc
aaa
push
cld
movsb
mov
or
inc
push
or
mov
mov
mov
pop
pop
leave
ret
mov
call
push
or
test
je
pop
push
push
lea
mov
add
mov
and
inc
fnstenv
ret
stos
out
add
jb
xchg
lock
pop
pop
inc
or
rol
cmpsl
pop
xor
push
pop
sti
scas
or
push
pushl
mov
xchg
mov
lcall
inc
or
jne
inc
arpl
stos
loop
cmp
add
lea
cwtl
or
das
stos
cli
add
xor
rcrb
dec
mov
adc
fcomps
adc
push
push
xor
aas
mov
push
scas
dec
daa
sbb
push
inc
and
or
sub
inc
in
push
jl
mov
adcl
inc
mov
sbb
push
mov
xor
adc
imul
sbb
mov
mov
mov
lea
andb
mov
push
outsb
fsubrs
add
jge
mov
xchg
inc
and
js
shld
decl
mov
sub
cmp
and
test
push
dec
adc
addb
fisubs
push
hlt
mov
movl
mov
or
push
jmp
add
push
cmp
jnp
pop
mov
popa
add
or
mov
push
hlt
mov
adc
dec
loopne
mov
inc
pop
lock
mov
xor
mov
div
mov
incl
aaa
mov
xor
out
nop
dec
inc
push
movsb
xchg
push
mov
lods
jno
push
inc
test
dec
add
dec
pop
xchg
lahf
nop
out
jl
or
add
and
xchg
insl
add
sub
cmpb
mov
pop
fs
push
push
les
cld
and
std
fbld
sti
and
mov
mov
inc
and
sub
lcall
sub
ds
aaa
inc
call
inc
mov
cmp
adc
push
je
cwtl
mov
or
test
push
cltd
in
idiv
cmp
orb
inc
and
cmp
jb
dec
mov
add
inc
stc
bound
adc
adc
mov
or
dec
es
fisttpl
cwtl
or
mov
lahf
arpl
adc
sti
cwtl
sub
outsb
add
add
cwtl
cmp
push
in
xor
inc
xorl
nop
or
xchg
testb
push
pop
test
cmp
mov
adc
test
movsb
or
popf
dec
popw
in
xor
dec
and
mov
adc
adc
js
subb
push
out
jmp
dec
mov
sbb
sub
dec
and
push
inc
adc
movsb
cmpb
or
push
jne
cmpl
or
inc
mov
jo
jecxz
pop
loope
push
cmpsb
outsb
psrlw
or
je
test
pop
fs
xor
nop
add
nop
je
xchg
adc
aas
push
mov
sub
sub
aad
push
daa
adc
or
or
add
or
jb
and
jl,pt
xchg
and
enter
inc
xchg
clc
sbb
dec
lahf
pop
inc
jo
xlat
imul
dec
mov
mov
push
lds
push
cmp
fs
or
movsb
mov
pop
dec
jae
jne
sub
add
mov
std
or
pop
xchg
pop
pusha
jg,pn
loopne
add
pop
dec
push
sub
pop
mov
or
xor
mov
test
push
mov
and
push
adc
addb
cld
push
xchg
scas
cs
add
inc
lock
test
push
je
decl
repnz
cmpl
jl
or
add
xchg
add
adc
or
mov
cmp
adc
cwtl
adc
adc
ret
hlt
pop
inc
mov
movsb
rcrb
rclb
leave
ret
and
nop
js
add
or
push
rorl
xor
mov
dec
mov
data16
lcall
fwait
or
add
lock
or
hlt
mov
add
adc
adc
pushl
popf
pushf
movsb
fisubrl
sahf
test
imul
sbb
push
jo
sub
in
pop
and
add
sub
adc
mov
lcall
bnd
leave
lds
adc
or
pop
mov
arpl
enter
fsubs
leave
mov
les
sbb
sbb
and
or
mov
call
dec
add
jle
or
sbb
je
test
cwtl
mov
insl
cmpsb
push
pop
mov
push
nop
sbb
dec
mov
cmp
xor
push
loope
mov
inc
std
add
sbb
jne
or
nop
nop
bound
dec
fwait
inc
stos
repnz
jo
mov
js
push
mov
xor
xchg
adc
xor
pop
mov
imul
cltd
or
xor
sub
pusha
shrl
adc
xchg
xchg
mov
adc
pop
mov
or
adc
mov
or
or
int
cmc
sarb
je
pop
or
adc
push
dec
sbbb
sub
and
movsl
and
rcrb
and
inc
push
aaa
mov
sub
inc
out
cmp
and
or
push
cmp
je
or
aad
add
dec
mov
cwtl
or
loopne
cltd
outsl
jmp
add
decl
rcr
and
stos
jge
cld
inc
cmp
fcmovnb
ret
push
dec
mov
lcall
sbb
cmp
mov
mov
xor
cmpsl
fwait
add
inc
add
les
xchg
push
dec
push
mov
mov
push
loopne
pop
xchg
add
mov
xor
push
mov
daa
adc
aam
lret
xchg
mov
mov
pop
test
mov
pop
stos
stc
inc
cmp
call
mov
mov
inc
into
cmp
adc
repnz
daa
mov
dec
in
adc
pop
sbb
pushf
subb
jne
test
andb
mov
movb
sbb
sahf
pop
lock
add
add
add
sarl
cmp
je
shrl
test
xor
ds
xor
push
icebp
enter
mov
push
pop
in
cmp
call
push
bnd
and
mov
push
xchg
dec
inc
inc
test
jp
push
xor
push
jmp
sbb
jne
cmp
subl
or
and
idivb
sub
xchg
inc
jne
ret
push
mov
pushf
int
inc
mov
dec
inc
push
sub
lret
jmp
enter
xor
loope
sub
xchg
stos
lds
push
mov
test
vmread
popa
add
xchg
sub
and
or
and
testl
js
rcl
mov
sub
sub
push
loope
adcl
push
cmpsb
test
or
jl
sub
sub
adc
adc
int
xchg
inc
adc
loop
push
sbb
mov
push
push
push
pop
and
ror
jecxz
aad
mov
xlat
fisubl
ljmp
js
mov
inc
inc
icebp
or
popa
bound
inc
loop
nop
adc
movsb
lea
mov
je
mov
pop
jle
gs
inc
inc
xor
push
mov
inc
lea
dec
or
lods
loopne
cs
mov
jne
push
dec
mov
push
inc
mov
mov
mov
xor
cmp
je
scas
xchg
inc
push
shlb
mov
jl
fisttpll
sbb
loope
enter
clc
cmpsl
or
jnp
std
into
jle
ja
shrb
out
leave
xor
add
push
imul
push
dec
jb
imul
adc
mov
sub
in
mov
pop
cld
shlb
fisubs
xchg
and
ret
data16
push
adc
dec
rol
pop
test
arpl
xchg
xchg
sub
mov
cmp
pop
and
int3
dec
xor
xchg
mov
push
mov
or
mov
mov
push
lea
mov
mov
xchg
fcoml
insb
shlb
jne
cmc
mov
sub
es
push
iret
cmp
jo
dec
xor
cwtd
inc
jl
inc
adcb
add
xor
mov
testb
test
push
pop
mov
enter
adc
mov
lds
sarb
add
push
daa
push
pop
mov
sbb
or
pushf
insb
push
sbb
arpl
repnz
and
mov
sub
in
push
ret
mov
cmp
xor
sub
xor
mov
dec
adc
sbb
addl
imul
push
pop
adc
inc
pop
imul
dec
fmull
ds
inc
adc
and
xor
jo
jne
js
rcrb
js
pop
test
xchg
push
js
shlb
add
or
ljmp
jnp
in
imul
pushf
hlt
imul
leave
mov
and
ficomps
ja
and
add
shr
mov
fs
popa
imul
daa
rolb
jl
add
mov
fisubrs
or
lock
push
push
adc
jbe
js
pop
popf
and
call
loope
in
dec
dec
fs
mov
pop
fs
les
jb
imul
or
xchg
mov
fidivs
jns
mov
push
jnp
sbb
test
xchg
sbb
loopne
movsb
addr16
movsb
push
imul
jno
in
cmp
mov
and
mov
es
lret
push
inc
sbb
push
dec
aad
loopne
lea
lock
push
sub
and
add
les
jns
xchg
adc
cld
lret
pop
lea
add
shll
mov
mov
aas
or
clc
inc
mov
jge
sahf
jne
jo
xor
inc
adc
or
lahf
xchg
adc
and
pop
xor
cltd
adc
pusha
mov
popf
or
adc
cmc
or
jp
fcmovnb
adc
lahf
test
cmp
dec
stos
pop
hlt
int3
pop
int
pop
out
fs
js
rclb
or
xor
mov
cmovl
add
lea
add
inc
add
gs
dec
mov
adc
icebp
fdivrs
mov
fmuls
adc
je
mov
shr
lea
cmp
xor
jo
fistps
jne
push
cmpsl
inc
mov
jmp
jne
xchg
xchg
popa
xchg
inc
mov
jb
or
popf
outsb
mov
cld
dec
sub
insl
and
add
and
and
dec
lds
mov
pop
sbbb
pop
lock
popf
hlt
or
pop
add
movl
sbb
pop
or
jb
mov
push
inc
movsb
push
push
fcompl
data16
adc
push
rcrl
sahf
test
pop
enter
inc
cmpsb
sbb
fstpl
mov
mov
and
mov
add
inc
jp
push
mov
insl
cmpsl
or
mov
or
or
jle
sub
sub
stos
shll
adc
mov
ret
pusha
lahf
cmpsl
icebp
addb
and
xchg
popf
jge
popf
sub
xchg
pushf
shrb
scas
jo
add
push
sbb
cmc
xchg
es
inc
loop
inc
mov
cmpsl
loop
push
xchg
rclb
or
pop
cmpsl
scas
mov
mov
and
xchg
inc
dec
sbb
mov
jecxz
sbb
lret
nop
jb
sbb
adc
xor
jb
test
mov
xchg
mov
hlt
pop
and
xchg
les
xor
ret
adc
jl
mov
lea
fs
adc
mov
mov
cmp
dec
les
xor
and
sbb
cmp
negb
or
hlt
push
aaa
push
mov
push
jne
mov
lods
adc
leave
das
push
and
or
leave
mov
clc
or
shrb
add
mov
adc
pushf
leave
and
nop
mov
and
push
les
or
push
adc
and
enter
ret
mov
push
xchg
mov
lods
adc
divps
lahf
sub
push
imul
cld
mov
fisttps
mov
push
scas
insl
xor
ret
jo
push
aas
lods
push
nop
pop
sbbl
inc
fcom
aas
lods
bswap
inc
aas
mov
and
and
mov
aas
cmc
cmp
push
and
or
pop
mov
jne
test
jbe
xchg
stos
jg
fsubrs
jmp
and
repnz
popa
xchg
inc
in
insb
and
nop
sub
add
pop
cwtl
out
int
mov
adc
and
jl
inc
sbb
jge
pop
push
jno
dec
sub
adc
sub
add
push
out
nop
adc
dec
mov
lock
insb
pop
xchg
jae
lcall
aam
mov
adc
test
adc
mov
lods
les
jl
pushf
les
cwtl
cmp
xor
nop
ret
adc
mov
sbb
xor
js
pop
sbb
sbb
pop
js
adc
push
das
cld
add
push
push
jne
int3
les
xchg
repnz
sbb
mov
cmc
lea
fabs
adc
sbb
and
adc
adc
popf
arpl
pop
xor
inc
sub
adc
clc
lds
pushf
and
cmp
mov
in
les
call
je
pop
dec
adc
dec
adc
aam
and
or
sbb
push
and
xchg
or
mov
cld
xor
movsb
les
pushf
cmp
or
mov
in
mov
lea
insb
testl
clc
jne
mov
movsb
mov
shll
std
mov
cs
pushf
or
xchg
push
out
ds
ret
xchg
push
xor
js
adc
incl
jl
mov
inc
mov
lahf
mov
mov
rorb
sbb
adc
add
mov
push
push
adc
test
hlt
les
mov
cmpsb
mov
stos
xlat
adc
dec
aaa
mov
sub
or
adc
sub
inc
sub
adc
adc
xor
les
xor
adc
push
adc
popf
jecxz
pop
xor
and
mov
jne
jb
dec
adc
xor
jo
aas
cmp
les
xor
dec
in
ror
dec
lods
jnp
and
or
cmp
imul
sarl
dec
int3
andb
ret
loop
adc
je
jbe
sbb
jl
in
inc
mov
pusha
movb
das
xor
cld
adc
and
dec
xchg
xchg
jmp
xchg
lock
adc
xchg
lock
lock
xchg
ret
cmp
mov
cmp
ret
mov
out
mov
add
jne
mov
sub
orl
and
cs
notl
cmp
arpl
sarl
in
xor
int3
xor
mov
mov
jb
lea
sar
sub
xchg
movl
dec
add
adc
movsl
inc
mov
negb
push
xchg
loop
nop
scas
movb
push
jne
jmp
inc
dec
xchg
enter
xadd
push
fisubrs
mov
adc
jbe
test
lret
sub
fwait
pop
scas
dec
cmp
mov
adc
mov
jle
je
neg
sbb
cmp
jl
add
test
inc
mov
daa
mov
divl
scas
rorb
xor
cmp
setne
inc
mov
and
xrelease
jle
je
push
push
or
dec
pop
or
sub
das
add
movsbl
cmp
jl
lcall
icebp
jge
sub
jbe
notl
adc
or
daa
push
xchg
les
je
sbb
mov
and
push
mov
push
adc
inc
rorb
subb
jbe
mov
enter
mov
push
push
sub
or
push
mov
inc
mov
inc
adc
les
and
cmpsl
out
cltd
pop
ret
dec
mov
pop
push
xor
pop
dec
cmpl
or
sub
pusha
ret
pop
and
mov
addr16
sub
push
or
mov
push
dec
mov
rol
mov
pop
xchg
push
mov
sti
test
mov
push
and
shrl
repnz
push
jg
dec
fildll
popf
mov
xchg
pop
shl
stos
rcrl
add
sbb
repz
inc
push
add
aam
adc
imul
inc
je
rol
mov
lds
mov
or
mov
pop
add
daa
add
sete
inc
and
es
es
pushf
xchg
enter
roll
or
adc
pop
out
fs
stc
adc
sti
mov
repz
js
enter
add
pop
jne
pop
decb
cmpsl
popa
push
or
or
andb
ficoml
jno
push
mov
inc
cwtl
inc
inc
dec
pop
xor
sbb
stos
lcall
rcll
add
adc
movsb
lds
pushl
leave
fisubl
sarl
or
test
push
xchg
mov
or
fsub
and
and
ret
push
push
sbb
cwtl
out
push
or
jns
mov
gs
and
xor
inc
scas
push
ljmp
cltd
cmp
push
gs
dec
adc
out
pop
pop
data16
test
push
fs
and
loop
out
and
sahf
dec
adc
ds
shl
out
cmp
ja
ret
sbb
sbb
jmp
pop
out
xchg
and
mov
nop
push
call
xor
mov
inc
jae
shrb
imul
mov
push
nop
pop
add
jecxz
sbb
sti
test
or
out
adc
pop
shrl
rcrb
bound
mov
xor
push
lret
lret
bound
sub
add
fldt
lds
mov
mov
out
pop
sbb
xchg
cmp
daa
sbb
xor
dec
inc
sbb
sbb
push
mov
xchg
xchg
xchg
or
sbb
mov
push
hlt
inc
cmp
jae
adcl
loop
adc
dec
mov
cs
icebp
or
push
xor
push
rcr
inc
cmpsb
addl
arpl
cmp
test
jmp
shl
push
les
dec
insb
sbb
mov
je
push
push
jp
mov
hlt
enter
sub
ds
fs
mov
aam
je
push
int3
hlt
or
xchg
rorb
cmp
out
das
mov
nop
mov
mov
daa
js
sti
shrl
xchg
dec
add
and
and
jmp
sub
push
push
and
mov
das
and
jge
xchg
cmp
lods
iretw
paddq
push
arpl
test
push
stc
sti
mov
sbb
dec
push
js
adc
icebp
xlat
shl
jmp
sahf
lock
mov
ljmp
pop
shr
ljmp
faddl
cs
pop
or
dec
shrb
xor
adc
xlat
mov
repz
insb
xor
mov
mov
pop
xor
adc
push
xor
loop
adc
movsl
add
and
hlt
test
inc
xchg
hlt
test
frstor
xchg
xchg
mov
mov
adc
sti
lods
dec
pop
lret
add
and
pop
pop
pushl
push
mov
mov
dec
outsl
xor
cmp
insl
xor
jmp
push
in
xor
mov
dec
push
fistps
fs
pop
inc
dec
enter
js
sbb
test
sahf
and
lock
test
leave
jnp
push
arpl
adc
and
dec
iret
arpl
xchg
out
adc
xor
adc
cmp
pop
push
icebp
cmp
sub
jbe
jg
jmp
or
xchg
movsl
lret
adc
in
push
pop
and
stc
cli
mov
fmull
dec
int
cmpsl
aam
dec
or
adc
test
stc
xor
sbb
adc
test
push
mov
cmp
cmp
adc
xchg
and
leave
mov
pop
js
push
popw
rorb
packsswb
movzwl
aam
jl
xor
inc
push
fsubr
push
cltd
out
push
inc
push
sub
orb
adc
inc
icebp
mov
push
test
push
test
mov
je
sub
pop
cmc
dec
addr16
mov
aam
hlt
cs
sub
xor
jg
xchg
adc
mov
mov
shrb
push
push
and
add
push
cmc
sub
inc
hlt
adc
mov
fs
and
cmp
mov
iret
xchg
test
fwait
sti
mov
or
inc
je
shlb
movlps
cmp
push
mov
cmp
jge
mov
push
and
cmp
cmp
cld
in
dec
mov
mov
jno
xchg
clc
mov
push
int3
dec
fidivs
fisubrs
cvtsi2ss
ds
out
xor
sub
test
xchg
cwtl
xlat
mov
insb
repnz
push
ret
cmp
pop
inc
je
push
mov
xchg
test
lods
cmovg
mov
nop
pop
out
in
xor
insb
movzbl
adc
fdiv
or
mov
adc
push
nop
push
js
and
mov
icebp
push
push
loop
sbb
pusha
push
mov
add
in
loope
mov
stos
and
popf
rcll
mov
xchg
xchg
in
mov
sbb
or
or
jae
pop
jmp
jo
es
out
in
mov
jmp
fs
test
loope
ljmp
movsl
out
or
mov
repz
adc
dec
rorb
gs
xchg
in
adc
xchg
mov
jge
lea
in
dec
adc
and
cmp
jp
add
jb
ss
sbb
lock
and
adc
les
pop
or
notl
push
ja
sbb
inc
js
outsb
push
lods
inc
movsb
xor
xor
add
inc
mov
stc
dec
xchg
test
lock
les
je
dec
lods
mov
inc
jns
inc
mov
pop
or
mov
imul
inc
sub
or
mov
inc
mov
aaa
adc
cli
adc
mov
push
lods
ret
clc
mov
clc
push
and
mov
sub
lock
dec
push
fdivrl
sub
int3
faddl
enter
push
addr16
mov
mov
cmp
xchg
mov
aas
inc
pavgb
stc
xchg
add
mov
and
xchg
push
lea
xor
adc
sbb
add
aas
stos
inc
and
sbb
sbb
xchg
std
pop
stc
push
mov
inc
cmp
test
movsb
and
pop
jnp
daa
dec
addr16
jo
cli
notb
push
movl
pop
push
mov
jg
or
fs
stc
and
pop
cmp
repz
fildll
cwtl
sbb
pop
outsb
lock
cmpsb
setno
mov
jp
dec
push
pop
dec
call
ljmp
inc
hlt
out
pop
out
fcomps
leave
dec
jecxz
test
test
xchg
cmp
xchg
add
dec
ds
mov
pop
loope
mov
or
push
jmp
movsb
bound
das
shlb
push
add
test
inc
mov
dec
loopne
mov
insb
je
call
push
fcom
dec
xor
and
mov
xchg
push
js
mov
mov
inc
adc
sub
out
ja
mov
sbb
mov
and
or
movl
cmpsl
out
addl
cld
add
fwait
shl
pop
pop
push
mov
jecxz
mov
mov
ficompl
sbb
insl
jle
inc
mov
push
fwait
adc
mov
ss
outsl
pop
adc
mov
push
aam
jmp
bound
and
je
js
insb
cmpsb
pop
push
jo
test
sbb
pop
adc
shll
cmp
jb
cmp
cli
cmp
inc
loop
cmp
and
cmp
xor
roll
lods
pop
or
cmp
sub
scas
mov
mov
sbb
push
mov
test
aaa
addr16
lret
sbb
adc
icebp
gs
inc
mov
or
rcrl
pop
clc
inc
mov
and
mov
test
xor
outsl
popf
dec
aam
lock
adc
cltd
pop
fcomps
and
loop
cmp
push
adc
xor
repnz
push
and
jmp
in
loope
push
sub
jmp
xchg
mov
inc
or
sub
and
lods
fs
rclb
sbb
pusha
xchg
mov
lcall
daa
push
mov
xchg
popa
push
lock
out
fs
mov
jo
icebp
test
sub
sub
mov
adc
xchg
popa
jle
sub
test
leave
popa
push
sbb
movsl
mov
and
or
pop
ljmp
repnz
and
mov
mov
pop
or
jle
insb
mov
and
and
xor
mov
and
inc
xor
inc
and
mov
enter
in
insb
mov
jae
add
dec
lret
lret
fistl
mov
cs
fsub
call
neg
out
lods
test
or
aam
push
and
or
inc
mov
pop
fdivl
mov
mov
int3
cmp
hlt
sub
lea
out
xor
fcoml
andb
mov
shl
negb
sub
cmp
xor
inc
and
mov
or
out
mov
jne
jb
dec
or
xor
xchg
push
and
mov
push
aad
adc
inc
lods
or
mov
inc
add
inc
and
cmp
add
test
push
jmp
pop
je
push
and
movsl
push
fwait
lods
fs
push
sub
push
dec
mov
lock
jmp
jl
in
sbb
lds
in
insb
cmp
sbb
sub
inc
mov
xor
push
test
pushf
dec
cwtl
pop
int
and
ficompl
je
add
add
add
scas
outsl
lret
push
and
push
movsb
push
cmp
hlt
inc
sbb
inc
jnp
jp
mov
push
pop
push
test
inc
push
fcom
test
push
add
and
mov
sub
sub
inc
inc
adc
pop
enter
sub
sub
dec
mov
inc
mov
mov
and
mov
and
xchg
adc
or
clc
mov
cmp
mov
push
mov
mov
loop
mov
and
adc
loop
cmp
push
adc
and
sbb
adc
loopne
popa
sbb
aam
rorl
and
cmp
stos
jl
or
cmpsl
mov
test
inc
je
test
mov
les
test
pop
cmp
in
push
mov
inc
sub
or
out
inc
sbb
js
pusha
jb
cmp
dec
jno
or
push
mov
jecxz
sub
mov
sub
lret
sbb
bound
push
iret
pop
and
mov
int
jnp
push
andb
xchg
into
mov
adcb
je
cli
je
out
pop
mov
mov
add
push
mov
mov
ret
out
xor
subb
mull
jl
mov
rolb
iret
adc
loop
mov
mov
dec
push
jge
lea
push
rcr
cmp
leave
js
inc
leave
test
js
inc
lret
dec
xor
sub
popf
push
test
pop
imul
push
mov
das
daa
adc
dec
ret
adc
push
leave
mov
xchg
lret
adc
outsb
les
sub
fs
popa
xchg
test
ss
pop
and
adc
enter
js
inc
adc
cmp
adc
cmp
or
bound
cmp
fisttpll
or
mov
les
andb
sbb
ja
or
scas
fdivrs
lea
adc
lock
mov
mov
js
inc
push
and
in
fdivrs
into
and
ret
xor
push
and
add
mov
mov
and
xor
jne
push
sbb
int
imul
scas
xchg
inc
jg
stos
and
add
cmp
jp
sbbl
adc
bound
adc
adc
sbb
sbb
mov
pop
out
pop
mov
in
mov
lods
daa
push
push
and
in
cwtl
and
rorl
fwait
mov
add
movw
inc
or
movsl
or
lcall
iret
lods
out
or
push
sub
push
sbb
pop
pop
push
dec
jmp
xchg
xor
mov
mov
mov
bound
xor
or
or
push
mov
lods
loop
sub
mov
mov
cmp
scas
loop
pop
test
hlt
imul
adcl
mov
pop
cli
fmull
leave
bound
test
jg
popa
ds
mov
loopne
mov
push
cmp
sub
xchg
bound
call
add
scas
jno
inc
sbb
shr
pop
jle
push
loope
sub
mov
cltd
mov
lods
push
inc
pop
adc
fisttps
xor
mov
js
push
cmp
push
sub
xchg
cld
cmp
mov
mov
fwait
cld
xor
lods
cvtps2pi
inc
lret
scas
popf
dec
lds
cmp
test
in
test
xor
dec
inc
xchg
in
or
scas
jae,pn
or
stos
jge
mov
jno
ja
mov
sub
mov
test
or
data16
out
mov
scas
shlb
test
xor
push
sbb
sub
inc
clc
in
out
sub
lock
out
sub
or
and
cmp
out
push
int
or
lods
jp
jp
lock
push
fwait
test
inc
out
adc
cmpsl
or
or
test
call
mov
fidivl
test
adc
jno
std
mov
push
stos
pop
lods
pop
fidivl
jle
or
add
inc
hlt
nop
repz
cmp
std
jae
inc
jge
xchg
adc
adc
inc
sbb
pop
and
jle
jl
inc
and
out
icebp
xor
je
inc
popa
in
mov
push
mov
jl
jmp
pop
repz
lods
out
bound
add
lods
jnp
push
hlt
mov
add
imul
repz
and
push
mov
push
daa
rcrb
mov
psrlq
xor
mov
cld
cli
mov
repnz
mov
decb
mov
xchg
test
test
dec
cmp
dec
lods
or
test
jl
bound
push
mov
adc
jg
xor
lret
push
pop
lret
pop
push
rolb
add
dec
stos
cmp
adc
scas
fadds
jmp
push
popa
pop
lods
xor
shrb
and
push
push
pop
scas
jns
pop
sbb
mov
out
das
test
das
xchg
in
inc
push
cltd
out
cmp
loop
xchg
or
mov
bound
js
shrl
push
fs
jno
mov
sub
mov
xor
mov
out
sub
cwtl
and
dec
jo
sub
mov
fstpl
cmpsl
fsubp
inc
push
push
fbld
cvttps2pi
ljmp
xor
and
or
jb
and
icebp
push
and
mov
add
jae
push
pop
daa
or
dec
jbe
sub
sbb
imul
or
push
or
jae
fbld
ds
add
add
fdivr
cmp
adc
xchg
es
aaa
sbb
add
enter
cmpsb
lods
pop
mov
nop
lock
push
add
push
in
aam
stos
addb
je
sbb
sub
sub
out
mov
sub
mov
aad
mov
and
add
adc
movsl
decb
xor
aas
mov
and
xchg
mov
call
mov
test
ja
xor
mov
adc
rcl
jmp
or
loop
xchg
pop
mov
cltd
in
add
adc
xor
mov
mov
xchg
mov
ljmp
cld
jle
in
xor
jb
scas
mov
add
push
fistpll
enter
or
enter
push
bound
test
push
xchg
push
nop
mov
adc
and
rcrb
pop
sarl
mov
inc
aaa
or
push
lret
sub
lock
sti
rcll
cli
pop
movntq
push
mov
test
sbb
cli
sbb
adc
sub
push
cmp
adc
test
mov
adc
mov
inc
lret
sti
cmp
xor
test
lds
cmpsb
push
pop
push
xchg
stos
aaa
pushl
cwtl
xchg
jns
cmp
mov
dec
xor
test
jns
dec
push
loop
add
add
adc
mov
test
xchg
aas
cltd
mov
inc
aas
xchg
mov
bswap
cmp
cmp
movsb
sti
xchg
bound
mov
adc
mov
adc
pop
loope
push
sbb
sbb
xor
ljmp
xor
dec
sub
lock
jbe
movsb
sbb
rolb
es
inc
pand
push
ret
sbb
aad
dec
pop
mov
pop
loop
clc
sub
sbb
stc
shll
addr16
enter
clc
adc
ficompl
adc
mov
and
and
orb
inc
sbb
dec
lea
xor
or
and
inc
loop
stc
sbb
ljmp
loopne
mull
es
push
in
lret
enter
and
out
pop
addr16
imul
test
mov
les
stos
adc
or
sbb
sbb
cltd
test
test
sub
fnstsw
out
test
and
test
inc
out
mov
inc
shll
sub
test
mov
stc
xchg
adc
popf
mov
push
leave
cmpsl
pop
dec
mov
in
adc
inc
mov
std
adc
xchg
fnstenv
lcall
sbb
and
push
and
dec
sbb
mov
sub
sahf
addr16
leave
sti
loopne
faddl
jb
fistps
and
mov
xchg
fsts
mov
sub
popa
xchg
push
insb
lret
cmpsb
mov
insb
inc
int3
test
int3
imul
int
je
insb
push
cmpsl
test
xchg
lret
xchg
sbb
sbb
pop
cmp
adc
push
cmp
mov
les
sbb
nop
iret
mov
xchg
shrl
nop
inc
iret
adc
mov
mov
push
pushf
mov
and
cmp
cwtl
and
adc
stc
repnz
lds
jl
mov
ret
dec
xor
push
adc
sbb
xor
jbe
lds
ss
dec
repnz
mov
cld
pop
push
dec
jl
mov
lods
xchg
adc
pop
je
xchg
or
xor
faddl
fadds
xor
xchg
pop
lea
xchg
aas
lret
ss
cmpsb
call
fsubr
push
sub
adc
pop
inc
icebp
fsubr
push
loopne
test
and
jbe
pop
cwtl
loop
jo
xorb
adc
jl
jp
push
pop
and
adc
jmp
mov
push
sub
popf
xchg
cmp
nop
loop
adc
ret
inc
push
sarb
mov
icebp
test
adc
or
cmpsb
fistl
mov
movsl
stc
outsl
inc
and
fistpll
mov
ret
movsl
mov
xchg
jmp
mov
sub
jbe
pop
push
lahf
adc
jl
popf
push
adc
ficomps
clc
shlb
adc
and
out
cmpsb
cmp
mov
dec
fldl
push
je
sbb
inc
ret
cmp
ret
or
daa
outsb
movsl
in
mov
jo
ret
test
push
jo
jo
ret
mov
in
inc
inc
movsl
mov
test
ljmp
xor
mov
enter
push
in
jo
adc
jne
outsb
adc
sbb
gs
dec
cmp
mov
mov
xchg
cs
push
in
popf
xlat
push
stos
daa
andb
aad
jbe
ret
movsl
jbe
push
add
push
and
nop
imul
jno
sub
test
sbb
sub
sub
sbb
sbb
adc
fldcw
fildl
push
dec
push
xchg
enter
add
xor
mov
xor
iret
inc
mov
iret
push
and
sbb
les
and
test
fsubrl
inc
rcll
scas
jno
int3
movsb
cmp
sbb
es
sbb
sahf
cs
call
sub
call
ficomps
ret
lcall
sub
sahf
dec
arpl
sub
xor
cmp
sub
imul
cld
mov
jae
sub
sarb
inc
fldl
adc
mov
jb
roll
cmp
jl
push
adc
mov
mov
hlt
xor
adcb
lods
lock
mov
les
test
mov
mov
out
into
push
ss
push
sarb
jnp
dec
mov
jb
cld
fldl
ficomps
jbe
fwait
add
jne
inc
insb
dec
filds
jno
test
les
addr16
push
xchg
push
dec
dec
call
test
xchg
xchg
out
mov
dec
mov
push
fdivl
xchg
push
mov
aad
fadds
adc
ficoms
fucom
push
aam
cmpsl
xor
xor
inc
sbb
xchg
jl
loopne
jl
stos
mov
mov
les
mov
or
add
mov
adc
or
mov
lock
mov
dec
cmovp
push
into
jl
mov
adc
adc
xchg
xlat
xor
and
pop
or
sub
clc
mov
xchg
shll
mov
or
or
repz
shlb
xchg
mov
adcl
dec
push
out
mov
cltd
test
cwtl
cs
xor
push
pop
je
or
into
inc
or
or
xchg
insb
loope
or
jl
pop
pushf
mov
inc
xchg
xchg
dec
rcll
cmp
cmp
repnz
jmp
pusha
cmc
inc
lods
jne
push
and
cmpsb
mov
pop
mov
adc
or
lahf
inc
ja
push
mov
and
adc
or
xor
pop
call
adc
or
mov
xchg
push
addr16
dec
inc
mov
sbb
mov
dec
hlt
stc
fdivrs
mov
paddsb
and
sarl
dec
mov
dec
cli
mov
addb
movsl
mov
dec
inc
push
cmpsb
and
adc
adc
cltd
xor
test
lahf
jle
inc
push
and
xorb
push
push
or
sbb
jno
pop
cmpsb
dec
xchg
jns
test
push
lods
or
lret
pop
and
out
cmp
ret
movsb
xchg
sbb
pop
lea
xchg
dec
xchg
dec
lahf
push
lock
and
cmc
test
fs
aaa
xor
fldenv
scas
lea
adc
negb
nop
or
add
test
push
shrl
lods
mov
cmp
adc
stos
and
ret
dec
addr16
es
mov
add
mov
mov
das
jecxz
daa
sub
das
add
jmp
push
es
movsl
sbb
xchg
xchg
push
mov
and
mov
fcoml
pop
mov
popf
lcall
mov
sbb
ret
adc
push
cmovge
mov
pop
loop
pop
xor
add
lods
mov
push
jl
repnz
not
mov
inc
cld
cs
jnp
jmp
rcrb
addr16
sahf
or
push
fnstcw
lahf
jl
sbb
cmpsb
jo
loopne
or
bound
mov
and
loopne
or
test
movsb
fcmovnbe
mov
xchg
gs
loope
pop
push
and
xlat
movsb
push
repz
imul
and
mov
mov
push
cmp
loop
cmp
dec
jecxz
jecxz
cld
mov
adc
adc
adc
push
xchg
mov
pop
je
stos
outsl
jnp
in
lods
loop
shll
push
in
inc
cmp
in
dec
icebp
imul
lds
rcrb
out
into
les
and
cs
sbb
add
push
mov
cmp
fdivrl
xor
movsb
pop
sbb
mov
ficompl
ss
sub
xchg
inc
mov
or
sbb
push
mov
sahf
pushf
gs
or
pop
xor
add
mov
mov
xor
pop
or
inc
adc
and
dec
adc
pop
outsb
pusha
ret
jmp
push
je
adc
xchg
es
push
test
dec
and
jle
push
add
dec
mov
nop
add
mov
mov
movsbl
pop
loopne
repnz
fmull
push
inc
add
pushf
shll
es
dec
mov
mov
jecxz
xor
and
push
mov
and
push
pop
test
jne
mov
out
or
lods
xor
sbb
or
mov
outsb
fcompl
jge
pop
mov
popf
arpl
rorb
mov
pop
orl
stos
lret
loope
mov
lods
mull
pop
xor
push
cwtl
cmpsl
add
xchg
loop
xchg
popf
in
mov
xor
add
push
sbbb
popf
out
mov
fcmovnb
lods
xor
and
sbb
and
sbb
cmpsb
add
sti
adc
les
sbb
jae
dec
outsb
leave
fwait
pushf
jae
rcl
iret
or
rcl
mov
jle
xor
mov
notb
shrb
and
xchg
mull
das
cmpsb
pop
sub
adc
sbb
push
pop
pushf
gs
adc
dec
test
mov
xlat
popa
push
pop
aam
or
stc
jg
add
sbb
and
aam
and
push
icebp
push
pop
mov
mov
adc
nop
call
mov
mov
mov
pushf
mov
push
adc
adc
fwait
jns
inc
rcrb
mov
fs
xchg
adc
fimull
cmp
cmpl
loop
test
push
pop
in
popf
dec
incb
pop
jne
stos
rcrl
iret
pop
out
fs
adc
scas
and
adc
jg
push
jb
xchg
mov
fwait
hlt
sub
dec
mov
sbb
scas
movsb
sub
xchg
adc
inc
push
pusha
mov
rcll
or
add
add
sar
subb
mov
adc
cmp
repnz
fisubl
push
push
add
ret
xchg
inc
add
cmpl
ret
fs
cmp
mov
push
push
or
cli
inc
cltd
sub
es
adc
xchg
cld
lods
pop
mov
jg
sbb
ror
aad
jbe
enter
add
je
push
pop
outsb
push
sbb
and
xor
xor
mov
scas
sbb
xor
scas
test
xchg
and
adcb
mov
inc
mov
and
aam
and
je
mov
gs
daa
dec
or
and
inc
daa
cmp
xorl
jge
push
xor
adc
jae
sub
aam
and
subps
xchg
inc
mov
dec
pop
testb
or
add
xchg
push
adc
mov
push
jg
shr
adc
test
push
sub
dec
sub
daa
pushf
adc
adc
gs
bound
cmc
mov
test
js
xchg
movsb
daa
inc
and
inc
xor
sbb
mov
lock
lock
test
or
aam
xor
mov
xor
mov
mov
mov
or
icebp
adc
push
and
mov
adc
jmp
dec
sub
inc
addr16
aam
push
xor
test
loopne
mov
test
sub
or
lods
les
mov
pop
xchg
nop
test
dec
mov
rclb
lret
loop
mov
add
and
sbb
adc
adc
inc
cmp
or
adc
sbb
mov
popa
and
mov
push
dec
in
cmp
inc
or
fmuls
cld
roll
int
movsb
or
sub
daa
enter
or
daa
mov
fcoms
int3
mov
and
enter
mov
mov
or
les
jnp
xor
sub
push
mov
cmp
aaa
aad
inc
or
sbb
sbb
dec
in
insl
rorl
leave
mov
jp
push
adc
rolb
rorb
and
mov
or
adc
push
sub
or
mov
mov
sbb
xchg
or
jo
add
int3
mov
push
mov
mov
adc
or
outsb
aam
mov
sbb
jo
and
inc
and
mov
mov
and
inc
in
xor
sbb
sbb
xchg
adc
inc
sbb
xor
movsb
or
cld
push
daa
jbe
cpuid
mov
adc
int3
fists
or
call
fdivl
les
movsb
or
adc
movsb
bound
mov
dec
adc
negb
and
hlt
mov
nop
mov
js
loope
cmp
aad
movsl
cmp
dec
or
fs
mov
jo
movsl
or
xchg
and
nop
lret
nop
or
adc
mov
imul
add
mov
or
inc
js
les
mov
pushf
mov
shll
lret
mov
adc
jo
push
adc
or
sbb
pop
adc
enter
rclb
jl
loopne
push
call
inc
loopne
xchg
mov
or
les
lcall
adc
mov
lret
jb
ds
lock
int3
jbe
xor
push
add
ror
mov
and
mov
pop
es
adc
sub
je
cmp
adc
mov
insb
in
iret
mov
insb
mov
and
test
push
shlb
inc
adc
cmp
inc
mov
or
daa
jge
gs
and
inc
mov
sbb
jg
or
inc
movsb
daa
inc
movsb
sub
adc
mov
add
and
sub
adc
cmpb
adc
daa
push
xor
sub
and
ficoml
or
jecxz
dec
mov
inc
faddl
pop
jae
sbb
push
aaa
xchg
or
push
and
mov
mov
jno
sbb
xchg
pusha
mov
notb
push
adc
ds
lock
in
into
adc
test
mov
mov
sbb
clc
enter
into
cmpsl
mov
nop
pop
adc
sahf
cmp
pop
movsl
dec
dec
or
xchg
jl
push
dec
enter
bound
xor
enter
bound
sbb
jo
mov
test
js
mov
dec
sahf
mov
addr16
in
imul
icebp
or
icebp
or
lcall
pop
ret
mov
mov
pop
jle
xor
jge
je
stc
jns
pop
xor
push
jbe
adc
or
inc
xor
mov
adc
and
inc
mov
lock
sti
movsb
jb
sbb
fsubrs
mov
jno
or
and
call
in
in
cmp
hlt
sbb
xchg
cmp
and
mov
sub
testl
push
adc
in
or
int3
test
popl
cs
mov
ret
add
xchg
push
jne
movsb
cmovne
push
mov
ret
mov
insb
add
or
rolb
shll
mov
mov
add
lea
dec
xor
jp
out
fs
mov
mov
sub
jg
dec
xchg
jmp
or
je
or
pop
mov
push
jo
inc
cwtl
nop
frstor
xlat
xor
orb
lock
push
test
adc
divl
push
and
je
jmp
mov
mov
dec
rcrl
push
cld
in
rolb
stos
xchg
icebp
rcrl
imull
pop
data16
add
jbe,pt
lea
outsb
or
pop
fwait
inc
add
jb
jmp
rcr
repz
adc
push
or
fs
add
adc
daa
fdivl
adc
push
or
or
cmp
fnop
inc
mov
or
lock
mov
popa
out
pop
aam
incb
jle
fmul
push
shll
out
sbb
lea
push
add
mov
sbb
movl
jmp
and
test
xchg
or
roll
pop
jmp
jg
call
lcall
orl
pushl
or
push
fldcw
sub
cwtl
ds
xor
out
and
scas
or
mov
inc
cmp
mov
xor
insl
insb
mov
sub
pop
pop
xchg
push
int3
call
pop
and
jle
pop
fiadds
mov
fisubrs
pop
pop
jo
add
inc
cmp
jl
in
and
sbbb
xchg
mulb
gs
ret
es
sub
sub
pop
xor
mov
es
inc
enter
push
add
rclb
cmp
pop
jne
mov
rolb
push
pop
adc
add
ljmp
nop
pop
push
or
rclb
pop
push
int3
sub
and
inc
xchg
pop
push
daa
int3
outsb
jo
xchg
fs
pop
insb
mov
jp
cmp
or
rorb
mov
add
sbb
je
cvttps2pi
adc
jp
js
stos
xchg
adc
add
arpl
and
jmp
dec
daa
or
jne
mov
sbbb
mov
push
or
push
sbb
adc
adc
add
adc
sbb
jp
push
mov
push
loopne
add
or
lock
fidivrs
das
les
xor
xor
sbb
add
push
in
mov
sub
push
mov
clc
add
jbe
jp
mov
mov
and
and
or
or
push
es
je
lea
dec
cmc
outsl
mov
sbb
pushf
inc
jmp
or
dec
ret
aaa
xchg
idiv
jl
add
mov
addr16
jmp
cmpsl
lea
add
or
mov
jge
push
loope
sbb
popf
loope
pop
pop
ret
shrl
xor
dec
xchg
jge
test
inc
dec
add
bound
pop
jne
sbb
or
addr16
pop
cmp
out
push
cld
bound
push
les
mov
mov
mov
and
mov
cmp
push
push
cwtl
aaa
enter
inc
je
test
jl,pt
adc
aas
in
sub
jo
and
insb
jno
testl
mov
orl
call
clc
xlat
jl
repz
repnz
xor
cmp
into
rol
mov
adc
ret
xor
cmp
mov
xor
adc
aam
mov
and
sub
jge
lea
sub
and
mov
fdivrs
xchg
inc
icebp
fcoml
aas
lcall
testb
inc
mov
out
jno
and
cmp
pop
xor
scas
data16
xchg
out
stos
ret
inc
shrl
pop
push
js
out
xchg
add
cmp
stos
adc
or
xor
fisubrl
adc
mov
or
lea
adc
inc
add
inc
or
add
sub
push
mov
mov
je
fstps
push
push
push
push
adc
add
add
or
push
inc
dec
adc
rcll
into
cmp
das
int
test
pushf
and
lods
sti
mov
jo
and
cwtl
andb
inc
popa
adc
lcall
pop
cmp
jmp
push
push
sbb
jns
scas
mov
rcl
dec
sbb
cmp
push
pop
xor
and
cmp
jl
sub
pop
mov
dec
addb
jne
inc
and
add
and
cmpsl
adc
addb
je
into
or
pop
adc
dec
push
lsl
inc
test
push
xor
aam
shr
cmp
push
or
push
insl
adc
ret
movsl
orl
fildl
out
sub
mov
push
mov
xor
push
dec
add
add
xor
or
xor
cmpl
in
into
mov
push
push
xchg
xor
dec
lea
push
mov
or
mov
test
pop
cmp
push
adc
adc
lret
mov
adc
repnz
test
mov
hlt
mov
cmp
sub
add
cmp
jl
jmp
inc
push
idivl
mov
dec
mov
fwait
enter
sbb
iret
mov
cmpsb
fmull
push
sub
xor
adc
and
or
cmp
das
clc
cmp
add
movsl
les
cmp
int3
cs
mov
mov
pop
stos
dec
out
push
in
lds
cmpsb
xchg
popa
push
lods
aam
test
mov
lahf
popf
pop
leave
movsb
mov
adc
fists
push
jne
mov
add
adc
stos
out
pushf
adc
mov
and
and
and
dec
sbb
push
push
mov
xchg
xor
and
cmp
jle
jns
repnz
and
jno
lret
pop
mov
and
pusha
cmp
je
mov
sub
push
and
mov
aad
iret
xchg
imul
or
cmp
aaa
call
xor
daa
adc
xchg
sub
out
xchg
in
movsb
cmc
and
pop
loopne
icebp
cmp
push
dec
cwtl
das
or
jge
xor
or
sbb
cmp
clc
adc
fildll
push
push
dec
cmpsb
sbb
and
xchg
iret
push
dec
xor
xchg
dec
loop
cmp
pusha
jno
adcl
mov
rcl
nop
and
cmp
and
and
lods
sbb
mov
cmpb
dec
fisttps
cmc
aas
cmpsb
out
test
and
sbb
dec
mov
arpl
sbb
pop
cmp
mov
push
aas
in
insl
jmp
ja
data16
and
mov
dec
or
xchg
and
nop
sub
xor
inc
dec
daa
cmp
mov
roll
in
sub
or
adc
sar
dec
cmpb
sub
js
pop
inc
or
cmp
adc
pop
dec
mov
inc
push
add
mov
test
jmp
xor
sub
inc
inc
jmp
nop
out
jle
push
or
test
adc
cmpsb
or
mov
jmp
enter
in
adc
outsl
sub
pop
cmp
jne
inc
or
lret
adc
sub
sbb
cmp
cmp
sub
inc
pop
sbb
rorb
enter
cmp
je
cmp
sub
dec
mov
rcr
jg
adc
outsb
or
jl
cmp
jne
out
loop
add
push
test
sub
xchg
loopne,pn
stc
cmp
les
leave
je
push
and
mov
push
push
ret
mov
sbb
or
sub
adc
pop
and
jmp
fcmovnb
sbb
cs
push
mov
cmp
sbb
push
cmp
je
dec
xor
or
dec
sbb
ss
pop
fsubs
mov
aam
jg
je
mov
lea
icebp
adc
xchg
pushf
aas
add
mov
les
clc
or
dec
dec
cltd
or
pop
movsl
push
push
jb
sbbb
push
stc
sub
je
push
mov
add
nop
loop
inc
fimull
cltd
or
sbb
cltd
mov
mov
jbe
and
clc
loopne
cmp
jl
rcll
inc
jl
imul
iret
dec
xchg
loopne
lock
scas
outsl
sub
jne
and
and
mov
mov
rcl
mov
push
sub
adc
lss
cmpsl
push
mov
rcll
and
push
push
inc
adc
xchg
or
rclb
loop
push
mov
mov
inc
inc
rclb
push
mov
xchg
mov
xchg
adc
or
xor
rol
inc
push
inc
loop
sbb
xor
loop
add
daa
dec
inc
dec
cmp
mov
jns
sub
fisubl
je
imul
loopne
aad
mov
mov
in
xor
dec
add
dec
mov
faddl
pushl
lea
lcall
push
adc
mov
adc
js
cmp
scas
jo
jmp
mov
cld
jno
pop
inc
fstl
aad
adc
mov
jo
jle
xor
push
push
push
and
inc
icebp
fdivl
pop
mov
adc
xchg
les
add
mov
test
call
mov
or
stos
mov
cmp
mov
push
add
les
cs
popa
and
inc
and
cmp
clc
out
cltd
dec
xchg
cld
mov
xor
insb
pop
in
sub
rol
push
inc
sub
cmp
shrb
push
or
decl
xor
lds
or
pop
xchg
dec
loopne
mov
xor
push
inc
ror
pop
xor
repz
sbb
test
mov
adc
mov
shrl
push
mov
cwtl
or
add
inc
cmpsl
sub
sub
or
jmp
in
fisttpl
push
mov
mov
adc
adc
cltd
add
push
inc
mov
ja
inc
mov
sbb
ja
or
mov
inc
push
jg
sbb
cmp
inc
dec
sbb
push
aas
add
jmp
sbb
add
imul
xchg
cld
std
add
dec
push
insl
sbb
cld
out
hlt
inc
xchg
and
push
insl
pop
adc
sbb
sbb
test
pop
inc
push
fisubrl
ja
adc
inc
dec
mov
shrb
loop
loopne
mov
and
test
pop
or
sub
test
sbb
sub
test
inc
loopne
sub
cmp
inc
loopne
and
pushf
inc
loopne
nop
fiadds
repz
push
and
inc
test
pop
xchg
pop
gs
nop
out
push
cmp
adc
dec
pop
jno
ret
mov
inc
sbb
dec
cltd
inc
push
mov
iret
pop
mov
fdiv
sub
pop
sbb
js
and
or
sbb
aam
or
push
loopne
push
mov
lcall
adc
add
shlb
push
ljmp
adc
mov
mov
in
mov
cmp
loope
ljmp
jge
sub
add
mov
inc
dec
push
sbb
mov
fists
cld
mov
into
movsb
shl
mov
inc
pop
sub
adc
mov
or
jnp
and
lea
ds
sbb
pop
cmp
enter
loopne
adc
std
arpl
push
sahf
dec
adc
arpl
hlt
push
clc
add
adc
pop
adcl
jno
adc
or
rcll
dec
mov
inc
jecxz
shll
sbb
inc
clc
fisubs
mov
psubsw
or
and
clc
inc
push
lods
sbb
mov
dec
jno
and
jnp
and
fcomi
xchg
push
add
cmp
pop
and
ja
pop
inc
in
lret
pushf
pop
out
adc
dec
push
imul
in
mov
clc
scas
or
inc
popa
loopne
add
ja,pn
shrl
lret
xor
sub
xchg
sbb
fdiv
outsb
lahf
jmp
fidivl
cmpsl
dec
fs
mov
aam
orb
xchg
fcoms
dec
fdivr
rcr
pop
adc
and
cmp
imulb
pop
mov
dec
je
inc
xchg
mov
lret
mov
pop
jmp
xchg
mov
push
mov
mov
les
xor
insb
push
jno
dec
adc
fcoml
push
gs
in
xchg
loopne
xor
xor
sbb
adc
fs
cmp
add
scas
mov
insl
cmp
push
push
mov
push
test
fdivrs
add
insl
clc
dec
std
sub
loopne
pop
or
or
or
pop
mov
lret
push
or
adc
adc
std
mov
adc
in
cmp
test
les
adc
lea
sahf
sub
nop
add
and
out
popf
sbb
mov
dec
push
pushl
lods
or
out
int3
add
sbb
lcall
pop
mov
lcall
shr
daa
sub
add
in
sbb
pusha
push
mov
add
jb
mov
in
jecxz
push
pop
xchg
loopne
loopne
xor
adc
pop
sub
cmp
adc
sbb
mov
mov
jp
push
loope
add
aam
xor
mov
insl
pushf
and
jo
adcl
mov
imul
mov
jmp
inc
shl
fs
inc
xchg
mov
mov
cmpsl
xor
add
jmp
cmc
sub
adc
push
jl
mov
sar
lds
add
mov
xchg
cmpsl
adc
loop
xchg
repz
xchg
add
ds
test
mov
dec
push
xor
clc
jns
and
scas
xchg
ljmp
fidivl
jns
in
jo
in
aam
inc
dec
push
inc
lcall
pop
jne
stc
out
pop
popf
les
xor
sub
inc
adc
pop
subb
scas
imul
lret
and
dec
pop
sti
pop
dec
loope
pop
scas
jae
jb
movsl
or
outsb
xchg
mov
fnsave
inc
leave
fdivrs
and
hlt
xchg
mov
push
sub
inc
jmp
inc
cld
mov
sbb
mov
dec
pop
pop
dec
stos
xlat
or
xor
loope
pop
fwait
into
mov
sub
and
rol
movsb
push
or
xor
lahf
int3
test
pop
cli
jb
adc
push
sub
and
movsb
pop
and
test
sahf
push
mov
pop
fwait
xchg
pusha
jge,pn
dec
or
fwait
pusha
lret
stc
nop
ds
mov
sti
mov
test
loopne
add
jnp
sub
pop
cmp
enter
cmpsb
icebp
inc
xor
and
shlb
add
cmp
xchg
cld
and
adc
loop
sbb
or
adc
sub
pop
xchg
pushf
pop
and
incb
cwtl
inc
mov
xchg
add
and
mov
ror
or
and
ret
and
pop
dec
and
rcr
icebp
aas
in
lea
sbb
push
push
dec
ret
jns
sbb
mov
cmp
mov
mov
mov
jo
mov
inc
or
sub
add
inc
lock
je
testb
test
rorl
jg
add
add
imul
pop
ret
push
je
test
xchg
pop
adcl
loope
gs
fcompp
inc
jge
push
or
clc
jg
popf
ret
dec
mov
add
jne
add
shr
mov
pop
push
xchg
enter
sti
xorl
pop
pushl
in
lods
jbe
ss
mov
or
add
add
out
mov
sti
sub
jp
dec
pop
mull
clc
popa
lods
inc
add
shrb
sub
daa
fadd
xchg
xchg
mov
movsb
shr
and
add
ds
mov
inc
jb
mov
adc
mov
push
jl
push
or
js
cmp
mov
fstpt
dec
ljmpw
frndint
inc
pop
push
dec
sbb
adc
pop
fwait
and
popa
inc
ret
and
mov
sub
inc
aad
or
je
ret
imul
xor
stos
sub
inc
pop
dec
pop
xor
cmp
shl
cli
xor
adc
jg
or
lea
mov
xchg
shlb
adc
and
adc
adc
adc
cmp
cmp
stos
adc
pmullw
add
inc
cvtps2pd
or
add
test
push
ds
data16
outsb
or
shll
xor
fcomps
mov
and
js
test
out
dec
pop
loopne
jecxz
and
push
or
movsb
sub
push
bound
mov
arpl
inc
mov
sbb
push
mov
and
mov
mov
imul
aam
or
inc
insb
push
aad
arpl
pop
push
cwtl
sbb
jno
push
lds
aad
sub
in
inc
rclb
mov
inc
or
fsubs
test
pop
int
xchg
adc
push
and
nop
lret
outsl
jno
loopne
stos
mov
shlb
fdivs
mov
sbb
lcall
lret
pop
or
cmpsb
imul
enter
sbb
clc
insb
push
daa
or
dec
adc
fsubrl
sbb
push
mov
xchg
lock
jecxz
lock
push
xchg
clc
repnz
xor
push
jnp
cmp
jb
or
pop
mov
or
jmp
dec
adc
adc
daa
adc
clc
pop
cmp
lock
push
cmc
add
mov
inc
jge
adc
inc
adc
icebp
js
sbb
push
and
cwtl
xchg
daa
jne
notl
dec
rorb
jmp
mov
lds
xor
rorb
sbb
cli
je
or
push
xor
cmp
sbb
dec
inc
sti
aaa
movsl
inc
jge
xor
pop
jns
mov
icebp
inc
pop
lea
subb
ret
outsb
gs
adc
and
faddl
xor
and
add
das
push
adc
jae
cmp
lds
cmp
and
push
pshufw
mov
push
adc
add
dec
test
xor
jmp
cmp
jge
xchg
add
add
mov
add
and
adc
bound
subl
mulb
mov
cmpsl
addl
es
xor
sub
push
loopne
es
xor
and
enter
xchg
push
pop
fldl
cmc
push
fildll
fmull
inc
rcll
or
xor
rcrl
pop
jmp
js
cmpsl
push
push
outsb
add
sub
inc
adc
enter
orb
ja
dec
push
xchg
cmp
pop
jae
mov
repnz
int3
aaa
pop
mov
rcll
lods
clc
add
je
xor
adc
dec
or
int3
mov
pop
fsubl
and
xchg
xchg
bound
filds
mov
rorl
jmp
cmpl
add
aaa
jae
push
add
stc
add
add
icebp
push
add
invlpg
add
inc
icebp
nop
cs
and
bound
inc
movaps
idivb
add
out
mov
fbld
out
jbe
add
mov
adc
or
test
inc
pop
cmp
cmp
mov
dec
fcmovbe
inc
mov
movsl
dec
sbb
int
icebp
inc
loope
cmp
dec
jae
sub
push
jo
int3
jbe
icebp
xchg
fisttpll
cmpsb
nop
test
mov
push
xchg
dec
test
xor
mov
push
mov
loopne
and
inc
xchg
mov
mov
les
and
dec
mov
movsl
jl
fwait
adc
sbb
in
mov
cltd
ss
cmp
es
shll
cmp
call
lret
jne,pt
daa
enter
add
push
xchg
pop
mov
sub
inc
push
dec
leave
mov
mov
push
mov
lods
dec
cmc
aas
add
adc
mov
mov
add
andb
fsubrl
lea
mov
xchg
rep
and
inc
add
push
xchg
jg
movzwl
dec
xchg
and
mov
outsl
cld
adc
xor
jo
rclb
dec
cltd
inc
fs
loope
out
mov
mov
xor
push
pop
cwtl
and
addr16
or
pop
outsl
lahf
mov
add
subl
pop
jge
stos
aad
in
fisubrs
inc
lock
or
push
fs
in
in
enter
outsl
sub
inc
mov
ret
mov
mov
repz
adc
inc
dec
bound
leave
mov
and
test
loop
sbb
xor
adc
jne
sbb
push
sbb
jne
add
xchg
popa
movzbl
repnz
pop
xchg
mul
add
pop
add
cwtl
add
mov
test
jbe
dec
sbb
mov
pop
mov
incl
push
dec
xchg
xlat
or
mov
pop
or
sub
or
jl
add
push
lcall
sti
fisttpll
add
stos
loope
pop
loope
and
cwtl
push
pop
push
or
cmc
ficompl
push
mov
andb
jge
rcrl
or
inc
xor
push
jg
mov
pushf
es
inc
push
enter
mov
dec
add
stc
cmp
jae
push
push
adc
mov
vmovntps
or
xor
push
mov
aas
aas
icebp
xchg
iret
push
out
xchg
dec
push
shl
or
jmp
or
cmpl
jne
js
add
adc
sbb
js
jae
or
inc
sbb
mov
out
or
shr
inc
xchg
outsb
popa
incb
jmp
push
inc
fmulp
movsl
ret
adc
cs
mov
shll
add
int
inc
jle
xor
and
cld
in
push
sub
and
sbb
xor
cmp
inc
push
cmp
into
sbb
fists
dec
push
imul
sub
adc
and
mov
mov
push
jecxz
pop
nop
cmp
cli
or
inc
or
jmp
add
or
bswap
dec
jge
push
push
andb
je
dec
jb
movl
mov
rorl
std
push
int3
hlt
mov
pop
pop
push
mov
pop
push
sarb
mov
adc
icebp
leave
pop
sbb
jne
in
js
lds
cmp
jecxz
imul
test
or
stos
inc
ja
mov
jae
xlat
fdivs
xor
dec
jg
cli
add
push
ja
sbb
insb
cmpsl
sub
xchg
lret
jbe
or
popa
pop
fs
iretw
and
inc
or
bound
iret
pop
inc
insl
cwtl
mov
lock
in
jbe
adc
add
and
mov
pop
movsl
stc
push
adc
and
add
sbb
pop
mov
mov
call
jbe
sbb
push
shll
cs
negb
pop
dec
or
dec
inc
subb
jmp
cmp
push
xchg
sti
sub
mov
insb
leave
mov
jmp
mov
mov
mov
addr16
push
fs
add
testb
add
push
lret
push
push
add
and
xchg
shll
rcll
aad
xorl
mov
push
stc
data16
push
shrl
pop
movsb
into
mov
inc
mov
adc
sbb
adc
loop
pop
push
push
add
std
cmp
call
lods
cld
xor
popa
mov
sub
jp
sbb
inc
adc
add
mov
mov
adc
xchg
test
add
mov
outsb
rorb
jecxz
or
out
xchg
mov
pop
test
xchg
and
pop
sbb
adc
sbb
in
pop
jecxz
loop
xlat
shl
icebp
xor
pop
in
jecxz
loop
dec
fsts
dec
repnz
add
pop
stos
mov
lods
mov
test
xor
sub
xchg
ret
das
cld
lds
iret
jo
adc
adc
test
out
inc
outsl
mov
xor
mov
and
push
sbb
xchg
shrl
mov
cmpsb
fstps
movb
testl
push
test
test
xor
ds
jns
clc
int3
xlat
lods
mov
xchg
adc
and
dec
notl
adc
jne
lods
hlt
and
fldenv
inc
push
movsb
push
and
mov
out
subb
shr
js
and
dec
mov
mov
fsubl
adc
aad
adc
repz
lahf
or
jo
push
cmp
lock
add
adc
cmp
cmp
sub
push
xor
xor
clc
push
enter
mov
popa
test
or
inc
or
mov
subb
xchg
fisubs
bound
add
adc
pusha
mov
push
push
pop
jl
mov
leave
ljmp
ret
pop
xchg
push
clc
adc
cld
jne
int3
push
cmp
or
pop
fistps
arpl
mov
orb
movsb
sub
xor
movsb
push
dec
push
lods
movsb
xchg
mov
push
leave
adc
movsl
fprem
scas
loop
dec
mov
xsha256
cmpsb
push
and
mov
lret
push
add
int
dec
icebp
insb
mov
jmp
fists
cmpsl
cmpsb
add
stc
add
dec
clc
add
xchg
mov
push
mov
xchg
dec
pusha
mov
push
pop
add
or
xor
add
sbb
leave
sub
fbstp
inc
adc
push
test
xlat
test
fsts
pop
mov
ret
push
adc
cwtl
add
xor
loopne
add
stos
or
mov
mov
cmp
imul
pop
push
addr16
rcrl
fiadds
push
loope
push
ds
scas
inc
xchg
shr
popf
loop
and
subl
lds
jne
push
jmp
push
dec
cmp
out
jb
je
ret
cmp
push
shl
sti
outsb
mov
push
leave
pusha
hlt
sub
sub
pop
in
sbb
mov
sub
pop
mov
lea
dec
pop
and
std
inc
js
notb
dec
adc
dec
sbb
push
xchg
adc
dec
add
jl
jmp
js
xchg
pushf
rolb
dec
pop
wbinvd
adc
popf
adc
sub
mov
aas
lcall
push
pop
repz
push
mov
test
sbb
xchg
cmpsb
pop
push
movsl
shl
mov
mov
push
and
pop
xchg
xor
daa
xchg
mov
pop
lret
mov
cli
dec
pop
dec
push
pop
xchg
cld
and
push
xor
add
cmp
xor
pusha
mov
scas
sbb
xor
pop
nop
movsl
and
in
loop
adc
push
mov
fstps
adc
mov
dec
les
das
rcrb
ret
and
mov
adc
inc
das
lock
sub
push
xchg
popa
xchg
pop
cmp
les
xor
mov
mov
out
aas
dec
xor
cmp
sbb
add
sub
pusha
mov
dec
sub
mov
jmp
sahf
cld
incl
sbb
inc
push
push
orl
sbb
sarb
or
inc
dec
xchg
and
cmp
or
jno
jns
xor
es
sub
jecxz
cltd
lea
jbe
mov
outsl
rorb
ror
adc
ficoms
mov
jecxz
mov
leave
or
imul
xor
hlt
aaa
mov
jmp
sarl
scas
cwtl
aas
xor
mov
push
push
out
add
dec
push
adc
inc
pop
jp
jnp
mov
out
test
mov
push
xor
cmp
jl
mov
or
jbe
push
xor
popf
push
shll
push
push
mov
inc
fisubl
sbb
gs
sbb
push
mov
lock
jp
mov
dec
cmp
pop
aad
mov
out
test
icebp
rolb
add
outsl
cmovs
mov
or
and
push
mov
fmull
xchg
fmuls
sub
or
dec
or
dec
xor
shlb
push
and
inc
test
stos
mov
xor
xor
mov
and
sub
dec
inc
sub
sub
enter
sbb
adc
add
mov
dec
test
cld
les
sti
add
push
fmull
sbb
jne
jmp
aam
xor
sbb
xor
mov
call
rcll
inc
nop
adc
and
cmovg
adcb
adc
bnd
je
sub
mov
in
adc
mov
adc
xchg
in
inc
roll
or
nop
lcall
in
mov
pusha
push
bound
push
sub
or
xchg
mov
inc
push
add
sub
xlat
pushf
xor
enter
testl
sbb
mov
xchg
daa
adc
mov
icebp
pop
or
and
sub
je
dec
pushf
in
cmc
rcr
push
jmp
mov
icebp
shl
pop
sbb
and
sub
je
out
js
fwait
adc
push
imul
lret
push
xor
leave
test
mov
ja
jp
and
and
out
push
sahf
push
je
adc
adc
jno
je
mov
xor
cld
and
jle
leave
gs
inc
inc
inc
adc
nop
mov
mov
mov
jb
mov
pop
test
fdivrl
and
push
loopne
fisubl
icebp
hlt
pop
inc
ficoml
pop
cmp
jp
popa
sbb
push
sub
xor
xchg
mov
jne
or
xchg
nop
or
imul
fsincos
adc
and
dec
lods
xchg
xchg
repnz
movsb
outsl
ret
fsubl
rolb
cmp
mov
ret
fst
cltd
cmp
jne
or
repz
je
xor
push
int
sbb
adc
pop
fsts
and
dec
add
mov
aad
jno
pop
test
scas
aam
stos
es
or
repz
mov
mov
data16
jne
popf
add
fisubs
cmp
push
jnp
or
movsl
jg
xor
test
aam
call
push
cmp
leave
mov
push
inc
push
fadds
je
or
loopne
and
aam
sub
fimuls
push
bound
aad
mov
push
add
mov
mov
mov
enter
xor
mov
adc
lret
mov
jno
jmp
and
ja
mov
add
in
inc
sbb
mov
dec
clc
mov
rcll
in
aaa
cmpsb
and
sbb
sbb
mov
and
out
and
jmp
pop
inc
mov
and
movsb
xchg
push
into
pushf
push
call
loope
pop
daa
pop
and
nop
loope
jle
push
push
test
and
aaa
and
pushf
push
and
push
xorl
xlat
xor
lds
xchg
jno
cmp
sti
mov
pop
sub
sbb
dec
in
leave
jle
fstpt
xchg
and
cmp
jmp
scas
inc
adcl
or
in
pop
pop
ja
jle
imul
adc
push
mov
sbb
sub
in
mov
popf
popa
rcrb
pop
jle
imul
push
pop
push
xor
lret
pop
xchg
jo
sahf
adc
loope
das
mov
mov
adc
js
mov
lret
in
dec
lods
adc
mov
cmpsb
dec
dec
test
adc
shll
mov
out
shrl
xchg
test
sbb
testl
test
mov
bound
mov
and
add
push
adc
adc
mov
test
push
adc
add
jmp
call
je
xor
inc
mov
jle
imul
js
out
cmp
sti
and
pop
clc
addr16
mov
adc
mov
push
push
dec
sub
mov
or
or
xor
mov
pusha
fistps
dec
mov
or
push
out
out
rorb
mov
sbb
mov
in
push
imul
push
jmp
out
xor
push
push
es
into
cmpb
jne
cmp
in
and
adc
push
xlat
jae
cmpsl
push
jbe
push
sub
inc
out
mov
sub
js
popf
in
adc
adc
xchg
fstpt
adc
dec
cmp
mov
dec
iret
enter
cmp
je
pop
loope
jne
adcb
push
xor
push
dec
cmp
in
daa
lcall
jnp
je
daa
adcb
push
and
ret
test
stc
les
dec
mov
jg
into
adc
or
in
in
jne
and
push
pop
or
jge
add
cmpsl
je
push
mov
mov
aas
dec
and
cld
ret
mov
inc
stc
lcall
sbb
clc
add
inc
loop
je
lret
jg
stos
lock
or
and
repnz
adc
mov
fldt
push
call
shrl
or
ljmp
push
mov
and
push
mov
adc
inc
clc
sti
ja
cmc
sti
call
psubsb
lcall
jp
dec
cmpl
enter
les
movb
mov
in
push
loopne
pop
mov
loope
mov
call
xchg
test
cmc
ss
jge
push
lea
sarl
sti
or
push
add
xor
push
ja
or
pusha
cltd
cmp
xor
xor
xor
rcrl
jl
mov
and
stc
jo
pmovmskb
pop
push
add
dec
and
test
jne
test
mov
add
std
lahf
and
adc
jns
sub
cmp
xchg
scas
lock
inc
add
cmp
push
or
or
push
cmpl
mov
adc
mov
or
adc
mov
rcll
mov
lods
and
or
mov
jbe
cmp
test
je
or
add
jb
jmp
dec
ret
sbb
or
mov
xor
aaa
jb
push
mov
push
pop
mov
insb
mov
adc
dec
je
sub
adc
push
jle
bound
xlat
js
push
out
and
cld
sub
inc
insb
jmp
popa
and
fs
or
inc
nop
dec
lods
adc
push
xor
push
add
push
int3
mov
or
je
sub
and
xor
cmp
push
mov
test
inc
dec
loop
cmp
push
ror
test
daa
scas
mov
decb
mov
jb
bound
mov
adc
mov
adc
dec
sub
imul
and
por
mov
lods
rcl
xchg
add
xchg
sbb
dec
aam
mulb
pop
dec
les
xor
cmp
or
aas
mov
dec
push
mov
inc
mov
inc
adc
adc
jge
lock
push
inc
xor
push
pop
sbb
sbb
ror
mov
sub
int
cmc
mov
inc
push
pop
xchg
or
adc
dec
and
mov
jg
add
cmp
les
stc
mov
cmp
jne
xchg
push
pop
pop
push
test
fwait
inc
aas
cmp
push
pop
mov
and
push
xchg
cs
push
sub
inc
fwait
push
dec
xchg
hlt
stos
push
sub
xor
mov
stos
jmp
mov
xlat
cmp
xchg
ljmp
das
mov
fs
cmp
push
rolb
or
iret
push
cmc
jp
xchg
adc
pushl
pop
push
pop
adc
mov
aam
cs
adc
addb
out
negl
outsb
pop
lock
pop
push
adc
ret
mov
pusha
add
adc
push
pop
sbb
xchg
push
cli
jne
out
cmc
lcall
mov
stc
sub
cmp
stc
mov
cltd
in
mov
adc
pop
cli
mov
dec
lock
mov
lods
add
and
sbb
inc
fsubp
test
inc
outsl
xchg
test
or
inc
push
pop
push
dec
adc
in
mov
mov
popf
sub
adc
mov
push
jge
push
inc
xor
sub
add
adc
mov
mov
jbe
in
push
mov
je
sub
sub
mov
scas
add
mov
xlat
loopne
call
sub
cmp
xor
mov
xchg
xchg
xchg
inc
or
jb
or
sbb
sti
inc
jae
in
sbb
xor
inc
xchg
jbe
inc
nop
mov
cmpsl
mov
inc
xlat
push
mov
jmp
stos
mov
inc
stc
adc
jmp
jg
stc
adcl
xchg
shll
xchg
cmp
xchg
sub
xchg
mov
popa
inc
out
enter
mov
popf
enter
push
cmp
lret
dec
lahf
enter
xchg
scas
movsl
mov
pushf
outsl
mov
mov
mov
sub
add
cmp
jns
push
xor
mov
lret
ljmp
dec
cmp
pop
jbe
mov
sub
imul
jge
fstpl
movsl
adc
push
pop
das
adc
fcmovbe
adc
cmp
andb
js
andb
jb
lret
inc
inc
cltd
aas
sub
jecxz
jmp
mov
icebp
jmp
mov
xor
adc
test
shll
mov
adcl
ljmp
hlt
hlt
popa
pusha
lods
adc
xor
dec
mov
stc
bound
lock
dec
adc
mov
cmp
in
xchg
xchg
adc
std
rol
jmp
mov
jg
icebp
imul
int3
dec
xchg
mov
std
pop
stos
pop
and
mov
cli
mov
sbb
lret
adc
inc
mov
push
jbe
pop
push
push
push
pop
pop
repnz
mov
movl
lds
bound
lods
stc
adc
xor
cmp
pop
push
sub
enter
cmp
mov
addl
cmp
les
sub
or
or
cmpl
cwtl
sahf
or
jne
pop
mov
std
dec
sbb
pop
and
adc
adc
sub
sub
aaa
pop
push
lret
fidivrl
or
fnsave
shll
scas
std
test
test
stc
icebp
cwtl
in
sub
sbb
xchg
and
inc
pop
test
cld
sub
sti
cmp
shll
lock
push
adc
mov
cmp
das
je
xchg
test
push
or
movb
hlt
jg
test
mov
nop
dec
mov
lcall
lret
sub
leave
cmpb
enter
xor
xor
sbb
adcl
jmp
adc
out
or
pop
add
movsbl
mov
or
repz
inc
pop
cmpl
pop
push
push
in
cld
outsl
mov
sub
test
loop
mov
adc
cmc
inc
add
add
pop
je
jb
or
or
xor
sahf
sbb
lcall
lock
popf
dec
cmp
jg
mov
popf
and
pop
pop
ret
inc
sbb
fisttpll
mov
mov
xchg
cmp
lahf
orl
xchg
pop
loopne
in
adc
pop
test
mov
xor
push
imul
insb
lret
mov
xor
push
jno
mov
adc
mov
mov
sub
dec
fsubp
fcomps
mov
aam
pop
out
sar
dec
and
fwait
clc
and
cmp
xchg
xor
imul
and
popa
mov
push
test
aad
push
xchg
mov
notl
xlat
das
icebp
lahf
cmpsl
aam
lret
jnp
adc
jno
insb
cli
add
pop
cld
sub
cltd
in
sbb
je
cld
mov
lcall
fbld
scas
pop
xchg
hlt
leave
push
loopne
test
push
cmpsb
xchg
rorb
xor
nop
pop
adc
mov
fcoml
cld
jmp
push
push
sbb
add
sub
sub
out
sub
dec
dec
in
jg
push
mov
mov
and
je
mov
mov
sub
mov
or
xchg
or
orb
inc
push
xchg
cltd
xor
stos
repnz
adc
sub
push
les
js
in
cltd
leave
and
fwait
std
adc
mov
and
jno
xchg
mov
add
popf
mov
and
adc
dec
cmpsb
sbb
pop
fadds
nop
push
pop
in
mov
sbb
push
mov
adc
subb
sub
cmpsl
dec
cmp
mov
xor
movzwl
and
add
cmp
push
adc
inc
fwait
or
insb
add
cmpl
not
cwtl
adc
outsl
add
cmpsb
sub
xchg
sub
or
inc
sti
in
push
jle
adc
lea
sbb
sbb
dec
add
std
popf
movsl
fsubs
dec
adc
push
arpl
inc
jp
pop
push
mov
mov
ret
sbb
push
pop
adc
jbe
movb
xchg
scas
inc
in
xor
int3
add
mov
ja
push
shll
ljmp
and
mov
les
cmp
movsl
pop
adc
push
xchg
cmpsl
into
xchg
mov
cltd
outsb
jmp
in
shlb
lcall
dec
xor
call
or
rolb
and
fildll
lret
push
sbb
lods
adc
fcomps
cltd
leave
outsb
insl
cmp
pop
adc
adc
and
push
dec
push
movsl
cmpsb
sbb
cld
aam
movsl
add
clc
dec
out
scas
inc
adc
sbb
mov
cld
push
stos
dec
cmp
add
or
cmp
push
jne
xor
ds
pop
adc
mov
dec
adc
fsts
mov
pushf
andb
loopne
or
pop
insb
mov
xor
scas
sub
cmp
mov
fidivs
inc
push
and
pop
sub
cmp
stc
test
mov
pop
adc
movsl
repnz
mov
xor
addr16
sub
lods
mov
or
or
in
adc
or
cmpb
pop
xchg
cs
inc
rorl
ljmp
dec
fsubl
popf
push
out
pop
std
shrl
jmp
test
leave
adc
shlb
jl
cmpsl
push
ja
dec
pop
je
jb
cmp
aad
adc
push
mov
testl
push
and
pushf
mov
sbb
sbb
stc
jno
dec
push
dec
notb
sahf
cmp
dec
scas
imul
cld
je
icebp
and
jne
sbb
daa
jle
push
mov
pop
xchg
push
adc
pop
cmp
mov
jge
rolb
jns
add
ds
pop
xor
inc
call
pop
mov
popf
xor
cwtl
sbb
and
out
or
fimuls
loope
mov
hlt
mov
stc
sub
push
mov
mov
push
jl
pop
jle
adc
push
insb
push
mov
enter
xchg
orps
pop
das
cld
inc
mov
daa
jge
int3
push
fdivr
fnstsw
jns
fs
and
orb
adc
int3
push
cmp
lods
jne
cld
mov
pop
daa
lods
mov
pop
xchg
adc
iret
mov
int3
notb
sahf
jp
scas
push
add
les
pop
movl
push
out
movsl
mov
aam
cli
test
lock
dec
repz
mov
lods
inc
lcall
adc
hlt
mov
mov
insl
bound
push
xchg
ret
adcl
sbb
sub
lds
xor
dec
call
rorb
ror
inc
fcoml
fsubl
mov
inc
aam
push
adc
insb
cltd
andl
cmp
dec
call
push
and
jb
cmp
cmp
ficomps
mov
in
fistpll
lahf
pop
ljmp
xchg
push
sub
xchg
xchg
jmp
adc
data16
mov
rcrb
dec
scas
or
jae
push
push
add
lret
lock
dec
popf
or
adc
mov
mov
scas
sbb
aas
pop
out
push
fs
andl
adc
push
enter
stos
sub
enter
aam
aaa
mov
jge
popf
bound
lock
das
int3
clc
mov
mov
or
mov
leave
xchg
mov
ss
movsb
dec
rorb
dec
sub
popa
movsl
inc
fwait
mov
mov
pop
ja
shrl
inc
sub
dec
dec
rcrb
add
jne
mov
adc
sbb
xchg
jno
cltd
pop
sbb
push
inc
lods
ss
faddp
cmpb
test
xchg
dec
fadd
jmp
adc
mov
adc
ss
out
cld
out
outsb
and
adc
jl
es
xor
lahf
icebp
inc
cmpsl
lock
mov
movsb
and
es
cmpsl
cld
or
rcl
sbb
sbb
les
leave
in
push
adc
pop
or
jae
sub
js
dec
sub
mov
jbe
adc
dec
mov
dec
jg
scas
les
add
sub
popf
or
dec
testl
mov
or
mov
arpl
cli
ss
pushf
xchg
push
xchg
dec
outsl
les
lret
sbb
jp
std
push
testb
jp
push
or
push
pop
adc
mov
lea
inc
inc
cmp
cmp
push
inc
ja
dec
or
call
call
cmp
xor
adc
inc
dec
test
lcall
js
xor
jno
sub
adc
xor
add
mov
or
push
clc
push
sub
push
cmp
aam
aas
test
push
imul
dec
and
jno
dec
inc
mov
lods
stos
mov
push
push
jp
cmc
push
push
scas
sti
in
xor
push
mov
inc
orb
push
dec
jae
dec
sub
push
pop
ja
inc
pop
outsl
out
or
lods
jl
sbb
ljmp
push
stos
mov
adc
mov
std
call
mov
pop
sub
rol
xor
push
shll
lahf
and
imul
ja
xor
inc
pop
sub
or
adc
sub
push
fcomps
or
xchg
pop
xchg
loopne
or
mov
or
loop
jnp
inc
cmp
mov
push
push
in
pop
add
push
sub
add
shlb
lock
loopne
hlt
rorl
inc
pop
test
lock
movsl
lcall
jle
pop
sub
mov
inc
inc
les
test
add
shrb
in
inc
sti
push
push
and
sti
inc
push
and
enter
pop
adc
cmp
xchg
rclb
les
mov
inc
enter
in
cld
inc
push
xchg
mov
inc
mov
cltd
aas
jne
icebp
mov
sbb
daa
push
in
dec
cli
mov
mov
xchg
jnp
sti
adc
jmp
xchg
inc
pop
ret
aad
clc
aad
mov
in
sbb
cmpb
adc
imul
mov
lahf
inc
and
pop
jl
outsb
push
hlt
push
or
cmp
cmp
sub
out
pop
push
cmp
ljmp
mov
loop
xor
xor
ret
jbe
cmp
shrb
push
push
lcall
call
in
add
add
push
add
jno
sub
je
jae
outsl
sub
aad
mov
pop
add
dec
inc
push
xlat
enter
jmp
or
sub
dec
mov
or
les
sub
sbb
or
test
add
xchg
or
arpl
fs
push
hlt
dec
sbb
xchg
mov
jne
pop
cmp
cwtl
mov
mov
xchg
imul
push
push
lds
addr16
sub
dec
jle
lds
test
or
or
and
fwait
jbe
inc
add
jg
ss
inc
inc
adc
int3
icebp
pop
jmp
mov
leave
and
push
sbb
mov
jle
pop
inc
aas
push
jge
in
mov
pop
and
clc
ret
fistpll
inc
add
adc
or
jmp
cld
push
mov
mov
push
push
and
or
lods
pop
push
sub
test
icebp
adc
call
mov
lods
popf
mov
adc
and
push
fmull
fisubl
sbb
mov
pop
xlat
adc
adc
aas
test
push
in
test
jl
pop
mov
lret
daa
dec
hlt
mov
jne
sahf
mov
xor
and
inc
cld
pop
pushf
fnstenv
push
mov
dec
daa
int
or
leave
push
cli
sub
mov
and
pop
xor
out
sbb
inc
jbe
mov
lea
and
aam
or
test
inc
sub
adc
jb
push
dec
adc
mov
push
movsl
data16
mov
mov
femms
add
mov
add
cmp
loop
sub
nop
popf
jecxz
dec
push
jne
mov
fs
or
mov
push
cmp
cmp
pop
out
dec
push
jmp
mov
cmp
lret
xchg
jae
je
mov
add
mov
js
jb
insb
sti
out
mov
mov
and
stc
pop
add
and
inc
cld
or
push
jmp
ss
and
mov
or
sub
cmpsb
add
jmp
cmp
jbe
dec
enter
and
add
clc
dec
push
or
andnps
ret
lahf
inc
push
jmp
xchg
dec
pop
add
dec
adc
cmp
add
int
hlt
jne
stos
stc
loope
and
sbb
fadd
lret
test
mov
and
inc
pop
sub
stos
cli
fucomp
daa
pop
fxch
adc
orl
es
shl
enter
into
clc
push
cmpsl
jle
push
fnstcw
push
sti
inc
and
fbstp
push
daa
mov
shrl
imul
dec
inc
jne
xchg
mov
xor
daa
dec
xor
mov
jp
pop
inc
fdivr
jbe
push
les
lret
imul
insb
cmp
push
inc
scas
add
adc
daa
enter
sub
dec
or
rcrl
fcoms
cld
push
sub
in
cmpsl
adc
and
pop
or
mov
sub
sub
jne
push
mov
dec
aam
dec
test
test
pop
leave
outsb
inc
into
lods
push
inc
cmp
add
jmp
xchg
push
push
daa
xor
daa
mov
adc
push
xor
sti
add
ljmp
lea
mov
dec
in
imul
sbb
repz
and
pop
mov
jne
jb
mov
sub
push
cmpsl
int3
cltd
adcb
mov
popf
xchg
ljmp
add
push
push
out
les
and
dec
mov
xor
sub
xor
xor
mov
push
stos
dec
sub
xchg
out
or
out
mov
push
inc
pop
and
imul
mov
push
fcomps
dec
daa
mov
mov
mov
sbb
pop
xchg
cli
and
test
lea
lods
pop
xchg
mov
push
adc
add
cmp
je
xlat
iret
xor
add
rorb
decl
jo
mov
enter
lods
imul
push
xor
xchg
push
test
push
xchg
xor
jbe
lds
pop
pusha
adc
pop
insl
shlb
shrb
cld
imul
sbb
scas
inc
mov
sub
jl
pop
test
pop
adcb
test
enter
cld
daa
clc
mov
loop
pop
in
lock
push
add
push
cmpl
sub
mov
or
or
inc
adc
mov
pop
mov
add
in
repz
dec
push
ret
rclb
lock
popf
lds
xchg
push
scas
cmpsb
lds
adc
jmp
repz
sub
adc
and
jb
cltd
adc
push
adc
add
dec
cld
mulb
stos
mov
pop
in
add
shl
stos
inc
out
cmc
lods
cmpsb
inc
lock
add
cmp
scas
shrb
dec
test
pop
or
fimull
js
test
movsl
notl
mov
outsl
data16
mov
sub
mov
int
adc
adc
mov
pop
les
adcb
or
xchg
sti
cmpsl
hlt
jp
mov
dec
cmp
or
inc
push
std
or
cmpsb
mov
mov
mov
imul
adc
test
outsb
mov
cmp
sub
jmp
dec
cmpsb
cmc
lcall
mov
dec
inc
mov
xchg
adc
adc
or
fnclex
xor
jbe
mov
shlb
cmp
mov
push
inc
cltd
adc
rolb
xlat
inc
scas
mov
push
adc
sub
lods
and
pop
push
sub
mov
insl
lods
cli
push
dec
jne
adc
add
test
mov
mov
pop
mov
gs
xor
sub
and
sub
pop
clc
jg
and
subl
enter
ret
add
aas
iret
cmp
mov
je
push
mov
or
sub
cmp
outsb
idivl
imul
or
dec
pushf
int3
rcrb
xchg
push
cmp
sub
xchg
push
fs
jb
pop
jmp
test
inc
xchg
dec
jmp
mov
roll
push
es
pop
cmp
gs
out
xor
fs
sub
push
lds
and
mov
sbb
push
push
sbb
adcb
out
push
mov
jge
mov
js
subl
aas
and
mov
adc
into
fnstsw
jae
and
psubq
push
dec
rcll
outsb
pop
push
scas
dec
frstor
adc
mov
test
mov
aaa
add
and
insb
test
sub
fs
push
mov
jmp
xor
adc
inc
xchg
mov
push
mov
inc
ret
push
mov
mov
std
cmp
dec
arpl
loopne
mov
xchg
xchg
lret
push
test
dec
insl
jmp
mov
out
mov
lock
js
push
mov
test
xorb
and
pop
pop
jp
sbb
inc
lods
adc
adc
test
test
xor
sub
call
sub
add
mov
movsb
xor
add
and
lcall
andl
in
mov
pop
push
sbb
push
andb
cmp
adc
cmp
and
push
gs
or
pop
jmp
cltd
pop
loope
lock
adc
rcl
sub
sbb
sub
jns
ret
pushf
push
les
lret
adc
mov
and
hlt
je
adc
add
add
add
jne
mov
out
shlb
pop
mov
jge
test
xor
mov
sti
jne
jmp
mov
mov
ds
mov
repnz
and
stos
clc
jp
mov
pop
test
andl
test
or
jae
das
or
loop
rolb
pop
call
in
and
xchg
mov
inc
fsubs
dec
xchg
aam
in
imul
repnz
sbb
imul
and
loop
fs
stc
pop
mov
inc
nop
xchg
lock
adc
out
jmp
cmc
xchg
push
nop
push
mov
fcoms
pop
pusha
push
pop
and
comiss
and
push
mov
mov
mov
aaa
push
jne
mov
test
push
inc
insl
add
hlt
jne
and
push
xchg
cmc
popf
dec
pop
sub
add
jge
and
mov
and
and
bound
inc
popa
scas
or
mov
repz
inc
and
ljmp
cmpsl
pop
stc
mov
stc
mov
bound
frstor
je
pushl
push
stos
cmovo
daa
mov
dec
lods
sub
je
mov
pop
pop
jge
popa
cmpsl
lahf
lret
mull
pop
mov
mov
or
adc
loop
sti
add
pop
ret
scas
mov
jne
test
fisubrl
adc
dec
sahf
mov
adc
jbe
loop
adc
lea
adc
cmpsl
and
adc
xchg
push
enter
jmp
mov
pop
inc
shrb
jo
scas
pop
inc
mov
andb
jo
push
sbb
enter
js
loop
popf
xchg
movsb
test
test
and
jbe
in
jbe
in
adc
test
xchg
repnz
lods
push
adc
ja
adc
ja
or
ja
adc
mov
adc
dec
mov
mov
dec
cld
idivb
and
js
or
sbb
cwtl
jp
paddd
push
sti
test
mov
or
ret
movswl
or
jp
scas
or
jne
stos
jg
cmpsb
sub
or
push
push
push
mov
add
les
lea
dec
xchg
sbb
pop
aam
adc
sbb
dec
stc
data16
call
jmp
std
mov
out
pop
add
pmuludq
dec
clc
mov
dec
inc
xchg
popa
dec
dec
in
adc
adcl
lock
cmpb
iret
rcrb
mov
aas
xor
mov
jne
outsb
sbb
je
popf
adc
xchg
movsb
pop
outsb
mov
fs
jl
data16
in
xchg
xlat
push
into
sub
and
hlt
insl
lcall
pop
cmp
jle
rolb
cmpb
or
and
mov
popa
mov
test
xchg
je
adc
or
repnz
and
roll
mov
xchg
sub
adc
je
cmp
aaa
or
ja
jmp
adc
bnd
nop
lods
mov
xor
ret
outsb
stos
push
xor
cs
outsl
xchg
bound
aam
and
getsec
test
sbb
and
sbb
rcrl
mov
mov
and
mov
insb
std
xor
in
jmp
pop
das
jecxz
mov
lret
mov
movsb
inc
js
mov
icebp
and
sbb
push
dec
fsts
insb
push
xor
std
or
push
out
shlb
add
xchg
dec
add
movsl
push
mov
sub
jl
std
mov
rclb
jo
xor
or
xchg
sbb
mov
xor
loopne
shlb
push
dec
rorb
jp
aam
sub
mov
fimuls
in
int
ljmp
sub
pushl
adc
into
or
jge
xor
xor
orb
push
fdivr
int3
inc
out
mov
mov
cmp
mov
cltd
or
add
push
xor
xchg
inc
in
ljmp
adc
mov
hlt
subb
fiaddl
jmp
push
test
stc
daa
hlt
pop
test
add
nop
ficompl
rcrb
and
pop
rorl
inc
sbb
lods
xchg
cli
movsl
jne
sar
push
sub
push
xchg
jg
sahf
aas
cmp
sbb
cltd
push
mov
mov
shlb
adc
adc
cltd
jo
lret
outsl
cld
imul
cmpl
in
inc
push
mov
shl
test
dec
sbb
test
ret
dec
or
outsb
imul
add
mov
fcoml
mov
pop
nop
mov
xchg
xor
fmuls
mov
and
stos
test
push
scas
in
adc
and
add
inc
int3
adc
xor
pusha
rclb
adc
lret
inc
inc
nop
sub
dec
or
scas
les
cld
add
adc
pop
shr
ror
jg
comiss
sbb
les
inc
mov
inc
mov
or
and
push
leave
jbe
sbb
jl
xchg
ja
jg
pop
dec
pop
out
and
mov
movsb
adc
mov
push
dec
fwait
push
out
fdivs
je
popf
movsl
sub
push
cmpsb
sbb
sub
test
add
cmc
nop
imul
lods
aam
xchg
pop
mov
lcall
or
mov
ljmp
xor
into
insb
pushf
inc
add
mov
jle
jne
dec
fdivrl
inc
ret
inc
xor
nop
xor
dec
sbb
cs
dec
sti
int
xor
cld
mov
enter
push
es
adc
insb
lcall
rcrb
sbb
and
ficoml
enter
lret
pop
addr16
movsl
les
pop
sub
xor
xchg
ja
orb
orl
les
or
outsl
rorb
xchg
pop
and
into
rolb
mov
sbb
push
fs
pop
inc
orb
mov
into
add
shl
sbb
dec
or
push
xchg
pop
adc
sbb
xchg
mov
imul
cmp
mov
adc
push
cmp
dec
stc
rcrl
mov
inc
adc
jmp
push
push
test
mov
pop
mov
dec
lods
movsl
or
inc
ficoml
sub
gs
cmpsl
xchg
cmc
dec
popa
ret
or
mov
pop
mov
cmpsw
fsubrl
sub
divl
push
or
cmpl
jmp
call
push
das
and
add
dec
mov
xchg
rcrl
int3
leave
insb
mov
ja
xorb
popa
dec
sar
push
adc
and
shlb
pop
push
adc
push
xchg
pop
test
out
mov
insl
xor
jno
sar
mov
enter
iret
or
sbb
leave
jns
jg
repnz
cs
sub
cmp
sbb
inc
push
or
enter
or
testb
popa
xlat
push
rcr
cld
icebp
jne
popf
adc
mov
add
movq
cmc
cmp
and
jns
adc
mov
xchg
ljmp
push
dec
add
fcoml
inc
sub
jne
cmp
nop
lods
xchg
shrl
inc
int3
cld
and
fwait
lods
cmp
int3
gs
cltd
pusha
adc
int3
ss
loopne
inc
sub
or
adc
jge
lcall
inc
push
cmp
cmpsl
dec
daa
cmp
and
repnz
mov
mov
icebp
or
jle
movsl
jne
inc
xchg
int3
mov
jle,pn
or
mov
xor
jl
imul
pop
push
pop
test
leave
push
ja
push
mov
aam
out
cmc
adc
pop
pop
push
and
cmp
lods
into
addr16
mov
lods
jmp
sahf
cmp
dec
pop
movsl
pop
sbb
pop
adc
roll
adc
daa
pop
jmp
shlb
adc
out
pop
mov
in
pop
jo
jg
cwtl
and
rclb
shrl
cmp
popf
gs
dec
aaa
mov
inc
ret
xchg
mov
cmp
in
sub
nop
mov
es
pop
out
movsb
lods
inc
push
je
mov
cld
push
pop
xchg
dec
push
cmp
lds
xlat
fs
lea
mov
das
and
and
push
loopne
mov
cmp
nop
mov
or
and
enter
push
adc
fisubrl
sub
mov
ss
scas
mov
aaa
adc
je
inc
enter
push
push
and
mov
int
aas
inc
jne
adc
mov
test
adc
add
dec
jmp
lock
aad
dec
into
xor
aam
fcoms
or
add
shl
fiadds
add
dec
rcrb
and
or
fsubl
int3
fnop
sbb
hlt
sub
mov
icebp
int3
push
pop
mov
or
push
xor
mov
inc
cmc
loop
and
xchg
or
cld
cmp
jmp
subl
and
testb
jecxz
les
testl
mov
insb
je
lds
fwait
test
mov
lcall
push
insb
cld
add
jnp
cmp
insb
decb
dec
cwtl
stos
pusha
jle
andl
cmp
gs
es
lcall
lea
push
addb
push
mov
sbb
sbb
mov
pop
ljmp
data16
mov
addr16
push
sbb
mov
add
aas
adc
dec
int3
pop
aad
fsubrs
push
aad
mov
xor
inc
rol
loope
ljmp
int3
lea
mov
addr16
pop
ds
cmp
stos
adc
push
sti
ret
daa
mov
data16
mov
push
icebp
loope
or
jmp
call
dec
rol
sub
or
xor
lods
xor
or
or
add
inc
aam
adc
loopne
push
decb
jmp
push
mov
ret
lret
sub
adc
mov
inc
in
std
adc
les
push
xor
clc
mov
push
jl
lock
cmp
call
xchg
stos
push
loop
mov
sar
shll
inc
pop
push
mov
shll
in
jo
xchg
xlat
fnstcw
jae
xchg
mov
mov
sar
sub
xchg
in
out
adc
sar
push
mov
adc
std
cmpsl
in
sub
jnp
popf
in
dec
or
xor
test
sbb
push
int
pop
dec
jno
test
jo
mov
mov
cltd
push
gs
orl
shlb
out
jne
cs
dec
add
stos
add
push
jle
and
push
jns
xchg
in
bound
pop
fisubrl
pop
xor
or
je
data16
lock
add
or
sub
adc
jmp
fnstenv
subl
int3
dec
ret
jne
into
dec
lahf
xor
jmp
mov
mov
pop
and
add
inc
test
mov
out
cmpsl
shr
add
add
push
pop
and
scas
mov
inc
call
lock
cmc
push
mov
jecxz
loopne
pushf
add
jmp
aaa
cli
int3
or
and
dec
movsl
push
push
xor
cmp
call
mov
flds
icebp
clc
add
inc
inc
xor
test
icebp
inc
mov
lods
repnz
cmp
fiadds
mov
and
xchg
loopne
cmp
mov
cmpsb
insb
pop
leave
jno
repnz
xchg
loope
in
ret
adc
inc
inc
xchg
adc
repz
rclb
loope
push
popf
ret
imul
jle
inc
xchg
push
shr
daa
lea
sub
jl
adc
fwait
cmp
mov
cmpsb
or
add
cli
test
sti
mov
stos
pop
sahf
push
push
outsl
ror
pop
mov
push
push
aas
mov
clts
pushf
and
jl
cli
sbb
jecxz
pop
icebp
push
mov
xchg
sbb
xchg
mov
xchg
clc
stos
cmpsl
fimull
add
or
and
inc
fsub
fldl
rcr
lods
adc
mov
test
test
out
mov
in
mov
adc
test
movsb
mov
movzbl
sahf
add
sti
mov
push
bound
jmp
dec
push
jo
dec
xchg
out
adc
bts
ss
fisubrs
leave
scas
out
or
mov
mov
xor
push
push
gs
mov
or
adc
xor
xchg
and
or
sbb
inc
and
sub
mov
sarb
test
sbb
sarl
add
mov
pop
mov
adc
jge
mov
dec
sub
xchg
mov
xchg
jns
jecxz
daa
or
int
sbb
mov
push
je
push
inc
mov
and
push
int3
lret
rclb
pop
mov
shl
sbb
cld
push
daa
inc
push
dec
push
clc
sub
das
mov
xchg
pop
mov
andps
xor
and
jmp
movl
adc
add
add
pop
jl
loop
xchg
shr
pop
xchg
ja
push
jne
ret
cmp
dec
js
hlt
xor
xchg
push
mulps
cld
ljmp
in
lret
test
mov
mov
sbb
mov
sbb
inc
pop
lods
mov
push
out
gs
out
sahf
imul
pop
lret
loopne
mov
jns
mov
out
xchg
mov
inc
sbb
and
mov
scas
cmp
lods
divb
add
cmp
pop
mov
and
push
cmp
lock
push
cmovne
xor
inc
sarb
rorb
lahf
jns
xor
jbe
push
jg
pop
in
lret
mov
hlt
mov
cmpsb
gs
enter
orb
adc
and
jp
xor
jl
adc
loope
inc
cmp
enter
inc
mov
xchg
push
push
dec
sub
inc
jle
xchg
sub
or
push
adc
push
xchg
add
mov
sti
push
ret
push
mov
push
inc
out
xchg
sahf
push
lahf
jle
dec
stos
and
cmpsl
xchg
xchg
fdivs
jbe
mov
pop
mov
or
imul
sarl
inc
leave
sub
aad
pusha
ret
decl
sub
fs
sub
xchg
xchg
push
fisttpll
push
aam
add
lods
cmp
enter
lock
out
popl
mov
test
sub
std
push
inc
insb
xchg
lcall
lahf
adc
push
aam
push
jge
xchg
mov
out
jl
imul
adc
ret
xchg
scas
into
clc
and
push
push
add
lock
sbb
jmp
push
iret
pop
jo
cmp
jnp
dec
jmp
pmaxub
mov
dec
je
mov
add
sbb
cld
inc
xchg
pop
adc
mov
push
cwtl
bound
jle
daa
jge
jecxz
cs
outsl
mov
lock
add
pop
imul
repz
mov
int
scas
fldcw
add
xchg
add
push
lret
xlat
arpl
inc
adc
jg
cld
xchg
and
and
adc
jo
test
test
adc
xor
pop
adc
xor
xchg
test
les
mov
mov
addr16
cltd
add
test
mov
or
adc
cmp
adc
fmuls
inc
sbb
faddl
inc
loopne
and
stos
clc
sub
sbb
add
jno
push
mov
and
push
pop
fs
cs
mov
in
test
pushf
cs
xchg
icebp
cmp
leave
in
push
push
ffreep
push
inc
push
add
push
inc
inc
shll
nop
push
cltd
lret
arpl
pop
out
fisttps
test
ret
cmp
jo
pop
mov
and
jle
mov
std
rcrb
mov
mov
enter
mov
jno
jmp
inc
ret
mov
push
mov
idiv
or
jl
inc
add
lds
mov
lock
test
mov
jnp
dec
or
mov
orb
xchg
xor
sub
jne
inc
sub
movsl
add
jmp
mov
ret
outsb
jo
mov
and
aam
dec
lods
mov
mov
sbb
push
test
lods
test
push
sub
out
inc
adc
cli
push
push
cmp
mov
rorb
or
shlb
mov
scas
lock
mov
enter
cmp
and
adc
loop
and
pcmpgtw
pop
int3
dec
cmp
dec
xchg
or
add
adc
das
push
lahf
imul
dec
fcomps
shrl
orl
adc
movsb
cld
add
mov
pop
mov
mov
stos
dec
pop
les
mov
push
mov
pop
call
subb
adc
mov
pop
xor
rclb
xor
rolb
jl
lods
daa
jne
push
inc
adc
add
ret
fs
jnp
mov
add
mov
add
js
mov
iret
add
or
and
dec
jl
fucomip
inc
shl
imul
popa
inc
sahf
inc
cmp
mov
pop
shll
or
push
xchg
fmull
aam
inc
not
and
dec
clc
clc
jle
loop
lea
inc
sbb
push
cltd
outsl
jp
xchg
ds
and
mov
mov
jo
adc
xchg
inc
pop
mov
mov
fstps
sahf
mov
cmp
imul
sub
orb
cmp
or
movzwl
ret
push
sub
cli
add
adc
mov
jl
adc
push
push
out
das
sub
push
orb
cmp
cmpl
and
xchg
add
pop
mov
mov
add
fwait
jl
or
dec
and
add
sbb
shrl
adc
movsl
sub
xor
cwtl
aaa
pop
sub
push
lds
ds
jne
or
adc
fsts
push
fnsave
rorb
cld
jne
lahf
dec
sbb
hlt
jne
inc
in
cmp
and
add
cmp
jg
mov
fstpt
and
push
je
mov
xchg
in
push
in
in
xchg
cmpb
sbb
adc
mov
pop
add
jnp
or
out
cmp
jge
xchg
mov
pop
sbb
cmp
ret
sbb
jbe
cld
push
push
jb
mov
insb
fbld
push
mov
cmp
lock
push
movsb
sbb
sbb
sarl
scas
pop
adc
dec
insb
test
push
mov
pop
pop
jno
repz
gs
cli
mov
inc
jno
loope
or
fadd
je
and
cmpsl
push
xor
pop
mov
add
pop
test
les
insl
xchg
dec
mov
mov
push
loopne
jp
fcoms
cmp
pop
jne
mov
hlt
and
call
sbb
dec
loop
hlt
mov
mov
cs
jnp
cmp
and
dec
pop
clc
pop
mov
xchg
dec
adc
mov
push
xor
repz
jbe
jo
push
cmp
mov
mov
pop
xchg
jmp
add
nop
xchg
lds
push
pmaddubsw
dec
mov
lods
pop
mov
cwtl
mov
pop
in
mov
ret
popa
call
xorb
js
shr
imul
fs
mov
jl
push
aaa
cmp
bound
jg
movsl
dec
inc
das
xorl
and
inc
jp
fnsave
mov
call
or
sbb
pop
dec
sub
int
mov
hlt
jg
jge
leave
out
dec
xor
pop
sarl
mov
dec
xor
jg,pn
cld
xchg
mov
jne
popf
mov
scas
push
pop
add
sbbb
adc
pop
int3
mov
inc
and
enter
loope
mov
add
daa
lahf
rcrb
xchg
adc
sub
xchg
es
push
dec
inc
mov
fs
pushf
in
sbb
push
in
jmp
fisttps
inc
inc
jne
push
sub
jb
cmp
cmp
hlt
mov
mov
cmp
roll
jle
mov
fbld
nop
inc
test
fadd
sub
fists
sbb
jle
and
notl
mov
imul
add
lock
push
push
cmpsb
sbb
adc
pusha
inc
cmp
lods
push
xchg
or
mov
mov
jo
scas
cmp
es
jle
xchg
shrb
aam
push
out
dec
and
cwtl
stos
dec
lcall
push
cmp
xor
mov
jmp
ret
leave
mov
test
mov
mov
divb
adc
inc
mov
notb
mov
cmpsl
gs
test
dec
mov
pop
jl
pop
cmpsb
je
ja
or
sub
ror
inc
xchg
jne
push
rolb
cltd
pop
or
nop
shrb
mov
fs
lds
in
dec
xchg
xchg
and
imul
sti
lea
sub
xchg
and
mov
lcall
test
push
jmp
dec
or
adc
hlt
mov
insb
adc
push
xlat
adcl
inc
mov
cmp
mov
mov
daa
jle
jno
sbb
clc
aad
mov
sub
or
and
cltd
cld
jnp
mov
cmpsl
mov
movsl
or
call
cmp
xor
into
push
cs
pop
or
stos
ja
adc
in
popa
push
jae
push
add
xor
adc
push
cwtl
imul
loopne
pop
and
mov
pusha
subl
xchg
out
popf
into
lret
and
std
popf
xor
inc
lock
sbb
mov
pop
mov
and
mov
push
in
adcl
dec
fbstp
iret
mov
adc
insl
mov
pop
faddl
lahf
mov
pop
subl
and
imul
stc
push
in
push
pop
sahf
int
or
cmp
ja
dec
addl
adc
gs
lods
inc
les
xchg
or
adc
jge
jl
popf
push
vmaxss
int
shlb
xchg
test
dec
mov
inc
jmp
push
add
xorb
push
fs
cld
call
stc
pop
or
inc
cli
push
mov
stos
xchg
mov
pop
repnz
pop
stos
inc
or
mov
stos
test
mov
dec
in
push
adc
add
fs
out
cltd
dec
and
das
lods
aaa
jnp
jge
fmull
or
addb
push
ss
sbb
pop
push
shrb
cltd
cld
sarb
scas
testl
fstl
mov
cmpsl
inc
mov
loope
lods
not
and
out
pop
push
jns
stc
lret
push
out
ds
pop
stos
lret
outsb
or
mov
xchg
adc
mov
mov
sub
aas
and
jne
fbld
xchg
push
xchg
xor
push
cltd
incb
sbb
fists
pop
xor
gs
lret
xor
lods
stos
add
jle
mov
xor
inc
cmp
daa
jl
std
xchg
fwait
push
add
pop
loopne
leave
mov
addr16
rorl
repnz
aam
inc
xor
stos
cwtl
mov
dec
fimull
movsl
test
in
sub
and
or
adc
int3
mov
inc
or
mov
or
push
lock
push
xor
pop
push
cltd
idiv
test
jo
movb
inc
jmp
dec
popa
cmp
push
or
out
jmp
andb
mov
aad
pop
fs
and
or
xor
sti
sub
sbb
syscall
push
mov
mov
movsb
push
test
mov
xchg
inc
enter
xlat
test
lock
hlt
add
add
mov
sub
xchg
lock
or
daa
call
rorb
call
das
sub
cwtl
inc
add
lea
push
loop
jns
out
pop
fisttpl
ret
and
mov
push
hlt
xchg
jp
cld
or
mov
repnz
ss
pushf
dec
in
mov
and
into
daa
sub
xchg
xchg
mov
push
dec
push
addr16
iret
daa
int
push
pop
ficoms
jb
pop
jg
sub
pushl
pop
jmp
mov
scas
push
pop
dec
adc
lret
popf
jg
xor
and
pusha
sub
adc
add
adc
or
inc
sti
daa
mov
jb
or
imul
fucom
popa
xchg
push
sbb
adc
mov
push
adc
mov
leave
fsts
push
aam
outsl
xchg
je
mov
sbb
fstl
jmp
fcmovnu
push
inc
fdiv
jae
dec
pop
std
jle
jmp
out
loopne
test
mov
in
jecxz
push
xorps
dec
adc
jl
dec
idivl
xlat
pcmpeqb
xchg
dec
hlt
add
test
mov
pop
jne
mov
sub
sub
cmp
xchg
or
pop
pop
jl
inc
in
scas
push
hlt
adc
les
imul
fs
push
incb
and
pop
sbb
add
popa
outsl
jg
cmpsb
popa
imul
mov
popa
push
std
jnp
popf
daa
push
jl
sbb
outsb
mov
push
test
jmp
push
mov
std
sub
fnstcw
xlat
cmp
std
je
mulb
cmpb
adc
jmp
or
cs
cmp
test
test
push
aaa
fildll
adc
repz
popa
inc
outsl
sub
enter
stos
xchg
ja
scas
or
adc
mov
aad
xlat
dec
and
mov
fists
in
dec
fidivrs
mov
mov
push
xchg
mov
test
adc
jbe
xchg
ljmp
mov
pop
sahf
inc
nop
or
je
nop
inc
dec
add
cmp
aas
push
mov
push
add
mov
mov
sub
jae
sub
or
and
or
enter
inc
popa
in
test
push
inc
dec
and
xchg
dec
sbb
inc
push
addr16
repnz
dec
aad
xor
inc
push
repnz
mov
push
movsb
push
ds
add
push
sub
in
rorl
packuswb
sbb
sbb
js
mov
dec
ficomps
mov
sbb
xor
dec
inc
test
xor
jno
in
cmc
adc
cltd
pop
jp
jo
push
and
adc
jmp
sub
sub
sbb
or
push
dec
stc
sbb
jecxz
enter
inc
lea
adc
push
or
push
dec
push
lock
mov
or
es
adc
popa
sub
inc
jge
rorb
push
lcall
sbb
sub
and
in
lea
mov
adc
push
push
xor
es
jle
or
shr
xor
xor
cmp
ret
jb
shl
or
add
lods
adc
inc
in
jae
jmp
and
push
and
ret
pop
pop
movl
inc
int
ret
push
ret
mov
or
xor
movsb
in
pop
dec
pop
lods
sub
std
jmp
lret
jl
and
mov
adc
mov
mov
xchg
inc
sbb
pop
mov
out
xchg
sti
sbb
sub
popf
dec
fisubrs
push
gs
popf
rcll
ret
jp
jns
popf
fdivl
aad
pushf
cltd
dec
mov
dec
sub
mov
mov
pushf
enter
bound
insl
mov
mov
xor
add
or
std
jg
pop
jg
lock
loope
sbb
stc
ficoml
jo
xor
testl
sar
hlt
adc
sub
sbb
and
add
sub
int3
xchg
repz
jne
call
mov
push
push
dec
sub
inc
inc
stos
xor
dec
mov
in
sbb
ss
je
test
and
inc
add
cwtl
cmp
jae
jmp
enter
pop
xchg
adc
bound
jne
mov
in
mov
adc
jl
add
call
test
insb
or
mov
mov
imul
inc
sbb
jo
test
xor
aas
add
inc
mov
and
lock
fcompl
out
rol
pop
testb
sub
into
sub
mov
mov
es
sarb
stc
mov
andl
fdiv
lods
sti
xchg
dec
je
je
mov
ds
in
jae
mov
cld
and
cmp
jne
inc
jb
add
fs
push
insb
aaa
xlat
mov
jo
je
xchg
movsl
jge
and
xor
and
push
insb
roll
and
insb
jno
imul
mov
push
jo
xchg
cmp
pop
mov
pop
bound
pushl
mov
sti
dec
mov
mov
xor
cmp
sbb
decl
dec
sub
dec
jnp
aas
imul
xchg
pushf
push
push
mov
push
xor
call
cmc
cli
dec
or
dec
xchg
loope
or
leave
push
pushl
pushf
mov
mov
push
out
mov
clc
mov
int3
xchg
adc
sbb
aaa
cld
aad
lret
push
and
in
and
jne
or
xchg
mov
mov
cmp
inc
xor
pop
gs
ljmp
insb
xor
movsb
pop
in
std
mov
cmp
adc
test
mov
out
adc
jne
fcomip
jge
jle
test
ret
sarb
push
jb
xor
xchg
out
mov
jmp
sbb
lds
insb
testl
imul
and
fs
push
scas
cmp
test
lods
mov
mov
cmpl
adc
sbb
or
push
cmp
dec
xchg
in
xadd
inc
push
mov
cld
fldenv
decl
mov
dec
aam
adc
push
mov
pop
leave
psubsb
mov
cmp
std
or
xor
jg
es
imull
mov
pop
jbe
ds
sub
mov
inc
sbb
testl
push
dec
pop
cwtl
jle
pop
sti
lret
sbb
dec
adc
punpckhbw
jo
pop
std
stc
cmp
dec
idivl
shll
pop
cmp
testb
jge
je
push
or
push
pop
dec
push
subb
xor
and
or
xchg
sar
add
push
popa
clc
das
mov
test
sub
rol
xor
xor
ss
xchg
xchg
mov
enter
push
iret
lahf
inc
sub
push
and
adc
push
aaa
lods
cmc
xchg
cmpb
inc
mov
or
test
fistpl
or
sbb
add
mov
test
std
or
out
movsb
dec
mov
cmc
or
adc
ja
push
push
adc
xchg
call
inc
cmp
subb
push
sahf
xchg
arpl
pushf
dec
stos
fs
mov
xchg
mov
cmp
addr16
out
mov
je
add
cmp
cmp
xor
xchg
ret
pop
or
or
push
ja
adc
test
mov
adc
adc
popa
jl
loop
hlt
add
sbb
sub
pop
aam
hlt
pushl
fmull
jmp
adcb
pop
data16
enter
xchg
jo
test
sbb
mov
inc
xchg
lret
movsb
pop
lcall
mov
rcrl
rcl
jb
in
cmp
rolb
pop
fimull
add
adc
mov
adc
add
repz
adc
je
mov
stc
dec
enter
nop
test
or
mov
popf
pop
sub
pop
dec
fwait
push
inc
inc
adc
imul
lahf
mov
leave
mov
movsl
pop
xor
in
mov
insl
es
fnsave
xchg
ljmp
daa
mov
divb
fcomps
imul
xchg
adc
lahf
in
mov
into
jmp
add
lock
sub
cmpsl
in
xor
cmc
dec
stc
or
xor
icebp
sub
outsl
ljmp
lea
es
mov
sub
mov
add
mov
mov
mov
xchg
pop
jns
daa
popa
out
cmp
movsl
add
aam
push
mov
cltd
dec
inc
inc
push
xchg
out
divps
jge
cltd
jne
sbb
or
jmp
cmp
jmp
and
and
jge
add
fcmovnu
cltd
lea
nop
inc
nop
push
repnz
cmp
adc
adc
cld
rcl
cltd
push
sub
sti
push
mov
mov
sbb
or
push
idivl
pop
imul
jmp
or
adc
push
push
or
sub
popf
pop
in
mov
inc
jg
loopne
inc
dec
xlat
push
je
ret
std
in
adc
sub
je
or
les
cmp
test
fsubl
icebp
push
sbb
mov
jl
add
add
movsl
dec
mov
adc
scas
les
inc
sub
ss
xchg
mov
jne
jle
push
dec
inc
je
push
mov
je
or
jne
xchg
daa
adc
jb
add
cmc
loopne
or
sub
push
popf
ret
inc
jmp
dec
inc
clc
repnz
popf
pop
mov
jmp
cmpsb
or
sbb
outsl
mov
and
jp
insb
jmp
gs
sbb
std
sar
icebp
mov
roll
test
mov
push
aad
movsl
cmp
movsl
dec
js
leave
pop
adc
mov
adc
mov
repnz
mull
out
mov
mov
rolb
add
jne
ljmp
pushf
jp
push
scas
jne
or
pop
add
movsb
jae
cmp
sub
lcall
or
or
js
inc
cmp
jl
xor
fs
cmp
stos
sbb
cmpb
cmp
cmp
rorb
push
cmp
or
cmpsl
inc
cmp
jl
fdivr
or
pop
sub
and
test
in
adc
push
adcb
enter
mov
stos
lea
test
jl
sbb
fistpll
adc
add
pop
inc
sti
dec
clc
sbb
xlat
add
aas
jo
and
add
shr
popa
pop
jl
or
jp
pop
sub
fld1
pusha
ret
xor
adc
adc
mov
xchg
mov
flds
adc
sub
pop
test
add
and
popf
or
sub
test
rcrl
cmc
pop
movsl
sub
pop
addr16
push
hlt
cli
test
sub
xorl
add
cmp
xor
dec
fwait
rcrb
or
push
clc
dec
dec
fs
rclb
mov
dec
sub
xchg
add
mov
push
push
cli
xor
mov
ret
gs
mov
adc
addl
inc
dec
pop
mov
or
add
inc
call
sbb
xor
jb
inc
sbb
and
das
dec
ljmp
mov
in
jne
jecxz
pop
dec
xchg
mov
sbb
sub
leave
xor
stc
sbb
dec
cmp
in
jae
push
and
or
jle
add
jmp
cmp
call
rclb
xchg
in
xor
subl
or
push
je
rorb
push
repz
aaa
push
jnp
sti
repnz
push
cmp
lds
inc
leave
xchg
rcrl
add
loopne
outsl
adc
sbb
dec
aad
mov
and
and
mov
jae
mov
jo
push
clc
dec
movsl
popa
stc
push
fs
ljmp
aad
pop
sahf
lock
subb
mov
pop
jns
shrl
jg
or
xor
xchg
push
mov
sub
ss
jmp
pusha
jmp
sbb
xor
arpl
push
and
and
movsl
ja
es
and
je
pushf
nop
push
das
je
pop
nop
jp
pop
xchg
scas
int3
fistpl
movsl
push
xorl
and
adc
push
mov
xchg
pop
cmpsb
mov
xchg
out
movsl
shlb
or
adc
mov
inc
push
ret
sbb
xor
xchg
push
mov
jmp
and
test
cmp
cmp
decl
outsl
in
xchg
ja
aam
adc
adc
jae
lds
lods
icebp
xlat
in
shrb
adc
daa
icebp
pop
mov
pushf
xchg
and
mov
pop
sub
outsb
pop
test
scas
test
repz
daa
add
outsl
cld
push
mov
test
fists
cmpsl
jns
call
addr16
push
bound
and
jne
sub
dec
mov
sub
je
push
xor
xor
push
test
mov
adc
pop
and
cmp
xlat
lret
dec
lods
lods
sbb
cmp
rorb
stos
mov
sub
fs
cmp
sarb
mov
stos
or
dec
out
imul
pushf
or
mov
inc
les
xor
pop
add
aam
aam
movsl
and
jmp
and
test
mov
cmp
inc
enter
cs
adc
ljmp
mov
or
push
lock
push
fmull
pop
lock
lods
jl
and
dec
lea
or
shl
shll
sbb
mov
enter
push
mov
outsb
mov
jge
inc
add
sarb
stos
and
push
and
rorl
das
int
hlt
das
aaa
adc
mov
xchg
xchg
sub
cmp
xor
or
fsubr
out
bound
add
xchg
jmp
dec
and
add
xor
push
push
jg
popf
icebp
jg
pop
test
jmp
mov
adc
enter
or
cmc
sbb
fdivrl
push
dec
pop
pop
xchg
pop
subl
xchg
jle
sti
and
je
cmp
ljmp
push
and
push
jecxz
daa
or
movsb
pop
push
push
jle
xchg
pushf
or
test
or
and
rcrb
adc
je
fwait
scas
sbb
fildll
test
mov
cmp
jge
sub
pop
jbe
and
pop
hlt
mov
ja
je
lea
stc
jge
add
mov
xchg
mov
lock
outsb
rorb
mov
cmp
ss
sbb
sysret
sub
mov
sysret
sbb
sbb
loop
xchg
daa
or
cwtl
and
nop
mov
test
cltd
push
cmp
orl
or
cmp
xchg
adc
es
sub
add
add
add
aad
mov
add
push
or
mov
add
and
mov
inc
hlt
in
fwait
mov
std
scas
push
xor
pop
sub
add
cmpsb
xor
adc
ljmp
pusha
push
cld
testb
js
jae
fwait
push
dec
je
push
inc
cmp
andl
fwait
mov
inc
out
or
std
or
std
or
std
or
std
or
std
or
xchg
out
bound
pop
fidivrl
jbe
xchg
mov
outsl
call
or
sub
and
bound
jl
mov
inc
xchg
mov
test
cmp
pop
pop
in
jl
mov
mov
xchg
or
test
dec
mov
stc
or
mov
mov
and
jp
sub
push
pop
lea
jge
push
mov
int3
inc
fwait
adcb
test
dec
fs
mov
loop
adc
and
mov
xor
mov
jne
add
push
push
push
push
push
test
mov
daa
mov
sub
ds
testb
mov
jne
orb
cli
int3
popa
mov
mov
or
bound
orl
test
and
xor
sub
adc
mov
movsb
int
inc
push
push
in
fsubs
jg
adc
and
dec
lock
call
adcb
adc
mov
push
rclb
sub
insb
rolb
into
cmp
scas
pop
insb
bound
cvtps2pi
and
lea
add
push
sbb
cs
repnz
jno
xorl
xchg
scas
cltd
mov
pop
push
xlat
movsl
loop
sub
mov
dec
pop
hlt
dec
jne
cmp
push
stc
sbb
dec
arpl
test
testb
lcall
or
cmp
sub
sti
les
xor
dec
hlt
rorl
and
out
cmp
and
jmp
inc
std
cmp
adc
pop
jmp
xor
mov
pop
xchg
add
imul
int
and
sub
pop
xor
cmp
mov
lods
pop
ljmp
xor
arpl
push
jl
xchg
xchg
int3
sub
cmp
ds
mov
inc
sub
je
popf
dec
mov
daa
inc
cs
adc
inc
addb
dec
or
enter
xor
fildl
enter
add
xor
dec
adc
inc
cli
push
mov
rcrb
sub
adc
and
push
mov
dec
adc
mov
outsl
inc
shr
inc
inc
fsubrl
inc
or
sub
dec
hlt
leave
pop
popf
rorb
or
xchg
cmp
mov
cmp
mov
xchg
add
bound
pushf
jle
sub
pusha
push
mov
dec
fsts
dec
cld
movsb
xchg
popf
rclb
mov
cwtl
dec
mov
sbb
bound
mov
mov
add
xor
push
xchg
in
jb
adc
adc
mov
mov
jmp
sahf
jle
push
inc
pop
and
cmp
or
jl
adc
mov
push
adc
and
lock
popf
lods
sbb
mov
or
xor
lods
or
and
pushf
or
sub
mov
loop
cmp
loop
cmp
cmp
push
movaps
and
les
xchg
push
inc
inc
jb
xchg
sub
adc
xor
pop
jmp
sub
mov
mov
cmc
in
xchg
and
rclb
sub
xor
ficoms
loop
dec
inc
in
fs
leave
and
lahf
andl
inc
shlb
push
inc
mov
je
cmp
xor
push
les
mov
loope
cld
ud1
lea
jbe
push
je
pushl
dec
inc
fdivs
sti
test
clc
inc
clc
add
pop
adc
ret
jmp
cmpsb
cmp
jge
mov
sub
sbb
adc
fs
scas
mov
jg
push
hlt
pop
ja
add
cmp
je
adc
xchg
push
inc
mov
movsl
hlt
mov
pop
or
mov
jnp
ja
je
push
add
or
pop
xor
and
xor
jne
aam
nop
cs
hlt
mov
enter
or
pop
dec
add
jl
sub
xchg
sbb
in
popa
jne
push
scas
xor
clc
mov
and
jle
inc
test
jo
lds
daa
sub
push
dec
test
jne
xor
and
dec
aam
pop
aas
inc
and
adc
lahf
xor
mov
pop
pop
pop
or
loopne
mov
scas
sysret
adc
insb
inc
or
dec
and
fsubrl
mov
xchg
fcomps
pop
adcl
test
clc
sub
imul
clc
jnp
das
aad
daa
adc
pop
in
call
pop
mov
adc
adc
enter
push
popa
adc
in
jl
dec
cltd
daa
mov
cmp
shlb
push
out
loop
mov
push
test
mov
popf
cld
test
enter
pop
loop,pt
dec
repnz
dec
rol
mov
or
outsb
js
push
orl
jmp
and
xchg
xchg
clc
dec
mov
imul
push
negb
in
xchg
pop
adc
mov
mov
xor
mov
mov
adc
movsl
fstl
jle
sbb
cmpsl
adc
out
cmp
push
decb
addl
dec
jne
testb
dec
push
sub
cmp
dec
dec
jmp
in
dec
scas
sbbl
xor
mov
jmp
pop
or
pusha
cmp
inc
inc
jne
pop
sub
loop
mov
lea
or
add
fwait
mov
mov
mov
pop
inc
movsb
jle
sahf
fwait
cltd
cld
scas
ret
ret
mov
xchg
jle
mov
and
sub
xor
lret
mov
xchg
sub
or
cmpl
mov
dec
and
pop
mov
lock
mov
xchg
push
decl
adc
cli
add
in
mov
adc
mov
repnz
inc
sub
movsb
scas
out
xor
mov
movsl
xor
fstl
adc
push
imul
dec
leave
sbb
or
jne
push
jmp
popf
dec
aas
shrb
pop
add
sbb
movsb
jle
mov
cld
sub
stos
cmp
mov
sub
cmc
cmpsl
shlb
lret
sbb
sbb
addr16
and
mov
or
mov
clc
mov
pop
or
sub
ds
sub
out
inc
lods
std
stos
roll
outsl
adc
pop
lods
push
xchg
mov
xor
es
inc
adc
inc
jmp
lret
loopne
mov
stos
push
pushl
mov
pop
dec
mov
aas
dec
mov
mov
push
xchg
mov
dec
push
jge
clc
mov
mov
pop
push
push
outsb
outsb
bound
inc
insl
ja
cltd
dec
or
and
das
inc
adc
rorb
mov
movsb
cmp
jmp
pop
sbb
in
in
iret
xor
ficomps
jg
movsl
mov
xor
mov
hlt
push
lods
dec
ss
sti
mov
mov
xchg
shl
adc
sub
nop
imul
lret
pop
clc
add
ret
icebp
cltd
cs
test
or
adc
push
add
push
xor
enter
mov
jge
hlt
in
dec
sar
dec
jle
in
jo
je
cmpsb
pop
fs
xor
aad
rclb
add
scas
push
pop
sub
mov
xor
push
push
sub
dec
and
cmpsb
push
and
stos
push
idiv
push
dec
repz
call
lds
shl
in
pop
mov
push
repnz
leave
push
or
cltd
push
lock
loopne
in
mov
sub
dec
pop
cwtl
mov
dec
fstpt
mov
out
and
les
jl
jae
dec
out
stos
dec
popf
data16
into
jmp
mov
lods
mov
mov
int3
jg
ss
or
ds
stos
mov
mov
jne
pop
pop
inc
in
cli
test
popa
sub
add
imul
or
or
adc
and
dec
or
or
dec
inc
je
push
bnd
lahf
xchg
cmpsl
dec
push
jg,pn
sub
add
and
push
stc
and
push
jmp
and
mov
inc
movsl
xchg
aaa
jne
scas
cmpsl
call
clc
movsb
movsb
adc
cmp
ds
fsub
cli
mov
cmpsb
inc
stos
inc
cmc
pop
inc
mov
je
lahf
xchg
imul
sub
adc
or
das
cmp
sbb
das
orb
pop
daa
adcl
inc
push
int3
sbb
add
mov
int3
std
out
aam
pop
inc
xor
pop
in
cmpsl
scas
mov
or
enter
imul
stc
enter
mov
inc
push
mov
mov
xchg
je
je
pop
mov
xchg
push
pop
fimull
fisubs
adcb
lret
inc
negl
out
push
xor
cli
fs
mov
cmpsb
jo
push
inc
mov
fcoml
push
pop
push
adc
push
aad
lcall
outsb
cmp
lea
jg
push
loop
jno
push
xor
sub
cmpl
cmp
cmp
xchg
pop
sbb
cltd
mov
adc
je
imul
cmpb
jnp
add
and
sub
movhps
dec
push
inc
xchg
and
call
lcall
clc
pop
or
jbe
xor
lahf
xor
mov
shlb
mov
movsl
push
adc
push
jne
pop
out
sub
ds
and
roll
adc
cs
push
push
or
inc
test
insl
xor
and
loopne
inc
pop
and
stc
loopne
enter
or
push
dec
js
xchg
js
cwtl
and
jo
in
imul
jb
pop
and
int
push
popf
outsl
in
jnp
push
out
and
mov
lock
test
dec
lock
pusha
inc
int3
cwtl
pop
jno
decl
cld
mov
loop
push
jb
and
cmp
xchg
xor
mov
and
push
lods
and
mov
push
js
sbb
and
sbb
adc
pop
out
add
sbb
imul
sar
xor
xchg
call
shrl
scas
test
push
xor
clc
cmp
pop
dec
pop
nop
movsl
popa
push
cmpsb
sbb
std
push
pop
idivl
mov
adcb
mov
pop
add
ja
daa
fcoms
mov
data16
xchg
push
add
mov
xor
push
xchg
jl
fisubrl
lahf
mov
dec
xchg
jne
inc
pop
rcrl
push
mov
shrl
mov
inc
add
sti
pop
push
adc
shrl
repnz
pop
or
mov
add
dec
aas
dec
mov
fs
xchg
or
mov
push
neg
pop
insb
je
pusha
and
in
lock
jmp
push
or
and
mov
mov
push
cwtl
lock
sub
adc
lret
jae
push
and
jne
sbb
pop
or
fldenv
outsb
xorl
and
test
or
fsts
leave
sbb
loopne
jne
stc
call
frstpm(287
scas
mov
cltd
mov
dec
cmp
fmul
outsl
test
outsl
or
je
fwait
lds
movsl
hlt
out
jmp
fisubs
adc
xchg
push
mov
cld
add
les
xchg
int3
js
shrb
aam
sbb
dec
xchg
fdivrl
mov
sub
sbb
cwtl
or
test
or
inc
enter
iret
mov
les
mov
fs
in
xor
mov
inc
loop
and
push
pop
hlt
or
clc
loop
xchg
xchg
lds
test
or
int
aas
rcll
ljmp
xor
jmp
push
pop
fisubrs
or
sub
adc
shll
out
adc
sub
cmp
sub
in
and
and
les
jmp
inc
dec
es
xor
ret
mov
add
add
cs
xor
fs
adc
inc
xor
testl
push
jns
xlat
out
mov
inc
cli
mov
scas
je
jmp
enter
push
add
adc
and
lea
cmp
pop
mov
repnz
xor
or
pop
or
or
cld
push
mov
xor
push
push
fs
cmp
out
sub
or
nop
stos
mov
insb
jl
out
adc
and
pop
xchg
add
negl
xor
jmp
sub
cli
xor
into
data16
push
sbb
add
loopne
pop
inc
push
add
inc
or
add
shrb
nopl
mov
xchg
ljmp
add
xlat
push
push
dec
push
call
test
cmp
fidivs
shll
fs
push
data16
push
lock
or
jle
into
and
adc
inc
inc
inc
and
adc
and
adc
mov
xchg
and
sbb
or
or
shll
add
sbb
add
adc
mov
mov
and
aas
in
cld
xchg
push
xchg
movsb
cld
fwait
push
adc
fcomi
and
push
pusha
push
cmp
inc
xchg
addr16
jno
and
dec
add
cld
and
sub
jo
cmp
pusha
xor
and
inc
gs
and
push
insb
xor
or
mov
adc
inc
pop
xor
and
xchg
inc
xchg
je
jge
cmp
das
cmp
inc
je
imull
fstpl
cmp
or
xor
and
push
mov
cld
dec
cmpsb
xor
cli
pop
push
es
sbb
or
jge
cmp
lahf
loope
or
mull
mov
mov
mov
push
xchg
and
sti
xchg
in
inc
push
ret
testl
cltd
jno
lcall
pop
or
push
fmul
mov
mov
mov
insl
xor
dec
inc
dec
and
mov
fnstenv
cmpsb
outsb
test
clc
sub
aam
cwtl
stc
inc
adc
adc
lods
add
ljmp
inc
push
mov
mov
push
adc
cmp
xor
cwtl
sub
and
aam
adc
mov
mov
inc
shlb
lods
xor
sahf
fldenv
push
mov
dec
stos
int
loop
push
cli
mov
fsubl
adc
mov
push
sarb
int3
pop
nop
or
sbb
and
mov
push
add
clc
lods
repnz
int
inc
loop
mov
lock
popf
in
loop
lret
rcrb
mov
fs
jb
and
push
pop
je
adc
lods
xchg
negl
sub
inc
adc
sti
xchg
sub
sbb
jge
mov
hlt
sub
fsubrs
ret
cmc
adc
orl
sub
xchg
stc
adc
push
add
mov
push
mov
cld
arpl
fcoms
pop
mov
sbb
loopne
je
jecxz
jbe
jmp
test
clc
cmp
jne
push
int
fwait
adc
push
lret
cmp
cmpsl
gs
sub
scas
adc
sbb
push
shrb
or
push
push
dec
repnz
je
mov
cwtl
jge
je
pop
repnz
push
xchg
out
mov
das
lods
jae
pop
cld
je
std
add
rcrl
jge
test
pop
sbb
cli
pop
xlat
fstps
pop
hlt
pop
jecxz
mov
or
test
adc
movsb
cli
adc
pop
cmpsl
test
daa
mov
jge
cli
test
and
xor
mov
lahf
aam
push
dec
push
enter
loope
push
add
or
mov
dec
jb
adc
dec
adc
xchg
in
bound
sub
mov
movsl
movsb
adcb
ret
xlat
rcll
movsl
pop
cli
add
mov
test
test
movsl
cmpsl
and
adc
das
sub
je
dec
hlt
fs
push
out
and
jle
and
cld
jmp
dec
push
lret
les
mov
pop
mov
cmp
mov
and
imul
inc
jns
mov
pop
jmp
dec
je
sub
jo
test
pop
xor
jle
mov
iret
and
mov
inc
jge
dec
ss
dec
sub
adc
data16
out
dec
fcoms
in
dec
adc
or
and
pop
ss
ljmp
inc
call
shl
pop
push
outsl
test
mov
mov
mov
outsl
dec
push
rol
lcall
dec
xor
cmpsl
push
push
in
inc
cmpsl
js
mov
loop
cmp
add
bound
call
xchg
pop
dec
push
iret
mov
cs
inc
dec
jmp
mov
enter
cmp
ret
add
rolb
je
popf
andb
pop
push
lret
and
loope
push
push
outsl
lods
pop
cmpsb
jl
mov
and
xchg
mov
cmp
pop
jle
setno
sub
les
push
sbb
pop
add
mov
rclb
add
adc
mov
mov
inc
rclb
push
mov
jecxz
jb
leave
pop
push
push
out
cmp
mov
pop
pop
dec
test
jns
loop
dec
jne
out
rolb
scas
in
jge
or
imul
nop
imul
out
or
pop
decl
jne
jmp
into
jbe
js
popf
or
sub
sub
or
inc
or
sti
xor
add
shll
inc
aam
adc
jae
or
jno
pop
jle
rolb
test
add
mov
je
mov
pop
je
pop
in
sub
movswl
add
jmp
lea
add
rol
adc
fs
sub
mov
or
cmovbe
inc
xchg
test
cmp
add
sub
out
adc
or
adc
jge
popa
jmp
fs
sbb
mov
andl
pop
clc
push
outsl
lds
mov
loope
pop
pusha
popf
rorl
mov
mov
pop
push
je
pop
adc
or
call
inc
pop
je
mov
data16
notb
in
push
daa
jmp
stc
lds
xor
push
mov
sub
imul
out
push
rorl
mov
flds
adc
testl
jle
jmp
or
adc
xor
xor
jne
inc
pop
and
enter
add
push
jbe
pusha
mov
or
add
xorb
cld
jmp
add
dec
adc
cs
add
or
incb
and
mov
xor
sub
sbb
add
xchg
hlt
adc
mov
jbe
push
pop
xchg
adc
jmp
and
and
mov
cli
adc
call
std
push
sub
sti
adc
fbstp
jge
fdiv
sub
test
mov
mov
fsin
loopne
xchg
loope
cmp
xchg
rcrb
xchg
cmp
xor
sub
fbld
dec
ret
ss
fisubrl
mov
sub
cld
dec
vxorpd
lods
lret
and
sbb
stos
jl
push
das
jmp
sub
inc
xchg
xchg
sbb
out
lock
push
sub
pop
jp
inc
dec
enter
sbb
mov
inc
sarb
jne
xchg
sarb
inc
mov
jmp
mov
ret
sbb
incl
lcall
sub
xchg
or
divb
and
lods
mov
pop
aad
lds
xchg
adc
sub
pushf
fst
into
add
shll
sub
xchg
jg
jne
add
push
mov
push
cmp
clc
sub
je
test
xor
push
xchg
sti
push
lods
sub
inc
movsl
inc
js
adc
sbb
push
and
out
aam
and
xor
imul
movhps
adc
data16
aaa
in
cmp
xlat
ljmp
nop
sbb
je
push
test
insl
mov
cwtl
scas
pop
or
dec
test
ficoms
repz
popa
push
cmp
je
xor
and
add
int
arpl
mov
imul
or
push
sbbl
pop
fisttps
testl
jmp
jp
mov
push
inc
enter
shlb
mov
stos
add
add
sub
pusha
add
sub
mov
add
jne
mov
stc
bound
movups
lret
orb
je
rep
fnsave
dec
dec
sub
pop
gs
or
daa
or
pusha
dec
jp
jnp
push
ftst
adc
test
lods
aaa
adcl
and
and
sub
and
mov
push
jecxz
or
das
dec
jne
xchg
and
adc
scas
xor
and
jne
dec
cmp
pop
cli
mov
pop
fmull
scas
pop
jg
mov
insb
xor
add
test
sbbl
mov
sub
lcall
repz
pop
and
push
ss
lods
or
loop
andb
scas
mov
test
push
nop
outsl
sbb
mov
sub
iret
in
mov
xor
mov
add
inc
fisttpll
inc
jmp
sub
in
xor
inc
out
out
pop
out
sub
jne
adc
xor
inc
pop
or
movsl
inc
inc
adc
mov
inc
or
adc
inc
shlb
push
jmp
cmp
add
jne
neg
clc
sbb
xor
inc
rcr
add
rclb
push
adc
testb
mov
adc
in
les
sbb
pushf
cmp
adc
or
xchg
orb
or
push
cmp
sub
sub
ds
or
lea
cmp
jb
cld
push
lods
cwtl
cs
adc
and
jae
pop
push
or
icebp
inc
inc
adc
sbb
adc
jne
jnp
mov
pop
repz
cmp
test
sub
movsl
push
std
popf
icebp
pavgb
inc
lcall
mov
test
aas
mov
lock
das
fs
rcrb
sbb
sub
cmc
adc
and
adc
pop
addb
sarb
lea
cmp
mov
and
push
dec
bound
les
xchg
jb
imul
dec
fincstp
xor
ds
cmpsb
adc
push
or
or
jne
xchg
pop
pop
push
daa
adc
sbb
lea
mov
push
xchg
loopne
les
sbb
and
fbstp
jmp
pusha
imul
xchg
lea
lcall
hlt
rorb
or
fstps
in
test
bound
adc
jno
adc
js
jb
cmpb
jne
pushf
aam
or
push
sub
and
sti
sub
test
inc
lcall
mov
aad
aam
subl
mov
movb
testb
rorb
sbb
pop
aam
add
jne
pop
mov
add
dec
dec
or
push
mov
inc
cmp
or
jle
mov
cmp
pop
push
sub
mov
test
pop
test
loop
inc
orb
test
xor
and
cld
xorl
push
adc
adc
jge
mov
sub
bound
dec
das
addr16
push
loope
and
mov
adc
pop
sub
and
push
and
mov
std
lods
xchg
cmp
add
mov
xchg
lea
jb
out
inc
push
adc
in
sub
mov
fstpl
sbb
inc
add
xor
adc
jge
add
jmp
and
add
adc
js
jecxz
orb
mov
jmp
pop
xor
push
adc
or
add
andb
jns
movsb
in
aas
jge
scas
icebp
push
jmp
cmp
sti
loope
popf
or
cmp
movsb
pop
inc
test
ja
addl
lods
sub
pop
add
jmp
cmp
insl
in
ret
push
add
xor
jl
cld
cmp
repnz
cmp
fcompl
pop
je
out
xlat
or
adc
add
clc
mov
nop
or
cmp
jne
pop
push
stos
adc
nop
add
mov
inc
test
adc
in
mov
pop
mov
lret
xor
xor
sub
or
sub
mov
and
push
dec
or
dec
lret
sti
mov
pop
movsb
test
push
cmp
out
adc
hlt
test
les
sub
sub
push
or
scas
sbb
add
mov
es
mov
cld
pop
mov
jne
icebp
fcoms
sbb
rorl
pop
imul
sub
add
cmpsb
inc
jne
cmp
test
and
addl
add
jne
cmp
jbe
testb
xchg
test
jmp
int3
mov
pusha
testb
sbb
testl
hlt
add
popa
nop
push
fcom
mov
aas
add
add
je
mov
in
mov
negl
cld
jg
stc
movsl
je
lret
sti
les
stos
roll
sub
adc
jae
and
push
sub
dec
mov
scas
inc
add
popf
std
adc
adc
pop
je
incb
or
pop
leave
pop
sub
ret
and
rcr
jg
insl
testl
fcmovne
fwait
repz
and
inc
mov
leave
cmp
ja
cmp
mov
pop
pop
dec
inc
dec
inc
mov
movsb
in
sub
test
mov
loope
js
testb
inc
push
jns
xchg
cmpsb
or
jg
inc
add
dec
int
pusha
popa
sbb
mov
inc
dec
arpl
mov
pushf
je
mov
add
popa
dec
xor
push
daa
in
lds
data16
jb
or
and
movb
pop
or
rorl
out
jecxz
pop
push
xor
inc
shrb
adc
out
sarl
adc
jne
or
inc
sub
adc
rorl
dec
mov
add
or
xor
stos
inc
iret
out
mov
movsb
lods
nop
mov
and
stc
or
out
lea
inc
and
and
cmp
push
cmp
sbb
call
fsubl
inc
aam
xchg
inc
pop
mov
push
std
mov
dec
dec
loopne
add
mov
add
fsubrs
or
adc
mov
inc
add
sbb
sub
jns
std
and
hlt
rclb
sbb
shrl
loopne
xchg
stc
xchg
mov
repz
add
jmp
sub
adc
add
rorb
inc
leave
dec
rcll
cmpsl
push
insb
test
push
mov
rep
hlt
pop
or
push
mov
js
andl
add
jecxz
lea
data16
les
popa
hlt
in
cmpsb
push
out
or
loop
push
inc
ficomps
push
shl
shr
mov
loopne
or
das
or
inc
jmp
mov
gs
pop
push
pop
and
or
shl
es
or
push
sbbb
sub
pop
std
movsl
and
ret
test
jecxz
xchg
test
loop
xchg
lods
mov
dec
push
sahf
or
lcall
mov
xchg
push
mov
mov
inc
cmp
cmpsb
dec
jg,pn
nop
mov
adc
adc
xor
or
xor
dec
loopne
out
jg
jle
jp
in
or
dec
pop
jne
mov
dec
and
sbb
sub
sub
xor
xchg
dec
pop
jb
dec
cmp
scas
lret
cmpsb
rorb
add
sub
out
add
mov
sub
push
enter
jns
js
inc
inc
dec
pop
adc
rorb
adc
lret
movsb
pop
dec
and
out
sbb
jbe
insl
test
adc
shrb
add
cmp
clc
jb
mov
mov
add
rep
jmp
or
sbbb
or
loopne
enter
or
push
lea
aas
nop
adc
mov
or
loopne
and
mov
adc
stos
movsb
pop
add
scas
adc
mov
push
pop
int3
test
cs
int3
and
xor
inc
test
mov
inc
pop
int3
cmovl
inc
mov
xor
sub
and
sbb
inc
mov
in
cmp
and
shlb
pop
and
shlb
pop
and
rorb
pop
mov
or
and
andb
mov
jp
push
ret
xchg
sahf
sbb
mov
xchg
mov
sub
je
xor
jl
movsb
pushf
andb
or
icebp
adc
neg
xchg
sub
inc
stc
bound
adc
iret
xchg
rorb
or
fmull
cmp
lods
dec
mov
mov
cwtl
and
movsb
jno
xchg
push
out
xor
xchg
sub
sub
dec
pushf
lods
pop
out
push
inc
scas
dec
inc
daa
pop
mov
shll
les
mov
adc
and
push
push
adc
je
adc
dec
xchg
adc
pop
dec
xchg
or
pop
dec
cmp
lods
and
or
cmp
xchg
mov
jp
adc
cmpsl
je
bound
std
out
adc
sub
pushf
fnstsw
pop
mov
push
and
jg
cmp
jne
aas
cmp
jle
cmp
cltd
and
pop
push
mov
sub
jo
push
dec
fdivrl
bound
faddl
adc
inc
pop
xor
jmp
cmp
add
sub
fdivl
inc
in
inc
and
ret
and
in
sbb
stc
adc
mov
mov
mov
mov
enter
fstpt
loop
mov
movl
mov
cmp
and
sbb
jnp
adc
dec
and
mov
jecxz
hlt
fstcw
jmp
or
or
hlt
imull
fistpll
fwait
or
es
push
clc
inc
inc
cmp
mov
jg
or
jo
std
pop
mov
cmp
sahf
fs
sbb
mov
dec
arpl
cltd
add
jmp
cmp
or
pop
pop
xchg
inc
sbb
push
adc
push
mov
hlt
mov
aam
inc
pop
push
stc
shrl
xor
js
addr16
rolb
cs
mov
aad
or
add
cld
test
xor
insl
push
add
add
adc
mov
mov
push
gs
lods
mov
xor
roll
fwait
mov
test
and
xor
sbb
sbb
push
and
xor
jae
clc
int
dec
shll
gs
scas
repnz
xchg
jge
aam
scas
daa
sbb
inc
sbb
subb
gs
lock
sbb
inc
lahf
xor
pop
mov
int3
insl
clc
movsl
sahf
adc
jae
mov
int3
add
xchg
push
mov
aam
sub
cmc
es
ljmp
dec
pop
mov
pop
jmp
fistps
push
int3
imul
xchg
pusha
push
xchg
mov
add
add
or
add
adc
push
adc
add
and
and
mov
enter
xor
sbb
imul
int
lahf
sub
or
dec
aad
in
cmc
ja
inc
pop
lcall
jl
cmp
js
cmpsl
push
push
cmp
add
add
cmp
sbb
pop
add
jle
pop
or
testb
imul
insl
lret
lds
inc
xor
jb
cmp
ja
add
lock
ss
rolb
jbe
daa
push
lret
pop
inc
dec
sub
fnstenv
ljmp
imul
adc
mov
jg
loopne
push
push
or
mov
pop
push
pusha
sbb
test
insl
jnp
sub
mov
mov
jmp
cmp
shrl
repz
or
call
pop
ret
fs
repnz
data16
adc
push
jb
xchg
push
aaa
cmp
or
pushf
push
cmp
jbe
or
mov
dec
fiadds
pop
add
imul
ret
lock
in
push
out
push
fwait
or
cmpsb
mov
xor
lea
push
aam
loop
xchg
or
push
fdivrs
sbb
xlat
xor
loopne
sub
xor
mov
xlat
call
xor
xor
pushf
or
jl
je
insb
cmp
scas
les
shlb
or
inc
lock
fldcw
pop
fadd
push
mov
or
push
fnstenv
push
and
xchg
or
sbb
and
mov
inc
sub
push
jbe
and
or
mov
push
addr16
cmpsl
add
rorl
push
adc
mov
aad
icebp
and
cmp
pop
jae
cmp
cld
sarb
stos
loop
pushf
ficoms
mov
aam
sub
add
inc
imul
add
or
rcll
xchg
cmpsb
enter
dec
ret
push
scas
mov
cwtl
pop
cmpsl
push
and
sbb
ror
push
mov
inc
or
dec
or
cmpl
or
cltd
adc
pop
clc
das
dec
fsts
lahf
xor
ljmp
push
leave
pop
dec
sahf
adcl
int3
mov
jp
xchg
call
out
sbb
push
fcompl
mov
pop
xor
scas
ss
insl
clc
test
xorb
inc
cmp
adc
or
inc
test
jg
push
inc
sbb
inc
ja
icebp
out
or
cmp
stos
jb
dec
loopne
jmp
lahf
sbb
das
pop
mov
inc
and
inc
adc
enter
or
iret
mul
ret
outsl
push
or
fcomps
aas
xor
xchg
or
loopne
pop
shlb
mov
jb
int3
pop
adc
fildll
fcomps
stc
or
or
loope
hlt
xchg
je
sub
pop
sbb
cmp
stc
and
jae
fbstp
jbe
mov
dec
push
lahf
movsl
mov
or
data16
sub
xchg
and
mov
pushf
or
add
fdivrs
jb
xchg
jmp
popa
call
rcll
gs
call
inc
movsl
sub
lret
test
dec
push
push
pand
push
pop
jle
pop
mov
sub
repz
pushl
fwait
in
test
notb
dec
addb
adc
jg
jmp
popf
test
int3
cmp
pusha
sbb
arpl
movsl
jmp
xlat
dec
icebp
mov
or
sarl
jmp
das
enter
push
adcb
in
call
or
jne
div
mov
xchg
scas
int3
je
xor
add
jb
cmp
ja
cmp
popa
pop
jbe
dec
imul
jo
sub
outsl
sub
test
adc
and
inc
or
xchg
enter
or
dec
insb
or
les
jbe
je
xor
and
jle
mov
andl
les
in
test
rolb
dec
dec
popf
push
cmpl
mov
dec
in
sbb
sbb
sbb
sbb
daa
js
adc
and
mov
inc
push
shr
dec
fnstcw
sbb
sbb
sbb
in
int3
sub
push
mov
mov
hlt
fiadds
pop
cld
jne
sar
add
cmp
je
mov
inc
or
jl
jp
add
mov
int
jne
ljmp
add
mov
dec
cmpsb
shlb
loope
clc
push
je
push
out
mov
sub
push
jbe
imul
dec
pop
mov
add
pop
dec
data16
insb
pop
push
xchg
xor
sahf
mov
inc
push
push
add
dec
in
mov
lea
movsl
sub
ret
and
lods
lods
jbe
test
std
adc
xlat
cmpb
xor
mov
cmp
jne
push
inc
inc
dec
jmp
hlt
pop
cmp
js
cmp
in
cmp
popa
cmp
call
pop
cmpb
repz
pop
daa
or
cld
mov
inc
cmc
xchg
out
int
jmp
sbb
add
rcrb
pushl
push
in
or
lret
enter
out
loopne
push
adc
loop
push
cmp
pop
enter
popf
in
daa
jne
jl
inc
inc
jl
pop
in
mov
mov
loop
jg
ret
loopne
fistps
jge
cmp
popa
push
mov
inc
addps
xchg
push
sub
sbb
adc
clc
decb
enter
add
or
popa
pop
or
iret
jbe
loope
adc
push
mov
rolb
or
xchg
push
sub
sub
push
mov
push
or
pop
pop
ret
adc
movsb
iret
insl
inc
dec
inc
dec
lea
sub
inc
jmp
mov
sar
dec
xchg
call
xor
aas
add
push
je
and
fisubrl
cmp
jne
and
or
enter
call
test
inc
mov
jno
xchg
adc
in
or
into
icebp
data16
and
adc
lods
and
mov
jp
out
xor
sub
shr
lea
mov
mov
jo
dec
sbb
fwait
rcr
cltd
sbb
inc
mov
mov
sub
dec
mov
add
jmp
mov
and
jmp
push
ss
add
mov
dec
fwait
inc
je,pn
dec
xchg
cmp
cmp
aaa
ja
push
sarb
gs
mov
pop
out
daa
int
gs
dec
leave
pop
mov
jge
add
test
jle
jo
iret
sbb
lret
cld
mov
clc
adc
jb
mov
push
sbb
shr
loop
les
add
sahf
xor
repz
push
sub
xchg
inc
popa
int
mov
mov
ljmp
sbb
es
push
pushf
mulb
add
mov
aam
andl
pushf
fbld
fdiv
int
pusha
push
and
dec
mov
push
and
or
push
jge
divl
jne
adc
fdivrp
stos
and
mov
sub
adc
lret
push
jecxz
inc
popa
and
insb
movsl
in
roll
cmp
jae
xchg
testl
pop
lea
mov
or
add
or
stos
cmp
mov
repz
dec
xchg
adc
orb
sub
sub
test
mov
in
push
jno
mov
andb
in
je
push
pushf
sub
jmp
cld
imul
and
arpl
jno
pop
pop
push
sbb
pushl
xor
or
push
jbe
sbb
mov
push
add
gs
loope
or
xchg
push
ja
ret
testb
enter
xor
neg
inc
mov
lahf
icebp
int
push
cmp
or
fldt
mov
cmp
call
or
push
ds
aaa
add
push
push
jns
leave
addb
xchg
cltd
inc
in
mov
daa
pop
scas
daa
xchg
jmp
data16
push
shrb
daa
mov
mov
inc
inc
clc
inc
rolb
jle
mov
cs
adc
cltd
inc
in
out
gs
lds
cltd
sbb
shl
sbb
inc
mov
adcb
sub
lcall
jne
or
inc
cmp
jl
cmp
loop
jge
into
mov
es
jb
xor
sub
dec
cmp
dec
prefetch
rorl
inc
sbb
inc
add
push
push
pop
mov
test
inc
sbb
xchg
adc
inc
insb
add
xchg
outsl
insb
and
in
sub
ja
push
lods
mov
pop
jae
rolb
and
popf
mov
fdiv
add
or
and
inc
cmp
jne
and
push
xchg
jle
dec
pop
in
scas
sbb
or
jmp
dec
adc
mov
lea
mov
pop
push
mov
pop
out
gs
mov
sub
push
mov
xor
int
cmpb
jne
mov
sbb
cmp
repnz
push
and
mov
xchg
dec
xchg
or
inc
sbb
rcl
mov
push
std
cmpb
pop
xchg
and
mov
cmp
lcall
xor
mov
jb
pop
je
loopne
sub
inc
push
iret
mov
jne
imul
mov
fstpl
subl
jge
mov
mov
xchg
xor
fdivs
mov
mov
mov
mov
xor
test
mov
sub
add
push
lock
add
rclb
lods
out
cld
cltd
leave
js
mov
fldl
pop
cld
sub
shr
icebp
iret
imul
adc
pop
mov
dec
scas
sbb
adc
xchg
out
adc
xor
ljmp
inc
push
addr16
or
cld
adc
pusha
ret
or
jle
sar
dec
addl
add
pop
mov
cmp
adc
add
lea
add
shlb
mov
jne
xor
xchg
clc
lea
loopne
sbb
pushf
ss
push
sbb
or
das
xchg
mov
test
push
xorl
cs
or
xchg
repnz
sub
xor
andb
push
xchg
in
movntps
and
mov
repz
pop
cmp
jbe
push
jmp
inc
mov
cmp
and
arpl
mov
cmp
cmp
sbb
xor
shr
or
and
dec
add
add
loopne
pop
sbb
inc
bound
lcall
out
lock
and
pop
jl
sbb
cmp
gs
insb
pop
roll
mov
fistl
jl
flds
jne
mov
dec
paddd
jmp
sbb
push
and
in
or
xchg
outsb
lds
fstpl
aad
and
or
push
xor
mov
dec
mov
fiadds
in
jbe
les
lock
out
ret
icebp
mull
sub
faddl
or
xor
loope
add
fidivrs
cmpsb
orb
push
push
call
and
or
or
push
or
xchg
popf
lock
movsb
mov
pop
and
dec
inc
or
call
pusha
add
pop
adc
mov
sbb
ret
lods
adc
mov
push
movsb
mulb
mov
das
shl
scas
mov
sub
pusha
dec
adc
jne
cmp
pop
rorl
sub
or
and
or
das
int
mov
cmp
pop
mov
dec
xor
push
inc
cmp
pop
and
push
and
inc
and
stc
add
jmp
and
mov
xchg
push
inc
data16
jmp
in
or
shr
pop
mov
mov
fbld
or
sbb
jl
and
pop
ret
decb
iret
jne
add
xchg
clc
push
adc
jne
mov
ljmp
and
out
xor
pop
dec
jae
std
inc
out
dec
inc
bound
push
jmp
test
sub
out
dec
push
and
fnsave
test
js
adc
adc
and
clc
ljmp
xor
mov
cs
mov
pop
dec
mov
mov
aaa
movsb
adc
push
adc
dec
call
or
aam
test
inc
add
cmp
xlat
je
icebp
movsb
lcall
mov
popa
dec
mov
jne
dec
addr16
and
pop
test
jl
add
testl
pop
xor
pop
ret
jmp
jle
out
enter
adc
cmp
popa
and
incl
iret
les
lahf
add
add
in
and
out
orb
pcmpeqw
xlat
and
dec
in
and
pop
jmp
sub
adc
and
imul
sbb
cltd
inc
sub
insb
rolb
jp
jnp
aas
mov
fldln2
sbb
mov
shrb
rcrb
inc
sahf
push
in
push
mov
sahf
pop
shlb
inc
decb
sub
sub
es
cmp
divl
mov
rcll
rcll
jmp
das
sub
or
and
jnp
pop
lea
inc
or
daa
sub
dec
push
mov
in
add
xchg
xor
repz
mov
inc
add
mov
lea
ds
sbb
dec
sbb
cltd
fisttpll
jo
and
inc
add
or
add
jl
shll
pop
mov
jo
lods
adc
ja
in
and
and
mov
inc
pop
loope
bound
xor
xor
sub
fsubrs
inc
dec
adc
and
insb
jbe
adc
or
cli
movsl
mov
mov
jle
flds
andl
mov
push
jmp
xchg
xor
loop
dec
push
loopne
mov
xor
imul
stc
adc
xor
or
dec
dec
pop
sub
xchg
shl
pop
jns
push
or
fistps
lea
push
cli
ja
cltd
inc
lock
popa
repz
divl
movl
push
mov
add
sub
adcl
or
test
outsb
pop
dec
je
or
fimull
nop
push
fs
inc
xchg
xchg
in
mov
xor
rorl
je
mov
jne
or
mov
not
and
retw
mov
std
push
adc
aaa
aam
xlat
lea
daa
sub
ljmp
mov
cltd
sbbl
sub
cmp
sub
pop
cmp
push
imull
dec
pop
cmp
ret
pop
test
lsl
cmp
inc
popl
lcall
adc
or
pop
adc
orl
mov
lea
repnz
inc
sbb
and
pushf
nop
cmp
jbe
lret
or
push
jg
shll
sub
add
pushf
stos
or
mov
sub
incl
aaa
mov
xor
hlt
sbb
sti
add
pop
lods
inc
adc
sbb
or
bound
push
jne
rorl
dec
repnz
push
loope
iret
je
out
mov
and
xor
insl
cs
push
or
popf
push
inc
xor
or
xchg
jns
cld
inc
fldenv
sub
xor
loop
push
daa
outsb
jg
jge
pop
or
dec
mov
xor
pop
xor
not
push
mov
xor
cmpl
sub
sbb
inc
jne
dec
add
cmp
adc
insb
adc
adc
jp
mov
pop
dec
push
and
ja
aam
jp
ja
jno
pusha
repz
popl
out
inc
or
cmp
jnp
dec
push
jnp
and
pop
pop
sub
sbb
jecxz
inc
adc
cmp
test
pop
out
or
jns
bound
xlat
lock
ja
push
cmpl
pop
or
jmp
sbb
pop
popf
ficoml
adc
test
jae
shll
sub
jle
inc
test
stos
xor
push
xor
push
push
cmpsl
xor
add
cmp
jne
inc
in
sub
sub
addr16
or
jmp
mov
mov
jp
xor
lea
push
xchg
xor
faddl
dec
or
jle
ds
mov
sub
std
add
popf
ret
rcrl
dec
and
jl
jecxz
frstor
lods
in
mov
ret
incl
loope
orb
inc
orl
lock
movsb
mov
jmp
fiadds
jno
jp
sub
mov
lods
xchg
mov
xor
outsl
and
cmp
notl
shll
and
push
xchg
mov
mov
add
cmp
adcb
lcall
mov
add
dec
xor
sbb
aas
scas
popf
and
push
sub
push
test
out
or
inc
cmc
shlb
cwtl
xchg
jnp
pop
out
ret
xorl
out
fadds
and
add
sub
jns
inc
push
es
xchg
pop
sahf
out
or
adc
or
movsb
or
sarb
cmp
test
mov
dec
rorb
xchg
testb
lret
adc
jbe
or
cmp
fnstcw
add
out
test
jne
xor
mov
dec
incl
fistpll
bnd
das
inc
js
push
or
clc
fimull
cmp
pop
fs
ror
or
pop
sahf
dec
push
daa
sarb
sub
or
or
enter
add
adc
adc
inc
add
pop
add
and
test
push
and
into
inc
adc
and
mov
mov
icebp
sahf
adc
add
sbb
stos
mov
imulb
cmp
pusha
lock
daa
mov
into
or
sbb
pop
or
adc
out
fwait
jecxz
or
stos
movl
jb
mov
fs
or
test
in
pop
es
test
addb
jne
push
or
push
adc
fldcw
cltd
cmpl
jge
jb
dec
inc
ss
dec
mov
dec
adc
mov
aad
pushf
and
in
push
pop
pop
pop
jg
inc
push
into
or
adc
fisubs
xlat
ds
aas
pop
int3
inc
popf
shl
pop
xor
mull
adc
and
add
cmp
adc
dec
jmp
and
shll
mov
xor
add
clc
negb
mov
repz
dec
cwtl
pop
mov
and
jle
mov
mov
hlt
gs
sbb
cmc
mov
or
movl
rcll
jne
mov
aaa
cmpb
jae
mov
cmp
repnz
shlb
push
inc
or
rcrl
add
roll
xorb
sub
dec
and
or
pop
xor
mov
mov
inc
jbe
shll
sub
sbb
mov
dec
push
icebp
mov
and
cmp
lea
ret
add
pop
pop
and
add
pusha
sub
jmp
adc
xchg
jb
call
adc
xor
cmp
jae
mov
xor
cmpb
in
add
sbb
mull
jmp
sub
jle
mov
xchg
cmp
mov
cltd
out
or
jmp
mov
cltd
jne
mov
divl
int
push
push
push
mov
scas
inc
pushf
movsl
pop
rcrb
and
sbb
loopne
or
lods
sbb
stos
cltd
cmpsl
cwtl
add
mov
xchg
ret
daa
ret
adc
inc
imul
jmp
les
cmpsl
jo
sbb
mov
rcll
mov
sbb
psubq
dec
adc
and
push
xchg
push
sbb
dec
inc
inc
pusha
cmp
or
ljmp
adc
add
sub
mov
add
dec
inc
loope
jmp
jae
mov
dec
adcl
push
xchg
adc
sub
mov
jnp
mov
inc
aas
push
jnp
shlb
clc
push
daa
sub
sbb
decb
sbb
cmp
pop
es
adc
stos
mov
rolb
sub
sarb
stos
insl
aad
sub
mov
inc
neg
mov
or
js
push
scas
int
jmp
test
sbb
xor
pop
and
mov
push
loop
inc
mov
mov
xchg
addr16
and
test
jne
rclb
stc
and
push
rol
mov
mov
in
iret
mov
mov
dec
add
and
fwait
stc
es
push
test
out
jb
cmpl
dec
mov
lds
mov
xor
lea
adc
stos
stc
pop
xlat
call
push
cld
mov
sub
scas
sub
ret
test
test
push
or
pop
push
sar
mov
xchg
add
or
filds
pop
mov
push
movb
or
sub
cs
xchg
jg
sub
cmp
pop
pop
push
shr
movsb
mov
arpl
outsb
or
insl
jae
ds
sbb
lcall
xor
add
enter
push
hlt
lret
and
or
aas
decl
or
jecxz
and
mov
inc
popa
adc
enter
es
cmp
inc
pushf
and
scas
mov
or
inc
call
sub
jo
cld
lcall
mov
push
mov
movb
inc
mov
xor
inc
aad
shll
or
adc
je
jno
xchg
dec
mov
pusha
pop
mov
inc
mov
inc
xor
dec
jne
adc
mov
jmp
pushf
mov
insb
add
je
mov
mov
mov
pop
sub
push
xchg
inc
in
js
imul
or
add
pop
in
repnz
mov
lret
scas
and
xlat
fiaddl
lahf
daa
sti
xor
mov
fcomi
stc
loope
mov
cmp
je
call
push
ret
adc
dec
int
mov
sub
mov
daa
adc
add
xchg
cmp
and
mov
sarl
and
jg
jle
into
call
sbb
orl
lcall
dec
mov
or
jmp
movsb
adc
mov
jge
jmp
cwtl
add
outsl
jae
sub
xor
or
sbbb
test
jne
je
xchg
shlb
int3
bound
ss
imul
test
int
pop
pop
enter
aaa
sahf
dec
push
das
mov
pop
mov
pop
es
adcb
push
test
js
jle
in
lret
pop
jge
fstpl
mov
mov
pop
cltd
pop
add
sbb
or
dec
adc
xchg
adc
pop
xor
repnz
add
push
jle
mov
ret
psubb
je
sub
inc
pusha
sub
push
inc
mov
jl
jmp
mov
stos
and
clc
push
adc
out
ljmp
popa
jmp
xor
cmp
cmp
std
je
sbb
pop
push
or
iret
jbe
int3
out
or
mov
jnp
mov
ja
mov
inc
jmp
mov
xadd
std
adc
inc
cld
add
gs
mov
cld
or
push
push
xchg
adc
ret
push
in
mov
mov
xor
aas
mov
ret
test
or
lcall
lods
loopne
pop
adc
orb
repz
dec
and
pop
add
xor
cltd
test
fnstenv
pusha
aam
cs
mov
mov
call
pop
in
data16
xchg
xor
push
icebp
ss
orl
push
je
fistpl
lock
dec
mov
jle
xchg
push
jp
cmp
iret
cltd
jmp
jle
sahf
push
dec
mov
addl
sbb
testb
je
or
adc
mov
dec
aaa
mov
jo
das
mov
pop
push
sarl
pusha
inc
pop
das
je
push
jo
and
leave
xor
mov
test
stos
sahf
pushl
mov
pop
dec
inc
add
dec
data16
fisubl
or
push
mov
lea
test
aas
pusha
rclb
push
in
wrmsr
mov
xor
adc
js
push
mov
sbb
pop
rolb
or
pop
push
pop
mov
ja
and
fildll
xchg
lock
fs
push
fmuls
loopne
in
cld
dec
fmul
sbb
inc
xchg
bound
push
in
or
inc
sub
dec
mov
aas
dec
cmpsb
ss
xorl
sub
adc
cld
xor
add
sti
sub
nop
adc
negl
pop
sub
or
neg
mov
das
mov
addb
jmp
in
mov
push
lock
add
gs
inc
cmp
in
xor
push
sbb
inc
dec
dec
std
dec
mov
pusha
aas
ss
adc
jg
xor
push
test
js
sbb
push
sbb
into
stos
or
pop
lret
scas
shll
testb
imul
clc
fmuls
add
xchg
test
pop
and
clc
mov
call
outsb
xor
insb
push
and
test
jmp
push
pop
xor
cmp
and
std
stos
inc
sbb
and
shlb
incb
add
or
or
lcall
ljmp
dec
test
xchg
inc
aam
mov
cltd
repz
jmp
mov
mov
inc
adc
lea
cmp
aam
mov
lock
mov
int3
repnz
test
jmp
call
push
cmpsb
mov
arpl
add
inc
mov
xor
sbb
or
sub
cvtps2pd
or
lds
cli
and
jmp
les
stos
cmp
push
lahf
mov
jmp
mov
dec
add
push
sub
mov
pop
movswl
shr
pop
xor
je
push
xor
sub
cli
xor
inc
cmovbe
pushf
push
sbb
dec
adc
jg
cmp
push
int3
mov
adc
or
lock
sbb
push
mov
ja
ficoms
sub
in
fiaddl
and
push
ja
ss
sub
adc
test
pop
mov
sbb
or
push
mov
lods
ljmp
pop
sbb
mov
adc
mov
push
sbbl
xor
leave
popf
neg
mov
daa
and
dec
cmp
mov
mov
or
dec
and
push
ds
sub
int3
pop
subb
iret
sub
sub
mov
xlat
jmp
dec
xor
or
cmp
add
xor
and
ret
cwtl
mov
add
xor
inc
jnp
stos
push
pusha
je
lods
cmp
sub
inc
ds
and
or
adc
mov
dec
or
stc
in
repnz
and
mov
jmp
or
xor
sbb
je
in
jg
jl
pop
jae
adc
cmp
jmp
push
jne
and
mov
imul
jb
mov
or
jne
in
xchg
ret
and
bound
sub
and
cltd
push
push
push
push
movsl
daa
decl
out
int
and
inc
xor
rclb
int3
mov
sti
cmp
jle
les
int
clc
or
sbb
jmp
mov
adcb
rol
cmp
push
jne
and
cwtl
dec
inc
and
add
aaa
cltd
push
fmuls
xchg
test
and
ret
push
shll
test
mov
sub
or
in
or
add
or
xchg
lahf
add
add
push
hlt
leave
xor
jns
test
pop
and
xor
dec
sub
sub
or
xor
xor
push
fadd
scas
movsb
mov
movsb
cld
orb
fimuls
inc
xchg
enter
fbstp
ljmp
add
jmp
lcall
ljmp
xchg
cld
and
add
push
in
xchg
jo
jg
jo
iretw
or
sbb
pop
dec
t1mskc
les
dec
or
dec
add
push
call
int3
add
and
popa
xor
outsb
mov
pop
movsb
jmp
adc
jle
lea
ret
loope
or
mov
and
sbb
or
mov
pop
and
in
das
stos
pop
adc
mov
jb
data16
insl
pop
adc
or
cmc
push
pop
aaa
aas
test
push
outsl
loop
pop
jbe
inc
orl
clc
pop
push
inc
or
inc
shll
sbb
cmc
lds
mov
dec
fiaddl
mov
out
inc
xor
mov
and
mov
dec
pop
je
sbb
mov
icebp
sti
mov
mov
popf
and
and
sbb
shr
add
stos
repnz
jbe
jge
adc
mov
jne
mov
or
or
cmp
stc
xchg
xchg
mov
inc
out
push
push
or
pop
shl
add
adc
stc
adc
mov
mov
inc
mov
cmp
ja
popf
add
mov
nop
inc
sbb
jbe
jno
popf
shrb
or
jb
stc
or
notl
lods
push
or
or
lea
jo
movsl
sti
test
push
push
cmpl
xor
pop
pop
mov
and
icebp
push
push
cmp
push
sti
add
adc
dec
xor
and
je
mov
mov
loopne
enter
clc
and
jne
mov
jmp
mov
inc
pop
add
jne
mov
movsb
inc
dec
sub
mov
call
or
add
ret
jg
jecxz
inc
sub
push
clc
or
insl
pusha
jecxz
xchg
insl
xchg
stos
mov
sbb
imul
pop
pop
xor
add
call
push
push
jl
mov
add
call
sbb
and
aaa
push
push
lea
popf
or
je
scas
or
mov
xchg
addb
inc
lds
jmp
call
ljmp
bound
psubsw
jae
push
push
push
pop
jp
xor
xor
pop
daa
ja
sub
push
lea
jae
cmp
js
and
push
sti
rclb
xchg
add
adcb
sbb
add
and
add
mov
adc
jmp
cmp
jge
leave
int3
sbb
pop
cwtl
stos
mov
cmp
dec
pop
xchg
popa
jb
or
cltd
cmp
aam
loopne
dec
lds
sub
std
pop
sahf
and
pop
std
or
jl
je,pn
cwtl
mov
jne
mov
out
adc
arpl
orps
mov
dec
inc
xchg
negb
jne
mov
je
inc
inc
xor
push
movsb
scas
adc
lret
adc
jne
lock
iret
or
mov
cs
sbb
fldl
inc
rcrl
pop
daa
pop
pop
repz
dec
test
popa
or
dec
xchg
add
in
mov
or
cmp
jge
iret
and
push
push
pop
add
jg
les
mov
dec
test
jl
lret
mov
xchg
and
ljmp
ret
lret
popa
enter
xor
push
push
or
or
iret
inc
cmp
mov
sbb
sbb
aad
push
mov
stc
jl
mov
adc
mov
or
jbe
outsb
mov
dec
lea
cmp
ret
cmpsl
arpl
ja
jle
mov
adcb
imul
jne
push
cmpl
or
jg
xchg
or
push
jbe
jecxz
pop
in
subl
pop
cltd
or
push
add
out
aas
cmc
pop
cltd
adc
es
dec
or
adc
adc
cld
push
inc
in
cmp
insl
adc
sub
addl
dec
sbb
mov
leave
aam
inc
inc
adc
push
fisubl
int3
sub
xchg
daa
js
and
or
or
jbe
daa
loope
fidivs
inc
jmp
imul
inc
shlb
ss
fmuls
dec
add
inc
cmp
inc
inc
add
jbe
gs
sub
cmpb
loopne
movsb
nop
fs
or
dec
jmp
pop
ljmp
or
push
hlt
movb
push
rorb
movl
fsubrl
cli
jmp
gs
jg
je
lret
push
sub
xchg
jecxz
rcll
test
pusha
or
dec
enter
jle
ss
sub
or
sub
jl
stc
cmp
pop
mov
jmp
popf
inc
repnz
and
sub
jne
insb
aaa
ja
or
jns
cli
ret
pushf
jmp
jae
lock
icebp
add
adc
repnz
lds
popa
mov
and
cltd
ljmp
mov
push
lcall
shrl
pop
inc
lret
or
or
outsb
add
je
adc
jp
jnp
cli
cmp
movsb
xchg
pop
cmp
push
jle
mov
imul
or
inc
sbb
out
outsw
add
pop
add
or
xor
sub
and
add
xor
jle
or
je
jecxz
fwait
push
add
pop
xchg
loope
pop
push
push
pop
cwtl
pusha
sar
fs
sbb
add
lea
aaa
jne
sub
cmp
sub
lcall
jbe
test
cld
mov
or
ret
pmuludq
popf
dec
jle
mov
add
dec
faddl
test
adc
mov
inc
pop
loopne
cmp
mov
dec
and
mov
sub
outsb
scas
inc
leave
in
cmp
pause
repnz
leave
or
and
xorb
gs
aaa
stos
sub
xchg
daa
lds
data16
dec
and
push
nop
adc
xchg
mov
mov
testb
adc
rolb
dec
mov
aam
mov
cs
push
mov
and
inc
jle
cmpsb
ljmp
sbb
sub
decl
out
mov
sub
xchg
adc
ret
loope
lods
adc
cmp
test
popa
mov
add
sub
sbb
push
mov
aas
pop
dec
cmpsl
ret
lea
stos
jb
xor
push
in
push
or
inc
jl
add
push
push
ss
xor
pop
lea
daa
arpl
cmp
pop
aad
xor
notb
cmp
push
pop
mov
mov
ss
pop
inc
push
cmc
int
mov
iret
push
adc
xor
call
das
pushf
jge
mov
jnp
sbb
mov
inc
les
and
decb
popa
ret
je
inc
lods
test
mov
jmp
cmp
add
inc
cmp
jae
loope
jmp
or
mov
and
sub
inc
mov
nop
ret
adc
mov
out
jb
pushf
add
jne
xor
jmp
rolb
mov
scas
pop
or
cltd
add
or
js
in
xor
dec
mov
in
dec
leave
push
xchg
inc
lahf
push
andb
xor
jle
enter
dec
pop
sub
pop
call
sar
push
dec
or
test
je
and
sbb
or
outsl
pop
cli
aaa
xchg
inc
inc
enter
cltd
inc
or
cs
mov
sbb
aam
in
inc
mov
das
lods
push
cli
xchg
les
mov
sahf
aam
cmovl
jb
movsb
or
cmp
add
or
push
jb
xchg
mov
sbbb
or
xchg
bound
out
and
rorb
sub
pop
imul
jb
xchg
ds
mov
fs
xchg
push
mov
xchg
push
fmull
pop
mov
sbb
sbb
pop
aad
dec
xchg
push
sub
int3
pop
lock
sub
mov
push
enter
cmp
les
lds
and
inc
shlb
cltd
add
adc
in
add
sub
push
and
in
and
sub
inc
insl
rol
js
jne
fcomps
popa
push
aad
movups
jne
push
cmp
mov
add
add
aas
lea
cmp
sarl
xchg
dec
jle
mov
cmp
jl
pop
rcr
js
sbb
filds
xor
into
sub
iret
sub
push
xor
dec
adc
or
dec
adc
push
add
ds
cmp
scas
data16
ja
pop
rcl
add
inc
mov
push
leave
cmp
sti
pushf
or
adc
sbb
sub
push
enter
pop
lahf
out
pop
push
sahf
sub
jl
enter
imull
inc
sub
pop
mov
testb
les
sub
es
decl
les
push
mov
xchg
cmp
mov
repz
ret
adc
xchg
loope
out
pop
insl
and
imulb
lock
nop
xor
out
pop
mov
bound
add
decl
js
cmc
or
leave
jns
ret
push
popf
fld
lods
adc
fnstcw
push
sahf
mov
into
and
and
cli
fstps
lods
jmp
test
adc
push
jg
and
fldl
and
fldcw
bswap
add
mov
hlt
pop
ret
mov
push
fcmovne
xchg
and
jne
jo
add
push
dec
pop
sub
sbb
mov
sbb
or
push
jg
and
loope
test
add
dec
or
xor
jmp
sub
subb
popf
fisttpll
or
sub
sahf
aad
jo
dec
imul
or
xor
push
dec
push
mov
fstp
adc
mov
je
or
popl
mov
xchg
and
rorb
inc
xchg
outsb
dec
nop
mov
adc
adc
lcall
push
fdiv
roll
and
and
shl
daa
or
lock
addb
es
xor
fstpl
jmp
loopne
jmp
std
test
or
pop
test
ret
je
push
jmp
test
add
jg
ficoml
add
sti
push
pop
or
cltd
and
mov
mov
and
je
cmp
pop
push
or
or
xchg
inc
jge
dec
add
pop
add
mov
fmul
mov
or
push
lret
mov
pop
inc
ret
adc
or
and
and
and
sbb
stos
or
mov
pop
fs
adc
loop
aas
push
rcll
adc
pop
jecxz
and
sbb
push
pop
adc
data16
inc
adcb
pop
leave
ds
adc
jp
dec
push
push
ja
adc
cmp
inc
out
add
sbb
and
and
and
and
and
test
sbb
inc
cmpsl
mov
sbb
sbb
shlb
push
or
jne
orb
xchg
dec
sbb
sahf
int
mov
ret
mov
roll
push
movsl
insb
jbe
mov
pop
xor
adc
bound
sub
arpl
dec
and
cmp
add
pop
fldl
int
sub
dec
push
mov
out
pop
mov
mov
or
pop
stos
pop
outsb
jae
pop
and
or
negb
push
sbb
sti
aam
pop
scas
es
cmp
adc
dec
mov
sbb
enter
cmp
adc
jmp
test
add
sbb
cmp
add
add
add
scas
rcrl
popf
loopne
outsb
movsl
and
dec
lock
jmp
sub
mov
inc
ror
push
jo
lock
inc
cmp
pushf
gs
cmp
lret
cwtl
dec
repz
lret
xor
push
and
push
mov
stos
std
xchg
decb
pop
lea
add
cmc
add
into
sti
mov
mov
jmp
inc
jno
jo
rcll
and
cwtl
dec
mov
test
cli
subb
pop
sub
imul
negl
int3
inc
add
pop
dec
jne
mov
mov
inc
sbb
push
pusha
pop
xor
adc
xchg
mov
aam
mov
or
pop
mov
cmpb
ret
dec
cmpsb
mov
dec
les
sub
inc
adc
pop
adc
decl
xor
and
push
loopne
xchg
and
and
jmp
and
push
nop
fisttps
sahf
push
pop
mov
cmp
sub
imul
jo
dec
adc
int
jg
sti
mov
ret
xchg
push
divb
adc
mov
cmp
je
popf
cmpl
in
popf
cli
fstps
add
sbb
ret
mov
jnp
or
jmp
lods
cwtl
adc
lock
icebp
cli
sub
adc
pop
pop
ret
adc
mov
shl
das
lea
test
frndint
xchg
stc
cli
cmpsl
pop
into
xor
popa
call
push
fldt
cmp
pop
or
cmpb
jg
jne
cmp
or
xlat
cmp
adc
mov
mov
enter
lods
daa
in
sbb
movsb
stc
mov
testl
test
addr16
je
add
pop
jbe
cmp
shlb
push
push
mov
andl
data16
push
andl
adc
push
mov
outsl
jae
stc
rorl
gs
adc
orb
addl
add
or
dec
jmp
mov
xchg
push
out
in
cltd
dec
pop
xchg
in
adcb
xor
in
sub
push
inc
mov
incb
and
movswl
sub
inc
sbb
jge
xor
sub
cwtl
sbb
loop
push
adc
enter
push
dec
aam
scas
adc
inc
xchg
pushf
shrb
add
fldt
pop
repnz
jb
jbe
mov
sbbl
and
imul
fdivp
fcom
sbb
adc
pop
andl
gs
outsl
dec
lret
mov
pop
jo
xchg
pop
add
or
lock
jne
dec
int
insl
sbb
call
jg
jbe
xchg
cli
mov
inc
push
mov
push
leave
ret
pop
js
pop
mov
les
ret
xchg
mov
adc
ds
movsbl
sbb
cmp
xor
mov
scas
cmp
sti
pop
loopne
push
inc
test
or
test
sub
mov
or
or
lret
rorb
inc
int
hlt
and
rsm
sub
or
xor
or
pop
and
ja
dec
iret
cmp
outsb
cli
xchg
unpcklps
inc
mov
inc
push
lret
push
notb
test
mov
dec
frstor
std
jno
add
cmp
lret
pop
inc
cld
inc
adc
push
jle
cwtl
int
cmp
sarb
mov
sub
setg
push
adc
xorl
lea
add
jl
jnp
xchg
xchg
push
cmp
es
cmp
push
fimull
adc
add
sbb
mov
shl
lret
cmp
fidivl
ret
ret
inc
adc
adc
or
mov
inc
lret
inc
test
mov
xchg
xchg
pop
jns
es
adcl
mov
cld
inc
xchg
loope
inc
and
cmp
sbbb
jns
neg
leave
sub
jl
mov
pop
testl
push
sti
fisubl
das
or
push
aad
sub
cs
push
add
subl
cmp
jne
and
ds
int
push
add
andb
jmp
xchg
xchg
adc
or
inc
add
add
or
add
std
jne
movb
jge
scas
dec
shl
and
push
xchg
pop
pop
movb
inc
inc
rcll
clc
and
inc
lods
push
popf
xchg
pop
pop
rolb
add
out
test
add
popf
or
xchg
jl
imulb
push
sub
jmp
mov
cmp
cmpsb
sub
and
dec
test
push
mov
add
or
jmp
add
mov
or
cmp
nopl
or
dec
lock
push
mov
and
jge
dec
lret
pop
inc
in
into
sbb
push
rcll
xchg
lock
testb
mov
add
pop
addb
jns
and
popa
adc
daa
cmpsl
mov
jge
and
int3
sub
pop
adc
xor
or
cmp
dec
in
sbb
jae
pop
jmp
mov
fcomi
out
push
cli
dec
popa
test
sbb
add
testl
add
mov
cmp
je,pt
ror
dec
gs
mov
fnstsw
xchg
lock
imul
sbb
jg
push
jge
adcb
cmp
insl
loopne
shll
add
dec
or
mov
and
push
pop
pusha
std
sbb
popf
icebp
or
je
and
pop
sbb
arpl
loop
pop
bound
add
ja
and
mov
jl
or
icebp
pop
stos
aas
mov
dec
push
ret
or
push
mov
jmp
movsb
aam
dec
mov
inc
js
xchg
sbb
mov
ret
mov
aas
adcb
inc
stc
or
jo
or
push
fistpl
inc
adc
mov
lock
cltd
mov
mov
imul
orb
pop
stos
push
lea
jg
sarl
stos
ja
or
jge
iret
rol
iret
adc
hlt
jle
mov
xchg
loop
add
clc
jle
sub
daa
aaa
xchg
sbb
mov
orl
sbb
jg
push
hlt
out
and
cli
ret
and
sub
or
adc
mov
mov
sub
movsl
stos
and
pop
cmp
push
fstl
or
pop
sbb
and
adc
loop
cmp
and
clc
lds
andl
sub
xchg
and
adc
data16
lahf
push
or
push
clc
jae
mov
ret
jl
mov
adc
pop
hlt
lcall
push
std
cmp
add
imul
adc
ljmp
test
inc
cmp
dec
cmpb
lea
lods
inc
stc
or
dec
add
mov
pusha
push
xlat
xchg
jmp
and
push
add
shrd
dec
das
mov
push
add
sahf
or
ja
dec
cmp
pop
xchg
jmp
sub
lret
jbe
pushf
jae
xchg
jne
out
push
inc
scas
adc
loopne
add
dec
pop
testb
sub
add
add
xlat
icebp
lock
mov
and
scas
inc
fistpl
adc
xchg
push
push
lock
jne
rol
call
or
shrb
cmpsl
scas
and
ss
ret
ds
jae
add
jg
stc
mov
sbb
and
add
cli
pop
inc
daa
aam
push
xchg
bound
out
xchg
add
push
sub
xchg
xchg
jae
push
sub
dec
mov
sub
call
push
inc
push
jns
ret
pop
xchg
sbb
ljmp
fdivrl
push
es
push
or
in
xchg
in
cmp
test
sub
leave
sub
jg
xchg
ret
xor
inc
xchg
cmp
popf
repnz
sbb
or
pop
stos
cmp
sub
test
mov
add
jg
loopne
jle
cmpl
pop
jg
aas
and
adc
xchg
adc
cmp
cld
adc
or
jbe
inc
rcr
outsl
pop
popf
pop
clc
int
js
adc
push
mov
ror
movsl
incb
pop
adc
dec
jmp
sub
or
jb
das
jl
push
cmpsl
pop
mul
loopne
inc
out
aad
mov
sbb
adc
dec
xor
push
mov
popa
pop
mov
adc
sub
inc
dec
aam
fs
xor
push
sub
inc
jae
in
test
adc
dec
push
jne
pop
test
mov
add
xor
sub
jne
pop
pop
mov
sbb
or
push
scas
pusha
sub
data16
dec
pop
cli
mov
lds
sbb
inc
loopne
push
movsl
inc
mov
xor
pop
sbb
dec
xchg
dec
push
cmc
push
mov
push
loope
les
loopne
push
gs
sub
dec
add
adc
push
pushl
imul
setne
pop
mov
cmp
add
test
jl
or
and
or
mov
hlt
add
push
push
decl
xchg
mov
mov
sbb
sar
pop
fldcw
pop
jmp
int3
and
add
and
pop
pop
cld
ret
inc
lock
incb
in
jae
push
adc
adc
jmp
sub
xchg
ds
jae
push
mov
dec
push
or
test
aam
pop
test
mov
lods
mov
sbb
inc
into
and
mov
faddp
sbb
or
cmp
add
sub
adc
lea
xchg
jmp
jp
mov
pusha
push
push
cmp
push
jae
sti
enter
mov
or
cmove
push
inc
push
push
push
in
mov
xchg
fnstcw
das
fmull
jne
fwait
inc
or
fildl
pop
enter
outsl
inc
or
jl
aam
in
sub
ja
std
mov
pop
bound
mov
xor
dec
push
jl
pop
mov
test
test
sub
xchg
cmp
mulb
fcomp
fstps
pop
sub
test
sar
fucom
pop
mov
fcomp
add
je
sub
sarl
sahf
jae
inc
cmp
jne
jge
hlt
inc
jmp
mov
test
jmp
pop
movsb
roll
jg
inc
or
scas
loop
imul
and
push
sub
imul
pop
gs
jecxz
mov
inc
ret
jge
sbb
test
cmpb
mov
inc
inc
inc
or
das
cld
arpl
mov
lret
sub
ja
pop
dec
mov
in
inc
mov
notb
xor
sub
mov
dec
ljmp
or
xchg
xor
jp
pushf
adc
push
adc
ljmp
aam
add
mov
pop
adc
push
iret
cmpsb
fs
ret
mov
sbb
test
test
mov
add
add
xchg
sub
mov
lock
mov
xorb
or
or
mov
lea
push
inc
cmpb
xchg
cmp
loop
lcall
ret
xor
hlt
add
cmp
jl
sti
lret
mov
mov
test
sub
mov
je
push
pop
and
jne
dec
jp
mov
aam
fnstcw
lea
dec
hlt
fcompl
or
rolb
push
cmpsl
sub
cmp
cmp
nop
sbb
adc
adc
lods
inc
insb
and
mov
mov
xchg
bound
pop
daa
adc
test
cmp
jne
pop
cmpb
push
and
add
lods
sbb
sbb
mov
xchg
jle
and
mov
adc
jle
pushl
sbb
and
int3
stos
mov
sbb
in
dec
jmp
mov
and
cli
es
jp
mov
pop
negl
cmc
lock
les
lcall
movsl
ficoms
mov
aad
xor
movsb
xlat
mov
sub
push
adc
cltd
sub
call
outsl
jb
inc
je
lods
in
jbe
cmc
xor
repnz
bound
jns
add
divl
inc
or
jle
repnz
cmp
jg
pop
fistpl
xor
into
jecxz
js
and
mov
ss
aam
loopne
enter
fistpl
je
push
lret
push
in
lds
nop
mov
jne
or
push
lods
aam
iret
sub
mov
rorb
jns
fs
xchg
jb
hlt
push
scas
lods
test
push
lea
je
mov
xor
ds
dec
mov
xor
sbb
xor
push
push
int3
ljmp
and
mov
adc
add
loope
loop
dec
xor
test
or
movsl
cmp
adc
dec
push
or
adc
push
cmp
xor
sub
fildl
testl
xchg
inc
mov
jmp
cmp
addl
cmp
aaa
and
and
popl
cmp
mov
mov
mov
mov
sti
push
scas
and
xchg
test
inc
adc
pop
xchg
fs
in
fcoms
cmp
mov
pop
in
enter
jo
jae
pop
cmp
jne
lea
mov
adc
dec
mov
xchg
rolb
mov
cmpsl
pop
pop
inc
adc
jne
lcall
mov
mov
or
pushf
ljmp
ds
or
and
pushl
ss
push
fs
jmp
leave
loopne
cltd
fsubs
pop
mov
inc
mov
add
ret
je
cmp
mov
pop
pop
xlat
pop
mov
jb
mov
jbe
aad
rorl
or
gs
or
sub
leave
orb
addb
je
sub
cmp
or
inc
cmpb
and
mov
das
cwtl
in
ss
add
add
jo
leave
sub
test
orb
push
cmp
mov
mulb
pop
ret
popf
xchg
mov
pop
stc
fsubl
pop
rol
mov
and
mov
ja
xchg
jg
sbb
pushf
in
clc
nop
test
and
mov
adc
mov
push
cmp
ss
mov
push
popf
sbb
das
or
adc
push
push
and
mov
xchg
and
movsb
cmc
call
das
rcr
cmp
inc
mov
push
add
cli
or
mov
je
cmpb
ret
jno
adc
or
aad
jmp
or
stc
inc
inc
cmp
jmp
adc
pop
cltd
or
sbbl
xor
out
sbb
pop
dec
adc
jne
andl
dec
data16
ds
test
mov
sub
mov
testl
mov
cld
add
inc
shll
pop
jo
inc
xchg
fsub
test
and
pop
lahf
js
and
dec
jmp
xchg
jo
jmp
sbb
sete
mov
shr
mov
rorl
mov
inc
movsb
mov
movb
inc
mov
fiadds
orl
mov
aas
jne
cmp
push
sbb
leave
push
xor
mov
mov
int
sub
cmp
enter
lds
sub
inc
enter
dec
fisttpll
mov
sub
and
in
mov
or
push
push
movsl
mov
inc
mov
out
dec
mov
test
mov
int
andl
push
ret
cmp
test
inc
cmp
sbb
stc
pop
or
sub
filds
sar
sbb
inc
pop
dec
or
xchg
or
xlat
add
cmp
je
mov
int
pusha
or
lret
cmp
das
cli
jnp
dec
inc
scas
xchg
sbb
adc
or
push
and
mov
adc
jns
mov
je
ret
popa
ret
inc
addr16
imulb
sti
out
ret
into
aam
decl
cmc
imul
or
mov
xchg
ret
sub
pop
ds
sbb
icebp
dec
leave
pop
bound
xchg
test
ret
xor
rorb
pop
and
and
push
xchg
sub
cmc
loopne
mov
inc
add
xchg
bswap
push
sbb
jmp
loop
fdiv
les
sbb
pop
jns
and
outsb
mov
rcr
rorl
dec
mov
cmp
push
mov
add
mov
lea
adc
andb
inc
inc
mov
mov
dec
in
inc
dec
adc
cs
or
sarb
les
scas
sarl
imul
or
and
jp
rol
leave
iret
sub
mov
popa
cmp
inc
add
cmp
jl
cwtl
push
mov
pop
cmp
decl
test
inc
add
mov
pop
call
leave
loopne
cmc
xchg
mov
xor
pop
push
mov
dec
adc
orb
lcall
or
sti
jns
add
sti
add
dec
mov
jmp
push
inc
aad
jle
inc
sbb
hlt
xchg
adc
movsb
pop
scas
inc
leave
testl
orb
xchg
out
movb
jae
pop
or
xchg
jbe
nop
jo
pop
inc
push
push
add
call
pop
pop
test
inc
cltd
xor
rorl
lods
sbb
push
fiaddl
xchg
or
test
lea
pop
pushf
lods
or
jns
sub
in
xor
jmp
mov
mov
add
inc
pop
stos
pop
ja
or
pop
sub
inc
sbb
or
and
pop
dec
and
daa
adc
xchg
cmp
push
inc
and
jg
shll
in
push
out
push
cmp
icebp
leave
movsb
fldcw
das
inc
sarl
adc
mov
inc
icebp
push
lock
adc
cmp
inc
add
insl
ds
xchg
jecxz
shr
xor
cmp
icebp
lea
test
ljmp
adc
std
cli
mov
push
clc
push
mov
pop
or
cmp
sub
dec
aad
xor
push
pop
addl
push
pop
cmpsb
push
push
stc
outsl
mov
jnp
push
adc
push
jp
jns
push
and
inc
mov
aam
in
ss
jbe
cmpsb
adc
enter
add
mov
pop
dec
jmp
sbb
ljmp
push
jnp
cmp
dec
hlt
mov
out
lcall
mov
add
daa
mov
jp
sub
nop
jg
ret
sub
jecxz
push
cmc
popa
push
jmp
dec
xchg
xchg
pop
cmp
clc
lods
cli
into
push
mov
push
and
jmp
mov
inc
xor
dec
test
rcll
mov
adc
and
add
jmp
shl
test
out
bound
push
jae
das
cmp
test
daa
int3
dec
stos
pop
adc
scas
adc
or
add
jmp
or
aad
add
test
and
pop
mov
adc
rcrb
cmc
mov
or
adc
pop
push
testb
aaa
sti
dec
sub
xchg
mov
enter
out
push
adc
jnp
and
shlb
lock
pop
sub
or
pop
testb
jge
ret
stc
add
aas
and
sarb
loop
pop
aas
and
push
je
push
stos
sub
adc
and
push
jg
push
test
pop
jne
mov
cmp
jge
inc
dec
mov
xor
mov
movsl
jl
aaa
movsl
mov
es
sub
test
push
mov
dec
mov
cmpsl
test
push
cli
and
cmp
add
xor
mov
and
cltd
ja
mov
shl
cmpsl
mov
xchg
or
xor
push
jl
and
mov
cmp
add
arpl
cld
call
cwtl
pop
pop
xchg
fdivs
out
push
scas
adc
mov
sbb
jmp
sbb
adc
dec
sbb
jge
mov
mov
inc
mov
notb
roll
or
je
lahf
mov
adc
or
pop
nop
pushf
mov
xchg
mov
push
cmp
jmp
popa
cli
and
mov
sub
jmp
jge
ss
dec
sbb
rorl
push
adc
cmp
mov
in
decl
sbb
les
mov
xchg
inc
xchg
mov
or
outsb
xor
popl
cs
add
and
mov
jg
stos
push
dec
lret
or
sbb
add
inc
add
cs
inc
add
adc
lods
xor
mov
mov
std
jmp
pop
test
je
adc
or
loop
and
adc
inc
mov
or
decb
push
and
or
popa
push
or
sbbb
sub
movsl
enter
mov
cmp
or
out
inc
sbb
pop
ds
and
mov
hlt
out
aam
ljmp
dec
push
jno
jne
out
xor
xchg
insl
adc
lea
or
xchg
xchg
cmpsl
or
or
mov
cmp
or
or
mov
mov
or
pop
repz
dec
mov
sub
cmp
dec
outsb
sub
pop
inc
jbe
push
adc
jne
sub
je
jmp
aas
outsb
adc
mov
dec
pushl
scas
repz
jne
mov
lret
inc
mov
adc
push
mov
in
mov
sbb
adc
push
stos
sbb
push
daa
hlt
or
pop
cli
pop
popa
pop
and
callw
hlt
jl
and
or
and
jne
inc
dec
test
dec
dec
xor
out
ret
jmp
test
in
inc
enter
int
xchg
add
pop
mov
push
mov
sbb
pop
add
xor
push
xor
jae
ss
gs
xchg
cmp
pop
sbb
and
test
mov
mov
int
call
scas
je
loope
inc
cmpl
fdiv
push
int3
inc
or
mov
mov
sub
cmp
cmpsl
scas
and
gs
rolb
mov
std
mov
sub
inc
xchg
xchg
ficomps
cmpsl
fisttps
jmp
mov
aam
ljmp
repnz
aas
ret
pop
jbe
lock
dec
dec
push
mov
hlt
scas
cwtl
jmp
leave
push
push
aaa
push
or
xchg
jns
dec
mov
stos
xchg
icebp
popf
stos
insb
fsub
lods
pop
xlat
push
sbb
sbb
cld
clc
dec
repnz
data16
bound
das
loope
sbb
shll
mov
jle
cmp
jl
das
xor
scas
or
xor
repnz
or
push
jb
add
xchg
mov
cld
jbe,pt
push
mov
cli
in
mov
add
stc
sbb
adc
wbinvd
movsl
ret
push
rorb
loop
adc
or
push
xchg
int3
adc
push
out
lock
ja
mov
dec
mov
cmp
cld
or
inc
mov
negb
je
adc
push
xor
or
loop
sub
adc
mov
xchg
fisubs
and
pop
inc
lods
cwtl
aaa
xchg
jno
xchg
loope
cmc
mov
test
je
inc
add
jnp
nop
decb
shlb
invd
pop
adc
incl
cmp
dec
loope
sub
lods
lea
xchg
test
cmp
or
loopne
push
nop
sahf
sbb
pop
adc
divb
mov
push
adc
inc
and
adcb
sub
add
mov
and
pop
mov
mov
out
int
loope
xchg
adc
push
cmp
mov
jmp
scas
lds
and
iret
pop
or
and
xor
pop
notb
push
inc
jnp
push
and
nop
adc
add
or
mov
clc
jno
add
cmp
mov
jne
or
or
dec
xchg
pop
out
sbb
dec
push
jne
dec
or
test
pop
mov
and
xor
and
scas
dec
dec
pop
sub
push
adc
mov
cmp
andl
aas
add
test
jne
inc
cli
incb
add
lea
or
xchg
push
iret
sbb
pop
and
cld
nop
daa
jle
jmp
imul
test
xor
mov
pop
pop
ficoml
inc
pop
test
in
shlb
dec
js
sarl
mov
sub
popf
popa
add
fisttpll
sbb
pop
ds
sbb
iret
ret
pop
push
cltd
mov
enter
adc
pop
mov
enter
adc
into
inc
mov
inc
mov
jg
xchg
dec
pop
inc
decl
push
xor
fildll
cld
roll
out
sub
or
and
clc
inc
cmp
popf
sub
sub
dec
sub
mov
mov
add
add
jne
pop
ljmp
pop
mov
mov
inc
stc
push
and
xchg
sub
push
pop
scas
or
or
iret
jg
xlat
or
fdivrs
cs
jle
push
enter
call
and
je
dec
in
lods
inc
out
jne
fcompl
in
imul
or
pop
shl
cmp
jl
scas
ret
inc
pop
add
mov
sbb
bound
out
aad
clc
jns
lahf
stc
jo
sbb
pop
dec
or
fsts
xor
aaa
test
or
or
mov
and
jmp
jl
dec
cld
xchg
and
add
std
decb
pop
js
push
hlt
xor
sarl
movsb
xchg
pop
mov
adc
and
aad
cmp
adc
push
and
mov
push
inc
ja
bound
xor
add
js
out
sub
es
adc
aas
mov
fdivrs
sub
push
jle
enter
adc
or
push
add
xchg
xor
gs
and
cwtl
stc
shl
loopne
jl
scas
push
lret
bound
mov
adc
jae
aaa
test
and
and
add
and
jp
xchg
roll
pop
xchg
add
neg
sbb
bound
xor
jb
mov
inc
and
inc
in
xor
xchg
ss
jge
or
and
mov
push
fnstenv
nop
fldpi
sub
push
xchg
gs
mov
push
inc
mov
cmp
aas
or
sub
push
ja
inc
cmc
mov
push
add
movb
test
inc
repnz
lahf
pop
imul
push
aad
fsubs
xor
pop
mov
incl
xor
outsl
icebp
or
cmp
mov
and
cmc
jo
clc
ds
xor
incl
lock
in
inc
icebp
cmp
inc
pop
repz
mov
add
ds
pop
cld
xchg
inc
push
pusha
sbb
inc
mov
jno
jae
sarl
jae
lock
jl
addl
call
push
or
insb
hlt
or
sbb
pop
jmp
and
pop
data16
inc
pop
push
mov
dec
and
icebp
push
and
pop
and
xor
ret
xlat
inc
jno
and
mov
jnp
sbb
cmp
mov
and
mov
mov
mov
or
jmp
dec
add
loop
arpl
sbb
pop
enter
test
loop
push
test
stos
sbb
sbb
jmp
or
mov
push
jnp
mov
adc
iret
mov
add
cmp
pop
xor
adc
push
test
dec
repnz
adc
sub
mov
push
daa
movsb
xor
lret
sbb
leave
bound
adc
xor
enter
insl
outsb
es
xchg
je
test
insb
sbb
xchg
lahf
popf
cmp
push
or
or
push
mov
dec
push
lock
mov
push
add
movzbl
fs
and
mov
sbb
sahf
mov
push
add
xchg
addl
jg
xchg
cwtl
stc
jne
xchg
les
mov
cwtl
cld
mov
rcl
out
in
lahf
movsl
andl
pusha
movsl
mov
mov
push
mov
jp
or
add
mov
push
call
mov
mov
push
adc
mov
adc
mov
clc
lahf
data16
pop
or
scas
loopne
sbb
push
mov
ja
jmp
xchg
ja
pop
jmp
cmp
add
push
xchg
jle
push
jne
cwtl
or
out
mov
adc
imul
or
push
or
ja
lret
inc
sbb
fstpl
mov
stos
cmp
or
in
mov
cmc
ret
test
xchg
les
repnz
inc
mov
and
xor
mov
xchg
test
pop
cmpl
outsl
test
pushf
mov
pop
push
seto
daa
cmp
and
fisttps
psadbw
loopne
stc
mov
jg
mov
or
sti
and
test
cmp
pop
shr
sub
xor
scas
or
jg
aad
push
loope
xor
dec
js
cmpsl
adc
xchg
sarl
jge
inc
movsb
push
xchg
sub
xchg
or
sbb
xlat
mov
std
or
ficoml
dec
sub
jge
lret
sbb
or
stos
mov
ljmp
or
dec
inc
dec
int
and
or
or
pop
and
imul
leave
jp
fldcw
rcrb
xor
lret
inc
into
jae
std
shll
pop
mov
jle
xchg
sub
leave
imul
jmp
adc
pushl
adc
add
inc
or
ja
dec
sbb
pop
js
je
push
mov
cmp
add
mov
push
icebp
xlat
call
jo
pop
ljmp
cs
ss
xchg
pop
repnz
or
out
jmp
sbb
sbb
ljmp
pop
outsl
negl
insb
and
push
rcl
inc
add
roll
jbe
push
sub
lea
movsl
aas
in
out
cmpb
or
movsb
adc
ret
movsbl
cmp
push
enter
push
sub
mov
aaa
pop
cmp
rol
adc
lahf
test
push
cmp
incb
jmp
mov
adc
xchg
cmp
mov
pop
in
or
lcall
adc
movsb
insb
dec
dec
add
rcrb
or
xchg
lret
mov
faddl
rorb
in
clc
aas
in
jmp
and
or
add
add
push
pop
mov
shrb
adc
xchg
pop
and
test
add
sti
xor
or
jg
ret
fiadds
jecxz
repz
push
add
pop
push
sub
cmp
rcl
jns
inc
aad
jg
aaa
fmul
inc
pop
jmp
cs
mov
adc
xor
jle
dec
dec
outsb
call
mov
or
movsb
push
add
mov
jle
adc
sbb
addr16
jb
adc
jle
dec
sub
or
push
test
sbb
or
ret
gs
std
cmp
loope
and
outsl
popf
dec
inc
inc
pop
jmp
xchg
jno
jmp
test
and
jae
dec
std
fimuls
out
inc
add
or
mov
test
pop
pop
xchg
or
mov
repz
jno
sbb
adc
insl
mov
add
dec
and
or
sub
out
inc
andl
in
test
cmc
pop
call
lea
decb
inc
popf
enter
aaa
and
add
jmp
xchg
mov
int
add
adc
mov
xor
jmp
sub
and
push
pop
dec
inc
or
push
xchg
je
mov
outsl
mov
imul
dec
pop
pop
test
or
or
movl
dec
fists
adc
ljmp
pop
lods
sbb
jno
sbb
cld
rolb
jg
ret
mov
test
inc
dec
test
jle
ss
push
test
movsb
flds
sbb
and
jge
add
fidivrl
jl
dec
lcall
adc
xchg
or
shrb
pop
movsb
das
sbb
icebp
popa
in
test
xor
out
push
mov
aas
jge
neg
add
adc
sbb
pop
sub
jle
mov
add
jle
cmpsl
pop
sub
inc
out
and
aam
add
fstpt
dec
or
pop
lahf
nop
cwtl
pop
cmp
push
adc
rolb
sahf
xor
stos
test
push
jp
and
sti
jmp
jb
xchg
xchg
hlt
stos
lods
or
xchg
add
adc
movsl
pop
mov
or
jae
cs
add
in
mov
adc
mov
fmull
and
and
push
inc
or
dec
sub
pop
inc
xchg
hlt
js
enter
das
xchg
out
mov
push
enter
or
and
dec
out
call
jmp
in
adc
and
sti
add
aas
aad
lock
sar
out
add
sub
or
or
mov
cmp
andl
sbb
or
add
adc
data16
mov
mov
clc
shl
pop
pop
maskmovq
sub
sti
push
jmp
xchg
test
in
push
pop
test
push
and
xor
and
xchg
roll
sub
sbb
loope
mov
xchg
dec
iret
add
jmp
mov
cmp
out
or
fs
adc
push
cli
imul
in
jge
idivb
mov
xchg
in
mov
mov
mov
test
cmpl
andb
inc
mov
dec
out
jno
dec
notb
add
jge
adc
add
jl
push
or
add
ljmp
jne
sti
or
js
and
xchg
inc
or
sbb
jne
pop
cld
add
neg
and
or
ss
repz
fisubl
jle
pusha
cli
adc
jne
lock
adc
mov
nop
or
or
out
xchg
sti
mov
std
sub
inc
add
or
push
add
ss
mov
mov
lea
jl
xor
shll
out
push
adc
icebp
test
decl
mov
sub
sub
mov
rorb
adcb
sbb
sub
nop
popa
or
xor
pop
fs
pop
add
or
andb
leave
test
outsl
mov
fdivs
or
movsb
loope
lsl
cmp
adc
aas
push
mov
cs
das
mov
mov
sbb
test
or
sbbl
push
xchg
xchg
xor
inc
out
or
or
int
insb
mov
push
mov
dec
stc
mov
fbld
sbb
mov
sbb
push
loope
adc
xor
mov
add
add
sub
repnz
add
push
lea
in
xor
in
and
or
jne
testl
sub
dec
xchg
js
mov
or
mulb
pop
test
insb
sti
pop
xchg
push
test
xor
push
nop
hlt
jne
cld
adcb
jae
mov
cmp
push
orb
cmp
cld
mov
inc
and
cmpsl
jne
clc
loope
or
push
push
fscale
adc
leave
lret
orl
add
jmp
fucomi
dec
xor
insb
out
loop
or
imul
fisubrl
stc
mov
and
in
sub
cmp
and
cmpl
jg
push
lods
xchg
std
mov
sarl
ja
xchg
pusha
cmp
xor
js
mov
sti
push
mov
inc
pop
ud2
push
push
mov
call
push
mov
cmp
cmp
stos
add
mov
hlt
push
pop
or
push
cwtl
clc
sbb
or
xor
call
ljmp
aas
jbe
dec
cli
mov
adc
sbb
push
or
rcrl
push
push
pushl
jecxz
mov
sub
aam
mov
add
callw
enter
fnstenv
jg
andl
jle
addb
mov
jne
shll
adc
loop
mov
push
push
push
add
mov
sahf
jl
push
je
inc
in
mov
scas
dec
mov
in
cld
clc
lcall
ja
mov
xchg
decb
jne
inc
fidivrs
mov
stos
cltd
loop
sbb
out
inc
inc
stos
xor
xchg
mov
lret
mov
cmpsl
fimuls
pop
sbb
loope
push
test
cmp
dec
add
push
push
push
mov
neg
mov
pop
sub
ss
or
es
or
xlat
pushf
out
or
cmp
scas
out
inc
jmp
cmp
mov
fldcw
mov
cmc
cmc
push
pop
adc
test
jno
call
push
or
dec
add
das
pop
jo
cs
lea
ret
lods
movl
test
jmp
enter
ret
sub
adc
add
push
dec
cld
sbb
mov
or
ret
push
dec
xchg
daa
add
movl
sbb
inc
incl
push
fs
test
mov
sub
push
mov
lea
clc
push
test
adc
pop
or
and
jl
sbb
push
jge
pop
sbb
adc
stos
lods
aam
dec
push
mov
fs
pop
notb
leave
popf
test
push
push
xor
aad
mov
insb
xor
ljmp
enter
sub
nop
and
cmp
cmp
aas
inc
push
xchg
jl
adc
and
and
enter
push
imul
or
sbb
lret
test
sbb
push
jl
pop
xchg
push
ja
int3
sub
add
sbb
mov
sub
fmuls
mov
int3
xor
sub
jp
test
push
popf
sbb
or
push
push
adc
or
pop
jno
jmp
or
sbb
addl
push
mov
push
les
mov
sbb
das
and
push
sub
xchg
pop
mov
aas
dec
lcall
push
repnz
lock
add
orb
mov
inc
test
aas
ja
mov
pop
dec
add
adc
and
stc
jb
mov
mov
jne
scas
int
jo
sbb
xchg
sub
jb
or
and
mov
and
shlb
adc
cmp
fmuls
es
push
cmp
push
icebp
cs
sbb
inc
notl
inc
xor
fdiv
movzwl
roll
sub
pop
sub
stos
je
mov
adc
push
lods
das
xlat
mov
in
mov
push
aad
cmp
push
nop
rclb
sbb
hlt
pop
sbb
icebp
cmp
hlt
mov
aaa
jle
leave
movsl
pop
pop
clc
nop
xorl
mov
mov
dec
orb
xchg
clc
xchg
imul
and
adc
push
pop
testl
or
or
jno
pop
mov
movsl
and
jl
hlt
pop
push
push
push
jge
push
and
movsl
pop
loope
jb
dec
hlt
mov
loopne
push
fidivrl
push
sti
test
jp
or
leave
mov
lret
leave
dec
sub
or
jae
push
jb
pop
add
loop
sbb
data16
xor
dec
scas
es
adc
out
cmp
push
inc
ss
add
je
and
inc
jge
jle
add
cmp
sbb
or
push
mov
rcrb
push
out
inc
mov
inc
pop
aas
xor
rolb
sub
add
jnp
call
pop
ficoml
push
incb
outsb
push
mov
test
rorl
mul
pop
sub
jmp
mov
push
loopne
mov
shll
xor
mov
dec
adc
mov
xor
loop
cmp
jae
je
push
push
xchg
push
das
fisubrl
mov
fisttps
mov
mov
mov
mov
sbb
mov
sbb
add
mov
imul
adc
data16
jl
pop
mov
jae
pminsw
je
stc
jne
mov
sub
sar
repz
push
ret
add
or
lock
roll
and
inc
dec
mov
scas
mov
jmp
or
or
add
mov
and
es
adc
clc
int
and
dec
add
and
push
pop
fs
pop
je
sbb
push
xor
and
pushf
or
jg
fwait
js
jge
data16
test
sub
and
mov
cmc
das
ljmp
dec
imul
add
aam
repnz
pop
mov
incl
dec
lea
int3
xor
nop
mov
push
mov
dec
or
xor
jmp
sub
xor
sbb
je,pt
adc
call
inc
int3
adc
push
mov
push
add
mov
ret
mov
inc
add
sti
int3
mov
adc
into
mov
mov
or
js
mov
inc
mov
pusha
loopne
sub
adc
lock
jb
rclb
pop
add
pusha
add
add
add
movsl
add
xchg
xor
pop
ja
popa
push
out
mov
sbb
insl
rorb
xor
xchg
fs
add
mov
push
movsb
mov
cmp
rclb
add
sub
sbb
mov
repnz
mov
dec
jno
repz
mov
sbb
in
mov
hlt
movl
test
add
std
in
leave
mov
dec
pop
add
insb
push
arpl
cmp
or
add
pop
adc
in
add
jb
addr16
add
inc
aam
dec
std
test
or
insb
cwtl
add
fildl
pop
mov
xor
filds
iret
or
shrl
cmp
ficoms
enter
push
popa
sarb
add
les
iret
pop
shld
sub
mov
add
and
add
mov
jl
das
adc
pop
stos
sbb
add
nop
inc
fdivl
jno
fildl
mov
adc
aad
mov
mov
add
aam
call
js
stc
orb
test
or
mov
sub
insb
add
pop
arpl
hlt
push
jno
bound
sbb
xor
dec
ret
shl
in
xchg
jge
add
add
shl
addb
les
cmc
fnstenv
mov
ljmp
mov
bound
dec
sub
rorl
pop
popa
mov
into
and
mov
aam
movsl
push
fisttps
xchg
fadd
add
shll
add
imul
add
pusha
fidivl
sub
add
pop
add
leave
jl
fnstsw
jno
push
inc
inc
add
adc
and
and
cmp
aam
mov
into
push
stc
ficomps
leave
fnstcw
sub
adc
mov
xlat
pop
pop
cmp
mov
add
and
mov
lcall
mov
je
inc
aad
scas
ja
popf
adc
adcl
jae
add
arpl
test
fs
ds
push
or
lock
push
in
pop
decl
xchg
daa
scas
add
mov
pop
cmp
lock
repnz
inc
push
imul
xorb
insb
sbb
loopne
outsb
jbe
aam
loopne
rorl
adc
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
cmp
fisttps
addr16
add
dec
ss
dec
fisubrl
or
imul
dec
add
pusha
jp
inc
ret
jbe
cmp
push
sbb
outsb
xor
imul
lret
sbb
shrb
ss
add
ja
int3
add
add
das
es
mov
mov
add
sub
mov
cmpsl
add
xlat
ret
shlb
sub
scas
ficomps
cld
add
pushf
mov
xchg
insl
add
add
push
jmp
addr16
jb
jo
add
adc
mov
mov
cmp
mov
or
mov
xchg
or
mov
fdivrl
fstpt
or
xchg
xchg
pusha
icebp
clc
mov
add
sbb
int
mov
mov
jae
add
mov
out
sarb
dec
cmp
pop
or
jns
add
clc
shl
imul
insb
push
js
or
xlat
push
addl
add
cmpsl
testl
inc
imul
dec
push
scas
faddl
pop
fldenv
filds
fdivs
push
sarb
jg
mov
jmp
sbb
mov
lret
mov
push
cmpsb
mov
sar
in
push
xlat
add
sub
push
mov
jp,pn
mov
dec
popa
add
add
push
add
aaa
mov
or
ret
add
add
sub
add
inc
sbb
and
popf
dec
jnp
push
add
xor
je
cmp
and
in
hlt
jb
cmp
hlt
out
outsb
les
dec
gs
adc
sbb
sbb
sbb
jno
pop
mov
push
cmpsl
add
test
pop
and
or
jo
lea
bound
les
xor
lods
inc
xchg
inc
adc
push
cmpb
adc
pop
outsl
adc
xor
mov
dec
ds
inc
je
dec
jge
jge
jne
sti
faddl
hlt
inc
loope
xor
push
fists
dec
ds
add
add
push
add
cli
add
add
inc
add
ret
and
cmp
pop
pop
or
aaa
jno
jns
icebp
mov
test
add
jo
js
mov
aaa
bswap
add
pop
outsb
pop
jne
insb
add
sub
sti
sti
push
pop
pop
jns
or
sub
or
js
cmp
insl
outsl
push
fs
aas
push
adc
bound
and
andl
aas
pushw
push
test
les
insb
outsl
xchg
imul
ss
mov
call
xor
pop
adc
cmp
dec
sbb
inc
or
mov
inc
das
or
adc
std
aad
sarb
inc
mov
dec
jl
sub
sub
insb
lret
lret
outsl
and
outsb
jge
dec
inc
push
dec
inc
xor
mov
xor
adc
inc
nop
push
fmull
sub
mov
adc
enter
or
xor
sub
sub
test
sbb
int
cmp
mov
rcrb
mov
xor
je
movsb
sub
insb
xor
jo
or
mov
imul
repz
dec
push
inc
cmp
push
dec
cld
filds
dec
inc
sub
push
dec
cld
dec
movsl
adc
push
xor
cmp
inc
sahf
insb
push
nop
je
movsb
dec
cmp
jl
push
into
sbb
jle
jo
nop
sub
aaa
adc
loop
jne
push
xchg
dec
push
icebp
jbe
ja
cmp
mov
ret
mov
nop
xor
movsb
jbe
push
lea
cmpsb
push
arpl
mov
std
mov
pusha
cld
pop
rclb
add
pop
sbb
jecxz
pusha
xor
scas
clc
cmp
jo
mov
and
movsb
and
pop
cmp
and
leave
sbb
mov
andl
and
popa
test
and
arpl
lret
xchg
pop
push
sbb
add
andb
mov
xchg
jmp
aaa
pop
xor
cmp
and
loopne
pop
dec
sub
icebp
iret
cli
jne
sub
pusha
push
popa
add
mov
sub
xor
or
cmp
orb
aam
cmp
data16
xlat
jns
stos
inc
sub
in
push
aaa
popf
cmp
mov
jns
sub
mov
and
and
and
aad
cmp
inc
faddl
adc
out
sbb
dec
xor
imul
push
or
inc
pop
gs
sbb
adc
mov
out
sub
adc
cmpsb
fs
popa
jle
jnp
pop
js
pop
xor
push
dec
outsb
pop
xor
ret
add
and
inc
sbb
sbb
or
mov
bound
and
xor
mov
shrb
es
dec
pop
xor
pop
bound
adc
sbb
inc
push
mov
les
fs
adc
mov
sub
push
fisubrl
orl
sub
mov
or
loopne
sahf
mov
add
and
inc
cmp
cmp
mov
push
mov
cmp
xor
or
fiaddl
inc
push
and
add
push
hlt
pusha
dec
or
add
or
pushf
sub
adc
sub
rolb
cli
push
inc
call
mov
jle
test
jns
inc
xor
sub
clc
loop
mov
movsb
add
jo
sarb
js
jo
sbb
pushf
test
aam
mov
lcall
mov
mov
xor
or
inc
mov
mov
sahf
pusha
cmp
mov
hlt
inc
mov
push
inc
ja
pusha
subl
in
inc
push
cwtl
int3
xchg
adc
sbb
sbb
sbb
sub
in
dec
add
or
les
cwtl
mov
and
cmp
xchg
adc
inc
push
test
fidivrs
mov
lret
in
sub
enter
push
inc
loope
pusha
sbb
mov
adcl
xor
les
or
push
orb
add
add
dec
dec
cs
movl
add
add
fisttpl
add
xor
inc
add
fists
or
inc
add
inc
or
jae
push
inc
add
add
cmpb
inc
or
jb
bound
pop
sbb
or
xor
shll
adc
push
mov
adc
mov
add
pusha
jae
outsl
jb
je
cmp
popa
jl
rclb
aaa
and
fistpl
cs
mov
xchg
xor
imul
jne
pop
xor
inc
mov
sbb
dec
fs
out
mov
addr16
ja
js
aad
arpl
scas
js
adc
cltd
sbb
cmp
jae
push
pushf
inc
arpl
push
inc
addr16
aas
cmp
scas
and
ljmp
cltd
and
mov
or
add
data16
popa
jb
push
pop
dec
imul
pop
fiadds
inc
jne
xor
mov
int3
lock
mov
mov
cmp
dec
dec
addr16
xor
push
jne
addr16
jo
ss
jo
xchg
lock
nop
adc
and
cmp
lds
add
fs
je
clc
outsb
inc
inc
das
jp
jbe
jae
repz
inc
push
loopne
and
and
mov
cld
cwtl
add
and
dec
loopne
fsubs
rolb
mov
pushf
mov
fildl
push
xchg
xchg
and
push
dec
pop
xchg
push
and
dec
inc
mov
xor
or
and
or
or
and
inc
loopne
mov
cwtl
rcrb
adc
mov
xchg
int3
adc
js
je
push
inc
dec
cmp
xor
xor
dec
sbb
adc
or
add
insb
xchg
mov
adc
and
dec
fcoml
ror
mov
adc
xchg
mov
nop
cmpsb
adc
mov
jo
push
push
xchg
push
and
inc
xor
sub
and
dec
or
add
cld
xchg
xor
or
and
dec
in
fsubl
rolb
dec
mov
or
js
je
int3
sbb
xchg
or
inc
inc
dec
call
or
mov
adc
and
dec
adc
adc
or
adc
xchg
add
and
dec
in
pop
pop
fsubs
dec
jno
aaa
xor
adc
imul
xchg
insb
adc
insl
sti
mov
jo
jae
sbb
imul
pop
dec
dec
notl
scas
test
enter
sbb
and
fbstp
jo
and
je
arpl
mov
mov
mov
mov
outsl
adc
adc
and
bound
adc
data16
call
cmp
push
adc
xchg
adc
dec
es
or
adc
or
fimull
pop
cmp
xor
enter
loop
mov
mov
xchg
and
push
imul
ss
push
cmp
sbb
shrb
daa
or
outsb
nop
sub
inc
inc
lcall
adc
jb
jns
imul
inc
mov
adc
jp
lcall
xchg
lahf
jnp
nop
jmp
xor
cs
orl
xchg
or
int
insl
cmp
imul
cli
je
add
outsl
push
imul
gs
dec
inc
mov
cs
jns
ja
or
ss
xlat
aam
cld
xor
add
out
adc
xor
and
cmp
pop
mov
push
orl
pop
or
push
jb
or
jo
addr16
xchg
xor
sbb
cmc
sbb
push
imul
or
je
inc
outsb
jne
cmp
jbe
pop
sbbl
out
xchg
xchg
and
insb
mov
ror
inc
xor
jg
lret
bound
insb
and
xor
fdivl
cmp
and
lcall
hlt
or
or
cmp
addr16
or
or
jo
fs
les
scas
aad
dec
cld
movsb
fs
cmp
es
call
arpl
inc
hlt
icebp
bound
in
data16
and
cmp
in
push
cmpsb
loopnew
clc
xor
dec
xor
push
out
movsl
xor
enter
inc
cmp
testb
inc
loope
inc
or
cmc
mov
cmp
mov
mov
in
and
xchg
adc
dec
add
and
xor
in
dec
nop
scas
cmpl
sub
dec
and
xor
xor
out
jo
sub
xchg
dec
and
sub
xchg
push
cmp
lock
popa
mov
clc
dec
push
sub
or
adc
cmp
cmp
fs
push
push
and
lods
sbb
fsts
je
pop
xor
int3
jo
arpl
pop
loopne
push
das
aas
inc
push
lods
imul
cwtl
adc
insb
mov
dec
mov
repnz
and
adc
add
inc
test
stos
cmp
and
and
popf
or
adc
pop
add
cmp
sub
insb
loope
and
mov
jne
dec
dec
inc
dec
adc
push
inc
push
adc
xor
add
push
inc
push
jecxz
orl
aas
pshufw
lods
adc
dec
cmp
cs
aad
mov
fsubp
push
mov
jo
nop
and
inc
and
dec
test
hlt
bound
mov
push
sub
dec
dec
push
mov
test
xor
or
and
jno
push
jbe
ljmp
pop
cmc
xor
in
je
das
subb
fsubs
popa
push
dec
ja
xchg
cmp
imul
enter
push
push
and
je
jb
mov
mov
dec
movsl
gs
xor
daa
jae
xchg
push
jb
es
insb
mov
mov
in
je
and
xchg
jge
aam
and
popf
shlb
jle
out
int
and
dec
cmp
sbb
cmp
xchg
call
dec
outsl
or
inc
lock
dec
cmp
in
jo
inc
inc
bound
dec
loope
mov
data16
js
sti
hlt
and
push
jae
sbb
repnz
daa
push
xor
xchg
add
mov
and
inc
sub
ror
cmp
mov
callw
jae
imul
xor
dec
add
jne
pop
cli
ds
daa
lods
cmp
jbe
fidivs
inc
sbb
inc
xor
push
sbb
xor
push
mov
xor
push
dec
and
and
cmp
rclb
push
push
sub
or
inc
inc
xor
gs
sub
dec
push
cs
leave
dec
bound
int3
outsb
jbe
dec
je
jb
mov
and
lahf
jb
inc
popa
push
push
dec
ss
out
adc
addr16
scas
jbe
mov
sbb
insb
into
sub
and
or
cmp
and
rcrb
lret
dec
push
aas
pop
mov
mov
pop
xchg
push
movsl
outsb
lock
in
dec
mov
arpl
pop
and
pop
pop
push
outsb
push
imul
je
jo
push
xchg
daa
sub
dec
xchg
sbb
cwtl
rcll
gs
add
nop
repnz
lods
sbb
dec
fidivrl
cmp
sbb
inc
ds
je
adc
jg
jbe
xor
loope
mov
push
leave
add
in
andl
mov
jb
sbb
jecxz
cltd
insl
mov
and
mov
push
in
mov
gs
jge
and
add
ds
inc
pop
rcrb
mov
push
mov
push
inc
dec
push
cs
dec
xchg
movsl
ss
and
mov
dec
dec
push
sub
push
sbb
and
or
push
dec
dec
daa
dec
dec
sbb
dec
sbb
movsb
int
and
push
shll
movsb
dec
sarb
adc
push
aad
or
push
shlb
jecxz
dec
imul
or
popa
cmp
test
insl
sub
jno
pop
cs
jo
push
mov
test
les
lahf
dec
cmp
mov
rorb
xor
push
mov
sub
mov
cmp
test
loope
push
xor
leave
insl
jne
cmpsb
bound
aam
cmp
call
pop
pop
mov
dec
push
movsl
daa
dec
loope
outsb
inc
ret
test
es
popa
cmp
jbe
sub
bound
push
mov
pop
insl
fwait
mov
jecxz
cmp
pop
arpl
dec
mov
adc
adc
and
push
mov
in
testl
cmp
stos
sub
xlat
xchg
jg
mov
sbb
xchg
and
mov
movsl
mov
insl
jo
adc
jbe
add
sub
push
pusha
mov
or
mov
and
adc
mov
mov
jb
mov
lret
cmp
inc
sbb
jl
sub
cmpsb
mov
pop
fwait
dec
imul
sub
push
outsl
jmp
je
cmp
sub
call
in
shlb
mov
sbb
rcr
and
lods
mov
cwtl
xor
inc
sbb
cmpsl
adc
fwait
push
mov
mov
movsb
iret
mov
xchg
push
nop
fisttpl
popf
jmp
sbb
aas
in
mov
push
pop
cmp
pushf
fnsave
bound
push
ss
adc
inc
inc
dec
mov
repz
arpl
fsubl
ja
hlt
mov
jg
and
pop
ss
pop
sub
ja
inc
adc
rcrb
adc
add
push
dec
dec
dec
pop
lods
fwait
dec
imul
cmp
sbb
push
add
imul
sub
lock
loopne
lahf
mov
shll
push
sbb
repz
insl
movsb
jl
push
insb
insl
and
jl
lock
mov
loopne
loopne
xor
jo
imul
pop
movsb
inc
mov
mov
pop
inc
data16
mov
dec
xchg
xchg
inc
pop
xor
push
sub
outsl
inc
sub
pop
dec
lret
add
or
gs
cmpsb
popa
icebp
das
xor
imul
xchg
xlat
push
pop
imul
into
and
xchg
sti
shll
adc
add
icebp
jns
cmp
test
xor
jo
popl
je
fdiv
push
stos
adc
mov
lea
inc
in
dec
outsb
imul
addr16
cmp
pop
popa
addr16
mov
sbbl
insb
jo
movsl
xor
mov
or
mov
mov
or
dec
xchg
push
push
dec
sbb
lcall
shr
pop
cmp
inc
xchg
dec
insb
nop
in
movsb
xor
dec
sbb
pop
sahf
sbb
dec
push
lret
xchg
int3
nop
jbe
cmpsl
fcmovu
fwait
shlb
cmp
mov
jle
jb
or
test
dec
arpl
nop
cmp
cmpsb
aam
or
push
negb
sub
push
jo
push
data16
mov
jns
sub
fildl
pop
xchg
jo
outsb
push
imul
mov
gs
xor
repnz
sbb
dec
mov
dec
cmp
xchg
sub
jmp
mov
insb
inc
lahf
and
jle
loopne
mov
icebp
sub
sbb
inc
dec
dec
push
loop
jmp
daa
jecxz
roll
push
sub
pop
xlat
fimull
jp
jmp
or
lods
dec
daa
cwtl
pop
or
lods
mov
or
sbb
insl
jo
ret
mov
inc
add
push
or
jo
insl
or
adc
lret
pop
mov
dec
call
pop
inc
dec
outsl
adc
pop
xor
or
fdiv
jns
lret
cld
test
out
push
adc
jo
mov
clc
imul
sub
inc
lods
sbb
adc
push
pop
or
cmp
xchg
insb
mov
sub
mov
sub
mov
adc
cmpl
jns
pushf
add
inc
inc
push
aad
mov
sub
jo
cmp
sahf
dec
inc
jae
dec
sbb
adc
mov
add
push
aam
and
aas
adc
or
mov
or
adc
daa
inc
or
mov
and
xlat
in
and
xchg
sub
popa
shrb
loope
xor
push
imul
dec
xchg
shll
push
sbb
cmp
jne
adc
cwtl
xlat
mov
std
testb
and
movsl
mov
cmpsl
dec
sbb
insb
leave
push
xchg
sbb
mov
cmp
sub
test
xchg
das
popa
ret
inc
xchg
out
lea
and
sbb
xchg
andl
adc
imul
sub
xchg
pop
testb
movsl
mov
xchg
mov
insb
imul
or
hlt
mov
fsubrs
dec
push
lea
cmpsl
in
les
int3
pop
repnz
cmc
pop
pop
pop
idivl
mov
insl
mov
sbb
sub
pop
push
xchg
sub
sub
repnz
mov
gs
imul
cmpsb
clc
shrb
sub
inc
sbb
xor
push
or
xor
and
gs
loope
sub
sub
idiv
inc
js
push
inc
xor
and
xchg
inc
sub
add
ret
movsl
jno
mov
or
es
adc
cltd
and
or
mov
cltd
dec
jo
or
adc
add
jae
cmc
mov
les
pop
aad
leave
dec
sub
adc
xchg
es
xchg
fwait
ja
xor
push
outsb
lds
xchg
loop
push
lahf
inc
fs
mov
in
ss
push
fs
xchg
add
adc
pop
enter
loopne
push
dec
push
dec
push
inc
lahf
adc
mov
sbb
stos
ja
scas
sub
add
inc
outsl
adc
mov
cmp
jno
sub
dec
dec
and
push
ljmp
inc
jno
repz
dec
out
movsb
sbb
and
mov
mov
shrb
out
test
movsb
lods
imul
or
je
aaa
sbb
aas
push
or
mov
cli
sarb
pop
call
dec
and
lods
sbb
insl
xchg
mov
sahf
rcl
sub
jp
xor
fwait
sahf
inc
add
sahf
das
out
fisubrs
and
or
adc
jl
pop
clc
loope
popf
mov
push
lret
jnp
and
hlt
les
stos
addr16
imul
jnp
ds
test
adc
jl
jb
sub
sbb
push
imul
mov
add
sub
mov
test
cmp
loop
pop
iret
test
dec
loop
insl
pop
push
mov
vpxord
scas
xor
fcmovb
xchg
gs
adc
xchg
push
loope
jecxz
imul
push
dec
test
loop
bound
pop
and
int
mov
push
nop
cmpsb
in
xchg
and
and
inc
xor
sub
movsl
shlb
cli
fsubrl
daa
iret
cmp
call
xchg
mov
or
xor
fdivs
rclb
hlt
xchg
adc
xchg
mov
xor
mov
dec
cmp
xor
cmp
sbb
xor
popf
add
mov
test
push
sub
push
out
jb
mov
or
or
lahf
aam
shlb
adc
insb
pop
cmp
jnp
gs
sbb
cmpsb
das
pop
cmp
fcoml
jns
mov
lods
imul
push
mov
mov
stc
jle
out
jg
adc
sub
pop
mov
nop
push
inc
js
ss
je
push
fimull
fidivl
jo
sub
cs
dec
mov
jns
es
sbb
push
int
or
insl
outsl
jbe
sub
dec
jecxz,pn
hlt
sub
and
fidivrl
insb
cmp
scas
and
push
add
cwtl
scas
shll
cmp
mulb
sub
xchg
sub
movsl
mov
push
sbb
push
mov
cmp
xor
pop
mov
cmpsl
stc
fs
insb
jne
addb
repz
push
ljmp
sub
sbb
sub
adc
push
mov
lock
mov
add
dec
push
imul
pop
dec
jb
pop
jmp
subl
or
pop
jo
dec
push
cmp
scas
push
push
xchg
rcrb
stc
sbb
inc
roll
adc
hlt
data16
cmp
outsl
jmp
pop
adc
push
cs
das
or
and
popa
push
loop
arpl
in
mov
cld
sbb
call
xchg
jecxz
cli
push
daa
jno
jne
xchg
imul
fs
imul
mov
dec
mov
sub
stos
insl
dec
frstor
enter
sub
int3
push
jl
std
repz
inc
out
xor
scas
inc
inc
lret
in
sbb
aam
out
adc
scas
aaa
push
loop
ja
jmp
lahf
int3
cmc
rorb
or
mov
movsl
nop
mov
adc
adc
call
dec
in
xchg
notl
xchg
or
imul
cmc
inc
xor
push
lods
or
jo
inc
or
addr16
and
out
pop
jle
dec
add
popa
call
or
scas
dec
rorl
xchg
test
mov
push
xor
inc
es
outsb
in
sub
xor
mov
push
mov
pushf
notl
or
and
sti
cmpsl
aas
cli
rcl
adc
fisubs
push
fnstenv
and
inc
add
push
pop
sbb
push
pushf
ret
dec
push
inc
movl
cmc
enter
stos
xor
cmpsl
sbb
sub
sbb
dec
sub
add
rorb
loope
lock
push
sub
cmp
xor
out
sub
jp
sbb
sbb
ljmp
mov
mov
jne
adc
sub
test
dec
movsb
or
ret
or
movsb
mov
bound
pop
in
or
or
jb
or
mov
lcall
lcall
stos
popf
outsl
je
pop
gs
push
jl
nop
es
mov
inc
fsts
or
dec
rol
and
adc
jae
or
inc
rcrb
repnz
inc
or
jne
pop
xchg
fs
push
test
jecxz
sbb
addr16
test
xor
dec
test
adc
movsb
and
and
test
jnp
mov
mov
sbb
loopne
rcll
sbb
push
inc
push
push
xor
xor
scas
imul
mov
jbe
and
or
dec
imul
outsb
sub
cmp
pushf
adc
and
sub
and
loopne
jecxz
push
pop
and
or
lds
xchg
inc
int3
sub
push
sub
push
enter
imul
pop
or
sbb
adc
adc
sub
xlat
xor
je
xor
cmc
sub
mov
sbb
xor
dec
adc
sub
and
and
rcrl
sub
push
jne
inc
in
or
dec
push
imul
dec
fwait
ss
test
xchg
sub
sub
sub
sahf
daa
lds
sbb
mov
pop
out
js
sbb
adc
fs
rolb
arpl
insb
mov
push
daa
aas
int
pusha
cli
push
jp
inc
adc
cld
jl
cmp
xchg
mov
xor
sar
loope
scas
cmpb
insl
cmpsl
pop
add
inc
push
mov
xchg
push
rcll
out
dec
leave
je
rorb
cmp
aas
rcl
cmp
add
cmp
sub
or
add
push
mov
sub
aas
sbb
sub
xchg
add
scas
push
sbb
pushf
loope
add
stc
pop
inc
or
loop
cmpsb
je
adc
mov
test
and
and
sbb
xor
dec
cmp
imul
movsb
adc
je
jge
rorl
outsb
popf
mov
inc
jo
mov
xchg
call
mov
or
and
and
cmp
cmp
cmc
inc
cmp
jae
das
adc
leave
inc
cmp
lcall
jmp
sahf
jg
dec
mov
inc
inc
mov
push
dec
inc
jno
enter
pop
loop
fsubr
ja
movsb
adc
xor
inc
mov
out
je
pop
inc
outsb
jbe
out
ljmp
ja
cmova
jb
push
dec
push
cltd
testl
and
pop
adcb
test
xchg
push
icebp
daa
add
dec
mov
test
in
addr16
sbb
push
cld
or
push
mov
shl
int
push
push
dec
adc
outsb
adc
push
push
and
mov
inc
mov
push
mov
fadds
sub
and
dec
xor
add
push
cmc
mov
movsl
and
or
shrb
dec
push
cmpsb
sbb
adc
daa
xor
adc
xchg
ret
inc
sbb
adc
push
dec
inc
inc
inc
lock
flds
fs
fwait
adc
bound
adc
add
ret
je
pop
sub
xchg
shrb
and
mov
inc
mov
or
cltd
inc
dec
and
mov
inc
imul
cmp
outsl
outsl
jp
bound
xor
add
adcl
xchg
cmpsl
push
adc
sub
cmp
cmp
adc
dec
lock
xchg
xchg
and
cmp
daa
and
out
hlt
int3
fcmovb
clc
hlt
push
jae
nop
xor
adc
cmp
inc
aas
ljmp
js
sbb
mov
dec
arpl
dec
imul
pop
pop
imul
ds
sub
adc
je
fs
inc
or
mov
jo
jg
cmp
or
scas
hlt
mov
int3
jecxz
jle
jbe
outsb
or
lods
mov
je
adc
dec
or
in
push
shrl
inc
shrl
pushf
mov
jo
xchg
in
sub
test
je
xor
rolb
pop
adc
dec
sti
inc
lcall
xor
test
jo
inc
inc
dec
jbe
mov
in
pop
mov
shr
out
scas
push
hlt
or
xchg
ret
ja
xor
xchg
xchg
pusha
aam
bound
jl
adc
dec
and
imul
push
or
adc
xchg
sub
notl
adc
mov
clc
pop
dec
xchg
sub
ss
xchg
gs
and
int3
sub
sub
movsb
les
lods
cltd
inc
cmc
push
cmp
mov
adc
mov
test
jecxz
mov
or
adc
xchg
out
adc
or
enter
adc
inc
dec
pushf
leave
jp
cmpsb
and
sar
imul
jmp
xor
dec
jle
push
push
push
pop
fnstenv
xor
push
mov
insb
addr16
xchg
and
setne
in
and
sbb
or
adc
stos
packsswb
xor
inc
adc
andl
mov
in
mov
push
mov
bound
sub
or
push
mov
jb
push
and
fwait
cmpsb
xor
lea
mov
mov
cltd
xor
loop
dec
mov
cmp
inc
push
pop
movsb
sub
dec
pushf
jns
andb
inc
or
shrb
fwait
add
or
adc
into
push
xchg
insb
add
xor
push
daa
insl
daa
pop
inc
jmp
out
sbb
push
jns
mov
push
mov
inc
loope
jns
push
jne
xchg
test
pop
test
mov
sub
sub
outsl
pop
inc
andb
xchg
or
dec
lret
jp
and
insb
sub
add
lret
pusha
fcomip
je
mov
mov
mov
insb
xchg
int3
lret
cld
sub
mov
fsubp
shrl
movsb
inc
sahf
fdivl
mov
jns
js
test
les
jo
xor
add
sbb
dec
pushf
adc
xor
pop
dec
dec
cmp
push
xor
push
and
mov
adc
hlt
dec
mov
popl
jbe
mov
xchg
fs
popl
in
leave
hlt
repz
in
repz
pop
das
imul
fisubrs
xlat
arpl
dec
outsb
sub
jl
scas
sub
daa
icebp
add
and
lods
dec
fcoms
mov
sbb
insb
adc
mov
stos
inc
xchg
les
mov
sbb
das
loop,pn
pushf
or
sub
insl
jo
enter
adc
jne
inc
pop
fdivs
sub
int
xlat
sub
test
or
scas
ret
sub
adc
or
inc
aam
mov
adc
xchg
mov
mov
push
and
inc
cmp
and
xchg
or
mov
testb
call
inc
int3
rorb
dec
pushf
xchg
nop
and
insb
adc
dec
push
xchg
dec
and
cmp
mov
adc
icebp
and
loope
clc
adc
fmull
xchg
les
mov
pushf
adc
xchg
jo
push
inc
adc
and
dec
sub
adc
mov
push
or
mov
adc
cwtl
and
adc
dec
dec
cmp
xor
sub
and
mov
adc
add
cld
adc
jmp
rorb
mov
and
adcb
and
dec
fs
pop
and
cmp
xor
sub
dec
adc
or
add
cld
adc
mov
adc
and
dec
enter
mov
lods
movsb
mov
adcb
pusha
mov
push
cmp
and
dec
sub
and
sbb
adc
mov
cld
btc
loop
xchg
jl
in
and
or
inc
mov
andb
insb
xchg
pusha
and
inc
mov
and
sbb
adc
or
mov
push
xor
dec
aam
int3
and
inc
mov
mov
dec
mov
insb
pusha
mov
dec
and
dec
cmp
sbb
test
or
mov
shlb
dec
mov
inc
movsb
pushf
mov
jl
je
insb
inc
fs
mov
mov
xor
sub
and
sbb
adc
ret
or
in
dec
in
fsubl
aam
ror
mov
adc
xchg
pushf
and
adc
dec
fs
pop
and
dec
inc
mov
sub
dec
adc
or
rorb
xchg
mov
mov
and
dec
jl
je
insb
inc
pusha
pop
mov
and
dec
sub
and
sbb
adc
mov
cld
or
in
fcoml
sarb
pushf
dec
xchg
xchg
mov
test
mov
and
dec
dec
xchg
cmp
xor
sub
mov
adc
or
add
cld
or
lock
inc
loopne
mov
adc
and
dec
mov
movsb
and
adc
dec
push
inc
push
inc
mov
adc
and
sbb
adc
or
adc
or
in
and
dec
fcoms
shlb
dec
xchg
xchg
mov
js
jo
mov
dec
and
dec
cmp
sbb
mov
pop
and
clc
pop
inc
lock
fcoms
int3
and
dec
mov
inc
mov
test
dec
je
insb
and
push
mov
and
dec
xor
adc
mov
xchg
in
faddl
mov
dec
cwtl
xchg
nop
and
adc
dec
pop
xchg
push
and
cmp
mov
sbb
adc
mov
fsts
rclb
mov
mov
adcb
pop
mov
dec
and
dec
xor
sub
sbb
adc
mov
cld
lods
or
xchg
call
int3
mov
adc
mov
mov
jo
push
inc
push
dec
mov
cmp
xor
sub
or
outsb
add
xchg
fs
dec
rclb
mov
mov
dec
test
insb
mov
and
dec
inc
xchg
xor
sub
sub
mov
adc
and
inc
cld
add
enter
fsubl
aam
enter
adc
xchg
xchg
and
push
dec
push
xchg
inc
and
inc
xor
mov
sbb
adc
or
add
cld
add
hlt
inc
in
in
fcoml
aam
int3
dec
les
lods
movsb
mov
je
insb
and
push
dec
mov
cmp
dec
sub
or
mov
ret
dec
call
inc
int3
les
lods
dec
movsb
xchg
pushf
and
adc
dec
fs
pop
and
dec
inc
mov
sub
and
sbb
adc
or
add
incl
or
mov
adc
and
dec
mov
inc
mov
mov
dec
jl
je
insb
inc
pusha
push
mov
and
dec
xor
adc
mov
xchg
in
faddl
mov
adc
movsb
and
adcb
and
dec
pop
xchg
push
and
xor
sub
and
sbb
or
add
clc
std
and
inc
call
int3
and
dec
mov
inc
cwtl
mov
insb
dec
fs
pop
and
dec
cmp
xor
sub
dec
sbb
adc
or
adc
cld
add
and
dec
aam
int3
and
inc
mov
cwtl
and
dec
mov
jo
mov
push
and
dec
cmp
xor
sub
mov
add
clc
sti
add
dec
call
inc
rol
mov
dec
pushf
xchg
nop
and
insb
adc
push
dec
dec
xchg
inc
and
inc
xor
sbb
adc
or
clc
cli
inc
repnz
xchg
jl
and
mov
mov
dec
mov
jo
mov
pop
and
dec
dec
xchg
inc
and
sub
mov
adc
and
dec
add
cld
stc
adc
and
inc
in
mov
adc
and
dec
mov
lods
and
adc
dec
insb
xchg
and
inc
mov
adc
and
dec
sbb
clc
sub
dec
enter
mov
test
mov
dec
jl
jo
fs
pop
push
mov
and
dec
xor
sub
and
sbb
mov
hlt
testl
loopne
fcom
mov
adc
and
dec
mov
test
pushf
inc
xchg
mov
je
insb
xchg
and
dec
mov
and
dec
and
adc
or
add
inc
div
mov
adc
and
dec
aam
enter
mov
mov
xchg
js
jo
push
push
and
dec
cmp
xor
sub
and
mov
or
adc
clc
cmc
and
inc
call
fsubs
dec
les
lods
mov
and
dec
adcb
pop
mov
dec
and
dec
cmp
sbb
mov
cld
hlt
pop
cmp
aam
mov
pushf
xchg
xchg
and
insb
adc
dec
push
xchg
dec
and
cmp
sbb
adc
or
add
clc
repz
lock
and
dec
les
mov
mov
dec
js
jo
push
dec
adc
xor
sub
and
sbb
adc
mov
cld
repnz
and
dec
loopne
fsubs
rolb
mov
dec
cwtl
xchg
mov
test
mov
pusha
and
dec
push
xchg
inc
and
sub
mov
adc
and
inc
clc
icebp
or
xchg
in
faddl
mov
xchg
xchg
mov
addb
pusha
adc
push
dec
dec
xchg
inc
and
inc
sub
mov
adc
or
and
hlt
lock
in
in
loopne
aam
int3
dec
les
test
mov
jl
je
push
dec
adc
xor
sub
and
sbb
adc
mov
push
or
mov
adc
and
dec
mov
lods
and
test
jl
je
insb
xchg
and
dec
inc
mov
xor
sub
and
sbb
adc
or
and
out
je
mov
or
inc
int3
les
lods
dec
mov
inc
test
jo
fs
dec
dec
xchg
cmp
xor
sub
mov
or
cld
in
add
dec
in
fsubl
aam
int3
les
test
mov
inc
mov
adc
dec
pop
xchg
push
and
inc
cmp
sbb
adc
and
out
adc
and
dec
rclb
mov
pushf
and
dec
mov
je
mov
and
dec
dec
xchg
dec
and
cmp
mov
adc
adc
or
add
cld
jmp
movsb
pop
or
adc
je
adcb
mov
jne
int
xchg
adc
sarl
popa
imul
cmp
test
lock
ret
imulb
or
ja
or
sbb
adc
or
lahf
push
jmp
pop
jne
out
add
imul
idivl
or
or
jbe
or
or
outsb
or
je
popaw
adc
jecxz
jnp
pop
je
cmp
popf
adc
inc
int
insl
adc
or
sahf
adcl
inc
jns
adc
jne
fs
enter
push
mov
sub
or
outsb
sbb
push
dec
xchg
mov
je
or
mov
fst
insb
int3
sub
xchg
es
sbb
xor
push
outsb
and
test
or
clc
jb
adc
mov
je
sti
ret
and
jmp
jae
les
pop
or
call
or
jle
sbb
and
stos
sub
cld
jp
test
lea
mov
ljmp
adc
jb
adc
iret
push
imul
or
jp
sahf
imul
leave
bound
lds
movsb
or
lea
sbb
push
or
mov
push
stc
mov
dec
dec
mov
test
lretw
and
loop
stos
push
stos
mov
or
xchg
cmp
dec
js
jmp
sub
repz
sub
pop
outsb
arpl
dec
ds
sbb
and
jne
insb
lock
fnstcw
xchg
addr16
pusha
lret
sbb
inc
xchg
cmp
pop
xor
and
push
push
jp
jge
mov
popa
outsl
adc
jne
imul
imul
push
push
adc
fs
mov
insb
jae
inc
outsl
push
jbe
pop
icebp
dec
mov
mov
adc
loop
mov
pusha
mov
jns
dec
adc
insb
repnz
adc
sub
pop
pop
or
push
or
stc
mov
ja
push
jb
inc
je
int
or
lock
jne
outsl
rcrl
clc
adc
mov
adc
adc
outsl
mov
or
dec
jbe
test
push
movsb
aas
fisubrl
outsb
hlt
adc
push
icebp
movsl
mov
movsb
addr16
pop
in
pushf
inc
repnz
fldt
push
or
push
xchg
and
jb,pt
or
sbb
insl
pop
test
adc
mov
popa
jge
rorl
lods
ret
jo
or
les
sarl
mov
ret
xchg
sbb
lock
jb
insl
jno
popa
test
adc
sub
fwait
imul
adc
bound
outsb
adc
mov
lahf
sub
mov
or
push
aad
push
sub
das
inc
jmp
jle
rorw
mov
imul
mov
lds
and
jp
fst
sbb
xor
or
test
or
jo
das
and
sub
adc
mov
push
imul
sub
insl
data16
adc
nop
xchg
ss
in
fbstp
sbb
and
insl
test
lahf
jns
dec
lret
mov
out
inc
or
adc
jge
jae
pop
repz
push
arpl
in
or
ret
adc
sbb
fs
xchg
insb
sub
jb
mov
sbb
cmc
adc
les
cmp
sub
fwait
adc
sarb
mov
adc
dec
adc
inc
adc
add
ret
aad
icebp
lcall
mov
or
cmpsb
xor
pop
mov
mov
or
adc
imul
push
xlat
adc
insl
sbb
call
imul
dec
dec
inc
sbb
daa
or
into
je
lahf
imul
and
inc
or
data16
adc
inc
imul
push
sbb
and
mov
or
dec
test
or
addps
or
sbb
outsb
pop
sub
jns
stc
icebp
fs
adc
imul
xchg
inc
data16
dec
js
fistl
out
cwtl
pop
xchg
nop
cmpsb
mov
rorb
call
mov
nop
jge
decl
stc
bound
nop
inc
arpl
fs
adc
mov
pop
adc
mov
jb
cmp
or
push
and
jne
insb
addr16
insl
sbb
repnz
or
or
addr16
mov
mov
xor
and
push
adc
xor
popa
cmp
jno
movsb
or
data16
inc
es
repnz
cmpsb
cmp
jns
mov
or
sbb
ja
js
or
movsl
push
je
adc
dec
or
and
pop
jb
nop
or
es
int
or
loop
mov
push
testb
xchg
mov
js
in
or
inc
orl
popa
sub
push
jns
inc
out
fistpl
pop
fcoml
mov
outsl
jns
nop
data16
mov
addr16
insl
adc
or
jmp
sbb
push
insb
orb
insb
lods
inc
aam
or
jecxz
or
mov
int
repnz
jl
test
dec
push
imul
lcall
mov
sbb
jne
insb
inc
mov
insl
test
jmp
outsb
sub
xor
jg
pop
adc
inc
mov
jo
negl
and
mov
into
or
xchg
sub
ja
sbb
adc
dec
sub
adc
cmp
xchg
mov
cltd
sub
pop
adc
push
dec
sbb
jne
fidivrl
les
gs
adc
test
or
sub
mov
sub
mov
insl
adc
inc
push
sarb
inc
or
push
imul
pop
adc
xor
test
jle
mov
adc
adc
imul
mov
and
js
xor
gs
push
adc
inc
xor
bound
sbb
jne
gs
sbb
or
sub
xchg
int3
mov
xor
inc
adc
and
cmp
test
jns
adc
xchg
leave
add
dec
popa
imull
rorl
andb
hlt
lods
lock
je
xor
xor
jbe
rorl
or
mov
sbb
mov
inc
or
data16
fs
rsm
mov
inc
fwait
pushf
jge
divb
or
lahf
shll
sbb
shlb
aaa
or
jp
outsl
pop
jmp
jo
out
pop
sti
cld
push
or
pop
in
adc
mov
sub
pop
inc
out
imul
dec
xchg
mov
and
icebp
sub
adc
mov
xchg
cmpsl
sbb
sbb
daa
imul
adc
mov
lcall
cld
lods
and
jae
stos
push
leave
dec
or
adc
fs
imul
jge
out
fwait
cltd
in
push
test
adc
jmp
pop
mov
mov
push
data16
sbb
out
andnps
xor
aam
cmpsl
int
shll
or
dec
les
jae
lods
adc
stc
popa
or
jecxz
movsl
push
loop
sbb
js
adc
pop
xor
mov
adc
push
fwait
lcall
lret
adc
rcll
xchg
xor
adc
dec
call
sbb
loopne
xchg
inc
ljmp
push
insl
xchg
sbb
pop
lcall
adc
int
adc
add
inc
push
dec
pop
test
cmp
or
push
adc
pop
rcrb
fdivr
push
mov
fsubs
or
jo
mov
insb
in
inc
cwtl
jp
popa
mov
arpl
adc
push
and
test
movsb
bound
iret
sahf
dec
jne
sbb
push
pusha
js
inc
or
sbb
and
push
adc
jle
or
sbb
push
dec
pop
sub
adc
test
jb
outsb
and
mov
test
or
dec
mov
pop
or
adc
test
push
push
jae
jl
dec
int
adc
cmp
or
rclb
inc
fs
lods
mov
loop
sub
and
sbb
and
mov
xchg
stc
lock
pop
bound
outsl
xchg
or
cli
or
faddl
adc
sub
lcall
cltd
push
jb
outsl
dec
or
xor
push
test
jb
bound
jmp
fsts
shlb
in
sbb
pop
adc
jae
mov
lret
push
imul
imul
pop
je
push
adc
sbbl
adc
gs
inc
xor
adc
scas
and
and
test
jns
or
inc
test
ja
fcom
adc
movsb
js
xor
dec
xchg
std
mov
dec
vpslld
or
out
push
outsb
or
aam
sbbl
jbe
or
or
js
adc
fstps
adc
stos
and
inc
insl
adc
jp
adc
fistpl
outsl
ja
fisubl
clc
adc
jae
sub
mov
dec
or
mov
sbb
or
adc
in
lcall
je
imul
adc
jl
xchg
or
dec
push
and
sub
mov
pop
or
gs
jo
dec
outsl
mov
rorl
sbb
gs
cmp
jg
or
shl
inc
sbb
popa
dec
adc
jae
adc
and
je
rclb
or
gs
inc
imul
imul
push
add
daa
inc
outsb
mov
dec
xor
gs
test
enter
nop
inc
push
jno
jl
dec
adc
and
xchg
mov
mov
imul
and
and
or
xchg
jae
and
xchg
insl
int
lods
sbb
je
adc
jne
dec
xor
dec
shll
sbb
cwtl
insl
sbb
ss
adc
push
jb
lods
inc
stos
jle
pusha
mov
adc
mov
add
adc
xchg
loop
sbb
adc
mov
cmpl
adc
mov
ret
insl
sbb
dec
aad
addl
sbb
adc
outsl
pop
adc
push
je
dec
icebp
and
testb
add
or
sub
es
cwtl
repnz
lods
dec
sbb
jae
fsub
adc
cmpsb
js
mov
cli
jae
mov
rcll
cmp
mov
inc
mov
fdivp
popa
cmpsl
sbb
sub
mov
xchg
adc
lahf
adc
call
add
test
mov
mov
or
pop
arpl
adc
std
and
inc
jae
or
adcl
sbb
adc
or
sbb
mov
xor
jbe
outsl
sbb
loope
adc
insb
dec
and
dec
fldt
cmp
or
push
adc
js
sub
pop
sbb
lahf
or
push
je
push
or
cltd
jl
ja
aas
xor
and
cli
pusha
ffreep
cmpsl
push
rclb
xchg
sub
aaa
popa
jns
lahf
pop
das
or
push
adc
aam
lds
or
mov
or
sbb
or
xor
pop
xchg
lret
sbb
fisubl
lcall
sbb
pop
mov
adc
int
loope
gs
inc
sbb
stos
cmp
ljmp
cmpsb
or
dec
jns
xor
or
les
xchg
ljmp
ffreep
mov
sub
les
adc
outsl
pop
sti
in
or
pop
and
mov
lds
mov
dec
adc
je
adc
pop
ficoms
jl
inc
cmp
por
adc
sbb
insl
sbb
insl
mov
fstl
lods
mov
or
xor
push
test
popf
sbb
les
stc
push
js
fnsave
and
imul
add
inc
arpl
adc
leave
test
or
cmp
add
mov
push
pop
sbb
or
shrl
pop
adc
mov
adc
sbb
push
ljmp
jns
lcall
ja
adc
or
nop
xor
leave
fistl
aaa
adc
outsb
xchg
or
ficoml
leave
shr
mov
jbe
adc
pop
fbld
les
gs
lahf
test
jae
js
cmc
scas
adc
fs
adc
xor
push
push
sbb
jmp
icebp
xor
ds
xchg
int
or
test
inc
jne
push
mov
adc
lahf
cmp
jg
or
sahf
int3
iret
xchg
rcrb
mov
mov
push
jae
gs
dec
cltd
pusha
mov
ret
faddl
xor
test
test
xchg
test
cltd
sbb
sbb
jmp
inc
cmp
jcxz
adc
jae
negb
jle
and
adc
push
or
fistl
mov
and
das
lock
je
loop
mov
xchg
inc
outsl
xchg
int
mov
jl
mov
xor
test
insb
arpl
jns
outsw
lods
fcomps
or
cwtl
rolb
jne
movsl
adc
in
mov
xchg
adc
xchg
sbb
push
adc
push
test
inc
ljmp
lock
or
inc
xchg
or
or
dec
mov
into
test
pop
popa
adc
sub
dec
adc
jp
sub
dec
sub
adc
push
fildll
les
and
jo
or
stos
or
js
lods
clc
popf
mov
test
dec
lds
mov
sbb
mov
mov
fstl
je
fstpl
sbb
pop
insb
ss
popa
fstl
xchg
outsl
adc
or
adc
mov
or
inc
outsb
or
sahf
dec
or
jge
push
xchg
outsl
push
sbb
push
mov
pushf
inc
xchg
daa
or
sub
xor
mov
sbb
and
and
mov
bound
xor
mov
mov
in
addr16
mov
fwait
adc
xor
xor
in
mov
or
leave
sbb
int
loope
data16
icebp
shlb
fs
adc
rcrb
adc
adc
sub
data16
or
lahf
ss
xor
jae
andl
iret
xchg
addr16
inc
ljmp
dec
adc
inc
ja
sbb
adc
popf
push
adc
cmp
outsl
daa
shlb
js
jb
fwait
pop
icebp
fs
xchg
bound
jne
nop
or
and
or
in
gs
add
jb
cmpsl
jecxz
adc
jnp
xchg
imul
imul
imul
rorl
mov
dec
sarl
or
xchg
push
xchg
adc
imul
sbb
lods
or
daa
je
lock
sub
cs
adc
sti
mov
fsub
jp
adc
push
pop
sbb
and
les
movsl
push
or
mov
cmc
mov
sub
push
ret
adcl
nop
orl
rcrb
fldt
push
inc
les
popa
clc
fdivs
jle
cmc
out
out
fstpl
shll
fsubs
adc
or
pop
xchg
test
stc
mov
arpl
and
and
daa
orb
jae
dec
inc
das
pop
mov
cmp
cwtl
dec
add
adc
push
cmp
push
mov
jns
js
test
sarb
adc
mov
or
inc
mov
adc
fistl
dec
sbb
cmp
push
adc
mov
jl
je
dec
test
in
mov
leave
inc
or
sub
push
arpl
insl
pushf
mov
sbb
adc
inc
mov
or
mov
adc
ljmp
aam
xlat
xor
push
cmp
lock
sub
push
lods
adc
and
jns
pushf
stc
aaa
adc
fsubs
cld
scas
cltd
adc
cli
sbb
insb
mov
repnz
lds
or
mov
or
ret
mov
xor
push
test
sbb
out
pop
and
scas
lea
sub
or
shrl
loop
imul
mov
daa
or
or
push
or
or
pusha
sub
cld
jl
cmpsb
fimull
or
mov
daa
or
xchg
inc
or
adc
adc
pushf
int3
sbb
gs
test
imul
gs
inc
subl
or
or
jns
ljmp
lds
sbb
aam
inc
or
or
pop
xor
arpl
idiv
in
int
mov
mov
scas
xlat
ficomps
outsb
pushf
outsl
adc
jns
int
cmpsb
push
es
adc
add
repnz
adc
dec
rorb
imul
or
ret
adc
or
fs
adc
aaa
hlt
imul
imull
sahf
adc
ret
mov
pop
push
test
mov
dec
push
or
mov
dec
or
push
outsl
adc
and
icebp
jecxz
adc
mov
pop
adc
pop
outsl
xchg
or
pushf
insl
and
rorl
mov
push
cmp
sbb
jecxz
or
jne
mov
or
out
or
push
mov
sahf
push
loop
test
or
sbb
ljmp
or
sbb
scas
outsb
ljmp
or
mov
sub
dec
loopne
adc
and
inc
int
inc
xor
adc
cmp
in
enter
mov
or
dec
sub
es
adc
mov
fs
insl
mov
sbb
or
jo
sub
hlt
mov
jo
or
or
int
mov
mov
xchg
mov
dec
test
pop
cmpsb
cmp
jp
pop
or
xchg
and
movsl
lods
sbb
add
ret
sbb
mov
addr16
outsl
adc
loopne
arpl
je
inc
int
scas
and
test
mov
in
sbb
add
fimull
ds
sbb
mov
outsl
pop
mov
or
mov
imul
adc
nop
js
movsb
insl
adc
pop
pop
test
adc
jns
rcl
push
cmpsl
or
inc
jo
jecxz
sbb
adc
push
cmpsl
lods
mov
or
cli
lcall
gs
ds
dec
push
iret
nop
push
imul
cmp
jnp
mov
or
or
arpl
loope
push
test
xor
mov
nop
insb
data16
dec
shlb
aad
pushf
adc
gs
sub
adc
mov
xchg
inc
rcl
in
sbb
adc
pop
xchg
inc
push
outsl
adc
pop
fwait
inc
adc
inc
jp
call
aam
adc
push
lahf
fs
xor
js
cmp
mov
fidivl
pop
sbb
adc
mov
daa
xor
lret
cmpsl
or
movsb
sbb
and
adc
lret
cmp
dec
and
daa
push
rcll
ret
loop
das
xor
in
or
or
or
or
sub
inc
pop
lock
pop
jae
ficoml
push
int
adc
or
jb
sahf
lods
je
sti
inc
add
or
dec
xor
test
stc
jne
sbb
in
push
or
sar
xor
gs
sbb
adc
pushf
ficomps
push
fs
add
ret
fwait
cld
vshufps
xchg
dec
sub
je
push
loope
fs
sbb
and
inc
or
and
movsb
mov
outsb
aas
add
xor
sbbl
dec
inc
add
cmp
dec
push
and
xor
cmp
jmp
mov
adc
inc
add
cmp
xchg
or
stos
and
call
push
push
dec
lcall
inc
adc
in
or
inc
enter
or
dec
mov
xor
add
add
add
leave
xor
push
xorb
inc
sub
stc
sbb
mov
inc
or
add
shlb
xor
mov
jo
lods
ret
push
or
or
or
clc
rolb
into
or
cmpsl
dec
js
inc
and
pop
sbb
jb
cmp
push
loopne
or
cmpl
fs
xor
add
mov
adcl
add
fwait
ret
cwtl
test
je
xlat
add
cmp
call
repz
sub
aas
sbb
push
call
add
pop
lods
and
pop
mov
test
ret
add
pop
push
sub
inc
lahf
mov
lea
dec
inc
adc
stos
mov
stos
push
cmp
pushf
push
cwtl
add
add
test
ret
shll
test
cmpsl
sub
sub
push
mov
lods
pop
mov
mov
imul
push
mov
ljmp
sbb
insl
xor
xor
add
xchg
xor
filds
mov
or
mov
inc
pop
in
xchg
subb
jne
push
dec
cs
rorb
jns
mov
aad
pop
xorl
mov
pop
and
xchg
sub
shlb
push
inc
sbb
adc
ret
or
rorb
call
sbb
mov
sbb
lea
jmp
pop
dec
xor
enter
xor
cltd
loop
xchg
bound
sahf
jo
cwtl
jg
ret
and
test
cmp
xchg
mov
lcall
out
lahf
rcl
stos
je
into
jge
pusha
cmpsb
sbb
xchg
rorb
aas
in
xchg
mov
fdivl
jnp
adc
adc
push
mov
add
push
push
cmp
ficomps
ss
push
test
adc
pop
xchg
lock
fcompl
xchg
lret
push
iret
data16
gs
shlb
repz
es
add
cwtl
cld
fwait
int3
sub
sub
sahf
jae
add
pop
adc
popf
xrelease
into
lret
ss
rorb
sbb
inc
xor
adc
test
jnp
cmpsb
fbld
jns
sub
fimuls
add
pop
andl
mov
lods
xor
enter
dec
ret
or
xor
add
bound
loopne
cld
in
leave
pop
jmp
cli
fdivr
push
ficomps
clc
jns
mov
fsub
lock
fistps
lahf
mov
out
ljmp
cmpsl
mov
mov
lock
jl
loope
cli
sahf
fs
mov
jg
mov
insb
lahf
dec
add
adc
test
sti
lret
adc
aad
es
cmp
repnz
jne
test
add
mov
or
ja
pop
sbb
shrl
mov
cmp
inc
leave
push
call
flds
mov
scas
loope
mov
shl
add
adc
cltd
mov
imul
xchg
mov
fists
cmp
aad
aas
mov
scas
leave
mov
addb
icebp
pop
jg
js
and
scas
mov
dec
in
mov
pop
test
jmp
std
or
sar
imul
sbb
fwait
incb
sar
das
iret
xchg
sub
add
dec
push
push
dec
sub
xchg
arpl
sbb
dec
clc
ret
mov
push
int3
mov
sub
adc
xor
mov
jecxz
xchg
rorl
outsl
data16
loop
nop
mov
scas
push
addr16
outsl
mov
sbb
mov
stc
and
add
pop
jb
pop
inc
out
jae
int3
adc
xchg
popf
lods
inc
gs
jne
insl
jno
sub
ljmp
xor
lea
nop
inc
xchg
add
mov
pshufw
or
and
std
jg
adc
test
gs
movsl
enter
aaa
adc
jo
add
push
inc
and
push
push
sbb
dec
mov
addr16
jae
dec
shlb
xor
xor
pop
push
sub
jne
outsb
data16
lahf
and
movsl
negb
xor
popa
push
dec
push
dec
xor
cmp
cs
in
and
xor
xor
cmc
sub
mov
incl
cmp
aam
push
orb
subl
inc
stos
inc
cmpsl
cmp
or
jge
inc
add
fdivr
cmp
fistps
dec
dec
sub
sahf
add
push
push
push
push
push
push
add
pop
pop
pop
popa
bound
fs
imul
insl
popa
pop
jno
add
jbe
js
and
jge
das
mov
dec
pusha
data16
out
in
fildl
push
arpl
negl
mov
lock
pop
push
aad
dec
adc
cli
xchg
inc
and
int
sbb
fistpl
adc
cltd
call
mov
ret
push
mov
mov
mov
pop
xor
push
int3
add
lcall
push
or
sahf
and
les
pop
pop
pop
and
call
inc
and
lea
pop
addl
addl
arpl
lock
add
add
addr16
jl
xor
fs
xor
mov
add
fbld
sbb
adc
pop
popa
ret
pusha
dec
mov
cmp
add
stc
cmp
je
decb
cmp
cmp
sti
jnp
jle
clc
idiv
adc
dec
clc
sbb
add
or
ss
sbb
pop
iret
outsb
push
adc
jp
push
inc
add
insb
aas
and
pop
inc
cmp
push
add
jl
cmp
and
jmp
cmp
xor
add
xor
adcl
pop
pop
ror
rol
hlt
cmp
jne
loope
sarb
sbb
adc
sbb
fstp
popa
ret
stc
and
or
push
repnz
idivl
dec
sbbl
cltd
lods
test
and
jne
jecxz
pop
iret
xor
pop
xor
pop
push
fs
jbe
das
js
mov
jmp
sub
cmp
xor
pusha
push
jmp
or
aas
add
jmp
sub
pop
repz
push
mov
cltd
add
sbb
or
jo
mov
push
inc
nop
jo
arpl
fbstp
out
minps
out
gs
mov
ds
adc
fsub
inc
xor
adc
xchg
dec
xchg
daa
jle
adc
mov
jecxz
dec
sbb
or
adc
jg
rclb
pop
add
mov
pusha
rorb
mov
lahf
dec
call
dec
pusha
add
jo
add
or
dec
aam
xor
push
fldenv
std
add
inc
fs
mov
shlb
or
sbb
adc
dec
push
adcb
adc
scas
outsb
jb
or
sub
adc
or
or
shl
add
dec
inc
dec
push
add
sub
xchg
int3
sbb
sub
dec
sbb
push
adc
int3
into
add
adc
nop
sbb
fsubrs
cwtl
pop
pop
mov
sub
or
mov
adc
enter
pop
and
inc
pop
or
mov
adc
pusha
push
add
enter
mov
and
mov
pusha
and
add
sub
pop
movsb
sub
sub
or
sbb
jo
cwtl
xchg
enter
adc
and
loope
pop
xchg
cmpb
inc
adc
mov
push
push
rcrb
cmp
dec
loopne
add
jmp
icebp
mov
jp
add
nop
call
push
outsb
sbb
sub
or
or
lret
pop
and
pop
sub
mov
dec
fs
movsb
push
mov
or
stc
and
aaa
pop
add
in
or
cmp
xchg
xor
add
clc
shrl
pop
js
and
sub
int3
add
jecxz
mov
mov
call
inc
push
or
fs
push
jg
jno
xchg
nop
add
cmpsl
add
push
sub
adc
pusha
mov
push
sbb
pop
cmpb
inc
stc
fisubrs
ja
cmp
fwait
lods
cmp
popfw
shrl
push
xchg
daa
gs
push
loope
cmp
fwait
sub
pop
dec
and
stc
add
std
cmp
movhlps
xchg
and
push
and
aas
jnp
dec
lcall
data16
adc
adc
ret
or
int
mov
mov
push
lea
inc
icebp
addr16
cwtl
push
fwait
push
popf
dec
loopne
xrelease
enter
pop
xor
shl
jb
add
ljmp
movsl
adc
fs
fnstsw
movsb
adc
repnz
or
mov
adc
int
enter
cwtl
or
out
test
xlat
mov
or
popf
test
push
xchg
enter
movsl
int3
int
psraw
mov
sarb
fdivs
pop
addb
mov
pop
push
xchg
rolb
push
jle
adc
mov
xchg
rclb
pushf
push
xor
adc
pop
jno
pusha
add
xlat
xchg
jne
jmp
sub
jb
adc
push
sqrtps
jne
xor
jle
jb
xchg
sahf
cld
inc
jge
xchg
dec
inc
repnz
dec
in
xchg
pushf
add
ss
jne
jp
cmp
imul
pop
inc
popf
and
push
jo
daa
fcos
inc
add
jge
jns
iret
mov
jns
out
je
sti
xchg
or
or
aaa
sub
popf
xor
div
mov
cs
in
testb
sbb
xchg
add
adc
dec
movsb
comiss
xchg
dec
jo
fstps
sub
adcl
xchg
dec
outsb
mov
loopne
fnstenv
xor
or
and
cmp
jl
dec
adc
inc
and
push
sub
test
cmpsb
and
inc
or
inc
out
push
push
sar
jb
and
dec
sbb
adc
sbb
repnz
add
scas
xor
push
loop
sub
jne
xchg
push
add
xor
adc
xor
andl
cmpb
in
js
dec
cmpsb
adc
add
push
fs
add
or
sbb
fsubp
cmp
push
pop
mov
add
ret
xchg
mov
test
aam
test
insb
and
mov
sbb
push
sub
cltd
mov
leave
pop
mov
mov
sub
and
jge
faddl
push
sbb
or
mov
adc
fldcw
pop
cmc
outsl
movsb
bound
or
mov
mov
movsb
push
mov
pop
mov
mov
pop
in
or
xchg
adc
xchg
push
mov
add
int
sbb
js
adc
stos
adc
cmpsb
jmp
mov
xchg
adc
xor
xor
xchg
xlat
or
mov
mov
das
or
and
test
add
fadds
inc
jo
test
mov
xchg
cmp
and
and
sbb
lcall
aaa
adc
add
popf
lods
adc
jnp
lea
push
fildll
cmp
outsl
xchg
test
sbb
fimuls
mov
cmp
xor
dec
mov
out
scas
lret
add
adc
inc
fs
xchg
imul
lret
shrb
cmp
sbb
jne
and
lods
shrl
sti
xchg
xchg
enter
or
repnz
aam
or
jmp
pop
add
je
and
rolb
in
mov
and
stos
sarb
mov
rcr
add
xor
xor
pop
inc
mov
popa
add
shll
stos
xchg
or
add
repnz
fs
stc
inc
add
add
mov
push
add
add
sub
push
push
sub
dec
add
or
imul
repnz
insb
sub
mov
jmp
or
insl
xorb
sub
fldz
in
add
pop
xorl
jae
xor
xchg
lret
sbbb
aaa
mov
ffree
adcb
mov
nop
pop
or
sarl
call
in
addl
je
add
iret
sbb
jns
push
lea
mov
loope
inc
aad
or
lds
add
cmc
hlt
push
movsb
std
arpl
cmp
call
dec
or
aad
hlt
not
je
mov
xchg
xchg
xchg
nop
scas
mov
mov
mov
lea
jnp
mov
push
clc
push
add
test
sbb
js
pop
push
mov
fwait
inc
cmp
mov
in
lahf
pop
mulb
sbb
mov
outsl
enter
pop
insb
je
outsb
lahf
subb
stc
into
mov
pushf
xor
pusha
or
loopne
sbb
sbb
inc
cmp
xlat
xchg
lock
jae
je
push
sub
je
bound
cmp
adc
inc
mov
pop
cmc
clc
push
imul
mov
adc
aaa
or
ljmp
adc
mov
or
add
mov
cmp
fcomps
insl
cmpsl
add
xchg
dec
js
aas
pushf
imul
pop
adc
bound
adc
push
or
pop
fisubs
sbb
lea
cmp
sub
cmovb
fcom
push
pop
xchg
push
jnp
xor
inc
addl
subb
dec
and
inc
mov
cmp
or
push
stos
mov
push
xor
fcmovnb
mov
scas
mov
xchg
xor
xor
jae
movsl
jne
sbb
add
add
sub
jl
pop
les
cmp
sbb
out
daa
xor
dec
jb
mov
sub
fimuls
xor
xor
pop
jp
lock
push
ret
cmpsl
xor
fucomp
inc
sub
pop
popf
fsubrl
jge
and
push
into
test
xor
mov
dec
sti
in
jmp
xor
or
add
js
mov
and
pop
sbb
sub
stos
push
pop
or
test
pop
enter
xchg
dec
dec
push
stos
and
dec
jbe
jp
dec
lahf
jg
dec
leave
lahf
add
push
push
push
mov
ljmp
sub
and
adc
push
inc
cmp
das
push
call
stos
fs
jae
and
pop
push
push
inc
add
xchg
dec
push
gs
inc
pop
int
xor
int3
mov
outsb
jns
aas
test
sbb
sbb
xor
xchg
push
imul
cs
mov
sub
cmc
sub
loopne
jne
jmp
lahf
push
js
or
gs
xor
mov
pushf
cs
cmpsl
dec
repz
xlat
mov
sub
lahf
mul
sbb
fisttpll
inc
fdivrl
out
ficomps
das
xor
mov
mov
insl
jns
daa
imul
adc
outsb
sub
jle
arpl
fs
jae
adc
nop
adc
out
into
cmp
notb
push
test
aas
jg
outsb
es
dec
adc
xchg
or
mov
imul
das
sub
rcrb
inc
mov
inc
dec
push
and
adc
xchg
sub
sub
sti
dec
adc
in
shlb
ss
lock
fdiv
jecxz
ret
mov
push
cmc
aaa
or
dec
add
jns
test
jg
jne
mov
jle
aad
cmpsl
mov
lock
sbb
das
cwtl
cmp
push
pushw
xor
mov
cmp
sar
xchg
dec
cli
imul
or
dec
inc
scas
xor
imul
xchg
stos
sti
sub
mov
cmp
xchg
ds
or
add
cmp
cmp
xor
shrl
mov
and
inc
scas
or
dec
inc
pop
stos
or
cmovge
xchg
out
mov
iret
mov
gs
sub
out
xor
movaps
dec
inc
jp
xchg
push
jp
clc
dec
mov
mov
xchg
sarl
inc
and
loopne
lods
ret
lret
ficompl
fs
imul
pushf
sub
testl
es
sub
pop
dec
in
fidivrl
enter
loope
cmp
aad
sub
adc
cmp
xor
inc
pop
xchg
mov
adc
cmpsl
pop
inc
cmpsb
adc
pop
add
mov
das
push
iret
xor
and
fdivl
inc
dec
xchg
mov
pop
xor
pop
mov
cmp
ljmp
int3
cmp
add
push
outsl
push
push
lods
jmp
and
dec
fst
xchg
push
mov
lss
sub
push
or
pop
inc
cmp
and
mov
push
push
stos
sub
adc
movsb
jnp
dec
rorl
daa
fisubl
ds
cmpsl
push
dec
lcall
push
gs
movsl
pop
sbb
ss
mov
mov
pop
fwait
add
pushf
mov
xor
cli
lcall
and
bnd
scas
mov
cs
aam
out
testb
xor
inc
cmp
inc
push
mov
subl
cli
lahf
jbe
aad
inc
enter
xchg
xchg
cmp
hlt
scas
les
xchg
ret
push
sub
inc
mov
push
jne
sub
outsl
push
cwtl
push
xor
test
xor
or
cmpsb
mov
mov
inc
push
hlt
inc
add
aam
mov
adc
dec
pop
and
sub
out
dec
jmp
add
clc
xchg
aas
movsb
dec
sti
jns
cs
sbb
daa
arpl
sbb
jge
dec
jp
mov
insl
fwait
mov
mov
stos
out
push
out
mov
cs
mov
cmpsl
pop
cwtl
ret
sub
stc
pop
cmpsl
jg
and
cmp
xor
pop
incb
scas
int3
push
jae
and
sbb
popf
cld
jl
icebp
imul
arpl
jge
mov
jo
jae
xchg
adc
push
jo
ds
inc
lcall
sub
jno
orb
es
mov
insl
lcall
insb
stc
jg
push
cwtl
pop
mov
shlb
cmp
in
sbb
aam
hlt
and
adc
xchg
pop
pop
dec
inc
shl
pop
inc
and
xchg
test
leave
scas
xor
jp
imul
leave
add
push
cld
shlb
jnp
cmc
scas
aad
sbb
jmp
cmc
cmpsl
jle
sub
std
imul
sub
cli
roll
scas
xchg
scas
sbb
push
insb
aaa
add
pop
or
test
push
outsb
in
outsb
loope
sti
dec
das
std
shlb
jae
jg
xor
add
pop
dec
mov
scas
sbbb
pusha
addb
or
adc
aam
and
pop
scas
sbb
push
and
loop
xlat
jp
xchg
hlt
jnp
xor
inc
loopne
jbe
push
mov
xchg
mov
cli
pop
repnz
adcb
lret
adc
in
push
cmpb
jns
jne
aad
repz
inc
subb
adc
jg
pop
addl
mov
fadds
es
adcl
fildll
cmp
sub
jb
cmp
or
xorl
mov
dec
gs
test
out
in
es
jne
dec
jb
mov
stc
sub
arpl
or
mov
pop
outsl
lods
adc
jmp
xor
out
jnp
dec
sahf
push
jmp
flds
pop
aad
mov
pushf
stos
divps
lret
dec
jb
sarb
repnz
bound
mov
gs
sbb
pop
inc
push
sub
pop
mov
jo
adc
xor
sub
xchg
add
ds
pop
cltd
add
or
xchg
add
ds
pop
cltd
add
xor
add
ds
cltd
add
or
xchg
add
ds
pop
cltd
add
or
xchg
add
xor
pop
flds
jp
adc
xor
xor
xor
ficomps
rclb
dec
cmovs
mov
add
xor
mov
xor
pushf
add
and
ret
dec
add
add
flds
pop
ret
dec
add
add
and
ret
dec
add
add
and
ret
ret
or
or
mov
sub
adc
or
pop
pop
xchg
add
clc
xor
xchg
or
addr16
cmp
and
aaa
or
or
dec
pop
mov
es
and
or
push
sub
imul
or
or
fwait
shlb
fsubrl
call
add
or
ret
xchg
or
movsb
dec
add
aam
or
or
mov
movsw
or
add
or
or
add
or
dec
add
or
lret
or
add
insb
or
cmp
fimuls
push
pop
je
xor
dec
add
dec
sbb
daa
add
adc
or
sbb
test
inc
out
cmp
push
outsb
or
dec
or
lret
or
bound
and
bound
adc
mov
aas
xchg
fsubl
pop
sbb
and
push
push
dec
pop
pop
pop
pop
lock
push
dec
jl
scas
pop
lret
add
pop
push
inc
cltd
sub
push
mov
add
dec
in
fs
fstps
jg
stc
pop
pop
ss
jge
aam
aas
push
pop
pop
inc
cwtl
xchg
inc
push
out
mov
xor
jmp
jne
cltd
inc
mul
dec
fiaddl
ljmp
pop
lret
xor
dec
inc
inc
jge
lods
pop
mov
ds
add
push
xor
dec
push
gs
cltd
sub
mov
nop
adc
push
dec
fcompl
pop
xor
loope
push
or
pusha
out
push
imul
sub
pusha
mov
popa
push
outsb
lock
and
lock
and
lock
and
lock
and
lock
ret
enter
and
repnz
jl
inc
sub
sub
jo
adc
std
xchg
hlt
out
lock
scas
dec
and
xor
jg
xchg
daa
dec
data16
cmpsl
push
je
mov
mov
insb
cmp
in
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
ds
call
repnz
pop
nop
and
and
and
stc
sub
enter
sub
das
pop
nop
pop
cld
cmp
and
stc
pusha
bswap
jle
inc
and
imul
sbb
and
inc
repnz
nop
and
es
and
stc
sub
inc
das
repnz
pop
nop
cmp
daa
aas
and
jle
enter
cs
pop
mov
and
and
loop
xchg
pusha
movsb
cmp
and
pusha
push
sbb
and
inc
and
mov
jle
and
and
mov
repnz
nop
and
inc
dec
gs
push
popf
jle
xchg
and
add
ljmp
push
and
shl
push
pop
sbb
pop
jge
mov
sub
dec
push
inc
add
add
mov
popa
jns
jp
fadds
test
dec
sbb
mov
dec
inc
dec
mov
mov
inc
mov
cmp
jp
add
inc
mov
jns
mov
cmp
jne
mov
movsb
cli
xor
bnd
neg
mov
push
dec
push
inc
cwtl
mov
sbb
dec
add
mov
inc
push
andl
daa
pop
xor
sub
jne
in
into
xchg
dec
xor
mov
dec
stos
enter
sub
or
ss
xor
push
xor
xor
pop
xorl
fisubrl
lds
and
sub
leave
dec
sbb
inc
mov
test
loopne
sub
mov
push
inc
movsb
adc
test
dec
in
pop
hlt
sbb
imul
les
jmp
in
dec
pop
push
xor
jbe
push
and
jg
repz
dec
das
sbb
cmp
loop
mov
aad
dec
enter
and
inc
or
sub
cmp
sbb
xchg
roll
aaa
in
xor
addr16
xor
fildl
std
xor
lods
sbb
dec
add
ds
outsb
stos
xor
dec
jmp
inc
das
les
testl
inc
cwtl
mov
inc
lods
jge
sub
mov
mov
inc
mov
xchg
sahf
dec
scas
push
or
dec
shll
mov
xor
sub
fadds
pop
stos
sbb
jo
sarl
stc
sbb
or
cmp
mov
ds
cmp
lock
add
lea
inc
jnp
scas
mov
leave
inc
decb
cld
movsb
test
inc
sbb
mov
sub
clc
icebp
mov
fdiv
lea
subb
dec
cmpsl
pop
call
cltd
push
leave
decl
fwait
sbb
inc
lcall
leave
sub
imul
xlat
sti
sbb
push
push
dec
cmp
cmp
push
inc
xor
sti
mov
and
subb
lods
xchg
push
stc
imul
add
push
inc
pop
push
cmp
inc
cmp
cmp
dec
inc
push
pop
fwait
push
sahf
je
dec
cli
insl
xchg
loope
inc
push
push
inc
aaa
in
aam
call
lock
iret
mov
pop
negb
pop
icebp
xchg
adc
cmp
ss
imul
cmpsl
push
dec
das
imull
pop
mov
and
add
aam
pusha
arpl
dec
mov
push
lods
daa
addr16
ljmp
mov
idiv
imul
ret
mov
jnp
xchg
mov
scas
xchg
scas
je
not
pop
loopne
fs
add
sub
add
xchg
fisubl
iret
sarb
scas
cmp
arpl
cmp
push
cmc
cmp
cmp
jbe
rorl
mov
pop
mov
xchg
mov
stos
jecxz
xchg
xor
xchg
cmp
es
cmp
ja
adc
rcll
imul
inc
out
mov
in
movsb
sub
subb
and
test
repz
inc
ja
and
cli
je
je
sub
jb
jle
dec
jl
lods
pop
mov
pop
push
int3
mov
jo
xor
xchg
jmp
and
int
ret
bound
sub
cmp
fs
stos
fnstcw
cwtl
fwait
bound
sub
and
rcr
pop
clc
in
cmp
std
sbb
xchg
in
mov
mov
inc
or
adc
xor
inc
dec
push
inc
cmovp
sub
dec
push
inc
add
inc
dec
xlat
les
test
lods
insl
popa
not
out
and
ljmp
xchg
pop
jge
mov
sub
pop
rolb
xchg
sub
mov
lcall
std
sbb
ret
arpl
lea
jo
inc
fistpl
inc
fs
jmp
mov
in
rcl
ja
cld
call
pop
aad
add
sub
mov
or
insl
jl
cmp
lods
movsl
mov
hlt
mov
scas
push
dec
or
pop
aad
les
xchg
arpl
push
and
jae
outsl
in
or
dec
scas
ja
fimull
lahf
in
mov
mov
jo
jnp
and
addr16
and
xchg
inc
sub
adc
sub
aas
lds
stos
testl
stc
gs
sub
and
dec
mov
lret
nop
push
sub
inc
cltd
push
ljmp
push
fists
and
sub
das
movsb
test
sub
push
sub
add
xchg
inc
add
inc
das
dec
in
out
sbb
sbb
dec
sub
out
mov
ret
mov
add
out
mov
addr16
xlat
test
sub
ljmp
nop
push
and
aad
fwait
adc
je
imul
push
inc
dec
mov
dec
or
pusha
adc
push
dec
pushf
dec
insb
insb
dec
jns
fnsave
mov
fsubl
push
xchg
or
repnz
inc
test
leave
push
sub
aam
dec
int3
inc
sub
scas
pop
and
xor
test
and
or
fsubrs
adc
and
xor
adc
mov
or
sbb
or
xor
and
mov
or
xchg
sbb
clc
int3
sbb
or
mov
adc
and
dec
loopne
lock
sbb
adc
mov
or
aam
rclb
inc
rorb
dec
mov
lods
and
pushf
adc
xchg
je
insb
inc
fs
mov
and
dec
cmp
and
mov
adc
and
pop
and
clc
xchg
inc
in
in
fcoml
aam
int3
dec
rclb
pushf
mov
je
push
push
mov
cmp
dec
and
sbb
adc
or
mov
nop
xor
dec
rclb
mov
mov
xchg
andb
inc
insb
mov
and
dec
inc
xchg
cmp
xor
sub
mov
adc
adc
hlt
and
inc
in
mov
adc
and
dec
mov
test
mov
adcb
and
dec
push
inc
inc
cmp
sbb
adc
or
mov
mov
fmull
xchg
enter
mov
mov
mov
je
mov
and
dec
dec
xchg
inc
and
inc
xor
mov
adc
and
dec
or
or
and
inc
fmul
mov
adc
xchg
and
call
js
je
jo
push
push
mov
inc
and
dec
xor
adc
mov
adc
hlt
fadds
sbb
fs
cmp
pop
xor
aam
int3
and
jmp
mov
xor
les
pop
xchg
sbb
fs
mov
or
mov
adc
and
dec
fcoml
les
sbbb
sub
adc
or
bound
into
dec
data16
cmp
fsubs
sbb
xchg
xor
xchg
sbb
adcb
and
jo
push
push
and
dec
inc
xchg
inc
and
xor
mov
adc
and
dec
or
or
xor
mov
jns
std
jge
adc
pop
cs
push
js
lods
cmp
add
popa
xor
jo
pop
cmp
insl
cmp
adc
ret
popa
adc
out
out
out
pop
mov
mov
addr16
sbb
push
mov
ss
dec
jo
lahf
js
adc
insb
and
loopne
pop
add
adc
popa
rorb
push
push
push
adc
pop
jl
nop
jno
test
inc
push
in
loope
sub
adc
insl
jns
insb
ja
loope
jg
or
jo
push
jb
addr16
mov
sub
nop
outsl
inc
mov
jl
cmp
mov
push
jl
imul
ja
pop
gs
sub
mov
icebp
and
jge
adc
push
bound
mov
push
lock
or
sbb
and
adc
bound
insb
sti
repnz
jmp
fwait
jp
dec
sub
push
inc
inc
adc
add
jne
ret
xor
andl
inc
xchg
dec
mov
ljmp
jge
lcall
sahf
mov
dec
push
bound
xor
mov
sbb
cmp
loope
gs
xor
test
lods
xchg
xor
icebp
out
pop
imul
sahf
idiv
pop
mov
inc
sub
mov
movsl
add
insl
pushf
xchg
je
inc
dec
dec
push
inc
push
pop
nop
inc
enter
cmp
fstl
inc
mov
xor
pop
adc
cltd
push
mov
cli
xor
add
out
lcall
jbe
inc
inc
jns
bound
inc
arpl
imul
xor
insl
xor
insb
cmc
mov
xchg
or
cmp
fs
imul
inc
dec
fwait
dec
sbb
arpl
gs
sub
shrb
int
inc
loopne
lds
xor
dec
xchg
lds
jo
orb
rclb
shlb
dec
sub
mov
fnstenv
je
dec
int
imul
dec
je
shlb
or
inc
push
test
and
or
push
imul
dec
hlt
data16
xchg
fsub
insb
je
filds
inc
dec
aam
movsb
lahf
push
insl
jns
cltd
dec
dec
dec
dec
push
pop
pop
in
lock
xchg
movl
inc
bound
xchg
fidivrl
sub
test
subl
pop
jecxz
clc
push
dec
dec
and
lahf
adc
push
push
xor
shll
data16
mov
and
ja
les
inc
lds
imul
jp
dec
hlt
addl
pop
jb
js
loope
xor
test
bound
mulb
mov
jp
cwtl
mov
rolb
movsb
cmp
ja
movsb
xor
leave
pop
add
mov
and
sub
xor
pop
and
jns
and
jno
sbb
clc
testl
jo
and
xorl
inc
xor
sbb
dec
cli
shlb
xor
dec
stos
dec
push
mov
pop
lcall
pusha
xchg
sub
lret
aaa
cwtl
test
hlt
jne
shrb
mov
popa
jmp
or
insb
inc
fs
inc
fidivrl
mov
nop
mov
push
pop
or
dec
fimull
dec
leave
fcoms
or
jae
ret
xchg
in
int3
out
pop
xchg
mov
rep
rorl
push
inc
push
rclb
push
pushf
xor
popa
rolb
jno
xor
xor
lods
sbb
outsb
mov
adc
push
cmp
sbb
arpl
push
lret
cli
adc
and
xchg
adc
fs
loopne
inc
dec
jne
daa
fs
sbb
idivl
insl
xchg
data16
clc
fnsave
loopne
push
pop
mov
cmpl
jns
lea
push
adc
dec
fcoms
adc
jbe
fmuls
mov
nop
jb
jns
and
xor
push
mov
sub
movsl
fwait
add
add
jae
repz
inc
xorb
mov
pop
fs
jns
xchg
inc
cmp
or
xor
js
pop
xor
pop
pop
mov
je
pop
dec
mov
repnz
inc
dec
push
xchg
inc
and
pop
dec
mov
dec
and
dec
inc
xchg
inc
and
push
mov
push
sub
push
or
push
clc
inc
push
or
mov
jp
insb
dec
push
inc
fs
ja
jb
and
xor
shlb
or
out
popa
dec
and
int
jle
xchg
sbb
inc
sti
shll
js
lret
xor
pop
jnp
pop
pop
mov
push
jp
push
cmpb
leave
adc
sub
push
lea
cmpb
faddl
mov
push
xchg
lret
rclb
test
add
sti
shlb
add
aaa
rol
stos
jns
arpl
sub
mov
fcomps
ffree
jle
jl
arpl
pop
sub
or
or
or
jb
mov
stos
in
jne
lds
test
pop
cli
sub
inc
popf
push
insl
pushf
inc
or
mov
adc
and
push
mov
dec
int
or
das
pop
push
xor
jae
stos
xchg
dec
pop
scas
les
dec
inc
popa
jne
pop
mov
pop
shl
push
mov
sbb
push
sub
and
cld
mov
in
shr
jmp
lret
or
les
in
dec
lods
in
dec
pushf
xchg
add
xchg
inc
mov
mov
sarb
mov
test
xlat
popa
push
fs
or
or
loope
adc
mov
or
push
repnz
adc
pop
in
aam
mov
mov
dec
jle
and
and
das
mov
xchg
push
sbb
call
popf
push
dec
adc
scas
mov
push
cmpsb
push
test
je,pn
ja
mov
cltd
fnstsw
std
pop
cmp
pop
and
pop
inc
js
and
les
xor
pop
jne
xchg
arpl
adc
mov
and
cmpb
dec
aad
mov
lock
lods
mov
loopne
scas
sarb
push
and
mov
popa
in
mov
lods
test
xor
jne
inc
and
sarb
jmp
pop
mov
movsl
mov
cmpsb
inc
insl
push
cmpxchg
out
mov
inc
and
fs
outsb
pop
dec
cs
xor
sbb
sbb
test
roll
inc
pushf
xchg
mov
sub
ljmp
shlb
mov
inc
pop
out
sub
dec
and
insb
sub
movsb
out
testb
xchg
mov
dec
adc
jg
or
ja
and
push
push
mov
cmc
shrb
das
mov
mov
inc
mov
and
push
pop
cmp
and
push
sub
ss
mov
or
mov
or
and
repnz
stc
stos
cmc
cmc
stc
jae
xor
mov
xor
pop
imul
sarl
jmp
sub
out
xchg
out
jne
aam
call
pop
ljmp
sahf
dec
xor
mov
push
cmp
xor
lock
lods
ret
ficoml
push
adc
mov
mov
push
sub
sbb
sub
int3
or
dec
mov
xor
outsb
das
pop
mov
cmp
das
movsb
or
jb
mov
inc
je
jge
jae
ficoml
ret
sbb
xor
adc
xor
or
das
push
dec
or
mov
mov
and
xchg
push
sbb
add
jbe
or
or
add
or
flds
push
ljmp
inc
ss
aam
xor
dec
cltd
stos
and
and
ss
sbbb
into
push
mov
mov
cmp
push
cmp
jle
pusha
dec
popa
js
cltd
adc
pushf
out
dec
rcr
daa
and
jne
pop
inc
mov
call
sub
push
insb
outsl
test
jle
push
adc
inc
dec
popf
sarl
adc
int3
das
icebp
mov
mov
cmp
mov
push
lret
sbb
jae
pusha
inc
ja
popf
stc
cmp
push
inc
cmp
push
jb
xlat
clc
and
decl
rcrb
les
fwait
lock
fwait
ja
pop
loopne
xchg
jne
jl
out
stc
add
inc
scas
cmpsb
or
inc
mov
mov
xchg
push
and
cmpsl
adc
xchg
push
xchg
mov
dec
sbb
and
imull
call
popa
mov
mov
addr16
movsb
cmp
cmc
sarb
lock
call
insb
mov
and
stc
mov
jmp
jecxz
fstpt
pop
movsb
aam
es
xchg
mov
mov
pop
dec
pushf
mov
jp
dec
pop
push
nop
scas
inc
lea
dec
adc
sahf
xlat
sub
push
mov
popf
jbe
or
das
lret
sub
xchg
pop
push
pop
xchg
push
in
rcrl
and
movsl
movsb
dec
jae
jl
jns
xor
test
fs
lcall
outsb
filds
lcall
xchg
in
or
mov
mov
push
fcmove
inc
repnz
inc
cld
leave
fisubl
cmp
dec
jmp
mov
sti
ja
inc
call
push
push
mov
or
push
iret
hlt
adc
fs
lea
dec
outsl
popa
call
gs
fsubrs
iret
movsl
mov
icebp
loope
pop
push
ds
addr16
imul
cs
sbb
jo
sbb
xor
mov
not
mov
or
mov
les
dec
lods
xchg
mov
push
and
dec
xor
or
inc
mov
fsubs
dec
mov
cmp
xchg
xor
sub
lahf
imul
push
or
mov
mov
imul
pop
xor
jecxz
test
insb
and
push
dec
mov
or
xchg
inc
cmp
sub
push
push
or
jae
sub
and
lcall
int3
out
cmp
and
test
sub
insl
shl
sbb
jp
ljmp
mov
jo
stos
sub
xor
pop
sbb
dec
clc
cmp
push
push
lods
jle
test
xchg
dec
movsb
sub
inc
daa
or
mov
lret
shrb
pop
xor
int
loop
fbld
pop
mov
into
xchg
pop
mov
sbb
push
cmp
mov
mov
dec
dec
mov
inc
aas
add
or
push
pop
xlat
and
stos
std
popf
aam
dec
scas
mov
pop
in
mov
mov
pop
mov
mov
rcl
and
inc
mov
xor
jl
js
inc
je
mov
pop
and
xor
inc
dec
dec
dec
pop
push
push
push
jo
hlt
rcr
fstl
jmp
cmpsl
div
pop
xchg
xor
and
pop
cli
aas
fs
and
pop
push
je
xchg
push
hlt
mov
push
loop
adc
in
je
clc
in
cmp
xchg
mov
or
stos
mov
pop
jecxz
ret
mov
mov
mov
and
push
les
ds
cmp
sbb
sbb
mov
xchg
mov
inc
pop
mov
mov
sub
pop
fmulp
push
icebp
inc
dec
sbb
sub
jmp
inc
adc
cmp
push
mov
dec
arpl
and
lods
stos
push
in
push
xchg
jno
or
push
outsb
loop
mov
jne
pop
mov
dec
loop
inc
shl
adc
ja
push
xor
hlt
das
sti
fdivl
dec
or
lret
jge
xlat
stos
pop
out
enter
adc
syscall
bound
das
pop
scas
inc
push
push
inc
imul
insl
adc
adc
addr16
and
ja
add
aam
and
dec
push
pusha
adc
push
cmp
shlb
pop
lock
je
jns
ret
inc
adc
popa
mov
cmpb
out
and
mov
mov
jne
inc
mov
insb
and
scas
scas
mov
rcll
cmp
mov
dec
jmp
jl
dec
paddb
jae
push
inc
and
adc
addl
testl
inc
xor
outsl
sarl
push
push
pop
adc
add
cmp
ret
xchg
bound
adc
outsl
movsb
popa
xchg
xchg
imul
sbb
out
jne
xor
xor
push
aaa
arpl
cmp
xor
test
jl
lods
bound
xchg
insb
cmp
insb
pop
mov
sbb
popa
inc
push
push
and
add
xor
dec
dec
jp
cs
and
ljmp
cmp
lret
pop
lcall
cltd
dec
xor
bound
inc
inc
jne
mov
dec
sahf
es
sbb
mov
sub
dec
mov
pop
jecxz
or
push
imul
push
test
dec
add
jns
and
lret
in
test
pop
xor
mov
inc
std
cmpsl
fimull
push
dec
negb
sub
outsl
jge
scas
and
in
imul
cmpsl
mov
inc
cs
xor
jb
imul
xchg
pop
in
popf
add
push
pop
mov
cmp
sti
cmpsl
pop
sbb
aaa
test
je
sub
jo
add
mov
inc
push
jmp
add
sbb
and
add
sbb
cmp
das
fnstenv
sbb
xor
pop
or
add
and
inc
inc
cmp
pusha
sbb
and
add
lock
adc
scas
inc
push
add
cmp
dec
add
into
cmp
adc
stos
stos
stos
dec
in
loopne
add
xchg
into
or
add
mov
mov
adc
inc
subl
inc
push
addb
add
cmp
and
adc
dec
stos
cltd
add
or
fisttps
add
sbb
add
pusha
cmpb
cwtl
sub
fbld
sbbl
test
shll
cmp
push
mov
in
inc
mov
cmp
in
call
nop
mov
or
ficompl
rcrb
test
cs
fcomp
loopne
add
jle
je
mov
xchg
add
add
fs
sbb
push
or
or
cmp
dec
sbb
xchg
addps
adc
sbb
and
inc
jb
cltd
xor
dec
sbb
or
pusha
sub
xchg
insb
sbb
insl
sbb
xor
jo
sbb
jb
lods
push
cltd
xor
or
and
adcl
sub
lret
cmpsl
jb
mov
xlat
mov
pop
or
and
sub
dec
mov
or
js
xchg
adc
sbb
adc
inc
sbb
and
cltd
dec
adc
adc
and
xchg
push
and
xorl
cmp
xor
int3
adc
mov
adc
dec
and
cld
ja
or
mov
dec
in
sbb
faddl
mov
adc
and
dec
les
and
and
dec
mov
add
lock
clc
jmp
lcall
or
add
xor
adc
xchg
add
sbb
pop
paddb
rclb
xor
mov
inc
or
mov
cmp
xchg
inc
xchg
leave
add
sub
dec
sbb
mov
data16
inc
or
pop
sub
xor
push
enter
movsb
mov
loopne
loop
push
js,pt
adc
loopne
test
xor
and
adc
jp
push
xchg
cld
daa
hlt
push
jo
decl
and
cmpsl
adc
mov
pop
adc
std
pop
pop
xor
sub
xchg
es
rcll
xor
or
add
inc
sbb
and
inc
add
or
add
mov
pushf
or
adc
cmpxchg
adc
push
adc
and
leave
sbb
mov
mov
ret
clc
and
lock
mov
sub
imul
in
mov
dec
sbb
addl
add
add
loopne
mov
adcl
out
cmp
cmpsb
iret
or
jp
outsl
movb
mov
or
mov
mov
cmp
divl
jl
loopne
mov
add
popf
sti
jmp
stos
push
inc
add
repnz
add
pop
stos
cmp
scas
xchg
shr
aam
jne
add
dec
jp
iret
inc
gs
add
xchg
push
cmpsb
scas
mov
inc
or
addl
in
xchg
cmp
cmp
out
mov
out
mov
andb
add
std
mov
fadds
and
stos
xchg
add
repz
mov
subb
leave
fwait
xchg
and
les
int3
add
add
sti
aas
jno
or
mov
lock
add
fisttps
xchg
outsb
adc
shrl
pop
mov
icebp
add
mov
inc
sbb
lods
pop
lds
mov
insb
scas
pop
add
shlb
mov
aad
mov
std
loop
add
adc
stos
in
das
dec
add
dec
les
leave
js
add
jne
int
icebp
lcall
xchg
cmp
push
mov
out
lock
pop
loop
sarl
popa
mov
mov
jle
push
jl
mov
add
lea
mov
outsl
inc
dec
ret
movsl
jmp
jg
test
add
mov
add
fstl
arpl
add
and
call
cli
cmp
jp
and
lods
cmp
mov
cmp
add
xlat
cmp
mov
or
mov
jecxz
cmpsb
add
movb
inc
inc
pop
mov
jne
add
cmp
jno
shlb
lock
out
dec
nop
pop
cmp
push
fisubl
xor
add
adc
add
in
add
push
scas
into
imul
pop
add
movsb
rcr
jge
call
out
pop
push
xchg
cmp
mov
dec
dec
gs
std
add
adc
ror
add
frstor
pop
lods
subb
inc
push
gs
shl
lahf
loope
inc
movl
mov
push
inc
jae
fs
call
data16
push
cmc
and
shrl
sbb
andb
sub
pop
add
fadds
add
add
daa
jo
loopne
enter
and
adc
and
add
add
add
add
add
mov
add
cmpl
jne
mov
mov
jmp
mov
mov
lea
lea
xor
call
jmp
mov
pushl
add
pushl
add
call
add
add
cmpl
jne
cmpl
je
cmpl
je
call
lea
push
push
push
push
push
call
mov
pop
pushl
push
call
add
mov
mov
jmp
inc
cmpb
jne
inc
mov
add
add
mov
jmp
push
call
test
je
mov
mov
jmp
mov
mov
test
je
xor
push
mov
movl
jmp
pushl
pushl
call
test
je
mov
add
mov
jmp
inc
cmpb
jne
inc
mov
cmpw
je
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
add
add
mov
cmpb
jne
push
push
pushl
call
call
call
popa
jmp
popa
ret
pusha
mov
add
add
add
mov
add
mov
lea
push
push
push
push
call
popa
ret
pusha
mov
or
je
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
pusha
mov
add
mov
mov
cmpl
je
jmp
cmpb
je
cmpb
jne
mov
cmp
jne
mov
bswap
sub
add
sub
mov
add
sub
inc
dec
cmp
ja
jmp
cltd
jmp
inc
cmpb
je
cmpb
jne
mov
bswap
sub
mov
add
add
sub
inc
dec
cmp
ja
popa
ret
pusha
mov
add
mov
or
je
add
add
mov
or
je
mov
jmp
push
cmpl
je
push
push
pushl
call
pop
add
mov
or
jne
popa
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
jp
sldt
add
add
jb
gs
xor
cs
insb
add
test
add
test
add
test
add
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
add
add
or
add
add
add
add
inc
add
adc
add
pop
add
adc
push
add
adc
add
sub
add
jo
add
nop
add
mov
loopne
add
add
add
push
xor
arpl
fs
popl
dec
inc
push
dec
out
cmpsb
or
add
cmp
outsl
arpl
cmp
jo
orb
or
icebp
and
adc
or
xchg
or
add
adc
mov
adc
and
dec
xchg
xchg
push
pushw
jo
add
outsb
fs
insb
outsl
jae
gs
enter
dec
data16
sbb
jae
popa
xor
rclb
jb
or
or
push
arpl
arpl
jo
imul
cmp
push
inc
movsb
packuswb
ljmp
insb
jne
push
push
jecxz
pop
push
dec
mov
dec
dec
mov
sub
sbb
or
sbb
add
ljmp
push
pop
je
out
movsl
cs
mov
inc
dec
popa
jo
daa
push
cmpsl
or
mov
js
in
jae
pop
cmp
xchg
dec
cld
dec
sub
or
pop
pusha
or
outsb
outsw
xchg
dec
sbb
je
pop
sub
bnd
popa
insb
inc
mov
inc
lahf
jo
xchg
inc
push
inc
mov
dec
mov
cmp
jbe
lret
adc
test
xor
dec
push
popa
iret
adc
push
jns
fisttps
inc
sahf
sti
arpl
outsl
scas
fsubrl
push
sarb
cltd
inc
cmp
push
push
repz
stos
aaa
and
dec
jbe
outsb
insl
nop
stos
jne
inc
outsb
pop
jg
push
fs
popaw
cmpsb
inc
fistpl
aaa
push
xchg
mov
notb
lcall
inc
ret
push
xchg
dec
leave
xchg
push
sub
push
dec
sub
movsl
mov
xor
negb
ljmp
enter
xor
and
gs
mov
jae
dec
cmp
popf
out
mov
cmp
fs
movsl
sarl
insl
mov
and
movsb
xchg
mov
push
xor
jbe
jp
insb
dec
or
rolb
pop
pop
push
out
mov
fildl
ss
and
push
aad
das
loop
hlt
dec
jo
and
sub
enter
adc
scas
loop
push
or
inc
gs
jo
mov
push
cmpsb
push
or
fsubrl
iret
inc
retw
dec
mov
imul
daa
push
enter
jo
mov
and
bound
xchg
sub
mov
sub
scas
xchg
jne
es
inc
mov
cmovno
call
or
xchg
push
rorl
xchg
xor
inc
rorb
push
push
or
insl
lea
lods
nop
pop
push
and
std
gs
sub
and
cs
rolb
cmp
inc
jbe
loopne
arpl
jns
sub
mov
arpl
rorl
jno
xchg
adc
or
mov
jnp
inc
pop
push
icebp
push
popa
pop
ss
pop
push
repz
adc
mov
push
and
enter
dec
sub
mov
xor
cmp
aaa
dec
aas
fs
popf
lcall
mov
or
and
jo
mov
ja
movsl
sub
jmp
dec
jno
push
popa
xchg
push
inc
or
xchg
and
pop
scas
add
jg
enter
xchg
insl
movsb
xchg
pop
cmpsb
sbb
inc
sbb
mov
nop
lret
addr16
mov
sbb
mov
jae
push
sub
cmp
je
dec
ja
pop
repz
sub
jo
pop
push
test
sub
rcrb
inc
adc
or
adc
addb
add
