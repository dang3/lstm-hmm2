sbb
mov
mov
aas
jle
cmp
or
das
jg
mov
sbb
mov
push
inc
lahf
test
outsb
pop
or
ret
loope
or
xchg
aas
pop
data16
out
push
int3
pop
xchg
jno
es
mov
mov
mov
fs
addr16
leave
sbb
not
cmp
subb
inc
cmp
lahf
jbe
pop
inc
lds
outsl
inc
cmp
adc
out
mov
scas
xor
mov
cmpsl
dec
hlt
mov
testl
sub
aam
sbb
cmp
insl
stc
jns
into
jmp
cli
xlat
inc
stc
mov
and
shlb
outsl
fwait
and
sub
loope
xchg
cmp
dec
in
rolb
aas
lcall
xchg
sub
xor
mov
xchg
push
cmp
add
lods
fsub
add
je
mov
sub
jnp
fs
mull
call
repz
mov
push
iret
jmp
cmp
add
rolb
sub
push
mov
out
loop
cmpsb
int
ret
xchg
fdivr
lcall
pcmpgtb
pop
stos
pushf
pop
daa
mov
or
push
add
sbb
add
test
lock
mov
cmp
inc
mov
enter
adc
mov
sbb
js
ret
add
js
push
pop
push
and
mov
push
cwtl
mov
pop
sbbl
les
inc
dec
inc
dec
repnz
in
mov
jmp
inc
push
mov
sbb
jne
push
add
dec
cltd
push
and
inc
cmp
or
lret
leave
pop
enter
aaa
adc
mov
pop
adc
xchg
arpl
rclb
addr16
sub
imul
repnz
mov
push
insb
xor
ss
mov
loope
fwait
js
add
or
sub
push
jecxz
pop
sahf
inc
push
sbb
int
pop
in
ja
cmc
xor
bound
ret
push
xor
jo
fstpl
int3
add
cmp
jmp
and
xchg
mov
adc
dec
out
sub
sbb
mov
ret
or
or
pop
mov
fdivs
mov
xchg
jne
jbe
xchg
cli
xlat
stos
loope
sbb
pop
or
daa
orl
cmpsb
mov
lahf
imul
nop
clc
imul
cld
cmp
xchg
or
mov
cmp
sub
call
call
sti
xor
or
ret
jmp
movsb
into
sub
loop
es
or
jbe
xchg
mov
add
xchg
movsb
pushf
sub
cld
adc
movl
add
in
ud2
inc
mov
in
loopne
pop
xor
push
adc
int3
addb
test
xchg
filds
or
mov
mov
jle
pop
jmp
jmp
imul
test
int
mov
loopne
repnz
aad
addr16
fdivrp
pop
imul
sbb
push
dec
jl
or
nop
dec
lods
and
in
mov
cli
jo
xor
popa
inc
adc
sbb
jne
push
add
icebp
out
aaa
cmpsb
mov
repnz
sbb
arpl
loopne
fs
outsb
fcmovbe
cmpsl
mov
test
negb
lock
push
xchg
lds
mov
jo
xchg
mov
dec
nop
mov
mov
push
fidivrs
mov
js
inc
jp
scas
ja
outsl
lcall
mov
jbe
jg
jmp
cs
dec
pop
push
add
fimull
add
out
inc
jmp
cwtl
jecxz
mov
dec
cmp
dec
pop
dec
or
out
addr16
sbb
mov
lret
xor
out
or
fwait
xor
jge
gs
mov
lods
sar
popf
inc
and
cmp
push
stos
imul
test
mov
mov
sbb
sub
lods
test
jae
mov
mov
mov
cmp
cltd
cwtl
dec
adc
iret
dec
movl
pusha
push
or
dec
incb
aas
test
popa
je
push
inc
jae
popf
lods
repz
cmc
xchg
mov
xchg
pushf
adc
mov
xchg
std
mov
into
mov
push
pusha
fwait
andb
dec
addl
adc
mov
pop
test
rolb
ficoms
ret
push
int3
xchg
mov
push
out
cmp
movsb
rclb
or
fiaddl
lahf
sub
lret
dec
test
mov
mov
cltd
and
inc
aas
fnstcw
xor
add
enter
jg
scas
mov
data16
mov
ret
ret
loop
and
mov
adc
aam
jae
movsl
mov
out
push
adc
pop
lea
std
insb
xchg
push
and
adc
fisttpll
sub
lods
mov
iret
mov
cmp
pop
fst
leave
loop
adc
daa
push
push
mov
sub
notb
jp
loop
sahf
lods
ficomps
ret
xor
std
hlt
lret
imul
mov
push
test
push
cli
rcrb
sahf
and
and
js
clc
jge
aaa
push
sahf
push
outsl
mov
cmovge
or
sub
sbb
inc
enter
and
inc
loope
dec
xor
pop
sub
cmp
ljmp
imulb
out
repz
mov
stos
es
fcompl
ret
adc
rcll
xor
test
or
sub
movsb
add
jb
dec
dec
sbb
mov
xor
or
test
aaa
movsl
call
dec
push
inc
push
rorl
movsb
mov
inc
inc
into
xchg
mov
outsl
dec
aaa
push
mov
push
add
xorl
test
pop
repnz
cmp
mov
xchg
push
adc
xchg
mov
inc
dec
and
dec
out
and
outsl
inc
and
or
out
fcoms
pop
out
out
imul
in
lea
aam
insb
leave
ret
xchg
dec
jmp
push
insb
jae
mov
data16
cmp
cltd
pop
hlt
fldenv
movsl
notl
stos
lock
fs
inc
dec
inc
sub
push
ret
sbb
jb
xor
sub
aaa
jbe
fiaddl
aas
dec
filds
jno
mov
mov
js
or
into
movsl
push
or
xchg
orb
sti
cs
mov
or
xchg
jp
lret
insl
out
lcall
jnp
cmp
inc
lahf
xchg
push
or
sbb
push
jns
push
push
ljmp
add
and
in
call
mov
sbb
mov
or
pop
adc
lahf
jp
mov
mov
xchg
and
sbb
mov
mov
jp
pushf
xor
sbb
dec
test
pop
or
es
daa
jne
lahf
xor
iret
jbe
mov
mov
outsl
aas
test
test
sbb
lret
or
mov
mov
aad
lret
ds
dec
arpl
scas
loop
bnd
lret
pop
mov
xor
in
in
add
push
loopne
inc
inc
or
mov
jo
sub
mov
add
repz
outsb
adc
stc
pop
mov
movlhps
dec
mov
jbe
mov
or
popa
pop
sub
cwtl
jmp
dec
sub
mov
or
or
repnz
mov
push
loopne
imul
push
cmp
loopne
push
add
sub
ja
xor
jl
icebp
aad
jge
orl
xor
nop
into
pop
push
and
add
adc
jbe
mov
scas
sbb
mov
insb
add
gs
inc
aas
mov
jns
popf
movsb
xor
ret
push
add
mov
cmp
push
dec
xor
cmp
js
mov
sub
sbb
cmpsb
xchg
std
enter
inc
pop
mov
fisttpll
push
rcpps
xchg
mov
cwtl
mov
inc
mov
rcrb
pop
pop
lock
lcall
lcall
daa
sti
aad
push
int3
pop
pushf
xor
push
push
push
push
or
lcall
cmpsb
js
adc
inc
cmp
xchg
enter
jecxz
jp
stos
pop
dec
xor
aas
cmp
imul
mov
dec
add
pop
insl
data16
dec
xor
xchg
pop
fsubs
movsl
data16
jnp
fstpt
push
daa
gs
xor
ja
repnz
fisubl
mov
insb
inc
xchg
xor
lock
or
fwait
cld
mov
loop
mov
test
add
arpl
popa
cmpsb
mov
mov
popf
dec
sub
fcompl
push
fcmovnbe
imul
fcoms
lds
mov
inc
or
push
mov
orl
xor
xchg
inc
add
xor
xlat
sbbl
in
outsl
sbb
adc
add
out
jmp
pop
push
shll
lret
mov
into
adc
test
outsb
xchg
mov
inc
mov
test
adc
and
inc
loop
mov
les
dec
in
lahf
and
test
pop
push
or
loope
mov
daa
jno
mov
mov
jae
testl
jne
mov
push
popf
dec
pcmpgtw
inc
aas
dec
inc
pusha
push
rol
in
pop
fs
xchg
test
sbb
xchg
mov
sub
or
xchg
add
mov
pushf
pop
popa
test
shr
iret
fstl
or
and
pusha
std
test
vandnpd
cmc
add
sub
ret
call
outsb
xchg
jecxz
aad
or
lret
sbb
dec
mov
push
outsb
and
push
aas
das
pop
cmpsl
pop
and
mov
dec
mov
faddl
dec
pushf
adc
xchg
push
add
lods
xchg
mov
cmpl
insb
mov
dec
adcb
imul
pop
out
imul
mov
lods
pop
adc
push
jb
loope
or
cmp
and
jmp
fstpt
outsl
loopne
stos
inc
insl
stos
mov
in
adc
dec
fs
add
jbe
and
pop
mov
mov
jmp
enter
cwtl
inc
lds
pop
nop
pusha
inc
ret
mov
dec
push
jne
cmp
cli
jecxz
loopne
adc
pop
out
jns
popa
int3
cs
and
dec
push
and
lock
out
and
cmc
inc
mov
push
scas
pop
mov
sub
jb
dec
bound
sarl
inc
shlb
and
pop
scas
sub
cli
js
ljmp
sahf
xor
imul
push
mov
or
mov
add
jns
je
and
inc
ljmp
dec
add
sti
jae
andl
pop
mov
inc
pop
dec
fisttps
cs
into
cmp
mov
dec
imul
mov
ficoms
ret
mov
insl
and
xlat
adc
outsb
out
jecxz
xchg
jmp
iret
ret
lods
jb
xor
inc
push
or
arpl
add
out
jmp
and
lea
xchg
cld
in
add
cltd
mov
test
inc
es
push
int3
xchg
leave
mov
and
fndisi(8087
fwait
or
and
jo
dec
dec
xchg
out
mov
out
cld
jl
sub
add
pop
sbbb
test
inc
jge
aaa
lea
ret
inc
cmpsl
call
ljmp
test
adc
push
int3
mov
push
adc
or
test
adc
push
xor
lahf
test
das
pop
add
lret
lods
xchg
mov
jnp
inc
icebp
fldcw
or
leave
lret
int3
xlat
fiadds
xor
jo
xor
test
dec
sti
popf
sbb
adc
vpsrlw
lock
or
mov
pop
nop
or
cmpsb
mov
sbb
popa
negb
les
lock
stos
cmp
push
clc
and
arpl
xchg
push
dec
clc
fdivl
aam
lahf
das
test
jae
addr16
outsb
cmp
push
out
push
dec
pop
lea
out
mov
scas
cmp
out
shlb
imul
test
daa
out
and
rcrl
xorl
fisttpl
imul
mov
sahf
and
jnp
cld
inc
add
mov
mov
mov
push
fstpt
push
or
mov
xor
movsl
movsl
jbe
add
inc
cmp
xor
addb
jmp
pop
mov
pop
and
rcrl
movsl
shrb
in
push
test
jmp
aad
mov
shr
cmpsl
mov
rorb
nop
inc
shrl
mov
mov
cmp
add
pop
stos
mov
ret
sub
mov
mov
jno
cmpsl
out
pusha
dec
repz
sbb
fiadds
sarl
sbbl
push
xor
dec
xchg
das
sbbl
js
sub
fldt
mov
lds
cwtl
push
xor
mov
push
jmp
ds
dec
mov
xchg
les
imul
cmpsb
push
pop
pop
aad
jno
fisttpll
dec
dec
dec
sub
pop
shl
inc
push
ds
xor
xchg
out
int
pop
movsb
adc
mov
sti
push
stos
aam
xchg
adc
ffreep
bound
sub
outsb
jmp
lea
ret
and
stc
dec
cmc
ljmp
xor
sti
outsl
pop
rcll
outsb
neg
adc
mov
xor
stc
fbstp
xor
mov
push
xchg
testb
stos
xor
cmp
rol
xchg
mov
mov
lods
dec
xchg
popf
stc
fistl
clc
push
pop
shll
scas
outsl
adc
adc
into
push
dec
cmp
pusha
icebp
repnz
adc
outsb
push
add
inc
or
repz
insb
adc
jle
push
jns
lods
mov
mov
sbb
cld
imul
mov
xchg
sub
pop
xchg
imul
dec
scas
nop
repz
mov
or
cmp
out
cmp
fst
mov
or
data16
out
std
push
and
cmc
cld
out
inc
pop
lock
outsl
cli
repz
sbb
ss
pop
mov
aas
or
outsl
lea
push
adc
mov
dec
es
sub
outsl
add
cli
xor
fyl2xp1
pop
arpl
pop
aas
xor
jne
push
ss
clc
addr16
cmp
jmp
sbb
xor
push
adc
cmp
xchg
fucom
mov
aaa
mov
clc
fsubl
jne
lahf
sub
mov
outsb
daa
jp
sbb
insb
adc
int
fsts
arpl
int
sub
or
adc
je
mov
cltd
cmp
or
sahf
cmc
bound
sti
pop
mov
stos
jbe
pop
push
push
sub
repnz
cmp
mov
dec
jnp
pop
cmp
insl
push
or
pushf
sahf
adc
dec
mov
aaa
push
and
ror
aaa
add
sub
leave
push
repz
mov
cmpxchg
mov
inc
das
les
leave
movsl
cmp
aam
into
cmp
repz
fisttps
das
pop
movsb
movsl
cmp
leave
in
lret
adc
jmp
sub
dec
nop
cmp
mov
pusha
pop
dec
movsl
fstl
std
icebp
or
test
jmp
push
jmp
or
cmpsl
ficoml
icebp
imul
jbe
outsl
cmp
adc
loop
call
dec
lret
adc
lcall
data16
mov
out
incl
insl
xor
insl
jno
sub
daa
repnz
mov
xor
fadd
loop
push
xchg
jg
cwtl
mov
out
mov
and
sub
mull
xor
push
into
outsb
add
lock
call
cmp
imul
iret
xchg
xchg
fnstenv
ret
popf
mov
push
mov
fcomps
mov
jb
jmp
and
repnz
imulb
into
cmpl
push
fdivl
int3
sbb
or
in
pop
gs
insl
std
push
inc
js
rorl
mov
xorb
pop
sbb
fwait
push
pop
bnd
push
fidivrs
and
mov
xchg
jmp
adc
jbe
and
pop
les
out
adcb
adc
insb
push
arpl
push
sbb
movsl
cwtl
insl
jg
xor
xchg
shrl
push
jmp
or
lret
popf
insl
mov
fdivrl
pop
ss
mov
ja
add
mov
rcl
pop
fists
push
repnz
pusha
scas
inc
loop
ret
cmpsl
sub
jge
lret
cli
outsl
jle
mov
orl
nop
push
das
mov
dec
pop
push
scas
sbb
cmpsb
adc
mov
rcrb
xchg
pushf
cwtl
or
stc
push
dec
shlb
add
adc
jmp
lahf
fisttpll
push
std
push
jp
dec
xor
pop
mov
mov
loope
jle
adc
outsb
rol
subl
mov
push
daa
mov
les
sbb
orl
sbb
in
jb
mov
xor
mov
mov
or
scas
pop
inc
xlat
xchg
in
dec
shrl
sub
xchg
push
inc
ret
hlt
push
pop
dec
test
sub
cltd
test
out
cltd
push
addr16
adc
fimuls
mov
into
add
fdivrs
aas
jmp
xor
scas
mov
add
fidivs
push
cli
xchg
ja
lods
clc
mov
mov
div
xchg
pop
sbb
out
insl
bnd
pusha
cmpsl
inc
ja
out
xchg
out
inc
fbld
jb,pn
mov
fwait
inc
popf
cltd
outsb
test
push
in
and
sub
adc
add
in
idivb
std
ficompl
cli
cmpsl
mov
or
lods
mov
fwait
inc
jb
mov
xor
aad
das
lcall
mov
sbb
and
mov
mov
stos
jae
xchg
in
sub
mov
xchg
add
outsl
bound
divps
rorb
mov
loop
and
movsb
rolb
push
xlat
test
mov
sub
lret
xchg
test
mov
jp
or
mov
dec
inc
aam
dec
pop
leave
or
xor
adc
xchg
sub
mov
mov
cmp
jge
loope
or
lods
jmp
or
xor
dec
gs
in
cmpsb
lret
fists
lahf
mov
push
ss
pop
or
inc
das
pop
lret
orl
jbe
and
shrb
pop
movsl
icebp
lret
out
jmp
sub
jae
out
jle
sbb
pop
aad
pop
cltd
sub
dec
and
cltd
xor
loop
sti
push
inc
in
lods
test
jp
lahf
das
roll
fistpll
inc
stos
cwtl
jo
repz
hlt
insb
aaa
stos
pop
pop
dec
in
push
je
data16
xor
rolb
mov
aaa
daa
mov
filds
sub
loopne
pop
pop
xlat
mov
ret
and
out
sahf
dec
dec
sbb
stos
and
xchg
pop
or
outsb
shl
jne
xor
push
cld
mov
or
push
lds
popa
dec
vmaskmovdqu
stc
divl
mov
icebp
or
jge
fs
notb
mov
iret
add
fwait
dec
and
jg
pop
fstp
daa
mov
outsb
subl
jae
nop
ds
adc
outsb
sahf
ficoml
loope
adc
jl
mov
mov
mov
das
shrl
dec
int
frstor
test
or
out
cmp
arpl
rcll
cmp
shlb
or
test
mov
enter
imul
lcall
and
pushf
dec
and
inc
cmpsb
sbb
dec
mov
push
xchg
je
mov
js
imul
pop
push
inc
int3
shll
pop
jl
mov
movsb
shll
cmp
pop
sub
mov
mov
cld
push
lcall
add
sti
mov
aaa
xor
pop
or
ss
pop
pop
mov
outsb
call
into
imul
mov
lea
and
outsb
int3
sub
jl
jo
mov
mov
shlb
xchg
movsb
sar
pop
and
pushf
xchg
outsl
and
adc
ljmp
ljmp
in
add
dec
enter
dec
cmc
mov
addr16
jmp
adc
and
in
cmp
lret
ficompl
in
or
loop
ss
mov
lea
mov
xchg
mov
jae
repnz
inc
mov
push
xchg
push
add
cwtl
xchg
sbb
popa
or
xchg
sub
mov
lret
cmpsb
pop
scas
inc
repz
xlat
xchg
xor
xchg
notl
adc
adc
std
rorl
cld
add
shll
mov
mov
jge
shl
mov
mov
pop
push
movsl
pop
sub
inc
out
lock
jp
xchg
adc
int3
push
repz
das
repz
xor
mov
imul
add
push
xor
cwtl
mov
pushf
adc
lret
mov
pusha
test
sahf
roll
sti
jb
sub
dec
shll
push
ds
xchg
aam
adc
jp
inc
sbb
mov
ds
jb
add
insb
dec
nop
imul
bound
xchg
jbe
lret
xchg
cwtl
jne
adc
imulb
aad
sub
fldcw
pop
mov
xor
iret
mov
setg
pop
mov
jns
lret
fwait
jne
ljmp
fstpl
test
mov
repnz
scas
inc
sti
mov
cmpsb
jae
sub
in
fbstp
cld
aad
mov
adc
jne
mov
or
sbbl
jnp
shr
pusha
adc
pusha
push
add
push
mov
xchg
push
std
or
int3
in
xchg
xchg
add
lods
mov
sub
fsubrs
mov
jecxz
pop
sub
or
pop
adc
sbb
xchg
je
rorl
outsb
mov
out
add
mov
test
inc
fwait
adc
enter
xorb
clc
pusha
pushf
mov
fnstsw
arpl
push
add
cmp
jnp
scas
cmc
xchg
pop
pop
fmul
cmp
push
xor
in
jle
mov
xchg
and
dec
mov
push
mov
xor
fwait
cld
add
fsubrl
lock
dec
mov
std
inc
adc
stc
dec
jp
loop
in
out
mov
stc
jge
ret
rcrb
inc
jo
addr16
sbb
xchg
outsl
iret
mov
cmp
aaa
cmp
sbb
jo
hlt
test
lods
in
adc
jne
andb
dec
outsb
fstpt
lea
push
movl
cli
xchg
popf
cmp
fcompl
jmp
fcomps
xchg
daa
arpl
push
mov
popa
scas
dec
or
sarb
bound
add
push
cs
mov
cwtl
aam
mov
add
femms
dec
mov
push
test
mov
mov
mov
jl
mov
insl
nop
pop
fwait
rcrb
in
xor
jmp
scas
clc
mov
mov
sub
stc
lock
leave
jmp
sub
push
cli
loop
es
shlb
jecxz
je
cld
movb
je
dec
icebp
cli
bound
enter
cmp
inc
pop
sbb
aam
adc
mov
or
iret
mov
inc
mov
or
pop
lds
fwait
or
add
addb
xor
adc
pusha
or
in
mov
dec
rorb
fwait
sub
out
sub
sti
lcall
rcr
jp
pop
mov
sub
lock
adc
stos
lds
cld
out
lea
fs
dec
repz
ss
xchg
sbb
jg
xor
push
outsl
inc
lea
xor
mov
lea
sbb
cmc
movsl
cmp
and
jmp
into
loope
test
mov
dec
jg
out
or
insb
add
or
and
add
sahf
push
xchg
cmp
stos
clc
mov
inc
cmc
test
in
ss
mov
xor
pusha
cld
in
out
dec
xchg
add
out
xor
inc
sbb
stos
cltd
jmp
cmp
sub
add
loop
lcall
jns
ss
push
aam
das
scas
mov
pop
mov
add
inc
aam
pop
mov
push
dec
pushf
lret
mov
imul
out
pusha
adc
stc
lods
lods
in
mov
xor
pop
push
mov
scas
xchg
jmp
pop
mov
fwait
pusha
pusha
mov
in
sub
add
jmp
aas
loop
lret
or
ds
subb
testb
add
push
aad
xchg
jp
adc
aad
inc
push
inc
dec
and
rorb
ds
or
mov
fmul
pop
popa
push
mov
or
xor
and
mov
aas
arpl
sub
sub
aad
mov
pop
insl
adc
pop
fbld
sbbl
or
or
enter
imul
push
fwait
mov
mov
mov
aaa
jg
jg
push
cltd
push
lods
dec
cmp
mov
push
fstpt
clc
insb
movsb
pop
stc
push
orb
cmp
pop
mov
ret
push
cmp
mov
mov
adc
outsb
divl
mov
push
les
lods
mov
xchg
daa
scas
sub
mov
mov
inc
js
stos
lods
jmp
or
push
test
loopne
cmp
mov
leavew
lret
or
mov
mov
jo
xor
mov
repz
ror
adc
movsl
or
rcll
or
shll
scas
loop
sub
lock
inc
insl
faddl
jno
shl
pop
mov
sub
in
push
out
daa
popa
xchg
push
into
es
sbb
inc
ffreep
mov
sbb
leave
push
add
arpl
daa
dec
ret
aaa
neg
outsb
ds
leave
sbb
inc
cli
inc
push
cmpsl
push
add
xchg
sbb
mov
push
andl
fcmovnb
and
inc
add
mov
test
aaa
xor
sbb
sub
aas
adc
out
in
aas
rclb
mov
dec
adc
gs
push
aas
sub
cmp
cmpsb
repz
mull
in
sub
jge
push
mov
dec
pop
mov
mov
insl
jno
bound
cmp
jb
mov
xor
cmpsl
jmp
lret
test
inc
lret
das
lock
inc
sti
lret
gs
sub
dec
enter
mov
rorl
mov
test
mov
lret
je
or
mulb
add
outsl
push
pop
outsl
mov
jmp
mov
add
sbb
jg
stos
ss
push
inc
and
mov
movsl
xor
push
je
cmp
xchg
cmc
sub
mov
adc
mov
adc
sbb
inc
push
push
or
out
jecxz
out
stos
sbb
xchg
outsl
inc
lea
sbb
dec
pop
mov
add
scas
mov
mov
jmp
or
fistpl
jnp
cmp
inc
data16
aas
loop
daa
jecxz
sahf
int
clc
mov
lret
addb
inc
inc
xor
mov
es
push
adc
jo
mov
add
or
leave
adc
fnstsw
fiaddl
subb
vpsrlq
stos
in
xchg
add
sub
adc
pop
push
xchg
mov
fcomip
xchg
dec
xchg
mov
adc
sahf
sub
push
xchg
sub
into
ljmp
fbstp
cs
lret
sub
mov
out
in
xor
xchg
in
push
jb
or
xor
imul
cmpsl
mov
mov
ficomps
fnsave
imul
pushf
pop
mov
std
scas
add
sbb
les
aam
lret
lret
in
push
jg
pop
jle
imul
repz
push
push
mov
loop
icebp
push
mov
loope
daa
cmp
jle
cmpsl
lods
pop
popf
aaa
xchg
mov
xchg
loop
or
or
xchg
jnp
es
xlat
jo
fcomi
adc
into
loope
mov
xor
stos
inc
jl
addr16
fidivrs
push
sub
cli
in
mov
sarl
out
dec
and
decl
in
pop
in
cmp
mov
lea
cli
mov
es
ljmp
inc
jmp
shll
push
fcmovb
push
pop
aam
repz
std
std
rcll
or
pop
orb
mov
pop
fildl
mov
sub
mov
or
pop
andb
push
mov
or
add
sarl
cmp
adcl
mov
out
mov
push
je
jne
and
inc
jbe
fcmovnb
and
out
cmp
gs
out
ficompl
dec
mov
sub
mov
popf
or
mov
mov
xor
test
cmp
pop
push
aam
xchg
mov
ss
push
shll
daa
mov
clc
and
or
xchg
fisttpll
nop
js
lret
pushf
sarl
imul
enter
jmp
and
push
aad
fisttpll
addb
sar
or
pop
movsl
not
mov
imul
sub
fldlg2
and
and
shl
es
pslld
mov
push
mov
int
dec
js
pop
pop
test
mov
arpl
mov
fisubrl
das
sub
sbb
jae
fucom
push
adc
in
cli
rolb
idivb
push
add
dec
mov
sbb
std
subb
ljmp
loope
cmpsb
into
jns
push
xor
scas
or
movsb
clc
aam
adc
das
stc
pop
adc
gs
pop
sti
lret
popf
lods
and
and
sbb
push
mov
int3
push
fnstcw
pushf
lock
roll
sub
insb
test
clc
mov
jle
xchg
iret
les
add
mov
nop
andb
mov
inc
in
int
push
sbb
ds
mov
and
and
outsb
sub
test
out
adc
and
mov
and
addr16
cmc
loope
int
gs
pop
int
jp
pop
faddl
xchg
les
insl
jbe
pop
push
push
xor
hlt
xorb
mov
outsl
iret
ss
xor
push
cs
fcomps
shl
jp
inc
bound
add
dec
xchg
or
rclb
dec
sbb
mov
lret
dec
nop
iret
sub
lods
rcll
testb
sub
xor
pop
rcll
loop
pop
mull
add
pushf
mov
iret
imul
fbstp
mov
pushf
push
sub
push
xchg
jb
es
and
shrb
inc
gs
mov
mov
jle
push
sbb
mov
sti
pop
ljmp
scas
push
mov
mov
sub
sbb
and
inc
lods
sbb
fsubp
fdiv
xchg
and
fcmovne
cmp
xchg
insl
addr16
sbb
or
imul
mov
arpl
out
ja
mov
adc
in
inc
mov
mov
sub
xor
into
xor
pop
aas
inc
hlt
iret
lahf
dec
stc
inc
push
cmpsb
adc
out
sbb
xchg
push
jge
dec
dec
and
push
xlat
adc
mov
fwait
adc
adc
and
aam
pop
pop
add
sar
inc
mov
lret
fnstcw
negb
psllq
fs
iret
ljmp
mov
ret
push
jge
lea
test
push
test
pop
or
aas
xchg
xchg
movsl
es
jp
je
in
inc
in
pop
cmp
xchg
test
pop
adc
aaa
pop
popf
in
imul
add
sbb
push
dec
mov
leave
add
xlat
mov
xchg
dec
xchg
mov
popf
push
daa
imul
test
add
shrl
aaa
test
and
xchg
push
in
and
mov
nop
mov
push
mov
dec
mov
adc
pop
pop
scas
sbb
jno
ja
cld
int3
mov
sub
inc
mov
xchg
xchg
xchg
xchg
cmp
imul
cld
adc
idiv
mull
out
xor
daa
cmpsb
fstl
rorl
inc
push
add
xlat
jp
adc
push
cmp
jg
test
cmp
out
or
out
subl
lds
adcl
bnd
sub
imul
mov
dec
imul
xor
add
xor
mov
sti
test
imul
dec
push
out
andb
push
dec
incl
cmp
fs
jb
dec
mov
repz
ret
push
cmp
mov
lea
dec
imul
cmp
movsl
pop
sti
jp
and
adc
and
mov
pop
sub
push
add
sbb
push
adc
js
sub
or
xchg
dec
out
cmp
mov
in
gs
push
repnz
sahf
adc
mov
add
movsb
mov
leave
adc
in
push
scas
inc
xchg
inc
sahf
or
push
lret
hlt
sahf
mov
mov
mov
xchg
sbb
pop
rcll
dec
nop
outsb
jae
push
in
in
leave
inc
push
fs
movsl
push
inc
inc
testl
add
shrb
mov
cmp
xchg
in
stos
mov
and
sub
orb
rcll
jg
lcall
lods
pop
dec
push
dec
sbb
dec
inc
mov
stos
dec
jl
sti
jge
add
sahf
fwait
sbb
iret
mov
mov
div
push
dec
dec
sahf
push
pop
bound
sahf
and
xor
dec
jl
or
lea
inc
add
test
es
loop
imul
and
sti
pop
sub
movsl
js
inc
pop
pop
push
dec
cmp
shl
arpl
inc
jl
addr16
dec
or
inc
mov
cld
fnstsw
data16
in
stc
int3
xor
rcl
mov
scas
push
xchg
es
xchg
pop
addb
pop
push
jnp
sar
mov
sub
es
inc
inc
popa
loope
inc
jns
in
fimuls
adc
stc
jp
jge
xor
lods
scas
adc
mov
cmp
add
xchg
movsl
cwtl
xlat
jecxz
xor
xchg
sbb
inc
push
mov
std
icebp
notb
ds
pop
into
and
xorb
scas
pop
push
fidivrs
movsb
push
inc
adc
lods
cmc
push
fcoml
dec
mov
mov
xchg
sbb
cmp
sbb
jmp
cmpsl
lahf
lcall
xchg
std
loop
mov
sub
je
mov
in
cmp
out
pop
xchg
hlt
fcomp
pop
xor
add
mov
add
pop
mov
enter
sub
xlat
scas
xchg
or
int
mov
add
add
or
xchg
mov
std
lds
jno
jo
adc
ret
cmp
inc
test
cli
xchg
sbb
repnz
aas
popa
insw
xor
pop
sbbl
xor
ret
call
in
out
sahf
mov
mov
pop
jg
pushf
jnp
scas
scas
lods
inc
div
js
push
mov
push
inc
dec
xchg
cmp
jne
ds
loop
dec
jo
sbb
mov
sub
xor
or
cli
lea
or
int
repz
sub
sbb
inc
push
js
adc
std
and
sbb
mov
ja
test
sbb
or
fisttpl
inc
cmpsb
pop
ds
lods
xchg
jl
dec
mov
pusha
or
std
sbbb
cmp
sub
jne
cmpsl
call
ret
lods
mull
enter
repnz
sbb
jmp
push
sbb
dec
mov
xor
jle
mov
lahf
or
ja
insb
xor
mov
loop
push
dec
leave
dec
shlb
in
or
lods
stos
fiaddl
je
jecxz
mov
insl
xchg
mov
imul
stos
orl
out
mov
or
pop
xor
cmpsb
loopne
push
mov
inc
mov
mov
imul
inc
push
jp
mov
sub
pop
outsl
sbb
xchg
jmp
pop
outsl
cmp
add
icebp
push
xchg
mov
notb
cld
hlt
test
push
not
out
adc
repz
xor
jns
mov
stc
pop
jno
sbb
cwtl
movsl
rorb
mov
push
mov
jle
and
dec
js
movsl
mov
or
sbb
dec
or
ret
addr16
pop
pusha
push
mov
gs
adc
jnp
add
jne
mov
shrb
les
dec
out
mov
pop
jb
jp
cmp
dec
ret
add
sub
cmp
out
jno
xor
inc
ret
imul
push
push
lea
cli
lret
enter
pop
dec
jl
ljmp
icebp
mov
jnp
lret
out
std
jb
fildll
jb
shl
pop
and
or
xlat
int3
addr16
rclb
fidivrl
pop
jnp
sti
mov
sbb
lods
add
pop
mov
insl
sbb
loopne
lods
test
bound
or
jmp
lahf
lcall
fildll
xlat
add
or
mov
cmp
dec
adc
sti
jl
fld
and
adc
xchg
jno
sub
xor
stos
bound
cmp
jnp
add
fwait
loope
or
mov
adc
lcall
icebp
jnp
out
jecxz
jle
dec
pusha
xor
pop
xchg
int
addr16
ret
xchg
call
or
adc
and
mov
je
push
cltd
inc
sahf
cs
aad
xchg
cltd
sbb
cmp
pusha
jo
jbe
arpl
xor
inc
xchg
test
mov
cmp
jno
inc
xor
adc
dec
shrb
xchg
xchg
movsb
mov
rcrb
mov
xor
adc
mov
cmp
xchg
adc
cwtl
mov
lret
ficoml
test
das
out
fmulp
dec
dec
ficoml
aaa
test
sti
subb
imul
dec
imul
loope
mov
xchg
inc
decb
xchg
repnz
push
push
add
jp
sub
cld
adc
jmp
mov
push
pop
enter
and
lret
sub
arpl
xlat
push
outsb
es
dec
lcall
or
pop
xor
inc
mov
add
jo
fmull
sub
and
cmp
adc
pop
pop
ljmp
aas
cmp
sbb
mov
cltd
repz
xor
jnp
mov
ds
jb
jmp
popf
in
cwtl
aad
mov
iret
test
fstl
xlat
in
sahf
sbb
scas
adc
sbbl
fistpll
mov
mov
and
imul
vcvtss2si
mov
inc
lea
hlt
fwait
xor
mov
lds
inc
add
mov
cmp
lea
test
inc
cmp
mov
es
jl
dec
fadds
xchg
adc
xchg
hlt
sub
bound
xchg
cmpsb
out
adc
add
adc
adc
jo
sub
cmp
insb
mov
mov
push
adc
int
int3
std
sahf
xlat
data16
iret
push
lea
loop
mov
mov
std
test
out
rcl
popf
dec
stc
stc
and
sarl
fistpll
imul
push
mov
xchg
fsubrs
mov
mov
pop
xchg
sbb
shlb
mov
sbb
dec
mov
nop
jns
mov
push
sub
xchg
test
jne
mov
out
sub
movsb
mov
lret
jno
mov
mov
lahf
mov
mov
in
push
lret
or
decl
jns
jecxz
out
adc
dec
cs
loop
int
pop
mov
mov
jge
loopne
ja
xor
addr16
movsl
dec
test
pop
sub
inc
cmp
sub
pop
dec
loopne
inc
mov
pop
mov
push
push
idivb
out
mov
cmp
test
dec
test
dec
rclb
outsl
mov
scas
mov
cmp
dec
fistpll
mov
mov
js
push
ljmp
cmp
or
pop
or
sub
jns
stos
mov
pop
cld
or
mov
sbb
mov
xchg
in
cmp
mov
hlt
stos
add
xor
pop
push
test
pop
pop
loop
data16
push
addb
loop
push
adc
pop
mov
ljmp
fcoms
dec
rolb
int3
test
stos
inc
div
jle
inc
push
lock
cmpb
sti
enter
popf
jecxz
aaa
shl
lcall
dec
stos
mov
leave
xor
sub
jno
cwtl
cltd
fcmovnb
mov
fstl
pop
jne
enter
xchg
fld
sarb
and
pop
and
dec
xor
pop
jl
imul
pop
sbb
jb
jns
rcrb
shll
loopne
cltd
lods
into
push
in
fwait
cld
daa
jnp
mov
cld
mov
inc
scas
pop
jbe
scas
pop
inc
ret
pop
sub
loopne
data16
sahf
mov
xchg
cmp
ret
into
lds
psubd
add
wrmsr
mov
cmp
dec
dec
stc
pmaxsw
pop
push
and
aaa
fisttpll
imul
out
sub
pop
lret
xor
dec
in
fisttpl
mov
test
push
imul
mov
mov
or
dec
aas
jg
add
fwait
aad
imul
loop
jns
cltd
add
lock
lret
mov
int3
outsl
sti
pushf
lahf
sbb
fmuls
push
dec
sbb
lea
xchg
mov
movsb
mov
or
test
out
repnz
ljmp
mov
mov
movsb
sti
xchg
or
nop
mov
js
xor
in
mov
inc
outsb
push
add
lods
jecxz
lahf
xor
pop
arpl
jle
mov
jnp
sbb
mov
xchg
repz
das
add
jge
jmp
stos
out
push
adc
mov
push
lahf
xchg
inc
scas
aad
fsts
sbb
jmp
mov
push
xchg
mov
in
stos
push
stc
jnp
aas
mov
pop
cmp
int3
push
int
scas
lods
leave
and
cmpl
scas
mov
sbb
cmp
je
or
outsb
pop
push
or
aas
cld
push
mov
jecxz
out
xchg
fsubr
fsubrl
iret
or
push
icebp
xchg
outsl
mov
push
cld
push
outsl
repz
cltd
setae
push
ficoml
stos
push
lods
push
push
push
mov
and
adc
mov
test
pop
imul
mov
lods
ror
cld
pop
cvtps2pi
aad
iret
lock
pushf
lret
jle
out
mov
in
add
fidivs
sbb
scas
inc
mov
daa
cltd
pop
int3
cmp
nop
mov
xchg
daa
dec
incl
fadd
imul
not
sbb
sti
pop
xchg
add
arpl
scas
fisttpl
sbb
add
mov
cwtl
sbb
lds
outsb
out
stos
mov
addr16
adc
adc
jne
clc
sub
bound
dec
out
jb
cmp
fcoml
sub
mov
jl
pop
cli
xchg
pop
fstps
andl
dec
test
icebp
sub
lret
idivb
jb
jo
jno
insb
mov
dec
andl
scas
fs
int3
test
inc
pop
xchg
shrb
ja
or
pop
jo
jo
pop
aaa
inc
push
scas
cmp
inc
insb
popa
inc
test
push
mov
dec
adc
cmp
cwtl
fisttpl
adc
add
mov
pushf
push
aas
mov
sahf
pop
xchg
xchg
xor
mulb
push
cltd
jae
sbb
push
push
add
mov
cwtl
inc
jle
dec
in
cld
sub
adc
test
stos
es
pop
xor
sbb
adc
cs
xchg
shl
and
sub
rcr
test
mov
adc
shr
mov
enter
ret
cs
int
mov
push
idivl
sbb
lret
or
iret
cmp
or
dec
ss
cmp
jns
inc
ds
jns
pop
add
das
mov
dec
aaa
daa
lods
rclb
leave
sbb
mov
push
cmc
jmp
sbb
lcall
in
xchg
test
dec
and
sub
ss
xchg
je
scas
rol
cmp
aad
add
fdivrs
inc
jge
or
push
repz
ret
push
sub
push
cs
mov
or
fs
jp
sete
xor
jne
or
inc
pop
seta
lock
jb
mov
cmp
jnp
out
xorb
mov
movsb
sbb
sbb
aaa
jno
jno
outsl
jp
jbe
inc
ja
jp
or
sarl
scas
mov
inc
jg
jg
or
inc
and
dec
mov
ss
std
cmp
ljmp
push
loopne
jp
testb
and
add
test
mov
not
test
je
inc
aas
mov
gs
daa
aas
popfw
lock
inc
cmp
lock
pop
xchg
add
enter
lret
add
les
mov
or
insb
inc
and
mov
dec
loope
lods
aad
jmp
pop
push
jmp
outsl
jp
repnz
or
inc
or
idivl
in
or
mov
dec
jne
mov
lea
shrb
and
mov
add
pop
cmpsl
pop
xor
sarb
jo
add
jne
sbb
pop
fisubrs
pop
or
inc
std
hlt
in
addl
scas
xchg
insl
movsl
or
xchg
push
movsb
xor
and
mov
inc
loopne
out
lods
or
mov
sbb
fcom
xlat
jnp
mov
test
mov
test
fldenv
pop
xor
fsubs
mov
sub
leave
mov
or
aam
das
mov
cld
rclb
out
inc
mov
pop
movsb
stos
add
std
add
icebp
outsl
jnp
inc
js
adcb
or
inc
or
adc
push
inc
shlb
out
xchg
lahf
stc
loopne
test
mov
in
call
lret
test
andb
test
xor
jbe
xchg
lods
pop
dec
mov
push
aas
mov
es
rol
movsl
mov
scas
stc
lds
dec
cmc
fbstp
scas
mov
inc
lcall
pop
js
or
mov
push
je
jbe
jae
dec
pop
dec
and
repz
stos
adc
fldlg2
jg
mov
mov
lds
and
fistpl
loop
in
sbbb
add
popf
lea
pop
ret
fstpl
jl
adc
popf
jp
fcomps
mov
push
add
adcl
data16
mov
pusha
nop
adc
lods
push
repnz
jo
push
mov
sbb
les
cmp
sbb
test
sahf
inc
test
push
sahf
mov
mov
push
xchg
mov
jp
inc
mov
lcall
sarl
xchg
mov
or
pusha
bound
aas
in
adc
sbb
pop
loop
sub
bound
dec
inc
lea
xchg
out
xchg
xchg
int3
jge
rclb
mov
std
int3
fisttps
adc
sbb
pushl
cmpsl
rcrb
and
setge
mov
xor
sbb
dec
aas
ljmp
mov
or
xor
fsubl
xor
stos
in
popf
aaa
or
dec
loop
aaa
into
adc
cmp
or
jl
pop
push
in
pop
mov
stos
xchg
fsubrl
movsl
adc
cmp
jb
push
mov
sub
mov
or
loop
xor
sub
xchg
dec
and
filds
mov
push
les
mov
shll
add
ja
pop
addr16
jb
sbb
push
insb
mov
cmpb
das
clc
cltd
cmp
pop
push
xchg
mov
fs
sarb
loope
xlat
mov
xchg
cmc
push
lds
mov
pop
aaa
imul
in
sub
shll
lods
insb
aad
inc
sbb
xchg
mov
jno
jecxz
jmp
add
cltd
jl
in
dec
jge
dec
xchg
in
daa
in
push
cmp
icebp
pop
and
popa
ret
and
ret
ret
xor
xor
cmp
inc
idivb
or
test
mov
stos
mov
js
xchg
xorl
and
push
popa
xchg
cmp
movsb
xor
jbe
lock
push
int
std
xor
in
test
inc
pop
fwait
mov
adc
repnz
into
jbe
adc
cmp
jl
fcompl
loopne
push
mov
clc
sbb
or
ja
rcr
dec
jae
jne
int
dec
jp
mov
mov
out
mov
xchg
int3
ds
sti
sbb
mov
add
cld
mov
hlt
push
mov
inc
mov
mov
dec
outsl
xchg
test
stos
roll
dec
in
add
fldcw
aad
repz
jb
rclb
sbb
int
pop
mov
inc
icebp
xchg
mov
dec
addr16
fwait
push
mov
xor
test
xor
lret
push
jnp
sbb
idivl
loope
rorl
mov
filds
adcb
ret
fsubl
scas
into
mov
jge,pt
loop
push
sub
inc
frstor
mov
mov
ret
lret
cmovl
cmpl
ret
jecxz
stc
dec
or
sahf
xor
popf
arpl
lahf
mov
gs
sub
sbb
out
movzbl
daa
out
dec
in
lods
cmp
or
inc
push
das
out
sarb
fcmovnbe
ljmp
xchg
jns
pushf
outsl
inc
pop
mov
dec
ja
in
rcll
cwtl
pop
sbb
xor
cmp
jle
push
aaa
add
mov
sti
xchg
rolb
test
les
mov
jb
lods
inc
jb
lods
cli
xor
push
out
cltd
out
adc
in
jns
ja
hlt
pushf
push
mov
xchg
ret
inc
lret
sub
jmp
mov
test
sarb
xor
cmpsl
cld
pop
outsb
dec
lahf
mov
dec
xchg
mov
out
push
pop
pop
sbb
jmp
jns
sbb
lahf
sub
cmp
out
dec
inc
leave
inc
movsb
mov
fwait
inc
pop
pop
nopl
aam
fwait
push
sti
lahf
cs
or
mov
fsubp
popf
jle
std
mov
mov
inc
scas
jne
sbb
adc
jle
adc
inc
jge
sbbb
sbb
popf
ret
lret
insb
lds
std
or
inc
and
pop
xchg
mov
lock
xor
jle
fistpl
cld
int3
xorb
mov
push
subl
push
test
push
cmp
jmp
xchg
sbb
jmp
sub
xor
dec
jb
dec
adc
int
jmp
sbb
cld
mov
stos
sarl
mov
arpl
jo
add
mov
js
cmc
push
sbb
cmp
dec
out
shl
inc
push
sub
loopne
cmp
jno
popa
lret
lcall
sub
xor
ljmp
aas
xchg
out
pop
push
push
out
mov
mov
xor
cmpsb
mov
add
pop
xchg
inc
test
sub
test
mov
in
addr16
push
push
add
mov
lds
cmp
pop
inc
adc
push
jp
mov
sbb
les
rcr
sub
dec
mov
ja
dec
ret
mov
cmp
idivb
mov
dec
xchg
xchg
cmp
pop
mov
shrl
pop
nop
leave
data16
mov
shrb
stc
insb
out
cli
bnd
pop
or
jno
rclb
iret
and
and
roll
repnz
xchg
mov
pop
out
dec
aam
mov
les
ljmp
push
adc
in
xchg
inc
mov
rolb
leave
and
or
into
addr16
xchg
out
lcall
and
jl
push
adc
adc
iret
enter
jmp
add
and
insl
and
movsl
inc
outsb
pop
shl
cmpsb
fstpt
mov
mov
xchg
push
pop
jbe
in
call
or
push
dec
dec
mov
xchg
and
jmp
mov
outsl
or
lock
cmp
std
sbb
jle
sbbb
lcall
popl
fsubp
cmp
mov
lock
inc
hlt
pusha
jne
push
lahf
jg
jno
mov
xor
js
adc
icebp
sbb
fistpl
sbb
inc
mov
mov
mov
xchg
jecxz
fidivrl
or
and
xor
mov
sub
movsb
adcl
mov
push
sub
jnp
xlat
push
mov
and
mov
int
mov
jmp
pop
sahf
fsub
in
and
push
out
fsts
jne
adc
sti
sub
out
mov
or
jmp
fucom
mov
in
arpl
xchg
cs
push
sub
int
ljmp
adc
and
dec
xchg
sub
mov
adc
sbb
jl
out
test
loop
sbbb
cmp
inc
and
dec
ja
insb
push
jns
adc
push
fsubp
mov
mov
pop
lret
and
jb
lret
jb
sub
jge
xchg
popa
fildll
loopne
sahf
fsubrp
fisubrl
cltd
cltd
rol
jnp
push
mov
mov
jmp
push
das
shlb
sbb
xor
loopne
insl
mov
repz
inc
xor
fs
mov
fcoms
mov
inc
stos
mov
and
lds
ja
iret
mov
sbb
sub
sub
cli
outsb
and
dec
mov
scas
adc
push
lcall
or
pushf
lahf
fcoml
mov
test
xchg
inc
or
imul
xor
pop
jl
mov
loop
addr16
outsl
in
jae
pop
mov
je
push
and
pop
pop
int3
jne
into
lods
out
movsl
in
int3
pop
out
ljmp
sub
loop
into
sahf
addr16
sub
mov
add
dec
mov
outsb
addr16
xor
imul
mov
mov
sub
mov
fmul
pop
jne
push
int3
cmp
or
cmpsl
mov
or
inc
mov
movsl
xchg
or
insb
pusha
adc
daa
ja
popf
lret
lods
int
es
pop
or
dec
sbb
add
addr16
hlt
jl
ljmp
ret
aam
xchg
pop
adc
orl
push
push
mov
scas
ret
repnz
shlb
dec
cli
cmc
ds
gs
jmp
in
sbb
xor
and
ds
jmp
sub
insb
mov
mov
ss
sub
mov
int
push
std
mov
jne
int3
das
int
push
shlb
shll
test
nop
in
pusha
lret
jp
lds
ror
lods
or
jne
in
xchg
jge
jmp
sbb
stc
jbe
test
out
mov
dec
adc
add
lcall
cmp
in
jle
loopne
push
mov
jns
mov
xor
jae
call
in
xchg
test
jns
in
mov
test
mov
xchg
sub
lret
cmp
mov
scas
jg
jo
popf
je
out
lods
fimuls
cmpl
aas
sub
xchg
and
or
cmpsb
jnp
add
pop
fstps
cmp
xchg
adc
repnz
push
cmp
and
mov
popf
cmp
or
pop
repnz
push
xchg
add
cmp
loop
push
push
test
add
ja
and
push
xchg
mov
shll
push
xor
mov
mov
lea
pop
adc
mov
pop
subl
stos
aam
pop
popf
xchg
push
aas
daa
xor
jl
cli
shr
shrl
frstor
pop
xchg
out
push
mov
push
leave
xor
aad
int
xchg
xor
cltd
addl
lret
xchg
jns
push
fwait
in
dec
lret
fadds
fldt
jecxz
jl
adc
movsb
jmp
push
gs
jb
clc
jnp
cmp
sub
mov
faddl
xchg
lret
xchg
dec
roll
test
xchg
cmc
fbstp
push
pop
mov
out
and
aas
subb
pop
push
inc
lock
xchg
imul
mov
xor
lcall
js
inc
scas
aam
inc
out
das
out
mov
imull
shr
pop
jge
push
or
add
pop
mov
cltd
sarl
test
bound
test
fistps
pop
pop
mov
pop
jecxz
pop
mov
ficomps
mov
jl
add
movsl
push
sub
lret
jb
inc
insl
adc
xchg
sar
mov
xor
lock
mov
jmp
in
mov
add
clc
jle
lahf
push
lahf
popf
shrb
movsb
push
dec
sub
testl
addr16
mov
loop
mov
dec
cmp
mov
test
fdivs
cmp
enter
lcall
int
xor
test
and
cwtl
outsl
dec
aaa
lret
mov
mov
add
push
jae
movsb
ret
mov
mov
cmp
jg
ja
ficoms
notl
in
sbb
mov
mov
lcall
jp
inc
aam
sub
or
cmpsl
jae
outsb
xor
adc
dec
mov
sub
leave
ret
fsubr
in
js
dec
nop
jns
divl
xchg
cli
mov
mov
loop
cmp
ret
repz
hlt
jb
clc
in
shr
cmp
sbb
dec
sub
fldenv
mov
rcrl
jecxz
test
mov
mov
jnp
xor
in
adc
lahf
pop
push
stos
jae
mov
nop
xor
lods
add
out
popa
jae
cmovo
add
rcll
push
clc
sbb
sub
arpl
sub
ljmp
ret
xchg
sub
cmp
pop
rcrl
movsb
pop
sub
in
subb
pop
jl
in
jge
ds
xchg
test
mov
test
jno
ret
out
rorb
xor
lret
leave
or
testl
or
rcll
fstl
gs
repz
dec
out
jge
jnp
ljmp
scas
ret
adc
mov
scas
je
call
pop
in
xchg
lcall
mov
push
xor
fcomps
push
cld
and
lret
fadds
mov
cltd
fwait
mov
mov
pop
inc
scas
out
push
and
jae
leave
loopne
inc
push
mov
hlt
ja
bound
xchg
pop
lea
add
imul
fisubrs
sbb
ja
loop
and
mov
incb
addr16
lds
adc
out
jns
sbbb
add
mov
fisubl
mov
addr16
ljmp
punpckldq
mov
cltd
fcmovbe
add
scas
mov
cwtl
ds
mov
dec
daa
and
sub
push
pop
mov
dec
jne
cmp
negl
ljmp
arpl
jb
adc
push
mov
ds
push
sbb
push
inc
subb
ljmp
mov
imul
mov
mov
nop
lods
mov
popf
adc
and
dec
xchg
leave
or
test
cld
pop
push
ficoml
push
xchg
pop
das
clc
lret
shll
mov
es
push
sbb
fsubrp
mov
dec
jecxz
in
jmp
sbb
jb
popl
stos
push
dec
jle
and
xchg
mov
mov
cmp
sub
xchg
or
dec
clc
idiv
dec
inc
pop
mov
imul
movsb
or
hlt
lock
push
scas
mov
inc
lods
addr16
xchg
cmp
mov
pop
aas
push
loopne
mov
outsl
in
push
jmp
adc
test
sbb
or
mov
push
orb
cmp
in
inc
dec
aaa
sub
push
push
inc
int3
or
jecxz
iret
dec
jmp
and
test
out
add
jecxz
inc
jl
repnz
cmp
adc
cmp
jmp
clc
sub
jae
cld
sbb
rol
push
outsl
cmp
or
push
adc
cmp
and
jno
ffree
fdivs
xor
sbb
inc
dec
sahf
adc
lds
adc
dec
adc
pop
cmpsl
das
sub
dec
xchg
inc
lret
sub
fs
mov
xor
notb
in
lock
cmc
call
mov
push
ss
dec
loop
fsubr
addr16
push
mov
in
out
dec
roll
js
out
mov
xchg
aaa
sub
jle
out
mov
sbb
push
cwtl
inc
lahf
fisubrs
inc
jb
push
mov
jle
pushf
mov
and
sub
mov
lods
mov
mov
and
pusha
mov
and
adc
xchg
bound
lock
jnp
stc
repz
mov
push
das
push
out
test
and
nop
push
sbb
add
or
dec
add
pusha
cli
pop
add
adc
fdivrl
arpl
jmp
sub
int3
arpl
sahf
mov
cmp
arpl
outsb
jne
push
std
and
shlb
cld
xor
clc
xor
mov
andb
push
neg
repz
push
push
mov
repz
scas
es
in
sub
sbb
mov
and
mov
sbb
dec
cmp
ror
mov
adc
mov
sbb
lea
push
insb
sbb
dec
out
mov
sbb
xor
push
inc
rolb
into
test
je
sbb
js
jae
lods
xor
xchg
dec
sahf
and
sti
cmpsl
stos
in
mov
push
mov
test
jb
adc
cmp
adc
push
xor
hlt
nop
pusha
outsb
sub
dec
daa
pop
mov
in
sub
cwtl
lret
lret
pop
imul
mov
out
popf
in
mov
outsl
fdivrl
or
mov
cmpsb
pop
xor
aam
fstl
int
and
lahf
adc
and
popa
in
js
add
idivl
mov
mov
cmp
push
mov
cmc
push
cmp
aad
fsubl
mov
in
cmpsl
mov
inc
jns
fmull
scas
movsl
push
stos
leave
pop
fdivs
popf
cmpsl
in
pop
jns
and
inc
dec
adc
mov
push
cld
pop
or
sub
in
lret
rcr
outsl
fildll
jns
sbbb
stos
xor
jne
cmpb
hlt
jp
jb
stos
test
fwait
or
sahf
mov
sub
out
test
arpl
push
mov
pop
jo
inc
add
dec
mov
jo
xchg
xchg
mov
aad
fs
mov
add
cmp
scas
sahf
rorl
sbb
arpl
ljmp
xchg
insl
xor
imul
xchg
sub
ror
pop
xchg
fucomi
bound
lds
ret
stc
fs
inc
push
or
sub
icebp
int3
in
in
inc
mov
fistl
out
dec
rolb
dec
pop
stos
pusha
fiadds
cli
popa
mov
mov
sub
int
popa
leave
jmp
inc
pop
mov
call
out
mov
sub
and
ficompl
shll
jnp
mov
jns
cltd
push
sub
not
and
fildll
xchg
mov
mov
aas
js
iret
inc
mov
test
flds
repnz
jg
dec
fxch
divl
popl
xchg
dec
pop
test
dec
int
pusha
inc
or
xchg
pop
out
inc
cli
push
out
mov
sbb
jnp
outsl
ret
loop
fldl
hlt
imul
pop
adc
jg
inc
daa
sub
insl
ret
adc
into
stc
in
int
out
ret
push
and
mov
enter
stos
dec
repz
push
inc
adc
pushf
jl
data16
push
xlat
sbb
fs
movsb
pop
cmpsb
xor
sub
jmp
push
lods
sub
add
cmp
mov
hlt
or
test
test
mov
mov
clc
jns
mov
mov
jg
jg
loopne
out
repz
pop
loop
fdivrl
aam
mov
outsl
cli
adc
out
xchg
mov
gs
dec
les
jbe
cs
pop
or
addr16
divb
in
mov
mov
mov
jg
in
or
pop
addb
inc
cmp
je
push
or
andb
idivb
dec
dec
rcrl
test
nop
mov
mov
stos
add
mov
sbb
pusha
out
adc
pushf
xor
jbe
dec
aas
out
sbb
fdivr
imul
lea
ret
mov
adc
push
lea
dec
test
scas
insl
or
in
mov
pop
ja
or
or
xchg
cmp
fldl
mov
push
imul
push
dec
inc
inc
cs
mov
jp
adc
dec
xchg
nop
and
cli
adc
jo
fdivs
popl
stc
adc
cld
sub
aaa
dec
lret
sti
je
xor
and
mov
jecxz
dec
cmp
xchg
dec
enter
icebp
jl
xor
jecxz
aad
int
mov
gs
xchg
adc
out
fistl
insl
inc
jno
xor
or
jecxz
popa
jns
mov
sub
jmp
jbe
popa
insl
int
loope
cwtl
lds
fnsave
jbe
in
ljmp
or
dec
pop
loop
leave
icebp
push
pop
mov
roll
mov
pushf
lcall
push
enter
push
lock
lock
shll
pop
outsl
xor
icebp
xlat
inc
in
shll
mull
imul
xchg
xor
stos
xlat
or
or
adc
lahf
mov
mov
aas
sub
push
popf
fsubs
cmp
cwtl
and
xor
popa
sub
ja
addr16
cmpsb
fs
jp
push
lret
in
jmp
and
and
into
lods
xchg
inc
aas
mov
pop
mov
mov
xor
sub
hlt
dec
dec
pop
push
xchg
mov
cmp
fcomp
lcall
add
jecxz
in
cmp
mov
jae
mov
cmpsb
int
add
sub
mov
mov
cli
dec
imul
cmp
cs
cmp
int3
mov
stc
pusha
jno
add
lret
loop
frstor
or
pusha
or
jl
stos
add
mov
or
aas
pop
jnp
mov
js
jecxz
inc
push
inc
je
sub
jp
mov
add
jnp
mov
loopne
adc
add
mov
dec
addr16
leave
sti
sub
add
rcrl
or
push
stos
mov
cmp
and
incl
lods
aaa
sub
dec
cmpsb
jle
out
pop
fimull
leave
dec
outsb
mov
call
dec
jg
or
dec
in
xlat
pop
dec
adc
daa
sub
arpl
lret
fisubrs
cmpsl
mov
lcall
xchg
jns
adc
mov
pop
dec
or
andb
mov
jnp
mov
xchg
or
scas
mov
dec
sbb
fdivl
fldl
xchg
mov
test
mov
jne
xchg
cltd
loopne
xor
push
fwait
jbe
lods
pop
shlb
jle
mov
insl
enter
mov
sbb
and
push
loop
mov
test
sub
int3
sub
lret
popa
inc
rolb
pop
fs
dec
in
adc
dec
cmp
and
sahf
sbb
adc
cli
loope
jge
stc
imull
dec
sbbl
dec
insl
pop
in
in
push
call
adc
orl
dec
cmpsl
mov
jb
mov
mov
shl
fmul
mov
fwait
lods
inc
xor
or
mov
xchg
mov
push
ret
aaa
in
shrl
jae
cmp
shrb
call
out
push
mov
movsb
jge
cwtl
subb
les
dec
lock
sub
adc
ret
push
cwtl
adc
lahf
sbb
bound
jmp
xchg
es
mov
adc
data16
inc
xchg
fcomp
incl
and
mov
je
cltd
or
sbbb
mov
mov
jbe
push
pusha
pop
push
clc
cmp
dec
push
mov
mov
cld
mov
sub
aad
mov
pop
ljmp
mov
adc
shrl
out
xor
jne
movsl
push
mov
adc
mov
sbbb
stos
cmp
fwait
loope
jge
cmpsl
lock
cmp
jne
lahf
loope
outsl
enter
adc
dec
vcvtdq2pd
cmpsl
and
popa
loopne
or
inc
mov
scas
cmp
idivl
cwtl
add
mov
jb
movsl
pop
inc
push
mov
pop
aas
pop
xor
sub
sub
sub
pmulhuw
or
insb
add
cmpsb
pop
loopne
ret
push
sub
lods
js
cli
push
jl
bound
int3
sbb
add
mov
cmp
daa
cwtl
out
test
xor
mov
in
in
cltd
jg
cmp
mov
inc
sub
mov
sarl
sbbb
mov
and
dec
sub
int
add
or
lret
add
scas
mov
and
pop
jbe,pn
adc
std
lcall
dec
xchg
inc
rolb
movsl
push
outsb
pop
lcall
or
orl
test
stc
test
les
add
mov
repz
rorl
jae
mov
push
das
inc
mov
or
mov
jae
pop
out
push
fbstp
jne
insb
jp
xchg
in
push
inc
adc
mov
jge
push
fdivrs
adc
test
scas
int3
int3
mov
pop
in
lret
xchg
mov
movb
movsb
dec
lea
adc
sbb
icebp
or
lods
push
mov
push
mov
scas
out
ljmp
enter
pop
popa
pop
inc
je
dec
add
push
out
or
jb,pt
scas
into
lcall
sub
ljmp
cmp
lods
and
pop
cmp
repz
cmpb
cmp
sub
mov
pop
lcall
mov
or
mov
xor
int3
insb
pop
fsubrl
in
cmp
pusha
lret
xor
jmp
mov
scas
call
pop
adc
xchg
pop
xor
test
adc
adc
repnz
add
pop
or
sub
mov
fmull
ret
scas
aam
cmpsl
jae
in
push
les
inc
lods
into
jmp
sub
cli
adcb
lods
xchg
shr
loop
sub
mov
ror
mov
xor
inc
test
sub
out
inc
not
shl
dec
xor
pop
data16
jo
aas
mov
fs
jno
or
call
in
push
int
scas
loop
or
sbb
or
mov
sbbl
inc
loopne
sbb
test
inc
hlt
mov
mov
jg
lcall
add
fwait
mov
inc
mov
mov
push
nop
add
scas
push
jo
das
and
pop
in
cmpsb
xchg
xor
shrb
xor
rclb
scas
test
fbld
out
jg
lock
push
pushf
add
jg
cmp
push
movsb
pop
mov
out
iret
leave
push
xor
out
xor
lcall
aaa
inc
and
and
push
enter
xlat
clc
pusha
pop
enter
out
repz
into
insl
aaa
sahf
scas
xchg
dec
mov
sahf
out
imul
call
sbb
xor
inc
mov
inc
fsubrl
ss
cli
mov
pusha
add
pop
aas
mov
inc
lret
arpl
and
in
jl
sub
dec
xor
cmp
mov
or
test
lret
dec
xor
push
scas
js
jo
and
pop
mov
aas
xchg
and
adc
or
cmp
repz
scas
sub
movsb
iret
dec
stc
xchg
jns
dec
mov
out
rcrl
rcr
ss
push
pop
fildl
fiaddl
int
lods
xchg
jge
nop
leave
sbb
movsl
je
mov
and
mov
cld
dec
push
or
adc
fwait
sbb
push
mov
in
addb
adc
inc
mov
lcall
lods
insl
je
ds
mov
mov
enter
inc
mov
les
jmp
dec
lret
adc
insb
lea
mov
stc
cmp
jae
add
popa
mov
jnp
aam
mov
bound
push
movsl
loop
sub
lahf
scas
push
stos
out
and
rclb
lret
cmp
sub
and
add
daa
insb
inc
mov
fnstenv
pop
aad
mov
cmp
inc
push
jae
stc
decb
je
dec
sub
or
outsb
adc
xchg
mov
or
adc
in
mov
pushf
sub
jbe
push
pop
push
les
push
jle
adc
out
dec
xchg
mov
stc
sub
push
movsb
les
jmp
add
push
lock
fistpl
aam
ret
lcall
aam
sbbl
xor
sub
in
mov
lds
nop
xor
add
push
bound
dec
pushf
sbb
or
sbb
push
or
dec
mov
pop
aas
adc
sbb
sti
mov
adc
les
insb
cmc
sub
popf
add
shlb
add
push
aas
jl
lods
sub
dec
push
fst
mov
subl
scas
pop
mov
notb
lret
xchg
mov
jne
sti
pop
cltd
add
sub
cmpsl
cwtl
jb
pop
or
sarb
movsb
lock
xor
clc
dec
xchg
enter
adcb
xchg
lret
sub
test
cmc
out
rcrl
arpl
adc
faddl
push
adc
cmp
mov
sbb
xor
jns
xor
and
cmp
loop
sbb
inc
jbe
mov
stos
loop
dec
movsl
xchg
and
push
adc
mov
outsl
push
frstor
push
dec
pusha
loop
add
jecxz
jae
xor
push
push
and
sbb
jmp
nop
adc
and
pop
out
or
rolb
or
jge
ds
imul
inc
out
inc
push
xabort
mov
into
inc
js
adc
inc
or
data16
mov
rcr
add
rcl
mov
out
and
stos
in
push
sbb
fabs
lods
adc
and
iret
icebp
clc
fistpll
mov
sub
aas
inc
push
out
sbb
push
shll
xchg
jle
mov
xchg
mov
outsb
fdivrs
dec
add
adcl
jecxz
js
add
int
icebp
dec
das
notb
lds
xchg
pop
cmp
fildl
push
stc
dec
xor
lret
sub
andl
dec
leave
jo
movsl
shrl
addr16
push
inc
dec
into
xchg
fcomps
loope
sarl
adc
pop
mov
cltd
cwtl
pop
test
or
mov
fcmovne
push
ret
push
cltd
in
inc
stc
inc
pop
dec
push
mov
stos
add
xchg
lret
jnp
lods
push
push
push
gs
or
xchg
test
fwait
scas
data16
nop
jg
jmp
vdivps
sbb
dec
fisubs
or
movsb
lock
cwtl
inc
or
ljmp
sahf
xor
test
jo
push
outsb
sub
clc
jne
test
es
jns,pn
push
mov
popf
sub
inc
inc
ljmp
mov
mov
sbb
mov
gs
xchg
xlat
mov
pop
push
mov
mov
push
pushf
stc
dec
sbb
xchg
mov
push
and
pop
loop
rclb
cltd
jb
fstpl
sbb
popf
inc
movsb
pusha
pop
test
nop
leave
inc
mov
stos
cltd
xchg
lock
movsb
scas
xor
cli
push
mov
pop
jg
dec
push
dec
mov
xchg
add
mov
stos
das
int
jne
pop
in
shrl
push
mov
xlat
add
out
pop
dec
pop
cli
js
scas
arpl
mov
or
lea
dec
aas
dec
mov
test
jbe
and
cli
xor
sahf
ret
sbb
cltd
int3
clc
cmp
sub
scas
cmp
mov
inc
cmpsb
leave
ja
in
dec
mov
outsb
and
adc
push
mov
inc
xchg
out
sbb
push
xchg
jl
mov
out
add
dec
jo
out
cmpsb
lret
loope
inc
std
insb
adc
insb
sti
push
adc
scas
xor
scas
sub
popf
add
fstpt
enter
es
mov
lods
ret
scas
popa
mov
xchg
or
add
call
clc
and
movl
adc
bound
adc
jmp
push
and
sbb
inc
loop
inc
cmp
fiadds
push
aaa
repz
stos
and
ficomps
jge
loope
ds
jecxz
dec
call
enter
testb
cltd
mov
sub
xchg
pop
ja
lcall
mov
hlt
shrb
sub
dec
xchg
dec
les
push
or
pop
pop
mov
pop
mov
pop
inc
das
push
mov
insl
je
xor
xor
imulb
push
push
fs
cmpsb
add
add
enter
inc
sbb
cwtl
test
inc
inc
dec
xchg
dec
cmp
mov
cs
imulb
jg
sub
aad
fmull
add
sbbb
sahf
mov
in
sub
mov
clc
scas
arpl
xlat
inc
fdivrl
adc
cmp
mov
dec
hlt
pop
sub
popf
ja
aaa
xchg
mov
mov
mov
cs
mov
scas
push
xchg
mov
lret
fimull
and
cmp
adc
jl
les
fs
sahf
pop
ja
mov
imul
jle
cmpsb
cmpsb
and
jmp
fistps
loop
stos
xchg
ss
in
cmp
vpsllq
jo
push
inc
mov
pop
cmpsl
mov
bound
aas
je
fdivr
scas
xor
pop
or
in
rcrl
dec
add
mov
in
shrb
push
dec
cmp
inc
dec
push
daa
pop
ret
add
clc
lret
ss
out
sahf
or
stos
or
inc
lret
sarb
hlt
fnstenv
jae
lret
popf
notl
stos
push
out
das
sub
pop
jl
iret
jmp
gs
mov
jne
imul
daa
mov
dec
enter
cmp
rcll
popa
in
lods
fmulp
inc
jg
jle
aas
push
loop
jmp
nop
fcmove
mov
sub
daa
pop
divps
aam
in
dec
mov
xchg
dec
push
jle
jge
jae
xor
sti
outsb
push
jge
fs
aad
cmc
add
jmp
lret
popa
arpl
ljmp
adc
dec
test
sbb
adc
adc
jae
inc
dec
negb
aaa
mov
dec
cltd
jle
aad
adc
repz
cli
out
or
insb
lcall
xchg
cltd
or
scas
mov
pop
arpl
inc
adc
mov
xchg
mov
das
xchg
repnz
lock
dec
cmp
jno
aas
adcb
lcall
dec
iret
push
jns
pop
idivb
pop
out
aad
addr16
cwtl
mov
in
ret
lret
pop
mov
in
fstpl
xchg
mov
cld
test
faddl
popf
jle
in
mov
movsl
iret
lea
sbb
inc
cmp
inc
aam
dec
sbb
test
or
mov
push
cmpsb
sbb
jmp
sbb
push
pop
pop
ljmp
orb
and
movsb
inc
sub
jmp
adc
mov
ljmp
or
fwait
es
xlat
xchg
dec
inc
ret
jmp
jp
std
or
stos
fucom
aam
push
sbb
icebp
loopne
aaa
stc
icebp
add
jle
cmpsb
cwtl
jge
cli
dec
fadds
xor
es
mov
xor
loope
push
int
jno
inc
jge
call
sub
pop
test
xchg
dec
adcb
sahf
icebp
into
or
aad
sbb
insb
mov
cs
jne
add
ja
adc
push
je
xchg
je
push
xor
aam
imul
sbb
adc
jmp
xchg
cmp
mov
rorl
fldl
add
scas
pusha
loope
cs
mov
sbb
aad
xor
mov
orb
adc
xor
push
pop
xor
sub
out
in
shl
and
je
pushf
lahf
lret
fidivs
stos
adc
fmull
jecxz
sbb
xchg
inc
popl
or
test
jne
test
or
into
sti
and
stos
rcrb
or
ret
insb
dec
inc
lret
cs
sbb
or
std
test
cli
nop
or
adc
push
pop
imul
jl
movsb
sbb
and
mov
xchg
incb
pop
insb
jne
repnz
sbb
mov
bswap
dec
mov
or
inc
andl
pop
sbb
insl
lret
adc
inc
adc
dec
sub
adc
por
xchg
sub
daa
imul
jl
rol
setnp
jae
lcall
sbb
and
pop
xchg
push
jl
push
stc
arpl
mov
ds
sub
and
and
adc
xchg
jnp
popf
sbb
push
mov
mov
movsl
in
sahf
aas
xchg
ficoms
inc
cld
or
push
aaa
or
aas
cmp
insb
ss
xor
loopne
and
js
jns
xor
sbb
push
pop
orl
pop
adc
adc
add
mov
mov
lret
outsl
jbe
add
mov
jl
mov
fisttps
pop
xchg
sbb
lahf
out
mov
pop
testb
stos
dec
dec
mov
jb
xor
sbbb
push
aaa
inc
sub
cmp
xor
sub
push
mov
out
xchg
push
xor
loop
push
cmp
adc
add
sahf
fs
dec
js
pusha
sub
mov
in
xchg
jbe
data16
cmp
mov
in
jmp
popf
mov
pop
scas
repz
push
aad
cmc
push
out
fildl
sbbb
mov
lret
dec
addr16
and
nop
jp
mov
fisttpll
mov
ret
test
mov
stos
cmpsb
inc
lds
pop
or
push
xchg
sub
pop
out
cld
fcmovnu
mov
sbb
sbb
ja
xchg
in
clc
mov
xor
jp
popa
fildll
ljmp
pop
fiadds
xchg
mov
mov
push
lods
pop
rorl
cmpsb
mov
mov
cmc
xchg
sub
cmp
mov
pusha
adc
push
mov
and
movsb
ret
dec
pop
cmc
jecxz
jp
inc
je
or
xor
icebp
push
icebp
mov
fistps
and
mov
dec
or
add
aaa
scas
call
pop
xchg
ret
dec
in
cmp
jge
xor
bound
push
add
and
or
int3
dec
outsl
popf
mov
je
sbb
mov
adc
mov
and
add
xor
leave
jle
add
pop
push
xchg
dec
jne
push
cwtl
and
scas
cltd
push
mov
xchg
mov
lds
fsubrp
lahf
test
xor
in
jecxz
test
mov
mov
shll
lahf
les
mov
lods
cmp
mov
push
jl
daa
in
push
out
add
jne
andl
jecxz
or
push
call
add
lahf
test
pop
adc
adc
icebp
in
add
ss
int
call
mov
in
cmpsb
dec
lods
lds
sar
push
into
or
ds
into
mov
add
jo
push
pop
fs
xchg
add
push
pop
loope
xor
testb
test
test
in
clc
push
mov
mov
popa
shrb
push
hlt
add
dec
stos
mov
stc
xchg
jp
in
inc
ror
sbb
inc
sahf
notb
adcl
sarl
les
xchg
pop
xorps
adc
push
mov
sahf
sbb
jp
aas
addr16
inc
xor
jl
jecxz
cmp
sbb
lods
and
imul
jb,pt
jmp
andl
jb
dec
aam
fcompl
into
mov
sub
cld
aad
gs
lea
xchg
pop
leave
push
adc
mov
sbb
and
add
sub
cli
in
and
dec
bnd
mov
lret
test
sbb
fs
stc
cltd
mov
xor
mov
fcomps
icebp
push
push
mov
push
mov
adc
outsl
inc
jp
or
cmovae
push
les
dec
inc
cmpsb
sub
add
jne
cmp
outsl
aaa
cmp
mov
mov
sbbl
lods
pop
pop
es
nop
mov
mov
pop
mov
imul
xor
xchg
clc
pop
cwtl
pusha
enter
push
out
adc
stos
les
or
imul
out
mov
xchg
pop
pop
pop
subb
repnz
mov
stos
call
out
in
in
lock
mov
cmp
into
out
mov
pop
pop
pop
xlat
stos
stos
pop
adc
sub
inc
pushf
jbe
cs
jp
xor
mov
and
dec
fwait
dec
js
inc
sub
xchg
dec
cltd
lcall
mov
test
cs
lock
mov
int
or
out
ret
lret
dec
daa
das
addl
dec
jo
orl
lcall
or
lock
lods
xchg
mov
in
lea
sub
xor
call
mov
cmp
sbb
fldl
mov
sbbb
insl
mov
js
mov
jge
mov
adc
sub
clc
rcll
dec
insl
or
clc
and
sub
lock
je
arpl
ret
inc
sbb
mov
add
pop
dec
xchg
in
daa
in
movsl
cmpsb
cld
sub
push
xchg
lret
ficompl
xchg
pop
fs
stos
push
lds
adcl
neg
inc
popa
mov
xor
addr16
les
pop
xchg
scas
ljmp
jb
mov
dec
testl
mov
lret
jns
push
lods
add
call
fwait
movsb
jb
and
adc
pop
sahf
pop
bound
adc
jns
jge
in
les
mov
dec
mov
ficoms
sbb
dec
pop
push
cmpsb
sbb
mov
adc
jae
mov
adc
cmp
ja
sbb
pop
test
out
test
shrl
into
std
mov
mov
mov
iret
sub
pop
leave
push
push
insl
adc
loopne
cmp
mov
push
jnp
shlb
cld
mov
mov
pop
mov
pushf
les
lret
dec
fs
add
xchg
add
fcmovu
mov
imul
cmpsb
fadds
stos
or
out
mov
mov
fnsave
mov
aas
inc
mov
call
scas
adc
mov
adc
cmp
mov
pop
stos
inc
xor
xchg
test
ss
popa
pop
stos
xor
mov
movsb
add
imul
sti
enter
pop
mov
mov
lahf
cmpsb
mov
lret
jl
mov
jl
stos
in
aaa
out
insb
repnz
and
or
mov
pop
sub
icebp
and
mov
lock
sub
xchg
dec
in
jg
ljmp
mov
imull
xor
jns
push
adc
adc
sti
mov
lret
loope
add
pop
jg
repz
int3
jo
or
pop
lahf
jp
xchg
dec
adc
hlt
jbe
pop
imul
push
adc
sarl
cmpl
adc
ret
loopne
adc
cmpsl
jno
pop
dec
dec
loopne
daa
xchg
sbbb
cltd
lock
popf
in
sbb
dec
push
add
les
mov
mov
dec
mov
adc
aam
lock
addr16
out
loopne
pop
call
dec
sbb
test
sbb
mov
adc
scas
adc
mov
pusha
jge
insl
cmp
dec
shrb
pop
mov
inc
cwtl
xor
xor
ja
call
and
cmpsl
push
and
add
push
and
stos
xor
popf
add
sbb
add
fisttpl
and
mov
cltd
lret
inc
xor
cmovp
popf
dec
xorl
mov
inc
clc
test
jmp
mov
cvtps2pi
jl
cmpsb
gs
les
mov
push
inc
ret
popf
push
push
or
sbb
hlt
ret
adc
add
xor
sub
rolb
lahf
xchg
imul
push
jbe
lods
jns
xchg
and
cmp
xchg
enter
pop
sbb
lcall
jo
je
cld
cmp
sub
inc
lods
mov
out
js
fsubl
lock
cmp
js
dec
pushf
outsl
pop
mov
or
xor
adc
and
ss
mov
fistl
jns
stos
out
mov
cmp
lock
xchg
enter
loop
popf
inc
lods
inc
pop
mov
lds
in
xor
push
insl
pop
mov
imul
popf
jp
bound
or
pop
or
fistpll
push
scas
icebp
xchg
push
push
sub
adc
sarb
sub
xchg
cmp
inc
sub
ret
cli
fnstenv
lods
cli
ret
popf
imul
rcrl
dec
enter
cwtl
push
repnz
pop
fsub
fsubrl
or
fisttps
and
ljmp
bound
cmp
outsl
sbb
mov
mov
test
cs
js
jbe
inc
jo
sub
jmp
dec
movsb
pop
bound
mov
jbe
mov
lea
stc
icebp
sub
lds
jl
dec
and
call
jne
in
test
push
add
test
fwait
mov
pop
movsb
repnz
dec
scas
add
test
mov
in
lret
mov
xchg
mov
jnp
push
cmp
mov
out
mov
cli
in
inc
cwtl
and
add
cltd
rcll
cmp
lret
ljmp
or
arpl
rcrl
inc
adc
pushf
fucom
jbe
sub
mov
xor
push
dec
mov
sub
lret
fsubs
leave
scas
pusha
lods
out
inc
ficompl
mov
lret
jge
nop
int3
mov
arpl
or
movsl
rcrb
and
aad
jp
bound
insb
mov
bound
mov
jle
xchg
mul
in
pop
mov
jmp
jb
mov
mov
mov
xchg
lret
dec
mov
adc
mov
xor
mov
out
rol
push
loopne
push
mov
push
mov
ja
insb
adc
xlat
xchg
mov
or
test
pop
push
mov
mov
mov
push
cmp
jne
mov
cltd
fldenv
jmp
and
cmp
xchg
and
inc
repz
rorb
and
stos
stos
fildll
mov
dec
jae
int3
fdivrl
jl
mov
inc
push
xchg
mov
inc
out
or
cmp
xchg
mov
inc
add
cmpsl
cmpsl
dec
cmpsb
negb
ja
push
adc
ret
mov
repnz
xchg
jnp
aad
es
mov
hlt
cmp
cmp
out
fnstsw
and
pop
jmp
scas
or
dec
mov
sbb
aas
movsb
bound
push
cmp
mov
push
fmuls
push
leave
mov
or
mov
adc
mov
dec
cmp
xchg
or
outsl
aad
dec
fcom
jbe
or
mov
mov
push
in
test
jnp
sbb
mov
leave
aad
je
push
scas
ds
sub
enter
pop
jb
add
lret
fidivs
sub
in
dec
out
pop
ss
call
adc
data16
loop
add
jbe
sub
test
lcall
ficoml
movsl
fsubr
pushf
pop
aaa
outsb
iret
shrb
xchg
lret
into
ret
outsl
outsl
xor
cwtl
pusha
mov
fldt
in
inc
and
out
in
mov
stos
xor
mov
xchg
fcomp
push
push
stc
leave
fyl2xp1
add
iret
adc
das
int3
nop
xor
fbld
push
out
fisttps
les
sub
cs
ljmp
stc
jns
push
and
bound
shl
xor
pop
sar
ret
jmp
cmp
mov
popl
rcl
inc
ds
mov
outsb
daa
inc
leave
or
ficomps
pop
push
or
sub
jne
iret
mov
idiv
dec
je
push
mov
adc
sub
mov
sahf
clc
jae
addr16
dec
push
rclb
inc
mov
xchg
icebp
mov
adcl
pop
mov
js
xchg
inc
fsts
lret
pop
sub
jp
xchg
xchg
pushf
daa
xchg
shll
mov
mov
in
scas
push
adc
sahf
xchg
pop
bound
adc
scas
test
shll
ficompl
cs
mov
in
and
cmp
inc
dec
add
jg
cvttps2pi
push
std
clc
movsb
fstpl
cmpl
jne
mov
push
loop
fnstcw
and
sub
addl
adcb
lods
out
pop
test
sub
mov
push
mov
ror
mov
sbb
cmp
int
ja
push
sbb
inc
shlb
rcl
xor
rcll
jb
outsl
das
jle
inc
out
les
pop
jle
sbb
imul
mov
cmpsb
sub
mov
dec
or
das
or
cltd
xchg
inc
push
mov
or
aam
inc
mov
mov
imul
push
popf
loopne
xchg
xorb
cld
leave
aas
sub
push
push
stc
jmp
scas
mov
mov
xchg
push
fwait
ja
or
decb
fwait
aaa
std
inc
insl
jb
push
and
fs
inc
aad
scas
jg
fdivp
hlt
push
sub
cmp
sahf
mov
imul
imulb
cmc
pop
int3
call
repnz
fsub
add
adc
mov
and
and
sub
mov
dec
test
popf
insw
push
leave
dec
lock
mov
cmp
mov
outsl
or
lock
sub
int
xor
pop
adc
popa
out
mov
int3
mov
aam
mov
sub
xor
in
dec
pop
test
mov
movsl
xchg
mov
xchg
adc
push
mov
adc
xor
addr16
jge
add
leave
daa
xor
inc
int3
pop
inc
aad
pop
pop
pop
lret
and
jno
jecxz
mov
cmp
dec
push
mov
stos
jb
sub
repnz
jb
nop
sbb
icebp
inc
xchg
and
mov
mov
xchg
mov
add
das
movsb
xchg
push
jno
xchg
push
adc
mov
add
lret
xchg
mov
hlt
enter
psrlq
sub
or
lock
int3
adc
mov
jg
pop
fwait
bound
jg
adc
aad
scas
xlat
ret
xchg
sub
push
jb
orb
popf
das
push
ja
ret
fnop
mov
aad
clc
pop
add
scas
dec
mov
xchg
popf
jno
ret
jnp
cwtl
xchg
pcmpeqd
aaa
jbe
hlt
lcall
imul
lahf
cmp
push
xchg
rolb
push
leave
sub
cmp
jmp
pop
sub
xchg
into
mov
outsb
or
lcall
pop
test
test
fnsave
or
and
push
push
arpl
out
aaa
or
lcall
inc
in
jp
sbb
jge
and
sar
adc
popfw
je
frstor
out
sub
adc
dec
cld
adc
mov
cmc
mul
xchg
or
mov
lcall
push
xchg
ss
dec
xchg
mov
jae
jae
ja
sub
outsb
xor
imul
dec
mov
xchg
test
add
mov
xlat
fidivrs
pop
and
imull
ja
lret
call
mov
ljmp
nop
sahf
jno
add
out
add
jae
inc
int
out
ret
sbb
popa
xor
inc
sub
test
push
mov
sbb
rcl
int
sbb
mov
hlt
xor
fisttpll
mov
jae
mov
pop
or
pop
test
sti
and
pop
sahf
loope
push
sub
jp
lahf
insb
sbb
nop
pusha
icebp
add
pop
test
mov
dec
adc
cmp
int
or
into
dec
cs
sahf
push
cld
xlat
cmp
es
lea
mov
lods
movsb
and
inc
popf
shrl
sbb
mov
int
and
lock
and
xor
push
inc
mov
mov
hlt
movsb
outsb
or
addr16
test
call
fisubl
addr16
xchg
loopne
fdivs
out
cmpb
mov
lods
rorl
test
lcall
ds
sbb
cmc
loopne
movsl
dec
icebp
push
jnp
mov
enter
xor
mov
pop
call
mov
jl
stc
mov
mov
adc
adc
in
mov
fistpll
add
dec
rolb
or
cmp
cmpsb
addb
enter
rep
fsts
rorl
or
jecxz
dec
mov
ds
xor
aad
iret
jbe
js
stc
outsb
imul
dec
inc
aam
cmp
pushf
in
mov
mov
lret
and
pop
insb
mov
movsb
push
int3
test
pop
scas
ja
stos
add
fwait
imul
jmp
jne
sub
xchg
mov
insl
pop
repz
cmc
adc
pop
sbb
fisttpl
add
jae
addb
dec
xor
pop
imul
mov
arpl
add
cmp
jmp
roll
mov
idivb
xchg
jg
or
push
xor
push
scas
add
in
jmp
push
ds
mov
dec
mov
xchg
aas
shlb
int3
pop
sbb
add
vxorpd
mov
add
xchg
jmp
bound
imul
and
adc
jecxz
mov
nop
fs
js
sbb
add
or
fdivs
rcrb
inc
sbb
mov
js
sbb
push
icebp
mov
xchg
inc
adc
int3
adc
inc
mov
xchg
cmp
push
daa
enter
scas
imul
pop
bound
pop
aas
lds
outsl
in
dec
shrb
cmp
std
jg
inc
sub
lret
js
cwtl
push
xor
repz
dec
test
shlb
das
xchg
jp
in
pop
outsb
sub
mov
out
cli
ret
jge
loopne
addr16
dec
stos
pop
test
xchg
ja
mov
push
cmp
cmpsb
and
add
lods
mov
jnp
js
and
int
or
sub
mov
mov
fimuls
ret
pusha
iret
mov
je
push
imul
lods
jg
bnd
pop
repnz
and
iret
xchg
iret
jle
stc
in
fs
stos
xor
mov
jecxz
andl
jbe
cmp
mov
scas
push
inc
adc
test
std
neg
sbb
dec
decl
pop
stos
mov
mov
incb
lods
pop
insb
xchg
push
jg
push
jns
inc
dec
inc
fidivrl
lret
dec
popa
insl
stc
xchg
cmp
sbb
jmp
add
out
call
mov
mov
dec
daa
inc
xchg
cmovo
out
xchg
sar
xchg
add
xor
inc
movsl
and
mov
sahf
ja
aas
add
cmp
mov
sbb
ficompl
fildll
cld
in
xchg
mov
jg
scas
xor
sbb
push
test
cmpsl
mov
mov
test
sbb
movsb
cmp
push
mov
adc
adc
int3
pop
mov
into
lret
fcom
repz
lods
inc
add
stos
lret
sbb
lcall
xlat
fcom
aaa
push
aaa
test
inc
fdivr
nop
jle
nop
pop
jae
xchg
jmp
and
sub
xchg
in
ret
divl
cmc
loopne
iret
cmp
mov
push
sbb
jl
ret
mov
jns
xchg
sbb
mov
cmc
mov
sahf
push
cs
or
aaa
fbld
cmp
xor
fistl
aad
xlat
jge
inc
stc
cmp
pushf
loopne
fwait
or
mov
dec
rclb
add
fsts
jecxz
mov
xchg
aas
cmp
andb
iret
test
out
or
cltd
adc
add
hlt
int
dec
lret
mov
inc
sti
jecxz
inc
fdivr
cs
push
adc
mov
loopne
sarb
sub
imul
pop
and
call
push
test
add
sbb
outsl
clc
fwait
ret
aas
pmaxsw
xchg
xor
push
cmp
cmp
loope
lret
lods
sbb
and
or
mov
out
xor
repnz
xchg
dec
jge
fcmovu
dec
sub
in
push
inc
mov
dec
jnp
mov
popa
pop
pop
dec
xor
cmpsl
jp
stc
pop
sub
add
sarb
cmp
or
inc
inc
lods
dec
lret
das
subb
fnstenv
sarl
cmpb
push
imul
jecxz
sbb
ret
aaa
sub
or
out
orb
mov
xor
lcall
or
mov
jge
mov
mov
dec
and
ret
test
dec
push
jg
clc
in
sbb
adc
fsubrl
mov
out
dec
xchg
inc
ret
lods
dec
cmp
sub
ja
cmp
dec
pusha
es
sbb
and
adc
mov
std
sub
push
fs
insb
imul
mov
push
je
xor
xor
fldcw
sub
loop
xchg
movsb
scas
cmp
fidivrs
shlb
int
and
lods
sti
ficomps
sbb
cs
mov
pusha
in
xchg
inc
data16
mov
jbe
out
es
das
popa
daa
jmp
cli
mov
and
fisubrs
push
lock
into
jmp
xor
jbe
adc
xor
jno
icebp
mov
push
cmpsl
cmp
mov
cmp
inc
mov
out
popa
mov
jns
adc
push
fisubrs
stos
out
add
movsb
push
lcall
push
jmp
int3
add
xchg
sub
ljmp
stos
sub
push
ficoms
xchg
sub
cs
into
movsb
testb
aam
add
mul
cmpsl
pop
rcl
ret
xor
test
es
jns
sbb
or
adc
loop
pop
pop
adc
mov
cltd
dec
mov
sub
mov
fxch
dec
jne
loopne
jmp
mov
clc
inc
in
or
aas
jae
cmp
push
in
ret
or
xchg
mov
dec
lock
and
inc
mov
fs
push
add
ret
sahf
pop
mov
clc
mov
incl
fcompp
aad
and
dec
sbb
addr16
cwtl
cmp
and
fildl
bound
and
es
nop
mov
pushf
dec
lds
xchg
sub
mov
movsl
or
push
jbe
sub
adc
add
in
pop
mov
pop
loop
adc
rorb
xor
and
sahf
xor
outsb
or
jns
jg
lea
xor
ss
loope
cmp
adc
fnstcw
inc
mov
sbb
lds
data16
add
adc
std
jecxz
or
insb
mov
leave
mov
jnp
lds
unpcklps
push
test
cwtl
orl
call
mov
fidivrs
jmp
and
push
dec
mov
cli
lds
test
int
sbb
xor
adc
pusha
mov
stc
xchg
push
ret
pop
addr16
insb
adc
sub
jno
sub
daa
nop
jle
push
mov
jbe
adc
xlat
cmp
jbe
cmpsb
dec
ds
repnz
jp
dec
push
jle
sbb
jmp
icebp
or
sub
out
push
adc
scas
fidivs
into
adc
mov
insl
bound
pushf
in
mov
jge
sbbl
insb
imul
cmpsl
fimull
sti
push
ret
xchg
jnp
test
fidivl
push
mov
jbe,pn
xchg
test
inc
lret
xchg
scas
in
mov
loopne
mov
dec
hlt
cmovp
das
fstpt
lods
pushf
or
jbe
lret
fwait
mov
mov
pusha
xchg
pushf
out
jb
lret
mov
fisubs
dec
pusha
fidivl
cwtl
in
into
adc
js
cmp
mov
out
popl
lock
mov
movsl
repz
xor
mov
dec
cs
sbb
sub
outsb
ja
add
jle
mov
adc
outsb
jb
push
insl
clc
mov
sarl
xchg
jbe
flds
mov
lock
inc
in
inc
add
xor
jle
xor
inc
cmp
mov
push
jmp
mov
push
fstpl
xor
dec
insl
ja
add
into
out
pop
add
sbb
push
xchg
test
test
in
inc
mov
xor
popa
sbb
xor
mov
mulb
adc
shl
push
add
jnp
pop
jo
ret
mov
test
jge
push
cli
sub
cmp
lret
dec
movsb
sub
xlat
arpl
aaa
adc
sarb
mov
mov
movsb
ljmp
xor
sub
lods
mov
sbb
int
popf
fmul
pop
and
icebp
dec
adc
lret
js
mov
sbbl
mov
int
sbb
addr16
jle
xor
scas
or
jle
nop
jns
out
scas
js
out
dec
jb
icebp
or
test
jge
call
mov
or
xor
xchg
cmp
or
dec
das
lcall
lcall
repnz
leave
jg
jb
stos
movsl
adc
cmp
mov
or
mov
movsl
mov
addr16
sub
or
mov
mov
fldt
out
in
leave
into
or
mov
dec
push
out
nop
or
or
xor
and
sub
pushf
lcall
pop
std
xor
push
dec
stos
adc
je
xchg
add
andl
dec
pushf
mov
data16
lahf
aas
adc
lret
mov
loope
jbe
int3
test
cmp
push
cld
imul
xchg
insl
pop
add
mov
test
push
movsl
je
dec
aas
in
dec
inc
scas
sbbl
dec
fst
jg
sub
dec
popf
das
xchg
mov
adc
inc
iret
sti
mov
out
daa
pop
sbb
sysexit
outsb
outsl
iret
inc
push
outsb
leave
pop
push
push
out
adc
sbb
jno
nop
push
std
mov
xchg
sti
xchg
mov
lds
std
jno
cld
into
ds
test
sub
lds
es
rcll
pusha
outsb
int
cmp
mov
push
clc
push
mov
cli
xchg
aaa
or
ficomps
test
push
cs
stc
loop
in
jmp
mov
js
jo
push
mov
ret
insb
stos
mov
loopne
outsl
enter
adc
mov
jnp
call
bound
xchg
jno
ret
add
fs
and
xor
mov
xchg
mov
outsl
test
arpl
fistpll
jle
add
imul
xchg
sahf
pop
add
inc
inc
push
bound
mov
cli
popa
lods
inc
sbb
enter
jae
xor
jmp
daa
test
inc
push
push
mov
gs
arpl
mov
into
into
mov
cwtl
sbb
into
or
mov
insl
out
xchg
cmc
lods
mov
leave
xchg
outsl
inc
sarl
mov
shrb
jp
xchg
cmp
subb
repz
xchg
push
pop
xchg
in
adc
jp
idivl
mov
jno
and
test
lret
push
jle
jecxz
mov
test
push
cwtl
mov
scas
mov
es
pop
out
mov
sbb
js
fmul
mov
xchg
test
or
jge
sub
dec
inc
cwtl
js
or
push
jle
lret
or
cld
int
jecxz
or
mov
pushl
sbb
sahf
fldcw
sbb
lock
sbb
jns
js
popf
mov
sarl
ds
pop
and
lods
cltd
mov
push
fwait
sbb
sub
mov
imul
inc
adc
pop
sub
mov
push
mov
into
jg
mov
pusha
popf
sub
aam
fcompl
xor
or
hlt
clc
fldcw
mov
pop
sbb
xor
xor
imul
insb
imul
jg
out
add
sub
xor
inc
std
xlat
inc
push
out
and
or
pop
subb
in
add
shrl
mul
adc
testb
js
sbb
test
and
clc
xchg
mov
outsl
repnz
leave
push
pop
popf
sub
lahf
add
pop
ljmp
lcall
js
fs
cmpb
dec
rol
or
outsl
cmp
mov
mov
add
test
sub
push
cmp
jno
jl
adc
push
ja
ljmp
in
xacquire
pusha
loopne
dec
push
scas
ret
add
push
xchg
pushf
es
and
cmp
sbb
out
nop
in
mov
icebp
add
loopne
out
shl
sub
fcomps
cmpsl
aad
and
adc
call
xor
mov
popa
xor
push
mov
push
cmc
mov
push
and
add
jg
dec
dec
xchg
shlb
into
fldt
rcrb
inc
sti
loop
adc
ret
imull
dec
repnz
mov
mov
jo
and
mov
in
ror
aaa
shll
mov
sahf
pushf
std
mov
sub
daa
out
xchg
frstor
xchg
jno
ja
cli
jne
jecxz,pn
xor
sbbl
ss
inc
inc
pop
lret
cmc
fwait
pop
mov
pop
xor
adc
aaa
cltd
add
mov
adc
mov
pop
cmp
insb
sbb
adc
mov
jge
xor
ret
mov
fs
add
adc
dec
mov
aad
pop
pop
pop
nop
push
pop
pop
push
push
int3
ret
idivb
mov
xchg
push
aaa
add
mov
jmp
pop
dec
add
mov
into
lcall
cltd
cltd
pushf
lcall
stc
dec
sub
inc
test
mov
aam
movsl
fistl
les
out
push
or
cmp
mov
popf
inc
mov
dec
adc
sbb
add
movsb
cltd
out
test
subb
pop
in
imul
sub
jl
or
push
xchg
insb
dec
sti
pop
cmpsb
movsl
out
gs
xchg
test
out
jecxz
dec
loope
pop
out
or
xchg
fs
fidivrl
lods
add
xchg
jo
movsl
in
or
repnz
jae
pop
pop
js
xchg
push
cmc
ljmp
call
dec
add
xchg
jecxz
test
es
aaa
insl
movsl
out
movsb
jb
pop
and
cmp
mov
lea
jnp
sbb
sub
cld
sbb
int
jl
sub
mov
inc
push
jae
fcompl
sbb
les
out
mov
leave
out
push
data16
cli
rcr
dec
and
insb
dec
sub
data16
push
jo
and
mov
fdivrs
loopne
ds
jne
lahf
sub
add
sub
lds
xor
push
test
jp
mov
inc
hlt
in
fs
in
je
xor
sahf
clc
iret
adc
popf
dec
mov
add
or
hlt
int3
jle
dec
adc
test
ja
pop
inc
fcoml
push
pop
daa
fsubp
and
int
xor
or
ja
loopne
and
sbb
mov
loopne
jl
mov
mov
iret
iret
sbb
add
jl
mov
pop
xchg
mov
lahf
cs
lahf
xor
pop
lods
sti
ljmp
add
cs
cwtl
mov
scas
mov
xchg
arpl
aad
push
les
js
stc
pop
in
pop
pop
push
mov
mov
xchg
pop
jns
shl
mov
mov
je
cmpsb
and
add
inc
das
outsb
popa
add
outsb
xlat
add
stos
das
mov
jb
push
sub
push
dec
addr16
into
cmp
cmp
fst
xlat
ficoml
xor
sbb
cs
sub
mov
movsl
jns
fisubrl
fnstsw
sub
jl
xchg
sub
stos
sahf
mov
and
and
cli
dec
jbe
inc
mov
popa
sbb
xchg
jg
sub
fldl
or
push
dec
or
std
mov
sarb
sub
jl
cmp
outsb
fldl
push
adc
out
jne
xchg
cmpsl
orl
movswl
adcl
sub
pop
sbb
or
mov
add
cmp
imul
cltd
lea
sbb
mov
decl
push
pusha
inc
pop
pmulhuw
dec
cwtl
jge
les
xor
pop
test
arpl
sbb
cmpsb
sbb
imul
and
cmpsl
test
jmp
push
mov
push
pop
inc
push
push
ficompl
mov
fisubrs
sbb
sbb
int3
and
xor
imul
xchg
sahf
dec
bound
mov
popa
icebp
mov
std
xchg
lcall
fs
fsincos
pop
shl
push
call
dec
mov
fnstcw
push
dec
or
setge
jae
and
arpl
pop
xlat
xlat
roll
add
popl
mov
neg
push
xor
sti
daa
jp
and
lds
fsts
jo
andb
arpl
out
mov
xchg
cmp
mov
repnz
lods
pop
sub
cmp
shll
and
pop
jns
loope
scas
mov
enter
loopne
sbb
stos
and
sub
inc
sbb
jg
or
or
sbb
repnz
cmp
sub
xor
lcall
pop
dec
inc
divl
aas
loopne
jl
inc
ss
pop
rcll
push
in
adc
mov
push
or
mov
xor
push
test
dec
data16
ss
sahf
push
or
pop
aas
test
or
xchg
movsb
xor
inc
inc
push
mov
fs
mov
and
cmp
outsl
sub
in
cmp
lods
cmpsb
sbb
push
dec
push
into
and
mov
inc
int3
mov
and
lock
neg
sub
addr16
out
in
mov
test
cltd
lret
cmp
jg
mov
lds
lret
push
imul
dec
mov
pop
idivb
leave
push
fimuls
sbb
mov
mov
aas
cmp
daa
movsl
adc
sub
insb
stos
xchg
outsb
lahf
xchg
scas
mov
dec
pop
loopne
sbb
clc
adc
cli
jle
adc
pop
enter
in
fwait
pop
adcl
xor
es
xchg
jl
addr16
push
pop
push
mov
daa
mov
dec
sub
testb
imul
rcr
inc
and
xchg
cmp
fldt
icebp
fadds
push
gs
pop
mov
or
cmp
loope
mov
sub
repz
cli
enter
xchg
dec
xchg
mov
push
scas
mov
lods
mov
repnz
rcrl
ss
in
fiaddl
subl
jne
sbb
or
xchg
shl
mov
mov
cmp
dec
jae
adc
sub
shlb
dec
or
lret
cld
or
dec
sbbl
sarl
or
sub
mov
nop
mov
inc
push
xchg
decl
in
mov
out
dec
jno
inc
icebp
cwtl
shrb
and
cmp
lods
pop
xor
cli
mov
iret
clc
stos
xchg
fwait
and
out
cmc
out
gs
pop
imul
je
xchg
or
fsubs
pushf
movsb
cld
stos
das
je
mov
pop
inc
cmp
jp
add
inc
outsl
pop
adc
out
push
xchg
aam
scas
mov
outsb
and
pop
lock
sub
xlat
pop
mov
jne
push
je
lds
sbb
add
jl
pcmpgtd
adc
mov
aad
fcomip
rcr
sbb
mov
bound
ret
clc
shlb
mov
adc
cli
fmul
lret
sub
lret
adc
jl
lea
jp
jmp
or
pop
fwait
sbb
fcmovne
sub
xor
data16
and
jae
adc
andb
js
imul
mov
mov
fucom
mov
or
mov
xchg
sub
roll
and
call
ret
pop
mov
call
pop
xchg
xchg
pop
iret
cmp
mov
insb
jnp
lcall
sub
add
sub
cmp
adc
mov
int
in
adc
lods
cmp
xchg
pop
or
mov
adc
hlt
mov
test
xor
pop
jae
lcall
adc
sub
push
sub
out
std
mov
hlt
add
jge
out
rclb
xchg
pusha
jl
inc
push
push
sarl
imul
test
push
aam
fldl
dec
mov
cmp
scas
imul
sub
sar
pop
xchg
leave
test
push
mov
cmc
adc
out
shl
mov
xchg
sbb
aad
ss
in
lods
lcall
je
and
add
mov
push
mov
popf
hlt
sarl
add
jne
or
aaa
xor
jp
mov
sarb
xchg
lds
jo
mov
mov
xchg
loop
cmp
in
pop
mov
imul
ret
mov
test
movsb
mov
push
cmc
ret
dec
insb
mov
xor
inc
popf
insl
adc
mov
adc
bound
pop
adc
or
push
ljmp
push
or
gs
adc
aas
mov
lahf
sub
dec
xor
push
stos
testl
xchg
lds
pop
out
cmc
jbe
lock
mov
scas
scas
leave
repnz
cmp
test
lock
adcb
hlt
sbb
cmp
jo
or
and
pop
and
aaa
leave
push
int
lods
iret
arpl
jo
lea
inc
pop
adc
pusha
cli
sub
insb
dec
into
mov
lahf
push
lods
mov
in
scas
cmpsb
mov
test
sbb
sbb
dec
stos
mov
push
cmp
jmp
xchg
pop
push
and
sub
xchg
add
sahf
mov
cmp
outsl
mov
and
pop
fldcw
xchg
and
mov
jg
sbb
repnz
mov
icebp
in
jae
cmovg
filds
and
rcrb
stos
xchg
in
fsubs
jecxz
mov
mov
lcall
lds
cmp
fdivrl
adc
insb
hlt
je
testb
cmp
jle
shll
xlat
xchg
cmp
adc
add
insb
imul
imul
adc
mov
cltd
jae
sbb
xor
ret
ljmp
add
icebp
lret
xor
jge
outsb
pop
dec
jmp
inc
cwtl
and
pop
jns
inc
pop
jnp
inc
cmpsl
mov
mov
add
into
xor
sbb
inc
sub
subb
stos
sub
push
lods
sti
push
iret
js
in
jbe
arpl
push
leave
movl
mov
jnp
push
mov
or
pop
lea
pop
sbb
lds
jmp
mov
inc
mov
sub
sbb
das
ret
pop
divb
ds
sbb
js
push
ljmp
inc
mov
std
scas
outsb
pop
imul
icebp
xlat
test
mov
xchg
or
xor
mov
or
fisttps
pop
or
ret
stc
mov
fists
or
cmp
rorb
fnstsw
mov
idivl
sahf
sub
jo
xchg
mov
push
sub
data16
stos
lea
sahf
and
or
jle
dec
scas
iret
aad
mov
add
jmp
push
loopne
aas
dec
xchg
xchg
ss
cld
ss
jns
mov
mov
cmp
or
mov
mov
jp
outsb
jp
or
fildll
mov
pop
pop
loop
in
ds
xlat
imul
cmp
adc
fsubp
xlat
dec
inc
test
insl
ret
dec
in
ds
push
leave
int
arpl
xchg
cmpsb
rcl
or
xor
sub
mov
cwtl
mov
sbb
nop
lods
stos
pop
push
call
adc
nop
aaa
rol
lahf
jl
scas
cwtl
push
repz
stos
adc
push
std
mov
test
out
sub
sahf
outsb
jno
lock
xchg
cmp
push
xchg
mov
dec
mov
frstor
lods
adc
ja
ret
cmc
shr
fnstcw
inc
push
dec
push
or
push
sub
loop
xchg
popa
mov
and
loope
imul
lea
lock
pop
xchg
lea
xchg
sbb
dec
mov
pushf
pop
inc
xchg
jns
out
adc
pop
mov
into
mov
inc
cmp
sarl
ja
outsl
mov
or
mov
cwtl
sbb
push
adc
leave
ljmp
cmp
jle
js
pop
add
mov
jbe
jg
xchg
stc
ds
clc
push
data16
or
and
push
xorb
adc
cmp
bnd
outsb
stos
out
xchg
sbb
mov
fnstenv
dec
in
mov
pop
fnstcw
hlt
jge
adc
es
mov
lret
shll
lds
inc
xchg
add
mov
pushf
pop
je
lcall
neg
dec
out
nop
int
ljmp
adc
add
push
outsb
lods
xor
add
xor
roll
jle
test
lock
push
mov
into
jmp
movsl
imul
data16
inc
inc
mov
mov
inc
dec
cmpb
push
dec
push
mov
xchg
or
in
movsb
js
inc
hlt
std
fdivl
mov
shl
push
rorb
ret
xlat
jno
or
mov
insb
inc
ficomps
and
rclb
mov
sub
sbb
ja
jg
mov
movd
mov
sbb
insb
jmp
loopne
je
jne
ja
push
out
cmp
pop
in
cmp
and
adc
test
in
mov
sub
xor
lcall
mov
cmpsb
adc
dec
test
pop
lret
cwtl
movsl
jbe
js
stos
mov
cmp
xchg
mov
push
dec
mov
in
mov
mov
dec
jg
jnp
dec
negl
nop
pop
xor
rorl
outsb
in
gs
mov
sbb
dec
and
pop
out
inc
je
fbld
mov
xchg
popf
dec
xchg
ja
add
and
pop
cmp
pop
mov
iret
xchg
jne
xor
movlps
call
mov
je
addb
out
xchg
out
dec
in
xchg
in
aaa
push
out
imul
lcall
aam
ret
cltd
cs
sbbb
fwait
sbb
sbb
cli
push
mov
ret
pop
cmpsl
test
test
test
pop
hlt
hlt
xlat
inc
jg
popa
aam
clc
insl
scas
jmp
adc
add
aaa
loope
js
adc
dec
pop
mov
mov
fmuls
mov
lcall
sahf
push
gs
cli
xor
and
nop
mov
iret
arpl
enter
int3
sub
dec
loope
inc
sbb
stc
scas
hlt
sbb
out
inc
lock
lret
and
jp
jp
push
jle
and
inc
in
dec
xor
cmp
push
or
cmp
mov
sbb
fldt
ss
inc
roll
pop
add
xorb
mov
test
jo
sti
rcl
test
adc
dec
add
sbb
dec
xor
adc
pop
fstl
xor
jle
idivb
out
cmp
adc
negl
out
mov
pause
mov
push
or
push
loop
sbb
std
shlb
dec
fwait
xchg
xchg
sbb
ja
mov
sub
mov
pop
icebp
scas
pop
xchg
mov
push
xor
mov
push
int3
sub
mov
cwtl
sub
ficoms
adc
adc
loope
inc
ret
test
push
mov
adc
leave
das
cwtl
add
pushf
add
cmp
sbb
push
lods
cbtw
push
pop
adcl
jne
mov
sub
xor
fucom
xchg
cli
stc
aas
mov
aas
in
xchg
jmp
imul
push
shrb
cltd
cmpsb
and
lods
dec
stc
xchg
jmp
mov
adcb
cmpsl
sub
sbb
test
testl
aad
iret
lret
xchg
enter
dec
add
mov
insb
sbb
mov
sub
xchg
ds
jo
addb
je
mov
jnp
imulb
insb
lds
cmp
mov
dec
in
cmp
std
xchg
leave
xchg
adc
out
movsl
pop
or
cli
xor
out
roll
or
adc
pop
mov
clc
sub
mov
jecxz
sti
push
cmc
add
inc
in
sbb
mov
stc
dec
fldcw
pop
mov
mov
lock
imul
cmp
mov
jle
sub
scas
rclb
cmp
jp
les
pop
fdivrl
leave
mov
jb
aam
jae
sub
mov
daa
jae
inc
sub
push
cmpsb
mov
or
add
xchg
lods
mov
inc
jae
adc
mov
and
jecxz
js
xchg
adc
sub
mov
xchg
rcrb
sbb
inc
mov
mov
imul
iret
mov
imul
dec
pop
or
jg
decb
filds
jbe
int3
clc
fstl
cmp
leave
and
push
ljmp
add
adc
push
xchg
mov
sub
push
or
mov
xchg
cltd
sub
popf
inc
mov
sub
inc
into
adc
daa
add
add
roll
std
bound
jo
test
xchg
test
jl
inc
stos
lcall
xchg
test
cmp
and
push
js
push
pop
jecxz
and
das
and
push
dec
aas
leave
inc
inc
xor
cmc
fs
fnstenv
sbb
sbbl
xchg
push
lret
adc
scas
shr
jmp
mov
addr16
cmp
dec
mov
leave
xchg
or
push
or
dec
out
push
jl
dec
hlt
rorb
lock
push
jnp
sbb
shll
movhps
pop
xchg
push
jecxz
xchg
movsb
inc
insb
movsl
cmp
dec
adc
pop
fisttpll
je
ds
ja
add
pop
xchg
dec
cmp
push
fdivrs
lahf
sahf
add
imul
loop
mov
cmp
jns
imul
jg
mov
shrb
sti
jno
aas
sub
add
jae
enter
sub
and
mov
and
mov
fstpl
dec
lcall
xchg
lahf
jb
in
lods
divl
mov
jle
mov
sub
add
fwait
sub
pop
adc
adc
and
adcl
fstpl
pop
scas
xchg
or
push
jae
fnstcw
pop
std
rcrb
decb
out
fbstp
or
out
popa
lret
adc
sub
test
mov
ss
mov
dec
movsl
testb
sbb
outsb
lahf
xlat
mov
adc
insb
pop
inc
fsubrs
dec
stc
aam
shrl
and
int3
orb
stc
mov
repnz
xchg
fisubrs
test
and
adc
fcmovnbe
pop
test
and
ja
sub
das
xorb
pop
lcall
xchg
xchg
cmp
fwait
test
sti
mov
das
aam
mov
adc
cmpsb
ret
jnp
xchg
xchg
xor
xchg
xor
sbb
pop
push
xchg
cmp
mov
sbb
or
mov
ss
pusha
lret
dec
lret
lods
and
aam
add
pop
mov
pop
and
sbb
sub
push
sub
inc
ret
insb
add
rorl
call
adc
lret
adc
mul
test
popa
xor
cmp
dec
imul
sarl
and
inc
adc
fwait
ret
fadds
je
cmp
sbb
mov
adc
add
jno
jle
insb
inc
out
in
outsl
daa
and
out
imul
leave
pop
mov
inc
lea
mov
mov
in
data16
pusha
dec
dec
ret
push
stc
xlat
rolb
das
ljmp
xchg
fprem
icebp
ljmp
bswap
jp
test
cmp
test
inc
push
push
scas
sti
popa
stos
orl
insl
test
lret
sbb
or
shrb
std
lret
sbb
aas
bound
xchg
push
mov
test
xor
sub
ret
cmp
mov
cmp
test
jg
dec
mov
icebp
arpl
cmp
data16
gs
cmp
outsl
inc
scas
test
mov
subb
mov
fimuls
das
outsb
call
mov
stc
imul
aad
popa
or
out
clc
sub
rolb
leave
mov
pop
xor
cmp
add
in
xchg
gs
stos
xchg
mov
push
pop
sbb
aaa
mov
push
iret
popa
or
lods
push
cmp
mov
lods
add
ds
fisubs
sub
adc
sbb
adc
loope
mov
sub
adc
jp
pop
xlat
push
popa
icebp
ret
adc
mov
daa
pop
inc
jae
dec
jns
dec
inc
fidivrs
fisubl
daa
mov
aad
dec
sub
inc
int3
pop
popa
jmp
les
cmp
filds
jmp
xchg
pop
aad
stc
xchg
scas
ljmp
dec
add
add
dec
xor
cltd
pop
or
and
pushf
jle
xchg
jno
dec
out
push
sbb
fstpt
hlt
into
mov
or
in
scas
xor
adc
lds
xchg
inc
sbbl
add
push
push
add
sub
jns
or
popa
aas
jae
jne
in
dec
jmp
and
das
push
shlb
dec
scas
js
inc
clc
call
int3
xchg
aam
mov
dec
mov
fsub
pop
outsb
stos
jmp
dec
push
sbbl
fwait
loop
lret
mov
sbb
mov
cmp
mov
dec
int
cmp
xchg
push
jo
pop
push
jge
or
enter
jae
pushf
mov
lret
test
movsb
ss
mov
addr16
dec
leave
dec
mov
popa
pop
xor
dec
cmp
lds
jne
sbb
in
sub
inc
aaa
pop
mov
int
rclb
and
and
inc
lcall
cmpsb
sub
leave
fisubrs
inc
xor
or
sub
bound
cmp
pusha
sar
imul
or
jb
inc
jmp
sub
xchg
cwtl
out
xor
inc
fcom
and
notl
rep
push
mov
scas
lock
out
movsb
cli
xchg
dec
mov
cmpb
sub
push
mov
inc
loope
and
fs
adc
sbb
mov
loopne
pusha
jp
add
cmp
inc
push
aam
adc
xlat
scas
rcr
pop
sbb
push
push
cmc
dec
outsb
push
dec
dec
mov
aam
dec
fnstcw
push
xchg
movb
mov
popa
xchg
jp
ss
loop
jecxz
mov
inc
jo
stc
push
push
mov
pop
ljmp
adcb
xchg
xor
rorb
sub
vmread
imul
xor
outsb
mov
bnd
fdivr
mov
push
mov
mov
shrb
ljmp
inc
std
sbb
lahf
in
cltd
loope
cli
jge
mov
das
mov
sbb
push
mov
sti
addr16
xchg
out
aam
xchg
dec
fwait
inc
or
vcvttss2si
cwtl
push
movsb
inc
push
pop
inc
imul
xor
push
jo
add
ljmp
mov
rcll
or
cmpsl
xchg
or
or
ja
jbe
repnz
mov
jg
mov
pop
xchg
int3
sti
xor
mov
and
pop
lea
ja
jno
or
outsb
out
nop
cmc
movsl
js
stc
or
les
cmp
sti
or
add
cmp
jp
inc
nop
cmc
jecxz
mov
jg
call
mov
mov
adc
and
lods
int3
mov
out
lods
aam
xchg
jbe
imul
popf
cmp
adc
and
fsubl
into
leave
fwait
or
cmp
dec
ljmp
ss
shll
insl
inc
js
push
in
fstps
mov
push
push
repz
jge
dec
std
xchg
adc
test
xchg
gs
pop
dec
xchg
nop
ljmp
outsb
scas
into
or
inc
out
mov
add
dec
in
stc
outsb
ret
rolb
jge
ret
clc
mov
and
icebp
dec
fisubs
call
gs
cltd
icebp
lods
call
pop
and
jp
cmp
mov
push
sub
dec
test
in
and
bound
test
pusha
out
outsl
xchg
sub
roll
shll
fstpl
jns
loope
dec
lcall
mov
and
mov
icebp
inc
lods
cmp
push
in
add
xchg
jmp
mov
fadds
inc
dec
gs
mov
daa
sbb
push
push
mov
popa
mov
and
push
popf
pop
cwtl
jecxz
jno
cmp
repnz
sub
xchg
inc
jne
int3
lock
call
xchg
mov
adc
jbe
cmc
sub
push
add
lcall
xchg
cmpsb
cmp
mov
hlt
ret
mov
lea
sub
mov
pop
insb
or
sbb
sbb
mov
push
jmp
pop
mov
mov
dec
loope
lret
popa
jg
daa
hlt
mov
movaps
push
shlb
and
loop
and
shl
imul
addr16
mov
test
pushf
adc
mov
fldt
or
lods
add
dec
hlt
dec
jle
inc
add
fsubrl
fsubrl
out
adc
cld
loope
addl
pop
in
jno
jnp
int3
mov
cmpsl
iret
and
cltd
aad
mov
lds
call
sar
das
push
jnp
popa
push
inc
push
jne
push
adc
test
pop
stos
in
pop
add
sti
cld
mov
push
mov
cmc
pop
popf
add
iret
xor
mov
or
add
lret
mov
xor
cmp
movsb
xchg
test
sbb
xlat
sub
add
sbb
mov
push
aam
jns
jo
dec
push
inc
jmp
std
add
xchg
jl
or
test
scas
jne
std
mov
pop
dec
xchg
mov
mov
dec
xchg
and
neg
add
push
sub
notb
inc
loop
mov
pushf
xor
lcall
pop
pop
mov
addb
mov
sbb
pop
test
mov
xor
pop
dec
negb
test
push
movsb
aam
fldcw
das
adc
cwtl
cld
imul
cmc
xor
ret
rcl
lcall
and
mov
mov
iret
repz
int
jl
lods
imul
jo
lock
sub
aad
jae
insb
setle
sub
inc
test
inc
imul
cmp
mov
ljmp
xor
push
ds
pop
xchg
pop
out
out
dec
jge
enter
stos
clc
ljmp
scas
mov
int
out
ds
jbe
sbb
pop
loopne
dec
mov
loope
mov
mov
or
clc
adc
cmp
mov
jge
divl
js
sbb
pop
lret
sub
pop
mov
pop
inc
xor
mov
add
inc
cmp
rolb
stos
lods
adc
pop
insl
adc
int3
jge
ret
mov
aaa
push
and
jb
cmp
ror
fwait
or
fcomps
cmp
sbb
push
mov
aam
cltd
scas
test
xchg
xchg
mov
movsb
aad
pop
out
dec
and
movl
and
sbb
loopne
cs
adc
mov
jae
xchg
xor
mov
fmul
mov
mov
lods
and
lret
std
push
inc
cmc
or
dec
push
mov
leave
js
and
icebp
push
mov
inc
jno
mov
dec
out
mov
xchg
dec
pushf
dec
fwait
in
jb
xchg
xor
insb
push
mov
inc
idivl
mov
mov
or
jmp
mov
rcrb
xchg
add
negb
jnp
push
mov
add
fs
fbld
xor
pop
sbbb
stos
mov
test
adc
iret
or
bts
les
and
bnd
addr16
xchg
mov
lcall
imul
cmpsl
adc
scas
in
mov
sbb
sub
xor
fists
push
rolb
pop
sti
sub
xchg
pop
inc
std
sub
adc
xchg
imul
cwtl
xor
lret
aas
loope
lds
inc
iret
js
and
les
adc
faddl
pop
push
mov
sbb
js
xchg
and
or
mov
ljmp
insl
jle
stos
dec
push
cmp
repz
aad
imul
sbb
xchg
cmpsb
cwtl
shr
iret
mov
jo
sarl
ss
mov
out
mov
or
hlt
loopne
xor
mov
sbb
push
push
and
cmpl
sub
loope
sub
hlt
dec
sub
adc
scas
mov
call
xchg
xlat
pop
xchg
inc
mov
and
fists
jecxz
dec
repnz
xchg
inc
xchg
xchg
jo
lret
mov
repz
sub
sub
push
dec
sbb
pushl
scas
push
pop
je
pop
xchg
pop
test
inc
push
xchg
loopne
pop
shl
cmp
sahf
insb
arpl
push
mov
insb
mov
lahf
bound
inc
lock
jnp
insb
xchg
pop
fs
mov
lahf
pop
sbbl
popa
jmp
mov
sbb
loopne
sbb
testb
dec
mov
add
xor
shlb
cmp
les
adc
aaa
hlt
fisttpl
out
iret
xlat
stos
mov
xchg
clc
jmp
outsl
ret
cmpsb
int
push
pop
xlat
mov
xchg
xor
sbbl
call
dec
les
jns
xlat
or
or
adc
mov
adc
pop
movl
inc
xchg
jns
jo
popa
mov
mov
idivb
out
aam
push
call
sbb
and
movsl
scas
xchg
fs
out
jb
movsl
add
out
inc
out
stos
cs
push
adc
inc
sti
sbb
mov
cmp
pop
inc
mov
cld
outsl
sub
cmc
mov
cltd
xor
mov
push
and
loop
out
push
loopne
add
or
test
inc
fistpl
shrb
push
frstor
outsl
and
push
pop
sub
lds
aad
cmpl
nop
xchg
inc
lods
lcall
and
xchg
orb
mov
pop
cmpsl
xchg
dec
xor
jmp
add
and
adc
lahf
xchg
inc
ficoml
jge
jb
dec
sub
shrl
adc
push
leave
pop
adc
add
jle
or
outsl
lea
inc
cwtl
pop
mov
out
cmc
push
shl
xor
pop
inc
stc
or
loope
pop
arpl
cmpb
movsb
repnz
lea
in
aam
sarb
or
daa
and
fstpt
pop
iret
jae
jne
mov
xchg
xchg
add
cld
dec
in
push
repnz
sbb
xor
out
adc
sub
incb
add
fucom
lds
cli
push
jmp
ja
fldt
and
push
push
sbb
sub
jge
inc
lods
mov
cmc
dec
mov
cmp
in
xlat
outsl
inc
ja
cmp
and
les
dec
jno
pop
pushl
inc
and
lock
clc
es
or
push
xchg
sbb
dec
shrb
mov
xor
in
sbb
sub
popf
adc
jp
test
sbbl
imul
push
call
cmpsl
ret
mov
dec
xchg
mov
into
dec
outsl
call
call
imul
and
lcall
fbld
lock
jmp
inc
ds
and
cmp
jb
js
cli
pop
js
insl
ljmp
sub
popa
call
mov
cwtl
cmpsb
test
pop
mov
pop
aam
in
test
dec
ds
add
jg
inc
jne
push
push
jecxz
sbb
xor
ret
sub
fnsave
push
notb
or
xor
mov
stos
sub
or
imul
jmp
dec
push
nop
jns
in
xor
xlat
mov
xchg
cmpsb
sub
sub
sete
hlt
pop
push
cli
rolb
jns
cmp
adc
sub
cmc
cmp
add
jns
pusha
pop
jl
pop
aaa
lcall
pop
in
test
mov
lods
pop
mov
in
flds
pop
sbb
pop
loope
adc
cmp
pop
cli
inc
sarb
sub
sub
sub
mov
pusha
mov
add
push
andl
sub
lea
lret
inc
inc
sub
movsb
test
cmp
adc
dec
outsl
mov
hlt
pop
push
inc
mov
push
ret
mov
add
or
pop
shrb
rcll
sahf
arpl
cmp
sub
jo
int3
jae
push
push
push
int3
push
out
loope
cmpsb
inc
sbb
fdiv
or
enter
sub
sub
jg
outsb
test
or
shl
fsubl
out
or
imul
jge
pop
das
out
add
pop
sub
inc
mov
fdivs
jg
and
jge
fwait
cmpsl
cmp
fwait
mov
ss
lea
dec
sub
add
dec
aam
dec
pop
mov
cli
jb
cmp
inc
dec
cmp
pusha
rcrb
jno
loopne
roll
lahf
paddq
fcompl
aas
push
mov
imul
bound
or
adc
pop
aad
push
imul
jp
sbb
push
rcll
jp
aad
movsl
add
mov
push
sub
add
in
insb
sbb
jecxz
mov
clc
je
imul
mov
sahf
xor
repz
sbb
and
adc
xchg
jnp
movsl
outsl
clc
mov
xor
add
and
dec
mul
stos
pop
xchg
dec
test
enter
cli
add
and
cld
test
xor
mov
cmp
push
jbe
xchg
testb
popl
int
lods
xor
xorl
mov
add
daa
xor
jbe
iret
inc
lcall
xlat
mov
cmp
repz
shl
jo
imul
jl
scas
xchg
bound
je
pop
mov
sbbl
std
push
popa
repz
rclb
lcall
adc
jbe
xor
jmp
rolb
stos
inc
and
xor
in
add
xorb
bound
push
dec
adc
inc
bound
stc
xchg
add
jae
and
addb
pushf
xor
adc
push
inc
push
rorl
hlt
pop
add
pop
fimuls
dec
and
adcl
int3
jne
loop
push
jmp
xor
inc
in
negb
pop
movsl
sahf
pop
test
fisubrs
jnp
mov
divw
dec
std
lahf
addr16
pop
cmpl
xor
push
movsb
shrb
push
dec
xchg
call
shlb
mov
jg
xchg
mov
mov
fsubrl
sahf
mov
sbb
int
add
add
divb
lcall
popl
loopne
sbb
adc
or
repz
xor
subb
sub
lahf
daa
repnz
sbb
dec
mov
cmp
and
add
dec
pop
dec
jnp
cmp
pop
scas
stc
hlt
pop
and
movsl
jns
sub
xor
cmp
jae
sub
xor
outsl
int3
adc
shll
test
repnz
fistl
cs
or
xchg
jb
pop
push
leave
loop
test
lcall
sub
pop
dec
outsb
js
sub
in
jbe
or
xor
loope
bound
adc
and
sti
repnz
fucomi
cld
cmp
rcl
pop
xor
adc
daa
jnp
imul
sub
pop
rolb
testl
inc
mov
xchg
test
insl
inc
arpl
movb
rcrl
fwait
popf
test
rorl
rorl
push
mov
cmpsl
mov
das
movsl
lahf
inc
pushf
cmp
push
out
cli
pop
in
pusha
shl
fstpt
pop
xor
mov
loope
mov
add
mov
popa
mov
shlb
lret
repz
dec
fbstp
scas
push
ret
add
mov
pop
gs
add
dec
out
pop
shll
loop
sbb
testl
push
not
loope
es
inc
dec
mov
xor
imul
jb
scas
mov
imull
mov
popa
jns
and
xor
jge
rcrl
push
sahf
out
xor
xchg
in
insl
popa
test
ljmp
xchg
xchg
xchg
rcr
add
push
sti
inc
in
loop
push
out
faddp
push
test
inc
cltd
mov
outsl
cs
adc
ret
mov
jno
pop
pop
ret
pop
inc
ss
bound
push
aad
jo
adcb
sbbl
mov
push
dec
mov
in
repnz
out
stos
addr16
push
and
xchg
adc
daa
sbb
xchg
sbb
insb
xor
mov
out
jmp
mov
push
add
inc
add
lds
cmpb
sar
pop
stos
mov
inc
dec
lcall
mov
lret
inc
sbb
addr16
inc
ret
mov
fisttpll
push
cld
lcall
repz
cld
pop
in
jmp
cmc
push
gs
in
push
add
sbb
adc
rclb
fisttps
inc
loop
mov
std
pop
and
jg
popf
push
jge
into
adc
xchg
jb
push
rorb
mov
add
xor
mov
cmpsl
xor
mov
adc
mov
ljmp
pop
imulb
int
in
push
js
dec
xor
cmp
inc
aad
xchg
inc
aad
lret
fwait
mov
or
int
stos
jbe
data16
push
sub
or
jge
jnp
push
stos
or
xchg
imul
shll
fs
inc
xor
push
adc
pop
jb
dec
shlb
mov
pop
test
and
test
lret
pushf
mov
test
fdivrs
hlt
inc
xchg
adc
inc
iret
adc
adc
sbb
hlt
add
add
shl
jecxz
repz
movsl
jp
dec
add
or
push
rcrb
in
ret
out
repz
mov
sti
in
out
fwait
das
cltd
xor
stos
add
ret
test
xchg
and
cwtl
xchg
jmp
out
inc
jo
and
adc
push
sub
out
aam
dec
aaa
cmp
in
xchg
push
dec
fldenv
clc
loope
cwtl
popa
cmp
pop
adc
jb
fimull
sbb
add
cld
inc
dec
stc
ror
daa
mov
les
loop
adc
outsl
sbb
mov
fcmovu
rcrb
imul
or
fcmovnb
mov
cmp
sbb
dec
insl
jg
xor
add
mov
push
mov
mov
push
jle
lock
sbb
mov
sub
mov
sbb
mov
insl
testl
push
push
xchg
add
insb
mov
sarb
adc
enter
imul
pop
lods
mov
out
dec
inc
das
mov
xor
pusha
xchg
cmpsl
cmp
jl
fistpll
mov
or
popa
arpl
jbe
push
cmp
shll
push
and
lahf
push
inc
push
pop
fdivs
lea
mov
xlat
aad
mov
push
sub
ret
ret
push
mov
lret
pop
stos
or
mov
lret
std
inc
gs
push
das
mov
fs
imul
jne
out
sarl
stc
jg
push
movsl
or
rol
xchg
adc
xchg
lds
fdivrs
jno
fnsave
addl
cltd
pop
outsl
dec
daa
dec
jecxz
jae
dec
adc
mov
dec
push
jbe
les
jp
sub
sbb
mov
rolb
jecxz
cmp
inc
cmp
repnz
sar
jb
inc
mov
mov
xor
enter
adcl
decb
in
inc
loope
or
jge
jmp
xchg
push
sub
es
jae
std
clc
push
sti
jp
dec
outsb
xchg
pop
adc
push
jp
out
imul
arpl
fwait
mov
movsb
in
jne
rorb
int3
popa
mov
fs
sub
or
daa
icebp
xchg
sub
mov
out
and
and
xorl
pushf
add
xor
sub
and
lea
shlb
or
cmp
sub
pop
xchg
mov
lahf
repz
add
pop
lahf
out
jne
add
jp
pop
orb
xor
inc
scas
pushf
mov
nop
adc
lret
sub
push
jl
stc
inc
mov
inc
adc
sbb
lahf
jge
mov
pop
mov
lret
arpl
repz
cmp
negl
out
or
roll
hlt
fldenv
test
into
lret
push
xchg
cltd
sub
inc
mov
push
adc
daa
lea
adc
cmp
lock
out
sbb
aaa
or
into
sbbb
or
dec
std
addl
xchg
jge
aad
cld
shrl
std
xchg
pop
sbb
cmpsl
in
mov
scas
inc
push
inc
or
pop
xor
jno
pop
push
in
cltd
sub
sub
mov
cmp
popf
cld
aaa
movsb
int
loope
dec
xor
mov
ja
sbb
xor
sbb
aad
and
dec
adc
inc
add
fstpl
in
sti
loopne
jo
hlt
dec
hlt
andb
repz
add
popf
repz
ljmp
fidivs
mov
mov
or
fs
fbld
lcall
sbb
dec
insl
daa
inc
jns
inc
inc
js
lea
add
sub
mov
shrb
or
cmp
mov
dec
mov
or
aad
movsl
mov
aam
dec
ljmp
movsb
movsb
push
into
les
lret
sti
ret
add
or
loope
jle
inc
jmp
idivb
cltd
mov
lahf
sbb
aam
lock
fucomi
fistpll
push
and
dec
rolb
les
aam
shlb
repz
mov
adc
test
insl
inc
jnp
leave
lods
or
xor
jmp
cmpsb
xchg
insb
fnstsw
xchg
sbb
or
cmpl
xorb
je
fstl
add
out
and
negb
push
xchg
scas
das
enter
inc
fldenv
push
outsl
in
or
stc
ds
ret
xor
fincstp
test
cmp
xor
les
call
xchg
or
push
cs
pop
xchg
popf
shll
push
imul
int3
sub
jae
jno
pop
out
stc
mov
fidivl
inc
xor
icebp
andl
push
daa
test
xchg
jecxz
leave
jo
adcb
inc
insb
xchg
add
fnstenv
sbb
mov
inc
testl
dec
adc
pop
out
lea
into
scas
add
stos
xchg
scas
lret
sbb
xorb
sub
hlt
pop
iret
fwait
jg
and
mov
inc
mov
lret
push
adc
or
mov
and
pop
pop
cmp
call
cmpsb
arpl
xorl
rorl
or
xlat
mov
dec
or
mov
bound
ret
lods
pop
add
pop
pusha
or
scas
xchg
mov
sub
sub
add
pop
inc
mov
cvtps2pi
xchg
adc
sbb
icebp
aas
repnz
xor
push
xchg
loopne
aad
flds
aas
cs
and
ljmp
mov
cmp
lahf
fs
mov
inc
out
inc
lret
jae
mov
xchg
pop
aas
sub
sti
es
insl
pushf
xchg
gs
cmc
call
es
jo
out
or
push
les
sbb
bound
lcall
mov
sub
fnstsw
sti
stc
sbb
adc
and
cmp
adc
mov
or
push
mov
ret
adc
enter
rcrl
fs
xchg
mov
stos
dec
and
shlb
into
mov
lahf
and
adc
arpl
push
scas
and
call
fisubl
xor
outsb
out
sbb
test
js
xor
fidivs
pop
add
xchg
jmp
lret
shlb
sahf
fiaddl
test
sub
fnstcw
sub
sbb
out
push
orb
push
mov
cli
jg
ret
nop
je
pop
call
lahf
pop
xor
lahf
cld
jg
mov
dec
jecxz
mov
mov
cwtl
adc
add
inc
movsl
jge
xchg
dec
mov
test
jmp
mov
daa
faddl
fdivs
lds
loope
pusha
inc
or
adc
shlb
out
test
aam
mov
outsb
hlt
xor
lods
fcmovnu
in
inc
adc
mov
cltd
pushf
add
adc
sbb
inc
mov
dec
stc
shrb
mov
insl
subb
in
pop
pop
pushf
sub
cmp
inc
aad
nop
shll
sub
mov
aad
and
xchg
cwtl
in
sarl
push
cmp
int
xor
test
xorb
roll
and
jnp
fs
and
in
jg
mov
xchg
test
in
loop
jb
jns
sbb
insb
test
sbb
loope
out
or
lock
inc
jmp
jo
fwait
or
pxor
notb
fimuls
mov
jbe
add
sub
insl
cmpsl
daa
incb
ja
xchg
jo
xlat
je
lret
leave
sub
jge
dec
dec
mov
test
mov
es
pushf
cltd
cltd
dec
ja
and
pop
jnp
jp
bound
pop
bound
inc
mov
pop
addb
add
lret
ficompl
mov
out
jb
outsl
push
dec
shlb
adc
sbb
mov
pop
add
dec
sub
jb
dec
daa
xor
inc
call
and
sub
cld
bound
lock
insl
aad
adc
lea
add
das
dec
xor
inc
push
adc
cmp
push
ret
ficoml
pop
xchg
or
jbe
addr16
sub
popw
icebp
xchg
test
xor
xchg
or
jmp
jmp
xchg
int
dec
mov
lret
and
jbe
cwtl
test
jae
jl
pop
daa
push
decl
pop
push
and
loopne
insb
xchg
mov
adc
icebp
pop
jo
clc
xor
jecxz
ret
cmp
imulb
xlat
inc
mov
mov
out
mov
dec
and
mov
clc
dec
mov
lcall
jb
out
mov
test
mov
loope
popa
sahf
mov
stc
inc
in
clc
in
jbe
pop
imull
mov
outsb
shr
fwait
popf
mov
test
or
jmp
or
das
add
insb
cmpsb
dec
leave
sti
dec
mov
jo
mov
xor
ds
pop
test
cmp
mov
leave
je
sub
inc
repnz
lods
mov
push
xchg
sub
and
lock
lcall
aam
sbb
std
push
push
mov
push
in
movsl
ljmp
mov
xchg
daa
jo
sti
add
cmp
cmp
add
stc
jmp
cs
loop
iret
mov
pop
add
jbe
and
add
fisubl
sahf
in
orl
add
jp
dec
cli
dec
cmp
ficompl
pop
jle
sbb
ds
push
test
sub
test
mov
lahf
lds
dec
pusha
add
cmpsl
jno
cs
cmp
jmp
es
fidivl
xchg
loopne
pop
out
test
jns
mov
imul
fidivs
sbb
mov
cwtl
negb
jg
js
out
adc
and
hlt
flds
push
sub
fldcw
adc
fistpl
pop
sub
iret
cs
sbb
or
xchg
and
aad
push
push
mov
mov
mov
ja
nop
xchg
adc
stos
mov
fsincos
and
xor
subl
btr
xchg
xchg
icebp
or
shrl
mov
aas
test
adc
lods
mov
jge
add
and
loop
icebp
in
outsb
data16
add
xor
lret
mov
inc
dec
int
pop
int3
adc
mov
jmp
aas
mov
clc
out
test
mov
scas
rolb
push
scas
ljmp
push
out
pop
pop
mov
jnp
sub
outsl
mov
in
sbb
loopne
inc
pop
push
mov
inc
leave
xchg
arpl
xchg
shlb
cmp
add
shr
test
jbe
pop
adc
and
notl
movsb
rcr
aad
rorb
outsl
orb
push
test
dec
outsl
aam
and
sbb
mov
lds
and
inc
xchg
pop
xchg
fucomip
ret
cwtl
lds
xchg
mov
popf
mov
gs
jmp
adcl
jle
cltd
in
fcompl
js
push
dec
cmp
aad
sub
cwtl
push
cmp
sbb
xor
adc
jb
mov
and
std
or
and
and
mov
ds
cmpsl
push
imul
push
dec
jnp
int
fbld
mov
jbe
insl
shll
jo
cli
iret
adc
pusha
cmp
and
out
xor
cli
scas
cmpsl
fs
cmp
lcall
mov
inc
lods
insb
cli
in
jb
xchg
dec
dec
xor
dec
and
ret
mov
sahf
sbb
mov
fimull
cmp
dec
push
push
mov
cwtl
push
pop
lods
pop
mov
jne
adc
stos
sub
sbb
or
in
orb
int3
rorb
mov
push
int3
xchg
xlat
fs
mov
xor
push
in
push
lcall
in
adc
inc
or
mov
sbb
ret
pushf
mov
pop
es
cmp
dec
xchg
or
jne
add
es
sub
insl
fildll
out
cmpsl
dec
dec
hlt
inc
dec
stc
cmpsl
shr
rorb
pushf
aam
pop
or
jbe
mov
push
loopne
jne
ljmp
call
popf
popa
or
adc
loopne
sub
xchg
inc
shrl
call
xchg
jae
or
test
insb
push
subb
faddl
imul
push
ret
fdivl
mov
cmpsb
inc
cmp
xor
std
mov
dec
sub
cmc
mov
mov
add
cmc
call
cmpsl
mov
movsl
inc
cltd
test
js
inc
loope
xchg
test
lcall
das
cwtl
dec
inc
push
cmp
es
into
add
adc
orb
push
data16
jg
call
mov
imul
call
and
sub
push
pop
jbe
aas
jae
mov
inc
cmp
adc
inc
out
mov
pushf
out
push
xchg
xchg
mov
ret
jmp
dec
addl
pop
inc
cltd
or
les
pop
sub
stos
mov
xchg
push
andb
add
in
sub
out
stos
pusha
in
mov
add
sub
cmp
mov
mov
jg
lret
or
mov
dec
xchg
rcrl
xchg
dec
orb
mov
pop
cmp
and
repnz
cmpsb
aaa
popa
and
hlt
ljmp
pop
out
xor
or
mov
mov
jne
mov
sbb
popa
data16
sub
insb
in
xchg
push
inc
jl
mov
out
iret
pop
push
bound
dec
inc
jo
jge
lea
out
pop
cmp
pop
fists
jge
pushl
cli
adc
mov
or
ss
or
mov
mov
sbb
test
mov
out
pop
mov
jmp
mov
push
xchg
inc
cld
insb
xchg
xor
xor
mov
xor
adc
pop
out
orb
aas
pop
daa
sbb
or
or
jg
xlat
out
arpl
jns
or
fdivs
rcll
sbb
negb
xor
fwait
xor
add
pop
adc
pop
hlt
mov
shlb
add
xchg
xchg
lock
ss
insb
mov
sbb
mov
mov
aaa
or
cmp
adc
push
into
popf
cltd
sbb
jne
xchg
xchg
push
fs
scas
inc
inc
cmpsl
leave
ja
je
pop
fs
jmp
xor
leave
out
mov
push
lcall
std
dec
pop
aaa
in
insl
dec
adc
inc
pop
pop
xor
das
in
adc
push
outsb
sub
sub
subl
loop
fstpt
inc
leave
sbb
es
dec
rcrl
sub
inc
shrb
fs
push
xchg
add
mov
xlat
and
sbb
jle
outsb
mov
out
mov
xchg
into
fildll
lock
inc
test
push
push
lods
adc
scas
adcl
mov
mov
int3
stc
setge
negl
imul
pop
mov
pushf
mov
push
mov
push
dec
in
rep
pop
arpl
jp
push
aaa
mov
jmp
mov
fmuls
dec
pop
js
dec
test
mov
jnp
add
sbb
cld
mov
mov
insb
or
sbb
jecxz
cmp
or
xchg
mov
cmp
cmp
out
movsb
pop
sbb
dec
rcrb
dec
lret
add
dec
ja
subl
lods
jo
outsl
push
in
ret
dec
mov
out
sub
gs
lcall
add
xor
mov
jo
aam
add
mov
daa
ret
cmc
lahf
out
in
rcrl
xor
jne
pop
push
fildl
sub
adc
lods
in
mov
sub
sub
imulb
mov
sub
inc
je
cmp
mov
imul
sub
inc
scas
fdivs
adc
fimuls
fs
add
cwtl
test
clc
bound
push
scas
dec
mov
xchg
loope
or
sub
mov
outsb
lods
sbbl
sbb
sub
popa
mov
scas
insl
mov
adc
fsub
clc
jns
insb
push
push
jb
mov
enter
icebp
outsl
xchg
stos
fstps
pop
xor
repnz
andb
fiadds
add
lock
ftst
push
cld
imul
dec
lds
insl
jmp
in
mov
mov
sbb
ljmp
dec
mov
movsl
fbld
imul
cli
lods
push
xchg
jg
test
outsb
dec
imul
xchg
add
push
jmp
es
push
mov
lds
mov
dec
call
mov
test
sbb
repz
sub
or
cltd
xchg
mov
jbe
mov
addl
mov
dec
leave
lock
add
je
ss
mov
mov
lahf
es
scas
mov
fisttpl
stos
cmpsb
adc
or
das
outsl
xor
imul
jg
rolb
add
lds
aad
xor
and
cmpsl
mov
xchg
test
and
push
adc
cmpsb
jo
inc
lods
into
arpl
add
dec
push
js
cli
sub
xchg
sub
clc
adc
add
or
pop
out
jmp
mov
sub
mov
cmpsb
shll
jl
cld
mov
in
testb
lea
je
and
lret
mov
sub
inc
int3
cmp
sub
mov
mov
or
pusha
dec
and
aas
jle
adc
jg
sub
pushf
jns
clc
dec
repz
in
mov
cwtl
xchg
scas
in
mov
jl
lods
in
lcall
cli
insb
xchg
push
cwtl
mov
adc
int3
ss
jbe
sbb
fimull
sub
mov
mov
xchg
jae
inc
and
sbb
loopne
test
sahf
and
cld
push
mov
nop
add
adc
xorb
jo
int3
sbb
mov
ja
cs
or
xor
fwait
popa
dec
jmp
mov
rorb
add
dec
shr
repnz
push
adc
mov
cmp
cmp
lods
xchg
insb
xor
mov
sbb
stos
lahf
and
mov
outsl
mov
cmp
mov
adc
and
jb
jmp
push
arpl
pop
cmc
adc
data16
outsb
cmp
dec
inc
mov
popa
repz
adc
call
out
nop
out
popa
xor
test
cld
pop
stos
in
pop
jb
add
js
popf
fwait
jne
scas
movsl
out
cmp
insb
sahf
mov
push
pop
daa
xlat
lcall
movsl
xchg
pause
inc
xor
jmp
inc
pop
dec
punpcklbw
and
mov
mov
jle,pt
sub
andb
scas
fwait
push
in
mov
adc
xchg
push
sub
aam
mov
sbb
fadd
adc
leave
xchg
imul
mov
sbb
mov
mov
ret
cs
sbb
pop
aam
adc
das
xor
push
int
xlat
data16
or
in
mov
mov
mov
imulb
loopne
insl
in
in
mov
test
add
outsl
sahf
testb
jle
pop
cmp
in
fldenv
test
pop
ljmp
adc
test
js
jmp
xlat
lea
leave
outsl
leave
cld
daa
push
punpcklwd
xchg
mov
push
dec
or
sub
mov
xchg
cmp
push
test
pop
inc
cmpsl
fcmovb
or
xchg
sub
icebp
pop
push
mov
mov
ss
xor
cmp
jg
mov
and
repz
loopne
inc
fcomp
sub
or
mov
xor
push
nop
and
sub
mov
fsubrl
push
daa
bnd
negl
repz
mov
movb
dec
push
test
xor
mov
pop
and
loope
shlb
jns
mov
xor
adc
and
cmp
sbb
jbe
sub
or
mov
mov
movsb
pop
pop
sarb
push
cmpsl
jg
mov
test
or
scas
pop
fisttpl
jge
xchg
out
dec
ss
ret
and
mov
pop
loop
xor
aad
lahf
in
inc
ret
dec
cwtl
clc
mov
and
bound
add
imul
sti
xor
pop
scas
pusha
cltd
pop
xchg
jb
test
js
sub
shll
popf
cs
cmp
daa
sub
push
movsl
pop
cli
or
test
inc
daa
pusha
xchg
arpl
movsb
add
fdivrs
cs
add
add
popf
mov
or
aas
xor
inc
mov
stc
lods
ror
jg
jnp
pop
sbb
sub
icebp
jne
mov
mov
jmp
cmp
fisttpl
imul
lea
mov
popa
xchg
jl
mov
and
sub
xchg
cmp
pop
adc
add
pusha
in
sbb
jmp
ret
fimuls
call
shrb
ficoms
stos
mov
test
dec
pop
loop
pop
nop
movl
aas
cmc
rcrl
fwait
mov
arpl
loope
imul
xchg
lea
pop
call
neg
imul
adc
ja
and
or
add
mov
push
repnz
jno
scas
xchg
pop
xlat
push
mov
lea
xchg
sub
xchg
leave
adc
int3
subb
ja
pop
push
and
add
sub
imul
cwtl
xchg
int3
cmp
mov
mov
popa
sar
rorl
int3
pop
mov
jecxz
psubusb
js
push
jge
icebp
or
ror
push
fimull
mov
imul
loop
xchg
mov
pushf
data16
aas
xchg
push
xor
fs
jb
insl
and
mov
and
adc
lret
lods
jo
jo
sub
sub
xchg
ja
shl
divb
xor
mov
fwait
cmp
mov
sahf
sub
test
push
iret
jl
sbb
cmp
jno
sub
cmp
test
xchg
lcall
aaa
mov
cs
and
cmp
std
gs
pop
cmp
sbb
stc
sub
add
push
int3
and
push
ds
outsb
push
out
xor
ret
push
pop
mov
mov
popf
xchg
or
lea
jle
aad
mov
bound
sti
enter
and
xor
xlat
roll
add
mov
jns
aad
xchg
add
cmp
fisubrl
add
sbbl
jl
test
xchg
aas
inc
xchg
pop
push
cli
cmpsl
ret
jp
inc
jle
fisubl
sub
mov
cmp
js
addr16
mov
test
push
and
mov
jns
xor
les
push
in
lods
pushf
arpl
jo
sub
flds
xor
out
ljmp
xchg
lret
or
mov
lods
inc
adc
mov
cmc
repz
xchg
cmp
adc
data16
pusha
fisttpl
aad
mov
das
cmp
cmpl
jb
pop
lret
out
out
push
cmp
pop
shlb
ja
js
aaa
xor
rorl
and
stc
fldenv
mov
push
jo
pop
out
cmp
dec
jge
ja,pt
test
lock
in
mov
jbe
in
mulb
cwtl
adc
xorb
clc
inc
decl
aaa
push
movsb
and
int
sahf
je
imul
mov
cli
jge
shrl
or
aam
mov
test
popa
jmp
pushf
icebp
mov
push
and
sarb
mov
or
push
and
les
cmc
mov
iret
popa
sbb
fstps
cltd
aas
ret
mov
mov
pop
xchg
shr
ds
inc
pushf
ret
cmp
aad
enter
xor
pushf
fcmovnb
stos
xor
test
daa
xchg
push
push
xchg
push
rolb
pop
xor
pop
mov
test
lds
stc
sub
movsb
push
fnsave
cmp
cwtl
adcb
outsl
add
fidivrl
mov
mov
lods
jg
in
inc
cwtl
repz
mov
js,pn
cmp
adcl
aaa
subl
jo
jo
lds
fs
inc
js
daa
shrb
mov
fists
xchg
bound
pop
or
test
pop
inc
cwtl
mov
adc
dec
pop
pop
into
sub
aam
in
jns
sbb
fwait
sbb
xor
xchg
outsl
xor
imul
sub
sbb
mov
ret
mov
ret
jmp
mov
xchg
adc
addr16
and
adc
fisubrl
and
cli
ror
jo
sti
ret
mov
mov
mov
jbe
in
push
add
rcll
push
fyl2x
sub
hlt
mov
clc
xchg
mov
jb
hlt
sbb
aaa
adc
push
pop
std
lahf
test
les
pop
cs
rcrb
and
dec
fbstp
jae
jnp
dec
leave
imull
push
aam
ret
pop
xorl
mov
cmc
or
cltd
push
dec
in
or
or
filds
ljmp
pop
fisttps
push
insl
cmpsb
xchg
xchg
lods
dec
mov
or
pushf
mov
xchg
sbbl
notb
xchg
subl
pop
cltd
xor
xchg
sbb
je
mov
roll
aas
adc
les
adc
xor
sbb
enter
cli
dec
push
add
mov
imull
cmpb
pop
fisttpll
fimuls
mov
inc
mov
push
movsb
sub
and
and
ret
add
test
popf
fs
dec
pop
sbb
pop
jg
xor
into
arpl
cmpsb
and
outsb
imul
sub
add
push
leave
sub
xor
jg
push
and
mov
mov
call
cld
xlat
jns
out
dec
or
dec
pop
aas
fldt
push
lea
int
mov
sub
push
xchg
inc
daa
int3
bound
pop
leave
imul
fisubs
sbb
lods
mov
shll
pusha
push
pop
in
adc
pop
je
fldl
mov
dec
icebp
inc
push
out
cmc
ret
mov
and
scas
cmp
mov
outsb
nop
and
mov
js
lock
mov
push
out
test
cs
xor
hlt
sub
lods
mov
push
dec
loop
mov
movsb
test
stc
push
sbb
lret
mov
sbb
pop
lds
mov
inc
and
pop
pop
into
adc
popf
jo
mov
cmc
add
dec
fwait
aas
push
adc
or
lahf
lcall
add
sbb
xor
sbb
lahf
cli
faddl
fimull
mov
xchg
sub
or
dec
das
xor
hlt
mov
pop
stos
lods
insb
push
xchg
pop
fxch
sub
outsb
push
movl
inc
outsb
pusha
xlat
cld
pop
repnz
popa
pop
notb
push
lods
mov
lds
mov
fs
lret
adc
fcmovb
fstps
mov
xlat
out
rcll
test
adc
movl
rolb
movsl
pinsrw
and
scas
std
or
clc
mov
iret
bound
fisttpll
cmp
dec
stc
jecxz
sub
lods
shlb
xchg
jge
sbb
mov
xchg
jl
cwtl
iret
add
lcall
mov
popa
mov
dec
mov
mov
fsubrp
lea
push
jmp
lods
mov
inc
test
inc
loopnew
jl
inc
in
fidivrs
jne
stos
repnz
loop
cld
inc
adc
lock
xor
arpl
sbb
cmp
call
xor
stos
lds
mov
fiadds
idivb
jbe
test
out
xchg
push
repz
push
imul
add
popa
adc
or
dec
mov
sbb
xchg
inc
mov
mov
nop
push
sar
loopne
mov
inc
push
mov
dec
enter
ss
adcl
pop
or
and
adc
das
das
repnz
xor
movsl
andb
xchg
inc
lret
xor
mov
in
es
cmp
lret
arpl
popa
mov
lcall
pop
or
push
pop
xchg
lahf
pusha
or
decl
xor
cs
loopne
movsb
add
push
dec
fcmovnb
enter
hlt
stc
je
mov
mov
xchg
fisubrl
movsl
xchg
dec
mov
pop
fnstsw
or
fmuls
adc
test
sub
popa
adc
cmp
xchg
jns
sub
and
lret
ficoms
xchg
sub
push
push
orb
rcr
loopne
jnp
xchg
outsl
lret
sub
pop
popf
mov
ret
or
js
sbb
cmpsb
fistpl
imul
add
insb
sbb
add
inc
insl
loop
outsb
push
push
sub
mov
add
jne
test
adc
aam
xlat
movsl
push
sbb
mov
ljmp
pop
test
adc
jbe
cltd
fsts
loop
sahf
nop
test
into
sbb
pop
xor
fisubs
sub
mov
mov
test
sub
mov
leave
mov
push
cmp
mov
in
out
mov
and
pop
cld
and
cld
in
mov
das
inc
mov
jno
jmp
sbb
and
stc
out
inc
mov
shl
imul
pusha
jae
jno
adc
mov
shrl
pop
adcb
repz
int3
scas
scas
popa
rcll
or
sub
lret
pop
and
rcll
cmp
mov
mov
movsb
mov
and
out
call
push
das
pop
xchg
adc
sbb
leave
dec
cs
cmpb
pusha
popf
iret
fs
lret
mov
ror
pop
fisubl
pop
inc
xchg
rorb
loopne
jbe
push
rclb
shrb
lcall
inc
fadds
cmc
push
ret
dec
dec
mov
dec
sahf
loopne
mov
inc
inc
mov
fldz
in
xlat
xchg
mov
push
addr16
dec
mov
dec
cmc
mov
aas
ret
in
jge
cmp
mov
sbb
xor
shlb
jns
mov
out
pop
jl
mov
lret
push
mov
xor
call
xchg
xchg
xor
leave
mov
shl
pop
les
mov
cmpsl
xor
or
cmp
mov
sbb
fcoms
mov
cmp
dec
sbb
loop
or
lret
mov
jmp
pop
mov
subl
cld
pop
call
mov
mov
out
jl
mov
sub
xchg
jmp
test
xchg
test
insb
jnp
fcoms
insb
and
lods
mov
xor
lds
and
sbb
mov
inc
cmp
xchg
lcall
lds
fistps
add
jae
xchg
nop
jle
mov
subb
xor
jnp
test
insl
mov
sub
mov
cmp
scas
or
jns
test
lcall
loop
inc
inc
repnz
inc
pop
inc
pop
inc
pop
sub
arpl
pop
push
dec
aas
sbbb
mov
inc
jmp
out
cmpsb
and
dec
inc
ljmp
mov
ljmp
jecxz
ljmp
push
push
sub
es
scas
cmpsb
shlb
inc
leave
bound
ss
lock
shrb
dec
xor
cmpsl
les
push
lahf
mov
pusha
shrb
pop
insb
sub
std
jecxz
cmp
inc
xchg
xchg
dec
mov
cmpsb
and
dec
test
pop
hlt
call
adc
push
mov
push
mov
sbbl
cmc
dec
ror
sbb
ds
mov
push
xchg
mov
int3
xchg
inc
test
cmp
mov
clc
aad
mov
mov
jg
gs
and
pop
jmp
mov
mov
cli
scas
xor
jbe
xor
mov
sub
adc
fwait
mov
testb
jge
dec
mov
mov
cmpsb
add
mov
mov
mov
push
sub
cmpsb
mov
dec
mov
loope
push
inc
les
ljmp
and
mov
dec
int3
xchg
movsl
es
mov
out
loop
sub
cmp
cmp
mov
fwait
dec
stos
mov
inc
pop
and
sub
add
push
mov
std
mov
aam
inc
jo
push
pusha
jo
ret
pop
push
ret
fisttps
mov
push
mov
push
repz
mov
xchg
xlat
cmpsb
out
hlt
into
xchg
pop
push
jg
lods
lahf
rcr
bound
push
xchg
and
mov
loop
loopne
jge
sub
js
cmpl
lcall
test
pop
add
mov
js
lret
test
popf
imul
dec
jo
pop
into
das
out
sbb
xor
jge
push
inc
out
inc
lcall
mov
arpl
fsubl
imul
fucomip
test
xchg
sbb
popa
mov
fsubl
sahf
mov
sub
daa
mov
cli
mov
mov
jle
mov
js
add
add
or
inc
test
sub
inc
pop
and
shrl
int
xchg
mov
sbb
or
mov
push
xor
lods
xchg
xor
mov
daa
inc
test
xor
pop
add
mov
movsb
and
mov
sbb
push
push
mov
loope
xchg
xchg
hlt
movsl
jecxz
roll
test
sti
imul
shl
mov
lds
xor
cmp
movsb
xor
sbb
jns
xchg
scas
inc
cld
xor
push
pusha
cmp
pop
mov
test
loopne
jl
arpl
dec
mov
sbb
cltd
xor
out
stc
mov
add
mov
mov
insl
pop
jl
subb
push
xchg
loopne
inc
add
scas
mov
sub
xlat
add
cwtl
push
xor
dec
icebp
hlt
push
orl
cmc
mov
outsl
jo
popw
sbb
popa
adc
rorb
repnz
dec
pop
into
sub
sbb
hlt
repz
cmp
mov
xchg
or
pop
push
test
imull
xchg
jae
ss
jge
bound
in
push
jge
jp
out
notl
sarl
and
lcall
arpl
xor
xchg
iret
cmp
cmp
movsl
add
pop
into
rcrb
iret
inc
into
sbb
sub
jne
inc
emms
mov
ja
jmp
shr
inc
push
inc
adc
lds
xchg
arpl
mov
push
cwtl
xlat
out
sbb
fwait
repz
push
pop
inc
mov
popf
mov
mov
enter
dec
cmc
and
cmp
hlt
test
mov
adc
lcall
mov
repz
pushf
jg
in
mov
sub
cmpsl
xchg
dec
fsubr
add
aad
aas
dec
in
inc
add
cmp
repnz
mov
push
je
mov
or
cli
push
push
out
and
push
sbb
ja
loopne
dec
dec
call
sarb
add
jl
imul
adc
push
out
inc
aad
jge
add
repz
sbbl
xchg
fcom
jno
int3
jl
push
in
add
orb
push
xchg
insb
lahf
add
mov
mov
or
outsl
lods
lcall
cwtl
mov
push
ljmp
xchg
jg
ja
fistpll
jno
add
xlat
popa
pop
lock
push
arpl
out
es
movsl
aam
cmc
ds
and
and
pop
push
push
cs
xchg
dec
adc
sub
sbb
sub
or
inc
cld
cmc
lods
neg
lods
outsb
inc
test
push
jae
enter
xlat
xchg
jae
fistpll
scas
rcrl
mov
and
or
imul
push
test
add
or
std
test
mov
out
mov
xchg
add
lods
mov
iret
into
das
pop
pop
outsb
xchg
cwtl
cmpsb
lret
stos
aaa
sahf
in
sub
stos
cli
call
aad
test
ret
dec
and
pop
test
repnz
jno
fnstcw
ljmp
and
das
cmp
push
inc
ficoms
shrb
fstpt
sub
jo
and
xchg
xchg
std
loopne
push
test
andl
xor
xchg
sub
push
shr
loop
xchg
pop
mov
jo
ljmp
repz
das
mov
jle
and
insb
mov
sbb
dec
sbb
xchg
in
cli
daa
xchg
and
sub
inc
in
mov
jb
push
add
push
and
inc
pop
mov
lock
mov
xchg
scas
rolb
mov
pop
sub
mull
add
fwait
repnz
clc
and
push
mov
fcomps
xchg
xor
je
out
mov
mov
jns
mov
inc
cs
cmp
xor
xchg
push
adc
arpl
xchg
dec
cltd
pop
test
jl
jno
in
cli
movsl
xchg
adc
inc
lds
add
cmp
xchg
sbb
add
sbb
sti
sub
jbe
test
mov
push
imul
mov
or
cwtl
and
pop
lgs
les
in
arpl
movsb
fimuls
movsl
xchg
pop
das
leave
scas
jmp
inc
mov
xor
add
and
jmp
mov
jl
cmpsl
cmp
lock
cltd
mov
daa
cmc
movsl
imul
pushf
daa
push
divb
cmovns
mov
orl
fistps
inc
out
loop
pusha
and
pop
insb
jbe
xchg
lret
sbb
or
pusha
dec
mov
push
cmc
in
pop
xlat
cmpb
fsubl
cld
ret
xor
jecxz
shll
and
fadd
xor
ja
int
addr16
jg
xchg
cli
mov
outsb
arpl
arpl
out
and
xchg
insl
nopl
xchg
dec
cmc
or
adc
insb
cmpsl
testb
jge,pn
mov
je
lea
jmp
mov
pop
jecxz
test
ljmp
pop
sbb
cmp
adc
fldcw
lds
lods
add
pop
scas
xor
inc
mov
cld
mov
fbld
jmp
jns
inc
adc
addr16
sbb
imulb
sub
cmp
popa
scas
add
cmp
xchg
xchg
faddl
jne
cltd
je
mov
jle
pushf
mov
ret
sbb
push
jg
arpl
fs
inc
pop
jnp
insb
mov
stos
xchg
fsts
pop
sub
mov
js
in
jnp
jns
sbb
xchg
insb
fcoms
mov
jge
push
adc
dec
cmp
inc
test
ja
mov
xchg
push
mov
iret
bound
cmp
fisubs
dec
inc
fildll
in
int3
movsl
cltd
inc
pop
mov
push
push
mov
movsl
inc
sub
loop
sbb
pushf
sub
mov
inc
into
adc
xchg
xchg
xchg
xchg
lahf
cmp
sub
and
ret
pop
jl
sub
in
jbe
dec
sub
push
xor
xor
push
pop
sbb
push
sti
leave
rorb
test
fsubrl
outsb
push
jg
xlat
pop
out
cmc
je
sbb
push
int
inc
sbb
dec
dec
fbld
rclb
inc
int
in
mov
cmp
mov
pop
shlb
pop
lea
mov
xor
xchg
popl
mov
sub
lea
mov
sbb
daa
push
adc
in
lea
jl
jae
outsl
icebp
bound
pop
popf
lock
sahf
mov
or
cmpsl
cmp
scas
and
mov
dec
push
sbb
lret
in
and
mov
repnz
jbe
scas
add
and
out
sbb
sbb
jbe
mov
jl
test
xor
pop
fbstp
jmp
gs
sbb
jbe
pop
faddl
sbb
lcall
test
sub
cmc
and
or
leave
mov
int
popa
add
mov
loop
inc
xchg
and
xchg
mov
loopne
sub
outsl
bound
and
inc
js
dec
dec
ljmp
sbb
es
roll
lea
bound
sbb
xor
stc
push
mov
adc
imul
outsb
rorl
call
lods
mov
sub
cli
lock
push
dec
shlb
sub
xor
jbe
in
nop
fwait
mov
push
rcll
sub
push
into
dec
je
inc
adc
pop
pop
add
cmp
out
and
testb
adc
push
in
pop
sub
cmp
gs
xchg
mov
int3
int3
in
dec
adc
call
dec
lret
adc
fnsave
loop
into
ret
push
cwtl
stc
mov
xor
dec
sbb
mov
push
pushw
lods
jge
or
xchg
jb
pop
fisttps
dec
jecxz
nop
mov
ja
ljmp
aad
pop
icebp
fimuls
imul
popa
add
jns
cli
add
pop
xchg
movsb
jae
mov
sbb
aaa
sti
mov
dec
mov
movsb
mov
adc
inc
xor
push
stc
enter
xchg
push
insl
and
andb
cmp
arpl
lret
inc
cmp
bound
jns
adc
and
loopne
mov
dec
lahf
push
xchg
pop
mov
jnp
mov
cmp
sub
stc
xchg
insb
sub
mov
mov
mov
stc
test
clc
jg
mov
into
xchg
cmc
js
xchg
leave
test
adc
push
rcll
adc
pop
lea
enter
sbb
mov
jmp
mov
outsl
pop
xchg
mov
lar
sbb
es
cwtl
daa
rcll
out
test
ds
popl
ffree
je
testl
mov
or
repz
pop
movsl
push
in
daa
scas
mov
mov
push
xchg
and
pop
pop
cmp
int
inc
ljmp
bound
adc
test
ret
leave
mov
sarl
jmp
jl
leave
mov
dec
xchg
push
mov
rcrl
mov
xchg
popf
push
mov
lcall
pop
mov
xchg
adc
xor
lret
and
jmpw
push
mov
out
jne
addr16
aad
add
xchg
scas
push
ret
sub
addr16
cmpsl
lds
cmp
subb
dec
sub
dec
arpl
xchg
pop
fwait
out
pop
outsl
mov
mov
scas
popa
ret
cwtl
ss
and
mov
sub
ljmp
mov
pusha
xor
pop
mov
in
pop
pop
xlat
rorb
pop
xlat
gs
xchg
xor
ss
mov
inc
and
ret
addl
sub
call
jecxz
push
loop
add
pop
lds
inc
das
jne
inc
arpl
xchg
movsb
loope
sub
ja
cld
fcoms
ljmp
sub
push
test
out
jp
jecxz
xchg
jne
mov
sbb
popf
mov
test
in
dec
xor
xchg
aam
xorl
aad
ss
xor
add
stos
shlb
and
into
xchg
ss
mov
outsl
dec
scas
jmp
lret
scas
subb
sub
jae
movsl
es
aaa
xchg
ret
test
fsubrs
addb
cmp
es
cmp
xchg
repnz
test
nop
imul
sbb
int
cs
cmp
je
lds
lds
mov
cmp
pop
fcmovnbe
fists
add
push
mov
mov
xchg
xor
mov
inc
jle
mov
test
sbb
jp
sub
pop
inc
js
adc
push
mov
push
mov
push
mov
xchg
xchg
int3
imul
add
imul
je
in
sub
pop
or
pop
push
mov
cmpsb
imul
fs
enter
repnz
mov
pop
cli
mov
arpl
bound
mov
mov
rclb
add
lcall
push
js
push
and
xor
add
call
add
push
popa
push
stc
data16
in
loopne
xor
mov
inc
dec
pop
or
in
ljmp
xor
fsts
icebp
aad
fsubr
mov
out
lahf
xchg
scas
movsb
in
jg
mov
insl
insl
stos
push
sbb
xlat
mov
ret
dec
insb
iret
std
pusha
cmp
cmp
fcmovb
ficoms
sti
out
or
mov
popa
data16
mov
and
jns
push
ss
cmpsb
test
lret
scas
popa
pop
js
incl
mov
lcall
repz
cmp
out
fcmovb
push
imul
daa
dec
and
push
paddsw
push
adc
call
ljmp
dec
mov
or
mov
or
mov
ret
es
mov
adc
or
test
call
jne
outsl
testb
outsb
sbb
fstp
loop
jbe
cmp
and
push
insl
mov
inc
es
lret
jl
std
pusha
mov
and
int
leave
mov
cmpsb
cmc
cmpsl
dec
xchg
sarb
arpl
fsts
mov
out
adc
mov
jmp
push
test
std
sahf
repz
or
mov
dec
mov
push
notl
in
sub
jo
mov
sub
and
xorb
stos
stc
aam
dec
cmpsb
lods
das
jp
jno
int
xor
add
pop
enter
mov
adc
mov
mov
or
shlb
sub
mov
pop
jp
ja
sbb
arpl
shll
push
xor
icebp
into
mov
push
jl
lahf
push
ret
mov
pop
lcall
mov
and
inc
sub
dec
movsb
shl
aam
sub
dec
dec
adc
lock
jb
mov
cmp
dec
pop
icebp
clts
mov
dec
aaa
mov
and
fisttpl
popa
pop
and
lds
and
or
jns
lods
fcmove
and
cmpsb
sub
adc
das
sbbl
jp
or
sbb
mov
jns
mov
fcmovu
jbe
sbbl
xchg
fadd
xchg
inc
dec
sbb
or
pop
inc
jo
and
dec
outsb
add
pop
scas
mov
push
test
sub
or
xchg
xlat
cmp
push
call
add
orl
inc
pop
daa
and
int3
jmp
enter
xchg
mov
dec
pop
or
movsl
inc
mov
jg
ficomps
test
dec
test
je
mov
pop
dec
lret
or
jp
cli
divl
adc
add
imul
dec
inc
jnp
mov
sbb
lods
mov
sahf
mov
xchg
imul
adc
jmp
jo
sbb
pop
sbb
outsl
loopne
sub
pop
pop
bound
ret
adc
mov
shrl
dec
adc
mov
add
sarb
pop
sub
ds
fsubrl
ret
imul
push
mov
out
adc
jb
mov
mov
pop
test
cmp
adc
jl
in
jecxz
dec
aas
mov
sbb
push
lret
test
mov
jo
mov
mov
int3
jnp
scas
jno
insl
sub
cltd
lret
xchg
inc
js
out
mov
xlat
bnd
adc
clc
mov
mov
idivb
imul
lods
or
cmpsb
rcrb
gs
lods
lret
sub
mov
js
scas
ret
mov
mov
xchg
push
in
in
enter
adc
cmp
jg
adc
fadds
jnp
push
add
shl
leave
cwtl
jo
push
mov
or
or
rcl
mov
imul
ss
in
ljmp
clc
inc
push
in
movsl
dec
xor
gs
jo
sub
dec
inc
pop
and
adc
outsl
jno
cmp
push
movsb
nop
fwait
xor
xchg
inc
add
mov
push
add
shlb
cmpsl
push
lcall
sbb
jo
leave
mov
mov
ds
jp
test
sub
bswap
jns
sti
call
lods
cmc
in
orl
mov
jae
jge
dec
dec
lods
outsb
mov
pop
push
push
jae
pop
or
cld
adc
push
push
push
in
dec
movsl
cmp
call
stos
push
in
push
inc
or
loop
dec
fiaddl
popa
outsl
jge
xor
fimuls
mov
loop
push
in
cmpsl
push
or
jb
mov
push
sbb
mov
xor
js
test
sbb
sbb
mov
mov
pop
dec
sti
stc
jo
mov
push
test
pop
xchg
cmp
mov
addl
incb
mov
jl
shr
mov
cs
cmp
adc
arpl
imul
repz
pop
and
jge
lret
sti
cltd
icebp
sub
ss
outsl
adc
pop
lods
stos
hlt
lahf
ror
cmp
and
mov
mov
fidivl
mov
and
inc
cli
and
test
dec
sub
inc
or
add
xchg
sub
les
aad
sbb
imul
pop
cs
jg
and
arpl
adc
inc
loop
inc
cmc
sbb
xchg
adc
xor
je
clc
fcomi
movl
push
sarb
xor
subb
xor
adc
shlb
adc
add
inc
popa
or
xor
sbb
lret
and
push
pop
cltd
je
rcl
lahf
mov
dec
cmp
mov
out
add
pop
add
imul
movsl
xadd
fdivrl
test
hlt
ljmp
push
in
push
dec
imul
or
mov
incb
adc
ud1
push
mov
dec
lahf
fistl
sub
pop
cmp
mov
dec
lcall
adcl
xchg
sarb
lcall
jnp
fptan
cmpsb
call
xor
push
sbb
and
fisttpl
iret
xchg
add
scas
add
dec
out
into
daa
icebp
std
inc
lock
mov
das
xchg
fcoml
and
cltd
mov
repnz
incl
fwait
repz
popf
out
mov
pop
push
insl
cmp
ja
fwait
outsb
xchg
fsts
imul
in
negl
rorl
jmp
and
loop
and
sahf
gs
in
pop
ret
or
xor
mov
loope
sub
mov
push
adc
pushf
popf
push
inc
mov
cwtl
out
shr
fadds
loopne
pop
push
push
inc
adc
shlb
mov
hlt
jl
mov
mov
push
js
psubw
ja
test
jp
jp
cld
pushf
cwtl
notl
mov
jmp
jge
ss
ds
cld
or
xchg
jne
mov
push
cmovbe
pop
fldenv
subl
mov
cld
aaa
gs
stos
inc
adc
leave
pop
xchg
insb
shrb
xchg
xchg
jge
mov
push
mov
shl
aad
add
sahf
pop
lods
adc
mov
add
fwait
pushf
cmp
push
add
push
maxps
repz
xchg
add
std
add
outsl
loopne
lods
fldl
add
out
pop
or
mov
push
aas
pop
push
pop
pop
icebp
dec
push
rol
push
fstpl
cmp
or
dec
and
xchg
push
insb
dec
dec
imul
jge
add
imul
enter
out
aam
roll
bound
lds
xchg
cmp
push
cmpsl
sub
xchg
scas
sbb
xlat
push
cmc
cmpsl
push
add
cmpsb
mov
jl
push
jnp
xorb
inc
les
pop
mov
sbb
cwtl
pop
dec
pop
push
mov
mov
push
cmp
sbb
adc
mov
aad
mov
adc
xor
test
dec
xor
popf
push
cmpb
ss
je
inc
mov
shl
orl
jno
mov
into
lcall
lret
cmp
adc
and
cvttps2pi
inc
cmc
in
pop
add
rolb
sub
fstps
push
jp
cmp
push
gs
inc
sbb
js
insl
and
aas
mov
jecxz
lock
call
xchg
and
dec
mov
movsb
mov
xor
lret
push
jge
push
and
sbb
sub
ss
and
adcl
xchg
adc
pop
repz
or
and
jg
pop
stos
or
fdivrs
data16
and
cld
sahf
mov
insl
pop
push
xor
jnp
hlt
pop
mov
dec
jl
xchg
sbb
inc
and
mov
mov
bound
test
imul
movsl
cltd
mov
ss
jl
stos
xor
inc
jbe
test
call
inc
lret
or
stc
ret
sbb
outsl
or
mov
pop
out
jmp
lock
cltd
ret
mov
fwait
adc
cld
fadd
mov
daa
xor
add
dec
mov
push
jle
jnp
inc
dec
roll
pop
sub
cli
inc
stc
dec
scas
stos
pop
fsubrs
scas
negb
ret
jnp
push
cmp
int3
rcl
rcll
cld
sbb
jge
pop
rorb
std
int3
leave
mov
iret
jecxz
jg
and
pusha
ja
out
dec
fwait
adcb
push
in
sbb
shrl
ss
or
sub
pop
jl
lcall
push
jb
into
out
mov
enter
add
adc
in
push
inc
sbb
or
push
in
cmp
lock
fadd
pop
outsl
dec
mov
pop
or
adc
pop
mov
sub
ret
dec
jecxz
add
sbb
int
cld
shr
mov
or
das
lock
popa
ret
jp
stos
ss
cli
mov
xchg
rcr
or
cmp
xchg
mov
iret
xor
rorb
out
xchg
les
fidivrl
daa
test
inc
dec
into
or
push
shll
popl
les
adcl
cmc
lret
pop
push
jb
aas
jmp
and
mov
mov
push
movsl
shlb
cwtl
test
out
clc
inc
loope
sbb
das
inc
xchg
and
add
cmp
vaesenc
xor
popa
sub
add
inc
push
loopne
loope
pop
xchg
loop
xchg
mov
addr16
das
mov
bound
push
inc
inc
repz
mov
jge
add
jae
pop
scas
mov
inc
aaa
mov
mov
pop
enter
sbb
inc
ret
jbe
cmc
bound
mov
pop
cmp
mov
mov
insb
dec
int3
xchg
xor
pop
cltd
adc
and
sub
sar
stc
shll
push
test
outsb
inc
or
mov
inc
fwait
pop
mov
lods
ss
xor
jo
into
or
mov
out
push
cmpsb
xchg
dec
filds
pop
aaa
lods
mov
repnz
repnz
dec
leave
pop
pop
rcrl
je
cmp
mov
or
pusha
decb
ljmp
and
int
jbe
mov
pop
movsb
dec
adc
jne
mov
aas
les
xor
movsl
aas
icebp
xor
shrb
push
add
or
sub
inc
mov
int3
sbb
lcall
lret
or
jle
push
push
and
aad
xor
push
push
sbb
lret
es
jg
push
movsl
add
xor
out
bound
pop
jne
pop
pop
push
mov
loop
push
inc
mov
out
jno
push
dec
push
xor
dec
stos
es
ljmp
test
sub
rol
or
push
cmpsb
iret
movsl
push
fbstp
stos
xchg
orps
scas
push
and
mov
push
sbb
loop,pn
into
repz
lcall
aad
mov
pop
fsin
xchg
fwait
add
aaa
fstpl
arpl
lea
jmp
cld
pop
leave
mov
cmp
dec
push
pop
ja
popa
and
repz
push
jmp
insb
cld
adc
scas
cmc
xchg
insl
jmp
lods
fwait
int
mov
mov
insl
scas
push
out
ljmp
xchg
mov
sub
cbtw
cwtl
xor
cmp
lcall
ret
mov
mov
mov
adc
mov
xchg
inc
scas
outsl
fwait
rolb
xchg
add
mov
sbb
fildl
xor
sub
fsub
inc
rcrl
cmpl
jle
shll
mov
push
xchg
adc
dec
dec
add
data16
mov
cld
mov
sti
shll
ror
add
add
notb
inc
insl
hlt
out
imul
stc
or
sub
insb
scas
sbb
cmpsl
mov
dec
add
mov
and
jnp
je
in
jp
mov
or
jge
push
mov
add
mov
adc
push
fimull
xchg
movsl
jno
enter
rclb
push
mov
push
pop
test
mov
and
inc
mov
out
jne
dec
xchg
nop
inc
mov
pop
es
cmp
rcr
cmpb
testl
sbb
jmp
addps
or
gs
mov
mov
data16
jge
movsl
bnd
sub
mov
dec
iret
inc
inc
sbb
lea
gs
or
mov
inc
mov
in
lods
jb
enter
dec
jnp
outsl
sbb
out
or
mov
dec
sarb
rorb
mov
adc
xchg
test
jl
lret
ljmp
ret
cmp
add
outsb
out
ja
aaa
outsb
imul
mov
adc
push
jno
and
xlat
imul
insb
push
sbb
enter
bound
jne
pop
push
sbb
pop
bound
in
imul
xor
jp
xor
arpl
mov
dec
and
or
inc
int3
xchg
mov
out
flds
sub
sub
jecxz
and
es
popf
data16
in
add
mov
inc
int
clc
sub
or
adc
or
leave
adc
jmp
test
call
xchg
mov
pop
movl
cmp
and
adc
scas
int
sub
imul
push
mov
xor
fimuls
ret
dec
cwtl
and
xlat
aad
mov
xchg
jg
cltd
bound
lods
mov
jmp
mov
enter
inc
mov
fnstsw
lds
movsl
add
rcrl
test
jno
push
mov
in
mov
andl
xor
mov
pop
test
cld
enter
repz
adc
sbb
test
mov
pop
shlb
jge
sbb
add
jg
repnz
pop
subl
mov
mov
test
dec
mov
pusha
popf
push
xchg
lahf
int3
loopne
stos
popa
mov
cmp
es
aas
xchg
ret
mov
ss
or
dec
lret
or
cmpsb
adc
inc
and
es
out
xor
inc
addr16
test
out
shl
and
js
push
sub
add
push
mov
and
lret
xchg
xchg
pop
stos
mov
push
sbbl
test
push
push
add
cmp
cmp
adc
shrl
dec
frstor
cmc
repz
int3
daa
stos
sahf
sbb
inc
nop
dec
jg
jl
mov
popa
hlt
jb
lods
dec
jb
leave
cmp
sub
jle
fdivrs
dec
push
xor
outsl
rcl
xchg
jg
sbb
xchg
stos
pop
xor
clc
push
xlat
out
js
push
ds
add
shlb
aad
dec
jle
mov
lcall
insb
sub
std
inc
icebp
sahf
sti
stc
mov
pop
push
mov
out
xor
push
je
loop
lds
shrb
mov
std
scas
imul
aaa
cmp
dec
cmp
mov
pop
xchg
and
in
shr
andl
lds
adc
mov
dec
xchg
je
mov
pusha
dec
in
inc
rclb
aaa
arpl
adcl
and
or
xor
add
lret
stos
mov
xchg
fistps
mov
insl
mov
push
and
lea
pusha
lcall
mov
mov
dec
pushl
sub
xchg
ficoml
incl
xchg
cwtl
jnp
inc
mov
test
mov
shrl
fwait
mov
outsb
lret
imul
sub
jo
add
pop
ret
or
dec
xor
mull
ss
icebp
ds
sarl
jmp
test
fwait
mov
mov
sbb
fidivrs
mov
nop
push
sbb
mov
pop
pop
mov
push
sbb
dec
lret
pop
lods
mov
flds
xchg
push
cmpsb
mov
data16
movl
scas
jbe
in
cmpsb
stc
das
iret
pop
aaa
ret
imul
sti
or
mov
adcb
les
clc
pop
scas
mov
std
mov
sub
data16
add
cmp
jl
dec
das
xor
cmp
pop
push
movsl
scas
sbb
push
mov
or
dec
xor
jnp
addr16
sub
leave
add
dec
outsb
xorl
pop
cli
outsb
mov
sbb
mov
add
push
jb
lock
or
pop
js
negb
xor
sub
popa
mov
and
mov
mov
pop
inc
push
mov
or
sub
pop
pusha
xor
pop
jecxz
xchg
aas
scas
dec
stc
fs
rcll
xchg
lea
aas
loope
mov
scas
mov
data16
mov
inc
or
sbb
jmp
mov
push
psubsb
dec
and
aas
in
in
pop
pop
or
stc
xchg
dec
pop
mov
int3
shrb
lock
cmp
push
mov
out
fstp
mov
lock
xor
fsts
xlat
jae
xor
fucom
pop
xor
mov
cmpsb
je
js
fcmovnb
popf
inc
add
pop
mov
fisttps
test
in
xchg
xor
mov
arpl
and
xchg
in
mov
mov
or
icebp
rcr
es
mov
push
add
pop
insl
movl
int3
jmp
inc
push
outsb
sub
cmp
loopne
lcall
enter
int3
lods
lea
je
fwait
lods
daa
rclb
pop
adc
lcall
fabs
and
mov
imul
or
aam
mov
insl
sbb
xchg
loop
pushf
adc
pushf
sbb
and
shlb
adc
aas
pop
pop
ljmp
and
std
push
pop
in
stos
fnsave
aam
push
sbb
fdivl
enter
or
sub
xchg
ljmp
pop
popf
or
dec
push
mov
aam
lret
cmp
das
js
sbb
pop
pop
adcl
fs
mov
jno
cmp
mov
cmp
jae
adc
jno
inc
rcrb
lea
xchg
mov
loop
add
and
push
xchg
outsb
sti
pop
or
out
mov
sbb
dec
mov
push
jecxz
insl
rclb
xor
jge
nop
insl
mov
fsubp
dec
lods
cmp
mov
es
movsl
sbb
dec
int3
std
dec
mov
jno
fsubrs
mov
sahf
sti
ja
movsb
cmp
cli
movsb
push
ret
outsb
lock
sahf
dec
push
or
bswap
dec
inc
jo
sbb
jge
pop
or
mov
xchg
data16
adcl
inc
cld
lret
jno
pop
lods
int
push
rolb
test
call
mov
dec
sbb
rolb
out
mov
les
inc
faddp
mov
adc
mov
ljmp
mov
dec
aaa
cmp
push
mov
bound
inc
mov
xchg
cmpsb
and
sub
gs
in
lock
and
ret
sub
mov
lcall
int
pop
loop
sbb
int3
mov
lahf
cld
jl
lcall
das
fldenv
push
pop
subb
popf
mov
or
sti
test
movsb
pusha
in
roll
fs
out
jbe
dec
ret
dec
adc
movsl
mov
test
cmp
test
aas
arpl
imul
lods
fnstenv
sti
jp
jg
into
push
lret
cltd
jnp
je
int3
jns
mov
mov
xchg
mov
sub
mov
jnp
pop
movb
pop
pop
xchg
in
jbe
roll
jnp
cmp
sub
add
repz
pop
xchg
add
mov
jg
test
inc
add
data16
jbe
sbb
cmc
lock
rep
jg
jecxz
nop
leave
out
in
adc
and
mov
ja
dec
insl
push
jecxz
mov
sub
fsubs
xor
push
push
mov
into
cmp
scas
or
fisttpl
scas
push
sahf
daa
push
dec
or
clc
imull
test
adc
xchg
mov
lea
lret
dec
inc
pop
adc
scas
mov
pop
fisttpl
pop
dec
cs
push
mov
sub
bound
xchg
jp
xorl
insl
jo
or
leave
push
and
vpsadbw
inc
push
sub
xchg
aaa
xor
jmp
scas
push
pop
and
ss
incl
pop
adc
cmc
shl
inc
sub
nop
dec
call
sbb
xor
pop
roll
in
or
cmpsb
rcrb
pop
data16
scas
cltd
mov
sbb
inc
dec
inc
adc
in
mov
xor
je
popf
inc
add
ds
adc
cmp
imul
bound
stos
outsl
fst
movsb
imul
cmp
sub
mov
mov
cmp
mov
mov
xor
mov
sbb
fistpll
inc
mov
out
das
fcoms
arpl
hlt
push
out
cld
sbb
arpl
lds
popl
lahf
arpl
ja
mov
shll
add
inc
cmpsl
xor
cs
testl
inc
loop
xchg
fbstp
in
mov
mov
outsb
jmp
rorb
push
adc
sub
push
xlat
sbb
sbb
or
add
sti
test
and
dec
or
fnstenv
repnz
lods
push
pushf
movsl
cmp
mov
or
cmp
mov
jge
push
icebp
push
xor
push
cli
sbb
sub
xor
dec
inc
xor
add
add
fptan
pop
rorb
jp
adc
stc
dec
lock
sahf
inc
fstp
test
mov
jmp
std
insl
mov
sahf
pop
and
and
adcb
in
and
sbb
bound
adc
jl
jb
lods
jg
addr16
sbb
jbe
mov
mov
test
pop
pop
into
cmpsb
pop
int
mov
jns
and
inc
pop
in
test
das
aam
sub
inc
jne
jge
lods
in
jae
insl
or
cli
push
pop
pusha
outsb
xchg
sub
stos
pop
enter
jg
and
lds
das
mov
adc
fidivrl
pop
inc
ljmp
stc
repz
push
insl
ror
icebp
or
push
test
jns
cmp
push
pop
jecxz
cmp
aaa
inc
mov
popf
fidivs
xor
aam
test
mov
sbb
jno
fcmovnu
dec
je
mov
push
push
loope
add
pushf
in
vpacksswb
icebp
pop
xchg
aad
jnp
mov
adc
scas
xor
outsb
pop
gs
fdivr
xor
add
popa
mov
jbe
or
dec
xor
or
sbb
add
mov
or
cmp
das
movsl
push
mov
adc
and
mov
dec
mov
out
push
sbb
xchg
and
ljmp
movsb
jb
popf
aad
lret
dec
insl
xchg
dec
repnz
sbb
clc
sbb
mov
jne
dec
mov
and
push
int3
cmp
and
rcll
xchg
sub
arpl
push
sub
and
xchg
stos
sbb
ret
stc
cltd
aad
xchg
cltd
aaa
or
shl
cmpb
dec
dec
pusha
xchg
mov
pop
lret
jecxz
sbb
stc
ret
ds
aas
cwtl
and
negl
mov
sbb
lcall
sub
mov
repnz
xchg
add
jl
mov
aam
out
in
xor
adc
mov
sbb
cwtl
sarl
outsl
aaa
clc
fstp
or
outsl
jle
pop
jo
jecxz
roll
add
out
loopne
sahf
push
lea
stos
push
xchg
inc
xor
mov
outsl
fwait
movsl
xor
jbe
dec
dec
inc
push
mov
lret
xchg
push
jle
int3
imul
push
faddl
push
fdivrs
les
das
icebp
push
loope
dec
or
out
aam
ljmp
rcll
lea
cld
mov
popa
insb
pop
xchg
add
push
movsl
push
cmp
mov
and
sub
mov
mov
mov
or
xor
xor
ficompl
xchg
movsl
push
inc
imul
aaa
add
and
pop
cmp
xchg
call
rol
jno
xor
pop
xchg
lds
das
enter
je
inc
add
or
add
icebp
jnp
stc
ret
push
jne
xor
subl
sbb
jnp
jbe
fcoms
andb
imulb
clc
sub
and
cmc
jb
gs
mov
sub
lea
ret
mov
mov
stos
add
div
dec
shl
imul
xchg
sbb
mov
sarl
out
jbe
mov
iret
mov
mov
pop
cmp
addr16
out
mov
mov
lods
jae
dec
xor
sti
mov
lods
and
lea
lods
leave
dec
loop
add
movnti
mov
and
or
in
dec
mov
mov
mov
jmp
cld
adc
jne
ret
push
mov
lods
fmuls
repnz
js
mov
inc
and
pop
pop
aam
jne
xor
jmp
xor
jge
xor
push
pop
decb
and
into
test
push
mov
stos
mov
insb
stos
lcall
dec
cld
xchg
push
push
jg
inc
fiadds
sbb
mov
gs
pop
dec
jl
and
and
mov
pushf
outsl
loopne
xchg
or
xlat
mov
xlat
rcll
cmp
cltd
fisubrl
repnz
cmpsl
inc
jo
ljmp
rol
popf
pop
cld
adcb
out
cltd
mov
jge
pop
lock
mov
mov
mov
xchg
std
nop
hlt
lcall
pop
data16
mov
aaa
pop
jne
mov
aam
sahf
dec
out
cltd
jno
jl
cmc
lret
fsts
int
sub
lret
sbb
sub
push
mov
dec
mov
pop
fdivrs
xor
sub
push
push
jg
or
mov
shlb
cld
mov
test
and
mov
mov
push
scas
pop
adc
loop
gs
lods
jge
cmpsb
movsl
push
in
dec
cld
arpl
add
sbb
pop
frstor
lahf
je
js
push
cmp
je
adc
xorb
add
out
lahf
mov
adc
inc
nop
inc
sbb
add
mov
in
loopne
rorb
xchg
jb
addl
cltd
or
dec
cltd
in
fmulp
dec
xor
cwtl
jnp
rep
jne
addr16
cmpsb
push
cmp
xchg
push
test
mov
dec
pushf
inc
cmp
cmpl
dec
sahf
mov
jno
jecxz
adc
cltd
pop
ret
push
ficompl
dec
pop
xchg
je
jle
push
dec
sub
or
xchg
es
and
xor
add
into
enter
stc
out
mov
mov
inc
aad
aas
bound
ljmp
call
sub
push
test
sbb
scas
lds
pop
aad
aas
call
pop
jecxz
test
ret
out
inc
mov
inc
dec
shr
mov
and
loope
pusha
push
xlat
scas
jl
mov
cmc
dec
icebp
lahf
ss
adc
or
sub
fdivl
pushw
jp
pop
add
dec
repnz
ret
or
out
cmpsb
cwtl
lds
les
lds
jecxz
pop
fs
inc
jl
sub
inc
das
inc
stos
insb
inc
test
inc
pop
push
call
hlt
dec
push
mov
out
shrb
bound
cmc
scas
mov
movsb
pop
test
gs
fnsave
hlt
fisubrs
lea
dec
faddp
pop
pop
repnz
mov
ret
xchg
push
add
dec
inc
adc
sub
cmpsl
jno
add
jo
call
enter
lods
xchg
roll
cltd
cmpsl
aad
movsb
das
pop
pop
pop
adc
sahf
mov
xlat
sub
mov
mov
jl
inc
xchg
in
jns
sbb
mov
adc
lret
movsb
add
lcall
adcl
repnz
loope
out
dec
sbb
push
xchg
clc
mov
out
push
pop
scas
inc
mul
dec
cmp
or
scas
inc
aas
movsb
xchg
dec
sub
ss
xlat
xchg
inc
outsl
xlat
lcall
aas
mov
rorb
adc
fs
jp
dec
insl
decl
test
in
leave
pop
dec
pusha
popf
add
into
mov
jmp
push
xchg
lahf
pop
ret
sahf
xor
fisttps
or
in
rorb
xchg
lea
adc
rcrl
dec
or
gs
mov
cmp
push
hlt
mov
hlt
lods
lret
push
pusha
mov
cmc
mov
cmp
or
shr
js
cs
std
decb
movd
shlb
ja
xlat
add
iret
inc
inc
loope
adc
mov
movsb
sub
sbb
lcall
aaa
test
cmp
add
xor
xor
fstps
hlt
push
adcl
enter
fidivs
mov
sub
mov
rol
lock
mov
inc
mov
push
inc
jne
pop
or
ret
out
cmp
push
test
movsb
ljmp
xor
out
div
jmp
jb
jns
xchg
aaa
sub
xor
inc
mov
sbb
add
sub
or
pop
arpl
nop
jnp
sub
stc
mov
bnd
mov
pushf
fdivrs
stc
inc
int3
outsb
pop
push
fsubp
pop
in
lock
mov
sbb
adc
enter
jmp
pop
xor
fs
and
push
dec
cmp
jp
test
faddl
mov
xchg
sahf
std
cmp
out
fwait
inc
lods
imul
xchg
pop
test
adc
in
add
jns
push
test
hlt
test
cmp
cld
in
mov
stos
mov
sub
dec
fdivrs
add
mov
gs
subb
loope
jle
cmpsl
repz
push
les
dec
jno
jg
cld
or
aad
std
jmp
jmp
test
adc
repnz
fmull
inc
fwait
test
loop
jg
insb
jg
int
mov
jns
push
xlat
jecxz
hlt
jno
adc
repz
pop
cmpsl
adc
fdivrl
xchg
jg
mov
popa
mov
rorb
mov
xchg
mov
xchg
sbb
jl
jae
stos
inc
push
dec
es
cwtl
sub
push
pop
aad
xchg
ja
out
fbstp
stos
add
and
cld
mov
xchg
mov
outsl
adc
mov
mov
idiv
repnz
ret
popf
pop
fdivrl
out
jns
imul
loopne
xor
and
add
pusha
sti
jmp
or
or
fcompl
or
push
and
sti
xchg
in
push
mov
lea
jno
xor
pop
lods
cmp
leave
jns
jae
test
push
movsb
lds
xor
push
mov
ret
mov
movsb
outsl
pop
outsb
mov
cld
xchg
outsb
inc
pop
into
mov
push
scas
stos
lcall
xchg
add
pop
jns
mov
decl
clc
dec
fs
adc
daa
sub
cmp
inc
mov
repnz
sbb
push
pop
cmc
add
xor
add
pop
push
adc
lahf
pop
push
andl
adc
adcl
xchg
outsl
pop
sub
insl
cmc
lahf
dec
out
mov
inc
stos
loope
pop
mov
cmp
jno
sbb
push
test
popl
cmc
aad
mov
jb
pushl
fidivs
add
mov
push
or
jbe
out
inc
push
push
jno
sbb
loop
aaa
outsb
push
lret
mov
icebp
xchg
or
mov
pop
sub
aam
sub
lcall
arpl
xlat
mov
shl
or
mov
and
inc
int3
dec
xchg
jmp
push
mov
pop
outsl
xor
sub
lea
das
sub
adc
mov
sbb
incl
sub
cmp
fnsave
pop
sub
mov
inc
iret
add
test
xchg
xchg
pop
movsb
push
data16
rol
in
xchg
lea
cmpsb
andl
subb
stos
in
fimull
ret
lahf
add
dec
sbb
jo
mov
dec
and
cmp
fisttps
cmp
jge
xchg
or
out
jae
xor
repnz
inc
cmpsb
jmp
xchg
pop
jecxz
mov
adc
das
in
inc
in
cli
gs
pop
mov
rcrb
ret
jne
push
jne
push
or
jle
fwait
lock
sub
arpl
mov
sbb
mov
gs
iret
int3
cwtl
mov
lock
test
mov
mov
mov
loop,pt
add
imul
pushf
jo
enter
xlat
jp
add
pushf
mov
les
pop
paddusb
fists
stos
fwait
or
int3
and
jmp
inc
dec
das
rcr
insl
mov
nop
lods
pop
into
xchg
imul
xchg
rcr
dec
push
pop
fisttps
xchg
inc
dec
or
xor
imul
and
out
add
sbbb
push
cmp
cltd
push
xchg
fildl
mov
sahf
lock
sbb
lods
ret
jno
and
sub
push
inc
iret
or
repz
ds
cld
mov
xchg
and
cld
and
aaa
cmp
add
out
scas
int3
stc
in
js
das
ljmp
pop
stos
xchg
mov
jge
inc
adc
out
cmp
mov
jae,pt
mov
push
pushf
test
add
sub
insb
add
test
repnz
mov
sbb
scas
stos
iret
mov
push
jecxz
or
adc
mov
ja
imul
and
pop
adc
and
clc
jns
mov
test
jge
push
enter
inc
add
movb
push
repz
add
aad
adc
test
lahf
fs
adc
dec
mov
rcr
shrb
or
ficomps
aaa
mov
ds
xor
or
arpl
adc
add
divb
cld
dec
fcoms
insl
mov
lock
daa
int3
push
mov
add
movsl
ret
xchg
fucomip
aaa
xor
das
mov
mov
and
mov
mov
ja
sbb
icebp
repz
xchg
mov
cmp
push
dec
sub
push
xor
test
dec
or
push
outsb
mov
pcmpgtd
in
xchg
popa
mov
js
push
xchg
sub
lcall
pusha
imul
fmull
pop
inc
xchg
mov
cmpsb
test
inc
or
clc
ret
mov
inc
imul
nop
enter
movsb
rolb
mov
stos
push
inc
inc
mov
pusha
mov
xlat
rcrb
mov
clc
adc
pop
loopne
mov
push
cwtl
sbb
push
in
or
daa
cs
fildl
testl
dec
sub
es
mov
insl
fadds
call
stc
jp
xlat
inc
imul
cmp
insb
push
push
sahf
les
ret
jnp
jne
popf
inc
loopne
pusha
and
shll
add
sbb
dec
iret
jo
insb
pushf
in
mov
data16
mov
shlb
sbb
xor
arpl
or
fmuls
push
lahf
arpl
dec
sub
dec
dec
and
xor
ljmp
jg
dec
pop
inc
mov
stos
test
aam
mov
cs
ficomps
add
outsb
das
cltd
cmpsb
push
cmp
inc
cli
shlb
arpl
mov
imull
mov
or
push
jp
cmc
mov
or
scas
sub
sahf
and
xchg
jne
xor
addr16
add
xor
in
push
ret
fisubl
mov
and
shlb
cmp
xchg
lahf
or
add
xlat
mov
ret
push
ret
dec
imul
test
mov
clc
data16
adc
cli
sub
test
mov
movsb
js
std
mov
shrl
and
pop
mov
lods
jecxz
add
decl
push
jge
fs
test
or
out
and
mov
mov
push
pop
inc
popa
dec
in
lcall
je
inc
aas
and
xchg
sub
inc
push
clc
jl
insb
rcr
je
fs
fcoml
adc
sbb
lcall
outsl
out
cld
jbe
les
xchg
jbe
rol
mov
sub
dec
scas
movsl
and
in
aad
addb
or
mov
fmull
lds
imul
jbe
mov
inc
mov
cs
arpl
push
mov
out
xchg
inc
jecxz
push
push
clc
lret
cltd
sub
xor
dec
lret
test
arpl
outsb
loop
loop
sub
and
sbb
jg
clc
add
imul
mov
push
sub
mov
adc
roll
mov
stc
sub
rcrl
cmp
jb
sbb
push
leave
push
cmp
lret
fisubl
push
and
xor
jmp
add
push
mov
and
xor
outsl
std
jecxz
ss
fwait
sbb
in
int3
adc
xchg
xchg
jp
pop
fstl
sbb
mov
xor
fdiv
stos
mov
mov
add
out
addr16
cld
int
inc
or
jne
scas
lea
out
xor
push
scas
jne
test
jo
push
push
popf
inc
into
jbe
xchg
ds
nop
mov
dec
hlt
lret
xor
jno
daa
and
mov
push
std
lds
sbb
pop
repz
ds
lds
ret
jp
movsl
add
dec
mov
adc
cli
push
xor
cs
push
adc
mov
jns
xchg
sbb
cltd
pop
xchg
xor
fmul
pop
bound
push
pop
pop
cmpsb
and
mov
mov
jp
sub
out
push
fidivrl
jae
cltd
and
cld
xchg
jge
xor
push
rcr
dec
fisubl
dec
shll
sbb
xor
testl
dec
cmp
pop
out
ficomps
mov
popa
jmp
or
mov
cs
mov
ljmp
push
or
scas
jecxz
mov
lods
cli
loop
mov
insl
push
insb
mov
rorl
or
sbb
sbb
stos
bound
push
jne
jg
out
xlat
cmp
repz
flds
mov
jp
mov
cmc
pop
mov
fmuls
fidivrl
fdivl
es
jge
push
sbb
mov
add
pop
inc
inc
pop
or
mov
pop
and
addl
fisubrl
aaa
push
js
or
shr
inc
fldcw
outsl
fimull
add
mov
pushf
push
daa
sub
iret
shrb
insb
or
jae
das
cld
xor
jecxz
divb
stos
cmc
cmpsb
fmull
frstor
inc
ljmp
shll
dec
adc
test
mov
mov
xor
adc
mov
or
sbb
mov
bound
and
mov
add
ror
xchg
inc
sub
insb
sarb
dec
out
pusha
mov
mov
inc
in
data16
add
cld
std
das
inc
out
xchg
movsl
loop
mov
test
jp,pt
cmpsl
fwait
add
shlb
add
cld
cwtl
or
inc
fdivrs
clc
dec
pop
add
adcb
xchg
test
scas
sbbb
subb
enter
and
movsl
xchg
and
stos
mov
mov
add
lods
pop
roll
aas
or
inc
push
jecxz
arpl
push
loope
pop
mov
sub
jge
cld
addr16
xorb
lds
jl
cmc
push
lcall
outsl
cmp
mov
lods
mov
pop
call
lret
mov
aas
mov
jbe
enter
lret
sbb
leave
lods
or
push
inc
fsubs
sbb
jg
push
inc
pop
jae
andb
fdivrs
add
jmp
jg
sarb
jb
rclb
xor
ficompl
shlb
cmpsl
xchg
iret
addb
call
mov
test
mov
hlt
ds
mov
negl
ljmp
leave
jmp
or
sub
mov
pop
and
and
lret
repnz
mov
pop
push
mov
cmp
imulb
adc
dec
cmp
pop
or
dec
in
and
xor
pop
sub
dec
jns
add
iret
daa
fistpl
bound
mov
call
and
sub
dec
jl
icebp
push
inc
cmpb
cs
and
xor
push
clc
dec
imul
inc
insb
lods
jo
xor
adc
inc
xchg
clc
or
outsb
addl
add
shrb
call
mov
sbbl
mov
ds
and
and
bound
fnstsw
adc
dec
pop
inc
sbb
sbb
out
ja
out
cwtl
je
push
cmpsb
aad
mov
and
test
sbb
mov
push
mov
sub
mov
mov
aad
mov
stos
xor
shl
filds
or
scas
in
or
adc
or
mov
icebp
stos
lods
pusha
push
sahf
test
jle
add
pop
mov
sbb
int
test
pop
inc
inc
or
aad
stos
add
pushf
lea
jp
mov
dec
andb
jle
mov
mov
mov
pop
cmc
mov
adc
pop
sti
js
daa
fisubrs
jl
fisttpll
pop
adc
das
cltd
rolb
dec
fbstp
cmp
mov
aam
pavgb
dec
in
mov
ljmp
mov
ficomps
lret
or
scas
mov
pop
stos
lods
frstor
jge
jg
and
cmpsl
dec
pusha
out
ret
push
cmp
int
xor
fucomi
inc
cmp
mov
outsb
imul
mov
les
movsl
cmpb
xchg
xchg
mov
jb
dec
mov
lods
or
popa
cmp
cmpsb
insb
ficoml
and
mov
and
lret
jae
or
or
jns
pushf
insl
sbb
add
js
xor
dec
mov
pop
xchg
les
and
cmp
rcrl
push
cmp
mov
or
cmp
push
cltd
adc
repz
sub
mov
and
enter
and
pusha
in
add
mov
xchg
xchg
fs
pop
add
adc
inc
scas
push
outsb
jnp
push
cmp
lods
insl
and
pop
insl
jg
xor
inc
or
jl
mov
stc
sti
jge
mov
push
push
dec
call
jg
call
ret
loopne
push
dec
cli
adc
add
loopne
add
xchg
daa
pop
scas
scas
stos
cmp
dec
pop
mov
jmp
xor
test
inc
pop
testb
ljmp
in
fdivl
stos
mov
push
dec
jecxz
push
aam
insl
xchg
cmpsb
or
jmp
fnstenv
sahf
insb
repnz
and
sarb
hlt
jnp
jg
ficomps
dec
cld
enter
orl
adcb
aaa
imul
iret
insb
or
ret
movsl
xorl
push
mov
pop
sahf
or
lods
xor
dec
add
fs
fucomip
jg
in
add
dec
ds
jmp
rcl
jp
ret
xor
add
dec
or
out
xchg
mov
xchg
dec
daa
add
sbb
xchg
lret
ss
push
dec
aas
pop
cli
mov
insl
aas
cmp
shr
mov
lret
bound
mov
cmc
add
inc
stos
stos
lea
jbe
jle
je
push
dec
sbb
lret
xor
in
xchg
sub
jg
sbb
daa
rcrl
and
test
xchg
idivb
call
push
rcrb
je
jp
sub
andl
mov
or
lret
jae
mov
xor
icebp
cli
dec
pop
movsb
movsb
shlb
in
jno
inc
scas
xor
adc
divb
das
sbb
jns
xchg
and
cmpsl
mov
mov
fs
mov
and
ja
fisubrl
xchg
and
ficoml
jo
mov
mov
dec
out
fisubl
ljmp
sahf
sub
or
lea
jo
ds
sub
cs
ficoms
mov
mov
clc
fnsave
push
sub
andl
loope
xor
mov
and
sub
sbb
jl
stos
jg
in
cld
cltd
jge
xchg
add
aas
mov
notl
ret
fs
add
lret
jg
mov
js
or
sti
lret
das
enter
aas
popf
sbb
or
inc
pop
sbb
lock
cld
jae
sub
jecxz
push
jmp
cmpsb
inc
mov
cmpsl
sub
adc
in
inc
int
lahf
push
shl
and
ljmp
out
sub
clc
and
pop
xchg
inc
inc
mov
and
or
enter
cmp
lahf
repz
mov
push
cmpsb
xchg
fwait
sbb
shlb
and
cmp
out
push
sbb
xchg
test
mov
jae
xor
jno
roll
and
repz
rcrb
das
cmp
sub
add
hlt
cwtl
aas
movsb
ret
cmp
xor
cmp
lcall
xor
cmp
stc
div
adc
ffreep
mov
inc
add
and
mov
lea
push
test
sbb
shl
cld
mov
mov
xchg
pushf
sub
hlt
icebp
or
outsb
and
ja
pop
fdivrs
push
insb
sbb
jg
clc
aas
fmull
movsl
pusha
jp
rclb
add
push
mov
jae
inc
mov
mov
popa
test
mov
mov
jecxz
mov
je
xor
and
in
mov
mov
and
mov
dec
lea
adc
ret
adc
mov
fcompl
test
scas
pop
cmp
int
cmpsb
loopne
push
das
sbb
iret
and
sbb
loop
dec
mov
in
jbe
mov
es
subl
xchg
push
cs
add
dec
pop
xorb
mov
pop
or
sub
out
mov
out
pusha
mov
jp
dec
shrb
nop
outsb
call
addr16
cmpsl
mov
add
xchg
push
addr16
aas
cwtl
xor
pop
sub
movsl
xchg
or
inc
pop
out
out
lret
insl
mov
pop
jne
int
rcll
dec
mov
jno
jp
icebp
inc
shlb
cmp
xchg
mov
xchg
inc
inc
or
xor
xchg
lret
push
sahf
push
sbb
mov
push
mov
aad
enter
and
icebp
mov
insl
sahf
dec
test
mov
and
hlt
xlat
mov
inc
jbe
aad
cmpsl
cmp
lock
push
in
xchg
xor
dec
vmovaps
iret
adc
adc
and
int
mov
inc
daa
hlt
jp
sbb
mov
sbb
mov
dec
and
dec
adc
pop
cmp
arpl
jp
or
js
lahf
fcompl
sarl
dec
push
xchg
jecxz
mov
or
mov
adc
test
mov
pusha
pop
ror
mov
push
fisttpl
inc
cli
sbb
push
in
int3
adc
shlb
mov
pop
dec
fwait
sbb
mov
popf
xor
movsb
sub
adc
xchg
test
inc
adc
push
jle
in
aad
sbb
jp
xor
pop
les
xor
sti
clc
movsb
sub
test
jns
jae
or
jge
scas
sub
xor
mov
adc
fwait
xchg
in
cmpsl
movsl
ret
pop
das
xor
adc
out
cmp
dec
push
xchg
adc
xchg
adc
jmp
shlb
mov
fs
xchg
cmpsb
faddl
js
mov
fdivs
adc
pushf
add
les
cli
mov
push
mov
xchg
dec
aaa
shll
movsb
sti
bound
mov
pop
lods
xchg
pusha
fidivl
mov
fmull
jp
stos
scas
push
pop
cmp
add
sbb
or
sub
xchg
dec
lcall
add
inc
xchg
imul
or
aaa
stos
outsb
rolb
xchg
jns
inc
ss
nop
xchg
dec
icebp
std
cmp
aam
cmp
xor
ja
rolb
dec
sbb
scas
jl
test
das
in
lods
out
lock
sub
jle
in
push
inc
xchg
out
jp
mov
mov
xchg
pushf
jnp
xchg
jg
clc
inc
shrl
mov
imul
jne
sbb
adc
std
xchg
and
insb
mov
dec
jmp
movsl
in
push
scas
or
sub
sbb
mov
scas
sub
inc
pusha
xchg
ja
in
stos
out
push
roll
mov
scas
cmp
add
pop
sbb
popf
inc
jg
sub
in
pop
stc
mov
mov
dec
sbb
cmp
adc
dec
inc
adc
jl
fnstcw
mov
movsl
into
fwait
in
mov
jmp
insb
fsubs
fmulp
pop
nop
pop
dec
xchg
push
mov
js
push
fsub
push
ret
jnp
adc
ret
dec
jg
dec
in
gs
mov
movsl
inc
xchg
cmp
fadds
push
push
mov
stos
adc
inc
push
pop
jne
inc
pushf
mov
pushf
jbe
lret
mov
lahf
sti
sbb
or
add
dec
mov
jae
dec
ljmp
adc
mov
int
push
sbb
je
mov
push
test
mov
add
xor
add
out
sbb
fdivrs
fsubl
and
imul
fcoms
lods
es
in
mov
mov
pop
bound
adc
shl
out
pop
or
xchg
scas
mov
fmulp
sub
cmp
dec
mov
dec
xchg
sahf
dec
sub
ficoml
negl
fs
popf
sahf
xchg
es
scas
repnz
push
jl
pop
fcmovb
cmp
push
es
popa
sub
pop
and
repnz
add
inc
loope,pn
addr16
test
mov
js
out
les
xchg
fisttps
stos
mov
cwtl
std
ljmp
push
aad
add
shrl
cmp
sbb
push
aaa
testb
mov
pop
push
cmpsb
pop
dec
loope
test
mov
sub
aas
movsl
cmp
sub
pop
adc
xchg
cmc
add
movsb
dec
cld
lahf
decb
aas
lea
adc
add
mov
ds
xchg
in
jb
push
mov
out
pusha
mov
insb
loope
cmpsb
das
gs
test
sti
ja
decl
mov
loopne
imul
aam
cmp
rclb
and
and
nop
pusha
dec
sbbb
sub
push
stos
sahf
subb
adc
jmp
into
adc
or
xchg
push
pop
mov
xchg
add
add
pusha
mov
sbb
in
sahf
xchg
iret
cld
bound
bound
mov
or
daa
lock
in
cwtl
dec
mov
mov
inc
dec
adc
sbb
in
lret
fs
cmp
aas
sbb
into
pop
scas
dec
or
ljmpw
insl
int
jne
mov
pop
rclb
fwait
cmpsl
jmp
fidivl
xchg
ja
sub
push
aas
dec
pusha
popf
xorb
call
lods
pop
push
push
jns
and
mov
into
mov
xchg
lds
sbb
xor
dec
stc
jecxz
jge
aaa
add
imulb
add
sub
lea
lahf
lahf
jecxz
and
mov
cmp
dec
negl
decl
cmc
xchg
jle
mov
scas
jnp
cmp
lret
inc
in
adcb
js
cmpsl
and
lret
xor
adc
push
push
push
es
fidivrs
push
mov
repnz
imul
mov
push
xor
dec
cmp
jmp
pop
pop
stos
mov
hlt
les
subl
pop
lret
adc
and
dec
sub
pop
mov
sbb
ficompl
shll
mov
pushl
xchg
mov
xchg
loop
add
and
aas
lret
lock
xor
das
pop
lods
testb
mov
xlat
adc
sub
sub
push
cltd
shrl
inc
inc
ficoml
xor
push
lret
mov
sub
mov
mov
outsl
pop
imul
outsb
outsl
ja
fs
jo
dec
mov
jo
dec
push
sub
inc
mov
and
mov
scas
int3
inc
mov
sub
stos
add
std
fstps
jnp
je
stos
add
test
insl
lods
lock
sarb
sar
loop
in
cmpb
pop
pop
fsubrs
push
les
and
jo
inc
jle
mov
adc
inc
ret
idiv
inc
mov
adc
sub
fcoml
inc
cmpsl
add
clc
dec
jge
push
enter
das
cmp
push
and
out
aam
ret
popa
add
mov
shlb
push
pop
stc
jle
cmp
int
sbb
hlt
subl
sahf
or
add
out
xchg
mov
inc
or
stos
fneni(8087
inc
cltd
js
mov
mov
jns
pushf
and
jno
imul
and
sbb
pop
or
cmp
arpl
popf
out
xor
outsb
jmp
ljmp
pop
cwtl
push
jnp
pushf
or
jns
mov
mov
adc
addr16
xor
mov
ret
or
hlt
xchg
sbb
sbb
rorb
fs
scas
divl
mov
xchg
mov
hlt
aaa
xchg
leave
cld
cmp
xor
test
xchg
push
pop
hlt
sbb
loop
adc
mov
pop
cmpsl
cwtl
jg
je
loop
cmp
mov
xlat
lds
daa
loopne
data16
icebp
out
cmp
push
int
xchg
inc
scas
inc
jp
push
ficoml
mov
add
xor
hlt
out
fisttps
adcb
inc
rcl
int3
bound
je
dec
mov
mov
sub
pop
xor
push
aaa
loopne
inc
stc
bound
mov
out
mov
pop
and
lock
repnz
inc
xor
and
cltd
jbe
stos
jl
and
push
stc
sub
jecxz
inc
das
hlt
imul
mov
ja,pn
js
inc
pop
adc
gs
push
ret
mov
inc
shlb
lods
js
pusha
push
xor
sahf
xchg
out
jle
test
pop
stc
aaa
fdivrs
and
or
std
mov
fndisi(8087
add
loop
jne
std
popa
lret
test
mov
dec
fyl2xp1
test
mov
loope
or
adc
je
fsts
stos
sahf
mov
jne
and
mov
and
jg
jmp
rorb
mov
adc
sbb
and
and
jmp
pop
cmp
imul
aaa
mov
divb
inc
push
aad
xchg
or
sti
aas
stos
into
mov
cwtl
outsl
push
test
cmp
or
push
test
cs
int
inc
xorb
fsubrl
sbb
jnp
rcll
cmp
mov
xchg
fcomps
or
mov
cld
stc
pop
movsb
dec
pop
jae
loopne
mov
lods
jl
rolb
cs
cmp
mov
add
sti
xor
gs
xchg
and
xchg
jb
add
clc
inc
inc
jecxz
repnz
ljmp
jae
sub
mov
cmc
mov
jle
out
pop
jb
adc
sbb
mov
les
stc
push
jge
or
out
outsb
out
loope
jno
loop
test
push
out
sub
mov
addr16
out
push
mov
sub
addr16
inc
mov
sahf
mov
mov
sbb
xor
pop
mov
pushf
push
pop
movsb
out
add
push
jge
jp
dec
cmp
ficompl
dec
inc
ja
lcall
fnsave
cltd
mov
jle
ror
jo
adc
ret
or
filds
inc
pop
es
inc
add
jbe
dec
imul
insb
aaa
xor
scas
mov
fnstenv
xchg
and
notb
pop
xchg
dec
iret
loopne
xchg
and
clc
lods
int3
fimull
xchg
rol
sbb
sbb
mov
rcrb
inc
movsl
rol
mov
loope
movsb
inc
push
and
and
xrelease
push
xchg
lea
test
sbb
adc
xchg
adc
mov
xchg
das
or
imul
sub
mov
xchg
int
pushf
stos
ret
stos
adc
dec
mov
mov
pop
adc
jle
add
imul
jge
push
dec
cmp
mov
pop
sbb
lret
rcrl
clc
in
mov
and
and
pop
cmc
das
jno
inc
push
and
inc
mov
idivl
push
push
fs
pop
xorb
adcb
sbb
xlat
cmc
fadds
xor
mov
in
fisubs
mov
fsqrt
jmp
mov
push
jle
ja
mov
jecxz
xchg
popf
pop
inc
jns
jl
sbb
rorb
inc
cmc
mov
jle
xchg
and
cmc
out
add
call
or
in
stos
xchg
pop
mull
ret
out
scas
mov
dec
xchg
loop
jmp
popa
mov
mov
stos
fwait
sub
les
repnz
jmp
rcl
cmp
loop
xchg
xor
nop
jecxz
in
sub
imul
int3
sbb
mov
nop
adc
push
xchg
jb
outsl
xlat
test
fsubr
add
jl
test
fidivrl
pop
or
inc
xchg
je,pn
test
jnp
mov
mov
xchg
jp
lea
ljmp
ret
outsb
stos
adc
mov
sub
jnp
and
arpl
mov
les
dec
subl
cltd
sbb
mov
rcrb
shr
test
fisttps
adc
std
orb
out
mov
mov
jno
fnstsw
shl
cmp
cmp
adcb
movsb
and
scas
push
adc
movsb
pop
mov
frstor
xor
push
sbb
pop
das
mov
and
add
stc
and
pop
stos
in
push
cmp
cltd
insb
cwtl
lods
inc
sbb
xchg
cmc
lahf
nop
lret
cmp
sbb
mov
push
ds
movb
mov
mov
imul
sub
out
iret
aas
mov
xor
lods
xchg
cli
lock
mov
sbb
out
arpl
aam
ftst
jmp
addb
lea
out
add
push
cmpsb
pop
dec
inc
addr16
shll
and
loopne
out
fidivrl
pop
cmp
ds
ljmp
mov
mov
idivl
scas
adc
aam
or
das
mov
lcall
movsl
and
bswap
lahf
xor
sbb
jmp
or
ja
mov
iret
jo
or
mov
cli
sbb
ss
es
add
push
jo
xchg
mov
inc
sub
add
ljmp
push
cs
pop
mov
daa
ja
sub
call
and
mov
and
xor
test
inc
pop
push
icebp
outsl
pusha
dec
subl
sbb
jmp
inc
fxch
xchg
mov
inc
cmc
and
in
lods
div
outsl
in
dec
adc
lcall
sbb
xchg
sub
dec
aas
mov
gs
jne
jmp
inc
sub
add
sub
ja
ror
push
mov
int3
out
pusha
aas
pop
fcmovnbe
adc
sti
push
adc
jbe
mov
sti
fwait
and
jmp
inc
add
sbb
jl
ljmp
int3
adc
outsl
pop
push
cs
test
insl
fdivrl
cwtl
pushf
jmp
mov
mov
inc
xchg
je
icebp
out
ja
mov
gs
and
leave
sbb
decb
xchg
mov
out
out
lea
pushf
scas
xchg
into
stos
add
cmpsb
mov
pop
mov
or
std
jns
jns
aam
adc
xor
mov
mov
push
pop
shlb
icebp
aaa
mov
push
int3
xor
push
jl
cltd
sub
xchg
xchg
mov
push
jne
ret
lret
andb
xor
repnz
clc
packuswb
fnstsw
cmpsb
cmp
jle
and
jb
inc
sub
xchg
and
push
mov
int3
repz
movsl
cmp
cmpb
inc
pop
add
inc
bound
mov
xor
mov
in
lcall
sub
pop
andl
mov
sub
ficoml
aad
into
sub
div
insl
add
pop
les
jbe
xchg
xor
stos
pop
cmp
enter
xchg
inc
lret
xor
in
es
push
push
add
int3
cld
xchg
mov
lock
daa
ret
mov
in
test
adc
mov
mov
loope
cmpsb
push
inc
and
add
sbb
mov
and
cwtl
rcrl
add
gs
fwait
jnp
mov
pushf
pop
push
fidivrl
mov
mov
lods
jl
scas
addr16
mov
xchg
pop
lcall
ficoms
push
push
mov
dec
gs
sub
test
xchg
jo
lds
outsb
call
pusha
xchg
and
pop
cmp
pop
leave
jge
andl
push
xchg
aad
sub
loop
sub
scas
mov
sub
dec
push
pop
push
add
inc
cwtl
xor
push
sbb
adc
xlat
test
or
mov
push
frstor
add
inc
jns
push
les
and
pop
or
dec
loop
outsl
cld
lahf
mov
or
push
inc
scas
in
sbb
lock
stos
pop
sbb
in
sbb
fbld
add
icebp
xchg
push
add
push
or
push
orb
in
fdivrs
cwtl
jns
jns
lret
push
push
test
push
insb
fwait
popa
adc
mov
sub
adc
mov
cs
inc
and
subb
sti
cmp
push
cmp
insb
aad
aaa
roll
adc
mov
scas
mov
lea
push
dec
in
sar
int
fldl
adcb
pusha
outsl
xor
jle
cmp
fdivp
push
push
cmp
js
fstl
test
fildl
jae
scas
outsb
shlb
push
or
or
jnp
shl
sarb
mov
inc
pop
jbe
lods
jbe
or
das
arpl
and
out
dec
mov
mov
mov
loop
int3
push
inc
push
mov
cmpsl
repz
pusha
mov
mov
sbb
subb
fistpll
xchg
push
sahf
arpl
add
push
mov
pop
jb
or
ja
notl
sub
or
push
call
sbbl
sbb
lcall
int
inc
dec
mov
lahf
ret
sub
lds
imul
inc
pop
sbb
fs
aaa
mov
loope
lods
add
iret
lcall
jbe
fwait
lret
mov
jne
fwait
push
popa
out
push
push
in
mov
aaa
imul
mov
sub
loope
clc
jge
lods
mov
cmpsl
fidivl
aad
aad
lds
xchg
xchg
mov
lea
sbb
lahf
mov
ljmp
orb
add
cmpsl
push
call
pop
inc
xchg
add
test
repnz
jmp
es
push
aam
cmpl
sbb
sbb
fs
arpl
cmp
xor
shlb
or
sahf
jbe
mov
outsb
aaa
insb
adc
testb
data16
push
push
das
call
add
pop
inc
cmc
in
sbb
outsb
fidivs
mov
std
push
mov
push
or
out
lods
mov
scas
cmp
iret
test
outsl
push
mov
jne
negb
loope
sti
jae
subl
add
sarb
cmp
add
rol
inc
xor
iret
aas
outsl
xlat
jle
cmc
sti
push
push
dec
adc
faddp
shll
pushf
sbb
lret
loopne
imul
mov
in
mov
jmp
jo
js
dec
imul
or
popf
add
loope
adc
ret
or
mov
sbb
mov
push
mov
and
sub
add
or
and
out
jecxz
daa
arpl
xorl
cmp
aas
push
ds
xchg
inc
loope
push
repz
mov
push
push
fldcw
pop
mov
imul
jns
cmp
and
aad
pop
mov
pop
add
into
sbb
int
cltd
push
or
sbb
dec
add
cmp
ds
rorb
mov
iret
mov
and
or
xchg
in
push
scas
loope
push
push
rolb
iret
jno
imul
cmc
jo
xor
ljmp
mov
fbld
mov
mov
pushf
sbb
dec
jb
xchg
xor
icebp
imul
cmp
ljmp
jb
aas
mov
xchg
scas
shrb
sub
or
fidivrl
inc
adc
ss
sbb
mov
mov
jno
pop
lahf
bound
lahf
sub
movsb
loopne
popf
iret
jo
adc
xor
push
push
aaa
shlb
in
jge
xchg
stc
push
push
rcrl
push
pop
adc
pop
bound
add
sub
je
in
pop
mov
enter
sbb
cmpsw
sub
test
adc
lds
sar
outsb
cwtl
xchg
aaa
lods
mov
jle
sub
or
jp
cltd
aaa
jl
jno
push
lret
sti
adc
fldt
mov
mov
mov
jge
push
mov
and
push
lret
lret
lock
out
pop
dec
in
lcall
in
xor
cwtl
and
cli
fsubrl
nop
out
enter
push
out
push
or
clc
test
lea
cmp
sbb
and
jl
cwtl
lea
cli
xor
jecxz
add
inc
cmp
sub
and
fnsave
outsl
adc
push
cmp
xchg
dec
jno
imull
sub
cltd
stc
jl
adc
out
dec
add
push
add
sub
adc
pop
in
inc
sbb
cld
xchg
arpl
test
xchg
cmp
or
push
in
add
cmpsl
repnz
out
insb
jb
hlt
popa
sub
jp
adc
inc
mov
out
jle
int
leave
inc
push
fsubrs
jo
sarl
add
sahf
or
daa
mov
lods
sbb
or
fbstp
es
push
mov
icebp
nop
dec
pop
mov
jno
push
sbb
push
sti
cli
pop
fildll
fsubr
pop
xor
aaa
lcall
loop
mov
cwtl
fsub
scas
mov
decl
sub
imul
aaa
in
pop
pmuludq
gs
jo
or
aaa
lahf
adc
jo
push
repnz
xor
cmp
xchg
stos
inc
cmp
nop
out
mov
fisttpl
jg
cwtl
xor
xor
jl
in
jmp
je
push
loope
cmp
les
repz
insl
fs
jecxz
xor
lahf
in
sbb
dec
sbb
dec
sbb
shll
subb
adc
cmp
push
jmp
mov
adc
jmp
ss
or
adc
inc
mov
cmp
adc
cmp
push
rcll
push
push
sub
test
loop
mov
mov
rol
pop
pusha
or
push
mov
fs
jbe
and
imul
fcmovnu
nop
mov
sub
mov
xor
roll
xor
in
clc
mov
mov
repz
jge
int3
xchg
dec
movsb
lock
orl
into
repz
cwtl
fcoml
mov
loopne
and
pop
and
and
test
std
out
fistl
loop
ds
sub
pop
dec
dec
dec
jns
sbb
fsubrl
roll
push
mov
addr16
and
xorb
daa
pop
sbb
xor
and
inc
inc
pop
iret
pop
fsubs
icebp
push
fistpl
or
testl
or
lcall
in
pop
xchg
cmp
jmp
lods
popa
fnsave
dec
fsts
inc
sub
rcrb
popa
jg
xor
pop
xor
nop
mov
pop
iret
lret
inc
ds
rcrb
inc
dec
sub
xchg
repz
xor
or
cmp
push
mov
push
add
pop
into
or
bound
mov
inc
ror
add
fistps
add
aas
or
or
mov
out
xor
cmp
or
sbb
pop
mov
and
mov
pop
push
push
inc
sub
push
mov
push
add
or
mov
mov
mov
jbe
pop
clc
dec
shll
mov
out
loope
xchg
mov
enter
dec
sub
xchg
stc
das
fldcw
sub
xchg
or
jo
arpl
repnz
loopne
gs
imul
jecxz
pop
cmpsb
sub
mov
lea
rorl
push
pushf
and
loop
jp
aam
pop
pop
inc
dec
xchg
outsb
push
cmpsl
inc
loopne
add
cmc
cmp
jl
in
mov
sub
pop
sub
outsb
movsl
movsb
inc
xlat
ja
test
iret
sub
lea
pusha
mov
sub
test
push
sub
cmc
mov
scas
nop
cmp
mov
and
fisubl
xor
mov
cmp
test
push
add
jmp
dec
int
push
roll
inc
inc
data16
lods
dec
xchg
cld
cmp
jnp
imul
xchg
mov
out
push
stos
dec
sti
jle
xchg
or
test
dec
push
shlb
mov
cltd
data16
stos
mov
sub
scas
and
fistpll
push
les
cli
arpl
jg
push
mov
fidivs
fsubs
or
dec
fisubrs
popf
xor
outsb
inc
and
jg
pop
dec
push
ss
push
jb
call
addb
dec
add
adc
mov
cmp
mul
push
add
pop
cmp
push
ss
mov
inc
push
sbb
jp
xorb
inc
sahf
push
mov
cmp
push
and
les
mov
mov
out
ljmp
sub
jo
ljmp
pop
cmp
iret
iret
xchg
aad
adc
mov
dec
mov
mov
negb
rclb
fsubp
test
jb
xor
insb
pop
outsb
aas
lret
enter
outsb
inc
pop
ljmp
xchg
popf
fsubs
mov
xchg
out
fs
mov
out
mov
jne
and
add
cmp
gs
sti
pop
push
mov
inc
cmp
or
lret
xchg
loope
fistl
cmp
je
push
fmulp
es
shlb
jne
inc
shrb
xchg
mov
xor
jp
call
jge
push
fldt
jo
dec
stos
scas
push
and
hlt
dec
sub
pop
cmovno
or
insl
jno
jmp
repnz
jp
xor
loope
mov
and
out
in
add
jo
mov
and
jbe
data16
pop
xor
adc
js
aas
push
rclb
lds
push
inc
or
sbb
add
sub
and
sbb
inc
testb
lret
xlat
js
or
push
gs
es
dec
addb
adc
xorl
and
incl
rcrl
xchg
imul
jecxz
pop
lret
lock
mov
mov
into
lret
stos
ror
inc
xor
push
sub
aaa
pop
or
fstps
ror
cmp
add
or
push
addb
daa
int3
sub
mov
adc
push
inc
pop
pop
push
jae
aas
push
repz
pop
jl
xor
adc
lds
sbb
sub
jae
sahf
jmp
pop
cs
filds
mov
in
and
inc
addl
in
dec
adc
sti
lds
jp
ljmp
xchg
sbb
test
add
loope
hlt
xchg
and
mov
sbb
xchg
sub
cmpsl
mov
cmp
xor
ret
cmp
nop
cmp
loop
ds
mov
xor
xchg
dec
cmp
adc
out
mov
std
bound
inc
inc
imul
aaa
repz
loopne
mov
cmpsb
inc
imulb
ja
addr16
out
jp
stc
jne
testl
arpl
or
and
aaa
les
popf
cmp
mov
arpl
loope
shlb
hlt
cmp
cmp
test
mov
xlat
je
into
mov
mov
push
ret
inc
jecxz
lods
sbb
pushf
lcall
xchg
xor
mov
scas
adc
cmc
adc
adc
outsb
push
xchg
push
fwait
mov
fimuls
lahf
lret
mov
ja
sub
inc
inc
into
jge
bound
dec
out
outsb
test
add
hlt
inc
cli
movsb
mov
mov
xchg
sub
mov
clc
or
lods
int3
mov
lock
sbb
ss
call
insb
add
ds
scas
xchg
jl
movsb
pop
cmp
cld
fcoms
pop
jbe
shll
and
cmp
int3
ljmp
inc
jo
loopne
int
dec
xor
jmp
ret
jnp
sahf
lds
sarb
cmc
cwtl
rcll
hlt
fstl
adc
xor
mov
mov
mov
dec
addl
cs
dec
pop
arpl
xor
stos
aas
js
jnp
outsl
inc
xchg
sub
dec
fldenv
mov
cmp
sub
xchg
addr16
adc
repnz
adc
mulps
iret
jmp
outsb
test
xor
jle
xchg
cld
lds
cmp
push
es
jp
push
int3
pop
cmp
in
es
sub
ud1
add
int3
inc
rorl
push
jmp
pop
cmp
movsl
mov
jns
mov
jge
mov
scas
out
bound
pop
rol
adcl
popf
in
push
xchg
push
cmc
aad
ss
outsl
xchg
add
sub
das
imul
push
out
mov
jge
and
testl
jp
popa
sti
mov
and
dec
jnp
add
adc
jp
jne
out
mov
mov
push
frstor
mov
sahf
dec
fistpll
lret
or
inc
mov
push
fincstp
xor
dec
or
xchg
jne
imul
inc
cmp
fsubr
push
int3
push
dec
sbb
xchg
jne
cmp
pop
mov
sbb
shlb
pushf
dec
lret
fistpl
mov
mov
mov
int
adc
jbe
roll
or
pop
out
sbb
or
jmp
mov
dec
sbb
add
adc
or
add
pop
cltd
ret
fmul
mov
push
adc
jle
loop
add
jl
jae
ret
cltd
ss
es
in
into
xchg
out
jae
cs
push
ljmp
aaa
out
outsb
lahf
test
push
or
sub
test
std
pop
xor
add
inc
or
out
inc
cmp
mov
rorb
test
jno
mov
popa
out
hlt
fmuls
adc
pop
push
or
push
jnp
inc
lret
cmp
mov
xchg
and
cmp
mov
adc
push
loop
jge
ror
stos
insb
pop
jbe
icebp
enter
sbb
mov
aaa
xchg
pop
jbe
xchg
mov
mov
cmc
jg
sub
dec
pop
add
dec
rorl
and
lea
xchg
popf
mov
mov
mov
xor
jne
aam
cmp
ljmp
xor
cmpsl
popf
lods
cmp
ds
rolb
cmp
or
mov
int3
fnsave
cltd
add
aas
nop
out
pusha
ret
aas
jmp
or
pusha
and
push
lods
and
mov
test
push
imul
jno
leave
cmp
jge
in
or
aad
repz
repnz
dec
sbb
sbb
cmp
mov
jb
stos
aad
lret
xor
out
jae
and
dec
sbb
pop
cld
or
ja
jmp
mov
arpl
sbb
sti
inc
sahf
cli
cmpsl
cmp
xchg
jg
cwtl
push
add
dec
test
jb
mov
mov
fnstcw
les
repz
scas
aaa
push
dec
inc
jl
mov
aas
push
shll
jbe
mov
outsl
mov
lcall
or
lret
sub
fxch
adc
mov
mov
stos
mov
rorl
es
test
mov
cmp
dec
sbb
add
out
cs
incb
pop
lds
int3
sbb
lahf
mov
mov
mov
imul
cltd
mov
negl
dec
xchg
cmp
inc
insb
aam
cmp
pop
fwait
jle
sbb
lea
ret
ret
int
mov
lods
or
push
jecxz
or
sti
push
add
sarl
es
add
xchg
xlat
pop
leave
out
inc
sarl
movsl
movsl
dec
sbb
inc
sub
out
lret
push
hlt
add
xchg
loopne
adc
lea
mov
sub
push
sbb
std
lock
fisubrs
movsb
call
in
mov
jg
push
push
aad
or
clc
mov
adc
or
add
push
imul
inc
arpl
dec
mov
pop
pop
mov
into
inc
jg
mov
sbbl
aaa
sarl
jb
stos
add
inc
sbb
loope
iret
jnp
push
orl
test
inc
loopne
jge
filds
cmp
and
pop
xchg
sti
inc
dec
push
movl
mov
pop
and
test
les
push
sbb
lods
push
loopne
jge
pop
xor
pop
xor
xchg
xor
test
movsl
imul
sbb
xchg
mov
test
fcompl
dec
inc
push
dec
cltd
call
mov
iret
mov
je
out
or
arpl
aad
cs
ret
xchg
add
nop
inc
push
push
sbbb
mov
mov
fsubrs
xor
and
ds
push
jo
adc
mov
gs
inc
dec
dec
mov
insl
decb
push
ret
cmp
icebp
jne
fldcw
jmp
xchg
inc
in
lahf
adc
pop
dec
in
push
push
adc
mov
mov
inc
xchg
inc
add
cmp
add
fstps
scas
sahf
adc
rorb
jecxz
js
in
push
push
pop
hlt
cmp
ja
lds
popa
and
pop
insb
push
shrl
pusha
repz
xor
xchg
and
sbb
fwait
or
push
lcall
rcr
xchg
cwtl
sub
inc
and
mov
sbb
mov
jge
add
mov
xor
jl
pcmpeqb
adc
inc
std
pop
add
inc
mov
ficompl
and
std
push
sarb
scas
mov
xchg
out
mov
lds
adc
addr16
and
daa
pop
add
fildl
test
cmpsb
jb
adcb
rorl
xchg
popf
fimuls
pop
mov
mov
jp
lret
pop
int
andl
outsb
pushf
inc
inc
ret
xchg
lcall
jmp
sub
lock
cwtl
std
int3
aad
ss
outsb
sti
loop
push
sbb
push
adc
lret
cmp
shrl
inc
hlt
es
sbb
jne
and
cltd
in
sub
jp
stos
pop
push
insl
adc
out
ja
imul
mov
or
out
loopne
enter
sub
adc
loope
dec
xchg
in
jmp
pop
mov
mov
jle
gs
xor
or
mov
sarl
pop
push
push
mov
iret
out
ljmp
das
ret
jbe
in
and
jge
scas
dec
jmp
mov
push
into
cmp
xor
cmp
mov
lret
inc
inc
xor
push
loopne
mov
add
inc
and
push
or
or
lods
mov
andl
je
pop
sub
push
push
imul
mov
pop
imul
rclb
popa
mov
mov
jle
cmpb
xor
jnp
add
dec
aaa
lods
ret
sbb
mov
xlat
mov
jb
or
rcrb
enter
push
pop
xchg
jp
cmp
filds
loop
inc
pop
loopne
js
mov
repnz
mov
add
inc
dec
fstpt
mov
fbstp
out
in
insl
mov
or
sbb
pop
add
divb
mov
ljmp
xchg
sbb
jae
sbbb
add
rcrl
cmp
mov
push
mov
movsb
lret
test
dec
xchg
js
ret
xor
aas
in
inc
nop
push
sbb
clc
fadd
jmp
repnz
add
test
rorl
mull
sbb
push
js
dec
iret
inc
cmc
mov
mov
inc
sub
mov
out
push
into
adc
xor
imul
pop
mov
fdivrs
and
or
cmp
sub
mov
inc
push
shll
in
or
mov
mov
xor
xchg
stos
fs
xchg
stc
aad
mov
js
fistps
call
leave
xchg
leave
jle
sar
jnp
aas
push
push
adc
adc
mov
test
push
aas
arpl
xor
pop
shrl
icebp
test
ljmp
xchg
jb
sarb
xlat
aaa
fmull
icebp
jl
sbb
mov
xchg
add
repnz
addb
lcall
cli
xor
dec
test
in
lods
mov
sbb
mov
cltd
dec
push
inc
pushf
leave
loope
cld
inc
stc
jne
inc
fwait
inc
mov
pop
fs
push
dec
rcl
clc
pop
sbb
xlat
or
adc
cmpsb
and
mov
gs
inc
inc
push
imul
lods
cwtl
lods
sti
cltd
lret
ljmp
cmp
mov
xor
xor
mov
bound
add
mov
int
int
rorl
icebp
mov
repnz
sub
mov
jns
jmp
or
push
pusha
mov
sbb
jmp
das
dec
icebp
sub
adc
jg
xor
ret
add
daa
jle
mov
or
push
mov
sub
mov
mov
ljmp
enter
or
xchg
dec
sbb
push
ja
mov
push
cmp
xchg
movsb
dec
adc
jnp
movsb
hlt
cmpsl
pushf
push
dec
out
jecxz
or
push
cmpsl
inc
jae
xor
inc
cmc
jb
push
js
loope
pop
cmp
add
int
sahf
std
test
xchg
or
and
xor
clc
pop
insl
push
xor
int3
adc
xchg
jg
mov
scas
pop
aad
pop
xchg
dec
mov
outsb
lods
movsl
or
mov
repnz
mov
cltd
add
mov
mov
push
push
add
aas
cltd
mov
add
push
and
cmc
push
hlt
scas
mov
pop
xor
xchg
or
lods
xchg
in
das
gs
inc
lret
nop
add
sbb
fdiv
lret
movsb
add
mov
shll
fisubrs
mov
adc
push
inc
es
add
and
pop
mov
or
test
push
cmpsb
mov
jmp
cmp
nop/reserved
adc
cmc
add
mov
jg
pop
jns
push
sbb
cs
cmp
cmp
imul
xor
push
jecxz
xchg
ljmp
lcall
push
rcrl
sub
adc
xor
dec
rcrb
dec
lcall
daa
aaa
xor
xor
fisttpl
xchg
in
xchg
cmp
xor
icebp
mov
push
sbb
popa
hlt
xor
pop
dec
gs
rcrb
inc
push
xor
lods
adc
pop
mov
fbstp
adc
pop
sub
xorb
mov
rcl
cmpsb
frstor
dec
sub
sarb
jo
xlat
fldenv
clc
and
dec
pop
xlat
scas
add
mov
xchg
sbb
sbb
fsubrp
inc
rorb
loope
cmpb
pushf
and
insl
cmp
sbb
mov
mov
jle
int
add
xchg
add
pop
or
inc
xor
test
push
inc
leave
sti
imul
cltd
sbb
leave
das
daa
addb
in
or
pushf
ja
jns
adc
mov
jmp
xor
add
xor
shrb
jb
hlt
add
mov
mov
add
jl
out
mov
out
inc
or
push
mov
push
daa
addr16
scas
jl
pop
jge
dec
push
pop
mov
ds
roll
in
sbb
pop
decb
ss
pop
cltd
pop
add
push
daa
push
aas
fiaddl
and
out
aad
sub
mov
test
jl
jns
inc
fs
add
out
jmp
out
jae
mov
imul
jp
push
dec
daa
mov
lret
ret
sub
cmp
es
jns
mov
jl
and
add
test
sahf
cmpsb
xor
mov
in
push
xlat
icebp
or
ficoms
jbe
pop
cmp
push
jnp
insl
jne
dec
in
rclb
dec
fbstp
and
sbb
or
lea
orl
fsubs
pop
out
pushf
ret
imul
pop
stos
fmuls
ss
jecxz
jo
lods
mov
add
cmp
xor
push
cmp
push
in
sbb
ds
outsb
add
loope
adc
add
push
bound
lret
fcoms
jae
add
push
lahf
pop
and
add
pop
mov
stos
outsl
sub
sbb
mov
ficoml
xchg
xor
cmc
push
mov
mov
mov
sbb
xlat
addb
xor
pop
sarl
cmp
pop
pop
lea
mov
fistl
lods
aaa
testl
cmpsb
nop
outsb
movsl
sub
addb
jl
jp
bound
push
mov
aam
lods
test
outsb
xchg
cmp
fcompl
jg
out
mov
into
xor
push
bound
xor
sub
test
cwtl
jno
xchg
dec
and
fimuls
and
sub
ret
xlat
cmp
pop
mov
xchg
insb
inc
cwtl
push
sbb
mov
or
fs
inc
add
lret
fstpt
ret
in
add
push
mov
jecxz
xchg
or
jle
cld
cmp
mov
push
and
enter
inc
fbstp
ret
lret
mov
daa
rep
xchg
inc
push
enter
out
out
loope
jbe
bound
fmul
mov
cmp
lods
iret
dec
es
mov
xlat
jae
and
fistpll
imul
dec
adc
jns
inc
add
adc
push
dec
xor
xchg
inc
mov
and
jl
jno
outsb
add
mov
jge
cli
pop
ljmp
stos
sub
xlat
out
call
aas
inc
jl
cmpsb
fidivs
xor
stos
pushf
fldl
xchg
sbb
aad
jmp
sub
sbb
push
std
dec
fucomi
xchg
and
in
aad
xchg
sbb
lahf
dec
in
adcl
adc
es
call
orl
xchg
or
push
xchg
and
and
push
lods
cltd
lods
push
je
adc
adc
sub
push
ss
outsb
inc
hlt
inc
out
cld
mov
lods
jno
clc
rolb
xchg
lods
data16
fld
mov
std
mov
sbb
movsl
cli
sbb
lcall
mov
stos
lods
faddl
loopne
loope
or
ljmp
cmp
fdivrl
mov
pop
je
sahf
pop
outsl
inc
dec
jb
stc
add
sbb
push
fdivl
je
add
xor
pop
jae
repnz
jns
sti
imul
mov
inc
test
mov
in
xchg
or
mov
push
sub
test
fiadds
mov
in
out
out
mov
andb
push
cmp
fwait
jle
inc
iret
jo
push
push
les
xchg
into
mov
dec
ret
mov
jno
lock
jl
sbb
lahf
pop
add
insb
lds
xor
enter
or
and
xor
jmp
aad
addr16
or
cmc
enter
jno
pushf
xchg
stc
mov
repnz
mov
sbb
push
xchg
adc
fst
ds
pop
mov
fisttps
fbstp
std
push
mov
fwait
adc
pop
lret
push
mov
xchg
nop
inc
cltd
pop
mov
in
repnz
mov
mov
dec
std
cmp
aad
sbb
call
in
or
out
lahf
mov
arpl
push
testb
mov
sub
mov
daa
jo
mov
fs
xor
cmp
sar
mov
adc
pop
mulb
dec
inc
cmp
fisubrs
dec
pusha
aaa
call
add
sub
and
inc
nop
je
cmp
stos
ret
xor
push
pop
xchg
adc
js
andb
cmp
adc
inc
pop
stos
mov
mov
dec
mov
sub
adc
mov
in
or
dec
hlt
sbb
xor
mov
pop
xchg
rolb
jge
push
pop
inc
arpl
dec
cwtl
push
sahf
out
xchg
xchg
fisubrl
sbb
mull
fsubr
in
cltd
mov
out
out
add
or
adc
jns
inc
sbb
jge
das
mov
pusha
dec
adc
test
lahf
roll
add
sub
or
push
es
mov
jb
leave
out
mov
cwtl
push
into
iret
mov
add
and
add
cmpl
lds
movsb
daa
pusha
aaa
out
adc
add
pop
xor
pop
je
shr
ficomps
gs
stos
popa
loope
mov
loopne
cmp
cwtl
push
test
push
mov
sahf
stc
movsl
add
hlt
imul
pusha
rolb
push
mov
mov
push
jmp
es
jle
dec
sahf
inc
fsubrl
fsubp
mov
das
dec
fmul
outsl
mov
mov
mov
aaa
xor
xchg
adc
mov
xchg
loopne
add
shlb
jmp
iret
push
dec
std
cmp
enter
mov
lahf
push
mov
xor
test
and
adc
inc
jae
add
push
xor
push
mov
test
mov
fwait
ja
cmpsb
lods
subb
sbb
enter
pop
rcrb
dec
ds
inc
xor
mov
push
mov
lret
sub
xchg
js
lahf
and
pop
and
mov
sbb
lahf
paddusw
js
and
ljmp
jl
mov
aam
imul
lods
xchg
dec
jg
inc
dec
xchg
xor
jle
hlt
jae
insl
fimuls
cmp
mov
mov
jns
mov
mov
es
mov
je
add
or
je
fidivrl
inc
push
xor
xor
adc
movsb
xchg
push
dec
dec
adc
rorl
sarb
or
leave
movsb
ljmp
and
adc
mov
lahf
stos
add
test
push
lahf
adc
pusha
cmpsb
jnp
popf
rorb
xchg
jge
or
xor
cmp
sbb
lea
imul
xchg
popa
push
out
or
mov
out
pop
jmp
mov
cmc
xchg
das
bound
dec
ds
mov
sahf
imul
out
pop
and
sbb
xchg
add
jle
out
pop
cmp
jne
mov
ret
add
mov
pop
data16
jl
fcompl
dec
cmp
xor
aam
sarb
cmpsl
lahf
sbb
test
nop
sbbb
fldl
cmp
mov
ds
push
cli
lret
sub
jmp
sbb
xchg
daa
lahf
mov
nop
xchg
mov
ljmp
inc
jo
and
js
push
cli
outsb
xor
pop
mov
shlb
mov
js
mov
push
call
pusha
cmpsl
xor
cmpsl
push
bound
mov
add
dec
leave
cwtl
scas
dec
or
jo,pn
fiadds
jmp
stos
in
jo
jge
std
xor
mov
pop
cmpsb
rcr
xlat
loop
or
fimuls
mov
loopne
inc
dec
add
push
xorb
sub
xchg
sbb
and
jnp
mov
inc
jmp
cmp
imul
mov
cld
sub
sbb
imul
mov
fsubs
add
jb
push
sub
push
xlat
repz
and
pop
xor
push
xlat
sarb
stc
clc
movsl
add
notl
imul
addr16
mov
push
aas
dec
cmp
test
push
inc
dec
dec
dec
imul
rcll
add
cs
inc
cmp
pop
inc
mov
shrl
and
daa
mov
pop
and
cmp
cltd
xchg
push
add
ds
mov
int3
inc
jle
jl
repnz
jl
sti
inc
xchg
push
adc
lods
int
das
and
lods
imul
and
jl
in
mov
sbb
out
mov
sub
sub
jns
scas
movsb
fsubrl
sub
testl
jbe
gs
dec
or
leave
mov
mov
mov
add
movsb
ja
jo
test
pop
xchg
mov
leave
jmp
pusha
xor
pop
xor
out
cwtl
push
cmpb
or
jge
loope
stc
insl
jae
movsb
sbb
rolb
fwait
and
loop
insb
or
xchg
testb
ljmp
mov
inc
cmp
in
cs
mov
and
add
jg
pop
cmp
faddl
test
mov
jp
sub
xchg
jg
sub
jns
add
mov
psubusw
mov
sbb
xlat
push
inc
outsl
jnp
fldt
data16
adc
dec
push
insl
mov
je
nop
nop
lods
pop
jb
and
repz
fidivl
aaa
adc
mov
enter
into
gs
sub
fstpt
fcoms
jmp
sbb
les
sbb
and
aad
adc
popa
xor
mov
outsb
popf
or
dec
cltd
mov
ffree
mov
fnstsw
xlat
push
popfw
sarb
loop
pop
stos
push
lret
lods
mov
sub
mov
push
xchg
sub
xor
fldlg2
test
les
and
lcall
cmp
and
shr
jnp
inc
add
int3
mov
imul
movsl
lds
add
out
arpl
shr
push
loope
inc
add
jp
imul
pop
dec
cmp
jno
jb
and
cmp
movsl
mov
adc
and
ja
stos
or
mov
aam
cmp
daa
loope
cwtl
dec
mov
xchg
pop
pushl
fs
jo
xchg
int
aam
xor
mov
push
jns
test
sub
pop
xchg
mov
inc
ret
mov
xor
inc
jo
mov
aaa
pop
jge
jb
leave
xlat
jmp
movsl
dec
add
cmpsl
sbb
push
cmc
push
cwtl
faddp
jb
sub
jge
mov
jno
xchg
cli
cli
mov
mov
mov
or
and
and
xor
jg
mov
int3
arpl
sbb
test
stos
mov
push
aad
or
dec
and
mov
or
ja
testl
jp
push
enter
cmpsl
ret
inc
mov
int3
add
ja
xchg
std
sub
shll
out
repnz
jo
adc
pop
xor
dec
mov
out
inc
add
in
xor
je
fs
jns
xor
lds
out
push
jae
fimuls
popa
hlt
mov
inc
hlt
popf
in
in
rcl
cmp
movsb
scas
addb
xchg
push
je
xor
adc
shll
dec
jge
rorl
orb
test
push
jl
aam
dec
pop
sbb
or
sbb
mov
mov
sbb
and
dec
sbb
cmp
xchg
in
pop
out
in
addb
mov
in
mov
incb
divb
out
popf
shll
addb
fsubrl
jle
pop
jbe
mov
mov
sbbl
mov
cmp
ss
in
sub
clc
dec
icebp
xor
cmp
sti
cmpsl
movsl
faddl
in
jg
icebp
sbb
push
lods
shl
jp
lods
mov
and
pusha
mov
pop
cmp
cmpsl
push
cltd
jecxz
aam
testl
out
pop
insl
add
push
jl
rolb
enter
push
outsb
mov
cmc
daa
movsb
push
dec
add
sbb
xchg
lret
inc
dec
cli
roll
or
icebp
or
pop
addr16
shlb
and
jle
ret
inc
lret
lock
xchg
je
push
sbb
adc
push
add
das
ffree
fadds
pop
lret
sub
mov
test
je
fwait
ja
in
enter
sub
insl
mov
loop
push
neg
cmpsb
mov
cwtl
xchg
adc
out
int3
frstor
push
jno
in
shlb
loop
std
mov
insb
jno
sub
cli
rorb
push
and
adc
dec
add
xor
xchg
push
cld
je
in
daa
test
aaa
xlat
insb
sub
fildll
cmpsb
inc
sbb
sti
lret
adc
gs
or
rorl
xchg
dec
cli
push
iret
je
repz
outsl
lock
shl
sub
fmuls
or
sbb
iret
sub
mov
mov
mov
xor
and
sti
push
dec
mov
pop
test
jno
xor
pop
mov
or
inc
or
xor
fs
fwait
loope
daa
jns
ja
or
pusha
push
mov
test
ret
sub
hlt
into
movsb
inc
cltd
xchg
out
int3
push
in
adc
call
ljmp
xor
inc
xchg
out
mov
cld
rolb
insl
jecxz
icebp
movsl
mov
sub
sub
pushf
stc
xor
mov
cmpsb
clc
mov
sub
scas
dec
xor
cmp
ret
in
jo
nop
dec
adc
jns
or
and
out
ja
jae
int
add
mov
popf
cmp
icebp
pop
xor
clc
sub
fwait
push
mov
aas
xchg
jns,pt
push
sbb
mov
jne
pop
pop
lock
xor
daa
call
das
jg
xchg
leave
xchg
les
jmp
movsl
pusha
and
lods
jge
aas
and
mov
cmp
pop
in
add
jno
or
out
frstor
aas
cs
test
add
loop
pop
call
les
xor
and
es
jmp
pop
xor
pusha
mov
popf
andl
cmpsl
add
and
sbb
sub
dec
cwtl
mov
outsb
out
pop
lds
dec
pop
xor
bound
rcrl
sbb
popf
push
jle
fidivl
xor
xchg
push
push
mov
repz
rcrl
aaa
jmp
cli
scas
lock
dec
cmc
cmp
xor
cmp
mov
cmp
ret
fdivrl
mov
ss
int
in
dec
pusha
imul
xor
jno
jno
test
push
jmp
fs
xchg
lock
outsl
sbb
mov
push
into
rolb
fldt
add
jge
add
divb
popf
mov
pushf
fnsave
adc
aas
jno
mov
stc
adc
cmpsl
ret
add
cmp
or
pushf
mov
std
pop
fbld
fwait
add
or
xchg
rclb
sbb
adc
fwait
push
stos
orb
cmp
xchg
mov
popf
jne
std
cmp
sbb
cmpsl
sbb
cmp
push
hlt
insb
sarb
imull
jecxz
lods
jns
fisttpll
test
add
lret
inc
sbb
mov
sub
aam
sbb
mov
pop
cmp
jbe
repz
mov
mov
jmp
and
push
lock
int
sbb
inc
sarl
ja
fcomps
ret
cmc
cmc
push
incb
adc
inc
push
cmp
jno
dec
xchg
jne
pop
out
cwtl
ljmp
call
mov
mov
xchg
int3
fwait
aas
sti
rcll
sbbb
push
xor
cmp
mov
cmp
pop
push
and
loop
ret
pushf
lea
ret
cwtl
fwait
sbb
js
dec
call
pop
das
ds
mov
sub
pop
sbb
inc
adc
int3
pop
sub
jp
into
fildl
sbbb
inc
test
lock
or
dec
cltd
pop
or
xchg
inc
mov
ljmp
scas
lds
cmc
enter
mov
out
fcmovnu
pushf
push
add
and
sar
inc
loop
dec
hlt
adc
mov
lods
xor
cltd
call
xor
sbb
sarl
dec
mov
push
cmp
hlt
adc
in
outsl
and
mov
inc
fistpl
mov
aas
mov
popa
push
ljmp
pop
sbbb
inc
mov
sbbl
stos
dec
imul
mov
cmp
mov
inc
adc
xor
imul
insl
frstor
lcall
mov
and
aam
mov
add
push
lods
adc
sub
leave
pop
lcall
mov
pop
je
outsl
test
out
data16
push
xor
insb
add
pop
stc
inc
xchg
adcb
add
gs
imul
in
and
dec
icebp
xor
pop
sbb
inc
jmp
outsl
xor
pop
jmp
outsl
stos
in
fs
outsl
in
sbb
in
je
or
lods
in
sbb
inc
mov
aad
iret
mov
adc
push
jmp
int
into
mov
outsb
sub
ss
lods
jmp
ret
mov
sbb
mov
in
test
cli
outsb
add
hlt
jmp
pop
enter
repnz
enter
out
leave
enter
je
xchg
in
insl
push
xor
push
dec
add
push
jmp
push
test
jge
sbb
sub
pop
push
pop
adcl
xlat
int
sub
or
fiaddl
neg
lcall
ja,pt
push
cmpsb
dec
fimull
dec
fnsave
popf
or
cmp
xor
or
add
jns
outsb
mov
add
mov
mov
mov
lds
mov
jne
in
inc
dec
out
je
mov
fadd
sub
push
icebp
inc
clc
popa
mov
fwait
mov
les
mov
inc
lock
xor
popf
and
fnsave
mov
mov
mov
fadd
hlt
sbb
inc
fsubs
subl
xchg
imull
lods
push
lock
lods
cmp
sbb
dec
test
aas
dec
test
xchg
push
in
stc
into
pop
inc
pop
cmpl
in
popa
adc
push
es
jbe
dec
jb
jo
in
mov
fidivrs
mov
test
cld
dec
and
fs
jg
push
push
cwtl
push
jo
loope
out
push
out
xchg
inc
xchg
aas
jo
xlat
cli
sbb
gs
mov
jne
out
dec
jns
les
mov
imul
mov
sbb
dec
lcall
push
sbbb
int
and
jnp
out
xlat
xor
or
dec
popa
jb
in
call
and
adc
aas
adc
dec
dec
inc
dec
jge
scas
lret
or
js
push
and
and
in
xchg
paddsb
mov
fnstenv
xchg
cmp
jne
sub
cmp
sbb
aaa
insb
adc
sbbb
lret
jmp
dec
insl
int3
fs
insl
add
lods
cld
jnp
mov
sahf
mov
adc
bound
mov
lcall
dec
sbb
jl
out
dec
and
addr16
jmp
xchg
loop
ljmp
adc
dec
lret
pusha
jecxz
mov
fldl
sub
add
jbe
mov
jno
mov
into
lods
pop
fucom
jne
pop
stc
xor
rcrb
pop
repz
pop
mov
gs
cli
sub
adc
sbb
jle
xchg
jle
ret
out
cmp
rolb
and
mov
mov
cwtl
sub
je
dec
xchg
mov
test
popa
shl
and
push
push
dec
and
sub
arpl
mov
test
out
ss
insb
rcr
push
push
push
outsb
pop
jge
ficoms
push
lahf
lret
sti
adc
pop
push
jmp
jmp
push
and
test
mov
scas
insl
cli
aam
test
and
adc
jae
jmp
into
clc
jae
add
xchg
jb
pop
nop
mov
addl
hlt
add
inc
or
and
ljmp
movsl
mov
repz
cmpsb
fcomip
jne
roll
sti
adc
fadds
mov
adc
out
in
pusha
xlat
sub
adc
loop
sbb
sub
adcl
movsl
inc
sub
negl
shl
jb
lahf
add
les
test
scas
mov
cmpsb
fwait
and
mov
xor
mov
clc
loopne
xchg
mov
nop
enter
adc
push
cld
mov
xlat
mov
xchg
mov
cltd
bound
stos
jnp
repnz
dec
insl
or
xor
daa
mov
push
mov
sub
call
inc
mov
imul
mov
lcall
adc
jne
movsl
cmpsl
test
fcmovnb
sbb
lods
dec
push
mov
push
in
push
jb
bound
fisttpl
repnz
xor
lods
mov
int3
xchg
xchg
nop
int3
xchg
insl
sbb
arpl
lock
xor
daa
cli
jnp
js
mov
jle
add
sub
jge,pn
mov
test
pop
push
push
mov
inc
lods
pop
dec
insl
out
cmp
or
mov
pusha
stc
inc
jmp
out
and
mov
cmpsb
outsl
add
xchg
add
std
jbe
in
loop
or
test
push
ret
inc
add
hlt
adc
and
fdivl
mov
pop
jle
hlt
mov
fwait
test
jge
pop
hlt
shl
jae
add
adc
insb
imul
push
rcll
jb
sub
sub
push
rcrb
test
ret
fisttps
outsb
divb
mulb
ret
add
sbb
xorb
jge
mov
sahf
push
nop
lret
test
xor
dec
mov
rclb
xchg
mov
loope
sbb
and
lahf
movsb
mov
mov
mov
aam
adc
xchg
jns
sbb
lret
arpl
testl
push
stos
inc
jo
add
lcall
popa
adc
add
mov
inc
ja
push
dec
int
mov
jmp
dec
jecxz
dec
mov
lods
lods
pop
mov
xchg
fists
ds
inc
test
mov
sub
push
mov
outsl
xchg
dec
je
mov
cmp
shll
data16
movsl
cmp
es
mov
dec
jae
rcl
ret
sahf
sysret
mov
shll
int
push
push
sbb
xchg
adc
xchg
cltd
repz
dec
or
pop
fsubrs
movsb
sbb
iret
movl
fst
sbbb
pusha
cmp
xor
mov
js
sub
aaa
test
sti
in
xchg
add
add
addr16
mov
xor
cmpsl
loop
es
inc
inc
iret
dec
fs
sub
jns
cli
arpl
andb
xor
mov
shrb
imul
xor
out
and
sub
dec
ss
aas
cld
cmp
pop
aam
inc
and
xor
jg
xchg
cmp
sti
imulb
shlb
js
pop
adc
fldt
dec
mov
cmp
add
sarl
das
rcll
mov
scas
dec
xchg
popa
popa
lock
jmp
cmp
or
loope
cwtl
inc
bound
xor
adc
push
pop
mov
push
sub
ja
aad
jge
popf
adc
fdiv
fdivrs
mov
cltd
adc
imul
xchg
mov
icebp
inc
lcall
adc
jae
in
iret
mov
xchg
mov
fmuls
push
fdivl
test
hlt
add
mov
nop
imul
test
ret
inc
das
or
dec
fwait
cmp
and
push
rclb
repnz
pop
clc
outsl
mov
aaa
mov
adc
push
sub
cs
pop
dec
nop
push
add
mov
dec
ljmp
add
xor
arpl
lock
movsl
sub
mov
cs
dec
or
mov
pop
in
sub
push
adc
adc
inc
push
aam
movsl
stos
leave
or
pop
xor
jb
mov
mov
pop
and
mov
mov
push
jnp
pop
test
inc
je
or
adc
pop
add
repz
mov
repz
subl
sahf
push
ror
aaa
push
mov
rorl
add
inc
inc
iret
push
repnz
addr16
inc
push
inc
jle
xchg
das
lds
mov
aas
imul
pop
imul
scas
push
mov
xchg
test
out
scas
popf
aaa
cmp
push
rcrl
cmpsb
lahf
sbb
js
pop
sbb
pop
arpl
pop
sub
cmpsl
inc
adc
ljmp
mov
jl
push
call
bound
or
lahf
sub
shrl
jo
jmp
adc
jnp
add
xor
ja
into
inc
cmp
rolb
popa
dec
aam
mov
inc
push
push
push
div
jmp
popa
sbb
jmp
cmp
jp
dec
imul
bound
mov
ret
adc
mov
cmpsb
fwait
lock
adcl
or
call
push
mov
xor
dec
cltd
shlb
jmp
mov
stos
mov
cld
cli
mov
mov
add
out
mov
push
xor
icebp
jo
cltd
xor
clc
push
sarb
popa
movsb
rol
shll
jne
push
imulb
push
mov
pusha
push
lock
pushw
mov
inc
push
pop
xor
or
lahf
out
mov
hlt
ds
mov
inc
fdivl
cmp
fwait
cli
sub
cmp
out
lock
imul
clc
cmpsb
and
dec
cltd
jp
call
scas
addr16
loope
inc
adc
cmp
or
inc
jo
xor
int
je
out
dec
scas
shl
lods
nop
and
sub
stos
outsl
add
lahf
popa
daa
movsl
shlb
or
mov
aas
fs
std
cs
mov
stos
leave
mov
add
mov
mov
inc
hlt
xor
pop
lock
call
iret
adc
fstp
leave
in
gs
inc
sbb
leave
cmpsb
ss
inc
adc
sub
fld
cmp
psubq
rcll
out
scas
jg
mov
test
mov
mov
shrb
mov
shrl
mov
into
add
xor
xor
adc
int3
jle
in
aas
mov
xor
mov
push
addr16
mov
rcrb
sub
xchg
xorl
pop
loopne
cmpsb
enter
mov
push
sub
xchg
and
out
orl
sub
xchg
sbb
or
xchg
leave
cmp
mov
shll
pop
aas
mov
inc
cli
or
dec
mov
in
sbb
jbe
lea
sub
cwtl
jl
mov
push
xlat
mov
mov
fsub
test
mov
push
push
push
hlt
daa
pop
mov
mov
sbb
xor
fistl
iret
ljmp
dec
jbe
test
clc
les
sysexit
sub
nop
jle
or
mov
movsl
jl
fstps
xor
in
jnp
mov
je
scas
add
xor
mov
xchg
popa
fnstsw
out
or
mov
or
dec
xor
cmpsb
mov
cwtl
enter
xchg
mov
clc
mull
push
fidivl
daa
mov
sub
out
mov
jae
or
pop
aas
and
mov
sub
jecxz
cmp
cli
lods
mov
mov
push
rorl
outsl
rolb
gs
lea
mov
fstps
cmpsl
mov
adc
xor
jbe
test
mov
mov
push
ficoml
xor
xor
mov
je
lahf
fs
mov
sbb
sbb
mov
scas
adc
and
pop
and
xchg
movsl
clc
out
fsubrs
xor
cmp
cmp
daa
pop
xchg
sbb
xchg
inc
and
pop
mov
xor
push
adc
mov
sbb
in
mov
or
in
test
dec
sbb
sbb
mov
sbb
xor
fs
sub
mov
lret
out
mov
sub
xchg
subb
out
ds
outsl
add
xchg
mov
les
movl
lahf
ret
push
sti
cmpsl
daa
ss
mov
jae
adc
sbb
xchg
hlt
sbb
cli
pop
xchg
aad
lea
inc
push
fistpll
sub
xor
ficomps
jle
in
pop
xor
call
xchg
jns
push
inc
insb
inc
fidivs
jle
cltd
xchg
xor
xchg
mov
shll
shl
shr
jg
jno
dec
or
xor
data16
xchg
pop
dec
les
inc
sbb
xchg
scas
rolb
fsubl
cld
cmp
xchg
and
inc
lds
repnz
inc
fs
inc
test
mov
add
xchg
mov
stos
pop
dec
in
dec
sub
xor
xchg
scas
adc
add
std
mov
jne
test
sub
movsl
mov
and
or
fsubl
dec
or
add
js
xchg
mov
sbb
push
inc
push
fidivl
mov
dec
fsubrl
cmc
scas
xor
xchg
xchg
jmp
inc
cmpb
test
aaa
lods
int
or
push
dec
das
fimuls
cltd
mov
lods
cld
repz
hlt
pop
fsubr
sub
push
jb
iret
in
in
cmp
fbstp
jno
push
divl
sub
pop
pop
mov
repz
inc
les
lea
lret
inc
popa
sub
jl
pop
dec
test
push
mov
out
sbb
cmp
decb
mov
inc
adc
mov
out
inc
and
cmp
sub
sbb
sub
out
or
push
out
jl
clc
jo
adc
call
or
data16
mov
ret
mov
imul
loopne
roll
jg
pop
inc
adc
mov
pop
push
loop
jg
and
aam
sar
mov
dec
fwait
pop
sbb
jmp
pusha
sub
leave
or
cli
xchg
icebp
sub
stos
and
and
jecxz
icebp
enter
mov
adc
inc
sub
dec
pushf
leave
icebp
std
aas
lea
insl
xorl
icebp
or
push
fisttpl
repnz
mov
sub
xchg
cmp
lds
cmp
add
stc
repz
sti
cmp
out
imul
iret
sub
faddp
aas
xchg
cli
fsubl
roll
cmp
jecxz
outsl
sti
bound
ret
pushf
pop
inc
cwtl
xchg
mov
insb
cmp
mov
mov
mov
loope
gs
pop
jge
lahf
inc
int3
sub
dec
mov
jns
cmpsb
lods
es
shrb
adc
dec
std
lret
xchg
mov
dec
js
test
int
sub
jge
lea
adc
mov
aad
in
sbb
or
xlat
arpl
lcall
sbb
xor
cmp
lds
shll
clc
gs
gs
js
pop
jo
and
jo
and
test
push
pop
mov
lahf
das
sub
lods
push
jle
xor
xchg
into
cltd
adc
adc
fisttpl
in
sbb
dec
je
int3
das
mov
iret
cmpsw
inc
lock
inc
and
mov
jo
sbb
xchg
jb
in
push
movsb
add
dec
mov
jp
fsubs
pop
xchg
dec
sbb
out
daa
mov
repz
xor
ss
xchg
repnz
and
push
out
jl
mov
inc
adc
dec
and
iret
pop
nop
jnp
push
mov
adc
and
iret
lods
stc
adc
jge
and
lock
icebp
ret
jmp
dec
enter
xchg
push
mov
xchg
mov
test
mov
dec
pop
fisttpl
aam
jge
popa
cld
icebp
clc
sbb
mov
mov
jno
push
adc
rorl
aam
cmp
addb
pop
clc
mov
test
mov
stos
cmp
aam
mov
ja
xchg
dec
pop
sbb
daa
push
mov
pop
out
inc
fstpt
insb
sahf
fistl
or
imull
in
push
insb
not
sti
rclb
stc
mov
jbe
xchg
sub
cltd
jno
pop
sarl
cld
or
cmpb
or
movsb
cmp
ds
idiv
test
les
in
jecxz
mov
xchg
lret
out
mov
adc
fldl
adc
scas
cltd
xor
push
outsl
mov
fwait
and
fisttpll
sbb
mov
and
es
push
mov
mov
loope
add
xorl
mov
les
mov
cmc
and
push
lahf
inc
stos
out
das
pop
mull
lahf
imul
mov
jb
xchg
jl
cli
push
mov
shl
inc
aam
adc
fiaddl
pop
xchg
mov
icebp
dec
jno
call
lret
mov
cmp
mov
fnstcw
jge
xor
jo
sub
out
mov
dec
int
in
icebp
stc
push
lret
lods
shrb
jbe
pushf
leave
lahf
and
cmp
leave
aam
or
pop
inc
mov
mov
jp
mov
mov
sti
dec
repnz
xchg
addr16
int
or
out
test
adc
rcl
jo
push
jae
int3
int3
xchg
sub
in
pmulhuw
inc
pop
inc
adc
mov
pop
stos
ds
cmp
or
cmp
inc
int
divb
mov
xor
ret
sti
loopne
out
rcrb
test
jno
push
xor
jl
inc
out
insb
in
or
cmp
inc
scas
dec
adc
shll
mov
lds
jne
jnp
imull
xchg
dec
shl
ficompl
fistl
ljmp
mov
cmp
or
es
stos
xor
jmp
das
adc
sar
and
in
adc
mov
cwtl
das
xchg
scas
arpl
movsb
xor
sbb
inc
push
add
mov
fldl
push
xor
in
imul
mov
and
inc
or
arpl
cmp
mov
pop
test
add
cli
cmc
cmp
clc
push
or
pop
or
pushf
fnsave
into
je
arpl
push
int3
or
iret
add
mull
add
fs
out
shll
cmp
rorb
jns
mov
js
imul
lcall
cmp
scas
add
js
xchg
int3
mov
lret
sub
das
xchg
dec
das
xchg
xor
inc
xor
addr16
sub
pushf
push
lds
adc
fsubs
sbb
jl
xchg
dec
mov
test
lret
repz
dec
push
aaa
lahf
mov
pop
jle
das
jp,pn
push
lret
jp
test
fmul
lea
leave
mov
lahf
testl
push
out
push
aam
add
cmp
ds
push
mov
pop
lods
ljmp
add
fcoms
mov
mov
sub
xchg
and
fstpl
aas
push
mov
cltd
cmc
or
into
xor
push
insb
jnp
je
mov
mov
mov
aas
mov
hlt
mov
sti
or
call
push
adcl
ret
adc
cmp
mov
iret
jno
imul
pop
outsb
scas
leave
add
cmp
outsb
aam
and
adc
jmp
pop
fs
popa
fsub
scas
je
dec
fstl
inc
pop
in
rcll
add
cmp
fsts
jp
fs
loop
push
cmp
int3
mov
mov
shr
cmp
sbb
xor
push
jnp
add
jae
mov
negl
add
jle
mov
push
sbb
mov
lcall
cmp
push
jp
mov
inc
ja
pop
fidivl
lds
mov
fmull
and
push
jecxz
xchg
mov
insb
cmpsl
mov
stos
xchg
and
xchg
sbb
int
jne
and
in
jmp
sbb
out
xchg
jg
shl
ss
mov
arpl
incb
xor
mull
mov
dec
sbb
xchg
pop
adc
clc
xchg
cs
sbbb
and
pop
or
adc
repnz
aas
ljmp
adc
pop
ds
jb
xor
loop
push
mov
adc
push
jbe
mov
cli
andb
sahf
mov
cmc
shrb
mov
xor
or
mov
movsl
dec
or
mov
notb
mov
out
movsl
inc
stos
lods
aas
push
mov
jle
out
sub
pop
rorl
jne
fdivp
push
dec
add
fs
add
daa
mulb
icebp
mov
mov
push
mov
loop
xor
jecxz
or
inc
ficomps
adc
add
repz
fs
pop
jns
pop
mov
xor
pop
daa
cmpsb
pop
repz
push
dec
push
push
mov
mov
insl
int
ret
mov
xchg
aam
cmovge
fildl
push
adc
xor
mov
adc
add
stos
scas
mov
inc
mov
sub
sub
mov
int3
dec
outsb
jne
rorl
test
ret
jns
push
sbb
loopne
mov
repz
lahf
outsb
xchg
xor
mov
xchg
mov
in
movsl
leave
outsb
negb
sbb
or
je
cmp
loop
sbb
or
cs
mov
jns
clc
or
jmp
sbb
adc
mov
mov
adcb
mov
xor
stc
sbb
test
shr
inc
jnp
xlat
in
add
outsl
add
dec
xor
test
lock
enter
rcrb
push
push
adc
mov
icebp
jle
rorb
xchg
out
jge
cltd
push
xchg
xlat
mov
lea
xor
cmc
ficoml
push
xor
lret
stc
mov
dec
dec
rclb
imul
lds
imull
inc
bound
push
arpl
ja
je
out
mov
mov
gs
and
ljmp
int
dec
and
ljmp
outsb
push
cmp
inc
pop
fadd
fistl
xor
in
pop
rcr
jmp
xchg
lods
jbe
and
dec
fiaddl
les
cmpsl
push
xlat
sbb
pop
cmc
mov
aam
ljmp
pop
mov
and
mov
sub
hlt
pop
mov
les
movsl
push
xor
jl
lret
std
add
jl
int
pop
jns
xlat
jle
jne
cmp
xchg
xor
or
adc
jo
pop
lods
test
jns
loop
fistpl
int3
test
testl
in
xor
pop
nop
nop
add
mov
movl
jb
test
sbb
cld
pop
int
push
loop
jns
or
add
fisubrs
mov
pop
imul
cmp
xchg
mov
push
inc
xlat
dec
ret
mov
imull
xor
fcomps
pop
pop
mov
lcall
sbb
xor
out
jecxz
pop
sub
in
mov
inc
push
sbb
sub
sub
adc
ret
fwait
cmp
addr16
mov
mov
out
in
shl
movsb
ljmp
inc
insl
dec
or
jecxz
push
cmp
pusha
push
push
clc
jno
insb
pop
push
cmpsl
ds
or
adc
and
push
out
std
cmp
js
push
mov
cmp
fs
xchg
xor
mov
push
push
mov
in
aam
aaa
push
lcall
push
rcrl
push
and
rclb
cli
clc
stos
fldln2
ja
dec
out
popa
pop
nop
gs
or
jns
aam
mov
jnp
mov
inc
or
stos
add
xchg
xchg
aad
inc
jno
sti
in
xor
inc
iret
test
xchg
mov
movsb
jbe
pop
mov
mov
push
dec
mov
repz
pop
clc
push
mov
sub
adc
fdivrs
cmp
xor
fs
push
pop
movsb
out
pop
jp
scas
sti
adc
cmpsl
push
adc
mov
rorb
js
subb
jne
movsl
lods
xchg
mov
fiadds
adc
loop
sub
mov
xchg
int3
jle
stc
test
mov
stc
arpl
ljmp
adc
jno
jg
sub
cmpb
push
lods
icebp
mov
push
mov
ds
sbb
shll
fiadds
or
mov
aad
xchg
lea
or
fdivrl
xor
leave
roll
jb
mov
int
mulb
fmull
shlb
mov
inc
lds
jge
jmp
std
dec
or
mov
aas
cmp
or
hlt
cli
mov
sub
ljmp
rcrb
mov
nop
push
fldenv
stos
mov
inc
mov
xchg
sbb
add
std
testb
popa
test
repnz
stos
lods
add
daa
pop
mov
add
or
aam
jbe
adc
int
sbb
jmp
xor
jle
aad
lds
aaa
in
loope
in
or
jns
sub
rorb
or
mov
jo
scas
inc
mov
mov
sub
shlb
push
xor
pushf
loop
dec
add
or
scas
ret
push
test
inc
out
imul
ds
fdivrl
adc
scas
add
xchg
adc
push
daa
loopne
cmp
add
popf
lcall
dec
adc
xor
lds
leave
das
aam
lds
mov
stos
xchg
cmc
xchg
sti
stos
ja
nop
adc
lods
mov
dec
into
cmpsl
pop
push
sahf
fmuls
mov
mov
and
jl
test
inc
xor
sti
scas
jno
jo
or
loopne
lret
sub
and
mov
cltd
jno
pushf
stos
stos
adc
shll
push
xchg
pop
jecxz
ljmp
rcll
jo
lret
movsl
mov
adc
pop
lret
xchg
mov
frstor
sub
andb
loope
push
lods
arpl
xor
ds
fnstcw
loopne
je
js
add
jb
adc
test
pop
pop
sbb
ljmp
stos
not
jnp
jg
jns
repz
jecxz
and
dec
dec
and
addr16
popf
push
sti
rolb
call
mov
xor
aam
cmp
cmpsb
dec
shlb
push
and
push
inc
and
mov
ss
in
fistps
cmpsl
daa
loop
cmp
clc
inc
mov
mov
lock
aam
pop
es
inc
sbb
jecxz
faddl
testb
pushf
daa
pop
arpl
into
sbb
loop
push
push
push
stos
insb
add
std
jge
add
nop
in
cmp
cli
jno
xor
mov
cmp
xor
inc
add
adcl
sbb
mov
dec
mov
add
mov
push
cmp
jo
enter
imul
pop
clc
jg
mov
out
push
inc
xlat
adc
in
subb
sub
and
jg
jae
rcr
fistl
das
movsb
sub
sub
push
roll
sbb
xor
mov
jo
add
dec
stc
pop
and
cmp
and
ja
insb
cld
lcall
cmp
xor
dec
and
lods
loope
push
inc
sub
xchg
dec
adc
iret
fnsave
inc
sub
pop
add
and
xchg
mov
cmp
or
inc
stos
ret
push
stos
cld
mov
xchg
repnz
lret
in
mov
mov
cld
cltd
mov
mov
sahf
in
fldt
je
mov
lret
movsl
add
sbb
adcl
push
popa
dec
test
jnp
mov
imul
filds
cmpsl
push
popa
imul
dec
adc
xor
jge
sbb
sub
insb
mov
sbb
lods
outsl
jne
add
and
push
mov
push
mov
xor
adc
repnz
lock
mov
push
aam
mov
fxch
adc
sti
jne
adc
xor
lahf
imul
in
jne
pop
es
and
or
xor
ret
adc
arpl
sahf
test
pop
or
in
mov
test
shrb
cmc
mov
lcall
adc
inc
fistl
cmp
leave
and
jg
outsl
inc
iret
in
js
xchg
pop
lods
push
mov
pop
lret
hlt
rcll
filds
sub
mov
int
xchg
mov
push
cmp
push
pop
sub
adc
jne
inc
xchg
lods
mov
xchg
cltd
into
pop
outsl
mov
hlt
je
add
mov
aaa
idivl
lods
xchg
jecxz
ficomps
sahf
mov
into
mov
push
adc
xchg
sbb
push
fmuls
fbld
xor
mov
add
inc
shll
out
stc
mov
notb
xor
mov
mov
mov
cli
cmp
push
jno
sub
pop
loope
fsubs
pop
pop
cmpsl
fimuls
rorl
sti
test
mov
pop
pop
jnp
inc
adc
mov
pop
mull
push
imul
out
je
push
fmul
mov
das
sub
movsb
int
and
icebp
push
cmc
sbb
rcll
stos
or
xchg
mov
orl
scas
jge
cmp
sbb
and
ds
testb
test
arpl
data16
insb
dec
les
pop
cmp
xlat
push
jae
cltd
mov
jo
sbbb
pop
imul
cmpsb
imul
mov
cmpsl
rolb
pop
int
push
ret
adc
pop
xorb
push
mov
xchg
inc
repnz
sbb
mov
fs
lods
dec
cmp
aam
mov
enter
stc
dec
decl
xchg
gs
add
cmp
jge
lods
in
and
mov
jne
xchg
dec
jae
lea
xor
fstl
addb
push
push
jno
loope
jmp
idivb
xor
sub
in
add
clc
add
test
dec
mov
jp
rolb
subb
frstor
inc
and
mov
xorl
loopne
lea
scas
sbb
rcrb
add
xchg
clc
iret
hlt
jno
xlat
outsl
test
je
int
xlat
test
mov
mov
mov
enter
or
int
bound
push
mov
mov
jp
js
or
test
add
mov
in
or
aaa
mov
jmp
inc
xchg
push
and
pop
std
pop
orl
dec
nop
out
xlat
stos
jecxz
cmc
pop
je
push
mov
nop
xorb
mov
push
stos
mov
dec
xchg
or
jge
fiaddl
inc
pop
outsb
mov
cmpsl
scas
cmp
nop
xchg
testl
iret
lcall
movsl
stos
push
push
xchg
mov
jge
mov
sbbl
xor
idivb
movsb
cs
or
popf
fidivl
sub
scas
out
das
sub
pop
jge
add
rorb
push
out
leavew
adc
fiaddl
inc
dec
push
gs
jge
fcomi
pop
ret
xor
push
mov
lcall
outsl
adc
mov
aad
or
das
mov
inc
gs
pop
mov
push
pop
hlt
inc
adc
mov
cmpsl
fwait
push
xchg
xchg
mov
adc
daa
xchg
xchg
sbb
lods
rclb
ja
xchg
sub
mov
jno
pop
in
xlat
clc
adc
cltd
or
in
aad
inc
scas
cld
lret
int3
and
add
je
call
xor
jne
roll
mov
sbb
loope
sub
push
out
or
in
cmp
or
mov
jbe
xlat
js
cwtl
or
call
dec
movsl
cmpsl
shl
loope
xlat
fcmovu
int
pop
cmp
rorl
cmp
cmp
xchg
sbb
pushf
enter
sahf
out
jno
loopne
cmp
repz
xor
cmp
push
pop
sub
xchg
and
arpl
sub
popa
jle
fidivs
rorb
mov
and
bound
dec
mov
and
mov
pop
xor
les
mov
adc
jb
cmpsb
cwtl
xor
scas
mov
jg
imul
push
push
les
cld
loope
mov
xchg
imul
lods
inc
mov
xchg
insl
xchg
and
sbb
add
jo
and
push
into
push
sub
ficomps
inc
xor
mov
jg
aas
push
mov
lea
push
cmp
ds
fisttps
call
imul
jge
or
hlt
addps
mov
sbb
and
je
xlat
jmp
imul
mov
pop
imul
mov
xchg
mov
sahf
jle
dec
pushf
filds
xchg
lds
fisttpll
rcrl
rclb
push
xchg
mov
xchg
cmpsl
jmp
pop
fisttpll
xor
repnz
mov
test
cltd
stos
inc
cmp
pop
je
or
packsswb
xchg
mov
mov
pop
imul
mov
xlat
cmc
add
test
xor
daa
fisubrl
adc
outsb
sbb
mov
ss
mov
xchg
aam
push
mov
mov
and
mov
and
imul
push
js
push
movb
push
pop
push
mov
xchg
leave
or
sti
call
cs
adc
push
mov
cli
pop
movsl
aaa
das
mov
jge
mov
cmp
addr16
popa
pop
mov
or
inc
cs
and
jmp
pop
cmc
dec
jb
cmp
mov
cmpsl
loope
out
cmp
sar
xchg
cmp
pop
roll
ficoms
aaa
cmp
lds
andl
aam
adc
fstps
mov
push
sub
in
push
sbb
mov
jno
cld
adc
xchg
out
movsl
fistpll
jne
inc
jmp
pop
mov
divb
lahf
push
sub
adc
xchg
dec
cwtl
xorb
jle
lods
sub
and
add
inc
shl
add
icebp
sahf
sbb
add
call
test
arpl
inc
das
int3
mov
in
add
jmp
pop
sub
pusha
mov
add
rol
sbb
js
or
arpl
fst
add
movsb
jmp
dec
push
sub
jmp
inc
sti
xchg
cmp
dec
pop
mov
minps
in
out
out
ljmp
pop
movsb
cltd
or
out
ret
and
fists
mov
lods
pop
push
orb
cmp
pop
repnz
subb
nop
add
inc
mov
mov
ljmp
or
and
popa
lea
aam
xor
sbb
pop
sbb
adc
and
xrelease
ret
shll
jo
cli
fstpt
nop
movsb
xchg
ds
jnp
enter
mov
push
dec
movsb
jns
testb
mov
or
pop
insl
pusha
cld
xchg
cmpsb
std
cmp
lds
mov
push
imul
js
and
xchg
adc
mov
aam
jg
xchg
leave
xor
adc
hlt
shlb
shlb
adc
dec
sbb
sub
int3
shrl
insl
cmpsb
aad
or
gs
decl
test
leave
jmp
xchg
xlat
fwait
es
and
mov
add
add
xor
int3
sbb
scas
cmp
jle
lock
cmp
sbb
jbe
jb
outsb
mov
outsl
jns
nop
jb
popf
adc
or
imul
test
dec
dec
loope
push
iret
popa
mov
pop
pop
push
fsubs
sub
dec
xor
mov
mov
sbb
popf
mov
cmp
fldcw
out
inc
dec
in
pop
xor
rol
add
in
lcall
and
cmp
fistps
or
rorb
jecxz
dec
cmp
shrb
jle
adc
icebp
pop
sub
sub
mov
fistpl
lds
push
dec
insb
leave
push
push
ljmp
ret
dec
mov
push
mov
out
insl
stos
mov
mov
inc
sub
popa
das
xchg
cwtl
jmp
outsb
fisubl
rclb
into
jb
mov
movsb
scas
sub
jge
lock
jmp
or
repnz
inc
and
out
arpl
cmp
push
loope
add
fsubs
cmp
movsl
insl
mov
jle
lret
xchg
inc
sub
pop
in
stos
xchg
test
push
test
cmpsl
leave
pop
jno
lahf
mov
jl
jbe
shlb
sub
loopne
cltd
jmp
movsl
pop
pop
fs
push
into
mov
sti
mov
fcompl
fwait
sub
or
xchg
cltd
and
xchg
test
fs
pop
pop
cmp
jnp
call
push
mov
xchg
push
imul
jl
or
adc
dec
and
and
dec
in
clc
jb
sub
add
sbb
or
add
mov
and
pop
data16
test
pusha
sbbb
mov
add
shlb
or
into
jnp
sub
xor
cmp
out
shlb
adc
adc
pushf
ret
sbb
lds
or
mov
xchg
mov
aaa
add
and
adc
cs
jmp
fwait
int
inc
sbb
push
sub
iret
jne
mov
jnp
cmp
std
adc
and
pusha
push
aaa
and
inc
push
testl
xchg
mov
bound
int
clc
cmpsb
lret
mov
xor
aam
adc
mov
fs
mov
ljmp
lahf
pop
mov
jmp
push
lods
mov
enter
test
in
movl
mov
out
inc
enter
dec
insb
adc
daa
fwait
inc
xchg
clc
outsb
lret
mov
mov
into
imulb
in
jne
adc
push
pop
xor
push
lods
ljmp
call
push
movsl
inc
mov
mul
popf
inc
in
push
xor
repz
and
test
std
add
cmc
dec
jecxz
insl
flds
shll
push
leave
and
cli
xchg
ljmp
mov
int3
or
sahf
int3
addr16
aaa
mov
std
pop
push
repz
rol
push
xchg
fists
loopne
fs
pop
dec
sbb
arpl
jnp
mov
jmp
xchg
pop
sub
push
movsl
std
xor
xchg
js
mov
stos
xor
mov
mov
mov
scas
jg
test
xchg
aam
movsb
test
jnp,pn
xor
and
es
scas
aaa
mov
push
shl
sbb
out
adc
inc
jge,pn
scas
jle
lods
sub
ljmp
cmp
inc
out
inc
imul
jns
pop
sbb
push
fadds
xchg
xchg
mov
sub
mov
or
jg
mov
mov
sbb
cmp
inc
mov
mov
shrb
pop
addr16
mov
dec
mov
stc
or
push
ret
gs
mov
mov
testb
pop
cmp
icebp
dec
and
outsl
aaa
rcll
pop
sbb
mov
pusha
pop
xor
lcall
in
dec
jo
push
cwtl
mov
and
jmp
js
arpl
cli
adc
mul
or
sub
rolb
lret
xchg
inc
cmp
push
inc
jno
ljmp
xor
pop
int
test
xor
adc
jno
mov
out
cmpsl
mov
cmp
xchg
dec
fwait
pop
pop
test
adc
dec
inc
fsubrl
fidivrs
and
push
cmpl
and
cld
aaa
pushf
mov
and
addb
je
jle
ja
mov
add
loope
pop
cmovb
icebp
aam
in
jne
jl
cltd
lds
jmp
pop
out
pop
lret
pop
fisubrl
ficoms
xor
rorl
push
into
std
cmp
enter
mov
movsb
test
fdivrs
jle
cmpb
repz
push
rol
fsubp
pop
add
xchg
out
and
popf
pop
jge
add
cmp
mov
sub
aas
adc
pop
adc
scas
xchg
adc
mov
aaa
frstor
xor
loope
aas
adc
lds
rcpps
icebp
cwtl
fdivrs
dec
aaa
add
inc
int3
lea
hlt
push
sbb
pop
stos
mov
arpl
push
cld
xchg
jl
cmp
sub
push
jno
jg
cmpsb
scas
ja
dec
mov
nop
mov
mov
push
mov
inc
push
movsl
sar
dec
and
repz
into
int
int3
aam
xor
imul
cmp
mov
adc
test
call
into
lock
lds
push
mov
mov
xor
in
hlt
lcall
pop
mov
adc
mov
popf
sub
ss
cmc
or
xchg
loopne
bound
sti
test
sub
das
loope
fisubrl
loop
stc
push
pop
insb
xor
adc
imul
mov
mov
js
add
pop
jnp
lock
notb
mov
dec
pop
or
xor
call
and
xor
out
push
push
dec
ret
add
lret
push
popa
xor
mov
int3
aam
int3
hlt
sbb
xor
jmp
aad
xchg
setg
repnz
add
and
adc
cwtl
dec
dec
hlt
notl
push
adc
ljmp
shlb
xchg
scas
sub
nop
scas
cltd
faddl
arpl
dec
outsb
into
mov
fadd
mov
dec
or
enter
fistl
aas
xchg
icebp
push
notb
dec
loopne
mov
insl
lahf
mov
sub
js
mov
test
and
adcb
stc
test
pop
push
add
stos
xor
xor
mov
mov
pop
xchg
dec
scas
xor
mov
lods
mov
jae
call
push
push
fcomps
in
pop
in
mov
sbb
mov
xchg
mov
stos
test
jne
gs
ja
xchg
adc
imul
lea
cwtl
aam
int3
scas
sbb
and
jne
jbe
in
stc
movsb
test
sar
loopne
inc
ret
jecxz
pop
cmp
push
mov
jo
popf
pop
leave
ljmp
pop
push
insl
dec
int
cmpsl
xor
push
xor
xor
adc
pop
mov
xor
mov
sub
repz
hlt
mov
mov
dec
and
in
je
jl
andl
mov
adc
ss
add
mov
aaa
xor
and
push
sub
das
mov
mov
arpl
push
inc
jno
mov
mov
negb
pop
and
clc
mov
sti
jp
outsb
xor
cmpsb
mov
movb
add
in
mov
jae
mul
ja
jae
or
or
leave
cmp
adc
ds
addl
jmp
cmp
mov
loope
pop
fs
and
cmpsb
les
push
sahf
cmp
mov
jmp
sbb
das
or
pop
jo
loopne
shlb
fsubr
cmp
xor
cmp
push
add
imul
and
ret
stc
jp
ss
add
cli
mov
mov
dec
dec
ret
ljmp
jecxz
add
xchg
loopne
addr16
ret
xchg
push
pop
fsubl
mov
ljmp
push
stos
add
or
outsb
pop
stos
inc
js
scas
sahf
sub
dec
in
or
nop
and
and
jno
xor
js
sbb
aaa
popa
testl
mov
repnz
xchg
push
cld
pushf
xor
repz
orb
jmp
adc
jmp
lahf
test
or
jb
mov
hlt
hlt
push
push
test
loope
jp
mov
fdivrs
rclb
das
sbb
imul
pop
das
imul
lahf
out
adc
scas
cmp
jmp
adc
clc
or
and
or
or
mov
pusha
lahf
dec
jge
addb
jg
dec
dec
sbb
and
ficompl
xchg
dec
leave
fidivs
mov
ficoms
push
ja
out
into
sbb
shll
sbb
test
mov
mov
adc
je
sub
and
fcomi
enter
dec
movsl
adc
std
mov
dec
adc
out
mov
jle
fdivrl
jb
rorb
xor
push
aad
lea
xor
ja
scas
hlt
pushl
mov
pop
test
cmpb
fdivl
mov
lods
push
nopl
popf
icebp
or
mov
sbb
push
out
jp
xchg
xor
in
es
ja
dec
mov
adc
inc
ret
mov
ret
pop
das
jge
xor
jle
mov
or
int3
aaa
add
ret
mov
xchg
loop
inc
jle
and
pop
js
in
aam
cmp
rolb
inc
inc
mov
fldenv
lret
fstl
rolb
dec
fists
or
in
test
and
push
outsb
ret
cltd
movntps
jae
movsb
and
nop
lods
and
add
jno
divl
sbb
mov
pop
sahf
add
jp
insl
xor
out
sub
scas
pop
test
push
mull
js
jae
xchg
jnp
out
sbb
add
sbb
popa
jnp
je
push
cmc
aad
sub
or
popa
inc
add
push
outsl
push
mov
jb
lea
jns
lcall
xchg
andl
xor
inc
xchg
pusha
sbb
lods
daa
stc
imul
adc
stos
xor
lea
insb
adc
and
dec
imul
mov
jno
fs
frstor
dec
push
pop
pop
push
dec
cmp
pop
insl
sbb
push
imul
sbbl
stos
mov
or
cmp
into
dec
mov
push
nop
inc
shrl
push
cwtl
cli
cli
mov
dec
aas
mov
xchg
ret
addr16
adc
sahf
sub
out
addr16
aaa
xor
dec
aas
aam
les
xor
lods
mov
push
lcall
mov
stos
mov
fwait
push
cld
mov
add
das
sbb
inc
mov
aaa
out
insl
jae
fcompp
dec
je
repnz
or
ret
or
mov
push
jb
lret
pop
int3
ljmp
push
sbb
stos
mov
mov
int3
outsl
mov
mov
lret
xchg
sub
mov
ja
mov
jle
jge
stos
cmp
popa
and
jo
stos
add
outsb
pusha
xor
cs
punpckhwd
xor
ss
push
or
pop
push
xchg
movsl
push
outsl
rorl
dec
cs
jnp
cmp
lods
pop
jnp
mov
sbb
sti
ret
lods
loop
xchg
icebp
cmpsl
adc
add
ss
mov
movsl
mov
pusha
shl
or
lods
out
fsubl
cmpsb
pop
in
ljmp
dec
loopne
call
cmp
ja
in
fwait
cmp
movsb
out
fistps
mov
xor
xchg
adc
stos
dec
add
bnd
nop
sub
push
pop
test
sub
push
fiadds
xor
dec
sub
jl
push
or
pusha
cmp
lret
cltd
mov
sub
out
cmc
dec
ret
xor
pop
mov
jle
sub
incb
ret
pop
mov
xor
fmul
aad
jae
xchg
pop
sub
outsb
fisubrs
jmp
test
rolb
sub
cmpsl
std
cmp
jbe
adc
notb
adc
jle
push
dec
movsb
pushf
push
in
adc
and
dec
fwait
outsl
cmp
sub
add
push
dec
pop
fs
test
insb
mov
jmp
sahf
pop
in
divb
mov
mov
out
stc
cmpsl
jmp
and
loopne
inc
insl
or
add
pop
in
sbb
cmc
lds
push
dec
cmpsb
aam
push
mov
pop
fbld
push
adc
test
xchg
rcl
sub
fwait
sarb
inc
cmc
pop
test
inc
push
aaa
adc
xlat
push
pop
adc
int
js
xchg
sbb
andb
add
stc
imul
mov
ljmp
push
fnsave
ja
bound
pop
test
stos
test
adc
lret
or
dec
mov
jge
ja
ret
jp
dec
ret
call
lcall
repz
scas
xchg
or
inc
ljmp
out
and
ret
and
sti
pop
cmp
add
xor
fcmovnu
jo
sbb
xchg
mov
adc
hlt
jb
aam
movsl
xor
lock
cmpsb
lret
cld
mov
jb
or
mov
sbb
inc
jo
dec
mov
js
test
dec
insl
dec
jbe
adc
sbbb
fisubrs
sub
xchg
popa
mov
out
outsl
enter
out
test
fildll
int3
insb
cmp
sub
iret
adc
pop
jbe
mov
xor
repz
mov
arpl
cli
fists
inc
mov
sub
push
fs
push
xchg
aam
insb
shrb
gs
mov
andb
xor
int3
jmp
mov
adc
mov
dec
fildl
movsb
and
dec
cmp
jo
adcb
adc
rcrb
dec
add
dec
push
ds
adc
ja
and
lret
ja
imul
mov
js
jae
mov
pop
fimuls
adc
xchg
sbb
cmp
push
lds
leave
mov
lret
lahf
lock
in
cld
xor
mov
pop
pop
mov
and
ds
jp
jno
fldl
fcomps
mov
pop
inc
leave
cmp
adc
sbb
test
or
outsb
shll
test
gs
dec
ds
test
and
sbb
mov
inc
fnstcw
sbb
push
xor
sub
inc
mov
repnz
pop
jp
and
fists
lods
cld
adc
mov
mov
jne
and
xchg
xchg
pop
pop
movsl
xchg
std
inc
adc
movb
and
cmpsb
fisttps
out
popf
arpl
scas
or
push
scas
mov
mov
fisttps
pop
jg
jae
cmpsb
cmp
aad
stos
adc
jl
sbb
ljmp
imul
ret
loopne
repz
cmc
cmpsl
mov
mov
jne
cld
in
mov
bound
mov
je
pusha
jbe
lret
aas
jg
clc
je
stos
xor
push
aas
inc
repz
sbb
and
and
jle
dec
dec
mov
movsb
and
add
sbb
pop
test
sub
and
leave
mov
dec
mov
add
movsb
pop
dec
mov
aam
call
inc
pop
pop
dec
lcall
xchg
leave
xchg
mov
mov
xor
lock
mov
adc
jns
pop
les
lret
add
and
icebp
stc
fwait
mov
jg
add
dec
or
inc
xchg
out
or
pushf
and
xor
cmp
orl
xchg
shlb
ljmp
mov
ljmp
push
mov
inc
dec
adc
nop
mov
adc
mov
test
or
movsl
xor
sbb
inc
xchg
and
sarb
sub
fdivrl
js
mov
inc
mov
adc
xchg
pop
in
das
test
aas
cmp
daa
dec
push
xor
sub
inc
es
jge
in
ficompl
scas
mov
dec
clc
push
bound
push
outsb
mov
sbb
push
sbb
movsl
out
test
inc
out
lods
adc
jp
rclb
sahf
sbb
xchg
aas
and
mov
sub
or
imul
push
mov
dec
imul
pop
ja
xchg
mov
pop
js
lds
or
out
or
jne
or
popa
andb
fwait
in
fbld
scas
movsl
push
or
in
clc
cmpsb
xor
lods
js
add
ret
leave
mov
or
mov
insl
mov
insl
cmp
inc
daa
leave
ret
push
push
cs
in
mov
sub
inc
or
dec
pop
cwtl
inc
mov
pushf
insb
repz
xor
cltd
pop
mov
testb
fmuls
inc
jmp
addr16
add
ljmp
test
jge
push
das
aad
jge
push
mov
cli
jbe
sbb
out
push
push
mov
stos
mov
push
adc
cmp
adc
and
stc
pop
daa
test
jmp
inc
fsubl
jg
stos
fcomps
pushf
fdivl
pop
loopne
mov
sarl
sbb
test
xchg
jl
and
and
sub
add
fstp
pop
lret
pop
pop
gs
pop
sub
push
jp
insl
sbb
outsl
ljmp
inc
enter
sub
in
sub
loope
jno
sub
dec
je
repnz
jno
jl
or
sub
push
jo
jo
inc
push
push
and
mov
or
sbb
mov
je
fdivrs
lcall
add
daa
add
xor
adc
xor
or
or
jmp
xlat
jmp
test
movsb
in
dec
rcl
cmc
inc
xchg
je
sti
repnz
adc
insb
pop
dec
jbe
push
mov
testl
and
std
cwtl
insl
push
loope
xchg
sbb
cmpsb
test
pop
jb
xor
addl
and
out
jl
std
gs
and
add
mov
mov
test
aas
jns
push
or
add
xchg
xchg
pusha
pop
add
lods
scas
arpl
inc
fwait
mov
lea
and
push
lds
sub
cmp
add
mov
aaa
mov
xchg
mov
mov
popa
or
inc
sbb
xchg
jns
dec
cmp
es
jbe
and
mov
adc
pop
mov
dec
lds
jp
jns
inc
int3
and
mov
dec
inc
lret
mov
int
sub
int3
add
cmp
mov
inc
push
pop
lret
int
push
dec
enter
fsubrp
xor
clc
insl
sub
mov
lret
insb
imul
stos
out
ljmp
mov
sbb
jmp
xchg
push
out
mov
in
aaa
out
inc
ret
aaa
scas
mov
aaa
xor
call
inc
push
sub
mov
loop
in
inc
popf
jl
mov
lcall
sub
imul
popf
add
inc
pop
insl
or
out
add
es
jg
enter
into
lock
xchg
fstpt
sub
xchg
nop
outsl
add
add
inc
mov
inc
add
mov
xor
lahf
and
rcrl
xlat
int3
dec
loopne
cmpsl
into
mov
sub
sub
xchg
add
mov
xchg
add
mov
cmpsb
insl
inc
in
pop
dec
cmp
inc
inc
icebp
or
push
aad
pushl
push
xor
iret
lret
mov
mov
push
jno
inc
test
ljmp
int
or
outsb
jecxz
jnp
lock
add
or
sahf
sbb
lret
rorl
mov
imul
out
clc
ret
ds
cmp
pop
fdivs
aad
sbb
sbb
clc
xchg
cmpsl
aaa
push
push
push
imul
inc
out
xor
push
add
movsl
arpl
jl
ja
mov
inc
inc
xor
cmp
inc
xlat
into
pop
and
loop
sub
jge
insb
mov
cmpsb
xchg
fs
or
pop
addl
ds
in
jno
imul
xor
mov
pop
push
inc
inc
sub
ja
mov
ss
xor
imul
sti
adc
subl
pushf
xor
lds
fildl
out
adc
push
xor
fstps
jb
addb
aas
add
mov
sahf
mov
gs
sub
dec
mov
jle
cmp
roll
in
jns
add
and
rorb
xor
dec
sarl
pop
mov
jmp
ja
mov
mov
into
adc
idivl
jg
repnz
xor
hlt
adc
pop
dec
addr16
popa
dec
cmpb
adc
jmp
out
insb
mov
sub
jle
push
lcall
insb
jno
push
pop
or
adc
xchg
lcall
jecxz
sub
xchg
rcrl
jns
cmp
add
xchg
sbb
jg
cld
dec
fiaddl
push
jge
lret
push
aaa
inc
jl
mov
and
mov
xor
imul
out
daa
repnz
decl
adc
xor
in
ja
add
sbb
mov
and
push
fs
sbb
inc
scas
dec
push
fisubs
dec
mov
jae
in
or
lea
cmpsl
out
push
ret
adc
adc
scas
jno
jmp
movsl
or
push
jbe
mov
sbb
push
inc
sbb
sbbl
adc
pop
test
push
adc
rcll
cmpsb
jo
fwait
test
aaa
mov
ret
aam
add
lods
aas
rcrl
data16
jp
aam
loope
pusha
push
popf
int
xchg
cmovbe
add
inc
fisttpl
rcrl
test
sbb
adc
jno
jl
mov
rorl
sub
not
or
inc
mov
stc
cmc
xor
jg
out
in
push
push
dec
jg
lcall
int
and
enter
call
jle
in
cmc
mov
enter
pop
test
pop
lock
xchg
fsub
movsb
sbb
inc
mov
mov
orl
add
xchg
scas
mov
icebp
iret
rcr
scas
cli
xor
lods
add
int
pop
out
and
pop
xchg
test
in
jmp
stos
inc
push
fldenv
mov
out
xchg
mov
mov
repnz
and
in
add
outsl
xor
cmp
jbe
sub
imul
dec
cs
or
fiaddl
into
daa
xor
shll
push
lret
jbe
aad
cmp
lret
mov
ret
push
leave
lds
notb
int
dec
lahf
mov
sub
and
pop
mov
sub
add
xor
jb
mov
lcall
add
xchg
sbb
pop
pop
dec
aam
mov
test
hlt
int3
push
xchg
mov
fwait
and
ret
js
xor
ds
push
loopne
cmpsb
sbb
jmp
cmp
sbb
jae
or
jnp
xchg
pop
pop
aaa
adc
lods
sbb
rol
push
sub
cltd
out
and
shrb
iret
mov
push
pop
xor
negb
xchg
xchg
push
outsl
pop
add
mov
cli
jo
sub
cmp
scas
xchg
scas
int3
bound
sbb
inc
mov
icebp
add
pop
pop
mov
dec
icebp
dec
and
out
popf
ss
mov
jnp
mov
aaa
cmp
loop
testl
sbb
cmp
mov
mov
out
mov
imul
xor
mov
cmp
lds
mov
outsl
xchg
jmp
mov
dec
sti
pop
pop
in
dec
or
pushf
fwait
jo
jbe
scas
popl
mov
lret
sbbl
lods
mov
mov
shll
imul
mov
frstor
repz
mov
dec
mov
loop
scas
sbb
add
out
int3
jle
in
pop
insb
fistpll
out
dec
vcvtss2sd
orb
enter
ss
xchg
add
sub
jae
bound
sub
and
out
mov
nop
loope
xchg
pop
cmp
jmp
pusha
pop
add
xchg
das
xchg
rcr
mov
int
movsb
pop
pop
cli
jle
push
pop
cmp
mov
xor
ja
mov
movsb
int3
inc
fldcw
popa
loope
cmp
pop
ja
in
jmp
jbe
in
into
stos
cmp
test
jg
movsb
imul
push
adc
jbe
jp
cs
pop
dec
jnp
test
jle
scas
pop
or
stc
rolb
mov
xchg
cmp
sti
jl
jmp
aaa
popf
stc
fimull
mov
mov
aad
lods
jecxz
inc
inc
mov
lret
rorl
test
mov
push
push
xchg
cmp
adc
stc
sti
mov
or
fbld
cmp
or
dec
pop
dec
mov
mov
dec
mov
push
adc
lods
xlat
movsb
sti
xchg
out
je
dec
sub
push
subl
adc
in
cmp
pop
xchg
jecxz
scas
and
xor
enter
jne
cmpl
xchg
mov
stc
repz
lahf
sub
das
and
add
adc
mov
xchg
jbe
repz
sbb
rcrl
mov
sti
push
mov
pop
lods
rclb
jns
sahf
push
xchg
dec
cmp
js
xchg
mov
insb
das
xchg
sbb
add
jg
jg
pop
aam
loopne
pop
lahf
cmpsl
push
xor
dec
jno,pn
adc
popa
inc
lods
sub
out
ss
leave
or
sbb
lea
subl
add
fld
or
ss
mov
fldcw
mov
aaa
xor
das
ss
lcall
out
sub
fdivp
sti
inc
mov
adc
jns
cli
xor
bound
xchg
mov
pop
aas
call
movsl
les
mov
sbb
dec
inc
mov
das
jmp
mov
mov
popf
test
repz
mov
mov
test
push
rclb
push
push
enter
dec
fisubrs
shll
loope
movsl
cld
int3
aad
sub
fdivrs
cltd
push
daa
jle
sbb
sub
xlat
scas
mov
fwait
sub
movsb
inc
mov
dec
ds
add
pop
jge
push
enter
xlat
mov
stos
fcmovne
js
stos
xchg
ss
movsl
aad
jmp
xor
fmul
mov
adc
jg
cmp
mov
pusha
int3
mov
pop
scas
xor
cwtl
out
inc
repz
add
cwtl
int
outsl
bound
push
or
sbb
daa
cmpsb
loop
cs
sti
pop
add
mov
js
lds
jae
sbb
inc
ret
adc
sub
stos
dec
stc
bound
xchg
daa
and
mov
mov
xchg
lods
popf
push
inc
sbb
or
xor
mov
or
aam
push
mov
adc
stos
negb
pop
mov
pop
sub
mov
sub
sti
add
das
mov
lds
pop
cli
ret
dec
mov
xor
xlat
inc
clc
adc
stos
das
pop
or
fimuls
adc
dec
in
ds
lea
adc
fsubrs
jg
pop
and
mov
adc
out
ds
int
jo
jecxz
test
mov
outsl
imul
jno
cmovle
lret
je
mov
fs
popa
push
or
mov
movsb
rclb
cmp
and
aaa
and
out
shlb
pop
sbb
jl
cmp
pop
cmp
pop
iret
bound
and
adc
mov
inc
roll
dec
jo
jle
jne
adc
inc
iret
mov
cmp
aam
jb
xor
cmpsb
and
xor
dec
inc
jge
xor
jne
sub
js
pop
stos
fbstp
push
inc
xchg
dec
jp
jl
fstpl
in
fdivrs
xor
lds
popa
push
sbb
fs
xor
dec
scas
dec
ficoml
testb
and
inc
shlb
test
jg
xchg
pop
sbb
div
daa
add
jbe
fdivl
in
pop
pop
scas
lods
cs
xor
pop
rep
pushf
int
cld
pop
std
pop
cmpsb
scas
dec
lock
and
sub
in
call
movsl
cmp
jmp
jl
lcall
mov
stc
mov
pop
and
inc
xchg
lahf
add
mov
pop
jae
mov
mull
sti
cmp
push
rcrl
fcomps
lret
push
mov
decb
push
hlt
push
mov
xchg
push
sbb
es
stc
or
into
popa
pop
mov
fdivrs
cmc
mov
push
test
jne
dec
push
adc
std
mov
and
int
jno
mov
sbb
xlat
iret
or
aas
xor
and
lock
jno
pop
cmp
push
cmpsw
sahf
mov
sub
lods
lcall
or
jmp
xchg
jnp
icebp
arpl
rorl
or
lahf
mov
jecxz
hlt
mov
pop
or
stos
adc
mov
and
lcall
fs
rorl
xor
inc
mov
sbb
or
mov
pop
mov
hlt
aaa
jbe
in
lret
test
fimuls
stos
mov
pop
mov
fwait
loope
cmpsl
mov
insb
in
jae
jg
jno
dec
sbb
insl
and
xchg
ret
sub
pop
subl
pusha
mov
std
add
movl
test
movsb
jae
fisttps
movsl
lods
sub
mov
mov
insb
mov
insb
and
mov
fnstsw
les
push
sbb
mov
lret
ljmp
cmc
lods
or
xchg
mov
fimull
int
and
les
xchg
insl
jbe
arpl
lods
jle
mov
xor
test
xchg
lahf
or
mov
daa
cmc
ja
cli
mov
daa
stos
dec
mov
dec
add
ja
inc
loope
xor
mov
fldcw
loope
fwait
inc
cwtl
ja
inc
mov
jecxz
enter
stc
lahf
adc
fidivs
cmc
and
xor
sub
or
dec
les
push
scas
rolb
cmpsl
ret
and
scas
jno
dec
inc
into
sub
inc
mov
fdivp
jae
fisttps
jnp
aas
push
scas
pop
test
cmp
and
inc
incb
notl
pop
push
push
sub
adc
pop
mov
lret
xchg
fs
jno
mov
stc
mov
sbb
and
adc
cli
mov
leave
xchg
std
cld
xor
mov
stos
xchg
add
jp
sub
xchg
imul
mov
mov
fidivrl
into
insl
cs
in
ja
mov
jecxz
push
aad
sub
jns
jae
jmp
cmpsb
xchg
dec
push
mov
fnstenv
cmpsb
add
mov
mov
dec
loope
cmp
push
adc
movsl
pop
add
shlb
lods
sbb
addr16
repnz
xchg
adcl
sarl
incl
das
inc
dec
divb
push
mov
fwait
cs
rcrl
pop
stc
icebp
pop
loope
or
nop
idivl
mov
cmpsl
out
leave
jmp
sbbb
subl
add
daa
jb
in
movsl
or
or
xor
jno
mov
out
xor
lea
add
mov
mov
das
pop
rcrb
lret
pop
jnp
xchg
lret
popa
scas
int
in
jge
cmp
adc
and
idivb
and
xchg
xchg
mov
sub
dec
lock
push
cmp
popf
icebp
ljmp
test
lcall
jle
xchg
or
loope
les
cmp
outsl
imul
imul
rcl
lods
cltd
inc
or
pop
clc
inc
add
jno
gs
fld
sub
int
test
fs
jo
int
ret
imul
jno
xchg
int3
shl
stos
push
push
jb
adc
filds
ffree
push
pop
repnz
cltd
mov
ret
jmp
jo
add
in
xor
add
or
jmp
and
lcall
insl
sub
mov
xchg
inc
outsb
or
sub
cli
dec
int3
and
pop
pop
subb
cmp
cs
push
add
lds
push
mov
jbe
je
jns
cmpsb
mov
fcoms
cmc
out
lea
lea
mov
mov
inc
cli
sbb
lret
push
inc
mov
jns
frstor
shll
hlt
stos
sbb
je
stc
ja,pn
test
sbb
das
dec
imul
sub
inc
cmpsb
out
push
lea
mov
das
lcall
xor
adc
inc
enter
mov
xor
jg
pop
push
fnstsw
sbb
cmpb
pop
ret
and
xchg
sti
mov
inc
mov
ss
out
fisubrs
out
cmc
and
mov
jl
outsb
mov
jns
jo
mov
mov
das
cld
sub
stc
add
sbb
inc
ret
out
int3
stos
mov
stc
xor
call
dec
insl
addl
jns
in
xchg
test
mov
add
fistpl
dec
add
ja
addr16
mov
hlt
push
inc
rcrb
insl
arpl
sahf
sbb
pop
lock
mov
mov
push
aas
ret
mov
arpl
sbb
enter
into
shr
int3
xchg
push
adc
mov
adc
stos
insb
fsubs
pusha
xchg
inc
xchg
lods
mov
test
inc
sti
push
push
xor
gs
gs
test
out
out
arpl
jnp
pop
lahf
shrl
xchg
imulb
dec
dec
xchg
push
sub
mov
stos
movsl
push
inc
fwait
xchg
push
repnz
xor
stos
incl
add
dec
sbb
insb
pushf
cmpsb
je
inc
movsl
test
or
lds
or
aam
xchg
mov
push
push
mov
pop
xor
iret
sbb
mulb
inc
jb
and
je
jmp
testb
mov
dec
mov
cs
in
and
fwait
outsl
lds
dec
pop
ss
mov
je
popf
jno
incl
add
test
scas
mov
adcl
leave
jl
cmp
or
fs
push
pop
sbb
push
xchg
repnz
push
test
pushf
push
sbb
mov
jmp
pop
lret
ss
mov
mov
jnp
outsb
mov
jp
sub
loopne
call
or
inc
xchg
sub
outsb
xchg
int3
xchg
sub
rolb
and
sbb
imul
fs
into
inc
aad
je
mov
sub
movsb
movsb
inc
movsb
lods
arpl
loop
sbb
mov
movsb
mov
cmp
dec
loop
xor
jns
aam
lahf
cmp
mov
insb
int
ret
mov
nop
cmpb
ljmp
das
xor
fbld
insl
pop
jge
nop
xchg
mov
and
outsl
out
jge
push
push
movsb
adcb
cltd
mov
jns
movsb
jb
push
test
les
das
push
pop
pusha
mov
add
mov
inc
jmp
xor
outsl
mov
cli
dec
repnz
and
les
xor
jecxz
pop
icebp
pop
subb
or
movsl
xor
addb
cmp
cmp
dec
xchg
call
mov
je
ljmp
fisubrl
push
in
sub
loope
jb
mov
inc
iret
pop
aad
xlat
cmp
je
jns
push
stos
mull
ljmp
mov
sub
push
icebp
mov
lahf
rolb
filds
push
aaa
xchg
jecxz
sub
jne
jmp
and
mov
test
icebp
aaa
mov
aam
fsubl
movsb
in
mov
test
xlat
adc
lea
repz
add
daa
adc
add
adc
shl
cmp
xchg
notb
cmp
test
ds
or
hlt
dec
mov
mov
mov
dec
data16
dec
loopne
dec
into
sti
add
pop
pusha
popa
pushf
nop
xor
movsl
test
aam
out
mov
cwtl
mov
bound
xchg
test
arpl
xchg
add
insl
sub
cmc
and
cli
push
fs
cmpsb
jne
xchg
push
jae
push
mov
iret
cwtl
and
fstp
and
sub
jo
push
cld
cmp
jmp
sarb
adc
orl
adc
mov
ss
ja
ficomps
movsb
jg
sbb
in
in
jns
std
test
js
ret
or
rcl
adc
push
pop
jo
jge
lods
aam
ret
push
mov
and
cmp
jbe
stos
xchg
int
cmp
mov
fs
scas
lret
lcall
shlb
je
jns
mov
fcmovu
xor
movsl
mov
mov
pop
xor
in
add
outsb
rcrl
clc
in
jb
cwtl
lcall
push
or
lods
cltd
xchg
std
sbb
cmp
jmp
pop
inc
dec
mov
jge
push
ret
mov
fwait
inc
adc
cmc
inc
add
ljmp
adc
test
fs
sbb
lahf
clc
push
push
js
push
and
push
pop
enter
sub
xor
sar
pop
inc
mov
cmp
mov
mov
stos
sbb
std
data16
inc
call
in
adc
mov
jne
fsubr
punpckldq
mov
jge
stos
cli
pushf
cld
add
add
xor
xor
fsubrs
lret
xchg
push
lahf
jmp
je
cmp
dec
in
jg
sbb
mov
mov
ljmp
push
mov
mov
fisubs
cwtl
out
push
decb
or
mov
shlb
lcall
lock
push
jg
fists
repnz
inc
adc
movsl
ds
int3
stos
pop
jo
pop
rorb
add
xchg
aad
sar
imul
or
fsubp
push
add
outsl
leave
mov
dec
int3
and
push
cmp
dec
push
xchg
lea
or
push
adc
mov
mov
mov
mov
test
xchg
xor
xchg
ss
mov
adc
pop
ja
add
push
aas
imul
loope
and
adc
iret
lret
divl
pop
xchg
and
sti
cltd
pop
popf
push
sarb
popa
nop
mov
cmp
scas
or
addr16
adc
lret
cld
cltd
fwait
idiv
ret
repnz
adc
cmp
out
lods
jnp
sbb
jecxz
cli
xorb
sub
and
cmpsl
insl
dec
fwait
inc
je
fidivrl
fidivrl
test
mov
lret
push
sbb
pop
stos
cmpsl
or
adc
in
adc
orps
pop
fistpl
gs
and
xchg
scas
insb
or
push
dec
xchg
and
xor
mov
jno
xchg
sbb
popf
sahf
outsb
fimuls
inc
cmp
stos
and
fnstcw
adc
sbb
mov
sub
ljmp
lret
jge
loope
rclb
stos
icebp
aaa
pop
sbb
or
cmp
icebp
add
push
lods
jnp
mov
enter
push
xchg
nop
jbe
inc
dec
inc
and
imul
cmp
popf
cmp
mov
xchg
mov
das
cmpsl
jecxz
loop
sbb
add
dec
test
mov
xchg
sbb
jbe
out
jecxz
fdivrs
test
mov
test
aam
movsl
enter
sbb
mov
cwtl
fwait
pop
inc
xor
add
push
and
ret
cwtl
add
sbb
movsl
call
out
xchg
pop
jnp
insb
sub
outsb
nop
push
les
mov
jle
popf
fildl
jge
mov
ljmp
cmc
mov
inc
cwtl
shll
cmp
rcll
and
mov
js
in
sbb
lret
xchg
jno
push
and
xchg
aaa
rorb
or
lods
sbb
out
leave
and
ss
pop
adc
add
mov
push
mov
mov
nop
mov
loop
jg
jp
addr16
cmpsb
mov
aam
mov
jge
or
sbb
xchg
shrl
adcl
bswap
movsb
sub
xchg
movsl
fiadds
xlat
mov
in
lock
mov
test
cmp
and
pop
stos
faddl
dec
pop
mov
int
jge
xor
mov
loop
xchg
pop
jp
push
xor
frstor
mov
es
stos
sbb
inc
ljmp
jg
push
push
out
movsl
aas
outsl
push
das
sahf
js
sbb
add
clc
add
fwait
xor
push
bound
pop
pop
push
icebp
lahf
pop
scas
nop
ss
jg
movsb
out
pop
cwtl
mov
loopne
or
lods
mov
sub
dec
sti
inc
push
dec
je
mov
cmp
mov
mov
inc
lods
fisttps
into
mov
int
cmp
int
ljmp
mov
mov
push
lea
pop
leave
and
cwtl
je
sbb
sti
int
add
jecxz
dec
adc
pusha
mov
mov
cmp
cs
fmuls
inc
gs
icebp
fdivl
movsb
das
es
push
sub
les
jnp
jb
and
testb
fidivs
iret
lea
xor
and
rcrl
mov
fisubrs
cmp
lods
fsubs
push
xchg
mov
mov
inc
pushl
jl
mov
mov
in
or
cmpsl
push
dec
mov
add
jns
mov
nop
mov
cmp
rcr
inc
xchg
shlb
sahf
sbb
sahf
lahf
in
std
or
xchg
in
jge
push
mov
out
call
mov
mov
scas
add
xchg
bound
scas
lcall
outsl
adc
aad
jge
repz
jmp
cmp
push
add
out
jo
pop
jmp
lea
lock
xor
fmull
or
nop
sbb
ja
in
cmpsb
mov
aad
adc
fwait
cmp
xchg
scas
mov
adc
out
fwait
and
je
mov
outsb
and
divl
stos
ja
ljmp
ja
out
xchg
es
push
cltd
popa
pusha
xorl
test
lret
push
test
cld
mov
cld
cwtl
pushf
cmp
or
dec
test
shrb
aaa
dec
xor
cmp
insl
adc
std
lea
mov
jne
jl
repz
lock
std
push
in
mov
mov
jmp
nop
bound
mov
xor
fwait
out
cli
je
test
xor
pop
add
push
xor
push
pop
inc
push
mov
ffree
bound
repnz
out
fldt
mov
rcrb
sub
clc
ret
cmp
mov
mov
lods
pop
data16
jp
or
iret
cli
aaa
dec
ljmp
bnd
dec
cli
xchg
sti
sub
rcl
int
imul
push
cltd
lret
xlat
push
jle
outsb
pop
dec
mov
mov
fucomi
jnp
pop
inc
or
xchg
inc
mov
push
dec
test
pusha
fs
cs
dec
nop
inc
jge
cmp
loop
cmpsl
das
or
sbb
lret
sbb
and
sub
clc
incb
mov
jns
sub
push
sahf
xchg
leave
arpl
add
lea
jno
mov
mov
jl
shrb
in
cmpl
pop
sub
cmp
loop
or
arpl
popa
adc
adc
pop
ljmp
mov
xor
cli
loopne
jb
push
mov
and
jmp
loope
add
dec
sbb
and
aas
scas
mov
rcrb
mov
push
or
dec
fwait
push
sbb
xchg
aad
es
sbb
jecxz
sbb
cld
jno
out
sahf
sub
or
dec
icebp
xor
pop
outsl
lsl
pop
ds
enter
cmp
mov
ja
cmp
loopne
arpl
push
sbb
movsb
push
aam
dec
cmpsb
in
inc
inc
adc
sub
test
call
mov
mov
movsl
inc
mov
mov
inc
mov
mov
adc
pop
test
mov
ds
xchg
test
sub
adc
mov
and
cltd
mov
sub
sbb
shrl
scas
dec
insl
mov
pop
xchg
cwtl
scas
mov
and
push
das
fsubr
mov
lea
nop
cltd
push
lods
mov
gs
fcmovne
int3
es
call
push
cmpsb
cmp
test
push
es
add
push
xchg
and
sub
fnsave
fidivl
fwait
mov
addl
cmp
negb
sub
add
mov
pop
insl
int3
xchg
inc
cli
movsl
loope
fld
cmp
inc
jbe
xor
or
data16
movsl
and
xchg
insb
rolb
mov
leave
push
sarb
jg
nop
jmp
aad
push
mov
push
loop
or
xchg
mov
sub
fidivrl
ret
fdivl
and
cmc
push
inc
sbb
pop
mov
pop
arpl
mov
cmpsl
sbb
in
cmp
jo
lahf
aaa
or
inc
movb
dec
jo
ss
clc
mov
xchg
dec
ds
adc
fdivl
mov
fidivl
jns
adc
xchg
add
sub
insl
dec
dec
push
int3
test
pop
fadds
cwtl
movsb
inc
inc
mov
iret
fidivrl
js
pushf
fwait
movl
rep
data16
pop
sbb
pop
roll
jmp
stos
mov
xchg
shrl
shrl
xor
imul
pop
adc
add
outsb
cmp
fcoml
sbb
imull
data16
xor
fs
pop
sarl
mov
xchg
insb
mov
popa
adc
out
fildl
inc
add
mov
jae
mov
repz
sub
or
adc
mov
and
fidivs
ror
and
pandn
mov
xchg
cmpsl
shll
pop
sub
pop
adc
loop
fsts
and
ja
and
wrmsr
sub
ljmp
mov
std
ljmp
dec
pop
sbb
outsl
sbb
lock
arpl
lahf
xchg
pop
test
mov
mov
push
mov
xchg
adc
pop
movsl
enter
scas
jno
jne
sahf
inc
mov
nop
dec
js
aaa
out
dec
aam
jp
arpl
rol
and
lcall
fadds
inc
aam
fistps
fdivl
test
pop
add
mov
enter
push
mov
insl
pop
adc
push
dec
sbbb
xor
mov
cmp
jb
aaa
stc
xor
bound
inc
repz
jmp
test
jae
outsb
sbb
cmp
and
lret
and
jo
and
push
or
hlt
sub
cld
mov
jae
iret
int
xchg
in
jae
call
out
sub
adc
cmp
std
xchg
in
cli
adc
mov
into
pop
imul
out
xchg
inc
adc
je,pn
jns
lret
aam
aas
cld
mov
cmc
shll
xchg
mov
popa
ret
mov
sbbl
daa
mov
add
or
cli
push
loopne
dec
out
inc
scas
in
mov
stc
pop
orb
rolb
out
cli
dec
sahf
icebp
rclb
pop
movsl
mov
mov
cmp
repz
push
push
or
pop
cmp
daa
enter
xchg
ljmp
sub
dec
sub
xor
adc
xor
mov
adc
xor
daa
arpl
ljmp
pop
rcll
incl
iret
in
xchg
daa
mov
xorb
jno
in
adc
lahf
les
enter
pop
pop
push
lods
inc
imul
pusha
repnz
xor
lock
xchg
in
jmp
pop
cmpsl
jle,pt
jns
lret
add
mov
lret
sub
fwait
mov
leave
ds
jmp
and
jmp
or
adc
insl
mov
test
insb
in
add
insb
clc
add
xor
cmpsl
xchg
or
inc
aaa
dec
in
xchg
sbb
sbb
jge
dec
mov
cmp
in
shl
mov
mov
in
shlb
dec
int
gs
mov
inc
popf
sub
out
inc
imul
ret
push
mov
lahf
iret
ret
mov
and
lcall
out
xchg
push
sbb
mov
add
js
pop
jnp
mov
mov
dec
push
mov
lods
pushf
fmul
cmovp
mov
loop
jno
cwtl
pusha
sub
scas
push
cmc
cltd
sbb
lret
adc
test
inc
mov
mov
sub
xor
jp
fimull
mov
stos
cs
add
mov
jmp
sbb
lret
loope
inc
xlat
stos
mov
mov
insl
add
out
data16
jne
cmc
cs
faddl
out
daa
in
mov
fnstcw
sar
xchg
fcmove
loopne
rolb
pop
fdivp
mov
mov
addb
fistpl
repz
push
sarb
leave
sbbl
push
adc
sar
pop
daa
or
fs
and
aad
icebp
sub
aas
lock
or
mov
and
xorl
in
cwtl
push
daa
lret
imul
mov
scas
shrb
lret
decb
pop
mov
sbb
push
andb
movsb
sti
sbb
test
shr
je
sahf
sbb
sbbb
adc
outsl
int3
enter
or
and
mov
push
push
dec
aad
fisttps
mov
adc
inc
mov
cmp
inc
dec
fs
mov
xchg
dec
daa
out
dec
in
mov
outsl
fisttps
scas
jmp
ftst
outsl
fwait
loope
mov
icebp
dec
ss
pushf
mov
pushf
xor
outsl
push
fnstsw
fildl
subl
add
int
insb
mov
dec
fstps
mov
xor
clc
loop
xchg
loope
xchg
and
int3
mov
hlt
sbb
push
imul
push
scas
mov
cmp
rorb
push
or
jecxz
out
xor
push
ret
xchg
lret
pusha
pop
push
push
lret
lcall
sbb
jg
jns
stc
in
inc
pushf
or
mov
es
int
daa
notb
movsb
and
jecxz
scas
mov
sar
and
out
xor
ljmp
imul
mov
cltd
inc
mov
inc
and
sub
xchg
sub
ja
cmp
aaa
mov
in
dec
filds
jo
outsl
loope
int
cmp
sub
or
adc
dec
dec
inc
cltd
pop
xlat
dec
fmull
lfence
inc
inc
cwtl
pushf
fdivr
mov
mov
jle
cmp
add
pop
ret
cld
rclb
mov
sbb
push
call
cwtl
cs
or
add
inc
aaa
sbb
lods
xchg
frndint
lahf
popa
aad
xchg
adc
or
mov
addr16
bnd
push
push
dec
cmp
pop
pusha
sbb
ficomps
push
into
push
mov
inc
hlt
in
dec
sti
lcall
dec
mov
mov
mov
test
cmpsb
rolb
push
inc
ret
in
or
xchg
out
leave
sbb
pop
mov
out
sub
cmp
subb
stos
inc
jmp
sbb
lock
mov
pop
jle
jbe
xchg
repz
jnp
jae
in
push
enter
push
insb
lcall
lahf
push
xchg
cmp
jle
sbb
sbb
and
push
das
mov
cltd
push
pop
cmpb
ds
push
adc
lods
pop
pop
call
aaa
adc
mov
xor
stc
imul
ja
insb
test
pop
fcmove
mov
pop
cli
inc
aas
or
sub
mov
mov
push
imul
repz
mov
sti
pop
loopne
sbb
sbb
push
pop
xchg
xchg
pop
adc
popf
inc
out
dec
icebp
or
roll
popa
shrb
loope
not
test
xlat
rolb
pop
adc
fadd
mov
inc
cmpsl
icebp
insl
je
push
sub
and
shll
out
es
sbb
inc
mov
jecxz
jns
xchg
cmp
mov
shl
cli
mov
push
or
sub
pop
inc
shll
lds
scas
pop
push
dec
push
jae
ret
mov
imul
jmp
loope
enter
or
mov
imul
jp
xchg
inc
sahf
jno
ds
sahf
lret
add
cmp
xor
add
shlb
fdivl
inc
add
xchg
int3
aam
mov
popa
jno
sahf
lahf
push
dec
inc
cmp
pop
sub
in
inc
cld
adc
sub
shrl
popa
mov
fistpll
int3
sarl
loopne
data16
cs
sbb
jnp
push
inc
xor
int3
pop
add
pushf
loop
pop
jge
or
in
sbb
xchg
leave
aad
ret
in
mull
or
inc
loope
sete
mov
push
adc
xlat
rcll
jge
pop
fimuls
jne
cwtl
dec
or
jno
and
movsb
mov
push
ss
mov
test
fwait
mov
pop
pop
or
orb
leave
cmc
sbb
lock
mov
test
sub
adc
mov
or
add
roll
mov
jecxz
xchg
add
int3
and
pop
rcl
test
shll
sbb
insl
pop
mov
xlat
xchg
vpmuludq
ja
dec
push
inc
mov
jb
repnz
jl
mov
test
mov
fmuls
or
push
mov
jno
loop
push
bnd
xor
adc
mov
in
cmp
fwait
lea
jno
and
sbb
jge
outsl
clc
sarl
loopne
dec
and
sbb
or
cmc
mov
repz
adc
pop
popf
sub
out
lds
test
mov
add
fmul
cmc
mov
mov
lock
inc
sub
pop
aas
adc
xor
pop
aas
xchg
and
pop
movsl
je
sub
pushf
mov
pop
popa
pop
dec
movsl
xchg
loop
repnz
sub
xor
daa
cmp
out
or
push
int3
jo
sbb
pop
call
sbb
mov
and
cmp
ret
test
mov
and
pop
or
xor
sub
push
xchg
addb
mov
in
cmc
inc
sub
adc
mov
popa
xor
inc
push
outsb
aas
or
call
xchg
add
std
mov
int3
mov
mov
mov
hlt
jne
aas
stc
push
and
imul
fwait
lds
push
into
and
pushf
push
add
outsb
daa
mov
mov
dec
sub
xchg
mov
inc
and
sub
nop
ret
mov
sarl
xlat
enter
shll
mov
pop
leave
mov
adc
jmp
ljmp
bound
repz
xor
add
fstps
imul
pop
out
inc
icebp
fadd
stc
out
mov
or
lock
scas
stos
sbb
xchg
push
cmc
and
test
cmpsl
fs
repz
or
or
mov
push
cld
mov
pop
mov
adc
repnz
jp
cld
sub
cmpsl
push
out
repz
mov
inc
inc
pop
xlat
mov
addb
jnp
jmp
mov
mov
shr
sub
lods
lret
mov
out
mov
stos
cmp
jle
add
xor
and
push
rclb
js
ret
mov
xor
jne
jg
pop
jb
jge
ficompl
jno
fsubrp
xchg
push
sub
xchg
add
xchg
sub
mov
outsb
rol
fsubs
stos
xorl
sbb
imull
repnz
fs
push
dec
dec
data16
lret
dec
cmpsb
scas
cltd
push
lods
inc
cs
mov
ficompl
xchg
mov
out
aas
aaa
inc
push
dec
sarb
xchg
daa
cmc
mov
fidivl
jecxz
test
ret
adc
movb
mov
fisubrl
pop
loope
in
scas
pop
clc
sub
and
xchg
bound
sarb
shrl
inc
inc
fists
fcompp
pushf
loop
out
test
popa
ret
pop
enter
sbb
in
push
xchg
cmpsl
push
fcoml
push
dec
mov
cli
xor
movsl
sub
repz
enter
inc
jle
pop
sbb
sub
in
xor
addb
mov
xchg
sub
dec
mov
jne
out
cmp
cmp
push
cmc
lahf
icebp
cld
out
leave
dec
test
xor
test
xor
cmp
mov
lcall
loop
mov
leave
xchg
mov
aas
stos
and
rolb
add
push
rolb
sub
jae
in
jnp
inc
jmp
movsl
cli
adc
pop
loopne
mov
inc
dec
cmp
and
mov
lods
outsb
mov
sub
popf
mov
fisubs
dec
fdivp
rcr
pop
popa
test
mov
shll
push
mov
adc
jbe
push
test
enter
fldl
sbb
xlat
inc
loope
lds
xorb
das
pop
xchg
lcall
inc
sbb
cmpsb
mov
adc
dec
xor
push
cmp
pop
shrl
xor
add
cmp
xchg
jl
sbb
xchg
sbb
sbb
scas
pop
data16
mov
pop
nop
out
loopne
sub
mov
mov
insl
adc
stos
xor
out
and
iret
test
dec
leave
dec
test
and
jge
fimuls
xchg
jo
cld
mov
dec
cli
sub
jge
in
stc
mov
fs
lock
mov
and
mov
mov
adc
push
sahf
mov
mov
xor
pop
and
enter
and
movsl
aas
in
sbb
cwtl
stc
jge
dec
mov
pop
cwtl
mov
jg
mov
bound
jbe
rcrb
nop
les
rolb
jg
lcall
cmc
and
jle
lcall
sbb
frstor
xor
test
cmp
mov
jmp
and
nop
addr16
mov
or
pop
ljmp
push
xchg
and
adc
enter
insl
cmp
repz
sub
lock
pop
add
inc
aas
mov
mov
push
loope
into
divl
test
mov
in
insl
out
dec
cmp
cltd
or
pop
shlb
insl
inc
push
sub
cmp
adc
mov
pop
mov
test
aas
push
pop
cli
or
loop
lods
fwait
shlb
rcrl
dec
mov
test
sbb
and
adc
mov
mov
add
dec
mov
shlw
mov
push
mov
sub
dec
movb
cmpsl
adc
xchg
push
xor
xor
push
and
push
popf
cltd
out
xchg
jge
lret
or
hlt
xchg
or
into
inc
sub
ljmp
xchg
push
out
xchg
mov
jbe
test
in
pop
imulb
cmp
roll
into
mulb
mov
and
out
sub
lds
and
notb
fdivrs
iret
aam
xchg
mov
movb
loope
or
xlat
cs
xchg
and
inc
xor
loop
int
pop
daa
pop
rol
cmp
cmpsb
adc
xor
in
inc
pop
out
pop
sbb
sub
xchg
inc
sahf
or
adc
cli
and
repz
cmp
test
scas
in
pop
dec
xlat
cmp
push
mov
jmp
sahf
aam
push
sub
cmp
sarb
mov
in
popf
mov
pop
mov
push
inc
ja
loop
call
jecxz
dec
xchg
mov
pop
or
sbb
out
ss
dec
and
addr16
dec
loopne
jo
aam
xchg
add
mov
mov
in
std
int3
fildl
xchg
lds
push
add
push
in
testb
fistpl
fisttps
enter
data16
jnp
pop
ss
outsb
inc
push
mov
cs
enter
cmp
jbe
cltd
daa
in
mov
stos
xchg
inc
add
inc
lods
std
or
add
jp
push
es
jne
enter
pusha
roll
xchg
out
push
pop
sbb
pushf
dec
loop
inc
aad
shlb
fildll
or
push
add
enter
sub
pop
jl
sbb
jne
jp
dec
je
das
dec
cld
rcrb
sub
jae
xor
cmpl
imul
call
not
cmp
push
cltd
mov
sub
push
xchg
sbb
in
inc
xchg
stos
or
shrb
enter
das
add
sbb
mov
xor
mov
adc
aas
pop
movsl
adc
lds
mov
imul
jbe
pusha
pop
inc
jno
xchg
loopne
pop
sub
aad
clc
pop
inc
adc
push
mov
dec
arpl
xchg
xchg
mov
ljmp
in
stos
test
cmpsl
fisubrl
xchg
cld
jmp
ror
mov
pop
sbb
jmp
jl
or
push
pushf
into
mov
addb
xchg
sti
rol
push
mov
pop
ljmp
dec
lret
push
out
jne
cmp
jl
cmpsl
cld
sti
fldcw
mov
jle
js
es
rcrb
popa
mov
push
sub
out
adc
mov
xor
bound
mov
nop
pop
lds
ja
jb
data16
fidivl
sbb
and
aaa
dec
mov
int3
notb
pop
cltd
sbb
push
mov
push
jns
mov
xor
cwtl
dec
lahf
out
std
shll
dec
rclb
stos
testb
clc
mov
push
negl
jmp
mov
and
sub
pop
pop
pop
cmp
aaa
sub
xchg
and
or
lahf
popf
adc
mov
or
jp
icebp
lcall
mov
ja
or
xchg
cltd
inc
into
imull
ja
cltd
aaa
stc
xchg
lret
movsl
into
push
scas
xchg
xchg
or
in
add
repz
ja
dec
xor
push
psubsb
jnp
and
rorl
lock
fwait
pop
popf
adc
lahf
mov
insb
mov
jge
inc
push
movsl
out
fisubrl
clc
push
rcl
xor
jl
daa
sbb
and
mov
icebp
jg
jge
out
lods
xor
in
in
mov
add
dec
sub
push
shrl
sub
loop
ret
mov
outsl
enter
out
or
jmp
loope
jne
xor
cltd
std
push
dec
cld
andb
jae
enter
pop
and
in
out
add
or
call
push
xlat
loopne
js
cltd
scas
or
pop
lds
xchg
xlat
bound
jnp
iret
sub
dec
and
xor
into
xchg
and
daa
adc
ret
popa
fwait
lret
and
xlat
stc
jae
dec
sub
cli
fstl
lahf
outsl
and
daa
sar
stos
cwtl
in
jge
xor
push
cmp
mov
movsb
frstor
xchg
jne
fwait
cmp
mov
or
or
xor
mov
idivl
jnp
daa
popa
outsl
mov
xlat
push
mov
cmp
mov
mov
mov
push
lret
rcrb
xchg
xchg
addb
nop
sti
add
pushf
lcall
shlb
cmc
out
sbb
pop
cmc
outsb
call
bound
cltd
push
cs
mov
dec
push
in
notl
adc
imulb
mov
push
imul
sub
mov
push
inc
int
ljmp
out
mov
mov
in
push
mov
add
sar
les
mov
rcll
test
pushf
xchg
dec
xor
pop
pop
stos
cmp
mov
icebp
add
jns
rol
xor
jp
daa
cmp
mov
daa
rcrl
jae
movsl
jmp
adc
data16
add
jae
ret
inc
cmp
es
jecxz
in
imul
enter
pushf
insb
aaa
and
aaa
sti
xor
xor
rclb
lods
mov
and
add
push
inc
inc
lahf
jmp
cmp
leave
inc
test
jo
mov
adc
push
pop
hlt
insb
inc
cltd
push
mov
into
pushf
adc
adc
pop
jecxz
lock
inc
sarb
je
iret
mov
adc
outsb
add
jno
out
mov
neg
xor
push
jg
loop
mov
aas
xlat
sahf
xchg
mov
xor
jmp
add
inc
shll
cld
shrb
outsl
ss
mov
insb
xchg
mov
out
pop
cmpsl
nop
stos
test
pop
clc
shll
pop
inc
pop
adc
mov
push
push
ds
imul
pop
jecxz
dec
lods
repz
xchg
lret
push
test
in
cmp
insb
adc
pop
fwait
mov
test
sbb
mov
jne
and
fs
cs
mov
push
rcll
mov
aam
negl
jle
fistpll
rcrl
or
xchg
jge
repnz
jp
stos
aam
sub
in
pushf
roll
jmp
aaa
call
pop
mov
scas
or
cmpsb
ret
jmp
in
mov
add
ja
push
xor
ljmp
clc
fdivrl
mov
fisttpll
dec
inc
pop
popa
jge
and
cmp
testl
fldcw
xchg
fwait
mov
sbb
fldenv
imul
imul
jns
push
arpl
jp
cld
scas
dec
and
ljmp
test
xchg
lock
or
movsb
scas
and
sub
stc
stos
xchg
jnp
pop
popf
xchg
dec
cltd
mov
aas
hlt
pop
and
or
push
test
sub
or
mov
insb
jbe
loope
das
divl
bound
mov
mov
sub
cmpl
mov
insb
xchg
jmp
jle
pushf
inc
and
push
pushl
or
sub
mov
out
jl
pop
pop
subb
and
mov
pop
scas
push
jmp
sbb
test
cmpsb
sub
jo
mov
mov
push
jle
pop
inc
xchg
xor
mov
mov
imul
mov
dec
js
xchg
jp
vsubsd
mov
cs
fwait
inc
adc
mov
add
test
dec
xor
pop
cmpsb
arpl
jl
jae
xchg
ret
loope
in
push
mov
add
pop
and
lea
jg
dec
push
jb
jnp
lds
out
cmp
push
push
xor
cmpsl
enter
add
and
jb
mov
jecxz
aad
popf
addr16
xchg
push
imul
fsub
cs
iret
dec
lock
icebp
xor
and
cmp
idivl
adc
adc
cltd
mulb
jnp
push
xchg
dec
pop
fstps
cli
sbb
das
jge
adc
xchg
push
iret
adc
rcrb
arpl
nop
adc
loope
in
push
dec
jl
dec
xor
xor
mov
test
cwtl
xor
cld
cmp
je
mov
xlat
adc
add
mov
mov
jae
test
dec
out
mov
cmc
int
mov
sbb
stos
insb
mov
dec
lods
fsubr
out
adc
inc
adc
dec
paddw
jge
xor
sbb
sbb
sub
or
jae
in
pushf
adc
cmpsl
xchg
mov
les
test
sub
jle
push
mov
call
add
pop
aaa
xor
push
mov
sarl
and
lcall
loopne
stc
pop
mov
adc
mov
mov
es
orl
xchg
aam
es
mov
push
add
or
subb
sbb
cmp
lahf
dec
mov
mov
aad
ret
into
loopne
push
xor
xor
sbb
out
dec
adc
cmp
mov
adc
inc
into
and
or
sub
and
xor
inc
sub
pop
mov
ret
pop
js
xor
dec
psrad
fisubrs
leave
ds
sub
push
scas
pcmpeqd
inc
adc
idivb
jge
in
test
xchg
add
push
out
inc
ja
popf
adc
aam
pop
lahf
stos
or
jb
inc
mov
and
test
popa
rclb
dec
xchg
pushf
popf
inc
sub
xor
out
decl
jb
not
pop
cmp
in
jo
movsl
call
fs
jg
cmc
jmp
add
mov
das
and
xchg
imul
leave
das
mov
mov
xchg
xchg
js
xor
lods
add
fwait
movsb
fbstp
lret
fbld
mov
pusha
daa
int3
xchg
clts
or
cltd
cltd
lock
mov
inc
shrb
sub
pop
lret
push
mov
mov
jne
mov
mov
test
aad
outsl
cld
sbb
fildl
jb
sahf
mov
inc
adc
push
imul
imul
cmp
mov
pop
xor
xchg
into
mov
add
sub
aas
pop
push
fmuls
xor
movsb
xchg
sbb
in
scas
push
pop
cmp
sbb
cmc
sbb
jmp
lock
or
fcomp
xor
pop
rolb
pop
mov
outsb
add
mov
roll
jno
frstor
imul
das
and
xchg
mov
cmpb
mov
push
or
and
nop
aaa
and
mov
pushf
and
cmp
rcr
fwait
xchg
enter
out
pop
imul
cld
xchg
scas
mov
lret
scas
inc
ds
std
pop
mov
enter
daa
out
sub
mov
imul
cmpsl
add
pop
mov
jo
mov
sti
add
pushf
cmc
add
out
ds
mov
fcomps
cmp
subb
jecxz
sbb
add
icebp
test
mov
movsb
inc
aad
sub
pop
xchg
sbb
ds
cmp
cltd
sbb
xorl
mov
dec
jecxz
xchg
dec
inc
call
test
cld
leave
mov
icebp
dec
int3
mov
jg
xchg
std
jae
mov
jb
xor
rclb
shl
pop
cwtl
stos
int
stos
int
mov
pop
ljmp
xchg
xchg
xchg
lahf
and
je
insl
xchg
push
inc
dec
adc
and
sub
lods
push
mov
lcall
xor
push
jge
sbb
or
add
sub
jl
and
or
jp
add
pop
cmp
jl
sbb
pop
addr16
xlat
out
inc
repnz
sub
insl
jne
imul
adc
aad
sub
lds
movsl
push
gs
xor
mov
fstl
lods
lret
jg
stc
es
dec
inc
sarb
std
es
add
mov
sbbb
sub
mov
adc
and
dec
push
jno
push
inc
dec
fwait
and
aaa
mov
mov
push
gs
push
mov
outsb
add
lahf
out
iret
notl
out
fmul
dec
pop
add
std
dec
jo
int
sub
fwait
sub
jecxz
mov
gs
dec
add
sbb
in
ja
jge
add
call
and
jg
pop
iret
mov
sbb
ds
mov
dec
stc
pop
inc
push
popa
sbb
cmp
pop
dec
mov
les
hlt
xchg
or
jl
dec
cwtl
addb
cmp
pop
fmuls
addr16
push
pop
or
stc
inc
call
out
mov
jp
jne
gs
js
dec
fiadds
add
out
cmp
lds
xchg
mov
xchg
inc
pushf
mov
divl
jae
aas
cvttps2pi
movsb
jb
mov
xchg
ret
mov
testb
inc
mov
add
aam
in
mov
or
ljmp
daa
xchg
ret
mov
xchg
xchg
and
and
jo
sbb
shl
mov
outsb
lods
dec
pop
adc
fiadds
lret
ja
fldl
nop
movsb
cmp
mov
xchg
cld
ror
pusha
rolb
xor
mov
adc
xor
scas
cmp
mov
bound
icebp
xchg
lcall
mov
loope
nop
leave
imul
stc
les
jne
in
mov
jo
sbb
ret
cli
lea
loopne
inc
orb
cmpsb
and
sbb
and
lahf
jne
xlat
add
sub
jo
sub
enter
loopne
fwait
mov
add
mov
jecxz
inc
add
xor
in
lret
mov
das
data16
pusha
lds
ret
stos
aaa
das
sbb
dec
jnp
repnz
out
push
mov
clc
xchg
jnp
inc
inc
pop
xchg
mov
or
mov
imul
sub
mov
push
mov
int
push
xchg
in
adc
call
dec
ret
imul
xor
xor
fwait
arpl
pop
xor
adc
arpl
js
jecxz
pop
lea
xchg
push
jmp
sahf
adc
mov
mov
adc
es
mov
adc
rclb
push
icebp
pop
sahf
scas
mov
std
scas
orl
je
fdivr
jne
inc
pop
pop
fbld
nop
jp
scas
lock
pop
cmp
sahf
fistpll
or
es
gs
notb
insl
in
push
xchg
mov
inc
push
shlb
out
test
sub
dec
push
call
hlt
daa
dec
out
jbe
xchg
out
push
pop
inc
xchg
loope
inc
sub
mov
test
pop
sarb
aas
mov
cmp
jne
lret
aam
sbb
inc
or
push
push
stc
and
adc
sub
je
push
ficoml
mov
mov
into
lret
mov
cmp
es
pusha
adc
imul
in
sub
insb
jae
mov
lahf
movsb
out
dec
lret
ret
test
mov
std
mov
in
fucom
iret
lds
outsb
mov
jno
adc
add
js
adc
or
dec
mov
jge
pop
cmp
dec
mov
dec
repnz
jg
jg
subl
adc
ljmp
lea
mov
sti
mov
notl
pushf
imul
leave
cmp
cmp
scas
pushf
cltd
fistl
xchg
push
sub
jb
add
and
in
not
push
rolb
add
enter
or
xchg
cmp
push
std
mov
adc
pusha
push
iret
mov
pop
scas
popf
sub
insl
sub
jecxz
sub
aas
pop
mov
jno
cmc
les
push
hlt
and
push
ljmp
or
add
jnp
loopne
pop
jl
sbb
hlt
inc
ljmp
orb
aaa
stos
mov
push
mov
outsb
insb
adc
mov
mov
cmpsl
les
push
test
jl
pusha
xchg
out
and
and
add
cmp
test
sub
cltd
mov
gs
pop
or
sub
pop
cli
dec
cmp
push
outsb
aam
loop
dec
popa
sub
enter
jbe
inc
pop
push
mov
dec
pop
in
sub
out
fnstcw
dec
sarb
loopne
mov
sarb
push
je
stos
scas
mov
pop
aas
pop
dec
and
imul
pop
push
or
jns
dec
sbbb
adc
mov
scas
cmpsl
and
cmpsl
ljmp
je
xor
call
push
enter
ret
push
xor
repnz
adc
cmp
mov
outsl
push
mov
add
lods
jbe
cmp
daa
stc
xor
out
dec
jns
push
call
js
sbb
addr16
aad
pop
inc
jecxz
inc
rcl
shlb
xchg
cs
daa
fsubl
mov
cwtl
xor
or
cli
cltd
leave
mov
mov
pop
into
xchg
or
imul
movsl
lret
mov
fdivl
in
cmp
outsl
ds
in
mov
mov
mov
pop
pop
leave
adc
push
popf
inc
xchg
insl
loopne
cltd
dec
mov
sarl
bound
sti
rclb
sbb
cli
mov
xor
fistps
jno
cmp
setne
adc
movsl
jmp
pop
jb
stos
xor
loop
add
cmp
mov
pop
add
mov
out
andb
inc
push
adc
dec
movsl
cmp
js
mov
cmp
add
dec
in
xlat
xchg
adc
fstl
push
inc
mov
pop
cs
mov
lret
ret
fldt
adc
rclb
pop
fisubrl
push
sbb
fidivrl
js
in
cmovge
pop
js
adc
out
daa
cmp
iret
insl
lahf
inc
adc
out
cmp
cmp
mov
pop
int3
sbb
add
sbb
mov
dec
mov
jl
add
mov
lock
jb
mov
ror
aam
sub
fstpl
sbb
lcall
adc
outsb
mov
push
mov
fsubrl
mov
out
dec
mov
adc
adc
jne
push
aaa
jno
pop
je
orl
xchg
hlt
outsb
jno
sub
mov
lods
xchg
adc
lcall
xor
test
mulb
mov
pop
add
mov
inc
mov
cmpl
outsb
adc
std
inc
movsb
in
mov
pop
sbb
lock
or
jmp
push
cwtl
pop
rcll
inc
jnp
faddp
rorb
lahf
push
push
icebp
inc
or
or
jmp
dec
outsl
and
pop
rcll
or
add
add
adc
insl
mov
incl
nop
inc
jecxz
ljmp
aad
aaa
sbb
push
std
jne
mov
dec
jb
cmp
scas
ffreep
sbb
inc
adc
movsb
add
cld
add
adc
jl
les
enter
pusha
or
add
gs
cli
or
pop
inc
aam
pusha
mov
xor
pusha
das
movsl
cmp
mov
jle
ffreep
or
add
cmp
push
pop
pop
mov
ret
pop
sub
mov
pop
ret
add
fcomps
push
loope
out
mov
pop
into
cmp
inc
push
mov
jnp
ret
or
pop
inc
dec
loope
mov
mov
sbb
je
inc
mov
rclb
ja
ds
add
and
popf
fistpl
sbb
loope
sub
mov
nop
push
mov
xor
fwait
mov
fwait
push
xchg
or
gs
cmp
jge
jb
push
stos
and
ja
cmpw
add
mov
fildl
outsb
arpl
movsl
adc
jge
insl
inc
std
mov
jge
leave
mov
aam
int
arpl
mov
repz
fidivrs
hlt
or
cmp
xor
mov
lret
mov
in
rolb
mov
sbbb
pop
mov
sbbb
cmp
dec
stos
xchg
cli
jg
repz
subb
xlat
fists
inc
sbb
cmp
mov
mov
movsb
sbb
mov
sbb
nop
cmpsl
push
mov
nop
dec
sti
add
sbb
fwait
mov
xor
mov
nop
and
push
or
push
adc
fs
insl
fisubl
jg
movsb
rorl
stos
pop
cli
xchg
pop
inc
ljmp
jmp
jle
mov
stos
shrl
xlat
and
add
movsb
enter
rorl
push
in
mov
punpcklbw
mov
daa
loope
mov
fdivl
pushf
mov
aad
mov
in
lods
into
lret
movsb
mov
imul
cmp
testb
push
pop
or
xlat
js
jns
test
loope
and
push
shrl
xchg
sbb
push
cmp
pop
mov
cmp
nop
out
add
jbe
sub
aam
ss
sub
inc
subl
mov
mov
cmp
loopne
jo
stc
adc
jl
jmp
jnp
pusha
push
mov
std
push
mov
les
cli
js
add
or
lret
idiv
test
add
or
sbb
sbb
lea
xchg
xchg
jge
pop
and
leave
out
orl
and
xchg
cmpsb
xor
mov
dec
iret
lea
dec
sub
inc
insw
lods
xor
push
or
cmpsl
sarl
jl
jmp
mov
call
popf
mov
out
in
arpl
xor
mov
fucomi
or
movsl
cmpsb
xor
inc
jle
sub
sbb
es
push
ret
jne
jb
xchg
stc
std
cmp
or
push
insl
inc
lret
or
in
adc
std
and
mov
out
jo
cli
mov
pop
ss
loopne
xchg
ret
inc
cmp
mov
push
popfw
addr16
jge
sub
sub
push
inc
fistps
cli
xchg
pop
test
aas
int
pop
aaa
dec
pop
xchg
out
sub
adc
cmc
pop
lds
out
xor
mov
push
mov
sub
cmp
mov
out
pop
mov
aas
insl
lods
mov
cmp
mov
hlt
into
xchg
add
movsl
xchg
mov
inc
mov
nop
clc
xchg
pop
pop
push
in
test
dec
cmp
aam
sti
mov
xchg
mov
je
inc
mov
pop
adcl
add
sti
adc
cmp
push
inc
aas
xor
dec
jnp
add
inc
mov
jp
lea
fwait
mov
mov
dec
jb
mov
mov
sbb
xlat
out
fcmovnb
or
and
jne
lea
mov
xor
or
repz
pop
pop
loope
cmp
and
jg
pop
dec
sti
ret
dec
cwtl
pop
fcomip
and
push
les
push
dec
fmuls
xchg
ds
outsb
ljmp
dec
mov
popa
cs
sub
push
mov
daa
cmp
inc
xchg
or
arpl
fcmovnb
pop
scas
ret
adc
jb
xor
sbb
ficoml
arpl
das
xor
outsb
mov
adcl
and
adc
andl
fwait
pop
pop
scas
jns
popf
adc
adc
add
ds
sbb
or
outsl
cmpsb
xchg
push
stos
pop
aas
stos
adc
test
and
lock
push
jns
sbb
xor
decl
addb
insb
and
sar
out
popf
and
sbb
ja
jp
mov
test
add
mov
pop
xchg
push
mov
cmp
mov
mov
pop
lea
adc
and
xor
rorl
push
cmp
jmp
mov
fdivp
test
sub
jmp
test
jns
sbbb
ret
sysexit
aas
aam
repnz
xor
insb
mov
and
pop
lea
or
inc
in
mov
mov
cmpsb
lret
push
mov
push
xlat
xlat
add
push
lcall
fwait
into
lret
jb
xchg
ja
negb
sub
ja
in
aas
fnstsw
sbb
or
jae
push
lcall
orb
mov
sti
push
in
jecxz
jnp
mov
gs
push
adc
cmp
test
addr16
or
mov
pop
out
add
cli
add
subb
imul
in
ret
mov
repz
jmp
adc
adc
jbe
lret
jle
mov
adc
cwtl
inc
ret
push
mov
push
movsl
scas
mov
lret
dec
xchg
inc
mov
ret
shrl
das
out
pop
imul
mov
fisttps
pop
jmp
aaa
jnp
dec
dec
dec
mov
inc
ss
add
and
lret
aaa
xchg
daa
xchg
mov
outsb
cmp
mov
xor
int
outsb
push
mov
fsubrp
std
and
dec
flds
sub
adc
sub
sbb
lahf
dec
insb
cmpsb
out
xor
mov
jecxz
std
cmp
iret
jmp
cs
mov
mov
xlat
sbb
jns
rcl
mov
int
mov
xchg
or
in
mov
add
test
in
movsl
and
and
add
lock
imul
nop
nop
jne
sbb
nop
sbb
lods
mov
loopne
dec
xchg
pop
nop
dec
pop
xlat
mov
sbb
test
push
das
ss
adc
cmpsl
xchg
mov
jne
in
dec
pop
xchg
fsubr
scas
movsb
add
fisttps
mov
in
push
testb
xchg
leave
mov
mov
aad
mov
fst
ja
leave
dec
cld
or
loopne
inc
scas
sub
filds
nop
fstl
jge
mov
jae
out
dec
shrl
ja
pop
jle
es
jle
fistps
rorb
dec
popf
stc
and
mov
mov
repnz
daa
aaa
stos
xor
scas
jl
xchg
jno
data16
cmp
std
inc
sbb
gs
aam
mov
pushf
lret
sbb
push
shrb
mov
add
sub
adc
dec
fistl
loopne
nop
push
mov
cwtl
scas
in
outsl
push
sbb
into
sub
stos
push
movsl
push
ja
ficoml
in
fsts
add
cmp
mov
sub
xor
sub
imul
fwait
push
jno
jnp
int3
inc
ret
push
in
cltd
and
mov
pop
cld
outsb
adc
cli
pop
dec
and
pop
adc
sub
adc
sti
sbb
int
jmp
repnz
cmp
sub
cmp
sbb
movsb
nop
ja
popf
icebp
cmpsl
jns
and
sub
push
and
ja
lods
jb
cmpsl
dec
adc
ljmp
jo
cmp
xor
in
pop
xor
mov
clc
test
fcompl
ja
mov
mov
test
scas
inc
popa
mov
arpl
iret
jno
dec
jo
cli
ds
or
mov
hlt
xchg
fbstp
dec
js
mov
mov
aad
out
cmc
sub
xor
and
mov
fsubrs
dec
sbb
xchg
push
call
cwtl
xchg
sub
push
neg
insb
fstpt
ds
cmp
adc
outsb
jnp
or
mov
adc
sbb
and
mov
add
push
add
int
fdivs
and
xchg
sbb
add
pushf
push
xchg
bound
xchg
dec
loope
sbb
pushf
and
mov
adcb
push
mov
cmpsb
jle
loop
inc
out
fisubl
push
iret
dec
cld
ffreep
lret
in
and
je
push
in
cmp
pop
cmp
push
rcrl
xchg
push
push
inc
aaa
stc
leave
push
sub
das
arpl
enter
xchg
arpl
aaa
jle
imul
dec
loope
mov
inc
push
jmp
jl
mov
jl
adc
cmc
pop
inc
sbb
cmp
into
adc
xor
ret
mov
sbb
sbb
jmp
mov
mov
fsubl
cmp
dec
cwtl
faddp
hlt
dec
je
out
test
rcll
mov
cmp
or
call
push
sub
xchg
popf
js
loop
push
and
insw
push
push
fisubs
mov
ds
mov
out
xchg
das
aam
push
jbe
imul
outsl
nop
aam
inc
ret
push
jg
das
xor
test
sbb
lahf
fsubr
pop
lea
jbe
sbb
inc
pusha
push
sub
inc
push
cmc
imull
inc
fnsave
push
add
rclb
dec
icebp
mov
lods
push
lock
cmp
lds
cmc
incl
dec
add
call
fwait
insb
push
cmp
push
inc
xchg
fidivrs
jne
das
add
mov
inc
stos
std
mov
dec
xchg
jecxz
jne
pushf
cmp
jbe
mov
or
iret
movsb
lret
stos
adc
mov
test
cmp
fnstsw
mov
add
ds
enter
into
jecxz
cmc
shrl
mov
push
cmpsl
and
jge
push
lret
dec
jl
mov
lods
inc
movsl
insb
je
pushf
pushf
push
cld
push
cmpb
or
out
ds
mov
es
and
fists
roll
and
dec
push
aad
jnp
lret
gs
jbe
movsb
clc
jmp
push
jl
xchg
pop
test
push
fsub
pusha
cmp
and
cmpsl
jo
mov
xchg
pop
into
xlat
dec
js
xor
push
and
popa
dec
fs
adcb
and
lcall
add
mov
adc
mov
xlat
mov
int
lret
pushf
jnp
ficoms
mov
imul
xchg
cmpl
mov
adc
pushf
cmp
stc
inc
into
das
mov
aaa
mov
and
sub
mov
jle
cmc
cmp
out
daa
je
xor
movsl
cmp
int3
sahf
dec
xor
mov
xor
adc
mov
test
and
movsb
fldt
stos
lods
xchg
mov
inc
enter
imul
mov
mov
sub
or
cmpsl
out
or
shll
out
dec
adc
cmp
pop
in
xchg
pusha
cmp
dec
push
fs
mov
into
shrl
mov
inc
mov
xor
pushf
imul
add
ja
cmp
mov
frstor
mov
loope
inc
push
cmc
js
loope
lds
mov
jo
or
fldcw
mov
cmpsl
ds
stos
rorl
jae
xor
and
roll
push
sbb
push
mov
cmp
cmp
inc
jmp
inc
sbb
lods
adc
stos
xor
sbb
aas
xchg
pop
andb
dec
cmpsb
int
mov
mov
mov
add
pop
imul
mov
loope
jp
lahf
aas
outsb
sbb
pop
shll
push
daa
adc
mov
sti
aas
push
xor
shlb
adc
pop
push
cmp
jno
mov
cmp
icebp
xor
pusha
repz
jns
dec
ret
sbb
popa
aaa
sbb
lock
inc
or
cmpsb
xor
lock
rorb
daa
insb
push
push
pop
sbb
into
inc
lret
das
sahf
jae
xor
pop
mov
push
pusha
mov
mov
mov
or
stos
daa
movsb
dec
or
clc
out
and
nop
push
mov
pop
shl
adc
adc
mov
es
outsb
ficoml
filds
and
aad
pop
mov
xbegin
or
xor
imull
push
pushf
sub
mov
jl
sbb
fstps
std
aaa
dec
stos
shlb
inc
idivl
lods
cmp
in
xlat
xor
nop
push
dec
pop
popa
pop
jp
call
adc
jbe
cmpsb
mov
or
jae
icebp
test
adc
inc
cs
fstpt
loope
mov
push
ret
in
test
push
cmpl
adc
lds
addb
mov
jecxz
sub
push
push
mov
sub
or
pop
pop
dec
int
cwtl
orb
xor
mov
or
jle
cmc
dec
mov
fdivs
test
and
adc
xchg
lods
or
fstpt
or
inc
lret
stos
ljmp
test
ljmp
sub
ljmp
jb
xchg
outsl
ret
fstpl
das
jl
pusha
adc
or
lret
or
pop
adc
xor
adcb
pop
xor
add
cli
mov
aam
dec
outsb
mov
jmp
mov
fadds
push
addr16
jb
inc
mov
add
insl
mov
movsl
rol
mov
shl
dec
pop
cld
jne
cltd
jo
pop
push
adc
ds
fcom
pop
mov
in
fdivl
add
xchg
xchg
test
fs
jmp
cli
push
in
ljmp
lods
aad
rclb
and
push
jnp
mov
cmp
loop
orb
mov
shlb
cmpsl
mov
or
xchg
in
push
xchg
cwtl
cmpsl
mov
dec
out
call
insb
int3
push
iret
gs
pop
dec
adc
mov
lahf
push
push
sbb
pop
popf
or
std
shll
add
add
bound
cmpb
add
jmp
sidtl
aas
js
addr16
pop
scas
and
cs
adc
inc
or
pushf
sub
dec
push
push
cmp
mov
testb
loope
shl
ss
loopne
xlat
push
cld
push
lcall
lcall
xchg
jo
mov
sub
or
in
nop
mov
cmpsb
cmp
mov
inc
inc
mov
jne
xor
adc
ret
mov
xchg
and
daa
bound
sub
cmpsb
jecxz
xchg
pop
sbb
push
xchg
es
loope
imull
or
leave
add
rorb
mov
inc
fnstenv
data16
or
pop
dec
mov
mov
jo
fxch
pop
fbld
ret
test
lods
xchg
mov
jne
or
inc
loopne
xlat
or
movsl
out
push
imul
jp
add
sub
dec
mov
mov
je
flds
mov
sbb
insl
movsb
sub
in
and
ljmp
add
into
mov
mov
cli
mov
sbbb
and
movsl
pop
test
mov
mov
adc
cmpl
push
pop
hlt
je
hlt
cmpsl
jp
xchg
jg
push
testb
stos
dec
outsb
pop
mov
inc
out
out
ret
xchg
test
incb
add
push
and
aas
and
mov
mov
lock
push
or
sti
jg
shll
cmp
xchg
pop
cmp
bound
hlt
inc
inc
cmp
in
enter
lea
push
out
sbb
cwtl
xor
inc
xchg
sahf
adc
cmp
push
cld
sbb
jmp
dec
cmp
dec
inc
or
sub
mov
mov
inc
lret
pop
sbb
lcall
sbb
lret
xor
and
cmpsl
stc
mov
mov
out
out
stos
xor
out
dec
decb
inc
push
fdivl
sbb
push
inc
sbb
mov
arpl
stos
xor
cmpsl
inc
jnp
and
jbe
xor
aad
lahf
les
jnp
mov
inc
jnp
xchg
inc
mov
or
jl
imul
cmp
fucomip
mov
ljmp
cmpsb
mov
inc
sub
xor
fstpl
mov
mov
pop
push
dec
popf
lret
adc
loop
lods
mov
jb
rolb
jge
mov
cmp
sbb
jge
dec
leave
insl
push
pop
or
lret
mov
xchg
xor
cli
insb
mov
add
mov
add
mov
in
xor
mov
mov
inc
jne
cmpsb
jl
sub
adc
movsb
jno
jp
repnz
andb
inc
jno
iret
imul
outsl
dec
scas
insb
paddusw
movsl
aas
lcall
mov
out
pop
mov
cmp
lret
mov
sub
xchg
arpl
add
cmp
push
nop
xchg
out
jg
push
xlat
fiaddl
jb
jae
push
fisubs
fs
out
or
mov
out
pop
mov
mov
scas
scas
xchg
je
enter
xor
inc
cmpsl
adc
lods
orl
mov
testb
into
je
in
and
push
mov
pop
out
int
out
scas
loop
dec
lea
pop
test
add
cmpsb
mov
addb
mov
xchg
jo
loop
add
lods
imul
shll
add
jl
sbb
cwtl
add
mov
fcompp
sub
lods
call
sbb
push
cmp
sbb
stos
mov
in
outsb
mov
inc
icebp
repz
mov
mov
aas
mov
push
ss
mov
subb
add
ja
pushf
int3
xor
in
dec
outsl
mov
sbb
pusha
ficoms
fld
scas
cmpsl
stos
xchg
and
cltd
xor
cmpsl
mov
mov
jbe
aam
mov
mov
test
test
hlt
popa
cmp
sbb
push
out
jle
mov
sbb
int3
popf
js
daa
pushf
adc
fs
shr
inc
cmp
scas
imul
mov
fidivs
add
sbb
mov
aas
pop
inc
fmul
in
mov
mov
outsb
test
fnstenv
das
imul
lcall
push
or
js
push
lods
mov
aas
icebp
shl
xchg
test
cmpsb
pop
insl
mov
pop
scas
popf
loopne
aaa
lods
mov
and
or
in
sbb
mov
repnz
xor
adc
jle
mov
test
lcall
mov
push
push
gs
xor
jg
repnz
jl
int3
pop
mov
xchg
negb
imul
sub
in
mov
movsb
xor
pushl
push
pop
xor
outsb
mov
push
cmp
hlt
mov
pavgb
adc
dec
mov
lret
mov
cmpb
outsl
hlt
add
cmpsl
push
cwtl
es
inc
dec
in
mov
mov
test
push
sahf
test
or
icebp
push
gs
lods
nop
lcall
leave
xchg
shl
jno
jne
lds
mov
cmp
ret
mov
test
das
xchg
cli
jle
inc
notl
pop
int3
lahf
ss
sbb
add
mov
int3
shll
jnp
fwait
cmp
jo
nop
xor
iret
fldt
int3
mov
xor
xor
lods
cli
lds
daa
loop
adc
xchg
sarl
dec
and
jo
mov
aaa
sub
or
adc
mov
inc
iret
fucomp
stos
adc
mov
int3
rcll
jne
fimuls
dec
cmpl
pushf
repnz
jmp
insb
pop
mov
into
or
xor
out
push
lods
dec
lret
into
shll
push
xchg
in
xchg
cmp
dec
sti
xor
call
out
popf
xor
xchg
inc
push
pop
add
dec
daa
jb
inc
aam
xor
cmp
cmp
mov
add
jecxz
aad
shlb
nop
inc
aad
lea
rol
lods
dec
xchg
lods
notl
xor
subl
int
mov
and
dec
jg
and
aas
push
aad
adc
sbb
mov
mov
adc
push
fwait
mov
aam
push
out
or
or
test
cmpsl
cmpb
dec
jae
scas
ljmp
push
pop
adc
add
xchg
jl
dec
das
xchg
loope
hlt
mov
scas
adc
mov
push
in
xchg
bound
pop
aaa
cltd
test
mov
mov
push
imul
xchg
cmp
xchg
cmp
xor
xchg
jl
push
loop
mov
xchg
insb
dec
dec
inc
cmp
jg
xchg
in
repnz
je
mov
les
dec
sahf
jbe
fldcw
push
stos
jmp
mov
outsb
test
jle
add
shlb
xor
inc
push
pop
fbstp
mov
loope
sbb
adc
les
adc
repz
in
dec
pushf
stos
pop
cmp
pop
adc
xchg
fmuls
adc
roll
jo
cmp
fcoms
arpl
push
pop
pop
test
xor
jb
movsbl
sub
xchg
sub
push
add
jns
jno
lock
test
mov
sbb
fldl
mov
xchg
cmpsb
fisttpll
mov
loope
test
ret
adc
push
arpl
insb
push
jbe
or
popf
inc
jae
add
xor
aam
addr16
iret
iret
mov
testb
cmp
sbbb
aas
mov
jb
in
sub
pushf
or
xchg
fildll
clc
loopne,pt
sar
and
mov
lea
mov
mov
dec
mov
lock
scas
lods
jmp
out
in
mov
cmpl
in
jmp
insb
popf
or
jo
data16
mov
xchg
test
rorl
and
idivb
jecxz
in
pushf
xchg
pop
push
xlat
cmp
push
jp
stos
sar
adc
push
sti
push
ret
shlb
push
jecxz
sbb
mov
or
add
and
lock
leave
mov
iret
sub
and
shrb
add
or
lret
ror
fistpll
xor
repnz
loopne
xor
jb
stos
aam
add
mov
popf
and
lret
dec
xchg
pop
dec
push
xchg
pop
lahf
cmp
mov
jae
and
inc
add
outsl
popf
pop
xacquire
push
pop
call
or
xchg
jl
mov
ret
es
mov
fsubrl
mov
lret
mov
fwait
or
pop
push
inc
ret
aas
insl
ss
aas
das
pop
add
ficomps
std
jg
mov
push
lcall
clc
mov
jp
mov
mov
or
mov
xchg
push
xor
dec
cmp
cmp
push
sbb
jmp
pop
push
or
pop
pop
xchg
mov
or
icebp
mov
sbb
jb
ss
and
scas
frstor
in
add
push
out
adcl
repz
pop
mov
scas
mov
fildll
mov
xor
fildl
stc
lock
outsb
cmc
sub
mov
and
jp
aam
ljmp
lret
adc
push
xor
lahf
jge
adc
mov
loop
daa
stos
cmc
popf
inc
nop
incb
adc
data16
sti
iret
dec
mov
sbb
aaa
inc
push
xor
dec
push
fsubl
fcmove
movsl
lods
cmpsb
dec
xchg
sar
or
in
sbb
cmp
in
pop
and
xchg
xor
or
adc
xor
lahf
adc
in
cmp
mov
in
jns
iret
in
push
movsb
rolb
inc
mov
push
pop
mov
aad
inc
jne
test
arpl
loopne
mov
ljmp
mov
and
sub
sub
in
xchg
int3
int
leave
and
sub
in
mov
push
jmp
clc
insl
push
mov
hlt
xor
pop
sub
stc
sti
call
xchg
sti
and
add
sub
pop
push
insl
adc
xchg
mov
insb
push
xchg
dec
or
dec
jmp
rcr
in
add
lcallw
cmp
dec
jns
or
mov
and
mov
or
addl
mov
das
xor
insb
loopne
or
adc
mov
xlat
fmul
jo
pop
pop
push
movsb
rep
adc
fildll
push
dec
inc
xchg
mov
jle
lds
adc
push
sub
and
popf
and
cmp
jno
lret
xchg
testb
mov
inc
adc
cmp
cmc
fs
mov
jle
inc
lret
movsl
mov
rcll
ljmp
subb
test
mov
int
xchg
mov
jle
jl
xchg
fs
sbb
dec
notl
push
scas
push
dec
sahf
sbb
inc
cmp
inc
mov
pop
insl
add
rclb
xlat
outsb
mov
cmp
inc
add
cbtw
xchg
lret
mov
dec
add
jmp
scas
cmp
jne
fnstenv
movsl
aaa
test
jge
jno
fwait
or
cmp
pop
jmp
push
in
roll
es
cwtl
sti
test
mov
psubq
js
push
mov
loopne
mov
test
and
mov
mov
call
pop
xorb
sbb
adc
jge
jnp
filds
cmp
sahf
pop
inc
push
or
std
je
dec
fucom
les
out
pop
jo
aad
xor
hlt
pop
mov
fsubr
test
jb
loop
outsb
je
pop
xchg
jmp
orl
jp
sbb
in
nop
ss
dec
mov
dec
xor
mov
fstpt
mov
nop
es
jle
es
push
shrb
lcall
dec
ret
add
adc
test
jmp
adc
out
repnz
adc
insb
add
in
xchg
scas
mov
jbe
dec
cli
outsl
bnd
jge
test
inc
mov
clc
leave
mov
int
mov
or
jno
pushf
xlat
xor
shlb
sbb
pushf
hlt
incb
mov
or
enter
jg
add
dec
cmp
cmp
inc
clc
addr16
xchg
loopne
sti
hlt
adc
push
mov
scas
outsb
cmp
rol
imulb
lds
jge
scas
push
stos
xchg
neg
iret
mov
out
and
dec
or
test
push
push
data16
sbb
xor
loopne
cmpsl
inc
in
out
fidivs
loopne
adc
ss
cmpsb
xlat
cmp
cmp
js
push
mov
cmp
adc
xor
jnp
adc
cwtl
xchg
ret
push
outsl
dec
enter
xchg
push
sub
fildl
loope
adc
push
sub
adc
cmpsl
andl
repnz
daa
arpl
mov
pop
mov
add
ss
es
and
es
clc
pop
xchg
push
pop
or
sbb
ljmp
xchg
jnp
fdivrp
adc
pop
inc
iret
xor
lret
das
mov
sbb
and
mov
rorb
mov
add
sbb
fwait
xor
mov
inc
iret
xchg
stc
in
pop
lahf
sub
or
fiaddl
leave
call
jnp
adc
mov
in
outsl
jb
dec
add
test
sub
daa
fchs
push
into
bound
adc
daa
adc
jb
ret
mov
scas
pop
mov
xchg
mov
or
mov
adc
cli
pop
sub
xchg
sub
jns
test
popa
xor
mov
jecxz
mov
inc
int
in
mov
or
cmp
mov
lcall
inc
xchg
xchg
mov
lret
enter
add
repnz
xchg
xor
ffree
or
test
or
pop
aas
imul
daa
xchg
jae
push
loope
daa
lock
ja
scas
dec
sub
gs
scas
jne
hlt
sub
cli
adc
insl
lret
fcomps
lea
or
das
jge
and
loop
std
adc
subb
test
or
inc
mov
inc
mov
mov
cmpb
rolb
imulb
pop
or
dec
test
sbb
sbb
sbb
insb
enter
jl
shl
js
stos
xor
fisttps
cmpsb
test
jno
xchg
std
rorl
or
push
jnp
ds
adc
jl
inc
xchg
and
xor
mov
inc
aas
js
jns
inc
cltd
cmpsb
pop
xor
mov
aam
mov
jns
imulb
mov
ja
add
pop
push
dec
mov
mov
mov
xchg
xchg
je
xor
and
popf
mov
test
or
stos
push
xor
lahf
dec
aam
add
daa
pop
fldcw
mov
ret
push
xor
leave
pop
adc
mov
mov
cmp
dec
dec
mov
out
adc
sbb
mov
push
push
leave
loop
sbb
lock
pop
popf
pop
push
lds
jmp
lock
fdiv
pop
jnp
jg
xor
lods
sub
push
push
dec
pop
sub
sub
lcall
pop
xchg
dec
loope
mov
mov
xor
sbb
inc
push
vmovaps
adc
jno
pop
sub
xchg
repz
dec
scas
fsubs
cmpsl
xchg
adc
test
movsl
add
mov
adc
xor
divb
ret
mov
adc
jmp
and
int3
mov
pop
dec
pop
nop
andb
filds
in
outsl
rep
jl
cmp
daa
and
test
enter
pushf
add
cmp
and
fcmovnu
xchg
jno
dec
pop
fldcw
sbb
mov
enter
mov
pop
mov
in
lds
stc
lret
and
mov
out
push
pop
adc
dec
mov
in
xchg
jb
mov
sub
sub
xchg
push
std
pop
sahf
inc
add
inc
insl
xchg
mov
add
pop
cmc
add
adc
dec
xor
fmul
in
out
jle
cwtl
sbb
andb
dec
xor
xor
sbb
lock
cmc
leave
pop
fmuls
jbe
jae
loop
mov
jge
fsub
ljmp
add
test
inc
xor
adc
gs
pop
fbstp
and
inc
sbb
lock
fdivs
mov
call
mov
roll
sub
pop
sbb
push
jae
mov
ljmp
fsts
pop
mov
or
sarb
stos
ret
adc
popf
and
jbe
call
sbb
lea
das
scas
sbb
lret
xchg
dec
jnp
xchg
aad
add
aaa
daa
inc
xchg
push
xchg
inc
in
sahf
jmp
dec
shlb
jecxz
scas
mov
mov
add
sub
mov
mov
and
lods
xchg
xor
xlat
pop
push
lods
test
lods
fcompl
and
and
dec
push
sub
lock
mov
adc
mov
in
push
cmp
addb
cmp
and
jp
cmp
pop
push
mov
loop
xor
push
add
sub
xor
hlt
call
mov
shll
push
or
test
mov
out
out
stc
adc
pop
pop
cmp
adc
shr
imul
sub
ja
mov
or
leave
xorb
test
mov
les
sbb
in
xchg
je
leave
movsl
cld
xchg
pop
mov
ss
lock
mov
out
sbb
icebp
xchg
daa
nop
pop
mov
ljmp
dec
sub
leave
xor
xor
push
jge
pop
mov
lods
cwtl
cmp
cli
filds
insb
ret
xor
test
scas
sbb
push
push
cs
cmp
ret
or
ja
adc
cmp
lods
enter
in
mov
icebp
ds
mov
jmp
fsubl
clc
mov
and
loope
pop
mov
xor
lock
lret
xchg
mov
adc
xor
add
push
lock
pushf
aad
call
sub
insl
lcall
rcrb
or
pop
jbe
inc
cli
sbb
insb
cwtl
aaa
je
pop
decl
xor
loopne
inc
punpckhdq
std
daa
mov
and
gs
int
jnp
and
incl
rcr
mov
movsl
push
sbbl
pop
mov
inc
push
lds
insl
push
sbb
out
sbb
xchg
pop
test
out
insl
out
cmp
rcll
lret
pop
arpl
and
stos
jmp
loopne
mov
mov
or
aas
aad
push
jo
sub
popf
push
pop
ja
imul
sbb
stc
adc
in
test
lock
push
mov
dec
sbbb
push
lea
cmp
dec
mov
icebp
jb
addl
fisttpl
call
std
mov
push
xor
sub
movsb
xchg
ljmp
mov
and
shrl
out
shrb
data16
push
jecxz
jecxz
shlb
cmpb
lods
stos
sar
push
cli
mov
fucomip
sti
add
fisttpl
pop
jb
fistl
cmp
push
and
pop
and
push
or
stc
fwait
jmp
cltd
xor
mov
lds
je
pop
or
xchg
repz
push
xor
in
loope
adc
imul
push
gs
xor
mov
jae
jge
mov
rorb
push
ret
sub
repnz
push
inc
jle
lods
or
out
inc
mov
xchg
or
ja
fbld
loop
iret
daa
push
bound
xor
mov
data16
lds
jo
cmp
pop
int3
or
and
pop
iret
fimull
addr16
and
call
sbb
insb
mov
fdivl
xor
and
stc
inc
jns
xor
loop
lods
push
and
sub
push
movsb
jae
out
scas
in
leave
pop
xchg
mov
les
cmp
xchg
lret
daa
cmpsl
sahf
and
sti
xchg
into
js
add
pop
cwtl
int
in
scas
jl
scas
ss
push
daa
inc
xchg
sub
cltd
sub
aad
movsb
jecxz
fistpll
add
sbbl
mov
cwtl
imul
mov
or
or
dec
loop
cmp
nop
sub
adc
addr16
sub
xor
ret
lahf
je
cltd
cltd
sbb
fwait
andb
mov
or
fdivp
cmp
movsb
dec
fsubs
lods
inc
xchg
and
ds
push
dec
stos
rcr
push
inc
jno
pushf
cmp
add
and
sub
clc
push
dec
dec
mov
or
and
xor
or
and
cmp
aas
mov
icebp
xchg
lcall
fs
in
or
stos
pop
rcr
shlb
add
lea
fdiv
push
jmp
jae
pop
push
lret
aaa
xchg
fs
movsb
push
push
lock
icebp
fistl
pusha
xor
dec
or
dec
xchg
fstpt
jnp
xor
loope
sbb
orb
ja
push
cmpsl
sbb
mov
cmc
pop
in
mov
shll
cmp
mov
es
push
cmp
jbe
or
mov
cmp
jno
or
dec
cmpsl
pop
add
xor
loopne
repnz
mov
fmul
es
add
iret
scas
cltd
and
cltd
bound
stos
out
icebp
loope
sub
xor
ja
or
rcrl
ret
movq
test
loopne
mov
movb
mov
cmpsb
mov
bound
aam
cltd
sbb
std
fildl
mov
cli
lods
add
lret
dec
dec
mov
or
dec
mov
add
mov
push
sbb
inc
sub
or
push
cmp
out
daa
sub
in
pop
arpl
adc
sbb
xchg
repz
ret
les
cmp
pop
xlat
jp
pop
dec
ret
dec
mov
lret
mov
push
xor
sbb
lret
sub
sbb
push
dec
lods
inc
dec
add
sti
sbb
out
repz
mov
push
xbegin
push
or
mov
data16
or
testl
push
jl
sub
xchg
mov
and
test
gs
cmp
mov
xor
mov
dec
jp
mov
addr16
incb
cmp
cmp
and
js
loopne
push
lret
dec
out
sub
pop
cli
in
mov
push
sbb
nop
repz
mov
aad
popfw
adc
mov
jl
mov
push
and
fxtract
aad
je
imul
inc
push
leave
xchg
push
adc
mov
jnp
mov
add
inc
or
cmp
je
int
leave
icebp
fmuls
mov
xor
xchg
adc
xchg
call
sub
into
jl
add
lret
xor
movsl
jle
aad
sbb
sbb
xorl
jnp
ror
xchg
in
xchg
push
fistps
push
mov
mov
jno
sub
outsb
inc
and
mov
mov
mov
out
inc
adc
out
stos
fcmovnu
sub
scas
div
repnz
pop
iret
int
sub
mov
push
dec
pop
test
stc
aad
or
dec
inc
inc
gs
mov
faddp
dec
xor
sbb
jns
mov
fdivrl
jne
fimuls
fs
pop
clc
xchg
xor
jb
jecxz
inc
leave
adc
jmp
insb
vpaddsb
adc
test
mov
push
sub
mov
adc
fcomip
in
mov
xor
adc
dec
inc
push
sbb
xchg
mov
xor
sbb
mov
insl
dec
roll
shll
cmc
lret
aam
popa
loop
mov
jl
and
xchg
pop
fs
hlt
and
push
into
sti
or
fsubrs
stos
sahf
push
inc
lahf
insb
or
push
jno
aaa
faddl
mov
scas
sbbb
mov
xor
rcrb
sub
enter
fsubrp
add
and
inc
jne
pop
not
movsb
pop
pop
sti
ds
or
xor
cltd
cmp
push
inc
mov
pop
fidivs
mov
dec
or
dec
cltd
sbb
and
push
pop
ret
adc
je
flds
xor
int
xchg
adc
or
rcrl
leave
hlt
js
repnz
and
push
lds
inc
lcall
lret
cwtl
scas
inc
insb
aas
and
popf
scas
aam
in
mov
cmpsl
je
movb
ret
pop
add
xchg
push
mov
mov
adc
bound
leave
clc
pushf
mov
ja
fadds
or
push
inc
add
out
cmpsl
js
ss
xor
and
dec
and
fdecstp
std
push
pop
push
sti
movsl
inc
adc
mov
or
push
repz
mov
fwait
inc
mov
add
and
enter
pop
push
push
out
mov
pop
mov
shlb
adc
gs
lds
fldenv
stos
jne
jl
jp
leave
and
cwtl
fneni(8087
cmc
repnz
pop
cltd
bound
or
sub
add
stc
jnp
xchg
inc
mov
push
jne
mov
add
add
add
jmp
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
data16
add
add
add
add
stos
xor
int3
std
xchg
mov
jne
rcrl
addr16
inc
inc
adcb
js
inc
into
loop
loopne
inc
lods
bound
jb
cmc
and
sti
push
dec
subb
popa
ds
sbb
out
sub
icebp
sarl
cmp
loope
jno
push
pop
push
cmpsl
pop
out
adc
add
enter
pop
sub
rorb
in
out
test
and
xlat
mov
aam
and
adc
lods
outsb
stc
mov
push
aas
xchg
out
movl
mov
test
xchg
fimuls
hlt
in
or
sbb
inc
mov
je
push
cmp
or
cli
jge
fbld
scas
cmp
and
xchg
imul
mov
das
jg
mov
lret
jl
jbe
sub
add
jo
jae
dec
ljmp
rolb
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
