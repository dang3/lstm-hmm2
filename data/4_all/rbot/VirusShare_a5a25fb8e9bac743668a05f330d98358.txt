call
in
sub
push
push
lea
push
push
xor
call
cmp
mov
mov
inc
push
mov
add
push
lea
jge
call
cld
and
and
out
fcomip
push
push
cltd
or
mov
sbb
jle
add
fdivrs
rcrb
fcomps
inc
add
push
push
test
mov
add
pushl
push
pop
or
or
inc
dec
inc
add
mov
leave
ret
mov
add
jb
pop
test
pop
jle
mov
pushl
call
cld
into
or
jmp
and
mov
sub
loopne
mov
sbb
test
mov
mov
decl
test
add
lea
shl
cmpl
aaa
movsb
loopne
pop
add
add
iret
push
pop
in
inc
stc
fwait
pusha
std
out
add
and
mov
loopne
or
or
inc
xor
push
jo
sti
or
in
sbb
adc
inc
lock
insl
mov
test
push
ret
or
adc
outsb
mov
outsb
xor
add
jnp
push
fistl
cmp
clc
loopne
js
shlb
lea
jno
add
out
into
add
dec
clc
sub
mov
out
test
cld
sar
push
push
push
push
cltd
jbe
mov
pop
imul
repz
add
inc
add
in
jmp
push
int3
mov
add
pop
jbe
push
pop
pop
push
loopne
ret
loope
push
dec
sub
pop
cmp
int3
pop
cmp
pop
je
mov
sub
pushl
pop
shlb
rorl
jne
in
ljmp
jns,pn
fadds
mov
xorb
xchg
mov
sbb
push
xchg
inc
stc
in
mov
or
filds
inc
push
pop
adc
into
dec
pop
sbbl
hlt
push
dec
fisttpl
pop
mov
into
ljmp
jne
add
lret
cld
lock
adc
xor
jmp
ja
shlb
lock
pop
cld
clc
hlt
jmp
fcomp
scas
call
cmp
sub
xchg
hlt
clc
clc
cld
cmp
lea
jne
sbb
jg
mov
dec
hlt
adc
or
sbb
add
mov
inc
jecxz
push
push
push
push
push
pop
sbb
fwait
cmpl
cld
mov
enter
je
pop
shll
push
outsb
movw
call
shrl
out
push
daa
cli
fucompp
ret
or
inc
in
sbb
jl
adc
lds
cmp
xchg
loopne
fwait
ja
pop
lea
mov
mov
jge
or
rcrb
sti
shl
push
cmp
mov
bnd
rep
mov
mov
or
outsl
sbb
xchg
and
and
mov
mov
les
subl
bsr
incl
lcall
cmp
mov
adc
push
mov
inc
fcomps
daa
xor
mov
enter
ss
notl
sub
loopne
das
pop
mov
out
mov
ficoml
loopne
cmc
inc
call
add
dec
shrb
imul
adc
sbb
inc
and
in
jge
sub
shrb
lret
enter
and
in
sub
adc
sub
or
loopne
sub
sbb
sbb
pop
cmp
mov
cld
or
call
mov
push
pop
cmp
or
repz
or
dec
add
xor
in
sbb
cwtl
les
and
neg
out
mov
aam
int3
sub
out
xchg
std
pop
push
add
jae
sub
rclb
imul
and
adcb
and
ret
das
jecxz
dec
fnstenv
leave
pop
popa
or
push
xor
dec
lcall
push
xchg
jae
mov
and
pop
pop
addb
add
cmc
cmp
xchg
jecxz
mov
fwait
aam
jb
push
ret
cmp
mov
sub
mov
add
push
mov
in
fbld
mov
pop
enter
add
leave
psadbw
adc
dec
fsubrs
repz
push
incb
call
inc
cmp
jbe
mov
jo
jl
lret
pusha
ljmp
or
pop
push
mov
push
in
mov
adc
add
sbb
and
test
ret
or
daa
lods
pop
jl
add
lret
jl
aam
pop
je
xchg
movb
mov
push
andl
push
mov
outsb
and
add
add
mov
stos
stos
pop
orl
adc
jl
jmp
cmp
push
imul
mov
push
pop
or
pop
jo
into
push
aas
pushf
xchg
daa
or
out
mov
incl
mov
or
adc
fnstcw
mov
pop
push
xor
xor
sub
lea
push
push
push
loope
mov
loope
push
ds
mov
jge
leave
subl
fidivrs
call
dec
and
fadd
inc
add
mov
adc
out
lret
mov
sub
cmp
jge
movzwl
repz
cli
or
lock
xlat
or
pop
xorl
push
xor
testl
leave
mov
add
bnd
cmp
push
mov
push
pushl
push
or
push
loope
dec
inc
call
pop
ret
dec
addb
das
in
push
adc
cmp
push
scas
jne
ret
jo
fchs
movsb
shll
pop
negl
pop
or
sbb
or
stos
jae
inc
pop
mov
in
stos
xor
pop
cmp
mov
je
push
cld
mov
push
lea
mov
or
and
sub
test
pcmpeqb
cmpb
add
adc
push
clc
cmp
pop
sub
or
in
sbb
imul
sbb
lds
ja
or
sbb
or
jecxz
fwait
pop
adc
xchg
mov
push
and
jne
push
xor
xchg
call
jp
mov
inc
call
pop
jo
inc
sbb
cwtl
mov
pop
pushf
lock
push
push
roll
cmovae
pushl
pushl
mov
cld
loope
je
push
mov
adc
push
push
test
pop
in
int
pusha
xor
sub
xchg
pushl
jb
and
pushl
ret
call
mov
push
or
cmp
push
or
mov
icebp
or
lock
or
notb
or
xor
mov
pop
lock
push
push
mov
xor
push
aas
lock
sarb
jo
mov
adc
jnp
orb
sysenter
cmp
xlat
mov
call
ja
push
adc
sbb
mov
mov
mov
pop
pushf
mov
enter
sub
xor
dec
std
fs
and
cmp
xor
int3
lods
push
inc
hlt
add
stc
push
push
mov
cmp
data16
adc
xor
mov
imul
pop
stc
mov
or
xor
out
add
loopne
add
push
cmp
rorl
testb
lcall
inc
inc
scas
mov
rolb
jecxz
dec
in
rcl
jne
push
fadds
test
dec
lods
out
mov
out
lock
mov
pusha
cs
das
les
xor
in
pusha
lea
push
or
push
iret
cmp
scas
push
jle
push
in
xchg
push
adc
daa
sbbb
inc
mov
dec
mov
aaa
das
idivb
pop
pop
call
pop
xor
jl
in
in
pop
fistpl
jbe
push
adc
jmp
adc
rorb
xor
pop
rorb
push
leave
addr16
push
mov
adc
cltd
fmul
mov
icebp
jne
mov
add
sbb
repz
dec
sbb
shrl
push
shlb
repnz
push
fidivrs
int3
push
in
mov
imulb
push
loopne
xlat
inc
mov
imul
adc
cld
inc
pop
or
fmul
mov
jle
inc
cmp
clc
je
pop
xchg
cmp
repz
data16
adc
shrb
inc
cmp
jg
cld
outsb
and
mov
pop
mov
clc
lods
pop
mov
mov
lds
adc
pop
adc
mov
jns
adc
and
or
mov
add
sub
sub
push
or
loope
cmpsb
cmp
inc
cmp
sahf
cmp
or
insl
lcall
cwtl
xchg
or
jge
inc
mov
push
nop
lret
enter
adc
mov
adc
mov
test
adc
sub
pusha
and
cld
fsts
pop
ret
xchg
cld
dec
xchg
icebp
jns
jb
cld
adc
add
pop
inc
icebp
mov
jmp
xlat
push
shrb
xchg
pushf
pusha
push
jl
jne
inc
pop
int3
mov
decb
xchg
mov
pop
insb
mov
adc
xor
mov
sub
and
enter
add
and
les
hlt
mov
mov
adc
mov
mov
mov
push
mov
jae
mov
jbe
movsl
in
adc
add
push
sub
sub
sahf
nop
int
pop
je
test
les
sub
push
jmp
dec
or
not
inc
and
pop
mov
imul
outsl
filds
push
xor
iret
mov
sbb
outsl
cli
ret
sahf
add
cmp
fcmovne
adc
in
mov
dec
adc
and
push
push
sti
adc
push
sbb
frstor
push
stos
ja
repnz
jmp
mov
cs
mov
push
and
lock
sbb
pop
hlt
lea
jno
orl
mov
mov
stos
sahf
scas
push
cld
lods
and
cli
mov
cmp
sar
cld
std
and
xor
shr
add
nop
mov
lock
dec
jne
pop
pop
je
xlat
scas
rcrl
ret
sub
push
pushf
mov
or
aas
aam
mov
adc
lcall
out
mov
adc
inc
push
sub
scas
mov
div
push
mov
inc
push
cli
pop
mov
pop
cmc
push
jae
dec
dec
add
push
mov
aad
push
dec
xor
cmp
inc
jge
insb
shrl
sbb
je
push
out
xor
adc
lock
enter
cmp
adc
hlt
xchg
mov
or
xchg
xchg
hlt
mov
nop
dec
or
or
bound
push
and
int
push
xor
add
pop
or
pop
not
dec
into
mov
adc
sbb
addl
pop
dec
pop
sub
xchg
add
call
mov
jecxz
xor
and
shl
push
les
add
movsl
push
mov
mov
add
mov
out
lock
insb
add
outsb
cmp
ret
mov
ret
xor
or
outsb
popa
daa
or
jb
loopne
mov
lods
out
fs
add
xor
pop
mov
and
push
loopne
clc
cmp
loopne
loope
or
std
jnp
mov
call
pop
scas
and
push
outsl
rolb
adc
xchg
aam
mov
mov
push
mov
or
rorb
sbb
cmp
rorb
adc
sbb
jmp
jge
daa
mov
adc
test
cmpsb
cli
sbb
pop
mov
imul
cmp
mov
sti
in
int3
hlt
add
push
fs
jnp
fadds
jne
add
pusha
enter
gs
add
sbb
out
pop
cmp
mov
addr16
mov
je
mov
leave
in
mov
sbb
lods
out
add
iret
cwtl
lret
ret
dec
inc
xor
jne
jnp
outsl
inc
sti
insl
pop
dec
ss
test
and
gs
mov
jg
push
rcrb
mov
in
in
push
xor
xlat
movsb
jne
push
or
jno
or
add
in
pop
sbb
jmp
mov
test
jge
dec
neg
or
lock
inc
pop
cwtl
cmp
sbb
arpl
sarb
in
inc
cmp
lcall
sub
aad
das
push
movsb
cmc
into
push
cltd
add
xor
hlt
and
jb
test
jge
jl
pop
or
jne
call
lock
lock
mov
out
adc
pop
mov
repnz
push
inc
inc
sbb
sbb
aaa
addr16
pusha
aam
adc
ret
jbe
cwtl
xchg
push
cltd
push
dec
pop
cwtl
sbb
jne
dec
addb
mov
stos
adc
cmp
cmp
int3
push
pushf
push
dec
mov
pushf
push
repnz
mov
std
mov
dec
pop
push
std
xchg
cmpsl
push
or
jne
push
push
push
loope
or
pop
push
cmpsl
movsl
les
dec
pusha
pop
mov
out
dec
aam
mov
jno
ss
mov
sti
mov
sbb
or
inc
fcomps
clc
out
in
roll
cmp
add
roll
sub
pop
hlt
fimull
lock
mov
pop
pop
sbb
mov
enter
xor
xchg
pop
add
sbb
sub
jne
mov
push
xchg
fldt
sti
call
enter
fcoml
fcoml
in
outsl
push
cld
pop
je
sti
pop
notl
cltd
dec
dec
sbb
xor
mov
in
xchg
jge
mov
inc
mov
add
aas
fnstsw
mov
fildll
mov
movsl
ds
xor
lea
and
cltd
addb
xor
dec
mov
mov
test
xchg
shl
xchg
xchg
pop
lds
jl
inc
adc
clc
sbb
jle
add
adc
adc
fildll
add
or
xchg
je
and
add
push
add
mov
ret
shll
mov
and
mov
shll
shrl
xor
lds
shrl
arpl
jle
je
iret
in
sbb
pop
jns
add
pusha
mov
mov
shlb
cld
sar
iret
aaa
les
sbb
ret
sti
ret
test
imul
in
sub
dec
test
push
fisttps
cld
sub
jns
fcomi
adc
roll
ds
addb
lea
clc
jg
push
cltd
pop
idiv
cmp
je
adc
out
inc
xchg
push
popf
test
cld
adc
jmp
cmpb
fldl
and
pop
pop
int
pop
jne
push
push
mov
test
xchg
shr
pusha
mov
scas
in
pop
xor
pop
repz
imul
and
mov
mov
push
cmovle
cmp
mov
idivb
cltd
sub
sar
add
or
test
outsl
inc
xor
mov
push
dec
xor
dec
or
jl
and
xchg
mov
leave
enter
int3
cmpsl
dec
mov
icebp
lea
pop
icebp
packuswb
pop
inc
mov
push
push
js
popa
shl
out
push
jne
jg
and
sbb
inc
jnp
and
cmpl
jne
or
les
ds
sbb
test
pop
jae
pop
xor
fwait
and
sub
loop
in
dec
xor
sub
push
mov
add
add
sar
add
insl
mov
or
sub
xchg
sarb
sub
clc
or
les
adc
mov
cmp
push
arpl
xor
aaa
pop
xchg
adc
sbbl
mov
cmpb
xor
add
pushf
inc
sbb
xor
sub
xchg
and
pop
pop
xor
repz
ret
int3
in
mov
imul
bound
pop
sete
loopne
roll
add
test
bound
in
gs
fcoml
fdivl
sbb
pop
mov
and
adc
dec
rcrb
in
repz
and
push
jmp
mov
ret
test
adc
push
jmp
push
xor
daa
sub
jle
fdivrl
mov
lods
cmp
hlt
dec
jne
sbb
mov
dec
sub
adc
bound
jbe
stos
and
mov
cs
xchg
add
and
jno
lock
rcll
inc
movsl
xor
jnp
cs
in
in
jge
jo
xchg
out
mov
daa
ds
jecxz
imul
xchg
in
scas
cltd
fcomp
roll
dec
push
push
out
jle
rorb
movsb
sub
shll
fbstp
loopne
pop
incb
mov
inc
bound
aad
int
int
and
movsb
cmc
lods
movsb
cmp
add
or
mov
sahf
dec
pusha
fwait
push
mov
hlt
out
cld
sbb
jns
or
mov
sbb
jno
cs
jmp
pop
adc
out
bswap
mov
dec
mov
out
pusha
xor
sbb
xor
out
pushf
pop
cmp
or
je
aad
mov
lahf
adc
hlt
sub
repnz
pop
sbb
mov
enter
std
pop
xor
fistpll
add
std
xor
pop
adc
idivb
inc
sub
outsb
jmp
stos
ss
pop
cmpsl
jae
cmp
lret
test
inc
insb
enter
call
sbb
fs
inc
cmp
adc
das
cmp
js
repz
pop
mov
add
int
in
or
push
in
movb
fldenv
fwait
jecxz
pop
imul
shr
adc
add
add
aaa
mov
sarl
jl
jae
gs
cmp
push
pop
adc
roll
das
add
jmp
je
cmp
ja
ret
push
mov
je
shr
pop
cwtl
orl
std
lods
shr
adc
les
les
push
cwtl
dec
add
ret
pop
add
xchg
or
mov
je
mov
xor
mov
xor
jne
inc
sbb
nop
mov
cmp
call
pop
mov
inc
jle
jo
inc
adc
xchg
fdivl
test
sub
mov
sub
rcl
or
jbe
call
jne
pop
mov
inc
jp
lock
mov
push
fildll
push
push
mov
fmull
fstpl
insl
fildl
fwait
xor
jbe
ret
ret
fs
mov
js
enter
ffree
push
xchg
jmp
dec
cld
add
cmp
hlt
jmp
add
enter
daa
fiaddl
sub
cmp
inc
cmp
adc
jp
pop
push
jg
std
jmp
mov
adc
sub
dec
fcmovb
sbb
mov
mul
mov
ss
sbb
imulb
inc
jmp
fdiv
add
lods
add
repnz
sbb
xor
into
push
les
push
lock
notb
les
mov
add
push
dec
fwait
dec
clc
jl
ret
push
push
bound
adc
dec
hlt
xchg
rorl
test
repnz
mov
lds
lock
mov
push
push
pop
int3
adc
test
testl
clc
or
je
adc
lcall
idiv
test
jne
movb
inc
jmp
mov
call
dec
jns
push
enter
or
dec
jmp
andb
test
leave
aam
call
arpl
je
dec
pop
and
mov
and
mov
cmpb
cmp
and
insl
sbb
or
sbb
or
jbe
mov
dec
lock
pop
clc
out
add
out
push
loope
shll
call
sbb
in
cwtl
add
int3
jne
fcomi
and
jge
push
and
xor
push
cmc
push
lods
call
jb
enter
mov
movsb
pop
mov
xchg
inc
jecxz
pop
jo
hlt
cli
pop
dec
ja
cwtl
jb
mov
adc
push
cmp
pop
popw
xor
gs
lock
push
call
add
lcall
xor
fimull
cld
popf
pop
sbb
cmpsb
sbb
sub
daa
add
enter
mov
pop
cmp
std
sbb
mov
and
rorl
xor
insb
pop
sbb
or
and
push
fs
push
jl
jp
mov
leave
xlat
jmp
sbb
push
push
mov
and
sti
iret
sti
xor
popa
les
xor
mov
es
pop
scas
popa
lret
dec
test
call
add
ds
insl
jne
stc
daa
cmp
mov
jns
adc
mov
sub
push
xchg
ret
das
cmp
mov
pop
push
xor
fbstp
pop
cmp
in
mov
add
or
subb
jb
imul
pop
cltd
adc
pop
mov
mov
fs
loope
test
clc
jne
push
xor
jno
ds
hlt
push
js
mov
ret
pop
dec
sub
imul
mov
std
jp
xchg
lock
push
ljmp
mov
std
xchg
cmp
mov
ja
lcall
in
iret
outsb
mov
cmp
je
cmpb
aaa
lret
jne
jmp
je
sub
mov
sbb
push
inc
in
adc
sub
push
adc
sbb
adcb
int3
int3
sbb
and
sub
pop
pop
adc
enter
je
cld
cs
pop
or
loopne
pop
fdivs
fimuls
sub
inc
je
pushf
mov
pop
mov
add
sub
test
jle
cmp
daa
add
outsb
add
xchg
xchg
cld
xchg
or
sbb
cmc
cmp
jl
xor
dec
clc
incl
add
adc
or
dec
push
je
dec
je
incl
push
push
dec
shl
adc
or
fcomps
rolb
push
pop
rolb
cmpsb
pop
outsl
iret
mov
call
push
imull
jo
pushf
and
movsb
push
pop
and
sbb
lret
push
sbb
and
les
cmp
and
ja
popa
test
pop
fidivrl
int
xchg
xchg
fistpll
aad
xor
lret
rolb
push
xorl
push
imul
inc
or
push
and
pop
hlt
in
test
sub
setge
inc
jmp
dec
lock
fdivs
xor
mov
adc
mov
or
or
push
out
cmp
or
push
pop
andl
push
inc
mov
mov
jg
dec
cwtl
dec
or
mov
add
arpl
arpl
xchg
xlat
add
jnp
cmpb
jge
adcl
sbb
pop
pop
xor
mov
insl
cld
scas
out
xor
divl
or
rcll
add
std
les
ss
daa
adc
push
and
xchg
fsubs
sub
push
mov
repnz
mov
jmp
out
mov
pop
cld
xor
xor
push
xchg
add
fmuls
xchg
push
mov
movsb
or
ret
mov
jecxz
test
dec
dec
pop
arpl
pushl
pop
test
xchg
pop
push
clc
sahf
cmpsb
mov
mov
test
adc
inc
lea
sub
aad
sarb
sbb
adc
sub
push
hlt
subb
mov
adc
cmc
inc
aaa
repz
sub
scas
mov
loop
jne
int
outsl
enter
push
lea
cmp
aas
cmp
xor
test
jbe
lea
or
std
pop
std
ret
into
jb
pop
jg
inc
jae
mov
ss
xor
xchg
imul
xor
ret
mov
inc
mov
in
sbb
sub
mov
popa
jnp
sahf
and
mov
test
sbb
pop
shlb
lock
add
cmp
jae
lea
mov
inc
mov
mov
mov
dec
cmp
jb
gs
ja
cmp
aam
adc
or
icebp
jne
pop
ljmp
test
test
inc
loope
lds
dec
sarl
insb
mov
add
inc
dec
roll
fcoms
pop
unpckhps
adc
or
pop
add
xor
add
mov
push
inc
iret
pop
jb
push
fdivrl
xchg
lahf
shlb
lea
loope
jne
je
xchg
xor
jmp
inc
push
sub
cli
push
lea
jbe
mov
jnp
hlt
jmp
lret
add
xor
or
jecxz
and
addr16
jmp
cltd
fpatan
add
sbb
adcb
rolb
or
xchg
fdivs
xchg
mov
enter
pop
mov
leave
cmp
enter
aas
xchg
movl
cmp
xor
inc
fisttpll
cli
cmp
cmp
push
ret
pushf
sbb
push
insl
inc
rorb
icebp
cwtl
pop
mov
inc
cmp
sbb
push
daa
cmp
stos
fwait
inc
pop
mov
cmp
enter
push
ud1
pop
cmp
and
in
pop
cli
and
dec
loopne
fisubrl
cwtl
push
packssdw
pop
and
add
dec
push
movsl
dec
insb
js
lds
aaa
xlat
loope
js
inc
or
sbb
fs
pop
mov
mov
shlb
xlat
lds
adc
xor
std
out
bound
sub
inc
pop
cld
ret
ret
jmp
cmp
popa
and
pop
xchg
cmp
and
out
hlt
shrl
sub
arpl
imul
jg
push
sarl
jae
and
mov
adc
pop
cld
dec
jae
jne
divb
jne
inc
movb
ds
insl
sub
imul
pop
out
insl
jnp
ret
adc
xchg
sbb
cmpsb
inc
pop
lock
jb
nop
jb
or
xchg
or
test
mov
fdivrs
sbb
mov
fs
adc
fcoml
xor
divps
sbb
mov
mov
sbb
test
notb
shlb
pusha
dec
mov
and
jmp
pop
enter
jecxz
sbb
mov
ret
mov
aad
adc
push
pop
es
nop
cmp
inc
xchg
pop
call
add
add
popf
andl
cmp
insb
mov
mov
xlat
or
clc
cmp
mov
sbb
sub
dec
dec
add
and
out
iret
xchg
add
jecxz
cli
xchg
fs
clc
sbb
or
push
scas
xor
aaa
clc
adc
mov
test
dec
fdivr
xchg
xchg
mov
push
addr16
in
or
pop
cmp
insl
push
int3
fsubrs
hlt
pop
fldl
push
push
lock
das
movb
dec
xchg
xchg
test
or
xchg
sbb
test
jmp
lahf
adc
adc
ja
push
pop
mov
sbb
add
or
cmpb
add
hlt
arpl
lds
xor
outsl
adc
negl
js
sub
sbb
insl
inc
push
imul
fdivs
and
popf
cmp
mov
aam
cld
pop
incb
test
push
pop
sub
insb
xchg
aam
imul
push
mov
xor
cmp
ja
mov
shlb
ret
jbe
adc
repnz
loope
or
ljmp
cmp
mulb
ror
cld
sbb
sub
cmpsb
fnstcw
add
outsb
add
das
push
test
std
jmp
je
pop
xchg
loope
pop
sbbl
repnz
data16
mov
insb
push
mov
mov
aaa
push
pop
pop
addb
movsb
std
push
and
cmpsb
cmpsl
inc
xlat
pop
push
or
adc
rcrl
sbb
adc
repz
dec
sarl
daa
mov
call
ret
jae
jo
ja
mov
and
jge
fucomi
push
and
add
and
cld
mov
and
add
push
mov
in
out
dec
cld
cmp
jo
inc
push
popa
push
daa
call
inc
mov
xor
call
cmp
and
xor
mov
jp
add
mov
rcrl
orb
sti
sbb
imul
nop
xor
or
add
mov
sub
cs
mov
jns
inc
outsl
inc
fadds
sbb
popa
push
add
or
insb
nop
movl
push
cmp
rorl
add
fdivs
data16
adc
insl
xor
push
es
pop
fidivs
xchg
unpckhps
cs
and
js
and
mov
bound
xor
and
inc
jl
or
mov
cmpb
ds
jne
movb
push
inc
out
ljmp
mov
test
add
icebp
dec
cmp
stos
pusha
add
mov
sbb
xor
lock
out
inc
popf
stos
mov
jmp
mov
aas
add
push
mov
xor
cmp
jne
mov
fists
push
out
arpl
in
les
sbb
imul
test
pusha
aaa
es
adcb
les
inc
aaa
bound
std
cmp
inc
jne
insb
lret
adc
sbb
xchg
jb
pop
imul
add
mov
test
xor
ja
je
adc
rclb
movsb
and
lods
mov
or
fcmovb
mov
sbb
sub
fwait
sbb
cmp
stos
push
sbb
adc
in
je
dec
test
das
add
sub
cltd
xchg
xor
mov
jg
or
lds
stc
into
sbb
pushf
and
mov
dec
push
inc
jne
or
testb
and
sub
mov
mov
xchg
add
lock
pop
fadd
test
push
push
pop
imul
pop
mov
sbb
pop
mov
cmpsb
sbb
pop
aas
push
ja
cmpsl
pop
inc
sub
or
mov
js
clc
xor
ja
std
out
or
mov
cmp
push
pushf
mov
into
je
inc
inc
mov
inc
dec
inc
dec
cmp
int3
dec
sbb
aam
iret
sub
ja
cmp
cmp
je
lret
mov
sub
js
movsb
sahf
in
lcall
scas
xor
repz
aam
cvttps2pi
or
and
add
mull
mov
mov
ret
pop
sbb
je
xor
pop
ret
xchg
xor
les
push
sub
out
and
mov
test
in
fs
rcrb
in
leave
sbb
push
inc
pop
in
into
nop
mov
push
lock
push
xor
push
fidivs
iret
and
fs
js
mov
jmp
jne
mov
dec
aad
mov
xchg
xchg
adc
add
in
and
mov
sbb
cwtl
cmp
iret
leave
out
push
nop
int
in
in
or
into
stc
sub
cwtl
enter
nop
int
inc
mov
ja
mov
mov
dec
mov
pop
loopne
mov
cmp
addr16
xchg
xor
push
sbb
je
dec
inc
dec
push
rolb
or
dec
sub
adc
jb
addr16
cmp
int
insb
leave
and
icebp
add
mov
push
enter
fbstp
pop
inc
ucomiss
inc
hlt
add
int3
dec
sahf
daa
aam
pusha
rcrb
mov
jl
inc
mov
mov
push
push
lods
pusha
in
dec
les
scas
cmp
inc
mov
in
mov
fs
push
int
xor
xchg
dec
rorl
inc
stc
std
jo
pop
movsl
add
inc
dec
clc
daa
mov
mov
sbb
and
mov
sbb
jnp
iret
and
cld
add
add
xchg
and
mov
lock
iret
daa
mov
xchg
aam
enter
outsb
and
and
inc
dec
inc
jo
shlb
mov
sbb
xor
fadds
dec
mov
mov
insb
pop
xlat
xor
enter
pop
add
dec
xchg
xchg
fxch
push
inc
sbb
xchg
xchg
xchg
xchg
mov
hlt
adc
mov
or
int
mov
adc
sbb
adc
add
and
cmp
sbb
adc
das
loopne
jae
fs
lock
or
xchg
fxch
enter
pop
cld
xchg
xchg
xchg
xchg
movsl
mov
je
xchg
xchg
xchg
lea
je
imul
imul
inc
nop
mov
insb
jns
rolb
into
stos
sub
sbb
xor
xchg
cmp
push
cld
add
and
fxch
mov
push
push
les
enter
enter
pushf
inc
into
mov
enter
js
into
fs
enter
xchg
cmp
pop
mov
jae
cmp
pop
fisttps
jbe
push
pop
cmp
xchg
mov
push
xor
sub
inc
push
loopne
cmp
outsb
xchg
int
pushf
mov
xchg
dec
pop
push
xor
push
jo
rcll
psadbw
pop
pop
mov
aaa
cld
and
cmp
loopne
add
out
or
rolb
sub
or
dec
fidivs
int
sub
or
add
test
fsubrs
lds
cmp
jo
popf
mov
into
pusha
iret
dec
push
popa
sbb
sbb
dec
data16
sub
adc
fmull
dec
jge
add
in
and
pusha
int
int
imul
mov
xchg
getsec
cmp
int3
into
or
push
jns
xor
add
stos
fldl
je
add
nop
jo
add
pushf
in
into
in
into
call
jl
xchg
xor
insb
sbb
inc
data16
mov
adc
fsubr
in
jl
mov
fsub
and
xor
push
mov
adc
cltd
pusha
inc
sahf
in
hlt
mov
sbb
dec
push
adc
push
xchg
push
pusha
mov
clc
rorb
dec
inc
cmp
add
scas
sbb
dec
mov
lds
cmp
nop
xchg
stos
bound
jbe
repnz
insb
pop
in
sbb
xchg
pushf
jge
orb
dec
cmp
idivb
xor
mov
xor
cli
sub
jecxz
mov
or
jb
xor
outsl
cmp
and
xor
push
inc
inc
or
dec
lock
inc
xchg
nop
mov
sbb
sub
cmp
movsb
push
dec
mov
mov
js
sub
cmp
sbb
push
mov
nop
mov
or
pushf
in
or
xor
rolb
jne
dec
lods
adc
scas
pop
pop
icebp
or
jne
fistpll
cmp
je
test
pop
aas
push
jno
cmp
insb
enter
sbb
sub
fcomps
ret
mov
push
push
mov
or
andb
sub
or
mov
or
cmpsb
sahf
mov
xchg
and
mov
push
loope
pop
dec
and
and
nop
in
jo
leave
sbb
and
push
mov
leave
mov
push
mov
xor
loopne
cli
or
or
add
enter
rclb
dec
push
hlt
daa
lea
mov
rorl
sti
fs
mov
inc
add
inc
cmp
jl
sbbl
pop
je
stc
setb
ror
sub
ret
cmpl
rep
lea
jl
in
fistpll
adc
incl
mov
push
xchg
pop
inc
mov
mov
dec
cmp
jle
pop
test
icebp
pop
xor
cld
sti
push
clc
cmp
pop
jl
cmp
jg
daa
rolb
sbb
shlb
popa
xchg
into
mov
das
and
data16
xchg
dec
aam
into
push
ret
icebp
loop
mov
xor
nop
popf
cld
ret
out
jnp
or
in
sub
jp
lods
aas
pop
pop
mov
hlt
mov
pop
jle
insb
pusha
mov
mov
add
cmp
jge
xchg
lea
cltd
rclb
hlt
mov
push
clc
cltd
arpl
shll
dec
jmp
pop
sbb
push
or
pop
sbb
jmp
jo
mov
lods
push
ljmp
or
fnstsw
jg
or
inc
cmp
add
lea
mov
in
iret
jb
cmp
je
and
sbb
mov
mov
add
lods
add
xchg
enter
cmp
lds
insl
mov
jb
je
mov
out
mov
cmp
stos
lcall
repz
jbe
mov
sub
out
je
jns
cmp
mov
add
incl
flds
nop
inc
shrb
mov
fcoms
mov
enter
xchg
pop
sbb
xor
mov
test
scas
pop
and
scas
inc
shlb
mov
sahf
add
jne
push
das
xor
pop
ds
mov
pushf
and
or
sub
and
pop
cmp
jbe
clc
and
imul
mov
xor
dec
push
fmuls
push
sbb
mov
mov
cli
cmp
inc
add
cmp
aam
shll
or
pop
sub
dec
std
je
mov
enter
mov
xchg
imul
dec
mov
dec
mov
push
jns
repz
push
push
mov
inc
call
or
or
push
sub
ja
flds
fdivs
add
call
adc
cmp
cli
cmpl
lahf
ror
push
sub
pushf
or
add
xor
mov
je
push
mov
cmp
push
ljmp
push
inc
push
xchg
push
pushl
stos
push
xorb
rcrl
stc
orb
fistps
sbb
rclb
dec
clc
mov
mov
and
iret
jno
push
cmp
sbb
movb
xor
cmpsl
jp
pop
mov
call
add
xor
push
cmc
insb
shll
add
and
es
cmp
mov
pop
sub
or
add
xchg
fcoml
push
cmp
jl
lahf
lods
sbb
pop
sar
test
add
add
jne
movsl
add
sub
mov
push
sbb
orl
and
in
fldt
pop
mov
lea
xor
or
lock
mov
mov
roll
shrl
cmpb
test
push
pop
push
add
jnp
dec
mov
pop
mov
mov
movsb
jle
jge
add
ret
dec
cld
add
inc
or
test
dec
mov
mov
inc
pusha
stc
inc
or
rolb
add
push
mov
mov
cltd
mov
hlt
dec
je
rorb
add
mov
sub
add
cmp
dec
or
push
lahf
cmp
adc
fdivs
fsubrs
dec
xchg
or
and
mov
jae
xor
and
int
or
incb
je
lea
insl
shl
mov
mov
cwtl
push
mov
push
pop
sbb
sub
or
fistpl
push
jmp
push
enter
fcoms
push
loopne
add
push
xlat
mov
mov
adc
out
mov
pop
test
in
into
negl
stos
and
cmpsl
fsubr
jne
push
adc
inc
adc
sbb
clc
xchg
sub
add
aaa
or
arpl
gs
adc
jmp
sbb
adc
pop
inc
aam
jno
fcmovu
or
pop
sub
aaa
mov
pop
in
ja
jg
and
je
sub
cmp
sar
mov
push
je
or
out
sar
or
nop
adc
adc
leave
and
in
adc
scas
orl
lods
sbb
in
jns
pushf
adcb
jge
iret
iret
in
decl
or
push
push
mov
je
lea
adc
movzbl
aaa
mov
lea
cmp
stc
mov
das
push
and
cld
cld
fdivr
sbb
or
push
mov
sar
inc
std
sub
cmp
sbb
enter
lret
shll
in
mov
fcomps
shll
mov
adc
or
add
add
or
les
into
mov
pop
add
push
add
sub
and
inc
outsb
sub
bound
pop
mov
add
sarb
into
idiv
jne
adc
xor
pop
add
pop
xor
mov
sti
xchg
jo
or
inc
add
dec
mov
adc
jge
jb
enter
adc
adc
adc
sbb
call
adc
mov
rorw
adc
ss
inc
cmp
and
adc
mov
cld
pusha
adc
and
clc
data16
cmp
in
adc
mov
inc
repz
movsl
sbb
neg
leave
sub
rcrl
dec
inc
mov
fistps
ljmp
jo
pusha
decl
jge
add
fwait
cli
jne
push
push
aas
jne
push
pop
and
add
add
push
aam
or
jmp
dec
fwait
push
lahf
cmpl
hlt
je
sub
pop
push
and
inc
dec
push
xchg
inc
aaa
push
adc
aam
inc
jno
xor
sbb
adc
ret
adc
mov
pop
cli
sub
jg
gs
xchg
dec
test
sbb
in
and
into
stc
addr16
aad
cmpb
add
dec
rorb
dec
test
insb
and
cmp
adc
out
loope
inc
push
mov
push
push
jns
sbb
lds
std
daa
inc
aas
add
and
pop
cmpl
push
xor
pop
push
sub
push
dec
and
adc
adc
repnz
call
adc
xorb
cs
push
hlt
lock
jb
mov
push
testb
cmpsb
push
pushf
push
cmp
je
aas
insl
pop
xchg
into
sbbl
addl
insl
idiv
xor
test
jo
lahf
dec
nopl
inc
js
mov
fstl
push
cs
in
push
sub
sub
pop
cmp
shll
mov
daa
and
xor
and
inc
cmp
cmp
je
or
inc
fnstsw
cs
rolb
mov
and
imul
cmp
adc
mov
add
shll
and
adcb
fimull
lock
fsts
sbb
pop
ja
shlb
hlt
fdivrl
jecxz
pop
xor
add
push
or
or
add
inc
call
push
push
push
mov
xchg
mov
push
inc
into
pop
add
lea
mov
dec
ljmp
call
popf
loopne
ret
inc
or
adc
sbb
sub
push
cmp
and
incb
and
orl
or
and
mov
or
rolb
inc
call
or
call
repz
loopne
test
mov
push
mov
leave
test
cwtl
push
leave
and
test
push
leave
and
and
push
and
push
leave
and
xor
and
and
cmp
and
or
clc
adc
daa
stos
dec
in
ret
cmpsb
xchg
adc
rcrb
sbbl
xchg
dec
xchg
pop
jmp
push
push
pushf
add
fstpl
pusha
aaa
adcb
xorl
orb
lret
sbb
sub
pusha
loop
push
pop
fisubrs
pop
and
cmpsb
jo
add
outsb
mov
or
pop
shrb
mov
cmp
sub
and
test
mov
cmp
hlt
fcomps
xor
add
mov
inc
xor
pushl
xchg
lods
mov
and
popa
ljmp
inc
cmp
jb
jmp
stc
push
fsts
cmc
je
mov
xor
lret
cmpl
in
add
pop
andb
xor
pop
dec
cmpsl
xor
xchg
pop
jns
jle
xor
or
mov
je
rolb
or
pop
jle
xor
clc
xor
jecxz
mov
push
push
fs
cmp
cld
pop
mov
and
jl
sub
lea
sbb
or
aaa
push
imul
orb
dec
jo
and
pop
ja
je
sub
out
idivb
or
inc
dec
push
fmulp
iret
push
aaa
sub
pop
je
aaa
ds
or
inc
push
ds
iret
out
push
adc
in
adc
adcb
inc
mov
push
outsb
imul
and
mov
mov
fmuls
lods
mov
pop
popa
pusha
inc
ja
mov
loopne
mov
out
cmp
dec
sti
push
clc
aam
sub
xlat
adc
add
pop
mov
mov
sub
cld
fcmove
inc
fs
push
or
sbb
lret
int3
sub
rcrl
adc
sbb
ret
mov
prefetch
push
cltd
sbb
call
and
and
ror
stos
data16
test
into
enter
adc
mov
aaa
and
xchg
pop
jle
outsb
je
leave
js
pop
sbb
fwait
add
addr16
jmp
in
aam
mov
push
or
pop
mov
push
fstps
jmp
imul
mov
or
pushf
add
dec
sub
movsb
push
outsl
xor
ds
cmp
jbe
lea
dec
rcrb
inc
call
cmp
pop
rcl
mov
push
push
pop
adcl
dec
test
lea
test
inc
movzbl
push
mov
push
loope
loopne
or
lock
add
lcall
sbb
jmp
lea
std
push
sub
add
inc
inc
dec
jne
pop
jmp
and
test
pop
je
nop
jle
js
or
enter
std
mov
add
mov
shr
shl
or
push
call
xchg
sub
enter
enter
mov
xchg
dec
xchg
ljmp
push
popl
outsl
or
pop
or
std
jne
in
cmp
stos
jbe
mov
in
call
lock
testl
mov
out
adc
mov
push
or
jmp
mov
mov
enter
faddl
adc
push
mov
fistl
jne
cltd
lock
aas
mov
mov
adc
sbbl
push
mov
add
fdiv
in
add
add
mov
pop
and
add
cld
adc
jb
fdivrp
and
push
xor
pop
mov
aas
sbbl
sub
mov
cmp
div
mov
jae
inc
ljmp
stc
pop
fdiv
xchg
inc
fildl
aam
sbb
add
or
adc
add
lock
daa
mov
js
je
add
adc
and
push
test
xor
lods
fwait
push
and
sub
xchg
movsl
add
loopne
jle
int
dec
ja
popl
push
subl
cmp
je
das
fadd
pusha
jge
and
decl
les
gs
in
lea
push
popf
andb
dec
add
clc
sbb
add
mov
adc
fcmovb
jmp
lds
and
jae
imul
loopne
pop
inc
sub
test
es
pop
push
inc
xor
pop
pop
int3
dec
mov
jns
or
enter
movb
or
jle
push
pop
and
xor
mov
ret
jmp
pop
xor
push
lock
test
lcall
or
jo
fisubs
div
je
cmp
aaa
sbbl
xor
inc
mov
sbb
rorl
enter
xlat
lret
pop
add
sbb
and
adcl
dec
cmp
mov
mov
xchg
das
loop
es
or
je
movaps
cmp
aaa
mov
imul
lea
daa
inc
dec
arpl
or
jnp
pop
cmp
jne
repz
mov
es
inc
or
sub
jb
lods
add
mov
sahf
mov
jne
pop
mov
inc
push
push
pop
aaa
je
lods
mov
pusha
mov
jne
mov
fidivl
shll
shl
mov
aaa
lock
push
push
mov
sbb
pop
inc
lcall
dec
sahf
mov
fsubrl
push
mov
ret
fldcw
lret
pop
fildll
and
sbb
test
add
jo
nop
push
and
out
sub
cmc
adc
jno
stc
imul
pop
nop
leave
leave
and
clc
mov
add
mov
inc
fwait
push
pusha
in
mov
movsl
pop
mov
dec
lds
cmpsb
cmp
xchg
mov
and
xchg
dec
jl
fstps
loopne
pop
sbb
mov
and
push
or
add
and
pop
shll
daa
add
fs
cs
push
push
push
adcb
add
cmp
sbb
push
push
fisubrl
push
add
cli
add
sarb
movw
or
daa
orb
hlt
fcoms
ja
or
pop
or
clc
add
imul
or
inc
arpl
out
mov
dec
mov
push
lret
mov
mov
sbb
inc
mov
mov
fmull
adc
jle
mov
mov
jge
jge
mov
ja
sarb
or
fs
les
mov
push
dec
jbe
enter
sarb
and
addl
pop
cmp
pop
push
das
add
and
pusha
xor
subl
pop
jge
add
cs
or
or
inc
sbb
inc
es
call
cmp
gs
popf
add
jb
adc
and
loop
jne
repnz
mov
push
jmp
jnp
adc
scas
fsub
cmp
mov
sub
mov
pushf
cmp
popf
int3
push
adc
testb
int3
jne
push
jle
fwait
incl
fcoml
loop
rorb
out
decl
lods
cmp
add
xchg
mov
jmp
push
int
outsb
inc
sub
fcoms
fwait
dec
mov
adc
mov
sbb
mov
mov
jl
mov
pop
push
push
and
cmpsb
test
and
ss
pop
aaa
mov
lret
push
rorb
add
add
std
push
push
jo
aad
add
inc
add
jecxz
push
and
mov
add
lods
sub
xor
mov
out
mov
mov
and
fidivl
int3
jae
pop
pop
movsb
int
aaa
xlat
aam
ret
lods
and
cmp
sbb
lret
xchg
sti
xor
loop
enter
sub
pushf
mov
out
inc
cmc
add
shrb
out
xchg
outsb
xor
sbb
jne
iret
sbb
aad
mov
outsb
or
push
outsb
or
pop
and
sbb
nop
sub
pop
cmp
jmp
and
in
scas
clc
mov
push
adc
mov
push
bound
pop
jns
push
test
cmp
fists
mov
push
mov
xorb
or
cmp
pop
xor
jmp
jo
cmp
add
into
jo
mov
pop
cmpsb
loopne
push
enter
gs
dec
lret
cmp
clc
sub
mov
jmp
insb
jp
das
xchg
dec
mov
jns
add
inc
pop
push
or
rolb
mov
mov
push
push
enter
ljmp
push
das
ljmp
push
cmp
mov
and
cmp
mov
push
add
and
stc
mov
nop
push
sub
mov
mov
push
xchg
xor
bound
push
movsl
in
push
cmp
rorl
loopne
xor
mov
stos
test
cmp
mov
orl
sub
or
jb
push
push
out
jo
jg
mov
stos
sub
or
cmp
sbb
push
sub
cmp
daa
call
mov
cwtl
les
push
outsb
jo
imul
sub
sub
std
push
aam
add
or
adc
cmp
sbb
xchg
addr16
push
push
jne
mov
out
pop
lcall
jl
cld
sbb
mov
sbb
lods
sub
dec
pop
ds
in
xchg
xchg
and
in
xchg
sbb
dec
fsubr
add
nop
pop
xor
enter
leave
mov
pushf
and
or
mov
mov
nop
pop
xor
dec
leave
and
nop
cmp
or
cmp
mov
fildll
xchg
and
dec
test
inc
mov
ja
xor
pop
xor
pusha
sub
and
sbb
and
sbb
adc
and
scas
insl
jle
lock
sub
loope
pop
les
daa
mov
mov
sbb
or
das
jecxz
dec
or
mov
mov
dec
or
sub
movsl
dec
je
lds
add
scas
mov
div
mov
inc
scas
aaa
pop
mov
xor
movsb
xor
js
enter
adc
add
rolb
dec
mov
dec
sbb
xchg
stos
xchg
test
or
inc
imul
cmp
sbb
sbb
cmpl
jle
add
pop
mov
rclb
and
pop
xchg
dec
fisubl
in
sbb
into
push
bound
cmp
lock
lds
fbstp
jl
loop
pop
dec
push
mov
cld
and
xor
and
std
dec
dec
sbb
ret
xchg
dec
inc
inc
mov
ds
jb
jge
ljmp
movsl
and
lock
ds
test
shrb
ficoml
inc
xor
mov
add
in
jnp
je
pop
lea
sbbb
cmp
arpl
jno
jmp
and
mov
fs
cwtl
pop
push
push
pop
jne
movl
mov
test
lcall
xchg
mov
ret
fcomps
mov
inc
xor
neg
xor
sub
pushf
xor
dec
je
and
clc
icebp
cmp
adc
cmp
pusha
jg
add
mov
loopne
pop
jbe
pop
hlt
mov
sbb
cmp
je
out
pop
xchg
or
sbb
mov
adc
daa
xor
daa
push
imul
je
mov
dec
sub
movsb
loope
push
push
nop
inc
clc
push
xor
add
inc
mov
mov
int3
mov
repz
xlat
lods
jb
rcrl
sub
adc
add
inc
sbb
sub
bound
out
jg
cmp
adc
loop
inc
addb
fisubs
cmp
aas
mov
push
mov
jns
mov
sub
and
add
xorb
cmp
mov
adc
pop
movsb
adc
rcrb
fwait
push
inc
loopne
incb
cwtl
cmpsl
subb
push
push
adc
push
jl
push
aad
out
cmpsl
add
xchg
inc
pop
or
rorl
dec
inc
and
inc
mov
and
sbb
in
or
mov
sbb
xchg
xchg
pushf
pop
dec
sub
inc
pushf
cmp
enter
out
stos
mov
lahf
mov
push
insl
clc
loope
into
cmp
leave
cmp
shll
add
jns
pop
pusha
nop
pusha
add
fcoms
xor
add
fdivs
ficompl
cs
fmull
je
aaa
push
cmc
jmp
nop
or
lea
js
in
movsb
jmp
dec
in
nop
incb
dec
add
div
cltd
call
jbe
pop
push
jp
adc
xchg
push
add
xor
cmp
add
mov
add
test
jp
and
add
mov
in
mov
adc
jno
test
ds
ret
sarb
cmp
std
inc
fistl
popa
dec
and
push
lret
xchg
les
add
or
or
mov
in
sub
add
jmp
sbb
mov
xchg
adc
and
inc
pop
ss
sbb
repnz
dec
inc
ja
xchg
sti
es
sbb
aaa
push
cli
mov
out
in
mov
mov
xor
iret
imul
data16
pop
cmpb
dec
dec
std
pop
xor
cmpb
outsb
fsubrl
iret
push
and
xchg
insb
decl
arpl
ljmp
push
movsb
xchg
sbb
gs
sbb
or
mov
sbb
pop
pop
push
jo
push
test
test
jae
fwait
dec
inc
xor
pop
add
icebp
push
sub
das
cmp
pop
mov
stc
push
les
fidivrl
cwtl
and
pushl
mov
mov
je
je
std
je
jl
mov
push
push
dec
testb
mov
mov
jl
pushf
mov
lahf
iret
pop
push
jp
mov
pop
sub
loope
mov
add
and
popf
xor
js
mov
shll
dec
adc
dec
fimull
rolb
xor
dec
jne
popf
or
movl
push
imul
int
mov
push
movsl
or
push
push
out
dec
mov
push
adc
mov
jo
cmp
push
pop
lods
pop
fidivrl
mov
pop
dec
fistps
les
pop
jne
mov
dec
fs
push
mov
and
lcall
jmp
add
cmpb
jne
cmp
jne
mov
mov
movb
mov
add
loopne
jmp
int3
cmp
je
sti
jg
mov
push
nop
jge
cmpb
je
push
fabs
xor
testl
add
push
sbb
xchg
loope
xchg
es
sub
mov
jne
cltd
add
dec
push
popa
xor
add
push
imul
cvtps2pi
sarb
or
fisubl
das
mov
jg
or
test
add
add
adc
add
daa
push
adcb
sub
inc
adc
xchg
jmp
jecxz
mov
and
roll
insl
adc
inc
xor
ss
ret
push
or
mov
test
cmp
or
xchg
call
pop
test
add
sub
in
cmp
pop
add
inc
inc
add
shl
push
cmp
pop
mov
xchg
and
and
xor
inc
lock
es
push
or
cmp
sub
addr16
aad
int
mov
xchg
lret
inc
inc
sbb
jnp
and
jecxz
scas
enter
pusha
test
add
inc
icebp
scas
or
lea
xor
and
jl
cs
adc
aam
movb
lods
push
js
or
iret
add
or
jne
pusha
mov
xlat
or
mov
xor
mov
push
push
clflush
sbb
add
mov
je
pop
clc
sbb
xor
or
lods
gs
inc
or
mov
shll
dec
inc
push
cmp
jl
sbb
jmp
mov
xor
fildll
mov
ljmp
movsb
push
cmp
inc
xchg
pop
mov
mov
mov
or
sbb
mov
xor
mov
add
addr16
cmp
add
cmp
add
sub
add
leave
push
test
xor
sub
sbb
std
daa
add
movl
add
enter
in
add
adc
mov
cli
call
std
xor
pusha
pop
cmpsb
mov
stos
add
mov
sub
mov
xor
sbb
xor
adc
imul
shl
cmpsb
out
enter
fidivl
and
cli
movsb
roll
push
cmp
cmp
inc
cmpsb
sbb
mov
xchg
stos
mov
and
pop
push
outsb
push
and
in
cld
fs
mov
adc
mov
dec
push
jle
sub
jo
popf
sbb
pop
push
add
sub
js
pusha
push
mov
test
mov
and
dec
pop
sbb
pop
lds
js
sti
mov
dec
idivl
xor
xchg
sbb
mov
fcmovnbe
and
int3
mov
neg
sbb
andb
or
jmp
mov
mov
mov
push
mov
inc
shl
orb
or
cmp
je
mov
jle
sbb
push
xor
pop
ja
inc
test
std
or
cltd
xchg
jo
imul
das
xor
pushf
inc
enter
pop
pop
push
movsl
je
xchg
inc
xchg
test
and
repnz
and
cmp
roll
and
in
sbb
je
mov
out
xchg
push
dec
in
xlat
add
mov
push
shll
jg
or
testb
clc
pop
sti
lea
mov
cmp
mov
stc
call
mov
or
out
addb
inc
andb
test
inc
jne
adc
add
and
pop
xor
hlt
push
pusha
fmuls
inc
inc
mov
aas
sub
adc
cmp
andl
mov
mov
sti
fstpt
mov
sbb
jo
ds
arpl
fidivs
lods
dec
sbb
hlt
xchg
xchg
xor
add
push
pop
clc
add
inc
sub
clc
cmpsb
roll
lea
and
or
pop
pop
adc
and
inc
push
xchg
sub
xorl
mov
test
fistpl
adc
adc
in
mov
addr16
insl
sbb
add
add
pop
push
ss
sub
sub
ds
jne
stos
cmp
lcall
out
mov
lods
loope
int3
or
pop
push
push
mov
jne
and
add
push
subl
mov
mov
inc
inc
out
push
lock
jge
inc
jne
push
inc
mov
adc
out
iret
clc
loop
pop
sbb
pusha
mull
sbb
mov
in
xor
cmp
push
dec
fadd
lahf
sub
adc
js
pusha
and
daa
jmp
pop
insb
mov
ret
push
lock
pop
icebp
push
or
popl
dec
subb
rolb
push
sar
scas
loop
inc
xor
cmpsb
repz
push
lret
or
insl
pop
push
es
inc
cltd
or
rcrl
pop
jne
mov
lock
lret
lret
roll
or
xchg
lods
aam
sarl
mov
mov
shrb
mov
cmp
shlb
pop
mov
shll
xor
lods
mov
cwtl
sub
mov
movsb
inc
cs
pushf
adc
cmp
orl
push
or
push
add
repnz
push
pop
mov
int
and
pop
jmp
dec
push
lret
repz
push
push
cmp
xor
sbb
push
mov
push
or
push
xchg
insb
hlt
inc
in
inc
or
nop
dec
sahf
loopne
int3
or
nop
dec
sahf
sarb
or
movsb
push
xchg
inc
iret
xchg
cmp
inc
cs
js
in
andb
push
push
pop
mov
dec
sub
cmp
lock
cs
mov
cmpsl
push
fs
inc
sub
and
bound
das
loopne
daa
sub
test
les
inc
fcompl
enter
aam
and
or
mov
fs
sub
jb
inc
pop
xor
and
xor
jns
and
xor
in
repz
inc
cs
mov
fcmovbe
mov
mov
jbe
pop
enter
les
nop
out
mov
sbb
lods
cs
cwtl
mov
nop
inc
push
in
fimuls
xorb
xchg
imul
mov
test
fs
js
xor
enter
jmp
js
inc
fnstcw
add
inc
inc
cs
jmp
mov
in
in
inc
xor
sbb
inc
inc
cs
or
pop
enter
add
pusha
mov
xlat
sub
adc
cld
inc
xchg
bound
adc
mov
sub
fs
mov
in
mov
das
sub
out
xlat
or
in
das
std
in
mov
subb
sti
fldcw
lods
fs
into
les
rolb
test
fs
in
sub
enter
mov
enter
lods
ss
jb
and
repz
fisubrs
or
cltd
nop
and
popf
test
mov
iret
or
movsb
iret
sub
mov
xor
pusha
mov
fs
sahf
sub
jb,pn
pop
test
fs
sub
pop
enter
stc
sub
xchg
or
pop
daa
enter
nop
daa
rcll
mov
dec
or
enter
inc
sbb
aaa
xor
nop
xchg
or
sub
and
mov
mov
xor
jno
adc
cmovb
test
and
nop
std
adc
mov
pop
aaa
les
push
ret
movsb
repz
cmpsl
inc
ret
adc
in
nop
std
mov
out
mov
std
movsb
insl
and
jne
mov
fldt
sahf
jmp
outsb
les
inc
int
fnstcw
fdivs
add
jle
sbbb
std
mov
sub
cltd
fs
xchg
cmpb
push
pop
xchg
push
in
int3
jp
rorl
inc
mov
rorl
punpckhbw
sbb
movsl
inc
popf
and
inc
push
and
lret
mov
pop
push
push
outsl
dec
enter
pop
jl
cmp
mov
test
push
mov
and
into
add
popa
cmovae
inc
xchg
mov
add
dec
xor
ds
leave
repz
jmp
jl
mov
add
pop
orb
out
pop
loop
jp
push
jl
jbe
lock
popf
xor
adc
pop
pop
xchg
sbb
dec
push
call
sub
popa
and
movsb
inc
lcall
iret
outsl
inc
mov
inc
adc
cmpsl
mov
repz
push
jo
sub
bound
pop
push
add
lock
pop
push
push
or
xorl
cmp
jns
push
mov
jg
push
push
sbb
push
adc
sbb
clc
add
jne
out
push
popa
and
aaa
and
add
add
test
pop
add
sub
pop
pop
repnz
add
push
jno
test
bnd
or
sbb
hlt
aas
jbe
sub
and
popa
call
cs
in
push
inc
es
outsb
enter
mov
sbb
ror
nop
and
sbb
push
push
sbb
sub
mov
fs
inc
mov
test
inc
inc
cs
movsb
inc
inc
inc
cs
add
out
sbb
enter
jle
nop
xchg
or
imul
sbb
scas
bound
in
inc
into
sub
adc
inc
es
aas
outsl
and
pop
xor
inc
inc
cs
hlt
adc
xor
repz
fcoml
sub
adc
gs
mov
and
inc
pop
add
mov
sahf
fmul
lea
push
test
dec
mov
inc
pop
push
notl
sub
lea
pop
lods
adc
cli
add
lds
stos
cld
xbegin
into
enter
mov
mov
movsb
into
push
hlt
ds
dec
pop
xor
push
pop
sub
and
rorl
into
test
out
andb
enter
test
mov
es
call
xor
sub
fsubr
fs
sahf
or
test
mov
jns
enter
mov
mov
jne
movsb
sbb
pusha
or
or
test
gs
ds
pop
inc
sbb
pop
sub
mov
add
subb
mov
lsl
test
test
scas
inc
xor
rorl
rcrl
mov
test
dec
loope
jecxz
aam
mov
mov
sub
jbe
imul
pop
pusha
daa
cmp
xor
cmp
das
xor
jmp
add
mov
adc
cmpsl
pop
jl
jmp
push
push
jmp
or
jmp
push
ret
pop
add
and
loopne
fldl
cmp
fadds
push
and
jge
aam
xor
in
cmp
jecxz
loopne
out
into
add
mov
bound
dec
ds
inc
and
data16
add
pop
and
stc
fsts
or
add
xchg
imul
xor
cld
dec
jmp
or
leave
mov
rol
pop
xchg
aam
cmp
adc
or
outsl
adc
push
imul
inc
add
mov
ds
mov
mov
mov
jle
dec
hlt
pop
jno
ret
sbb
mov
pop
push
and
es
add
add
loope
cmp
mov
mov
add
or
xchg
jo
movsb
lcall
fimuls
and
adc
out
sub
movsb
mov
js
push
sub
int
rol
pop
mov
dec
outsb
pop
arpl
out
retw
shlb
hlt
push
rorb
imul
enter
pushf
inc
js
outsl
out
ds
mov
xor
ds
add
es
shrb
adcl
repz
mov
push
push
lds
enter
push
xchg
jge
cmpl
sub
ret
cwtl
or
sbb
cltd
or
or
movsb
sub
jmp
mov
rcll
cmp
xchg
add
sar
pushf
sbb
or
xchg
and
ja
sbb
pop
loope
inc
and
cld
cli
or
stos
adc
lods
inc
sbb
add
adc
loope
inc
loope
les
std
cltd
call
inc
dec
jb
inc
mov
mov
mov
and
leave
cmpl
adc
sbb
and
rcr
pop
cmp
seto
push
sbb
add
xchg
mov
xor
or
push
popf
mov
cmp
popa
lds
push
je
push
pop
push
pop
cmp
jge
push
mov
cs
push
or
pop
mov
sti
mov
and
xor
nop
dec
push
mov
pop
dec
and
int
pushf
loopne
inc
out
filds
dec
sub
lahf
aad
pop
jle
push
in
dec
xor
push
cld
les
loopne
xor
shl
sahf
and
add
inc
test
ret
mov
add
push
pop
cmp
jbe
lea
adc
das
push
sbb
lock
out
adc
lea
out
sub
cmp
loop,pn
sbb
mov
or
std
adc
jne
arpl
add
lret
lock
js
xor
pop
sbb
testb
int3
mov
cmp
jns
loop
sub
or
push
pop
cltd
loope,pt
sub
dec
ret
out
push
xchg
cmp
lcall
rolb
add
stos
lea
notl
and
inc
test
add
out
cmp
aas
dec
mov
mov
adc
in
in
cld
insl
add
out
fld
mov
mov
mov
fidivs
fs
insb
out
pop
lock
xchg
mov
or
lahf
and
aam
aas
and
pop
stc
mov
hlt
pop
pop
insb
bound
pop
push
in
push
xor
cld
pushf
push
hlt
add
std
xlat
sub
mov
sub
xchg
loope
pop
data16
shlb
lock
pop
jns
push
and
push
test
jge
test
mov
test
push
fxch
cmp
push
cmp
in
sbb
outsb
arpl
inc
cmpb
jae
push
sub
and
imul
jb
loopne
mov
arpl
xor
roll
dec
cmp
pop
add
mov
loop
jge
aas
push
stos
and
adc
dec
rcll
repz
aam
push
mov
rclb
cld
insb
sub
leave
outsl
inc
sbb
std
bsf
cld
xor
bnd
stos
std
adc
add
xor
cmpsb
popa
pshufw
sbb
mov
push
or
pop
repnz
jmp
sbb
das
nop
std
loope
jo
or
mov
push
loopne
or
sbb
sbb
dec
inc
jb
ret
mov
adc
mov
adc
cmp
xchg
adc
add
dec
loope
mov
sbb
mov
pop
leave
outsl
inc
mov
std
xchg
inc
jle
dec
fcoms
sub
adc
mov
scas
shlb
inc
popf
pushf
add
inc
lret
push
popf
mov
xchg
or
mov
adc
jo
mov
or
lods
sbb
movb
xchg
into
cmpb
or
jb
jno
push
adc
enter
cli
adc
sbb
jb
or
xor
add
cmp
cli
test
mov
sbb
jg
pop
inc
cs
push
negl
sub
xchg
xchg
fwait
and
sbb
dec
aaa
adcb
push
test
jns
lock
addb
adc
inc
push
mov
mov
mov
xchg
repnz
mov
dec
test
pop
je
add
shlb
mov
and
pop
ret
sbb
ja
push
inc
pushf
in
pop
pop
push
popa
popa
jns
push
inc
nop
nop
xor
adc
out
je
sbb
and
test
bound
or
test
stc
mov
jnp
xor
test
repz
fwait
popa
pop
scas
push
scas
andl
clc
inc
sub
mov
add
sbb
inc
cmp
fldt
push
mov
add
sbb
nop
adc
or
xor
cmp
xchg
sbb
cli
sbb
and
scas
in
test
sbb
and
and
add
mov
fisttps
popa
pop
mov
jl
pop
sahf
add
inc
xor
add
jp
inc
aaa
adc
lock
mov
cld
testl
inc
jae
sbb
ss
rcrl
mov
ds
sub
adc
sub
scas
push
xor
aaa
dec
xor
mov
mov
mov
jo
loop
mov
inc
xchg
adc
fcom
test
add
fcoml
or
lods
xor
xchg
push
dec
repnz
push
shl
imul
add
push
loopne
xchg
testl
or
in
fadds
in
dec
mov
test
sub
scas
divb
add
inc
pop
dec
insl
int3
andl
pop
jns
push
mov
out
sub
adc
insl
inc
fdivs
sub
push
cmc
and
call
mov
sbb
inc
inc
pop
adc
inc
int3
lret
mov
shl
cmc
push
and
inc
and
mov
pusha
inc
cmpsl
push
js
jl
cmp
adc
imul
or
add
sbb
stos
arpl
mov
or
and
bound
in
in
sarb
pop
repnz
dec
adcl
cmp
hlt
jne
enter
fwait
jl
pop
add
aas
cmp
mov
fsts
xchg
xor
xor
or
xchg
sar
adc
inc
lods
lods
cmp
js
addps
shr
in
inc
sub
ret
insl
in
push
sbb
xchg
xor
mov
div
adc
sarl
add
and
mov
call
and
mov
push
and
repz
or
and
mov
rcrb
cmpsl
int
dec
add
ret
sbb
into
mov
xchg
adc
push
pop
dec
mov
sub
outsb
addr16
or
pop
sub
popa
push
cmp
cmp
ds
and
push
repnz
jmp
loop
je
push
jg
pop
push
push
push
adc
adc
loopne
inc
adc
leave
call
or
xlat
adc
subb
and
add
scas
add
cmpsb
sarb
xor
or
or
imul
or
sub
xor
js
xchg
mov
inc
push
je
cmp
push
shlb
or
shl
add
push
cmp
daa
movsb
add
or
ds
aaa
and
push
and
lahf
inc
pop
addr16
cmp
aad
jl
insl
in
aaa
sbb
dec
push
xor
aaa
xchg
icebp
je
adc
adc
aas
call
inc
sub
je
push
mov
test
push
vmwrite
cltd
inc
sub
test
push
xchg
stos
test
mov
and
push
jb
mov
pop
aaa
push
aaa
pop
sub
and
or
and
jle
sbb
jl
add
fwait
test
jno
mov
adc
xchg
xlat
add
adc
lods
shrb
mov
ss
pop
push
and
dec
and
and
loop
sti
add
jo
es
push
push
les
add
and
iret
aaa
xor
dec
nop
adc
rol
add
mov
out
scas
je
js
xor
and
pop
dec
jge
inc
ss
sbb
mov
rol
pop
or
push
cld
inc
mov
push
in
inc
ss
ss
sahf
out
xchg
lea
mov
lea
ret
or
cld
or
mov
inc
xchg
push
shld
pop
and
and
cmp
orl
in
loope
mov
push
mov
insb
mov
and
jno
adc
mov
pop
stos
outsl
sahf
nop
add
mov
ret
or
mov
mov
cmp
cmpb
movsl
mov
scas
or
movsl
push
les
addr16
push
jne
inc
test
rcll
cmp
repz
inc
push
std
dec
sbb
dec
js
dec
sti
test
lahf
mov
leave
fstps
mov
inc
pop
mov
sbb
push
xor
aaa
in
push
insl
mov
test
xor
xchg
ja
xor
dec
jecxz
push
adc
xor
jp
add
in
xor
mov
hlt
inc
push
mov
push
addr16
aam
or
fsubr
into
or
mov
fbld
cmp
inc
mov
push
or
push
jge
add
je
jo
push
xor
jp
std
inc
sbb
mov
test
or
inc
add
and
movsb
jnp
cmp
fidivl
cltd
mov
inc
push
jmp
jmp
push
add
mov
dec
sbb
xor
mov
push
inc
sbb
pop
filds
test
add
shl
jae
pop
cmp
mov
push
xor
push
dec
sub
or
dec
mov
cld
xor
xor
mov
je
inc
xlat
cli
pop
jb
sbbb
adc
test
adc
push
dec
rep
call
ret
call
sub
pushf
xor
mov
xchg
lea
jae
sbb
push
mov
ds
loope
and
jmp
push
push
popa
add
ds
out
lea
xchg
incl
int
mov
loope
jnp
call
test
push
stos
stc
adc
cmp
cmp
push
lods
push
cmpsl
push
lret
leave
repnz
lds
cs
add
fwait
mov
shl
push
ficoml
sbb
pop
in
adc
jno
sub
and
push
iret
xchg
mov
lea
cmp
imul
and
xor
loope
push
cmp
outsl
les
daa
mov
mov
jae
push
add
jae
sbbl
dec
in
mov
sub
repnz
xor
adc
cwtl
and
cmp
lret
sbb
ret
xchg
pop
adc
rclb
ret
sub
mov
mov
xchg
push
stos
mov
pop
arpl
xor
sub
push
ret
inc
lret
dec
imul
sbb
mov
sub
je
or
cmp
mov
xor
xor
xlat
and
or
inc
push
in
mov
mov
mov
daa
mov
push
dec
and
or
outsl
out
notl
inc
fistl
popa
je
jmp
push
cwtl
mov
lds
aad
cmpsl
mov
cs
push
ret
mov
sti
xchg
xor
sub
sbb
mov
ret
dec
loopne
daa
in
add
adc
or
ret
dec
or
dec
pop
dec
xor
pop
sub
sti
adc
inc
movsb
sbb
mov
sbb
or
xor
push
and
lock
sbb
adc
adc
sbb
aad
lods
lret
push
test
and
ds
adc
push
mov
loop
mov
xor
and
xor
in
test
jmp
fisubl
add
pop
cmp
repnz
or
in
xor
aaa
jg
inc
pop
cmp
fs
xor
inc
icebp
movsb
sub
cmp
sbb
pop
repz
in
dec
xor
adc
popa
enter
je
adc
sub
popl
scas
sub
add
mov
sub
add
test
in
sbb
fs
jecxz
xor
jl
leave
or
std
adc
mov
test
jmp
aad
out
push
xor
lret
cltd
dec
ljmp
dec
jno
leave
and
das
flds
cltd
adc
cli
fbld
push
add
push
sbb
jl
pop
js
das
push
mov
cltd
mov
jmp
stos
addb
imul
push
add
push
mov
mov
dec
or
jb
leave
addl
das
sub
push
es
xchg
das
xchg
or
add
loope
xor
or
push
jg
sbbl
cmpl
push
and
lds
add
add
mov
mov
pusha
out
xchg
mov
sub
stos
insb
cmp
scas
jne
and
sub
aad
les
push
xchg
jg
sbb
movzwl
add
cmp
cs
out
int3
cs
mov
cmp
aaa
in
jno
inc
in
dec
rcll
jg
js
test
sub
cld
ss
leave
or
push
add
jmp
imul
cmc
mov
sbb
pusha
sti
xchg
icebp
nop
jns
int
jge
and
and
fwait
dec
enter
xchg
xor
jp
stc
or
adc
or
stos
and
dec
faddp
insl
mov
gs
das
pop
iret
or
dec
sbb
inc
imul
popa
and
inc
daa
mov
jae
mov
cs
sbb
pop
push
adcl
or
insb
and
addr16
stc
push
test
idivb
or
add
xlat
push
or
push
push
movzbl
fstl
and
and
cmp
sbb
sub
push
mov
cmpsl
enter
jecxz
cmp
int
add
pop
add
cmp
int
pop
hlt
or
adc
mov
cmp
mov
shr
add
imull
cltd
xlat
cmp
mov
outsb
adc
bound
cli
sbb
dec
mov
dec
inc
mov
push
mull
xor
push
daa
dec
add
or
xchg
add
pusha
in
pop
and
xor
dec
aam
je
inc
movswl
and
ljmp
test
inc
mov
in
nop
inc
adc
js
mov
add
fstpt
fs
notl
pop
jge
movl
add
imul
sub
fcoms
mov
add
leave
mov
loop
add
add
push
jne
xchg
insl
iret
dec
mov
add
jne
sbb
pop
jbe
stc
insb
filds
jmp
jge
jne
popa
test
sbbl
gs
sub
sbb
sub
or
test
test
or
je
add
jne
lods
xor
or
mov
jmp
and
movsl
xchg
adc
out
or
xor
jo
add
pusha
pusha
mov
jge
add
mov
add
lods
push
xchg
cld
psubb
fistpl
sbb
and
adc
add
fs
jmp
and
push
fdivp
and
push
rolb
cmpb
inc
ljmp
adc
jns
and
filds
add
pop
mov
add
les
push
data16
adc
xchg
imul
push
imul
dec
mov
fiadds
cld
je
or
pop
dec
repnz
jmp
xchg
jno
add
push
shll
and
rorb
mov
imul
adc
stos
fsubrs
int3
dec
xor
push
popa
xor
push
in
mov
mov
movaps
jmp
adc
outsb
pusha
push
add
rolb
add
lock
push
sbb
or
adc
and
or
dec
push
dec
lock
sbb
add
out
and
inc
jo
pop
jo
mov
sbb
pop
inc
xor
bound
push
add
jne
push
push
adc
imul
and
and
add
cmp
fs
mov
insb
xchg
enter
jb
arpl
mov
add
push
sub
or
hlt
aad
fadds
jo
addl
ret
es
push
cmpsb
iret
lock
mov
je
and
jne
es
xor
mov
enter
push
mov
lahf
adc
jp
cmp
lods
add
test
std
mov
sbb
ror
popa
shll
mov
sbb
cmpsl
pop
cmp
imul
rcl
or
push
loopne
cltd
push
or
rcr
jbe
xchg
cmpsb
or
cmp
cmp
movsl
stc
hlt
sbb
mov
mov
insl
sub
push
das
lods
mov
sub
ret
sub
and
scas
push
inc
pusha
jmp
pop
xor
cmc
and
mov
mov
push
and
js
shl
jno
cli
and
push
push
jo
lock
jl
cmpsb
add
jg
or
cmp
enter
popa
or
sbb
cmp
cmp
out
or
pop
cwtl
push
inc
adc
mov
sbb
cld
add
not
sub
fcomps
in
mov
push
inc
pop
add
cwtl
jns
mov
andb
enter
jge
les
lods
sub
mov
dec
adc
sbb
sub
xchg
out
mov
ret
or
in
gs
push
cmp
push
or
mov
movd
cmp
aam
push
jecxz
insl
sbb
inc
or
add
pop
ret
add
das
add
push
push
adc
push
push
adc
jp
pushf
js
and
adc
mov
push
add
stc
push
test
jmp
sbb
rcll
xor
sbb
jo
inc
inc
add
jmp
or
adc
inc
jle
jo
addb
es
stc
sub
add
out
testb
cli
sub
mov
mov
mov
inc
gs
imul
stc
pop
jl
push
pop
pop
jnp
loopne
jo
push
dec
cmp
adc
dec
mov
in
and
decl
add
ret
test
aaa
sbb
add
push
sbb
inc
pop
jecxz
dec
js
mov
mov
shlb
dec
subl
add
inc
imul
subl
push
add
mov
aaa
insl
and
push
inc
lret
xor
push
or
mov
pop
inc
int3
movb
movl
jns
jnp
mov
xchg
mov
in
and
xchg
mov
in
adc
xor
cmc
push
aas
ret
add
mov
pop
jmp
adc
mov
insl
ja
dec
mov
pop
rol
jo
test
ficoml
lcall
add
nopl
adc
sub
xor
add
adc
xor
mov
mov
push
cli
mov
adc
push
mov
push
push
rorb
pop
push
cwtl
dec
jl
ljmp
jmp
xor
cmpb
push
dec
adc
sbb
jmp
or
movsb
dec
clc
jbe
test
cwtl
push
sub
sti
shl
loopne
clc
add
or
or
mov
push
out
adc
push
pop
pop
push
mov
test
fcos
ss
jne
dec
outsb
filds
scas
push
fldcw
and
sbb
or
fxch
jb
mov
add
pop
jmp
dec
test
das
sbb
leave
add
jmp
sbb
push
movsb
in
adcb
mov
in
jb
nop
dec
pop
dec
and
and
or
xchg
dec
enter
in
cltd
sub
push
rorb
and
loop
inc
mov
mov
imul
sarl
add
or
or
xorb
mov
fs
jns
clc
jnp
incl
inc
aaa
adc
add
fistpll
mov
sub
push
or
inc
je
mov
idivb
je
test
add
and
jno
adc
add
pop
lods
inc
cmpsl
cltd
stc
adc
inc
add
push
dec
dec
cmp
inc
inc
fs
repz
jge
or
shr
push
stos
push
mov
in
mov
push
ja
in
add
jecxz
pop
cmp
cmp
add
mov
adc
je
xor
adc
test
in
sub
inc
add
popf
cli
pop
inc
test
jne
inc
mov
orl
int
in
addl
or
push
add
loope
jne
incl
push
mov
sbb
out
out
sti
shr
cmp
or
dec
cmovnp
inc
subl
add
add
push
shlb
addr16
test
push
mov
or
cwtl
daa
inc
sbb
mov
push
and
add
xor
cwtl
mov
mov
ret
cmp
in
into
mov
and
sbb
sub
sub
in
sbb
and
add
adc
mov
cmp
jg
aas
insl
push
or
cmp
lret
mov
mov
and
adc
inc
pop
sbb
in
pop
pop
icebp
or
add
in
mov
push
xor
imul
add
dec
xchg
outsb
cs
mov
xchg
jbe
add
cli
das
pushf
insl
stos
mov
cmp
xchg
mov
jne
xchg
dec
fcoml
pop
cmp
cs
cmc
adc
imulb
mov
pop
dec
lea
ss
ljmp
dec
pop
sub
aas
out
mov
dec
and
push
pushf
and
je
xchg
pushf
clc
loope
add
xchg
add
jnp
push
jns
mov
push
inc
fldt
loopne
rclb
push
or
mov
jg
mov
daa
or
xor
loope
stos
cmp
mov
lret
push
push
sarl
call
movd
rorl
pop
test
inc
inc
call
cs
jp
pop
filds
or
mov
push
fdivs
sbb
xchg
pop
cmp
sub
add
pop
jl
xor
scas
fstpl
lret
and
mov
in
cmp
je
ds
jb
xorl
pop
repz
repnz
js
cli
xor
pop
shll
push
xor
xchg
adc
addr16
aam
mov
imul
pop
je
jnp
jg
rolb
out
xchg
mov
dec
xor
push
xchg
nop
pop
ja
add
daa
daa
pop
inc
test
adc
xlat
daa
mov
pop
pop
xchg
cmc
lcall
sti
sub
add
clc
ss
je
outsl
enter
in
xor
and
cmp
test
xchg
aas
dec
xchg
xchg
dec
add
mov
std
shlb
sbb
push
adc
sub
mov
xchg
mov
or
push
xor
js
push
add
adc
mov
dec
mov
sub
mov
inc
loopne
jg
fisubrs
dec
daa
loop
jge
pop
out
inc
call
cs
lock
popa
inc
shl
push
dec
into
sub
cmp
push
pop
flds
loop
scas
ret
rclb
add
cmp
xchg
pmulhuw
je
stos
push
mov
or
or
adc
adc
test
adc
inc
test
fsubrl
jmp
mov
jo
mov
out
adc
clc
push
mov
test
sbb
add
push
cld
sbb
mov
push
ja
mov
mov
shrb
jne
and
push
and
dec
aam
insb
dec
xor
in
jge
insb
push
je
inc
loopne
addr16
nop
std
xor
dec
sbb
mov
ljmp
bound
in
hlt
fsubs
mov
inc
adc
loope
clc
jl,pt
jnp
jno
pop
and
hlt
adc
mov
orb
lods
sbb
jmp
adc
sub
pop
adc
adc
adc
mov
sub
lds
xchg
cmp
xor
mov
cli
mov
pop
notb
cs
call
push
mov
xor
adc
mov
aas
sbb
push
out
push
sti
in
jno
lods
dec
call
xor
div
pop
mov
adc
fidivrl
testl
inc
repz
shrb
and
and
add
comiss
push
fistps
sub
push
sbb
push
sti
sbb
pop
xor
add
fidivs
inc
fs
cmpl
xor
lret
lock
pop
ja
jb
out
jnp
add
add
and
push
inc
inc
iret
dec
repz
cmp
xor
es
repz
xor
sbb
sbb
outsl
mov
or
jae
pop
sub
sbb
add
adc
jno
inc
sbb
push
lods
fstpl
cld
xchg
sbb
xchg
mov
sarb
rolb
and
int
add
fs
dec
pop
add
push
cwtl
jmp
sub
dec
sahf
testb
or
xchg
push
pop
jne
nop
repz
add
popf
cmp
into
sub
and
mov
clc
jl
mov
sarl
jo
and
or
jb
je
xorl
shlb
mov
pushf
push
mov
std
xor
bound
mov
mov
mov
ds
sbb
or
call
sbb
rorb
movsl
xchg
cmovs
xor
movsb
hlt
add
xor
shlb
cld
nop
dec
sub
mov
insb
sbb
or
cmp
push
pop
push
mov
fnsave
aaa
clc
mov
into
cmp
push
sub
sarb
mov
xchg
call
fildl
clc
adc
movsb
stc
cmp
loopne
nop
jbe
or
or
or
outsl
arpl
and
jbe
mov
push
jb
inc
movsb
mov
push
mov
and
push
test
cmpb
lret
or
xorb
pop
push
sub
bound
or
xor
aaa
xchg
jne
daa
aaa
xor
cmp
adc
dec
jp
cld
lock
testb
call
and
in
jmp
mov
enter
xchg
xchg
shlb
enter
pop
andl
or
fildl
ret
pusha
movsw
pop
push
cs
cmpsl
mov
clc
dec
loope
ljmp
xorb
mov
push
fimuls
mov
or
movb
and
cmpsb
inc
ret
les
sbb
decl
call
xchg
cld
js
jle
popa
or
clc
jne
and
pop
pusha
gs
lds
clc
push
xor
lret
movsb
jg
cld
in
loop
cmp
pushf
pusha
daa
push
rclb
mov
cmp
sbb
dec
test
cmp
cmp
cmovno
testl
pop
nop
mov
gs
scas
push
jmp
cli
inc
pop
xchg
pop
test
push
push
adc
adc
push
xor
aam
xchg
sbb
jle
fadds
cld
dec
mov
or
pop
push
or
inc
iret
imul
jle
inc
mov
mov
je
insb
sbb
xor
daa
es
push
or
mov
cltd
sbb
enter
cltd
mov
inc
or
nop
push
adc
inc
xchg
nop
cli
nop
call
movb
aaa
movsb
pop
sub
sub
inc
ljmp
push
push
push
loopne
pop
cmpsl
int3
mov
dec
rorb
xor
daa
sub
pop
movb
mov
adc
jne
inc
xor
or
repz
jmp
inc
pop
lea
jmp
add
lock
or
movl
test
adc
adc
xor
and
test
lods
and
sbb
sub
add
sub
out
push
mov
mov
dec
xlat
mul
mov
aaa
daa
shlb
jmp
pop
sub
outsb
mov
testb
cmp
add
shlb
jl
jmp
push
mov
jne
pop
and
cmp
lea
xor
and
xchg
pop
sbb
mov
fwait
iret
enter
in
sahf
lock
xchg
iret
add
add
pop
xor
mov
mov
or
add
or
inc
lea
mov
jbe
add
shlb
and
aas
add
xor
add
pop
sbb
or
inc
dec
leave
push
inc
fsub
cmp
mov
or
sti
dec
mov
or
sar
jno,pt
xchg
fcomps
mov
mov
test
in
pop
mov
pushf
mov
orl
adc
stos
lods
lea
cmp
mov
mov
xor
and
jbe
push
xchg
add
dec
roll
pop
in
pushl
or
mov
sbbb
xor
ret
test
lds
xchg
fiadds
or
pop
ret
pop
imul
cmp
je
or
push
xchg
add
cld
loope
sbb
out
xor
mov
dec
adc
imul
add
push
stc
aam
cmp
shlb
xor
xorl
push
cld
pop
ret
mov
pop
jno
add
inc
and
and
lds
fdivrs
or
in
fwait
mov
pop
jmp
sub
ss
push
mov
mov
add
mov
or
dec
or
fcomp
loopne
mov
mov
cmp
mov
or
pop
in
sahf
sub
mov
mov
push
mov
nop
add
stos
adcb
les
ret
stc
mov
fistl
leave
dec
pop
loope
xor
in
loop
jecxz
in
in
dec
gs
jmp
nop
mov
mov
enter
das
mov
pop
pop
clc
repz
in
sbb
cltd
clc
add
push
jne
insl
jmp
or
in
addr16
ret
pop
push
sbb
xor
xor
sbb
jge
mov
mov
mov
stos
or
inc
xor
ret
rolb
cmp
adc
jne
push
jmp
fdivrl
in
bnd
les
pop
bound
inc
jmp
sbb
adc
stc
xor
and
and
or
inc
test
icebp
jnp
repnz
cld
rclb
mov
jns
or
aad
sbb
test
push
xlat
fs
movsb
and
jmp
scas
test
ljmp
mov
sbb
jge
jne
sub
subb
fwait
jne
test
mov
inc
and
jo
add
push
jns
jbe
lods
mov
add
pop
and
fmuls
mov
sarb
fdivs
aam
jns
aaa
loopne
loopne
fcompl
call
push
mov
fld
pop
movsb
mov
pop
subb
lret
fistpl
loopne
add
push
sti
or
mov
les
cld
cmp
add
xor
jp
addl
pop
sub
andb
mov
mov
ss
mov
pop
push
movsb
cli
mov
aam
and
movsb
je
mov
sbb
daa
dec
sub
or
insb
in
cld
inc
inc
in
adc
aad
sbb
sub
std
inc
jp
and
jle
sar
push
inc
xor
or
fcomp
pop
adc
or
or
popa
and
lahf
push
scas
push
or
mov
pop
push
sub
movsl
ret
fidivl
and
test
sub
je
or
test
adc
fsubr
push
xchg
dec
mov
lock
lods
cmpl
popa
push
pop
clc
push
push
adc
cld
pop
push
cli
add
cmp
js
add
mov
jae
sub
lea
inc
mov
shr
mov
cmp
fadds
rclb
xchg
mov
mov
dec
jp
jg
in
sub
addl
stos
aaa
nop
inc
jmp
cmp
push
push
ja
in
dec
insl
add
add
mov
stos
xchg
icebp
jg
jbe
mov
and
add
notl
les
push
cmp
enter
neg
mov
lcall
add
add
ret
push
jmp
and
subb
mov
xchg
mov
test
ljmp
push
test
je
push
idiv
or
adc
sub
aas
je
pop
mov
adc
cmp
mov
cmpsl
sbb
mov
cvtps2pd
fisttps
cltd
cs
inc
inc
jmp
cmpb
js
int
jne
mov
adc
outsl
jmp
shrb
filds
outsl
mov
sub
or
jge
pop
cmpb
loopne
inc
out
inc
inc
call
sbb
cmp
ffreep
dec
test
sub
inc
add
cmp
jge
cmp
pop
add
je
pop
push
cltd
mov
mov
lahf
test
jl
cmp
jg
sbb
push
outsb
push
dec
add
sbb
pop
incl
jno
ja
mov
cmpsb
mov
jnp
adc
stc
stos
ret
roll
xor
dec
stos
pop
or
dec
dec
push
lock
push
push
mov
xor
lahf
sbb
or
mov
jne
mov
pop
aas
jmp
mov
dec
testl
jmp
mov
cmp
jne
mov
cmp
imul
sbb
dec
cmp
xor
dec
mov
out
mov
pop
popa
cmp
push
imul
je
mov
call
add
mov
sbb
or
vmread
jne,pt
sbb
add
pop
stos
adcl
add
or
test
imul
jle
icebp
add
test
mov
inc
jg
xchg
add
pop
jne
cltd
mov
fnstcw
jle
rolb
test
nopl
dec
pop
test
je
test
and
jmp
arpl
std
or
or
add
add
adc
lahf
insl
cld
addr16
or
jne
or
inc
dec
xchg
sbb
inc
dec
je
cmp
xor
lret
and
je
inc
cmp
add
cvtdq2ps
imul
push
adc
adc
or
jge
aas
fldt
test
add
fidivrs
pop
jo
cld
test
je
test
mov
adc
sbb
inc
and
mov
adc
rorl
or
jb
pop
jmp
aas
and
sub
into
in
lock
or
xlat
xor
add
and
push
sub
fadd
add
xchg
insb
mov
push
scas
inc
neg
dec
ffreep
dec
mov
std
adc
pop
cmp
rclb
mov
adc
jmp
lea
push
test
outsb
bound
inc
cmp
sarl
nop
add
inc
and
in
sbb
je
int
jns
repnz
or
std
jmp
cld
inc
cmpsb
push
mov
inc
xchg
fs
mov
fdivr
repz
loope
xor
jbe
mov
aam
jno
adc
inc
sbb
push
aas
je
push
push
sub
enter
mov
jl
outsl
jmp
mov
inc
pop
jle
stos
sub
push
and
inc
cmp
mov
adc
dec
subl
and
je
jecxz
dec
out
insb
xor
fst
dec
and
leave
scas
sub
jae
xchg
or
jmp
and
and
add
ljmp
mov
loope
xor
cld
out
cmp
rorl
jbe
add
jb
bound
loop
stc
or
add
scas
roll
lret
test
add
das
test
lcall
push
int3
push
pusha
or
mov
rcrl
mov
mov
or
mov
lods
adc
gs
lods
popf
lea
dec
add
imul
inc
inc
inc
inc
jle
lods
sbb
sbb
adc
fistps
push
hlt
in
push
mov
mov
in
call
imul
mov
add
cmp
lock
adc
cmp
jmp
push
push
pop
jo
insb
shlb
pop
adc
divl
inc
bound
adc
lea
rorl
jl
cld
jmp
cmp
cld
out
shlb
mov
rorl
mov
repnz
pop
nop
call
push
in
out
lock
jne
add
dec
lods
mov
adc
inc
out
add
repnz
fistl
nop
dec
int3
repnz
jno
push
pop
add
jbe
faddl
ja
test
dec
shll
lods
mov
imul
cmpsb
imul
cmpsb
imul
fimull
call
lods
bound
das
lsl
pusha
mov
pop
pop
daa
jno
adc
outsl
pop
mov
jnp
sbb
std
inc
icebp
add
xor
mov
sub
clc
adc
inc
sub
dec
movsb
rol
shll
push
icebp
xor
add
popa
push
ja
add
push
sbb
fadds
mov
pop
xor
in
orl
adc
insb
inc
es
std
cld
jmp
jmp
dec
aas
push
test
inc
xor
loopne
sbb
cmp
icebp
mov
inc
ret
sub
aaa
jp
sub
mov
enter
push
add
lret
xor
mov
je
rep
je
inc
dec
in
out
sbb
mov
lahf
pusha
cltd
test
add
or
cmp
and
adc
cmp
jne
sbb
mov
sub
jnp
lret
pop
or
xor
sbb
sti
mov
rcl
inc
lods
incl
imul
inc
mov
inc
pusha
loopne
add
int
mov
rcll
mov
mov
orb
push
dec
adc
decl
rolb
fildll
lea
jle
movzbl
push
cmp
push
outsl
lea
or
inc
push
jle
testl
shrb
aaa
xchg
sub
mov
jne
push
xor
xchg
push
orl
inc
dec
arpl
icebp
fwait
lea
pusha
ret
imul
iret
cmp
ret
jne
xor
sbb
and
mov
and
cltd
push
cmp
mov
test
push
sbb
inc
aas
xchg
sbbb
xlat
cmp
fwait
cli
push
cli
inc
dec
lds
adc
xor
sbb
mov
jle
xor
push
shrb
cld
sbb
mov
lahf
ret
sbbl
mov
in
loopne
and
jle
cmp
popa
cmp
je
daa
push
ficomps
lods
or
adc
fwait
xlat
mov
xor
ret
cmp
cld
add
or
lock
jle
cmp
pop
pop
pushf
jne
pop
or
imul
sbb
popa
lods
push
dec
adc
aad
jmp
push
gs
ret
fstl
push
cmovno
test
mov
and
aad
push
push
push
xchg
or
adc
push
add
dec
iret
adc
shlb
push
inc
push
jne
sbb
ljmp
jnp
adc
push
mov
jmp
loopne
push
pop
mov
mov
aas
clc
mov
pop
lret
and
dec
add
jecxz
inc
add
sbb
in
pop
inc
daa
loope
aas
adc
incl
jg
dec
lock
pop
push
shl
shr
dec
xor
mov
stos
pop
mov
inc
jmp
inc
adc
mov
push
dec
pop
shl
dec
shll
and
adc
and
jl
cmp
stos
mov
inc
ljmp
fisttpl
sub
lcall
jnp
or
icebp
rorl
div
in
or
push
mov
jecxz
push
adc
scas
add
incl
sti
add
push
and
or
les
je
std
or
push
or
shr
mov
cmp
add
pop
std
sbbb
test
out
adc
faddl
aam
xchg
pop
arpl
outsb
or
cld
xchg
clc
mov
pop
xchg
in
adc
arpl
jno
imul
xor
pop
inc
cmp
movsl
or
clc
and
adc
pop
cmc
pop
pop
pop
add
cld
ret
lock
lea
mov
fsubrs
and
cmp
push
adc
inc
mov
bound
mov
jmp
fucomip
mov
push
add
ja
sbb
or
xor
or
cmp
jg
ss
loop
ljmp
dec
add
or
lcall
inc
mov
jmp
mov
push
outsl
pop
add
add
daa
jg
and
add
jge
in
rcr
shlb
pop
les
arpl
ret
push
adc
mov
push
adc
or
xchg
sub
pop
xchg
popf
xchg
jno
daa
and
iret
test
ljmp
pop
dec
sbb
daa
adc
mul
or
mov
insl
adc
repnz
popa
mull
sub
dec
loopne
int3
and
enter
add
and
jle
add
sbb
ljmp
add
sar
jmp
cmp
jb
idivb
je
xor
mov
jae
std
mov
xchg
icebp
loopne
in
sub
fsubr
sbb
adcl
and
mov
hlt
mov
mov
inc
push
adc
add
stos
jo
jg
sti
orl
jmp
or
xlat
subl
jmp
into
xor
jo
jne
jecxz
dec
sub
out
adc
stos
sub
cmp
inc
cmc
aaa
xor
xorl
icebp
loopne
xchg
dec
push
adcb
jl
adc
shlb
dec
add
cli
inc
jae
ss
dec
je
mov
xchg
pop
test
test
popa
pusha
jbe
adc
mov
lahf
pushf
and
fs
push
nop
lea
test
jne
cmp
pop
jne
cmpl
or
lds
ret
and
sti
xor
adc
jbe
cmpsl
and
cmpsl
sub
and
dec
dec
shll
push
pushf
icebp
jae
mov
and
inc
out
add
or
outsb
cwtl
add
arpl
add
jmp
imul
mov
shl
fidivl
pusha
pusha
pop
or
popa
push
dec
inc
adcl
or
jmp
cmp
and
popa
sbb
shlb
add
ds
cmp
and
sbb
add
in
rorl
push
bound
push
cmp
jp
jb
cmp
icebp
sti
lods
flds
mov
sbb
push
std
add
in
in
jge
mov
mov
mov
les
push
and
add
and
fmuls
test
insl
mov
inc
inc
ds
ljmp
xchg
jns
mov
or
cli
jmp
sti
xchg
hlt
lret
push
rep
inc
add
mov
jb
sbb
mov
mov
lock
dec
dec
dec
sbb
push
bound
mov
push
sub
and
sub
xor
mov
enter
ret
iret
or
add
inc
push
mov
add
out
mov
and
icebp
pop
ret
mov
ret
add
shrb
rcrb
or
sbb
pop
push
sbb
add
sbb
and
push
inc
inc
sahf
or
adc
mov
mov
or
outsb
scas
mov
mov
imul
pop
and
stc
inc
mov
cld
push
cmp
pushf
cmp
or
and
jb
mov
das
sub
sbb
cmp
inc
jae
pop
push
leave
mov
sub
pop
ja
mov
sbb
push
jae
scas
outsl
out
cmp
ret
outsb
pop
lock
icebp
inc
jmp
mov
movsb
inc
push
sarl
adc
fstl
lods
popa
sahf
rcrb
mov
adc
dec
shrl
push
test
sbb
push
out
mov
or
cwtl
inc
fwait
add
cltd
adc
or
push
or
jno
xor
or
shr
inc
leave
pushf
call
adc
shr
rcr
shr
rcr
or
jne
div
mov
mull
in
pop
stos
inc
inc
push
out
shll
cmp
xchg
pop
icebp
adc
mov
push
jbe
dec
sub
inc
int3
fists
cwtl
and
mov
scas
mov
jne
push
fdivl
push
sub
imul
or
imul
adc
or
fadds
outsb
lock
push
push
push
xor
mov
dec
mov
push
sbb
mov
mov
sbb
sbb
xor
jle
mov
xor
adc
xor
lcall
dec
fcomi
sbb
nop
dec
inc
sbb
addb
dec
andl
jecxz
inc
xchg
inc
jge,pn
call
xlat
cltd
je
test
push
jno
cmp
jne
inc
inc
dec
out
stos
std
call
jne
mov
mov
adc
inc
lret
cmp
xchg
dec
call
pop
clc
mov
cmpsl
je
sbb
mov
aad
mov
dec
adc
cmc
mov
adc
add
cli
sbb
pop
cmc
ljmp
adc
fistpll
mov
mov
cmp
jne
sbb
out
jne
or
rolb
cmp
dec
mov
outsl
call
push
insb
loopne
add
lea
cwtl
jle
cmp
lahf
aas
sti
add
jl
jg
lods
lock
and
lods
sub
cmp
pop
jge
cmp
or
push
fisttpll
pop
and
std
push
sbb
adc
jg
clc
or
mov
arpl
xorb
or
jp
xlat
mov
pop
jmp
sbb
add
movsl
adc
or
push
mov
push
pushl
loopne
add
jecxz
cmp
pop
pop
addr16
pop
add
mov
bound
mov
loopne
jecxz
inc
leavew
imulb
rcl
dec
ljmp
test
sub
fldcw
scas
xlat
cmp
jge
fnstsw
push
xchg
xor
or
enter
mov
andb
mov
inc
inc
in
in
and
addr16
popa
add
jmp
pop
adc
jae
inc
es
ja
xchg
mov
negl
out
rorl
dec
push
ret
mov
lea
iret
sbb
push
leave
pop
cmp
repnz
inc
test
ficoms
xchg
cmp
test
stos
mov
xchg
das
jmp
pop
or
ja
adc
xor
shufps
and
orl
xchg
push
popa
or
push
jb
movsl
daa
and
sbb
ret
add
fs
add
rcr
add
test
lcall
cmp
dec
gs
sarl
shl
andb
add
inc
jo
adc
stc
pop
subb
add
push
inc
faddl
sub
dec
iret
jo
aad
push
scas
sub
lea
lcall
scas
and
mov
aam
ror
dec
adc
sti
out
je
cmp
jb
jge
adc
mov
sbb
and
lods
cld
push
jns
sbb
inc
adc
insb
fsubs
aas
inc
ja
cmp
sbb
add
test
dec
inc
or
hlt
roll
pop
test
hlt
xchg
test
xlat
xor
sub
sub
add
rcr
sti
inc
jbe
push
orl
jmp
sbb
adc
cs
scas
mov
adcl
push
jp
sub
push
dec
jl
pop
xor
ret
adc
push
xor
or
out
lds
or
pop
adc
add
adc
std
mov
mov
inc
test
or
adc
push
jns
repz
lret
inc
mov
jmp
shl
or
adc
xchg
push
dec
ret
push
gs
or
aaa
cmp
jae
shr
sbb
fimull
cmp
jb
pop
pop
mov
lret
add
imul
add
mov
push
add
and
pop
inc
arpl
jae
lods
sti
test
aas
hlt
push
mov
jmp
sub
xchg
jne
push
add
jne
and
sbb
jl
xor
adc
scas
sub
jbe
test
push
dec
sub
and
and
neg
sbb
stos
sbb
add
mov
inc
push
add
scas
clc
dec
add
cmp
mov
cmc
add
in
xchg
out
mov
out
sbb
mov
mov
insl
mov
inc
push
dec
add
xor
push
not
data16
or
test
xorl
es
ret
jne
clc
cltd
repnz
or
mov
cmpsb
mov
test
xchg
cmp
sbb
cld
mov
dec
dec
not
mov
sbb
imul
or
adc
arpl
push
jne
or
loope
test
fcoml
sbb
inc
add
sub
sar
fwait
inc
xchg
pop
ja
xorl
or
scas
icebp
loope
mov
push
mov
jne
movsb
add
pop
rcrb
ffreep
testb
push
test
pop
and
inc
jmp
and
fwait
fwait
les
sar
lds
stos
jbe
push
cmp
repz
xchg
dec
jne
or
cltd
adc
cmp
loope
les
test
push
shlb
pop
fisttpll
rorl
push
mull
repnz
mov
pop
dec
arpl
std
jns
dec
xchg
or
or
lret
call
pop
jl
push
xor
pop
lds
push
push
sub
pop
outsb
fisubrs
sub
adc
in
inc
clc
adc
fisubs
or
icebp
push
sbb
mov
push
push
jno
jecxz
sbb
mov
hlt
xchg
sar
test
push
cld
rcl
stc
or
pushf
jge
cmp
push
jl
inc
jge
mov
push
clc
call
push
push
lret
push
push
mov
cmp
in
in
sbb
add
lret
data16
mov
xor
negb
xchg
mov
pop
dec
enter
lds
sub
pop
adc
xchg
cmp
push
add
data16
je
mov
xchg
fisttps
and
rcrb
pop
xor
sar
adc
fisttpll
test
and
pop
sbbb
or
je
mov
push
adc
pop
xchg
or
push
je
jge
clc
loopne
sarl
clc
inc
push
mov
dec
movsb
hlt
or
dec
add
adc
mov
in
xor
clc
pusha
adc
mov
lret
sar
loope
push
movsb
mov
inc
jmp
mov
js
testb
xchg
rolb
dec
call
dec
or
push
mov
cmp
pop
out
mov
cmp
or
shll
movsb
fs
sbb
dec
dec
or
and
push
mov
je
test
push
dec
lock
jnp
rclb
cmp
jl
and
js
push
pop
pop
je
call
and
call
testb
pop
in
xor
imul
inc
inc
dec
pop
xchg
mul
xchg
add
add
pop
andb
out
sub
lret
cmp
add
pop
mov
fs
adc
in
nop
xchg
jge
cld
or
add
and
leave
and
addb
loopne
adc
mov
idivb
lea
repz
add
cmp
mov
clc
inc
inc
shr
jmp
mov
inc
lret
lock
jle
ffreep
int3
into
add
insb
imul
mov
xchg
xchg
and
or
sub
cmp
jno
and
ss
cmpb
jne
inc
inc
dec
sub
rcll
cmp
js
cmp
sbb
int
popa
popa
xor
push
xor
clc
addr16
lea
negl
out
sub
xor
cs
add
xlat
push
insb
and
sarl
cmp
jne
cmp
shrb
xchg
add
clc
shlb
inc
adc
fstpt
clc
inc
mov
jae
sub
leave
mov
dec
test
inc
aam
clc
jns
andl
jmp
inc
int3
add
mov
xor
inc
lea
cltd
andl
push
fadds
roll
sub
data16
or
out
loop
or
add
lcall
in
sti
sti
call
or
stc
call
sub
pop
mov
rcll
add
je
mov
dec
sub
pop
pusha
cmp
je
movswl
shr
ror
movsl
clc
fchs
imul
cmp
mov
jno
jae
and
ja
test
mov
add
push
xchg
rcr
mov
inc
dec
mov
or
sbb
add
inc
dec
ljmp
fldt
inc
lods
pop
mov
fidivrl
movsb
lods
sub
cmp
je
mov
fisubrl
xor
into
repnz
sbb
add
popa
lahf
sub
push
test
data16
inc
mov
and
mov
adc
cmp
sti
dec
jecxz
inc
xor
je
das
and
icebp
dec
dec
cld
pop
xchg
shll
fwait
ja
std
dec
faddl
daa
cmp
add
js
jge
and
add
inc
or
inc
pop
sub
test
jmp
das
fstps
aas
fisttpl
inc
mov
jmp
push
mov
or
or
or
psubq
xor
jmp
jp
and
imul
sub
pop
fiaddl
and
repnz
or
shl
jmp
rdpmc
shlb
je
jg
jl
hlt
dec
aas
push
jae
psrld
insl
fcmovbe
pop
rorb
or
jne
and
inc
icebp
xchg
in
or
aaa
pop
add
pop
pop
testl
addr16
ret
cmpsl
cmpsb
mov
mov
push
adc
cmp
mov
cli
aam
outsb
mov
std
or
shrl
cmp
into
jle
add
in
lods
std
repnz
mov
sub
add
or
xor
pop
add
cmpb
fnstsw
test
pop
xor
test
jle
movsl
hlt
es
cld
test
es
mov
bound
pop
adc
mull
inc
int
or
and
loopne
jne
add
hlt
xor
or
and
lret
xor
cltd
into
mov
sbb
pop
jl
inc
push
in
add
adc
adc
lahf
jge
inc
in
idivb
clc
mov
movsb
mov
mov
rcl
gs
cs
dec
mov
mov
and
mov
sub
ret
xorb
orb
stc
jle
mov
fidivrs
cmp
cltd
cmp
mov
cmp
hlt
xchg
ss
aas
je
cmp
sub
xchg
decl
js
mov
mov
add
push
push
icebp
fwait
popa
or
and
loopne
and
sbbl
ret
incl
les
push
ret
push
jle
shlb
cli
ret
sbb
mov
pop
inc
jg
cmp
stc
dec
sar
fidivl
es
push
movsbl
push
inc
mov
insl
aas
ret
dec
loop
mov
addl
add
or
inc
push
cld
cmp
cli
ret
cmp
les
mov
push
mov
dec
cmp
xchg
dec
popl
or
test
rorb
add
xor
push
pop
dec
mov
out
aaa
sub
mov
adc
imul
mov
xchg
push
and
imul
call
andl
das
cmp
jl
and
repz
cmp
adc
imul
clc
inc
rorb
gs
std
xchg
dec
jg
je
or
inc
je
dec
je
jecxz
jge
jne
inc
jmp
cmpb
jne
or
xor
inc
add
imul
in
jnp
out
jmp
inc
bnd
insl
push
xchg
lahf
insb
ja
or
jmp
jbe
sti
jmp
decb
call
cmpb
dec
inc
add
roll
je
jl
push
jmp
adc
aam
sub
sti
gs
scas
mull
inc
sub
pop
das
mov
xchg
xor
outsb
insl
cld
sar
les
arpl
sbb
or
fists
sbb
sbb
jmp
or
xchg
loop
cli
xor
outsl
jg
jns
adc
fs
add
fadds
out
cmp
imul
pop
xor
dec
cmp
pop
pushf
adc
fs
das
in
mov
int3
cmp
sub
sub
cmp
add
lea
mov
popf
adc
cmp
cmp
adc
xor
jno
xor
sub
add
adc
lret
into
pop
cmp
and
sub
push
xlat
out
pop
xor
and
fisttpl
inc
mov
mov
push
rcr
mov
inc
mov
inc
sbb
adc
sti
gs
mov
inc
mov
and
gs
pop
jb
outsb
cmp
or
push
push
adc
cmpxchg8b
leave
and
adc
das
or
pop
mov
sub
dec
adc
inc
fs
out
loope
sbb
nop
and
push
imul
imul
pop
xor
dec
ljmp
decb
mov
faddl
je
ja
xchg
ret
mov
out
and
or
aas
push
jmp
xchg
cltd
mov
cmp
ret
nop
mov
cld
cmpb
popf
cmpsl
xchg
bound
cmp
andb
mov
hlt
icebp
add
adc
imul
inc
mov
xchg
xor
je
addps
jle
fildll
outsl
pop
mov
out
cmpsl
orb
outsl
xchg
subb
iret
pop
xor
push
push
orb
pushf
cmp
les
icebp
inc
fistpll
mov
or
and
mov
mov
data16
xchg
cmp
cmp
sahf
mov
mov
pop
ss
cmp
jae
mov
jmp
ret
ljmp
lock
ja
gs
sub
inc
mov
mov
incl
pop
mov
sbb
call
fimull
rorb
or
shr
xor
add
add
mov
adc
ror
push
sub
and
jb
adc
mov
ljmp
fwait
enter
call
jle
stc
add
lret
test
je
pushf
jne
or
or
inc
enter
or
cmpsb
lea
pushl
cmpsl
ret
pop
ret
inc
cmpsl
pop
push
pop
ret
ja
add
cmp
jmp
rorl
punpckhbw
jae
jns
mov
add
rclb
les
lahf
aam
aaa
andb
jmp
or
inc
fmuls
pushf
xchg
movsb
cmp
add
push
fnstsw
rolb
out
add
jecxz
adc
fidivrs
dec
sub
aas
or
jo
test
daa
fmuls
in
test
pushf
push
mov
add
and
pop
fadds
das
mov
adc
lahf
add
mov
pminsw
sbb
fidivs
mov
cltd
add
adc
mov
dec
leave
add
mov
mov
add
sbb
cmp
dec
fmull
roll
lods
xchg
sbb
out
neg
mov
mov
add
jo
cmp
lahf
or
add
aas
lea
shl
jmp
fwait
xchg
adc
imul
aas
adc
mov
jl
sarb
cmp
pop
inc
xchg
sub
push
ficomps
popf
sub
aam
fcomip
push
cltd
or
dec
add
adc
repz
mov
pop
or
inc
jmp
add
inc
jns
rcrl
call
push
xchg
fdivl
dec
daa
sbb
or
rorb
enter
in
jl
pop
push
push
jne
adc
pop
rolb
jne
mov
mov
test
lock
lea
jg
xor
movsb
es
das
negb
je
mov
adc
sbb
js
xorb
add
ret
sbb
push
jle
cs
or
push
imul
out
out
pop
incb
loope
sbb
add
or
and
ret
push
pop
jmp
loope
lcall
popf
jbe
add
lods
daa
inc
push
xor
add
test
test
or
lock
inc
jmp
jmp
xor
pop
and
cld
xor
fucom
mov
push
mov
push
or
xchg
mov
mov
ja
xor
ljmp
push
add
fimull
or
ret
leave
xor
es
inc
loope
xchg
cmpw
xchg
dec
cmp
sar
sub
sbb
mov
inc
imul
inc
fstl
mov
mov
leave
inc
sbb
push
push
add
mov
popf
in
xor
nop
adc
mov
arpl
sub
inc
std
mov
out
cmp
jl
ret
pop
or
shll
in
subl
sbb
out
or
jmp
pop
push
cmp
xor
out
ss
jmp
and
or
insl
das
les
mov
ds
sbb
lea
cmp
ljmp
insl
mov
jmp
repnz
and
add
mov
push
dec
das
imul
add
cmp
add
push
rorb
sub
or
jb
bound
mov
ja
push
jae
mov
dec
imul
sub
jo
adc
ret
push
or
add
andl
sbb
or
push
mov
push
out
add
cmp
sti
inc
aas
jnp
mov
shll
sub
cmp
sti
pusha
jb
fwait
adc
call
mov
pop
inc
aas
std
pop
pop
add
sub
shr
iret
imul
add
mov
inc
inc
ficoms
clc
add
push
dec
lds
cld
shrb
scas
test
lea
mov
pop
loopne
jae
insl
clc
mov
test
call
inc
repz
cli
add
cmp
jbe
push
pop
mov
add
std
add
dec
or
pop
and
mov
jmp
dec
add
inc
sar
shll
pop
mov
sub
and
and
lcall
push
inc
push
pop
add
mov
inc
add
push
mov
fwait
std
pop
add
dec
hlt
mov
push
or
and
push
or
lea
pop
hlt
cmpb
clc
and
sti
add
ja
sbb
dec
pop
cmp
jbe
sub
xchg
and
cmp
je
lahf
mov
cs
pop
jnp
inc
cmp
mov
das
clc
out
not
and
add
pop
lea
popf
mov
xchg
cmp
push
lret
in
pop
mov
add
dec
jbe
or
mov
pop
addr16
mov
pop
roll
daa
pop
bound
inc
jns
pop
outsl
or
sbb
or
mov
mov
shll
dec
lsl
ljmp
lods
popa
testb
jmp
dec
adc
dec
stos
loopne
mov
mov
or
setge
push
push
mov
add
jae
lahf
mov
xor
cli
fidivs
int
dec
mov
add
movsl
fdecstp
packssdw
dec
push
push
call
aas
xorb
or
adc
dec
push
decb
adc
dec
adc
add
and
jns
push
ss
mov
adc
cmp
xor
mov
out
test
push
das
ljmp
in
push
lea
push
push
inc
pop
fdivp
into
js
lea
jbe
insl
or
and
adc
movsl
mov
cmp
adc
outsl
cmpsl
rol
lret
cmp
fwait
xor
pop
and
inc
sar
dec
cmp
jge
and
xchg
jne
mov
test
mov
adc
not
call
addb
into
jo
std
or
inc
mov
and
decb
iret
jns
insl
jmp
ret
adc
pop
cld
xor
push
jne
mov
cmp
dec
adc
add
pop
dec
jae
cmpl
cmp
cmp
outsb
jmp
es
ss
out
mov
filds
testl
filds
clc
adc
cmp
pop
inc
ret
shrb
dec
sub
or
inc
jg
mov
adc
out
divb
mov
sarb
inc
or
jl
xchg
test
cmp
mov
je
mov
in
sub
dec
scas
into
jne
int
in
pushl
and
pop
test
jl
shl
inc
jmp
mov
stc
xchg
sub
icebp
pop
mov
add
cmp
jle
sahf
lcall
add
dec
mov
cmp
sub
iret
rolb
cmp
negb
mov
decb
jne
repnz
mov
sbb
xchg
dec
sub
add
or
push
push
mov
or
inc
loopne
roll
jns
jb,pt
sahf
ljmp
hlt
mov
fstl
icebp
mov
mov
or
mov
fs
decb
jge
or
or
mov
lds
sti
into
shr
or
adc
jmp
subl
dec
loopne
push
jnp
bound
add
mov
jmp
inc
in
or
add
data16
insl
add
inc
mov
xor
mov
inc
lea
jne,pt
cmp
fdivr
xchg
cmp
fisttpl
cmp
fbld
mov
lea
push
ficoms
dec
mov
xor
xor
xor
xor
mov
xor
nop
jnp
xor
popa
lods
pop
sub
jge
xor
adc
mov
add
and
dec
cmp
cmp
cmp
jl
dec
in
and
incl
mov
adc
mov
inc
lcall
loopne
ret
call
imul
adc
nop
add
add
lock
sti
or
out
jns
add
adc
mov
xchg
add
cli
ja
call
inc
out
dec
in
mov
psubsb
cmp
lock
inc
pop
movl
lock
lock
neg
jbe
jl
or
clc
cld
pop
dec
mov
dec
or
divl
adc
inc
fs
inc
test
cld
mov
mov
pop
test
hlt
mov
jne
or
mov
xor
not
and
ret
or
scas
imul
xor
pop
sub
lahf
stos
push
jg
shr
or
jge
pop
dec
mov
mov
pop
cmp
ret
push
aam
fisttps
fldcw
popl
xor
loope
sbb
popf
pop
mov
sbbl
or
pop
cmpsl
clc
lea
adcb
das
inc
jnp
push
or
nop
dec
or
adc
jg
push
outsl
jne
sub
add
cld
and
loop
stos
sar
dec
mov
shrl
pop
dec
hlt
lea
subl
pop
dec
pop
xchg
gs
pop
dec
pop
pop
pop
out
ja
add
xchg
adc
add
and
xchg
inc
iret
lret
jno
test
fisubs
jmp
inc
dec
or
sub
test
in
push
cmpsb
push
inc
xor
inc
xor
cmp
cmp
add
add
fimull
jge
aas
mov
inc
dec
insl
pop
xor
or
shlb
sub
sub
jbe
adc
xchg
xor
add
pop
movsl
dec
jecxz
or
arpl
into
je
repz
pusha
cwtl
fs
dec
push
in
mov
xchg
in
bnd
ja
push
cmp
ss
fstpt
xor
push
mov
dec
add
xchg
xchg
rcrb
push
shlb
ret
xor
into
bswap
rclb
nop
inc
cmovne
xchg
sbb
or
xor
mov
push
jmp
push
ret
push
xchg
or
sub
scas
filds
aad
popf
loope
xchg
mov
lea
xor
mov
mov
lock
jecxz
lds
ror
sbb
notb
lods
out
out
mov
mov
into
lea
xchg
lds
mov
inc
inc
in
mov
fbld
setge
dec
and
dec
inc
mov
dec
cmpl
push
dec
or
push
add
std
xchg
sbb
inc
add
movl
dec
outsb
in
fadd
adc
add
daa
jnp
dec
rol
out
xor
push
je
push
sbb
mov
popa
frstor
mov
inc
leave
andb
test
push
mov
mov
push
test
sbbl
xor
xor
or
or
push
cmpl
and
cmc
test
test
loopne
sti
iret
lock
lods
aas
jb
cmp
cwtl
add
out
xor
ud0
or
add
int3
pop
mov
or
testl
sub
test
jge
nop
lock
inc
lahf
mov
je
cmpl
pop
mov
and
or
mov
xchg
cli
out
punpcklwd
or
lock
lods
pop
cmp
or
or
push
adc
inc
loopne
ljmp
add
icebp
lcall
cmp
je
jmp
test
jne
lods
mov
add
out
and
data16
xchg
mov
dec
mov
loope
sub
sbb
jne
loope
or
aaa
add
sub
ret
scas
stc
or
enter
lock
cmpsl
adc
adc
inc
add
jnp
sub
pop
incl
xchg
xchg
nop
ret
dec
add
mov
data16
sahf
push
xchg
mov
rcrl
mov
repz
sbb
clc
adc
fadd
or
ret
fbstp
mov
cli
mov
xchg
cmp
jbe
push
dec
dec
imul
jne
sub
jno
inc
pusha
outsl
jb
or
daa
dec
jle
test
or
sbb
adc
cld
popf
xchg
ja
movsb
pop
jo
mov
mov
cmp
adc
or
pop
test
sbb
shlb
jg
sbb
or
push
aas
fstpt
xlat
mov
repz
rol
std
testl
ja
cmp
push
lds
aam
in
je
ja
inc
push
fiadds
lods
push
cmpsl
jne
add
mov
pop
mov
cmc
xorl
jo
mov
jle
lds
lahf
outsb
sbb
push
sbb
mov
stos
ss
inc
cmp
add
aad
mov
pop
addr16
addl
add
outsl
jmp
sbb
shlb
inc
or
pop
loopne
jo
daa
or
add
mov
js
xchg
xor
jecxz
in
push
leave
sub
xchg
jmp
fldpi
sub
lds
shrl
push
sbb
add
pop
setne
adc
lea
mov
sti
mov
scas
and
dec
jae
add
sub
ret
shl
xor
sub
seto
cli
push
jl
divl
hlt
pushl
cmp
jae
mov
test
jne
jbe
add
push
mov
inc
inc
jmp
mov
add
inc
jmp
or
push
imul
add
test
lea
divl
cmc
push
out
pop
lahf
inc
jae
ss
mov
add
in
inc
inc
lea
arpl
sub
das
pop
fcompl
test
jno
mov
sub
dec
ret
sub
jb
fucomip
scas
lcall
jmp
outsl
push
ret
pop
cmp
mov
imul
ret
bound
sub
dec
cmp
add
call
cmpb
clc
or
sbb
das
loope
jl
sbb
adc
enter
cmp
shr
jae
movsl
sbb
iret
lock
push
mov
sbb
or
fistps
mov
mov
cmp
ja
cmp
jbe
push
cld
jmp
jmp
xor
push
lret
inc
cmpb
cmp
mov
inc
dec
inc
xchg
fldl
sub
shl
mov
test
or
test
dec
out
mov
add
xchg
aad
sti
jno
cmp
xorl
repz
mov
fs
lea
push
add
inc
xor
je
bound
sti
cmp
push
push
sub
imul
sbb
inc
mov
push
pop
mov
or
call
mov
mov
andb
je
push
scas
stos
lea
adc
and
out
imul
xor
xor
test
hlt
sbb
jbe
andw
popf
dec
das
or
loop
fsubs
jns
or
add
arpl
ret
nop
xchg
pop
testb
cs
pop
aam
fs
pop
stos
ret
add
mov
lahf
cmp
aaa
inc
loop
test
xor
popa
sbb
push
push
sarl
adc
insl
fwait
push
pop
dec
push
and
test
xor
push
or
pusha
sub
xor
dec
sbb
push
cmp
mov
sbb
mov
cmp
addb
adc
lods
sti
or
jne
push
data16
icebp
sbb
fidivrl
fnstenv
inc
cmp
jmp
addr16
jl
jno
je
adc
shll
ja
push
mov
xrelease
adc
jns
and
pop
add
jne
sbb
or
xchg
dec
insb
rorb
cmpb
xorb
clc
dec
mov
inc
stc
sar
repz
jmp
mov
and
faddp
ja
pop
push
or
jno
jle
aaa
and
add
dec
loopne
fs
push
dec
into
pop
aam
subl
or
xchg
pop
roll
adc
mov
mov
fldenv
sbb
sarl
pusha
cwtl
sahf
or
into
add
or
or
xchg
pop
mov
inc
cmp
jecxz
sar
scas
xchg
xchg
addr16
push
jg
pusha
sub
je
sbb
sbb
scas
dec
cltd
lods
push
fimull
push
roll
or
jmp
sub
adc
mov
adc
jmp
mov
into
sbbb
hlt
push
cmpb
enter
fisubs
icebp
lret
bound
ud2
std
jmp
inc
daa
jnp
or
pusha
loopne
ret
jnp,pn
jp
fs
scas
sub
pop
into
in
sub
je
rclb
addl
movsb
ret
sub
stos
jge
les
inc
xchg
adc
cmp
fdivs
mov
mov
pop
add
sbb
or
sbb
dec
adc
mov
push
xchg
aad
jle
mov
aas
sti
mov
cmp
je
testb
inc
pop
ljmp
lods
cmp
jl
jmp
mov
jmp
lea
out
leave
or
pop
sub
cmp
aad
lret
loopne
cmc
fiadds
add
imul
or
sbb
movl
hlt
push
fwait
or
pusha
shl
dec
cmp
mov
push
add
loope
sbb
fsubrl
test
bound
push
inc
add
mov
inc
and
dec
add
loopne
mov
sbb
push
sub
sahf
pushf
sbb
xor
push
add
dec
mov
insb
enter
insl
or
gs
cltd
add
popf
inc
leave
xchg
and
out
mov
call
push
scas
or
or
jmp
and
mov
and
xchg
xchg
mov
xchg
cwtl
negl
mov
mov
cmp
scas
mov
or
daa
xchg
xor
mov
dec
pop
jae
inc
jg
cmc
jno
push
ficompl
pop
or
inc
mov
jae
push
test
or
inc
or
add
ljmp
call
mov
xor
sti
daa
inc
jne
cmpb
add
js
pop
iret
add
add
test
jle
jb
inc
push
mov
lea
mov
push
sub
xor
fstpl
xor
cmp
in
push
cmpl
test
push
movsl
sbb
cltd
add
mov
jb
pop
fstpl
adc
pop
fwait
test
lds
push
xchg
icebp
mov
adc
or
sbb
fcoms
out
aaa
lods
fdivr
dec
add
dec
or
sub
mov
adc
fisttps
rol
sub
push
sub
ss
lock
jo
lock
repz
sub
jno
add
in
xchg
aaa
ss
out
jl
leave
inc
pop
mov
pop
inc
jb
xor
xorb
pop
mov
pop
cmp
imul
add
adcb
cwtl
ja
fstps
cmp
addr16
hlt
mov
xor
jbe
leave
or
or
cmpsl
pop
pushf
addr16
loope
cmp
pop
je
cmp
loop
repz
pop
addb
add
pop
gs
sbb
ja
fldl
fdivp
out
enter
fdivl
fmull
insl
lock
pop
call
fnstsw
sahf
jbe
in
lcall
jl
fcmovbe
rorb
inc
js
outsb
dec
aaa
rol
add
add
mov
sub
mov
ljmp
jno
mov
add
out
rorl
or
sub
into
mov
cmp
jbe
shrd
or
hlt
and
mov
or
inc
aas
jl
in
sbb
xor
adc
dec
mov
inc
loopne
sbb
negb
loop
aad
jb
add
dec
jb
sbb
sub
or
pop
test
push
and
and
jns
adc
int3
inc
adc
je
push
int
arpl
fs
mov
adc
cmp
push
fistpll
sub
adcl
xor
or
cmp
fldl
and
dec
push
mov
inc
xor
mov
addl
test
mov
xor
sub
sub
sbb
out
pop
fdivs
xchg
adc
roll
lock
or
call
outsb
enter
jg
jmp
mov
dec
jns
neg
daa
cld
add
lds
adc
mov
lods
add
cltd
or
or
test
mov
dec
mov
enter
insb
xchg
dec
mov
xor
jl
sub
lods
add
loopne
sbb
jns
xor
addl
jmp
mov
imul
adc
pop
pusha
add
jne
movb
pushl
pop
inc
push
mov
or
pop
inc
jmp
add
cmp
jmp
pop
mov
and
sub
je
neg
jmp
cmc
in
sbb
pop
cmp
jl
push
pop
push
push
rorb
dec
sbb
jno
clc
fs
mov
scas
orl
loop
orl
mov
push
fnstenv
xchg
push
cmp
cmp
std
setl
mov
pop
cld
mov
sub
sbb
rolb
inc
xchg
stc
dec
adc
mov
pop
adc
xchg
popa
inc
addl
lcall
pop
andb
aam
or
pop
sbb
ret
cmp
xor
inc
je
data16
out
mov
insl
popf
pop
dec
loop
sbb
stc
jmp
iret
cs
and
pusha
ljmp
shrl
pop
scas
inc
push
push
add
adc
jl
pop
jmp
and
mov
cmp
or
inc
cmp
icebp
cmp
pop
mov
or
sbb
int
mov
push
mov
mov
bswap
add
mov
jbe
inc
pop
add
out
mov
mov
fcom
xchg
inc
push
xchg
cwtl
pusha
sbb
pushf
add
or
repnz
sbb
or
mov
ss
test
add
inc
in
test
insb
loopne
filds
adc
cmp
sbb
pop
iret
xchg
jmp
mov
inc
mov
inc
jns
out
in
and
and
or
test
fs
test
and
ds
add
loope
mov
cmpl
lock
mov
and
data16
scas
call
dec
icebp
xor
sbb
inc
das
push
jecxz
std
xor
inc
or
sbb
mov
movsb
rcll
cmp
jg
mov
loope
adc
rorb
cmp
daa
inc
decl
xor
mov
loopne
xor
or
mov
push
enter
pushf
push
outsl
shr
addr16
pop
rcrl
push
xor
addl
xor
jecxz
or
outsb
push
lea
or
mov
repz
add
push
add
fistpll
mov
and
inc
and
push
repz
mov
sub
mov
xor
sbb
movsl
mov
mov
std
dec
popf
shlb
cmpl
mov
adc
les
inc
out
inc
arpl
adc
test
bsr
insl
cmp
ja
lods
std
and
xchg
lea
dec
adc
pop
das
shl
stos
lea
clc
stos
xor
rorl
shll
pop
int
cli
cmp
ja
mov
out
or
inc
inc
pop
imul
ret
or
add
rcrl
pop
jle
pop
inc
outsb
push
mov
pop
push
in
lea
push
movsl
movsl
pop
mov
jbe
jmp
cmpb
ds
or
xchg
inc
mov
pop
lods
js
jae
test
jne
push
test
stos
add
or
pop
scas
dec
push
arpl
or
add
mov
and
xor
push
xchg
jmp
int
std
sub
mov
cmpsl
ret
xor
movsb
movsb
popa
scas
call
mov
je
out
inc
jge
mov
xchg
jns
or
push
fstps
rol
and
stos
imul
pop
cmpl
or
adc
inc
mov
push
push
popa
ljmp
hlt
mov
test
testl
test
lea
xchg
nop
into
sbb
jge
sbb
inc
mov
add
rep
rep
inc
inc
mov
adc
xor
test
mov
mov
cmc
xor
adc
inc
int3
push
inc
std
movsl
insl
fidivrl
cmp
push
imul
inc
cld
ljmp
pop
push
cld
shrb
mov
sbb
daa
mov
add
jmp
xor
push
mov
jecxz
mov
adc
sbb
mov
movl
push
xchg
enter
sti
add
mov
jb
fcmovnu
ja
popf
cmp
and
loopne
xchg
mov
add
xchg
xor
inc
pop
pop
lock
std
push
popa
or
xchg
xor
cmp
scas
inc
mov
or
lock
push
imul
popa
testb
mov
je
inc
inc
xor
sub
dec
fldcw
bsr
shr
or
jl
add
inc
dec
pop
pop
popa
loope
dec
xchg
sub
mov
shrl
mov
movsl
pop
div
cmp
jle
jl
cmpsb
jl
adc
cmp
dec
xor
jle
sub
xor
icebp
imul
xchg
int3
push
in
jnp
inc
fsubr
lods
cld
sub
sarl
test
and
pop
filds
mov
ja
jbe
push
test
out
or
arpl
aas
xor
push
cmpl
loop
xchg
ret
lcall
xchg
pop
push
inc
adc
mov
add
push
pop
or
loop
mov
aas
mov
jle
movsl
xchg
std
or
orw
mov
sbb
outsl
jl
or
je
and
andb
andl
repz
mov
push
inc
inc
cltd
hlt
pop
fs
push
and
sbb
jae
mov
add
testb
dec
test
inc
jge
jmp
shlb
sbb
xor
mov
or
add
sub
push
std
adc
jb
loopne
call
mov
sbb
adc
pop
cwtl
je
pop
sti
psubq
out
pop
push
inc
ljmp
ret
nop
ds
in
sub
push
ret
fsubrs
fldenv
add
cld
and
faddp
cli
mov
sub
dec
fiaddl
pop
cmp
jae
out
test
and
inc
jmp
popa
or
xchg
je
iret
mov
push
or
add
pusha
sub
pop
lea
xor
push
adc
std
out
sub
add
jle
stc
and
fiaddl
push
loopne
push
imul
test
inc
aaa
or
or
pop
pusha
call
or
mov
mov
arpl
mov
add
xor
rcl
xchg
fldl
lock
or
mov
fs
add
push
cmp
cmp
mulb
add
or
adc
and
add
fcompl
and
negb
sub
inc
int3
movsb
jbe
or
jmp
mov
push
add
inc
or
cmp
jge
lds
dec
sub
or
or
jne
jecxz
push
cmp
aas
ficoms
cmp
aas
add
pop
cmp
xchg
aas
add
xor
and
and
pop
dec
pusha
ret
adc
cmpsb
cmp
inc
jmp
hlt
ret
fcoms
je
lock
lods
cmp
adc
push
jl
cwtl
add
adc
je
sbb
mov
or
adc
lea
pop
pop
add
fmull
sbb
lods
xchg
inc
arpl
fs
pop
inc
dec
jmp
jne
xlat
lods
mov
adc
mov
or
push
les
sti
out
jge
ds
or
jbe
inc
sbb
ja
imul
add
jmp
mov
imul
test
je
cmp
je
inc
jle
lods
int
jmp
lea
and
mov
mov
movlps
out
ret
jg
cmpb
je
push
das
pushf
add
std
mov
pop
inc
cmpb
and
movsl
mov
jbe
pop
jne
testl
jne
pop
inc
popf
fmuls
inc
mov
cwtl
outsl
pop
jecxz
nop
push
pop
dec
pop
outsl
jnp
mov
push
add
mov
push
inc
xor
decb
sarl
push
in
insb
sub
mov
loopne
arpl
lock
or
dec
xchg
imul
inc
sbb
xchg
cmp
pop
cltd
lock
cli
jp
adc
addl
adc
mov
add
dec
xchg
or
mov
sarb
aaa
inc
mov
inc
cmp
sub
and
mov
xchg
cli
jnp
movl
inc
inc
pop
aad
mov
sbb
cmp
inc
data16
add
sbb
leave
testb
xchg
pop
jae
je
or
or
popa
dec
testl
incw
add
mov
dec
adc
enter
and
adc
or
mov
inc
pop
loop
inc
sub
aad
pusha
add
add
or
cltd
and
add
dec
xchg
fwait
sbb
sbb
xchg
jle
filds
in
shr
mov
dec
pop
push
inc
xchg
add
adc
push
pop
inc
arpl
push
add
inc
bound
dec
stc
adc
je
dec
insb
sbb
fidivl
sbb
push
aas
pushf
or
addl
pop
or
push
popa
pop
sbb
dec
jno
insb
in
add
outsb
dec
pushf
mov
dec
ljmp
push
iret
xor
aad
jae
or
add
lea
fmul
adc
ljmp
jl
mov
cmpsl
fwait
mov
dec
ret
push
out
mov
dec
stc
or
repnz
pop
es
sbb
inc
add
lods
jmp
cmp
je
gs
add
sub
addr16
fisubl
inc
les
jmp
push
jecxz
dec
cli
cmp
push
cmp
aam
inc
xor
cmp
orl
mov
div
idiv
or
sub
inc
aad
popf
mov
stos
imul
or
or
push
iret
sbb
mov
pop
push
in
inc
sbbb
lret
mov
xor
sbb
test
mov
and
xor
sbb
add
ret
sti
movb
mov
push
sbbb
ret
test
pushf
lds
xchg
fisubrs
inc
mov
mov
push
xchg
lea
jne
cmp
std
adc
jge
mov
mov
decl
shll
xchg
out
andb
mov
rcrb
stc
in
xchg
jl
test
adc
jecxz
rolb
mov
shlb
mov
ljmp
or
dec
xor
xor
push
je,pt
inc
addr16
int
or
fistps
dec
add
inc
xchg
cmp
jl
ds
mov
fdivr
lea
jne
test
add
shrd
sti
negb
ret
dec
jo
notb
shl
or
incl
int
mov
mov
mov
unpckhps
jne
lock
xor
fwait
or
jl
jmp
sub
dec
jno
fs
ficompl
int3
test
add
mov
jmp
or
testl
cmp
out
push
call
mov
mov
das
mov
loopne
test
xor
add
and
mov
addl
push
cmp
je
leave
sbb
or
mov
mov
ficomps
call
xchg
adc
ret
fs
adc
push
cmpb
add
ret
das
mov
cmp
cmp
add
ss
mov
adc
adc
inc
daa
imul
ret
int3
push
inc
xor
pop
inc
xor
lock
push
or
in
mov
testl
sahf
xchg
inc
ficomps
pop
fisubrs
jnp
andb
aaa
clc
xchg
xorl
je
push
push
lea
push
pop
dec
mov
ficompl
orb
xor
dec
push
xchg
pop
pop
test
cmp
decb
divl
cmp
insb
push
mov
dec
jmp
mov
jbe
pusha
xor
xor
jmp
test
in
cmp
jmp
xchg
jmp
mov
sub
sub
jne
mov
push
and
sbb
ret
ljmp
cmpl
fbstp
push
add
mov
push
movsl
mov
sub
loope
lock
mov
jb
cmpsl
mov
ret
std
les
in
cmp
fstps
fxch
loopne
add
dec
or
add
sbb
icebp
pop
pop
fdivrs
loope
aad
pusha
adc
dec
lods
mov
mov
outsb
xor
mov
add
xor
jbe
lods
push
clc
sbb
add
or
orb
pop
ficoml
xor
cmpsb
inc
or
fsubl
ret
cmp
pushl
sbb
insl
and
dec
inc
sub
mov
sub
jmp
test
adc
std
inc
add
aas
and
pop
cwtl
jbe
or
mov
sbb
stc
cmp
aas
in
nop
pop
ja
adc
pop
inc
adc
jo
data16
insb
adc
aam
cmp
add
mov
les
movsl
xchg
add
call
mov
or
push
push
add
mov
call
mov
lahf
int
cmp
scas
fsts
das
test
and
add
dec
ret
mov
xor
jnp
push
lock
sub
mov
repnz
inc
or
sarb
or
popa
and
add
jecxz
mov
movb
add
add
test
stos
testl
jl
rolb
cmp
pop
xor
arpl
xchg
jb
fcom
sbbl
add
test
jge
or
push
adc
push
pop
fnsave
ret
jb
pop
jb
bound
nop
jl
sbb
insb
jge
cmp
into
js
arpl
imul
adc
es
loope
rcrb
inc
dec
mov
aaa
mov
das
popa
test
lods
pop
push
rcrl
ljmp
popf
push
jb
cmp
es
and
push
mov
jge
adc
nop
fwait
push
lret
cmp
add
xchg
std
xor
or
adc
or
jae
shld
shl
push
rcl
and
shl
xchg
push
test
lahf
mov
or
push
je
adc
out
clc
mov
add
cmpl
jg
adc
mov
daa
add
std
sti
test
mov
notb
je
decl
mov
mov
ret
and
fists
out
push
add
loope
test
push
cwtl
mov
mov
inc
mov
icebp
add
push
xbegin
add
sbb
inc
xchg
aaa
push
xor
pop
lcall
and
fadds
mov
pop
movsl
push
data16
andl
out
pusha
xchg
pop
sbb
pop
pop
lock
pop
andl
sbb
rorb
sbbl
add
lods
inc
aaa
mov
test
cmpsl
or
or
or
addl
pop
fisubrl
cmp
shrb
fdivrp
lods
and
pop
sub
mov
pop
enter
lahf
adc
mov
mov
adc
pop
pop
sbb
pop
enter
enter
dec
imul
jg
or
push
movsb
pushf
orl
jl
data16
xor
adc
add
rorl
loopne
push
in
mov
pusha
mov
in
cmp
pop
nop
js
cwtl
scas
mov
insb
push
rorb
inc
and
lcall
sbb
and
xor
shlb
imul
sbbb
jo
js
add
orl
and
pop
into
call
inc
add
pushf
test
or
jae
out
lea
dec
test
icebp
xorb
clc
sbb
test
or
loope
jl
and
inc
or
lods
xor
pop
lds
jg
mov
jmp
shl
mov
ret
inc
call
daa
sbb
push
jne
cmp
mov
pushl
leave
jmp
inc
call
and
or
adc
hlt
jmp
or
jmp
divb
add
adc
js
mov
andb
xor
test
dec
or
or
pop
sti
cmp
popa
int3
and
xchg
in
outsb
pop
stos
inc
repz
dec
push
adc
orl
popa
test
imul
sbb
rorl
ret
jge
cmpsb
jge
push
cmp
jge
rclb
pop
and
bound
nop
push
aam
lods
sub
jnp
test
push
push
pop
pop
mov
je
movb
jmp
andb
adc
xchg
in
mov
test
rolb
mov
cld
out
lahf
dec
incl
pop
ja
pop
and
sub
je
lret
scas
and
fistps
in
dec
shll
dec
adc
inc
jmp
mull
daa
cmpb
je
or
in
and
je
ret
mov
insl
jmp
mov
or
adc
and
and
pop
sbb
and
mov
call
lret
je
cmp
je
std
test
je
push
add
outsb
lods
sti
cmp
aaa
adc
mov
popf
xchg
add
push
pop
divb
add
sub
add
je
aaa
add
not
and
outsb
or
or
add
and
testb
les
idivl
or
mov
dec
dec
or
iret
clc
mov
adc
sbb
ds
push
cmp
out
inc
vpaddusw
cwtl
xor
and
lods
cli
sbb
mov
jmp
je
jg
cs
iret
inc
dec
incl
or
sarl
pop
lahf
dec
repz
or
in
icebp
bound
jge
inc
or
in
dec
pop
pop
icebp
pop
lret
add
js
je
icebp
add
in
shlb
sbb
lock
andl
push
dec
jmp
insl
adc
arpl
lahf
jne
jo
js
leave
sbb
lock
xlat
adc
iret
or
cmp
aas
xchg
ljmp
je
sbb
xor
dec
insb
cld
push
in
push
fstcw
sub
sbb
cmp
shlb
or
aas
or
lock
or
inc
andl
rorb
insl
or
xchg
jns
mov
idiv
push
cltd
addb
push
push
push
gs
xchg
out
loop
jae
or
lods
imul
push
add
adc
and
mov
icebp
inc
mov
jecxz
pop
dec
xor
or
dec
loopne
pop
mov
lds
int3
ss
and
iret
cmp
out
cwtl
insl
pop
pop
test
pop
mov
loope
shlb
hlt
ficoml
movsb
inc
push
adc
add
bound
mov
ret
sbb
mov
mov
xor
movsb
dec
int3
or
fadd
sbb
or
add
cli
xor
sbb
dec
or
dec
or
sbb
movsl
or
pop
sahf
add
pop
xchg
pusha
mov
lock
lock
cltd
adc
ljmp
lret
call
loop
rolb
cli
pop
add
sarb
mov
push
add
mull
sbb
add
jl
jbe
pushf
dec
ja
nop
clc
xchg
xchg
data16
cltd
adc
mov
pop
pop
sbb
mov
mov
dec
js
ss
test
pop
sub
mov
leave
pop
pop
cmpsb
js
in
mov
mov
pop
pop
add
ret
pop
cltd
cmp
inc
enter
cmp
lcall
pswapd
and
pop
aam
fwait
sub
test
xorb
mov
push
push
daa
lret
and
sbb
cmp
fdivrp
enter
and
mov
ret
aaa
or
insb
std
mov
xor
add
xchg
dec
or
inc
stc
dec
dec
cli
push
pop
gs
jge
pop
and
ret
cltd
push
and
pop
add
dec
dec
add
sub
ss
not
dec
enter
and
or
pop
daa
clc
cmp
test
jns
jne
xchg
mov
decl
mov
push
pop
xchg
pop
pusha
shrl
rcr
popa
xor
add
aad
sahf
shlb
or
dec
xor
xor
loope
add
dec
or
mov
lds
push
or
add
mov
and
aas
clc
pop
dec
sarb
and
add
mov
es
notb
enter
cmpl
iret
nop
into
and
pop
or
test
and
xchg
sub
adc
orb
add
inc
mov
dec
cld
xlat
scas
dec
xchg
loope
jge
cmp
fdivrs
sub
fdivrs
adc
test
filds
or
inc
push
xchg
negb
mov
cmp
jl
movsl
popa
lea
dec
sti
or
dec
testl
sbb
xchg
push
idivb
add
inc
pop
jl
xchg
addb
dec
daa
add
testl
pop
pop
or
or
pop
test
sub
fnsave
movsb
or
add
dec
dec
pop
ror
add
in
push
sbb
call
dec
jecxz
add
sahf
xchg
mov
je
mov
push
push
and
pop
sub
nop
data16
mov
dec
arpl
hlt
jg
repz
pop
xlat
pop
add
xor
into
push
adc
in
rolb
pop
mov
inc
dec
jne
insb
adc
sbb
dec
jl
cmpb
jl
clc
xchg
sbb
cmp
or
jge
stos
xor
incl
adc
sub
push
dec
mov
push
in
jnp
loope
lock
mov
lea
pop
js
scas
push
or
rcll
sub
movsl
std
inc
xor
dec
xchg
nop
cld
mov
jnp
push
mov
adc
mov
pop
sbbb
les
mov
loope
scas
mov
mov
lahf
mov
and
inc
mov
rcll
and
lock
js
je
mov
mov
cmp
or
push
adc
shll
cwtl
pop
pop
cmp
dec
xor
movsl
xor
inc
inc
sti
jmp
ud2
or
inc
or
movsb
xchg
loop
push
xchg
into
mov
adc
leave
mov
shr
or
lea
mov
icebp
in
mov
jmp
and
iret
cltd
dec
or
jne
sub
adc
pop
xchg
movzbl
test
loope
pop
mov
sbb
rclb
sbb
pop
and
jmp
js
ss
inc
pop
mov
je
push
add
lods
push
popf
dec
mov
and
xchg
scas
jge
push
mov
clc
or
push
in
arpl
loop
add
mov
adc
add
addb
lcall
mov
aaa
inc
loopne
dec
ja
and
add
cmp
aas
mov
shlb
lds
lret
repnz
cmpsl
leave
cmpsl
jne
cmpl
mov
sahf
jp
push
gs
jne
bndstx
cmpsb
pop
je
jmp
push
or
push
jmp
pusha
cmc
add
pop
iret
xchg
fdivl
mov
or
add
shlb
inc
pushl
adc
sbb
iret
sbb
and
add
mov
add
add
xor
lahf
or
jg
or
arpl
inc
enter
push
es
xchg
pop
and
fwait
sub
nop
inc
xor
sub
loop
push
add
outsl
xor
dec
dec
pop
testl
rclb
cmp
data16
cmp
jge
add
inc
pop
push
push
cmc
and
adc
sub
dec
xor
sbb
mov
mov
jge
test
sbb
jp
adc
cmp
adc
pop
icebp
pop
or
in
inc
adc
lea
jp
lahf
sti
jmp
adc
inc
ja
aas
in
adc
cwtl
jae
xor
lret
outsl
or
into
jae
add
push
and
ffree
int
jl
aaa
or
pop
sbb
mov
or
pushl
daa
fcomps
jge
incl
sub
das
or
mov
sbb
mov
into
add
ljmp
cmc
mov
mov
mov
mov
shr
shl
or
pop
movsb
pop
push
ja
mov
aaa
out
ja
in
imul
or
mov
or
out
shr
sti
push
aas
ret
xor
mov
adc
test
lods
xor
add
push
out
mov
xor
push
jbe
sub
movsl
movsl
push
xor
or
fisttpl
stos
add
push
repnz
daa
fldt
pop
mov
out
mov
into
sub
cs
or
add
mov
lock
cmp
loope
mov
lods
add
pushl
add
sarl
adc
adc
cmp
push
mov
and
jg
inc
sbb
out
or
fbld
and
pop
xor
xchg
test
fsub
push
add
addl
mov
and
or
stc
popf
add
scas
or
push
pop
lods
icebp
push
rcrb
or
xchg
shlb
push
sti
xor
cmp
dec
add
mov
cmp
sbb
add
push
flds
rcl
jbe
and
mov
lea
scas
mov
pop
jmp
ljmp
sbbb
xchg
imul
and
add
mov
or
in
sub
push
inc
jle
jle
add
jnp
jg
aaa
stos
sti
dec
push
cmovp
cmp
xor
add
cmp
lcall
cmp
lea
xchg
or
and
clc
dec
jmp
in
rorb
mov
mov
fadds
inc
adc
or
adc
push
jmp
adc
in
mov
aaa
cmp
in
and
cltd
lcall
and
cmp
inc
cmpsl
or
mov
into
or
ljmp
adc
jmp
lea
push
dec
movsb
sbb
je
pop
nop
add
outsb
pop
pop
out
dec
gs
cwtl
add
mov
ds
movsb
or
sbbl
or
pop
dec
adc
jmp
cltd
ljmp
sub
je
mov
dec
subl
pop
dec
pop
jnp
sub
movsl
push
and
mov
cwtl
sbbb
sbb
loopne
jg
mov
je
rolb
jg
mov
sbb
mov
xchg
outsl
rorb
add
ss
pusha
push
xor
cwtl
jg
imul
adc
jl
incb
hlt
push
divb
jbe
inc
dec
adc
xchg
mov
insb
mov
mov
or
daa
bound
sub
aad
outsl
addl
adc
sub
sbb
clc
mov
sub
cmp
aam
add
call
sub
dec
inc
leave
aam
ret
stos
mov
cmp
pop
cmp
dec
out
shrb
loope
rol
clc
add
rclb
scas
jmp
mov
xchg
add
adc
rcrb
cvtps2pi
clc
push
lds
jno
mov
inc
or
in
adc
pushf
cmpsb
pop
mov
jg
aas
popf
imul
cmp
lahf
sbb
lret
lcall
push
or
mov
mov
sbb
leave
push
das
int3
pop
in
cmpsb
imul
cmpsb
imul
aas
jg
pusha
mov
add
cs
or
push
std
das
call
jne
andw
movsl
cmp
fbstp
pop
add
add
fcoms
jge
mov
mov
mov
sbb
jo
maskmovq
mov
cmp
add
inc
xchg
sub
and
mull
adc
jne
push
and
sbb
sub
add
in
jg
loop
push
add
movzwl
in
shr
imul
adc
out
or
clc
decl
push
dec
mov
dec
mov
lea
xchg
mov
in
sar
repnz
or
icebp
jae
lock
sti
sbb
aas
jb
in
xor
sbb
xor
jge
push
fldenv
push
dec
cmpsb
xchg
jae
cmp
mov
adc
out
push
push
add
stc
clc
cli
dec
sbb
mov
rorl
sub
sbb
jne
popa
pop
push
fistl
shl
fimuls
jle
cmp
dec
sbb
shll
push
jno
push
mov
sti
mov
dec
and
dec
lret
stos
xchg
ficompl
add
imul
sti
mov
ffree
adc
insb
xchg
decl
out
mov
jne
adc
decl
dec
add
xor
ucomiss
sbb
dec
jmp
mov
jmp
sub
sub
mov
hlt
andb
pop
mov
popf
sahf
sub
flds
lock
loope
add
andb
roll
mov
aad
mov
push
pop
pop
cmp
ret
push
decb
loope
jmp
addl
jne
or
repnz
jo
jle
and
add
mov
pusha
add
push
lcall
pcmpgtd
jp
inc
jb
in
inc
iret
stc
mov
ds
and
and
and
lea
cmp
or
or
jg
xchg
aas
repnz
ja
rclb
push
push
cmp
enter
test
jp
test
sarl
inc
pop
sti
sbb
sahf
adc
pop
cmp
push
cmp
xchg
cmp
aad
or
xchg
and
cs
and
cmp
add
push
sbbb
dec
mov
sub
mov
call
push
hlt
mov
cmp
rcrl
sar
pop
daa
scas
fnsave
daa
push
dec
loop
orb
add
out
lock
jne
and
xlat
rorb
jg
andl
xor
and
popf
popf
sbb
dec
popa
or
jg
fsubr
insl
mov
jge
jmp
ja
pop
and
adc
jnp
add
in
cmpl
popf
sub
aaa
mov
ret
dec
test
jg
mov
stos
xor
cmp
add
loop
loop
xchg
add
or
or
push
jmp
xchg
por
test
lods
loop
ficoms
cmc
mov
xor
or
pop
push
movhps
add
in
sbb
dec
jg
neg
sbb
cli
lods
sbb
or
cmp
leave
sbb
arpl
or
jl
cs
getsec
and
pusha
cmp
je
jge
mov
dec
loopne
push
or
adc
sahf
js
and
mov
inc
inc
push
cs
push
and
iret
int
xchg
pop
icebp
dec
mov
cmpl
and
fs
mul
jb
das
inc
outsb
pop
mov
jl
ret
movsl
add
xchg
fldl
je
sti
aas
mov
or
and
add
add
ljmp
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
fcompl
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
popa
sarl
fdivl
jno
add
aad
mov
mov
movsl
in
add
mov
call
xor
mov
or
lcall
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
frstor
sub
rorl
popa
mov
into
pop
cmp
pushl
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
ljmp
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
mov
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
dec
mov
lcall
mov
cmp
ljmp
fildl
incl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
pushl
xchg
shlb
add
inc
push
imul
xorb
sbb
add
outsb
jbe
aam
loopne
pop
jp
adc
dec
jmp
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
decl
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
call
ja
int3
add
mov
das
es
lds
or
sub
mov
lcall
xlat
ret
shlb
sbb
ret
es
pushf
mov
insl
incl
test
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
jecxz
lcall
int
mov
mul
ja
outsl
ja
mov
out
sti
jo
incl
lret
pop
or
adc
sahf
gs
clc
sar
imul
decl
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
sar
decl
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fdivrp
pop
mov
jg
mov
jmp
mov
xor
call
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
std
lcall
sub
aaa
mov
or
sbb
add
sub
pushl
addr16
push
add
jns
lcall
adc
jg
xor
sub
push
pop
pop
or
aaa
xor
push
push
pop
push
and
add
pusha
push
jo
or
sub
lahf
fsts
sbb
sub
outsb
add
insb
cwtl
mov
repz
insb
insb
adc
pop
inc
sti
aas
addr16
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
cs
push
push
inc
push
push
shrb
ret
lock
in
add
inc
push
cmp
inc
inc
dec
jae
jb
arpl
jae
jb
scas
cld
gs
je
jb
sbb
je
dec
inc
push
dec
xorl
mov
add
xor
mov
mov
push
iret
outsl
roll
push
xorl
scas
mov
test
and
mov
outsl
outsl
cvtdq2ps
sbb
dec
inc
sbb
add
inc
and
xor
adc
stc
popa
bound
imul
push
fisubrs
sbb
jo
dec
aaa
outsb
rcr
jnp
jne
push
arpl
out
insb
ficompl
add
cmpsl
imul
in
in
jae
fs
jo
and
jb
inc
addr16
idivb
and
insb
push
mov
inc
pop
push
gs
das
mov
add
or
xor
out
fistl
addr16
outsl
jo
mov
inc
push
fs
aaa
sbb
arpl
lea
cltd
jns
and
xor
and
je
push
pop
xor
imul
outsl
popa
pop
add
scas
loope
insl
add
addr16
insl
inc
xchg
insl
movsl
fmuls
cmp
and
push
cmp
test
addr16
jae
push
xor
shll
sbb
addr16
mov
lret
jne
dec
decl
std
shll
push
imul
push
int3
fdivrp
adc
dec
imul
pop
sub
inc
sbb
and
cmp
add
add
rcl
mov
sbb
sub
inc
gs
popa
test
jbe
mov
jne
add
pop
push
negl
insl
das
in
addr16
outsl
js
inc
dec
fdivrp
xor
push
dec
inc
dec
add
dec
dec
inc
add
add
add
inc
enter
xlat
shlb
xchg
xchg
negb
outsb
gs
imul
inc
cs
jg
stos
loopne
je
popa
jae
adc
push
aas
fidivrl
pop
mov
insl
xor
xor
adc
jo
pop
leave
dec
xor
adc
or
aad
aas
xor
inc
jg
shl
aas
add
jae
insb
xchg
adc
push
dec
cltd
add
jg
ja
bound
adc
mov
push
push
push
inc
pushf
or
outsl
scas
adc
inc
leave
in
jne
aaa
or
push
lea
outsl
jo
imul
sbb
inc
or
pop
addl
jo
jo
push
dec
jg
in
inc
mov
inc
adc
jmp
outsl
je
insb
cmp
and
push
cmp
or
push
mull
repnz
inc
dec
pop
inc
js
insb
outsl
mov
pop
clc
mov
pop
or
aaa
push
arpl
mov
loope
push
popa
and
outsl
stc
mov
jb
outsb
dec
push
cmp
push
adc
mull
push
xor
cld
mov
outsb
inc
lock
and
arpl
jns
std
push
popaw
imul
subl
ja
into
lcall
gs
gs
sbb
aaa
cs
outsb
sbb
cmp
or
shrl
neg
sub
add
xlat
push
jne
sub
mov
xchg
push
pop
lea
leavew
mov
shll
sub
shll
imul
andl
xor
dec
aad
cmp
mulb
adc
ret
gs
pushl
sub
adc
dec
enter
and
or
outsb
fidivrl
or
dec
dec
fucom
into
inc
push
fucomi
loope
daa
pop
ja
addr16
and
xor
loopne
das
inc
gs
push
pusha
ljmp
push
inc
paddusb
lods
adc
ret
pop
inc
dec
push
push
dec
inc
pop
add
cmpsb
pop
dec
lcall
xchg
cmpsb
jns
add
js
pusha
sbb
adc
mov
in
lock
in
mov
int
je
in
and
mov
in
in
sbb
push
pushf
fs
xor
fsub
inc
jb
inc
mov
push
sbb
cs
cld
loop
push
mov
inc
jb
mov
das
pusha
loop
cmp
sbb
xchg
mov
out
mov
fs
and
clc
loopne
mov
mov
and
fs
push
nop
adc
fistps
or
mov
sbb
adc
jb
push
add
fiadds
mov
mov
movsb
imul
addr16
nop
push
test
nop
xor
push
push
mov
inc
xor
push
add
add
adc
jns
cmp
test
dec
imul
jmp
rolb
fldt
dec
add
sbb
push
imul
sti
iret
inc
inc
and
xor
popa
jbe
mov
xchg
imul
out
xor
outsb
arpl
cs
rcll
lods
aam
xchg
addr16
outsl
call
mov
pop
hlt
dec
push
xchg
ja
add
jnp
pop
mov
push
dec
push
dec
pop
jns
mov
imul
mov
xor
bound
mov
inc
push
lods
pop
adc
int
adc
fs
adc
cmp
dec
dec
and
add
pop
inc
in
dec
gs
js
fcmovb
pop
js
outsb
cmp
push
ret
sub
push
push
mov
xchg
cs
adc
and
addr16
cmp
insl
xor
xor
es
flds
in
xchg
mov
movsl
imul
and
pop
insl
gs
lahf
shll
cld
add
jne
bound
cmpsl
push
in
or
mull
push
arpl
dec
pop
jno
insl
xor
outsl
dec
cmp
pop
push
adc
and
addl
pop
bound
addr16
add
dec
imul
or
gs
outsl
pop
fsub
mov
sbb
dec
ljmp
sub
sbb
or
clc
or
and
je
enter
mov
dec
push
dec
dec
inc
dec
inc
das
pop
inc
mov
push
arpl
arpl
loop
xlat
rclb
out
mov
arpl
mov
cmpb
outsl
adc
xlat
arpl
mov
dec
mov
xchg
fs
imul
dec
jb
xor
inc
inc
pop
xchg
addb
in
xor
iret
and
cmp
insl
loop
adc
vmovddup
pop
cltd
or
lods
dec
pop
xchg
sti
pop
push
jl
jb
pop
inc
inc
dec
inc
push
pop
mov
push
cmpsl
movsl
lcall
sbb
push
out
stos
shlb
stos
popf
call
jecxz
jne
inc
fiaddl
mov
std
mov
sub
inc
inc
mov
fwait
jmp
or
sub
loopne
pop
adc
xor
les
out
jns
lods
jle
xchg
js
push
cltd
xor
fildll
addb
imul
cmp
add
pusha
popa
xchg
je
out
sub
movsl
test
push
out
inc
sbb
push
or
shlb
push
aam
nop
inc
inc
sbb
pop
xor
pusha
sub
pop
push
outsb
outsl
insb
mov
addr16
add
inc
inc
jb
ficoms
cmpsl
xor
mov
shll
shlb
or
dec
fs
mov
push
sbb
pop
dec
xchg
mov
pop
adc
in
dec
les
inc
vorps
sub
daa
shrb
xor
ljmp
insb
imul
adcl
jne
pop
jns
gs
daa
jne
aas
mov
sub
out
dec
sbb
jg
push
inc
jbe
rcrl
dec
pop
fwait
pop
inc
cwtl
stos
fdivl
jne
sub
sub
imul
pop
fcoms
sub
xchg
insl
imul
pusha
lahf
jbe,pn
xchg
push
cmp
sub
scas
rol
js
bound
inc
inc
inc
ja
push
xchg
mov
rolb
jne
loope
fcmovnb
dec
popa
scas
cs
adc
out
xchg
je
daa
push
mov
outsb
jae
aad
mov
and
sbb
dec
push
inc
ss
sbb
jae
sbb
popa
fdivs
in
iret
fisubl
inc
dec
inc
cwtl
add
loopne
mov
and
push
shl
ret
outsb
daa
and
cs
fimull
aas
mov
rorb
aas
mov
xor
cmpl
enter
mov
ja
mov
test
xchg
loop
xor
in
mulb
mov
add
jne
or
adc
add
aad
movsb
pop
push
add
xchg
rolb
pop
mov
lahf
call
dec
pusha
add
add
add
add
inc
lods
testb
and
std
int3
inc
fs
mov
insb
jo
scas
je
xchg
shlb
or
jl
std
cli
pushl
xchg
adcb
adc
add
arpl
inc
push
inc
addr16
test
or
pusha
fisubs
aas
inc
dec
push
add
ja
imul
add
add
or
dec
sbb
add
sub
sysret
or
sub
add
pop
ds
xchg
mov
and
xchg
movsb
lods
stos
dec
shll
nop
inc
and
sbb
mov
scas
and
or
and
add
aas
ret
mov
mov
push
or
add
inc
jg
push
vmread
or
aaa
jo
cwtl
xchg
cwtl
dec
adc
adc
scas
xor
xor
insb
add
inc
adc
pusha
pop
add
xchg
test
decl
sarl
orb
dec
cltd
cltd
icebp
mov
jp
add
orb
add
mov
outsb
mov
fimull
imul
add
loopne
dec
adc
insb
adc
cs
cs
and
push
into
push
jbe
subps
add
inc
add
shlb
push
add
xor
adc
outsl
add
and
insb
mov
addb
or
add
sub
jmp
testl
jg
rcll
jnp
nop
add
push
fnsave
sbb
popf
adc
mov
push
clc
dec
cld
or
sub
popa
jo
fwait
addl
pop
cmp
mov
cmpl
add
js
jb
out
add
push
bnd
nop
xlat
inc
dec
push
add
or
pop
xor
dec
add
ficoms
inc
add
repz
rorl
adc
mov
call
mov
ja
mov
cmovno
cld
ja
inc
dec
push
dec
dec
dec
std
movsl
fadd
inc
inc
js
push
push
dec
sub
test
call
push
fldt
and
hlt
mov
push
jo
mov
cmp
arpl
mov
dec
add
addr16
and
aaa
std
sti
nop
inc
pop
into
xor
imul
inc
pop
shl
and
imul
cmpsl
mov
jg
push
idivb
addr16
push
inc
adc
bnd
sbb
add
adc
orl
push
mov
xor
dec
movsb
lds
test
push
fmuls
orl
repnz
rclb
ljmp
jbe
add
adc
aas
imul
repnz
enter
add
xor
inc
pop
xchg
pop
inc
mov
sbb
adc
sub
popw
adc
fldenv
jp
outsl
inc
sub
shlb
adc
out
and
pop
jg
inc
pop
dec
ret
xchg
lret
lods
and
in
dec
mov
jo
js
arpl
test
dec
mov
fistps
and
cmpsl
add
subb
movsl
mov
leave
adc
add
sbb
jg
dec
pop
rclb
test
add
es
sbb
stos
jns
mov
test
push
or
xor
push
sbb
or
inc
inc
push
and
inc
jmp
cmp
mov
pop
ret
cmp
xor
xor
dec
jge
popa
insl
jns
add
add
mov
gs
add
cmp
sub
jae
sub
iret
lock
js
test
jb
imul
dec
jp
jle
xor
sbb
jmp
dec
or
push
imul
test
scas
sbb
inc
mov
data16
dec
push
and
or
outsl
imul
or
daa
shrb
jmp
arpl
xor
fbld
icebp
adc
dec
cmp
cmp
add
call
cmc
xchg
xor
test
stc
aas
and
je
js
das
push
sub
lods
xor
fstp
loopne
stc
imul
jmp
inc
jmp
dec
push
push
inc
dec
cmp
cmp
sub
sub
ljmp
inc
dec
adc
testb
dec
inc
pop
adc
dec
dec
ds
push
push
dec
push
dec
push
or
mov
inc
fdivrl
notl
cmc
jae
mov
sub
sub
dec
add
shl
or
push
dec
inc
push
dec
and
in
inc
in
jmp
push
lock
gs
dec
inc
test
cs
xor
imul
xor
xor
cmpsl
inc
dec
das
add
sbb
jae
in
cmp
dec
jae
rolb
daa
aaa
fsubrl
sub
add
scas
xor
sbb
jg
daa
movl
sub
or
inc
inc
sbb
ja
add
out
sub
add
jnp
xor
inc
adc
or
dec
popl
data16
push
inc
psubsw
sbb
jns
popa
out
mov
xor
inc
mov
jo
mov
push
lds
aaa
pop
dec
ss
add
repnz
mov
cmpsb
push
add
ds
jecxz
jne
notb
js
test
and
mov
push
fwait
xor
fisttpll
xlat
cmc
dec
push
dec
push
mov
jge
ret
and
or
lret
dec
xor
push
gs
les
or
sbb
xchg
and
shll
push
dec
or
dec
dec
pop
and
outsb
bound
sbb
pop
inc
inc
inc
aaa
sbb
shl
popa
jo
cmp
jb
fpatan
jo
rcl
ret
ss
lods
rorb
adc
sbb
lcall
std
fs
js
sarl
cmpsl
test
xchg
std
dec
mov
sbbb
inc
push
outsl
arpl
push
arpl
push
addb
outsb
jbe
je
jb
rol
mov
pop
out
bound
push
push
inc
loop
aam
adc
add
cmp
inc
sarl
dec
xor
das
push
jge
inc
inc
fs
daa
or
fists
jo
mov
inc
lahf
push
bound
popl
loope
pop
test
jo
imul
iret
ret
mov
popa
mov
lods
pop
jnp
inc
aas
sub
mov
cs
jne
es
mull
or
jae
add
sbb
rcrb
mov
mov
dec
nop
es
lods
pop
push
jbe
inc
iret
js
sub
pusha
shll
fs
pop
mov
mov
daa
push
outsl
in
add
pop
push
outsb
lahf
popa
sbb
dec
arpl
inc
test
in
mov
and
adc
push
ror
aas
imul
loope
daa
insb
popa
das
xor
xchg
jge
out
mov
movsb
fcoms
daa
push
jae
dec
push
pusha
pushl
jb
imul
inc
daa
or
fsubs
and
mov
adc
inc
xchg
in
rclb
cmp
data16
loope
jbe
ja
jge
mov
xchg
jns
aaa
orl
xchg
sub
and
xor
push
push
push
bound
fs
pop
cmp
mov
adcb
les
daa
arpl
enter
btr
scas
shlb
scas
xor
in
mov
push
inc
aaa
je
punpcklwd
rorl
cmpl
outsb
push
push
nop
cs
pop
inc
pop
push
popa
push
push
sub
or
aam
add
lret
jo
lods
jge
out
popf
xor
dec
negb
sbb
dec
jae
mov
ret
fldcw
inc
jae
arpl
push
pusha
insb
jae
or
push
call
jae
pop
xor
fldenv
arpl
inc
inc
outsb
imul
inc
pop
dec
insb
push
pop
mov
xor
cmp
dec
out
fldt
inc
sbb
mov
outsb
push
push
movsl
outsb
fisubs
fs
pop
jne
popa
inc
push
test
sarb
xchg
jae
dec
jb
cmp
outsl
scas
mov
cli
jae
arpl
xor
pop
sub
mov
test
pop
xchg
fiadds
sbb
fwait
xchg
xchg
adc
push
push
sbb
sub
stc
mov
mov
adc
imul
xor
push
popf
jmp
jns
data16
xor
jle
sbbb
jbe
push
int3
sbb
fs
cs
add
jne
mov
jb
iret
sbb
inc
jo
popa
iret
inc
outsb
jae
and
sbb
cmc
pop
adc
add
daa
dec
movaps
pop
addl
adc
mov
das
rcll
orb
sti
insl
xor
or
sbb
dec
bound
addr16
test
int
nop
cltd
mov
outsl
addr16
mov
add
shll
mov
jo
cmp
sbb
sub
dec
sbb
push
adc
inc
rorl
daa
cmp
jne
fsts
fmull
notl
lret
push
es
xchg
lods
inc
cmpsb
pop
imul
pop
inc
dec
dec
dec
dec
lret
pop
flds
fwait
mov
xchg
adc
and
popf
sub
dec
xor
push
sub
gs
jo
xor
push
xor
xor
xor
rcrl
adc
data16
push
pop
mov
or
mull
inc
fs
movl
incl
dec
movsb
mov
dec
mull
sbb
movsb
adc
xchg
es
insl
dec
shrl
and
movsb
fistps
and
arpl
cs
and
pop
lret
mov
or
or
punpckhwd
xchg
and
and
dec
ja
and
and
cmc
cmp
ja
addl
pop
mov
cmp
fninit
rcpps
or
and
jb
lahf
sbb
push
sbb
mov
and
and
and
sbb
mov
pop
push
fs
lock
daa
je
je
and
sbb
aas
and
mov
mov
das
out
into
js
cmp
push
dec
and
gs
adc
push
push
or
or
push
outsl
outsl
je
and
add
test
cmp
mov
push
lods
addr16
nop
ds
pop
mov
lods
push
add
pushf
xchg
mov
je
add
shll
add
add
push
cmp
fisubs
fs
mov
and
and
mov
adcb
cmovge
pop
push
inc
jo
adc
cmovbe
jno
jecxz
iret
dec
test
push
pop
inc
into
test
outsb
popa
dec
movsb
cmp
lods
insl
sbb
or
enter
adc
or
xchg
cmp
adc
loopne
clc
js
pop
push
repnz
fimull
fldl
jb
cmp
jae
push
loop
fwait
bound
stc
shlb
dec
inc
sbb
subb
fs
ljmp
mov
lods
jbe
xchg
test
inc
incl
fcom
cwtl
imull
shlb
call
in
push
mov
and
mov
int3
push
popf
addr16
dec
clc
jnp
push
sub
inc
rolb
push
mov
jbe
out
imul
inc
xor
and
sbb
shll
pop
cmp
addb
lahf
ja
in
filds
mov
jb
dec
rcrb
xor
xchg
sbb
or
adc
mov
xchg
xchg
fadd
scas
inc
adc
popa
popa
add
insb
adc
and
jns
loope
adc
fldt
mov
mov
jne
jo
test
or
cltd
out
add
push
pop
and
xor
mov
lret
arpl
jns
pop
loope
inc
adc
arpl
fwait
or
adc
cmp
push
rcll
xchg
and
add
pop
adc
pop
push
or
mov
push
pop
sub
push
mov
loopne
xchg
cmp
pop
add
pop
push
subb
int3
ljmp
int
and
inc
sbb
iret
movsb
sbb
mov
sub
dec
push
jg
repz
mov
adc
sub
movsb
cmpsl
lock
push
fdivs
sub
and
mov
mov
das
pop
push
mov
dec
das
mov
pop
sbb
sbb
sub
or
stos
ja
fistpl
adc
aaa
add
xchg
inc
add
mov
xor
aaa
jecxz
adc
inc
subb
dec
ss
out
scas
popf
or
jne
xor
flds
pop
adcl
sub
jge
jno
ret
ret
cmp
sub
add
sub
mov
int3
sbb
inc
add
mov
xchg
or
lods
aaa
int3
repnz
adcb
xchg
scas
jo
divb
ja
push
sub
jl
xor
cs
bound
push
cmp
jg
in
adc
inc
test
jne
mov
pop
arpl
add
fs
and
adc
push
adc
movsl
es
leave
sbb
fiaddl
daa
cmp
je
outsb
xchg
into
lea
jb
mov
xchg
aam
dec
fdivrs
aaa
adc
adc
xor
pusha
add
pop
rclb
cmp
mov
push
sbb
add
test
movsl
ret
adc
cmp
aaa
out
popa
insb
stos
add
xorb
ljmp
jbe
mov
pop
xchg
shll
xchg
add
mov
jo
cmp
jle
cmp
push
outsl
cmp
push
xchg
and
jnp
lds
and
inc
pop
ss
es
sar
jb
pop
adc
pop
add
cmp
sub
ret
test
insl
xor
push
add
or
aaa
pop
lcall
loop
jne
adc
dec
xlat
mov
inc
adc
outsb
vpcomw
or
outsl
jo
xor
jne
sarl
cmp
sub
mov
push
jo
dec
add
sbb
jae
lret
popa
pop
inc
inc
outsl
jo
rorb
xor
pusha
insb
jns
or
fnstsw
or
inc
jnp
mov
push
adc
mov
enter
shll
fistpl
shll
ss
test
icebp
cltd
sub
sbb
dec
fidivs
adc
inc
jne
add
dec
jmp
add
inc
popf
jo
dec
sbb
mov
adc
insl
or
push
xchg
sbb
bound
jae
stos
push
movsb
pusha
add
repz
mov
loope
sbb
mov
cmpsb
insb
sbb
inc
xor
imul
mov
pop
inc
dec
push
push
dec
sbb
aaa
dec
and
sbb
and
jnp
xor
mov
clc
sbb
inc
push
push
and
in
cli
cs
sub
aas
xchg
je
aas
or
pop
jnp
ss
cmp
sub
rol
inc
xchg
dec
pop
push
add
dec
outsl
aas
or
sub
das
fsubrs
xchg
and
ja
mov
push
popa
daa
push
and
dec
fdivl
imul
xchg
and
outsb
popa
inc
inc
aaa
cmc
lahf
cmp
pop
pop
sub
and
push
inc
movsb
movsl
dec
add
mov
insb
inc
sbb
inc
pop
xchg
scas
xor
xor
rdmsr
cmc
ffree
xor
sbb
es
push
sub
xor
push
add
imul
into
sub
jae
inc
insb
dec
aaa
dec
pop
push
add
in
push
inc
push
xchg
popa
fmuls
jno
push
xchg
add
pop
popf
push
push
es
fwait
xor
inc
pop
add
push
dec
inc
lret
pop
mov
mov
aas
lret
dec
sbb
dec
roll
jns
push
dec
dec
inc
inc
and
jae
andb
shll
or
sub
out
icebp
sub
mov
cmp
xor
arpl
roll
insb
test
insl
jae,pn
push
jb
outsl
je
jns
popa
insb
pop
mov
inc
sbb
sbbl
aad
mov
orb
push
lock
jo
fsubrs
mov
inc
xor
clc
ficompl
xor
insl
popa
mov
xor
sbb
out
or
data16
pop
cmp
fisttpll
out
sbb
cmpsb
popa
push
push
loope
mov
xsaves
inc
pop
shlb
insl
add
mov
sub
insl
aad
add
push
outsl
addr16
pop
jo
and
adc
adc
or
mov
add
cs
cmpsb
out
and
imul
or
xchg
loope
add
inc
incb
filds
and
push
jae
push
push
jo
xor
bound
ret
mov
jp
popa
insl
dec
add
jge
or
imul
sbb
iret
jmp
or
jne
insl
iret
adc
repz
xchg
test
lahf
test
jl
aam
fwait
imul
sub
sub
or
sub
dec
pusha
test
pop
push
inc
pusha
adc
je
mov
in
or
outsl
dec
dec
inc
cs
push
push
inc
dec
ja
sbb
xor
pushf
call
clc
mov
push
fmuls
mov
sarb
mov
push
ss
mov
push
imul
nop
push
dec
shll
jo
xor
shll
push
dec
dec
inc
shll
sbb
cmpsb
pop
ss
or
cld
sub
in
lcall
int3
sarb
movsb
pushf
cwtl
pop
nop
dec
shll
push
xor
pop
push
push
lcall
cmp
sub
imul
or
dec
xor
cmp
clc
sub
lock
rcr
aam
int3
les
xor
mov
cwtl
xor
shll
test
dec
shll
dec
inc
dec
shll
and
shll
xor
cld
sub
push
call
dec
aam
mov
cltd
xchg
sub
js
push
imul
cmpsb
imul
fidivrl
clc
sub
hlt
sub
sub
adc
sub
rolb
enter
sub
mov
push
push
dec
shll
sbb
jb
dec
shll
je
jbe
shll
jnp
dec
shll
xor
xor
cmp
xor
mov
dec
shll
dec
dec
xor
shll
fcmovnu
inc
push
shll
dec
dec
dec
shll
pop
pop
xor
shll
push
inc
dec
dec
sub
pop
aam
iret
mov
enter
pop
sub
shll
and
xor
and
xor
shll
push
imul
dec
shll
arpl
shll
outsb
imul
cmpsb
imul
imul
cmpsb
loop
mov
sbb
sbb
or
add
cld
scas
pop
push
stos
daa
outsb
hlt
push
lock
daa
imul
call
cmpsb
imul
imul
cmpsb
imul
cwtl
xchg
push
sub
push
test
filds
aaa
inc
stc
inc
pop
push
dec
dec
cmpsb
imul
mov
lcall
pusha
mov
inc
add
ss
shll
not
xor
sbb
aam
xchg
dec
inc
shlb
int3
enter
jnp
dec
xor
mov
lcall
lods
test
mov
sahf
pushf
cwtl
xchg
nop
mov
push
jl
je
xor
shll
push
xor
pop
pop
push
push
dec
dec
ss
shll
inc
cmp
xor
cmpsb
ljmp
push
xorl
aas
ds
pop
xor
jg
lahf
and
push
or
out
dec
por
scas
xchg
cmpsb
jle
jnp
lahf
push
mov
push
filds
push
cmpsb
push
sahf
pop
sub
scas
mov
and
inc
sysexit
jmp
xor
arpl
push
clc
push
push
data16
test
jbe
xchg
jo,pn
cld
repz
gs
and
inc
outsb
fs
bound
cs
pop
and
lret
shrl
cs
lds
imulb
sub
xlat
push
dec
dec
das
lcall
dec
adc
sub
add
idivl
jp
add
and
insb
fildll
gs
xchg
push
imul
inc
jo
imul
stc
sarb
push
sub
xchg
cmp
aaa
ss
xor
pusha
xor
pop
lfs
sbb
xor
cmp
cmp
enter
ss
xor
xor
iret
xchg
cmp
mov
jle
insl
xchg
rcrl
add
sub
xor
sbbl
inc
dec
popa
insb
fucomip
fs
or
push
movb
jo
push
fidivrs
cmp
xlat
jecxz
sahf
jp
je,pt
push
xor
adc
inc
sahf
scas
mov
imul
sub
nop
es
jb
out
insl
sub
xchg
inc
push
gs
cmp
dec
or
fs
lock
push
scas
jno
mov
aaa
out
xorb
dec
adc
add
aaa
pop
cmp
mov
dec
pop
ds
pop
sbb
pop
dec
jb
pop
leave
and
pop
pop
mov
push
inc
jbe
sarl
call
outsl
jcxz
out
cld
fimuls
jne
imul
pusha
push
jae
aaa
jne
xchg
loopne
insb
mov
fs
sbb
aaa
daa
test
jno
push
jecxz
fsubr
into
pop
outsl
bound
jb
jl
ss
punpckhwd
add
jbe
inc
imul
gs
jb
xor
addr16
inc
push
push
xor
mov
adc
daa
out
xchg
push
xorb
popa
pop
inc
jb
insb
jne
popa
pop
subb
sbb
sbb
lea
pop
das
jno
idivl
out
mov
popa
jp
xor
add
jo
es
sahf
xor
cmp
xchg
jecxz
and
in
push
inc
pop
xchg
out
pop
lods
mov
mov
jae
cmpsb
pop
jae
gs
add
cmpsl
jne
inc
adc
rcl
mov
dec
or
outsb
jne
mov
and
popaw
xor
pop
xchg
fildll
out
xchg
fisubrl
scas
je
daa
jle
sbb
ss
cmp
popa
dec
mov
popaw
popa
popa
pop
das
aas
push
push
push
adc
mov
xchg
fisttps
fs
lret
adc
daa
fs
push
add
addr16
mov
rcrl
push
aas
pop
insl
adc
jg
pop
jbe
xor
dec
fstl
pop
ljmp
xor
xor
or
inc
xor
dec
outsb
inc
gs
inc
movsl
lds
jb
pop
in
outsl
inc
dec
inc
outsb
inc
je
cmp
rol
insl
xchg
pop
pop
xchg
and
dec
and
aas
mov
pop
rcrb
mov
push
jno
mov
inc
pop
lds
jg
inc
push
imul
add
dec
inc
dec
inc
mov
cmp
enter
aaa
push
inc
push
push
ja
daa
ret
mov
sbb
pop
sub
xor
dec
dec
push
push
and
or
outsl
sbb
adc
dec
cmp
pop
test
sbb
or
jo
xlat
inc
mov
je
cmp
and
and
and
or
cmp
aas
cmp
rolb
xchg
xchg
add
or
and
adc
or
sahf
push
filds
push
and
lods
cli
lods
imul
repnz
fidivrl
jl
add
push
dec
inc
push
xor
sub
pop
out
dec
dec
dec
pop
jp
add
aaa
add
pop
mov
xor
adc
mov
cmpsl
cmp
bound
jg
inc
jnp
pop
pop
or
mov
fsubrs
cmp
bound
cs
je
nop
xchg
pop
pop
andb
mov
sub
push
faddl
jl
inc
inc
push
jge
pop
rcrl
insb
bound
or
jnp
or
xor
or
add
add
cmp
out
dec
sbbl
mov
mov
pop
inc
jbe
ret
pusha
or
dec
cs
xchg
xchg
xor
cmp
jae
aas
push
ss
inc
pop
push
cmp
and
adc
inc
pop
dec
inc
add
inc
shll
jbe
inc
aaa
ss
push
mov
fiaddl
les
push
xlat
pop
and
mov
adc
xor
add
adc
sub
push
andl
and
add
xor
push
sar
xor
fildll
fildll
push
lea
mov
cmp
aas
dec
outsl
popf
or
mov
add
das
pop
add
adc
pop
xor
add
out
dec
dec
imul
jae
andb
or
aas
insb
xchg
mull
inc
dec
dec
dec
lods
test
dec
sub
sbb
inc
xor
or
imul
jb
ret
data16
pmulhuw
inc
cmp
outsb
or
popa
aad
sbb
adc
mov
xor
shrd
out
xchg
inc
mov
orps
testl
test
xor
nop
and
fdiv
push
loopne
dec
dec
xor
popa
mov
and
cwtl
inc
mov
bound
sbb
pop
movsl
inc
shlb
int
insl
dec
das
es
adc
sbb
cmp
popa
jg
leave
pop
pop
sbb
jle
test
inc
push
push
jg
xor
mov
push
pop
loop
in
fs
mov
ja
pop
sub
inc
pushf
add
mov
jge
outsl
aas
insl
ja,pn
dec
inc
mov
xor
dec
mov
pop
adc
or
fcomps
cltd
sub
push
pop
out
dec
faddl
inc
add
xor
aas
xor
mov
pop
xor
aad
sbb
inc
packuswb
and
arpl
push
scas
and
xor
lods
scas
scas
fadds
push
mov
xchg
int3
test
dec
pop
popa
inc
dec
dec
pusha
xor
xchg
rclb
shrb
das
inc
jns
inc
inc
xor
push
push
aaa
into
pop
and
mov
sahf
push
dec
dec
ficoml
es
jnp
cmpsl
stos
add
sbb
or
sbb
mov
push
scas
pop
daa
xor
aad
pop
xchg
and
push
push
inc
inc
push
inc
outsb
jmp
jne
add
adc
icebp
ds
das
cmc
push
es
pop
inc
inc
jns
add
cmpb
or
push
sahf
pushf
pusha
push
sub
out
xchg
dec
dec
inc
test
leave
ret
dec
or
ljmp
sbb
mov
jno
pop
pop
xor
addb
inc
push
outsb
xor
aad
mov
ja
arpl
jb
pop
les
and
imul
fs
rclb
mov
dec
pop
cmovle
inc
adc
add
sbb
aas
int
adc
lods
rcrl
add
inc
cmp
dec
lods
add
jmp
xor
cmp
rolb
je
pop
add
mov
inc
fisubrl
jne
mov
jns
insl
test
and
sbb
test
xchg
popa
enter
add
insl
adc
dec
push
inc
sbb
dec
and
shlb
mov
cmp
mov
mov
cld
push
mov
popa
sbb
aaa
aaa
dec
adc
movsb
and
popf
jmp
add
and
jns
push
jns
push
jo
jnp
imul
mov
ret
cmp
sbb
ljmp
scas
push
test
mov
sbb
pop
and
xchg
push
xor
xlat
or
push
fdivrs
jbe
xchg
push
xor
cmp
int
push
adc
popa
movl
jle
jo
insl
inc
sub
cs
sub
push
test
jae
dec
lods
fwait
or
and
cs
mov
or
cmp
jae
pushl
inc
cmpsb
jle
arpl
push
and
sbb
xchg
pop
jo
cmovp
pop
push
pushf
adc
inc
test
rcrl
cs
add
inc
pop
sbb
outsl
mov
add
cmp
mov
xor
jae
vmwrite
insb
and
push
jmp
int3
push
mov
test
lgs
jmp
nop
add
xchg
add
rcrb
push
push
js
jo
aad
cmp
lahf
push
dec
push
push
push
test
inc
loopne
pop
out
push
insl
push
dec
push
jb
popa
add
insl
sub
arpl
loope
xchg
push
popa
popa
dec
test
repz
or
jmp
mov
add
arpl
jmp
mov
sbb
dec
mov
loop
dec
aaa
xor
adc
mov
pop
stos
addr16
jno
lea
inc
xor
arpl
mov
lods
adc
jae
test
ret
aaa
ret
movsl
push
insl
cmp
xchg
mov
repz
add
jns
pop
pop
ret
stos
out
insb
inc
xchg
xchg
jbe
ss
inc
mov
imul
dec
or
pop
jecxz
js
add
xor
and
mov
pushl
mov
mov
sub
or
ret
inc
mov
push
data16
imul
fs
jb
push
push
sub
divl
sbb
je
push
mov
out
add
mov
or
pop
ja
inc
aaa
jb
cmp
xchg
add
ja
ja
push
pop
jno
jne
xchg
xchg
inc
mov
cmp
imul
cmp
imul
xchg
pop
inc
push
cs
ja
daa
push
xchg
arpl
push
es
outsb
mov
add
xchg
push
add
push
pop
out
push
push
inc
cmpsw
enter
push
xchg
or
sub
jae,pn
jae
jl
insl
dec
inc
lret
sbb
pop
add
outsb
push
out
or
enter
push
and
push
or
xchg
mov
add
aaa
je
sbb
pop
xchg
stos
jb
xchg
cpuid
fisubs
aad
or
adc
push
push
push
pop
pop
adcl
aaa
or
adc
adc
adc
sbb
iret
xor
or
cmpsb
fists
xchg
out
aas
pop
pop
mov
fadds
cmp
dec
jnp
outsb
aaa
iret
mov
mov
mov
or
xchg
negl
iret
out
dec
fwait
popa
add
out
xchg
mov
js
push
pop
pop
jb
sbb
movsl
pop
ds
jae
inc
cmp
pop
pop
mov
push
and
or
sub
and
sbb
mov
pop
loope
dec
mov
sub
and
fstps
cmp
fsubs
loopne
imul
pop
ss
outsb
cmp
jecxz
test
rcrb
dec
shl
insb
push
push
inc
lods
pop
jp
jb
lods
rcll
cs
lds
mov
bswap
lea
dec
inc
push
lahf
aam
cmp
sub
jo
js
adc
xchg
pop
shlb
and
cmp
sahf
mov
adc
cmp
add
sub
cmp
loopne
imul
push
xor
xor
outsb
sbb
pop
mov
and
popa
add
mov
mov
cld
out
and
addr16
pop
add
cmp
xor
ja
mov
lahf
frstor
fcoml
es
dec
cld
rcl
push
sub
pop
dec
mov
test
and
pop
push
dec
lods
inc
jno
fadds
dec
test
outsb
test
jbe
or
xor
xor
dec
loope
or
and
jmp
lods
xor
adcl
pop
jg
lods
rclb
mov
packssdw
lea
inc
mov
mov
xchg
rcll
outsb
pop
mov
aaa
or
rcl
aam
addr16
rolb
jo
mov
cmovno
and
dec
lods
sub
inc
inc
adc
pop
test
xchg
mov
mov
stos
hlt
cs
lea
xchg
mov
add
inc
mov
pop
or
cmp
mov
xchg
pop
cmp
jecxz
adcl
call
fs
xor
shl
inc
loopne
and
mov
mov
iret
jb
outsl
icebp
sbb
sbb
outsb
jns
and
loope
push
addr16
xchg
and
pop
dec
dec
dec
cmp
ss
lret
popl
mov
inc
mov
or
cs
sub
test
push
mov
jg
jb
inc
and
cmp
xor
xor
or
push
mov
inc
jg
xchg
mov
xchg
xchg
lahf
negl
push
lahf
adc
xor
mov
fcmovb
incb
loop
das
mov
or
sarb
int3
add
js
stc
jle
adc
lods
or
xor
inc
jl
inc
cmp
rolb
jecxz
lret
add
and
pop
jl
sub
push
and
adc
jne
daa
mov
fisttps
push
push
icebp
sbb
or
add
add
ja
dec
imul
sub
jl
push
cmp
push
pop
inc
in
hlt
add
das
dec
ret
pop
pop
pop
push
sub
loope
aas
xchg
inc
mov
rep
mov
stos
push
push
push
push
push
push
or
push
pop
and
iret
push
test
ret
subps
bound
loope
cltd
xor
test
addr16
push
mov
xchg
or
dec
add
dec
xor
dec
inc
int3
push
mov
rorb
pcmpgtb
sahf
dec
cmp
bound
push
push
dec
ss
dec
dec
jp
and
lea
adc
andb
inc
cltd
cmp
cmp
dec
test
fldt
cwtl
push
cmpb
sub
daa
shlb
dec
addr16
movsl
insl
mov
daa
lods
mov
pop
jae
pop
push
imul
sbb
cmp
stc
mov
push
cmp
add
dec
outsl
ret
dec
loopne
aas
add
daa
pop
jb
push
adc
xor
dec
inc
cmp
arpl
mov
out
push
and
push
notb
or
mov
addl
fidivrs
push
sub
addb
adc
mov
add
and
cmpsl
ror
mov
and
xchg
mov
jae
xlat
mov
or
sub
add
push
add
xchg
dec
mov
int3
inc
adc
lret
imul
push
add
fisubrs
imulb
xor
mov
add
cmpsl
in
lcall
test
adc
or
or
jmp
or
fldcw
pop
and
push
dec
inc
popa
pusha
mov
xchg
rorb
xlat
xchg
cs
rorb
ds
sbb
sub
mov
xor
cli
imul
jnp
out
aas
js
insb
and
cmp
or
jae
sub
shl
add
mov
inc
push
cmp
jno
adc
and
aad
mov
push
and
ss
loopne
sub
in
adc
les
incl
mov
andb
jmp
pop
and
outsl
and
sbb
inc
inc
push
inc
dec
and
out
fsubrs
add
pop
jae
sub
inc
add
pop
push
add
mov
push
and
sub
push
inc
cltd
fs
repnz
and
add
test
add
addl
adc
add
push
mov
jg
and
adc
js
inc
nop
and
fsubs
incl
lock
icebp
adc
add
add
xchg
lods
dec
dec
mov
pop
mov
push
add
sbb
or
ret
push
sbb
popa
out
and
jns
fidivl
adc
and
and
push
xor
or
push
das
push
xorps
mov
ret
mov
insl
push
or
jo
jb
ss
or
jb
sbb
nop
inc
lcall
adc
cmpsl
mov
into
aas
movsb
daa
xchg
pop
sbb
add
popf
pop
xor
adc
fbld
jns
jle
repnz
fisttps
mov
cld
inc
jle
and
fiadds
pop
shll
mov
inc
mov
outsl
orl
mov
sbb
in
call
mov
push
add
mov
pop
fisubrl
xor
fcomp
loopne
jae
jle
repz
insl
pop
rorb
sbb
xor
add
and
xor
inc
add
pop
or
sbb
add
cmp
add
mov
or
xor
shll
pushf
adc
fnstenv
adc
mov
imul
imul
dec
shll
jns
jp
cmpb
cld
mov
jmp
inc
mov
add
adc
mov
cmpsl
add
xchg
add
xchg
mov
xor
dec
or
add
sbbl
das
cmp
mov
add
dec
repnz
pushf
or
ret
mov
adc
xchg
cwtl
push
and
jmp
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
jmp
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
call
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
jmp
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
lds
mov
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
paddd
call
mov
outsb
dec
leave
fwait
xchg
and
and
jbe
add
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
ljmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
ljmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
pushl
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
incb
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
call
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
call
cmp
mov
sbb
add
ljmp
scas
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
incl
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
fistpll
pop
ficomps
frstor
pop
inc
push
add
mov
adc
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
push
add
in
mov
insb
gs
push
leave
jae
adc
js
jne
lods
pop
mov
std
pushf
inc
add
imul
sub
cmp
fildl
aam
xchg
imulb
xchg
push
loopne
dec
jmp
imul
dec
inc
sbb
test
push
xchg
dec
pop
sub
gs
xchg
dec
lods
dec
shll
add
mov
push
pop
mov
aaa
adcb
inc
dec
jns
adc
imul
push
push
push
sbb
xchg
gs
xlat
jbe
add
inc
jns
pusha
pmaxub
outsl
push
imul
out
adc
popa
inc
sub
push
imul
movsl
outsb
ficoml
sbb
jbe
fcomp
shlb
sbb
mov
pop
in
xchg
and
fildll
pop
inc
popa
je
out
push
pushf
push
je
mov
and
in
push
or
arpl
sub
jo
gs
sbb
insl
and
sub
adc
or
shrl
adc
ja
mov
mov
push
lcall
mov
push
imul
sbb
sub
shlb
jo
dec
add
inc
pop
xor
sbb
sbb
sub
sbb
sbb
ret
ficoml
cmc
popa
arpl
das
jb
sub
sbb
mov
dec
cs
insl
jge
sbb
sbb
out
popa
dec
push
insb
insb
inc
mov
mov
xlat
dec
imul
inc
out
mov
lcall
pop
or
shrl
sbb
adc
push
fistl
movsb
xor
vaddpd
sub
sbb
inc
dec
push
inc
loopne
shlb
loope
fs
lods
aas
hlt
push
pop
dec
aam
adc
je
ja
subl
outsl
xor
dec
sub
adc
stos
insl
push
xchg
insb
gs
imul
pop
adc
mov
pop
mov
andl
bound
ror
es
xchg
mov
sbb
dec
inc
push
pop
nop
fadds
inc
push
fdivl
inc
pop
cmovg
adc
fnstenv
add
xor
inc
or
xor
bound
pop
ja
ss
push
rcll
adc
jo
add
fldenv
loope
aaa
js
dec
gs
xlat
xchg
imul
mov
adc
pop
gs
scas
dec
xor
add
add
and
add
dec
add
std
cmp
add
rolb
or
push
adc
aam
lret
add
pop
shlb
add
dec
push
insb
adc
xor
dec
mov
pop
sbb
adc
sbb
mov
outsl
mov
repnz
add
fs
aad
in
je
loope
cwtl
inc
xor
mov
push
mov
jb,pn
enter
loope
lds
add
dec
test
arpl
dec
xchg
lock
rolb
aas
int3
mov
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
