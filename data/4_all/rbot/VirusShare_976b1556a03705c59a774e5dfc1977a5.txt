mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
rclb
add
std
jmp
data16
sub
test
enter
imul
cmpl
push
add
lea
loop
add
test
sar
mov
ss
add
or
add
push
pushf
dec
dec
sbb
add
add
jmp
xor
enter
add
repz
push
pushl
push
jne
pop
and
imul
add
rolb
xchg
pop
leave
ret
add
push
or
pop
test
jle
mov
xor
cltd
add
inc
add
sub
push
or
push
in
mov
sbb
aam
andw
cmp
decl
test
adc
pop
stos
rcr
mov
xorb
sbb
add
jne
iret
mov
ret
or
popa
mov
add
or
in
pop
adc
push
adc
jns
outsb
inc
fwait
je
clc
sbb
faddl
ret
test
xorb
cwtl
add
push
lea
sbbb
add
int
jp
add
ret
movsb
lods
cwtl
xchg
scas
and
or
fsubs
mov
daa
pop
or
fwait
push
scas
lea
shlb
adc
cmp
imul
pusha
mov
jmp
shrb
or
in
add
xor
out
hlt
dec
push
in
jmp
add
jg
adc
mov
rolb
jns
push
jnp
ds
pop
jae
out
push
adc
call
lcall
xor
inc
call
ds
pop
mov
pop
mov
scas
inc
clc
pop
mov
lret
sub
xchg
icebp
dec
pop
je
ljmp
add
mov
push
rcrl
icebp
in
test
inc
pop
mov
repnz
push
pop
ja
bound
lea
cld
es
nopl
dec
mov
mov
inc
out
sbb
outsl
aas
mov
dec
jmp
add
sub
orl
iret
arpl
hlt
lock
cli
xorl
pcmpeqd
xor
mov
scas
lock
push
dec
jg
clc
jmp
lods
add
and
sbb
jle
jno
jno
clc
hlt
hlt
lock
loopne
fdiv
clc
shl
add
shll
sbb
mov
xor
dec
mov
add
test
and
add
push
shlb
push
pushf
imul
add
cltd
dec
push
in
add
adcb
dec
push
iret
repnz
lea
fcmovbe
jle
add
add
jle
push
inc
push
sub
push
and
inc
jnp
lds
loopne
mov
in
cld
dec
in
push
push
inc
adc
data16
cmp
jae
mov
fdivs
jmp
push
sub
movl
inc
call
in
gs
int3
xor
imul
rcrb
xor
pushw
mov
cld
movb
adc
cmpl
add
add
imul
in
sbb
adc
inc
mov
cmp
jno
inc
mov
xor
lods
out
imulb
jno
pop
sub
xor
out
adc
repz
push
add
mov
add
cmp
aas
and
addr16
es
xor
gs
or
mov
push
test
push
push
into
jns
test
mov
shrb
lea
jecxz
movsb
dec
out
push
test
fldenv
inc
scas
imul
imul
cmp
incl
lods
loope
dec
add
mov
adc
and
jne
mov
jnp
pop
repnz
bound
loopne
lock
aam
adc
inc
adc
push
je
movsl
jae
out
aas
movsb
nop
dec
cmpsl
loop
push
mov
fimuls
mov
lea
pop
jmp
in
or
and
push
jmp
jmp
dec
jae
push
inc
add
cwtl
test
clc
inc
fwait
and
clc
cmp
jle
add
fmuls
push
pop
lea
arpl
movsl
inc
sbb
rcr
ffree
pushf
and
pop
popl
fsubrs
fisttpl
shl
mov
inc
dec
push
lret
mov
add
pop
cs
dec
mov
mov
stos
cmpsl
loop
std
and
add
jne
jmp
lods
pop
sub
push
lret
test
jp
lret
lds
les
out
inc
sbb
out
into
repnz
sbb
and
xor
adc
mov
sahf
sbb
add
add
test
mov
outsw
loopne
mov
push
leave
fwait
add
int3
push
push
das
fs
add
in
dec
xor
leave
xchg
daa
pop
imul
lea
hlt
mov
xchg
cmp
jg
cltd
inc
or
pop
adc
dec
or
insl
pushw
mov
cmp
out
enter
cmp
pop
js
fdivrs
jmp
sbb
call
pop
repnz
jae
fs
call
je
in
sbb
add
stos
cmp
xor
loopne
hlt
dec
cmp
mov
xchg
int3
pop
mov
fsubrs
aaa
call
pop
nop
mov
rolb
mov
xchg
in
mov
or
pop
pop
leave
ret
test
add
add
cmpsl
jle
push
xchg
dec
xchg
call
jle
lret
cmpsb
add
mov
movsl
sbb
jns
jnp
sub
andb
sub
inc
dec
push
hlt
jmp
push
add
test
sysenter
ds
sbb
jmp
push
lret
xchg
push
push
int3
sbb
inc
popf
fldt
ja
fdivrs
cmp
rolb
push
jb
in
xor
inc
aam
adc
sar
enter
sbb
hlt
jnp
enter
mov
cmp
sbb
lock
call
or
lret
xor
jb
es
xchg
mov
insb
stos
fisttps
jmp
cmc
lret
push
mov
pop
cmp
sbb
adc
inc
shll
or
lock
dec
push
andl
popa
outsl
cld
pop
dec
inc
sbb
xchg
cld
mov
sub
out
sbb
add
and
mov
xchg
pushw
jecxz
icebp
mov
push
or
fisubrl
jecxz
out
dec
or
sub
and
mov
mov
xor
jle
sbb
cld
mov
cwtl
in
pop
fistpl
push
in
inc
lea
jge
jno
cmc
in
insl
andb
push
push
cld
enter
and
add
sbbb
sbb
mov
les
cwtl
sub
js
arpl
in
dec
in
addr16
mov
pop
pop
pop
shlb
ret
push
add
in
inc
sub
cwtl
jmp
pop
stos
dec
mov
cli
inc
inc
inc
inc
clc
lock
mov
push
push
sub
ja
push
jmp
sahf
sbbb
into
and
adc
xor
sbb
adc
notl
out
popa
mov
shlb
add
sti
pop
dec
cwtl
dec
shlb
adc
xchg
cltd
ret
lock
hlt
add
arpl
hlt
lock
test
cmp
cmp
test
jnp
push
and
sbb
or
fsubrs
mov
ja
pop
fsubl
mov
test
mov
add
in
cmpl
std
int3
movsb
mov
leave
fwait
pop
jmp
jno
xor
xchg
adc
out
add
mov
sub
inc
sub
cltd
cmp
hlt
rorl
push
sub
jno
pop
loopne
int3
sbb
sub
jno
pop
sbb
inc
cmp
das
lock
lcall
in
lret
cmp
mov
xchg
sbb
or
pop
je
loopne
mov
inc
cmp
xor
les
inc
adc
xchg
fdivr
in
mov
cli
jbe
push
test
sub
shlb
hlt
test
clc
dec
ret
test
inc
jno
push
dec
cmp
add
clc
pushl
and
outsb
les
jle
insl
lods
pop
inc
cmp
mov
call
pushf
pop
xchg
ficoms
js
mov
in
loope
clc
sub
adc
adc
aam
mov
andl
ret
outsb
and
loopne
adc
pusha
pop
shrb
mov
add
mov
add
stc
incl
fcoml
ror
stc
pop
ds
cmp
clc
push
pop
push
sbb
mov
into
js
mov
push
cmp
sub
lret
jecxz
sbb
or
mov
push
push
jb
push
inc
aam
xlat
int3
xlat
xorb
adc
mov
jb
in
sub
call
stc
lea
sbb
frstor
push
shr
into
jb
adc
pop
sub
cs
sti
mov
push
insb
shll
jne
cmpsb
sub
mov
sbb
mov
xor
mov
and
inc
or
jg
xchg
pop
xorb
test
adc
test
xor
pushw
sbb
pop
lahf
and
dec
mov
inc
mov
lods
fidivrl
imul
nop
insl
mov
cli
shlb
arpl
mov
pop
sbb
popa
xchg
push
xor
sarl
add
sbb
xor
add
pusha
xchg
popf
popa
enter
shll
adc
xchg
jecxz
pop
mov
hlt
aaa
sbb
jno
xor
sub
push
in
movb
enter
out
rcl
in
xor
loop
fdivl
call
inc
mov
or
jne
cmp
dec
mov
jbe
xchg
pop
xor
push
dec
or
add
pusha
push
pop
sahf
cltd
lds
out
std
testb
pusha
je
mov
in
dec
out
jle
in
push
xor
je
inc
dec
shl
xor
scas
in
call
lea
dec
in
lea
jbe
pop
jl
jp
pop
sahf
xchg
jl
adc
lea
fistpll
cmp
jmp
nop
xchg
cwtl
iret
repz
lcall
ds
mov
push
std
dec
outsb
xlat
cwtl
inc
add
or
jo
push
dec
jecxz
addr16
cmpsl
and
movsb
mov
cmp
mov
test
sub
mov
sbb
imul
jb
insb
and
or
add
sbb
cli
hlt
mov
jmp
pop
xor
adc
and
insb
xor
pop
test
mov
push
test
lds
pop
pop
sbb
aas
sbb
and
or
or
mov
cmp
ret
scas
adc
mov
rorb
and
sub
push
push
jne
sbb
js
cltd
mov
call
pop
mov
es
cmp
cmpl
inc
outsl
mov
mov
test
in
lods
sub
mov
adc
jg
hlt
and
jecxz
jmp
push
push
movsb
adc
loop
xor
loopne
adc
pop
fnstenv
or
adc
add
xchg
sbb
or
jecxz
inc
pop
pushw
andl
clc
xor
and
xor
xchg
andl
insb
sub
sub
icebp
inc
out
mov
je
movsb
cs
clc
cmp
cwtl
jge
adc
pushf
popf
xlat
push
jmp
inc
push
cwtl
mov
into
movl
xchg
dec
dec
stc
lret
push
jne
add
and
sbb
adc
test
pushf
cmpsb
add
divb
lods
pop
xor
jmp
jae
bound
aas
enter
fmull
into
cltd
xchg
mov
mov
jge
push
pop
aad
into
push
push
hlt
sub
and
sar
inc
jp
sar
inc
push
push
xor
xor
cmp
cmp
ljmp
dec
sbb
js
shufps
mov
mov
xchg
mov
mov
repz
xchg
pop
and
sti
ss
xchg
pop
outsl
fmuls
pop
addr16
sub
fwait
loope
jg
jg
incb
outsl
cmp
xor
ret
popf
pop
jg
pusha
push
jo
mov
rcr
inc
sahf
mov
sbb
enter
or
inc
xor
divl
call
dec
ss
xor
sbb
test
pop
push
popf
mov
cwtl
ds
mov
jns
aas
sub
sahf
dec
pop
cld
push
loop
out
test
mov
cmp
dec
mov
test
movsl
nop
test
sbb
inc
addb
sbb
stos
push
ret
cld
jecxz
daa
movsb
add
jns
jmp
faddl
jmp
pop
imul
sti
ret
mov
fninit
mov
mov
cmp
adc
test
test
aad
dec
push
xchg
test
push
sub
cmpsl
sub
add
xchg
iret
push
lcall
fs
fs
pushf
cmp
scas
lret
lods
push
pop
adc
or
or
push
insl
nop
loope
mov
mov
add
sti
daa
inc
leave
mov
ret
repz
push
movsb
xor
push
jmp
pop
jmp
push
cwtl
jmp
mov
int3
je
aam
jae
rorl
repnz
repz
inc
pop
lock
pop
jg
in
cmp
sub
sub
hlt
gs
mov
inc
mov
dec
adc
mov
cld
dec
mov
loopne
adc
or
mov
xor
and
xor
mov
rcr
outsl
lods
jno
sbb
hlt
inc
push
adc
sti
cmc
jne
std
inc
daa
fldt
jno
or
iret
in
and
cmp
hlt
sub
jno
lods
hlt
hlt
inc
pop
aam
sbb
cmp
cmp
rol
mov
out
inc
push
push
add
sbb
mov
popf
sbb
clc
ds
pop
add
sbb
test
sbb
mov
je
mov
mov
loope
cmp
dec
rorb
sbb
xchg
shrl
rorb
and
cmp
loope
cmp
daa
sub
pop
fsubrs
fstps
cmp
xchg
sub
fisttpll
fiadds
filds
loope
loop
jo
sbb
jecxz
in
in
out
out
push
xchg
loope
or
jmp
loope
cmp
xor
adc
push
out
dec
lock
xchg
icebp
adc
inc
repz
hlt
aaa
ret
loope
cmp
sbb
clc
sub
inc
insb
mov
xchg
sub
pop
xorb
inc
lea
lret
fs
cmp
jp
stos
out
lods
std
push
sub
js
mov
cmpl
xchg
add
xchg
das
je
inc
in
int3
pop
cmp
mov
inc
sub
push
push
dec
mov
push
pop
dec
dec
sub
sbb
scas
jmp
jecxz
mov
je
imul
mov
scas
push
loopne
ret
push
jp
mov
and
enter
xor
sarl
icebp
mov
out
ret
dec
mov
mov
mov
jp
insb
daa
xchg
sbb
fidivrs
or
sbb
sbb
daa
insl
push
inc
mov
hlt
insl
rcll
jge
daa
adc
inc
sub
rolb
ret
sbb
pusha
adc
int
inc
sbb
sbb
sbb
inc
and
int3
add
add
cltd
jno
shl
dec
add
cli
push
clc
repz
push
lods
orl
inc
into
cli
into
lret
sub
out
mov
mov
jecxz
cmp
xor
cmp
mov
mov
nop
cmp
cmp
mov
mov
lods
lods
sti
inc
cmp
dec
mov
dec
rol
cmp
push
rcl
mov
fsub
iret
cmp
pop
loopne
pop
adc
mov
mov
jb
out
clc
cmp
pusha
lock
fs
push
clc
clc
sbb
call
push
pushl
xchg
jecxz
es
or
mov
ljmp
scas
jo
mov
cmp
je
pop
rcr
mov
pop
popf
std
popf
in
mov
and
add
nop
inc
inc
push
fnstsw
lods
shlb
inc
pop
adc
and
push
loope
leave
sub
add
add
add
sbb
jo
in
inc
lods
pop
pop
push
iret
test
nop
sub
sbb
mov
mov
jp
leave
sbb
lock
ds
sti
inc
sbb
sbb
push
sbb
lock
popf
ja
push
push
fisttpl
pop
inc
pop
stos
in
repnz
adc
stos
mov
loope
jp
cmp
sub
cs
nop
push
sub
bound
add
add
cld
ds
das
test
adc
mov
jg
mov
test
into
jl
adc
fldl
sar
leave
nop
imul
and
add
pop
je
aaa
pop
or
movsl
js
je
sbb
test
outsb
push
adc
cmp
sub
xchg
fldenv
cmp
out
cmp
or
mov
sbb
inc
fldcw
jae
mov
rcll
mov
mov
adc
pop
fidivs
cwtl
push
call
repz
fsubrl
or
mov
test
xor
jbe
stos
xchg
or
lods
cmpsb
aaa
daa
outsb
jp
mov
adc
or
test
popa
dec
xchg
push
aam
add
jle
jno
lea
shlb
nop
add
sarl
pop
lea
jae
imul
jp
jb
mov
xor
outsl
movsb
test
sarb
rcll
mov
mov
fadd
data16
or
lods
adc
aad
cmpsl
sbb
pusha
mov
sbb
cmp
cltd
inc
lock
scas
jo
inc
out
int3
cmp
or
js
lods
add
pusha
jmp
xchg
xor
std
cwtl
cmp
push
cmp
xor
fwait
test
xor
dec
dec
gs
in
lret
mov
cld
iret
push
inc
jne
in
loop
xor
fiadds
jecxz
cld
jnp
or
mov
es
insb
mov
jge
push
cmp
mov
inc
test
inc
idiv
xchg
jae
cmpsb
test
adc
add
cmp
jne
insb
int
insb
cmp
pop
adc
out
mov
add
into
mov
add
and
inc
lret
add
adc
sbb
or
gs
and
inc
popa
dec
or
push
dec
xor
aam
inc
out
loop
xor
setle
or
sub
mov
xchg
mov
sub
aas
stos
adc
or
scas
xchg
jecxz
in
in
arpl
inc
call
lahf
ljmp
mov
fld
ljmp
inc
mov
inc
push
lcall
push
jno
inc
decb
pop
or
mov
iret
pop
hlt
lock
jecxz
push
out
inc
mov
dec
lahf
dec
repnz
cltd
in
add
xor
loop
mov
sub
mov
popa
fs
mov
push
mov
push
pop
dec
pop
bound
sub
in
jp
stos
rcrl
xchg
jg
cmp
mov
jmp
inc
pop
int
mov
movsl
dec
xchg
negl
test
mov
repnz
mov
cltd
aam
cli
and
jns
cmp
clc
xorb
loope
xchg
mov
add
add
shl
mov
rclb
push
idivl
test
pop
in
cmc
and
dec
es
shl
pop
push
out
cmc
lock
adc
mov
mov
test
in
daa
push
cmp
adc
and
adc
lret
mov
and
adc
or
pop
add
aaa
inc
in
pop
xor
lods
cmp
or
in
les
sbb
xchg
fdiv
pop
pop
mov
mov
ret
mov
xor
jmp
test
ror
movsb
repz
inc
out
adc
ss
cmpsb
sbb
pusha
scas
sbb
cmpsb
loop
testl
call
and
mov
and
mov
xchg
loopne
inc
pop
negb
das
popf
cmp
lock
push
lods
push
movsl
adc
dec
dec
pop
cmp
cmp
cmp
negb
negb
cmc
cltd
mov
in
xchg
jae
clc
dec
in
sbb
adc
cmc
into
mov
jne
cld
cmp
cmpsl
adc
mov
daa
es
xchg
inc
jg
pop
je
dec
pop
pushf
fidivrl
in
ds
cld
adc
push
call
push
sar
pop
and
add
sbb
sbb
aad
sub
jle
mov
sbb
jb
pop
test
push
xchg
and
arpl
mov
ja
mov
jne
mov
cmpsl
loop
xchg
int3
xchg
in
xchg
cmp
ret
jle
xchg
mov
or
jge
lods
jo
jge
lock
insb
inc
push
and
in
ficompl
sbb
loop
jae
cmp
je
sbb
dec
dec
mov
mov
xchg
pop
fiaddl
xchg
add
pop
sbbl
add
jge
push
and
mov
imulb
xor
or
xchg
dec
flds
add
mov
aam
inc
out
and
inc
outsl
jp
dec
inc
cmp
or
jb
inc
push
push
fisubl
sbb
lods
popf
cmc
scas
add
aam
mov
jmp
and
inc
xchg
xor
aas
xor
ret
adc
mov
call
add
dec
loop
call
mov
movsl
rol
jmp
lret
mov
stc
or
in
movsl
insl
or
mov
rorb
add
outsb
push
loopne
inc
rcr
in
dec
sub
fs
insb
je
push
insl
mov
out
push
scas
fldl
adcl
lea
jl
into
sbb
lahf
dec
sub
cltd
sbb
dec
adc
pusha
hlt
mov
push
test
insl
dec
push
scas
lea
cltd
push
int3
cli
and
push
popf
sbb
inc
insb
push
hlt
lock
inc
scas
in
in
add
sbb
jge
cmp
int
sbb
mov
mov
pop
mov
sub
mov
popf
inc
lock
mov
push
iret
scas
rep
stos
mov
enter
mov
clc
push
jbe
stos
push
insl
cs
or
fsubrl
dec
bound
aad
sbb
and
or
pusha
mov
lea
mov
sbb
sbb
cmpsb
insl
mov
sbb
adcl
add
pop
xchg
inc
jne
push
and
inc
ja
xor
push
push
fdivl
popf
sbb
jmp
call
test
fdivr
sub
sub
cmp
cmc
or
mov
xchg
xchg
into
stos
and
iret
push
stc
test
in
iret
lock
cmp
hlt
mov
fimuls
call
add
inc
addr16
push
fcoms
test
mov
add
mov
test
lds
in
cltd
cmpsb
lods
fistps
mov
add
std
les
sub
addr16
cmp
add
cwtd
push
pop
idiv
cmp
daa
stos
or
mov
push
adc
mov
push
sbb
and
ja
add
xchg
inc
enter
leave
add
jo
mov
push
icebp
scas
or
adc
jmp
cwtl
mov
xor
clc
cmp
test
ljmp
push
ss
int3
fildll
subb
loopne
sbb
mov
add
cld
cmp
sub
stc
cmp
and
imul
enter
sub
sar
jge
push
sub
sub
dec
pop
ffree
dec
or
les
aaa
repz
faddl
repnz
hlt
mov
jmp
insl
adc
mov
ret
pop
mov
cmpl
test
mov
repz
mov
outsb
mov
je
xor
hlt
leave
shr
pop
cwtl
sahf
jnp
sub
sub
int
daa
ss
push
dec
fldl
lret
stos
mov
adc
ret
cmp
xchg
fistpll
cmp
xor
sub
andb
push
push
mov
popf
jnp
shlb
mov
loop
fcompl
pop
push
inc
pop
pop
add
cmp
shr
loope
cmp
std
pop
pop
testb
sbb
flds
mov
jb
dec
iret
mov
bound
loopne
mov
dec
adcl
mov
imul
mov
lea
mov
shll
dec
push
push
dec
mov
mov
inc
add
fidivs
xlat
sbb
les
xor
mov
jge
or
icebp
into
jp
mov
jno
cltd
mov
and
arpl
lahf
test
mov
cld
jmp
je
pop
xchg
in
mov
out
ret
pop
mov
push
xchg
andb
push
aad
inc
mov
movsb
mov
movsb
adc
dec
lret
adc
jno
push
addr16
loop
add
bnd
pop
loope
addr16
andb
or
insl
mov
xor
ja
add
nop
cld
cld
jns
les
mov
lea
and
mov
cmp
pusha
test
add
inc
stos
jnp
dec
stc
add
and
ret
cmp
lods
or
icebp
fmul
hlt
sbb
loopne
cmp
and
sub
sub
sub
fs
fs
fsubrl
jg
sbb
enter
in
es
lret
lods
test
mov
lock
test
lea
in
push
ficomps
fdivrs
fists
test
pop
xor
stos
sbb
js
scas
mov
dec
notb
notb
das
rolb
fcmovb
out
jl
shlb
sbb
jge
nop
adc
or
pop
mov
lods
loopne
or
rolb
movsb
in
pop
mov
adc
pusha
adc
daa
xor
into
inc
or
fs
aas
scas
adc
jnp
mov
out
in
into
cmp
cmp
icebp
into
rorb
xor
dec
movsb
pop
sbb
hlt
mov
rolb
or
pop
movl
mov
cmpsb
neg
and
push
insb
ljmp
mov
pop
sbb
lods
pop
test
fsubrs
jmp
lea
sub
loop
mov
es
aam
popf
cs
test
test
push
dec
stos
jo
pop
fwait
daa
cld
mov
cwtl
add
movsl
pop
or
sub
inc
bound
movl
push
xchg
adc
int3
push
jo
mov
loopne
mov
jne
hlt
fimull
in
jne
cld
imul
arpl
adc
cmp
xor
inc
ret
int3
std
push
stos
insl
push
insb
push
mov
clc
or
jns
and
push
testb
cmp
pop
frstor
cli
test
fnstenv
lea
push
shlb
cmp
dec
inc
pop
or
push
adc
pop
xchg
iretw
inc
shlb
adc
sub
dec
aam
inc
lock
pop
add
xor
push
scas
adc
mov
jp
jbe
add
fimull
mov
cltd
mov
inc
add
ljmp
cmp
iret
mov
adc
sbb
rcll
mov
add
test
jmp
push
lds
jmp
push
in
fcomps
mov
cmpsl
add
mov
in
popa
test
jo
mov
jmp
mov
jo
pushf
std
rcr
ja
mov
call
push
sti
cmpsl
data16
ss
pop
or
adc
icebp
dec
cwtl
push
pop
push
push
loope
mov
jmp
or
lock
adc
push
xchg
or
push
test
cltd
jge
fsubr
sahf
jo
call
push
push
or
pxor
fimuls
pop
pushf
xor
push
push
mov
mov
clc
mov
mov
ficompl
jno
xor
aam
mov
sahf
movsb
cmp
xlat
adc
popf
aaa
mov
add
sub
xchg
xchg
sub
nop
mov
iret
cmc
and
pop
pop
loopne
jp
loope
call
cmp
cmp
push
fs
push
sbb
lret
jmp
nop
xchg
ds
mov
sbb
test
test
or
jg
mov
mov
add
sub
xchg
xor
jecxz
xor
out
stos
push
test
jmp
fisubrl
jmp
lret
or
loop
lea
or
or
mov
push
sbb
dec
and
cmp
in
xor
jg
cltd
idivl
inc
xlat
pop
hlt
fsts
cltd
dec
add
jbe
inc
inc
movsb
faddl
push
pop
sar
sub
psubb
mov
mov
mov
mov
test
sub
xor
add
and
push
icebp
cli
push
call
faddl
std
push
fbld
icebp
into
inc
jne
dec
mov
mov
hlt
fdivrs
pop
inc
mov
cmp
stos
mov
jo
jno
push
sbb
sbb
xchg
sub
adc
xchg
enter
add
pop
mov
jae
dec
sete
xor
test
aad
mov
jae
mov
dec
subb
cli
leave
mov
jbe
mov
outsb
aaa
jg
inc
sub
les
pushf
jae
add
xlat
mov
in
xorb
das
push
sbb
shr
push
add
or
fmuls
dec
mov
sub
lods
sbbl
decl
lea
pop
cmpsb
pop
sti
pop
rorb
aaa
les
negb
cmp
cli
testl
shlb
cmp
enter
jae
and
lret
insb
cld
mov
popf
sbb
mov
aaa
jo
jo
iret
and
sub
push
sub
call
call
mov
pop
mov
mov
inc
pop
sub
jb
or
lds
sar
fildll
fdivl
fstpl
fisttpl
sbb
in
pop
enter
push
sbb
and
jl
add
push
ss
ds
lock
imul
mov
mov
addr16
mov
jbe
mov
mov
xor
orb
insb
aam
push
cld
and
int3
mov
mov
movl
jne
lret
add
mov
cmp
pop
movsb
inc
xchg
adc
mov
iret
ret
popf
cmp
out
mov
jmp
hlt
ljmp
mov
or
jmp
in
dec
imul
mov
xor
test
add
jp
jmp
adc
lods
push
add
arpl
ds
test
movsl
rclb
mov
sub
xor
xor
dec
fwait
and
enter
les
dec
leave
jae
cmp
rol
jo
pop
enter
mov
sub
fcmovnu
hlt
daa
mov
or
push
lret
inc
les
mov
repz
sbb
mov
shlb
arpl
mov
xor
enter
adc
leave
add
mov
mov
mov
sub
mov
push
fadd
lret
adc
pushf
arpl
js
pop
add
je
add
mov
add
adc
sub
nop
and
adc
inc
or
inc
add
add
dec
sub
loope
lock
push
ja
cld
cmp
lods
adc
clc
daa
xchg
sbb
push
mov
int
push
jmp
mov
je
ja
enter
push
lea
jmp
mov
rolb
mov
fisubl
popa
push
andb
insb
in
or
jo
loopne
jecxz
adc
jne
push
dec
xorb
inc
sahf
lcall
sbb
xorb
dec
out
add
jp
jge
mov
sub
fs
dec
xchg
ficompl
pop
cli
repnz
iret
popf
xlat
insb
jne
je
jl
out
pop
out
cmp
add
dec
popf
addb
into
aad
in
gs
sbb
pusha
shll
sbb
mov
sub
mov
int3
sbb
addl
cld
adc
cmp
sbb
movsb
mov
out
or
push
or
outsb
and
adc
jecxz
lock
rclb
xor
adc
in
and
std
xchg
clc
inc
les
cwtl
inc
enter
hlt
in
test
lds
ret
movsbl
clc
flds
fs
cmp
mov
xchg
cmp
push
inc
les
pop
or
jmp
push
jmp
and
fs
xor
lret
test
or
sbb
pop
pushf
arpl
inc
mov
mov
xchg
mov
in
in
andb
cld
mov
jmp
ret
jmp
push
dec
movsb
fistpl
push
xchg
test
test
or
fsts
movl
mov
or
inc
dec
pushf
cwtl
xor
pop
movsb
aad
cmp
testl
and
adc
sub
pop
jne
mov
movsb
push
pop
loop
in
push
sbb
fdivl
call
adc
cmpsb
movsl
lock
sub
sbb
test
adc
daa
push
jge
in
sbb
aas
mov
and
adc
ret
ficoms
or
push
popf
push
sbb
push
mov
and
mov
ret
loope
jne,pn
dec
jmp
lret
in
push
adc
sub
mov
inc
out
jo
std
andl
out
inc
sbb
es
jbe
popa
ficoms
adc
push
xor
int3
mov
cmp
icebp
adc
pop
mov
imul
cmpsb
mov
mov
andl
adc
mov
pop
imul
jo
jle
mov
push
aam
ja
subb
nop
add
hlt
outsb
bound
or
je
lds
std
enter
jo
xor
xchg
mulb
xchg
dec
in
inc
lds
sbb
dec
cmp
por
stos
push
sahf
movsb
out
cmp
call
lock
fmuls
cmp
adc
bound
das
test
dec
push
icebp
js
push
adc
inc
or
xor
sbb
jbe
push
fs
mov
jmp
sbb
or
mov
pop
je
cmpl
dec
aas
ljmp
inc
push
xor
jnp
jmp
adc
dec
lods
jo
mov
adc
jbe
jle
pop
lods
cmpsb
test
pop
adc
push
addr16
pop
fadd
sbb
aam
pop
insb
js
adc
and
push
pop
pop
inc
xchg
ljmp
sub
popf
mov
dec
cmpsl
call
test
xor
push
sbb
jnp
test
aad
add
test
movsb
pushf
cwtl
add
sarl
pushf
jecxz
mov
jg
mov
in
popf
test
sbb
popa
xchg
cmpsl
push
repz
push
add
push
cli
lock
mov
jno
call
ret
xchg
add
mov
or
icebp
cpuid
adc
imul
imul
mov
iret
inc
rcr
faddl
scas
movsb
mov
mov
dec
int3
test
or
xchg
xor
mov
mov
fmul
cmp
cmpsb
int3
push
movl
push
push
popa
mov
inc
out
mov
jns
push
in
or
inc
clc
jmp
insl
mov
dec
lock
pop
cmp
jmp
jb
inc
mov
fisubrs
xor
mov
lock
mov
je
adc
sub
and
insb
or
cmp
cwtl
mov
jg
mov
hlt
int3
out
mov
pop
mov
lods
xchg
push
xchg
mov
or
shll
cld
sbb
push
mov
pushl
or
adc
nop
test
je
mov
mov
lret
cmp
and
mov
lds
lods
mov
imul
movsb
pushf
or
xchg
pop
pushf
call
fldl
pushf
add
pop
call
cmp
xchg
movl
movsb
add
cmp
cmp
cmp
mov
xor
aad
mov
mov
push
ret
pop
jmp
sbb
roll
add
mov
imul
lock
xor
mov
cmp
mov
lea
push
mov
mov
mov
out
fnstcw
xor
adc
aaa
cmc
mov
push
sbb
ret
mov
mov
cmp
add
jae
or
xor
pop
jbe
sbb
into
mov
add
sbb
jnp
icebp
shl
leave
dec
test
addr16
shrb
test
xor
lcall
fisubrl
adc
mov
js
xchg
in
test
adc
cltd
aaa
mov
cmp
mov
adc
or
adc
pop
or
pop
iret
cmc
loop
mov
xchg
loope
cmp
dec
push
push
xor
scas
push
inc
mov
arpl
mov
inc
fldenv
push
loope
xchg
mov
push
dec
mov
inc
or
loopne
push
ret
add
xchg
dec
or
push
mov
mov
dec
and
hlt
sub
mov
in
adc
push
pushf
pop
push
mov
sub
xchg
and
jne
test
and
xchg
mov
mov
xchg
pop
mov
cmpsl
push
int
xchg
sbb
es
sub
mov
adcb
add
dec
push
jmp
je
cmpsb
xchg
and
das
push
jge
push
in
jle
sbb
jmp
mov
cmp
xor
jmp
sub
fs
xchg
hlt
call
dec
mov
les
and
in
ret
xchg
dec
sbb
sbb
adc
outsb
pushf
stos
xor
notl
jb
push
mov
pop
mov
arpl
inc
call
fs
cmpsl
jne
mov
and
pop
sub
xor
incb
push
mov
test
filds
mov
push
int3
cmp
add
mov
fldenv
dec
pop
fists
and
je
iret
stc
ret
xchg
call
dec
push
dec
ljmp
in
mov
scas
pop
push
jno
sbb
fbld
sub
dec
push
ss
push
out
push
mov
ret
lods
cld
repnz
or
jo
scas
fistpll
pop
inc
or
std
movsl
sbb
sbb
jne
faddp
inc
push
sbb
hlt
inc
pop
xchg
outsl
jle
xor
and
or
and
jae
sub
or
lods
aam
mov
mov
out
lea
cli
sbb
dec
pop
jl
jmp
adc
aas
rolb
add
xlat
mov
data16
mov
arpl
xchg
lret
sbb
cmp
fnstenv
inc
leave
xchg
addb
add
insl
leave
mov
bound
sub
xor
inc
nop
arpl
xchg
fsubr
fwait
inc
and
adc
jno
aam
xor
add
call
sub
mov
aad
xor
in
adc
js
add
sub
jae
jle
mov
mov
cld
jg
rcr
clc
push
xor
jecxz
test
aaa
or
add
add
sbb
add
push
pusha
cmp
cltd
in
out
add
xchg
aad
mov
and
xchg
leave
mov
ljmp
jmp
mov
push
mov
xchg
jecxz
adc
or
out
pop
je
insl
repz
xor
cmp
xchg
test
ret
adc
data16
lret
cmp
inc
fsubr
xor
xchg
xchg
push
push
lahf
test
jmp
out
rcr
sbb
nop
sti
xor
aaa
jecxz
rol
xor
ja
hlt
fcompl
jbe
mov
fisubs
scas
inc
lods
ljmp
mov
lahf
dec
xchg
mov
lds
lock
sbb
mov
mov
inc
dec
cmp
sub
mov
das
push
jmp
xor
push
cltd
xchg
add
ds
add
mov
inc
xchg
mov
push
pop
xor
pop
clc
clc
imul
aad
pushf
nop
clc
mov
xchg
jg
dec
adc
dec
fisttps
inc
or
test
or
xchg
xor
adc
cmp
pop
pusha
add
push
and
pop
inc
jmp
das
ret
mov
fistpl
iret
push
cmp
stos
xor
lahf
sbb
in
in
jbe
fisubs
in
in
ljmp
test
sbb
sbb
lds
mov
pushf
test
cmp
or
sti
push
mov
subl
pushf
into
test
mov
jnp
adc
sub
mov
mov
mov
jbe
je
sub
push
sub
adcl
rcr
mov
movsb
add
pushf
in
mov
or
xchg
inc
fwait
push
imul
popf
aam
xchg
cld
insb
xchg
cmpsl
loop
pop
push
xor
icebp
test
cmp
mov
arpl
jae
test
cld
sbb
jmp
in
or
or
in
je
push
ficomps
push
aam
nop
push
mov
mov
push
ljmp
push
iret
sub
xchg
cli
js
hlt
in
out
pop
addr16
int3
nop
popf
xor
and
dec
xchg
das
loopne
mov
sbb
push
nop
cmp
sub
jmp
jne
sbb
aad
je
push
out
and
xor
jl
jg
jbe
and
inc
in
add
cmp
popf
sbb
clc
pop
cmp
shr
mov
adc
popa
inc
sbb
testl
jno
add
rclb
inc
hlt
mov
inc
enter
dec
shr
icebp
rcr
hlt
ficoml
lcall
push
mov
inc
enter
cmp
jae
dec
fsubrs
enter
xor
xor
xor
mov
imul
inc
das
test
pop
fidivrs
sbb
mov
cmp
into
movsb
pop
lret
add
int
jnp
mov
insb
mov
popf
outsb
mov
cmpsl
popa
jne
mov
sub
adc
je
jmp
dec
dec
repz
xchg
fs
jo
inc
jg
lret
jns
sti
cmp
xor
stos
sbb
es
jmp
clc
mov
ss
jmp
shrl
jmp
in
dec
add
push
int3
ret
mov
xchg
or
mov
stc
dec
push
jl
in
orl
fucomp
mov
cld
xor
push
fdivrl
insb
cmp
inc
dec
in
movsb
data16
mov
leave
and
sbb
pop
rorl
hlt
dec
addr16
jns
int3
test
mov
xor
cltd
sbb
jmp
cli
inc
or
push
fwait
pop
fisttpll
sub
adc
mov
push
mov
daa
shll
sbb
loopne
push
movsb
in
xchg
push
shlb
into
add
data16
jecxz
out
xchg
lock
aaa
leave
mov
push
or
lcall
xchg
leave
test
jg
push
and
xor
sbb
out
push
std
push
jo
push
sbb
dec
cmpb
test
inc
clc
push
jnp
andb
or
push
test
push
insl
int
dec
imull
mov
mov
push
or
push
lods
clc
icebp
inc
dec
cmp
cmp
push
in
sbb
jl
jo
lock
jbe
adc
jbe
cltd
call
cltd
in
sub
out
dec
dec
add
add
pop
sub
aad
pop
daa
inc
adc
fwait
aas
test
fadds
in
mov
jl
push
enter
enter
test
mov
lock
pushf
cld
insl
mov
aad
mov
test
pop
cli
test
xor
push
into
roll
push
adc
or
mov
dec
jle
cli
loopne
js
pushf
jmp
in
xchg
in
adc
dec
pop
imul
movsl
adc
outsb
push
add
push
dec
out
jno
pusha
bound
jge
push
cmp
testb
insl
rcl
mov
mov
adc
push
push
add
cltd
cmc
rolb
add
in
push
adc
sbb
add
fadds
sub
iret
jmp
or
push
inc
movsl
and
jbe
push
adc
and
xchg
out
mov
sub
xchg
sbb
inc
int
ljmp
push
nop
loop
ds
push
cmp
pusha
nop
cld
leave
push
lcall
sbb
xor
mov
sub
push
pop
fadds
jmp
xorb
rcrl
out
inc
jl
xchg
adc
xchg
pop
sbb
sub
push
mov
in
imul
or
mov
xor
dec
add
stos
cli
nopl
xchg
and
mov
inc
pushf
jmp
std
insl
adc
dec
mov
or
jmp
sbb
in
nop
cmp
stos
sbb
add
inc
inc
lcall
adc
shrb
clc
xor
filds
ljmp
movsb
hlt
jbe
jle
ja
sub
sbb
xor
mov
pop
cltd
xchg
insl
jns
jno
or
aad
jne
sbb
xchg
jne
sbb
xchg
push
cmp
add
sub
cmp
xor
movsb
and
sub
dec
loope
mov
jae
test
in
pop
jne
sbb
das
jmp
fldenv
sub
mov
push
stos
mov
jp
pop
pusha
sti
cmp
jns
sbb
sti
adc
sub
out
aam
sti
mov
das
movsl
sti
insl
inc
pop
pop
cli
dec
dec
pop
sub
in
add
sbb
mov
enter
dec
add
and
loope
out
push
outsb
pop
push
sbb
in
fadds
out
shl
leave
ds
xor
mov
push
push
popf
mov
cmp
xchg
bound
jo
push
pop
leave
push
inc
and
push
or
add
push
xor
and
icebp
sub
cmpsl
lret
or
cmpl
hlt
mov
sbb
pop
mov
mov
sub
xchg
xor
pop
dec
scas
dec
in
jo
insb
test
mov
pop
and
sub
ficomps
in
arpl
and
adc
aaa
cmp
lds
iret
ljmp
jns
pop
push
or
sbb
pop
test
cld
xchg
adc
pop
sbb
or
lock
mov
adc
xchg
movb
inc
push
push
push
and
and
das
mov
and
repnz
xor
arpl
mov
lea
shl
mov
dec
adc
mov
mov
mov
test
mov
cmp
mov
repnz
mov
mov
xchg
stc
mov
jmp
xchg
xor
fwait
jge
mov
and
lea
out
jle
out
call
cmp
ss
push
int
xchg
cltd
sbb
pop
cmpsl
jo
aaa
dec
inc
lret
jle
pop
adc
push
cmpl
jo
push
pop
jge
pop
push
mov
imul
push
rclb
out
hlt
push
mov
jle
hlt
mov
push
pop
inc
mov
icebp
xchg
mov
sbb
pop
rolb
add
ljmp
clc
mov
pop
shll
ficompl
lods
into
shlb
push
jbe
mov
cmp
push
in
mov
lods
pusha
jg
jns
fnstenv
add
aam
adc
dec
sub
mov
add
add
adc
adc
dec
mov
in
push
jae
test
loopne
mov
mov
test
aam
mov
mov
jnp
scas
adc
mov
popa
or
gs
jno
mov
add
jmp
cmp
pop
xor
arpl
pop
int3
or
hlt
xor
jne
inc
inc
inc
dec
cmpsb
sarl
sub
mov
rorb
les
gs
gs
in
pop
les
push
pop
sub
jae
cmpsl
fwait
dec
or
pushf
or
jl
sahf
enter
test
or
xor
add
out
push
mov
push
imul
insb
mov
cld
push
inc
dec
inc
imul
xchg
sub
jmp
insl
outsb
inc
sbb
xchg
fisubl
adc
inc
or
pusha
out
dec
sub
faddl
and
adc
push
sub
in
dec
inc
stc
mov
sub
push
pop
push
cltd
leave
xor
les
cltd
or
cwtl
add
iret
jp
adc
sub
gs
movsb
iret
clc
mov
dec
dec
mov
xchg
hlt
or
stc
test
mov
test
mov
push
push
stc
push
cld
adc
xor
add
jmp
stc
jno
dec
lds
push
or
stc
popa
sahf
pushf
rcrl
in
pop
mov
mov
adc
cwtl
or
pop
mov
sahf
imull
ret
xchg
add
jmp
inc
xchg
cmp
add
or
shrb
sub
roll
sbb
sbb
jge
dec
and
mov
je
push
xor
mov
dec
mov
popa
lds
cmpb
mov
xorb
or
xchg
outsb
jle
mov
stc
and
sbb
pop
xor
adc
jno
mov
pop
push
push
jge
inc
inc
aad
sub
add
push
push
mov
add
sbb
cmpl
cmp
mov
inc
aam
popa
repnz
jns
test
scas
pusha
or
mov
lcall
loop
test
mov
jbe
mov
in
repz
cmp
add
jle
leave
mov
mov
ror
inc
add
jl
xchg
scas
add
push
mov
das
add
adc
jne
movsb
adc
stc
cmpl
push
xor
push
mov
lock
ds
mov
sbb
cmpsl
sbb
loopne
xor
lods
adc
dec
or
out
mov
int3
xchg
in
mov
sub
unpcklps
int3
fldcw
les
nop
and
jo
xor
or
mov
sub
xor
xor
icebp
sarb
mov
lea
mov
add
fcomp
cmpsl
ret
push
or
outsl
xor
mov
orb
loope
xor
add
mov
js
mov
cmc
clc
mov
sti
or
out
push
lcall
je
dec
jecxz
push
pushf
inc
cmp
loopne,pt
push
and
arpl
loopne
lock
pop
inc
adc
jne
imul
and
sbb
ret
xchg
je
jb
mov
add
jecxz
mov
pop
sub
sahf
in
cld
inc
mov
es
scas
sbb
pop
xor
inc
cmp
ss
dec
aad
mov
rorb
mov
int3
and
daa
mov
and
adc
mov
mov
fdivrl
mov
imul
enter
dec
outsb
pushf
std
lahf
sub
aam
dec
test
insl
mov
pop
scas
lahf
mov
mov
push
mov
jno
ds
cmp
je
stos
xchg
cmpsb
push
push
dec
inc
loopne
lret
mov
adc
rcll
push
or
and
pop
pop
cwtl
sub
stc
or
popf
call
dec
pop
in
xchg
xor
dec
sbb
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
loopne
mov
push
mov
adc
cmp
fcompl
test
sub
out
movsl
test
pushf
and
push
cli
rcr
addb
pushf
and
popf
jge
dec
and
rcr
inc
xor
dec
jge
dec
fcompl
mov
into
ds
movsb
popa
les
lds
cmp
in
cmpb
add
sbb
ss
mov
sub
inc
das
sbb
dec
pop
adc
and
ss
add
movl
and
loop
cmp
dec
pop
insb
pop
push
mov
adc
pop
inc
mov
jg
inc
adc
pop
data16
repz
fcom
sti
call
ljmp
jecxz
movsl
inc
clc
dec
and
sub
sti
call
data16
ds
fcomps
mov
jg
les
addr16
sbb
sub
mov
popl
fs
adc
cmp
in
flds
push
pop
xchg
sub
lret
insb
add
push
stc
fs
sahf
cmp
xchg
sbb
jbe
dec
inc
subb
and
push
or
mov
into
xchg
xor
mov
pop
pop
aam
in
gs
enter
es
sub
mov
mov
xor
aas
mov
push
inc
pop
dec
call
rcl
inc
pop
sub
rcrl
push
inc
loope
pusha
cmp
fldl
xor
ds
jo
and
insb
fs
je
test
ds
sbbb
lahf
lods
jo
mov
insb
dec
pop
ljmp
cmpb
dec
movsl
pushf
call
push
push
push
dec
fsubrs
ja
fcomp
or
sbb
movsl
sbb
xchg
push
shrb
jge
mov
sbb
lods
cmp
rcr
rcrb
cmp
or
push
inc
enter
pusha
loopne
cmp
jne
aas
test
les
push
hlt
mov
loopne
sbb
cs
shl
inc
cs
imul
xchg
je
jns
cwtl
and
mov
and
adc
mov
rcr
fadd
not
frndint
in
cwtl
mov
mov
clc
inc
inc
pop
cmp
add
mov
call
mov
and
sub
mov
jl
inc
xor
cmp
xchg
mov
loopne
jmp
jge
xchg
dec
push
into
xchg
outsb
test
call
movsb
insb
pop
fldenv
sti
adc
inc
addr16
andb
xchg
jge
notb
pop
sub
in
repz
and
sarb
inc
xlat
cmp
and
into
cwtl
xchg
push
mov
addr16
cwtl
or
pop
jbe
cld
add
jae
xor
shll
add
aad
xor
xor
and
addr16
fnstcw
addr16
iret
mov
fidivrs
cltd
andb
and
jb
into
mov
insb
xchg
arpl
in
cmp
jge
mov
movsb
ljmp
insb
xor
nop
cmpl
mov
stos
mov
jno
cmp
loopne
xor
add
das
loopne
in
aam
inc
pop
cmp
adc
inc
and
out
iret
sub
and
and
call
pusha
jge
das
mov
pop
dec
lret
mov
mov
jb
push
dec
inc
popf
shrb
mov
mov
test
adc
mov
daa
mov
lret
dec
fincstp
repz
shlb
mov
mov
sub
inc
push
int3
pop
andl
shrl
out
outsb
push
loop
enter
cwtl
enter
out
push
inc
mov
clc
mov
or
int
dec
mov
insb
jo
stos
xor
or
cmp
popf
pop
sbb
and
into
xchg
push
xor
sti
call
push
ds
jge
or
push
mov
into
pusha
test
push
sti
call
and
lea
pop
cmpsb
popa
push
mov
cld
jg
addr16
iret
mov
jne
push
push
in
push
push
cmp
je
mov
bound
les
out
rcl
inc
addr16
in
call
je
in
inc
sbb
jmp
push
or
xchg
or
mov
xor
clc
and
fxch
fmul
hlt
clc
inc
jne
push
hlt
test
test
flds
xchg
inc
xchg
cmp
pop
sti
call
jno
jge
in
test
push
aas
nop
sbb
ljmp
mov
pushf
xor
daa
movsb
scas
cld
in
mov
pop
in
inc
stc
sub
aad
xchg
cwtl
xchg
sbb
jns
enter
inc
xlat
adc
pop
add
and
rcl
arpl
or
add
fwait
jge
negb
nop
icebp
mov
add
push
out
sub
cmp
sbb
mov
pushf
cmp
call
stc
shll
aam
popf
fimull
xchg
inc
fwait
lods
aam
ljmp
push
ror
movsb
sti
lcall
cmp
pushl
push
push
mov
push
push
inc
decb
cwtl
decb
mov
mov
decb
in
mov
jge
mov
insb
jo
xor
inc
inc
popf
je
xor
inc
sbb
inc
inc
sbb
inc
inc
sbb
mov
xor
push
fistps
xor
test
out
movsb
test
pop
imul
repz
mov
sbb
in
dec
mov
adc
lock
adc
hlt
mov
push
jo
sub
rcrl
dec
xor
jne
dec
movsl
xchg
or
call
lret
sub
das
loopne
pop
jl
stc
lcall
fs
add
add
sub
bnd
push
mov
shrl
int3
sbb
mov
mov
lds
jbe
cld
pop
jo
cmpl
testl
or
jno
fisubrs
ret
shlb
inc
into
inc
mov
sub
cmpl
adc
dec
or
mov
clc
adc
fs
jmp
push
mov
jmp
add
push
inc
mov
inc
xor
mov
mov
or
pop
fimuls
sets
aas
add
shlb
cwtl
add
dec
adc
jno
out
or
icebp
cmp
xor
mov
xchg
add
jmp
xchg
mov
pop
or
out
dec
mov
push
ss
cmp
pusha
icebp
push
adc
jns
cmpsb
rcll
ja
inc
stc
pushl
rcl
js
mov
jne
push
mov
mov
jl
js
sbb
insb
cmp
sbbl
sub
mov
or
movsb
inc
pop
push
arpl
mov
add
push
pop
xor
adc
mov
cmp
jmp
rolb
sarb
mov
mov
mov
xor
je
xor
aaa
popf
insb
push
js
pushf
shrb
jg
xchg
mov
sub
cmpsl
lea
mov
xchg
loopne
xchg
cmpsl
jnp
arpl
mov
stos
or
fiadds
and
dec
out
xchg
arpl
pop
cmp
repz
ja
lahf
call
in
ds
lret
push
sbb
lods
lods
inc
lock
jo
lods
mov
addr16
shrb
lldt
bound
push
push
in
push
loope
jae
xchg
loop
cmp
dec
cld
cmp
enter
jmp
push
cmc
ret
aas
sbb
xor
loope
inc
xchg
mov
inc
cli
xchg
pusha
sti
inc
push
or
push
int3
or
negl
ja
push
shr
inc
lock
mov
or
add
mov
jbe
xchg
push
xor
aaa
stos
pop
sahf
inc
test
addr16
dec
mov
fsubr
std
jle
iret
push
cmp
xchg
out
ficomps
cmp
mov
push
pop
sbb
or
je
xor
mov
scas
imul
and
ds
stos
mov
pop
ljmp
push
arpl
adc
jbe
pop
lret
aas
xlat
mov
in
std
je
dec
cwtl
in
sbb
stos
push
and
push
sub
inc
push
push
mov
xor
adc
or
stos
inc
aad
jns
lret
add
jb
test
roll
loopne
out
push
je
cld
inc
cmp
sub
clc
ljmp
xor
add
insl
sbb
cmp
cmp
and
cmp
inc
push
mov
mov
or
cmp
pop
and
jg
adc
xor
dec
push
scas
pop
adc
clc
xor
or
jge
shrl
icebp
out
adc
push
mov
pop
xor
pop
inc
sub
es
cmp
dec
adc
xor
push
pop
rorb
je
or
andb
aad
mov
mov
dec
inc
jo
divb
mov
xor
sub
shlb
sub
test
sbb
pop
pop
or
mov
imul
int
cmpb
push
or
sbb
add
loop
sub
push
dec
cmp
mov
sub
pushf
push
mov
nop
ss
rol
sub
lea
test
stc
pop
mov
sub
push
pusha
fs
or
pusha
movsb
mov
daa
adc
icebp
fdivl
jb
push
out
out
xor
mov
imul
es
sub
daa
sbb
xchg
dec
cmp
fmul
cmc
subb
mov
inc
cld
sahf
dec
mov
arpl
aam
hlt
cmp
jmp
mov
push
sbb
out
mov
sub
mov
clc
inc
ret
lret
push
aas
sub
and
enter
jl
rcrl
in
ljmp
inc
dec
xchg
or
js
out
aam
mov
into
into
add
adc
mov
pop
test
jmp
or
loope
shll
gs
lea
push
push
lret
je,pn
and
lods
dec
sarb
xorl
xor
pop
mov
jae
bound
sbb
dec
call
inc
dec
pop
mov
push
and
mov
sahf
sub
xchg
sahf
mov
in
dec
cwtl
fsubr
cmp
je
push
test
add
cltd
add
or
lret
fadds
out
fnstcw
nop
pop
hlt
hlt
lcall
mov
push
popf
leave
subl
sub
lret
mov
adc
mov
push
pop
loope
and
shll
jne
inc
cmpb
gs
loopne
or
call
cwtl
mov
pop
in
adc
mov
add
ja
testb
or
fcoml
add
sti
xchg
jae
push
mov
and
dec
enter
hlt
lea
or
and
dec
push
imul
mov
fwait
mov
data16
lods
sbb
mov
and
mov
jo
pusha
inc
inc
sub
add
and
test
and
push
push
add
mov
fadd
mov
leave
sbb
pop
arpl
ds
clc
xorb
pop
test
and
cwtl
pop
inc
test
fcmovnb
or
hlt
fxtract
std
mov
xchg
es
jg
nop
je
aad
clc
push
in
adc
and
shrl
test
push
cwtl
clc
into
mov
xchg
test
mov
cltd
push
lea
push
clc
fsubs
test
cmc
mov
stos
lods
inc
lods
push
mov
adc
fs
mov
loop
clc
std
ss
cmpsb
xchg
fldpi
imul
or
out
sbb
scas
movsl
cmp
mov
rorl
insb
cmc
in
iret
into
and
sub
arpl
jecxz
sti
hlt
idiv
cmp
mull
and
sbb
or
inc
in
mov
adc
loopne
es
les
add
xchg
into
pop
and
movsl
imul
pop
je
add
iret
shrl
nop
div
lea
mov
cmpl
test
movsl
shl
fs
test
pop
popa
out
cmp
out
lea
ret
fidivl
imul
mov
mov
test
push
push
inc
aam
xchg
push
dec
sbb
movsb
pushf
rorl
sbb
push
mov
daa
fimuls
mov
jns
ret
cwtl
xchg
cltd
inc
sti
xchg
enter
mov
not
bound
ffreep
and
jno
mov
cwtl
mov
in
enter
hlt
xor
in
pushf
mov
enter
mov
movsb
pop
jl
push
pop
mov
aam
lret
xor
inc
icebp
test
bound
inc
push
movsb
fisubrl
popl
and
stc
into
and
mov
and
imul
cwtl
insl
pop
iret
add
add
arpl
mov
add
push
dec
sarb
lahf
idivl
stc
mov
and
leave
lds
mov
pop
repz
aas
push
push
testl
divl
jl
push
testl
xor
xor
sbb
fisubrs
out
lods
cli
push
shll
not
jbe
adc
mov
leave
lret
jnp
jg
rolb
nop
xchg
repz
hlt
or
dec
popf
mov
js
lcall
mov
push
es
and
es
cmp
sub
nop
or
insb
scas
stc
pushf
fsts
fs
cmp
inc
push
sbb
nop
test
sbb
mov
sub
or
push
push
adcb
inc
ds
call
xchg
xlat
pop
and
sarb
push
jmp
xchg
add
in
push
rclb
or
inc
jb
bound
or
push
into
add
jnp
lret
out
or
lods
push
sbb
clc
lret
fisubrs
pop
int3
or
push
cmp
jne
jne
jmp
rcrb
jb
je
lock
add
pop
push
jle
shlb
jmp
mov
scas
fsubrs
testb
data16
sub
mov
and
mov
push
addr16
and
lea
lea
add
jo
add
xchg
test
xchg
lds
sti
push
add
jno
daa
add
cmp
push
out
jnp
cld
inc
xor
out
fnstcw
sbb
sbb
xchg
push
jno
clc
mov
pop
lret
out
enter
aam
sub
sub
imul
rorb
mov
xor
inc
pusha
xor
mov
test
sbb
dec
pop
mov
mov
push
or
cld
push
cmp
mov
cld
sub
inc
fcomps
add
mov
sub
loopne
inc
push
out
pause
cmp
mov
orl
dec
pop
mov
gs
sub
int3
neg
push
ret
add
or
mov
jecxz
xor
loopne
fnstsw
ret
cmp
fsubr
fldl
or
add
or
add
pop
or
add
push
andl
jns
xchg
mov
adc
fiaddl
icebp
hlt
fmuls
xchg
xor
add
cmp
and
adc
adc
pusha
or
test
jo
int3
fmull
adc
jge
cmp
test
fs
xor
cmpsl
sbb
inc
push
out
aas
add
mov
pop
jl
roll
je
add
jle
pop
xor
pop
add
popf
loop
movl
cmp
adc
fisubrl
sbb
loopne
mov
push
mov
dec
push
push
outsb
xchg
xor
mov
js
in
cmp
popa
mov
lock
or
or
pop
adc
ret
push
xchg
into
je
sbb
push
out
push
ja
dec
lcall
adc
xchg
jmp
pusha
ss
cwtl
mov
pop
push
daa
sti
dec
add
nop
adc
or
ds
or
and
jbe
mov
jmp
rclb
insb
inc
mov
out
js
sub
addr16
int
test
lods
cmp
mov
mov
adc
rorb
lret
push
xchg
mov
push
and
sbb
shll
mov
sub
sub
pop
or
mov
jl
fs
addr16
xor
mov
sbb
xchg
xchg
popa
jmp
cwtl
in
pusha
ret
adc
jp
test
sarb
aam
pop
outsb
hlt
fadd
push
call
adc
mov
adc
loopne
jp
xchg
test
mov
inc
push
hlt
test
push
sub
pop
in
jl
adc
cmc
mov
frstor
inc
mov
jne
sub
hlt
mov
mov
add
mov
lods
push
inc
xor
mov
sahf
xor
push
mov
add
push
cmp
shll
shlb
call
int3
inc
mov
lock
push
notb
cmp
mov
or
xor
cld
movl
outsb
cmp
in
inc
test
jns
jo
int3
pop
fsubrs
inc
cld
push
movl
or
dec
mov
adc
xor
rol
sub
iret
and
in
test
xchg
add
insl
out
mov
rcll
push
sub
in
lds
popa
out
lods
cmpsb
aad
jp
inc
in
test
into
lods
aad
inc
les
cmp
push
xor
cwtl
pop
cmp
sub
inc
sub
inc
test
jne
sub
fldl
mov
iret
cs
shll
cld
pop
adc
add
in
repnz
and
lods
dec
pop
stos
inc
jns
aad
cwtl
movsb
mov
lock
aam
xor
mov
in
or
dec
push
mov
xchg
cmpsb
cmp
iret
sbb
dec
call
test
pop
cmp
sbb
imul
lea
and
and
test
imul
add
mov
pop
mov
or
pop
jb
mov
repz
mov
pop
ljmp
lods
sahf
add
in
mov
std
and
mov
adc
adc
sbb
and
lock
cmp
popf
clc
adc
dec
pop
adc
or
dec
push
iret
or
pop
push
pop
sbb
cmp
push
pop
sbb
sub
je
jge
cmpsb
mov
push
movsb
dec
sub
jge
cli
xor
les
push
fmuls
push
pop
dec
push
adc
jmp
sub
rcrl
dec
cmpsb
ds
add
dec
icebp
leave
mov
insl
sub
xchg
lds
dec
call
in
fdiv
popa
jp
xchg
pop
dec
in
sbb
lock
mov
dec
call
fs
movsl
in
out
mov
pop
loopne
in
jmp
rcll
sahf
int
pusha
int3
aam
sub
pushf
inc
mov
jae
mov
push
test
loopne
loope
xchg
jmp
fstps
inc
or
mov
or
dec
mov
loopne
ss
push
in
sub
icebp
test
or
jp
aam
sti
pop
scas
loopne
test
or
pop
sbb
or
sub
cltd
xor
daa
insb
loopne
fabs
clc
or
add
inc
jno
shlb
jmp
dec
jl
imul
sbb
push
jbe
addl
xor
inc
cmp
add
ja
mov
lret
mov
lods
loop
sbb
mov
in
xchg
sbb
cli
loope
push
or
call
rorl
push
into
push
or
fistps
cld
sbb
in
mov
xor
in
into
pop
sbbb
call
or
sub
addr16
jo
jne
dec
pop
push
pcmpeqw
aaa
push
dec
insb
aas
test
adc
mov
add
add
dec
lock
sbb
out
adc
push
sbb
stc
or
cltd
xchg
loopne
pop
adc
mov
mov
fdivs
lock
aas
inc
jns
shlb
push
aad
jle
mov
cmpsb
loop
or
adc
stos
pop
sbb
sti
push
dec
or
pop
scas
rcl
ret
sub
push
mov
add
push
test
jl
inc
xchg
sub
xor
sub
or
and
sbb
je
push
add
push
in
cmp
int3
mov
fwait
xchg
jbe
sbb
sbb
test
fnstcw
xor
dec
in
mov
sub
push
insb
sbb
sbb
daa
xchg
and
cmp
sub
int3
cmp
ret
xchg
je
pop
xchg
movsl
add
rclb
or
inc
jp
into
or
mov
mov
ljmp
mov
fs
arpl
and
mov
aam
pop
addr16
pop
repnz
imul
insl
out
ret
pop
in
pop
push
pop
or
add
add
add
and
mov
popf
lret
lds
jne
xchg
hlt
int
pop
mov
xor
mov
shrb
icebp
or
sub
out
rcll
sbb
pop
inc
inc
or
inc
test
pop
and
movsb
insl
das
and
jns
dec
pop
movsb
mov
arpl
pusha
add
inc
inc
dec
mov
inc
mov
loop
xchg
notl
and
mov
mov
cmp
dec
push
add
mov
in
lcall
mov
push
dec
push
daa
sbb
sub
jge
jecxz
enter
aam
sub
stos
pop
jmp
xor
fmul
mov
pop
push
push
sbb
rorl
incl
jno
adc
test
adc
xchg
xor
aaa
inc
cmpsb
jne
and
sub
add
sbb
push
add
and
ss
popa
sbbl
add
call
sbb
out
jnp
or
aad
dec
mov
in
dec
adc
and
add
jnp
and
mov
mov
push
dec
adc
add
sub
imul
mov
insb
ss
lds
aad
test
js
pop
mov
push
and
cmp
push
sbb
cmc
mov
cmp
jge
add
adc
fidivl
sub
and
int3
leave
cmp
in
je
or
insb
in
push
xchg
movsb
and
inc
cwtl
and
mov
adc
jmp
cmpsl
xchg
adc
mov
hlt
inc
decl
fwait
shlb
je
test
pushf
ja
jp
iret
aaa
fdivrl
test
enter
or
mov
pop
mov
shlb
iret
rorb
cmpsl
outsl
cmp
repz
mov
push
shrb
notl
xchg
push
lahf
mov
rolb
hlt
fldl
xchg
test
cmp
push
sti
adc
cmp
jnp
cmc
lret
xchg
push
popa
sahf
dec
in
stc
adc
jge
push
out
xchg
movsb
loop
and
test
adc
push
aad
lcall
outsl
xor
inc
insl
insb
nop
mov
mov
lods
dec
movsb
popf
jl
or
mov
sbb
mov
pop
lds
mov
ljmp
mov
or
clc
inc
test
in
sahf
jmp
cmovne
adc
call
jmp
jp
jmp
cwtl
loopne
mov
mov
and
cs
jb
mov
xchg
push
pop
sbb
or
test
getsec
sub
mov
gs
jnp
testl
lcall
std
mov
push
mov
dec
outsl
into
cmp
fildll
test
dec
out
mov
es
jp
push
insb
or
mov
pushl
stc
sarl
aam
pusha
cwtl
ljmp
mov
mov
mov
jmp
mov
outsl
and
push
jle
in
inc
sbb
cli
in
iret
mov
cs
push
mov
testb
sub
arpl
daa
add
in
jecxz
loope
rorl
fucomp
fucomi
fsts
adc
in
sub
out
xchg
xor
xor
add
adc
out
push
push
cmc
dec
inc
popf
jp
or
adc
mov
fadds
sbb
add
mov
sbb
into
add
pop
out
mov
adc
call
ja
in
or
test
or
leave
xchg
dec
sbb
hlt
orb
xchg
sub
mov
dec
dec
call
out
adc
xor
inc
jmp
sub
int3
insl
int3
cld
popa
pop
dec
icebp
lret
add
popa
insl
lret
std
fwait
shll
imul
cmp
mov
mov
dec
sarb
mov
cld
dec
mov
movsl
and
mulb
inc
sarb
xor
in
insl
and
fwait
movsb
sub
sbb
int
lret
out
adc
mov
push
sub
rorb
cmp
adc
push
les
adc
add
lret
pop
popa
imul
fcomps
push
loop
aam
push
sub
fmuls
je
or
test
add
movd
and
pop
sbb
rorb
test
adc
sahf
xchg
push
push
add
and
bound
out
xchg
ja
xchg
cld
clc
movsb
ficoml
jbe
aam
or
fucomip
movsb
rclb
mov
mov
into
mov
daa
rcrl
add
mov
mov
and
lret
push
jno
int3
mov
inc
add
cmpsl
jb
je
cmpl
lock
xchg
xchg
mov
dec
push
das
and
inc
cmovns
xor
sub
cmp
aam
add
mov
je
test
dec
mov
flds
push
ret
dec
ffreep
xchg
cwtl
xorl
mov
mov
je
adcl
fsts
mov
xor
nop
mov
jae
jnp
or
jo
mov
add
hlt
jmp
movb
fdiv
rorb
adc
adc
add
fs
lea
or
and
push
int3
je
adc
cmc
add
mov
push
mov
push
cwtl
test
mov
or
jle
fiaddl
sub
sbb
sub
mov
adcb
or
dec
or
fisubrl
mov
fwait
add
adc
mov
add
or
mov
popw
inc
mov
or
negb
hlt
hlt
lret
jno
lock
adcb
jne
mov
mov
ret
fs
lcall
xchg
xor
data16
mov
andb
loope
pop
inc
stc
pusha
cmpsb
fisubl
pop
rclb
push
xchg
in
dec
inc
or
mov
test
jecxz
adc
push
lods
sub
push
dec
push
bound
xor
aad
mov
fucom
insl
jne
repz
pusha
aaa
sbb
stos
sbb
dec
or
or
sahf
jns
cmc
repz
lahf
in
in
aaa
mov
into
push
nop
pushf
mov
repz
arpl
pop
xchg
scas
mov
ret
fmull
push
mov
test
dec
dec
dec
xchg
adc
cmc
mov
mov
adc
mov
xchg
dec
push
push
cmpsl
sahf
mov
decb
lret
xchg
and
push
jae
inc
xchg
stos
in
cmp
cmp
pop
es
jp
mov
in
mov
test
jle
fwait
out
fcomps
push
mov
push
dec
hlt
hlt
pushf
add
int
in
in
mov
mov
aad
mov
test
push
push
push
cld
imull
push
jmp
cwtl
dec
push
sbb
xor
mov
and
cld
repz
pop
mov
ficoml
addr16
addb
insl
sub
dec
ret
sub
movl
dec
sbb
inc
adc
sahf
mov
mov
adc
mov
daa
outsb
sub
xor
jno
sbb
sub
cwtl
int3
cld
in
jbe
sub
push
in
jbe
jle
pop
lcall
xchg
cltd
mov
les
xchg
and
nop
into
adc
fdivr
push
jno
push
fdivr
jle
xchg
in
jge
inc
adc
inc
in
sub
fmull
fadds
adc
lock
lds
push
push
push
mov
jmp
sbb
pop
inc
push
stos
cmp
xor
xlat
push
xor
xorb
scas
lods
cld
and
insl
sub
dec
adc
inc
mov
and
iret
icebp
pop
negb
or
jbe
fwait
xor
fistl
mov
push
clc
push
mov
out
adc
loopne
popf
bound
hlt
std
sbb
jmp
xor
sbb
jg
std
sub
ror
pop
jmp
pop
mov
cmp
fadds
movsb
cltd
xor
push
loop
dec
mov
cmp
imul
repz
dec
bound
mov
cwtl
push
dec
push
fxch
xchg
jle
xchg
jnp
inc
xchg
pop
dec
adc
hlt
call
call
add
inc
dec
inc
lret
add
in
aad
adc
cltd
mov
es
prefetchnta
leave
mov
jno
dec
mov
xchg
imul
lods
aad
insb
pop
cwtl
sub
mov
lea
adc
mov
push
stos
dec
jge
mov
push
pop
dec
in
std
xor
mov
lods
test
push
mov
and
test
cld
not
arpl
call
pusha
add
jmp
icebp
mov
aas
cmp
inc
dec
lds
dec
pop
or
ret
imul
xchg
xchg
push
mov
stc
push
lret
push
inc
imul
inc
lea
xchg
pop
xchg
in
dec
lret
mov
lret
and
mov
mov
movsb
inc
xchg
inc
mov
into
pushf
insb
inc
jp
and
dec
popf
subl
push
clc
mov
js
and
sbb
xchg
xchg
mov
int
in
xchg
mov
cmpsl
je
mov
fstl
imul
and
test
sub
adc
mov
push
mov
es
adc
push
ficompl
scas
leave
lret
and
nop
popf
jmp
inc
inc
push
dec
rclb
repnz
and
inc
ljmp
push
push
add
sub
cmp
mov
movsb
dec
jno
aam
jmp
adc
jbe
mov
aad
inc
add
mov
add
and
in
sub
push
out
sub
or
jmp
and
mov
call
push
xor
pop
and
pop
xchg
xor
xchg
push
inc
test
push
enter
push
push
out
add
lret
or
jmp
sbb
push
rcrb
adc
or
test
mov
xor
stos
sbb
cltd
mov
test
fwait
movsb
sbb
pop
cmpl
mov
and
or
push
mov
cltd
mov
ja
mov
mov
adc
rclb
push
dec
mov
leave
pushf
test
xor
dec
mov
mov
cld
pop
adc
dec
mov
gs
gs
push
cli
jb
mov
sub
in
mov
xor
insb
fcompl
push
xor
mov
fimuls
cmpsl
mov
mov
inc
xchg
insl
push
sub
orb
lret
xor
add
popf
jae
or
push
ljmp
mov
in
pop
adc
pop
cmc
sbb
stos
inc
push
lods
pop
js
addr16
xchg
or
scas
sbb
scas
add
dec
mov
fabs
sbb
pop
push
sbb
sbb
add
dec
mov
fnstenv
rcr
xchg
sub
xor
leave
cmp
enter
lret
push
adc
push
cltd
test
or
cwtl
xchg
aam
sbb
xchg
sub
fmull
push
adc
lret
push
shrb
sarb
gs
ret
add
inc
and
sub
xchg
jns
pusha
lock
and
sbb
clc
push
add
and
inc
add
adc
xor
mov
clc
cvtps2pi
mov
aaa
or
add
cmp
into
cmp
inc
xor
xor
mull
and
hlt
add
mov
adc
clc
sbb
fs
mov
cli
add
push
cltd
push
mov
mov
or
test
call
cmp
pop
push
adc
cld
adc
mov
mov
popf
cmpsl
mov
lock
mov
inc
out
push
push
into
call
cmp
xchg
movsl
xchg
lods
jno
mov
dec
sub
cmp
mov
sbb
inc
aad
mov
jmp
ret
jb
lea
test
jae
lcall
add
aam
dec
jae
xchg
int
subb
es
daa
fldenv
push
ret
add
push
pop
mov
adc
idivb
push
out
mov
push
sbbb
xchg
idivl
arpl
sub
jnp
sbb
ret
adc
mov
mov
fisubl
andb
mov
hlt
adc
fucomp
std
negb
test
or
push
jo
sub
pop
je
aad
sub
in
int3
jno
ljmp
sarb
or
imulb
mov
jmp
push
sub
js
inc
jecxz
sbb
ret
jb
lcall
xor
or
movsl
data16
mov
insb
cmp
pushf
xor
aas
insl
cmp
or
push
push
inc
inc
push
xor
and
stos
les
push
mov
and
inc
cld
sbb
test
sahf
mov
sti
insb
xorl
and
adcl
daa
loopne
cmp
add
jmp
repz
out
or
sbb
push
add
test
adc
sbb
sbb
pop
add
mov
push
call
js
cld
andl
pop
add
in
push
inc
orb
inc
cmp
jne
add
adc
rol
pop
xor
push
adc
cmp
cmp
pop
and
inc
cltd
jo
cmp
cmpsl
xchg
je
mov
push
jp
mov
push
bound
push
push
xchg
mov
pop
call
dec
pop
jmp
jne
movsbl
ficoml
mov
mov
add
push
mov
test
stos
sbb
pop
leave
ret
and
pop
or
stos
add
cwtl
dec
push
aas
pop
pusha
inc
and
icebp
test
test
inc
push
jmp
cli
pushf
add
jo
and
dec
jp
sub
mov
push
xchg
fnstcw
out
cmp
pushl
arpl
sub
inc
push
fs
or
cmp
adc
adcb
sbb
sub
jae
pop
inc
mov
push
dec
xchg
dec
mov
mov
into
test
test
adc
imul
adc
addb
push
je
addr16
repz
pop
cmp
jge
inc
dec
mov
sbb
mov
dec
jo
sbb
xchg
sub
jo
dec
add
test
xchg
rol
jb
lock
rolb
adc
rolb
xchg
movsb
add
xchg
test
aam
xor
or
sbb
add
nop
dec
adc
popa
out
test
mov
loopne
pusha
in
mov
int3
xchg
cltd
sub
lcall
out
mov
adc
xor
in
scas
mov
in
rcrb
or
add
lcall
data16
jae
dec
aaa
shlb
mov
or
les
sub
mov
sbb
jmp
dec
cltd
das
and
cs
mov
mov
xchg
mov
lods
pop
xchg
dec
into
mov
mov
push
adc
add
lds
jmp
clc
pusha
fs
std
je
je
decl
sbb
aam
adc
out
adc
or
out
mov
and
push
mov
xchg
xchg
jns
cwtl
idivl
mov
mov
pop
movsb
cmp
push
test
mov
sbb
outsb
jge
mov
addr16
push
pop
xchg
jp
addr16
push
mov
dec
jecxz
cmp
das
sbb
sub
push
sbb
push
inc
shlb
and
push
test
out
jge
push
stc
andb
jg
jmp
dec
push
dec
sub
loope
movsl
add
jge
mov
pop
dec
popf
lret
add
mov
mov
aam
test
jne
je
ds
add
push
push
dec
pop
add
test
add
out
mov
call
xor
add
adc
std
push
nop
ret
lahf
cld
mov
std
xchg
lcall
int
push
mov
test
sbb
jae
pop
outsl
sbb
push
sub
push
shr
pushf
pop
mov
xchg
aas
push
sahf
aaa
movsb
shrl
mov
clc
pop
inc
dec
das
arpl
and
imul
subb
cmp
out
mov
cmp
or
push
adc
mov
repnz
jne
mov
jae
mov
enter
jo
clc
movl
call
fisttpll
inc
push
pop
sti
cmp
fsubrs
orb
fmul
adc
andl
fildll
pushw
inc
lods
daa
mov
orb
pushf
mov
ja
lcall
sbb
fdivrl
mov
cmpsb
call
push
sbb
es
jne
fsub
or
cmpsb
sub
add
adc
scas
das
fnsave
xor
int
pushf
push
into
nop
testl
into
loop
sbb
xlat
sub
imul
pop
push
jnp
pushf
movsl
sub
shlb
and
mov
jnp
fisttps
xchg
pop
and
mov
sbb
imul
push
inc
push
add
in
fisttps
cmpsb
mov
adc
pop
int
sti
dec
aaa
movsl
mov
and
mull
add
cmp
dec
mov
out
dec
dec
mov
mov
mov
add
jbe
pop
dec
lcall
mov
xchg
mov
js
sbb
cld
cmpsb
repnz
fdivrs
dec
dec
je
mov
int
movsb
dec
mov
inc
lds
je
push
cmp
inc
pushl
push
lock
jbe
sahf
mov
pop
dec
mov
nop
insb
scas
adc
fldenv
xchg
jb
ljmp
adc
sbb
push
pop
sub
gs
not
add
out
pushf
pop
mov
jge
rcll
ret
sub
jne
lds
push
aam
or
dec
test
sub
mov
adc
sub
pushf
aaa
pop
xor
leave
sub
cmc
push
or
mov
out
push
pop
shl
and
aas
lcall
cmp
cld
mov
cmp
sbb
data16
push
pop
xchg
shrb
cld
fsts
inc
lahf
cmc
loopne
fcmove
fdivrl
data16
xor
mov
push
sub
sub
dec
add
insb
insb
out
lret
mov
cmpsl
nop
and
aaa
or
stos
aaa
xchg
stos
add
mov
push
pushf
add
stc
sbb
mov
fisubl
cmp
mov
push
ret
mov
stos
adcb
rclb
mov
jle
adc
jne
mov
rclb
js
aam
sbb
mov
and
fstpt
inc
scas
xor
scas
dec
xchg
addr16
pop
add
cmp
xchg
or
jnp
sub
inc
fsubp
xchg
dec
popf
sbb
jo
jb
fildl
imull
out
cmp
cmc
jecxz
popl
sub
mov
ds
ret
sbb
adc
test
mov
mov
aam
xor
mov
cwtl
neg
lret
ljmp
dec
mov
enter
call
addr16
ss
fs
fimuls
sub
sbb
jae,pn
mov
fst
xchg
fists
icebp
push
sbb
sub
nopl
repz
cmc
xlat
mov
mov
aam
pop
cmc
sbb
pusha
cmc
push
mov
fcmovb
lret
cmc
inc
loopne
out
or
and
pop
mov
popf
lret
xchg
fs
sbb
push
jmp
sbb
cmp
cltd
inc
inc
scas
out
ljmp
rclb
xor
xchg
xchg
xchg
push
push
je
inc
mov
xlat
scas
cmpb
je
push
sahf
pop
mov
push
out
cmp
pop
or
test
push
bound
ljmp
sub
inc
shr
fwait
adc
in
mov
in
mov
jne
mov
rorb
dec
sti
dec
dec
call
repz
mov
hlt
push
push
adc
mov
xlat
rorl
stos
stos
cmp
pop
je
lods
push
shrl
mov
and
inc
pop
mov
or
cmp
mov
inc
ljmp
rolb
jae
cmc
push
inc
in
and
xor
shlb
popf
add
mov
jne
jne
jge
lock
add
push
stos
gs
xchg
mov
jne
jle
dec
in
gs
xor
xchg
insb
test
outsl
mov
out
insb
push
xchg
push
cld
pushf
sbb
jne
jecxz
rclb
or
call
mov
mov
push
push
cwtl
cmp
ja
mov
dec
cmp
adc
cmp
push
enter
cmp
popf
out
icebp
into
ret
dec
add
movsl
lret
xrelease
dec
out
push
xor
push
inc
mov
mov
xor
push
mov
pop
inc
xor
add
outsb
sbb
mov
dec
push
add
sub
imul
adc
rol
les
mov
les
mov
nop
add
mov
xlat
add
mov
pop
frstor
mov
mov
pop
out
es
jle
fdivs
iret
pusha
je
mov
dec
cwtl
cltd
and
daa
outsb
cmp
or
scas
and
cwtl
imul
fs
push
or
xchg
es
mov
sub
jle
rolb
push
lock
jge
add
daa
sbbb
leave
mov
push
in
jo
lds
pop
pusha
into
cmp
jl
or
cmp
mov
fwait
or
mov
jle
cwtl
xor
mov
adc
icebp
mov
xchg
mov
cmpsb
fdivp
mov
in
push
push
pop
mov
or
mov
push
scas
sub
cli
ret
sbb
stos
fadd
test
outsb
ja
div
sbb
push
add
mov
lods
insb
je
lcall
ss
cmp
fcomps
rclb
into
es
loopne
adcb
ss
les
jo
mov
bnd
scas
in
call
cmp
sbb
pop
xchg
insl
das
in
outsb
cmp
xor
inc
mov
test
xor
lds
inc
cmc
mov
outsl
fs
fs
and
fdivs
imul
in
subl
or
mov
imul
out
lods
je
push
push
mov
insl
cmp
stos
jnp
push
nop
mov
push
in
insb
outsb
xchg
add
jge
sti
sub
jmp
jmp
mov
ljmp
inc
outsl
jle
sub
cs
jecxz
insl
push
push
mov
xlat
pop
aaa
push
jg
loope
insl
pop
rcrb
iret
out
aam
loope
push
loopne
add
sbb
xchg
insl
icebp
fadd
fwait
hlt
je
lock
inc
xchg
inc
mov
imul
adc
dec
repz
xchg
cmp
enter
sbb
cmc
add
add
icebp
nop
repz
inc
sbb
mov
hlt
pop
lret
mov
andl
and
xlat
adc
sbb
repz
enter
fildl
call
test
repz
lods
sbb
lock
jl
outsb
mov
outsb
ficoms
mov
dec
xlat
call
mov
sbb
jmp
mov
fsub
lds
jmp
lret
lods
pop
les
call
push
arpl
enter
adc
xor
pop
dec
pushf
push
psrlq
or
push
adc
movsl
mov
pop
pop
fisttpll
push
bnd
pop
out
hlt
repnz
repnz
mov
push
xor
mov
lock
adc
xlat
ds
in
repnz
sahf
add
lock
jns
js
je
aam
sbb
pop
repnz
xchg
faddp
jne
cltd
sahf
mov
sub
pop
push
inc
pop
movsb
xchg
adc
lcall
mov
add
clc
add
scas
popl
out
add
outsl
sbb
push
mov
jmp
imul
ds
punpckhbw
jmp
cmp
push
call
nop
pushf
mov
push
push
iret
jmp
or
mov
push
mov
dec
lods
or
mov
push
sub
hlt
out
jo
sbb
pop
pop
push
pop
xlat
jb
inc
push
rcrb
sbb
jns
je
mov
pop
iret
scas
mov
flds
pop
push
pop
xor
sub
sbb
pop
mov
movsl
sub
inc
pop
out
adc
and
mov
loope
xor
mov
iret
imul
jl
sub
jnp
mov
adc
push
repnz
dec
vmovhpd
inc
into
mov
push
jnp
in
lea
je,pt
adc
jo
test
icebp
js
push
sbb
lret
push
nop
or
test
jge
mov
out
mov
mov
rorb
ret
or
insl
repnz
lods
push
mov
jno
mov
cli
ss
jp
fiadds
dec
and
add
or
dec
or
adc
shl
test
mov
mov
pop
inc
repnz
sub
test
adc
je
test
mov
jecxz
popl
mov
repnz
lcall
push
lcall
cmp
daa
push
jecxz
sbb
out
lods
mov
dec
pop
adc
lods
sbb
jl
aam
ds
and
mov
mov
add
imulb
xchg
mov
mov
icebp
add
jmp
push
jle
mov
lock
xchg
pop
add
into
sub
sub
push
sbb
movsb
lock
mov
push
clc
sbb
in
mov
sub
add
nop
pop
cmpsl
nop
call
mov
fdivrs
jecxz
jb
jae
dec
rol
sbb
pop
pop
push
add
pop
sti
call
inc
push
shll
inc
xchg
cmp
jb
jo
mov
add
fldt
ds
pop
dec
jae
jp
pop
std
dec
or
lahf
jns
dec
fs
hlt
icebp
and
rclb
adc
ret
jo
inc
dec
mov
cmp
mov
mov
sahf
bound
out
jl
jae
shl
xchg
xchg
inc
pusha
cmp
lock
xchg
jecxz
lock
mov
aad
xbegin
cmp
fiaddl
ljmp
lock
inc
adc
pop
and
les
mov
xor
inc
pop
out
jp
je
adc
in
movsl
push
inc
je,pt
mov
nop
in
jecxz
push
out
add
sbb
push
add
jg
jns
push
divb
ja
push
add
jae
test
jne
push
ja
xor
je
inc
pop
out
mov
subl
je
cmp
pushf
je
mov
mov
test
outsl
or
jle
push
into
adc
mov
jo
push
jp
push
outsl
and
adc
jo
xor
cld
sbb
out
push
push
push
scas
xor
add
scas
jecxz
cmp
and
pop
pop
jnp
aad
jno
orl
fnstenv
dec
inc
xchg
xchg
pop
sbb
sbb
jle
jbe
mov
call
fnstenv
sbb
test
push
ja
xrelease
out
jb
ss
pushf
jne
icebp
cwtl
in
mov
imul
enter
add
or
sbb
push
xlat
cmp
dec
xchg
sbb
push
sti
or
mov
repnz
mov
insb
jge
movsl
insl
xchg
jge
mov
xor
sbb
imul
inc
or
mov
push
cli
dec
mov
into
inc
inc
adc
push
movsb
adc
call
in
lods
add
inc
push
fmull
mov
inc
inc
int3
jns
mov
rorb
adc
movsl
jge
sahf
cmp
push
fiaddl
in
inc
inc
pusha
and
jnp
sahf
das
mov
insb
cmp
enter
imul
xchg
and
fs
loope
sbb
lock
hlt
ret
push
loopne
mov
mov
mov
in
inc
in
insl
jbe
repnz
cmp
in
sbb
xchg
out
hlt
jbe
sbbb
in
adc
cmp
into
cmp
adc
mov
ds
xor
mov
mov
adc
xor
in
push
loopne
lret
mov
shr
pop
xor
repz
pop
or
in
cs
popf
push
and
out
popa
or
inc
or
call
std
lods
fnstsw
jbe
imul
xchg
popa
mov
inc
arpl
insb
ljmp
fdivr
popa
jl
out
or
and
sbb
ja
adc
sti
pop
add
icebp
ljmp
adc
pop
clc
xchg
call
sbb
js
mov
pop
std
mov
dec
jle
push
jge
mov
iret
out
sub
jp
je
sub
jbe
push
push
sub
jl
sub
js
les
mov
int3
call
call
mov
sub
shr
mov
push
jmp
push
jmp
cmp
jnp
push
divb
sub
lea
arpl
jp
arpl
ss
mov
push
js
cmp
sarl
push
jo
push
ja
je
mov
movsb
js
pop
sti
js
js
add
out
ret
sbb
out
out
aam
shrl
rclb
mov
lods
jge
out
push
add
inc
jne
popf
aad
out
out
lods
dec
fmuls
sub
lock
scas
cmpsl
rcr
jne
in
jg
test
sbb
jns
out
mov
sub
dec
fdivr
jae
aas
stos
mov
adc
cmp
hlt
inc
aad
pushf
mov
shlb
or
add
or
pushf
add
mov
int3
in
jge
fldenv
lock
shrl
hlt
jnp
add
sbb
sbb
je
sbb
cltd
stos
dec
jne
scas
rclb
stc
pop
insl
push
xlat
lret
shlb
inc
xor
push
idivl
add
xor
jmp
in
outsb
adc
push
aas
and
sbb
int
push
jecxz
psllw
jp
cwtl
ljmp
jle
push
inc
dec
jge
ret
dec
xchg
and
push
inc
mov
sbb
aas
jl
ds
dec
in
mov
out
loope
andl
andb
repz
xchg
add
ja
adc
jge
aad
icebp
cltd
mov
dec
std
push
icebp
imul
jp
jl
hlt
je
daa
and
mov
ds
dec
pop
adc
push
xchg
negb
pushf
adc
mov
insl
xor
xchg
and
cmovns
loop
fsubrl
sahf
fwait
and
xchg
in
jnp
mov
jl
cltd
stos
popf
nop
aam
loopne
stos
lea
push
or
loop
scas
pop
aad
in
ljmp
orl
out
inc
sarb
jnp
add
in
addl
sahf
adc
xchg
movsb
fwait
push
pushl
dec
int3
popf
jbe
frstor
jne
mov
mov
xor
loope
inc
fsubr
arpl
and
xor
lods
pop
xchg
dec
sbb
dec
jge
adc
dec
imul
leave
pop
jne
test
jl
lock
in
jecxz
inc
jl
mov
or
subl
lods
or
std
xchg
mov
mov
jl
jl
cli
cld
sub
nop
sahf
clc
sub
aad
insl
and
xchg
adc
mov
mov
divb
fcmovnb
mov
lcall
shl
loope
mov
int
cmp
jge
mov
out
and
jge
dec
pop
fwait
out
repnz
call
inc
push
insl
adc
imul
sbb
pop
pusha
in
xorl
and
jge
enter
jo
push
fadds
cld
sub
inc
jmp
mov
adc
cmp
sti
js
jo
js
push
cmp
loope
addl
and
aas
push
ljmp
sbb
jo
jg
cmp
loop
push
mov
adcl
mov
fcmove
loop
and
pop
in
cwtl
sbb
ficoms
in
movsl
outsb
in
outsl
sti
or
and
push
and
inc
lods
subps
mov
aas
or
fucomp
ds
inc
hlt
rol
inc
mov
shl
test
pushf
lret
sub
cwtl
test
test
mov
sbb
jge
wrmsr
jle
jle
insl
mov
mov
rcr
stc
les
mov
pop
sbb
cmpsb
push
adc
and
cmp
or
es
push
xchg
jle
jle
incl
repz
fimull
pop
adc
loop
cmp
sbb
out
je
cld
das
fsubr
rcr
dec
les
in
jo
jle
inc
xor
icebp
loop
ror
mov
xor
add
test
jo
add
icebp
cmp
cmp
jle
ds
cmp
xchg
sub
mov
movsl
cvtpi2ps
mov
cmp
mov
mov
jne
mov
sahf
mov
cli
sub
cmp
enter
push
xor
push
in
movsb
popf
jb
jne
push
jbe
mov
loop
nop
adc
push
and
stos
inc
cmpsl
push
cli
js
loop
jg
ret
sti
sub
pop
jg
jno
repz
pop
cmp
add
insb
xchg
mov
jo
mov
je
inc
push
pop
lret
pop
and
push
enter
stos
jmp
adc
movsl
fidivrs
or
pop
lcall
push
or
mov
addb
rcrb
subb
jb
cwtl
out
jl
pusha
andb
pop
cmp
ret
sbb
loope
loop
jl
cmp
and
push
popa
addr16
mov
xchg
jae
ljmp
jecxz
shl
jmp
cmpsb
mov
in
cmp
adc
loopne
sbb
out
in
sbb
mov
scas
sbb
push
mov
adc
jne
sub
lods
cmp
andb
sbb
mov
pop
adc
cmpl
outsb
fadds
pop
pushf
xor
inc
xor
and
push
cmp
jl
mov
xchg
iret
push
inc
inc
and
leave
movl
push
ror
cmp
adc
mov
aad
jb
pop
fldlg2
jecxz
sub
in
jmp
mov
out
mov
test
scas
call
cs
push
hlt
in
xchg
int
clc
add
je
jmp
addb
and
bound
jbe
ror
xor
ss
rcrb
scas
mov
cmpb
dec
cmp
scas
jecxz
add
inc
xchg
sbb
rol
jne
mov
sbbb
add
push
cmp
scas
inc
sbb
fsub
adc
sbb
push
in
jno
in
inc
adc
cmp
mov
jmp
add
aam
sub
test
sbbb
xor
pop
cli
hlt
push
cmpsl
inc
jge
pusha
movsb
fld
xlat
jmp
rcll
scas
enter
mov
fwait
sbb
sub
fnsave
sbb
add
js
hlt
dec
jae
arpl
insl
pop
aam
mov
cmpl
xchg
addr16
addl
sbbb
jge
inc
div
xor
xchg
ficompl
mov
mov
lods
dec
sbb
lds
mov
xchg
fcmovnbe
sub
loope
daa
sub
scas
arpl
lea
add
add
lock
icebp
shrl
repnz
adc
je
into
add
je
xlat
mov
xor
mov
jecxz
ja
mov
test
sti
pop
sbb
test
mov
sbb
out
pop
rcr
leave
popf
lea
call
mov
fstps
mov
fldl
inc
test
dec
adc
cld
xorb
push
hlt
jp
mov
push
push
nop
fiaddl
pushf
mov
in
fmuls
insl
mov
ret
jne
dec
push
stc
stos
jle
pop
dec
sti
dec
inc
fsubrs
xor
push
fimull
jbe
xchg
push
andb
clc
lods
sarl
mov
rorl
pop
mov
repz
push
xchg
mov
mov
nop
popf
dec
sbb
aam
je
jge
lock
xchg
ds
clc
mov
push
sub
lock
aad
adc
mov
ljmp
stos
jb
mov
stos
mov
inc
push
movsb
sbb
and
mov
cmp
mov
push
and
mov
pop
push
ljmp
rcll
or
xchg
push
xchg
inc
out
push
imul
xchg
mov
add
push
xchg
mov
in
adc
xchg
sti
fdivs
test
ficoms
sbb
ret
aaa
inc
enter
xchg
icebp
ljmp
arpl
xor
out
jl,pn
sbb
pusha
dec
sbbl
addb
jne,pt
push
popf
adc
inc
jg
call
out
fadd
push
fmul
js
xchg
dec
add
push
and
mov
ds
insl
push
pop
ss
push
inc
js
sti
js
stos
adc
sbb
lods
push
xor
mov
dec
sbb
xchg
jmp
sub
xor
xchg
call
jl
in
dec
in
fstl
xor
in
scas
push
jecxz
je
movsl
insb
ljmp
mov
xor
imul
push
pushl
pop
fsub
aaa
push
pop
inc
push
test
shll
jmp
ja
lods
xchg
addr16
sbb
shl
out
and
fiadds
dec
pop
int
clc
xchg
mov
scas
scas
cld
out
out
lock
and
outsb
cmpsb
and
test
cmp
hlt
lea
int
sahf
add
in
sub
pop
icebp
and
addl
jo
das
dec
jb
loop
outsb
test
xchg
cld
dec
push
and
mov
or
lea
xlat
adc
cmpl
push
lds
fsts
dec
or
and
ds
ja
push
ficoml
inc
jbe
insb
and
cltd
shl
mov
out
and
xchg
es
adc
and
mov
loop
sbb
or
vmwrite
sahf
pop
xchg
mov
xchg
and
xlat
push
xor
int3
xlat
lret
punpckhbw
xor
outsb
leave
cmp
dec
push
pop
adc
dec
ficoml
repnz
adc
out
ds
fmull
ficoml
xlat
mov
mov
push
mov
fstp
mov
out
inc
xor
ret
movsb
pusha
add
add
xchg
sbb
adc
sub
cmp
movsl
pop
nop
xchg
and
xchg
pop
or
shl
aas
stos
test
sbb
nop
mov
cltd
je
push
mov
cmp
lods
dec
lea
test
adc
sbb
xor
adc
cmp
dec
mov
aas
cli
mov
lods
dec
stos
mov
aam
cmpsl
inc
lods
mov
jnp
and
cmp
pop
mov
sbb
shll
dec
lock
shrl
mov
pop
aad
sbb
rcl
adc
jb
daa
and
rcll
cli
js
mov
lock
mov
mov
xor
push
mov
jl,pt
cmpsb
and
neg
xchg
icebp
xor
cmp
pop
pushf
pushf
push
stos
jg
jle
jg
rol
push
add
sahf
jns
add
sbb
js
adc
movsb
shrl
cmp
or
sarl
fs
cmp
push
rcrl
pop
fcoms
and
aad
mov
sahf
push
stos
enter
pop
std
mov
cmp
mov
dec
cmp
xor
or
jmp
mov
fnstenv
jo
xor
iret
call
and
push
aam
aad
push
or
lods
rolb
inc
and
push
cmp
rcrb
mov
repnz
mov
mov
mov
xchg
sbb
into
sub
popa
outsl
call
sbb
cmpsl
int
and
stc
loope
mov
mov
or
shld
aas
ljmp
dec
loop
repnz
je
jnp
xchg
cmp
push
bound
lods
mov
std
mov
gs
js
push
xor
lods
out
mov
aas
or
adc
add
aas
stos
mov
int3
or
clc
adc
repz
cmc
icebp
cmp
adc
clc
out
jecxz
shrl
push
inc
gs
cmp
insb
dec
sbb
leave
mov
aad
lock
lcall
daa
jecxz
or
lret
addr16
fisttpll
add
mov
push
jle
shll
sti
rcr
add
fs
mov
in
inc
pop
aas
push
hlt
lret
pop
leave
pusha
leave
or
lret
clc
lret
jmp
mov
mov
push
adc
cwtl
divb
imul
movsl
or
add
jmp
mov
mov
call
ficompl
push
cmp
sbb
repz
call
scas
ret
mov
test
xor
jb
imul
jne
sbb
mov
push
cmp
loopne
outsl
ror
out
mov
mov
lea
lea
push
lds
ja
sbb
enter
mov
jae
adc
sarb
scas
inc
xchg
xchg
nop
outsl
out
pop
and
sub
jno
adc
pop
xchg
dec
cmp
stos
sbb
aad
pop
sbb
inc
loopne
rcrb
mov
lods
pop
sub
pushf
loop
mov
int
sahf
ja
orl
cli
movsb
cmp
out
lahf
mov
iret
mov
mov
jns
jp
xor
mov
cmp
aas
out
xchg
sub
jb
cmpsb
pop
inc
adc
fsubrs
inc
stos
outsl
add
adc
sbb
add
into
inc
cmpsb
ret
insb
in
sub
xor
negb
into
add
mov
or
mov
mov
push
xlat
mov
add
mov
scas
mov
sti
jg
test
mov
mov
outsl
and
and
sbb
cld
xor
fsts
in
inc
add
cmp
jle
push
adc
push
ficoms
or
dec
add
fistpll
call
mov
jae
or
cld
mov
cltd
mov
jmp
mov
mov
jbe
cmp
sub
insb
popf
clc
mov
movl
fcmovnu
fyl2xp1
push
hlt
hlt
mov
lea
jae
addr16
adc
insl
outsb
sub
sub
adc
adc
fs
sbb
pop
dec
dec
push
cltd
or
fnstcw
test
and
sub
mov
mov
fdivrl
sub
adc
je
je
mov
aas
jne
mov
ret
or
sete
mov
and
pop
xchg
pushf
mov
movsb
cmpsb
ret
and
lret
rorb
das
aam
and
je
test
mov
and
mov
iret
push
mov
fwait
popf
or
xchg
add
arpl
inc
pop
adc
adc
sbb
push
push
sbb
test
or
andb
movb
push
je
into
mov
adc
sbb
cmp
add
mov
mov
xchg
add
sub
aaa
cwtl
paddsw
inc
pop
adc
fisubrs
cmpsb
mov
fcmovu
add
pop
pushf
cmp
mov
ds
jmp
jno
in
cmp
dec
and
aam
inc
in
stos
out
fs
sahf
pop
xlat
dec
inc
xor
xor
jl
lock
inc
test
mov
sub
push
dec
cwtl
sti
mov
adc
fdivl
lods
and
adc
ds
push
mov
sbbl
pop
hlt
les
jo
mov
out
jg
orb
pop
mov
popa
jnp
mov
or
fs
fldl
xor
loop
mov
aas
fs
vpsubw
in
or
je
clc
div
les
cmp
sti
cmp
pop
inc
mov
mov
mov
sbb
mov
or
sti
fcmovnbe
pop
scas
insl
imul
pop
int3
jge
ret
xor
fldenv
cmpsl
insb
add
call
mov
icebp
cmp
rol
aam
fadd
xor
pop
push
ret
bnd
clc
int3
ret
bound
cmpsl
aam
js
not
push
shl
or
test
enter
or
aad
inc
les
cli
js
les
sub
and
sbb
scas
imul
mov
xchg
loop
testl
mov
mov
push
push
mov
adc
in
pushw
sub
dec
lds
lahf
jmp
insb
or
xor
mov
lcall
xlat
icebp
xor
rol
xor
shl
rcll
in
nop
in
xor
cmc
setle
aam
inc
aaa
dec
sub
popf
or
test
or
jp
jge
xchg
xor
scas
arpl
xchg
adc
xchg
mov
xchg
xchg
cmp
sub
jl
adc
sub
add
mov
js
insl
jns
repz
arpl
push
sbb
xchg
jbe
cmp
push
dec
outsb
in
sarl
movsb
imul
ret
inc
xchg
mov
insb
jae
jl
bound
xchg
mov
insb
jle
les
jp
push
mov
rcr
ss
das
movsl
bound
jle
int3
or
lea
insb
jbe
and
sub
mov
xchg
xchg
inc
xor
leave
int3
cwtl
mov
sahf
pushf
ds
dec
xor
dec
pop
and
adc
lahf
arpl
loope
xchg
push
push
imul
push
cmp
push
and
rcrb
adc
dec
imul
popa
xor
jecxz,pt
push
pop
mov
ret
xchg
jp
adc
or
jo
lret
arpl
add
xchg
fs
jo
push
es
mov
loop
test
dec
imul
das
dec
xchg
xchg
outsl
lcall
inc
mov
fs
cwtl
and
fisubs
test
or
or
jecxz
lea
pop
daa
mov
jp
mov
add
dec
sub
je
xor
aas
test
fucomp
add
inc
push
sub
xchg
inc
push
lods
ret
sub
lds
dec
jae
movsb
or
stc
pop
cli
mov
sti
push
xchg
jp
test
dec
and
push
push
push
int
test
mov
mov
add
jle
stc
or
xlat
mov
in
shlb
or
repnz
cld
movsl
jmpw
mov
adc
cmp
dec
dec
fidivrs
or
test
push
adc
mov
les
xchg
gs
xchg
adc
outsb
pop
mov
push
mov
aad
in
adc
push
iret
loopne
dec
sbb
xor
ret
and
push
sub
js
dec
lock
dec
or
sub
int3
or
mov
sbb
push
lods
mov
roll
fists
cmp
in
shlb
les
xor
or
cmpsl
nop
lcall
pop
jbe
in
mov
mov
push
adc
sahf
scas
in
fsubr
mov
aaa
mov
iret
push
adc
shr
pop
loope
pop
adc
aad
xor
pop
jge
rolb
fwait
xchg
adc
mov
push
bound
clc
cmc
cmp
and
pop
and
testb
fstp
aaa
andl
shr
mov
xor
jae
adc
mov
mov
rcll
xchg
mov
cmp
push
dec
jmp
xor
lds
mov
mov
push
movsb
jae
push
dec
mov
insb
das
ja
xor
aam
pop
jne
push
xorl
xor
scas
shlb
xchg
push
int3
dec
inc
orb
xchg
icebp
mov
xor
test
fimull
addr16
jne
outsl
js
push
ljmp
stos
cld
lea
xchg
fdivl
or
xor
repz
test
in
andl
and
incl
mov
and
jp
sub
mov
adc
dec
xchg
push
and
je
insl
loope
mov
push
shlb
popa
mov
icebp
push
pop
or
or
or
nop
icebp
cmp
sbb
inc
popa
push
mov
xabort
popf
fistl
or
mov
shrl
hlt
or
pop
xor
out
dec
mov
pop
aam
fsubl
lret
pusha
enter
cmp
add
je
stos
insb
ret
and
adc
mov
in
stc
clc
pop
inc
in
and
cmp
lods
sub
jae
nop
mov
xchg
and
mov
xchg
ret
orl
insb
lods
mov
sub
pop
shlb
imul
push
mov
jl
inc
dec
push
inc
mov
dec
push
jo
movsl
mov
jle
push
adc
arpl
clc
hlt
ja
mov
or
fmuls
jnp
ret
cmp
jp
cld
mov
popa
adc
icebp
add
push
xchg
bound
mov
fwait
inc
xor
inc
and
imul
imul
jge
and
lret
movsb
jno
jmp
mov
test
aad
mov
add
add
in
mov
mov
rorb
fmul
lds
cmp
pop
in
xor
xchg
clc
mov
adc
je
mov
inc
bound
xor
push
dec
xor
ljmp
sub
mov
cmp
cwtl
ror
or
add
xlat
push
cmp
push
out
subb
xchg
mov
push
dec
ja
push
jne
outsl
in
js
dec
aad
or
pop
aas
sbb
aam
jb
pop
and
pop
sub
cmp
and
xchg
mov
int3
leave
cmp
or
inc
and
aas
mov
cmp
mov
shlb
push
jge
sub
push
clc
test
and
es
jne
mov
sahf
stos
outsb
cltd
jmp
fldcw
dec
lock
fisubl
fwait
xchg
add
xchg
sbb
fwait
in
or
xchg
sbb
repz
mov
sub
sub
mov
pop
fsubs
lds
or
sbb
cmpsl
jecxz
inc
xor
and
jne
and
fnstsw
inc
add
push
xlat
jmp
jmp
mov
xor
inc
inc
jae
or
inc
inc
xchg
jmp
xor
cmp
mov
hlt
sub
mov
bound
aad
dec
cmp
into
push
adc
imul
mov
out
xchg
push
xorl
aam
push
fldt
lds
sub
add
ljmp
daa
push
cld
xchg
cmp
sub
push
mov
mov
adc
pop
add
adc
ret
jne
push
push
mov
roll
mov
dec
pop
push
mov
add
jo
je
divl
adc
and
nop
test
push
add
xchg
dec
xchg
xchg
cmp
pusha
cli
out
inc
ljmp
push
mov
xchg
jns
test
daa
mov
call
mov
xor
dec
es
mov
cli
jecxz
and
push
cli
sub
mov
cmpps
mov
lea
and
cmpsl
add
mov
mov
lahf
sub
pop
inc
jle
jae
xchg
pop
jmp
hlt
js
repnz
sbb
xor
fcos
cmp
rcr
mov
dec
dec
fsub
daa
fs
sarl
je
test
outsl
mov
xchg
lea
mov
adc
add
stc
cmp
lea
gs
data16
xor
push
test
sarb
pop
push
sbb
pop
add
push
and
test
inc
repnz
insl
pop
icebp
clc
sbb
ret
inc
dec
and
shrl
adc
xchg
xchg
jno
sbb
mov
fsubl
inc
mov
pop
aaa
mov
mov
int3
xlat
rcrl
adc
push
mov
or
adc
add
push
aas
or
adc
lret
dec
pop
dec
and
jnp
xor
add
mov
jge
push
rcrb
flds
and
sub
fninit
xor
mov
test
movsb
mov
es
rclb
or
sbb
int
imul
aam
subl
jge
and
mov
inc
jge
mov
in
adc
test
loope
popa
lcall
pop
aam
test
or
out
mov
dec
ja
adc
inc
push
ss
inc
xor
push
rcrl
testb
inc
out
lock
shll
fbld
dec
stc
into
jnp
mov
adcb
push
jecxz
mov
ds
sbb
les
stos
in
or
pop
adc
push
rorl
das
dec
or
stos
cltd
adc
push
imul
sub
inc
mov
insl
dec
mov
outsb
xchg
xchg
fcmovnu
out
inc
and
mov
jne
inc
push
pop
inc
and
repz
xor
xor
gs
dec
aad
pop
cmp
add
jmp
cmp
pop
pop
cmp
into
mov
add
mov
and
xchg
xor
in
dec
dec
test
pusha
scas
mov
ljmp
sub
rol
add
xchg
loope
and
inc
lret
pusha
stos
movsb
lds
icebp
imul
pop
inc
repz
inc
pop
aaa
jno
insb
lea
das
mov
fdivl
mov
in
and
dec
stos
jbe
je
aaa
jbe
sub
cmpsl
nop
or
mov
rcrl
rcrl
lods
mov
cld
sub
sub
test
pop
and
pushl
call
call
adc
sub
push
mov
add
mov
adc
dec
and
andb
and
insl
arpl
mov
jae
inc
call
xchg
mov
dec
subb
inc
or
dec
xchg
cmp
sub
mov
add
pushl
into
dec
call
cmp
mov
sbb
cmpsb
xorb
jl
lahf
in
dec
pop
test
sbb
adc
add
sub
aam
cmp
sarb
mov
mov
sbb
push
xchg
rcl
sahf
jg
movsb
jp
xlat
inc
call
jge
push
and
mov
shll
aam
pop
xor
inc
dec
test
movsb
loop
push
pop
adc
add
jb
xchg
imul
movsb
pushl
or
adc
std
jl
rcrl
lds
in
push
mov
xchg
inc
mov
push
flds
pop
jg
mov
lds
mov
jbe
ret
cmp
rcll
icebp
xchg
lret
mov
cmpsl
jb
sbb
loope
pop
adc
push
push
aaa
add
sub
mov
adcb
test
inc
sbb
mov
ljmp
into
inc
jno
mov
pop
xor
es
pop
sub
adc
xor
inc
mov
adc
xchg
movsl
in
mov
push
daa
js
mov
inc
xor
jb
and
adcb
sbb
pushf
cmc
inc
aad
aam
lcall
mov
test
adc
test
bts
inc
and
test
push
inc
jns
xor
mov
and
xchg
mov
test
or
xchg
adc
mov
xchg
ja
movsb
in
cwtl
mov
sub
pushf
ja
outsl
pushl
sahf
push
movsl
jne
add
or
mov
inc
and
mov
xchg
mov
sarl
es
add
lock
push
stos
mov
and
in
ja
mov
fsubrl
jg
aad
lds
xor
lods
bound
jmp
ret
arpl
add
addl
pop
fiaddl
sub
xlat
mov
pop
shlb
daa
pop
into
ret
nop
xor
clc
adc
rcl
sbb
aam
imul
gs
xor
scas
mov
jne
mov
fwait
js
sbb
sbb
pop
xor
or
js
fidivrs
inc
or
inc
pushf
js
pop
fyl2x
aad
call
call
add
dec
and
test
xor
pop
int3
cmp
out
ror
shlb
push
icebp
cmp
and
or
shlb
mov
pushf
inc
fiaddl
gs
push
lods
inc
jmp
mov
mov
dec
mov
call
add
dec
aaa
fs
mov
adc
movsbl
xor
sahf
adc
or
fwait
lahf
fnstsw
jge
call
push
cli
inc
dec
adc
in
leave
jp
jno
fxch
and
test
push
mov
or
rorb
push
or
repnz
inc
xchg
jns
cs
dec
jo
or
pushl
fisttpl
and
mov
lods
add
and
inc
push
push
in
inc
aam
adc
icebp
sub
jns
sbb
inc
fadds
jge
gs
imul
rorb
add
and
popf
enter
dec
mov
xorb
add
loop
scas
imul
fyl2xp1
leave
adc
das
mov
xor
pushl
inc
sub
scas
mov
dec
and
xchg
ds
lret
outsb
push
icebp
mov
in
xchg
je
imul
mov
je
add
pop
xor
add
mov
inc
jnp
mov
add
cmpsl
ss
pop
cli
test
or
or
or
add
or
or
es
or
push
adc
hlt
pop
dec
or
xor
cltd
js
popf
xlat
jge
and
add
outsb
hlt
mov
aam
dec
gs
jno
nop
sbb
nop
mov
das
jnp
add
out
lods
mov
jo
dec
fs
inc
jge
jae
dec
mov
lret
jp
dec
hlt
dec
xchg
cli
mov
jne
push
jmp
cmpsb
or
das
je
push
ljmp
lret
pop
sub
lods
add
xor
stos
jmp
jmp
lds
into
pop
mov
inc
mov
sahf
test
jnp
push
enter
adc
sub
fcom
push
mov
cmpsl
mov
ror
dec
in
cmp
fs
mov
lcall
cmpsb
pop
pop
cltd
push
stos
xor
jo
dec
rorb
xchg
and
lds
mov
mov
and
and
jg
add
add
leave
dec
repnz
enter
cld
push
std
and
faddl
pop
push
xchg
or
inc
cmp
fcmovu
icebp
cmp
dec
enter
jns
xchg
mov
adcb
daa
and
adcb
sub
inc
out
or
inc
repnz
push
sub
jno
cmp
mov
mov
imul
add
addr16
cmp
in
negb
add
mov
cmp
insl
je
lahf
aam
loope
mov
or
sbb
jge
repnz
sub
cli
and
mov
inc
enter
cmovs
jmp
mov
mov
pushl
addr16
jmp
decb
repz
call
or
lret
jmp
bound
testb
test
aam
arpl
jbe
xor
jecxz
adc
jecxz
jnp
and
or
and
sub
mov
jne
push
data16
nop
leave
adc
scas
xor
aas
dec
push
jne
cli
pop
loop
stos
rorl
mov
xor
jmp
xor
sbb
stos
fisttps
jne
jno
test
adc
and
faddl
cmp
jne
std
arpl
and
mov
repz
adc
adc
mov
add
push
mov
cmp
les
icebp
and
sub
add
je
sub
dec
pushf
push
int
fadd
push
mov
sahf
pop
dec
inc
cmp
inc
xor
andb
loopne
paddsb
outsl
movsl
icebp
sub
fcoms
pushf
les
adc
mov
jecxz
jl
hlt
stc
inc
hlt
andb
mov
inc
inc
mov
cld
pop
mov
xchg
push
add
je
ljmp
das
inc
sub
sub
xchg
push
xchg
loopne
pop
addr16
das
fsubrs
call
repnz
add
pop
aam
adc
in
jne
out
mov
xchg
sahf
ja
inc
cmp
js
push
add
stos
push
sbb
or
pop
pop
je
lahf
cmp
xchg
mov
or
jge
sbb
add
adc
cmp
sbb
pop
sbb
push
push
sbb
mov
mov
add
and
or
shlb
lea
rolb
xchg
adc
jae
adc
mov
jl
or
sbb
enter
adc
push
lcall
add
jl
call
or
add
adc
xchg
mov
cld
mov
xchg
es
lods
test
jae
adc
gs
add
not
xor
lret
cwtl
call
popf
cltd
mov
adc
enter
inc
adc
adc
fwait
inc
scas
mov
ja
mov
mov
shrb
pop
lahf
pop
addl
xchg
pop
push
jmp
in
add
xor
data16
mov
aad
inc
repz
pop
push
sahf
pop
into
mov
icebp
sbb
dec
xor
push
or
mov
test
lods
fcmovb
sub
movsb
and
dec
sub
out
sub
xor
cmp
rclb
pop
cltd
sub
or
insb
sub
mov
std
imul
dec
adc
dec
inc
pop
mov
jecxz
adc
ljmp
outsl
leave
and
dec
add
cli
lret
repnz
xor
fwait
xchg
iret
xor
push
add
or
xor
addr16
pop
sub
adc
rcr
loopne
xchg
mov
xchg
test
bound
xor
lock
test
cmp
xor
xorb
int3
inc
imul
gs
or
mov
pop
xor
lods
mov
fldt
pop
in
movsb
sbb
adc
icebp
jns
sbb
xor
cwtl
mov
xor
cmp
cld
leave
mov
xchg
movsl
and
and
fists
movsl
dec
jp
mov
xor
nop
push
pop
lea
pop
cli
cli
inc
add
lahf
cwtl
cs
jg
mov
push
fidivl
mov
pop
rorb
xor
stos
add
xor
sub
adc
loop
push
lds
mov
add
pop
push
lods
aas
add
jmp
sub
push
mov
mov
and
orl
mov
es
sub
flds
out
insb
test
push
cmp
push
xor
pop
xchg
shrl
lcall
test
pop
mov
inc
add
jmp
ja
or
sahf
xlat
sub
mov
icebp
gs
cli
data16
xchg
or
fs
insl
cmp
or
add
test
dec
or
dec
mov
jne
lock
shll
or
lods
fsubl
lock
lahf
and
sbb
ret
adc
jg
adc
pop
pop
sbb
dec
hlt
in
push
leave
jg
int3
in
jne
fadds
adc
lods
pusha
ja
or
and
and
add
dec
int
test
mov
xchg
dec
movsl
push
subb
out
add
jne
in
push
repz
mov
aad
in
sbb
jmp
add
iret
mov
aad
push
mov
or
mov
adc
add
jg
push
mov
sub
lret
mov
jmp
cmpsb
and
enter
xchg
adc
iret
sub
fcoml
add
mov
cli
jmp
push
arpl
lret
in
pop
orl
push
add
fcomip
jmp
out
clc
mov
hlt
je
or
cltd
imul
jl
sub
cld
cmpsl
or
lea
iret
cld
xor
push
push
jnp
cmp
xchg
push
rcrl
cmp
bound
iret
jl
out
pop
int3
mov
adc
inc
adc
repnz
mov
imul
pop
mov
icebp
add
and
sub
js
jae
xchg
mov
pop
lock
nop
push
gs
nop
mov
aad
insb
xchg
add
sub
mov
or
mov
dec
in
jmp
mov
inc
repz
pop
jne
mov
push
rcrb
push
and
fwait
stos
cmpsb
inc
inc
adc
push
movsl
adc
icebp
jmp
add
adc
jmp
push
dec
or
mov
mov
jl
or
add
push
sbb
add
arpl
stos
test
mov
adc
dec
mov
mov
push
mov
call
decl
mov
out
lods
dec
push
fsubl
inc
test
pop
cli
sub
inc
enter
adc
mov
pop
push
fstpt
and
mov
or
pushf
jnp
stc
icebp
pushf
adc
mov
or
jbe
or
inc
in
pushf
addl
addb
shl
daa
je
data16
cli
in
test
js
sti
enter
mov
mov
mov
je
mov
mov
jmp
cmp
inc
mov
mov
add
pop
andl
fiadds
andl
and
sub
sub
jae
ret
pop
insb
sarb
adc
adc
pusha
push
arpl
inc
cmp
inc
mov
fcoml
and
adc
int
les
insb
jo
jo
inc
js
leave
push
cmp
mov
pop
adc
xchg
dec
add
jo
add
inc
sbb
jp
cmp
cmp
mov
loop
and
lea
clc
cli
mov
push
inc
add
cmp
sub
sbb
mov
push
aaa
sbb
fistl
lds
or
mov
or
das
dec
call
in
fs
rcrl
push
les
dec
ret
push
jae
dec
mov
inc
aaa
into
mov
in
xor
and
cli
in
mov
sbb
add
test
call
sbb
pushf
mov
push
adc
sub
scas
jecxz
push
dec
mov
scas
cmp
cwtl
dec
jge
dec
mov
dec
push
or
lods
movsb
stc
xor
push
xchg
lds
mov
cmc
xchg
js
or
rolb
jo
clc
lds
xchg
sbb
inc
aaa
out
mov
test
je
lds
xor
jmp
test
mov
cmp
call
test
sahf
mov
inc
aas
push
cmp
push
pop
mov
cmp
inc
push
add
sub
es
cmp
push
pop
shlb
cwtl
or
add
add
ds
repz
gs
sbb
inc
dec
mov
add
mov
int3
shl
and
mov
test
add
mov
and
inc
cmpl
popa
push
mov
mov
fmul
push
data16
test
out
xor
scas
sbb
jno
xchg
adc
outsb
sbb
mov
je
cmp
xor
sbb
je
mov
sbb
lds
inc
dec
in
push
movsb
xchg
mov
and
outsl
sub
cli
xor
sbb
xor
popa
jb
addr16
push
nop
xchg
add
dec
sbb
mov
inc
aam
push
scas
add
adc
popf
cmp
or
addl
popa
mov
js
loop
push
mov
addr16
adc
test
push
fimuls
cmp
enter
sub
sbb
adc
adc
rdtsc
pop
pop
pop
adc
xor
popa
aam
sub
movsb
mov
mov
mov
sub
add
jbe,pn
xchg
add
movsb
mov
iret
xchg
pop
test
and
push
je
push
pop
cmp
inc
cmp
and
inc
lods
icebp
lret
out
dec
ljmp
inc
cmp
adc
pop
push
ljmp
jae
inc
jge
pop
inc
int
sti
lcall
xchg
mov
mov
aam
aam
adc
imul
out
cmp
xchg
dec
and
mov
mov
out
pop
dec
in
rclb
mov
lret
cmpsl
pop
xor
mov
push
sub
sbb
out
mov
ds
sbb
fsubp
aad
rcrl
jns
mov
inc
pop
mov
adc
movb
sti
call
push
pushf
or
jmp
enter
dec
mov
rorl
test
lret
mov
push
adc
pause
dec
les
inc
xchg
mov
inc
lret
mov
jae
cmp
lds
inc
nop
sub
jl
pushf
mov
xchg
test
inc
lcall
cmp
mov
and
mov
lods
sub
mov
or
adc
pop
push
pop
insb
lahf
and
cmpsl
adc
push
jne
ljmp
push
imul
out
inc
xchg
mov
sbb
fldz
xchg
out
dec
pop
push
mov
fdivl
mov
xor
divl
push
in
outsl
pop
rcl
adc
or
or
mov
movsw
cltd
popf
ret
pop
adc
xor
push
aad
mov
mov
xchg
jno
adc
pop
data16
movsb
outsb
cmc
jo
xchg
or
push
shld
cmp
lea
pop
jne
inc
jnp
push
pop
sub
or
std
daa
adc
add
lods
pop
push
shll
cmpsb
cli
test
mov
jg
and
movsl
sub
pop
lret
dec
add
push
or
repnz
das
push
je
adc
cli
int
aaa
push
enter
lods
lret
mov
jp
dec
xchg
xor
retw
mov
in
sbb
rorb
bound
nop
pop
dec
cmp
jae
and
mov
or
sti
call
pushf
scas
jae,pn
fidivrl
push
test
cltd
cld
test
cld
cmpsl
mov
test
jmp
js
pop
sub
lods
mov
gs
mov
or
imull
push
testl
and
divl
mull
loop
pop
mov
cmp
test
sbb
je
jo
repnz
stos
cltd
and
dec
loopne
inc
stos
cs
and
outsl
ss
xchg
jmp
fsub
out
je
and
stos
dec
adc
mov
lds
out
pushf
icebp
push
imul
inc
push
cmp
xchg
jae
movsl
mov
inc
stos
clc
push
and
jmp
test
mov
cld
push
inc
sti
loop
cmc
flds
cmpsl
ror
push
dec
daa
cld
and
adc
outsb
jo
rep
xor
enter
leave
ret
jecxz
mov
pop
pushf
mov
clc
jp
insb
movzbl
add
lods
pop
mov
das
xchg
push
jno
lods
pop
je
insb
mov
jmp
inc
cli
cmp
insb
cs
mov
mov
mov
insb
or
push
or
jmp
stc
or
xor
pop
clc
jmp
repnz
stos
je
push
movsl
add
call
xchg
in
and
shufps
jne
sbb
xor
and
lea
mov
aad
sub
sbb
fstpl
test
adcl
andl
jb
les
andb
or
and
adc
jne
ret
movntps
or
sbb
inc
popa
mov
xor
mov
addr16
outsb
je
sbb
testl
sti
inc
cmpsb
inc
stc
call
test
mov
push
push
add
adc
mov
push
xchg
xchg
jecxz
jnp
mov
xor
cmp
mov
addr16
mov
sbb
repnz
dec
les
sub
jl
jns
inc
mov
inc
out
mov
in
sub
aaa
mov
xor
mov
mov
dec
cmp
pop
les
xor
mov
jne
aad
jns
insb
mov
rcrl
xchg
mov
rolb
movsl
clc
xchg
sub
jne
and
mov
and
gs
xchg
dec
jne
pop
sarb
jle
and
adc
dec
fists
push
hlt
adc
sbb
mov
je
hlt
mov
jmp
xchg
sti
push
sub
in
xor
cmp
movsb
into
mov
in
nop
jae
mov
jno
mov
pop
adc
xchg
in
nop
jmp
mov
cmpsb
mov
xchg
aas
repnz
mov
nop
cmc
mulb
jmp
testl
arpl
fs
pop
sti
movsl
cld
dec
cmp
andl
cltd
sbb
pushf
fiaddl
pop
cmc
mov
inc
and
cwtl
repz
push
shlb
cs
cmp
mov
and
sub
sbbb
repz
mov
pop
dec
inc
mov
adc
sbb
scas
insb
ja
nop
push
pushf
aas
jl
pop
push
inc
adc
in
sbb
xor
or
adc
icebp
out
dec
into
pop
push
mov
in
lret
add
cmc
xchg
dec
ljmp
xlat
xor
dec
sti
movsb
testb
cltd
ds
jecxz
icebp
sbb
movsb
xor
pop
imul
popa
outsb
cmpsl
nop
push
dec
lds
lods
jle
int3
arpl
into
mov
outsb
sbb
mov
push
pop
pop
cwtl
nop
add
push
mull
mov
hlt
cmc
add
inc
pushf
in
cmp
sub
fsubrl
cmp
aam
mov
xor
lods
and
mov
ds
and
in
movsb
pop
mov
mov
adcb
and
sbb
sbb
adc
push
rcl
into
mov
int3
int3
enter
mov
lods
jne
aam
js
fdivl
dec
jbe
fdivr
jle
push
mov
out
jecxz
mov
dec
xor
xchg
mov
inc
lods
add
and
int
lcall
std
add
jne
xor
lds
adc
and
xchg
jmp
test
loopne
idiv
je
shll
adc
push
dec
push
lahf
push
daa
xor
dec
and
sahf
ret
shlb
in
adc
or
and
mov
insb
mov
inc
adc
xor
mov
sbb
nop
out
loope
in
loop
push
xor
mov
dec
mov
mov
mov
inc
mov
add
addl
stc
push
mov
xor
sub
sub
add
sub
fwait
or
push
call
fidivrs
dec
jmp
stos
and
xchg
fwait
loopne
jb
adc
lret
add
jo
in
xor
inc
movb
dec
cmp
data16
add
nop
movsb
and
cmp
xchg
or
dec
sub
jae
xchg
xor
inc
sbb
idiv
jmp
add
add
mov
inc
leave
les
cmc
jmp
imul
es
dec
adc
mov
scas
pop
rcll
sbb
test
sbb
cmp
xchg
dec
test
hlt
jp
mov
leave
sarl
pop
dec
mov
add
fimull
cltd
movsb
dec
popf
fidivrs
lret
hlt
sahf
xchg
fcmovb
hlt
jp
inc
dec
xchg
mov
lahf
dec
pop
cmp
mov
bound
mov
test
sub
xchg
sub
sti
mov
xchg
add
test
imul
dec
xchg
fidivl
je
pop
sub
aaa
cmpb
je
aas
je
dec
test
and
mov
adc
push
and
aaa
push
inc
sub
inc
mov
sub
push
jle
pop
fisttps
sbb
mov
sub
jnp
mov
adc
addl
jl
pcmpeqw
xor
js
out
inc
inc
sub
adc
add
adc
imul
hlt
mov
fwait
or
mov
and
cmpsb
add
clc
inc
sarl
add
or
insb
inc
pop
sbb
nop
sub
mov
or
add
cmp
jge
add
inc
ds
aam
push
jl
clc
out
jno
jg
jmp
popf
inc
mov
or
cli
and
sbb
data16
or
stos
adc
sub
mov
lods
inc
mov
or
add
jne
xor
cmp
prefetch
mov
cli
fnstenv
or
out
sbb
and
fdivrl
sub
xchg
cmp
nop
adc
pop
xor
stos
cmpsb
mov
insl
insb
jg
shll
movsb
xor
in
jmp
fisubrl
popf
cmp
jnp
lock
cmp
cmpsb
jmp
test
xchg
rolb
push
mov
adc
pop
sub
xchg
int3
sub
dec
and
push
test
cmpsl
inc
gs
jl
or
movl
pop
lock
ss
test
jne
pop
add
add
jle
rolb
add
test
je
mov
dec
inc
or
test
je
add
adc
dec
sub
adc
add
mov
test
fld
jmp
cmp
shlb
pop
inc
dec
mov
ds
jmp
sbbl
xor
add
add
jmp
dec
jne
mov
pop
pop
mov
sub
xchg
shrl
mov
mov
fsub
loope
mov
mov
add
and
divb
ret
xchg
test
sub
cwtl
sub
mov
adc
push
add
data16
jb
stos
and
xor
movsl
lcall
xchg
pop
movsl
cwtl
in
pop
mov
add
into
inc
push
jb
or
lock
rcr
push
dec
or
cmp
rclb
push
pop
sbb
jge
and
add
inc
neg
dec
mov
cmp
add
aad
pop
push
add
pushf
rcr
jp
push
xor
push
sbb
jmp
jl
shlb
push
pop
and
sub
and
pop
mov
das
dec
stc
sbb
out
jmp
cmp
pop
pop
out
insb
xor
scas
jo
out
lahf
shrl
jo
or
sbb
scas
push
add
adc
sbb
mov
jne
out
mov
aaa
jne
int3
push
int
bound
add
push
or
cmp
jbe
cmp
cmpb
add
stc
or
rep
jmp
jp
mov
sub
jb
add
enter
mov
les
adc
pusha
and
mov
clc
xchg
add
mov
int3
sahf
pop
pop
jmp
dec
inc
jno
add
add
nop
inc
std
das
lret
mov
mov
push
les
mov
movsb
pushf
push
or
mov
mov
jns
out
call
lock
sahf
out
hlt
clc
clc
cld
sbb
cld
lea
adc
xchg
incl
xor
sahf
mov
and
cmp
hlt
pop
nop
jl
lret
test
push
inc
mov
jmp
je
jl
test
call
and
std
sbb
xorb
shlb
lods
sub
mov
sbb
mov
mov
cwtl
mov
loopne
es
out
enter
mov
jge
pop
or
jecxz
out
repnz
mov
imul
mov
gs
jae
sbb
dec
addr16
repz
pop
fs
repnz
sbb
jns
out
sbb
adc
or
jns
out
or
add
cld
cld
xor
nop
cwtl
test
mov
mov
pop
push
jnp
fildll
cmp
push
sub
xchg
ret
mov
pop
mov
jl
ret
sahf
es
clc
push
es
sub
and
popa
js
into
dec
call
gs
stos
loop
mov
inc
pop
adc
dec
xchg
loope
test
enter
inc
adc
add
mov
leave
roll
repz
adc
inc
int
inc
dec
cmp
std
arpl
hlt
mov
mov
stc
push
test
sbbl
js
push
push
stc
adc
adc
cmp
andl
rorb
rorl
test
rep
push
rcl
push
iret
dec
gs
fwait
cli
push
pushf
xchg
xchg
lea
ret
adc
push
adcb
xor
bound
mov
xorl
inc
add
ret
pmulhuw
mov
or
mov
jne
les
jne
or
cmp
out
or
and
adc
inc
dec
sub
push
mov
fcmovb
add
jne
sbb
or
sub
ret
add
rcl
inc
ret
ret
in
xor
xchg
lock
inc
loopne
out
dec
call
push
add
leave
rorl
mov
or
test
jge
pop
out
ret
test
dec
imulb
push
push
push
push
rcrb
adc
cmp
sub
movzbl
push
push
jmp
imul
xchg
jp
mov
addl
jmp
aaa
or
out
je
sub
cmpsb
xchg
cmp
in
push
push
cld
inc
or
and
inc
rorb
add
add
iret
cmp
jne
neg
pop
pop
pop
pop
ret
jge
xchg
js
insl
add
inc
mov
xchg
aaa
push
push
jb
add
pop
jb
cmpb
pop
mov
test
dec
rclb
add
push
inc
inc
dec
fwait
sbb
or
adc
or
cmpb
int
mov
mov
inc
push
je
mov
mov
adc
andb
inc
add
jmp
cmp
je
arpl
add
pop
js
or
jne,pn
push
lea
add
cmp
mov
das
rorb
sub
sub
cmc
xor
test
mov
pop
jge
adc
lahf
and
pop
push
pusha
push
scas
out
das
inc
mov
jge
dec
cmp
aad
adc
jb
lds
aas
fists
jge
xorl
or
lock
push
add
sub
and
loope
inc
pop
sub
sub
xchg
mov
and
sub
cmp
test
mov
and
call
push
mov
pop
push
push
xchg
cmpsl
icebp
bndldx
xor
inc
jae
orl
inc
or
add
sub
mov
addl
and
cwtl
js
es
addr16
cmp
mov
faddp
shr
cmp
dec
jo
or
adc
dec
movsb
sbb
fimuls
jae
pop
addb
pop
push
or
or
inc
in
inc
lods
mov
push
xor
cmp
pushf
ljmp
jbe
movsl
sub
jge
jmp
sbb
xor
cmpsb
bound
data16
adc
test
inc
push
add
test
push
push
lea
xor
pop
mov
mov
add
imul
lea
aam
push
sbb
lds
pusha
add
xor
mov
xchg
push
mov
fisubrl
pop
pop
shl
shr
jp
add
test
je
test
lret
repz
or
and
loopne
jne
pop
add
pop
sub
stos
leave
jge
pop
mov
stos
inc
ret
pop
lea
fisttpl
jge
movb
or
das
mov
fildl
or
bound
roll
in
or
push
es
add
jecxz
push
mov
mov
divl
lret
mov
sti
sub
add
push
movsl
jno
es
and
mov
and
xorb
cmp
pop
mov
cmp
je
repz
or
fdivl
sahf
sarb
loope
faddl
aam
xchg
jecxz
or
inc
aas
xchg
mov
cld
scas
pop
pop
fistl
rcl
xor
xor
jno
shr
pusha
sbb
lcall
or
jo
sub
push
or
inc
aaa
fsubrs
pop
pop
mov
add
jne
lea
mov
sub
inc
push
cmp
lea
pop
adc
data16
push
jmp
orl
sub
lea
mov
push
mov
cmpsl
jno
push
ret
sti
dec
out
mov
and
imul
push
dec
add
insb
and
adc
sub
sub
pop
pop
outsb
js
push
add
dec
mov
inc
flds
push
pop
jge
jmp
lock
push
mov
add
push
popf
sbb
xchg
push
sub
inc
or
cmp
sub
stc
push
adc
lcall
mov
mov
imul
or
xchg
add
cmp
adc
testl
inc
sbb
xchg
test
es
call
nop
cmp
cmp
xor
push
enter
cmp
pushl
push
fwait
sub
add
add
mov
dec
cmp
jb
push
inc
sbb
cli
add
xchg
int3
mov
jmp
and
sub
fsubr
sbb
mov
xor
enter
dec
test
inc
or
test
mov
push
push
or
dec
or
jmp
and
mov
sub
mov
jne
add
fistl
movzwl
pop
stos
dec
and
xchg
push
push
sbb
sbb
sar
ja
pop
mov
cmc
imul
lds
sbb
jle
mov
jmp
and
sahf
mov
dec
loopne
jb
push
sub
mov
out
icebp
mov
mov
repz
push
inc
jmp
ds
icebp
push
xor
sbb
sbb
push
adc
push
lds
rcll
xlat
mov
lea
shll
enter
mov
mov
fldcw
aad
push
jns
xchg
jmp
std
leave
lea
jno
test
or
outsl
fs
imul
jns
icebp
je
xlat
mov
repnz
cmp
xor
mov
dec
daa
mov
cmp
or
mov
cli
push
inc
mov
push
or
or
bound
mov
fists
mov
xor
or
loopne
cwtl
loope
and
fcomps
push
pop
cmpsb
mov
push
popa
nop
mov
rclb
sub
add
cmp
sarl
shl
inc
fwait
aas
mov
push
mov
inc
or
mov
dec
sbbl
and
inc
add
fdivrs
jb
sub
push
insl
cmpsl
cli
mov
pushl
imul
ficoml
jmp
xchg
pop
sub
out
shl
sub
enter
pop
push
or
mov
xor
inc
inc
data16
dec
sbb
icebp
pop
adc
push
mov
lds
or
bound
push
aam
jb
daa
mov
mull
cmpsl
fiaddl
loope
rcrl
add
cmp
scas
add
loop
ret
mov
push
add
sbb
jbe
pop
pop
dec
mov
js
adc
push
push
iret
and
xchg
cmpsb
adc
cmp
push
add
or
xchg
inc
test
testb
xor
testb
int
out
fninit
sub
cmpsb
jnp
sbb
sbb
cltd
lret
jge
adc
or
xor
cmp
enter
pop
push
adc
andb
ljmp
div
mov
rcrb
fistpl
inc
mul
add
scas
or
jb
cmp
jb
cmp
movsb
xor
jbe
dec
cmc
cs
mov
cmp
push
adc
push
adc
scas
aad
cmp
sahf
enter
jae
out
or
or
pop
out
xchg
sbb
lahf
sahf
or
neg
cmp
repz
stos
loopne
xor
cwtl
inc
cmp
jb
and
out
test
xor
das
lret
sbb
lahf
gs
adc
sub
xchg
fcoms
jnp
shr
rcr
fcomi
pop
addr16
sbb
inc
stc
stc
adc
test
mov
mov
add
cmp
push
insb
es
and
cmp
je
mov
jl
jg
sbb
or
sub
mov
jne
jmp
add
popf
movsl
or
push
mov
push
in
sbb
or
je
movsl
sbb
cmc
sbb
sbb
jae
push
push
mov
cmpsb
repz
dec
ljmp
and
cmp
movsl
sbb
nop
addl
inc
dec
imul
bnd
push
mov
test
push
mov
jne
inc
inc
dec
mov
dec
push
add
cmp
jne
mov
mov
cmp
push
push
cmp
jne
or
sub
cmpsl
test
sbb
mov
adc
cmc
add
andl
aaa
ret
add
sbb
pop
decl
testb
mov
mov
cmp
jne
stos
xor
xor
cmp
jne
adc
loop
rorb
sbb
xor
cmp
inc
jecxz
cmp
add
push
jbe
sbbb
sbb
xchg
push
xor
jne
and
adc
nop
jnp
pop
mov
pop
jg
dec
or
mov
or
jge
cmp
jle
mov
pop
and
add
and
ret
jmp
mov
sar
sahf
add
enter
mov
cli
lret
into
add
or
or
add
xchg
add
pop
lea
push
push
sub
mov
movb
xchg
out
or
mov
lock
or
mov
sub
inc
lea
sarb
data16
rcl
xor
je
loopne
xor
jb
sub
cmp
push
xchg
test
mov
pop
or
cmp
cmp
lods
sub
xchg
loope
enter
add
fadds
pop
mov
inc
xor
fiadds
adc
mov
jb
push
cmp
lea
inc
jmp
sbb
pop
cmp
pop
cltd
jp
xchg
hlt
sbb
outsl
ds
mov
movsb
or
mov
sbb
add
leave
enter
add
push
and
fiadds
push
out
call
das
jmp
push
in
or
sbb
or
fldt
pop
je
and
enter
cltd
add
shrb
fsubrl
mov
push
jb
push
or
xor
sbb
lods
inc
push
pop
cmp
test
adc
ja
pop
or
xchg
mov
push
mov
xchg
leave
add
push
lea
cmp
mov
adc
cmp
jae
pop
push
push
dec
sub
inc
out
or
call
or
popf
mov
xor
add
enter
lock
gs
pop
ja
in
mov
fldl
mov
push
in
and
or
mov
cs
xor
lcall
push
inc
jmp
shrb
lods
pop
cmp
orl
xchg
mov
sbb
lods
push
jecxz
out
mov
test
xchg
push
jne
call
adc
or
mov
cmp
rolb
cmp
or
add
imulb
jne
cmp
insb
jae
mov
inc
mov
gs
sbb
loope
mov
popf
fcomip
and
xlat
adc
js
test
ljmp
jae
and
shlb
jecxz
dec
ret
outsb
push
int3
xchg
inc
pop
jmp
sbb
jne
pop
add
sbb
push
ret
test
lret
xor
or
scas
test
fcmovnbe
add
sub
dec
js
mov
imul
push
push
rclb
rorl
fisubl
stc
movsb
bound
popa
mov
andb
sbb
jne
and
test
inc
sub
cmp
jb
cmp
jbe
mul
icebp
cmp
je
jne
out
clc
adc
lock
neg
sbb
neg
outsb
and
testl
xor
movsl
clc
in
pop
push
jmp
outsb
xchg
popa
or
mov
js
add
dec
jmp
insl
adc
es
xchg
loop
div
scas
and
repz
mov
sbb
loopne
cmp
ja
dec
dec
mull
lods
mov
lock
xor
outsl
pop
aam
mov
or
in
push
scas
shrb
inc
mov
outsl
insb
add
decl
test
or
js
and
jmp
je
push
adc
inc
xor
add
sbb
fmull
push
adc
mov
outsb
sarb
imul
mov
add
mov
pop
mov
orb
fimull
adc
sbb
sbb
push
std
pop
xor
mov
mov
xchg
or
shl
add
arpl
adc
fsubrs
in
sbb
movsl
loopne
cmp
pop
mov
push
int
jbe
cmp
sub
jne
mov
pop
jae
jb
xor
or
and
shlb
adc
and
in
shlb
add
mov
aam
add
pop
add
sbb
dec
add
rclb
lea
fs
or
push
insb
mov
and
sub
cwtl
call
fsubl
insb
stos
mov
leave
push
and
jp
out
aaa
mov
pop
jle
jge
inc
inc
pop
mov
leave
adc
push
inc
pop
jb
bound
xor
mov
test
jmp
push
push
add
inc
add
fisttpl
mov
test
mul
out
sarb
add
popl
or
test
cmp
and
ret
or
jl
adc
xchg
jnp
pop
adc
mov
or
push
je
cld
xchg
add
xor
push
sbb
out
inc
dec
add
adc
xchg
jp
and
out
mov
orl
sar
add
and
pop
test
sbbl
enter
movsb
gs
inc
add
andb
int3
xchg
mov
mov
mov
and
or
push
loopne
cmp
pop
jns
jp
lds
lcall
push
dec
dec
ret
mov
popa
push
repnz
or
and
hlt
in
mov
mov
cmp
push
dec
lock
movsb
test
aas
sarb
push
in
mov
and
faddl
sub
jl
js
push
lret
imul
dec
dec
pcmpgtb
sub
test
mov
add
mov
lcall
leave
and
mov
fadds
fisttps
fs
mov
inc
pop
adc
jb
sub
add
je
pop
dec
dec
je
jae
push
fwait
pop
push
jb
pop
repnz
or
fsts
add
addb
sti
sub
adc
aaa
cmp
inc
lea
add
in
pop
inc
loopne
jae
sbb
lea
jmp
lock
lahf
mov
jo
roll
mov
imul
je
push
and
mov
add
jne
adc
aas
ss
add
xor
push
inc
inc
xor
fisubrs
xor
adc
sub
testb
rclb
or
gs
xchg
mov
xor
popf
or
xor
mov
clc
cmp
or
mov
mov
inc
lahf
mov
addr16
jo
aaa
mov
push
lahf
test
inc
pop
int3
xor
push
cmp
mov
or
xchg
ret
xor
incb
jmp
in
and
sub
dec
xchg
nop
and
push
lret
call
out
add
cltd
dec
sbb
lea
loopne
andl
add
push
fwait
lret
idivb
movsl
test
xchg
cmp
and
add
xor
hlt
aaa
icebp
das
sahf
xor
pop
xor
je
loop
dec
orb
lds
jmp
nop
push
mov
mov
dec
stc
pop
faddp
adc
dec
add
inc
mov
shlb
dec
add
add
setnp
shr
test
ja
andl
jbe
jl
xchg
int3
and
call
push
ds
inc
sbb
sbb
add
sti
bound
int
add
fwait
or
lock
add
cld
mov
adc
cwtl
sub
mov
adc
out
dec
shll
dec
push
aam
push
loopne
pop
fxch
mov
adc
lret
adc
dec
jge
mov
push
xor
fidivl
mov
adc
xchg
add
test
xor
sbb
std
cmpsl
in
dec
mov
inc
mov
mov
aam
jmp
aas
mov
popf
fstpl
bnd
cmp
xchg
add
dec
icebp
hlt
mov
or
push
fcmovnb
aam
ds
shrb
push
adc
loopne
pop
add
ljmp
inc
jmp
mov
cmp
dec
or
outsb
pop
inc
sub
jmp
nop
enter
or
hlt
fadds
in
mov
mov
sbb
leave
das
inc
or
push
or
or
pop
jmp
je
iret
xchg
sub
or
add
lret
jmp
jl
mov
repnz
xor
jg
inc
test
jl
adc
and
rolb
fidivl
cli
jmp
or
pop
mov
and
fimuls
add
testl
in
mov
sub
adc
jg
iret
jno
gs
test
push
push
dec
rol
je
xchg
mov
dec
push
les
inc
vucomiss
inc
out
cmp
add
pop
pop
enter
add
mov
jmp
sub
mov
sub
and
jne
and
xor
push
insl
loope
add
shlb
test
mov
test
shrl
test
fsubl
pop
pop
sub
sub
or
je
sbb
test
and
sub
hlt
xor
adc
or
push
loope
push
push
aad
sub
leave
dec
sub
fldcw
test
cli
cmc
pop
popa
pop
adc
mov
les
adc
push
movsl
inc
in
and
jno
dec
mov
js
inc
fdivrs
and
jle
lea
fidivl
and
inc
push
mov
dec
stos
mov
adc
stos
fadd
scas
add
lahf
ljmp
inc
mov
and
stc
mov
dec
jecxz
sub
dec
call
int
cmp
test
dec
cmp
dec
or
dec
add
push
mov
mov
les
ret
add
push
push
test
inc
cmp
js
int3
movb
add
and
inc
xor
in
adc
pop
xor
cmpl
jg
shrb
jecxz
das
test
mov
dec
sarb
das
es
add
inc
pop
sub
xor
cmpl
ds
loop
lea
mov
add
add
and
inc
cmpsl
sahf
lds
jb
lcall
inc
xchg
xor
push
mov
and
loopne
test
int3
sbb
fcom
loope
jmp
dec
sub
scas
insb
push
flds
add
sarb
je
push
jns
adc
dec
ljmp
add
push
xor
add
jp
out
cmpb
shll
lret
repz
popa
call
xchg
ljmp
jecxz
push
in
hlt
cmpsl
adc
repz
push
loope
jge
cmp
scas
adc
stos
loope
loopne
inc
mov
inc
hlt
jmp
inc
sbb
dec
dec
jg
je
sub
sub
inc
je
dec
sbb
pusha
pop
sti
dec
jne
jmp
andb
cmpb
jne
add
jp
adc
adcb
shrl
pop
jmp
bnd
push
insb
cmp
and
pusha
icebp
jmp
sti
or
add
jmp
decb
sti
cmpb
dec
jb
movsl
pop
jge
movsb
mov
and
or
jecxz
rclb
pop
or
push
mov
inc
sub
pop
pushl
add
aam
inc
xor
jno
add
je
arpl
dec
jnp
insb
and
shrb
les
adc
xor
cmp
jno
xor
gs
inc
outsl
jg
sub
arpl
fs
add
mov
int3
pop
push
jle
imul
dec
pminub
mov
mov
les
mov
in
sub
jle
add
inc
push
pop
pop
jp
stos
pop
jge
dec
pop
shlb
mov
cmp
pop
push
into
mov
movsb
imul
dec
jmp
push
jmp
mov
hlt
pop
nop
orl
jnp
aad
fcmovb
clc
test
and
addr16
pop
mov
mov
inc
mov
dec
dec
or
data16
dec
pop
pop
mov
mov
inc
in
inc
ret
testb
and
and
lock
inc
fistpl
jbe
push
gs
mov
gs
into
sub
inc
je
pop
push
and
jecxz
mov
jae
or
sub
in
push
jb
adc
adc
xchg
mov
mov
add
dec
add
das
jb
add
sub
push
ret
aam
xchg
adc
inc
push
out
mov
jne
inc
imul
pop
jle
sti
or
es
push
mov
jo
out
fsubs
call
xchg
ret
and
pop
les
pop
mov
daa
sbb
mov
adc
mov
sub
cwtl
or
aas
pop
dec
cmp
ret
sub
mov
dec
aaa
int
or
jmp
mov
xor
mov
sbb
ret
mov
cmp
js
mov
pop
dec
movsl
out
cli
dec
dec
aam
fsts
sub
mov
iret
jnp
iret
lock
mov
or
sbb
push
ret
and
jnp
pop
mov
mov
inc
cmpsl
or
cli
inc
and
cmp
je
inc
cmp
adc
add
xor
ss
cmp
jae
mov
jmp
mov
cmp
ja
add
or
lock
inc
mov
mov
into
test
mov
pushf
sub
dec
jne
xor
jmp
enter
rcll
cli
adc
cwtl
add
lret
daa
aaa
loopne
test
ror
movsl
xchg
push
cmp
mov
push
pop
gs
mov
pop
call
add
addr16
dec
or
shll
push
test
ljmp
enter
sub
pop
leave
jp
mov
test
xor
dec
push
ret
xor
inc
rorl
inc
aam
and
pop
dec
adcb
jecxz
in
fistpll
sarl
cmp
sub
jg
sub
xchg
add
ljmp
and
add
jne
les
jmp
push
dec
fs
jo
smsw
cmp
icebp
jecxz
mov
dec
xchg
lds
test
outsl
or
xchg
mov
fmuls
push
sarl
mov
adcb
stos
jne
xor
mov
jge
orb
add
popf
mov
fcomps
pop
and
adc
fwait
adcl
inc
sahf
push
filds
std
inc
mov
jmp
dec
add
dec
inc
imul
mov
into
mov
mov
aas
sub
les
cmp
orb
out
jmp
lea
shl
jmp
pop
clc
aad
je
push
fcompl
mov
jbe
jl
rolb
scas
jecxz
dec
enter
fildll
insb
or
and
add
sub
cli
xchg
ljmp
or
push
add
adc
adc
cmp
mov
incb
or
lcall
cld
test
push
sbb
js
push
insl
inc
cs
enter
or
push
and
nop
inc
inc
or
mov
mov
test
enter
divb
jg
xor
mov
jns
call
xor
ficoms
int3
data16
xchg
cmp
imul
mov
jle
sbb
mov
pop
bound
imul
out
pop
or
dec
add
or
stos
or
push
adc
lcall
jnp
push
jle
lds
sbb
push
lcall
jne
inc
insb
into
mov
push
ja
stc
cmp
or
jp
mov
push
das
xchg
mov
xor
inc
push
mov
andb
fsubl
sbb
sub
mov
lret
dec
or
and
data16
call
mov
and
or
jno
add
shl
dec
sbb
cmp
inc
xchg
ljmp
pop
cwtl
repz
sarb
into
cmp
je
add
inc
cmp
loope
icebp
int3
and
inc
rcl
out
test
sbb
sbb
mov
jmp
aaa
push
or
dec
in
rep
stos
mov
rorb
out
out
popf
out
inc
dec
cwtl
mov
mov
insb
fwait
xchg
sub
xor
cmp
xchg
mov
orb
jmp
jo
or
out
stos
roll
add
lea
int3
lret
je
mov
and
cli
cmp
ja
or
and
cld
mov
mov
cwtl
inc
jbe
inc
inc
sbb
xor
inc
xchg
add
jmp
pop
cld
add
shll
inc
jne
mov
lea
mov
pop
mov
or
xchg
mov
dec
cmp
inc
mov
icebp
push
mov
sbb
test
push
lret
lcall
add
sbb
xchg
je
mov
ret
leave
xchg
mov
and
pop
andl
in
or
jmp
cltd
std
dec
cld
fxam
daa
sbb
mov
sub
pushf
je
sub
call
add
or
je
ret
mov
cmp
add
mov
pop
push
adc
cmpsb
sbb
imul
outsb
push
xor
ss
sbb
inc
adc
push
adc
push
lcall
adc
insb
mov
mov
push
xchg
add
jb
mov
movb
inc
push
lea
ljmp
ja
sub
lea
bound
mov
add
inc
inc
mov
hlt
xor
pop
pop
data16
mov
cmc
movsl
aam
mov
push
out
sahf
or
loop
push
xchg
sub
repz
sub
psrad
nop
cmp
sbb
stc
push
sbb
test
enter
mov
xor
je
sbb
loopne
jecxz
mov
jb
push
mov
les
cltd
add
and
sub
popa
jb
add
push
sub
jmp
inc
or
mov
sub
xchg
push
std
sbbl
orb
inc
fbld
add
inc
into
add
popa
dec
sub
sbb
push
cmp
mov
dec
negb
call
je
inc
inc
xchg
fldcw
dec
adc
loop
add
jmp
andb
pop
push
les
mov
dec
insl
add
inc
pop
lea
cmp
xor
pop
inc
xor
dec
mov
test
cmovne
add
mov
mov
adc
adc
out
sbb
ret
push
cmp
cmp
test
arpl
jp
test
mov
dec
lock
stos
sub
pop
loopne
add
push
or
cli
add
ss
inc
pop
call
lcall
pop
mov
shrl
sub
adc
out
adc
inc
xor
imul
dec
cld
lea
mov
sbb
add
jmp
pop
push
xor
aas
dec
pop
or
iret
jbe
push
enter
add
and
stc
and
pusha
mov
sbb
shr
lea
not
and
mov
jmp
decb
jne
and
jmp
add
js
fstpt
push
pop
les
test
mov
jns
or
cltd
mov
or
pop
clc
adc
sti
sar
dec
cmp
out
ret
pop
repz
daa
loope
xor
and
jo
popf
imul
push
clc
dec
pop
cmp
jbe
mov
add
repz
orl
add
daa
fiadds
cmp
mov
push
shlb
push
adc
sahf
ljmp
push
lock
decb
dec
cmp
icebp
mov
or
xor
and
adc
inc
sub
mov
jb
pop
enter
int
mov
or
add
push
cmp
mov
mov
jl
dec
paddd
mov
and
rorl
mov
shr
sbb
lea
or
or
jmp
adc
outsl
fstps
sbb
lahf
jns
test
test
or
mov
mov
mov
adc
xchg
mov
cmp
mov
or
ret
mov
add
sub
mov
and
xlat
jae
leave
out
fistps
sub
andl
dec
inc
dec
popf
pushw
inc
push
adc
xchg
mov
js
shll
cmpsb
and
xchg
dec
outsb
rclb
shrl
pushf
mov
mov
enter
inc
dec
adc
push
lea
push
sti
sub
xchg
les
cmp
ficoml
adc
mov
mov
rclb
or
inc
and
out
push
movsb
call
test
sbb
test
stos
push
scas
popa
lock
rclb
jge
or
shr
jo
pop
push
mov
lcall
not
call
mov
xchg
test
decl
pop
pop
ret
cmp
and
push
iret
jne
add
cmp
popl
out
jns
fidivrl
fsubrs
and
add
jae
cmpl
mov
push
inc
mull
in
es
out
in
adc
adc
test
xor
pop
adc
cmp
lods
fadd
mov
mov
or
mov
add
and
sub
je
and
push
add
or
mov
fwait
and
xchg
test
outsb
in
add
test
and
or
je
xchg
jne
jmp
xor
or
ret
int
scas
into
jne
push
roll
jl
shl
inc
jmp
mov
jl
push
mov
sub
sar
dec
cmp
jle
lods
and
pop
cmp
sbb
pop
adc
add
popa
jge
cmpb
test
dec
rcrl
pop
mov
pcmpeqw
pop
push
in
and
jmp
mov
hlt
xor
mov
mov
mov
pop
lret
adc
and
dec
jp
clc
add
pop
jp
dec
mov
sarl
fcoml
or
jns
xchg
fs
adc
sbb
decb
jge
scas
roll
shll
out
or
aaa
rcll
jl
minps
das
or
xchg
cmp
mov
test
aaa
or
xor
mov
mov
jne
and
cs
add
cld
inc
mov
lea
pop
add
jne,pt
cmp
cmp
arpl
daa
sbb
xlat
mov
sbb
js
or
popa
sbb
mov
inc
push
or
inc
adc
je
out
cmpl
sar
mov
inc
shl
xchg
scas
or
sbb
add
subb
adc
pop
pop
in
das
adc
adc
jmp
mov
jno
mov
rolb
sub
call
pop
sbb
and
push
loope
sahf
repnz
loopne
ret
imul
pop
sub
sbb
mov
sub
inc
or
fwait
rol
dec
sti
aad
or
or
inc
pushf
mov
gs
mov
pop
pop
add
lea
cwtl
or
lea
nop
cmpsl
jno
orl
mov
adc
inc
cld
lock
and
into
adc
add
call
xor
add
sbb
lret
clc
fwait
out
mov
inc
push
mov
dec
or
or
add
fs
inc
mov
jno
inc
inc
mov
adc
jge
test
mov
jne
or
shlb
jne
incb
pusha
sbb
sub
push
adc
sub
pushf
sbb
inc
out
bound
ljmp
cld
dec
cmp
test
pop
cmp
xchg
and
shufps
mov
mov
dec
fadd
mov
inc
or
push
insb
es
pop
xor
loop
mov
push
mov
dec
pop
jecxz
mov
clc
mov
nop
stos
lock
sbb
mov
dec
or
push
lcall
imul
into
add
push
stos
mov
mov
sbbl
movsl
cwtl
lea
insb
aad
loop
mov
sub
mov
sub
sub
jne
adc
jecxz
and
jb
lahf
xchg
push
mov
adc
mov
adc
inc
fmull
sub
mov
popf
mov
inc
pop
pop
les
push
pop
pusha
mov
imul
mov
sub
xor
repz
mov
or
mov
inc
out
xchg
ljmp
jne
in
int3
jo
cmp
mov
jne
jae
sub
add
into
je
cmp
inc
in
jne
and
stc
mov
jnp
push
mov
test
cmp
ja
add
push
repnz
inc
ljmp
js
cmp
in
stos
test
push
add
push
rcll
push
cmp
cmp
push
mov
mov
mov
push
bound
sub
leave
sbb
cmpsb
shrb
mov
add
dec
stos
sbb
cmp
pop
jae
imull
pop
xchg
stos
shl
and
inc
xor
je
adc
push
adc
adcl
add
test
mov
jp
cs
cmp
sbb
xchg
push
xor
out
enter
sub
shlb
push
in
jl
add
leave
andb
push
push
mov
add
adc
adc
dec
mov
cltd
and
sbb
pop
pop
pop
xor
aas
sub
and
ret
dec
add
or
idiv
adc
aam
push
or
sbb
clc
inc
mov
mov
lds
shlb
inc
or
jp
xor
negl
shlb
pop
pusha
push
gs
push
jns
enter
arpl
or
inc
push
xor
adc
jle
push
push
xor
or
jne
jae
pop
pop
mov
inc
or
xchg
add
xchg
pop
sbb
ss
lret
into
les
rorl
add
adc
jle
mov
push
inc
add
fdivl
inc
adc
movsb
test
jne
ret
push
insb
inc
pop
popa
push
mov
sbb
pushf
xor
xor
jne
or
inc
cmp
adc
shl
cmp
xchg
popa
adc
sub
shlb
add
add
hlt
call
jmp
rcll
pop
cs
jnp
pushf
xchg
mov
push
ret
xor
dec
sbb
repnz
stc
sbb
xor
cmp
cmp
add
mov
loope
dec
rcrb
inc
adc
arpl
jmp
sub
lds
or
push
dec
pop
mov
cmp
add
cltd
or
imul
push
add
xor
cmc
clc
cmp
xchg
and
arpl
popa
je
cmp
cmp
xchg
popa
mov
mov
push
imul
mov
dec
or
or
andb
inc
add
ret
dec
push
ret
cmp
xadd
dec
mov
sub
cmp
push
sub
je
push
mov
push
dec
sub
cwtl
mov
test
lahf
push
or
mov
jmp
inc
jne
mov
inc
inc
jmp
jae
outsb
adc
cld
lods
push
adc
or
and
pop
or
push
bound
push
ucomiss
nop
imul
cmp
or
clc
jne
jne
movsl
rolb
jne
pop
into
push
mov
ds
pop
in
or
subb
and
xchg
mov
cltd
enter
adc
lret
jge
or
pusha
adc
mov
int3
mov
sub
test
dec
and
adc
add
sub
push
jle
mov
sti
mov
cmp
je
testb
cmpsb
je
es
and
ret
add
inc
shlb
clc
push
shl
jbe
push
add
hlt
mov
adc
mov
cmp
xor
sbb
sti
inc
cmp
outsb
sbbb
outsb
cs
xchg
adcl
lcall
push
push
jns
pop
lds
xchg
test
xor
add
mov
jo
movsb
sahf
rcll
adc
jge
pop
add
xchg
lods
pop
bound
cli
push
sbb
add
cwtl
push
push
adc
or
xor
add
nop
shufps
mov
clc
mov
data16
cmp
add
rclb
push
fs
lock
sbb
popa
and
scas
or
push
pop
or
jo
dec
clc
xorb
cmpb
jne
fcoms
jmp
add
mov
enter
and
orl
cmp
je
bound
mov
cltd
enter
dec
jae
mov
add
addl
pop
movb
inc
and
or
inc
out
jp
movsl
ss
enter
or
int
dec
inc
jbe
sbb
mov
mov
cmp
or
inc
xor
or
adc
incl
or
sbb
test
pushf
dec
fstps
sub
push
jb
mov
push
nop
fsubr
lret
add
dec
sub
sub
out
and
cmpsl
push
dec
negb
cmp
jns
rorl
fldenv
add
push
pop
fsubl
lock
and
and
push
es
xchg
xchg
int3
cmp
lods
and
shr
dec
pop
or
sahf
and
jge
jbe
subb
loope
sub
sub
push
leave
and
stc
pop
lock
xor
xchg
jmp
loop
jl
jl
push
inc
repz
int
lahf
push
dec
in
sub
inc
popa
movsb
sbb
sub
aas
sbb
mov
or
repnz
test
push
adc
push
push
and
pop
movsb
aad
lret
add
jmp
lea
xchg
xchg
lea
or
mov
cmpsl
pushf
out
cmp
mov
mov
pop
cmp
jmp
outsl
int
mov
cmp
insl
push
lock
mov
push
add
fldl
test
cmp
fstp
popa
pop
or
jne
fmull
pop
call
call
loopne
jbe
scas
in
stos
xchg
xchg
iret
loop
nop
pop
cmp
dec
iret
iret
ret
rorb
rol
rol
inc
in
mov
push
pop
sub
adc
pushf
xchg
ljmp
shrb
loope
mov
mov
inc
mov
mov
mov
mov
test
jne
pop
enter
mov
or
lret
mov
inc
mov
mov
into
xchg
popa
or
leave
inc
push
xor
in
dec
sub
and
je
cmp
jne
dec
mov
inc
lcall
pcmpeqw
fldl
jo
add
jle
test
ljmp
mov
lea
imul
lea
mov
enter
lea
sub
fdivrs
cmpb
je
mov
int3
mov
cs
stos
lahf
rcll
or
cmp
mov
and
popa
cmp
dec
or
or
xor
pop
push
roll
inc
add
shlb
roll
push
or
sub
inc
mov
int3
sarb
push
cltd
pusha
nop
jo
sbb
sti
sub
loope
aam
cmp
enter
out
test
inc
xchg
movb
inc
cmp
pop
add
and
neg
sub
sti
fs
fs
pop
idiv
add
pop
add
mov
mov
dec
imul
dec
in
xchg
add
mov
and
ds
dec
mov
movsb
inc
test
loope
cmp
mov
fsubrs
and
int
or
xor
add
jge
cltd
and
data16
ret
imul
or
lea
rorb
cmpsb
lcall
xor
fsubrs
and
inc
mov
push
cmpsb
pop
out
push
lock
jbe
inc
pop
test
jge
pop
mov
jmp
add
fidivrs
ficoms
push
xor
xchg
nop
adc
sti
mov
mov
xchg
fiadds
push
shlb
or
or
push
ljmp
xchg
cwtl
movsl
push
pop
arpl
xor
cmp
pushf
rorl
and
hlt
mov
adc
jge
or
adc
adc
stc
and
push
imul
adc
pop
int
pop
xor
push
adc
add
stos
fmulp
adc
and
or
jno
popa
push
lods
mov
mov
xor
push
push
or
adc
notb
mov
push
sbb
sub
adc
hlt
lret
and
or
les
sbb
gs
and
inc
push
push
add
cmpb
mov
jno
pop
adc
sarb
cmp
xor
inc
cmp
lock
cmp
jb
and
fildll
push
pop
inc
add
xor
push
repz
out
jno
push
jb
lret
cmp
or
outsb
pop
mov
sbb
jl
test
test
add
push
push
and
cmp
stos
rcrl
sbb
andb
xchg
jge
pop
int
pop
adc
adc
push
push
dec
xchg
add
push
mov
push
mov
sbb
adc
xor
sbb
and
mov
and
into
ret
das
push
data16
add
sub
cmp
les
sbb
add
add
jp
and
mov
incl
push
jmp
mov
sbb
add
data16
ret
dec
jo
jp
xlat
adc
jno
jecxz
adc
orb
or
das
je
sbb
mov
stos
xchg
cmp
loope
and
mov
cltd
addr16
push
arpl
xor
aaa
fsts
xor
dec
dec
mov
fbstp
in
aad
je
cmp
xor
loopne
ret
adc
jp
push
imul
push
jno
or
push
sub
test
push
lea
xchg
sbb
xchg
inc
ret
nop
jno
dec
cmc
push
fs
repz
jne
sub
or
adc
test
aaa
push
push
sub
arpl
xchg
test
jne
xor
and
mov
push
push
dec
ret
repnz
push
pop
adc
ret
push
pop
sbb
aas
mov
dec
mov
or
orl
pop
pop
bound
mov
mov
je
xchg
push
inc
xor
pop
lods
dec
addb
sbb
or
inc
pop
push
loope
pop
inc
inc
mov
push
xor
ror
push
addr16
mov
scas
jp
xchg
sarl
push
dec
mov
xchg
or
add
inc
ja
add
cmp
push
cmp
inc
sbb
lods
pop
mov
fs
or
fnsave
adc
add
jae
pushf
sbb
adc
jne
cmp
shrd
dec
xor
and
jge
arpl
dec
adc
clc
add
dec
dec
and
push
rclb
pop
or
and
sbb
lea
mov
and
adc
add
push
fisttpl
outsl
mov
mov
dec
scas
subb
jl
call
push
or
or
sub
mov
fsubrs
fdecstp
and
clc
mov
mov
cli
or
cmpsb
add
pop
mov
add
sub
and
add
add
icebp
xorb
sar
dec
fs
push
testb
js
inc
out
aas
enter
and
and
sub
lock
sub
xchg
push
stc
cmpsl
adc
dec
inc
dec
or
popa
mov
ret
cmpsb
dec
mov
push
cltd
inc
jmp
and
in
lds
ja
xchg
xor
add
je
sbb
in
push
sub
add
jae
inc
rcll
sbb
inc
or
pop
or
adc
arpl
add
adc
into
jae
sub
or
xchg
fidivl
fwait
stos
add
outsb
adc
shlb
push
cmp
jge
lea
sub
mov
add
mov
testl
and
test
daa
sub
nop
sarb
popf
sbbl
jns
popf
ja
test
cmp
ja
and
popl
fwait
movl
call
xchg
cmpsb
pushf
lea
jmp
sarb
push
pop
mov
push
mov
imul
pop
mov
mov
test
or
je
jae
aam
shlb
add
adc
lea
pop
fsts
ret
dec
cmp
mov
enter
push
inc
cmp
jne
sub
ret
jne
mov
pop
dec
adc
pusha
test
das
out
or
aam
ds
or
jbe
inc
and
test
dec
cli
je
movsl
out
out
shlb
test
sbb
filds
adc
cmp
dec
cmp
je
push
add
adc
jge
mov
add
call
mov
or
pop
leave
dec
repz
mov
mov
cmp
inc
rol
cmp
dec
rclb
dec
push
inc
cmpb
push
jae
xor
sub
les
out
add
jne
pop
jmp
add
mov
mov
shrl
mov
jle
in
and
push
mov
push
xor
mov
push
cmp
imul
bound
push
jae
or
jae
push
aam
insb
mov
sbb
lahf
loope
pop
nop
sbb
push
jns
imul
sbb
lea
data16
dec
adcb
dec
ja
cmp
pushf
dec
aaa
jmp
aas
add
or
inc
cmp
and
data16
push
mov
mov
sub
mov
inc
inc
aad
into
loope
push
movb
mov
loop
sub
mov
inc
ficoml
xchg
or
push
and
js
add
int3
push
xchg
jge
dec
adc
mov
mov
and
ret
push
loopne
into
inc
jmp
mov
decb
and
rorl
pop
jmp
mov
sbb
jns
xchg
sub
sbb
clc
push
js
and
add
test
or
cmp
cmp
sbb
xchg
cmpsb
or
mov
jmp
rorl
test
inc
movb
inc
inc
xchg
push
loop
iret
or
dec
jle
pusha
andl
cmp
jno
je
sbb
fwait
jns
push
pop
lods
js
rdmsr
shrl
pop
je
and
jae
nop
into
adc
add
in
aaa
adc
mov
xor
mov
push
cmp
aad
mov
or
je
in
cmpsb
lock
scas
adc
xor
ljmp
fdivrs
mov
aam
pushl
or
mov
cmp
add
inc
inc
sbb
jns
rol
sub
into
sbb
and
clc
rorl
push
inc
mov
popa
shlb
xor
push
out
test
push
js
movsl
cmp
dec
into
inc
cmp
cmp
pusha
push
or
dec
lret
rclb
je
ds
scas
adc
mov
sti
imulb
movl
scas
pushl
inc
fwait
testb
stc
aam
insb
mov
int
repz
in
inc
push
cmp
xor
dec
xor
orb
mov
xchg
lock
subb
cmp
mov
or
and
lea
inc
sub
and
cmp
aaa
inc
sbb
cmc
mov
or
and
cs
cmp
gs
jge
mov
fdivrl
or
sar
pop
lea
sbb
jno
inc
mov
or
roll
xchg
push
mov
jge
leave
adc
inc
add
hlt
pop
mov
push
icebp
cmpsl
call
or
mov
filds
dec
iret
mov
mov
pusha
pop
enter
inc
sub
pop
add
add
jl
sbb
mov
fdivs
or
enter
add
add
ret
dec
fadds
subb
xchg
cmp
push
or
sbb
push
mov
add
orb
fdivl
xchg
add
jmp
addb
sbb
xchg
rcl
ret
jl
sbb
cli
inc
push
sbb
pop
loope
dec
sahf
cmp
inc
jb
mov
popf
stos
jo
inc
add
add
movq
sub
mov
sub
push
cwtl
add
cmp
xor
cmp
sub
or
mov
popf
es
dec
or
or
jl
jne
fidivrl
sub
jns
call
popa
add
ret
popl
adc
mov
add
add
or
adcb
imul
pop
or
pushf
jns
mov
push
dec
inc
cmp
inc
pop
imul
ret
addr16
add
push
inc
xor
pop
inc
xor
or
xchg
ds
jb
jne
testl
jp
cli
mov
or
clc
movsl
sub
popa
or
je
push
push
lea
pusha
ret
pop
pop
in
arpl
or
js
jns
mov
js
mov
mov
lds
mul
or
in
lea
lcall
xchg
or
inc
mov
jno
dec
jmp
push
aad
gs
pop
mov
mov
add
sbb
sbb
xchg
and
sbb
sub
or
mov
sahf
xlat
jp
mov
pop
dec
movsl
push
aad
pop
mov
sbb
add
adc
xor
enter
fiaddl
in
and
cmp
mov
lahf
lock
cmp
shll
pop
xlat
adc
into
loop
leave
mov
sbbb
daa
fwait
inc
pop
cmp
mov
jecxz
adc
add
inc
push
push
add
push
movsb
adc
arpl
inc
mov
sub
ds
push
jmp
mov
scas
out
lock
lds
and
push
iret
jno
pop
jmp
or
inc
leave
mov
jnp
lock
push
fs
pop
adc
repnz
jb
jae
adc
test
les
push
mov
add
or
movl
cltd
inc
adc
push
xchg
inc
mov
js
daa
sub
jb
cltd
test
pop
incb
add
addr16
mov
and
add
mov
inc
add
pop
jne
or
jae
cmp
jge
mov
inc
adc
cli
pop
mov
and
cmpsl
adc
jbe
push
arpl
sbb
inc
sbb
xor
and
dec
mov
adc
mov
push
repnz
sbbl
mov
jmp
inc
cmp
or
aam
ret
pop
clc
cmpb
hlt
dec
sbb
add
iret
add
inc
dec
bound
sub
mov
ja
push
rclb
pop
lea
movl
lgdtl
jae
cwtl
popf
fcompl
and
xor
or
pop
cltd
ret
and
adc
push
stos
xor
rolb
sub
rolb
sbb
sbb
stos
cmp
in
int3
push
add
lret
je
data16
mov
loope
push
leave
adcb
bound
lods
mov
xchg
or
inc
mov
fcmovbe
and
jne,pn
jb
cmp
bound
test
lahf
rcrb
insb
pusha
adc
push
jns
scas
inc
dec
lret
pop
mov
or
cmp
bound
pop
mov
inc
jae
pushf
or
add
jae
shld
shl
rclb
cmpsb
and
stos
xor
adc
je
xor
add
adc
test
adc
cmpl
mov
mov
and
or
jne
out
inc
mov
testb
decl
icebp
dec
leave
mov
repnz
xchg
or
ret
mov
test
jge
jmp
dec
ds
orb
dec
loope
cld
mov
nop
leave
sbb
sbb
test
pop
push
test
cmc
nop
pusha
fmull
adc
mov
adc
insb
mov
push
pop
mov
inc
jae
arpl
sub
fbld
in
pop
dec
push
adc
xchg
dec
or
andb
push
ds
pop
and
sbb
cmp
ja
arpl
cmp
call
cmp
pop
add
push
ja
cld
or
addb
sub
push
out
cld
dec
push
rcll
mov
or
pushw
int3
xor
ret
incb
ret
ret
ja
mov
xchg
icebp
lock
mov
fcoml
lods
pop
xchg
imul
sbb
sti
push
ret
xchg
jg
out
sahf
out
pop
push
dec
inc
cli
push
ret
and
mov
shll
fsubs
lods
arpl
xchg
rclb
mov
nop
cmp
jae
pop
sbbb
filds
aaa
adc
xchg
outsl
jmp
cmp
jae
fsub
in
hlt
cld
xorl
mov
xor
dec
jge
popa
iret
pop
movsb
out
pop
inc
mov
push
xor
mov
aam
mov
lea
ret
les
jmp
sub
clc
enter
push
add
mov
cmpsb
imul
inc
mov
aad
xor
add
clc
push
movsl
adc
jmp
shl
mov
stos
sarl
aam
lds
test
xor
cmp
lods
test
or
dec
je
dec
les
fsubrs
or
jmp
notb
pop
mov
pop
fadd
jle
xlat
pushf
and
test
jne
pop
cwtl
test
lea
loope
push
jne
sbb
dec
push
pop
rcrl
xor
jl
rolb
imul
add
sub
cmp
test
lret
pop
push
xchg
cwtl
shrl
jne
adc
inc
rorb
or
roll
or
and
pushf
call
inc
call
cmp
rcrl
xor
test
enter
lds
jnp
clc
cmp
mov
subb
inc
sbb
sub
and
mov
mov
hlt
ror
sbb
inc
jmp
sub
dec
icebp
cmp
jb
inc
sub
and
je
inc
ss
mov
sbb
ljmp
mov
mov
and
mov
adc
test
imul
gs
mov
je
add
fnstenv
dec
clc
aaa
clc
fiadds
out
cs
jmp
add
in
or
lret
fadd
push
inc
test
clc
add
imul
je
push
sbb
inc
jno
shll
dec
adc
xchg
aam
mov
hlt
xchg
iret
sub
add
les
testl
or
push
mov
int
ffreep
mov
and
jmp
push
ss
push
push
shll
mov
inc
rolb
push
mov
adc
jne
push
int3
aad
xor
insb
sub
fcoms
into
or
jo
sbb
add
repz
or
inc
cmp
add
pop
xor
or
add
xor
js
negb
pusha
add
je
push
inc
dec
in
and
orb
jne
cmpl
xchg
aas
adc
dec
sub
push
push
mov
lods
stos
jne
mov
enter
adc
pop
adc
aam
mov
xchg
flds
xor
stos
mov
cwtl
pop
xor
andb
and
cmp
push
fstcw
push
mov
rolb
or
or
sahf
push
push
inc
xor
or
fldcw
dec
sub
pusha
idiv
push
mov
xor
ljmp
je
fs
adc
add
push
fwait
add
daa
push
push
out
and
cmpsb
arpl
nop
mov
push
mov
dec
pop
rcrb
loop
mov
repz
mov
or
jne
negl
mov
or
or
int3
pop
sub
or
cmp
sub
adc
add
les
test
pop
inc
xchg
std
xchg
insb
dec
cli
inc
push
xlat
mov
dec
pop
jecxz
fwait
out
adc
and
inc
and
ret
mov
xor
lret
adc
into
jne
jno
push
in
or
inc
lds
or
lea
or
sub
out
or
inc
cwtl
hlt
dec
pop
cmp
cmp
adc
aaa
sbbl
add
pop
adc
pop
sub
or
shl
mull
sbb
add
test
jne
inc
cmp
jge
mov
inc
xchg
inc
push
testl
popf
dec
xchg
mov
dec
xchg
xor
addr16
adc
mov
pop
and
aaa
test
adc
xchg
adc
cmovo
add
rclb
ret
fldt
fs
push
or
es
out
loopne
pop
add
lea
cltd
mov
lds
dec
adc
sub
lods
mov
test
xor
test
push
push
imul
xchg
mov
and
pop
adc
shll
push
cwtl
push
rep
cld
outsl
loopne
fisttpl
mov
dec
push
xor
dec
push
mov
hlt
jl
sbb
lcall
or
adc
test
data16
pop
call
fcomi
push
and
and
cmp
mov
push
mov
sub
not
stos
rcrb
push
mov
mov
sub
dec
xor
sbb
hlt
pop
mov
push
pop
inc
mov
shld
nop
sub
and
addl
decb
loopne
push
cmp
sbb
mov
hlt
mov
or
call
in
dec
add
bound
loopne
sub
xchg
xchg
and
sti
add
cmpb
jne
xor
add
inc
lods
mov
lods
sub
mov
pop
out
clc
mov
sbb
mov
test
loope
or
sbbb
add
sub
into
pop
rorb
cmp
jg
pop
cmpsb
rclb
dec
sub
push
mov
mov
inc
rclb
in
add
cmp
gs
or
pop
dec
cmp
push
mov
pop
idivl
repz
adc
dec
aaa
add
inc
adc
repz
testl
icebp
or
lds
cmp
nop
call
fcoml
xor
mov
push
sbb
mov
out
sub
pop
les
faddl
or
fnstsw
xchg
mov
pop
pop
pop
lea
and
inc
cmp
mov
and
mov
jle
movb
test
sub
leave
jle
mov
sub
sub
mov
pop
mov
xor
cmpsl
sbb
add
jl
add
outsl
add
push
test
nop
jmp
ds
mov
add
adc
or
push
lea
mov
push
mov
mov
shrl
pop
push
adc
movsl
pop
or
xchg
lea
add
nop
pop
nop
pop
movswl
pop
xchg
pushf
jae
xchg
ret
loop
mov
pop
and
xor
inc
push
mov
ds
rorl
adc
adc
movsl
mov
movsb
cmp
push
je
loopne
cmp
add
xchg
cmp
jmp
mov
test
roll
xchg
out
fld
pop
push
dec
add
arpl
adc
enter
inc
loop,pn
add
jg
add
fcmovb
jmp
or
lea
mov
inc
mov
adc
iret
push
aad
sub
daa
lcall
add
test
xchg
imul
repnz
jo
adc
inc
push
test
gs
cmp
popa
add
jbe
lcall
ds
push
js
mov
sub
mov
je
rorb
movsb
push
mov
je
push
aam
mov
andl
pop
stc
push
mov
push
popa
mov
les
mov
loopne
fidivs
sub
xchg
or
cmp
or
cmpsb
jne
jecxz
adcl
jmp
sbb
sbb
or
push
cld
test
je
pushf
mov
push
add
jns
add
shlb
mov
inc
push
cmp
mov
or
pop
pushl
cmp
jae
add
mov
mov
mov
and
mov
push
test
adc
testb
sbb
adc
push
push
inc
and
and
inc
incb
pop
test
and
adc
adc
dec
push
imul
lds
push
leave
bound
pusha
sbb
xlat
addl
add
inc
icebp
loope
gs
and
mulb
les
adc
int
ficomps
test
mov
cli
adc
mov
ds
add
jmp
and
mov
sarl
add
cmp
jb
cmp
jae
and
adc
or
ljmp
out
test
add
rcrl
inc
or
popf
out
or
sbb
push
add
and
mov
add
mov
lea
cwtl
mov
into
and
mov
shr
shl
or
pop
pop
in
cmc
es
fs
add
das
out
or
mov
shl
ljmp
gs
mov
pop
insb
xor
or
xor
addb
mov
mov
jbe
push
repz
lock
xchg
xchg
push
push
punpcklwd
lea
shll
aad
or
repz
jg
ret
push
xchg
out
cwtl
dec
sbb
xor
pop
cmp
adcb
sarl
add
and
add
adc
loope
test
inc
arpl
jae
jmp
mov
jae
mov
cmp
sub
jmp
adc
ret
or
sbb
and
sahf
movsb
or
icebp
dec
in
cmp
sbb
out
ret
in
in
mov
xchg
and
je
mov
or
mov
or
mov
pop
dec
loopne
rolb
and
pop
test
add
sti
xor
add
cmp
jge
and
xchg
dec
cmp
ret
mov
adc
adc
mov
pop
aam
jmp
test
fsubl
add
jmp
jne
nop
repz
bound
cmp
jl
jle
in
gs
or
sub
xor
enter
push
inc
jle
add
jnp
mov
gs
jbe
lods
dec
push
push
xchg
imull
xchg
jp
cmpsb
imul
ret
add
cmp
in
shlb
gs
add
jnp
xchg
cmp
dec
sub
sbb
jae
sub
test
pop
xor
inc
movsl
orl
mov
and
add
jne
and
or
repz
cli
in
mov
out
mov
or
and
sub
in
xchg
xchg
fildll
jo
nop
xor
mov
lea
xor
lret
mov
out
je
test
xchg
in
push
lea
cmp
test
xor
mov
enter
sti
mov
or
jg
push
pop
dec
and
xchg
int3
inc
jmp
xor
rorl
lcall
sub
mov
in
xorl
inc
pop
pop
xchg
adc
pop
cmp
cmc
push
popf
ret
xchg
adc
dec
leave
mov
inc
pushl
push
adc
xor
jg
mov
loope
jne
loope
sbb
pop
adc
xor
pop
cmp
push
addr16
loop
sbb
jbe
add
sub
mov
inc
mov
hlt
dec
mov
sub
mov
xchg
add
pop
jnp
gs
div
push
xchg
out
push
pop
adc
in
and
mov
jge
test
and
loopne
sbb
jno
fsubrl
inc
sbb
sub
inc
sarl
pushf
mov
xchg
push
adc
in
jno
pusha
xor
mov
add
stos
mov
mov
pop
dec
sub
rol
bound
jno
adc
rol
loopne
cld
lret
pop
lds
fs
enter
add
hlt
lods
inc
jae
or
and
push
add
xor
in
adc
pop
or
jecxz
push
lret
cmc
push
movsl
sahf
out
cmp
inc
cmpsb
es
xchg
pop
adc
xor
cltd
sub
mov
add
and
repz
test
in
out
repz
call
cmpsb
mov
sti
out
aas
push
push
sub
sarb
mov
add
xchg
lret
mov
mov
mov
add
add
sub
fstps
push
dec
push
mov
fmull
add
or
test
call
fisubrs
inc
imul
pop
dec
mov
mov
call
je
jne
push
cmpsb
fidivrl
add
lcall
lea
loope
mov
or
iret
jmp
dec
push
xor
shrb
or
push
cli
sbb
xor
imul
testb
pop
push
aam
sar
in
shl
mov
jp
and
or
jge
aas
jb
mov
jo
inc
fwait
nop
mov
sbb
testb
int3
loopne
xor
mov
int3
jp
jg
inc
push
cmp
bound
add
xorb
out
aas
gs
cmpl
fs
lock
icebp
outsb
mov
fiadds
inc
pop
sub
dec
repz
popa
lahf
push
jl
mov
inc
mov
jne
dec
mov
movsl
and
insl
mov
adcb
mov
mov
mov
add
xchg
xorb
adc
add
mov
loope
or
lea
xor
shll
or
jmp
inc
pop
add
ret
sub
mov
cwtl
data16
mov
xchg
cmp
or
ret
xchg
in
mov
fnstcw
adc
add
andb
push
or
jae
loope
in
lea
mov
popa
ds
and
mov
and
add
jne
add
inc
loope
jmp
adcl
adc
sub
mov
and
and
add
add
rcrb
lret
and
pusha
mov
fcompl
push
test
cli
xchg
clc
and
and
and
cmp
add
adc
jae
jg
loope
jbe
cli
std
mov
aas
cli
xor
iret
mov
js
push
pop
test
enter
inc
movb
pop
insb
popf
mov
jo
mov
cmp
cmp
mov
adc
and
pop
leave
mov
out
cld
adc
cmp
or
mov
shlb
inc
nop
outsl
adc
mov
jle
mov
push
and
adc
adc
push
push
pushl
int
outsb
lcall
pusha
push
add
subl
call
nop
add
add
jg
xorl
rolb
out
or
popf
lock
push
or
pop
lods
mov
lcall
cmpsl
push
cli
add
fmuls
sbb
add
lea
add
add
push
orb
or
faddl
mov
ja
fsubl
cmp
jne
fidivs
sub
bound
mov
loop
mov
out
or
call
sub
data16
inc
mov
jp
loop
mov
xor
jae
pop
or
mov
mov
insb
mov
or
or
neg
sbb
lods
mov
addl
std
or
cmp
push
mov
or
je
jge
fs
sub
movsl
xor
or
dec
xor
or
test
test
push
add
and
sbb
clc
je
lea
add
je
hlt
movsl
push
popf
ss
call
ret
in
ds
sub
shlb
mov
in
sbb
bound
or
inc
inc
or
ret
and
icebp
xor
pop
add
adc
mov
aaa
lret
adc
loop
je
jmp
mov
shrl
cmpsl
sbb
in
xchg
mov
push
inc
pop
ficoms
paddusb
push
lcall
sub
push
jecxz
sbbl
rcr
rorb
push
stc
or
sbb
fldl
ret
push
out
or
or
leave
adc
mov
lret
mov
xor
add
add
pushf
or
das
pushf
sub
decb
add
outsl
lahf
popa
sbb
movl
mov
call
cmp
mov
pop
xor
cmp
and
mov
sub
dec
mov
popf
in
out
or
jno
mov
push
inc
lods
xchg
mov
push
mov
dec
fldcw
sub
jmp
sub
jmp
divb
cmp
in
push
dec
shlb
in
jno
mov
push
push
mov
fidivrl
and
cmp
xchg
cli
cmp
notb
and
je
push
push
dec
cwtl
loopne
dec
mov
sbb
rcl
fs
push
ds
lret
sub
jne
mov
sub
in
and
xlat
insl
or
jo
jmp
sub
test
wbinvd
mov
fldenv
push
sbb
inc
ds
clc
imul
inc
or
stc
sub
adc
xchg
cltd
and
or
sub
cld
sbb
popa
push
mov
and
shlb
lret
dec
adc
mov
mov
out
test
push
push
in
adc
dec
add
nop
mov
cmp
pop
cmp
and
xchg
dec
fnstenv
lea
add
mov
test
mov
cmpsb
nop
jmp
test
aam
mov
nop
pop
fcoms
pushf
lea
stos
mov
fcoms
pop
add
adc
movl
xor
pop
and
test
dec
bound
call
mov
and
sbb
in
lcall
arpl
or
pop
ja
add
add
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
add
add
jmp
rclb
mov
sub
mov
sbb
add
xlat
add
mov
test
sbb
in
insl
push
mov
add
add
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
sldt
add
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
shrb
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
add
pop
cmp
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
iret
shld
sub
mov
and
or
adc
stos
sbb
add
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
rorb
add
mov
stc
add
add
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
add
add
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
add
add
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
adc
add
je
mov
aam
movsl
fisttps
xchg
fadds
add
test
shll
jmp
outsb
xor
mov
sarb
add
add
add
pop
dec
or
cmp
add
daa
adc
or
and
mov
push
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
jne
add
cmp
mov
cmp
lods
insb
mov
mov
lcall
mov
cmp
ljmp
fildl
push
faddl
add
add
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
add
add
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
add
outsb
jbe
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
add
add
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
xchg
add
dec
fisubrl
or
scas
testb
pusha
jp
add
add
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
add
add
inc
or
add
add
cmp
mov
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
add
add
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
add
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
add
add
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
add
dec
pop
jo
ud0
cmp
pop
or
adc
sahf
popl
adc
clc
sar
imul
js
or
add
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
add
add
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
cmp
add
push
cmpsb
and
sarb
add
add
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
jecxz
add
sbb
add
sub
inc
fisttpl
jno
mov
and
push
adc
add
mov
push
add
add
add
rolb
js
and
cmp
pop
or
aaa
xor
enter
pop
and
or
push
outsb
sbb
orl
test
or
or
sbbb
add
or
sub
insb
insb
inc
bound
lock
sarb
inc
add
out
addb
jae
jb
mov
jae
outsl
gs
je
jb
jo
jae
outsb
je
cmp
inc
dec
inc
push
dec
inc
dec
xor
fidivs
xor
jo
fiaddl
jl
jl
js
sub
js,pn
inc
imul
and
push
dec
dec
push
push
sarl
out
push
dec
dec
inc
add
loopne
lds
pusha
cltd
subb
sub
dec
pusha
loop
imul
imul
jo
rcl
jns
outsb
outsl
je
add
cmpsl
jne
push
arpl
xchg
sti
les
sbb
ret
pop
imul
outsb
ss
ja
out
fs
inc
and
jb
xchg
xchg
stc
arpl
sbbb
arpl
cmp
mov
gs
mov
das
mov
outsb
mov
xor
outsl
jo
pop
mov
ss
daa
ds
fs
inc
xor
gs
xor
mov
add
mov
push
popa
arpl
sti
sbb
fs
push
jno
pop
xor
int3
adc
jo
or
insl
sbb
pop
aas
adc
cmp
ljmp
repz
pop
pop
cmp
addr16
cltd
cli
push
jae
sbb
jp
pop
or
outsl
lea
mov
sbb
dec
popl
push
push
imul
sub
and
imul
jns
xor
mov
push
cmp
push
pusha
stc
sub
mov
cmp
in
sub
mov
mul
gs
popa
rcrb
cmpl
imul
xor
push
roll
jne
push
sub
xor
xor
push
dec
inc
dec
pop
dec
push
jmp
in
clc
inc
push
sbb
mov
mov
gs
in
jmp
loope
loope
cmp
add
mov
popf
cmp
lret
out
sub
add
or
sahf
out
sahf
xor
jo
jns
out
test
rcr
ljmp
int
and
push
iret
repz
fs
test
sbb
repz
call
sahf
out
and
ds
pop
je
jns
out
mov
jecxz
sahf
in
or
and
cmp
repz
push
bound
xchg
repz
rep
rcl
cld
out
push
adc
sbb
inc
push
sahf
out
sahf
push
cmp
in
or
sbb
cmp
repz
pop
jbe
iret
repz
lcall
repz
out
cld
or
sbb
out
sub
dec
fs
out
sahf
out
lret
cli
iret
repz
push
rcrl
sub
dec
iret
xchg
adc
add
mov
push
jo
xor
gs
inc
fadd
dec
xchg
jno
mov
push
jne
pop
mov
jne
imul
cmp
add
pop
push
jecxz
add
dec
mov
test
jno
testb
shlb
cmp
sbb
imul
xchg
xor
sbb
dec
and
jo
sbb
mov
gs
pop
inc
push
imul
aam
lret
xchg
xor
sarb
cmp
hlt
fdivrl
fsubrs
mov
repnz
mov
push
je
es
push
inc
int
mov
mov
pop
push
insl
insl
inc
cwtl
mov
testb
jns
xor
outsl
fs
or
push
jb
movsb
push
idivb
push
imul
add
jns
and
sbb
pop
fwait
inc
js
dec
push
fsts
lcall
in
pop
subl
add
lods
fadd
add
outsb
test
aad
mov
add
dec
add
mov
fcompl
dec
cmp
out
add
rorl
push
pop
orps
mov
mov
mov
movsb
push
ret
jb
add
xchg
xchg
cmc
cld
or
dec
pushf
lcall
push
inc
insb
pop
lahf
lret
fwait
mov
popf
stos
mov
mov
add
mov
pop
mov
mov
and
adc
scas
iret
add
pop
dec
jnp
stos
loopne
cld
cwtl
je
pop
or
jl
dec
pop
push
xchg
test
mov
je
mov
mov
addb
bound
adc
ja
cld
mov
ljmp
add
xorb
jae
stc
add
add
arpl
pushfw
push
out
pop
cmp
in
out
xor
addr16
ljmp
pop
jae
jo
lock
out
repz
ss
push
jo
shlb
cmc
xchg
js
xchg
daa
sbb
jns
and
jb
sub
mov
jge
jmp
pop
jb
outsl
nop
jne
dec
pop
mov
jge
les
pop
cmc
cmp
or
rolb
xor
sub
out
dec
bound
xchg
pusha
mov
dec
js
cld
cwtl
mov
outsl
jbe
flds
popf
sbb
loop
fs
mov
push
imul
imul
mulb
mov
js
jns
add
add
or
inc
inc
mov
mov
xchg
mov
gs
int
push
xchg
mov
loope
fildl
dec
call
jb
fldcw
ret
andl
ljmpw
gs
test
scas
inc
jbe
iret
push
and
cmp
nop
mov
jne
xor
mov
icebp
scas
and
push
jecxz
fildll
mov
sahf
outsb
fisubrs
mov
ss
push
mov
inc
mov
inc
dec
or
pop
sub
add
jns
fstpt
js
es
sub
adc
sub
mov
hlt
mov
inc
cmp
push
fs
loop
add
lcall
mov
out
fdivr
jo
dec
cwtl
jl
loop
dec
xchg
inc
data16
cwtl
loop
fs
xchg
lea
jns
int3
je
push
xor
rcll
push
outsl
shll
adc
inc
lret
mov
sub
jbe
jl
xor
mov
push
inc
jne
data16
mov
inc
mov
rorl
or
loopew
mov
test
fidivs
adc
bound
xchg
sub
inc
jecxz
icebp
call
pusha
mov
outsb
bound
inc
adc
dec
inc
divb
hlt
inc
mov
xchg
jae
pop
xor
push
jae
add
add
je
mov
xor
inc
and
inc
mov
idivb
jle
dec
add
push
leave
mov
scas
xchg
sub
and
insl
jno
pop
out
or
dec
push
push
push
dec
cltd
add
rcl
fldcw
push
xor
ret
jne
push
sbb
xor
xorb
insl
jns
outsl
xchg
jns
test
dec
aaa
or
xlat
test
cld
cmp
xchg
mov
aaa
hlt
and
lret
imul
outsl
js
dec
xchg
sub
inc
inc
or
add
push
lods
fisubrl
lods
das
jo
push
dec
push
add
sbb
std
in
sbb
insb
inc
out
sbb
loop
adc
add
sti
inc
mov
es
pop
cwtl
mov
dec
or
icebp
pop
dec
ret
lahf
sub
cmp
jne
xchg
fnsave
xchg
inc
mov
fists
push
test
jne
aaa
mov
xor
mov
push
pop
pop
push
inc
inc
dec
pop
cmp
push
repnz
xor
and
inc
pop
jae
jae
add
and
fs
push
outsl
push
push
fldcw
push
aaa
cs
xchg
sub
cmp
repnz
enter
cmp
cmpsl
push
inc
dec
fstpt
pop
addb
cmp
ja
add
inc
cltd
mov
and
mov
push
sti
fstps
cwtl
das
mov
sub
fstps
sbb
push
sub
sbb
mov
jno
dec
push
inc
enter
insb
adc
inc
and
call
das
je
jnp
popa
popa
fsubrl
pop
and
stc
test
gs
dec
in
xlat
popf
pop
xor
sub
push
rcr
and
push
mov
insl
mov
in
mov
arpl
jnp
out
out
or
sub
cs
sbb
xor
js
pushf
pop
xor
mov
lods
push
cmp
xchg
cmp
xchg
out
sub
mov
lds
rcrl
add
pop
data16
adc
push
dec
sub
inc
adc
cmp
and
loope
add
mov
std
mov
add
xor
cmp
les
sub
pop
and
jmp
jl
dec
inc
push
iret
imul
pop
pop
sbb
push
movsl
xor
push
push
xchg
and
xchg
data16
iret
mov
pop
inc
rorb
sub
inc
or
jo
add
pop
sub
sub
sbb
or
mov
xor
sbb
jge
dec
add
lds
jne
je
cmp
das
jae
sarl
shlb
inc
dec
push
push
dec
inc
pop
add
inc
shr
clc
mov
in
cmp
lds
repz
imul
aas
iret
repz
mov
cmp
hlt
or
sbb
sub
jns
jg
dec
mov
test
loopne
out
iret
jecxz
xchg
cmp
push
mov
cmp
aas
nop
test
enter
cmp
add
jns
sub
les
out
js
in
lahf
loope
xor
pusha
icebp
rcrb
aam
clc
jns
js
dec
bnd
fdivl
loopne
repz
stc
out
repz
jo
aas
sahf
out
mov
sahf
jg
xchg
lods
fdiv
call
and
jecxz
inc
cmc
hlt
test
mov
jecxz
in
cmc
adc
cld
mov
notb
ret
loope
arpl
nop
testb
jecxz
xchg
not
or
add
lock
jecxz
adc
or
mull
loop
jecxz
pushf
divl
xchg
ret
call
pop
push
and
sub
push
insb
jns
jg
xchg
mov
jo
jecxz
loopne
add
add
and
iret
repz
jecxz
cmp
cmp
repz
sar
cmp
or
sbb
inc
out
loope
cli
dec
cli
pusha
cli
jo
out
jns
pushf
test
in
mov
sbb
adc
sbb
dec
sti
pop
inc
dec
or
nop
inc
ja
loope
les
lret
nop
xchg
imul
and
inc
dec
gs
loope
lock
cmp
jno
loop
jo
inc
jne
pop
in
lcall
jmp
lret
mov
insl
xor
cmp
insl
bound
sbb
dec
daa
jg
inc
and
jecxz
cltd
cmp
and
inc
pushf
dec
aad
lods
push
les
xchg
dec
sub
lcall
callw
jbe
and
outsl
outsl
inc
pop
dec
outsb
insb
loope
dec
jne
jae
dec
or
jo
popa
cmp
and
fs
in
xchg
jns
fs
dec
xchg
add
lahf
xor
pop
xchg
mov
inc
outsl
xor
mov
jne
sub
imul
fs
push
and
pushf
aaa
ficoms
jb
lock
jns
sub
push
mov
outsl
insb
pusha
jns
and
push
dec
inc
outsb
arpl
pop
rorl
mov
sub
pop
test
fwait
aad
inc
leave
mov
je
addb
je
fs
fnsave
and
cmp
add
push
outsb
das
out
jo
push
mov
test
pushf
inc
jo
push
push
xor
aam
sbb
cmp
ljmp
stos
xor
xlat
nop
push
dec
and
jmp
jge
pop
loope
outsl
insl
outsb
int3
xchg
std
inc
cli
sbb
test
and
inc
jecxz
jae
xor
rcrl
outsl
push
insl
and
mov
test
addr16
cmp
inc
inc
dec
inc
push
pop
inc
pop
bound
je
cwtl
add
subb
xor
stc
add
inc
fnstcw
sbb
outsl
add
jecxz
lds
cmp
sub
cmpsb
ljmp
out
jp
rcll
dec
and
negl
xchg
push
lahf
cmp
or
cmc
lods
notl
shll
push
cmp
je
arpl
ljmp
sub
outsb
das
xchg
push
mov
inc
mov
pop
in
fisttpll
ja
out
repnz
loop
sbb
scas
and
in
xor
xlat
aaa
and
adc
dec
jb
push
cmp
repnz
out
pop
sti
jmp
int
dec
xchg
sbb
sub
cli
int3
mov
dec
xchg
scas
adc
sbb
sub
push
mov
pop
aad
mov
imul
push
lahf
xchg
mov
loop
add
inc
mov
jecxz
jb
scas
add
divb
pop
mov
in
mov
or
mov
xorl
lret
pop
sahf
cmp
xchg
jecxz
mov
repnz
movsl
lods
cmp
shl
movsb
pop
fwait
mov
test
sub
nop
and
jno
mov
mov
sti
cmp
mov
ljmp
push
push
inc
dec
inc
inc
xor
test
mov
lahf
loopne
dec
dec
dec
sti
pop
add
mov
in
xor
xor
out
popa
jae
push
orb
mov
fsubr
ja
divl
xor
rclb
push
inc
repnz
addl
inc
dec
inc
push
add
outsl
ja
js
dec
in
xchg
pop
xorb
mov
test
xchg
outsl
push
imul
mov
xchg
push
iret
cmp
hlt
lcall
dec
aas
sub
sahf
lahf
sub
std
out
or
pop
and
insl
test
dec
mov
dec
popf
and
lahf
lret
dec
or
xchg
dec
jne
mov
jns
adc
fs
inc
addr16
pop
pop
jle
pop
insb
cmp
sbb
cmp
je
aad
clc
orl
and
dec
test
lods
cmpsb
nop
add
mov
frstor
fwait
sbb
insb
mov
ja
jecxz
add
data16
jo
bound
push
jmp
jnp
aam
or
dec
push
dec
mov
or
ja
inc
xorb
lahf
push
rcll
cmp
adc
arpl
mov
cs
cmp
push
push
mov
out
fsubr
gs
test
in
xor
xchg
daa
rcll
lods
daa
xchg
imul
ret
mov
sbb
enter
cmp
add
js
jb
xor
sbb
and
cmc
sub
or
inc
or
add
jmp
pop
dec
xor
mov
xorb
loop
jmp
call
jo
cwtl
cltd
cltd
ret
and
out
cltd
adc
test
fsts
movsl
lcall
add
out
lcall
iret
into
enter
repz
add
xchg
shrb
xchg
rol
pop
popf
fdivrl
adc
mov
lcall
push
call
filds
pop
js
dec
add
in
arpl
outsb
sbb
adc
lcall
rcrl
into
gs
lret
inc
pop
inc
repz
lock
pop
push
or
repz
repz
imul
cltd
sahf
and
pop
adc
popf
repz
lret
inc
pop
insl
popa
mov
push
inc
sbb
adc
inc
cmp
pop
jnp
adc
mov
lret
or
mov
adc
mov
iret
lret
xchg
bswap
pop
fisubs
push
lret
jge
jno
sbb
in
pusha
enter
call
jnp
pop
jno
addr16
in
leave
push
adc
add
idiv
fdivr
std
jmp
ljmp
sub
jae
fcomps
pusha
or
into
cltd
aad
clc
std
aad
sti
jmp
jmp
fldl
stos
stos
stos
cltd
fmul
sub
adc
sti
lock
lock
add
int3
sub
xor
adc
push
mov
and
cmpl
mov
bound
jne
pop
mov
in
push
jae
jmp
add
mov
push
les
insb
push
jge
push
xor
stos
pop
insl
sbb
lahf
sti
jnp
jno
cld
imul
jbe
jo
jne
pushl
jle
aam
imul
pop
push
push
xor
pusha
fnstenv
and
stc
pop
lret
jbe
xor
mov
stc
ret
sbb
ja
mov
xor
arpl
stc
push
xchg
xchg
add
sbb
popa
arpl
pop
outsb
imull
les
mov
add
or
xor
xor
xor
cmp
push
jp
jo
enter
js
add
add
cs
dec
dec
mov
xor
cmp
mov
imul
outsb
dec
mov
cmp
dec
push
cmp
sbb
sub
imul
ret
sbb
mov
inc
daa
xchg
mov
int
pusha
mov
out
mov
inc
insl
outsl
and
push
fs
in
imul
cmp
jno
add
xlat
jnp
fisttpll
es
in
cmc
bound
popa
jae
fstl
frstor
outsl
daa
sub
or
daa
insl
adc
push
iret
shlb
inc
dec
inc
and
sub
push
jo
movsl
cmc
outsl
xchg
cwtl
mov
lods
imul
and
cmp
sbb
mov
xor
and
lahf
decb
mov
xchg
jns
aam
adc
leave
cmp
xchg
ja
test
dec
and
pop
push
xrelease
sub
or
jns
data16
fs
cmp
pop
sub
push
leave
frstor
lock
add
mov
mov
dec
jg
push
stc
mov
add
jae
enter
cmp
push
rolb
mov
dec
add
lahf
call
dec
pusha
add
mov
dec
lret
inc
mov
mov
push
add
mov
std
int3
inc
fs
lret
ficoml
add
sub
shlb
or
add
add
adcb
adc
outsb
jb
or
mov
push
inc
or
lock
mov
add
test
dec
push
add
mov
icebp
cmp
xor
cld
pop
dec
sub
adc
xchg
pop
popa
je
fdivs
testl
sub
add
clc
repz
pop
mov
sub
movsl
cmpsb
jg
stc
out
lods
stos
jae
xor
pusha
pop
int3
repz
nop
inc
and
stc
mov
arpl
adc
dec
mov
and
add
mov
rorb
iret
inc
daa
jnp
add
mov
ret
js
or
add
cwtl
xchg
cwtl
dec
rclb
test
mov
dec
popf
inc
iret
andb
push
sbb
pusha
push
not
xchg
outsl
dec
ja
cmp
lds
add
cltd
icebp
mov
jp
add
mov
mov
xchg
test
fcomp
or
jp
mov
xor
fists
pop
cltd
adc
shrb
lret
pop
push
test
cmp
loop
pop
push
adc
loopne
add
push
lods
xor
xchg
add
ss
mov
add
stc
jnp
add
sub
mov
add
mov
idiv
inc
add
add
movsl
xchg
xor
ror
loopne
jg
jne
and
jo
push
popf
adc
mov
push
jmp
xor
and
jg
gs
and
jb
movsb
rcr
push
adc
add
adc
xor
inc
adcl
fs
cmpl
jne
add
aam
loopne
stos
popa
stos
aaa
sub
xor
cwtl
inc
fcoms
repz
add
cmp
dec
adc
jl
mov
add
mov
inc
jle
or
ja
jno
add
push
outsb
dec
loope
ljmp
outsl
mov
add
inc
das
sub
outsl
jae
fsts
rcll
arpl
mov
or
inc
cmpl
dec
push
inc
lds
outsb
daa
cmp
idivb
ja
xor
stos
andl
fmull
aad
icebp
sub
popw
loop
shrb
repnz
imul
add
or
cmp
and
inc
push
inc
cmp
inc
or
xor
mov
dec
int3
dec
cmp
add
ja
decb
lret
jne
inc
jmp
jmp
inc
into
mov
sbb
std
xchg
xor
xchg
adc
lds
sbb
sahf
mov
inc
ja
std
push
dec
sub
inc
dec
push
and
iret
clc
push
outsl
movsb
insl
pop
inc
mov
xor
mov
jbe
dec
sub
add
pop
push
inc
dec
add
ljmp
xchg
out
pop
sub
add
shlb
adc
ss
in
inc
and
jmp
xchg
jae
lret
in
insb
data16
pop
gs
jbe
jle
mov
pop
pop
call
push
cmp
popa
dec
inc
fwait
cmp
shl
adc
xor
push
xchg
sbb
fwait
ss
sub
cmp
mov
fmul
ret
sbb
bound
push
mov
lds
gs
inc
dec
mov
je
dec
faddl
xor
pop
pushl
es
mov
adc
or
sarl
fstpt
jne
mov
ljmp
inc
dec
xchg
arpl
subb
and
dec
ret
leave
inc
cmp
dec
ffree
fwait
xchg
add
xchg
outsb
jno
ljmp
push
push
popa
enter
xor
pop
or
js
inc
sub
fwait
hlt
cmp
imul
sbb
pop
push
push
jae
dec
pusha
sub
xchg
and
xor
sub
packssdw
jecxz
setae
xchg
xchg
fsubs
and
mov
push
ja,pn
jno
xchg
push
xchg
neg
dec
and
pop
out
cs
xor
scas
xor
jo
outsl
lret
pop
inc
sbb
nop
das
jno
lock
add
xor
inc
inc
ja
jl
cwtl
sbb
pop
push
cli
out
pop
sub
inc
add
aas
rcll
repz
sbb
cmpb
adc
aad
push
add
mov
push
test
add
lret
adc
or
add
aaa
rol
stos
jns
imul
jnp
aas
xchg
and
mov
bound
lret
out
enter
cltd
adc
loopne
jb
js
loope
add
das
push
mov
lret
call
je
sub
dec
stc
insl
loop
out
jmp
dec
and
sub
dec
dec
cmp
cmp
xor
xor
loopne
push
dec
into
xor
xchg
or
jns
xchg
aad
inc
popa
arpl
insb
rol
cmp
test
sub
add
push
add
sub
push
jo
outsl
jg
cmp
test
adc
sbb
xchg
adc
push
outsb
fildl
inc
fsubrl
add
push
shlb
and
imul
aam
jae
fstps
push
cmc
mov
lcall
je
adc
out
ja
imul
cli
xchg
sub
outsl
pop
stos
push
xchg
rol
xchg
and
jns
fsubl
sub
push
mov
push
fbld
dec
cmp
cmp
push
mov
dec
dec
ds
add
cmp
push
dec
push
rcrb
outsl
adc
jns
es
mov
mov
or
dec
inc
pop
cmp
mov
out
inc
fadds
inc
inc
push
cmp
insl
push
fstl
inc
sbb
in
mov
lret
add
inc
fldcw
cmp
mov
lods
xchg
fisubl
or
mov
dec
inc
dec
push
pop
popa
sub
or
rolb
cs
mov
fmull
xor
dec
push
xor
mov
cmp
mov
cwtl
lock
and
lds
cmpsb
jae
popa
mov
jmp
aam
shlb
dec
cs
inc
ret
dec
inc
and
xor
push
hlt
push
mulb
mov
arpl
xchg
idivb
add
pop
loopne
and
sub
arpl
xchg
jp
shl
jne
pop
push
fildl
jae
out
push
mov
cmp
call
sbb
mov
fucomi
jge
popf
jns
pop
gs
pop
dec
add
mov
xor
add
out
mov
xlat
lods
out
sbb
imulb
imul
popa
push
lds
or
out
sbb
js
inc
out
leave
mov
inc
aas
push
jbe
jnp
imul
aad
push
push
adc
xchg
loopne
or
gs
xor
dec
outsl
mov
fimull
mov
push
inc
xlat
movsb
jb
sub
jl
push
outsl
jo
dec
xlat
mov
and
push
icebp
or
aas
arpl
xor
popa
mov
xchg
and
and
lds
aam
push
dec
sub
pop
inc
inc
xchg
popf
adc
xlat
or
push
inc
inc
jae
test
dec
inc
sub
nop
loope
dec
push
push
icebp
and
push
out
push
cmp
mov
and
or
icebp
cli
xor
dec
pop
and
xorl
adcb
dec
push
inc
ret
decb
fcmove
and
dec
xchg
ficoms
psrad
sub
xor
js
sbb
push
inc
pop
mov
inc
xor
loope
mov
lret
xor
pop
rcr
and
pop
or
pushf
mov
into
sbb
sbb
push
arpl
pushf
add
jne
pop
and
xor
pop
xor
arpl
ja
pop
jae
cmpsl
nop
test
add
pop
xor
data16
jns
pop
jecxz
adc
jp
jecxz
mov
xor
xor
lret
add
adc
xor
mov
pop
xor
or
sub
mov
out
xor
add
cmp
lcall
xor
cmp
ss
aaa
aaa
cmp
cmp
cmp
sub
cmp
xor
incl
sarl
inc
push
mov
sub
dec
jno
scas
pop
arpl
outsb
sbb
cmp
filds
add
rcll
push
add
mov
inc
cmp
xor
cmp
push
push
je
bound
sub
jns
xchg
in
rcll
xchg
ret
mov
push
xor
sbb
dec
pop
outsl
add
cmp
incl
cwtl
cmp
fstpt
inc
aam
fnstsw
mov
jge
popa
mov
sub
arpl
add
sub
inc
inc
fs
push
inc
inc
data16
je
add
mov
dec
inc
sub
push
sub
push
pushf
mov
push
imul
xorb
lcall
cmp
cmp
fisubs
cmpsl
sub
cmp
pop
jp
inc
adc
mov
push
xor
arpl
cmpsl
sub
push
jbe
mov
insb
sbb
cmp
aam
outsb
add
insl
lahf
inc
dec
mov
sub
lahf
inc
sbb
ret
setg
das
cs
faddl
add
ret
add
jecxz
adc
dec
mov
xchg
inc
mov
pop
jns
xchg
jno
jb
lods
insl
shr
mov
pop
add
mov
push
testb
cwtl
xor
jno
repz
pop
add
andl
pop
lods
add
sub
jno
leave
addb
js
xchg
pop
mov
pop
movsb
pop
jecxz
inc
push
jge
sub
lret
es
sub
shlb
pop
dec
inc
inc
push
pop
xor
add
sbb
sbb
addl
add
push
sbb
push
lcall
fcmovnu
negl
outsb
sub
xchg
stc
insl
xchg
push
pop
fbld
pusha
xchg
cmpsb
outsb
pushf
sbb
ja
sahf
xor
push
gs
xchg
cmp
ja
xor
push
gs
xor
shrw
sbb
pop
repz
cs
push
cld
cmp
cs
lea
xchg
popa
cmp
test
and
and
mov
pop
and
inc
pop
cmp
and
inc
push
ficoml
imul
cltd
and
out
dec
push
movsl
jmp
inc
xchg
je
add
imul
aam
and
mov
or
cmp
xchg
mov
mov
pop
out
outsl
outsl
insb
push
inc
add
jo
push
mov
push
in
jno
dec
je
repnz
call
dec
gs
push
mov
adc
dec
rol
fstl
pop
xlat
add
cmp
fsubrs
xchg
mov
fidivrl
pop
in
xchg
mov
push
popf
mov
adc
mov
call
loopne
vprotb
fimuls
in
xor
bound
or
stc
insb
imull
and
addb
aad
inc
mov
sbb
dec
gs
xor
mov
push
push
mov
lret
inc
sub
jns
jp
mov
mov
xchg
in
or
sbb
sbb
dec
iret
dec
sbb
dec
xchg
ss
aaa
ljmp
fdivl
or
and
jne
sarb
add
out
xor
sub
sub
jb
adc
mov
push
push
jae
es
jl
xchg
lock
or
pop
pop
insl
jae
jp
out
xorl
mov
arpl
dec
mov
jo
mov
mov
lret
addb
das
lret
inc
pop
push
xchg
imul
inc
push
fldl
jge
fdivs
cmp
popa
push
jnp
or
add
lret
test
dec
push
pusha
js
push
inc
xchg
add
jb
test
jae
pop
pop
mov
xchg
roll
andl
je
out
mov
shrl
aaa
pusha
lcall
mov
jge
lds
fidivl
popa
imul
cmp
popl
push
jae
or
jle
add
jp
lret
test
es
aam
shlb
in
cltd
mov
hlt
das
sbb
popa
adc
sahf
stos
push
mov
xchg
xor
cmc
mov
dec
cmp
ss
in
ja
add
dec
sbb
dec
loope
int3
and
jp
test
dec
je
nop
cmpsb
xor
popf
inc
lcall
jmp
inc
inc
push
jb
dec
xor
cld
jb
aam
cmpsl
out
mov
xchg
fs
mov
popa
das
xor
sbb
es
arpl
out
mov
in
pop
roll
ss
and
inc
pop
jae
lahf
int3
mov
arpl
pop
mov
mov
sub
sahf
mov
gs
outsl
bound
fiaddl
into
cmpsl
mov
je
xchg
mov
jo
push
dec
inc
clc
hlt
mov
jmp
das
aaa
fdivrl
mov
fcmovnbe
mov
js
xchg
xor
out
xchg
inc
rolb
inc
push
je
mov
sub
out
pop
add
mov
xor
sub
jo
sub
dec
jo
pop
xchg
adc
outsl
cmc
dec
cltd
mov
or
jb
xor
test
mov
stos
mov
mov
lods
xor
shll
xor
push
dec
int
mov
les
bound
dec
out
dec
je
jb
mov
push
xchg
lahf
sbb
cmpsb
inc
xchg
aad
aam
pop
into
push
cmc
test
imul
shlb
sbb
mov
arpl
sbb
pop
mull
push
leave
lods
aad
cmp
insl
or
mov
sub
je,pt
fcmovb
call
int
fiadds
cmp
pop
mov
mov
movsl
sub
jmp
call
inc
lahf
fnstsw
out
fistl
dec
mov
inc
test
jo
out
cmp
push
lea
test
jae
or
push
movsl
pusha
add
dec
icebp
into
repz
and
mov
cmp
push
mov
sahf
rolb
pusha
icebp
je
xor
icebp
int
sbb
adc
sbb
cwtl
add
icebp
cwtl
iretw
mov
xchg
sbb
flds
add
add
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
adc
addl
icebp
adc
test
movsl
mov
repz
mov
popa
add
movsb
adc
mov
movsb
push
leave
adc
leave
enter
ret
out
test
push
test
popa
xchg
enter
add
add
movsl
adc
mov
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
push
xchg
inc
push
add
lcall
in
jle
adc
mov
xchg
rolb
adc
movl
pop
jno
xlat
xchg
jne
add
or
sub
pushf
push
jbe
jns
push
mov
jne
push
mov
jle
pop
loopne
decl
pop
jge
jo
add
adc
scas
inc
pop
push
xchg
ds
aas
push
pushf
in
jne
pusha
repnz
leave
into
mov
insl
popa
push
pop
pusha
mov
cmp
cmp
iret
iret
iret
fcos
shlb
jne
jbe
jnp
mov
bound
push
gs
jge
fnstsw
jbe
mov
jbe
in
xchg
std
in
cmp
add
cmc
imul
cltd
xor
mov
inc
sub
sbb
into
push
mov
decb
push
inc
and
push
push
dec
push
dec
and
dec
inc
popf
jbe
and
pop
test
jb
dec
sub
sub
mov
notb
cmp
jo
jo
xor
cmp
ret
pop
pop
mov
add
dec
push
and
xor
popa
enter
mov
gs
mov
movb
add
or
test
aam
xchg
lds
imul
push
push
add
xchg
orb
nop
push
add
jne
sbb
jp
iret
sub
and
cmp
popf
jnp
jle
inc
je
xlat
fimull
and
popf
ja
push
lahf
add
cmp
jns
repnz
inc
push
pop
je
pusha
adc
add
adc
shrb
sbbl
ret
in
sbb
scas
xor
inc
pop
jne
movb
sti
leave
xor
jbe
call
dec
gs
xor
add
fnstsw
add
mov
cs
loop
fsubl
push
aad
cwtl
insl
jae
lahf
add
aaa
je
sbb
adc
lcall
dec
pushf
lret
popf
and
fiadds
pop
xor
push
push
cs
dec
insl
es
lret
negb
and
mov
add
jg
mov
mov
or
rclb
xor
jge
fwait
test
rorb
cmc
add
aas
outsb
hlt
pusha
mov
scas
mov
or
xor
xor
inc
adc
ljmp
or
inc
cmc
test
sub
fcomps
js
adc
stos
pop
cmpsb
jmp
cmp
rorb
pop
es
ret
xchg
sbb
or
loop
ret
mov
adc
add
aas
xchg
adc
or
lods
or
psubusb
add
jmp
xor
mov
jns
add
pop
cli
xchg
insb
bts
adc
popf
sbb
mov
cwtl
test
mov
data16
sbb
pop
jne
xor
pop
and
or
xor
inc
std
jno
xchg
xor
inc
xor
jb
add
adc
lods
jge
mov
fs
push
out
pop
xor
or
jp
loop
mov
push
mov
pop
push
sub
jmp
std
sub
pop
imul
jmp
test
negl
cltd
lret
sbb
popf
xor
push
nop
repnz
push
mov
xchg
int3
mov
push
je
xchg
cmpsb
in
js
or
bound
gs
adc
incb
js
cmp
daa
pop
sbb
pop
shr
and
iretw
sub
movsb
int
xor
int
jae
mov
cmpsb
les
add
and
pop
push
mov
popa
popa
fs
int3
lds
stos
jnp
les
shll
or
cmp
inc
or
xor
cmp
inc
adc
inc
and
cs
arpl
or
or
daa
mov
add
mov
sub
insb
sub
inc
cmpsb
add
cmp
jb
or
loopne
or
pop
xchg
and
repz
cmp
orb
iret
mov
je
idivb
les
pop
outsb
std
inc
inc
pop
adc
mov
adc
outsb
das
xchg
nop
add
outsl
jo
mov
test
jo
popa
sahf
jecxz
insb
cmpsl
and
popa
jne
push
je
pop
cltd
cmp
xchg
jae
push
das
cmp
mov
outsb
pop
fxtract
inc
cli
cld
js
popa
cmp
fisttps
bound
je
inc
mov
fcoms
push
push
inc
dec
pop
subb
xor
nop
into
pop
sti
fldt
and
icebp
pushf
jbe
sbb
mov
jb
sub
push
adc
xlat
fbld
or
nop
mov
popf
fists
or
jae
arpl
mov
arpl
gs
outsb
lcall
nop
sarb
sub
and
iret
mov
insl
push
jns
or
push
in
jns
insl
pop
push
shll
push
mov
mov
out
movsb
mul
fisubs
jae
xor
test
lods
mov
jge
in
mov
lds
lea
call
mov
cli
aam
dec
sbb
mov
es
bound
mov
stos
jp
arpl
in
ror
cmp
inc
jle
inc
inc
fwait
cwtl
sbb
mov
jo
out
cmp
or
mov
inc
xor
int
sub
xchg
and
inc
iret
and
and
mov
test
fldenv
pop
and
cwtl
fidivs
mov
popf
sub
mov
lods
lea
push
mov
fs
insb
xchg
lds
jp
sbb
inc
jb
imull
fsubrs
dec
dec
sbb
lret
mov
mov
fcmovnbe
scas
cmp
outsb
test
push
std
imul
mov
add
gs
push
jmp
mov
sub
inc
mov
mov
insb
rolb
mov
xchg
jle
inc
insb
jmp
in
iret
add
jb
and
mov
fbld
inc
sub
xchg
repz
xchg
mov
shll
push
jl
xor
nop
sarl
sub
jmp
adc
or
outsl
cmp
aam
dec
fsts
into
test
add
jne
pop
dec
fldl
stos
mov
mov
lcall
add
and
xchg
pop
lods
mov
outsl
mov
mov
mov
mov
outsl
repz
jb
jle
jbe
jg
std
xor
js
inc
iret
dec
mov
push
add
insb
jae
es
sbb
mov
lfs
mov
inc
rcl
iret
push
imul
inc
jb
ljmp
andl
sbb
popa
imul
imul
fdivs
mov
cmpsb
xor
pop
rcl
inc
xor
inc
cltd
sbb
xchg
xchg
jne
pop
mov
mov
or
in
outsb
movsl
push
ds
shlb
data16
inc
rol
dec
push
repz
mov
stos
scas
inc
imul
mov
cmp
jae
jno
xor
dec
popa
js
mov
inc
jb,pn
push
dec
dec
outsl
ret
cmp
push
xchg
stos
inc
cmp
xlat
cwtl
test
adc
mov
inc
push
std
pop
enter
movsb
pop
mov
push
cld
cmp
push
cmp
push
cvtps2pi
xchg
stc
sub
mov
in
pop
daa
mov
lock
push
insl
fsts
sbb
xchg
add
stos
pop
in
aad
test
test
into
dec
in
mov
bound
mov
sub
inc
sub
lret
lret
imul
add
cmpsb
or
jbe
outsb
in
outsb
shlb
int3
sti
stc
lahf
sbb
clc
adc
sarl
popl
popf
mov
dec
addr16
push
jp
ss
push
loop
jns
cvtps2pd
lea
insb
jbe
iret
xlat
and
sbb
xchg
and
adc
jl
fistl
push
or
jno
pop
aaa
and
imul
xchg
int
stos
or
jns
stos
sbb
cs
mov
and
insb
inc
xchg
jb
leave
mov
and
mov
movsl
clc
and
cmc
inc
dec
jne
insl
out
xchg
cs
lcall
popa
and
mov
inc
lods
mov
jno
xor
ds
pop
data16
pop
mov
pop
xor
arpl
inc
xchg
add
lods
add
pop
in
sarl
jnp
and
sub
push
xor
push
add
sbb
data16
subb
pop
es
pop
or
inc
jbe
push
fmull
or
or
cs
xchg
pop
add
ret
jl
imul
xor
pop
cmp
mov
inc
jp
xchg
mov
pop
cmpsl
fldt
insl
leave
xchg
sbb
js
jne
xor
cmp
sub
cmp
pop
add
loop
mov
loopne
inc
dec
push
push
dec
mov
hlt
stos
or
push
push
and
cltd
hlt
inc
aad
outsl
sub
jl
inc
adc
jnp
xchg
sub
adcl
je
dec
dec
cmpsl
hlt
mov
push
xchg
popf
sar
mov
dec
or
lods
jbe
shlb
xor
lahf
xor
xor
shrl
cmp
pop
jmp
add
cmp
xor
popa
adc
xor
lods
lcall
fdivl
in
popa
xor
insb
repnz
xor
add
dec
dec
and
inc
test
or
push
inc
cmp
inc
adc
inc
es
mov
xchg
inc
pushf
and
adc
stc
and
mov
sub
cltd
loopne
push
inc
push
movsl
sub
fidivs
add
sub
jge
mov
dec
inc
push
pop
xchg
mov
add
add
xchg
insb
repz
sbb
lret
mov
sbb
call
addl
cs
sbb
xlat
inc
cmp
out
jle
inc
and
jle
ja
pop
es
out
sub
out
pop
cmp
aas
daa
ja
out
pusha
jle
jmp
push
jecxz
popa
jmp
inc
sub
inc
cmp
pop
repz
mov
das
cmp
aas
repz
push
repnz
push
ds
repz
repz
mov
mov
pop
cmp
daa
repz
ret
mov
test
into
out
cmp
lods
mov
and
out
popf
outsl
jnp,pn
jno
mov
sbb
js,pn
cli
popf
and
jge
cmp
out
cld
scas
mov
arpl
dec
cmpsl
add
or
add
inc
dec
ja
jmp
dec
push
inc
push
xlat
cmp
xchg
je
mov
pop
or
inc
inc
outsl
jb
mov
pop
ja
cmc
adc
popa
jns
out
repnz
pop
iret
jne
test
and
and
mov
dec
sbb
xchg
xor
cmp
call
push
add
adc
inc
sbb
cltd
insl
push
inc
inc
jl
lcall
neg
icebp
stc
into
dec
pusha
jb
nop
mov
add
jne
jo
arpl
jne
mov
stos
dec
pop
aad
xchg
lock
sub
or
add
mov
pop
add
xchg
adc
push
lret
push
add
add
andb
inc
out
add
daa
lods
and
sbb
mov
dec
add
loopne
mov
xchg
inc
adc
adc
rorl
add
pop
inc
mov
inc
adc
lea
int
add
dec
push
sbb
sbb
cltd
or
lcall
adcl
scas
and
adc
mov
lock
fimull
fldt
dec
adc
push
icebp
pop
cmp
push
shll
inc
popa
add
push
add
xchg
mov
frstor
push
insb
rolb
or
add
dec
inc
gs
pop
xchg
loope
lods
aas
pop
loope
gs
lods
fcmovne
dec
out
testb
fistpll
mov
icebp
lods
cmp
cmp
sbb
adc
add
iret
jae
jo
inc
pushf
push
or
movsl
xor
inc
pop
leave
pop
imul
add
add
les
xchg
cwtl
stos
loop
sub
pushf
inc
out
cmp
add
mov
add
js
loope
jne
jo
scas
mov
call
jo
cmpsl
rcrl
add
rorl
lahf
mov
lock
xchg
mov
int3
pusha
fsubl
pusha
cld
pusha
or
jns
ret
adc
and
sahf
out
sahf
xor
inc
dec
pop
jnp
out
pusha
push
mov
cmpb
iret
repz
movsb
mov
enter
cmp
aam
in
hlt
add
out
bound
or
adc
out
sahf
out
and
xor
sahf
out
sahf
dec
push
pusha
push
jns
orb
sahf
out
mov
int3
sahf
out
sahf
aam
in
hlt
cmp
jecxz
cld
add
or
and
cmp
repz
inc
dec
push
iret
repz
pop
fs
je
cmp
repz
mov
iret
rep
test
mov
iret
repz
ror
fsub
pop
iret
repz
call
iret
add
iret
repz
adc
and
xor
repz
cmp
dec
pop
fs
rep
js
mov
xchg
cwtl
mov
repz
int3
fsub
call
icebp
add
or
and
out
sahf
out
xor
dec
pop
sahf
out
sahf
pusha
fs
je
jns
out
test
out
sahf
out
mov
ror
call
call
jnp
sub
fs
cmp
icebp
jae
pop
xchg
popa
sub
mov
fdivrl
in
adc
shll
add
ja
addr16
movsb
xchg
mov
jbe
cmpsl
fs
push
fs
jb
add
outsb
pop
testl
ljmp
jl
xor
xor
jbe
dec
inc
adc
sbb
xor
insl
cmp
pop
jne
push
ss
cmp
mov
sbb
lahf
lahf
lahf
xor
xor
je
into
mov
outsb
outsl
outsb
cmp
xor
notl
adc
mov
arpl
pop
cmc
push
insl
mov
push
addr16
call
push
ret
adcb
ja
nop
test
jns
cmp
add
roll
or
cmp
jns
fcoms
outsl
inc
adc
jno
outsl
fwait
jae
lret
imul
jl
into
call
jecxz
imul
cli
jne
sub
push
xchg
jno
lock
pop
jp
arpl
stos
xor
xchg
rolb
lea
insl
insb
out
push
jb
fisttpll
jo
mov
imul
jae
cmp
sub
imul
and
out
sub
in
fisubs
mov
or
gs
es
test
cltd
cld
lods
movsl
and
lret
imul
cmp
fisubl
dec
or
ds
xchg
jge
lahf
jmp
gs
dec
or
data16
and
sahf
andl
in
jae
xchg
inc
outsl
mov
mov
lods
push
inc
pop
into
in
cmp
loope
pop
xor
hlt
pop
mov
push
sti
lcall
out
ljmp
or
jae
shll
cmpsb
push
cmp
mov
jb
mov
arpl
ss
sbbb
insl
nop
repnz
enter
adc
sub
inc
cltd
popa
jns
subl
cmc
or
insb
daa
mov
out
sub
fcomi
stos
push
add
fldt
fldt
pop
xor
mov
inc
rolb
push
push
pop
mov
push
out
movsb
add
insl
push
sarl
imul
jbe
xor
insl
test
pop
sub
jne
int
xor
enter
lock
xor
xor
cmp
push
jb
dec
lods
xchg
in
sbb
cmpsb
lret
jmp
lods
dec
jae
pusha
fnstenv
cmp
in
rcl
mov
sti
pop
inc
dec
mov
cmp
int3
loope
add
dec
dec
push
push
ds
mov
inc
jne
xor
xor
in
outsb
fimull
push
push
jge
cmpsb
rcl
lods
add
iret
xchg
lcall
cwtl
test
dec
cmp
outsl
out
push
push
adcl
test
out
xor
les
and
imull
lret
sti
xor
xor
inc
cmpsb
add
lods
push
lea
hlt
mov
sub
add
enter
xchg
dec
cltd
xchg
add
lret
mov
dec
addl
push
mov
sub
les
shrl
gs
cmpsl
push
push
std
lret
jmp
adc
lock
sahf
mov
push
ljmp
adc
mov
aad
stc
je
dec
mov
scas
and
xchg
xchg
inc
cmpsb
adc
bound
daa
jp
dec
repz
jle
mov
cmp
loope
cmp
arpl
pusha
dec
mov
dec
and
outsl
imull
sub
sub
adc
adc
popa
int3
in
dec
fisubs
mov
lahf
sub
push
xchg
fcoml
jp
mov
std
lret
repz
scas
fdiv
inc
in
dec
dec
jmp
mov
and
test
sahf
outsb
pop
xor
cltd
mov
ret
lods
push
xchg
sti
scas
push
sbb
or
and
xchg
loope
cmpsl
xchg
inc
inc
push
and
cmpsl
pusha
sbb
or
fs
out
outsb
addr16
sub
mov
cmp
jl
sbb
xor
mov
xchg
add
cmc
dec
jnp
lea
insb
call
mov
aad
frstor
mov
mov
sub
cmp
andb
into
cmp
add
out
push
shll
and
cltd
jmp
imull
ds
cmpb
cmpsl
hlt
lret
xchg
pop
repz
adc
jg
fimull
mov
cs
mov
adc
jae
mov
and
pop
shll
mov
inc
xor
fdivp
addr16
je
jmp
jb
in
aaa
push
fsubrl
lea
popf
ja
push
xor
in
pop
sub
xor
dec
jns
mov
jp
add
scas
stos
dec
std
stos
or
inc
push
cwtl
inc
cmp
push
jbe
pop
dec
inc
push
mov
cmpsb
push
test
fstpt
jno
mov
cmp
sbb
movsl
pop
dec
push
divb
je
fs
insl
lahf
push
sub
dec
fnstsw
adcl
jne
lret
adc
je
mov
scas
insl
test
jecxz
dec
rolb
test
dec
data16
pop
mov
lahf
adc
xchg
jb
mov
insl
push
ljmp
ret
arpl
shll
clc
mov
inc
imul
popf
cmp
xchg
sti
fucom
inc
xor
dec
pusha
aam
sahf
popa
cmpsl
mov
aaa
mov
ret
jns
cwtl
jb
pop
aad
or
cmp
lret
xchg
mov
outsb
nop
inc
ret
fs
pop
cmp
adc
pop
mov
mov
inc
outsl
cli
add
mov
divb
pop
into
fsubrl
inc
mov
mov
jae
push
dec
lcall
push
adc
inc
aam
imul
inc
sbb
data16
jmp
cmpsl
dec
iret
sti
jbe
pop
mov
rcrb
daa
or
xor
add
fwait
pusha
jae
stc
inc
ljmp
inc
push
jbe
mov
pop
push
push
push
add
push
mov
jnp
xchg
jae
sub
and
jl,pn
mov
addr16
cmp
loope
icebp
je
push
add
mov
ret
shlb
loop
mov
or
lret
scas
dec
icebp
or
mov
mov
and
sub
add
popf
xchg
xor
lahf
ss
xor
test
ret
push
fildl
push
cmp
xchg
adc
lods
jbe
ficoml
fsubrl
shlb
adc
xor
pushf
sub
fs
adc
sub
or
in
add
lcall
cs
sbb
dec
shll
gs
lea
jg
mov
inc
call
or
dec
inc
inc
movb
cmp
xchg
cs
inc
fidivl
cltd
mov
sbbb
jmp
lcall
outsl
jno
or
inc
ja,pt
mov
mov
jecxz
popf
mov
sub
je
data16
cli
dec
test
cs
aas
inc
and
mov
adc
jns
jmp
sub
push
out
nop
ljmp
aam
les
outsl
jmp
pop
test
lods
lds
mov
sub
xchg
xor
mov
push
popa
and
dec
sub
lods
hlt
jle
out
xchg
es
mov
je,pt
out
mov
testl
jae
cli
je
adc
outsb
cwtl
out
jge
dec
mov
outsl
sbb
cmp
pushf
xchg
sahf
bound
sbb
dec
mov
inc
mov
iret
add
data16
idivb
jl
dec
std
xchg
out
mov
cmc
imul
mov
loop
or
outsl
sahf
xor
push
push
dec
nop
imul
xlat
out
jno
push
xor
test
scas
dec
ja
cmpsb
je
sbb
push
fistl
mov
mov
add
mov
jnp
pop
mov
cs
mov
dec
outsl
fsubs
lds
dec
clc
movsl
test
dec
imull
mov
push
mov
popf
push
sub
jae
adc
adc
and
loope
fwait
into
in
mov
fidivs
or
dec
inc
stos
out
enter
stos
jae
in
mov
cmc
jg
push
pop
jns
test
in
scas
add
dec
gs
pop
inc
loope
insl
and
push
xchg
push
outsb
stos
jb
lret
and
out
fcom
popa
pusha
repnz
dec
movsb
out
push
pop
push
fldt
dec
pop
sub
push
ljmp
add
cltd
dec
jnp
out
cmp
push
movsl
jle
add
lds
je
sub
and
or
sahf
cs
pop
cltd
cli
insl
cmp
cmp
pop
inc
xchg
fs
jbe
push
mov
push
dec
push
sahf
dec
in
aam
jmp
cmpsl
xor
mov
sbb
jno
sbb
rcl
mov
outsb
outsl
in
mov
lods
mov
aam
inc
xchg
loope
xor
fisttps
sahf
shr
inc
add
dec
jle
sub
jno
add
movsb
jb
addl
inc
xchg
cmp
pop
fstpl
jns
cmp
jbe
push
ror
faddl
gs
sbb
nop
mov
std
gs
jnp
push
outsl
push
dec
and
popf
push
mov
adc
cs
cmp
sub
mulb
xchg
jb
push
cmp
cmc
ja
sbb
aaa
or
test
cmpsb
shl
push
addr16
sub
adc
nop
and
lea
insl
int
dec
pop
jecxz
dec
shl
add
lds
jmp
fcoms
outsb
mov
jnp
fwait
rcll
push
int
fs
cmpsb
repz
cmp
fistpll
test
lcall
mov
out
nop
jnp
push
xor
ficoms
sbb
mov
pop
push
mov
repz
mov
push
test
inc
outsw
insl
sbb
fstpl
sti
ja
mov
and
popf
push
das
xchg
mov
jl
pop
arpl
mov
arpl
mov
inc
push
push
movsb
xor
test
cmpsb
xchg
lret
and
lret
jbe
dec
lahf
aaa
xchg
jmp
pop
xchg
xor
repz
aas
mov
out
xlat
add
mov
enter
call
jae
sbb
cwtl
mov
and
ss
xor
icebp
sub
or
cltd
push
gs
insl
cltd
xor
xor
pop
fs
lret
mov
fucomi
jbe
sti
xchg
sbb
insl
insl
sarl
shlb
testl
sahf
aas
pushf
scas
and
jno
and
mov
push
cs
sbb
push
out
lcall
and
pop
and
or
sub
lret
leave
popa
sbb
insb
lods
pop
push
in
scas
nop
cmpsl
lds
inc
xchg
mov
or
inc
inc
push
in
cmp
repnz
bound
stc
sbb
outsl
pop
push
int
inc
cs
sub
mov
mov
pop
dec
sub
xchg
icebp
arpl
pop
sti
mov
fildl
ret
sub
adc
push
dec
insl
jmp
ffreep
in
xchg
fs
arpl
lcall
cmp
sbb
sbb
xlat
lods
insl
mov
fimull
nop
faddl
out
sarb
je
sbb
xor
push
nop
repz
outsb
testl
adc
push
xchg
xlat
inc
cwtl
fisttpl
jne
dec
xlat
add
dec
js
call
push
ficoms
inc
inc
inc
push
inc
outsb
dec
in
aas
push
dec
inc
pop
in
popf
out
fisttps
ja
dec
imul
push
pop
sbb
jne
cmp
test
adc
jne
fs
cwtl
xchg
push
jmp
sub
dec
popf
inc
shr
sbb
and
jg
les
cmc
cs
dec
es
or
mov
data16
scas
sahf
outsl
cmp
aaa
inc
jb
ret
ss
mov
jg
jbe
leave
mov
pop
shlb
cltd
xchg
sti
cmp
cmp
pop
mov
fmul
mov
sub
and
sbb
xor
inc
inc
and
fnstsw
scas
idiv
stos
sbb
jp
sub
xchg
xor
push
notb
xchg
in
jbe
inc
popf
jle
jnp
pop
adc
rcll
mov
xchg
mov
mov
mov
lods
push
jg
dec
and
pop
iret
xchg
mov
add
into
dec
lds
addr16
xor
popf
add
repz
setns
dec
or
push
jb
int3
jnp
daa
pusha
out
fwait
inc
push
fsts
movsb
fidivrs
sbb
cld
jmp
jae
jns
stos
push
jmp
sub
pop
scas
and
jmp
insb
sub
xchg
adc
sub
cmpsb
and
pop
jmp
jl
lods
icebp
cmp
ret
xchg
jge
sbb
sti
mov
out
fisttpll
in
outsl
xor
inc
jmp
lret
lods
jbe
dec
mov
jns
sbb
jb
out
test
cs
fsin
mov
jns
adc
jnp
push
jmp
and
divl
outsb
jbe
dec
push
push
fstpt
lret
popa
xor
jne
dec
mov
and
std
adc
enter
roll
sbb
in
cmp
nop
cwtl
jae
push
out
adcb
adc
xchg
xor
pop
dec
xchg
push
bound
mov
cmpsl
int3
push
fs
pusha
xchg
ljmp
and
dec
mov
and
rorl
imul
and
addl
and
addr16
scas
mov
cwtl
add
sbb
jb
dec
jbe
addr16
enter
or
jge
int
into
mov
fistpll
jo
lret
gs
mov
and
hlt
inc
fs
jl
mov
or
pop
jae
cmpsl
add
arpl
sbb
or
mov
repz
test
negl
fldl
daa
loop
and
jp
jne
pop
mov
lds
sub
mov
sub
push
push
enter
adc
sub
mov
or
imul
je
mull
mov
dec
aas
inc
mov
fldt
sahf
arpl
mov
es
in
push
jnp
inc
and
decb
mov
push
into
push
xor
push
jo
outsl
gs
xchg
xchg
mov
cmp
mov
mov
xorb
xchg
das
xor
inc
cmpsb
jb
test
rcll
insb
fwait
jne
pop
sub
push
in
xor
pop
pop
adc
or
and
ficoms
in
sbb
dec
shll
jmp
mov
aam
cld
jns
pop
and
xchg
mov
mov
cmpsl
je
sbb
arpl
dec
and
in
and
add
int3
push
dec
je
neg
mov
push
mov
cmpsl
mov
inc
stos
cmpsl
and
addr16
sub
mov
fdivrl
push
mov
push
dec
ja
sub
cltd
je
mov
mov
addr16
push
sbb
inc
mov
xor
mov
imul
inc
add
pop
dec
add
mov
jb
enter
add
and
push
add
aam
fildl
bound
gs
adcb
dec
popf
xchg
leave
loope
pop
cmp
imul
addr16
insl
jo
jb
or
ja
jns
xor
neg
arpl
call
lds
pop
jl
and
inc
xchg
ret
mov
dec
inc
xor
push
jl
mov
aad
pusha
outsb
aas
inc
outsb
or
dec
pop
fs
mov
daa
add
insl
and
and
popf
cwtl
xlat
ss
inc
inc
inc
popf
clc
cmp
scas
lock
pop
sbb
push
add
add
jae
or
and
lea
inc
inc
dec
add
xchg
sahf
mov
xchg
inc
jae
dec
inc
and
mov
fwait
inc
inc
xchg
scas
gs
and
mov
inc
jae
outsl
roll
jne
push
add
mov
dec
cmp
and
cmp
cmp
jg
ja
inc
fs
dec
push
imul
mov
xlat
jnp
lods
xchg
negl
and
in
mov
add
bound
jp
jno
sub
mov
jle
pop
lods
sbb
fstl
jae
cmp
lret
fs
stc
jg
pop
stos
jnp
gs
in
inc
cs
ja
xchg
scas
jp
xchg
dec
inc
iret
push
outsb
jb
push
xchg
repz
mov
fwait
sbb
mov
jae
xor
add
cli
push
int3
aad
mov
fisubrl
les
xchg
pop
jmp
mov
inc
std
daa
out
out
jae
push
adc
and
in
cmpsl
pop
popf
jle
xchg
scas
xchg
outsl
aas
jb
test
pop
pop
jl
and
jno
mov
jmp
rcrb
mov
mov
mov
xchg
rcrb
pop
add
xorb
inc
loop
sbb
sub
dec
add
shlb
js
mov
lods
or
or
lea
cmp
rolb
pop
and
dec
js
inc
and
fildl
loope
push
or
cmpl
inc
jne
mov
add
sub
scas
ret
add
divb
pushl
repnz
push
call
cmp
dec
imul
and
mov
call
pop
je
pop
ret
pop
pop
pop
push
sub
mov
lea
lcall
stos
mov
stos
push
push
push
push
adc
adc
push
push
call
add
test
ret
add
test
icebp
xchg
inc
mov
push
movl
imul
jo
rolb
sub
cmp
or
imul
fstps
xchg
pop
icebp
sub
adc
sub
jmp
inc
push
inc
cwtl
out
aas
push
push
xor
cmp
xor
xor
xor
rclb
xchg
nop
cmp
mov
rcrl
add
push
inc
push
xor
push
out
or
fmull
repnz
je
insl
inc
pop
out
adc
mov
scas
les
mov
xchg
jbe
sarb
cmp
xchg
cmp
cmp
notl
pop
ss
inc
dec
pop
inc
push
push
or
dec
ss
dec
dec
jp
add
push
outsl
jae
in
jb
or
popf
insl
pop
mov
pop
push
test
push
sbb
imul
rolb
mov
mov
imul
jne
ss
xor
inc
sub
jp
adcl
imul
mov
xor
sub
mov
xchg
inc
adc
inc
jge
cs
dec
and
adc
dec
imul
inc
sti
sahf
out
or
iret
cmp
in
cmc
push
iret
mov
add
lret
and
sub
repz
dec
sbb
int
dec
lods
add
pop
and
mov
mov
xor
sub
jl
mov
mov
out
xlat
cmp
mov
roll
xor
mov
pop
dec
inc
cmpsl
pop
pop
nop
push
xchg
or
stos
xor
add
dec
cmp
xchg
test
sub
sub
adc
push
push
movsl
xchg
shlb
fwait
inc
mov
mov
or
mov
and
popa
orl
das
je
pop
imul
jp
add
aas
mov
xor
inc
repnz
jmp
cmp
or
cmp
js
insb
cmp
and
aas
cmpsl
adc
inc
cmp
mov
test
out
push
loop
inc
inc
push
cmp
jno
popa
lret
mov
sbb
or
loope
jae
mov
out
in
cmp
jge
rolb
dec
and
jp
test
sbb
movsl
xor
sub
dec
dec
mov
decl
push
les
loopne
dec
cmp
jae
inc
ds
mov
add
sbb
inc
add
sub
sbb
and
sub
xor
push
test
sub
popf
and
adc
addl
adc
add
lret
pushf
outsl
ljmp
add
add
clc
mov
addr16
cmpb
cmpsb
fistps
movsl
sbbl
subb
pop
ljmp
jle
mov
js
iret
mov
in
call
sbb
add
ret
add
push
xor
fcomp
loopne
xor
xchg
stc
adc
add
aaa
ficompl
loope
mov
adc
mov
fidivl
out
add
in
in
push
or
outsl
lret
iret
mul
popf
or
push
ds
pop
mull
adc
aas
jg
pop
and
aas
inc
push
push
aaa
stc
mov
push
push
imul
stc
pop
insb
lret
rep
or
les
cmp
inc
cmp
push
cmp
jl
addl
and
xchg
sahf
repnz
repz
mov
out
repnz
xlat
sbb
sbb
rorb
gs
sbb
repz
repz
cmp
nop
xchg
xchg
scas
and
mov
sub
or
add
psubsw
inc
fnstenv
ret
neg
enter
cmp
arpl
mov
pop
iret
repz
adc
or
sub
sbb
movsb
jns
out
sbb
sbb
cmp
js
iret
repz
jns
jp
cld
insl
ret
repz
jmp
adc
push
xor
add
loope
fisttpl
aam
enter
and
lret
lahf
inc
incl
xchg
sbb
incl
pop
and
adc
mov
pop
lret
enter
popa
sbb
or
ret
mov
adc
aam
xchg
cwtl
push
and
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
add
add
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
add
add
popl
cmp
cmpsb
iret
decl
js
outsl
loopne
add
add
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
add
add
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
add
add
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
add
add
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
add
add
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
sti
or
and
sub
sbb
cmp
add
add
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
add
lds
mov
insb
scas
add
aas
xor
aad
mov
std
add
add
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
add
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
pop
add
push
jl
mov
das
lea
mov
inc
aas
movsl
jmp
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
add
xchg
cli
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
xchg
inc
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
add
add
movsl
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
ficomps
frstor
in
sbb
add
add
sub
add
je
add
sub
add
insb
nop
push
add
add
nop
push
add
add
add
nop
push
add
add
add
lcall
add
nop
push
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
pop
mov
add
add
add
add
add
incl
push
lea
add
or
add
add
push
push
mov
jl
add
rcrb
cld
push
add
test
je
cmp
addb
mov
sub
fnstsw
and
lea
mov
jae
cmp
jae
mov
add
in
mov
lea
fbld
jg
sub
jno
cmp
out
adc
sub
cs
pop
push
leave
or
sub
shl
sub
rep
pop
mov
sub
ds
sarl
jl
rolb
rcrl
sbb
fcos
addl
or
pushl
adcb
ds
pop
pop
ret
sbb
inc
add
dec
dec
cmp
sbb
add
nop
push
and
adc
and
add
pop
sub
sub
sub
or
or
call
jecxz
mov
push
push
mov
mov
push
sbb
dec
dec
jmp
sbb
push
ret
rorb
arpl
jg
and
sbb
int3
ja
imul
outsb
push
jl
add
and
xor
rcr
push
push
push
push
call
ljmp
repnz
or
add
or
sbb
ret
mov
sbb
and
cmp
sub
mov
inc
fiadds
adc
aad
arpl
push
mov
jnp
cli
ret
cwtl
fbld
outsb
lea
inc
and
fildll
or
sbb
call
or
dec
sub
mov
xor
decb
push
push
add
adc
pop
adc
push
call
and
loope
xor
push
xor
leave
adc
lea
je
mov
fsubrs
inc
jne
xchg
cmpsl
sbb
sub
test
push
and
lea
or
push
inc
sbb
xchg
mov
add
inc
into
mov
push
push
aas
aas
push
aaa
adc
push
sub
scas
xchg
mov
cmp
jmp
or
add
icebp
add
movb
add
dec
mov
ljmp
rol
mov
xor
in
cmpb
xor
jb
pop
adc
or
pop
pop
pop
ret
cs
ret
add
add
fsubr
cmpl
jmp
adc
aad
add
push
call
mov
push
add
jmp
addb
je
push
or
inc
in
ret
mov
cld
inc
cmp
jnp
xor
or
push
jne
or
jo
out
dec
ret
leave
add
add
inc
scas
fisubrl
pop
or
mov
fcoms
add
cltd
addb
dec
adc
sbb
jne
sbb
inc
inc
enter
add
jmp
fmuls
iret
or
lock
pop
adc
iret
jge
push
sub
ljmp
jne
mov
push
cmp
sbb
or
inc
dec
out
pop
fmuls
shr
leave
dec
cwtl
rclb
aad
push
add
loope
leave
inc
lds
jmp
push
push
cmp
sub
pushw
push
call
sub
dec
je
jmp
xchg
test
jecxz
adc
ret
clc
aam
inc
add
lock
adc
adc
lods
adc
test
adc
dec
add
adcb
cmp
add
mov
add
adc
inc
xor
or
dec
loop
jle
notl
enter
stc
gs
jle
add
movsl
and
push
xchg
or
xor
sub
mov
push
adc
sub
sti
fildll
push
adc
call
push
push
inc
mov
lea
aaa
push
push
push
in
rolb
jo
mov
jge
adc
leave
and
and
imul
mov
stc
insl
sbb
mov
xlat
xor
mov
sub
mov
add
adc
lea
stc
push
push
dec
ret
push
inc
push
xchg
sbb
push
push
adc
inc
fs
fwait
cmp
add
je
popa
or
loopne
or
dec
mov
mov
jae
or
and
movsl
cli
mov
cmp
xor
clc
jne
pop
repnz
cmpsl
xchg
cmp
mov
inc
movsb
loope
sub
dec
clc
xchg
jmp
xchg
adc
test
push
push
push
push
call
and
in
adc
gs
adc
or
and
and
pop
inc
or
addl
add
pop
rorl
testb
adc
xor
shlb
fists
mov
add
mov
jmp
push
adc
rolb
mov
testb
mov
push
dec
test
dec
or
inc
push
inc
mov
aam
dec
inc
in
mov
inc
jnp
pop
in
ret
outsl
pop
mov
add
test
scas
addb
xchg
dec
dec
xchg
icebp
pop
pusha
out
adc
cmp
lock
stos
pop
call
cli
repnz
adc
xor
adc
mov
xor
pop
and
or
add
mov
xchg
aam
sbb
pop
pushf
or
jmp
dec
or
jb
and
lcall
test
fisttpl
or
inc
push
mov
mov
cs
outsb
je
jns
push
outsl
imul
dec
or
fs
clc
add
jo
arpl
imul
adc
jae
cmp
cmc
cs
outsb
inc
cmp
jp
xor
push
push
inc
dec
inc
cs
fimuls
fs
insb
and
jmp
popa
outsb
jns
enter
sbb
imul
xor
dec
xchg
inc
outsl
js
data16
data16
cmp
int
insb
aas
inc
js
je
test
sti
cmp
mov
dec
stos
or
out
xor
lret
push
add
sub
or
add
add
add
je
and
jl
sub
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
nop
push
add
add
add
push
add
nop
push
add
push
add
add
and
push
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
call
mov
mov
pop
pop
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
