pop
sar
js
scas
sbb
cmovge
push
cmp
xchg
pop
xlat
test
sbb
icebp
dec
shlb
adc
popf
jg
ja
add
sarl
in
cmp
sti
popf
test
inc
ret
cmp
outsb
add
fiaddl
out
pop
adc
ret
lea
pop
ret
sbb
ja
repnz
xor
jbe
repz
jl
sub
imul
sbb
out
adc
jae
hlt
fnsave
cmp
adc
and
mov
dec
jg
pop
std
mov
lock
in
insb
xorl
sbb
sbb
mov
jg
test
jnp
add
cltd
sub
mov
or
mov
loope
inc
push
std
jle
xchg
je
jbe
aam
les
pop
roll
insl
sti
movsl
test
mov
cli
or
adc
mov
imul
sti
icebp
lock
jnp
mov
add
push
addr16
push
pop
movsb
cmp
mov
mov
add
mov
sbb
cwtl
inc
dec
xor
cmp
xchg
cmc
rclb
push
in
push
aad
ret
leave
fs
inc
js
pop
cmpsl
fmull
movsl
mov
adc
jb
jno
xlat
inc
cli
pop
jnp
roll
adc
es
mov
jno
in
xchg
dec
mov
ds
fsub
pop
jbe
das
repz
rcr
or
aam
jnp
or
jl
mov
push
inc
sbb
in
jp
xor
adc
and
adc
mov
hlt
jle
fldcw
push
andl
pop
ja
add
add
std
mov
pop
jg
xchg
rcl
dec
test
jno
int
dec
lahf
fldl
jecxz
int
jmp
xchg
dec
xor
rcll
popf
pushf
fbstp
lods
pop
lidtl
aad
pop
mov
shlb
adc
ret
iret
call
jne
std
sub
lods
dec
mov
xchg
add
loopne
roll
sbbb
mov
js
out
xchg
pop
push
sub
fwait
stos
jo
scas
dec
sbb
xchg
stc
sbb
inc
fists
dec
jmp
jno
iret
and
sub
test
sbb
add
pop
movsl
sub
cmp
mov
xchg
cld
outsl
sub
push
outsb
bound
cmpsb
pop
mov
jae
pop
lcall
sbb
add
jnp
and
icebp
out
and
cmp
insl
fdivr
sub
mov
mov
cwtl
inc
loope
inc
inc
testl
out
xor
mov
movsl
fistl
xchg
mov
cmp
mov
cmpsl
scas
add
and
add
aam
mov
stos
sahf
cmp
inc
fadds
xlat
icebp
bound
les
and
or
out
mov
pop
test
push
lcall
aad
xor
mov
lret
mov
push
add
sub
push
notb
cmp
shlb
loope
sbb
adc
mov
aad
dec
sbb
daa
jbe
mov
pop
outsb
mov
test
cmpsl
data16
inc
and
mov
subl
mov
pop
fdivr
inc
in
repz
rclb
adc
and
pop
movsb
pop
cmc
push
addr16
push
mov
push
or
or
push
jb
cmpsl
gs
imul
aad
xchg
inc
test
lret
push
data16
fnsave
adc
or
push
sub
lock
aas
cmp
addr16
xchg
js
xchg
int3
xor
int3
lcall
jp
jae
mov
add
sahf
cli
mov
add
cli
movsb
and
test
das
fdivrl
cmp
add
jne
in
and
sbb
add
sbb
pop
pop
lods
outsb
jno
pop
jnp
and
mov
daa
inc
mov
inc
push
mov
jne
and
add
test
imul
pop
nop
les
push
sbb
js
push
sub
rcrb
sbb
sbb
ficoms
inc
fisubrs
xchg
pop
iret
xlat
in
dec
ss
dec
repz
pop
jo
lods
mov
sahf
and
xor
sbb
jle
push
sbb
jno
lret
jnp
jmp
lea
andl
and
popf
sti
inc
in
leave
and
pop
and
imul
jp
jecxz
lahf
push
pusha
pop
popa
mov
aas
jo
cmp
sbb
pop
inc
mov
mov
stc
in
movsl
hlt
mov
imul
fcomip
les
pushf
xor
push
sub
xlat
xor
jg
mov
add
push
mov
mov
pusha
repz
push
hlt
std
mov
cli
adc
data16
fs
inc
es
xchg
mov
pop
ja
daa
xchg
mov
out
jmp
mov
inc
mov
sub
sarl
fistpl
test
sbb
ja
ficomps
add
xchg
rolb
pushf
cmp
imul
or
into
iret
inc
mov
sbb
hlt
js
pop
arpl
mov
mov
pusha
mov
mov
push
sbb
leave
and
and
std
stc
aaa
arpl
inc
adcb
cmp
and
mov
and
incb
xor
ja
lods
sub
loopne
in
pop
xchg
sub
js
push
pop
pop
pusha
inc
jmp
in
mov
sbbl
test
and
cld
lock
mulb
push
sbb
inc
fimuls
xchg
fwait
mov
cmp
pop
repnz
fisttps
lret
jnp
xchg
jl
and
notb
shlb
or
out
cmc
pusha
push
jns
cld
fwait
arpl
or
sarl
mov
inc
movsl
jno
pop
dec
ds
ss
sub
jnp
fisttpll
lods
push
shrl
icebp
sub
inc
adc
pop
lret
push
cmpb
mov
lods
xchg
add
add
pop
xor
outsl
jle
cmp
push
adc
and
scas
or
in
xor
sub
jne
mov
dec
pop
int3
adc
mov
ljmp
test
aam
imul
out
dec
push
dec
scas
and
jmp
outsl
mov
sar
jno
mov
adc
xor
mov
sbb
cmpsl
cmp
pusha
xchg
push
inc
idivl
popf
mov
xchg
arpl
jo
roll
ds
loope
jmp
jl
push
imul
enter
inc
clc
push
shrl
clc
insb
into
loop
push
or
pop
inc
sahf
jmp
repz
cs
aam
xor
xchg
add
or
movsb
or
fs
sub
das
mov
and
ljmp
push
xchg
les
jmp
pop
jmp
xchg
mov
int
fdivrs
ljmp
lods
mov
fidivrs
and
ret
jp
aaa
int3
sbbb
cltd
jp
adc
mov
imul
aad
cmpsb
adc
push
push
les
mov
pop
iret
scas
push
push
movsb
mov
and
mov
jge
sbb
mov
xchg
adc
inc
cmpsl
stc
push
pop
inc
and
jmp
inc
jp
aaa
jecxz
leave
dec
mov
test
shlb
add
add
scas
adc
jle
das
aas
mov
cmp
data16
loop
xchg
sub
and
mov
mov
stc
imul
les
pop
pop
add
or
jl
imul
icebp
mov
scas
jmp
xlat
test
and
sub
jno
xlat
lret
std
cmpsl
insb
cli
xchg
and
inc
and
inc
movsl
jno
loop
int3
jb
in
daa
xchg
or
jno
aad
sub
mov
ds
sbb
in
fs
adc
aad
test
fiadds
xchg
sub
daa
adc
cmp
in
inc
sbb
sbb
repz
push
push
ret
push
push
test
mov
dec
movsl
push
and
cmp
push
pop
sub
cltd
out
adc
mov
pop
sbb
adc
outsb
adc
and
and
sbb
adcb
cmp
push
mov
out
mov
or
fsubl
bound
pushf
sbbb
in
or
pop
jle
mulb
lea
jg
and
or
xchg
mov
inc
and
jbe
clc
outsl
jb
or
rclb
pop
jbe
mov
jbe
test
jne
and
mov
mov
and
push
mov
outsl
insl
shlb
aaa
mov
lahf
icebp
repnz
cmpsb
int
mov
mov
ret
data16
mov
ja
push
sbb
lret
cmpsb
sub
incl
mov
push
lock
adc
es
fwait
jbe
cmc
sti
xchg
mov
fcompl
sbb
int3
insl
movsb
fwait
sub
xchg
cmp
mov
add
ret
mov
js
add
jg
xor
fsubp
data16
xchg
cmp
sti
testb
xchg
mov
xor
call
add
push
aam
pop
cmc
outsb
adc
push
xchg
enter
orl
ss
xchg
jle
push
insb
dec
fs
mov
push
xor
dec
shrb
ret
movsb
dec
mov
test
mov
add
es
insb
mov
xchg
xchg
pop
sub
or
and
xor
cs
sbb
stos
push
sbbb
mov
jo
push
sub
jge
shll
nop
fwait
jno
rcll
ret
jnp
jnp
pusha
mov
cmc
shll
or
sahf
data16
pop
repnz
mov
dec
popl
out
or
mov
out
fistl
das
pushf
jne
into
fisttpll
mov
push
insl
push
inc
pop
in
lret
pop
pushf
out
call
lcall
inc
and
scas
stos
mov
pop
bound
and
cmpsb
jle
add
adc
jae
xor
mov
jecxz
pop
out
cmpsb
push
adc
dec
out
push
or
call
test
mov
bnd
lea
movsl
movsb
xchg
jp
xchg
lods
test
xor
push
movsb
add
outsl
js
mov
insl
sub
mov
sbb
fidivrl
and
and
jns
mov
fsubl
push
cltd
xchg
add
in
adc
aad
cmc
jp,pt
sti
in
cmp
mov
shr
mov
add
cli
movsl
sar
push
in
sbb
sub
cmpsb
mov
inc
test
imul
and
jmp
xchg
xchg
das
jno
sbb
ja
push
pop
mov
fwait
mov
ret
mov
cld
cmp
int3
xor
adcl
vcvtsd2ss
cmp
in
shll
shll
sbbl
and
sbb
das
nop
sub
iret
cmpsb
mov
lods
adc
push
pop
rcrb
outsl
je
cmp
cli
arpl
push
xorl
in
and
and
mov
and
add
pop
jbe
and
stos
inc
add
xchg
and
mov
aas
mov
cmp
jp
in
adc
push
rolb
push
adc
dec
mov
movsb
aas
movsb
cmp
pop
pop
push
into
and
ljmp
sub
popa
movsl
dec
sarl
fstl
inc
cmc
neg
out
movsl
loop
mov
ret
jb
push
add
ljmp
stc
insb
sbb
cmp
rclb
cld
mov
leave
xchg
and
pushf
inc
in
cwtl
pop
cmpsl
push
xor
cwtd
jg
or
mov
xchg
lds
adc
xor
mov
sub
xor
inc
ljmp
cmp
mov
in
repz
dec
inc
or
cmpsb
insb
cmp
adc
mov
hlt
sub
cmpl
sti
int3
mov
dec
adc
fdivs
dec
jle
and
dec
movsl
dec
lea
dec
mov
mov
mov
jne
add
mov
pop
decb
add
cmp
lret
repnz
dec
mov
inc
fwait
mov
mov
out
and
hlt
inc
int
popf
leave
das
jmp
pop
lret
aaa
sub
pusha
inc
xlat
lock
cmp
cmp
inc
ret
mov
mov
fnstsw
push
test
lea
je
fs
scas
jmp
fstps
ja
mov
inc
push
dec
cmc
out
inc
pop
ja
out
add
xchg
insb
xchg
or
fnsave
xchg
xor
sbb
divb
inc
std
iret
inc
push
push
mov
add
outsb
popf
js
fwait
mov
call
test
lods
cmpb
xor
jl
xchg
ret
or
stc
rclb
or
lods
mov
ret
ljmp
shlb
inc
pop
push
mov
fidivs
nop
sti
sbbl
daa
sahf
ss
fistpll
aas
lods
mov
add
cmp
pop
aas
shll
xchg
add
fwait
pushw
sub
xor
and
mov
xorl
test
mov
jo
sahf
fdivs
loope
stc
aad
bound
jbe
xchg
dec
addl
push
cmp
push
xlat
mov
fsubrp
scas
dec
test
in
rolb
insl
ret
cmp
imul
inc
addr16
push
fcomps
dec
aas
xlat
aad
add
jno
faddp
pop
jl
cmp
cmp
test
enter
adc
inc
sahf
enter
mov
movsb
mov
push
cmp
sti
aad
roll
cmp
push
jno
mov
cmp
dec
and
add
jo
sbb
pop
mov
sub
pop
stos
sbb
fstps
std
lock
mov
mov
adc
mov
call
push
call
push
xlat
cmp
jns
xor
pop
mov
cmp
test
mov
xor
adc
mov
dec
repz
cltd
add
fnstenv
xor
xor
jnp
adc
sub
dec
stos
mov
das
adc
adc
repz
scas
negw
repnz
sub
push
loope
mov
push
ds
rcrb
push
dec
in
xlat
jecxz
pop
xchg
cmp
addl
sub
stc
pop
push
leave
or
iret
push
ljmp
fisttpl
push
negl
jle
xor
out
int3
scas
cmpsl
mov
insb
repz
cs
test
lock
jp
repnz
fs
xchg
imul
mov
pop
roll
daa
sbb
iret
loopne
lods
sub
pop
int
mov
add
int
adc
adc
movsl
jb
gs
xchg
pop
jmp
inc
mov
out
in
sbb
inc
jle
sbb
sub
mov
cmp
ficompl
stos
xor
xor
xor
or
std
jle
mov
int3
clc
dec
mov
jmp
xchg
pop
mov
lret
test
jp
fsubl
mov
in
sub
fwait
xchg
mov
insl
loopne
inc
jb
fcmovnb
xor
test
outsl
iret
shl
aad
add
inc
cmp
cmpsl
imul
push
and
frstor
popa
push
insb
xorl
shl
and
fldenv
jecxz
cmp
cmp
fildl
sti
dec
sar
aaa
xchg
imul
cwtl
xchg
mov
cmp
pusha
or
sbb
arpl
push
mov
lods
xor
popf
int
adc
xor
push
sub
daa
fisubs
sub
and
out
mov
test
jne
decb
adc
dec
add
lret
stc
aad
cwtl
cld
out
sbb
push
jp
adc
sbb
out
sbb
xor
fdivl
int
in
enter
dec
addl
xor
adc
test
loope
mov
ja
movsl
dec
xor
mov
lret
inc
pushf
pop
push
or
cld
xchg
iret
mov
fnstcw
cmp
punpcklwd
test
lcall
aad
sbb
mov
test
xchg
jb
loopne
dec
push
dec
cmp
pop
decl
es
cltd
inc
jne
jae
aam
into
mov
pop
addr16
fcmovne
data16
leave
divb
ja
mov
pop
xchg
xor
lahf
cmp
aam
pushf
ljmp
rolb
mov
fisubrs
ja
push
jne
cmp
push
and
out
and
cmp
idiv
cmp
fadds
pop
test
aas
pop
and
push
lret
mov
lock
lds
es
aaa
xlat
mov
fwait
in
pushf
les
inc
mov
pop
sbb
daa
mov
jno
fldl
arpl
mov
mov
inc
in
lcall
lret
mov
test
jp
inc
xchg
mov
push
sub
xchg
gs
je
sbb
insb
roll
es
pop
insb
push
jg
pop
push
ror
lock
fiadds
cltd
ja
cmpl
outsb
ds
and
xor
fnstcw
data16
cmp
ds
js
js
adc
scas
stos
testl
adc
sti
xor
cmp
lds
cmp
js
int
inc
jg
pop
notl
iret
adc
push
shll
adc
mov
imul
popa
xor
jge
add
pop
icebp
loopne
fisubs
int
gs
dec
sub
lret
jg
pop
pusha
and
stos
rcll
or
inc
or
cli
push
pop
adc
ss
xor
or
arpl
pop
rclb
fidivl
add
inc
movsl
jbe
scas
mov
scas
push
cwtl
lock
push
out
cmpsb
sbb
or
cmpsl
sub
jp
lods
adc
sbb
dec
test
lods
mov
inc
pop
or
nop
insl
loop
and
push
stos
inc
or
in
fisubrs
lods
in
xor
test
aam
repz
adc
cmp
and
add
inc
xchg
in
sar
xor
pop
inc
and
dec
insb
inc
out
inc
or
daa
pop
sub
je
xchg
xchg
jg
push
cli
rolb
jns
sub
mov
adc
dec
mov
ljmp
in
popf
insb
xor
cwtl
or
in
es
xchg
xchg
aas
out
sbb
or
test
stos
icebp
xorb
jmp
dec
push
aas
stos
inc
xor
movl
jae
cmp
add
sbb
inc
outsl
out
data16
cmp
xor
mov
mov
fs
sub
cmp
push
jle
mov
and
or
mov
movb
xor
ret
xadd
jnp
jo
mov
cmp
inc
pop
pop
pop
push
lock
inc
ret
loopne
add
pop
mov
push
imul
xchg
or
inc
loopne
lock
cmp
mov
rolb
test
and
push
cmp
dec
jmp
in
mov
out
out
data16
lea
sub
jp
xlat
movsl
xchg
jp
inc
loop
or
in
sub
loop
ret
add
daa
mov
xlat
mov
sub
mov
popf
cs
subb
lret
mov
xchg
lahf
jge
dec
mov
sbb
fs
rolb
mov
fs
imul
fstpt
fnstsw
jns
aad
mov
push
add
nop
popf
pop
stc
pop
dec
scas
fwait
outsb
xor
mov
das
leave
xchg
xor
mov
adc
inc
add
jecxz
sbb
xchg
mov
mov
jle
sub
cmp
mov
lock
scas
insl
insb
out
pop
mov
in
sub
into
jl
repnz
aad
leave
xchg
shrl
sbb
lret
aas
pop
test
cmp
push
iret
inc
cmp
xchg
mov
add
mov
xor
int3
ds
scas
mov
jbe
in
testb
push
mov
cmp
cmpsl
lods
mov
out
sbb
mov
mov
sarb
adc
xor
outsl
and
mov
and
sub
js
negl
and
loopne
sbb
shrb
outsl
hlt
push
dec
xchg
fwait
push
insb
in
out
dec
fwait
cltd
inc
loopne
movsb
clc
xorl
sahf
stos
add
adc
push
stos
jmp
inc
push
mov
cmp
lahf
inc
or
pop
xchg
sub
or
jne
lret
xchg
jb
xor
mov
out
pop
out
leave
dec
jge
insb
iret
mov
test
jge
je
add
pusha
sbb
sbb
mov
sub
push
ds
inc
mov
scas
push
fwait
adc
arpl
mov
push
and
test
pusha
or
aam
and
sub
pushf
push
fidivrl
ficomps
mov
or
cmp
jns
stos
outsl
cmp
mov
mov
cmp
imul
fcomps
loop
sub
xchg
orb
adc
inc
cmpsl
xor
insl
lcall
mov
test
test
inc
cli
jno
cmp
push
sub
or
imul
andb
cmp
loope
imul
adc
mov
adc
imul
xchg
dec
mov
in
jae
cld
arpl
mov
xchg
push
adc
xor
inc
inc
dec
lds
inc
aad
add
add
pushf
or
cld
test
or
aas
add
add
push
push
mov
lahf
push
pop
cli
xor
sar
mov
cli
stos
shlb
add
mov
cmpsb
inc
jp
cwtl
popa
ret
adc
rcll
add
pop
pushf
dec
mov
addr16
lret
cmc
jp
sbb
cmpsl
rclb
xchg
mov
nop
repnz
lcall
outsb
scas
bound
mov
bound
push
lods
push
bound
push
sub
cmp
sub
rcrl
inc
jne
sbb
ret
jmp
sti
popf
shrb
lret
xor
fisubl
or
mov
mov
dec
mov
pop
data16
and
xor
mov
push
cmp
cs
orl
sti
mov
sub
gs
cmpb
fcmove
popf
hlt
mov
push
aas
lods
sbb
adc
sar
mov
stos
lcall
adc
mov
pop
and
mov
mov
rcl
push
push
test
inc
pop
inc
jp
push
or
adc
push
nop
loope
mov
and
movsb
xchg
cli
mov
adc
mov
lods
mov
adc
adc
rcll
mov
pop
xchg
jo
leave
sahf
sub
cmc
cmp
sbb
dec
push
loopne
fs
imul
mov
mov
loope
inc
popf
inc
in
push
loop
les
mov
div
call
loopne
ret
push
cli
inc
add
adc
jnp
enter
xor
xchg
xor
mov
sub
js
loopne
insb
cmc
imul
dec
pusha
notl
daa
ret
jl
outsb
test
cltd
sbb
cmp
dec
or
cwtl
push
iret
jb
cmp
xor
aaa
cmp
gs
xchg
pop
in
mov
and
and
push
out
lds
sbb
add
dec
sbb
stos
out
inc
sbb
adc
hlt
jns
mov
jbe
jnp
test
aad
out
daa
repz
mov
scas
and
cmp
jno
lods
in
sub
imul
sbb
xchg
and
sbb
ret
mov
cmp
arpl
into
sub
mov
mov
cmp
dec
mov
cltd
in
jge
push
cmp
out
outsb
in
adc
push
sbb
mov
gs
jns
add
cmp
shrl
decl
std
adc
cmp
jns
mov
add
iret
sub
popf
mov
clc
pop
add
or
jecxz
outsl
inc
es
repnz
in
ljmp
or
inc
call
cmpsb
sbb
testb
push
js
or
movsl
ret
out
and
ffreep
adc
rol
xchg
in
jne
sub
mov
sub
sbb
push
testl
pop
xchg
push
dec
imull
xchg
or
mov
push
push
fimuls
nop
dec
add
add
adc
adc
xchg
push
mov
int3
mov
jne
adcl
out
stos
sbb
imul
jns
out
xchg
fisubrs
shlb
jo
inc
pop
fnstenv
jne
into
or
jbe
mov
sub
subl
mov
insl
fs
mov
add
mov
and
outsl
add
xorl
add
adc
fidivrs
jmp
push
test
push
jg
cltd
mov
outsl
sbb
popa
push
imul
dec
xchg
int3
fisttps
mov
xchg
popf
hlt
push
mov
popf
mov
scas
push
sbb
pop
pop
jecxz
sbb
lea
inc
mov
push
fwait
stos
pop
adc
inc
fwait
mov
mov
push
mov
lock
pop
out
sub
mov
pop
movsb
aad
call
data16
push
add
aas
cmc
inc
jmp
lods
and
xchg
enter
sub
fldcw
xor
pop
cmp
dec
jne
xchg
in
inc
xor
sbb
xchg
and
insl
adc
pop
sbb
add
push
insl
aaa
das
lahf
outsb
lcall
mov
rcll
sub
andl
pop
mov
insl
adc
stos
outsl
inc
fwait
insl
mov
popa
pop
les
mov
fisubs
dec
and
xchg
xor
pop
inc
cmpsl
xor
mov
adc
mov
xchg
shll
xor
adc
sbbb
aas
aas
test
inc
int
mov
dec
fiadds
sahf
inc
lahf
fwait
sub
dec
jae
add
insb
das
insl
inc
cwtl
addr16
decb
jl
es
in
mov
or
mov
imul
add
inc
mov
ljmp
lock
outsb
fisubs
add
enter
repz
push
fcompl
scas
das
bswap
fistps
rol
pusha
pushf
sbb
lods
lods
inc
sarl
jno
leave
xchg
add
rcl
cmp
fdivp
adcb
std
mov
jno
jo
pop
ficoms
stc
mov
and
or
mov
pop
xchg
and
leave
stc
test
adc
mov
mov
jns
xor
scas
push
push
aad
mov
pop
mov
push
mov
fs
sub
cmp
push
and
sub
and
leave
pop
pop
add
repnz
icebp
call
fwait
test
inc
xchg
push
in
cli
sbb
add
add
and
rcrl
jp
mov
or
lahf
push
adc
and
fstpl
out
add
icebp
insb
in
push
cli
push
loop
mov
push
dec
dec
ret
rorb
popa
pop
pop
enter
shl
xor
dec
mov
sub
idivb
xchg
negl
imul
int
icebp
mov
inc
adc
cs
jno
cld
inc
test
les
pop
mov
mov
out
xchg
scas
stos
mov
push
fwait
insb
enter
pushf
imull
mov
push
jae
ret
clc
jbe
or
xchg
push
or
pop
jmp
dec
hlt
into
mov
out
inc
xor
jmpw
add
xchg
pop
mov
pusha
das
xor
aas
bound
push
adc
push
mov
adc
lret
pop
das
out
ss
clc
cmc
daa
sub
xor
lcall
lahf
cli
pusha
lcall
jge
lcall
mov
add
dec
test
pushf
dec
cwtl
jo
cld
shrl
xchg
cmpsl
mov
ljmp
sahf
sbb
or
loope
sub
imul
lret
add
test
insl
mov
stos
sub
xchg
jg
cmpsl
mov
arpl
aam
mov
mov
and
push
jnp,pt
icebp
jl
data16
loop
and
push
je
ret
xchg
add
pop
add
push
jnp
dec
xchg
and
add
mov
pop
adc
je
mov
cld
mov
mov
mov
xor
xchg
imul
push
inc
mov
loopne
fisubrl
cmpsl
loope
add
push
mov
jmp
mov
add
xchg
insl
push
xchg
mov
mov
lock
adc
add
push
mov
or
jns
ret
ja
push
in
cmpsl
cltd
lods
sbb
std
xlat
mov
ss
sahf
lret
popa
fxch
mov
arpl
pushf
sti
cwtl
xor
add
test
cmpl
lea
mov
scas
mov
in
xor
dec
mov
cmpb
mov
es
pusha
int
fimull
or
cmp
jae
or
fdivs
mov
jno
cmp
adc
jg
mov
lock
sar
cmp
or
xchg
fadd
push
outsb
pop
test
das
push
mov
adc
jnp
das
leave
mov
sbb
cmp
mov
or
inc
movntq
aas
sbb
imul
mov
xor
or
into
mov
dec
jmp
insb
push
sub
inc
push
or
mov
cmpsl
push
jg
cmp
repnz
and
rolb
pop
xchg
fsubs
jl
rol
cmp
test
adc
jae
lds
outsl
xchg
jle
adc
cmp
sbb
fnsave
lcall
cs
les
cs
mov
test
mov
lret
add
dec
or
push
inc
shll
dec
mov
push
adc
mov
les
sbb
jne
dec
sbb
mov
das
pop
xchg
and
ret
outsl
mov
jns
add
mov
ret
pop
mov
and
or
jbe
push
mov
sub
mov
jbe
cmp
cmp
mov
mov
inc
sbb
jle
adc
cld
add
jp
mov
sbb
enter
sbb
jmp
sbb
aas
xchg
xor
repz
cli
pop
mov
push
mov
les
mov
or
cmp
mov
xor
pop
je
dec
lea
je
push
xor
loop
out
dec
inc
cmp
pop
dec
mov
adc
cmp
xchg
sub
mov
int
cli
call
or
aam
aam
pusha
push
xchg
fstps
fsts
insb
repz
add
sub
xor
xor
cli
jge
mov
push
je
pop
adc
cmp
mov
xchg
dec
test
or
push
lret
imul
pop
outsl
jge
cwtl
psubw
adc
es
fwait
negl
push
icebp
imul
aas
inc
cmpsl
mov
addr16
inc
mov
subb
jo
adc
mov
data16
leave
int
dec
mov
repnz
les
fidivs
outsl
mov
mov
std
mov
jbe
pop
pop
inc
cmp
add
add
lods
xchg
aaa
push
movsb
or
push
dec
jmp
xor
sbb
jnp
fs
sbb
inc
movsb
cwtl
lods
loopne
push
test
js
lock
ret
int
xor
dec
outsl
xchg
sbb
js
aas
int3
lds
cmp
repz
xor
cmp
pop
cld
lret
mov
inc
repnz
add
pop
leave
jmp
push
cs
xchg
push
sub
mov
sub
ret
fmull
or
test
fstpt
push
ja
xor
xorb
inc
and
jnp
int3
inc
call
loop
dec
pop
jo
jae
in
flds
or
je
mov
loopne
xor
mov
lds
imul
sbb
lds
mov
shll
test
pop
call
je
mov
loope
fadd
aad
fistpll
adc
les
inc
das
or
or
mov
dec
cli
push
testb
call
push
sbb
dec
dec
movsl
fwait
hlt
push
fstps
inc
es
mov
fimull
mov
pop
pop
loopne
add
imul
xchg
cmp
clc
adc
outsl
mov
push
push
fsubr
and
lahf
jbe
push
adc
cmp
fs
aaa
imul
lret
imulb
cmpsb
sub
mov
mov
clc
mov
sbb
sub
jp
sbb
xor
adc
bound
sub
ja
xor
addr16
mov
rcll
dec
outsb
roll
lret
sub
fistl
xor
jno
andl
sarb
iret
testl
xor
xor
mov
leave
mov
ret
int3
dec
lahf
sub
mov
fldl
into
jg
adc
pop
test
mov
cmc
cmp
mov
mov
cmp
jmp
or
push
imul
mov
sbb
fcoms
jmp
push
pop
in
je
ds
push
sub
jmp
xchg
loop
js
shr
lret
leave
mov
fistl
jne
and
int
push
mov
sub
cltd
fmuls
nop
jb
xlat
sbb
aas
movsl
mov
lds
aaa
mov
push
sub
daa
int
in
mov
xor
mov
shr
mov
dec
lods
mov
adc
jne
mov
addr16
insl
cld
cmp
xchg
in
add
in
sar
test
xchg
jmp
out
jmp
dec
adc
lahf
sbb
in
movsb
pop
pop
inc
jmp
add
sahf
jl
mov
aas
cld
scas
inc
xorl
imul
cmovno
push
lret
stc
mov
dec
mov
pop
test
ficoms
xor
jo
xchg
mov
lahf
xchg
cmpsb
scas
lods
xor
mov
add
out
movsl
das
lods
mov
sub
cmpsl
lret
enter
xchg
sar
pop
push
lcall
test
dec
out
jmp
faddp
and
xor
in
dec
into
cltd
test
ret
dec
pusha
add
fsubl
dec
xor
cld
mov
and
inc
cmp
ret
jbe
cmc
sub
mov
ret
cltd
bound
cmp
push
lret
mov
loop
popa
fs
loop
push
jl
add
push
dec
hlt
adc
mov
mov
imul
sub
je
sbbb
addl
outsb
call
ljmp
mov
push
mov
rcrl
sub
into
add
jge
sub
dec
pop
mov
mov
pusha
dec
xor
cmp
lea
adc
imul
or
jmp
adc
inc
gs
or
mov
fimull
or
addb
adc
insb
sbb
in
sub
and
fwait
outsl
mov
inc
ljmp
jns
dec
sahf
movsl
sub
or
iret
dec
fldt
jmp
pusha
int3
and
add
data16
in
or
push
in
frndint
add
sbb
outsl
arpl
rcrb
xor
and
test
or
adc
lds
cmp
jmp
iret
or
cltd
dec
jg
lret
test
push
movsl
icebp
cli
aad
ss
push
or
add
hlt
das
xchg
push
adc
cmp
and
jle
subl
sahf
rcr
arpl
jno
arpl
imul
in
cmpsb
call
inc
gs
int
inc
ret
push
mov
std
int3
xchg
ljmp
mov
imulb
and
leave
pop
lahf
repnz
or
xlat
out
std
cmc
fldenv
adc
pop
js
mov
mov
ret
hlt
imul
mov
jbe
xor
cld
push
je
jbe
lret
ja
fcmovnu
jp
push
imul
rcr
pusha
sub
pop
mov
sub
jle
adc
cmp
lahf
cld
imul
mov
sub
repz
mov
lret
imul
add
push
sarb
or
iret
pop
xchg
add
sbb
cwtl
nop
pop
push
aam
loope
cmp
fs
sub
push
push
xor
enter
in
lock
push
mov
mov
in
int3
les
les
sbb
or
fsts
in
pop
mov
or
lret
in
insb
mov
mov
out
lea
mov
adc
negb
xor
aas
in
adc
cmp
pop
mov
add
cmp
test
pop
mov
xor
cltd
bound
fs
jle,pt
ds
push
mov
mov
push
sbb
mov
sbb
mov
inc
push
pop
pop
frstor
dec
pop
pop
gs
inc
aad
mov
fs
mov
jg
test
es
mov
aad
movsl
div
jns
stos
push
imul
or
jg
jmp
dec
test
cwtl
pusha
stos
sahf
and
mov
mov
jo
addr16
cmp
adc
stos
inc
mov
imul
adc
sarl
ds
and
adc
sub
pop
scas
sub
shlb
pop
jns
ljmp
xor
mov
inc
sbb
inc
das
in
mov
test
rorb
stos
and
aas
adc
add
jge
push
mov
leave
in
pop
ja
imul
ljmp
and
or
rcll
xchg
cmpl
enter
aaa
aam
pop
cs
loop
sbb
test
jae
inc
aad
or
call
inc
hlt
popf
rorl
xorl
cmpsb
jle
pop
xor
xor
ret
les
insb
mov
insl
jns
shrb
fdivl
into
mov
mov
or
dec
mov
xchg
cli
mov
mov
mov
jns
add
lcall
aam
ret
mov
push
sub
fnstenv
mov
xchg
aad
jle
jl
push
pop
xchg
xor
fbstp
idivb
subl
dec
sub
ret
les
cmpl
shll
aam
add
inc
inc
leave
fisttpl
xor
xor
xor
fsub
sbb
shll
in
mov
xor
nop
aas
mov
dec
sbb
jl
imul
adc
cltd
sbb
add
add
arpl
movsb
sub
and
insb
xchg
enter
lret
aad
adc
test
icebp
lods
xor
xor
lods
push
adc
and
sub
mov
stc
mov
jl
jp
cmp
jnp
xor
xor
push
mov
pop
dec
pop
add
and
idivl
fnsave
fcmovne
and
into
call
lods
jb
aam
popa
out
enter
nop
mov
or
shll
dec
cmp
or
cmpsb
jo
mov
ljmp
fwait
mov
fwait
repnz
sub
jle
inc
test
nop
pop
mov
adc
cmp
mov
jno
insb
cld
jno
pop
mov
xchg
dec
shrb
shr
mov
pop
cli
and
pop
shl
divb
ljmp
dec
and
cmc
xor
adc
inc
andl
ja
fadd
mov
test
mov
and
pop
jmp
mov
fnstenv
or
lret
mov
sbb
mov
push
das
rcll
mov
xor
ret
mov
pop
pop
addr16
push
dec
push
mov
adc
add
repz
loop
lock
pusha
pop
mov
nop
push
xor
test
mov
daa
repz
push
addr16
cmp
sbb
daa
outsb
pop
cltd
int3
cld
ret
and
or
push
mul
push
int3
mov
mov
fdivl
js
out
xchg
data16
jp
aad
filds
jmp
fdivrs
inc
lods
cs
adc
inc
xor
jae
inc
jl
test
mov
fucomip
pop
pop
xchg
fidivrl
and
mov
mov
mov
inc
adc
std
loope
loopne
sbbl
out
ficoms
je
jnp,pt
sub
xchg
sti
mov
les
fnsave
mov
out
lods
dec
loope
pop
pop
test
inc
idivb
push
push
and
xchg
push
xchg
lcall
daa
repnz
fwait
xor
sbb
jmp
xchg
mov
ja
and
cmpsb
mov
ss
and
jecxz
pop
or
fisttpl
xchg
or
sbb
jbe
mov
fisttps
dec
fsts
daa
push
mov
dec
out
adc
aaa
and
mov
jno
js
sub
mov
imul
adc
arpl
and
sub
fwait
push
aad
dec
ss
repnz
js
jl
in
outsl
testl
movsl
into
fnsave
adc
adcb
iret
inc
dec
popa
and
dec
dec
mov
and
aas
push
push
in
sbb
idivl
push
mov
sub
sahf
out
dec
nop
es
stos
ret
add
imul
jno
pop
out
xor
jg
xchg
repz
cmp
mov
sbb
mov
sub
pop
xor
sbb
mov
push
mov
enter
hlt
jp
push
js
or
mov
cmc
mov
cltd
push
in
sbb
or
stc
ret
jecxz
xor
dec
shlb
push
xchg
sbb
xor
mov
bound
pop
mov
sbb
repz
decb
sbb
pop
jl
icebp
jge
cltd
adc
inc
addr16
mov
push
fcomip
xor
loopne
or
cs
jmp
sbb
cmp
imul
in
cmc
jb
nopl
mov
ss
aaa
adc
addr16
mov
dec
cmc
inc
jns
xchg
insb
adc
mov
in
jo
cmpsl
mov
fisttpl
nop
int
shll
ljmp
push
mov
push
cmp
jmp
movsb
iret
in
push
cmpsb
cmp
clc
jl
dec
in
pop
push
mov
popf
loope
mov
add
add
fldcw
xor
jno
out
dec
or
sbb
shrl
xor
clc
clc
lds
and
fmull
js
movaps
jae
in
push
into
imul
jmp
insb
in
xchg
mov
or
mov
icebp
fstl
lret
ret
hlt
gs
decb
gs
in
jle
sbb
push
or
ss
pop
push
stos
inc
mov
sub
test
dec
mull
test
sbb
mov
dec
sbb
test
cmp
jg
xor
sub
push
push
or
daa
cmp
lock
cmp
lcall
lret
xor
insb
mov
xor
push
jbe
mov
mulb
xchg
mov
fsubr
mov
and
push
jne
jg
adc
sub
inc
push
pop
dec
sub
add
xchg
in
sbb
or
into
push
cmp
ss
xchg
or
push
imul
fstl
dec
or
mov
loope
xor
shr
and
xchg
ret
aaa
sub
jecxz
stos
sbb
lret
sub
sahf
cs
sub
lock
jle
sub
push
addr16
lds
and
cmpsw
mov
mov
and
dec
fninit
mov
jnp
sub
push
cli
rorb
cmc
lods
mov
repnz
outsl
cmp
push
jg
xchg
iret
mov
jno
inc
in
stc
inc
xor
sbb
in
add
jg
lahf
arpl
sahf
test
wrmsr
inc
lea
xchg
mov
xor
add
je
push
lcall
in
jg
xchg
mov
xchg
idivl
test
outsb
adc
push
pop
sub
out
insl
xchg
dec
movsl
jl
dec
mov
out
push
jecxz
lods
jle
in
out
repnz
sub
xchg
mov
xor
lods
aad
loop
pusha
test
adc
xchg
dec
xor
int
push
sbb
mov
adc
or
jmp
xchg
xor
imul
pavgusb
adc
mov
imul
int3
mov
pusha
popf
adc
push
test
test
lds
sub
fwait
xor
nop
sub
ss
fidivrs
filds
sub
ja
mov
cwtl
sahf
mov
xchg
lret
out
mov
mov
fwait
pop
sub
mov
mov
shl
push
jmp
jnp
xlat
lds
cmp
xchg
sbb
cli
mov
outsb
ds
movsl
shlb
xchg
cltd
sub
pop
sbb
mov
cli
imul
dec
push
cmpsl
loopne
adc
lcall
sub
push
lods
xchg
sbb
dec
lahf
push
out
test
lock
push
cltd
push
fistl
and
lahf
push
inc
sub
inc
push
inc
push
es
into
aad
fisttpl
xor
cltd
push
movsl
mov
mov
add
movsb
test
bswap
fwait
jnp
and
mov
sbb
and
xlat
mov
pop
sub
js
mov
test
into
out
call
mov
jbe
icebp
fidivs
or
sub
adcb
sub
mov
lahf
nop
push
popf
mov
push
push
arpl
inc
stos
stos
adc
sti
pop
movsl
mov
push
push
push
pop
add
mov
cmp
sahf
sti
adc
out
mov
xchg
int3
lock
push
faddl
xchg
fwait
dec
sbb
icebp
andb
xor
jl
jne
test
adc
add
sub
add
adcl
lea
dec
bound
push
test
dec
xchg
sub
dec
and
dec
sti
dec
ret
inc
or
sbb
mov
sub
pop
out
cmpl
std
es
xchg
xchg
pop
mov
push
cmp
mov
pusha
repnz
out
lcall
xchg
movsb
cmp
cmpl
dec
je
test
inc
jb
xchg
arpl
xchg
inc
fs
inc
clc
faddl
dec
push
jle
repz
imul
data16
out
inc
ret
xor
cmp
mov
sbb
mov
add
jb
mov
leave
aad
mov
or
lcall
mov
in
daa
cmp
js
mov
ja
pop
pop
ror
pop
fdivr
outsl
xchg
xchg
fwait
cld
push
das
orb
jo
sub
jae
mov
dec
pop
mov
fcompl
out
cld
xchg
hlt
es
xor
inc
shlb
or
gs
push
cmc
mov
ficoml
lods
mov
push
loopne
loope
jp
cmpsb
inc
inc
xchg
pop
jo
repz
movsl
and
push
fsubrl
je
xor
mov
std
jle
outsb
xor
loope
imul
hlt
sub
gs
or
popa
mov
sbb
jmp
mov
dec
and
stos
add
jb
js
loope
inc
mov
nop
aad
dec
popf
xorl
sbb
pusha
push
push
imul
out
cmp
or
or
mov
add
shll
in
mov
stos
push
bound
or
sub
mov
leave
adc
push
pop
lock
shlb
pop
or
mov
jl
fdivrs
jg
data16
push
push
jae
xor
jge
out
xlat
mov
out
sub
push
xor
push
stos
xchg
pop
cmc
lods
out
cmc
inc
mov
jne
aas
mov
out
js
cld
aas
out
adcl
mov
frstor
adc
testb
dec
stos
jne
or
sarl
sub
jle
icebp
jnp
out
or
stos
fcmovnbe
inc
add
jae
lods
sub
pop
pop
les
ret
dec
sub
sahf
ljmp
addl
mov
mov
xlat
xchg
or
in
pop
adc
out
hlt
daa
lods
sbb
in
push
out
clc
add
lds
rcr
inc
xchg
divb
scas
fiaddl
insb
fidivrs
leave
add
sub
sub
jecxz
in
xor
jg
push
scas
xor
js
js
add
cmp
sbb
mov
mov
xlat
ds
mov
shlb
jae
ret
mov
loope
add
push
and
iret
jl
mov
ret
push
dec
shlb
aam
and
pop
subl
push
nop
hlt
fcoms
mov
iret
sbb
rcr
lods
lods
aam
bound
insb
jae
inc
mov
sbb
fmull
in
adc
ljmp
pop
add
or
mov
mov
fld
add
push
dec
inc
ret
jb
mov
ljmp
cmp
aad
jb,pn
stc
cmpsb
dec
lret
mov
add
sahf
jns
xchg
fists
mov
popf
add
test
and
cmpsb
push
js
adc
inc
and
adc
xchg
mov
inc
aam
imul
xchg
in
pop
adc
push
pusha
cmpsb
ror
mov
mov
call
cmp
outsl
test
add
ret
xor
lea
mov
mov
in
imul
mov
cmpb
loope
cld
mov
push
sbb
cmp
cmp
testb
dec
lret
inc
add
xlat
jbe
mov
xor
int
bound
push
mov
loop
imull
loop
mov
push
cmpsb
lret
jge
aas
cwtl
add
in
dec
xchg
sbb
push
pop
inc
mov
out
imul
outsb
ss
jp
mov
sbb
ror
in
mov
lods
scas
fcoms
daa
sahf
push
shlb
sarl
popa
dec
stos
mov
and
outsb
mov
cmp
and
cs
sbb
push
sahf
popf
mov
xchg
cmpl
test
and
xor
jg
stc
mov
mov
inc
insb
fmul
bound
fidivl
cli
cmp
out
dec
xlat
mov
icebp
dec
mov
in
xor
jge
aam
mov
test
cmpsb
pusha
sub
sbb
sub
test
iret
int
add
sub
sbbb
xchg
sub
xchg
dec
in
ds
inc
mov
fisubrs
mov
fnstsw
out
and
pop
aam
loopne
loop
inc
lods
scas
movsl
out
lods
and
and
mov
or
and
lock
dec
rcrl
pop
mov
es
mov
cmp
std
jp
insl
int3
dec
lcall
insb
andb
or
pop
adc
cld
pusha
je
test
repnz
je
adc
icebp
sti
mov
cmp
in
xchg
popa
out
pusha
jecxz
fsts
divl
push
mov
repnz
mov
sti
sub
ror
adc
add
data16
ret
cld
faddp
adc
je
dec
xor
subb
push
lods
cmpsb
test
sbb
inc
fidivl
mov
pop
ljmp
movsb
in
aad
mov
test
push
xchg
dec
rorb
ljmp
xor
xchg
repnz
dec
imull
push
pop
fisubrs
or
dec
mov
and
enter
je
dec
bts
jle
dec
jns
lods
mov
jnp
push
or
cmp
xor
jns
ror
rclb
add
insb
outsb
jns
dec
mov
sbb
sbb
jmp
fstp
std
test
add
sbb
pop
mov
adc
rorl
mov
call
cmp
fwait
add
cwtl
fnsave
shrb
aad
fildll
enter
jmp
imul
icebp
arpl
jge
lods
xchg
sbb
mov
jb
sub
cs
adcb
jb
xchg
inc
ret
xchg
add
cmp
bound
jmp
movsl
push
push
xchg
mov
loopne
or
cli
in
int3
push
sub
test
loopne
push
je
cmc
mov
adc
imul
scas
in
xchg
in
sub
sti
and
sub
loopne
pop
or
das
adc
push
lods
jnp
ds
outsl
out
cli
inc
sbb
sub
sbb
lahf
mov
push
repz
push
adc
jns
xchg
add
sbbb
cli
or
mov
das
push
testb
stos
lods
ds
movsl
aas
cmp
into
test
sbb
daa
in
mov
ret
les
aas
jbe
sbb
push
and
popa
lock
jp
adcb
lea
outsb
jb
dec
jno
movsl
pushf
imul
cmp
mov
test
and
mov
push
nop
pop
loop
cmpsb
push
and
and
ret
loopne
subl
stc
in
xor
pop
mov
xchg
jno
cmp
cmpsb
bnd
aad
push
nop
lods
aad
add
je
shlb
xchg
pop
das
das
mov
add
adc
mov
pop
lods
es
rcll
xchg
cltd
mov
addr16
push
mov
lods
fisubrs
inc
data16
pop
repnz
push
loope
push
mov
sbb
andb
ds
lods
cmp
adc
ljmp
jns
or
rcr
mov
shll
inc
or
sti
stc
repz
sub
inc
lret
les
movsl
xchg
push
xor
and
scas
fldcw
outsb
inc
insb
fstl
stos
fimull
test
pop
mov
fcoml
cmpsb
dec
stos
mov
outsb
pop
adc
aad
cmpl
mov
rorb
ljmp
lds
fildll
repnz
inc
xchg
inc
outsb
les
jge
mov
ljmp
xor
lcall
cmp
or
cmpsb
aad
rcll
mov
mov
test
dec
jne
call
loopne
fs
mov
fidivrl
xchg
cmp
jg
popf
jge
out
leave
es
pop
rcrb
sbb
std
push
cs
lea
xchg
test
mov
sub
icebp
lds
xchg
dec
mov
daa
ret
leave
jne
mov
inc
sub
jb
imul
cmp
test
sbb
adc
dec
mov
cwtl
dec
jge
pop
cs
cmp
shll
std
push
adc
and
and
cmp
push
push
inc
pop
push
ds
pushf
mov
xor
sub
movsl
xchg
xor
push
rorb
sti
add
jnp
pop
outsl
sub
xorl
arpl
cmp
js
arpl
cmp
inc
inc
push
cmpsb
pushf
jl
push
lahf
pop
mov
pop
xor
adcb
add
or
iret
fsubrs
or
cmpsb
or
shlb
lods
mov
outsl
imull
jmp
mov
pusha
sbb
mov
sbb
popa
mov
dec
xor
into
sub
xor
aas
dec
dec
inc
rclb
fsubs
adc
lods
jbe
pop
dec
clc
jle
dec
xchg
and
adc
xor
insl
js
mov
pop
sub
inc
sbb
mov
movsb
jmp
flds
aaa
adc
adc
je
jp
movsl
push
lods
outsl
rcrl
jne
pop
lds
es
inc
repz
repnz
jmp
cmp
add
sub
or
add
loope
xchg
mov
xchg
test
add
add
ds
ljmp
iret
inc
fmull
lods
jbe
cmp
loop
in
xor
inc
mov
cmp
mov
mov
js
and
mov
adc
jle
outsl
shrd
in
jbe
mov
or
add
stos
loopne
pop
sar
pop
and
push
lret
inc
loop
or
jbe
sti
testb
mov
mov
int3
mov
xchg
pop
pusha
sub
int
jmp
push
iret
mov
push
sbb
dec
jno
sbb
lock
clc
je
xchg
sti
dec
inc
psadbw
jae
movsb
sub
std
mov
dec
imul
fcoms
shrb
xor
shll
mov
push
pop
or
add
in
xchg
xor
adcl
jg
lock
inc
push
repnz
mov
mov
mov
mov
push
lret
stos
jl
lret
mov
dec
cltd
jle
mov
xor
sarb
xor
sti
add
sbb
pop
jnp
dec
stc
ret
lds
or
push
out
pop
arpl
lret
ja
sbb
add
mov
sbb
sub
nop
inc
loopne
xchg
and
loopne
popf
cmpsl
pushf
inc
mov
in
out
lret
stc
fistps
pop
iret
jle
push
mov
jb
dec
jb
pusha
mov
fmuls
cmp
xchg
leave
jb
enter
dec
dec
cmpsb
out
mov
mov
cmp
lods
push
stos
test
cmp
mov
filds
out
jno
int
addr16
aaa
pop
add
sarb
stos
rcrb
add
sbb
pop
lcall
cld
jg
push
push
inc
mov
dec
pop
into
pop
mov
jb
enter
ficoms
and
outsl
lcall
idivb
aas
in
in
mov
cltd
mov
fsts
pushf
xor
mov
pop
imul
add
mov
mov
jp
jecxz
adc
mov
mov
mov
test
pop
jb
add
int
insl
out
stos
in
fiadds
sbb
xchg
icebp
push
lret
out
shl
les
das
sub
mov
push
shll
int
imul
mov
orl
mov
enter
jmp
ljmp
mov
icebp
shl
es
mov
das
ret
sub
mov
adc
jae
mov
jns
lods
or
fidivs
push
jo
sub
pop
insb
cld
imul
fs
push
cmc
imul
lcall
and
add
fnstenv
lahf
mov
xor
cmp
ds
lret
leave
mov
mov
xor
or
mull
addl
in
fdivs
or
mov
adc
stc
loope
movsb
pop
push
xor
in
xor
jae
movsl
es
xlat
xor
popa
sub
mulb
dec
repnz
movsb
pop
push
mov
fmull
adc
test
hlt
mov
popl
xlat
fcomps
mov
adc
nop
push
aaa
in
jp
test
gs
cmpsl
leave
sub
add
fdivrs
rcrb
cmpsl
jmp
in
xor
push
mov
jle
jle
stos
outsb
xchg
push
xchg
jg
push
cs
ret
fistps
jp
mov
stc
inc
push
cmc
test
or
dec
aaa
pop
push
push
add
push
repnz
jo
aam
lods
xchg
sub
imul
inc
mov
filds
lods
sub
sub
or
stos
and
fsubs
std
mov
dec
add
pop
fs
icebp
mov
sahf
das
les
lret
mov
ss
aad
inc
or
arpl
xor
repz
insb
xchg
dec
pushf
jbe
pop
xor
mov
adc
imul
jne
cmc
and
cmp
xchg
rorb
jl
jne
stos
xor
into
stc
dec
stos
mov
jmp
fcoms
mov
add
sti
sahf
lods
cs
add
fcoml
lret
imul
lret
jbe
je
gs
xchg
mov
aam
mov
in
flds
add
xor
rcrl
imul
insb
andb
mov
ret
jge
xchg
sbb
cmc
cmp
sti
int
sub
dec
mov
mov
jne
jns
shll
ret
sbb
sub
and
xchg
cld
mov
shlb
xor
adc
pop
ret
clc
lcall
pop
pusha
push
mov
inc
pushf
push
mov
sub
inc
pop
testl
mov
loop
jecxz
pop
push
dec
inc
fwait
jecxz
repz
ficoms
in
inc
mov
and
cmp
push
pop
add
adc
push
push
push
cmp
shll
lahf
nop
insb
psllw
ds
mov
sub
sarb
hlt
cli
cmp
push
hlt
mov
icebp
lea
xor
mov
jno
aas
jmp
shrl
adc
rcll
data16
cmpsb
orb
xor
gs
iret
fisubrs
cmp
outsl
pop
inc
adc
and
fimull
syscall
dec
inc
jge
sbb
daa
xor
imul
iret
dec
and
pop
mov
mov
fwait
fstpt
es
scas
iret
dec
fs
mov
lahf
fwait
jnp
ljmp
rol
mov
xor
out
test
lods
push
inc
pop
adc
js
stos
push
sub
mov
mov
out
sbb
and
xchg
in
jno
xchg
push
scas
testb
add
pop
mov
in
pushf
outsb
ror
je
das
mov
sbb
or
stos
dec
lret
fisubrs
pop
fdivrs
xchg
aad
xchg
iret
cld
fs
out
sbb
aaa
sub
movlps
mov
adcb
adc
je
pop
mov
popa
pop
cmp
ret
pop
pop
je
mov
xor
push
out
pop
mov
jl
bound
enter
in
loope
inc
mov
out
pop
lods
pop
or
jg
and
addr16
mov
adc
push
repnz
push
jbe
cmc
xchg
out
push
movsb
xchg
sbb
pop
insl
loopne
xchg
dec
imul
sub
out
lret
shrl
subl
push
mull
sub
fisttps
lods
jg
xor
sbb
pushf
nop
ret
imul
xchg
insb
data16
out
push
xchg
int
inc
cli
fstpl
js
or
adc
inc
mov
fwait
and
ja
mov
out
subl
sub
push
xor
icebp
mov
rcll
sub
aam
pop
xchg
push
xor
mov
mov
push
lahf
inc
in
or
or
fsub
sub
insb
stos
sbb
jmp
rorl
movl
sub
sub
orl
jge
cmpb
pop
mov
or
push
pop
pop
rcrl
lret
or
cld
xlat
or
dec
loop
jbe
gs
and
mov
push
loope
and
hlt
cs
imul
add
xchg
es
adc
aaa
adcb
ret
out
lds
add
fldcw
jns
leave
rolb
inc
inc
in
jb
hlt
push
out
mov
jo
out
or
arpl
pop
sahf
cmp
std
xchg
ds
lods
stos
mov
dec
clc
cmp
inc
negl
push
enter
mov
cli
jge
loope
push
jb
add
xchg
xchg
aad
fs
inc
push
sbb
fidivl
outsl
pop
fstl
mov
cmpsl
jb
pop
lcall
out
cmp
ja
aad
out
adcl
mov
add
js
mov
and
fsubl
imul
shlb
sbb
repnz
inc
dec
aad
ja
push
stc
xor
imul
xor
popa
lret
or
push
inc
fisubs
xchg
mov
jno
outsb
and
inc
pop
ss
scas
push
insb
mov
mov
xchg
in
push
test
mov
leave
jae
mov
or
jns
lods
mov
cmpsl
jns
cmp
test
mov
dec
add
mov
fnsave
shll
cmp
xor
jo
fsubl
enter
enter
add
orl
mov
loopne
add
xchg
jmp
push
pop
ljmp
push
into
and
pop
scas
enter
mov
and
dec
pop
jno
jb
cld
cmpsb
sub
push
lock
pop
push
xchg
aad
insb
push
mov
mov
mov
mov
lods
int
pop
pop
test
xor
repnz
add
fwait
adc
pop
movsb
insl
xor
cwtl
pop
testl
adc
idivb
cmc
inc
inc
push
pop
mov
push
adc
daa
cltd
testb
lahf
pop
lret
fisubrl
lock
mov
int3
rolb
xchg
push
xor
pop
adc
cmp
out
inc
push
ret
aaa
mov
xorb
push
dec
cmp
gs
call
inc
adc
sub
js
sub
xchg
call
dec
sbb
mov
mov
out
loopne
pop
sub
pop
pop
cs
add
int3
sbb
push
mov
push
pop
add
movsl
js
inc
shl
pop
push
push
or
inc
xor
into
adc
cmpsl
into
mov
ljmp
xchg
jle
out
xor
shrl
xor
dec
sub
and
mov
mov
dec
call
jae
adc
loopne
pushf
or
test
inc
dec
inc
cmpsl
enter
leave
xlat
repnz
xor
pop
mov
cmp
push
cli
imul
ds
fs
inc
xor
gs
jle
push
sub
or
mov
into
cmp
sarb
inc
out
js
mov
int3
int
aam
push
add
out
incl
mov
ja
adc
jb
in
xchg
jns
int3
clc
dec
cmp
lods
and
push
loop
xorl
in
dec
outsl
push
outsb
mov
push
ss
lcall
jge
nop
fisttpl
rorl
lret
xchg
shlb
adc
or
cmp
fcoml
loopne
fisubrs
decl
sbb
xor
ret
mov
jg
lcall
nop
shlb
js
xchg
out
bnd
leave
and
push
mov
loope
mov
pop
cmp
movsb
push
imul
mov
insl
sub
sub
jae
jae
aaa
xor
lret
fld
dec
cmp
jbe
cmp
cmp
pop
or
in
mov
aam
shrb
hlt
in
pop
shrl
sbb
mov
adc
dec
sarl
repnz
sarb
sahf
inc
loopne
out
add
mov
jae
dec
add
xor
icebp
push
cmp
fidivs
sub
xchg
data16
les
shrl
lods
sub
mov
fisubs
jb
mov
loopne
adc
fidivs
flds
and
test
in
loop
xor
lods
hlt
aas
bound
aas
mov
pop
jnp
lret
jmp
xchg
xchg
js
call
cmp
fmul
aas
das
je
pusha
shll
bound
mov
pop
xor
jge
daa
xchg
loop
mov
or
push
push
dec
jne
into
fistl
pop
dec
xchg
loope
test
push
nop
stc
push
sbb
mov
int3
insl
out
lock
in
test
gs
call
scas
mov
xchg
xchg
in
adc
cmpsl
adc
lods
pop
push
dec
int3
jmp
or
bnd
aad
jae
sub
push
adc
mov
cwtl
or
mov
ror
sbb
add
incl
iret
inc
lret
jns
lret
jmp
fistpll
aam
cmpsb
test
icebp
stos
jecxz
mov
insl
mov
shl
xor
shrb
mov
pushf
outsb
pop
or
add
cmp
div
mov
mov
loopne
pop
aaa
test
je
stc
adc
xchg
mov
cmp
jbe
test
xchg
jg
and
out
jo
repnz
lcall
mov
lods
cmp
int
dec
and
mul
dec
jns
outsb
cmp
movsl
inc
mov
jo
sbb
sbb
sbbl
jb
repz
test
sbb
sbb
fwait
lret
push
jmp
jge
mov
cmp
jb
icebp
aas
insb
outsb
pop
je
test
pop
hlt
lea
add
cmpsb
push
sarl
mov
nop
and
pop
iret
cmpsl
xor
mov
dec
test
push
inc
or
je
cmpb
mov
popf
rcrl
mov
adc
shrl
std
jmp
adc
sbb
into
insb
cwtl
inc
jl,pt
movsb
shll
cld
inc
mov
and
subb
loop
add
sub
xchg
dec
imul
je
pop
inc
scas
xchg
lods
push
cmpsb
jg
rorl
fldt
cmp
dec
inc
and
cmc
dec
sbbb
xor
inc
pop
nop
mov
lret
loope
fnstsw
mov
in
mov
fstpl
adc
sub
dec
daa
test
adc
mov
fnstenv
fs
test
jo
cmp
aad
loopne
push
out
ljmp
iret
xchg
sub
in
mov
push
add
mov
out
dec
sub
outsb
add
std
stos
push
xchg
sbb
add
mov
ret
sub
bnd
push
cld
or
fimull
andb
mov
mov
test
sub
orb
pushf
adc
fdivr
xchg
sbb
loope
adc
lods
dec
mov
sbb
imul
in
cmpsl
push
mov
push
icebp
xchg
enter
ljmp
sbb
loop
mov
sarl
cmpsl
jbe
inc
add
outsb
cmpsb
sbb
cmp
dec
sar
mov
adc
fisttps
rcrb
or
stc
jae
sbb
mov
push
add
push
popa
mov
inc
add
jne
sbb
scas
loope
cmp
scas
pop
fnsave
cltd
inc
or
insl
push
pop
jmp
js
inc
add
pushl
lahf
stc
and
or
push
roll
jp
ds
cmpsl
cmp
outsb
mov
cltd
psllq
xchg
pop
incl
test
xchg
sbb
push
inc
aad
dec
pop
ja
mov
addr16
pop
mov
inc
test
pushf
mov
icebp
cmpb
dec
fistps
push
jne
pop
pop
aas
adc
jne
xchg
shll
dec
lea
add
icebp
mov
sbb
push
ret
shll
pushf
subb
cmp
pop
aam
cld
aam
in
lods
inc
mov
jge
sub
lock
add
dec
pop
sbb
daa
push
jmp
in
sbb
inc
mov
dec
in
mov
ret
ret
xlat
leave
add
mov
or
and
arpl
mov
push
dec
int3
mov
out
xchg
jb
push
cmp
fdivrp
int3
lret
or
lcall
int
in
out
cmp
xchg
cwtl
sti
out
and
push
repz
lods
outsb
xor
icebp
dec
pop
jne
jb
cmp
jnp
push
lret
cmp
js
pop
or
cmp
or
xor
jg
loopne
into
sbb
mov
cltd
lret
stos
adcb
test
sbb
jg
sbb
push
mov
lock
imulb
adc
pusha
insb
loopne
push
stos
nop
jo
xchg
push
cmp
pop
push
std
in
inc
aad
adc
ljmp
or
xor
inc
cli
lds
inc
push
sahf
outsl
shl
sub
setns
ficompl
in
imul
pop
daa
add
jecxz
mov
sbb
imul
and
mov
ja
pop
add
and
pop
push
sbb
sbb
clc
hlt
syscall
clc
sub
xchg
lret
xor
fldl
or
aas
lock
inc
add
and
cmp
rorb
test
loop
int
fisubs
sti
push
jecxz
adc
dec
in
divb
lods
divb
jnp
and
adc
sti
outsb
adc
arpl
int
daa
sbbb
cltd
inc
sbb
xor
and
shlb
ja
insl
push
icebp
xchg
arpl
inc
adc
push
dec
dec
outsb
aas
ret
adc
fdiv
add
sbb
jnp
in
or
pushf
dec
adc
inc
push
xor
xor
adc
test
push
jecxz
and
mov
fsubs
push
and
jle
cltd
shlb
cmp
arpl
lds
sbb
aam
push
dec
in
mov
jmp
packuswb
or
in
aam
jl
aas
outsb
aad
dec
sbb
or
scas
fninit
jle
adc
sbb
push
ljmp
loopne
sbb
jno
das
nop
ljmp
push
cld
nop
jo
in
xor
out
adc
lds
cmpb
mov
je
ss
shlb
sub
rcll
dec
jo
aas
add
out
ljmp
loopne
dec
pop
push
mov
mov
and
fcmove
movsl
cmp
leave
xor
aas
ds
sbb
pop
outsl
dec
test
imul
leave
shl
or
in
pushf
sbbl
mov
out
fsubrs
outsb
gs
in
cltd
mov
or
sub
stos
xchg
out
std
mov
jns
fdivrp
mov
lods
shlb
scas
cmp
sub
cmpsl
sbb
insb
mov
inc
mov
arpl
pop
push
pusha
stc
psubd
inc
push
cmpsb
or
and
sub
mov
jnp
je
pushw
cmp
fwait
lret
mov
xor
jbe
jl
push
xchg
test
pop
push
arpl
xchg
or
std
mov
aad
icebp
stos
mov
scas
mov
sub
pop
sbb
adc
sti
and
and
mov
ss
xchg
push
call
mov
push
sbb
mov
bound
adc
js
or
sbb
sub
rol
fnsave
out
pop
add
jno
push
cs
dec
sub
aaa
inc
addr16
rol
xchg
or
mov
or
arpl
pop
push
mov
mov
or
es
shlb
push
clc
out
movsb
cmp
aam
pop
shlb
cmp
test
test
mov
mov
add
and
scas
push
shr
dec
es
and
and
jge
lock
roll
je
xlat
jle
mov
addl
in
loop
jp
mull
xchg
jle
jns
dec
jp
add
mov
out
loope,pt
in
cld
nop
fdivs
hlt
xchg
std
out
repnz
mov
ljmp
pop
mov
ljmp
and
int
pushf
dec
or
test
movsl
scas
jb
call
pop
jge
mov
mov
pop
fdivs
mov
aam
fiadds
aas
push
in
mov
scas
outsb
sbb
mov
loope
cli
sbb
inc
divb
xlat
mov
outsl
aas
push
loopne
icebp
sahf
shll
pop
insb
imul
jmp
inc
call
std
push
stos
mov
movsb
mov
jmp
or
pop
lret
cmp
jge
pop
lea
sub
pop
pop
xchg
inc
aaa
lahf
daa
rorl
or
or
xchg
mov
ss
pop
call
dec
and
jae
sahf
call
aas
xchg
imul
in
mov
push
push
cmp
out
mov
daa
push
sbb
stc
enter
lahf
xchg
mov
inc
xor
cwtl
jmp
xchg
cltd
hlt
loopne
mov
sarl
in
xor
or
pop
mov
dec
or
or
push
loop
mov
mov
hlt
test
xchg
sbb
pushf
inc
sub
xchg
sub
dec
inc
repz
imul
or
add
push
push
loope
nop
fnstcw
dec
push
mov
ja
xchg
es
cmp
fwait
pop
mov
push
xor
shll
sub
gs
bound
fsts
mov
inc
mov
jo
int3
popa
fs
arpl
lret
pop
shll
dec
inc
ss
mov
push
int3
idivb
and
dec
and
jmp
push
and
xor
lcall
insl
pop
adc
ret
idiv
aas
add
cmp
fxch
jno
aaa
repnz
into
stos
sub
cmp
gs
jl
sbb
or
and
cld
push
sub
aam
push
jmp
lods
pushf
imul
cld
push
pushf
jo
cmpsl
stos
sbb
and
dec
orb
out
jae
inc
bound
and
xchg
fs
xor
xchg
cmpsl
out
ja
imul
xchg
insb
or
xor
fcomip
inc
mov
cmp
enter
cli
popa
pushf
ja
pop
sub
pop
loopne
mov
push
inc
mov
je
mov
ds
sbb
mov
out
pushf
shl
and
mov
cmp
in
pop
scas
es
das
jns
std
pop
fstpl
dec
outsl
mov
aaa
sub
adc
sbb
repnz
push
outsl
fistl
or
xor
or
ds
inc
cli
in
mov
sahf
dec
movb
mov
jmp
cmp
mov
xchg
sub
test
push
sbb
int3
out
sbb
mov
xchg
stc
sti
mov
xchg
xor
mov
cli
repnz
outsl
out
lock
popa
inc
push
in
imul
sub
push
adc
int3
and
mov
ljmp
ds
call
cld
je
dec
shll
arpl
nop
xor
rorb
xor
fdiv
inc
data16
je
jle
xor
rorl
sbb
outsl
or
in
sub
imulb
in
jmp
js
inc
mov
or
jo
sub
push
mov
lea
sbb
repz
cltd
push
fpatan
add
lods
mov
mull
jg
lock
xchg
je
push
aad
cmp
xlat
addr16
js
adc
cld
add
or
add
loop
or
push
or
adc
pop
int
fsubrl
adc
xor
dec
inc
int3
pop
adc
add
fcoms
insb
stc
push
ficoms
xchg
dec
pop
stos
xchg
dec
mov
or
lock
cmp
js
lcall
in
rcrl
data16
mov
jb
jecxz
test
mov
lods
into
loopne
insb
outsb
push
out
fldl
pop
xchg
rcl
mov
jne
lock
xchg
mov
mov
xor
inc
push
jl
jo
jae
jb
and
xor
inc
fwait
xchg
and
mov
stc
outsl
xlat
jno
stos
mov
jne
mov
cli
and
sti
cltd
insb
mov
cmp
shll
in
jo
push
mov
leave
testl
sbb
and
add
jl
pop
clc
ss
rcrl
js
ret
cmpsl
hlt
imul
lock
and
call
out
mov
pop
cli
lret
stos
adc
stos
add
mov
stos
int3
in
jns
mov
call
mov
cmpsb
lea
shrb
leave
push
aaa
jno
sub
scas
fcomi
int
push
stc
aaa
lds
cltd
repnz
add
mov
push
into
pusha
cmp
jp
mov
in
mov
ds
aaa
loopne
push
jge
xor
and
les
jle
roll
dec
jecxz
shlb
push
lock
or
adc
movsb
add
fldl
sub
gs
or
fiadds
xor
cltd
xor
out
adc
mov
pop
jnp
jbe
inc
jo
scas
dec
iret
dec
test
je
inc
or
mov
xchg
cmc
jl
andl
incl
inc
cmpsb
std
shl
loop
sbb
xchg
push
in
jmp
pop
and
iret
outsb
rcl
lahf
repz
push
std
into
mov
adc
push
int3
xor
pushf
mov
xor
cld
ss
aad
cltd
scas
or
out
mov
inc
insl
mov
xchg
add
inc
je
mov
sahf
dec
mov
rolb
push
sub
test
inc
lds
cmp
cmp
inc
pushl
pop
lods
aam
jae
fcmovne
out
stc
mov
mov
dec
adcl
xor
ror
lcall
cmp
or
cmp
sbb
in
cmpsb
inc
mov
mov
ficoms
rcll
int3
ss
inc
adc
sbb
in
dec
push
fwait
mov
outsl
or
or
daa
ja
push
push
repnz
cmp
cmp
mov
adc
adc
cmp
jecxz
jecxz
shrb
add
stos
jae
pop
add
stos
repnz
mov
push
push
repz
out
adc
fstl
andl
testb
repz
xor
add
fists
mov
scas
and
jae
xchg
add
sbb
mov
int
data16
fisttps
xchg
pop
mov
sub
jle
ud1
imul
and
sub
into
or
xchg
pop
mov
push
mov
mov
pop
fnsave
lret
mov
push
jge
add
pop
in
cmp
ljmp
mov
incb
push
fsubr
and
jo
loopne
or
push
xchg
cmpb
cmpsl
in
jno
xor
test
shr
cmpsl
push
mov
dec
inc
aam
sbb
jle
sbb
push
jbe
sbb
lcall
jl
or
or
xchg
out
mov
adc
xor
out
sahf
push
lods
mov
lret
sub
sbb
adc
lret
mov
leave
push
jle
sub
mov
sub
pop
xor
inc
cmp
xchg
lds
mov
pop
xsave
jno
xor
jmp
pop
xor
sub
pop
sub
mov
mov
dec
sti
pop
sub
add
add
cli
pop
cmp
insl
imul
outsb
adcl
adc
pushf
mov
mov
aaa
aas
dec
dec
addr16
gs
jnp
rorl
add
push
inc
xchg
add
pop
aam
mov
ja
mov
pusha
pop
adc
mov
or
lcall
pop
sbb
stc
mov
clc
cmp
out
jbe
outsl
lods
push
sub
lcall
pop
cmp
inc
data16
adc
dec
xorb
jge
xor
jmp
icebp
xor
adc
xlat
sub
repz
add
xchg
mov
inc
dec
mov
cmpsl
popa
pushf
sbb
xchg
fcompl
add
inc
dec
add
dec
mov
adc
mov
pop
push
jne
adcl
popf
push
inc
stos
mov
call
xchg
add
loopne
adc
mov
flds
inc
movsl
sti
daa
call
sub
outsb
repnz
ljmp
movsb
ja
std
pop
insl
jg
push
call
sub
sub
test
adc
enter
inc
jl
aas
push
imul
sbb
imul
je
jmp
xor
mov
repnz
mov
rcl
frstpm(287
mov
jmp
push
jno
jo
fsubrl
xchg
push
repz
cwtl
aad
call
cmp
loop
sub
xchg
bound
and
idiv
lock
xor
cmpb
popa
nop
addr16
pusha
cmp
dec
bnd
pop
mov
imul
push
jo
daa
sub
pusha
push
iret
or
insb
cmp
ret
icebp
loope
xor
jp
rolb
xor
rep
lods
dec
movsb
orb
scas
insb
fwait
leave
mov
jl
push
xchg
je
pop
xchg
jo
ljmp
icebp
dec
inc
lret
push
repz
pop
pop
popa
lahf
leave
js
les
push
les
jle
add
sbb
ret
jl
leave
cmc
xchg
testl
mulb
daa
dec
mov
mov
mov
xor
rcl
lcall
icebp
test
xor
sbb
std
xchg
fdivr
stos
ret
mov
test
sub
clc
std
mov
inc
sub
xchg
inc
adc
sbb
lds
loop
std
pop
adc
test
mov
fistps
shll
shr
dec
in
inc
mov
jnp
in
repnz
sub
movb
ljmp
stos
ljmp
cmp
mov
lods
sbb
sub
repnz
fdivs
inc
inc
sub
sbb
inc
ret
testb
dec
xchg
rclb
hlt
xchg
and
push
insb
adc
enter
in
out
add
xchg
push
pop
enter
jns
dec
testb
mov
sub
addb
repz
sarl
das
insb
jne
and
nop
adcl
and
cmp
inc
scas
push
add
jg
mov
or
jg
js
dec
scas
xlat
cwtl
adc
inc
xlat
ja
jmp
add
sahf
sub
das
cld
xchg
push
out
jae
pop
sbb
push
movsl
fdivl
sahf
mov
pusha
push
lods
or
cmp
fdiv
or
leave
ds
ds
xor
adc
ljmp
fidivl
les
xchg
bound
inc
lods
adc
mov
enter
hlt
jae
mov
xchg
xchg
and
movsl
sbbl
scas
fwait
adc
gs
icebp
hlt
shlb
es
mov
dec
mov
insb
clc
sub
aad
das
stos
int3
pop
rcrb
aas
popf
or
add
push
xor
std
mov
clc
mov
push
inc
lret
xor
cmp
ret
cmp
lods
and
cmp
mov
dec
push
cli
les
xchg
shll
inc
add
loope
mov
std
dec
imul
scas
bound
sub
ret
aad
mov
add
jg
mov
scas
testb
or
icebp
loopne
adc
xchg
outsb
fucomip
cld
lret
movsb
loopne
lds
mov
mov
ficoml
fisubrs
push
das
clc
into
jecxz
dec
lods
lods
subb
lret
push
test
dec
adc
mov
shll
aam
mov
xor
dec
icebp
mov
push
inc
fwait
or
repz
sarl
test
pop
cmp
or
jns
lods
jae
pop
cmp
jl,pt
jo
movq
and
xchg
in
and
mov
gs
xor
loope
add
shl
loop
negb
push
mov
mov
stc
mov
daa
cmp
or
xchg
xor
fs
dec
neg
jae
mov
jecxz
jle
in
xor
icebp
xchg
dec
push
je
sbb
outsb
repz
dec
imul
stos
js
xchg
adc
popf
or
mov
xchg
jecxz
ja
sub
or
adc
lcall
jl
pop
je
insl
fs
or
push
mov
xlat
pop
nop
sub
into
ret
pop
stos
xor
scas
mov
push
xor
movsl
jp
clc
and
fdivr
adc
jge
aas
cmp
sbb
ret
nop
push
lods
shlb
and
cmp
cmp
shr
mov
out
adc
mov
mov
jp
push
dec
lock
mov
cmp
mov
std
mov
ja,pt
out
and
push
movsb
loop
test
mov
aas
pop
fs
cmp
sbb
stc
xor
jecxz
dec
test
stos
shrl
push
sub
push
push
adc
add
stos
push
and
xchg
sbb
add
xor
out
xor
call
jle
aad
xchg
mov
xchg
sub
fsubrp
xor
aas
fsubl
inc
pushf
cld
in
fs
or
out
cmpsb
or
test
mov
sbb
test
jno
ss
cli
divl
cmp
push
lds
outsl
jo
sahf
sub
pop
dec
loopne
xor
mov
cmpsb
dec
arpl
fcom
incl
xchg
cltd
push
out
jg
pop
in
mov
jae
add
jns
pop
in
shlb
inc
clc
push
pop
mov
mov
push
cmp
jp
nop
sbbl
add
mov
push
adc
or
hlt
or
adc
cmp
rorl
daa
daa
mov
push
arpl
xchg
out
fcomip
fdiv
or
sub
fnsave
add
cmpsl
mov
push
mov
lret
jne
xchg
pop
insb
pop
out
dec
js
lret
mov
xor
cmpsl
loope
stc
mov
push
aas
ja
or
lret
test
jmp
jmp
xchg
hlt
mov
mov
lret
fwait
outsl
xchg
shll
xor
cmp
jp
inc
push
sub
loop
cmp
mov
xor
mov
iret
sub
mov
xor
cmp
xor
inc
dec
inc
loopne
movsl
sbb
pop
and
icebp
cld
pop
jbe
cmc
popf
mov
push
es
ljmp
sbb
divl
sbb
push
lods
popa
and
mov
das
add
add
dec
cwtl
xchg
adc
mov
mov
outsl
xor
lcall
jb
pop
outsl
stc
out
mov
test
mov
mov
xchg
xchg
icebp
testb
test
jle
gs
popl
lods
dec
pop
dec
push
push
cmp
mov
inc
add
fbstp
push
xchg
or
icebp
mov
mov
adc
int
dec
test
enter
pop
xchg
sub
sub
inc
das
adc
ret
jb
cwtd
in
jl
add
movsl
sahf
icebp
call
dec
push
pop
bound
lret
adc
xchg
not
sti
sarb
addb
sar
or
loope
inc
mov
sbbb
movsb
sub
mov
das
std
jo
add
inc
or
lahf
push
add
xchg
fcompl
mov
mov
iret
push
pop
jne
cmpsb
test
and
stos
cli
mov
clc
push
push
adc
lcall
inc
icebp
mov
inc
dec
mov
and
stos
popa
cld
inc
lock
in
adc
int
sbb
xchg
mov
jo
xchg
jnp
fsubs
sub
ret
mov
popf
pop
addr16
xchg
inc
int
rorl
gs
and
xor
xchg
out
mov
sub
pop
jmp
es
dec
dec
lods
jno
xchg
mov
xor
add
sub
fs
arpl
call
and
and
xor
inc
roll
xadd
or
mov
xor
mov
mov
int
mov
loope
pop
outsb
les
enter
pop
or
orb
mov
lret
mov
pop
decl
js
repnz
or
stos
repz
data16
xchg
xchg
xchg
jle
repnz
mov
mov
dec
adc
insl
dec
push
hlt
leave
adc
repnz
inc
mov
dec
icebp
inc
xchg
jns
xchg
lret
xchg
xor
inc
dec
int
push
sub
sub
fwait
mov
outsl
clc
cmp
dec
rcrl
xchg
sarb
adc
sbb
xlat
aaa
sub
xchg
mov
add
inc
outsb
inc
sub
sbb
sub
out
daa
int3
push
bound
scas
add
adc
jae
cmc
out
and
pop
fisttps
stc
ficoms
jmp
loope
jl
cs
ja
pop
mov
out
cwtl
decl
inc
dec
shll
xlat
push
pop
xor
dec
push
dec
sub
xor
mov
push
xor
int
enter
in
pop
xchg
add
dec
fcmovbe
shll
mov
jae
lock
mov
cs
jno
inc
in
pop
xlat
push
sub
inc
cmc
lahf
cs
jns
push
leave
push
push
loopne
rorb
and
xlat
mov
mov
int3
lahf
cmc
dec
lock
loope
je
push
sub
fisubrl
mov
cmp
pop
jb
test
icebp
push
lret
inc
loope
fdiv
pop
lea
jno
sbb
daa
lods
loope
in
or
mov
into
fiaddl
pushf
xchg
fcomip
aas
sub
das
inc
add
pop
jae
imul
test
xor
jno
or
les
fisubrs
sbb
sub
data16
or
push
mov
push
cs
lahf
addb
dec
fstl
add
mov
cld
cmpsl
scas
out
aaa
adc
pop
push
dec
or
xchg
xlat
jmp
lret
data16
in
and
sub
or
adc
cmp
mov
ja
xchg
inc
cmpsb
mov
dec
and
in
lods
or
popa
push
lds
sub
scas
mov
daa
sbb
in
dec
pusha
loop
call
pop
shll
fistpll
sbb
push
pop
xor
out
inc
ret
aad
sbb
test
xchg
sub
stos
mov
and
xchg
cwtl
adc
lods
xchg
je
pop
mov
push
leave
int3
cmp
dec
sbb
mov
lock
inc
inc
jnp
dec
pop
cwtl
testb
push
call
jg
pop
lea
lea
call
add
mov
sbb
sub
pop
adc
and
xlat
adc
imul
fldl
pusha
mov
push
scas
mov
testb
add
hlt
dec
cwtl
lds
mov
lcall
push
cli
test
xchg
sahf
pop
jl
cwtl
push
add
mov
pop
lods
sbb
jo
sbb
insb
sub
ss
cmp
out
xchg
mov
in
cmp
jns
setb
push
test
cld
out
loope
hlt
in
jns
or
enter
test
mov
ret
sbb
and
or
stos
and
xchg
add
nop
lcall
inc
push
add
ret
mov
mov
mov
mov
negl
and
fs
arpl
mov
repz
lds
shl
ds
xor
je
ss
lahf
sbb
add
sub
repnz
cli
in
sub
cmpsb
subl
or
lods
stos
js
out
gs
insl
push
jecxz
out
popa
mov
lock
scas
or
xchg
popa
xchg
sub
pop
clc
inc
jo
testl
iret
sbb
sti
stos
inc
loop
dec
inc
test
ret
and
mov
inc
pop
mov
xlat
lods
xchg
or
loop
lods
and
lods
and
and
lret
das
pop
fnstsw
lods
xor
stos
push
adc
movsb
fbld
push
jnp
mov
jl
shlb
out
out
call
xchg
cmp
mov
shrl
xor
lahf
mov
lret
mov
push
aad
mov
add
and
enter
add
out
mov
or
pop
xchg
push
cmp
xchg
outsb
int3
ja
rorl
sbb
adc
sbb
pop
adc
push
sbb
sbb
add
adc
mov
push
xchg
not
add
mov
loope
cmp
sub
adc
je
and
mov
jecxz
pusha
inc
pop
ja
mov
adc
mov
xor
xor
movsl
lret
push
stos
add
andb
rclb
subb
sub
lahf
ja
loop
push
sbb
push
dec
mov
fildll
pushf
mov
movsb
nop
cli
jl
repz
cs
mov
hlt
xchg
mov
mov
mov
jno
mov
notb
jbe
ja
sub
ret
mov
imul
gs
sub
jne,pn
mov
fisttpll
daa
loopne
mov
lret
mov
jno
pop
push
cmpsb
adc
dec
fcoms
outsb
or
jle
or
aas
jmp
jle
mov
jbe
test
inc
popa
mov
sahf
sbb
fisubrs
push
add
jg
stos
fdivrl
xchg
jecxz
enter
fcmovne
sbb
sub
fcomi
mov
mov
mov
dec
loop
lods
xchg
das
pop
push
je
jl
or
stos
pusha
mov
mov
pop
jmp
cmp
push
pop
fs
adc
adc
cmp
fs
in
incl
aaa
jno
mov
aad
push
or
mov
pop
push
je
cmp
loope
loope
add
clc
xchg
iret
out
jg
pop
in
movsb
fmull
mov
rclb
rcll
stc
stos
lret
mov
cmp
jg
ds
mov
and
push
jg
jnp
push
or
xor
es
add
inc
sbbl
sbb
xor
push
xchg
push
test
in
test
lcall
and
xor
test
je
jns
add
test
xlat
xchg
cmp
aaa
test
fsubs
stc
ret
and
push
jecxz
inc
xor
repnz
push
dec
cltd
adc
fisttpl
mov
mov
and
sbb
pushf
loopne
pop
loope
jns
xor
insb
mov
or
cmovl
mov
inc
out
movsb
bound
data16
lods
sub
pop
cmpsb
mov
clc
inc
imul
sub
mov
fwait
mov
mov
jb
sbb
cmc
and
fwait
mov
enter
ret
mov
repnz
xor
cli
mov
mov
shlb
repz
hlt
add
and
dec
bnd
jecxz
jns
fnstsw
daa
jg
dec
jbe
loope
mov
xor
icebp
pop
cltd
and
xor
dec
sbb
mov
cmp
sbb
outsl
pop
les
pop
mov
inc
mov
filds
les
aas
mov
fwait
pop
popa
xlat
cwtl
pop
ljmp
mov
data16
cwtl
repz
jecxz
or
inc
rorl
mov
cmp
sub
push
shr
es
je
cli
mov
sbb
cmp
push
test
std
pop
das
dec
inc
mov
js
lret
dec
ffreep
fdivrs
lods
jge
stc
movsb
push
jge
mov
scas
cmp
aam
gs
push
mov
loopne
enter
movaps
sahf
lods
cmp
test
xchg
mov
je
clc
or
outsl
push
addl
adc
popf
sub
adc
xor
pinsrw
dec
xchg
fwait
mov
adc
or
sbb
jge
in
jae
xor
and
mov
xor
outsl
rcrb
and
fwait
sbb
ret
adc
jp
mov
fwait
adc
xor
mov
jnp
inc
add
push
loope
and
mov
popa
test
and
mov
hlt
fisubrs
mov
xor
es
ja
lea
fs
push
xchg
jo
pop
int3
stc
dec
imul
push
sub
dec
aas
sbb
sub
cli
adc
push
stos
inc
adc
push
rclb
xchg
movsb
adc
pushf
mov
pushf
cmp
loope
movsb
adc
aas
shrl
push
sub
xchg
enter
adc
imul
sbb
add
test
adc
pop
iret
sub
icebp
inc
sbb
push
xchg
jecxz
and
pop
xor
data16
jp
sbb
fists
mov
dec
or
rolb
adc
push
push
sbb
sahf
sahf
push
imul
push
repz
adc
pop
push
sub
sub
mov
or
adcb
xor
and
or
push
fstps
push
lea
dec
in
pop
adc
popa
loopne
adc
lods
sti
mov
sti
repz
cmp
lock
inc
xor
add
add
pop
data16
or
mov
dec
aas
mov
aaa
scas
jmp
or
jb
inc
jp
pop
sbb
cmpsb
pushf
inc
cmp
insl
sti
sti
mov
test
dec
cmpsl
pop
fstps
cmp
mov
fmul
sbb
sub
test
pop
push
cmp
fs
pop
inc
popf
mov
int
or
bound
mov
out
push
call
fldl
xchg
clc
adc
test
mov
dec
mov
je
js
adc
pop
add
imul
lock
inc
mov
enter
pusha
jecxz
cmc
out
mov
push
sti
add
scas
jbe
rcr
sbb
sbb
inc
mov
bnd
fcomps
and
mov
xlat
ss
imul
in
stos
sub
push
fildll
movsl
imul
push
pop
cltd
imul
js
int
push
and
mulb
rorl
fwait
stos
inc
add
lds
roll
xor
leave
mov
mov
inc
bound
sbb
and
push
add
xchg
scas
sbb
pop
imul
repnz
mov
iret
rorl
pop
dec
and
out
fldcw
dec
dec
mov
mov
lahf
andb
sub
dec
cmp
or
cwtl
ss
jmp
mov
cmpsl
push
pop
into
leave
xor
mov
jno
adc
lods
pusha
xor
xchg
ss
mov
and
mov
mov
test
pushf
leave
cltd
cmp
push
fcmovnb
insb
cmp
rorl
ret
bound
sbb
xor
insl
pop
sbb
pop
stos
cmpl
adc
out
push
jp
int
mov
outsb
cmp
nop
insl
addr16
xchg
dec
enter
and
sbb
pop
push
or
xchg
jle
std
out
lock
xor
in
push
push
xchg
xchg
sbb
lea
cmpsl
lods
inc
jae
pusha
and
shrb
int3
les
subl
or
sti
add
mov
inc
roll
mov
xchg
out
add
mov
mov
cli
ljmp
lea
ret
inc
add
add
call
xchg
sbb
das
dec
push
sub
cwtl
in
rdpmc
aam
cmc
ss
or
xchg
filds
xor
cmp
push
push
mov
and
cmp
xor
aaa
xor
push
fcompl
lret
add
fisttpll
fbld
xchg
dec
sub
dec
xchg
icebp
ret
lds
cmp
jae
out
movsb
lret
pop
mov
sub
push
js
or
cmpsb
testb
cwtl
push
movsl
leave
scas
jb
add
or
mov
cmp
ret
mul
xor
add
stos
mov
add
outsb
pusha
adcl
stos
push
call
cmpsb
lahf
leave
pusha
inc
es
xor
xor
shlb
cmp
xchg
es
mov
fs
jo
test
cmp
hlt
repz
xor
scas
ljmp
adc
adc
xchg
and
add
test
xchg
add
mov
pop
popf
int
sub
lret
aas
test
lcall
lcall
insl
sub
sbb
cwtl
cmpsl
sbb
ljmp
inc
push
xor
or
xchg
sbb
or
lods
daa
mov
xor
int
fistps
addr16
jne
shlb
or
mov
push
dec
int
lret
test
cmp
ud0
adc
imul
cltd
mov
sub
jecxz
cs
aaa
adc
stc
clc
dec
mov
inc
js
add
ja
push
cli
push
ss
dec
imul
test
pop
or
mov
push
dec
in
xchg
jns
out
les
pushf
test
or
inc
mov
test
test
push
std
push
lods
or
mov
jmp
dec
push
pop
mov
or
adc
iret
sub
sbb
test
jg
sbb
enter
mov
testb
ss
jne
xor
ret
das
lret
ja
cmp
sbb
xor
and
daa
enter
and
pop
adc
cltd
and
imul
jp
sahf
cwtl
mulb
add
fwait
xor
in
fimuls
popa
lahf
xor
xchg
pop
mov
lea
nop
or
or
xchg
and
adc
pop
divb
popa
clc
iret
mov
ret
add
or
shlb
inc
std
mov
lret
sti
push
ljmp
jg
call
popa
mov
mov
leave
xchg
iret
aad
mov
js
xor
pop
jnp
test
pop
cmpsb
lea
mov
add
inc
ret
cmc
jae
icebp
int
cmp
add
iret
lcall
sbb
xor
and
mov
add
and
rolb
xchg
ret
cwtl
inc
inc
ffreep
sarl
rcrb
test
xchg
sub
lret
push
or
and
jno
mov
mov
mov
dec
xchg
aad
dec
lea
jmp
and
push
rcrl
push
pop
push
out
dec
repz
xchg
sub
xchg
adc
mov
jecxz
outsl
popf
cli
mov
or
mov
sub
and
js
mov
sbb
mov
inc
sbb
cmpl
add
mov
dec
gs
fimull
push
push
in
cli
inc
xchg
int
movsl
dec
jmp
adc
cld
lock
int
clc
xchg
rcrl
mov
cs
mov
add
add
iret
je
mov
push
push
pushf
push
pop
or
popf
lret
icebp
and
mov
xchg
pop
daa
push
cmp
popf
pop
mov
mov
test
in
add
xchg
repnz
adc
xchg
inc
outsl
and
inc
push
fdivrl
mov
xlat
pop
push
add
rcrb
mov
and
jb
xchg
arpl
push
int3
fisttps
push
mov
pop
sub
aaa
inc
add
push
sti
or
push
inc
jno
insl
xor
push
sti
push
ret
xor
test
cld
aaa
imul
fwait
jo
fisubs
push
js
add
push
movhps
cmpsb
aaa
pop
das
jmp
xor
cmp
and
shr
hlt
jae
jns
sbb
lret
or
mov
mov
mov
ret
and
inc
ds
leave
adc
aam
dec
fidivl
stc
add
cmp
lds
popl
lret
sbb
push
enter
mov
xchg
sub
mov
cs
add
aas
aaa
sbb
mov
or
loope
stos
in
aaa
cmp
cmc
mov
xor
inc
popa
out
jbe
stos
nop
movsl
cmc
aam
lods
sub
inc
sbb
xor
fstps
sub
jmp
clc
jne
mov
rcrl
andl
in
sub
mov
lcall
loopne
scas
pop
int3
icebp
stos
test
cmc
sbb
imul
fisttpll
inc
sbb
xor
mov
add
sahf
cs
sbb
dec
loopne
andb
lea
rol
adc
sub
pop
mov
cmp
xchg
sar
int3
adc
out
fs
shll
inc
pop
mov
lret
mov
jnp
jae
mov
pop
cwtl
aaa
dec
lea
sti
call
xchg
adc
sbb
inc
nop
mov
jbe
mov
dec
adc
adc
popa
insl
xor
out
insl
pop
sti
jmp
out
pop
nop
ret
rolb
sbb
mov
decl
call
rclb
add
pop
cld
pop
idivl
incl
push
push
push
dec
mov
in
cmp
mov
movd
jnp
inc
adc
sti
iret
pusha
pop
xlat
scas
inc
sbb
mov
in
mov
fisubrl
sub
stc
inc
lret
or
ja
jae
repz
aaa
mov
inc
test
cmp
adc
mov
repnz
push
int
icebp
imul
hlt
xchg
mov
repz
cmp
adc
cmpsb
mov
xor
push
les
jp
mov
ret
push
push
clc
adc
daa
xchg
dec
xchg
xor
pop
cmp
test
popf
shlb
push
add
mov
ds
sbb
int
gs
mov
xchg
mov
in
rorl
subb
stos
inc
adc
add
xor
mov
jae
addr16
mov
sahf
mov
or
clc
aas
jb
add
out
outsl
sti
iret
and
jo
mov
std
sub
pushf
add
pop
push
aaa
xchg
push
mov
into
xchg
std
int3
lret
test
pop
mov
pop
jecxz
jge
movsl
ss
out
in
pusha
and
rcl
stos
movsl
or
shl
cmp
pop
insl
cmc
xor
push
rcll
pushf
jo
out
cmp
mov
mov
stc
je
mov
or
fldl
xchg
sub
dec
inc
mov
lea
inc
int
shl
into
js
outsb
scas
dec
lds
ret
cli
cmp
adc
das
mov
jl
push
mov
push
dec
arpl
pop
push
out
pop
dec
lods
popa
leave
push
inc
andb
xor
loopne
insb
ljmp
gs
dec
push
ret
sub
sahf
mov
mov
add
push
xchg
xchg
jmp
scas
popl
xchg
dec
cli
into
jne
mov
cltd
sub
mov
mov
outsb
addl
inc
xchg
ljmp
je
sub
jmp
xor
sub
ret
dec
outsb
fsubl
outsb
jle
mov
push
leave
scas
scas
mov
pop
push
cmp
dec
aam
into
push
or
decb
pop
add
out
sub
sbbl
xor
loope
mov
aam
inc
sub
ss
push
jle
pop
fwait
dec
jo
and
mov
sbb
pop
popw
jl
mov
aas
popa
scas
cmp
inc
lock
push
movsl
leave
push
out
insb
xchg
pop
mov
jae
daa
sub
in
jg
scas
xchg
stos
mov
out
and
and
gs
arpl
xchg
inc
mov
fldenv
ret
pop
mov
das
adc
ret
lods
cmp
push
adc
push
roll
in
inc
push
lods
flds
xor
sbb
xor
mov
xor
sbb
imul
popf
mov
cmpsl
and
dec
out
cmp
cmp
ja
clc
push
dec
sbb
xchg
pop
into
rcl
mov
cwtl
sub
insb
into
or
addr16
into
mov
jae
out
inc
jle,pt
adc
xchg
lcall
bound
sbb
loope
bound
fs
paddq
pop
jle
jle
dec
arpl
pop
jg
mov
adc
fs
inc
or
rolb
aaa
sub
or
xchg
push
and
rorl
sub
repz
movsb
xchg
jo
jmp
jge
aam
xor
daa
lods
mov
ret
fidivrs
pop
nop
insb
cmpsl
push
mov
aaa
sahf
arpl
cmc
aas
mov
fcoml
jg
jnp
adc
jecxz
jecxz
mov
and
fscale
push
pop
test
pop
cmpsb
les
lock
sahf
rorl
or
and
outsb
push
pop
mov
lds
stos
inc
pop
pop
lret
jp
ror
inc
fidivrs
pop
or
add
ret
in
jecxz
je
add
push
outsb
bnd
cwtl
mov
xchg
jl
rcrl
inc
cld
push
dec
sub
insl
rcrb
xor
ret
popf
out
gs
faddl
ljmp
lret
pusha
sbb
movsb
push
dec
rorb
and
ficompl
push
imul
pop
jno
scas
shlb
pusha
out
out
ret
cld
inc
cmpsb
push
mov
xchg
fidivs
push
inc
mov
dec
pop
js
pusha
repnz
hlt
mov
shll
popa
cmp
and
mov
pop
sbb
leave
in
aas
loop
add
xor
mov
lahf
mov
mov
ret
adcb
leave
pop
cmp
and
mov
and
imul
xlat
add
bound
cmpsb
pop
and
and
stc
sub
dec
repnz
loopne
push
daa
stc
in
in
push
lahf
push
rcrl
imul
jp
pop
dec
lahf
sbb
push
ds
adc
stos
cmp
lods
fldcw
mov
stos
pop
xchg
fsubrp
mov
xchg
jl
sub
imul
jae
push
pop
mov
jmp
subl
insl
int
outsb
insb
sbb
and
ficoml
sub
stos
jl
mov
jbe
ljmp
ljmp
jno
xchg
pop
dec
adc
repnz
lcall
dec
push
lds
std
retw
iret
ficompl
rorb
sbb
push
and
push
rolb
add
lret
fidivs
add
ljmp
fistps
and
lds
dec
jno
sub
and
inc
mov
sbb
mov
and
jle
jo
mov
xchg
lea
imul
pusha
ja
inc
adc
sub
fcmovbe
pop
inc
fmuls
inc
cmp
dec
icebp
mov
sub
mov
cwtl
shll
stos
xchg
out
out
jge
xchg
push
push
mov
cmp
sbb
daa
fcoml
orb
insb
mov
cwtl
jnp
rorl
cmp
pushf
and
repnz
fsubr
bound
or
sbb
mov
repz
and
filds
cmp
in
fstpt
sub
test
mov
sub
or
mov
mov
dec
insb
mov
in
cmp
mov
rcrl
dec
cmpsl
xor
lret
in
cmp
hlt
stc
mov
dec
scas
cmp
pop
or
xchg
mov
mov
mov
lds
pushf
xchg
push
insb
int
mov
ds
inc
hlt
and
lods
js
arpl
rolb
push
cmp
out
cmp
cmpb
mov
inc
sbb
mov
pusha
and
cmp
out
push
inc
out
shl
jno
stos
jg
inc
xchg
sbb
push
dec
loope
les
push
mov
push
sbb
popf
mov
enter
mov
imul
mov
mov
cmpsb
into
nop
and
push
sub
and
sub
jb
inc
mov
es
push
fdiv
push
xchg
xchg
sbb
sbb
lret
jae
fwait
inc
or
add
je
testb
dec
xchg
out
and
or
push
enter
adc
jae
pop
rcr
je
cli
sub
sbb
or
andl
cmpsl
repnz
sub
push
pop
mov
pop
or
sti
push
xchg
mov
lahf
lret
sarl
aad
fucom
nop
repz
xlat
cwtl
sbb
loope
mov
or
out
add
mov
dec
lahf
mov
pushf
movsl
push
adc
cmc
outsl
xor
sbb
inc
movsl
imul
cmp
pop
pop
mov
in
aad
clc
ja
mov
dec
pop
int
outsb
push
sub
sbb
pop
mov
push
mov
mov
ds
loop
pusha
mulb
rolb
call
ret
sarb
daa
mov
mov
mov
bt
fadds
lods
inc
inc
or
repz
std
jae
popf
sbb
inc
jo
sbbb
cltd
pushf
inc
jle
fsubr
aam
xor
mov
inc
iret
and
lret
jge
mov
imul
push
loopne
xor
xchg
rolb
jecxz
mov
ds
rcrl
loopne
sbb
push
arpl
sub
push
and
inc
je
xchg
test
sub
insb
out
push
sub
insl
mov
scas
mov
or
roll
dec
adc
js
mov
in
push
shll
push
and
outsl
xor
out
call
idivb
cmpsb
inc
adc
pop
xchg
mov
cmp
sub
outsb
scas
push
sub
inc
dec
cmpsb
out
dec
daa
movsl
jo
repz
xchg
popa
jo
scas
out
add
or
xchg
fxch
cmpsb
mov
jg
int3
mov
ret
lods
sbb
xchg
iret
jp
mov
push
mov
inc
mov
add
nop
sub
out
dec
inc
xchg
sahf
fadds
add
je
into
cmpsl
cmpsl
loope
mov
sbb
call
pop
shrl
popa
orl
and
std
pop
incb
ret
test
push
inc
jb
jmp
and
pop
add
ret
mov
dec
xor
mov
pop
mov
cmp
add
mov
bound
cwtl
jnp
les
ret
icebp
cwtl
rcll
sbb
stos
mov
sbb
addr16
mov
sar
add
xchg
inc
dec
cmp
outsl
jg
add
add
pop
daa
sub
inc
fldl
filds
arpl
push
mov
cltd
push
fadd
bound
cld
fildl
sub
popa
ja
or
mov
inc
pop
mov
test
jne
dec
mov
enter
in
xor
xchg
jbe
std
aaa
outsl
rcrl
pusha
and
inc
lahf
add
mov
lds
pushf
xlat
push
aas
xor
cwtl
pop
and
pop
int3
mov
ret
xor
cmpl
jbe
stos
jge
rorl
adc
push
xlat
mov
in
in
ja
xor
jbe
cmp
cli
sbb
jmp
stos
jge
mov
pop
inc
inc
push
inc
aaa
clc
scas
in
jecxz
js
loopne
xor
flds
pop
lret
imul
sbb
test
cltd
loop
pop
sti
shlb
add
int
jg
repnz
pusha
push
dec
icebp
cmp
jno
add
mov
sbb
jbe
xchg
push
jns
mov
push
insb
repz
shlb
inc
stos
fsubrs
sub
push
or
pop
in
and
jecxz
in
jne
cltd
jb
adc
mov
inc
pop
xor
mov
repnz
cmpl
fs
add
aam
sbb
sarb
enter
jb
mov
into
int
hlt
nop
push
in
insl
cwtl
pushf
xchg
jns
xlat
int3
leave
cmp
add
fcoms
cmp
fiaddl
cmp
adc
mov
mov
adc
mov
xor
loop
cli
dec
jmp
mov
icebp
ljmp
pop
icebp
jge
mov
or
in
sbb
mov
test
fistl
and
sbbl
aas
push
insb
std
xchg
int
mov
xchg
push
mov
cmp
pop
movsl
test
lea
aad
inc
out
sub
xchg
xchg
dec
cmp
adc
sbb
out
sti
pop
lds
cmp
aaa
mov
mov
cmc
ljmp
jge
fidivrs
inc
shll
fld
mov
or
xchg
mov
cmp
push
jne
inc
lret
pop
sahf
push
push
test
pop
lret
js
push
loopne
xor
inc
rorl
mov
cmp
mov
aad
gs
cmp
aas
movsl
fwait
xchg
nop
jle
lds
dec
jo
pop
mov
in
ret
sbb
fs
adc
adc
xor
into
popa
push
sbb
stos
aaa
loopne
out
lock
push
sahf
or
call
pop
scas
mov
lods
or
arpl
cmp
cli
push
ret
mov
push
lock
int
imul
out
imul
inc
shr
and
sbb
into
es
movsb
add
push
pop
lret
push
mov
cli
je
push
dec
jo
popa
mov
push
mov
out
xchg
cmpsb
loopne
mov
mov
scas
jo
push
dec
and
je
mov
and
jno
mov
out
cmp
scas
lods
enter
adcb
inc
mov
inc
mov
leave
aaa
jae
fs
stc
cld
sahf
jo
mov
lret
std
mov
lods
adc
js
jmp
xor
pop
out
call
push
cld
dec
sbb
test
sbb
arpl
and
xchg
mov
cmp
lcall
mov
hlt
lahf
adc
or
and
pop
adc
inc
push
mov
loope
leave
outsl
sub
cmp
lods
adc
cmc
call
mov
jno
xorl
test
push
enter
sarl
out
adc
loop
stc
push
adc
pusha
popl
cltd
cld
loope
shl
adcb
cs
mov
stc
inc
inc
xchg
cmp
xchg
or
mov
xchg
leave
jnp
mov
mov
xchg
imul
mov
andps
fdivr
rolb
and
sahf
push
fldenv
or
dec
out
or
push
and
push
lahf
loopne
mov
test
mov
cmpsl
cmpsb
mov
cld
mov
inc
push
cltd
sub
dec
shr
push
mov
mov
les
and
mov
xor
int
push
pop
scas
xchg
and
lea
push
addr16
xor
mov
jae
call
push
aad
cwtl
sbb
rol
stc
mov
cmc
pushf
sbb
std
test
push
sub
sub
in
sbb
push
cs
fpatan
pop
les
leave
sub
std
mov
roll
mov
nop
lahf
and
push
je
sbb
xchg
stos
dec
imul
cmc
mov
in
dec
fidivrl
mov
lea
add
xor
movsl
and
push
pop
mov
jbe
rorb
push
inc
xchg
mov
inc
add
push
pushf
inc
xor
fwait
jnp
adc
jl
rolb
xchg
idivb
les
cmpsl
jns
adc
stos
cmp
jno
add
out
mov
fcomip
outsl
xor
cs
push
and
push
js
dec
subb
fildl
repnz
cmc
sbbb
sub
xlat
inc
test
cmc
xchg
sbb
fldcw
mov
fmuls
imul
clc
cmp
add
cmc
in
icebp
insb
popa
mov
sub
scas
adc
dec
sbb
xor
lret
fimuls
push
pushl
mov
fbld
inc
cmpsb
fiaddl
faddl
jecxz
std
bound
out
cmp
ljmp
push
rcll
outsl
jle
cmc
adcb
and
scas
mov
add
mov
lret
cmp
arpl
dec
pop
pushf
sub
mov
push
mov
fnstcw
mov
inc
push
push
shlb
cli
test
push
test
inc
xor
or
push
xlat
lods
into
xchg
fimull
push
fwait
inc
pop
pop
pop
sti
mov
jp
ret
add
mov
push
push
es
sub
add
add
test
xor
bound
fisubs
clc
jg
lods
inc
fstpt
push
pusha
aam
push
pop
cmpsb
or
mov
inc
cmpsb
dec
and
ret
test
add
in
sbb
cltd
adc
xor
iret
nop
add
pop
xlat
mov
adc
mov
mov
cmp
jle
out
out
cmpsl
dec
mov
jecxz
inc
mov
lahf
xchg
sarb
inc
adc
data16
pop
sub
sahf
in
les
outsb
mov
cwtl
inc
adc
in
in
mov
sub
inc
xor
sub
push
xor
push
mov
jmp
in
incb
dec
scas
lahf
imul
les
dec
aam
aam
testb
mov
repz
sub
xchg
sbbb
xor
pop
lea
mov
arpl
mov
in
loopne
pop
and
sub
mov
cmpsl
sbb
pop
inc
xor
sub
xchg
lahf
scas
or
xor
rcrb
insb
push
mov
lcall
push
jb
or
mov
cmp
stc
inc
lahf
inc
sbb
pop
int3
sub
ja
push
dec
lock
xor
mov
imul
cmc
mov
mov
push
mov
cmc
sub
fcompl
fdivrl
inc
dec
xchg
movsl
mov
mov
out
negl
out
lods
out
lods
xor
stos
sbbl
cmp
xchg
aas
mov
cwtl
bound
push
add
js
jne
dec
pop
and
push
subl
mov
pop
xlat
sahf
addr16
jnp
mull
sub
jg
stos
in
jne
xor
cwtl
lock
mov
hlt
iret
jg
jbe
out
ljmp
fcoml
int
bound
data16
popf
mov
xchg
push
roll
into
mov
addr16
out
shr
fcoms
mov
cld
test
push
cld
pop
sub
cmp
inc
cmp
sarb
ljmp
ficompl
or
add
pop
cmp
push
call
sbb
ljmp
inc
pushf
push
frstor
xchg
xchg
and
arpl
cmp
in
sub
test
cmp
inc
pop
sbb
lods
fidivrs
cltd
cli
jno
mov
neg
sarb
lret
adc
stos
mov
in
push
out
fs
fsub
movsb
lock
adc
nop
cmp
push
push
mov
jl
faddl
daa
aaa
mov
aam
push
stc
ss
xor
inc
repnz
jnp,pt
call
jb
ret
les
rcr
in
xor
fildl
jmp
xor
pusha
mov
push
mov
test
les
mulb
loope
mov
or
mov
adc
sub
ret
cmp
pusha
adc
mov
mov
push
fdivs
mov
xchg
and
stos
and
cmp
fldenv
add
das
out
sbb
cmc
iret
xchg
lcall
shl
pop
std
es
inc
out
xor
mov
pop
jnp
xchg
hlt
orl
arpl
sub
and
cmp
nop
cwtl
divb
cmpl
pop
cmp
insl
push
movsb
in
dec
adc
inc
xchg
or
add
mov
dec
out
and
mov
icebp
je
nop
fcoml
cwtl
adc
cmp
sub
imul
xor
arpl
icebp
or
lcall
and
in
add
pushf
ds
cmp
popa
add
loop
push
dec
cwtd
ljmp
into
xchg
scas
lods
clc
jns
shrl
mov
out
xor
push
add
cmpsb
cmp
cmpsl
inc
add
add
mov
fwait
subl
push
lcall
sub
rorl
sbb
popf
sbb
mov
xor
add
or
loope
icebp
xchg
leave
dec
mov
aas
sub
xchg
adc
orb
ret
lahf
dec
lea
shrb
repz
pop
in
mov
data16
push
or
js
sub
xchg
hlt
ficomps
sub
sbb
or
add
adc
rcrb
jl
les
in
arpl
push
lds
lret
cmp
fwait
in
push
or
push
or
adc
or
mov
mov
pop
sarl
cmpsb
mov
and
xlat
push
scas
jecxz
cmp
out
mov
add
je
xor
test
jmp
ret
dec
jp
add
cmp
add
mov
xor
jecxz
sahf
mov
int
je
ret
call
add
mov
or
mov
fs
add
cmp
in
push
xchg
clc
push
mov
mov
rcrl
jo
dec
jge
mov
mov
test
es
enter
lcall
cs
adc
inc
mov
mov
jne
pop
add
int3
leave
lret
fistps
jmp
or
scas
pushf
mov
dec
push
xor
insb
test
sbb
loopne
mov
shlb
das
jns
sti
jo
sbb
push
adcb
popf
out
lcall
adc
in
push
movsb
pop
in
out
js
les
out
ds
adc
imul
mov
jbe
jbe
xor
mov
test
cld
rcrl
push
add
pop
jo
cmp
cmp
in
pop
test
add
aad
ss
xorb
mov
pop
scas
sub
hlt
sti
fadd
xchg
mov
and
cmp
loopne
cld
mov
xor
cwtl
cmp
cmp
rcr
inc
mov
sbb
repnz
adc
mov
scas
sub
negl
loop
sub
mov
cmpsb
out
sahf
lcall
stc
mov
hlt
lcall
xchg
pop
inc
xchg
inc
loopne
xlat
dec
mov
or
imul
negb
std
sbbb
cmpsb
aaa
xchg
mov
aas
xchg
mov
push
jge
shr
or
mov
push
fcompl
xor
push
jg
push
fnstsw
cmp
inc
or
adc
jno
jle
push
ds
cltd
sub
int3
inc
adc
shl
ret
adc
andb
jge
dec
popa
int3
or
and
imul
ja
jbe
out
add
in
popf
push
sub
sub
mov
rorl
lret
or
out
mov
dec
and
inc
mov
js
cs
ret
pop
sbb
jbe
in
rorb
pop
incb
pop
repnz
adc
xchg
ret
loopne
mov
cmp
mov
fwait
pop
lods
adc
inc
jl
jecxz
adc
cmc
aaa
sub
or
push
pop
fwait
mov
mov
cs
dec
jno
sti
mov
xlat
into
pushf
movsb
fwait
std
xchg
inc
inc
jns
imul
movsl
pop
mov
addl
outsb
mov
and
pusha
dec
push
or
push
cwtl
mov
testb
xchg
ja
and
call
movsl
push
clc
in
gs
xchg
sti
adc
xlat
gs
and
pop
mov
add
mov
ret
rcr
push
dec
sbbl
sti
scas
ja
xchg
cmp
and
in
fadd
push
sub
imul
xchg
cmp
push
lock
jp
jb
push
pop
adc
sbb
xor
loopne
jmp
stos
xor
sub
fcoms
lds
je
fwait
xlat
paddd
inc
mov
popf
mov
das
pop
cmp
fadds
inc
neg
daa
mov
push
stos
ds
and
xor
xor
cmpsb
das
clc
sub
push
or
or
aad
repz
aaa
mov
xorl
dec
loope
or
push
add
clc
lahf
push
xchg
test
mov
adc
test
in
fwait
sub
movsl
and
fsubl
adc
fimull
and
and
js
adc
dec
xchg
sbb
insb
add
jmp
jae
aaa
mov
aam
scas
xor
fisttpl
daa
sarl
add
iret
dec
sahf
in
iret
loopne
insb
fisttps
es
inc
icebp
jno
push
sbb
lds
jb
pop
sahf
xor
fwait
nop
push
cwtl
mov
fdivrl
movsb
icebp
mov
or
cwtl
pop
xor
stc
movsl
pop
das
add
xchg
push
movsl
jle
inc
push
inc
movsb
sbb
pop
xchg
outsl
aad
mov
mov
cltd
jl
mov
xor
push
mov
xchg
pop
call
outsb
add
inc
add
push
xor
jmp
lea
loop
inc
fcmovne
mov
daa
mov
cli
add
mov
cwtl
mov
mov
stos
out
ds
add
sub
push
jmp
in
inc
lahf
std
clc
xchg
gs
xchg
mov
xchg
data16
mov
sbb
stos
lahf
mov
xor
or
incb
sbb
repz
or
jge
inc
not
outsl
pop
or
mov
dec
jno
push
jecxz
pop
xchg
popf
cli
mov
lret
fsubrs
daa
or
adcl
sti
imul
dec
fsubl
out
loop
movsb
in
jg
int
das
inc
xchg
sbb
pop
subb
xor
rcll
mov
rolb
pop
xchg
lods
sbb
popf
sahf
sub
mov
xor
addr16
insb
mov
call
adc
ret
mov
call
insl
nop
xlat
cmpsw
pop
dec
dec
test
push
inc
xchg
dec
jne
into
cli
flds
or
cmpsl
fistl
ficompl
xchg
jnp
loope
fcompl
popa
xchg
in
data16
cld
retw
mov
add
xor
mov
shlb
xchg
orb
orl
lds
mov
mov
out
fdecstp
dec
and
cmpsl
jo
xor
dec
and
pop
leave
imul
es
push
rcl
loope
shlb
in
push
mov
xchg
int3
movsb
mov
clc
jg
sahf
loope
iret
add
iret
push
push
mov
mov
xchg
xchg
stos
mov
ds
push
popa
mov
sub
stos
mov
inc
lcall
adcl
pop
add
adc
hlt
fcoml
scas
pop
push
fs
pushf
sbb
mov
mov
pop
popf
mov
mov
in
nop
jb
in
out
inc
mov
sbb
into
sbb
mov
repnz
pop
and
dec
dec
and
xchg
xor
mov
inc
xlat
repz
dec
movb
cmpsl
push
test
push
loope
inc
inc
and
cmp
jns
imul
loop
push
fcompl
stos
xchg
pop
fcmovu
sub
push
ss
inc
leave
push
es
addr16
mov
hlt
lret
and
cltd
inc
icebp
sub
xchg
jnp
or
jno
cmp
or
push
jb
adc
mov
inc
xchg
xchg
mov
sub
jne
mov
xor
fucomi
mov
pop
daa
adc
lret
xchg
lods
sti
fdivrp
pop
enter
lock
lods
jle
pop
notb
and
ja
lahf
xchg
lret
fldcw
cmp
ficoms
adc
fmuls
scas
xchg
mov
lret
data16
sahf
arpl
xor
mov
dec
mov
dec
adc
stos
cld
fsubs
hlt
fstl
add
aad
lret
sbb
push
gs
adc
hlt
pop
push
or
xlat
adc
das
adc
cmp
scas
pop
lock
cld
mov
cmc
cmc
and
je
pop
filds
imulb
rorb
and
cmp
jl
sbb
js
sbb
xchg
ret
je
bound
mov
mov
aam
je
xchg
dec
and
pushf
xchg
or
ret
rorl
and
loopne
test
cs
daa
and
shl
sbb
insb
mov
xchg
adc
cmp
scas
jns
loopne
imul
scas
mov
fwait
movsl
push
mov
xchg
int
sbb
dec
xor
jge
test
push
stos
out
pop
mov
or
dec
push
les
fildll
mov
int
rorb
sbb
inc
call
mov
aaa
repz
sub
movsb
add
adc
dec
sbb
mov
test
in
andl
add
mov
and
push
and
flds
mov
stos
add
pop
aam
adcl
iret
mov
fcoml
aaa
mov
xchg
push
jge
cltd
fdivrl
dec
jl
cmp
or
scas
loop
js
arpl
test
stos
bnd
adcb
stos
pop
faddp
insb
adc
dec
sub
xor
pop
mov
js
mov
mov
pop
add
jle
add
cmp
xchg
leave
pop
out
je
and
sarb
popa
or
cmp
pop
pop
pop
mov
test
jl
rcl
jno
sbb
js
lea
dec
scas
xor
iret
sbb
out
add
dec
insl
sbb
dec
pop
in
pop
mov
pop
xchg
imul
mov
std
xor
mov
push
lahf
out
lahf
fcoml
in
test
icebp
cmp
xor
inc
cmc
xor
in
pop
aam
bound
cld
fcmovne
pop
jle
sub
mov
push
and
adc
dec
xchg
add
and
cli
push
fsubs
mov
xchg
into
mov
shll
nop
pushl
sbb
into
out
xchg
stc
idivl
ret
pusha
dec
lret
lds
fdivrl
orl
mov
xchg
sbb
sbb
lea
mov
gs
inc
xchg
inc
push
add
xchg
pop
sbb
xchg
fistl
pop
in
mov
std
xchg
push
subb
repnz
dec
xor
mov
popf
adc
lret
add
jmp
aad
or
int3
lret
mov
pop
cmp
out
mov
adc
rcll
fsubr
fidivrl
dec
and
dec
adc
mov
cmpsb
fwait
clc
xor
fwait
in
xchg
pop
inc
cs
inc
jge
inc
mov
mov
xor
sub
stos
gs
mov
or
or
push
loopne
xchg
out
loopne
jge
testb
or
icebp
flds
pop
aaa
add
jp
and
mov
aas
aad
pop
push
divb
xor
jmp
jl
xchg
and
sar
call
in
inc
loopne,pn
sub
jno
gs
lcall
and
mov
sub
jae
mov
cmp
sub
cmp
scas
xchg
xchg
loopne
iret
es
cmp
inc
jo
out
imul
pop
sarb
mov
loopne
dec
insb
aaa
popa
mov
mov
mov
dec
push
mov
fs
mov
aaa
je
data16
es
push
push
in
mov
push
enter
xor
mov
xchg
sarl
movsb
mov
lds
addr16
sub
pusha
adc
jg
cmp
dec
add
call
fwait
mov
mov
pop
cmpw
jle
mov
sub
lods
movsl
mov
mov
xchg
notl
fcmovnbe
bound
or
or
jns
std
ja
pop
xor
mov
pop
stos
stc
rclb
add
mov
ja
push
push
ret
sbb
and
xor
mov
lcall
je
scas
lret
shl
mov
add
sub
mov
scas
push
pop
divl
mov
pop
imul
xlat
xchg
jecxz
sub
loope
addb
jne
push
or
leave
jns
aam
xchg
xchg
repnz
jecxz
or
jno
push
or
loop
mov
test
ror
sahf
or
in
push
popf
push
jns
push
xlat
inc
sar
sub
pop
xlat
xor
sarl
dec
loopne
lahf
adc
adc
aaa
lret
out
xchg
js
cmp
std
xchg
sub
enter
jb
and
sub
out
jmp
push
sbbb
xchg
jp
pop
enter
and
stc
inc
cmp
ss
fdivl
sbb
loopne
scas
sub
push
sbb
popa
xor
jl
aad
pop
mov
xor
mov
add
call
or
lock
jle
insl
inc
dec
cwtl
test
push
aad
push
mov
dec
xchg
and
inc
jg
pop
cmp
pop
sub
xchg
cmpsl
jae
sub
pop
arpl
test
inc
repz
cmp
aas
pop
outsl
cmpb
out
mov
mov
es
mov
jbe
rolb
dec
adcl
push
inc
dec
push
pop
lods
xor
jb
lods
faddp
int
pop
jmp
nop
mov
fidivl
and
addr16
lock
pop
aad
push
sub
push
jle
pop
adc
les
andl
mov
mov
out
mov
cld
mov
sbb
mov
inc
xor
mul
inc
dec
jecxz
pop
mov
mov
inc
cmp
fcoms
and
ret
sub
sub
add
jg
add
push
lcall
dec
inc
jno
ja
and
mov
mov
dec
jns
out
lds
daa
xor
jmp
popa
call
iret
aaa
mov
jb
push
or
xchg
jg
ja
cmp
mov
in
adc
jb
jp
ret
fistl
bnd
jmp
mov
clc
xor
adc
mov
xor
in
mov
and
repz
pop
push
cmpsl
mov
sub
fidivl
jno
mov
inc
mov
jnp
adc
movsl
mov
add
push
std
hlt
mov
inc
rcrb
lods
mov
pop
or
bound
std
ja
inc
stos
mov
push
adc
jp
push
add
rclb
pop
pop
xchg
xor
aam
data16
mov
cltd
adc
loop
jnp
inc
jno
push
jecxz
pushf
cmp
cmc
dec
jae
adc
mov
mov
js
or
enter
adc
dec
mov
or
cmc
das
leave
rorl
das
ds
or
movsl
je
aad
lods
xchg
add
push
lahf
xor
mov
adc
mov
push
inc
mov
mov
xor
imul
outsl
pop
daa
cli
rep
insb
cltd
mov
inc
jle
rorb
stos
jg
sbb
pushf
mov
std
xchg
inc
add
aam
xor
stos
arpl
inc
enter
pop
mov
and
lds
xchg
cmc
inc
sub
movsl
sbb
lods
test
fsubrp
stos
jge
inc
outsb
addr16
inc
mov
sti
pop
pop
imul
xor
lret
out
xor
sbb
xor
push
stos
or
mov
sub
cmp
shlb
adc
aad
push
push
sbb
mov
loop
lcall
pop
fmuls
mov
sbb
push
nop
cmpsb
xchg
push
mov
pop
or
add
cmpsb
mov
inc
and
fdivrp
mov
dec
xlat
rcll
sub
xchg
jbe
adc
dec
shlb
inc
dec
ja
test
and
clc
dec
fwait
dec
lret
ss
push
mov
sarb
ljmp
fidivl
lods
pop
jg
aaa
jg
test
mov
pop
cli
in
inc
mov
loop
in
repz
xchg
ljmp
add
in
and
xor
jmp
jnp
sub
in
fstpt
sub
int
test
inc
pop
pop
scas
cld
dec
int
jl
and
iret
aad
sub
dec
push
xor
gs
andb
data16
adc
pop
xor
add
mov
jle
bound
jge
pop
mov
add
adc
cmp
stos
lahf
and
jns
sahf
or
xchg
or
daa
mov
cmp
lret
bound
imul
shr
or
mov
pop
inc
cmp
adc
xchg
call
mov
mov
mov
mov
jns
cld
and
pop
xchg
ss
and
adc
loopne
in
cltd
pop
pop
add
fsub
mov
push
xchg
adc
test
and
mov
dec
pop
xor
outsb
adc
pop
in
cwtl
and
fwait
or
mov
pop
cld
push
jecxz
daa
push
xor
inc
ret
pushf
inc
inc
jae
test
xchg
dec
jmp
push
inc
xchg
mov
scas
imul
pop
ret
int
mul
jg
gs
mov
loope
addr16
je
pop
jp
fmulp
push
je
lahf
cmp
push
sub
shll
inc
notl
pusha
xorb
lcall
mov
pop
jmp
jecxz
or
add
jae
dec
xchg
sub
fdivrs
cmp
lods
and
cmpsb
jmp
or
mov
adc
scas
xchg
fstps
fcmovne
xchg
in
addr16
push
lcall
daa
dec
lods
inc
leave
adc
cmp
fdivrl
aad
mov
jmp
add
mov
cmp
pop
mov
repnz
and
or
popf
push
test
push
in
sarb
xorl
in
cmp
inc
fs
nop
shrl
lahf
push
jae
rclb
push
lock
aam
hlt
jb
jmp
std
stos
push
xor
cmp
adc
shrb
dec
out
add
cmp
xchg
stc
xor
lods
iret
insb
lea
ja
xlat
std
mov
cs
pop
mov
leave
cli
mov
movsb
lea
push
xor
scas
add
shr
mov
aad
leave
push
hlt
popl
jns
mov
popa
or
mov
pop
pop
fsubs
push
std
mov
dec
xchg
inc
into
movsl
fs
mov
xchg
mov
pop
les
fptan
nop
sub
push
sahf
or
orb
out
aad
mov
sub
mov
les
cmp
roll
and
cwtl
sbb
xor
fwait
inc
cmc
add
ds
adc
in
sbbl
inc
fdivrs
sbb
pop
xor
push
int3
sbb
cmp
imul
nop
flds
adc
mov
or
inc
repz
mov
push
xchg
xchg
in
dec
and
inc
jne
mov
mov
lret
xor
dec
ffree
shll
push
mov
sahf
mov
sti
jns
rorb
iret
pop
scas
imul
pop
or
dec
sarl
sbb
int
xor
negl
fcoml
leave
mov
test
fdivl
inc
adc
cld
push
xor
mov
adc
push
push
stos
inc
fstps
mov
les
lods
sbb
xor
jbe
repnz
rcrb
mov
jne
jp
inc
mov
sub
adc
insl
dec
cwtl
sbb
loope
mov
pop
xor
pop
or
or
movsl
pushf
dec
in
xchg
sahf
sub
cmp
into
lea
sbb
xchg
push
jmp
mov
or
fs
mov
roll
mov
pushf
jg
sbb
jmp
push
add
adc
cmp
rcll
icebp
out
inc
jp
icebp
mov
mov
push
lds
push
sub
fwait
movntps
testl
das
or
addr16
pop
inc
sbb
mov
xor
jnp
mov
push
testb
aam
hlt
mov
mov
and
adc
adc
push
nop
and
adc
cltd
mov
sbb
cld
ret
adc
repnz
movsl
adc
mov
xchg
mov
popa
aad
seto
dec
lret
mov
outsb
pusha
je
out
pop
xchg
mov
les
push
xchg
dec
jno
and
mov
xchg
insb
dec
out
outsb
push
push
aam
test
fiadds
out
nop
fsts
inc
lods
jmp
pop
orl
fnstcw
mov
push
or
jecxz
out
icebp
ja
dec
lods
xor
fwait
ret
mov
cs
jno
sub
push
out
push
mov
mov
loopne
or
sub
in
lahf
dec
sub
or
subb
jo
gs
cmp
push
testb
add
sub
and
mov
or
iret
negb
daa
push
cmpsl
pop
cmp
repz
bound
pop
push
std
and
sbb
push
mov
inc
mov
or
mov
adc
les
rcll
mov
xor
pop
pop
cmp
mov
adc
dec
repz
sbb
push
mov
lock
mov
mov
in
pop
ss
inc
xor
sbb
stos
mov
dec
imul
fs
jmp
clc
pop
sahf
pop
mov
stos
idivb
out
out
repz
mov
push
in
int
outsb
xlat
sahf
sbb
imulb
hlt
mov
inc
daa
popa
iret
fsub
mov
push
jmp
and
jno
aas
mov
sub
adcl
in
mov
orl
dec
lods
xchg
push
das
out
int3
test
adc
push
call
sbb
xor
stc
call
xor
xchg
push
stos
mov
fs
fcmovnu
mov
xorl
ds
jp
sbb
xor
iret
shrb
ja
aaa
inc
and
aad
aam
imul
mov
popf
out
gs
cwtl
xorl
je
xchg
xor
lret
pop
ret
push
and
notb
mov
andl
outsl
mov
aas
cld
sahf
insl
sub
pop
stc
cmp
adc
test
xchg
out
pusha
test
sti
lcall
xchg
push
in
cmp
cmp
sub
gs
inc
xchg
jbe
or
insb
lea
push
iret
mov
int3
mov
lea
aam
mov
dec
sbb
rcr
mov
push
xor
sbb
cld
mov
push
dec
cwtl
pop
inc
lods
sahf
in
add
rol
lret
in
lods
nop
pop
add
adc
repnz
mov
fimuls
mov
ljmp
xlat
lcall
mov
test
mov
dec
cmp
rorb
dec
mov
mov
fs
mov
jp
mov
xchg
popa
push
pop
mov
sub
add
sbb
aas
pop
sbb
decb
fdivl
data16
xor
mov
mov
push
add
fmul
inc
aaa
pushf
mov
pop
hlt
and
mov
fimuls
add
xchg
inc
nop
loopne
cmpsl
fwait
outsl
in
test
xchg
lcall
mov
in
ret
adc
push
push
out
in
pop
or
mov
push
push
inc
out
cmp
out
shll
call
mov
mov
lds
jecxz
stc
dec
ljmp
cmp
adc
stos
inc
std
jb
lret
outsb
cmpl
jmp
adc
jecxz
call
les
scas
mov
mov
sub
and
dec
mov
lea
fwait
and
ret
fnstcw
fwait
test
ja
and
jbe
pusha
lods
loop
stos
leave
shlb
fwait
hlt
dec
stos
shll
xchg
push
aam
mov
mov
pop
xor
icebp
or
xor
test
pushf
ds
sbb
xor
xchg
lock
clc
enter
fcomi
cmp
aas
fscale
push
gs
lahf
pop
jl
mov
repz
cwtl
cld
sub
sub
nop
inc
call
jns
jp
outsl
insb
push
xchg
enter
mov
inc
push
push
insb
xchg
rcrl
cmp
in
lcall
jbe
mov
shrb
lods
bound
or
dec
imul
pusha
jecxz
xor
fs
or
out
jo
push
xor
sbb
push
adc
in
imul
jmp
insb
out
cmp
inc
stos
jns
pop
dec
pop
lods
scas
mov
dec
push
vpaddsw
mov
and
setae
arpl
push
mov
stc
ljmp
testb
jne
fcos
test
icebp
sarb
or
shlb
and
scas
sub
mov
dec
mov
adc
cmp
sub
mov
mov
push
push
call
aaa
js
in
jmp
jbe
push
sbb
or
pop
ret
insb
mov
mov
test
dec
cmp
leave
scas
movsl
xor
pop
jge
lea
sqrtps
cmc
inc
mov
push
add
xor
sub
jno
dec
ja
inc
mov
mov
mov
mov
ds
push
ja
xchg
arpl
pushf
iret
cmp
push
dec
lods
mov
gs
sbb
aas
or
adc
scas
in
cld
out
arpl
stos
pop
jl
dec
pop
sti
push
or
add
jmp
push
fmull
xchg
das
idivb
adcb
cli
adc
add
push
cld
and
loope
push
jmp
sub
sbb
imul
push
push
lea
clc
outsb
and
data16
into
sbb
sub
jp,pt
add
call
push
ret
jge
sbb
aas
mov
call
aaa
lods
enter
lods
loopne
mov
rcll
je
mov
push
stc
repnz
cmp
xchg
xchg
or
or
shll
dec
cmp
and
lret
test
aad
cmp
jg
nop
push
inc
aam
loopne
in
pop
inc
ljmp
shlb
cmp
inc
test
xchg
out
or
test
inc
inc
lahf
cmp
pop
roll
dec
icebp
in
pop
push
repz
push
mov
mov
sub
mov
in
fwait
mov
pop
push
or
jecxz
cwtl
lock
test
mov
or
push
je
xor
pop
jmp
test
adc
lret
ret
mov
loop
mov
and
lahf
xchg
ja
add
cmp
cwtl
jno
push
push
pop
add
ret
cmp
inc
pop
xor
sub
fisttps
cld
test
data16
dec
test
in
outsl
jmp
arpl
add
mov
je
cmpsl
sub
add
insl
jmp
inc
cli
or
shl
mov
mov
push
shrb
push
cwtl
arpl
sub
aam
xchg
push
add
addb
dec
lret
pop
cwtl
les
xor
cmp
jae
in
test
fcoms
mov
dec
jnp
sbb
popf
mov
pop
sbb
ja
dec
stos
pushl
inc
enter
mov
outsl
aas
mov
scas
daa
pop
cli
mov
lock
or
jo
pop
aam
imul
add
jb
push
or
xor
mov
dec
jmp
jnp
jne
mov
sarl
repz
hlt
adc
bound
sbb
mov
xlat
fsubrp
in
add
cs
sbb
or
jp
and
mov
es
jno
xor
push
aad
push
stc
or
jb
and
jo
xchg
sbbl
loopne
repz
lea
push
jnp
mov
out
mov
mov
push
aas
push
fs
mov
lret
cmp
arpl
mov
jp
outsb
push
push
sub
in
xor
xor
rcrb
add
sub
add
adc
pop
and
adc
lods
pop
or
mov
jne
pop
jne
fwait
mov
sar
cs
pop
jmp
es
shll
xor
lods
rolb
js
adc
mov
or
into
push
mov
lock
pushl
movsb
ret
fiadds
sti
andb
pop
mov
fsubrs
ja
cmp
test
into
ds
jl
add
cltd
jg
stc
mov
call
loope
jae
adc
mov
stos
push
cmp
int
mov
fisubrs
adc
xor
lea
bound
pop
xchg
push
push
test
sbb
loope
ss
aaa
es
or
data16
imul
xchg
adc
fldt
popa
add
mov
sbb
add
call
cmc
add
stos
push
int
addr16
push
jge
jg
sub
xchg
jbe
sub
cltd
je
pop
add
add
pusha
popa
jle
in
outsl
add
lds
xor
and
mov
push
or
jns
xchg
test
sti
inc
insl
xchg
mov
shll
push
push
dec
add
js
push
imul
in
fdivr
fldl
icebp
icebp
fists
jl
lods
ret
aad
push
pushf
jbe
sbb
pop
dec
push
jle
hlt
pusha
xchg
pop
pusha
out
sub
mov
cmp
cli
sbb
insl
push
jne
mov
repz
cmp
jae
js
lea
mov
jo
lock
adc
mov
cmp
jl
pop
gs
push
cwtl
test
enter
cmp
cmp
pop
popf
rorw
inc
dec
mov
or
gs
or
adc
xchg
inc
mov
add
adc
fimuls
pop
mov
leave
jo
out
jns
pushf
lcall
adc
arpl
add
push
addr16
add
icebp
sbb
or
cmp
xchg
outsl
shrb
lret
push
sahf
or
enter
mov
mov
and
or
imul
cmc
or
pop
lock
in
jp
cmp
xor
push
xchg
les
iret
adc
lock
dec
icebp
xchg
int
je
lcall
pop
or
outsl
cmpxchg
pushf
mov
in
scas
or
add
inc
inc
mov
xorl
dec
sbb
pushf
das
pop
cmpsb
mov
inc
dec
cwtl
imul
xchg
fidivrs
xchg
dec
push
jl
les
cmpsb
shl
stc
pushf
mov
inc
adc
dec
lds
dec
inc
mov
insb
insl
test
cmp
dec
aad
and
sarb
mov
push
push
inc
inc
repnz
lock
pop
in
adc
pop
and
cmc
xchg
add
sbbl
aad
test
stos
sti
bswap
out
out
pop
imul
push
rcr
cwtl
lcall
lods
lock
push
in
push
jge
rcrb
movsb
sahf
adc
pop
jae,pt
add
or
push
mov
inc
cmp
or
push
add
into
mov
test
movsb
mov
ja
jno
push
xlat
int3
or
sbb
push
mov
xchg
pop
xchg
fstpl
int3
jg
xchg
jnp
pop
pop
pop
mov
outsb
paddsw
fcmovnb
loope
movsl
les
mov
push
divb
sub
adc
dec
or
lahf
kortestw
push
jne
aaa
add
xchg
dec
cmp
movsl
mov
pop
dec
sub
pop
mov
cmc
daa
xor
and
jecxz
loopne
mov
sbb
int3
aam
gs
xor
mov
and
jae
arpl
mov
iret
into
jmp
jbe
or
mov
fwait
das
lea
sub
jb
mov
repz
inc
jg
jno
push
push
gs
add
lods
jne
push
mov
sub
test
mov
movsl
stos
mov
lahf
test
push
mov
inc
repnz
mov
loope
out
pushf
jb
cltd
push
add
add
push
out
jl
lds
sbb
xchg
rcl
ds
xchg
push
jae
jbe
jno
xchg
dec
or
cmp
jns
xor
sbb
mov
sub
jmp
dec
frstor
into
or
mov
out
mov
xchg
ret
in
fcoms
sbb
insb
mov
arpl
aaa
mov
in
inc
inc
inc
lods
push
mov
mov
mov
fstps
xor
add
or
das
mov
lret
inc
lds
mov
lods
dec
jns
out
xchg
fldt
fsub
dec
jno
stos
jno
mov
inc
mov
mov
mov
pop
add
out
mov
out
movsl
and
jbe
inc
pushf
mov
push
orb
enter
insl
mov
adc
or
inc
cltd
je
pushf
mov
xor
sub
or
xor
popf
sub
lods
fcoml
inc
add
ljmp
in
and
xchg
pop
inc
push
and
sarl
cltd
mov
jl
pop
call
fnstcw
adc
hlt
loop
and
aas
jne
add
out
iret
push
pop
lahf
shll
jmp
sbbl
dec
or
add
push
daa
push
int
mov
stc
pop
fidivl
insb
adc
jp
es
sbb
inc
cmpsl
push
adc
xchg
push
xchg
push
jmp
inc
xchg
mov
push
movsb
dec
bound
iret
add
test
ss
cmp
xchg
xlat
xchg
or
push
mov
scas
jne
mov
inc
ja
jecxz
add
test
aas
xorl
pop
sbbl
mov
fisttpll
aaa
addr16
fidivrs
inc
lds
and
test
or
or
adc
aad
dec
cmpsb
popa
mov
jg
fadds
cmp
xchg
xchg
call
mov
mov
mov
sti
repnz
mov
or
stos
xlat
stos
hlt
jae
sbb
cmp
push
xor
mov
dec
jbe
add
neg
mov
sbb
push
das
sbb
mov
xor
xchg
sub
test
out
xor
outsb
mov
jae
sbb
jno
lahf
xorb
lds
sbb
pop
shll
dec
xchg
sub
sbb
leave
xlat
mov
mov
loopne
xor
push
mov
jp
sti
inc
outsb
pusha
sbbl
aad
adc
loopne
jo
aas
jno
cs
push
or
mov
sub
ljmp
push
imul
mov
les
lahf
les
jg
push
mov
cmp
and
lret
inc
rorl
pop
inc
xlat
pop
add
sbb
sbb
popl
jne
mov
inc
dec
popa
adc
in
add
jne
imul
rclb
adc
sbb
lret
mov
fisubs
push
dec
xchg
fwait
cmp
ret
test
lds
push
enter
adc
pmaxsw
mov
lds
jnp
pop
popf
xor
push
add
sbb
loopne
jmp
gs
mov
fists
push
lret
cmc
xchg
push
add
sbb
lcall
mov
push
mov
mov
lcall
push
imul
xor
dec
mov
out
js
xor
dec
aad
inc
dec
pop
repz
fs
test
into
test
adc
dec
jp
cmp
push
mov
inc
pop
loopne
xchg
mov
ljmp
xor
out
mov
pop
jo
add
xchg
lret
cmpsb
mov
stos
jecxz
stos
push
stc
jbe
cmc
lods
loop
jmp
pop
add
das
test
and
push
jmp
scas
out
mov
mov
dec
dec
lcall
push
fnstcw
push
dec
es
std
sub
pop
dec
adc
imul
fadd
xor
test
mov
sub
rclb
std
jle
mov
push
pop
mov
pop
xchg
test
cmc
xchg
aad
push
jno
jnp
scas
int
jb
mov
jge
xchg
dec
shlb
xchg
mov
mov
jnp
iret
xor
fcmovnb
inc
push
filds
push
mov
pusha
lods
inc
mov
test
out
inc
popf
adc
inc
adc
pop
lcall
xchg
inc
mov
out
cmp
sub
stos
pop
add
jbe
or
rclb
icebp
cmp
mov
pop
sub
fucomi
inc
imul
or
mov
sahf
and
push
rorb
mov
rorl
cltd
lcall
ret
cld
xchg
dec
xchg
mov
cs
lock
out
aad
xor
notb
push
pop
sub
int
lahf
and
sahf
into
pop
xorl
sub
sti
jae
lock
dec
mov
and
cmc
add
repnz
pmaxub
mov
inc
or
in
jo
cmp
jo
mov
std
outsb
shlb
out
dec
mov
ljmp
je
rcll
inc
dec
ljmp
dec
push
call
cltd
jbe
lock
shufps
test
ret
sbb
adc
sbb
test
or
mov
dec
ficompl
hlt
lret
rcrl
and
sbb
bound
and
sti
fsubl
cmp
add
arpl
dec
inc
inc
push
add
nop
movsb
fsts
fsts
sub
jg
rcrb
lret
shrl
mov
adcl
mov
ret
xchg
movsl
jnp
std
jb
push
cmc
addb
sub
aad
fmull
jae
sbb
icebp
jne
mov
inc
pop
xchg
and
mov
sbb
std
adc
pop
divb
jnp
aaa
dec
adcb
pop
js
push
pop
repz
mov
dec
pop
jo
sbb
xchg
cmp
movsb
out
iret
cmpsl
and
xchg
xor
mov
jp
add
lcall
cmp
hlt
test
rcrl
mov
jp
adcl
movsb
test
jns
insb
leave
in
mov
adc
mov
loope
std
repnz
scas
sbb
dec
pop
add
icebp
imul
sub
mov
iret
ss
add
mov
outsl
pop
pusha
pop
mov
sub
into
ret
fstpt
adc
pop
fldl
fisubs
pushf
lods
sbb
int3
sarb
mov
popf
into
xchg
sub
mov
jae
jbe
mov
xor
push
jnp
adc
movsl
sbb
fmulp
cltd
loopne
rcr
lods
dec
cmpsl
scas
int
jmp
dec
fxch
mov
sub
pop
jne
inc
leave
jae
cmpb
enter
xor
aas
push
arpl
mov
jne
mov
repnz
inc
clc
scas
mov
xchg
ds
mov
popa
mov
push
or
cld
in
fisttpl
test
out
stos
dec
call
adc
jmp
add
stos
mov
mov
xchg
ss
pop
adcb
dec
or
icebp
idivb
mov
xor
mov
pop
xchg
clc
mov
inc
lret
cmp
mov
or
mov
xor
inc
rcl
mov
cmc
dec
pop
jno
jne
scas
stos
in
mov
loope
aam
push
std
scas
sbb
pop
ror
ja
sub
dec
sbb
test
dec
inc
aam
pop
int3
rclb
xchg
pusha
call
outsb
adcb
lock
fisttpl
clc
je
not
cs
push
shrl
imul
lock
leave
sbb
or
dec
nop
mov
inc
sbb
jne
sub
daa
xchg
sbb
movsb
sahf
xor
loop
gs
and
cld
sub
aad
mov
adc
sub
out
sub
insb
pop
push
test
jnp
fwait
mov
pushf
mov
pop
cmc
mov
fists
sub
mov
pop
fsub
sahf
pop
inc
adc
dec
andl
add
add
or
popa
shl
sub
outsl
movsl
jno
mov
scas
mov
adc
or
or
pusha
daa
pop
mov
pop
icebp
into
rorb
jnp
icebp
jne
pusha
insb
stos
xor
out
les
in
in
aas
xchg
scas
outsb
clc
stos
adc
xor
mov
cli
ljmp
cltd
xor
sarl
repz
jnp
cmp
gs
or
je
mov
mov
loop
dec
in
xchg
movsl
pop
lods
or
int
or
jns
sbb
pop
rcll
sub
sbb
push
push
xchg
jp
xchg
cmp
inc
dec
mov
je
push
jmp
out
icebp
jmp
pop
ret
in
mov
jb
lock
in
ljmp
or
push
jmp
outsb
testl
jne
push
fimull
jecxz
es
arpl
sbb
gs
cwtl
mov
rorl
xchg
mov
clc
nop
cld
mov
in
sub
out
jge
shll
fnsave
cmc
pop
lods
push
sbb
pop
shl
hlt
into
lret
dec
dec
xor
mov
arpl
jmp
push
mov
lods
xor
lea
cmp
ja
cmpl
out
inc
loope
les
xor
loope
mov
sub
and
jmp
mov
xor
xchg
jbe
roll
xchg
or
and
dec
adc
inc
pop
add
ficoml
mov
dec
popa
mov
das
jge
cld
mov
jp
ret
mull
or
sbb
jns
or
test
clc
cli
jnp
push
xchg
es
pop
dec
sbb
es
aaa
daa
mov
mov
lea
hlt
push
push
xor
hlt
lds
add
mov
mov
in
idivl
sbb
ror
sbb
xchg
sub
pop
int
loopne
mov
mov
in
mov
inc
dec
sub
je
shrb
ret
clc
xchg
pop
mov
in
sbb
lea
inc
pop
cmovg
xchg
xor
inc
outsb
std
int
or
sbb
cmpl
mov
xor
hlt
call
dec
fs
xor
bound
das
dec
daa
les
ss
and
mov
lret
cs
daa
mov
les
hlt
or
mov
xor
fdivrl
push
mov
arpl
out
cmp
push
or
xchg
push
fidivrs
push
mov
cld
jbe
sti
loope
fdivrl
ficoml
bound
and
ja
loope
in
mov
cli
cld
das
mov
jb
call
adc
sub
xor
pop
adc
gs
xor
and
adc
xchg
outsb
push
sahf
xor
jge
daa
jnp
pop
fwait
out
addl
xchg
sbb
pop
mov
or
mov
lahf
lret
mov
loop
sarl
imul
ss
cmp
cmp
lock
jp
stos
repz
sub
rcrl
xchg
mov
aas
dec
ss
cmp
or
int3
xchg
lcall
jbe
iret
mov
xchg
and
mov
pop
fnstcw
xor
cmp
sbb
or
push
shll
pop
out
cmpl
cli
push
jae
es
mov
addb
jg
cmp
jle
jmp
pop
lods
mov
sti
rol
push
add
xor
cmp
cmp
sbb
sahf
mov
push
fs
adc
mov
sub
xchg
cmp
insl
in
mov
sbb
hlt
adc
mov
xchg
adcl
arpl
dec
push
repz
pop
dec
orl
lds
decb
push
pushf
mov
sahf
adc
pop
out
sbb
test
pop
jbe
mov
retw
adcl
cld
fcompl
test
or
mov
scas
xor
push
pushf
popf
std
xor
nop
or
cmpsb
pop
mov
jns
lods
gs
fdivrl
popa
jae
nop
insb
cmpsb
shr
nop
or
mov
arpl
outsb
sub
pop
es
cmp
push
lods
add
sbb
cmpsb
xor
cld
and
out
sti
loope
ss
pop
xor
scas
and
imulb
ret
out
pop
ljmp
mov
sub
cmpsb
lret
ss
push
inc
jb
adc
adc
dec
nop
dec
fs
adc
arpl
mov
sti
and
pop
push
mov
push
movsl
xor
xchg
insl
aas
sahf
xchg
repz
stc
je
mov
and
pop
push
iret
mov
cmp
add
add
mov
fs
add
int3
je
sub
movsl
mov
insb
mul
lret
lret
cmp
fdivs
mov
jl
dec
imul
lods
shl
pushf
cmp
in
pop
pop
pop
inc
sub
nop
xor
mov
fnstenv
cmp
or
daa
fs
lcall
xlat
bound
cld
ret
repnz
xchg
jne
add
loop
fnstenv
repz
xlat
ja
mov
out
pop
cmp
fnstsw
aaa
push
out
iret
ljmp
sub
mov
test
jl
das
lods
js
cmpsl
lcall
jae
stos
pop
hlt
in
je
shll
add
jge
pop
push
mov
cmp
ja
jl
jno
stos
lds
in
mov
mov
jbe
inc
popa
mov
lea
and
jl
pop
ret
aaa
mov
push
loope
lea
ror
fadds
mov
lock
into
xor
ljmp
xor
scas
sub
sub
xor
or
into
inc
xlat
and
or
push
xchg
in
mov
fwait
mov
cmp
int
xchg
fimull
cmp
sbb
adc
out
cmpsl
in
sub
lcall
sub
lret
xchg
mov
lods
xlat
add
jns
daa
push
clc
inc
std
jo
fwait
cmovge
or
stc
pop
js
test
add
bound
lds
push
lcall
cs
inc
push
xchg
add
jmp
test
out
cld
sbb
fcomps
test
sbb
inc
fwait
xor
jecxz
jecxz
das
fsubs
lods
inc
repz
nop
daa
mov
insb
stos
mov
outsl
inc
mov
dec
push
push
lcall
insl
imul
lds
lahf
lcall
cmp
fiaddl
scas
adc
push
and
or
mov
xchg
lcall
lock
pop
lret
push
int3
push
mov
xchg
scas
cmp
sbb
push
inc
popa
dec
lock
popa
pop
xor
addl
pop
xor
xor
loope
cltd
or
jns
stc
roll
jmp
xor
mov
fs
hlt
push
fidivrs
jmp
popa
xor
mov
repz
push
testb
push
xchg
roll
fucom
aam
fidivrl
mov
lcall
pop
push
ficoms
mov
pop
sarb
fstl
xor
or
mov
pop
cmp
out
cmp
jno
push
jmp
pop
add
cmp
mov
xlat
es
scas
adc
orl
mov
cmc
cltd
lods
mov
push
pop
jecxz
mov
adc
int
add
sub
in
sub
jg
cmp
jl
in
test
jle
jp
out
in
dec
cmc
xor
mov
cld
mov
jno
push
mov
add
jp
or
sbb
fldt
inc
add
dec
cvtpi2ps
lock
and
mov
cmp
jp
jne
cmc
pusha
push
lds
xchg
and
cwtl
mov
and
or
popf
jne
idivl
js
sbb
push
test
and
imull
dec
int
mov
jmp
cli
pop
loop
lods
mov
and
mov
inc
in
ss
add
js
enterw
aam
jg
icebp
cmpsl
mov
xlat
cmp
push
outsb
popa
mov
pushf
ljmp
xchg
mov
bound
into
fcmovb
cld
hlt
xchg
out
jo
mov
ret
stos
test
pusha
adc
lahf
cmp
xchg
mov
cmp
push
in
mov
xor
pushf
add
in
and
and
cmp
push
out
in
cltd
jnp
sti
es
add
and
jnp
push
mul
jno
sbb
insl
ss
mov
adc
cli
out
jbe
nop
outsb
jp
cmp
push
or
in
jb
shlb
mov
sbb
fwait
outsl
adc
out
mov
insl
movsb
or
inc
jnp
sub
imul
imul
xchg
insb
call
add
sti
das
repz
leave
fs
shrb
into
push
cmp
sbb
andb
rolb
sbb
aam
adc
sbb
add
mov
sti
mov
int
cmp
lods
xlat
mov
loopne
loop
stos
cmpl
jmp
mov
jae
bnd
mov
push
xor
in
push
lds
cs
aas
dec
adc
cmp
sbb
hlt
and
push
gs
insb
jg
lret
out
pushf
cmp
daa
push
lret
sar
lret
fnstsw
xchg
decb
mov
loopne
enter
dec
fsts
lret
push
mov
in
jmp
dec
mov
int
jae
lods
mov
loope
inc
mov
js
xchg
andb
cwtl
insl
shlb
stos
add
and
xor
out
or
adc
lret
in
push
mov
ficompl
stos
or
dec
push
sbb
lock
int
scas
xchg
pushf
cs
mov
lock
aaa
pusha
pop
pop
lret
pop
add
je
je
data16
cmp
push
mov
sub
fbstp
lds
stc
xchg
jmp
mov
rcrb
pushf
loope
out
dec
push
pop
fcmove
pusha
push
xor
add
push
jg
jge
push
jle
incb
dec
rcr
outsl
sahf
sub
jle
shll
xor
push
clc
in
sub
cmpsl
cmp
mov
sbb
jp
or
mov
fbld
inc
mov
das
add
ss
cltd
adc
fs
movsl
mov
andps
jb
push
decl
pop
or
xor
push
sar
orb
stc
mov
subb
push
jge
and
out
cli
in
jae
imul
scas
xor
dec
xor
xchg
push
sub
jns
or
or
sub
incb
xchg
inc
insl
je
popa
lock
stos
xor
in
pop
mov
xchg
fiaddl
lea
movsb
call
negl
cmpsl
mov
cltd
cs
push
test
sbb
stc
imul
out
shrl
es
and
and
lahf
dec
jo
aam
sbb
inc
fiaddl
push
lcall
dec
and
cmpsl
dec
loop
xchg
aaa
outsb
cld
xor
xchg
jno
je
or
push
lcall
sub
mov
push
mov
adc
out
add
xor
loope
xchg
xor
rolb
or
jl
add
mov
push
xchg
push
lret
pop
jae
hlt
icebp
push
add
cmp
xchg
sbb
outsb
mov
dec
imul
cmp
cmpsl
fs
int
xor
or
lock
movsb
lret
pop
push
xor
dec
imul
cmp
mov
dec
inc
cmc
jne
cmp
daa
push
and
test
dec
cli
adc
cmp
fisubs
cmp
sub
jb
loop
jno
ja
test
out
xchg
popf
pop
mov
sbb
rol
mov
cmpsb
daa
mov
dec
shlb
stos
sti
loop
add
in
test
popa
data16
xchg
andl
fstl
movsl
shl
mov
jmp
mov
clc
dec
jne
je
loope
fs
or
aad
mov
popa
in
cmpsb
aad
cltd
cmp
push
mov
xchg
inc
and
mov
lock
dec
mov
cld
sub
xor
mov
xor
cmpl
arpl
cmp
pop
sahf
lods
add
jnp
mov
or
inc
add
loope
or
add
stc
pop
fbstp
mov
ja
xchg
cs
pop
stos
cld
jmp
mov
bound
lcall
frstor
je
stos
inc
outsl
fistpll
sti
or
pusha
xchg
subb
inc
rclb
test
mov
adc
popf
xor
dec
mov
pop
inc
pushf
xchg
push
push
sbb
jmp
lods
hlt
jl
mov
out
ss
xor
lods
sub
ret
dec
adc
mov
inc
push
in
orl
clc
shll
roll
movsl
sub
jecxz
mov
adc
rol
add
into
enter
inc
push
cmp
mov
jo
mov
sbb
push
lret
sub
xchg
enter
stc
jp
dec
bound
daa
jno
inc
lea
ficoms
mov
nop
push
cmp
test
imul
iret
hlt
mov
push
aad
pop
dec
cwtl
loopne
outsl
push
jmp
jmp
js
cmp
pop
jg
and
repnz
sub
push
rcrl
stos
cmp
xchg
ja
hlt
pop
dec
mov
add
xchg
dec
and
push
aad
mov
dec
pop
cltd
sub
inc
sbb
icebp
xchg
xchg
jb
scas
fstpt
dec
push
adc
cmp
stos
or
cwtl
sub
stos
mov
add
mov
push
ret
xor
dec
or
xor
repz
jns
gs
decb
lods
push
pop
jb
rclb
mov
jmp
out
aas
inc
insb
jb
xor
xor
jns
mov
ror
and
hlt
add
or
rclb
lahf
xchg
gs
pop
sbb
popa
clc
mov
outsb
pop
adc
jge
or
xchg
popf
push
push
mov
xchg
mov
dec
xchg
shrb
jb
mov
cmpsl
lret
mov
adc
test
jns
adc
mov
lret
adc
jp
or
lds
mov
push
pushf
or
mov
pop
imul
scas
xchg
xor
rclb
mov
mov
ja
inc
xor
mov
outsb
mov
cmp
lcall
into
aad
stos
sbb
xchg
outsl
sub
out
mov
inc
shlb
adc
loopne
adc
shlb
inc
loopnew,pn
mov
popa
xor
xchg
sub
inc
xor
add
xor
lds
mov
rclb
je
arpl
popl
push
mov
cmpsb
dec
sub
jae
addb
pop
fwait
icebp
lods
hlt
add
and
pop
mov
sbb
dec
jne
dec
outsb
jl
push
outsb
mov
xchg
sub
or
into
jmp
and
test
loop
jge
xor
pop
xchg
or
pop
adc
leave
and
dec
sti
jg
aad
fnsave
cs
jmp
xchg
ret
movsb
pop
pop
movsl
aam
std
cmp
mov
mov
nop
ja
xchg
imull
sahf
fucomi
es
cmpsl
sub
mov
adc
insl
mov
pushf
call
dec
addr16
mov
pop
pop
mov
pop
mov
int3
push
xchg
lods
inc
jge
pop
rclb
mov
inc
leave
test
pop
outsb
scas
and
in
mov
push
push
adc
sub
nop
jp
orl
adc
or
inc
dec
lcall
and
push
adc
gs
add
movsl
sub
mov
rorl
mov
push
push
jmp
shlb
or
jecxz
mov
and
jecxz
dec
nop
xchg
cs
decb
cmp
daa
aaa
addr16
jg
mov
mov
xor
fld
int3
bnd
jns
lea
nop
pop
std
subl
push
xor
mov
jmp
sbb
fidivrs
ret
int
mov
nop
inc
xchg
xor
outsb
sti
fstpl
mov
xchg
mov
ja
xor
push
outsb
mov
mov
leave
sub
test
lea
dec
ret
and
data16
int
mov
jmp
pusha
and
cmp
mov
push
xchg
sbb
ret
jle
pop
sbb
gs
insl
fs
dec
in
and
cs
scas
dec
sbb
adc
and
jge
xor
cmp
arpl
mov
push
sub
popl
shrb
xacquire
pop
xchg
jg
push
test
push
push
test
imul
xchg
jmp
scas
loop
xor
cwtl
rcrb
stos
ror
dec
aam
roll
cmp
cs
push
sub
mov
int3
imul
lcall
scas
mov
adc
jbe
popf
push
jns
pop
and
sbb
mov
inc
scas
jnp
push
jp
jmp
push
imul
mov
roll
outsl
imul
loopne
push
into
dec
mov
adc
dec
hlt
and
dec
xchg
sub
pushf
sub
cld
insb
stos
cmp
rorb
dec
stos
repz
jnp
mull
sub
in
dec
out
cmp
divb
out
ljmp
sahf
and
fwait
lods
mov
jae
aas
jno
lods
std
in
stos
call
lods
cmpsl
ret
mov
addr16
shrb
test
cmc
andl
dec
jg
sti
mov
in
sbb
jmp
stc
and
mov
inc
xchg
popa
xor
mov
and
cmc
adc
sub
add
mov
les
dec
dec
js
repnz
aam
mov
xchg
stos
aaa
repz
cli
pushf
jbe
or
fisttps
inc
outsb
scas
iret
pop
xor
fpatan
lret
mov
in
push
push
test
in
add
mov
sbb
dec
sbb
movsb
push
int
fadd
pop
es
mov
push
sbb
lock
adc
xor
xchg
jnp
and
xor
mov
xor
add
adc
addr16
sarb
push
repnz
push
pushf
leave
sub
mov
mov
mul
and
sub
in
mov
sbb
adc
jmp
inc
je
mov
xor
outsl
adc
js
inc
adc
insb
and
sub
sbb
dec
imul
stos
xchg
stos
daa
adc
scas
rcrl
or
jno
lods
das
lock
stos
push
lock
or
les
repnz
shlb
cmc
cmc
push
dec
inc
test
xor
daa
cld
mov
movsl
mov
lcall
cmc
lret
sub
fst
push
pop
movsb
inc
mov
mov
push
adc
xor
sbb
cmp
pushf
ret
inc
testl
aam
mov
pop
push
out
icebp
notl
addr16
imul
je
xchg
out
inc
mov
int3
repz
jle
pop
test
jb
inc
ljmp
mov
mov
js
mov
lahf
bound
loopne
dec
adc
sub
popf
inc
push
sub
mov
andl
add
pop
sbb
jle
shrl
mov
ret
sub
mov
pop
mov
adc
dec
shl
popa
fstpt
sub
cmp
mov
int3
add
mov
adc
testl
ret
xorb
shlb
inc
imul
imul
mov
into
ljmp
outsl
rclb
ret
es
pop
cwtl
pop
fs
loopne
mov
adc
adc
xor
pop
xor
std
cmpsb
scas
push
xchg
jle
shlb
pop
jae
push
lahf
sub
mov
out
cmp
addr16
inc
xlat
mov
jb
pop
adc
mov
jmp
xor
xchg
dec
imul
pop
rclb
inc
fdivl
mov
jo
adc
lds
mov
add
ret
mov
lret
mov
lahf
xor
push
mov
dec
pop
insl
bound
movsb
popa
rcll
adc
mov
xchg
cltd
out
out
cmp
dec
mov
ret
jo
pop
insb
scas
test
add
inc
pop
imul
imul
cmp
cmp
in
aad
add
arpl
mov
mov
pop
cmp
enter
sub
rcll
pop
ja
cmp
rcll
and
lods
insb
and
pop
loopne
repz
es
xlat
add
int3
out
pushf
lock
outsb
rcrl
pop
sub
cmp
dec
scas
mov
icebp
outsl
cmp
aaa
mov
cli
xchg
dec
inc
insl
mov
mov
jmp
xor
rcr
lea
outsb
xchg
enter
outsl
ret
bnd
sahf
aaa
scas
nop
xorl
fistps
test
lock
and
popa
adc
adc
xchg
out
fsts
jle,pt
jge
xchg
add
fsub
mov
xchg
and
ret
push
dec
aaa
mov
lcall
icebp
cmp
and
push
xchg
or
mov
test
ljmp
loopne
lahf
fs
aad
rcl
sub
sub
add
mov
mov
imull
push
or
xchg
subb
jmp
mov
dec
dec
movsb
cwtl
insl
shll
cmc
push
push
fisttpl
pop
mov
push
and
outsb
dec
lds
push
cmc
nop
mov
dec
or
test
movsl
pushf
dec
pop
or
push
adcb
lret
xchg
xchg
popf
out
dec
call
inc
and
push
daa
adc
sar
jbe
outsl
ljmp
adc
movsl
ja
cwtl
xorl
shll
sub
iret
inc
data16
out
ljmp
push
test
push
insb
cmp
fsubrs
inc
int
add
push
xchg
push
sub
xor
cmpsb
sub
sbb
inc
sbb
add
dec
test
pusha
mov
pop
jne
hlt
inc
ds
jle
pop
stos
mov
imul
insb
cmp
and
xchg
cmp
mov
int3
fiaddl
fstpt
insl
jl
mov
popa
add
dec
dec
jne
cs
jmp
dec
or
lock
or
xchg
push
or
or
stos
adc
rep
imul
cli
repnz
cmpsl
in
and
jmp
imul
movsb
rorl
je
mov
in
push
or
lods
hlt
dec
sub
les
adc
push
pusha
fs
inc
xlat
or
adc
cwtl
jbe,pt
sub
sbb
jp
xor
adc
adc
mov
rolb
popf
rcr
leave
fcoms
popf
and
xchg
jmp
inc
ss
mov
cmc
dec
push
mov
sbbb
adc
outsb
xchg
testl
fwait
jne
jbe
fldt
mov
movsb
or
fistps
sbb
pop
inc
jae
cs
sub
push
jae
data16
pop
dec
enter
cwtl
fcoml
xchg
add
iret
out
inc
push
mov
out
and
jbe
lcall
inc
std
lret
pop
jno
fs
mov
mov
movsl
lret
mov
test
sub
mov
pop
sub
sbb
and
jb
sarl
cmp
jecxz
xchg
lods
mov
cmp
out
movl
sub
jg
adc
mov
fnstcw
insb
scas
mov
lea
loopne
inc
inc
xlat
sbb
sub
test
inc
mov
fs
ds
dec
cmp
dec
fdivs
std
test
lods
rorl
pop
mov
jo
cli
or
and
push
push
lds
insb
fnstsw
xchg
or
cmpsb
push
fwait
dec
pop
cmc
mov
jge
cmc
cmp
jno
jbe
ret
subl
and
out
fwait
shlb
enter
int3
sub
ret
in
jl
pop
ds
loope
mull
in
mov
imul
add
jl
push
es
gs
inc
mov
dec
cs
mov
imul
das
imulb
mov
ja
mov
outsl
iret
sub
push
add
pop
fwait
js
push
callw
push
xchg
mov
adc
stos
outsb
pop
push
aam
sub
cmc
cmpsb
imul
test
dec
cmpsb
sub
dec
xor
xchg
mov
lahf
repz
repz
jnp
adc
fidivrl
test
jl
jg
nop
in
and
push
and
and
jo
shrb
idivb
sub
jno
sahf
into
inc
in
mov
or
sub
cmp
and
ja
icebp
lcall
mov
add
mov
and
inc
push
int
mov
sub
push
mov
lods
mov
jmp
jbe
outsb
xorb
push
fldcw
adc
push
xchg
stos
in
ret
and
dec
cmp
repz
sub
ds
pop
enter
sub
test
insb
push
mov
push
cld
dec
jl
aaa
fwait
lods
jl
movq
call
mov
sbb
pop
cltd
jo
mov
stos
popa
cli
cmpsb
scas
stc
mov
das
rclb
xor
xchg
mov
popa
data16
test
repz
xor
mov
hlt
enter
aad
test
dec
mov
jae
rcrb
aaa
loope
push
call
call
pusha
xor
int3
lds
jmp
pusha
sbb
or
fcoml
and
adc
xchg
and
sbb
cmp
and
add
mov
inc
jmp
xor
stos
dec
call
pop
fists
sbb
hlt
sbb
pop
mov
adc
mov
xchg
adc
or
ret
sub
push
lret
arpl
add
mov
out
jp
mov
fnstenv
test
cmpl
mov
dec
xor
pop
adc
fsts
call
mov
into
fimull
or
jge
addb
loope
cmp
imul
or
in
out
cmpsb
pop
int
daa
adc
xor
lahf
xchg
stc
mov
ds
in
scas
idivb
lock
jbe
arpl
out
cmp
xchg
mov
cwtl
dec
add
lret
repnz
mov
fs
ljmp
xchg
jl
lret
cmp
sahf
adc
jne
mov
cmp
leave
cmp
sub
pop
push
dec
daa
clc
out
adc
xchg
lods
mov
out
cwtl
jae
push
push
xchg
aam
gs
scas
dec
fistl
jo
outsl
arpl
aaa
faddl
lods
jmp
mov
push
xchg
xlat
pop
pop
in
insl
in
mov
bound
fcoml
mov
sbb
push
pop
rclb
mov
and
cld
fldl
in
out
lcall
pushf
jae
xor
or
stos
inc
cmp
inc
adc
leave
out
xchg
ja
inc
xchg
rclb
cmc
dec
dec
jae
xchg
or
cmp
xchg
push
mov
ss
xor
xchg
addr16
test
jne
shr
jle
mov
jecxz
orb
loope
loopne
and
add
inc
mulb
mov
mov
add
jne
cmpsb
jo
xor
cmp
out
cli
test
shll
rorb
ljmp
rorl
lds
cmpsb
pop
xor
xchg
mov
add
data16
pop
sbb
cmpsb
jmp
jno
mov
dec
les
sbb
cmp
lcall
insl
fldt
inc
fsubrl
dec
adc
cmc
icebp
divb
lcall
mov
scas
cli
xor
roll
addl
jno
ljmp
add
in
xchg
push
out
xchg
cmpsb
pushf
jo
pop
pop
pushf
mov
ja
shr
fs
outsl
ss
add
out
mov
or
stos
and
iret
call
inc
adc
test
jae
lret
mov
jle
rclb
or
push
and
das
loope
leave
push
inc
test
inc
jne
xchg
rclb
scas
pop
inc
flds
jmp
pop
ss
xor
test
xor
lcall
lods
fimuls
cmpsl
xlat
cs
mov
jecxz
cli
push
adc
mov
dec
lret
fbld
stc
cmc
stos
cld
addr16
addr16
int
ljmp
orl
jecxz
rclb
sub
xchg
popl
pop
das
lock
arpl
pop
pop
mov
sub
loopne
fnstcw
clc
jne
jns
inc
jmp
cltd
pop
mov
mov
xor
ds
dec
jnp
cmp
xchg
push
in
fmul
std
clc
pushf
fidivs
pop
xchg
jmp
jge
jge
add
mov
bound
iret
fwait
cwtl
aaa
out
dec
bswap
mov
jo
shlb
mov
sub
outsb
add
or
popf
ja
sbb
pop
mov
xor
loop
and
insb
jle
in
sbb
call
push
dec
clts
inc
jp
cmpsl
cs
cmpsl
in
mov
test
mov
add
ss
fwait
call
and
lcall
sbb
mov
inc
xchg
mov
xchg
jmp
loopne
xor
mov
mov
cmp
xchg
inc
outsl
enter
mov
and
ror
and
cmpsb
mov
gs
push
sub
add
mov
mov
iret
inc
cmc
out
jg
lods
call
decl
sbb
inc
cmp
pop
and
shl
aas
mov
call
ret
push
repnz
js
add
ficoms
or
xlat
pop
cwtl
adc
add
jge
test
insb
mov
sahf
xchg
sbbl
sbb
jmp
inc
test
jg
and
nop
mov
out
xchg
or
mov
repnz
cmp
lds
mov
test
jo
addl
insl
outsb
cs
push
push
jae
test
xchg
push
inc
dec
int3
mov
imul
out
ja
fld
dec
in
pop
loopne
enter
sub
scas
test
mov
stc
fiaddl
pushf
jg
test
xchg
push
or
jle
insl
daa
ret
add
divl
insb
pop
int3
inc
out
mov
fldl2e
dec
push
xlat
leave
stc
inc
daa
mov
not
daa
inc
fsubrl
jne
cbtw
cmp
fisttps
out
popa
and
mov
mov
xchg
sub
mov
mov
cwtl
sbb
cmp
sbb
xorb
scas
ret
jns
add
fbld
in
xor
adc
int
ja
or
cs
addr16
mov
std
xchg
inc
xlat
cli
or
pop
test
adc
mov
mov
sarb
nop
insb
sub
mov
das
ds
aaa
scas
lea
sub
add
pop
xchg
shl
jmp
or
inc
insb
js
push
jl
loop
fnsave
sbbb
idiv
mov
sbb
out
int
push
je
fs
data16
test
push
rorb
je
ss
imul
mov
andl
lahf
cmc
mov
ss
and
dec
dec
mov
adc
lods
or
fldt
push
adc
jno
mov
movsl
sahf
xor
push
insl
push
adc
lcall
mov
or
cmp
cli
xchg
pop
lret
aad
dec
shr
ds
and
adc
xor
outsb
adc
stos
mov
ds
imul
push
add
sub
fwait
lock
stos
movsb
clc
cmpsb
lret
add
lds
push
add
or
push
aaa
fcmovnu
mov
pop
icebp
mov
jl
ja
mov
mov
stc
pop
fisubrs
int3
mov
or
test
mov
in
shl
push
mov
pop
jo
repz
pop
dec
xor
jnp
add
xchg
fisttpll
pusha
fdivl
mov
fidivs
in
or
mov
lcall
cltd
dec
into
cmp
jecxz
push
cmpb
mov
fucomp
mov
bound
mov
mov
negb
ds
popf
in
sbb
dec
push
inc
daa
in
push
hlt
andl
negb
aas
or
pop
sbb
shll
inc
or
or
cmpsb
in
mov
and
pop
int
or
xor
jo
loope
or
and
in
sbbl
fisttpll
push
and
jmp
stos
inc
cmp
push
scas
lods
inc
adc
popf
mov
xor
jl
push
arpl
xchg
outsb
movsl
dec
push
hlt
pop
aam
loop
add
fldcw
gs
sub
clc
shlb
ficoml
cwtl
and
xchg
into
push
or
cmp
mov
mov
inc
pop
int3
movsb
rcrl
cs
cli
out
mov
or
pop
in
sbb
repz
mov
fisttpll
fisttps
enter
loope
xchg
fnstenv
inc
xor
leave
fldt
jnp
sbb
in
sub
hlt
mov
dec
add
jmp
das
sbb
sub
out
and
ds
js
daa
call
int
repnz
loope
add
fists
or
sbb
xor
ss
pop
pop
int3
test
jno,pn
push
test
push
inc
cmpsl
mov
imul
daa
mov
pop
stos
or
or
scas
lret
mov
stos
enter
nop
mov
gs
jae
stc
jl
jno
inc
pop
dec
mov
dec
btc
xor
sbb
jbe
adc
in
xor
jno,pt
hlt
push
xchg
das
lock
pop
xor
dec
f2xm1
dec
imul
in
or
sahf
fimull
pop
iret
lret
xchg
push
inc
lods
mov
lret
popf
popa
icebp
data16
mov
mov
mov
test
enter
push
jmp
mov
bound
dec
inc
std
push
lods
jbe
data16
lods
scas
pop
sbb
int
popf
add
cwtl
inc
cli
movsb
testb
adc
xchg
test
ret
cmp
inc
xchg
popa
inc
pop
jae
pop
sbb
push
pop
sub
xlat
aas
fnstcw
mov
mov
cltd
jg
mov
stos
jns
lahf
lcall
cltd
nop
jg
mov
test
imul
popl
dec
pop
xor
push
xor
mov
adcb
fdiv
ror
ljmp
or
cltd
adc
out
jne
pop
fbld
xchg
fisttpll
or
lret
aas
jnp
cltd
xrelease
repz
iret
imul
cmpsl
stc
sbb
or
clc
push
pop
jo
test
and
adc
sbb
out
loop
jbe
inc
subb
push
lods
mov
cli
packssdw
xchg
dec
mov
ds
mov
mov
push
xchg
xor
xchg
addr16
sub
jnp
mov
or
int
sbb
inc
lret
js
pusha
push
pushf
and
and
outsb
fists
test
xchg
cmp
jno
daa
sub
imul
fiadds
cmpsl
xlat
inc
icebp
mov
inc
or
jns
mov
and
jecxz
sub
inc
mov
lods
pusha
out
les
mov
out
push
jecxz
fsub
jo
sar
mov
fisubs
dec
loope
mov
pop
sbb
mov
mov
mov
sbbb
ljmp
jp
sbb
scas
xor
in
and
out
jno
cli
pop
fwait
into
pop
imul
iret
stos
inc
mov
fisubrl
frstor
je
xchg
jns
repnz
inc
jo
adc
xchg
scas
lea
add
adcl
fs
dec
xor
ss
insb
adc
inc
add
cmpsl
mov
fimull
sbb
addr16
add
outsl
in
pop
fcomp
insb
mov
push
or
loopne
mov
xchg
lret
test
in
test
and
sarl
xchg
pop
int3
rorl
outsb
insl
and
ja
fwait
adc
or
dec
mov
mov
mov
stc
lahf
ds
insl
clc
or
leave
mov
dec
out
outsb
movsl
jmp
xor
ja
inc
mov
pop
mov
lods
dec
pop
leave
sub
lock
icebp
inc
or
push
aam
sbb
push
xchg
cmp
rorb
imul
jge
fdivrl
fistl
mov
jbe
sahf
in
mov
aad
mov
int
adc
dec
ret
stos
and
das
xor
mov
mov
adc
in
or
and
clc
pusha
fists
out
repnz
cmp
mov
adc
aaa
mull
popa
stc
mov
jl
mov
cmp
adc
cmp
bound
ret
or
add
sub
xor
adc
loopne
jmp
adc
and
sbb
cmpsl
sub
cmpsl
add
test
int3
push
mov
aaa
jns,pn
stos
cmp
dec
sbb
leave
and
adc
adc
mov
sarl
call
mov
scas
pushf
mov
or
add
cmp
popa
lret
adc
lret
bound
cld
loop
xchg
inc
cmpsl
aam
mov
lds
or
shlb
fistpll
sbb
fsts
inc
xlat
fstpt
mov
inc
xor
xchg
repz
lret
pop
pop
popf
mov
inc
ret
rcrl
out
jno,pn
mov
sub
sub
es
movsl
mov
inc
mov
adc
testb
push
xor
mov
inc
dec
jae
lret
popa
je
repnz
out
mov
pop
mov
data16
jno
jp
fbld
xor
mov
mov
sbb
test
mov
es
fisubl
cltd
outsb
dec
and
icebp
add
push
sbb
pop
lods
jae
mov
cmpsb
and
dec
adc
inc
push
sub
sub
dec
push
jno
cmp
or
ds
xor
push
push
cwtl
lret
popa
adcb
outsb
mov
and
mov
xor
stc
mov
jno
add
ja
pop
hlt
in
mov
pop
jb
lods
and
outsl
push
js
cmp
popf
shll
fdiv
imul
in
movsl
lret
mov
inc
cmc
mov
loop
inc
sarl
mov
and
cli
mov
xor
mov
negl
int
jge
ljmp
shll
xor
xchg
inc
pop
sub
pushf
mov
mov
leave
sbb
pop
pop
out
jge
jns
cltd
adc
add
pop
arpl
addb
or
subb
clc
ljmp
pop
rcll
mov
ja
and
ja
sbb
xchg
xchg
sub
ds
out
mov
pop
mov
and
int
push
mov
loopne
or
inc
sti
aad
ss
sahf
outsl
adc
imul
mov
cmp
push
rol
xchg
add
add
sbb
into
out
mov
fidivs
xor
outsl
pusha
add
push
sub
pop
icebp
xchg
add
out
lods
ficoms
repz
ret
daa
sti
std
fcompl
leave
adc
fs
xchg
fcmovnbe
dec
ffreep
cmpsb
data16
aad
mov
and
dec
jo
ljmp
daa
je
in
inc
outsb
lret
sub
ds
int
push
sub
pushf
sbb
mov
or
push
mov
mov
sti
scas
push
bound
repz
out
xchg
fninit
lret
xlat
outsl
jo
leave
mov
rsm
jge
add
das
push
or
or
jge
pop
nop
leave
stc
aaa
es
inc
mov
pusha
pusha
mov
mov
add
jo
add
sub
mov
add
divb
das
lret
mov
inc
cmp
in
fldenv
and
ret
out
jns
pop
push
outsb
jle
ss
pop
in
outsl
pop
fnstenv
ja
aaa
testl
xchg
inc
sub
call
cltd
daa
icebp
jo
stc
bound
loope
mov
ss
ja
cmpsl
jge
mov
imul
or
cld
enter
insl
xchg
bound
pop
stc
xor
jg
rcr
enter
in
addl
jns
adc
es
adc
fstps
mov
add
and
pusha
or
pushf
push
pop
out
pop
jle
jge
cmc
test
jecxz
jo
mov
sbb
ss
lea
out
je
mov
outsb
in
pushf
push
jle
in
popa
inc
mov
xchg
mov
popf
sarl
mov
xor
fsts
lea
ret
aam
div
inc
dec
mov
pop
push
aad
data16
mov
or
out
int3
inc
mov
mov
add
leave
push
and
cmpsb
sbb
rcr
scas
xchg
in
lds
and
ds
pop
mov
pusha
cmp
ljmp
fisubrs
mov
add
inc
mov
push
cltd
push
cmp
dec
jp
or
cs
dec
sbb
cmpsb
insb
dec
mov
mov
in
adc
mov
push
shl
push
lret
cmp
xchg
xchg
jl
scas
cmc
pop
pop
xchg
call
xorl
ljmp
aas
rorl
pop
clc
xchg
dec
xor
push
pop
push
scas
push
cmp
aad
mov
outsl
repnz
leave
or
and
push
and
out
adc
adcl
in
call
dec
xor
pop
scas
insl
aaa
dec
ss
es
out
mulb
cmc
push
adc
inc
jno
push
cmpsb
rclb
sbbb
mov
pop
mov
hlt
or
ktestb
divl
stos
loopne
pop
mov
scas
test
bound
adc
out
pop
adc
movsl
lods
loopne
movsb
sub
ficomps
inc
cmp
mov
jecxz
ret
mov
jle
add
and
cmpsl
inc
std
or
lods
sbb
sahf
popa
popl
dec
psllq
lock
popf
pop
cmp
fadd
and
xor
loopne
cs
cltd
sahf
sub
inc
mov
xor
incb
push
stos
push
dec
scas
sbb
pop
push
ja
pop
mov
sbb
fs
scas
xchg
repz
xchg
mov
dec
mov
xor
ds
sbb
mov
jne
stc
adc
out
adc
sahf
repnz
pop
mov
rcrl
lahf
or
das
push
fmuls
inc
cmp
mov
inc
jo
inc
xchg
out
or
lea
mov
leave
mov
loop
inc
fdiv
add
jmp
rolb
aad
fwait
mov
shrl
inc
push
fidivrl
insb
dec
sbb
jnp
dec
xor
insb
xor
stc
or
dec
cmp
jge
and
loop
or
ret
xchg
cmp
fsubrl
sub
lods
fstpl
aaa
push
sbb
sub
or
push
cmp
das
push
lret
int3
push
mov
mov
xlat
hlt
into
mov
push
adc
lret
add
add
in
loope
ja
jae
xor
scas
pop
mov
dec
fldt
jnp
push
scas
movsb
mov
add
mov
jns
in
adc
loop
xchg
fisttpll
mov
xchg
pop
push
and
mov
shrl
fbld
adc
andl
cmp
sub
neg
mov
xor
pop
test
xor
nop
pop
sub
data16
out
mov
jmp
mov
je
or
icebp
or
adcl
ret
adc
sbb
mov
adc
frstor
ret
fldl
mov
cmc
testl
and
jle
aaa
loop
imul
add
mov
or
mov
xor
inc
sets
jnp
xor
push
adc
loopne
mov
fiaddl
and
xlat
test
arpl
mov
lret
add
nop
add
outsl
pop
aas
and
mov
iret
sub
inc
in
test
aam
lret
daa
ror
mov
out
sub
jmp
xchg
lds
ret
adc
gs
orb
mov
xchg
filds
aaa
sbb
add
jne
shll
mov
jmp
pop
rcrb
jecxz
adc
push
insb
aaa
mov
in
cmp
mov
xorb
in
jl
and
mov
dec
pop
add
and
jmp
push
ret
imul
shl
pop
lock
pushf
sub
ss
adc
cmp
pop
cmpl
mov
int
and
jg
xlat
cwtl
lds
cmpsb
or
ljmp
adc
fistpl
mov
fcos
add
sbb
arpl
mov
sti
pop
jnp
test
xchg
out
out
or
repz
sub
lea
xchg
jnp
jnp
pop
or
hlt
push
in
pop
lcall
add
sub
enter
inc
lret
data16
dec
mov
xchg
add
fildl
dec
inc
movb
movsl
fbstp
out
dec
cmp
and
mov
rorl
movups
sub
pop
xchg
into
cmp
inc
ret
mov
sbbb
loope
push
loope
aam
add
orl
xor
xchg
dec
call
mov
adc
outsb
out
jno
fcompl
inc
push
pop
cwtl
adc
jbe
jns
sub
std
scas
push
lcall
adc
repz
adc
adc
cmpsb
adc
mov
pop
push
add
xor
xorl
dec
test
jge
pop
fmull
mov
ds
testl
rorb
in
daa
jb
enter
out
pusha
sub
push
fisubrs
lahf
fdivs
inc
mov
scas
cmpsl
mov
cld
push
sbb
adc
sbb
dec
sbbb
xchg
sbb
ja
or
je
add
insb
pushf
js
popf
mov
xor
test
addl
cmc
mov
adc
aas
dec
mov
lret
xorl
lds
enter
pop
or
lock
jle
mov
add
popa
dec
cmp
dec
xor
sbb
iret
sub
jbe
andl
xor
add
les
dec
ret
outsl
std
and
mov
lods
sarl
pop
and
stos
fidivs
jne
dec
aad
int
push
aas
lret
mov
out
and
add
imul
je
icebp
fchs
lcall
pop
or
ljmp
aad
push
test
popf
push
adc
mov
pop
cwtl
cld
pop
or
mov
jo
in
arpl
and
push
sbb
mov
cli
pushf
push
and
js
mov
test
cmp
pop
xor
mov
js
hlt
mov
pusha
xchg
loop
xor
iret
push
out
push
lea
mov
mov
lahf
ss
add
mov
rolb
cmp
jmp
add
sbb
lods
xor
mov
xchg
jp
cmp
push
subb
mov
dec
pop
cmp
loopne
xchg
adc
mov
push
push
mov
ficomps
xor
mov
repz
mov
stos
daa
out
gs
sarl
in
mov
cmp
pop
shl
fldenv
inc
inc
jnp
mov
mov
dec
cmp
pop
add
arpl
imul
cmpsb
pop
xor
xchg
push
dec
iret
adc
jnp
sbb
les
push
lahf
es
jae
sbb
ret
jmp
repz
xchg
xor
push
out
sbbb
in
mov
dec
xchg
lods
adc
mov
out
or
outsl
sti
into
les
stc
mov
mov
cltd
jnp
inc
xchg
pushf
clc
dec
jo
push
hlt
push
repnz
mov
add
cwtl
cmp
test
xchg
movsb
std
add
fstl
pop
mov
cmp
shr
adc
in
pop
xchg
in
aas
jmp
das
or
sarb
push
vmwrite
es
mov
adc
adc
test
pop
lods
cmc
hlt
insb
jo,pt
push
cld
movsb
push
outsb
mov
in
jecxz
cmpsb
mov
mov
dec
xlat
push
sbbl
popf
pushl
mov
aad
fdivp
dec
xchg
dec
or
fcmovnu
xor
push
mov
fs
or
and
pop
rorb
push
out
push
sbb
dec
push
pop
xlat
insl
mov
lods
aad
xchg
nop
int
js
rol
mov
sub
sarb
ja
stc
enter
pushf
test
sbb
xchg
mov
pop
jmp
jae
mov
cmc
dec
push
aaa
aam
inc
jo
stos
mov
sbb
sbb
lcall
sub
aad
in
jmp
and
or
add
ret
add
lods
jns
push
iret
mov
mov
ss
and
sbb
movsb
add
fiadds
bound
nop
xor
pop
xchg
fadd
lods
addr16
clc
jnp
and
movsb
jbe
pushf
ret
in
xchg
dec
iret
rclb
shrb
mov
fimull
add
jae
mov
movsl
inc
add
lea
out
lods
dec
inc
clc
nop
jg
notl
rcll
or
je
mov
in
mov
test
scas
add
lahf
shr
std
mov
jge
int3
ret
cld
dec
pop
adc
lret
xor
std
mov
dec
push
shll
push
xlat
mov
popa
pop
stc
or
fsubs
aaa
imul
pop
fwait
popf
es
scas
test
pop
rcrl
or
pop
jl
movsl
mov
mov
cmpsb
movsb
movl
xchg
mov
nop
dec
jne
scas
repnz
dec
adc
dec
mov
dec
push
bound
xchg
cmp
cmp
pop
stos
stc
inc
push
shll
filds
xlat
cwtl
sub
dec
jle
mov
aad
scas
cmc
push
or
mov
inc
cmp
pop
scas
fs
popa
clc
lds
aam
ljmp
mov
pop
xchg
call
lahf
in
out
push
arpl
test
sub
ss
out
dec
jae
movsb
pop
cltd
and
in
in
lds
or
xchg
mov
stos
and
cltd
sub
jb
aam
jo
jg
data16
or
pop
popf
and
jb
call
fdivs
pop
adc
imul
les
insl
ret
adc
mov
pop
ja
inc
mov
xchg
push
cltd
mov
ret
mov
push
mov
arpl
push
pop
mov
jmp
incl
pop
mov
insb
sbb
mov
ds
mov
mov
enter
and
or
fists
jbe
push
cmp
dec
shlb
pop
adc
test
test
xor
inc
outsl
mov
fidivs
loope
hlt
cli
adc
cmp
sahf
and
in
pop
mov
mov
movsl
leave
repnz
dec
in
loope
cmpsb
push
mov
mov
scas
adc
mov
pop
push
daa
mov
ret
imul
pop
sbb
cltd
imul
aas
imul
test
std
xchg
fdivl
mov
lods
cmpsl
mov
xor
adc
cld
sahf
jl
mov
pushf
cmp
xchg
cli
mov
add
sahf
mov
mov
loope
and
inc
cmp
cmpsl
test
push
int3
dec
int
imul
out
gs
popf
mov
jno
sub
inc
adc
pop
mov
push
xchg
lock
adc
out
adc
mov
jbe
pop
adc
imul
mov
jne
test
fiadds
enter
push
rorb
dec
mov
mov
int3
int
test
pop
lds
shrl
fisttpl
jo
sbb
cmp
fimuls
stc
dec
rolb
fdivl
stc
jb
icebp
lret
xchg
sti
jge
and
pop
pusha
in
loopne
mov
jbe
jmp
jbe
rclb
stc
sarb
enter
sub
call
lds
xchg
in
sub
shrb
clc
and
dec
mov
and
ljmp
arpl
sahf
and
sub
xor
mov
or
sbb
js
mov
jl
cwtl
adc
hlt
sbb
lods
adc
and
pop
sbb
mov
jle
shlb
adc
jne
push
xor
sbbb
or
jns
xchg
leave
add
movsb
pop
sarb
push
xor
out
add
mov
adc
xorl
mov
inc
jae
iret
setp
xor
dec
hlt
repnz
or
into
fdivr
cwtl
xor
lods
sbb
xchg
pop
pop
pop
fistpll
dec
addr16
dec
in
jnp
scas
andb
sbb
in
add
popf
cmp
in
hlt
or
ja
jnp
test
inc
add
cmc
xor
xchg
cld
leave
lea
fs
popf
jg
addr16
inc
pushf
add
jnp
pop
es
sbb
jmp
xchg
or
inc
and
stos
xor
cmp
in
nop
rcr
cmp
test
xchg
notb
dec
inc
lret
mov
cld
mov
movb
pop
jae
mov
mov
adc
loope
and
mov
fadds
cmpsb
pop
push
je
inc
mov
incb
xor
aas
fwait
out
lret
sub
scas
sub
movsl
or
pop
jp
loop
lcall
add
and
out
add
insl
xchg
imul
mov
fwait
test
ret
push
cmpl
add
pop
sahf
xchg
rclb
roll
lret
mov
mov
arpl
loopne
sti
lss
dec
inc
in
pop
push
cmp
dec
lret
sub
ljmp
addr16
mov
sbb
pusha
jp
fwait
and
push
das
xor
and
add
mov
cli
mov
lcall
out
xor
stos
cs
inc
repz
inc
imul
push
ljmp
notl
xchg
aas
dec
fs
dec
add
dec
inc
pop
mov
inc
mov
mov
fmull
jl
xor
and
aaa
cmp
mov
lret
aaa
dec
jl
cmpsb
fstpl
adc
and
aam
sbb
pop
nop
mov
jae
mov
lret
out
jns
shlb
xchg
ds
test
pushf
out
sti
repz
dec
lret
jae
repnz
fwait
mov
or
ret
out
repz
sbb
jmp
and
je
mov
fs
icebp
cmpsb
push
or
push
sbbl
fwait
sub
mov
stos
ret
fildl
bound
mov
mov
fcoml
arpl
bound
out
divl
arpl
fisubl
sub
decb
mov
stos
popf
repnz
and
bnd
fidivl
jo
mov
sbb
jo
mov
bound
or
ds
mov
cmpl
fcmovne
jge
lcall
andb
mov
test
ja
cmp
mov
or
add
adc
pop
sahf
pop
sahf
ret
sahf
mov
sub
mov
xchg
push
test
movsl
je
cmp
and
insb
or
sbb
pop
mov
gs
call
xchg
cmpsl
sbb
dec
xchg
jecxz
loopne
mov
in
inc
jg
jle
jb
xor
rolb
mov
call
sub
aas
dec
fsubrs
push
xor
adc
call
stos
imul
and
nop
pop
cmovns
stc
cmp
pop
stos
int
inc
test
mov
adc
cld
fwait
in
lods
mov
xchg
sub
loopne
filds
rorb
lock
es
std
out
cld
jecxz
cmp
or
cs
xchg
das
incl
cmc
push
inc
and
inc
into
mov
aaa
adc
xchg
adc
test
leave
xlat
xor
loopne
cs
dec
mov
daa
scas
nop
adc
lods
repz
mov
js
pop
adc
movsl
push
test
mov
mov
pop
or
movsl
and
jo
sub
mov
arpl
sbb
bound
jecxz
cwtl
inc
aam
call
jmp
jne
mov
aam
popa
lock
stos
rep
push
pop
dec
jg
leave
frstors
push
xor
mov
imul
das
mov
lds
xchg
jge
out
addr16
pop
mov
loopne
cli
push
inc
outsl
lea
rclb
fstpl
movsl
nop
adc
dec
xchg
in
mov
insb
stos
out
fldcw
mov
jo
and
xchg
or
aas
in
andb
fiaddl
inc
push
push
outsb
in
push
lret
std
cmc
xchg
ret
or
jo
call
sbb
call
out
mov
xor
and
dec
mov
inc
lret
or
sbbl
leave
pop
mov
jecxz
sbbl
mov
sbb
xadd
in
and
cli
and
fwait
sub
inc
mov
sub
dec
jo
mov
cli
and
push
xor
call
mov
xchg
idivl
inc
xlat
fcmovnb
jp
inc
loope
jg
leave
jb
jl
pop
cmp
stos
xor
mov
sub
in
push
cmp
push
popa
loop
inc
cltd
pop
mov
gs
cmp
sub
sub
adc
adc
add
repz
push
shrl
dec
dec
hlt
and
insb
fistpl
pop
orl
add
mov
cmp
popf
or
test
movsb
das
sub
lods
fists
push
aas
out
xlat
sbb
push
lods
jecxz
shll
imulb
aaa
test
xorb
ret
adc
cmc
imulb
xor
daa
jae
les
pop
xchg
or
xlat
sub
dec
xchg
loopne
mov
aas
add
xchg
sbb
jle
pop
divl
jns
jns
push
outsb
or
icebp
push
push
out
subb
inc
insl
inc
jmp
nop
bound
xchg
and
xchg
jno
lods
daa
and
dec
fcompl
cltd
cmp
les
sbb
sub
adc
xchg
out
push
sub
ret
jp
add
call
movl
rolb
pop
dec
dec
das
lods
sbb
jae
mov
lock
sub
xchg
cmp
idivl
pop
or
dec
push
dec
subb
adc
mov
cmp
lret
outsl
ljmp
adc
mov
or
adc
stos
aam
stos
cmp
out
int3
popf
lea
gs
scas
adc
lock
pop
out
adc
scas
mov
shl
lock
dec
mov
push
jmp
lret
test
add
adc
dec
push
test
push
cmpsl
bt
or
xor
cltd
mov
popa
insb
out
mov
test
aam
pop
sbb
sbbb
data16
and
repz
or
jns
xchg
ds
sbb
adc
jo
or
jle
pop
push
leave
push
enter
test
sbb
mov
mov
jmp
push
mov
push
xchg
dec
and
mov
rcll
int3
jl
decl
das
pop
inc
add
or
jle
fldt
jg
fstpl
lret
shl
iret
mov
pop
outsb
jnp
lahf
gs
jnp
mov
mov
sub
scas
outsl
jb
sbb
xchg
jnp
je
jbe
jae
xchg
cmp
dec
dec
jns
push
push
sub
xor
shrl
jne
ret
mov
cmpsb
mov
icebp
test
cltd
push
fs
and
jle
rolb
mov
adc
mov
pop
roll
cmpb
fstps
mov
jnp
mov
xchg
dec
jbe
scas
xor
jne
sti
lret
sbb
dec
or
cmp
test
dec
sub
push
loop
cld
push
out
je
push
nop
pop
and
loope
and
mov
sub
push
xor
inc
orl
add
pop
pop
emms
dec
mov
ds
jg
mov
push
imul
mov
inc
aad
jb
push
adcb
mov
and
push
dec
mov
pop
mov
xor
addl
jne
pop
jmp
sahf
jp
out
gs
imul
jae
pop
lret
push
daa
out
xchg
test
rcll
mov
cmpsb
sub
jbe
xor
addl
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
mov
xlat
fs
cltd
pop
inc
jne
popa
mov
bound
enter
dec
push
mov
push
je
push
fimull
inc
out
push
mov
add
popa
pop
stos
mov
shlb
in
add
pop
xchg
daa
dec
loope
in
leave
and
sarl
add
lock
mov
jl
pop
or
arpl
xchg
adc
xor
and
and
pop
or
inc
cmp
xchg
shrl
push
add
enter
xor
andb
push
push
push
mov
pushf
test
mov
jns
icebp
daa
sub
pop
rol
adc
or
out
adc
cmpsl
mov
mov
aam
push
mov
and
mov
mov
pop
test
cli
jne
pop
imul
xchg
aaa
xchg
or
jmp
mov
scas
push
sub
sub
adc
inc
addr16
gs
cmp
mov
pushf
jle
lods
jmp
in
inc
or
fwait
lret
push
mov
movsl
xchg
mov
loopne
enter
outsl
mov
out
lds
inc
enter
inc
sub
cmovne
mov
jmp
sti
aam
in
iret
insb
cmp
xor
add
ja
enter
adcb
jbe
int
fs
sbb
push
loop
pop
popa
icebp
in
call
fwait
aaa
repnz
arpl
shl
cmp
fwait
mov
addr16
or
icebp
or
fnstenv
add
and
jb
mov
add
clc
pushf
pop
xor
adc
cmpsl
ja
test
fimuls
fmul
addr16
add
popa
lea
jb
mov
lret
cs
lods
add
lods
jns
orb
into
fimull
xchg
mov
test
clc
jae
sub
cltd
mov
daa
dec
insb
mov
mov
xchg
aaa
in
shll
dec
loop
popf
mov
imul
xchg
sti
cmpsb
aad
bound
bound
pushf
mov
inc
or
mov
adc
in
push
lret
std
mov
add
push
mov
rcrb
mov
call
cmp
xor
arpl
pop
fidivrs
pop
sti
xchg
add
pop
adc
aas
pop
jo
stos
xlat
xchg
inc
negl
or
negl
mov
jo
sub
or
xchg
xchg
sti
in
sbb
rorl
icebp
xor
ret
ja
faddl
decb
jnp
pop
and
jae
frstor
cli
jmp
add
add
fdivrl
jecxz
in
outsl
fimuls
orb
push
sub
adc
ret
lcall
xchg
call
pop
int3
sub
add
decb
out
ss
push
popl
pop
xor
adc
xchg
js
lock
roll
rorb
dec
sub
enter
xlat
icebp
sub
mov
fisubs
push
popa
enter
add
jp
mov
das
sbb
aad
jb
lret
sub
xchg
iret
fwait
xchg
mov
xchg
pop
shrl
daa
ja
inc
and
dec
fdivs
sub
push
fwait
cmc
xor
imul
mov
in
popf
adc
sub
bound
bnd
aas
insl
mov
cmp
mov
or
fs
pop
rclb
aaa
pop
sbb
daa
mov
or
xor
loope
push
xor
jmp
mov
mov
inc
push
push
jae
in
addr16
repz
fstps
repz
push
mov
cmp
dec
dec
xchg
loop
shlb
imul
lds
lret
fdivr
pop
push
aad
dec
dec
or
inc
or
mov
insb
push
fwait
shll
arpl
imul
mov
and
lret
pop
aaa
inc
fists
pop
cmp
imul
lds
dec
xchg
dec
cmpsl
jo
sbb
mov
dec
push
and
rcll
or
jb
fdivl
push
adc
xchg
xchg
ljmp
enter
pushf
negb
push
stos
inc
add
jmp
jne
mov
mov
xchg
clc
pop
xchg
aad
push
xlat
ds
mov
fcoms
pop
pop
jmp
scas
fwait
jle
sbb
mov
jecxz
dec
fisubrs
add
adc
mov
xchg
mov
call
pop
movsb
fbstp
pop
aas
mov
pushf
fwait
in
sarl
fdivl
aam
add
inc
xchg
cltd
sbb
or
push
outsb
dec
dec
cwtl
adc
mov
push
ljmp
cwtl
iret
mov
mov
fbstp
mov
xchg
fstpt
sub
hlt
dec
std
push
push
jo
inc
and
sbb
ss
xchg
jb
dec
cmpsb
cs
cmp
leave
sub
xchg
ljmp
clc
xor
fwait
insl
adc
mov
inc
xor
add
out
repz
bound
aas
stos
add
rep
aam
push
sbb
dec
cmp
int3
add
push
jns
icebp
scas
pop
jle
ds
call
or
into
icebp
inc
lret
pop
cmp
testl
push
mov
sbb
jecxz
pop
mull
movsb
cmpl
les
cmp
or
inc
xor
push
imulb
jmp
push
es
enter
loope
cmpsb
pop
add
sub
outsl
adc
test
jmp
jne
imul
and
push
sbb
jns
pop
bound
jecxz
cmp
pop
popa
outsl
popf
pop
fs
out
pop
xchg
cld
jne
popa
sub
clc
nop
xlat
sbbl
add
cmc
xor
aas
fidivl
popa
repz
test
push
lods
test
adc
xor
pop
mov
jo
out
stos
dec
nop
shr
fwait
cmpsb
outsl
rorb
ljmp
les
xchg
outsl
lds
add
jge
out
arpl
dec
lods
lods
add
aas
inc
adc
pop
cmp
clc
adcl
es
repz
loope
pushf
imulb
xor
push
push
aad
loopne
cs
leave
scas
addr16
fistpll
repnz
dec
cwtl
mov
pusha
aaa
mov
outsl
push
ja
mov
ret
mov
out
push
jno
hlt
lahf
cmp
adc
int3
test
out
mov
push
push
imul
dec
mov
mov
dec
aaa
les
inc
push
idivb
adc
dec
sub
mov
outsb
addr16
ljmp
je
div
mov
push
pop
ds
out
rclb
sbb
pushf
and
mov
out
dec
in
stos
xchg
or
outsb
jp
mov
add
stc
enter
rcr
fcomps
icebp
jg
js
ljmp
or
mov
mov
shll
mov
addps
mov
fisttps
js
push
push
dec
xor
fcmovbe
rcrb
stc
hlt
adc
jmp
sbb
icebp
cmpl
stc
xchg
push
ror
fists
sub
rcll
mov
shlb
mov
call
testb
sub
movsb
ss
adc
imul
dec
add
pop
lea
ss
add
into
pop
rcll
fidivrl
arpl
cld
mov
sub
jmp
xchg
ret
loope,pn
fwait
cmp
mov
add
mov
and
mulb
mov
mov
and
jno
push
jmp
loope
mov
xchg
fstps
sbbb
pop
cmc
and
inc
mov
xchg
and
jp
ds
out
and
xor
inc
sti
mov
cmpsb
shrl
pop
mov
and
sub
mov
or
push
imul
dec
or
cltd
inc
sub
cmp
cmp
dec
inc
pushf
scas
dec
sbb
outsl
es
mov
ja
pop
iret
stos
push
in
enter
mov
lds
xchg
mov
inc
addb
xlat
mov
pop
testb
rcl
mov
add
fsubrs
push
add
mov
and
in
and
fdivr
xchg
jl
cli
test
and
cmp
inc
and
sbb
xor
pop
mov
pop
and
xchg
ljmp
pop
cld
or
or
add
cltd
into
cmp
shlb
sub
jp
std
aaa
pop
ret
cmp
gs
lods
cli
shrl
xchg
jnp
in
and
sub
jge,pt
fidivl
dec
je
fistpll
jbe
adc
aam
mov
inc
pop
and
daa
outsl
addr16
pop
ljmp
jne
adc
movsl
or
add
jge
inc
jae
test
mov
adc
scas
jge
inc
xchg
je
cld
xor
mov
jbe
cmpsb
mov
jmp
ss
mov
pop
push
fs
xchg
sbb
pop
and
aas
xor
mov
xchg
push
and
or
add
lret
idivb
repz
pusha
test
mov
mov
psubw
ds
jl
in
fs
test
push
cld
call
enter
clc
or
push
adc
push
ds
test
jg
vmread
lock
push
sbb
pop
ja
or
sbb
cmp
lret
cmp
xlat
daa
add
pop
iret
mov
test
mov
jge
jl
sbb
mov
sub
mov
fs
sbb
push
mov
jne
add
pop
mov
mov
leave
dec
out
or
jo
stos
out
daa
jbe
cmp
loop
push
daa
iret
inc
cmp
cmp
xchg
mov
into
xchg
fidivs
enter
repnz
in
jle
std
pop
cli
pop
int3
aas
fs
int3
movsl
mov
add
inc
pop
mov
sbb
sahf
stc
scas
cmp
in
push
xor
aad
jge
sub
int3
lods
dec
xlat
movsl
icebp
xorl
fwait
sub
loopne
mov
repnz
xor
fdivrs
push
or
fsubrs
stos
pop
mov
mov
xchg
mov
inc
dec
mov
fisubl
jmp
xor
loop
fwait
xchg
addr16
pop
mov
sub
fwait
xchg
mov
xchg
sahf
jno
jae
pop
lock
mov
cmp
lods
in
adc
hlt
xchg
xchg
rolb
lret
xor
inc
jl
inc
dec
clc
cli
ret
lods
je
xchg
int
xchg
cld
fcmovnu
mov
add
mov
or
cltd
imul
outsl
add
rorb
cltd
mov
fcomps
jbe
xor
cs
adc
ja
mov
adc
data16
imul
sub
fldl
dec
and
add
sbb
cmp
mov
cltd
es
cmp
or
push
xchg
mov
push
xor
add
test
adc
jno
adc
shl
mov
scas
or
push
push
gs
repz
lock
push
push
test
ret
sahf
sbb
push
inc
jnp
iret
mov
scas
sub
xchg
sbb
call
sub
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
or
lea
int
mov
decb
push
dec
shll
sbb
aam
imul
pop
jl
fnstsw
pop
add
enter
sbb
ret
lcall
xchg
sbb
inc
inc
outsb
sbb
jg
push
add
pushf
movsl
es
out
pop
arpl
movsl
xlat
test
shl
loopne
test
test
mov
ss
outsl
push
aas
inc
mov
and
out
mov
sub
and
lods
lds
inc
sbb
xor
sub
repz
cwtl
inc
mov
pusha
mov
mov
jae
mov
mov
int
mov
shlb
add
leave
cmp
bound
lcall
xor
loope
ds
daa
xlat
insl
mov
minps
sub
push
jle
push
or
inc
sbb
sbb
adc
int
add
in
or
test
xor
into
and
shlb
push
dec
pop
mov
add
loop
pop
or
jg
cld
rcl
incb
bound
fs
clc
or
ret
cmpsl
jbe
mov
pop
lret
lods
movsl
ljmp
mov
pop
cld
sti
push
stos
xor
mov
pop
push
mov
dec
loopne
inc
in
mov
add
les
sbb
or
cli
jbe
fldenv
sub
loope
in
mov
sub
push
mov
imul
jp
scas
repnz
arpl
xchg
and
pop
shrb
test
pop
adc
mov
lret
cld
js
std
jbe
sbb
jns
std
insl
and
inc
add
inc
aad
jl
idivb
mov
pusha
dec
pop
jecxz
pop
adcb
adc
cli
daa
out
int
mov
popa
iret
cwtl
inc
push
dec
inc
in
mov
scas
cmp
xchg
mov
inc
les
push
je
lods
js
jge
and
xchg
inc
pop
push
stos
inc
mov
lahf
cmpsl
push
mov
icebp
sub
mov
and
inc
push
in
movsb
xor
loopne
ret
scas
pop
or
call
jns
dec
mov
push
stos
pop
mov
cmp
cmp
ljmp
sbb
fwait
xor
sti
cli
adc
clc
ss
mov
arpl
adc
sbb
ja
sub
adcb
rdtsc
pusha
sbb
pop
jb
clc
icebp
in
test
fistpl
js
push
test
ret
lret
push
xor
pop
dec
pushw
test
mov
xchg
jb
mov
or
leave
push
jno
fs
xor
loope
mov
adc
mov
or
add
lock
push
add
push
mov
adc
lret
sarb
add
loopne
clc
xchg
xlat
mov
and
inc
outsl
mov
inc
loope
imul
xchg
stc
push
mov
push
shr
inc
inc
dec
mov
dec
js
out
mov
pop
loopne,pn
and
in
cmpsb
popf
adc
xchg
add
add
dec
push
xor
mov
fwait
push
out
inc
xchg
ret
xor
push
sahf
test
clc
pop
add
push
rol
into
popl
push
mov
inc
pop
cmp
jno
ficomps
aad
ret
mov
test
in
mov
pushf
cmp
cmp
jmp
adc
xlat
add
cmp
cs
fldl
mov
mov
or
mov
jmp
scas
xor
push
loopne
xor
std
xor
clc
icebp
incb
xchg
sti
pushf
neg
aad
negb
cmpsl
lahf
push
rcrb
cmpsl
in
gs
and
rorl
jge
jb
pop
insb
clc
lock
mov
es
clc
clc
jbe
cltd
xor
arpl
adc
call
or
and
fs
and
orl
sahf
xchg
sbb
push
cwtl
lahf
insb
outsl
les
frstor
outsb
in
inc
mov
ja
mov
fsub
inc
dec
clc
add
xchg
ja
inc
adc
popf
or
arpl
ret
in
int
dec
call
dec
outsb
sbb
jo
insb
lock
jge
pop
gs
mov
sbb
lret
push
imul
rcrb
pop
dec
pop
mov
inc
aad
data16
cmp
xor
je
lods
xor
into
out
mov
es
lret
jbe
daa
xchg
shl
std
xchg
and
push
push
popa
fadds
clc
pop
shll
stos
and
mov
sub
mov
mov
inc
cmp
mov
xlat
rcl
and
test
sbb
sbb
and
jnp
sub
sbb
mov
rcl
mov
imul
sbb
push
mov
mov
sub
adc
rolb
mov
mulb
fwait
mov
adc
jne
mov
fsubrl
ds
jmp
mov
sub
decb
jo
jae
outsl
fdivrp
inc
inc
daa
notl
jb
or
fstl
fucom
push
push
pop
jge
sub
nop
mov
leave
mov
add
sarl
ljmp
ror
add
into
cmpsl
das
fdivr
jne
mov
stos
push
insb
or
adc
and
je
mov
xor
and
dec
jl
or
jp
sbb
cmp
rcrb
pop
dec
insb
mov
push
lods
sub
mov
mov
addr16
inc
aad
les
push
sbb
dec
mov
pop
stos
sbb
aaa
xor
rclb
out
adc
aas
jmp
out
in
sbb
jl
xchg
clc
adcb
push
and
jle
rorl
sub
movsb
jbe
sbb
push
xchg
jg
les
jle
je
cmp
jne
imul
or
or
or
nop
mov
push
ss
inc
mov
mov
aad
mov
push
faddl
dec
or
push
fsubrl
dec
mov
loop
dec
es
sahf
int
rorb
rcr
push
int3
push
dec
enter
mov
nop
loop
cmp
fsubrs
call
mov
or
xchg
mov
out
adc
cltd
pusha
ja
xchg
cli
stos
dec
xchg
bound
addr16
int3
cmp
test
insl
clc
jp
pop
das
inc
xor
and
adc
mov
xor
fs
dec
sub
daa
xchg
in
lret
push
xchg
dec
and
inc
int3
mov
pop
and
movsl
xor
js
pop
pop
inc
dec
lahf
mov
call
outsl
mov
mov
sub
int3
bound
sub
lret
add
mov
ja
std
sti
mov
push
nop
cmpsb
mov
xor
lock
loopne
or
push
mov
sub
ret
out
sub
pop
lea
mov
pop
push
or
imul
and
ds
or
test
adc
aam
ljmp
bound
mov
popf
imul
sub
enter
fisttpll
ja
cmc
dec
sub
dec
mov
jg
pop
fstpl
dec
mov
enter
loope
addl
sub
test
jbe
loopne
jno
xchg
mov
jnp
lea
jnp
jge
int
sti
insb
inc
jg
lock
jp
je
rolb
dec
dec
inc
frstor
fcmove
adc
std
rorb
mov
lds
mov
dec
xchg
roll
adc
xchg
mov
adc
sbb
ss
lods
and
cmp
movsl
or
jns
mov
xchg
ret
adc
jno
inc
pop
and
in
popf
jle
inc
movb
stc
arpl
jo
inc
notl
dec
push
cwtl
xor
movsl
add
mov
push
dec
push
icebp
mov
stc
xchg
jl
dec
mov
push
jb
std
pop
or
adc
push
push
dec
jns
call
pop
rcl
push
loope
test
cmp
mov
push
inc
test
fstps
xchg
xchg
loope
sub
cmp
ret
jle
push
xlat
cmp
mov
cld
out
dec
div
cmpl
cwtl
pushf
push
push
mov
sub
or
sbb
pushl
jl
xor
stos
cld
push
jnp
push
sti
scas
sbb
mov
das
or
xor
cld
push
push
pop
in
jp
adc
pushf
pop
popf
pusha
je
loope
ret
arpl
nop
xchg
dec
movsb
mov
sub
mov
ret
ficoms
xchg
or
cltd
iret
lock
mov
sbb
ljmp
xchg
or
andb
sbb
xchg
mov
int3
movsl
xorb
add
adc
xor
fcoms
jecxz,pn
xor
sbb
xchg
repz
adc
out
jns
pop
stos
out
push
inc
inc
mov
int3
push
imul
xchg
ret
mov
clc
and
sahf
insb
lcall
xlat
fcompl
sub
push
cli
movsb
fisubs
adc
or
pop
lret
stc
fucomip
xchg
bound
xchg
mov
pop
ds
les
push
ss
adc
popf
pop
jb
std
cmp
cli
mov
jno
sbb
insb
addr16
dec
fucomip
scas
in
dec
cmc
mov
sbb
bound
or
loop
mov
fbstp
shrb
movb
push
dec
incb
jb
je
mov
push
adc
mov
mov
pop
add
lods
or
repz
cltd
fcoml
push
cli
pop
je
xor
push
push
cmp
cmp
fcomp
rorb
rclb
mov
inc
cmp
insl
xor
ficoms
mov
cwtl
xchg
xchg
repz
jnp
jb
xchg
mov
jns
pop
cmpsl
inc
add
repnz
sahf
in
jmp
leave
mov
stc
test
movsb
and
js
sbb
out
loop
test
jl
stc
mov
aas
adcb
mov
and
jl
int
lea
dec
mov
adc
nop
push
mov
adc
pop
insl
add
testl
gs
inc
sub
outsl
jle
or
aaa
clc
insb
inc
cmp
push
sub
leave
xchg
outsb
negl
push
cli
and
aaa
mov
pop
pop
mov
loopne
sbb
mov
dec
and
loope
ja
arpl
add
sub
pop
outsb
mov
sub
hlt
inc
xchg
push
test
icebp
mov
inc
jmp
jmp
xchg
loop
cmc
or
sti
decl
cld
inc
inc
int3
xor
push
adc
and
icebp
cwtl
popf
mov
int3
adc
push
pop
xchg
clc
adc
je
cmpsb
daa
sub
add
hlt
inc
xchg
in
xchg
inc
fsubs
push
cmpsb
pop
ret
mov
xchg
pop
stos
fadd
sub
and
and
push
aaa
sbb
push
hlt
imul
sbb
cmp
aam
out
ud2
orb
jns
dec
sub
xchg
jmp
adc
fwait
dec
out
dec
jg
lret
sub
inc
enter
fstps
rcll
mov
aam
fcmovbe
out
in
into
repz
iret
or
xchg
lods
les
je
popa
xchg
sub
or
icebp
addb
or
add
mov
pop
sbb
orl
fcmovne
xchg
jno
fisubs
mov
sbb
pop
movsb
xor
cmp
push
mov
std
gs
sbb
mov
fstpl
cmp
xor
into
out
enter
mov
roll
insb
mov
push
sbb
cwtl
mov
loop
pop
jns
arpl
add
cmc
mov
or
imul
fnsave
int3
sbb
sbb
xchg
call
daa
push
stos
call
xor
and
fisubl
xchg
rcrb
fst
add
mov
sub
lods
std
sbb
or
movsb
mov
lret
sbb
in
sahf
sub
int3
stos
fnstsw
mov
dec
sbb
adc
mov
inc
aad
divb
and
fwait
and
fnsave
in
push
xor
push
push
imul
mov
movsb
and
pop
xchg
cmp
pop
jle
jmp
lret
or
xor
aaa
xor
fmul
sub
mov
mov
xor
test
movsl
pop
push
pushf
subl
mov
jg
stos
add
std
add
xor
aam
rclb
cld
adc
mov
push
lahf
scas
test
aam
pop
testl
aas
cmp
popa
imul
pop
mov
sub
sahf
jecxz
daa
mov
shl
jns
lret
mov
sbb
push
xor
mov
aas
cmp
xchg
xor
outsl
bound
sub
dec
aaa
cs
cmpb
push
or
test
je
or
fmul
xlat
add
stos
lds
sub
out
mov
out
xor
into
rclb
lret
push
popf
adc
scas
mov
xchg
aaa
push
and
enter
mov
loop
mov
xor
cmpsb
out
push
repz
add
ret
addr16
xchg
cs
out
mov
jb
jne
mov
push
jbe
jmp
xlat
cmp
ss
out
push
mov
add
pusha
or
out
in
jle
dec
lret
cmp
je
sets
sbb
xchg
inc
push
inc
jns
call
jo
adc
dec
mov
bound
addr16
pop
imul
mov
mov
les
aam
cld
cmp
jae
out
cmp
pop
arpl
out
test
jecxz
sbb
call
cmp
sub
fcoms
fdivl
pop
mov
roll
ret
arpl
dec
aas
cli
leave
test
mov
mov
sbb
out
xchg
pop
inc
div
aam
or
xchg
xchg
cwtl
pop
int3
insb
or
mov
push
out
adc
cmpsb
data16
add
adc
mov
mov
jne
or
fs
sub
cli
mov
dec
ss
test
outsl
sub
dec
push
shr
addr16
sti
pop
pop
enter
ret
mov
or
jbe
lea
pop
mov
fst
test
pushf
mov
daa
cmp
mov
loope
mov
insb
dec
add
mov
mov
mov
lahf
mov
dec
pop
xchg
mov
jbe
sti
lcall
mov
mov
hlt
fldenv
pop
sahf
pop
dec
inc
dec
rolb
jae
loop
int3
jg
mov
fsubl
icebp
pop
adc
gs
push
enter
cmp
mov
and
pop
jg
lods
pop
sbb
or
dec
jecxz
cwtl
add
push
cmp
mov
push
imul
lock
nop
arpl
fs
inc
mov
jbe
ljmp
dec
fcoml
pop
filds
push
push
push
into
adc
pop
insb
scas
add
fstp
sbb
xlat
jb
mov
pop
mov
jmp
ja
dec
push
fisubrs
mov
cmpsl
inc
xor
mov
mov
fucomp
iret
loop
cmp
gs
divb
push
pop
xor
or
cmc
cs
movsl
or
add
in
fiadds
xchg
xor
jp
adc
or
add
jb
ja
mov
or
movsb
aam
rorl
and
insb
subl
mov
test
cltd
push
adc
mov
imul
aam
and
pop
popa
mov
inc
and
test
mov
ret
lret
std
and
inc
ljmp
mov
mov
jecxz
push
xor
push
iret
movsl
push
pop
scas
out
mov
push
pop
and
push
dec
sbb
adc
movsl
mov
sub
rsqrtps
mov
je
jo
cwtl
dec
insl
mov
je
push
hlt
stos
jns
std
pushf
or
test
pop
jns
push
sbb
inc
mov
jecxz
cwtl
and
hlt
sbb
mov
sbb
ret
sub
jl
xchg
lret
daa
push
sbb
cmp
movsl
or
sub
call
push
jp
adcl
pop
enter
clc
push
xchg
out
stc
mov
imulb
int3
pop
ja
mov
pop
aaa
imul
sbb
xor
sub
lahf
pop
dec
pop
stos
jb
test
or
adc
sub
gs
popa
nop
movsl
insb
xor
and
jo
fcmovbe
addb
and
gs
lods
in
push
or
cwtl
enter
repz
les
dec
dec
mov
in
stc
xor
xchg
push
movsb
mov
xchg
repnz
int3
cs
xchg
push
lock
mov
dec
andl
push
lods
fs
out
push
ret
cltd
inc
mov
inc
dec
mov
clc
cmp
xchg
cs
jge
aad
inc
mov
add
iret
sbb
push
ja
fmul
jae
sbb
pop
test
jae
sub
int
cmp
ret
pushf
cmpsb
popa
push
pop
and
and
pusha
enter
fmulp
jno
push
lods
add
jecxz
sbb
ror
data16
pop
inc
cmp
xor
in
mov
out
sbb
jp
or
fwait
sub
lsl
and
mov
aas
leave
xor
hlt
add
lea
or
addr16
and
ljmp
cs
fiaddl
sub
jne
push
fcompl
filds
add
mov
pusha
jmp
add
xchg
add
mov
fistpll
and
lret
cli
sbb
jb
add
push
adc
leave
or
cmpb
fs
adc
lock
insl
in
scas
insb
in
lcall
push
pop
add
mov
cmp
xchg
xchg
cmp
adc
cld
sarl
mov
mov
fidivrs
mov
jo
xchg
push
fcomi
out
mov
popa
fcoml
int
or
xchg
repnz
fildl
iret
or
add
pop
leave
jne
insl
stos
enter
imul
pusha
jmp
int3
mov
int
dec
pop
mov
adc
jb
leave
test
mov
xor
leave
sbb
inc
push
fwait
ds
inc
int3
rcrb
je
xor
mov
mov
sub
cli
int
inc
or
testl
inc
jge
cmp
lock
inc
sbb
jo
cmp
in
jae
clc
mov
fwait
aas
fdivl
sub
shll
sub
lcall
lock
lock
ds
pop
pop
push
push
lods
leave
xchg
notl
xchg
sbbb
mov
testl
aas
mov
shrl
out
test
das
xlat
and
xchg
sahf
cmp
int
mov
pop
inc
lret
sbb
out
dec
jle
fimull
jmp
imul
mov
mulb
push
shlb
std
push
lea
lds
mov
xchg
movsb
push
fldenv
rcrl
insb
jp
loope
adc
cmp
ds
pop
sub
repnz
mov
or
lock
jl
sub
jns
push
mov
pop
rcrl
sub
mov
mov
test
aas
sub
cwtl
push
cld
cmp
and
push
sti
aaa
mov
cs
fidivs
popf
lcall
loopne
dec
mov
and
cmp
jns
add
stos
lret
xchg
mov
scas
dec
jne
push
and
jnp
xchg
sbb
pop
jmp
sub
xor
or
in
inc
sub
mov
js
or
outsb
out
in
sahf
jae
pushf
jb
lods
jnp
pop
pop
fwait
mov
mov
sti
ret
mov
nop
ljmp
jle
and
xor
and
out
aad
fstl
call
int
aam
mov
push
mov
or
dec
sbb
rcll
sub
enter
mov
pop
lods
jge
inc
lods
stos
jl
fucom
clc
test
in
das
inc
lret
addr16
xchg
lret
xor
popa
stc
hlt
enter
subl
pop
addr16
sti
icebp
pop
add
nop
popa
xor
js
push
lods
inc
xchg
cli
je
mov
add
inc
jae
fisubrs
rcll
in
ficoms
mov
push
scas
lods
js
mov
daa
loop
xchg
std
outsl
ljmp
add
cli
pop
sbb
pop
or
jecxz
mov
int
dec
outsl
nop
push
in
arpl
shrl
jmp
jmp
outsb
outsb
mov
jmp
pop
shrb
fwait
mov
pushaw
jle
sub
icebp
push
push
in
stos
aas
push
das
pop
dec
add
xchg
je
std
push
sbb
and
adc
sar
in
arpl
mov
lea
pop
sarb
mov
ds
dec
sbb
aas
mov
fdivrl
jnp
push
sub
loopne
mov
dec
pop
pusha
cmp
jl
jg
outsb
mov
or
mov
mov
xchg
adc
mov
popf
imulb
sbb
popa
stos
repz
aad
out
jmp
mov
xchg
mov
pop
ret
jle
out
arpl
dec
dec
or
or
es
and
add
and
xchg
out
mov
int
xchg
ret
test
dec
and
andb
jp
sbb
pusha
mov
mov
mov
fisttpll
mov
pop
xchg
test
push
xchg
out
sub
push
mov
into
pop
stc
xchg
push
icebp
fstl
jns
xchg
leave
loope
test
add
mov
sub
jle
jo
cmp
loope
mov
test
jnp
sub
sti
or
ficoms
nop
stc
out
bound
adc
sbb
mov
test
push
add
leave
inc
xlat
stos
push
xor
xchg
xor
inc
leave
push
in
js
adc
aam
cmp
stos
push
imul
int3
scas
sub
mov
movsb
sbb
sub
or
mov
jmp
lret
dec
inc
dec
sbb
lahf
js
push
lahf
xchg
data16
lock
fdivp
aam
daa
scas
movb
lock
test
lret
mov
pusha
cmpsb
cmp
add
out
xor
hlt
mov
ret
andl
out
aas
or
testl
xchg
in
ljmp
int
rorl
adc
push
das
pusha
test
loop
sub
jnp
loop
xorb
mov
add
fcmovne
scas
addb
out
fldcw
push
jno
inc
and
sub
aas
lods
mov
and
adc
xor
cltd
mov
push
ficomps
pop
mov
add
xchg
hlt
fdivs
test
outsl
and
out
mov
pushf
jnp
xor
dec
or
stos
push
lret
repnz
dec
add
pop
and
jg
fwait
negb
jno
jae
and
jmp
jmp
loop
loopne
dec
icebp
mov
into
out
jnp
inc
mov
sub
shll
mov
pop
test
test
adc
rorl
data16
cs
fdivs
and
andl
jne
add
pop
push
or
ljmp
fistpll
mov
jp
movsl
jmp
adc
sbb
insl
pop
push
dec
jo
xchg
push
in
out
dec
xchg
bound
push
add
in
test
jmp
or
mov
out
inc
sub
icebp
xor
push
fwait
push
add
cmp
mov
mov
jo
aad
daa
cld
push
repnz
mov
jp
andb
fsubrs
jnp
mov
imul
mov
in
or
lock
loopne
test
cmc
add
lea
pop
sbbl
adc
mov
jl
fsubrl
cs
arpl
xchg
push
push
das
ds
notl
or
push
cwtl
daa
xor
aas
push
testb
push
pop
or
mov
xchg
loope
hlt
mov
shrl
mov
movsl
jns
mov
lock
addr16
push
adc
add
mov
sub
dec
int
scas
push
neg
lock
jecxz
add
inc
outsl
xor
jmp
insl
shll
popf
xor
movl
xor
adcb
push
mov
subl
mov
add
dec
sbb
sti
push
loope
jbe
add
jb
lods
inc
inc
inc
jg
mov
aam
mov
lock
adc
lret
fstpl
cmpsl
out
loope
add
sbb
hlt
mov
and
sbb
aad
jge
jg
xchg
push
aaa
popa
xchg
int
hlt
push
outsl
cmpsb
adc
lds
mov
cld
test
and
sti
dec
xchg
imul
adcl
orb
mov
and
mov
lds
mov
out
or
inc
pop
sub
mov
fwait
adc
cs
or
les
in
ljmp
push
xchg
pop
pop
sahf
push
push
mov
fisubs
or
lret
push
xlat
shll
mov
imul
cmp
push
mov
jg
mov
push
test
popa
sahf
cmpsl
bound
cs
xchg
mov
sub
jb
sbb
pop
cmp
int3
std
int3
ret
mov
outsl
popa
and
loop
insl
dec
mov
sbb
mov
mov
mov
mov
xor
test
divb
insl
mov
es
clc
mov
push
dec
lods
insb
sbbb
xorl
and
test
aam
out
mov
add
and
dec
mov
adc
ficomps
sub
dec
aad
adc
xchg
sub
cs
outsb
pop
add
mov
push
mov
adc
bswap
and
jns
imul
lds
and
js
in
xor
mov
add
mov
out
push
lock
pop
mov
lods
cmp
out
sub
adcl
je
loope
cltd
xor
div
test
repz
xchg
xor
mov
popa
xchg
adc
fwait
lahf
adc
mov
sti
sbb
mov
loopne
repz
test
cmc
dec
fisubs
add
sbb
push
cltd
inc
inc
jl
sbb
dec
or
movsb
insb
sbb
leave
je
mov
ret
pop
pop
les
sub
testl
xor
sarb
sarb
loop
jle
mov
pop
and
ror
mov
scas
xor
data16
fisubrs
stc
adc
das
imulb
loop
or
cs
enter
add
dec
xor
xor
inc
xchg
rcrb
rolb
lods
arpl
mov
push
cmp
pop
push
fsubrl
xor
mov
ret
xor
dec
aaa
dec
lret
xor
jb
xchg
outsb
xchg
add
xor
idivl
lret
sub
idivb
ds
stos
out
shrl
js
and
mull
lds
idivb
inc
mov
cmp
mov
pop
repz
pop
orl
cmpsl
addr16
dec
pop
addr16
gs
das
ljmp
pop
xlat
cli
xor
aas
sub
cld
adc
mov
jae
leave
in
and
mov
push
in
inc
mov
sbb
jle
fstpt
inc
mov
or
fwait
sub
cmp
stc
lock
lahf
adc
cmp
xchg
call
jp
add
lcall
inc
inc
xchg
in
cmpsl
mov
movsl
jb
or
lahf
cmpsl
lcall
add
pop
or
cmp
popa
mov
ja
fwait
cmc
pop
and
aad
inc
xchg
xchg
sub
jb
das
lcall
pop
test
mov
push
inc
xchg
nop
sti
mov
lds
sub
xor
ret
lock
shll
or
stc
pop
mov
pop
cmpsb
and
xchg
shll
insl
cmp
push
or
in
int
ljmp
xor
cs
jl
inc
pushl
fbld
add
lcall
bound
cmpsl
mov
and
xor
or
ficoml
fsubl
xor
in
test
stos
mov
sub
js
gs
js
ja
push
cmpsb
movsl
data16
mov
adc
mov
in
xchg
lret
jno
jge
cmc
mov
rcrl
xchg
mov
lods
pop
and
pop
dec
push
mov
sub
out
testl
fcmovnb
push
std
stos
cmp
std
cmp
arpl
ret
sbb
adc
stos
sti
push
jns
cmp
loopne
mov
jge
arpl
xor
jp
repz
jne
dec
popa
push
cwtl
pop
int
verr
fbstp
adc
dec
fcomps
repz
pop
mov
xor
or
jnp
movsb
pop
lahf
cmp
outsl
repnz
fwait
push
add
sbb
add
jmp
or
loopne
jecxz
cmp
add
push
out
scas
add
roll
arpl
nop
fldcw
jo
mov
and
jo
lcall
add
inc
fs
sub
int3
loope
jae
inc
lcall
jo
cmp
sub
jp
stos
int
ljmp
cmp
fnstcw
neg
add
lock
mov
popf
leave
jbe
mov
cmp
push
jmp
xchg
lods
icebp
cmc
jnp
out
leave
fistpl
fcompl
xchg
cmp
mov
xchg
mov
loopne
mov
leave
outsl
jne
mov
mov
jnp
filds
ret
add
sbb
mov
inc
into
add
stos
cwtl
inc
int
pusha
je
ja
sub
cwtl
lahf
push
rolb
shl
dec
cmpsb
std
jne
cmp
fnstenv
pusha
push
adc
push
cltd
cmp
xchg
jns
arpl
mov
rorb
push
shr
inc
adc
je
xchg
cmpsl
jmp
push
arpl
frstor
sub
pushf
xchg
out
inc
movsb
fsubrs
pushf
cltd
and
lock
mov
jnp
mov
push
lock
sub
imul
dec
pop
xor
add
scas
mov
dec
mov
loop
jb
cmpsl
daa
xchg
sti
popf
and
push
xor
cmp
test
rclb
cmp
sbb
mov
pushf
pop
add
jge
cmc
jle
ds
or
jns
pop
mov
inc
icebp
shll
add
and
pushf
jae
cmc
outsb
adc
xchg
or
mov
push
fs
push
adc
jno
jns
xor
and
xchg
outsb
adc
inc
repz
mov
arpl
mov
in
mov
push
jg
mov
push
out
sti
aas
sbb
out
add
mov
jo
add
mov
xchg
data16
mov
insl
xlat
int
shrl
xor
sub
or
pop
mov
jle
divl
xor
andl
xor
mov
sub
subps
or
movsb
mov
jae
insl
pushf
testl
or
clc
adc
call
xchg
adc
adc
jne
outsl
xor
push
sub
mov
mov
dec
push
sbb
int
push
loope
test
jmp
scas
into
inc
fisttpll
fldcw
and
adc
cltd
dec
xchg
into
jp
dec
jbe
cmp
inc
clc
adc
push
out
scas
push
out
add
ficoms
add
je
jge
lds
scas
mov
movl
mov
push
pusha
idivb
jns
and
inc
xorl
sub
cmp
mov
and
fdivp
test
int
push
cmp
faddl
mov
add
cmpsb
icebp
xor
add
test
jo
ja
jmp
imul
cld
xchg
filds
push
mov
inc
int
jl
sub
frstor
pop
pop
pusha
mov
jb
xchg
add
ss
nop
jbe
pop
mov
jns
mov
inc
jbe
fdivl
and
cs
out
add
sarl
shll
repnz
add
lock
ds
push
dec
jle
pop
dec
fcoml
out
mov
sub
ljmp
pop
incb
repz
fsubrs
cmp
leave
call
xor
test
mov
movsb
scas
jle
fbld
jae,pt
inc
and
mov
sti
data16
in
mov
test
nop
es
xchg
jb
iret
and
cmp
push
bound
insb
mov
je
jle
push
fsubl
push
pop
scas
inc
insb
jb
xchg
repnz
repz
cld
les
aad
lahf
mov
div
mov
in
mov
mov
add
loop
xchg
cmpsl
jmp
pmuludq
mov
cwtl
jl
push
adc
mov
mov
cmpsl
pop
jae
cmp
fcmovnu
and
cmp
loop
call
inc
in
push
sbbb
cli
movsl
rcrb
lret
in
pop
push
sub
adc
call
mov
jno
add
cld
cmpsl
and
mov
mov
dec
test
rclb
insb
repnz
adc
out
or
mov
insl
aaa
jl
out
je
xchg
xor
daa
out
nop
mov
ret
push
cltd
test
adc
inc
xchg
sub
repnz
sti
xchg
sub
inc
insl
mov
orb
aas
insb
sahf
xor
cltd
bswap
adc
inc
cmp
in
xor
sbb
mov
and
popa
filds
popf
pop
dec
and
lea
sub
mov
test
add
dec
pop
and
jg
pop
frstor
dec
xor
lock
and
jb
popa
adc
sti
aam
dec
inc
add
dec
add
pop
mov
add
mov
icebp
pop
mov
xor
je
push
mov
mov
pop
ret
inc
loope
and
or
in
mov
icebp
or
lcall
loopne
fstps
xchg
js
loope
enter
or
shr
sub
pusha
ljmp
mov
ror
ljmp
jg
ret
xchg
pop
mov
clc
data16
dec
sbbb
mov
inc
adc
repnz
rorl
fnsave
xor
movsb
dec
into
mov
sbb
xor
scas
testb
int
jne
and
lock
and
iret
jmp
fstl
adc
test
ret
outsb
dec
or
subb
loopne
dec
test
sub
out
imul
jp
and
xchg
rclb
int3
mov
dec
pop
fwait
lods
dec
add
jnp
je
cmpsb
and
cmc
stc
test
cmp
xor
add
dec
in
andb
and
jmp
pushf
jg
inc
jno
daa
psrlq
or
inc
cmpsb
repnz
into
js
into
test
mov
mov
or
sar
cmp
call
and
hlt
shrl
std
sahf
jne
pop
pop
repz
cmp
fistpll
aam
into
mov
in
pop
test
jb
out
ja
pop
or
pop
es
outsb
adc
test
jbe
or
inc
ret
stos
pop
and
pop
mov
iret
adc
add
or
mov
cmc
fidivl
hlt
push
cs
sar
sub
mov
clc
es
pop
out
mov
jb
mov
fldt
fidivl
movsb
push
mov
and
cmp
inc
push
mov
or
mov
pop
je
inc
in
jne
movsl
jge
add
mov
in
sar
mov
push
cmpsb
push
mov
push
jg
daa
pop
daa
stos
daa
jl
insl
rolb
pusha
fucomi
mov
cmc
jns
cmpsb
testl
jl
sbb
dec
or
dec
daa
fmul
loope
dec
jmp
adc
movsl
in
jnp
cmp
daa
add
imul
pop
push
sbbl
dec
and
dec
dec
int
std
movsl
lock
lds
leave
sarb
test
ret
mov
bound
test
int
xor
jbe
add
and
inc
inc
push
loope
sbb
adc
xor
test
cmpl
xor
pop
sahf
fcmovnbe
stos
inc
icebp
scas
fcompl
out
push
dec
movd
nop
add
cmp
push
jae
sbb
or
aaa
adc
mov
out
pop
arpl
cltd
mov
in
cmp
jno
inc
mov
pop
adc
jo
enter
or
clc
sub
enter
in
subl
add
and
in
fs
jle
rol
out
aad
les
clc
aas
cmp
in
lahf
adc
stc
xor
outsl
jb
lcall
sbb
xor
mov
stos
add
pop
sub
out
or
mov
add
sbb
jle
xchg
add
pop
mov
lret
jae
or
dec
mov
and
out
mov
or
mov
cmpsl
lret
add
pop
adc
pop
ret
mov
push
or
add
out
das
dec
dec
mov
outsl
mov
inc
push
pop
lcall
add
or
iret
das
repnz
push
xchg
inc
and
sub
jle
xchg
or
out
jbe
jg
adc
adc
mov
inc
scas
imul
bnd
pop
out
pop
or
dec
sbb
xor
pusha
pop
scas
popa
popf
mov
into
pop
add
or
cmpl
sub
xchg
inc
subb
or
push
fs
xor
pop
xor
fwait
cld
fiadds
sub
jnp
fists
inc
cwtl
pop
decb
mov
add
loop
mov
lods
mov
dec
xchg
xchg
cld
imul
mov
mov
push
idivl
jne
dec
jno
cld
movsb
pop
insl
loope
and
push
movsl
inc
push
stc
arpl
jbe
shrl
cmpsb
inc
mov
adc
pop
inc
sar
mov
shrl
aaa
test
and
icebp
mov
mov
loope
cmp
or
popf
out
and
stos
mov
or
jnp
inc
mov
ljmp
sahf
xlat
pop
mov
hlt
sahf
sub
xor
sbb
outsb
and
pop
aad
test
mov
cmp
inc
pop
es
pop
icebp
popf
xchg
aad
cmp
jecxz
sbb
lea
int3
dec
lret
mov
push
shll
add
push
push
cmpsl
and
movsl
dec
cmc
add
xchg
lret
sahf
mov
xlat
and
jnp
outsb
inc
test
jecxz
lock
inc
cltd
mov
popf
mov
jne
fucomi
sahf
rclb
divps
imul
xor
test
mov
imul
in
jno
dec
lods
mov
mov
xchg
adc
pop
popf
imul
cltd
cwtl
into
les
mov
stos
out
and
jne
mov
inc
cmc
mov
xor
aad
jnp
outsl
loopne
in
mov
cmp
and
jo
cli
jns
mov
cltd
add
nop
sub
fwait
je
xchg
stos
int3
ja
mov
lods
cli
fidivrl
mov
jecxz
sub
inc
je
pop
movswl
and
daa
ret
cld
out
jne
rorb
lods
dec
xor
xchg
cmpsb
xor
sub
mov
mov
in
push
cmp
andb
sbb
sub
pop
cmp
test
dec
ret
roll
and
fadds
push
mov
ja
fldt
cmp
gs
andl
in
shl
lock
sub
adc
inc
pop
fsubr
and
jb
stc
loope
ret
pop
or
jo
xor
pop
stc
aam
inc
out
push
out
and
loop
addb
jg
push
int3
mov
xchg
xor
call
inc
sbb
je
jecxz
sbb
inc
std
push
ret
in
movb
cmp
out
sub
push
pop
dec
dec
js
scas
inc
add
fbld
icebp
pop
xchg
outsb
js
pop
xchg
cs
loope
insb
xchg
das
add
push
sbb
cli
into
lahf
and
pop
cs
mov
push
rcr
sbb
sbb
test
ret
testl
daa
cwtl
cmc
pop
cmp
mov
movsb
pop
nop
loope
sub
push
cmp
xchg
scas
add
mov
dec
add
or
or
movsb
inc
xlat
ljmp
adc
mov
mov
and
adc
out
sub
sbb
inc
cs
sub
inc
aam
divl
jle
rol
mov
mov
mov
dec
mov
sbb
xchg
xchg
std
mov
mov
lock
lcall
out
fdivp
dec
jo
rcll
adcb
mov
xchg
mov
sbb
xchg
ret
add
sbb
test
adc
xchg
fildll
sub
add
dec
pusha
push
sbb
push
add
push
xor
lcall
pushw
lret
das
test
jnp
arpl
and
in
rcrl
ret
outsl
add
mov
cmpsl
or
jbe
into
push
dec
cld
les
push
mov
mov
loopne
jnp,pn
push
out
outsb
jo
test
test
xchg
jg
jne
andl
sbb
lock
call
mov
adc
cmp
int
dec
stos
xorl
xor
jge
stc
mov
push
out
dec
into
fcmovb
push
or
in
dec
xchg
mov
mov
and
lcall
loop
and
cmc
sub
int
sahf
cmp
stc
enter
and
lcall
scas
aas
mov
jo
int3
push
mov
addr16
shlb
outsb
and
add
or
je,pn
fldl
mov
lret
mov
mov
cmp
pop
cmp
hlt
fnstsw
inc
inc
test
jle
or
fcoms
fldl
daa
sbb
mov
sbbb
scas
data16
dec
sub
mov
cmp
cwtl
xchg
xchg
lahf
cli
mov
pop
inc
stos
je
pop
adcl
add
mov
test
cs
jbe
shll
ror
das
xlat
and
lret
add
insb
inc
ljmp
push
pop
scas
rcrb
adc
mov
xor
jp
mov
outsl
dec
add
out
adc
mov
adc
clc
rcrb
test
fiaddl
mov
out
push
pop
jae
and
scas
cmpsb
scas
aaa
leave
cwtl
add
dec
pop
mov
lcall
mov
sub
mov
cmp
jbe
fisubrs
sbb
xor
lods
mov
in
adc
mov
jb
popa
adc
cmp
movl
xlat
test
jae
imul
jg
mov
jb
sar
adc
in
notl
fisttpll
xchg
mov
push
adc
pop
sar
fwait
and
jnp
popf
mov
cmp
int
jecxz
pop
xlat
sti
xor
lcall
out
sub
mov
adc
sarb
ja
iret
cmp
lock
scas
xchg
pop
mov
test
movsb
mov
sbb
sub
push
and
int
iret
sbb
mov
add
enter
jb
push
sti
fadds
xchg
ljmp
fisubrl
pop
clc
rorb
test
cltd
jle
das
xchg
call
pop
and
sbb
test
cwtl
sbb
insl
rcl
filds
dec
xchg
jo
add
mov
jl
in
pop
dec
and
cmpsb
hlt
mov
sahf
adcb
das
out
jl
lds
bnd
mov
mov
shll
xchg
bound
fcompl
stos
stos
scas
cmp
roll
dec
imul
movsl
icebp
or
sub
iret
xchg
stos
jmp
jmp
enter
push
lods
add
int3
or
push
push
dec
shrl
mov
pop
ret
push
imul
ja
das
jle
int3
fnsave
scas
cmp
cltd
jge
loopne
adcb
dec
pop
push
into
jp
jo
pop
sub
pop
pop
lea
jle
jbe
adc
test
cld
ficomps
test
add
test
out
int3
mov
and
and
loopne
cs
out
sub
repz
jae
or
movsb
jnp
inc
sbb
adc
rol
jmp
test
cs
dec
and
outsl
in
mov
and
repz
rcrl
xor
adc
pop
add
in
ret
adc
test
in
rcrb
shll
popa
jmp
data16
push
negb
pusha
movsl
jle
and
jp
jle
adc
add
inc
jno
or
add
sub
jne
push
pop
not
fsubl
daa
subl
cmp
test
sbb
and
jg
aaa
add
and
xchg
addr16
inc
or
adc
shll
or
outsb
stos
cli
cld
test
arpl
cmp
mov
arpl
inc
sti
pop
inc
cmp
xchg
in
mov
jmp
xor
je
or
sub
popa
and
flds
push
lods
pop
dec
in
mov
lret
data16
adc
orl
pop
sub
inc
and
or
fstl
movsb
arpl
cmp
mov
jnp
test
pop
mov
repz
cwtl
cld
and
repz
mov
pop
test
sbb
sbb
mov
loop
mov
mov
popa
cltd
into
lahf
mov
mov
add
mov
outsl
in
loop
into
adc
pusha
enter
roll
sbb
dec
test
push
push
cli
xor
and
mov
pop
sbb
push
pop
je
xlat
sub
dec
push
mov
mov
jle
lcall
lcall
sub
xchg
xor
divb
sub
iret
jl
push
pushf
sti
inc
jns
fwait
test
jo
push
adc
push
insb
int3
xchg
mov
pop
je
aam
push
adc
or
ret
cmpsl
scas
fcomps
rcrl
sub
lods
lret
rcrb
fisubs
ret
xchg
cmc
xchg
pop
fcoms
push
xchg
or
lcall
push
cmc
push
xlat
push
sahf
mov
jle
jmp
xchg
adc
hlt
or
sti
clc
inc
int
mov
pushf
and
rorl
push
add
js
repz
pop
mov
push
mov
mov
mov
sub
sub
pop
jns
lret
out
aas
enter
sahf
js
out
pop
lods
addl
rorb
mov
subl
sbb
pop
jl
or
rclb
nop
push
sti
stc
pop
imul
fld
add
xchg
out
pop
mov
mov
fidivl
outsb
push
in
addr16
fldl
inc
jns
mov
cmp
movsb
cmp
jae
cmpsl
or
je
je
andb
mov
cmp
loope
xchg
add
bound
add
pop
jb
mov
fcomps
xchg
push
dec
jbe
xchg
jl
out
and
stos
rcrl
bound
out
mov
cmp
loopne
imul
out
fwait
xchg
out
and
out
sub
faddp
push
sbb
push
mov
int3
add
push
adc
add
out
dec
out
jnp
dec
mov
scas
xor
pop
cmpl
insl
sub
sbbl
and
mov
dec
addr16
cmc
popf
jb
xchg
jl
or
push
stos
mov
jg
icebp
jmp
jl
mov
push
insb
dec
in
pop
adc
or
nop
das
and
aaa
push
loope
cmp
pop
pop
testb
divb
test
jmp
adc
sbb
icebp
aaa
mov
iret
jmp
fwait
jg
mov
pusha
jp
mov
test
mov
std
pop
out
mov
add
std
push
and
sub
ljmp
xchg
sarb
xchg
mov
mov
push
jp
sub
jmp
push
stos
jecxz
xor
hlt
shlb
lcall
out
aas
cwtl
bound
hlt
pop
add
add
mov
lcall
mov
mov
loop
cmp
ret
dec
fstl
outsb
repz
jg
repnz
mov
arpl
out
or
add
adc
pop
mov
stos
lret
ljmp
mov
js
jbe
mov
mov
pop
pop
or
inc
insb
xchg
xor
push
xor
sbb
fisttps
jp
sbb
scas
mov
lea
dec
sbb
nop
not
cmp
push
imul
cmp
dec
and
xor
push
mov
mov
mov
sbb
pusha
das
jae
lret
test
in
add
jmp
bound
jne
cmp
call
push
mov
push
xchg
lahf
mov
xchg
pop
mov
ret
jge
popa
test
cltd
int3
and
cmpsb
mov
jnp
xlat
mov
jp
leave
push
cltd
daa
movsb
xchg
fucomip
or
mov
adc
jp
adc
mov
mov
ficoml
orb
add
insb
xlat
insb
pop
inc
and
nop
lods
mov
popa
sub
andl
aad
in
adcb
repnz
dec
cli
add
jmp
cmp
xlat
mov
fstps
push
loop
mov
mov
or
mov
enter
mov
negb
and
call
push
add
insb
sahf
sub
sarb
cmp
adc
pinsrw
out
add
fdivl
mov
mov
dec
lock
pop
stos
mov
mov
shr
aam
add
mov
dec
outsb
sub
cmp
add
mov
push
cmp
add
sbbl
inc
mov
imulb
cltd
pop
stos
stos
fisttpl
push
stc
or
jno
rolb
fmull
adc
rorl
pop
das
test
jns
nop
and
dec
inc
loopne
sahf
cmp
bound
jno
insb
or
xor
cmp
std
test
rsqrtps
ficomps
pop
mov
ljmp
pop
pop
jp
cmp
cmp
jns
repz
cmp
add
dec
outsb
mov
mov
push
rorb
xor
fwait
push
pusha
psubb
sbb
and
out
out
shrb
pop
dec
mov
inc
and
in
fstp
enter
mov
jbe
add
add
cmpsb
loope
mov
mov
aaa
leave
icebp
mov
sbb
test
out
aad
lds
sbb
popf
imul
mov
daa
xor
mov
popf
into
in
mov
mov
test
dec
lcall
rorl
pop
pusha
jbe
out
xor
and
sbb
movsb
and
xor
push
sahf
pop
pop
and
sarl
adc
mov
call
jg
imul
jne
out
jae
sub
dec
icebp
inc
mov
pop
aad
mov
sbb
add
loopne
mov
dec
scas
jb
fsubr
dec
cld
popa
imul
mov
push
add
dec
rcll
scas
inc
insb
inc
in
xchg
mov
sub
bswap
loope
xchg
sub
sbb
sbb
repz
das
xor
testb
mov
rolb
lret
jne,pn
add
dec
cld
sbb
les
das
lret
add
adc
pushl
push
cmp
mov
pop
dec
inc
enter
dec
les
in
mov
mov
add
mov
xor
scas
and
cmpsb
and
lcall
test
fs
adc
sbb
lock
cmp
xor
sub
les
fidivl
xor
mov
mov
rol
stos
daa
int3
in
push
inc
mov
cmp
inc
push
push
adc
and
mov
push
push
xor
push
out
int
pop
sbb
xchg
sbb
popa
outsb
xor
inc
jecxz
sbb
push
inc
pop
std
das
dec
in
and
dec
jno
push
aas
and
cmpsl
pop
xor
lahf
sbb
inc
sbb
cmp
pop
jmp
imulb
outsb
and
jb
pop
leave
mov
into
cmp
sbb
lds
lock
adc
arpl
mov
add
call
sub
out
pushf
adc
lods
xor
xor
jno
movsl
sbb
adc
out
and
pop
mov
outsl
sbb
cmpsl
jg
mov
and
dec
push
repz
inc
xchg
mov
sbb
and
or
test
int3
mov
hlt
add
fdivrs
add
jns
xchg
xchg
or
cld
repnz
cld
into
inc
pop
lret
cli
repz
adc
inc
pop
pushf
scas
dec
stos
dec
or
mov
dec
lods
jmp
pop
in
addr16
cmpsb
adc
mov
das
mov
das
sub
jno
and
sub
push
inc
out
cmpsb
sub
incb
inc
push
adc
add
aas
sub
cltd
mov
jbe
fstps
into
pop
xor
emms
mov
lret
nop
movsl
mov
mov
int
mov
pop
adc
call
popa
xchg
adc
dec
aam
scas
jp
jle
or
sbb
mov
inc
mov
or
insb
dec
xchg
pop
movsl
adc
adc
or
jnp
dec
imul
sbb
fistps
fidivrl
dec
push
or
repz
enter
pop
fucomip
orb
lds
packsswb
mov
in
fildl
cltd
ret
xchg
sub
sub
and
into
je
or
jbe
das
in
stc
out
cmp
outsb
shl
jo
rcr
jne
cmpsb
sbb
mov
xchg
mov
cmp
push
mov
xor
cmp
loope
and
packuswb
xor
loope
mov
shll
fistl
out
pop
pop
scas
jno
and
mov
les
adc
jge
mov
or
int
mov
notl
push
sub
add
fs
lock
mov
in
or
cmp
mov
sub
jb
in
inc
add
aaa
mov
and
adc
lret
js
xchg
mov
jnp
jmp
jns
and
enter
or
imul
std
cmpb
sbb
int
dec
or
pushf
mov
int3
dec
sti
push
dec
mov
popa
int3
jb
cmp
sbb
push
adc
mov
and
clc
outsl
in
adc
adc
bound
rorb
mov
ret
fdivp
nop
pop
cmp
es
out
jle
mov
add
sub
jg
pop
es
mov
xor
hlt
roll
sbb
mov
les
orl
cmpsb
cmp
push
inc
ret
bound
inc
mov
xchg
cmp
or
jge
loopne
adc
or
adc
push
test
jle
test
lret
js
jne
sub
adc
mov
mov
add
pop
mov
and
dec
dec
gs
and
push
pushf
dec
je
jle
std
outsb
stc
mov
xor
outsb
daa
loope
xorb
clc
fistpll
and
push
or
inc
adc
sub
gs
ret
outsb
shll
scas
aam
mov
repnz
mov
dec
stc
push
adc
sbb
test
idiv
mov
pushf
pop
cmpl
repz
xor
mov
fsubr
out
roll
mov
and
aas
mov
aam
mov
sub
sbb
push
dec
xchg
mov
mov
sbb
adc
and
cmp
clc
ljmp
and
lea
mov
in
mov
popf
push
mov
xor
sbb
gs
loopne
fs
mov
inc
xor
add
ret
sub
cmp
and
or
add
bound
pusha
lods
jnp
loop
inc
mov
push
push
pop
cmp
fdivrs
aas
jge
cmp
decb
movsl
and
loope
inc
lret
cmpsb
mov
mov
std
aam
pop
inc
jecxz
fsubrl
push
das
pop
mov
test
das
or
sbb
jb
mov
cltd
or
mov
movsb
nop
cli
pop
dec
sub
das
mov
int
adc
xchg
lock
sbb
jmp
or
mov
xor
cmc
sbb
cld
jp
inc
dec
cmp
call
cli
dec
or
jo
mov
and
movsl
int
jge
shrb
cld
mov
fadds
pop
dec
int
xor
testl
stc
mov
outsb
or
mov
cmp
add
out
lahf
xlat
mov
jmp
sbb
jb
pop
das
dec
ret
sbbl
mov
adc
dec
dec
ljmp
aad
sbb
nop
and
es
jns
xchg
mov
or
inc
xor
mov
or
outsb
subb
cmp
mov
xchg
test
clc
test
aaa
inc
sahf
lock
and
push
jae
mov
pop
dec
imull
push
pop
jl
fstpt
pop
loopne,pt
loope
incb
and
push
in
jmp
pop
xor
pushf
xchg
sbb
loop
je
mov
dec
fstps
mov
in
dec
cmc
mov
sub
push
mov
sti
in
daa
push
cmp
notl
xchg
lds
std
ljmp
aam
jnp
jb
ss
bound
data16
clc
cs
out
daa
add
xor
and
cs
jl
ss
iret
dec
out
ret
jno
xlat
inc
ficompl
fdivrs
add
iret
out
cmp
lea
xchg
push
dec
jne
pop
dec
shlb
scas
insl
mov
ds
arpl
sbb
loop
hlt
iret
mov
loopne
mov
loopne
loop
adc
mov
scas
jge
aaa
cs
mov
jmp
mov
xchg
in
cmc
rorl
xchg
mov
je
jae
xor
xor
fs
lea
mov
icebp
in
in
xchg
mov
mov
mov
xchg
mov
in
mov
dec
ror
mov
sbb
cmp
push
push
pop
out
test
psrld
pop
cmp
out
or
xlat
jp
mov
xchg
out
lcall
repnz
imul
lock
lds
mov
shl
imulb
mov
fiadds
pop
cli
data16
sub
fnstsw
rcll
xor
inc
push
shrl
mov
mov
add
aas
insl
mov
pop
cmp
repnz
shl
imul
into
mov
out
mov
andl
inc
loopne
dec
cmp
cmp
int
xor
notl
xor
cmpb
cmp
enter
lods
inc
loopne
roll
push
cwtl
movsb
cs
popa
pusha
adc
mov
pop
add
shll
add
mov
cld
xchg
and
cmpsb
cld
fldcw
jmp
adc
in
push
std
icebp
push
leave
js
out
mov
mov
push
lahf
sbb
lret
lret
gs
or
lds
fwait
sub
into
jae,pt
mov
jp
xchg
sub
lds
outsl
sti
lahf
sbb
push
gs
std
ss
popa
fs
dec
push
mov
mov
out
stos
xchg
ficomps
popf
mov
popl
notl
dec
and
cld
jae
icebp
push
addb
xchg
je
mov
and
lds
dec
xor
es
aas
sbb
or
or
push
or
mov
lods
fadd
mov
orb
adc
adc
in
outsb
repz
or
mov
arpl
jo
dec
add
xlat
and
enter
test
dec
mov
jp
mov
add
adcb
into
jns
mov
es
mov
xchg
call
add
push
mov
xor
sbb
aam
rclb
push
mov
jns
push
jle
jmp
sbb
sbb
ds
cli
insl
xlat
fdivrl
sub
cmp
dec
pop
xchg
std
dec
inc
cmpsl
ds
jmp
ss
std
push
loopne
sub
pop
inc
arpl
icebp
cli
jecxz
fistpl
jne
add
cmp
add
jne
aas
stos
test
aad
int3
sbbb
mov
mov
or
stos
or
dec
jl
in
xchg
int3
stc
adc
push
xchg
mov
dec
push
or
jbe
push
dec
add
add
cli
xchg
add
in
sbb
ret
or
je
xor
dec
fwait
push
inc
dec
popf
xor
lahf
stc
xor
stos
sub
cltd
adc
pop
ljmp
into
movsl
adc
out
mov
jae
jecxz
sub
sahf
pop
into
adc
mov
ja
sub
lret
out
xchg
rcr
and
push
push
sbb
jp
ficompl
outsl
fbld
ficomps
rolb
xchg
sub
call
std
sar
jge
loope
clc
cmp
sti
push
aad
add
loopne
cmp
xchg
xchg
add
dec
inc
icebp
adc
ljmp
xor
bound
call
ljmp
xor
fdivr
jo
popf
dec
mov
or
rcrl
ret
mov
push
add
jno
pop
push
inc
loop
lahf
push
dec
insl
push
fnstenv
mov
repz
xor
loope
dec
ja
pop
cmpsb
addr16
sbb
xchg
push
sub
vmaxps
mov
adc
repnz
int
mov
pop
mov
xchg
mov
stos
adc
js
hlt
cmp
inc
pop
adc
dec
ja
inc
add
cld
xor
and
xor
pop
add
inc
jp
into
push
in
push
cmpsb
sahf
push
adc
out
cmpsb
ret
dec
push
test
xchg
icebp
mov
lcall
idivl
sub
addr16
roll
dec
push
aas
inc
pusha
sahf
cld
popf
xchg
and
lahf
sub
fldl
dec
pop
mov
test
jns
daa
test
pusha
and
or
pop
inc
and
sbb
xchg
das
sbb
dec
icebp
xor
rorl
gs
dec
push
imul
dec
out
test
lea
stos
call
in
cmp
mov
sbb
or
ret
stc
mov
adc
sub
es
sub
and
sbb
jmp
fisttpll
inc
add
xchg
aad
lret
loope
loopne,pt
push
insb
mov
jg
fildll
xchg
pop
stc
jne
mov
insl
test
add
pushf
daa
jbe
outsb
int3
inc
jnp
or
add
stos
call
lcall
sbb
arpl
inc
es
stos
jl
adc
or
mov
das
jo
push
mov
in
out
add
jmp
pop
outsl
das
test
stc
inc
sub
in
dec
outsl
sbb
ds
loop
clc
sub
shrl
cltd
outsb
fucomi
sbb
xor
cwtl
sbb
sub
mov
add
xlat
mov
and
jne
push
pushf
imul
xchg
aas
pop
pop
cmp
ds
repnz
pop
bound
mov
pop
sbb
loop
imul
je
pop
int
inc
dec
dec
jno
inc
ret
pushf
fcoml
xchg
lahf
in
dec
mov
and
or
pushf
mov
popf
and
sub
xlat
mov
imul
cld
sub
neg
jnp
jb
cmp
fadds
mov
jmp
mov
sub
xlat
setle
pop
mov
xchg
push
ja
test
mov
cmp
cmp
pop
dec
or
push
lods
inc
ret
add
cmp
aam
or
dec
push
clc
incl
cmp
test
je
icebp
xor
js
adc
addr16
stos
push
pop
sbb
in
int3
dec
mov
sti
and
mov
aas
sbb
jns
mov
mov
enter
in
xor
sub
pop
cmp
movsl
mov
and
das
xchg
mov
push
int
add
mov
lds
push
sbb
inc
test
jge
cmc
pop
call
jmp
fcomps
sub
scas
nop
mov
mov
rcl
jg
shrb
fwait
mov
subl
push
jp
icebp
adc
fimull
fldl
shll
mov
in
xchg
jp
pop
push
jl
cmpb
sahf
mov
pop
xchg
rep
loope
testl
xor
js
shufps
and
mov
jnp
int
scas
jae
test
lock
mov
leave
mov
div
in
push
mov
js
stos
xchg
bound
push
push
pop
pop
aaa
pop
jne
add
gs
jb
lds
pushf
fwait
icebp
add
sbbb
lods
enter
xlat
je
pop
dec
rcll
and
jge,pn
fsubs
ja
jge
xor
test
cmpl
cmp
ja
idivl
pop
push
xorl
loop
test
mov
lret
mov
pushf
xor
jge
call
daa
jmp
aas
lds
push
add
pop
pop
add
outsl
outsl
sub
sub
sbb
cld
xor
rolb
rolb
inc
jle
adcl
mov
sbb
xor
lcall
testl
out
ss
mov
sub
push
jb
fmull
lret
xchg
pop
rcll
inc
cmp
mov
pop
test
xchg
test
xor
fneni(8087
add
andb
popa
adc
mov
and
aas
or
test
cmpsl
sarl
cmp
ja
sub
lret
xor
xchg
pop
stos
jb
dec
or
dec
and
into
aam
stos
mov
mov
jle
sbb
int
clc
aam
lahf
xchg
nop
push
adc
out
add
sub
fildll
js
cltd
cmp
adc
mov
mov
ret
es
sbb
lea
or
pop
and
aaa
adc
push
fbstp
mov
out
mov
jge
popf
stos
out
xor
sub
mov
dec
dec
mov
testl
or
ljmp
dec
mov
mov
ds
insl
nop
xor
cmpsl
mov
testb
lods
arpl
in
test
mov
mov
imul
inc
ds
jmp
orb
jg
xor
mov
into
std
lret
stos
xchg
sub
or
insb
dec
lods
je
jmp
mov
jbe
dec
lods
push
ds
out
or
enter
repz
test
cmp
xlat
sbb
xchg
jmp
enter
sub
ljmp
push
sub
sub
xchg
push
pop
jno
adc
push
inc
sub
push
push
movsb
lret
stos
mov
out
outsl
sti
cmp
inc
and
cmp
jle
xchg
in
mov
fsubl
jle
or
pusha
push
out
mov
mov
and
inc
ret
int3
out
sbb
push
mov
jmp
mov
mov
jecxz
stc
push
ja
jg
push
and
jno
mov
xchg
mov
aaa
push
sbb
out
mov
jl
inc
out
call
stc
lea
std
or
ds
rolb
adc
xchg
test
icebp
int
int
sub
rep
xor
pop
addr16
mov
lea
shrb
cmpsb
cld
stos
mov
in
mov
scas
fiadds
lahf
mov
sbb
test
jb
shr
dec
jns
ret
inc
cmp
pop
jl
jl
sub
lds
mov
pop
shr
inc
inc
inc
mov
adc
pop
cwtl
in
negl
mov
inc
andl
add
loopne
cmpsl
sbb
movsb
and
add
ss
iret
ret
cmc
xchg
es
repnz
push
sbb
or
ljmp
test
sbb
dec
mov
adc
and
push
shll
push
xchg
sarb
inc
xchg
add
push
movl
idivb
stos
jnp
lcall
mov
xchg
mov
orl
inc
and
sub
sbb
movswl
dec
pop
jno
inc
xor
mov
mov
jmp
shlb
js
daa
pusha
push
std
call
lock
clc
push
sbb
sbb
and
mov
imul
fld
xchg
push
adc
in
xchg
mov
xor
sar
sbb
in
xor
in
adc
cwtl
pop
xchg
addl
pop
scas
xor
lock
add
xchg
ss
imul
inc
out
jno
roll
lahf
push
subl
js
hlt
gs
cld
xchg
jbe
lahf
rcrl
test
lods
mov
cmp
in
into
xchg
inc
sbb
adc
cmp
iret
lret
push
jb
adc
sbb
into
test
ficoms
sub
sub
mov
mov
pop
fs
sub
cwtl
out
insl
imul
loopne
dec
jno
push
dec
ss
lods
outsl
mov
xor
in
xchg
mov
cli
jg
sub
adc
fwait
mov
add
cli
lock
jbe
mov
out
pop
imull
inc
and
push
sub
lods
and
xchg
aad
xor
xor
pop
push
xchg
inc
pop
dec
mov
test
sbb
scas
insl
lock
dec
push
loope
decl
aad
jge
jge
push
hlt
imull
pop
inc
imul
pop
mov
sub
cmp
aad
js
inc
push
in
and
or
outsl
or
fldcw
test
loop,pn
movsl
ds
mov
cmpsb
and
cmp
mov
push
ds
dec
ja
lea
adc
inc
pop
fs
pop
ljmp
popf
sbb
dec
mov
mov
push
mov
mov
mov
lds
inc
cli
inc
aaa
inc
iret
fwait
jmp
int3
or
push
add
xchg
sahf
popa
rolb
sahf
subb
or
sti
prefetchw
scas
pop
dec
icebp
outsl
mov
fistl
repz
fldenv
movsl
cmp
sbb
stc
xor
fwait
add
add
insl
mov
xlat
pop
icebp
mov
mov
mov
fimull
jno
add
sarl
shll
inc
mov
aas
das
dec
adc
push
push
jno
lds
repz
clc
jns
add
pop
fisubrs
mov
cmp
xchg
push
movsl
cltd
gs
movsl
dec
cwtl
scas
mov
pop
mov
lds
mov
sbb
cmp
aas
fsubrs
adc
aad
pop
test
adc
rorl
popf
repz
or
lahf
add
out
nop
mov
mov
inc
fwait
imul
adc
mov
pop
popl
and
lea
add
test
sbb
xor
mov
aam
fs
dec
outsb
or
sbb
mov
cmc
cli
sbb
hlt
sti
dec
xchg
mov
dec
and
mov
call
cwtl
push
popa
pop
sbb
inc
push
repz
fs
mov
push
or
sub
jmp
pop
pop
out
jns
out
cmp
sbb
cmp
pop
inc
insl
mov
pop
test
inc
mov
mov
mov
mov
bound
pop
xchg
loop
jle
dec
gs
push
xchg
inc
sub
and
jbe
add
xchg
mov
mov
dec
xor
std
lret
push
rorl
movsb
rcr
push
test
subl
dec
adc
sti
or
jne
push
pmullw
adc
sub
js
aad
inc
push
mov
neg
xchg
jecxz
cmp
dec
mov
and
cmpb
movsl
stos
xchg
adc
cmpsl
mov
lock
ss
in
orl
mov
xchg
mov
pop
mov
cs
roll
test
inc
xchg
test
dec
stos
bound
out
add
jp
and
xor
and
je
aam
mov
cmc
mov
lock
addr16
ljmp
aad
pop
rclb
jns
shrl
and
jmp
inc
mov
mov
imul
push
xchg
stos
lods
and
pop
mov
sub
or
xorl
bound
mov
in
xlat
mov
xchg
sahf
addr16
inc
cmp
jge,pn
push
in
jns
sbb
jmp
cmp
xor
adc
sub
dec
inc
ss
jbe
and
dec
jae
mov
and
ret
push
dec
pop
or
jns
testl
xlat
sbb
outsb
aam
jge
cmp
xor
fldenv
or
es
xlat
jno
or
or
inc
mov
mov
inc
sti
jmp
fs
mov
enter
push
push
mov
xchg
lea
pusha
lods
aam
mov
cmp
push
loope
arpl
fadd
test
mov
dec
movsb
sub
imul
stos
sti
filds
lds
shll
scas
les
and
sub
mov
sbb
mov
jne
sbb
mov
nop
xor
adc
bound
add
frstor
jno
pop
fsubr
adc
mov
mov
and
jo
sti
inc
mov
cli
lret
sub
fs
mov
xchg
dec
lcall
cmp
and
out
sub
fdivs
adc
xchg
pop
aas
cmc
pushf
inc
or
pop
sub
inc
xchg
jns
and
push
sub
and
mov
andb
lods
mov
jno
cltd
pop
aaa
cmp
das
cmp
ljmp
sbb
dec
fiadds
cmp
xchg
inc
sub
enter
xchg
pop
jmp
xchg
pop
push
cwtl
adc
lock
iret
lret
in
add
push
cld
push
pop
mov
call
outsb
outsb
xor
jnp
fbstp
inc
arpl
jo
ror
sub
jge
adc
mov
sti
test
mov
push
and
and
jns
xchg
jmp
lret
dec
addr16
dec
xor
lods
loopne
rorl
push
test
and
test
outsb
sub
push
in
and
insl
or
mov
sbb
aas
sub
repnz
pop
cmp
adc
xor
stc
xor
cmp
lahf
test
lret
sbb
pop
mov
push
cmp
adc
and
imul
add
xor
or
in
mov
add
adc
mov
push
or
mov
jae
xchg
mov
adc
ja
out
cmpsl
pop
pop
push
dec
mov
sbb
or
js
push
mov
push
adc
pushl
add
push
test
adcb
stos
divl
ss
cmp
hlt
fcmove
push
push
aad
ret
jecxz
cmp
sbb
sarl
sub
mov
ljmp
sarb
push
mov
jno
lock
and
adc
stos
clc
push
pop
pop
aam
lock
inc
jb
add
call
dec
cwtl
arpl
repz
jo
inc
jo
insb
fwait
push
dec
sbb
call
outsl
ret
and
aad
addb
mov
pop
dec
fwait
add
mov
lds
popf
mov
or
mov
dec
push
pusha
mov
pusha
and
add
daa
add
fisubl
push
xchg
push
pop
dec
jecxz
jnp
negl
cmp
cld
bound
pop
lret
in
and
mov
outsl
push
and
adc
icebp
or
sub
cmc
movsl
pop
xchg
adc
and
inc
push
stos
mov
push
pop
push
gs
jl
push
push
sbb
pop
cmpsb
add
pushl
outsl
dec
add
and
leave
mov
sbb
int
scas
repz
out
in
jle
cltd
cwtl
scas
mov
pop
rcr
push
mov
add
mov
inc
mov
fcoml
dec
mov
jmp
sbb
test
fcoms
sbb
or
jae
outsb
adc
jbe
adc
adc
clc
cli
push
add
aas
mov
and
je
xor
and
stos
fnstsw
cmp
push
cmc
push
mov
sti
jbe
sbb
call
aad
jns
roll
xor
ja
out
popa
or
mov
arpl
or
or
inc
adc
outsb
ret
xor
adc
bnd
in
cwtl
adc
jmp
jns
sub
dec
cs
sub
fs
je
hlt
icebp
out
pop
testb
cmpsb
or
cmp
inc
scas
add
mov
test
pusha
out
andb
repz
push
or
jp
jo
mov
cmc
sbb
xchg
add
enter
pusha
mov
lock
testb
das
mov
ds
mov
jnp
mov
mov
icebp
fisubrs
rcrl
xor
roll
add
popl
cs
and
data16
xchg
sub
es
sbb
jns
xchg
sti
mov
adc
stos
mov
fnsave
pop
das
jge
add
aad
inc
scas
mov
repz
sar
xor
adcl
jbe
push
repz
mov
add
adc
aad
adc
ljmp
psubsw
sbb
out
enter
ret
enter
sub
js
cmp
jle
adc
out
outsb
or
ror
cmpsl
mov
in
jnp
ja
div
xor
or
ljmp
xchg
xlat
out
test
adc
jl
inc
loope
out
ret
xchg
test
insl
aaa
dec
cld
cmp
daa
pop
out
scas
shll
imul
stos
jg
data16
popf
inc
xor
xor
lds
add
pop
stos
mov
cwtl
xor
sub
addr16
in
inc
enter
fisttpl
xor
sbb
cmpsb
rorl
xlat
outsl
inc
fs
push
insb
inc
orl
mov
sbb
sub
cli
jmp
cmp
bound
xchg
jg
xchg
dec
cltd
add
push
add
xchg
leave
and
pmulhuw
jnp
and
adc
jle
enter
fnsave
sbb
inc
jns
mov
mov
xor
es
dec
insl
push
insb
xchg
mov
in
dec
and
lods
sub
movsl
sti
xchg
mov
es
and
lahf
cmc
enter
fldenv
xor
pusha
and
negb
aam
xchg
add
jg
mov
in
inc
dec
sbb
cltd
cmp
mov
shrl
pop
inc
xchg
imul
xor
xchg
pushf
jl
shl
push
scas
add
icebp
mov
das
jmp
test
mov
push
add
popf
xchg
out
fisubrl
fwait
pushf
test
das
pop
cmpsl
addr16
push
add
xor
or
clc
jbe
push
adc
imul
inc
sbb
mov
fwait
int
es
pop
pusha
addr16
jl
mov
lock
cltd
pop
or
repnz
cli
push
xor
add
cmc
shl
pop
sub
stc
xchg
dec
dec
dec
imul
add
sub
cmc
adc
mov
cs
cwtl
shr
fdivrs
mov
repnz
into
push
jae
push
cmp
lods
sarl
push
fists
subb
in
out
sub
add
jbe
test
sub
dec
mov
out
xor
cltd
or
test
cmpsl
sbb
xchg
fsts
dec
fldt
incl
movsb
push
int3
jmp
mov
adc
ds
jno
push
and
imul
mov
mov
in
pop
test
inc
pop
call
movsb
aad
xor
fisttpl
pop
loope
cltd
jecxz
int
pusha
xchg
in
mov
sbb
shl
popf
jne
pop
sbb
lret
add
or
into
sbb
mov
jne
inc
mov
cmpsl
lret
mov
imul
xchg
cli
mov
fisttpll
push
ljmp
inc
xor
stos
fs
pop
and
jbe
pop
pop
cmp
mov
jne
jle
adc
push
daa
dec
push
sarb
inc
loopne
add
mov
and
jne
in
cmpl
xchg
pop
outsl
xchg
popa
jnp
jp
sbb
fwait
mov
xor
or
sbb
pop
cmp
adc
jmp
mov
xor
jno
lods
loop
adc
mov
jmp
pop
sbbl
arpl
aas
cltd
test
and
mov
std
add
add
push
lcall
sahf
lcall
xchg
cltd
push
jp
jmp
add
pop
xor
cmp
ss
ds
sti
sti
sub
pop
bound
jne
fistl
mov
sbb
lods
rcr
push
imul
addr16
sub
int
inc
cmp
fbld
sbb
add
push
cmpb
dec
sub
das
sysenter
jbe
mov
cltd
push
out
insb
scas
xchg
add
movsl
addr16
pop
lret
shrl
cmp
in
mov
lret
movsl
xchg
inc
scas
mov
loopne
push
adc
or
jb
pop
mov
ds
jl
add
popa
sbb
lock
vcvtps2pd
mov
mov
jns
pusha
mov
xor
pop
leave
mov
ss
aaa
clc
ljmp
ss
testb
xchg
pop
aaa
movl
je
and
sbb
xchg
inc
std
clc
jmp
mov
std
xor
cmp
and
pop
push
das
in
pop
std
push
and
je
call
jo
xor
cld
dec
mov
add
mov
test
mov
lret
call
mov
frstor
inc
pop
mov
jo
in
xor
enter
xor
push
loope
xchg
add
shl
mov
add
lcall
es
add
inc
ffreep
lds
xor
add
arpl
xchg
or
inc
sub
out
dec
std
add
ret
xor
mov
in
dec
jge
insb
sub
scas
fcompl
aam
pop
push
arpl
loop
jae
ret
push
mov
cmp
in
and
xchg
cwtl
fiaddl
clc
cli
mov
hlt
testb
inc
push
ret
mov
xchg
addr16
inc
stos
fcomps
lret
movsl
js
adc
mov
cmp
pushw
loope
sarb
outsb
shrl
mov
js
fstpt
sbb
cmp
inc
push
adc
out
pop
inc
pusha
cmpsb
ljmp
lods
cmp
lods
jge
mov
mov
insl
push
enter
filds
push
sarb
add
xor
jg
adc
fnsave
xchg
les
int
mov
sub
jg
loope
mov
movsb
shll
clc
repnz
pop
mov
mov
push
scas
stos
scas
test
test
mov
enter
sbb
jle
cmpsb
and
fsubrl
xorl
test
pop
loopne
js
arpl
ret
cmpl
cltd
sbb
xlat
and
into
imul
aaa
mov
inc
test
push
pop
xor
test
insb
pushf
pop
push
mov
cmpsb
jmp
xchg
or
fldt
lock
mov
addr16
fwait
jae
insl
aad
inc
jo
ret
hlt
jne
or
out
fisttps
mov
adc
ds
dec
jp
leave
cmp
cmpsb
xchg
sub
push
dec
outsl
andb
inc
out
dec
mov
movl
cmpb
out
mov
orb
mov
mov
inc
cltd
ret
lods
pop
pop
icebp
cmp
in
sub
inc
aam
xchg
mov
lock
inc
decb
out
mov
add
sub
mov
into
mov
cli
ficoml
add
call
lds
inc
add
xorl
or
das
imul
imul
push
xchg
mov
outsb
xchg
pushl
jle
push
jmp
cmp
ffreep
ret
ret
and
pop
lods
js
jecxz
jecxz
hlt
das
shll
fcmovb
mov
push
or
or
fldcw
imul
cmp
jno
lcall
mov
xchg
jmp
jno
adc
mov
push
ds
imul
adc
mov
shll
mov
inc
pop
mov
cmp
and
cmpsl
mov
xchg
inc
xlat
loopne
sub
lea
fcmovu
pusha
adc
sub
clc
or
xor
addb
dec
xchg
aas
shll
and
and
loop
in
mov
jbe
out
xor
adc
fs
idiv
inc
scas
cmp
sahf
sbb
pop
scas
pop
adcl
ja
push
cs
pushf
cmp
cmp
dec
adc
and
xor
or
insb
ss
test
cmpsl
lret
xchg
jle
imulb
icebp
mov
add
and
sbb
jecxz
xchg
scas
insb
dec
sahf
lods
sub
inc
mov
mov
fbld
xchg
inc
out
pop
push
lcall
and
push
xor
fidivl
fmuls
leave
sub
sbb
addr16
fldenv
mov
lret
loopne
pop
mov
cmp
cmp
inc
or
dec
test
xchg
lcall
and
ljmp
sub
xlat
push
push
push
mov
imul
mov
jl
frstpm(287
xchg
cmpsl
jge
add
add
std
lods
popf
and
leave
add
jne
jbe
dec
insl
adc
in
data16
push
mov
sbb
fwait
into
dec
mov
ss
pushf
mov
aas
lds
cmp
fsub
mov
lods
sub
fsubs
repnz
mov
or
dec
aad
jo
cmp
lret
mov
repz
pop
jmp
mov
lock
mov
push
xchg
ja
or
adc
and
jl
push
xor
mov
xchg
jo
xchg
and
loop
insb
sub
daa
push
inc
call
hlt
fidivrs
dec
in
mov
ss
xor
and
mov
fidivl
cmp
pop
jge
pop
lock
xor
sub
xchg
fwait
lods
sbb
mov
stc
mov
popf
repnz
adc
sahf
out
shll
cmpsl
dec
push
repnz
mov
adc
gs
enter
loope
test
inc
inc
cmpsl
and
mov
sti
repnz
stos
push
or
nop
xchg
out
and
fwait
jo,pn
jmp
cmp
leave
dec
scas
xor
push
adc
fbstp
lea
mov
pop
push
lock
movsb
testl
mov
sub
xchg
fidivrs
dec
push
push
mov
cmc
enter
xchg
sbb
or
out
mov
sti
jno
imul
aas
pop
xlat
push
jle
aas
in
cmp
out
push
and
lahf
cmp
int3
lods
sub
and
xor
mov
push
pop
fisttpl
fldcw
into
int3
fwait
out
ja
lret
sbb
pusha
pop
dec
stos
ret
cmp
xor
mov
pop
std
add
loope
or
scas
push
jno
cli
test
or
hlt
xchg
mov
sbb
aas
andb
movsb
jp
mov
fmuls
mov
mov
lret
sbb
dec
mov
jb
cli
bound
xor
out
fnstcw
mov
xchg
pop
ret
es
push
and
idiv
mov
sub
sbb
stc
cmpsl
pop
or
jecxz
dec
jp
cs
pop
add
pop
addl
jno
cli
fsts
in
shll
bnd
mov
shll
pusha
jl
xchg
insl
fwait
orb
inc
jmp
xor
outsb
gs
cmp
jo
into
movsb
add
add
mov
jnp
repnz
out
fucomip
mov
data16
or
inc
pusha
dec
mov
shll
xor
sbb
enter
ljmp
test
xchg
in
xor
ficomps
push
fwait
sub
das
inc
jmp
add
insl
fsts
imul
mov
push
or
lret
roll
test
in
cmpsb
pop
cli
jle
mov
push
mov
dec
inc
stc
push
and
test
and
mov
pushf
call
nop
fcmovnb
adc
ret
sti
push
in
leave
push
cmc
mull
sahf
loop
adc
mov
push
fcoms
push
std
xchg
fnstcw
sub
xor
fbstp
mov
and
xchg
inc
push
jg
pop
xor
sbb
jae
or
icebp
or
sbb
dec
pop
xor
pop
cld
aas
mov
add
insl
repnz
mov
in
aad
mov
data16
cmpsl
jmp
lods
pop
xlat
pop
scas
pop
popf
jbe
pushf
cmp
les
sbbl
clc
or
adc
mov
add
mov
or
inc
lcall
dec
or
cwtl
and
js
fsubs
add
adc
test
out
lahf
mov
cmp
cs
nop
add
test
dec
in
fdivl
das
jbe
push
add
mov
xor
ret
fldenv
movsb
mov
xchg
mov
sub
repz
std
xchg
cmpsb
out
fwait
dec
scas
adc
adc
jno
bound
sbb
movsl
aaa
sub
xor
mov
sub
pop
nop
je
sahf
repz
lods
mov
dec
aaa
std
jo
mov
stos
sti
or
mov
outsl
mov
adcl
aas
and
mov
mov
lret
adc
rorb
fistpl
hlt
shrl
iret
loop
cmp
push
jmp
test
push
sub
mov
jmp
mov
cmp
ret
js
mov
cmp
lcall
xchg
repz
add
jmp
push
jo
out
xchg
mov
dec
mov
cmp
test
scas
pop
mov
sbb
jecxz
sub
or
ret
call
aad
aam
int3
fcoms
mov
add
lds
cmp
jecxz
xchg
test
push
xchg
call
fucom
xor
test
xor
xchg
push
cmp
clc
pop
mov
mov
inc
lahf
and
cs
movsl
jb
test
repnz
adc
jge
or
mov
push
sbb
or
cltd
cmp
arpl
push
test
adc
mov
es
add
in
add
and
lret
fdivs
sbb
push
test
shll
aaa
push
push
pop
cmp
adc
dec
mov
bound
test
push
add
pop
push
loop
mov
out
add
pop
push
push
cmp
fcomi
jae
pop
ret
cli
push
imul
je
pop
mov
push
cmp
mov
jne
scas
sub
push
movsl
scas
mov
push
push
xor
add
pop
int
sub
mov
sub
outsl
jbe
dec
movsl
loope
pop
inc
lahf
or
fsubs
hlt
nop
test
xor
orb
adc
btc
scas
scas
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
loope
out
imul
xor
push
xor
movsb
call
xor
jo
popf
xor
push
fidivrs
dec
jmp
xor
lds
leave
lds
pop
pop
icebp
mov
adc
adc
aam
sbb
inc
push
jbe
dec
sub
repnz
or
aaa
dec
cwtl
sbb
imul
xchg
scas
inc
sbb
mov
leave
ficoms
adc
mov
out
pop
add
dec
xchg
lds
ja
cmp
mov
repz
mov
mov
cmc
xchg
dec
mov
sbbb
jecxz
jp
mov
dec
and
push
and
repnz
inc
sbb
sahf
insl
lret
cmc
push
outsl
xchg
pusha
std
in
lret
jnp
jl
call
lock
fnstenv
iret
cmp
cmp
faddl
imul
jb
jg
sbbb
sbb
mov
mov
pop
out
repz
mov
inc
adc
mov
inc
push
pushf
fsubrs
mov
dec
add
xchg
jbe
lcall
sbb
xor
daa
outsl
jnp
orb
pop
push
out
stos
les
into
mov
repz
addr16
inc
jecxz
pop
popa
sahf
scas
test
ljmp
xchg
and
cmc
andl
ljmp
sbb
or
arpl
in
xchg
orl
imul
jo
or
not
addr16
repz
out
pop
push
xor
in
arpl
add
aaa
pop
jno
jle
jl
out
pop
sbb
and
xor
xor
or
cmp
xor
adcb
adc
jns
ret
lea
int3
dec
jecxz
add
in
pop
out
aad
xor
pop
sarl
out
subl
pusha
add
mov
or
or
xlat
jmp
sbb
ja
pop
xor
cmp
inc
daa
cmc
js
ss
stos
sti
loopne
das
daa
lods
push
sahf
in
xlat
sbb
je
dec
sub
cmp
inc
pop
out
add
in
lret
in
ja
es
out
or
sub
loopne
lcall
out
dec
sahf
lea
scas
cmpl
inc
incl
jl
fisubrs
arpl
loope
lret
pushf
cltd
cmp
xchg
rcr
jl
or
ja
sub
out
and
mov
dec
mov
push
and
insl
lret
xchg
xchg
stos
roll
or
cmp
dec
inc
cs
popf
mov
and
je
and
lcall
and
cmp
dec
les
fwait
test
pushf
xor
enter
jb
cld
and
xchg
push
mov
cmp
pop
movsb
movsl
mov
mov
ret
mov
sub
or
mov
out
sbb
cmp
out
mov
loope
jnp
dec
leave
fistpll
pop
add
xchg
dec
insb
mov
fcmovbe
adc
jnp
adc
and
ja
pop
mov
add
sbb
add
and
clc
subb
xchg
arpl
rol
xor
push
xchg
inc
mov
pop
pop
icebp
and
das
jg
rol
push
add
rcrl
ds
stos
jae
mov
or
nop
mov
leave
movsb
jne
insl
push
push
or
or
rcl
push
or
sub
enter
arpl
out
xchg
insb
pop
rolb
sar
scas
xchg
in
fidivl
pop
loop
test
test
cmp
pop
movsb
mov
enter
mov
xchg
jno
push
mov
dec
sbb
inc
cmp
cmp
and
bound
pushf
inc
jnp
xchg
push
push
pop
test
jae
mov
dec
push
shlb
jg
and
movb
aas
sub
push
xchg
and
imul
push
jmp
inc
test
jecxz
call
popf
loop
divb
pusha
xor
stos
cmp
clc
out
cltd
jmp
xor
sub
pop
shrb
rcl
imul
fstl
cmp
das
mov
sbb
and
inc
loop
xor
cmp
ret
pop
pop
cli
mov
sub
mov
arpl
mov
popa
scas
jmp
mov
cmp
jp
sbb
inc
mov
mov
jno
rorl
lret
or
in
popf
stos
jecxz
out
paddsw
ud2
sbb
inc
hlt
rolb
inc
mov
je
out
cmp
outsb
mov
adc
pop
mov
mov
xor
xchg
pop
sub
lcall
divl
sub
xlat
lods
ljmp
mov
jmp
lcall
sbb
push
jne
inc
pop
and
inc
jle
gs
fiaddl
add
mov
xchg
fwait
jp
add
jns
push
imul
ret
adcb
imulb
pop
or
push
jno
xchg
repz
in
jge
mov
mov
ret
mov
pop
lahf
pop
ds
sub
jge
adc
pop
data16
imul
scas
sub
fdivs
rol
pop
xor
xor
push
lretw
or
das
push
lds
cmp
in
jmp
mul
dec
lock
lock
mov
jmp
sbb
fcmovnb
mov
xchg
lds
ret
aad
push
addr16
add
idivl
testl
or
push
daa
bound
stos
push
jae
inc
xor
xchg
dec
fisubrs
push
inc
inc
jb
rorl
push
jmp
inc
mov
push
sub
scas
stos
dec
add
xor
cmp
pop
iret
push
outsl
lcall
outsl
xchg
mov
icebp
sbb
out
prefetch
sub
rorb
xlat
sti
dec
leave
pusha
cli
roll
mov
ret
mov
inc
pop
inc
inc
sets
jae
dec
add
lcall
mov
incb
xor
outsl
in
jl
in
xor
ljmp
cltd
arpl
sub
outsl
and
push
aam
enter
daa
mov
lods
sahf
mov
dec
mov
popf
pop
xor
movsl
outsl
pop
notb
inc
adc
sub
mov
mov
ja
push
mov
jae
shll
mov
jge
mov
outsl
cmp
subl
outsl
aas
push
dec
hlt
ret
mov
cmpl
cmp
idivl
or
sbb
loopne
jns
inc
xor
les
das
xor
add
pop
add
and
mov
mov
out
inc
mov
cli
sbb
xchg
xor
ljmp
mov
sahf
lea
xchg
jl
dec
cmovp
xchg
xchg
sub
in
dec
cld
push
es
xlat
sbb
lahf
pop
in
dec
rcr
push
imul
cli
arpl
cmpsl
and
scas
nop
cmp
cwtl
mov
out
push
lock
lahf
mov
ret
in
stc
nop
adc
or
flds
stc
popa
or
aas
jp
mov
in
pop
and
or
add
lods
in
pop
xlat
mov
data16
aaa
mov
mov
es
hlt
cmc
ljmp
pop
aad
cwtl
jl
fwait
mov
fisubs
mov
inc
sub
dec
cmpsl
push
xchg
pop
push
repz
enter
sarl
lock
jbe
mov
pop
ljmp
or
lahf
std
xor
pop
pushw
stos
sub
rcr
stc
xchg
es
or
adc
stos
xor
mov
jge
xor
jmp
ss
fldcw
sbb
jae
xor
leave
loop
fsubrs
pop
push
dec
stc
push
jmp
push
lods
sbb
xchg
dec
dec
rcrb
addr16
add
jbe
lahf
cli
jb
shll
rcll
mov
push
cmpsl
push
lods
push
inc
aas
ds
movsl
and
sub
mov
add
mov
int3
or
ret
out
push
or
sub
shrl
xchg
out
xlat
leave
cmp
push
mov
add
lds
lods
or
xchg
and
mov
pushf
cltd
or
sarl
or
call
mov
int
mov
xchg
or
dec
xor
lcall
aaa
inc
cmp
xorl
xchg
fiaddl
dec
cmp
cmc
adc
das
icebp
push
xchg
hlt
adc
adc
cmp
mov
lods
nop
lock
add
in
ret
lea
mov
inc
jne
popa
mov
push
mov
and
cmp
cwtl
hlt
int3
mov
mov
sub
jecxz
shrd
vmread
cltd
je
push
push
jb
fdivr
mov
shll
xchg
sub
add
mov
cs
push
push
sbb
mov
js
adc
mov
btc
scas
scas
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
sahf
aad
mov
push
mov
mov
test
je
mov
test
jne
xor
pop
ret
cmpb
jne
xor
cmp
sete
mov
pop
ret
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
jg
rol
shufps
pop
and
mov
sub
xor
aad
xor
inc
mov
shrb
mov
sbb
or
xchg
mov
js
mov
add
jmp
jmp
call
mov
jge
add
inc
xchg
ficoms
dec
mov
fsubrl
test
dec
hlt
dec
push
mov
adc
add
xchg
xchg
jge
fucomip
ss
cmc
sbb
mov
in
in
rcl
fsub
lcall
je
jl
shl
out
xchg
testl
std
lret
sub
inc
test
pop
lahf
punpcklwd
aam
mov
pop
lret
add
test
loope
dec
in
sbbl
fldcw
fstps
push
lods
add
rolb
call
rcrb
mov
call
ret
xchg
or
cmp
andl
imul
and
mov
mov
dec
movsl
cmp
je
push
aas
out
icebp
fsubrl
cmp
icebp
test
sub
pop
pop
imulb
pop
inc
mov
sbb
mov
push
add
jmp
leave
add
xor
xchg
cmp
pop
and
imul
test
in
sbb
pushf
xor
mov
cmp
jmp
mov
test
jb
ss
pop
es
jbe
popl
outsb
dec
dec
sub
pushf
xlat
les
mov
dec
cmc
inc
arpl
push
mov
xor
fwait
xorl
pop
push
jmp
pop
push
test
sbb
popf
cmp
mov
xchg
rclb
ror
loope
xor
mov
mov
idivl
imul
imul
mov
dec
push
jb
push
or
pmaddwd
jo
out
gs
mov
jmp
jo
push
fisubrs
popa
stos
add
into
add
ficoms
or
push
jecxz
push
pop
sub
jns
cs
and
pushf
negb
or
sub
arpl
cld
enter
hlt
enter
sbb
mov
nop
fstpl
xlat
lea
sbb
lds
pop
in
or
shrb
dec
cwtl
xchg
call
int3
xor
cmp
mov
hlt
push
jp
aad
stos
lods
out
jno
loope
out
mov
data16
jnp
out
insb
fistpll
loopne
sub
ficoms
leave
test
out
and
push
insb
pushf
fnclex
xchg
sbb
sub
shlb
jb
test
xchg
xchg
push
ret
sub
mov
lcall
sub
shl
xor
push
sub
add
fldenv
in
push
sbb
lcall
imul
cmp
and
popf
dec
adc
or
mov
stos
aad
shll
push
fsts
je
sbb
mov
xor
ret
xchg
fsts
sub
rorb
dec
lcall
mov
rorb
jae
sbb
xchg
stc
stos
jno
adc
dec
fld
and
cmp
stos
stc
fstp
nop
pusha
add
in
gs
test
cmc
lea
test
jecxz
ret
and
shrb
fisttpl
push
cwtl
jb
add
push
bound
xchg
lods
or
sub
cmp
test
movsl
jnp
sub
inc
and
lea
xchg
xor
and
lcall
cmp
pop
stos
mov
test
pop
mov
xchg
out
mov
and
lods
outsl
mov
or
cmp
sbb
cmp
inc
jb
dec
sbb
mov
and
enter
jbe
mov
jns
mov
sahf
pop
cld
jo
sub
imul
xor
pop
cs
sahf
mov
adc
and
sub
lods
arpl
jns
or
daa
inc
int
ja
mov
test
ja
and
cmp
add
in
imul
fs
mov
fidivrs
inc
sbb
jp
test
xchg
xor
ja
push
and
inc
data16
sub
sti
in
test
dec
pop
fstpt
or
sub
inc
movsl
xchg
fcomp
and
das
dec
mov
dec
jmp
mov
cmp
ret
push
sbbb
movsb
notl
mov
test
sbb
cmp
sub
test
dec
movsb
popa
cmp
inc
mov
sub
decl
cmc
mov
push
jne
cmpsb
setge
xchg
outsl
loop
mov
jnp
jmp
xor
jl
mov
mov
pop
dec
adc
sub
inc
jno
popf
in
or
aad
mov
cs
lret
pop
inc
sbb
movsl
inc
mov
sbb
ret
ret
xchg
push
sar
mov
sbb
movsb
rcl
popf
jl
sbb
sbb
inc
outsb
shl
mov
push
rorl
mov
js
cld
inc
xor
test
jp
aas
dec
jge
cmpsb
daa
xchg
and
sub
xchg
mov
fbld
movsl
sub
sub
jbe
pusha
movsl
xchg
mov
pop
lcall
sub
mov
mov
jmp
loopne
or
jg
sbb
jbe
imul
sbb
fbld
scas
subl
or
roll
sub
scas
jmp
leave
ret
shr
lcall
lret
mov
push
sbb
popl
push
addr16
out
xorb
dec
fbstp
in
movsb
jmp
faddl
into
xor
out
loop
test
test
repz
sbb
mov
add
std
mov
jno
pushf
jge
xlat
mov
jnp
lahf
lea
popa
pop
mov
xchg
push
dec
in
mov
lret
dec
cmp
arpl
and
test
xor
xor
stos
addl
insb
pop
jg
cli
sbb
or
mov
lea
mov
outsb
lret
cmp
cmp
mov
xchg
inc
push
pop
ret
jl
adc
fwait
sarb
mov
xchg
dec
jg
xchg
dec
jp
push
adc
xchg
push
fidivs
test
ret
push
dec
scas
mov
scas
jl
push
and
pop
imul
clc
dec
jl
lret
popf
mov
cmpsb
dec
ret
add
pop
mov
mov
add
jbe
or
pop
sti
nop
add
orb
sbbb
sbb
inc
dec
pop
mov
push
push
adc
add
stos
pop
es
ss
clc
ret
mov
mov
test
test
mov
sti
rclb
adc
clc
ljmp
and
xchg
lea
jmp
adc
mov
sarb
xchg
in
sub
in
sbbb
mov
cli
shlb
or
add
pop
aas
mov
jns
add
jbe
repz
hlt
xchg
test
push
insb
daa
xor
mov
mov
cs
add
push
orl
xor
fsubr
in
call
cmp
jns
xchg
js
adc
sub
jp
cmpsl
ret
mov
dec
std
pop
sub
aas
ss
mov
cld
inc
fcomps
pop
stos
cmpsl
inc
aad
xchg
loopne
mov
mov
dec
push
inc
sbb
sub
sub
add
mov
dec
aam
xlat
aas
std
loop
icebp
sbb
ror
fcmovnu
mov
mov
aam
dec
xchg
xchg
sarb
mov
add
push
adc
movsb
stc
mov
add
push
mov
xlat
jmp
mov
test
stos
repnz
cmp
dec
imulb
adc
test
mov
pop
xchg
into
cmp
pushf
xchg
int3
jg
clc
sub
loopne
loop
mov
inc
jg
sbb
sbb
loope
stos
stos
push
jmp
nop
xchg
lods
pusha
fnsave
popf
iret
xchg
sbb
xchg
mov
out
push
xchg
jp
popf
in
jnp
outsb
inc
nop
lcall
mov
sbbb
mov
leave
cmpb
das
movsb
out
push
pop
dec
daa
addb
fcompp
cli
push
cs
jl
aaa
cmpsb
iret
or
test
xchg
push
popf
cmp
stos
sahf
call
imul
sbb
dec
cmp
icebp
out
fdivrs
call
in
mov
loop
pop
dec
lods
sarb
cli
push
adc
leave
push
loope
mov
mov
imul
mov
scas
ret
data16
shrl
cmp
inc
xchg
es
or
jns
inc
leave
sti
shr
lock
and
mov
lods
lods
js
cs
fcomi
sub
cmc
sub
mov
or
sub
cmp
andl
push
and
inc
lods
cld
xchg
dec
mov
hlt
and
fisubs
aaa
mov
cmpb
xor
out
int
jb
add
xor
and
sbb
push
mov
mov
add
clc
cmp
subl
sub
push
xor
dec
add
scas
mov
lea
mov
jno
xchg
lea
stos
out
push
push
in
mov
inc
enter
push
push
icebp
inc
repnz
sbb
mov
daa
xor
pop
test
jo
sub
cmp
xchg
xor
xchg
stos
xchg
imul
stos
fildl
out
dec
test
popa
out
sbb
jbe
pop
loop
fisubs
ljmp
dec
xchg
or
cmpsl
xorb
dec
inc
clc
jne
pop
cmp
test
shlb
aam
xorl
pop
cli
testl
or
daa
je
mov
leave
in
add
jmp
jg
in
movsl
dec
fistl
pop
cwtl
mov
je
ljmp
enter
xchg
pop
movsl
or
cwtl
leave
js
aas
bound
scas
enter
mov
rolb
das
fldl
cmp
sbb
xor
dec
in
jmp
jecxz
int
and
in
gs
mov
aaa
fidivl
pop
mov
mov
hlt
inc
in
cmp
repz
in
mov
insb
adc
lods
dec
loope
mov
cmp
dec
lods
shlb
fwait
inc
adc
or
enter
das
mov
aaa
inc
leave
jp
fisubl
xchg
sarb
in
cmp
aaa
adc
setle
ds
mov
dec
leave
mov
pop
mov
pushf
pop
inc
pop
loope
and
pusha
adc
out
out
inc
cmp
in
and
push
push
inc
add
and
vmovhps
add
popa
mov
push
sbb
div
jle
or
dec
inc
jl
push
stos
bound
test
mov
int
add
adc
push
clc
or
nop
jns
ret
jbe
jmp
or
rclb
push
mov
sub
adc
hlt
lods
pop
or
adc
push
pushf
pop
xchg
arpl
cmc
push
add
cmpsl
sub
dec
mov
ljmp
arpl
sbbl
push
adc
or
ljmp
aad
mov
imul
aaa
fldcw
mov
ljmp
mov
sbb
adc
data16
or
les
sarb
test
push
sub
call
cmp
push
test
pushf
mov
adc
addr16
addr16
pop
or
add
fs
fsubl
sbb
cwtl
fldt
loop
dec
jnp
adc
xorl
mov
int
xor
jno
in
xchg
add
lret
and
xchg
sub
insl
cli
xchg
test
fisubrs
je
mov
mov
xor
inc
dec
aad
lock
push
stc
adc
mov
enter
dec
in
dec
push
push
cmp
imul
jo
mov
nop
push
pop
inc
xchg
loopne
gs
xor
stc
mov
adc
add
mov
loopne
fsubs
filds
cwtl
pop
xchg
dec
div
sahf
dec
mov
ficomps
add
add
xchg
cmp
push
arpl
mov
mov
jp
call
inc
push
loopne
mov
jns
hlt
ds
mov
nop
test
test
mulb
and
jg
lahf
jne
xchg
fsubrl
bound
outsb
arpl
adc
stc
ret
idiv
fdivrl
aaa
pop
xchg
test
adc
icebp
loope
test
sbb
adc
lret
cld
sub
into
xchg
push
add
inc
insb
pop
sbb
cmp
mov
outsl
sub
adc
sub
pop
cmp
test
hlt
xor
fidivrs
add
ja
cld
stos
idivb
mov
xchg
jecxz
xor
sbb
pop
leave
bound
or
fistpl
sbb
sub
or
out
pop
cmp
punpckldq
adc
inc
fwait
cwtl
inc
dec
icebp
push
or
push
adc
mov
mov
scas
shufps
push
mov
aas
inc
or
pop
sbb
or
or
add
add
fdivrs
adc
sub
cmp
sti
dec
mov
mov
xorl
ja
push
jb
inc
pop
mov
repz
or
in
add
mov
pop
ficomps
inc
lret
insb
add
sub
ror
and
lcall
pop
jmp
sub
outsb
or
xor
inc
aas
pop
or
orl
rcrl
dec
mov
xlat
loopne
je
and
push
xchg
shlb
xlat
mov
adc
dec
cmp
mov
out
and
sbb
cmp
mov
cmpsb
xchg
les
aaa
loope
rclb
lock
dec
fidivrl
xor
aas
lock
fucompp
aad
pop
pop
divl
sbb
push
je
mov
and
cld
dec
hlt
cmpl
or
loope
into
mov
cmpsb
and
je
inc
roll
pushf
mov
cmp
cli
xchg
jg
mov
xorl
pop
cs
pushf
cmp
adc
mov
rcr
jns
mov
pop
mov
pop
hlt
cmp
lock
push
pop
ret
xor
xor
and
inc
out
cli
fsubl
lahf
jo
dec
rcr
fstpl
push
ret
sbb
sbb
movsl
jle
push
mov
mov
cmp
xor
je
nop
mov
mov
sbb
ret
inc
cmp
sub
or
jne
lods
inc
cltd
das
icebp
jge
sub
sbb
daa
addr16
sub
and
shrl
adc
and
pop
mov
and
push
mov
and
lcall
mov
jg
pop
xor
out
cmp
xlat
pop
in
je
loop
outsl
repz
les
jecxz
xlat
add
sbb
negl
ret
movsb
pop
inc
sbb
and
mov
pop
mov
fs
insl
pop
add
mov
rorl
adc
pop
stos
pusha
push
pop
hlt
xor
leave
shrb
inc
jo
or
pop
dec
fucompp
or
or
sahf
jp
int
pushf
cli
clc
lds
mov
or
pop
in
cmp
loop
aas
sub
dec
adc
jecxz
cmp
fildl
inc
and
mov
push
lahf
push
pop
pop
cmp
test
mov
pop
xorl
jg
cmp
hlt
in
and
iret
pushf
pop
cs
rorb
and
negb
arpl
pop
mov
stc
push
movsb
mov
ja
add
lock
roll
jae
cmp
sbb
sbb
xchg
js
js
ss
jb
cmpsl
sbbb
popa
lods
inc
or
bound
mov
mov
add
ret
mov
stc
jle
int
std
jns
dec
mov
and
dec
xchg
sub
add
hlt
stos
inc
or
movsb
cli
movsl
cmpsb
pop
push
insl
dec
icebp
xlat
fcoms
dec
mov
repnz
dec
adc
add
ss
pop
in
mov
or
pop
push
mov
push
clc
ret
pop
sub
sub
sbb
movsb
jae
sar
into
pop
roll
jne
mov
push
or
fwait
dec
mov
xor
test
out
dec
into
sbb
xchg
cmpsb
out
jae
aas
movsl
mov
mov
call
lahf
jmp
fnstcw
lret
cmp
mov
fs
aad
outsb
xchg
jnp
jl
and
movsl
xor
mov
inc
in
imul
cmpsb
xlat
cli
mov
sub
mov
mov
testl
lods
and
fs
pop
or
nop
pusha
pop
ljmp
adc
jb
aam
xchg
xlat
out
cltd
lcall
pop
xchg
aam
wbinvd
mov
sub
fxch
jmp
cltd
inc
xchg
rcrb
stos
jns
ret
adcl
mov
into
jp
xchg
push
aas
scas
xchg
jne
insl
lods
mov
sbb
jae
mov
mov
shrl
xchg
xchg
iret
cltd
aas
pop
inc
lahf
aas
sub
sbb
jae
or
aam
popa
push
xor
sete
jae
sbb
pop
imul
stos
and
rcrl
movsb
fistps
cmpb
icebp
nop
and
sub
cmp
inc
push
popl
adc
fidivrl
sbb
shrb
pop
loopne
xchg
stc
mov
xchg
push
jge
mov
xor
pop
movsl
idivb
jecxz
int3
int3
inc
test
ficomps
pop
shrb
jecxz
jle
dec
jge
add
popf
loopne
sahf
aas
lods
cmp
lahf
cmp
cmp
mov
insb
mov
pop
mov
out
pushf
rcrl
into
xchg
shlb
add
nop
sbb
dec
outsl
test
lds
adc
lods
fwait
pop
push
xchg
leave
cmpsl
and
pop
push
dec
sbb
movlps
lcall
sbb
mov
adc
lcall
cmp
fnsave
jl
rorb
mov
mov
cmp
cltd
pop
xchg
push
test
lds
xchg
cltd
push
push
sub
jnp
cmp
sti
and
in
in
dec
xchg
pop
add
cltd
xchg
clc
xlat
std
fwait
sbb
jl
push
mov
adc
pushf
and
movsl
push
ret
lock
ja
push
mov
and
sub
fisttpll
push
pop
sub
add
lret
sub
adc
or
in
cmpsl
mov
rolb
jno
test
daa
pusha
mov
popf
add
repz
adc
jl
cs
std
mov
jae
xchg
sbb
lods
cld
jmp
shlb
dec
rcll
lds
cmp
xchg
test
xchg
stc
or
push
ljmp
xchg
lcall
xor
xchg
jns
pop
in
sub
and
adc
inc
adc
and
jo
push
mov
xchg
imul
sbb
dec
push
sub
adc
mov
subb
in
les
int
out
push
mov
dec
rcrb
pop
add
xchg
xchg
jno
das
leave
test
fwait
mov
nop
fsts
push
outsl
dec
mov
mov
pop
pop
adc
adc
aas
stos
cs
pop
or
daa
faddl
add
int3
xchg
insb
fwait
scas
dec
icebp
jp
mov
push
jb
lea
ret
cld
dec
mov
inc
lret
jmp
test
add
aad
add
mov
add
aam
cltd
jecxz
cmpsl
test
dec
lret
jg
imul
mov
or
and
lds
and
cmp
daa
cmp
ret
inc
out
imul
aad
imul
in
push
addb
dec
and
rolb
jno
mov
mov
mov
or
pop
aas
ljmp
popa
cs
inc
or
or
sub
repnz
mov
lcall
js
roll
sbb
shlb
out
mov
dec
lcall
dec
shlb
xor
orb
xor
sub
fs
cwtl
test
fisubrl
push
dec
sub
sbb
xor
rorl
fs
out
dec
ficoml
mov
addr16
scas
cmp
ljmp
movb
lea
jo
mov
enter
jmp
mov
mov
jg
and
cmp
sbb
aas
push
cmp
leave
mov
xchg
pop
push
mov
daa
sub
xor
adc
insl
dec
add
cmp
mov
ss
shlb
outsb
loope
xor
jl
into
jge
mov
or
fwait
lds
inc
flds
insl
inc
mov
cwtl
imul
ljmp
inc
xchg
repz
std
movsb
mov
inc
popa
jno
fsts
loopne
jl
cmpsb
and
mov
adc
pushf
xchg
ds
hlt
mov
or
cmp
addr16
mov
aaa
lret
outsb
mov
mov
std
scas
rcrl
or
push
sub
mov
xchg
xchg
lds
push
mov
inc
aas
jge
mov
mov
jp
mov
dec
add
pop
or
mov
orb
int3
cmpsl
ljmp
jae
jp
add
push
jecxz
jnp
mov
dec
faddl
fistpl
aam
dec
sub
insb
pop
or
xchg
pop
push
add
jp
pop
inc
mov
stos
sbb
fisubs
nop
daa
push
mov
add
adcb
or
sbb
push
vmread
div
in
test
jecxz
push
xorb
lods
dec
add
xlat
sub
lock
pop
dec
imul
and
mov
movzwl
dec
mov
xchg
inc
out
xor
jo
sbb
push
ds
fstpl
sti
loope
insl
lcall
mov
cmp
add
shrb
lret
pop
jns
sub
jmp
lea
xchg
push
out
xchg
xchg
call
aad
ret
shrl
outsl
inc
scas
or
sti
inc
cwtl
mov
sub
cmc
dec
xchg
addr16
and
sub
out
push
or
lahf
sub
lcall
loop
or
cs
jl
cmpsb
test
and
movsl
popf
test
fisubrl
pop
xchg
fidivrl
xor
mov
inc
mov
mov
shr
mov
jno
scas
xor
pop
ds
outsl
push
inc
cmp
inc
test
cmp
in
cltd
jae
lret
lret
xor
jecxz
dec
lods
jg
sbb
mov
mov
or
xor
and
mov
std
sub
roll
testl
xor
adc
test
mov
loopne
mov
jbe
jns
fsub
mov
pop
xchg
or
ret
sahf
push
dec
fdivr
or
into
sbb
mov
xor
jbe
divb
pusha
lods
mov
mov
adc
jp
jbe
cmp
add
cmpsb
mov
test
cmp
pop
movsl
fdivr
and
loope
add
movsl
popf
mov
mov
inc
enter
or
movsl
inc
push
mov
mov
icebp
inc
leave
push
or
popf
and
loop
mov
add
push
ret
mov
and
dec
pop
pop
push
mov
es
lods
mov
pop
xor
xchg
stc
scas
and
shrl
dec
out
movsb
mov
mov
and
xor
sub
pop
mov
popl
dec
stc
add
or
add
lret
inc
sahf
xchg
call
ljmp
mov
dec
and
dec
cmpsb
bnd
fwait
lcall
fnsave
in
lea
push
lea
pop
scas
leave
xchg
dec
out
lret
ret
add
outsl
test
sarl
mov
mov
or
ret
jmp
mov
mov
and
dec
mov
and
mov
jne
call
cmp
mov
xchg
imul
jne
cmp
test
mov
mov
inc
arpl
testl
xchg
sbbl
pop
icebp
imul
pop
adc
imul
sbb
cmp
dec
mov
aam
sahf
cltd
icebp
dec
mov
push
adc
mov
cs
cld
dec
outsl
adc
aaa
pop
adc
nop
les
sub
push
das
rolb
out
daa
out
cmp
adc
mov
test
sub
data16
lods
or
pusha
sbb
dec
sahf
ljmp
fdivs
ffreep
hlt
jg
stos
dec
cmp
cltd
sub
iret
ds
xor
shll
xor
outsl
pop
repnz
mov
and
add
addr16
mov
andl
imul
je
lret
inc
pop
stos
addr16
mov
push
xor
mov
and
add
push
cmp
daa
fsts
je
cmp
in
mov
mov
inc
mov
push
ss
insl
sbb
add
test
dec
push
mov
test
and
and
add
pop
add
out
pop
outsl
adc
xor
test
inc
dec
iret
je
pop
push
je
stos
dec
xchg
mov
xor
jge
dec
rcr
les
jb
fwait
sbb
dec
movl
fsubl
jns
push
in
iret
adc
std
jl
popa
shlb
mov
imull
pusha
fists
es
dec
xlat
in
jmp
push
xchg
push
mov
mov
push
sbb
and
jo
adc
sub
mov
stos
data16
sbb
data16
cmp
xchg
jns
lret
fcompl
dec
jl
pop
dec
cmp
push
xchg
in
les
mov
pushf
push
or
dec
data16
or
or
jge
mov
xor
cmpsb
dec
cmp
inc
mov
std
iret
xor
cmp
add
shrb
cmp
mov
lock
xlat
mov
fildl
out
xchg
xchg
and
shll
mov
xor
popa
sub
xor
outsl
and
xor
rorl
iret
push
cwtl
cwtl
adcl
xchg
xchg
and
dec
std
sub
cs
std
ret
pop
leave
mov
xchg
cmpsl
stos
sub
les
loop
int3
mov
mov
mov
add
mov
sbb
es
out
adc
pop
loop
sub
xor
sub
jb
aaa
shl
int
push
sarl
es
int3
addr16
dec
mov
movsl
in
push
push
add
jle
aam
add
cmpsl
sub
stos
shr
jae
movsb
lds
inc
and
dec
std
mov
data16
out
dec
pop
lods
inc
mov
and
lods
push
in
jg
ffree
into
mov
out
fnstenv
scas
jae
push
push
push
shll
in
jnp
fwait
movsb
mov
cmp
popf
inc
xlat
imul
sarb
nop
out
loope
ds
out
jnp
push
sub
jo
dec
mov
cmpsb
mov
sub
aam
sub
xor
ret
push
pushf
out
pop
outsl
icebp
js
mov
fs
out
outsl
ret
int3
push
push
dec
dec
out
or
lcall
and
dec
movsb
faddl
mov
je
add
add
rorb
pop
mov
sbb
mov
icebp
popf
mov
ljmp
mov
loop
sub
repz
test
aaa
int
adc
fcmovnb
insb
add
aas
mov
push
sub
mov
mov
sub
push
push
mov
or
addr16
push
daa
inc
mov
push
adc
test
jge
mov
arpl
in
cmp
mov
add
add
test
cwtl
mov
int3
mov
mov
push
mov
in
bound
xchg
xorb
movsb
mov
aas
int
xor
cld
or
push
push
mov
mov
int3
xor
js
fldt
aam
fcomp
stos
or
sub
cmpsb
repz
jns
jbe
adc
jge
std
sbb
xchg
imul
sub
pusha
mov
test
push
cli
into
sar
fisttpl
mov
push
pop
data16
push
mov
add
xor
push
cmp
test
xchg
bound
sahf
or
xor
xchg
lret
or
mov
push
imul
bound
cli
lcall
pushf
in
mov
cmp
cmp
sub
dec
js
pop
jmp
and
loopne
xchg
xor
push
adc
push
add
pushf
sbb
fdivp
jp
or
or
push
mov
aaa
fimull
lods
out
loopne
ds
mov
xchg
les
ds
scas
enter
in
adc
mov
pushl
push
es
mov
inc
aaa
pop
pop
xchg
sahf
in
std
mov
mov
insb
add
mov
lock
ret
mov
jge
cmpsl
xlat
adc
aaa
stc
xor
push
mov
jle
adc
icebp
jne
ficomps
movsb
cltd
push
mov
pop
mov
rcrb
inc
daa
xchg
pusha
and
mov
out
push
ds
mov
daa
and
dec
shrb
lods
shlb
leave
xor
out
popf
outsb
aaa
addr16
sub
aad
test
push
xchg
aam
mov
mov
sbb
iret
outsb
mov
mov
call
jnp
jns
bound
rorl
into
adc
gs
cwtl
stos
sahf
popf
push
dec
xchg
jl
lret
push
cmp
pop
ret
add
jge
lods
mov
or
lock
adc
adc
push
cld
cmp
xor
and
aam
out
jg
test
ret
repnz
mov
pop
mov
add
in
call
repnz
dec
push
mov
rcll
lods
sub
cmp
adc
in
test
mov
pushf
or
test
inc
push
mov
js
std
loopne
out
xor
ret
dec
aaa
fisubrl
add
test
out
adc
adc
dec
jle
inc
adc
xor
cwtl
pop
cmp
shlb
mov
js
pop
pop
cmp
mov
cmp
fdivrs
test
dec
ret
jle
or
dec
leave
jp
sub
pop
mov
mov
mov
fwait
mov
or
mov
dec
jmp
ljmp
mov
in
mov
ljmp
cmp
es
cwtl
mov
dec
addr16
or
mov
pop
aad
movsb
gs
lret
jmp
out
ret
dec
cmpsb
repz
mov
xchg
and
push
xchg
push
aad
xchg
jno
jb
jae
into
mov
ja
fdivrp
push
push
gs
dec
testl
push
sub
inc
mov
push
mov
stos
imul
dec
das
cmpsb
data16
nop
jne
mov
loopne
jne
or
ficomps
pop
in
cmp
inc
aad
daa
adc
inc
mov
add
fcompl
arpl
mov
add
or
clc
cs
push
int
mov
test
out
fidivrs
dec
test
dec
stos
jmp
pop
pop
sbb
in
mov
adc
notl
in
add
insl
xchg
mov
je
leave
add
jle
cmp
push
lahf
lret
sti
pop
push
imul
fcmovbe
fstpt
sbb
les
in
add
adc
scas
jbe
test
dec
subb
push
inc
mov
mov
and
jno
jle
dec
sbb
inc
or
and
into
dec
push
hlt
int
jns
cmp
dec
in
aas
cmp
jmp
xchg
push
jne
sbb
push
inc
out
sub
jnp
lahf
cld
fidivl
pusha
inc
xchg
add
test
xorb
add
xchg
xchg
and
lahf
sti
clc
pop
je
jns
xchg
scas
repnz
fsubl
xlat
imul
and
mov
cmc
jl
out
and
inc
enter
test
aad
push
adcb
lods
and
sbb
sarl
ds
ljmp
call
jecxz
pop
sub
or
inc
pop
push
jp
lods
cmpb
loope
push
dec
in
dec
pusha
pop
mov
or
addb
mov
and
add
mov
xor
in
int3
cmp
push
mov
pop
push
adc
cltd
pop
xlat
test
xor
lcall
mov
pop
cmp
push
jl
and
adc
jmp
adc
loope
xor
pop
aad
adc
out
pop
mov
dec
and
pop
inc
cs
cmovne
and
std
xchg
movsb
push
cmc
sub
inc
sub
adcl
mov
int
orb
test
jl
aas
fimuls
popa
std
add
pop
fwait
ja
cmp
dec
jle
lods
addb
xlat
inc
insl
pop
or
repnz
mov
shl
rorl
jbe
or
mov
aas
mov
scas
sub
in
xchg
add
lret
and
cmpsb
pop
and
imul
or
xor
inc
hlt
lret
ds
mov
xor
cmp
cmp
sahf
jae
iret
out
mov
push
and
out
into
mov
push
jge
and
inc
inc
sub
mov
mov
push
fwait
sbb
fnstsw
adc
rorl
jge
cmp
lret
push
mov
ja
mov
push
das
andb
jmp
lods
push
sub
dec
xchg
daa
aam
add
test
repnz
pop
mov
stos
gs
stos
ds
adc
sub
mov
and
clc
pop
mov
cmp
adcb
rcrl
sbbb
push
cmpsb
or
mov
jp
lret
stos
sahf
push
xchg
rorb
pop
push
dec
push
push
clc
popa
or
mov
aad
stos
jmp
rolb
xchg
push
mov
mov
mov
sbb
xchg
fs
insb
pusha
sti
fcomip
fcmovne
sub
imul
mov
dec
sarl
lahf
pop
push
mov
dec
inc
jmp
mov
nop
sub
pop
mov
jns
jne
pop
and
jg
cli
push
cmp
push
mov
fsubrs
jp
mov
adc
push
jb
loopne
stos
sahf
loopne
xchg
mov
sbbl
popa
pop
xor
cltd
aad
cmpsl
jl
fcoml
mov
cmp
push
sahf
mov
mov
pop
mov
adc
js
loop
jle
and
repnz
mov
shl
jmp
sbb
ds
out
adc
xchg
xor
jbe
pop
xor
sbb
jl
mov
aas
jo
sbb
push
je
and
mov
inc
sub
or
mov
xor
cmc
shll
into
pop
mov
mov
int
pop
negb
faddp
xchg
sub
xchg
aaa
and
xchg
push
push
cli
add
js
pop
andl
outsl
sbb
es
lds
sub
cmp
jle
cmp
xor
rclb
adc
das
push
push
jb
aaa
aam
xchg
adc
popl
insl
push
lret
inc
xchg
xor
xchg
ss
mov
and
mov
dec
lods
and
jl
xchg
int
test
and
inc
adc
gs
shr
or
mov
fwait
sub
dec
ljmp
insb
aam
iret
movl
or
sti
aas
shrb
dec
bound
jp
fcmove
push
mov
jno
jne
jge
je
sahf
iret
dec
xchg
jp
dec
cli
std
std
std
loope
fiaddl
push
and
xor
popa
lcall
cmp
jae
aam
jbe
mov
sub
ds
pusha
aaa
popa
jnp
mov
mov
imul
outsb
ds
push
push
xor
loope
xor
bound
imul
dec
mov
mov
repnz
sub
scas
scas
ss
test
mov
gs
shl
and
adc
scas
xlat
pop
inc
int
cmp
jb,pn
add
lds
push
aaa
aaa
jbe
cmp
fbstp
cs
outsl
es
push
adc
push
xchg
pop
mov
push
hlt
dec
loopne
ss
xor
jge
mov
and
cs
stos
stc
add
bound
rcrl
ret
xor
add
pusha
popf
test
cmpb
out
adc
hlt
das
and
nop
mov
ret
outsb
sbb
outsl
ds
lcall
or
icebp
add
xchg
test
data16
mov
dec
sti
jle
ret
ljmp
fsubrl
jp
or
push
sbb
roll
negb
ret
jbe
inc
lret
rcll
dec
movsb
rcr
push
xchg
pop
inc
lock
das
sarl
int
pop
mov
pusha
testb
mov
lret
out
cmpsb
pop
test
and
pop
sub
lret
pop
dec
aas
sbb
dec
pop
mov
rol
adc
icebp
xchg
dec
je
sbb
fisubrs
sub
enter
jno
fldenv
mov
xchg
push
pop
das
sbb
cld
ret
test
mov
lret
cmp
and
xor
sbb
push
popa
pop
xor
adc
inc
inc
mov
les
add
jp
lret
mov
add
mov
ja
pusha
aam
or
scas
mov
dec
mov
stc
pop
daa
sub
fldenv
lcall
xor
xlat
clc
fidivrs
outsb
call
adc
mov
mov
sbb
fdivrs
sbb
sbb
dec
dec
es
stos
lret
lcall
sbb
les
cmove
sub
test
shlb
mov
cmp
pop
push
out
daa
stos
or
pop
inc
sub
mov
xor
jnp
push
shrl
orl
mov
lea
mov
sbb
lock
lock
out
cmp
xchg
pop
xchg
ljmp
out
pop
pop
hlt
fisubs
and
fwait
sbbb
hlt
push
std
fstps
ret
ja
mov
stos
mov
or
mov
mov
subl
xor
sbb
and
iret
popf
mov
lea
jg
push
jae
push
lret
mov
std
xor
adc
xchg
dec
cltd
fsub
dec
cli
pop
or
sahf
les
stos
cmc
fcoml
scas
xor
mov
adc
std
cmc
cmp
xor
pop
roll
mov
jne
push
dec
mov
fs
mov
mov
imul
pop
cli
stos
outsl
mov
jne
sbb
xor
push
xchg
clc
cli
inc
and
cmpsb
push
test
pop
fists
ret
jmp
push
insb
push
jne
int
out
repz
and
cmpb
xchg
and
out
scas
hlt
jmp
push
dec
or
add
jge
stos
jg
leave
mov
push
loopne
xchg
stc
xchg
cs
xchg
xor
mov
js
adc
adc
xchg
jg
daa
sub
mov
or
fsubp
test
int3
je
mov
pop
negl
inc
xchg
not
jb
popa
ja
adc
scas
jbe
cld
sbb
fnstsw
out
mov
sarl
cli
adc
jp
adc
add
ffree
lds
xchg
daa
mov
clc
sbb
push
mov
ss
cmp
imul
andb
int3
xor
shl
rcrb
in
lret
fisttpl
sbb
fidivl
mov
scas
cli
lret
push
add
lock
pop
push
jb
movsb
ficompl
xchg
jmp
das
sub
rclb
ret
add
je
mov
mov
jecxz
in
mov
enter
xchg
xor
pop
mov
popa
sbb
aaa
js
xchg
mov
iret
jno
aad
pop
and
ja
push
jle
jo
xor
rolb
push
loopne
dec
pop
je
mov
int3
leave
dec
inc
add
stos
pop
mov
mov
add
fwait
aad
gs
lods
fistl
hlt
aas
jg
stc
adc
mov
push
pop
sbb
xchg
test
push
push
in
mov
sbb
rol
xchg
shll
mov
insb
aaa
ret
jg
mov
push
js
data16
pop
jge
and
int
loope
push
sbb
ja
bnd
pop
out
sub
cwtl
mov
pop
rolb
push
movl
sbb
inc
and
aad
xchg
outsl
fdivrs
and
fcomps
fdivrl
pop
rol
fsubl
jnp
aam
adcb
jb
popa
lret
sbb
mov
insb
loop
xchg
push
andb
aas
push
movsl
add
mov
xchg
adc
aaa
cwtl
addr16
add
sbb
addr16
int
pop
fildll
cmp
cmpl
je
sahf
jno
sti
int
dec
iret
push
pop
test
xor
sub
mov
daa
popf
jmp
push
cmp
sbb
dec
inc
lods
movl
gs
outsl
mov
outsb
jbe
jp
enter
and
adc
jecxz
idiv
ret
pop
add
pop
jnp
outsb
mov
inc
lret
stos
push
push
sub
outsl
shll
cltd
cmp
cli
mov
push
repnz
push
arpl
jno
mov
fwait
mov
xchg
scas
scas
mov
test
sbb
jo
test
sub
je
cmp
mov
bound
daa
imul
icebp
ret
mov
mov
in
adc
js
ds
filds
lret
push
push
sbb
jmp
cmp
pop
jmp
bound
pop
dec
xor
call
pop
adc
xor
xchg
jmp
mov
xchg
test
pushf
cmpsb
cmp
push
popa
mov
addr16
xchg
dec
or
push
in
out
cmpsl
cli
inc
jmp
push
mov
and
jbe
jl
xchg
stos
sbb
push
mov
mov
and
xor
scas
sbb
push
lods
mov
std
xor
sub
enter
pushf
push
ret
ljmp
dec
dec
adc
lods
xchg
jecxz
inc
cs
xor
mov
push
or
andl
mov
aam
rcrl
mov
pop
push
fwait
in
inc
pop
pop
xor
or
adc
sbb
push
lret
std
inc
xor
in
cwtl
repz
sarl
loop
jmp
insb
jecxz
dec
xchg
jmp
out
cmpsb
pop
and
jae
ret
notl
fsubl
and
cmpsb
testb
scas
xchg
cmp
mov
jbe
xchg
imul
jge
cmp
notb
loop
xchg
push
rcrb
or
int
shlb
shlb
add
testl
fildll
cwtl
iret
scas
das
xlat
out
out
outsw
in
pop
scas
mov
test
sub
xchg
sub
leave
adc
push
sbb
push
or
les
rolb
push
test
cli
in
leave
add
or
loope
outsl
mov
cmp
cmp
and
movsl
adc
xor
mov
push
popf
mov
mov
in
push
xchg
call
jg
jne
shll
sarl
push
sbb
mov
jo
pop
stos
adc
in
movsl
add
push
push
mov
daa
xor
xor
sbb
mov
popf
mov
adc
in
sub
pop
mov
repz
mov
pushl
call
mov
dec
inc
and
add
fisubrs
mov
add
or
je
cmpsb
or
jne
bound
pop
imul
mov
scas
mov
into
xchg
jl
out
popl
push
sahf
es
mov
push
inc
aad
ss
push
andb
sub
pop
not
cmp
in
inc
ljmp
stc
pop
push
mov
ret
dec
push
mov
std
adcb
inc
xor
xor
pop
leave
inc
dec
and
jae
mov
icebp
lret
mov
xchg
xchg
pushl
pusha
xor
lahf
jg
mov
fstpt
sbb
xchg
inc
cmc
or
in
pop
mov
xchg
adc
xchg
push
icebp
cs
not
in
aas
mov
int
adc
pop
mov
call
arpl
pop
cli
xchg
inc
mov
xchg
out
shll
dec
fisubrs
shlb
pop
idivl
insl
fsubl
clc
popf
lds
lahf
movl
lock
adc
sti
dec
and
cmp
push
push
adc
addr16
and
pop
call
inc
jnp
dec
push
jae
pop
into
xor
adc
out
jle
mov
movsb
xor
pop
out
jle
sub
sahf
push
adcb
pop
cld
aas
outsl
sti
push
xchg
push
mov
mov
inc
jmp
aaa
scas
ret
cli
sub
mov
in
jae
movl
mov
xchg
jmp
push
xor
es
mov
dec
addr16
add
and
stos
push
cmp
inc
addb
xlat
pop
mov
in
popa
mov
pop
or
jae
push
push
loopne
push
mov
rep
icebp
pop
push
in
jne
mov
fs
call
sbb
inc
shll
daa
nop
mov
pop
daa
sub
arpl
jb
les
ret
mov
dec
fs
ljmp
add
xchg
outsb
jb
out
aad
in
clc
data16
or
lods
ljmp
cmpb
inc
add
scas
es
and
ljmp
jno
inc
addb
mov
push
lods
orl
and
xchg
sub
jnp
adc
mov
imulb
mov
sub
or
fdivs
mov
aad
fwait
push
aas
push
add
add
pushf
inc
sub
mov
or
cmpl
fisubs
xchg
es
sbb
hlt
in
xor
xchg
into
xchg
pop
cwtl
fstl
jmp
and
mov
xorl
test
lret
imul
push
bound
fistpl
or
aaa
jns
pusha
divb
dec
xchg
daa
mov
mov
pusha
addr16
xor
push
insb
add
or
dec
jecxz
movsb
or
mov
jb
push
dec
adc
mov
cwtl
pop
dec
mov
rorl
inc
lahf
lods
lods
and
lea
push
dec
xor
sbb
add
aas
pushf
sub
push
stc
dec
lahf
outsl
daa
mov
sub
lds
add
ret
add
jb
or
mov
jg
iret
pop
data16
in
out
and
sbb
push
mov
xchg
inc
inc
and
cmp
daa
mov
pop
or
jbe
sub
jns
mov
inc
adc
out
cmp
in
shlb
jo
xchg
sbb
add
scas
cs
dec
loope
xchg
mov
fisubl
pop
psadbw
ss
sbb
mov
movb
xor
idivb
mov
pop
xor
pop
movsl
xchg
je
into
add
mov
pusha
and
repz
call
rclb
mov
clc
inc
xchg
bnd
cmp
in
jb
test
aad
push
fcomip
pop
jle
outsb
inc
mov
es
inc
push
cmp
aaa
lcall
adc
mov
shll
jno
sub
std
pop
aas
xor
lock
cmpsb
test
dec
jle
add
sub
out
aas
std
sub
xlat
ret
inc
cld
mov
sub
shlb
adc
jae
push
add
mov
in
sub
pop
adc
mov
out
sbb
mov
sbb
mov
bound
and
not
js
stos
pop
data16
dec
add
or
adc
rolb
into
push
inc
mov
dec
lock
sahf
les
cmp
xchg
adc
lret
and
sub
leave
and
adc
cli
movsb
add
adc
push
inc
sub
xchg
ficomps
mov
ss
xor
bound
bound
and
xor
mov
or
outsl
loope
loop
ret
jae
shl
fildl
xorl
mov
fldenv
push
pop
dec
std
mov
stc
dec
fs
push
dec
stc
sbb
or
ret
inc
insb
dec
das
loop
sbb
ja
sbb
mov
pop
clc
mov
xor
pop
pop
cltd
or
xor
scas
xchg
arpl
jg
and
mov
jne
arpl
cmp
scas
jecxz
mov
call
xchg
mov
popf
fcmovne
daa
sbb
js
or
addb
push
mov
or
loope
sbb
insb
pop
lds
adc
sub
xor
test
pushw
pop
icebp
or
faddl
mov
add
fcoml
test
pusha
cmpsb
pop
les
or
pop
push
inc
fistpll
arpl
xchg
mov
or
mov
clc
aaa
xlat
inc
jecxz
jo
mov
pop
insl
xchg
push
mov
xlat
lret
xchg
sbb
pop
inc
sub
mov
in
or
scas
fcmovnb
lods
xor
xor
push
testb
cwtl
xchg
test
shll
js
loop
in
int
or
pop
testl
pusha
mov
xchg
imul
pop
ds
lock
or
aam
std
xor
pusha
xchg
jns
push
inc
rcrl
or
mov
fwait
pop
outsb
aaa
add
sbb
ret
dec
fs
sbb
in
outsb
push
xchg
cltd
cmp
aas
pop
jmp
jne
sti
inc
sbb
mov
lea
fnstenv
xlat
xchg
xor
push
xor
pop
iret
sbb
and
jno
push
jbe
dec
xchg
fadds
add
mov
sub
push
mov
std
inc
mov
fcompl
xchg
cltd
mov
push
fyl2xp1
cmc
add
cmp
xor
loope
pop
mov
aas
out
sbb
in
fsubp
cmp
mov
daa
cltd
loope
dec
xor
mov
sbb
cltd
xchg
inc
popa
enter
xlat
push
test
lret
xor
inc
iret
cmpsl
mov
or
outsb
shlb
cli
xchg
addr16
dec
cmc
call
push
pusha
sub
mov
push
mov
inc
test
std
xchg
adc
mov
fdivrp
test
sub
loope
push
mov
imul
and
push
jl,pt
andb
add
xor
jg
mov
sbb
add
pop
mov
fistpll
mov
repz
daa
xorl
je
pop
mov
aad
fs
fdivs
mov
cmp
faddl
leave
shl
xor
fisubrs
cmc
int3
aaa
outsl
xor
iret
fidivrl
jle
daa
mov
mov
cmp
push
incl
xchg
movsl
sbb
cmp
scas
sub
add
scas
lret
leave
fldl
das
jo
std
jno
and
lds
out
push
xchg
push
outsl
mov
repnz
mov
mov
aad
test
int
and
cmp
mov
lods
dec
mov
jl
jecxz
nop
or
arpl
les
bound
xor
out
gs
sbb
aaa
mov
in
ja
xlat
push
sub
rorb
jae
mov
std
adc
test
vpmaxsw
xor
loopne
sub
pop
or
push
movsl
stc
loopne
das
xchg
sbb
sub
mov
pop
aaa
mov
xchg
dec
mov
les
mov
mov
ljmp
mov
xchg
sub
insb
pusha
adc
in
call
pop
lcall
popaw
and
sbb
adc
faddl
inc
sbb
mov
dec
pop
xchg
mov
ds
dec
push
fs
adc
call
inc
xlat
push
int3
sub
outsl
add
nop
fimull
xor
dec
jmp
xlat
fidivrs
mov
mov
xchg
jb
add
mov
notb
hlt
mov
add
addl
in
int3
xorl
add
hlt
xchg
xchg
movsb
sub
stos
imul
xchg
xor
test
xor
cmp
fdivr
vcvtsi2sd
mov
jae
push
pop
mov
cmc
jo
fdivrp
mov
push
cwtl
les
mov
cmp
and
sahf
cmp
fiaddl
lcall
or
es
rorb
xor
mov
lcall
pop
cmc
lods
push
push
lods
sbb
pop
sbb
outsl
movsb
adcl
cwtl
sahf
push
pop
push
inc
mov
mov
sub
adc
lcall
addb
outsl
jp
or
leave
xor
mov
sub
outsl
xor
jns
pusha
into
sub
das
mov
add
js
xchg
lea
jp
cmpsl
lock
lods
pop
sub
mov
jbe
stc
and
lcall
mov
mov
jle
lds
jge
sbb
cli
sbb
repz
mov
mov
mov
add
imul
add
xchg
jmpw
or
and
inc
mov
or
cwtl
cld
push
and
push
call
or
out
xchg
aaa
fnstcw
jbe
out
mov
outsb
mov
lods
ljmp
jecxz
jno
daa
cmp
int
dec
push
lods
mov
ficomps
xchg
mov
sub
out
movsl
cmp
pop
add
xor
in
push
mov
sub
out
sub
jae
cmp
pushl
or
orb
mov
punpckhdq
mov
cmp
push
jne
fldlg2
or
and
test
pop
addr16
xor
xchg
cs
push
pop
stos
inc
ss
jae
ss
bnd
and
lds
fs
dec
ret
mov
mov
leave
mov
inc
pusha
or
or
sbb
jg
lcall
add
insl
stc
fwait
shlb
xor
jbe
data16
jne
inc
sahf
push
sbb
loope
hlt
cmp
testb
mov
mov
loop
xor
pop
pmulhw
adc
loope
ficoms
xorl
inc
add
xchg
fistpll
pop
lret
inc
cwtl
stos
xchg
in
push
pop
in
sub
xchg
xor
loopne
sbb
inc
mov
mov
pop
dec
mov
jno
cli
stc
sub
jae
int
push
in
mov
call
scas
cmc
or
outsb
int
loopne
add
mov
mov
enter
dec
add
fstps
mov
dec
rclb
fstp
dec
fcoml
and
fnstenv
ror
adc
test
out
aas
or
dec
mov
test
jne
rcll
std
mov
roll
or
dec
add
cwtl
or
xchg
js
mov
lock
stc
mov
jg
mov
pop
or
jl
push
cmp
or
add
and
imulb
stc
xor
insb
push
test
and
xchg
lock
movsl
stos
scas
adc
inc
mov
repz
scas
std
dec
lods
xchg
scas
int
test
notl
js
lcall
sub
cmc
repz
or
cmp
mov
inc
or
outsl
scas
fmuls
repz
cli
stos
cli
dec
shlb
mov
or
mov
or
fmuls
or
ds
cmpsl
xor
std
adc
add
mov
outsb
cld
jae
aam
and
xchg
xor
xlat
imulb
jge
mov
lea
outsl
ds
sbb
mov
shr
daa
daa
movsb
or
test
pop
stos
sbb
int3
xchg
xor
lret
xchg
jno
test
dec
xor
sarb
popa
add
push
pop
inc
stos
inc
sub
xlat
dec
mov
adc
sbb
dec
or
xchg
push
cmc
cltd
add
and
dec
cmp
mov
mov
out
movsl
jo
cwtl
mov
fldl
sub
shll
loop
popa
scas
jecxz
jle
pop
bound
jb
cmp
jno
cmp
movsl
jge
and
or
add
ret
inc
mov
mov
popa
cmpsl
repnz
dec
mov
imul
cmpb
sbb
roll
adc
xchg
pop
jns
out
xor
mov
sar
mov
pusha
ljmp
mov
mov
sahf
repz
ret
jl
iret
sbbl
push
aaa
mov
add
stos
ficoms
jbe
mov
pop
addb
mov
lcall
movsb
push
push
xchg
das
ljmp
pop
xchg
cmc
repnz
imul
popa
shr
xor
mov
insb
movsb
xchg
cmp
push
insl
xchg
popa
loopne
or
mov
fimull
dec
sub
push
jg
repnz
or
out
push
into
xor
test
mov
loopne
or
add
enter
mov
aam
scas
call
add
cmp
and
push
jb
xor
mov
jge
jae
ja
outsl
cmp
mov
out
xor
ficompl
sub
push
vpcomb
sub
pop
and
adc
jne
popf
or
test
lret
mov
hlt
inc
cmp
int3
fdivrl
jne
adcl
dec
pop
xor
repz
mov
out
push
cmp
rorb
or
aas
pop
jns
fxch
dec
lds
push
shr
lcall
dec
mov
inc
ja
dec
aad
repnz
push
or
pop
out
mov
lahf
mov
mov
jge
idivl
popa
adc
mov
or
xor
mov
pop
or
cmp
push
dec
mov
or
loopne
orl
shll
je
imulb
out
into
into
jne
ljmp
cmpl
sbb
movsl
xor
rcll
xchg
sub
pop
jns
gs
adc
dec
or
int
fdiv
imulb
add
jne
xor
xor
rcrl
or
nop
inc
mov
jmp
roll
sbb
fwait
cmpsl
mov
xor
ret
movsl
aam
fistl
inc
sbb
push
xor
loopne
pusha
xchg
xlat
lcall
pop
inc
jb
femms
js
mov
lahf
sbb
stos
pop
lret
xchg
add
cmp
cmp
aaa
in
or
mov
sub
jns
jo
imul
pop
mov
lahf
add
inc
or
adc
out
iret
in
popf
loopne
addr16
mov
mov
cltd
sub
adc
dec
mov
lods
jnp
idiv
fcompl
nop
jo
dec
stc
jmp
or
jmp
xchg
jno
jo
cmpsl
xchg
jle
pushf
adc
add
sbb
dec
push
push
gs
xchg
mov
cmc
mov
mov
int
mov
mov
insb
ret
mov
jnp
loopne
cld
pop
jb
xlat
inc
or
jbe
arpl
movsl
push
enter
xor
sub
sub
cmpsl
daa
mov
sbb
popa
dec
mov
ss
sbb
out
and
mov
dec
push
mov
popa
dec
jmp
ds
fildl
gs
jo
cmp
notl
data16
jb
pop
inc
xor
scas
loope
test
aas
dec
pop
subl
xchg
aaa
insb
mov
lock
push
pop
sahf
stc
jae
cmp
pop
mov
fldt
xchg
cmp
ret
mov
testl
or
adc
fbstp
adc
cmc
lock
out
lods
push
aas
jg
ret
push
iret
out
xchg
rcl
iret
push
in
scas
mov
lcall
imul
sbbb
insb
lret
cmp
inc
mov
pusha
or
out
outsb
int
cmp
fimull
dec
sub
xor
sbb
nop
shrb
mov
pushf
icebp
dec
gs
popf
xor
repz
fsubs
scas
pop
hlt
xchg
or
jo
cmp
mov
sub
jmp
fdivrp
and
xchg
icebp
push
pop
test
or
leave
push
pop
mov
xchg
adc
mov
rorl
rorb
and
movsl
jge
sub
inc
push
loopne
loopne
mov
xchg
fistpl
mov
addb
ss
lcall
les
and
in
ja
ds
shll
test
inc
lret
andb
xchg
mov
stos
sbb
cmp
and
insb
rorb
hlt
nop
push
push
aas
test
rorb
fidivl
sbb
lahf
aaa
inc
push
xor
sbb
mov
push
add
outsb
pop
test
pop
pop
nop
ljmp
inc
fstpt
mov
aaa
mov
jecxz
sub
cmp
mov
jbe
mov
mov
movsb
mov
or
mov
in
push
push
sbb
inc
lret
push
jo
dec
stos
gs
and
pop
std
lahf
dec
jl
or
dec
subb
cmp
mov
popa
adc
dec
fildl
icebp
push
push
inc
out
jl
imul
or
add
insl
repz
xchg
stos
out
mov
ficompl
sbb
xchg
or
xor
pop
adc
stc
icebp
test
mov
rcrl
insl
lcall
sub
loope
lahf
daa
fs
call
bound
jle
imul
mov
mull
mov
adc
stos
mov
lods
xchg
xchg
shrb
sahf
leave
mov
test
test
sarl
sbb
jb
es
cmpsl
push
pop
loope
jb
dec
inc
jp
lret
incl
cmp
divb
sbb
lret
add
push
outsb
fsubrs
in
push
xlat
stos
outsb
repz
sbb
inc
mov
push
mov
mov
jns
mov
sbb
insb
test
scas
push
dec
lret
iret
ja
pusha
jb
lea
andb
mov
insl
shlb
inc
mov
outsl
int
cmp
lock
lret
pop
insb
inc
aas
and
pop
jecxz
popa
subl
outsl
jo
xor
scas
ss
rorl
das
and
add
in
pop
fwait
mov
pop
shll
add
xchg
mov
loop
mov
jne
sarb
adc
scas
mov
push
out
inc
test
push
sbb
add
dec
mov
or
sbb
loop
dec
jnp
push
push
jo
push
cmp
ffreep
dec
or
pop
push
pop
scas
inc
mov
shll
gs
dec
jp
addl
mov
leave
add
push
shll
jb
ds
xchg
pop
sub
lret
stos
fidivl
into
push
jmp
and
ja
jb
xlat
xchg
lret
mov
jp
int3
lock
cltd
and
test
loopne
enter
or
mov
sbb
adc
mov
mov
and
inc
pusha
inc
icebp
int3
cmp
rcll
lods
ljmp
jle
xchg
lock
xchg
enter
popa
shll
je
fxch
repz
add
push
dec
adc
xchg
test
add
shr
mov
mov
mov
arpl
cmc
mov
jge
jg
ja
mov
push
das
push
ficoms
mov
xor
mov
test
inc
push
mov
jmp
into
inc
gs
pusha
sub
xlat
outsl
arpl
inc
test
xchg
jp
dec
daa
cmp
xor
mov
and
into
imul
add
jne
ret
clc
daa
xchg
xorl
and
insb
cmc
daa
push
cltd
pop
xchg
sbb
xchg
cmpsb
pop
pop
aaa
sbb
pop
iret
pop
repnz
jg
loop
xchg
shrl
jae
pop
imul
push
sbb
add
and
jne
lahf
outsb
mov
shrl
sub
aas
dec
push
push
jnp
push
loopne
scas
clc
icebp
jg
aas
xchg
call
fsubp
pusha
in
je
add
mov
jb
mov
and
adc
inc
push
iret
mov
dec
int
pop
sbb
cmp
cmpsl
inc
sbb
push
cmp
mov
push
adc
aam
test
out
xchg
pushw
mov
inc
xchg
jl
in
or
jnp
push
or
enter
je
inc
lcall
mov
inc
xchg
test
out
xchg
push
mul
lret
stc
adc
stc
ss
jle
add
pop
push
les
push
test
mov
push
or
push
cmpsb
test
adc
test
mov
hlt
ret
pop
mov
xor
fisubs
ljmp
cmc
cltd
mov
das
icebp
cmpsl
fcom
lret
jle
imul
iret
imul
and
jbe
pop
jo
jg
loop
sbb
xchg
xchg
adc
cld
in
inc
fidivrs
ficoms
sub
cltd
or
sub
nop
inc
jl
xor
mov
jecxz
or
add
lret
adc
aam
dec
mov
pushf
shll
inc
lods
das
andnps
outsl
xchg
xor
addr16
out
incb
in
add
pop
mov
and
rcrl
push
in
js
pop
daa
jno
add
add
xor
loope
add
cltd
add
and
push
data16
and
push
test
pushf
jae
sbb
jp
pushf
cli
lcall
pop
shr
mov
jg
sahf
int
adc
add
and
test
icebp
dec
push
push
je
addl
es
stos
out
dec
inc
clc
or
push
dec
lock
hlt
mov
dec
ss
iret
adc
inc
dec
push
mov
dec
mov
imul
jmp
cld
mov
cmpsl
xor
mov
test
loop
mov
push
jg
jge
mov
sahf
mov
mov
jno
ljmp
ficoms
push
mov
sbb
mov
jns
xlat
icebp
xchg
mov
mov
repz
js
incl
xchg
inc
mov
fdiv
arpl
clc
mov
cmpl
jl
imul
mov
mov
outsl
dec
hlt
jo
cmp
shlb
aam
adc
xchg
sahf
xchg
test
scas
in
push
in
scas
mov
call
or
jmp
adc
rcrl
cld
and
jo
je
xchg
mov
ljmp
dec
mov
sbb
repnz
loop
pop
add
fdivrl
lahf
loop
push
mov
jns
int
inc
mov
divl
mov
lret
cltd
and
sbb
adc
cwtl
inc
cmp
cltd
cmp
notl
xchg
hlt
or
mov
sub
int
ss
mov
iret
sub
xor
inc
push
add
es
movsb
lcall
or
cmpsb
adc
adc
js
dec
mov
mov
lea
xor
idivl
sbb
mov
xchg
add
inc
jl
aaa
push
daa
xor
xchg
inc
aam
pop
andb
adc
dec
and
in
and
sbb
inc
stc
adc
xor
out
hlt
adc
cltd
adc
or
repz
jno
inc
lret
push
cmp
cld
lods
fldenv
fdiv
movb
adc
or
adc
and
and
stos
aas
rcr
cmp
and
jns
xor
neg
push
cmp
and
push
sub
sbb
les
mov
dec
stc
into
outsl
xchg
les
inc
sbb
out
or
jge
dec
std
stos
ss
mov
rorb
sub
test
sbb
cltd
cmp
cli
pop
adc
stc
inc
mov
pop
cmp
mov
adc
mov
push
fcomps
and
lods
fldl
inc
lret
lds
fldenv
stc
push
loope
decb
mov
push
insb
dec
or
inc
jbe
push
mov
xchg
pop
fwait
mov
movsb
insb
dec
jo
bound
adc
aaa
xlat
sub
popa
mov
add
arpl
cmp
xchg
cmp
lods
cmp
xor
dec
jge
loope
stc
call
les
inc
aas
das
dec
xchg
mov
dec
sub
lea
inc
das
aas
lret
movsl
cmp
mov
outsb
jb
sub
cmc
cli
mov
push
movsb
pop
jns
lahf
cmp
addr16
pop
sbb
ret
jns
push
xor
loop
dec
hlt
bound
ret
jbe
lods
or
mov
xor
xchg
cmpsl
jne
push
xchg
leave
outsb
or
or
divb
out
sbb
shrb
xor
mov
lahf
ljmp
sub
filds
shll
cmp
loope
popf
sahf
dec
mov
mov
mov
mov
dec
pop
adc
xchg
cmpsl
xor
out
sbb
repz
xchg
sbb
jo
lds
test
iret
decb
ror
mov
ljmp
je
xchg
and
notb
cmpsl
pusha
mulps
jmp
mov
nop
sub
nop
lea
dec
inc
cmpsl
pop
in
cmp
xor
movsl
aad
ja
push
daa
xchg
scas
insl
fimull
and
push
mov
stos
js
cmp
push
inc
inc
int
fxch
sub
nop
dec
iret
xchg
fdivr
stos
jno
in
fnsave
shll
repz
lods
cmpsb
int
mov
mov
cmpsb
inc
lcall
imul
add
popa
mov
or
jecxz
xchg
mov
ljmp
adc
outsl
pushl
repz
js
lret
cld
in
into
setb
lods
in
clc
inc
mov
addb
shll
fldl
pushl
js
stos
jmpw
pop
xchg
repnz
mov
sahf
adc
aad
push
fdivp
push
insb
hlt
pop
lods
je
mov
jae
cmp
int3
push
sub
mov
mov
sbb
push
cmp
jl
cmp
leave
cltd
inc
mov
and
pop
push
mov
ret
inc
sbb
repz
std
inc
enter
out
pop
dec
dec
adc
es
jp
aad
dec
cmp
push
icebp
xchg
fldt
push
and
ret
ljmp
fst
sbb
stos
cltd
xchg
out
shll
scas
nop
push
sub
dec
div
cli
test
sub
outsl
dec
stos
loope
mov
add
int
in
jo
les
cmp
shrb
jae
lret
inc
adc
into
inc
push
mov
aaa
fldl
xchg
mov
xchg
xchg
jl
inc
in
outsb
imul
sub
in
and
sarl
mov
jnp
cmp
add
add
and
add
add
ror
mov
sbb
xchg
sahf
mov
push
jmp
or
insb
mov
popa
xchg
mov
sahf
ret
stos
jb
jbe
inc
cltd
insb
scas
ds
or
stc
mov
das
movsb
add
inc
negb
sub
xor
inc
mov
into
lock
movsl
clc
pop
rorb
or
fs
ret
dec
mov
sub
mov
dec
jl
add
repz
or
sbb
dec
orb
xchg
xchg
fildll
push
insl
push
xlat
rclb
fstpl
jmp
inc
xlat
int
out
lds
or
sub
jle
mov
js
dec
xchg
xor
mov
gs
mov
cmc
cmpsb
xlat
mov
inc
aas
inc
mov
mov
jae
icebp
std
cmp
push
dec
push
and
in
sbb
cwtl
imull
push
fcomps
adcl
mov
cwtl
xchg
xor
sbb
add
out
test
call
in
sbb
into
inc
jne
jg
jge
into
mov
stc
pop
mov
push
insb
xchg
add
mov
lods
js
pop
loopne
xor
mov
movsb
iret
out
xor
test
mov
or
repnz
fsubl
xor
insb
push
jae
push
je
stc
rol
dec
jg
pop
push
scas
xacquire
pop
ljmp
mov
cmovl
mov
out
mov
lock
pop
mov
enter
imulb
int
adc
mov
outsl
stc
pop
nop
test
add
xor
push
mov
in
cltd
hlt
or
out
pop
scas
jns
push
out
call
jbe
push
ret
andl
into
cli
cmpsb
pop
addr16
adc
dec
push
lods
enter
jg
push
pop
push
cmp
std
out
mov
stc
pop
xchg
xchg
dec
in
xor
jno
push
adc
in
pop
and
mov
mov
in
push
imul
in
push
imull
mov
or
es
push
mov
xor
jbe
gs
lret
sbb
int3
subb
sub
lods
lret
or
inc
push
mov
add
cli
stc
jne
loope
cmp
fdiv
inc
push
fs
adc
scas
push
mov
enter
mov
cmp
cmp
loope
into
adc
and
adc
arpl
jecxz
sub
cld
jns
push
clc
xchg
aas
pusha
dec
lret
cmp
cs
fwait
cwtl
test
decl
test
std
xchg
jne
movsb
lcall
cmp
mov
mov
cmp
repz
ljmp
shrl
push
xor
adc
bound
mov
and
addr16
in
pop
in
es
cmp
mov
add
fsubrs
stos
or
and
or
dec
ds
clc
xor
mov
jns
int3
mov
mov
aad
mov
mov
dec
imulb
push
faddl
test
adc
insl
pop
gs
push
mov
add
lods
add
inc
jecxz
aam
mov
cmpb
mov
add
outsl
sbb
imul
aad
cld
negl
test
adc
xor
add
cld
mov
mov
lcall
sbb
mov
adcl
xor
cs
push
enter
dec
mov
fnstenv
pop
mov
test
test
sbb
pushf
pop
call
xorb
leave
mov
dec
seta
insl
mov
xchg
jb
repz
ds
mov
xchg
jne
push
jae
or
adc
xchg
lock
inc
add
call
sbb
adc
pop
mov
jg
cmp
xchg
lea
mov
jns
int
xor
jle
ret
jbe
mov
dec
js
or
imul
cmp
out
or
mov
stos
dec
pop
adc
xchg
jo
inc
jp
ja
lahf
cmpsb
mov
jb
push
mov
aad
add
cmp
enter
daa
out
push
cs
inc
dec
xchg
fs
jns
adc
sbb
add
pop
mov
xchg
icebp
mov
xchg
xchg
in
mov
les
sbb
mov
push
push
lea
aaa
inc
outsb
sub
mov
int3
inc
or
dec
mov
jl
adc
imul
ret
ret
push
push
xchg
mov
pop
xor
imul
int
pop
rcll
cmpsb
aad
mov
or
cmpl
xchg
pop
and
pop
mov
aas
test
adc
std
ljmp
repz
adc
cmp
mov
mov
jecxz
xlat
pop
and
pop
negb
imul
popf
in
push
mov
add
xchg
fwait
in
mov
inc
daa
add
inc
js
lea
mov
stos
and
push
xor
repz
dec
xchg
pop
add
and
test
jl
sbbl
aas
push
imul
mov
push
popf
and
neg
call
pop
shll
inc
lret
test
xchg
and
xor
jae
ret
subl
stc
cli
jg
mov
ljmp
repnz
insl
stos
pop
mov
daa
cltd
xor
push
mov
data16
rclb
jp
xlat
int3
jp
or
orb
aad
mov
aas
cmpsl
aam
adc
insl
gs
cmp
pusha
ret
push
lods
inc
hlt
aad
mull
sahf
jae
inc
scas
mov
xor
in
push
rorl
cmp
cltd
imul
mov
sbb
mov
xchg
push
jae
pop
fnstcw
sahf
les
dec
push
cmp
popa
fdivrs
cmc
fidivrs
xlat
mull
ret
mov
incb
or
iret
movsl
sbb
out
add
fdivrs
cs
insl
inc
sbb
stos
xor
and
in
cmp
fistpll
mov
rclb
shll
jbe
or
cmc
rcrb
mov
sub
mov
rcll
loop
xlat
pop
and
or
jl
lods
pop
or
xlat
push
enter
or
pop
clc
in
aas
leave
inc
mov
rcll
out
xchg
mov
lret
dec
mov
lods
sub
jecxz
std
cltd
dec
in
insb
push
and
test
jcxz
sbb
cmp
cmp
dec
mov
iret
lea
enter
fidivrs
cltd
and
push
dec
push
pop
push
xchg
xchg
insl
jecxz
sar
sbb
int3
xor
bound
lret
mov
stos
fsts
jp
dec
lea
push
dec
and
cmp
xor
jle
cwtl
addr16
loop
out
push
cmp
out
jg
jae
sbb
enter
lods
adc
outsl
ss
out
lret
shll
xchg
std
mov
loop
adc
in
cwtl
mov
lret
enter
sbbl
push
lcall
add
aas
push
pushf
xlat
cmp
nop
aaa
jp
es
addr16
mov
jge
ljmp
sub
xchg
mov
inc
repz
add
es
push
js
sub
dec
dec
sbb
loope
mulb
ljmp
lds
arpl
dec
adc
inc
je
fsubrs
or
outsb
jne
mov
lods
xchg
clc
outsl
add
test
and
mov
push
sbb
mov
dec
sbb
dec
adc
es
mov
pop
mov
pop
mov
lret
jno
pop
mov
imul
ja
jge
xor
mov
add
mov
mov
sbb
and
imul
loope
lods
push
sahf
dec
fwait
cmpsb
cmp
ja
push
sub
mov
adc
rcrb
mov
leave
adc
ds
sbb
cmp
add
in
dec
sahf
add
aaa
lcall
ljmp
adc
jnp
inc
lods
and
xor
xchg
cmp
mov
jo
lds
imul
push
ja
xchg
shl
xchg
push
out
lds
js
jl
gs
mov
add
aad
bound
dec
cmc
inc
xchg
mov
outsb
mov
rorb
negb
outsb
ljmp
push
add
or
dec
add
iret
mov
xor
xchg
adc
fisubrl
testb
das
pop
cmpsl
inc
mov
jle
outsb
mov
adcb
add
xchg
pusha
jp
popa
out
in
stc
movb
mov
pop
inc
sbb
int
cwtl
int
xlat
cmpsb
pop
lret
cmp
daa
mov
jl
lods
push
inc
cltd
mov
inc
fnstsw
xor
lods
mov
mov
les
dec
hlt
dec
imull
call
fnstsw
push
xchg
push
icebp
fnstcw
adc
push
jnp
sbb
or
add
and
jp
jne
ja
mov
jge
pop
movsb
andl
mov
xor
push
add
pop
jp
cs
ja
sbb
jge
mov
mov
loop
into
out
xchg
lahf
subl
mov
jno
decl
ss
lahf
mov
iret
jl
push
ret
sub
cld
mov
loope
xor
jp
insl
int3
mov
mov
into
jb
pop
sub
cmp
sti
pop
insl
roll
mov
xchg
flds
sub
jg
pop
push
pop
aam
dec
popf
mov
lret
jo
sbb
xor
ret
out
mov
pop
adc
scas
test
call
loop
fsts
mov
jns
jno
or
push
lcall
jns
cltd
xchg
roll
dec
scas
xor
mov
jae
inc
out
clc
and
insl
gs
sahf
pop
mov
push
in
std
pushf
dec
xchg
int
jno
add
jo
outsb
xchg
cmp
sub
scas
and
pop
xor
xor
xor
movsb
or
fisubl
cltd
jmp
or
adc
imul
dec
rol
mov
add
fnstcw
jnp
ja
movsb
pusha
in
sbb
and
ret
pop
jp
or
test
mov
inc
pop
adc
repz
xchg
jle
push
andl
aad
push
wrmsr
inc
js
stos
iret
pop
jg
sarl
adc
mov
fmulp
xchg
lods
loopne
std
repz
sbb
add
add
out
push
push
or
xchg
andb
cs
mov
fmuls
mov
sbb
cmp
stc
cmp
decb
es
fcmovnbe
nop
pop
xchg
mov
nop
les
dec
inc
repnz
pop
sub
push
stos
bound
xchg
jb
lods
lret
adc
adc
push
andb
cmp
stc
mov
hlt
cmpsb
mov
idivb
lods
orl
inc
inc
scas
push
aas
test
pop
dec
fdivrs
cmpsb
ret
mov
pop
cmc
imul
jb
scas
cltd
push
sti
push
dec
fmuls
sbb
out
mov
int3
or
xor
outsl
js
jmp
mov
and
dec
xchg
sub
fisubs
mov
out
mov
test
std
gs
icebp
add
and
rcrl
xchg
pop
xchg
sub
int
in
cli
pop
inc
outsb
dec
sub
sub
js
aad
shlb
sub
lds
mov
imulb
in
fprem1
mov
cmp
js
mov
lods
push
pop
aad
insb
cs
mov
push
add
sub
js
and
cwtl
inc
fninit
xor
cwtl
lds
mov
jae
and
cli
mov
stc
or
addb
mov
sub
ja
scas
mov
aad
push
call
insl
adc
sub
add
jo
cmovns
adc
loopne
add
sbb
dec
or
ss
out
and
rcrb
in
andb
jecxz
push
dec
jns
xor
js
xor
push
mov
lret
lea
push
inc
and
fildl
je
loopne
faddl
mov
mov
mov
lods
out
es
lods
mov
push
push
mov
je
jmp
inc
jbe
iret
test
rep
jle
mov
stos
std
pop
mov
dec
xlat
sbb
push
cwtl
sub
popa
dec
es
flds
and
add
xchg
mov
pop
pop
mov
into
xchg
lea
rcll
lret
pop
or
and
scas
ficoms
ljmp
sahf
add
loope
xor
cs
jbe
mov
dec
mov
in
add
mov
mov
fistps
pop
ret
push
xchg
mov
xchg
cmpsb
mov
dec
push
aas
loop
inc
inc
xor
adc
orb
inc
mov
into
dec
out
push
push
rcrl
ja
mov
pop
test
lea
daa
sahf
movsl
cld
cltd
lea
sub
ret
cmpsl
cmpsl
sahf
jecxz
mov
push
dec
mov
ss
call
inc
mov
inc
ss
cmp
mov
sahf
popa
sbb
dec
pop
lea
pop
pop
daa
pop
cli
jno
jmp
push
out
and
shlb
inc
outsl
push
ret
insl
js
add
movsb
add
cmpsl
cmp
imul
mov
adc
mov
xchg
call
leave
ja
insl
push
sub
test
or
add
xchg
rclb
or
push
adc
ret
jns
imul
out
stos
aas
aas
out
rorb
xor
out
sbb
cmp
scas
mov
dec
je,pn
jno
mov
jnp
outsl
adc
das
rcl
inc
sahf
loope
cbtw
pop
mov
enter
popa
cmp
cmpl
pop
out
roll
sub
icebp
jne
in
fldcw
ds
push
dec
test
outsb
jmp
push
andl
jne
jbe
loopne
repnz
mov
ss
js
loope
push
mov
dec
nop
movsb
push
scas
repz
pop
aad
sbb
out
cld
sbb
push
add
popf
testl
cmp
cmp
mov
orb
xor
adc
enter
adc
or
or
inc
cmp
loopne
ja
mov
mov
sub
inc
add
test
cmp
sbb
loopne
mov
sbb
jns
fisubs
insb
sarl
loope
pop
push
jno
mov
sarl
xchg
lret
cs
adc
mov
mov
repnz
sub
cmp
iret
mov
jns
inc
in
in
add
sub
mov
jns
imul
sbbb
xchg
mov
jns
sbb
dec
jecxz
sub
gs
ficompl
cwtl
xor
adc
int3
dec
test
xchg
movsl
loop
leave
iret
add
lods
cld
mov
xchg
fwait
cmp
xchg
movsb
cwtl
dec
add
rclb
rcrl
imul
lea
out
loop
loop
imul
adc
mov
fimull
out
aam
arpl
push
push
sub
cmp
inc
loopne
cmp
push
jg
push
mov
dec
movsb
cmp
ret
inc
jbe
mov
mov
cmp
aaa
fidivl
jo
fwait
mov
int3
pop
mov
test
enter
adcb
or
insb
inc
jbe
cli
mov
or
hlt
mov
or
xchg
enter
or
adc
das
into
and
sub
cmp
icebp
push
sub
push
and
sbb
xchg
push
mov
sbb
roll
inc
fbld
push
clc
inc
clc
insb
jle
xchg
push
lret
and
es
sub
es
dec
imul
sbb
mov
mov
add
fucomp
xchg
clc
je
push
dec
mov
sbb
pop
dec
inc
add
jle
pop
in
in
enter
std
ss
out
jo
mov
adc
add
or
jb
sub
push
std
xor
cmc
insb
pop
cmpsl
ret
fcompl
jle
dec
add
xor
adcl
push
aad
cmpsb
jmp
cmp
test
dec
in
pop
xor
pop
xchg
xor
pusha
mov
add
push
cmpsb
aad
mov
incl
push
inc
cltd
movsb
jo
out
aam
dec
pop
sti
jne
inc
addr16
inc
sbb
fistpll
or
push
inc
fwait
xor
pop
pop
and
jmp
dec
sub
pop
push
xchg
xchg
cmp
out
pop
stc
fadds
fs
shl
sub
xchg
sbb
stos
xchg
jmp
ds
aad
inc
sub
pop
outsb
push
rolb
inc
xchg
outsb
pop
in
loop
stc
mov
mov
insl
jge
or
mov
cmp
pop
cmp
fisubrs
push
nop
dec
sub
mov
jge
iret
das
test
stc
test
jo
shrb
cmpsl
push
or
lcall
aas
int
int3
stos
lods
rol
sbb
std
jne
int
and
cmpsl
push
mov
testb
fmull
mov
loope
or
subb
ret
mov
pop
adc
cmc
enter
aad
fidivs
push
mov
jbe
mov
imul
in
out
push
dec
mov
xchg
pop
dec
popa
aas
cmova
dec
clc
and
push
notb
add
sahf
popa
call
orl
jbe,pt
scas
fnstcw
fildl
fmuls
cs
jne
loop
rcrl
inc
pop
scas
ja
ss
imul
fxch
pop
cmpsb
mov
xchg
cmc
add
mov
icebp
sub
cmp
imul
cmp
xchg
lret
test
mov
mov
insb
jg
inc
daa
jbe
ret
pop
mov
std
or
dec
sti
sbb
scas
fs
xlat
add
lock
mov
adc
jne
in
adc
xchg
call
bound
xchg
xchg
cli
test
xchg
lea
into
cld
mov
daa
popf
lods
xor
push
cs
fnstcw
movsb
vmovaps
sti
xor
repz
test
mov
in
shlb
mov
cwtl
xchg
xchg
fwait
push
jne
clc
inc
mov
pop
xor
pop
lea
cmpsl
add
add
pop
js
cld
sub
pushf
push
insl
out
dec
leave
divb
stos
pop
lahf
jae
out
sti
enter
adc
lcall
ficomps
movsl
jmp
pop
push
fidivrs
in
push
sahf
pop
adc
push
push
adc
divb
and
push
scas
adc
scas
setg
push
lods
fiadds
cwtl
in
js
ja
out
pushf
lahf
outsb
dec
sbb
test
dec
mov
mov
lret
insl
lcall
xor
xchg
dec
dec
add
add
xor
add
data16
add
dec
cmpl
mov
nop
scas
outsl
mov
inc
sarb
mov
xchg
mov
xchg
inc
mov
jle
push
pop
or
xchg
outsb
mov
cltd
dec
and
push
cwtl
pop
aam
cmp
outsl
shrb
pusha
js
xchg
addr16
test
in
and
sub
popa
insl
lret
popa
cmp
sarb
pop
mov
in
in
shlb
mov
call
adc
push
rorl
stos
sub
out
sub
sti
add
out
call
inc
arpl
fwait
ss
jmp
aam
test
mov
fs
cwtl
jb
jl
out
jge
jmp
mov
xchg
cmp
ficoms
and
add
push
xchg
mov
mov
sub
pop
xchg
sub
xlat
dec
ret
xlat
outsl
xor
cmpl
push
and
mov
push
mov
cs
sub
pushf
aad
cmp
std
clc
iret
dec
push
cmp
cwtl
jge
jo
inc
or
jl
xor
xor
mov
int
fdivrl
movsb
icebp
aas
mov
mov
in
repz
push
lahf
inc
pop
dec
sbb
enter
cs
mov
daa
dec
in
inc
xor
inc
rcll
mov
cmp
mov
ds
call
jmp
dec
lds
loopne
loopne
mov
and
sbb
cmpsb
mov
or
lret
insb
inc
hlt
mov
inc
arpl
fldl
push
pop
int3
inc
pushl
mov
cld
xor
popf
add
xchg
mov
xor
mov
ret
int
fsubl
andb
sub
movsl
out
xchg
inc
cmpsb
inc
je
xchg
sbbb
cltd
mov
add
xorb
js
stos
stos
pop
add
xor
jns
and
pop
das
adc
rorl
and
pop
and
repnz
stc
mov
in
lret
cmp
nop
fimuls
cmp
add
push
test
jno
shrl
xorl
int3
arpl
sbb
xchg
sub
aam
dec
xor
jecxz
outsl
jge
inc
sub
adc
push
push
scas
dec
xchg
ss
xchg
lcall
adc
lea
push
push
xor
inc
lahf
scas
dec
mov
add
dec
mov
dec
addr16
fdivs
repnz
daa
inc
test
mov
fwait
mov
ret
inc
ret
jnp
push
sbb
fnsetpm(287
fisubs
pop
inc
test
add
mov
pop
cmp
rcrb
cli
inc
ret
imul
sbb
xor
outsb
out
sbb
pop
bound
rcpps
push
add
jae
adcb
xor
adc
into
loopne
mul
add
mov
scas
and
cli
jl
imulb
jb
jl
pop
imul
push
fdivrs
inc
insl
fisttpll
jns
ljmp
fnstenv
btc
movsl
loope
in
nop
cmp
loope
scas
pop
mov
dec
scas
fs
sub
or
mov
add
shl
push
jle
mov
mov
mov
fwait
add
cmp
in
inc
imul
cmpsb
jb
push
and
cltd
sub
in
loop
dec
mov
dec
cmp
mov
stos
dec
push
daa
stos
cmp
stc
rcr
jno
sahf
mov
xchg
mov
in
adc
xorb
arpl
fcoml
lods
push
inc
inc
mov
mov
imul
aam
jge
cmp
pop
dec
xchg
dec
mov
sub
xor
jb
sub
pushf
add
or
lods
adc
push
fisttpl
addl
fistpll
lods
andl
enter
test
outsl
dec
inc
rcll
sub
stos
sub
and
xor
das
hlt
xor
aas
push
mov
jmp
sarb
rclb
inc
lcall
xor
lods
xlat
mov
aaa
sbb
or
sbbb
sbb
pop
sub
test
pop
or
icebp
mov
xlat
push
lock
stos
dec
adc
mov
cli
lock
inc
cmp
stc
mov
dec
and
lret
inc
test
imul
push
xchg
jne
test
cwtl
and
mov
inc
fwait
sahf
ja
push
pop
outsb
mov
adc
or
xchg
mov
adc
inc
out
sbb
cmp
cltd
add
and
leave
cmp
cltd
or
subl
sbb
in
fdivl
out
fmuls
push
mov
fsts
jb
push
push
dec
ja
testb
mov
rcl
cld
and
cs
ficompl
ja
stc
mov
lcall
cmp
fnsave
mov
jbe
xchg
and
inc
xor
les
lods
mov
adc
inc
fiaddl
push
cmc
sbb
fildl
popa
fsubrl
sarl
mov
pop
sub
jbe
notl
out
dec
pop
mov
imul
sbb
popf
cs
lret
repnz
mov
lods
cli
dec
push
ret
cltd
negb
mov
cli
push
outsb
xchg
jnp
call
aaa
cmc
int3
sub
cmp
loop
fprem
in
push
aam
dec
sub
sbb
jns
mov
or
pop
inc
mov
fbld
fwait
lcall
cwtl
cmc
pop
add
out
push
das
dec
inc
pop
add
gs
outsl
mov
sub
test
loope
bound
mov
or
nop
or
ds
jmp
add
sbb
push
sbb
ret
or
xor
pop
mov
sbb
push
jecxz
stc
insl
mov
sbb
and
sbb
aaa
mov
daa
or
in
mov
cmp
aaa
scas
mov
adc
mov
or
mov
xlat
jl
xlat
mov
mov
lret
pop
inc
js
lea
add
movsl
loopne
jmp
jp
jg
fcoml
mov
in
mov
movsl
pushf
xor
inc
rcll
dec
sub
das
push
adc
mov
jecxz
mov
mov
jge
inc
mov
lock
pop
cmp
testb
test
je
sahf
aad
cs
fwait
xchg
fcmovnbe
inc
stc
sub
cmpsl
sub
rcrl
jne
sbb
insl
ss
cmpsb
scas
mov
lods
in
inc
sbb
add
dec
test
xchg
in
jecxz
mov
out
jnp
pop
orb
in
mov
and
pop
dec
or
divl
cmpsl
xchg
dec
js
inc
fs
lds
dec
into
sahf
add
dec
sub
scas
popf
jne
mov
int3
insl
or
jno
cwtl
dec
shl
js
or
aam
jmp
aam
mov
mov
jmp
pop
jmp
sbb
mov
clc
lret
pop
or
enter
iret
adc
xor
mov
aad
in
and
xchg
pop
mov
and
addr16
push
arpl
jecxz
push
std
ds
cmp
inc
inc
and
fdivrl
icebp
adc
stos
mov
into
jne
insb
cmp
inc
clc
dec
xlat
dec
xchg
inc
mov
pushf
add
push
inc
adc
icebp
fmul
mov
adc
jecxz
daa
adc
or
and
fidivrs
cmp
gs
lea
out
jbe
xchg
loope
cmp
push
aaa
addr16
je
outsl
leave
jno
add
mov
repnz
adc
cld
pop
je
movsb
rol
ja
jl
push
cmc
pop
jo
dec
xor
cmp
jmp
ljmp
cmp
dec
jns
push
and
xchg
and
lock
or
inc
sbb
cmp
iret
lret
nop
aam
push
or
xchg
in
sub
pop
bnd
mov
xchg
xchg
testb
repnz
adc
add
xor
adc
fcmovb
sub
sbb
sbbl
mov
stos
bound
jmp
adc
sub
mov
bound
push
je
xor
fildll
into
shll
and
inc
add
mov
ljmp
jbe
pop
adc
mov
insb
das
adc
pop
and
jb
call
mov
add
lods
mov
div
cs
js
fs
cmc
mov
jg
sbb
test
jp
jg
cli
lret
mov
les
lcall
shlb
inc
cmp
jbe
pushf
data16
mov
lcall
mov
xchg
mov
mov
or
xchg
lea
mov
cmp
xor
pushf
ja
lock
push
adc
sti
pop
dec
jmp
stos
xchg
sub
rolb
inc
mov
push
pop
movsl
pop
filds
enter
lea
add
sbb
jnp
add
pop
push
jns
sub
dec
add
dec
sahf
dec
xchg
mov
in
jp
es
mov
add
dec
push
leave
filds
icebp
pop
test
cs
push
clc
icebp
push
mov
fwait
aaa
lret
mov
in
or
les
cmp
push
adc
jbe
push
fwait
mov
mov
jmp
pop
push
pop
pop
cmp
cltd
in
ror
les
inc
inc
in
cmpsb
xor
jne
lahf
xor
pop
xor
nop
push
jecxz
or
pusha
sti
add
mov
sub
add
add
push
mov
outsb
jo
sbb
adc
cs
loopne
fscale
jns
clc
mull
cld
pop
in
sbb
jge
out
dec
iretw
mov
cmp
mov
in
dec
movswl
add
scas
and
cs
mov
pushf
xchg
push
cmp
ja
aaa
mov
mov
dec
sub
stc
stc
popa
setb
jo
add
push
sbb
repnz
inc
orl
lahf
nop
push
in
push
xchg
add
xchg
call
icebp
pop
bound
pop
imul
mov
lcall
jmp
daa
orl
mov
imul
ljmp
out
mov
jnp
je
lret
out
popf
fmuls
cmp
xchg
ret
sub
sbb
adc
xor
daa
xchg
dec
xchg
repz
mov
subb
xchg
cltd
in
out
pop
lret
and
outsl
sbb
xor
cld
jge
mov
mov
inc
mov
sti
rcrl
cmp
add
sub
rorl
adc
inc
push
popa
test
shrl
aaa
inc
lock
addr16
shrb
jo
dec
cmp
out
add
mov
adc
stos
pop
outsb
cmp
outsl
xorb
aas
enter
lea
adc
xchg
mov
mov
mov
dec
mov
das
sti
xor
push
mov
push
xchg
inc
hlt
and
js
stc
pop
je
stos
or
mov
ret
adc
push
iret
nop
push
jmp
cltd
push
and
mov
dec
add
push
inc
push
xor
sti
popf
mov
outsl
pop
jbe
orl
ret
dec
andl
adc
xor
xor
mul
adc
adc
jno,pn
int3
std
jb
add
add
or
mov
inc
adc
fdivrs
mov
xchg
ja
test
aam
xor
mov
sbb
jne
add
inc
dec
test
add
mov
stos
sub
mov
dec
add
mov
add
jae
scas
aam
nop
loope
xchg
cmpsl
fcomp
loope
imulb
or
add
sub
cltd
sbb
xor
and
mov
adcb
xchg
xchg
jmp
iret
cmp
lods
lret
outsl
cmpsb
mov
repz
fmul
les
inc
clc
cmpsl
mov
in
adc
out
mov
mov
cmp
add
add
lret
lcall
push
sbb
pop
cwtl
push
test
mov
mov
popa
es
test
push
pusha
sub
xor
roll
dec
lock
mov
dec
into
pop
sub
dec
add
andb
repz
test
or
mov
aam
inc
xor
ljmp
fcoms
sub
test
js
lahf
mull
xchg
lea
rcl
repnz
sub
mov
xchg
cmp
mov
add
and
out
lahf
xor
and
adc
ret
mov
mov
dec
movsl
jae
aas
mov
adc
mov
add
movsb
sub
daa
jmp
cmp
jecxz
mov
pop
bound
cmp
hlt
xor
pusha
mov
ljmp
jmp
sub
dec
xor
fwait
pop
sbb
sbb
je
lods
dec
jae
sbb
push
add
dec
jmp
icebp
xchg
dec
mov
dec
in
pushf
mov
pop
test
pop
cmp
sbb
negb
pop
sub
insb
xor
mov
xchg
fwait
pop
push
adc
mov
daa
mov
xor
dec
jp
imul
cwtl
sub
jne
mov
nop
dec
push
mov
lret
bound
sbb
or
je
loop
mov
shll
adc
mov
add
sbbb
shr
gs
stos
or
lea
pop
or
lods
lahf
das
rcr
adc
jno
cli
sub
int
and
push
xchg
std
js
ljmp
mov
and
cmp
out
mov
sbb
sbb
testl
jno
mov
jl
xor
mov
push
sarb
pushf
xchg
jne
xchg
xchg
enter
rorb
mov
xchg
dec
xor
mov
stc
dec
jge
pop
pop
xchg
push
push
adc
jp
movsb
ret
xchg
hlt
mov
adc
sbb
lea
sbb
gs
mov
dec
push
ljmp
into
aaa
push
mov
pop
adc
cmp
ljmp
fnstenv
inc
fcomps
or
or
test
lret
cwtl
jmp
stc
cmc
xchg
dec
es
adc
repz
nop
sbb
stos
pop
outsb
mov
xor
out
dec
into
dec
outsl
pop
aad
mov
xor
adc
cld
out
pop
push
andb
inc
icebp
roll
insb
mov
sub
mov
outsl
jmp
mov
or
popf
add
pop
xrelease
ja
into
ds
int
mov
adc
lret
dec
iret
mov
int3
jge
add
mov
stos
push
xchg
sbb
scas
dec
or
out
or
sub
out
mov
mov
pop
jnp
jns
aad
or
test
cmpsb
adc
cmp
jo
jp
mov
lcall
push
and
adc
xor
leave
mov
mov
insl
jnp
sub
mov
mov
sbb
sub
leave
mov
call
mov
mov
adc
scas
lds
mov
inc
psrad
outsb
xor
jg
inc
mov
xchg
inc
and
cmp
push
sti
imul
mov
mov
inc
imul
arpl
jne
sub
popf
mov
pop
or
stc
scas
test
mov
push
outsb
xor
aas
fcoms
filds
jo
fldcw
jg
pop
ljmp
sarl
sti
jge
pop
push
add
push
pop
ret
cmp
test
fdiv
outsl
dec
clc
cld
push
int3
dec
adc
pop
xchg
mov
std
xchg
mov
or
adc
mov
es
cmp
test
add
rclb
enter
shrl
mov
jne
push
xor
shrb
xor
repnz
pop
sub
ljmp
mov
in
test
mov
jbe
xchg
iret
cmpsb
fs
mov
fsts
pop
sbb
push
cmp
mov
xchg
mov
pop
sub
push
cmp
jg
jbe
xchg
clc
test
xchg
jbe
add
push
sbb
lcall
and
fisubl
inc
and
xchg
mov
lods
jno
xor
adc
subl
pop
xchg
mov
insl
sub
xchg
or
loop
lahf
add
jle
lcall
adc
faddp
and
popf
mull
sbb
add
js
out
mov
lods
cs
cmc
cmp
bound
cs
addr16
lea
and
add
push
cltd
aas
push
xchg
jecxz
call
cmp
mov
mov
popf
fsubrl
out
aaa
jmp
inc
out
in
cltd
aas
mov
rcl
or
lock
mov
ja
mov
mov
fwait
jl
mull
mov
mov
pop
in
xchg
call
loop
add
popf
and
mov
add
adc
pop
jecxz
jbe
in
aas
xor
push
inc
stc
mov
mov
inc
xchg
loopne
out
mov
dec
cmp
pop
sbbl
rclb
add
and
ljmp
outsb
fsubs
jle
jne
push
mov
fucompp
mov
lods
xchg
pusha
addr16
mov
cmp
cmp
adc
test
lret
sbb
into
movsb
push
sub
sub
cld
mov
in
jp
leave
adc
push
mov
mov
andl
je
imul
in
adc
sub
lods
frstor
sbb
ret
pushf
aad
sbb
std
fwait
lret
outsl
and
imul
pop
push
pop
jle
pop
pop
jl
sar
dec
sbb
daa
push
push
jae
xchg
leave
jge
in
aam
mov
inc
mov
xor
push
or
sbb
lea
sub
or
jnp
xchg
insl
mov
jae
fnsave
pop
dec
pop
out
adc
xor
mov
test
movsl
inc
out
es
jno
mov
jmp
ret
mov
sub
add
pop
xchg
fucom
shl
mov
xchg
mov
adc
push
mov
pop
loop
mov
aas
test
mov
mov
inc
sti
lret
mov
pop
imul
or
cmp
sub
out
and
jg
mov
sbb
out
add
in
hlt
std
sub
mov
shlb
mov
cmpsb
sti
or
out
and
sbb
jp
dec
xchg
shll
mov
lea
notb
mov
pop
mov
mov
test
pushf
xchg
adc
mov
pushf
mov
lcall
push
cld
daa
add
push
js
pop
inc
adc
xchg
or
inc
jmp
es
cwtl
loopne
inc
mov
roll
cli
call
sub
adc
push
test
xchg
inc
in
mov
addr16
inc
xchg
cmp
jp
xchg
lods
adc
xchg
arpl
sahf
popa
mov
push
std
sahf
lret
out
jbe
lea
loope
and
test
fcompl
cmpl
js
adc
push
mov
cmp
xchg
or
cmc
sbb
jbe
clc
fcoms
sub
dec
out
pop
jbe
cli
aam
push
clc
icebp
fs
dec
mov
sbb
mov
popf
sbb
xchg
popf
fwait
lock
rol
mov
add
call
es
cmp
jp
sbb
mov
loop
pop
pop
imul
mov
cmc
xchg
popf
or
dec
mov
cs
pushl
adc
push
mull
sahf
mov
gs
js
mov
lds
add
jns
das
adc
les
daa
jmp
fnstsw
mov
pop
xchg
into
xchg
jmp
enter
pop
movsb
gs
lcall
xor
out
fnstsw
xor
mov
imul
add
stc
data16
test
fnsave
fdivrs
sbb
jecxz
not
mov
repz
sbb
imul
flds
aas
loop
push
cmpsl
imul
lcall
dec
inc
or
xor
and
jle
setg
shlb
mov
xchg
pop
insl
fs
fadds
movups
xor
mov
mov
sarb
call
push
sbb
xor
cmp
jle
inc
scas
sarb
mov
fmul
mov
int
rorb
int
mov
pop
pop
aad
dec
cs
xchg
subl
xchg
scas
test
push
addr16
sbb
dec
scas
test
sbb
dec
mov
push
xchg
popa
pop
xor
jno
jnp
cmpsl
adc
xlat
jecxz
bound
pop
mov
dec
pop
repnz
sbb
add
jecxz
scas
aam
or
popa
add
xlat
xchg
std
sbb
in
outsl
sbb
xor
decl
jle
sbb
addr16
call
test
jb
je
repz
cmp
data16
nop
insl
jmp
mov
lret
dec
icebp
les
cmp
sub
mov
adc
aaa
ret
sub
mov
outsl
scas
sbb
jne
dec
push
std
mov
cwtl
hlt
push
cmp
add
mov
cld
jle
ja
imul
sarb
cmp
or
out
add
clc
movsb
insl
sub
add
rclb
test
jae
rorl
pop
arpl
adc
loop
in
mov
inc
dec
sub
daa
int
pushf
xchg
push
add
incb
dec
jl
test
mov
shll
lock
add
sbb
add
sbb
add
sbb
add
sbb
add
or
pop
sbb
add
or
mov
or
cwtl
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
add
add
incl
add
add
imul
incl
add
add
add
add
incl
add
add
insl
dec
add
add
add
incl
add
add
add
add
incl
add
add
orb
add
add
orb
incl
add
add
add
add
incl
add
add
mov
add
add
incl
add
add
lea
add
add
incl
add
add
mov
add
add
lcall
add
dec
add
add
add
dec
add
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
ljmp
lahf
dec
add
lahf
dec
add
ljmp
dec
add
dec
add
incl
add
add
test
add
and
dec
add
incl
add
add
add
call
lods
dec
add
cmp
lods
cmp
mov
pushl
dec
add
mov
add
incl
add
add
mov
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
incl
add
add
add
add
incl
add
add
rorb
add
add
decl
les
pinsrw
add
add
call
dec
add
dec
add
call
dec
add
dec
add
xor
dec
add
dec
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
lret
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
int
add
add
add
incl
add
add
into
dec
add
add
add
incl
add
add
rorl
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
push
rorl
clc
rorl
pushl
dec
add
aam
add
sti
aam
add
aam
add
decl
aad
add
aad
add
pushl
aad
add
incl
add
dec
add
ljmp
dec
add
dec
add
jge
dec
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
fisttpll
jmp
daa
dec
add
dec
add
call
daa
dec
add
daa
dec
add
decl
dec
add
add
add
add
add
inc
sbb
add
adc
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
pop
sbb
add
or
mov
or
cwtl
sbb
add
sbb
add
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
bnd
dec
jp
lret
dec
lahf
pusha
jl
add
xor
push
push
xor
lods
inc
adc
add
adc
push
or
xlat
sbb
jae
dec
movsl
jno
jbe
jne
mov
out
jns
js
and
loope
inc
pop
out
call
push
out
push
dec
mov
pop
jae
jl
jne
or
insb
xor
push
sbb
in
and
in
aaa
push
or
aam
mov
sahf
cs
lahf
or
xlat
sbb
imul
hlt
push
dec
xor
out
cmp
scas
shrb
aad
cmp
out
add
nop
repnz
cmc
mov
adc
shrl
mov
scas
cmc
pop
repnz
mov
or
xchg
sbb
test
imul
or
mov
data16
xchg
aas
es
push
push
push
mov
into
jb
inc
out
int
and
jno
loopne
ja
pop
scas
das
and
mov
cli
pop
pop
outsb
stos
adc
pop
in
cmc
push
mov
iret
test
push
jo
jnp
ret
mov
scas
iret
sub
sahf
xor
sbb
add
cmpsl
mov
push
in
adcl
push
mov
gs
or
out
pop
cmc
fwait
inc
das
sbb
sub
sbb
cmp
ja
lds
add
cld
movsb
shlb
mov
cli
jl
outsb
pushf
push
scas
or
leave
rcrb
test
pop
ss
imul
mov
jmp
sbb
cmp
mov
jmp
jmp
repnz
adc
xchg
js
or
or
sbb
mov
and
xlat
dec
insb
ja
sti
and
shll
loopne,pn
sbb
cltd
outsl
or
xor
sub
in
js
rcrl
out
cmc
fcoml
xchg
movsl
sarb
aad
loopne
jge
cmp
or
jmp
push
loopne
jo
xor
dec
or
loop
push
pop
in
push
sahf
and
insb
leave
daa
mov
adc
dec
subb
sbb
movsl
cmp
scas
cmp
mov
insb
mov
sub
icebp
xchg
sub
popf
adc
ss
scas
cmpsl
mov
ljmp
push
dec
pusha
add
fs
aas
sub
pop
testl
xor
std
mov
add
push
or
les
jge
add
popa
push
add
and
jns
mov
inc
jl
aas
lahf
rorl
mov
dec
xchg
cmc
scas
scas
sbb
xor
jg
jo
hlt
xor
pop
movsb
daa
xor
xchg
scas
fsubr
iret
pusha
ds
scas
xchg
leave
inc
nop
call
jae
jno
adc
dec
je
xor
fadd
data16
iret
sbb
shll
cmp
out
cmc
push
arpl
es
dec
ss
cmp
movsl
int3
ja
outsb
cli
and
in
loopne
imul
dec
cmp
jcxz
dec
insl
inc
fdecstp
sbb
bnd
clc
in
ds
fbstp
imul
fsubl
push
pop
notb
cmp
mov
push
js
xor
leave
sbb
xor
fstpl
not
sub
outsb
push
lahf
pop
rorl
push
or
jo
in
push
out
icebp
adc
mov
add
inc
pusha
dec
popa
loopne
bound
aam
inc
sub
shrb
popf
mov
jp
cltd
push
add
inc
inc
push
push
test
shlb
xchg
mov
loopne
test
inc
mov
test
cwtl
mov
xor
js
cld
dec
push
xor
int3
lahf
add
mov
xchg
mov
pusha
mulb
fwait
stos
dec
imul
dec
and
dec
fsubrs
inc
push
lds
adc
mov
jl
sub
cmp
out
adc
das
push
lea
scas
pop
cli
adc
push
ds
push
sbb
fdivrs
xor
fs
sbb
mov
orb
sbb
sub
shll
cmpsb
je
mov
jg
or
sub
and
mov
add
cltd
xor
inc
jnp
sub
rolb
in
icebp
dec
mov
lahf
fwait
jae
pop
loop
push
pop
ret
jnp
je
rep
popa
in
sti
adc
push
movsb
inc
xor
pop
sub
testb
fs
ds
test
lcall
xor
scas
or
call
loopne
fdivrl
mov
push
notb
or
nop
adc
sbb
xor
insb
daa
push
dec
mov
push
mov
in
mov
test
mov
call
mov
mov
pop
dec
mov
cmpsb
xchg
cmp
pop
inc
cwtl
outsb
dec
leave
mov
aas
mov
mov
inc
xchg
shll
inc
nop
push
mov
add
adc
insl
cmp
add
xor
ficoms
mov
lods
push
pusha
pop
in
dec
dec
jge
pop
mov
jae,pt
es
dec
stc
sub
dec
aaa
xchg
add
in
xlat
fcomps
in
pop
je
out
pushf
hlt
pop
fsubrl
lods
ds
mov
das
ljmp
jo
out
dec
frstor
aaa
dec
ss
inc
mov
jl
dec
into
cmp
rcrb
lret
jmp
pusha
decl
mov
push
daa
push
es
push
shrb
mov
adc
into
xchg
and
lea
test
pop
xor
and
xor
bnd
pop
mov
pop
jno,pn
adc
sbb
sub
movsb
shlb
adc
fistpl
mov
add
clc
mov
add
sub
inc
jb
xor
mov
arpl
ss
lcall
mov
lahf
mov
jns
int
xchg
popa
jmp
sar
cmp
or
xor
call
add
mov
sahf
cs
push
sahf
mov
es
and
jo
test
enter
mov
mov
dec
sub
int
add
int3
icebp
dec
mov
dec
jmp
ret
adc
cmp
push
add
in
popf
dec
stc
lret
cld
adc
push
out
mov
inc
or
imul
movsl
pop
mov
outsl
pusha
add
imul
xor
jne
inc
sarl
adc
jmp
inc
push
sub
xor
or
lock
mov
les
loop
test
insb
or
mov
fldt
xor
mov
xchg
dec
jl
aas
pop
or
push
mov
push
adc
jle
sbbb
and
add
bound
addr16
inc
cmc
sbb
sub
mov
inc
movsb
pop
in
repz
pop
sub
movsl
jmp
div
mov
push
add
lock
fsubl
fidivl
aaa
push
push
jge
jg
loopne
imul
cmp
and
mov
cld
or
mov
xor
in
ret
xlat
jo
add
out
push
daa
lahf
jge
insb
mov
sahf
sti
cmp
pop
das
inc
imul
nop/reserved
sub
rcll
add
adc
es
jb
pop
std
pop
mov
inc
cmp
push
stc
mov
shr
push
inc
add
pop
inc
aam
xor
jne
inc
into
dec
stos
cmpps
gs
je
iret
clc
imul
mov
es
dec
shll
adc
mov
insl
in
shrb
add
lret
scas
xchg
inc
mov
dec
xor
cli
inc
scas
push
iret
outsb
div
das
sahf
das
dec
data16
pop
and
test
mov
rcl
add
and
aam
jb
mov
lods
mov
sub
push
sbbb
lods
pop
sbb
add
popa
in
lods
inc
cltd
jg
insb
xor
push
jnp
fs
shrl
scas
mov
pop
lahf
sub
leave
sbb
repz
jecxz
aaa
jo
nop
mov
mov
pushf
aad
test
xor
outsl
test
mov
mov
xlat
in
dec
test
out
or
out
push
push
ret
movsl
decb
push
jne
pusha
and
js
aas
das
lods
adc
mov
xchg
bound
push
inc
pop
movsb
mov
stos
adc
scas
sbb
or
pushw
cmp
mov
pop
fs
xchg
xchg
dec
mov
mov
or
jmp
xor
fisubrl
mov
stos
fwait
mov
lcall
mov
lret
jne
cmpsl
clc
mov
das
ljmp
cmpsl
fsubrp
add
outsb
rorl
mov
stc
push
mov
push
dec
sbb
popf
xlat
xchg
mov
ds
cmp
adc
sub
pop
inc
pusha
fwait
stc
add
mov
rcll
imul
xor
pusha
jbe
mov
nop
xor
out
jmp
iret
stc
dec
cs
enter
mov
data16
mov
lret
ret
cmp
inc
sub
roll
push
mov
lahf
jo
psubd
stos
jbe
fcomps
repnz
mov
imul
cld
push
incb
bound
ss
movsb
pop
int3
test
add
pop
push
rclb
xchg
cmp
jbe
sarb
in
jge
fidivl
fiadds
add
movsl
jl
push
inc
push
lret
cmp
test
ret
jecxz
sbb
movsl
gs
cmp
das
or
ljmp
mov
mov
loopne,pn
fcmovne
pop
lret
dec
dec
sub
push
in
fcomp
sarl
movsl
push
imul
leave
jmp
push
in
and
cmpsb
lods
mov
ja
mov
mov
sub
dec
cltd
leave
dec
jns
dec
add
xor
xchg
stc
adcb
dec
or
jnp
jl
push
xchg
sbb
or
mov
imull
hlt
stc
pop
in
ror
push
divl
jns
test
jnp
out
xchg
dec
stos
repz
sub
stos
jne
cmp
jle
lods
adc
or
mov
movsl
faddl
xchg
jge
inc
cltd
std
lret
mov
rcr
idivl
mov
inc
call
add
inc
sub
lahf
je
sahf
mov
and
inc
and
into
jmp
into
cmp
add
sarb
subb
aaa
sub
mov
out
out
lods
jns
inc
dec
scas
jle
cltd
ss
pop
cmpsb
mov
shlb
dec
adc
dec
clc
pop
push
mov
gs
aad
pusha
sub
stos
and
mov
add
lret
xchg
add
std
orb
jl
mov
pop
pop
stc
orl
cmp
sbb
pushl
add
negl
xor
mov
mov
into
or
mov
inc
ficomps
mov
mov
cwtl
idivl
or
jg
dec
push
adc
xchg
and
nop
stos
lcall
repz
mov
xor
push
cli
cmp
in
scas
mov
jne
xor
in
sbb
push
mov
mov
cltd
into
jbe
daa
loopne
sti
or
pop
cmp
fst
add
std
lcall
mov
leave
inc
fwait
xchg
mov
cmp
xor
push
xchg
mov
pop
scas
adc
mov
repz
je
ja
lds
add
mov
mov
mov
mov
out
dec
jb
pop
das
mov
outsl
or
or
push
dec
and
xchg
jle
xchg
das
icebp
cmp
add
cmpb
pop
sub
call
sti
adc
xchg
adc
mov
nop
or
lahf
push
sub
jne
arpl
jb
ja
mov
xchg
jae
fidivs
xlat
dec
or
inc
mov
repnz
cmp
fcomps
stos
mov
push
negb
and
outsb
ret
add
scas
push
fstps
xor
cmp
inc
popf
cli
lret
inc
out
je
cmp
pop
sub
mov
xchg
dec
repz
fwait
sbb
mov
ljmp
jmp
outsl
cmp
dec
in
jp
push
arpl
push
stos
jo
fldenv
add
add
pop
adc
xor
gs
add
cmpsl
stc
fwait
test
cli
in
sti
dec
inc
fistl
sbb
loope
repnz
mov
sahf
frstor
test
movsb
xor
cld
imul
cli
sahf
sub
push
lcall
jns
shlb
sub
sbb
adc
dec
scas
cmp
push
mov
shr
push
adc
adc
cmp
xlat
cld
fcomps
mov
jl
adc
mov
call
loopne
int
push
or
fst
std
sub
outsb
arpl
and
cmpb
or
jae
mov
imul
lea
push
dec
or
adc
jo
mov
test
adc
hlt
scas
sub
dec
fdivr
sub
inc
fbstp
js
daa
addl
iret
push
stc
call
dec
sti
mov
sti
xchg
imul
dec
mov
pop
add
iret
or
jecxz
mov
rol
insb
ss
into
mov
cli
pop
xor
dec
adcl
xor
or
mov
cmp
out
hlt
xchg
inc
mov
pushf
sub
loopne
emms
imul
mov
movsb
jecxz
test
mov
and
mov
call
cli
in
test
xchg
mov
sbb
fidivl
into
test
stos
in
fstpl
ret
jle
xchg
fstpt
lds
inc
xor
aas
push
testl
insb
push
insb
and
test
shrl
sub
outsb
sub
adc
push
dec
mov
xchg
mov
subb
lret
push
clc
test
je
test
rorb
mov
push
sub
pop
or
adc
pop
xor
mov
xor
sub
aas
mov
and
jb
aad
shll
hlt
pushf
pop
iret
iret
sbb
addl
movsl
xchg
orb
dec
dec
jl
fldcw
rorb
xor
cli
movsl
jmp
add
out
jecxz
lret
jp
sbb
sbb
popf
push
xchg
mov
sti
and
and
jmp
lret
rcl
add
jl
out
fldt
imul
stc
enter
es
ret
push
jg
push
pop
sti
sbbl
pop
adc
test
icebp
xchg
mov
add
daa
mov
pop
or
adc
js
or
and
pop
and
lds
mov
adc
mov
sbb
adc
insb
stc
xor
pop
push
stc
stc
in
mov
ror
cmp
out
fsubrs
or
xorl
xchg
subl
sahf
add
jecxz
clc
out
jle
pop
sarl
ret
fidivs
insb
cmp
imul
in
jne
ja
lcall
cmp
sub
add
insb
popf
dec
jne
cmp
mov
popa
call
adc
inc
shl
xchg
mov
xor
pop
inc
icebp
push
adc
loopne
inc
push
outsl
jno
cmpsl
mov
or
adc
cs
push
jns
sub
sub
inc
rorl
mov
push
imul
jae
hlt
mov
popa
idiv
mov
in
and
sbb
gs
lcall
add
pavgw
xchg
xchg
ds
pop
xchg
scas
ja
dec
mov
or
cs
adc
adc
push
cld
cltd
cli
jp,pt
stos
insl
sub
js
sub
adc
pop
add
arpl
cwtl
and
movsl
push
loopne
and
test
sub
imul
jns
pusha
mov
sysexit
sub
iret
pop
loope
cli
addr16
push
imul
rcr
aaa
fwait
mov
scas
dec
in
mov
js
push
sbb
adc
mov
add
mov
icebp
adc
in
pop
cli
test
xchg
fistl
xchg
jle
int3
jge
jns
shlb
sbb
xchg
cli
icebp
sub
lods
pop
inc
adc
test
insl
add
pop
xchg
inc
jge
fsubl
call
xlat
xor
in
stos
and
pop
mov
shrl
dec
mov
imul
xor
mov
mov
xchg
jl
or
aad
jo
jle
mov
sub
dec
adcl
xorl
popa
cli
stos
cld
scas
jae
xor
lods
dec
inc
adc
arpl
push
pop
or
mov
test
dec
jg
and
data16
add
mov
test
repnz
sbb
enter
xlat
jecxz
pop
hlt
sahf
ds
and
sti
movsl
aad
cmp
mov
dec
or
dec
and
lods
fldt
mov
push
lds
cwtl
jns
mov
push
data16
std
punpckhwd
push
inc
push
push
xor
shlb
lods
out
testb
std
loope
xchg
lcall
mov
mov
adc
push
add
cmc
test
out
xor
enter
push
jg
fisttps
leave
orl
ret
sahf
cmc
cmp
adc
xchg
fdivrs
mov
notl
loopne
xchg
jne
push
dec
mov
xchg
xchg
inc
divl
sbb
nop
neg
xchg
pop
jle
mov
mov
mov
cmp
repnz
jg
jbe
testb
call
dec
mov
push
adc
sbb
sbb
and
ret
in
popa
or
pop
mov
sub
push
addr16
bound
inc
inc
inc
int
jg
fidivrl
idivb
das
inc
adc
rorb
jns
add
gs
fmull
std
es
mov
add
scas
jo
mov
outsl
mov
mov
rorl
pushf
xor
jg
cmp
mov
inc
mov
sub
pop
pop
adc
sub
shrl
shlb
aaa
gs
sti
and
jb
ljmp
add
mov
push
imul
mov
cmpsb
sbb
jb
mov
repnz
repz
mov
lods
mov
xchg
notb
lods
clc
mov
mov
movsl
mov
cwtl
push
out
push
jmp
push
jns
push
sbb
not
cs
xchg
inc
aas
sbb
cmp
push
scas
adc
cmpsb
shll
mov
stos
mov
push
lock
loopne
insl
add
ficompl
test
fwait
add
rorb
xchg
xchg
outsl
inc
cltd
lds
stc
in
sub
cmp
sub
push
imul
jb
sarl
jne
pushf
and
out
aam
daa
gs
inc
pusha
xchg
mov
add
test
dec
nop
push
das
subl
clc
loop
fmull
dec
cmp
dec
push
nop
in
ret
popa
mov
stc
popf
adc
ljmp
inc
mov
push
mov
jp
pop
sbb
cmp
and
sbb
aam
inc
cmp
pop
sbb
or
pop
jge
jp
pushf
xchg
mov
lods
es
stos
cmp
xchg
fdivrs
mov
les
inc
jno
jle
mov
add
push
out
and
mov
test
mov
pushf
or
lds
push
adc
shlb
xor
jp
and
aam
repnz
push
loop
jbe
leave
hlt
sbb
cmp
in
movsb
test
aas
stos
inc
fucomip
std
fnstsw
dec
leave
sahf
jl
mov
mov
inc
lret
mov
jne
xchg
and
cs
rolb
scas
jge
ret
into
mov
inc
mov
xchg
add
out
mov
in
push
cld
mov
pop
jecxz
mov
sub
push
cld
lahf
or
fdivl
scas
mov
ja
movl
xchg
push
and
mov
int3
cwtl
outsl
test
push
std
ret
sbb
sbb
fnstenvs
jo
sub
lea
in
sub
imul
inc
push
push
push
mov
dec
and
and
and
xchg
add
inc
shr
fbstp
xchg
inc
jno
enter
xchg
fmulp
in
sub
sbb
sub
scas
xchg
push
test
sahf
xchg
jmp
sti
sub
test
add
jae
int
xor
lret
add
in
xorb
push
pop
cs
mov
insb
sbb
cmp
das
add
push
cmp
into
xor
cmc
inc
nop
sub
ss
push
sti
jno
mov
pop
and
cmp
in
xchg
ret
addr16
jge
rorl
int
dec
push
mov
inc
pop
arpl
cwtl
xchg
iret
or
push
pop
mov
xor
movsb
inc
imul
push
inc
leave
pop
or
mov
and
xor
pop
hlt
out
mov
imul
clc
repnz
add
mov
push
add
fbstp
pushf
in
icebp
aas
or
call
adc
popf
jno
push
inc
insl
mov
pop
adc
add
inc
pop
push
xchg
and
pop
mov
sub
adc
scas
pop
and
jp
add
jle
adc
test
cmp
pop
aaa
lcall
xchg
push
push
push
inc
and
aam
push
and
sbb
add
dec
sbb
mov
stos
lock
lods
icebp
imul
cmpsl
in
stc
inc
cmp
ja
sub
filds
push
xor
in
mov
mov
mov
xor
pop
popa
insl
mov
inc
jnp
clc
jl
add
and
subl
push
mov
mov
jmp
jae
push
in
jecxz
ljmp
cmc
fucomi
leave
adc
popf
imul
out
mov
int
lods
adcl
into
lds
rcl
mov
je,pt
cs
mov
dec
sbb
jnp
mov
and
and
push
add
xlat
cmp
cwtl
xorb
mov
out
xchg
pop
xchg
sub
in
add
cmp
push
sbb
fstsw
or
push
pop
mov
sub
and
jg
cli
pop
adc
cmc
loope
lock
clc
pop
inc
cmp
leave
jbe
inc
add
lock
loopne
.byte
