push
call
ret
ret
outsb
jb,pt
aad
sti
add
ss
pop
nop
add
add
or
push
cmp
push
mov
insb
in
push
sub
cmp
sbb
mov
das
aas
fstpl
pop
cltd
daa
mov
dec
addr16
jns
jne
in
jb
mov
popa
or
mov
incl
clc
or
outsb
xchg
adc
adc
adc
mov
insb
inc
jp
adcl
xchg
push
inc
gs
js
insb
mov
sbb
cmp
lcall
xchg
mov
add
and
scas
movsb
ss
test
and
pop
jns
insl
mov
jg
adc
xor
popa
jmp
pop
jno
push
xchg
aas
fiadds
xchg
enter
cmp
aad
and
test
dec
mov
jg
enter
sti
lods
fbld
imul
inc
mov
pop
jl
call
sub
aas
push
dec
push
pop
or
aam
test
mov
push
or
mov
cmp
in
pop
pusha
mov
xchg
pop
pop
jns
adc
xor
xor
mov
test
adcl
int
lods
inc
icebp
insl
fs
iret
lods
daa
inc
jae
fstps
clc
mov
ret
insl
xor
repz
xchg
cmpsb
dec
mov
mov
rclb
cltd
pop
fmul
pushw
cli
mov
xchg
mov
rcll
push
cmp
mov
adc
insl
inc
push
test
test
cmpb
pusha
cs
fildl
nop
xor
xlat
sbb
dec
and
mov
jle
movsb
dec
call
jge
lret
jae
add
scas
xchg
pushf
lcall
adc
lahf
mov
mov
mov
mov
inc
mov
pop
mov
lds
lahf
xchg
cmp
dec
js
xor
add
sbb
loope
mov
in
cld
testb
fildll
sbb
mov
mov
jbe
mov
jbe
ds
and
xchg
lods
arpl
pop
pop
push
fwait
sbb
jne
sub
mov
js
lret
push
xchg
mov
js
ret
roll
lcall
xchg
mov
stc
xchg
xchg
inc
faddl
push
lret
sub
and
pop
jns
scas
rcl
sti
out
or
jl
xchg
sbb
xor
cli
mulb
push
pop
xchg
fwait
mov
and
push
pusha
mov
stc
loope
sub
push
or
add
jge
xchg
rcr
cmc
rol
push
gs
sbb
subl
cmp
movsb
pop
hlt
xor
in
jo
sbb
jmp
mov
lret
test
rcll
daa
add
test
sbb
sti
mov
pop
mov
sbb
mov
in
sub
ror
jge
cltd
jle
lock
jno
aas
ja
xchg
rclb
dec
cmp
add
iret
lret
mov
pop
mov
in
repnz
jmp
xlat
pop
mov
orl
cmp
jecxz
jle
js
fs
add
push
or
adc
imul
push
mov
cvtdq2ps
aas
enter
add
cmp
stos
setp
pop
push
pop
std
jb
pop
and
neg
dec
in
jl
aaa
out
adc
aas
arpl
sub
xor
arpl
jecxz
loopnew
fldcw
notl
dec
cmp
repz
inc
lcall
dec
in
and
pop
push
shlb
lret
pop
loop
sbb
clc
das
in
cmp
movsl
insl
xor
cmpsl
hlt
adc
test
ds
popf
mov
xor
jmp
fwait
arpl
pop
fucomi
sbb
scas
mov
into
push
fadds
push
mov
ja
jg
inc
rcl
mov
cmc
jle
je
inc
inc
push
inc
or
cmp
mov
idivb
bound
mov
add
aad
arpl
cld
imul
pop
leave
push
out
loope
push
xchg
push
lods
mov
mulb
and
xor
shl
in
sbb
mov
imul
lock
addl
ljmp
push
xchg
adc
mov
push
xor
lret
ret
addr16
or
mov
dec
xchg
add
pop
ja
je
mov
fs
xchg
push
and
movsl
pop
inc
mov
sbb
repnz
sub
insb
mov
sbb
mov
mov
lods
sbb
ret
popf
xor
scas
popa
rorb
dec
or
sbb
addr16
shlb
push
inc
stc
rcll
aad
cmp
mov
cli
lret
cmpl
sbb
push
xor
pop
and
out
fistpll
inc
iret
rorl
dec
dec
outsb
mov
pop
stos
fwait
sub
dec
cmp
sarb
adc
mov
jne
lock
jmp
movsb
mov
mov
jne
pusha
mov
hlt
outsb
loopne
adc
xor
push
mov
add
ljmp
call
hlt
sbb
cld
jno
pop
lods
mov
cwtl
in
aad
sti
pusha
decb
jae
es
dec
ret
jnp
aad
and
sahf
push
roll
pop
mov
pop
sarb
xchg
lods
xor
pop
movsb
aaa
mov
or
add
scas
or
mov
mov
nop
pop
dec
jo
adc
cwtl
push
je
lods
xchg
shll
push
and
std
roll
loop
loop
cmpl
adc
fsubrl
push
movsl
scas
fdivrl
aad
pop
and
pop
daa
cmp
mov
aam
cmp
xchg
mov
pop
xor
adc
cmp
inc
jno
push
clc
call
xlat
pop
std
call
mov
xchg
inc
jg
lret
xchg
stc
mov
sbb
pop
popf
aam
or
adc
push
mov
jne
sbb
inc
sbb
and
dec
bound
adc
jo
jge
les
aaa
pop
addl
out
mov
jl
and
cwtl
jmp
adc
mov
mov
push
xchg
mov
sbb
cmp
add
lock
les
insb
fcomip
mov
clc
add
movsb
push
in
stc
mov
aam
cld
imul
jmp
sub
cmp
adc
fbstp
loope
xlat
xchg
out
lods
movsb
pop
loope
adc
fistps
les
nop
stc
leave
jp
mov
dec
dec
aam
in
sti
pop
lods
mov
adc
stc
and
mov
jge
nop
xor
xor
sub
inc
push
clc
repz
mov
and
or
dec
xchg
out
jnp
pop
or
cmpsl
in
or
xor
mov
repnz
add
xchg
xor
sbb
xlat
jo
xchg
test
or
lcall
inc
stos
mov
jns
sti
popf
shrb
movsl
mov
in
pop
ja
sub
jecxz
or
mov
sub
pop
movsl
daa
repnz
outsl
sbb
sti
xchg
push
nop
flds
fs
aas
and
mov
push
rcr
mov
mov
sub
mov
mov
mov
ljmp
xchg
xor
outsb
loope
jg
mov
jl
mov
xchg
mov
jmp
jno
out
lcall
mov
sbb
add
aad
out
push
lea
push
push
pusha
mov
das
adc
xchg
mov
pop
jl
data16
jno
fwait
ds
adc
into
dec
mov
pop
mov
js
lods
out
add
sahf
sbb
add
int3
adc
push
negl
cvtps2pi
leave
xchg
ljmp
xor
push
sahf
xor
cmp
mov
push
cmp
ja
pusha
dec
xchg
and
push
pop
cmp
roll
xchg
add
or
jmp
push
cmc
gs
shll
sar
lods
pop
pop
dec
fsubrl
test
enter
nop
fwait
cmp
cmpsl
xchg
aaa
push
xchg
inc
pop
lret
push
push
sub
loope
cvtps2pd
imull
sbb
fbstp
sbb
xor
insl
xor
inc
lds
xchg
adc
mov
inc
in
mov
lods
adc
daa
sbb
pop
mov
cmp
push
pop
in
inc
mov
mov
fcompl
enter
icebp
fisubrs
gs
adc
mov
mov
xor
movsl
int
inc
or
or
xor
jbe
jmp
xor
negl
jmp
jl
lret
cs
dec
push
cmp
push
into
lahf
lea
mov
sub
sub
dec
or
sub
cmpsb
in
aaa
sbb
adc
dec
leave
and
stos
mov
cwtl
jae
sub
push
mov
fsubrl
sub
xchg
loope
inc
mov
lahf
movsb
jge
scas
sahf
ret
cld
inc
ljmp
ror
js
arpl
imul
in
jno
lret
pushf
sub
mov
clc
je
push
dec
xchg
gs
mov
adc
cmp
dec
pushf
or
out
aas
push
fwait
cltd
sbb
sbb
mov
mov
shll
lds
jge
lcall
test
cmp
sti
stos
pop
lds
ss
jae
or
or
mov
scas
test
movsb
mov
xor
popa
push
andl
pop
in
movsb
int3
xlat
out
je
inc
out
mov
xchg
je
dec
add
inc
add
jne
movsl
adc
adc
insl
incb
ljmp
pushf
jo
push
mov
fbld
jecxz
mov
lods
mov
out
mov
add
pop
push
mov
and
cmp
test
xchg
mov
mov
mov
cld
sub
cli
into
test
pop
aad
pop
and
pop
orb
into
and
and
addr16
ja
mov
out
loopne
pushl
daa
push
icebp
and
mov
mov
std
adc
mov
ret
stos
and
xchg
mov
mov
test
mov
mov
pop
xchg
jge
ret
arpl
add
rcrb
xor
jl
es
pop
or
inc
xchg
rolb
sub
xor
stc
repnz
xchg
cmp
mov
popl
mov
add
push
aaa
or
in
mov
loop
add
stos
fsubr
and
popf
aam
hlt
repnz
andb
das
xor
loopne
ja
jmp
xchg
decb
loope
and
add
ja
data16
xchg
popa
sahf
sahf
scas
lret
jo
mov
mov
xlat
insl
or
ret
jns
out
add
clc
test
fisubs
cltd
mov
je
aam
rorl
movsl
outsb
out
jge
je
outsl
jle
ss
push
jne
lret
xchg
sub
pop
shrb
add
push
push
pop
jne
and
stc
dec
test
dec
push
xchg
fwait
sub
repnz
sub
popa
movsl
inc
mov
cwtl
dec
sub
lret
inc
lds
adc
push
xchg
pop
std
fbld
pop
es
jle
fildl
dec
sub
xor
jge
addr16
jne
or
push
jnp
xor
jle
mov
inc
lds
repnz
movsl
cmp
pop
jae
lahf
jns
imul
adc
cmp
mov
lahf
xchg
jecxz
scas
or
xchg
mov
test
jno
add
sbb
dec
into
cmp
pop
xor
cmp
imul
inc
movsl
push
cmp
lods
xchg
add
mov
push
popa
and
xchg
and
repz
out
adc
sahf
cmpsl
sbb
js
test
rcll
lret
jae
das
call
out
jmp
adc
imul
xchg
bound
mov
cmp
daa
cmc
int
add
out
hlt
in
movsb
dec
or
jl
aam
or
jno
and
sar
shrd
inc
mov
shl
mov
sub
lcall
nop
mov
push
push
jnp
dec
fldt
fisubrl
repz
dec
out
test
in
push
inc
jl
and
std
mov
aam
xor
out
xchg
mov
loopne
loopne
sarb
imul
pushf
push
mov
cli
jne
imul
lret
stc
imul
xor
pop
jnp
inc
sub
push
mov
nop
pop
icebp
sub
mov
testb
fstpt
aaa
jge
addl
xchg
push
lahf
outsl
decl
or
orl
mov
pop
ss
push
test
xchg
and
popa
andb
fsubrp
mov
data16
fwait
in
push
imul
ss
out
mov
fisttpl
insb
neg
clc
xchg
imul
test
testl
xchg
rolb
int3
jle
arpl
dec
jle
sbb
fmull
lods
addb
lods
add
jbe
adc
inc
mov
bound
inc
shrl
lcall
add
add
ljmp
sbbl
and
aaa
aas
sbb
incb
test
orb
mov
mov
jno
jbe
outsl
mov
xchg
xchg
jecxz
push
xor
pusha
sbb
xchg
xchg
or
xor
cli
mov
push
add
pop
push
in
mov
jns
push
imul
xchg
push
popf
mov
test
mov
sbb
mov
rcrb
je
test
rcrl
xchg
insb
aas
push
ficoml
jge
pop
dec
dec
push
cld
cwtl
jno
mov
aas
arpl
fcompl
sahf
jb
mov
mov
and
out
xchg
data16
jmp
mov
jg
sti
call
mov
loop
cmp
mov
cmp
and
aad
inc
leave
lods
imul
popf
mov
dec
mov
insb
jmp
in
dec
cmc
push
push
cli
pop
or
and
stc
sub
nop
inc
mov
ret
in
out
insb
mov
and
dec
pop
mov
push
pop
in
es
or
sbb
cmp
add
or
mov
sbb
pusha
cmc
arpl
add
xor
dec
mov
jl
ss
outsb
cmp
daa
pop
cld
mov
and
insb
mov
mov
imul
push
fcomi
push
push
sbb
cs
imul
lahf
push
xchg
gs
dec
ss
lock
sub
out
setno
test
int3
adc
push
mov
push
cs
mov
cmp
je
lret
fcompl
mov
add
xor
xchg
add
fidivl
jp
jae
inc
adc
inc
jp
faddp
sub
pop
mov
sbb
jne
ret
or
test
xor
sub
lea
test
xor
mov
xlat
pusha
mov
es
sbb
and
adc
mov
mov
dec
mov
shlb
cli
je
ljmp
mov
std
add
stos
leave
lods
aam
mov
sbb
xor
jmp
pop
lods
dec
jnp
stos
mov
inc
xor
xchg
punpckhbw
jmp
out
insl
xchg
push
mov
pop
aaa
fcmovb
cmpsb
in
cmpsb
fidivs
inc
push
lock
mov
add
sub
mov
sbb
popa
cmp
popf
and
mov
rcrb
dec
sub
fmul
mov
not
jg
fadds
test
fwait
fwait
mov
shrl
stos
push
or
dec
mov
addr16
pop
fs
sub
adc
cmpsl
xor
mov
adc
mov
fisubrs
push
pushf
fldcw
pop
fnstenv
cmp
mov
inc
shll
ret
sub
mov
outsb
aad
lds
adc
jg
aas
popf
sbb
mov
sbb
and
jge
cmp
jo
jg
dec
cmp
pop
mov
jge
xor
stos
cli
imul
fistpl
int
scas
cmpsl
pop
jmp
scas
call
out
into
push
in
mov
mov
scas
movsb
xchg
filds
loop
add
pushf
loop
adc
or
mov
xor
xor
in
aad
sbbl
add
xchg
in
in
sbb
xchg
dec
mov
sti
xor
dec
out
pusha
adc
gs
sbb
add
jnp
sbb
mov
dec
mov
mov
and
imul
push
fbstp
sbb
xchg
orl
xchg
or
lock
stos
jno
adc
pop
pop
adc
pushf
inc
fildll
cmpsb
cmp
out
pop
mov
add
daa
or
jl
pop
mov
test
add
xor
push
jmp
inc
add
outsl
rcl
sub
out
leave
lea
xor
pushf
or
jo
lret
bound
out
into
scas
ret
jecxz
cmp
mov
enter
inc
rcll
rorl
mov
das
and
in
jmp
sub
out
repnz
iret
mov
inc
not
inc
loope
repnz
sbb
and
cmpsb
jp
leave
into
or
fucomip
loope
push
dec
enter
sub
int
clc
or
ds
xor
leave
lret
inc
dec
or
cmp
sti
push
ret
hlt
fs
or
jo
mov
sub
push
es
xor
jo
pop
mov
int
jo
aaa
inc
adcl
in
mov
or
in
scas
adc
pop
pusha
inc
jle
mov
mov
push
stos
push
imul
dec
or
int3
bound
cmp
sbb
int
test
shlb
push
outsl
mov
scas
pop
cwtl
nop
cmpsb
lcall
add
daa
cmpsb
add
mov
mov
pop
popa
shlb
mov
idivl
dec
hlt
and
std
add
xchg
pushl
cmp
and
dec
in
dec
cmp
cmp
jns
addr16
pop
or
mov
adc
dec
mov
lahf
rclb
outsb
ret
mov
cmc
push
mov
repz
xchg
movsb
jo
das
inc
lea
loopne
rcrb
div
jle
movb
sub
pop
cmp
jo
jae
out
mov
fcoms
data16
lcall
mov
push
loopne
ss
mov
les
les
mov
roll
push
insl
push
cmp
mov
cmpsb
or
inc
jmp
lea
in
fwait
ljmp
fsubrs
pop
push
mov
lret
test
pop
in
lea
adc
xor
test
xchg
mov
push
push
mov
jne
test
mov
sub
lcall
sub
std
add
sbb
mov
jle
bound
add
dec
mov
loope
cmp
fldcw
sarl
mov
ffree
sub
mov
jl
dec
push
je
fisubrs
fstpl
enter
test
push
xor
clc
pop
sub
add
sbb
add
ss
or
clc
pop
dec
dec
xor
addl
pop
jns
ja
pop
xchg
mov
sbbl
fwait
jge
rorl
lret
orl
je
pop
int3
adc
sbb
sub
sbb
pusha
popf
cltd
in
xor
cmp
in
sub
inc
outsb
movsl
sub
cmp
cmp
xchg
ljmp
xor
stc
pop
sahf
mov
mov
xor
std
jp
sti
mov
dec
cs
rcr
cmpsb
xor
hlt
mov
jp
sbb
cmp
cltd
and
xchg
cmpsb
adc
sbb
cmp
mov
aad
jae
add
xchg
mov
jne
imul
xlat
mov
adc
pusha
repz
out
mov
jp
xor
mov
mov
pop
shl
int3
addr16
out
mov
stos
aad
or
addr16
cmp
pop
mov
dec
movl
mov
gs
mov
sub
rclb
mov
data16
inc
imul
xor
pop
out
or
cmp
rcrl
or
jae
inc
cmp
orl
push
and
jae
outsb
push
dec
fsubrs
and
inc
in
or
pusha
outsb
fidivs
jp
add
dec
into
cmpsl
and
pop
mov
push
popf
inc
cmp
divl
rcll
add
mov
pushf
pop
pushf
shrl
lret
std
rorl
fdivrl
jp
out
bound
loope
jge
arpl
in
cmpsb
jbe
lods
xchg
lock
fwait
stos
sbb
in
mov
popa
out
mov
lret
jp
inc
inc
push
insb
test
lods
ja
mov
fists
cmp
in
jmp
imulb
sub
outsb
fistpl
repnz
dec
mov
ss
inc
and
mov
int3
xchg
mov
push
sub
push
mov
add
sub
lcall
lcall
dec
cmp
ljmp
and
xchg
mov
add
dec
inc
mov
xchg
and
xchg
fmull
test
cmp
or
jecxz
push
loopne
out
js
popf
mov
xchg
aaa
call
sub
jp
fwait
add
das
push
jne
arpl
ja
addl
hlt
data16
or
and
or
pop
pop
push
mov
mov
cmp
rorl
push
or
dec
sub
sub
movsb
lcall
and
pop
xor
sbb
push
sbb
mov
or
pop
xchg
or
aas
mov
and
out
cwtl
xchg
and
pop
pop
gs
rcll
sbb
mov
popa
cmp
jp
inc
sub
push
cmc
call
fnstcw
loopne
lea
pushf
inc
outsl
out
inc
jge
and
push
sub
mov
nop
frstor
stos
mov
es
leave
xor
icebp
rorb
cwtl
roll
push
sbb
sbb
xor
int3
sub
and
mov
jns
test
movl
mov
xchg
sub
xrelease
out
test
cmp
inc
cmp
push
aad
adc
mov
pop
inc
leave
repnz
sub
pop
aam
testl
imul
inc
dec
or
xchg
or
stos
dec
push
mov
arpl
jo
rcr
loop
fdivs
scas
push
out
out
push
decl
shrl
insb
lds
cltd
aad
pop
ljmp
jp
je
xchg
lods
mov
mov
mulb
sub
mov
jg
fs
mov
out
xchg
das
push
loope
js
cli
cmpsb
repz
push
cltd
sti
cmc
pop
fs
orl
or
xor
outsb
push
scas
js
insl
imul
popa
mov
mov
mov
xor
das
inc
daa
lahf
ja
push
addb
and
sbb
cmp
sar
test
cltd
out
xchg
dec
pop
xchg
int
lods
cmp
loopne
mov
and
ljmp
lock
dec
fimuls
xor
or
xchg
stos
aas
mov
in
or
scas
push
into
jns
cltd
movsl
insl
push
mov
enter
sbb
jne
je
pop
stc
imull
adc
mov
xchg
mov
jae
mov
es
add
xchg
daa
in
outsb
adc
sbb
lret
lods
imul
mov
mov
in
mov
mov
pop
jl
lret
insl
dec
dec
orl
sub
in
mov
lods
in
mov
call
inc
inc
push
mov
insb
dec
out
xchg
push
xlat
rcrb
jp
or
nop
xlat
out
xchg
test
ret
inc
jb
es
data16
or
mov
mov
scas
xlat
cmp
push
lret
insl
popf
mov
out
fcomi
mov
sbb
xchg
push
jo
mov
stos
stos
pop
idivb
sysexit
loop
xor
mov
mov
mov
jns
cmp
dec
leave
add
pop
fists
jae
bound
test
fwait
ret
popf
pop
ds
addl
icebp
jne
pop
mov
pop
test
mov
mov
mov
int
fwait
xchg
divb
inc
fadds
push
insb
scas
call
imul
dec
dec
sbb
or
iret
subl
lea
push
shlb
pop
fsubrl
push
in
push
sarb
outsl
shl
jp
dec
inc
sti
push
mov
sarl
fsubl
push
clc
dec
push
mov
mov
xor
mov
test
leave
add
mov
imul
xchg
sub
pop
sub
xor
test
inc
sarb
jb
lcall
xchg
pop
mov
int3
rorl
mov
test
daa
cld
jae
push
xchg
mov
dec
sbb
xor
jge
adc
inc
dec
inc
repnz
aaa
ss
dec
mov
pop
cmpsb
outsl
xchg
pop
mov
mov
inc
aas
lods
and
pop
mov
adc
sub
xor
loop
out
mov
or
ds
dec
mov
stc
aam
add
xchg
stc
inc
jns
mov
inc
cmp
or
andl
ljmp
or
int3
or
cmpsl
fists
adc
xor
sub
sbb
in
inc
notb
stc
lods
movsb
mov
jne
test
ret
mov
loope
jno
or
mov
inc
dec
inc
jl
pop
sbb
fnstcw
aas
jbe
and
aaa
test
inc
lret
cmpsl
ds
cmp
pushf
adc
cwtl
sbb
push
cmp
mov
in
mov
jmp
lea
pop
rorb
cli
iret
loop
push
cmp
cmpsl
mov
mov
loop
stos
cmpsl
and
rorl
jae
rsqrtps
in
js
ljmp
in
pop
pop
jo
lea
add
popf
xorb
daa
lcall
xchg
xor
sub
aas
push
mov
inc
adc
push
mov
lret
xor
jnp
jle
push
movsl
scas
xor
and
jbe
jmp
or
lret
aad
mov
outsb
outsb
icebp
lahf
fadds
fwait
pop
xor
dec
mov
adc
shlb
mov
scas
dec
out
dec
data16
pushf
add
loop
mov
das
jns
test
mov
push
sub
pop
cmc
push
cli
out
int
mov
lods
cli
scas
fwait
mov
in
mov
mov
mov
add
fsts
scas
loop
xor
add
andb
pop
cmp
jb
or
nop
shl
cmpl
fadd
mov
cmpsl
ss
repnz
aam
mov
cmp
insb
mov
push
cmp
shll
inc
into
or
cmp
out
xor
xchg
sub
dec
push
xchg
or
inc
or
cwtl
rcll
add
and
adc
add
xcrypt-ecb
cmpsl
dec
mov
cld
packsswb
dec
or
add
dec
pop
test
sub
outsb
test
push
stos
cld
push
cmpsb
es
jg
mov
and
sbbl
cs
mov
pop
jb
xchg
sbb
or
jmp
dec
or
mov
adc
jmp
into
lock
xchg
inc
shrl
insb
inc
ja
fdivs
fs
adc
jp
cmp
in
push
mov
lret
rcr
sbb
and
jb
out
mul
movsl
push
lods
and
divb
adc
or
andl
aam
subl
mov
pop
mov
lock
push
add
sahf
inc
lods
mov
push
add
daa
into
arpl
pop
movsb
sahf
jnp
jnp
lods
dec
jbe
mov
mov
sbb
fwait
test
leave
fstl
adc
jb
faddl
xor
pushf
push
pop
lret
lds
stc
sbb
out
mov
xchg
std
sub
out
fcoms
cltd
push
data16
add
loop
add
stc
mov
out
add
ds
jp
sub
fwait
aas
lret
adc
addr16
fucomip
cld
and
addr16
pop
xchg
aad
arpl
xorb
pop
mov
fidivl
je
dec
outsl
pop
mov
jbe
jno
shrb
lahf
sbb
dec
shr
stc
push
jge
mov
cmp
and
or
mov
test
mov
mov
add
stos
mov
push
cmpsl
clc
repz
mov
enter
or
lcall
movsb
fldenv
sub
add
push
cmpl
jg
xchg
jp
jnp
popa
movsb
fwait
mov
dec
mov
push
push
movsl
cltd
test
push
mov
lret
outsl
dec
shlb
insl
lock
dec
call
sahf
das
adc
cmp
mov
pop
and
xchg
loop
jno
call
adc
mov
fwait
hlt
pop
jl
into
cmp
roll
fistpl
ja
mov
push
mov
mov
mov
and
nop
ds
cmp
inc
iret
cmp
jecxz
xor
in
inc
nop
std
dec
xchg
or
pop
xor
push
adc
fnstenv
fisttpl
test
dec
xchg
sbb
shrb
outsb
loope
call
imul
cld
dec
xor
xor
jecxz
out
xor
mov
xchg
hlt
push
cmp
mov
xchg
mov
or
xchg
roll
mov
loop
inc
test
in
push
lods
inc
cmp
jmp
pop
shrl
insb
pop
enter
push
aad
dec
add
push
aaa
xchg
and
cld
lahf
rol
test
adc
rolb
addr16
xchg
rcrl
jb
jecxz
enter
aaa
dec
cwtl
and
xchg
jl
mov
jle
gs
hlt
orb
or
add
insb
fldl
inc
and
std
divb
add
lock
lahf
dec
popf
repnz
jno
xor
out
imul
inc
sub
cmp
in
xlat
pop
pushf
push
in
sti
pop
hlt
xchg
mov
icebp
mov
pop
pop
push
adc
sahf
mov
dec
iret
aad
in
je
vpunpckhqdq
lea
adc
mov
xlat
cmpsb
roll
cmp
dec
mov
push
lea
fs
outsl
cmp
lret
mov
lahf
mov
pop
repnz
sbb
pusha
mov
rcl
cmp
cmp
lea
sbb
mov
mov
and
mov
adc
and
bound
mov
aaa
mov
push
shll
xchg
mov
test
lcall
movsl
ror
xchg
pop
add
xchg
aas
xchg
int
ret
lret
fldcw
movq
jne
fwait
pusha
fucomip
mov
sarb
pop
push
mov
fstps
cmp
movsl
mov
inc
ds
mov
mov
xor
out
adc
out
stc
xor
or
fistpll
mov
push
mov
data16
aad
cmp
mov
dec
cwtl
pop
xchg
outsb
nop
incb
add
arpl
mov
mov
fwait
and
enter
jno
push
jne
mov
mov
mov
pop
loope
lcall
ja
icebp
mov
jnp
lods
mov
lahf
pushf
test
dec
push
jbe
out
out
stos
cs
and
dec
mov
aad
dec
orl
inc
inc
out
mov
pushf
inc
jp
test
das
cmp
shrl
ljmp
std
or
dec
dec
ret
aaa
insb
mov
push
sbb
cmp
or
jmp
and
pop
fwait
cmc
push
inc
cmp
sub
push
in
roll
pop
pop
mov
mov
call
pop
jl
push
call
loop
sub
into
gs
daa
jnp
popa
add
loopne
or
clc
or
xchg
mov
loop
mov
shlb
out
and
xchg
dec
pop
jl
push
and
loop
lea
fcompl
rorb
adc
dec
cli
dec
aaa
rclb
jmp
mov
cmp
out
inc
nop
dec
sbb
adc
lcall
ja
bound
xor
push
pop
shrl
cmp
mov
addr16
out
dec
in
jno
iret
cld
test
mov
lods
cmpsl
andl
aad
stos
icebp
and
out
bnd
out
mov
ja
xchg
ja
cltd
jne
mov
fisubrs
cmp
or
popa
sub
pxor
pop
sub
ret
icebp
pop
in
jp
fmull
sub
xor
shrb
sbb
out
dec
test
inc
mov
ljmp
movsb
fldt
mov
mov
dec
pusha
cld
daa
jns
jb
pushf
jno
in
pop
jg
mov
sbb
sbb
ret
les
push
out
sar
hlt
cmovs
shrb
jle
inc
inc
xor
test
je
cmp
dec
push
push
xor
je
cmc
loop
test
pop
mov
call
xorl
or
popa
adcl
xchg
adc
dec
mov
add
mov
bound
adcl
or
loopne
fcmovnu
addb
imul
jno
sbb
rolb
roll
out
aam
insb
dec
js
mov
dec
loop
call
xchg
and
mov
aad
mov
or
sti
pushw
cld
mov
pop
cmp
leave
nop
jno
mov
xchg
push
pop
aaa
cmp
rcll
mov
ss
mov
mov
xchg
out
sti
insb
out
call
cmp
jb
or
js
xchg
sbb
insb
sub
imul
cmpsb
xchg
outsl
cld
xchg
push
and
or
jmp
int
sbb
fsts
xchg
cmp
aad
add
jae
data16
jbe
shrl
xchg
and
add
push
sarl
incb
push
xchg
out
pop
fbld
popf
fcompl
mov
xchg
and
pop
pop
aaa
popa
cmp
cli
es
mov
js
test
cltd
mov
bound
dec
jbe
sbb
sub
icebp
fisubs
xchg
fsubl
mov
rorb
jae
adc
fcmovbe
dec
jne
cmpsb
shlb
xchg
jle
roll
jno
xchg
test
dec
jns
lahf
fidivrl
es
nop
setne
outsb
sub
out
lret
int
ss
popa
mov
mov
mov
cmp
add
xchg
out
inc
iret
outsl
popf
popf
fldenv
add
ret
add
xlat
or
xchg
test
jmp
ret
pop
mov
fwait
sbb
leave
xchg
mov
push
sub
pop
sbb
jp
sub
xchg
mov
cmp
iret
dec
pop
jmp
pop
mov
pop
sub
cmp
mov
fstps
cmp
into
dec
or
jne
xchg
les
sub
sub
sbb
dec
out
add
inc
icebp
lods
xchg
jnp
mov
cmc
cmp
daa
jl
fmuls
dec
xchg
xchg
sbb
push
adc
or
fnstenv
cwtl
outsb
jno
hlt
leave
gs
cmp
cmpsb
bound
or
sub
xchg
mov
enter
mov
mov
jge
fwait
sub
sbb
add
push
pushf
cmp
ret
scas
xor
imul
dec
clc
and
movsl
sub
enter
add
pop
in
jg
scas
jmp
mov
jae
loope
push
lods
pop
push
repz
and
ja
jecxz
jmp
gs
lods
aad
push
mov
orl
jno
fists
mov
adc
xchg
mov
fwait
iret
mov
jecxz
fwait
addb
dec
lret
cmp
cmc
scas
sbb
cmpsb
jno
ss
pop
fwait
adc
lea
into
sub
in
add
loope
push
mov
jb
fstps
aam
mov
mov
les
popf
xchg
xor
mov
pop
fsub
xor
mov
jle
xchg
scas
sub
out
fsubl
dec
lds
stos
adc
jmp
insb
pop
hlt
xchg
xchg
add
pusha
idivb
fldcw
subb
or
jns
ds
jo
and
or
push
xchg
xchg
sarb
cli
pop
dec
cmp
sub
mov
adc
pop
enter
ljmp
dec
and
testl
cld
ret
mov
or
jno
xlat
adc
push
sub
cmc
leave
jge
aam
repz
mov
lahf
outsl
push
push
mov
pop
adcb
xchg
ss
arpl
cld
imul
lods
jl
popf
pop
or
pop
xchg
mov
inc
cli
push
sbbb
mov
mov
jmp
xor
fdivrs
sbb
je
pop
test
mov
sbb
inc
mov
lock
sti
and
sahf
lahf
push
adc
push
movsb
daa
pop
arpl
pushf
js
mov
jle
jl
arpl
ret
mov
dec
add
xchg
adc
xchg
dec
sbb
out
rorb
cmc
enter
jbe
daa
sub
cli
and
mov
sbb
inc
sub
or
sbb
ds
mov
mov
sub
mov
in
inc
pushf
adc
arpl
stc
out
fs
xor
roll
dec
mov
in
push
fcomp
insb
loopne
or
or
cmpsb
sbb
and
and
and
test
mov
popf
icebp
jnp
repnz
repz
or
mov
xchg
orb
bound
inc
and
mov
out
xchg
inc
xchg
mov
and
pop
push
ror
insb
dec
mov
adc
dec
fildll
fstl
imul
mov
add
sbb
push
adc
cli
loope
pop
int3
pushf
add
and
mov
into
imul
mov
cmp
fidivrs
jl
sub
rol
cmpsb
mov
sub
imul
pop
repnz
enter
push
ja
xor
mov
subb
out
scas
fmul
addl
or
insl
into
popa
std
testl
fstps
test
mov
mov
pushf
pushf
sub
mov
ucomiss
inc
out
out
add
push
sub
xor
add
or
mov
cmp
inc
cmp
pop
fwait
in
fwait
jo
sub
jnp
sbb
popa
call
push
lcall
rcr
nop
mov
flds
adc
je
lret
xor
data16
inc
test
and
add
mov
push
adc
dec
jl
push
fdivr
sub
js
lock
jl
mov
cli
int
dec
cmp
dec
pop
mov
pop
loop
outsl
je
cmp
and
adc
pop
xchg
repnz
push
aas
cld
or
mov
stos
and
sti
adc
adc
xchg
add
fsubrs
add
mov
pusha
mov
movsb
enter
rclb
jno
out
fadd
dec
add
mov
pusha
addr16
jns
sbb
fldl
ja
sub
call
das
sbb
adc
insb
in
and
shll
dec
sub
fadds
dec
cmpsl
mov
mov
xor
xchg
add
clc
xchg
inc
out
jg
je
cmp
nop
in
pop
pop
sub
push
inc
xor
fs
jecxz
add
imul
add
insb
jns
push
adc
int3
xor
es
dec
xor
stc
inc
cmpsl
jb
inc
ljmp
es
dec
ds
loopne
lds
mov
xchg
lcall
xchg
xor
ret
pushf
adc
lret
call
dec
cld
inc
and
fistps
push
movb
xor
add
mov
je
aas
xor
adc
mov
sbb
lahf
movsl
loope
mov
cmp
aam
fildl
mov
add
ret
dec
jmp
sti
lods
das
sbb
xchg
loopne
jae
fwait
adc
cmpsl
bound
sbb
adc
push
rep
popa
lret
add
nopl
pushf
jg
loop
and
sbb
add
aad
cmpsb
inc
data16
mov
aaa
inc
aas
fistl
sar
adc
outsb
in
jecxz
lret
push
into
test
movb
fcoms
rclb
inc
sarl
pop
out
shlb
ja
pop
aas
xor
mov
ja
mov
dec
jecxz
push
cmp
into
push
sub
and
mov
adc
xor
aam
ret
xchg
mov
stos
add
sbb
test
sarl
or
clc
add
mov
rorl
int3
xchg
int3
pop
mov
leave
mov
mov
add
add
orb
lret
pop
inc
jmp
in
daa
or
jg
jmp
les
idivb
pop
stos
scas
movsl
inc
ja
cmpsl
inc
loopne
jecxz
out
sub
lods
sbb
mov
rcrl
ret
sbb
push
lcall
xchg
mov
mov
bound
cmpsl
and
mov
mov
aad
addb
mov
xorb
popf
adc
xlat
pop
cwtl
jge
ljmp
dec
movsb
insb
cmc
aaa
mov
and
popf
in
outsl
jge
ficoms
out
bound
fwait
jecxz
and
andb
mov
inc
lock
stos
aam
sub
leave
push
mov
ss
and
jg
cmpsb
or
mov
xor
mov
xor
cmpsl
data16
cwtl
add
sub
aas
dec
push
je
and
push
pop
mov
pop
jge
rclb
cmpsb
inc
stos
std
lock
dec
pop
jo
and
mov
pop
adc
push
cmp
popa
mov
je
mov
das
mov
popf
ja
sub
arpl
stc
aad
pop
mov
sbb
jp
inc
push
incl
rcr
push
mov
push
aas
fwait
xchg
cmp
inc
push
adc
cmpsb
sub
sbb
call
pop
sub
das
mov
or
jnp
outsb
mov
ljmp
icebp
mov
jb
stos
push
adc
or
sbb
js
into
jl
divb
sbb
xchg
rcl
adc
ret
movsb
out
mov
or
das
or
cmp
xchg
lods
or
sbbl
insl
fcomip
jns
dec
loop
add
xchg
mov
popf
loopne
push
adc
roll
popf
into
ljmp
add
pop
push
enter
or
pushf
dec
aaa
pop
cmc
adc
dec
adc
xor
push
ds
in
fldcw
adc
add
inc
inc
repz
adc
daa
xchg
sahf
into
add
mov
pop
sub
nop
mov
jnp
xor
inc
popa
popa
add
test
jne
pop
pop
das
out
test
and
inc
imul
stc
or
xor
cmp
sbb
mov
sbb
js
mov
xor
mov
hlt
mov
imul
sarl
enter
mov
jl
cmp
ss
mov
cmc
xor
rorl
sahf
outsl
clc
insl
pop
dec
xchg
pushf
mov
lock
cmp
imul
test
out
add
inc
and
cwtl
pushl
cmp
jg
sub
cli
clc
sbb
jmp
shll
fnsave
sub
jo
jno
andl
mov
push
cmpsb
cmpb
mov
in
int
gs
add
lret
gs
cli
push
xchg
pop
jl
or
cli
push
dec
outsl
push
daa
out
xor
insb
imul
loopne
aas
lds
push
iret
out
sbb
sarl
jae,pn
sbb
gs
mov
aas
shlb
or
adc
mov
adc
fimull
mov
enter
mov
cltd
jns
cwtl
mov
and
push
mov
or
cmp
idivb
pop
cld
dec
inc
into
mov
sbb
fildl
dec
mov
in
mov
repnz
data16
ret
mov
pop
xchg
popf
xor
mov
add
fdivr
sbb
xor
addl
test
add
push
push
push
mov
pop
pop
sbbb
mov
add
insb
sti
ja
scas
sbb
inc
out
enter
lods
or
es
mov
mov
jnp
addr16
in
lds
imul
sbb
pop
mov
mov
pop
add
std
test
sarb
xor
dec
xor
fwait
xchg
mov
xorl
imul
ffreep
xor
inc
fldcw
sub
cmp
bound
add
jo
mov
int3
nop
jge
push
in
mov
cmc
inc
hlt
sahf
test
aas
out
add
mov
idivl
test
pusha
xor
mov
pop
mov
imull
test
inc
in
roll
leave
or
lahf
cwtl
hlt
ret
scas
mov
mov
int3
je
push
daa
movsb
pop
addb
push
nop
push
popa
xchg
cmp
and
ret
pop
outsl
fisttpl
shlb
ret
icebp
adc
push
std
ss
nop
rolb
cmp
test
stc
xchg
shrl
and
and
mov
scas
int3
inc
or
cmc
insb
pop
adc
lcall
vmovsldup
cli
or
es
add
mov
aas
incl
pop
inc
mov
sbb
sub
lahf
mov
nop
lods
outsl
mov
mov
mov
pushl
mov
insl
inc
jns
add
js
mov
jno
or
ja
fs
test
push
bound
fwait
pop
into
mov
sub
outsb
and
lea
out
mov
add
into
cs
xchg
mov
push
stos
mov
adcb
mov
push
repz
inc
and
shll
pop
push
mov
mov
inc
mov
jp
lods
test
mov
iret
inc
fistps
push
mov
xchg
jle
aaa
mov
aaa
data16
cmp
adc
sbb
jg
inc
jmp
aas
call
mov
lahf
xchg
dec
cmpsl
add
sbb
xchg
xchg
push
mov
add
push
push
stos
fdivl
fwait
and
mov
mov
mov
cmpl
xorl
xor
pop
imul
loopne
push
aad
add
dec
pop
ret
push
xor
pop
ss
xchg
sbb
push
or
mov
jmp
test
daa
or
leave
lods
or
mov
icebp
leave
xchg
clc
jecxz
mov
cmp
ljmp
je
jb
outsl
or
andl
adc
lods
cmp
out
mov
inc
leave
test
push
cwtl
inc
sub
fdivl
jl
cmpsl
mov
xor
push
mov
jbe
loopne
icebp
shl
subb
int3
add
add
or
and
mov
push
cli
fnsave
mov
into
mov
add
xchg
cmp
ss
cmp
mov
xchg
mov
mov
cmp
push
inc
mov
pop
jg
test
rolb
or
push
jle
imul
hlt
test
adc
ja
pushf
sti
cmpsb
ret
test
fisubs
loopne
fisttpll
repnz
or
clc
loop
jns
cli
mov
aad
push
dec
in
add
cmc
add
insl
lea
push
mov
nop
sbb
stos
push
inc
dec
nop
pop
cmp
outsl
mov
adc
sub
xchg
add
pushf
enter
scas
inc
insl
pop
dec
adc
addr16
jnp
sbb
xchg
sbb
movsl
addr16
mov
xor
push
lahf
daa
xor
ret
dec
pop
dec
cmc
push
and
ret
jb
xor
mov
mov
cmc
pop
xor
jae
dec
mov
out
push
xchg
mov
xor
add
push
notb
bound
jp
lcall
xchg
dec
jne
push
push
mov
add
sti
int
dec
sbb
adc
fwait
out
stos
push
xchg
push
xor
cmp
adc
dec
adc
into
push
and
sub
pop
popa
cld
lods
adc
mov
in
xor
dec
insl
add
mov
sub
adc
repz
push
in
jge
xor
fbstp
stos
pop
add
jns
dec
shll
sub
jmp
ds
sti
fmull
push
mov
push
push
addr16
ret
pop
mov
jmp
mov
pop
ret
ret
push
enter
inc
mov
sbb
es
jmp
cmpsb
push
out
insl
adc
test
popa
pop
loop
mov
mov
jns
xlat
cmc
js
xor
mov
popa
repz
test
xor
mov
call
pop
jbe
jb
in
dec
pop
inc
push
xchg
out
pop
and
mov
xchg
jae
mov
cmp
jecxz
add
push
hlt
push
rcrl
dec
aas
insb
adc
add
cltd
xchg
loop
mov
mov
aad
insl
sbb
hlt
addl
lea
jbe
lods
repz
fisubrl
xchg
lods
sbb
fdivrs
icebp
fldl
fsubp
mov
push
push
aas
sbb
lods
add
nop
mov
add
bswap
sbb
jns
sahf
sbb
sbb
lods
sub
popf
and
orl
aam
adc
clc
mov
insl
add
sbb
pop
push
in
in
popf
jno
xor
mov
mov
sub
rclb
out
adc
enter
sub
xchg
add
add
lea
push
xchg
in
int3
fildll
sbb
lock
fcomps
add
std
scas
mov
and
sbb
lock
jne
dec
xlat
scas
adc
add
mov
js
jle
inc
sub
data16
int
out
jg
dec
cmpsb
pop
test
mov
xchg
sbbb
sbb
testl
lea
ljmp
mov
jl
xor
aad
jl
push
repnz
mov
mov
lods
mov
out
pop
es
ret
or
pop
push
int
iret
mov
inc
fcompl
sbb
add
nop
xchg
cmp
scas
int
cli
repnz
or
sbb
xchg
mov
cmp
xchg
and
sub
cmp
inc
dec
xchg
jbe
shrb
mov
push
jne
xor
mov
rorl
mov
out
andl
fdivp
and
push
lock
mov
dec
mov
cltd
gs
ret
or
testb
mov
es
or
loope
mov
mov
mov
stc
int
icebp
outsb
out
int
xchg
dec
sub
stos
push
test
or
ss
mov
cs
cmp
movsb
or
push
addr16
hlt
icebp
jo
stc
hlt
aas
inc
push
in
or
test
and
loopne
mov
movsb
in
push
icebp
cltd
test
inc
ljmp
scas
jle
fnstsw
dec
js
addl
add
sti
outsl
sbb
jmp
stos
das
jb
and
loope
aam
dec
and
ror
pusha
test
dec
mov
fwait
ss
mov
out
add
dec
push
idivb
data16
mov
test
rorl
cmp
dec
inc
or
jne
sub
daa
xor
jo
fadd
jmp
mov
jecxz
and
test
flds
imul
mov
dec
ret
rorb
fwait
and
add
xor
in
pop
jecxz
push
aas
mov
push
and
mov
std
jo
mov
mov
sub
or
and
lods
inc
xchg
and
ret
xchg
sub
jecxz
cs
dec
push
lret
lods
pushf
dec
or
add
mov
jb
in
mov
xchg
rcl
jecxz
or
fnstsw
and
mov
shrb
xchg
adc
mov
mov
inc
int3
ss
inc
fsubp
hlt
push
adc
out
mov
push
and
dec
shr
repz
mov
adc
jb
sub
inc
xchg
aad
test
add
shl
orb
aam
lds
add
in
loop
jnp
lock
mov
notl
clc
cmp
push
stos
jno
mov
mov
cld
stos
mov
adc
xor
mov
mov
push
vpackuswb
mov
inc
in
xchg
mov
cs
jnp
xor
adc
out
sti
xchg
inc
in
xor
cmp
mov
dec
mov
lret
inc
fstl
or
loopne
jne
fcmovu
and
adc
dec
gs
gs
outsb
sub
or
enter
or
pop
push
lea
sbb
popa
jns
jb
dec
roll
cmp
push
jle
stos
xchg
jo
out
out
outsl
sub
addr16
enter
cmpsb
jl
cmp
pop
cmp
xchg
mov
cmpsl
idivl
sbb
jne
push
or
jmp
imul
xchg
sbb
dec
popa
jp
pop
push
cwtl
sub
pusha
sbb
test
xchg
negl
movsl
ficoms
fstpl
into
and
mov
leave
push
pushf
subl
fdivrl
test
pop
mov
mov
scas
jne
out
push
xchg
mov
test
mov
push
sti
adc
pop
push
dec
push
jp
out
and
out
cmp
jbe
emms
jecxz
xor
sub
jg
push
rcrl
lcall
push
push
jmp
push
jae
stos
push
loop
jae
mov
inc
push
fldcw
xchg
lcall
or
pop
data16
sub
adc
jl
and
sub
fdivrs
ds
cli
jbe
push
push
xchg
enter
jmp
or
pusha
jne
aas
ret
mov
bound
cmpsl
sarb
pop
fsubs
add
dec
xchg
adc
out
dec
sbb
fidivrl
and
or
mov
dec
lret
outsb
lods
xor
sbb
negl
add
lret
inc
loopne
sub
cwtl
lods
dec
notl
repnz
push
arpl
or
cmpsb
fs
pusha
pop
adc
mov
mov
mov
imul
fwait
das
lahf
adc
push
dec
stos
xor
into
lock
xor
imul
ror
or
jae
scas
dec
daa
div
pop
stos
inc
outsb
mov
mov
mov
into
mov
cwtl
sub
inc
dec
mov
fcomps
mov
inc
es
loop
insb
mov
mov
inc
js
into
mov
and
into
mov
dec
sbb
sbb
call
std
and
sub
insb
cmpsl
xorb
mov
enter
popl
mov
popa
mov
jb
xchg
pop
pop
xor
mov
out
push
xchg
insl
push
das
lods
popf
xchg
adc
cmp
insl
dec
fstpt
fdivrs
cmp
stos
aas
mov
mov
sbb
mov
je
sbb
mov
or
adc
adc
rcl
or
or
inc
xchg
outsl
mov
jg
xchg
or
sub
stos
mov
push
addb
inc
adc
sub
loope
mov
fs
push
outsl
mov
or
adc
mov
jns
shr
insb
push
mov
jo
dec
adc
inc
push
test
xchg
jns
pop
lahf
pop
in
lods
icebp
jge
push
cmpsl
jns
gs
adc
int3
add
or
dec
adc
push
mov
mov
pop
addl
enter
rcrb
cmp
inc
rol
dec
in
repz
outsb
clc
add
xor
xor
out
jecxz
mov
or
icebp
es
mov
ret
xchg
jmp
dec
jo
sub
flds
ljmp
aam
or
jle
iret
and
fimuls
popf
je
in
pushf
subb
cmpsl
jnp
mov
xchg
mov
lahf
roll
in
pop
mov
pop
fimuls
jnp
std
jne
pop
mov
dec
sub
js
jp
rcrb
pop
test
dec
xchg
or
mov
mov
addb
or
cmpsb
dec
ret
inc
pop
loope
push
mov
stos
addr16
fbld
adc
mov
daa
incl
addr16
jne
dec
mov
lea
pop
ljmp
cmpsl
jecxz
mov
pushf
inc
and
shr
sar
add
clc
push
in
jo
or
adc
pop
outsl
jle
mov
aam
jbe
das
std
push
adc
xor
in
or
sbb
fwait
jae
rorb
xor
add
pop
ret
jbe
inc
add
shlb
ja
add
aaa
rorl
stc
xchg
test
int3
pop
xor
cmp
fucomp
test
fs
imul
js
movsb
incb
add
push
push
push
cmpsb
pop
adc
push
mov
outsl
inc
cld
out
sub
or
pop
pusha
rcl
jo
xor
adcl
sbb
clc
leave
dec
lret
and
mov
and
push
movb
fdivrl
clc
jecxz
lea
stos
popf
in
pop
leave
neg
adc
and
test
mov
push
jb
inc
mov
cltd
add
ret
jle
jno
or
imull
xor
push
cmpsl
shrl
pop
xor
pop
xchg
rcrb
pop
pop
push
cmp
fisttpll
ds
or
addr16
mov
xchg
lret
jl
nop
ds
push
aas
and
popf
mov
and
push
add
pop
dec
mov
push
ljmp
dec
das
adc
mov
mov
outsb
enter
das
dec
pop
je
jb
fnstenv
mov
add
loope
popf
pop
sysret
mov
test
fs
mov
adc
loop
mov
in
stos
int3
cmp
daa
dec
mov
xor
cmp
add
decb
popf
dec
inc
sarb
lret
jns
jno
push
stos
ret
mov
inc
pop
mov
push
mov
jle
hlt
xor
in
insb
aam
shll
xor
push
push
lods
pop
fnstsw
sub
cld
fs
leave
lock
outsb
out
pushf
sahf
add
aam
push
cmp
cmpsl
enter
outsl
mov
xor
test
jnp
sbb
adc
out
lods
add
fsub
dec
int3
std
pop
jno
jae
js
ret
icebp
jg
cltd
pop
sahf
jmp
jae
stos
inc
push
xchg
inc
push
inc
lcall
imul
sbb
push
adc
inc
jmp
nop
push
inc
add
cmp
fwait
lret
cli
push
and
cwtl
xor
ljmp
icebp
add
sub
icebp
bound
sbb
and
cmp
jb
cmp
cmpsl
add
push
inc
fwait
mov
mov
pusha
movsb
rclb
shll
cmp
jo
stos
lret
sub
shrb
je
mov
fst
cld
sbb
mov
mov
inc
idivl
mov
mov
lret
push
lret
add
lock
enter
loop
test
jmp
mov
aas
ss
push
sbb
and
adc
emms
push
cmp
inc
std
and
cmp
imul
xor
pop
mov
jbe
pop
daa
imul
push
jecxz
movsl
ljmp
push
call
je
roll
dec
loopew
popf
stos
inc
mov
mov
dec
cmpsb
into
out
xchg
loope
in
cmp
cltd
pop
dec
push
cmpsl
xor
out
adc
and
jne
sbb
pusha
fdivrs
mov
cmc
xchg
mov
push
push
fistpll
sbb
addr16
fs
daa
pop
stos
fwait
pop
xor
adc
or
sub
ss
divl
pop
test
imul
add
jge
sti
push
outsb
sbb
outsb
and
add
aaa
or
mov
ror
pushf
xor
aad
push
jnp
lret
push
dec
jns
aas
iret
stos
inc
push
mov
sbb
cmp
mov
mov
daa
jo
std
add
xchg
add
push
lods
leave
push
imulb
std
lea
push
mov
jbe
xor
nop
mov
les
mov
repnz
popf
sbb
ret
cmp
xor
mov
mov
loop
std
test
sbb
mov
ds
sub
inc
popa
jns
jno
cli
jnp
mov
ror
xor
rolb
in
insb
mov
data16
pop
sbb
or
incl
xor
out
sub
cmp
das
mov
and
mov
mov
cmpsl
call
mov
lods
adc
inc
jo
pop
push
lock
push
mov
aad
mov
daa
jns
insb
push
pushf
popa
sahf
aas
adc
ficomps
inc
pop
cmp
jno
or
jp
rcl
movsb
jno
int
cmp
js
mov
test
mulb
sbb
shl
xchg
jb
pop
mov
test
add
lock
loopne
insb
cs
nop
fnstsw
or
jo
dec
cmpsl
jecxz
aam
test
jno
fsubrs
loope
outsl
ljmp
cmpsl
dec
adc
pop
repz
sbb
xor
testl
mov
xor
jle
or
and
orb
es
fnstcw
xor
subw
mov
movaps
inc
sti
aad
pop
inc
mov
les
inc
push
xchg
ds
and
push
dec
loope
mov
xchg
mov
cmp
in
mov
sarb
cmc
cmp
test
mov
inc
xor
aad
rolb
xlat
add
fs
mov
test
xor
stos
cwtl
jg
loop
cmc
loopne
add
scas
adc
scas
adc
push
or
mov
jmp
lea
btr
adc
mov
popf
fcompl
sahf
sahf
dec
pop
cmovnp
jae
int
xchg
cli
js
xchg
pop
leave
dec
jns
out
push
out
fwait
int
xchg
mov
arpl
dec
aam
stos
mov
sbb
mov
lahf
and
fcmovnb
mov
mov
push
xlat
fldt
xchg
and
mov
dec
rorl
sub
punpckhwd
xchg
and
mov
pushf
xchg
inc
outsb
add
jno
aam
rclb
fldl
push
and
jo
cmc
push
sahf
mov
push
pop
lods
add
scas
push
stos
fisttps
or
pop
xchg
mov
push
add
dec
push
mov
pop
adc
inc
fisubs
sub
or
inc
push
pop
sbbb
ja
loopne
fidivs
enter
jb
cmp
repz
push
pop
push
imul
sbb
lods
in
insb
mov
das
add
das
pop
mov
and
push
mov
mov
paddsw
dec
enter
pop
inc
int
divb
rolb
mov
sti
stos
inc
ljmp
kmovw
lahf
xor
faddp
mov
in
ja
pop
jb
xchg
insb
fdivr
aad
gs
xor
cmp
setne
xchg
in
push
mov
push
mov
push
cld
cld
js
pusha
dec
imul
insl
cld
pop
orl
push
std
xchg
pop
repz
or
xchg
adc
cmc
arpl
lea
pminub
jnp
int3
insb
mov
in
add
adc
outsb
repz
lret
repnz
loopne
lods
mov
jl
cmpsb
inc
movsb
dec
aad
xlat
mov
jmp
inc
dec
jg
cmp
push
outsb
jbe
sbb
int3
sub
inc
jg
mov
pop
dec
stc
mov
adc
imul
jnp
mov
sbb
icebp
test
xor
sbb
push
or
not
stc
mov
ret
fadd
add
popf
adc
shll
loopne
push
dec
ljmp
sbb
dec
in
sub
sbb
jbe
jle
xor
loop
jmp
popf
adc
xor
dec
fadd
jmp
rcll
aas
rcrl
cmp
xchg
pushf
outsb
out
pop
pusha
in
xlat
mov
adc
sub
shl
into
cmpb
rolb
jecxz
xor
int3
push
fs
mov
cmp
mov
sbb
lods
repnz
dec
dec
mov
inc
sub
sarb
enter
jp
dec
cmp
ja
xor
fincstp
in
push
and
dec
bnd
ret
popa
outsb
mov
cmp
iret
mov
adc
sti
stc
stc
sbb
enter
out
mov
mov
inc
jg
cmp
dec
inc
fbstp
pop
mov
jns,pt
insb
inc
pop
mov
jnp
mov
enter
push
and
cli
clc
sub
gs
mov
ljmp
xor
arpl
mov
sahf
mov
xor
mulb
fmull
nop
rcll
inc
cltd
add
adc
mov
and
mov
lock
jae
aas
hlt
test
stos
in
xor
fdivs
and
jmp
in
shlb
or
mov
push
mov
stc
test
lahf
aaa
in
xchg
jae
xor
cwtl
cmp
inc
dec
outsb
and
pop
outsb
ret
into
hlt
or
mulb
pop
pop
lods
std
fsubrl
xchg
dec
xchg
sbb
repz
loopne
xchg
pop
jge
sbb
lods
dec
mov
lds
pop
lcall
adc
inc
imul
pop
js
imul
into
leave
xor
movsb
sbb
jecxz
cmc
leave
repz
xor
pop
jns
stos
in
add
pop
fs
es
dec
iret
lret
and
shrl
les
fildl
fcomip
push
scas
jo
aas
mov
mov
xchg
mov
imul
insl
sbb
fsubr
pop
fsubl
std
int
inc
push
xchg
sti
nop
jmp
push
pop
push
pop
sub
or
add
jns
mov
cmp
jne
addr16
loop
push
mov
mov
pushf
cmpsb
sub
jmp
adc
jge
fldcw
and
or
out
scas
cmpl
dec
dec
mov
out
into
pop
fxch
imulb
shl
fists
es
in
lret
pushf
mov
in
int
cmpsl
mov
adc
xor
loopne
and
or
pusha
les
and
movsl
cs
adc
xor
clc
cmp
pusha
xchg
mov
xlat
push
data16
mov
cmpsb
mov
fsubrl
lea
stc
les
mov
mov
in
cmp
cld
jne
fs
outsl
fimull
adcb
lret
dec
dec
lcall
in
hlt
sbb
jecxz
jl
adc
lock
cmp
cmpb
jbe
enter
int3
dec
push
push
inc
fcmovnbe
icebp
mov
data16
add
mov
bound
scas
mov
dec
ss
outsl
fisubrl
call
add
pop
fnstsw
in
dec
jno
clc
lret
cmp
jo
lret
jns
mov
cmc
adc
and
push
sti
pusha
mov
loop
add
stos
movsb
and
js
faddl
mov
adc
jp
mov
fidivrl
mov
lods
lret
dec
mov
jbe
xor
cs
out
mov
inc
fwait
lret
or
cld
es
not
mov
test
and
fwait
xchg
pop
inc
xchg
sub
jbe
jae
orl
inc
stc
and
add
jne
or
fdivs
leave
hlt
loope
xor
addr16
sub
rcr
lahf
in
push
gs
adc
hlt
push
jecxz
push
sahf
pop
mov
es
mov
les
pop
stos
aam
lret
mov
pop
push
in
pop
negl
repz
int
daa
push
sbb
sti
gs
jns
inc
cld
int3
int3
pop
push
lret
and
push
cmc
popa
sub
inc
lock
bound
xchg
insb
xor
int3
jnp
mov
addb
xor
xchg
xchg
cmpsb
outsl
sub
xchg
fcmovnb
stos
out
jno
jne
mov
cs
std
push
sbb
dec
push
sub
pop
cmp
xchg
push
dec
mov
xor
rcr
sbb
xor
pop
mov
mov
cmp
push
fwait
pop
mov
in
loop
out
fcomip
push
pop
pop
xchg
pop
jnp
mov
push
dec
std
movl
js
ljmp
or
push
sbb
pop
jnp
jge
push
les
sub
lahf
mov
jns
aas
inc
cld
and
fldenv
pop
ficompl
fsub
push
adc
cs
cwtl
jecxz
cmp
pushf
into
leave
repnz
imul
mov
cmp
outsb
roll
loop
fldt
loopne
mov
scas
push
movsl
movsb
ljmp
out
stos
mov
sub
jecxz
cmp
push
addr16
imul
mov
mov
push
out
cmp
sbb
sbb
xlat
mov
push
in
outsb
clc
enter
jno
jecxz
add
stos
mov
push
ret
das
es
push
clc
repnz
sub
lret
cmp
cmpb
dec
lahf
imulb
add
jl
fwait
sbb
cltd
cmpl
adc
fnstsw
fstps
dec
in
mov
mov
jns
flds
pop
inc
out
fcomp
xchg
pop
push
cmp
dec
loopne
dec
int3
mov
inc
adc
sbb
inc
clc
stos
outsl
test
sub
pop
xor
mov
in
jle
js
negb
loopne
int
in
add
sub
test
iret
scas
out
pop
push
iret
and
push
mov
test
mov
sub
test
aas
push
cmpsl
jg
and
sbb
les
push
bnd
mov
push
test
adc
push
imul
test
fdivl
out
ss
fsubrp
ljmp
dec
ret
ljmp
je
mov
imull
mov
out
insl
push
fwait
jecxz
lea
and
std
sbb
jne
imul
sbb
inc
mov
scas
xchg
mov
icebp
xor
dec
jbe
repz
int
jecxz
push
mov
aaa
je
push
nop
mov
pop
shlb
pcmpgtd
loopne
ror
popa
lret
sbb
jnp
mov
stos
pop
ret
dec
stc
xor
cs
fiaddl
cmp
in
fnsave
sbb
ljmp
and
pop
push
sub
sbb
pop
out
stc
jecxz
loop
adc
xlat
pop
in
and
pop
fmuls
xchg
pop
insb
loop
mov
sbb
jge
shlb
adc
rcll
das
xor
cmpsl
hlt
mov
and
test
js
adc
xchg
or
in
mov
xchg
lahf
xor
pusha
test
jbe
add
pop
or
ret
xchg
add
sbb
inc
xor
mov
repnz
mov
sbb
xchg
mov
lcall
cmp
movl
inc
ror
cltd
pop
mov
pop
inc
insl
mov
cmpb
setno
cmpsb
jns
mov
push
xor
jo
and
push
mov
out
jno
scas
leave
sarb
fldt
pop
je
and
pop
or
popf
fildll
xor
fsts
repnz
and
pop
cmp
sub
adc
fwait
jge
sbb
in
stos
inc
add
push
sub
lock
sub
data16
mov
dec
push
mov
cwtl
pop
dec
fists
push
inc
inc
imul
sub
outsb
fnstcw
mov
sbb
jns
dec
xchg
pop
sbb
out
js
mov
loope
dec
outsl
xchg
sub
push
in
pop
ret
push
hlt
lret
mov
enter
mov
shr
test
sbb
push
cmp
nop
loop
nop
jae
imul
es
lds
sbb
in
leave
mov
add
out
popf
and
fwait
jo
shr
adc
pop
pop
daa
dec
xor
ret
stc
jp
or
pop
pop
and
mov
pop
fstps
xchg
pusha
xchg
cmp
popa
leave
cmp
popl
cmc
daa
pop
addr16
and
sub
jp
imul
push
loope
xchg
sub
repnz
push
cmp
ljmp
shlb
push
cmp
jp
xlat
mov
iret
adc
fstps
sub
jno
inc
mov
fsubl
xor
test
sub
orl
icebp
addr16
out
scas
div
sub
data16
aaa
xlat
cmpsb
orb
sbb
int3
pop
in
lahf
adc
pop
mov
gs
jb
sahf
add
jns
lahf
and
movsb
sub
loopne
pop
cli
les
dec
cmp
cs
jle
dec
repnz
insl
sub
mov
in
orl
icebp
lret
cmp
jbe
sti
and
dec
cs
push
dec
addr16
movsl
cmp
movsb
pop
aam
mov
cmp
jb
cmp
and
xchg
int3
and
fistpl
pushf
mov
sbb
fistps
jne
pop
jp
scas
adc
daa
adc
pop
mov
and
out
loopne
jmp
int
cmp
lahf
jmp
jecxz
dec
mov
xchg
mov
in
fsubl
mov
or
xchg
push
mov
hlt
cmc
cmp
jns
sbb
dec
aad
shrl
loope
sbb
out
pop
mov
sub
adc
sub
and
cmp
mov
push
loop
fadd
push
dec
stos
jmp
sti
cmp
arpl
imul
jle
cmp
je
xchg
inc
fs
add
decl
push
int
movsb
push
sub
or
xlat
jl
mov
test
mov
push
mulb
inc
inc
or
shrb
push
fldenv
pushf
sbb
push
ss
jp
stc
xor
into
add
and
in
call
or
jmp
push
imul
jne
mov
add
cmc
data16
jle
mov
test
inc
sub
adc
jae
mov
fiaddl
push
sub
rcr
or
aam
stc
jecxz
jae
cli
mov
fdivl
fisttpll
push
dec
mov
cli
js
or
out
les
aad
and
fmulp
add
sahf
mov
pop
pop
or
push
cltd
mov
test
xchg
adc
aas
sub
sub
pop
in
mov
pop
pop
pushf
ljmp
push
decl
push
mov
sub
push
ficomps
dec
add
mov
nop
push
lds
idiv
stos
inc
adc
shll
iret
push
mov
pop
mov
add
pop
cld
sub
push
fnstsw
js
ret
xchg
test
sub
nop
aaa
arpl
add
out
fst
xor
inc
clc
popf
pop
mov
int
iret
mov
movb
sub
dec
push
sarb
sahf
lds
push
lock
mov
ja
lcall
mov
mov
pop
mov
xor
por
loope
popa
mov
sbb
and
popf
cmpsb
jns
imul
flds
mov
repnz
stc
daa
xor
ret
jge
dec
add
mov
xchg
inc
pop
inc
xchg
inc
in
rcll
jnp
mov
lahf
push
xchg
push
mov
stos
int3
adc
or
sbb
in
push
fdiv
pop
cmp
aaa
aad
mov
dec
and
out
xchg
cmp
cmp
in
int3
xchg
push
shrb
push
pop
jns
lds
xor
mov
mov
insb
mov
in
pop
insl
out
add
out
mov
mov
pop
xchg
pop
mov
dec
imul
push
lea
add
xchg
jmp
dec
mov
data16
aad
mov
emms
cmp
outsl
add
cwtl
std
in
mov
repz
adc
test
pop
or
mov
mov
mov
call
stc
dec
scas
mov
cmpb
fmull
add
cs
mov
std
pop
xorb
sar
int3
jnp
fs
test
inc
aas
mov
jae
xor
inc
rcrb
sbb
inc
adc
cmc
lea
popf
mov
mov
jns
out
jno
inc
inc
fiadds
loop
and
movsl
mov
and
jl
dec
popf
sbbl
xchg
mov
les
lods
add
mov
lea
jb
or
std
cmpsl
imul
or
push
jmp
inc
mov
xor
nop
in
sbb
stos
cs
xchg
sbb
cwtl
mov
test
adc
fs
adc
mov
dec
enter
nop
or
pushf
push
xchg
jns
jno
repnz
sbb
rolb
in
mov
jecxz
mov
rol
push
cmp
gs
lret
push
into
dec
ss
push
adc
pop
out
jno
mov
into
ss
rorl
mov
movb
int3
xchg
sub
dec
pop
aaa
scas
loope
sub
aaa
cltd
cmpb
jne
in
daa
cld
cmp
pop
mov
adc
test
cmp
imul
pop
lea
stos
test
scas
addr16
jp
stos
jae
xchg
xchg
lahf
push
out
pop
popa
cmpsl
orl
adc
lods
clc
pop
cltd
inc
stc
scas
inc
fimuls
dec
mov
arpl
enter
mov
mov
push
mov
sbb
xchg
clc
cmpsl
lock
mov
mov
das
push
dec
xor
add
or
cltd
out
jmp
sub
lret
adc
sarl
sbb
sub
push
xor
int3
sbb
mov
inc
je
ror
mov
in
pop
in
jnp
cwtl
or
cmc
mov
inc
mov
mov
jl
lods
psubb
sar
cmp
dec
insb
addl
int
jl
es
jg
inc
test
lcall
iret
les
sbb
cmp
ljmp
cld
mov
cmpsb
fimull
push
jbe
daa
test
sub
inc
les
into
and
mov
loopne
jns
dec
sahf
test
xor
xlat
out
mov
into
cltd
cld
push
xchg
mov
divl
filds
xlat
dec
fcomps
gs
mov
jne
pop
jbe
or
pop
movsl
cmp
lret
enter
inc
roll
pushf
arpl
fimull
movsl
in
push
inc
test
fstps
les
pusha
out
sbb
movsl
imul
dec
movsb
mov
or
jmp
and
mov
test
mov
fs
xor
lods
into
mov
dec
mov
lods
xchg
cmp
aad
jge
push
out
inc
push
andb
inc
stos
or
add
jmp
stc
xor
lock
cs
xlat
lahf
adc
push
lea
leave
push
dec
jl
fisttpll
in
bswap
push
dec
xor
sarb
out
sbb
shll
pop
jmp
imul
xchg
in
jno
out
frstor
in
inc
mov
sbb
jne
ret
inc
repnz
pop
xor
sub
out
pusha
xor
mov
xchg
or
ficoml
pop
dec
mov
movsl
andb
or
pop
pop
ret
mov
or
stos
cwtl
adcl
or
daa
dec
mov
les
or
push
ret
cmc
push
jl
xchg
neg
add
pusha
idivl
mov
outsl
and
mov
mov
fisubl
add
inc
pop
cmp
mov
ss
xchg
js
lahf
in
jns
rolb
pop
jle
pop
dec
loopne
lock
sti
or
mov
test
sbb
fsubl
ja
cmpsb
in
xchg
daa
sub
and
jl
xor
pop
jnp
ss
sub
clc
rcll
pop
scas
jne,pn
and
shl
xchg
mov
das
sbb
xchg
insb
fwait
clc
mov
cmpsb
push
xor
aad
cwtl
lea
ljmp
push
and
arpl
sbb
cltd
enter
jge
mov
das
and
cmp
pushw
jne
dec
add
sub
mov
xor
jb
and
push
push
aam
dec
imul
cwtl
sub
lock
mov
nop
mov
icebp
adc
jne
pop
xor
mov
icebp
iret
dec
xor
addr16
jmp
cmc
sti
ljmp
test
in
mov
jae
jo
inc
cmp
jnp
nop
dec
mov
mov
mov
jg
push
out
xor
or
adc
fsubrl
cmp
into
and
adc
lds
popf
sbb
daa
jb
mov
xchg
or
pop
fucomp
ljmp
jns
pop
sahf
rclb
mov
hlt
mov
mov
push
xchg
inc
nop
jne
xor
adc
mov
call
jns
cwtl
cli
fistpl
xchg
inc
int
lahf
insl
push
daa
and
insb
dec
popa
dec
scas
xchg
jmp
data16
outsl
out
cmp
or
ret
shl
stc
hlt
lahf
aaa
cmp
inc
add
cmpsl
xchg
inc
lcall
lock
cli
fidivrl
inc
and
fwait
and
mov
popa
push
mov
fwait
enter
andb
icebp
aas
adc
bound
pop
push
loopne
adc
cs
test
push
add
add
lret
insl
scas
dec
push
je
pop
add
pop
int3
incb
mov
lret
jnp
mov
bound
sbb
popf
mov
cld
sti
cld
test
cmp
or
mov
sbb
pop
mov
xlat
lahf
push
ljmp
enter
mov
or
adc
push
movsl
fdivrp
cmp
movsl
push
add
dec
ljmp
dec
adc
cs
int3
call
pop
out
jb
jne
cmp
xchg
out
lret
pop
xchg
dec
xchg
pop
jmp
shl
dec
sub
test
aad
test
ror
sti
sbb
mov
rcr
fidivrl
add
mov
mov
mov
inc
push
dec
xor
arpl
mov
dec
hlt
xchg
push
loope
add
push
sbb
lahf
inc
add
sbb
pop
and
sbb
outsl
cmp
xchg
pop
cmp
into
es
pushf
insb
inc
rcl
lea
lcall
jo
loop
lret
and
mov
arpl
fwait
aaa
stos
movsl
stos
mov
pushf
mov
xchg
adc
lds
mov
ds
shl
xchg
fdivrs
aaa
fldenv
sbb
lcall
sbbb
mov
imulb
js
mov
in
pop
add
into
aas
pop
lcall
imul
fcomp
mov
inc
addr16
inc
add
mov
mov
dec
inc
sti
insb
jno
arpl
mov
push
call
call
out
adc
les
xor
mov
fabs
fmull
xor
jbe
out
xchg
orl
outsb
in
dec
xchg
add
push
mov
mov
or
int3
pop
mov
fwait
inc
test
pushl
mov
jo
les
xchg
sub
mov
push
jnp
sub
das
or
bound
sbb
cmpsl
dec
add
jmp
scas
shlb
mulb
fidivrs
cmp
pop
cltd
or
xor
xor
sahf
or
jb
out
out
mov
std
jmp
mov
repz
std
adc
std
enter
mov
es
int
mov
loopne
out
jno
xchg
cmpsb
shl
add
xorl
or
lcall
xor
inc
mov
mov
mov
push
dec
call
mov
cmp
ja
dec
inc
sbb
or
pushf
orb
test
loope
enter
shl
push
lahf
xchg
pop
call
push
je
in
adc
sarb
out
xchg
pusha
fmull
ficoms
jp
pop
cmpsb
jmp
cmp
mull
pop
pop
nop
jne
clc
shr
jge
jle
jb
out
idiv
mov
pop
mov
filds
xor
sbbl
inc
jge
push
into
mov
jle
mov
int
mov
mov
les
stos
lods
das
cld
inc
or
incl
call
cmpsb
cli
mov
jno
shll
test
lds
out
fs
sar
mov
jbe
js
xor
int
das
jb
adc
cltd
jb
fucomi
decb
loope
pop
movsb
pop
xlat
and
mov
and
jecxz
in
emms
outsb
mov
lahf
dec
stos
xchg
adc
js
cmc
out
cmpsb
pop
xor
jnp
sar
xchg
mov
adc
cs
jbe
adc
and
jb
or
cmp
shll
add
jae
or
jns
mov
xchg
cmc
or
enter
imul
jmp
rcll
test
jbe
mov
mov
movsb
sub
in
das
test
scas
mov
pop
mov
xchg
cmp
dec
je
icebp
mov
cmp
mov
out
out
mov
mov
dec
ds
mov
and
ds
lea
fld
ljmp
sub
push
and
mov
sbb
push
dec
pusha
pop
add
pop
or
sub
test
adc
jb
aas
mov
sub
std
icebp
sti
nop
mov
psllw
aas
popf
ljmp
or
and
pop
sbb
dec
mov
les
ret
cmc
repnz
pushf
xor
jg
pop
push
jnp
adc
test
inc
outsl
loope
pop
pop
adc
xchg
pushf
in
insb
xor
adc
xchg
push
sahf
lods
loop
dec
pop
sbb
adc
stc
aad
bound
nop
cmp
out
rcrb
push
iret
mov
mov
int
ja
xor
push
xor
movsb
inc
in
call
mov
mov
add
cmp
add
adc
sub
lea
push
mov
jne
std
xor
pop
xor
xor
cli
orl
aaa
ret
jno
jp
or
pushf
lods
insl
out
std
les
push
adc
paddq
notl
add
pop
ds
test
sbb
jne
jne
pop
loop
out
jg
dec
mov
movsl
cmpb
sbb
ror
outsl
inc
pop
and
mov
xchg
fcmovnb
scas
mov
movsb
loop
dec
sbb
je
push
sbb
scas
je
outsl
or
ja
inc
cmp
dec
jl
in
leave
jl
cs
inc
clc
cmp
movsl
mov
cmpsl
cli
dec
ficomps
outsb
dec
repnz
arpl
inc
push
sub
mov
notl
ret
push
scas
and
insb
rcll
daa
push
xchg
cmp
loope
jg
out
shlb
push
adc
pop
les
jmp
mov
mov
movsl
pop
cmp
fs
rep
pop
sub
xchg
std
xor
mov
jne
je
mov
push
mov
pop
push
das
ds
add
rcrl
inc
add
xor
stc
mov
in
push
test
pop
mov
fists
push
out
push
dec
mov
sti
test
shll
stos
out
or
cmp
stos
adc
aaa
orl
rcll
nop
cmp
aas
out
dec
cli
xchg
lods
dec
push
sahf
stos
xor
xchg
add
rcl
inc
sti
imul
movsl
aas
pop
and
in
jg
rcl
sbb
dec
lds
loope
mov
jae
pop
fdivs
xor
push
mov
shl
fsubl
jae
dec
int3
test
faddl
insb
jg
xor
ja
dec
add
lret
mov
cs
adc
sar
imul
mov
movl
mov
jp
jnp
and
ficomps
cmp
aaa
stos
jle
scas
xchg
out
push
and
sub
xor
push
add
loope
lcall
add
lods
decl
cmp
lods
outsl
pop
aas
cli
jne
xor
pop
test
xlat
and
xchg
sbbb
aad
fisubrs
imul
cs
ljmp
jecxz
hlt
imul
movsl
inc
loopne
jmp
aam
fsubp
xchg
inc
out
and
xor
shlb
jno
mov
cmp
or
xlat
xchg
push
out
inc
loop
mov
sahf
cmpsb
and
mov
mov
out
dec
mov
jo
cmpsb
push
cld
and
or
inc
or
sub
fbstp
lods
repnz
inc
andb
aaa
inc
arpl
lds
xor
ror
hlt
daa
mov
add
mov
mov
adc
jl
add
mov
rol
leave
xchg
insb
ret
mov
aad
lahf
adc
xor
dec
xchg
jo
jg
and
stos
mov
ret
fs
negl
mov
mov
xchg
rcrb
pop
sbb
jge
dec
mov
push
xor
push
jne
jbe
test
aad
push
or
daa
xor
sbb
movb
hlt
push
fwait
adc
or
orl
push
jae
push
xor
add
fmull
fadds
dec
aas
ret
in
dec
daa
mov
movsw
fmulp
push
cmp
and
cmp
mov
jo
cmc
push
mov
lret
lds
arpl
bound
stos
lds
and
ret
clc
stos
push
stos
test
int3
sbb
sub
pushf
aaa
roll
xlat
into
cmpsl
cmpsl
pop
mov
xor
int3
and
scas
inc
pop
xchg
xor
jle
leave
flds
data16
orb
jo
lahf
loope
cmpsl
into
mov
sbb
cmp
lock
adc
lods
jg
push
incb
dec
xor
push
xor
push
je
outsb
adc
jmp
mov
jns
std
ja
dec
cmp
jp
roll
loop
xchg
pop
inc
popa
rol
add
lret
movsl
stos
mov
das
int3
jmp
fwait
add
call
in
dec
movlhps
mov
jbe
ss
pop
mov
scas
cmp
push
jbe
sub
repz
out
or
xchg
sahf
jnp
add
sub
cmpsl
mov
jmp
mov
push
shrl
les
int
push
and
cli
lods
xor
div
inc
cld
pop
xor
fildll
fsubrl
cmc
inc
lahf
in
cld
push
test
inc
fs
pop
mov
mov
notb
push
push
lcall
lcall
mov
xchg
dec
lret
je
arpl
lea
gs
in
cmc
ficompl
lods
cmc
imul
cltd
jge
jmp
js
sub
nop
push
fs
movsl
jp
add
sahf
cmp
inc
and
cmp
hlt
mov
ret
sbb
cmp
scas
out
xchg
leave
adc
adc
fcompl
and
fsubrl
sysret
push
push
movsb
dec
jl
dec
test
cmp
inc
xor
pop
dec
lcall
cld
xor
or
mov
rcrl
push
setno
mov
dec
rorb
cmpsl
sarl
inc
ljmp
sub
lahf
imul
inc
add
xor
in
iret
out
jmp
das
xorb
mov
insl
sbb
cli
repz
testb
icebp
daa
leave
inc
leave
daa
popa
sbb
aam
or
push
lods
xchg
popa
aas
add
or
push
cld
stos
and
cmpsb
out
ds
cmp
xchg
loopne
fs
std
or
cmpsb
cld
in
call
jl
jb
imul
outsl
vmwrite
or
cmp
ret
mov
out
cld
dec
inc
adc
sbb
add
call
enter
mov
sahf
test
popa
push
pop
scas
jp
add
dec
call
call
sub
ja
call
lea
movsl
jg
stos
das
inc
or
test
ret
xchg
xlat
popf
dec
bound
lods
das
mov
mov
leave
pop
cwtl
xchg
jmp
xchg
xchg
fwait
push
dec
mov
add
and
bound
inc
mov
xor
mov
dec
pop
fst
leave
out
or
inc
fidivrl
fwait
popf
test
xor
mov
sbb
fsts
shlb
into
in
pop
popf
jl
sbb
movsl
outsl
ret
ljmp
jae
loopne
rcrb
aam
xchg
rclb
add
test
fsts
fisttpl
icebp
adc
pop
lock
and
and
pop
or
sbb
xor
push
jg
sarl
pop
mov
jg
daa
das
mov
mov
insl
pop
ds
sbb
arpl
xchg
aam
mov
sarl
xor
mov
push
sbb
pusha
pop
repz
cmp
and
xor
in
or
dec
scas
jns
addr16
mov
rolb
adc
adc
lret
sarl
inc
cmpsl
jge
and
adc
mov
arpl
movsb
mov
jbe
and
ja
test
inc
and
aam
dec
sub
and
inc
push
xlat
and
xchg
out
adc
adc
lcall
scas
sbb
cmp
cmpsl
inc
loope
loopne
fs
rcr
fwait
imul
or
pop
adc
push
arpl
out
sbb
push
in
add
and
and
jne
imul
xlat
fldt
sub
cmc
mov
add
pop
pop
jg
inc
sbb
shlb
and
out
mov
adc
and
insl
jnp
jp
fs
das
and
xchg
lret
mov
pop
add
mov
imul
pop
insl
rcrb
call
sbb
pop
rorl
lcall
cwtl
mov
sbb
xor
or
xchg
test
aam
out
jg
mov
loop
in
xchg
dec
sub
sub
fdivl
mov
fildl
adcb
cmpsl
call
das
rdseed
popa
repnz
jg
hlt
mov
insb
adc
loopne
fmuls
lods
ret
xchg
add
int
xor
pop
and
adc
jecxz
pop
out
into
mov
xlat
push
xor
xchg
push
call
loopw
scas
mov
pop
xor
jbe
in
push
das
test
iret
insb
in
sbb
dec
push
mov
test
push
hlt
ss
lods
iret
outsl
lds
push
push
and
pop
mov
push
daa
xlat
inc
mov
sbb
mov
adc
or
or
loopne
lea
mov
iret
xchg
pop
push
mov
mov
dec
jbe
aas
mov
popf
push
inc
mov
into
sub
fisubs
addl
push
fmull
std
ss
and
mov
mov
jo
cmp
sbb
or
out
cmp
mov
pop
jmp
mov
test
inc
mov
push
inc
sub
cli
aas
pop
loope
arpl
cmp
stos
push
pop
xchg
enter
cld
pop
cltd
pop
jp
lds
add
aam
xchg
sahf
sbb
leave
std
pop
jae
inc
xchg
lods
cmc
sar
sbbl
dec
lock
loope
xchg
cwtl
arpl
push
cmpb
mov
loope
xchg
ret
fcoml
lods
mov
sbb
loopne
mov
or
mov
mov
fidivs
push
pop
xchg
adc
repz
pop
xchg
sbb
cmc
add
repz
push
mov
pushf
dec
adc
outsb
or
test
mov
add
xchg
mov
pop
adc
cmc
cmp
les
data16
cld
aaa
dec
inc
jge
icebp
js
mov
cmp
and
popf
xchg
imul
pop
push
cmp
and
xor
aaa
dec
sbb
jb
test
fwait
cli
jae
mov
je
nop
fisttpll
and
ret
ret
pushf
add
or
dec
out
mov
fwait
adc
aam
push
xchg
pop
je
ffree
add
bound
adc
jb
or
clc
imul
jno
jg
mov
mov
add
xor
enter
jo
scas
adc
sbb
pop
jb
cltd
sbb
popf
inc
ret
xchg
lods
sarb
mov
xchg
test
pusha
dec
cmp
mov
aas
ret
repnz
fs
add
repnz
dec
sti
divb
push
xor
js
aas
sti
jp
call
inc
out
mov
jne
cmp
xchg
xor
lods
ljmp
sub
pop
or
fidivrl
aaa
fs
jae
push
loop
inc
add
inc
aam
adc
lea
mov
push
xchg
stos
pop
xchg
fisubl
insl
jbe
scas
push
rorb
mov
pushf
add
out
jl
push
push
jmp
repnz
ljmp
sub
mov
shlb
stos
adc
shrb
daa
push
pop
in
xor
inc
mov
mov
xchg
push
les
aad
xchg
pop
addr16
dec
mov
jecxz
out
xchg
jnp
mov
xor
mov
ss
insb
and
adc
std
and
push
add
lret
inc
sbb
jae
mov
lret
inc
inc
addr16
cmpsl
aaa
scas
call
pusha
and
sbb
adc
pop
fcomps
out
clc
mov
movsb
jmp
pop
push
add
jmp
xchg
and
pop
adc
jb
cld
call
out
pushf
ror
adc
adcb
lds
pop
call
and
les
mov
jle
fistpl
movsl
in
ja
mov
mov
lret
hlt
jb
hlt
lret
cmp
movsl
fdivl
or
mov
and
in
sbb
sub
push
fdecstp
fmul
pop
ds
push
loopne
rcl
fs
outsb
push
les
xor
cs
cmpsb
ljmp
rcrb
mov
xor
xor
push
icebp
jae
and
cmc
movsb
sub
lods
arpl
add
mov
jecxz
push
pop
mov
in
cmp
xor
add
jmp
inc
pushf
mov
je
mov
cmpsb
push
loop
arpl
fdivl
push
mov
mov
mov
push
jmp
fnsave
scas
jg
dec
mov
stos
subl
xchg
and
aam
jo
cltd
inc
inc
sbb
push
jns
mov
test
pusha
leave
push
fst
iret
jge
mov
pop
int
pop
mov
xchg
dec
xchg
shr
add
fcompl
nop
sub
clc
push
rcr
mov
pop
add
das
sbb
adcl
adc
pop
fists
xchg
jae
cmp
and
fwait
add
mov
cmp
dec
adc
and
ret
fucomp
and
and
and
dec
xor
dec
insb
std
xor
insb
cmpsl
addr16
mul
and
movsl
bound
mov
int3
push
repnz
mov
imul
push
sub
and
mov
add
int
cmpsl
mov
mov
aas
aaa
or
push
lret
mov
scas
shl
ja
pushf
imul
imul
add
pop
pop
xor
xchg
lahf
xor
arpl
cmp
xor
outsl
or
jnp
inc
cmpsl
clc
cmp
lcall
repnz
movsb
adcb
js
adc
mov
lgs
lock
adc
mov
add
leave
imul
lahf
push
jb
jno
stos
lods
leave
xor
sbb
mov
out
inc
mov
in
mov
add
pop
jnp
pop
mov
std
test
push
mov
cmc
add
popf
adc
sahf
divl
adc
pop
pushf
push
pop
dec
push
inc
ds
test
rcll
sub
lds
xchg
call
movsb
mov
es
cmp
je
push
dec
loopne
outsl
jo
test
test
push
jg
cwtl
mov
les
xor
movsl
sbb
movsb
and
sub
scas
sub
iret
sti
repz
or
repnz
inc
pop
sbb
notb
mov
je
adc
xor
xor
dec
mov
adc
xchg
test
mov
popa
sti
pop
lret
bound
ss
fs
sub
jo
fisttpl
xor
lret
outsl
das
mov
pop
sbb
and
lret
loope
ja
int
add
push
loopne
pop
hlt
imul
mov
fisttpl
js
gs
pop
xchg
add
jns
inc
add
mov
movsl
jo
jl
adc
mov
mov
push
mov
pop
movhlps
mov
out
adc
test
nop
mov
mov
inc
lret
int
test
or
pop
jae
xor
mov
jae
mov
jl
sub
cmp
adc
jns
dec
sbb
addr16
sub
xchg
push
xchg
mov
pushf
aad
push
xor
xor
je
push
je
arpl
xor
nop
mov
adc
sub
cltd
subl
mov
push
bound
sbb
les
addr16
lds
add
xchg
cmc
jb
push
jl
inc
adc
std
mov
test
lret
shrl
bswap
xor
xchg
in
lods
xor
shll
and
mov
ds
nop
mov
cld
push
inc
std
add
cmp
inc
test
arpl
jno
xor
lods
loop
cs
ja
out
mov
fsqrt
outsl
inc
into
cld
mov
push
sbb
xchg
inc
or
aas
adc
or
test
js
scas
cwtl
faddp
cmp
xchg
push
add
out
or
xchg
and
in
sbb
mov
insl
or
int
shr
sbb
mov
jne
lea
cwtl
add
sub
mov
mov
iret
ljmp
cmp
loopne
inc
ja
jne
inc
mov
cmpsl
shrb
imul
cmc
in
loopne
push
pusha
jnp
xor
mov
inc
cmp
jge
adc
stc
test
icebp
fcomps
cmp
push
fnstcw
or
sbb
jne
mov
in
lret
notl
push
mov
aaa
push
mov
adcb
mov
mov
sub
xchg
fildll
enter
sub
aas
dec
push
or
mov
outsl
ss
leave
hlt
insb
mov
cs
sub
mov
rol
stos
negl
dec
ds
jmp
pop
mov
sub
lods
jne
gs
ljmp
mov
dec
adc
or
push
insl
add
add
xor
sub
mov
add
xor
dec
push
xor
dec
inc
sbb
push
xor
adc
or
adc
andl
pop
dec
sbb
outsb
popa
ds
test
shrb
mov
cmp
xchg
push
ljmp
lcall
push
or
nop
sub
lods
bound
gs
pop
mov
xchg
push
nop
popf
adc
in
insl
mov
mov
inc
lock
pop
sbb
jnp
cli
or
add
ficoml
data16
push
xor
inc
lods
mov
les
mov
and
xor
into
adc
mov
or
es
popa
push
push
ret
pop
sbb
lock
imul
popa
cmp
jecxz
in
push
xchg
ljmp
jmp
icebp
xor
inc
jmp
xchg
cs
bound
xchg
pop
adc
push
or
push
ficoms
js
push
outsl
int3
lods
aaa
frstor
clc
xor
sarb
sub
dec
leave
inc
gs
fidivrl
js
pop
add
movsl
xchg
test
divl
add
xchg
pop
mov
inc
inc
das
sbb
cwtl
mov
divl
jo
sahf
loop
lea
mov
jle
push
in
mov
mov
xchg
rcrl
dec
add
ljmp
int
mov
inc
push
xchg
mov
cmp
jl
jge
or
fidivl
jl
insl
lret
mov
or
aad
cmpb
cld
sbbb
xlat
adc
fistpl
push
push
test
pop
test
push
pop
jb
mov
and
stos
xchg
loopne
push
scas
out
cmc
or
jge
and
popf
test
mov
fs
aaa
xchg
adc
stos
add
jno
push
pop
loop
or
push
and
pop
mov
inc
stos
mov
int3
jns
and
jge
outsb
adc
loop
ds
cmp
push
adc
repz
mov
sbb
lcall
xor
rcl
inc
adc
mov
lahf
pop
push
nop
push
test
incb
dec
xchg
orl
mov
testl
imul
shll
jns
mov
push
mov
outsl
clc
cli
mov
popf
jno
in
icebp
adc
pop
lock
adc
pushl
stc
inc
int3
mov
sub
and
stos
cwtl
aad
out
in
push
inc
movsl
mov
sub
jb
add
or
jno
popa
push
jno
sub
cmp
xchg
ljmp
and
adc
adc
add
out
cmp
pop
fstps
pop
sbb
fisubl
jno
sub
rclb
fisubrs
jb
aaa
xor
fwait
repz
pop
scas
cmp
aad
rcr
lahf
and
mov
leave
jns
out
push
js
push
fs
cmp
sbb
daa
or
lock
adc
gs
or
mov
dec
adc
pop
sbb
or
push
fwait
popa
loopne
sbb
dec
addr16
in
popf
imul
dec
mov
inc
je
lcall
xor
pop
fisttps
shll
ficompl
adc
enter
js
arpl
es
push
cmovne
mov
jne
fdivr
idiv
das
nop
mov
jecxz
addr16
mov
jp
cmpsl
addb
inc
data16
aaa
mov
repz
test
fcoms
adc
hlt
push
adc
xchg
js
insb
fstpt
mov
lds
jnp
sub
mov
pop
push
sti
lret
cmpsb
stos
mov
cmp
mov
call
data16
jo
sbb
mov
adc
ficoml
mov
push
aas
xchg
pop
sti
sysenter
dec
ret
mov
lock
cmpb
jge
lahf
fnstenv
cwtl
lods
add
hlt
cli
loope
js
add
arpl
mov
add
outsb
enter
inc
mov
fs
jno
ret
jg
or
lock
fbld
and
jns
xchg
loop
mov
enter
pop
sub
mov
mov
hlt
iret
cmpb
lret
inc
xor
and
and
adc
or
xchg
rcll
jmp
mov
addb
mov
push
test
imul
js
sbb
lahf
xchg
lods
ret
ret
sub
insl
mov
icebp
sub
icebp
add
sbb
ret
push
dec
pop
ljmp
xor
mov
xor
divl
in
push
mov
ficoms
lahf
push
andb
mov
inc
xchg
test
push
dec
push
jp
fidivrl
mov
sarl
mov
push
negb
icebp
ss
or
in
sbb
andb
test
or
repnz
sbbl
scas
cmovbe
lcall
call
testl
xor
pusha
inc
pusha
sub
mov
inc
push
scas
mov
push
push
mov
or
mov
or
add
mov
cmpl
inc
jae
jbe
pop
shll
out
cmp
enter
or
mov
leave
in
sbb
pop
loop
jbe
addr16
out
inc
jae
jnp
pop
mov
pop
pop
dec
mov
out
scas
mov
add
push
mov
mov
sub
stc
in
jge
mov
aam
outsl
xor
int
sub
insl
mov
dec
pop
cltd
xlat
xlat
in
mov
pop
in
inc
pop
imul
jmp
jae
lock
jecxz
xchg
fists
fnstsw
mov
add
or
lcall
push
cmp
dec
loopne
add
fwait
out
mov
mov
into
adc
scas
and
sarb
dec
cmp
or
cli
mov
xor
fcmovnu
pushf
pop
int
or
sub
cli
xor
nop
out
cld
xor
xchg
bound
sub
sub
inc
ss
xor
or
sbb
mov
sti
push
xor
cmc
fcmovne
enter
adcl
push
hlt
cmp
push
clc
xchg
mov
push
adc
lcall
sti
cmp
mov
pop
mov
cltd
les
xchg
jmp
jg
cmp
push
add
dec
mov
ds
cs
fwait
gs
test
xchg
push
inc
xor
data16
aam
sub
xlat
jecxz
outsl
ss
mov
push
xor
and
xor
insl
sub
pop
sub
mov
daa
lcall
mov
cmp
xchg
xor
xor
pop
add
dec
mov
mov
xchg
xchg
or
mov
adc
sub
pop
hlt
pusha
daa
lret
xchg
mov
adc
jno
addr16
or
cmp
xlat
lahf
test
lret
fldt
jge
outsl
add
mov
sbb
outsb
fucomip
lods
push
outsl
jl
test
js
push
scas
adcl
mov
mov
xchg
mov
insb
inc
jecxz
dec
scas
insw
add
cmp
pop
cmpsb
xchg
int
lret
ja
movsb
cmp
push
mov
mov
jo
sbb
pushf
fnsave
jg
cmp
or
push
jl
loope
mov
xchg
ljmp
pop
jb
mov
lcall
push
pop
mov
fcompl
cmp
stos
dec
xchg
xchg
add
xor
mov
cmpl
ret
dec
pop
sbb
cltd
test
mov
stc
fucomip
dec
mov
or
inc
xor
push
addl
and
jae
jo
or
ficoms
adc
imul
ja
jl
mov
mov
sbb
jns
fisttpl
sbb
lock
and
xor
xchg
sahf
mov
outsl
std
pop
mov
int3
jns
std
push
stc
mov
sub
fdiv
and
lea
fwait
mov
pusha
jge
sbb
pop
jae
out
pop
js
mov
mov
sbb
rorb
sarb
mov
shlb
inc
or
pusha
lods
mov
inc
lahf
int
lcall
xchg
mov
jle
repnz
push
out
stos
lret
jmp
and
or
push
dec
cmp
std
xchg
adc
or
cld
pop
push
jle
sub
insl
int
test
rcll
push
test
mov
sahf
cmp
xchg
dec
cs
xchg
ja
jae
xchg
inc
xlat
fwait
int3
jae
and
lret
sbb
cmp
xchg
jae
add
je
nop
jnp
inc
leave
cltd
clc
subl
sti
push
jle
mov
jle
imul
add
movsb
outsb
inc
add
les
or
aaa
inc
test
enter
mov
xor
xor
add
imul
or
test
out
int3
adc
ret
lcall
and
push
mov
jmp
push
xchg
pop
sub
lahf
sahf
sbb
and
dec
rclb
and
cmpsl
js
popa
pop
fidivs
cmp
out
in
add
int3
popa
mov
mov
cld
mov
sub
push
shl
mov
pusha
jge
stos
jecxz
xor
add
inc
sbb
sahf
jnp
mov
fs
cli
leave
mov
cmp
cmpsb
cmp
add
pop
mov
push
fidivrl
out
pop
push
adcl
shll
add
mov
cmpl
test
xchg
inc
mov
mov
xchg
push
cmpsl
cmp
lea
leave
dec
cmp
xchg
push
lds
pop
inc
mov
lret
jnp
jb
jb
adc
orb
aas
sub
pop
push
mov
in
or
pop
outsl
inc
push
push
lret
fsubrs
frstor
imul
xchg
stc
dec
enter
sub
bound
insb
sbb
popa
insb
cmpsb
int
or
lea
clc
mov
mov
je
add
jl
add
mov
push
sti
ds
flds
vmovmskps
xlat
lret
push
in
popf
sti
or
xchg
outsl
enter
ja
les
inc
lcall
in
aad
scas
inc
push
adc
and
inc
idivl
int3
and
scas
cld
cmp
stos
in
lret
push
xchg
ljmp
pushf
mov
and
loope
sub
cmpsb
ficoml
and
cltd
mov
and
fdivrl
and
mov
arpl
rorl
inc
xchg
lahf
pop
adc
dec
jl
pushf
xor
ficoms
dec
sahf
loop
jnp
and
es
sbb
cmp
movsl
cmp
movsl
add
or
std
jl
mov
subl
or
adc
test
push
or
imul
adcb
aas
fwait
and
xor
and
mov
test
in
loope
mov
data16
scas
out
mov
jae
inc
stos
dec
std
mov
xorl
mov
mov
push
repz
push
shl
std
dec
aaa
inc
adc
cmp
jge
call
pop
es
push
das
stos
mov
test
cld
jmp
rcrb
mov
sbb
inc
je
arpl
push
scas
sti
popf
fwait
sub
pusha
stos
ret
xchg
inc
mov
sbbl
add
add
mov
icebp
cmp
cmp
mov
jnp
pop
faddl
in
and
icebp
in
or
sti
flds
mov
scas
cmp
enter
cli
and
xchg
push
sahf
pop
cs
mov
inc
fwait
ret
push
test
mov
dec
insl
in
outsb
in
lods
lcall
ret
xor
cmc
inc
fcomp
fwait
jecxz
orb
aaa
sbb
imul
mov
cs
sub
sbb
mov
fdiv
je
mov
mov
sbb
sub
int3
sub
mov
dec
hlt
jg
lock
mov
mov
add
mov
or
adc
push
test
stos
pop
lret
rcrb
enter
clc
test
andb
out
hlt
mov
ret
es
inc
mov
pop
sahf
insb
and
dec
fcomi
cmp
sub
fnstenv
pop
mov
fdivl
data16
out
pop
pop
sbb
gs
daa
add
bound
ljmp
aaa
das
imul
inc
sbb
push
lahf
sbb
cld
add
dec
xchg
adc
xchg
jnp
inc
pushf
xor
lret
dec
pop
stos
xor
push
ds
pop
mov
adc
sub
xchg
xor
or
sbb
les
test
call
outsb
push
out
rorl
lods
mov
pop
imul
cltd
pusha
or
stos
int
jmp
pop
sahf
dec
aad
mov
ret
adc
xchg
testl
pusha
adc
inc
lret
jo,pn
push
rcll
xrelease
fnstcw
add
add
mov
aad
mov
repz
rep
and
sub
push
les
inc
fcomi
and
mov
rcll
call
cld
adc
mov
test
push
push
mov
add
adc
cli
add
fcoms
leave
idivb
xchg
add
es
idivb
cmp
fdivs
mov
dec
lahf
sbb
ljmp
and
xchg
imul
sahf
sbb
in
xor
mov
aam
add
push
sbb
shll
inc
adc
inc
cmc
adc
movsl
pop
add
loopne
jae
mov
mov
push
std
dec
add
testb
clc
outsl
or
cpuid
ret
xchg
xor
int3
lds
daa
mov
inc
dec
repz
push
mov
xlat
pop
dec
mov
sahf
mov
ds
imul
aaa
jp
adc
fwait
movsl
loop
add
dec
stos
lahf
and
dec
imul
insl
mov
pop
das
popa
mov
hlt
sbb
sbb
adc
popa
cmc
aad
lret
mov
gs
dec
sbb
sarb
data16
mov
outsl
rol
push
scas
xor
sti
std
mov
pop
push
popf
fistps
das
cmp
daa
push
cmp
or
cmc
or
pop
out
inc
jle
and
lods
jnp
outsl
add
sahf
or
das
cmp
shl
xor
jo
pop
clc
sub
and
loopne
adc
cmpsb
push
pop
idivl
loopne
sar
or
or
inc
cs
mov
xchg
cmpsb
fs
and
sub
mov
das
mov
cmp
push
or
mov
mov
mov
sarl
mov
sbb
push
xchg
rcrb
pop
shr
sub
jle
lcall
adc
inc
sti
pop
je
jo
push
lret
enter
jle
and
mov
dec
xchg
jns
push
pop
xchg
inc
xchg
sub
pop
inc
cld
lret
call
fstpt
jnp
cmp
shr
test
lcall
mov
addl
lea
data16
mov
xor
iret
pop
inc
jo
cwtl
inc
int3
mov
mov
mov
dec
into
or
cmp
dec
inc
and
sub
test
pop
sahf
aas
ret
int
mov
fistl
fldcw
xlat
mov
mov
popa
and
test
arpl
push
add
ret
stos
dec
xchg
push
shlb
and
dec
sub
sbb
cmp
ja
push
or
insl
and
pop
push
and
jae
adc
cmp
loopne
adc
in
mov
jl
fcmovb
jmp
fmuls
movsb
xchg
fcomip
mul
popa
lds
fistps
enter
cmp
push
and
dec
push
jbe
filds
push
pusha
push
pop
inc
mov
fld
lods
cmpsb
lret
xor
xor
dec
fs
sub
test
mov
ja
pushf
push
adc
dec
mov
testl
insb
inc
or
and
imul
xchg
fsts
sub
push
or
repz
and
pushf
ret
mov
mov
dec
xchg
mov
cmp
push
es
test
stos
lahf
lcall
sbb
mov
and
inc
sub
jle
movsl
dec
xor
push
mov
inc
pop
gs
pushf
lcall
xchg
in
pop
or
ljmp
jns
and
aad
jne
fdivrs
push
push
je
mov
daa
dec
dec
mov
mov
sub
cmp
xchg
ret
std
cmpsb
jns
cmp
or
push
mov
jno
test
call
xor
sbb
lods
pop
mov
pop
mov
fbld
test
scas
ja
adc
addr16
xor
test
daa
adc
add
pop
ret
cmpl
sub
es
sarb
pusha
mov
aaa
sbb
sub
inc
fcoms
push
mov
bound
sub
inc
xor
sub
mov
mov
mov
xor
sub
sahf
xchg
jle
xchg
outsl
pop
hlt
out
into
repnz
push
cmpsb
dec
mov
ret
movsb
pop
mov
mov
test
movsl
xlat
mov
cs
mov
lret
inc
fldt
adc
push
adc
movsb
roll
inc
test
and
push
sbb
dec
mov
out
xor
outsl
sbb
imul
jg
pop
into
jo
int3
or
pop
pslld
loopne
rcl
aam
mov
dec
or
mov
adc
aaa
xor
lods
sti
or
xor
int3
stc
pop
pop
cld
jp
lea
jg
sbb
add
outsl
dec
and
xor
mov
inc
shrl
inc
or
lcall
jmp
sub
dec
jae
clc
aaa
lea
mov
in
loope
jns
fisubl
imul
push
fwait
add
aas
push
and
repz
mov
mov
cmpsl
sbb
mov
add
inc
iret
push
out
subb
add
out
movsl
stos
into
addr16
dec
mov
imul
aam
sbb
and
dec
jno
or
xor
push
cmpb
xchg
insb
sti
dec
out
popa
cld
push
xchg
rorl
xchg
sbb
pop
pop
test
test
or
push
daa
in
stos
xchg
mov
iret
stos
mov
sti
stos
sbb
ss
iret
cld
fmul
sbb
nop
xchg
scas
mov
sbb
pushw
mov
aas
inc
movsl
mov
push
adc
add
ret
mov
add
addl
sub
mov
je
adc
repz
pop
psubd
adc
cmp
jb
out
cmpl
sub
sbb
sahf
push
push
sub
xchg
je
aam
add
imul
ret
jbe
add
daa
push
cmp
and
aas
in
pushf
push
lock
cmp
cmp
rcrl
and
aad
pop
jg
pushf
pusha
cmp
fs
out
ljmp
sub
sub
xlat
and
xor
jg
push
mov
mov
jmp
out
in
push
mov
ret
xor
sub
stos
loope
or
mov
fnstcw
sub
sbb
mov
or
cld
es
ja
hlt
lods
inc
xor
pop
pop
pop
dec
outsb
dec
fdivr
test
adc
data16
cs
xchg
inc
fcmovne
xorl
mov
lods
mov
stos
jb
jg
les
inc
mov
mov
xchg
mov
sbb
shrb
mov
pop
mov
mov
mov
ds
adcb
lret
hlt
dec
push
std
fsubs
fnsave
sbb
call
gs
add
mov
pop
dec
add
leave
dec
pop
ss
inc
aam
mov
push
jno
js
sbb
jg
cli
sbb
sub
sbb
dec
push
cmp
push
test
lsl
inc
add
enter
fdivr
pop
mov
rclb
fdivrp
push
jecxz
pusha
icebp
push
jo
inc
xor
push
xor
rcrl
cmc
sub
shll
popf
inc
jle
dec
push
mov
faddp
mov
lahf
cwtl
cmp
ret
jns
pop
inc
pop
inc
pop
sub
cmc
call
imul
bound
push
pop
sti
negb
mov
fistpll
roll
xor
fstps
mov
sub
je
push
fldt
mov
stos
adc
popl
adc
mov
cmc
mov
mov
aas
xchg
jg
mov
mov
fsubrl
dec
adc
sbb
je
scas
ds
pushf
pusha
fidivs
sub
xor
mov
decl
insb
xor
and
fcmovu
shlb
inc
aam
lret
test
push
clc
andb
ret
cmp
ljmp
rclb
inc
int3
push
mov
es
in
loope
jae
stos
xor
inc
sahf
mov
ret
jl
and
xor
imul
xor
movsl
divb
push
mov
push
mov
aas
ret
cmp
cmp
bnd
pop
pop
out
xchg
add
cmp
mov
cmp
push
in
iret
and
fistps
or
bound
mov
inc
out
clc
inc
fadds
push
adc
aaa
jl
stos
xorl
out
adc
cmpl
xchg
jmp
and
pusha
sarl
repz
sbb
push
cltd
adc
stos
push
mov
dec
add
jmp
loope
xchg
fstl
push
xor
mul
push
into
das
test
cli
cmc
lret
mov
push
and
cmc
pusha
pop
out
xchg
repnz
jle
loopne
pop
xchg
ss
fwait
pop
test
push
mov
nop
jecxz
push
in
adc
das
or
outsl
bound
mov
outsb
sbb
adc
xchg
xchg
add
mov
push
popf
cmp
adc
aam
mov
sar
jg
mov
lcall
and
cli
add
aam
push
dec
popf
cmp
adcb
mov
mov
xchg
jae
push
sbb
es
loope
dec
int
xor
push
xchg
add
std
gs
stc
and
data16
jo
fstl
loope
dec
jecxz
or
ret
pop
sub
cmp
mov
imul
aad
xor
sbb
jmp
xor
xor
fisubl
ds
aad
loopne
xlat
jns
add
mov
sbb
test
pusha
dec
sbb
scas
ret
push
sbb
mov
es
cmpsb
ja
mov
mov
aaa
mov
popf
int
ljmp
lcall
mov
cld
xor
adc
nop
pop
std
or
or
xor
push
push
adc
jg
jno
mov
out
inc
xlat
inc
pusha
sub
jge
lcall
or
lock
and
lret
scas
jle
stc
les
lock
sub
add
stos
mov
jge
cwtl
mov
mov
insb
cld
push
mov
and
andl
mov
jg
xor
sub
sub
pushl
imul
rolb
nop
sbb
add
jle
divl
addl
jbe
sbb
add
in
or
fwait
insl
cli
inc
es
xor
mov
mov
ja
jecxz
mov
es
nop
adc
lcall
sbb
jne
lea
dec
std
mov
pop
into
sbb
xchg
leave
das
pop
mov
cmp
lret
int3
cmp
mov
fidivs
mov
inc
adc
cmp
xchg
or
popa
out
and
je
jns
sbb
xchg
in
aaa
scas
test
call
sub
add
andl
call
or
or
repz
add
xor
testb
sar
push
repz
add
ret
ja
xor
push
mov
xor
jno
stos
lods
mov
mov
int
popa
in
xor
push
out
and
js
addb
test
movl
cli
pop
mov
mov
adc
jbe
das
mov
add
test
loopne
xchg
sub
pop
inc
cmp
and
lods
test
add
lea
inc
sbb
mov
ljmp
stc
push
fdivrp
das
mov
mov
mov
adc
ljmp
adc
imul
icebp
sub
mov
fstpt
imul
movsb
cmp
sti
sbbl
icebp
and
testb
jnp
mov
xchg
sbb
push
mov
popf
push
idivl
adc
cmp
lret
mov
mov
and
adc
sub
add
sub
inc
enter
mov
test
aas
ljmp
xchg
sub
mov
adc
into
add
daa
pop
jno
xchg
sub
push
mov
scas
stc
popf
add
pop
sub
scas
shlb
jnp
insb
jg
push
mov
push
sub
inc
enter
sub
sbb
dec
andl
sub
lods
insl
test
test
push
in
icebp
shll
jle
stos
test
xchg
mov
cwtl
mov
xchg
fisubrl
pop
ljmp
icebp
mov
pop
stos
cmp
jo
mov
push
sbbb
std
lret
loope
pop
inc
les
inc
dec
dec
out
jge
push
imul
ss
dec
or
mov
outsb
cmp
pop
sbb
jnp
lahf
enter
int
ljmp
lods
inc
xchg
cmp
sbb
out
xchg
inc
mov
inc
fbstp
push
testb
inc
ret
ljmp
in
mulb
lock
hlt
xor
insb
dec
fmull
adcb
ja
int3
or
repnz
sbb
test
insb
inc
jmp
mov
and
add
gs
pop
dec
adc
jns
jp
mov
cmpsb
jp
pop
xchg
into
aaa
mov
cmpsb
jbe
loopne
adc
cltd
stos
sbb
int
jp
imul
shr
mov
out
adc
cwtl
push
sbb
mov
mov
js
add
repz
pop
mov
mov
stc
loopne
insl
mov
subl
push
movsb
inc
sbbl
pop
sub
cwtl
cmp
je
out
call
testl
movsb
nop
or
push
pop
adc
in
shlb
out
or
xchg
mov
mov
xchg
push
idivb
rcl
mov
out
mov
test
ss
cli
push
dec
cmp
sbb
lahf
and
ljmp
int
ror
jnp
mov
test
into
adc
daa
dec
test
and
stos
adc
je
xor
dec
mov
test
rolb
ja
sahf
cmp
sbb
xchg
stos
push
xor
or
leave
lret
add
pusha
aad
out
mov
xor
sub
in
cs
subb
subl
movb
push
aam
fwait
gs
adc
imul
pop
cmp
cwtl
cmp
adc
push
cld
jbe
push
cmp
xlat
out
in
or
or
and
add
add
ret
xor
add
nop
int
inc
mov
mov
dec
and
xor
into
cmp
stos
cs
cmp
xchg
out
mov
lds
push
and
es
push
xchg
adc
fdivrl
out
jnp
in
dec
mov
mov
popf
outsb
int3
out
push
daa
fstpt
pop
pop
test
push
push
and
dec
and
push
or
mov
into
jp
hlt
shr
loopne
inc
out
repz
fwait
pushf
popf
test
add
sub
push
mov
push
sbb
sbb
pushf
jbe
add
mov
push
mov
sbb
push
sub
incb
jg
bound
sbb
lods
pop
lods
pop
mov
cltd
aaa
pushf
bound
mov
cli
push
jg
paddq
inc
xchg
xchg
or
imul
push
xchg
mov
lahf
push
inc
mov
xor
push
jo
outsb
cmp
sti
test
stos
jge
addr16
in
add
lods
sbb
ljmp
pushf
cmp
mov
cmp
cli
in
jbe
fstpl
lret
in
fnstsw
push
testb
pop
mov
aaa
push
mov
add
pop
cmp
mov
xchg
push
jp
insl
daa
pop
push
inc
lcall
sbb
mov
inc
lret
mov
and
enter
push
cwtl
popf
dec
aas
stos
and
mov
add
mov
adcl
or
test
jmp
and
mov
out
pop
inc
out
or
cltd
pop
stos
adc
pop
je
xchg
and
ret
cmp
pop
int
test
repnz
cmp
int
jb
out
and
adc
mov
cltd
push
js
test
int
outsl
xor
jns
jns
sub
out
jecxz
sub
movsl
insb
cmc
pop
aad
rclb
add
popa
cmc
call
cwtl
nop
clc
loope
dec
fimull
in
fnsave
pushf
add
insl
xchg
rclb
xor
std
test
shl
jecxz
mov
pop
xchg
iret
lock
jge
daa
cmp
dec
out
jmp
ftst
loop
xchg
popl
in
mov
mov
sub
push
cmpb
sub
push
pop
and
pop
cmp
pop
mov
adc
mov
cmpl
adc
loopne
imul
and
push
int3
push
fistpl
daa
shll
aas
add
cmp
adc
test
or
out
mov
fisttpll
add
shlb
data16
rcrb
cvtpi2ps
sub
add
xor
and
fwait
subb
jmp
loopne
divl
xchg
ljmp
push
xchg
cli
inc
add
or
lds
int
mov
jge
sbb
add
in
test
xchg
cld
ret
sub
push
clc
lcall
or
addl
mov
pop
sub
xchg
adc
xchg
mov
xchg
jns
ret
push
fs
imul
xchg
sar
ja
mov
xor
cmp
testl
ljmp
in
or
std
pop
sbb
lcall
add
insl
add
stos
movsl
imul
sub
sti
mov
add
ret
mov
inc
pop
and
icebp
bound
xlat
cmpsb
clc
hlt
sub
pushl
or
das
ret
neg
shll
sbb
push
sub
xchg
xor
fildl
std
lock
sub
pushf
pusha
cwtl
jne
or
mov
jb
cld
jno
cmp
sub
xchg
pop
mov
mov
or
jne
cmp
addr16
scas
push
xorb
xor
mov
and
jbe
cs
stos
dec
adc
lods
int
ret
decl
es
xchg
das
push
or
dec
cmp
xchg
and
cmp
xchg
decb
data16
pop
mov
jmp
decb
cmp
stos
or
test
rcr
das
xchg
inc
test
enter
sbb
xchg
gs
lret
xor
js
dec
fs
dec
ljmp
jge
sub
jge
xor
fisubrs
push
xor
ds
dec
shll
adc
push
dec
adc
jne
xor
add
cmp
push
cmc
cmp
add
mov
insb
mov
mov
icebp
aaa
sbb
xor
mov
inc
out
imul
mov
inc
mov
cltd
mov
push
sub
fsubrp
push
cmpb
movsl
shll
mov
stc
lahf
add
fsubrl
cwtl
arpl
jbe
lods
sbb
push
sbb
push
pusha
cmpsl
and
push
jecxz
inc
jge
test
jne
cmp
sbb
insb
mov
cld
test
in
cmpxchg
cmp
iret
jae
lea
jl
pop
add
pop
dec
cs
aad
fwait
icebp
pop
xchg
std
xchg
push
out
iret
aad
lret
jp
fwait
sbb
rolb
dec
shlb
in
lock
xor
dec
inc
shlb
or
pop
mov
repnz
es
in
popl
pop
mov
jle
and
mov
push
loopne
pop
sbb
into
xlat
stos
add
mov
mov
mov
inc
iret
add
out
faddl
test
cmp
push
aas
inc
mov
es
inc
cwtl
in
lods
divb
out
ret
es
ja
jmp
mov
scas
mov
pop
jl
mov
xchg
xchg
or
das
in
pop
mov
or
mov
mov
xchg
jae
in
push
std
repz
add
loop
jecxz
dec
daa
mov
jl
or
out
pop
inc
lret
inc
pop
rcrb
je
leave
repz
test
cmp
loop
push
dec
icebp
hlt
in
push
cmp
lods
ds
xchg
bound
lods
addl
inc
or
icebp
push
jne
xchg
push
pop
jae
aaa
and
orb
cwtl
add
or
sbb
push
dec
stos
xchg
jle
fwait
shrl
dec
sub
je
push
mov
dec
jp
pop
fiaddl
pop
aam
add
inc
push
and
mov
in
leave
add
jne
in
xor
and
add
shrb
mov
sbb
mov
rcl
xor
dec
pusha
dec
test
and
fyl2xp1
movsb
cmp
nop
cld
inc
inc
loope
mov
mov
xchg
in
cmpsb
cmp
scas
mov
fwait
push
xchg
adc
fcoms
mov
cmp
repnz
cltd
or
mov
push
mov
jo
lret
dec
pop
mov
push
fld
mov
or
jl
mov
dec
mov
jl
test
cli
rorl
mov
repnz
xchg
adc
inc
mov
fbstp
mov
mov
push
cmp
stos
fistl
fnstcw
mov
mov
hlt
and
xor
xor
cs
lds
mov
hlt
fbstp
pop
outsl
sbb
int3
mov
mov
sub
xchg
mov
mov
jno
test
imul
pop
jp
push
shll
or
mov
aad
out
roll
dec
cltd
rcrl
inc
or
aam
cmpsb
gs
fisttps
orb
shlb
shlb
xor
xchg
jne
ret
jg
add
xchg
outsl
popf
dec
pushf
shll
jle
mov
jl
xchg
add
push
xlat
push
sbb
iret
jae
pop
xor
push
xorl
jmp
or
push
jnp
mov
xchg
shll
pop
outsl
lret
jl
xchg
jae
fists
push
inc
mov
xchg
insl
xor
cmp
shl
popf
push
mov
sti
cmp
cld
push
and
outsl
mov
push
lcall
test
sub
addb
push
or
push
push
stos
cmp
das
xchg
cltd
out
shrb
mov
mov
or
xor
mov
sub
cmp
cmp
jnp
sbb
push
add
iret
and
jmp
fsubrl
pop
adc
sti
sub
es
ss
call
dec
push
ss
push
inc
pop
push
mov
sbb
or
dec
outsl
lods
cmp
mov
push
inc
ja
add
sbb
arpl
mov
mov
aam
mov
lea
mov
jecxz
ret
mov
jmp
test
sub
rclb
mov
sbbl
shr
daa
lcall
push
xchg
push
test
pop
cwtl
mov
pop
mov
movsb
aad
lcall
or
test
sub
dec
ficompl
pop
aad
cmpl
arpl
xchg
call
mov
mov
mov
jg
idiv
fsub
repz
and
shrl
push
pop
xor
mov
icebp
inc
sbb
stos
pop
mov
pop
in
ret
mov
cli
enter
lods
pop
and
xor
mov
push
or
mov
add
outsb
les
test
addr16
decb
mov
aaa
pop
andl
cmp
lret
lcall
pop
inc
pop
inc
lds
add
in
push
call
addr16
cld
xchg
jno
sbb
fidivl
outsl
add
xor
inc
mov
pop
add
pop
push
dec
adc
into
mov
cli
sbb
test
xchg
dec
push
pop
shll
sbb
mov
or
ret
inc
int
xor
mov
and
fs
lods
insl
jg
sub
push
pop
and
push
pop
ret
jmp
or
pop
std
mov
push
lods
xor
int3
pop
push
loop
pop
and
sbb
mov
inc
xchg
scas
fucomip
call
jle
xor
ja
out
lods
ljmp
daa
xchg
fisttpl
mov
mov
imul
adc
xchg
mov
test
sbbl
out
jno
adc
sub
pop
dec
mov
xchg
das
aam
cs
dec
out
pop
fidivrs
dec
mov
jle
xchg
nop
mov
imul
push
repnz
push
push
test
aas
mov
out
ljmp
jbe
sub
pop
jge
or
xchg
cmp
mov
push
push
mov
mov
nop
adc
aad
mov
ss
lahf
jl
mov
xor
addb
repz
xchg
adc
sub
mov
jmp
shl
jb
jbe
test
sub
add
push
sahf
add
dec
jnp
adc
test
adc
push
test
push
mov
test
mov
or
push
es
fnsave
fcomi
push
pushl
out
int
dec
xchg
xor
sahf
pop
xchg
sbb
shlb
loopne
aad
xchg
pop
pop
inc
push
int
int3
pop
sahf
sub
cmp
loop
scas
fsts
mov
mov
push
push
aaa
xchg
dec
test
jecxz
pop
pop
pop
aam
add
leave
rorl
mov
mov
out
pop
ss
dec
xor
sub
mov
mov
cwtl
xchg
cmpsb
adc
xchg
ficompl
int3
lds
stos
push
sbb
scas
add
scas
dec
int3
and
push
out
add
jno
xor
pop
lcall
jmp
adc
push
mov
jbe
jmp
xchg
loop
call
lret
or
sub
insb
mov
push
clc
xchg
data16
lret
cmp
mov
jnp
mov
jge
mov
mov
dec
and
js
mov
test
push
mov
add
mov
lret
dec
mov
mov
cmp
test
inc
aam
mov
xchg
sbb
das
movsl
mull
push
dec
dec
pop
ja
push
pop
sub
adc
jno
lret
rorb
mov
mov
je
jecxz
fiaddl
add
adc
stos
mov
idivb
fnsave
ljmp
xchg
jmp
jbe
fbstp
adc
outsl
mov
out
inc
jbe
fcmovnb
nop
inc
pop
cltd
mov
int3
mov
push
inc
sub
mov
ljmp
mov
mov
inc
mov
lods
mov
je
push
sarl
pop
dec
icebp
mov
push
aam
inc
jmp
xor
popa
mov
stos
push
ljmp
cmpsb
andl
add
mov
cs
cmp
inc
xor
repnz
out
mov
in
add
push
xchg
inc
mov
dec
repnz
shl
pop
fiaddl
xor
in
pop
xchg
sub
inc
repnz
idivl
add
cmp
or
sub
sub
dec
insl
push
imul
cmp
sub
xchg
scas
imul
jns
ds
cwtl
mov
jg
in
mov
jo
lahf
sar
bound
inc
cld
cmp
cmc
les
std
repnz
out
push
in
or
je
in
sub
mov
data16
pop
sti
stc
xor
test
out
cwtl
pop
ficomps
adc
dec
shlb
aaa
nop
jae
loope
xchg
ror
push
sbb
outsl
fldenv
nop
bound
pop
test
jnp
into
aaa
fs
sub
cmpsl
movb
add
stos
nop
pop
sbb
call
or
inc
es
sbb
clc
insb
es
hlt
pop
push
fldt
rcr
std
leave
lahf
daa
jbe
sub
jb
mov
mov
add
dec
xchg
and
inc
mov
shl
xchg
and
and
xchg
push
cmp
mul
std
xor
inc
pop
data16
jp
push
mov
sub
pop
cwtl
in
lret
lret
jnp
imul
rcr
xchg
cwtl
push
sub
mov
mov
leave
pop
dec
mov
xchg
xchg
sbb
pushf
imul
or
push
rcll
cs
push
scas
fwait
movsb
cmp
mov
xor
arpl
bound
scas
adc
pushf
adc
push
loopne
data16
pop
gs
cld
xchg
ja
dec
jg
mov
addr16
lods
inc
jae
test
xor
or
ljmp
jnp
push
fs
icebp
test
and
and
xchg
inc
xchg
loopne
in
outsb
jp
out
cmp
jb
int3
and
push
xor
xchg
add
aad
daa
jmp
mov
das
and
mov
xchg
iret
jmp
es
lahf
rolb
lods
mov
push
das
mov
sti
jle
ljmp
push
inc
insl
jmp
or
inc
sub
ljmp
mov
push
push
jmp
loopne
lea
xchg
insl
fld
inc
add
in
inc
pushf
fucomp
sbb
xchg
sarb
aam
sub
or
insl
mov
cmpsl
sub
pop
pop
popa
loope
das
ret
test
xchg
and
mov
pop
pop
mov
add
ja
pusha
jae
lea
jl
push
dec
add
popa
and
inc
cmp
shrl
pop
mov
mov
iret
or
dec
sbbl
push
add
dec
gs
fwait
mov
sub
cwtl
xchg
push
lret
ret
addb
sub
outsl
int
out
loopne
lock
inc
pop
testb
hlt
out
push
fcmovnu
jne
pushf
pop
arpl
mov
sahf
xchg
jp
mov
mov
adc
or
inc
jne
test
pop
mov
sub
inc
mov
sub
outsl
xor
push
jbe
daa
rcl
xor
inc
xchg
pop
loop
xchg
inc
aam
fstl
jp
psllw
dec
push
inc
pop
xor
adc
mov
divb
sub
xchg
loop
inc
xchg
pushf
ret
jl
cli
cs
jbe
mov
or
test
mov
xor
adc
ja
bound
imul
js
popf
aas
lret
into
or
lea
and
mov
mov
cltd
dec
dec
cld
xor
push
insl
in
push
aam
cmpsl
sbb
dec
mov
mov
mov
bound
xor
mov
and
add
xor
stc
mov
mov
pop
inc
fstl
pushf
mov
je
inc
ret
mov
pushf
mov
rorb
lea
fmull
xor
cwtl
aaa
aaa
outsb
fdivl
cltd
loope
lret
mov
sti
mov
call
stos
xor
xchg
pusha
shlb
xchg
sbb
and
movd
fnstenv
pop
push
test
in
jmp
aas
xor
mov
sbbl
out
xchg
jnp
test
push
idivb
mov
movsl
sub
les
rorl
mov
jb
lcall
push
sbb
mov
paddw
push
push
scas
ret
dec
stc
push
inc
ficomps
xor
loope
fisubs
fs
fistpll
jno
pop
pop
nop
sbb
dec
fcomps
ds
pushf
jecxz
add
push
xchg
lock
dec
hlt
daa
shrb
fmul
and
or
jo
xor
lret
xlat
test
mov
loopne
outsb
loopne
add
in
int
mov
ja
les
leave
jbe
adc
daa
adc
jno
in
mov
jge
push
fldl
mov
ja
outsl
test
mov
mov
jnp
mov
inc
sub
dec
fcmove
cmp
out
push
aad
cmp
ret
pop
call
fsubs
nop
sub
fimuls
mov
adc
loopne
pop
mov
xor
es
add
push
dec
fst
fisubrl
or
loope
out
std
xor
jne
dec
movsl
inc
cmpsl
sbb
dec
and
cld
xor
sub
push
push
js
ss
mov
es
call
mov
outsb
xor
adc
mov
insl
jecxz
adc
mov
daa
ja
insb
in
movsl
arpl
push
sub
mov
arpl
daa
sbb
nop
rcll
pop
and
xlat
adc
loopne
pop
push
es
cmpsb
or
sar
jno
push
adc
idiv
mov
cmp
cwtl
lcall
imull
shrb
in
pop
ljmp
or
pop
out
and
cli
or
mov
push
fldt
pop
imul
repnz
jl
sub
jge
popl
jecxz
or
pop
popa
jmp
imul
or
cmpsb
lret
xchg
sbb
insl
gs
shll
mov
dec
shl
sbb
cmp
popf
mov
cmpsb
inc
xor
jo
pop
mov
outsl
cli
cltd
add
mov
cmp
push
aam
mov
or
hlt
inc
aad
iret
dec
xchg
pop
movsl
mov
ret
cmpsb
ficompl
add
jb
lahf
mov
adc
mov
cmpsb
pop
out
iret
stc
mov
sbb
cmp
mov
pusha
fisubl
stos
icebp
or
pop
in
movsb
or
sbb
pop
mov
hlt
inc
push
stos
and
jbe
jp
int
repz
mov
data16
pop
idivl
or
test
jmp
adc
aad
adcl
inc
push
mov
test
ja
inc
jge
daa
pop
std
icebp
fldenv
stc
test
jo
cmp
pop
hlt
add
adc
imul
stos
out
push
push
mov
xchg
gs
push
sbb
rcr
push
mov
jb
fidivrs
dec
mov
inc
xchg
cmp
btc
push
fdivrl
shl
sarl
clc
roll
jg
popf
xchg
cld
add
xchg
mov
dec
adc
decl
addl
jmp
mov
mov
xchg
repz
jae
inc
xor
in
jecxz
mov
xor
pop
nop
jg
int3
outsl
fcomi
pop
cs
inc
test
add
in
pushf
mov
and
daa
fisubs
imul
dec
push
pushf
adc
cwtl
scas
dec
popa
xor
je
cld
lcall
int3
in
fmuls
mov
mov
fwait
insl
or
imul
imul
daa
je
push
xchg
mov
push
dec
push
sbb
clc
hlt
cmp
sbb
in
imul
or
mov
add
daa
jbe
sahf
push
mov
hlt
cmc
inc
push
pop
mov
push
sub
sub
repz
call
mov
cmp
and
insl
jl
movsb
loope
imul
or
hlt
cli
cmp
stc
sub
xchg
fmuls
stos
shrb
xor
pop
fistpll
adc
cmp
das
jl
test
movsl
scas
inc
mov
lret
pop
xchg
pop
int
scas
lods
push
sub
cmpsb
lods
imul
sub
shl
push
push
xchg
stos
sub
ljmp
pop
into
push
fistpl
jb
sub
push
out
inc
pop
dec
add
cmp
dec
sub
sub
pop
dec
sarl
jg
cmp
out
test
nop
jp
cmp
xchg
subb
cmp
add
mov
out
mov
cmp
pusha
cld
popf
ret
mov
mov
pop
std
mov
mov
loope
cltd
cmp
ljmp
dec
mov
fisttpl
pop
div
rcrb
je
add
es
sub
mov
jno
fwait
in
cmp
adc
and
pop
xchg
mov
aas
cld
adc
mov
push
push
xchg
pop
not
jns
nop
mov
push
imul
insl
aad
xor
mov
push
nop
dec
cmpsb
push
add
mov
inc
inc
sbb
push
cwtl
jecxz
out
lret
bound
int3
repz
xor
orl
jno
neg
ja
mov
jo
mov
lds
subb
lods
in
pop
jl
mov
sbb
aaa
scas
jbe,pt
dec
int3
test
and
xchg
call
mov
add
or
xor
loop
lods
xor
lahf
jno
cmp
les
dec
ja
pop
movsb
mov
addr16
mov
and
orb
cltd
pop
pop
mov
sbb
xor
jb
jnp
jns
stos
nop
ja
aad
fildl
and
mov
leave
mov
pop
and
and
push
push
es
ror
insl
jge
or
je
push
enter
in
in
adcl
dec
push
js
mov
push
cmp
cmpb
lea
cld
std
outsb
cmp
dec
test
aad
aam
cmpsb
in
sub
aaa
xor
cmp
pop
rcrb
pop
xor
incl
decb
sbb
lcall
jg
aam
andl
inc
add
mov
fisubrl
cmpsl
stos
dec
sbbb
cld
lahf
lret
ss
fmuls
sub
mov
add
repz
jge
pop
insb
mov
or
jge
insl
mov
and
incl
mov
daa
jne
push
sbb
jl
push
insl
neg
out
aas
jmp
mov
pop
cmp
mov
rclb
daa
mov
je
mov
mov
or
lods
inc
dec
je
cltd
jnp
or
std
jp
repnz
rep
sbb
dec
loop
xchg
xchg
sub
mov
jl
test
lods
pop
sbb
cltd
xchg
arpl
add
lret
push
jae
jp
mov
imul
fwait
lods
fdivr
scas
sahf
cmp
xor
mov
jns
imul
aaa
xchg
push
jo
cld
popf
inc
sub
loopne
mov
hlt
movsl
nop
imull
mov
fimull
sbb
rcrl
push
lahf
adc
outsl
cli
ss
or
inc
pop
jecxz
lret
sub
ret
push
xchg
je
xchg
push
test
inc
repz
jp
pop
sbb
mov
int
or
mov
call
int3
fucomip
clc
movaps
scas
mov
jecxz
movsb
addr16
lcall
mov
xchg
imul
imul
sbb
pop
and
aad
jno
repnz
mov
sbb
fsubl
xorl
lret
or
loopne
pop
fsts
popf
addb
imul
cs
leave
out
icebp
subl
stc
lcall
scas
push
push
shlb
sarl
push
shll
xor
sbb
daa
inc
repz
fsubp
cmp
mov
out
jmp
cwtl
cli
repnz
inc
jne
adc
inc
adc
push
leave
and
pop
mov
outsb
add
xchg
pop
fisttpll
rcrl
outsb
loop
adc
push
imul
cmc
cld
dec
jo
push
push
out
cmpsl
xor
jp
add
cmp
faddp
cmp
fbld
lock
sbb
loop
imull
mov
mov
xchg
push
xchg
js,pt
popa
or
pop
es
dec
mov
jb
cwtl
xchg
enter
insl
fbstp
xchg
mov
into
lret
in
daa
inc
lcall
shlb
jmp
sti
stos
aas
insl
int3
pusha
sub
cmp
sbbb
adc
movsb
repz
mov
in
int
iret
lods
cltd
pop
popa
test
push
mov
mov
add
pop
mov
adc
movsl
xchg
push
adc
mov
cmp
out
push
jb
adc
mov
insb
loopne
jns
insl
enter
xchg
sbb
mov
sub
mov
cld
dec
cld
push
mov
je
enter
cltd
or
mov
call
ja
scas
inc
enter
sbb
add
shrb
out
es
pop
std
mov
cmpsl
mov
inc
scas
adc
pop
fcmovnbe
fpatan
out
enter
lahf
pusha
and
pushf
xor
add
push
outsb
adc
mov
xchg
mov
mov
gs
xchg
out
popf
into
jp
mov
test
pop
sub
adcl
icebp
mov
lret
push
iret
sub
cmpsb
mov
addps
pop
sub
adc
daa
and
jmp
xor
stos
cmpsb
adc
cmc
rcr
or
dec
stos
stos
fstpt
adc
dec
xor
sbb
cmp
mov
in
aaa
popa
adcl
sub
outsb
sti
mov
cmp
or
mov
rdtsc
es
fidivl
jmp
dec
cmpsb
inc
xor
add
jb
les
jecxz
cmp
mov
gs
cmp
push
cmp
push
inc
push
out
mov
mov
lcall
lock
jb
xchg
push
push
sub
aaa
jo
stos
dec
aaa
aad
sub
std
xchg
jne
xor
enter
adc
pop
add
push
jecxz
daa
mov
shlb
mov
sbb
pop
loop
mov
lds
mov
cmpsl
and
mov
xor
add
fnstcw
mov
cli
xchg
imull
push
loopne
sub
sbbl
lods
pop
mov
push
xorl
aaa
popf
ret
xchg
pop
pop
mov
outsl
inc
push
sbb
add
sub
bound
mov
loope
aad
dec
sub
mov
test
xor
jne
bound
ljmp
jb
pusha
xor
imul
sahf
icebp
jmp
adc
fiaddl
jge
data16
xorl
jnp
mov
push
out
pusha
jns
mov
insl
adcl
push
jbe
hlt
mov
xchg
inc
aaa
or
jnp
inc
icebp
xchg
jg
mov
xorl
daa
lds
cmp
jnp
xchg
cmpsl
shlb
push
std
mov
jbe
test
faddl
lretw
mov
lods
std
sub
push
lock
js
push
xor
add
mov
mov
dec
out
mov
jl
out
push
cmp
lret
cwtl
js
insb
je
sbb
sub
icebp
cmp
jle
adc
out
dec
dec
xchg
popf
fs
dec
rcrb
push
aam
loop,pn
in
push
cmp
and
jmp
or
loopne
cmp
cmp
or
mov
aaa
jmp
pop
into
popa
popl
jo
xor
in
jg
jmp
mov
xor
pushl
pusha
mov
pop
jne
inc
icebp
mov
enter
cld
push
mov
clc
jl
xor
cmp
inc
push
xor
repz
enter
xor
out
push
mov
jmp
inc
test
fisttpl
or
xor
es
stc
out
lea
xorb
fisubrl
dec
fldt
std
hlt
xor
inc
arpl
mov
scas
mov
adc
and
push
cmp
jne
ss
aas
adc
pop
cmp
in
sub
jb
push
lea
cmc
push
in
lret
sbb
push
cmpb
ja
cltd
or
adc
fsubrs
push
xor
mov
in
jae
lock
in
popf
shll
sub
xchg
icebp
xor
fwait
bound
mov
rorb
sahf
sub
sub
mov
fsubl
pop
jmp
push
cmp
in
mov
mov
and
sbb
nop
lret
mov
test
movsl
and
cmp
sbb
lahf
pusha
cmp
push
ret
or
jp
ret
mov
das
jecxz
jl
push
sub
xchg
lds
sub
out
xor
out
adc
xor
in
mov
mov
push
cmp
bound
mov
lock
into
jbe
sub
cmc
push
icebp
or
pusha
orl
fmuls
sbb
sarb
and
out
sub
icebp
sub
jp
int3
mov
push
lods
in
fidivrl
in
int3
cmp
mov
adc
sub
ret
inc
jl
inc
dec
dec
cmc
cmpsb
popa
ds
enter
add
lret
add
add
inc
xor
and
daa
test
xlat
lcall
in
xchg
jl
ret
outsb
sbb
insb
outsl
push
pop
sub
inc
bound
call
les
fwait
sbb
sbb
arpl
or
xchg
divl
sti
aas
cmp
push
sub
adc
sbb
xor
in
stos
call
push
inc
jmp
or
cmp
add
inc
add
popf
mov
pop
dec
jmp
dec
jne
pop
and
test
shrl
lock
xchg
repnz
fs
lcall
mov
jmp
call
in
fimuls
mov
pop
xchg
enter
mov
xchg
ret
aam
in
mov
aad
dec
imul
insb
jae
cmpsl
mov
addr16
jle
xchg
or
pop
cmp
xchg
dec
bound
adc
std
sbb
divl
xchg
xchg
js
mov
add
pop
fisubrs
out
mov
pop
arpl
lods
dec
xlat
dec
aas
data16
xorb
adc
sub
sub
aaa
mov
das
addr16
cwtl
xchg
shlb
xchg
jnp
mov
loop
inc
es
mov
movsb
sub
mov
inc
jmp
js
jmp
sbb
mov
mov
sarl
or
cmp
aas
mov
cmp
cmp
lcall
iret
lock
test
and
push
jl
imul
int3
cmp
int
and
cmpsb
rcll
adcl
inc
ja
nop
jle
sub
add
addl
inc
aaa
filds
jae
and
pusha
repz
mov
push
sbb
xor
into
cwtl
pop
movsb
inc
ret
mov
mov
xchg
pushf
fists
mov
sub
jo
outsl
call
pop
jb
jns
mov
pop
mov
cmpsb
cltd
lods
adc
xchg
mov
cmc
rcll
fs
or
outsl
push
and
aad
sahf
cmc
les
pop
jl
daa
popa
stos
xchg
xchg
xchg
ret
das
clc
push
push
jno
push
mov
cmc
pop
cmp
stc
add
sub
in
pop
sbb
ljmp
xor
adc
jno
and
adc
js
test
jmp
sub
rol
mov
inc
push
or
ror
mov
testl
push
and
and
mov
loopew
rcl
jo
cmpsl
int
rolb
or
push
inc
bound
ljmp
mov
adc
inc
addr16
fldt
xchg
xchg
popa
cmpsl
out
test
gs
cld
and
in
pushf
jb
jnp
sub
sbb
mov
bnd
xlat
sbb
testl
frstor
lods
and
jae
push
mov
xchg
test
iret
sbb
xor
daa
add
ss
dec
mov
xchg
mov
sub
das
call
mov
aad
cmpsl
and
push
or
vcvtps2dq
mov
out
add
and
js
add
test
pop
pop
xchg
testl
xchg
addr16
xor
xchg
dec
adc
dec
jmp
jl
adc
dec
pop
hlt
pop
mov
xlat
sbb
lock
and
mov
cmp
jno
repnz
adc
rclb
scas
outsb
or
adc
and
inc
dec
xchg
sbb
sbb
adc
mov
in
test
inc
enter
cltd
mov
jne
adc
sub
push
cmp
sarb
xchg
iret
je
push
push
jne
sub
or
ja
mov
outsb
or
outsb
xor
pusha
dec
testb
jnp
repnz
sub
out
push
add
mov
inc
jmp
test
cmpl
ret
daa
mov
and
mov
pop
lret
loopne
ljmp
std
imul
sarl
mov
aam
sub
sbb
mov
xor
cmp
out
imul
les
mov
sbb
lock
jne
lret
lret
je
in
test
lret
mov
hlt
test
test
push
mov
outsl
cmp
adc
xor
dec
push
and
pop
sti
daa
mov
loopne
xor
lcall
ret
xlat
mov
popf
cmpb
insl
cmp
sbb
sbb
dec
and
cld
ror
cltd
dec
inc
xor
es
and
les
insb
cmpsl
sub
xchg
rcrl
adc
sbb
imul
jnp
push
ret
imul
loop
adc
adc
stos
icebp
jecxz
inc
dec
std
cmp
jmp
popf
lcall
loope
imul
dec
adc
add
ljmp
rsqrtps
xor
sahf
jno
xor
fsubs
imul
mov
mov
jb
js
fidivrl
push
mov
sub
cmp
cli
out
pop
ret
xor
jb
jecxz
in
icebp
imul
test
daa
add
jno
fmuls
js
pop
push
mov
test
fadds
xchg
popf
imul
add
mov
insb
dec
leave
sub
cmp
loopne
leave
rcll
fdivrp
test
pop
mov
sbb
addr16
ds
sbb
dec
mov
sbb
pop
pop
out
rcrb
push
inc
sub
lock
cltd
mov
fcomi
shrb
mov
in
pop
push
out
out
jmp
pop
sub
sarl
mov
incl
mov
cltd
pop
repnz
roll
popf
mov
inc
cld
les
daa
pop
ljmp
je
adc
jecxz
add
xor
pusha
push
repz
inc
or
int3
and
lea
mov
pop
std
or
cmp
popf
add
mov
push
mov
sub
ljmp
mov
push
push
or
mov
lret
pop
mov
scas
jo
sbbb
arpl
clc
and
inc
mov
and
xchg
jmp
jne
xor
shll
into
add
popa
dec
sarb
pushf
dec
or
jo
mov
xchg
jecxz
add
jg
ror
pop
and
push
jo
mov
insb
jp
dec
nop
outsb
lods
icebp
shl
sbb
mul
daa
fidivs
jb
xchg
mov
pop
pop
pushf
adc
ret
outsb
sub
add
lcall
inc
scas
mov
mov
inc
movsb
and
cs
sub
pusha
cmc
insl
jns
mov
sbb
jmp
add
cli
loop
mov
jg
das
xchg
xor
inc
jmp
pop
in
cwtl
and
sbb
xor
ja
sub
mov
cld
and
xor
fbld
fsubs
jle
sarl
es
rolb
push
jg
lods
mov
jno
mov
cmc
push
rclb
stc
push
xor
xchg
ret
xchg
pop
ljmp
and
fcoms
xchg
jo
sbb
inc
arpl
fisttpll
mov
or
out
jnp
pop
xchg
sahf
pop
je
es
or
xchg
dec
mov
cmp
es
xchg
roll
test
jge
sbb
pop
ss
fsubr
dec
push
add
mov
and
out
nop
jmp
roll
cwtl
inc
ret
dec
je
into
and
lods
pop
pop
js
pop
sbb
mov
push
add
nop
or
cltd
cmp
decb
inc
jle
sarl
fnstcw
testb
push
pop
xor
popf
lahf
cmc
leave
shll
cmpsb
insb
nop
xor
cltd
inc
popf
lock
push
cli
mov
popa
idiv
pop
pop
pop
icebp
mov
mov
lock
repnz
sub
mov
mov
push
fbld
js
jp
mov
xchg
imul
sbb
xchg
add
popf
aam
mov
movsb
pop
jne
stos
inc
jle
fs
outsl
dec
inc
xchg
fidivl
or
dec
pushf
xchg
pop
sbb
mov
bound
jl
stos
pop
push
jns
mov
fsubl
stos
cmp
mov
inc
xor
push
xor
mov
sub
les
negl
xchg
or
sbb
xor
cwtl
xchg
ret
mov
addr16
push
push
out
jb
pushl
adc
in
insb
mov
mov
ret
dec
es
sbb
push
cmp
setb
enter
mov
ds
push
push
add
xchg
sbb
pusha
pop
mov
mov
sbb
xchg
push
mov
sarl
jae
cmc
clc
rorl
and
mov
mov
popa
cld
or
push
cmpsb
cltd
cmp
push
rorb
jb
in
mov
ret
fs
outsb
lret
icebp
xchg
movl
std
loop
sbb
mov
and
fs
cld
mov
and
rorb
or
scas
push
and
xchg
out
imul
mov
nop
lahf
sbb
std
call
outsb
outsl
xor
jg
adc
cmp
sahf
iret
rcr
cmp
das
ja
xor
shrb
into
adc
and
ret
test
rep
sub
push
and
mov
xorl
in
mov
out
dec
xor
dec
mov
mov
call
xor
scas
movb
fs
movl
nop
add
or
je
xor
iret
loop
jae
sbbl
xchg
imull
push
fcmovbe
pop
push
aad
inc
outsl
xchg
and
in
push
pusha
mov
inc
nop
jl
pop
out
lret
and
xchg
xchg
icebp
stos
jmp
ljmp
shl
and
cmp
popf
mov
jno
pop
popa
adc
loope
test
mov
push
inc
out
xor
addr16
xor
sbb
movsb
aam
ss
pop
inc
arpl
ss
cwtl
hlt
lret
shrl
xadd
vpmulhuw
xchg
xchg
push
rcl
lahf
xchg
xchg
int
adc
sbb
and
sub
mov
jo
ffree
push
xor
fnstcw
jno
push
test
inc
xchg
mov
sbb
cmpsl
jns
sub
add
push
inc
xchg
shlb
adc
dec
jae
inc
dec
adc
in
out
outsb
rcl
jnp
insb
dec
into
and
sub
mov
icebp
sahf
stc
ljmp
sub
push
push
dec
fwait
xor
into
add
pop
push
insl
js
or
sbb
in
cld
lret
cmc
push
std
mov
sub
fimuls
sbb
jle
adcb
mov
push
std
loope
and
adc
cltd
out
jae
arpl
cmp
sbbb
mov
pop
adc
mov
cmp
shll
or
mov
fmuls
push
iret
mov
push
push
insb
xlat
mov
imulb
pop
cld
sti
imul
or
push
into
mov
sti
stos
loop
je
mov
mov
movsb
data16
in
adc
into
or
push
insl
mov
lods
and
mov
and
jae
scas
jno
mov
cmc
xchg
pop
lahf
test
pop
xchg
daa
testl
jmp
sbb
cmp
int
psrad
pusha
mov
push
ret
mov
je
and
add
add
cmp
pop
fisubrl
cmpsl
das
add
scas
fldl2t
popf
ret
mov
push
andb
aas
mov
popf
mov
out
xchg
ja
or
sbb
and
data16
frstor
inc
mov
shlb
pop
imul
sub
movb
jle
in
push
mov
or
cld
std
out
pop
fbld
mov
jl
add
xor
pop
dec
and
pop
or
mov
sbb
jnp
xor
in
test
lds
adc
sbb
mov
mov
mov
sbb
ror
add
das
out
adc
fcmovne
test
push
push
lcall
mov
jb
xchg
mov
cs
or
and
xor
cmp
mov
push
dec
add
enter
push
adc
dec
sbb
cmp
and
jecxz
mov
adc
xor
loopne
in
hlt
lods
jae
and
push
push
xchg
test
dec
or
jae
push
push
xor
sbb
push
adc
push
push
cmpsl
mov
mov
test
jnp
jg
lea
les
dec
sbb
test
xchg
jbe
out
iret
mov
clc
dec
insb
fidivs
es
push
push
inc
dec
push
add
outsb
pop
sahf
movsl
dec
cmpsb
fsubl
pusha
fwait
orl
jns
popf
int3
lea
sub
pop
pop
test
outsl
mov
int3
cltd
inc
dec
outsl
aaa
adc
and
cli
outsb
mov
dec
js
xchg
pop
vsubsd
pusha
mull
inc
inc
test
push
cmc
inc
push
xchg
pop
mov
and
addr16
and
sahf
or
or
xlat
sub
fs
punpcklbw
andl
jnp,pn
dec
mov
push
jmp
ss
sbb
outsb
and
es
pop
add
rorl
movsl
mov
subb
xor
out
outsl
mov
pop
imul
mov
lods
lds
daa
jae
sbb
scas
and
push
pand
inc
dec
push
daa
xor
out
cmp
push
mov
pop
inc
mov
fwait
xchg
xor
pop
xor
pop
test
call
cmpsb
fidivrl
jg,pt
inc
cld
adc
scas
pop
fildl
stos
mov
arpl
hlt
jnp
xor
add
add
pushf
enter
sub
jl
adc
lcall
loope
jae
mov
mov
shr
xor
adc
xor
fcoml
lret
rolb
cs
outsl
sub
jl
cmp
imul
dec
test
ss
scas
pop
adc
push
xor
stc
jge
mov
rcrl
pop
mov
xchg
scas
push
test
cmpsl
sub
and
mov
push
and
adc
addr16
rcrl
mov
xchg
ret
dec
adcl
and
inc
addr16
neg
jbe
les
add
mov
cwtl
mov
or
or
mov
push
outsl
out
imul
imul
push
jge
inc
sahf
mov
clc
leave
xor
pop
movsl
xlat
sti
mov
das
mov
xor
lock
inc
mov
jl
xchg
das
xlat
das
inc
dec
or
test
imul
mov
std
cmpsb
mov
cmp
xchg
cmp
fldl
push
rcr
faddl
insl
adc
aam
cmpsb
shll
inc
xchg
or
cli
insb
stc
jmp
sub
out
adc
lods
mov
mov
mov
push
mov
dec
fimull
mov
arpl
lods
movsl
mov
inc
xor
insb
cmp
prefetch
insl
les
cmp
pushf
and
mov
test
popf
lret
mov
lret
mov
dec
mov
jg
fnsave
out
cmp
add
loopne
pop
fdivrl
mov
xacquire
pop
lds
cmpsb
aam
bound
mov
imul
inc
bound
lea
pop
mov
loope
jmp
xor
pop
sub
adc
repnz
push
xor
xor
stos
mov
lea
mov
xor
test
pop
cmpsb
into
sahf
and
popa
pop
xchg
sbb
push
cld
cmp
sbb
mov
out
jne
leave
pop
lods
pushf
cmpsb
mov
rcrb
sbb
jge
ja
push
ss
xor
cmp
lods
cs
adc
jecxz
mov
cmp
xor
push
pop
xchg
mov
repnz
cmpsl
fnstcw
mov
sbb
add
fbld
sti
std
lods
ja
mov
adc
adc
outsl
and
sbb
xor
mov
xchg
loopne
leave
xor
inc
mov
push
jecxz
sahf
sub
and
fisttpl
sahf
rcr
push
data16
std
subb
push
sub
mov
push
movb
jg
sbb
sub
shlb
add
sbbb
mov
orb
cmp
sub
jno
ss
aam
in
xor
imul
jl
ja
xchg
dec
adc
pop
sbbl
cmpsb
sbb
mov
arpl
popa
mov
ljmp
or
mov
je
roll
fdivrl
int3
sbb
mov
xor
mov
mov
xlat
sub
test
std
pop
lock
fstp
xchg
popf
cmp
jno
pop
sahf
es
add
inc
xor
lea
xchg
add
imul
mov
xchg
rorl
jae
arpl
jg
shlb
cmp
xchg
outsl
xor
outsb
mov
cmp
les
adc
ss
scas
mov
push
movsb
shll
in
pop
adc
addr16
aas
stos
cmp
lods
sbb
sub
fildll
mov
adc
mov
es
xchg
jge
cld
ror
or
fldl
popf
jnp
nop
push
lahf
scas
pop
adc
mov
int
insb
mov
adc
decl
mov
add
sbb
mov
adc
gs
xor
adc
adc
or
lock
push
xor
shl
mov
pushl
je
adc
loopne
iret
imul
adc
sbb
cmp
adc
in
gs
mov
sti
and
mov
inc
and
xlat
fs
imul
sahf
andl
adc
out
pushf
pusha
scas
jae
push
cld
dec
pop
sub
jno
repz
dec
lods
fcoml
jmp
inc
cmpsb
xor
mov
mov
jecxz
sub
stos
mov
mov
ja
cli
std
push
pushf
dec
ss
inc
stos
outsb
sub
cmp
mov
cs
add
push
jno
push
xor
xor
imul
jl
and
sub
xchg
adc
add
movsb
fwait
lahf
iret
stos
mov
jp
lcall
adc
pop
cli
stos
add
sbb
mov
ficomps
cmp
cld
clc
insl
adcb
aaa
ret
cmpsl
leave
inc
outsl
daa
pop
nopl
xchg
shll
scas
lret
xchg
push
jb
ljmp
mov
aas
pop
movswl
add
scas
inc
lret
enter
mov
loope
imul
mov
jns
cmp
mov
push
push
pop
pop
icebp
jnp
sbb
insb
and
cmp
mov
sbb
sbb
mov
es
jne
popa
pusha
bound
push
mov
and
push
xor
bound
in
mov
push
push
iret
cmp
lds
cmp
xor
dec
push
xchg
leave
cmp
dec
fimuls
jb
or
xor
mov
dec
cmpl
idivb
dec
test
xchg
dec
mov
lock
dec
dec
xchg
xor
or
repz
in
or
lret
cmp
sub
xor
jl
in
int
inc
pop
dec
mov
add
dec
or
inc
stc
inc
jne
inc
jle
sub
lcall
pop
icebp
mov
rcr
dec
xor
or
mov
add
ljmp
cmpsl
js
mov
jg
ds
shlb
les
das
repnz
ljmp
xchg
xchg
fdivrs
test
inc
adcl
cmp
int3
push
pop
jecxz
sbb
xchg
sarb
fcomip
add
xor
mov
adcb
sub
and
inc
std
rclb
and
mov
fbstp
adc
or
insl
xlat
xlat
mov
repnz
daa
or
mov
jmp
xlat
outsl
ljmp
icebp
mov
dec
lret
push
mov
dec
ljmp
jns
mov
fdivr
popf
imul
in
sbb
inc
mov
push
jmp
fcoms
add
scas
add
fistl
cmpsb
pop
xchg
insb
dec
add
clc
mov
icebp
adc
jo
mov
pop
movsb
add
mov
mov
mov
jmp
cli
pop
mov
cltd
xchg
inc
cmp
or
or
fnsave
leave
add
lock
xor
pop
mov
fnstcw
jl
cmp
jbe
sahf
and
and
lock
movsb
arpl
es
out
mov
xlat
icebp
lcall
ds
out
mov
paddd
dec
mov
inc
adc
xlat
xchg
and
pop
xor
push
lcall
cmc
push
in
jl
cmp
cwtl
ffree
test
mov
sbb
jle
lret
sub
bound
aad
jge
cli
faddl
insb
es
mov
mov
loope
pop
and
cmp
call
lcall
fldcw
add
dec
stc
out
mov
sbb
and
pop
fs
xchg
stos
js
pop
int
cli
ljmp
cltd
ljmp
cmp
push
outsb
lods
fcmovnu
sti
pusha
and
mov
leave
add
scas
xor
hlt
add
push
mov
mov
lods
xchg
popa
xchg
cmp
scas
mov
stc
jo
scas
lock
stos
idivb
out
repz
test
xchg
mov
mov
aas
push
cmpsl
mov
inc
pushf
push
jb
mov
add
dec
stos
inc
adc
int
xlat
pop
dec
or
push
lret
and
adc
popf
mov
mov
lock
rolb
fisubrl
int
add
mov
ss
lock
xor
sahf
xlat
sub
inc
fldl
cmpsb
mov
ret
pop
loopne
mov
mov
syscall
rcrb
or
pop
mov
ret
adc
xor
imul
mov
js
or
jbe
aad
push
sub
mov
sub
js
mov
jne
dec
jb
in
inc
add
sub
push
testl
dec
xchg
push
adc
cmp
inc
push
test
push
orb
icebp
mov
pop
mov
fwait
sbb
int3
mov
ss
sub
jmp
insb
xlat
shlb
sub
stos
das
xchg
mov
inc
out
loop
dec
and
or
xchg
fcompl
popa
ljmp
imul
imul
popl
out
mov
pop
cmp
mov
and
adc
add
int
push
sbb
xchg
imul
mov
ret
jb
loop
sbb
cmpb
fstpt
aaa
mov
ja
test
leave
rclb
adc
orl
outsb
popf
div
insl
and
mov
cmp
pop
pushf
sub
jo
adc
pop
sbb
mov
mulb
sbb
sub
test
fbld
add
adc
mov
xor
xchg
and
mov
sub
cmp
mov
lcall
dec
xchg
subl
pop
icebp
inc
mov
insl
inc
insl
addb
pop
xchg
mov
insb
and
loope,pn
mov
push
jg
push
mov
dec
xchg
movsl
and
es
lahf
das
mov
js
inc
outsl
inc
vucomiss
sub
jle
dec
stos
lcall
negb
mov
pop
aad
in
ret
mov
jno
xor
xchg
inc
test
ret
add
xchg
mov
aas
test
pop
orl
push
out
arpl
scas
jl
jge
mov
mov
inc
bound
test
mov
or
daa
cmp
push
push
push
daa
cmp
loope
jl
add
xor
popf
std
mov
push
dec
enter
fucomp
aam
pusha
imul
mov
sub
push
adc
mov
push
mov
sbb
mov
mov
loopne
mov
mov
cmpps
adc
mov
mulb
dec
ss
inc
cwtl
sbb
jmp
jmp
sub
int
xchg
push
sbb
lcall
ficomps
pop
xlat
ret
sahf
pop
sbb
out
jbe
sub
aaa
leave
es
sbb
and
dec
jb
imul
lret
out
jl
ljmp
hlt
rcl
push
test
cmp
data16
and
sbb
jmp
push
dec
mov
std
pop
fwait
push
sbb
xor
and
dec
cmp
jl
fdiv
stos
imul
adc
add
jl
mov
sbb
dec
cmp
nop
mov
fiadds
aam
or
movsl
add
movsl
ror
or
dec
aaa
outsl
xchg
jb
sbb
addr16
sub
push
cmp
enter
adc
adc
fbld
hlt
mov
push
leave
mov
dec
sbb
test
add
mov
jb
push
in
inc
adc
sbb
and
cmp
loopne
cltd
shlb
mov
ret
xchg
sub
stc
in
add
std
addl
jmp
xchg
push
mov
adc
adc
outsb
test
scas
das
into
out
lret
adc
xor
cwtl
dec
mov
sbb
mov
cmp
das
push
jbe
or
pop
inc
out
jecxz
jl,pt
sub
jle
in
mov
cmp
inc
jnp
mov
or
push
inc
loope
dec
dec
inc
xor
xor
push
fsubrp
mov
add
cmp
lods
sub
jg
dec
sbb
lret
or
dec
adc
jp
testl
ss
mov
arpl
leave
jmp
inc
add
jno
jae
lea
popf
aam
jae
sub
sbb
in
pop
lret
rcll
pop
xor
add
nop
ja
das
stos
fwait
iret
popf
pushf
sub
mov
popa
pop
icebp
out
mov
pop
cmp
push
xchg
int
or
into
mov
fidivrl
sub
fldlg2
hlt
jae
stos
ds
adc
push
loope
pop
inc
sub
aas
push
js
aad
ficompl
test
adc
mov
mov
jecxz
xor
inc
aam
popa
pop
mov
out
es
dec
jg
fsubl
pop
and
daa
cld
mov
lock
push
loop
mov
stos
clc
jmp
pop
mov
inc
push
ds
into
aas
test
test
push
ret
les
cs
jbe
enter
dec
insl
scas
lea
fcmove
out
sbb
jno
bound
sub
jno
adc
mov
loop
push
je
sub
sbb
jecxz
xlat
add
cmc
ds
add
dec
pusha
jns
pop
and
cmc
mov
shrb
aaa
jmp
pop
movl
or
mov
rcr
adc
sub
nop
cs
lds
sbb
xchg
fildl
mov
dec
sbb
inc
jmp
in
cmp
enter
cmp
add
movsb
or
cmp
mov
pop
mov
lret
push
cmp
mov
push
sbb
rol
and
xchg
or
sub
jl
lods
cmp
lahf
sbb
pop
addb
into
sahf
or
movsl
push
xchg
mov
lret
ret
lcall
rcrl
lods
xor
dec
adc
insl
andl
jnp
mul
out
lcall
addr16
push
pop
repz
sbb
ds
push
mov
sbb
mov
push
adc
enter
sbb
jg
and
cs
and
push
inc
scas
pop
int3
mov
pop
mov
push
push
xor
xor
inc
in
ljmp
mov
cmp
push
dec
or
add
out
mov
pop
test
shlb
das
sub
xchg
mov
lahf
inc
inc
repnz
aas
sbb
shlb
jecxz
pop
pop
dec
in
inc
xor
mov
cmp
and
mov
decl
dec
inc
xchg
leave
cmp
rcl
mov
mov
or
cmpsl
lahf
dec
jbe
xlat
stc
pop
test
and
mov
and
into
cmp
cmpsb
stos
lret
xchg
add
lods
or
adc
mov
in
ds
xor
rol
aam
iret
jmp
adc
das
cmpl
lods
adc
xlat
ret
or
unpcklps
xchg
add
movsb
test
sub
add
mov
nop
test
fs
lret
xor
push
jbe
and
push
jae
fisttps
mov
mov
andl
notl
les
add
rcrl
dec
inc
je
pop
lds
imul
xchg
fwait
dec
test
pop
icebp
mov
mov
divl
or
sbb
inc
into
add
out
push
fistl
inc
call
hlt
jp
mov
or
add
mov
xlat
in
pop
fiaddl
loope
and
xchg
pop
sbb
nop
decl
push
femms
daa
xchg
ds
loope
push
mov
clc
inc
mov
dec
ja
jle
movsb
ficoms
xorl
xchg
sbb
ja
fmuls
xor
clc
ljmp
mov
xlat
cs
cltd
shl
add
fwait
arpl
add
fildll
and
testb
movsl
mov
gs
pop
inc
and
js
js
stc
xchg
adc
mov
mov
mov
stos
pop
rcrl
mov
mov
add
xchg
xor
mov
add
cld
mov
mov
inc
cmp
add
dec
icebp
inc
dec
xor
ja
in
sub
pop
mov
xchg
sbb
jne
mov
jge
shlb
sbb
out
clc
push
int3
xor
fistpl
mov
add
nop
bound
lods
cmc
mov
movl
sarb
or
or
inc
test
fldt
ror
pmuludq
test
lret
xchg
inc
jg
arpl
lods
inc
push
sahf
pop
mov
mov
iret
std
jnp
pop
lods
dec
sub
ret
add
and
xchg
pop
and
and
pop
pop
in
and
lret
cmp
paddq
xchg
fldcw
pop
pop
push
fdiv
clc
mov
in
pop
pop
inc
js
dec
jecxz
xor
push
in
adc
das
add
lds
mov
push
mov
jns
xchg
rolb
je
popa
dec
mov
push
mov
push
jge
pop
movsb
iret
in
jl
sub
cwtl
fwait
mov
mov
out
push
add
aaa
add
inc
js
push
push
aaa
dec
sub
jg
jle
jnp
call
popf
dec
sbb
jno
imul
ret
sbb
mov
test
mov
outsb
or
sti
insb
enter
addr16
outsb
push
and
movsl
jo
mov
pop
xchg
xor
push
mov
xchg
jns
aad
mov
xchg
popf
push
jae
mov
sbb
rcll
test
push
cwtl
stos
daa
outsl
lods
mov
inc
pushf
rolb
sub
xchg
jne
push
jne
mov
popa
cmpsb
pop
and
ja
jns
sub
push
out
in
pop
out
jns
mov
mov
push
xchg
xor
cmp
add
xchg
cld
cmp
pushf
push
mov
pop
pop
mov
ret
xor
rolb
loopne
mov
stos
adc
or
mov
add
js
sub
mov
jge
mov
xor
lds
push
mov
popa
xchg
mov
mov
sub
repnz
inc
and
mov
std
adc
push
mov
jecxz
int3
pusha
jg
out
add
bnd
incb
mov
cli
or
test
fidivs
and
and
mov
test
lahf
movsl
js
test
loop
xchg
mov
fdivrs
jb
fwait
add
sub
and
in
cmpsb
rcrl
aam
or
xor
jl
test
je
imul
jno
mov
sbb
inc
dec
loopne
ss
mov
shrl
mov
pop
push
cmp
sub
and
lds
pop
pushf
inc
popf
movsl
xchg
arpl
iret
inc
test
xchg
or
sub
cmc
out
lcall
pop
push
lahf
push
xchg
mov
jecxz
or
jp
jo
fistps
push
js
mov
popf
and
mov
ror
repz
lock
repz
mov
in
gs
jns
and
sub
out
inc
ja
popa
fistpl
subl
jnp
cmpl
pop
inc
sub
movups
jb
xor
stos
pop
clc
pop
cmp
shrb
ret
cmp
add
or
int
imul
push
sti
cmp
mov
mov
test
cli
out
push
pop
cmp
repz
fwait
popf
lcall
imul
cli
loope
outsl
xor
pop
hlt
and
push
xchg
and
or
jmp
bound
test
push
out
loop
and
loop
in
mov
or
xor
int3
lea
dec
negb
popf
mov
daa
aaa
dec
or
cld
popa
lcall
gs
xchg
xchg
xlat
push
sub
mov
ja
andb
sti
leave
pop
aas
jl
repnz
add
push
scas
mov
cmp
ds
mov
shrl
ljmp
lock
imulb
dec
sbb
add
mov
pusha
mov
movsl
popf
add
imul
jae
pop
js
loopne
out
orl
mov
or
adc
mov
jge
adc
mov
add
or
xor
sub
clc
lahf
outsb
popf
and
mov
xchg
mov
lret
and
pusha
xor
sub
mov
and
icebp
mov
lea
fdivl
fimull
outsb
or
inc
mov
ds
dec
mov
sbb
lods
adc
aad
dec
adc
xor
xor
imul
push
das
mov
xchg
movzbl
int3
mov
lea
ffree
enter
outsl
rolb
cmpb
adc
fisubs
dec
xor
pop
mov
inc
movntps
jbe
xor
cmp
in
aaa
cmp
in
cmpsb
out
test
adc
pop
dec
fsub
shl
sub
mov
aas
dec
dec
or
xor
std
cmp
add
je
xchg
xor
cmpsl
mov
clc
cmp
cmp
cmp
mov
pop
mov
add
cmpsb
cmp
pop
push
ljmp
add
inc
subl
jp
cmp
push
xor
popa
sbb
or
mov
lds
jae
cli
fwait
sbb
adc
cmp
inc
dec
jle
scas
inc
loope
test
pop
in
cmp
push
filds
xor
inc
and
xor
icebp
cmp
lea
mov
test
arpl
mov
mov
mov
dec
cld
insl
add
into
jg
mov
mov
dec
bnd
test
cmp
mov
rolb
test
push
mov
cmpsb
sbb
imull
push
jmp
adc
lahf
push
scas
aas
pushf
cli
xor
fcmovbe
repnz
mov
cltd
setae
in
adc
cltd
in
push
mov
mov
sub
stos
loopne
je
push
sbb
out
add
push
lock
mov
int
das
add
hlt
lods
lcall
xlat
ds
dec
out
or
cmpb
xchg
fcoml
push
or
add
out
insl
dec
sbb
rolb
cltd
jg
sahf
fbstp
pop
nop
lock
push
gs
mov
pop
mov
imul
repz
or
cmp
jmp
xchg
fcomps
dec
xchg
jmp
gs
iret
ret
lcall
mov
hlt
aad
ret
xlat
data16
or
rorb
outsb
push
sub
les
hlt
dec
fsub
nop
xor
sarb
test
sbb
pop
xor
stos
imul
dec
fnop
cmp
and
xchg
or
rolb
fs
xor
rcrb
jb
mov
xchg
movsb
jnp
sar
xlat
shlb
pop
pop
ror
push
sbb
inc
out
mov
push
sub
inc
inc
out
rol
or
jge
or
fs
jg
hlt
lds
mov
push
push
xchg
loopne
jns
popf
mov
test
adc
lahf
arpl
mov
push
inc
jmp
push
hlt
repnz
orb
enter
mov
jbe
cs
imulb
adc
jae
stos
xor
mov
mov
aaa
inc
ss
test
xchg
in
sbb
xchg
mov
fsubrp
leave
mov
ljmp
jae
into
aam
push
addr16
es
rcr
xor
xor
dec
leave
add
push
sub
adc
and
lods
aas
in
js
dec
mov
movsl
mov
aas
pop
aad
add
rolb
outsb
and
mov
xchg
pushf
pop
dec
sbb
inc
popf
leave
aas
ret
or
loop
pop
in
ja
xor
adc
push
jae
repnz
stos
sub
push
adc
mov
pop
push
hlt
into
cmpsl
imul
adc
pop
lds
mov
xorl
fidivrl
addr16
mov
cmpsl
jge
fidivrl
and
push
fsub
filds
ret
push
fdivrp
jo
test
adc
in
cmp
and
pop
inc
pusha
test
pop
cmp
enter
jle
jbe
and
cltd
cwtl
out
lcall
inc
mov
mov
cmc
pop
mov
adc
lret
adc
icebp
sub
cmpsl
push
mov
jno
and
push
add
ficompl
cmp
inc
add
push
iret
fdivs
mov
out
or
and
jle
jb
xor
scas
dec
push
shrl
push
xor
fistpll
jmp
push
jbe
xchg
mov
cld
jmp
ljmp
xchg
loope
dec
mov
das
shll
shrl
jl
bnd
nop
xchg
dec
mov
mov
dec
add
xor
seta
and
sbb
stc
aad
test
dec
lods
sbb
cli
and
dec
movsl
mov
imul
sbbb
jae
pop
cmp
loopne
xchg
xchg
push
xor
xchg
sub
lds
dec
push
lods
inc
loopne
adc
je
out
jns
insl
jl
sbb
fdivrl
mov
int
mov
imul
in
pop
adc
gs
shlb
inc
ljmp
push
incb
jo
xor
cmp
jp
push
into
sub
dec
mov
clc
jb
mov
add
mov
adc
orl
dec
jp
mov
cmpsb
je
jne
cmp
outsl
jo
mov
add
in
push
mov
inc
fstpt
inc
and
push
mov
cmp
cmp
jle
or
clc
cmp
pop
fldcw
jge
mov
dec
ficompl
test
insl
or
std
adc
sbb
mov
lcall
stos
loopne
xlat
out
or
dec
mov
pusha
push
jno
or
iret
jno
bound
mov
push
out
inc
nop
jge
subps
imul
cmp
mov
mov
cmc
mov
jno
fisubrl
pop
mov
dec
mov
dec
xlat
sub
int3
int
inc
mov
jecxz
pop
out
mov
adc
xor
rorb
ret
adcb
cs
dec
lret
xchg
mov
mov
cmp
pop
out
data16
scas
push
jecxz
shrl
in
loope
add
ror
mov
mov
push
popf
push
div
mov
movsl
in
sub
outsl
pop
or
roll
sti
pop
add
daa
xchg
mov
mov
popa
pushl
into
inc
xor
icebp
mov
jle
iret
repnz
cmp
xchg
dec
push
xchg
pop
mov
pop
or
pop
ja
pop
shrb
mov
pop
add
out
mov
sti
fldcw
std
test
fisubl
lods
ret
in
mov
data16
mov
inc
jb
adc
loope
xchg
mov
pop
sbb
lcall
shrb
call
mov
lret
aas
testl
jp
inc
mov
sti
rorb
xchg
add
cmc
nop
in
jno
push
mov
xor
orb
adc
pop
inc
xchg
ja
mov
push
and
jne
mov
pusha
adc
out
inc
xor
pushf
jle
xor
mov
sbb
jg
enter
inc
xchg
push
mov
and
mov
dec
xchg
sqrtps
pop
stos
in
sub
fs
push
push
out
jmp
xor
jbe
ljmp
and
repz
mov
mov
pop
pop
sbb
dec
and
lret
ds
js
jns
test
out
cld
pop
ficomps
mov
in
mov
and
jge
adc
fcoms
push
pushf
pop
addb
js
xor
iret
fucom
sbb
and
xor
add
inc
add
test
je
xor
mov
sbb
rorl
in
in
inc
sbb
fldenv
rorl
movsl
add
xor
xor
into
je
mov
loope
fwait
pusha
in
sbb
adc
jmp
pushf
xor
jg
jmp
stc
add
push
addb
roll
inc
scas
gs
xlat
push
inc
arpl
and
data16
mulb
out
dec
sbb
call
sub
in
pop
lret
sarl
repz
stos
xor
jb
cli
sti
jge
ja
fisubl
sbb
and
movsl
jg
mov
push
out
sbbl
xor
cmpsb
cmp
push
aam
addr16
dec
stc
mov
or
movsb
ret
outsl
sub
pop
sub
std
pusha
dec
xor
sbb
pop
push
jecxz
mov
adc
pop
pushf
sbbb
std
push
inc
cmp
mov
xchg
test
fmulp
or
lret
mov
mov
add
xchg
dec
pop
jns
push
push
and
push
sub
xchg
call
mov
ret
popa
ret
mov
lock
mov
data16
daa
mov
aam
testl
cmp
cmp
test
jp
mov
jp
mov
inc
or
cld
pushf
lahf
lahf
pop
into
push
jl
add
das
call
mov
pop
mov
mov
and
add
mov
dec
cmc
shlb
adc
dec
xor
call
cs
sti
loopne
lea
dec
jmp
pop
leave
inc
jae
idiv
dec
adc
mov
dec
shrl
lcall
add
outsb
xor
cld
adc
mov
xorb
ret
loopne
push
lret
shrb
add
sub
mov
aaa
fisubrl
mov
lock
pushf
jp
dec
arpl
sarl
jae
leave
hlt
or
sub
push
sub
lret
add
cld
dec
mov
daa
push
push
mov
enter
mull
mov
xor
movsl
out
sub
add
enter
jp
lret
lret
test
movb
xchg
mov
mov
mov
inc
lret
adc
fiaddl
inc
xchg
mov
loop
dec
lea
push
data16
cmp
in
test
jo
insb
sub
sub
sahf
mov
jbe
aaa
enter
inc
xor
jl
stos
mov
xchg
hlt
iret
dec
dec
out
and
sbb
pop
mov
imulb
jnp
jl
push
mov
stos
outsb
aas
in
lea
dec
cmc
dec
cmp
mov
xchg
ja
cwtl
inc
cmp
sahf
in
ss
mov
mov
loope
xor
popf
mov
dec
dec
aaa
cmpb
inc
pushf
push
out
loop
cmp
mov
aad
lods
es
sbb
inc
fisubs
cltd
je
mov
sahf
jo
sbb
mov
cmp
jle
pop
repnz
aaa
push
mov
pop
pop
add
adc
insb
std
pop
lcall
and
fldl
adc
aas
fstl
fwait
push
rorl
scas
cmp
xchg
xchg
sbb
pusha
cmp
sbb
mov
xchg
mov
addr16
add
cwtl
test
mov
pop
adcl
xlat
cld
sbb
mov
xor
lods
fimuls
sbb
push
pusha
nop
or
cmpb
mov
int
pop
arpl
dec
jnp
mov
ja
jns
add
fcmovnu
inc
or
xchg
jge
int
pop
fs
pop
lret
enter
sub
sbb
xchg
decb
fistps
xchg
xchg
and
sbb
adc
incb
arpl
adc
pop
push
outsb
dec
sbb
jg
jg
add
aad
test
dec
pop
dec
or
outsb
in
lods
ds
gs
negb
es
lods
mov
fldt
ljmp
dec
mov
js
mov
mov
mov
std
repnz
lahf
cmp
cltd
xchg
lret
push
dec
mov
mov
addr16
js
and
sahf
and
jge
sub
cmp
insb
pop
add
xor
js
cmp
dec
adc
pop
scas
jne
jo
jp
jo
jae
sbb
iret
jge
or
or
ss
sub
aaa
mov
rclb
xchg
bound
sbb
inc
scas
out
add
test
imul
lock
in
test
mov
cmpsl
push
pop
jge
shlb
and
fstpl
sub
xchg
sbb
ficompl
mov
cmova
loop
jo
pop
sti
icebp
int3
stc
sub
lcall
mov
ret
or
sbb
cs
ja
mov
inc
add
mov
inc
push
or
lods
call
scas
fst
jnp
shl
movsb
xor
les
inc
cld
mov
jp
dec
mov
fildl
xor
insl
xor
sub
adc
inc
push
out
neg
iret
jb
pop
xor
dec
sbb
mov
push
xchg
test
sbb
mov
mov
mov
sbb
imul
cmp
les
je
or
mov
pop
rolb
mov
pop
dec
and
loopne
aas
imul
xchg
xor
pop
adc
pop
imull
push
int
sbb
cld
rcrb
adc
cmpsb
lock
sbb
divl
leave
xchg
pop
and
sbb
jne
ds
xor
je
rclb
xlat
push
fs
pusha
aaa
jmp
fwait
scas
out
or
ja
mov
int3
jp
adc
cmpsl
sbb
insl
rcr
paddsw
add
mov
repz
mov
scas
mov
dec
pop
pop
loop
arpl
int3
ds
in
roll
pop
int3
loope
mov
xchg
sub
aad
fistps
cwtl
test
in
scas
sbb
xchg
xor
stos
scas
je
jecxz
add
xor
out
jmp
and
xor
push
mov
scas
lds
rcll
mov
faddp
orb
cmp
mov
ja
test
in
mov
bound
or
inc
adc
xchg
push
fidivrs
fdivrl
pop
les
ret
addr16
or
fisubrl
icebp
lds
loopne
aad
jge
inc
pop
jo
cltd
xchg
shrb
lods
jl
adc
mov
call
add
mov
arpl
adc
mov
inc
and
test
jl
add
jg
mov
lahf
lds
test
icebp
scas
pop
jge
jl
adc
cmp
pushfw
fsub
pop
mov
lret
xor
sbb
jmp
mov
xchg
pop
popa
add
andl
popa
stos
cmpsb
cwtl
ds
rclb
sub
xchg
sub
xchg
clc
jg
adc
fdivrs
xlat
clc
dec
push
inc
sub
mov
and
sbb
fcompl
push
sbb
out
or
lcall
jle
push
repnz
pop
mov
bound
loop
imul
cli
imull
popl
lods
pop
bound
push
adc
icebp
jge
test
cltd
dec
fucomp
jmp
std
andb
cmp
cwtl
push
fs
xchg
cwtl
in
adc
or
pop
mov
scas
cmp
xlat
or
mov
pop
or
sarb
movsb
inc
popf
inc
lds
mov
sbb
dec
iret
push
out
lods
outsl
and
adc
xchg
loop
push
sub
jo
mov
or
popa
adc
repz
inc
je
sub
sbb
sbb
lcall
test
fisttpll
mov
fmul
mov
jb
mov
mov
incb
test
sub
push
iret
out
ret
lret
je
data16
mov
sahf
cmpsb
fsubrs
mov
add
in
pushf
cli
inc
push
fldl
fwait
fwait
ss
aad
sarl
jge
fcmove
lcall
push
test
fcoms
lock
or
movsl
and
dec
sub
sahf
mov
inc
cwtl
sub
cmp
and
cld
mov
adc
fistpl
scas
into
mov
or
push
popa
or
js
outsl
lods
movsw
repz
clc
mov
ret
out
sbb
sbb
or
and
add
iret
jno
jl
pop
out
jb
or
sub
sbb
outsb
outsb
cli
cmp
insl
shll
aas
push
jecxz
and
lret
push
out
cmp
leave
aam
sar
fidivrs
mov
add
mov
add
fst
mov
jo
das
sbb
mov
lcall
xchg
cmp
shl
std
pop
sub
das
enter
jno
push
pop
scas
arpl
fsubl
popf
rcr
fwait
pop
cmp
xchg
and
inc
lock
xchg
add
out
ljmp
inc
mov
jb
or
dec
cli
inc
sub
in
mov
add
sbb
hlt
inc
loope
jo
or
stc
dec
insl
xchg
pop
notb
sub
cmpsb
pop
or
or
stc
mov
sbb
cmp
xor
lock
rorb
call
out
dec
leave
jbe
cmp
jl
or
popa
imul
js
mov
cwtl
cmpl
sub
add
fldenv
dec
fwait
into
inc
sar
in
test
inc
cmp
mov
xchg
xchg
ss
xor
imul
js
xlat
inc
adc
in
xor
fisttpl
xorl
and
sbb
mov
xchg
fidivrs
push
shlb
inc
gs
jmp
inc
fsts
push
xchg
movsl
sbb
movsl
inc
lods
or
inc
inc
test
call
and
and
push
jb
or
filds
pop
lret
lea
cmp
mov
repnz
mov
movsl
push
jae
ljmp
mov
pop
add
fstps
pop
pusha
fdivrl
push
jbe
xor
js
pop
push
mov
lds
jae
push
pop
mov
jle
mov
mov
fwait
movl
js
add
daa
push
dec
mov
mov
mov
push
cwtl
xchg
fstpl
movsb
mov
mov
jmp
add
jne
inc
xor
inc
push
or
imul
leave
dec
cmp
mov
fcmove
pop
scas
ja
dec
jno
dec
sarl
push
cmp
dec
mov
pop
movsb
pop
jge
xchg
popf
sbb
jnp
mov
int
dec
stos
or
pop
jl
push
adc
mov
adc
fistl
lcall
stc
pop
sbb
lds
xchg
lret
push
mov
mov
xlat
cmp
aas
mov
aad
push
add
sub
sub
bound
xchg
repnz
mov
subl
daa
iret
inc
cli
popl
dec
fdivrs
into
or
addr16
gs
pop
xchg
ds
ds
xlat
in
cmp
push
icebp
xorl
pop
push
adc
jl
mov
xchg
fwait
xorb
cmp
dec
add
out
insb
jecxz
cld
fidivrs
xchg
jmp
aam
adc
sbbl
inc
sbb
inc
cmc
addr16
jecxz
sbb
sti
mov
mov
popa
mov
ret
adc
roll
loopne
shll
xor
outsb
roll
sbbl
push
in
jno
and
jmp
cmp
mov
out
fcoms
cmc
mov
mov
shlb
dec
mov
sub
push
mov
inc
rcrb
scas
js
jno
xchg
mov
pusha
inc
call
pop
ja
jno
sub
mov
and
sub
xor
idiv
pop
push
sahf
loope
xlat
in
sbbb
out
and
xlat
mov
jae
mov
outsb
ficomps
sub
fwait
inc
sar
xchg
data16
in
sub
mov
add
jl
push
std
inc
out
pop
xchg
mov
xchg
or
sub
shll
push
mov
xchg
add
mov
cltd
mov
es
mov
push
sbb
test
out
or
lods
test
add
jp
jmp
int3
or
hlt
pop
xchg
sbb
pop
int3
jns
movsb
and
int3
aad
nop
and
sahf
jae
int
lret
dec
cmpsb
shlb
imul
ljmp
dec
mov
roll
ljmp
push
xchg
mov
cli
setge
mov
mov
pop
dec
test
out
sub
xchg
imul
aad
pop
xor
dec
clc
ret
jle
dec
aad
aam
jle
outsl
inc
mov
aam
push
fsubrs
pop
fisttpll
dec
in
jne
repnz
aam
mov
push
lods
jbe
sub
mov
scas
sub
xchg
outsb
push
lods
xor
aam
daa
test
lods
inc
cmp
das
xor
jecxz
repz
leave
mov
jmp
pop
jnp
xchg
add
std
and
loop
hlt
aas
pop
pop
mulb
insl
pop
pop
rcrl
aam
adc
adc
mov
jp
outsl
ss
or
push
scas
sbb
sahf
sub
push
mov
arpl
std
and
jecxz
jl
push
add
push
add
ljmp
cmp
movsb
mov
xchg
lahf
jb
pop
xchg
xchg
or
int
lock
daa
or
fsubr
ret
stos
push
shll
pavgb
cld
sbb
push
stc
call
and
adcl
sahf
sarb
jae
xor
cwtl
mov
xchg
popa
imul
push
and
pusha
inc
dec
or
jnp
sub
nop
or
lds
repnz
jo
and
iret
stc
and
fdiv
xchg
mov
cmp
fnstenv
in
out
rcll
movsb
jbe
mov
idiv
xchg
mov
insl
mov
clc
jp
xchg
ljmp
into
sub
adc
enter
notl
mov
mov
mov
dec
adcl
and
int
pop
add
xorl
dec
out
sbb
dec
push
rorl
rolb
adc
mov
js
jl
dec
lahf
inc
add
shrb
mov
add
sbb
pop
jne
sti
xchg
rclb
pop
popa
inc
jl
int3
mov
outsb
js
xor
push
sarb
xchg
inc
imul
and
push
inc
jl
into
stos
adc
rolb
xchg
cli
outsl
mov
inc
cmp
repz
cmp
mov
popf
jb
in
mov
pusha
push
mov
adc
ljmp
and
jle
adc
dec
test
shll
mov
test
adc
sti
and
and
mov
xchg
int
jp
inc
clc
psubusb
stos
mov
adc
imul
pop
and
imul
mov
push
es
mov
dec
dec
push
scas
std
xor
fists
and
mov
xchg
xor
cwtl
push
sub
insl
jle
push
lahf
sbb
and
adc
pop
out
or
sbb
or
imul
push
fwait
inc
and
push
pop
jecxz
shll
xor
xor
test
cli
sub
push
mov
mov
jecxz
outsb
push
idiv
mov
mov
jecxz
jmp
popf
movsl
and
push
cmp
add
push
lods
jb
add
ror
mov
jmp
ret
xchg
jnp
data16
mov
clc
add
cmp
std
mov
add
sbb
dec
and
dec
dec
pop
pusha
push
pop
loopne
sti
ret
lret
cmpsl
in
pop
pop
cmp
out
scas
xor
add
fnstenv
inc
xchg
add
xchg
mov
mov
cltd
repz
fsubrs
and
and
repnz
mov
clc
hlt
xchg
sub
cmp
insl
pop
jmp
jg
and
sub
dec
leave
add
adc
fsub
mov
pop
mov
xor
pop
sbb
fistps
js
cld
jno
dec
fcompl
les
cmp
nop
mov
add
xorb
rolb
push
lret
push
push
add
data16
or
jge
popa
jo
push
lahf
les
aad
xchg
inc
lods
sub
vandps
xlat
cmp
nop
xchg
lret
jmp
add
stos
les
ficoml
pusha
pop
xchg
or
sbb
je
sub
jl
scas
mov
mov
out
inc
outsb
sbb
enter
cmp
xchg
hlt
inc
js
andl
shll
clc
fnstcw
xor
mov
icebp
icebp
fdivrp
je
xor
cmpsb
adc
cltd
insl
das
repz
xor
je
ret
movsb
cmp
sahf
xlat
jb
or
sbb
lahf
inc
call
xchg
xchg
dec
mov
str
xlat
cmc
inc
inc
movsl
cmp
and
aas
push
mov
xchg
ficomps
sbb
test
fmulp
pop
xchg
cmp
inc
test
add
int3
pop
mov
mov
sbb
dec
fdivl
subb
cmpsb
sbbl
into
jp
inc
ret
out
int
xor
testl
pushf
pop
lret
push
pop
div
enter
movl
mov
cltd
cwtl
lods
in
jae
xor
imul
push
add
pusha
fisubrs
push
xchg
mov
adc
push
addb
ljmp
xor
jae
pop
jg
inc
xchg
and
stos
xlat
jno
mov
fidivrl
clc
sub
jns
mov
lds
jbe
mov
sub
sub
or
repnz
addb
xchg
jle
and
jne
insl
xchg
out
mov
or
inc
jg
mov
mov
outsl
popf
cmpsl
fnsave
jmp
mov
stos
and
and
in
or
repz
xchg
insb
in
jecxz
in
inc
xchg
mov
test
sub
adc
push
mov
lock
insl
sub
sub
or
xor
mov
and
in
int
sti
push
push
pop
add
mov
xchg
jo
sub
cmp
idivb
inc
std
pushf
out
jp
mov
cmp
in
inc
inc
hlt
sbb
fistpl
mov
fwait
imul
pop
jle
or
fistpll
mov
repnz
jnp
out
imul
ljmp
push
stc
subl
add
and
cs
adc
push
out
push
ret
je
xor
movsb
pushl
ds
int
in
scas
std
mov
aad
sub
lock
sbb
mov
std
imul
test
fisttpl
out
stc
add
xor
push
adc
cmpb
bound
jg
jnp
orl
call
and
jp
add
std
cmp
xchg
cmc
pusha
adc
mov
xor
push
icebp
add
fsubs
cmp
repz
dec
xor
dec
cmp
sub
ja
dec
popa
xlat
and
cmp
add
jge
adc
fstpt
cmp
ret
inc
and
mov
test
sbb
sbb
sarb
sbb
dec
data16
jae
ja
stos
dec
aaa
loop
test
lock
pop
out
xchg
xor
jb
mov
adc
scas
xchg
icebp
add
adc
xchg
out
mov
cmp
dec
lds
scas
iret
orl
aad
iret
sub
push
mov
daa
int
lret
push
ds
xchg
xor
jo
mov
pushf
inc
adc
cltd
jne
pop
dec
mov
xor
sub
in
push
arpl
add
shll
mov
cmp
inc
xchg
mov
mov
stc
xor
daa
xchg
jmp
ja
ficomps
jb
cmp
hlt
cmp
mov
pop
xor
xchg
mov
dec
fnclex
xchg
adc
lock
js
rolb
mov
dec
cmp
stc
dec
cmp
inc
mov
push
jle
mov
ror
xor
ret
sub
mov
scas
outsb
clc
xchg
ret
mov
adcl
xchg
or
adc
cmc
mov
xchg
jg
mulb
mov
popa
jno
and
push
sub
stc
bound
add
out
insl
dec
dec
in
stos
push
movsb
sar
mov
int
pop
in
test
inc
in
or
leave
inc
and
mov
jbe
dec
sbbl
push
divb
jmp
inc
dec
mov
jle
pusha
imul
lock
sbb
adc
pop
add
loope
jge
jp
cmc
xchg
jbe
mov
repz
lret
or
adc
mov
mov
outsb
add
icebp
dec
fcomi
movsl
out
dec
aam
sar
shll
scas
jle
pop
dec
ja
cmp
mov
cmp
shr
and
in
outsb
in
sbb
xor
lds
cmp
jmp
dec
lahf
js
inc
movsb
cmp
sbb
pop
loopne
or
jl
testl
negb
mov
mov
jbe
dec
sti
push
push
and
cmp
adc
ret
dec
std
test
pop
dec
ret
jle
gs
imul
ljmp
mov
rcll
inc
call
adc
add
incl
push
inc
cmc
mov
sbb
enter
pop
cmp
dec
sbb
icebp
out
loop
repz
ja
jbe
popa
adc
pusha
xor
sbb
test
push
xor
cwtl
mov
iret
jl
jg
or
scas
push
mov
std
add
dec
or
jge
cltd
incb
int3
in
pop
aad
cli
cmpsb
insb
iret
inc
pop
lahf
sub
repnz
sti
test
out
loope
aas
fistpl
xor
das
jg
xor
subl
out
cmpsl
xlat
rcr
mov
cwtl
iret
repz
sbb
and
lea
adc
lds
mov
andb
ds
add
arpl
insl
dec
lcall
stos
mov
pop
fucomi
mov
and
jae
push
mov
incb
clc
cltd
movsl
sub
push
add
clc
mov
and
hlt
stos
outsb
and
or
jno
jae
sbb
popl
aam
mov
std
pop
xchg
push
add
ja
jg
repz
lods
bound
jl
push
push
add
mov
mov
sbb
sbb
pop
inc
fwait
aas
insl
cmp
jle
test
jo
fs
pop
adc
mov
dec
xor
mov
les
sahf
or
pop
sti
out
stos
cmp
int
mov
sbb
dec
sub
ljmp
mov
out
cs
ljmp
cmp
sub
pop
mov
pop
xor
adc
jne
ljmp
push
sbb
jl
mov
and
cmp
sarl
push
or
xor
xchg
sub
popf
jb
or
into
repnz
lods
mov
rcrb
jp
out
mov
mov
xchg
inc
add
inc
or
ljmp
popf
cmp
or
push
jl
mov
pop
push
dec
ds
lahf
xor
decb
arpl
jnp
mov
sbb
jbe
pop
xchg
jnp
mov
shrl
ds
mov
popf
or
pop
sub
mov
dec
lcall
fistpll
push
rclb
push
dec
in
dec
mov
call
mov
test
inc
rorl
fstpt
jo
mov
cmp
xor
jl
push
or
scas
jbe
or
cwtl
add
pop
dec
scas
jnp
xlat
xor
fdivs
dec
scas
stc
sbb
adc
push
jno
rcrl
inc
mov
ret
pop
dec
shrb
add
mov
scas
cmp
inc
daa
daa
shr
cmpsl
stc
jl
pop
mov
mov
jp
sub
pop
jle
movsb
push
mov
call
mov
add
xchg
dec
scas
pop
push
mov
mov
push
les
into
add
push
mov
inc
repz
dec
xchg
lds
jbe
inc
andl
cwtl
sub
adc
pop
inc
push
dec
dec
das
dec
movsb
das
call
mov
pop
jge
mov
lcall
or
scas
inc
sbb
push
jnp
mov
sub
faddl
dec
idivl
xchg
pop
stos
lock
dec
mov
jecxz
subps
icebp
adc
pop
lret
shlb
xchg
dec
hlt
rcrl
aam
mov
mov
fdivrp
lods
mov
lea
rorb
pop
jne
fwait
ds
mov
xor
int
cmp
push
pop
add
lcall
in
in
mov
fisttpl
or
loope
dec
lea
sub
jnp
fnstsw
jle
ret
inc
dec
pusha
or
mov
repz
pop
out
jg
and
jle
cmp
lret
dec
pushf
sub
and
push
cmp
push
out
mov
jmp
unpckhps
adc
popa
cmpsb
in
add
xchg
ret
dec
rcrl
mov
loop
jle
lock
mov
pop
push
add
ds
aam
out
mov
cmp
mov
dec
movsb
xor
in
nop
inc
les
fidivrl
cltd
and
aad
sbb
loopne
mov
fildl
adc
cmp
idiv
push
test
orb
mov
ret
add
fwait
mov
repz
cli
bound
sbb
sahf
shlb
lret
pop
shrl
dec
mov
push
call
inc
faddl
xchg
out
adc
mov
movl
push
movsl
das
mov
lea
cli
sar
cld
aam
movsl
inc
aad
push
cmc
test
cmp
ds
fisttpll
xor
dec
leave
xor
adc
cltd
adc
aas
adc
pop
inc
popa
mov
sbb
xorl
or
mov
into
push
cmpb
sub
jmp
sar
mov
mov
in
sbb
pop
xchg
not
pushf
adc
and
inc
cmpsl
lods
push
loop
inc
fldt
jge
testb
dec
and
add
pop
stos
cmp
mov
add
sub
pop
cmpsb
xor
push
mov
adc
dec
push
add
inc
push
dec
xor
mov
and
scas
pushf
jns
mov
jne
cs
cmp
imul
aas
lret
mov
in
push
mov
mov
and
outsl
pmaddwd
repz
cs
inc
adc
mov
addr16
scas
mov
pop
jmp
shll
mov
and
insb
xor
hlt
push
adc
icebp
push
pushf
aas
arpl
popf
hlt
aad
mov
sbb
cmp
stos
cmpsl
dec
add
dec
sbbb
stc
loope
aam
jns
xchg
pusha
lock
sbb
add
mov
imul
pop
or
testl
dec
pop
scas
xchg
push
clc
sbb
int3
mov
mov
cmpsl
sbb
stc
outsl
test
cmc
mov
sahf
adc
sahf
mov
shrb
sub
push
mov
nop
fdivl
inc
mov
loope
and
repz
fs
mov
outsl
std
js
cmp
jb
scas
xor
cmp
push
xchg
dec
in
shl
fmuls
outsb
ret
and
mov
ret
aas
popf
lret
cmpsl
inc
lret
and
jno
sbb
loopne
pop
jnp
cmp
sub
mov
sbb
gs
mov
scas
mov
sahf
xor
aad
jg
sub
xor
leave
sahf
xchg
arpl
dec
lcall
cmpsl
mov
cmp
adc
sbb
push
or
xor
aaa
jmp
rep
scas
fisttps
mov
and
jmp
sbb
cmp
or
and
mov
mov
aaa
push
add
mov
clc
loopne
fistps
sub
pop
hlt
mov
and
cmp
out
push
mov
repnz
ja
pop
gs
loop
adc
daa
pop
test
pop
cmp
int3
dec
xchg
cmp
shrl
inc
out
cmp
pop
xchg
push
movsb
ljmp
sub
test
lock
out
add
lret
mov
mov
rcl
hlt
js
test
jo
adcb
add
jmp
xor
test
pop
mov
mov
popa
sbb
dec
aas
or
into
daa
lock
cmpsl
ret
and
daa
test
cwtl
fsts
push
mov
xor
mov
adc
inc
in
mov
push
daa
js
and
insl
mov
ss
sub
shll
cld
or
jg
mov
cwtl
add
lret
popf
sbb
xchg
push
mov
das
ss
loopne
adc
dec
adc
stc
add
push
dec
dec
and
inc
insb
fstpt
repnz
pop
pop
lock
mov
jmp
mov
pop
mov
sbb
out
cmpsl
addr16
std
lahf
test
je
pop
inc
dec
sti
xchg
aad
sbb
dec
mov
cmp
andb
jne
lods
mov
out
xchg
xorl
cmp
mov
push
or
stos
jns
adc
push
and
lods
dec
mov
mov
sub
adc
xorb
push
repnz
lret
sbb
adc
sub
and
adc
xor
mov
lret
fldenv
jns
mov
adc
fwait
xchg
or
mov
ja
push
jne
and
in
sbb
xlat
jp
mov
jg
test
adc
inc
sbb
jo
shlb
mov
bnd
dec
push
dec
adc
push
test
jae
lods
rcl
cwtl
xchg
dec
rorl
lcall
cli
cmp
mov
hlt
cmp
aam
pop
push
hlt
mov
test
ret
loope
mov
sub
pop
es
jmp
test
xchg
les
ss
aas
jo
sub
mulps
mov
add
pop
loope
jnp
stos
js
jp
add
or
push
lahf
adc
add
sub
movb
ret
dec
test
jecxz
pop
addr16
or
xchg
inc
sahf
mov
lret
into
ucomiss
pop
adc
rcrl
cwtl
movsl
in
jl
loope
fs
dec
mov
dec
pop
jge
push
add
mov
adc
repz
mov
clc
dec
jmp
and
sub
fdivrl
mov
adc
fdivrl
inc
adc
fdivs
cmpsl
ja
pop
jmp
out
push
xorb
iret
push
test
pop
lods
repnz
dec
mov
outsl
loop
jl
test
adc
inc
shl
dec
dec
inc
lahf
xor
shrb
lea
sub
stc
sub
lret
inc
lret
mov
imul
imul
dec
xorl
or
dec
addr16
js
stos
mov
sub
and
mov
test
jns
out
icebp
dec
jl
mov
mov
and
push
ret
sub
ret
or
xchg
imulb
fcmovu
shlb
insl
jp
andb
imul
js
cmc
adcl
sub
fdivs
xor
outsl
out
aaa
jbe
das
movsb
sbb
or
aad
leave
and
xchg
jecxz
ss
xchg
cs
lret
or
sbb
or
std
inc
jb
fisubl
jl
push
adc
mov
ret
adc
and
sbb
call
pop
faddl
cmp
daa
call
andb
lcall
shrl
aaa
ds
sub
sbb
divb
fwait
fcmovnbe
test
aaa
pop
pop
outsl
xor
and
mov
aas
pusha
dec
push
rorb
inc
dec
sbb
cmp
dec
inc
adc
inc
xor
jg
mov
sbb
mov
ja
data16
cmp
jns
adc
ss
sub
data16
mov
xchg
les
or
lret
cmpsb
xor
into
cmp
xor
hlt
repnz
clc
outsb
gs
cmp
xlat
into
and
in
data16
mov
sbbb
out
pop
popf
mov
jecxz
bound
mov
jp
inc
sbbl
dec
sbb
dec
lods
xor
push
pop
inc
mov
cmp
aaa
push
aam
sbb
or
xchg
xor
std
out
pop
pop
mov
xlat
jmp
cli
xchg
dec
add
daa
fisttpl
mov
in
lods
xor
push
hlt
pop
shlb
mov
cli
push
cmpsb
dec
fimuls
sbb
adc
daa
rorl
enter
pop
test
mov
fmulp
push
repnz
inc
dec
sub
test
lret
mov
and
lcall
scas
fiaddl
loope
cmp
decl
stos
dec
ljmp
imulb
fiaddl
testb
call
pop
pop
cmp
test
leave
addr16
into
clc
bound
and
mov
sub
sbb
repz
jmp
aas
adc
popf
int
mov
adc
loopne
add
pushf
cwtl
aad
jecxz
aas
shll
and
sbb
inc
pop
loopne
mov
xlat
lret
push
pop
cmpl
test
mov
mov
fistps
int
mov
or
mov
mov
pop
cld
adc
dec
adc
addr16
sub
cmpb
mov
pop
cmp
mov
jne
and
pop
xchg
ds
jecxz
jecxz
stc
fcmovnu
mov
dec
push
pop
je
pusha
push
mov
data16
mov
daa
add
clc
xor
data16
enter
mov
aaa
dec
std
adc
adc
add
pop
dec
fwait
sub
pop
mov
mov
or
mov
mov
xlat
popa
push
jne
sbb
gs
add
mov
mov
mov
cmp
gs
mov
pusha
rcr
stos
popa
inc
test
ficoms
push
cmpsl
out
pop
pop
ja
mov
push
repnz
sub
or
inc
jl
add
mov
mov
xchg
cmp
sub
cmp
enter
lret
push
nop
aam
pushf
cmp
adc
imul
fxch
addr16
jnp
inc
pop
cld
jl
pop
popa
and
pop
fnsave
addr16
push
inc
cli
out
push
daa
loop
sub
push
sub
inc
sbb
call
cwtl
arpl
adcb
lret
dec
dec
popa
scas
pop
sub
mov
cmp
lret
mov
lahf
scas
jge
jb
movsb
dec
scas
cmp
dec
test
lods
lds
add
mov
dec
sub
push
add
in
push
aad
in
jnp
out
jne
roll
cmc
dec
adcl
mov
add
repnz
xchg
mov
sti
jno
mov
jno
sub
in
and
addr16
mov
call
ss
xchg
add
jne
jg
lock
sarl
mov
pop
add
jo
popa
sub
adc
add
xchg
mov
iret
movl
loope
mov
ffreep
rcrl
push
aam
test
sahf
jb
and
loope
adc
xor
fsts
ret
in
in
push
push
cld
add
inc
lret
and
arpl
stc
sti
sbb
lock
cmc
enter
fcomip
mov
mov
data16
aas
sub
adc
loop
jb
shrb
pop
xor
addr16
stos
push
out
pushfw
xchg
mov
rolb
aad
mov
add
mov
aad
pushf
pop
mov
dec
ss
push
pushf
arpl
test
push
lds
mov
pop
xchg
xchg
mov
stos
sub
push
jmp
xchg
inc
dec
cmp
fcmovb
cmp
pop
jge
jnp
or
lds
adc
and
iret
dec
cmc
outsb
jp
les
cmpsb
jno
xor
out
subl
xor
mov
jmp
mov
cmp
and
fisttps
push
add
mov
loope
loopne
sbbl
push
gs
xor
mov
jle
mov
mov
jg
divl
fs
cmpl
cmpsb
shll
clc
pop
rol
pop
mov
or
mov
push
les
mov
fwait
add
mov
scas
push
lods
mov
ficompl
xor
mov
inc
pop
shlb
sar
pop
lahf
push
imul
test
jns
arpl
pusha
mov
mov
xor
pop
lcall
sbb
test
fdivs
jae
jge
jge
and
addb
lods
fwait
dec
mov
movsb
sti
out
pop
insl
sub
sub
mov
add
cmp
pop
pop
inc
add
jg
xchg
adc
lret
loop
loop
mov
scas
pusha
test
xchg
lahf
xorb
pop
out
or
mov
addb
inc
arpl
or
sub
fs
push
mov
shlb
pop
xchg
mov
test
popa
loopne
jo
stos
stos
aas
push
dec
ss
gs
pop
mov
popf
outsb
fildl
rorl
jl
push
pop
sbb
out
imul
and
cmp
filds
xor
out
dec
es
sbbl
push
xchg
pusha
cmc
xor
sub
jp
jmp
add
nop
not
jecxz
mov
mov
cmc
movsb
arpl
lahf
mov
cltd
movsb
popf
inc
xor
push
adc
and
and
sub
mov
cwtl
les
mov
mov
dec
inc
jecxz
sub
aad
xchg
popa
in
scas
jne
jmp
adc
enter
adc
add
int
add
mov
insb
mov
fists
mov
add
cmpl
mov
leave
int
in
test
repz
and
imul
das
and
lea
cmp
fldenv
ljmp
and
push
mov
xchg
adc
leave
inc
and
or
js
lret
clc
push
jns
cmp
mov
mov
xchg
push
fcmovne
pusha
imul
fsubs
movsl
inc
fstps
xchg
lds
je
imul
cmp
cli
jbe
push
addr16
xor
fimull
adc
or
fsub
and
js
or
mov
and
mov
int
fxch
add
cli
push
dec
and
add
xlat
sub
mov
mov
jge
dec
pop
jno
fisubrl
lcall
out
inc
xchg
lahf
xchg
mov
jge
dec
or
push
or
xchg
jnp
push
pop
dec
mov
fsts
cmp
mov
inc
bound
fwait
shrb
out
xchg
push
push
gs
js
jecxz
fwait
ds
push
std
bound
aam
decl
xchg
pop
or
mov
and
and
popa
mov
in
pop
imul
add
or
js
lcall
movsl
adc
loopne
adc
loopne
sub
mov
and
mov
mov
and
mov
mov
mov
inc
fimull
mov
jbe
push
ficomps
lret
mov
test
xor
sbb
pop
cmc
sub
sbb
cs
cmp
pop
push
aam
inc
inc
jb
add
xor
add
mov
pop
add
jge
adc
push
pop
and
jge
add
aad
jmp
sbb
jecxz
aad
cmp
and
aam
fwait
or
lods
xor
rclb
stc
sbbb
rol
mov
or
pcmpeqd
adc
pop
frstor
out
dec
addr16
filds
inc
aam
loopne
cmp
nop
add
mov
insl
xor
outsl
int3
jmp
icebp
cmp
pop
push
mov
mov
push
das
add
xchg
push
pop
pop
and
iret
inc
in
pop
int
cmpsb
pop
xchg
lret
jmp
subl
push
dec
repz
shrl
cmc
inc
cvtdq2ps
and
cmp
pop
mov
inc
fcoml
lea
jge
mov
movsb
std
addl
jnp
inc
dec
xor
pop
out
sbb
cmpsl
inc
push
ret
call
cli
ljmp
dec
fdivs
and
inc
xchg
rolb
shl
jecxz
repz
lods
or
mov
les
mov
push
or
out
jp
sub
aaa
shrl
sbb
dec
test
into
dec
mov
inc
mov
out
lods
or
push
js
nop
mov
nop
ror
rclb
lret
sub
fwait
jae
or
ds
in
outsl
inc
addr16
mov
call
int3
mov
rorb
inc
into
hlt
sub
xchg
jmp
movsb
out
mov
xchg
sub
data16
jecxz
push
int3
push
jbe
lcall
aad
lahf
add
adc
fisubl
adc
fs
pop
xchg
and
enter
or
cmc
and
adc
mov
loope
repz
shll
fnsave
jge
lahf
xlat
jp
in
lahf
add
and
cmc
jmp
in
cmp
sub
aam
mov
and
ds
out
imul
or
inc
out
nop
cmp
stos
jp
mov
sbb
dec
cmpsb
mov
jae
xchg
loopne
dec
jo
jg
mov
daa
jle
adc
sub
out
cwtl
add
cmp
mov
sub
ds
loop
and
ja
mov
cmp
pusha
fnstcw
jnp
mov
idivl
pop
xchg
imul
aas
xchg
mov
stos
idivl
xor
roll
hlt
xchg
xlat
ljmp
cmp
sub
lea
mov
cld
sbb
data16
popa
pop
xor
xor
sahf
pop
mov
lea
xchg
movsl
or
and
outsl
into
sub
inc
xor
mov
cmpb
jo
popf
decb
jmp
stos
push
push
mov
add
mov
jnp
cmp
adc
xchg
pop
inc
push
mov
shl
push
lret
jne
notb
cs
sbb
push
les
ret
mov
out
jno
jmp
sbb
push
mov
sti
xchg
xchg
jne
imulb
subb
sub
into
mov
jbe
pushf
inc
cmpsb
dec
mov
inc
cmp
mov
pop
ds
lock
fistps
in
pop
adc
notb
pusha
loopne
lret
pop
pop
mov
jo
fisttpll
popa
test
scas
inc
loop
cmpl
jnp,pn
jbe
adc
pop
jnp
jmp
lcall
add
cmp
push
int3
popa
mov
out
dec
mov
int
pop
jmp
cld
test
repnz
mov
inc
lret
test
sub
stc
enter
mov
jmp
mov
daa
jo
stos
sub
cmpb
ficompl
test
in
and
call
push
call
push
add
cmpsl
pop
flds
add
inc
test
aas
cli
push
popf
adcb
sarb
icebp
cmp
std
mov
add
mov
loopne
adc
xor
into
mulb
pop
clc
lea
jle
sub
sbb
shr
sub
movsb
ljmp
fdivr
icebp
inc
bnd
mov
mov
sub
jle
and
push
or
js
cwtl
notb
imul
add
sub
daa
and
cmpl
filds
outsb
push
ds
movsb
das
push
add
inc
jno
jecxz
xor
es
mov
mov
or
shrb
in
ljmp
mov
ret
mov
ror
xor
and
xchg
js
adc
les
add
rorl
xchg
adc
mov
aaa
ds
cmp
and
ja
jecxz
pop
imul
mov
lds
movsb
incb
cmp
pop
cltd
sbb
push
xchg
cmp
test
js
mov
lcall
adc
mov
lock
pop
mov
mov
mov
nop
cmp
pop
ret
sbb
sbb
iret
sub
push
jns
incl
or
pushw
sbb
xor
jecxz
jbe
sub
fisttps
xor
cmpsl
js
shrl
cmp
jle
dec
adc
mov
ds
mov
std
inc
jb
jne
hlt
enter
imull
into
xchg
outsl
pop
jns
xchg
jns
mov
test
not
or
or
push
push
lock
mov
loop
lods
fwait
out
xchg
inc
cmp
inc
add
xchg
mov
jb
rcrb
and
pop
jg
mov
lahf
mov
adc
lret
test
add
mov
arpl
fbld
lret
lret
insb
or
dec
or
or
xor
add
shl
iret
rolb
mov
or
aam
and
insb
popf
adc
test
and
call
sub
cltd
mov
cmp
mov
cld
xchg
ds
push
mov
fmull
daa
mov
loopne
js
imul
or
lcall
popf
iret
repz
push
icebp
out
mov
mov
push
pop
dec
xchg
es
cmp
dec
cld
jb
push
mov
xchg
mov
pop
outsl
fwait
bound
sarb
jno
lcall
sbb
mov
adc
sbb
and
test
cli
jbe
mov
adc
inc
mov
jo
jne
dec
jb
add
inc
pop
push
scas
ds
sbb
pop
mov
xor
mov
push
std
sub
pop
add
scas
add
outsb
pop
jns
jp
inc
es
dec
roll
in
xor
test
sub
mov
jp
xchg
ds
cmp
ja
shlb
inc
stos
add
es
scas
or
lods
ret
mov
push
mov
into
les
sbbl
iret
cmp
push
out
mov
jle
jge
push
ret
arpl
add
outsb
jne
fildl
jb
push
leave
fisttpl
pusha
sbbl
jne
mov
into
jbe
out
bound
jecxz
jg
push
dec
ss
fwait
xor
scas
popf
push
push
cmp
dec
inc
jns,pt
mov
icebp
clc
data16
cmpsl
add
lret
jge
and
jns
je
test
fmuls
inc
pusha
scas
push
inc
lock
pop
or
packssdw
js
in
xchg
push
or
dec
std
adc
inc
inc
push
lock
fdivrp
push
arpl
rcl
jbe
inc
sub
cwtl
popa
ret
push
fdivrs
mov
repnz
out
gs
inc
inc
ret
call
sub
fsubrp
cmp
mov
out
out
scas
cmp
mov
fcompl
sbb
out
es
pop
mulb
leave
mov
loope
test
arpl
sahf
inc
fcomi
push
sbb
popf
das
add
fstpl
mov
or
fwait
aaa
aam
stos
mov
rol
fmull
mov
arpl
psrlw
movsb
sbb
loop
pop
xor
sub
adc
sub
pop
inc
cmpsl
or
pushf
xor
push
pusha
or
lret
sub
je
hlt
aas
ret
push
stos
sbb
adc
std
cmp
in
xchg
sbb
mov
outsl
jecxz
stos
adc
or
xor
leave
or
ret
cmp
and
nop
shl
hlt
addr16
inc
push
out
lret
add
xchg
icebp
jnp
xor
add
xchg
outsb
clc
in
lcall
adc
test
int3
dec
sbb
jb
xor
shll
rolb
adc
neg
push
mov
iret
test
mov
mull
rorl
jae
mov
jmp
pop
inc
lcall
lret
pop
push
mov
dec
popf
mov
mov
pop
roll
lret
push
cmpl
mov
push
jge
mov
aaa
pusha
repnz
push
icebp
lret
mov
push
fadd
add
loopne
cmp
adc
jo
cs
in
inc
pop
mov
into
aad
pusha
int
sbb
push
push
ret
sbb
and
sahf
sub
xchg
mov
ljmp
pop
mov
subb
fsubl
clc
fistpll
stos
push
out
dec
jnp
mov
xchg
jmp
test
adc
mov
fists
test
jecxz
or
sbb
sub
inc
mov
inc
mov
orb
pop
loop
icebp
push
dec
loopne
mov
test
ja
or
mov
in
jb
dec
and
add
inc
iret
in
jne
sbb
jl
fcmove
push
or
test
out
cmpl
lret
and
add
das
mov
jne
xchg
dec
ja
xchg
inc
movsl
adc
fsubrp
pushf
dec
shl
adc
daa
fnstsw
int3
pusha
lock
jge
lret
iret
sub
in
js
adc
rolb
test
dec
out
test
ss
shlb
je
xor
jg
nop
adc
cli
sbb
mov
rcll
movsb
pop
xor
sbb
int3
mov
xchg
lret
and
or
hlt
add
cli
xchg
or
xor
xchg
xor
pop
loop
clc
lds
out
sahf
inc
sub
dec
jmp
lcall
fsubrl
mov
imul
enter
ror
divl
mov
addr16
mov
mov
rcrl
cmp
sub
ljmp
cmp
shll
mov
je
std
scas
test
loope
sub
divl
mov
sti
add
ds
pop
orl
clc
mov
sbb
sub
add
mov
xchg
rorl
arpl
iret
mov
push
mov
mov
sbb
enter
cmp
push
jp
xchg
mov
or
popf
jae
sahf
jg
shll
loop
mov
cli
mov
xorl
mov
rol
lods
push
sbb
mov
cld
fwait
jnp
in
aad
negl
rcll
jp
call
leave
sarl
sub
std
inc
jmp
sbb
cmc
push
pop
lret
bound
ret
and
dec
cld
sarb
sarl
fsubrl
pop
divl
aaa
and
cs
out
jnp
mov
add
mov
xchg
enter
dec
or
fstpt
cld
cmp
jns,pn
sbb
test
jbe,pn
xor
out
xor
mov
sub
pop
stc
jne
jg
mov
clc
jp
or
mov
adc
sti
xor
dec
pushf
push
jo
sarl
in
aas
lcall
sub
add
sbb
pop
lret
cmpl
and
or
mov
ljmp
jle
repnz
cli
jle
sub
jle
test
iret
inc
pusha
push
lcall
rcr
mov
xchg
pop
fst
push
les
mov
add
outsl
cmp
xchg
push
rcrl
xchg
sub
adc
je
popl
mov
jno
sahf
repnz
ror
xchg
cltd
or
dec
xor
mov
sub
jno
xchg
push
ja
cmp
fsubp
push
mov
mov
ud2
out
pop
ficoms
cmp
pop
mov
mov
xor
in
ljmp
hlt
jg
pop
add
pop
and
xchg
mov
hlt
cwtl
dec
cmc
ds
fsubl
jnp
push
sub
arpl
lods
sbb
mov
pushw
mov
ficoms
andl
fistpll
xor
cmp
pop
scas
jae
push
sub
cmp
add
mov
sbb
mov
loopne
xor
mov
xor
adc
fcmovnbe
push
mov
rolb
adc
xchg
das
push
add
loopne
cmp
jle
adc
dec
pusha
add
lods
mov
fwait
ds
imull
pushf
xor
add
xlat
test
mov
sarb
mov
rol
push
nop
aam
in
xor
leave
les
adc
mov
or
mov
aad
inc
and
sub
lods
jbe
mov
jae
test
add
repnz
shl
xor
mov
and
ficoml
repnz
in
repnz
inc
testl
cmp
adc
enter
and
inc
dec
push
and
es
fsubrs
mov
mov
orl
das
push
sbb
sub
movsl
hlt
push
sbb
mov
xchg
dec
imul
and
popa
pusha
int
fs
jecxz
ret
mov
inc
fdivrl
push
psrlq
sbbl
int3
lds
mov
xchg
xor
mov
out
jb
and
lcall
cwtl
imul
push
push
fisubl
xchg
dec
mov
dec
pop
enter
aad
xor
and
add
ret
mov
lock
xchg
xchg
lret
sahf
in
out
jns
ljmp
inc
loop
ret
xchg
sbb
clc
push
mov
sahf
xor
fcmovnu
add
jae
mov
push
jns
ret
stos
stc
mov
jbe
outsb
xchg
add
xor
add
out
dec
lret
call
ja
push
mov
push
hlt
out
pop
mov
cwtl
dec
orb
xor
data16
mov
dec
xchg
push
mov
mov
sub
pop
cmp
xor
mov
and
pusha
lds
mov
adc
push
pop
fs
mov
sbb
cmp
push
ds
testl
pushf
xchg
dec
pop
ret
jo
push
push
adcb
push
sahf
into
imul
lret
pop
in
xchg
loop
xchg
repnz
rcr
lods
push
idiv
mov
sbb
loopne
aaa
pop
imul
jno
lds
push
sbb
dec
cvtpi2ps
in
data16
loopne
sarb
nop
movd
pushf
mov
xor
xor
xchg
out
sbb
sti
jnp
jno
outsb
jno
add
je
cmp
xor
dec
incl
sbb
jb
or
shrl
fwait
jb
or
clc
jbe
stos
loopne
stc
loopne
cmp
fimuls
dec
test
mov
cltd
dec
push
out
fidivs
pop
dec
insl
repnz
fbld
mov
dec
loop
es
aas
dec
sahf
cli
stc
fwait
xor
dec
mov
and
stos
repnz
adc
sahf
mov
sbb
mov
nop
add
in
mov
lock
sub
xchg
mov
xchg
andl
lret
xor
push
incl
fcmovnu
mov
mov
pushf
xor
sarl
aad
movb
or
mov
pop
cmp
movsb
stos
or
pop
stc
dec
mov
and
lret
leave
jmp
and
orl
xchg
pop
mov
inc
scas
and
divb
inc
xchg
jo
jno
mov
cs
ffreep
adc
lret
mov
mov
adc
call
rcl
mov
adc
pop
jecxz
addl
cmp
cmp
mov
mov
xlat
pop
iret
mov
call
pop
or
mov
xor
push
pop
fwait
sbb
dec
cmp
out
mov
mov
and
scas
dec
cs
rolb
popf
jne
stc
stos
or
cs
fbstp
inc
jp
movsl
fldt
xor
and
add
adc
and
jno
pop
lret
adcb
push
sbb
call
push
jbe
push
aam
into
in
pop
push
sbb
xor
mov
popf
test
rorb
repz
push
mov
sub
ret
mov
loopne
ret
xlat
mov
mov
ljmp
repnz
mov
mov
push
jo
shll
add
pop
das
fdivrl
mov
push
xchg
out
or
in
sar
stos
and
jp
and
pop
xchg
sub
xlat
xchg
dec
mov
sahf
xchg
ret
ret
push
adcb
rcll
js
sub
push
xchg
pop
stc
adc
data16
sahf
movsb
imul
mov
push
lea
and
mov
dec
xchg
jbe
xchg
rorl
stc
cltd
sub
dec
jo
push
aad
xchg
cmpl
jle
repz
andl
out
pop
xchg
push
loope
cltd
repz
outsb
push
popf
mov
out
notb
push
cmp
aad
push
push
out
sbb
xchg
mov
sbb
shll
pushf
mov
dec
push
jb
and
out
sbb
clc
adc
cmp
push
pushf
pop
sarl
lahf
fnstsw
mov
and
push
xor
pop
jo
or
xorl
jne
insb
int
add
outsl
mov
fidivrl
cmpb
dec
dec
and
lods
sub
shll
vhaddps
dec
sbb
pop
arpl
xchg
or
enter
fcmovu
pop
sub
jl
lods
pushf
pop
out
add
jo
into
pop
vpavgw
dec
imul
pop
mov
repnz
or
in
jmp
mov
sbb
shrb
jp
and
aas
rcll
pop
pop
adc
pop
popf
push
stc
inc
xor
adc
mov
mov
inc
idiv
push
jb
cmp
xor
cmp
push
popf
mov
push
lahf
bound
add
sbb
insl
push
cmovb
cmp
pop
and
adc
mov
sti
sbb
push
frstor
icebp
inc
or
aad
mov
push
popa
ja
nop
repz
jbe
jmp
inc
insl
loop
push
out
test
pop
cmpsb
lds
imul
sbb
fisubl
ret
imul
xchg
inc
mov
in
sbb
push
pusha
in
mov
add
xchg
loopne
mov
mov
add
dec
mov
les
fwait
outsl
shll
call
inc
dec
shlb
test
mov
xor
and
jg
fstl
mov
xlat
ss
bound
xchg
dec
fnstsw
mov
mov
pop
aam
mov
or
pop
mov
pop
lock
mov
stc
jg
add
cmp
lea
sub
sbb
pop
sbb
popf
loopne
cld
in
movsl
arpl
lcall
sub
push
xchg
andl
imul
sbb
jg
fs
push
inc
ror
push
pop
xor
xchg
fs
pop
into
stos
or
fnstenv
xchg
ret
sbb
shl
lods
jno
pop
push
lret
push
mov
sbb
push
mov
sub
jo
mov
jp
mov
mov
fisttps
xor
lea
pop
push
pop
lock
pop
add
out
dec
cmp
sbb
mov
pop
adc
push
adc
mov
xor
cwtl
mov
lahf
sahf
sub
inc
or
in
fstps
scas
push
das
xchg
adc
addb
test
outsl
scas
sbb
cmp
lea
fmull
xchg
inc
push
adc
inc
pop
in
dec
push
or
loop
icebp
xor
add
xor
and
inc
insl
mov
bound
sbb
inc
ljmp
adc
sahf
test
dec
mov
xchg
inc
pusha
push
inc
sub
jo
push
out
lahf
mov
push
mov
and
jmp
sbb
mov
cwtl
jle,pt
pop
xchg
cmpsl
imul
add
fsubrp
bound
mov
push
jns
popa
mov
inc
shll
loop
rolb
adc
dec
adc
xchg
in
xchg
inc
in
es
or
xor
lods
jbe
aas
pushf
push
jmp
inc
push
xor
stc
mov
mov
shlb
scas
or
int3
cmp
mov
ljmp
add
jb
std
adc
or
stos
outsl
test
mov
les
sub
bnd
popf
xor
jbe
cmp
sarl
jmp
or
movsl
sbb
push
loopne
xchg
xchg
ljmp
les
mov
pop
xchg
pop
movsl
lahf
sahf
inc
stos
cltd
push
xchg
ret
ja
lds
dec
and
inc
js
push
sub
jl
test
dec
sub
pop
sbb
jno
pop
add
scas
lret
popa
sub
scas
add
cmc
jae
stos
out
push
aaa
mov
pusha
jne
ss
in
sub
dec
mov
push
inc
dec
inc
fmuls
dec
fcmove
ret
push
push
faddl
jge
cld
lods
xor
cpuid
pop
mov
movsb
fs
dec
xchg
fldcw
inc
cmp
sbb
ret
mov
imul
shlb
dec
mov
sbb
scas
scas
adc
xlat
cvtpi2ps
sbb
mov
xchg
mov
dec
mov
and
adc
pop
xor
shll
sbb
jp
cld
repnz
cmp
push
andl
fidivl
lods
sti
test
pop
sbb
je
mov
xor
fwait
arpl
pmaddwd
push
std
mov
pop
fnsave
mov
out
aas
add
fwait
arpl
pushf
sbb
mov
fimuls
stos
into
push
ds
sbb
fistpl
mov
or
std
jbe
lahf
dec
sub
dec
dec
inc
out
sub
sarb
dec
xor
adc
adc
jbe
hlt
aaa
sub
adc
lods
addl
or
mov
pop
ret
bound
nop
jle
adc
pop
jle
adc
test
aam
cmp
add
push
mov
and
mov
xor
lret
mov
adc
arpl
into
stos
sub
fildl
je
popf
aad
cld
mov
inc
or
mov
test
jnp
push
or
daa
mov
fisubl
stc
sbb
movsl
out
mov
stc
push
and
inc
out
and
push
mov
dec
and
jns
sbb
sarl
xchg
jg
rorl
int3
popf
sbb
outsb
jbe
mov
lcall
dec
mov
adc
cmpsb
sub
enter
in
adc
and
add
mov
sub
mov
inc
lods
dec
subl
xchg
rolb
sbb
xchg
and
stc
test
repz
lea
push
cmp
sahf
inc
xlat
faddl
xor
cltd
xchg
pop
icebp
mov
aaa
je
sbb
mov
pop
xchg
ljmp
popf
inc
xor
fstpt
push
jno
in
scas
jb
dec
inc
mov
cmp
add
test
adc
xchg
pop
subl
pop
mov
mov
xchg
je
stc
and
sarb
stc
mov
xor
ss
and
test
mov
in
sahf
aam
sub
add
jne
dec
fnstsw
inc
fildll
out
jmp
cwtl
sub
test
fidivrl
insb
and
sarl
fisubrl
jne
jbe
in
cmpsb
rcll
pop
mov
pushf
mov
jmp
ss
pop
shrl
or
push
test
ret
cmp
lcall
adc
mov
xchg
cmp
negb
xchg
mov
mov
int
xchg
inc
push
dec
or
mov
xor
add
and
es
cmc
sbb
hlt
scas
call
fs
lods
inc
inc
jo
pop
lods
ret
xor
jno
cmpl
mov
mov
lcall
mov
dec
and
inc
sub
mov
pop
xchg
lds
dec
adc
repz
mov
js
jne
imul
ret
sbb
mov
les
outsb
adc
lahf
jo
xchg
jbe
movaps
in
leave
stos
push
mov
push
cs
in
jmp
fdivl
lcall
add
pop
movsb
mov
xchg
mov
xchg
mov
mov
adc
bound
repnz
mov
push
cmp
pusha
addr16
fdivs
outsl
ljmp
sbbb
xor
lret
mov
out
fcom
or
xchg
mov
imul
sub
sub
lods
lret
or
and
mov
inc
fcomi
dec
out
in
mov
cmp
push
jecxz
dec
sub
add
fnstcw
insl
repnz
fisubl
push
rcrl
adc
dec
movsb
push
inc
mov
cmp
pmullw
jae
mov
aam
lret
call
add
add
mov
mov
inc
sbb
fsubrs
mov
xchg
loop
aaa
mov
lret
inc
mov
and
notl
jecxz
mov
imul
inc
or
or
add
push
cmpsl
xchg
sbb
sbbb
insl
les
mov
jle
jnp
lock
nop
stos
loopne
lahf
push
test
lret
xor
fs
lahf
insl
aam
daa
xchg
sbb
into
inc
cmp
in
ret
mov
lcall
cmp
and
data16
mov
sbb
out
fisubl
cltd
sub
in
dec
sti
dec
xchg
ds
test
xchg
in
cld
push
aas
ret
fists
test
sbb
xchg
int
test
cmp
out
in
push
mov
sub
rorb
xor
enter
jg
mov
dec
pop
lcall
xlat
rcrl
inc
clts
mov
or
inc
insl
sbb
jl
popa
push
lods
mov
mov
iret
mov
int3
je
pushf
xor
jne
not
movsw
jno
stos
cmpsb
rcrb
jb
mov
push
leave
or
stc
mov
xor
dec
add
or
mov
leave
xor
sbb
pop
jno
mov
and
adc
test
popa
cmc
pop
xor
rolb
movzwl
lods
je
cmp
pop
jmp
loopne
push
je
or
pop
jl
div
cltd
xor
dec
pop
xorb
cmpsl
mov
aad
das
push
orl
xchg
aaa
popl
sbb
and
cltd
lds
jp
bound
mov
sub
mov
jge
mov
jl
mov
mov
lods
aam
das
xor
in
test
xor
nop
into
xchg
push
or
mov
lock
or
ret
push
and
es
leave
aad
mov
ds
add
or
mov
and
cmp
test
and
fcompl
iret
sub
or
inc
dec
loop
sahf
sbb
aaa
pop
imul
lds
int
movsb
imul
stc
popf
in
xchg
out
ret
movsl
xchg
rolb
shr
imul
cmp
iret
and
nop
push
xchg
xorl
cmp
cltd
fcmovbe
and
add
push
cltd
mov
sub
push
sti
test
test
imul
xor
xor
jl
add
ret
call
in
dec
mov
inc
add
aam
adc
mov
lds
sbbl
aaa
pop
mov
xor
xlat
insl
out
sbbl
sub
push
adc
dec
mov
mov
and
cltd
addr16
or
inc
sahf
fnstcw
dec
cmpsl
sbb
cmpl
sahf
pushf
aaa
and
xchg
mov
mov
add
pop
ret
fists
mov
movsl
push
and
push
lea
jmp
stos
and
cmp
aaa
inc
xchg
mov
ds
pop
xchg
sub
inc
sub
aad
push
or
jg
loope
lcall
mov
xchg
mov
sub
xchg
scas
cmp
leave
popf
xor
push
jo
sbb
sub
into
xor
xchg
inc
push
cmc
aad
jp
aad
jns
jnp,pn
js
inc
sub
push
jmp
nop
test
or
test
shl
pop
out
sti
adc
cwtl
enter
arpl
cmpb
cld
cmp
out
inc
or
or
jmp
fbld
loopne
mov
sub
jb
loope
mov
fisttpl
inc
xchg
mov
negb
xchg
shlb
jmp
and
mov
cli
xchg
in
add
adc
xor
enter
ficomps
sub
jne
mov
xchg
sbb
xlat
push
loopne
scas
bound
arpl
pop
es
pop
mov
sub
xchg
imul
outsb
lcall
insl
lcall
lds
mov
cli
testb
jp
adc
leave
rolb
or
adc
jmp
xchg
add
inc
in
pop
out
inc
bnd
test
pushf
leave
ret
dec
xlat
and
xor
xor
jl
outsb
pushf
cmp
andb
in
mov
push
outsl
add
test
adc
repnz
adc
icebp
cli
shll
jl
in
mov
ss
dec
stos
ret
popf
mov
fstl
push
xchg
push
and
xorb
inc
nop
cmp
imulb
mov
add
adc
fucomp
cmp
cmp
ret
cmp
es
daa
fdivl
bnd
adc
in
mov
mov
mov
ja
dec
pop
dec
sbb
dec
fs
xchg
inc
ror
leave
jb
jmp
lcall
push
and
test
fildll
rcrb
sbb
gs
inc
and
adc
ss
mov
cwtl
push
inc
mov
clc
hlt
loop
das
mov
out
mov
push
int
mov
aam
xor
ljmp
leave
in
mov
fs
inc
adc
push
out
mov
insb
inc
xlat
jp
stos
sahf
bndldx
and
call
or
pop
or
sahf
pop
adc
cs
sbb
and
pop
jae
jbe
insb
jb
mov
sbb
addr16
pop
loope
pusha
jmp
neg
adc
jo
hlt
mov
jle
xchg
enter
enter
dec
test
lret
xchg
ljmp
adc
mov
cmc
shl
mov
mov
rcll
sub
loop
test
or
loope
sti
inc
sti
add
adc
testl
inc
icebp
xor
and
mov
jo
enter
cmp
cmp
test
roll
jmp
sbb
movsl
xlat
bsr
bound
ret
push
call
jno
clc
cmpsl
mov
mov
inc
sahf
fs
shl
jae
and
push
xchg
jecxz
adc
clc
in
mov
sub
into
mov
ljmp
addr16
adc
test
pop
aaa
mov
mov
repz
sahf
or
mov
roll
iret
push
inc
push
mov
lock
push
dec
sbb
jl
dec
ljmp
inc
mov
adc
mov
sbb
mov
mov
out
ss
jg
mov
clc
and
bound
jp
add
cmp
ret
popa
sahf
fldenv
add
bound
xor
fs
in
xchg
repz
rol
jp
add
add
xor
rcr
adc
insb
add
outsb
jo
cwtl
lea
sub
xchg
xchg
adc
rorl
and
add
mov
daa
add
inc
xchg
inc
fistpl
ss
pusha
mov
pop
dec
dec
or
dec
jne
xchg
xor
sbb
mov
int
xchg
push
or
bnd
iret
jge
cltd
adc
jg
test
adc
cmp
enter
cmp
lret
gs
fwait
pop
push
push
aaa
xchg
cmp
push
add
scas
fs
rcr
into
ss
cwtl
sub
or
cmpsb
mov
pop
in
inc
cmpsb
subl
in
jmp
dec
and
mov
movsb
jmp
fimuls
add
and
cmpl
push
mov
push
imul
aam
lock
popa
mov
stc
pop
inc
pop
mov
cs
rol
and
jnp
add
mov
jne
inc
mov
xchg
inc
in
enter
xor
cmp
mov
mov
adc
andb
ficomps
es
xor
mov
cmp
scas
mov
shlb
xlat
adc
inc
inc
mov
fldz
mov
ds
dec
jg
mov
popf
fists
bound
flds
shl
jmp
leave
jb
xchg
sub
lods
sbb
int
stc
dec
or
sub
andb
rcr
mov
sbbb
xchg
push
jecxz
jl
das
cmpsb
popf
xchg
xchg
aam
into
test
add
sub
and
mov
adc
das
jnp
es
cmp
out
mov
jl
mov
lcall
iret
fdivs
jne
jno
out
hlt
fdivrl
mov
cmpsb
inc
inc
fisttpll
sbb
orl
sub
sbb
out
xchg
orb
test
jmp
daa
ja
push
in
gs
aas
or
lret
dec
cmp
dec
xchg
pop
push
popa
test
aaa
push
jb
mov
sbb
cmp
lret
pop
sbb
push
dec
stc
ss
std
xchg
jmp
dec
in
adc
loopne
imul
or
pop
cmc
or
ljmp
shll
inc
inc
adc
gs
mov
jg
adc
push
xchg
sbb
sti
cmp
add
mov
sti
pop
push
fstp
mov
cmp
xchg
pop
out
in
sub
pop
sub
xchg
dec
aad
inc
loop
decl
add
lods
scas
xchg
adc
xchg
mov
xor
push
jnp
or
sbb
out
xchg
les
out
cmp
outsb
in
inc
sub
insl
mov
sub
loopne
xchg
lret
out
push
dec
and
lret
pop
sub
shll
fidivs
xchg
stc
jne
fldl
out
cmp
sub
sbbb
out
mov
cmp
push
rorb
mov
iret
scas
repz
aam
xchg
mov
arpl
mov
pop
lret
nop
testl
and
mov
sub
sub
shrb
cs
adc
shl
jno
fsubrs
push
or
inc
loop
out
mov
sbb
mov
incb
adc
inc
aam
dec
push
mov
repnz
xor
cmp
push
dec
movsl
orb
fisubl
or
push
mov
and
sbb
daa
nop
mov
movsl
add
movl
xor
sub
add
mov
push
inc
icebp
cmp
lds
iret
mov
nop
add
out
cmc
lods
in
idivb
sub
cmp
dec
cld
add
fdivs
scas
mov
and
mov
fstl
movsl
push
pop
inc
dec
pop
push
mov
and
ss
sti
xchg
mov
loopne
and
mov
fisubl
out
push
push
in
sub
shr
adcb
mulb
sbb
neg
or
cmp
fs
jne
or
xor
fdivl
sbb
test
pop
insb
sub
add
dec
push
addr16
inc
mov
pop
shl
les
negb
add
lds
hlt
jge
shrl
out
xchg
xor
insb
mov
lahf
in
mov
mov
aad
push
das
mov
push
add
cmp
mov
fidivl
adc
popa
pushw
push
mov
pop
mov
fmulp
xor
in
or
std
loopne
clc
mov
mov
mov
cmovae
push
loopne
data16
or
or
pop
popf
lahf
cmp
dec
pop
cmp
mov
neg
ss
iret
inc
lds
repz
cmp
pop
sbb
daa
jnp
push
aas
ljmp
xor
in
cmpsb
or
mov
bswap
pushf
and
push
icebp
jle
jl
fsubrl
mov
push
xor
xor
insb
ds
dec
test
dec
vcvtdq2pd
stos
xor
pop
icebp
mov
lea
mov
fdivrs
pop
lahf
inc
xchg
mov
insw
popa
pop
fwait
daa
pop
fwait
test
jl
dec
jmp
test
sub
mov
lea
xchg
fnstsw
push
push
movaps
mov
or
push
sub
and
cmp
jo
push
lret
adc
xchg
mov
pop
and
lret
inc
inc
testl
add
icebp
cmpl
fs
pop
adcb
push
aad
dec
subb
mov
mov
mov
mov
add
rcl
addr16
outsb
and
dec
popf
test
jne
jns
and
pop
ss
xchg
das
adc
int3
push
outsl
fdivrs
pop
xchg
pop
push
dec
fmul
jb
test
push
test
into
mov
jbe
sub
movsb
daa
nop
add
push
inc
mov
fdivrp
stos
sub
inc
adc
jmp
sbb
push
js
sbb
mov
aam
test
sarl
mov
mov
sub
jo
sbb
sub
jno
orl
or
addl
and
add
adc
pop
adcl
jg
xor
dec
inc
test
in
pop
mov
call
int
das
fs
mov
stos
push
pop
cmp
mov
fldl
mov
lock
imul
ss
mov
cmp
iret
imul
cmp
adc
hlt
sbb
sbb
pushf
inc
push
mov
fs
add
xor
mov
lock
call
shl
movsb
dec
push
loopne
orl
insl
adc
cmc
pop
or
and
or
mov
outsb
add
loopne
add
xor
mov
aad
lds
cmp
or
stos
xchg
jge
sbbl
add
xor
rclb
mov
xchg
jae
loope
and
stos
mov
in
les
cltd
push
clc
pop
inc
sti
xchg
outsb
pop
xchg
jo
jmp
pop
and
cs
ja
cli
xchg
loopne
push
mov
dec
and
add
cmc
mov
in
data16
stc
in
aad
sub
or
lcall
lods
lods
loope
mov
es
dec
jne
roll
push
jle
mov
andl
loopne
mov
stc
lahf
stos
stos
jp
jg
mov
jns
nop
xchg
or
xor
cmp
lahf
jae
nop
jnp
jecxz
movsb
cmp
pop
dec
dec
adc
push
add
push
fwait
cmp
lods
xchg
fmulp
scas
jg
shll
or
mov
int
pop
push
mov
and
cmp
pop
push
loope
adc
mov
mov
fisttpl
int
clc
push
call
and
xor
mov
lret
scas
push
adc
xlat
cltd
mov
es
loop
inc
daa
and
inc
sub
pop
jbe
mov
jge
cmp
dec
mov
int3
jg
fstpl
xchg
movsl
jp
ljmp
out
jmp
lods
outsb
out
and
cwtl
movsl
das
pop
enter
in
insb
push
mov
xlat
mov
cmp
mov
sub
sub
nop
xchg
xorl
xchg
jge
inc
adc
lret
xchg
mov
ret
pop
xchg
bound
add
fstpl
xchg
pop
inc
inc
in
or
and
sub
out
and
stc
inc
jne
inc
pop
lret
mov
sbb
cwtl
lock
in
or
mov
test
push
cmc
les
jp
cmp
ficoms
out
loopne
fcmovbe
or
or
push
push
adc
push
adc
cs
mov
das
int3
aam
inc
iret
andb
mov
cs
mov
push
addr16
lea
xchg
stos
xor
imulb
cs
inc
jns
movsb
test
lahf
fcomps
add
enter
xchg
fwait
stos
notl
in
sahf
cli
bnd
cwtl
repz
out
mov
sahf
icebp
sbb
ds
push
call
pop
pop
fdiv
inc
cmpsb
dec
inc
movsb
fnstcw
into
add
lcall
fs
or
test
stc
jle
test
dec
rclb
add
fbstp
std
cld
cmp
adcb
pusha
sub
or
xchg
insb
es
es
ja
in
push
fcompl
mov
insl
pop
jb
test
mov
adc
addr16
sti
xor
lret
ja
bound
mov
push
fcoml
xor
popa
xchg
cmp
sbb
xchg
jmp
lods
jl
pop
or
fstpt
jbe
add
and
int
outsb
sbb
push
jnp
stos
repnz
adc
stc
decb
cli
or
and
movsl
mov
in
stos
ss
xor
add
jp
pop
popa
iret
lds
push
sbb
icebp
mov
or
lods
xlat
adc
mov
addr16
jge
shlb
leave
mov
push
push
dec
scas
and
popa
pop
ljmp
out
dec
cmp
mov
pop
mov
push
sub
push
mov
loopne
dec
xchg
aaa
mov
mov
push
out
ret
push
dec
mov
cmpsl
mov
xor
sbb
push
dec
mov
data16
fdivs
pop
loop
mov
jo
add
jns
imulb
dec
jae
adc
aad
insb
add
ss
sbb
call
sbb
mov
push
mov
push
push
loop
add
sub
inc
jnp
push
in
push
test
xor
in
bound
mov
lods
pop
push
mull
and
inc
add
push
push
adc
icebp
loopne
sahf
shll
hlt
dec
xor
push
aad
jmp
or
outsb
mov
sahf
arpl
roll
mov
inc
add
repz
mov
xlat
dec
cmp
fidivrl
pop
xchg
xorb
sbb
inc
in
cmpsb
test
inc
sub
cmp
dec
daa
in
inc
flds
sbb
sbb
pxor
xchg
shr
cs
les
cmp
out
sbb
mov
outsl
adc
mov
xor
stos
hlt
pop
aaa
xchg
jns
jno
push
into
ret
ja
mov
fucompp
mov
xchg
and
adc
push
mov
push
fcomp
xor
fiaddl
sub
ljmp
or
int
enter
cmp
lds
xor
xchg
dec
sbb
div
xlat
loop
call
in
sub
fbstp
and
add
pop
aas
stc
xchg
daa
xchg
push
lret
arpl
and
mov
bound
xchg
aad
repnz
jecxz
cmp
and
loop
mov
or
or
int3
sarb
fiaddl
xor
gs
mov
inc
dec
rcll
in
arpl
mov
mov
dec
sahf
inc
jb
xchg
ja
inc
aam
pop
jo
lods
sbb
and
sbb
ja
ret
stc
enter
test
mov
pop
inc
lods
clc
mov
push
out
xorb
mull
jl
xor
add
fsubrl
xor
lcall
sbb
cmp
and
cmp
inc
and
adc
mov
outsl
adcl
jne
or
mov
mov
mov
push
cmp
or
jbe
out
fiadds
bound
jge
das
lock
xchg
add
mov
mov
or
and
add
jmp
xchg
push
push
pop
and
inc
mov
test
pop
push
push
xor
or
into
cld
test
aaa
frstor
mov
sbb
mov
push
xchg
mov
insl
push
mov
or
inc
adc
mov
pop
lahf
jl
fsubrl
sbb
mov
sarl
into
es
push
mov
popf
nop
pop
push
cmpsb
fisttpll
pop
xchg
cltd
xchg
and
lret
dec
inc
fdivr
or
pusha
mov
lds
je
andb
cld
sbb
or
pop
aam
or
lcall
mov
add
pop
lret
cmp
jecxz
cmp
dec
cmpsb
xchg
pop
xor
sbb
sub
shlb
fstps
add
stos
adc
jp
cltd
test
and
scas
inc
test
or
inc
or
inc
sub
jae
pop
adc
xchg
cmp
fiadds
xlat
inc
dec
mov
jmp
ss
ja
lcall
loopne
cli
adc
jbe
test
lods
sbb
mov
andb
add
dec
mov
mov
mov
add
insb
jecxz
decb
rorb
mov
call
scas
cmpsb
fcmovnb
sub
faddl
pop
or
cmp
les
sub
cmpsb
jg
fimuls
xor
dec
sub
fs
leave
ja
push
clc
jns
or
data16
shrl
nop
jae
mov
and
or
ds
mov
gs
ja
ds
cmc
bnd
lcall
pop
out
push
aaa
out
xor
xor
cmp
pop
dec
pop
scas
es
dec
jo
jge
pop
loop
jp
das
xchg
divb
adc
pop
loope
add
mov
scas
mov
dec
and
mov
mov
popa
and
loop
cmp
fstl
js
subl
repnz
fisubrl
mov
or
add
repz
mov
inc
cmp
cmp
inc
add
xchg
repz
sub
in
test
jmp
call
cmp
and
in
dec
scas
jp
or
clc
inc
mov
adc
enter
fidivl
ret
frstor
xchg
decl
lret
and
aas
inc
cmp
mov
jno
mov
inc
push
enter
push
das
sub
xchg
lods
or
fcompl
ror
sub
xchg
xchg
pop
mov
mov
mov
pop
mov
mov
shll
jl
xchg
push
dec
lret
aas
orb
xchg
and
pop
testl
sahf
repnz
data16
test
bound
ljmp
mov
in
and
fcmovnu
adc
cmp
hlt
and
data16
cmp
mov
xchg
popf
sbb
sub
in
movswl
pop
popa
adc
xchg
xor
testl
adcb
add
adc
mov
arpl
insb
pop
filds
loope
pop
dec
inc
call
lods
dec
mov
popa
mov
outsb
cmpsb
data16
stos
fdivs
adc
addl
outsb
fadds
or
lds
adc
stos
inc
sub
adc
xchg
addr16
cld
popf
cmp
pop
mov
inc
pop
insl
sbb
jmp
cmpsl
mov
ret
or
repz
int
mov
lcall
shll
aam
sbb
movsb
xlat
ret
xchg
xchg
jle
adc
ret
xchg
in
shll
scas
and
arpl
jmp
and
fdivl
xchg
jbe
stos
popf
fcompp
sbb
imul
insl
mov
outsb
push
add
mov
ret
xor
test
gs
cmpsb
dec
push
push
movzbl
xchg
add
das
or
inc
xchg
jmp
lahf
and
pop
jle
inc
aaa
xor
xchg
push
cmc
jbe
sub
cmp
xchg
or
loopne
insb
mov
in
arpl
aad
mov
int
xlat
insb
pop
sub
mov
dec
mov
iret
sbb
jno
fstsw
ror
test
test
dec
stos
enter
imul
jg
stos
xor
call
arpl
jg
xor
scas
std
mov
orl
xchg
seto
xor
xor
les
xchg
jbe
cmp
mov
mov
and
pusha
cltd
cmp
pop
pop
cmp
mov
add
out
jns
fwait
mov
inc
pop
ljmp
cmp
inc
int
fbstp
das
sahf
dec
andl
push
lret
je
fisubl
sbb
das
mov
jmp
rcrb
jno
cld
addr16
xor
imulb
xchg
test
jl
adc
inc
adc
jae
leave
sahf
test
loop
popa
icebp
inc
gs
int3
mov
hlt
fs
xor
jb
dec
fidivrl
iret
inc
cmc
shll
mov
scas
add
jae
shrb
sub
jp
stc
fcoml
push
push
or
pop
push
jnp
mov
sbb
add
stc
lcall
dec
sub
add
pop
mov
aam
cmpsl
sbb
jp
or
or
rcrl
out
mov
or
outsb
or
sub
out
je
fdivrl
jb
fucomi
push
sbb
and
nop
cmp
xor
test
mov
cmpl
mov
daa
inc
sti
or
neg
xor
jle
roll
fucom
das
xchg
gs
push
push
insl
repz
data16
pop
mov
repnz
inc
pop
aaa
cli
icebp
movsl
les
add
aam
jge
ret
nop
pop
test
cltd
jno
adc
push
leave
enter
aas
fwait
xchg
shlb
dec
dec
or
adc
hlt
mov
rorb
mov
data16
scas
outsb
jbe
outsl
inc
sbbb
inc
pop
out
pop
sbb
cmp
cmp
jle
fbstp
js
adc
push
pop
shll
mov
dec
pop
rolb
leave
and
xchg
les
mov
inc
fcoms
adc
lea
in
rolb
repz
stos
or
cmp
mov
mov
out
xor
mov
jae
mov
push
bound
or
data16
aam
out
cmpsb
add
dec
popl
inc
dec
lds
mov
cltd
mov
pop
lcall
inc
scas
into
xchg
ljmp
push
pop
mov
test
dec
adc
push
je
call
imul
xchg
cwtl
inc
dec
sub
sti
sbbl
das
sbb
xchg
jne
mov
stc
jns
sar
pop
xor
int
into
arpl
push
dec
sti
push
daa
or
jle
sbb
repz
pop
pop
mov
cmpsb
js
or
adc
dec
push
sbb
lret
stos
movsl
pushf
sbb
lock
cwtl
stc
pop
data16
adc
inc
mov
sbb
sub
pop
fnstcw
stc
shll
fwait
mov
xchg
aaa
push
in
test
repz
lds
movsl
mov
test
sub
dec
call
clc
rclb
pop
mov
cmp
in
and
xchg
xchg
sarl
pop
xchg
jmp
das
and
in
scas
xor
jecxz
and
outsl
mov
roll
shrl
shll
mov
fdivl
push
in
out
cmp
daa
adc
inc
es
mov
outsl
aad
arpl
test
push
xor
fdivl
stos
mov
es
mov
inc
add
sbb
mov
push
repz
in
mov
pop
nop
dec
cmp
fiaddl
fmuls
and
xchg
push
insl
jo
jp
out
std
mov
test
sbb
push
pushf
mov
push
iret
sti
mov
push
sub
filds
stos
lret
push
repz
xchg
push
adc
es
lock
xchg
outsl
and
out
rcr
hlt
outsb
mov
cli
sub
jmp
das
pushf
dec
and
adc
pop
mov
int
dec
jnp
push
fimull
pusha
lock
sbb
lea
xor
popf
clc
inc
sbbl
int
sub
mov
and
int3
jnp
hlt
pop
dec
or
ss
notb
cmp
push
dec
imul
cli
xchg
out
adc
test
xchg
aaa
or
sub
jo
cmpsl
test
add
mov
cli
inc
loop
fmulp
push
lcall
out
push
xchg
jmp
push
leave
test
push
xchg
cmp
xor
rcl
xor
dec
adc
add
and
jg
jle
cmp
test
in
xchg
jno
in
int
jmp
sbbb
aaa
lods
shrl
push
out
outsl
push
stos
push
push
cmp
sub
popf
adc
xorps
xor
xchg
rcl
pop
add
or
pop
push
movsb
mov
arpl
out
ja
mov
push
sub
add
out
loopne
rclb
add
fwait
shrl
in
enter
push
scas
mov
cli
xlat
mov
jp
aad
popa
and
aas
adc
in
cs
and
pop
inc
in
movd
lods
hlt
adc
sbb
dec
das
fs
dec
jo
or
mov
xor
jnp
mov
insb
cmp
je
pop
mov
lds
loopne
ss
xlat
stc
jo
xchg
dec
cmpsb
stos
ret
and
outsb
in
xchg
jb
daa
adc
pop
mov
mov
push
stos
fstl
sbb
jge
jb
or
push
push
fcompl
mov
jg
cs
aad
dec
insl
rolb
lcall
in
cwtl
js
jbe
scas
push
loope
add
add
push
pop
cmp
mov
repz
adc
insb
push
add
repz
or
lahf
popf
mov
shr
cwtl
mov
cwtl
mov
jae
data16
movsl
and
add
mov
mov
in
outsl
cmp
ljmp
gs
sbbb
jo
lock
mov
imul
inc
jmp
divb
fdivr
sbbb
sub
sbb
sbb
ss
push
pop
ss
xor
jg
pop
es
push
cld
mov
inc
xchg
dec
push
push
adc
push
pop
iret
lods
push
sub
ds
pop
lcall
imul
add
sub
add
fisubs
ja
push
push
jg
xorb
out
xchg
pop
int
xchg
xchg
movsl
arpl
ljmp
in
mov
ja
mov
jbe
je
mov
and
sbb
jno
out
loop
add
mov
repnz
out
int
stc
xor
cld
jae
or
sbb
sbb
push
ret
jae
sarl
or
loop
test
xlat
add
push
xchg
inc
pop
dec
popf
addr16
iret
repz
out
sbb
fidivrl
lret
pop
mov
push
js
jns
sbb
mov
inc
js
out
inc
lret
pop
ret
mov
sub
jno
sub
cmp
pop
sub
jle
xchg
mov
dec
xor
ret
test
mov
sbb
push
and
fimuls
xor
cmp
notrack
es
mov
mov
pop
xchg
fiadds
fcos
jne
dec
cmc
xchg
outsl
pop
mov
into
pop
fstpt
pop
int
lock
inc
hlt
mov
push
in
dec
outsb
std
dec
dec
or
dec
mov
xchg
xchg
shll
stos
jne
xor
sub
rol
mov
or
sub
push
push
add
jbe
mov
loopne
push
rolb
scas
lods
movsb
pop
int3
fnstenv
add
sbb
stos
and
dec
cmp
stos
or
jnp
lods
and
pop
and
out
out
jno
popf
aam
jecxz
sahf
out
mov
shrb
pusha
ja
ret
sbb
push
push
lds
ficoml
mov
push
lds
popa
push
dec
jmp
push
cmp
push
push
movsl
xchg
jp
xchg
test
ret
add
daa
inc
mov
xor
gs
mov
mov
callw
mov
inc
rcr
mov
pop
addl
ds
or
in
enter
xor
mov
call
mov
andl
cmpsl
mov
mov
or
xor
jo
call
outsb
jecxz
ja
pop
cmpsb
call
loope
daa
jno
hlt
xor
hlt
mov
mov
mov
sub
push
add
lock
fnstsw
out
out
pop
mov
pop
push
mov
mov
push
rclb
xchg
pop
or
add
stc
add
jl
sbbl
insl
test
push
cmp
jmp
or
cli
mov
mov
jmp
imul
pop
dec
mov
mov
cmp
or
and
movsl
in
mov
in
push
in
pop
xor
stos
xchg
push
scas
cmp
test
sbb
movsb
fsubl
inc
enter
sub
js
jno
dec
cs
mov
sub
sub
int3
lahf
fld
movl
aas
int
sti
adc
mov
mov
rorb
call
adc
xchg
cmp
xor
imul
lock
cld
add
jns
push
xor
out
in
push
call
xchg
sub
sarl
cmp
xchg
add
push
aas
ficomps
lods
jge
aad
push
addl
scas
jae
pop
push
jno
or
gs
mov
xchg
and
and
push
xchg
adc
aad
pop
bound
sub
pop
jg
adc
sub
jo
jne
inc
ret
movsb
mov
cs
js
mov
mov
xchg
in
orl
enter
mov
sub
pop
bound
mov
les
xchg
xchg
mov
cmp
adc
sbbl
cmc
loop
aaa
cmp
xor
sub
pop
inc
ds
mov
and
adc
jo
test
push
push
out
movnti
sahf
out
ret
ret
cmp
repnz
dec
cmpsb
enter
pop
dec
xchg
cs
cmp
scas
rcll
mov
add
out
icebp
outsl
fwait
ljmp
out
pusha
mov
in
sub
jle
popf
xchg
xchg
movsb
jae
aam
cld
repnz
add
stos
xor
enter
ja
mov
sbb
popf
mov
and
sub
outsl
add
repz
dec
sahf
sbb
or
ja
jmp
inc
inc
mov
popa
loop
int
filds
les
cmp
inc
dec
lea
mov
push
inc
in
lock
sub
aam
cltd
and
or
mov
sub
jb
add
and
mov
jl
movq
aas
mov
fistpl
inc
outsl
pop
inc
stos
add
cmovp
jg
loopne
jle
and
fcomps
mov
push
je
push
leave
xchg
sarl
repz
cmpsl
test
das
xchg
std
jne
les
pushf
or
stos
sahf
jae
mov
cli
dec
push
mov
sbb
sub
loopne
imul
sbb
xchg
ja
jge
cwtl
stos
jns
jg
ret
mov
aam
test
out
pushf
jge
xor
subb
pusha
orl
pop
loopne
lods
leave
adcb
dec
mov
lret
xor
jle
fistpll
push
aam
iret
mov
stos
cmp
negl
inc
stos
adc
xor
lods
dec
movsb
adc
fsubl
stos
sbb
adcl
dec
fsubs
pop
or
push
sub
mov
ja
and
stos
push
push
mov
push
or
daa
pusha
mov
rep
int3
inc
adc
push
add
ret
xchg
cmpsb
icebp
fistpll
pop
dec
lods
dec
pop
cmp
cmp
loop
xchg
pop
fsubr
push
lahf
and
jnp
xchg
dec
or
popf
mov
test
lods
sub
testb
push
sahf
adc
xor
cwtl
out
insb
popl
imul
dec
xchg
inc
xchg
mov
sub
pop
xchg
cmp
adc
jecxz
popf
cwtl
cmp
cmp
pushf
pop
ret
in
xor
mov
hlt
pop
ljmp
sub
xchg
xchg
imul
mov
rolb
aaa
outsl
cmp
gs
ror
movsl
sub
lret
cwtl
enter
inc
mov
sub
mov
jl
pop
jo
inc
test
and
push
push
pop
ljmp
sbb
xchg
add
mov
insb
rorb
jb
dec
xor
lret
xchg
fxtract
push
sub
repz
push
repnz
adc
push
movsb
push
idiv
in
lock
sbbb
daa
dec
push
fsubl
imul
sub
push
sub
push
lods
or
mov
jne
mov
push
xchg
stc
jns
push
sahf
cmpsl
mov
addl
lret
mov
movl
add
jno
push
xor
lahf
push
and
sub
lds
xchg
push
cmpsl
movsb
ja
stos
pop
mov
test
stos
mov
cld
cmp
addr16
adc
xchg
xor
mov
xchg
add
xor
lcall
or
adc
mov
jmp
mov
repz
fdivrp
adc
aam
insl
dec
mov
clc
loop
mov
cmp
inc
mov
les
jbe
mov
fs
xchg
or
pop
ja
mov
fs
lret
xor
mov
pop
xchg
lahf
pusha
movsl
jb
loop
pushf
ljmp
mov
addr16
adc
sbb
shrb
sarb
ret
es
jnp
insb
dec
xor
cmpl
add
movsb
dec
negb
in
cmp
xchg
xchg
inc
sbb
mov
mov
push
xor
adc
arpl
pop
jl
adc
lcall
cmp
test
xor
pusha
popa
xchg
ret
sub
push
icebp
lret
xor
lret
sub
in
ds
adc
mov
mov
shll
or
loop
dec
fidivs
push
adc
aad
enter
das
sahf
push
test
out
cmp
popa
cmp
lods
call
cmp
mov
fcomp
mov
and
idivb
repz
notb
fmulp
fistpl
scas
inc
push
xlat
ss
mov
mov
inc
sub
aad
pushf
jns
aad
jmp
or
jp
cmpsb
lea
add
test
aas
mov
lret
mov
mov
sub
sub
pusha
mov
push
xchg
jo
add
js
mov
mov
jl
into
sbb
out
arpl
lods
push
mov
mov
jne
lea
mov
shll
roll
sbb
cmpsb
dec
xchg
and
or
pop
sub
adc
orl
call
add
mov
dec
pop
mov
pop
sarl
outsl
cmp
loopne
lds
enter
inc
xor
cmc
jno
mov
and
jnp
in
dec
push
ja
pushl
sub
adcl
pop
sahf
jo
or
jp
out
pop
jb
jae
xor
ret
shlb
xor
mov
or
push
shrb
gs
mov
mov
shrb
out
inc
fs
repz
pushf
adc
into
out
mov
jp
xor
jbe
jo
mov
mov
mov
data16
pop
fcmovnbe
bound
lea
dec
in
pop
or
push
add
mov
cmp
call
sbb
test
or
xchg
pusha
jp
fiadds
ret
stc
mov
ljmp
fistpl
xchg
inc
mov
xchg
adcb
insb
ja
push
bound
jg
sbb
out
hlt
xchg
jge
pop
sub
sahf
int3
xchg
nop
jecxz
bound
push
pop
cmpsl
lahf
sub
dec
ss
ret
mov
or
xchg
lcall
enter
test
jb
sbb
push
cmc
xor
enter
push
lods
push
jecxz
xor
mov
xor
cmp
push
outsl
push
addr16
xor
lds
jnp
sti
ljmp
and
shll
popa
jmp
pop
pop
and
or
insl
inc
sub
mov
outsb
sahf
test
enter
push
push
push
sarl
popa
or
sbb
sti
ss
cmc
sahf
adc
call
mov
hlt
mov
or
std
push
insb
and
in
pusha
push
push
push
aad
mov
push
rclb
xchg
icebp
mov
cwtl
cmc
xchg
adc
fcmovnb
pop
sbb
lret
inc
sbbb
jge
mov
dec
push
rcll
mov
dec
dec
xor
test
das
leave
jle
sbb
orl
pop
mov
aaa
pushf
nop
or
mov
mov
cwtl
pushf
in
dec
jp
pmulhuw
ja
jl
push
cmp
mov
lea
jmp
test
inc
sbb
sarl
mov
jge
icebp
ret
lds
inc
xchg
pushl
add
dec
xchg
adc
in
sarb
pop
dec
ret
in
mov
int3
jge
push
loope
sahf
in
fldt
sub
ret
cmp
sbb
fmulp
jno
adc
or
fwait
cltd
inc
and
jne
rcll
jge
xchg
lea
and
pop
loope
jae
jbe
xlat
test
loop
cmp
insb
cmp
into
je
repz
sub
add
leave
xchg
adc
subb
aaa
shl
lods
pushf
pop
mov
pusha
inc
cs
cmp
cmp
test
shll
mov
sub
add
bnd
iret
cmp
xchg
sbb
jns
cmpsl
andb
aaa
xchg
gs
loop
es
scas
iret
and
aam
mov
pop
jmp
or
xchg
jbe
push
in
pop
and
inc
add
push
adc
out
dec
add
mov
negl
adc
adc
fwait
cmp
je
mov
aam
ret
add
data16
and
cmp
lcall
lock
cmp
xlat
mov
jo
aas
into
sub
lock
jecxz
sbb
mov
and
cltd
dec
adc
push
jae
pop
add
add
bound
negb
mov
cmp
sbb
mov
cmp
pop
and
mov
and
xchg
or
push
rclb
dec
call
jnp
sbb
xchg
pushf
or
in
pop
mov
in
or
test
fistpll
jmp
cmp
and
jne
ss
clc
mov
cmp
push
pop
pop
cmpsb
xchg
pop
outsl
out
lods
dec
sub
xor
mov
fistpl
loopne
push
pop
sahf
cmp
mov
add
adc
mov
jno
out
dec
push
sub
or
jae
popa
dec
adc
mov
loop
shr
push
push
adc
ret
push
addl
sahf
addb
test
xchg
fwait
add
pop
or
nop
mov
movsb
jbe
repnz
mov
add
loope
cmp
sub
shrl
and
or
push
inc
dec
sysexit
js
push
mov
sbb
stos
insb
push
xchg
scas
adc
imul
icebp
mov
inc
inc
filds
jo
out
or
cmp
xor
nop
scas
xor
mov
mov
stc
cmc
xlat
pushf
jmp
push
ficoms
scas
jae
insb
sub
cltd
nop
and
lahf
lret
inc
fcomps
mov
jb
sbb
into
mov
adc
jbe
xorl
int
imull
stc
mov
jp
sarb
repz
popa
jne
mov
xchg
in
test
dec
ret
ja
push
gs
ficoms
frstor
mov
xchg
add
ds
test
daa
aam
fwait
xlat
arpl
inc
lods
ds
ror
xchg
filds
rcrl
mov
mov
push
nop
xor
dec
jne
mov
test
in
adc
out
mov
and
testb
cmc
and
fwait
inc
sub
mov
adc
mov
inc
clc
int
mov
sub
mov
aas
insl
dec
sbb
mov
adc
push
adc
imul
aaa
mov
jne
cmp
imul
sub
jg
or
subl
push
cli
fidivl
inc
xchg
fisttpll
fisttps
mov
sbb
shlb
andb
cmp
mov
pusha
mov
mov
sbb
cmp
mov
push
enter
adcb
aam
xchg
fsubs
xchg
or
mov
mov
rol
mov
out
hlt
ret
call
into
or
inc
cmp
in
pop
hlt
shlb
jle
or
pop
fldenv
push
pop
lods
dec
pop
lahf
jno
or
lcall
sti
xor
sub
sub
mov
dec
push
cmp
dec
sbb
xchg
daa
inc
vmwrite
enter
sti
adc
sub
push
mov
xchg
adc
adc
clc
imul
xchg
xchg
mov
adc
iret
dec
mov
add
and
adc
outsb
mov
mov
mov
inc
out
mov
imul
lods
ja
rol
sub
mov
rorb
sti
pop
faddl
jb
adc
add
es
adc
test
inc
jae
mov
adc
inc
bswap
lock
out
scas
inc
mov
loop
sbb
jge
das
scas
rolb
xchg
jno
pop
inc
je
xlat
arpl
lods
fildll
cmp
jno
pop
cmp
dec
xor
int3
int
or
shr
stos
mov
push
inc
mov
ja
or
je
pop
ret
arpl
xorl
dec
lret
cli
daa
test
stos
fidivrs
scas
xor
xor
jns
pop
push
std
xor
adc
xchg
loope
xchg
scas
jae
shll
lock
ljmp
pop
mov
jmp
and
popa
negl
ss
add
in
cmp
and
adc
add
shll
repnz
loope
inc
jno
mov
out
sahf
insb
sub
xlat
aas
out
lock
mov
jle
push
in
ret
xchg
push
adc
jge
push
push
stos
ljmp
and
inc
cmp
mov
mov
sbb
jno
push
mov
add
les
popa
jne
fidivrs
pop
sub
mov
push
or
cmp
andl
mov
fldt
inc
mov
mov
into
bound
pop
and
dec
iret
ds
ljmp
push
cmp
adc
test
and
divl
loop
jp
lods
loop
imul
push
fadds
push
repz
mov
scas
in
insb
xchg
sbbb
xchg
and
adc
cmc
loope
xchg
into
cld
push
cld
push
imul
and
leave
mov
add
sbb
call
mov
cmp
fisubs
aam
es
insl
orb
and
out
rcll
adc
mov
jb
scas
cmp
mov
shl
push
add
mov
icebp
andb
jge
inc
ret
je
icebp
mov
push
jg
cmpsb
int
popa
lcall
xor
aad
add
and
repz
shl
cmpl
popa
mov
pop
or
cwtl
in
shlb
or
in
int3
stc
sub
xor
fdivs
sub
testl
lret
mov
mov
dec
cwtl
jnp
das
dec
xor
repz
push
lahf
xchg
xor
mov
inc
aaa
outsl
mov
xchg
movsb
fdivs
movsb
cmp
jmp
pop
lahf
mov
mov
imul
rolb
das
xchg
in
jnp
lahf
je
push
mov
push
loop
pop
cli
nop
iret
in
sahf
push
in
pop
movsb
lds
adc
cmpsl
xchg
xchg
inc
mov
icebp
pop
mov
push
loopne
ret
xor
jnp
push
jb
pop
hlt
cmp
mov
imul
clc
push
inc
xor
jmp
pop
jl
lahf
ret
jb
mov
sti
or
and
xchg
mov
sarl
fwait
add
test
nop
call
add
dec
fs
mov
sbb
dec
js
mov
clc
aad
fdivl
scas
mov
push
fsubl
lods
call
fisubrl
dec
mov
xor
fisubrs
adc
jge
push
cmpsb
mov
fnsetpm(287
inc
fcomi
imul
lds
jbe
popf
push
orl
xchg
ret
mov
lcall
sbbl
outsl
leave
inc
cmp
stc
ret
sbb
andl
cmp
dec
aaa
ffree
push
mov
pop
iret
mov
add
and
cmpsl
jl
mov
xchg
push
aad
or
enter
mov
mov
add
mov
jecxz
ljmp
daa
adc
push
popa
xchg
pop
pusha
lods
test
pop
jmp
gs
inc
js
sti
and
mov
cmc
out
outsb
mov
fbstp
pop
inc
jae
sub
fcmove
daa
mov
ja
and
cmpsb
cmpsb
ror
es
clc
jle
adc
xchg
cmpsb
jo
xlat
sbb
inc
xchg
xchg
sub
rcr
bound
dec
mov
push
shlb
out
pop
leave
pop
repz
pop
add
fbld
shll
xchg
cltd
mov
or
idiv
mov
sbb
mov
xor
scas
cmp
das
jecxz
call
fs
xchg
fnstcw
mov
cmp
xchg
mov
lods
push
mov
cld
in
xor
rorb
lcall
or
jne
call
lret
jnp
jb
fisubrs
fiadds
ret
xor
daa
insl
mov
pop
inc
rcl
filds
insl
sub
rcll
test
adc
or
pushf
jmp
push
xchg
fwait
dec
push
sub
daa
rcrb
push
inc
cmp
int3
push
sbb
sub
cld
jmp
sti
ja
lods
fidivs
jg
xchg
sub
fdiv
fnstsw
pop
jecxz
shlb
jo
xor
sbb
lss
daa
fisubs
aas
lds
dec
inc
mov
shll
aad
lods
es
mov
mov
or
push
cmp
scas
dec
push
mov
jg
das
mov
rcrl
cld
mov
jbe
outsl
sbb
aaa
cld
mov
jb
pushf
movsb
sub
cmp
mov
sub
fadds
cmp
push
les
mov
sbb
cmp
and
push
insl
lods
adc
data16
mov
xor
jp
gs
loope
mov
out
adc
addl
push
xor
pop
mov
or
push
fdivrs
push
movsl
ljmp
sub
sbb
mov
mov
pop
inc
cmc
popa
mov
sub
add
sbb
and
cmp
fs
out
add
dec
mov
pop
das
pop
mov
sbb
jne
xchg
fiadds
cmp
sti
mov
sbb
adc
cmp
fisttps
and
aaa
pop
xor
cmp
cwtl
in
adc
repnz
iret
cmp
fiadds
lods
ljmp
rclb
jbe
fldt
jno
xchg
push
test
add
les
push
sub
and
mov
push
pop
jmp
mov
test
xchg
test
sub
sub
outsl
enter
xor
lods
lods
cmp
mov
shl
xor
sbbb
pop
or
stc
fidivrl
mov
mov
je
loopne
sub
adc
adc
in
cmpsl
call
mov
imul
mov
in
imul
sahf
rcll
dec
imul
xor
in
push
dec
pop
dec
pop
pop
mov
into
pop
enter
stos
sub
pop
mov
gs
mov
dec
push
sub
inc
push
dec
lods
xor
push
xor
and
lea
js
lea
in
ljmp
js
mov
mov
dec
or
dec
lret
pop
cld
pop
mov
popf
repnz
lods
jo
lods
negb
or
jge
lcall
pushf
jo
pop
or
xor
test
pop
dec
adc
ret
pop
sub
xchg
sub
aad
nop
lods
pop
mov
adc
mov
xchg
dec
enter
roll
sub
movsb
mov
xchg
repnz
add
lds
movsl
lds
mov
xchg
les
imul
xor
dec
mov
xchg
cmp
mov
jle
in
fsubl
mov
pop
mov
xor
pop
icebp
xor
mov
stos
rclb
dec
dec
es
push
adc
stc
faddl
inc
outsl
js
ror
push
push
lcall
push
cmp
cmp
lcall
xchg
sub
cmp
shrb
xor
mov
mov
mov
mov
pop
movsl
shrl
adc
nop
sti
mov
adc
sbb
into
jl
xchg
lcall
adcb
rcrb
cmc
or
sbb
icebp
fstps
add
std
jle
je
mov
sbb
popa
je
push
dec
ret
addr16
scas
xchg
nop
inc
and
and
in
mov
add
jmp
mov
rorb
push
rcrb
out
mov
sub
inc
adc
test
jp
inc
xchg
add
dec
inc
push
lret
insb
out
add
repnz
loope
sbbb
lea
pop
leave
mov
ja
xor
out
pop
mov
mov
pop
mov
outsb
or
jg
xlat
jne
insl
setge
mov
in
ret
dec
mov
dec
hlt
push
sti
adc
icebp
test
dec
xlat
sbb
jl
sbb
push
lret
test
push
movsl
inc
add
std
aaa
pop
add
dec
dec
cmp
sub
mov
lret
jbe
add
xor
stos
add
in
cmp
sbb
aam
aam
and
cmp
or
sbb
cmpsl
cli
cmc
fs
or
dec
movsl
add
cmp
cwtl
aad
loope
jge
xor
clc
sub
pop
push
mov
iret
inc
push
mov
mov
lahf
loop
push
jmp
sbb
movsb
sbb
popf
or
dec
icebp
cld
flds
jo
dec
xchg
xchg
in
lret
jge
jmp
push
add
fisubl
pop
adc
das
cwtl
es
movsl
jecxz
hlt
add
ljmp
add
je
lret
fs
inc
mov
adc
loop
pushf
call
call
mov
bound
and
mov
icebp
outsb
pop
push
lahf
int
cwtl
sub
in
loopne
andl
test
loopne
push
mov
addr16
mov
jno
stc
jae
inc
icebp
push
push
add
sub
out
outsb
jle
push
loop
popl
mov
outsl
insl
inc
and
jns
or
push
push
out
cltd
test
clc
sbb
mov
mov
out
mov
inc
fs
sub
call
outsb
jbe
cltd
mov
sbb
xorl
rolb
sub
pop
jns
xor
lock
mov
lcall
mov
push
ds
fiadds
or
pushf
lds
add
imul
insl
fists
cmpsb
adc
lea
sub
jbe
lock
sahf
in
cmpsb
dec
icebp
fsubrs
push
shll
sahf
lods
sub
xlat
mov
lret
ds
xor
push
mov
daa
test
or
or
mov
fcoml
loopne
adc
jmp
mov
stos
pop
scas
subb
and
fadds
lock
jmp
es
pop
add
lds
aas
pop
dec
fcoml
add
insb
sub
outsb
aaa
aad
or
push
ret
out
mov
outsb
popa
or
pop
les
les
inc
sbbb
and
sub
jmp
inc
cmp
mov
push
mov
inc
ror
sub
or
fisttps
or
mov
rorb
lret
or
gs
popa
fcmovnu
push
inc
fwait
aas
in
js
sub
cmp
or
cmp
in
repnz
les
call
jmp
mov
xchg
push
pop
rolb
add
push
sub
mov
push
rcll
loop
cs
and
adc
daa
mov
outsb
pusha
cmp
leave
xchg
jnp
jmp
push
pop
jg
jmp
bound
lock
inc
loopne
mov
dec
mov
dec
repz
addr16
fidivrl
cmp
in
dec
mov
mov
out
push
mov
push
adc
jnp
incb
xchg
arpl
scas
pop
rcrl
lret
or
xchg
dec
rcrb
jmp
xlat
ror
cmp
test
cmp
xor
cmp
sti
ds
push
sub
cmp
push
sbb
dec
mov
adc
add
inc
cmp
stos
pop
pop
push
sbb
sub
jno
and
xchg
adc
or
jl
pop
shlb
into
leave
cmp
mov
xor
sub
idivb
sbbl
aas
roll
mov
or
clc
jge
fs
out
movsl
out
jge
pushf
push
cmpsb
scas
sub
inc
jmp
xchg
inc
push
or
fbstp
flds
loopne
sbb
cld
mov
and
int
inc
adc
shrb
int3
add
dec
outsb
adc
repnz
mov
push
push
inc
scas
sti
push
hlt
cmpb
clc
pop
in
ret
mov
push
sub
sub
test
pop
stos
pop
inc
or
das
pop
add
adc
daa
je
leave
push
loope
xor
mov
sbb
sub
xlat
ss
xchg
dec
stc
or
shlb
mov
psllq
bnd
mov
pop
push
mov
pop
lret
iret
push
or
pop
and
hlt
inc
adc
adc
pop
data16
int
fidivs
addr16
or
shrb
imul
jnp
adc
xchg
out
ds
lcall
pop
fsubl
xchg
mov
mov
xor
call
test
dec
jg
lahf
insb
lea
loope
andl
pop
sbb
jns
fcmovu
push
loopne
fcoms
dec
add
cmpsl
pop
cmp
jbe
cmp
addr16
mov
pcmpgtb
outsb
lds
mov
xor
pop
shll
jge
int
xchg
xor
stos
push
loopne
xchg
adc
das
jns
push
cmp
out
mov
lret
in
xor
jle
add
sti
mov
fstl
gs
fs
mov
stc
or
ret
pop
push
push
mov
xor
xor
pusha
out
mov
mov
fcmovb
xchg
jmp
fucom
aam
insl
inc
mov
xchg
icebp
jnp
xchg
out
xor
xor
adc
stc
push
hlt
or
jg
scas
and
inc
xchg
push
test
and
and
fldcw
xor
daa
pop
fs
push
lahf
add
cmp
adc
jb
jmp
inc
pop
xor
cld
pop
jge
adc
call
add
or
mov
xchg
call
aam
lods
push
das
loop
push
xchg
cli
call
mov
mov
push
subl
inc
add
jbe
stos
pop
or
scas
pop
incl
mov
cmpsl
insl
test
out
and
xchg
jo
lahf
in
popf
sbb
stos
int3
mov
and
mov
add
pop
pop
pop
mov
cmp
pop
insl
cmpsl
dec
aam
xor
icebp
mov
or
out
jnp
adc
pop
mov
imul
fcoml
mov
push
shl
pop
lock
or
test
add
pop
notl
cmpsb
clc
bound
imul
das
push
mov
inc
cmpsl
imul
inc
mov
xor
jecxz
ret
sbb
shrb
cld
data16
inc
loop
jb
push
lcall
into
xchg
or
xor
jecxz
adc
add
or
adc
das
inc
sub
fistl
sbb
dec
out
ljmp
sbb
adc
mov
mov
xor
ret
mov
add
inc
jb
add
xchg
out
sahf
outsb
xchg
frstor
aad
fisubrl
daa
xlat
mov
lahf
push
fldt
xor
testl
xor
xchg
jb
bound
lcall
mov
mov
aaa
jnp
enter
call
clc
movsb
imul
push
adc
sbb
mov
daa
fs
jl
and
js
mov
bswap
dec
loop
mov
xchg
in
mov
or
pushf
pop
mov
sbb
movsb
push
cmp
aam
push
dec
imul
dec
adc
lcall
push
push
enter
lods
adc
je
and
movsl
add
adc
fstl
ljmp
sub
jb
outsl
push
cmp
xchg
in
sbb
mov
xor
shlb
dec
loope
les
push
in
aaa
cmp
sub
ret
jno
int
cmpsl
cmpsb
test
fsubp
cmp
outsb
xchg
pop
inc
lods
adc
pop
mov
movsb
cwtl
sbb
push
jb
jge
cwtl
sbb
dec
les
push
and
xchg
rcr
cmp
xor
movsb
jmp
jbe
out
pusha
arpl
and
jae
rcrl
out
xor
jl
cmp
and
xchg
pushl
push
outsl
jg
push
pop
int3
xchg
adc
fidivrs
xlat
cmp
call
jmp
lods
lret
mov
mov
ret
inc
jbe
xor
sarb
les
jo
lds
aaa
es
imul
inc
les
mov
enter
shrb
sub
cld
mov
les
fsts
inc
adc
mov
out
mov
jnp
mov
shrb
das
inc
dec
aas
lds
push
fwait
sub
jo
shlb
cmp
imul
imul
cmp
cmp
iret
scas
jecxz
pop
jno
das
sahf
decl
aad
xchg
xchg
inc
push
cltd
sub
popf
mov
jne
mov
xchg
test
or
ljmp
push
push
es
lea
pop
jp
jmp
mov
fwait
nop
addb
pop
imul
pop
mov
cli
lock
pop
and
ja
ret
andl
jge
das
push
jne
xlat
jne
mov
mov
testb
push
xor
mov
mov
js
mov
aad
push
push
pop
mov
ret
loop
je
ret
or
mov
add
clc
adc
movntps
jo
sbb
test
sbb
mov
xchg
inc
and
xchg
cs
xchg
mov
daa
inc
add
jno
lret
cmp
aaa
cmp
movsb
xor
inc
lret
cmc
adc
push
pop
lods
inc
cmp
test
shlb
add
sub
xor
xor
call
ficoms
fwait
add
add
sub
or
jae
xchg
cmpsb
xchg
sub
xchg
les
ja
xchg
dec
mov
out
jb
push
mov
inc
mov
add
movsl
push
imul
or
cld
pop
add
xchg
xlat
fld
iret
and
test
push
and
push
xor
cmp
sbb
mov
xchg
mov
inc
add
add
jbe
enter
lret
movsb
sahf
ds
xor
vcomisd
andb
cli
sbb
inc
cmp
pop
cli
mov
lods
push
std
jg
insb
stos
inc
xchg
mov
rclb
inc
enter
fstpl
sbb
jnp
shlw
movsl
ja
into
in
cli
cmp
fstps
popf
ss
add
mov
nop
adc
pop
sbb
mov
cmp
add
adc
mov
mov
dec
sub
scas
mov
xor
stc
stos
sub
or
test
shrl
jp
insb
xor
fistps
push
xorb
loope
or
dec
inc
mov
popa
cltd
cmp
sub
in
addr16
cmpsb
test
mov
in
ss
mov
clc
jne
jne
test
inc
mov
test
sub
into
jae
movsb
gs
mov
imul
xchg
inc
xchg
addr16
push
arpl
fs
and
pusha
dec
repnz
xchg
xor
fxch
or
arpl
jno
pop
mov
fwait
and
popa
scas
fnstenv
jae
nop
jb
jae
adc
sbb
dec
int3
mov
lret
jg
and
or
jno
loopnew
mov
or
data16
adc
and
stos
into
test
push
lret
mov
addl
ret
int
test
imul
in
andl
dec
ror
sbb
in
and
or
xchg
xor
xor
or
es
fs
jo
icebp
pushf
rorb
or
push
clc
sub
push
mov
mov
pusha
ja
push
out
xor
testb
push
pop
inc
lock
mov
lret
rol
xchg
adc
adc
in
push
cvtdq2ps
push
jle
sub
lods
and
sub
cli
mov
shrl
jne
fimull
fbld
mov
cltd
aad
scas
fwait
lahf
stc
add
lret
adc
mulb
sbb
shll
xlat
les
mov
jno
sbb
ss
cmp
inc
out
in
fwait
in
xchg
jle
ljmp
shlb
cltd
out
fistpl
dec
in
cmp
pop
fcmovnb
jmp
iret
mov
mov
push
pop
push
sub
sahf
xchg
or
es
xchg
les
outsl
scas
sbb
aas
mov
mov
enter
pop
mov
scas
lds
les
pop
cmp
das
dec
pop
aad
jb
std
aas
fs
je
jne
sub
mov
fs
push
or
cltd
sub
push
sbb
inc
jge
xchg
popf
xchg
stos
xlat
pushw
nop
popa
inc
addr16
inc
cmp
pusha
test
push
test
test
lret
sbb
in
mov
or
js
jb
movsb
push
in
fcoms
iret
data16
scas
cwtl
pop
pop
into
hlt
mov
pop
add
pusha
addb
inc
adc
cmpb
mov
xchg
mov
int3
rolb
cmp
mov
lret
lret
sub
inc
lods
cmc
inc
in
cmc
pushl
xor
inc
fwait
outsb
call
inc
mov
jo
sarb
pushf
ss
add
out
dec
jns
jnp
pop
iret
inc
add
iret
subb
das
add
mov
nop
push
fsubs
insl
xchg
xor
inc
jp
pop
sub
xor
in
test
sbb
in
scas
imul
ss
pop
std
push
add
jb
mov
imul
mov
jbe
add
outsl
adc
push
imul
inc
movsl
test
jnp
mov
outsb
xor
insb
jp
scas
pusha
push
lcall
mov
inc
rcrb
aas
ret
mov
adc
add
jns
sub
xor
add
out
lahf
stos
pop
fdiv
iret
aaa
repnz
xorl
fimull
ja
je
push
xchg
mov
sbb
push
das
movsl
sbb
mov
pop
icebp
mov
mov
pop
pushf
ja
pop
call
inc
mov
test
lods
and
scas
push
cmp
in
outsl
or
das
stos
outsb
push
lock
dec
rolb
arpl
arpl
adc
scas
push
rcrb
inc
mov
insb
movsl
dec
ds
iret
xchg
sahf
sar
fcomip
push
loop
sbb
pop
fnstsw
cmp
pop
out
xor
cmc
inc
mov
subl
repz
add
iret
mov
lcall
sub
pop
inc
add
cmpsl
gs
push
repz
mov
aas
pusha
mov
mov
popf
lock
inc
push
adc
add
lret
sbb
incl
adc
leave
cli
cltd
sub
or
cltd
incl
push
xor
lret
cmp
mov
ja
dec
cmp
dec
adc
cmpsl
imul
fidivs
ficompl
jl
mov
dec
xchg
dec
mov
cmp
sbb
je
mov
push
mov
arpl
xchg
pop
inc
ret
loopne
cltd
xchg
int
dec
mov
adc
push
sahf
lods
in
mov
lods
mov
idiv
addb
cmp
xchg
add
fdivrs
movsb
inc
mov
inc
add
push
inc
inc
dec
int3
pop
jl
test
jg
xchg
xchg
or
dec
or
or
aam
sbb
xchg
aad
sahf
movaps
lock
mov
les
dec
mov
mov
stc
stos
xor
xor
je
sub
cmpsb
cmp
push
mov
mov
lret
insl
fs
mov
call
fldcw
mov
cmpsl
inc
pop
pop
push
xor
or
rcll
xor
fnstenv
movb
jecxz
mov
push
push
lret
lret
lea
test
xor
stos
fstps
mov
test
iret
loopne
out
push
xor
adc
xchg
or
and
jle
jl
mov
mov
push
out
and
pushf
lds
lods
cmp
les
in
jnp
sarl
jns
mov
stos
sub
ret
sbb
cmpsb
push
lahf
pop
mov
sbb
repnz
fstpl
xchg
outsl
adc
push
jo
roll
pop
sti
loope
test
fwait
jnp
mov
adcb
and
dec
outsl
mov
mov
lahf
out
dec
dec
xor
inc
jle
enter
inc
push
repnz
insl
shlb
jnp
or
cmp
adc
mov
data16
dec
jnp
fwait
jnp
pop
ret
addb
int3
std
dec
push
push
mov
add
aas
xor
dec
lds
stos
xchg
push
sbb
into
test
mov
adc
push
xorl
sub
addr16
shrl
xor
xor
int3
sub
inc
jecxz
jmp
cmp
movl
rorl
dec
orl
mov
iret
inc
cld
insb
inc
xchg
and
icebp
imul
imul
sbb
gs
jns
fsubrs
pop
cli
ja
js
dec
or
push
out
cmp
adc
lret
movsl
shlb
adc
in
insl
push
leave
push
test
cwtl
xchg
jmp
jne
aas
shr
add
insl
sub
mov
mov
cmp
or
cmpsl
test
jge
mov
int3
fsubrl
or
cmp
nop
sahf
cwtl
dec
cli
shlb
loope
xchg
enter
xor
stc
imul
adc
repnz
xchg
xchg
pop
int3
fst
mov
or
jne
jne
add
cwtl
shr
sub
out
adc
mov
lds
jle
insb
lret
dec
pop
dec
mov
fistl
repnz
arpl
cmp
sub
mov
popa
xchg
add
add
gs
push
inc
das
xor
dec
addr16
push
test
rclb
fimuls
xchg
push
dec
dec
mov
jg
sarb
and
adc
push
lret
jbe
repz
cld
aad
fdivs
cmp
cwtl
js
test
movsl
sahf
mov
sub
outsb
mov
stc
rolb
mov
iret
fsubrp
mov
or
mov
push
insb
out
sub
and
mov
add
test
mov
lret
xchg
sbbl
aas
inc
push
xchg
lret
lcall
sub
test
outsl
popa
and
push
or
in
insb
cwtl
hlt
push
in
aam
lock
mov
jge
dec
dec
loop
jnp
imul
lret
shll
cli
xor
add
or
mov
movsl
pusha
dec
cwtl
sbb
mov
mov
gs
enter
xlat
xlat
out
aaa
cmp
cs
adc
fs
jge
pop
dec
push
scas
sbbb
dec
jno
cwtl
fsubrl
xchg
adc
xchg
pop
push
cmpsb
cltd
out
loop
pop
ljmp
xor
loope
jnp
sbb
sub
or
cwtl
mov
mov
loop
sub
imul
ja
mov
fstps
ret
cld
sbb
lods
lret
dec
push
lea
mov
icebp
xor
test
push
xor
jmp
jge
xor
cli
adcl
cltd
cmp
js
ljmp
xlat
lock
fldcw
jb
jne
pop
repz
adc
fidivl
aas
into
and
jmp
mov
xchg
nop
mov
jae
dec
fidivs
movsl
imul
sahf
mov
jnp
sub
xor
and
xchg
mov
dec
adc
lcall
out
cmpsb
sbb
mov
mov
mov
stos
add
adc
scas
insl
push
stos
cmpsl
or
lock
dec
lock
imul
mov
jne
std
test
inc
sub
sti
sbb
ret
sbb
inc
icebp
rcr
scas
pop
fildl
lds
sub
xor
mov
adcl
dec
sub
lcall
jl
decb
cmpsb
arpl
jbe
mov
xor
ret
sub
stc
fbld
mov
mov
xor
jo
push
sbb
int3
push
repz
cmp
sti
adc
xor
or
in
push
sbb
rcrl
adc
cmpsl
xchg
ret
int
sbb
push
sbb
ja
hlt
pop
iret
push
push
sbb
std
jg
fs
cmp
movsb
ja
mov
mov
lds
mov
js
pop
ss
dec
insb
jge
mov
nop
cmp
pop
arpl
ds
punpckhdq
mov
jbe
sbb
subb
dec
pop
adc
rclb
test
adc
add
mov
inc
test
mov
popa
pop
add
sub
xchg
lds
outsb
mov
push
neg
cmpb
pop
inc
rorb
imul
mov
or
cli
clc
sub
bound
divb
xor
push
es
scas
jecxz
stos
push
cld
sti
sub
in
or
mov
sub
nop
lcall
cld
jp
dec
cmp
gs
shlb
movsl
insb
inc
fldl
arpl
test
adc
dec
jmp
in
or
dec
push
jecxz
sarl
pop
std
push
sbb
push
cmp
xor
dec
dec
fnstsw
imul
mov
cmpsb
jp
js
sbb
add
into
aam
movsl
add
addr16
mov
adc
mov
mov
in
push
push
mov
or
jmp
mov
and
repz
pushf
add
data16
xlat
out
pop
inc
mov
add
dec
sub
inc
pushf
xchg
out
push
jecxz
popf
push
pop
mov
xor
push
lock
arpl
lcall
iret
sbbl
rcll
push
shlb
pop
sub
aas
jle
or
cmp
ds
leave
mov
test
cltd
mov
inc
in
sar
pop
and
insl
mov
insb
test
nop
dec
mov
dec
jb
add
or
and
mov
rorb
outsb
sub
test
mov
imull
out
vmread
add
daa
xor
add
in
xor
pop
push
inc
mov
mov
jnp
fidivs
cli
incb
pop
lahf
cmp
aam
shll
mov
clc
or
pop
fcomip
cltd
jae
ljmp
insl
jp
jnp
stc
mov
mov
xor
pushf
insb
sbb
pushf
jne
pop
sbb
cmpl
roll
aas
mov
ds
movsl
movsl
xchg
fdivl
mov
neg
scas
hlt
mov
pop
or
int3
push
push
inc
xor
mov
popa
clc
add
or
xlat
fmul
outsb
and
ds
cmpsl
mov
loope
xchg
ret
outsl
xchg
mov
fmul
cltd
lods
test
cwtl
in
adc
sbb
or
mov
cmp
inc
clc
jnp
and
xor
sub
jecxz
adcb
inc
in
leave
fs
pop
sub
pop
into
and
adc
icebp
pop
sub
cli
sub
ret
mov
xor
add
mov
cmp
xchg
cltd
notl
rorb
lret
movsl
adc
insl
or
xor
jbe
pop
leave
bound
aaa
inc
xor
inc
pop
imul
dec
mov
pop
lcall
lret
jne
and
add
fwait
in
or
xor
test
lods
cli
mov
movsb
and
cmp
push
adcb
out
dec
mov
je
mov
xchg
push
dec
dec
in
sti
in
mov
fbld
xor
cmpsl
sub
mov
pop
adc
lret
adc
jl
pushf
jnp
push
mov
imul
mov
int3
fnstcw
addr16
mov
adc
nop
xor
roll
push
hlt
clc
xchg
fcmovnb
sbb
xchg
sub
mov
xchg
adc
js
xchg
je
nop
call
adc
ljmp
jno
bound
jnp
clc
add
ljmp
dec
lds
ja
lret
insb
xchg
add
push
mov
movsb
and
negb
and
sub
rolb
xchg
outsl
mov
lods
push
mov
aas
fiadds
and
add
inc
sbb
scas
out
pop
mov
mov
loope
and
mov
ror
and
xchg
int3
in
inc
cmpsb
aam
jmp
jns
jbe
mov
xor
sub
lret
push
push
adc
mov
cwtl
sub
pusha
test
pop
imul
jne
lcall
and
imul
mov
add
test
inc
cwtl
inc
add
arpl
rolb
jmp
mov
mov
mov
sub
dec
inc
das
outsb
xchg
mov
adc
inc
mov
jmp
cmp
mov
cmc
mov
ds
insl
add
xchg
imul
push
jne
xlat
mov
cmc
inc
into
xchg
or
push
test
cltd
pop
cmp
or
mov
mov
int3
dec
divb
movsl
jp
test
mov
jbe
push
inc
mov
loop
xchg
hlt
sub
pop
ret
mov
cmp
add
jl
xlat
push
pop
std
pop
mov
cmc
sbb
jmp
mov
insb
out
in
mov
push
adc
mov
cli
in
es
mov
mov
imul
cmp
cmp
xchg
aas
out
mov
inc
cmp
jmp
js
mov
outsl
fnstenv
loopne
jne
pop
adc
jg
mov
mov
rcrl
push
cmp
adc
inc
insl
cmp
inc
imul
sbb
mov
sbb
loope
pop
pusha
xchg
or
pop
mov
mov
mov
inc
cmp
incb
ss
fists
loopne
mov
jo
mov
inc
add
add
sarb
inc
gs
pop
mov
add
call
and
scas
fidivl
sarl
jecxz
movsl
and
fcmovu
int
cmp
mov
ffreep
xor
stc
stos
add
and
shlb
mov
cs
daa
dec
pushf
dec
pop
cmpsb
lret
and
out
in
cmp
ja
mov
sahf
mov
jmp
ret
filds
inc
ljmp
add
mov
ds
sub
bound
mov
jmp
add
mov
int
mov
stos
mov
sbb
repnz
test
test
push
mov
mov
fisubrs
int
mov
cltd
fstpl
imul
mov
push
test
mov
sti
pop
into
or
ds
ljmp
imul
cld
and
stc
scas
lret
adc
arpl
mov
imul
jbe
pop
iret
jbe
lret
mov
mov
test
imul
pop
sti
mov
cli
inc
and
aad
aad
dec
popf
jle
out
and
shlb
mov
or
sbb
jle
xor
movsl
movsb
andl
mov
dec
dec
pop
inc
mov
mov
mov
jbe
xor
test
adc
push
stc
push
push
xor
jo
push
lret
repz
ljmp
cmp
mov
mov
pop
push
sbb
sub
test
adc
test
fs
push
or
add
lea
stos
adc
gs
insl
mov
add
xchg
mov
out
lods
or
insb
pusha
ret
in
jl
test
in
adc
and
imul
mov
mov
mov
mov
adc
adc
jnp
fcoml
and
lret
insl
inc
sbb
pushf
mov
ljmp
inc
push
mov
call
mov
cmpb
mov
dec
pushf
popf
push
nop
or
insl
in
shr
sti
stos
or
pop
sub
sub
ss
inc
test
imul
cmp
in
push
jmp
adc
cmp
jge
push
push
xchg
jmp
jne
js
loop
cs
aas
sub
adc
pop
xor
add
fisttpl
pop
inc
dec
jmp
mov
daa
inc
mov
aaa
cmp
mov
scas
test
mov
or
xor
jbe
push
in
imul
jb
and
mov
fsubs
adc
fidivrs
rol
insl
push
fwait
loope
call
and
orl
fsubl
imul
shl
dec
or
pushf
sub
shlb
ja
pop
inc
out
jge
mov
mov
dec
fsubr
mov
out
cmp
fwait
push
icebp
push
dec
fsubl
pop
mov
cltd
push
xchg
pop
or
inc
jo
scas
out
imul
daa
xchg
loop
push
sub
or
fwait
das
cs
pop
inc
or
mov
xchg
jle
mov
test
ljmp
cmp
or
mov
sbb
dec
mov
xor
push
adc
push
sub
xchg
ljmp
push
add
jmp
ret
cmp
test
jnp
adc
pushf
rclb
rcrl
lock
mov
je
jl
in
mov
clc
clc
inc
fucomip
dec
rep
pop
xchg
rol
fists
cmp
mov
daa
mov
int3
test
pushf
jae
xor
test
inc
xor
mov
in
or
ljmp
jmp
popa
sbb
call
movsb
cmp
pop
pushf
dec
cmc
sbb
inc
ss
jecxz
xchg
into
das
shr
and
cmp
clc
les
aam
xchg
xchg
leave
cmpsb
and
aad
mov
dec
inc
iret
jl
fmul
and
cmc
sahf
hlt
popf
cs
jmp
cs
scas
dec
arpl
sub
out
inc
dec
push
roll
fsubs
fucomi
adc
xchg
in
div
xor
mov
sbb
sti
inc
nop
cwtl
outsl
adc
sti
into
jno
std
mov
pop
imul
stc
jno
or
lret
mov
xorl
notl
xor
mov
fisubrl
lods
xchg
fists
out
and
sbb
add
out
mov
ud2
scas
push
fiaddl
mov
jmp
int
movsb
dec
scas
dec
adc
fwait
lods
rcll
sub
stos
cld
jmp
sub
mov
fwait
aad
jecxz
es
sub
shll
pop
movd
or
subb
mov
mul
push
dec
mov
mov
incb
or
pushf
jno
xlat
lods
lds
xor
into
or
ljmp
or
or
xor
data16
mov
lcall
fsubl
push
jle
lcall
lock
inc
mov
and
push
cmp
out
scas
in
cltd
sub
sub
dec
sahf
loop
mov
fnstsw
cltd
xchg
js
xor
jg
jle
mov
sub
daa
imul
aaa
arpl
jmp
sub
sarl
lcall
pop
andl
ret
orb
popa
mov
daa
cwtl
mov
jno
nop
pop
ret
orb
mov
jbe
xor
push
lret
xor
sbb
push
sub
cld
sbb
testl
cltd
xlat
addb
sbb
jl
loope
push
out
jg
ljmp
mov
push
inc
lret
cltd
pop
and
fidivrl
enter
sbb
jge
pop
scas
jnp
es
sti
lds
shll
push
daa
push
iret
incl
js
pop
xor
xor
xor
mov
add
je
mov
scas
je
add
ret
push
xor
adc
cli
loop
shlb
mov
lcall
push
adc
add
je
mov
pusha
mov
outsb
or
sub
ja
mov
pop
jge
mov
es
mov
push
sti
int
and
cmp
sub
push
or
and
and
repz
dec
jbe
or
inc
int3
and
aas
into
pop
jmp
cmp
ss
pusha
xchg
out
push
shll
pop
pop
sbb
xor
in
in
xor
mov
and
xor
imul
pop
add
mov
std
mov
or
cltd
icebp
pop
push
inc
push
dec
inc
stc
xorb
dec
dec
fdivrs
fs
hlt
pushl
xchg
addr16
push
sahf
iret
cwtl
jnp
stos
xchg
add
inc
sbb
push
jnp
adc
push
lahf
shll
mov
imul
aam
dec
jns
mov
mov
mov
hlt
and
lods
inc
inc
push
pop
and
mov
js
icebp
clc
loope
cmp
pop
push
pop
leave
or
or
adc
out
scas
or
mov
mov
icebp
pusha
popl
popa
cltd
sub
lods
std
push
sbb
cmpsl
pushl
rol
arpl
inc
and
push
shrb
outsb
sub
and
jle
adc
cmpl
pop
xor
ja
sub
jecxz
mov
mov
sub
sahf
ds
outsb
jo
or
jno
and
test
jg
icebp
adc
test
sbb
jmp
out
or
shll
push
adc
jb
adc
aas
imul
and
lret
ljmp
sbb
mov
loopne
call
push
das
pop
pop
or
aam
inc
popl
jnp
ljmp
push
sti
add
xor
ja
mov
mov
xchg
stc
aad
xchg
orl
sub
jb
scas
push
sub
rcll
addr16
xor
sbb
mov
jns
jge
loopne
leave
repz
repnz
leave
out
push
sahf
leave
push
mov
sub
ljmp
and
loope
adc
push
adc
int
int
pop
cmp
xor
iret
fisttpl
pushf
fsts
push
addr16
add
mov
rol
aad
sar
mov
jg
lret
push
imul
push
sbb
icebp
jne
test
push
sub
mov
push
add
and
int3
daa
push
loope
mov
push
and
dec
shr
mov
jno
mov
xor
icebp
sbb
sbb
test
cmpsb
dec
dec
cmp
cltd
cmpsb
sbb
xchg
movd
mov
add
je
inc
inc
and
dec
fildll
shrb
cs
loope
andb
dec
pop
mov
cld
push
mov
mov
jge
or
dec
pop
or
pop
push
test
fmul
inc
test
fwait
mov
in
pop
scas
jp
mov
jno
or
call
pop
push
ljmp
push
test
sub
cmp
sahf
in
shll
rorb
mov
jmp
ds
sbb
sub
jmp
sub
add
push
sub
pop
dec
lods
push
adc
sbb
call
ret
cs
jp
lds
sub
iret
mov
call
sarl
push
scas
push
bound
cmp
jmp
pop
mov
imul
mov
mov
pop
push
xor
insb
sub
repnz
test
sub
cmpsl
sar
add
sar
jno
andb
sti
jno
cwtl
cmp
sbb
gs
ljmp
popa
adc
mov
or
lods
xchg
in
or
inc
aaa
cmp
mov
insb
out
popa
fwait
ja
fidivl
loop
sub
cs
mov
pusha
sub
sub
mov
lahf
mov
cltd
mov
push
fidivl
cs
scas
js
dec
pop
and
int3
xor
adc
pop
sbb
cmp
js
fisubl
jbe
inc
push
sub
mov
inc
test
ja
sbb
data16
movsb
jl
mov
cmp
pop
mov
mov
push
sub
hlt
mov
jbe
ret
ret
mov
gs
stos
jmp
pop
sub
sti
mov
aas
imul
pop
shrl
ja
scas
int3
in
pop
iret
adc
in
cltd
mov
scas
jo
jle
das
or
adc
sub
test
mov
xchg
cmp
test
jb
nop
or
cmp
cmp
adc
repz
and
xorb
test
mov
sahf
out
xchg
inc
lcall
inc
pop
dec
lea
ljmp
sbb
push
jnp
sbb
xchg
jnp
fnstenv
aam
out
ret
jnp
xor
addl
cmpsb
jbe
imul
test
loopne
push
leave
lahf
fwait
push
in
adcb
aaa
out
jae
ljmp
push
pop
fisttpll
sub
mov
pusha
adc
xor
inc
xor
pop
das
aad
cmp
nop
sbb
arpl
adc
lahf
out
cmp
das
sub
mov
lret
cmp
cmp
add
xor
or
lds
push
mov
and
sub
es
cmp
or
inc
es
stos
aaa
mov
mov
leave
pop
ret
xor
aam
testb
addr16
testb
aam
or
loope
js
addr16
in
insb
cltd
idivl
push
xor
and
shld
cmpsb
and
xchg
gs
inc
sbbb
sbb
push
sbb
shrb
dec
aam
out
faddp
and
gs
notb
cmp
icebp
cwtl
xacquire
push
fwait
jmp
dec
subl
pop
sub
jmp
sbb
mov
xor
rol
mov
mov
out
ss
push
mov
test
dec
cmp
test
js
mov
inc
xchg
test
adc
hlt
dec
add
test
dec
aam
cmp
xchg
cwtl
or
push
xchg
mov
mov
mov
cmc
and
enter
push
out
sbb
xor
pop
or
das
aam
stos
int
mov
push
arpl
mov
gs
jle
inc
sub
and
jg
lret
stc
das
pop
adc
xchg
dec
sub
cmp
cmpsl
pop
xchg
xor
mov
xchg
sarb
flds
cmc
bnd
aad
mov
stos
int
push
andl
loopne
mov
pop
scas
inc
sbb
cli
out
pop
xor
pop
inc
test
or
fwait
loop
or
mov
adc
es
mov
hlt
add
btc
outsl
and
push
cmp
loope
jle
das
xor
add
outsl
ds
ss
and
imul
inc
push
xor
xor
pop
cli
scas
jge
inc
dec
and
movsl
jle
aad
xor
inc
rclb
mov
mov
sahf
insb
fbld
sub
js
fs
inc
mov
arpl
jne
fildll
sbb
dec
and
pop
xchg
mov
aas
cmp
adc
pop
call
rcll
cwtl
push
mov
shl
inc
dec
sbb
xchg
fsub
xor
jl
push
inc
aam
sbb
outsb
iret
shrb
dec
aam
jns
popa
je
inc
xorl
mov
xchg
shlb
sbb
ficoms
clc
or
mov
jae
pop
push
sub
loop
jmp
cmp
enter
inc
loopne
jecxz
sub
ret
addr16
dec
pushf
sbb
js
sbb
mov
pushf
jne
cmp
xor
jne
cmp
dec
mov
cld
or
xchg
sbb
fnstenv
push
lock
repnz
addr16
sti
xchg
jne
xchg
mov
out
addb
lret
push
sbb
or
daa
sbb
or
test
aaa
repz
adc
sbb
aam
into
rol
mov
push
xor
sbb
test
scas
icebp
inc
push
sbbb
sub
lret
inc
or
js
adc
push
or
push
mov
fistpll
mov
dec
test
mov
loope
xor
push
stos
ja
int3
push
ja
ja
or
repnz
montmul
cmpsb
ret
lds
mov
or
and
mov
adc
arpl
repnz
pop
enter
ret
pop
aad
nop
and
cmp
sbb
sub
sti
lcall
sbb
push
rol
lock
adc
add
std
and
pop
xor
pop
loopne
sbb
test
je
cwtl
fisttpl
add
sti
in
sub
lock
and
imull
aaa
sti
cmp
adc
push
sbb
dec
jecxz
sbb
repz
pop
add
dec
dec
inc
jle
arpl
dec
or
mov
int3
cltd
sub
or
jecxz
add
jae
mov
xor
enter
xchg
or
dec
jmp
rcl
test
jnp
adc
sub
xor
inc
lcall
cld
inc
inc
cmp
cmpl
sahf
rcl
jno
lods
mov
xor
pop
mov
sbb
int
data16
mov
ret
test
dec
push
pop
adc
jg
js
idivb
mov
jecxz
add
movsl
iret
cltd
stos
or
cmp
add
mov
das
lahf
xchg
mov
xchg
pop
cmc
mov
out
subb
mov
sti
das
jne
push
inc
xchg
fwait
lods
arpl
daa
push
add
mov
sarb
int3
adc
add
mov
lcall
pop
dec
pop
pop
popf
inc
mov
lea
movsl
pushl
jg
out
fwait
and
mov
xchg
sbb
outsb
ss
jge
cmp
lahf
cmc
and
and
mov
arpl
dec
lahf
add
lret
pop
lea
adc
dec
push
mov
pushf
inc
pop
std
xor
mov
movsb
leave
or
insl
push
outsl
or
ljmp
sub
into
and
test
jnp
inc
xchg
rcl
dec
sbb
repz
rorb
in
test
sub
jge
pop
mov
enter
inc
add
push
jo
aas
loopne
or
insl
out
or
in
stos
movsl
add
sub
xchg
pop
cmp
in
xor
scas
inc
clc
cmp
roll
ljmp
subb
mov
pushl
sti
add
mov
or
clc
dec
and
out
sub
push
sbb
lods
aaa
lock
xorl
or
mov
outsl
mov
jno
cmp
lods
cmp
mov
repz
sub
xchg
inc
jg
mov
push
adc
or
pop
mov
jle
icebp
punpckhbw
mov
mov
xor
or
xor
cld
fnstcw
xchg
pusha
sbb
push
das
outsl
aad
jle
and
or
stos
test
sub
stos
or
mov
fnstsw
adc
scas
mov
pop
pop
mov
out
jns
mov
cwtl
push
mov
inc
pop
xchg
jle
sbb
pusha
in
addr16
rol
loope
stos
cld
mov
sbbl
dec
gs
in
ljmp
add
jb
pop
loopne
fucom
insl
in
xchg
sbb
or
cmp
sbb
les
sub
xchg
cli
faddl
jg
movsb
pop
rcrl
in
je
jge
cmpsb
pusha
mov
ds
push
ljmp
sbb
sbb
nop
notl
push
push
dec
mov
mov
pop
pop
gs
push
jbe
pop
movsl
notl
scas
add
inc
clc
arpl
push
pop
xchg
add
push
adc
xor
lods
test
inc
sbb
mov
adc
xchg
jmp
mov
nop
mov
and
sti
mov
jp
mov
and
in
add
rcll
outsl
jp
sub
nop
cli
lods
scas
adc
mov
in
jecxz
pop
xlat
push
inc
mov
dec
cli
xor
arpl
jmp
pop
pop
iret
sub
mov
fadd
in
lods
sbb
fucomp
out
sahf
sbb
out
js
jb
and
andl
adc
outsb
xor
xor
sub
test
xchg
lahf
ljmp
and
loopne
ljmp
shr
xor
push
aam
dec
movsb
cli
xchg
and
fwait
mov
loope
mov
push
pop
mov
ret
mov
ds
mov
ss
leave
lods
out
dec
xchg
add
stc
xchg
jns
inc
fucom
js
pop
lock
cmp
or
mov
push
or
lret
shlb
scas
lret
lds
mov
mov
in
sbb
or
scas
test
mov
xor
xlat
std
pop
into
cltd
adc
test
xor
inc
adc
loopne
cmp
stos
dec
push
add
scas
out
out
iret
das
mov
lahf
mov
stos
cmpsl
cld
aad
push
dec
je
push
xor
mov
add
leave
scas
sbb
push
imul
add
cmp
cmp
in
dec
addb
mul
ret
xchg
movsb
stc
and
ljmp
popa
push
rep
mov
ret
pop
out
data16
jle
pushf
ljmp
inc
xchg
xchg
call
sbb
daa
js
imul
arpl
arpl
subl
push
stos
or
stos
dec
clc
addr16
and
pop
mov
mov
jb
lcall
jecxz
out
mov
or
clc
lds
inc
sub
fwait
and
xor
mov
iret
mov
iret
fmul
lahf
xor
test
pop
rorb
cmp
enter
xchg
mov
lock
dec
in
addr16
fbstp
push
cmp
cwtl
insb
sbb
out
sub
scas
or
rcll
fmul
xchg
inc
jo
jne
fst
roll
jnp
inc
and
inc
aaa
test
je
jb
jmp
xor
jmp
and
test
stc
jnp
out
mov
add
stc
add
sub
bound
add
inc
and
ljmp
stos
jb
mov
push
mov
sbb
jle
loopne
mov
xor
pop
and
jb
jl
add
push
jbe
xor
scas
cmpsl
enter
mov
sbb
cs
push
call
repz
int3
je
xchg
inc
jne
sub
sub
pop
mov
xor
and
shlb
adc
cmp
scas
and
in
or
dec
addr16
pop
mov
or
scas
test
sub
dec
sbb
ljmp
test
jmp
hlt
jb
sub
xor
clc
repnz
cmc
mov
fldcw
xlat
inc
sbb
sub
test
adc
inc
fsubp
scas
or
out
xchg
loopne
js
stos
or
in
mov
shll
bound
inc
cmp
push
stos
mov
sbb
push
rolb
push
lret
rcr
enter
lods
mov
jecxz
sub
or
push
lods
fwait
nop
hlt
movsl
dec
cs
ljmp
aaa
pop
mov
mov
sti
add
ja
gs
push
cmp
mov
jno
xor
pop
pop
xchg
rcrl
pop
cmp
mov
out
and
divb
xchg
mov
repnz
les
pusha
ss
mov
inc
mov
pop
xor
sbb
sahf
mov
inc
mov
ss
mov
mov
std
push
mov
jg
ret
adc
mov
or
repz
cmp
xchg
aad
imul
scas
jp
pop
iret
cmpsb
bnd
jns
movsl
scas
mov
loope
lock
in
mov
sub
int
nop
add
mov
test
lds
xor
js
je
mov
aaa
push
push
mov
dec
or
sub
aaa
dec
ud1
subb
push
hlt
mov
cmp
dec
in
dec
xchg
adc
fidivl
movsl
pusha
data16
adc
mov
jb
fs
int
movsb
or
mov
scas
iret
jae
lahf
mov
xchg
pushf
sub
das
jl
sbb
fs
lds
fsubr
jmp
adc
mov
pop
leave
icebp
jecxz
iret
xchg
push
idiv
inc
iret
popf
xlat
and
outsb
ret
push
and
sahf
movsl
cmc
repz
pop
jecxz
popf
xor
lods
pop
stc
pop
adc
push
sarl
mov
in
inc
add
std
adc
fisttpll
mov
inc
pop
fs
sti
sub
aas
xor
sbb
mov
jp
sub
dec
xchg
jl
mov
sbb
inc
mov
or
pop
dec
fcoml
shr
lcall
loop
dec
cmp
mov
imul
mov
mov
sbb
xor
out
ret
arpl
loopne
and
xchg
shr
xor
orb
stos
push
push
xor
mov
rcrl
notl
add
cmp
pop
jo
mov
out
adc
lahf
lret
jge
aaa
in
lock
insl
in
xchg
xorb
xchg
call
iret
cmpsb
push
sbb
pop
pop
or
repnz
idivb
out
pop
mov
orl
xchg
mov
or
out
mov
xlat
ror
xor
out
imul
xchg
push
push
in
and
lock
sbb
mov
push
mov
mov
cmc
mov
mov
in
mov
inc
sub
mov
das
iret
inc
add
pop
int3
jb
adc
fimuls
mov
sbb
loope
dec
cmp
xor
inc
shrb
fildl
pop
fdivs
push
xchg
push
sarb
pusha
data16
ret
mov
xchg
shll
cmp
into
popf
mov
movsl
pop
sbb
adc
in
jmp
aam
loope
out
ds
sbb
pushf
subl
inc
ljmp
stos
jns
mov
add
xchg
lods
jg
jp
inc
mov
test
add
inc
mov
jo
aad
push
popa
jae
dec
xchg
addr16
add
enter
sub
dec
mov
fsub
mov
aam
xor
jns
sbb
jno
dec
and
and
sub
inc
and
xor
cmp
mov
xorb
jns
sub
push
pop
cmp
std
jmp
in
daa
and
icebp
jg
mov
ret
mov
cs
cs
xchg
mov
shr
jmp
sbb
jno
or
mov
xchg
arpl
aas
or
xlat
int
notl
dec
adc
sbb
pushl
xor
jg
test
cltd
icebp
out
gs
out
in
xor
mov
xlat
js
mov
sbb
push
ljmp
push
mov
xor
bound
out
sub
sti
popa
or
cwtl
nop
mov
ret
xchg
cmp
pop
xchg
aam
rcrl
lds
ror
sti
dec
mov
push
repnz
lds
cmp
scas
xchg
jnp
mov
xlat
jp
inc
ret
test
or
mov
ror
mov
gs
loope
jnp
xchg
movsb
stos
cmp
std
xchg
js
jo
adc
int
mov
aad
stos
cmp
dec
pusha
dec
cli
jg
into
ficomps
iret
jo
cld
mov
inc
adc
dec
xchg
xchg
repnz
xchg
sahf
scas
decb
clc
mov
outsb
push
lock
jnp
mov
icebp
fcomps
sbb
lds
push
std
lods
push
aad
bound
inc
sar
loope
pop
imul
aam
into
ror
mov
loop
xchg
mov
cmpsl
out
test
lret
xchg
pusha
adc
cmp
jecxz
dec
dec
pop
inc
fldenv
inc
xchg
or
xor
mov
outsb
mov
cwtl
mov
mov
adc
repz
xchg
inc
testb
and
fcmovnu
cmp
pop
lret
xchg
mov
dec
cmc
scas
das
mov
je
xor
pushf
loopne
in
mov
sarl
xchg
insl
mov
gs
add
inc
repnz
xchg
lods
pop
std
jp
and
ss
mov
int
jmp
nop
ficoml
dec
add
sti
adc
cld
cmp
jno
push
pop
lea
and
inc
adc
cmpb
push
test
mov
sub
test
clc
insl
push
mov
pop
daa
cltd
jge
pusha
sbb
xchg
sub
addr16
out
arpl
in
mov
push
mov
inc
cmp
in
xchg
hlt
aas
ds
cmp
xchg
mov
or
mov
xchg
imul
inc
xlat
aaa
inc
inc
mov
imulb
dec
scas
xchg
lahf
jb
fadds
mov
mov
sub
cwtl
loop
adc
jmp
dec
mov
sub
std
xchg
stos
xor
fwait
or
out
and
mov
cmpsl
cs
xor
testl
addb
adc
or
sub
dec
mov
sahf
jns
out
cmpl
or
movsb
xchg
sarb
aam
das
xchg
testl
xlat
ja
mov
mov
fisubrs
adc
les
outsl
sti
js
mov
xchg
mov
mov
or
add
mov
dec
dec
jo
inc
or
sub
leave
test
sbb
aam
mov
adc
add
pop
lahf
dec
test
xchg
data16
push
rolb
into
inc
cs
dec
rcll
inc
rcr
and
test
in
dec
jg
mov
testb
lods
jle
lcall
push
sbb
mov
lahf
mov
stos
xlat
outsl
cmpsl
mov
pop
mov
stc
lret
divl
pop
add
inc
pop
fwait
xchg
addr16
jae
scas
push
mov
dec
test
xor
outsb
adc
fstps
or
je
and
dec
cmp
xchg
iret
lcall
nop
lock
jae
inc
and
adc
in
pop
arpl
mov
mov
jl
imul
dec
lret
cwtl
dec
lds
loope
sbbb
xchg
dec
push
scas
arpl
stos
movsl
push
xchg
gs
sahf
sahf
sub
sbb
mov
lods
or
negl
xor
stos
push
cmp
lcall
inc
andb
mov
push
adc
das
popa
repnz
pushf
int3
mov
mov
cli
fdivs
jp
out
push
jne
xchg
aas
mov
jns
pop
imul
out
pop
shrl
std
dec
mov
jl
dec
mov
repz
pop
mov
lret
and
into
cld
mov
fbld
dec
xor
sub
loope
scas
sub
sub
mov
repnz
xlat
pop
rorl
cwtl
pop
push
and
stc
outsb
mov
push
fdivrp
dec
shll
xor
out
jp
add
push
jnp
inc
cld
int3
or
add
mov
sahf
out
xchg
mov
cmp
orl
into
repnz
out
inc
xor
pop
gs
lea
push
jmp
into
lahf
inc
and
push
ss
into
push
jecxz
jbe
xor
lds
das
lahf
out
dec
adcb
inc
pop
hlt
scas
or
jbe
fstl
out
jg
jno
xor
cmp
mov
and
adc
popa
ret
mov
sti
cmp
push
dec
xchg
adc
jne
inc
cmp
pop
push
sub
mov
dec
mov
test
aad
inc
jp
mov
std
call
pop
bound
add
lret
cmpsb
dec
orl
hlt
leave
dec
loope
in
cli
pop
hlt
pop
or
insl
xchg
cmp
or
ret
in
arpl
xorl
push
push
cltd
push
or
rolb
outsl
rcrl
mov
lahf
lea
push
iret
inc
lds
mov
test
dec
mov
sub
inc
add
cmp
adcb
add
inc
xchg
movsl
int
dec
call
xor
loop
mov
lods
pop
outsl
xchg
test
idiv
mov
stc
xchg
inc
repz
stos
push
lret
sahf
inc
adc
or
out
sub
sbb
cmpsl
movsb
xchg
and
cmp
stc
mov
lret
mov
adcl
dec
fsts
pop
ljmp
or
ljmp
adc
rcl
dec
add
sub
rcr
mov
jae
fisttpll
jnp
sub
movhps
repnz
shll
xor
ss
sub
pop
fwait
dec
cli
fwait
movsl
pushf
mov
mov
push
pop
je
sub
roll
rorl
mov
fwait
mull
out
movsl
xchg
push
lahf
loop
pusha
pop
and
and
and
sti
add
pop
add
lret
dec
or
mov
pushf
adc
shlb
lret
arpl
mov
je
stos
adc
dec
sub
in
sbb
popf
clc
mov
fdivl
push
lock
mov
dec
dec
push
xchg
fldenv
lods
lock
cli
cli
sub
adc
test
in
mov
lock
and
cmp
mov
cli
out
scas
cmc
sbb
xchg
aaa
fmull
rol
or
stc
stc
push
sub
insb
and
ljmp
incl
mov
lahf
sub
stc
cmp
addr16
icebp
or
iret
pop
int
lahf
test
xor
cli
xchg
mov
bound
inc
and
loop
dec
in
enter
lods
loopne
bnd
jmp
cmpsb
ret
mov
test
xor
jne
push
repz
adc
adc
mov
shlb
inc
mov
ja
insb
ja
sbb
ret
xor
xchg
fstpt
push
mov
add
push
imul
inc
adc
fmul
fildl
sub
cmp
cs
cmp
cwtl
mov
leave
icebp
lods
push
or
ljmp
jg
sbb
lret
inc
inc
cmp
arpl
and
xchg
aad
std
pushf
sbbb
repnz
cmp
push
cmpsb
mov
mov
or
jnp
ss
out
cmp
pop
fsts
out
jl
push
push
imul
test
inc
popf
or
out
push
imul
scas
xlat
xor
push
and
adc
mov
cld
cmp
into
mov
les
in
inc
cltd
fldenv
imul
sub
jle
scas
sbb
filds
movsb
cld
or
cmovae
inc
lock
in
call
lcall
add
call
ja
inc
test
or
and
xchg
outsl
xor
test
mov
fsubl
jl
scas
sbb
adc
fcomip
jge
std
pop
pushf
test
mov
pop
adc
sub
inc
dec
inc
cmp
faddl
dec
nop
pop
push
in
jnp
xchg
popf
push
xchg
push
popa
or
lahf
lds
mov
mov
adc
sbbl
gs
mov
stc
jae
mov
sbb
out
mov
mov
out
pop
jno
inc
mov
xchg
insl
test
imul
sub
push
imul
dec
mov
mov
lcall
adc
mov
cmc
nop
iret
aam
int
adc
jne
test
mov
subl
fdivrl
sub
cmp
stos
insb
nop
aaa
inc
les
mov
push
push
dec
sub
and
push
adc
call
xlat
movl
pop
inc
pop
fmull
or
mov
fdivrs
or
cmp
aas
movsb
dec
mov
push
scas
loop
sub
into
pusha
mov
xor
jg
or
xor
std
jne
add
or
paddd
mov
adc
nop
fs
mov
sub
idivl
movsb
add
mov
mov
data16
pop
inc
es
imul
or
insl
jle
cmp
sbb
xchg
pop
adc
aad
mov
and
and
inc
clc
xor
iret
les
mov
int3
xor
call
scas
aas
in
mov
lahf
xor
mov
repz
sbb
pop
jae
push
fs
cmpsb
dec
int3
or
adc
cmp
les
adc
pop
arpl
push
xchg
and
das
insb
shll
aad
testl
dec
fadds
sbb
xchg
sbb
push
imul
xlat
mov
or
mov
mov
xchg
jl
mov
cmp
jae
shrl
cmp
mov
cmp
jnp
ret
xor
je
je
testb
rol
mov
ja
outsl
cli
popl
dec
aas
or
clc
divb
xchg
pop
or
outsb
stos
es
testb
sti
mov
cmp
rorl
push
shl
sub
and
push
mov
sbb
aaa
cmpsl
sbb
mov
popa
insl
lret
cmp
xchg
fldl2e
sbb
mov
ffree
xchg
cli
mov
push
xchg
sub
andl
or
push
lret
inc
adc
popl
sbb
cmpb
pop
bound
clc
inc
divb
pop
lret
dec
imul
rcrl
sahf
loope
xchg
inc
push
hlt
std
into
out
xor
stos
aas
jne
out
into
outsl
xchg
std
inc
pop
push
mov
adc
inc
mov
jne
ds
movsl
sub
fsubl
xor
push
idiv
fisubrs
popa
mov
ret
push
adc
lods
push
cli
lods
sbb
mov
lahf
insl
hlt
push
in
stos
sbb
popa
jmp
aam
mov
mov
int
lock
lds
pop
pop
adc
loopne
mov
outsl
aad
inc
xor
inc
insb
in
push
mov
dec
push
popf
mov
push
and
or
test
dec
pusha
mov
in
or
sbb
sbbb
ljmp
jno
jb
fcoms
lea
inc
sub
dec
lock
cmpsb
and
mov
add
inc
lcall
les
stos
pop
in
xchg
xor
mov
sub
pop
call
sbb
es
rclb
gs
add
stos
mov
mov
nop
in
xor
jecxz
data16
push
cmc
repz
mov
in
popa
repz
push
mov
les
stc
cmp
sbb
sub
inc
ds
leave
rol
les
push
lds
xor
jmp
and
mov
sbb
xchg
pusha
mov
imul
stos
xor
out
xchg
mov
loopne
test
push
adc
or
mov
cmp
std
outsb
xchg
mov
dec
cmc
push
pushf
icebp
out
fisttpll
and
inc
jo
outsl
vcmpps
frstor
mov
mov
mov
jo
jbe
subl
outsb
and
loopne
pop
mov
adc
insb
jecxz
or
inc
and
clc
aas
pushf
mov
mov
bound
pop
mov
out
lea
jp
stos
and
push
add
jb
xor
clc
jbe
dec
mov
sub
and
test
shlb
mov
adc
lcall
cmpsl
add
scas
notl
push
inc
or
jle
les
mov
nop
outsb
push
or
xor
adc
xchg
out
jmp
dec
mov
push
push
mov
mov
mov
mov
mov
fisttpll
mov
sbb
pop
jno
lock
inc
pop
push
add
pop
cmp
sub
sub
mov
shl
jl
jo
movsl
int
jae
jmp
add
cmp
mov
fs
mov
popa
lock
mov
in
push
add
mov
int3
push
dec
pop
push
xchg
adc
pop
fsubrs
ret
xchg
xor
rorb
mov
cmpsb
sbb
and
lahf
jle
popa
aam
jb
ftst
scas
int
sbb
cmc
enter
lds
scas
lock
aad
sbb
rcrb
mov
pop
fistpl
lcall
rcll
sarl
mul
push
xor
xchg
loope
dec
rolb
mov
and
js
scas
cmc
fwait
jl
mov
ja
jmp
imul
inc
pop
fmull
notl
lds
cwtl
popa
inc
sbb
sub
das
and
imul
mov
fildll
xchg
push
xor
add
and
xor
sti
pop
mov
push
lea
bound
or
jne
filds
lock
xor
pop
xchg
test
dec
test
fs
xor
push
sbb
jbe
iret
imul
and
scas
mov
pushf
mov
fstpl
sub
xchg
xchg
ljmp
mov
mull
push
inc
pop
lods
adc
and
pusha
addl
adc
push
mov
fnstcw
xor
cmp
les
sub
push
fdivl
js
daa
jecxz
xchg
cltd
fucomip
js
push
or
jnp
jae
or
rcrb
std
cltd
imul
rolb
mov
hlt
outsb
dec
lods
imul
aas
bound
adc
pmaxsw
icebp
cltd
pushf
xchg
out
fsubrl
mov
pusha
adcb
int
pop
mov
imul
jnp
mov
adc
cli
jle
cmp
add
sbb
sbb
pop
mov
std
push
jns
enter
stc
inc
fldenv
inc
mov
jl
roll
adc
nop
mov
jnp
mov
sbb
fsubs
cmpsl
dec
xchg
mov
add
call
jbe
out
mov
xor
add
mov
xchg
loope
mov
daa
mov
xchg
test
inc
xor
mov
xchg
add
xchg
cmpsl
add
loope
scas
jns
or
add
jns
iret
shrl
lea
pop
dec
cmpsl
xchg
xor
jo
mov
fwait
test
mov
out
sti
shll
nop
loope
mov
adc
cmpsl
jnp
jne
and
cld
jne
push
out
cmp
and
jno
add
push
bswap
jl
outsl
push
jnp
outsl
xchg
ret
mov
outsb
pop
push
lret
adc
mov
andl
dec
insb
xchg
pop
xchg
and
add
outsb
or
es
leave
sarl
sub
adc
rcl
out
fidivl
push
sub
call
sub
xor
int3
dec
mov
jmp
inc
int3
fistl
push
inc
stos
aad
push
rol
inc
sub
adc
sbb
pop
push
frstor
hlt
and
jl
popf
mov
inc
fpatan
scas
xchg
sbb
rolb
adc
enter
push
xchg
push
scas
lods
xchg
aad
and
roll
xor
and
aam
jge
inc
fisubs
inc
mov
inc
iret
cmp
or
pushl
jg
adc
idiv
fsubrs
bound
adc
jp
jne
mov
xor
push
dec
ret
dec
lcall
jo
jne
xchg
nop
sahf
rorb
jnp
or
xchg
outsl
rolb
inc
sub
push
push
clc
mov
bound
mov
outsb
and
scas
push
xor
dec
rclb
pop
cld
std
cmpsb
rol
jge
or
popf
jbe
icebp
cltd
pop
daa
js
pop
test
dec
dec
pushl
arpl
jmp
and
iret
push
negl
mov
clc
int3
mov
xor
movsl
int
inc
test
jecxz
cmp
lock
jne
add
sahf
rcrb
or
insl
xchg
push
dec
repz
cld
jbe
jno
insl
push
mov
sub
pop
and
cmpsl
lret
arpl
cld
std
jp
pop
mov
jmp
jnp
mov
cmpb
xchg
out
mov
enter
pop
pop
add
cltd
into
adc
mov
cmp
sub
cmpl
and
test
lock
daa
sbb
movsl
pop
jmp
pop
js
pop
fistps
jnp
sbb
jne
nop
movaps
lea
mov
dec
in
inc
in
pop
push
pop
fcmovu
dec
in
notl
js
jge
xor
mov
push
in
xchg
fldcw
mov
scas
das
mov
xchg
clc
mov
shll
pop
xchg
leave
es
rolb
and
mov
cmp
mov
adc
jns
into
dec
bound
xchg
icebp
insb
xor
mov
fisubl
jns
mov
shl
push
jmp
mov
pop
out
pop
pop
adc
js
out
mov
cmp
jle
ds
jmp
fstl
daa
in
test
adc
add
mov
sub
pop
mov
mov
pop
jg
push
ret
lods
mov
stos
or
mov
aaa
ds
jo
and
and
sbb
xor
dec
es
stos
jle
push
loopne
cmp
adc
push
add
fdivp
aas
xor
call
std
mov
mov
cmp
pusha
jno
ret
push
add
imul
lret
pop
movsl
xor
push
faddl
pop
xor
sub
adc
pop
lods
inc
add
push
xchg
jmp
jmp
cmp
je
mov
rorl
fidivrs
jo
adc
loope
jl
andb
pushf
insb
pop
xchg
jl
jecxz
aad
mov
inc
mov
pop
std
and
fwait
jle
mov
icebp
add
push
lahf
xchg
inc
cmpsl
or
inc
jo
add
popf
popa
dec
xchg
and
mov
mov
decl
mov
cmp
stos
jno
stc
cmp
or
pushf
clc
mov
lcall
fldt
mov
out
mov
popf
sbb
scas
push
lds
and
movsl
xlat
sbb
repnz
shl
dec
fwait
loop
and
dec
push
xor
mov
outsl
stc
dec
and
andb
imulb
sub
gs
out
rcrb
in
mov
adc
inc
test
lods
cmp
lds
pop
sub
movsl
dec
rcr
andb
shl
xor
cmc
mov
cmp
dec
aam
inc
sbb
jae
xchg
inc
sub
dec
or
xchg
mov
adc
sub
je
sub
mov
xchg
pop
xchg
pop
popa
inc
xor
cmp
cli
mov
imul
insl
cmpsb
mov
cmpsl
xchg
popf
pand
iret
dec
ret
add
jnp
repnz
in
movsl
cmpsb
fsubs
sbb
or
inc
shrl
jp
pop
pop
mov
sub
inc
loope
scas
movsb
sub
cwtl
pop
lods
lods
mov
mov
add
stos
lock
and
push
dec
mov
mov
or
test
pop
add
cmp
jl
aaa
sub
dec
mov
shlb
pop
gs
es
jbe
stos
mov
popf
inc
jnp
lds
pop
negb
inc
jmp
or
xor
inc
sbb
dec
loopne
icebp
or
cwtl
sbb
shl
movsl
jecxz
mov
xor
ret
cmpsb
test
xor
xchg
sub
inc
pop
inc
or
loopne
add
dec
sub
rol
fdivr
cmp
dec
fstpt
jg
pop
outsb
lahf
sahf
pop
rclb
ds
fwait
inc
aaa
pop
mov
push
ds
jo
jae
repz
lds
xchg
out
dec
mov
inc
ja
inc
mov
daa
scas
cli
inc
iret
push
int3
add
jmp
int
lret
ds
and
out
inc
push
and
xchg
inc
ljmp
jbe
push
xchg
decl
inc
fistpll
subb
xor
inc
gs
and
movsb
iret
adc
or
and
pop
enter
sbb
sbb
fstps
shr
jns
idivl
mov
cmp
jp
dec
imul
mov
cmp
push
call
add
fldt
add
and
pop
cs
pop
fdivl
nop
je
pop
cmp
jp
add
fnstsw
or
aad
and
mov
jecxz
cmp
adc
mov
adc
lods
push
lahf
xchg
movsl
dec
or
jmp
and
lahf
mov
inc
inc
xchg
cli
call
cmp
fnstcw
dec
add
cmc
sub
imul
fadds
add
dec
push
jnp
sbb
xor
lret
test
dec
cmc
jge
jae
inc
adc
dec
push
push
testl
dec
jne
sub
mov
mov
cmp
pop
pop
cmpsb
mov
or
in
push
jmp
and
cltd
and
mov
out
or
lret
fstpl
pop
fsts
ret
icebp
negl
or
cs
es
dec
es
adc
lods
add
repz
or
push
push
loopne
aam
lcall
lret
push
ficomps
adc
xor
adc
icebp
pop
mov
xchg
insb
hlt
lea
mov
or
insb
dec
in
fmull
sbb
cmovo
mov
pop
fstpt
jb
jl
xor
std
inc
pop
push
aad
loope
icebp
pop
insl
insb
sti
addr16
mov
dec
xchg
daa
push
pop
stos
add
sbb
sub
jp
inc
test
and
mov
ret
fstp
stc
stos
mov
adcb
adc
xor
xchg
stos
mov
dec
imul
mov
adc
mov
rol
lahf
std
idivl
push
jecxz
xchg
mov
cwtl
pop
cmpsl
or
cltd
fldz
mov
int
es
pop
cwtl
lods
xchg
test
sub
mov
daa
xor
aam
sub
or
push
sub
pop
dec
shrl
jg
dec
dec
mov
loope
sbb
xor
daa
pop
or
mov
pop
sbb
or
mov
gs
mov
and
aam
mov
push
popf
ljmp
inc
aad
sub
leave
xor
orb
cmp
shrl
leave
or
sti
dec
mov
inc
shlb
and
pop
pop
inc
or
xchg
test
enter
cmp
dec
cmpsb
pop
mov
ljmp
or
scas
pop
fdiv
in
sahf
or
or
push
lret
jbe
mov
ror
mov
call
in
xchg
inc
push
xchg
sub
pop
out
jo
sahf
repnz
dec
enter
sti
imull
sub
das
inc
cwtl
mov
in
pop
pop
scas
push
hlt
pop
or
test
pop
je
add
leave
ja
fiadds
push
mov
rcr
sbb
adc
pushf
sbb
inc
hlt
push
dec
enter
mov
mov
loop
xchg
and
inc
mov
and
call
cmp
mov
jp
scas
clc
mov
into
push
pop
lods
orb
push
pop
xchg
add
adcl
lock
mov
mov
test
imul
mov
mov
ss
lods
loopne
idivl
sub
push
sbb
push
jns
adc
push
pop
add
dec
sub
mov
adc
mov
mov
and
cmp
pop
fcoml
mov
mov
loop
mov
fcmovne
mov
jg
icebp
js
mov
scas
ss
or
jl
mov
jge
fldt
mov
cmp
loop
aam
jl
inc
mov
sbb
mov
dec
call
nop
inc
sbb
lcall
push
lods
adcb
call
cld
call
loope
pop
pop
aam
fnsetpm(287
dec
add
nop
in
dec
adc
push
xchg
scas
sbb
mov
cltd
cmp
mov
int
lods
in
test
push
pop
mov
mov
xchg
jmp
adc
lahf
bound
enter
mov
push
ja
cmc
or
insb
dec
or
or
and
lock
sarb
sti
pushf
ss
adc
dec
out
lods
or
arpl
test
sub
inc
cmpb
add
ret
push
sar
pop
jno
inc
sub
mov
loop
inc
test
dec
fmulp
mov
lea
lcall
les
cwtl
pop
dec
adc
xchg
cmpsl
aas
andb
adc
sbb
sbb
and
lods
scas
ljmp
stc
ss
adc
xchg
lods
push
fidivrl
aad
dec
inc
add
insl
test
lods
test
ss
add
pop
sbb
push
fsubrl
jo
pop
int
out
xchg
push
sbb
insb
pop
std
sbb
aam
mov
lods
fimull
stos
dec
les
add
bound
iret
in
fucomi
pop
cmpsl
les
xor
add
aam
pop
mov
into
adc
fldt
ds
test
lods
inc
jp
std
mov
pop
add
sbb
push
aam
mov
add
push
sbb
in
mov
cmp
xadd
lea
sub
mov
pop
cmp
add
sti
stc
mov
lods
push
int3
insl
mov
cmp
rorl
scas
cmp
sti
jbe
ret
dec
subb
fidivl
sub
subl
push
cmp
cmp
dec
jge,pn
movsb
inc
dec
popf
bound
cmc
pushf
cmp
imul
sub
inc
inc
jp
sbb
push
aas
imulb
pop
jge
aaa
sti
pop
or
mov
and
push
dec
dec
imul
mov
jae
adc
add
add
add
imul
push
dec
dec
fdivs
jmp
mov
inc
push
lret
and
popw
icebp
mov
arpl
std
aad
push
pop
test
xchg
shll
inc
jl
or
in
sbb
jo
jmp
aaa
cltd
and
dec
adcb
mov
daa
hlt
subl
mov
pop
lds
inc
jmp
lret
push
lar
cmp
inc
pop
push
xchg
hlt
pop
test
jl
push
pop
adc
xchg
pop
mov
push
daa
dec
sbb
inc
arpl
push
fildl
test
xchg
insl
mov
icebp
mov
jl
or
gs
in
sbb
aam
rcrb
push
loope
sti
pop
out
mov
xchg
int3
xchg
out
jb
enter
lret
mov
mov
repz
adc
dec
bound
scas
push
jne
xchg
loope
lahf
clc
imul
jns
and
imul
into
and
push
push
cmp
loop
mov
mov
in
lret
jg
outsb
call
adc
fdivrl
dec
int
and
loopne
push
push
jle
lret
push
mov
out
pop
ret
cmp
cltd
addr16
push
repnz
shrw
jno
or
inc
mov
adc
xchg
jo
je
xorb
rcl
popa
jbe
push
sti
dec
cwtl
movsl
sbb
sub
push
or
out
xchg
sub
hlt
out
stos
xchg
mov
mov
daa
jnp
jle
add
cmp
loope
adc
xor
jl
mov
std
mov
or
scas
inc
daa
and
icebp
sub
stos
and
push
inc
scas
test
test
sbb
jl
and
imul
or
mov
inc
and
pop
dec
cld
dec
pop
cltd
rorb
cmc
sbb
mov
dec
push
insl
test
daa
mov
dec
or
mov
add
jl
and
xor
ret
repz
jle
in
jo
adc
lock
test
and
push
stos
ror
fsubrp
lret
mov
mov
ss
scas
fsub
add
adc
push
pop
jle
pop
nop
int
lret
aas
cltd
jno
test
inc
push
mov
inc
js
sub
pushf
mov
stc
push
dec
dec
into
mov
shll
nop
push
fbstp
add
in
jg
mov
pushf
add
push
andb
add
nop
stos
std
std
iret
cmp
inc
sbb
or
movsl
cmpsl
push
sbb
mov
dec
dec
adc
mov
xchg
test
fnsave
in
pop
add
outsl
cmc
shrl
arpl
adc
movsb
outsb
push
push
fbld
mov
inc
mov
cmp
mov
sbb
aad
repz
ret
push
repnz
push
xchg
arpl
popf
mov
sub
jmp
inc
orl
add
sub
cmpl
adc
loopne
movsb
add
or
shrb
scas
xchg
rcrl
das
rcr
dec
dec
pop
mov
mov
xor
and
sub
or
test
mov
pop
pop
ret
jp
cltd
mov
cmp
ret
add
pushf
mov
sti
js
outsl
xor
pushf
cmp
in
cwtl
xchg
fiaddl
or
insl
pusha
fstps
push
jmp
inc
test
or
jo
xchg
jne
xchg
adc
pop
sti
inc
xlat
pop
mov
inc
jb
or
or
mov
mov
dec
sub
lea
and
mov
xchg
jg
inc
bound
popf
push
xor
or
xchg
mov
push
mov
and
into
arpl
loop
lea
adc
jle
xchg
bound
lret
sbb
loope
pushf
dec
sub
lcall
nop
mov
add
aad
in
fdivrl
xchg
adc
stc
fdivl
sub
fdivs
loopne
sub
loope
pushf
and
cmpsl
lods
push
les
push
fcompl
pop
js
pop
lret
movsl
sbb
leave
pop
jmp
pushf
xor
loopne
fidivs
and
fs
sub
fisttpl
lret
cmp
arpl
fs
adc
in
imul
adc
jno
sub
iret
ffreep
pop
scas
mov
or
fsubp
xor
inc
aam
inc
pop
leave
sub
pusha
popf
add
jo
jecxz
aad
mov
lods
xchg
jg
movb
push
loop
aad
ja
mov
or
cld
sub
xchg
xor
pop
xchg
sub
jmp
shrb
jle
addl
jno
mov
dec
repnz
stos
pushl
adc
jg
pop
cmpsb
xchg
imul
inc
adc
lahf
mov
push
mov
rcrb
mov
mov
adc
cmc
sub
lret
mov
xorl
xor
lret
push
mov
mov
loop
add
ljmp
inc
cmp
shl
dec
push
popa
sbb
xchg
fiaddl
push
decl
or
lock
xor
test
xchg
xchg
faddl
cmp
or
clc
inc
scas
mov
mov
lds
mov
fildll
loopne
mov
aam
mov
es
cli
gs
dec
testl
loope
mov
and
mov
movsl
popf
or
dec
mov
lcall
in
jecxz
mov
in
ljmp
dec
sbb
ret
sub
pop
test
dec
jecxz
pop
popf
leave
push
push
stos
sbb
jge
pop
sbb
jmp
xchg
mov
lds
dec
jno
stos
sbb
mov
filds
mov
fisubrl
cmc
add
mov
adc
inc
into
ret
enter
pop
loope
stc
daa
mov
stos
movsb
lahf
cwtl
sbb
andl
adc
lcall
sub
mov
jnp
pushf
sbb
pop
or
outsb
mov
pop
xchg
cmc
rcrb
jmp
pop
cli
add
mov
cmp
add
or
outsb
repz
and
mov
xlat
or
sbb
in
sti
inc
inc
lock
int3
test
pop
pushf
iret
gs
adc
mov
testb
jo
rcr
stc
addb
dec
pop
stos
test
mov
addr16
sahf
leave
scas
testb
addb
fldt
sbb
stos
xrstor
mov
jecxz
cmpl
stc
inc
lret
popa
pop
sub
sti
pusha
scas
subl
mov
shr
jg
in
sbb
cmpsl
push
jbe
loop
and
mov
inc
loopne
mov
mov
push
fwait
dec
adc
mov
cwtl
mov
xchg
enter
leave
mov
enter
popa
jnp
mov
lcall
and
push
fstps
shrb
int
xchg
jle
push
sahf
pop
in
push
ret
sbbl
cmp
scas
in
mov
mov
inc
fwait
out
sbb
loop
add
push
xor
xor
push
pop
cmpsb
cltd
shrl
xlat
pop
mov
call
aad
jp
pop
jmp
cli
push
push
daa
adcb
jmp
pop
add
push
leave
xor
add
lcall
fwait
cwtl
lret
add
dec
bound
scas
dec
nop
xor
repz
cmp
lret
xchg
imul
negl
push
dec
insl
xchg
sub
cmpsb
aad
pop
xchg
sbb
dec
addl
mov
sar
fldt
pop
lea
jbe
filds
das
fwait
push
fnstcw
es
ret
push
xchg
xchg
jecxz
push
xor
pop
imul
cmp
or
std
jp
mov
xchg
sbb
lea
aad
call
loop
jno
call
inc
or
xor
jb
xchg
sub
int
mov
scas
stos
adc
in
push
shlb
mov
inc
repz
mov
and
jno
je
hlt
push
sar
dec
enter
scas
inc
stc
add
js
inc
mov
call
lahf
mov
xor
push
or
pop
jecxz
sub
sbb
cmpsl
cld
das
popf
mov
add
or
negl
mov
push
jb
dec
add
inc
fs
outsl
js
jno
popa
ja
inc
jle
or
fwait
or
out
dec
movsb
xchg
test
dec
loopne
push
mov
push
and
inc
jno
push
cmpb
addr16
data16
jae
pop
aas
xbegin
pop
push
stos
push
xor
sub
ficoms
aam
imul
int3
jl
sub
jg
pop
jg
stos
pushf
lds
int
jmp
pusha
or
sbb
xlat
fdivrs
sub
fnstenv
mov
aas
jge
lock
or
or
ja
cmp
cmp
icebp
cmp
cmp
in
loope
popa
or
push
adc
jl
shrb
cmpsl
push
mov
sbb
out
or
clc
in
cmp
outsl
mov
add
gs
mov
scas
dec
dec
jb
push
mov
test
dec
jbe
sti
cli
je
fstl
and
mov
mov
xchg
sub
pop
movsl
dec
insl
mov
dec
or
sub
jg
daa
ja
adc
jno
insb
inc
out
adc
and
mov
mov
pop
cmp
lret
imul
bound
pop
sbb
movsl
or
lods
jns
ret
push
test
insb
mov
jle
and
pop
xchg
insl
cmpsl
jb
push
push
test
and
aad
mov
addr16
jle
push
aam
push
lahf
add
push
movsl
loop
lea
outsl
pop
lret
and
mov
cmpsb
adc
ja
inc
adc
jp
mov
stos
jbe
push
out
cmp
push
inc
fstpl
sti
pop
mov
jo
or
add
mov
xor
stos
test
push
push
pop
jecxz
fcoml
sti
push
divb
jno
push
inc
xchg
mov
ss
cmp
cwtl
adc
je
jbe
je
jnp
adc
cwtl
cltd
xchg
adc
xor
xchg
out
push
xchg
fwait
mov
cmpsb
mov
xor
dec
loope
std
data16
aas
mov
data16
dec
aas
ss
inc
rcrb
out
or
push
adc
test
mov
lock
add
addr16
out
sbb
ret
mov
data16
aad
mov
in
push
pop
and
stos
jbe
outsl
inc
stos
enter
and
outsb
fstps
sbb
lret
adc
push
sahf
add
test
inc
movsb
push
or
pushl
daa
cmc
push
lods
jecxz
cmpsb
mov
sub
pop
mov
es
dec
std
test
sbb
push
sti
add
push
imul
aam
jmp
mov
sti
dec
pop
jns
mov
sbb
inc
inc
jne
hlt
add
cs
fimuls
adc
fcos
mov
jns
outsb
cmpb
sarl
in
sub
jge
pushf
insb
fnsave
xchg
test
jle
ret
mov
lea
dec
jns
or
add
ljmp
int3
xchg
outsb
and
push
push
lahf
sub
adc
add
gs
xlat
sarl
test
xor
hlt
lock
dec
das
pop
sbb
lret
jo
lret
dec
mov
or
mov
sbb
mov
sub
mov
out
xchg
mov
push
test
sbb
lock
mov
inc
nop
icebp
mov
loop
sub
aam
jo
dec
fnsave
addr16
cmp
cltd
pop
aam
sub
test
jmp
adc
leave
ret
icebp
insl
inc
test
push
cmp
sbb
adc
vandnpd
popf
aad
jg
popa
das
jnp
push
xchg
mov
push
sub
sbb
scas
mov
imul
lret
mulb
test
add
test
xchg
and
cmc
out
jno
sbb
loopne
outsb
lahf
testb
dec
fldenv
fimull
xlat
pop
in
cmc
jne
jmp
fisubl
in
fisubrs
inc
aas
scas
enter
xor
pop
cmpsb
mov
test
mov
in
and
pusha
loop
adc
icebp
hlt
lods
cmp
push
iret
add
and
dec
fldenv
xlat
mov
sub
push
das
xchg
sbb
adc
out
repz
sbb
push
loopne
stos
pusha
outsl
ss
test
lcall
jecxz
xchg
popa
scas
pop
cmpsb
stc
mov
popa
pop
lret
fcmovu
cmpsb
push
pop
mov
out
cld
dec
and
outsl
sub
les
fidivrl
sbb
test
lret
inc
add
gs
sbb
adc
and
dec
fsubr
sbb
scas
insl
mov
dec
ret
in
mov
jne
shlb
rcl
pushf
mov
cmp
mov
and
add
push
scas
fstps
out
cmpsl
std
mov
mov
push
xor
jecxz
gs
push
jbe
pushf
dec
mov
loopne
in
inc
mov
dec
negl
lahf
dec
shrb
push
daa
xchg
add
add
jmp
jno
jp
and
in
mov
and
mov
adc
lret
scas
enter
pop
lret
repnz
fwait
leave
imul
adc
adc
into
out
lods
andb
test
sbb
stc
push
xor
sbb
fbstp
shlb
dec
adc
mov
xor
ficomps
insl
cmp
divb
sbb
ljmp
mov
mov
and
aad
into
gs
ret
mov
mov
or
sub
notl
insb
cltd
cld
add
pop
xor
pop
mov
inc
jae
pop
mov
insl
or
das
fbld
mov
rorl
mov
shlb
xchg
mov
sub
push
repz
and
xor
push
test
aam
pop
call
cli
jecxz
push
cpuid
imul
enter
orl
insl
adcb
pop
out
mov
or
push
push
mov
jle
cs
lahf
jle
cmpsb
dec
sbb
stos
xchg
gs
js
pusha
jmp
adcb
mov
mov
jge
push
shrl
out
xchg
push
aaa
aaa
or
mov
add
adc
xor
xchg
jp
pop
or
test
xor
mov
mov
mov
and
sbb
enter
mov
aad
adc
insl
sbb
mov
mov
add
inc
cmpsl
xchg
mov
test
mov
cli
ret
sub
xor
xor
mov
cmp
call
and
dec
adcl
lods
stos
sub
cmpl
xchg
rcrl
dec
xchg
outsb
fwait
mov
dec
repz
mov
testl
xchg
and
xchg
mov
lcall
or
push
stos
or
inc
mov
push
scas
mov
xchg
jnp
jle
add
jg
int3
or
push
sbb
lcall
mov
leave
mov
pop
fldln2
in
mov
mov
ret
jle
mov
pop
hlt
jle
mov
int3
pop
retw
pusha
mov
es
sahf
rorb
cmpsb
add
cmp
stc
and
or
mov
or
cltd
in
mov
xchg
jae
mul
jae
nop
js
cmpsb
lcall
insl
and
inc
fdivrl
jl
xchg
stos
pop
adc
push
adcl
cmp
adc
daa
out
ret
ret
or
leave
repnz
mov
sbb
int3
inc
mov
lretw
xlat
and
xchg
mov
add
or
aam
es
push
imull
insb
mov
cltd
insb
je
or
adc
jmp
add
xor
cmp
in
lret
xchg
or
into
jnp
shrb
xchg
test
push
jp
sub
xchg
and
test
loopne
adc
movsl
into
test
lahf
test
int
jmp
push
pop
shl
xor
add
adc
pop
cmc
fnstcw
sub
je
popf
hlt
mov
cmp
subl
add
mov
add
or
mov
dec
xchg
cli
adc
mov
out
push
testl
in
test
ja
in
mov
in
out
out
inc
push
add
aad
jnp
cmp
mov
push
mov
mov
sub
fstps
push
lcall
dec
js
or
stos
popa
or
dec
jp
jnp
cmp
jno
pop
addr16
push
adc
push
cmp
mov
nop
push
in
call
lahf
push
insl
pop
and
push
adc
ja
mov
mov
and
cmp
pop
aad
jno
rclb
xor
mov
pop
mov
mov
sub
jle
sbb
mov
push
push
fsubr
add
or
inc
push
mov
pusha
xchg
dec
lods
insb
movsb
push
pop
xchg
mov
xor
push
fs
cmpsl
xchg
dec
sar
add
aas
add
aaa
sbb
mov
mov
pop
jo
or
mov
jno
test
adc
scas
dec
mov
iret
push
daa
xor
pushf
push
popf
das
cld
pop
xchg
dec
shll
out
rcl
xor
sub
sarl
jmp
sub
mov
daa
jo
xor
ret
out
enter
out
mov
rorl
mov
dec
cwtl
bound
sbb
sub
or
mov
mov
outsb
mov
push
pop
and
test
pop
xor
test
andl
cmc
ljmp
out
pop
push
push
mov
clc
sub
rolb
xor
fs
adc
push
out
or
jnp
jb
int
dec
mov
sub
push
adc
stos
rcrl
ret
incb
mov
div
ret
out
mov
lret
inc
rol
outsl
inc
adc
ljmp
pop
fdivl
xchg
addr16
mov
jno
sbb
mov
or
dec
shl
cmpb
sub
stos
pop
xor
fstps
push
inc
lret
aad
push
int3
push
and
shl
push
incl
test
dec
ja
sbb
and
arpl
cmp
push
ljmp
dec
push
inc
repnz
aas
out
shld
push
push
pop
mov
lock
fcos
pop
movb
adc
pop
daa
stc
push
jge
scas
daa
push
js
or
xchg
pop
loope
xchg
loope
pop
pop
jb
test
ficomps
pop
test
cwtl
sub
mov
sbb
cmp
xchg
cmpsb
popa
mov
push
xor
fistpl
pop
hlt
sub
gs
pop
xor
xor
and
mov
adc
jmp
in
jge
jae
inc
mov
hlt
pop
pusha
es
dec
inc
dec
cli
mov
mov
xchg
subb
scas
pop
pop
xor
mov
dec
out
rolb
aas
ja
sbb
stc
adc
ss
out
fidivs
and
popa
or
iret
loopne
mov
call
test
sbb
cmp
repz
mov
mov
jae
or
cwtl
jg
sbb
mov
test
inc
cmp
xor
aam
xchg
xrelease
shlb
xor
lea
jns
and
cmp
jecxz
sti
cwtl
out
xchg
mov
cmp
or
mov
jle
adc
gs
add
ss
push
outsb
mov
jle
or
sbb
xlat
scas
jb
mov
fwait
xor
mov
popa
pop
mov
pusha
test
sub
dec
adc
and
inc
xchg
adc
lea
daa
mov
and
ja
inc
in
pop
jo
dec
or
imul
add
cmpb
lret
or
sbb
xchg
fidivl
in
pop
xchg
push
xor
js
daa
les
xor
add
fdiv
mov
mov
lret
shlb
xchg
addr16
inc
push
inc
aad
sbb
outsb
cmp
pop
rcll
lods
hlt
icebp
pop
mov
addb
stos
dec
push
popf
test
push
push
add
and
cwtl
mov
insl
lret
rcl
insl
push
pop
fcom
cmp
mov
and
into
pop
fwait
xorl
fnstcw
mov
test
jecxz
and
pop
bound
lods
ss
mov
popa
jno
or
nopl
stc
sbb
sbb
mov
int3
adc
xor
test
push
cmpsl
call
addb
dec
bound
jg
lods
xor
mov
mov
jecxz
mov
imul
mov
cltd
cmpsb
add
pop
xchg
push
cmp
clc
cmp
test
mov
dec
mov
dec
dec
outsb
xchg
push
fstpt
add
or
js
xchg
jno
jp
insl
loopne
bound
fsubp
mov
push
stos
adc
push
sarb
mov
or
lret
push
sbb
push
loopne
xor
repz
ret
mov
xor
stc
jbe
pop
inc
pop
outsl
int3
scas
mov
xor
lret
int3
sbb
or
repz
lret
leave
arpl
sbb
jne
stos
jge
inc
mov
sbbl
inc
jb
xor
pop
cmp
scas
nop
dec
or
in
xchg
loopne
insb
xchg
xor
mov
outsb
jne
ja
roll
or
icebp
lock
jge
shll
mov
mov
mov
sbb
addl
cmp
sub
and
repz
xor
jge
adc
jp
int3
xchg
sub
shll
sub
xor
int3
push
je
pop
hlt
shr
sti
jle
pop
filds
xchg
in
cli
adc
loopne
lret
sbb
xor
xor
rcrb
repnz
and
aas
lcall
pop
and
lock
jg
ret
jp
data16
in
cmp
stos
aad
rcrb
mov
outsl
add
jno
push
jbe
pop
out
add
xchg
fisubrl
int3
clc
mov
push
in
lods
and
in
cmp
test
and
enter
fs
or
test
xchg
lds
rcl
and
clc
sbb
scas
popaw
cld
mov
xchg
cli
pop
mov
sub
mov
inc
mov
xor
dec
pusha
cmpl
lret
mov
mov
insb
sub
call
mov
test
jb
push
shl
mov
daa
or
and
sub
sbb
jo
push
and
lcall
cld
cs
xor
jns
icebp
cmpl
push
adc
aas
inc
dec
jne
stos
pusha
jno
add
je
fimull
je
cmc
ja
fistpl
frstpm(287
mov
loope
and
fisttps
mov
add
ss
mov
mov
fisubrl
sub
gs
nop
sub
mov
jle
add
ficompl
cmp
cmp
lcall
push
cmp
mov
int
in
adc
fstl
std
xchg
dec
clc
scas
sub
dec
scas
sub
mov
xchg
and
leave
add
loop
out
mov
adc
dec
push
or
std
lds
dec
mov
rolb
ret
ds
mov
sub
popf
inc
popf
cmpsb
adc
mov
pop
add
hlt
mov
sti
inc
gs
sub
lods
lahf
push
js
mov
jmp
sbb
jl
stos
iret
repnz
inc
cltd
mov
mov
cmc
fdiv
inc
sub
mov
add
mov
stc
xchg
cmp
inc
jecxz
mov
xchg
clc
ret
fnstcw
jmp
push
push
lds
and
jp
sbb
sub
lock
pop
mov
cmp
test
jl
shrl
addr16
jbe
mov
ljmp
pusha
cmc
or
jnp
fbld
fwait
mov
call
jle
dec
mov
sub
mov
cmp
push
jl
mov
jge
mov
aam
cmp
jmp
jb
adc
je
scas
add
loop
sub
testl
shld
mov
pop
stc
xchg
sbb
mov
setb
fists
xlat
shll
fxch
in
add
sbb
xor
es
mov
cmp
pop
jmp
inc
lds
int3
pop
ja
add
fmul
pop
push
pop
mov
mov
rorb
push
push
negl
in
call
daa
mov
dec
pop
mov
pop
mov
pop
and
stos
adc
sti
mov
adcl
mov
aad
lret
xchg
adc
lcall
fsubs
fwait
and
add
nop
jl
mov
push
adc
lret
addl
xor
inc
and
push
lea
xchg
fnstsw
inc
mov
scas
stos
cli
mov
fistpll
adc
pop
test
mov
pop
jg
lret
cmpsl
hlt
push
mov
testb
mov
adc
stos
test
arpl
mov
repz
frstor
mov
pushf
ja
add
mov
adc
jo
dec
aam
sub
add
lds
data16
pop
mov
push
xchg
cmpsl
sub
xor
cmpsb
add
jl
pop
insb
cmc
stos
faddp
pushl
aaa
push
int
dec
sub
pop
push
lahf
dec
imul
jg
lods
cld
pushf
fdivl
imul
or
add
adc
enter
or
jb
xor
loop
mov
push
xlat
mov
js
mov
cli
ds
and
jge
gs
sub
and
adc
fbld
xchg
xor
jo
out
mov
and
aad
bound
jp
and
cs
add
add
cmc
xchg
sub
faddl
adc
push
push
loope
lea
mov
in
ds
sub
push
aam
inc
mov
out
jmp
inc
shrb
push
push
mov
nop
xchg
fdiv
push
cli
sub
dec
xchg
inc
pop
mov
into
popa
ljmp
pop
mov
cld
cmp
int
mov
icebp
xor
out
mov
hlt
xlat
rcll
and
fistps
movsb
cmp
cli
scas
jge
or
sub
out
mov
loopne
rol
push
mov
pusha
pop
pop
inc
fbld
stc
icebp
mov
sbb
jno
dec
add
rorl
es
adc
or
inc
sahf
adc
pop
loopne
aad
adcl
push
fwait
mov
lahf
movsl
add
inc
jne
sbb
sub
cli
ds
add
repz
adc
add
scas
stc
cmp
cmp
decl
fisubrl
int
orl
push
cmp
in
pop
stos
js
cmp
nop
std
dec
dec
push
fxch
inc
in
enter
sub
sub
mov
jo
jle
repz
mov
shll
push
movsl
arpl
aaa
lock
pushf
push
test
push
jp
sub
loope
fldl
enter
sbb
mov
or
push
and
mov
adc
and
mov
or
pop
mov
or
in
xchg
mov
xor
loopne,pt
inc
xchg
inc
icebp
dec
push
push
dec
shlb
mov
mov
push
sub
pop
sub
cmp
push
mov
xor
mov
xor
lds
scas
outsb
mov
cmp
xchg
mov
lea
cltd
inc
push
cmpsl
rcrl
mov
test
in
shll
pop
cmpsl
movsb
in
stos
xchg
xor
mov
mov
sbb
movsl
mov
fnstenv
cli
xor
sarl
jecxz
adcl
jo
lret
addr16
xor
dec
or
push
sub
jg
daa
mov
pop
sub
cmpsb
cmp
lret
ja
fucomp
daa
movsb
xchg
mov
in
push
out
and
jl
lret
and
xor
sbb
jne
movsl
adc
pusha
mov
cmp
movsl
cmp
pop
outsb
mov
push
inc
aam
aam
jbe
mov
aad
in
fnstsw
in
out
cmp
sbb
adc
leave
or
shl
lret
xor
adc
das
pop
push
add
subl
add
pop
popa
icebp
divb
addl
xchg
clc
jbe
sbb
cmp
fs
push
or
cld
fidivrs
stos
divb
jo
xchg
push
cmc
sbb
or
fistpll
jae
hlt
and
jns
jle
pop
sub
sbb
push
or
cmp
pop
or
ret
lea
cmpsl
jne
push
dec
add
in
lret
outsl
divl
sbb
stc
add
in
lahf
sbb
or
inc
pop
pop
or
mov
adc
lret
xor
ret
mov
xchg
sbb
push
adc
pusha
or
mov
popf
push
fnsave
cmp
adc
fidivs
hlt
sub
cld
in
fnstcw
fcmovnu
in
popa
lcall
add
mov
dec
mov
mov
xchg
js
adc
push
cmova
movsb
cmp
jno
xor
lcall
inc
orb
into
xchg
push
and
std
fisubs
xor
xorl
std
shll
mov
cli
rcll
mov
mov
xchg
dec
jb
jo
xchg
fildl
std
rol
and
push
repnz
mov
and
mov
mov
jle
cs
movsb
sbb
nop
mov
cs
xor
fs
mov
daa
mov
and
xchg
addb
mov
data16
sub
jge
test
jns
mov
out
sbb
mov
push
ficoml
mov
mov
pop
loop
icebp
inc
aam
imul
jl
arpl
sub
stc
movsb
jg
lcall
inc
sub
scas
inc
mov
lcall
xchg
adcb
jae
call
scas
into
jnp
mov
sbb
fcmovne
add
les
pop
jo
dec
push
mov
jnp
jno
pop
aas
xchg
xor
pop
test
push
add
aam
lods
pop
cmp
sub
jge
cltd
loope
sbbb
loop
pop
outsb
xor
pop
movsb
daa
fstps
test
fcoms
mov
push
inc
mov
ror
jbe
std
out
nop
test
pop
or
imul
nop
or
lods
pop
clc
insl
jns
jns
sub
pop
cmp
incl
and
ret
in
xor
xor
push
jmp
xchg
int
fsubrs
aaa
mov
xchg
popa
data16
add
xchg
push
jge
lods
mov
jmp
hlt
notl
adc
mov
push
cmp
cmp
or
fnstenv
sbb
lret
lds
test
call
in
mov
jle
mov
mov
jbe
out
jle
cwtl
sbb
repz
jge
adc
iret
add
jp
adc
and
sbb
push
inc
ljmp
ret
fs
nop
inc
push
pop
jmp
xor
jo
in
or
mov
mulb
sbb
mov
fldcw
jge
adcb
jns
cmp
push
adc
sub
xlat
cmp
stos
adc
mov
loope
rcr
sbb
mov
push
daa
sbb
lods
pusha
lds
fs
or
inc
cli
lret
sbb
nop
cmp
in
push
cltd
sbbl
arpl
add
mov
mov
and
pop
clc
jmp
mov
or
aaa
mov
outsl
mov
sbb
cmp
cmc
pop
stos
pushf
movsb
mov
xor
test
sbb
cmp
cmp
pop
jmp
lret
and
xor
pushf
mov
out
mov
loopew
in
add
adc
mov
ljmp
sahf
cld
and
pop
lods
dec
sar
je
jge
push
stc
mov
jne
movsb
stos
adc
mov
inc
mov
cmpsl
cmp
add
fistl
ljmp
inc
pop
pusha
lret
scas
push
clc
dec
adc
clc
push
pop
dec
sub
sbbl
leave
xchg
or
xchg
or
filds
aaa
dec
mov
xorb
je
inc
mov
add
jne
dec
push
cli
and
sti
insl
stos
cmp
fucomp
faddl
xor
ja
ret
xor
push
push
sbbb
and
inc
cld
call
call
cmp
push
add
pop
push
push
cld
push
xor
movsb
xor
mov
jne
cmp
or
mov
push
adc
daa
sarb
sbb
ds
cld
sbb
xchg
push
xlat
sub
and
mov
fildll
popf
adc
jl
ljmp
icebp
cld
push
xor
lods
daa
mov
adc
cwtl
pop
insb
in
insl
jecxz
push
sti
and
add
stc
lcall
out
jle
xor
xor
xchg
sub
mov
xchg
imul
les
inc
cmp
mov
stos
addl
xchg
fidivrs
or
int3
mov
lret
fnstenv
icebp
pop
cmc
inc
int
mov
adc
aad
pop
sub
pop
inc
fidivrl
jge
int3
cmpsb
test
xchg
into
ficoms
stos
pusha
pop
and
cmp
mov
cmp
fs
fcomps
xor
mov
xor
mov
cmpsl
dec
popa
xchg
out
lahf
cmc
add
sub
cmp
sub
and
jmp
je
fidivl
std
xor
adc
dec
mov
push
loopne
mov
shl
cld
cmp
adc
mov
addr16
sbb
subl
or
in
adc
loop
cmpsl
nop
mov
in
pop
daa
imul
fsubrp
jge
mov
jbe
test
mov
sti
push
fstp
adc
inc
pop
cmpsl
xchg
sub
sbb
pop
sub
shll
jne
inc
mov
aas
insl
out
inc
je
out
dec
aas
fs
ljmp
les
leave
xchg
xchg
cmc
arpl
sti
out
adc
scas
dec
in
in
lods
sub
xor
or
pop
xchg
shr
hlt
add
adc
pushl
cld
sub
loope
pop
aad
adc
dec
dec
int
push
fists
into
pop
fld
adc
into
es
lret
cwtl
jmp
rorb
mov
aad
jb
push
mov
idivl
pop
push
imul
je
stc
ret
push
arpl
je
sbb
dec
leave
or
in
xchg
stos
inc
mov
ds
rcrl
sub
adc
je
sub
call
cmpb
mov
mov
jp
xor
repnz
dec
frstor
gs
test
comiss
enter
pop
mov
mov
add
gs
fmuls
fs
pop
fucompp
insb
ficoml
out
xchg
jnp
sub
inc
xchg
cmp
repz
je
daa
lcall
mov
push
xchg
test
xchg
xchg
sarb
mov
aad
mov
cli
and
or
arpl
xor
and
jae
cli
std
push
jp
std
das
xor
pop
aaa
dec
push
jne
lock
lock
adc
or
aad
sub
pop
sub
dec
rcl
cmpsl
sub
jg
mov
les
rorb
xor
in
push
jecxz
and
jecxz
insl
xor
fwait
mov
mov
arpl
push
inc
fiadds
inc
enter
mov
aam
test
sahf
cs
gs
inc
rolb
pop
push
test
test
dec
lret
mov
stos
dec
jbe
into
dec
adc
pusha
lret
pop
adc
inc
sbb
adcl
adc
cmp
cmpl
pop
bound
jne
inc
cmpsb
inc
push
mov
lock
ljmp
bound
push
int
cmp
icebp
insb
fistpl
stc
outsb
pop
stc
push
ss
and
sbb
cmpsb
aad
in
out
fucomi
mov
ja
iret
adc
popa
mov
fisttps
cmp
cmc
xchg
shrl
lock
js
add
sbb
sub
int
inc
adc
dec
or
shlb
add
pop
jmp
rol
dec
pop
imul
pop
ds
cmp
fbld
lock
in
movsl
inc
mov
ljmp
lock
adc
out
mov
sub
ja
push
and
nop
pop
enter
dec
lods
cmp
fldl
fimuls
icebp
mov
sbb
insb
mov
sbb
js
out
xchg
jmp
mov
xchg
aaa
xlat
into
lock
imul
insl
cmp
adc
test
dec
cwtl
sub
arpl
jmp
dec
cwtl
jmp
scas
rcrl
xchg
lret
push
dec
fisubrl
push
leave
adc
dec
pop
lea
mov
adc
jecxz
fdiv
aad
lods
lret
aam
xchg
push
movsb
jne
mov
aad
divl
adc
cmp
jns
repnz
or
sbb
sbb
mov
pop
popa
xor
lea
aam
jns
subl
sub
imul
jne
xor
ljmp
or
mov
movl
test
sub
mov
pop
add
imul
lods
dec
fisttpll
repz
ss
pop
stos
fwait
add
hlt
mov
cmp
lods
std
or
mov
jl
push
clc
lock
js
leave
fcmovu
add
jmp
and
push
jge
mov
push
fisttpl
mov
int
xchg
pop
sub
pop
xor
pop
int
out
sarl
or
pusha
cmp
jo
inc
bound
add
nop
add
pop
and
cmpsb
test
push
mov
repnz
in
gs
sub
repnz
out
or
shr
fsubr
pusha
jl
aaa
scas
xorl
in
xchg
cmpsl
lods
mov
inc
xor
pop
clc
ffree
mov
outsl
sbb
sub
mov
cmp
fldcw
in
outsb
jle
imul
cmp
mov
mov
push
pop
ja
mov
call
data16
adc
cmp
jmp
lea
hlt
aaa
mov
jmp
mov
fidivs
mov
inc
hlt
mov
mov
push
dec
jmp
mov
lcall
adc
sbb
inc
pop
out
fbstp
or
or
gs
sub
lcall
mov
and
xchg
cmp
push
dec
mov
add
mov
into
mov
aam
xchg
lret
or
sti
jge
cmp
sti
mov
mov
mov
ficoms
jns
mov
fwait
mov
je
xor
cmc
sub
fildll
cmpsb
pop
rorl
push
sbb
lock
imul
out
mulb
pop
push
mov
mov
pop
push
loope
insl
sub
mov
sub
int
jnp
test
jbe
sub
cmpsb
dec
ss
mov
pop
fmuls
sub
ja
enter
cli
out
and
push
mov
or
js
int3
les
cmp
jp
mov
shrb
into
mov
inc
adc
mov
xchg
xchg
in
cmpsb
push
stc
cmc
cmp
data16
inc
inc
icebp
das
mov
pop
lret
out
int
loopne
nop
push
cltd
cmp
outsb
loope
lods
pop
hlt
aam
outsl
aaa
pop
test
add
add
roll
cwtl
add
std
push
mov
lahf
jns
rolb
insb
lock
cmp
push
add
shlb
data16
xchg
push
xchg
enter
sub
mul
xlat
aaa
sar
push
jle
jne
in
pop
push
ret
adc
scas
loop
imul
movb
cmp
mov
push
or
jecxz
mov
sbb
test
lock
cli
clc
mov
mov
incl
xchg
push
hlt
les
mov
addl
test
jecxz
test
aad
push
test
fistpll
push
stos
jbe
flds
daa
lods
mov
xchg
pop
hlt
xchg
js
mov
mov
loopne
xlat
jns
fprem
and
inc
rcrl
fmul
dec
add
lods
adc
sbbl
push
gs
sti
and
sub
cmc
shll
mov
and
xchg
mov
es
mov
mov
push
andb
fadd
push
mov
sub
lret
xchg
pop
push
or
cltd
push
sbb
pop
xor
add
jl
xchg
lcall
mov
fcoms
xlat
mov
pop
scas
xor
mov
push
js
dec
pop
cmc
jbe
out
in
adc
and
sbb
jnp
or
in
pop
mov
popa
xor
cmpsl
loope
mov
inc
nop
lds
adc
cli
sub
fs
sbb
arpl
inc
jns
repz
push
test
cli
mov
add
cmp
sub
in
loop
jmp
lcall
jp
test
iret
mov
jnp
ret
leave
shl
stos
rcll
fwait
enter
mov
push
stc
cmpsl
lret
and
fstl
push
call
divb
ljmp
or
scas
jo
pop
mov
push
ficoml
jno
cmc
sub
bound
sbb
jns
push
leave
fs
lcall
xchg
bound
and
inc
fidivl
jno
pop
pop
inc
dec
cmp
clc
inc
inc
mov
xorl
mov
add
scas
testb
shrb
out
or
lods
pop
mov
cmp
loopne
jle
sbb
das
imul
in
dec
add
jmp
pop
shll
jmp
or
jnp
enter
mov
push
push
ja
mov
rolb
popa
pop
mov
or
jae
mov
movsl
cmp
repz
jecxz
dec
or
aad
scas
pop
and
dec
mov
mov
nop
pusha
xor
push
stos
mov
sub
fsubrs
mov
mov
rolb
mov
pop
mov
add
je
sar
in
shl
mov
loope
in
xchg
sbb
orl
mov
out
outsb
mov
call
pop
in
dec
dec
inc
dec
cs
sub
pop
mov
fdivs
jnp
sbb
mov
rolb
fnstcw
pop
sbb
in
adc
mov
mov
stos
xchg
push
push
scas
mov
jmp
inc
inc
add
jb
sub
sub
or
xchg
imul
mov
jae
inc
add
inc
into
or
popf
sbbb
nop
in
cli
add
sahf
dec
outsl
sahf
jns
add
jp
adc
pop
aaa
mov
stos
or
lahf
cmc
mov
mov
xchg
inc
push
add
ret
add
aad
or
outsb
xor
xor
sbb
movsb
in
dec
dec
mov
out
dec
js
push
xchg
jg
out
out
cli
clc
repnz
xchg
push
cli
imul
inc
imul
sbb
xchg
jns
mov
jns
aaa
inc
cmp
cmp
xchg
inc
and
fcmovu
shll
jge
sbb
lcall
dec
out
loopne
nop
imul
or
push
out
data16
outsl
mov
push
adc
sub
pop
fdiv
inc
cmpsb
inc
fiaddl
push
popf
fidivrs
loop
inc
loopw
adc
lock
jns
or
mov
orb
js
fnstenv
loopne
mov
test
xchg
lret
jecxz
imul
repnz
lea
inc
sub
inc
xor
test
cmpb
push
repnz
outsl
lods
bound
rorb
xor
add
add
pop
adc
in
sbb
test
xlat
lock
push
xchg
jmp
fldl
push
mov
ret
call
std
jne
faddl
cwtl
cmpsl
cltd
add
imul
mov
in
repnz
jecxz
aaa
out
xor
lods
adc
mov
mov
in
cmp
push
cmp
loopne
sbb
dec
mov
sbb
add
sbb
sbb
pminsw
movsb
push
sub
sub
ljmp
outsl
jae
push
or
cmpsb
dec
mov
js
int3
icebp
shrb
mov
adc
aas
mov
hlt
jo
fsubs
cwtl
jge
std
push
repz
into
dec
aas
cmpsb
andl
jmp
aaa
ficoms
sbb
pop
push
icebp
cs
pop
xor
sub
cmp
jbe
adc
cltd
ret
lock
push
cmc
lea
add
aad
mov
cmp
mov
jo
fists
repnz
icebp
sbb
das
aas
add
adc
sub
dec
addr16
jno
xchg
les
int3
adcl
jb
sub
scas
mov
mov
push
out
push
adc
test
daa
or
xor
loop
adc
subl
adc
pop
insb
cmp
rcr
pop
add
mov
cs
sbb
sbb
lcall
stos
xchg
and
xor
icebp
inc
pop
arpl
cmpsl
or
mov
arpl
pop
pop
pop
xor
push
jo
mov
mov
xchg
jns
sbb
into
push
loopne
xor
test
sub
mov
pop
mov
and
sub
fdivrl
repnz
stc
repnz
pop
aaa
push
lods
add
in
jo
pop
jae
sbb
dec
inc
jp
or
mov
pop
cmpsl
mov
je
add
push
jmp
icebp
mov
mov
ret
fsubrl
push
sub
push
fwait
pop
movsb
pushf
neg
sahf
xor
in
fs
sub
push
xor
pushf
data16
sbb
xor
mov
xor
xlat
push
std
lods
pop
pop
push
dec
mov
ljmp
test
rorw
jecxz
imul
xchg
pop
dec
dec
stc
mov
aaa
push
sbb
lahf
movsl
xchg
mov
loope
mov
insb
mov
pushf
lret
std
mov
insl
ljmp
iret
mov
adc
lret
dec
inc
repz
popf
mov
pusha
loopne
or
ja
data16
popf
in
lds
jecxz
pop
ficoms
xchg
cld
mov
pop
cld
cmpsl
sbb
pushf
jb
mov
sub
scas
ret
xor
inc
in
dec
lcall
mov
sbb
out
mov
cs
imul
mov
ror
mov
lds
jbe
mov
cmp
andb
jae
bound
push
cmpsb
leave
ret
pop
stc
jmp
and
push
iret
jle
in
mov
mov
jo
cmp
jno
jg
shlb
mov
rcrb
mov
mov
bound
or
cltd
inc
outsl
cld
ja
mov
inc
jecxz
movsb
sub
sub
ret
inc
popa
std
mov
fldl
xchg
adc
lods
cltd
loopne
xor
scas
movb
lods
andl
sub
xor
test
mov
xchg
mov
adc
mov
stos
fstl
mov
mov
in
ja
in
mov
xchg
and
fisttps
daa
push
int
andl
into
lahf
xchg
fucomp
in
popf
ss
imul
sub
out
addr16
lret
push
idivb
push
jle
mov
mov
push
or
std
in
pop
in
sbbl
xchg
cs
adc
push
btc
ja
xchg
xchg
inc
fwait
pop
addl
adc
or
or
sti
mov
data16
loop
addb
and
add
mov
repnz
xchg
out
aas
or
sti
call
clc
sub
test
mov
jbe
inc
jne
mov
xor
xor
push
jns
push
add
inc
js
hlt
call
decl
xorb
inc
ror
lcall
jle
test
stos
sub
sti
push
or
add
xlat
loop
leave
jne
loopne
add
pop
inc
push
pop
lods
cs
xor
inc
es
mov
rorl
decb
mov
ss
dec
push
cmp
cmp
pusha
dec
loop
cmp
xchg
dec
jbe
leave
jl
pop
sbb
xor
lret
sbb
jp
adc
dec
cmpl
push
mov
add
adc
pushl
mov
imul
movsb
and
test
fsubrs
mov
mov
ds
movsl
or
data16
es
mov
push
es
loope
es
out
jnp
jecxz
sub
gs
xor
xchg
enter
xor
and
repz
mov
mov
and
pop
pop
add
lahf
lret
idiv
jp
mov
push
int3
popf
nop
mov
popf
insb
arpl
sti
stos
test
lods
fdivrs
inc
jmp
jo
and
stos
cmp
pop
mov
adc
push
mov
dec
lock
repz
mov
xchg
mov
pop
sub
jg
cmp
adc
rcl
shlb
fsts
sbb
insb
outsb
xor
add
insl
jmp
sar
ret
push
add
pop
cli
or
adc
mov
ja
mov
dec
push
mov
xchg
loopne
int
cmp
addr16
push
cmc
jbe
test
add
or
data16
in
iret
arpl
cmpl
jle
fcompl
dec
daa
and
inc
cmpsb
pop
cmpsb
sub
sahf
jno
nop
add
lahf
push
aas
xorb
in
fistl
ret
xchg
nop
inc
mov
loopne
repnz
out
ja
ljmp
ret
push
aam
aam
xor
jae
insl
repnz
inc
lret
fidivrl
sarb
mov
aam
fimuls
insl
pop
and
and
imul
mov
test
test
xor
sub
in
push
inc
fmull
fs
es
xchg
mov
neg
and
cmc
outsb
push
inc
jb
lea
std
add
fs
rorb
xchg
in
jecxz
clc
fwait
mov
push
sbb
lods
jmp
fstl
nop
dec
mov
test
in
jg
push
inc
outsb
adc
das
mov
cli
andl
fs
push
xlat
inc
mov
jp
jb
pop
adc
sahf
xlat
test
cwtl
sub
jnp
iret
popa
setl
lds
xor
cmp
incb
in
mov
dec
and
adc
cmp
enter
pop
sbb
arpl
xor
jle
mov
lcall
sbb
pop
mov
inc
inc
test
std
ret
add
xor
lock
aas
push
mov
jp
adc
test
mov
add
lcall
test
imul
or
iret
xchg
data16
fadds
fstps
jne
jbe
hlt
and
sub
sahf
daa
popa
xchg
ljmp
arpl
test
pop
out
loope
jmp
xchg
push
cltd
test
jmp
stc
cmp
mov
mov
mov
cmp
rclb
scas
sub
insl
sti
xchg
leave
and
inc
push
sub
sub
movsb
orb
push
out
push
push
jle
pop
xor
cwtl
imul
leave
dec
push
data16
dec
inc
ljmp
pop
xor
andb
ds
ljmp
aad
iret
mov
jle
fwait
scas
xlat
lods
cmp
incl
jle
fwait
gs
repnz
cld
add
xchg
aam
pop
dec
jge
sub
adc
mov
add
je
mov
dec
in
sub
adc
push
fdivrl
stos
idivl
pop
sub
push
fnstcw
mov
mov
sbb
imul
stos
lea
sti
adc
insl
push
mov
xchg
sub
push
push
push
insl
mov
insl
mov
jmp
mov
scas
mov
inc
push
xchg
cmp
inc
outsb
cmp
jmp
lret
mov
mov
inc
or
dec
cld
daa
mov
insl
aam
ror
push
ja
xchg
dec
repz
lds
lods
mov
jbe
add
add
movsl
cmp
jge
dec
sub
jl
ss
gs
loope
pusha
adc
std
jae
and
pusha
ljmp
es
lds
mov
inc
pop
and
xchg
gs
mov
mov
lret
lea
mov
popa
sub
aaa
shll
bound
js
call
fsubrs
add
push
icebp
push
int
in
add
inc
cmpsb
dec
pusha
dec
inc
ljmp
aas
call
push
into
jno
test
push
in
imul
outsb
fnstsw
inc
sub
sub
pop
dec
push
add
cmp
mov
xlat
xor
loop
mov
jmp
mov
or
cs
test
mov
jno
dec
or
out
add
xchg
push
int
pusha
cmp
pop
je
in
inc
out
mov
ficoml
cwtl
fs
nop
xor
or
jecxz
stos
es
test
inc
clc
subb
cs
fcom
ljmp
mov
adc
jg,pt
andb
dec
test
sub
sbb
clc
aaa
add
ficomps
sbb
adc
nop
lret
ror
mov
push
mov
std
or
push
and
xchg
mov
lock
subl
scas
inc
mov
fwait
mov
fcoms
inc
fcompl
sub
adc
and
jge
popf
ds
add
mov
pop
inc
and
pop
div
jmp
leave
xor
dec
nop
sbb
push
xchg
add
adc
aam
popa
xchg
aas
int
inc
xor
push
cmp
add
dec
sub
mov
das
pop
jp
xor
add
mov
insl
and
mov
notb
xchg
push
jecxz
push
adc
lret
xor
mov
in
mov
sub
pop
aaa
push
in
dec
jb
fldt
push
add
mov
mov
jl
or
mov
jns
xor
pushl
out
xchg
aaa
fs
lahf
rcr
push
sarl
jo
mov
mov
bsr
fcmovne
shll
pop
mov
jl
out
testb
jle
mov
js
popf
jge
shrl
fistps
sti
xor
mov
outsb
jnp
mov
sub
adc
jmp
add
aad
add
fdivrs
pop
fs
idiv
scas
jnp
dec
imul
ja
sbbl
jg
lret
cs
enter
dec
push
mov
or
add
fstpt
adc
adc
or
int
pop
dec
mov
lcall
jge
fsts
push
mov
arpl
aam
lret
je
mov
mov
test
pop
data16
hlt
int
push
jecxz
xor
in
out
adcb
mov
sar
cltd
rcl
out
je
pop
push
push
dec
inc
cmp
pop
test
add
leave
lcall
mov
adc
dec
sub
mov
call
cld
in
popa
dec
stos
push
fmuls
mov
out
mulb
out
inc
enter
movsb
into
popa
sti
mov
stc
imul
sub
sub
in
mov
cmp
pusha
cmc
xor
lock
int3
xorl
ja
mov
xorl
pop
mov
mov
jo
test
in
or
sub
and
lcall
push
orb
daa
push
out
cmp
in
push
repz
lret
push
cmp
out
clts
inc
or
sub
jmp
push
mov
pop
les
mov
push
ret
int
iret
xchg
sbb
imul
mov
jnp
fs
add
mov
int3
adc
out
push
lcall
sbb
out
pop
insl
jnp
push
push
outsl
fnstsw
or
add
jge
or
add
test
pop
clc
jo
push
jo
cmp
xchg
clc
jmp
scas
push
adc
pushf
adc
sub
gs
fwait
icebp
xchg
push
lods
adc
cltd
cwtl
fs
and
xchg
sub
mov
popa
sbbb
sub
pop
jecxz
shll
es
mov
lcall
cmpl
ja
sbb
xchg
fabs
shrb
ljmp
or
mov
cmpsb
ss
xchg
movb
jmp
dec
mov
lret
pusha
jmp
mov
push
push
jae
xchg
cmp
push
xor
cmpsb
imulb
push
inc
pop
inc
adc
popf
pusha
jae
test
pushf
and
xchg
psubd
aas
arpl
jo
mov
dec
jge
mov
xor
roll
xorb
mov
xlat
repnz
sahf
out
or
popf
cmp
lds
xor
push
loopne
jmp
ficomps
jae
fnstcw
inc
pop
lods
lea
push
sbb
dec
es
fidivs
mov
push
subl
xchg
sub
add
jp
add
mov
popl
shrl
out
and
popl
cmpsl
sbb
cwtl
mov
fwait
or
out
and
insb
lods
into
enter
mov
xchg
fdivrl
mov
jp
adc
pop
mov
jl
ficoml
cmpsl
arpl
ja
testb
sub
xchg
les
ficomps
xor
in
push
std
jb
movsl
xchg
fwait
stc
xchg
mov
push
in
jae
popa
mov
jne
mov
nop
jmp
cli
imul
jbe
repnz
mov
test
stc
xchg
enter
inc
cmpl
cmp
and
fdivrs
add
int
loope
sbb
ja
jecxz
sub
xor
sub
push
sbb
jb
xchg
cmp
adc
mov
and
inc
sub
sti
sub
add
ljmp
sbb
clc
sbb
mov
fisttpll
jne
inc
sub
mov
idivl
movsl
sti
mov
clc
std
out
lea
adc
stos
xchg
jae
dec
dec
shrb
dec
insl
or
jns
jp
push
push
mov
mov
imul
cmp
add
ss
bound
test
je
out
pop
jno
dec
jo
and
call
ret
shll
loope
leave
lods
mov
xchg
xor
fxch
and
icebp
out
jmp
push
lds
xchg
sbbl
js
mov
and
xor
enter
push
xor
jo
out
lods
arpl
jno
pop
pop
mov
sbb
aas
cmp
les
fs
mov
adc
scas
jo
lods
pop
in
inc
jbe
rol
jmp
hlt
popf
inc
lock
jge
xchg
xchg
push
out
cwtl
gs
sbb
rcl
leave
jg
jg
xchg
xor
aad
adc
jno
push
imul
ljmp
mov
adc
xchg
or
scas
outsl
cmp
cmp
mov
dec
int3
rcr
xchg
das
fs
loope
jl
xchg
or
pop
repnz
add
jl
gs
jecxz
hlt
jge
xchg
fildll
adc
sub
xor
andb
sti
sub
sbb
dec
jl
xchg
mov
lcall
dec
jns
fstp
jb
mov
andb
push
fwait
jb
push
push
insb
fwait
aam
out
mov
andb
pop
adc
int
mov
leave
add
xchg
jle
inc
push
inc
stos
xchg
push
or
and
enter
xchg
mov
icebp
mov
xchg
ss
add
mov
sahf
sbbb
iret
pop
lods
pop
clc
mov
out
or
scas
inc
mov
pusha
mov
push
sub
stc
test
cmp
test
xchg
dec
xor
sti
call
decl
adc
and
cwtl
imul
cli
fdivrs
xor
int3
dec
iret
lea
jb
cmp
xor
rclb
das
mov
mov
push
insb
mov
popa
or
cmp
aam
fwait
cmpsb
jge
mov
adc
lea
push
ficoml
clc
mov
jecxz
lods
call
outsl
lds
lret
sbb
into
loop
mov
xor
ret
mov
xor
cmc
rcrl
sti
gs
ss
dec
subb
sahf
test
mov
testl
scas
inc
xchg
arpl
insb
outsl
mov
test
stos
xchg
ss
inc
rcll
cwtl
sbb
inc
sbbb
mov
and
sub
jbe
je
imul
clc
in
out
cmpl
xchg
lock
jmp
outsb
pop
xor
jmp
xorb
add
jns
dec
and
sbb
inc
cmp
ret
jmp
fcoms
mov
jle
adc
dec
pop
dec
mov
cltd
outsl
mov
ljmp
mulb
add
ljmp
adc
cmp
in
jnp
shlb
aas
mov
aam
or
in
aaa
fnstsw
mov
xchg
sub
addr16
dec
cld
xchg
out
xor
iret
xor
pop
cmpsl
cmp
pop
inc
mov
push
loop
out
push
fadds
lods
inc
gs
dec
sbb
mov
lahf
dec
filds
outsb
leave
jo
mov
pop
cmp
test
rcl
data16
popa
cs
lret
pop
ja
sbb
movsl
int3
sub
fldln2
and
ficoms
notl
mulb
pop
lods
or
test
xor
das
jae
mov
jecxz
xchg
fwait
sbbl
repz
outsb
gs
add
mov
insb
enter
aaa
int3
mov
mov
sbb
rol
push
and
xor
repz
jne
out
jne
mov
cmpsl
push
xchg
out
pushf
mov
adc
icebp
xchg
fmull
push
int3
cli
lea
cmc
pop
mov
faddp
mov
push
notl
lods
pop
xor
lret
mov
mov
jb
stos
daa
shrl
mov
jge
push
shrl
testl
out
jno
pop
mov
jmp
lock
jb
cld
leave
arpl
and
mov
sbbl
out
inc
lea
int
mov
xor
stos
sbb
add
push
pop
dec
stos
out
and
sbb
in
mov
and
push
dec
pop
pop
or
jne
aam
into
stc
movsb
xchg
jae
stos
iret
mov
cmp
ds
and
cltd
icebp
mov
hlt
mov
les
sbb
mov
or
add
mov
vphadddq
ret
js
sbb
mov
sub
subl
or
fs
fdivs
pop
cmp
aad
bound
pop
mov
insl
inc
xor
xor
scas
push
sub
adc
aaa
or
jl
jnp
cmp
lods
mov
xor
bound
ret
cmp
cmpsb
cmp
dec
push
cmp
jae
or
enter
push
mov
xchg
pusha
testl
push
test
test
jo
pop
mov
jo
adc
std
and
lcall
pop
xor
sub
lea
cmp
mov
jmp
cs
cli
xchg
mov
icebp
cmp
cmpsb
mov
sbb
daa
mov
cmpl
sub
mov
cwtl
or
jmp
loop
ret
adc
repz
repz
sub
lret
or
fadd
inc
xor
push
imul
xor
fiadds
fisubrl
popf
dec
dec
lds
push
sub
push
jae
push
stc
xor
aas
cmp
call
mov
push
jg
xor
pop
sbb
sub
ret
mov
out
mov
add
cmp
pop
ror
adc
sbb
pushl
movsl
sbb
loopne
sbb
mov
mov
cld
push
cli
fistl
out
jno
pop
addr16
pop
mov
jle
stos
and
xchg
jb
icebp
mov
mov
outsl
push
pop
sbb
jecxz
mov
mov
out
or
fcmovnu
add
mov
je
xchg
test
or
mov
iret
in
or
outsl
dec
jne
xor
inc
test
mull
mov
ret
test
mov
cmp
lcall
stos
gs
add
decl
cld
shll
fs
lcall
xchg
cmc
xchg
shrb
std
dec
jg
bound
ret
mov
loope
jl
add
jmp
dec
and
repnz
push
xlat
jno
add
mov
sbb
cs
xchg
cmc
inc
mov
cmc
popf
lds
gs
dec
cmp
mov
les
xor
and
in
stc
xor
mov
inc
cld
push
test
rorb
push
sahf
push
cmp
cwtl
xor
test
ret
mov
fs
pushf
jae
push
mov
ljmp
arpl
mov
sub
stos
aas
ljmp
cmc
xor
mov
pop
adc
andb
mov
mov
inc
push
cmp
push
adc
in
mov
in
fs
movsb
insb
fstpt
or
ljmp
in
push
jno
jecxz
jnp
push
or
pop
ret
mov
push
jbe
lret
push
mov
ja
xchg
stos
pop
test
jecxz
daa
lea
movsl
repnz
mov
jle
xchg
dec
adc
popa
jecxz
lea
sbb
inc
push
xchg
test
push
repz
or
xchg
jbe
xchg
adc
sahf
pop
pop
xor
mov
repz
dec
or
in
mov
mov
mov
neg
out
dec
cli
and
mov
pop
jg
jbe
push
xor
fisubrl
ljmp
sbbl
jne
leave
inc
add
lods
jns
ret
into
popa
sti
scas
pop
mov
test
mov
fldl
faddp
stos
mov
mov
jns
rorl
adcb
jmp
xor
mov
imul
dec
in
lock
xor
add
in
sbb
jg
pop
bound
fwait
mov
xchg
dec
mov
xchg
cmpsb
sub
or
push
hlt
int
in
sarb
les
jbe
pop
cwtl
jbe
fs
aam
out
push
ret
pop
clc
ljmp
shl
and
jno,pt
test
test
jecxz
dec
add
aas
js
pop
push
sbb
stos
cmp
movsl
cmpsl
in
jae
loop
js
in
and
mov
lret
xchg
aaa
push
pop
out
xchg
daa
dec
icebp
pop
repnz
jmp
insb
pop
lret
inc
dec
xor
scas
and
xchg
jne
cmc
sub
insb
and
out
dec
sar
dec
popf
cwtl
ret
pushw
daa
inc
imul
mov
in
xor
dec
jecxz
inc
mov
pop
jmp
jne
ret
loopne
inc
jno
enter
sbb
dec
call
lea
cmp
stos
repz
mov
icebp
add
imul
data16
pushf
push
mov
fidivl
xchg
sti
and
pop
mov
pop
inc
cmc
cmpsl
fiadds
mov
and
pop
and
int3
lcall
faddp
pushl
add
sbb
sub
xchg
daa
inc
aad
inc
sub
add
push
sub
xchg
mov
push
inc
jo
sbb
outsl
pop
test
inc
loopne
cmp
popl
or
mov
fldcw
sbb
and
ss
pusha
sbb
or
int
adc
cmp
mov
sbb
add
mov
push
cmp
mov
push
sahf
shlb
sub
cmp
xlat
stos
cmp
add
scas
incl
jae
push
xor
mov
push
cltd
cwtl
add
addps
mov
inc
mov
test
mov
ja
or
fidivrl
shlb
or
into
lods
push
sti
mov
jecxz
inc
push
dec
mov
mov
push
cmp
and
popf
inc
fsubs
inc
shrl
jmp
and
add
aas
cmp
xchg
shll
daa
xor
add
std
popa
cmpsl
cmc
jbe
test
dec
fisubrl
jb
bnd
jge
adcb
sub
std
shrl
inc
xchg
mov
je
sbb
mov
rcl
lret
shlb
call
pop
int
push
dec
in
xchg
scas
mov
inc
int
dec
add
out
rcrl
and
popa
ss
repnz
mov
sub
or
push
leave
sti
mov
fcompl
and
jbe
imul
in
cmp
mov
pop
cvtps2pd
js
jo
dec
dec
test
fs
sbb
lods
pusha
daa
sbbl
sti
adc
adc
pushf
xor
jno
test
xor
in
pop
xor
loope
call
data16
scas
and
scas
pop
fbld
jmp
and
shlb
cmp
mov
or
nop
sbb
jge
test
mov
pop
jmp
ds
mov
scas
add
cmp
mov
outsl
xchg
jmp
gs
faddp
mov
cli
pop
insl
push
imul
test
outsb
and
sbb
adc
pop
enter
cwtl
mov
rol
addr16
setae
enter
fwait
das
aam
adc
mov
cltd
dec
jmp
addr16
pop
mov
add
add
push
bound
negl
or
fwait
inc
dec
fiaddl
jmp
cmp
movsl
mov
mov
and
mov
adc
add
add
adc
rcl
bound
pushf
cwtl
lods
dec
cmp
cmp
leave
pop
xor
add
adc
int
and
and
push
sub
test
loop
mov
push
and
mov
xchg
cltd
imul
aad
mov
xchg
ret
lahf
mov
bound
divb
lods
test
das
jecxz
repnz
mov
xchg
mov
scas
fsts
xor
bound
mov
or
add
mov
test
leave
test
ja
pop
add
fistps
inc
fstps
imul
mov
sbbb
jl
and
lret
shlb
addr16
or
fiaddl
lret
out
fcoml
nop
and
pushf
xor
push
add
scas
int
lds
addl
inc
mov
dec
fdivr
push
jns
inc
gs
insb
out
subb
xchg
sbb
fcoml
mov
sub
and
data16
sar
das
pusha
cmp
xor
pop
imul
addl
push
xchg
sbb
ss
sbb
cmp
adc
jmp
xchg
xchg
mov
icebp
cli
cmovbe
sbb
pop
test
cmp
and
arpl
and
add
cmc
sub
xchg
dec
pusha
sbb
push
xor
mov
enter
mov
scas
fwait
sbb
addl
or
mov
subl
into
push
ret
pop
sarb
push
lret
imul
shll
rcrb
or
xchg
cs
dec
cltd
jae
push
push
or
dec
cmp
stos
mov
aas
cmc
mov
mov
dec
add
jle
jno
sarl
movsl
pop
add
mov
js
dec
ret
sub
fwait
or
xchg
lret
xchg
cmp
dec
std
out
hlt
or
xor
cli
push
mov
int3
xor
out
enter
mov
dec
adc
xchg
mov
push
out
mov
movsl
orl
and
stos
std
je
push
std
aaa
jecxz
je
lahf
daa
inc
xchg
xchg
fcmove
inc
leave
mov
ds
pop
mov
inc
adc
or
fs
add
movsb
pop
or
imul
and
mov
push
scas
loopne
jae
mov
mov
stos
cmc
mov
out
pop
nopl
outsb
sub
lock
aas
inc
xor
imul
scas
test
fwait
inc
jno
push
das
mov
les
jge
push
pushf
ljmp
dec
icebp
dec
cmp
ret
ffreep
nop
fsubl
int3
incb
lods
iret
movsb
popa
out
adc
push
test
jns
or
pusha
sahf
add
pop
xor
icebp
aam
mov
ljmp
lret
cmp
cmp
xor
mov
pusha
das
push
loopne
sub
add
std
dec
pop
sub
lock
imul
lret
sarl
dec
cwtl
imul
xchg
sbb
mulb
mov
frstor
mov
shrl
ss
movsb
mov
imul
hlt
cmpsb
mov
adc
aaa
sub
mulb
lahf
xor
in
in
cmp
jle
jae
dec
or
popa
into
sub
lret
pop
pop
add
cmpsb
inc
pop
cmpsb
rolb
xchg
addr16
test
vmulps
inc
dec
pop
pop
pop
stos
mov
test
out
scas
js
lods
sub
push
imul
add
mov
ja
test
pop
repz
leave
icebp
xchg
mov
test
fwait
dec
out
stos
mov
ljmp
fs
mov
add
mov
add
imul
aad
pop
and
xor
sbb
cmpsb
add
test
dec
adc
cwtl
popf
pop
ja
sarb
test
xor
dec
dec
cli
mov
stos
into
jecxz
dec
inc
push
leave
fidivrl
stc
lahf
inc
dec
fldenv
lcall
dec
sub
cld
outsb
dec
add
add
out
cmp
add
cmpsb
inc
mov
inc
push
pushf
adc
sbbl
fstpl
daa
push
or
cmp
loop
in
lock
mov
jns
dec
xor
xchg
iret
cmp
or
dec
gs
pop
xor
mov
clc
dec
daa
into
nop
shl
mov
add
or
dec
xor
in
xlat
into
sub
ret
xor
dec
stos
outsb
out
mov
iret
imul
notl
int3
stc
iret
sbb
jnp
pushf
xor
and
adc
imul
es
pusha
adc
les
ret
or
test
push
pop
and
xchg
jmp
ss
adc
rcrb
fsubs
lods
and
dec
popa
adc
rcr
nop
int3
mov
stos
sub
jnp
push
rolb
or
test
cmpsl
mov
insb
prefetcht2
ss
inc
call
mov
stc
adc
adc
outsl
dec
rolb
popf
fcmovne
xor
icebp
daa
pushw
mov
aam
ljmp
sub
aad
pop
fsub
jo
fiaddl
hlt
lds
imulb
int3
shrd
mov
mov
push
imul
pop
mov
movsl
shll
outsb
pmaxub
jo
lret
cmp
movsb
and
iret
mov
jecxz
ljmp
shrl
xchg
lret
dec
push
test
jmp
shll
push
sbb
lret
cmp
hlt
or
imul
cmp
sub
inc
fldl
cmp
es
xchg
popf
rcl
out
outsl
cli
fiaddl
sub
xchg
repz
jne
xchg
cwtl
sbb
lods
test
or
nop
lods
mov
les
shrl
adc
and
dec
pop
sti
jbe
sbb
or
adc
pushl
iret
sub
fwait
cmpsl
jbe
lea
cmc
xor
pop
cmp
lock
aas
movsb
int3
and
imul
adc
fistl
andl
fdiv
mov
jb
into
mov
add
xchg
jbe
push
sbb
shll
dec
cmc
dec
sub
aaa
jae
xchg
test
sub
fnstenv
or
mov
xchg
mov
gs
lret
fcmovbe
data16
sahf
cld
and
push
mov
xor
mov
lahf
push
inc
or
push
xor
mov
push
pop
mov
ljmp
repz
xchg
test
mov
mov
popa
sub
sbb
in
sarl
cmpsb
push
shr
repnz
fcomps
repnz
dec
shl
psubd
lock
xchg
jl
jbe
lret
insl
xchg
mov
arpl
mov
nop
xchg
or
mov
and
jmp
sti
loop
jp
sbb
mov
gs
inc
pop
cwtl
dec
lcall
outsb
out
sub
or
mov
dec
inc
cmp
nop
xchg
xchg
and
mov
fcmovnu
lock
in
mov
push
ret
fnstsw
addr16
mov
inc
call
mov
lcall
repz
push
stc
fcomps
popa
call
sbb
sub
and
jmp
push
adc
add
pop
fwait
pushf
push
lock
sbb
cmp
adc
xor
and
gs
test
js
test
fildl
out
mov
mov
or
test
icebp
mov
jns
push
test
fcoms
inc
pop
adc
pusha
shr
mov
xchg
dec
push
mov
test
das
mov
aam
mov
push
mov
addr16
mov
mov
xchg
dec
cld
dec
xchg
dec
cmp
fiaddl
sub
adc
sbb
mov
or
jle
jae
mov
jl
push
pop
jl
push
and
add
add
sbb
jb
movsb
es
movsl
xor
test
cld
outsb
fstp
lahf
mov
orb
sub
or
vpmadcswd
mov
xchg
insb
push
push
mov
out
jo
imul
sub
adc
call
sbb
in
jns
push
mov
dec
push
pop
sub
sbb
jge
in
push
arpl
pop
mov
fisubl
lahf
adcl
mov
mov
cs
mov
mov
sub
fndisi(8087
arpl
or
xor
jl
cld
shlb
jo
cmp
jg
push
xor
sbb
jo
btl
jp
sub
mov
xchg
and
icebp
add
pop
icebp
neg
jbe
mov
pop
pop
adc
xor
cmc
dec
mov
push
push
fcmovu
arpl
popa
mov
inc
sti
add
je
add
cmp
adc
aaa
js
dec
cmp
lods
dec
adcb
xor
iret
mov
sub
icebp
add
or
mov
in
and
push
and
mov
inc
int3
xlat
loopne
and
sub
xchg
cmpsb
das
xor
insl
ss
push
clc
nop
in
xor
pop
inc
loopne
sbb
sub
and
inc
add
xor
push
out
ret
sbb
dec
pop
xor
ret
cld
sarl
jo
ret
push
pop
add
cmpsl
imul
dec
in
mov
dec
inc
mov
mov
mov
je
mov
mov
sbb
scas
cmpsb
aaa
stos
ja
jae
mov
mov
push
push
pop
imul
xor
insb
push
mov
mov
cmpl
cmpsb
inc
mov
adc
pop
jne
xchg
push
in
jae
out
popf
enter
mov
mov
jle
js
xor
mov
movsb
xchg
sub
xor
into
inc
into
mov
xor
and
xchg
add
cmpsl
adc
sub
xrelease
xchg
jno
bound
mov
add
loope
mov
jo
mov
mov
and
add
in
lods
arpl
inc
push
jg
add
shlb
insl
or
insb
sub
push
out
fs
pop
sbb
mov
sub
sub
and
aam
jnp
jbe
daa
or
loop
xchg
loopne
xor
push
mov
aaa
add
popa
mov
stc
sub
cmpl
jbe
out
jle
inc
xchg
incl
jl
add
cmovg
cmpsl
inc
shr
ret
adc
push
add
xchg
push
jg
xor
push
push
mov
clc
imul
pusha
inc
aam
mov
addr16
dec
cmp
jns
pop
xor
rol
stos
iret
clc
push
jg
fidivrs
dec
or
std
mov
push
dec
hlt
ret
and
lcall
jns
scas
push
push
and
test
repnz
and
sbb
jle
xor
in
dec
scas
nop
push
add
jl
xchg
lods
sbb
xor
pushf
insb
add
test
divb
sbb
sbb
int3
pop
pop
mov
test
push
jnp
pop
in
stos
mov
lcall
movsl
stc
add
xchg
lret
sub
jns
popf
inc
mov
pop
dec
sysenter
cmpb
xor
insb
mov
jmp
jmp
dec
sub
cltd
aad
out
lea
arpl
sbb
fdivrl
sti
cmp
sbb
dec
xchg
push
pop
loope
fistpl
xchg
dec
jg
mov
xlat
push
push
mov
sub
xor
into
call
movsl
dec
mov
arpl
jne
push
lods
mov
mov
sub
push
insb
ja
rcr
lods
test
cmp
mov
adc
sub
loope
jnp
mov
stc
dec
push
mov
pop
sbb
push
in
gs
pop
mov
cltd
adc
xor
rorb
fisttpl
pop
cmp
push
push
mov
insl
jl
adc
jp
xor
popf
jb
or
imul
es
add
mov
jecxz
adc
les
and
mov
notb
loop
cmc
mov
imul
frstor
cmp
icebp
jmp
pop
or
lea
mov
negl
syscall
lcall
xchg
rol
and
xor
gs
gs
mov
xchg
mov
mov
iret
sbb
jne
repnz
or
adc
mov
fldl
shrl
mov
sub
ds
push
xchg
xor
movsb
dec
or
mov
or
ret
mov
add
sub
in
pop
pop
push
push
cmpb
mov
ja
add
aam
jns
ds
xor
out
mov
sbb
push
and
shl
mov
mov
dec
xchg
sti
sbb
ljmp
icebp
xchg
sbb
add
lds
pop
dec
lods
jns
jmp
cmp
mov
adc
aaa
cmc
jecxz
addr16
aas
mov
mov
jne
push
jge
in
pop
subb
pop
push
or
gs
fsubrs
push
pop
and
jg
mov
imul
push
lahf
jo
js
arpl
loopne
dec
mov
mov
jg
adc
inc
and
dec
in
int3
movsl
test
and
xchg
mov
mov
test
sbb
or
xor
test
jnp
mov
insb
hlt
and
and
fsts
dec
loop
sbb
and
orl
pop
lret
or
frstor
pop
popa
addr16
scas
pop
push
jecxz
adc
push
push
inc
adc
dec
jg
lods
cwtl
in
sub
mov
ljmp
mov
decl
or
pusha
sub
xor
dec
fs
fwait
je
adc
push
ret
mov
xchg
ret
ljmp
fcompl
arpl
imul
dec
imul
jge
out
push
cmp
mov
or
in
add
in
mov
fstpt
jl
xchg
jae
dec
push
dec
jge
mov
out
lcall
sbb
ja
or
inc
mov
dec
xchg
add
fisttpl
mov
push
sbb
ds
or
loop
cli
idivb
mov
out
fimuls
dec
push
jmp
les
inc
xchg
jg
arpl
add
cmpsb
add
mov
or
jns
add
iret
je
aas
loopne
adcl
push
scas
loopne
js
dec
arpl
dec
or
xor
loope
cmp
add
enter
push
es
sub
popf
sub
lds
push
bound
adc
inc
jl
and
clc
test
pop
pop
adc
fnsave
outsb
jbe
mov
ret
jge
movsl
popf
lahf
jno
pusha
sub
mov
ljmp
sub
pop
icebp
lea
mov
mov
rcrb
imul
jle
jp
cld
and
iret
cmp
add
into
icebp
mov
xor
mov
xor
out
data16
js
mov
rcrb
pushf
fucomip
sub
add
sbb
aas
push
icebp
mov
xor
out
jo
lods
xor
vcomisd
mov
in
or
add
lahf
pcmpeqd
clc
lock
inc
cmpsl
pop
in
dec
xor
mov
jo
add
jns
adc
movsl
or
pop
xor
sbb
jo
xchg
imul
xorl
jp
add
jg
lcall
xchg
cld
movsb
cmp
mov
xchg
call
and
mov
adc
add
pop
inc
inc
loopne
daa
or
push
shlb
sub
icebp
movsb
xor
in
jns
aas
ret
loopne
rcll
adc
outsb
push
dec
enter
into
lret
mov
jae
lds
or
pusha
aaa
sub
js
mov
hlt
aas
add
pop
push
push
and
jnp
jle
xor
dec
movsb
in
push
imul
scas
mov
sub
andb
ffree
aam
mov
aad
cwtl
push
pop
cs
add
cmpsb
xor
mov
std
inc
mov
xchg
mov
xor
add
xor
in
fistps
mov
mov
sub
sarb
test
fwait
imul
aam
jmp
addr16
xchg
fistl
flds
mov
in
in
mov
cwtl
and
ret
and
xor
sbb
shl
push
mov
jno
mov
xchg
or
add
mov
jge
sbb
mov
sbb
adc
dec
int3
jmp
push
shlb
int
sbbl
aaa
jl
loope
xchg
mov
out
jo
add
jnp
jp
mov
inc
out
xchg
inc
mov
cmp
aad
cmc
mov
stos
fnsave
in
andl
or
jb
movsb
hlt
mov
xlat
popa
cmpsb
sbb
in
cmp
loop
or
mov
add
inc
sbb
pop
scas
shlb
or
adc
and
mov
and
push
mov
adc
add
ss
sub
cmp
sub
mov
das
sbb
mov
mov
jle
inc
xor
xchg
adc
cmpl
add
pushf
inc
repz
cmp
sub
bound
cmp
jle
pop
lret
out
jle
mov
push
mov
and
jae
orl
mov
inc
cwtl
dec
pop
jp
xlat
jns
inc
lds
gs
pop
rolb
mov
roll
cmp
pop
and
xor
gs
inc
ds
jmp
or
sub
push
idivw
lahf
call
cmc
add
sbb
inc
loopne
adc
inc
icebp
test
and
and
xor
add
adc
ror
push
shl
cli
sub
jmp
sub
pop
ss
or
fwait
sub
adc
dec
jno
ret
cmp
xor
out
ja
push
pop
call
add
cmp
shlb
sbb
nop
dec
in
stos
xor
ds
insb
push
sbb
mov
mov
jae
ja
pop
mov
sub
aad
sbb
push
dec
jne
std
rorl
xchg
test
mov
push
pop
incl
jp
cmpb
mov
shlb
pushf
outsl
scas
inc
lret
push
mov
test
into
push
fnstenv
jmp
je
or
jnp
jno
scas
fdivrl
jg
add
sahf
mov
pop
mov
stos
sbb
adc
js
jns
addr16
cmp
mov
adc
pusha
lock
sbb
xchg
mov
sbb
jns
sub
pop
rcrl
mov
jb
jne
sub
add
les
pushf
sbb
in
xor
and
bound
mov
loopne
popf
and
push
ftst
out
xor
fwait
inc
sbb
and
inc
fcomp
les
add
sbbl
rclb
icebp
int
xor
xor
addr16
ss
add
xor
jo
fiadds
mov
iret
cltd
test
lods
push
fsubrl
xorl
fcmovbe
cmp
inc
insl
imul
push
jae
adc
stos
lcall
out
or
xor
pop
jo
je
jg
cmp
mul
push
or
cmovbe
add
loop
jl
add
adc
arpl
icebp
push
dec
les
sub
out
enter
clc
or
js
lahf
cmp
adc
sub
xor
repnz
push
pop
movsbl
xchg
cld
xor
sbb
add
dec
dec
sbb
sub
movsb
pop
mov
stos
dec
sub
sub
sub
shrl
nop
ret
push
cmpsl
gs
sahf
pop
daa
fstl
cmp
dec
jmp
adc
and
in
push
xchg
mov
cli
cmp
mov
jnp
fldcw
sub
bound
int3
pop
jg
cmpsb
cltd
xchg
pop
in
jns
push
push
cli
push
jbe
outsl
pushf
cmc
jnp
fmull
loope
jnp
in
dec
lds
repnz
sub
dec
inc
cmp
je
daa
insb
out
clc
add
insl
and
jl
hlt
pop
add
jl
push
xor
dec
ret
pop
xlat
shl
jno
aas
in
and
inc
dec
inc
fidivrl
mov
out
fdiv
stc
mov
bound
cwtl
sarb
sbb
out
cmp
addb
sbb
or
adc
filds
jmp
lods
cmp
aam
fstl
push
in
xchg
mov
xchg
push
push
pop
adc
push
mov
mov
sub
test
mov
jae
xchg
pop
lret
mov
sbb
pop
dec
stc
imul
js
aas
cmp
jp
mov
xchg
push
inc
test
inc
stos
aaa
test
jp
mov
int3
xchg
shlb
in
pushw
hlt
cld
pop
inc
test
outsb
sub
jg
pop
inc
ja
dec
push
das
push
nop
push
mov
xor
cmpl
adc
mov
ficomps
loope
in
lods
xchg
nop
lds
leave
mov
bound
scas
hlt
inc
dec
push
ja
sub
fs
movsb
adc
popa
mov
out
daa
int
dec
xchg
out
stc
and
sbb
insl
cld
mov
adc
push
fs
mov
pop
sbb
mov
enter
imul
and
push
frstor
xchg
xchg
xor
sub
scas
and
fadds
push
sti
xor
incb
jmp
leave
push
pop
mov
mov
mov
push
mov
or
lahf
adc
js
jmp
out
pop
xchg
xchg
xor
aaa
lahf
sbb
loop
or
or
lods
xchg
xchg
gs
hlt
popa
push
fcom
cmp
es
and
jp
mov
fwait
dec
lods
fldcw
mov
pop
xchg
xor
bound
aad
insb
mov
xor
cmc
jb
jne
dec
inc
sub
adc
add
fdivr
pop
aas
imul
push
push
out
out
std
cmp
or
add
or
xorl
ds
mov
jle
xchg
lods
scas
sarl
sub
mov
sbb
enter
out
cmp
mov
or
pop
les
push
add
cltd
pop
cmp
push
dec
nop
inc
push
ss
pop
inc
rolb
xor
jno
rclb
int3
cmp
mov
fiaddl
scas
pop
out
add
cld
xor
fs
mov
cld
and
outsb
test
cmc
scas
into
mov
hlt
test
iret
pop
imul
jo
or
cmp
dec
adc
test
add
repnz
sbb
ljmp
jae
jg
leave
leave
mov
cmp
call
inc
adc
sbb
xor
movsb
je
mov
pop
or
inc
insl
add
sub
cltd
les
aaa
add
lds
adc
add
addb
fidivrs
out
enter
stc
adc
dec
mov
rcrb
bswap
lahf
movsl
cs
lods
adc
adc
mov
cmp
add
iret
cmpsb
xchg
je
lret
inc
adc
or
push
ss
fsubl
mov
adc
insb
xchg
pusha
mov
or
test
imul
or
adc
lds
mov
stos
daa
xchg
pop
cmp
push
mul
andb
lea
out
add
xchg
test
adc
pop
repz
mov
shlb
fs
gs
ret
sbb
sbb
aam
pop
or
les
dec
mov
bound
push
data16
push
and
jl
xchg
jecxz
push
or
stos
adc
lret
push
std
mov
xor
outsl
cmpsb
pop
jecxz
ds
adc
dec
cmp
add
ss
adc
lds
and
fnstenv
sbb
aam
sti
push
add
popa
gs
sarl
movsb
dec
mull
mov
lds
pop
mov
xor
mov
lea
push
testl
arpl
cmp
jmp
loop
mov
jp
insb
icebp
jne
fs
sbb
daa
bound
out
sub
rcrl
inc
insb
std
pop
movsl
mov
cmpsl
std
xchg
jne
fdivp
add
mov
cmpsl
add
dec
xor
mov
push
or
stc
cmpb
pop
outsb
cmpsb
or
daa
mov
mov
sbb
imul
mov
ftst
pop
cmpsb
jmp
jae
mov
adc
hlt
mov
fcoms
cmp
incb
mov
and
aad
les
ss
mov
sub
outsb
mov
adc
in
xchg
and
mov
xor
shlb
inc
pop
xor
xchg
jmp
mov
je
and
lea
xchg
aaa
mov
stos
adc
loope
sbb
jmp
lods
inc
jmp
xchg
fwait
inc
je
in
mov
loop
push
scas
inc
cmp
shl
dec
or
mov
fcmove
push
mov
inc
ffreep
sbb
imul
lds
inc
sbb
lea
jle
jne
leave
rcrl
fwait
dec
fldcw
lret
add
js
pop
mov
pop
add
sbb
data16
or
push
sub
xchg
mov
cld
das
push
add
rolb
out
xor
clc
mov
sbb
lds
mov
ja
cmpsl
sub
dec
xor
ja
mov
jns
xor
int
lods
inc
jo
adc
cltd
hlt
push
jnp
nop
sub
test
stc
clc
push
push
cwtl
jno
test
lds
adc
jg
icebp
fistl
call
jb
bound
into
int
mov
mov
inc
jmp
push
mov
push
scas
shll
or
mov
ljmp
ss
push
icebp
jo
subb
out
aaa
repz
dec
frstor
daa
sub
aas
sbb
addr16
adc
sub
pop
sti
sbb
inc
mov
mov
xor
fdivr
or
adc
mov
int
cltd
outsl
popf
pop
cli
stos
fs
push
and
jne
xchg
iret
push
sbb
mov
inc
sub
dec
loopne
inc
jo
leave
rcrb
pop
dec
mov
imul
push
jp
mov
push
loop
aaa
out
sbb
shll
adc
pop
inc
imul
es
lods
pop
mov
sub
jg
faddl
sbb
pop
xor
xchg
inc
xor
notl
sbb
cmp
lret
fwait
outsl
adc
cmc
xchg
movsl
jge
adc
cmp
cmc
sbb
mov
xor
xlat
aam
test
jmp
cmp
inc
hlt
sbb
ror
add
push
std
fisttpll
test
pop
or
push
movsb
cmp
xor
mov
inc
add
mov
imul
push
pop
decb
fmull
cmp
pop
out
lods
xchg
ja
repnz
jecxz
push
jno
pop
dec
mov
fidivrs
xchg
adc
popf
jno
lods
cmp
xlat
xchg
mov
cmp
sbb
jns
lahf
decb
mov
xor
scas
sub
pop
in
mov
push
pop
dec
or
xchg
dec
mov
add
cmc
cmp
lcall
insl
jl
mov
or
mov
xor
mov
rcrl
in
cmp
mov
bound
loope
and
inc
movsb
mov
cmp
mov
dec
fisttpl
not
shrl
adc
pop
push
rcl
mov
test
jnp
in
mov
mov
or
or
movsl
pop
bound
mov
push
clc
ror
dec
das
pop
shrb
adc
lock
bound
shlb
pop
in
frstor
aad
jle
push
dec
push
mov
in
cmpsl
lret
sbb
add
jp
inc
in
test
cmp
sub
push
jo
pop
cmpsb
mov
jmp
out
cmc
sub
pop
inc
call
iret
aaa
inc
push
push
mov
jbe
xchg
scas
xchg
mov
mov
mov
sub
vmovups
nop
rolb
call
in
xor
or
repz
icebp
gs
dec
jp
push
cmp
gs
jp
aas
mov
mov
popa
push
ret
lcall
pop
pop
jbe
mov
sbb
add
arpl
fdivl
enter
push
ss
jae
pushf
lods
sbb
cmpsb
lock
mov
add
push
loope
sub
mov
sti
test
xor
jecxz
int3
popf
cmp
nop
dec
inc
test
sub
xchg
cmp
xor
scas
dec
pop
pushf
cmp
ficoms
cmpsb
sahf
insl
pop
dec
test
sbbb
dec
pop
insl
jo
inc
arpl
inc
dec
pop
or
cmp
mov
mov
bound
daa
rcrb
push
fistpll
jl
xor
pop
xor
sahf
push
outsb
push
jns
sub
and
jmp
shll
popf
sahf
int3
pop
sub
repz
push
and
adc
mov
xor
push
das
mov
loopne
cmp
jmp
hlt
cmp
cmp
int3
rorb
movsb
sahf
outsb
les
jbe
inc
push
xchg
in
xor
mov
lahf
mov
jmp
test
mov
xchg
mov
cmpb
jl
testb
insb
xor
xchg
pop
push
lea
imul
out
xchg
sbb
sbb
xchg
test
adc
scas
push
test
mov
jg
cs
lret
mov
sub
lea
add
cs
outsb
dec
addl
sbb
inc
cmpsl
ror
stos
inc
or
add
sub
mov
out
add
jbe
push
ja
cmp
sub
dec
sbb
adc
or
xor
cmpsl
int3
adc
fwait
dec
adc
or
fnstenv
cmp
pop
scas
stos
sub
bound
sbb
push
sbb
jo
sbb
into
out
test
into
xchg
test
mov
ja
outsl
stc
lret
push
adc
mov
cwtl
in
sbb
pop
test
cmp
jo
loop
pop
shll
lock
imul
jnp
roll
pop
js
dec
fmul
je
push
dec
and
imul
fwait
xor
dec
cltd
je
hlt
push
jae
fimull
subb
leave
xlat
pop
out
mov
mov
pop
pop
sub
outsl
push
xchg
and
inc
nop
test
aam
pop
lods
pushf
mov
pop
stc
xchg
pop
test
inc
xchg
mov
outsb
mov
mov
cmp
push
pop
shll
and
push
loopne
aam
inc
pop
add
jle
or
inc
stos
mov
mov
in
iret
scas
pop
lcall
inc
inc
add
sbb
sti
fsubl
aaa
out
je
repnz
pmulhw
push
push
xor
push
bound
or
mov
sub
lahf
jle
fsubr
push
xchg
push
and
es
jmp
aas
scas
add
adc
in
leave
into
mov
push
add
mov
xor
sbb
test
ret
mov
nop
out
mov
xor
lock
jg
daa
out
lahf
fstpt
sbb
fs
lock
cmp
hlt
xor
xchg
cmp
inc
dec
ret
mov
cmpb
jb
push
jmp
ljmp
iret
fidivrl
mov
mov
repnz
in
mov
push
jno
adc
mov
jmp
enter
mov
dec
xor
sbb
in
sbb
push
sbb
push
and
mov
fld
neg
ljmp
fyl2x
rolb
mov
lods
sub
jmp
outsl
aas
mul
cmp
pop
aaa
les
outsb
xor
push
add
xchg
or
iret
cmpsl
xor
mov
jl
mov
add
dec
fs
or
mov
shl
add
jnp
jns
dec
fstpl
fists
repz
push
mov
in
mov
out
call
loopne
and
sar
add
mov
pushf
jg
aas
loope
enter
sub
mov
jns
mov
ja
add
sub
call
mov
sarl
lods
mov
shlb
int3
cmp
jnp
inc
xchg
in
sbb
out
jne
testl
add
les
jle
aam
or
aas
and
xchg
es
mov
cmp
lcall
and
movsb
lahf
dec
mov
in
les
loop
mov
push
outsl
enter
int
stos
push
scas
add
cwtl
sbb
jb
xor
mov
stos
aas
fildl
rcl
mov
roll
out
aaa
icebp
sar
push
push
movsl
inc
orl
bswap
ljmp
push
push
dec
jecxz
popf
cmpsl
sbb
push
mov
fwait
push
and
repz
inc
mov
cwtl
fidivs
mov
pop
bound
xor
sbb
xor
adc
les
push
pop
inc
mov
iret
add
ds
lods
inc
lods
aam
add
in
rcrl
or
cli
mov
ds
lds
in
enter
stc
loope
int
icebp
mov
adc
xor
or
cmp
or
cmpsl
push
xchg
rclb
inc
sti
mov
test
inc
scas
or
stos
imul
adc
popf
movsb
or
mov
mov
adcw
scas
xor
sbb
pushf
push
ja
adc
mov
call
clc
popa
ret
fiadds
push
sarl
jecxz
xchg
je
std
add
ret
leave
pop
into
cmp
imul
in
andb
pop
jmp
stos
lock
inc
pop
repz
xor
test
xchg
cmp
arpl
cwtl
add
dec
sub
inc
movsl
pop
cmpsb
fwait
nop
ret
hlt
xor
cmp
pop
jmp
push
enter
add
leavew
mov
in
push
push
add
push
pop
clc
mov
nop
cmp
mov
mov
lods
mov
mov
ret
sbb
fisttpl
dec
pop
pop
inc
fcoml
cmp
je
add
and
dec
insl
leave
mov
cld
and
add
jle
cs
popa
int
rcrl
jnp
cmpsb
push
cmp
adcl
cmpsb
ja
out
cwtl
and
outsb
stos
mov
cmp
int3
mov
dec
stos
mov
nop
loop
sbb
shl
cmp
adc
cmp
sbb
sub
or
imul
mov
fdivs
dec
mov
stos
adc
push
sarl
mov
testl
and
xchg
mov
ljmp
mov
cld
into
push
scas
or
setbe
mov
or
imul
ror
jle
outsb
or
sub
mov
or
xor
push
aaa
jbe
iret
aam
insl
or
test
xchg
dec
pop
mov
sub
cli
xor
lods
mov
pop
push
and
das
sahf
xor
inc
xchg
int
pop
inc
jne
cmp
push
jp
mov
sti
lock
push
lea
outsb
aaa
mov
dec
in
lret
aas
mov
pop
in
jae
sub
imul
mov
jo
mov
dec
pop
test
cwtl
inc
fwait
xchg
scas
jmp
ja
mov
push
and
cmc
fbstp
mov
dec
and
mov
data16
sbb
stc
les
fdiv
mov
or
sahf
cli
lock
push
xor
mov
push
xchg
mov
or
mov
push
insb
xor
pop
scas
dec
and
sbb
jo
mov
push
int
mov
aaa
cmpl
clc
pop
push
imulb
sbb
mov
int
mov
or
sbb
xchg
lds
mov
cwtl
je
inc
sahf
mov
adc
sub
sarl
dec
movsl
jae
inc
xchg
xor
jp
fucomi
or
or
bound
xchg
pushf
mov
and
adc
idivb
ss
les
sub
and
jecxz
and
loope
rcrl
pop
addr16
dec
ss
adc
inc
xor
outsl
push
fs
dec
jnp
aad
xor
xor
imul
cmp
fucom
loope
sub
sub
mov
xor
js
fisubs
adc
mov
mov
xorl
or
sbbb
inc
xchg
pop
or
imul
pusha
add
inc
inc
lahf
cltd
add
dec
mov
add
mov
mov
or
out
pusha
movsl
addr16
sub
cmp
paddusw
stc
loopne
lods
jno
mov
push
pusha
lret
scas
mov
insl
mov
fwait
addl
xor
add
mov
test
es
into
hlt
jp
rol
nop
lock
shl
mov
mov
pop
data16
and
in
cmp
push
add
shll
hlt
push
outsb
add
out
addb
mov
bound
orb
cs
fucomi
jmp
mov
fbstp
mov
push
mov
mov
inc
shl
lods
push
popf
cmp
data16
in
cmp
inc
add
xchg
jg
adc
fidivs
fstpl
inc
mov
pusha
jmp
and
inc
or
mov
ficompl
push
into
add
test
sbb
add
and
pop
in
and
pop
push
fwait
push
jecxz
mov
xor
and
pop
aaa
rolb
pop
in
inc
popa
addr16
mulb
ja
icebp
jb
push
ds
xor
mov
movsb
idiv
mov
mov
dec
pop
jmp
int
arpl
pop
mov
ljmp
fisttps
shrl
mov
in
pop
ljmp
cmp
data16
ljmp
push
sbb
std
mov
mov
int3
test
stos
shlb
adc
dec
inc
imul
add
sub
cmp
dec
xchg
dec
rcll
ljmp
sti
pop
call
rcl
testl
mov
into
fucomip
push
popa
inc
pop
jne
add
out
shr
cmp
sub
es
adc
mov
imul
push
pusha
nop
daa
mov
inc
mov
adc
or
sbb
fisubs
fwait
ds
lods
mov
in
nop
stc
repnz
jno
pop
xor
les
loopne
pop
movl
sbb
dec
inc
push
insl
pop
pop
adc
mov
dec
daa
in
out
aad
jp
pop
aam
fcompl
ret
mov
movsl
mov
pop
mov
and
repnz
dec
popf
add
xor
mov
into
addr16
loop
test
or
jl
bswap
cmp
pop
mov
jnp
sub
add
inc
and
fimull
and
inc
mov
mov
icebp
es
lods
ljmp
sahf
in
aad
xchg
mov
cmp
pop
inc
outsl
or
repz
clc
xchg
inc
xchg
mov
push
jb
xchg
loop
push
lods
fwait
xor
and
mov
inc
or
or
inc
repnz
in
in
xor
mov
mov
mov
sarb
outsb
xor
jl
push
push
fnstsw
push
push
push
jg
push
pushf
mov
mov
dec
push
adc
cmp
add
jns
pop
pop
aaa
imulb
mov
add
roll
sub
aam
xor
test
lret
push
loop
repz
or
cmp
fldcw
jo
dec
bound
cmp
push
mov
push
adc
clc
lcall
mov
stc
pusha
je
js
mov
aad
ffreep
imul
sbb
popa
ja
sahf
into
sub
jp
loopne
icebp
inc
add
jae
sbb
jae
int
in
out
es
test
mov
push
cwtl
sbbb
ss
pop
adc
adc
and
push
inc
mov
out
pop
cld
or
xor
fs
mov
lret
or
adcb
mov
mov
jmp
movsb
xchg
stos
cmp
mov
movsl
scas
and
insb
je
jmp
or
sub
pop
lahf
push
mov
and
xchg
adc
dec
mov
orb
shlb
jo
movaps
loope
xor
outsl
adcb
jo
inc
mov
mov
fbld
rcrb
inc
and
mov
pop
inc
inc
scas
out
jns
mov
lahf
ret
incl
cs
pop
out
cmp
push
into
push
mov
push
push
sbb
sarb
jp
mov
xchg
mov
sbb
mov
imulb
dec
dec
adc
loope
call
jb
jecxz
and
mov
pop
shlb
mov
jmp
call
mov
aas
pushf
xchg
test
dec
rcrb
and
sbb
mov
inc
insb
es
sub
sti
inc
leave
pop
cmp
cmp
or
out
pop
sub
sbb
push
pop
xor
bound
pop
sub
aad
jo
punpckhdq
and
lret
mov
xchg
aaa
mov
pop
stc
jno
addb
xor
flds
jmp
or
jne
inc
sahf
cmp
lcall
adc
int3
inc
mov
or
ljmp
cmp
in
ror
aaa
push
ret
fndisi(8087
lret
mov
lock
stos
out
xor
dec
rolb
das
sbb
adc
mov
rol
int3
fstps
xor
jl
jns
xor
cmp
aas
addr16
sahf
pop
inc
das
jno
pusha
je
int
ljmp
jp
or
lods
sahf
imul
jbe
and
mov
cwtl
or
adc
shl
mov
mov
cmpsl
std
andb
movsl
arpl
mov
sbb
xor
hlt
les
jo
mov
clc
add
adc
leave
roll
mov
push
xor
push
jb
cmc
mov
jg
sbb
insl
and
hlt
outsb
es
mov
inc
ret
addr16
fistpl
xchg
cmp
pop
pop
ds
mov
adcb
dec
pop
sbb
outsl
loopne
js
or
hlt
sbb
sub
ja
inc
cwtl
pop
fwait
loop
jb
and
add
adc
adc
xlat
aam
pop
adc
shl
jl
xor
les
xchg
jae
test
sub
fcoms
xchg
mov
xor
pop
es
sbb
sbb
or
push
xor
aaa
mov
push
je
and
dec
or
gs
clc
shrb
sub
sahf
and
insl
shll
mov
repnz
fimull
mov
adc
jp
hlt
stos
adc
inc
fdivrl
es
dec
fisubrs
repnz
jge
je
xchg
adc
jo
shll
adc
sub
cld
pop
cmp
dec
bound
or
test
out
add
adc
arpl
add
fldl
loop
jno
sbb
call
aas
std
stc
imul
mov
push
mov
mov
lret
push
out
add
sub
pop
sub
and
clc
loopne
pop
fsub
imulb
mull
cmp
mov
mov
loop
cmp
js
cld
lds
aaa
or
sub
cmp
xchg
push
push
mov
sbb
icebp
movsb
movsl
xchg
mov
dec
aaa
dec
push
xchg
sbbl
mov
or
test
dec
pushf
out
scas
adc
lcall
lret
cmpsb
test
sub
fs
aam
jno
loope
test
pop
mov
inc
xchg
jl
ss
xchg
fldl2e
adc
push
repz
int
push
jl
movsl
int3
loope
pop
dec
push
popf
add
test
inc
int3
mov
test
pop
inc
popa
pop
je
loopne
imul
pop
mov
dec
pop
inc
mov
adc
out
jle
mov
mov
ror
inc
in
pop
mov
cmovbe
cmp
push
sub
sub
notl
fcomps
jl
jle
mov
mov
mov
hlt
lret
dec
aad
sbb
int
lock
sahf
pop
inc
rorb
inc
sub
pop
add
jmp
pop
lods
sub
add
pop
imul
int3
mov
ja
or
mov
int
mov
pop
dec
aas
push
push
push
jb
cmpsl
jb
mov
cmp
cmc
inc
dec
push
out
sbb
cmp
xlat
dec
cmpsb
jmp
mov
adc
arpl
and
xchg
cmp
xchg
cli
clc
inc
or
andb
mov
into
adc
int3
push
data16
daa
and
into
cwtl
aad
into
mov
dec
mov
jmp
mov
mov
mov
pushf
sbb
orl
fstl
sbb
shll
ret
inc
vpcomw
imul
jns
popf
adc
push
sahf
dec
jmp
clc
jo
push
les
inc
lods
mov
mov
movsl
ficoml
cltd
mov
comiss
syscall
cs
mov
sub
mov
dec
cmc
ja
shll
mov
test
aad
jmp
mov
and
push
dec
icebp
lcall
mov
rolb
out
and
xchg
daa
test
rcrb
add
aad
fninit
popf
in
and
ds
jae
dec
inc
or
mov
enter
ret
daa
in
xchg
and
jge
cmp
inc
and
sbb
gs
xlat
push
in
and
cmp
outsb
into
and
inc
sbb
push
sti
mov
sub
shll
push
xchg
xchg
insl
and
adc
wrmsr
scas
in
out
sbb
scas
lret
inc
popf
push
jne
sub
aam
cli
xlat
jae
arpl
jle
repz
xchg
sub
mov
es
dec
xchg
jg
aaa
xchg
push
addr16
iret
push
icebp
push
shrb
nop
sar
aaa
cltd
loope
push
icebp
push
arpl
adc
jbe
mov
dec
test
mov
js
dec
mov
jecxz
fisubrl
jp
sub
dec
jmp
es
mov
daa
ret
test
and
push
outsb
popf
mov
xor
or
adc
mov
lcall
xorb
popa
mov
das
sub
cmp
mov
or
enter
push
lcall
mov
push
inc
mov
aaa
pop
inc
jmp
push
dec
js
add
lea
addb
mov
outsl
es
mov
adc
xchg
or
inc
dec
xlat
icebp
cmpsb
add
ljmp
xchg
loope
xor
and
pop
jge
jo
add
mov
mov
ror
xchg
aaa
sti
insb
mov
jb
pusha
push
lock
clc
jge
cwtl
stc
add
jne
loopne
ss
xchg
and
or
scas
mov
loopne
adc
mov
lods
ret
fbld
mov
rolb
adc
popa
add
jno
and
loop
xchg
cmpsb
fsubp
push
out
pop
adc
lahf
rolb
xchg
pop
sbb
or
add
data16
mov
mov
pop
mov
ret
fnsave
hlt
add
xchg
xor
js
sub
mov
inc
jmp
push
adc
aas
cltd
mov
cwtl
inc
mov
pop
sub
jo
and
jns
jns
test
jmp
das
xor
in
sub
xlat
loop
pop
iret
pop
xchg
dec
out
mov
ret
loope
mov
xor
dec
aas
outsl
jl
les
sbb
pushf
inc
outsb
es
dec
icebp
cmp
scas
ds
enter
imul
mov
xchg
test
dec
adc
adc
push
insb
sbb
push
inc
push
adc
push
ja
xlat
fstpt
jmp
or
pusha
jmp
mov
xlat
shl
xchg
cmp
cltd
in
lods
fs
js
jg
lret
enter
mov
or
sub
shlb
dec
bound
and
xchg
fisubs
imul
outsl
or
int
xor
sbb
pusha
mov
movsl
mov
stos
lds
cmovge
aad
movsl
mov
cmp
sbb
cmpsl
mov
jbe
imul
ficoml
xchg
adc
loopne
repz
lea
mov
mov
fwait
xchg
ret
mov
dec
dec
lods
cli
dec
sub
negl
mov
jno
add
inc
je
scas
andl
clc
icebp
pop
pop
sbb
mov
rorb
data16
out
sbb
mov
je
mov
jg
cmpsl
std
call
insl
mov
dec
mov
sub
sarl
cli
and
pop
mov
aad
mov
cmpsl
jmp
in
pop
mov
inc
xor
ret
cld
idivb
pop
or
mov
in
lahf
mov
adc
mov
stos
lcall
repz
rcr
mov
icebp
sar
mov
mov
rcl
sti
fadds
dec
push
mov
mov
or
sub
inc
mov
ret
addr16
sbb
dec
push
sbb
xchg
out
mov
or
push
or
lods
push
push
fincstp
xchg
inc
and
lcall
dec
out
xor
cmp
sub
jl
mov
cltd
or
mov
aaa
inc
inc
mov
jns
in
imul
sub
in
lret
stc
outsl
jge
iret
xchg
test
sub
arpl
pushf
dec
xchg
xor
cmp
mov
dec
leave
adc
call
pushl
addb
and
enter
aas
and
out
add
xlat
cmpsl
adcb
dec
mov
mov
lea
mov
xchg
movsb
and
mov
rcll
mov
jb
shlb
neg
jb
push
enter
sbb
adc
xchg
pop
pop
movb
shrb
cmpsb
xchg
in
fiaddl
movsl
sbb
int3
sbb
ret
fprem1
xchg
fstp
int
cmpsl
fsubp
sbb
lcall
push
shrb
sub
stos
in
sbb
int3
scas
or
or
adc
insl
call
outsl
mov
aam
or
inc
cmpsl
repnz
and
pop
xchg
aas
into
popf
xor
sbb
bound
adc
imul
add
shlb
push
cwtl
mov
cmp
inc
ret
inc
xor
das
mov
test
push
dec
inc
andb
fs
dec
fmull
loop
ret
mov
jns
cmc
adc
inc
cmc
add
jmp
idivb
jns
xor
inc
bound
cmp
dec
jecxz
sbb
out
pop
and
sbb
adc
pop
outsb
mov
pop
cmp
jg
repz
jno
aad
lret
jg
ucomiss
mov
xchg
dec
jmp
mov
or
inc
add
mov
pushf
push
in
xchg
mov
mov
xlat
repz
pop
dec
cmc
mov
lahf
sub
pushf
mov
push
adc
loopne
mov
mov
push
nop
mov
sbb
adc
pop
pushf
scas
lahf
int
int3
xchg
icebp
push
push
adc
roll
xchg
sbb
xlat
mov
aam
test
or
adc
gs
lret
adc
ret
cltd
mov
xor
inc
dec
jecxz
popa
sbb
ja
mov
repz
inc
js
rcl
inc
xchg
cmpsl
jle
jnp
les
lock
cmp
insb
negl
sub
lea
and
sub
cltd
mov
or
outsl
je
lea
andl
sbb
popf
inc
mov
mov
ret
jp
andb
pop
pop
in
stc
lods
lea
sarb
imul
xor
dec
dec
iret
dec
sbbb
xchg
add
into
add
in
cld
cmp
in
sbb
lods
out
adc
jp
mov
adc
fimull
sbb
das
cltd
fmuls
inc
mov
pusha
xor
push
data16
or
dec
and
or
test
shl
jge
or
dec
mov
pop
mov
imul
out
push
inc
xchg
push
loopne
dec
xor
push
xor
and
pop
xor
jno
fisubrs
int3
stos
std
bound
fisttpll
int
stos
inc
fs
aaa
enter
out
push
lcall
mov
loop
add
ljmp
call
add
int
cltd
out
add
mov
sbb
mov
pop
xchg
loopew
shll
or
in
or
je
push
jecxz
push
jmp
jge
and
xchg
sub
pop
sub
in
add
ja
xlat
pop
jns
mov
cs
ljmp
cmp
push
ds
pop
inc
pop
sub
cltd
push
sub
xor
jns
adc
into
pop
sbb
xlat
push
or
fisubrl
lds
cmp
shlb
fnsave
add
movsl
xor
out
inc
jnp
xor
repz
lea
mov
hlt
arpl
push
es
lock
push
sbb
cmp
cmpsb
pop
sub
mov
jbe
lea
stos
aam
popa
inc
andb
movsb
loopne
lea
scas
and
push
add
dec
and
push
imul
adc
mov
pop
sti
sub
cmpsl
out
fcom
fs
xlat
dec
mov
pop
xchg
jp
jo
inc
cmp
cld
fwait
mov
adcb
add
int3
adc
jae
adc
cmc
sbb
repnz
push
roll
int3
sbb
jbe
mov
xor
push
mov
aam
cmp
mov
adc
add
sub
je
push
rsm
pop
adc
mov
test
and
fistpl
jns
or
sbb
mov
out
mov
daa
xchg
pop
cmpsl
adc
subb
imul
inc
xor
repz
inc
mov
inc
outsl
sbbb
hlt
or
out
fdiv
shlb
daa
cltd
xor
mov
pushf
and
shll
ficoml
push
and
sbb
sbb
lahf
stos
in
jecxz
jo
and
xchg
mov
jb
sbb
sub
jle
mov
cmp
jl
test
repz
in
adc
neg
pusha
insb
ljmp
add
xchg
xor
adc
popf
push
inc
fwait
sub
cmp
mov
outsl
sub
jno
jno
in
mov
mov
addb
and
add
pusha
nop
fmull
sbb
enter
imul
sti
adcl
sarl
adc
es
pusha
cmp
jg
popf
scas
xor
test
jge
sar
and
cmpsl
repnz
mov
out
lahf
jp
subl
jno
cmp
pop
pop
or
icebp
fdiv
adc
pop
mov
xchg
scas
inc
dec
filds
cld
jnp
outsl
inc
test
mov
outsb
xchg
cld
clc
and
pop
jb
jno
cld
pop
or
push
pop
testl
loop
sub
fld1
push
iret
adc
pop
leave
jmp
mov
sub
or
xchg
icebp
mov
clc
mov
or
push
fisttpl
xor
enter
addr16
xor
ljmp
inc
cmp
sbb
dec
cmpsl
pop
pop
inc
dec
dec
cmp
xor
loop
xchg
mov
ret
sub
mov
add
scas
mov
enter
or
test
dec
xor
cmpl
push
cmp
scas
movsl
mov
out
pop
sti
pop
shlb
push
or
mov
jae
or
je
loope
lea
mov
aam
testl
inc
insb
inc
push
aam
andl
or
lods
and
xchg
adc
and
aad
cld
adc
shll
enter
lods
and
and
dec
add
sahf
rolb
out
mov
sbb
xor
xchg
xchg
fistps
xor
rorb
sub
xor
out
xor
add
dec
cs
and
fidivrl
insl
js
test
jnp
jmp
test
push
in
aaa
sarb
in
cmpl
and
out
pop
mov
inc
sbb
or
dec
jb
clc
pop
rcrl
icebp
enter
mov
dec
clc
xor
mov
adc
sub
mov
inc
push
lds
aaa
adc
mov
outsl
cs
arpl
notb
dec
dec
dec
mov
sarb
arpl
fnsave
jg
push
jle
or
jne
enter
shrl
jae
mov
jne
inc
out
cwtl
and
rcrb
lahf
int3
cmp
pop
loop
jle
adc
push
arpl
sub
sbb
mov
idivb
mov
push
push
pop
addr16
dec
push
outsb
and
in
shrb
push
shll
jecxz
mov
enter
lods
add
mov
and
popf
in
cmc
inc
repnz
std
lods
aas
addr16
dec
ja
or
out
push
jns
cmp
xchg
pop
cli
mov
ret
cmp
fisubs
jb
push
xchg
test
inc
jae
mov
int
js
mov
xor
or
and
sub
and
outsl
adc
jb
inc
dec
lea
pop
push
pop
stos
loope
inc
in
scas
dec
xor
mov
dec
inc
xchg
iret
sbb
aam
and
pop
out
adc
mov
shrl
add
xchg
jnp
ja
add
in
fsub
push
pop
loope
inc
and
mov
pop
cmpsb
mov
sbb
mov
imul
fstpt
or
push
jne
into
neg
mov
jb
sti
stos
and
mov
subb
xchg
sbbl
sahf
pop
add
pop
pop
jg
inc
xor
jge
test
arpl
lods
xor
push
insb
sbb
sub
int3
in
jle
xlat
fdivp
sub
mov
fmuls
push
xchg
fwait
cltd
insb
mov
sub
rolb
in
push
add
sbb
pusha
je
mov
dec
adc
dec
sti
sub
push
adc
inc
jne
mov
shld
xchg
jmp
in
dec
mov
push
sub
sbb
mov
add
dec
call
dec
imul
dec
lds
popf
ljmp
mov
nop
mov
adcb
lcall
xor
cli
cld
pop
out
jp
sub
xor
imul
xchg
popf
push
sarl
shr
ljmp
jl
push
cmp
xor
aaa
imul
xor
or
pop
mov
mov
psubw
jnp
push
lods
xor
es
mov
iret
cwtl
cmovns
loopne
add
fistps
scas
ret
inc
hlt
shlb
jbe
cmpsb
push
jne
xchg
add
ret
movsl
fs
stc
push
push
pop
bound
shrl
mov
scas
adc
fidivl
xor
sub
in
inc
scas
mov
movsl
jecxz
and
push
inc
jg
adc
out
inc
jge
cmpsb
cli
or
lods
ja
cmp
outsl
shr
out
pop
lds
fcmovnbe
addb
lea
stos
inc
into
outsb
or
mov
mov
mov
insl
cmp
push
testb
sbb
add
mov
jb
sbb
pop
add
into
test
inc
mov
xchg
jecxz
jns
icebp
xor
jae
mov
sbb
lret
dec
subl
je
gs
sti
xchg
std
sbbl
dec
dec
dec
mov
add
fstps
dec
jge
push
icebp
or
push
arpl
push
jp
stos
jns
and
lcall
mov
mov
les
cmp
popa
fucomi
test
xor
pop
in
jns
adc
mov
or
jne
xchg
and
pop
mov
stc
xor
mov
cs
hlt
cmpsb
sub
add
pinsrw
fmull
jns
jge
jo
ja
loop
in
fcmovbe
js
les
scas
loop
gs
outsb
lea
pop
push
adc
cmp
mov
mov
jb
incb
es
adc
mov
pop
or
loop,pt
sub
popl
push
push
pop
dec
in
xchg
lock
daa
gs
mov
jmp
and
pop
repz
out
push
pop
and
mov
lock
cltd
loopne
add
add
outsb
mov
popf
mov
stos
pop
or
cmp
sbb
lea
lods
adc
add
jnp
sub
cltd
cs
pop
repnz
or
movsl
daa
mov
cld
orb
or
jns
ret
pop
pop
ficoml
clc
das
jmp
mov
mov
xor
hlt
pop
ret
adc
orb
leave
and
adc
fwait
xchg
sbb
adc
mov
add
sahf
cmp
mov
mov
sbb
test
xor
es
dec
adc
movsb
push
xchg
sti
lock
fcompl
jb
and
in
cmp
mov
imul
nop
push
sbb
cmp
jnp
inc
push
jecxz
popf
mov
push
js
mov
dec
loop
sti
and
fnstsw
std
stos
add
lods
decb
pop
lods
insl
inc
cs
cs
lcall
cmpl
jo
out
test
mov
dec
nop
shl
ljmp
es
and
call
cli
push
sub
pop
push
add
jmp
jecxz
iret
in
jecxz
adcl
xchg
inc
sbb
leave
inc
pop
stc
mov
xor
sbb
add
mov
push
pop
jl
in
pop
ss
jbe
loopne
imul
subb
lret
outsl
jecxz
jno
daa
add
in
repz
add
sub
clc
pop
or
xchg
push
out
pop
aad
sbb
test
mov
push
fnsave
or
sbb
addr16
std
push
or
pop
lcall
clc
inc
jbe
mov
lcall
jnp
out
std
and
stos
jno
mov
popf
mov
std
dec
and
movsl
push
movsb
sub
adc
inc
add
aas
xor
inc
jo
into
popa
pushf
mov
lods
cmc
push
push
popf
test
dec
pop
mov
sti
mov
repz
mov
iret
sarb
out
imul
xor
inc
fwait
jae
and
dec
lea
mov
or
sub
insb
in
xorl
addl
mov
pop
fidivl
movsl
data16
mov
sti
rolb
out
inc
pop
add
sar
and
std
cmp
ja
bsf
lret
sbb
cmp
fmull
xor
push
jmp
addr16
jo
pop
dec
and
fdivr
shlb
pusha
push
and
mov
aam
rcrl
and
pop
fs
mov
sbb
out
pop
pushf
and
shll
hlt
push
stos
mov
cmp
int
fmull
or
adc
pop
xor
decl
fcom
loope,pt
dec
pop
xchg
clc
out
pop
outsb
rcrb
fs
addl
cmc
leave
push
test
jge
jbe
pop
aaa
in
adc
testl
adc
rcrl
sbbb
jp
sahf
jbe
sbb
mov
inc
inc
nop
aam
aam
shlb
jle
xchg
mov
gs
jge
sub
shll
jge
jae
and
ljmp
test
repz
scas
mov
dec
sahf
or
mov
mov
sti
mov
fiadds
xor
lahf
addr16
and
lahf
xchg
ja
cmpsb
cmp
fidivl
inc
dec
js
into
pop
inc
cmp
xchg
mov
sub
mov
pmulhw
ficompl
addb
shl
cs
fwait
movsl
mov
push
and
mov
mov
repz
adc
jp
stos
pop
and
adc
sarl
lret
movsl
in
por
xor
mov
imul
psubusw
sbb
leave
cs
mov
mov
xchg
push
dec
push
xchg
mov
mov
fisubrl
sbb
xchg
dec
dec
in
cltd
std
mov
call
outsl
sbb
es
dec
mov
shll
testl
loopne
in
dec
sahf
mov
pop
lret
nop
jg
push
dec
lods
mov
enter
daa
into
divb
jnp
mov
cmp
movsl
pop
xor
cmp
jbe
stos
pop
movsb
jmp
inc
stos
cli
push
stos
push
in
scas
jns
out
jle
mov
imul
xlat
fistpl
sbb
cmp
or
xor
loope
jb
sbb
divl
sbb
push
dec
out
xchg
dec
lds
add
insb
or
cwtl
out
dec
int3
popf
stc
cmova
sbb
and
in
jecxz
cmp
ficoms
xchg
push
mov
cmpsl
call
addl
xchg
mov
mov
push
leave
in
fmul
mov
lods
int3
out
add
stos
cmc
dec
cmp
mov
cmp
inc
sbb
or
jae
fwait
jle
mov
aas
sub
lea
mov
aas
push
jmp
int
mov
daa
xchg
push
insb
rorb
pop
inc
std
jae
ret
mov
push
xchg
pushf
sti
pop
dec
je
push
cltd
notl
push
lret
xor
ret
push
mov
mov
push
jge
repz
fwait
cmp
iret
fbstp
or
leave
test
pop
stos
shrl
add
add
dec
sbbb
xlat
sbb
popf
ds
xor
and
sub
lods
sbb
cmp
cmpsb
mov
mov
popa
add
add
gs
xlat
incb
movsb
lahf
addl
repnz
ljmp
cmp
pop
mov
aaa
cmp
add
cmpl
aam
mov
mov
fucom
aaa
cs
add
add
hlt
adc
xchg
cmpsl
inc
add
sbb
ret
sub
call
fisttpll
or
mov
and
jns
cmp
mov
in
push
es
and
popa
mov
jle,pt
mov
sarl
inc
fisubl
cmc
leave
rcr
inc
xchg
mov
and
test
hlt
iret
xchg
pop
inc
leave
into
pop
pop
icebp
mov
inc
push
xchg
out
pop
fcmovnbe
rorb
repz
adc
sub
lds
jne
or
dec
inc
in
mov
out
or
xchg
jg
dec
insb
lock
push
mov
pop
loop
hlt
into
push
mov
aad
lret
std
xchg
lret
push
mov
dec
xchg
ja
daa
mov
insl
lds
adc
movsl
inc
inc
mov
adc
pop
cmc
out
jmp
xor
mov
dec
sub
add
jns
outsb
repnz
pop
push
pushf
out
lea
jae
mov
or
into
clc
in
nop
pusha
jae
sub
mov
mov
pop
ss
add
sub
mov
sub
mov
mov
decb
xor
lds
pop
mov
lahf
nop
aam
ja
and
cld
or
cmp
xor
sbb
fimull
outsl
fwait
lock
pushf
test
addr16
jp
cmc
sub
faddl
ljmp
loope
sbb
pop
or
loop
push
notl
gs
gs
xor
pop
xchg
out
mov
mov
fucomi
test
dec
subb
sbb
rcrl
fldl
popf
test
push
sub
shlw
fsubrp
popf
and
loope
xor
lods
push
loopne
xchg
xchg
lahf
xor
aam
into
fimull
imul
and
or
icebp
mov
push
adc
mov
dec
mov
xlat
jmp
in
xchg
or
or
es
std
mov
cwtl
xor
add
stos
xor
mov
test
push
scas
pushf
stc
out
fucomp
ljmp
jmp
adc
xor
ret
add
push
mov
bound
aad
in
movl
push
cmp
mov
pop
pop
lret
xor
xor
mov
or
andb
xchg
mov
xchg
cltd
mov
mov
call
inc
lcall
adcl
lock
clc
rcll
xlat
add
mov
pushf
dec
fldcw
lods
pushl
fstps
outsl
xchg
into
push
sub
sub
mov
stos
sti
mov
mov
pop
jbe
stos
xchg
ficoml
dec
jne
cmp
fisubrs
mov
out
jge
mov
mov
xor
pop
xorb
add
inc
cltd
jge
aaa
arpl
cmp
xchg
inc
mov
shrb
int3
or
inc
cmpsl
sahf
push
push
mov
cli
ds
int3
popa
mov
dec
jp
xchg
jo
xchg
cmc
mov
mov
movsb
jp
mov
cmpsb
sbb
cmp
xchg
movsl
jae
jg
mov
pusha
dec
enter
jbe
leave
add
or
mov
sub
pop
iret
cmp
sub
scas
in
sbb
sbb
pop
popf
std
pop
bound
es
push
outsl
sbb
mov
shl
xchg
aas
loop
xchg
aaa
pop
mov
insb
fnstenv
adc
and
xor
sar
dec
jecxz
outsb
out
cld
mov
std
inc
xor
jnp
les
inc
fldenv
lahf
loope
call
add
or
mov
push
mov
sahf
push
mov
push
lcall
pop
int3
add
mov
jg
fcoms
sahf
fists
jmp
push
clc
repz
out
in
adc
adc
mov
mov
roll
mov
dec
cmpsl
mov
in
fistpll
cmpsl
jp
mov
mov
cmpsl
pop
hlt
arpl
daa
pop
and
jnp
and
jg
add
pop
out
movb
popa
in
call
fisubrl
les
repz
add
pop
stc
mull
imul
mov
rorl
outsl
jbe
enter
inc
sub
inc
test
and
jbe
and
stos
cmp
test
push
jg
test
bound
gs
push
faddp
andl
gs
mov
and
aas
inc
push
insl
repz
insl
sbb
mov
sub
cmp
mov
pushw
xchg
push
roll
jne
sbb
push
sub
scas
ja
outsb
pop
repnz
aas
ljmp
pop
and
push
mov
mov
in
xor
xchg
push
popa
inc
stos
adc
fidivl
lcall
push
mov
lds
mov
xchg
push
mov
sub
outsl
dec
sbb
mov
add
mov
lret
dec
pop
cwtl
or
mov
mov
movsb
fsts
mov
scas
pop
call
pop
cmp
lcall
pop
jo
out
dec
xor
pop
cmp
cmp
lret
int3
nop
sub
and
or
lea
out
push
dec
rol
add
daa
lock
or
mov
cltd
push
mov
fsubrs
sti
push
adc
mov
pop
xchg
or
pusha
call
adc
std
test
mov
push
and
andl
repz
nop
push
and
nop
add
scas
mov
cmc
add
lods
imul
mov
scas
test
mov
add
cs
sti
push
stc
js
bound
enter
adc
pop
push
add
mov
rorl
test
cmp
sbb
dec
xchg
or
es
ss
nop
loopne
loopne
xchg
pop
mov
outsl
push
or
dec
fwait
push
enter
rcrb
inc
test
or
push
and
mov
andl
inc
mov
fwait
andl
movsl
insb
sahf
scas
insb
mov
sbb
arpl
movsb
mov
cmp
mov
xchg
inc
movsb
dec
insl
je
jge
jbe
pop
mov
xchg
lret
push
sbb
jge
mov
adc
jnp
cs
stos
adc
je
sbb
cmp
inc
int3
stos
fsin
lret
jbe
and
les
test
jecxz
and
inc
dec
pusha
adc
sbb
int3
jge
testb
adc
mov
gs
jbe
jbe
xchg
das
adc
cmpsl
leave
pop
mov
add
and
lea
mov
jno
stc
dec
and
cmp
push
sahf
out
clc
mov
fisubl
xor
outsb
mov
imul
sbb
sahf
ss
outsl
dec
jo
addr16
jp
popa
pop
ja
jae
pop
xor
cmp
push
js
or
xor
repnz
addr16
stos
enter
push
or
push
lods
mov
pushf
std
clc
movsb
aam
or
lods
xchg
shl
and
test
xor
sbb
adc
push
push
and
inc
sbb
adc
ds
dec
push
aaa
lret
fiadds
dec
scas
adcl
jmp
mov
sub
popa
mov
or
sub
xchg
out
cld
cmp
int3
div
xchg
adc
loopne
mov
lret
sti
lahf
leave
sarl
into
add
sbb
sti
insb
and
inc
rcll
mov
sahf
mov
inc
es
pop
js
lock
jo
rclb
stc
inc
mov
jno
gs
pop
add
out
subl
andl
sbb
lea
sbb
call
scas
testl
je
sub
inc
pop
add
jb
enter
or
sub
icebp
pop
jg
mov
xor
mov
add
xchg
adc
mov
inc
scas
outsl
insl
sahf
add
out
inc
pop
es
sbb
push
inc
mov
das
out
enter
xor
mov
aas
jge
mov
iret
testb
or
rcrl
mov
jp
data16
test
rcrb
cmp
aam
lcall
jns
or
dec
iret
dec
clc
bound
sbb
inc
test
insl
dec
pusha
imulb
fs
mov
sbbl
ret
lcall
adc
movsb
je
loopne
fwait
int
and
mov
add
mov
imul
xchg
iret
mov
sahf
rolb
das
sub
xchg
nop
or
divl
xchg
jno
lahf
out
xchg
sub
outsl
pop
push
lret
sub
mov
outsl
scas
push
xor
imul
ss
scas
xlat
mov
cmp
test
dec
clc
xchg
inc
cmp
fsubr
shrl
insl
mov
dec
pop
rcrb
sti
scas
pop
pop
mov
xorl
movsl
iret
cwtl
or
or
sub
lock
loop
out
test
ss
pop
fwait
jno
lahf
mov
cmp
iret
jb
in
jne
cmc
rol
shrl
push
das
data16
in
in
lret
enter
mov
out
cmpsl
testb
jecxz
daa
adc
ret
sub
add
std
xor
push
movsb
sbb
and
popf
sub
cs
fcmovnu
js
pop
xorps
mov
xor
outsl
int
daa
mov
push
inc
inc
mov
lret
ret
rolb
sub
mov
js
lcall
movsb
or
ds
dec
xchg
lds
inc
pop
mov
push
stc
std
addr16
cmp
jle
out
loopne
and
hlt
idivl
das
adc
outsl
pop
aaa
mov
call
fucomp
pushf
fs
lock
xor
repnz
mov
mov
mov
jns
es
jno
lods
mov
jmp
jns
mov
inc
repz
xchg
and
out
fsubl
pop
lret
push
pop
mov
jne
ds
xchg
and
jbe
int3
stc
insl
fwait
sub
mov
ss
or
int
pop
mov
test
daa
add
push
jg
mov
pop
push
aaa
sub
push
add
dec
daa
xchg
adc
hlt
xchg
lahf
inc
mov
add
and
out
fnstsw
push
shr
sbb
popa
cli
mov
jmp
cmp
pmulhw
sarl
xor
inc
cmp
fcmovnu
xor
push
push
push
enter
adc
dec
aam
xor
cmpsb
ja
xor
mov
in
push
fimull
lret
dec
push
hlt
cwtl
jmp
nop
jae
loop,pt
xchg
push
add
stos
or
mull
imul
cmc
dec
xchg
sarb
xchg
outsl
stos
enter
add
inc
loop
je
clc
nop
lret
mov
stos
mov
js
out
movsb
dec
lds
mov
xor
adc
outsb
pop
mov
inc
into
adc
jo,pn
lret
push
pop
fwait
sub
xor
std
aas
inc
mov
adc
ret
sub
dec
imull
fcomps
mov
xchg
cmpsb
inc
scas
jl
inc
inc
or
loop
mov
pop
ss
inc
mov
jmp
mov
stos
add
in
add
sub
fnstsw
addr16
inc
and
or
inc
aas
mov
das
sub
cmpsl
push
xchg
adc
sti
and
dec
xorb
mov
cmpl
adc
cmp
scas
inc
test
cmp
loop
stc
in
xchg
rorb
in
push
rclb
mov
push
cmp
jg
jp
ror
icebp
xlat
loopne
into
rorl
fidivs
mov
add
sbb
mov
sti
dec
sbb
push
pusha
mov
loop
sub
js
popa
fcom
xchg
push
inc
inc
fstpl
in
jge
in
out
xor
xchg
je
push
mov
xchg
fildll
movsb
stos
jge
or
insb
xchg
sti
insl
scas
and
clc
ds
dec
movsl
imul
inc
sbb
fnsave
sub
icebp
cmp
push
ret
in
mov
mov
push
lret
cltd
ret
push
jnp
aad
lock
in
pushf
scas
xchg
cmp
xor
shr
dec
out
cmpsl
pop
xor
in
in
xchg
dec
test
in
sbb
xor
div
outsb
push
arpl
mov
lcall
ficompl
es
mov
clc
pop
mov
and
pusha
pop
mov
popa
cmc
int3
mov
mov
mov
jne
xchg
mov
or
mov
out
cmp
cmp
mov
pushf
cmpsb
xor
mov
divb
add
cld
xor
in
stc
sub
inc
and
xor
shlb
ljmp
out
in
stos
mov
cmp
cmp
pop
insb
aad
dec
mov
rcrl
sbb
mov
sub
fildl
bound
insb
mov
adc
pop
ffreep
mov
in
dec
inc
mov
mov
xor
inc
cwtl
icebp
cmp
mov
sub
imul
into
test
xor
test
mov
xchg
leave
pop
jnp
sbb
lock
cli
andl
push
xchg
clc
fsubrs
ret
mov
dec
xchg
mov
cltd
push
sub
int
out
mov
sbb
and
sahf
pop
adc
imul
jbe
jmp
daa
push
es
xchg
shl
xchg
dec
lock
jmp
jnp
mov
dec
lods
sub
jne
out
loope
fists
sbb
fidivrl
push
lret
cs
xchg
xor
push
cmp
ljmp
dec
mov
fsubrl
into
das
in
aad
pop
jmp
mov
inc
std
addr16
test
mov
popa
stos
jl
jmp
imul
mov
sbb
or
mov
sub
mov
inc
push
mov
push
or
pusha
mov
jg
clc
mov
loop
mov
dec
add
sub
pop
out
xchg
pop
push
and
out
mov
mov
out
dec
xchg
jno
and
cmp
jno
dec
push
rcrb
rcl
mov
fistpl
xor
lret
dec
mov
jo
mov
stos
mov
in
subb
xchg
pop
stc
pop
mov
add
adc
cmp
in
push
sub
in
out
ret
mov
int3
sarb
adc
in
inc
nop
outsl
mov
mov
repz
dec
cmpb
sbb
repnz
or
test
sbb
andnps
int
xor
pusha
ret
mov
add
sub
sbb
cmp
fnstcw
xor
and
outsb
or
scas
dec
push
cmp
lret
adc
int
int3
sbb
pop
popa
notl
dec
xor
popa
cmpsb
adc
dec
mov
lock
pop
clc
dec
shrb
cmpsl
pop
lret
dec
scas
ds
ds
push
sbb
or
xor
cmp
jmp
dec
insb
data16
loop
out
pop
jns
orl
jns
mov
push
pop
rcrl
dec
rcrl
sbb
int3
sub
nop
repz
adc
das
xchg
lock
mov
and
cmpsb
rcrl
adc
or
out
cs
call
ficompl
inc
mov
jmp
cltd
mov
fimuls
subb
stos
pop
jl
fsubrl
rcrb
inc
lcall
insl
or
xor
adc
pop
in
mov
xor
mov
fnstenv
inc
xor
out
push
sbb
sbb
call
xchg
rcl
sbb
aas
fnsave
adc
in
mov
and
cmpsb
mov
push
push
ret
clc
xor
ret
inc
popa
inc
pop
push
lcall
hlt
sbb
ret
cltd
xchg
pop
loopne
adc
dec
dec
xor
adc
push
jge
jecxz
push
ja
mov
sbb
pop
fadds
mov
or
testl
or
xchg
popf
jns
ret
sbb
adc
lea
and
aaa
pop
sub
rol
subl
push
shll
loop
inc
pop
pusha
movsl
das
mov
dec
inc
jg
test
add
dec
test
loopne
mov
mov
jno
sbb
bound
fistps
cmp
inc
lcall
pop
xchg
repz
add
and
inc
push
insb
push
in
pop
push
push
arpl
in
icebp
imul
les
jnp
loope
dec
adc
cmp
shrb
or
mov
pushf
jae
lahf
ss
jnp
jno
add
in
les
out
cmpsl
rorl
mov
clc
clc
bound
cli
dec
push
inc
jb
sub
xor
or
jecxz
insl
jae
insl
or
in
dec
sahf
add
addr16
xor
jg
in
adc
mov
sbb
push
das
dec
gs
add
mov
stos
push
pop
xlat
and
inc
sbb
in
scas
cmp
insl
rcl
inc
scas
lahf
negb
mov
xor
lds
aas
dec
loope
and
mov
xlat
jl
sti
stc
imul
jo
daa
sub
sbb
add
dec
inc
imul
sub
sti
and
mov
push
leave
int3
sbb
out
mov
push
mov
lds
mov
sbb
push
xorb
jl
fisttps
xchg
test
in
test
dec
notb
mov
fcomp
fisttpl
jl
clc
sub
or
imul
pop
cmpl
inc
hlt
hlt
or
xchg
mov
xchg
and
xor
cwtl
and
iret
xchg
out
dec
push
jnp
jg
mov
mov
xlat
or
mov
mov
mov
push
nop
ljmp
lods
jae
lahf
ficompl
shll
dec
shll
push
ror
sub
stc
decb
cmp
cltd
addr16
xchg
pop
add
shll
imul
dec
add
cmp
jge
sbb
sbb
lds
mov
push
push
cmp
ficompl
mov
das
sbb
stos
out
addl
fdivs
jg
mov
les
pop
insl
jle
int3
inc
inc
push
sbb
pop
jbe
loope
sti
test
arpl
push
inc
mov
inc
jno
cwtl
and
mov
mov
push
test
pop
push
mov
push
pop
sbb
xor
or
pushl
dec
mov
adc
lds
test
sbb
inc
jbe
inc
or
fsubrs
cld
pop
xor
jo
movsb
push
or
mov
rcrl
movsb
hlt
and
cmpsl
sarb
in
xchg
sti
add
mov
cs
dec
shll
push
pop
mov
mov
pop
pop
jecxz
mov
jbe
or
push
sub
test
pop
loope
mov
lcall
out
rolb
inc
nop
popf
mov
ret
push
mov
fmuls
push
cli
sarl
hlt
adc
cmp
xlat
dec
xor
in
notl
sub
decl
mov
push
daa
je
cmp
movsb
aas
add
je
mov
or
mov
adc
dec
std
cmp
ret
sub
mov
test
xchg
outsl
jge
add
lea
push
mov
or
dec
arpl
dec
mov
sbb
mov
addr16
mov
dec
out
gs
pop
mov
add
dec
insl
adc
es
xor
movsl
hlt
pushw
cs
idiv
lea
mov
into
aas
out
dec
in
leave
or
imul
outsb
out
cmc
lods
push
and
dec
insl
adc
fs
fwait
xchg
xchg
cltd
jmp
cmp
fistpll
popa
jmp
or
stos
repz
mov
adc
insw
std
pop
fdivl
adc
jo
dec
inc
xchg
in
mov
insb
pushf
daa
stos
hlt
cmpsb
dec
adc
adc
hlt
mov
sahf
ret
hlt
cmpsl
push
sbb
sbb
cmp
arpl
inc
cwtl
and
dec
in
in
mov
cmp
push
repz
cmp
inc
push
xchg
adc
mov
pushf
stc
pop
out
leave
test
jl
cwtl
or
hlt
inc
and
or
lret
fs
inc
mov
stos
ret
icebp
ljmp
insb
fwait
cwtl
aas
pop
insb
fimuls
xor
fisubrs
pop
fbstp
lcall
fisubl
out
push
jmp
mov
add
stos
jnp
sbb
pop
rcr
loop
out
jg
out
int3
sub
clc
xor
mov
xlat
loopne
jbe
jb
mov
repz
cmpsl
push
mov
adc
mov
push
xlat
sbb
sbb
testb
pusha
out
mov
mov
sub
ret
ss
sub
pushf
in
add
ret
js
into
push
cmp
int3
dec
das
xchg
adc
testl
pop
mov
and
adc
add
push
push
jo
mov
pop
dec
rcrb
testb
xchg
push
dec
out
in
fildl
int
or
pushf
sbb
fstp
xchg
fildl
jnp
cltd
push
stos
add
movsl
test
and
pop
into
fwait
xor
or
push
fadd
jp
movsl
push
xchg
in
and
dec
jp
inc
or
or
call
aas
push
mov
or
and
add
cmpsl
pop
jp
add
cltd
pop
enter
rcr
es
fld
sub
lret
mov
inc
call
rclb
mov
dec
stc
and
stc
repnz
shrb
lds
adc
popf
ds
aad
xor
test
inc
loopne
inc
mov
mov
mov
fld
dec
and
ret
push
xor
loop
sub
fisttpl
add
decb
and
sub
jle
dec
or
lea
addr16
iret
xlat
stos
xor
in
je
inc
inc
in
or
jle
mov
xor
add
adc
push
inc
loopne
filds
adc
mov
mov
in
or
sbb
push
inc
shll
dec
call
xor
push
les
jnp
mov
pop
dec
sti
fs
fstps
ja
jmp
fst
sub
daa
cld
cmc
arpl
jb
xor
adc
add
and
push
cmp
fwait
dec
xor
lods
push
add
mov
and
inc
je
jno
rolb
ss
outsl
pop
sub
movsb
push
and
daa
lock
cmp
cmp
aam
lret
pop
lods
insb
and
or
jo
inc
shll
push
lock
rorb
xchg
pop
repz
sahf
insl
dec
push
out
inc
outsl
jnp
sbb
aaa
sti
cmp
lds
inc
pop
imul
xor
fstpt
dec
mov
or
je
jp
pslld
imul
or
fsubrl
das
add
out
mov
call
insl
xor
pop
cli
and
in
sub
lods
nop
arpl
add
and
adc
ljmp
jecxz
and
mov
rcl
test
cld
jno
mov
lods
cmp
mov
pop
sbb
xchg
and
jb
xor
clc
fcomps
push
aaa
clc
scas
je
mov
jo
or
or
out
std
ljmp
mov
pop
sub
into
out
mov
bnd
dec
dec
inc
mov
sbb
sub
mov
data16
pop
dec
dec
imul
or
gs
and
neg
das
mov
jnp
adc
ret
pop
adc
mov
and
divb
xor
mov
cltd
cwtl
ss
adc
adc
dec
dec
mov
inc
and
xor
xchg
add
jo
xchg
sub
sbb
into
rcrb
loope
sahf
fstpl
rclb
icebp
ror
mov
adc
or
add
imul
mov
dec
sbb
int3
cmp
pop
push
into
push
mov
push
xchg
mov
test
jge
pop
xchg
inc
push
mov
sbb
mov
cli
adc
aas
xchg
int
out
sti
push
test
or
xor
or
cmp
push
cld
jg
lret
xlat
mov
push
adc
add
inc
dec
cmp
sub
mov
add
es
pop
dec
sub
loope
fcomp
pop
adc
dec
ret
jno
mulb
lahf
insb
sbb
rorl
outsl
dec
cmp
mov
popa
enter
rcll
iret
xchg
ja
shrl
xchg
nop
std
dec
out
or
pop
repnz
mov
adc
cmpsb
pop
pop
push
cltd
dec
std
jg
pop
xchg
pop
dec
movsl
cmp
mov
adc
fldcw
cli
leave
xchg
hlt
xchg
and
into
out
mov
mov
js
push
loope
aam
push
pushf
inc
jae
cmp
lock
fisubrs
popf
cld
add
mov
movsb
jmp
xor
sub
mov
and
mov
mov
repnz
cwtl
jo
inc
pop
lods
dec
pop
mov
hlt
mov
cld
mov
mov
dec
es
xchg
mov
and
xchg
ljmp
imul
xchg
pushf
add
mov
jle
xor
xor
pop
fcoml
mov
out
pop
xchg
and
sahf
or
and
mov
outsb
shlb
lahf
mov
hlt
add
cs
jge
lea
repz
or
sahf
xchg
jg
test
cmpsl
cmpsl
dec
mov
or
jle
pop
aaa
pop
loop
mov
cmp
int3
je
sub
jnp
clc
pop
inc
mov
lahf
mov
cmp
inc
jne
push
jmp
xor
shl
xor
or
sub
cmpsl
jmp
xchg
insl
out
mov
cwtl
in
cltd
rcl
pop
or
inc
cltd
or
test
fs
jmp
jmp
push
or
je
push
outsl
icebp
mov
gs
push
popf
mov
push
hlt
sbb
ret
shlb
int3
inc
imul
pop
dec
leave
inc
add
or
add
and
loop
ja
jge
movsb
xlat
push
cld
cs
filds
jl
push
es
hlt
fsubs
daa
das
or
adcb
sbb
test
repnz
mov
test
pop
jle
inc
scas
and
sub
jne
je
dec
lcall
mov
ret
xchg
mov
shll
push
inc
sbb
sub
inc
outsb
dec
push
iret
repnz
inc
insl
adc
and
arpl
mov
jle
pop
jb
icebp
notb
or
push
sub
gs
jns
inc
outsb
cmc
in
ja
pop
xor
and
je
ret
and
xchg
in
push
test
subb
jl
mov
dec
std
jbe
push
repz
and
jecxz
mov
add
push
push
xor
push
rcrl
dec
dec
jmp
inc
cmc
movsl
icebp
jno
divb
fsubs
ljmp
sahf
testb
xor
jno
sarb
ss
imul
add
lret
out
sti
movsl
mov
jg
dec
pop
push
adc
xorb
mov
in
or
xor
cmc
pop
mov
add
hlt
fadds
std
aad
pop
or
stos
rcrl
int3
cmp
pusha
insb
pop
cmc
sahf
aad
inc
add
pop
out
push
jnp
jl
jecxz
es
xor
dec
ret
jno
adc
jns
mov
out
in
int
aas
mov
xlat
add
inc
subl
dec
add
mov
dec
mov
mov
mov
pop
movsb
ja
add
xchg
loopne
pop
mov
lods
adc
into
scas
inc
jge
add
pushf
adc
cmp
test
adc
dec
rol
sbb
mov
jmp
loope
imul
mov
inc
jnp
cmp
xor
mov
mov
pop
rcl
mov
dec
mov
xchg
shr
or
test
mov
or
lock
outsb
ja
repnz
idivb
outsl
lcall
cmp
adc
push
aad
lods
mov
in
mov
int
fcmovbe
jmp
enter
je
mov
enter
inc
ss
orl
and
pop
or
inc
mov
adc
addr16
into
lods
and
inc
mov
lods
rol
pop
inc
cwtl
bound
xchg
push
dec
test
int
je
inc
jae
into
push
jno
or
jmp
cmp
mov
mov
pop
pop
aam
mov
mov
xchg
sub
icebp
inc
leave
inc
push
into
sbb
inc
xchg
cmp
adc
jg
in
jl
sub
int3
enter
or
out
jnp
pop
dec
mov
xchg
hlt
push
push
imul
and
popa
lcall
scas
or
adc
mov
and
cmp
xor
dec
push
mov
pop
adc
mov
jbe
mov
sub
add
insl
aas
or
inc
out
into
pop
shl
stos
xchg
xor
enter
xchg
fucomi
push
and
iret
pop
push
sarb
inc
xchg
sbb
cmp
int3
xchg
test
mov
rcll
cs
cmpsb
xor
icebp
je
sbb
loop
bound
push
addr16
icebp
xor
stos
push
xlat
xchg
rclb
leave
xchg
mov
popf
inc
pop
sahf
mov
inc
dec
stc
add
mov
mov
movsb
pop
mov
adc
test
pop
and
xchg
jmp
mov
les
pop
push
aam
pop
test
outsb
inc
or
pushf
imul
mov
lcall
cwtl
xchg
cmp
test
dec
incl
out
fstpl
mov
cmp
aam
push
push
es
dec
add
xor
sub
inc
lret
test
lahf
inc
movsb
fadd
or
into
push
mov
stc
xor
or
xor
mov
pop
push
nop
fcmovne
mov
ret
ss
stos
popf
cltd
jbe
aam
sbb
mov
insl
iret
inc
push
inc
push
lods
popa
test
dec
fwait
mov
jmp
pop
in
sbbl
xor
adc
stos
negl
fstps
push
or
les
add
xor
sub
pop
push
loopne
pop
cmp
mov
xchg
xchg
adc
push
add
inc
mov
jo
jg
mov
leave
dec
stos
fs
hlt
aam
fisubrl
insl
lret
in
into
cmp
lock
sub
ret
test
dec
mov
push
gs
push
jae
std
hlt
ja
aaa
sub
push
xlat
iret
stos
inc
push
mov
push
out
adc
sbb
les
mov
cmp
popa
push
cmp
jns
sub
scas
mov
into
cmp
loop
adc
jb
push
push
lcall
pop
dec
addr16
jmp
jle
fistps
inc
inc
mov
mov
dec
jnp
cli
dec
xchg
jnp
pop
or
icebp
scas
sbb
pop
jo
xchg
icebp
sub
mov
leave
cltd
adc
aam
aas
cmp
push
inc
xor
xchg
sub
mov
jg
outsb
cmp
jmp
and
dec
daa
insb
movsl
daa
repz
fimuls
int
leave
mov
imul
cmp
cmp
ficompl
cwtl
jb
xchg
and
fldenv
js
mov
adc
lahf
adc
div
iret
jo
push
je
mov
add
fistpl
andl
xchg
into
xchg
dec
xchg
test
mov
xor
bound
jno
jecxz
lahf
cmp
movsb
out
xchg
push
scas
outsl
and
or
inc
jg
mov
or
sbb
or
fadds
lcall
add
mov
add
jp
test
mov
out
add
push
test
test
stos
jns
pushf
std
add
in
cmp
push
push
and
loop
xchg
hlt
mov
stos
cmp
leave
call
inc
sti
fidivs
sub
and
sbb
ja
stos
jge
dec
popf
sbb
inc
outsl
add
xchg
jge
rcr
dec
inc
stos
hlt
adc
sbbb
repz
inc
mov
add
fwait
push
mov
pop
les
mov
sbb
test
mov
cld
aad
mov
cli
push
inc
lahf
insl
mov
stos
aad
mov
sub
mov
and
enter
jae
fistpll
xchg
fabs
jl
movsb
xchg
dec
inc
xchg
add
ret
in
mov
jne
cld
ja
xor
jmp
mov
jo
int3
les
leave
std
outsl
dec
popa
lahf
fwait
inc
or
sub
mov
test
push
mov
lret
inc
pop
dec
xchg
call
jno
mov
push
test
xchg
dec
fdivs
rolb
xor
sub
and
movsb
push
lods
mov
fsubrl
push
sbb
movsl
fwait
outsl
and
jo
push
ret
adc
fs
xchg
mov
inc
cltd
cld
cmp
enter
cmp
push
jne
jnp
cmp
cmpb
or
cltd
xor
lret
mov
scas
push
adcl
sahf
pop
mov
xchg
adcl
sbb
stos
add
xchg
sub
mov
push
sti
test
mov
lods
add
bound
and
push
aas
mov
test
lcall
sub
pop
scas
pop
test
lcall
pop
test
das
loope
dec
inc
hlt
fistps
pop
fcomip
jo
cmp
cltd
aam
pop
push
sahf
mov
shll
adc
inc
pop
xor
dec
loope
popa
fists
sarb
push
sub
push
cs
in
cvtpi2ps
icebp
lea
aas
sti
and
sti
inc
test
inc
pop
mov
adc
push
mov
lea
sbb
lods
sub
loope
mov
sub
fwait
lds
out
push
xchg
mov
cwtl
out
sbb
add
pop
dec
inc
push
loop
push
dec
data16
pop
fistpl
adc
and
mov
pop
fsubrs
adc
enter
or
add
gs
fs
insb
loop
xor
js
add
pop
hlt
arpl
lret
xchg
adc
cs
cs
sub
pop
inc
pop
cmp
cld
test
hlt
ret
and
xor
out
stc
jo
enter
and
jae
scas
or
lods
shl
and
imul
mov
xchg
roll
push
movsb
aaa
mov
xchg
jmp
adc
sbb
ret
sti
ret
popf
xor
hlt
out
outsb
cmp
and
cmp
in
jge
fwait
dec
push
add
add
jmp
sub
enter
in
leave
int
in
dec
pop
pop
add
mov
adc
cmc
pop
divl
push
rol
fsubrs
aas
or
pop
push
adc
outsb
out
sbb
mov
sbb
rcrl
inc
negl
push
out
imul
add
iret
inc
jbe
dec
xchg
dec
xchg
lods
jge
sub
mov
jno
lcall
push
dec
lret
aad
mov
and
xchg
jne
jb
ds
shrb
les
and
mov
pop
add
or
dec
mov
push
movsb
data16
mov
ja
ljmp
vpalignr
inc
pop
mov
rolb
icebp
fsubl
lock
mov
hlt
mov
mov
push
pop
adc
or
jb
add
mov
fdivrl
inc
adc
std
xor
cmp
pop
push
das
int
or
xlat
xchg
stc
or
xor
scas
stos
and
in
sbb
push
fsubr
xchg
push
or
jecxz
push
dec
sub
fwait
inc
mov
pusha
or
nop
test
enter
mov
xlat
sbb
jno
dec
int
mov
jns
aam
aad
dec
out
lock
mov
xor
xor
aaa
push
sbb
movsb
mov
push
fdivl
test
es
pop
sbb
fucomip
in
push
lcall
and
sbb
mov
jmp
addb
dec
in
arpl
pop
xchg
imul
mov
movsl
sbb
mov
jb
inc
fldl2e
inc
loopne
nop
sbb
lret
fcoms
dec
lea
je
dec
mov
int
es
jle
xchg
mov
in
stos
sbb
in
icebp
pop
push
mov
std
or
xchg
ja
pop
adc
test
or
dec
xchg
pop
mov
or
sahf
xor
das
sar
mov
out
or
enter
fists
push
sub
outsb
scas
pop
sbb
pop
cld
pop
enter
into
psubsb
pop
lcall
jmp
mov
push
cmc
sub
lahf
fildll
xchg
fidivrs
mov
addr16
sahf
mov
adc
add
lahf
sub
outsl
add
hlt
inc
sti
xchg
push
outsl
dec
lret
sahf
data16
sbb
mov
cmp
ret
push
fadd
push
jno
sti
push
jmp
jmp
pop
push
sub
mov
and
pushf
sar
push
leave
in
sub
ret
fwait
jmp
xchg
mov
sti
pop
jae
gs
mov
mov
mov
int
dec
mov
loopne
and
sub
mov
or
mov
and
sahf
lods
adc
mov
je
sbb
flds
mov
mov
notb
and
jns
popf
mov
cli
test
fisubs
cld
lret
rolb
mov
xchg
push
rcll
or
andb
or
sar
inc
aas
mov
pop
push
pop
js
add
repnz
faddl
addb
inc
sti
test
idivl
push
leave
xchg
shrb
std
push
lea
jecxz
sbb
add
xchg
mov
mov
incl
push
nop
test
pop
out
mov
xlat
adc
lea
fildl
stc
adc
inc
orl
push
sbb
pop
cmpsl
out
push
mov
rcrl
jns
mov
lds
test
int
add
stc
and
mov
pushf
dec
mov
pop
jp
or
les
cmp
insb
xor
lock
cmp
int
jae
hlt
mov
add
dec
adc
or
sbb
mov
lods
imull
mov
cmp
add
inc
adc
sarl
adc
test
jnp
dec
xchg
xor
in
adc
push
pop
mov
xchg
arpl
sbb
data16
cltd
arpl
jecxz
pop
stc
jno
mov
mov
sub
pushf
in
mov
inc
or
or
push
sub
mov
mov
pushf
popf
scas
ss
call
mov
jnp
aas
aaa
push
insl
push
or
xchg
dec
ss
outsw
lods
rcrb
arpl
inc
ljmp
jo
movsb
pop
mov
jo
rcrb
push
add
repz
and
fsubl
xchg
lock
jecxz
fisubrs
in
ficompl
jl
js
aam
mov
xchg
push
push
ss
pcmpgtw
jecxz
fbld
mov
insl
and
xchg
test
adc
cltd
cmp
and
mov
mov
cmp
fldt
inc
cmp
pop
sbbb
mov
add
out
mov
insb
jns
pop
and
push
stos
aas
mov
mov
dec
push
adc
push
dec
das
mov
push
xor
in
sub
adc
mov
xchg
imul
sbbl
out
and
cmpb
mov
pop
add
fdivrs
je
cmp
jge
pusha
mov
add
test
lcall
stos
lods
and
xchg
out
mov
aas
push
stc
pop
test
dec
mov
xor
mov
bound
mov
sbb
xchg
insl
data16
and
ret
cmc
in
adc
dec
jecxz
test
and
dec
stc
mov
sbb
cmp
cmp
or
jp
hlt
mov
mov
adc
fmuls
pushf
arpl
cmp
push
icebp
psllw
jb
push
jp
sub
adc
sub
sub
dec
inc
fbld
push
in
add
inc
adcl
mov
add
sub
jmp
aaa
xchg
xor
sti
push
pushf
insl
ret
mov
lret
pop
jecxz
push
es
push
inc
test
into
push
dec
testl
xlat
xchg
leave
loopne
jnp
xchg
insl
scas
fs
outsb
push
or
test
jle
push
test
inc
inc
xor
imul
xchg
shrb
jle
push
cmp
out
jbe
pop
xor
jmp
cmp
imul
jmp
adc
cltd
fmuls
add
xor
sbb
ss
add
loop
stos
stos
out
mov
rorb
xor
test
aas
mov
push
sahf
pop
pop
movsb
xor
sub
cmc
jmp
adc
mov
shrb
je
outsl
outsb
leave
xchg
hlt
addb
mov
int
add
push
adc
pop
les
outsl
dec
subl
mov
add
sub
cmpsl
jmp
mov
pop
cmpsl
fld
insl
lcall
pop
add
jg
sub
adc
fstpt
arpl
inc
mov
mov
xchg
stos
jae
call
arpl
or
lcall
jecxz
xor
ds
push
add
mov
cmp
inc
adc
jne
jbe
and
adc
ds
mov
mov
mov
shlb
lock
jmp
mov
push
add
in
mov
stos
jmp
pop
mov
imul
or
dec
fdivr
mov
dec
xchg
jns
cmp
xchg
or
push
push
out
mov
mov
std
popf
or
sti
push
psllq
mov
sarb
push
mov
mov
add
adc
add
in
xchg
fucomi
sub
mov
add
shl
xor
xchg
push
mov
sub
outsl
add
jmp
mov
in
popf
incl
popf
popa
inc
daa
mov
sbb
enter
adc
push
mov
jecxz
xor
into
add
fadds
sub
lahf
arpl
mov
push
sbb
sti
mov
add
xchg
mov
jecxz
sbbb
mov
cmpsl
xor
ret
les
pop
movl
inc
inc
stos
pushf
inc
bnd
loop
add
ljmp
jb
pushf
lahf
mov
push
mov
or
mov
inc
inc
sub
pop
jbe
repnz
mov
xor
aad
int3
or
add
sbb
dec
cmp
cmp
stos
push
loope
push
or
pusha
clc
cmp
xor
loope
push
jbe
mov
pushf
scas
sbb
sbb
push
inc
mov
cs
mov
push
adc
inc
pop
sub
inc
push
fdivrs
add
pop
enter
jg
dec
mov
gs
dec
cwtl
test
fcomp
lods
sbb
jecxz
jbe
jg
shr
pop
into
loope
and
adc
and
mov
pop
dec
push
cmp
outsl
fistl
addr16
out
cmp
mov
test
inc
aas
sbbl
add
adc
push
dec
and
xchg
adc
push
xor
dec
js
xor
insl
jmp
cmp
pushf
bound
jb
mov
xorb
scas
xchg
test
adc
xor
and
call
jge
mov
push
iret
fld
fwait
inc
roll
popf
pop
leave
ljmp
adc
les
push
or
fst
out
insl
shlb
pop
mov
mov
scas
or
je
loopne
xchg
setns
cmpsb
add
mov
mov
mov
push
inc
adc
cmp
sbb
push
sbb
movsl
inc
dec
mov
sbb
mov
shlb
test
into
and
pusha
xabort
out
and
mov
ds
ss
add
push
pop
push
ficompl
add
orb
iret
add
xchg
jmp
xchg
pop
dec
mov
ret
cmpsb
scas
cmpsb
int3
notb
cmp
int
inc
loop
dec
cmpsl
iret
dec
inc
mov
not
add
ss
pop
imul
pop
mov
add
inc
lock
enter
sbb
fidivl
movsb
pop
insl
cltd
dec
fwait
xchg
xor
inc
icebp
xchg
popf
push
or
push
in
xor
mov
jnp
xchg
lods
scas
sbb
aaa
pop
push
mov
push
sub
in
or
bound
jp
pop
pushf
pusha
xor
push
fwait
ljmp
repz
aam
call
movsl
jnp
push
aad
ds
adc
sub
fwait
pusha
dec
xor
pop
fwait
push
cmp
pop
cmp
mov
mov
push
push
clc
sarb
shll
mov
mov
je
lds
icebp
push
out
pop
xchg
sbb
in
imul
shr
insl
xor
in
xchg
push
xor
aas
xchg
lretw
push
gs
ljmp
mov
test
inc
push
rcr
inc
stos
clc
xchg
xchg
fsubp
addb
push
sbb
adc
std
sbb
imul
and
mov
push
int3
fdivs
scas
dec
call
xchg
incb
fcompl
inc
mov
andb
int3
mov
mov
enter
jb
movsb
sbb
push
jmp
les
mov
stos
inc
xlat
mul
mov
xor
data16
leave
call
icebp
shll
out
enter
push
cmc
xor
clc
mov
out
sbb
mov
sbb
mov
sbb
orl
dec
rcl
sbb
xchg
mov
adc
int3
pop
xor
insb
push
add
pop
xchg
and
ss
repnz
dec
fnstsw
leave
fwait
dec
aas
lods
addb
sti
adcb
nop
add
iret
std
jg
lds
dec
push
push
adc
mov
or
ds
and
orb
addl
adc
xor
iret
adc
mov
fmuls
push
xchg
pop
ret
cmp
sbb
repnz
jno
jle
ret
adc
xchg
push
cmp
imul
xchg
mov
inc
jae
push
es
shlb
lock
lret
pop
adc
mov
sbb
mov
push
out
mov
iret
xlat
xchg
cmc
enter
ret
insl
fnstsw
mov
jo
pop
jl
pop
out
cmc
cmp
mov
das
push
divl
or
das
ja
mov
xlat
mov
push
ror
mov
js
sbb
pop
cmpsb
cmp
xor
xchg
push
ds
insb
lods
mov
mov
mov
push
stc
mov
movsb
jne
cmp
lahf
call
sti
pop
stos
dec
mov
mov
out
mov
fucomp
lahf
lods
lret
mov
add
adc
inc
and
dec
nop
push
mov
mov
addr16
loop
inc
dec
fnstsw
mov
push
jg
lods
push
push
rcl
mov
movsb
adc
incb
scas
xchg
xor
outsl
in
clc
xchg
fwait
idiv
mov
stc
push
dec
push
stc
jae
daa
leave
sahf
fs
stos
call
sub
fstl
fstl
mov
movb
and
jge
mov
jecxz
ds
xchg
in
test
ret
orl
pop
stos
mov
test
in
push
stos
arpl
testb
cmp
jbe
dec
ss
aas
fsubs
pop
cmp
mov
fwait
mov
inc
jp
imul
cli
les
jbe
rclb
jmp
lea
inc
lret
push
sub
cmp
and
push
sub
adc
mov
mov
mov
stos
jle
jne
xor
fwait
leave
add
xchg
dec
lret
sub
xchg
je
xchg
push
pop
and
sbb
sarb
es
mov
mov
mov
cli
add
cwtl
rclb
xchg
add
jg
cld
cld
inc
nop
addl
xor
sub
jb
mov
push
xchg
jae
ljmp
fwait
sub
scas
rolb
outsb
sub
repnz
push
icebp
push
das
pop
mov
mov
add
sub
xor
or
je
mov
out
gs
xchg
lods
loope
xor
add
sub
xlat
in
mov
test
add
push
mov
sarb
aad
sbb
sub
mov
xchg
push
adc
into
mov
mov
add
stc
jge,pn
lock
sub
mov
aaa
sbb
int
hlt
push
add
sub
lods
test
rolb
push
jb
out
bound
jnp
fbld
dec
daa
jge
cmp
shll
xchg
imul
repz
pushf
ror
push
rcrl
adc
or
int
ret
mov
mov
sahf
push
enter
daa
jb
test
push
inc
sub
js
fdivl
cli
push
fstps
lret
sbb
xor
add
push
mov
loope
cwtl
jg
or
lock
add
xchg
mov
arpl
shrb
ret
icebp
sub
jno
xchg
imul
sbb
adc
aam
jnp
mov
xchg
das
adc
std
pop
imull
dec
push
cltd
fnstsw
lret
mull
cmp
decb
add
pop
xchg
popf
stc
out
push
inc
sbb
sub
jmp
out
jbe
ret
iret
movsl
cmpl
shll
lea
jmp
test
data16
dec
flds
pop
insb
outsb
arpl
xchg
sbb
fmull
mov
adc
mov
or
jge
inc
insl
sbb
das
adc
cmp
jo
divl
mov
rcl
push
dec
add
loop
mov
data16
bound
xor
into
sbb
push
into
in
shr
inc
jmp
es
in
imul
out
in
mov
jg
lods
sbb
lahf
xchg
lahf
pop
mov
cmp
mov
aaa
pop
fnstcw
or
cld
sbb
xchg
sbb
sbb
sbb
pop
dec
cmp
and
xchg
nop
pop
divb
fs
lahf
cltd
ss
imul
adc
fsubrl
and
xor
in
add
in
insb
and
xchg
sarl
outsb
data16
xor
call
ja
aam
in
cmp
outsb
lret
les
mov
jl
andnps
jae
xor
shrb
pop
jge
cld
cmp
push
inc
rcrb
aad
mov
pop
pop
or
mov
jecxz
sbb
adc
clc
mov
fwait
insb
adc
rolb
ret
dec
lcall
sar
lahf
sub
test
insl
imul
scas
dec
sti
pop
fwait
lds
leave
cmc
ds
les
mov
xor
xor
and
mov
or
add
pop
loopne
xor
or
test
sub
adc
cmp
fwait
and
xchg
addl
or
adc
shlb
cltd
cs
jl
adc
ss
icebp
xor
sub
or
jg
xor
inc
mov
mov
stos
pop
jmp
adc
test
lds
icebp
outsl
add
jle
test
shrl
add
push
xchg
xor
js
ret
dec
mov
jl
jle
add
mov
out
jle
das
sub
pusha
add
jp
cmpsb
mov
lret
ds
dec
sub
add
fs
mov
loope
loopne
leave
pop
aas
push
push
cmp
outsl
pushf
xchg
jnp
adc
fistpll
mov
ss
pop
xor
dec
cmp
pop
int3
stos
adc
daa
jno
mov
aas
fistps
mov
addr16
das
popa
data16
das
das
mov
sub
insl
enter
xchg
fistpl
sbb
jne
or
incb
stos
xor
pop
mov
dec
arpl
mov
int
or
popf
jb
mov
imul
shrb
lahf
call
dec
mov
addb
or
push
ficomps
sahf
je
jbe
daa
dec
add
xchg
dec
test
fcoms
sub
call
pop
cs
cmc
les
dec
jnp
or
clc
and
test
popa
push
addl
inc
jo
cwtl
and
call
jno
add
dec
hlt
mov
arpl
push
ret
out
mov
xlat
adc
frstor
xchg
sbb
mov
std
insl
leave
cmp
cmp
sbb
shrl
in
fldcw
xor
insl
hlt
in
ret
xor
push
inc
pop
cmpsl
cmp
xor
push
into
sub
enter
sti
hlt
sahf
lahf
pop
and
mov
addl
jle
pushf
fisttpll
or
in
pop
sub
dec
dec
repz
push
mov
outsl
test
add
dec
loop
outsb
inc
sti
mov
jecxz
mov
insl
xor
push
xor
imul
push
inc
fidivrl
jno
mov
enter
aas
and
jbe
dec
pop
push
pop
sti
xor
mov
ficompl
notl
rorl
loop
mov
lea
arpl
xor
push
push
adc
sbb
push
and
pop
rolb
push
popf
jle
inc
mov
insb
jb
lods
sub
icebp
xchg
mov
stos
inc
or
adc
fiaddl
xor
gs
push
inc
jmp
fstl
jno
neg
jecxz
cmp
mov
mov
or
sbb
jae
jo
popa
jns
add
mov
ret
mov
or
outsb
pop
inc
stc
and
sti
inc
insb
in
je
mov
insl
nop
pop
cld
ds
xchg
adc
out
cmc
jnp
pop
or
int3
cmp
cli
push
mov
inc
mov
sbb
xor
call
shl
jbe
inc
jl
jo
mov
add
js
mov
enter
fistpll
sbb
xchg
outsl
inc
scas
mov
xor
jecxz
fwait
aad
adc
ret
pop
jns
pop
mov
dec
pushf
push
jb
ds
loope
add
or
cmpsb
cmp
aaa
aad
xchg
lahf
cli
jbe
int
pop
add
sub
jg
or
fwait
pop
aam
push
sbb
adc
nop
pop
jnp
aaa
lock
jns
jl
push
mov
das
roll
cmp
mov
out
fwait
shrl
outsl
shlb
cli
enter
dec
and
repz
cmp
or
pop
aam
sub
mov
pop
flds
sbb
jbe,pt
dec
mov
movsl
sbb
and
rcll
mov
xchg
lods
std
sarb
xorl
and
push
add
mov
das
push
incl
mov
hlt
decl
fbstp
cmp
imul
pop
sti
add
aad
pushf
jg,pn
bound
xor
mov
into
in
pop
and
mov
das
sti
adcl
mov
cmp
fistpll
movsb
cwtl
jae
pop
push
aam
push
dec
loop
sub
fbld
add
xchg
nop
lds
popf
call
mov
adc
aad
jbe
cmp
xor
or
ret
inc
mov
sub
js
xchg
ret
ud1
cmpsb
divb
data16
repnz
filds
dec
repz
popf
lock
sub
sahf
cmp
pop
sti
pop
pop
pop
adc
pop
cmp
cs
imul
imul
inc
sahf
xchg
push
xor
insl
sbb
mov
out
ljmp
pop
add
stc
loopne
mov
dec
and
and
cmp
fisubl
fcmovnb
js
cmp
sub
icebp
pop
addr16
ret
ror
ds
mov
hlt
inc
and
pop
dec
loope
notl
push
jl
jmp
mov
pop
sbb
inc
xor
cmp
les
push
adc
add
test
mov
cmp
xchg
sarl
aam
into
jle
cmpsb
dec
ss
mov
mov
xlat
cli
gs
mov
push
sahf
test
or
or
jl
push
push
iret
push
dec
pop
sub
std
popf
lds
in
or
mov
dec
push
and
adc
lret
cmpsl
test
push
xchg
lahf
jecxz
lcall
cmp
aad
shll
mov
or
mov
sbb
lret
push
pop
jge
jle
jae
xor
bound
iret
adc
add
inc
je
test
inc
insb
add
push
push
pop
nop
aas
vhsubps
ljmp
dec
hlt
xchg
adc
in
cmp
lock
sub
shll
jecxz
jae
and
push
sbb
idivl
and
mov
hlt
ds
fisubl
in
inc
add
adc
or
popf
jno
jo
jp
mov
pop
stos
iret
mov
lret
pop
imul
push
pop
rcrb
es
jecxz
push
mov
and
cmp
jmp
xlat
rcrl
shrb
pusha
inc
shlb
mov
sahf
pop
jp
cwtl
add
sti
jb
xor
xchg
sbb
dec
pop
mov
jbe
test
imul
icebp
aas
push
sbb
fwait
arpl
mov
scas
ds
mov
test
int
dec
push
push
mov
ljmp
repnz
pusha
xchg
cmc
enter
add
int3
mov
int
pop
testb
xor
ljmp
jmp
xor
mov
cwtl
adc
fidivrs
add
popa
testl
lcall
mov
popf
repnz
lea
rolb
dec
sbb
inc
cmpsl
xor
ds
push
mov
push
imulb
popa
add
xchg
insl
imul
shl
add
lods
mov
lock
mov
in
out
sub
mov
out
jge
data16
mov
mov
dec
push
les
mov
fwait
xchg
push
fldl2e
repnz
ret
mov
scas
jmp
inc
repnz
inc
mov
jbe
pop
jae
lock
es
in
pop
or
fsubs
nop
fidivs
mov
in
mov
cmc
in
add
addr16
mov
in
jnp
adc
xor
push
and
adc
sahf
repz
jae
cmpsl
xlat
push
jp
leave
sti
popf
movups
insl
dec
inc
jne
rcrl
lods
sub
mov
push
outsb
dec
lret
sti
imul
pop
mov
mov
mov
dec
adc
enter
pop
pop
mov
inc
adc
mov
popa
fstps
pushf
adc
pop
imul
mov
lahf
sub
mov
add
sar
mov
push
sbb
test
cmp
xchg
subb
les
daa
repz
sub
clc
loopne
pop
test
inc
or
push
inc
stos
sbb
js
rorb
xor
sub
mov
adcb
mov
xlat
cwtl
rorl
xlat
mull
jnp
cmpsb
into
jne
int
pop
mov
sbb
sbb
mulb
mov
lahf
fwait
pop
jl
or
mov
inc
dec
lret
aad
mov
dec
fnstsw
leave
jo
xor
pop
sbb
adc
outsb
dec
rcr
or
lahf
rcrl
rclb
shrb
inc
push
jno
cmp
sub
stos
push
js
sub
mov
add
inc
ret
or
testl
xor
mov
add
xor
imul
scas
loopne
fmulp
xchg
and
jb
bound
xchg
faddl
out
shlb
sbb
inc
jp
sbb
cmc
idivl
shlb
roll
or
movsl
and
stos
mov
sarl
inc
clc
in
cmp
or
imul
je
sub
cmp
int3
adc
aaa
fists
cmp
pop
testl
std
arpl
xchg
cmp
cwtl
int3
aam
inc
pop
jo
fdivrl
getsec
or
ficompl
dec
add
jns
mov
cmp
sbb
dec
out
pmaxsw
inc
jmp
sbb
push
cmp
push
adc
sbb
popf
sub
fcmovu
xlat
sbb
in
out
imul
and
sbb
jg
add
mov
cmpb
dec
jo
adc
fstl
pop
jo
clc
jbe
xor
addr16
fisttpl
repz
or
or
ds
push
ss
sub
je
xchg
rclb
js
jae
push
jg
aam
mov
icebp
push
aas
mov
pop
arpl
or
loop
dec
scas
inc
out
stos
cmpsl
sbb
xchg
scas
cmp
mov
jle
add
popf
add
lds
or
sbb
test
imul
enter
cmp
pop
mov
xchg
ja
sbb
jle
inc
loop
push
data16
push
ja
mov
push
cmp
mulb
push
es
out
ljmp
jle
cmp
inc
repz
xor
dec
out
push
pop
add
js
je
test
shll
mov
pop
loope
add
ret
or
fcmovne
push
lea
cmpsb
cld
xor
xor
arpl
jge
test
mov
cmc
les
insb
and
sbb
bound
push
gs
lahf
or
xchg
xchg
leave
and
repz
les
add
push
mov
xor
push
popa
mov
or
loopw
aad
sbb
cltd
xchg
std
dec
mov
and
stos
xor
dec
or
mov
shlb
cmp
mov
or
in
fistps
pop
adcb
or
xor
mov
xchg
daa
sahf
scas
mov
scas
inc
push
sbb
inc
mov
mov
push
mov
outsl
cmp
mov
xchg
mov
sub
icebp
pop
push
mov
lea
adc
mov
sahf
dec
stc
and
fdivrs
or
insl
xor
pop
es
dec
mov
cmp
lcall
int
test
clc
mov
imul
cmp
cltd
mov
lcall
mov
dec
adc
es
add
jae
sti
repz
pop
and
mov
mov
push
idivl
stos
std
clc
mov
cld
js
cmc
pop
sub
mov
rcll
mov
pop
data16
outsl
mov
ds
inc
add
lds
inc
lods
lock
test
push
inc
movsl
ret
add
dec
popf
inc
xchg
inc
repz
jge
daa
cmc
ret
ret
and
xchg
inc
hlt
mov
test
mov
test
cli
in
jo
sbb
imul
xchg
add
push
iret
or
jbe
xchg
scas
and
ljmp
aam
cmp
cwtl
mov
lahf
xor
into
cmp
push
lea
cmc
cs
cmp
mov
pop
sub
dec
adc
cs
jecxz
xchg
dec
iret
in
jl
mov
xlat
imul
test
ss
fisubl
xor
xor
sar
adc
sarb
jne
loopne
inc
sarl
dec
lods
sub
xchg
and
popa
and
mov
mov
jmp
mov
hlt
clc
std
sub
dec
mov
bound
dec
xor
js
xlat
aas
call
rcl
sub
xor
pop
insl
xchg
jp
and
inc
cmp
cmp
push
nop
js
xchg
or
xor
push
leave
mov
arpl
cld
lea
test
xchg
sub
shrl
lods
repz
and
and
jbe
adc
add
jp
aas
std
mov
mov
pop
jo
adc
mov
scas
fwait
addb
jbe
push
nop
jl
xchg
addr16
test
dec
jmp
daa
std
cmc
into
push
mov
or
pop
lahf
fists
adc
xchg
mov
insb
or
or
push
int
movsb
shlb
xchg
imul
loopne
mov
in
movsl
scas
addr16
in
mov
mov
add
fmulp
add
loop
repz
mov
inc
negl
jo
mov
shrb
jnp
cmpsb
sub
bnd
sbb
push
fisubrl
stos
mov
leave
mov
out
adc
adc
cld
sub
pop
out
add
aas
and
xor
xorb
clc
mov
outsw
dec
push
iret
or
int3
mov
out
loop
ja
pop
or
mov
pop
das
mov
adcb
dec
pop
push
std
lcall
movsl
scas
repnz
dec
push
inc
lahf
inc
lods
xchg
push
popa
test
mov
int3
cmp
jb
sbb
and
js
mov
push
cmc
mov
or
pop
inc
bound
in
std
pop
cmp
cmp
jno
mov
push
xchg
push
idivl
js
add
int3
add
push
add
jno
aas
sbb
je
pusha
iret
sub
pop
cmc
cmp
cltd
xchg
adc
in
in
push
adc
imul
jnp
lret
ljmp
scas
pop
inc
xor
pushf
mov
pop
sbb
mov
stc
jb
movl
cmp
adc
push
sbb
jecxz
push
mov
push
add
out
and
int
add
lahf
out
fcoms
xchg
pop
adc
into
adc
mov
std
std
mov
inc
pushf
bound
add
jae
addl
xor
xchg
scas
push
shlb
cmpsl
stos
mov
popa
in
lahf
roll
in
and
subb
shrd
aam
dec
mov
inc
push
stc
cmp
sbb
lahf
mov
cmc
add
mov
jbe
jl
not
cmc
cld
fldt
dec
cmc
pusha
cmp
jmp
ljmp
push
ja
fstl
cwtl
icebp
popa
mov
out
jnp
daa
and
push
fstpt
lods
xchg
push
lods
mov
xor
btc
xor
lods
sub
adc
cli
mov
test
call
dec
loopne
dec
cmp
xor
hlt
std
xor
fsubr
adc
adc
popf
mov
insl
mov
je
inc
sarb
push
imul
push
lea
mov
aam
leave
cmp
out
int3
lret
cmpsl
and
nop
jnp
les
gs
ss
and
addl
inc
jae
ror
mov
loop
cmovnp
data16
inc
gs
test
cmp
ss
or
scas
and
lcall
sahf
outsl
ret
stc
fnsave
repnz
xchg
sub
lods
loopne
inc
pop
jo
push
and
xchg
or
lods
xchg
in
push
jp
icebp
sub
or
xor
dec
pop
fistps
pop
lods
fdivrl
fmul
push
mov
inc
cmp
insl
hlt
ret
inc
xchg
sbb
xchg
adc
xor
mov
mov
adc
lret
xchg
jmp
or
nop
into
das
adc
jnp
adc
or
stos
xor
negb
test
add
addr16
and
inc
ror
mov
xchg
vprotb
inc
das
push
leave
xor
loopne
jno
aad
jbe
add
sbb
jecxz
lahf
scas
lock
mov
outsb
mov
fnstsw
jno
pusha
test
ror
sub
sub
pop
dec
sub
int3
fistps
inc
imul
xchg
jp
adc
clc
inc
andl
xor
pop
xchg
adc
dec
add
sbb
dec
and
and
fpatan
cmp
or
in
fadds
fcoml
enter
sahf
cmc
popa
jp
sarl
cmp
bound
ret
inc
repnz
xor
int3
stc
roll
cmpsl
rcrl
pop
pop
pop
cltd
mov
mov
inc
pop
aas
inc
push
sub
imul
add
or
cmp
in
lret
test
push
adc
cmp
std
mov
sbb
std
insb
into
sub
push
jnp,pn
cmp
insl
and
rclb
xor
push
fs
lock
inc
add
add
or
aas
sbb
pop
cmp
xchg
mov
aas
jne
fdivs
iret
stc
stos
push
rcll
lods
sub
les
and
leave
cmp
xchg
call
sub
push
xor
dec
jno
dec
mov
pop
loop
shrb
push
push
cmp
ret
enter
push
testb
aaa
pop
mov
inc
shlb
int
xchg
out
ret
insb
mov
pop
hlt
sbb
and
xchg
packuswb
test
pushf
pushf
inc
pop
cli
bound
jns
jne
cmp
sub
xor
cmp
xchg
cli
xchg
mov
jl
insb
cmc
cwtl
daa
pandn
add
in
clc
popa
dec
pop
mov
and
insl
cmp
add
mov
pop
aas
ret
ret
rcrb
movsb
and
jle
insb
adc
push
repnz
test
push
add
adc
pop
cmp
xor
jnp
bound
pop
xchg
push
movsb
xor
add
fistpll
mov
orl
insb
and
jbe
xchg
sahf
ja
shll
pop
aas
lock
adc
xchg
inc
out
scas
popf
cwtl
inc
xchg
add
dec
xchg
mov
pop
popa
stos
popf
cli
lods
or
dec
shlb
loop
clc
sub
loopne
mov
mov
add
fcmovnu
in
sbb
call
and
test
ret
or
xor
movb
fildll
jge
lret
sbb
jnp
inc
cs
jle
sbb
push
mov
mov
cmpb
iret
mov
cli
dec
in
sub
dec
xchg
out
mov
out
mov
sub
xor
inc
dec
mov
mov
inc
je
leave
les
cli
push
in
data16
jnp
mov
sbb
lret
mov
cld
mov
jecxz
add
mov
cmp
cltd
sti
cli
aad
lret
or
inc
cli
lock
fdivrs
lods
cwtl
push
imul
ficomps
jecxz
sbb
or
test
aas
xor
into
cmp
icebp
rcl
stos
mov
cmp
dec
push
or
push
add
or
push
add
xorb
add
cmovae
arpl
lret
inc
sbb
or
mov
mov
out
xchg
pop
mov
in
cmpsl
mov
xchg
out
not
sti
ret
test
pop
scas
jbe
xchg
inc
xchg
lds
fcoml
jmp
and
jmp
es
pop
in
sbb
xor
xor
into
inc
xchg
pop
and
std
test
int
cld
and
mov
dec
sub
fwait
test
rcrl
xor
mov
jle
sahf
adc
pushf
push
jnp
pop
inc
push
jne
das
arpl
jb
movsl
mov
or
shr
xchg
leave
jg
cmpsb
scas
mov
mov
jge,pn
cmp
movsl
addr16
into
or
push
sbb
imul
rorl
dec
pop
jle
sbb
ret
mov
push
fcmove
cmp
unpckhps
xor
sub
mov
rol
mov
cld
jns
xchg
leave
fucomi
mov
jmp
sarl
popl
lock
jb
aas
xchg
xor
outsb
in
or
adc
shll
addb
ret
cmovae
jno
sbb
pop
shll
lds
hlt
and
enter
bound
mov
push
sbb
ficomps
xchg
lahf
cwtl
bnd
daa
sbb
je
cli
fcmovbe
sbb
sub
inc
ret
mov
sub
inc
xchg
gs
dec
jnp
push
sbb
cld
loop
gs
and
cmp
rol
mov
dec
test
sbb
mulb
inc
sbb
mov
stos
push
out
jle
push
jge
mov
pop
xchg
fcompl
fistl
xchg
lahf
xchg
fisubrl
cmp
mov
xchg
jl
and
sub
ret
jmp
xlat
stos
imul
xchg
fistps
fcoms
cs
dec
repnz
pop
mov
sbb
rorl
jecxz
nop
mov
lret
inc
cs
nop
jl
cmpb
std
or
push
fsubrp
aam
dec
push
aam
stc
daa
push
jg
mov
push
or
iret
fstpt
dec
mov
mov
out
pusha
stos
mov
add
std
shlb
loope
and
fwait
add
dec
jo
mov
pop
jo
sarl
dec
icebp
and
test
pusha
repnz
cli
adc
mov
mov
and
sub
xchg
mov
xchg
arpl
std
repz
sbb
dec
mov
push
push
arpl
testl
push
out
cmp
icebp
inc
mov
or
jmp
push
jne
push
nop
cld
adc
and
fldcw
jns
and
lods
outsb
aad
int
pop
je
xor
popf
fadd
sub
lcall
out
mov
outsl
je
mov
out
mov
and
das
pop
cmp
iret
movsl
or
dec
adc
repnz
stc
out
fmul
cmova
cmp
or
out
enter
aaa
loopne
add
jmp
aam
iret
push
roll
popa
and
pop
mov
fdivrl
lahf
xor
out
cltd
xor
pop
outsb
lahf
data16
and
mov
int
sub
popa
push
out
mov
cmc
loop
or
or
sbb
ja
or
xlat
pop
pop
mov
push
mov
test
add
iret
jge
pop
sbb
jecxz
cmc
js
aas
mov
je
out
dec
dec
push
xchg
mov
mov
pop
maxps
pop
cltd
insb
mov
inc
push
push
out
les
jmp
fstl
shlb
mov
cmc
mov
or
dec
fstps
shl
or
lock
sbb
gs
xchg
mov
sbb
mov
xlat
test
mov
cmp
aam
jle
push
pop
enter
fisttps
cwtl
mov
sub
mov
outsl
out
or
and
and
pop
cmp
adc
pop
inc
movsl
lea
jo
and
dec
leave
pop
pop
and
xor
fisubrl
mov
loop
mov
pop
push
jbe
xor
out
fcmovnu
mov
data16
push
movsb
pop
xchg
dec
gs
sbb
pushf
call
loop
shlb
hlt
lock
fisubs
out
pop
rcr
mov
testb
frstor
repnz
sub
int3
loopne
nop
ret
out
daa
and
adc
pop
xchg
int3
dec
add
shll
lods
jp
ja
mov
ja
fildll
lods
movsl
jb
mov
movsb
cld
mov
inc
mov
inc
jne
jg
lahf
outsl
mov
xchg
fwait
cmp
inc
das
push
xchg
and
mov
jo
or
out
std
stos
in
mov
mov
jne
mov
or
inc
inc
dec
pusha
push
aam
mov
sahf
repz
mov
mov
cs
sub
jecxz
sub
or
stos
mov
mov
mov
pop
adc
sub
bound
jp
pop
cmp
test
ds
outsl
push
cmp
or
lods
sbb
adc
mov
test
push
add
mov
inc
dec
and
out
sbb
xchg
add
in
adc
and
pop
xchg
aas
fistpl
or
out
int3
sbb
subb
mov
and
dec
mov
jecxz
in
xchg
nop
cmp
loop
xchg
jp
sub
fwait
ret
mull
fiadds
ljmp
cmpsl
ja
pusha
inc
mov
add
add
adc
sbb
cld
sub
sub
or
frstor
pop
push
in
and
push
hlt
hlt
frstor
rcrl
mov
in
popf
cmp
dec
lcall
sub
iret
rcl
inc
mov
sbb
inc
in
out
add
pop
shlb
pop
aaa
xor
loopne
int3
fwait
xchg
nop
jno
or
mov
aaa
xlat
jae
mov
enter
cmpsl
and
out
loope
xorl
jge
pop
ret
push
les
shlb
mov
cmp
pop
jae
or
dec
mov
or
repnz
bound
shlb
mov
pop
loopne
mov
dec
lret
ficompl
cmp
mov
xchg
cs
sti
mov
xor
xlat
xor
int
roll
fcmove
lfs
lea
mov
push
add
push
sahf
out
cld
inc
pop
sbb
movsb
dec
cmp
add
adc
mov
out
mov
push
adc
dec
mov
mov
xor
pop
dec
xchg
adc
cmp
lret
xorl
arpl
push
push
fisubrs
mov
testl
mov
xor
or
xchg
xchg
shrb
in
gs
fwait
stos
push
repz
dec
cmp
addb
inc
or
xor
mov
out
or
jl
mov
cmpsl
jl
fadds
cmc
and
xchg
jmp
repnz
inc
sub
inc
shrb
jle
outsb
jp
aam
xor
andl
adc
mov
cmp
fmull
pop
push
inc
xlat
outsb
and
dec
stc
push
int
push
sbb
imul
sub
push
shrl
fidivrl
cmp
js
stos
clc
sub
mov
push
mov
nop
jnp
inc
imull
das
mov
or
fmuls
stos
int3
or
xchg
rolb
pop
loope
mov
lock
cltd
lods
popa
icebp
clc
clc
out
insl
xor
rorb
cmpsb
mov
add
or
sbb
xchg
inc
shlb
xchg
mov
push
sub
jbe
fs
fildl
scas
insl
into
mov
xchg
nop
lahf
jg
add
test
repz
arpl
ss
shrl
fistl
or
sbb
and
mov
es
and
lcall
lret
add
in
ss
gs
loopne
jp
mov
das
jmp
fnstenv
or
push
sbb
int3
fisubrs
repz
add
imul
ret
sub
jne
cmp
cwtl
lret
cld
testb
mov
gs
repnz
cwtl
pop
push
lods
and
outsb
cmp
mov
push
aad
hlt
sub
push
pop
std
fisttps
mov
sbb
jae
les
dec
loopne
out
insl
punpckhbw
ss
xchg
xlat
pushf
push
mov
cld
lods
or
outsb
insb
push
aam
inc
xchg
lea
inc
icebp
pop
sub
data16
inc
sbb
inc
dec
inc
sub
fucomp
xchg
iret
inc
and
js
mov
pushf
xor
insl
dec
sub
das
add
dec
adc
sahf
jbe
mov
outsl
push
mov
add
flds
scas
xor
sarb
mov
lds
inc
je
mov
subb
or
jb
popa
inc
imul
dec
shlb
inc
ret
mov
dec
push
cmc
ljmp
imul
es
rorl
mov
jecxz
arpl
out
pop
shl
movsb
add
mov
lret
sbb
lcall
flds
insb
bound
xchg
insl
imul
call
cmp
jg
jns
push
enter
je
push
aaa
xor
ret
sbb
lea
scas
mov
sub
adc
gs
ss
test
pop
mov
mov
xchg
insb
in
xchg
insl
or
xchg
leave
or
xor
and
in
iret
out
push
xchg
jg
loope
add
mov
and
insb
sbb
xor
dec
cs
xchg
and
push
xchg
mov
dec
sbb
call
mov
jle
or
ud1
popf
rcr
gs
adc
in
xor
push
sub
fs
popf
add
adc
dec
mov
mov
ljmp
dec
ja
and
and
cwtl
je
rcl
sub
sub
inc
test
mov
sbb
psubsw
sbb
decl
aaa
dec
mov
fstps
lahf
adc
roll
jle
repz
mov
enter
cmc
scas
xchg
ficomps
jl
ljmp
mov
jle
jnp
aam
jmp
push
addr16
in
jbe
scas
jnp
hlt
stos
and
mov
or
push
or
inc
lahf
push
inc
mov
fbld
insb
xchg
jnp
imul
mov
pusha
sbb
fisttpll
adc
scas
cld
lcall
outsl
pop
cmpsb
mov
in
int
sahf
sti
jle
mov
pop
or
pop
xor
outsb
dec
aad
xor
pop
fidivrl
shlb
mov
fwait
and
xchg
dec
push
mov
dec
cmpsl
pop
push
jbe
test
dec
sbb
repz
cmp
dec
stos
or
mov
jmp
jmp
imul
inc
aam
negb
iret
adc
in
add
add
dec
mov
fstps
mov
mov
into
push
dec
shlb
pop
loop
jo
and
sub
adc
leave
or
dec
jno
imul
xor
jbe
mov
add
mov
bound
jo
sub
or
adc
jp
jmp
ret
iret
xor
pop
int
jg
or
aad
mov
and
mov
mov
sbb
ret
or
sub
mull
cld
ja
scas
inc
filds
insl
fiaddl
xor
cmp
outsb
push
iret
cmp
in
ss
cmp
inc
mov
xor
jbe
mov
fs
ret
and
scas
movsl
jbe
sbb
adc
and
in
pop
inc
pop
fisttpl
icebp
arpl
addr16
dec
mov
mov
pop
sbb
jo
je
push
aad
out
jmp
test
aas
jle
xchg
popf
push
mov
jp
sbb
pop
stos
sub
in
push
push
imul
pmaxub
push
outsb
and
lods
jne
xchg
test
adc
mov
xchg
aas
cltd
jnp
lcall
push
mov
gs
cwtl
mov
movsl
or
shlb
mov
lahf
or
int3
scas
lock
jo
out
mov
bound
pop
adc
jo
jb
mov
loope
jbe
or
aam
lahf
cmc
cmp
movsl
popa
xchg
adc
xor
jae
xor
orb
addl
popf
test
cmpsl
sbb
adc
mov
fdivp
test
out
rol
jb
mov
int
and
xorl
clc
mov
add
mov
jmp
xchg
jne
int3
mov
pop
xor
int3
push
rol
std
mov
inc
repnz
sbb
mov
std
and
ss
bound
push
fmul
xchg
dec
sub
pop
fildl
cmpsb
dec
test
or
mov
cli
aam
xchg
ret
lcall
add
lock
xchg
pushl
xchg
dec
inc
push
mov
or
mov
mov
sub
cmp
pop
pusha
push
cmp
push
test
movsb
xchg
loop
cmp
int3
inc
mov
jno
ljmp
fcomip
add
cmp
in
jge
fucomp
popa
jmp
xchg
fcoml
ja
xor
test
xor
xchg
leave
pop
mov
push
in
push
in
movsb
mull
xor
repnz
ljmp
lcall
leave
ret
cltd
mov
nop
leave
test
lahf
shlb
sbb
mov
addr16
repnz
push
and
je
jno
loop
push
stc
aad
subb
add
ja
sub
xchg
dec
dec
idiv
mov
insb
adcb
lds
hlt
into
mov
xchg
js
jge
icebp
call
into
decb
lock
into
adc
fadd
repnz
adc
lock
push
and
out
jns
push
jmp
and
add
push
aam
sbb
adc
pushf
out
lea
ss
testb
f2xm1
and
fs
fwait
jl
lahf
gs
adc
rolb
add
icebp
jne
xor
adc
cld
leave
fdivl
popl
mov
inc
sbb
ret
xor
and
dec
outsb
jo
loop
mov
ret
mov
jmp
std
in
pop
push
fs
add
imul
cli
ja
jns
or
stos
popa
mov
jle
dec
mov
cmp
xchg
dec
push
out
and
pop
out
orb
out
jmp
push
push
lds
fs
jg
shl
add
mov
jl
imul
rolb
jg
sub
hlt
lcall
dec
inc
sub
lds
shlb
int
loop
jge
lcall
outsl
adc
lcall
mov
and
enter
xorb
xchg
adc
xor
inc
mov
or
jnp
sub
std
ror
ret
in
loope
fnsave
jg
fucomi
int3
pop
sub
adc
push
sub
call
mov
push
xchg
jae
dec
sbb
or
das
addl
testl
fbld
xor
and
cld
nop
out
lret
clc
fildl
ja
lcall
add
lret
dec
push
data16
mov
dec
nop
add
mov
add
xor
aam
lods
xor
mov
icebp
insl
arpl
js
addr16
mov
lcall
dec
ret
in
je
mov
jmp
aas
adc
mov
xorl
mov
inc
push
push
popa
jge
out
aaa
lods
stos
xor
push
mov
pop
jp
push
into
dec
aaa
imul
rol
and
mov
push
mov
and
and
sbb
movsl
scas
dec
out
je
and
sarb
ret
in
inc
sub
call
lea
inc
push
jmp
pop
dec
ss
ljmp
nop
mov
lods
mov
xchg
nop
xor
enter
or
lods
movsbl
jmp
push
xor
inc
push
adc
imul
arpl
aam
rcl
inc
push
sbb
loope
inc
inc
fwait
ret
jge
daa
sahf
push
mov
cs
stc
add
lock
pop
cmpsl
das
mov
aad
push
jae
dec
repnz
xchg
add
addl
testl
or
adcl
mov
in
insb
test
inc
mov
addl
hlt
hlt
frstor
pop
adc
loopne
sahf
mov
decb
push
sbb
push
pop
fidivrs
std
jo
out
push
ds
arpl
stos
aad
mov
mov
push
testl
sub
add
call
pop
cmpsl
movsl
setae
mov
fnstsw
cltd
push
adc
aaa
iret
pop
xor
jnp
inc
shlb
data16
pop
jl
xor
inc
inc
xchg
pop
sub
test
loop
cs
inc
push
push
popa
enter
subl
inc
pushf
inc
popf
mov
mov
orb
add
push
sub
ljmp
fnstsw
pusha
lret
stos
push
test
flds
inc
in
push
pop
rclb
mov
dec
mov
arpl
adc
xor
xor
add
pushf
jge
add
inc
lds
and
dec
in
gs
lcall
xchg
mov
pop
ret
inc
sub
push
push
outsl
mov
inc
adc
xor
sub
fists
jecxz
jecxz
pop
push
sub
bound
in
int
push
fdivrl
stos
sbb
sub
sub
pop
and
cs
fbld
jae
insb
and
sbbb
push
fs
arpl
notb
cmpsb
mov
icebp
test
dec
aad
and
shrb
popa
jle
jecxz
aaa
out
jae
xchg
pop
dec
mov
xchg
scas
cmpsb
mov
and
sbb
lahf
inc
lea
test
das
and
jae
scas
mov
pushf
mov
xor
and
aaa
mov
inc
clc
cli
push
insl
ljmp
cmp
cwtl
testb
cmp
mov
sbb
dec
adc
xorb
fs
scas
in
scas
and
pop
and
cwtd
cmc
fisubrl
mov
inc
mov
pop
bound
jns
pop
movsb
xor
fcompl
add
mov
imul
mov
ljmp
pop
dec
scas
cmp
fucom
adc
mov
ja
ficompl
icebp
nop
push
lret
ljmp
repnz
fsubs
inc
cwtl
or
lahf
cmp
cltd
mov
ljmp
mov
std
ret
js
fwait
out
mov
lcall
push
inc
jp
push
cvtps2pi
sub
push
ljmp
mov
xchg
sbb
push
mov
xchg
repnz
pop
fldl
icebp
cmp
mov
scas
jbe
mov
sub
dec
mov
dec
call
popa
cltd
out
mov
daa
dec
imul
pop
pop
mov
scas
mov
dec
xchg
call
orb
or
xchg
aad
lret
push
jo
sub
cmp
mov
dec
mov
lods
dec
sar
ret
gs
es
mov
mov
addr16
xor
lahf
jl
dec
xor
arpl
scas
push
stos
sar
push
in
sub
inc
out
dec
movsb
add
push
dec
lret
loope
fsts
push
shlb
popf
pop
loopne
imul
ret
or
push
stc
ljmp
sub
lea
hlt
pushf
push
gs
imul
add
and
and
cmp
and
shll
in
xor
popa
jl
daa
pop
aaa
mov
out
das
mov
ret
enter
cmc
mov
enter
addr16
std
push
jns
jmp
daa
cmc
dec
dec
js
xor
pushf
or
fcmovnu
cltd
mov
jno
ja
das
imul
pop
iret
gs
mov
inc
mov
pop
lods
loopne
scas
pop
inc
sub
cmpsb
add
jg
enter
push
clc
inc
xor
pop
mov
and
adc
shlb
push
jp
inc
adc
arpl
repz
dec
cltd
in
and
loope
lea
popf
xor
daa
pop
nop
adc
push
pop
xchg
in
decl
lahf
aam
dec
or
sbb
mov
lods
stos
push
stc
pop
mov
sbbb
xchg
les
xchg
out
mov
add
xor
mulb
pop
popa
iret
sbbb
lahf
mov
dec
test
test
addr16
cmp
out
jne
mov
mov
mov
test
in
pusha
push
sbb
mov
inc
inc
jbe
adc
mov
into
cmp
dec
mov
mov
mov
out
jmp
jg
sub
gs
add
push
bnd
push
add
cmp
lahf
shr
adc
pop
mov
and
mov
clc
mov
jmp
fisubrs
mov
es
out
rclb
aas
int3
in
stos
ja
and
mov
cmp
xor
mov
adcb
mov
setnp
ljmp
pop
cmp
pop
push
sub
cmp
out
inc
lea
mov
mov
adc
add
imul
hlt
dec
mov
int
bnd
jp
xor
sahf
jo
arpl
push
lods
mov
pop
push
sub
jb
sub
clc
mov
inc
ret
sub
fidivl
push
mov
icebp
mov
insb
pop
jp
jmp
fidivs
lret
jne
xchg
cvttps2pi
stos
mov
jno
jo
and
mov
mov
in
dec
pop
mov
fildl
jne
int3
mov
jo
popf
aas
cmpsl
mov
lahf
scas
mov
ret
sub
sub
test
mov
push
pop
mov
ljmp
pusha
adc
xor
cmp
or
push
daa
scas
cmpsb
mov
orb
hlt
or
cmp
or
test
addr16
push
sbbb
addr16
test
ret
jg
push
lods
aad
sub
push
dec
push
out
fldcw
dec
dec
lcall
push
jae
adc
dec
xor
mov
in
xchg
jmp
cmp
fwait
leave
loop
or
stos
cs
mov
sub
frstor
cwtl
test
int
pop
aam
add
dec
movsl
aam
mov
jb
adc
lds
jns
xchg
push
push
clc
jne
fld
insl
xor
sub
call
popf
mov
inc
pop
and
loope
loopne
inc
movsb
xor
mov
mov
out
mov
add
es
or
movsb
pop
stos
xchg
cli
mov
gs
test
call
stc
lea
adc
push
inc
jb
pop
adc
or
mov
xchg
je
lahf
push
add
out
mov
mov
cmc
pop
push
mov
add
lea
ss
sub
mov
ja
jns
ljmp
lock
or
and
mov
outsl
call
loop
in
rol
mov
les
or
mov
lods
incl
dec
stos
or
jb
mov
mov
lods
imul
rolb
dec
loope
lock
pop
dec
push
repz
jle
popf
ja
push
jbe
dec
stc
sbb
jle
mov
xchg
push
sti
test
in
mov
sbb
call
mov
test
jmp
jmp
sbb
aas
orl
xor
je
sub
mov
es
or
fiaddl
in
xchg
cmp
cmp
dec
cs
mov
xchg
fcmovu
loopne
and
test
adc
jb
inc
cmp
js
insl
add
mov
or
scas
mov
jo
icebp
cld
je
push
mov
pop
pop
idivb
and
mov
stc
cmpb
pop
mov
pop
mov
xchg
mov
out
out
mov
or
sub
fsts
adc
adcl
dec
cmc
movsb
pop
out
push
sub
jns
lahf
xor
mov
sbb
mov
xchg
lock
sbb
in
insl
fs
scas
dec
dec
push
push
mov
inc
loopne
mov
les
decb
scas
cltd
or
shl
pop
addr16
sbb
mov
arpl
pop
inc
xchg
int3
sub
push
clc
outsb
sahf
mov
aad
push
adc
cmpsb
ss
test
int3
fs
test
cmp
loope
stc
outsl
fdivrs
daa
hlt
pop
sbb
cmp
and
bound
add
int
das
repnz
dec
test
xlat
jb
or
add
mov
cmp
add
jmp
fnstsw
mov
lea
jmp
cmpsl
in
sub
mov
loop
jmp
int
mov
cli
mov
fidivl
in
sti
pop
jmp
ds
mov
jbe
dec
je
das
xchg
in
cmp
orl
mov
aam
std
xchg
dec
jbe
lcall
mov
mov
push
add
mov
or
lods
orl
or
fcomps
mov
aam
fmull
inc
dec
cmp
sar
pop
js
cmp
sub
or
pop
mov
mov
sub
jle
in
sbbl
xlat
adc
je
loop
call
and
mov
add
nop
mov
incl
mov
sub
icebp
cmpsl
sbb
ret
push
mov
dec
cmp
insb
lahf
jle
lea
and
pop
ficoml
sub
xor
xchg
std
mov
dec
push
stos
or
test
cwtd
sub
xchg
dec
xor
fisubs
cmpsl
int3
in
fldt
out
stos
jae
mov
fmul
sbb
inc
daa
xchg
sub
ret
sbb
jg
jb
ljmp
mov
test
mov
and
movsl
imul
es
push
mov
cwtl
push
and
in
ds
ret
cmp
mov
sub
xchg
aam
mov
cmpsl
xchg
dec
inc
fldt
xor
dec
inc
jmp
je
cmc
jo
call
lods
inc
add
das
fwait
aam
test
inc
lds
insb
sbb
and
out
lods
sarl
adc
mov
mov
scas
add
fistpll
xchg
int
or
lcall
insl
dec
insl
jmp
dec
cmp
gs
aas
cmpsb
mov
inc
xchg
stc
dec
xlat
xchg
add
lcall
js
movsl
icebp
add
stos
aam
jg
aad
es
sbb
addr16
sahf
sub
cmp
fwait
sbb
mov
mov
insb
fidivs
sbb
outsb
fcmovne
sub
cwtl
sub
jne
rorl
pop
outsl
jp
fwait
out
dec
add
scas
sub
movl
xor
mov
scas
jmp
sbb
mov
roll
nop
xchg
fisttpl
pop
cs
out
adc
xor
xor
fwait
cmc
cmpsl
adc
xchg
xchg
or
scas
jge
adc
mov
xor
negb
mov
out
or
lock
xorb
inc
call
stos
mov
test
aad
sbb
loop
add
mov
mov
xlat
cld
mov
cmc
insl
cmp
push
mov
bound
mov
call
cmpsb
sub
mov
dec
or
lds
inc
jecxz
jb
test
out
mov
xchg
roll
or
push
popf
dec
sahf
mov
sub
loopne
cmc
xchg
test
shrb
xchg
push
sub
nopl
hlt
or
xor
jb
fistps
and
push
outsb
and
cld
sub
inc
push
fisubrl
loopne
push
iret
xchg
loope
jb
push
imul
imul
jnp
add
adc
add
xchg
and
sbb
mov
lahf
pushf
pop
int3
or
cmpsb
fdivs
fwait
sbb
sahf
lock
jno
xchg
in
fcom
xchg
icebp
js
rep
leave
xchg
sub
test
mov
or
int3
and
int3
neg
cld
imul
les
jno
adc
dec
cli
mov
adc
pop
push
add
lret
mov
icebp
shrl
jmp
mov
cmpsl
lret
dec
jns
stc
ret
and
mov
insl
xchg
xchg
dec
test
sbb
jl
xchg
cwtl
inc
jbe
leave
add
lret
mov
jae
movsl
inc
or
inc
int
cmp
testl
cmpsb
int
fdivrp
stos
mov
popf
in
push
fsubrl
pop
jmp
mov
xchg
xor
xor
sub
mov
xchg
loop
push
cmpsb
and
or
mov
mov
loopne
outsb
je
push
ljmp
xchg
lahf
dec
mov
jmp
add
fwait
pop
adc
stos
sahf
imul
dec
dec
dec
out
sarb
sbb
xchg
lret
dec
jecxz
les
xchg
daa
ss
shrl
xor
aaa
inc
stos
fsub
cwtl
cmpsb
adc
enter
outsl
rol
add
out
xchg
mov
dec
jbe
incb
cmpsb
cwtl
movsb
push
pop
cmc
ret
call
gs
inc
fdivrl
adc
shlb
sbb
out
mov
or
out
fmull
jp
mov
shrb
cmpsb
aaa
shll
rcrl
or
inc
js
outsl
in
sti
insl
in
xor
jp
test
pop
lret
xchg
cmp
daa
xchg
enter
les
rcrl
xchg
and
dec
in
or
scas
sahf
pop
xchg
pop
pop
and
std
add
xchg
cli
xchg
sub
nop
lock
add
jg
sbb
ficoml
pop
or
es
stos
hlt
in
xlat
faddp
jmp
cld
dec
shrb
in
mov
movsb
xchg
or
pop
cmpsl
lret
incl
out
jecxz
shll
or
inc
pop
jbe
cmp
push
fwait
iret
ret
jae
xchg
cltd
les
sbb
outsl
lahf
jecxz
pop
xchg
test
jae
cmp
push
jo
cwtl
scas
in
xlat
out
aas
add
jle
jg
ret
xchg
out
push
stos
push
jno
aas
push
lahf
add
xchg
out
jmp
es
lock
adc
push
or
xor
sti
xor
sub
repz
push
mov
xor
dec
nop
pop
add
or
scas
sub
push
icebp
xchg
outsb
or
ljmp
cmp
jle
leave
inc
daa
inc
dec
inc
inc
inc
pop
jo
lock
mov
movsl
negb
adc
xchg
fsubl
push
cli
pop
sbb
jl
sbb
cld
loopne
andl
les
insb
push
fisubs
adcl
mov
mov
cmp
scas
flds
aaa
mov
insb
imull
andb
mov
daa
icebp
adc
in
pop
mov
inc
loope
test
les
dec
mov
loop
sbbl
lock
lret
xchg
mov
lods
or
inc
mov
jmp
daa
xor
or
jmp
shrl
sub
js
es
mov
insb
mov
mov
stc
xchg
jne
sahf
bound
cs
jle
into
push
jb
cmp
inc
aaa
hlt
lahf
push
mov
js
outsl
rol
aaa
push
mov
test
gs
lahf
push
jp
out
jl
inc
inc
inc
xor
out
mov
mov
in
mov
mov
dec
loope
adc
adc
test
sbb
and
cmc
adc
out
cmp
mov
adc
mov
cmove
iret
jg
mov
jno
rcrl
sub
cmp
sahf
sbb
mov
test
dec
push
and
add
adc
jmp
or
aaa
adc
pop
sub
subl
lock
mov
jne
xor
push
mov
lcall
pop
lds
dec
pop
push
cwtl
mov
test
gs
scas
lods
hlt
fimuls
inc
xchg
cmpsl
out
jecxz
lea
mov
ret
pop
test
mov
outsb
fdivr
mov
pop
mov
nop
cmp
jge
xor
adc
scas
push
jns
nop
popa
out
pop
push
xor
fisubs
call
or
pop
add
nop
pop
xchg
jno
sbb
jp
sub
add
in
add
and
fdivr
and
mov
outsl
int3
or
jne
cld
inc
mov
adc
imul
inc
repz
xor
loopne
inc
mov
jno
add
mov
jg
movsb
and
xchg
mov
repz
inc
and
mov
and
imul
cmp
fs
sbb
or
out
rolb
iret
inc
out
adc
sbb
push
dec
iret
or
add
arpl
stos
mov
pushf
insl
push
mov
cmc
inc
lcall
pop
jo
cltd
push
cld
lret
mov
adc
push
popa
loop
out
inc
mov
mov
lock
sub
xor
les
mov
jno
xor
lret
push
push
sub
sbb
push
and
outsb
push
dec
pop
mov
xor
sbb
inc
sub
loope
mov
and
push
out
inc
inc
pop
ret
pusha
aam
test
or
sbb
cmpsb
repnz
lea
cmpsl
popa
repnz
jp
push
and
mov
mov
int
outsb
mov
mov
xchg
cs
adc
imulb
jne
loope
jb
int3
in
cmp
mov
xchg
rclb
or
out
mov
loope
xor
add
clc
cmpsb
sbb
jl
repz
clc
sub
cmpsl
xor
jl
mov
inc
lcall
mov
pushf
jne
insl
repz
cmp
adc
shrb
mov
sti
loopne
cmpb
or
pop
sub
arpl
lcall
push
sbb
mov
js
mov
and
pop
jb
sub
fnstenv
std
ja
jbe
clc
add
inc
pop
and
movsb
mov
mov
sti
or
test
pop
out
enter
jg
xor
lds
cs
and
stc
sbb
jge
ds
sbb
xchg
push
in
dec
dec
leave
or
jno
inc
insl
in
addr16
imul
mov
dec
or
stos
ret
dec
sbb
jae
leave
push
sub
or
lahf
repnz
test
and
lds
add
adc
pop
xor
fidivl
adc
jl
adc
in
ret
cmpsl
adc
lret
repz
inc
in
icebp
shll
mov
lret
push
xor
testl
fnstenv
jae
cmpsl
sbb
jl
insl
mov
call
fwait
fs
cmpsb
xor
lods
ds
or
lahf
adc
dec
addr16
aad
sarl
out
add
jl
xor
clc
stos
push
lds
cmp
mov
mov
adc
pop
pop
cmc
into
pop
mov
push
xchg
aas
jmp
daa
mov
or
xchg
stc
in
das
sub
loope
dec
ret
repz
loopne
pusha
xchg
outsb
and
xchg
pop
je
sub
mov
pop
cmc
jo
rclb
mov
js
or
test
orb
mov
out
sbb
sub
inc
mov
sub
and
and
or
lret
cwtl
xor
lahf
jmp
and
adc
cs
xor
out
ss
add
dec
push
dec
in
pop
cmpl
jle
mov
mov
dec
pop
xor
jge
mov
popa
pop
and
push
scas
mov
addl
or
mov
cmp
xor
stos
fs
add
push
pop
icebp
call
mov
or
insb
pop
sarl
into
adc
jbe
imul
fists
ljmp
adcb
ljmp
add
imul
mov
inc
outsb
aam
sub
add
pop
sub
or
and
dec
insb
movsb
inc
mov
push
jmp
fisubs
das
and
lds
jge
loopne
adc
cltd
xchg
sbb
mov
add
faddl
sbb
sysenter
mov
imul
icebp
pop
lds
pushf
cmc
pop
pop
out
frstor
cli
arpl
addr16
xchg
or
xchg
inc
xlat
fdivrl
mov
test
std
stos
xchg
insb
pusha
jmp
or
cmp
sahf
push
or
filds
cmp
xor
cmp
loope
out
or
pop
push
jno
inc
inc
icebp
bound
fcoml
fcmovnbe
popa
cmc
and
mov
icebp
lret
ljmp
sub
pop
mov
cltd
dec
scas
jne
sub
pop
push
mov
jmp
cmp
into
fs
in
adc
sbb
inc
pop
pop
outsb
arpl
out
adc
nop
sbb
je
xorb
dec
ret
popf
cli
leave
insl
test
int3
jle
sti
sub
testb
mov
xor
jns
dec
dec
dec
pop
cmpl
sbb
xlat
sub
into
gs
sub
aad
jne
out
mov
mov
adc
enter
pop
repz
inc
sbb
mov
ja
or
sub
pop
mov
scas
jb
insb
pop
fcom
sub
roll
nop
or
inc
mov
mov
mov
fdivrl
cltd
cs
mov
in
ror
mov
inc
insl
clc
into
add
rcrb
clc
fstl
xchg
gs
test
das
out
in
xor
subb
push
imul
and
jecxz
or
ret
inc
ret
push
dec
out
js
ss
out
jae,pt
mov
outsb
jmp
lcall
pop
call
mov
out
outsl
inc
mov
jne
sub
punpcklbw
xlat
call
mov
jne
mov
mov
lock
orb
mov
das
sti
pop
mov
orl
cmpsb
aaa
fldcw
loop
fisubs
in
jbe
mov
mov
xorb
mov
mov
jbe
insl
jbe
cwtl
fstps
xchg
jecxz
pop
enter
out
xor
lds
jecxz
test
loop
xor
popf
mov
scas
out
or
and
je
aas
ja
sub
push
repnz
mov
push
cmc
lcall
xchg
test
cmp
add
stos
push
ja
inc
jnp
mov
or
shll
addr16
jno
fdivrp
mov
pop
xchg
and
sar
xlat
aas
add
xor
jmp
mov
test
mov
jne
lcall
lods
jge
sti
mov
cmp
dec
sub
repz
ret
pop
sbb
idiv
ja
shr
roll
add
mov
inc
test
out
ret
and
popa
inc
ret
lods
lock
shrb
pusha
and
jbe
ds
ja
xchg
subl
clc
jle
cmp
int3
int3
scas
fcmovu
in
pop
scas
cmp
adc
jnp
cmpsl
out
inc
jo
mov
ja
fmull
sub
imul
cmp
int
xchg
fcoml
adc
gs
push
sbb
pop
push
add
jl
jmp
add
insb
ds
loopw
sbb
jg
imul
xchg
ds
bound
inc
jnp
bound
pop
jne
cmp
repz
cmp
add
inc
ss
mov
push
jmp
imul
mov
fisubs
imul
loope
data16
cltd
iret
jge
pop
out
sbb
lcall
mov
lret
add
pop
pop
les
and
aam
sbb
xchg
sbb
push
loop
mov
outsl
or
jl
dec
adc
mov
ret
bound
cmp
inc
ret
xchg
enter
mov
in
pop
fmull
stos
mov
xchg
jnp
jne
repnz
loope
andl
pop
pop
adc
adc
fnstenv
lock
pop
std
jp
js
test
or
mov
mov
add
decl
out
or
daa
adc
pop
pop
shrl
sub
mov
xor
cs
adc
mov
gs
out
ret
pop
jbe
imul
mov
push
push
push
push
lods
xchg
dec
fcmovnu
mov
inc
xor
mov
loop
movsb
mov
cmpb
mov
jecxz
les
mov
mov
jmp
repz
fwait
dec
imul
ljmp
outsl
xchg
test
jne
les
hlt
pop
jno
xor
dec
popl
sub
dec
xchg
fldl
mov
mov
js
jno
outsl
roll
add
inc
enter
mov
cmc
push
inc
jl
ds
xchg
push
mov
int3
clc
fistps
xchg
popa
shll
push
inc
shll
fwait
mov
data16
stos
mov
int3
mov
loope
inc
mov
cmpsb
fld
dec
or
test
ss
pop
cmp
add
xor
rcrl
cli
jbe
pop
jbe
aad
lahf
inc
lock
mov
mov
dec
sub
mov
inc
cld
loopne
sbb
lcall
jbe
vcvttss2si
and
pop
sbb
pop
orb
xchg
arpl
je
pop
cltd
dec
sub
dec
call
add
jae
xchg
ficomps
cli
outsb
jecxz
mov
jbe
adc
dec
xchg
sub
cmp
push
loop
jno
pop
mov
sbb
data16
fsts
push
push
gs
jb
adcl
xchg
jbe
adcb
inc
and
and
test
and
out
call
lret
imul
pop
mov
mov
adc
dec
jge
xor
adc
lret
cltd
aaa
mov
and
add
jecxz
xor
inc
test
mov
pop
js
sub
xchg
mov
dec
scas
or
mov
test
test
leave
push
stc
push
sbb
aaa
push
sbb
aam
cwtl
stc
jmp
adc
mov
push
jo
dec
pop
pusha
test
lock
xchg
and
fcoms
sbb
and
inc
add
sub
xchg
imul
mov
xor
cmc
jecxz
push
les
inc
inc
test
add
mov
je
push
out
push
cltd
jmp
addr16
cmp
cmp
sbb
test
out
mov
mov
xchg
push
adc
xchg
scas
les
loop
in
cmp
jbe
inc
push
loop
pop
mov
mov
cmp
and
mov
movsl
cmpsb
dec
add
hlt
call
das
push
hlt
stos
lahf
fldln2
shll
gs
xorb
aas
inc
fisubs
aas
add
ds
loope
lret
call
jge
dec
faddl
xchg
ds
mov
imul
scas
je
sbb
add
movsb
mov
movsl
push
je
dec
orb
push
and
jo
pop
cli
mov
inc
dec
push
xor
mov
cli
decl
mov
in
in
mov
rolb
pop
and
outsb
idivb
sub
adc
scas
jmp
sub
mov
testl
push
fidivs
xchg
pop
mov
xchg
xchg
cmp
and
rclb
repnz
inc
mov
cmp
pushf
push
push
pushf
filds
in
cwtl
shrl
int
call
lcall
cmc
aam
movsb
dec
sub
std
pop
orl
les
mov
xlat
sub
icebp
lret
push
sub
inc
xchg
fs
repz
push
adc
negb
add
or
bound
lahf
mov
xchg
adc
cld
push
add
rcll
cwtl
into
jp
std
ds
cmp
lret
lret
dec
cmpsb
insb
imul
pop
pop
outsb
jl
dec
cli
movsl
andb
jno
sub
xchg
push
repz
fwait
aaa
add
push
in
jmp
imull
sub
and
mov
daa
jge
dec
inc
fistl
pop
pop
mov
outsl
push
cmp
cmp
inc
push
stos
cmpsb
mov
popa
les
pop
sti
pushf
cs
mov
xor
xorl
jno
sti
add
in
inc
xor
sub
mov
pop
push
jge
test
or
cs
int3
pusha
iret
in
xor
mov
xor
xor
les
fimull
inc
pop
in
and
sub
xor
fisttpll
mov
cld
mov
outsl
lock
test
mov
sbb
cs
cmp
mov
es
rol
adc
jl
mulb
test
lods
stc
out
lcall
ss
sarb
push
das
push
lods
pusha
imulb
ret
cltd
shll
lea
test
rcll
rol
repnz
dec
or
adc
stos
ficompl
dec
idivb
push
fbstp
sub
xchg
jg
je
sub
lds
mov
loopne
jp
in
mov
popf
push
jmp
call
xchg
cmp
les
fcompl
pop
pop
loop
xlat
ds
lret
ret
lcall
rol
orb
ret
pop
jns
stos
lahf
mov
add
add
mov
les
add
test
pop
fs
inc
fsubs
cmp
test
add
xchg
int3
sarl
pop
dec
movsb
mov
mov
cbtw
jg
add
and
lods
mov
cmp
sub
pop
pop
jae
sub
aam
sbb
push
and
xchg
cmovnp
sbb
dec
jp
popa
in
and
jns
repnz
jne
ja
stos
sahf
jp
xor
es
push
lods
push
pop
dec
cmp
push
sub
ss
sbb
in
dec
xchg
add
xlat
jns
in
movsl
sarb
fsubrl
in
and
loope
lock
xchg
orl
or
bound
cmp
fwait
fadds
mov
xchg
rcrl
out
dec
dec
out
sub
dec
and
xchg
popa
aam
add
mov
loop
and
fdivl
aam
jns
stc
testl
sbbl
xchg
in
cmp
dec
adc
xchg
or
xchg
out
std
inc
ret
pop
aad
addr16
bnd
test
and
mov
jg
dec
shlb
out
iret
in
fimull
clc
sub
adc
ds
iret
pop
lret
inc
cmc
and
adc
or
xchg
mov
sahf
into
and
jmp
dec
mov
ss
iret
scas
pushf
insl
lods
mov
push
pop
mov
jnp
in
mov
sub
inc
mov
and
addr16
cmc
adc
inc
movsb
cmp
and
arpl
add
ret
in
fimull
inc
mov
xor
push
jnp
mov
sbb
decl
lcall
push
data16
int
or
add
xchg
test
btr
mov
push
clc
movsb
push
adc
xlat
mov
xor
or
xor
popf
inc
inc
pop
inc
mov
push
xchg
cltd
fimull
push
ljmp
pop
add
icebp
lret
scas
xorb
je
repz
rcll
lds
imul
jp
sub
xchg
xor
fdivs
test
lret
pop
in
xor
rcrl
sbb
cmc
pop
outsl
push
daa
out
adc
nop
push
test
sbb
cmp
cwtl
aad
inc
jo
subb
int
and
outsl
or
fcmovnu
jo
gs
jg
gs
notb
or
and
gs
sub
pop
inc
ss
lock
popf
ljmp
call
xchg
push
mov
pop
mov
addr16
cmp
mov
jo
mov
dec
xor
mov
enter
dec
pop
xor
inc
cmp
xor
test
inc
rcrl
stc
dec
xchg
sbb
test
pop
xchg
fldl
xor
sub
ds
lcall
jo
js
pop
xor
jbe
cmp
test
rcrl
pop
push
pop
inc
mov
fsin
mov
and
mov
add
cs
int3
fldt
mov
push
push
mov
dec
xor
xlat
mov
cmc
outsl
pop
ret
insb
ret
pop
jns
outsl
imul
pop
mov
shr
mov
xchg
popf
test
mov
add
mov
add
outsb
sti
bnd
cmp
dec
pop
jg
dec
xchg
pop
mov
outsb
push
xchg
mov
pop
sbb
fsubr
aam
mov
mul
sub
or
adc
fcoms
mov
mov
cld
sub
lret
xor
dec
inc
push
xchg
cmc
rolb
inc
add
jno
adc
mov
fists
cmpsl
adc
and
cmp
or
mov
into
push
scas
aas
and
lods
out
push
cld
scas
xor
pop
sbb
fldl
pop
and
arpl
and
lcall
sub
movsb
iret
cmp
movsb
pop
cmp
push
pop
filds
test
mov
ror
mov
jle
cmp
cmp
and
lods
fisubs
sub
jecxz
shlb
jg
mov
pop
insl
push
adc
insl
insl
cmpsb
pushl
mov
inc
inc
rclb
lret
pop
xchg
push
dec
outsl
lock
repnz
jle
dec
mov
enter
stos
mov
cli
lods
push
popf
lods
jne
gs
into
ret
fildl
stc
into
mov
lea
mov
andb
test
int3
mov
pop
mov
test
add
aaa
push
jb
std
cwtl
adc
sbb
mov
or
scas
pop
xor
pop
stc
inc
add
clc
add
gs
pop
add
push
cmpsl
and
xor
adc
or
or
imulb
pop
or
imul
std
cmp
dec
stos
int
pusha
fcompl
mov
out
mov
jmp
pop
out
int3
sti
cmp
jle
data16
cmpsl
mov
aad
mov
pop
and
out
pop
xor
jno
lock
idivb
loope
in
popa
xor
push
adc
push
mov
cld
leave
mov
mov
sbb
icebp
in
sub
ss
sbb
xchg
call
pop
inc
lret
cmp
pop
mov
sbb
push
pop
inc
fstp
lcall
imul
gs
sub
test
les
inc
sbb
aas
lods
scas
bound
iret
cmp
sub
dec
jno
ja
sub
mov
pop
mov
xor
mov
jae
lds
push
cwtl
fcmovnb
xchg
sbb
jecxz
pop
mov
sub
or
mov
xchg
or
test
cmpsb
inc
jmp
pusha
popf
fwait
shll
ror
jge
jns
das
inc
push
mov
loop
sub
popa
jmp
mov
dec
mov
cmpsb
frstor
fisubl
add
aam
lcall
int
ljmp
daa
inc
popf
mov
aas
or
data16
ds
mov
movsb
sar
test
shrb
test
test
std
sarl
mov
or
popa
clc
xlat
in
xchg
sarl
repz
sub
movsb
push
outsb
adc
jb
add
div
adc
stos
std
dec
or
or
sbb
mov
addr16
aad
aam
xor
sub
cmc
pop
sbb
push
mov
loope
or
add
insl
jg
fmulp
bound
push
dec
clc
adc
loop
xor
jb
scas
lods
sbbb
test
mov
xchg
pushf
dec
cmp
or
stc
pop
jmp
bound
int
jge
popf
lcall
aas
aam
shlb
xlat
call
push
mov
cmp
sbb
mov
xor
cmp
nop
outsl
arpl
dec
pop
and
movsb
sahf
jno
cwtl
gs
cmp
lea
pop
dec
jg
jmp
pop
xlat
cltd
adc
mov
into
lock
fucomp
jp
or
movl
and
dec
or
call
gs
dec
and
add
xchg
adc
repnz
dec
adc
mov
mov
or
orb
outsl
or
fisttps
and
mov
adc
dec
inc
addb
imul
xor
and
xchg
sbb
add
sbb
enter
repz
add
fcompl
out
add
cmc
outsb
jmp
rclb
xlat
arpl
fwait
cli
popf
daa
scas
int3
sub
mov
inc
int3
orl
push
push
jbe
cmp
push
push
fwait
imul
inc
insl
mov
or
or
pop
push
and
inc
and
xchg
out
pusha
mov
cwtl
push
mov
fisttpll
cli
dec
mov
int3
adc
lods
data16
jmp
jbe
ret
mov
outsl
mov
out
add
pop
cld
xor
loop
inc
jns
xchg
stos
lret
pop
inc
cmp
enter
dec
and
xor
jbe
arpl
jp
pop
data16
inc
add
enter
dec
pop
lret
sahf
jle
out
push
dec
test
cmpsb
push
cli
pop
xor
sbb
push
notb
sbb
adc
icebp
popf
shl
jne
lcall
adc
test
pop
pop
xchg
mov
rcrl
push
pop
push
and
call
cld
movsl
rclb
sub
cmp
or
mov
xchg
jle
push
or
in
test
push
sub
cwtl
mov
shl
cltd
lods
jns
jb
mov
mov
jb
repz
dec
inc
xor
iret
std
lds
das
sahf
inc
stos
sub
push
ljmp
inc
mov
cmp
mov
fwait
xchg
xchg
loop
sbb
pop
jl
push
sbb
cmc
push
aaa
cmp
jo
lods
popf
call
imul
cmc
clc
xchg
clc
dec
outsl
clc
mov
add
or
mov
dec
dec
push
test
stc
sbb
push
aas
jg
cmp
xchg
inc
repnz
xorb
cs
cmpsb
bound
cmp
add
pop
mov
mov
shlb
pop
fs
cmpsb
cmpl
adc
push
jne
xor
int
xor
jecxz
std
jle
shrl
out
push
ljmp
addl
loope
outsb
pop
mov
leave
push
push
pop
clc
cmp
hlt
fs
outsb
push
sub
mov
jmp
mov
test
fildl
enter
and
stos
jmp
inc
std
icebp
cmc
adc
pusha
push
inc
ds
push
mov
xor
shll
pop
push
aad
popa
sub
jns
xor
inc
loope
jns
pop
in
xchg
inc
je
xor
data16
xchg
jnp
lods
jns
test
dec
adc
push
push
sub
popa
leave
fldl
fldt
mov
inc
xchg
dec
adc
xor
mov
ficomps
stc
or
leave
aas
dec
rolb
inc
pop
je
aas
and
pmaxsw
xor
and
and
sub
sti
mov
pop
sbb
mov
push
sbb
xor
mov
push
out
xchg
sahf
adc
fs
push
mov
lds
stc
push
shll
mov
out
push
pusha
inc
jg
repz
pop
sub
adc
push
jle
sbb
lock
or
add
push
jae
mov
dec
sub
mov
movsb
insb
rorl
jl
and
in
or
rcll
xor
shr
jbe
xchg
push
and
mov
dec
mov
sbbb
aad
scas
inc
aam
cmpb
cwtl
dec
clc
fiaddl
ret
divl
cmp
adc
fcmove
sbb
push
fwait
adc
out
pop
lea
or
insb
je
pusha
loop
dec
out
les
mov
mov
pushf
cmp
mov
cwtl
pop
push
inc
sub
jle
dec
int3
ljmp
shlb
ret
dec
inc
fadds
or
and
std
and
push
shlb
or
adc
rcl
push
aas
sti
ret
pop
mov
mov
mov
pop
int
sbb
hlt
push
je
std
sbb
pop
or
sub
fs
push
jg
shr
adc
push
and
mov
andb
popa
xor
negb
in
mov
dec
mov
cmp
js
cmpb
jnp
or
pop
xor
push
sbb
ds
or
mov
mov
in
mov
mov
jns
add
lea
inc
fcompl
sub
arpl
mov
aas
dec
std
cmpsl
xor
mov
sbb
or
pop
loopne
add
xchg
cmp
in
xchg
add
adc
pop
movsl
xor
xor
les
xchg
xlat
add
mov
cmpsb
mov
jg
stos
cli
or
mov
cli
inc
nop
mov
ret
cmc
push
mov
pop
cmc
mov
pusha
mov
push
adc
or
xchg
and
jg
sbb
pushf
jg
out
negl
inc
mov
push
push
aad
ss
lock
arpl
pop
popf
call
dec
or
and
adc
xchg
mov
cmovs
inc
mov
xchg
cld
xchg
lds
adc
cwtl
ficoms
hlt
or
stos
and
insl
in
sub
std
adc
fwait
daa
bound
ret
jb
enter
in
popf
arpl
out
jno
int
push
loopne
mov
fs
repnz
jb
mov
push
xchg
adc
icebp
scas
add
adc
ss
test
stos
push
and
fsubr
orl
repnz
mov
xor
mov
fisubrl
int
js
inc
aam
lret
push
jmp
sub
fisubrl
loop
mov
leave
mov
pop
jb
aas
xor
stos
inc
lods
mov
inc
jb
adc
inc
and
xorb
xlat
aad
stc
push
and
or
mov
addr16
imulb
cmpsl
imul
enter
adc
or
dec
aas
jecxz
call
or
mov
mull
jnp
cmp
fisubrl
add
cmp
xchg
sbb
hlt
ror
insb
xor
adc
sub
outsl
fwait
sub
outsb
mov
adc
test
cmp
add
cld
jmp
ss
add
and
inc
xchg
lahf
loopne
inc
dec
std
pop
mov
cmc
push
pushf
dec
lods
inc
test
sbb
inc
imul
mov
call
iret
loop
mov
adc
es
mov
mov
dec
jg
idivb
fidivrs
adc
adc
shl
cmpsb
mov
adc
shlb
mov
insb
mov
sbb
xchg
nop
inc
xor
fsubrl
push
mov
outsl
jmp
sahf
in
daa
sbb
mov
pop
xchg
adc
push
adc
dec
mov
test
and
sub
lret
adc
daa
dec
dec
into
out
adc
clc
movsb
cwtl
add
fldt
jno
push
pop
test
xchg
and
cmc
xor
cli
sbb
outsb
iret
or
scas
test
sar
pop
int3
push
fs
hlt
ds
push
jl
jb
mov
gs
inc
dec
addl
mov
sub
je
mov
cmp
xor
lods
call
jmp
cmp
adc
dec
in
rep
sahf
cmp
iret
xor
and
movsl
pop
bound
push
jl
xchg
xchg
push
repz
aam
pop
sbbb
nop
sub
jecxz
push
push
mov
cmpsb
lds
push
pop
ret
xchg
dec
xor
gs
add
add
mov
lret
or
fs
mov
push
mov
inc
jb
mov
negb
movsb
je
xlat
ret
push
scas
push
daa
movsb
push
cmp
xchg
sbb
fmul
push
and
xorb
or
mov
xor
pop
fdivr
cli
and
push
inc
lods
aam
addl
push
icebp
push
or
jmp
insb
pop
inc
mov
dec
shl
fstps
inc
sub
adc
jo
fldenv
lock
xor
or
mov
jne
loope
es
inc
dec
hlt
inc
cli
daa
xchg
mov
fs
mov
cltd
out
andl
cli
fcmove
mov
outsl
out
cmp
call
int3
push
data16
xor
or
fs
popa
shlb
jmp
sbb
cmc
adc
cmp
sub
dec
adc
inc
ja
pop
mov
mov
cmpsb
cmp
pusha
adc
fildl
push
mov
xchg
mov
incb
les
xchg
jae
sub
xor
in
push
sahf
push
dec
pop
ret
xchg
pop
ljmp
sub
pop
inc
lods
lahf
jg
loop
lcall
jns
push
icebp
adc
notb
cmp
cmp
and
int
repnz
sub
bound
cmpsl
stc
jge
jbe
push
aas
xor
jg
sub
cld
or
outsb
jae
sbb
out
jno
sub
xchg
pop
mov
xor
and
cmp
pop
add
pushf
add
sub
idivl
mov
stos
push
sbb
or
enter
push
ss
fnsave
aad
and
dec
sub
addl
cmpsb
mov
shlb
mov
out
jbe
lds
lock
xor
xchg
xor
sbb
adc
mov
xchg
add
jb
call
sbb
aas
popa
sti
sub
popl
inc
aas
sub
add
or
inc
inc
pop
mul
mov
inc
or
add
xchg
imul
adc
sub
xor
mov
pusha
std
out
xor
and
fnstsw
cmc
rorl
add
xchg
sub
add
jl
push
mov
inc
dec
jnp
jg
jg
pop
call
sub
mov
popa
sarb
pop
repz
xchg
imul
or
imul
repz
jnp
mov
adc
lcall
fnstenv
xlat
mov
adcb
cmp
mov
sub
mov
add
lock
add
jae
aaa
jo
adcl
jne
bound
sub
pop
daa
pop
mov
mov
shll
jg
or
mov
lock
mov
cmc
test
movsl
cmc
adc
dec
and
jns
cmpsb
notb
jb
inc
mov
or
mov
mov
sbb
xor
daa
lahf
pop
dec
sbb
xchg
ljmp
push
sahf
fs
xchg
rcr
ret
icebp
mov
lcall
cmpsb
rcl
sbb
jnp
dec
vphaddwq
pop
pushf
ret
in
jnp
mulb
dec
inc
mov
fstl
sub
adc
jne
cmp
ror
ret
cmp
sub
or
insb
loop
or
sbbb
mov
fcomps
imull
lea
in
pop
and
ss
pop
testl
push
rcll
sti
jnp
test
or
in
in
outsb
ret
fmul
arpl
fldenv
add
call
loop
jns
sbb
mov
cld
cwtl
inc
cmp
lcall
inc
repz
xchg
xchg
cmp
mov
cmp
sbb
idivb
add
ja
push
pop
mov
mov
dec
and
inc
imul
mov
sub
cmp
hlt
bound
xor
pop
jecxz
xchg
test
loop
adc
or
mov
cld
mov
int3
cmp
push
std
in
insb
push
pop
lahf
jb
push
sbb
sbb
pop
pop
fldl
mov
test
repz
push
cli
cwtl
sub
rcll
jle
bound
aad
aad
xchg
mov
imulb
jnp
cmp
xor
push
push
pop
cmc
cmp
lea
xchg
inc
sub
xor
mov
arpl
pop
fldt
mov
pop
ret
sbb
mov
fisubl
jbe
xlat
adc
inc
imul
inc
leave
adc
push
adc
xor
or
cmp
sub
push
pop
fisubl
iret
xor
push
int3
add
pop
addr16
xchg
bound
scas
pop
or
cmp
data16
jbe
cvtps2pi
jnp
sbb
lock
add
add
sbb
mov
aaa
sub
daa
and
repz
dec
jmp
incb
mov
in
rcrl
mov
ret
pop
inc
cld
nop
pop
lret
adcb
mov
adc
adc
ret
stos
jbe
mov
pusha
in
shlb
jmp
sub
scas
cwtl
lds
mov
jmp
sti
sarl
in
popa
int
jbe
mov
pop
push
adc
adc
xchg
xchg
xchg
xchg
rolb
ja
mov
pop
in
mulb
inc
pop
xlat
bound
out
insl
ljmp
add
lret
stos
pop
mov
and
xor
cld
test
push
je
stos
xor
int
push
fdivrl
sahf
fmuls
dec
js
les
sub
push
mov
cmp
mov
iret
jb
aas
mov
aam
nop
std
movsl
pop
jae
adc
and
inc
sub
ds
or
out
loope
out
std
push
mov
push
in
test
lahf
jp
jb
mov
xor
stc
xchg
inc
ljmp
sub
adc
mov
out
adc
add
dec
xchg
test
mov
adc
lahf
sysret
xor
mov
cmpb
add
pop
sbb
bound
les
lds
sahf
mov
cmc
jmp
daa
lahf
or
loope
jmp
loope
cli
inc
aaa
insb
xchg
roll
lcall
add
mov
rcrl
xchg
das
mov
fiadds
in
hlt
leave
dec
das
or
orb
xor
in
dec
stos
mov
jb
mov
sub
icebp
cs
lods
xor
pop
or
adc
cmpb
mov
bound
cmp
push
test
stc
mov
jmp
js
and
insl
js
repnz
xor
out
inc
rorl
mov
repz
lods
jb
or
lock
mov
mov
mov
mov
pop
xchg
psrld
inc
pop
test
jmp
in
lea
sbb
out
ficompl
je
icebp
fs
mov
cmp
adc
cwtl
push
lock
orb
xor
jnp
or
sub
loope
icebp
sti
xchg
rolb
xchg
repnz
or
rcr
pusha
lret
xor
or
je
inc
in
and
push
aas
adc
mov
daa
movsb
popa
jns
fimull
out
add
or
sub
jae
adc
xchg
or
inc
mov
jecxz
mov
dec
scas
fisttpl
pop
testl
bnd
mov
adc
cmp
add
ret
inc
aad
inc
push
jno
lahf
push
push
mov
cmc
pop
jp
add
in
sbb
sub
dec
push
lahf
idiv
jo
fst
cmp
pop
push
jb
fistpll
adc
dec
cmp
mov
imull
xchg
lea
pusha
jbe
stc
push
jo
out
mov
fisubrs
cmp
out
inc
jge
sub
xchg
je
jge
sub
pop
pushf
leave
jl
stc
sti
popa
mov
out
xor
jp
push
insl
int3
inc
into
dec
repnz
rol
pop
aas
stc
pop
lods
mov
dec
lds
shlb
push
xchg
fidivrs
mov
dec
and
or
imul
bound
mov
sarb
mov
xchg
sbb
xchg
or
test
enter
js
sbb
inc
push
jo
adc
aam
popa
xor
dec
arpl
adc
jae
mov
pusha
inc
enter
xor
sub
fistps
jl
and
cmp
push
mov
jge
stc
dec
and
jne
push
fcomps
ss
imul
push
jb
pop
out
adc
sub
or
int
out
push
adc
pop
inc
sbb
xchg
pop
leave
xor
gs
data16
insl
sarb
and
xchg
adc
int
dec
lock
aas
dec
push
lcall
negl
sub
call
aaa
adc
jmp
rorb
ret
or
test
pop
scas
sahf
inc
and
jecxz
push
mov
jle
cmpsb
popf
mov
push
mov
int3
cwtl
mov
nop
andl
loope
jb
cmpsb
lods
push
stos
fmull
insb
dec
lods
sarb
jae
stos
mov
dec
mov
adc
out
mov
out
jae
fiadds
jae
and
inc
lea
dec
mov
popa
jbe
inc
lea
pop
aaa
outsl
leave
jbe
jecxz
popf
icebp
iret
or
add
mov
imul
stc
aad
std
popf
rcrl
imul
lret
popfw
jl
mov
pop
push
insl
cwtl
push
out
in
jge
pop
xchg
or
mov
cwtl
dec
fildl
fmull
xchg
or
mov
lret
loopne
enter
push
mov
push
push
cmp
pop
hlt
and
pop
inc
add
pop
push
cmpsb
dec
imul
aas
call
and
dec
sbb
and
mov
mov
fsubrs
push
mov
sub
les
lret
mov
xorl
shll
push
mov
dec
popa
mov
lcall
mov
push
aam
dec
jl
mov
aaa
loope
mov
cmpsl
call
xchg
je
outsb
dec
jge
jle
mov
push
adc
inc
call
stos
out
popf
int3
xor
into
into
test
mov
loope
lods
mov
mov
fisubs
int
iret
sar
js
xchg
ret
orl
xchg
lods
fsubrp
inc
inc
arpl
arpl
bound
aad
jp
mov
cld
enter
jno
xlat
add
test
outsl
mov
scas
test
mov
les
push
sub
xchg
mov
mov
push
mov
sub
mov
fsubl
imull
jl
xchg
push
push
sub
pop
push
lret
jo
fbld
adc
mov
icebp
addl
les
dec
and
xchg
leave
xchg
je
pushf
in
push
scas
jl
test
mov
bound
cmpsb
sub
mov
aas
pop
loop
imul
lahf
loopne
jmp
lock
push
mov
fmull
into
stc
jmp
and
sahf
or
test
xlat
add
clc
mov
fidivrs
cmp
inc
call
js
mov
cmp
mov
jne
sub
in
inc
inc
xchg
mov
aas
outsl
mov
lods
push
inc
repz
imul
rclb
xchg
mov
sbb
mov
dec
mov
cmp
pop
pop
xor
idivl
inc
push
add
xchg
sub
cmp
movsl
xchg
pop
out
repz
or
fwait
jp
cmpsb
mov
xorb
and
test
xorb
daa
adc
dec
movsb
pushf
test
adc
mov
or
jae
out
scas
test
data16
pusha
iret
mov
jb
add
jnp
sarb
add
stos
add
adc
jmp
das
adc
nop
cmp
leave
ret
sub
inc
mov
enter
aad
jl
cs
inc
jge
or
pop
jp
jle
sub
dec
in
pop
pop
leave
sub
fcmovu
mov
pushf
test
std
jmp
jl
pop
or
push
test
aaa
cmp
fs
jns
sbb
call
bound
call
outsb
sahf
or
inc
adc
sbbl
pop
jns
int3
add
dec
jmp
cmp
je
sbb
xorl
dec
xchg
lods
cmpxchg
inc
adcb
arpl
push
jl
cmp
push
les
mov
clc
fs
push
mov
mov
dec
xlat
lret
cli
and
je
ret
insl
je
mov
stos
adc
dec
rcrl
cli
cmp
call
test
jmp
inc
into
xchg
gs
stc
push
pop
fwait
mov
mov
and
push
and
lahf
cmpsl
lods
aad
arpl
in
sarb
lea
mov
sub
push
pop
push
outsl
jnp
je
jns
cld
out
mov
or
jnp
and
jge
scas
dec
clc
jg
jl
imul
inc
fimull
movsb
mov
inc
cmp
aam
jnp
mov
mov
push
or
inc
scas
cmp
enter
pop
mov
jo
lcall
sbb
lock
pop
mov
shrl
lcall
mov
and
shll
popf
rorb
pop
test
mov
xor
xor
lret
dec
sarl
dec
sbb
pop
push
push
lods
xchg
inc
push
pop
mov
inc
adc
aaa
pusha
pop
call
sbb
add
rolb
imul
rcl
pop
dec
jmp
mov
sbb
push
inc
int
push
add
stos
fisubrl
pop
mov
jle
outsb
dec
cmpsl
dec
test
mov
lds
adc
fwait
lods
xchg
push
pop
mov
jae
add
arpl
sti
mov
pusha
fwait
and
jae
fmuls
mov
cwtl
dec
pop
ficomps
add
nop
xchg
loopne
test
leave
repz
sahf
cmp
mov
mov
dec
mov
mov
imul
push
or
out
pop
mov
mov
mov
ss
cltd
xor
insb
adc
sub
incb
pop
popf
stos
mov
pop
or
divl
mov
pop
je
testl
cmpsb
sbb
add
jle
jno
inc
lods
cmp
mov
mov
inc
rclb
cmp
jbe
test
xchg
mov
dec
ss
mov
cmp
js
jne
outsl
shrb
pushf
cmpsb
inc
mov
or
xor
xchg
cmpsl
loop
sarl
lds
dec
adc
and
mov
cmp
out
jecxz
mov
in
mov
mov
hlt
scas
insl
mov
insb
mov
int
les
mov
xor
inc
mov
fsub
mov
rclb
das
cmc
mov
mov
fucom
push
mov
xchg
sbb
in
es
ret
xchg
stos
test
mov
sub
jp
out
add
dec
add
sub
adc
les
and
cmp
fst
fs
inc
cmp
notb
fs
out
jo
sbb
je
push
inc
gs
sub
test
xlat
mov
arpl
bound
shl
cmp
pop
sbb
shlb
sub
rcrb
inc
jle
inc
mov
mov
cmc
jle
pop
inc
fidivl
xor
test
test
xchg
xor
mov
cltd
xchg
and
xor
fldenv
ficomps
sub
pop
cmpsl
sub
adc
ja
fwait
cli
mov
xlat
mov
mov
or
or
lcall
add
sbb
lods
sbb
pop
sub
fs
fs
leave
cltd
rcrl
icebp
mov
xchg
dec
std
or
push
in
sub
push
out
leave
lcall
sub
add
inc
jle
pop
divl
or
push
sbb
sub
dec
dec
lods
jb
dec
jmp
daa
cltd
arpl
lods
pop
outsl
stos
and
test
lods
pop
lcall
xor
fdiv
fcomp
into
int3
in
pop
add
fdivrl
add
push
addr16
mov
lahf
stc
cmc
ljmp
pop
mov
int3
test
fstpl
mov
lds
fisttps
push
and
adc
movsl
push
jns
jnp
jnp
scas
cmp
cmp
imul
push
fisubs
cmp
inc
ss
adc
fwait
xchg
sub
jmp
cmpsb
jae
sbb
or
aas
xchg
adc
scas
scas
pop
repz
add
stos
dec
sub
fadds
xor
jl
add
jg
cli
out
add
sbbl
mov
xorb
dec
imul
inc
fisubrs
jg
loop
or
lret
push
sarl
cmpsl
inc
js
jo
cmp
dec
inc
stos
and
bndldx
adc
test
in
sub
repz
fwait
insl
std
lahf
outsb
or
mov
lahf
ret
adc
push
push
push
xor
mov
test
jbe
sti
loop
jne
imul
ss
inc
lods
sbb
sbb
pop
inc
inc
cwtl
enter
into
xchg
sub
adcl
xor
je
or
in
inc
push
les
push
test
mov
xlat
ret
bound
icebp
aam
pop
cmc
movsbl
add
push
pop
rcl
xor
flds
mov
pop
or
icebp
and
stos
lods
add
push
jbe
or
scas
frstor
ja
dec
adc
insl
xchg
imul
adc
inc
pop
adc
or
aaa
mov
shll
test
js
fidivl
dec
xchg
loop
sbb
inc
xchg
lds
aam
mov
aas
je
shrl
inc
loop
add
into
push
andb
daa
loopne
sub
ret
test
add
ja
das
cmpsb
out
cmc
fs
mov
les
mov
mov
icebp
pop
dec
fucom
push
jecxz
stos
push
sub
lcall
scas
push
in
lea
or
cmpl
cmp
lahf
aas
dec
movsl
loop
xor
mov
daa
sub
sbb
mov
mov
insl
aas
mov
in
out
ds
xchg
inc
or
ljmp
cld
mov
cltd
xchg
sbb
imul
jmp
xchg
and
ja
mov
gs
cmc
push
cmp
cmp
adc
loop
lretw
and
ret
shll
cmp
movsl
inc
repz
push
out
and
adc
or
inc
pop
add
arpl
frstor
test
fidivs
pop
pop
mov
pop
pusha
xchg
inc
push
xchg
int3
lret
fisubrl
dec
sbbb
add
xor
cltd
mov
mov
movsl
xor
mov
xlat
into
pop
xor
ret
in
inc
inc
mov
out
cmp
cld
gs
cli
jbe
xor
std
push
and
sbb
dec
popf
mov
adc
dec
lock
ja
ds
mov
xchg
adc
push
std
pop
stc
cmp
sti
cmp
popa
mov
test
fldl
movsb
dec
push
jo
fcomps
push
xor
test
ss
or
sbb
stos
aas
andb
fmulp
jl
imul
jb
andl
lret
pop
fldl
pusha
jb
mov
jno
xor
or
leave
sbb
mov
jb
stos
insl
pushf
int3
and
rclb
mov
sbb
sbb
sti
xchg
es
add
cwtl
jb
sub
std
sub
add
dec
inc
jns
adc
out
adc
mov
jnp
xchg
pushf
in
aad
cmp
fxrstor
jae
in
xlat
cld
push
fwait
ljmp
cmp
cmp
lahf
jge
ret
xchg
inc
test
out
pop
inc
xor
dec
mulb
rolb
or
sti
lds
and
inc
loopne
pop
pop
cmpw
int
dec
stc
imul
mov
and
push
and
orl
push
mov
fbld
addr16
das
dec
enter
aas
dec
inc
adc
mov
ja
sub
test
dec
stos
and
sub
jg
inc
mov
mov
out
roll
xchg
sbb
cmpsl
jns
outsl
dec
lcall
add
pushf
aas
lret
add
adc
sbb
xor
daa
mov
scas
or
add
aaa
leave
jp
inc
ds
shll
out
mov
jg
int
mov
pop
mov
insb
and
push
add
xor
cltd
inc
or
jbe
sti
fwait
popl
push
popa
pop
inc
mov
fimuls
test
mov
repz
fidivrs
cmp
jmp
ret
aaa
pop
push
dec
mov
lods
pop
call
ja
mov
and
or
clc
jns
in
ss
sub
sub
or
das
push
push
repz
int
cmp
xlat
movsl
sub
mov
iret
stos
sarb
adcb
sub
imul
pop
movsl
scas
in
lahf
and
inc
sti
out
mov
adc
jae
and
xchg
xor
and
imul
repnz
pop
jb
or
arpl
addl
cmc
fmuls
in
cmpsl
popa
mov
push
daa
push
pop
repz
out
push
test
cmpb
scas
xchg
push
cmp
push
rclb
or
rclb
push
adc
jmp
xor
and
mov
or
out
shlb
mov
into
cmpb
cmpsb
jbe
mov
mov
mov
cs
lods
rolb
cmp
mov
out
cmpsb
enter
out
pop
insb
andl
rorl
xchg
icebp
adc
int3
push
cmc
pop
jne
push
rolb
mov
pop
clc
leave
push
push
xchg
add
xchg
sub
dec
call
jg
sbb
mov
mov
cmp
xchg
mov
lea
mov
cmp
xchg
mov
sbb
pop
add
inc
pop
mov
lods
in
imul
mov
call
push
jecxz
movsl
pushf
inc
inc
cld
push
ret
fwait
mov
popa
cld
jns
subb
xchg
mov
loopne
sub
push
cmp
cltd
addr16
stc
or
mov
shr
mov
scas
psrlq
adc
aad
push
mov
cltd
rcr
add
jo
bound
ss
cmp
pushf
jmp
js
ja
shrl
movsl
add
jmp
or
jmp
jo
jno
flds
inc
sub
mov
fwait
dec
pop
bound
stos
jno
or
sub
xor
aas
push
pusha
fbld
out
push
insb
lods
loop
mov
cmp
orps
xchg
pusha
test
das
and
imul
test
aas
insl
aam
mov
push
mov
jne
cmp
stos
arpl
jnp
mov
add
fstp
test
lods
fdiv
push
sub
les
call
inc
mov
sbb
inc
sub
rorl
pop
mov
jae
pop
or
out
imul
es
jge,pn
cmp
mov
pop
push
cmp
jmp
lret
push
inc
dec
loope
in
loop
popf
pop
pop
pop
aas
jb
xorb
mov
rolb
hlt
aad
dec
rcr
ljmp
or
in
dec
sbb
and
cmpsb
push
hlt
sbb
xor
xchg
xchg
cmp
mov
adc
xchg
pop
inc
mov
lret
scas
mov
adc
inc
push
cmpl
jno
cmc
out
lds
fldenv
or
pop
je
insb
push
jmp
call
mov
scas
push
arpl
ja
rcrb
adc
cwtl
sbb
es
mov
jg
in
pop
testb
das
xchg
outsb
sub
aas
push
cs
sbb
int3
xor
ss
rcl
jno
roll
repnz
stos
imul
mov
fs
ljmp
cmp
mov
test
lock
mov
shlb
xor
scas
add
mov
push
push
mov
hlt
fidivl
jp
shlb
mov
mov
mov
pop
mov
dec
fldl
mov
push
push
popa
rcrb
inc
mov
adc
aaa
pusha
or
fdiv
mov
jne
jecxz
adc
jnp
sub
xchg
mov
inc
xlat
pusha
das
dec
mov
and
fdivrs
repnz
outsb
or
push
fdivrp
ja
fimull
arpl
data16
adc
addl
cmc
pop
into
push
pop
and
out
dec
pop
add
loopne
lods
int3
sub
mov
add
pop
fildll
lcall
xchg
pop
movsb
shlb
cwtl
cmp
mov
xchg
adc
fidivrs
lds
dec
sub
mov
mov
test
rcrb
data16
xor
mov
sub
fsubl
shl
insb
clc
sub
push
push
aad
mov
xchg
push
mov
jb
mov
xorl
rcll
clc
add
add
xchg
pop
fwait
mov
sbb
push
cld
adc
push
insl
scas
jge
xchg
outsl
adc
or
dec
and
lock
mov
int3
sbb
pop
test
and
xchg
in
call
cmpsb
xchg
cmc
leave
mov
mov
add
dec
add
push
and
int3
adc
adc
xchg
inc
mov
pop
xor
lahf
arpl
aas
xchg
mov
dec
cmp
nop
clc
add
jb
inc
inc
adc
cmp
jmp
jno
dec
mov
xchg
jmp
cwtl
pusha
inc
xchg
jl
in
mov
in
scas
jns
ret
xor
mov
push
inc
mov
mov
cs
xorl
and
pop
test
data16
lods
in
sar
sbb
push
test
sbb
and
jae
sarl
inc
sbb
inc
fisttpl
pushf
out
add
jp
ss
test
push
fwait
or
imul
insl
imul
xchg
inc
pop
clc
add
dec
push
rolb
das
je
dec
test
cmp
es
adc
add
sbb
popa
in
in
mov
stos
add
push
shlb
mov
les
inc
sub
dec
into
or
push
xor
push
data16
fwait
sarb
cmp
xor
pop
test
inc
das
arpl
cmpsb
mov
add
mov
stc
push
pop
mov
xor
out
and
test
push
mov
xorl
xchg
je
addr16
pop
adc
pusha
xor
dec
test
stos
call
aad
pop
jns
ss
cwtl
andl
lods
rorb
lods
inc
movsl
adc
mov
scas
arpl
mov
insb
fstpl
pop
flds
sub
aas
pop
sbb
or
sbb
fsubrl
mov
hlt
ret
loopne
ja
xchg
mov
xchg
addr16
mov
pop
je
pop
pop
cs
mov
clc
adc
cmpsl
lock
mov
or
mov
fistpl
and
xchg
jp
push
inc
test
jecxz
je
and
sub
jo
into
ss
ss
cs
pushl
enter
cmc
sahf
push
mov
jb
push
jnp
mov
dec
repnz
rclb
push
test
faddl
daa
aam
lods
call
int
nop
out
inc
movsb
jmp
cmpsb
leave
test
jle
mov
iret
hlt
ds
mov
test
out
add
mov
sbb
lret
mov
xchg
adc
push
xor
repz
fsubrl
add
xor
inc
dec
enter
mov
or
insb
lcall
sbb
mov
mov
and
mov
xor
push
gs
cmc
lds
adc
push
mov
mov
enter
sub
ss
in
sbb
dec
cli
sbb
iret
int3
adc
jo
and
movsl
pop
jle
cld
jo
and
cld
pop
mov
jg
outsl
repz
and
daa
mov
mov
sub
sub
jbe
stos
jp
lahf
mov
cmove
cs
sub
xchg
mov
clc
ret
inc
sub
aad
jb
cltd
imul
movsb
pushf
or
add
inc
sbbb
cmp
push
addr16
cmpsb
sub
mov
subb
mov
jbe
adc
mov
ljmp
push
push
iret
sub
mull
push
popa
loop
dec
lahf
scas
lods
cmp
push
push
data16
outsb
or
dec
sbb
movl
push
xor
mov
lahf
cmp
bnd
notl
or
scas
and
push
inc
call
call
inc
sub
xchg
fstl
jl
je
sub
xchg
push
cld
pop
mov
push
lods
sub
in
pop
das
clc
xchg
lds
and
push
mov
fwait
adc
mov
xchg
addr16
lds
adc
popa
cld
pusha
sub
mov
js
outsb
lret
lret
fnstenv
mov
enter
test
fiaddl
dec
and
inc
outsl
fnsaves
xchg
sub
jno
sub
hlt
rcl
cld
mov
cmp
in
test
mov
loope
adc
inc
sub
push
call
insb
outsb
inc
lcall
les
push
add
xchg
mov
mov
xchg
in
xchg
xchg
fs
iret
xor
pusha
add
mov
sbb
cmp
xchg
push
and
mov
cmp
dec
addl
jp
sub
add
xor
ficomps
pop
fld
and
call
lahf
adc
cmp
jbe
rdpmc
jp
cmp
sub
mov
test
lahf
mov
inc
out
mov
xlat
xchg
push
inc
aas
jl
sub
in
push
cs
outsb
ror
sub
in
or
sbb
xor
jp
clc
fsubp
sub
xlat
repnz
cld
bnd
lea
outsb
dec
lret
ds
test
pop
dec
inc
aam
gs
fmuls
cld
aaa
mov
insb
inc
iret
mov
lret
pop
and
mov
ret
orl
pop
jge
or
shrb
and
push
int3
lock
sub
adc
push
shl
aaa
das
sar
and
xchg
pop
in
cmp
cwtl
les
out
ret
test
inc
cmp
xor
mov
cmp
bound
inc
roll
xor
xor
xor
inc
or
test
aad
lret
mov
fimull
int3
mov
and
pop
stos
mov
mov
mov
inc
jae
xor
lds
xchg
xchg
in
cltd
je
insl
mov
add
mov
out
mov
mov
and
in
adc
fcmovnbe
ds
test
ret
dec
or
mov
insl
xchg
jge
push
push
lods
inc
jmp
gs
sti
int3
btsl
sahf
or
mov
push
or
mov
cmp
mov
enter
int3
xor
test
lds
clc
xchg
fcmovnbe
popa
jno
test
daa
inc
je
push
ss
je
cmpsl
stc
or
imull
mov
fists
push
inc
imul
pop
push
pop
xor
push
xchg
or
in
sahf
pushf
lods
mov
lods
cltd
mov
mov
add
jo
and
stos
test
mov
filds
cmc
mov
cli
in
loop
adc
cmc
dec
xchg
insl
fadd
int3
cs
cmp
mov
xchg
ljmp
cmp
movsb
adc
ja
movsb
outsl
xchg
sub
xchg
jmp
or
mov
rclb
sbb
push
std
sub
andl
aad
inc
cmc
jne
es
mov
in
mov
inc
dec
lcall
xor
mov
jns
cmp
mov
or
pop
or
repnz
jge
dec
dec
cld
push
in
sahf
and
sub
icebp
pop
test
cmp
movsb
mov
dec
cli
adc
mov
xchg
xor
lods
imul
sub
mov
mov
mov
jmp
outsl
jnp
fcmovne
xchg
xchg
and
jnp
adc
jb
jmp
push
les
mov
fnstenv
fdivrl
or
bound
xor
movsb
mov
icebp
jmp
add
stc
loopne
and
cmp
xchg
es
sbb
sub
adc
jnp
xchg
jae
cmp
addb
add
popf
dec
add
push
rcrl
imul
stc
jl
jns
inc
pop
inc
loope
jecxz
outsl
xchg
jbe
popf
dec
fs
aas
adc
cmp
mov
add
iret
lods
jmp
sub
test
jnp
adc
add
xorl
pusha
pop
inc
ljmp
dec
loop
dec
inc
push
movsl
mov
sub
aad
es
out
incb
xor
pushf
jge
pop
pop
das
jno
jae
int
mov
or
cli
push
push
xor
sti
aaa
sbb
xchg
sbb
pop
std
sbb
cs
jb
cmp
ljmp
sbb
ja
in
dec
scas
dec
insb
pop
xor
jg
outsb
imul
xchg
or
pop
les
daa
in
not
insb
shll
jmp
mov
outsl
xlat
cld
in
negl
dec
les
sbb
movsl
add
ljmp
or
je
jo
cmp
cwtl
dec
pop
jecxz
pop
stos
out
sub
test
adc
inc
subb
stos
loope
xchg
xor
add
hlt
dec
cmp
sub
mov
sub
jbe
in
jmp
or
or
loope
fstl
dec
cmpsl
xchg
or
test
push
mov
sub
add
mov
out
int3
fistpl
mov
cmp
call
mov
mov
push
jp
dec
cltd
mov
mov
insb
test
fsubr
jno
scas
mov
add
sbb
add
ljmp
into
mov
adc
push
pushf
cmpsb
inc
adc
into
xorb
lea
lods
add
popf
fs
mov
mov
mov
adc
negl
das
outsb
mov
lods
jle
sub
pop
dec
outsb
and
mov
mov
pop
jecxz
and
sub
xor
icebp
mov
xchg
ret
data16
or
sbbb
cmp
and
mov
add
or
or
sub
test
pop
mov
dec
dec
mov
in
mov
push
mov
cld
shlb
nop
and
and
mov
shll
popf
cmpsb
aad
push
aad
lock
loopne
cs
dec
ja
push
hlt
push
stc
popf
pop
mov
sti
xor
dec
sbb
test
into
sub
int3
ja
lods
addr16
dec
push
xor
jno
xchg
inc
jbe
mov
cmp
sub
cmpsb
push
iret
insb
jae
push
dec
arpl
sbb
ja
out
ret
inc
push
mov
subl
pop
adc
lods
push
pusha
cltd
mov
inc
cmp
std
dec
ja
lea
jl
adcb
fldlg2
inc
xor
and
pop
aam
push
aad
jns
dec
pushf
push
mov
add
mov
inc
lret
repz
out
dec
fs
flds
sete
mov
stos
test
pop
cmp
mov
jmp
stos
xchg
or
xor
stc
cltd
add
out
or
push
pop
enter
scas
jbe
or
pop
test
xor
add
aam
jg
add
out
mov
cmp
jecxz
test
test
pop
xor
sbb
scas
add
mov
push
cld
pop
cmp
sub
cmp
stos
dec
adc
subl
pusha
sbb
cmpsl
scas
fidivrl
repz
sbbb
insl
or
lods
out
jnp
dec
lcall
push
push
out
test
adc
sub
push
push
out
test
out
push
mov
jmp
addl
mov
lea
xor
mov
addl
or
arpl
inc
cmp
mov
jmp
js
add
dec
les
in
push
in
into
cmp
adc
sub
mov
imul
rol
je
leave
test
movsb
lret
ja
lcall
add
cli
in
rorb
mov
movsl
pop
jmp
cmp
jge
ja
push
lahf
pop
pop
int
jmp
dec
push
sub
fldpi
insl
lret
sbb
bound
sbbb
std
mov
jnp
jmp
xchg
cmc
adc
mov
jle
mov
and
add
mov
dec
mov
loopne
out
add
stc
pusha
and
call
mov
push
bound
jo
and
shrb
or
mov
popa
fucomp
cmp
or
sbb
cmpsl
pop
jle
adc
pop
mov
mov
sub
mov
insb
and
xor
rcll
loope
cld
ja
mov
decb
sbb
cmpsb
inc
decl
rcr
popf
cmp
cmp
add
mov
in
push
cmp
imul
mov
mov
iret
in
or
xchg
add
pop
cmpsl
push
inc
mov
dec
je
mov
outsb
mov
sbb
lock
jns
pop
adc
fisubrl
testl
sahf
xchg
outsl
dec
mov
shlw
xchg
cmp
rolb
rclb
test
sahf
mov
xchg
pop
lret
mov
jnp
loope
fxch
mov
adc
les
push
daa
sbb
sti
cs
xchg
stos
in
enter
mov
pop
lock
pop
dec
std
adc
or
sub
subl
arpl
dec
cmp
lock
push
cli
push
lcall
or
mov
test
inc
or
gs
daa
adc
sahf
insb
movsl
and
gs
pop
lock
stos
or
mov
sub
pusha
mov
cmp
ret
mov
test
sub
adc
stc
jae
loopne
sub
mov
cli
testl
inc
insl
xor
cmp
ss
mov
push
popa
insl
inc
mov
dec
jecxz
stos
mov
add
mov
mov
or
dec
adc
mov
jne
ss
in
add
push
add
xchg
xor
xor
pop
sbb
out
and
in
cwtl
mov
fs
pusha
cmpl
dec
mov
mov
xor
mov
inc
jne
sub
xor
xor
insb
jo
xor
ja
mov
cltd
mov
pop
inc
pop
cld
int
mov
scas
inc
loope
xchg
push
lea
pop
adc
mov
rclb
mov
pop
out
add
out
insl
mov
cmp
pop
stos
and
cmp
lods
dec
dec
xchg
testl
je
mov
jae
add
shr
aam
jb
mov
scas
xor
jle
movsl
dec
ja
icebp
dec
out
dec
cmpsl
repnz
push
xor
movsb
outsl
shll
cltd
dec
hlt
add
and
fdivs
mov
imul
stos
movsb
pusha
loop
jmp
stos
stc
popl
mov
popa
bound
lock
cld
rolb
mull
fadds
stos
sti
cmpsb
mov
ss
or
cmp
call
dec
sub
fistpll
movsl
mov
jnp
pop
les
xchg
xor
fildll
stos
inc
scas
mov
jecxz
fisttpl
loope
cmpsb
rcrb
or
out
jmp
repnz
adc
cmc
aad
addr16
and
xor
shrl
jle
xor
jle
and
nop
fildll
xor
ds
add
push
jbe
mov
fsubl
fimull
mov
jns
adcl
add
andl
inc
mov
adc
test
push
adc
cmp
mov
push
xchg
in
xor
cmp
push
push
jns
pop
jp
mov
lods
sbb
addr16
nop
mov
xchg
push
and
or
adc
mov
adc
imul
dec
enter
cmp
dec
pusha
test
lea
and
cmp
ss
lahf
lahf
sbb
daa
insl
cmp
pop
cwtl
jl
ja
dec
mov
cmp
push
mov
adc
xchg
inc
insb
fistl
repz
mov
xchg
cmp
mov
pop
repnz
leave
and
loopne
xchg
sub
loopne
push
in
inc
fs
xchg
xor
adc
xlat
mov
xor
out
inc
mov
pop
pop
and
bnd
decl
fadds
les
cmp
jae
cwtl
mov
mov
js
movsb
mov
fldz
out
mov
fiaddl
fwait
lahf
inc
cmpsb
add
in
add
jbe
outsb
dec
enter
push
mov
dec
jns
sub
in
cmc
arpl
fwait
rolb
call
pop
add
sbb
xchg
push
pop
mov
les
jge
push
mov
mov
push
ds
arpl
out
add
bound
fldenv
and
xchg
sbb
mov
loope
dec
inc
lcall
cmp
inc
int
jo
or
or
cld
test
outsb
in
or
cltd
gs
in
jg
push
sbb
out
mov
push
popa
sub
lods
rcr
xor
push
lods
xor
dec
mov
mov
dec
repz
ss
fidivl
jns
inc
jp
push
cmp
and
test
lods
addr16
add
jle
inc
jae
xchg
pop
stc
scas
fbld
stos
mov
push
add
sar
movsb
popl
jge
or
xor
cmpsb
gs
xchg
in
bound
insl
dec
adc
je
aam
jg
lock
mov
and
mov
and
xchg
push
dec
add
cld
jo
push
mov
and
test
jnp
jne
shll
popa
filds
or
lret
mov
mov
cmc
je
pushf
pusha
fldl2e
push
xchg
jns
add
and
push
fs
mov
mov
jecxz
jae
lock
push
xchg
test
pop
lahf
push
adc
cmpsl
into
or
ret
out
stc
lahf
mov
or
enter
adc
inc
daa
dec
in
test
fwait
das
cwtl
adc
mov
xor
add
jg
dec
in
stc
sub
push
jle
outsl
rorb
add
mov
ds
int3
mov
je
inc
outsl
mov
or
inc
jns,pt
into
gs
xor
jp
test
pop
mov
adc
lods
push
test
sti
aaa
movsl
movsb
adc
rclb
out
out
out
mov
xchg
xor
push
iret
cmp
aam
aam
inc
pop
testb
inc
out
push
loop
xor
mov
ja
xlat
mov
adc
adc
sbbb
cltd
ljmp
sbbl
bound
cmpsl
and
aaa
pop
push
pop
in
pop
idiv
mov
hlt
fimuls
daa
xchg
in
loopne
pushl
mov
test
imul
lods
cmpsl
sbb
fwait
test
lahf
stos
cli
sub
mov
pop
pop
rcrb
ljmp
repnz
lcall
incb
in
mov
outsb
loopne
add
add
leave
cmp
push
repz
push
insl
inc
and
cs
int3
xchg
mov
xor
pop
jg
mulb
dec
test
scas
jns
mov
mov
inc
pop
and
or
pop
push
ret
popf
out
cmpsb
xchg
jmp
inc
pop
mov
aad
sub
adcb
mov
in
inc
inc
insb
lret
rcll
jle
rorl
jnp
cwtl
nop
mov
or
mov
pop
jb
xor
ret
je
fsubs
ljmp
hlt
sub
stc
dec
je
pop
les
jecxz
dec
add
sub
sbb
pop
insb
mov
mov
dec
lds
inc
incb
ret
call
into
mov
mov
sarl
fdivrs
cwtl
sbb
or
adc
loop
cli
inc
fdivl
xor
jnp
cmp
pop
hlt
insl
sub
xchg
sahf
mov
inc
sbb
cmpsb
adc
jp
in
cmp
dec
mov
pop
mov
xchg
cmp
jmp
adc
jne
nop
jbe
jno
sbb
xor
cld
push
out
cmc
xor
xlat
pop
or
lea
lock
mov
push
stos
and
lcall
sub
loop
rcr
scas
or
call
pop
enter
pop
fmull
push
sbb
sbb
ds
inc
fisubs
and
xchg
cli
inc
jecxz
fmuls
sbb
mov
sbb
push
enter
jns
jno
mov
add
jmp
pop
mov
xchg
cmp
and
dec
cmp
enter
subb
and
jecxz
dec
les
jne
and
testl
cmp
mov
movsl
cwtl
mov
sbb
ljmp
mov
ljmp
sub
test
push
fsubs
push
sbb
ror
in
mov
sahf
out
clc
inc
mov
mov
sbb
jns
mov
insb
sub
add
stos
or
and
cmc
int3
mov
aaa
push
mov
xor
xchg
push
xor
sbb
ja
jnp
stos
insb
jge
xchg
jne
jecxz
pop
pop
xor
mov
popf
repnz
mov
imul
sub
dec
scas
push
arpl
popa
in
inc
xchg
cli
shrl
or
scas
ja
jb
push
mov
or
sti
outsb
aaa
flds
cld
imul
sti
psubsb
aad
decl
lds
and
pop
cld
jbe
mov
out
enter
mov
in
jecxz
xorb
mov
iret
pop
pushf
sahf
ljmp
out
test
sahf
cmp
jns
sub
std
xor
aaa
stc
popa
in
xor
add
pop
add
icebp
mov
imul
mov
add
out
ficomps
adc
dec
pop
mov
andb
outsl
fadds
xchg
dec
loopne
lret
xchg
out
stc
mov
cmpsl
or
dec
mov
lds
pop
push
jo
fsubp
mov
or
mov
int3
psraw
xchg
xor
xlat
pop
push
xlat
lods
sahf
inc
ljmp
pop
pushf
imul
lret
dec
sti
repz
cmp
test
pop
aam
pop
lock
insl
jno
es
xchg
int3
lahf
add
gs
xchg
imulb
je
xor
mov
idiv
xchg
pop
cmp
inc
imul
push
mov
sbb
sbb
test
ret
daa
adc
insb
push
lock
sbb
jo
adc
les
or
repz
fisttpll
or
fdivr
pop
dec
sbb
pop
adc
cmp
out
in
push
push
lret
push
ret
stos
ss
jge
shll
popl
mov
cmp
cltd
imul
aad
out
mov
dec
xor
adcl
and
xor
push
jne
les
loope
and
in
pop
push
push
xchg
inc
push
cli
cltd
dec
loope
jno
push
or
xchg
xlat
pop
fwait
sub
sub
pop
add
and
add
mov
jae
mov
lock
sub
dec
rcll
cmp
in
mov
xchg
xchg
dec
adc
cmpsl
cmc
test
fistl
mov
dec
lods
dec
pop
add
mov
mov
je
pop
fnstenv
adc
imul
fsts
sbbb
adcl
pop
jl
loopne
cmp
popf
adc
movsl
and
push
orl
sbb
cld
mov
adc
xchg
enter
xor
mov
test
ret
in
inc
enter
shlb
xor
subb
aam
pop
aam
out
push
sbb
cld
mov
xchg
aas
lcall
jb
xor
jnp
lock
lret
into
loopne
push
cmp
fisttpll
sahf
cltd
out
incb
mov
cld
and
sub
cmpb
dec
fsubrs
xor
pop
std
leave
pop
scas
mov
xor
inc
inc
mov
push
xor
mov
mov
inc
repz
pop
adc
mov
outsb
sub
je
inc
cmpsl
jecxz
hlt
mov
or
shl
movsb
push
std
fistl
repnz
adcb
in
enter
jo
fstl
ljmp
loope
dec
inc
es
imul
das
mov
sarb
decb
jb,pn
pop
pusha
dec
sub
cmp
adc
lret
and
int3
xor
or
popa
dec
add
xchg
xor
jno
pop
mov
imul
add
in
repz
scas
movsl
push
jno
xchg
subb
xor
outsb
push
js
add
in
in
rorb
js
jno
jmp
dec
pop
cmp
test
popa
cmpb
mov
jp
or
sarl
lahf
and
mov
shr
xchg
jmp
mov
pmaddwd
std
or
divb
inc
imul
fs
xor
xchg
ss
fnstsw
dec
xchg
jmp
cmpsl
arpl
and
test
loop
push
in
in
imul
xor
add
jge
push
add
jne
pop
pop
mov
ljmp
lahf
sub
mov
push
hlt
mov
stc
pop
cmp
sti
mov
push
mov
jle
push
shll
imul
pushf
jb
mov
push
xor
inc
or
imul
cmp
xor
insb
sbbl
mov
pop
mov
cs
sti
cmp
je
mov
leave
xorl
push
ja
test
xchg
add
mov
sub
daa
mov
ja
push
xchg
cmpsl
dec
rcrb
mov
notb
stos
mov
xor
pop
in
adcb
xor
out
mov
pop
mov
mov
test
lret
mov
fcoml
frstor
inc
popf
sub
cmp
adc
xor
es
repz
dec
adcl
add
in
icebp
icebp
pop
mov
lods
outsb
xor
push
xchg
dec
cmp
pop
in
xorl
add
ficoms
mov
neg
dec
mov
xlat
cmp
subb
sti
push
xor
shlb
push
mov
adc
les
pop
mov
inc
pop
pusha
fs
aaa
test
and
jmp
test
xor
push
pop
pop
add
inc
adc
out
jl
fimull
lcall
sub
cmpsb
pop
xor
xor
inc
jns
adc
mov
add
xor
xor
testb
xchg
call
jge
cmp
or
stos
jns
inc
cmpsb
rcrl
cmpsb
insb
xchg
dec
mov
outsb
push
imull
push
add
add
addb
mov
ja
sbb
xchg
mov
mov
sub
sarl
nopl
lret
mov
ds
xchg
lea
scas
scas
sbb
mov
inc
cmp
cmp
aas
mov
mov
dec
or
push
push
imul
imul
aam
jae
sbb
mov
mov
mov
repz
xor
xor
mov
jmp
add
mov
xor
inc
fldt
lcall
xor
sub
cltd
sub
pop
fcmovb
cmp
ljmp
mov
int3
rcrb
dec
std
inc
lcall
test
mov
push
xchg
shr
jmp
mov
jbe
mov
jge
xchg
addl
punpckhdq
hlt
dec
mov
jae
mov
or
and
mov
cmp
pop
or
clc
iret
mov
xchg
mov
in
sub
dec
push
and
pop
mov
jno
pusha
jl
nop
lahf
adc
sbb
adc
xchg
stos
or
int
es
cli
je
jle
in
pusha
movsb
mov
lods
loop
mov
inc
fsubrp
and
sti
in
pop
dec
popa
mov
add
push
scas
xchg
xchg
fwait
push
add
mov
adc
addr16
sub
scas
add
aas
sbb
and
jae
add
mov
mov
mov
daa
sub
enter
repz
std
or
stos
cmp
mov
int
push
or
mov
mov
out
or
push
lods
inc
jle
xchg
push
jmp
dec
mov
addr16
mov
loop
push
cmp
sub
stos
in
adc
call
inc
add
add
mov
nop
add
or
mov
inc
ror
push
sbb
inc
mov
dec
loope
or
mov
fwait
lcall
mov
jg
inc
fildl
push
out
daa
adc
mov
jmp
sub
xchg
mov
sub
cmp
dec
jns
inc
push
jp
or
inc
aad
push
repz
mov
test
ss
test
lcall
les
cmp
xchg
jae
out
jne
push
xchg
dec
or
notb
pop
jne
lock
adc
xchg
push
mov
mov
icebp
jno
dec
loop
je
add
or
adc
adc
adc
add
cmp
jo
xlat
xchg
std
jo
cwtl
shrl
loop
inc
lahf
sub
iret
push
sub
in
or
int
cmc
test
cmp
cmc
into
add
dec
push
sbb
arpl
mov
sti
mov
popa
sbb
test
and
jo
out
outsl
dec
xchg
add
insb
out
popa
pop
pop
xor
idiv
cmp
icebp
je
dec
addr16
mov
ror
fucomip
jmp
adc
out
dec
jbe
sub
push
incl
xorb
jmp
std
dec
inc
outsb
cld
push
adc
lods
add
cmpsb
out
adc
add
push
imul
rorl
cmpsl
xor
and
stos
xchg
outsl
jbe
xchg
int
pop
dec
sbb
retw
sub
mov
or
jne
xchg
adc
mov
fldenv
fwait
or
std
mov
shlb
push
inc
cmp
mov
xchg
xorl
push
cmp
jl
ljmp
es
mov
push
or
cmp
test
int
sahf
xor
mov
xchg
daa
outsl
dec
inc
aas
dec
mov
imul
fwait
mov
xchg
ror
xlat
ja
dec
movsb
pusha
in
lahf
push
out
das
les
jle
or
pusha
in
mov
bound
repnz
sub
and
cmp
cld
pop
and
pop
cmpsl
ficoms
pop
xchg
xlat
fbld
inc
push
cmpsb
ja
fsts
cli
mov
dec
mov
mov
aam
fwait
jmp
inc
jp
ret
repz
gs
aam
sub
jle
pop
sbb
jno
inc
ret
mov
repnz
pop
adc
cltd
pop
std
rclb
or
loope
lret
push
imul
mov
fstpl
pop
test
dec
mov
ss
sub
lret
mov
popf
add
das
aas
out
xchg
popa
or
nop
je
je
lahf
adc
andl
rorl
aaa
mov
test
cmpsb
jbe
inc
lahf
loop
stc
xor
js
and
jg
fdivrs
jno
cmc
in
dec
cli
roll
mov
xchg
imul
cmpsl
jnp
out
aaa
and
pop
cmp
cli
jecxz
push
xchg
sbb
lock
or
cmp
sub
jo
addr16
cmp
sahf
xchg
shll
mov
fcos
sbb
das
push
jg
xchg
pop
and
jl
push
or
clc
sbb
push
bound
push
adc
in
sub
sbb
outsl
lock
add
lahf
adc
pop
shrb
xchg
in
arpl
bnd
pop
dec
xchg
andl
cmp
inc
push
sbb
fisttpl
cmpsb
cltd
dec
sti
into
out
xchg
leave
xor
lea
xchg
inc
jo
icebp
lcall
dec
dec
mov
jp
sub
imul
cmp
arpl
loopne
stos
pushf
mov
aas
movb
stc
xchg
dec
pop
loopne
ret
iret
sarl
sar
add
int
push
iret
add
shl
and
icebp
dec
jnp
pop
jbe
fmuls
adc
mov
mov
sub
cmpsl
inc
subb
adc
inc
fcompl
xchg
pop
movsb
sahf
mov
sbb
ror
insl
mov
outsb
lods
cmp
loopne
sub
dec
jmp
sub
push
lds
popa
sub
and
fcoms
ljmp
int3
test
mov
cmp
cmpsb
xchg
in
out
pop
je
xchg
dec
or
andl
dec
jle
mov
cmpsl
pop
mov
or
jg
leave
pop
scas
push
add
add
or
inc
out
cli
sub
jmp
je,pn
mov
sub
sub
push
repz
sub
pop
lock
xchg
jecxz
push
sub
in
loop
sti
stos
bnd
xor
sbb
or
jnp
into
or
adcb
data16
in
test
jle
cmpsb
sbb
or
dec
rcr
sbb
mov
fists
shll
movsl
sbb
addb
mov
js
mov
dec
pop
mov
js
xor
imull
popa
fldcw
imul
pop
pop
add
dec
imull
mov
ljmp
pop
jne
addr16
scas
mov
xchg
out
sbb
mov
fidivs
int
push
jmp
mov
insl
mov
dec
adc
pop
cmp
jbe
xor
cmp
mov
les
cmp
pop
lret
fnstenv
sub
daa
mov
addr16
jae
cs
sarl
mov
outsb
xor
inc
addb
mov
ljmp
lea
in
dec
outsl
xor
pop
dec
ret
mov
imul
fbld
mov
adc
inc
in
cmc
cwtl
outsb
cmpsl
jge
xor
adc
pop
es
jo
into
dec
iret
inc
fs
fildll
movsl
icebp
cmp
cmp
lea
movsl
jmp
jbe
dec
cmp
bnd
das
sub
pop
adc
push
iret
call
in
popa
or
push
scas
push
sti
mov
sbb
test
cmp
fstpt
xchg
xlat
insb
sub
mov
ret
faddl
jbe
scas
sub
dec
jbe
mov
inc
pop
fidivrs
sub
cli
frstor
add
std
mov
aam
inc
imul
mov
jle
sbb
push
mov
cmpsl
pop
insb
stos
add
adc
pushf
add
jp
insl
popf
jmp
bnd
dec
pop
inc
xchg
sbb
jns
out
mov
aaa
nop
jne
jmp
nop
jb
aas
repnz
xchg
nop
xchg
test
cmpsb
xor
shl
pop
cs
sbb
aam
jle
and
out
ds
cmp
aad
lcall
inc
mov
clc
cmp
mov
mov
orb
jb
dec
or
test
int3
cmp
cmpsb
shrb
mov
inc
clc
data16
int3
cmpsl
mov
jmp
enter
xor
pop
adc
outsl
sahf
xchg
sub
adc
sbb
stos
clc
repnz
std
std
out
mov
mov
cmc
add
gs
add
sub
bound
lods
push
cmpsb
mov
gs
ljmp
stc
jno
add
push
cld
xchg
movsb
jg
in
push
lahf
adc
movsl
jne
adcb
sbb
inc
stos
repnz
push
adcb
mov
sub
inc
and
or
pop
shlb
xchg
or
int3
insl
push
insl
les
es
cld
sub
jnp
loopne
sahf
cmp
ja
cmpsb
mov
inc
out
iret
lds
outsl
pop
cld
adc
aad
out
inc
mov
cmp
inc
sti
mov
hlt
push
inc
out
ja
sar
or
cmp
dec
test
push
js
pop
bnd
xchg
sbb
rcrb
xchg
xchg
or
rcrb
xor
dec
fstpl
mov
dec
cmp
mov
dec
mov
sarl
xor
fidivrl
jp
jae
mov
mov
lea
jno
les
or
push
scas
xor
or
arpl
outsb
dec
pop
sub
hlt
movsl
loop
loope
mov
push
xchg
sbb
pusha
jbe
mov
movsb
cmpsl
or
pop
cmp
push
xchg
xor
inc
addb
ret
sarl
es
nop
lcall
add
add
sbb
jp
rolb
add
or
push
icebp
xchg
push
xlat
adc
inc
or
ret
call
fld
cmp
inc
mov
or
ds
aas
in
jo
or
jb
xchg
das
in
dec
cmc
test
fistps
loopne
mov
jp
adc
aad
cld
pusha
imulb
and
loopne
cmp
lcall
std
mov
sub
mov
and
inc
imul
push
fidivrl
inc
cli
mov
pop
sbb
add
sub
mov
sub
xlat
pop
into
or
loopne
dec
mov
popf
mov
push
insb
and
lret
sub
lea
loopne
outsl
int
mov
leave
and
nop
imul
xlat
push
sub
test
xor
xchg
jo
fmuls
sub
push
push
rclb
mov
jbe
add
push
loop
inc
push
neg
scas
lds
sbb
in
sub
push
adc
xor
push
daa
adc
lods
aam
setne
imul
mov
sub
cmp
cltd
pop
repnz
mov
jno
xchg
lcall
inc
push
imulb
and
nop
mov
mov
lret
out
add
push
movsl
pop
loopne
mov
insb
sti
sub
mov
popf
mov
fimuls
or
push
mov
rol
push
xchg
dec
lods
shlw
cltd
sub
in
jne
popf
mov
test
leave
into
scas
andl
xchg
rorb
add
into
sub
jp
adc
fwait
jae
mov
mov
je
dec
dec
sub
adcl
rcrb
pop
mov
lcall
dec
push
test
mov
cmp
mov
dec
sti
pop
push
xlat
jl
idivl
arpl
cmpsl
xchg
lea
mov
inc
mov
aas
sbb
push
addr16
inc
mov
sub
mov
stos
mov
xor
movb
or
stos
cmp
sub
jecxz
push
or
xchg
and
jp
cwtl
addb
mov
push
xchg
out
cmc
enter
add
cmpsl
cmc
dec
daa
ds
xchg
cmp
inc
and
imull
outsb
jg
sbb
dec
sbb
xor
addr16
pop
pop
mov
pop
sbb
icebp
xchg
push
adc
or
imul
pusha
sti
lock
scas
xchg
mov
ret
shlb
xorl
test
add
fwait
sub
adc
xor
test
fnstenv
push
ret
hlt
icebp
push
je
movsb
sbb
mov
filds
mov
daa
push
les
out
movsb
cs
mov
idivb
loope
add
popa
xlat
adc
nop
shll
sbb
fsubrl
mov
mov
lret
aam
aad
inc
pushf
inc
xor
outsl
add
cltd
or
xchg
push
or
cmp
fistl
pop
shll
pop
imul
adc
add
sbb
sub
fcoml
mov
and
out
jmp
in
ficompl
sub
push
xchg
movsl
xor
lock
out
push
das
add
xor
xchg
lret
fists
insl
loop
inc
push
dec
out
mov
aas
push
int
test
aam
sub
mov
fsts
dec
dec
mov
icebp
je
push
or
scas
xchg
fcmove
add
sbb
dec
test
dec
hlt
inc
dec
and
mov
mov
push
mov
mov
mov
add
fs
mulb
addr16
rcr
sti
lahf
cwtl
sub
mov
mov
outsb
mov
inc
sbb
mov
lcall
cmp
sbb
xor
push
in
inc
in
cmp
je
jmp
outsl
sbb
call
je
mov
int
xchg
push
pop
inc
bound
sbb
addr16
pop
mov
jo
je
pop
fisubs
out
xchg
mov
pop
sarb
stc
inc
sub
or
pushf
std
dec
cli
sub
call
sbb
mov
insl
xchg
push
push
cmp
xchg
xchg
xchg
std
sub
and
scas
and
out
adc
cli
cs
xor
bound
cmp
gs
out
cs
add
lea
adc
push
or
inc
pop
sti
xor
loopne
dec
incl
xchg
push
hlt
or
jo
dec
es
dec
xchg
and
insb
in
outsl
sbb
ds
shlb
push
mov
sti
sub
lods
inc
adc
cmc
jle
fidivl
ja
pop
push
push
dec
outsl
fs
mov
push
cwtl
fnstenv
fs
je
lret
jge
cs
push
jge
int
jge
mov
call
sub
mov
lods
xchg
push
mul
xor
cmp
cmp
xchg
mov
pop
jb
mov
sub
adc
pop
adcb
dec
jae
clc
mov
mov
push
sub
sarl
jnp
or
fidivs
and
sub
dec
inc
mov
insb
adc
pop
imul
pusha
jle
les
or
repz
stos
and
inc
cmpl
aam
cmp
out
jecxz
xor
or
mov
or
or
push
outsl
xor
or
mov
inc
dec
and
pop
sbb
or
pop
mov
mov
push
imul
xchg
mov
jecxz
lods
pusha
jg
sub
and
pop
or
dec
xor
popa
jge
and
jmp
dec
dec
mov
jle
sbb
push
sahf
pop
hlt
lods
xchg
cmpsl
push
pop
imul
js
fisubs
jmp
sub
mov
shlb
xchg
sahf
ja
call
and
or
into
adc
pop
inc
dec
jnp
outsl
repnz
cmpsl
rcr
rcrl
stc
push
aaa
sti
jp
bound
lret
pop
pop
sub
ret
int3
xor
xor
pop
jg
dec
cli
call
testl
icebp
cli
mov
repnz
cmovl
mov
mov
mov
adcl
arpl
xorl
fldcw
aas
jb
push
inc
in
sub
jle
push
movsl
int3
mov
shl
sub
popf
les
mov
pop
mov
push
dec
loope
lods
mov
push
mov
sub
xor
rcll
and
in
insl
rcrl
cld
clc
jge
std
jbe
sub
lods
sbb
push
lock
or
dec
cmpsb
imul
mov
fdivrs
inc
fists
call
push
or
lea
fildl
ss
push
loope
push
not
xchg
je
in
jnp
xlat
mov
decb
fsubs
push
pop
ret
or
push
mov
stos
lea
push
movsb
xchg
and
and
xor
and
lea
fisubrl
imul
cltd
cmp
and
add
push
or
cwtl
into
add
inc
mov
into
mov
outsb
jmp
sub
pusha
and
shlb
jecxz
pushf
dec
xlat
sbb
mov
xchg
cmpsl
ljmp
dec
jge
xor
scas
jmp
stc
push
leave
inc
in
pop
aas
leave
dec
int
adc
xor
push
fisubrl
stos
ss
xchg
dec
cli
cmpsb
int
test
pop
ds
jno
xchg
cli
xchg
xor
mov
cmp
or
push
call
sar
fldt
mov
orb
insb
cmp
add
clc
mov
fiadds
decl
cli
dec
mov
lahf
sbb
inc
in
dec
xor
subl
popf
scas
mov
bound
cmp
test
dec
pop
pop
or
pop
pop
mov
das
or
testb
jecxz
sbb
outsb
les
cmp
or
push
test
xor
mov
mov
or
xor
dec
jns
and
add
fsubrl
imul
lods
adc
lods
pop
mov
icebp
xchg
imul
cmp
call
rcrb
shll
or
mov
fbld
push
push
cmp
movsl
loope
pop
inc
ss
and
mov
sbb
in
scas
icebp
jae
in
adc
dec
push
and
push
enter
jb
mov
push
js
lret
repnz
jbe
jl
sub
jnp
fwait
popa
xor
push
mov
fisubrl
lcall
xor
or
mov
mov
pop
stc
gs
mov
pop
mov
jl
sub
push
xchg
dec
cmc
insb
xchg
inc
into
jge
in
ret
pop
inc
sbb
icebp
cmp
adc
jo
cli
outsb
push
notb
jmp
lds
pushl
dec
pop
xchg
scas
push
lahf
mov
jle
scas
inc
loop
sbb
clc
jno
jno
inc
cmpb
push
fs
sub
andps
mov
sub
stos
mov
cmpsl
out
inc
jge
dec
bound
hlt
push
xor
cmpl
decl
cmp
or
inc
mov
mulb
mov
push
jle
mov
hlt
fs
mov
or
sbb
testb
inc
pop
gs
xchg
mov
test
pop
jae
sti
xlat
sbb
loope
xchg
outsl
mov
inc
pop
jnp
mov
movsb
cmpsl
sbb
cli
fwait
pop
or
out
idivb
rorb
popa
sbb
inc
pop
xor
cmp
pop
sarl
cmp
sub
data16
pop
jmp
test
jecxz
cmpsl
inc
pop
mov
bound
adc
lock
push
std
out
in
push
pushf
pop
sbb
outsl
and
repnz
fmuls
and
inc
mov
mov
popa
sbb
in
inc
push
nop
mov
cmc
in
filds
cmp
add
enter
jp
push
mov
cmp
inc
dec
jl
ret
pop
fstp
insl
outsl
add
push
stc
mov
mov
cld
and
sbb
cs
cmp
or
in
flds
das
sbb
loope
inc
xor
insl
pop
xor
icebp
das
jle
push
add
sub
xor
inc
cltd
mov
inc
mov
pop
push
shrb
cmp
push
in
shrb
push
push
jle
mov
or
jne
scas
xchg
push
hlt
lcall
sbb
into
cli
jns
pop
cwtl
loop
divb
movsb
jmp
pop
imul
das
sub
iret
jg
lock
or
xchg
test
ds
mov
xchg
idivb
lds
mov
aas
pop
or
xor
lret
jno
sub
pop
inc
inc
dec
pop
xlat
scas
push
cmc
mov
nop
sbb
cmpsb
xchg
cmp
dec
inc
int3
cmp
lods
xchg
mov
xor
add
sbb
cmp
mov
inc
fstps
inc
jb
jle
ret
xchg
ljmp
jb
movsb
pop
and
jne
inc
inc
adc
cmp
aaa
mull
sbb
hlt
push
mov
mov
lcall
icebp
adc
push
divb
and
push
icebp
mov
cmp
xchg
mov
pop
out
pop
mov
dec
mov
arpl
nop
add
lods
inc
out
xchg
cwtl
cltd
jg
cmp
lret
int
daa
mov
jl
fwait
xor
cwtl
sub
jno
rorl
sub
inc
out
mov
hlt
sub
sbb
lcall
lods
cli
cmp
mov
add
fs
xlat
sub
xchg
jmp
pop
inc
push
popa
rol
inc
aam
jo
mov
push
in
sub
inc
stos
dec
jne
push
jnp
jne
js
adc
mov
xor
lea
inc
sahf
sub
dec
cmpsb
das
call
cld
out
xchg
movsb
rcll
lea
loopne
or
mov
push
adc
fcoml
ja
cmovs
fiadds
xchg
addr16
push
add
xor
jns
jg
cmp
movsb
shll
js
xlat
or
aaa
cmp
iret
mov
aaa
rcl
mov
inc
add
outsb
mov
lret
sbb
cmpsb
movsl
mov
xor
mov
icebp
test
push
fiadds
jg
gs
movsb
dec
jle
rcrl
sbb
sti
popf
sub
test
mov
arpl
sbb
mov
cmp
jl
mov
cltd
in
subb
dec
xchg
xorps
mov
fsubl
or
ficomps
loop
lcall
jns
jmp
mov
or
insl
mov
dec
lret
das
mov
add
pop
in
cmp
iret
jne
mov
mov
inc
mov
jp
pop
adc
fsubrl
and
pop
pop
cli
pop
xor
xor
aas
sbb
cmpsb
addr16
mov
add
testl
filds
jns
inc
cmp
outsb
inc
jl
dec
outsl
and
cmpsl
mov
std
rcrl
fidivs
enter
mov
imul
lock
int
pop
jmp
pop
icebp
jmp
cmpsb
or
das
cmpsl
dec
loop
dec
cmp
and
movsb
or
mov
mov
xchg
push
pop
jne
mov
ret
orl
hlt
arpl
mov
data16
scas
cmpsb
popf
add
sbb
jne
or
cli
and
aam
rcll
imul
mov
inc
popa
es
and
push
sbb
scas
out
mov
aaa
in
enter
out
nop
sti
sarl
xchg
fadd
outsl
mov
adc
inc
or
mov
rcrb
sub
cltd
fmul
mov
movsl
sbb
das
jmp
xor
inc
pusha
aaa
mov
inc
leave
daa
sbb
and
add
loopne
mov
out
fcomp
sahf
das
loopne
stos
imul
jge
lods
xor
jae
lock
or
rcl
mov
push
pop
loopne
into
imul
notb
xchg
pushf
psadbw
ja
lea
fidivs
loop
jmp
pop
push
sbb
inc
sarb
pushf
pop
movsl
push
sti
adcb
pushf
push
jl
cmp
sbb
jnp
add
jge
or
or
cmpsl
jle
jno
mov
push
sbb
out
dec
cmc
xlat
add
jae
push
xchg
xchg
mov
mov
mov
or
xchg
rep
je
sbb
lahf
rclb
divl
cmpsb
xor
adc
in
stos
lret
mov
jecxz
jmp
mov
rcl
inc
sub
xchg
jle
in
mov
rcr
test
out
es
xchg
rcrl
int
je
enter
mov
test
test
adc
cmpl
mov
popf
jge
insl
adc
cmp
das
fldl
xor
xor
loope
mov
repz
das
xor
push
jecxz
push
cmc
lock
xchg
movnti
loope
push
cmp
xor
das
adc
xor
arpl
out
push
aas
xor
gs
mov
lds
push
insb
out
mov
pop
pop
jle
jle
std
loop
sub
imul
leave
mov
js
rorl
shlb
jmp
inc
xchg
jecxz
cmp
xchg
les
test
pusha
outsl
push
ffree
xor
std
das
pause
mov
imul
and
push
sbb
push
popa
mov
test
aaa
xchg
dec
scas
mov
push
inc
std
sti
jp
movsl
repz
iret
push
adc
pop
cmp
inc
rolb
mov
dec
dec
inc
mov
mov
popa
pop
cmp
inc
jle
mov
pop
inc
rol
cmc
dec
hlt
das
xchg
fs
out
out
inc
xor
mov
dec
dec
sbbl
pushf
dec
gs
int
data16
xchg
cmp
rorl
push
scas
sub
sub
xchg
xchg
test
jecxz
inc
push
lret
iret
nop
fwait
add
fldcw
and
cmp
xchg
pop
push
addr16
adc
dec
inc
mov
push
aaa
and
int
pop
in
inc
jno
gs
sbb
pop
loope
xchg
cld
es
sahf
and
sbb
lahf
aad
cmp
push
in
dec
scas
xchg
or
imul
mov
add
out
mov
bound
add
pop
pusha
insl
pop
fcoml
mov
push
pop
insb
jl
dec
ds
mov
mov
and
sbb
repz
jecxz
jns
out
xchg
outsb
mov
ss
outsb
xchg
xchg
imul
push
push
in
pushf
mov
loope
movsl
js
aad
shl
lret
in
xor
mov
xrelease
sub
mov
les
je
add
test
lds
out
les
inc
pop
test
ljmp
lock
jmp
popf
mov
and
xorl
cli
sti
stos
pop
and
push
mov
gs
hlt
push
out
push
sahf
add
cmp
lret
fcoml
or
push
adc
aas
xchg
addr16
pop
mov
data16
clc
push
sar
movsb
inc
jb
mov
sbb
out
mov
or
movsl
mov
psllw
dec
dec
imul
iret
fwait
cmp
cmpsb
push
jge
ja
inc
ret
dec
fwait
into
xchg
lcall
mov
dec
lret
xlat
xor
cld
fnstsw
in
xor
adc
jl
jl
mov
dec
stos
add
dec
sbb
dec
xchg
adc
pushf
mov
icebp
ljmp
or
dec
cli
sub
sbbb
add
xchg
mov
add
mov
jecxz
cmpsb
jnp
jnp
loop
rcl
pop
inc
adc
dec
mov
add
sbbb
ja
push
xor
inc
mov
mov
cmp
and
push
cwtl
mov
lret
adc
cmp
dec
ror
mov
scas
push
cmpsl
aaa
adc
leave
jbe
rclb
jns
mov
pop
or
dec
inc
ret
stc
pop
andl
in
std
sbb
pop
in
jne
and
andl
jo
jbe
inc
out
subps
mov
dec
ret
enter
sahf
hlt
pushl
lcall
icebp
loopne
ret
dec
mov
cli
inc
sbb
int
adc
sbb
cmp
mov
insb
icebp
out
sbb
imull
push
sbb
lret
js
xchg
push
fs
xchg
add
repnz
mov
and
xor
jbe
xchg
push
push
cld
push
mov
in
mov
insb
mov
dec
mov
jmp
fstps
lret
adc
mov
push
inc
pusha
std
inc
fwait
ja
push
in
call
push
jbe
shll
stos
es
dec
and
dec
sbb
mov
mov
xchg
adc
xor
mov
xchg
sbb
jae
jmp
and
mov
cs
pop
push
scas
mov
cmpsb
aad
inc
jp
lret
popf
cmp
or
mov
leave
aas
inc
sarb
or
jne
xor
sub
inc
je
ja
dec
push
aam
add
xchg
dec
push
in
push
les
mov
add
pop
rorb
ds
and
lret
js
jns
sbb
lcall
outsb
xchg
movsl
aas
repnz
xchg
xor
mov
addl
mov
xchg
icebp
cmp
xchg
faddl
sti
mov
pop
dec
call
dec
sub
ficoml
pop
icebp
xchg
xchg
mulb
dec
xchg
fisubl
mov
fmuls
cmp
jns
cmpsb
mov
mov
std
inc
and
add
bound
fldt
xor
mov
xor
lahf
in
sub
pop
leave
lea
jbe
sahf
inc
push
dec
jge
mov
mov
or
lret
loopne
jo
roll
bound
shl
loop
xchg
adc
rcrl
sbb
lret
insb
rcr
xor
dec
dec
push
or
and
movsl
out
cmpsb
cli
lock
mov
mov
andl
or
stos
lahf
fists
jmp
push
push
cmp
jg
and
addb
xor
repnz
mov
jne
xchg
movsb
jp
mov
push
push
out
mov
inc
push
mov
lcall
sub
stc
test
insb
mov
lret
cmc
cwtl
inc
adc
lahf
ja
dec
testb
sti
adc
push
mov
out
and
outsb
icebp
push
mov
or
push
xchg
adc
les
notb
outsb
inc
push
stos
in
divb
mov
int3
lea
insb
movsl
jge
loopne
dec
fimuls
adc
adc
and
pop
ss
adc
mov
mov
mov
inc
pop
lods
pop
sub
daa
dec
push
nop
lahf
inc
orl
sub
mov
test
int3
jns
push
xchg
mov
add
push
add
ds
outsl
dec
or
cmpb
pop
ja
test
push
mov
mov
fists
stc
pusha
popa
es
lahf
and
rdmsr
jo
movsb
or
je
mov
pop
add
mov
out
addb
pop
push
cld
pop
ja
fisubrl
mov
sbb
aas
enter
pop
out
pushl
lcall
push
jnp
sub
shlb
data16
into
stos
jo
xchg
jb
adc
dec
orl
lods
xor
mov
test
fs
mov
jecxz
jecxz
jmp
loop
lods
pop
xlat
repz
dec
inc
aaa
aam
lds
inc
leave
jge
inc
mov
pop
and
psubb
clc
call
or
mov
cli
fucomp
xchg
dec
jne
mov
adc
jg
push
nop
jg
adc
es
pop
sub
insb
add
push
adc
mov
jp
adc
enter
mov
sbb
stos
into
pop
xchg
inc
mov
cmp
jae
mov
mov
adc
xor
fwait
or
pop
rorl
ffree
dec
xor
repz
orl
pop
or
pop
or
mov
jb
pop
adcl
mov
sub
stos
inc
rorb
pop
out
and
repnz
mov
mov
mov
cs
int
push
xchg
out
repnz
in
loop
adc
and
fdivs
enter
fidivrs
jbe
push
lret
adc
cltd
sarl
pop
aam
pop
bound
xor
loop
pushf
sarl
pop
sub
or
mov
ret
or
xchg
repnz
push
loop
push
mov
insb
mov
or
dec
ljmp
add
mov
mov
cmp
cmp
lret
lds
fistpll
xchg
pop
aad
aas
sti
xchg
or
fwait
into
test
mov
pushaw
mov
cmp
lods
mov
lds
stos
cmp
jg
cld
testl
popf
push
inc
fwait
call
cmp
cli
and
jbe
mov
and
mov
dec
cmp
addr16
jne
pop
aam
icebp
dec
inc
imul
sahf
mov
pop
sub
cmc
scas
xlat
dec
sbb
jne
or
pop
arpl
andb
sbb
in
movsb
loop
rorl
icebp
jp
cmp
lods
mov
push
add
in
nop
lds
orl
jmp
nop
jae
jne
and
out
sub
rdpmc
repz
push
repnz
addr16
enter
cmp
insb
mov
stc
push
fsubrl
push
inc
push
cmp
push
mov
mov
add
jg
ss
fnstcw
out
loopne
add
in
mov
mov
sbb
sbb
xchg
mov
inc
inc
pop
inc
push
out
sbb
movsl
add
cmpsb
mov
push
js
add
int
in
push
push
sub
je
dec
sbb
mov
mov
xchg
xlat
mov
jmp
ret
subb
icebp
dec
in
xor
sbb
shrb
lahf
jecxz
mov
dec
xchg
insl
sbb
and
adc
fsubrs
loopne
ja
subb
push
push
bound
lock
gs
and
add
mov
ljmp
dec
xor
adc
stos
mov
mov
fsubrl
icebp
in
xchg
lahf
ret
xlat
lods
xchg
push
out
shll
mov
ror
mov
or
xlat
and
sahf
mulb
xchg
jns
sarb
and
cmp
and
hlt
sbb
sub
out
sti
dec
jp
mov
out
outsb
test
xchg
nop
xchg
ja
loopne
test
cmp
ret
not
xchg
test
mov
adc
mov
push
jp
or
cwtl
stos
cmpb
nop
repz
cmp
loopne
in
xor
mov
rcl
xor
xor
mov
int
xor
mov
je
sti
xchg
xchg
pop
imul
xchg
addr16
loope
lods
mov
xchg
pop
inc
and
repnz
daa
fcoms
dec
mov
xchg
mov
das
mov
xorl
in
pop
popa
push
test
ficompl
mov
clc
push
pop
sysenter
mov
mov
fstpl
xchg
adc
jo
mov
cmp
cmp
fstps
push
into
mov
hlt
inc
les
ds
and
or
aam
push
out
mov
imul
xchg
mov
xchg
adc
sub
in
leave
test
in
dec
cs
sub
add
xchg
pop
lcall
pop
in
mov
sbb
cmp
cmpsb
test
rorb
inc
pop
adc
sahf
cwtl
insb
ss
sbb
inc
leave
fmull
dec
mov
mov
jne
mov
fmuls
lcall
push
int3
xchg
inc
xchg
xor
outsl
loopne
mov
or
inc
stos
add
pop
lcall
xor
jo
or
sbb
nop
lods
sub
fidivs
cmpl
jp
in
lock
jg
inc
jae
pop
andl
sub
call
shlb
ljmp
sahf
lcall
fmul
icebp
xchg
divl
xchg
or
dec
lods
pop
mov
mov
mov
jbe
jbe
leave
lds
repz
mov
sar
insb
xchg
jge,pn
test
lds
mov
push
mov
sub
scas
insl
dec
andl
out
push
and
jmp
gs
sub
js
lods
mov
inc
testl
xchg
push
std
and
cmp
imul
imul
jno
adc
adc
aas
lret
mov
daa
andb
rorl
xor
dec
mov
movsb
cmp
inc
jp
lea
jmp
or
negb
push
pop
in
xor
test
jmp
inc
xchg
push
jbe
repz
mov
sbb
aad
mov
cmp
sub
xor
fwait
in
imul
jle
xlat
jae
cmc
mov
ret
add
pop
sbb
lods
mov
push
lret
outsl
push
mov
jo
ja
or
xor
pop
mov
mov
adc
pop
out
jmp
and
ret
cmpsb
mov
je
bnd
jge
add
jb
js
or
jae
cli
pusha
jnp
sub
repnz
xor
pusha
cmp
imul
addr16
sbb
mov
mov
and
mov
cmpsb
xchg
jmp
lea
int
lret
mov
xor
out
fsubrl
xor
loop
out
scas
jbe
pop
sbb
lret
mov
or
mov
shrb
push
cmp
cmpl
push
add
xor
ficoms
push
fwait
call
inc
sub
aaa
sbb
add
xor
out
bound
fcomi
cmp
mov
jno
and
lock
jp
gs
jecxz
out
mov
sbb
scas
mov
pop
mov
dec
shll
and
aad
mov
jle
push
inc
gs
outsl
pop
leave
push
pop
or
mov
xchg
stos
jmp
jne
sub
lret
xchg
mov
mov
xchg
jecxz
ss
cmp
pop
push
adc
pop
jg
test
scas
pop
lds
test
adc
shl
scas
stos
mov
jae
and
es
imul
lcall
cmp
inc
push
icebp
pop
mov
in
fistps
cmp
jg
out
pop
call
jbe
mov
mov
jl
push
mov
call
fsubrl
out
in
lret
xchg
arpl
jge
rcr
outsb
out
sbb
adc
pop
rol
idivl
fdivl
or
inc
pop
outsl
ret
outsl
leave
lea
cmpsb
les
jne
ja
and
data16
pop
iret
lret
dec
movsl
mov
jecxz
fdivrl
and
mov
sub
popl
mov
mov
test
mov
movsb
pop
push
jb
popf
jg
inc
ss
insb
and
cmp
pop
inc
mov
xchg
pop
add
xor
test
lret
push
imul
lcall
flds
movsb
pop
add
sub
outsl
das
lcall
aam
test
ret
cmp
test
mov
adc
jg
out
cmp
mov
daa
out
outsb
dec
mov
dec
pop
push
mov
cli
sub
cmp
add
push
loop
outsb
hlt
xchg
jnp
pusha
lea
cmc
cltd
mov
test
pop
pop
lret
orb
sbb
jo
test
jae
cld
aam
mov
add
iret
fldenv
dec
sbb
xchg
js
push
xor
add
stc
lods
daa
ficoml
sbb
mov
js
or
add
stos
mov
iret
or
shl
bnd
jnp
dec
and
rcl
cmp
or
fcmovne
test
mov
cmp
aad
push
jb
mov
jg
cmp
mov
pop
mov
sub
aaa
push
inc
pop
inc
sbb
outsb
inc
xor
loop
aas
pop
dec
fstpt
loopne
adc
lret
je
mov
mov
ljmp
ds
mov
add
and
jecxz
jecxz
test
mov
cli
pop
dec
inc
fwait
out
fildl
add
pop
jp
outsb
aam
cs
popf
mov
xchg
mov
xchg
lret
inc
mov
test
mov
lret
hlt
insl
push
test
stc
dec
outsl
out
pushf
sub
xor
in
outsl
in
in
imul
nop
mov
adc
push
test
int
out
clc
out
jne
inc
mov
jg,pn
jnp
in
aad
cltd
inc
loop
movsl
cmp
cld
data16
mov
fidivs
jb
xchg
or
xchg
cmp
and
sbb
mov
aam
push
push
or
dec
cmp
xchg
or
sbb
out
sub
pop
test
mov
add
lret
pop
and
arpl
stos
dec
sahf
dec
jb
inc
ficomps
jg
popf
in
or
pop
push
loop,pt
mov
sbb
add
xor
ja
gs
jbe
jno
int
call
mov
jno
mov
cltd
xor
and
or
adc
jg
sbb
rolb
sub
push
in
rcll
in
mov
dec
imul
cs
xchg
or
adc
or
jecxz
shl
and
addl
mov
push
xchg
lds
push
js
scas
pop
out
pop
jnp
cltd
cmp
in
add
arpl
lcall
ds
sub
add
or
xor
mov
add
xchg
jle
aad
daa
cs
stos
movsb
ficoml
jns
lcall
popl
incb
xchg
sbb
xchg
std
lds
dec
push
dec
gs
push
sbb
ret
adc
xor
mov
push
sub
mov
add
push
sbb
es
out
jg
out
jns
mov
xor
clc
icebp
cmp
in
xor
push
xor
andl
test
imul
push
fdivrs
xor
xor
pop
mov
and
xchg
mov
mov
or
pop
mov
fwait
inc
testb
sbb
or
mov
cmp
icebp
stc
outsl
dec
lret
loopne
lcall
lret
ret
loope
mov
in
cmp
test
aas
xchg
cmp
add
movsb
sbb
enter
cmp
fld
shrb
mov
sub
lea
and
xorb
mov
pop
or
or
and
and
sub
in
fdivp
lods
and
sbb
fwait
sbb
inc
jg
sub
xor
add
pop
andl
fisubrl
mov
jbe
roll
loope
dec
sbb
mov
aam
sbbl
mov
div
ljmp
stos
scas
lds
jp
mov
adc
pop
cs
push
or
lock
hlt
test
mov
mov
mov
ficompl
pop
sub
insl
mov
adc
mov
jnp
sti
cld
scas
jo
push
or
adc
testb
ja
repz
out
ret
enter
sub
mov
push
add
std
or
stc
jo
insb
adc
orb
jge
push
xor
cmp
in
push
jo
ljmp
adc
xchg
loop
and
cmp
and
movsl
sarb
insl
cmpsb
test
mov
pop
sbb
int
or
lret
cltd
mov
pop
jbe
cmp
mov
or
xlat
pop
int3
ret
pop
adc
mov
sbb
mov
stos
mov
xor
xlat
adc
ret
outsl
mov
idivl
lret
or
cwtl
adc
mov
pop
pop
stos
fildl
pop
movsb
sub
jmp
leave
es
mov
fdivrs
cmp
or
js
icebp
addr16
sub
clc
shll
pop
mov
mov
add
fisubrs
add
fsubrl
inc
push
jecxz
roll
mov
and
dec
filds
ret
in
mov
inc
and
cwtl
jne
pop
aaa
pop
popa
sbb
adc
bound
out
mov
fisubrl
or
and
fcomps
adc
fdivp
lock
mov
inc
scas
push
rol
int3
jmp
aam
pop
ljmp
int
mov
fisubs
les
mov
dec
dec
xchg
mov
add
mov
inc
or
lret
jmp
in
xor
ss
adc
cli
cmpsl
dec
sbb
cmp
mov
inc
jg
into
aam
jae
pop
inc
repnz
cli
popa
insb
and
sub
mov
rol
push
xchg
pop
repnz
lret
pop
imul
mov
orl
or
daa
mov
loope
mov
mov
push
outsl
lcall
aas
mov
sub
enter
notl
xlat
in
xor
in
out
pop
xor
scas
dec
data16
dec
testl
push
add
push
nop
cmc
cmp
jle
mov
andl
imul
xchg
test
and
dec
int
scas
stc
aaa
incb
jg
sub
aaa
pop
test
cmp
xchg
loop
shll
pop
out
or
lret
cmc
xchg
mov
xchg
cmpsb
adc
fisttpll
pop
pushf
dec
xor
dec
mov
add
mov
mov
scas
xchg
jp
aaa
jne
popf
rcll
jmp
lret
jns
icebp
in
fistl
rcr
sbb
adc
cs
outsb
sub
pop
in
xchg
pop
or
or
or
ja
loop
clc
fldcw
imul
or
and
js
and
lods
or
fidivrl
lret
mov
mov
rolb
push
fs
pop
inc
imul
mov
or
sbb
jmp
aam
movl
mov
ja
xchg
mov
xor
hlt
xchg
mov
jae
pushf
cmp
mov
jnp
adc
sub
cltd
cmpsb
mov
or
lahf
pop
shl
bound
outsb
cmp
out
call
ljmp
cld
dec
fld
fiadds
xchg
stc
orl
test
ljmp
lret
rcrb
lcall
fisttpl
add
adc
cli
sbb
fists
mov
cmpsl
adc
add
mov
imul
loop
in
sbbl
pop
push
dec
sub
imul
mov
rorb
pop
mov
mov
sahf
push
jl
adc
mov
sbb
and
mov
cs
sbb
jo
fwait
mov
mov
mov
shrb
aas
mov
jo
movsl
jne
and
stos
jmp
in
je
out
xchg
and
scas
loop
xchg
inc
push
push
or
xor
inc
stc
dec
pop
sub
pop
popa
rcll
adc
push
mov
ds
inc
fmull
push
sbb
int3
push
int3
jae
ja
int
xorl
cmp
push
out
in
cmc
xchg
and
add
mov
aam
mov
sarl
fcomps
push
jns
cmpsb
xor
jl
je
daa
adc
xor
add
cwtl
enterw
ss
test
imul
mov
fcmovnbe
pop
ficoml
cmp
icebp
arpl
in
cli
cmp
mov
js
je
rcl
xor
movsl
es
pop
ss
addr16
iret
add
lret
es
mov
inc
sub
sbb
sub
lods
sbb
inc
ds
adc
mov
fnstcw
mov
ss
xor
fldt
jmp
dec
sbb
imul
aas
jb
into
xlat
xchg
sti
imul
mov
ficoml
lret
push
push
mov
insb
cwtl
insl
sub
int
mov
jecxz
ret
movsl
cmpsl
adc
test
in
jo
sarb
add
and
pop
push
cmp
leave
cmpsb
std
add
xchg
mov
mov
pop
xor
in
pop
fcoml
es
out
adc
bound
jns
int3
jnp
ljmp
loop
mov
loop
lds
mov
mov
cwtl
iret
sub
pop
or
pop
pop
pop
imul
mov
jnp
stos
cltd
xor
add
push
imul
mov
add
adc
push
stos
fmull
loopne
sub
or
mov
fstpl
add
cmp
push
in
ss
leave
pop
test
and
aad
fs
push
flds
sub
popa
dec
mov
jmp
sti
and
in
mov
stc
aad
rclb
jns
sub
mov
jo
outsb
pop
test
and
mov
les
sbbl
cmp
aaa
xchg
lock
xchg
test
fs
jg
clc
lcall
adc
inc
mov
fidivrs
mov
movsb
push
jl
icebp
push
and
inc
sub
pop
ret
mov
imul
movsb
adc
fstl
out
iret
push
mov
jge
push
mov
and
repnz
inc
cmp
xlat
and
pop
inc
and
insb
fsubl
ret
mov
fmuls
mov
pusha
pop
insb
jmp
hlt
mov
pop
jno
lods
das
mov
push
pop
sub
pop
ja
xchg
adc
cmp
or
je
sbb
cmpsl
hlt
into
sbb
out
leave
std
loopnew
pushf
lods
mov
push
or
std
stc
push
cmp
jno
shlb
and
scas
or
jbe
rorb
adc
loopne
jb
pop
xchg
out
ret
js
test
jl
xchg
mov
lea
outsb
mov
aam
mov
ljmp
sub
inc
mov
and
pop
add
xor
mov
mov
jl
dec
lcall
or
pusha
orb
cmp
daa
cmp
arpl
in
test
sbb
ljmp
xchg
jns
clc
add
out
cmp
ja
icebp
jbe
fwait
xchg
in
jae
out
jno
jnp
jl
test
fldenv
pslld
daa
flds
into
pop
je
jecxz
popf
in
xor
pop
lahf
cmp
push
add
jge
lds
int
xor
push
xchg
lret
lcall
stos
ficomps
pop
enter
test
popl
out
rcr
xor
aaa
aad
or
lea
std
pop
in
push
mov
pop
dec
frstor
sub
jne
int
lds
rolb
jp
push
pop
cmc
xchg
fucomip
jecxz
aad
jne
divb
mov
sbb
aam
jns
pop
push
sbb
pslld
pop
and
xchg
mov
stos
outsb
sbb
loopne
dec
sysexit
pop
js
lcall
push
repnz
xor
xchg
mov
popa
inc
clc
lcall
clc
mov
sub
mov
mov
pop
out
sahf
sbbb
iret
dec
pushf
dec
fisubrl
add
fs
inc
bound
int3
sbb
pop
movsl
pop
sbb
sbb
push
jnp
add
scas
cmp
push
xor
push
enter
mov
subb
and
xchg
pop
movb
inc
scas
loop
mov
dec
or
loope
or
sub
data16
fwait
and
pop
push
cs
std
iret
jno
mov
imul
idivb
lret
and
std
movsb
mov
movsb
xchg
call
mov
push
andl
subb
scas
mov
xchg
sub
ficoml
add
in
jmp
sbb
andb
sti
das
xchg
rorl
idivb
adcl
lahf
loopne
mov
cmc
ljmp
or
cmp
adc
test
movsb
jp
mov
ljmp
popa
clc
pop
imul
sub
jmp
outsb
decl
mov
cmp
sbb
div
dec
mov
loope
inc
rcrl
jne
mov
xor
shr
loopne
push
mov
lcall
jmp
pushf
jp
add
mov
jo
and
dec
shrl
push
adc
pop
mov
xchg
div
fwait
cmpsl
xchg
inc
pop
adc
test
into
sahf
orb
subl
mov
cmp
pop
lods
loop
stc
flds
ss
add
adc
daa
cmp
jle
je
sub
rclb
add
fcomps
xor
test
mov
mov
test
sbbb
pop
dec
daa
cmp
add
fidivl
cmpsb
pop
es
inc
or
outsl
xchg
and
push
jecxz
in
in
xchg
or
pop
pop
pushf
adc
loop
cmp
lea
mov
out
cmc
adc
mul
pop
mov
rcrl
push
pop
repnz
into
loopne
and
std
push
mov
or
xor
test
jae
popf
aaa
mov
cmp
or
jge
push
fcoml
push
lods
push
ja
hlt
neg
cmp
push
int3
jle
jno
addr16
les
dec
aaa
scas
and
test
insb
mov
push
xchg
cli
movsb
cmp
mov
dec
std
mov
xchg
mov
xchg
inc
sbb
lcall
cld
in
fdivrs
lods
pushf
mov
dec
xchg
lock
add
insl
mov
les
add
xlat
adc
push
jl
icebp
mov
sbb
dec
cmp
pop
sub
sub
add
cwtl
lods
rcrb
jbe
xchg
mov
test
cmpsl
ss
add
xchg
out
xor
inc
push
add
jl
cmpsl
sub
imulb
aad
sbb
lods
ja
push
xchg
cmp
into
sbb
and
adc
idiv
dec
leave
sub
cmp
xchg
movzwl
jge
shrl
jp
add
es
inc
dec
scas
arpl
repnz
mov
std
je
stos
lock
addr16
repnz
aam
jae
push
out
mov
mov
mov
inc
mov
mov
lret
loopne
push
and
cmp
and
pop
inc
hlt
fidivl
cmp
cmp
and
mov
push
xchg
je
xor
je
push
fistps
fsubrl
jmp
adc
cmp
push
xchg
aas
push
fstpl
std
and
testb
sarb
inc
ss
mov
aas
lods
xchg
cltd
xor
mov
add
loopne
jp
jb
dec
loopne
xchg
ret
outsl
enter
mov
das
push
push
mov
cwtl
inc
mov
push
adc
xor
sti
insl
fst
movsl
insl
fldcw
xor
xchg
xor
in
shll
imul
repz
xchg
js
sbb
je
ja
push
fs
in
in
in
push
fadd
in
fcmovu
xchg
gs
fs
pop
adc
mov
les
leave
xlat
mov
arpl
pushf
lea
mov
add
data16
cmp
cmp
sub
cmp
mov
pop
nop
imul
stos
mov
inc
fldcw
xchg
pusha
pop
fcmovnbe
or
mov
fiadds
jecxz
jne
popa
jo
jno
arpl
adc
xor
shlb
mov
mov
in
int3
fidivrs
jne
sti
bound
loop
jo
and
mov
fs
fildl
cmpsb
push
loopne
or
sub
out
bound
cmp
testl
shll
pushf
xchg
add
lods
or
pop
ljmp
push
shl
arpl
das
iret
or
gs
xor
push
add
dec
cwtl
cli
xlat
jbe
add
sahf
stos
mov
icebp
jg
sbb
lds
arpl
data16
gs
imul
dec
and
dec
and
stos
repz
add
xchg
mov
push
jl
jg
call
std
ficoms
add
or
pop
xchg
sub
mov
outsl
in
mov
or
jbe
sbb
or
pop
mov
call
clc
cwtl
fidivrs
push
xor
or
nop
or
pop
in
sbb
mov
xchg
insl
inc
out
mov
loop
adc
bound
push
cmp
xchg
stc
fsubs
scas
sbb
popf
pop
mov
aas
popf
int
sbbl
pop
mov
sub
pop
test
sarl
add
push
push
outsl
push
or
shrl
or
mov
dec
cld
pop
in
fsts
dec
or
dec
aam
sbbb
das
fwait
ss
add
and
mov
add
sub
cmp
push
mov
sbb
lds
aaa
ret
scas
lret
call
push
xor
insb
shlb
rcrl
cmp
popf
test
mov
std
xchg
insl
popa
andb
outsl
sar
xor
iret
je
mov
xor
stos
inc
jns
ret
es
sub
lea
sbb
int
imul
fs
add
fdiv
sbb
mov
mov
xor
cmp
imul
pop
scas
cmp
cmp
nop
es
cld
mov
into
cltd
scas
cltd
cmpsl
in
xchg
pop
xor
mov
in
cmp
xor
dec
fcomps
imul
test
mov
xor
adc
ss
sahf
les
and
inc
imul
test
lret
sbb
xchg
stos
movsl
test
mov
shll
js
sbb
pop
insb
lahf
ds
rorl
outsb
loop
in
inc
add
in
in
inc
cmpsl
pop
cwtl
repnz
and
int
imul
std
jb
or
ret
lock
ds
mov
sbb
inc
shl
push
outsb
push
cld
or
jb
mov
dec
push
or
dec
leave
jecxz
jne
out
mov
mov
mov
mov
imul
push
inc
adc
inc
add
push
push
or
sub
push
fs
push
ret
fcmovnbe
sbb
or
js
lret
int3
out
inc
test
mov
add
fdivrs
popf
fistl
push
aaa
stos
lahf
adc
add
adc
es
adcb
rclb
or
daa
dec
cmp
lock
fs
mov
fisttpll
cwtl
cmp
test
lret
jno
lock
ljmp
dec
xchg
and
leave
push
leave
push
stos
pusha
fs
xor
inc
cmpsb
rcll
stos
mov
jb
loopne,pt
inc
mov
jecxz
xchg
imul
andl
xlat
pop
cmp
mov
fsubrp
jno
xchg
sbb
addr16
push
mov
ljmp
mov
movsb
mov
arpl
std
add
dec
mov
pop
mov
mov
dec
ror
dec
aam
dec
fcmovbe
movsb
into
push
aam
sahf
mov
das
mov
js
nop
and
lock
aam
divl
jbe
outsl
test
repnz
or
mov
scas
cmp
into
and
sarl
cmpsl
cmpsb
ds
mov
sbb
lods
push
add
lret
push
mov
sub
add
fmulp
xchg
sbb
push
scas
pop
mov
xchg
lods
das
dec
mov
rcll
in
test
nop
outsb
imul
sub
sbb
cmp
pop
push
aad
inc
xchg
push
mov
jae
dec
mov
inc
push
push
sarb
xor
shrb
lahf
or
or
mov
ljmp
pop
out
sub
push
mov
scas
cld
add
jmp
push
inc
adc
jno
inc
sub
mov
imul
push
jbe
pusha
fnstenv
addr16
ss
loope
pop
pop
pop
fdivrl
roll
or
sbb
outsb
push
fnstcw
lret
xor
inc
lds
adc
jmp
push
aam
orb
adc
fcoms
push
adc
jae
lret
and
aad
ret
jmp
inc
dec
aad
ljmp
jns
inc
fisubrl
in
test
jge
xchg
mov
imul
adc
cwtl
xor
pop
es
push
add
ds
xchg
mov
sub
jb
test
cwtl
push
shlb
ficoml
mov
int3
inc
and
adc
mov
pop
fnsave
mov
mov
jge
notl
mov
dec
xchg
insb
cmpl
pop
in
inc
and
gs
out
lods
sub
out
clc
scas
jne
js
dec
push
popa
je
sbb
xor
add
and
xchg
jecxz
orl
and
cwtl
pop
sub
pushf
lods
les
push
sti
jno
sub
pop
push
and
jp
loope
mov
imul
cli
lods
mov
js
out
aas
jae
ss
and
dec
fdivrs
jmp
mov
or
roll
loopne
stc
mov
cmp
xor
xor
pop
adc
inc
jle
hlt
fists
mov
mov
sbb
push
push
mov
inc
and
sbbb
mov
inc
xchg
in
and
xchg
cmp
stos
cmp
ds
xor
and
or
jno
pop
jg
jg
push
mov
loope
ss
inc
push
cmp
xor
hlt
jns
push
shlb
fstps
stos
shll
push
fnstenv
jmp
dec
xor
lret
pop
movsb
cli
fld
cmp
imulb
sahf
dec
xchg
push
addps
scas
push
cltd
xor
call
ljmp
fs
sbb
sar
pop
cmc
add
mov
sbb
repz
or
fldt
std
nop
jmp
inc
fstl
push
sub
mov
call
mov
mov
inc
fdivr
out
sarl
pop
and
nop
stc
mov
jl
jecxz
jp
loopne
cli
dec
adc
sbb
lahf
adcb
lds
mov
jge
mov
aas
jle
les
not
dec
sub
or
sti
inc
pop
dec
push
jp
mov
jecxz
test
movsl
adc
fdivrp
lret
lea
stos
fwait
icebp
jne
pop
jl
inc
jg
xchg
sbb
sub
fisubl
jp
xor
jae
les
cs
ret
mov
stos
repz
xor
orb
stos
js
test
stos
mov
vpacksswb
loope
ljmp
test
or
in
in
cltd
push
ret
lcall
jo
ljmp
sub
mov
xor
add
jge
mov
data16
mov
xchg
popf
in
movsl
mov
bound
jae
stc
jmp
inc
dec
testl
sub
mov
add
fdivrp
movsb
cmp
jb
imul
movsl
mov
imul
imul
push
xlat
mov
inc
adc
lcall
xchg
pminub
sub
mov
push
mov
pop
cwtl
pop
add
lock
jmp
popa
andb
lea
data16
mov
addr16
mov
enter
add
loopne
push
jge
mov
xchg
pop
mov
sbb
popa
xlat
stc
sbb
loope
orl
xor
outsb
int3
clc
imul
fistpl
dec
adc
pop
out
add
shr
add
dec
gs
std
lock
dec
pop
and
mov
jne
sbb
js
add
loopne
push
loopne
mov
inc
cltd
push
aaa
mov
sbb
into
pop
push
stc
cmpsb
ret
sahf
out
xlat
fists
cmp
mov
pop
xchg
lea
xor
jnp
loop
leave
outsl
in
xchg
adc
cmp
xchg
or
out
jge
pop
lea
jns
cli
movsl
jnp
scas
sub
lahf
popl
cltd
fwait
jnp
pop
cmc
in
jle
les
aas
and
xchg
int
frstor
sub
int3
mov
xchg
nop
bound
jge
or
or
rcl
mov
addr16
int3
sub
mov
filds
pop
loop
push
push
rcrb
xor
mov
incl
lahf
fistps
addr16
xchg
out
test
mov
mov
jne
idivl
pop
cmp
aad
insb
mov
icebp
adc
call
std
push
jae
sub
sub
andb
dec
or
push
lret
jo
mov
mov
loope
adc
cmpsb
sbb
inc
fldcw
fldcw
and
mov
icebp
lcall
jb
mov
lds
arpl
jmp
xor
into
cli
fdivrs
sub
xor
sbb
mov
jp
xchg
sar
mov
inc
insl
sbb
cltd
loopne
jl
in
jno
mov
jl
mov
test
jmp
mov
xchg
mov
fsubrl
les
mov
dec
inc
insb
ret
cmpb
pusha
sub
mov
outsb
dec
mov
movsb
testb
dec
adc
mov
and
sbb
fldenv
test
xor
lret
and
fsubrs
or
push
pop
or
into
cmp
fisubs
jecxz
dec
xchg
pop
sti
and
xor
mov
pusha
xchg
std
insb
test
fistps
or
add
stos
cmp
out
inc
jl
or
jns
pop
mov
in
es
fs
and
inc
jle
jo
jbe
xor
jno
das
fnstcw
pop
incb
pusha
mov
xchg
xchg
cmp
xor
cwtl
push
lcall
in
jno
icebp
ret
rcrb
and
hlt
jge
adc
lret
sub
mov
ss
push
jbe
inc
cltd
mov
cmpsb
js
push
adc
scas
jge
and
rcrb
sahf
fucomip
in
add
stos
mov
jl
mov
fnstcw
jmp
loope
add
in
jno
or
add
sub
in
or
lret
xchg
das
fcmovnb
call
lods
or
sub
ja
lds
fwait
cltd
add
adc
inc
in
ret
and
mov
mov
mov
cltd
xor
inc
inc
lds
pop
data16
divl
dec
sub
dec
xor
dec
adc
dec
movsl
mov
mov
outsb
push
cmp
or
cld
cs
dec
ja
adc
xchg
pushl
cwtl
add
roll
mov
or
dec
adc
cmp
cld
mov
ja
push
jns
adc
mov
mov
add
jno
or
pushf
pusha
sbb
cmpsb
adc
jmp
test
jb
sahf
xchg
pop
outsb
adc
adc
lret
in
insb
xchg
mov
jl
mov
int
push
xor
ret
xchg
int
ss
and
out
out
outsl
bound
fistpll
mov
adc
aaa
mov
sbb
sub
ss
ss
out
mov
xchg
xor
lret
pushf
fldenv
stos
jne
jne
shl
inc
idivl
mov
sub
and
jge
jg
call
pop
stos
shrb
xchg
sub
dec
dec
jb
jns
scas
imul
data16
add
shlb
jnp
aam
out
add
mov
xor
push
jecxz
inc
popf
cmp
jge
outsl
pop
jl
fildl
sahf
pop
jno
ja
clc
pop
flds
pop
push
add
mov
pushf
adc
fwait
stc
cltd
inc
aas
outsl
movsl
sub
lret
divb
pop
test
jg
jo
dec
mov
shr
push
cmc
addb
jb
sub
pop
lods
xchg
insb
xor
jne
adc
int
jp
xchg
push
jne
and
out
dec
das
mov
in
out
or
jle
hlt
enter
test
xchg
sbb
in
or
iret
sub
push
ficomps
ret
and
xchg
jnp
shll
int
pop
mov
cmpsl
cmpb
inc
out
test
pop
inc
outsb
ret
aaa
insl
jb
bound
pop
lods
inc
mov
arpl
sub
cld
push
call
cmp
popa
xlat
cmp
inc
fldenv
shl
mov
scas
popa
cmp
sub
dec
ljmp
jmp
xor
in
add
inc
sub
mov
in
subb
jecxz
xchg
mov
lcall
push
pop
rcrl
and
mov
ds
inc
or
dec
mov
fistpll
xor
icebp
dec
mov
sahf
in
pushf
pop
mov
jp
sbbl
dec
inc
mov
inc
addl
dec
in
ds
add
movsb
nop
in
jge
xor
imul
add
adc
adc
pusha
imul
mov
xchg
aad
xchg
into
pop
and
xchg
mov
jno
and
xrelease
lret
and
adc
mov
pop
shll
mov
out
shl
bound
pop
cmp
ds
mov
stos
xor
cmc
mov
mov
mov
inc
mov
icebp
out
jo
sbb
jno
lret
mov
jae
mov
sahf
mov
pop
in
xchg
pop
fstpl
inc
and
pop
in
test
cmp
nop
pusha
les
movl
fimull
pop
sbb
clc
jb
loop
cmp
mull
dec
jnp
xchg
loope
dec
or
enter
dec
xor
push
cmp
outsb
hlt
mov
xchg
mov
aaa
add
lods
push
cmp
sbb
and
rcrl
sbb
test
pusha
mov
repz
pop
aaa
jno
sub
mov
dec
pop
push
xchg
rcrl
push
call
rcll
shll
inc
lea
stos
iret
mov
loopne
dec
push
lahf
jmp
adc
loop
push
add
iret
icebp
enter
fdivs
push
pop
sub
mov
cmpl
sub
je
adc
or
sbb
push
adc
xchg
lret
roll
bound
movsb
loope
bound
jbe
xchg
dec
fidivs
into
mov
push
or
inc
push
and
mov
or
or
and
popf
pop
ret
in
jbe
sti
out
jne
sbb
hlt
mov
dec
ja
adc
fsubrp
fwait
in
jns
test
roll
dec
inc
lds
lret
rcrb
idivb
into
imul
les
xchg
in
lock
or
les
ret
imul
dec
aaa
pop
cwtl
aaa
orb
leave
cmp
out
icebp
adc
test
test
je
pusha
lahf
inc
mov
lods
lret
sbb
sbb
push
or
add
getsec
xchg
ja
xchg
jp
stos
popa
cmc
test
and
cs
or
repz
push
cmp
movsb
jp
sti
out
les
imul
loop
push
test
sti
dec
bound
xchg
mov
adc
enter
loopne
in
cs
add
ror
imul
pop
xor
je
inc
mov
test
xor
inc
sbb
mov
lret
add
push
push
cmpsl
xchg
aas
mov
insb
inc
xchg
mov
loope
pushf
idivb
aaa
mov
lds
adc
stos
push
pushf
int3
jne
addr16
shlb
mov
xor
mov
cmp
xchg
push
ja
xor
das
push
je
pusha
dec
imul
or
js
cmpsl
incb
les
ret
insl
out
addr16
xchg
cmc
pushf
and
shlb
sti
bound
sarl
add
mov
lret
imul
stos
movsb
jns
adc
popf
xchg
imul
test
push
push
xor
inc
xor
fisttpl
hlt
mov
push
std
lds
push
mov
add
mov
ljmp
lock
xchg
add
sahf
sti
pop
add
jbe
inc
out
mov
add
and
lsl
insl
mov
mov
push
push
pop
leave
xchg
enter
add
mov
cld
dec
add
icebp
cmp
mov
fidivrl
call
jnp
lods
mov
in
pushf
popa
gs
int3
and
inc
stos
jge
xor
inc
inc
add
cmp
out
jae
adc
bound
xchg
push
fwait
in
arpl
adc
mov
xor
andb
and
jns
push
pop
xchg
or
xchg
cmp
cld
in
fcmove
add
cmpsb
push
addr16
push
fs
or
pop
mov
imul
adc
sbb
mov
add
pop
push
int3
cmpsl
xchg
dec
int3
jg
xor
sub
scas
and
fwait
xchg
lods
cmp
shlb
xchg
fcoms
imul
jge
mov
bound
aas
xchg
or
iret
or
out
fdivs
cmp
sub
call
repz
cmp
sbb
sbb
sbb
lods
and
xchg
pop
jge
out
mov
mov
xchg
xchg
popf
mov
jle
push
jno
mov
std
les
xor
imul
inc
cmp
cmp
mov
shlb
add
mov
lds
jmp
rcll
arpl
shll
scas
fsubrl
cltd
mov
xchg
fwait
sub
leave
das
sub
adc
cmc
add
iret
mov
scas
stos
daa
nop
lahf
cwtl
jb
fwait
dec
jmp
and
sub
mov
mov
or
fidivs
movsb
add
lods
movsl
out
mov
xchg
inc
mov
inc
or
cmp
and
add
adc
pop
pop
push
mov
xor
push
xlat
out
ja
mov
mov
jnp
add
or
rcll
mov
sbb
test
js
jmp
mov
imul
xor
pop
mov
cmp
mov
pushf
scas
add
xchg
jle
lea
sti
cmc
sahf
and
movsb
inc
push
push
ss
movsb
test
mov
mov
lods
pop
pop
addr16
stos
imul
loop
mov
dec
xor
and
or
nop
movl
dec
fisubl
dec
sbb
dec
mov
fdivrl
dec
cmp
loopne
scas
js
mov
inc
or
jl
sbb
add
movsl
in
call
dec
rol
mov
add
pop
mov
sahf
inc
insb
sti
fmul
adc
xor
je
mov
repz
jmp
add
mov
mov
cmp
jnp
std
xor
enter
or
imul
lcall
pop
or
jns
fisubs
jmp
cmc
jbe
repz
scas
aaa
pusha
fwait
inc
xchg
xor
mov
aas
mov
xchg
fsubs
lods
out
ss
jmp
sub
push
pop
push
xchg
and
jle,pt
xor
pop
adc
sbb
xor
xchg
add
imul
sbb
ret
or
dec
pop
outsb
mov
ret
in
sbb
adc
sbb
sarb
out
sbb
and
addb
mov
add
into
xlat
pop
pop
loope
xor
mov
sbb
scas
daa
ror
lcall
jmp
in
mov
lods
mov
dec
mov
test
mov
mov
aad
jl
out
lret
xor
inc
mov
ret
mov
ja
test
sub
xchg
mov
push
xchg
out
dec
pop
lahf
pushf
xchg
adc
ret
and
mov
push
enter
mov
loop
sub
lods
mov
pop
sbb
lahf
jnp
xor
cmpsl
mov
pop
xor
sub
dec
sbb
mov
dec
mov
clc
or
cmp
ret
jne
jbe,pt
cmp
xchg
push
or
or
fnstenv
mov
cli
lret
mov
jmp
ret
mov
addr16
mov
dec
nop
push
adc
rol
inc
add
ja
in
in
dec
cli
or
add
inc
sub
cs
imul
xor
movb
jbe
dec
lods
sub
dec
push
movsb
adc
xor
gs
ffree
test
les
xor
mov
mov
mov
push
and
clc
jp
sahf
stos
loope
or
int3
sbb
data16
lods
in
xchg
jmp
dec
jg
xor
cltd
xchg
flds
push
movsb
xchg
mov
es
inc
lods
pop
not
jo
adc
cmc
andb
stos
and
adc
sarb
cmp
lea
add
dec
test
ret
ja
sti
pop
push
inc
jp
xchg
in
int
push
push
cwtl
mov
outsl
movsb
push
mov
cltd
imul
clc
movsb
add
xor
mov
jne
mov
pop
xor
fildl
clc
jecxz
ss
fistps
sbb
add
dec
jle
stos
sub
scas
int3
pop
aas
or
ljmp
ja
mov
cs
into
jg
dec
jl
int
jl
pop
sbb
pop
pop
cmp
stc
insb
clc
cmpsb
xor
loope
sbb
inc
loop
mov
andl
lret
in
dec
push
adc
jp
cltd
lods
iret
ret
push
jns
cmpsl
into
aas
xchg
xchg
ss
insl
pop
cmp
push
pop
dec
jbe
mov
pop
adc
aad
sbb
adc
pushf
xchg
arpl
filds
outsb
les
cmp
mov
ud1
dec
or
cmpsb
push
jb
push
loopne
test
adc
sbb
pop
pop
into
and
into
stc
cli
in
pop
fbld
shll
es
xor
sbb
adc
jnp
aas
jne
mov
adc
push
jg
andl
outsb
out
or
push
arpl
in
mov
jmp
mov
inc
mov
outsb
pop
addb
enter
xchg
lock
add
popa
mov
es
mov
lods
jb
rol
shlb
test
push
jbe
jmp
cmp
cltd
pop
or
jg
clc
dec
pop
loope
push
imul
fldcw
pop
roll
or
pop
mov
mov
pop
dec
aad
jl
dec
jle
daa
jb
cmp
cmc
outsb
pop
in
int
xchg
cwtl
repnz
addl
ud0
nop
or
lock
adc
mov
pop
int3
aam
xchg
pop
and
inc
jmp
xchg
popa
mov
cmp
outsb
test
pop
dec
sub
andb
mov
mov
mov
adc
incb
rorl
pop
testb
xchg
call
push
xchg
add
xor
cwtl
mov
inc
cmp
add
in
in
push
mov
pop
das
mov
pop
xchg
jmp
add
mov
jno
dec
testl
mov
int3
loopne
cmc
lds
pop
adc
jae
dec
push
mov
jl
push
jg
sub
sub
push
push
rorb
lds
aas
or
fcompl
ja
filds
add
xchg
or
xchg
je
jg
test
push
int3
fbstp
rcr
mov
sub
cmp
inc
clc
outsl
inc
testl
fstps
bound
insb
jbe
mov
sbb
out
add
in
mov
inc
dec
push
sbb
les
cld
mov
pop
ds
push
push
mov
outsb
stos
cli
xchg
in
enter
test
pop
push
vpshufd
xchg
je
xor
or
ret
cmp
fcompl
push
rcrb
cwtl
pop
movsb
xlat
push
mov
fisttpll
and
xchg
shrb
imul
sub
int
stos
push
repnz
aad
call
jo
lret
pop
pop
lret
cmpsl
mov
lock
pop
cld
call
sbb
fs
xchg
std
jnp
jns
xchg
xchg
jl
in
sbb
addb
mov
xorl
lods
or
jnp
push
cmc
aam
imul
int
ret
jns
cmpsl
dec
fstl
fildl
cmp
xor
add
and
xor
inc
mov
cmc
push
dec
jge
enter
push
call
inc
and
outsl
sbb
les
mov
lahf
je
sub
outsb
sarl
cli
mov
dec
lock
jg
push
jmp
mov
push
add
or
mov
and
dec
adc
loope
or
push
test
mov
mov
inc
test
daa
sahf
bound
mov
adc
out
cld
loope
in
fcmovbe
dec
std
mov
std
cmp
xor
test
or
inc
stos
leave
ret
jg
imul
fistps
pop
into
jmp
cmpsl
mov
pop
int3
dec
lods
sti
xor
push
xchg
pop
add
and
sbb
mov
das
mov
mov
add
es
mov
test
rorl
fisubrs
jg
loopne
adc
push
scas
push
xor
or
and
add
mull
adc
xor
test
jns
xor
lods
es
add
jl
push
in
or
cmp
jo
xchg
test
lret
je
jg
push
movsb
fcmovnb
inc
push
xabort
sarl
pop
jmp
pop
jnp
adc
sarl
fldl
test
into
fcomp
cld
pop
dec
and
call
sti
mov
xchg
jmp
ja
adc
inc
daa
mov
add
aam
or
sbbl
out
cld
adc
mov
pop
sahf
jns
jne
mov
inc
test
out
rcrb
mov
outsb
sub
in
aas
call
xchg
mov
cmp
xchg
inc
scas
adc
xchg
xor
test
movsl
mov
arpl
adc
mov
mov
and
xchg
push
or
dec
sbb
mov
loope
ret
xor
rcrl
test
pop
push
divl
ja
call
jbe
mov
push
add
dec
insl
and
mov
mov
lcall
adc
inc
pushf
imul
out
mov
inc
xor
xchg
out
shl
inc
jl
and
iret
pop
pop
jno
or
mov
insl
dec
pop
cli
cmp
dec
jg
inc
push
rolb
adcb
adc
xchg
sbb
scas
cmp
pushf
imul
dec
jbe
inc
add
dec
cmpsl
hlt
lahf
shld
mov
hlt
push
sti
push
pop
mov
and
sbb
fwait
mov
adc
push
scas
mov
mov
xchg
push
test
dec
data16
rolb
xlat
lahf
mov
and
sbb
and
imul
in
or
sbb
les
sarb
rcl
xchg
xor
pop
bnd
pop
inc
adc
xchg
in
jecxz
mov
jmp
cltd
dec
imul
xchg
sub
fs
xor
push
dec
fucom
ljmp
ds
inc
lods
sub
cmp
or
and
frstor
ficoml
fnstsw
test
in
sub
adc
sub
sub
jnp
fsubr
inc
leave
ds
pusha
xchg
push
xchg
jecxz
push
cmp
mov
leave
int
jno
add
and
and
das
jge
in
add
gs
clc
addr16
xchg
dec
add
jmp
pop
add
mov
dec
push
sub
or
pop
movsb
adc
sub
sub
fcmovbe
xchg
xor
mov
push
lods
mov
xor
xchg
sbb
js
fdivl
pop
dec
and
mov
stos
mov
repz
xchg
in
scas
fs
nop
adc
sub
shl
fldenv
add
into
dec
jae
hlt
jl
xchg
sub
adc
in
inc
idivl
xor
xchg
inc
xor
lret
sti
add
add
fiadds
loop
imul
push
shll
std
or
enter
jp
ds
xchg
scas
adc
scas
push
pop
ja
aad
sti
sarb
dec
lods
push
sub
loope
dec
ret
dec
mov
lock
pop
sub
iret
bound
scas
mov
clc
cs
lds
adc
cmpsb
sarb
lods
mov
imul
push
push
shrl
fwait
les
xlat
repnz
sub
pop
mov
test
xor
mov
adc
and
add
int3
or
xchg
rolb
mov
jmp
call
es
xor
push
push
hlt
test
jb
mov
shll
adc
aam
xchg
fsubrl
lds
or
and
int
in
mov
xchg
dec
scas
aam
pop
mov
mov
test
mov
jle
and
cmp
sub
or
lea
outsb
push
loopne
push
dec
nop
xor
sub
rcpps
ljmp
jae
xchg
cmp
call
pop
jmp
sbb
cmp
rcrl
fs
push
sahf
sub
adc
cmp
jmp
cwtl
stos
das
push
pop
cmp
mov
int
pusha
jg
mov
mov
mov
push
cli
jecxz
es
mov
mov
push
jl
out
or
icebp
insb
push
xor
loope
jecxz
jge
aas
mov
xchg
dec
add
lcall
fs
ljmp
popf
adc
jg
jno
adc
add
cmp
enter
and
mov
adc
movsb
push
andb
dec
mov
sbb
ss
fistps
out
std
sbb
outsl
xchg
jo
arpl
inc
in
aam
fistpll
adc
push
loope
or
xchg
or
jge
cmp
and
enter
inc
mov
push
dec
and
xchg
das
mov
mov
lcall
and
pop
pop
pushf
push
outsb
lret
mov
push
mov
mov
insl
sarb
mov
je
or
mov
mov
scas
xor
mov
adc
jmp
jl
mov
push
lods
sbb
stc
cld
das
cmp
push
ficoml
mov
es
jg
in
and
bound
cmp
push
psllq
mov
into
rcrl
andb
xor
add
ret
dec
mov
int
add
insl
iret
cmpsb
imul
push
mov
pop
adc
lahf
or
pusha
mov
jle
jne
xor
xchg
mov
out
inc
xor
popf
out
loopne
sahf
xor
ror
adc
adcb
xchg
mov
shll
rorl
push
jmp
jno
data16
out
inc
push
adc
add
aas
lock
and
xchg
jp
cmpsl
jns
jge
pushw
dec
and
movsl
jp
movsl
out
rep
cmp
push
into
mov
lea
jo
loopne
jecxz
adc
faddl
testl
rcr
cmc
or
sbbb
setno
jae
cmp
lds
xor
cmc
sub
jb
pop
in
orl
cmp
cmp
insl
fdivrl
xor
cltd
adc
js
xlat
dec
fldl
lock
pop
hlt
ret
loop
pop
push
add
add
and
push
jae
add
mov
mov
jle
je
inc
iret
mov
loope
int3
sbb
aam
fimuls
or
outsb
cmc
lock
xlat
mov
testb
loopne
lahf
rclb
aaa
idivl
shlb
sahf
idivl
pop
cmp
js
dec
lds
xor
push
cmp
hlt
dec
adc
sub
mov
test
sub
roll
push
add
and
pusha
add
loope
mov
movsb
xchg
fwait
loope
pop
scas
rcrl
mov
cmp
leave
jmp
stc
daa
dec
sbb
or
call
cmc
rcr
xor
xchg
pop
pop
mov
push
movsl
lcall
sub
mov
ds
pushf
int3
popf
fcmovbe
pop
idivb
addr16
push
cmp
lret
mov
lds
jbe
lock
cwtl
negl
jmp
adc
add
lods
jno
outsl
xor
jle
lahf
arpl
repnz
add
dec
lcall
stc
mov
mov
xchg
mov
dec
movsb
push
push
sarb
jae
sub
mov
scas
adc
bound
add
sti
sub
push
aaa
enter
mov
cli
push
mov
gs
fsubrp
rorb
xchg
aas
mov
push
cmp
mov
mov
ss
jg
nop
cltd
mov
nop
push
push
dec
xor
bound
add
and
aaa
jb
and
call
pop
dec
cmc
xchg
jg
addr16
jno
lock
pop
popa
cwtl
cmp
adc
cs
adc
pop
div
mov
pop
sub
nop
movsb
test
and
dec
cltd
inc
xchg
shrb
mov
mov
push
push
jl
push
mov
rol
lret
jp
sub
scas
fcompl
test
and
ja
int
xor
adc
hlt
out
fstpl
popa
jnp
xchg
shlb
xor
sbb
leave
movb
insb
dec
inc
ja
cli
mov
and
xchg
jo
push
aaa
clc
sub
sbb
mov
xor
or
lds
mov
pop
cmp
push
aam
xchg
neg
cmc
mov
lock
jo
or
aam
jg
mov
inc
or
cld
xchg
lret
mov
fidivrs
push
lods
test
or
adc
fs
xor
int
sbb
cmpsl
xor
add
testb
cmpb
out
sbbl
fistps
fildl
lods
mov
ret
sub
mov
and
dec
call
jle
pop
inc
adc
enter
aad
sub
jp
adc
sbb
test
push
pop
inc
mov
bound
push
cmp
pop
or
andl
in
and
inc
aaa
adc
xchg
mov
mov
je
lret
imul
pusha
out
mov
aaa
loopne
add
jl
jmp
int
xchg
pop
insb
mov
lods
push
add
mull
cmpsl
xor
dec
fildll
mov
adc
and
das
stos
lret
jle
adc
and
repnz
mov
mov
inc
scas
decl
daa
jmp
xchg
sub
cmp
aaa
jge
std
push
cmc
jbe
cmp
movsb
jo
loop
add
adc
scas
repnz
dec
sub
xchg
shr
pop
jmp
aad
fnstsw
lds
pop
sti
mov
mov
pusha
mov
jmp
mov
mov
lods
mov
cld
add
push
stos
push
mov
cmpsl
mov
add
sub
popa
jge
pop
push
fdiv
jle
xor
add
dec
je
gs
mov
or
ja
dec
or
movsb
fimull
mov
cmp
add
push
in
or
xchg
lods
mov
xchg
insl
adc
ljmp
sub
push
popa
movsl
mov
in
add
dec
and
mov
xchg
and
add
push
mov
mov
sahf
lret
mov
mov
sub
enter
sub
leave
mov
mov
mov
out
lods
push
xchg
jecxz
arpl
daa
jo
or
sub
or
pop
aam
xchg
out
mov
cwtl
add
dec
push
pop
loopne
mov
mov
fsubrs
enter
or
rcrb
or
cmp
sub
imul
addr16
cmp
jmp
or
dec
pop
push
jle
add
push
mov
adc
xor
xor
ja
rcrl
stos
test
mov
sub
icebp
xor
jge
jbe
cmp
in
decb
pop
fsubrp
mov
mov
add
push
iret
xchg
fstl
lahf
into
sbb
stos
xlat
jae
adc
sbb
and
xor
fbstp
mov
xchg
in
stos
in
cmp
cmc
out
cwtl
push
add
vmovaps
cs
test
jnp
jmp
push
xor
rcll
inc
std
repz
aaa
inc
or
inc
lret
lods
inc
lcall
sti
je
fsub
ljmp
jle
or
lock
and
sbb
mov
hlt
ret
fwait
adc
mov
arpl
adc
and
mov
pusha
mov
fsts
push
rol
jns
inc
lahf
sahf
decb
push
aad
pop
inc
xchg
dec
scas
mov
jle
jo
jnp
daa
fwait
jo
dec
pop
inc
daa
add
pop
jg
push
jle
aad
mov
aaa
jbe
jle
iret
icebp
imul
mov
jge
xchg
jp
adc
adc
inc
adc
add
int
lods
jp
cwtl
and
sbb
or
xor
pop
cmpsl
push
xor
sbb
test
enter
and
adc
xchg
imul
sar
aas
scas
push
into
fmull
or
xchg
cmp
push
repnz
mov
sarb
arpl
add
mov
cltd
sahf
lcall
sub
push
mov
fs
scas
js
aas
clc
notl
dec
push
mulb
ss
in
lods
sbb
push
out
or
push
and
leave
scas
and
mov
add
js
mov
mov
aaa
ret
push
pushl
sub
nop
cmp
arpl
mov
imul
xchg
cmpsl
xlat
lods
mov
in
mov
lea
mov
mov
xor
and
bound
sub
sub
fidivrl
mov
mov
jecxz
xchg
insl
jns
xlat
fnstsw
inc
sub
adc
repnz
sbb
inc
or
or
test
xchg
lea
stos
adc
add
inc
lar
cs
call
sub
mov
jg
jg
mov
in
or
loopne
addr16
pop
jl
loopne
mov
cmp
push
pop
adc
out
jecxz
mulb
lcall
out
scas
mov
bound
inc
movsl
in
inc
push
mov
mov
mov
jecxz
dec
xchg
mov
test
stos
sbbl
cwtl
cmp
push
inc
enter
sbb
mov
pop
jae
push
lcall
jle
fcomps
push
icebp
cmp
movsb
xlat
add
les
pushf
int3
sbb
lods
sbb
adc
enter
insl
xchg
jo
push
lcall
jge
sbb
andl
pop
scas
mov
leave
lahf
xor
inc
andl
ret
es
in
imul
push
ds
sbb
fisttps
mov
jp
xchg
xor
jns
fidivrl
in
push
ljmp
push
inc
fucom
mov
mov
push
imul
mov
shrb
push
leave
xor
push
aad
les
call
mov
ret
push
ss
dec
xchg
push
lods
xchg
sbb
lods
out
push
push
and
adc
dec
fnstsw
jecxz
push
xchg
repz
scas
dec
dec
icebp
inc
hlt
jl
test
or
out
and
cmpsb
imul
daa
scas
jns
jg
jge
fwait
adcb
stc
push
mov
inc
adc
jp
sarb
outsl
cmp
push
mov
push
push
xchg
ljmp
pop
mov
std
into
je
pusha
jge
ret
imul
out
jne
mov
xor
or
mov
push
addr16
cmpsb
popa
cs
jo
ret
adcl
adc
inc
dec
sbb
stos
ffreep
sub
add
sbb
test
scas
pop
cmp
loopne
lods
xchg
adc
sub
cwtl
ret
ret
lds
sbb
jp
xor
jns
movsl
dec
ja
movsl
jmp
jo
loopne
in
lcall
cmp
and
mov
xor
push
jp
aaa
mov
adc
sti
jl
ficompl
xchg
ret
into
xor
fldlg2
nop
ds
cmp
outsb
mov
add
pop
push
loopne
mov
push
fimuls
xchg
jg
mov
mov
xchg
or
cld
ret
xorl
mov
out
jno
sahf
inc
xor
mov
mov
dec
imul
sti
mov
hlt
pop
inc
pop
in
pop
pop
lods
xchg
jo
xchg
pop
lock
pop
scas
out
outsl
aam
mov
pop
rolb
mov
jge
add
xlat
add
cmp
xor
jmp
sub
je
sarb
cld
fstp
push
jge
nop
fildll
and
pop
popa
xchg
adc
mov
inc
lock
int3
ret
arpl
cltd
sbb
fwait
xchg
mov
push
nop
inc
into
dec
stos
les
ret
or
inc
cmpsl
in
loopne
fidivrl
pop
in
mov
inc
adc
pop
sbb
sbb
dec
inc
jmp
out
jns
add
fadds
mov
mov
add
paddusw
stos
rcll
mov
sub
pop
mov
dec
outsb
int
sub
movsl
mov
lods
add
sarl
pushf
fnstcw
mov
imul
std
int
mov
gs
inc
inc
or
cmpsl
outsb
jne
xchg
addr16
arpl
mov
lock
in
inc
sub
rcll
mov
jl
inc
aad
and
mov
pop
shll
or
sbb
imul
scas
dec
dec
xor
repnz
inc
aas
ret
or
add
xchg
mov
sahf
stos
add
push
ja
out
stos
pop
fcmovne
xor
xor
aas
sbb
fcoml
sbb
pop
ret
scas
jo
scas
mov
orb
jg
xchg
fwait
in
lock
testb
cmc
push
jbe
ficompl
int
pop
call
adc
ljmp
xchg
out
mov
sbb
dec
movsl
and
in
fwait
aam
call
mov
xchg
xchg
test
adc
jnp
test
aas
leave
sub
jecxz
mov
fnsave
ret
sub
mov
in
mov
popl
xchg
leave
mov
rcrl
in
repz
dec
popa
or
inc
bound
ret
cmp
mov
adc
repnz
push
fwait
sbb
jp
push
mov
jbe
setbe
leave
lock
pop
mov
out
nop
xchg
cs
les
mov
cli
cld
stc
mov
in
push
cmpsl
stos
jecxz
lahf
jmp
jp
pop
sbb
int3
cwtl
inc
xor
jnp
xchg
sbb
jecxz
push
mov
mov
insl
mov
arpl
test
push
out
sub
or
fistl
out
es
incb
lahf
push
push
mov
push
pop
cmpsb
push
pop
test
add
fs
clc
aad
inc
cmpsb
lds
dec
shll
stos
xor
push
jmp
mov
mov
or
push
xor
fucom
scas
data16
ss
mov
add
pop
xchg
clc
inc
popa
pop
jecxz
in
jmp
hlt
adc
dec
xchg
sbb
add
sub
fadds
sahf
pop
adc
sahf
movl
pop
xchg
xor
pop
seto
test
stc
ret
je
adc
dec
sbb
xchg
stos
jp
inc
hlt
pushf
xor
or
pushf
pushf
ret
cltd
mov
and
out
mov
popa
loopne
enter
dec
push
call
andb
inc
das
mov
jmp
xor
stos
or
inc
ja
xchg
insl
push
lret
jmp
xor
xchg
imulb
xchg
add
mov
xchg
sbb
fists
dec
sub
dec
jbe
in
add
and
push
dec
sbb
movl
int3
mov
into
lret
in
xchg
xor
xlat
pop
stos
jns
push
repnz
fadds
rolb
mov
ss
lock
push
cmpb
pop
lcall
aam
dec
mov
add
icebp
in
jl
data16
mull
jp
add
andb
or
inc
jnp
sbb
push
fcoms
shl
jnp
and
and
jbe
pusha
sub
jnp
mov
mov
push
mov
jp
cmp
data16
or
xchg
shl
ret
std
cmp
loopne
cmp
pop
or
fyl2xp1
aad
mov
mov
xlat
mov
mov
cld
adcl
jns,pn
cmpsl
loop
insl
sbb
sbb
and
pop
inc
xlat
sbbl
pop
stc
or
sub
fisubs
movhps
mov
ss
mov
movsb
cs
pop
cltd
jmp
mov
stos
mov
repz
or
mov
adc
mov
icebp
push
addr16
int
pop
jno
inc
sub
cs
xor
sbb
cs
ret
testb
sbb
lret
fisttpll
xchg
mov
out
and
int3
push
dec
mov
adc
cmp
jl
rol
lods
inc
jecxz
sbb
mov
outsl
dec
xchg
bound
movsl
inc
and
jne
mov
js
popa
pop
mov
pop
leave
repz
ds
mov
inc
inc
sahf
sub
nop
inc
jo
sub
sbb
jns
mov
cmp
adc
add
lock
outsb
cmp
jnp
and
adc
mov
js
pop
adc
daa
inc
pop
es
jb
sti
xor
mov
jnp
mov
lret
jmp
mulb
add
add
aaa
arpl
mov
incb
aam
insb
stos
xchg
and
fcompl
arpl
sbb
sub
lret
cmp
cmp
xchg
popf
cmp
push
xor
dec
inc
lcall
jbe
ja
push
add
imul
mov
cmp
fisubrs
jmp
or
popf
std
mov
add
sti
and
sbb
jg
pop
xor
mov
shrl
daa
sbb
or
cld
and
gs
iret
jecxz
fisubrl
test
push
scas
and
fsubrp
mov
in
or
xchg
xchg
test
pop
loope
stos
cmpsl
xchg
adcl
je
pop
gs
insl
imul
push
lret
inc
fs
add
and
adc
push
add
in
lret
in
nop
icebp
or
sub
adc
xor
inc
orl
in
int
fstp
hlt
mov
adc
jl
push
mov
mov
sub
xchg
xorb
enter
dec
xor
add
sbb
inc
aas
mov
xchg
jb
mov
mov
sub
mov
lea
add
mov
and
dec
outsb
xor
cmp
mov
push
repz
mov
mov
sub
in
popf
dec
add
lods
push
pop
movsb
leave
fs
dec
mov
jmp
xchg
addr16
cmp
jbe
push
fiaddl
and
xor
stos
push
inc
mov
sarb
pusha
iret
dec
push
gs
outsl
outsl
mov
cmp
ds
xor
mov
xor
out
inc
scas
inc
jmp
ret
pop
fcoml
or
das
jge
jle
adcb
aam
bound
shll
adc
cmpsb
pop
nop
or
mov
push
jbe
inc
stc
jmp
fisubrs
arpl
inc
add
lods
jnp
cmpsb
cld
push
addl
cwtl
ja
out
pusha
push
rcr
lret
sbb
push
cmp
xchg
mov
in
pop
jns
lea
mov
mov
add
sbb
jmp
or
and
ficoms
mov
mov
mov
add
pop
add
or
scas
xor
in
imulb
fldenv
jmp
imul
xlat
dec
mov
inc
pop
and
xchg
xchg
lea
add
xchg
inc
xchg
cmp
pop
sub
mov
sbb
into
jno
in
stos
pop
divb
out
mov
cs
sub
jge
mov
aas
pushf
lea
xchg
jns
andl
cmpsb
jl
dec
addb
xchg
push
call
into
sbb
leave
incb
push
or
xchg
sub
daa
pusha
add
aaa
aad
sbb
or
inc
arpl
lock
mov
cmpsb
pop
decl
mov
mov
scas
add
xchg
leave
fbstp
xor
jns
push
mov
pop
and
and
out
addr16
addr16
dec
icebp
sbb
adc
or
dec
sahf
je
adc
testb
cmc
out
or
sub
mov
pop
jg
and
pop
outsl
rclb
xchg
adc
andl
pop
sbb
aaa
lret
xchg
pop
pop
xor
insb
cwtl
push
xchg
cmp
stos
jb
ljmp
out
cmp
xchg
push
xchg
fs
lods
jno
ficoms
shll
sub
add
adc
call
insl
popf
popa
iret
xchg
dec
addr16
popa
or
push
aas
add
jns
dec
bound
stos
jecxz
mov
pop
jne
mov
xchg
rolb
jle
icebp
je
or
in
aam
or
insl
add
ljmp
push
daa
pop
mov
mov
sub
rorl
lahf
shlb
push
popa
aaa
add
inc
loopne
inc
mov
aam
popf
iret
push
out
outsl
loope
mov
scas
movsb
pop
mov
ret
add
hlt
outsb
lcall
lret
dec
xchg
aam
test
mov
pop
imul
stos
js
and
cmp
mov
inc
xchg
push
test
jne
outsl
rolb
hlt
lret
rcr
xor
test
jne
xor
inc
enter
out
in
mov
dec
fnsave
das
dec
loope
loope
inc
mov
jg
mov
inc
out
jg
jge
lret
inc
leave
xchg
call
out
cmp
add
les
cs
xchg
pop
inc
push
mov
scas
xchg
inc
mov
xor
mov
std
cmp
jo
push
or
out
mov
sbb
pop
pop
clc
scas
in
mov
sbb
adcl
dec
aam
jecxz
xchg
out
aaa
test
xchg
popa
loopne
rol
scas
mov
inc
inc
xor
into
addb
lods
or
out
pop
jle
inc
sub
xchg
lock
adc
fisubrs
ljmp
stos
cmp
sub
shr
dec
pushl
imul
pop
pop
in
xchg
aaa
or
pop
sub
dec
sbb
xchg
mov
add
imul
das
xor
xchg
sub
stos
inc
rcl
ret
xor
outsl
cmp
outsb
addr16
xor
adc
jp
rol
mov
jno
add
jle
fdivrs
test
fidivrl
jns
mov
pop
xchg
rclb
inc
inc
pop
adc
mov
xchg
test
jbe
push
lds
shrb
inc
push
clc
or
cwtl
xor
stc
lcall
js
lret
mov
inc
lret
shr
inc
xchg
mov
cmpsb
or
sbb
stc
inc
mov
andb
mov
es
mov
mov
mov
jge
test
int
xor
sub
mov
jb
fs
sahf
or
loope
bound
sub
sbb
inc
adc
je
jb
add
add
add
aaa
dec
pop
daa
push
clc
test
mov
xchg
dec
xchg
mov
sub
jnp
nop
loop
cld
mov
pop
xchg
cmpsb
repz
push
ds
gs
mov
jp
out
pop
mov
sbbb
fisttpll
fstpl
mov
push
and
jmp
dec
not
xlat
sub
aas
xor
push
lcall
adc
sbb
leave
pop
ljmp
enter
sbb
insb
into
mov
das
xlat
or
iret
fs
fstpl
jecxz
std
xchg
cld
pop
add
xchg
pusha
sbb
dec
ljmp
ret
hlt
imul
sub
test
sti
cmp
ja
sti
cmp
icebp
adc
jns
sbb
xor
scas
dec
sub
rcll
in
or
inc
fstpl
mov
xchg
cmp
jns
dec
std
je
mov
ret
cmp
rorb
pop
push
sbb
pop
scas
outsl
xor
rcrb
pop
stos
ret
lret
dec
xchg
frstor
xor
pop
sub
aam
add
shr
cmp
std
pop
push
dec
push
shr
out
mov
popa
cmp
fdivr
das
std
pusha
cmp
pushf
movb
xor
sarl
daa
xchg
loop
movsb
mov
fnsave
jnp
orb
jg
cmp
mov
and
nop
into
jle
cmp
mov
cmc
push
pop
xchg
add
jle
addr16
dec
dec
test
mov
testb
cmpsl
imul
out
in
dec
insl
aam
mov
lcall
xor
fdiv
add
xchg
jb
xchg
pusha
popa
leave
mov
das
ret
jae
cmpsl
push
jno
inc
dec
stc
or
or
sbb
or
pop
arpl
movsb
xor
mov
pop
ja
dec
and
jle
xor
sbb
dec
xor
mov
mov
shlb
mov
sbb
adc
mov
lods
mov
test
mov
adc
fstl
or
push
mov
dec
insb
lock
dec
or
pop
mov
mov
mov
cmp
adc
mov
bound
mov
lcall
movsl
xchg
mov
push
je
or
inc
sbb
dec
flds
jp
jp
cmp
rcrb
sbb
gs
xchg
pop
mov
bound
aaa
fnstcw
add
nop
mov
cmc
push
push
or
fisubrl
movsl
cld
mov
jecxz
enter
inc
cmp
sbb
push
ds
aas
sbb
mov
sub
loope
sbb
fildll
mov
pop
test
sbb
cmp
or
jg
outsb
jge
in
push
aam
cmp
fcmovnu
and
jnp
push
xor
stc
or
std
sub
cmp
jo
pop
dec
cmp
mov
pop
dec
loop
mov
adc
pop
xchg
outsl
or
imul
call
pop
into
dec
insb
dec
jnp
or
or
aas
inc
or
pop
pop
jl
mov
cmp
js
pusha
inc
cmp
in
or
fdivrl
adc
in
push
sub
push
or
shll
lods
shrb
das
add
sbb
fidivs
into
add
cmp
bsf
jge
hlt
sti
sub
call
push
inc
adc
lock
inc
and
mov
jo
icebp
hlt
dec
outsb
fildl
aad
push
mov
pop
fidivs
inc
sbb
daa
push
loope
mov
pop
loopne
fs
pop
adc
into
imul
stos
push
mov
pushl
xchg
push
sti
push
and
push
mov
pop
jmp
loop
lods
pop
pop
mov
xlat
scas
mov
jmp
cli
and
test
mov
loopne
or
clc
daa
ja
mov
push
jmp
mov
xchg
push
sub
jecxz
iret
repnz
out
fs
mov
inc
pop
jns
adc
test
mov
test
push
movsl
mov
mov
and
hlt
fnsave
fbld
loop
leave
repnz
repz
sti
cltd
sbb
in
add
mov
pop
dec
test
push
bound
pop
test
mov
push
push
dec
leave
pusha
leave
inc
les
fimuls
xchg
repz
test
or
clc
mov
push
push
outsl
jl
ss
mov
jge
push
shrb
gs
mov
push
mov
cmc
adc
and
mov
mov
push
lock
out
sbb
movb
ds
stos
hlt
pop
jp
mov
nop
cmp
sub
mov
repnz
xor
push
xor
add
cld
into
out
push
fwait
and
loopne
pop
jnp
dec
pop
inc
lcall
push
ds
int3
stos
lea
scas
ds
call
push
lods
inc
jns
in
xchg
fisttpll
jae
sub
xchg
push
push
xchg
fcom
rclb
loopne
fidivrl
rorb
out
mov
aas
mov
jecxz
or
mov
lock
stos
dec
inc
aam
push
insb
test
jae
mov
or
pop
xchg
mov
pop
jae
push
ljmp
xchg
dec
pop
jle
lret
movsb
mov
xor
xor
jae
xchg
pop
fs
sbb
movsl
cmp
xchg
jo
sub
mov
or
rorb
or
mov
xor
mov
mov
add
cld
mov
sahf
push
lret
xchg
lcall
xchg
fwait
cltd
popa
push
lea
or
sbb
inc
cmp
lret
je
scas
jp
push
jnp
leave
movsl
cmp
pushf
pop
mov
lods
inc
pop
mov
mov
cltd
lds
fdivrl
lods
ret
inc
xchg
sahf
xchg
jb
enter
sbb
pop
loope
enter
icebp
jns
fcmovnb
insl
cmp
out
shrb
xchg
sbb
lret
loop
sarb
stos
in
outsl
cmpps
lcall
inc
dec
inc
mov
shlb
ret
mov
mov
push
push
mov
xchg
negl
and
fbstp
pop
and
xchg
cmpsl
inc
or
push
pop
in
cmp
ja
repz
mov
rorb
insb
lret
pop
aad
dec
repz
aas
push
jae
clc
cltd
fiaddl
jg
cmp
outsl
jae
adc
push
repnz
mov
test
ret
xor
loop
cltd
dec
fisubrl
lret
test
add
cmpsl
into
movsb
add
or
jg
add
fsubs
add
fistpl
insl
sub
xor
cmp
daa
xor
mov
and
sti
xchg
push
out
adc
pushf
push
mov
cmpl
aas
pop
es
mov
leave
or
sbb
mov
insb
push
xchg
jle
xchg
frstor
add
push
stc
sub
dec
movsb
stc
mov
sub
pop
or
and
outsb
sbb
fbld
and
mov
lods
pop
ss
test
insl
jl
pop
mov
test
mov
mov
mov
lahf
cmpsl
imul
test
pop
or
loope
jo
enter
xlat
xor
lea
ds
add
mov
push
ss
xor
mov
push
sbb
frstor
xchg
cmpsb
mov
int3
ret
push
in
add
jno
movsl
sti
add
push
inc
push
lds
jecxz
xchg
enter
pusha
dec
sub
cwtl
xchg
adc
cwtl
scas
cmp
cmc
sub
lret
int
jge
data16
mov
inc
add
adc
repz
push
add
pop
mov
adc
cmpsb
pop
mov
fisttps
jge
ret
mov
or
js
sbb
pop
push
test
and
test
dec
movsb
int
movsb
out
add
mov
orb
or
fistps
pop
leave
pop
mov
xor
inc
sub
xor
addr16
push
or
les
cmc
insb
sbb
shlb
scas
dec
mov
pusha
aaa
dec
sbb
fcoms
xor
inc
call
dec
jnp
insl
scas
cmpsl
jmp
mov
jp
aam
jp,pn
mov
xchg
test
outsb
fmull
adc
call
jp
dec
shl
inc
ds
and
das
outsb
lds
jb
ja
sub
sbb
ret
ficoms
clc
mov
sub
mov
js
push
cwtl
in
test
mov
jecxz
arpl
mov
lods
dec
hlt
enter
dec
sub
or
sub
jae
sub
enter
cli
loope
sbb
popf
dec
add
shrb
push
cmp
addr16
test
mov
repnz
dec
lods
cmp
repnz
sub
daa
dec
jg
mov
pusha
mov
xchg
pop
and
in
adc
sbb
dec
iret
cmp
je
push
imul
js
mov
adc
sub
xchg
test
sarl
cmp
lcall
mov
rclb
inc
stc
insl
sbbl
imul
dec
pop
data16
nop
out
mov
push
std
push
lock
fstpt
sub
daa
cmp
mov
and
xor
jns
loopne
pop
and
fbld
inc
lcall
loopne
or
std
cmp
jo
sbb
xor
push
jmp
hlt
fcoms
adcl
add
xor
inc
add
sahf
mov
fisubl
fs
icebp
lock
add
and
inc
xor
rcrb
mov
xor
out
xchg
mov
sub
pop
out
mov
loopne
sahf
push
enter
iret
mov
lcall
mov
ljmp
add
dec
dec
jmp
icebp
clc
js,pt
mov
cli
inc
inc
gs
dec
jl
test
sub
mov
push
js
mov
mov
mov
or
lds
xor
jnp
or
aaa
lea
pop
cmp
sbb
ja
stos
out
rcll
hlt
ret
int
mov
xchg
jge
inc
imul
movsl
stc
add
lds
mov
lock
cmp
mov
loop
cmp
mov
mov
lock
pop
sbb
leave
mov
jecxz
bound
mov
sti
lds
push
movsb
lock
cmp
out
mov
std
xchg
fldenv
or
pop
gs
clc
out
mov
stos
mov
dec
or
loop
pop
sbb
iret
xchg
das
in
mov
xchg
mov
rol
cmc
int
jne
frstor
addr16
push
dec
addb
push
fistpl
cmp
push
lahf
lds
jbe
inc
jle
stc
int
lock
push
int3
je
xchg
inc
insb
div
mov
inc
scas
sbb
cli
movsl
jmp
inc
sub
add
insl
out
inc
mov
mov
jae
inc
gs
in
mov
lods
stc
xor
dec
sub
fwait
mov
incb
mov
cltd
cmp
cmpsb
xchg
push
test
hlt
vcvttpd2uqq
pushf
pop
jo
jg
ds
inc
sbb
hlt
icebp
orl
int3
or
aas
lahf
sub
lock
jo
fsubp
jb
stos
sbb
lds
out
push
xchg
mov
in
pop
or
and
stos
dec
and
shll
fmull
ds
and
dec
xchg
das
pop
push
xchg
mov
in
dec
push
popa
fbld
imul
test
pop
dec
mov
adcb
pop
ret
mov
outsb
xor
cld
sbb
xlat
mov
out
ror
and
outsl
iret
and
stc
add
inc
nop
mov
icebp
paddsb
hlt
cltd
cmpsl
loope
cmpsl
push
pop
xor
jnp
call
jo
jb
cwtl
cs
mov
andb
xlat
std
bound
push
and
cwtl
cmp
jmp
andb
ficoms
sub
cli
or
or
add
repz
jnp
inc
div
fistl
mov
sti
sti
inc
jg
xor
lcall
pop
outsb
add
pushf
jp
mov
imul
enter
mov
jecxz
cmpb
lea
or
push
xchg
inc
leave
and
push
jg
cmp
push
mov
imul
pop
sub
jp
jnp
scas
cmp
std
std
sbb
sub
clc
jb
or
out
mov
add
cmpsb
mov
lds
hlt
lock
insb
dec
mov
sahf
pop
fwait
pop
sub
loop
mov
cmp
mov
mov
lods
es
and
pop
adc
lret
cmova
ss
inc
cmpsb
add
lret
imul
xchg
sbb
clc
adc
cmp
sub
push
repz
xor
xchg
test
pop
mov
les
mov
dec
add
jo
lret
xor
loope
out
or
mov
sarb
ja
popf
add
xor
dec
lods
jmp
negl
es
cmc
add
pop
scas
stos
sbb
pop
fsubrl
mov
aad
and
sub
insb
repnz
mov
and
loope
add
jno
stc
movsb
pop
test
mov
adc
jmp
in
xor
std
gs
and
popf
in
adc
js
imul
push
push
mov
add
jne
rol
cmp
lock
repz
and
dec
sbb
in
or
mov
xor
call
sub
inc
push
jno
xor
repz
xor
ret
es
sti
dec
or
jo
pop
jb
shrl
cmp
fchs
cli
repnz
rcll
call
into
pop
dec
mov
pop
mov
iret
jns
cmp
stos
adc
mov
test
xor
outsb
daa
in
movl
into
das
movsb
push
pop
gs
scas
in
test
in
or
movsb
add
stos
lods
ss
push
mov
insl
jbe
push
leave
mov
mov
fdivl
mull
xor
fimuls
nop
loopne
imul
cmp
sbb
imul
push
sub
mov
mov
push
cmp
jge
sub
pop
add
or
roll
sub
dec
js
xchg
xchg
es
dec
push
rolb
ljmp
addr16
cli
push
aam
push
lret
add
xor
repz
jae
add
in
sahf
popa
xor
decb
daa
mov
xor
sbb
out
fldcw
jle
cmpsb
dec
nop
xor
cmpb
sbbb
mov
popa
sub
fmul
inc
fnstenv
mov
sub
out
in
pushf
or
movsb
mov
inc
int
fdivl
cmp
call
jl
adc
fmuls
insb
pand
jno
or
push
enter
xchg
cmpsb
add
sbb
or
inc
pop
mov
int3
jp
loope
push
mov
mov
jne
lods
push
and
orb
jmp
icebp
xor
inc
and
cs
sahf
scas
mov
adc
mov
outsb
add
rcrb
pop
sbb
cmp
sbbl
fldt
xchg
lods
push
fidivl
loop
inc
out
shll
repz
ret
cmc
in
cmp
int3
cmp
cmp
push
push
bound
adc
loope
mov
xchg
jp
cmp
lods
xchg
mov
inc
aam
jae
sbb
jecxz
addl
js
dec
jbe
icebp
sub
test
scas
leave
je
out
xchg
daa
pop
and
mov
xor
mov
and
cmp
lods
fistpll
mov
popf
adc
push
mov
jmp
xor
inc
lock
pop
out
adcl
push
leave
lods
pushl
jg
fwait
jns
std
mov
xor
sar
int3
add
mov
fdivrs
xchg
sarl
push
push
and
int
stos
pop
dec
sarb
sbb
xor
or
mov
add
mov
push
jns
jecxz
mov
out
add
mov
std
test
test
pop
in
and
aas
dec
mov
pop
call
hlt
popf
fldt
bound
fs
lods
enter
push
lahf
out
and
mov
push
data16
mov
dec
pop
inc
aaa
popa
addr16
or
pushf
mov
mov
dec
sarb
in
xchg
lret
sbb
mov
dec
js
leave
adc
sub
daa
xchg
mov
mov
in
adc
push
cmc
movsl
addl
and
adcb
fldlg2
sbb
jg
call
insb
push
jp
add
push
xchg
push
or
cmp
jne
xchg
js
fidivrs
test
push
mov
fucom
mov
scas
add
cltd
jmp
pop
stos
movsb
jp
jae
sbb
out
push
xchg
pushl
stos
test
and
sbb
pop
int
mov
pop
mov
lock
ss
xchg
sbb
gs
stos
add
jmp
sbb
xor
inc
rolb
dec
sub
ficoml
pop
mov
sbb
shlb
jns
sahf
push
rcrl
clc
inc
mov
add
jb
push
in
or
popf
pop
enter
jno
les
or
and
jge
or
imul
fsubs
cmp
loope
jno
xchg
push
push
fwait
push
lcall
mov
push
jns
stos
sahf
mov
das
loop
pop
scas
push
jbe
repz
test
push
xor
loop
pop
pop
push
or
jae
mov
jmp
pop
add
sub
pop
cmp
ja
mov
xchg
push
shl
idivb
jo
sbb
hlt
sbb
in
clc
xor
ds
push
sub
adc
repz
mov
or
jbe
loopne
push
out
lcall
dec
ds
cmp
sbb
sub
pop
cmp
insl
mov
lcall
mov
mov
jp
bound
pop
xor
lds
cmp
cli
inc
sbb
test
lret
push
data16
or
ljmp
repz
iret
lret
ds
test
push
or
and
scas
dec
and
sub
xchg
xchg
in
push
xchg
pop
mov
out
icebp
mov
popf
outsl
ja
sbb
cmpsl
xor
repnz
mov
sbb
fsub
jns
negl
adcb
xchg
sub
test
adc
rorl
rol
stc
pop
fisttpll
xor
sarl
cli
mulb
inc
mov
je
loope
jle
out
lcall
mov
int3
inc
icebp
pushf
cmpsb
dec
xor
mov
and
out
lcall
imul
insl
sbb
shlb
enter
and
cmp
push
fdiv
int
imul
fimuls
subl
mov
hlt
jne
fwait
cld
push
fisttps
test
mov
iret
mov
cmp
lock
fiadds
ja
lcall
pop
xor
add
nop
mov
xchg
xchg
fisttps
cs
adc
dec
push
leave
sub
sub
and
fisttpll
test
nop
push
clc
pop
fldenv
fs
sub
xchg
xlat
sti
enter
loopne
sbb
xchg
mov
adc
int3
out
negl
jmp
or
ficoml
push
pusha
mov
mov
or
mov
sbb
out
pop
fs
inc
cmp
sbb
cmp
movsb
mov
sbb
and
sbb
mov
sbb
or
jae
mov
addl
fmuls
push
in
xchg
or
pop
push
cmp
cmp
rorb
stos
xchg
or
sbb
cs
aas
sub
arpl
es
push
add
loopne
adc
cmpsl
ror
push
push
std
filds
dec
mov
fsubp
insb
loope
adcb
dec
sti
in
xchg
push
xor
icebp
outsl
xchg
shl
push
add
in
mov
repz
repnz
stos
dec
mov
cs
mov
orl
lods
mov
cmp
jbe
insl
sub
add
mov
jg
ret
xchg
jl
insl
outsb
fsubp
xor
lret
jns
mov
insb
jnp
push
pop
xchg
ljmp
imul
inc
push
in
clc
mov
subl
movsl
in
outsb
fmull
imull
cmp
dec
dec
orl
mov
insb
enter
xor
lcall
mov
sub
add
cmp
xor
mov
mov
in
mov
mov
out
cmp
cmp
mov
lret
nop
push
je
or
loop
xchg
mov
mov
fiaddl
cmpsb
push
add
dec
mov
xchg
loope
fisubrl
loop
pop
push
xor
das
repz
push
add
movsl
inc
int3
add
sbb
dec
push
cmpsb
lds
lcall
lods
cmp
arpl
scas
arpl
xchg
pushf
mov
adc
cmp
fldcw
nop
test
mov
cld
scas
push
sub
push
pop
mov
cmp
cmp
mov
push
pop
cmpsb
xchg
inc
fadds
or
lahf
sub
and
fsubs
call
into
dec
int3
mov
es
push
inc
ror
inc
fidivrs
pushf
sbb
call
lods
and
into
test
dec
sqrtps
add
fdivp
sbb
sbb
mov
sub
mov
into
test
pop
fadds
cltd
lock
fbld
fstps
popa
pop
pop
mov
and
out
mov
mov
in
negl
sti
mov
mov
add
out
mov
and
sub
xchg
or
loop
out
in
test
mov
adc
jle
mov
insb
test
lods
mov
add
pop
call
out
sahf
xor
pop
push
cmp
mov
cmp
cmp
call
mov
pop
inc
out
mov
mov
pop
mov
xchg
insb
mov
nop
or
mov
push
xor
in
push
add
pop
pop
and
sti
inc
and
out
or
adc
jecxz
repz
jge
add
addr16
cmpsl
in
subl
or
xor
enter
adc
loop
sbb
push
adc
xchg
subb
stos
bound
xchg
fsubr
loope
shll
push
pop
pop
idivl
sbb
push
mov
popf
notl
testb
sbb
mov
or
test
inc
int3
push
maxps
lahf
icebp
out
and
pop
xor
scas
pop
cld
xchg
popa
repz
out
out
bound
adc
loope
out
push
dec
xor
neg
jbe
xor
cs
jle
xchg
pop
or
inc
cmp
mul
ljmp
jl
add
dec
repz
inc
cmp
rorl
mov
popf
lods
cs
cmp
inc
int
fcom
jae
jae
std
in
div
cwtl
mov
lret
dec
adc
sti
mov
add
adc
lcall
shll
jae
mov
lcall
mov
cmc
adc
in
or
scas
or
push
push
test
mov
jg
xor
push
mov
enter
in
pop
push
sbb
pop
ficoms
xor
jo
or
mov
jno
mov
inc
scas
and
repz
pop
pusha
leave
iret
sahf
cmp
cmp
pop
inc
sub
push
imul
out
std
push
jg
xchg
sub
ret
mov
xchg
pushf
sub
inc
xchg
loopne
xor
or
imul
push
es
xchg
pop
fxch
ljmp
pop
sbb
inc
jae
insb
aam
push
push
lret
mov
sbb
push
nop
lock
lods
sbb
iret
ja
daa
mov
mov
fdiv
fsubrs
or
ds
ret
push
inc
mov
shlb
daa
dec
arpl
and
je
jg
push
dec
dec
cmp
sbbb
inc
mov
pop
movsb
jl
sti
mov
and
repnz
or
mov
iret
dec
out
push
jne
aam
or
dec
inc
pop
cmp
jmp
out
adc
cmpsb
jle
add
xchg
aam
dec
mov
les
int3
push
scas
out
out
shll
jp
and
mov
je
xchg
inc
sub
jg
jbe
rorb
xchg
jb
inc
ds
ret
mov
sub
inc
adc
sbb
pop
pop
jnp
rolb
sub
mov
add
decb
icebp
jns
jmp
adc
jnp
adc
push
nopl
enter
push
hlt
icebp
jae
aas
lret
cwtl
loop
xchg
xor
ljmp
xor
mov
inc
data16
daa
insl
add
das
pop
repnz
dec
dec
call
push
sahf
adc
out
inc
sub
shlb
jl
fstl
dec
xor
icebp
mov
outsl
sahf
sub
inc
dec
movsl
mov
in
cmp
push
xchg
adc
and
xchg
dec
fadds
jno
jbe
jmp
add
pusha
adc
cmc
cli
cmpl
sbb
xchg
jmp
notb
fidivs
add
nop
scas
mov
inc
xchg
frstor
ss
jle
je
mov
sti
pusha
test
fs
test
cltd
mov
movsl
xor
and
jmp
test
xchg
jae
mov
lahf
shlb
ds
jmp
fdivs
cmp
icebp
ret
xchg
sub
push
dec
dec
jge
and
fidivrl
and
mov
sub
jecxz
adc
cvtpi2ps
sub
lods
lea
mov
fists
pop
push
xchg
or
fs
pop
inc
rcl
mov
push
out
or
sbb
jmp
int3
adc
popf
xchg
dec
jl,pn
loop
mov
jne
scas
repnz
mov
xor
pop
mov
xchg
lds
cmpsl
lea
and
mov
pop
mov
fmulp
xchg
dec
push
int3
test
and
loope
sub
cs
nop
mov
fnstenv
cmp
or
xlat
xor
ret
and
ljmp
mov
mov
mov
std
sahf
cmpl
rol
icebp
pop
cwtl
insb
aam
testl
push
dec
aas
pop
and
jne
loop
imul
add
or
shl
dec
fildl
out
les
push
sub
pop
pop
icebp
ja
xchg
sub
adc
and
jo
or
jno
mov
fdivrl
addr16
mov
cmp
cmp
mov
inc
cmc
adc
add
cmp
lcall
pushl
xchg
jle
sbb
sbb
dec
lods
cld
inc
add
fildl
ds
shl
xchg
sub
repz
pusha
imul
std
aam
lcall
sbb
jbe
arpl
jbe
call
mov
mov
sub
or
lock
adc
stos
adc
pop
mov
lret
aas
jge
pop
or
into
mov
nop
fdivrs
sub
mov
cwtl
out
push
and
jb
and
stos
lea
mov
in
sbb
jbe
fnstsw
xchg
xor
leave
cmpsl
imul
xor
dec
jg
pop
sbb
ficompl
xor
int
pop
mov
push
push
icebp
sbb
ret
adc
cvtps2pd
stos
add
std
int3
in
in
mov
sub
or
sub
mov
sub
stc
lcall
sti
sti
pop
ret
out
mov
int3
push
push
pop
push
movsb
rcrl
and
or
add
into
add
lcall
or
insb
fldl
sub
in
push
lcall
or
inc
pop
movsl
daa
cmp
xor
cmp
cmp
and
pop
cmp
sbb
addl
or
mov
stos
mov
fiaddl
fwait
dec
aas
jbe
mov
repnz
fiadds
ss
lret
inc
xor
cs
inc
sahf
cmp
fdivl
mov
ret
xor
push
inc
hlt
xchg
inc
mov
das
dec
mov
movsl
lahf
sbb
insb
xchg
sarl
sub
andl
scas
xor
adc
jg,pt
fcmovb
aas
push
cmp
leave
call
adc
push
mov
cli
repnz
in
lods
and
outsl
mulb
lods
int
cmpsl
pop
cmp
pusha
pusha
hlt
push
call
sub
dec
icebp
loop
xlat
daa
cmp
and
or
cli
loopne
outsl
hlt
popa
sarb
mov
sbb
adc
mov
push
fsubp
xchg
cli
iret
mov
and
test
jmp
fsubrl
xchg
and
jp
stos
mov
orb
inc
aaa
mov
ret
and
mov
lods
jno
mov
out
lods
pop
or
or
std
pop
push
jmp
and
nop
mov
je
xchg
sub
xchg
xorb
adc
mov
and
dec
push
addr16
out
xchg
andl
sub
cmpsl
mov
fwait
and
aam
aam
scas
mov
xor
pop
pop
mov
mov
adc
sahf
js
mov
mov
sbb
in
pop
push
xor
popf
test
pushf
xchg
xor
lods
out
cmp
mov
jmp
dec
cmp
loop
inc
shll
dec
xchg
cmp
in
in
rclb
jo
clc
and
sub
inc
xor
fs
lcall
imul
mov
add
jo
cmp
push
add
je
mov
xor
or
je
lea
sbb
push
pop
fimull
out
add
enter
subb
ds
mov
xchg
mov
add
cwtl
xor
sbb
xchg
push
dec
jno
xchg
mov
push
scas
mov
sbbl
cmp
and
pop
dec
inc
jbe
xor
repz
or
push
pop
jae
and
mov
aaa
cmp
sbb
mov
xor
mov
testb
popf
in
test
gs
pop
lea
popf
mov
jnp
xor
inc
mov
je
pop
pop
in
xor
cmpsb
int
xchg
icebp
aam
dec
popa
push
test
cwtl
mov
sti
sahf
push
sub
data16
pop
clc
mov
mov
aam
insl
dec
std
cltd
aam
pop
pop
add
xchg
dec
gs
mov
mov
nop
loope
in
sbbl
out
ret
adc
sub
sbb
loop
out
cmp
add
jb
push
adc
shll
aam
mov
in
ret
or
dec
push
jae
shll
fs
pusha
loope
jnp
mov
xchg
insb
lahf
lea
shl
mov
insl
lcall
pop
xchg
ja
xor
cmp
push
dec
xor
pop
dec
cld
mov
cmp
in
loopne
jmp
js
enter
insb
jbe
ret
divb
inc
push
jl
mov
pop
pusha
out
jo
dec
adc
jge
jnp
fcompl
add
xchg
aaa
jle
cli
call
push
dec
xor
jmp
adc
mov
and
lret
pop
dec
aad
lock
jns
cmp
pop
mov
xchg
int3
je
or
push
add
aad
idiv
nop
sahf
popa
out
inc
jb
cmp
clc
fisttps
mov
ds
add
push
sub
pop
xrelease
xchg
mov
daa
out
cmp
lcall
out
mov
and
xchg
mov
mov
nop
rorl
sahf
filds
cmp
mov
adc
and
lea
iret
ret
cmp
dec
xor
cmp
mov
daa
jp
lahf
frstor
repnz
jmp
inc
inc
lock
mov
mov
lret
xlat
inc
icebp
xor
sub
loope
and
inc
mov
popa
push
cmpsl
mov
push
out
sarl
daa
rorl
out
mov
pop
and
or
sub
and
or
jp
ret
cld
aam
jns
outsl
cmc
cmc
push
or
addl
cmp
inc
aas
ss
icebp
cmp
loopne
pushf
sti
ja
mov
fists
push
inc
sub
fwait
pusha
lock
or
test
mov
add
pop
xchg
cmp
jmp
out
aas
sub
push
pop
cmpsl
inc
mov
xchg
sahf
aas
pop
icebp
xchg
filds
icebp
loope
imul
adc
mov
and
stc
sub
divps
data16
inc
xor
clc
leave
popf
mov
adcl
jne
lea
loope
jecxz
addr16
aaa
jl
pop
popa
ljmp
inc
pop
cld
xor
xlat
sarl
mov
fidivrs
call
mov
cmp
mov
pop
inc
es
cmc
fisubrs
mov
aas
push
dec
or
fisubrs
dec
xchg
or
insl
sahf
adcb
pop
dec
test
pop
jbe
es
pop
out
cld
or
cwtl
mov
pop
mov
movsb
mov
push
ds
fadds
add
addr16
or
rolb
sbb
xor
mov
gs
and
or
nop
push
repz
leave
test
xor
sbb
imul
adc
inc
and
xchg
div
fldcw
mov
mov
push
icebp
cwtl
add
or
insb
rolb
daa
shlb
pop
je
lods
sbb
sarl
xchg
cmp
cmp
and
jnp
arpl
movsb
repnz
mov
jmp
dec
jo
inc
aaa
sub
pushf
popa
cmp
imul
pop
push
lret
dec
mov
cmpsl
icebp
xchg
pop
dec
insl
sub
xchg
mov
xlat
dec
and
addr16
push
cmpsl
mov
and
cs
pop
jbe
push
cmp
cwtl
and
sub
test
pop
push
fistl
ret
stos
dec
ret
inc
ja
cltd
dec
pop
sbb
adc
xchg
bound
stc
xor
aad
jmp
cmp
mov
adc
cmp
dec
xor
and
adc
lret
rorb
std
outsl
lods
lods
insb
leave
jle
out
jae
cmc
push
loop
xchg
add
xchg
daa
adc
loope
jmp
cltd
push
cmpb
push
movsb
aas
cmp
leave
ljmp
imul
in
lcall
cmp
das
xchg
sbb
mov
loope
cmc
jo
repnz
xor
fbstp
decb
sub
pop
cli
mov
lret
je
dec
mov
fs
ret
pushf
cli
pop
fcomps
popf
cmc
xor
inc
clc
clc
in
pop
add
in
mov
inc
xchg
jg
cmp
loop
jg
outsb
jns
stos
in
pop
pop
sbb
cmp
cmc
popa
xlat
inc
rcll
test
sub
je
ret
mov
jne
test
leave
adc
fs
sahf
ret
hlt
call
aam
stos
dec
sub
cmp
mov
mov
or
in
push
push
or
fwait
out
movsb
movb
test
push
pop
adc
sti
insb
xlat
cltd
adc
sub
add
sub
xchg
sub
push
fwait
push
clc
or
push
mov
pop
pop
pop
adc
jge
subb
push
out
mov
inc
popa
sub
xchg
sub
and
cmp
xchg
lea
in
das
in
xchg
pushl
repz
inc
lea
mov
jae
sbb
scas
clc
dec
es
xor
and
cwtl
loopne
lcall
hlt
hlt
cwtl
cmc
or
in
bound
orb
push
fsubl
das
xorl
in
in
or
jns
push
inc
sub
pop
sbb
xor
mov
pop
leave
call
iret
mul
arpl
scas
cmpb
negb
cs
add
sbb
or
insl
cli
push
outsl
and
dec
sti
in
mov
in
adc
daa
icebp
push
cltd
gs
push
iret
push
inc
sbb
xchg
sub
mov
mov
jp
pop
icebp
repz
inc
test
rcrb
pop
clc
pop
scas
int3
dec
rcll
leave
dec
mov
into
mov
pushf
jns
inc
push
inc
cmp
xchg
xchg
movsb
nop
pop
ja
movsl
nop
jnp
movsb
ret
sti
and
notl
repz
fisttpl
hlt
orb
pop
or
and
aam
std
lret
add
push
inc
cmc
jle
mull
cmp
sub
cmp
xlat
inc
fnsave
rclb
lcall
loope
rclb
rcr
cmp
mov
dec
fwait
shrb
push
inc
call
hlt
add
jg
mov
fucomp
jae
sub
pop
out
push
mov
out
insb
pushf
leave
ficompl
jl
lods
add
std
push
mov
jp
mov
stos
rcrl
or
arpl
aas
add
rcrl
inc
cmp
in
les
ja
idivb
mov
adc
jg
xchg
loope
aad
push
out
addr16
scas
or
xor
dec
pop
cltd
imul
out
cmc
int3
popf
in
pop
jp
and
ljmp
test
mov
int
out
inc
pop
jle
dec
adc
jmp
sub
es
or
into
xchg
xchg
jge
ss
inc
jmp
dec
push
bound
mov
or
pop
aam
in
jae
cltd
mov
sbb
repnz
push
jg
push
and
rorb
sbbl
xor
out
sbb
clc
inc
mov
pop
loopne
jp
sti
mov
fwait
mov
lds
pop
pop
xchg
addl
test
mov
adc
lock
aaa
fwait
or
mov
adc
in
es
push
addr16
jle
ss
jecxz
stos
jecxz
sbb
mov
pop
fld
test
adc
adc
sub
out
sbb
push
push
lea
inc
mov
xchg
fwait
iret
xor
jae
xor
enter
inc
lcall
jp
and
jge
shrb
dec
movl
push
mov
fsts
sub
push
scas
jbe
mov
push
and
imul
dec
loope
ficoml
in
lcall
rol
adc
sub
arpl
mov
into
and
scas
dec
in
inc
push
jbe
dec
xor
pop
das
stos
mov
sub
fcompl
cmpsl
das
mov
mov
mov
mov
rclb
add
and
mov
aad
jbe
movsb
rcrl
repz
nop
mov
fnstcw
aad
pop
mov
adc
add
adc
xchg
mov
sbb
push
bound
mov
dec
in
mov
addb
sub
popa
cld
stos
loop
xor
mov
lock
in
shlb
mov
push
pop
pop
mov
jbe
mov
and
out
rcrl
xor
ljmp
sbb
jg
inc
cmc
sti
cmp
jae
add
mov
cmp
push
mov
fwait
add
xchg
js
call
jmp
sbb
test
adc
insl
xchg
call
inc
or
fld
sarb
adc
jb
cld
jmp
repnz
pop
stc
repz
fisttpl
lahf
inc
add
popa
incb
cld
jb
inc
iret
pop
push
push
outsl
mov
sub
loopne
stos
jecxz
jmp
mov
movsb
mov
cmpb
cmp
out
aam
cmpsl
pop
fwait
pop
mov
push
dec
std
mov
pop
xchg
in
gs
mov
pop
fsubrs
fnsave
and
ficoml
fsubl
adc
cs
lods
jle
adc
dec
popa
ja
xchg
inc
mov
ja
mov
in
push
cmpsb
jae
add
jnp
out
lock
mov
loope
sub
mov
in
out
stos
cmp
dec
and
xchg
push
xor
push
mov
pop
out
std
sub
adc
mov
arpl
pop
lock
dec
fs
xchg
inc
aad
dec
or
shrl
dec
call
xor
pop
add
test
mov
cmpsb
pop
sub
test
mov
loopne
push
arpl
push
mov
xchg
bound
ljmp
sbb
push
leave
pop
push
int
outsl
mov
js
loopne
add
xchg
sub
mov
xchg
mov
inc
push
push
cld
add
mov
mov
shlb
add
add
addps
xor
cmp
enter
rclb
pop
push
int3
xorl
pop
and
and
cmp
ss
sub
movsb
pop
mov
push
shlb
stos
lods
xchg
cmpsb
xchg
mov
cs
cli
popf
outsl
rcll
and
cmpsb
int3
push
jmp
sub
int3
into
imul
daa
test
aad
cli
push
mov
sbb
lds
lcall
jno
mov
clc
mov
lods
xor
ds
ds
movsb
or
xchg
outsl
cmp
das
mov
cmc
xor
add
lock
mov
dec
cmpsb
addr16
inc
fsubrl
out
and
mov
out
aaa
mov
adc
mov
lock
scas
stc
cltd
icebp
jno
jae
or
call
xchg
imul
inc
mov
lods
addr16
inc
jg
pop
xchg
adc
xor
in
or
js
xor
ret
adc
nop
push
test
mov
mov
mov
jne,pt
loopne
hlt
jl
lea
movsb
mov
aad
rcrl
push
std
shrb
filds
xor
pop
aaa
mov
or
pushf
add
scas
inc
xchg
sbb
xchg
data16
lods
sub
sbb
xor
out
fwait
jmp
xchg
out
mov
shll
mov
or
dec
call
cmp
xchg
das
and
jb
in
ret
rorb
je
and
push
add
dec
aad
test
add
sub
je
dec
ficoml
ret
jae
ja
and
push
loop
shrl
js
fwait
and
fs
and
xchg
pushf
insl
xchg
or
repz
stc
push
in
jmp
clc
cmp
push
lds
mov
rcll
push
mov
cmp
jo,pn
repnz
test
xchg
das
jno
cmp
decb
adc
jne
stc
dec
mov
mov
mov
aas
rol
dec
cmpsb
pushf
xchg
fs
inc
nop
nop
mov
adc
push
popa
insl
xor
bound
aas
sub
fwait
je
cmp
sbb
fisubrs
mov
cld
mov
sub
xor
push
add
mov
repz
add
push
push
pushaw
mov
dec
mov
repz
mov
cmpsb
imul
test
mov
ja
cmc
roll
and
sbb
lods
addb
cmp
clc
imul
orb
jecxz
cmp
shlb
in
lret
test
sbb
out
mov
xchg
cmpsb
pop
ja
add
add
add
push
repnz
icebp
or
in
or
loopne
pop
ljmp
pop
xchg
xor
push
loop
cmp
and
lret
mov
fwait
mov
adc
mov
dec
out
jno
test
adc
sahf
sub
and
mov
jge
mov
ljmp
xchg
ljmp
sti
aas
iret
add
and
push
adc
mov
jne
push
fadds
or
jns
addr16
xor
pop
or
repz
dec
mov
jmp
aad
and
int
sbb
xlat
jno
add
mov
inc
cli
or
iret
mov
daa
mov
lcall
loop
jmp
shrl
daa
xlat
inc
aas
mov
dec
mov
mov
push
add
mov
mov
stc
adc
data16
pop
xor
out
mov
sbb
jo
sbb
cmp
dec
push
movsb
inc
aaa
or
lea
and
out
inc
mov
inc
loopne
sub
sar
imul
ds
daa
inc
cltd
lds
insl
add
sbb
adc
scas
imul
arpl
cwtl
cmpsl
out
sub
orl
je
movsl
test
or
jg
imul
pop
test
rolb
push
cmp
sub
pop
out
push
xchg
sbb
pusha
in
les
add
test
mull
sarl
lock
xchg
sub
pop
cmp
fs
xor
stos
sub
das
cmp
loop
pushf
adc
fadd
xorl
push
sub
negb
mov
movsl
jmp
stos
inc
mov
fistpll
adc
aad
xlat
push
sub
inc
sbb
cmp
sti
add
pop
test
cmp
mov
ret
aad
pop
add
xor
jecxz
or
fmull
adc
lock
fs
pop
inc
out
or
xchg
inc
xor
push
int
sbb
xor
add
add
ffreep
sbb
mov
mov
inc
mov
xchg
pop
and
sar
xchg
xor
ret
cmp
pop
cmp
dec
mov
mov
push
dec
mov
stos
aas
ss
sbbl
dec
sbb
insl
leave
dec
maxps
addr16
ss
call
cmpsl
add
stos
cs
cwtl
sub
adc
cmp
cld
xchg
add
lret
sub
sti
shlb
fs
xchg
rcll
imul
ret
xchg
dec
mov
pop
xlat
sbb
in
test
mov
fisubs
ror
cmp
pop
nop
cmp
imul
sub
cmpsl
insb
or
push
outsb
pop
inc
sbb
pop
sbb
ss
fistpl
xchg
xchg
or
dec
out
lea
test
xlat
fstps
loope
scas
lss
rclb
mov
xchg
jbe
addr16
cmpsb
cmpsb
lret
jmp
mov
sbb
push
dec
push
cmpsb
in
ds
cmp
ds
inc
popf
subl
pop
xor
lea
mov
stc
xchg
cltd
xor
lret
or
inc
sbb
shlb
andb
cmp
nop
mov
push
xchg
pop
sbb
push
loope
data16
sahf
mov
and
sbb
insl
cmp
imul
sbb
xchg
cmp
ljmp
lret
in
push
aas
xchg
aas
test
mov
mov
cs
int3
call
fadds
into
pop
mov
sub
stc
mov
dec
dec
aaa
aas
pop
imul
push
test
cmc
mov
mov
pushf
lahf
das
mov
pop
cli
jno
pop
or
dec
fcoms
push
out
dec
adc
inc
aad
jns
push
in
pop
jge
dec
insl
pop
sahf
push
nop
mov
push
xchg
adc
cwtl
cmp
mov
addr16
cmp
dec
mov
xor
loop
push
leave
mov
push
mov
pusha
dec
xchg
fsubs
aaa
xlat
subb
mov
ljmp
sbb
inc
out
push
and
das
pop
arpl
mov
je
pop
dec
iret
frstor
nop
int3
mull
inc
sbb
jns
call
sub
bound
invd
xor
bound
test
repz
lock
and
xchg
popa
xchg
xchg
dec
rclb
lods
outsb
adc
test
pop
pop
push
inc
jge
mov
mov
pop
lea
or
mov
mov
test
ret
xchg
and
mov
lds
insl
fs
sbb
add
fistpll
push
cltd
insb
test
call
inc
and
xchg
push
lret
movsl
cmp
xchg
cli
mov
push
sbb
clc
dec
xor
sub
sbb
test
jl
sub
mov
mov
push
and
push
rolb
fbld
insb
pusha
int
stos
lods
inc
cmp
outsl
icebp
sub
ja
mov
sub
scas
cmp
sbb
cmp
mov
push
add
testb
ja
sub
in
in
pop
popf
xor
add
mov
push
aam
push
inc
or
insb
arpl
push
cld
arpl
jne
repnz
push
pusha
icebp
dec
sbb
hlt
mov
and
mov
nop
or
sub
ret
into
adcl
xchg
push
xor
sbb
or
addl
outsb
in
int
jo
out
ret
pop
or
sub
inc
cltd
aaa
push
fcompl
jmp
or
adc
mov
push
sbb
xor
and
in
arpl
ljmp
pushf
jp
lea
in
in
dec
movsl
mov
add
fs
and
fnstcw
and
cmpsl
mov
loop
adc
ficomps
sub
mov
out
mov
je
adc
mov
sbbb
cmpsb
xchg
pop
inc
cli
and
mov
mov
arpl
xchg
mov
test
or
inc
leave
popf
mov
aam
jns
pop
cmpsl
pop
sbb
adc
and
popa
leave
pop
sbb
dec
mov
cmp
shrl
xchg
cli
mov
int
ss
mulb
dec
shrb
fcmove
cmpb
sub
cld
pop
sub
scas
xchg
dec
sub
xor
and
xchg
out
dec
pop
ja
mul
add
push
insb
aad
daa
out
rorl
cmpsl
pop
mov
add
inc
enter
nop
lods
call
add
mov
push
leave
nop
jb
ret
mov
repnz
jmp
jns
js
inc
mov
rcrl
int3
push
sub
lods
mov
aas
or
inc
jecxz
and
data16
outsl
push
test
xchg
mov
mov
roll
ficoml
cmpsb
outsb
outsb
mov
leave
subb
xor
jl
popa
arpl
push
mov
je
lret
pop
sbbl
xchg
mov
lret
mov
mov
pop
das
enter
sub
inc
lret
cwtl
sbb
ret
jmp
mov
sub
mov
faddp
pop
fcmovne
dec
jnp
inc
je
je
ret
ja
bnd
mov
not
lahf
push
xor
mov
mov
adc
mov
mov
sti
stos
mov
jo
enter
ds
out
mov
inc
mov
iret
js
add
dec
mov
push
popf
mov
add
int
call
repz
sub
das
iret
popa
ss
xor
cmp
mov
adc
sub
cwtl
ljmp
xchg
outsb
xor
in
cvtps2pi
jno
andl
mov
xor
dec
inc
mov
add
cmpsl
sub
jl
jl
mov
negl
nop
les
sti
mov
jns
xor
stos
movsl
stc
stos
dec
or
mov
dec
loopne
mov
test
mov
jns
push
mov
mov
jmp
fwait
orb
sbb
sbb
cmp
shrb
add
dec
push
adc
lret
mov
jle
or
dec
pop
test
push
icebp
pushf
jo
sub
and
sbb
iret
mov
cmp
call
and
jle
popf
push
cmp
mov
mov
sarl
mov
das
stc
add
xor
sub
mov
repnz
mov
popf
or
leave
inc
sbb
mov
or
jae
rcr
mov
push
jns
mull
shll
aam
out
dec
dec
mov
dec
push
mov
pop
cmp
sub
mov
inc
cmpsl
mov
outsb
aad
sarl
push
sarb
mov
fistpll
je
sub
js
jle
lcall
inc
mov
and
dec
fidivrs
dec
xchg
addr16
scas
mov
das
mov
jg
mov
sub
insl
aas
daa
push
fisttpll
mov
jae
es
push
mov
arpl
gs
imul
jb
sahf
cmp
insl
adc
data16
dec
mov
pop
aas
or
mov
cmc
mov
jmp
movsl
mov
push
sbb
mov
mov
push
push
inc
or
movsb
or
push
gs
mov
sbb
inc
jp
inc
arpl
pop
in
adc
punpckhdq
push
scas
pop
rcrl
std
mov
sbbb
and
out
or
shlb
pop
xlat
xchg
jl
movl
hlt
ja
dec
ret
rcl
mov
ficoms
sbb
push
push
imul
pop
mov
add
mov
int
cmpsb
sub
cs
iret
mov
push
xchg
test
add
mov
pushf
cmp
repz
in
xchg
push
lret
mov
sbb
ffree
mov
mov
mov
fsubl
add
add
scas
xchg
xchg
add
rcrb
xor
sbb
xchg
xor
test
dec
inc
into
sbb
daa
push
and
or
sub
xor
or
jae
pop
mov
jg
ret
lahf
in
lahf
sbb
pop
push
sbb
and
mov
cmpsb
push
mov
aad
cmp
xor
lods
mov
pushf
jno
mov
scas
push
fs
out
int3
xchg
insb
and
cmp
aaa
push
into
jp
and
sub
pusha
mov
pop
cmp
jmp
sbb
fs
out
pop
and
aas
sbb
mov
jl
jnp
insl
inc
cltd
xchg
sti
xchg
sbb
sbb
adc
adc
bound
movsb
dec
xorl
mov
jl
adcb
imul
sti
dec
cmp
pop
and
outsl
sub
fidivrs
cmc
push
mov
je
cli
pushl
pop
loop
pop
ja
sbb
pop
jnp
addr16
stc
add
xchg
insl
jg
mov
fimuls
lock
iret
jmp
xor
push
push
je
mov
iret
xchg
pop
jge
add
sbbl
sub
mov
fwait
sahf
fiadds
push
out
iret
aad
insl
or
into
jno
dec
in
scas
pushf
sahf
aad
add
outsb
xor
out
pop
dec
push
adc
lods
mov
sub
data16
fsubrp
ss
lods
mov
mov
ret
or
movsl
xchg
inc
or
push
cmp
xchg
or
out
rcrb
adc
js
aaa
test
inc
loope
aam
mov
rorb
or
pop
mov
mov
sub
rcll
and
lret
mov
jnp
and
out
into
nop
pop
pop
roll
subb
inc
popf
cwtl
xlat
mov
mov
or
fisubrs
dec
shll
pop
add
scas
dec
ljmp
push
sbb
repz
and
push
xlat
pushl
mov
mov
movsb
loop
imul
rcll
push
movsb
add
jle
loopne
js
mov
lock
and
pop
loopne
mov
fldenv
out
cmp
cmp
movsl
nop
je
push
mov
ja
flds
mov
mov
mov
xchg
mov
lds
inc
add
push
test
loope
cmp
ret
fdivs
fcompl
jno
cld
or
push
dec
mov
jne
add
scas
inc
addb
sub
pop
fbstp
out
mov
sbb
pusha
int3
jge
ljmp
in
xor
lock
and
cmp
rcr
sbb
outsl
aam
pop
jbe
push
cmpsb
rcll
cmp
test
jo
aam
cwtl
in
insl
gs
or
push
xchg
lods
scas
lret
push
mov
arpl
nop
pop
lods
lcall
fidivl
ret
cmp
mov
in
cltd
and
or
cmp
mov
or
jae
ret
jmp
fcompp
std
xor
and
jle
mov
cmpsl
lret
xchg
mov
and
subb
dec
sbb
xor
push
mov
sub
lods
and
jne
cmpsb
sbb
cmp
ds
data16
mov
push
aaa
mov
orl
add
mov
sbb
daa
add
sbb
cmpsb
push
pop
movsl
testl
mov
cmc
or
cmp
lret
jmp
pushf
sub
into
jl
mov
sbb
ja
sahf
jb
lock
addb
cmp
dec
scas
push
popf
pop
jecxz
cmp
and
fs
xlat
and
je
pop
int
sbb
mov
mov
int
loope
inc
cmpsb
mov
sbb
popf
mov
loopne
adc
repnz
mov
aad
stc
adc
cmp
add
out
idivl
bnd
lods
sbb
stc
icebp
and
out
rcll
add
mov
mov
jbe
push
or
cmp
mov
or
push
insl
sti
dec
mov
gs
int3
jl
push
cltd
mov
push
mov
mov
xchg
pop
and
xor
add
jns
sub
test
xor
inc
outsl
or
adc
sbbl
adc
pop
adc
xor
mov
jle
les
insl
pop
in
push
lcall
pop
adc
jle
lret
cld
dec
fbld
xchg
in
pushf
pop
lock
addr16
lds
fisubrl
stos
les
cwtl
int
lcall
sti
mov
mov
out
adc
push
das
je
arpl
mov
add
mov
int3
fisttps
dec
cltd
xchg
cmpsl
mulb
out
lods
xor
test
pop
pop
lea
push
outsl
mov
pop
ljmp
push
mov
mov
test
xchg
mov
jne
and
faddl
mov
cmp
and
cld
out
inc
and
or
test
ja
fdiv
iret
xor
mov
fwait
jns
pop
jle
cwtl
aaa
rol
outsl
sub
sub
mov
mov
test
ret
mov
in
adc
pushf
pop
jmp
arpl
outsb
jns
cli
and
mov
push
jns
and
hlt
adc
cmp
inc
loop
sbb
aam
imul
adc
push
sbb
xchg
sbb
adcb
jb
cmp
xor
push
mov
dec
mov
push
lret
rcrl
test
shll
sbb
pop
xor
sbb
pushf
imul
inc
stos
mov
xchg
mov
mov
xchg
arpl
adc
jno,pn
dec
lds
lret
in
cltd
addr16
in
cmc
in
adc
leave
enter
xchg
loop
out
dec
cli
in
arpl
pop
inc
cmc
int3
hlt
add
xor
fnsave
pop
orb
fidivrs
and
push
rcrb
adc
and
push
dec
ss
xorl
popa
fisubrs
xchg
outsb
subl
cmpsl
andl
int
insl
mov
lret
cmp
out
repz
sbb
test
mov
sbb
imul
jbe
cltd
jnp
xchg
mov
test
push
stc
cltd
pop
push
inc
inc
add
adc
popa
nop
js
bound
test
ret
pushf
mov
mov
daa
push
dec
mov
pop
scas
sub
repz
add
sarl
roll
mov
ja
push
jns
or
jmp
sbb
and
ja
enter
pushf
mov
pop
out
inc
sub
dec
in
test
pushf
sbb
adcb
iret
stos
das
add
inc
test
and
pop
jmp
stc
mov
test
mov
push
push
or
jnp
mov
movsl
dec
adc
fs
in
push
push
movsl
dec
sub
push
add
pop
adcb
push
push
xor
addb
int
scas
jge
fdivrl
jns
enter
push
dec
dec
shll
jb
push
pop
mov
mov
push
inc
stos
add
or
mov
shrl
test
inc
outsb
outsl
mov
dec
adc
lods
adc
adc
inc
lds
xor
sahf
test
aaa
pop
mov
mov
scas
enter
cmp
jge
rorb
movsb
xchg
mov
fmull
inc
dec
lods
fiadds
and
mov
xlat
cmp
sbb
gs
sahf
dec
add
rcll
xchg
mov
fidivrs
mov
rcrl
movsb
adc
xor
movsl
ret
loop
out
adcb
aas
mov
insl
test
bound
dec
data16
js
mov
mov
jno,pt
lods
fwait
test
push
mov
ljmp
mov
or
ss
xor
lods
mov
adc
lds
jle
mov
or
les
or
into
dec
sahf
jb
adc
pop
inc
pop
das
fimuls
das
addr16
inc
pop
cmc
mov
cwtl
push
push
xchg
mov
push
test
imul
lret
push
jno
outsl
and
in
sub
in
stos
sbb
push
sahf
mov
add
xchg
jo
sbb
push
push
movsb
rcll
or
shlb
repz
in
push
cmp
fcoms
addl
dec
cmp
pop
dec
into
jmp
push
aas
jbe
and
outsb
lcall
shrb
shll
dec
ss
sub
add
xchg
xlat
pusha
xchg
add
pop
xor
sub
bound
test
hlt
inc
push
cld
sub
mov
adc
outsl
rcll
mov
cmpsb
addb
aam
mov
int3
loopne
ss
idivl
cmp
and
imul
repz
sbb
in
mov
dec
push
adc
outsl
sbb
int
cltd
or
adc
shll
aas
imul
add
movsl
fimull
push
cmpsb
and
ret
aad
daa
dec
imul
adc
mov
in
add
xor
lea
adc
rcrb
subl
jge
add
inc
mov
jno
jp
xchg
pusha
and
fwait
push
jl
imul
mov
rorb
push
clc
into
jmp
es
pop
mov
or
insl
pusha
in
dec
push
cmp
orb
sbb
mov
pop
pusha
cld
data16
lcall
xchg
cs
es
mov
fcmovnu
xchg
push
pop
mov
xchg
js
out
xchg
ret
cmp
ljmp
lea
mov
out
push
insl
sbb
jb
fisubrs
in
mov
jecxz
test
jns
in
aaa
stos
dec
push
test
lods
mov
sub
or
sbb
inc
xchg
int
ja
insb
cmp
shr
addr16
adc
ret
les
adc
inc
sub
xor
mov
mov
popf
push
in
fidivrl
neg
movl
in
mov
out
push
fwait
cs
push
xchg
shrb
dec
mov
frndint
jae
dec
aaa
pusha
mov
cmpb
aaa
push
mov
mov
fs
or
repz
lods
mov
out
into
mov
jns
dec
imul
sub
lahf
aam
ss
das
lret
cwtl
lock
xlat
nop
lahf
mov
dec
imul
sahf
mov
mov
add
les
add
xor
push
sub
mov
cmp
ss
mov
jecxz
in
sbb
ja
mov
push
out
push
mov
mov
loope
cmpsl
xchg
adc
test
daa
pop
test
cli
adc
insb
jno
sub
fists
into
clc
push
xchg
std
jmp
pop
andl
xchg
cmp
cmp
data16
shr
cli
xchg
int
dec
mov
cmp
in
out
adc
mov
lock
cs
ja
pop
dec
push
gs
cmp
fstpt
pop
ror
jnp
aaa
std
fidivrl
pop
mov
fmull
mov
das
add
out
and
pop
pop
out
dec
inc
rolb
adc
fcoml
jecxz
insb
dec
icebp
add
mov
xchg
out
push
sub
dec
push
xor
push
add
lea
loopne
enter
or
or
push
jb
insb
adc
pop
repz
enter
mov
jno
jne
xor
insb
ret
insl
sub
add
push
mov
das
push
pop
arpl
lahf
jg
inc
test
inc
sub
mov
xchg
add
mov
xor
sbb
push
mov
jo
mov
or
shrl
add
or
push
or
or
cs
mov
inc
mov
adc
rcll
pop
dec
dec
popl
in
inc
pop
mov
jae
iret
bnd
mov
ret
int
insb
push
aam
gs
je
fcomps
in
std
mov
pushl
jmp
adc
mov
loopew
in
shll
in
xchg
sub
imul
pop
sbb
dec
test
mov
jb
mov
in
movsb
fistps
jl
mov
xor
add
sub
and
cmp
inc
jle
out
pop
sub
dec
mov
andl
int
lods
int
in
or
sub
imul
gs
push
fmul
loop
das
cli
or
movsl
pushf
and
push
fs
les
inc
iret
lcall
jne
imul
cld
inc
inc
and
cmp
sub
add
or
cmp
and
inc
dec
fwait
lds
pop
loop
mov
test
jge
ret
fnstenv
jge
xchg
or
out
je
int
xchg
stc
icebp
insl
jle
adc
or
mov
push
inc
xchg
fisttps
add
ret
imul
cli
push
adc
fdivl
or
imul
pop
and
loope
leave
aam
xchg
pop
dec
mov
xchg
adcb
inc
dec
cwtl
push
loope
push
cli
addr16
dec
mov
sub
mov
mov
jnp
or
add
jge
nop
mov
ljmp
addr16
mov
pop
popf
add
pop
fimuls
jne
and
and
mov
add
sub
sbb
jnp,pt
xchg
mov
xchg
cld
and
bound
xor
lahf
mov
es
cmpsl
mov
xor
adc
mov
aas
pop
out
push
outsb
sbb
jmp
xchg
mov
adc
popa
add
aas
out
movsb
jnp
jg
in
push
shr
inc
push
jae
adc
arpl
movsb
jbe
inc
into
ret
gs
dec
and
lods
inc
icebp
xchg
jo
xchg
int
cs
aaa
or
jbe
dec
adc
ja
movl
mov
fwait
sarb
cs
push
outsl
pushf
loop
cmp
inc
cmp
and
loopne
addr16
push
popf
push
movsl
popf
gs
sarb
enter
add
loopne
mov
in
leave
inc
in
sbb
daa
dec
and
sbb
pop
movb
pop
data16
fld
push
mov
add
aad
out
add
pushf
and
pop
notl
push
stos
test
repnz
xor
xchg
fdiv
xor
inc
neg
dec
popl
sub
sbb
hlt
push
adc
adc
pusha
mov
imul
jecxz
inc
push
mov
in
jnp
popa
out
xchg
inc
outsb
mov
xor
push
das
movsl
mov
call
lods
sbb
sti
jne
xor
test
dec
pop
xor
lahf
adc
push
test
sbb
sub
push
repz
insl
dec
lock
lahf
mov
movsb
js
sbb
imul
pop
in
or
clc
cmp
and
jge
loopne
mov
push
repz
cmpsl
xchg
adc
adc
mov
adc
mov
bound
push
pop
xchg
lock
sti
sbb
into
daa
aam
jo
mov
jp
outsl
inc
sahf
mov
or
xor
cld
lret
xchg
aad
or
cmp
mov
outsb
mov
xor
inc
repz
test
ret
shrb
mov
outsl
arpl
cmc
out
sub
insb
pop
test
fbld
xchg
enter
mov
jp
lea
popf
push
clc
int
xchg
sbb
sub
jne
cmp
lret
test
pop
and
sbb
push
pop
outsb
add
add
push
and
inc
stos
cmpsb
jmp
repnz
jp
inc
iretw
lret
push
sbb
lret
dec
xor
cli
pusha
jle
fcoms
xchg
dec
lock
negl
imul
jnp
in
or
xchg
int3
gs
ja
daa
fdivrp
sub
pop
es
jno
or
imul
pusha
push
push
ljmp
lods
lock
lcall
sarl
mov
dec
push
mov
mov
mov
pop
dec
loope
out
dec
mov
xchg
pop
sbb
ja
add
push
push
in
popa
cltd
jl
scas
cmp
hlt
dec
mov
sub
jecxz
dec
cmp
ljmp
insl
call
sub
imul
cmpl
mov
pop
iret
iret
xchg
and
sti
inc
mov
adc
scas
adc
add
mov
mov
jl
adc
or
or
inc
jno
xlat
repz
dec
lds
mov
add
pusha
ja
jge
push
in
movsb
hlt
ljmp
inc
jle
stos
arpl
or
xchg
mov
ret
fwait
mov
pop
cwtl
fwait
push
adc
stos
insl
jge
sbb
iret
inc
js
sub
dec
dec
fisttpl
jecxz
xchg
lods
mov
sub
icebp
jecxz
outsl
into
repnz
pop
sub
shl
mov
adc
lret
xor
sbb
mov
je
xchg
test
jl
jmp
mov
lods
push
mov
pop
aas
ret
pusha
pandn
pop
or
xchg
push
mov
jns
rcrb
sti
dec
jnp
pop
fisttpl
aas
mov
adc
in
jo
or
icebp
or
lret
vcvtsd2si
lods
xorb
dec
imul
pop
and
jle
xor
cmc
push
fidivs
in
pop
fildl
push
or
fimull
divb
jge
xor
in
jp
adc
test
jae
xor
stc
sub
mov
push
js
popa
les
jno
xchg
adc
mov
aam
das
pop
inc
outsb
pusha
popa
add
jecxz
out
jne,pt
pop
xchg
rol
mov
ds
inc
pop
mov
fcompl
mov
dec
xchg
sbb
int3
mov
sub
inc
in
aas
std
insl
inc
movl
fldl
and
les
aam
jno
negl
mov
inc
test
sbb
ret
nop
xchg
dec
bound
imul
dec
iret
push
je
out
mov
jmp
xchg
bound
cs
push
inc
mov
mov
adc
jle
cmpsl
jge
jmp
push
dec
ja
add
pop
adc
mov
push
in
dec
xchg
and
add
pop
lcall
inc
in
dec
push
xor
imul
mov
mov
out
sub
pop
int
sub
call
sub
je
push
or
xchg
push
fmulp
jmp
sahf
mov
push
dec
in
dec
pusha
inc
fiaddl
gs
sbb
xchg
push
ljmp
popf
push
outsl
pop
in
xchg
test
enter
dec
sbb
lahf
pop
insb
ss
aas
enter
nop
loopne
push
test
cmp
mov
dec
lcall
out
jnp
shl
lcall
ret
mov
sar
fs
loop
mov
mov
add
ror
inc
scas
push
popf
in
adc
stc
add
mov
stc
mov
js
aad
aad
lcall
fcmovnb
enter
fcoml
dec
pop
jmp
xlat
jmp
mov
jecxz
push
dec
mov
es
cmp
rcrl
and
xor
out
push
imul
daa
xor
fildll
xchg
dec
fsubrs
jne
int3
jno
cmp
lds
es
pop
mov
sub
int
shlb
jbe
push
mov
shl
push
mov
into
adc
ret
pop
popa
rep
ret
dec
leave
adc
dec
xchg
inc
daa
out
mov
pop
and
xorb
ds
or
mov
lcall
sub
inc
and
cmpsl
dec
aaa
jmp
pop
js
pusha
lcall
incl
bound
js
ret
jno
lock
cli
mov
mov
shlb
sbb
stos
cmc
les
outsl
sahf
adc
aaa
fnstcw
popf
test
mov
dec
aam
lock
stc
scas
xor
jno
push
sti
insl
inc
push
insb
cmp
fnstsw
cwtl
mov
inc
daa
pop
iret
bound
mov
int3
test
jno
inc
sti
jb
dec
imul
push
lods
imull
jns
lea
sub
movsl
shll
loop
jle
xor
jmp
leave
jle
add
add
sub
mov
out
call
js
nop
push
les
push
addr16
and
dec
inc
mov
sbb
std
fs
insl
mov
cmp
repz
adc
cmp
xchg
and
rcl
cld
jbe
fwait
lcall
inc
mov
mov
pop
xchg
xor
inc
gs
mov
loopne
dec
test
stc
mov
cld
outsb
cmc
scas
jmp
xchg
push
mov
fidivs
scas
sbb
push
inc
or
in
cli
inc
lods
les
movsb
nop
repnz
xor
mov
movsl
jecxz
push
xor
clc
push
xor
pop
add
cmc
nop
shr
cmp
dec
jbe
sarb
pusha
pop
ljmp
jmp
push
iret
les
imul
stc
lret
daa
pusha
jl
rorb
sbb
sub
jb
push
cmp
dec
out
mov
scas
lahf
or
dec
loopne
in
xchg
shlb
lods
xchg
ljmp
negl
fadds
push
incl
inc
scas
cld
bound
push
fsubrs
outsb
test
in
jecxz
sbb
dec
scas
pop
and
mov
lret
push
xchg
je
xor
add
lcall
test
pop
and
push
sbb
pop
insb
or
loopne
jns
jne
mov
les
push
jb
xor
xor
cld
fmul
stos
lods
std
and
inc
cmpsl
cli
add
adc
insb
pop
nop
add
fistl
shll
pop
ljmp
xchg
pop
out
mov
adc
mov
sbb
cmc
mov
addl
mov
pushl
mov
jns
subb
addr16
int
in
movsl
jmp
jecxz
xchg
mov
icebp
jge
cmpsb
lock
mov
push
jb
loope
cmp
repnz
jo
inc
cmp
dec
sbb
and
jnp
jg
faddl
fdivp
dec
mov
mov
les
lds
sbb
fistps
xor
jmp
pusha
push
imul
testb
repz
cmp
sarb
std
mov
and
movsl
xchg
add
in
cmp
cwtl
push
push
inc
add
xor
pushf
cwtl
leave
xor
stos
out
cmp
shrb
xchg
xchg
call
fs
popf
push
jmp
cmc
push
lahf
inc
loopne
add
and
rcrl
outsb
pusha
inc
and
jb
std
jo
jge
mov
divb
stos
inc
push
or
fisttps
and
cli
jns
jle
pop
cmp
or
inc
negb
add
add
shll
and
xchg
insb
pushl
test
mov
movsb
lcall
sbb
xchg
mov
xor
fisubrs
adc
out
sbb
dec
dec
aam
gs
push
mov
popf
pop
mov
sbb
adc
mov
mov
mov
dec
cmc
lahf
sbb
rclb
dec
add
or
lret
ljmp
loop
mov
pop
test
inc
mov
mov
jbe
mov
fsubrl
imul
xchg
lods
mov
dec
add
xchg
stc
nop
mov
sub
ljmp
dec
mov
adc
dec
or
aad
pop
fistpl
mov
and
or
fs
xchg
inc
dec
int
out
xor
jns
out
imull
lods
loop
sub
pop
adc
pop
cmpsl
pcmpeqd
dec
inc
dec
add
loope
add
or
jne
ror
jmp
cmp
clc
lret
xlat
shl
lret
inc
mov
and
sbbb
add
sub
mov
ja
out
sbb
cmp
dec
jbe
jne
xor
sbb
enter
cmp
divl
out
mov
mov
pop
sbb
fdivs
fcom
and
push
sbb
icebp
xor
xor
stc
outsl
movsb
mov
rol
mov
ss
hlt
loopne
lock
xor
mov
mov
push
and
aad
sbb
xor
stos
mov
mov
lock
cmp
cltd
aaa
push
sub
ljmp
jmp
fs
or
push
and
push
mov
pop
fstl
jae
adc
mov
dec
stos
add
aaa
mov
cs
or
cmp
std
in
aam
mov
movsl
fwait
xor
icebp
xor
es
cmp
sub
mov
mov
int3
pop
imul
mov
test
enter
push
pop
cmp
das
mov
shlb
push
cmpl
add
jecxz
and
mov
sub
rorl
loop
rol
mov
jbe
jns
or
pop
adc
push
inc
jae
lds
mov
arpl
fists
pop
subb
jmp
or
test
rol
xchg
jge,pn
pop
stc
daa
ss
cmp
add
fcoml
call
dec
outsl
lret
sub
negl
loop
cmp
inc
lds
mov
insl
je
mov
daa
pop
mov
dec
nop
cmpsl
xor
test
adc
fbstp
sub
rorl
adc
sub
fwait
cmp
sbb
in
fmuls
fistpll
je
sbb
pop
xchg
fnsave
xchg
adc
mov
sub
jle
sub
dec
xorl
sbb
mov
lock
sbb
test
xor
rol
cmpsb
jns
shrl
add
cvtps2pd
jo
scas
popa
mov
sbb
jne
cmp
jge
adc
daa
jge
rcrl
cmp
or
cli
dec
mov
mov
and
add
jp
inc
sub
iret
add
jmp
lods
add
jo
sbb
jecxz
aam
popa
push
xor
setl
test
and
mov
lds
lcall
inc
repnz
and
xchg
mov
and
aaa
test
mov
add
aaa
movsl
or
fldenv
sbb
cmpsl
mov
jge
jno
and
cmp
sarb
lcall
mov
aad
int
cltd
add
sbb
xchg
xor
leave
loope
cmp
push
xchg
popl
mov
popa
inc
mov
loope
pop
push
or
loope
cmp
and
sub
pop
add
inc
cmc
sbb
shlb
mov
repnz
inc
mov
xorb
test
add
lahf
pop
mov
jl
repnz
test
dec
add
mov
push
ror
add
jmp
loop
aad
pop
cmp
xchg
std
pop
adc
or
xorb
mov
sarl
sbb
fcmovb
loopne
pop
push
shr
cltd
pop
xchg
loope
sahf
lea
mov
js
rorb
push
pop
pop
inc
aam
add
cmp
loope
das
mov
sub
inc
mov
or
mov
xor
cmp
outsb
adc
test
push
mov
mov
adc
pop
sub
test
stc
movsl
mov
add
fildl
or
orb
sub
pop
lret
push
stos
icebp
adc
in
lock
imul
or
into
pop
loope
int
add
adc
inc
fcompl
xlat
mov
fcoms
and
mov
mov
insl
push
gs
xor
fs
cmp
mov
dec
and
call
rorb
insl
dec
stos
repz
lea
scas
pop
shlb
or
into
xor
popa
mov
and
add
ds
inc
pop
pop
les
shll
ja
xor
inc
mov
je
sar
adc
push
mov
push
xor
jae
test
popa
xlat
dec
dec
adc
or
movsl
inc
enter
adc
mov
xor
xchg
cmp
cs
testb
js
mov
mov
fildll
stos
lahf
test
incl
nop
movsl
pop
inc
in
test
or
aam
add
dec
popa
jp
lret
cmp
push
test
aaa
mov
nop
pop
jge
mov
mov
jae
jo
xchg
cld
mov
out
clc
inc
sub
dec
jmp
jmp
rcrb
ficoml
shll
add
sar
lahf
stos
or
mov
and
imul
sub
mov
pop
jecxz
add
cmpsl
cmp
push
ret
lea
add
pusha
jge
pusha
lahf
shlb
sub
test
lds
in
adc
int
inc
add
push
sub
jge
jecxz
nop
sbb
mov
fsubr
lcall
mov
add
sub
adc
mov
and
out
nop
push
fidivs
ja
sahf
clc
push
pop
push
xor
and
gs
repz
mov
sbb
fisubrl
pop
into
shl
dec
adc
mov
pop
xchg
stos
xchg
mov
popl
lret
mov
notb
ljmp
pop
sub
adc
xchg
je
push
jno
jle
jb
jb
js
xchg
mov
jns
jne
cmpsb
andl
popf
adc
cltd
dec
in
shlb
adc
push
add
aaa
or
inc
shlb
test
nop
or
aad
mov
jnp
adc
dec
sbb
sbb
in
adc
cmp
cmp
inc
pop
xchg
or
es
or
sbb
xchg
shl
push
ret
sub
enter
xchg
aas
push
cwtl
and
push
stc
insb
imul
pop
mov
out
dec
stos
lock
dec
push
sub
ror
mov
sub
fisubrs
adc
or
mov
mov
mov
outsl
out
popf
mov
and
addr16
ds
push
stc
popf
icebp
add
test
push
lcall
arpl
dec
add
lea
cld
cmpsb
add
mov
mov
stos
push
push
adc
xor
and
mov
cmp
add
push
cli
jmp
sbbl
loopne
mov
mov
int
jb
mov
add
out
cmp
dec
ljmp
nop
fnstcw
fisttpl
lret
mov
outsb
out
lea
data16
stc
inc
ret
inc
std
jbe
ret
mov
xchg
mov
lods
jae
mov
jns
hlt
bound
sub
aaa
inc
xchg
rcrb
xchg
push
mov
mov
int3
inc
std
rorb
mov
push
insl
gs
sub
or
add
cmpsl
xchg
test
aam
pop
scas
push
hlt
popf
sahf
dec
in
cmp
sbb
xchg
mov
out
mov
dec
xchg
mov
in
add
frstor
int3
lock
jnp
mulb
adc
ljmp
sarl
cmp
xor
mov
xchg
pop
mov
add
mov
cmpsl
jg
in
fimuls
mov
dec
lea
sbb
out
xor
lret
cmp
cltd
aaa
mov
mov
jp
jno
and
stos
dec
push
call
xor
pusha
xor
mov
mov
insb
push
sub
fwait
repnz
stos
or
add
lret
push
jne
adc
mov
add
xchg
js
add
idivb
js
sbbb
sub
sbb
negl
add
push
sbb
dec
stos
mov
jne
pop
scas
fisubl
push
out
sbb
push
dec
imul
pop
fs
cwtl
ljmp
push
ja
xchg
mov
mov
into
push
cmovno
xchg
pop
sub
sbb
cmc
repz
loope
or
pushf
cmp
adc
ret
in
ja
xor
ret
push
jnp
stc
into
bound
enter
jae
xchg
mov
popa
insl
mov
lods
add
cmpsl
test
mov
xor
hlt
test
pop
mov
xchg
xchg
mov
mov
and
fbld
sbb
jae
pop
cwtl
call
inc
movsb
xchg
lret
push
std
add
aad
jle
pop
jp
mov
sbb
imul
sbb
or
orb
aam
pop
les
movl
xchg
mov
push
mov
cmp
lcall
dec
aad
imul
push
movsb
lea
mov
je
cmp
jae
vorps
inc
and
jnp
mov
lock
adc
dec
xor
xor
cmpsl
jmp
adc
pop
dec
or
out
neg
bound
into
xor
add
mov
cltd
sub
mov
call
jae
gs
dec
and
into
test
and
push
push
scas
aam
jg
aaa
push
in
jnp
dec
mov
cld
test
insl
pop
add
addr16
ja
jl
inc
add
push
adc
xchg
lcall
jg
test
jo
mov
fidivl
dec
pop
call
inc
or
jp
mov
cmp
and
or
rcrl
aas
jno
scas
cmpsl
sub
add
ljmp
add
or
mov
lret
adc
cmp
pop
or
enter
call
or
mov
cmpsl
test
xor
add
fucomp
ds
add
mov
fisubs
xchg
push
lods
popf
in
rcl
dec
lock
loop
pop
out
jl
mov
addb
add
out
dec
pusha
clc
sub
sbb
iret
imul
dec
push
fimuls
push
add
mov
inc
xor
fstl
cmc
ret
arpl
aaa
mov
add
mov
pop
sbb
mov
loope
imul
mov
cmpsl
stos
lretw
or
push
imul
rcl
out
jnp
fs
xor
aam
adc
sub
subb
test
add
adc
sub
mov
stos
in
leave
pushf
mov
add
fistl
pop
aad
inc
in
xchg
xor
xchg
pop
xchg
mov
lcall
pop
push
cmpsl
pop
bound
mov
leave
fidivl
inc
test
dec
xchg
jns
gs
ret
pushf
inc
repnz
ss
popf
imul
int3
lahf
xchg
testb
pop
and
loop
mov
inc
add
cmpsl
jb
test
bound
pop
in
test
rolb
mov
inc
cmc
lods
cmc
inc
or
call
lea
and
xchg
lods
jmp
mov
mov
mov
test
inc
and
outsb
fidivrs
enter
sarl
div
pop
test
pop
push
sar
sbb
inc
jnp
fdivs
jp
pop
icebp
push
sub
in
ds
fcoms
mov
pop
arpl
and
fcoms
pop
and
into
fidivrs
mov
insb
sbb
push
xchg
loopw
bnd
push
inc
adc
push
jle
dec
gs
xor
rorl
cmp
ds
je
mov
xchg
int3
mov
out
test
mov
fidivs
cmovns
pop
or
aaa
jns
jl
add
rcll
adc
mov
adc
xchg
imul
test
mov
inc
or
dec
sub
cmc
inc
push
jo
cmpsb
enter
mov
sbb
or
sub
inc
xor
cmp
movb
push
adc
pop
out
repz
popa
push
pop
xchg
hlt
push
lret
loope
enter
hlt
add
jl
fnsave
nop
pop
lahf
rcrb
movsl
mov
jg
ret
stc
fisttpll
stc
pop
and
outsb
imul
jg
fisubrl
sbb
and
dec
mov
xor
inc
jno
jle
test
adc
mov
mov
lods
out
scas
daa
jmp
mov
repnz
pop
scas
mov
in
dec
jbe
loop
mov
xchg
jl
into
jecxz
movsl
mov
fsub
iret
sahf
fs
pop
pop
aam
adc
inc
out
inc
addr16
mov
shl
imul
jle
aaa
notl
das
sub
pop
sbb
or
sahf
hlt
push
idivl
inc
sbb
push
xor
mov
jmp
and
cmpsb
outsb
xchg
push
sub
arpl
leave
ja
out
mov
addr16
pop
pusha
insb
icebp
imul
xchg
int
aad
sti
sbb
lods
cmp
add
sbb
bound
pop
es
sub
stc
aas
pop
insb
xor
enter
test
scas
jae
out
pop
inc
inc
rcll
stc
pop
inc
push
stc
aaa
stc
scas
or
iret
mov
sub
rcll
add
lahf
leave
xor
add
aam
cmp
fisttps
fisubs
std
mov
cmpsl
sbb
pop
stos
pop
lahf
add
and
outsl
nop
cmp
push
les
pop
test
cld
jb
in
dec
sarl
cmp
rclb
cmp
inc
inc
rorb
lods
sbb
cmp
mov
out
rorl
fdivl
and
sbbb
nop
mov
xchg
cmpsl
hlt
pop
push
cmp
loopne
test
jnp
mov
loop
mov
dec
jg
lcall
int3
mov
lcall
inc
dec
mov
divb
xor
stc
stos
pop
stc
incb
and
call
fiadds
test
inc
mov
out
mov
lahf
adc
push
mov
outsl
push
xor
or
push
int
jnp
push
orl
inc
jg
jns
mov
iret
or
das
popf
jb
mov
out
mov
jne
pop
and
mov
int3
and
xchg
push
jmp
shr
and
out
add
js
jo
push
dec
cmc
scas
jno
cmp
xor
jl
sub
mov
loopne
add
cmp
std
dec
in
mov
fsubp
dec
xor
mov
pop
jb
mov
jg
outsl
mov
jae
dec
aad
sub
loopne
push
pop
sbb
inc
adc
xchg
dec
out
mov
and
sbb
aaa
jmp
or
test
es
inc
cmp
imul
lahf
clc
sarb
add
push
xchg
ret
xor
sbb
lahf
inc
lods
pop
fcomps
xchg
jo
aaa
int3
insb
popf
sahf
lods
and
out
repnz
push
jmp
int3
dec
xor
in
inc
pop
fwait
push
dec
scas
lods
mov
fwait
push
cmp
cld
lcall
mov
cmp
sarl
mov
mov
pop
fisubl
movsb
das
pop
in
iret
jecxz
ds
pop
xchg
mov
rcll
mov
fmull
cli
cwtl
mov
inc
out
pop
and
adc
mov
push
lea
lret
inc
cmp
faddl
das
jg
insb
sahf
sarl
xor
icebp
test
pop
dec
xor
dec
dec
out
nop
cmp
icebp
lret
mov
xchg
dec
cmp
movsl
or
test
mov
sub
push
inc
shl
mov
dec
clc
inc
jle
pop
cli
popf
xor
pop
dec
fidivl
inc
subl
xchg
dec
outsb
jno
icebp
jns
pop
mov
dec
jae
sbb
fmuls
pushl
scas
mov
add
aaa
jno
out
adc
mov
sbb
lret
and
dec
mov
enter
cltd
repz
data16
push
in
sbb
ss
je
add
insb
adc
inc
ret
dec
mov
dec
xor
test
mov
mov
sbb
pop
arpl
imul
ljmp
aad
jl
rolb
jae
or
aad
jo
jbe
cld
fwait
inc
sahf
cmpsl
andb
mov
cld
arpl
into
leave
pop
mov
cmp
sbb
call
sbb
data16
mov
loop
and
mov
mov
inc
int
mov
dec
hlt
iret
inc
inc
mov
or
sar
xor
or
insb
jecxz
addr16
int3
sub
push
jbe
sbb
add
push
jmp
xchg
push
jae
mov
xchg
inc
cmp
testb
test
pop
orb
lds
xor
dec
fwait
mov
insl
rcrb
cmpsl
dec
stos
mov
mov
int
and
push
push
xor
xchg
sub
add
xor
sub
cmp
nop
ja
or
mov
imul
shl
fs
push
mov
xor
jae
pop
inc
fisttpl
mov
test
repz
mov
mov
cmp
dec
nop
popf
pop
adc
mov
mov
sahf
out
decl
push
in
inc
push
mov
cmpsb
aam
es
sbb
mov
das
xchg
xchg
ja
das
xlat
push
inc
mov
pushf
scas
ficomps
jne
add
stos
jnp
into
iret
push
pushf
inc
mov
cli
scas
loopne
movsl
mov
jge
push
scas
adc
sub
lcall
or
mov
in
movnti
xor
scas
shlb
adc
cmpsb
adc
outsb
filds
fwait
push
mov
mov
in
insb
fistps
mov
into
jmp
pop
cmp
dec
add
imul
push
rcll
into
int
imul
insb
popf
cmp
dec
aam
bound
icebp
cmp
imull
jp
adc
cltd
in
jnp
inc
or
jp
xchg
lds
or
mov
xchg
dec
sahf
cmpb
in
and
push
mov
add
repnz
cs
pushf
shl
xor
jae
sti
lds
push
jmp
jnp
xchg
xrelease
test
sub
inc
lds
hlt
and
int3
adc
xor
lock
mov
shlb
out
rcll
cmp
xor
dec
aas
push
imulb
pop
loope
les
mov
jae
dec
stos
fs
mov
push
pop
dec
xor
jbe
or
cmp
push
rol
lea
loopne
dec
int
push
movsb
cmp
mov
scas
push
js
cmp
enter
cmpsb
cmp
icebp
cmp
and
adc
test
mov
divb
push
dec
inc
loope
xchg
int3
pop
in
das
leave
cli
outsb
jne
addr16
pop
pusha
dec
cmpsb
adc
xchg
adc
bnd
ficomps
push
mov
popa
pop
adc
or
mov
gs
sub
xchg
hlt
flds
mov
lods
mov
aam
xchg
int
jle
pop
out
js
outsl
std
call
push
cmpsl
sub
mov
ds
int3
cmpsl
mov
jno
cmp
outsl
and
cwtl
adc
jecxz
and
lret
pop
or
cwtl
out
sti
arpl
jo
or
popa
xlat
add
in
test
cmp
inc
jae
test
aas
inc
adc
or
xchg
in
int
mov
cmp
adcb
mov
dec
pop
subb
aaa
into
mov
dec
dec
faddl
scas
scas
lcall
je
test
mov
enter
add
into
in
mov
daa
ljmp
es
and
sbb
fcomps
jl
mov
popa
imul
hlt
jae
fwait
mov
mov
mov
inc
aas
hlt
jl
add
faddl
jne
movsb
adc
icebp
mov
or
pop
es
pop
mov
push
rolb
fistps
push
xor
add
out
xor
xchg
into
and
push
outsb
push
sub
out
int3
xor
cmp
lea
cld
mov
loop
sub
clc
jne
ds
pop
push
icebp
adc
mov
add
dec
pop
inc
out
pop
ja
mov
mov
cmp
clc
stc
or
sahf
aam
jne
add
lods
fbstp
push
mov
or
stc
leave
xchg
popf
add
mov
xchg
repnz
lret
pop
cwtl
leave
mov
adc
pushf
jns
popaw
pop
and
adc
dec
imul
mov
mulb
push
mov
repnz
daa
test
cmpb
hlt
pop
cmpsb
jge
insb
leave
mov
jmp
dec
and
mov
repz
loopne
jb
jns
lock
or
sti
pop
stc
cmp
stos
add
mov
pop
jns
adc
aam
and
int3
leave
add
sbb
push
add
out
int3
mov
aaa
frstor
lods
xor
ljmp
pusha
xor
ss
mov
in
lret
sub
mov
shll
or
notb
xlat
iret
push
mov
xor
aam
pushf
pop
fs
sbb
clc
popf
cmc
pop
mov
inc
mov
push
clc
inc
rcrb
pop
shlb
es
push
adc
xor
aaa
leave
add
imul
adc
clc
jo
cwtl
fstps
push
jmp
inc
sub
mov
xchg
xor
adc
push
jp
shl
or
fadds
cmp
inc
sub
or
sbb
xor
leave
rclb
lret
mov
pushf
rcll
jo
ret
lcall
mov
add
sti
adc
xchg
movsl
sbb
dec
adc
scas
cmp
adc
mov
je
xor
in
push
dec
add
sub
inc
cmp
ja
mov
adc
scas
adc
mov
add
add
sub
adc
xchg
sbb
pusha
xchg
pop
mov
mov
sbb
xchg
inc
sti
inc
gs
ss
mov
xor
push
cmpb
pushf
lcall
sub
inc
ljmp
int3
mov
sbb
sub
ja
subb
mov
sub
js
sahf
lds
mov
jb
in
incb
movsb
movb
pop
dec
sub
mov
and
pop
out
stos
popa
rolb
inc
icebp
shlb
into
imul
ret
jbe
mov
push
and
jg
fdivl
das
pop
jo
outsl
jle
xchg
ss
xchg
test
addr16
dec
sti
mov
jl
pop
sub
xor
dec
pop
mov
sbb
mov
test
aad
das
dec
je,pt
or
fidivs
mov
data16
mov
ja
fs
pop
adc
mov
test
mov
test
orl
lods
sbb
push
repz
push
rclb
cltd
outsb
push
rdpmc
mov
xorl
xchg
sbb
inc
dec
cmpsl
sub
cmc
ja
je
adc
sub
dec
mov
mov
mov
mov
lock
int3
inc
push
jne
fs
cwtl
mov
insb
popf
addb
sbb
out
mov
pop
cmpsl
jle
dec
xchg
fisubrs
imul
mov
dec
cmp
or
or
pop
mov
adc
outsb
mov
pop
fmulp
mov
insb
fbld
in
mov
cmp
movsb
ss
dec
popf
jmp
mov
les
enterw
mov
mov
cmp
xor
fldcw
sbb
popf
mov
xchg
stc
in
addb
jmp
icebp
cmpsb
cmp
je
xor
fnsave
je
aas
in
aas
icebp
pop
or
jmp
mov
gs
fadd
popf
ljmp
fiaddl
ret
and
sub
cld
push
xorb
mov
xchg
inc
fsubs
js
dec
push
aaa
popa
xor
xor
dec
in
dec
js
xchg
xchg
cmp
pop
push
dec
lahf
cld
xchg
mov
imul
mov
push
outsl
ljmp
in
or
add
inc
lahf
adcl
lret
clc
out
jns
xchg
xor
loopne
sub
fnsave
mov
in
dec
mov
or
int
mov
mov
jmp
and
pop
push
or
xor
loopne
aad
into
xor
inc
xchg
add
outsb
aad
add
sub
daa
jns
int3
fistpl
aas
jo
es
mov
popa
adc
mov
inc
or
or
out
dec
mov
cmp
out
out
stos
mov
fmuls
add
cmp
adc
xchg
lret
xchg
sti
xor
push
mov
jae
jp
mov
xor
imul
outsb
jp
movb
push
pop
inc
mov
dec
mov
ljmp
scas
adc
add
cmp
xchg
leave
js
and
adc
mov
pop
jnp
or
shrb
mov
jbe
decl
mov
lahf
sub
aam
shrb
subl
push
mov
mov
pop
bound
shlb
mov
arpl
mov
ret
imul
jle
sub
cmp
loopne
xor
jnp
loopne
pop
sbb
pop
pop
daa
jno
adc
ret
test
ds
xor
push
pop
in
imul
mov
insl
call
jno
lcall
int3
add
mov
cmp
mov
sarb
movsb
jle
mov
pop
mov
sti
add
pop
push
imull
cltd
inc
cmovs
and
bound
inc
sub
xchg
mov
test
sub
imul
xchg
or
and
jbe
adc
mov
popf
mov
pop
xchg
ret
xor
pusha
repnz
push
seta
testb
movsl
sub
xchg
or
or
mov
jno
sub
jge
inc
add
lods
ret
and
ret
sub
or
fstps
das
mov
sbb
loop
clc
ds
imul
xchg
mov
out
loopne
mov
mov
cmp
jecxz
cltd
xchg
stc
fimuls
xchg
daa
stos
push
ret
mov
xorl
jecxz
cmc
jle
arpl
add
icebp
push
mov
dec
negb
xchg
sub
jle
movsl
jno
pop
lea
add
nop
dec
inc
fcmovbe
pop
sarl
mov
ficoml
loop
cmpsb
adc
mov
and
xchg
mov
xchg
in
sahf
mov
int
adc
cmp
bound
inc
movsb
pop
pop
mov
pushf
xor
imul
mov
jge
adc
mov
cli
mov
inc
daa
in
mov
ss
movsb
or
sbb
add
pop
pop
pop
jne
push
aas
pop
cli
out
add
shrb
int3
mov
mov
je
mov
in
pop
mov
insb
int
and
sbb
data16
jne
ljmp
shr
push
mov
sbb
insl
and
add
sti
xchg
sub
push
xchg
notl
mov
cmp
addr16
and
fmuls
dec
pop
bnd
or
aas
orb
jp
stos
and
mov
enter
idivb
push
popa
repz
daa
arpl
or
push
mov
xchg
or
dec
shlb
je
fidivrs
incl
push
test
adc
sti
and
add
popa
dec
bound
jne
div
jns
rcl
push
and
jecxz
pop
cmp
lock
enter
aaa
popf
cltd
bound
sti
movsl
push
popf
jo
stos
jge
dec
push
pusha
push
inc
loope
xlat
or
rcl
sub
jne
and
add
push
lock
or
add
test
arpl
mov
arpl
data16
dec
nop
jb
dec
pop
sub
repz
mov
sarl
loop
mov
popf
adc
stos
jmp
nop
cmc
mov
test
pop
mov
jmp
jbe
movsb
inc
push
rcrl
mov
ja
inc
enter
pop
or
data16
arpl
lds
xchg
pop
adc
aad
jne
shrb
loop
or
adc
sbb
xchg
cmpsl
push
dec
out
sbb
jmp
dec
jecxz
lea
mov
inc
pusha
ja
and
pop
addl
mov
dec
push
push
cmp
mov
aam
jecxz
ljmp
cmp
stos
mov
adcb
divl
lret
inc
cld
cs
push
cmpl
decb
imul
icebp
adc
and
shll
into
sub
or
cmp
fdivl
mov
mov
xor
jl
jne
scas
cltd
push
mov
loope
ret
pop
mov
lret
fwait
mov
ret
lcall
mov
and
lret
and
and
cwtd
out
imul
or
into
ja
das
cmp
je
lahf
out
lods
fistps
jge
lds
cld
lds
fs
sbbl
fists
sti
sbb
push
in
push
pop
into
mov
std
jb
jmp
arpl
mov
sbb
adc
cli
cmp
and
aaa
add
pop
mov
shl
imul
lahf
jle
mov
or
rcll
leave
inc
movsb
pop
add
or
mov
test
sbb
adc
sub
pop
out
cmp
inc
xchg
sbb
leave
daa
pop
push
or
testl
std
mov
add
loop
jmp
mov
xor
cld
fdivs
enter
hlt
mov
aam
loop
cltd
jge
sub
clc
ljmp
fiadds
dec
pop
dec
insl
xchg
mov
mov
icebp
adc
minps
adc
pop
out
jnp
xchg
sbb
stos
pushf
rolb
xchg
jge
inc
pop
mov
xchg
call
add
fwait
shlb
xor
pop
into
out
out
add
fistpll
jae
bound
and
in
pop
int3
sbb
inc
test
aas
mov
dec
xor
adc
jmp
xlat
push
data16
mov
inc
sub
fcoml
loop
cmpsl
divb
outsl
pop
or
jns
mov
push
cmpsb
cmp
loopne
mov
or
mov
mov
sub
rcll
loopne
and
cmpsl
push
push
movsl
ds
sub
enter
mov
inc
ja
in
dec
mov
test
mov
aas
push
lea
scas
adc
call
aas
add
push
dec
das
aas
push
cmpsb
or
stc
xlat
and
dec
les
testb
out
xchg
gs
xor
ljmp
or
xor
ret
or
dec
adc
shrb
dec
mov
inc
add
push
test
das
hlt
cltd
imull
mov
roll
sub
add
cmpsl
scas
adc
jp
sbb
insl
cmp
pop
pusha
enter
popa
arpl
adc
roll
mov
pop
shrl
fists
xchg
sub
in
xchg
mov
pop
or
vsubps
ret
orl
in
incb
or
je
aaa
add
dec
or
fmull
dec
int3
movsl
push
fistps
push
popf
dec
je
outsb
out
jae
add
mov
insb
dec
dec
push
add
push
and
xor
fadds
mov
jbe
adc
jb
cmp
jle
sbb
pop
mov
test
sbb
lahf
push
adc
divb
push
adcl
lods
jle
ret
ja
jmp
fdivrs
sbb
mov
add
sbb
and
xchg
inc
push
out
aam
xor
data16
outsl
inc
inc
xchg
rcrb
mov
cmpl
test
pop
stos
cmp
jb
push
xor
mov
movb
hlt
inc
lcall
xor
push
dec
cli
dec
xadd
loopne
repz
lods
inc
mov
in
movsl
fildll
and
ss
adc
push
push
pop
sbb
sti
inc
in
dec
aas
out
sbb
cmp
sbb
mov
pop
jnp
out
mov
xchg
jb
jmp
sbb
mov
in
mov
pop
mov
mov
add
cltd
cwtl
clc
lcall
add
lds
in
mov
gs
movsl
fwait
enter
mov
inc
cmpsb
decb
leave
aaa
jge
push
test
jnp
pop
mov
ds
iret
cmp
add
fcmovne
mov
cmc
fwait
out
leave
or
test
lcall
xchg
bound
and
loopne
xor
jb
lds
cmp
xchg
dec
into
sbb
lods
cld
xor
out
mov
xor
shlb
mov
mov
movsl
insl
mov
popf
jecxz
fwait
xchg
mov
xchg
push
mov
mov
push
pop
rcr
cltd
mov
cs
and
fsubrl
mov
add
lds
shll
dec
fmulp
mov
nop
jae
lock
xor
lock
mov
negb
push
cmp
cwtl
enter
cmp
and
xchg
insl
dec
jbe
cmc
mov
int
xchg
ret
popa
enter
outsb
out
pushf
aaa
adc
mov
add
sub
fisttpll
lods
in
add
addr16
out
daa
call
adc
popf
int3
mov
sub
loopne
cwtl
mov
mov
cltd
push
jg
xchg
mov
out
int
cmp
pop
lds
rorb
arpl
sbb
inc
and
fs
pop
xchg
sub
fidivl
dec
sub
sub
leave
adc
and
pop
xor
popa
movl
pop
xor
lods
pop
dec
fwait
mov
enter
sbb
les
cmp
xchg
addr16
add
mov
or
mov
inc
lods
xor
inc
cmp
in
outsb
mov
pop
mov
repz
mov
pop
mulb
stc
pop
sbb
and
int
xchg
push
outsb
mov
mov
dec
test
in
push
std
clc
js
imul
leave
sbb
fldcw
mov
and
outsb
xchg
mov
pop
mov
push
xlat
lods
stc
inc
sbb
adcl
xor
lods
aaa
fsubrs
xor
call
inc
mov
dec
mov
ja
in
popf
fmul
pop
dec
push
dec
cmp
pop
cmpxchg
xor
mov
in
jg
dec
aaa
inc
jp
or
mov
pop
xor
jge
jmp
add
sbb
xlat
xchg
pop
or
push
push
adc
bound
jbe
inc
mov
pusha
cmpl
loope
les
push
test
mov
std
ds
icebp
add
sbb
nop
outsb
negb
mov
clc
xor
in
push
mov
sbb
js
sbb
cltd
lea
inc
bound
jecxz
mov
data16
out
aas
xchg
movsl
jno
add
lret
stos
mov
mov
xchg
jae
in
jge
or
aas
lret
inc
mov
mov
bound
cs
in
ficompl
xchg
xchg
shll
cmp
mov
mov
add
xchg
out
addl
mov
data16
test
rorb
mov
and
pop
pop
mov
dec
loopne
xchg
ret
loop
xchg
enter
out
mov
xor
push
jno
inc
cld
mov
sbbl
sbbl
jno
or
ja
mov
cmp
fidivs
mov
or
adc
mov
outsb
adc
xor
pop
jp
scas
jp
jmp
in
nop
lods
push
fnstcw
adc
add
outsl
mov
mov
ret
jl
xchg
and
ds
and
jecxz
addr16
imul
xchg
xlat
and
jns
inc
out
inc
jg
in
add
add
das
and
xchg
mov
add
mov
cmp
add
scas
and
or
push
lock
shll
dec
dec
icebp
cmp
sub
shlb
lods
mov
stos
test
and
int
adc
sub
sahf
xlat
movsl
in
jecxz
jbe
jl
call
dec
out
and
dec
std
insl
jl
or
enter
dec
inc
mov
ret
daa
repnz
and
sub
pushf
jo
call
aaa
dec
xchg
dec
lahf
outsb
cmpsl
xchg
mov
pop
push
dec
lcall
pop
lret
imul
cmp
xchg
xor
ja
xor
mov
lret
lods
mov
insl
add
scas
ret
or
jne
int3
test
adc
je
das
or
popl
xchg
std
push
fsub
xchg
cltd
xor
dec
push
cs
js
add
adc
sub
fildl
sbb
nop
mov
adcb
jg
mov
ret
ja
mov
xor
int3
lods
and
mov
shrb
out
jl
dec
xor
lods
ret
cmp
decl
insl
pop
aas
or
push
lods
or
xor
lret
mov
xchg
sahf
rcrb
rcl
sbb
inc
cmp
pop
inc
out
fs
adc
int3
mov
fbld
shlb
and
and
cmp
cmp
add
push
test
in
pop
cltd
mov
inc
xchg
fwait
sti
shll
pop
popf
fistpll
lds
pop
mov
das
pop
xchg
mov
mov
inc
mov
jge
inc
inc
shlb
sbb
rol
push
popf
dec
add
mov
iret
cmpsl
mov
mov
push
mov
cltd
sahf
aaa
and
hlt
int
test
xchg
cmp
loope
push
xchg
inc
lahf
xor
iret
and
leave
mov
mov
mov
leave
test
lods
push
and
jns
or
ret
or
push
push
aaa
cmp
lods
out
mov
jnp
push
sti
roll
popa
xchg
ja
push
mov
outsl
cmp
inc
dec
into
or
out
push
cs
adc
out
jl
lods
fdivrl
jmp
sub
test
inc
int3
ljmp
addr16
fxsave
lods
lret
pop
mull
test
ret
fidivrs
pusha
xchg
or
mov
roll
or
vmovdqu
xorl
push
in
or
lret
dec
rcl
and
lds
mov
das
imul
stc
lahf
adc
mov
xchg
leave
dec
ret
push
pushf
cmpsb
flds
loopne
mov
sbb
mov
std
aas
jge
iret
lahf
fbld
sub
test
jo
pop
adc
xor
xchg
mov
pop
fcoms
rcll
push
out
fidivrl
adc
sbb
jno
out
fstps
in
inc
popa
inc
in
mov
cmc
imul
sti
ja
xchg
sbb
sahf
cmp
imulb
lods
sbb
nop
xchg
mov
andl
inc
sub
out
pop
insl
or
jnp
cmp
sbb
clc
scas
fstps
in
inc
jno
xor
mov
mov
jo
lahf
push
mov
sub
sub
cmpsl
mov
jle
filds
push
pop
outsl
cltd
and
lret
mov
xor
jmp
out
mov
pop
popf
mov
push
mov
xchg
fimuls
cmp
gs
out
cmp
mov
lods
outsb
sbb
movsl
fidivl
inc
xchg
stos
mov
mov
mov
xchg
jae
cld
dec
push
lahf
pushf
ficoml
imul
rcll
jbe
les
xchg
pop
adc
out
mov
push
mov
scas
das
shr
mov
aam
xor
arpl
pop
push
xor
or
loop
fiaddl
xor
sarl
test
xchg
jne
fldl
lahf
outsb
ljmp
shll
outsb
aas
orb
add
sbb
ljmp
ss
adc
mov
mov
lcall
jmp
cltd
jns
and
pusha
addr16
mov
iret
idivb
or
xchg
mov
dec
movsb
nop
shlb
imul
in
mov
xrelease
mov
and
add
pmullw
out
mov
push
or
sub
lods
dec
mov
shrl
test
leave
xchg
in
pop
jae
arpl
pop
stc
ja
cld
push
dec
mov
lahf
dec
ljmp
fdiv
jo
pand
aam
ljmp
dec
mov
and
in
sbb
outsb
into
push
inc
shlb
inc
sub
movsb
int
insb
sbb
pushf
sbb
fisubrl
ret
ret
push
mov
aas
stos
jmp
mov
xor
add
lods
enter
aaa
subl
popa
or
xor
notb
adc
stos
jle
ret
test
cwtl
sub
mov
in
je
stc
sub
push
push
adc
inc
lret
jecxz
push
pop
rorl
fs
or
dec
das
fdiv
out
pop
mov
fimuls
mov
je,pt
mov
push
or
and
lea
mov
icebp
mov
cmp
adc
loope
repnz
or
cli
cwtl
add
negl
push
xchg
jecxz
outsb
popf
shrb
push
push
mov
cltd
mov
jns
test
sub
test
xchg
push
in
data16
mov
in
stos
jp
pop
dec
imul
out
cmp
or
fs
xor
and
ret
cli
clc
or
inc
jno
outsl
nop
xor
std
mov
out
add
cwtl
outsb
and
sbb
mov
popf
mov
inc
push
xchg
jnp
adc
fs
inc
cltd
cmpsb
push
cmp
or
adc
gs
in
adc
push
xchg
loopne
or
frstor
mov
lahf
xchg
jge
xchg
enter
mov
loop
adc
movb
sub
outsb
or
insl
adc
out
arpl
sub
cmc
pop
or
pusha
push
fmuls
test
insb
mov
sub
pop
jbe
push
pop
jmp
mov
xchg
filds
leave
sbb
xor
ret
out
xchg
cmp
insl
cmc
inc
idivl
push
push
push
movsl
pop
push
ficoml
add
xor
mov
or
movsl
jle
jl
sub
inc
dec
enter
pop
sub
fdivl
int3
push
pop
mov
call
jmp
sbb
mov
fiadds
insl
mov
loopne
movsl
sub
dec
sub
and
mov
test
int
cmpsl
add
xchg
jmp
xlat
sbb
adc
fmull
adcb
push
in
jmp
cmpsb
lock
push
aas
outsb
sub
ficoms
cmc
iret
mov
adc
lcall
xor
pop
sti
scas
and
jp
ret
or
fdivs
inc
jecxz
mov
and
fcomps
cwtl
dec
addr16
rcr
push
mov
orb
mov
xor
call
or
mov
flds
aas
test
andb
push
fcomps
xchg
test
out
add
adc
test
mov
pushf
cmc
dec
xchg
sbbl
cli
mov
xchg
in
xchg
shlb
mov
idivl
xchg
lods
mov
jae
fisubl
jmp
mov
jno
mov
dec
push
enter
aaa
jo
cmp
mov
mov
inc
aam
ds
cli
fidivrl
loope
push
outsb
out
sti
in
cltd
jge
jmp
rolb
aad
mov
lcall
outsl
adcl
in
jns
mov
stc
fcmovu
jo
mov
outsb
popa
mov
sbb
mov
dec
int3
jns
je
out
stc
std
lret
nop
jge
pop
dec
out
xchg
mov
mov
jno
and
and
sub
pusha
xchg
push
jno
loop
push
xchg
or
add
cmp
out
pop
in
or
sbb
scas
pop
stos
mov
jno
gs
mov
rorl
dec
jmp
push
adc
pop
daa
and
cmp
or
adc
mov
jl
lret
dec
lds
mov
sub
cmp
lcall
push
aam
inc
jle
shl
test
jge
pop
jne
push
dec
xor
das
push
pop
ljmp
loop
mov
adc
adc
dec
rorl
daa
add
or
adc
es
inc
mov
or
ds
xchg
adc
imull
stc
lret
jge
cltd
push
std
leave
adc
sbb
into
sbb
fimull
int3
fidivrl
add
fbstp
dec
ljmp
adc
in
cmp
frstor
out
mov
mov
inc
shr
mov
daa
clc
fsts
js
in
sbb
fdivp
xchg
sarb
popl
add
movsl
mov
outsb
push
insb
aaa
fnsave
jg
sahf
cmp
mov
fildl
and
aaa
add
cmp
test
jle
test
fiadds
lods
in
jns
clc
pop
dec
mov
lock
idivb
inc
or
xchg
lods
cmp
rcrl
sahf
cmc
data16
lahf
and
cmpsl
mov
xchg
inc
mov
lret
pusha
jae
jp
cmc
sar
js
sbb
lods
je
xchg
pop
mov
xor
sbb
scas
mov
clc
jp
lret
adc
or
xor
mov
out
sub
cmp
dec
lahf
out
mov
cmpsb
jae
je
mov
ret
jno
sub
icebp
mov
ljmp
lret
mov
push
mov
ret
xchg
xor
jmp
push
xchg
out
inc
push
outsb
add
or
inc
std
decb
or
push
sti
cld
lret
mov
sbb
xlat
and
jnp
jo
mov
das
cwtl
cmp
mov
xchg
mov
shlb
pop
out
mov
lret
mov
jo
cwtl
lahf
mov
jecxz
pusha
sbb
addr16
scas
repz
sub
ret
mov
push
adc
call
cwtl
cmp
inc
or
aas
out
pop
push
int3
orl
test
mov
in
sub
push
enter
mov
inc
pop
out
ljmp
adc
pop
mov
fsubr
icebp
insb
sbb
daa
sub
hlt
nop
mov
aaa
xchg
ss
sbb
jl
mov
inc
gs
mov
push
sahf
test
push
outsl
mov
rcll
mov
lret
imul
xchg
or
pop
sub
rcll
push
into
dec
fdiv
lcall
mov
xchg
mov
neg
insl
dec
movsb
dec
insl
orb
push
pop
push
xchg
or
test
or
data16
push
outsb
test
je
insb
jp
xchg
push
push
push
repz
push
lret
ds
sbb
push
fdivs
sbb
sbb
xchg
int
and
movsb
nop
add
shll
lret
cmc
adc
adc
jne
cmpsb
adc
mov
mov
es
ficoms
fsubrs
xchg
dec
cmp
aam
aad
jmp
sub
adc
xchg
lahf
cwtl
pop
push
repz
cs
mov
jl
cmp
or
aam
int3
and
shlb
fadd
mov
xor
pop
sub
xor
lods
inc
pop
push
inc
rcl
int
popf
call
or
push
insl
call
dec
push
mov
mov
mov
xor
movsb
imul
outsb
popa
push
cwtl
mov
inc
out
lods
cmc
inc
imul
cmp
push
ret
test
test
ja
sbbl
mov
mov
aaa
enter
push
push
leave
push
pop
lods
aad
add
adc
int
out
xor
out
or
jo
cmpsb
scas
jmp
mov
js
jb
adc
pop
sbb
jle
cltd
out
push
cmp
test
lcall
idivb
insl
pop
out
and
lahf
fnsave
jns
cmp
cs
xchg
jl
jnp
jno
sbb
sbb
jge
push
out
sbb
imul
mov
out
fwait
sti
sub
inc
mov
mov
icebp
je
shll
scas
in
add
jns
dec
ljmpw
sub
jp
cmp
sahf
add
icebp
mov
clc
and
test
push
sub
adc
popf
jle
mov
lds
mov
jecxz
addr16
mov
and
inc
xchg
stos
in
ja
ror
xchg
jle
out
inc
outsl
xlat
lahf
xor
pop
out
mov
mov
sti
push
push
add
jnp
lods
test
mov
xor
mov
repnz
mov
dec
sub
pop
sbb
jne
or
lcall
stos
jecxz
je
add
cwtl
out
cmp
pop
dec
cmp
sti
pop
enter
cmpsl
scas
mov
rorl
cltd
pop
xor
jmp
sbb
es
movl
hlt
ljmp
or
test
rol
lds
lds
cmpsb
movsl
dec
or
push
sub
ja
sub
jmp
add
xchg
pusha
jg
push
js
aaa
adc
sub
enter
cli
mov
add
lret
sbb
add
mov
sub
xor
sub
sub
out
mov
arpl
xchg
pop
add
je
inc
sub
fldt
cmp
jmp
cmp
xor
andl
pop
mov
lock
out
sub
fisubrs
and
btr
dec
xor
mov
lea
add
dec
in
cmpsb
stos
or
rcrb
lods
xlat
rcll
xchg
mov
shlb
xor
adcl
cmp
and
ds
add
cwtl
setbe
inc
jge
sub
xchg
rorl
cld
cmpsb
enter
sbb
hlt
gs
or
out
or
or
loopne
xchg
dec
cmp
xor
cmp
lahf
push
lods
or
dec
mov
test
call
stos
adc
xchg
mov
fwait
mov
dec
testb
rcrl
mov
pop
icebp
dec
or
data16
sbb
aad
sarl
jno
pop
adc
sbb
stc
hlt
inc
filds
mov
imul
sub
jno
cli
fisttpll
xchg
out
leave
add
mov
pop
divl
mov
add
pushf
popa
mov
hlt
xlat
xchg
in
pop
test
push
idivb
mov
push
fwait
daa
nop
jo
mov
adc
repz
icebp
test
cmp
mov
js
in
ficoms
rcrb
cltd
movsl
sbb
cmp
test
xchg
inc
mov
mov
pop
negb
mov
repz
pop
mov
xor
adc
cli
out
lods
ja
add
mov
xchg
stos
bound
icebp
mov
dec
adc
mov
hlt
push
mov
jp
cmpsl
inc
mov
mov
insl
call
in
aad
setl
inc
mov
outsb
jb
or
mov
add
int3
push
repz
lahf
dec
pusha
inc
ficoms
adc
sbb
mov
in
shrb
push
or
bound
push
sbb
jbe
loop
pop
jbe
shlb
pop
cs
sub
adc
add
cmp
and
cmp
add
add
and
mov
ror
mov
or
xchg
xchg
subb
mov
in
lock
stos
dec
sub
cmp
pop
cmp
fistl
dec
xchg
pop
int3
pop
pop
jmp
mov
call
addb
test
jbe
je
arpl
ficoms
mov
jle
ret
jo
inc
jmp
movsb
dec
dec
pop
cpuid
fst
push
pop
test
mov
push
mov
push
lret
dec
push
xor
fldenv
xchg
loopne
daa
mov
out
mov
lock
cmp
push
in
xorl
jmp
jg
pushf
stc
outsb
bound
xchg
cmp
xor
gs
sub
out
mov
inc
xor
scas
xchg
stc
daa
movb
add
inc
sahf
cltd
outsb
push
xorl
test
sarb
add
orl
lret
adc
cli
dec
jb
fimull
xchg
sbb
mov
dec
mov
xor
xlat
shlb
and
and
cmpsb
adc
arpl
lret
mov
bound
push
out
push
jns
aas
fprem1
push
or
jb
sbbb
into
lods
add
enter
xchg
cmpsb
xor
iret
xlat
lods
stos
das
mov
dec
adc
cmc
fdivr
gs
shl
aam
xor
out
xchg
adc
loop
sbb
jmp
rcl
and
movsb
sub
popf
cwtl
mov
cmp
les
aaa
mov
mov
addr16
push
push
dec
push
sbb
lret
mov
xor
enter
push
aam
inc
lds
jecxz
mov
stc
jo
ret
push
or
pushf
fcoms
pop
pop
or
push
aam
insl
hlt
or
sub
jno
fdivs
mov
ficomps
int
mov
inc
push
jg
dec
push
inc
adc
shlb
jmp
in
add
inc
iret
stc
dec
mov
pop
inc
push
test
inc
int
ficomps
lahf
add
scas
lock
lret
push
cltd
xchg
leave
dec
insl
or
mov
xlat
adc
int3
popf
cmpsl
cmp
xor
pop
sbb
sub
push
dec
jp
mov
aaa
xchg
pop
dec
or
cmc
dec
cmp
jecxz
nop
pop
inc
pop
aaa
stos
daa
stc
adc
scas
inc
sbb
movq
lcall
scas
push
pop
and
gs
xor
mov
lret
lods
mov
xchg
fstl
push
push
and
lds
lea
test
add
stos
int3
inc
mov
out
xor
loop
sbbb
push
jae
orl
adc
je
leave
xchg
mov
jmp
mov
jne
sbb
dec
xor
fwait
out
cwtl
mov
xor
fistps
hlt
cmp
or
out
and
popa
add
scas
arpl
xchg
popa
rcll
jg
aaa
adc
add
xchg
cmp
insb
sub
mov
fiaddl
push
inc
and
cmp
mov
repz
xchg
xor
pop
scas
fcmovnb
pop
mov
or
lea
sbb
mov
test
jmp
jo
add
imul
mov
jnp
out
cwtl
jmp
cltd
sti
push
push
pop
loop
xor
sbb
scas
jecxz
xor
mov
xchg
dec
sub
inc
inc
loope,pt
xchg
jb
jle
cmp
pop
jle
addr16
clc
pop
rorb
mov
popf
sbb
mov
xchg
mov
pushl
loop
into
mov
divb
mov
dec
or
mov
insl
jbe
push
sbb
nop
adc
repz
mov
add
pop
xor
xor
inc
lods
xchg
mov
loopne
es
pop
out
mov
sbb
les
push
mov
gs
cld
popf
add
movsb
pushf
jle
mov
test
js
lcall
sub
je
xor
lds
push
inc
int
mov
je
or
sub
cmp
xor
stos
test
lock
ret
pop
mov
jmp
jns
jmp
or
pop
xchg
push
inc
aad
lods
pop
xchg
mov
int3
scas
and
mov
adc
and
lock
into
pushf
into
xchg
mov
mov
sahf
pop
xchg
mov
sbb
fldl
imul
jno
ret
add
jge
cli
mov
mov
je
sbb
mov
nop
out
jnp
fiadds
dec
cmp
pop
sarl
sahf
pop
mov
outsl
scas
mov
iret
push
lret
jg
dec
jbe
ja
pusha
mov
jbe
repnz
xchg
stos
xlat
push
mov
cmc
mov
ret
mov
popa
sbb
sub
jge
pushf
jg
fdivl
pop
inc
movsb
lock
sub
mov
inc
sub
icebp
inc
in
aaa
clc
hlt
push
shrl
add
cs
pop
enter
fwait
push
push
inc
iret
pop
ja
movsl
xchg
inc
mov
insb
add
sub
push
xor
jg
popa
mov
addr16
fcompl
loopne
mov
mov
xchg
mov
lods
mov
int3
ds
inc
aaa
or
popa
pusha
add
dec
mov
mov
mov
xchg
pop
xlat
out
jbe
push
add
andb
xchg
mov
arpl
add
push
push
clc
add
les
jl
repnz
mov
jge
sti
cli
and
notl
fcoms
xchg
xchg
dec
clc
push
pop
pop
push
stc
xchg
sbb
lcall
enter
das
dec
das
cmpsl
es
lret
inc
push
jae
fldl
and
or
fsubrs
sub
fsubp
push
push
lahf
ja
sub
xor
cmp
cmp
std
das
mov
cmpl
mov
es
cmc
or
lea
leavew
addr16
cwtl
jmp
pop
lret
xor
mov
jl
jbe
mov
shrl
ljmp
push
cvtps2pi
mov
mov
add
sbb
mov
mov
mov
shll
sarb
and
or
ret
push
leave
adc
inc
adc
adc
mov
or
sbb
cmp
dec
fucomp
ljmp
jmp
scas
loopne
push
cmpsl
xor
imul
dec
dec
adc
mov
mov
sti
out
call
in
stc
push
out
xchg
je
push
fldenv
stc
pop
or
lods
ficompl
dec
adc
jne
adc
xchg
jb
push
es
jle
js
jb
mov
shl
ja
add
inc
mov
sbb
aas
mov
in
mov
popa
and
push
cmc
inc
movsb
in
je
mov
inc
inc
cmpsb
xlat
sbb
loop
cmp
dec
push
add
or
xchg
inc
cmp
cs
jp
xchg
loope
lea
cld
add
pop
mov
out
daa
cmp
stos
je
push
lahf
sbb
cmp
divl
sub
lcall
pop
in
push
push
sbb
cltd
and
inc
xchg
push
ja
jno
xor
inc
inc
pop
push
sarb
ficompl
xchg
xlat
ficomps
std
add
fwait
movsl
addr16
stos
fs
mov
adc
insb
call
push
xor
std
das
jae
gs
mov
or
mov
xchg
lds
xor
push
adc
addr16
out
adc
mov
int
push
cmp
lock
mov
lods
jg
xlat
adc
mov
add
inc
das
add
push
aad
inc
les
out
idivb
xchg
imul
xorb
jbe
enter
fsubr
pop
ds
sti
cmp
mov
fs
shll
push
adc
decl
aaa
sub
sbb
mov
das
in
cld
lahf
and
jmp
jmp
lods
ss
hlt
mov
or
shll
inc
xchg
jne
pop
jnp
fstpt
movb
inc
inc
out
insb
dec
mov
lret
fsubp
lods
arpl
cmc
test
sti
into
leave
fmul
push
jl
dec
pop
and
repz
inc
mov
mov
push
popa
inc
push
push
scas
movsl
stos
int
jg
mov
cmpsl
push
jnp
or
pop
dec
xchg
pop
xchg
add
fdiv
push
mov
sar
scas
loop
lahf
sub
mov
mov
adc
push
adcl
xor
sbb
adc
hlt
andb
mov
subb
add
add
lahf
pop
jo
andl
imul
sahf
jl
sbb
mov
xor
outsb
mov
stos
popf
or
pop
mov
pop
sarl
inc
jb
mov
in
es
inc
adc
jo
lahf
or
adc
cmp
les
sbb
out
push
adc
fwait
popf
in
sub
je
popf
insl
and
in
jmp
inc
xor
lcall
jg
stos
or
xchg
add
lea
push
pop
push
cmp
pop
mov
js
or
push
or
ret
add
jb
les
sbb
shlb
movsb
roll
jns
lahf
lahf
xlat
ret
dec
mov
cmpsb
jmp
or
out
stos
orl
mov
inc
cmpsl
lret
movsl
add
or
out
mov
testl
repz
mov
imul
rcrl
shrl
cmp
push
mov
add
leave
push
rorb
sbb
sarl
outsb
or
cmp
pop
cli
dec
mov
adc
int3
repz
arpl
mov
in
lods
shll
scas
xchg
pop
xchg
xchg
add
loopne
pop
inc
lds
xchg
push
repnz
data16
leave
adc
jns
pop
mov
cs
push
sub
cmovne
pop
pop
push
lahf
int3
xor
fbld
iret
stos
out
addr16
mov
test
sbb
gs
leave
dec
inc
arpl
and
xchg
pop
cmpsl
lods
lahf
popa
adc
xor
xor
sbb
push
ret
enter
fs
pop
aam
adc
hlt
xor
dec
and
or
andb
iret
ljmp
ss
xchg
push
jge
pop
inc
in
add
std
add
repz
jbe
dec
dec
sub
jne
inc
ss
mov
nop
pusha
xor
add
pop
pop
mov
push
cmp
mov
inc
jge
sub
jne
fidivl
and
repz
xchg
xor
call
dec
jecxz
mov
mov
sbb
in
lcall
lods
or
pop
mov
std
inc
mov
mov
xchg
sub
jnp
addr16
movsb
or
inc
jmp
cmp
xchg
xacquire
lods
jmp
insl
lea
fs
bnd
inc
lods
or
cmp
pusha
cli
addr16
iret
pop
xorl
push
inc
dec
mov
xchg
iret
mov
inc
push
loope
xchg
mov
jae
jmp
mov
jno
adc
mov
cmpsl
push
in
or
push
sbb
or
push
inc
pushl
lock
movsb
cmp
movsb
mov
jmp
dec
iret
cmpsl
inc
shrl
fs
xchg
das
clc
mov
into
cmp
div
jecxz
mov
or
das
jns
fdivrs
add
scas
fidivrl
pusha
scas
std
fbstp
es
jae
pushf
sbb
in
xchg
sub
or
mov
outsb
pushf
cmp
stc
mull
jae
push
ror
pusha
loope
in
outsb
movsb
inc
pushf
xchg
dec
leave
and
jno
shlb
insb
inc
dec
dec
dec
dec
je
pop
xchg
jecxz
cmp
cli
jecxz
loop
adc
cs
iret
xchg
push
pop
dec
out
push
xchg
dec
adc
xchg
cmp
clc
adc
or
repnz
push
jmp
fildl
adc
mov
mov
shr
mov
xor
sub
sbb
and
or
cmp
scas
fcom
aaa
das
add
xor
nop
dec
int3
jl
and
mov
pop
ss
pop
orl
jo
cmp
outsb
shll
jp
sub
or
mov
outsb
xchg
aaa
mov
sub
test
shrl
imull
adc
outsb
mov
fwait
push
mov
jg
pop
jne
ret
push
lock
movsb
daa
add
pop
xor
pusha
fucomp
or
add
in
xchg
icebp
popf
mov
mov
bound
stc
push
dec
jle
dec
sub
xor
mov
dec
xor
xchg
aad
mov
out
xor
sub
xchg
lret
pop
loop
dec
push
pop
sub
out
cmp
into
jmp
mov
sbbb
inc
loopne
xchg
into
decb
decl
adc
dec
adcl
sub
inc
shl
ret
shll
mov
movhps
sbb
dec
xor
clc
xchg
fsubr
loop
jg
dec
jge
mov
repz
test
and
and
dec
repnz
cmp
sahf
sti
push
dec
mov
loopne
cmp
dec
push
xchg
ds
xchg
sub
mov
xor
mov
pop
xchg
mov
cli
pop
jge
xor
dec
in
push
sbb
sub
dec
sarl
sbb
mov
mull
aaa
loop
xchg
cwtl
insl
es
jl
lret
cwtl
jmp
or
mov
pop
cmp
int3
sbb
push
push
lahf
out
add
scas
ret
add
pop
test
inc
iret
test
xchg
and
mov
xor
mov
xor
fisubrl
in
sbb
inc
shll
shlb
out
jns
mulb
lods
mov
sbb
loopne
rcr
dec
leave
fs
adc
mov
cmp
sbb
fistl
xchg
inc
pop
cmp
test
and
mov
std
enter
sbb
insl
jbe
fs
nop
gs
sbb
xchg
vpaddusw
inc
ljmp
or
ja
mov
mov
inc
shlb
mov
mov
cmp
or
mov
ja
scas
jae
dec
mov
mov
aaa
lock
adc
test
movl
aam
jns
repnz
or
inc
mov
push
in
mov
jnp
cltd
out
pusha
js
aad
loop
std
test
push
add
test
sahf
add
ja
mov
push
scas
or
inc
insl
loope
mov
inc
add
outsb
ret
int3
mov
les
sub
repnz
sbb
mov
jmp
daa
cmp
push
add
test
mov
sbb
cmp
and
xor
mov
adc
sahf
scas
fsubp
cmp
aam
inc
sbb
cmpsb
pop
pop
adc
xor
pusha
loopne
leave
lret
jbe
dec
ret
mov
mov
lahf
xchg
aam
pusha
lahf
pop
mov
cmpsl
jge
aam
inc
and
in
jo
loope
rorl
mov
or
testl
adc
cmp
ret
adc
add
xchg
movsl
add
sbb
cwtl
cmp
adc
lds
imul
int
mov
adc
xchg
lcall
es
iret
xchg
cld
lods
xlat
lods
outsb
cmp
stos
ret
dec
sub
inc
addr16
into
mov
jge,pt
or
out
add
sub
sbb
xor
add
mov
pop
jge
mov
dec
shll
loop
add
sub
movsl
into
das
insl
cltd
cmpsl
ds
frstor
mov
int
xor
jb
clc
mov
pop
xlat
and
dec
adc
call
rclb
mov
cmpsb
ja
and
adc
nop
out
cmc
jae
fcomip
push
xchg
cwtl
mov
dec
adc
xchg
das
or
fistl
jns
fsubs
push
cmp
jl
popf
inc
mov
jb
js
cmp
mov
into
inc
call
xor
mov
adc
sbb
push
push
lahf
adcb
mov
mov
cmp
dec
xchg
test
sub
pop
sub
aaa
cmp
repz
out
inc
lret
add
xor
cltd
dec
aam
leave
stos
push
fldl
inc
lods
add
stos
and
mov
xchg
add
jle
int
test
inc
bound
mov
dec
sti
jp
mov
mov
push
dec
jp
xchg
mov
pushf
cltd
repz
push
arpl
dec
aad
add
cmovs
mov
sub
mov
push
jno
int
scas
in
loopne
jne
pop
or
mov
inc
in
cli
dec
cmp
sti
pop
pop
xor
inc
aaa
out
inc
lret
cld
cmpxchg
mov
or
out
out
pop
stos
repz
lock
add
mov
je
or
and
inc
pop
jae
pop
in
sahf
in
xor
push
test
mov
int
jge
pusha
jl
out
push
insl
jp
fwait
cltd
pushf
ret
dec
push
dec
jecxz
orl
lcall
cmp
clc
cmp
movsb
stos
push
and
push
rcll
mov
shlb
mov
mov
and
in
xchg
mov
xor
sub
stos
sahf
pop
loopne
jns
jmp
idivl
inc
cwtl
jns
shlb
test
push
scas
cmpb
pop
icebp
lods
gs
sub
mov
adcb
lcall
testb
mov
int
ss
jne
sub
sub
and
leave
dec
stc
in
std
test
loop
xchg
push
jae
sbb
cmp
out
mov
int3
mov
sbb
fcomp
mov
inc
dec
mov
mov
or
iret
xor
mov
lods
pop
jns
xchg
inc
add
xchg
dec
andb
jne
fld
lret
mov
in
fwait
ja
cs
mov
dec
insl
bound
and
lea
mov
ja
sbb
daa
cmp
sarl
adc
pop
inc
pop
push
cwtl
pushf
lods
sbb
aad
movsb
scas
fisubs
faddl
bound
in
sbb
imul
xchg
fcoms
add
cmp
push
push
sbb
dec
lods
and
mov
out
loope
rorl
or
xchg
xchg
cli
sbb
adc
insb
mov
mov
jnp
cwtl
inc
pop
xor
and
fsts
ret
out
xlat
or
imul
mov
rol
mov
mov
pop
sub
mov
xchg
dec
push
cmp
dec
rclb
lahf
ljmp
mov
add
jnp
mov
ds
pop
rol
rclb
inc
cmpsb
hlt
push
mov
je
loope
pop
ficoml
fs
mov
loop
dec
push
xchg
mov
push
pop
jnp
icebp
jns
xor
mov
pop
and
push
ficoms
push
pushf
cli
jno
ss
jmp
neg
aas
into
fwait
xor
int
daa
push
sarl
inc
mov
pop
and
das
inc
data16
pop
or
ds
out
test
sub
out
add
nop
cmova
hlt
aad
sub
cli
lcall
jns
and
call
or
adcb
xor
int3
orl
xor
cmpsl
sub
jp
cwtl
andl
enter
mov
xor
jmp
lock
xor
sbb
addb
mov
daa
scas
and
xor
stos
fidivrl
imul
in
in
inc
push
jmp
adc
sbb
movsb
jne
test
pop
inc
into
repz
or
je
xchg
loop
inc
jno
lcall
mov
sbb
dec
inc
dec
stc
mov
out
lret
mov
jecxz
in
pusha
cmp
daa
sub
subl
loope
adc
jne
cmp
xlat
push
dec
xchg
popa
pop
popf
shr
rcr
jnp
xchg
outsb
dec
xadd
inc
data16
popf
push
sub
sbb
iret
jns
cmp
cmc
icebp
lcall
xlat
mov
mov
mov
pop
push
pop
inc
lods
mov
lock
out
pop
xlat
xchg
dec
push
in
and
cmp
inc
das
fwait
jl
or
sbb
in
lret
faddl
fnstsw
gs
jbe
mov
aas
movsb
nop
gs
add
add
pop
xor
leave
outsl
loop
dec
adc
jecxz
je
adc
mov
outsl
shlb
xor
hlt
xor
testb
mov
mov
aaa
into
sub
addb
xor
mov
push
xchg
and
pop
pop
jnp
lret
repz
dec
mov
pop
andb
adc
xchg
mov
ret
pop
out
ss
cmp
mov
les
fisubrl
jnp
rorl
movsb
js
loopne
insb
enter
dec
add
cmpl
cmp
jecxz
mov
or
adc
push
push
clc
jmp
loope
mov
aaa
push
inc
adc
xchg
push
pop
movb
aad
add
in
sbb
adc
inc
ret
insb
or
adc
adc
insl
aas
mov
fdivl
xchg
hlt
out
jl
push
pop
test
xchg
or
andb
pop
repnz
xchg
lahf
fsts
mov
lret
add
dec
negl
aad
xchg
mov
xorl
and
push
repz
jno
call
sti
gs
add
mov
mov
out
rcll
adc
icebp
in
lods
pushf
or
xchg
pop
xchg
adc
xchg
cmp
test
in
mov
mov
adc
xchg
je
adc
mov
mov
push
and
rcll
int
jae
popf
pop
xchg
xor
enter
push
push
subb
in
mov
pop
cwtl
add
or
lods
call
loope
push
clc
rcr
and
lcall
popa
dec
mov
xlat
dec
shl
dec
xchg
hlt
adc
sub
mov
sbb
stos
pop
add
addr16
add
jle
insb
das
std
mov
pushl
xchg
mov
loopne
xchg
or
outsl
ds
decl
mov
aam
add
inc
fs
outsl
int3
imul
mov
cli
jle
sbb
inc
mov
dec
je
aad
mov
sub
cmp
cmp
mov
int
cmpl
repnz
dec
push
call
ss
jb
pop
fisubs
or
sub
into
jmp
rorl
push
adc
adc
xchg
jb
pop
inc
gs
cmp
mov
push
jge
sti
test
xchg
jecxz
inc
faddp
add
add
push
movsl
xor
mov
std
push
or
push
rol
cmp
mov
pop
shlb
int3
dec
xor
shrl
test
mov
jns
mov
ss
mov
push
outsb
aaa
pop
cli
repnz
fxch
xor
xor
jl
jmp
cmp
or
cmp
xor
hlt
lds
push
dec
jecxz
mov
aas
dec
push
jge
pop
stos
pushf
mov
repz
lock
inc
cmp
lret
leave
aad
cwtl
inc
fimull
repz
cmc
mov
sub
cmp
cld
sub
into
sub
jno
mov
sahf
jo
stc
adc
test
and
scas
pop
jle
dec
pop
lock
shll
push
ss
js
add
rorl
hlt
and
or
jp
ljmp
js
out
sbb
mov
push
cmp
push
ljmp
mov
xchg
int3
mov
scas
popa
jecxz
push
sbb
cmp
adc
sbb
sbb
aas
pushf
fdivrp
jmp
push
int
adc
and
inc
movsb
out
mov
jg
notb
std
dec
nop
mov
lods
ret
sbb
in
shll
out
mov
adc
mov
enter
xor
cmpsl
lahf
pop
clc
dec
sub
sub
stos
fs
fs
xchg
add
add
jo
mov
sub
mov
mov
int
fsubl
push
sub
gs
or
repz
or
js
or
xor
int
jl
loopne
mov
mov
cmpsl
dec
mov
xor
js
dec
or
cmpsl
mov
or
push
je
adc
loopne
xchg
xchg
sahf
dec
cmp
test
test
push
mov
jb
mov
out
imul
cmp
in
cmpsb
pop
xor
fsubs
cs
mov
mov
inc
push
pop
dec
stos
jecxz
in
pop
popf
pop
sarb
mov
mov
xchg
imul
push
lock
dec
loopne
lds
jmp
xor
cmp
std
int
movsl
test
imul
shl
loope
stc
sbb
ljmp
dec
inc
lea
test
and
dec
in
or
inc
xchg
out
jecxz
shlb
sar
push
pop
cmc
dec
clc
cmp
xchg
add
gs
cs
stos
sub
sub
fisttpl
gs
imul
shll
sarb
fdivrs
mov
dec
inc
shll
mov
mov
clc
nop
lcall
insb
adc
push
adc
negl
mov
testb
or
daa
movsl
leave
adc
or
xchg
xchg
adc
mov
mov
inc
jecxz
iret
adc
cmp
movsl
scas
scas
popa
xchg
je
paddusw
sbb
lahf
mov
jp
mov
mov
dec
mov
pop
ljmp
jge
std
loopne
xlat
or
mov
sti
rolb
cmp
cltd
test
stos
imul
leave
and
mov
mov
loopne
add
jmp
xlat
xchg
jne
inc
call
lahf
hlt
stos
add
mov
sbbl
sub
adc
mov
xchg
movsb
cmp
dec
pop
xor
ds
call
call
mov
sbb
xor
loope
cli
repz
ds
dec
enter
testb
iret
xchg
or
mov
inc
pop
dec
in
or
inc
cmp
adc
inc
dec
stos
jb
incl
les
xor
lea
imul
pop
fucomip
push
dec
adc
sub
push
mov
test
arpl
cli
daa
loop
lods
cmc
cmc
sub
repz
push
push
pusha
push
mov
sub
or
sub
mov
xor
and
mov
in
push
outsl
cld
xlat
ficompl
pop
or
mov
pop
out
ja
mov
cmp
in
outsl
imul
inc
ja
scas
add
lods
jmp
mov
sbb
or
mov
adc
int
sbb
xor
aaa
jle
push
add
call
xchg
jae
push
stc
mov
adc
movsl
fstpl
inc
add
in
je
aam
cli
or
aaa
mov
fisubrl
or
std
rorb
inc
jl
and
lock
in
inc
adc
push
and
and
jnp
push
arpl
ljmp
lret
mov
stc
push
or
in
mov
sbb
mov
popf
jmp
sub
ljmp
ret
jnp
sbb
in
ds
mov
fmuls
add
jle
pop
xlat
cmp
cltd
loope
xchg
xor
rcr
add
push
mov
add
mov
mov
mov
insb
push
sahf
jmp
push
outsb
jg
pop
lahf
pushf
cs
jns
or
dec
test
cmp
push
insb
out
call
dec
add
lods
roll
icebp
cmp
mov
jb
mov
shl
imul
stos
sbb
pop
fdivr
cmp
and
inc
jmp
mov
arpl
mov
call
insb
pop
test
and
clc
xchg
xorb
pop
push
pop
in
push
push
test
cld
das
mov
cmp
adc
ljmp
mov
pop
or
lea
out
inc
out
mov
gs
pop
iret
adc
add
in
adc
mov
inc
lret
cmp
rclb
jmp
test
imul
dec
and
or
dec
dec
jae
enter
pop
sub
orl
lret
frstor
cmp
dec
inc
or
in
cmp
mov
xchg
in
mov
sub
dec
xor
or
icebp
mov
pop
push
xchg
insl
pop
leave
mov
push
enter
inc
sarb
sbb
cltd
xor
mov
add
xchg
es
ret
and
add
sbb
cmp
sbb
imul
lcall
std
scas
xor
notl
mov
loopne
in
add
push
into
daa
adc
cmc
mov
cld
sbb
movsl
inc
pop
ficompl
jecxz
shr
jnp
jecxz
jg
ja
lock
jae
sbb
sti
aam
lea
push
sbb
jbe
mov
xor
pop
and
push
xor
mov
push
fstl
jmp
andb
pop
pop
arpl
aam
xchg
lahf
test
imul
jno
inc
inc
in
scas
mov
adc
cmp
pop
add
and
mov
xlat
ret
sbb
fs
js
dec
and
mov
adc
push
rcrl
cmp
and
test
shrb
lock
cwtl
call
cmc
repz
adc
adc
push
cmp
out
data16
cmp
sub
fwait
xchg
fldenv
scas
push
lds
out
loope
icebp
pop
js
xorl
scas
adc
int3
xchg
subl
xchg
push
xor
fbld
andb
sahf
mov
mov
rorl
fsubrs
lods
xchg
nop
mov
dec
cmp
pop
pop
stos
adcl
and
pop
inc
fldcw
cmp
xchg
jmp
or
mov
scas
das
cmp
jle
jl
cmp
addr16
cmpsb
sbb
sub
out
adc
scas
jo
or
fs
into
mov
jb
mov
add
push
jne
rcrl
xor
jmp
jae
push
movsb
push
mov
xchg
adcb
data16
icebp
bound
jp
jnp
cmp
mov
ja
jb
push
sub
inc
xchg
pusha
in
inc
add
lea
inc
mov
bound
inc
push
dec
xchg
pop
vorpd
jecxz
adc
jmp
fidivrs
pop
sbb
and
xchg
mov
pop
cld
sbb
loope
xor
ljmp
out
cmp
stos
test
sub
sbb
sarb
es
adc
xchg
jae
mov
in
js
lods
and
js
mov
push
into
rorb
cmp
inc
jg
mov
adc
out
or
adc
mov
icebp
push
into
sub
dec
addr16
add
xchg
test
mov
inc
in
ds
push
sub
out
push
dec
mov
stos
js
data16
mov
js
cmp
rolb
xchg
adc
insb
add
movsb
fsubrs
add
jl
lcall
jge
mov
mov
sbb
and
sbb
xchg
data16
cmpsb
jns
aam
rorb
scas
xlat
dec
xchg
pop
jae
mov
ljmp
inc
mov
movsb
cmp
mov
push
repnz
jns
mov
xchg
pop
dec
pushf
cld
inc
imul
add
test
jle
test
stos
sahf
pop
out
nop
jmp
pop
cmp
jne
cli
das
push
in
jae
jp
sar
shl
inc
mov
jl
scas
movsb
cld
frstor
cmc
cld
inc
pop
inc
aad
mov
rorb
fwait
cmp
mov
push
pushf
aad
cmp
iret
imul
ljmp
push
fdiv
outsl
pop
pop
fs
aas
jp
jns
cmc
push
xor
frstor
or
cs
in
mov
inc
sarl
or
std
push
and
out
mov
jno
and
das
scas
pop
fwait
mov
xchg
movsl
ret
outsl
jp
cmp
lahf
setg
adc
mov
movsb
cmc
adc
dec
sub
and
jne
subb
ficompl
push
cwtl
pop
add
outsl
test
hlt
scas
xchg
mov
imul
push
jle
mov
rolb
loope
popf
and
loope
dec
mov
cwtl
push
jns
test
mov
leave
fs
sub
popf
push
adc
sub
and
inc
pop
sbb
mov
hlt
addr16
leave
mov
push
divb
out
bswap
es
and
mov
repnz
or
push
icebp
ljmp
sahf
mov
es
cmp
pop
sub
addr16
rorb
mov
cmpsl
pop
icebp
nop
sbb
mov
cli
test
and
test
mov
hlt
mov
js
les
inc
in
shlb
aaa
or
cmp
out
add
lret
in
call
out
push
int
loopne
sbb
out
mov
not
adc
or
cmp
mov
add
pop
add
jno
in
outsl
rorb
in
dec
mov
adc
inc
mov
rclb
repz
jne
int
push
popa
xchg
fistpl
sub
cmp
testl
cmp
aas
aas
gs
aas
fs
lahf
fmul
imul
or
xchg
das
dec
pop
fsubp
int3
insb
jmp
cwtl
test
aaa
push
xchg
arpl
push
cmp
cli
xchg
push
idiv
jns
cmp
test
and
pop
inc
xchg
call
and
add
cmp
or
add
test
rclb
xchg
pop
roll
das
test
insl
cwtl
sbb
fildll
ret
sbb
test
iret
inc
sbb
adc
ret
je
lcall
cmc
loope
in
lock
shlb
xchg
xchg
fdivrl
lods
jae
xor
lock
push
push
in
mov
rcll
rolb
mov
rcl
pop
repz
pop
test
shll
andb
lcall
push
data16
repz
add
dec
xchg
ficoml
add
int3
inc
mov
test
cmp
sahf
mov
aaa
push
push
push
stos
lahf
pop
lods
pop
pop
pop
pop
fidivl
bound
cmp
rcr
leave
repz
pop
add
xchg
pop
cmpb
xchg
push
ret
test
hlt
cld
mov
pop
jle
pop
jb
movsb
test
inc
push
out
and
jne
arpl
insb
insb
int
loope
inc
iret
mov
pop
add
xor
rorb
xchg
mov
bound
inc
lcall
test
push
fld
bound
dec
ds
xchg
cmpsl
adc
in
movsl
jno
cwtl
lret
bound
push
nop
cmpsl
js
mov
or
stos
push
mov
sub
leave
insb
or
out
out
sub
xchg
jle
jb
xor
adc
insl
inc
in
bound
aad
into
in
jne
ffree
mov
push
ljmp
dec
fdivrl
movl
xor
stc
adcb
and
testb
adc
sbb
inc
push
in
pop
xorl
pop
mov
jns
and
data16
repnz
lcall
mov
imul
call
subl
dec
dec
mov
pop
dec
sbb
insb
shlb
push
pushf
hlt
out
loope
cmp
jnp
jmp
inc
gs
mov
sbb
sub
push
in
cmp
and
int3
push
fwait
imul
out
lods
les
xor
dec
xor
pop
jns
out
aas
inc
sub
sbb
outsl
rcrl
xchg
cmpsb
cmp
cs
xor
hlt
push
xchg
adc
sbb
push
ret
jmp
xchg
repnz
std
inc
out
insb
push
mov
and
xor
xor
adc
inc
ds
pop
fsubr
arpl
mov
scas
jo,pn
into
pop
mov
adc
pop
rorb
sti
pop
rolb
mov
popf
jns
push
push
jg
xchg
xchg
push
jnp
ljmp
stos
ss
jne
pop
sti
mov
xchg
out
push
sbb
lds
sub
dec
sarl
fiaddl
or
sbb
sub
test
and
or
mov
mov
lcall
imul
fidivs
sub
push
sub
jno
js
or
test
xchg
cmp
xlat
pop
mov
adc
sbb
das
mov
imul
sbb
std
inc
pop
daa
faddl
int3
icebp
incl
xchg
out
imul
cmp
jmp
mov
gs
repz
sub
ffree
sub
xlat
cmc
cmp
sub
aam
sbb
es
pop
cld
fdivrl
stos
xchg
inc
or
daa
mov
add
aas
call
and
inc
mov
clc
sbb
addr16
jo
mov
imul
mov
hlt
mov
mov
xlat
fldt
fcoms
inc
fcoml
inc
sarl
sbb
pop
loopne
sbbl
push
or
lcall
jb
loope
mov
ret
pop
lods
call
add
pop
mov
test
popa
mov
in
jmp
xchg
dec
sti
push
ds
fucomip
add
cmpsl
movsl
pop
mov
pop
js
ds
mov
leave
movsb
mov
es
aas
xchg
in
sbb
insl
sub
dec
and
ffreep
and
inc
imul
aam
adcl
mov
adc
js
inc
fnsave
sbb
sub
pop
pop
mov
aam
mov
or
aad
mov
sbb
jge
testb
test
sarl
out
mov
arpl
push
faddp
inc
lds
and
fimull
test
cli
es
out
ja
push
push
and
and
or
shll
mov
xchg
mov
mov
jns
xor
xor
lods
bound
data16
repnz
jb
jp
add
pop
push
lock
outsl
icebp
scas
inc
ds
xchg
in
movsl
test
loope
mov
neg
inc
dec
mov
dec
cmp
dec
lahf
mov
in
cmp
push
rclb
cmpsl
dec
insl
mov
repnz
add
or
sbbl
test
sub
fistpll
cmp
sbb
paddusw
dec
scas
mulb
mov
add
pop
pop
jl
mov
sbb
mov
add
xchg
jno
ret
inc
mov
sbb
out
mov
xchg
dec
cmp
loope
int3
rclb
rclb
filds
rclb
pop
stc
jmp
sbb
std
incb
sbb
cmpsl
stos
xor
xor
add
push
js
in
jecxz
iret
jo
lret
sub
lcall
push
and
sub
add
push
inc
add
int3
mov
xor
cld
fcomps
and
movsl
daa
imul
rcl
insb
in
cmp
andb
insb
lahf
insb
fwait
aas
jno
sub
dec
das
cmpb
sbb
push
stos
shll
scas
cmp
cmp
push
fdivrs
and
pusha
mov
bound
xor
fwait
mov
mov
mov
pop
shl
ja
xor
sub
ljmp
jecxz
dec
ja
addr16
mov
inc
or
rorb
out
idiv
repnz
mov
inc
hlt
outsl
dec
inc
shll
dec
scas
xorl
mov
sub
mov
pop
jae
loopne
das
lret
jbe
lock
pusha
iret
in
xor
iret
jle
or
stc
adc
push
pop
fstpl
faddl
iret
insb
mov
push
jb
lret
or
insl
icebp
xor
out
fcomps
and
jge
sbb
out
sub
outsl
popa
xchg
out
out
sbb
jge
sahf
inc
xor
mov
out
in
aaa
adc
push
cmc
push
xchg
push
cmp
sbb
sahf
jle
mov
pxor
sbb
adc
imul
and
cli
xchg
negb
inc
lods
mov
jle
pop
aaa
xor
xor
and
push
dec
scas
adc
testl
das
shlb
add
jl
into
mov
inc
not
xor
sub
enter
daa
pop
gs
mov
test
mov
int
inc
mov
sbb
std
into
pop
stos
fistps
out
xchg
sbb
inc
inc
js
xchg
jae
or
lahf
push
inc
ret
insl
lret
mov
pop
pop
mov
decb
loope
bound
into
mov
xchg
jecxz
cmp
mov
aaa
cmp
mov
mov
shl
pop
add
jbe
iret
fld
les
dec
loop
and
push
pop
lds
sub
hlt
jge
jg
fldcw
pop
and
mov
jmp
rclb
push
mov
and
test
jmp
add
sbb
sarl
add
mov
mov
clc
xor
push
ds
xchg
mov
jo
mov
dec
das
or
aad
push
test
idivb
and
adc
sbb
les
pop
and
add
fdivl
cmp
sbb
iret
push
sahf
sti
pop
je
pop
adc
leave
adc
dec
jns
inc
lahf
int3
clc
out
mov
outsb
cmpsl
test
inc
and
cmp
mov
and
adc
cmp
mov
sub
xor
repz
sub
xchg
jbe
les
std
rorl
xchg
imul
nop
inc
add
dec
mov
xchg
mov
or
dec
pop
or
out
jmp
data16
pop
push
pop
aaa
shrl
inc
jns
xchg
cs
sahf
sbb
les
mov
stos
sub
test
dec
and
test
nop
xlat
xchg
daa
mov
jae
pop
inc
jmp
cmp
jle
sbb
cmp
sti
hlt
push
mov
fmuls
jns
push
das
xchg
xor
loop
div
sbb
jg
cmp
imul
cltd
cmc
sub
jno
lods
mov
lahf
dec
push
push
inc
mov
jne
add
fists
sarl
loop
mov
cli
insl
cmpsl
je
jmp
xchg
cli
das
inc
mov
and
pop
mov
push
ds
fwait
pop
repnz
push
jne
or
test
cld
inc
imul
and
test
dec
push
cmc
aad
xchg
push
call
xor
dec
mov
dec
pop
mov
shlb
mov
mov
int
hlt
dec
aaa
dec
fs
inc
inc
popf
repnz
std
dec
fwait
mov
in
push
pop
cmpsl
in
push
xor
daa
cmc
lcall
jno
fimull
xchg
xchg
xchg
leave
mov
shrl
insl
xchg
out
jecxz
arpl
mov
adc
pop
imul
cmp
and
fstpt
sub
outsl
lcall
push
or
or
jo
dec
mov
xchg
xor
in
pop
and
xchg
rclb
pop
xchg
add
mov
xchg
mov
pop
out
int
jmp
fwait
sbb
movsb
pop
push
xchg
inc
mov
iret
sub
mov
jns
sbb
stos
je
int
shll
adc
fldl
je
sbbl
jl
out
jmp
hlt
in
cmp
pop
lret
out
adc
adc
cmp
lods
and
cmpsb
arpl
stos
rcll
adc
jg
xor
jne
push
add
push
fs
scas
cmpsb
push
and
push
mov
dec
jns
mov
and
cs
push
jns
mov
mov
mov
push
xchg
enter
or
aaa
add
repz
jmp
mov
repnz
adc
mov
xor
addr16
push
loope
push
lea
out
inc
test
mov
mov
mov
add
cmp
cwtl
shrl
push
jns
adc
jmp
inc
inc
cmc
lock
jmp
xchg
and
cmp
jnp
and
subb
lahf
xchg
xor
mov
fidivl
lret
es
sub
loopne
push
lods
cli
ja
imul
push
lock
clc
push
loopne
jecxz
or
inc
movsl
adc
mov
mov
mov
and
mov
and
outsb
jp
mov
cmp
dec
mov
daa
mov
loope
pop
mov
lock
fsubl
clc
cmp
test
loope
fbld
outsl
pop
fsubrs
xlat
jno
cmp
fistpll
xor
movsb
sti
jle
or
imul
dec
inc
es
insb
sarl
push
iret
sbb
mov
imul
mov
pop
adc
flds
shrl
push
iret
xor
and
outsb
adc
fadds
inc
inc
fcoml
xchg
lahf
stos
sub
negl
and
push
mov
je
inc
mov
in
lds
jno
dec
inc
rorb
push
mov
mov
mov
inc
or
loop
dec
ret
mov
xlat
pop
xor
mov
push
mov
push
les
call
dec
dec
and
pop
adc
adc
push
movsl
jge
mov
or
mov
negb
je
mov
rcrb
leave
dec
movsl
je
cmp
das
movsl
pop
orl
sbb
fwait
loope
pop
pop
or
icebp
lret
pusha
xchg
mov
xchg
pop
add
inc
scas
aas
dec
faddl
push
int3
or
cmp
xor
lahf
lret
dec
test
sub
xchg
or
insl
pop
sub
inc
stc
and
and
mov
jmp
xchg
push
fs
or
cs
xlat
pop
dec
inc
and
loope
aas
or
mov
dec
scas
out
pop
push
xchg
pop
stc
mov
mov
pop
stc
lods
mov
aas
xchg
jmp
shlb
or
pop
movsl
cmp
xchg
mov
cmpsb
outsl
jnp
test
mov
loop
popa
cmpb
cwtl
aam
mov
sbb
and
hlt
mov
out
jge
clc
pusha
mov
mov
mov
pusha
lea
add
bound
mov
loop
inc
inc
out
repnz
out
aas
mov
lcall
into
jg
stos
xor
imul
aaa
pop
in
xor
jae
lret
pushf
out
pop
clc
mov
inc
cmc
dec
es
dec
add
unpcklps
mov
cld
pusha
je
leave
xchg
mov
stc
or
es
das
jns
dec
scas
push
xchg
xor
dec
cmpsb
inc
xchg
push
inc
and
cmp
push
dec
enterw
sti
daa
or
pop
pop
icebp
cmp
movsb
sahf
adcb
arpl
daa
clc
push
inc
mov
stos
jmp
loop
orb
xor
out
or
jecxz
dec
shrl
getsec
aam
repz
cmp
jp
adcl
push
push
lret
adc
scas
std
cmp
xlat
sub
out
in
pushf
arpl
mov
dec
mov
pushf
ficomps
push
mov
call
jmp
xchg
test
outsl
cmpsl
scas
repz
movsl
enter
loopne
je
cwtl
adc
fwait
mov
outsb
lods
push
fsub
jnp
pop
push
xchg
fwait
cmpsb
jnp
jp
sti
lret
fstps
or
cli
lcall
clc
lcall
add
lret
ss
sahf
imul
movsb
insl
popf
insb
sbb
rclb
and
int3
mov
je
es
sub
mov
call
fmull
inc
pushf
add
out
enter
push
loope
mov
xor
test
test
mov
mov
and
xchg
sub
imul
das
stc
jns
and
dec
cmp
in
jnp
out
mov
nop
aam
jle
pop
repz
lds
inc
fabs
in
inc
xchg
adc
mov
push
add
lods
mov
enter
mov
push
loopne
out
xchg
jno
inc
into
icebp
cltd
dec
add
jmp
xchg
cwtl
or
or
mov
cwtl
inc
out
mov
lcall
inc
adc
push
sbb
jae
mov
das
les
mov
push
and
divb
stos
jmp
out
inc
inc
cs
xchg
push
pushf
mov
inc
adc
jge
mull
push
das
sbb
xor
inc
ja
mov
out
jle
addl
inc
sub
cmp
push
repnz
mov
add
mov
mov
xchg
loopne
xchg
cld
xor
fiaddl
mov
enter
mov
sti
push
and
outsb
mov
or
cmp
cmp
shlb
xor
xchg
mov
lods
pop
add
lret
js
inc
cmpsb
inc
or
arpl
pushf
fs
pop
adcb
fidivrl
mov
mov
jo
jl
jl
test
mov
dec
in
inc
jnp
inc
dec
inc
das
dec
or
out
shll
test
cmpsb
lock
mov
lret
sbb
pop
imul
cmpsb
es
in
dec
movswl
inc
lret
sub
push
cmp
pop
sahf
fldt
mov
ljmp
imul
sahf
sbb
push
cmp
popa
out
sbb
repz
jl
std
xorb
pmulhuw
mov
pop
into
aam
cmp
xor
adc
cltd
push
loope
in
push
cmovge
cmp
push
pop
sub
mov
pop
jno
cltd
pop
ss
test
add
leave
ja
pusha
stos
cld
pop
test
xor
out
xor
daa
dec
lahf
adc
cmpsl
or
shl
ficompl
inc
ret
orl
adc
cmp
jmp
dec
je
bound
add
push
mov
sub
xchg
out
or
pusha
dec
dec
and
add
inc
leave
xor
mov
andb
adcb
fisttps
dec
pop
mov
inc
cmpsb
xor
and
test
mov
popa
cmp
jl
mov
out
addb
out
roll
rorl
cmp
sqrtps
xor
xor
inc
push
js
xchg
fisttpl
data16
and
dec
mov
cmp
div
cmp
push
push
pop
and
aaa
xor
xchg
nop
fistl
add
dec
pop
and
faddl
or
mov
pop
mov
call
xor
sbb
xchg
and
hlt
call
inc
cli
movsl
fldl
scas
out
fs
nop
es
cmpsb
xor
sbb
adc
popf
mov
clc
cmp
pop
ja
and
mov
loop
popa
icebp
jbe
andl
cmp
or
outsl
mov
sub
lret
test
jecxz
out
loope
vmovq
mov
or
sub
add
jnp
lret
pusha
out
fstl
xchg
pop
dec
insb
xor
mov
je
cmpsb
and
cmp
adcl
cmp
ljmp
in
mov
push
pop
insl
daa
aam
push
mov
in
das
dec
or
jnp,pn
mov
fsts
xor
aad
or
mov
insl
push
pop
mov
fiaddl
mov
pusha
nop
and
ror
jl
xor
pop
adc
mov
imul
stc
pop
arpl
mov
xchg
xor
dec
mov
inc
or
fs
insl
lret
and
pop
pop
or
sub
add
outsl
add
setns
sbb
fiaddl
ficompl
dec
pop
lods
xchg
xor
stc
imul
imul
sub
and
dec
xchg
movsl
cmpsb
sub
mov
push
jnp
cs
jno
pop
inc
inc
adc
jecxz
jmp
sbb
out
mov
jp
fs
and
or
and
cmp
stos
mov
xchg
jne
or
fs
xor
mov
sbb
push
fwait
mov
fidivrs
iret
pop
inc
jne
js
xchg
pop
dec
pop
jbe
insb
scas
rcrb
std
and
inc
dec
adc
ljmp
xchg
lret
mov
pop
loop
lcall
xor
pop
sti
jae
push
mov
xor
push
jecxz
filds
repz
sub
lret
sbb
call
and
loopne
dec
jp
dec
or
pop
daa
mov
pop
mov
dec
dec
lods
adc
or
loop
outsl
push
sub
jl
push
sub
xchg
jno
loop
dec
out
push
add
into
sahf
mov
jecxz
push
jno
push
mov
dec
les
cmp
out
es
or
shr
mov
mov
sbb
jne
or
xor
fs
jge
adc
jmp
lea
rcrb
sar
inc
mov
sarb
mov
or
pushf
xchg
mov
jle
push
and
dec
push
mov
enter
out
out
dec
fwait
xor
je
int3
mov
inc
shufps
mov
push
repz
aaa
out
dec
negl
icebp
add
jmp
jne
test
push
out
ss
xchg
and
clc
or
imulb
sar
enter
add
push
and
mov
or
and
stos
push
aaa
dec
mov
aaa
jmp
lahf
das
adc
insl
cmp
sub
je
cmp
movsl
xor
pop
pop
repnz
dec
inc
dec
jae
or
and
xorb
xor
xor
lock
jl
mov
and
fsubrs
jg
loopne
lock
bound
fadd
push
cs
mov
or
stc
popf
mov
mov
shll
push
aad
push
fnstenv
push
cwtl
loopne
cmp
int
loop
mov
rol
fistps
dec
and
test
xchg
pop
icebp
mov
pop
jmp
dec
in
addr16
push
gs
popf
pop
push
cmpl
mov
fs
mov
mov
sbb
sbb
movsb
imul
xchg
push
push
sahf
ds
js
push
mov
stos
cli
fsubrp
repz
jb
adc
adc
xor
sbb
ja
pushf
adc
inc
jno
mov
das
mov
sub
lods
cmp
enter
inc
nop
out
cwtl
sbb
or
mov
fisttps
push
mov
mov
shl
std
imul
sbb
pop
jge
xchg
loope
loope
rorl
in
outsl
dec
ficoml
stos
dec
insb
xchg
jle
nop
add
xor
fistpll
fwait
lock
sbb
icebp
adcl
jnp
xor
loopne
addl
mov
mov
sub
pushf
cmpsb
divl
lods
jne
cmp
ret
outsl
fstl
lea
in
push
mov
mov
cwtl
cmp
xor
pop
xor
lret
or
jle
adc
xchg
xor
cltd
outsl
cwtl
int3
pop
scas
cmpsb
sbbb
mov
je
mov
mov
xor
in
imul
adc
xchg
mov
sbb
into
xlat
xor
enter
aas
mov
xchg
mov
mov
inc
sub
and
ret
int
or
xor
mov
cmp
jecxz
movl
test
mov
out
mov
xchg
pushf
pop
int3
push
mov
ljmp
imul
lret
push
ss
xlat
xchg
ret
lret
ljmp
ret
sbb
xacquire
ds
div
add
xor
cmp
xorb
push
lahf
xor
xrelease
in
aam
xchg
or
sbb
cmp
add
add
sbb
jge
imul
adc
adc
test
sbb
push
icebp
cld
inc
call
sbb
add
push
lock
push
or
xchg
push
stc
jns
arpl
cli
cmp
test
and
shrb
mov
loop
push
pop
mov
flds
mov
test
pop
and
mov
js
xor
cwtl
pop
cmp
gs
mov
cmp
sbb
add
push
repnz
aam
int3
xchg
das
jno
or
scas
mov
stos
gs
cmp
hlt
xchg
xor
jmp
and
sbb
bound
insb
sub
and
sbb
mov
stc
sysret
enter
xor
jns
dec
imul
popa
fs
or
ss
mov
dec
pop
mov
mov
cmp
pop
pop
loop
cmc
je
les
and
lds
push
loope
loopne
pop
fisubrl
and
hlt
xchg
cmpsl
xchg
dec
enter
pop
push
pop
out
hlt
orb
pop
pop
cltd
sbb
nop
incb
int
vmovaps
scas
in
jne,pn
jnp
addl
xchg
adc
arpl
cmp
xor
subb
inc
roll
xor
in
pop
add
inc
pop
jmp
iret
sbb
xchg
mov
fdivp
push
adc
ffreep
sbb
pusha
xor
hlt
outsl
jnp,pt
jg
push
mov
fcomi
pop
xchg
fadd
mov
mov
mov
adc
fidivl
mov
cwtl
and
sub
popf
rcll
and
clc
popl
fwait
jl
mov
ds
ljmp
mov
sbb
pop
aam
hlt
out
pop
enter
xchg
out
dec
pushw
aaa
push
aam
cmp
jmp
push
daa
sub
lods
pop
mov
pop
and
push
cwtl
add
sub
mov
sbb
aad
mov
shr
push
mov
and
pop
jle
xorl
lds
mov
clc
sbb
xchg
cmpsb
arpl
insb
loop
push
and
hlt
add
pop
out
adc
jbe
stos
loope
jns
sub
or
and
les
call
mov
icebp
popa
push
arpl
dec
outsl
aas
push
jge
test
ds
jle
clc
adc
in
cld
sub
ret
push
fimull
into
mov
or
pop
jnp
leave
sbb
or
dec
dec
in
scas
jae
loop
dec
enter
sti
cs
lret
mov
daa
scas
paddw
dec
mov
push
pop
faddl
sub
dec
shll
fdivrp
push
outsb
in
dec
xchg
stos
pop
lret
aad
adc
mov
add
mov
mov
push
ret
mov
xor
mov
cmpl
push
lea
insl
mov
cmp
loopne
stc
xorl
out
push
fimull
test
pushf
in
cmp
scas
mov
das
sub
cmp
test
pop
cmp
mov
mov
add
inc
pusha
cltd
dec
mov
sub
mov
pop
dec
or
push
loopne
stc
jae
cmc
fwait
mov
js
pop
lods
jecxz
push
mov
adc
shlb
mov
pop
or
push
xchg
inc
and
out
adc
or
and
movsb
jno
mov
sbb
jo
mov
jmp
add
push
cld
lret
sbb
mov
mov
push
bound
ret
push
mov
sbb
cmpsl
mov
pop
or
mov
push
test
sub
loope
xchg
pop
loopne
inc
xor
popf
in
mov
pop
aaa
shl
hlt
cmp
adc
jl
data16
mov
and
mov
scas
arpl
mov
sub
fnstsw
xor
xchg
sub
sub
sbb
movl
pop
ds
movsl
mov
and
and
add
ja
inc
pop
lcall
lcall
clc
cwtl
mov
cmp
dec
pop
adc
fldcw
fdiv
xor
dec
bound
pusha
aam
cmc
xchg
inc
push
adc
test
mov
fwait
adc
sar
adc
pop
mov
mov
not
mov
popa
push
js
into
mov
out
push
mov
jne
in
or
int
mov
jno
sbb
adc
jecxz
xchg
mov
aaa
insl
pop
mov
xchg
xor
dec
add
sub
xchg
inc
int3
cmp
sbb
mov
fmuls
fists
into
fnstenv
pop
sbb
repnz
pop
push
leave
pop
add
inc
stos
add
cmp
fdivrp
aaa
mov
cmp
sbb
stc
fsqrt
test
jno
mov
fldt
leave
add
mov
sub
lret
xor
xchg
push
mov
dec
call
lcall
shlb
xor
sbb
push
popa
sbb
aaa
mov
pop
xchg
imul
vmwrite
sbb
and
pop
into
loopne
sub
into
dec
ret
pop
adc
sbb
xor
jbe
push
fstpl
repz
sahf
push
lret
or
cmc
xor
into
aaa
cmp
int3
popa
lret
xor
popf
dec
movl
mov
sbb
fnstsw
ljmp
sti
mov
push
outsb
loopne
int
jecxz
mov
lcall
scas
mov
loop
leave
xor
push
negb
popa
shlb
push
pop
out
mov
pop
inc
test
xchg
nop
and
aad
or
inc
int
in
outsb
in
sub
iret
movsb
ja
and
das
jmp
jno
dec
sbb
fxam
mov
and
pop
add
rcll
mov
mov
mulb
mov
les
sbb
add
shl
nop
push
in
out
mov
pop
fsts
add
fcmovne
adc
into
not
sbb
jmp
fs
shr
imul
lcall
pusha
mov
xchg
sbb
std
hlt
sbb
cwtl
xchg
push
lods
xchg
jecxz,pt
addl
xchg
jb
sub
call
repz
loopne
dec
xchg
sub
gs
inc
pop
testb
lahf
xchg
cltd
adc
sub
push
movl
or
aaa
hlt
cwtl
pop
inc
addb
ret
dec
out
add
loop
rcr
mov
xchg
push
pop
push
ja
or
push
mov
push
pop
out
int3
lcall
cli
jl
jns
xorl
xchg
lahf
sub
and
call
push
es
jg
pop
aad
and
xor
pop
int3
je
sbb
xor
div
inc
test
sbb
inc
xchg
daa
adc
imul
mov
push
pop
int3
ds
add
mov
cmpsb
jle
sbb
or
daa
mov
mov
adc
adc
dec
sbb
adc
call
testb
outsl
loope
call
or
jne
das
sub
ficoms
aad
fstpl
jmp
add
cmpb
iret
xor
into
mov
pusha
ja
addr16
adcl
adc
push
mul
mov
sub
xor
push
mov
sbb
test
pop
repnz
leave
push
sbb
cmp
xlat
stc
sbb
cmpsb
pcmpeqw
scas
into
lods
xorb
test
jg
jge
fucomp
imul
in
pop
icebp
stc
dec
loop
inc
and
jae
sbb
mov
dec
cmpb
mov
cld
xchg
rcll
mov
cmpsl
insb
inc
and
lcall
cmp
xor
push
mov
shl
pop
shl
insl
jge
sbb
add
add
test
iret
rol
inc
adc
test
bound
mov
push
sbb
pop
mov
imul
jbe
cmp
in
test
push
les
out
add
pop
xor
aad
sub
push
mov
sahf
mov
adc
or
adc
outsl
jne
stc
mov
lock
xchg
out
lods
popa
pop
dec
mov
fndisi(8087
pop
sahf
jnp
js
pushf
push
xchg
cmpsl
int3
jp
imul
ficoms
shll
pop
call
bound
and
add
popa
inc
aad
or
sbb
add
leave
cmp
pop
sar
scas
in
stos
jmp
mov
lahf
loope
aad
rclb
decl
xchg
outsb
shlb
jno
fmuls
subl
adc
and
jbe
mov
lcall
sub
es
icebp
leave
push
roll
fisubl
fstpt
pop
lds
mov
fs
dec
mov
dec
in
mov
fldt
hlt
adc
lea
cmp
aam
adc
cmpsl
mov
cmp
daa
push
xchg
push
mov
mov
sar
adc
pop
mov
notl
into
mov
mov
and
and
mov
out
sbbl
xor
stos
sub
xor
pushf
pop
scas
sbb
cwtl
dec
cmc
jl
xor
sbb
jg
push
lret
push
and
mov
das
mov
or
movsb
xor
push
movsb
sbb
adcb
leave
fistl
mov
popa
popa
imul
ret
add
mov
xchg
inc
jge
mov
sbb
or
xlat
inc
sbb
push
bound
and
sbb
frstor
ljmp
jb
ss
lods
sbb
fstl
dec
adc
xchg
lods
pop
aas
hlt
push
dec
ficomps
add
xchg
pop
sub
add
iret
fs
push
jg
dec
enter
add
frstor
xchg
mov
adc
adc
les
mov
insl
arpl
inc
inc
sub
mov
ret
inc
pusha
ret
std
mov
xorl
outsl
sub
je
xor
mov
xor
cld
sbb
mov
jno
addl
mov
call
fidivrs
gs
jne
mov
jp
mov
push
jae
jle
and
xor
ficoml
mov
subl
mov
scas
scas
xor
imul
lea
add
or
stc
dec
jno
sbb
fcmovbe
movsl
hlt
or
mov
in
rorb
inc
hlt
push
movsl
dec
mov
and
add
enter
cmp
cmpsb
sub
imull
in
mov
mov
jge
negl
add
inc
iret
push
js
pop
dec
mov
xchg
loop
inc
inc
lret
fimuls
jnp
push
fnstenv
xchg
xchg
jns
shll
enter
mov
mov
xchg
hlt
mov
push
jnp
pop
lahf
jno
and
dec
fucomip
nop
push
push
xchg
clc
pop
les
mov
in
daa
xchg
iret
inc
in
inc
rcrl
fdivs
push
jecxz
jno
pushf
cli
fdivr
or
mov
loope
jo
cmp
adc
fimuls
mov
mov
cs
xor
dec
dec
or
push
xor
sbb
mov
mov
pop
test
sahf
and
stos
hlt
mov
sbb
mov
push
jnp
xchg
ret
xor
xchg
lret
js
dec
add
adc
add
push
adc
cli
jns
movsb
or
test
mov
shlb
dec
add
mov
icebp
inc
dec
jb
mov
pushl
mov
lea
lcall
and
std
mov
push
inc
sbb
jae
in
mov
pop
push
xchg
jmp
ljmp
aas
cmpsb
pusha
test
cmp
and
adc
mov
jae
sbb
push
push
gs
pushf
dec
mov
jbe
test
jmp
inc
call
pushf
jmp
lret
fcom
and
adc
mov
ds
test
sub
inc
lods
fs
cmp
jecxz
pop
jb
add
mov
stos
xchg
inc
mov
jae
mov
sub
test
and
pshufw
and
push
cmp
jmp
scas
popf
and
push
adc
mov
ja
pop
out
add
xchg
iret
xchg
pop
mov
pushf
fnstsw
mov
out
out
test
ret
out
jmp
stos
clc
aaa
repnz
push
and
and
cltd
xchg
loopne
jecxz
jmp
loop,pn
and
mulb
aas
sub
movsb
cmpl
inc
jno
jne
mov
mov
nop
pop
dec
jge
jo
push
ret
pop
jle
mov
mov
and
aad
cwtl
ljmp
bound
cmp
push
sub
pusha
loop
cmp
gs
in
sahf
or
scas
and
movsb
cwtl
xchg
data16
lret
cmpsb
cmp
inc
mov
rorl
int
or
push
movsb
rcll
inc
jno
jo
jno
adc
mov
xor
test
movb
push
pop
mov
inc
stc
rolb
stos
mov
jnp
or
cmc
dec
and
addr16
sbb
test
mov
sub
cmp
dec
xor
pcmpgtb
js
shl
out
mov
call
ret
sti
push
lret
mov
jl
dec
mov
jg
adc
out
fists
dec
out
and
in
dec
lods
loop
sahf
stc
ja
push
pop
fbstp
fldl
mov
pop
pop
sub
jnp
cld
popa
mov
js
xor
in
out
int
xchg
push
dec
push
sbb
into
insb
jl
cs
fldcw
xor
and
jnp
stos
inc
insl
or
inc
leave
push
pop
in
stc
and
jns
jne
imul
pusha
les
cmc
adc
xchg
punpckhdq
fisttpll
xchg
pop
adcl
sub
outsl
cmp
push
pop
adc
icebp
xor
add
adc
test
adc
out
pop
mov
and
dec
add
cltd
jo
pushf
test
inc
loopne
dec
inc
cmp
dec
adc
ret
xlat
scas
jmp
xchg
jnp
cmp
lahf
and
movsl
mov
cli
push
xchg
cld
js
es
lods
lahf
push
jl
aas
cmp
add
cmp
call
and
imul
je
push
mov
out
pusha
xlat
cmp
cmp
mov
aad
cli
daa
mov
dec
jg
sbb
dec
js
in
fisubl
pop
int3
mov
inc
dec
ret
negb
mov
filds
cltd
std
icebp
out
aas
sbb
pop
or
into
jmp
xor
sahf
ja
jmp
pop
and
mov
mov
les
mov
mov
out
xchg
inc
fnstenv
fs
clc
insb
cmp
aad
jne
or
and
jne
cld
cld
dec
sub
adc
lods
xor
fwait
mov
orl
in
sub
push
inc
or
rcll
inc
xchg
push
dec
add
fdivp
mov
jmp
lods
test
jmp
push
decl
aas
mov
pop
jmp
jne
int
cwtl
repz
inc
scas
pushf
adc
push
inc
mov
jae
xchg
stc
out
mov
andb
and
lcall
mov
rorb
dec
dec
mov
lcall
pop
mov
xchg
jge
out
addr16
out
sbb
pop
dec
lcall
mov
jecxz
xchg
sbb
stos
cwtl
cmp
pop
add
sub
mov
aaa
jnp
xchg
jg
inc
ljmp
popa
nop
mov
movsb
out
jnp
mov
out
dec
or
loop
sbb
or
stc
in
rolb
or
js
popf
or
cmpsb
xchg
or
xchg
add
dec
push
inc
mov
add
in
pop
cmc
ljmp
add
jae
out
pop
ret
pusha
or
ljmp
dec
or
stc
sahf
cmovl
scas
and
iret
pop
pop
std
test
jae
inc
adc
xchg
sbb
push
loop
and
cmp
outsb
cwtl
xchg
movsb
out
fsubp
dec
push
mov
add
cmpsl
mov
lods
aad
jne
in
repz
adc
jecxz
inc
xor
in
jb
fs
pop
sbb
push
or
inc
mov
pop
sub
mov
xlat
and
dec
mov
dec
jge
and
xor
movsb
lds
jmp
inc
das
pop
shrb
push
push
sarl
jno
sti
push
add
or
add
add
add
adc
xchg
xlat
add
cs
jmp
xor
push
jno
mov
push
pop
cmp
jns
dec
jecxz
std
adc
cmp
jns
repnz
test
imul
lods
mov
subb
xchg
mov
adc
cmp
mov
fidivrl
rcll
push
mov
cmc
xchg
and
ret
sub
stos
dec
ss
adc
cmp
in
addr16
fwait
sbb
sahf
jb
stos
test
jno
xlat
out
ret
lret
test
cmp
sub
insb
inc
sub
testb
jmp
in
cmp
and
pop
mov
xor
dec
push
add
push
xor
and
clc
mov
xchg
pop
xchg
jnp
sbb
jecxz
fcoms
nop
or
enter
pop
in
fsubrl
lcall
and
dec
dec
sti
sbb
ret
ljmp
jecxz
jnp
cmpsb
stc
mov
sub
mov
fnsave
repnz
mov
pop
popa
pop
adc
and
mov
ficompl
add
jo
xor
jl
jo
lds
stos
jno
pop
cmp
xchg
inc
mov
mov
sbb
or
int3
sub
repz
movsl
lcall
xchg
iret
push
aas
in
inc
ja
and
lahf
in
movsl
repnz
jle
lods
add
add
mov
loopne
js
mov
or
incb
adc
mov
sub
mov
xchg
mov
xchg
mov
and
mov
inc
daa
sti
imul
mov
mov
aaa
jns
dec
xchg
les
outsl
cmp
mov
inc
sbb
out
xor
mov
jg
cmp
aas
jno
inc
sub
clc
cmp
ret
mov
sahf
or
addr16
out
add
sti
mov
and
movsl
daa
popa
push
jbe
popa
lea
xchg
and
subb
cmp
out
aad
lcall
xor
pop
fisubl
les
je
icebp
lods
xor
aad
lods
push
add
dec
dec
test
out
mov
movsl
jno
les
pop
xchg
aas
push
jge
in
cltd
shlb
ja
mov
out
sub
inc
lahf
pop
add
out
cld
jne
and
or
repnz
push
out
sub
sub
popa
aas
and
mov
xchg
push
lock
jae
andb
in
cmp
inc
mov
popf
dec
subl
in
adc
lret
sbb
mov
push
lea
inc
or
scas
cmpsb
icebp
lods
jp
pop
lods
push
push
cltd
inc
loop
dec
mov
aad
jno
gs
and
test
or
xchg
cwtl
and
inc
nop
mov
pop
fwait
in
adc
pop
ficoms
or
jg
enter
xchg
roll
lods
shr
mov
push
in
cli
sub
jo
adc
fsubrl
jmp
add
int3
pop
xchg
mov
repz
insl
or
xor
loop
sub
adc
mov
or
mov
mov
jg
pop
jmp
mov
inc
in
sar
outsb
mov
jl
popa
dec
nop
pop
dec
cmp
push
outsl
cld
mov
arpl
mov
imul
push
xchg
mov
int
push
into
xchg
cmp
mov
sub
lea
mov
mov
aaa
inc
inc
mov
stos
push
sbb
sub
aas
mov
das
jno
push
jle
sbb
aad
pop
and
mov
roll
pop
stos
sti
int
out
sahf
aad
iret
test
negl
pop
dec
call
cmp
and
shr
in
dec
xor
imul
clc
adcb
clc
inc
fsubp
mov
mov
mov
lret
hlt
pop
aad
dec
call
pop
and
jo
add
rorl
jnp
push
cmp
mov
mov
lahf
loope
mov
fisubl
rol
mov
repz
test
mov
in
enter
mov
or
cmp
cmp
pushf
fiaddl
or
mov
and
mov
ja
icebp
fcmovb
sbb
and
loop
ljmp
int3
fnsave
lock
push
cmp
mov
and
cmp
stc
sub
testb
iret
aad
push
xorl
rclb
out
lock
lock
imul
and
orl
ds
aas
pop
int
sbb
cltd
scas
fldt
fnstenv
and
cmp
sbbl
jmp
xchg
test
paddq
pop
mov
sar
test
int3
or
xchg
mul
xchg
movsl
das
ret
xor
mov
lods
xchg
ss
insl
in
aaa
or
lods
jnp
negl
stc
sbb
test
jns
mov
adc
mov
xchg
mov
lcall
out
out
test
mov
aaa
cld
lds
pop
sti
repnz
cmp
cmpsl
fwait
int
test
pop
mul
imul
ror
fimuls
insl
incl
lret
xor
cmpsb
cmpsb
mov
enter
test
mov
aas
inc
pop
push
sub
cmc
sbb
xchg
add
lods
or
movl
mov
jle
test
cmpsb
mov
and
je
add
lret
dec
sbb
popa
pop
add
fcmovne
dec
mov
data16
ret
xchg
fbld
in
add
mov
xchg
sbb
add
hlt
and
popf
jns
js
dec
add
inc
loop
adc
lea
arpl
in
inc
hlt
cs
enter
lock
mov
into
testb
movsl
mov
cmp
das
dec
jo
into
movsl
data16
cmc
add
push
test
decb
xchg
and
jg
jns
cmp
xchg
ja
outsl
in
dec
in
sbb
testb
xchg
inc
fs
subl
sbb
outsb
in
ljmp
add
jo
aam
xchg
inc
arpl
jnp
cmp
fdivr
adc
sbb
shrb
mov
in
pop
adc
push
or
xchg
sub
insl
or
movsl
jo
push
mov
je
icebp
dec
pop
mov
dec
jno
xchg
fmuls
xchg
jnp
fs
shrl
fnstcw
xor
aam
xchg
jo
outsl
std
mov
jmp
sbb
mov
pop
add
jl
cwtl
les
pop
ret
mov
dec
jno
push
iret
mov
test
sbb
shl
ret
ljmp
mov
lret
in
xor
shr
fucomp
pop
in
sub
lret
adc
fwait
stc
pop
xchg
inc
iret
out
jno
sbb
fsubs
fildl
lahf
in
xchg
arpl
into
aaa
dec
repz
outsb
and
push
imul
inc
inc
rolb
pushf
outsb
sbb
sbb
pusha
addr16
pop
mov
lods
ljmp
pop
and
add
lahf
sarb
or
std
clc
push
pop
jns
dec
push
les
pop
add
xchg
adc
pushl
jbe
into
sbbb
adc
mov
sahf
popa
test
xchg
add
stos
mov
or
orl
xchg
lock
test
mov
movsl
in
mov
and
sbb
repz
adc
ficompl
pusha
cltd
push
js
loope
scas
mov
in
mov
mov
lret
dec
dec
inc
xchg
insb
and
je
sub
cltd
or
push
add
xchg
aad
or
cmp
sbb
pop
cmp
mov
imul
xor
inc
or
dec
lcall
sbb
mov
insl
jge
not
push
sahf
es
adc
adc
add
push
das
mov
int3
mov
enter
cmp
push
jb
in
xchg
inc
push
leave
shll
add
inc
adc
mov
popf
mov
stos
push
iret
xor
sti
mov
ss
in
scas
push
cltd
js
out
dec
mov
lahf
aaa
xor
dec
lods
push
sbb
xchg
cmp
dec
movsl
clc
dec
jge
jl
mov
shlb
rcr
push
imul
cmp
int3
pop
push
es
sbb
push
outsl
mov
xchg
sub
pop
push
add
adc
int
or
test
xor
test
in
cmp
push
outsb
std
js
test
fmull
xchg
dec
dec
cmp
fldenv
xchg
es
clc
sbb
xchg
xabort
add
xor
sbb
std
rcr
repz
xor
push
sti
nop
cmc
push
inc
shrl
or
jmp
fstpt
ss
sub
push
loopne
das
pop
inc
sarb
repnz
js
or
or
nop
imul
shr
pop
dec
mov
sub
outsb
xchg
jp
sub
jge
and
push
cli
mov
sbb
clc
addb
xor
cmp
rcr
jne,pn
test
jns
repz
je
mov
mov
push
add
fidivl
xor
mov
mov
cmpsb
xor
mov
inc
dec
sub
int3
mov
sbb
cmp
jne
cmp
xor
push
xor
mov
ret
adc
rcr
jo
jle
je
iret
push
jmp
sbb
inc
pop
pop
cmp
jle
rorb
fs
cmp
cs
push
adc
gs
cmp
dec
iret
push
popa
lea
and
mov
xchg
test
jle
mov
cmp
push
clc
lcall
fisubs
cli
dec
push
pop
xor
push
mov
pop
and
sub
fistl
xchg
cld
dec
adc
icebp
pop
cmpl
jg
mov
xchg
test
mov
add
sahf
jmp
xlat
in
mov
mov
jae
or
loop
cmp
xor
cmp
call
and
adc
push
rep
push
cmp
xlat
fstpl
mov
mov
lret
push
push
pop
daa
movsl
jge
lcall
lea
ftst
out
movsb
add
test
roll
pop
xchg
mov
xor
jae
pop
int3
mov
cmc
mov
pop
lods
repz
insb
jecxz
mov
lods
mov
jge
insl
arpl
int
sub
shrb
inc
cwtl
lock
adc
int
enter
push
adc
or
xor
mov
andb
fs
ss
mov
ja
fisubs
mov
cltd
mov
ret
pop
jns
push
aam
imul
jmp
sbb
mov
push
fs
sub
mov
inc
sbb
andb
adc
mov
lds
mov
imul
das
shll
popa
jns
mov
sub
add
mov
lret
leave
stos
iret
loop
fistps
js
jg
xchg
sbb
in
scas
into
rorb
movsl
insl
pop
nop
fwait
data16
or
dec
pop
pop
adc
mov
sub
gs
lds
idivb
jg
movsb
insl
in
dec
cmp
inc
sub
sub
test
lods
sub
rcrl
mov
loopne
idivb
sbb
int
mov
ret
push
rclb
lods
es
jp
cmp
fistpll
add
insb
mov
sub
rdmsr
add
sub
xchg
jno
inc
test
jg
pushf
adc
jnp
push
push
bound
test
cs
rclb
enter
push
imul
inc
sub
mov
subb
push
jge
mov
sub
sbb
ss
xchg
and
pushl
jb
imul
mov
xor
jae
push
xor
xlat
pop
dec
mov
cmp
mov
add
int
cltd
sbb
cmp
rol
cmpsb
cltd
jg
mulb
adc
pop
pop
xorl
cmp
movsb
ljmp
cli
adcb
mov
or
push
adc
pusha
cmp
js
xor
cli
loope
mov
scas
dec
xchg
pop
cmp
mov
mov
jo
lds
shlb
popf
xor
ja
out
mov
jl
mov
psadbw
das
insl
lcall
or
addb
scas
sti
jg
adc
mov
mov
mov
jmp
repz
cmp
sbb
sub
or
dec
shlb
enter
xchg
mov
lret
scas
add
test
adc
and
test
lock
add
out
inc
xor
push
jae
sbb
stc
or
or
push
mov
mov
xchg
arpl
pop
test
and
mov
push
pop
push
mov
sub
lret
xchg
cltd
stos
aaa
mov
cmpsl
adcb
pushf
out
sub
scas
jecxz
daa
cmp
push
cmp
push
push
fsts
mov
xor
out
cmc
sbb
or
add
loope
call
jnp
mov
and
aaa
icebp
ds
ja
lea
adc
jae
mov
add
test
xchg
out
mov
insl
sti
leave
movsb
jne
dec
loopne
gs
cmc
insb
daa
cli
neg
dec
dec
sti
cmp
mov
xchg
mov
inc
aam
pop
mov
mov
push
out
icebp
shl
hlt
mov
mov
cli
mov
cld
and
sub
out
je
scas
insb
stos
int3
inc
jmp
ficomps
cmpsb
mov
pop
jmp
jmp
adc
push
mov
imul
sub
jmp
ret
mov
or
lea
pop
pop
mov
inc
lods
or
or
inc
add
out
inc
push
fcoml
or
cmpsb
push
decb
pop
subb
stos
push
bound
andl
add
inc
mov
aad
call
rorl
jle
int
in
lods
sbb
in
pusha
and
in
in
insb
mov
adc
adc
test
mov
xor
inc
scas
and
out
repnz
jo
clc
xor
test
repz
sub
out
nop
sbb
cmpsb
mov
jns
je
mov
lock
pop
je
icebp
int3
into
cmp
ret
nop
jbe
cmp
inc
out
push
cli
arpl
out
dec
pop
jecxz
ret
in
je
idivb
pop
pop
in
cmp
lret
shll
mov
xchg
push
add
fsincos
or
les
pop
jb
push
orb
jbe
daa
decb
dec
add
sbb
pop
jle
mov
mov
lds
add
cli
cmp
push
frstor
leave
rcrb
mov
ret
movsb
fwait
cmp
mov
mov
lret
adc
insb
and
xor
push
mov
popf
arpl
add
les
out
xlat
sbb
mov
mov
adc
jns
mov
add
jle
pop
lock
sub
xlat
addl
dec
mov
lock
testb
inc
adc
push
mov
xchg
lods
cmp
cmp
out
lds
xchg
xchg
xchg
push
push
dec
daa
into
ror
setl
push
sbb
ret
jae
nop
mov
mov
test
out
ret
loopne
or
cmp
adc
jle
stc
scas
mov
mov
xchg
mov
lods
pop
cmpsb
adc
dec
mov
mov
hlt
pop
push
jp
insb
mov
pop
push
mov
dec
out
shlb
push
mov
pop
or
adc
jo
divl
xchg
lret
cmpsb
js
pusha
data16
dec
mov
int
cmp
inc
mov
stc
insl
inc
sub
mov
lock
filds
inc
or
push
imul
sbb
mov
xor
xchg
out
rcrb
or
imul
insb
mulb
mov
leave
adc
sub
push
or
aaa
int3
shll
or
iret
imul
imull
push
xor
shll
test
cwtl
mov
rcl
js
clc
fwait
mov
bound
out
sbb
dec
ficoms
into
rorl
mov
jb
fistl
lds
jge
ret
add
pop
bnd
inc
aas
mov
pop
clc
das
aam
mov
or
cmc
sub
push
cwtl
test
mov
imul
adc
data16
pop
adc
inc
xor
aam
pushf
sbb
or
ror
add
sbb
test
fwait
shr
mov
loop
les
xor
sbb
sbb
xchg
push
test
enter
jg
jg
cs
dec
xchg
ret
lret
dec
testb
cmp
fsubrl
fimuls
out
lea
pop
ret
pop
pop
push
scas
gs
mov
sahf
or
mov
in
lahf
aam
push
repz
shr
or
inc
cs
and
mov
or
pop
pop
pop
adc
dec
or
insl
xchg
bound
add
lcall
xchg
mov
js
xchg
jge
call
cmp
cwtl
push
sbb
mov
lcall
mov
push
std
and
push
mov
jl
aad
out
xchg
clc
lcall
mov
cmc
pop
daa
stc
xchg
out
loopne
ljmp
jecxz
or
mov
jmp
in
sti
cmpsb
enter
cmc
outsb
leave
xchg
mov
pop
pop
movsl
in
dec
and
sub
addb
leave
out
scas
clc
ja
mov
ds
jmp
gs
insb
sbbb
push
into
lods
mov
jnp
push
push
mov
push
cmp
push
adc
and
shll
xor
inc
andb
and
or
stos
xchg
es
sbb
mov
inc
sub
mov
mov
test
mov
xor
inc
loop
out
mov
scas
jnp
scas
mov
rcll
push
jp
lods
outsl
shr
arpl
subb
pop
leave
jo
or
int
testb
addr16
cmp
and
dec
mov
repnz
adc
mov
andl
loope
andl
sub
sar
mov
ja
fisubl
jbe
fsubrl
test
mov
pop
add
jl
mov
scas
sub
aaa
dec
add
sti
aam
push
mul
xor
adc
fsubr
lds
push
notl
pop
imul
sbb
dec
cmpl
iret
movsl
mov
inc
xor
scas
mov
pop
adc
out
mov
mov
sub
leave
sbbl
out
mov
cli
xorl
adc
out
mov
je
or
cmc
inc
movsl
and
push
jg
xorb
gs
push
js
mov
adc
xor
lock
popa
hlt
and
push
loopne
dec
cld
jle
aad
cmp
pop
hlt
fimull
xor
vcvttsd2usi
adc
and
pop
js
xchg
in
das
pusha
pop
push
cmp
shlb
pop
inc
pop
cwtl
mov
push
xor
jns
inc
movl
xlat
js
sub
pop
sar
jecxz
or
out
call
dec
mov
cmp
fldl
or
inc
fwait
sub
stos
jb
add
aas
sub
xor
mov
in
sbb
fidivrl
fsubp
scas
xor
insb
out
dec
or
fstpt
xorl
mov
mov
dec
ret
pop
inc
inc
jb
or
jmp
push
ficoml
adc
orl
test
rcl
cwtl
xor
out
adc
adc
jbe
cmp
inc
cmp
push
cld
addr16
xchg
notb
shl
inc
mov
or
mov
js
shlb
cmpsb
mov
adc
fcoms
iret
add
jp
sub
adc
ja
aaa
pop
xchg
xor
cwtl
xchg
mov
push
imul
outsl
in
rclb
mov
cmp
ss
add
dec
sti
mov
loop
notl
xor
mov
sbb
jl
roll
adc
and
cmp
fcompl
shll
jl
xchg
cs
scas
mov
inc
in
lods
mov
stos
test
inc
push
or
add
bound
fs
pop
and
rcl
xchg
scas
or
push
push
lea
incb
cltd
or
xchg
ficoms
das
fbstp
push
adc
sbb
cmp
mov
adc
jne
fists
add
cmc
jl
popf
je
xchg
mov
movsl
daa
mov
icebp
pop
mov
sbb
mov
sbb
icebp
loope
ljmp
lea
or
lock
cmovs
lret
fwait
imul
push
mov
fstpt
or
dec
mov
lods
push
jmp
in
or
cli
xor
dec
cmp
xor
iret
aas
sub
aad
mov
inc
mov
dec
rol
inc
add
push
outsl
push
sbb
data16
int
mov
push
and
rcl
mov
popa
mul
mov
imul
mov
int
arpl
ja
jge,pn
scas
jmp
sub
testb
xchg
mov
loope
xchg
push
dec
jae
ss
inc
cmp
sbb
out
ljmp
rclb
dec
mov
jmp
xchg
les
gs
mov
mov
push
sbb
push
lock
call
lods
lcall
aad
sub
das
xor
xchg
jmp
inc
jp
ficoml
rcl
fbld
or
ds
rclb
insb
shrl
lcall
movsl
or
jl
mov
pop
jg
into
mov
push
mov
out
push
sub
xchg
and
sti
push
cltd
mov
xor
push
mov
popf
ficoml
cld
popa
lods
inc
lea
jo
push
inc
cmp
or
outsl
cmpl
daa
je
shl
push
adc
pop
cmp
jecxz
xchg
in
pop
push
add
movsl
ja
aaa
call
in
bound
leave
sti
dec
sub
pop
fsubs
rcr
cmp
fidivl
jno
mov
fs
cs
fwait
jl,pn
cmpb
or
add
fisubs
shrl
adc
mov
aam
je
inc
outsb
gs
jne
loopne
adc
fidivl
add
push
lret
or
jb
out
jl
push
mov
call
pop
xor
mov
mov
cmp
jmp
inc
mov
dec
test
push
call
in
dec
dec
push
mov
fs
fcomps
in
mov
out
iret
cmp
jnp
sahf
xor
add
jmp
clc
call
jp
div
sbb
lea
mov
and
pop
ret
mov
out
stos
pop
bound
mov
adc
mov
mov
push
dec
out
sahf
insl
xchg
rcpps
out
dec
movsb
inc
in
lock
stos
daa
adc
loop
lods
fwait
or
sub
sub
xchg
rcrb
pushl
aam
jl
pushf
cltd
push
popa
es
xchg
jno
in
aas
jmpw
sti
push
fwait
shll
lcall
mov
fmull
push
mov
ja
cmc
lock
or
mov
jl
imul
test
add
inc
rorb
inc
cmp
adc
push
lea
pusha
mov
pop
out
out
mov
cmc
sub
pop
push
mov
aaa
in
movsl
xchg
pop
or
jle
leave
add
mov
xor
je
in
lods
mov
scas
fldl
sub
dec
push
sbb
jno
jnp
sbb
mov
cmp
repz
decb
adc
into
sbb
test
adc
dec
adc
push
fcompl
cld
loop
or
or
psubusb
xchg
test
sub
pusha
hlt
mov
loope
fldt
call
sbb
divl
dec
cmp
adc
mov
jne
or
sbb
es
cwtl
mov
ds
xchg
push
cmc
push
sahf
mov
jp
adc
nop
mov
push
inc
jecxz
fildll
lods
or
movq
push
add
out
mov
mov
push
inc
push
jecxz
faddp
ss
fisttpll
lret
pop
inc
sbb
movsb
add
xchg
cs
push
lock
xacquire
stos
jecxz
arpl
testl
adc
jecxz
xchg
mov
adc
out
pop
mov
xchg
ror
out
inc
pop
mov
jp
loope
into
jns
mov
adc
outsl
adc
and
jl
pop
test
push
inc
xor
fstpt
in
loope
call
shrl
gs
nop
outsb
daa
jmp
loopne
icebp
inc
notb
cmpsb
call
pop
cmc
pop
stos
mov
xchg
jnp
repz
cwtl
mov
add
push
cmp
insl
in
xor
aas
pop
sub
dec
pop
adc
js
mov
lea
jb
mov
jmp
popa
or
iret
add
mov
inc
lsl
negl
inc
mov
adc
std
jle
in
push
pop
or
sbb
dec
js
movsl
dec
dec
lea
test
pop
jno
clc
push
mov
ss
rorb
jl
jns
push
test
faddl
in
shll
adc
aam
xor
dec
lods
das
adc
adc
test
daa
add
arpl
scas
sarb
outsl
test
aad
loopne
cli
scas
daa
sbb
cmp
jecxz
int
stos
xchg
xor
pop
jmp
xor
pop
cmp
int3
inc
push
insb
push
repz
xchg
inc
stos
xor
xchg
dec
inc
or
shl
mov
ss
stos
jno
mov
je
in
mov
fwait
and
mov
jns
sub
pop
cmp
sub
mov
push
sarb
push
into
sti
outsl
cmp
pop
call
pushf
sub
dec
pop
dec
push
sub
pop
in
mov
dec
int
loop
xchg
jmp
inc
and
inc
push
mov
lock
and
stos
call
xor
push
mov
ds
adcb
adc
test
movl
aam
mov
mov
out
sub
cmp
pop
test
inc
pop
and
les
xor
leave
push
in
inc
pushf
rcrb
jo
jmp
jmp
cmpsb
pop
sahf
xor
enter
sbb
pop
add
dec
int3
or
mov
loopne
rclb
push
seta
imul
adc
jne
cmp
repz
popf
ret
or
or
loopne
jl
aas
loopne
pop
cmc
add
ja
stos
sbb
cli
arpl
xorb
pusha
cmc
push
pop
sbb
loopne
mov
cld
mov
add
repnz
mov
jne
ror
inc
test
mov
mov
aad
in
aam
adc
ljmp
cmp
loopne
push
pop
push
ja
cmp
mov
jns
xchg
lods
sti
jae
cmp
add
sub
xor
cmp
push
sbb
jle
adc
cli
test
cs
xchg
cmp
rclb
loopne
jp
bound
int
jmp
add
mov
and
into
mov
shrb
sub
pop
sub
hlt
mov
das
pop
sub
icebp
stc
dec
mov
push
fs
aad
movsl
inc
testb
dec
or
inc
mov
jecxz
lret
push
clc
test
stos
cld
sbb
dec
hlt
adcl
pop
cld
test
mov
data16
and
data16
test
insb
inc
xchg
ljmp
cmc
add
xchg
sub
sbb
icebp
gs
xchg
sub
jg
adc
push
shlb
jmp
aam
ds
dec
ljmp
aad
pop
mov
jge
pop
push
dec
out
mov
popf
jle
inc
clc
pop
xchg
mov
lahf
addr16
loop
je
adc
cmp
dec
ljmp
std
push
mov
add
jne
mov
sbb
sub
pushf
jb
lods
cbtw
stos
inc
ds
add
mov
mov
aas
or
mov
sub
mov
fidivrl
xchg
add
lods
cwtl
sbb
popa
jo
fmull
fs
inc
jge
jns
inc
or
in
js
add
loope
aaa
out
ret
pushf
sbbb
setne
or
mov
jl
jg
scas
fsubp
les
lods
stc
xchg
mov
cld
adc
enter
stc
mov
ret
xor
sbb
imul
pop
push
hlt
pop
insl
cmp
sbb
fisubrl
sbb
pop
roll
out
popf
lods
sbb
mov
and
push
int
jg
jbe
popa
or
xlat
sbb
cmp
xchg
push
fistpl
fs
repz
xor
popa
jae
lock
sub
adc
rolb
xchg
add
pop
sbb
mov
sbb
adc
mov
push
subb
or
xchg
repz
inc
fs
mov
pop
outsb
add
or
rorl
mov
cmp
loopne
cli
xor
lods
xor
mov
push
aam
cmp
sub
adc
push
dec
shll
cmpb
pop
mov
pop
rorl
push
adc
pusha
iret
dec
pushf
adc
mov
xchg
out
lcall
inc
out
jecxz
inc
jp
int3
push
fwait
and
jno
in
test
cmp
push
xchg
pushf
push
xor
sbb
gs
inc
mov
add
aas
les
jge
jge
lock
mov
fstpl
jle
or
lea
inc
fisubrl
add
add
cli
mov
sbb
imul
inc
adc
adc
movsl
addl
lret
sti
in
add
ljmp
mov
mov
jb
arpl
loope
popf
hlt
int
out
mov
mov
sub
mov
pop
mov
push
dec
sub
sub
adc
fildll
ret
xchg
add
in
lret
push
sub
out
in
insb
dec
push
jl
jp
int
and
adc
sub
sti
inc
repnz
mov
fs
mov
or
sbb
adc
or
and
jg
push
jge
push
sarb
pop
adc
cmp
jmp
lock
leave
in
jno
pop
fstpl
lock
popf
push
jnp
popa
pop
lea
cmp
inc
out
xor
stos
push
mov
scas
mov
jecxz
push
jns
mov
xor
push
addb
fistl
mov
push
ljmp
dec
jnp,pn
daa
cmp
cltd
mov
call
aaa
imul
lret
int
add
mov
sbbb
sahf
inc
add
push
stos
enter
mov
xchg
loop
shrb
jne
jo
jg
mov
adcb
push
xor
mov
stos
or
in
adc
stos
negl
push
sbb
out
adc
fsubs
and
inc
and
cli
jecxz
push
mov
mov
outsb
insl
scas
sbb
jmp
sbb
cs
ds
pop
or
or
push
mov
enter
mov
movsb
lds
xchg
fiaddl
cmpsl
or
leave
pop
les
out
je
inc
mov
sbb
push
nop
stos
adc
testl
bound
ja
out
sbb
push
mov
test
xor
mov
jle
vfnmadd231ps
mov
loopne
mov
xor
jns
gs
or
push
adc
lret
jns
xlat
lods
movsb
mov
mov
aad
or
into
insb
mov
sbb
or
loope
ret
fimuls
sub
cmp
js
outsl
xchg
inc
pop
pop
fldcw
rolb
mov
lods
mov
test
sbb
lods
nop
pop
test
rorl
lahf
jg
pop
xchg
jns
add
iret
mov
lea
jo
pop
and
arpl
or
jg
lcall
imul
sti
jno
aam
negb
leave
shlb
push
scas
dec
loop
imul
dec
inc
push
sub
adc
lds
lods
mov
adc
inc
dec
lcall
dec
testb
and
and
add
in
pop
sbb
mov
jmp
stos
inc
out
or
loopne
outsb
loop
ret
jecxz,pn
jge
and
sbb
jbe
pushf
bound
clc
and
pusha
call
mov
jae
inc
xlat
add
ret
xlat
and
pop
div
cmp
jp
xor
xor
mov
jmp
or
add
fdivrs
cwtl
sub
sub
into
pop
dec
lcall
dec
xchg
cmp
dec
mov
in
xor
mov
sti
leave
cs
dec
sbb
inc
or
lea
test
cltd
addr16
cmp
mov
movl
push
add
sub
pop
push
out
sub
dec
cs
mov
cmp
jo
or
mov
push
seta
sahf
xor
mov
popa
sbb
stc
adc
lahf
pop
lcall
xor
out
aad
pop
cmp
es
fwait
dec
inc
cmpsb
enter
or
out
lods
mov
mov
add
out
mov
insl
xor
xor
movsb
nop
stos
test
enter
into
aaa
shll
adc
adc
inc
mov
sub
std
rorl
xlat
loope
outsb
aam
sub
cmc
cmc
or
inc
leave
add
or
adc
dec
jp
add
pop
jmp
pop
push
leave
xchg
movsl
jecxz
test
adc
adc
mov
cli
dec
lcall
pop
mov
jg
call
jnp
push
cmp
inc
lret
and
sahf
sbb
mov
lea
or
dec
fcomi
andb
in
xor
pop
mov
adc
mov
cmpsl
mov
arpl
mov
xchg
dec
orb
cmp
add
push
xchg
rcrl
sub
std
icebp
push
cmc
sbb
pop
xchg
movl
cmp
mov
out
fistl
xchg
add
mov
and
jae
mov
jmp
jae
lret
clc
mov
popf
out
lcall
mov
daa
mov
cmp
cmp
int3
cmp
ljmp
pop
movsb
lea
and
cmc
mov
xor
ret
and
mov
adc
dec
lock
sti
sub
int
fcompl
mov
jo
lock
fdivl
ret
in
aam
xor
sbb
pop
lret
mov
inc
or
inc
push
out
pop
in
out
inc
mov
pop
dec
popa
in
mov
jle
shlb
repz
mov
repnz
inc
aaa
mov
pop
adc
push
in
psubsw
jo
fcoml
adc
xlat
adc
add
aaa
xchg
das
imulb
cmp
mov
or
inc
loopne
sub
mov
lock
lea
imul
dec
mov
ss
dec
gs
hlt
test
test
cmp
jmp
and
add
into
dec
loop
aam
test
xchg
jo
enter
xchg
adc
adc
cmp
jne
ja
lret
insb
jecxz
cmp
daa
jmp
in
xor
ja
test
gs
icebp
push
pop
cmp
adc
std
cmp
ss
xor
flds
addl
xchg
pop
or
mov
sub
popa
sbb
sub
popa
mov
dec
and
and
push
push
or
es
icebp
popa
into
stc
pop
lret
leave
add
fwait
xchg
mov
sub
sbb
ret
xchg
icebp
xlat
and
das
xchg
dec
std
lret
lods
pop
hlt
loopne
insb
lea
icebp
je
test
inc
add
push
ljmp
adc
sub
add
dec
pop
mov
mov
int3
xchg
mov
sub
std
mov
xor
lods
jo
rcll
pop
into
jns
adc
test
or
stos
or
repz
push
cld
fsubrs
test
repz
aaa
fbstp
or
and
xlat
cmc
js
outsl
mov
ret
and
dec
ffree
mov
in
or
js
sbb
push
iret
test
aaa
inc
dec
lahf
push
imul
in
dec
jnp
stos
mov
aas
insb
mov
and
cmp
xchg
xchg
jb
fstpt
fucom
and
jnp
mov
repz
outsb
inc
movb
test
int
das
mov
or
fnstcw
hlt
mov
lahf
sbb
mov
mov
les
test
popf
dec
cmpsb
fbld
jb
sbbb
xor
jg
lret
mov
pop
mov
fcmovnb
addr16
repz
lock
int
fs
test
ss
mov
mov
inc
pop
mov
ss
mov
jno
cmp
pop
aaa
dec
xchg
xchg
jl
sarb
fsubl
outsb
inc
es
push
notb
mov
sub
jae
cmp
sbb
aad
jge
xchg
push
ficoms
xor
pop
ret
mov
fdivs
iret
xor
push
fcmovnu
inc
sub
lret
mov
mov
xchg
mov
jle
cli
jmp
imul
xchg
je
js
sbb
movl
sub
inc
scas
fdiv
nop
enter
cmpsb
popf
in
into
cli
in
fidivl
adc
sbb
sub
lret
mov
cmp
ret
aas
fnstcw
negl
cmc
dec
fistps
push
xor
mov
and
hlt
xor
mov
out
ficomps
sbb
add
pminub
inc
jnp
push
filds
add
adc
pop
nop
mov
repz
iret
mov
push
fadds
cs
mov
in
sbb
xchg
fcom
jmp
pop
and
fidivrl
cltd
and
ficomps
loopne
xor
mov
enter
std
mov
cmpsb
repz
xor
fldpi
mov
ss
push
or
xchg
dec
imul
sarb
and
sub
hlt
xchg
xor
add
and
or
imul
les
or
jbe
pushl
pop
fstpt
lcall
pop
ss
sarb
out
mov
cmp
xor
es
adc
sbb
mov
or
hlt
fadds
cmpsl
lret
cld
lods
mov
bound
sbb
sub
inc
mov
jp
add
adc
arpl
dec
jbe
aas
mov
sub
and
add
cli
div
test
inc
pop
or
mov
ljmp
and
addr16
pop
xchg
sarl
bound
fcmovb
xor
mov
sub
mov
lret
call
cmpb
mov
mov
inc
pop
lock
call
in
jmp
ret
rcrl
cmpsb
bound
lret
dec
and
and
xchg
jne
xchg
imul
dec
aad
cltd
and
fwait
push
addr16
lds
and
lock
out
xchg
or
jp
xchg
loopne
test
push
fwait
les
mov
push
fdivl
xchg
in
xchg
mov
dec
inc
xor
xchg
in
notb
sbb
iret
mov
loop
mov
cmpsb
aam
imul
outsl
movsl
xor
pop
into
outsb
sti
shll
cld
xchg
push
outsb
mov
pop
fbstp
nop
add
pop
push
push
repnz
shll
jecxz
xchg
sahf
repnz
sub
stos
adc
mov
out
xchg
imul
stc
hlt
jmp
lret
push
mov
testl
push
sub
pop
lret
jb
imul
push
inc
xchg
pop
push
sub
lods
test
in
pusha
sub
adc
mov
or
jae
mov
imul
orl
jmp
add
lcall
cmp
cmp
push
arpl
cltd
sbb
or
inc
mov
sub
push
pop
cmp
ret
inc
inc
lcall
mov
mov
mov
icebp
lret
leave
ja
outsl
cmc
les
sub
add
inc
test
mov
leave
jg
ss
in
mov
call
jo
pop
stos
ret
lahf
or
sub
movsb
pop
mov
mov
je
ss
mov
daa
dec
out
jnp
divb
inc
fidivl
ljmp
bound
mov
sub
add
imul
out
imulb
stos
dec
inc
in
xor
xchg
xchg
or
pop
test
inc
fsts
adc
xor
out
fcmovu
test
movsb
pop
push
or
or
scas
mov
push
ds
dec
xor
lea
insl
push
dec
pop
jb
inc
push
mov
rcrb
js
cmp
lea
cmpsb
xchg
loope
popf
cmc
and
loop
or
negb
mov
cmpl
cltd
push
sbb
dec
dec
cmp
jns
fldcw
popa
fnstsw
xor
mov
out
data16
nop
rcll
adc
out
fildl
xchg
add
or
in
lods
clc
push
push
push
and
push
mov
xor
clc
jb
jb
dec
lret
or
arpl
dec
les
pop
dec
mov
filds
cmp
mov
or
ljmp
xor
adcl
nop
stc
sub
add
xlat
mov
jno
push
popa
pop
cld
decb
lods
in
pop
divl
in
loopne
and
into
outsl
pop
push
daa
adc
push
int
arpl
popa
adcl
xchg
cmc
jnp
add
inc
imul
leave
sub
out
mov
repz
push
adc
cmp
cmp
or
lahf
and
push
in
and
cs
sub
and
gs
dec
inc
mov
xchg
and
or
mov
inc
jp
in
dec
repnz
loope
mov
shll
add
pop
xchg
aas
push
lahf
adc
pop
mov
insb
jne
xor
punpckldq
std
xchg
ret
enter
ja
xorb
div
cmp
shrb
xchg
pop
pop
stos
mov
jns
cmc
aas
sub
fs
cmc
das
cmp
mov
int
stos
pop
enter
mov
lds
and
popa
xchg
xchg
inc
dec
inc
and
cmp
fstl
iret
inc
push
int3
xchg
fwait
cli
add
and
ja
pushf
imul
adc
out
mov
dec
pusha
scas
dec
fcmove
rorb
std
pusha
rcll
dec
jbe,pn
cmc
fstpt
jmp
popf
and
jae
jo
sbb
jo
mov
sbbl
sbb
addr16
les
adcl
cmpb
and
add
addl
ds
lods
pop
cmp
out
out
xor
mov
adc
mov
shl
int3
sti
shrl
pop
cmc
lahf
popf
push
shlb
sbb
lds
dec
jl
hlt
fadds
in
sub
push
push
xor
push
inc
and
int
pop
sub
mov
hlt
shr
mov
dec
int
movsb
iret
push
xlat
push
mov
sbb
imull
sbb
sub
xchg
fwait
scas
mov
inc
xchg
xchg
add
xchg
and
jne
or
sbb
and
subb
sbb
dec
adc
pop
push
dec
inc
inc
sub
movsb
imul
jnp
ss
mov
add
and
pop
sub
loopne
sub
push
mov
js
xor
loopne
dec
test
dec
aad
mov
xor
xor
lahf
lock
in
icebp
adc
or
mov
fldcw
inc
cmp
mov
ss
sub
testb
add
outsb
xchg
sbb
iret
imul
adc
rorl
xor
dec
inc
adc
testl
out
shlb
inc
or
fldl
bound
in
movmskps
enter
xor
jbe
mov
out
adc
xor
sbb
std
mov
cs
inc
pop
pop
sbb
fmuls
fisubrs
fistl
dec
out
xor
fstl
xchg
dec
sysenter
out
lods
sbb
lahf
stos
adc
sbb
clc
icebp
add
icebp
stc
addr16
add
sub
cli
scas
iret
mov
in
cmc
pop
js
or
adc
les
pop
test
inc
ja
out
dec
mov
lahf
jle
or
mov
jo
push
push
cmpsl
sbb
fimuls
loopne
mov
cld
mov
mov
nop
stc
out
dec
fsubrl
rorl
mov
sub
sbbl
mov
push
inc
cmp
jno
push
mov
mov
and
mov
push
inc
aad
push
mov
ljmp
or
dec
cmp
inc
ljmp
lds
ffreep
lcall
cmp
test
out
and
xchg
xor
adc
mov
jecxz
pushf
push
shrb
mov
or
clc
cmp
adcl
sub
jge
adc
add
xor
mov
lods
mov
enter
les
lods
adc
arpl
pop
push
aam
movsl
mov
ljmp
or
cli
imul
inc
arpl
jo
sahf
or
rcll
xchg
pusha
xlat
cmpsb
ljmpw
pop
cmp
cmp
sbb
or
xchg
xchg
outsb
xchg
scas
rorl
aaa
sti
cmp
or
popa
hlt
das
push
lds
adc
nop
mov
inc
icebp
lahf
ja
repnz
data16
cmp
ds
dec
cmp
sbb
mov
mov
mov
cmpsl
rcrb
movsb
push
sbb
or
inc
push
inc
jb
jbe
inc
movntq
repnz
aam
add
xlat
scas
mov
cmpsl
pop
punpckhdq
fmull
pop
outsl
xchg
inc
pop
add
shrl
pop
fists
jae
add
jl
icebp
inc
inc
push
hlt
test
leave
stc
pop
sub
mov
inc
in
xchg
test
in
sub
add
xchg
sbbb
cmp
rcll
loope
or
pushl
mov
mov
nop
aam
jmp
insl
cs
iret
jge
xor
jg
push
pop
mov
jp
xchg
xor
pushf
mov
lods
dec
jnp
ret
adc
sbb
das
lret
pusha
lods
jmp
pop
mov
jns
scas
jns
mov
pop
insl
rclb
push
xor
jnp
movsb
fsubrl
sub
fsubp
ja
pushf
pushf
cs
insl
das
lock
mov
cmp
xchg
loop
adc
xor
cmp
movsl
xchg
lahf
push
in
sbb
pusha
loop
scas
sbb
push
jns
loopne
es
sub
ss
ds
xchg
in
cs
out
sub
inc
cld
mov
mov
mul
rcll
jl
jp
aas
jns
and
add
jg
fwait
adc
mov
lret
cmc
pop
sbb
scas
xchg
jo
mov
jmp
or
je
cmp
rcr
sub
dec
jecxz
int
push
popl
xchg
fistpl
in
ret
lods
bound
push
lret
mov
repz
pop
adc
dec
lcall
ja
iret
ret
fldl
int
test
int3
and
jbe
adc
or
out
imul
sub
inc
add
fbstp
loope
test
lods
sub
shll
pushf
dec
mov
fisubs
ret
xor
jo
or
mov
pop
loope
scas
lcall
dec
aas
lcall
enter
or
outsb
ds
add
add
leave
call
mov
ret
or
fildll
cltd
ret
js
xchg
fistpll
push
clc
sahf
sub
int
aas
mov
inc
mov
frstor
mov
std
adc
adc
xchg
sbb
aas
pushf
gs
sub
aas
inc
test
mov
es
fdivrl
mov
pop
insl
gs
loope
sub
nop
aas
mov
xchg
dec
aaa
int3
mov
js
sub
push
and
stos
sub
xor
xchg
lahf
lret
xchg
dec
call
xchg
inc
or
in
movsl
add
xor
cmp
sub
cmp
sarl
data16
add
adc
jno
push
xchg
es
inc
cmp
loopne
arpl
pop
insl
sub
inc
les
pminsw
and
insl
dec
cmpsl
test
and
stos
pop
mov
insb
mov
not
std
ds
insl
push
mov
lret
call
mov
in
testl
dec
loop
mov
mov
xor
cmp
sbb
ss
xor
jne
mov
push
push
jle
sbbb
sbbb
rorl
incl
fistl
xor
pop
fwait
push
push
push
mov
mov
out
pop
add
dec
leave
adc
icebp
dec
test
add
sbb
stc
push
dec
movsb
out
lock
push
shr
cli
out
cmp
rcrl
cli
push
hlt
xor
je
push
clc
xor
je
iret
xor
call
out
ja
pop
rolb
lret
je
mov
or
daa
add
mov
cmp
sub
inc
adcb
jle
popf
fcomp
jp
push
mov
xchg
stos
xchg
adc
out
push
mov
cmc
sub
cmp
or
push
mov
stos
out
and
cmp
dec
sbb
or
mov
lahf
aas
idivb
jne
push
out
sbb
adc
icebp
outsl
dec
adc
lret
adc
mov
jecxz
or
dec
data16
sar
bound
cmp
dec
sbb
mov
or
inc
fldl
stc
push
stos
mov
jecxz
test
sbb
cmp
mov
scas
aas
inc
cmc
jmp
pop
dec
bound
mov
xchg
and
pop
aad
leave
xchg
stos
jecxz
add
push
sub
jne
lret
mov
out
cmc
or
inc
pop
lods
int
insl
jae
stos
mov
retw
mov
sbb
imul
sbb
or
xor
cmpsl
xor
clc
dec
and
and
in
rorb
push
pop
sbbl
lcall
jl
loop
xchg
inc
mov
stc
and
std
xchg
lock
add
data16
or
push
mov
pop
inc
lock
xchg
pop
or
orb
jnp
addr16
pop
and
cmc
ret
cmpsl
insl
stc
aam
or
and
xchg
aas
or
jl
mov
cmp
leave
out
sub
repnz
into
outsl
stos
xchg
in
add
push
test
sub
sub
test
jbe
into
inc
and
xchg
inc
sub
ja
inc
inc
or
jecxz
pusha
adc
mov
or
imul
or
test
or
xchg
stc
adc
dec
push
lods
daa
adc
push
repnz
xor
sub
adc
and
jp
sbb
andb
and
cmpb
fmull
adc
push
std
sub
cli
cmp
loop
pushf
lcall
add
pop
pop
mov
xor
andl
fcoms
fmull
notb
sub
scas
mov
addr16
inc
sub
stos
mov
out
jl
fisubrl
bsf
push
and
xor
test
cmp
xchg
fiaddl
testl
mul
std
adc
xchg
adc
pushf
sarl
pop
mov
and
push
sarb
or
andb
fwait
aam
fdivs
push
loopne
add
cmpsb
pop
clc
ja
mov
sbb
add
sub
sahf
int
pop
int
rclb
add
push
aad
cli
inc
inc
cmp
dec
xor
dec
mov
fcomi
xlat
adc
cli
mov
pop
mov
std
call
xor
mov
cmovg
int3
xlat
add
mov
mov
jle
lea
cmp
lret
add
ficomps
fwait
jae
fsubs
dec
jmp
aas
add
nop
push
sbb
jb
lcall
je
jbe
xor
shll
shll
mov
outsl
iret
or
imul
add
push
lock
xchg
sbb
lret
xchg
adc
mov
push
mov
dec
jns
pusha
or
push
push
dec
xlat
mov
lock
int3
cmp
sub
jb
insl
add
lret
pop
xor
sub
test
jbe
inc
xchg
sub
mov
xchg
jge
inc
xchg
push
mov
stos
mov
leave
add
fs
loope
icebp
sahf
push
adc
shlb
cmp
inc
jo
ljmp
or
xor
add
imul
jnp
xor
adc
mull
and
ds
push
aaa
jae
fs
fdivl
out
pop
fdiv
push
inc
hlt
mov
outsl
adc
subb
data16
les
mov
cmp
xchg
cmp
pop
fimull
out
adc
orb
adc
out
fisubrs
add
leave
lahf
lods
pop
scas
movsb
cmp
fsts
pop
fcmovb
sbb
loope
arpl
jp
mov
xor
xchg
std
fisttpl
cmpsl
stc
into
in
mov
xor
cmp
jge
aad
out
dec
add
jo
or
test
in
fs
inc
jg
adc
jno
outsl
std
and
push
cmp
and
je
sti
lahf
jne
outsb
pop
out
bound
popf
cltd
push
adc
in
jns
adc
jge
dec
pop
inc
dec
adcb
stc
dec
dec
shll
xchg
xor
mov
mov
mov
popa
insb
ret
cmp
repz
outsb
or
test
lock
adc
push
fcoms
sub
dec
outsb
aaa
jno
imul
fucomip
add
sarb
in
ftst
jno
xor
das
push
mov
into
cmp
xor
ret
mov
loop
xchg
out
in
shlb
subb
mov
aas
shlb
xlat
pop
mov
pop
mov
dec
xor
dec
inc
subb
pop
dec
inc
or
fdiv
sub
ja
lea
rclb
dec
or
xchg
in
in
int3
inc
pushf
cmp
mov
imul
and
xchg
and
jne
sbb
push
xor
test
ja
imul
flds
xchg
jne
ss
ret
cld
and
pop
imul
cmp
mov
mov
hlt
ret
loope
jmp
push
enter
mov
jbe
adc
or
popf
adc
shlb
testl
pusha
out
pop
lahf
pop
shrl
into
addr16
and
cwtl
movsl
inc
sub
mov
xor
out
arpl
movsl
sub
adc
jo
and
and
cmp
push
sub
shrl
xlat
and
cs
dec
in
mov
pop
inc
loope
xor
adc
pop
leave
orb
aaa
mov
sub
cmc
add
mov
jno
roll
lds
adc
into
movsl
or
daa
sbb
mov
sub
mov
mov
mov
or
call
jne
cmp
cli
mov
imul
ljmp
sbb
fdivl
and
imul
inc
push
int3
stos
mul
out
cltd
jmp
repnz
pop
icebp
loopne
test
sub
inc
fdivr
adc
ret
rorb
test
or
jle
movsl
mov
pop
dec
jo
xlat
arpl
out
xchg
jmp
pop
cmpsb
in
add
fdivrs
cmp
inc
fs
mov
in
sbb
mov
jecxz
or
lods
mov
cltd
lea
mov
push
ss
push
cmc
dec
inc
inc
lods
xchg
lds
dec
lahf
repnz
cmp
fmulp
clc
xor
addr16
addl
lret
iret
push
lea
pop
sub
imul
cmp
cld
aam
sti
in
les
sbb
mov
jmp
rcrl
out
je
rcll
fisttpll
cs
sub
stos
inc
lods
xchg
add
add
inc
std
enter
jb
ja
push
into
ret
lcall
repz
adc
mov
mov
sbb
sahf
mov
cmc
fsts
gs
sbb
mov
add
stc
mov
dec
adc
mov
push
pop
mov
jmp
push
push
xor
push
mov
adc
mov
pop
push
in
or
std
and
lea
scas
jae
mov
push
xchg
dec
ds
jns
xor
sub
out
jl
mov
lcall
or
movsl
push
int3
lock
cmp
aas
lret
movl
mov
je
test
out
ret
mov
and
sbb
xchg
sub
cmp
xor
orl
ret
cltd
nop
cmp
inc
xchg
das
xchg
in
push
xor
stc
repnz
or
push
jl
loope
mov
cltd
cmp
cmp
xchg
add
addb
pop
push
fiaddl
pop
xchg
dec
lcall
xor
mov
and
cmp
mov
aam
or
pop
ljmp
jae
ss
lea
xchg
dec
int
inc
adc
mov
popf
dec
test
xor
ja
xchg
jp
sarb
scas
subb
je
call
mov
test
int
adc
mov
xor
xor
add
pop
insl
sahf
stc
mov
movsb
frstor
rcl
je
push
and
xchg
dec
jmp
pop
lods
xor
iret
inc
out
or
cli
notb
ret
rol
xchg
cld
dec
daa
orb
or
xchg
jae
sub
mov
out
fwait
inc
sbb
xchg
lods
ffree
mov
xor
mov
sahf
dec
out
roll
jb
idivb
aas
dec
or
loope
push
push
dec
test
jae
icebp
dec
das
test
mov
xor
mov
es
fdivr
xchg
cmp
ljmp
pop
cltd
test
xlat
mov
mov
and
inc
dec
and
push
lret
call
pop
cld
mov
daa
ret
pop
cmc
jbe
xchg
xor
std
jno
jb
push
mov
ficoml
fisttpll
xor
xchg
sbb
push
mov
xchg
nop
dec
jmp
push
ljmp
pop
inc
mov
cmp
add
scas
inc
std
out
add
jns
push
fwait
pop
ljmp
addl
aad
push
push
xchg
sbb
jg
outsl
push
xchg
cmp
cld
mov
push
in
aam
push
loop
and
outsl
jbe
mov
shlb
pushf
jp
data16
call
in
mov
fiadds
adc
insb
imul
roll
addr16
xlat
call
scas
jl
int3
nop
lods
and
adc
cmp
ret
cmp
out
and
xchg
adc
inc
push
mov
pop
mov
jbe
dec
aaa
jg
jl
inc
push
xchg
inc
sti
inc
cld
add
std
aas
or
pop
xchg
cmp
jae
mov
lcall
insl
dec
movsl
mov
test
js
adc
mov
push
les
lcall
jmp
xchg
shlb
aad
lods
movsb
out
imul
dec
and
lcall
inc
sti
les
sbb
pop
ja
addr16
shrb
aam
push
lret
popl
jae
cmp
addr16
fisttps
lahf
ja
push
xchg
insl
repz
sub
inc
pop
xchg
decl
and
out
pop
int
xchg
push
push
dec
xorl
mov
and
cltd
inc
pop
fdivrl
fidivs
fcoml
mov
addr16
dec
cmp
xchg
mov
mov
mov
and
adc
push
ficoms
add
push
dec
add
jp
dec
out
inc
pop
sbb
lods
lcall
repz
pop
adc
sbb
addb
xchg
dec
or
pop
mov
gs
cwtl
fadd
lret
push
jb
daa
dec
push
movsb
hlt
dec
sbb
adc
xor
stos
mov
add
orl
and
cld
jmp
xor
decb
mov
stc
mov
mov
add
push
push
add
inc
leave
inc
dec
in
xchg
cmp
scas
imul
push
dec
inc
outsl
dec
notl
pop
or
xorl
push
ds
out
jno
and
insl
jno
rcrb
sbb
shlb
jl
add
je
dec
data16
inc
in
mov
pusha
daa
pushf
cli
adc
ret
sub
outsl
movsb
sub
mov
sub
leave
clc
mov
push
mov
push
sub
popa
pushf
push
mov
fcom
xchg
mov
scas
sub
test
fwait
sbb
es
mov
xchg
iret
adc
sahf
mov
add
fwait
jmp
and
dec
push
lret
lock
cmpsb
dec
inc
pop
popf
inc
cmp
gs
mov
xchg
push
fcomps
pusha
mov
es
cli
mov
paddw
mov
inc
call
sbb
sti
or
lcall
call
xor
enter
xchg
leave
add
jno
jecxz
idiv
in
icebp
jnp
lods
in
dec
je
add
lds
mov
mov
pop
ds
call
add
dec
lret
cmp
lods
xorl
pop
jne
aad
outsb
jge
or
repnz
rorb
out
dec
mov
outsb
mov
mov
lods
jbe
mov
divl
dec
adc
shll
pop
and
mov
aas
and
mov
xor
aad
adc
das
add
pushf
and
push
popf
mov
lret
movsb
popa
lret
push
out
jno
inc
push
sub
and
pop
and
mov
sub
push
gs
push
cmpsl
jo
mov
mov
int3
inc
mov
or
push
push
mov
sub
pushf
outsl
pop
aas
out
loopne
adc
xor
pop
jecxz
mov
insl
in
dec
stos
data16
dec
jns
mov
out
scas
loope
pop
enter
or
pop
pop
mov
lock
imul
out
fdivl
adc
xchg
or
mov
loope
cltd
enter
ret
shrb
push
movsb
enter
sarb
xchg
sub
test
and
dec
pop
rep
push
out
insl
xor
pop
dec
mov
cmp
movsl
int3
scas
mov
and
push
lret
or
pop
jne
inc
jge
icebp
addb
lds
push
inc
jbe
out
gs
sarb
dec
insb
movsl
pop
cli
scas
push
gs
inc
popa
mov
cmp
dec
bnd
fcomp
ss
lahf
pop
adc
dec
cwtl
push
int3
lods
mov
in
adcb
dec
pop
xchg
loope
icebp
sbb
adc
in
enter
int
stos
mov
xchg
or
rcr
mov
movsb
shll
and
or
sbb
fiaddl
cmp
imul
idivb
xor
or
negl
std
sbb
fsubrl
js
cmpsb
jo
mov
mov
sbb
xchg
xor
or
and
leave
mov
dec
jb
and
jmp
pop
push
decb
test
inc
push
es
inc
adc
fistpll
inc
fstpl
adc
lahf
fdivrs
push
jmp
inc
push
inc
cmpsb
jge
mov
push
outsb
adc
decl
dec
cmp
mov
adc
inc
lods
mul
and
sbb
jo
mov
push
jp
xor
add
lock
jl
aaa
addb
inc
jbe
loop
cmc
outsl
fcmovnb
std
enter
and
push
pop
mov
xchg
xchg
dec
xor
fbstp
jp
push
outsl
or
xchg
cmp
cs
fnop
out
pop
sbb
mov
push
bnd
mov
sub
cli
addr16
inc
arpl
jle
mov
loopne
cmpsl
aam
adc
dec
rclb
mov
outsb
xchg
leave
cli
cmp
lods
enter
adc
pop
loope
lock
int3
pop
pusha
outsl
ss
ljmp
dec
ret
pop
adc
xorl
adc
pusha
xlat
push
insb
mov
adc
sbb
jns
cli
popf
sub
sahf
in
sbb
jmp
pop
pusha
inc
outsl
xor
pop
lret
mov
test
xchg
xor
aad
inc
dec
movsl
outsb
xor
fwait
mov
stc
sub
mov
pop
jp
hlt
addr16
out
stos
arpl
call
mov
bound
add
pushl
dec
and
addr16
xchg
roll
xchg
xchg
insb
popf
mov
adc
add
sub
mov
lea
inc
xchg
cmp
movsb
sbb
insb
das
icebp
adc
push
add
adc
pop
dec
xor
jmp
push
cmc
iret
arpl
cmp
mov
jnp
imul
xchg
inc
imul
dec
test
mov
xchg
xor
ljmp
jne
enter
push
pop
nop
pushf
mov
xor
push
jle
fs
and
xor
sbb
dec
insl
stos
pop
fs
mov
jl
cld
mov
shlb
rcrl
dec
fldl
ret
mov
add
dec
and
fstps
add
fnstcw
sbb
xor
lahf
fidivl
je
test
inc
xchg
pop
gs
cltd
movl
hlt
xchg
and
jl
push
lret
or
data16
sub
pop
dec
pusha
push
inc
pop
sub
fstpt
bound
jp
pop
sbb
ficompl
lods
sub
cld
mov
cmp
sub
jae
mov
pusha
jmp
inc
inc
or
stos
dec
pop
daa
jae
iret
popa
fsub
int
es
inc
mov
push
nop
in
daa
push
sub
or
movsb
repnz
scas
stos
and
sbb
fdivl
aas
mov
mov
cmp
push
or
clc
ja
loope
mov
cmp
mov
push
xchg
pusha
mov
and
mov
cmp
ficomps
and
lcall
mov
push
jnp
rol
and
leave
or
jmp
jns
jge
cmp
out
loopne
sub
xor
cltd
pop
add
test
sbb
push
in
dec
fwait
out
mov
push
icebp
cld
iret
dec
and
mov
in
fdivp
fdivl
push
or
adc
aas
mov
outsl
sub
stos
xchg
sbb
mov
cltd
icebp
jmp
stc
cmc
jne
adc
out
aam
je
js
fimull
cld
cmpsl
mov
push
inc
filds
xchg
and
lahf
jae
mov
sar
mov
or
clc
mov
lcall
fisubl
shrb
into
push
sbb
jecxz
and
popa
or
aad
xchg
jecxz
out
add
pop
movsl
stc
in
dec
dec
lds
mov
icebp
dec
daa
jae
stos
es
push
ret
xor
lret
xchg
loop
icebp
daa
ss
dec
pop
adc
mov
movsb
insb
out
dec
sahf
inc
adc
jne
sub
dec
mov
div
daa
sbb
sub
inc
and
jno
mov
jg
mov
not
sti
popf
iret
int
jb
test
sahf
ds
enter
imul
pop
repz
push
pushf
jp
pop
sarb
pop
push
inc
mov
and
add
sub
in
push
push
ret
test
or
aas
xor
lcall
imul
in
xor
lods
adc
cli
ljmp
fcmovu
fcmovnb
icebp
or
inc
adc
mov
cmpsb
pop
mov
ss
xor
loope
les
pop
mov
push
mov
dec
stos
insl
arpl
in
pop
pop
stc
cmpsl
mov
dec
adc
idivb
fiadds
xor
sbb
pop
incl
sub
jbe
jae
aas
outsl
sbb
icebp
rcrb
in
cmc
pop
call
aaa
adc
pop
imul
xchg
or
sub
pop
adc
mov
gs
loope
xor
pop
icebp
pop
mov
je
fisubs
push
pop
das
add
aad
add
imul
adc
pusha
and
and
mov
shlb
sub
adc
cltd
or
aad
cli
jl
ljmp
cmp
cwtl
pusha
and
in
hlt
push
hlt
outsl
jge
jbe
push
std
pop
xor
xchg
sub
nop
and
inc
adc
dec
shl
xchg
sbb
xor
sub
xor
push
inc
or
pop
stos
mov
test
dec
xchg
and
ret
add
jo
mov
inc
imul
pop
cmp
jne
inc
push
std
lahf
push
test
lock
and
fcoml
xchg
movsl
dec
call
insl
cltd
test
in
loop
in
jecxz
je
dec
loop
push
in
and
and
movsb
and
outsb
xlat
into
mov
mov
xor
jmp
in
dec
xchg
push
xchg
shrl
repz
leave
and
jnp
mov
into
cmpsb
jno
cmp
mov
xchg
imul
lret
test
enter
imul
iret
dec
and
cmc
lods
jmp
fildl
xchg
test
leave
sub
test
pop
test
cmpsl
sbb
pop
adc
lock
push
mov
or
mov
in
shll
iret
xchg
xor
outsb
dec
sbb
in
arpl
cld
aam
aaa
cld
xchg
imul
lahf
and
pop
gs
push
push
in
mov
inc
mov
sbb
lret
ror
jmp
sub
hlt
sbb
jne
adc
aam
stc
add
addr16
rorl
mov
mov
ror
shrl
sub
add
jnp
cmp
repnz
aaa
pop
movsb
jge
ficomps
adc
dec
mov
mov
sub
je
outsb
fmuls
adc
ret
pop
insb
cmp
xor
std
dec
ljmp
sahf
sub
dec
test
or
mov
insl
movb
lret
inc
cmp
out
jnp
inc
and
sub
cmpsb
cld
fstl
cwtl
leave
cmc
imulb
cmc
mov
dec
nop
call
cld
test
stos
lock
movsb
ret
adc
xchg
cmpsb
not
inc
mov
sbb
test
pop
or
ret
shlb
sbb
fsubl
ret
fists
sbb
cmpsb
rcll
mov
ficompl
fisubs
sub
mov
mov
sub
inc
mov
aam
xchg
and
adc
dec
leave
dec
mov
leave
movsl
enter
pop
lcall
or
out
test
add
pop
jmp
mov
xchg
or
mov
es
jl
cmp
cmc
nop
cmp
fiadds
pop
mov
outsl
sbb
push
loopne
out
xchg
push
adc
out
pushf
or
repz
jl
mov
ficompl
and
jno
mov
xchg
ds
xchg
test
cmpsb
or
or
mov
js,pt
inc
mov
shrb
xchg
jmp
push
cmpsb
inc
mov
mov
fisttpll
xchg
lahf
or
push
test
loopne
cmp
sbb
fcompl
pusha
imul
xchg
pop
adc
sub
fsubr
hlt
or
sbb
dec
aad
leave
cmp
daa
push
add
sub
dec
push
xlat
test
es
pop
mulb
jae
out
lea
fsubl
xor
enter
mov
or
loope
sbb
int
cmp
adc
rclb
xor
mov
mov
xorl
test
xchg
nop
out
cmp
test
es
mov
cld
add
or
test
sub
sub
cmp
mov
xor
inc
mov
enter
idivl
out
gs
push
out
loopne
mov
es
es
fcmovnb
add
adc
cmpsl
das
js
inc
outsl
lods
ds
mov
cmp
jle
mov
mov
cmc
sub
jecxz
loopne
dec
mov
std
pop
cs
pop
lahf
inc
lds
sbb
pop
iret
cmp
aad
cmp
jg
xchg
add
mov
daa
lret
out
bnd
cmc
stos
mov
fst
clc
adc
pop
mov
enter
gs
sbb
scas
repnz
push
sbb
rorb
aas
subl
xor
xor
decb
lock
negb
jb
je
xor
pop
and
test
aad
fdivrs
stos
sbbl
jbe
std
mov
loop
add
pop
shr
fildl
xor
mov
repnz
ret
das
aam
repnz
out
fcmovnu
insl
fs
push
xchg
pop
rolb
insl
shl
mov
jns
xchg
lea
xor
mov
xor
iret
nop
das
aam
jp
out
pushf
sub
mov
jg
sub
call
shlb
push
aam
sbb
pop
xchg
ja
testl
sub
inc
lcall
jns
test
lock
rcrb
push
jns
push
cmp
jmp
roll
lea
int3
push
movsl
push
jb
adc
xchg
cmpsl
gs
and
iret
adc
aaa
add
cmpsl
lret
scas
loope
pop
fistps
fisubrs
icebp
xchg
jmp
jbe
mov
imul
fsub
pop
scas
cmp
cmp
mov
cmp
xor
ret
jecxz,pn
orb
and
mov
xchg
test
jp
cltd
jnp
repz
xorl
fsubrs
bound
fcmovne
call
mov
pop
and
repnz
fimuls
cmp
xchg
sahf
test
or
std
mov
pop
movb
add
sub
imul
jmp
test
push
jns
mov
jns
sub
xorl
js
shr
nop
or
stc
cli
fldcw
inc
pop
fnstsw
faddl
je
jl
dec
dec
jb
cwtl
lret
stos
mov
dec
ljmp
sbb
cmc
or
push
dec
dec
jmp
xchg
lcall
dec
mov
pop
mov
pop
jge
pop
imul
adc
or
sahf
aad
mov
dec
jae
sub
jnp
loope
mov
gs
fildl
dec
xchg
jl
xchg
popf
lods
ss
out
mov
jp
push
jp
sahf
sub
mov
mov
jno
push
jne
outsl
lods
imul
popa
push
jge
sub
mov
out
and
and
ja
sub
sub
stc
mov
xor
xchg
sub
xchg
js
add
je
ret
add
mov
insb
adc
cwtl
in
movsl
inc
pop
fstl
adc
jae
rcrl
mov
dec
ret
cmp
inc
loop
sbb
sbb
pop
pop
push
mov
push
les
dec
cmpsb
fst
outsb
dec
pop
je
mov
hlt
fnstenv
test
vmovsd
xchg
jmp
and
and
or
mov
enter
jle
out
lcall
ljmp
jmp
sahf
pop
test
mov
push
mov
mov
jne
mov
out
gs
out
fprem
pop
nop
pop
lcall
insb
push
pop
cwtl
stos
or
cld
lahf
sbbb
mov
int3
lea
addr16
and
xchg
add
lret
outsb
nop
outsl
bnd
xchg
fwait
les
mov
pop
or
or
jle
rorb
inc
add
pop
cmc
adc
adc
cmp
bound
xchg
xor
add
pop
cmc
jb
xchg
mov
mov
inc
push
push
imul
cmc
adc
mov
out
push
xchg
fists
pop
lcall
test
xor
shl
add
push
jbe
shrl
inc
data16
cmc
rcll
mov
pop
push
jb
or
roll
mov
popf
clc
dec
into
push
fwait
cmp
sbb
mov
and
aad
mov
mov
add
mov
push
jo
or
ss
aaa
les
enter
stos
mov
shlb
add
add
inc
inc
mov
scas
pusha
mov
xor
mov
mov
mov
pop
push
in
and
divb
mov
mov
into
add
xor
in
xchg
or
arpl
test
je
fists
lea
sbb
xchg
sarb
xor
imul
test
push
sbb
sarb
cs
push
fs
cltd
jo
icebp
add
and
sahf
dec
mov
iret
mov
jo
dec
inc
popa
notb
jecxz
inc
daa
lret
or
out
lcall
mov
add
ret
cs
mov
stos
xchg
stos
rcr
add
repnz
push
mov
enter
add
push
jne
mov
inc
into
test
lods
inc
lods
adc
cmp
nop
dec
gs
bound
jg
cmp
adc
jl
cmp
mov
or
mov
and
dec
loopne
sarb
and
dec
sub
cmpl
test
inc
lahf
imulb
out
and
out
pop
mov
or
data16
jb
jle
ja
or
outsl
push
pop
aaa
and
lret
sbb
rcll
xor
sub
popf
nop
leave
jne
aas
pop
fs
sub
jae
mov
jmp
jns
ffree
adc
pop
shrl
sbb
jmp
dec
adc
fwait
sub
sbb
daa
jmp
adc
adc
add
lret
cmp
pop
add
outsl
xchg
test
xchg
and
push
fiaddl
mov
or
push
movsb
push
mov
aam
popa
call
cmpsb
mov
pushf
test
push
mov
ja
push
popf
dec
iret
scas
test
mov
push
mov
dec
idivb
jecxz
xchg
or
dec
xchg
in
and
sub
add
sub
adc
add
sub
dec
mov
je
xchg
dec
jns
ret
dec
leave
fwait
popa
pop
mov
pop
push
lods
mov
lcall
pop
out
ss
xchg
cli
cld
aas
je
sub
add
inc
and
subb
loopne
pop
lods
enter
daa
mov
lret
pop
sbb
aam
inc
sub
xchg
lea
idivl
mov
xchg
dec
sarb
fs
push
sub
imul
fimuls
dec
mov
outsl
and
push
icebp
addr16
in
fildll
jp
jne
add
ja
xor
pop
add
int
in
lret
add
dec
cmp
in
jb
inc
lret
fisubl
xor
daa
cmp
ficomps
and
xor
sbb
lods
jno
inc
notl
cmpsb
xor
sbb
sbb
jmp
mov
pop
sub
ds
lret
mov
icebp
aam
xchg
sbbl
jo
loope
mov
gs
es
mov
pop
cld
mov
xchg
add
push
xchg
je
push
inc
addr16
xchg
and
pop
test
outsl
cmp
jnp
das
xchg
scas
lods
jb
lcall
scas
push
aam
hlt
xchg
xchg
fbld
push
inc
enter
adc
cmp
cltd
jbe
stc
les
sbb
inc
cli
roll
sbb
les
imul
call
dec
sub
mov
fistpll
inc
loop
in
mov
adc
jmp
stos
or
xchg
cs
test
adcb
testb
sbb
mov
test
into
inc
in
push
or
stos
cld
dec
xor
mov
xor
cmp
addr16
mov
mov
mov
insb
clc
sti
ret
fwait
xchg
pop
push
fiaddl
push
mov
cmp
cmp
and
xor
sbb
cltd
mov
nop
and
insl
bts
mov
cmp
adc
push
or
push
cld
fucomi
cmp
jnp
or
fadd
sahf
mov
or
add
mov
mov
ja
or
fldt
orl
or
adc
lret
jo
lock
mov
call
cmpsb
mov
shrl
stc
or
rol
dec
cmp
dec
sbb
cltd
push
xchg
and
mov
or
push
mov
dec
fs
mov
nop
sub
dec
fwait
imul
jmp
movsl
imul
push
in
push
mov
shrl
pushf
in
mov
push
scas
pop
or
cmpsb
testb
popa
or
inc
popa
scas
jne
jp
movsl
aad
leave
pop
vunpcklps
ds
inc
dec
push
mov
enter
loop
sbb
cwtl
and
xor
andb
dec
cli
mov
xchg
icebp
mov
fstpl
inc
lret
shrb
cmp
scas
outsb
or
jp
repnz
and
ds
call
gs
jmp
es
pop
cmpsb
insb
ret
and
cwtl
push
inc
add
sub
lea
adcb
stc
outsl
xor
test
pop
mov
mov
jno
loope
repz
jnp
pop
mov
lock
insb
fisubrs
in
or
cmp
popf
out
das
cmp
adcl
cs
lods
mov
xchg
jle
jmp
imul
and
push
cmpsb
notb
inc
mov
insb
lret
xlat
sbb
mov
add
mov
fnstcw
xor
push
dec
pop
aaa
aam
fcom
std
pop
and
adc
es
adc
pop
iret
out
adc
ret
sti
cld
hlt
cmpsl
jecxz
jae
popf
daa
outsl
fst
orl
es
ret
jle
test
fwait
cmp
mov
out
push
imul
sbb
je
out
inc
test
sub
mov
les
popa
and
lock
cld
sub
inc
xor
push
jmp
pop
das
push
test
fwait
int
test
out
leave
mov
sub
into
or
imul
int3
je
sub
call
mov
inc
adc
sub
es
int3
das
lret
dec
or
in
fwait
dec
nop
popf
addl
in
cwtl
mov
and
mov
lea
and
xchg
mov
xor
lret
add
popa
push
repnz
icebp
lcall
aad
sub
aad
les
out
test
ljmp
add
test
int
cmp
push
je
inc
xor
push
xchg
out
sahf
push
add
mov
add
sub
jmp
mov
bound
scas
rcr
pushfw
div
out
cmp
test
or
mov
inc
mov
or
jbe
popa
push
adc
aas
imul
js
inc
daa
lock
add
pop
jo
and
adc
push
dec
loop
testb
pusha
bound
in
inc
hlt
mov
xchg
test
pop
cmpsl
pop
out
sti
in
fidivs
mov
movsl
xchg
out
sub
dec
adc
ds
mul
add
inc
movsl
arpl
daa
repz
jp
and
enter
adc
pop
loope
pop
inc
cs
pop
inc
jl
loop
push
and
cmp
jecxz,pn
pop
stos
lcall
repz
and
int
push
in
mov
out
mov
push
xor
xor
cltd
and
mov
je
push
dec
inc
pop
sub
mov
pop
push
lcall
xchg
loop
inc
adc
leave
mov
nop
loopne
shll
push
push
out
aaa
ja
and
mov
into
rcrl
mov
in
mov
sbb
adc
pop
xor
popa
xchg
sahf
daa
mov
pop
int
sub
mov
or
jnp
add
rorb
dec
xchg
lods
ficoms
fstps
xchg
xor
add
sbb
dec
lahf
cmp
lret
pop
mov
cmp
test
xchg
in
lcall
push
push
mov
mov
push
push
and
js
scas
daa
sub
into
jnp
and
shrl
mov
aaa
sbb
sbb
es
sbb
stos
dec
incb
sarb
mov
bound
and
ss
mov
push
pop
loope
xchg
sbb
dec
mov
roll
mov
pop
pop
cmc
loop
in
dec
pop
sti
jl
fcmovnu
fldenv
lret
stos
call
inc
and
daa
adc
push
jmp
adc
jno
jge
dec
inc
js
test
dec
mov
bound
pop
add
out
sub
pushf
lock
cs
rolb
push
lds
jmp
arpl
pop
xchg
and
add
sub
push
testb
pop
pop
in
mov
and
loopne
or
inc
ja
mov
adc
fildll
insb
and
nop
test
negl
or
push
push
xchg
in
imul
aaa
lret
test
enter
cmp
shlb
push
call
leave
repz
pop
sub
xchg
add
bound
les
jb
jg
ficompl
dec
ret
leave
inc
add
js
inc
mov
push
inc
testl
xchg
cmp
adc
scas
fiadds
enter
cmc
push
pop
test
ret
push
push
enter
inc
inc
dec
out
int
imul
inc
xchg
outsl
pop
cltd
daa
dec
movsb
adc
and
pop
pushf
insl
mov
add
pop
push
outsb
movsl
call
fs
jl
shl
inc
loope
in
jecxz
pop
xlat
jns
add
or
mov
iret
fwait
or
or
jno
loope
push
push
adc
pop
divb
and
aad
adc
popa
testb
icebp
xor
mov
mov
xor
negl
lcall
or
cmp
iret
idivl
fwait
ds
pop
jnp
ja
fwait
mov
mov
jbe
lds
sbb
mov
ljmp
or
lock
shl
add
repnz
sti
jo
popf
pop
xchg
mov
test
scas
cmc
pop
xchg
into
fbstp
lods
xchg
jg
rcrl
push
aas
dec
sar
jecxz
mov
inc
daa
dec
xchg
push
mov
xchg
xorl
mov
in
bound
jae
sub
and
cmpsl
pop
push
out
out
xor
xlat
lcall
mov
cmp
icebp
inc
das
sbb
fs
and
push
out
loope
inc
mov
mov
cwtl
bnd
dec
add
popa
mov
mov
sub
and
adc
shlb
aas
bound
ret
add
out
sbb
repnz
xchg
out
or
jg
mov
cmc
int3
mov
mov
pop
or
cwtl
sub
repnz
pop
repz
mov
lock
jle
pop
push
cs
shl
fstl
cwtl
rcl
movb
sbb
popa
mul
call
ljmp
xchg
or
negb
or
sbb
mov
shll
inc
push
cmp
std
cmp
int3
cmp
jbe
arpl
fsub
jb
xchg
push
addl
pushl
mov
hlt
mov
aaa
popf
pop
inc
orl
mov
add
mov
aad
aad
in
ret
jno
sub
daa
xor
xor
repnz
jnp
mov
pop
sub
int
enter
cmpsl
imul
xchg
adc
adc
xor
test
jg
hlt
mov
outsb
sub
jg
lock
imul
and
push
push
xchg
push
lret
outsl
pop
pop
mov
call
push
insb
jg
lods
and
js
cwtl
cmp
dec
hlt
xlat
push
dec
pop
call
pop
ja
mov
xor
popa
vfrczps
neg
jmp
and
xchg
test
jl
mov
mov
mov
pop
push
jmp
fldcw
or
testl
push
rcl
clc
dec
pop
mov
cmp
in
cmp
clc
mov
inc
xchg
cltd
adc
pop
lods
xor
ja
and
in
push
cmc
pusha
in
clc
out
and
inc
popa
pop
sbb
arpl
fmuls
dec
and
push
sub
xor
dec
inc
add
movsb
adc
jo
and
sbb
in
movsb
jecxz
pop
fistps
loopne
into
cmpsl
mov
ret
insl
adc
pop
loope
jmp
jnp
and
push
mov
mov
push
or
rcrb
sbb
cmc
jne
fldcw
push
popa
cmc
cmpsb
mov
adc
pushf
inc
movsb
add
loopne
dec
aaa
mov
ja
jne
test
push
fdivr
adc
fs
pop
popf
js
cltd
subb
aam
fidivs
xchg
pop
in
push
jnp
push
pop
cmp
fisttpll
dec
pop
add
pop
dec
push
xor
xorl
sbbl
xchg
sub
mov
mov
sahf
dec
scas
int3
inc
data16
clc
lcall
cmc
add
xorl
movsl
pushf
outsl
push
femms
jge
movsb
rol
sahf
or
adc
push
dec
imul
and
dec
sub
fnsave
mov
and
imul
mov
ret
pop
sbb
xchg
stos
inc
aad
push
pusha
inc
sbb
call
dec
data16
out
mov
aaa
dec
fwait
call
lock
push
xchg
add
mov
test
pushf
inc
or
cwtl
mov
or
jmp
push
cmp
ja
lock
mov
pop
hlt
gs
fimull
push
mov
xchg
inc
sti
iret
insl
inc
push
and
pop
dec
sub
mov
mov
outsb
push
sub
fnstenv
push
aad
les
push
pop
outsb
inc
std
cmp
mov
mov
lcall
ret
add
mov
mov
mov
fnstsw
sbb
push
or
cmpsb
mov
hlt
mov
add
or
fstl
int
fists
call
hlt
sub
mov
jmp
scas
cmp
hlt
test
fcmovnu
or
jle
test
jp
mov
sbb
sub
loop
sub
or
and
jle
jecxz
jno
shlb
mov
lods
xor
fs
lods
jg
xchg
mov
pop
sbb
shl
dec
add
and
push
dec
lahf
pop
stos
cmp
cltd
dec
imul
fld
sub
ja
dec
iret
adc
xor
cmp
pusha
scas
cmp
rolb
ljmp
aad
xor
push
adcb
mov
popl
rcll
stos
ja
jb
cmpsb
scas
jecxz
fwait
dec
sub
sti
fidivrl
push
sub
jbe
inc
or
in
daa
xor
dec
pmullw
sub
out
push
sub
inc
test
jo
pop
pop
inc
mov
sti
popf
jo
inc
pop
xchg
addr16
dec
mov
js
popa
push
xor
add
jecxz
xor
jmp
sub
rolb
jmp
sbb
fcmovu
arpl
mov
mov
addr16
cli
shrb
je
dec
cmp
ret
cmp
andb
mulb
adc
js
push
divb
cmp
mov
xor
lret
cs
inc
lret
mov
ds
ror
pop
int3
and
pop
sub
mov
xchg
das
and
sbb
jns
popf
xchg
cmp
jbe
jne
shll
pop
scas
loopne
jbe
jo
mov
in
repnz
dec
repz
mov
sahf
dec
pop
push
lods
stc
in
mov
mov
add
fisubrs
in
mov
jnp
jl
test
xchg
call
jnp
sbb
fdivrl
call
aad
rol
and
xor
mov
mov
inc
int
lea
mov
stos
push
sub
into
xchg
lahf
insl
cmp
and
notl
arpl
xor
or
popf
stc
or
jp
subl
mov
cmp
mov
push
mov
scas
aam
rcl
xor
nop
test
lds
jle
sahf
mov
stos
imul
cmpsl
fwait
mov
adcl
inc
mov
std
sahf
sbb
stos
mov
mov
and
shlb
dec
aad
stos
pop
je
xchg
out
outsb
xchg
sub
je
cmp
cmp
clc
and
notl
or
dec
hlt
leave
mov
stc
js
punpckhdq
shrb
xchg
mov
jnp
outsb
ret
adc
mov
icebp
iret
cltd
mov
mov
popf
ss
pop
outsb
inc
push
and
lret
stc
lcall
cmpsb
je
leave
xchg
push
cmpl
cmc
pxor
sbb
jnp
mov
xchg
sbb
xchg
or
dec
dec
pop
adc
test
aam
test
sbb
pop
cmc
cmp
xchg
addr16
sbb
fcmovu
push
or
sub
jl
push
dec
lods
in
jge
mov
pop
inc
dec
dec
mov
jb
lds
fisttpl
pop
push
das
adc
xor
in
pop
sbb
mov
xor
push
jns
jae
push
loopne
lds
es
stos
sbbl
cmpsw
loope
out
sub
insb
mov
add
aaa
mov
push
mov
iret
mov
and
out
js
mov
or
loopne
insb
add
dec
in
arpl
sub
mov
xchg
mov
and
cmp
out
fsubs
mov
and
mov
sahf
imul
jb
test
stos
or
adc
dec
and
or
or
test
pop
dec
sub
stos
mov
bound
cli
ljmp
sbb
xlat
mov
ret
ficomps
or
mov
xchg
fwait
xchg
inc
pop
cmp
stos
mov
call
mov
xchg
xor
jns
sub
mov
ds
mov
or
shl
fstpt
out
jl
jne
or
jae
jecxz
idivl
add
or
test
repnz
pop
dec
mov
push
divl
cmp
imul
jl
loop
sbb
sbb
sbb
movsb
sub
dec
rclb
rcll
cmc
fs
in
xchg
lret
iret
iret
ffree
lds
das
aad
sub
jl
mov
inc
jbe
cmpsb
push
gs
and
pop
in
push
rcll
mov
xchg
movsb
addr16
stos
mov
push
mov
lods
jmp
ds
jbe
add
in
mov
push
repnz
or
sub
dec
fadd
fstps
push
xchg
sti
insb
push
ret
icebp
cvttps2pi
mov
rcrb
lret
cmp
dec
loop
xchg
sbb
aam
out
aaa
rolb
fs
inc
mov
fldt
sbb
inc
dec
pop
daa
or
mov
loope
mov
push
or
aas
mov
ljmp
int3
and
shll
mov
mov
adc
mov
movb
dec
and
daa
repnz
aaa
mov
repz
test
insl
add
aam
lods
pop
xor
push
dec
mov
jne
mov
mov
cld
push
test
in
pop
mov
xor
icebp
or
out
push
jae
or
clc
mov
adc
and
mov
test
mov
repz
inc
jne
outsl
out
push
sub
sub
aam
xchg
mov
cmc
pushf
cmp
xor
hlt
adc
push
enter
xor
popa
scas
scas
cmp
dec
loope
int3
into
jno
gs
loop
mov
loopne
into
iret
mov
cs
nop
xor
and
cmp
and
push
andb
mov
test
push
sub
dec
push
imul
rorl
sbb
je
fidivrs
adc
push
pop
in
push
arpl
jl
daa
push
and
aad
fsub
dec
in
loopne
mov
leave
repz
and
addr16
mov
mov
js
inc
or
or
add
mov
daa
popf
sarl
clc
clc
rorl
mov
xor
lret
mov
adc
dec
and
xchg
dec
xor
jmp
lret
pop
jl
mov
xchg
adc
fbstp
and
mov
xor
xchg
adc
es
dec
scas
subl
fcmovnbe
jl
leave
adc
jae
in
and
jb
cli
xchg
xor
mov
and
cmp
sbb
nop
ss
xchg
adc
inc
push
pop
pop
adc
pusha
in
imulb
add
ja
or
std
stc
js
insl
pop
mov
push
xor
or
xor
xchg
jge
push
in
inc
ljmp
rorl
mov
cmp
push
lods
fdivrs
fsubrl
outsl
lods
ror
loope
inc
negl
jge
cmpl
jo
push
xchg
outsl
cmp
adcb
mull
push
outsb
loope
outsb
lds
and
int
daa
and
addr16
mov
mov
sub
cmp
jmp
int3
or
shr
jl
or
imul
test
divb
out
into
xlat
dec
or
sub
jg
into
adc
dec
loop
jl
cmp
aaa
stos
fmull
sbb
xor
add
test
pop
movb
lahf
adc
rcr
pop
pop
aas
hlt
psllw
leave
jp
add
fcmovb
insb
adc
jae
insl
adc
mov
push
lods
stos
negb
xchg
mov
and
rep
idivl
imul
testl
push
mov
faddl
xor
add
ljmp
das
xchg
cmp
inc
or
mov
jo
iret
pop
addl
or
adc
scas
daa
repnz
imul
jae
in
cmp
cltd
sbb
in
cmp
mov
sbb
fmuls
cmp
push
mov
cmc
mov
sbb
popa
scas
sbb
shll
push
xchg
cwtl
icebp
lds
xor
scas
mov
les
imulb
movsl
and
sub
loope
imul
icebp
sub
mov
pop
and
pushf
fsubl
popa
sub
addb
dec
push
jmp
lds
xchg
lock
stc
push
and
jge
shrl
sbb
mov
mov
xchg
cltd
add
pop
loope
jnp
enter
test
pop
and
mov
out
mulb
mov
mov
lahf
call
js
dec
testb
or
loope
enter
add
pop
shll
es
arpl
ja
lods
xor
mov
movsb
das
pop
jae
dec
outsb
fidivrs
adc
mov
lods
ret
int
dec
aad
xchg
jmp
adc
mov
pushf
xchg
adc
sub
iret
daa
mov
sub
arpl
jp
shlb
add
js
clc
inc
mov
mov
add
je
and
cmp
in
jae
mov
mov
xchg
dec
push
jmp
adc
jmp
sarb
push
rol
xchg
xchg
shll
push
roll
imul
addr16
dec
jns
mov
adc
cmp
cld
sub
xchg
decl
fldcw
push
dec
cmc
mov
push
adc
mov
add
mov
xchg
ja
push
mov
xor
fwait
mov
add
and
xor
ror
clc
sub
icebp
xlat
mov
dec
inc
sub
xor
int3
pop
push
ljmp
sub
fcoml
push
into
jp
mov
mov
fmuls
popf
push
cli
sbb
shll
push
inc
mov
xchg
data16
and
pop
and
in
add
or
inc
mov
cmp
int3
jge
push
dec
jbe
js
sbb
es
leave
sbb
mov
popf
adc
in
sub
jmp
mov
lds
pop
add
stos
int3
jmp
test
bound
movsb
fiadds
push
fs
xor
mov
adc
pusha
imul
jbe
cmc
push
enter
mov
fimuls
dec
insb
cmpsl
cli
push
xchg
push
push
xor
ret
pop
xlat
pop
add
ljmp
mov
les
jecxz
out
mov
scas
negl
ret
inc
inc
pop
mov
adc
mov
xchg
fisubrl
test
sarl
lcall
repnz
fcmove
jg
roll
push
jne
sbb
dec
lret
scas
inc
fistps
jmp
adc
outsb
lcall
xor
xchg
jns
out
jmp
jbe
and
sub
je
xor
out
sbb
adc
subl
mov
addr16
xchg
jmp
lcall
push
out
jns
dec
jg
xchg
imul
lods
xor
cltd
and
and
jnp
mov
fwait
add
movsb
mov
xor
push
dec
paddw
mov
mov
mov
shl
adc
push
fdivrs
lret
inc
dec
jae
bound
pop
clc
lahf
mov
jmp
rol
sti
mov
mov
imul
mov
jnp
cmp
movsb
push
inc
cmc
mov
idiv
jne
push
lcall
rcrb
pushfw
xor
push
push
mov
ret
arpl
add
loop
fists
xchg
test
iret
notb
adc
dec
int3
sub
loopne
inc
out
dec
movsl
movsb
out
cltd
mov
inc
in
xor
dec
push
push
jmp
xor
test
inc
rep
mov
in
lret
dec
icebp
ficompl
pop
xlat
in
frstor
jbe
test
inc
fadd
xchg
imul
and
sbb
mov
or
sbb
sbb
in
pop
mov
xchg
cmp
ds
cmc
mov
and
fs
int3
dec
fcmovbe
sbb
lds
idivl
out
in
test
in
lock
fdivrl
insl
rorb
lds
mov
mov
mov
jge
mov
mov
cmpsl
bound
adc
test
popa
xchg
movsl
mov
jecxz
and
dec
sarl
aas
lret
xor
and
push
pop
ss
mov
sub
sub
push
push
insb
icebp
and
incb
clc
push
loope
nop/reserved
or
jne
push
jne
jo
stc
enter
xorb
push
dec
bound
fisubl
adc
jmp
sahf
mov
scas
loop
pusha
adc
and
cmpsl
sar
aas
jg
mov
loopne
jo
or
add
fldt
xchg
lret
pop
int
mov
arpl
mov
xchg
push
inc
scas
dec
es
fucom
dec
xchg
dec
flds
push
mov
dec
mov
daa
lret
mov
das
mov
inc
jne
add
mov
addr16
xor
mov
loopne
ljmp
mov
adc
mov
outsl
loopne
pushf
cs
xor
cli
aas
fwait
addl
inc
sub
aaa
inc
mov
and
jb
aad
sub
or
and
arpl
dec
fidivrl
lock
subl
jae
hlt
rcrl
loope
int
dec
cwtl
sahf
mov
imul
lock
fisttps
iret
xchg
out
rcrb
push
cmp
aad
inc
add
and
aas
adc
sub
push
xlat
adc
mov
xchg
shll
divl
mov
cmp
mov
mov
mov
inc
mov
mov
call
jns
dec
mov
arpl
mov
shl
hlt
fsts
popa
mov
sub
adc
mov
adc
jns
or
fucomi
jecxz
mov
fincstp
jle
sahf
jne
lea
mov
gs
jnp
in
add
les
arpl
stos
mull
sub
push
lcall
dec
jecxz
adc
add
jno
out
fisubl
loop
ljmp
scas
adc
mov
aas
sbb
sti
nop
inc
cltd
mov
rcrb
sbb
sub
in
mov
fmuls
test
dec
adc
jmp
nop
cvtps2pi
or
std
imul
push
divps
push
adc
push
cmpsl
mov
cmp
das
test
xchg
pop
cmp
stos
push
add
test
inc
adcl
push
iret
leave
mov
inc
xchg
push
iret
sub
outsb
mov
shlb
jle
insl
mov
cli
fcmovnb
inc
negb
mov
inc
inc
xchg
jae
lock
in
jnp
cmpsl
fs
sub
lcall
inc
or
cmpsl
sahf
push
sbb
or
imul
mov
stos
dec
aam
add
cli
adc
rol
inc
fwait
or
mov
out
in
mov
or
push
pop
xchg
ficompl
jge
add
fimuls
cli
hlt
sar
jne
cmp
loopne
mov
mov
scas
pop
nop
sub
dec
jg
ds
ret
imul
pop
lret
ds
cmp
cmp
push
mov
cmp
fildll
rcll
dec
cmpsl
je
or
adc
mov
xchg
sbb
cli
add
push
ljmp
rcrb
pop
in
inc
jl
arpl
and
jmp
cmp
adc
cmc
mov
in
repnz
pop
out
orb
mov
test
xlat
sahf
in
fcmovnb
ret
ret
mov
pop
daa
adc
in
fmulp
stos
and
pop
insl
imul
sbb
gs
orb
mov
cmp
jmp
inc
imul
enter
mov
lds
test
je
mov
dec
push
cmp
pop
xor
fsubrl
pop
mov
insb
js
cwtl
scas
add
push
push
jecxz
leave
push
lret
hlt
hlt
sbb
dec
mov
enter
jecxz
cmp
rcrb
or
ljmp
mov
sbb
xor
pop
lods
iret
cmp
dec
xor
dec
nop
out
icebp
dec
jae
js
adc
cmc
inc
iret
inc
mov
cmp
xchg
shlb
mov
mov
xchg
test
movsb
cmpsb
jge
add
aad
sbb
mov
or
cmp
mov
lahf
sarb
movsl
mov
loope
cmp
pop
mov
push
movsb
sti
sub
pop
stc
mov
push
sbb
lret
lods
dec
mov
outsl
ja
mov
push
int3
xor
xlat
mov
nop
test
sahf
imul
fwait
out
rcrl
xor
dec
or
popa
outsb
dec
ss
push
mov
dec
jle
cmp
popa
push
dec
cs
enter
adc
xchg
sahf
call
sbb
insb
jge
test
das
fld
ja
insb
lea
adc
cmp
pop
inc
cmc
loope
xor
pusha
mov
test
xchg
mov
out
push
xor
lret
cmp
xor
and
bound
stos
inc
mov
pushw
xor
push
xor
loop
inc
mov
repz
icebp
es
jmp
adc
int
hlt
jno
push
sahf
lcall
push
call
lds
gs
adc
xchg
iret
jns
es
orb
pop
test
pop
mov
fcmovnb
clc
xchg
mov
push
jb
lock
addr16
and
inc
mov
inc
mov
push
mov
punpckldq
mov
bound
pop
jnp
cmp
in
sbb
and
fnstsw
pop
fadds
fdivrs
jge
mov
cmp
pop
aaa
imul
nop
jmp
and
or
sbb
es
push
xlat
pop
fbld
xor
imul
xor
pop
xchg
mov
push
aam
imul
mov
pop
cmp
adc
fcoms
jmp
jmp
push
gs
scas
hlt
push
lods
pop
lret
xor
inc
cs
and
movsl
movsl
insl
inc
daa
inc
out
into
mov
mov
mov
jecxz
mov
cltd
mov
mov
dec
bnd
pushf
or
xchg
jnp
mov
je
lock
dec
or
dec
jl
xor
push
mov
xor
dec
adc
adc
imul
dec
les
in
dec
push
push
inc
fstpt
pushf
jae
cmp
lods
jne
andl
fsubrs
dec
pop
push
ret
mov
inc
mov
popf
jnp
mov
cli
jg
lods
xchg
cmp
cmp
mov
or
fldcw
push
jge
das
ret
movsl
inc
test
imul
add
adc
hlt
test
movsl
pop
xor
adc
js
and
jae
lret
dec
sub
mov
xchg
jo
pop
add
mov
stos
fisubrl
push
or
and
xor
sub
in
jp
dec
mov
push
mov
jns
int
je
sbb
loopne
repz
cmp
mov
inc
lock
mov
test
lret
xlat
out
cmp
dec
or
fdivp
test
std
in
lret
inc
inc
aad
fmuls
cmp
mov
fldl
add
movsl
xchg
push
cmpsl
push
jo
mov
xor
jne
mov
mov
dec
or
test
dec
push
pop
mov
mov
jo
lds
cmpsb
dec
out
push
sub
pop
xchg
lret
hlt
imul
jbe
cmc
inc
push
mov
sub
xorb
xlat
and
popf
mov
mov
mov
fdivrp
daa
mov
imull
adc
or
jp
popa
icebp
fs
xor
jle
pop
insb
lcall
out
aaa
sub
scas
rolb
hlt
xor
in
subb
inc
push
or
adc
pop
pop
xchg
xor
mov
gs
mov
and
jo
pop
xor
add
inc
in
mov
jge
and
jg
pop
int
test
decb
cmp
out
lods
cmpsb
push
add
mov
loopne
arpl
xlat
cmp
add
inc
dec
sub
dec
pop
fldcw
or
sbb
push
adc
sbb
or
outsl
add
and
push
aaa
cmp
inc
xor
or
xchg
mov
mov
hlt
pop
das
inc
outsb
inc
xchg
mov
in
xor
scas
adc
lock
jp
xor
test
std
lods
xor
adc
xchg
insb
addl
jbe
or
pop
inc
inc
or
sub
push
je
aam
add
lea
mov
mov
push
push
fistl
or
pxor
movsb
adc
stos
mov
push
jnp
lahf
mov
scas
add
and
adc
or
out
divl
lock
mov
icebp
mov
push
icebp
in
and
mov
push
les
je
movsl
or
or
and
adc
sub
lds
push
repnz
andb
int3
repnz
int3
imul
rorb
xor
add
pop
cmp
aaa
mov
cmp
clc
outsl
rcrl
inc
push
int3
push
jecxz
push
test
inc
xor
pop
mov
fdiv
xchg
push
data16
sbb
sbb
arpl
cmp
cmc
or
inc
leave
pop
stos
iret
stos
cmp
test
loopne
add
fs
in
bound
gs
test
mov
xchg
sbb
fidivrl
sub
mov
jg
popf
add
stos
filds
mov
stos
lcall
dec
test
cld
adc
inc
divl
mov
mov
cmp
add
adc
xlat
or
mov
sbb
cmc
loope
outsl
jle
mov
jno
frstor
pop
push
mov
daa
cmp
nop
mov
fnstcw
mov
insb
fldenv
mov
mov
arpl
and
push
stc
xchg
in
push
xchg
and
adc
push
dec
inc
mov
clc
loopne
jecxz
fwait
test
pop
mov
les
out
jle
xchg
xor
and
in
mov
aam
xchg
arpl
push
adc
xlat
aam
xor
mov
movsl
push
iret
xchg
fadds
shlb
ljmp
and
popf
test
mov
adc
orl
cmpsl
or
mov
sub
xchg
pop
and
pop
xor
mov
mov
cmp
dec
leave
fs
adc
sbb
sub
mov
mov
xor
clc
xchg
dec
jo
fbld
orb
xlat
pushf
aam
cmpsl
lcall
sub
hlt
nop
sbb
dec
mov
divl
cmp
ret
push
in
leave
mov
and
inc
out
inc
mov
jge
ss
movsl
into
dec
outsb
xchg
lds
fwait
aad
or
xchg
jo
fidivl
rcrb
popa
ds
ret
leave
ss
and
sub
pop
cmp
addb
add
in
dec
sti
xor
push
lahf
adc
mov
cli
or
xor
inc
hlt
iret
inc
mov
aad
jge
mov
outsb
adc
int
cli
and
je
insl
cmp
or
xor
dec
daa
jae
mov
imul
mov
sub
or
ficoml
scas
roll
sti
and
test
pushf
xorb
and
int
jecxz
pop
xor
je
mov
out
mov
push
inc
add
fsubs
aas
mov
cmpl
or
iret
fs
adc
fistpl
mov
xchg
lret
mov
jno
stos
mov
int
push
ficompl
push
cltd
cmp
sarl
fistps
lock
and
clc
or
movsb
jmp
int
hlt
lret
cmp
and
cltd
pop
pop
mov
lahf
mov
xor
jmp
cmp
lahf
fs
pop
xchg
sub
idiv
push
mov
jbe
fmulp
adc
andl
and
xchg
mov
decb
sub
ret
jp
leave
insb
sbb
test
testl
xor
stos
mov
adc
or
cmp
adc
popa
push
ficoml
dec
lock
xchg
daa
adc
adc
lahf
cmpl
cld
and
imul
and
cltd
ficompl
cmp
cmp
stc
push
cmp
lock
pop
lret
mov
insl
insl
jp
and
cmc
aas
dec
mov
gs
and
pop
mov
push
add
mov
scas
out
lcall
xchg
out
mov
mov
xchg
add
test
sbb
test
inc
cld
pop
lds
roll
jle
ret
mov
daa
dec
mov
out
sub
push
dec
iret
sbb
es
cld
mov
jb
lock
iret
lret
gs
mov
mov
fdivp
stc
sbb
lods
mov
xchg
ljmp
loop
out
jns
push
xchg
aas
mov
clc
xchg
mov
cmp
pop
push
adc
jl
lea
mov
aam
push
sbb
xchg
sub
lea
mov
jge
and
push
push
mov
push
stos
push
xor
scas
or
xchg
mov
je
or
pop
mov
add
movl
pop
add
gs
cld
jns
mov
fs
ret
in
fyl2xp1
dec
push
shrl
das
add
into
jmp
mov
lods
mov
fisttpll
inc
dec
fldl
mov
pop
hlt
repz
into
pop
std
add
subl
push
xchg
pop
pusha
in
js
cld
or
fdivrs
int
sbbl
jns
popa
and
jp
js
mov
test
sub
lods
push
pop
dec
daa
pop
pop
adc
mov
lret
add
leave
loop
push
pusha
jl
rorl
inc
xchg
popl
xlat
mov
xor
dec
fsts
or
scas
dec
shlb
xchg
adc
ret
clc
dec
ret
insl
popa
or
out
cli
xor
in
ss
mov
insl
inc
repz
fs
pop
fwait
rcl
xchg
mov
inc
mov
out
inc
push
or
inc
sub
pop
cltd
cmp
sub
outsb
cmp
inc
imul
jns
out
and
push
mov
cltd
inc
lret
cltd
ss
sub
cs
sbb
int3
jle
jmp
icebp
cli
roll
inc
ljmp
push
fwait
das
iret
mov
in
push
mov
push
aam
aad
aam
xor
dec
xor
fiaddl
adc
xchg
and
scas
pop
adc
and
xchg
cmp
sub
pusha
fs
dec
lcall
xchg
push
xchg
jne
mov
add
inc
je
cmpsb
mov
sbb
inc
sub
rcl
xorl
push
push
adc
stos
jne
xchg
xchg
xor
call
data16
xchg
push
shrl
scas
dec
dec
decb
and
or
out
test
std
add
std
push
test
cmp
ret
sub
add
pop
sbb
or
push
xor
lods
insl
cmpsl
aas
push
push
sub
push
enter
jl
sbb
insb
or
cld
sbb
cltd
jnp
scas
insl
repnz
mov
push
stos
fsave
sbbl
jne
clc
and
stc
push
xchg
ja
cmc
and
movsl
cmp
mov
push
mov
push
or
push
dec
pop
addr16
outsl
adc
std
xorb
in
stc
mov
inc
loop
mov
dec
mov
mov
jb
and
mov
rcll
test
lret
out
in
adc
lcall
insl
push
fs
adc
mov
in
neg
ret
xchg
mov
add
addr16
cmp
lea
pop
nop
mov
shr
pop
pusha
adc
cmovl
and
lock
adc
arpl
xchg
js
fiaddl
push
ret
pop
and
cmp
outsb
lock
shl
idiv
cmp
sahf
sti
jmp
fwait
push
mov
loopne
jbe
xor
test
fcoms
push
neg
xchg
shll
out
fdivrs
mov
out
clc
mov
mov
xchg
clc
dec
ret
push
clc
clc
add
pop
cmc
sub
andb
popa
sub
push
mov
pop
int
movsl
test
mov
pusha
insl
push
mov
mov
mov
cmp
sub
jg
shll
dec
test
cmp
pop
adc
and
jge
adc
xchg
inc
out
cmp
and
ret
jnp
mov
adc
mov
push
xor
fwait
cmpsb
xchg
sbb
lock
mov
inc
sbb
pusha
in
test
lds
dec
cld
push
jecxz
test
ficoml
gs
mov
or
nop
add
stos
mov
push
ret
mov
or
incl
fnstcw
cltd
and
dec
test
inc
jmp
sub
cld
mov
xchg
cmp
push
mov
lds
pop
aaa
cmp
and
popa
fildll
sub
das
addr16
orb
or
mov
mov
mov
jo
mov
cmp
add
dec
xor
outsl
push
xchg
dec
shll
test
lret
push
ss
mov
xlat
addr16
addr16
hlt
repnz
pop
lahf
push
mull
movsl
mov
adc
add
fwait
test
push
orb
pop
sahf
das
out
jno
scas
loop
out
jle
push
ja
sbb
push
ret
mov
mov
js
movsl
dec
adc
cltd
lret
stc
vsqrtsd
push
or
rcl
decl
mov
out
ficompl
sbb
or
add
rorb
xchg
jns
xchg
or
mov
je
push
mov
mov
pop
test
adc
pop
mov
add
inc
lods
sub
cmp
fadds
add
scas
inc
xlat
arpl
mov
sarb
pop
push
in
daa
adc
xorb
aad
scas
push
clc
rcrb
fdivl
lea
jp
aam
sbb
in
fstpt
push
or
sub
and
les
roll
out
aad
mov
sub
pop
orb
pop
stos
xchg
jo
loop
add
and
sbb
sub
loop
outsb
mov
divl
pop
and
mulb
add
push
dec
test
dec
sub
jl
push
aad
xor
arpl
orb
nop
fidivrl
sub
outsl
aam
cmpsl
test
and
xor
iret
mov
xor
mov
xchg
adc
test
dec
cs
popa
and
callw
jae
in
rcrb
pop
adc
sbb
arpl
ds
outsb
das
loopne
dec
dec
aam
add
xor
adc
pop
mov
xor
dec
dec
sbb
xchg
ficompl
jmp
repnz
dec
repz
aam
xor
in
jmp
jae
aad
cmp
adc
dec
jl
pop
mov
sbb
stos
pop
sbb
inc
aas
ficompl
gs
mov
jge
pop
cli
movsb
leave
aaa
jno
arpl
push
repz
jge
popa
pusha
mov
xor
add
aaa
sbbl
out
std
xorl
push
outsb
lea
movsl
scas
mov
inc
xchg
or
sahf
loope
push
adcb
jne
sarb
insb
sarb
cmp
nop
mov
loopne
or
and
aas
lods
fidivrs
dec
clc
pop
cs
lahf
divl
push
dec
fisttpll
aam
and
testl
cmp
out
xchg
cmc
aaa
xor
leave
inc
inc
cs
lock
bound
and
jbe
and
adc
cltd
mov
data16
stos
mov
adc
daa
sub
lahf
mov
dec
push
cwtl
lret
sti
loop
hlt
and
movsb
lcall
sti
aam
repnz
popa
scas
xchg
push
je
aad
into
push
notl
cld
lock
pop
jne
test
rcrb
mov
jb
push
stos
jge
jb
inc
cmp
inc
mov
fcomps
mov
call
addb
out
cmp
lahf
lret
std
pop
iret
adcb
cmp
or
and
imul
lods
xchg
popa
and
push
scas
imul
mov
adc
outsl
ss
push
mov
sbb
jl
xor
in
pop
loope
jbe
sbb
xchg
hlt
lahf
insb
mov
pop
xchg
into
ja
mov
in
fsubl
push
daa
inc
mov
mov
ja
dec
jecxz
dec
xchg
or
movsb
test
inc
add
xchg
aam
insl
rcrb
pusha
insl
in
sub
inc
cmpb
dec
mov
push
jge
iret
jecxz
je
mov
pop
leave
xchg
cmc
adc
repnz
mov
mov
or
int3
push
add
adc
cmc
fwait
les
cli
pop
sbb
das
out
sahf
stos
arpl
adc
or
cwtl
mov
inc
lahf
sahf
ret
xchg
sbb
jge
xor
and
jmp
vpaddd
jl
mov
add
pop
jno
and
test
int3
lods
dec
loop
xlat
add
mov
push
push
repz
jnp
mov
bound
adc
pop
xchg
mov
lahf
aas
sub
sbb
add
adc
dec
out
mov
aam
enter
filds
je
cmp
lods
stc
add
mov
pop
mov
mov
and
xchg
in
lret
test
xchg
mov
sbb
outsl
leave
dec
jo
inc
mov
sbb
pop
sbbb
dec
jge
enter
test
testl
nop
pop
lcall
pop
xor
cmp
push
test
mov
testb
pop
sub
sub
mov
xor
inc
fcomps
lcall
dec
push
jnp
cmp
ss
pop
inc
xchg
mov
sbb
test
int3
push
mov
mov
popf
and
das
shrl
mov
lea
inc
lahf
sarb
call
lahf
and
mov
mov
and
insl
and
jle
or
add
cmp
add
sbb
stos
jns
or
jmp
sbb
and
ljmp
enter
adc
int3
cld
in
fisubrl
movsb
inc
sub
std
aaa
ljmp
outsb
stos
pop
fisubrs
dec
xchg
jbe
push
pop
inc
mov
loopne
jnp
cwtl
xor
xchg
pop
adc
add
sarb
push
std
sbb
adc
addr16
or
push
push
aas
aad
adcl
fnstenv
popa
jo
pop
cmp
je
das
add
push
mov
inc
or
push
dec
mov
push
data16
in
in
dec
jg
xchg
sub
adc
mov
mov
popf
mov
jne
test
daa
int3
xchg
je
pop
inc
push
lock
jnp
mov
insl
les
int3
js
cmp
insl
xchg
aam
xchg
fsubs
jae
ret
adc
push
adc
sub
scas
xchg
pop
test
fdivs
sbb
repz
mov
pop
dec
xor
dec
pop
lds
sbb
loopne
xchg
pop
inc
add
xor
in
jns
pop
rcrl
cli
push
loope
or
stos
fidivs
loop
inc
shll
dec
testb
aam
in
cmp
xor
jns
push
outsb
ret
lds
aam
rclb
insb
scas
mov
shll
into
inc
pushf
jbe
adc
add
pop
and
lret
mov
rep
imul
lahf
sub
jae
in
and
adc
lahf
fsubrl
jo
sub
das
mov
mov
cmpb
push
addr16
xchg
addr16
rcrb
inc
push
or
cmp
cmp
icebp
mov
repnz
jbe
neg
cmp
scas
cmp
cmp
ret
sub
dec
jp
cmp
dec
orb
pop
les
or
pop
cmp
mov
lcall
fcmovnu
mov
jmp
inc
fidivl
jnp
icebp
js
ret
lea
dec
adc
insl
ret
pop
mov
mov
push
xchg
lret
sbb
xor
pop
imul
stos
push
jmp
rcr
jo
gs
das
imul
enter
outsb
sub
lret
xchg
cmp
inc
or
je
out
push
push
les
popa
xchg
in
mov
inc
push
ljmp
shrl
mov
mov
mov
mov
push
imul
int3
fidivl
adc
rcrl
or
outsl
sbb
mov
mov
outsl
push
xor
in
mov
sbb
push
fstps
and
stc
mov
push
testb
icebp
inc
cmpb
jle
rcl
mov
sbb
sbb
mov
gs
dec
sbb
clc
xlat
jbe
dec
mov
cmpsl
xchg
call
pop
aaa
rcll
xchg
popa
clc
roll
lea
das
push
push
addb
adc
pop
stc
add
loope
pop
xorl
add
sbb
inc
pop
popf
sub
xor
mov
mov
fists
out
push
or
sub
cli
mov
loopne
jl
cli
fcomps
js
fcomip
adc
mov
sbb
pop
or
loop
ja
insl
inc
loop
mov
dec
mov
xchg
jbe
sbb
mov
pop
aaa
mov
adc
push
jne
sti
or
pop
mov
add
sub
out
in
popf
mov
shlb
lods
jp
gs
ds
daa
sti
rorl
mov
sar
add
dec
add
jg
pop
jl
mov
das
rcll
inc
or
jge
mov
out
jg
mov
xor
je
sbb
push
cmpb
pop
xchg
lea
mov
roll
aam
sub
pop
out
adc
mov
mov
inc
xchg
adc
cmc
mov
push
xorb
enter
mulps
sub
out
xchg
pop
stc
es
mov
sbb
jno
ret
fisubrl
pusha
jne
int
jns
cli
push
sbb
dec
cwtl
dec
pop
mov
fdivs
sti
and
mov
ret
loope
jno
pop
mov
push
pushl
vmovaps
cs
ljmp
nop
mov
ss
inc
pop
pusha
mov
int
xlat
rcr
aas
inc
adc
mov
and
xchg
stc
lods
cmc
arpl
leave
outsl
lds
ret
les
xor
mov
in
cwtl
add
popf
push
popf
mov
daa
xlat
fwait
testl
jae
imul
pusha
dec
rorl
inc
push
mov
hlt
sub
mov
lcall
pop
jnp
lods
push
les
pop
jmp
aaa
cmc
in
outsl
jle
fs
out
fidivs
push
jnp
lret
pop
dec
mov
popa
lds
adc
aad
xchg
loop
rolb
jecxz
push
jno
adc
ljmp
jge
mov
sbb
and
sub
sbb
rcrl
negb
pop
cmp
mov
jns
lods
jne
or
cmp
into
das
hlt
cld
les
lock
pop
cmp
xor
mov
sub
sbb
sub
dec
iret
sub
es
lea
xchg
rclb
aaa
add
jo
mov
xor
loop
jns
cld
xor
cmp
mov
push
push
push
mov
ror
xacquire
cmp
lock
mov
xor
xor
lock
push
mov
faddl
xor
xor
dec
dec
or
fwait
loop
shlb
cmp
testb
sub
roll
rorl
sbb
and
adc
movsl
icebp
jge
mull
aam
adc
xchg
repz
mov
jns,pn
mov
mov
in
cli
mov
pop
test
ret
adc
mov
or
frstor
addb
inc
dec
mov
lret
adc
or
dec
cmpsb
std
sub
xchg
xlat
rcl
mov
std
sub
inc
dec
mov
adc
repz
mov
sub
pushf
mov
xchg
xor
push
insl
mov
and
sbb
testl
pop
inc
fnstenv
cmpsl
pop
jp
push
aam
push
les
divb
test
mov
lods
sub
dec
cwtl
ja
gs
cmp
cmovo
adc
int
or
outsl
ret
jbe
pop
push
aad
pusha
or
sbb
and
sbb
adc
stc
dec
inc
adc
das
dec
filds
lods
xchg
out
push
lods
cmpsb
fnsave
jg
gs
mov
pop
repnz
imul
cltd
adc
ret
push
and
je
pusha
mov
in
pop
iret
xchg
pop
test
stos
pop
mov
ljmp
push
arpl
xchg
xchg
loop
imul
cmc
dec
dec
movsb
in
adc
mov
mov
bound
dec
ljmp
frstor
ds
mov
cmp
push
lcall
mov
cmp
mov
test
shrl
pop
adcb
clc
in
xchg
test
dec
push
scas
mov
stos
ljmp
out
imul
add
xchg
sbb
mov
fldcw
std
add
int3
pop
scas
daa
outsl
xchg
int
adc
push
xchg
sub
gs
jg
insl
adc
adc
inc
or
rclb
pop
jns
jmp
inc
xor
mov
jno
imul
dec
lret
in
push
jno
inc
or
jb
mov
popf
pop
test
pusha
fprem
aas
ljmp
pop
pusha
repnz
sti
pop
xchg
xor
in
fs
lcall
cltd
or
out
ja
rcrb
stos
lret
aad
shll
push
inc
or
in
mov
cmp
fs
xor
shlb
mov
xor
xor
jnp
xchg
dec
cltd
lret
and
enter
fidivs
sbb
or
lret
scas
push
lods
xchg
imul
imul
inc
repnz
out
pop
stos
lods
inc
sub
sub
lods
cld
mov
adc
movsb
dec
push
push
insb
push
adc
xchg
movsl
push
or
shrb
hlt
push
idivl
das
sub
scas
das
and
cmp
stos
lds
es
mov
mov
mov
jl
ja
adc
clc
lret
adc
mov
popa
add
dec
sbb
popf
jp
jno
mov
mov
lds
push
int
xchg
xchg
cltd
loop
push
cmpsl
cmp
pop
ror
aad
sbb
leave
repnz
cmp
adc
icebp
outsl
or
sub
inc
repnz
jae
sbb
pushf
push
pop
mov
out
lret
pop
jnp
insl
cmp
lret
mov
mov
add
shll
test
push
push
or
and
push
sbb
jecxz
mov
mov
sbb
ja
dec
in
push
push
in
addl
shrd
mov
pop
xor
pop
inc
test
mov
test
pop
pushf
mov
push
sub
call
mov
jne
mov
pop
pop
shr
lea
and
push
dec
inc
mov
or
mov
dec
mov
mov
adcl
sbb
xchg
call
js
loope
sbb
and
gs
aas
je
std
in
rcr
lods
pusha
lods
sbb
sti
lret
leave
lret
and
ja
fadd
lret
ds
fdivrl
push
add
shl
movsb
xor
popf
jbe
pop
xor
or
jl
xchg
and
std
sbb
roll
insl
xor
cmp
or
or
mov
sub
sub
sub
push
mov
adc
aam
xchg
xchg
inc
push
nop
mov
mov
test
pushf
mov
push
or
add
stos
adc
cmp
cmpsl
pop
insb
std
dec
fcoms
mov
xchg
mov
rcrl
pushf
cmp
mov
cmpsl
cmp
xchg
stos
fwait
ret
ret
dec
xchg
adc
aad
adc
xchg
jae
repz
cltd
mov
and
xchg
in
and
mov
in
add
add
fcoml
xchg
int
and
movsl
lahf
and
or
lods
lcall
jno
int3
ss
jnp
and
push
sub
fsubrl
or
aaa
aam
sbb
lods
inc
sbb
adc
adc
test
mov
jbe
mov
sub
xchg
push
lcall
pop
mov
shrb
stos
shlb
gs
decl
outsb
iret
aad
arpl
xorb
push
fidivrs
enter
sbb
cmp
mov
xchg
imul
sbb
std
xor
pop
mov
mov
add
xor
push
push
jo
outsl
in
pop
dec
aam
sub
mov
inc
es
rclb
mov
scas
lcall
data16
notl
pushf
inc
and
outsl
rclb
das
mov
jl
jae
cmc
and
adc
push
mov
fs
ss
fimull
adc
jb
addr16
mov
mov
out
fs
cld
push
jg
pop
push
nop
clc
stos
inc
dec
pop
out
out
popa
insb
or
pop
cmp
scas
iret
int3
dec
imul
dec
je
inc
fsubrp
pop
aas
fmuls
and
mov
or
call
call
add
in
fcmovnu
enter
pop
gs
or
cmp
and
jo
inc
cmp
popfw
lahf
dec
xchg
movsl
rclb
sub
incb
mov
xorb
mov
dec
test
sbb
inc
into
stos
mov
pop
xor
xchg
cmp
es
xchg
les
xchg
popf
or
add
dec
pop
sub
les
and
inc
or
into
jmp
mov
xorl
rclb
add
push
mov
aaa
imul
enter
inc
dec
adc
xchg
mov
mov
jnp
cmp
dec
and
shrl
dec
mov
mov
insl
in
out
insl
movsl
mov
in
jnp
jo
push
inc
mov
pop
out
mov
and
out
lahf
mov
imul
fwait
push
clc
mov
imul
push
out
inc
enter
cli
arpl
aas
jecxz
xor
jae
shrb
cmpsl
insb
jp
inc
jg
cmc
jecxz
cs
cwtl
cmovb
jno
mov
pop
or
dec
dec
fsts
sub
repnz
mov
jle
mov
adc
mov
lahf
add
int
scas
data16
es
clc
cs
pusha
xor
and
andb
dec
xorb
cld
xchg
das
push
faddp
mov
movsb
jo
das
inc
punpckhbw
adc
sbb
push
js
iret
jns
add
lods
cmp
add
cmp
aas
xchg
repnz
movsb
jge
notl
pop
push
mov
sbb
jnp
or
addl
xchg
jmp
jg
es
mov
jp
sbb
movsl
cmp
cld
jmp
fwait
xchg
push
lret
push
lea
pop
inc
and
push
jb
ja
and
bound
repz
mov
ret
mov
jo
rorb
jbe
sbb
pop
xor
lods
sarb
add
xchg
outsb
call
push
xchg
jg
leave
or
loope
dec
and
gs
cli
pop
lret
cmp
jmp
xor
xchg
xchg
cmp
out
fstpl
xor
pushf
xchg
fsub
sub
inc
push
loop
lea
sbb
adc
fnstcw
xor
push
mov
jl
jnp
aas
fdivrs
mov
pop
movl
mov
faddl
mov
iret
aas
mov
jnp
inc
inc
jno
or
or
notb
dec
dec
in
jae
lret
mov
push
ds
adc
cmp
and
add
clc
fiaddl
aas
repz
xlat
loope
dec
jle
and
in
iret
scas
sub
push
shrl
pop
or
xchg
xor
xor
mov
lret
scas
jmp
push
sbb
mov
xor
pop
jg
loop
in
add
cmp
repz
pop
mov
stc
fisttpll
push
cmp
mov
stos
aad
ds
out
push
xor
adc
push
adc
imul
sbb
into
lods
lock
jne
mov
enter
add
movaps
repz
sti
sub
jnp
sub
xchg
mov
mov
add
add
gs
dec
shlb
cmp
push
xchg
mov
sub
jg
xor
inc
sub
cmp
clc
sub
dec
add
lock
jae
loope
clc
sahf
cs
mov
shrb
mov
xchg
imul
call
xchg
xchg
fistps
or
testl
lret
sub
loope
mov
lea
sbb
mov
dec
lcall
js
fucom
aas
fisubl
enter
and
jp
imul
pop
test
cld
xor
pop
jb
mov
sub
ret
lcall
pop
in
dec
adc
repnz
aas
mov
dec
popf
jp
cmc
sub
test
mov
mov
subb
sbb
adc
cmp
jmp
cmp
aam
sub
movsl
push
fisubs
push
pop
jbe
ja
lcall
test
shlb
adc
mov
pop
fwait
test
daa
cmp
dec
lock
in
adc
lcall
cwtl
mov
cld
mov
sbb
or
adc
jle
xor
push
cmp
shlb
icebp
jl
mov
xchg
mov
mov
js
mov
cld
mov
or
pop
ja
and
dec
xor
xor
inc
add
and
push
or
sub
pop
sub
mov
bound
jb
aad
sub
cmp
shlb
call
sbb
rolb
jecxz
pop
mov
cltd
data16
dec
pop
mov
stos
xor
mov
jge
outsb
pop
mov
fisubl
dec
add
pop
mov
imul
xchg
cmp
dec
inc
push
pop
mov
inc
cmpsl
fsubr
push
sub
mov
inc
mov
pop
std
adc
fnstcw
mov
jmp
rcr
dec
adc
push
lods
mov
lcall
sub
cld
adc
push
rcrb
inc
fcomps
xchg
shll
mov
mov
rorb
gs
movsl
stos
pop
mov
xor
fs
lret
pop
ja
xor
roll
inc
adc
pop
aam
mov
icebp
cwtl
bound
cmpsb
or
push
cmpsb
ret
jnp
dec
jl
xor
sahf
mov
cmpsb
lcall
jbe
loop
pop
inc
jae
insb
test
pusha
cmp
into
ss
ret
cmp
and
push
mov
sbb
add
into
adc
push
xchg
xor
fisubrl
imul
dec
push
enter
js
jp
jmp
jno
xor
ss
lock
out
jg
pop
sti
jbe
push
xorl
lahf
mov
cmp
dec
sbb
cmp
adcb
repnz
sti
in
sub
mov
incl
push
movl
dec
jno
mov
cwtl
mov
mov
push
popa
lahf
repz
xlat
jg
mov
xchg
jns
and
add
and
dec
jp
std
mov
jp
pop
out
enter
sub
and
lea
jmp
imul
std
imul
daa
mov
adc
dec
cld
mov
stos
push
repnz
or
dec
push
cmp
sti
insl
mov
xchg
or
lock
outsb
movsl
enter
clc
add
add
fs
jp
jbe
cmp
sbb
ja
and
xchg
outsl
hlt
jns
es
push
push
xchg
add
fadd
inc
rorl
jmp
push
cmp
shll
movb
mov
xor
fcoml
out
es
jle
inc
jo
out
mov
les
push
lock
imul
std
mov
add
mov
or
imulb
stc
xor
dec
rcl
jno
cs
out
mov
pop
loop
inc
movd
sub
push
movlps
jb
cld
sarb
subl
mov
mov
xor
mov
test
popf
pop
pop
clc
aad
lret
adc
lret
pusha
out
movsb
call
mov
loop
sub
repz
pop
adc
dec
orl
sub
fwait
pop
adc
cs
pop
and
in
push
fcoms
add
push
ss
push
lea
test
dec
lea
lret
adc
push
jmp
sbb
int
inc
adc
sbb
cld
mov
pop
cs
xor
xchg
add
pop
lret
mov
std
add
stc
jo
mov
int
ret
inc
fwait
inc
gs
dec
cmp
mov
sub
xor
jb
dec
adc
pop
jns
xchg
fs
andb
xchg
dec
insb
fdiv
sbb
out
jbe
leave
xor
mov
out
mull
sub
loope
sub
push
push
jnp
pop
aaa
jb
dec
cmpsl
xor
incb
jne
dec
xlat
and
fimull
add
ret
out
lods
addl
dec
lahf
sub
gs
pusha
enter
and
cmp
jp
jo
scas
mov
add
iret
xchg
pop
mov
orl
mov
fcomip
inc
lret
adcb
fsubp
loop
shlb
mov
jbe
cltd
in
lock
lret
sar
pop
push
jo
pop
mov
repnz
aam
lods
sbb
push
inc
pop
test
js
test
sub
xchg
jo
xor
lods
psubw
andl
incl
jnp
mov
arpl
cmp
inc
jmp
xor
ja
jns
xchg
pop
movups
jge
cltd
lods
xchg
frstor
push
popf
fidivrl
ss
push
dec
dec
and
or
or
fcmove
mov
mov
xlat
sub
pop
inc
les
pmulhw
mov
lods
lods
or
push
lds
xor
test
mov
popa
push
jge
loop
out
lea
mov
out
push
xor
loop
mov
xchg
mov
les
pusha
aad
xor
nop
ja
cmpsb
iret
mov
mov
push
jg
push
push
dec
negb
mov
jbe
cmovl
lods
rcll
stos
jg
nop
rep
jae
adcl
leave
pushf
cwtl
jmp
ret
inc
and
cmc
add
sahf
mov
mov
mov
sbb
or
or
mov
inc
lods
mov
in
jnp
cmp
scas
cvtdq2ps
sbb
jp
sahf
push
cmpsb
pushf
pop
test
out
ja
rorl
fs
mov
insl
xchg
andb
push
xor
pop
cltd
cs
repnz
faddl
push
aas
lahf
aad
js
fcmovu
xlat
push
mov
sahf
mov
add
xchg
lret
and
scas
hlt
lahf
mov
sbb
adc
js
dec
jmp
bound
sbb
sti
movsl
shl
sti
fs
leave
mov
mov
out
fists
mull
inc
out
pushf
mov
outsl
out
push
cs
and
jo
and
das
out
sub
mov
cmpb
ljmp
jmp
add
insl
adc
dec
icebp
pop
xchg
pcmpeqw
popa
fdivs
aaa
adc
dec
cmpsb
and
je
mov
call
lcall
xchg
mov
dec
add
xchg
cld
cmp
mov
push
and
mov
cltd
repnz
jecxz
test
push
fwait
push
bound
pop
hlt
stc
add
xchg
rcr
xchg
mov
mov
fldt
sub
dec
out
test
scas
xchg
mov
mov
mov
rcr
lcall
inc
adc
loopne
xchg
add
sbbl
dec
inc
cmp
lods
outsl
sbb
in
cmp
xor
icebp
mov
push
push
test
add
adc
jp
add
cmc
jg
jecxz
mov
pop
negl
pop
loopne
adc
bound
mov
loop
sub
stos
adc
loop
lret
out
cwtl
les
sbb
adc
inc
pop
jbe
leave
mov
push
pop
push
pop
push
push
mov
test
int3
push
pusha
js
inc
push
inc
mov
loopne
pop
fadd
xchg
lcall
cmp
scas
jle
bound
pop
xchg
bound
pop
lods
lds
loope
enter
cwtl
pusha
sub
icebp
mov
negl
jnp
bound
pusha
stos
pop
lahf
ret
jl
or
inc
cmp
sub
in
sub
insb
lds
bound
icebp
jg
sbb
scas
aad
out
pop
scas
or
pusha
dec
mov
js
insb
sub
leave
enter
xchg
insl
pop
adc
jb
pop
mov
movsl
divb
in
flds
out
shlb
jo
inc
sarb
inc
mov
inc
and
cmp
push
into
sbb
hlt
into
xchg
in
push
sub
stos
add
cmc
arpl
xchg
and
cmp
sbb
add
stos
mov
repz
mov
cmp
les
lds
push
adc
sbb
mov
xlat
mov
xor
mov
arpl
repnz
xlat
add
mov
gs
imul
inc
xchg
mov
call
ret
int
iret
mov
inc
fcmove
add
mov
push
ss
push
in
mov
pop
cmpsl
jb
sub
lods
push
ret
dec
adc
adc
sub
inc
mov
mov
inc
jle
xor
lds
push
repnz
and
add
add
xor
popa
adc
inc
das
jae
int3
xchg
das
xor
lahf
push
mov
mov
xchg
movl
dec
mov
and
pop
jns
jecxz
pushf
scas
push
lcall
xchg
js
or
adc
fiaddl
and
fmul
mov
mov
test
mov
cmp
ljmp
push
je
pop
dec
movsb
inc
or
mov
into
sbb
cmp
and
jae
sar
out
push
dec
adc
mov
add
push
les
inc
xor
in
cmpsb
std
lahf
mov
pop
inc
jecxz
mov
nop
imul
clc
sub
out
and
xchg
mov
fs
mov
inc
pusha
lahf
fs
addr16
into
xchg
test
pop
fisubrs
fistpl
decb
loope
or
adc
pushf
dec
xchg
aaa
jecxz
fwait
pop
jle
xor
in
pop
fwait
cmpsb
sub
fldcw
mov
idivb
mov
jle
adc
xlat
out
jns
adc
lods
cmpsl
jae
push
daa
dec
sbb
xor
xor
shlb
test
dec
pushf
cmp
clc
adc
push
jge
mov
inc
push
jecxz
out
addb
std
dec
or
rcr
cmp
pop
dec
cmp
popa
xor
and
int
stc
mov
out
dec
imulb
adc
ja
outsb
mov
fiaddl
fistpll
and
sti
movsb
iret
add
shlb
xchg
andl
mov
xor
jbe
sbb
decb
jne
stos
in
aaa
xchg
sub
stc
mov
mov
pop
cmp
shl
pop
call
or
add
dec
xchg
push
ret
cld
lea
jb
mul
pusha
inc
push
mov
cmpsb
call
pop
aas
inc
push
imul
ret
outsb
jge
out
push
dec
sbb
gs
dec
inc
int3
lock
mov
sbb
fs
push
jbe,pn
jg
shr
popf
and
sbb
hlt
ss
jecxz
sub
lock
stc
pop
mov
push
imul
dec
stos
pusha
out
jb
test
xchg
push
mov
lds
or
bound
clc
dec
mov
mov
sbb
scas
fimull
cmp
loop
dec
add
mov
ss
cmp
mov
sbb
and
pop
or
dec
jecxz
fistpll
lock
jo
dec
push
dec
cmp
inc
decl
xorb
jge
add
lock
push
and
mov
jle
pop
mov
pop
sbb
sub
les
ficompl
push
test
mov
and
or
xchg
sub
mov
push
out
jns
popf
pop
orb
outsb
jp
loope
dec
cmp
mov
int3
in
les
push
jne
add
ds
pop
movsl
stos
insb
sbb
aad
adc
add
outsl
jbe
cmp
push
xor
pusha
leave
lds
cmp
xor
cli
enter
in
push
inc
pop
mov
mov
insl
rorb
in
mov
cs
mov
inc
jb
add
rclb
iret
cltd
xchg
pop
arpl
mov
dec
outsl
rol
les
sbbl
lret
stos
pop
data16
jl
adc
shll
dec
sub
and
mov
xchg
adcb
cmp
sub
sub
push
out
rcl
outsl
pop
daa
aas
sbbb
sbb
hlt
xchg
ret
rclb
xor
push
ficomps
add
sub
out
push
dec
in
push
add
push
xchg
ja
push
stc
lods
inc
cmp
inc
add
mov
sbb
pusha
xchg
ja
sti
xor
std
jbe
mov
vminsd
stc
adc
push
jnp
fsubp
pop
mov
push
mov
jnp
ss
sub
ja
xchg
pop
push
cwtl
xor
jl
ret
pushf
dec
lods
daa
ja
jmp
dec
test
push
cmpsb
inc
test
stos
xor
aad
add
stos
les
push
inc
ror
xlat
in
xor
jmp
or
xchg
sub
mov
pop
push
push
sbb
sub
push
cmp
fiadds
out
test
mov
push
shufps
fistpll
push
mov
loop
fcoms
mov
jg
in
out
push
cwtl
ds
xor
rorb
into
or
cwtl
stc
ja
xor
ret
or
and
fistl
adc
dec
out
lock
mov
ljmp
jo
jnp
mov
adc
pop
sub
arpl
and
out
pop
jne
fiadds
aad
or
sub
sbb
repz
or
cld
dec
push
lods
jne
and
pop
mov
nop
sub
pusha
xchg
imul
addl
sbb
adc
sbb
xchg
mov
cmpsb
dec
rcrl
inc
push
sub
xchg
stos
pop
addb
dec
scas
add
insb
mov
fadd
jge
cmp
aad
dec
xchg
hlt
jg
fsts
mov
dec
leave
fmuls
nop
dec
jns
cli
adc
cmp
mov
pusha
add
pop
jns
orl
jns
scas
push
call
sub
mov
xchg
cltd
imul
or
leave
and
xchg
or
gs
mov
add
popa
adc
xchg
arpl
jnp
aam
dec
loop
nop
scas
ss
dec
mov
ljmp
daa
and
insl
add
adc
inc
or
mov
sub
fnstsw
pop
mov
xor
sbb
and
or
push
mov
in
xchg
out
pop
and
bound
jge
aas
push
jae
xchg
mov
push
xchg
fwait
rolb
xor
aaa
outsl
cmp
cmp
inc
cmp
add
pop
nop
or
push
hlt
imul
xchg
push
or
lcall
repnz
jne
mov
add
xchg
push
jle
sub
add
push
shrl
push
xchg
dec
sbb
stos
pop
jns
lds
ficompl
push
cmpsb
lahf
pop
jmp
xchg
popa
sbb
pop
js
cmp
imul
mov
xchg
movsl
ret
popa
dec
dec
mov
jb
mov
andl
cmpl
lods
cmp
sbb
ffreep
sti
ljmp
cmc
out
cmc
adc
int
pop
adc
xchg
scas
add
sbb
inc
add
xchg
adc
jbe
pop
sbb
adc
jecxz
push
mov
addr16
lds
rorb
cwtl
hlt
or
jecxz
imul
call
sub
out
jmp
xchg
inc
stc
aam
sub
mov
out
and
out
cmpsb
xor
add
fcompl
jo
adc
fcomip
push
sub
fimuls
lods
aaa
cmpsb
loop
les
cmp
test
shlb
pop
pop
cmpsb
sbb
inc
mov
out
mov
out
leave
mov
dec
sbb
jg
hlt
das
jle
push
mov
fucomi
pushf
shlb
and
in
xor
push
mov
dec
test
lea
in
sub
lods
idivl
ds
cmp
jg
jo
or
es
repnz
jmp
push
inc
jns
insl
sbbb
jbe
test
sbb
scas
and
sti
sbb
out
jbe
pop
cli
loop
repz
sbb
addl
cld
mov
es
pop
sbb
mov
xchg
gs
out
loopne
dec
jle
rolb
pusha
jb
insb
dec
push
mov
pop
xchg
jmp
lds
leave
js
mov
pop
push
dec
test
jle
call
xor
mov
mov
int
lahf
outsl
add
jo
mov
stc
daa
mov
je
mov
and
call
xchg
scas
mov
mov
out
fstpl
pop
cmpb
pop
push
notl
push
je
or
cmp
pop
stos
aad
movsl
ja
popf
xchg
xor
jecxz
and
jae
int
pop
scas
stc
mov
and
push
fs
aas
push
in
ja
xor
push
xor
sahf
ja
ds
fs
adc
xor
in
push
in
mov
movups
adc
mov
xchg
je
int
cltd
cmp
mov
movsl
cld
adc
aad
movsl
add
ret
daa
mov
es
ja
andl
lods
aaa
les
out
dec
enter
jo
mov
mov
out
cmp
imul
mov
mov
cli
lahf
mov
xor
ds
add
inc
lods
shll
ja
push
dec
fisttps
test
and
inc
cltd
nop
pop
testl
pop
aaa
push
ret
jge
mull
int3
xchg
mov
ret
mov
fcmovne
sub
xchg
lret
sahf
inc
sbb
loop
dec
pushf
xchg
rolb
mov
push
xchg
fstpl
outsl
sahf
test
cmp
lods
mov
clc
fnsave
and
push
mov
in
and
mov
jo
push
fcoms
fnstsw
or
test
movsb
daa
xchg
jo
orl
test
arpl
push
xor
jb
mov
mov
inc
xorb
pop
and
dec
out
int3
in
lret
repz
cmp
pop
mov
imul
add
cmc
cwtl
sbb
rorl
into
sarb
cltd
sti
lods
or
or
jo
int3
imul
inc
ljmp
data16
mov
ret
popa
jecxz
outsl
loop
jl
rcll
mov
push
andb
dec
jmp
rcr
adc
mov
xor
cli
jnp,pn
test
add
into
clc
jp
push
sub
adc
xchg
or
and
sbb
dec
popf
aam
lods
clc
lds
inc
xor
and
jno
outsb
mov
mov
mov
outsb
xchg
mov
aas
add
xchg
sub
lea
call
push
ja
xchg
movsl
and
cmc
pusha
mov
xor
pop
push
and
lret
xor
rclb
sahf
adc
mov
mov
cli
xchg
int
ret
cld
pop
call
fs
cmp
push
or
cli
addb
or
jbe
adc
jmp
loope
sbb
mov
dec
and
movl
imul
arpl
mov
or
sub
or
push
push
add
rorl
push
aam
mov
or
pop
mov
lret
mov
adc
xor
call
std
cmpl
lock
jbe
xchg
lock
push
push
es
popf
jb
std
mov
sbb
notl
shlb
and
ja
push
adc
pop
nop
or
xchg
add
pop
aam
push
stos
ss
jae
mov
mov
push
pop
mov
jg
pop
pop
mov
mov
clc
dec
pop
insl
cmp
jns
jge
mov
es
mov
nop
outsl
add
sti
bound
stc
pop
and
or
dec
add
xor
jg
sub
adc
mov
xorb
sahf
pop
mov
jp
adc
shr
and
nop
push
cmp
and
push
or
imul
cli
sbb
bound
cmp
mov
sub
add
mov
mov
mov
cmp
dec
inc
jb
sbb
dec
jbe
les
dec
add
in
cmp
mov
or
mov
mov
push
fs
int3
lahf
xchg
mov
or
dec
ss
mov
jb
fcoms
daa
sub
xchg
sub
jg
sub
push
xor
add
dec
push
cmpl
mov
mov
add
push
js
adc
push
pop
out
or
popf
dec
push
flds
out
inc
push
lret
jge
mov
mov
aad
mov
pushl
inc
repz
or
inc
mov
ljmp
in
movl
sub
pop
loopne
dec
cmpsb
lods
in
jge
aad
cmp
lret
in
or
vcvtss2si
pushf
xchg
ljmp
jl
shll
pusha
or
add
hlt
inc
lcall
jge
add
jo
adc
aad
testb
out
in
inc
inc
repz
pop
cld
out
in
xor
ljmp
fldt
insb
fmuls
cmp
jo
inc
inc
insl
pop
push
push
nop
aad
outsb
mov
jmp
dec
jl
ss
jae
int3
js
pop
in
cs
sbb
notb
fidivrl
je
lods
je
je
in
mov
inc
add
rol
add
xor
cmpsb
shll
sbb
sahf
mov
js
ja
fmulp
movsl
dec
dec
pop
xchg
fstl
and
and
hlt
dec
dec
xor
call
das
and
aam
jb
mov
mov
jp
cmp
xor
inc
lds
mov
into
out
js
ja
push
and
inc
pop
push
xor
loop
xorl
cli
outsb
dec
push
lods
inc
add
mov
daa
test
out
pop
sbb
pop
pop
pop
mov
and
flds
jno
and
jg
adc
dec
std
mov
add
loopne
add
and
mov
mov
nop
add
mov
xchg
repz
scas
fiaddl
xchg
ficoml
mov
add
ret
imul
inc
mov
or
push
jae
enter
mov
test
ljmp
decl
rorb
addr16
in
loope
mov
mov
mov
jle
jmp
enter
xchg
out
cmp
or
mov
sbb
and
iret
lods
daa
mov
xchg
insl
jo
cmp
ss
leave
push
adc
or
mov
jbe
push
lcall
cmp
stc
jle
jns
jge
ss
aas
or
dec
dec
test
loopne
and
cmp
icebp
fbstp
mov
cmp
dec
xchg
or
sub
mov
xchg
iret
movsb
xchg
and
fiadds
les
insb
cmp
jmp
jmp
mov
imul
inc
add
loope
mov
jp
xor
repz
mov
leave
les
xchg
pop
arpl
pushf
xor
jbe
aaa
fcoml
pop
xchg
xor
scas
hlt
shrb
cmpsl
adc
inc
push
jmp
inc
mov
aad
and
push
mov
in
inc
push
enter
fidivrl
xor
pop
inc
iret
push
and
mov
xor
lcall
dec
xlat
das
outsl
notl
dec
sub
insl
mov
hlt
in
pusha
mov
dec
fmul
or
push
jecxz
pushf
dec
iret
jl
mov
jl
lahf
mov
std
jbe
mov
jo
nop
and
mov
pop
sbb
sub
mov
mov
es
int
or
stos
adc
sub
dec
rorl
xchg
lret
enter
je
xor
dec
jne
push
push
sbb
movaps
dec
call
sbb
stos
call
sahf
push
push
std
cld
test
out
iret
xor
lret
pusha
daa
imul
mov
les
pusha
xor
mov
fistpl
cmp
inc
cltd
xchg
sbbb
pop
mov
lret
dec
ucomiss
popf
lcall
das
loopne
push
mov
mov
and
mov
inc
repnz
mov
scas
icebp
jbe
sbb
inc
lock
out
pop
dec
les
sub
add
ja
jne
cmp
leave
cmp
add
cs
pop
mov
xchg
int3
dec
or
in
sub
lock
outsl
xor
mov
mov
mov
xor
cmp
and
mov
lret
mov
push
pop
movsl
repnz
push
dec
push
jge
int3
dec
dec
js
dec
insb
int
adc
push
idivl
scas
jecxz
inc
cmp
clc
jnp
ja
fcmovnb
out
cmc
dec
hlt
xchg
push
mov
aam
jae
lahf
fdivrl
jl
sbb
mov
scas
not
popf
push
sahf
out
adc
insl
cmp
pop
inc
ret
into
outsl
iret
xorl
dec
pop
insb
sbb
xchg
or
test
jo
xor
cwtl
sbb
leave
push
int3
push
cmp
xor
repnz
sti
jge
call
adc
mov
sub
or
inc
rcll
ja
inc
shl
inc
adc
jne
add
ljmp
out
dec
sbb
sbb
inc
popa
lea
cmp
jno
mov
out
jne
push
jp
fldcw
mov
jle
inc
les
out
push
mov
mov
bound
and
sahf
lds
dec
push
cmp
xchg
je
mov
insl
or
cmpsb
sbb
callw
pusha
add
mov
lcall
jno
mov
mov
cmp
push
adc
xchg
dec
mov
add
inc
push
jns
mov
je
ljmp
lock
lcall
loope
fs
lret
repnz
adc
dec
jnp
leave
mov
movl
or
sub
pusha
scas
fildll
test
cltd
not
jo
aam
movsb
mov
mov
push
mov
mov
mov
fldenv
jp
mov
jns
sub
pop
pop
add
ret
leave
sub
not
testb
fistps
andl
inc
xor
xor
ja
pop
mov
mov
mov
push
sbb
nop
xchg
outsl
pop
adc
int3
and
and
mov
cltd
push
jmp
pop
negl
inc
add
push
pop
mov
notb
adcb
xchg
fsubrl
das
lods
xor
test
adc
subl
push
lods
push
mov
sub
loopne
jnp
lea
fnstsw
jb
mov
fs
fiadds
mov
cmp
jmp
jmp
ret
or
adc
jcxz
add
popf
loop
sbb
int3
mov
sub
and
lock
xchg
jbe
add
cmp
jne
dec
js
dec
mov
movsl
sarl
sub
push
iret
pop
inc
dec
rcll
movsb
insb
adc
xor
test
rcrl
cmp
in
sbb
cmp
add
fs
mov
jl
sbb
and
orb
sbb
lods
pop
push
lret
pop
dec
test
ja
mov
mov
dec
add
lods
aaa
ds
adc
jg
dec
ficomps
jae
ret
mov
mov
loope
jg
push
fnstcw
or
stos
xor
roll
sti
daa
repnz
fisubl
shll
sti
add
testl
pop
pop
xchg
inc
roll
ss
xor
mov
dec
out
push
jnp
pop
imul
ss
push
inc
xchg
jecxz
cmp
xchg
inc
mov
inc
fbld
loope
sbb
stos
popa
lods
adcb
ret
movsb
lock
xor
loop
xor
sbb
xchg
mov
or
in
push
lds
inc
fstpt
add
jns
pop
fwait
dec
adc
push
cld
push
fldpi
outsl
push
sub
ljmp
je
pop
cmp
dec
pop
cltd
or
or
push
cltd
ficomps
mov
bound
mov
sub
xlat
pop
push
push
xchg
cmp
fbld
mov
cmpsl
push
out
mov
cmp
sub
mov
sub
xor
inc
insl
sub
ret
mov
push
fimull
in
adc
inc
jp
sti
lods
fwait
add
add
xchg
inc
cltd
js
pop
out
inc
cli
js
cmp
popf
push
pop
es
test
xchg
mov
jle
sarb
cwtl
pusha
ja
dec
lods
push
sub
cld
mov
adc
sub
pusha
pop
jecxz
push
enter
and
sub
scas
imul
mov
or
out
push
cmp
jae
popa
nop
aaa
pop
scas
inc
in
xchg
mov
add
jnp
sub
mov
out
inc
push
nop
mov
pop
nop
out
loope
nop
ljmp
lea
mov
cld
sub
xchg
es
adc
insb
add
push
shrl
std
loop
add
and
pop
out
divl
mov
notl
js
pushf
pop
sub
cmp
jne
mov
test
cmp
leave
push
push
jle
dec
push
int
aad
fimull
pusha
sbbb
setbe
xor
inc
enterw
cltd
xchg
hlt
loopne
mov
test
mov
je
inc
push
pop
push
pop
imul
pop
sbbb
xchg
jo
aaa
insl
push
mov
shlb
xor
sbb
sbb
or
cmp
pop
lods
add
aas
cld
sbb
mov
jge
push
mov
dec
cld
stos
nop
nop
mov
sub
clc
idivl
push
sub
pop
add
push
pop
mov
pop
cmp
mov
lret
xor
lret
pop
in
and
pushf
add
cltd
xlat
jecxz
cmc
jb
mov
xchg
dec
stos
movsb
std
dec
pop
mov
hlt
jno
push
and
or
out
mov
mov
ljmp
sti
pop
ret
fildl
test
adc
cmp
xor
jge
push
jne
xor
push
dec
sbb
or
inc
lret
lahf
pop
scas
mov
mov
jb
mov
testb
ljmp
push
adc
mov
pop
icebp
fs
aaa
ret
test
lock
lods
cmp
clc
xor
pusha
push
pop
pop
into
cmpsb
mov
pop
dec
jb
pop
push
dec
mov
push
lret
mov
sub
adc
lea
pop
stos
out
push
add
xchg
add
shlb
jle
in
call
call
jno
xor
bound
pop
xchg
aas
mull
js
in
lods
lods
popa
in
and
int3
dec
xchg
xchg
jo
mov
das
cld
xor
int
add
mulps
mov
push
cmpb
mov
in
faddl
icebp
mov
out
jno
nop
mov
dec
or
mov
lods
add
xchg
sub
movsl
jo
xchg
iret
pop
push
sbb
sub
xor
in
int3
rclb
test
sbb
pop
adc
rcrl
mov
dec
dec
popa
lods
mov
push
pop
adc
js
lret
and
mov
xchg
pop
dec
inc
test
aas
out
aad
lods
mov
aas
lahf
lea
mov
jne
xchg
movsl
mov
sub
jg
incl
sub
out
xor
adc
cmp
push
mov
add
iret
clc
lock
push
push
sbbl
stos
cmpsb
daa
cmp
inc
xor
out
sbb
inc
jmp
xor
pop
aam
call
inc
bound
adc
sub
lret
fstps
push
push
fistpll
jl
mov
push
jne
roll
sub
mov
push
xchg
les
pop
jns
push
mov
imul
fdiv
in
or
xor
or
push
lods
mov
jno
or
xchg
xor
fistpll
loop
push
adc
fwait
ret
cmp
sbb
dec
mov
mov
cwtl
je
or
and
dec
sbb
ja
xor
cwtl
outsb
xor
adc
push
test
sub
push
fwait
jb
mov
xor
inc
push
xchg
sbb
lock
sub
pop
leave
sbb
cmp
test
jbe
in
loop
adcl
push
out
mov
dec
mov
sub
lea
decb
pop
pop
add
repnz
xchg
inc
mov
cwtl
lahf
mov
sbb
pushl
mov
in
stos
pusha
clc
std
mov
mov
insb
or
jmp
into
adc
stos
rcrb
cmp
fistpll
fs
mov
and
out
fsubrl
repnz
inc
jp
xor
outsl
inc
ss
xlat
fidivl
mov
ds
mov
test
call
inc
xchg
mov
in
push
jle
addb
adc
dec
out
sbb
dec
dec
imul
xchg
lahf
sub
cmpsl
xchg
in
xchg
inc
pop
sub
jge
gs
stos
or
imul
pop
sarb
or
into
dec
xchg
call
jge
push
hlt
lcall
jnp
xor
test
int
xor
adc
push
stc
aas
dec
xor
mov
stc
mov
jno
ja
sub
iret
add
mov
push
jp
neg
out
je
scas
dec
pop
jb
dec
inc
xor
int
std
aaa
in
xchg
xchg
pop
jge
test
lret
ja
cs
shll
xchg
popa
sub
seta
mov
and
dec
bound
xchg
rorl
pop
stos
xor
xor
sub
divb
xchg
loope
pop
mov
test
cwtl
popf
mov
insl
lods
fistl
adc
clc
movsb
repz
pop
mov
stos
enter
mov
call
add
push
sub
xor
adc
icebp
or
inc
pop
pop
jb
mov
loopne
xor
push
and
mov
dec
and
addr16
mov
pushf
rorl
mov
sbb
cmpsl
add
sbb
xchg
fisubl
push
nop
dec
loope
push
dec
lock
push
and
jecxz
mov
jp
lock
add
mov
inc
fldl
lcall
adc
or
xor
mov
cmc
jle
dec
cmpsb
pop
or
lock
push
imul
sbb
shrb
mov
jne
test
push
fs
sub
pop
int
subb
mov
and
jo
outsb
mov
in
jne
push
sub
or
xchg
cmpl
and
imul
nop
push
or
jbe
mov
and
scas
fsubl
push
fstpl
dec
cmp
mov
pop
outsl
mov
out
clc
insb
pop
popa
sbb
bound
int3
aad
das
cs
add
adc
cmp
jbe
pop
mov
scas
jbe
pushf
sbb
push
mov
inc
add
dec
aad
and
sti
fadds
imul
mov
pop
imul
icebp
rorl
mov
xor
or
and
jns
mov
and
loop
mov
dec
xor
mov
aam
popf
add
outsb
outsb
cltd
pop
xor
jecxz
pop
xorl
das
cmp
jecxz
cld
pop
inc
add
fnstcw
pop
js
popl
sub
sub
subb
push
pop
xor
inc
push
enter
scas
xor
sub
sub
sbb
jbe
pusha
arpl
mov
je
xchg
adc
and
scas
pop
cmpsb
adc
lcall
adc
and
mov
jge
loopew
sub
outsl
push
or
popa
push
adc
add
add
cmpsb
repz
arpl
icebp
fildll
std
loopne
sbb
mov
and
adc
cwtl
ficoml
pushl
dec
xchg
movsl
push
mov
push
inc
stos
and
aas
push
iret
out
enter
pop
xchg
sbb
lods
ret
cmpb
add
hlt
dec
add
mov
loope
pop
mov
cwtl
mov
and
loope
arpl
lea
or
loope
rcll
jmp
insb
xor
mov
mov
bound
push
lods
pushl
leave
push
jle
push
cmp
pop
adc
in
push
fwait
cmp
ss
cmp
lret
les
out
clc
mov
addr16
cmpsb
push
mov
es
jecxz
and
shl
pop
fcmovbe
mov
sbbl
sbb
neg
test
cmpsl
xchg
xor
es
std
pusha
in
jo
xlat
lds
mov
lret
xor
aaa
and
test
jae
jl
loope
pop
and
frndint
scas
jno
xor
fbstp
sbb
sub
pusha
dec
jae
in
out
scas
out
dec
lcall
or
pusha
xchg
pop
sbb
cmpsl
push
add
or
stos
out
pop
cli
adc
call
dec
xor
sub
and
add
addr16
and
push
out
jns
sbb
bound
inc
inc
test
jae
lcall
imul
sar
or
call
aad
push
std
mov
jns
and
pop
in
add
jnp
mov
outsb
stc
loopne
cmp
out
sub
icebp
in
ss
dec
enter
cmp
in
pop
sahf
repnz
or
movsb
loope
push
mov
push
sub
xor
fwait
mov
sbb
pop
rolb
ret
cmp
mov
imul
mov
or
mov
ror
add
pop
and
mov
dec
xchg
fwait
jae
pop
push
scas
push
imul
dec
loop
mov
hlt
fisttpl
mov
ret
std
scas
and
lea
inc
sub
cmp
movsb
cmc
mov
int3
adc
cmc
ss
fldcw
iret
sbb
cmp
jge
ret
movsl
movsb
ss
xchg
push
dec
movhps
cmp
pop
sbb
out
xchg
and
cmp
out
and
inc
adc
xor
xchg
sti
dec
cmpsb
inc
rcll
inc
das
int3
add
inc
sub
mov
outsl
aas
scas
gs
xchg
and
sbb
in
pop
dec
pop
mov
lcallw
inc
inc
out
xchg
cmc
xor
fldl
das
mov
sbb
cltd
repnz
add
stc
clc
dec
jge
popf
outsb
cwtl
orl
cld
push
mov
icebp
test
push
and
push
xchg
sbb
sub
call
fstps
out
pop
pop
lret
jae
lock
pushf
dec
insl
insb
out
lret
mov
and
or
jmp
push
jnp
pop
or
fldt
mov
jnp
sbb
in
sub
push
sbb
lahf
test
test
cli
popf
ret
aad
test
jno
cltd
fmuls
outsl
mov
repz
mov
cmp
clc
aam
loop
shlb
call
lcall
int3
add
mov
pushf
sarb
pusha
jge
das
pop
sarb
mov
ljmp
mov
xor
push
bound
adc
fistpl
cmpsb
sub
es
gs
or
or
add
push
dec
jnp
mov
jmp
rorb
nop
sub
rclb
mov
xchg
into
ja
and
aam
add
jo
jb
adc
push
dec
mov
lcall
push
push
adc
cmp
sbb
pop
cmp
inc
sub
movsl
cmpsl
xchg
sub
push
cmp
test
shrl
lret
cmpsl
fisubrs
lahf
daa
dec
mov
shrl
gs
push
mov
stc
inc
dec
jge,pt
pop
pusha
cltd
rcll
and
pop
std
fnstenv
push
xor
push
scas
inc
push
scas
test
mov
bound
daa
mov
lret
add
jno
fcmovbe
hlt
lock
outsb
ja
or
mov
jmp
inc
sbb
xlat
mov
scas
shlb
pop
xor
dec
in
fstps
inc
xchg
out
cld
cs
mov
fisttpl
iret
out
cmp
dec
adc
icebp
xchg
mov
mov
add
stos
test
stos
dec
adc
fstpl
cmpsb
lods
fsubr
js
mov
call
bound
gs
rcll
setp
movsl
movsb
mov
cmc
mov
pop
and
and
sub
mov
mov
mov
in
adc
pop
adc
int3
push
jg
ja
dec
into
in
ret
rclb
call
inc
sbb
stc
outsb
or
frstor
pop
call
repnz
sbb
mov
mov
cmp
xchg
mov
dec
repnz
mov
sub
popa
xlat
sub
cmp
sub
jne
mov
xchg
dec
push
jo
jecxz
cmpsb
add
xor
out
xchg
test
pop
das
sub
xor
cwtl
adc
cmp
repz
aas
je
mov
arpl
aas
adc
dec
push
fiaddl
xchg
imul
roll
enter
mov
out
out
sbb
lea
push
xorb
es
xchg
dec
fstpl
cwtl
mov
int
aam
mov
cmp
dec
inc
inc
mov
push
push
dec
lds
nop
repz
mov
loop
mov
cmp
dec
mov
dec
and
bound
jbe
push
dec
add
pop
les
leave
mov
insl
loope
and
mov
mov
push
decl
adc
mov
fcom
imul
xchg
jnp
inc
xchg
dec
sbb
lret
and
dec
movsl
push
mov
daa
repz
dec
mov
sbbl
out
xchg
pushf
dec
jg
rcr
and
adc
fistpll
sarl
add
sub
mov
fdivl
and
xchg
push
mov
test
pop
push
dec
in
push
lods
push
mov
sbb
leave
lods
jbe
mov
mov
cmpb
aad
or
jl
jmp
es
arpl
push
or
andl
ret
loop
mov
loope
mov
ret
pushf
dec
pusha
cmp
add
enter
sahf
shlb
mov
enter
and
outsl
dec
movsb
push
lret
xchg
dec
fsubs
adc
and
test
fs
das
arpl
std
lahf
cmp
pop
sbb
and
les
cld
aaa
popf
loop
stos
cwtl
push
dec
fbld
insl
dec
mov
ljmp
sbb
sub
xchg
add
jg
arpl
int3
fadds
push
sbb
jo
and
cs
mov
inc
andb
or
mov
daa
scas
sub
jmp
mov
mov
adc
mov
ss
push
popa
and
shlb
xchg
xor
dec
inc
mov
dec
into
clc
jl
inc
xchg
in
xlat
imul
adc
enter
sahf
xchg
or
jnp
ss
subb
lret
sbb
jle
test
out
sub
rcr
inc
inc
idivb
rorl
popa
sub
or
mov
lcall
mov
inc
pop
push
call
aam
in
add
jb
push
or
adc
or
xchg
mov
iret
sbb
addr16
movsl
adc
xor
dec
cmp
or
push
hlt
push
jecxz
pop
mov
xchg
icebp
cmpsb
cmpsb
add
cli
ret
xchg
mov
fdivl
add
cmp
add
xchg
nop
push
outsb
pop
dec
int3
int
cmp
cwtl
aaa
pop
imul
mov
clc
inc
and
pop
adc
xchg
in
push
cmp
enter
shlb
flds
adc
nop
and
dec
mov
xor
lcall
add
lret
cmp
idivl
stc
sub
loop
je
or
scas
lahf
lock
inc
mov
loopne
aad
ficompl
push
aad
daa
cmp
fcomps
mov
ret
and
cmp
flds
call
out
test
popf
rclb
mov
or
nop
loopne
stos
sub
mov
dec
adc
in
push
imul
jns
push
cmp
cmpsl
shrl
cmp
mov
and
loope
xchg
cmpb
jo
cld
lcall
sbb
adc
int
shlb
shll
scas
repnz
add
cld
aas
incl
xor
pop
mov
mov
mov
fnstcw
push
adc
lods
sub
and
enter
pop
pusha
push
mov
mov
hlt
shl
fmul
xor
sub
push
push
fnstenv
ret
xchg
and
inc
xchg
jg
nop
lahf
out
push
fnsave
adc
das
or
icebp
push
mov
imul
roll
daa
data16
stos
lods
mov
movsb
adc
stos
dec
jbe
test
push
pusha
push
mov
je
pop
jns
jne
mov
dec
cmp
call
sbb
fcoml
add
stos
jecxz
rorl
add
sbb
cmpsl
dec
stc
pavgb
fldcw
mov
pop
inc
movl
iret
and
les
and
add
mov
push
xchg
fdivl
sbb
addr16
loop
inc
jo
inc
adc
mov
cmp
pop
int3
cmp
int3
stc
cltd
xor
call
sbb
popf
jmp
frstor
jns
sti
std
mov
test
inc
push
sbb
add
mov
cmp
mov
ret
or
pop
inc
push
in
adc
into
xor
clc
dec
mov
ss
insb
rolb
mov
mov
adc
int
sub
mov
dec
popf
and
pop
out
mov
sub
xor
sub
iret
jno
rcll
and
fwait
scas
adc
pop
push
pop
fimull
and
test
nop
adc
inc
sbb
dec
ror
cmp
xchg
loopne
sub
sahf
outsb
clc
push
jmp
insb
xchg
cmp
push
mov
or
fadds
ljmp
xchg
ret
std
cmpsw
add
js
adc
sub
cmp
or
movl
dec
mov
jbe
insl
xor
dec
in
mov
adc
push
mov
loop
adc
adc
mov
int
mov
inc
call
ljmp
xchg
mov
or
xchg
dec
test
mov
popa
mov
fwait
testb
shlb
bnd
or
sbb
or
ja
aaa
pop
push
mov
mov
ud1
jmp
ret
mov
mov
adc
jp
push
or
std
mov
jae
jns
gs
pushf
push
das
inc
xor
sbb
imulb
ja
scas
popa
and
test
rorl
sbb
mov
lret
xchg
adc
mov
sbb
pop
sbb
adcl
aam
xchg
add
add
pop
xchg
adc
xchg
std
dec
insl
lods
int3
mov
sbb
push
shrb
mov
in
mov
mov
or
pop
js
popa
dec
adc
ja
addr16
in
sbbl
xor
mov
loopne
add
jle
sbb
lea
popf
pusha
inc
xchg
cmpsl
pushf
pusha
insb
js
cmp
mov
or
push
arpl
pop
movsb
shll
insl
xor
pop
mov
jb
jb
cmp
movsl
and
add
push
fildll
push
sub
out
aaa
add
mov
jnp
out
or
mov
roll
xchg
ret
xchg
cmpl
arpl
rcll
call
clc
stc
lret
daa
xlat
push
dec
xchg
push
add
call
subb
dec
fwait
fs
and
adc
jne
fsubrs
les
arpl
xchg
stos
pop
mov
std
xchg
pop
loop
push
xchg
jnp
mov
mov
sub
and
mov
sarl
ds
xchg
sahf
pusha
mov
loop
aaa
outsl
adc
hlt
aas
push
int3
dec
xchg
ss
push
pop
xor
xchg
clc
mov
cmc
push
pop
les
dec
clc
pop
lock
inc
shl
int3
jb
enter
add
pop
xor
pushfw
imul
movsl
xchg
int
cld
mov
mov
jne
mov
push
test
dec
fisubs
push
movsl
mov
scas
mov
jns
aam
inc
iret
mov
fsubs
ljmp
xor
sbbl
mov
mov
or
fiaddl
mov
jecxz
mov
sarl
int
mov
fbstp
sbb
js
adc
insl
add
bound
adc
lcall
ljmp
xchg
inc
xchg
test
cwtl
jo
addl
jmp
cmp
addr16
jmp
add
mov
xchg
push
js
fdiv
call
mov
mov
test
call
and
adc
xchg
jo
les
xchg
jp
or
sub
xchg
cmp
xor
iret
shrl
or
sub
mov
mov
cmp
sub
cld
adc
cli
shrb
das
mov
out
mov
loopne
rcl
ja
shlb
fbld
mov
push
arpl
iret
fwait
dec
mov
and
ficoms
out
movsb
and
fstl
hlt
jmp
xchg
cld
inc
lcall
in
xchg
daa
fistpl
ret
std
push
push
pop
std
loop
add
arpl
mov
mov
into
or
cmp
cwtl
inc
xchg
adc
sub
cltd
mov
fidivrs
pop
add
dec
xchg
xchg
inc
push
loope
std
roll
icebp
mov
add
jnp
rorb
pop
fisttpl
dec
repnz
stc
fmull
sbb
out
stos
hlt
outsb
stos
inc
les
mov
test
int3
xchg
fcoml
sub
xchg
icebp
jp
out
mov
dec
cmp
xchg
jl
cld
mov
jg
sbb
push
loop
jle
inc
add
dec
xor
leave
movsl
push
mov
push
xchg
mov
push
test
xchg
cmp
or
sahf
icebp
mov
add
dec
sub
dec
or
lods
stc
int
test
push
mov
repz
or
xorl
adc
push
scas
push
loop
adc
ljmp
out
out
sarb
cwtl
sbb
sbb
sarb
stc
sbb
out
xchg
sti
add
mov
xchg
push
jbe
mov
and
jb
dec
pop
jg
jl
sub
test
or
add
jle
inc
cld
mov
mov
mov
cmpsl
outsl
dec
xchg
iret
das
mov
shlb
adc
out
fwait
pop
inc
or
shrl
into
mov
test
pop
mov
loop
fidivl
or
ja
divb
shll
cmp
pop
cmpsl
mov
xchg
mov
jbe
fs
sbb
or
adc
cli
dec
push
or
inc
add
sbb
sti
test
addr16
data16
jo
mov
and
xchg
mov
mov
es
sub
and
add
je
mov
fidivrl
dec
movsb
loopne
fmuls
adc
and
icebp
shr
pop
js
xlat
sbb
std
leave
inc
cmp
xlat
enter
cmpsb
mov
loop
cmp
retw
or
lock
gs
pusha
inc
dec
jmp
inc
jno
push
xorl
fildl
scas
jp
hlt
mov
ja
out
fsts
and
and
dec
push
scas
xchg
iret
nop
jecxz
mov
add
or
xor
shrb
sbb
iret
aad
xchg
loop
out
sbb
daa
mov
pop
clc
pusha
pop
shl
mov
test
xchg
out
or
test
xchg
addr16
test
fwait
inc
jle
in
sti
jnp
fs
rcr
xchg
rcrl
mov
jecxz
imul
and
adc
mov
add
dec
jecxz
hlt
xchg
add
scas
push
mov
pop
sub
pop
ret
andl
jg
mov
cmpsb
jge
adc
loopne
imul
adc
and
inc
xor
lret
mov
sbb
jle
test
or
es
or
sbb
mov
sub
ljmp
jg
out
adc
aam
push
stos
pop
ja
test
xor
mov
enter
leave
xor
sbb
fnsave
cmp
mov
sub
dec
aam
xor
cs
push
in
das
rcrb
iret
addr16
xor
pop
mov
lcall
repnz
push
rcrb
add
adc
int
std
xchg
test
shl
jp
hlt
out
pusha
data16
mov
out
push
and
inc
pop
and
fs
shlb
cwtl
jp
push
xchg
aam
sbb
jns
cmp
in
js
adc
mov
call
pushf
push
cmp
repz
push
mov
fs
mov
xor
ja
pop
scas
lds
test
mov
mov
pop
mov
je
orl
push
push
fsts
data16
in
xlat
xor
mov
bound
dec
push
add
inc
mov
adc
pop
js
mov
ret
cmpsl
xor
in
addr16
cmp
push
push
mov
enter
fwait
enter
notrack
lea
mov
mov
mov
sbb
cs
push
cmc
inc
fisttpl
mov
lahf
dec
iret
mov
mov
lea
mov
mov
sar
push
addr16
push
pusha
jp
push
ret
xchg
in
iret
dec
lea
cmp
dec
aam
nop
bswap
xlat
jl
adc
aas
repnz
es
cmc
push
sbb
enter
push
add
dec
add
mov
lahf
mov
jmp
daa
sbb
pop
imul
push
sahf
pusha
lcall
scas
inc
jl
sarl
scas
mov
sti
pop
add
ss
sub
sbb
sti
in
cmpsl
cwtl
repnz
imul
lahf
daa
dec
fistps
sbb
jg
pop
jb
push
push
mov
lcall
jg
adc
mov
pushl
sahf
push
lret
and
push
lds
cmp
or
mov
shll
cltd
push
dec
mov
ficoms
and
nop
mov
cmp
loop
xchg
and
bound
inc
lods
dec
jno
pop
cmc
ret
mov
cmp
mov
sub
adc
adc
xor
xchg
sahf
xlat
cmp
mov
push
adc
jns
inc
mov
jo
aad
mov
cltd
imul
add
ja
movsl
fsub
or
dec
jno
lea
xchg
mov
cld
xchg
repz
push
stos
push
cmpsb
inc
inc
mov
sahf
sbb
mov
xchg
je
mov
lahf
loopne
sub
fsts
xor
sub
push
ss
pop
aaa
les
push
lret
ret
cltd
push
xor
jb
mov
scas
pusha
dec
cld
inc
inc
push
subl
xchg
subb
es
and
push
in
push
cltd
aas
mov
xchg
addl
ljmp
sub
xchg
xorl
outsb
adc
add
xlat
dec
rcrb
iret
lods
mov
repnz
iret
mov
das
mov
add
lds
mov
fwait
pop
cmc
ret
stos
xchg
movsl
out
les
ds
jge
xchg
mov
loopne
adc
xchg
rcrl
ficoml
push
dec
orb
fstps
and
gs
push
fdivrl
push
pushf
sbb
sahf
outsl
nop
cmpsl
movsl
push
mov
cmp
dec
push
push
aas
jb
fbstp
jae
data16
dec
lods
scas
and
pop
jg
pop
push
pop
movsl
add
lock
test
shlb
pop
sub
mov
dec
bound
dec
loop
sbb
xchg
scas
pop
sbbb
icebp
and
jne
push
add
lods
ret
xchg
or
es
mov
jmp
fstp
ja
mov
dec
mov
or
push
lahf
sub
adc
and
insb
xchg
adc
pop
faddl
and
dec
mov
outsl
xchg
dec
es
mov
cwtl
dec
cmp
xchg
jge
mov
inc
pop
push
mov
into
push
cmp
pop
imul
cs
outsb
es
inc
lock
lock
add
pop
outsl
lods
push
xchg
pop
xchg
fldcw
je
dec
push
jl
jbe
xor
mov
pop
push
ss
es
dec
sub
jmp
inc
push
mov
cmp
iret
and
push
jnp
mov
xchg
sbb
ret
push
imul
es
mov
mov
cwtl
sbb
in
popf
into
xorb
sub
in
iret
sbb
pop
adc
add
enter
insb
rcrb
cltd
clc
outsl
nop
in
pop
hlt
and
mov
mov
lods
xor
mov
cmp
pop
cmp
rorl
cmp
push
cmc
leave
fabs
rolb
cld
xor
les
dec
xorl
xchg
scas
addr16
mov
fldl
xor
out
xchg
enter
pop
in
push
jecxz
adc
push
adc
jno
jbe
inc
pop
ss
push
shlb
and
mov
shll
insb
sub
decl
mov
out
sahf
sub
or
cmpsb
popf
jno
jne
mov
cmp
jg
and
je
pop
or
jecxz
stos
adcb
test
stos
inc
in
out
int3
sbb
fldenv
imul
insl
sub
pop
mov
hlt
pop
mov
mov
add
or
hlt
jecxz
mov
enter
and
roll
repz
or
clc
dec
sub
dec
das
sti
adc
xor
in
icebp
movsb
std
scas
or
sbbl
hlt
mov
mov
pop
xlat
bound
xlat
movsb
push
test
popa
fs
mov
add
push
aaa
inc
imul
dec
movsl
pop
imul
ficompl
push
mov
push
cmpb
imul
cwtl
jp
jne
mov
cmc
xlat
loop
fldenv
sbb
jns
sahf
movsl
or
popf
sbb
or
or
stc
aas
xor
mov
loope
jbe
dec
inc
add
mov
sbb
outsb
sbb
push
jl
dec
sbb
mov
xchg
or
mov
mov
pop
cmp
inc
ja
ret
pop
mov
mov
popa
cmp
push
int3
sub
ljmp
adc
fsubs
loope
ds
jo
mov
xor
push
cmp
fstps
fists
and
nop
mov
repz
push
test
mov
xor
and
test
sbb
int
sbb
xchg
xor
ja
fst
pop
popa
mov
jg
push
inc
jg
ret
push
stos
cmp
sbb
mov
or
mov
arpl
dec
fwait
mov
xor
pusha
dec
and
nop
hlt
or
mov
add
lds
dec
jnp
push
adc
and
addl
sub
sbb
push
jbe
sarl
lods
hlt
or
js
in
fstps
nop
lea
fcmovnu
dec
mov
or
cld
xor
sub
adc
cltd
jg
nop
mov
in
xchg
cs
cli
adc
jno
nop
jg
mov
mov
mov
mov
test
outsl
jg
rorb
mov
push
xchg
jg
push
jns
mov
push
std
stos
int3
adc
jp
pop
out
lods
sbb
cmp
movsb
or
push
mov
xchg
das
push
shll
aas
lahf
out
in
inc
lcall
in
shll
mov
pop
sbb
out
aam
xor
mov
scas
lds
xor
xchg
iret
xor
fldenv
mov
mov
repz
xor
outsl
lcall
popa
outsb
mov
mov
cmp
inc
inc
and
mov
dec
decl
fmull
cli
lods
pop
jns
ret
mov
jb
cwtl
stos
fcompl
and
cld
pusha
mov
loop
movsl
jo
das
fadd
mov
push
xor
sbb
push
aaa
das
pop
mov
cmp
mov
lea
loopne
call
fmull
or
sub
sub
addr16
inc
shll
mov
mov
dec
xor
sti
adc
dec
inc
push
xor
idivb
add
jp
mov
dec
lret
test
inc
pop
or
fs
mov
xchg
jne
dec
dec
lahf
cmp
add
and
sbb
and
mov
daa
dec
sub
pop
xor
xchg
mov
daa
notl
push
negb
and
or
and
adc
xlat
mov
lea
pop
jno
mov
hlt
push
xchg
xchg
mov
outsb
call
and
mov
jmp
repz
mov
xchg
mov
sbb
add
pop
test
aaa
in
mov
mov
imul
push
gs
aad
push
and
out
mov
pushl
stc
xlat
stos
and
xchg
dec
test
test
push
dec
mov
pop
out
aam
stc
sti
cli
mov
mov
outsl
jp
jne
in
aam
jmp
cmp
jl
dec
xchg
mov
cmp
cmp
dec
ret
sbb
lret
adc
gs
in
lahf
adc
sbb
sbb
fsubrs
xchg
or
or
mov
in
xor
push
push
mov
les
sbb
pop
test
rcrl
scas
popa
mov
xadd
mov
out
ds
xor
repnz
mov
inc
aad
inc
mov
push
insb
sahf
es
sbb
sete
test
push
into
fiaddl
inc
lea
dec
jbe
adc
les
push
loope
cmp
rolb
int3
fcompl
push
mov
pop
or
ret
ss
jb
mov
xor
daa
sti
mov
test
push
jbe
ret
fbld
call
jo
mov
mov
icebp
sub
gs
adc
mov
lea
pop
loop
push
cmp
jnp
jnp
rol
jbe
dec
stc
call
jnp
jmp
sti
push
sbb
pusha
pop
pop
mov
mov
mov
push
xor
fldt
mov
repz
inc
mov
gs
loope
iret
pop
fimull
movsl
test
xlat
stos
mov
adc
loope
pushf
imul
cltd
rclb
int
rcrb
movsb
xlat
jne
xlat
test
test
add
xor
push
ret
mov
stc
ja
out
xchg
repz
and
icebp
test
in
es
mov
cli
xor
push
push
pop
sarb
push
in
and
add
rorl
nop
mov
or
or
and
xor
jnp
call
call
rcr
xchg
bound
testl
loop
cmpsb
mov
mov
jno
sahf
dec
mov
ret
jecxz
sub
rclb
and
xchg
jno
jae
push
shl
inc
ja
popf
iret
int3
pop
sbb
dec
pop
std
test
das
pop
cltd
dec
dec
jb
mov
test
inc
sahf
adc
aaa
push
mov
in
aas
sub
stos
movsl
push
fldl
add
fwait
rorb
add
push
jle
cmp
imul
mov
popf
mov
dec
fs
aas
movb
jnp
mov
push
cmp
fdivrl
enter
or
sbb
and
pop
pop
push
imul
in
shr
loopne
rcr
sti
push
rorl
fmuls
jle
clc
sbb
test
sub
outsb
xor
mov
pop
shr
mov
loope
dec
jnp
sbb
stos
cmpsl
sbb
fs
add
sbb
pop
inc
sbb
fsubl
lret
int3
push
bnd
test
mov
jle
dec
dec
or
test
cmp
imul
inc
aaa
sbb
test
sti
dec
cwtl
lret
pop
movsb
mov
mov
xchg
mov
add
jmp
mov
sarl
repnz
sbb
mov
fldt
test
xchg
jecxz
jecxz
xor
adc
xchg
shll
jl
cmpl
pop
insb
sub
add
and
repz
mov
cmp
test
hlt
inc
dec
outsb
into
add
stc
test
push
ret
lsl
in
push
es
jl
inc
inc
and
int3
repz
ja
mov
lahf
data16
out
sbb
jo
test
jg
push
mov
jecxz
jg
arpl
sti
pop
bound
int3
mov
xor
mov
out
fbld
mov
push
rcrb
test
into
nop
loope
xlat
xchg
pusha
mov
outsl
pop
int
pop
add
pop
ja
push
xor
mov
je
cmp
or
and
xchg
scas
andl
dec
mov
hlt
cmp
push
lcall
fidivrs
mov
xchg
daa
decl
cld
enter
push
pop
jbe
ljmp
mov
adc
addr16
jno
lret
enter
mov
push
mov
subb
int3
mov
popa
ret
dec
in
in
or
jmp
frstor
cmp
push
xchg
iret
mov
mov
mov
gs
jne
push
lcall
outsb
test
xchg
mov
icebp
mov
lds
nop
inc
rcrb
stos
push
jecxz
cs
sub
clc
xor
dec
xor
aam
jl
sbb
lock
jmp
popf
jno
adc
insb
mov
mov
call
lods
mov
mov
jae
rcr
icebp
sbb
pusha
mov
mov
dec
add
dec
lea
mov
mov
lods
rcr
mov
mov
push
mov
pop
ret
clc
jl
insb
pop
icebp
in
dec
dec
mull
and
sub
or
pop
adc
push
icebp
int
sbb
stos
xor
xchg
jo
xchg
push
in
in
jge
fstps
sub
outsb
jg
pop
movsl
call
sub
jmp
insl
dec
dec
and
lock
pushf
sti
popl
lahf
lods
mov
cmp
cmpsb
cs
and
cmp
or
mov
sahf
aad
ret
dec
pop
cmp
dec
push
bound
cmp
test
pop
jmp
lock
sub
mov
outsb
sbb
repnz
or
icebp
les
imul
outsb
fcoml
add
pop
arpl
push
cmp
push
push
jbe
aas
dec
mov
scas
js
sahf
mov
ss
inc
lahf
sub
add
xchg
jno
outsl
loope
jmp
std
jnp
xlat
lahf
dec
pop
mov
out
imul
xor
sbb
mov
andb
push
ja
jp
call
xchg
popa
dec
xor
adc
fwait
outsb
and
cs
addb
push
mov
push
xor
push
push
inc
out
or
hlt
rep
or
ss
testl
push
pop
xor
pop
loope
movsl
push
test
aas
inc
jnp
outsl
dec
int
ss
jmp
lahf
inc
sbb
push
nop
ret
sub
pusha
loop
imul
push
ret
hlt
mov
sar
subl
mov
out
sub
adc
pop
add
pop
sbb
inc
ljmp
data16
fistpl
out
lcall
pop
push
js
ror
pop
adc
adc
fs
mov
sbb
cmp
mov
mov
out
test
push
out
adc
int3
test
adc
jb
mov
je
push
test
mov
sahf
adc
into
mov
xor
lds
sbb
mov
int3
xlat
cmpsl
adc
cmpsb
cmp
pop
lcall
out
push
mov
ret
and
mov
jns
sbb
ret
jg
inc
int3
pop
jl
insb
orl
mov
and
dec
mov
loopne
mov
lahf
or
stos
adc
cmpsl
call
cmp
xor
in
add
mov
cmp
out
mul
pushw
push
jl
and
push
jmp
das
outsb
sub
lods
cmp
and
das
inc
sub
arpl
xchg
sti
gs
lahf
and
fimuls
adc
pop
mov
hlt
fwait
stos
out
scas
xchg
jecxz
clc
xor
jmp
lods
rolb
cld
bound
call
push
cmp
inc
push
imul
stos
xchg
jle
shrl
lret
ja
fistpl
mov
inc
les
insl
shr
push
push
lds
imul
iret
das
xchg
cltd
mov
inc
scas
cs
std
mov
jbe
adc
out
cmp
ss
and
sbb
faddp
call
insl
or
inc
ds
add
cmpsb
push
mov
or
std
daa
cmpsl
or
push
pop
mov
popa
add
fbld
hlt
movsl
jp
mov
xchg
insb
lods
xor
addr16
pop
inc
mov
hlt
inc
mov
dec
lret
jl
adc
fs
es
cmp
cs
nop
xor
cmpsb
pusha
cli
mov
fidivrl
cmp
les
jle
jp
jae
mov
pop
and
loopne
xor
add
into
dec
fucomp
pop
out
insb
sub
adc
lods
mov
push
fs
lea
xchg
mov
mov
pop
ftst
xchg
cmpsb
into
xor
addr16
jno
add
sbb
jo
dec
hlt
cmp
sahf
cli
pop
add
adc
std
lds
rcrb
cmp
sahf
test
dec
fildll
ret
inc
cld
jle
or
out
cmpsl
rorl
sbb
or
ljmp
jl
xor
xchg
xor
arpl
in
mov
jmp
add
push
sbb
jne
mov
enter
insl
jae
out
movsb
jne
xor
test
cmp
into
xchg
cld
cltd
cltd
arpl
fcoms
adc
dec
sbb
and
adc
and
mov
dec
mov
mov
push
stc
add
dec
lds
loop
mov
mov
lods
adc
jo
aad
test
std
arpl
sub
mov
and
push
in
adc
stc
in
fiaddl
sbb
scas
jns
sbb
xchg
add
test
mov
xchg
sub
pop
dec
push
imul
sub
cmpsb
sub
loope
jecxz
decb
fwait
pop
fs
lds
mov
jmp
testb
lock
cwtl
cli
popa
mov
into
add
inc
inc
mov
rcrl
js
sub
ret
leave
mov
or
dec
fisubrs
dec
int
mov
arpl
scas
push
push
flds
mov
or
xchg
push
loope
inc
fucomip
imul
call
add
mov
jns
adc
xchg
mov
shlb
jmp
jl
mov
xchg
stos
xchg
ljmp
add
jmp
xchg
push
je
lods
hlt
test
stos
popa
or
mov
inc
test
shlb
addps
xor
xor
out
mov
ss
pushf
ret
mov
sub
mov
xchg
scas
cmp
push
sub
sbb
push
fnstcw
rclb
stc
cmp
or
adc
icebp
loope
inc
adc
fldcw
fmull
repnz
xor
outsb
xor
push
js
pop
in
fbstp
add
movsl
add
aad
xchg
add
mov
or
ror
mov
mov
mov
loop
mov
aam
add
xor
xor
push
cmp
mov
adc
sahf
cmp
jmp
mov
out
mov
movsl
pop
out
pop
dec
ds
imul
testl
test
sahf
or
dec
pop
int
pop
jp
jns
scas
mov
mov
in
dec
gs
rcl
sbb
cmp
repnz
loop
outsl
aaa
dec
mul
stos
xor
fs
xchg
jg
push
imul
fcomp
push
mov
pop
push
lock
xchg
sahf
ret
xchg
cmp
test
cmp
cwtl
mov
push
ret
pop
mov
hlt
fisubs
mov
mov
loop
decl
mov
pop
dec
sub
gs
add
cmp
sbb
ja
jmp
xchg
sub
movsl
jno
jno
jnp
lret
sbb
loop
iret
popa
data16
and
daa
adc
jno
inc
xchg
pop
js
push
lahf
dec
rep
pop
adc
test
call
pop
inc
cli
hlt
mov
fstp
sahf
pop
jg
loop
bound
outsb
adc
sti
xor
mov
dec
fstps
lods
loope
loope
pop
adc
jg
add
pop
mov
xor
add
test
mov
pop
sub
bound
dec
push
pop
imul
test
jge
out
fdivr
stc
imul
loope
cmpsb
push
lea
adc
add
mov
or
xchg
pop
aam
popf
imull
fsubs
mov
xchg
lods
or
push
test
sub
xor
mov
lret
and
sarb
imul
push
sbb
popf
sbb
push
insb
imul
xchg
add
mov
sub
js
mov
sahf
daa
cmc
lcall
in
mov
mov
dec
mov
enter
fldcw
ret
xor
mov
ss
jmp
cmp
daa
xchg
fiadds
adc
aam
jae
add
fmull
jns
pushf
push
sub
fisubrs
adc
jmp
stos
dec
outsb
pop
ds
and
pop
js
cmp
leave
mov
add
in
add
test
jl
sub
cmp
ficomps
xchg
sbbb
sub
in
push
jno
int3
mov
sub
cmp
push
movl
mov
sarl
add
or
sarl
mov
lahf
adc
stos
adc
jns
gs
mov
movsl
out
repz
jg
ret
fwait
mov
outsb
add
mov
cmp
test
dec
push
cmp
lds
cmp
dec
pop
lret
fwait
outsb
push
sahf
pop
mov
and
aad
xchg
and
adc
outsl
dec
push
je
mov
cmpsl
cmpsb
mov
lock
je
xor
adc
iret
push
test
fsubs
cmc
xchg
movsb
lret
xchg
out
mov
and
adc
push
popf
ljmp
pop
add
or
jae
mov
dec
into
xor
imul
sarb
push
jge
push
test
out
add
cli
or
mov
mov
dec
imul
pop
jnp
test
cmp
adc
bound
add
pmullw
mov
cmpsl
cld
adc
aaa
add
dec
xor
or
sub
push
xor
sbb
lods
cltd
jecxz
cmp
jp
and
dec
jp
xor
adc
popf
fadd
inc
in
cli
cli
int
cmp
xchg
leave
mov
push
das
push
into
lcall
addr16
sahf
adc
mov
std
cmp
jmp
movsl
imul
sbb
aaa
imul
or
and
pop
xlat
inc
iret
bound
pop
out
arpl
int
fwait
xchg
xchg
jge
cmp
sbb
cmc
data16
cld
mov
cltd
insl
hlt
sbbl
xchg
mov
cli
push
jmp
dec
mov
mov
lea
je
aaa
or
or
push
fildll
cmc
mov
std
rol
leave
or
mov
aad
test
push
out
xor
stos
push
enter
in
ss
push
test
iret
rcr
aad
lods
xchg
or
add
sub
adc
int3
inc
in
inc
fbstp
popf
in
fstl
outsb
dec
pusha
movsl
dec
iret
cmpb
in
stos
jno
xor
inc
mov
sub
push
orl
inc
or
insl
cmpsl
mov
adc
sub
cmp
sahf
cmc
xchg
sar
sub
mov
push
sbb
addl
add
adc
xor
test
stos
addr16
int3
sbb
les
daa
cmp
dec
mov
mov
test
and
and
addr16
std
pop
sbb
cmp
pop
mov
out
popf
in
shll
inc
stos
bswap
push
add
ja
xchg
push
je
sub
push
shufps
cmp
fwait
addb
cmp
pop
aad
inc
adc
loope
arpl
or
lods
sbb
or
into
dec
pop
leave
repnz
cmp
pop
adc
mov
xchg
mov
shl
out
xchg
mov
ret
fnstenv
xor
pop
jbe
adc
or
mov
dec
xchg
push
inc
sti
fildl
push
stos
cmp
mov
inc
lea
sbbl
shl
inc
sub
push
das
mov
cmpsb
ss
lods
sbb
lahf
clc
cltd
adc
mov
jb
ds
dec
fisttpl
int
inc
cmp
das
arpl
sub
testl
and
sub
mov
jmp
push
push
aas
int3
cmp
outsl
jno
pop
shl
clc
jmp
mov
push
std
add
push
negb
pop
xor
scas
pop
push
adc
push
pop
enter
adc
arpl
jg
xor
es
lret
sbb
mov
repz
js
pop
imulb
push
addr16
xchg
cmp
and
sbb
sub
xorb
fcom
aas
loopne
dec
mov
add
nop
sahf
or
je
xorl
mov
popf
push
inc
push
push
add
repz
das
cmpsl
fisubs
push
add
test
pop
cmc
hlt
lcall
mov
xchg
sbb
sub
sbb
and
cmp
int
add
bnd
icebp
ja
insb
pop
sarl
les
loope
push
pusha
add
ret
cmp
pop
push
sub
dec
imul
push
jnp
rorb
fcmovu
mov
shl
add
imul
jnp
fistl
stos
test
sub
out
inc
call
add
cltd
sbb
pushl
lock
rclb
jp
sub
femms
rolb
lods
iret
shrl
lahf
push
ja
clc
adc
lock
jle
ljmp
in
test
sub
jbe
fstl
fstl
mov
cmp
push
jnp
test
pop
mov
xchg
push
lahf
test
hlt
push
fdivl
imul
add
mov
popf
mov
xlat
cmc
dec
shll
arpl
and
mov
and
adc
daa
adcb
mov
xor
xor
in
push
aas
in
xchg
mov
cs
inc
cmp
aad
out
jae
xlat
call
jno
lahf
xchg
jle
jno
cmp
shlb
roll
jle
inc
out
mov
mov
cmp
jle
dec
ss
and
sete
jge
jl
sub
and
mov
fistl
xchg
add
adc
jp
cs
push
or
addr16
sub
in
jp
pop
push
fisubrs
add
mov
xor
fldt
or
aam
sets
cmc
mov
cmc
cmp
jecxz
pop
aas
mov
push
pop
cmp
xor
xchg
enter
sub
jmp
mov
or
icebp
adc
mov
dec
add
mov
adcl
subb
and
jmp
movsl
outsb
pop
mov
inc
cmp
mov
xchg
pop
mov
rorl
outsl
nop
and
jmp
xor
jecxz
nop
dec
mov
dec
mov
fsubr
adcl
push
mov
mov
loope
mov
into
lea
inc
pop
fisttps
pop
xor
cwtl
nop
cmpsl
jp
push
cs
sbb
pushl
sbb
jb
and
xchg
push
loop
inc
push
cld
call
je
insb
jmp
push
sbb
rcl
scas
in
lcall
jne
imul
aaa
fildl
pop
xlat
cmc
inc
add
lods
adc
and
xchg
shrb
lea
cmpsl
mov
jae
shll
subl
push
cli
push
push
push
jge
mov
imul
cwtl
or
xchg
mov
mov
imul
pusha
xchg
ja
mov
add
push
arpl
sub
arpl
or
pushf
daa
pushf
neg
add
pop
rol
scas
xchg
xor
pop
push
hlt
cltd
shrb
push
pusha
imul
xor
adc
lret
lret
popf
mov
push
scas
push
int3
pop
gs
cmpsb
aam
xor
popf
mov
push
and
mov
adc
push
sub
sahf
push
or
jp
loope
mov
cmp
add
or
test
stos
in
pushf
dec
inc
test
ret
mov
aas
and
inc
sub
sub
dec
ret
stc
push
jbe
sub
insb
lret
movsl
mov
add
rolb
inc
or
dec
sti
add
repz
adc
jnp
mov
xchg
push
or
jg
pop
mov
outsb
xor
fnstsw
pop
jno
jle
cmp
and
cs
mov
pop
mov
mov
sarl
adc
daa
xor
jmp
push
int3
push
daa
cli
pop
dec
inc
inc
aad
jp
rclb
mov
jns
repz
mov
sub
xchg
cld
dec
add
popf
loopne
mov
out
push
and
pop
out
sub
aad
shll
add
movsb
test
cmp
sti
loopne
push
inc
sub
cmc
mov
cli
push
lahf
testl
shlb
sub
mov
mov
jnp
add
cld
xor
sbb
xchg
cmp
mov
xchg
adc
popf
push
add
jb
nop
call
dec
ss
int
sbb
xchg
je
push
shlb
mov
fbstp
outsw
pop
and
mov
out
test
cmp
mov
xor
push
mov
pop
sub
and
and
sub
add
inc
sub
pushf
repnz
pop
clc
xor
enter
ret
scas
mov
inc
das
mov
ljmp
push
lret
sbb
testl
movl
aaa
push
je
movsb
fs
mov
add
jge
imulb
ficoms
mov
and
mov
movsl
mov
sub
clc
pop
data16
jns
xlat
scas
push
mov
out
xor
fdivrl
jmp
add
in
arpl
insb
push
dec
cli
cmp
cmp
cmp
call
mov
cmp
cmpsl
dec
insl
test
popa
inc
push
xor
fldt
jl
test
test
cmp
mov
pop
fnstcw
push
das
add
or
outsb
cltd
cmp
xor
jecxz
adc
sub
lcall
mov
gs
sarl
lods
mov
xor
xchg
hlt
inc
jp
nop
jmp
lock
mov
imul
icebp
cmp
push
and
xchg
pop
cmpsb
aad
and
xchg
int3
ss
sbb
rol
pop
ja
in
test
mov
push
les
out
lods
and
fisubs
pusha
push
push
cs
ds
into
adc
cmc
mov
daa
les
xor
imul
test
scas
xor
mov
scas
mov
pop
xchg
js
xor
and
das
shll
jle
insl
xchg
stc
mov
lods
iret
or
scas
and
cwtl
jle
pop
pushf
push
push
loop
pop
or
popf
sub
inc
xchg
lods
lahf
int3
icebp
xor
or
push
xor
mov
fisttpll
cmc
push
cmc
inc
cli
mov
cmp
mov
dec
cmp
mov
leave
aaa
fisubrl
jle
jmp
cwtl
cmp
lods
pop
adc
test
mov
inc
xor
and
js
bts
mov
mov
lods
push
xor
jno
icebp
lret
mov
rorl
inc
lret
push
adc
xlat
xchg
mov
and
out
jne
xchg
lcall
ljmp
mov
mov
mov
lahf
mov
inc
fcmovnu
pop
jno
xorl
in
mov
je
mov
jbe
cmpsl
leave
daa
dec
shrl
mov
push
or
cmp
lock
push
jne
push
mov
lods
jg
sub
pop
les
jg
repz
xor
mov
or
push
ljmp
mov
std
add
mov
in
mov
loop
push
sub
or
arpl
ja
xchg
cmp
ret
shll
out
sahf
lods
dec
jnp
dec
pop
xchg
jb
leave
aad
sub
std
inc
lods
pop
lret
mov
jo
and
xchg
in
hlt
add
mov
sahf
mov
ja
or
pop
xchg
mov
loopne
inc
jbe
cmp
sti
fsubl
iret
repnz
aaa
pushf
mov
inc
mov
xchg
cmp
inc
testw
mov
or
jbe
es
mov
push
sbb
enter
cld
fldt
hlt
insl
lods
jns
testb
jmp
pop
mov
dec
in
cld
lds
jns
xor
and
mov
clc
adc
mov
jo
xor
inc
or
inc
cwtl
mov
int3
xor
push
jns
cmp
insl
insb
dec
pop
pop
cmp
push
mov
mov
push
xchg
addl
cs
cmp
push
pop
adc
popf
jnp
mov
or
jecxz
mov
sbb
jno
imul
std
dec
fsts
cmpsl
out
and
jmp
test
xrelease
repz
mov
pop
cmp
push
ret
push
xchg
scas
adc
test
sbbl
daa
test
rcrb
jmp
stos
or
push
sbb
sarl
in
xchg
xor
mov
ret
loopne
test
pop
xor
cwtl
mov
inc
scas
cmp
sub
shrb
cli
add
movsl
shl
cmp
mov
loop
pop
cmpsb
sub
xor
xor
inc
scas
dec
repnz
sub
rclb
std
les
add
lret
sahf
mov
inc
mov
sub
push
jp
xchg
insb
mov
int3
insl
and
in
pop
mov
ljmp
sbb
mov
and
jb
cld
and
or
or
add
in
or
and
in
rcl
aad
pop
xchg
add
stos
int3
push
adc
xor
xchg
js
pop
jno
pop
adc
cs
adcb
mov
and
cmp
inc
dec
mov
insl
in
xor
adc
xchg
jno
filds
inc
cld
bound
call
adc
sahf
or
push
xchg
and
pop
mov
imul
pop
mov
push
push
jbe
push
lea
gs
jecxz
std
pop
mov
ret
loope
mov
push
and
and
inc
popf
out
xor
mov
imul
mov
adc
or
imul
sti
lods
pop
aas
sub
rcrb
cmc
rcrb
mov
xchg
inc
xor
pushf
bound
ucomiss
sbb
jp
dec
xor
add
mov
xor
xchg
cmp
je
lret
xchg
mov
icebp
fs
or
dec
in
rcll
in
push
sub
mov
insb
dec
xor
outsl
mov
test
inc
pop
fnstenv
and
mov
cltd
jle
push
ret
jl
int
mov
int3
push
es
lret
xor
inc
addr16
fwait
in
sub
pusha
icebp
cmp
notl
in
jecxz
lds
mov
push
inc
jo
xchg
cmpsb
xchg
lods
flds
xor
jecxz
push
loope
and
popa
sub
pop
inc
call
shl
cld
mul
mov
add
inc
inc
or
aas
mov
rclb
call
push
lods
insl
push
xlat
pop
mov
adc
sbb
mov
cmp
lods
adc
sub
setle
in
cmp
dec
pop
rcll
loope
shll
xchg
push
cli
ret
fcmovne
imul
in
sbb
mov
push
xchg
bound
cmpsl
int
lea
mov
int3
idivl
pop
fnsave
or
fdivl
mov
in
cmp
mov
addr16
loopne
mov
mov
inc
xor
jl
push
pop
xchg
lcall
add
dec
push
inc
bound
pusha
xchg
add
cmp
dec
into
aam
hlt
xor
or
loopne
add
xchg
adc
adc
mov
cmc
fstpt
test
push
mov
mulb
and
clc
aaa
dec
jbe
push
mov
shlb
xchg
and
cli
outsb
jecxz
mov
scas
ret
mov
xchg
out
flds
lret
mov
ds
fiaddl
repz
pop
dec
adc
mov
xchg
jo
inc
and
xlat
jns
push
or
pop
hlt
lret
xor
nop
and
sub
fsubl
push
and
mov
hlt
pop
pop
mov
popa
lret
lea
test
mov
mov
pop
cmp
test
mov
nop
jb
inc
fs
sub
in
or
inc
je
push
pusha
jle
mov
fiaddl
add
push
sbb
enter
xacquire
xchg
mov
and
insl
in
sbb
ret
cmpsb
xor
cwtl
gs
and
subb
filds
pop
mov
arpl
xchg
and
mov
imul
add
jecxz
out
addl
aad
and
push
imul
call
xchg
test
cmp
and
lods
addb
cmc
rorb
dec
mov
fstpt
enter
fdivrl
xchg
loopne
jbe
and
lds
gs
sti
pop
lret
xchg
push
gs
sbb
adc
addr16
xchg
loop
or
mov
push
push
jmp
in
jbe
out
jle
ja
push
mov
andl
enter
jmp
stos
lret
xor
push
cmp
mov
push
push
jle
mov
or
add
jge
scas
push
ljmp
rcll
and
dec
jns
lds
cli
dec
add
repnz
cmpsb
insl
add
out
inc
jg
pop
sbb
add
mov
xor
insl
dec
mov
add
fdivr
fwait
mov
movsl
jg
sbb
add
es
int3
ss
inc
insb
cmp
jle
sbb
push
and
pop
stos
pop
icebp
mov
jmp
xor
jnp
movsl
or
mov
test
bound
mov
xchg
push
jnp
dec
outsl
ds
aad
sbb
cld
lahf
sub
movsb
mov
pop
cmpsl
jmp
loopne
mov
rcrl
dec
sbb
dec
std
sbb
pop
and
xor
and
repz
movsb
lods
jl
add
cmp
in
imul
mov
outsb
jne
movsl
push
out
nop
xor
mov
sbb
mov
xlat
jge
faddl
xchg
cmpsl
xlat
jge
xor
sbb
add
and
mov
adc
bound
je
pop
mov
jae
daa
rcrl
sbb
adc
in
push
fldcw
shlb
xorl
test
mov
or
loope
test
sbbl
cmc
add
jbe
sar
popf
es
rcrb
sub
lds
mov
enter
lds
loope
pop
mov
fwait
cmpsl
ror
dec
xor
bound
dec
or
xchg
mov
rcrb
xchg
mov
and
adc
sub
xor
js
sub
and
int
mulb
mov
or
insb
lds
pusha
jae
aam
inc
jnp
and
dec
fldenv
movsb
xor
mov
jne
cwtl
neg
cs
mov
xlat
adc
sarl
or
aaa
js
mov
clc
icebp
inc
subl
repnz
repz
push
sbb
ljmp
add
push
jns
faddl
into
adc
les
adc
mov
mov
sub
fdivrp
sub
mov
mov
mov
sbb
cmp
lcall
mov
les
imul
dec
or
dec
inc
movsl
pusha
or
xor
rcrl
push
fstl
lock
test
or
cmp
and
sbb
jnp
popf
pusha
loopne
jb
jnp
push
xchg
dec
rclb
push
and
test
dec
dec
sub
and
hlt
dec
fwait
test
fistps
out
adc
aas
in
and
insb
sub
sub
icebp
mov
pushf
mov
cmovp
push
cmpsb
shl
cli
jnp
in
or
or
insb
lods
add
repz
das
xor
or
in
test
dec
scas
xchg
and
hlt
sub
pop
in
js
push
js
dec
stos
in
push
cmp
mov
arpl
mov
enter
cmpsl
adc
jno
cmpsb
data16
das
xor
les
push
and
flds
shrb
jns
xor
sub
inc
pop
jnp
sarb
add
aam
sub
push
push
cmc
fbld
and
subb
xor
adc
push
push
mov
cmpsl
pop
inc
jnp
aam
movsl
dec
rclb
mov
or
popa
jg
cmp
jmp
jns
movsl
pop
mov
rol
stc
daa
sub
fwait
pop
cli
inc
into
icebp
dec
fcmovb
es
lret
fisubl
divb
stos
xor
add
jns
stos
mov
mov
cmp
lret
jbe
clc
inc
mov
clc
loop
sub
push
daa
cwtl
fimull
pusha
push
mov
jno
dec
mov
jb
aad
aas
fcmovb
xchg
jnp
or
cmp
pushf
orl
mov
fs
mov
pop
pop
sbb
sbb
test
jne
stos
imull
cmpsl
insb
lods
out
sarb
sarl
push
add
push
enter
and
mov
and
fisubs
xchg
add
inc
insb
in
or
sub
add
mov
lret
jae
aad
push
and
cld
adc
sub
xor
test
jbe
lcall
jle
pop
mov
inc
cmp
out
push
xlat
adc
hlt
pop
xchg
mov
dec
inc
jecxz
jae
ss
push
arpl
xor
dec
scas
sbb
push
mov
test
jno
xchg
daa
xchg
mov
cs
int3
mov
nop
cs
xchg
cmpsb
hlt
mov
mov
int
jp
mov
bound
xchg
add
ja
into
sub
cli
jp
int
scas
or
fucom
imul
in
mov
lret
mov
sub
cs
cmp
in
imul
sub
add
cmp
mov
mov
inc
fs
push
jp
adc
addb
je
imul
inc
stos
adc
ret
sbb
push
sbb
xchg
mov
inc
ficoml
ret
test
in
sub
xchg
insb
xchg
push
xor
movsl
mov
and
hlt
xchg
rol
lea
lret
outsl
fcmovb
xchg
mulb
hlt
jo
cld
loop
aaa
call
cmp
and
push
sti
sbb
add
stc
or
shlb
lea
lret
mov
fucomi
test
and
int3
inc
mov
jle
jno
push
jecxz
cmp
ret
jl
inc
outsb
and
sub
iret
jmp
inc
lret
nop
lret
cmp
xor
jecxz
cmp
push
jmp
out
xlat
push
pushf
mov
cmp
mov
lds
mov
lods
leave
pop
mov
in
cmpsb
xor
cli
sub
xor
scas
sbb
into
mov
inc
mov
mov
incb
fsubrs
push
addr16
dec
or
xor
cmp
sub
std
jae
adc
dec
push
lock
sub
fcoml
daa
icebp
xchg
fstpt
jge
mov
in
xchg
hlt
sbb
add
test
test
popa
aaa
fmuls
subl
jge
in
shll
jo
scas
arpl
daa
cwtd
clc
bound
sar
jns
not
daa
adc
std
jp
add
fdivs
mov
loop
pxor
cmp
sbb
mov
jg
jecxz
cmp
sub
mov
lcall
or
sub
fsubl
push
rcll
and
or
std
enter
dec
dec
and
popf
mov
sub
fisttpl
adc
and
sbb
clc
mov
and
sub
mov
or
and
cmp
shll
xor
push
adc
mov
fistl
xchg
insl
sub
test
mov
dec
pushf
je
ret
inc
jnp
movsl
pop
cmp
repnz
int
fldcw
push
jmp
mov
inc
sub
int
xor
outsl
test
test
bound
js
dec
scas
sub
aas
arpl
divl
pop
mov
aas
add
jbe
add
sub
mov
or
jb
addr16
cmp
sbb
pop
sub
stc
jmp
dec
lods
pop
add
sahf
fcomi
xchg
mov
call
stos
cmpl
inc
xchg
iret
in
les
insl
insl
sub
sub
nop
insb
xchg
and
mov
mov
iret
sbb
inc
and
les
pop
in
sbb
mov
push
mov
aas
in
daa
iret
push
ljmp
cld
dec
flds
adc
or
lcall
lods
enter
aas
sbb
out
mov
cmpsl
ja
jge
mov
imul
lods
jnp
int3
xor
cli
adc
dec
out
cmpsl
jecxz
xor
andb
xchg
loopnew
and
test
xor
adc
out
test
or
fs
divb
inc
leave
inc
fildl
sub
jbe
ficoms
dec
cli
loopne
mov
inc
push
hlt
xchg
xchg
arpl
pop
arpl
dec
mov
int
push
aaa
dec
int
daa
add
shrl
xchg
test
jmp
jl
push
mov
or
rcl
test
into
scas
cmp
subl
jp
int
jg
xchg
xor
xor
pusha
pop
lock
mov
mov
cmp
ret
lods
js
jb
cmp
xor
divps
popl
orb
mov
adc
cmp
mov
iret
stos
repnz
or
push
add
or
sub
push
jae
mov
cmp
pop
shl
jmp
add
inc
jge
push
mov
xchg
pop
sbb
pop
sub
jb
sbb
outsb
mov
sbb
pushf
cmp
jo
or
cld
inc
add
sbb
and
cmp
negb
mov
push
and
jno
push
mov
pop
sahf
mov
aad
sub
xor
xorb
pop
js
sub
out
adc
dec
not
push
xchg
lods
arpl
pop
fstpt
mov
push
mov
pop
pop
pop
rcrl
sbb
xchg
pop
push
xor
outsb
dec
rorb
mov
cmp
inc
ljmp
dec
mov
pop
lods
push
push
xor
jp
mov
or
cvttps2pi
lahf
push
ja
push
dec
pop
mov
mov
andb
pusha
movsl
xor
sti
rorl
sbb
cltd
xor
or
push
icebp
xor
pop
xchg
pop
rcrl
clc
xor
rcrl
imul
movsl
mov
adcb
add
cwtl
jnp
cmc
loop
sub
sub
sbb
nop
push
xchg
loope
aam
leave
cmp
mov
xor
sbb
and
pop
or
insb
das
or
mov
or
jg
push
loopne
mov
inc
xchg
xchg
push
es
fcompl
inc
lods
xchg
jne
push
inc
xchg
cwtl
mov
shrb
push
xor
pop
pop
loopne
insb
clc
mov
xlat
aam
addb
jae
ret
jg
add
jecxz
mov
pop
add
pop
add
lea
mov
daa
or
lods
popf
es
mov
xchg
mov
xchg
xchg
mov
imul
mov
xchg
in
enter
mov
scas
lods
mov
xchg
and
xchg
gs
add
pop
data16
mov
lea
test
fwait
inc
lret
ss
add
jb
lods
mov
or
cmpsl
add
movsb
out
sub
int3
push
dec
push
orl
pop
inc
call
xor
mov
pop
push
jle
mov
insl
mov
loope
imul
jmp
pop
pop
cs
jmp
icebp
repz
test
jg
push
cmpsb
cmc
xchg
dec
in
mov
loop
lods
jp
loope
ret
jecxz
add
cmc
pop
popa
mov
add
push
jmp
pop
pusha
xchg
cmp
xchg
xor
xor
or
icebp
mov
call
nop
sub
out
addb
dec
push
xchg
cmpsb
out
sti
lock
leave
xchg
jle
out
and
xor
xchg
jbe
aam
xor
movsl
imul
push
push
clc
cmp
adc
daa
xor
inc
mov
mov
repnz
mov
xchg
xchg
cmp
adc
jmp
mov
add
pop
data16
and
int3
pop
rclb
sti
mov
jne
dec
or
popa
push
inc
cmp
scas
add
sbb
push
mov
lods
bt
and
mov
loopne
test
pop
sbbl
dec
mov
pop
dec
and
jnp
shr
mov
mov
xor
fwait
mov
xor
cmp
mov
andl
fcoml
or
mov
or
dec
stc
mov
cwtl
xor
cltd
out
bound
pop
movsl
shrl
and
push
lds
mov
ret
and
loop
fs
popf
pusha
jne
push
push
lock
add
out
lods
xchg
mov
xchg
inc
negl
xor
push
out
cmp
mov
inc
adc
or
imul
push
jno
dec
shrb
cld
ret
ss
cmovo
mov
test
enter
cmp
cmc
outsl
ss
mov
repnz
or
xchg
inc
lods
enter
fnstsw
and
lcall
mov
pop
call
es
rcrl
enter
push
lcall
cmp
lods
shr
cmp
lds
mov
nop
pop
inc
inc
dec
mulb
cmpb
jl
idivb
mov
dec
cld
int3
and
hlt
jecxz
ficomps
mov
clc
sbb
ficompl
repz
xchg
push
mov
cmp
cmp
outsl
in
sbb
push
xor
cmp
rcrl
clc
mov
adc
sbb
push
fdivl
xchg
insb
je
adc
inc
sub
test
inc
mov
stos
bound
std
or
shlb
test
popa
dec
mov
pop
data16
push
aam
pop
pop
imul
ljmp
push
nop
insl
sub
xchg
and
scas
sbb
pop
mov
int3
add
jmp
icebp
loope
subb
pusha
pushf
jns
sub
dec
sbb
ret
pop
sbb
loopne
or
in
test
loop
jl
and
xchg
inc
jns
mov
out
and
or
mov
push
push
mov
mov
in
cmpsb
notl
push
dec
ret
daa
or
incl
out
popa
cmp
enter
shll
into
pop
stos
mov
mulb
add
rcl
ss
jns
pop
dec
xchg
aam
or
shrb
and
movzwl
xor
cmpsb
inc
inc
adc
jle
or
or
jecxz
lahf
hlt
mov
xor
or
jecxz
jno
xchg
imul
scas
cmc
std
pop
ficoms
lods
popa
push
lods
mull
dec
cmovge
mov
iret
movsl
gs
push
scas
loop
stos
sub
dec
sarb
mov
add
sub
adc
mov
ds
jp
shlb
fs
imul
sarl
and
call
cmp
add
push
jo
dec
popf
ss
mov
pop
adc
into
test
ficoms
pop
cmpsb
out
and
fisttps
add
fidivl
xor
push
inc
pop
pop
push
lds
faddl
sahf
sbb
push
dec
lods
insl
movsl
je
sub
mov
fistpl
pop
ret
nop
push
adc
rcrb
dec
mov
xorl
ss
lahf
sub
out
sub
ja
fistl
lods
lcall
in
cwtl
in
jo
cwtl
push
sbb
cs
sbb
aas
jmp
push
mov
xchg
lcall
stos
pop
out
cmp
dec
arpl
xchg
cs
jle
inc
jg
mov
rcl
sbb
adc
lea
pop
xchg
pop
mov
sub
sub
ljmp
cld
leave
sbb
dec
pusha
in
push
cmc
test
imul
je
or
mov
mov
inc
xor
nop
scas
leave
cmc
dec
mov
pop
xchg
in
fdiv
outsb
cmpsl
nop
and
das
and
mov
inc
test
or
adc
sub
lcall
jge
xchg
add
push
sbb
sbb
stos
cltd
hlt
lock
pop
popf
xor
mov
inc
xchg
push
fimuls
in
daa
fldln2
or
aaa
push
and
es
repnz
stc
int
add
addl
cmp
iret
push
lods
mov
in
or
jno
fistps
mov
mov
js
jnp
add
in
add
xchg
nop
or
add
or
cltd
in
pop
rclb
ret
scas
mov
mov
addr16
mov
push
or
mov
lods
into
xchg
rorl
sbb
in
xor
fwait
lea
leave
mov
sti
add
ja
mov
dec
popf
xchg
push
movb
cmpsl
add
push
scas
into
push
mov
arpl
pusha
cmp
cmpsb
cmp
ljmp
lock
in
add
bound
cmp
and
xor
pop
stc
cmc
mov
std
xchg
popa
ja
mov
std
or
push
push
stos
dec
stos
mov
rolb
sub
hlt
mov
and
adc
aaa
mov
popa
outsb
xor
in
and
icebp
mov
stc
je
inc
in
js
mov
or
mov
lds
cmp
arpl
repz
jl
bndldx
cmp
call
mov
rclb
clc
xchg
push
jnp
or
loop
mov
mov
cltd
into
or
mov
subl
ret
sti
enter
sbb
repnz
and
jae
pop
lret
inc
xchg
xchg
xor
inc
std
pop
xor
out
add
push
sub
or
orl
pop
pop
mov
cmp
cmp
sbb
mov
cmpsl
fsubrs
js
scas
pop
sbb
xor
je
jae
pusha
pop
adc
xorl
dec
mov
mov
xchg
mov
enter
rol
inc
mov
inc
ss
enter
mov
sbb
push
cmp
adc
pop
mov
sbb
aam
jnp
shll
leave
leave
or
popf
les
cmpsb
ds
dec
lock
fdivrs
push
dec
sarb
repz
nop
sbb
aad
add
int3
shlb
sahf
pop
aas
jo
mov
aam
sar
loop
add
and
out
mov
cmpsl
jp
adc
divl
mov
or
pushf
sbb
jle
and
fwait
add
popa
jl
jp
sbb
add
ret
das
add
out
mov
fldl
fxch
sub
mov
aam
fstps
jmp
or
push
cli
and
mov
adc
mov
xchg
sahf
xchg
aaa
add
jno
dec
dec
or
dec
cmc
mov
je
int
daa
jle
jae
mov
mov
add
inc
loope
out
std
enter
lahf
or
rolb
test
push
jns
std
add
repz
mov
adc
fmull
fwait
jno
dec
xchg
adc
inc
test
cld
xor
stos
testb
inc
das
movsl
xlat
dec
hlt
imul
xchg
lret
mov
cld
xor
aam
sbb
fdivs
fwait
sub
sbb
repz
rclb
cs
xlat
sub
cwtl
jno
xor
dec
aas
cs
nop
xchg
mov
adc
xchg
orl
scas
fcompl
in
sbb
add
iret
sbb
jo
sbb
and
lods
js
add
add
mov
lret
loopne
shlb
loop
add
es
add
inc
daa
insb
movsb
mov
push
popa
xor
adc
in
sahf
lods
pop
leave
or
dec
push
sub
or
mov
xchg
arpl
xor
mov
inc
repnz
pop
in
xchg
cmpsl
cli
or
outsl
mov
cli
jecxz
outsb
push
push
mov
lods
imul
movsb
push
mov
fisttpl
mov
es
arpl
les
adc
xchg
fnsave
xchg
pop
xchg
in
scas
and
push
test
pop
and
loope
pop
daa
inc
lock
jb
mov
lods
jl
xchg
add
ds
xor
sarb
sbb
push
addr16
popa
lret
cmp
outsb
aam
stc
pop
mov
push
and
sbb
lods
sbb
out
ljmp
test
mov
xchg
mov
icebp
in
pop
enter
and
dec
sbb
scas
jnp
nopl
mov
jmp
cld
sub
pusha
push
mov
out
inc
or
xchg
je
dec
adc
mov
fiaddl
inc
scas
movsb
mov
dec
decl
inc
gs
cwtl
clc
lret
adc
mov
cs
icebp
pop
insl
sub
inc
sbb
mov
rorb
xor
in
loop
ret
cmc
mov
dec
mov
and
scas
jnp
in
push
popa
in
in
push
adc
or
jle
lea
xor
ja
push
dec
mov
into
iret
pop
gs
in
mov
pop
negb
icebp
sbb
repz
pop
xchg
push
jge
lcall
cmc
xchg
je
mov
push
addr16
add
adc
push
ss
jp
arpl
pop
mov
ja
xchg
stos
stc
mov
sbb
mov
sbb
call
arpl
jge
mov
pop
xor
cmpsl
repz
repz
cltd
inc
ds
mov
mov
lret
fwait
mov
fistl
add
push
leave
inc
int
mov
fstl
xchg
jno
icebp
stos
lret
addr16
push
adc
sub
jo
movsb
data16
pushf
sbb
push
and
and
shrl
mov
arpl
je
loop
push
jb
cmpsl
sbb
sub
lahf
inc
daa
mov
jne
mov
jno
mov
or
pmuludq
inc
sbb
rcrl
cmp
mov
sbb
adc
fisttps
iret
xlat
in
rorl
xchg
rolb
mov
mov
lods
stos
jns
xchg
sahf
js
mov
fadd
push
idivb
pop
dec
js
or
fisubs
pop
fbld
cmp
das
mov
pop
loop
xor
cmpsl
push
mov
sub
cs
push
jne
insl
leave
inc
int
xchg
idivb
mov
cmp
pop
in
iret
lods
mov
in
or
aad
testl
gs
insb
or
jmp
fisubrs
ds
out
je
cltd
add
push
sti
push
mov
setbe
jns
out
fbstp
push
lea
stc
lods
inc
das
xchg
sahf
mov
lds
pop
cmpsl
pop
iret
pushf
in
es
js
out
cmc
sbb
aaa
je
hlt
idiv
aam
jmp
loopne
xor
movsl
loopne
push
jl
mov
insl
cmp
dec
sbb
popa
jle
cltd
sub
clc
mov
add
iret
mov
dec
aaa
xchg
imul
mov
cmpl
adc
xchg
mov
mov
out
lahf
mov
adc
fnstcw
xlat
fstl
int3
mov
shr
popf
icebp
sub
sbb
add
sbb
in
enter
jne
sub
sbb
sub
sahf
test
xchg
inc
add
mov
inc
push
in
push
adc
mov
in
js
mov
into
jge
outsb
loopne
and
xlat
ret
mov
jbe
mov
fidivs
pop
dec
inc
leave
cmpsl
pop
adc
jmp
movsb
jnp
inc
fdivrs
jmp
cmp
cmp
mov
push
insl
jl
jg
or
adc
pop
outsl
lods
mov
popf
arpl
ret
out
jnp
mov
pop
add
insl
sti
adc
rcr
insb
xchg
loope
xchg
fwait
xor
xor
adc
fadds
add
mov
jo
xchg
ljmp
sub
mov
mov
lods
idivb
xor
lahf
sbb
xor
lock
sbb
or
call
mov
bound
daa
les
popa
call
sbb
xchg
outsb
ja
cmp
addr16
mov
xor
jno
xchg
mov
push
rcrb
lds
into
add
out
push
xchg
ret
ficomps
inc
mov
test
ret
jmp
adc
into
iret
shrl
jmp
rol
mov
inc
or
fsubs
xchg
push
jge
xlat
jge
jg
shll
icebp
orl
mov
add
add
loopne
cmc
add
and
dec
add
call
repz
daa
incl
rcrb
fnstenv
sbb
jae
sbb
mov
push
iretw
loop
ret
jnp
mov
ret
or
dec
mov
je
pop
sahf
mov
loope
cmpsb
nop
or
in
outsl
leave
push
lret
mov
pop
in
xor
adc
dec
or
dec
sub
add
adc
xchg
pop
into
dec
ja
hlt
stos
out
pop
add
testl
mov
into
xchg
sbb
inc
add
mov
jmp
insl
into
jno
sub
les
lods
pop
xchg
adc
jecxz
add
int
ret
lcall
lock
pop
sub
icebp
cmp
in
loop
xchg
mov
lds
ds
dec
aas
mov
and
xchg
in
lock
mov
mov
shlb
es
cmp
lods
add
push
fdivrs
addl
leave
into
and
jno
push
popf
pop
data16
cmpb
pushf
gs
or
cwtl
mov
xchg
xor
repnz
mov
jmp
cmpsb
cmp
arpl
push
pop
rorb
in
movsb
outsl
mov
sub
xchg
sub
inc
inc
add
xor
popf
mov
dec
sbb
or
jge
mov
xchg
inc
mov
je
scas
lret
lea
add
outsb
push
push
pop
in
out
jno
pushf
insb
subb
dec
mov
sbb
mov
mov
jle
rclb
int
mov
dec
or
dec
in
es
out
pop
fidivrs
push
cld
fldl
ljmp
mov
popa
xor
sti
mov
inc
jne
or
sti
stc
sbb
mov
jmp
dec
pop
push
pop
clc
xchg
push
pop
imul
int3
xchg
push
shlb
mov
adc
insl
xor
mov
xchg
js
fistpll
jno
gs
inc
xor
js
pop
jnp
mov
fistpll
inc
pop
inc
fidivs
inc
pop
sbb
es
push
insl
aaa
sbbb
or
push
mov
sub
mov
aad
inc
sbb
cli
fadds
sbb
push
or
dec
and
bound
and
leave
ss
sbbb
lret
xorl
mov
sbb
pop
dec
mov
repz
and
addl
test
pop
and
call
xor
ljmp
faddp
aam
push
cmp
xchg
push
mov
cmc
push
jns
daa
push
add
in
out
aam
fimuls
dec
out
btc
mov
cld
es
jge
in
push
cmp
xor
mov
scas
sub
pusha
hlt
adc
out
mov
outsb
push
rcrb
lret
fcompp
add
mov
sbb
and
pop
imul
repnz
icebp
jmp
xchg
pop
stos
and
mov
popa
ret
sbb
cmp
or
ds
mov
orl
mov
mov
push
push
nop
push
int
inc
pop
jge
scas
mov
mov
inc
lds
fsubrs
sub
xchg
lea
shl
cmp
fisubs
aad
ret
scas
lods
into
addr16
adc
lods
cs
xchg
stc
jb
int
jl
ss
lds
rol
loop
pop
or
fsubl
es
fcomps
sahf
in
lret
addr16
aad
mov
sbb
xor
idiv
push
insb
mov
cli
jg
imul
test
jmp
pop
jg
xchg
loopne
mov
xor
sti
jle
or
test
mul
xor
repnz
test
imul
dec
andl
pop
push
xor
clc
inc
shll
fsubrp
pop
lods
fcmovnbe
mov
jecxz
push
sub
lds
sub
int
mov
decl
push
fidivs
cmp
dec
stc
adc
jno
sub
sahf
fldcw
xchg
add
jb
adc
lods
shlb
cmp
push
jns
xchg
xchg
mov
mov
mov
leave
in
xor
adc
push
in
in
int3
push
out
aas
outsb
enter
inc
add
inc
int3
cmp
test
push
fsubrs
push
rcrb
leave
sbbb
fsubl
iret
das
adc
outsb
inc
imul
sarl
xor
pop
sbb
push
fcmovnb
xchg
mov
sbb
cmp
sarl
insl
fs
outsl
in
adc
movsb
out
out
pop
std
mov
xor
sub
jo
or
les
pop
in
mov
inc
adc
aad
nop
lcall
clc
sub
cmp
jl
call
mov
sar
out
xor
mov
push
push
push
adc
je
sub
inc
cwtl
imul
and
fs
adc
movsl
repnz
jnp
scas
jecxz
and
or
mov
test
mov
scas
xor
mov
inc
mov
fisubrl
cmc
push
sub
ss
jg
xorl
addr16
leave
orb
inc
pop
roll
imull
stos
les
sbb
mov
loopne
mov
loopne
fbld
and
ret
xlat
int
xchg
hlt
in
test
cwtl
iret
adc
cmp
fldl
dec
cmp
pop
pop
inc
adc
mov
mov
shlb
out
pusha
jnp
pop
jp
je
push
pop
ss
sbb
shll
pop
nop
inc
ljmp
enter
pop
inc
scas
iret
jne
xlat
test
adc
test
and
xchg
cmp
pop
cmp
stos
repnz
popa
fwait
xor
aas
arpl
stos
mov
test
inc
mov
add
dec
mov
movsb
sti
out
and
lods
and
insl
shll
idivl
mov
xor
and
cs
cmpsb
push
and
jle
mov
inc
out
xor
adc
add
dec
mov
jmp
lock
adc
or
push
pshufw
test
pslld
xchg
jnp
push
fs
lcall
sub
or
cmp
addr16
ss
cmp
cmp
das
jnp
cld
in
pop
inc
sahf
mov
push
jmp
aaa
pop
mov
sbb
loope
jmp
lds
ret
jl
jg
cmp
setl
or
push
sbbb
test
pushf
cmp
in
and
jmp
cmp
je
pop
or
imul
push
mov
add
pop
in
mov
adc
dec
cmp
mov
xor
cmp
inc
orl
imul
mov
test
mov
rorl
test
and
fidivl
shlb
pop
stc
dec
mull
lret
mov
cmp
mov
inc
pop
push
incl
pop
dec
cwtl
popf
mov
mov
push
loopne
mov
ret
jmp
jge
frstor
mov
arpl
push
mov
shlb
mov
jle
push
cmc
add
inc
jne
ds
pop
rclb
add
push
cmpsb
jmp
jno
outsl
rcrb
addr16
jmp
repz
out
jne
pop
pop
pop
adc
shlb
mov
or
dec
adcb
rcrl
cmp
jae
les
cld
pop
cld
mov
dec
out
xchg
mov
iret
cwtl
push
cmpsl
std
dec
enter
in
push
push
pop
ljmp
insb
pop
sbb
fisubl
and
aas
decb
movsb
mov
out
lds
js
nop
inc
test
mov
sarl
cmp
test
imul
bound
stc
mov
xor
xchg
push
jmp
clc
and
cld
daa
xchg
lea
jg
jecxz
mov
roll
ja
add
and
lds
jmp
xor
xor
jnp
enter
pusha
sub
fnstcw
fcmove
clc
div
add
cwtl
adc
loope
ficoms
mov
fldl
bnd
aas
and
sub
adc
mov
popf
push
out
sbb
stos
cs
pop
mov
cltd
outsl
daa
dec
mov
mov
mov
add
test
sbbb
cmp
mov
aas
inc
mov
stos
sub
mov
addr16
xor
lret
adc
mov
sti
sbb
xchg
mov
cmp
push
mov
push
cmp
jge
and
push
mov
inc
ja
inc
ret
fcomi
fwait
sub
jae
jne
xchg
std
aad
iret
mov
pop
and
push
mulb
push
pop
imul
sub
mov
dec
mov
rcll
jl
mov
fsub
mov
frstor
ret
push
aas
sub
sub
push
pushf
jnp
in
imulb
push
add
xor
push
xchg
and
pusha
ficomps
push
mov
clc
mov
insb
and
js
adc
mov
imul
sbb
and
inc
sub
les
daa
in
dec
mov
rorb
sbb
push
jno
jbe
pushf
lods
mov
je
mov
in
pop
and
pusha
data16
das
icebp
mov
sbb
cmp
arpl
hlt
mov
dec
push
inc
xor
ret
add
jmp
popf
jecxz
xor
repnz
and
lock
or
out
push
hlt
adc
imul
jnp
lods
inc
xchg
in
xchg
xor
aaa
xor
lods
int3
ja
or
stc
or
iret
cwtl
mov
sbb
out
jae
ljmp
xor
fmul
mov
dec
pop
pop
jb
fs
daa
aam
mov
jae
lret
mov
int3
pushf
addr16
andb
mov
arpl
ret
fs
xor
loopne
loop
mov
jo
or
lea
in
incb
nop
add
xchg
push
insl
add
loop
divl
les
push
mov
mov
add
dec
je
dec
cs
cli
push
lahf
in
cmp
gs
mov
xchg
test
jecxz
jl
mov
loop
pop
xchg
cmp
imul
int3
add
sti
mov
cld
jae
lret
andl
hlt
outsl
mov
les
adc
mov
fstps
insl
ret
inc
pushf
stos
mov
mov
or
push
fistpl
repz
jbe
data16
mov
adc
or
xchg
push
out
sub
and
dec
testb
mov
and
imul
cmpsl
dec
mov
mov
js
data16
cltd
cmpsb
sub
lret
cmpsl
mov
adc
inc
ja
add
insl
cmp
mov
jno
mov
adc
lds
into
or
ret
mov
cmp
shrb
push
stc
pop
clc
rclb
jl
lret
adc
lret
cs
mov
inc
dec
sti
xor
loop
mov
in
pop
fnsetpm(287
pop
filds
dec
imull
push
push
pop
sbb
jl
jne
jae
daa
sbb
or
cs
pop
stos
pop
cmp
cmc
sub
mov
and
jg
cltd
pop
mov
sub
push
sbb
data16
ss
jge
xor
jb
sub
cld
das
mov
lahf
xchg
dec
cmp
xor
stos
and
pop
test
mov
jb
cli
das
shll
xor
dec
jl
add
test
rclb
ja
inc
mov
or
ret
sbb
xchg
mov
pop
pop
sub
andl
aam
inc
loopne
cmp
test
cmp
inc
fldenv
test
pop
aas
daa
cmp
lds
mov
pop
daa
ljmp
dec
mov
jbe
in
jne
sub
rol
dec
in
inc
out
mov
les
and
cli
loope
pop
sbb
dec
outsb
cs
jl
movsb
das
mov
mov
ret
icebp
int3
cmp
pop
jns
lea
shlb
loopne
jbe
push
mov
push
ds
mov
sbb
or
loope
mov
in
and
rcll
sahf
flds
cld
jnp
xchg
dec
shlb
cld
lahf
sub
pop
or
pop
cs
jle
into
in
mov
add
fiadds
rorb
neg
mov
inc
aam
outsl
dec
cmp
pop
addr16
jns
push
inc
sbb
xor
lret
xor
adc
leave
stc
mov
fcoms
xor
stos
out
jge
inc
ds
inc
stos
xorl
rcl
je
jns
mov
push
mov
mov
push
mov
cmp
or
jge
cld
dec
rdmsr
mov
xor
orb
daa
orb
shr
pop
lock
mov
adc
test
je
mov
xorb
or
jae
inc
or
arpl
pop
xor
imul
push
and
loope
jecxz
in
mov
or
pop
aaa
cmp
cmp
aas
es
lock
ljmp
cli
cmc
ret
sub
adc
test
repnz
jle
mov
cmpsl
and
fiadds
das
sbb
outsb
out
xor
sbb
or
popa
not
cli
popa
inc
dec
push
jge
scas
pop
push
sbb
fxch
ljmp
orb
xlat
xchg
sub
movsl
loop
jecxz
dec
sbb
movl
and
xchg
xor
jnp
dec
rolb
dec
out
mov
aam
cld
mov
inc
gs
lock
cmpb
inc
cli
pushf
lods
rcl
fs
cmc
dec
shlb
ret
and
or
mov
jg
stos
mov
or
ja
mov
fs
nop
cs
lcall
filds
imul
stc
mov
cwtl
adc
or
insl
xchg
out
mov
xchg
fsubrp
cmp
sub
cwtl
mov
mov
test
pop
dec
fwait
gs
mov
dec
fldcw
fdivrl
int3
outsb
pushf
jbe
mov
xlat
pop
jbe
pop
jge
sub
clc
jmp
mov
add
cltd
cmp
aam
jae
jnp
cmp
cmpsb
icebp
jecxz
sub
mov
pop
push
mov
sub
cmc
nop
and
sbb
cwtl
sahf
mov
xor
nop
out
and
xchg
outsl
jns
fwait
divb
mov
or
testl
js
xor
lock
adc
js
rorl
hlt
cmpsb
ds
std
stc
les
aad
mov
popa
cwtl
adcl
out
insl
cmp
dec
mov
mov
movsb
pxor
test
and
mov
xor
xor
xchg
movsb
xor
ficomps
push
push
or
shl
aad
les
cmp
adc
adcl
into
ss
arpl
je
arpl
add
add
scas
sub
int3
sahf
lods
xor
jmp
in
popf
mov
cmp
push
aad
test
mov
stc
xchg
push
xchg
cmp
jo
std
and
jmp
scas
leave
and
lock
push
and
sbb
loopne
add
orb
mov
outsb
and
cmpsl
push
popf
rclb
mov
xor
out
push
imul
lret
test
pusha
lret
push
mov
pop
mov
loop
decl
in
jmp
fisttpl
lcall
out
loop
ds
push
inc
and
popf
mov
inc
mov
out
mov
fisubrs
lret
add
sub
scas
sub
cmp
sub
and
xchg
mov
add
cltd
sbb
dec
cmp
dec
add
enter
and
out
jo
xchg
mov
mov
jmp
mov
inc
cmc
cwtl
aad
mov
dec
test
push
cmp
dec
data16
xchg
enter
cmp
sbb
lods
lcall
fadds
push
lock
popa
cmc
xor
popf
subl
dec
pop
sub
stc
xorl
sahf
jb
mov
adc
or
adc
cwtl
mov
pop
sbb
adc
mov
sub
xor
mov
push
test
add
mov
dec
jmp
into
ds
and
xchg
jo
mov
sbbb
popf
pop
cmp
test
xchg
mov
inc
aaa
sub
fisubrl
aas
add
push
pushf
sbb
lds
mov
inc
fs
mov
adc
pop
and
icebp
add
xchg
sbb
and
mov
cld
ss
mov
ret
mov
pop
cmp
mov
call
inc
data16
in
inc
loope
inc
mov
inc
pop
dec
aaa
jae
mov
orb
dec
insb
rcr
fucomip
jnp
inc
pop
cltd
dec
pop
or
cli
imul
lret
cwtl
popf
lcall
stc
push
sbb
and
bnd
es
scas
jge
int3
push
in
jecxz
push
or
pop
shrb
es
xor
pop
pop
pop
out
mov
gs
mov
fcoml
fmull
push
lret
xor
popa
out
push
fstl
jno
xor
xchg
or
loopne,pn
pushf
push
jae
lret
in
shll
xchg
loopne
rorl
pushl
pop
or
idivl
cld
pushf
pop
fwait
into
mov
fs
enter
testb
imul
xchg
xor
jno
add
out
cli
lcall
cmp
shll
pop
fwait
iret
xor
ja
insl
mov
in
xchg
or
pop
cmp
jno
jle
push
adc
pop
xchg
mov
or
arpl
sbb
mov
enter
cmpsl
mov
enter
arpl
jmp
dec
dec
sub
enter
sti
cmp
adc
add
mov
push
pop
stos
frstor
js
loope
sbb
test
xor
repnz
jbe
mul
xchg
fbstp
ds
out
loope
inc
sub
in
add
mov
std
sub
lret
sub
cmpsl
xchg
dec
push
dec
ss
jg
and
not
adc
dec
clc
fnstsw
mov
sub
repz
jne
mov
cltd
mov
sbb
clc
or
mov
insl
ficomps
shlb
adc
mov
je
movsb
jno
xchg
das
jno
lcall
test
mov
sub
icebp
or
aad
mov
mov
repnz
test
ja
aam
inc
insl
xor
insl
ret
in
sbb
rcll
ret
jno
repnz
push
negb
cltd
loop
xor
jle,pn
and
sub
push
mov
dec
cli
mov
imul
fidivrl
sbb
sub
xor
xchg
sbb
jne
inc
add
popf
js
xchg
test
xchg
dec
fidivrs
sub
movsb
outsl
dec
pusha
lods
sbb
dec
fxch
jae
daa
iret
mov
or
pop
pop
adc
mov
shll
mov
out
aaa
in
scas
movsl
out
and
in
int3
std
mov
jmp
int
loopne
insb
out
in
adc
addr16
enter
and
jmp
inc
ret
add
xchg
ror
movsb
sub
mov
out
out
xchg
leave
pop
mov
jne
in
dec
jnp
xchg
cmp
lahf
mov
sub
xorl
mov
xchg
push
push
adc
xchg
in
xchg
cs
xor
push
push
ss
inc
mov
cmpsb
cmp
adc
loope
jmp
inc
xchg
sbb
mov
insb
jecxz
mov
div
or
fists
dec
dec
cld
sarb
fistl
pop
xor
push
in
push
xchg
pop
flds
lods
test
iret
push
pop
into
adc
push
mov
cltd
sahf
loop
mov
dec
inc
insl
mov
push
fwait
lods
pop
ss
movsl
in
mov
loop
mov
jp
cmc
push
fucomi
mul
shrl
xchg
arpl
sbb
loope
dec
jg
js
cmp
insb
and
push
xor
inc
lea
test
and
mov
sahf
int3
add
pop
enter
daa
pop
push
inc
sbb
out
adc
outsl
stc
ja
insl
shl
mov
imul
or
in
inc
movsl
repz
filds
or
or
mov
popf
arpl
mov
add
ja
out
jmp
or
push
ret
jp
push
das
mov
jns
int
pop
fnstsw
iret
adc
and
nop
sbb
mov
ds
xor
pop
flds
xchg
lods
jl
push
jb
push
hlt
std
into
dec
repz
stc
or
pusha
cmp
fildll
ss
pop
ret
or
sub
add
mov
enter
adc
outsl
jnp
sbb
mov
xor
add
outsl
jno
jl
scas
fsubrl
bound
sbb
clc
pushf
sbb
iret
and
insl
in
mov
xor
mov
out
pop
pusha
int
pop
shll
out
sbb
and
or
sub
sub
sub
xor
out
pushf
push
stc
mov
lds
stos
cmc
xchg
sahf
pop
movsl
scas
notl
and
jg
jle
movsl
leave
adc
sti
cmpl
jb
dec
out
test
dec
orl
loope
or
into
jecxz
arpl
jle
xchg
or
sbb
cmp
or
jp
aas
mov
clc
lahf
push
bnd
rcrb
sbb
imul
call
aas
jle
sbb
sbb
ss
ljmp
add
inc
arpl
fcoms
push
jns
pop
add
addr16
lret
movsl
xchg
or
out
adc
push
mov
test
mov
je
aas
sub
pop
fisubrl
leave
pushf
ret
jne
xchg
mov
lcall
cmp
cmp
aas
jge
popa
xchg
xor
xor
jb
inc
out
js
in
push
bound
into
xor
not
psubd
addps
and
push
mov
adc
inc
sub
test
or
loope
cli
push
shl
jne
mov
outsl
sbb
jae
test
or
push
pusha
dec
adc
xchg
jle
mov
in
pop
insb
sbb
enter
jo
gs
jecxz
mov
loope
xchg
cmp
shll
sbb
inc
jmp
xchg
add
sub
xchg
inc
iret
fstl
adc
scas
and
xchg
test
flds
jmp
pop
fndisi(8087
jnp
out
mov
mov
in
fidivrl
shl
cmp
xchg
inc
xchg
in
jmp
in
int3
inc
pop
incw
sbb
out
aad
sbb
out
out
std
push
out
mov
stc
cmpsb
add
ljmp
adc
jae
insl
inc
lds
gs
push
push
shlb
lret
push
mov
pop
enter
stos
iret
mov
sub
jbe
in
stc
fidivrs
jnp
mov
sub
mov
push
call
push
test
add
aam
inc
xchg
es
jo
fs
cltd
jns
and
jp
test
and
inc
test
adcb
loopne
jb
scas
push
incl
out
push
stos
lds
leave
mov
stc
jg
std
push
push
ljmp
cli
ds
xlat
pop
xlat
jno
ss
cmp
sub
mov
mov
jo
inc
cmp
lods
fs
rcr
ret
adc
rcrb
fcmovnu
outsb
xchg
icebp
cmp
fnstenv
xchg
test
pop
pop
adcb
clc
jmp
repnz
aas
pop
ss
dec
push
mov
call
push
jno
jnp
cli
cmp
xor
es
ret
mov
mov
jo
in
out
mov
ljmp
dec
popf
and
addr16
into
cmpsl
ja
std
lods
hlt
xor
jl
dec
lods
lds
dec
inc
inc
daa
sub
fstl
imul
cwtl
mov
push
pop
mov
inc
push
cltd
shr
les
xchg
rcrb
or
push
lds
addl
iret
lahf
jnp
rolb
icebp
or
in
fistpll
xchg
add
inc
test
pop
mull
sbb
mov
sub
and
sub
popa
hlt
xchg
imul
sbb
mov
in
push
nop
cmp
outsb
aam
sub
scas
insl
fwait
or
mov
lock
fdivp
xor
and
decl
xchg
mov
sub
and
inc
sub
int3
mov
aas
cs
mov
fstl
sub
or
ljmp
sahf
push
js
push
jg
sub
fistpll
pop
sub
adc
adcb
leave
repnz
iret
dec
rcrl
insl
movsl
mov
xchg
mov
test
xlat
xchg
inc
jg
inc
sub
xchg
das
xchg
mov
hlt
sbb
cmp
cmp
dec
fidivrs
xchg
lahf
lods
pop
pop
or
jb
mov
inc
push
pop
dec
bound
push
push
cld
and
push
sub
scas
mov
push
push
sahf
sub
add
cmc
mov
addr16
mov
aam
mov
jo
cmp
jg
sub
pop
in
pop
pushf
fs
shrb
fdivs
inc
cld
in
test
int3
pop
iret
xchg
js
mulb
fcmovnbe
adc
daa
incl
or
mov
lcall
cmp
repz
fildl
xlat
cmp
aaa
xlat
cmpsl
fiaddl
cld
aad
shl
je
sahf
adc
xchg
lret
adc
sbb
or
mov
jge
mov
addl
outsb
ss
scas
inc
push
loope
add
orl
shll
and
sti
jp
mov
inc
mov
es
xchg
and
jmp
test
movsb
cmp
cmc
fldt
or
das
andl
or
lods
cmc
adc
repz
popa
mov
and
pop
or
icebp
xor
mov
xor
ret
jns
xchg
pop
sub
or
jne
aam
ss
arpl
in
mov
js
sub
aam
sub
mov
and
in
in
add
or
and
add
adc
ja
gs
lret
inc
movsb
sub
aas
sbbb
sbbb
inc
jns
in
add
mov
jecxz
dec
rcr
das
out
stos
icebp
cld
test
or
cmp
or
loopne
xchg
mov
xor
xchg
mov
addr16
outsb
pop
mov
push
cs
push
mov
push
mov
in
popa
xor
rolb
xor
movsb
lods
jg
sar
notl
cmc
repnz
push
imul
roll
insl
jle
xor
divb
pusha
fcoml
icebp
into
ljmp
mov
mov
in
sbbl
push
into
test
add
stc
ret
mov
mov
inc
imul
sbb
inc
dec
cmpl
pushf
jecxz
push
sub
test
out
push
pop
test
fidivs
push
in
adc
sti
mov
and
fdivrl
mov
sub
pop
dec
fiaddl
push
js
jp
roll
and
clc
xor
sub
or
leave
lods
sub
ret
pop
lret
repz
cld
call
dec
subl
jno
sub
movsl
mov
outsl
lds
movsb
dec
in
enter
push
insl
in
mov
dec
loope
loop
lcall
push
mov
out
sbb
lock
jge
subb
test
ret
cmp
cwtl
cmp
fwait
jecxz
push
out
xor
cmpsb
sbbl
push
adc
lahf
cmp
fcmovnbe
pop
adc
push
in
iret
xor
imull
xorb
mov
mov
bswap
jo
aad
js
test
fiaddl
inc
cmp
in
adc
test
scas
stos
mov
lcall
cld
mov
push
inc
push
xchg
xor
mov
mov
adc
fstl
cs
adc
mov
jns
call
into
mov
mov
iret
call
cmp
outsb
fwait
stos
imul
adc
stos
stc
dec
fsubs
jno
fstl
xchg
loope
sub
outsb
mov
push
or
xor
shrl
roll
dec
jl
jns
popa
xchg
aaa
push
and
sbb
xchg
arpl
jns
add
or
dec
sub
popf
stos
mov
and
mov
ja
sub
and
or
sub
into
dec
ljmp
nop
cwtl
jae
ret
inc
xchg
aad
ffree
std
test
jb
in
pop
stc
imul
pop
adc
in
ja
jmp
pop
leave
and
dec
inc
dec
pop
pop
mov
lcall
pop
dec
xor
imul
xchg
dec
and
punpckhdq
mov
pop
xchg
mov
cmp
mov
pop
inc
mov
xchg
pop
pop
push
adc
adc
pushf
add
jp
gs
dec
insb
push
cmpsb
mov
jl
pop
lock
fsub
push
test
mov
cmpsl
int
fbstp
add
pop
mov
scas
add
int3
in
movsl
dec
jbe
push
les
mov
loop
mov
cmp
push
popa
pop
mov
std
pop
cmp
pusha
push
pop
pop
push
mov
inc
add
or
cmp
rcrb
jmp
xchg
mov
popf
jmp
lcall
dec
ss
mov
fsub
mov
cmp
ljmp
cld
push
jb
fsub
lods
jnp
sub
mov
xor
incl
mov
and
stc
aam
push
je
push
loop
popf
repnz
mov
enter
pop
jno
mov
inc
testl
lret
xor
pop
mov
mov
inc
lret
insw
rorl
shlb
xchg
call
xchg
lds
add
fs
push
filds
pop
or
sub
mov
pop
loop
xchg
mov
loope
mov
neg
cmpsl
sub
xchg
xlat
and
cmp
in
jb
shrl
ljmp
pop
mov
add
enter
fsubrs
test
xchg
les
jbe,pn
std
mov
jge
adc
cmp
adc
xchg
daa
adc
leave
mov
and
pusha
xchg
cmp
shll
fisttpl
pusha
ret
jno
xor
adc
mov
pop
add
mov
lock
vphsubwd
fistps
cmpsl
push
test
test
jmp
das
xchg
cmpb
cmpb
mov
cmp
ret
push
clc
sbb
inc
fucomp
xchg
sbb
mov
outsb
dec
pop
dec
fistpll
js
pop
in
cmp
bound
je
cmp
xor
fisubrl
mov
or
dec
ret
inc
push
imul
cmp
cmp
jge
jecxz
repz
push
xchg
pop
sub
repnz
add
call
int
cmpb
in
add
push
cmp
cltd
insb
incb
push
inc
jo
jmp
movsl
pop
movsb
frstor
enter
call
std
adc
jle
or
jge
lea
imul
push
sti
pop
sahf
add
jne
dec
xchg
rclb
mov
aaa
je
pop
insl
repnz
rolb
out
mov
mov
sbb
aam
push
xchg
cltd
in
adc
sub
sbb
movsb
iret
sub
sub
stos
xchg
aas
fimuls
into
pop
inc
ja
and
dec
push
push
xchg
ds
cmpsl
fldcw
sarb
bound
roll
jmp
pop
in
pop
add
xor
push
in
sub
jns
jns
aaa
mov
pop
addb
les
push
clc
xor
ret
je
push
lahf
pop
ljmp
xlat
jecxz
rorl
shrl
push
sub
and
cmp
xchg
sbb
xchg
sbb
mov
mov
pop
inc
adc
dec
and
xor
scas
adc
dec
pop
mov
adc
adc
xchg
mov
push
inc
aaa
das
pop
or
das
fistps
mov
mov
and
pusha
mov
loopne
imul
adc
push
mov
sub
push
or
nop
out
fldl
cmp
outsl
xor
jne
adc
je
imul
enter
push
cmpsl
dec
stos
cld
clc
stc
push
int3
lods
cmpsl
cs
push
jnp
std
scas
jae
subl
push
insl
dec
sahf
jg
ja
mov
xchg
sbb
hlt
ss
imull
xchg
scas
inc
cld
cmpsb
iret
movsl
add
push
std
mov
push
lock
cmpsl
into
mov
insl
pop
xor
cmp
pop
push
push
cmp
mov
fisttpl
std
cltd
jl
ss
or
sub
out
jecxz
and
lock
cmp
loope
mov
scas
xor
repnz
mov
in
jle
in
jg
adc
sbb
repz
lods
dec
fadds
pop
mov
add
or
movsl
aas
popa
xchg
mov
jns
fsubrl
xor
insl
xor
ss
pusha
pop
test
cmp
pop
pushf
sbb
shll
or
ret
bound
call
mov
js
dec
sti
jno
jmp
inc
fnstenv
xchg
xlat
pop
inc
mov
clc
jle
mov
stos
mov
cmp
push
inc
scas
pusha
pop
xchg
outsl
xchg
pop
and
ret
jp
insb
repz
clc
nop
rcrb
xor
ja
pop
or
aas
mov
sbb
jno
imul
jo
jl
pushf
lea
push
aas
ficompl
into
inc
test
mov
movsl
and
rolb
sub
lret
pop
andl
mov
cmp
mov
out
mov
mov
imul
fs
movsl
sbb
js
out
mov
lcall
cmc
sarl
aad
repz
push
sbb
mov
gs
pop
mov
in
inc
shll
movsb
and
sahf
cmpsb
pop
jp
pop
sahf
and
xor
stc
hlt
and
test
xchg
pop
inc
rorb
inc
lahf
fcomps
pop
cli
mov
adc
jb
mov
or
mov
test
and
adc
rcrb
xor
pop
inc
lock
sbb
jmp
imul
push
mov
xor
push
sbb
loop
nop
mov
clc
add
mov
mov
sarl
xchg
add
mov
xor
xchg
adc
inc
or
aam
mov
dec
inc
ret
test
stos
push
or
ja
pop
jae
les
lcall
aaa
loop
jae
aaa
pop
xchg
stos
enter
mov
pop
aam
jbe
shll
pushf
push
popa
test
scas
mov
or
mov
lret
sbb
pop
stos
push
mov
imul
ret
inc
clc
and
mov
js
js
or
mov
jo
adc
nop
daa
mov
sbb
push
mov
sub
sarl
aas
shlb
stos
mov
dec
jmp
aam
xchg
add
js
iret
icebp
push
jne
in
cs
loop
sti
insl
fstpl
mov
aad
mov
xchg
rclb
dec
mov
pop
or
inc
add
push
sarl
sarb
push
and
and
adc
mov
xchg
pop
or
and
xchg
sub
sub
sti
pop
adc
fld
rolb
int3
stc
xlat
out
ja,pt
cmp
or
add
sub
adc
mov
xchg
jp
and
ds
mov
subb
push
and
cmp
mov
idivl
push
or
sub
pop
into
jo
cmp
ret
cltd
shlb
cmp
gs
shll
notl
outsb
pop
pushf
jno,pt
pop
ja
mov
pop
lods
outsb
les
cmp
mov
or
std
jp
int3
dec
inc
lods
mov
add
add
pop
mov
cmp
shll
popf
fdivrp
xor
fcompl
call
mov
push
or
jne
movl
int
xadd
dec
int
lock
cltd
adc
mov
imul
pop
cmpsb
mov
dec
cmp
movsl
dec
fdivl
sbb
jnp
xor
es
or
xchg
in
or
test
xchg
js
jecxz
xchg
imul
jp
push
js
and
mov
negb
mov
lret
jns,pn
rcl
mov
sti
jno
sarl
ja
mov
adc
les
aaa
push
push
inc
insb
call
out
movsl
and
xchg
popa
sbb
ret
sti
add
insl
fistps
test
ljmp
mull
push
sub
pop
clc
xorl
orb
sbb
inc
add
pop
lods
data16
push
pop
cmpl
movb
std
jecxz
imul
push
orps
inc
mov
shrb
dec
push
lock
push
out
lret
movsb
jl
push
inc
jp
mov
mov
mov
je
xchg
push
fwait
outsb
lods
bnd
dec
inc
scas
es
cmpsb
cmp
jo
jnp
mov
sub
push
jge
out
inc
jle
dec
cmp
or
mov
push
popf
adc
push
adc
xor
jne
mov
adc
xchg
std
adc
loope
sub
lcall
es
mov
fld
or
mov
ljmp
in
fcoms
cmc
icebp
cmp
xorl
fwait
dec
sub
ret
push
sbb
incb
adc
jmp
and
fsubs
add
das
aaa
iret
stc
addb
cmpb
bts
mov
mov
push
adc
popf
orl
je
jb
push
adc
mov
mov
xchg
int3
dec
mov
mov
mov
jp
mov
sub
add
or
testl
loopne
imul
lret
popa
xchg
popa
xchg
ss
mov
outsl
fcompl
outsl
aaa
or
imul
mov
cmp
ss
jnp
test
add
pushf
cmp
pushl
sbb
call
mov
mov
and
dec
xchg
mov
lcall
and
out
sbb
push
mov
pushf
sub
dec
xor
xorl
lret
inc
in
xor
cs
xchg
insb
or
insb
cwtl
mov
pop
pusha
rorb
std
fnstcw
xor
cwtl
dec
ror
or
jae
int3
test
push
popa
hlt
mov
outsl
cltd
sbb
dec
imul
adc
lds
inc
shrl
inc
jae
insl
loope
xor
push
push
push
fnstsw
xor
clc
les
rol
jae
mov
sahf
xor
scas
sub
adc
lret
jbe
jge
loope
inc
or
mov
ljmp
sbb
enter
sub
jbe
lock
cmp
fcmovu
or
fldt
je
jg
mov
sub
inc
scas
xchg
xchg
inc
pop
cli
test
sub
iret
stos
out
and
test
lods
sti
mov
mov
xchg
xor
push
adc
pop
mov
sti
clc
in
pop
dec
or
push
cld
push
add
mov
loop
mov
xchg
cmp
daa
fwait
in
out
ljmp
lods
mov
lcall
adc
sub
inc
into
mov
loopne
out
add
xchg
mov
mov
sub
stos
mov
call
and
xchg
ja
add
or
out
ret
cmp
ret
sti
shrb
mov
pop
pop
xor
test
push
mulb
cmpsl
dec
sub
cmpb
inc
outsb
aas
dec
push
mulb
mov
bnd
xor
lods
sahf
shrb
enter
xorl
pop
imul
fsubl
sti
and
stc
xchg
xchg
lahf
int3
hlt
xchg
jmp
jno
pop
fildl
int3
mov
imul
sub
mov
out
pop
fstl
dec
movsl
addr16
es
push
lret
call
rorb
das
out
paddsw
gs
ljmp
in
xor
dec
mov
outsl
xchg
mov
repz
in
out
gs
xor
enter
or
pop
push
pusha
fistpl
or
loop
pushf
mov
cld
xchg
sbb
negl
je
push
enter
jp
push
jge
out
sti
and
jns
fstps
scas
ljmp
fcoml
pop
sahf
jae
xchg
pop
repnz
and
and
push
out
push
cs
and
test
mov
push
inc
add
cmpsl
add
add
xlat
popa
in
daa
mov
cmc
int
add
xorb
test
xor
add
lahf
jle
and
or
xchg
dec
sti
sub
cltd
loopne
push
sar
mov
push
xorb
jne
pop
mov
jmp
rcrl
fs
cs
out
mov
aam
xor
mov
ficoml
xchg
outsl
cmp
test
test
pop
xor
lret
jo
mov
std
cli
mov
data16
lods
xor
aas
movups
cmpw
push
test
add
jno
fstl
xchg
xchg
adc
xor
push
sbb
cmp
sahf
sub
pop
fwait
mov
into
mov
adc
mov
lea
and
sbb
pop
pusha
mov
cld
adc
mov
push
pop
movsl
js
jae
mov
lret
sub
out
inc
dec
test
lahf
jle
ret
movsb
in
aad
mov
mov
sti
cmpsb
test
movsb
push
add
imul
jae
sub
leave
clc
pop
movsl
arpl
dec
ficoml
sub
mov
mul
adc
jbe
aas
cmp
jnp
sbb
loopne
lret
mov
out
dec
jmp
adc
sbb
add
or
mov
aam
sub
jecxz
xor
lods
aad
mov
add
mov
aad
scas
out
mov
icebp
xchg
enter
leave
jl
imul
mov
lea
out
adc
es
xor
mov
pushf
add
stc
lret
lock
pop
hlt
test
xchg
scas
outsb
sbbl
int
orb
imul
push
mov
xor
mov
daa
mov
loopne
jge
inc
aas
sahf
jo
insb
mov
push
jle
dec
stc
push
and
leave
imul
push
jae
iret
inc
push
int3
cmp
sarl
pop
cmp
lods
xchg
sahf
xchg
icebp
icebp
sahf
inc
pop
sti
test
adc
repz
push
jp
pop
out
pop
xchg
xchg
test
dec
gs
xchg
int3
push
or
jecxz
fcompl
lds
adc
insb
adc
sub
js
into
aas
fwait
cmpsb
dec
adc
dec
push
add
in
insl
fisubs
fadd
lods
es
nop
adc
jns
xchg
cmp
add
xchg
je
addl
push
data16
int
xor
sbb
pop
insb
dec
mov
and
sub
dec
test
cwtl
test
out
jb
add
test
adc
imul
notb
dec
repnz
repz
dec
sub
xor
mov
loope
dec
test
aaa
lret
sub
decb
js
cmp
das
dec
dec
dec
xchg
stos
pop
inc
xlat
test
ret
stc
adc
adc
cmp
mov
ja
popa
add
push
lcall
ds
mov
push
cmpsl
xor
stos
out
pop
inc
int3
rcrl
fwait
push
xchg
dec
cmp
ror
ret
mov
cmpsb
and
ljmp
dec
imul
fcoms
mov
pushf
or
or
mov
fimuls
pusha
jmp
push
in
nop
mov
mov
add
repz
xchg
or
mov
fwait
push
pop
test
aas
sbb
pop
ror
out
gs
or
push
or
std
in
arpl
lret
lret
push
xchg
cwtl
dec
das
dec
xchg
jmp
in
sti
push
adc
shlb
cmp
mov
xchg
outsb
lods
jg
ret
int3
push
push
stc
std
and
push
pushf
fdivr
loop
push
mov
jge
ljmp
xchg
pusha
fwait
sarl
jae
nop
ret
sbb
test
aad
and
add
jne
jne
jo
cltd
mov
or
adc
imulb
add
pop
ja
ficoml
pushf
pop
call
movzbl
fwait
das
add
xor
pop
stos
mov
mov
sub
mov
mov
jnp
xchg
mov
mov
cmpsl
clc
cs
add
mov
add
ficomps
inc
mov
out
in
push
pop
mov
int
fcompl
pop
cmp
adc
stos
cltd
or
jg
loope
sbb
filds
imul
xchg
mov
incl
lock
jge
dec
rcrl
aas
dec
adc
pop
fs
mov
mov
sub
push
data16
or
or
out
pop
inc
aas
movsl
les
jnp
mov
jmp
cmp
inc
sub
inc
sahf
insl
jp
xchg
xchg
mov
sub
dec
aas
jne
fs
mov
xchg
xchg
lahf
push
lcall
sbb
mov
push
xchg
inc
bswap
or
xchg
loopne
test
loope
sub
insl
ret
repz
cmp
pop
mov
bound
push
xchg
xor
push
shl
pop
fstpt
andl
push
inc
pop
inc
sub
jmp
or
mov
mov
add
xchg
dec
fnstenv
dec
and
in
sub
fwait
jnp
fidivs
pop
fdivs
icebp
arpl
hlt
gs
lcall
punpckldq
out
fidivs
mov
mov
adc
dec
inc
mov
sub
fcomps
in
imulb
or
rorl
cmp
mov
xchg
stos
cmc
or
or
cmp
lret
jns
push
mov
mov
aad
xchg
icebp
xor
and
imul
incb
cli
aas
xchg
push
pop
ja
add
xchg
fcmovb
sti
lods
mov
shrb
jecxz
clc
push
lock
das
push
add
cmpsb
shlb
and
pusha
nop
mov
pop
out
push
jge
lea
cmc
push
xor
dec
xchg
and
fwait
icebp
stc
cmp
fsub
fstps
xchg
inc
dec
std
add
aaa
pop
xlat
aas
andb
pop
xchg
adc
jmp
lahf
ja
popw
jo
std
push
xlat
push
shrl
aaa
lds
push
int3
mov
int3
adc
push
jnp
aam
out
mov
and
je
rcr
pop
outsb
cmp
out
push
jp
mov
loope
inc
inc
mov
sub
xor
xor
sub
mov
out
mov
mov
inc
push
cmp
adc
push
and
dec
das
decl
orb
lcall
and
xchg
popa
mov
ljmp
lret
mov
inc
enter
adc
adc
mov
ret
mov
xchg
aad
mov
je
scas
test
add
rolb
ja
mov
movsb
cmpsl
leave
push
in
mov
xchg
jmp
and
movsl
push
pop
in
arpl
popf
fmull
cmp
arpl
rep
fdivl
inc
sub
pop
insl
push
jmp
decl
ret
xor
rorl
jmp
ljmp
mov
je
hlt
xor
mov
add
pop
lret
fwait
jno
adc
cli
lock
xor
fisttpll
cld
pop
rcrl
mov
pop
sbb
in
xchg
out
or
outsl
cmp
clc
neg
je
mov
xor
mov
or
push
sbb
js
mov
out
ficoml
cmp
inc
adc
lock
push
mov
scas
outsb
jl
xchg
outsl
pop
or
xchg
sbb
fwait
outsb
out
pop
xchg
pop
push
mov
fcomps
add
push
pusha
pusha
or
mov
add
fdivrl
insb
lret
add
daa
scas
mov
dec
mov
cmp
sbb
fwait
mov
pop
inc
pusha
imul
cmpsl
sub
pop
repz
cmp
xchg
xor
cmc
push
mov
jo
in
pop
inc
push
das
ret
push
mov
inc
xchg
lods
pushf
mov
dec
lret
mov
mov
mov
shrl
cmp
pop
xor
scas
pusha
scas
mov
icebp
sbb
imul
out
mov
sbb
loop
mov
lods
inc
aam
pop
scas
mov
xchg
or
jno
mov
ret
lcall
lcall
insl
push
rclb
enter
loop
mov
xor
dec
push
inc
jecxz
cmp
imul
addr16
faddl
flds
mov
adc
sahf
jp
cld
mov
test
fcoml
cli
mov
dec
jae
and
out
insl
inc
int3
pop
sub
inc
and
adc
pop
fstp
rclb
test
dec
je
mov
dec
jno
or
adc
mov
pop
and
orb
add
push
dec
sbb
popa
shll
jo
ds
mov
inc
ss
ret
or
in
outsb
notb
jl
mov
jle
lcall
jne
test
imul
jbe
pushf
hlt
subl
and
adc
push
mov
pop
xchg
mov
mov
xchg
cmpsb
lods
sub
jmp
push
mov
sub
dec
mov
mov
cmp
add
add
cld
inc
pop
in
sub
out
jns
push
es
pop
arpl
pushf
and
sub
ja
and
push
decb
lret
adc
mov
insb
mov
out
out
repz
mov
adc
add
daa
or
stos
push
test
ja
test
ds
arpl
add
lret
pop
push
andl
aam
imul
addr16
mov
cmp
ret
or
cs
aam
aam
stos
ret
loope
pop
dec
xlat
dec
dec
jl
mov
inc
mov
sub
xchg
rorb
inc
push
pop
unpckhps
dec
jns,pn
xlat
sbb
sbbl
xchg
loop
aam
cmp
mov
push
fcoml
push
icebp
adc
mov
push
mov
lcall
scas
repz
outsb
loopne
sbb
and
cmc
dec
in
xor
repz
or
xchg
ret
in
ja
and
jle
inc
pop
xor
and
dec
xor
mov
mov
mov
jo
shrb
frstor
shl
ja
aad
shl
shll
add
into
and
nop
dec
lods
add
in
lret
ret
jg
mov
dec
mov
rcll
arpl
in
mov
mov
es
pop
sbb
loop
addr16
shrb
test
inc
xchg
add
sbb
push
mov
xor
dec
std
inc
cmp
and
fwait
or
out
add
sub
fdivrs
les
push
inc
jmp
movsl
shll
pushf
jecxz
jg
push
mov
ret
ret
xor
mov
or
rcrb
add
arpl
mov
pop
scas
rolb
push
push
push
icebp
push
jl
xchg
pop
add
pop
cwtl
mov
or
loop
mov
add
pop
pop
cmp
cmc
jl
jle
and
or
addl
aad
pop
sub
mov
inc
fiadds
popf
mov
repnz
pop
mov
mov
xor
cmp
xchg
fld
ret
sub
dec
int
mov
hlt
or
ds
mov
or
lods
sub
daa
adc
add
aas
push
xorl
inc
push
add
lret
cmpsl
or
mov
scas
popf
cmp
or
push
cmpsb
xchg
or
scas
sbb
adc
cmc
inc
mov
dec
or
sar
dec
adc
sbb
in
cld
or
in
loop
ret
cmp
sbbb
psubd
xchg
test
shlb
std
add
idiv
in
dec
push
xor
adc
dec
cmc
rcll
sub
push
mov
or
sub
je
jecxz
movsb
fidivrs
dec
stc
mov
jo
or
shll
xchg
aad
adc
and
mov
sub
rcl
jnp
jp
jmp
sub
jg
mov
xor
into
push
or
add
or
and
mov
xchg
xchg
mov
stos
out
inc
push
in
inc
or
or
fstpt
xchg
adc
xor
fidivrs
xchg
jns
dec
dec
jp
dec
push
lock
mov
mov
mov
pop
leave
lcall
xchg
and
adc
add
and
mov
ret
pop
out
push
jne
insb
sub
jecxz
and
pop
cltd
pop
jmp
or
ljmp
sub
dec
sbb
push
sbb
ret
mov
adc
mov
mov
aad
push
jno
mov
aaa
push
fldenv
jnp
aas
jg
push
icebp
stos
mov
sub
mov
hlt
xchg
mov
ja
ror
test
repz
lea
push
or
push
cmp
outsl
push
iret
jo
rcrb
xchg
sbb
pop
out
nop
into
daa
lds
mov
ljmp
lret
test
out
pop
mov
pop
in
data16
pop
sub
push
cmp
ja
xchg
sahf
shlb
cwtl
sbb
mov
sbb
xor
stc
or
jecxz
pop
add
xor
fwait
mov
adc
sub
inc
cli
dec
fs
jno
push
or
add
add
xor
movsl
mov
test
sub
imul
push
jo
dec
jmp
sub
sub
xor
add
or
enter
xchg
cmp
mov
shld
out
sbb
mov
sub
lds
jnp
insl
mov
loop
in
push
scas
pop
mov
sub
icebp
cmpsb
push
push
add
lds
cs
sub
leave
mov
add
lods
int3
dec
ret
jno
sub
mov
mov
inc
sahf
stc
adc
mov
jo
xlat
test
xor
dec
sbb
shr
xchg
xchg
cmpsb
xchg
lahf
sbb
imul
hlt
pop
jo
push
shrl
sbb
mov
jle
sub
pop
cs
movsb
shlb
push
or
testl
sbb
pop
arpl
xchg
fimull
xchg
hlt
std
into
cmp
and
imull
mov
cli
out
mov
jmp
ret
jae
adc
mov
pop
mov
ret
push
mov
xchg
xorb
mov
fs
pop
adc
lods
jae
fnstenv
push
inc
or
cmp
dec
push
out
dec
push
dec
xchg
xor
pop
cli
in
pop
pop
inc
pop
movsb
push
and
inc
jae
and
sub
mov
add
or
or
mov
mov
pop
mov
pop
mov
frstor
call
sub
sahf
xor
push
punpcklbw
inc
out
fdivl
inc
sbb
repnz
push
lcall
addl
pop
pop
lahf
aas
test
dec
arpl
add
sbb
mov
lret
xor
adc
mov
jae
jno
repnz
jmp
fsubrp
pop
fstl
les
mov
mov
adc
mov
xor
cmc
or
pop
xchg
outsl
mov
cli
scas
cmpsb
ss
leave
popa
sbb
sub
mov
and
mov
jb
pop
xor
in
sahf
or
loope
mov
cltd
movhps
mov
shlb
test
rcrl
jo
add
push
mov
inc
mov
mov
xchg
test
xchg
dec
pop
movsl
fidivrs
xor
cmpsl
jnp
sub
scas
scas
mov
xchg
xchg
popf
xor
insl
mov
int3
mov
ret
aaa
jno
inc
aaa
loope
ja
int3
in
lods
fcoml
jge
into
icebp
push
mov
and
mov
cmp
call
fs
enter
cwtl
subl
rcl
pop
ret
mov
pusha
adc
adc
jl
cmp
push
xor
inc
addl
push
sbb
aam
fildl
xchg
xor
test
jmp
add
xor
ds
outsb
pop
mov
fisttpl
adc
mov
mov
call
dec
push
lret
out
adc
jnp
mov
cwtl
jnp
xor
mov
adc
sub
cmp
add
mov
pop
pushf
rclb
add
inc
xchg
sti
inc
dec
jecxz
lcall
jecxz
insb
xchg
xchg
cmp
dec
jecxz
aad
cmp
pop
mov
push
cmp
mov
push
lret
xchg
cmp
sbb
mov
sbb
ret
aad
xor
push
test
cmpsl
rcr
push
dec
push
int3
sti
enter
dec
enter
lods
leave
rcr
inc
inc
xchg
insl
mov
pop
pop
cltd
and
test
test
aad
int
test
icebp
mov
mov
movsl
dec
fnstcw
arpl
out
cmp
pop
outsb
xchg
and
in
jbe
ret
cmpsl
jbe
ret
fs
jl
sub
and
jmp
xchg
scas
inc
xor
clc
cli
cmp
mov
pop
jmp
xor
and
imul
xchg
inc
cli
mov
add
scas
repz
jae
jne
scas
mov
aam
sub
aas
mov
icebp
rcl
xor
cld
movsb
cmp
jp
rcrb
orps
inc
adc
dec
popl
push
mov
lods
mov
push
stos
enter
iret
inc
xor
lcall
loop
inc
adc
mov
push
xor
ja
ljmp
icebp
mov
jae
pop
push
push
dec
cmpsl
push
inc
push
dec
ljmpw
mov
fimuls
lret
xchg
je
xor
cltd
or
cmpsb
sbb
test
push
loopne
and
xorl
pop
or
aas
dec
dec
mov
xchg
imul
addr16
insl
push
data16
cmp
mov
or
mov
and
lock
jnp
out
insl
jbe
push
popl
insl
jbe
stos
mov
mov
insl
mov
cmp
sbb
push
lret
push
gs
mov
das
jae
cltd
loopne
jp
cld
cld
push
aaa
fstpl
pop
sub
push
ljmp
mov
cmp
fs
shl
out
fstps
mov
cmpsb
out
mov
pop
xchg
pop
fcmovbe
inc
dec
xor
ljmp
cwtl
and
addl
add
add
ficoms
adc
lods
push
popa
test
mov
scas
into
test
lahf
mov
sbb
add
cwtl
cwtl
lret
int
ljmp
jne
stc
dec
je
test
testb
das
lock
mov
xor
daa
movsl
arpl
push
and
movntq
out
addr16
mov
xlat
mov
push
roll
cli
push
and
mov
daa
movsl
repz
sub
popa
call
mov
sbb
shlb
fidivs
sbb
pop
mov
adcb
xorb
and
repnz
jmp
sub
shll
and
mov
hlt
fnsave
pop
lods
pop
push
loope
ja
lods
jns
jmp
mov
sti
and
cli
in
sub
xchg
mov
xlat
sbb
push
or
xchg
jb
cmp
xor
jl
xor
mov
test
push
int3
mov
mov
out
movsb
push
mov
mov
inc
sbb
out
rol
push
lret
mov
pusha
mov
mov
xchg
movsb
test
ljmp
in
cmc
fmuls
xchg
mov
insb
clc
dec
test
enter
cmp
das
jg
dec
push
xor
pop
leave
jl
cmp
add
daa
lret
dec
xchg
push
aaa
test
stos
cmp
data16
jns
popf
and
test
repz
aas
add
movsl
lret
mov
pop
fcoms
pop
add
nop
push
movsb
sub
pop
leave
xchg
pop
imul
fnstenv
mov
jmp
cmpsl
lcall
stc
sbb
and
mov
inc
cltd
push
dec
mov
stc
lret
mov
fisubl
or
mov
rcll
call
inc
das
fldcw
push
sub
cmp
daa
in
cld
jmp
stos
push
aaa
add
or
mov
cmpsl
shlb
pop
xor
jle
xor
adc
cmp
mov
movsl
sbb
cmp
sbb
rol
jo
xorb
ret
jae
xchg
and
pop
pop
pusha
jo
clc
loop
and
mov
mov
fnstsw
imul
mov
cmp
mov
fs
lret
xchg
and
sbb
insb
mov
inc
cmp
aas
out
dec
jb
mov
fs
stos
subb
sti
xchg
outsl
jecxz,pn
data16
add
rolb
lcallw
cmpsl
jb
pop
push
sub
loopne
and
inc
cld
xor
inc
mov
add
scas
mov
imul
or
inc
out
sbb
pop
es
addl
lock
iret
and
test
pop
and
inc
js
lret
jno
hlt
sarl
jp
mov
push
jae
pop
inc
fcomip
shr
xchg
mov
loope
call
sub
arpl
imulb
dec
jae
sbb
mov
inc
sbb
movsb
lods
shrb
lods
mov
sbb
imul
cld
es
enter
repnz
cld
loope
adc
push
dec
lret
inc
mov
ret
jbe
rcrl
bound
push
mov
fisttpll
bound
and
mov
lods
add
pop
insb
lahf
ja
je
or
sti
lahf
in
daa
push
push
lds
shlb
add
addr16
or
imul
mov
mov
mov
cmpsb
add
inc
movsb
mov
and
imul
mov
pushf
nop
xor
nop
or
fs
adc
lret
push
push
pop
repz
jnp
aaa
push
mov
mov
jmp
pop
adc
jne
mov
insl
cld
mov
jne
push
push
push
jns
test
adc
mov
xor
leave
inc
jne
push
mov
push
xchg
notb
pop
das
adc
adc
and
pop
mov
mov
leave
push
in
adc
out
pop
insb
ljmp
fsubr
mov
out
mov
pop
add
dec
fildll
mov
pop
sbb
push
fcoms
mov
hlt
mov
xchg
xor
jge
mov
mov
mov
xor
jmp
pop
mov
imul
cmp
xlat
pop
mov
cld
lea
bswap
imul
stc
insb
es
adc
iret
inc
stos
loopne
mov
or
ja
ds
adc
inc
lods
js
pop
push
aad
push
push
dec
inc
inc
jle
ss
xor
popa
stos
es
inc
mov
cld
mov
scas
pop
jl
pusha
fbld
ret
test
add
lahf
pop
aaa
mov
jg
ret
add
jmp
cwtl
shll
push
sub
mov
push
in
pop
and
or
mov
sbb
out
shll
xor
pop
int3
rol
mov
mov
int
les
mov
inc
xor
push
jl
pop
mov
pop
clc
shrb
mov
jge
add
jle
jae
pop
pop
popf
nop
pusha
int
iret
js
mov
fstpl
scas
mov
int3
out
pushf
imulb
mov
daa
ret
cmp
mov
dec
jle
inc
mov
mov
cmp
jecxz
dec
loope
mov
pushf
mov
mov
push
xchg
adc
add
dec
xchg
test
icebp
adc
bound
lcall
dec
sub
adc
xor
icebp
mov
lea
lods
and
cmp
mov
sti
sub
shlb
add
or
xor
hlt
dec
fcomp
push
push
mov
jl
cld
repz
xchg
pop
in
sbb
and
inc
je
insb
dec
push
stos
dec
fdivrl
test
imul
stc
mov
pusha
rorb
or
icebp
subl
push
sub
int
jno
sti
or
arpl
sub
mov
fucom
sbb
outsl
popa
test
add
lahf
add
pop
dec
sarl
cmpsb
jp
sbb
jno
bound
imul
shl
out
rorl
in
stc
inc
mov
fistpl
cmp
fs
mov
lods
shlb
mov
js
sub
pushl
in
pop
add
outsb
std
into
dec
repz
pop
aas
cwtl
pop
test
pusha
pop
adcb
cld
loopne
inc
jg
jne
xorb
push
es
mov
pop
xchg
push
stos
mov
push
fstps
movsl
jmp
rorb
int
add
mov
dec
xchg
jg
shr
inc
xor
mov
int
or
test
mov
dec
lods
add
push
sbb
dec
out
repz
inc
lods
xlat
mov
pop
xor
push
fsts
sti
lea
rorb
mov
or
add
mov
mov
xchg
popa
or
pop
lahf
sahf
push
add
mov
fmul
aas
imul
mov
push
lods
or
test
fcomps
in
and
mov
mov
add
mov
push
in
es
mov
testb
inc
xor
ljmp
xchg
scas
test
dec
les
pop
push
jl
fidivrs
loop
in
and
xchg
shr
subb
fcoml
xor
push
aad
cmp
mov
or
and
and
daa
push
dec
mov
testb
or
adc
jb,pt
mov
push
cmpsl
or
xorb
xchg
jnp
les
imul
pop
pop
inc
data16
rclb
xor
lods
inc
rep
shlb
fwait
adc
fs
inc
jle
sarb
je
mov
rorl
or
sbb
pop
or
addr16
jle
xchg
jl
push
pop
cli
iret
cmp
jb
jmp
xchg
das
mov
xchg
lret
xchg
xchg
inc
dec
xor
mov
cwtl
pop
mov
dec
std
ja
xor
gs
xchg
in
mov
insl
sbb
pop
cmp
xchg
inc
sahf
cld
mov
push
arpl
mov
inc
dec
dec
mov
jl
scas
jge
loop
mov
aam
nop
in
push
out
xor
adc
and
jns
cwtl
mov
ds
jb
and
fsubr
inc
jns
je
aaa
cmp
or
stc
rclb
mov
pop
std
xchg
cmp
lods
fcomip
rclb
shl
mov
xchg
xor
and
leave
adc
sub
cmovp
cli
pop
mov
xchg
or
xchg
lcall
ljmp
dec
inc
mov
ljmp
iret
or
pop
in
mov
push
stc
popf
fwait
cmp
das
xorl
mov
cmp
out
movsb
push
loopne
push
das
test
jge
add
and
outsl
and
sub
loopne
out
rol
loope
mov
adc
and
mov
stc
inc
xor
repnz
fisttpl
add
icebp
test
cli
cmpsl
cli
bound
loopne
sub
shr
ffree
das
test
xor
mov
fmul
mul
jg
xchg
jne
jo
mov
into
or
adcb
in
pxor
push
push
nop
movsl
sbb
adc
sbb
jg
iret
dec
inc
in
dec
icebp
push
ljmp
data16
xchg
xchg
adc
adc
dec
cli
xor
xor
cmpsl
xor
es
rorb
xor
mov
or
and
fadd
add
inc
sub
mov
stos
inc
test
xchg
aam
xchg
dec
pop
mov
je
sub
cltd
in
lcall
sbb
pusha
adc
dec
daa
aad
adc
and
xchg
pop
fcompl
mov
nop
cmp
ficoms
sbb
or
pop
or
pop
rclb
xchg
mov
push
or
pop
mov
jns
cmp
sub
cmp
loop
dec
mov
mov
js
jno
sbb
movsl
pusha
sbb
pushf
or
inc
mov
mov
addr16
mov
jae
rcrw
or
adc
ret
mov
jo
push
xchg
stc
lea
mov
das
clc
jo
in
movl
sub
adc
test
and
pushf
add
or
fcompl
push
int
cmc
cmpsb
stc
push
mov
aam
shl
or
or
aas
out
aam
lock
mov
mov
outsl
pop
notb
jg
inc
out
outsl
leave
clc
cmp
das
pop
xchg
mov
fildll
pop
das
add
fmull
das
cmp
push
addr16
push
sbb
jne
mov
lods
cmc
jnp
add
loopne
jmp
mov
jge
pop
cli
lahf
mov
xlat
mov
push
and
pop
test
out
stos
repz
in
ds
jl
dec
insb
lea
insb
jbe
iret
inc
sbb
inc
inc
xor
ss
mov
in
mov
loop
in
xor
dec
or
mov
or
lods
rclb
int
adc
nop
into
in
mov
leave
mov
imul
sub
arpl
imul
jo
push
fwait
jae
sarl
lahf
nop
aaa
dec
aad
xor
cltd
xor
mov
rcll
push
fstpt
rcl
mov
mov
sbb
jnp
jg
jg
addl
push
lea
inc
sub
sbb
push
mov
enter
mov
lahf
sar
outsb
data16
or
xor
ds
repnz
out
mov
popf
cmpl
xchg
shl
ds
cmp
cmp
imul
dec
mov
push
iret
mov
adc
xchg
dec
scas
adc
aam
adc
daa
pusha
mov
mov
dec
sahf
mov
testb
jp
int3
push
cwtl
mov
jp
mov
fs
lock
subb
jecxz
sbb
adc
mov
adc
and
enter
push
test
shll
xchg
addr16
inc
dec
dec
int
jbe
mov
insb
jmp
lahf
in
nop
mov
notb
js
rorl
inc
lods
jmp
leave
stos
in
push
jb
adc
imul
fdivl
mov
cmpl
push
loop
inc
pop
paddq
fnstenv
inc
mov
rolb
jl
fistl
out
out
pushf
loopne
adc
lahf
add
mov
fistpl
lea
ss
sub
jl
int3
jmp
int
out
cli
repnz
pusha
and
into
int
xor
and
adc
inc
fnstcw
xlat
xchg
rorb
and
sbb
mov
mov
add
xchg
arpl
add
hlt
xchg
cltd
stos
lods
jmp
push
jns
test
fucomip
jg
std
hlt
dec
push
or
arpl
cmp
push
leave
jecxz
push
in
push
movsl
or
mov
lock
lods
nop
adc
dec
ljmp
pop
stos
popf
mov
daa
xor
cli
bound
cmpsl
adc
jle
add
jl
je
or
sbb
jmp
in
into
or
ja
push
dec
rolb
loope
fwait
je
clc
pushf
lds
outsb
call
popa
sub
js
add
icebp
shr
ret
or
ljmp
test
sbb
outsb
xchg
push
popa
mov
lret
sub
jecxz
lret
pusha
stc
xor
push
stc
sbbb
dec
pop
and
sub
into
sub
cmp
clc
sbb
adc
sbb
lea
sti
aas
cs
dec
rcrl
clc
sbb
xor
cld
sahf
mov
fimull
push
sbb
gs
ss
mov
mov
adc
enter
push
lcall
shl
adc
mov
pop
imul
fwait
lds
pop
pop
mov
addr16
popa
fildll
jle
je
fstpt
and
jl
mov
bound
xor
or
jge
and
fwait
sbb
test
fldl
ljmp
push
xchg
jp
aas
imul
dec
and
push
repnz
push
or
xor
jae
xor
fadds
add
stos
add
gs
aam
imul
xor
gs
xor
cwtl
add
dec
lods
iret
mov
sub
jns
push
movsb
push
xchg
or
rcr
add
pop
pop
outsb
pushf
xchg
test
push
ret
add
mov
gs
mov
jp
add
mov
outsl
lock
das
cmc
stos
xchg
push
mov
test
je
popa
xchg
add
xchg
sub
loopne
mov
or
cmpsb
fwait
adc
xchg
xchg
repnz
stc
repz
push
pop
int3
repz
push
ja
adc
mov
mov
insl
and
icebp
mov
and
cmp
sbb
push
pop
mov
push
jae
adc
xor
loope
gs
inc
mov
lret
mov
dec
sbb
or
lcall
lds
leave
dec
adc
mov
mov
dec
xor
push
pop
jp
push
in
das
sub
cmp
out
or
jnp
and
shll
mov
mov
add
and
rcll
sahf
cli
mov
xor
jle
mov
insb
sub
mov
aam
into
inc
notl
sub
dec
sub
in
leave
lods
les
dec
push
icebp
and
mov
adc
jecxz
mov
cltd
cmp
sbb
out
pop
std
pop
stos
insl
mov
into
aad
lock
lds
or
or
lahf
ret
int3
jno
int
sbb
add
shrb
bswap
xchg
cli
je
in
push
pop
dec
test
adc
adc
mov
pop
inc
lcall
pop
les
lods
pop
pop
fldcw
mov
lret
jns
movsb
mov
pop
pop
loopne
enter
jb
or
jno
les
out
out
out
adc
push
cltd
cwtl
test
rcl
and
lods
gs
bound
lods
push
fisttpll
hlt
dec
cmc
push
adc
pusha
insl
popf
push
fmuls
mov
cmp
and
dec
pop
cs
mov
mov
pop
mov
jge
int
jg
mov
dec
es
lock
pop
push
sahf
stos
lcall
das
aad
push
push
shlb
pop
jns
ja
mov
cltd
adc
pop
mov
or
mov
ss
ds
mov
mov
inc
outsl
mov
das
mov
sub
data16
cmp
jnp
loopne
adc
xor
mov
mov
push
sbb
xchg
mov
imul
orb
dec
lret
pop
int3
jecxz
xor
pop
rcrb
mov
enter
mov
xchg
jb
stc
or
add
adc
xor
sbb
jno
or
je
mov
jl
mov
aam
jo
cwtl
sti
popf
adcl
dec
bound
sub
ret
sub
daa
dec
stos
stos
loope
addr16
sub
testb
dec
clc
jbe
into
iret
mul
pop
mov
push
push
mov
dec
out
or
jge
adc
jo
push
sub
push
in
int
mov
add
out
pop
or
fistl
pop
jp
sti
pop
gs
add
je
loopne
sahf
mov
pop
out
jp
rorl
scas
add
inc
cwtl
ret
push
aas
add
sub
rcrl
mov
inc
pusha
inc
adc
and
jno
dec
orl
bnd
out
pop
int3
lcall
sbb
sbb
adc
std
xor
add
xchg
ret
popa
dec
xchg
xchg
cmp
repz
movsl
rolb
jae
lahf
and
lds
imul
and
push
outsl
pop
adc
aam
mov
popf
shlb
inc
and
arpl
ja
enter
sub
in
jb
adc
mov
fs
lcall
enter
xchg
aad
cmp
fdivp
cs
pop
cmpsl
push
cmp
mov
mov
fimuls
roll
jp
mov
adc
movsl
mov
add
jl
lods
jle
mov
lahf
movsl
fdivrl
shr
xor
push
adcl
icebp
pop
dec
sub
fidivl
mov
adc
test
mov
adcb
xor
sbb
jb
dec
lods
pop
jae
jns
int
ret
rcrb
cmp
lds
mov
insb
sbb
lock
cmpsb
aaa
bound
lods
fistps
mov
iret
jbe
push
mov
xor
push
dec
inc
mov
pushl
xchg
push
cli
repnz
mov
mov
fst
cmp
lea
test
and
fnstenv
xchg
mov
mov
fs
fisttpll
daa
int3
xchg
push
mov
lret
call
cli
cli
scas
mov
mov
xchg
mov
add
pop
xor
in
ret
xor
outsl
sub
pop
or
mov
out
test
push
add
or
es
mov
lds
push
lret
popa
in
roll
pop
hlt
ds
xchg
pop
lock
add
inc
dec
jle
xchg
mov
mov
jmp
fmulp
daa
mov
mov
out
sub
jp
pop
cs
adc
sub
sti
cmp
mov
mov
andl
cmp
repz
inc
out
dec
dec
sub
outsl
popa
out
xchg
sbb
int
cmc
mov
inc
mov
sbb
inc
cld
jae
aam
xchg
mov
les
add
fisubrl
pop
das
mov
inc
gs
shl
out
stos
aas
cmp
or
into
out
jl
and
add
rorb
or
xchg
les
ljmp
loopne
xorl
mov
xor
cwtl
pop
xchg
and
xor
and
mov
imul
mov
mov
mov
movsl
push
inc
fcmovbe
into
adc
fistl
js
push
mov
fwait
sbb
dec
xchg
xchg
lds
dec
lods
add
daa
mov
push
stos
mov
inc
lret
ror
mov
sahf
add
imulb
mov
out
rolb
xor
lea
pop
aam
dec
inc
fcompl
push
fs
rclb
and
stos
mov
push
jns
loopne
cmc
cmc
mov
add
aad
push
aas
stc
or
inc
dec
mov
icebp
pop
jno
in
insb
testb
inc
or
fsubl
test
lcall
inc
stos
push
movsb
mov
jnp
subb
cmpsb
adc
pop
jae
mov
mov
mov
adc
outsl
pop
and
jns
sbb
or
into
cltd
call
or
pop
mov
dec
mov
ja
dec
add
mov
cmc
adc
jbe
pop
xchg
lds
sbb
adc
test
dec
pop
or
mov
sbb
jle
cmp
mov
into
bound
stos
iret
aas
dec
movsl
jno
fdivrs
data16
dec
inc
outsl
mov
aaa
mov
push
leave
mov
leave
inc
lcall
or
xchg
push
nop
mov
arpl
inc
aas
add
xchg
test
fsubrs
adc
lret
leave
insb
cwtl
into
and
popf
jae
mov
cmp
adcb
jmp
xchg
sbb
std
out
jo
dec
fwait
xor
add
jle
jmp
fwait
cs
movsl
jecxz
and
jne
push
xor
mov
jno
lds
test
mov
dec
xchg
jnp
jns
pop
clc
fldcw
iret
mov
loop
inc
jmp
movsl
mov
and
pop
test
sub
mov
lret
ficoms
xchg
shl
ss
mov
imul
enter
push
cmp
aaa
and
test
fbld
xor
bound
inc
mov
mov
xchg
mov
ret
or
sbb
mov
xchg
pop
out
pop
inc
imul
mov
lcall
in
jecxz
rolb
ret
push
fnstenv
adc
imul
gs
std
xchg
es
clc
or
and
notb
dec
inc
mov
jo
test
repnz
inc
fcoms
mov
and
iret
test
loopne
lcall
inc
jg
rcll
orl
and
adc
js
mov
mov
cld
or
add
xor
in
inc
inc
push
dec
fnstsw
jbe
nop
add
sbb
ljmp
ret
mov
sbbb
addr16
inc
jp
and
iret
xchg
push
in
or
ss
push
je
or
and
cmpsl
fs
jge
cmp
in
test
and
xchg
aad
mov
lea
xchg
lds
inc
push
pop
mov
scas
repnz
xchg
inc
outsb
sub
fistl
subb
ss
cmp
dec
dec
xchg
out
pop
movsl
jbe
repz
mov
or
fmull
pop
push
dec
aad
mov
in
out
mov
scas
in
in
adc
call
mov
pop
cmpb
out
inc
dec
jns
roll
pop
mov
aaa
aad
xlat
rcrl
dec
mov
push
hlt
jo
cmp
inc
jne
mov
fistl
shlb
orl
lock
add
mov
aam
or
xor
rcrl
push
js
pop
pusha
lock
inc
sbb
push
xchg
sbb
cmp
sub
xchg
mov
jbe
sti
stos
test
push
out
dec
sbb
mov
orl
ret
or
pusha
mov
jns
dec
adc
dec
adc
push
sub
sbb
push
sub
rcrl
mov
xor
dec
xor
imul
int
xchg
std
mov
fwait
daa
and
int3
adc
sbb
insb
push
outsl
mov
adc
mov
xchg
adc
xor
les
xor
xor
cmp
mov
iret
add
mov
push
dec
and
sbb
pushf
imul
sbb
int
icebp
sbb
add
cmp
aam
pop
clc
test
dec
inc
mov
adc
inc
hlt
das
pop
inc
sub
out
shrl
xchg
lea
dec
pop
int3
inc
je
mov
fiaddl
xchg
or
inc
or
fsubrl
stos
and
out
rorl
mov
shlb
mov
jg
jmp
dec
mov
dec
mov
adc
cmp
adc
call
adc
dec
jo
out
cmp
cmc
cltd
xor
sub
addr16
sbbl
mov
inc
mov
dec
sub
mov
dec
test
or
movsb
daa
rcrb
repnz
or
adc
sub
or
roll
pop
jo
scas
loope
fwait
push
fs
fcom
lods
or
push
out
push
mov
inc
jp
dec
jl
or
fdivrs
fistps
js
insb
cmp
loop
in
xor
inc
icebp
lods
imul
sbb
aad
leave
repnz
jecxz
push
lds
inc
adc
cwtl
inc
adc
jp
jno
movsl
cmp
shlb
sarl
cltd
mov
loop
jmp
cwtl
data16
cmp
test
cmp
xor
jnp
push
lds
jecxz
fstpl
pop
mov
add
iret
loopne
lahf
pop
jae
sbb
pop
mov
lds
sbb
fistpl
xor
push
inc
adc
aam
cmp
or
sub
or
hlt
sub
cmp
lods
xchg
jmp
popf
add
bound
add
jnp
push
fs
push
scas
daa
bound
movsl
inc
lods
repnz
and
sub
loopne
cmp
jp
cltd
cwtl
cmp
fstpl
test
scas
mov
push
out
subb
aas
xor
mov
fcomps
and
cmp
cli
mov
jecxz
scas
cmc
mov
mov
cld
push
mov
es
out
dec
inc
in
add
jle
mov
adc
clc
fisttpl
pop
int3
mov
xchg
dec
inc
cs
subl
pop
rolb
insl
dec
daa
inc
lret
and
lods
rcl
mov
test
fldenv
cmpb
dec
aas
les
adc
repnz
mov
add
incb
daa
mov
sbb
xchg
pop
xor
sub
inc
cli
push
xchg
sbb
int3
sub
sbb
adcb
xchg
loopne
mov
pop
shl
push
push
rcl
xor
mov
inc
or
pop
mov
mov
mov
pusha
scas
xchg
dec
mov
and
jo
out
adc
cmc
push
shll
add
cmp
shrl
push
cltd
outsl
xor
push
cmp
pause
mov
sbb
sub
push
scas
mov
xlat
mov
ror
xor
mov
in
mov
push
call
adc
mov
push
pop
data16
loop
int
inc
in
xor
xchg
call
jbe
stos
or
adc
push
inc
mov
in
cltd
decb
push
mov
mov
rcl
mov
ret
dec
pop
pop
jg
mov
jo
lock
and
call
add
mov
popa
mov
mov
jmp
and
iret
pop
lock
pusha
cmp
adc
jmp
jg
push
jne
pop
mov
insl
pusha
bound
xchg
in
sub
lret
mul
lds
jge
ss
push
jle
call
xor
adc
jge
or
sbb
lahf
aam
pushf
lds
adc
sbb
mov
mov
sub
adc
movsl
cs
mov
int3
add
cld
jge
cmp
and
cli
popa
hlt
xchg
cmp
inc
orl
fwait
xchg
rcrb
or
rorl
pop
adc
int
leave
aad
lods
popa
push
mov
push
in
pop
dec
mov
je
add
jbe
loopnew
cs
add
addr16
xor
pop
pusha
sub
pushf
fbld
clc
xchg
adc
xlat
mov
xor
or
mov
push
jg
fidivl
push
dec
repz
cmpsb
push
stos
or
and
pop
add
fisttpll
dec
sbb
pop
sub
mov
inc
out
dec
hlt
pusha
sbb
popa
nop
aam
jo
mov
jns
pusha
and
mov
mov
nop
cmp
xchg
out
and
int
push
jne
test
les
cmp
aaa
bound
sub
sbb
sub
icebp
bound
adc
imul
data16
scas
mov
fmull
sub
push
fs
ror
fidivl
pusha
loope
into
and
pop
sub
or
repz
popf
in
scas
mov
add
dec
cltd
cmpsl
inc
testb
mov
movsb
cmp
dec
xchg
sbb
and
leave
mov
das
inc
mov
adc
lea
adc
fidivrs
mov
push
cbtw
jg
sti
xchg
pop
pop
popa
adc
popa
gs
mov
xchg
adc
sbb
call
inc
adc
jmp
adc
add
sbb
jg
mov
mov
dec
adc
je
stos
cmp
pop
subb
pop
dec
jns
or
int3
or
mov
mov
bound
fnstcw
movsb
inc
xchg
jns
test
daa
jno
pop
mov
adcb
insl
dec
test
fwait
xor
add
iret
ja
xchg
xchg
sub
fwait
in
fnstenv
push
inc
cld
pop
sbb
jl
mov
scas
popf
xor
faddl
cld
sbbl
and
lahf
mov
cwtl
push
jnp
push
adc
adc
or
in
lods
addr16
int
ret
loope
das
or
lods
add
repnz
jne
cmc
jno
pop
dec
xchg
pop
fsubs
mov
jle
cmp
adc
faddl
jecxz
fmul
push
stos
mov
notb
ret
iret
js
test
dec
adc
sub
fistpll
push
imul
push
cs
dec
inc
sbb
xor
sub
cmp
lods
aas
rorl
bound
loop
lock
push
push
push
mov
and
into
in
cmpsb
leave
pop
sbb
inc
cltd
mov
push
sahf
fwait
and
push
fsub
es
push
sbb
sbb
clc
lds
xor
ja
roll
mov
int
mov
test
cwtl
das
xchg
xchg
xor
jle
sub
mov
jnp
add
inc
pop
push
jmp
cmpsl
xor
pop
lods
push
imul
imul
shrl
sub
xlat
aaa
mov
adc
fs
and
frstor
dec
push
nop
xchg
pop
dec
pop
pop
lock
into
push
aas
outsb
dec
stos
out
stos
loope
add
bound
insb
inc
dec
cmpsb
and
and
in
jl
scas
inc
jle
sbb
adc
pop
adc
outsl
and
inc
je
add
sbb
lahf
or
and
mov
or
ficompl
in
stos
cmpsl
push
mov
push
lcall
cli
xor
ss
cmp
lods
pop
sti
push
jle
mov
push
mov
or
dec
jae
dec
mov
dec
ss
lods
push
xchg
in
mov
aad
xchg
add
push
call
push
fdivrs
pop
cwtl
inc
jns
adc
push
lret
jmp
push
jg
add
std
js
inc
dec
mov
ja
mov
xchg
call
and
jae
mov
push
xchg
jnp
mov
shrl
sbb
data16
add
xchg
xchg
decl
mov
fsubs
sub
sbb
prefetcht0
sarb
jmp
icebp
rclb
iret
sub
mov
popf
stc
aad
add
sahf
imul
adc
jle
and
or
fidivl
je
subl
out
lret
push
mov
dec
test
sbb
daa
push
add
xchg
cmp
jns
push
shrb
xchg
repz
jbe
insb
sub
aaa
es
xchg
outsl
jo
xchg
rcrl
rol
cmpb
test
xor
cmpsb
sub
or
ret
add
inc
push
push
loopne
xor
sti
xchg
xlat
enter
mov
cmpsl
xor
fistpll
fiaddl
and
lret
mov
pop
lods
xchg
mov
hlt
aaa
jle
arpl
add
push
movsb
out
xlat
enter
lods
mov
mov
cmp
cs
mov
subb
repnz
jns
in
mov
mov
mov
icebp
dec
in
notb
and
xchg
add
fidivs
jbe
jmp
fs
movsl
add
inc
sahf
cmp
ret
adc
addr16
in
in
pop
jne
fs
adc
cmp
testl
iret
dec
cmp
push
sbb
out
cltd
das
push
fmull
lods
paddsw
inc
xorl
pop
les
add
stc
hlt
sti
popa
push
fs
mov
mov
sub
aad
mov
mov
dec
repnz
cmp
xor
jno
sarl
add
inc
ljmp
pushf
inc
mov
clc
sbb
jae
mov
xlat
push
sbb
gs
jnp
scas
or
test
movsb
cld
pop
sub
xchg
loop
jnp
in
dec
scas
sahf
mov
sbb
fs
in
xlat
inc
fldt
pushf
xchg
dec
add
ss
jb
mov
or
mov
inc
pop
in
test
pop
fwait
ret
mov
hlt
add
mov
cli
dec
mov
push
cwtl
pusha
iret
je
enter
dec
and
test
xor
insl
inc
push
xchg
sbb
push
fidivrs
adc
das
cmp
outsl
xchg
sub
popa
mov
mov
push
pop
inc
es
pop
sahf
adc
jbe
jle
jns
jmp
cmp
mov
sbb
xchg
cmp
inc
nop
sahf
std
cmpsb
inc
imul
pop
mov
lcall
int
data16
add
mov
addr16
dec
push
rorl
adc
fwait
dec
dec
cmp
test
lret
mov
add
sub
fs
and
xchg
mov
mov
lahf
test
sub
push
xchg
xor
popl
jnp
lea
mov
ja
pop
cli
mov
std
adc
sub
push
cmpb
shrl
pop
sbb
jno
iret
and
imul
lods
repz
pop
jg
les
add
mov
pop
std
cmp
pop
lea
rcrl
sbb
xchg
sub
pushf
adc
enter
fwait
subl
imul
xchg
fbld
add
ja
mov
sub
clc
scas
shl
mov
aaa
jmp
xchg
mov
stos
mov
jl
pop
or
rcr
adc
cmp
idivl
pop
jecxz
shlb
in
mov
loope
add
packssdw
add
bound
or
inc
jae
push
in
push
popa
jae
imul
xor
aaa
js
shl
jnp
adc
add
pop
les
jecxz
fbld
shlb
xor
xchg
icebp
arpl
jp
in
mov
jno
pop
lahf
mov
and
sti
or
sarl
icebp
int3
sub
jne
scas
sub
push
inc
loop
cmc
aaa
lret
adcb
sub
enter
fdivl
push
movsb
mov
pop
fs
lret
addl
popa
hlt
inc
cld
dec
fwait
inc
mov
imul
push
shl
out
es
cmovnp
push
in
push
and
add
push
and
int
lds
sub
add
pop
jb
cli
inc
nop
addl
and
out
pop
fld
test
fs
mov
or
or
sti
jns
mov
jb
mov
sub
ss
sub
mov
imul
ret
sbb
lret
push
push
sub
out
jg
scas
jg
jg
adc
push
out
push
test
push
inc
jge
lea
cs
mov
and
mov
mov
lods
rolb
flds
pop
or
aam
mov
filds
lret
pushf
fcos
pop
cmpsl
fsubl
scas
scas
mov
hlt
jno
fmul
sbb
mov
shll
lods
ja
mov
sbb
inc
jg
outsb
jmp
inc
pop
xchg
xchg
loop
out
push
loopne
cmpsb
ss
add
and
add
lret
xor
inc
push
dec
push
pushf
jo
dec
sub
sbb
pop
rorb
cmp
faddp
leave
pop
xchg
in
in
fildll
addr16
or
push
stos
cmpl
loope
or
out
mov
xchg
xchg
fwait
add
jae
ja
pop
movsl
mov
mov
cmp
insl
dec
cltd
jg
pop
mov
sbbb
dec
and
in
fdivrs
clc
clc
or
mov
inc
mull
or
pop
aam
fadds
mov
stos
mov
and
test
pop
push
clc
scas
lods
pop
aad
insl
adc
outsb
mov
sub
jmp
movsb
outsl
mov
aaa
mov
sti
ret
sub
push
and
popa
inc
jge
jbe
xor
and
or
scas
ds
repz
inc
adc
stos
out
fists
mov
scas
xchg
lcall
cmp
fsub
push
pop
mov
cmp
ss
mov
rclb
push
lea
mov
addr16
loop
fldcw
dec
in
popf
push
adc
inc
arpl
sub
mov
aam
or
test
or
lock
adc
push
xor
or
xor
fwait
inc
pop
inc
or
jle
mov
adc
cmp
cltd
or
pop
fldcw
sbb
xchg
mov
test
push
testb
pop
push
jle
outsb
cmp
loop
push
fcoml
cmp
or
shl
pop
push
addr16
mov
and
les
sbb
inc
or
psrlq
cmp
ror
leave
dec
in
frstor
lret
pop
lods
repz
pop
push
out
cmp
xchg
sbb
notl
sbb
mov
daa
add
sub
les
adc
cmp
xchg
mov
test
fst
lea
push
xor
jbe
sub
mov
ss
flds
or
das
or
add
and
mov
sbb
popf
sar
jle
sbb
aam
insl
inc
jns
push
nop
xor
vphadddq
mov
push
push
negl
xor
lret
lock
xlat
repnz
fsubrs
mov
sub
int
in
dec
icebp
mov
mov
dec
sub
icebp
mov
xor
cmp
lock
sbb
ret
add
gs
ret
and
add
sbb
js
push
push
add
cltd
test
or
or
leave
mov
fsubl
inc
test
stos
cmp
pop
mov
lods
sub
jo
xchg
nop
es
sahf
mov
mov
fcomip
je
sub
out
push
mov
or
add
adc
fld
dec
icebp
cmpsb
aas
fisttpll
lret
jle
dec
cmp
int
ficompl
pusha
or
dec
ficoms
leave
push
push
ljmp
lods
push
lret
cmp
lds
jmp
jmp
dec
stos
lea
jbe
dec
lret
outsl
mov
fimull
push
popf
dec
out
ret
sub
test
sti
imul
mov
test
testb
in
and
lahf
mov
stc
xor
pop
lods
adc
loope
sbb
mov
fldpi
add
ja
out
or
adc
ret
out
imul
jne
cmp
int
pop
dec
cmp
jmp
mov
jb
lahf
out
cmpsl
mov
mov
mov
dec
ja
call
mov
mov
rol
iret
dec
xchg
xor
xchg
mov
pop
daa
inc
lea
aaa
or
mov
add
jno
rclb
lods
rcrb
lds
popa
xlat
lret
std
scas
cmp
jae
lock
gs
xor
cmp
ret
scas
fstpl
shr
inc
lock
inc
test
sub
lcall
xchg
lods
addl
pop
gs
and
inc
jmp
addr16
out
in
ds
push
mov
mov
das
and
lret
lds
sahf
stc
mov
into
fs
cld
pop
dec
mov
mov
and
arpl
push
sub
mov
bound
rcrb
push
in
aaa
pop
jge
cmc
jmp
inc
imul
push
std
push
lret
jge
or
mov
popf
or
in
jne
sub
and
sbb
dec
mov
mov
mov
les
dec
jae,pt
ret
add
imul
notl
aaa
cmp
sbb
testl
or
popf
or
lcall
test
dec
incl
jle
loop
in
in
inc
add
gs
movsb
stc
das
or
xchg
jecxz
xor
or
out
mov
lods
loopne
sbb
dec
pop
cltd
xchg
adc
inc
aas
sbbl
outsb
cmp
mov
out
dec
int
scas
mov
and
inc
pop
xchg
mov
dec
sub
or
pushf
mov
popf
mov
outsl
push
dec
sub
stos
movsl
or
in
fldl
xchg
popf
imull
xlat
add
sbb
popa
call
add
pop
cmp
icebp
pop
sbb
sti
dec
add
inc
and
pop
fldt
mov
mov
cmpsl
test
xor
xor
test
lcall
mov
jle
cmp
std
loop
dec
lcall
les
pop
test
fwait
enter
mov
jae
adc
mov
sub
addl
add
in
dec
fmul
mov
cmp
in
insl
sbb
xchg
sarb
push
mov
shlb
mov
jb
sub
in
pop
or
in
std
xor
dec
pop
adc
inc
push
xchg
daa
jnp
pop
jb
mov
push
lret
gs
push
xor
push
fsubs
inc
lods
cli
push
popa
push
pop
fists
pushf
cmpsb
xchg
mov
push
mov
or
dec
popa
cmp
adc
xchg
jge
mov
push
inc
shrb
icebp
loopne
jbe
les
push
pop
pop
rclb
rol
cmpsb
pushf
std
pop
jmp
mov
fnstenv
ret
aaa
mov
loopne
inc
lret
out
rclb
mov
scas
icebp
out
or
mov
out
shrb
inc
cmp
jns
pop
xchg
testl
inc
rcll
cltd
mov
pop
xor
ret
ss
ja
sbb
inc
xchg
ljmp
mov
xchg
mov
add
clc
mov
jle
mov
lods
bound
add
cli
adc
mov
push
cmp
loop
adc
lods
or
lods
push
stos
xchg
movsl
or
inc
mov
or
sbb
and
in
mov
pop
out
jle
imul
push
fdiv
inc
call
xchg
jle
fnstenv
int
mov
mov
lcall
cmpl
icebp
sub
add
je
out
ds
jl
cld
xor
inc
push
add
xor
jne
sub
aad
and
xor
cmp
inc
outsb
lock
sahf
mov
shlb
push
jp
cmc
pop
mov
fs
inc
cwtl
call
repz
sbbl
lods
lret
inc
xlat
hlt
inc
sbb
cwtl
add
pop
add
cwtl
scas
cltd
shll
and
jp
fs
jg
push
jl
lret
sub
lret
jge
and
cmp
mov
scas
aad
loop
sbb
inc
pop
rcr
mov
push
inc
shrl
cld
mov
push
imul
mov
adc
push
jmp
in
jb
mov
push
scas
fstp
mov
rcrl
ret
dec
je
mov
out
adc
or
mov
or
cli
lds
fldcw
rolb
cltd
mov
add
cli
sub
cwtl
or
sbb
in
sbb
lods
cli
mov
sub
mov
inc
xchg
adc
mov
inc
pop
or
xor
stos
bound
call
mov
ljmp
mov
jl
lret
push
sbb
jl
je
cmpsl
push
inc
inc
jl
scas
sbb
aad
add
mov
ljmp
add
fsubrs
adc
in
out
mov
mov
in
fsubs
add
cs
faddl
lret
sbb
pusha
cmp
aaa
into
cmc
xor
pop
out
outsl
push
inc
nop
dec
ljmp
push
pop
pop
add
rcr
insb
pop
lcall
xchg
xchg
jo
jge
mov
push
call
and
cmp
fstpl
xlat
mov
scas
jo
loopne
inc
fwait
sti
pop
mov
dec
jns
jnp
pusha
mov
cmpb
push
fucomp
roll
push
pop
cwtl
cwtl
add
sbb
mov
cmpsb
xchg
lahf
pop
add
cmp
jo
and
std
mov
out
stos
out
outsb
out
dec
xchg
pop
sbbb
test
push
roll
rcrl
cld
shlb
cmp
cmpsl
ljmp
rcrl
rcl
iret
imul
lods
add
nop
mov
insl
jg
push
shl
xchg
mov
mov
popa
dec
cmp
dec
lahf
imul
fcomi
cmp
popf
xor
scas
dec
xor
imul
pop
lret
sarl
mov
shrl
sbb
add
lcall
xor
sti
mov
cmc
stc
repnz
xchg
and
xchg
xchg
unpckhps
not
cmp
mov
imul
cli
xorb
mov
jmp
jg
add
sti
cmp
adc
es
jg
in
pop
cmp
pop
leave
insl
mov
lcall
call
pop
in
or
icebp
fs
mov
push
jg
and
iret
jmp
and
inc
rorb
mov
jg
add
mov
xor
cltd
mov
add
add
jno
cwtl
stc
call
mov
loop
inc
cwtl
imul
xor
das
int3
stc
mov
outsl
aad
adc
aam
mov
jno
mov
mov
enter
stos
sahf
fwait
xor
pop
push
xchg
insl
int3
xlat
mov
push
int3
mov
stc
adc
cmp
ret
icebp
xor
mov
cmp
shll
mov
mov
aad
mov
add
scas
in
out
rcrb
push
pop
inc
xor
mov
es
test
xor
sub
rcll
jbe
push
bound
mov
mov
rorl
sub
sarl
sub
addr16
cs
mov
inc
clc
dec
lcall
jecxz
push
adc
clc
cli
cmp
mov
sub
sub
ja
call
or
fisttpl
dec
int
imulb
mov
insb
arpl
jno
popf
dec
scas
ds
ljmp
lcall
rcrb
arpl
push
cmp
mov
sub
lods
jns
cwtl
lahf
clc
ret
cmp
into
mov
test
hlt
pop
out
or
imul
add
insb
test
add
sbb
pop
inc
in
ret
rcr
inc
ret
fdivs
loope
mov
into
ret
adc
add
scas
negb
mov
sbb
jle
adc
popf
or
scas
scas
fidivs
mov
arpl
pusha
pop
cmpl
xchg
sarb
mov
pop
bound
notb
jp
xor
xchg
js
leave
aad
mov
pcmpgtb
sub
xor
sahf
adcb
cmp
jg
cmpsl
gs
sub
mov
jae
push
adc
push
mov
flds
mov
sbb
push
shrb
push
xchg
imul
inc
mov
jnp
jle
enter
push
xor
cs
iret
pop
lea
sub
js
aam
push
out
imulb
or
pmaxsw
fldt
sub
dec
mov
add
push
add
rclb
mov
subb
fmull
push
cld
or
sub
sub
xchg
push
std
jl
cmpsl
into
xchg
xchg
dec
cwtl
fisttpll
and
sub
stos
shll
lds
inc
sub
cmpsb
testl
pop
dec
or
jb
sub
fsts
mov
xchg
fsubr
xor
movsb
movsl
outsl
mov
test
es
lahf
sbbl
push
pop
push
xor
push
aaa
inc
pushf
and
dec
xor
test
rcrb
or
xchg
fistpll
divl
dec
aad
cmp
mov
jle
or
scas
mov
mov
xchg
xor
out
jmp
loop
roll
aad
in
xchg
outsb
mov
clc
daa
inc
sub
decb
push
pop
fdivr
xor
cmpsb
jg
out
cltd
mov
jnp
pop
mov
xrelease
dec
lahf
sub
jg
fs
or
pop
inc
mov
dec
out
xchg
inc
ret
push
mov
flds
popf
repnz
sub
imul
sbb
aas
and
xor
mov
and
xchg
xor
div
mov
imul
jl
movsl
bound
loopne
adc
imul
mov
add
pop
or
cmpsb
push
leave
mov
sub
xor
jp
lds
lea
sbb
jl
sbb
cmp
push
cltd
test
arpl
lret
jbe
push
pop
and
xor
loopne
imul
sbb
cli
popa
inc
adc
xchg
xchg
fnstcw
stos
push
lods
outsl
repz
mov
je
dec
pop
add
mov
mov
pusha
arpl
inc
jno
xchg
leave
lds
cltd
insl
outsb
jns
mov
punpcklbw
add
xchg
sarl
push
jecxz
pop
cmpsb
xor
mov
loopne
cs
xchg
mov
pop
loopne
jae
xor
fs
popa
add
mov
xchg
xchg
add
adc
cmp
mov
lahf
stos
dec
cmp
pop
or
les
pop
in
inc
lret
jo
jp
leave
and
sbb
inc
ljmp
or
dec
divl
data16
push
arpl
leave
movsl
xor
jne
arpl
pop
mov
jo
insb
int
push
cli
xchg
adc
mov
push
pop
rolb
mov
jo
mov
ror
pop
xor
xchg
mov
ljmp
sarb
push
jl
dec
mov
call
pop
xchg
iret
int
dec
xor
mov
jbe
push
lods
pushf
je
adc
int3
adc
sub
dec
call
out
inc
jle
inc
adc
ret
aaa
inc
mov
test
ret
fdivl
jge
stos
xchg
jecxz
mov
lahf
or
push
shll
dec
dec
jge
stos
jne
jg
jmp
xchg
add
sbb
es
pusha
mov
xchg
xchg
movsl
fldl
test
push
xchg
mov
xchg
repnz
inc
pop
cli
cmpsb
out
mov
movsb
push
mov
scas
test
rcrl
sbb
cmpsb
jge
fs
cs
adc
inc
mov
daa
or
pop
mov
mov
pop
mov
testb
loope
lea
mov
push
in
jo
sar
dec
pop
fwait
inc
and
sbb
mov
imulb
xchg
and
inc
subb
inc
xchg
mov
movsl
fstps
int
cmc
pop
scas
jg
int
ds
xlat
and
jne
sub
cmpb
pop
cmc
pushf
inc
pop
ds
rolb
mov
lret
rorl
jnp
push
push
xchg
divb
imul
in
mov
jo
and
mov
leave
mov
enter
ss
les
test
enter
lcall
outsl
or
leave
popa
subl
loop
pop
push
sahf
jge
mov
push
mov
rorb
test
out
imul
pop
sarb
inc
insb
push
andl
dec
lods
sub
lahf
fsub
inc
daa
or
fstpt
jo
stos
and
das
fs
outsb
fsubs
fstpl
lods
ret
cmp
ret
sbb
jg
inc
daa
mov
psllq
ja
ljmp
mov
push
loopne
xchg
insl
xor
pop
and
bound
ja
and
xchg
dec
fs
dec
loope
xchg
or
mov
or
dec
out
clc
sbb
mov
cli
testb
nop
decl
repz
cltd
jno
sub
sahf
leave
inc
sub
in
nop
adc
jo
leave
scas
mov
jns
mov
pop
loop
adc
adc
ret
enter
pop
cli
loop
test
xchg
or
push
mov
push
mov
mov
notl
push
adc
repnz
jb
adc
xchg
stos
loop
and
in
cmp
ss
jae
sub
sbb
divb
loopne
dec
pop
into
xchg
mov
es
inc
xor
mov
add
out
sbbl
shlb
fsubp
iret
js
ficomps
and
push
sbb
imul
cwtl
rorb
jnp
mov
xor
xor
pop
and
sub
out
ret
cwtl
mov
nop
sbb
mov
mov
xor
push
imul
cmp
lods
out
xor
fstps
movsl
fs
ret
mov
mov
inc
mov
aas
add
scas
jge
mov
dec
lret
outsl
or
mov
push
add
in
das
popl
push
lahf
shll
pushf
pop
testl
loop
int
bound
and
mov
mov
xchg
jp
xchg
xchg
lds
notl
daa
enter
or
lock
loopne
insl
mov
leave
push
push
mov
movsb
insb
sbb
shll
push
inc
or
cmpsl
mov
adc
into
ja
adc
andb
fistpl
mov
imul
push
stc
movsb
mov
ret
and
jmp
call
cwtl
and
pop
push
lcall
xchg
les
push
mov
cmp
lds
jecxz
sub
add
jae
xor
clc
outsl
dec
cmp
lds
les
popa
mov
loop
ljmp
xor
call
push
push
loopne
lods
mov
xor
mov
rol
in
jb
or
popa
xor
and
sub
movsb
cmp
push
or
sbb
sub
push
dec
mov
sahf
js
push
pushf
push
faddl
aaa
loop
cs
pop
sbb
sahf
jnp
cwtl
xor
mov
and
aad
jns
popa
mov
imul
sti
dec
sbb
add
call
lds
cmp
fsubrs
into
sub
mov
jmp
sbb
jmp
push
movsl
sbb
fbstp
push
xor
mov
pop
pop
cltd
push
daa
sbb
mov
cwtl
mov
adc
daa
mov
or
pop
pop
push
add
das
adc
dec
adc
in
das
lods
pshufw
cmp
shll
push
sub
sahf
pop
jl
or
aad
neg
fmuls
fstps
xchg
jne
inc
dec
fidivs
mov
call
cli
outsb
es
sub
cli
adc
push
sub
mov
lea
ja
dec
lods
pop
ds
xchg
aas
adc
pop
in
mov
cmp
jae
arpl
jmp
sahf
xchg
mov
outsl
out
lret
shll
out
aam
mov
es
bound
rol
sahf
lret
pop
lods
sub
jbe
ss
adc
mov
sub
mov
inc
jl
mov
mov
xor
mov
pop
push
in
imul
push
popf
clc
pop
sub
xor
mov
cmpsb
pop
cmp
mov
mov
sub
cmc
sbb
dec
xchg
popf
arpl
cmovp
repz
int
mov
sub
addr16
daa
jge
sub
fldenv
sbbl
mov
xchg
and
adc
inc
or
jecxz
icebp
lcall
sub
aas
adc
inc
sbb
xchg
icebp
sub
dec
aaa
lret
lds
je
cwtl
insl
xor
and
push
sbb
pop
js
lret
push
lret
pusha
imul
loope
sub
sarl
push
and
in
test
mov
mov
mov
aas
leave
sub
mov
pop
inc
xchg
bound
aaa
leave
daa
pop
pop
add
dec
inc
xchg
ja
xchg
cmp
and
jg
xchg
inc
ja
fstps
push
sbb
insb
jno
push
shrl
push
rcrb
mov
xchg
jp
xchg
inc
aam
inc
mulb
push
adc
push
outsl
lret
imul
cmp
ffreep
sahf
stc
rcrl
pop
jle
jb
pop
das
xor
mov
cmpsl
push
xor
fstps
add
andl
jp
lods
add
addr16
sub
jns
lock
add
cwtl
dec
bound
xlat
icebp
jl
pop
test
js
mov
jmp
addr16
xchg
rclb
dec
adc
pop
cmp
int3
cmpb
call
outsb
xor
jns
sbb
inc
cmp
lret
sarb
jp
bound
stos
or
sbb
rcll
ret
push
outsl
sahf
sub
ds
jle
and
mov
pop
test
gs
pushaw
scas
xor
hlt
mov
fadds
xor
iret
mov
into
xor
aad
sub
push
out
mov
inc
jnp
notb
push
and
int3
andb
adc
pop
mov
shll
add
addr16
test
lea
scas
std
sbb
clc
sub
fwait
jecxz
mov
das
pop
pop
adc
and
dec
addr16
out
pop
outsb
cmp
pop
out
pop
lock
adcb
in
lods
mov
adc
sub
bound
mov
out
push
jg
adc
bound
outsl
pop
mov
xlat
pop
addl
mov
aad
dec
int
mov
mov
test
push
dec
inc
inc
mov
and
jecxz
dec
mov
and
mov
pusha
cli
lods
xchg
fiaddl
dec
add
xor
sti
lret
and
in
aad
mov
mov
mov
xor
push
sbb
test
adc
push
pop
jecxz
lods
push
loopne
lret
xor
cwtl
cltd
or
sbb
dec
mov
push
dec
xor
mov
stc
jmp
dec
mov
mov
gs
add
inc
nop
out
aas
lcall
push
add
mov
pop
cmp
cmp
inc
mov
stos
pop
sub
aad
std
mov
icebp
leave
dec
add
mov
repnz
inc
cmpsl
iret
or
inc
insb
adcb
aas
or
enter
imul
or
insb
mov
or
cwtl
adc
sbb
cmp
sbb
movsb
mov
test
mov
xchg
add
jbe
cmp
xchg
sub
cmpsl
lea
pop
shll
stos
add
or
lock
and
arpl
scas
xor
pop
and
push
jb
jp
and
icebp
movsl
scas
xchg
dec
sub
dec
out
insl
mov
jecxz
data16
test
testb
addb
and
push
xchg
sbb
lahf
lea
fnstenv
pop
mov
sahf
jle
mov
xor
loope
and
je
mov
repnz
test
rolb
or
stos
jo
add
bound
ljmp
mov
push
xor
mov
mov
cwtl
push
ljmp
cmpsl
or
mov
inc
nop
ficomps
scas
fnsave
xlat
lods
pop
adc
cmp
dec
mov
cmpsb
push
add
adc
mov
frndint
pushf
inc
push
jp
dec
jae
mov
lret
sbb
call
cmp
xchg
dec
es
mov
popf
je
inc
inc
gs
inc
aad
or
sarb
mov
and
xor
aas
mov
xchg
lret
mov
jmp
xchg
aas
les
ja
push
ljmp
daa
cmpsb
in
out
imul
sub
out
sub
mov
fcompl
add
data16
pop
xor
and
ret
adc
mov
and
repz
jmp
mov
sub
pop
jbe
mov
out
test
fwait
sti
in
add
add
divb
stos
jmp
sub
pop
cli
adc
sub
sub
push
and
cmc
adc
js
xchg
sbb
sub
push
sbb
ljmp
and
insb
fstp
xor
or
push
mov
inc
stos
mov
subl
mov
pop
mov
lret
ljmp
xchg
inc
inc
sti
pop
sub
mov
mov
sbb
imul
lods
mov
or
jbe
push
pop
mov
mov
xchg
jmp
push
pop
xchg
data16
cs
jns
push
mov
or
jmp
loop
enter
adc
xor
dec
pop
jp
cmp
push
incl
fdivl
push
xchg
scas
xor
repz
mov
xorb
into
or
insl
in
or
lcall
sti
mov
repz
rolb
and
and
xchg
mov
popf
push
cmp
pop
push
xor
pop
pusha
cld
inc
ds
push
dec
rcr
lcall
int3
pop
mov
xor
push
aad
adc
dec
jg
fstpl
int3
mov
mov
dec
mov
pop
push
fincstp
pop
in
inc
out
fiaddl
ror
cmp
mov
and
xchg
jp
mov
jp
loope
mov
cmp
out
aaa
incb
pop
cli
mov
push
xor
inc
mov
jno
mov
call
xchg
fs
out
xchg
xor
mov
lret
or
stc
xor
mov
push
push
stos
add
movsl
pop
movsb
fisubrs
xchg
pop
outsb
push
mov
call
or
add
out
push
aas
jno
sbb
mov
shlb
or
pop
adc
cld
jo
and
xchg
fsubl
mov
testb
xchg
mov
cmp
lcall
jns
xchg
cmpsl
shrb
sbb
insb
shl
xchg
cld
pop
stos
push
jle
push
jl
fwait
aas
cwtl
add
lds
arpl
pop
adc
adc
scas
mov
test
ljmp
fsts
xor
popf
fs
mov
loopne
loop
inc
cltd
jno
hlt
shll
das
jae
out
mov
mov
stos
lds
xchg
shl
psraw
xchg
push
xchg
push
add
dec
cmp
cltd
mov
sbbb
in
stc
and
mov
and
sbb
fcmovnu
aad
jae,pn
stos
out
cwtl
cmpsb
jle
mov
stos
inc
or
test
jbe
push
lds
adc
add
fs
jge
movsb
and
stos
mov
hlt
loop
rcrb
fldenv
cmp
push
cmp
testb
sub
aaa
pop
shr
mov
sub
mov
mov
mov
fwait
in
ja
out
jp
adc
or
mov
lret
jl
adc
mov
test
int
mov
sbb
insb
out
add
jnp
lcall
sbb
jns
pop
enter
sti
add
xchg
push
mov
ss
sub
mov
iret
jp
mov
sub
and
mov
cld
stos
inc
inc
inc
aad
icebp
fsubl
cld
mov
das
push
push
mov
xchg
mov
jo
call
std
call
mov
inc
test
jge
lret
xchg
jne
sub
xchg
je
and
sub
push
fsubrp
xchg
push
int3
jb
xor
ss
xchg
xchg
xchg
jb
jo
or
sti
mov
push
aad
lock
dec
das
xor
xchg
cmpsb
shlb
xchg
leave
jg
inc
and
lret
ds
stc
sub
inc
movsl
jle
mov
xchg
lahf
mov
push
mov
stc
jb
mov
add
xchg
mov
fstp
cs
and
push
sarb
es
ret
and
cli
adc
enter
cwtl
gs
push
and
mov
sub
xchg
add
mov
test
sbb
add
inc
jns
leave
sbb
jnp
ficoms
adc
mov
bound
std
mov
mov
sahf
xchg
cmp
mov
popw
filds
cmp
dec
adc
std
push
xchg
push
imul
idivb
cmp
mov
mov
fcomps
xor
jo
popf
adc
jl
mov
xchg
inc
mov
mov
cli
cmp
ret
arpl
inc
fimuls
rorb
sub
int
lods
in
adc
inc
lret
adc
push
pop
push
jnp
add
lea
mov
mov
mov
orl
clc
lahf
dec
sahf
gs
mov
cltd
insb
jl
sub
sahf
int
pop
test
jecxz
sub
xor
outsl
adc
stc
repz
sub
mov
xchg
and
mov
pop
imul
dec
shl
xchg
jbe
es
mov
sub
aad
aad
in
cld
sbb
xor
adc
sbb
jbe
enter
mov
div
cli
iret
pop
push
cmp
mov
pop
imul
pop
jo
inc
in
adc
enter
arpl
fdiv
jno,pn
inc
insl
and
mov
push
and
bound
push
inc
jmp
sub
lret
pop
mov
xchg
stos
push
cmp
mov
test
xchg
xchg
jbe
push
out
inc
mov
ret
stc
xor
movb
mov
stos
ss
mov
out
movsb
jnp
clc
xchg
sub
fs
mov
jae
inc
xchg
xor
arpl
jp
arpl
adc
inc
sub
mov
cmp
imulb
add
lds
cs
jmp
lock
mov
sbb
or
push
xor
popa
lock
fsub
scas
cmp
fs
adc
loopne
cmpsl
mov
shll
out
and
mov
jb
jbe
pop
out
mov
xlat
in
xchg
bound
clc
cltd
xchg
xchg
push
into
mov
cld
mov
mov
jl
loopne
lods
iret
mov
and
dec
inc
jl
xchg
insl
inc
iret
enter
imul
jecxz
lods
mov
mov
and
mov
outsl
addl
xchg
mov
pop
out
gs
inc
popa
fneni(8087
pushf
add
movsb
pop
int3
lds
rcl
inc
arpl
paddw
fs
jno
mov
in
mov
scas
mov
enter
pop
bound
divl
das
int3
and
add
mov
sbb
int3
add
imull
xchg
pop
rcrb
sbb
push
scas
aas
push
inc
mov
ds
add
in
pop
das
push
mov
push
or
mov
into
inc
and
inc
push
and
imul
xor
add
jno
mov
and
and
cmp
popa
cli
clc
mov
hlt
xor
aaa
push
push
add
sbb
insl
xor
fists
out
push
xor
in
roll
xlat
xchg
push
adc
repnz
push
inc
lea
xor
ja
ljmp
fwait
mov
and
cli
clc
iret
cltd
dec
sbb
cmp
outsl
xor
int3
add
sbb
lods
lsl
sub
add
mov
outsb
fadd
lods
in
in
in
mov
arpl
push
pop
pop
jecxz
push
sbb
or
push
mov
imul
mov
jmp
add
fs
movsl
int3
jge
dec
dec
sarb
out
shll
fnstsw
inc
push
cmc
sbb
mov
inc
movsl
cmp
cmp
insb
cmp
bound
sbb
push
clc
mov
gs
je
mov
stos
sbb
lcall
mov
or
cmp
in
mov
icebp
jg
push
mov
aad
hlt
fwait
mov
lret
push
gs
cltd
stos
push
insb
ret
add
sub
das
sbb
rcll
push
iret
call
sub
lds
test
aam
jp
push
pop
mov
xchg
push
mov
subl
imul
fld
ss
lock
imul
sub
xor
push
lret
fimull
pop
out
pop
iret
add
or
mov
add
mov
loop
jge
js
test
scas
jmp
mov
out
arpl
sub
xadd
xor
push
xchg
stos
aas
js
dec
push
push
cmpsl
xchg
dec
inc
push
jp
adc
in
sar
shr
sahf
xchg
adc
aaa
insl
sbb
xchg
sbb
xchg
dec
out
push
add
hlt
jne
and
and
jecxz
and
fisubrs
out
sbb
add
add
xchg
std
cmp
sub
insb
xchg
mov
xchg
jmp
lods
stos
fwait
mov
inc
xchg
pop
bound
test
ss
aad
mov
push
push
rcll
and
roll
push
jbe
jl
lret
shr
fistl
jecxz
sarl
mov
and
xchg
push
cld
gs
int
pop
cmpsl
and
dec
in
pusha
push
mov
jmp
mov
fwait
push
or
sbb
mov
mov
orps
xchg
pop
aad
iret
rcrl
and
dec
inc
add
mov
stos
test
ret
sbb
push
mov
imul
xchg
dec
popf
xor
in
je
loope
hlt
xor
lret
fdivrl
in
enter
shr
xor
xor
pop
sub
insb
or
aaa
cmp
aad
xchg
sbb
aam
dec
lcall
out
or
das
ja
daa
sbb
xor
add
xor
xchg
jge
int
inc
mov
xor
test
jbe
dec
push
test
jmp
into
push
add
xlat
mov
mov
mov
push
popa
bound
dec
out
dec
jns
jo
xchg
and
fadd
jmp
leave
sahf
lods
sub
mov
iret
adc
clc
jmp
hlt
cltd
push
xor
cld
leave
inc
fidivrl
test
push
dec
cwtl
jne
addl
cs
jge
cmp
fnsave
fstl
repnz
push
mov
lahf
stc
fdivs
cld
pop
xchg
mov
fadds
dec
clc
stc
popa
sub
or
ljmp
push
jecxz
cmc
cmp
mov
inc
dec
popf
xchg
jecxz
inc
cli
imul
mov
mov
fwait
test
es
xor
push
sub
cmp
cmpsl
fistps
or
pop
cwtl
jecxz
mov
sbb
push
pop
push
xor
lods
add
dec
lds
push
nop
les
mul
pop
push
rcrl
lcall
test
adc
loopne
adc
mov
test
aaa
push
movsl
adc
iret
dec
adc
xchg
jl
lret
fwait
xchg
cmc
ds
xchg
pop
xchg
add
or
mov
lods
inc
mov
and
sti
add
aas
jae
adc
pop
mov
cwtl
mov
dec
pop
xchg
add
ret
inc
adc
dec
fwait
movl
cmp
sarl
inc
xchg
fdivl
add
outsb
push
jmp
lret
inc
and
xor
pop
std
ljmp
aam
or
mov
pop
adc
aam
mov
into
loope
fldt
jle
jp
cmp
adc
sbb
or
and
lds
lret
add
data16
cli
pop
sbb
push
lods
test
adc
xor
je
mov
lock
imul
mov
js
fisttpl
mov
jne
int3
push
add
mulb
sbb
adc
jge
jno
jno
mov
jne
push
pop
repz
orl
jns
xchg
add
ret
bswap
add
and
mov
xchg
adc
mov
mov
mov
out
jl
adc
stos
fyl2xp1
imul
pop
xchg
ja
jae
lahf
adc
jbe
jmp
pop
data16
pop
pop
mov
and
dec
rcll
ret
ret
lea
xchg
dec
cmp
sub
loopne
lods
repz
dec
outsb
push
paddd
sub
shl
movsl
fstpt
leave
cwtl
inc
xor
movsl
mov
add
lret
push
fadds
frstpm(287
push
ja
jp
cmc
in
push
xor
and
jnp
jo
aam
dec
inc
shll
jbe
repz
cld
mov
test
les
add
iret
cwtl
pop
and
cmpsb
in
cld
inc
add
js
mov
xchg
rcrb
outsl
and
push
repnz
sbb
sti
or
flds
je
iret
ja
xchg
xor
xchg
hlt
mov
lcall
push
cmp
shl
adc
inc
sbb
cs
lret
mov
xlat
faddp
pushf
arpl
cmp
mov
fadd
mov
cmp
aaa
sbb
sti
ret
sub
mov
pop
push
das
xchg
xchg
mov
sar
sbb
xchg
sub
mov
pushf
imul
and
filds
shlb
sbb
or
adc
jae
dec
gs
cmpsb
sbb
adc
sub
xchg
shr
cmp
mov
mov
cltd
adc
out
leave
fistl
sub
lods
frstor
outsl
cmp
adc
push
or
inc
int3
cmp
dec
xchg
push
xchg
add
pop
popf
addl
xlat
rcll
ljmp
jg
out
arpl
push
dec
jo
adc
imul
bound
adc
push
iret
mov
pop
sub
or
dec
outsl
push
and
add
jmp
bound
fcom
dec
and
out
or
repz
dec
fnsave
lcall
cwtl
in
sbb
loope
adc
and
stos
mov
ret
xchg
inc
insl
daa
fsubrs
outsb
dec
jno
push
push
iret
hlt
and
push
ret
xchg
fistpl
or
into
pop
xchg
cltd
xor
dec
dec
pop
mov
mov
int
rcll
mov
movsb
jns
jbe
ds
push
sub
sbb
adcl
push
cmp
inc
push
inc
mov
inc
inc
xchg
fldt
test
into
imul
inc
sub
jno
aad
add
cmp
jecxz
mov
xor
cmp
insl
iret
sbb
dec
int
xchg
or
mov
push
inc
adcl
mov
les
lods
es
cli
mov
stos
das
xchg
adc
mov
mov
inc
adc
and
xor
lds
shrb
vmovss
negl
xchg
sub
push
mov
ss
ror
in
test
lahf
jp
push
jns
mov
int3
lcall
adc
pop
inc
mov
adc
pusha
adc
into
ja
inc
stos
mov
fcoms
mov
lods
mov
mov
idivl
mov
lods
pop
pushf
shll
insb
icebp
addr16
pop
outsl
addl
lahf
pop
pop
popf
jg
mov
repnz
add
and
add
divl
cwtl
out
mov
push
sbb
test
shll
sbbb
clc
insl
push
mov
push
jg
pop
push
fldl
mov
jns
inc
int3
jbe
push
add
call
jbe
cld
lds
or
lret
mov
push
inc
xor
in
leave
mov
out
xchg
ret
jmp
andb
inc
ret
sarl
aad
push
fldenv
adc
sbb
mov
testl
aas
or
icebp
dec
mov
xchg
sub
cmp
ret
outsl
cs
lret
sub
xchg
movsb
aad
xchg
aad
jae
xor
repz
sbb
adcb
lods
fcmovb
xchg
jecxz
push
js
les
pop
cwtl
pop
push
mov
jnp
mov
jo
test
inc
and
pop
and
cmp
cmpsb
mov
cmp
dec
mov
lock
mov
sbb
dec
in
sub
push
xchg
or
ret
rcll
aad
mov
pop
sub
mov
ljmp
push
stos
sub
dec
jo
adc
test
adc
sub
lret
fsts
jecxz
popa
sub
fs
sbb
add
xchg
movsl
mov
aas
adc
mov
test
mov
xchg
lds
imul
jecxz
inc
aaa
sbb
pop
sti
pop
push
or
lahf
mov
mov
es
in
and
repz
push
inc
sbb
stos
scas
cwtl
mov
inc
sub
ss
hlt
imul
pop
cmp
out
addr16
xor
daa
mov
js
push
clc
mov
rcrb
imul
and
les
rorl
jae
and
movsl
incb
sahf
pop
lcall
jmp
push
pop
fistps
popl
outsl
mov
pusha
out
fnstcw
jne
xchg
fcoms
jl
cwtd
test
dec
ficoms
stc
or
out
sbb
shlb
and
add
jnp
push
call
xchg
push
sub
dec
pop
ss
or
stos
hlt
rclb
in
or
leave
orb
sub
jo
mov
and
test
into
mov
loopne
ret
cld
cwtl
test
sahf
sub
into
sbb
les
ret
pop
pop
adc
and
dec
sub
or
push
stos
int3
outsb
cwtl
shlb
push
aaa
std
jne
inc
cwtl
outsl
jge
mov
push
push
scas
addl
cltd
inc
out
mov
scas
jecxz
inc
xchg
cmpsb
or
sbb
sarb
cltd
test
mov
sbb
pop
imul
les
sti
push
lods
push
cmp
lcall
inc
adc
sahf
lahf
mov
lods
out
mov
inc
sbb
arpl
shlb
std
xor
cmpl
sarb
or
jmp
in
add
shlb
in
dec
out
and
jo
mov
daa
aam
lret
clc
push
clc
fmuls
jns
movsl
inc
mov
inc
mov
movsl
leave
ss
fs
iret
mov
mov
push
add
push
mulb
pop
or
ljmp
cltd
pop
sub
push
loope
and
rcrb
mov
pop
adc
aaa
lds
fwait
sub
hlt
jge
lahf
push
push
push
push
and
scas
jp
add
adc
mov
push
popa
or
aaa
lock
fsubrp
inc
hlt
xchg
jle
sahf
lods
add
addr16
cs
mov
pop
push
loope
outsb
mov
shl
jo
mov
dec
movb
xor
push
sysexit
in
cs
es
into
ljmp
into
mov
das
scas
test
inc
or
imul
xor
dec
outsb
or
or
int3
push
ffreep
xchg
dec
sbb
jp
cmp
loopne
out
cmp
jmp
shr
sbb
bound
xchg
stos
dec
sbb
push
aam
push
orl
and
std
sub
fcompl
pop
or
xor
int3
pushf
push
dec
mov
adc
bound
in
nop
cmp
dec
cld
or
sub
mov
scas
lods
fists
out
xchg
cmpsb
push
inc
dec
scas
test
fimuls
mov
or
test
lret
dec
or
add
nop
fnstcw
jnp,pt
fldl
ror
mul
or
add
and
adc
mov
pop
mov
push
les
push
xchg
sbb
subb
cwtl
xchg
or
sub
cmp
jo
inc
jae
sub
out
fxtract
sbb
js
addr16
loope
fsubr
xor
shlb
pop
iret
sbb
adcb
into
jle
cmp
addr16
inc
or
adc
cmp
scas
ss
jae
orl
icebp
cmpsb
test
and
mov
in
mov
imul
fwait
push
cmp
mov
jge
mov
pop
sahf
jle
mov
lds
addl
repnz
pop
imul
push
or
out
inc
lret
addr16
sub
cli
inc
push
cli
add
lret
mov
stos
mov
sti
jg
in
push
lea
mov
inc
xlat
aaa
xchg
call
adc
insb
lea
loop
sbb
adc
into
in
fnsave
popw
push
test
ficoml
lock
or
sub
pop
popf
cltd
adc
or
sbbb
ja
mov
stos
test
mov
xlat
cmp
mov
ret
bound
mov
scas
je
arpl
adc
pop
xor
jne
cltd
call
push
in
test
ficomps
jo
fwait
mov
add
mov
jmp
fcompl
leave
fxch
movsl
mov
js
lods
dec
adc
add
push
int
int
ja
sti
adc
jb
and
sbb
scas
addr16
mov
lods
lcall
int
ret
xor
cmp
nop
and
shrl
aam
push
fidivs
inc
or
mov
js
stos
sbb
mov
xor
test
push
adc
cs
int3
stc
mov
sub
ror
adc
cmp
fisttpl
inc
mov
push
outsb
ficoml
jbe
ds
ret
xchg
pop
pop
or
je
add
stos
test
mov
movsb
adc
or
adcl
cmp
lds
push
pop
jecxz
lcall
test
cld
sahf
xchg
push
xor
repz
jnp
test
dec
test
sti
int
sub
clc
rolb
dec
xchg
jmp
jge
adc
addr16
push
push
out
sbb
mov
movhps
outsb
fwait
repz
dec
mov
dec
sub
nop
imul
cmc
repz
push
int3
les
push
xchg
ja
adc
xrelease
sub
stc
xchg
cli
mov
movsb
add
and
psubq
jmp
fwait
dec
xchg
mov
push
test
shl
daa
mov
mov
cltd
push
js
fimull
jb
jl
dec
push
cltd
popf
aas
mov
jb
push
fbld
push
mov
pop
jg
xchg
inc
push
adc
fs
call
xchg
mov
int
test
mov
std
mov
push
cltd
mov
iret
arpl
xchg
inc
aas
cmp
scas
sub
pop
lods
imull
jmp
mov
mov
popa
sbb
sbb
mov
sub
jno
ja
push
inc
push
inc
test
xchg
aas
adc
aaa
add
pop
and
add
fldl
or
repnz
into
lods
jae
cs
cmp
imul
vmread
cmp
mov
xchg
test
daa
cmp
sub
jg
in
aam
and
dec
inc
fidivs
movb
pop
ficoms
push
imul
xchg
pop
push
cmp
andl
pop
popf
xor
dec
mov
rolb
ret
repnz
sub
sub
lods
mov
cmpsl
pop
mov
hlt
jae
sbb
push
aad
jmp
lcall
cmc
call
sbb
dec
inc
scas
mov
inc
jl
lret
and
xor
in
ljmp
pop
outsb
sbb
and
int
stos
mov
add
mov
sahf
mov
xor
xchg
xor
add
mov
call
cmpsb
jb
adc
popf
pop
jl
in
push
push
pop
push
les
xchg
rolb
push
xchg
dec
mov
xlat
into
and
xor
inc
mov
jns
mov
or
jo
inc
mov
push
pop
jl
xchg
sub
xlat
or
pop
cmp
push
incl
aaa
inc
test
cld
mov
adcb
and
and
and
movsb
push
aaa
add
jecxz
into
cmp
xchg
std
arpl
jecxz
jmp
hlt
fwait
sub
pop
push
shlb
mov
or
sbb
cld
jb
shr
es
mov
stc
ja
cmp
push
xchg
std
icebp
push
nop
int
jno
das
sub
pop
leave
in
mov
in
mov
cmpsb
inc
fstp
sarl
pop
ss
or
dec
fstl
dec
and
mov
popf
push
sbb
cwtl
mov
xchg
shll
dec
mov
cmp
mov
push
inc
subl
push
jl
inc
adc
mov
pop
pop
and
mov
xchg
push
nop
mov
aaa
inc
inc
loop
out
mov
lahf
into
test
sub
imul
loop
xchg
sbb
ret
pushl
cmp
cltd
jno
sbb
aaa
xchg
adc
jns
dec
and
sub
mov
mov
mov
adc
push
ds
push
add
daa
test
xchg
popf
inc
xor
int
push
daa
adc
xor
pop
inc
in
es
push
sarb
int3
pop
xor
jmp
fs
adc
jge
jns
dec
mov
mov
push
dec
dec
pop
sub
fnstsw
push
cs
xchg
xor
ret
adc
test
sarb
fsub
jne
jno
mov
js
stos
mov
push
pop
ja
test
sub
test
inc
in
mov
sub
mov
mov
outsl
jno
mov
or
mov
pinsrw
dec
xchg
lahf
sbb
dec
sub
jbe
jns
sub
inc
js
push
in
mov
scas
cmpb
push
gs
pop
js
pop
jb
test
out
int3
ljmp
pop
mov
hlt
aas
push
imul
mov
hlt
loop
dec
sbb
sbb
ficoms
sahf
push
xchg
mov
stos
fisubs
jb
sub
xchg
fstpl
testb
imul
xchg
lods
sub
call
add
clc
dec
jnp
push
inc
jge
mov
int3
push
mov
xchg
add
hlt
pop
dec
jns
mov
insb
and
sar
in
pop
call
test
fdivr
adc
jle
push
sbb
push
push
jae
int
or
pushf
adc
pop
inc
mov
pop
leave
movsl
stos
cli
mov
in
leave
movsb
inc
fisubl
cld
dec
sti
shrl
sbb
ja
or
dec
and
sub
es
adc
cwtl
div
enter
dec
sbb
movsb
loope
lahf
cwtl
cmp
mov
mov
pop
outsl
cmp
sarl
jno
cltd
fcmove
in
sub
push
push
mov
add
rcll
shlb
rolb
sahf
js
pop
fisubrl
rcr
cld
inc
lret
loopne
push
xor
insl
jne
imul
and
cmp
mov
shl
mov
ret
inc
mov
inc
jle
xor
int
dec
movsb
mov
mov
lds
and
fldt
adc
lea
push
or
add
out
scas
xchg
and
pop
lahf
sahf
in
popa
loope
lret
pop
sub
push
in
jmp
mov
lods
jb
jl
inc
dec
lahf
ljmp
inc
xchg
in
lds
add
sub
cwtl
add
and
pop
int
insl
aas
mulb
adc
data16
inc
insb
int3
inc
ret
pushf
sub
out
les
out
lret
or
enter
fs
xchg
cld
call
pusha
xchg
cli
and
int
stos
cld
std
loopne
mov
add
fstpt
adc
imul
xor
dec
push
sahf
push
push
sbb
stos
cwtl
std
mov
pop
xchg
pop
xchg
ljmp
push
jo
xor
cmp
and
jg
mov
fdivl
mov
add
sub
xchg
cmp
iret
in
mov
lahf
or
int3
or
stos
xchg
mov
dec
pop
out
out
cmp
mov
pop
sbb
jle
xchg
cmp
and
stos
leave
stos
inc
in
inc
leave
and
jg
jb
jnp
cld
pop
rcll
stc
dec
push
inc
test
les
pop
fbld
outsl
mov
nop
mov
dec
stos
negb
dec
sub
pop
sbb
mov
or
dec
xlat
lret
jns
lret
jp
movsb
test
xchg
sbb
ds
mov
fbld
in
lret
add
int
leave
jno
sbb
xchg
in
popf
aad
inc
sub
sbb
adc
sbb
pop
out
mov
jb
mul
sbb
or
xchg
jmp
stos
sub
out
dec
dec
mov
popa
pop
inc
adc
and
daa
or
sub
test
mov
jb
jge
push
adc
xchg
daa
rcrb
pop
mov
sbb
cmpsl
into
clc
inc
in
scas
cmp
jle
push
movsl
add
dec
xor
add
fwait
xor
cmpsl
ret
roll
cmp
iret
lods
popf
mov
ljmp
or
gs
xor
xor
push
fucomi
retw
mov
mov
jno
push
adc
push
cmp
lds
fsubs
pushf
bound
sahf
mov
mov
aaa
inc
push
pop
mov
ljmp
dec
dec
cs
mov
cmpsl
loope
add
or
cwtl
or
lock
stos
pop
pop
xchg
sub
xchg
jo
lods
mov
xor
ja
pop
lods
mov
push
fsubs
pop
sbb
pop
mov
or
or
and
jnp
inc
in
mov
xchg
sbb
mov
or
push
lcall
sub
bound
outsb
dec
xchg
jmp
pop
cmp
jmp
ljmp
adc
loope
ss
mov
test
pop
lods
adcl
xchg
ret
mov
xor
adc
pop
pop
mov
xor
ljmp
cmc
pop
mov
cwtl
and
jle
inc
into
mov
arpl
iret
ja
fidivl
in
mov
fisttpll
push
jno
sti
xlat
pop
dec
mov
sub
sbb
inc
xor
sub
dec
jne
jnp
popa
inc
sti
stc
int
lret
jnp
int3
popa
pushf
mov
push
loop,pn
xchg
xor
lcall
push
jle
insb
xor
pop
jno
mov
out
into
lea
dec
xchg
adc
lret
lods
mov
rclb
cmp
icebp
xor
les
dec
adc
or
sbbb
dec
nop
jbe
sbb
xor
push
mov
adc
pusha
jbe,pn
or
out
pop
xchg
xor
sbb
lock
stc
cwtl
outsb
xchg
inc
pop
fistl
mov
pop
cmp
out
ret
pop
cmp
ss
adc
jl
bound
cmp
outsl
inc
mov
fs
inc
mov
cmpsb
lds
push
lds
ret
add
or
nop
push
pop
pop
ds
mov
fcoml
nop
or
aam
sahf
push
inc
out
fiadds
mov
shr
movsl
push
fnstenv
inc
in
push
into
and
ljmp
cltd
aad
repnz
leave
lret
push
stos
int3
or
mov
jae
xchg
negl
ret
iret
cmp
sub
sbb
sub
jp
inc
or
xorl
add
lret
pop
and
inc
adc
es
cmc
pop
jno
inc
int3
mov
cmp
out
ja
sub
jmp
ret
pop
xchg
fidivs
pop
lahf
sub
ja
mov
jbe
xchg
dec
push
sub
jl
inc
sbb
fists
out
mov
leave
jns
test
xchg
aad
clc
mov
movsl
shl
idiv
and
xchg
je
insb
ljmp
subb
jnp
push
adc
push
add
or
loop
iret
cmp
push
sub
mov
jmp
pop
xlat
push
fcmovne
add
into
adc
xor
or
cmp
dec
cs
inc
jbe
enter
cmp
xor
fs
sub
sahf
add
xchg
mov
lea
cmp
dec
rolb
icebp
mov
push
insl
xchg
add
push
sahf
test
pop
test
jne
int3
jnp
rorb
and
dec
cld
xor
cs
leave
negb
ss
sbb
sub
inc
pusha
lds
hlt
mov
loop
scas
inc
test
xchg
pop
mov
std
mov
in
and
inc
int
lds
xchg
dec
in
mov
dec
in
arpl
sbb
ds
mov
das
mov
hlt
mov
stc
fistps
mov
mov
xchg
data16
pop
ret
dec
mov
xor
retw
mov
ds
out
repz
xchg
push
push
sbb
sbb
je
mov
into
ss
daa
cmp
dec
addl
out
pop
cmp
lds
xchg
loopne
aaa
cmpsl
sti
or
sbb
xor
daa
test
and
ja
jge
pop
push
pop
pusha
sub
xor
xchg
sub
movsb
stos
jp
pop
fdivs
inc
ffreep
loope
xlat
es
inc
out
or
lea
cs
repnz
pop
cli
ss
adc
or
enter
xlat
loope
add
mov
bound
insb
xlat
int3
cld
push
lods
or
decl
add
jle
jmp
aaa
sbb
jns
cmp
movsl
rorl
daa
orb
mov
jns
loop
mov
inc
lret
mov
ljmp
lret
jecxz
adc
lds
mov
xchg
lods
mov
mov
stos
icebp
out
inc
out
or
sbb
jae
mov
mov
pop
rclb
loop
inc
int3
leave
and
rcll
mov
outsb
fsubrs
mov
jge
and
mov
push
shll
movd
xor
push
add
mov
jp
lahf
call
mov
iret
je,pt
sub
and
call
cmp
ret
pop
xor
inc
xor
loope
loopne
add
fdivl
jp
in
fistl
mov
or
sbb
cmp
xchg
add
mov
fsubr
addr16
xor
pushf
out
jmp
jno
sbb
lods
rolb
shl
pop
inc
roll
xchg
and
cmp
sahf
nop
sub
lcall
int
push
test
out
mov
sub
xchg
or
jge
xchg
lahf
or
movsb
sahf
fstpl
or
push
jbe
dec
or
jg
lods
xor
mov
mov
adc
pushf
iret
sbb
lock
jg
je
push
clc
bound
cmpsb
cmp
push
mov
fistps
out
push
mov
negl
in
inc
mov
int3
popf
push
sbb
out
rolb
fnsave
jns
das
inc
dec
mov
std
jno
unpcklps
stos
mov
call
jbe
sub
mov
jecxz
cmpsl
iret
insl
lods
push
lcall
sbb
popf
jecxz
aas
movsl
push
mov
xlat
jg
jno
adc
arpl
pop
or
push
and
pop
je
inc
push
movsb
sub
or
xchg
aam
inc
mov
sbb
push
data16
lods
andl
aas
jmp
aas
xchg
jge
sbbb
fcmovnbe
je
and
aaa
lods
dec
pop
jnp
or
scas
cld
into
subb
and
and
add
pop
jp
inc
shlb
or
lcall
adc
sub
test
xor
inc
scas
dec
in
push
xchg
xchg
add
ret
subl
sub
ljmp
push
in
shll
mov
lock
xchg
xor
mov
gs
ret
call
dec
add
daa
fidivs
push
xchg
daa
aad
popa
add
hlt
sti
xor
ja
mov
shrb
imulb
js
adc
adc
in
lret
push
sub
ret
ss
push
mov
gs
js
cwtl
jne
mov
out
aas
enter
cld
cmp
sbb
aaa
xchg
pop
imul
xchg
dec
sub
outsb
jbe
mov
or
enter
int3
xor
mov
insl
pop
sti
leave
xchg
pop
pop
test
pop
cmp
fs
dec
pop
gs
lods
mov
aas
sahf
adc
aas
les
add
lret
sbb
sbb
hlt
add
adc
iret
cmp
std
jno
xchg
cmp
lock
insb
xchg
mov
sti
loope
arpl
mov
mov
cmpsb
fdivs
mov
test
adc
cld
inc
insl
mov
shrl
mov
pop
std
imul
mov
daa
push
sub
sbbl
fbstp
inc
imulb
mov
mov
outsb
das
cmp
pop
pop
flds
mov
and
gs
cli
or
push
aas
dec
jnp
mov
lcall
dec
shrl
xchg
sti
jb
jnp
cmp
cltd
sbb
jb
xchg
imul
mov
push
or
and
adc
mov
pop
js
andb
inc
adc
push
aas
mov
movsl
pop
ret
cmp
sub
repz
je
xor
fmuls
pop
lret
xor
or
adc
ret
ja
sbb
and
pop
mov
clc
loope
leave
inc
push
fistps
mov
call
cmp
rcrl
mov
nop
leave
test
mov
mov
xchg
ds
xchg
push
flds
repnz
jle
int
stos
stos
es
mov
mov
xchg
cwtl
or
mov
cmp
sbb
shl
xchg
dec
mulb
cmp
ret
mov
fbld
mov
mov
lea
test
and
jmp
jge
push
push
sahf
cmpsb
push
enter
movsb
hlt
mov
pop
pop
lds
push
mov
mov
into
cld
in
inc
inc
pandn
cmpsb
movsb
inc
mov
push
loop
or
inc
sub
insl
fisttps
mov
insl
cmp
movsb
out
cmp
repz
addr16
out
jne
and
shll
cmp
andl
pop
pusha
xor
inc
mov
loop
mov
or
stc
stos
jmp
xchg
xchg
xor
lods
sub
mov
sub
repnz
std
add
loope
push
pop
dec
scas
out
adc
jb
xor
movsb
or
adc
int
adcl
or
scas
add
sbb
test
mov
push
inc
push
add
mov
vpcmpgtb
pop
push
repz
jb
lahf
stos
mov
out
push
pop
mov
xlat
push
cmc
dec
dec
test
mov
sbb
inc
in
xchg
mov
insb
addb
std
pop
adc
add
jb
dec
mov
adc
lea
or
jnp
shlb
push
lods
xorb
mov
push
cmpsb
lods
xchg
imul
adc
sbb
lods
pushf
jns
rcrb
jne
cs
cmpsb
data16
arpl
idivb
mov
pop
daa
sbb
jg
cmp
mov
xchg
sti
testb
dec
stos
jb
js
daa
adc
imul
push
xor
dec
addl
fistl
pop
test
pop
jno
inc
je
outsl
pop
stos
sub
jecxz
pop
js
xor
call
inc
pop
pop
jo
push
adc
jecxz
fdivs
icebp
pop
and
sar
bound
add
cli
iret
in
fstl
repz
mov
cli
xor
out
popf
inc
mov
fsubrl
test
aaa
enter
imul
xor
aas
add
add
push
jge
out
add
mov
in
push
add
xchg
sbb
inc
pushl
pushl
pop
pop
shlb
daa
repz
stos
pop
aaa
jp
int3
xor
and
pop
sbb
inc
add
mov
cmp
cmp
sub
addl
stos
pop
mov
sarb
inc
ds
fisubrs
xchg
popa
clc
ret
inc
or
lods
sahf
scas
xor
fbld
rol
lahf
and
xchg
push
pop
nop
in
push
xchg
fstpt
repz
in
jo
mov
ss
lods
add
dec
mov
xchg
mov
je
xor
push
push
jg
add
popf
outsb
fiadds
cwtl
fsubp
cltd
bound
pop
lahf
pushf
pop
xchg
mov
xor
mov
mov
imul
loop
aam
fcmovb
xor
shlb
scas
cmpsl
dec
and
xchg
pop
jns
xorb
jg
adc
nop
cmp
mov
sbb
dec
dec
ss
or
jae
nop
sbb
push
mov
mov
stos
pop
xchg
xor
das
add
inc
cmp
xor
xlat
movsl
mov
add
xlat
int3
bound
je
or
mov
or
in
jo
adc
jb
stos
and
rcrl
popf
xlat
mov
add
xchg
jle
ss
pop
jnp
push
sti
cmp
or
scas
add
and
inc
outsl
sbb
popf
and
gs
jo
pop
pop
aaa
cmp
inc
jmp
fisttps
imull
jae
mov
loop
cld
call
insl
iret
daa
sub
dec
or
insl
ret
or
inc
imul
inc
enter
xchg
sub
in
stos
or
xchg
mov
mov
inc
jno
test
jecxz
xorl
lods
add
and
xor
fstl
mov
test
pusha
in
add
push
add
cmp
lcall
lods
sbb
mov
cmpsl
in
cld
jmp
lods
xchg
int3
mov
cmp
cmp
mov
cltd
roll
rorb
inc
loopne
pop
add
adc
jns
mov
dec
outsl
xchg
xchg
sub
pushf
or
pop
and
out
gs
push
mov
or
xchg
notl
pop
fmull
mov
jno
sub
add
fbstp
inc
iret
mov
sub
outsb
sti
add
jecxz
mov
sub
lods
in
out
mov
xlat
jecxz
lods
cmpsl
mov
std
add
mov
add
outsl
push
mulb
or
loope
mov
pop
inc
repz
xchg
and
adc
sbb
loope
insb
jecxz
push
mov
int
mov
mov
mov
je
testl
add
mov
mov
movsl
gs
dec
and
lock
fdivrs
push
scas
jle
jb
jmp
stos
cmp
xor
repnz
mov
mov
jmp
leave
daa
jge
lret
cmp
xchg
iret
fstpl
and
sub
and
and
jle
sti
mov
xchg
add
jecxz
dec
sub
ret
stos
mov
or
mov
aam
cmp
shlb
je
push
imul
ds
js
mov
sub
or
orb
dec
addr16
in
cmpsb
in
in
movsb
sbb
mov
bswap
stos
xor
mov
cld
data16
cld
sub
fidivl
add
bound
pop
dec
test
inc
xchg
rorb
fdivr
inc
loop
xchg
iret
pop
jge
jle,pn
fs
mov
add
dec
test
repnz
jno
cmpsb
dec
out
imul
mov
lcall
nop
insl
or
fisubl
mov
out
pop
sub
xlat
nop
pop
inc
shl
dec
orl
aad
sbb
xchg
jne
xor
mov
add
enter
pop
adc
shll
and
mov
scas
leave
push
jg
push
add
mov
sub
lahf
add
mov
ja
jp
jg
fsubl
push
ja
sahf
outsb
hlt
sbb
jg
push
mov
lea
mov
clc
repnz
mov
push
fadd
fdivr
insl
fdivr
outsb
sbb
inc
xchg
fldenv
iret
pop
push
data16
fldt
inc
cld
fs
ja
jp
test
inc
outsb
jb
cmp
dec
jnp
lcall
imul
lock
gs
das
aam
sbb
jmp
mov
lock
popf
out
jbe
int3
adc
jp
push
xchg
jg
sbb
fcompl
setb
mov
int
mov
jecxz
push
scas
and
in
and
add
push
jbe
out
mov
xor
fidivl
ja
jle
rcrl
ja
test
in
jne
fcmovu
sarb
bts
cmp
cmp
bound
outsb
pop
into
es
mov
jns
sub
stos
enter
cmpl
cs
push
arpl
pusha
ret
sbb
or
push
sbb
mov
rcll
in
add
stos
pop
sbb
test
rorb
pusha
xor
inc
pop
lea
xchg
sub
scas
lret
out
vcmpps
and
mov
or
ja
ss
mov
adc
lds
mov
lea
mov
jbe
rcll
pop
jns
sub
test
pop
cmp
test
cmp
xor
cmc
sarl
loop
mov
sbb
pop
xchg
jne
fidivs
icebp
cltd
and
xchg
mov
dec
xor
je
jecxz
andb
shrl
push
js
pushf
xchg
push
mov
mov
mov
das
or
aam
xlat
push
sarl
gs
addr16
repz
outsb
add
aas
fisttpll
pop
or
hlt
sub
jle
mov
testb
add
popf
loop
addr16
mov
jae
sbb
lret
out
push
lods
out
or
jb
cltd
mov
decb
or
stos
push
mov
mov
fcomp
cmp
insb
mov
out
dec
xor
sub
sbb
or
stos
sub
repnz
add
sbb
popa
xor
cmpsb
leave
jbe
fistpl
enter
sub
pop
call
inc
mov
sub
and
test
sub
pop
push
out
dec
pop
jo
xchg
jle
lods
inc
mov
gs
or
mov
or
outsb
popf
dec
lods
adc
test
popf
inc
test
in
xchg
dec
out
dec
cs
push
jne
popa
popa
stos
mov
leave
add
inc
insl
icebp
test
push
fcompl
ret
addr16
inc
aas
repz
pop
cmpsl
xchg
or
jo
pop
sarb
pusha
dec
push
ficoms
imul
jo
mov
mov
push
push
jnp
fisubs
test
sub
push
pop
push
fistpl
jg
cmpsb
iret
pop
andb
gs
popl
aam
xor
mov
imul
movsb
sarl
popf
and
popa
xor
imul
xor
into
rcll
fstps
stos
jno
mov
ja
mov
or
addr16
jmp
xor
push
add
std
imul
outsl
and
dec
loop
dec
stos
add
adc
cwtl
push
cltd
dec
cmp
mov
push
and
cli
jmp
arpl
cmp
mov
in
push
xor
out
pop
adc
pop
fisubl
fcoml
out
mov
sbb
mov
add
mov
xor
xor
scas
fdivr
jbe
mov
je
and
mov
mov
sbb
sub
fldenv
rorb
xor
subb
xchg
aaa
and
sub
negl
cwtl
hlt
add
jmp
xchg
in
popf
xor
add
out
jno
sbb
fistps
cmp
outsl
aaa
je
mov
dec
mov
les
xchg
fldcw
sbb
popa
test
xchg
sbb
cld
stos
xlat
in
movsb
inc
sbb
divb
cmp
mov
adc
mov
xchg
in
popf
lds
gs
fsubrs
push
cwtl
jne
add
push
std
pop
jmp
cmp
loope
fs
sub
enter
stos
sarb
adc
adc
add
dec
add
movb
inc
movsl
sub
add
rorb
loopne
dec
inc
pop
mov
bound
sbb
pop
test
jmp
sbb
mov
cmp
or
aaa
cmp
stos
in
xor
jbe
into
jp
sbb
fwait
pop
or
xchg
jbe
out
js
push
into
popf
mov
outsb
pop
arpl
xchg
or
cmpb
add
lea
lret
roll
js
dec
inc
jle
xchg
fsubrl
inc
inc
dec
jns
xchg
pop
clc
les
dec
mov
ret
cmc
scas
jmp
xchg
stos
cmpsb
push
aaa
or
test
mov
pop
adc
aad
xor
cmp
fists
and
mov
pop
dec
mov
xchg
and
pop
push
xchg
mov
push
cmp
xchg
inc
jo
mov
xchg
popa
pop
icebp
fisttpl
pop
jge
jb
outsl
xchg
and
xor
xor
call
mulb
hlt
jb
cmp
mov
or
testb
shrb
movsb
mov
dec
and
jo
jle
pop
or
scas
xchg
jmp
xchg
scas
outsb
cmp
xor
aad
mov
pushf
fcom
stos
test
add
int3
add
sub
mov
aaa
orb
fsubl
mov
adc
out
sbb
xchg
inc
cli
xor
sbb
mov
inc
adc
cmp
adc
lcall
ficoms
jp
test
hlt
cs
push
push
dec
popa
jge
and
ror
in
jmp
lods
cmpsb
stc
cwtl
into
outsb
mov
pushf
pop
cmpsl
sub
add
mov
fnsave
xchg
scas
sbb
cmpsb
or
shl
rcll
insl
jl
enter
sbb
pop
dec
das
mov
add
xchg
stc
test
jbe
push
sub
xchg
mov
mov
sbb
pop
jae
pop
mov
sbb
repnz
ja
add
lret
movsl
nopl
hlt
push
pop
xor
rorl
repz
ret
fsubrs
or
adc
cmp
sub
push
pop
das
scas
lret
inc
fsubrs
std
lods
popf
push
iret
mov
mov
mov
push
popf
fistpll
cmp
mov
insl
stos
imulb
pop
adc
mov
ss
pop
push
adc
ljmp
sbb
sub
mov
push
xor
leave
jl
xchg
imul
pop
hlt
les
imul
push
mov
lahf
sbb
lods
gs
pop
int3
xor
dec
lds
jne
insb
rcrb
and
dec
dec
int
inc
into
dec
sbb
cmp
lods
ror
xchg
cmpsb
sar
call
xchg
sbb
and
pop
cli
xchg
fwait
out
jbe
mov
loopne
js
lods
imul
mov
xor
and
xor
shrl
out
mov
sti
stos
jecxz
out
repz
je
xor
mov
pmullw
mov
bound
rcr
mov
fisubrs
mov
adc
in
ret
add
loope
negb
cmp
in
inc
in
mov
js
pusha
cmp
adc
cld
mov
cltd
sbb
ja
mov
out
les
add
imul
mov
sbb
xor
loopne
lcall
push
in
xor
push
jmp
xchg
add
fxch
cmp
sub
leave
fmulp
lods
inc
jecxz
inc
sub
stos
rclb
mov
or
push
mov
jnp
xchg
jle
mov
pop
inc
int
lock
inc
leave
or
and
mov
sahf
adc
dec
mov
aas
dec
mov
xlat
pop
rcll
add
adc
inc
sbb
dec
ss
cmp
jb
or
stos
mov
inc
jl
push
mov
shll
xchg
xchg
jo
mov
pushf
test
loop
jbe
fs
adc
leave
das
sahf
subl
jecxz
xchg
add
xchg
add
js
xor
pop
xchg
jbe
lods
inc
or
xlat
loope
imul
push
insl
xor
es
jb
xchg
cs
aam
adc
jl
js
enter
jp
add
pop
insb
repz
or
mov
sub
int3
sti
jecxz
and
imul
daa
pop
xchg
mov
inc
adc
out
pushf
xchg
enter
scas
push
cmp
xor
or
lds
aas
fstps
xlat
call
push
sbb
xchg
mov
or
mov
sub
adc
test
mov
cmp
xacquire
or
imul
xchg
int3
and
dec
dec
dec
cli
dec
dec
adc
arpl
adc
insl
mov
mov
mov
dec
lds
jmp
mov
popf
cmpsb
sarb
xorb
lods
and
adc
dec
fcomps
jecxz
xorb
icebp
mov
cmp
xchg
cs
loopne
cmp
ficomps
pop
aas
pushf
mov
push
pushf
cmp
mov
mov
xor
jge
out
mov
mov
stos
mov
add
iret
bound
sahf
and
pusha
inc
mov
in
daa
push
pushf
int
xor
xor
mov
and
in
mov
pop
fwait
mull
les
mov
mov
sbb
subl
inc
sub
inc
pop
sbb
jnp
mov
push
inc
mov
ret
push
stos
add
pop
mov
int
mov
das
repnz
xchg
sub
das
outsb
pop
inc
mov
ja
sub
xlat
clc
mov
xchg
pusha
int3
lods
enter
lds
lret
adc
pop
popa
xor
iret
mov
lret
push
and
add
inc
xor
pop
lret
stc
push
cmp
push
icebp
jl
aas
mov
mov
or
pop
pop
in
pop
rcr
push
xor
mov
cmp
xchg
cmp
inc
adc
and
xchg
mov
mov
fwait
lcall
and
mov
sub
fwait
mov
mov
dec
inc
adc
pop
lahf
lcall
gs
push
sbb
mov
sbb
inc
shlb
or
pop
adc
push
and
add
adc
repz
xor
and
push
jnp
ds
cmp
icebp
js
ljmp
add
je
clc
xor
mov
in
xchg
das
in
push
sbb
mov
rclb
fldcw
add
mov
pop
mov
cli
cltd
test
jnp
or
or
inc
mov
ljmp
mov
call
clc
and
xchg
mov
int
push
sbb
xor
inc
fists
dec
sbb
loop
mov
adc
mov
fisubl
rorl
xorl
and
xor
xor
jecxz
stos
dec
add
mov
test
sub
push
dec
push
ja
inc
hlt
jge
push
iret
shrl
xor
pop
mov
sbb
je
jecxz
in
jne
inc
daa
js
int
addr16
and
in
mov
aam
mov
ret
in
pop
push
jl
aad
push
scas
xchg
lret
in
into
pop
pop
out
cmp
mov
scas
push
lahf
mov
push
mov
xchg
and
adc
jp
mov
in
and
or
xchg
sbb
mov
mov
nop
pusha
das
mov
cs
cmpsl
pop
sub
sbb
sbbb
cmp
sbb
inc
icebp
mov
subb
inc
repnz
sub
jae
clc
icebp
pop
dec
into
ffree
inc
jae
fs
in
cmp
pop
push
dec
addl
push
jns
stos
adc
pop
int3
test
xor
sbb
sub
cmp
and
fdivl
push
shr
subb
outsb
sbb
mov
xchg
outsl
pushf
mov
or
es
lods
pop
imul
or
xchg
jp
sbb
pushf
jecxz
das
jp
pop
adc
sbb
sub
xchg
push
test
adc
daa
or
insl
lock
push
mov
adc
add
test
out
jno
mov
push
or
out
and
mov
inc
imul
jecxz
and
int3
call
icebp
xchg
insb
pop
inc
mov
bound
test
adc
push
pusha
ljmp
stos
add
fdivs
sbb
push
hlt
sub
imull
mov
cli
or
mov
push
mov
nop
and
cmpsb
pop
dec
das
mov
leave
loope
push
testb
pop
ds
ss
add
cld
andl
mov
loop
jb
xor
cmp
mov
sub
sub
pushf
rcrl
dec
pop
dec
adc
and
pop
jb
push
ss
xchg
jg
inc
leave
push
jb
in
add
jge
mov
imul
mov
call
add
or
fnsave
mov
mov
inc
aam
jns
ret
add
int
mov
mov
or
fwait
pop
sub
aad
mov
lahf
std
cmp
popf
xchg
jno
sub
and
inc
aad
iret
mov
adc
push
leave
dec
out
push
add
out
rclb
daa
pop
pushf
pop
enter
clc
xchg
fwait
out
mov
in
nop
push
mov
jo
int
es
stc
ljmp
aaa
and
push
dec
fucom
xchg
cmp
jb
adc
sar
mov
and
mov
insb
dec
pop
ret
add
nop
push
pop
ret
xchg
lcall
in
clc
sti
leave
jg
pusha
aam
ret
inc
lcall
cmp
xchg
pop
mov
movsl
xor
rcr
jo
cs
gs
mov
mov
mov
aaa
mov
out
push
sarb
clc
or
jge
pop
jecxz
lods
xor
inc
hlt
dec
add
mov
repnz
add
dec
and
daa
aam
mov
movsb
adc
lret
mov
lret
orb
arpl
xchg
dec
pop
xor
dec
sub
jno
lock
ficompl
jo
fwait
jns
loope
call
ret
jge
mov
test
out
cltd
xor
add
jecxz
push
gs
cmp
je
aaa
mov
shl
imul
lahf
mov
push
fs
jns
stos
xor
sub
xchg
std
dec
loop
and
bound
jae
fsubl
and
sbb
dec
push
inc
ja
das
fstl
fs
pop
mov
push
sub
jl
xchg
aam
out
inc
iret
dec
cmp
adc
mov
sub
test
add
popa
lods
mov
jnp
fs
jp
daa
push
push
insb
pop
xchg
or
sub
daa
iret
imul
sarb
ja
dec
int3
cwtl
add
leave
ljmp
out
xor
mov
push
jo
xor
ret
sarb
lock
repz
xor
lret
mov
sub
cmpsb
xlat
add
es
addr16
push
dec
sub
xchg
pop
arpl
or
mov
push
sbbl
lahf
movsb
dec
dec
adc
pushf
out
inc
dec
aas
sub
pop
mov
sahf
xchg
dec
xchg
insl
sbb
addr16
in
xor
ret
in
cmp
dec
xor
dec
push
sbb
ret
mov
xlat
mov
adc
insb
xchg
pop
out
test
fcoms
nop
inc
ds
and
andb
arpl
enter
and
push
jo
jecxz
mov
jo
icebp
incb
ja
gs
inc
imul
mov
in
arpl
xchg
dec
sub
xor
cmpsb
jp
shlb
scas
popf
mov
add
inc
jp
out
fs
js
in
insb
mov
push
stc
adcb
jnp
mov
popa
cwtl
sbb
cld
leave
loope
push
dec
add
negb
and
jae
hlt
lahf
inc
sub
fcmovb
loop
enter
ds
xor
jmp
mov
ss
in
inc
xor
jo
mov
sbb
in
or
mov
adc
mov
fidivrl
jge
pop
push
clc
or
mov
xor
adc
dec
inc
sbb
ror
popa
data16
cmpsb
xor
mov
mov
mov
dec
jp
adc
jecxz
and
loope
and
scas
cwtl
mov
in
nop
sahf
dec
cmp
cmp
pop
repz
gs
adc
fistps
inc
jae
mov
pop
mov
ds
sub
enter
cli
shlb
sbb
and
jnp
je
cmp
push
push
cmpl
int
leave
mov
sbbb
je
fildll
imul
mov
push
or
ficoms
aaa
fmuls
subl
pop
dec
and
jg
int3
dec
xlat
xchg
sbb
push
jg
test
hlt
xor
testb
push
stos
add
mov
das
aaa
insl
sbb
xor
jl
imul
mov
push
dec
popa
mov
pop
aad
pop
aad
jb
mov
adc
xchg
cmpsl
pop
xor
fimull
subb
cmp
test
pop
xorl
movzwl
rorl
lret
dec
mov
add
or
dec
sbb
xchg
ret
scas
mov
call
xor
push
movsl
adc
mov
div
nop
mov
outsb
add
xchg
mov
into
adc
mov
cwtl
sarb
mov
mov
jmp
mov
push
repz
enter
sbb
jecxz
push
rcll
and
cmc
cmp
xor
shl
ret
test
popl
sarl
mov
mov
sbb
adc
inc
xchg
mov
push
js
mov
sub
movsl
adc
subl
sub
icebp
add
ja
cmp
or
addr16
jnp
sbb
lods
xor
mov
cmp
mov
pop
jle
nop
enter
push
push
add
cmp
call
fidivl
loope
in
jae
add
add
jp
loope
dec
inc
jno
fidivs
fwait
xchg
jl
jmp
xchg
pop
insb
jnp
arpl
jge
and
cwtl
or
mov
inc
jns
sti
cmpsb
into
mov
dec
jnp
add
mov
mov
fdivp
lock
mull
add
roll
mov
pop
or
std
push
mov
fdiv
inc
call
mov
movsl
mov
or
mov
out
mov
movb
cld
js
imul
pop
fs
xor
fwait
sub
and
xchg
fbstp
add
aam
mov
adc
xor
pop
push
push
fwait
xorl
jle
jle
cmc
mov
cmp
outsl
cmpl
popf
mov
pushf
jge
dec
add
push
mov
dec
in
negl
es
movsl
push
sahf
cmp
ja
adc
pop
test
aaa
pop
rcr
outsb
ret
stc
scas
push
mov
or
sub
lcall
mov
add
aas
nop
lahf
cs
mov
fcompl
loopne
mov
pop
pop
pop
outsb
jle
arpl
push
push
pushf
scas
adc
sbb
enter
xor
jae
jae
icebp
fidivrs
pop
cli
jg
add
insb
arpl
mov
in
andb
int3
xchg
pushf
cmp
cmp
and
and
xchg
outsl
jmp
sub
xchg
jle
das
xchg
and
js
fisubs
mov
inc
cmp
jbe
lods
pop
add
push
xlat
jp
test
push
fs
lock
or
cwtl
enter
addb
call
push
outsl
xor
fdivr
loop
pop
and
enter
and
lahf
loop
inc
pop
in
enter
iret
or
add
jp
or
sbb
test
test
nop
outsl
stc
cli
push
lds
push
mov
out
pop
pop
js
addb
fwait
mov
push
loop
pop
fisubrl
loop
sub
gs
inc
inc
xchg
fs
lret
iret
and
lock
imul
and
sbb
je
dec
cltd
mov
pop
les
lcall
or
mov
push
add
ret
das
out
adc
dec
addr16
fnstenv
ja
subl
adc
and
sub
test
sbb
cmpsb
jno
imul
push
xor
xchg
jecxz
and
inc
inc
mov
clc
cltd
dec
fistps
loop
mov
in
add
das
std
cli
jge
sbb
inc
bound
inc
xor
arpl
popf
push
cld
ret
xchg
aaa
xchg
imul
mov
out
xchg
out
sbb
jl
mov
mov
jnp
cwtl
adc
daa
mov
sub
pushf
arpl
xor
jno
nop
add
jl
aad
inc
mov
adc
pop
int
daa
add
fdiv
mov
popf
xchg
push
test
xchg
repz
or
mov
cmp
mov
mov
xchg
mov
mov
das
add
jae
sbb
test
out
or
add
inc
fwait
adc
das
int
jo
cwtl
xchg
jbe
mov
jecxz
fwait
mov
mov
ret
in
sbb
arpl
xchg
push
stc
std
or
sub
aam
mov
sub
icebp
mov
int3
bound
enter
xchg
and
jnp
les
lahf
testb
rol
pusha
xchg
cwtl
rcll
mov
nop
xchg
sbb
sub
divl
sub
mov
lods
popa
jg
xchg
out
sub
mov
jmp
sarb
clc
push
sub
adc
jp
jae
cmp
and
into
jl,pn
popa
add
push
sbb
je
sub
movb
or
std
int
jmp
pop
push
insb
xchg
inc
aas
and
lret
adc
xor
mov
sub
movb
rolb
ret
xor
out
mov
xor
pop
clc
shrl
test
scas
cmp
mov
repz
pop
cmc
jle
add
fcomi
ljmp
es
fmuls
mov
mov
adc
pop
icebp
fs
repnz
sub
lea
adc
mov
jns
lds
adc
and
push
shll
xchg
lds
cwtl
push
fucomp
stos
adc
mov
das
xchg
inc
pop
add
mov
ficoms
mov
add
test
sub
stos
dec
int
lret
and
mov
addr16
mov
dec
popa
les
cmp
std
loope
dec
fdivl
and
pusha
shlb
cltd
pop
mov
jecxz
jno
mov
mov
inc
cs
es
fcomps
ljmp
pop
jecxz
in
mov
hlt
sub
mov
scas
pop
icebp
aam
popf
cwtl
xlat
and
loop
add
mov
xor
mov
test
jb
lahf
jmp
ficoms
lods
adc
jge
test
xor
adc
mov
lahf
movsb
mov
and
shll
push
bound
pop
jecxz
cmp
sub
cmp
in
fwait
adc
in
mov
cmp
popf
push
adc
das
ret
popf
sub
insb
adcl
or
fadds
xlat
hlt
lds
sbb
jnp
jbe
mov
fdivrl
cmpb
sub
push
and
or
jne
add
lods
or
subl
aad
jp
fwait
push
popa
cmc
je
pushf
sbb
inc
pusha
jmp
sbb
fsubrp
jns
aaa
and
addr16
mov
mov
rcrl
inc
dec
mov
sbb
dec
nop
push
push
and
out
lods
sahf
push
xchg
add
mov
dec
imulb
jo
jp
stc
out
insl
ljmp
ja
mov
pop
or
pop
daa
mov
lahf
arpl
jns,pt
cmp
push
fidivrs
add
pop
pusha
js
cwtl
sub
js
loope
mov
outsl
test
in
ja
or
adc
push
add
insb
mov
cli
pop
fs
cmpsb
mov
mov
hlt
sti
dec
ror
and
imul
sub
xchg
paddsw
ss
xor
mov
push
psubd
rcll
and
lods
fwait
pop
gs
inc
pop
lods
sub
call
stc
mov
fwait
dec
std
stos
mov
insl
leave
add
pop
ss
adc
iret
xchg
push
in
push
imulb
pop
jmp
sbb
add
lret
sub
idivl
jg
jae
cmp
lcall
stos
cmpl
sub
pop
add
mov
xor
icebp
inc
dec
mov
lcall
mov
in
outsl
jbe
int
es
xchg
scas
push
cmp
icebp
lods
js
shr
dec
ret
xchg
push
fiadds
mov
insb
pop
les
jnp
and
lods
testb
inc
dec
mov
insl
inc
sub
or
or
sub
pop
xor
mov
and
lds
jg
in
jae
sarl
sub
das
jns
jnp
shl
pop
aam
das
incb
cltd
cmpsb
xor
mov
xlat
sahf
lods
add
push
xchg
lods
pushf
es
daa
mov
pop
hlt
or
mov
xor
addr16
cmc
push
loopne
mov
clc
inc
outsb
push
fldenv
aad
insb
mov
enter
cmpsl
je
xor
jae
popa
rorb
mov
cmp
das
cmp
out
pushf
sbb
cmc
divps
shlb
and
lock
mov
xchg
adc
xchg
inc
mov
jb
cmpsl
cwtl
jle
movsb
xor
xchg
int3
or
and
inc
leave
in
out
fstps
das
dec
mov
mov
mov
jno
insb
pop
mov
jne
mov
cmp
mov
ds
push
add
idivl
sahf
jae
imul
das
ds
lds
adc
mov
add
jle
xchg
stos
mov
ja
add
mov
mov
rorb
and
push
inc
pop
push
and
mov
gs
sbb
cmp
xchg
dec
inc
jle
movsb
mov
or
imul
mov
mov
imul
adc
pop
inc
gs
sub
inc
mov
add
mov
xor
lds
lcall
outsl
lret
cs
adc
dec
and
xor
jbe
aaa
jle
arpl
fdivl
sub
lcall
inc
js
pop
imul
xchg
add
ljmp
add
push
cmp
or
push
mov
adc
add
mov
add
das
mov
mov
pop
mov
sbb
loopne
or
dec
les
arpl
mov
rorl
inc
mov
inc
add
or
shl
mov
cmpsb
lea
pop
shlb
sub
popf
aad
fidivrl
dec
pop
imul
out
pop
decb
dec
sbb
cmp
in
mov
jle
jge
ss
fadd
dec
pop
mov
sbb
bound
push
mov
lahf
nop
mov
rorb
push
lods
jmp
aas
mov
loop
xchg
fdivp
rorb
cmp
and
add
dec
cmp
sub
popa
cmp
jecxz
pop
cmp
inc
js
xchg
push
sbb
cmpsl
cmp
mov
sar
cmc
push
gs
rcrl
repnz
fs
test
aad
push
popa
ja
mov
push
mov
je
jno
jmp
push
inc
lret
dec
push
push
fmull
mov
fstp
or
pushf
mov
sbb
outsl
fsub
daa
or
mov
insl
jmp
or
ljmp
xor
xor
sbb
or
loop
mov
adc
dec
mov
xor
cmpb
cwtl
int3
mov
shll
inc
mov
in
push
or
mov
mov
and
add
clc
sarb
lods
cli
lahf
imul
inc
data16
xchg
lods
xor
ficoms
xchg
or
dec
mov
ds
push
adc
lret
fisubs
or
inc
in
nop
or
das
adc
inc
push
pop
sub
test
pop
mov
es
cmp
mov
std
push
test
xchg
leave
leave
aam
mov
fistpl
jae
pop
ljmp
scas
out
mov
and
mov
jns
fs
push
lret
push
xor
pushf
cmp
imul
pop
dec
and
out
loop
lds
clc
dec
sahf
jnp
jnp
adc
stos
cmc
add
mov
xorb
outsl
stos
xchg
test
add
imul
xor
lcall
and
jb
adc
adc
subl
dec
stos
and
fistl
fdivl
in
and
rcrl
insl
sbb
xor
push
jmp
call
jmp
pop
xchg
jnp
mov
test
cmp
sbb
arpl
mov
outsl
mov
iret
inc
ret
and
mov
in
fucom
fs
mov
push
or
xor
and
jbe
cmc
sbb
or
insb
ljmp
out
addb
pop
popa
pop
popf
pop
in
loope
stos
pusha
jmp
fadds
xor
test
int
aaa
aaa
push
mov
jae
fcmovnbe
fdivrl
adc
lods
insl
adc
xor
aas
rcrb
imul
shlb
or
xlat
or
int3
push
mov
mov
pop
pop
sbb
test
mov
push
cltd
iret
fs
sbb
and
xchg
or
hlt
icebp
and
aas
mov
sbb
push
mov
pop
cwtl
aas
fbstp
mov
out
out
mov
push
repnz
dec
sbb
jge
fwait
lret
cmp
xchg
fdivrp
fldenv
jns
outsl
adc
stc
mov
pop
lea
mov
dec
inc
sbb
dec
bound
sub
fstpt
fcoms
imul
jo
sub
rol
or
add
push
testb
cmp
xchg
loopne
xchg
xchg
xor
jecxz
jge
jmp
out
xchg
adc
sbb
test
xchg
lds
mov
lock
inc
imul
mov
push
test
xchg
push
mov
imul
jno
jle
ret
push
xlat
stos
adcl
les
repnz
notl
outsb
adc
push
repz
or
vpxor
ja
aaa
bound
test
mov
in
xchg
dec
inc
mov
mov
mov
and
mov
mov
cld
mov
fimuls
pop
pop
or
xchg
cwtl
ds
mov
mov
call
cwtl
cmp
dec
ret
pusha
jmp
adc
aad
movsl
or
push
scas
aam
xchg
rcll
or
xchg
inc
push
add
loopne
sahf
push
mov
lea
xchg
jg
cmp
outsl
pop
ret
ret
cmc
push
fwait
xor
xor
movsb
inc
imul
cmp
adc
mov
mov
ret
or
rclb
xor
inc
mov
dec
xor
or
adc
stc
shrl
out
lock
addr16
adc
lret
mov
inc
adc
lret
xor
popa
adcb
aad
push
sub
cmpsl
cmp
jmp
xor
rorb
divl
pushf
mov
mov
inc
sbb
jmp
sub
adc
out
pop
cmpsl
roll
cmp
rcrb
mov
jb
loopne
rol
add
inc
lcall
jb
add
sbb
sti
push
jle
fidivrl
pop
je,pn
or
or
xchg
or
movsl
sti
inc
dec
xchg
fisubs
clc
enter
push
mov
insb
mov
outsb
sub
imul
rclb
push
add
ds
sub
and
fcomip
imul
scas
incl
dec
insb
mov
inc
add
lret
andl
jno
push
jns
repz
cmp
push
adc
xor
mov
dec
aaa
cmp
cmp
cmpsl
std
shll
mov
aaa
jp
xor
sub
into
popa
jmp
pop
arpl
std
outsl
mov
repz
xchg
mov
sub
aaa
mov
push
cli
ds
ds
pop
jae
test
lret
sbb
fidivrs
mov
outsb
push
xchg
pop
adc
add
fwait
inc
adc
mov
inc
loopne
imul
xlat
test
xor
push
cwtl
test
pusha
adc
jg
out
cs
repnz
mov
push
sub
lea
pop
pop
cmp
pop
imul
stc
xor
insb
add
std
repz
push
or
jecxz
mov
jo
jg
and
cld
sbb
cmp
or
cmpsb
nop
pusha
pop
pop
daa
lds
imul
pop
bnd
xor
push
sbb
jle
mov
cmpsl
or
ret
pop
cwtl
negb
out
iret
pusha
pop
call
in
xorb
lcall
cmpl
push
dec
stc
ret
add
out
aas
jp
jno
inc
es
or
insl
pop
clc
add
popf
mov
test
decb
inc
aaa
add
shl
ljmp
cmp
mov
std
test
out
xchg
outsb
jecxz
nop
sub
pop
sbb
xor
xor
adc
xlat
stc
push
xor
cmpsb
or
adc
aad
cltd
cmpsb
into
jl
daa
out
adc
xor
sbb
xor
hlt
inc
push
push
test
or
fbstp
jle
dec
add
mov
mov
push
mov
push
aaa
sbb
loope
lock
cmp
outsb
scas
inc
add
sub
mov
pop
or
cmp
and
mov
fmul
scas
pop
imul
repnz
jg
cmp
jp
test
popf
jnp
gs
ror
mov
mov
out
lods
jmp
xchg
scas
cmp
or
mov
cmpsl
xlat
xchg
test
mov
lea
dec
ja
fmull
add
push
in
cmp
enter
xchg
cmp
not
pop
iret
sbb
adc
or
sub
jle
mov
mov
enter
or
jle
lahf
mov
cwtl
adc
outsl
sbb
aam
stc
fcmove
sbb
jg
cwtl
movsl
icebp
loope
xor
and
xor
push
aam
xchg
jl
add
sub
cltd
sbb
push
imul
ror
inc
ja
stos
and
repnz
lahf
mov
sub
dec
movzbl
lcall
lock
pop
xchg
test
aaa
push
sbb
shll
popa
fistps
js
mov
loope
push
xor
cli
les
fcmovbe
push
rol
cs
in
mov
popa
mov
and
adc
sub
ja
xchg
add
sub
scas
incl
movsl
xlat
loopne
out
push
inc
xor
ror
je
and
insb
fwait
cld
cmp
jno
dec
pop
xchg
add
rorb
sub
xchg
into
mov
mov
inc
xchg
push
adc
mov
cmc
sbb
rcl
and
dec
lea
andb
jl
or
in
lret
xchg
mov
xor
enter
stos
lret
sub
pop
movsl
cmpsb
pop
xchg
jmp
dec
in
daa
ficoms
sti
stc
pop
jne
lock
daa
into
dec
dec
into
insl
mov
jb
cmpl
mov
test
jg
fs
ss
add
and
mov
lahf
push
pusha
sub
inc
daa
xchg
rclb
xchg
je
addr16
mov
pusha
lcall
cltd
push
cmp
mov
sub
out
out
movsb
sub
jno
cmp
jle
stos
mov
xchg
push
xchg
movsl
lret
rcl
xchg
cmp
push
mov
loop
popf
cmp
push
pop
pushf
jge
repz
mov
leave
fs
subl
lret
pop
or
insl
pusha
sbb
mov
cmp
icebp
cs
mov
adc
pop
out
fwait
mov
push
in
dec
daa
adc
jbe
pop
sub
jmp
lret
push
or
push
inc
lods
loop
in
xor
pop
mov
cli
scas
mov
or
sti
pop
xor
inc
pop
into
movsl
sub
add
lahf
jmp
mov
xchg
shlb
xor
std
pop
cmp
xchg
jnp
ficoml
adc
lcall
or
add
flds
xchg
in
and
jg
arpl
nop
sti
and
add
gs
in
jecxz
sub
out
stc
les
imul
mov
shl
mov
push
add
jo
push
pandn
mov
cltd
ja
scas
bound
rcr
sbb
das
jle
into
out
inc
divb
lret
mov
addr16
and
mov
pop
pop
inc
in
sub
inc
or
pusha
jg
popf
pop
mov
test
sbb
scas
jbe
add
cmp
mov
js
pop
and
jnp
sub
leave
pop
jmp
and
sub
mov
ret
jnp
pushf
mov
popf
std
out
sub
cmpsb
rorl
imul
into
cmp
mov
stos
mov
and
xchg
and
add
sbbb
scas
ret
repnz
push
sbbl
leave
ljmp
test
cmp
sbb
shll
stc
xchg
cmp
cmp
fisttps
addr16
jno
jmp
xchg
aad
bound
jae
xchg
sti
clc
mov
fdivrs
cmpsb
or
out
jbe
push
sbb
shrb
mov
push
or
xor
lods
std
call
das
pop
enter
out
lret
xchg
jmp
and
outsb
or
ret
int
inc
lods
adc
adc
iret
sbb
push
cli
pop
inc
xchg
sbb
pop
rcl
add
neg
pop
test
xor
lods
std
adcl
xchg
mov
dec
and
pop
dec
aam
jo
sub
movsb
pop
lea
lahf
out
adc
das
fbstp
arpl
or
mov
leavew
xor
or
pop
cmp
lret
rcrb
cmp
or
rorl
lahf
data16
xor
ja
cmp
jmp
imul
xchg
sbb
cmp
or
imul
jle
mov
mov
fprem1
loopne
notb
inc
jp
jl
sub
mov
mov
jecxz
pop
rcll
mov
xor
add
sbb
test
pop
sub
adc
mov
arpl
push
ficomps
cmc
cmp
dec
mov
inc
mov
aas
lods
push
shlb
ja
and
lock
sahf
ljmp
inc
pop
lods
xchg
jne
push
and
cmpl
mov
cs
pushf
and
sahf
cmpb
mov
jne
cmc
adc
aas
into
add
mov
inc
outsb
arpl
xor
scas
dec
rol
js
out
icebp
pop
push
out
sub
scas
adc
outsb
cmp
das
mov
test
icebp
or
lods
mov
mov
mov
mov
sbb
xor
sbb
or
pushf
mov
idivl
xchg
sbbl
dec
lods
pop
es
push
xchg
inc
shld
cli
insb
int
mov
jne
cmp
dec
cmp
stos
pop
mov
sbbl
shlb
mov
fwait
inc
repz
mov
add
sub
lcall
cmp
es
cmp
ljmp
mov
ljmp
in
jl
sub
xor
aam
aam
int
int
test
aas
sub
ja
cmp
shrb
jae
mov
sbb
push
sbb
mov
mov
lods
adc
in
mov
pop
push
inc
push
fidivl
push
sbb
mov
jecxz
xchg
stos
adc
lcall
jge
lret
adc
jge
mov
fstpt
in
cmp
adc
push
in
sbb
mov
push
sbb
lcall
rcll
xor
lods
shufps
movsl
add
xchg
sbb
sub
mov
push
inc
test
lret
outsl
xor
adcb
jno
adc
cs
add
flds
inc
push
les
repz
pop
sti
mov
ds
stos
jbe
rcrl
xchg
mov
push
push
enter
ficoms
jno
jae
adc
ljmp
scas
push
mov
mov
jg
mov
pop
jmp
sub
mov
ss
iret
addb
popa
push
aaa
mov
loopne
mov
mov
push
mov
hlt
xor
sbb
cmp
lret
test
jne
pop
sub
sbb
in
ret
ja
hlt
addr16
sbb
mov
push
pop
xor
mov
unpcklps
pop
xor
aad
hlt
and
mov
aaa
jg
mov
lods
or
fucomp
scas
adc
dec
testl
out
jnp
nop
xchg
fisubrs
jecxz
jecxz
mull
xchg
sbbb
push
sub
clc
cld
popl
or
mov
cmpsl
mov
and
addr16
cs
hlt
pop
aas
int
and
mov
cltd
inc
mov
push
adc
scas
stc
ret
add
jno
mov
popa
inc
mov
jno
cs
or
mov
fisubs
or
outsl
in
mov
mov
outsb
mov
sub
mov
fcomps
jg
or
add
mov
and
shrl
add
les
sub
movsb
push
arpl
jo
or
fiaddl
inc
xor
mov
xchg
cmp
adc
xchg
push
test
idiv
ret
and
xchg
push
and
lock
repnz
loopne
adc
movb
icebp
dec
sbb
stos
aam
xchg
jle
xchg
cld
aaa
lret
mov
push
inc
divb
les
sahf
rcl
jnp
lahf
mov
jg
divl
loopne
pop
imul
add
fdivl
shlb
mov
dec
icebp
test
cmpsl
xor
jg
loope
dec
sub
lea
fs
testb
jl
jns
cmp
imul
cmp
test
loopne
scas
in
jb
je
mov
lods
xor
cmpl
xor
icebp
xchg
mov
cmp
lcall
scas
cmp
pushw
dec
dec
scas
ja
movsl
js
je
pusha
or
mov
adc
mov
outsl
nop
out
pop
dec
cmc
mov
adc
mov
cli
lret
and
std
adc
jb
lods
lea
out
iret
addl
cli
mov
subb
xchg
xchg
inc
or
stos
stos
push
push
jb
lret
jl
jmp
mov
sbb
push
daa
lcall
xchg
mov
aaa
sbb
or
inc
cmp
aam
divl
stc
pop
lcall
mov
cmp
pop
mov
push
or
ljmp
fs
push
fists
leave
out
inc
push
lret
test
mov
pop
idivb
xchg
loop
or
aas
mov
cmp
jnp
pop
mov
jmp
push
xchg
lcall
sbb
xchg
and
stc
fbstp
fnstsw
outsl
ret
leave
push
lea
push
jnp
mov
mov
mov
sbb
pop
mov
dec
inc
inc
jne
cld
cs
fsubr
jle
pop
or
cmp
lcall
int
fsubrp
es
push
lock
jle
and
sub
fsubrs
jb
das
xchg
fcompl
and
adc
ret
mov
push
ret
fs
fimull
outsb
sbb
or
pop
sbb
lcall
add
dec
push
lds
lea
rcrb
mov
popf
lahf
mov
xchg
add
push
push
pop
push
loop
nop
mov
xchg
mov
imull
lock
xchg
pop
rclb
push
push
dec
cwtl
daa
mov
jae
sub
pusha
push
push
frstor
int3
mov
in
adc
push
jae
das
cmpsb
cmpsb
jnp
subb
push
test
pop
pop
jmp
aam
sbb
loopne
rcl
or
jo
add
inc
add
out
mov
xchg
jno
aam
out
orl
mov
add
icebp
rcll
inc
mov
mov
addl
int3
in
add
cmp
insl
cmp
dec
xor
mov
and
xchg
lret
pop
mov
in
sbb
xchg
out
fstpt
movsb
or
sub
fnsave
jg
add
fstps
adc
mov
jnp
xor
jnp
je
test
fdivp
or
sbb
ljmp
pop
mov
shr
sbb
popf
and
mov
cmp
int3
mov
mov
lods
daa
rclb
pushf
test
ja
jnp
ljmp
push
movsb
stc
cmp
jns
repnz
test
xlat
fildl
in
fnstsw
jbe
mov
js
ds
or
pop
mov
das
xchg
jae
xchg
push
pop
aaa
je
mov
sar
push
cmp
jge
xor
imul
mov
inc
adc
hlt
popf
jl
jmp
inc
test
jg,pt
test
shlb
fs
pop
lcall
dec
add
aad
es
or
int
fsubr
inc
repnz
loop
jle
cltd
inc
fwait
ret
push
adc
imul
mov
push
repnz
rorl
pop
push
and
push
aaa
jle
lds
lret
rolb
int
jmp
fiaddl
and
loope
fbld
cmp
out
cmp
add
xchg
jp
aad
push
dec
je
push
repz
sub
sub
jl
mov
inc
add
cli
mov
xchg
mov
aaa
sbb
mov
push
jnp
sub
inc
mov
sbb
jl
sbb
sub
ss
rolb
sarb
je
jl
insl
and
sahf
repnz
popa
xor
test
sbb
inc
iret
sbb
push
mov
push
inc
andb
iret
adc
test
int
mov
sub
vmulss
jns
sbb
ljmp
pop
mov
cli
rorb
cwtl
ret
fcoms
xor
adc
js
pushf
testb
es
lods
sub
xchg
pop
pop
loope
mov
sbb
xchg
insl
and
sahf
bound
sbbl
dec
sub
jecxz
stos
xorl
jae
cmp
sub
mov
add
in
pop
aam
shl
sbbb
lahf
dec
or
or
mov
and
inc
jns
jno
lret
aam
fdivrp
stos
flds
jbe
clc
mov
jbe
fwait
pushf
jnp
in
pop
into
es
push
fdivp
cmp
ja
inc
les
jge
jno
adc
add
movsb
cmp
movsb
cmpsl
repnz
pop
shrb
pop
mov
xchg
les
jne
out
inc
or
ja
movsb
xlat
lahf
aam
ja
aad
data16
jne
or
mov
jle
jmp
jno
mov
dec
ret
sbb
adc
adc
inc
pop
out
cli
mov
jmp
lret
jne
addb
cmp
js
daa
int
test
sbbl
mov
out
mov
lock
icebp
into
hlt
mov
pop
aas
and
jecxz
cltd
jp
xchg
push
mov
jo
lahf
shlb
daa
neg
xchg
adc
add
jno
leave
add
xchg
rcrb
xor
ja
mov
cmp
adc
cmp
jp
bound
rcrb
loop
leave
mov
outsb
or
ljmp
dec
cmp
cmp
sbb
xchg
dec
pop
adc
movsb
pop
sub
jmp
rolb
push
out
ficoml
loopne
sbb
push
mov
mov
int
lds
jns
inc
arpl
loope
les
inc
pop
cmp
fcmovne
lahf
imul
jmp
shll
aad
lcall
lcall
push
loopne
xchg
adc
orb
jmp
mov
ret
imul
int
or
testl
lock
push
and
fwait
mov
jle
lret
mov
pusha
inc
jg
imul
test
cmc
andb
adcl
xchg
insb
lret
shlb
or
sub
adcl
sub
add
inc
popf
jno
xchg
jne
repnz
fimull
sub
popa
pop
in
jnp
or
lods
cmpsl
mov
jbe
pop
sub
or
ljmp
or
xchg
mov
test
inc
xor
and
cmpsl
push
sbb
sub
mov
dec
push
nop
fcmovne
mov
test
pop
jl
mov
fcomi
test
in
or
jp
pushf
push
ss
dec
cwtl
std
sbb
cli
mov
mov
pop
sbb
rcrl
sbb
xchg
stos
mov
sti
sbb
stos
push
adc
xor
mov
sub
inc
mov
enter
in
lcall
cmp
push
sbb
in
mov
dec
fdiv
push
sahf
movsl
xchg
pop
cld
mov
mov
or
fs
int3
in
aam
hlt
xor
and
stos
andl
mov
or
jnp
inc
movl
and
xchg
cmp
js
ficoms
arpl
leave
mov
inc
inc
std
or
shll
push
leave
adc
in
loop
jns
mov
xchg
orb
test
ds
mov
loopne
push
and
add
or
pop
aas
or
inc
outsl
lock
addr16
jns
or
nop
push
adc
jg
fimuls
mov
fidivrs
aaa
hlt
in
mov
jp
xchg
gs
int3
mov
sbb
imul
data16
stc
shrl
or
sbb
jge
pop
in
in
nop
lods
cmp
inc
ss
pop
aas
sbb
scas
and
mov
pop
pop
fisttpll
lahf
jnp
gs
fcoms
mov
xor
shll
leave
repnz
scas
fidivs
insb
cmp
push
pop
mov
mov
adc
repz
mov
adc
mov
loopne
mov
cmovnp
dec
xor
add
mov
sub
mov
ror
dec
dec
cltd
jmp
cwtl
inc
mov
std
jg
mov
arpl
mov
loopne
data16
adc
adc
jge
pop
xor
xchg
mov
shll
test
pop
je
aas
test
ds
and
ret
test
movsb
fildl
mov
inc
or
lret
iret
pop
lcall
mov
test
hlt
push
pop
dec
add
sahf
rcr
movsb
sub
inc
mov
testb
cli
nop
inc
jge
push
push
xor
adc
jne
sub
adc
push
clc
lock
xchg
js
xchg
in
adc
lds
dec
push
pop
mov
and
movsb
ja
or
pcmpgtw
into
and
imul
popl
in
xor
test
cmp
das
repz
aaa
mov
arpl
ret
sub
jmp
jae
test
rorl
sbb
sbb
cmpsb
xchg
sub
mov
mov
sbb
mov
in
mov
mov
fisubrs
xchg
dec
out
ss
cmp
in
mov
stos
add
in
pop
int
jge
xor
pushf
xchg
adc
movsb
pop
gs
les
sbb
fsts
dec
mov
pop
jecxz
loope
stc
ret
lcall
mov
sub
lods
clc
xor
dec
es
add
dec
insl
daa
stos
enter
out
fbld
inc
mov
dec
pop
daa
addr16
cmc
jbe
cltd
jecxz
jmp
nop
wrmsr
stos
adc
and
cmp
lcall
xchg
stc
inc
outsl
push
fiadds
mov
sbb
outsb
add
out
and
jnp
cmc
xchg
mov
ror
or
mov
out
dec
imul
push
dec
ficoms
dec
and
loopne
dec
scas
mov
lds
or
lds
jb
jnp
ljmp
sbbb
std
jge
push
adc
add
or
in
mov
pop
loope
clc
dec
jmp
cmp
push
jmp
insb
movsb
test
repz
add
sbbb
in
jmp
sbb
jp
cmpsl
shll
iret
fwait
cmp
push
xor
mov
hlt
shll
and
rcl
add
cmp
or
cmp
aas
fsub
sbb
cmp
pop
pop
dec
cmp
pop
mov
adc
outsl
stc
cmp
mov
jecxz
jnp
mov
cli
add
jecxz
or
sbb
pop
cmp
xchg
xchg
mov
sub
popa
jmp
pop
mov
nop
cli
int
push
imul
pop
jp
xor
mov
lret
cmpsl
or
mov
stos
cmp
mov
stos
mov
lret
movsb
add
jb
loopne
nop
pop
inc
fistpl
jmp
int3
test
popa
jl
jle
xchg
popf
and
sbb
aam
test
cs
das
insb
push
test
jae
dec
lds
aad
jne
enter
lods
inc
leave
push
inc
fstps
shll
mov
int
mov
jg,pn
or
dec
and
mov
jbe
adc
mov
shrb
test
xchg
out
adc
int
out
and
adc
aas
and
into
stos
test
xchg
aad
xor
push
adc
push
jge
xlat
in
pusha
push
push
fwait
pop
cmpsl
inc
icebp
rcr
pop
xchg
fistl
pop
mov
cli
jmp
and
push
aad
hlt
ljmp
cmp
jb
jne
ficompl
negl
outsl
push
arpl
ret
outsb
leave
sub
mov
jbe
add
mov
pop
sarb
jae
xchg
int
sbb
jecxz
cmp
mov
jns
and
cmc
pop
mov
inc
repz
fucomp
lret
inc
arpl
mov
jmp
inc
dec
jmp
mov
or
jl
std
inc
mov
xchg
arpl
icebp
ja
or
xor
pop
xchg
fsubs
pop
shll
int
add
cmpl
clc
inc
pushf
push
sub
mov
fs
dec
mov
inc
and
xchg
adc
movsl
adc
mov
pop
out
addb
fsubr
add
negb
test
subb
sub
bswap
sbb
xor
out
jle
jnp
dec
jp
stc
movsb
gs
pop
pop
and
xor
inc
sti
mov
and
xchg
cmp
cmp
out
leave
fsub
adc
mov
push
add
push
inc
xadd
mov
testl
pop
and
push
xchg
lahf
xchg
loopne
shrb
out
add
mov
and
andl
jne
inc
mov
stos
mov
ljmp
negl
cmp
ss
sub
fcmovnbe
pusha
cmp
push
xchg
imul
push
ja
sub
div
xchg
rorl
test
xchg
lods
add
mov
les
nop
cmpsb
ss
push
mov
cld
xchg
lods
ss
push
test
mov
pop
aas
lahf
pop
adc
push
mov
shrl
mov
add
sub
in
shlb
sbb
pop
inc
sbb
or
jecxz
sbb
out
popw
cmp
add
imul
es
fsubl
inc
popl
das
add
cmc
sub
pushf
xchg
jecxz
cmp
pop
mov
and
jns
imul
loope
add
ret
push
jle
push
orb
cmp
mov
xor
rclb
rorb
das
xchg
push
pusha
jl
rolb
orb
push
sub
push
sbb
arpl
je
in
lcall
sahf
xor
shll
cs
jl
xchg
cmc
in
xchg
loopne
dec
pop
push
cmp
jo
call
ds
and
xorl
xchg
in
test
adc
xor
push
das
jo
adcb
popa
push
fimull
lods
imul
push
daa
fstps
rcll
rcrb
shll
cs
mov
cli
mov
mov
scas
lahf
jle
loope
adc
push
test
mov
out
adc
stos
adc
and
dec
imul
rorl
iret
push
test
stc
aas
into
mov
mov
out
inc
mov
cmp
aad
jb
inc
push
dec
fldl
fisubrs
xor
cmp
pushf
mov
jo
addr16
pop
cs
dec
stos
aam
cmp
xor
repnz
fcompl
jmp
jl
sub
xchg
cli
outsl
cmpsl
mov
push
rol
xlat
push
lds
push
xchg
stos
movsb
icebp
sti
inc
xchg
cmc
dec
sahf
mov
adc
mov
cmp
pop
or
in
je
xor
arpl
bound
pop
imul
pop
fisubrs
mov
aam
adc
mov
ljmp
scas
sbb
xor
es
xor
pusha
call
adc
add
mov
xchg
orl
inc
ss
cmc
lds
add
jb
mov
into
push
sub
push
mov
and
mov
lds
out
sbb
or
int
mov
mov
xor
es
addr16
mov
ss
not
inc
mov
pop
mov
popf
and
data16
fsubp
and
enter
clc
or
jo
fyl2xp1
and
dec
ja
dec
sub
fistpll
pusha
push
xchg
dec
sub
pusha
aad
popa
push
or
ljmp
aad
int
push
and
scas
pushf
cmp
into
in
push
rol
jecxz
push
ljmp
mov
lea
mov
lods
xchg
cmpsb
addr16
cld
push
xchg
ret
xchg
cmpb
sub
test
je
push
mov
jecxz
xor
xor
sbb
leave
sub
js
sub
test
jb
popf
mov
movsl
mov
nop
fiadds
int3
cmpsl
sub
push
enter
xor
cmc
mov
cmpsl
xchg
fs
sub
fcmovbe
xor
jbe,pt
aad
xchg
lods
data16
fdivrl
popf
sbb
mov
jno
mov
pop
mov
pop
sbb
jmp
mov
sub
dec
cltd
inc
addl
xchg
out
jb
or
xor
hlt
and
push
adc
sbb
inc
les
arpl
mov
and
test
sub
ja
lock
and
mov
pop
push
xor
fistps
jne
fists
xchg
cmpsl
fsubrs
pop
mov
clc
mov
mov
add
inc
subb
int3
inc
mov
ret
xor
push
clc
inc
add
add
jno
stc
pop
loop
sbb
movsb
jp
cmc
imul
lods
xchg
jmp
stc
mov
call
std
loop
push
xchg
push
push
cld
push
or
mov
dec
lea
mov
je
es
push
int3
in
data16
mov
pop
xor
inc
lcall
shr
ds
adc
sbb
or
xlat
sbb
sub
popa
xchg
into
out
jle
xor
adc
xchg
fwait
jne
xor
push
mov
xor
shl
cmp
js
sub
jns
in
xchg
sbb
and
fdiv
jle
lea
aaa
rcl
mov
out
enter
xor
and
add
or
jmp
mov
mov
lea
mov
or
adc
lods
into
aas
push
push
or
xorl
gs
aam
inc
js
cmp
xchg
pop
or
ja
push
push
push
aaa
push
fadds
inc
lea
push
xchg
mov
cmp
mov
mull
pop
pand
pusha
subb
cmp
out
mov
jge
stos
push
shl
inc
add
pop
sahf
sbb
in
enter
lea
das
sbb
pop
mov
and
sarb
out
push
inc
xor
and
insl
bound
nop
jp
push
lcall
add
jecxz
arpl
inc
fdivrs
out
roll
cltd
sti
outsb
or
loopne
push
and
mov
scas
and
dec
xor
lcall
or
or
inc
xchg
iret
jmp
mov
jp
lds
and
xchg
callw
sbb
add
push
sbbb
jb
pop
in
lds
lea
xor
rorb
pop
aas
pop
outsl
or
fs
xchg
sahf
xor
mov
cmp
push
ret
les
mov
enter
ret
or
and
test
aam
int3
stos
repnz
orl
in
adc
sti
and
lcall
push
clc
lods
mov
js
push
out
rcr
xor
aam
push
shll
ds
add
icebp
shrb
in
push
dec
adc
cmp
mov
adcb
mov
adc
aaa
pop
jmp
adc
jl
xchg
mov
mov
insl
mov
movsb
and
outsl
xchg
xor
shl
mov
xor
fcmovnb
popf
pop
dec
and
das
jge,pt
mov
sbb
data16
lcall
sti
cmc
pop
or
sbb
push
js
mov
mov
adc
inc
in
notl
dec
sbb
mov
and
testb
adc
or
and
fdivl
mov
sbb
inc
insl
inc
mov
hlt
mov
xchg
cld
jp
dec
dec
pop
lcall
jb
insl
dec
xchg
add
dec
mov
pusha
dec
ja
sub
cwtl
fldcw
icebp
inc
sub
dec
mov
push
dec
mov
jp
fisubl
in
or
aam
or
jb,pn
mov
xor
enter
dec
pop
xor
pop
pop
mov
jmp
fs
or
and
jp
dec
daa
jmp
dec
loopne
sbb
cmp
rclb
mov
and
cmp
inc
scas
mov
cmpsb
iret
leave
sub
ret
insl
or
popf
mov
adc
out
xor
jae
mov
out
lcall
inc
jne
sub
fists
mov
inc
push
inc
xchg
fimull
push
addb
scas
mov
lds
test
out
loop
xor
sub
pop
push
xor
cmpsb
enter
icebp
bound
movsl
fs
add
aam
and
cmp
in
stc
imul
sub
mov
in
les
mov
scas
in
std
lock
adc
stc
bound
add
mov
imul
jmp
xor
jns
inc
das
fisubs
cmp
lcall
and
jo
daa
jp
inc
std
jl
inc
cmp
xlat
jle
mov
in
pop
xchg
shl
jno
or
dec
sub
xchg
push
sbbb
daa
fdivl
fists
jmp
sar
inc
xchg
jbe
dec
mov
pop
lret
xor
iret
pop
mov
roll
daa
mov
mov
mov
lock
loope
mov
xchg
mov
js
fiaddl
mov
dec
lea
out
out
das
xor
pop
or
fidivs
xchg
mov
data16
mov
inc
xchg
loopne
cli
outsb
mov
and
pop
pop
popa
jg
or
push
xchg
jns
idiv
inc
andl
and
out
dec
mov
adc
outsl
mov
add
lret
cmp
js
mov
xor
inc
xchg
mov
outsb
push
xchg
aas
mov
mov
out
xor
sub
or
jl
inc
daa
sub
and
outsl
and
push
push
xchg
mov
sbb
mov
mov
or
cmc
inc
lock
jns
mov
add
inc
aad
lahf
sub
test
and
daa
mov
popa
jp
cmpsb
lahf
adc
insb
sbb
cld
js
call
testb
adc
pop
daa
sub
data16
jae
sub
in
sbb
gs
stos
ret
fsubl
cmp
dec
std
push
addl
push
sbb
jns
ljmp
push
pop
cwtl
add
sbb
sub
fistl
dec
push
and
xchg
inc
push
or
xchg
push
mov
jno
mov
sti
and
addb
inc
inc
sbb
repz
sbb
add
adc
xchg
stos
aam
stos
fs
inc
push
push
xor
xor
xor
add
sbb
xorl
push
pop
arpl
or
subl
adc
imul
and
adc
jecxz
aaa
aad
fsubr
jmp
cmpsl
dec
push
xor
icebp
scas
xchg
and
ds
xor
adc
aaa
std
insb
mov
loopne
pop
adc
jb
push
cwtl
inc
shll
sbb
xor
cmpsl
sub
pop
cmp
js
insb
into
add
and
push
sti
xchg
repz
mov
sti
jmp
xchg
mov
or
push
sub
push
adc
xor
sti
or
and
pop
rcr
mov
loopne
ljmp
or
xchg
or
stos
inc
push
push
decl
mov
mov
sahf
push
sub
sub
push
mov
sbb
mov
fdivp
lahf
inc
adc
mov
jne
cmc
test
inc
inc
dec
je
sub
add
fs
mov
sub
mov
mov
adcb
stos
or
sbb
add
jmp
push
mov
scas
add
lahf
dec
es
adc
xor
dec
pusha
push
xor
pop
stc
push
add
jecxz
push
arpl
addr16
idivl
and
stos
movsl
sbb
daa
repz
push
mov
push
sbb
sub
dec
pop
mov
sahf
push
add
or
in
mov
push
xchg
dec
iret
push
push
outsb
add
xor
jno
bound
lret
scas
adc
fmull
icebp
xor
jae
jecxz
push
mov
sahf
fs
mov
movsl
pop
add
cs
daa
mov
imul
xchg
cmp
addb
lock
xor
push
adc
xchg
jns
and
movsb
sub
popf
nop
xchg
pushf
les
xchg
daa
pop
call
inc
loope
or
sbb
add
jge
xchg
mov
out
xchg
cli
lahf
jno
sub
cmp
jmp
inc
inc
push
push
mov
adc
es
jle
xor
pop
adc
les
int3
push
call
mov
jb
push
sbb
add
mov
sub
sbb
movsb
mov
cmp
dec
jecxz
lock
mov
fwait
mov
lock
push
cmp
pop
repnz
xlat
cltd
in
outsb
jp
lret
jmp
fwait
loopne
scas
mov
mov
jbe
push
insb
cs
pop
in
pop
sbb
add
enter
clc
insb
lahf
jb
xchg
bound
jge
and
xchg
insb
pop
js
cld
insl
add
mov
sub
rcrb
addr16
mov
sub
cmp
ja
or
lcall
cmp
xor
popa
dec
fwait
xor
shl
imul
insb
add
inc
or
outsb
push
call
lea
cwtl
shlb
adc
dec
lret
fnstenv
and
lock
imul
push
lahf
adc
push
icebp
int3
lds
add
clc
xor
jg
cmp
mov
out
mov
mov
push
ss
scas
or
mov
fmuls
mov
jae
lcall
call
sti
adc
adc
roll
cmpl
cmp
shll
popf
or
pop
xlat
dec
cmp
out
jbe
mov
lea
loope
or
xchg
xchg
xchg
nop
jnp
outsb
iret
mov
fwait
xor
xor
mov
dec
adc
xchg
sub
pop
fnstsw
mov
inc
adc
f2xm1
xchg
xor
jae
loope
dec
std
rolb
bound
mov
or
andl
sarl
jmp
mov
pop
push
pop
call
mov
inc
ljmp
mov
jne
out
or
stos
loopne
mov
lahf
js
push
pop
arpl
sbb
push
inc
push
cmp
mull
mov
in
pop
shll
adc
es
mov
cmp
jle
dec
loop
inc
push
mov
sub
movsl
sbb
ja
test
test
shlb
sbb
push
test
mov
jmp
subl
jbe
pushf
popa
adc
sbb
inc
lcall
inc
push
sbb
rcll
add
cmpsl
adc
fs
in
jg
xor
jo
enter
cld
call
pusha
clc
cwtl
push
scas
push
test
cmpb
and
cmp
pop
lahf
or
fsubs
arpl
dec
in
pop
gs
dec
in
daa
mov
ss
jg
cmp
bound
sbb
xchg
decl
xchg
pop
mov
fimull
and
out
icebp
icebp
jle
sub
cmp
inc
pusha
movsl
icebp
shr
icebp
aaa
jno
lds
adc
mov
int
xor
dec
lea
add
lcall
enter
xchg
sub
pusha
sbb
js
xor
lds
inc
sbbb
ds
inc
adc
xlat
test
das
rcll
or
mov
xor
xor
inc
jne
scas
das
lods
lret
call
les
jne
xor
stos
add
sbb
pop
pop
stos
inc
push
xor
loope
mov
xor
scas
cmp
pop
fwait
add
jbe
xor
jmp
cmp
or
movsb
pop
jg
adc
pop
cltd
rcr
jp
notb
push
adc
cli
xor
inc
scas
lret
in
pop
cmp
cltd
ljmp
xchg
push
jp
pop
inc
xor
lea
mov
mov
loope
add
sarl
add
int3
sbb
pop
jmp
stos
xchg
jle
jnp
bound
aam
arpl
rcr
sub
mov
inc
xor
pop
sbb
mov
fcomp
mov
ret
ja
or
or
movsl
test
inc
add
cwtl
push
fucomp
mov
scas
movsl
push
bound
pop
lods
jl
push
ljmp
cld
xchg
imul
xlat
jae
pop
mov
fcomi
aas
out
movsl
and
test
rcll
mov
lahf
add
out
imul
add
popa
sbb
gs
nop
mov
icebp
call
push
scas
ljmp
das
mov
or
insb
xchg
mov
adc
inc
insl
cmpsb
jmp
xchg
fs
jb
pop
sub
mov
cmpsb
dec
jecxz
inc
icebp
mov
mov
not
imul
adc
sub
ret
add
sarb
cmp
mov
pushf
sbbb
lret
rcl
fsubrp
pop
insb
lods
adc
lock
cltd
std
aaa
mov
push
jmp
cmp
pop
incl
sbb
dec
cmp
fwait
fwait
push
push
push
fldt
cmp
jp
data16
aas
dec
je
adc
jg
pushf
dec
sbb
imul
add
push
cmp
arpl
push
lahf
cmp
sbb
dec
xor
inc
inc
and
pop
fldcw
ret
dec
pop
pop
xor
cmp
add
imul
jb
dec
xor
outsl
mov
inc
and
xchg
or
gs
xchg
sub
sbb
jae
rsm
push
test
lret
pusha
in
clc
mov
xor
les
nop
shlb
mov
push
out
dec
fdivs
or
mul
nop
xor
lods
pop
imul
push
push
push
insl
fisttpl
or
cmp
mov
ljmp
xchg
sahf
pop
mov
cwtl
xchg
cmp
sti
jmp
shrb
ret
outsl
jl
arpl
iret
out
jae
aaa
jg
push
adc
out
aaa
adc
std
test
fdiv
mov
aam
mov
movsl
shrl
into
jmp
pop
mov
jle
sbbb
insb
idiv
les
jno
add
xor
shl
ja
sub
fildl
lods
ret
cmpsb
aas
stos
xlat
cmp
popa
dec
hlt
cmpb
mov
cmp
xchg
test
loope
lock
sbb
int3
outsl
outsl
in
in
mov
dec
xchg
out
pop
loopne
mov
loope
ljmp
arpl
jp
dec
lret
loope
imul
xor
mov
adc
fimuls
insl
loop
jecxz
jmp
push
rcrb
in
and
shrb
adc
push
dec
stos
mov
in
movsl
push
cmc
stc
add
add
dec
sbb
push
in
sbb
add
arpl
dec
clc
cmp
push
mov
scas
push
inc
ds
andb
add
xchg
pop
arpl
cmpsl
xor
xchg
adcb
mov
imul
out
xchg
aaa
jno
cwtl
lods
sbb
sbbb
pushf
inc
fsubrs
aaa
pop
scas
cmp
jg
push
cwtl
lahf
or
push
in
mov
lahf
push
int3
leave
mov
mov
fisttps
out
mov
fadd
jge
cmpsl
outsb
push
dec
test
cli
clc
jmp
push
add
sbb
lock
sbb
bnd
pop
cli
sbb
sahf
or
cmp
sub
dec
adc
adc
add
inc
nop
out
and
inc
dec
test
pop
popa
out
and
stos
jle
loope
pop
repnz
add
push
mov
sub
mov
jns
bound
divb
es
imul
enter
push
ret
adc
testb
inc
mov
mov
xchg
push
cltd
pop
xor
and
fdivr
mov
shll
xchg
fnsave
mov
sbb
clc
cmp
adc
lcall
xchg
bound
ss
and
loope
fldt
movsb
jge
outsb
and
pop
cmp
dec
mov
scas
mov
cmp
into
icebp
mov
cmp
push
mov
mov
mov
jg
fwait
out
sub
rolb
cmp
xor
sbb
push
xor
pop
into
mov
mov
out
jbe
and
sbbb
insb
cs
dec
jp
cmc
push
sbb
cmp
mov
pop
fnstsw
cmp
fisttps
cmp
inc
out
cmp
test
stc
sbb
imul
out
popl
cmpsb
rep
mov
rclb
or
jns
div
es
cmp
sub
or
ss
rorb
xchg
push
popf
mov
sahf
inc
inc
push
scas
jmp
cmp
into
stc
or
or
jb
dec
xchg
enter
and
xor
loopne
xchg
test
je
lahf
inc
mov
outsl
test
mov
mov
sub
movsb
leave
push
mov
ret
loopne
jmp
out
adc
ret
in
cmc
mov
out
dec
test
or
add
push
push
dec
fcomps
sbb
mov
insb
xchg
sbb
subl
cld
andl
adc
cli
mov
mov
jmp
lcall
pushf
and
xchg
push
in
xchg
loopne
xor
push
js
movsl
scas
and
push
ficompl
dec
call
test
jns
xor
and
lahf
repz
sub
out
movsb
ljmp
rcr
fnstenv
cmp
aaa
stos
xorl
mov
pop
inc
movsl
pushf
cmp
mov
adc
push
fisubrs
hlt
cmpsb
push
or
sbb
fbld
push
mov
push
test
dec
hlt
fnstcw
ss
jbe
mov
mov
xor
add
scas
mov
test
aaa
in
adc
or
popf
mov
icebp
xor
inc
mov
rcll
xchg
fadd
cs
adc
inc
xchg
sarl
xchg
push
mov
pusha
adc
das
pop
stc
sub
ds
rcll
sahf
add
xor
jp
and
pop
adc
rol
adc
pop
mov
pusha
fcmovnu
push
add
mov
push
movsb
cmp
sbb
repz
ss
daa
mov
push
popa
add
das
adc
cmp
jg
sbb
jne
inc
pusha
sub
jmp
jbe
fs
sbb
cmp
cmp
hlt
stos
inc
test
in
mov
jno
inc
jo
js
jb
test
rclb
jo
rorl
push
push
in
or
mov
inc
push
jle
sarl
adc
stc
insl
adc
push
outsl
negl
int
clc
cmp
xor
out
hlt
ja
test
pop
es
add
push
jne
mov
mov
jge
popl
test
imul
jae
push
daa
inc
nopl
xchg
dec
fst
jmp
sub
xchg
arpl
mov
cmpb
inc
sarl
xchg
push
ss
packssdw
jnp
in
fs
test
push
nop
mov
or
pop
jecxz
rcl
xchg
test
inc
pop
fbld
fisttpl
loopne
xchg
fstpl
stos
mov
ffreep
enter
clc
test
xchg
push
jns
clc
pusha
das
fcomps
imul
inc
test
pop
cmpsb
inc
mov
mov
jne
pop
ret
push
mov
and
daa
or
adc
insl
out
cmpsb
imul
add
in
pop
scas
jne
sbb
lods
int3
rol
pushw
in
movsl
mov
jbe
mov
addr16
mov
xlat
mov
inc
fsts
inc
xor
fidivs
mov
jl
popf
cmc
push
cltd
ds
add
pop
hlt
aam
sbb
push
cmp
dec
push
insb
xchg
jp
lea
pop
cmp
push
js
inc
sub
loop
clc
push
lret
mov
pop
fstp
aad
adc
dec
inc
je
test
shl
clc
lret
loope
pop
sbb
sub
mov
push
les
fisubrs
xchg
mov
mov
inc
jb
loopne
cmp
add
sarb
stos
inc
inc
popf
inc
push
rolb
mov
dec
sbb
dec
pop
xchg
mov
fisubl
daa
fsubl
push
pop
out
pop
mov
dec
push
jg
mov
dec
xlat
and
push
das
push
aas
out
inc
xchg
lods
push
cmc
mov
and
pushf
sbb
out
aam
inc
imul
cmc
push
push
ja
ret
push
jle
adc
repnz
imul
cmpsl
fdivl
lock
inc
or
negl
movsl
jo
lods
inc
lahf
jl
imul
or
stc
push
pop
or
mov
sbb
enter
push
sub
shlb
cmovg
or
mov
imul
faddl
lock
jno
sbb
mov
sbb
inc
cmp
aas
ja
mov
ficomps
and
mov
popf
xchg
ljmp
jge
push
or
sahf
push
push
stos
jp
inc
xor
cmp
je
mov
xor
jae
in
push
push
decb
lea
cmc
lea
inc
fisubl
cltd
adc
psubw
inc
or
push
mov
xchg
mov
jg
mov
std
cmp
adc
sahf
test
jmp
sbb
cmp
stc
and
or
jae
jg
adc
pop
dec
cld
cmc
inc
mov
sub
mov
mov
jmp
mov
cwtl
cmp
dec
dec
dec
in
mov
notb
adc
jg
push
dec
mov
mov
xchg
pop
mov
out
sub
sub
xchg
cmp
cmpl
int
sub
pop
bound
loopne
into
sbbl
fwait
xchg
imul
lcall
mov
or
push
push
xchg
out
mov
jae
add
icebp
lds
js
xchg
out
lcall
in
test
stos
dec
and
pop
adcl
mov
pop
stos
push
fsubl
pop
mov
lea
mov
sbb
fnstenv
jbe
sbb
inc
in
frstor
popf
inc
in
aas
jb,pt
lcall
add
sti
movsb
inc
fisubs
xorl
aad
dec
inc
fadd
sub
loop
jmp
push
mov
jge
dec
or
jmp
mov
sbbl
dec
push
xor
or
mov
mov
mov
cmp
insl
mov
into
movsl
cltd
push
dec
push
fsubr
popf
add
mov
addr16
clc
mov
push
and
clc
mov
mov
mov
xor
lahf
mov
lcall
ficomps
xchg
or
mov
jb
repz
pop
sub
or
popf
repz
sbb
sbb
pop
push
mov
fwait
repnz
add
and
xlat
mov
xchg
inc
add
test
sbb
jo
and
jmp
xchg
outsb
or
lret
xor
pop
cmp
xchg
insl
rclb
shll
cmp
mov
jne
inc
psrlq
sbb
popf
push
xchg
mov
mov
stos
sub
cmpsb
cwtl
and
push
test
add
fs
xchg
jl
push
ss
shrl
iret
rorl
test
fisubrs
mov
push
loop
or
rcl
sbb
xchg
insb
ja
repnz
and
repz
fisubrs
bound
test
pop
xor
stos
or
loope
or
inc
mov
push
flds
cmp
cmp
xchg
mov
and
jl
outsl
pop
pop
or
stc
outsl
test
jp
rolb
mov
or
iret
inc
cmpsl
xchg
movsl
enter
pushf
inc
xchg
jecxz
and
mov
call
call
and
fcomps
int3
inc
cmp
fwait
sbb
call
pop
xchg
outsb
or
or
mov
aam
rclb
dec
cmpb
pop
arpl
or
into
cmp
clc
aam
outsb
and
dec
sub
sub
xor
cmp
xchg
subb
stc
mov
xor
into
xchg
cmpsb
xorl
mov
push
push
lret
push
xor
inc
cli
add
jne
sub
icebp
stos
ret
mov
in
pop
mov
rcll
jae
jecxz
xchg
lcall
mulb
mov
aaa
push
add
es
mov
daa
icebp
orb
xlat
subl
dec
imul
rcll
aaa
bound
cpuid
and
xor
mov
xor
dec
iret
inc
lods
hlt
insb
cltd
adc
fstpt
pop
mov
out
sub
add
sbb
icebp
dec
adc
xchg
add
stos
inc
pop
xor
xor
push
movsb
into
lcall
out
push
lret
in
pushf
clc
xadd
fistpll
in
push
loope
xor
loopne
pop
ljmp
loope
lar
bound
ss
sti
mov
sbbb
fnstsw
adc
lret
pop
test
pop
sub
push
out
cmp
pop
loop
in
js
dec
cmp
sub
ret
hlt
push
es
lock
lret
lcall
push
pop
ja
pusha
int
cmpsb
push
sti
rcll
xor
loop
out
stos
in
lock
scas
leave
test
pop
lods
imul
mov
ds
fxch
std
ljmp
xchg
inc
mov
gs
mov
outsb
jne
mov
cmp
mov
jmp
pusha
jle
xchg
arpl
lcall
dec
mov
or
dec
ja
xchg
enter
or
imul
jnp
sarb
xchg
xchg
icebp
mov
ds
fsubr
mov
or
inc
movsl
mov
hlt
lret
pop
add
fidivs
push
dec
aaa
jge
and
pop
dec
inc
mov
mov
add
and
add
roll
rolb
mov
dec
test
cld
iret
nop
xchg
leave
aad
js
rcrb
dec
mov
js,pn
xlat
gs
outsb
loopne
cmpsb
mov
in
leave
outsl
mov
fildl
cwtl
ret
call
xchg
test
push
mov
xor
imul
xor
add
lret
movb
inc
sbb
dec
adc
push
inc
movsb
dec
iret
xchg
dec
jle
lahf
jno
popa
int
push
sub
stos
push
mov
out
mov
popf
dec
sub
rcll
push
xchg
mov
sbb
pop
push
mov
mov
stc
flds
cmc
or
and
test
movsl
arpl
and
mov
mov
push
add
sahf
mov
pop
adcl
rclb
sti
push
dec
cmp
xor
sub
adc
insb
repz
in
jno
cmp
sbb
sbb
test
mov
cmp
adc
test
sbb
lods
ja
orl
cli
xchg
sub
xchg
dec
cmc
gs
xor
mov
jle
int3
not
lods
pusha
adc
lcall
in
sahf
lods
dec
jo
not
mov
cs
outsb
dec
pop
adc
dec
cld
std
bound
mov
xor
pop
push
in
sub
push
jecxz
push
idiv
popf
sbb
cmp
jbe
into
pop
pop
sahf
push
cwtl
aaa
into
filds
popa
les
hlt
sub
mov
sahf
fcoms
hlt
scas
xchg
mov
sub
int
fcmovnu
or
inc
jo
loope
push
mov
outsb
addr16
outsl
test
sub
mov
stos
dec
xor
pop
adcb
sub
inc
subb
cmp
pop
sarl
scas
add
xor
das
sub
pushf
inc
jns
cs
ljmp
sarl
sbb
xchg
pop
mov
jmp
in
pusha
add
xor
ljmp
fs
mov
or
test
fst
sbbl
outsl
jmp
cmp
daa
mov
xor
inc
daa
sub
xor
js
stos
fsubp
je
and
mov
pop
mulb
inc
pop
adc
and
adc
xchg
add
imul
xor
cmpsb
fsubl
mov
fdivs
push
jae
jno
rclb
xchg
pop
add
xlat
jp
aad
pop
pushf
test
mov
xor
shl
into
aam
jmp
lret
jl
arpl
mov
pop
shlb
or
xchg
jns
xlat
cmp
lods
and
adc
mov
fidivl
lds
push
cmp
xchg
popa
inc
outsb
js
lea
outsb
mov
fisttpll
mov
cmc
cmp
add
dec
and
add
scas
jns
mov
imul
lds
int3
ficomps
mov
lods
pop
ds
and
iret
or
outsl
cli
fwait
xchg
jge
jge
cmp
xor
insl
sbb
lds
mov
xlat
insl
pushf
stos
xlat
push
xchg
inc
sbbb
in
mov
out
inc
imul
add
inc
sub
aad
jbe
cmp
cwtl
jmp
mov
jmp
cmpsl
add
call
test
cmpsb
mov
enter
cwtl
sti
jae
xor
sahf
pop
stos
daa
pushf
out
and
adc
fmul
mov
das
aam
daa
adc
lahf
mov
xor
out
push
repnz
out
xchg
popa
clc
xor
ds
popa
mov
outsl
stc
pushf
dec
mov
mov
pop
adc
cs
out
aas
ss
mov
in
mov
icebp
mov
or
xor
scas
inc
fadd
xchg
cmp
sar
addr16
and
std
fsubl
insb
dec
sti
aam
insl
push
das
jle
stc
and
and
andb
sbb
sbb
jbe
mov
in
fiadds
lods
pusha
test
fs
and
xchg
pop
movsl
or
pop
sub
fmull
jg
outsl
sarb
scas
mov
sti
std
dec
pop
inc
jnp
fcomip
jb
adc
test
sub
push
sbb
jno
sbb
mov
cwtl
jecxz
jmp
pop
xor
rcrb
mov
int
sti
xchg
pop
pop
cmpsl
push
add
xchg
adc
in
mov
cld
mov
push
insl
jmp
stos
out
mov
cmp
sbbl
shr
cmc
sub
fcoml
jge
jne
jae
push
out
in
jo
daa
jmp
aam
clts
and
out
imul
mov
cwtl
jnp
fimuls
lods
stos
fwait
xchg
push
push
xor
addr16
inc
cmp
sub
popf
mov
lods
xor
aad
dec
adc
and
out
mov
out
fsubrl
in
or
cmc
sub
in
std
push
mov
cli
shrl
out
and
push
mov
std
mov
push
cmp
push
adc
loop
rol
add
cmp
jbe
pushf
pop
mov
icebp
dec
std
sbbl
in
xlat
cld
lock
dec
push
insb
add
cltd
sbb
xor
pop
lret
mov
lods
cltd
fmuls
gs
fsubrl
pop
mov
in
hlt
gs
hlt
xchg
cmp
adc
lahf
shll
inc
push
fstps
lock
shll
push
addr16
sub
test
or
dec
dec
xchg
sbb
inc
std
pop
cs
inc
aad
jle,pn
sub
and
adc
in
xchg
add
in
inc
hlt
push
xor
dec
mov
dec
cmpsl
sbb
std
push
rolb
xchg
jnp
xor
int3
pop
jo
push
inc
pop
add
and
dec
js
fdivs
arpl
fcmovne
sbb
test
jnp
adc
xchg
outsl
jne
mov
loope
push
add
loop
stc
xor
jo
sbb
cmc
push
cmp
pushf
test
loope
icebp
or
mov
cmp
sarl
or
push
enter
jne
mov
jno
sub
inc
jge
and
lods
pop
xlat
add
fs
jmp
pushw
sub
mov
mov
and
pop
adc
popa
xchg
pop
sub
scas
xor
inc
adc
pop
pusha
insl
fistps
in
add
nop
lods
mov
movsb
adc
push
cli
ss
aam
adc
movsl
stc
repnz
test
les
rorl
ja
inc
push
xor
pop
iret
in
in
bound
in
les
pop
fs
cmp
sub
loopne,pt
mov
adc
xchg
dec
adc
jge
clc
fcoms
fsubrl
and
lret
incl
jo
cmp
or
push
test
push
adcb
jl
sahf
shlb
mov
mov
sahf
xchg
push
ja
stos
aam
imul
mov
fidivrl
cmp
cmp
faddl
jnp
add
movl
mov
push
leave
andl
mov
pop
jecxz
fiadds
divl
imul
aam
pop
push
sbb
and
aam
sbb
xorb
cli
push
lods
test
mov
sub
inc
out
stos
jecxz
cltd
loope
sub
add
pop
rclb
or
cmpl
inc
je
rcl
jecxz
std
mov
lret
cmp
aam
push
mov
jne
inc
sbb
rcll
aam
jge
sahf
xor
fstpt
push
daa
shld
xor
arpl
pop
dec
insl
or
sub
cli
test
sbb
inc
cmpsb
xchg
mov
lret
lods
rolb
lds
fidivl
and
cmp
loopne
mov
or
cmp
sub
ja
adc
enter
fwait
push
loopne
add
add
jecxz
ja
imul
or
mov
push
insb
pusha
rcl
jo
scas
dec
pop
dec
into
orb
push
js
cltd
add
in
pop
loopne
leave
call
repz
fcomip
addr16
and
movsb
push
cli
mov
sbb
mov
xchg
or
pop
adcb
dec
in
push
sarb
daa
out
shll
add
rorl
fstpt
sahf
xchg
inc
aaa
gs
jns
js
mov
xor
out
mov
popa
mov
ljmp
cmpsb
dec
dec
mov
and
outsb
inc
cltd
xchg
out
movsl
stos
out
repnz
lret
je
rorb
lea
mov
push
adc
das
rcrl
jae
mov
add
xor
cmp
jb
test
jp
scas
stc
hlt
xchg
jl
rcll
mov
sub
mov
sbb
fdivrp
sbb
and
sbb
mov
jp
pop
sbb
or
sar
add
in
mov
stos
cltd
xchg
cmpsl
pop
scas
sub
cmp
sbb
divb
push
and
std
jno
out
rcrb
lcall
adc
lret
xorb
ja
flds
xchg
jne
mov
int3
outsl
mov
sbb
stc
andl
inc
ss
or
pushf
repz
adc
dec
iret
sub
mov
call
je
mov
out
push
clc
pop
and
xchg
xchg
outsb
and
inc
fwait
inc
dec
ds
cs
daa
out
xor
repnz
xchg
jmp
in
out
xor
test
repnz
es
sbb
sub
dec
jecxz
jno
mov
mov
pusha
arpl
xor
adcl
sub
fcoml
mov
int3
testb
adc
sbb
loopne
mov
mov
aaa
or
dec
push
pop
movsb
lret
stos
mov
jmp
scas
shl
sub
or
mov
xchg
fldt
or
fwait
mov
add
sub
data16
mov
rorl
mov
les
jl
bound
dec
cmp
or
pop
fldt
mov
jns
icebp
xchg
lahf
lods
inc
inc
ret
inc
dec
lcall
ljmp
or
loopne
rorb
pusha
aaa
mov
mov
mov
inc
cs
cli
aad
push
pop
test
clc
call
and
jmp
push
cmp
push
mov
lock
push
js
push
clc
cld
repnz
cmp
sub
push
repnz
popf
sub
or
or
jp
xchg
cwtl
shr
mov
shlb
sub
sbbb
mov
mov
push
pop
lcall
dec
daa
xor
addr16
or
movsl
jge
les
je
cmpl
rorb
jle
insl
clc
cmp
pop
enter
sub
cmpsb
sahf
lods
sub
dec
or
cld
inc
dec
jae
adc
enter
into
mov
insb
jg
xor
jne
nop
bound
nop
xchg
add
sbb
sbb
pop
xorb
jbe
push
shll
jmp
popf
xor
jae
mov
mov
movsl
mov
test
ljmp
jle
mov
cmp
pop
cmp
data16
fistpll
aaa
mov
xchg
xchg
mov
or
mov
xchg
fsubl
xchg
mov
add
imul
js
mov
and
mov
les
ds
xor
ja
mov
cmc
pop
fmull
js
shlb
pop
mov
mov
loop
push
mov
mov
ss
xchg
cmp
adc
xor
add
mov
je
outsl
test
xor
sahf
nop
or
push
cmpsl
iret
xor
pop
mov
mov
inc
add
aam
rorb
neg
sbbl
lcall
in
or
mov
adc
jg
xchg
aad
hlt
fimull
fdivrs
ficoms
push
fnsave
test
loopne
sti
imul
lahf
out
sbbb
fidivrl
cld
jmpw
cmpl
test
or
lods
les
lock
xchg
movsb
push
xchg
test
push
or
mov
andl
xchg
rclb
jmp
or
out
pop
dec
xor
add
dec
shrb
mov
inc
dec
fnsave
ja
push
xlat
lret
mov
loopne
rdpmc
add
or
inc
cmp
jno
pop
xlat
clc
sbb
mov
add
cwtl
in
mov
or
mov
push
sbb
aas
std
inc
ficomps
inc
push
enter
mov
shrl
pushf
mov
jnp
popf
jns
addl
addb
mov
adc
mov
sti
xchg
ret
fidivrl
dec
mov
add
or
fnstsw
dec
pop
in
gs
push
sub
pop
adc
jae
ss
add
rcll
adc
mov
fstl
ror
sbb
sub
push
cmpl
shll
cmp
imull
sub
fidivs
ljmp
lock
mov
fcom
jae
inc
jno
cmp
sahf
inc
shl
sbb
std
popf
xor
dec
sbb
add
dec
xchg
cltd
cmp
sar
addr16
xchg
xor
rorl
push
mov
adc
mov
call
xchg
loop
loopne
jmp
out
mov
sub
cmp
push
ds
sbb
js
push
outsl
and
xor
mov
inc
in
loope
ret
and
pop
inc
or
mov
mov
sbb
mov
fucomp
jecxz
inc
or
sbb
or
mov
clc
push
mov
jg
xchg
fwait
pop
icebp
out
inc
bound
mov
lds
xor
test
pop
fwait
repz
dec
into
push
sbb
dec
ret
sbb
xchg
jae
ljmp
jl
xor
adcw
sub
pop
sub
dec
xchg
mov
aaa
jno
mov
lret
rolb
push
push
mov
and
sub
add
mov
push
test
loop
pop
mov
push
sbb
or
inc
push
xchg
lahf
sub
jl
shll
movsl
fidivrs
or
mov
jnp
push
bound
mov
push
movsb
adc
lcall
lock
push
into
call
pop
into
imull
aad
jnp
xor
jl
jo
cmp
ret
inc
and
loope
out
into
fistpl
daa
xor
sub
or
adc
pop
mov
inc
arpl
sarb
stc
inc
test
mov
in
clc
add
mov
mov
pop
sub
push
adc
xchg
cs
outsl
jae
je
out
test
sbb
xlat
orb
mov
clc
and
mov
movsb
xor
cmpsb
and
push
push
inc
jecxz
mov
sahf
push
adc
jb
inc
jge
pop
fbstp
xor
lahf
push
jge
and
testb
cmp
dec
mov
xchg
lods
ret
push
clc
add
jne
cmpsl
push
icebp
inc
xchg
testb
pop
and
jbe
add
mov
push
idiv
push
push
gs
pop
dec
sti
shlb
mov
cmp
sbb
mov
call
scas
andb
lea
in
inc
shl
imul
cs
cli
jg
mov
fisubs
add
cltd
jmp
pop
es
popf
push
lcall
in
or
lret
push
push
daa
inc
and
xchg
mov
dec
xor
gs
arpl
sub
insl
mov
std
lret
lods
loop
push
mov
adc
jne
mull
mov
bound
pop
mov
test
push
jnp
sbb
repnz
rcrl
mov
dec
ss
adc
push
inc
shlb
fwait
xchg
fs
sub
pop
cli
pop
lahf
movl
out
jmp
xchg
sub
cmpl
sub
insl
cli
mov
pop
icebp
or
test
stos
jge
adc
pop
cltd
daa
xchg
loop
sub
sbb
ss
testl
sbbb
movsb
iret
mov
add
mov
dec
adc
or
cmp
gs
cmpsb
and
mov
inc
nop
xlat
js
cltd
sub
in
fdivs
movsl
imul
sbb
dec
out
stc
cld
loope
xchg
pop
mov
insb
jb
push
xor
outsl
mov
add
or
inc
std
inc
mov
add
sbb
dec
pop
les
cmc
daa
psadbw
in
xchg
mov
or
outsb
testb
jge
xchg
lods
lods
sub
add
add
test
jl
out
mov
pop
add
cmc
ffree
xorb
pop
xor
pop
mov
push
je
xchg
pop
out
pop
push
sbb
or
hlt
inc
mov
xor
nop
scas
sub
repz
lcall
mov
bound
popf
sarl
fdivs
push
jg
aas
mov
icebp
jne
cmp
les
xchg
sbb
test
ret
sbb
sub
inc
mov
ljmp
xor
test
movsl
push
inc
mov
daa
mov
les
pop
shlb
js
imul
cmc
mov
stc
xchg
jo
lods
mov
cmc
lret
add
xchg
arpl
xor
push
lret
out
push
mov
mov
lods
out
dec
and
fbld
sub
mov
xlat
dec
and
mov
outsb
jg
out
xor
inc
std
xorb
popa
movsb
jne
movsl
pusha
lahf
in
scas
enter
scas
mov
xchg
ret
sub
xor
imul
rorl
addr16
jbe
cmp
mov
inc
ficoms
in
sarl
sbb
int3
mov
insl
mov
mov
arpl
sbb
icebp
sbb
insb
sub
lea
xchg
sarl
jg
gs
out
lds
push
lods
adc
imull
inc
jmp
test
stos
out
lods
jo
xor
and
sub
mov
pop
repz
cli
xchg
push
lea
movsl
lods
sahf
ss
movsb
jb
sbb
out
sub
pop
rcrb
jns
push
in
or
std
sbb
jecxz
xchg
jno
lods
fsubrs
rorb
stos
dec
xor
les
adc
cwtl
mov
je
and
popl
jmp
shll
mov
mov
push
dec
sbb
cli
cs
jo
jnp
loopne
sbb
pop
mov
popa
ja,pn
mov
mov
and
ret
leave
inc
xchg
out
xorb
jl
jecxz
or
mov
sub
out
inc
sbb
xlat
adc
push
mov
xchg
je
repz
jns
mov
mov
movsl
int
ret
sbb
in
test
test
add
rcrl
mov
aad
stos
jno
mov
popa
adc
aam
shld
pop
push
jae
inc
inc
xlat
mov
push
jl
fisubrs
mov
lods
popf
sub
cmp
outsl
mov
scas
mov
fistpll
mov
sub
push
mov
xor
xor
test
js
pushaw
inc
cmp
aad
xor
mov
xchg
mov
or
test
ja
sub
adc
lods
fidivrl
ja
pop
rcll
cltd
pop
push
add
je
jb
push
scas
test
subl
push
loopne
cmp
and
lods
jno
jns
clc
inc
loop
and
les
daa
xlat
dec
mov
lret
ret
fildl
cmp
pop
dec
mov
push
fldcw
and
aad
or
mov
repnz
aaa
pop
or
mov
repnz
mov
repz
inc
nop
aam
sbb
pop
lcall
sub
test
arpl
mov
or
adc
or
xchg
mov
imul
or
test
pop
cmp
testb
scas
sbb
sbb
or
imul
xorl
in
pop
cli
aas
sub
pop
sub
in
test
adc
adc
shl
daa
and
imul
xchg
notl
les
aam
xchg
repz
add
mov
cwtl
adc
imul
add
pop
lahf
jae
hlt
mov
iret
xchg
mov
dec
add
push
int
jns
xor
outsb
pop
dec
pop
or
in
or
lds
es
aaa
into
test
inc
das
cmp
xchg
push
pushf
push
and
mov
adc
and
mov
dec
int
cmp
dec
inc
pop
les
daa
loopne
sub
aam
mov
cli
test
xchg
jmp
adc
xchg
test
std
xchg
stos
and
aas
scas
jne
js
jp
jl,pn
xor
push
push
fstl
out
rol
mov
jns
fadds
stos
lcall
out
int3
inc
inc
dec
stos
adc
out
push
xor
sahf
mov
push
pushf
jmp
pop
mov
data16
fwait
lret
pop
insb
mov
cltd
mov
mov
lahf
mov
ja
pop
into
mov
xor
push
adc
mov
out
mov
jb
add
jl
sahf
mov
stos
sti
imul
es
sahf
cs
jmp
and
push
repnz
icebp
arpl
and
xchg
fistps
mov
outsl
mov
inc
dec
pop
or
cmc
xor
xchg
xchg
sub
sbb
xchg
cmpsb
pop
dec
mov
jae
dec
push
push
aas
test
sbb
test
cmp
fiaddl
xchg
sub
and
jmp
mov
sbb
addb
sbb
call
mov
roll
int3
or
jns
daa
mov
adc
cltd
mov
out
loope
or
lret
dec
scas
jle
xchg
repnz
outsl
sub
xlat
cmc
jo
xchg
out
movsl
xor
lods
pop
mov
cmp
pop
ljmp
orl
xor
dec
mov
lahf
or
sub
mov
inc
dec
jo
shr
mov
inc
push
adc
sbb
mov
outsb
dec
mul
push
cmpl
jg
mov
dec
into
pop
sbb
adc
mov
loop
inc
mov
pop
lcall
test
add
imul
fdivr
test
clc
jno
out
les
xlat
clc
push
and
xor
pop
lock
or
mov
or
loope
cmp
pop
sub
testl
ds
xlat
aam
rorl
sub
jae
add
inc
aam
adc
push
shrb
pushf
in
addr16
mov
add
fs
rorb
sub
in
outsb
xlat
into
movl
ljmp
push
mov
dec
push
dec
fstpt
jnp
cmp
jle
push
pop
adc
fadds
mov
push
push
ljmp
push
fnstsw
adc
adc
xchg
add
mov
enter
pop
mov
ret
inc
ja
fistl
cld
pop
lret
fbld
lahf
push
hlt
inc
and
push
jne
or
test
leave
lods
iret
lea
jmp
mov
add
arpl
push
push
mov
mov
jle
xchg
bound
andl
jns
or
sbb
jge
cltd
push
jecxz
mov
ja
aaa
int
ret
pop
adc
or
rol
loop
int
mov
gs
fadds
mov
cld
mov
jae
lret
sub
pop
scas
repz
xchg
test
out
xor
xor
lret
test
shr
add
pop
and
push
fildll
adc
dec
or
pmaxsw
fs
daa
in
pop
adc
loop
rorb
mov
inc
inc
shrl
aam
jb
cmp
pause
or
lahf
cmp
ret
test
mov
and
pop
jbe
dec
xlat
stos
sub
leave
xchg
loope
jbe
inc
or
in
mov
xor
loopne
rorl
test
pop
scas
adc
fistl
xchg
ror
ja
inc
test
and
add
cmp
aaa
sub
cmp
mov
push
call
mov
loop
add
push
jo
divl
mov
or
in
inc
sti
add
ret
sbb
ljmp
in
pop
outsl
push
mov
aad
push
dec
popa
dec
test
jmp
imul
and
mov
lds
outsb
lret
cwtl
test
ret
push
lret
into
pop
mov
cmp
gs
stc
push
adc
jp
dec
paddsb
test
mov
xchg
fadd
mov
mov
jmp
or
jge
mov
arpl
fcmove
pop
xor
testb
inc
adc
jl
push
mov
gs
jb
rcrl
lock
xor
stos
and
add
ja
add
scas
in
fmull
lods
loope
xchg
or
sbb
mov
ljmp
shll
arpl
lahf
stos
xchg
cmpsb
pop
jg
or
lds
xor
aaa
pop
ss
xchg
or
mov
lods
mov
insl
roll
scas
jb
icebp
iret
aaa
push
call
push
sbb
cwtl
xlat
lock
xchg
repz
dec
lea
jno
xor
scas
mov
in
and
cmp
mov
pop
mov
jne
sub
insl
fldln2
sbb
inc
push
lock
fistpll
gs
lcall
push
cmp
xor
movsb
pop
iret
mov
dec
lock
cld
or
push
scas
int
mov
lods
xchg
les
sub
mov
sbb
sbb
mov
or
stos
or
daa
shl
pushf
push
test
insl
jmp
jl
int3
pop
sub
pushf
int
les
xchg
mov
push
sub
pslld
sub
push
leave
pop
inc
sub
movsl
loope
hlt
movsb
lock
jae
repz
jle
icebp
ret
xchg
or
adc
jbe
mov
xchg
push
daa
js
js
js
cmp
xor
or
add
test
ss
mov
nop
sub
scas
add
xlat
ds
mov
push
call
movsb
inc
adc
stos
ret
in
adcb
cmc
sub
popa
js
inc
loopne
hlt
pop
leave
cmc
sub
cmp
popl
push
ret
cmp
mov
flds
fucomi
loope
idivl
aaa
add
inc
scas
add
or
push
mov
fiaddl
cmp
stc
nop
mov
mov
imul
insl
fistps
mov
jbe
dec
or
outsl
pop
jne
mov
xor
jo
dec
pop
and
icebp
mov
mov
and
sbb
xchg
icebp
inc
gs
jnp
dec
and
sub
inc
cmc
int3
push
or
cwtl
les
test
cltd
out
sahf
adc
scas
xchg
rorl
lock
loop
add
shll
test
xchg
mov
xor
aam
add
jg
jge
bound
daa
mov
imul
and
xor
test
stos
pop
mov
push
push
movsl
jb
fwait
ljmp
aaa
ss
imul
movsb
xchg
test
sbb
into
cltd
repnz
daa
adc
mov
pop
and
jnp
cmp
out
andb
nop
data16
adc
jg
lret
add
sub
xor
lock
sub
ja
mov
jb
fdivs
push
cmp
ja
push
jp
mov
arpl
sarl
jg
lret
xchg
sub
dec
hlt
mov
bnd
push
arpl
jg
xor
sub
push
call
ja
inc
stc
ret
aam
insb
xchg
add
outsl
xchg
push
pop
mov
xchg
dec
sbb
jmp
sbb
cwtl
subb
lret
stos
pop
fisubs
jns
pusha
jne
stos
cmpsl
iret
jnp
cs
fidivl
jp
jbe
mov
fidivrs
pop
pusha
mov
test
jnp
xchg
movsl
mov
cltd
daa
arpl
test
add
or
mov
insb
jae
inc
sub
icebp
test
pmullw
xor
rclb
pop
stos
loope
dec
cmp
jb
jle
dec
push
out
push
jmp
test
or
in
dec
aaa
inc
sti
mov
fidivrl
nopl
mulb
mov
out
mov
test
xchg
insb
fmuls
adc
popf
test
sahf
popf
in
enter
jns
outsb
std
pop
aas
push
lahf
add
repz
push
mov
add
cmp
mov
push
in
in
leave
test
and
adc
fadds
mov
repnz
scas
cltd
loope
out
dec
out
popf
aad
icebp
mul
stos
inc
scas
xchg
call
call
ljmp
push
and
jbe
mov
jg
js
or
jg
push
fidivs
pop
movsb
or
lcall
mov
arpl
pop
fnstcw
adc
inc
push
push
outsb
inc
push
rep
cs
mov
gs
les
lahf
sbb
jle
mov
adc
sbb
rolb
jp
stc
mov
ficoms
fs
mov
int
iret
sbb
add
push
sar
std
push
cmp
out
in
mov
clc
inc
xlat
pop
add
adc
fs
pop
iret
mov
out
loopne
mov
fisubs
inc
loopne
lret
xor
push
loope
aas
adcb
inc
cli
xchg
gs
pop
lods
loopne
push
nop
inc
mov
adc
mov
cmp
xorl
sar
mov
mov
inc
xchg
les
je
sub
mov
inc
in
sub
popf
dec
sbb
push
js
xchg
jle
out
lret
jo
cmpsl
or
mov
fisubs
fisubrl
sarl
dec
mov
jl
insl
or
push
movl
push
cmp
movsl
test
out
mov
xchg
rclb
inc
jg
dec
jne
fisubrl
iret
adc
push
std
adc
dec
out
inc
divl
adc
push
sbb
jne
mov
mov
shlb
sub
stc
lods
shl
aaa
pop
mov
sbb
pusha
cmp
inc
lret
or
stc
pop
mov
orb
scas
mov
call
inc
jmp
jbe
jo
jl
outsl
inc
fsubs
jno
push
test
ss
and
loop
inc
pop
addr16
loop
mov
imul
xchg
jo
adc
cmc
roll
add
ret
inc
fnsave
cmp
in
or
push
imul
xlat
sbb
inc
popa
imulb
mov
bound
xchg
sarb
pop
pop
inc
mov
jmp
aas
xor
aad
or
testl
sub
scas
pop
pushf
xor
movsb
loop
or
imul
and
push
dec
ret
mov
aaa
mov
and
or
rolb
dec
test
cli
ror
adc
push
out
nop
je
aam
xchg
push
jl
enter
cmpsb
push
inc
mov
lcall
mov
inc
xor
xor
cmpsb
call
push
mov
sbb
cmpsl
or
and
mov
pop
lahf
rcrb
adc
mov
aam
mov
inc
mov
xlat
or
jge
push
jge
xlat
cmpsb
dec
andl
adc
add
cltd
loope
jne
jmp
pop
in
xor
or
fldenv
sub
mov
sbb
mov
dec
data16
movb
ds
inc
aam
shl
daa
fwait
sub
xor
lock
dec
fstpt
ret
jno
lret
push
stos
iret
pop
pop
addb
xchg
sub
sub
push
sbb
ret
jl
xlat
inc
addr16
repz
mov
repnz
mov
mov
incb
pop
push
mov
mov
inc
arpl
mov
hlt
outsb
cli
mov
push
out
addr16
vcvtdq2pd
ss
or
add
push
push
fwait
leave
jp
mov
ret
adc
jmp
inc
movsb
jb
jp
and
das
adc
inc
jl
mov
xchg
dec
cmpsb
cmpsb
out
inc
jg
pop
stos
xor
pop
push
cs
mov
js
xor
das
scas
int
mov
enter
movsl
mov
and
sbb
hlt
jg
repnz
sub
pop
jg
mov
sub
mov
lahf
adc
cmp
int
mov
rorl
dec
lret
xorb
test
add
sbb
fwait
and
fs
lods
jge
cld
stc
inc
repnz
bound
je
imul
mov
out
movl
xlat
stos
lock
inc
sbb
cmp
sarl
lock
mov
dec
lret
add
mov
cs
stc
adc
xorl
push
movsb
and
ret
jo
enter
adc
sub
dec
sbb
imul
insl
movsl
add
sbb
fwait
mov
push
push
mov
leave
mov
inc
ret
jge
es
sub
daa
addr16
or
lret
mov
jp
jmp
subb
lods
cli
xlat
popa
fnstsw
sahf
pop
or
test
xchg
sub
pop
xchg
jg
shll
or
dec
push
xor
repnz
loopne
xor
fstpl
sbb
scas
jno
fnstenv
repnz
repnz
sub
call
shrl
insb
iret
insl
sub
sbb
ljmp
testb
jb
dec
fmulp
mov
sti
inc
sbb
ljmp
dec
xchg
mov
imul
or
scas
sbb
repz
int3
stos
je
mov
pop
xor
pop
bound
icebp
sub
test
sbb
out
xor
loop
push
test
popa
lret
test
xor
pusha
mov
imul
arpl
lods
lcall
pop
and
aaa
cmp
and
and
in
mov
cmp
bound
adc
test
bound
std
jecxz
cmpsl
adc
add
jecxz
adc
fists
xchg
stos
jne
dec
daa
lahf
sbb
jnp
adcl
push
and
mov
or
out
add
or
dec
dec
pop
push
roll
insb
test
push
mov
lcall
push
adc
arpl
nop
mov
mov
xchg
stc
movsb
push
sbb
fs
gs
jo
fidivl
sbb
mov
cmpsb
xchg
add
outsb
mov
addr16
xchg
mov
fidivl
or
fcmovnbe
sarl
fs
mov
es
mov
inc
jp
mov
sbb
mov
add
jge
scas
mov
xchg
sub
stos
insl
cmp
xor
aam
orl
jo
mov
add
cmp
mov
int
ljmp
lahf
pushf
dec
mov
stc
sbb
xchg
xchg
or
push
lock
lds
cmp
xchg
jb
in
popf
cld
or
pop
jl
add
xor
nop
loopne
shll
adc
rclb
xchg
jae
inc
movsl
jl
mov
in
aad
or
mov
addr16
fbstp
mov
inc
inc
inc
pop
movsl
jmp
and
pop
mov
mov
ds
adc
jb
ss
ds
jl
cld
pop
bound
call
mov
cld
stc
mov
adc
cmp
incb
push
xlat
push
test
cs
mov
pop
cmp
push
dec
inc
push
xorb
mov
shll
clc
aad
fcoml
jnp
insb
imul
lock
psubsw
test
cmp
cmpb
out
cmpsl
imul
mov
dec
and
xorl
enter
jb
mov
test
jle
push
mov
sbb
jg
pop
mov
arpl
adcl
cmp
push
icebp
cld
cwtl
jne
cli
cmp
xchg
or
dec
js
xor
cmp
jne
mov
mov
stos
in
into
outsb
inc
inc
test
nop
jae
mov
lods
pop
cmpsb
les
push
loope
popf
inc
pop
aad
fcomip
xchg
mov
and
add
push
mov
loope
sbb
cmp
inc
mov
fwait
mov
movlps
pop
in
ljmp
stos
mov
mov
cld
fstps
pushf
push
dec
rcl
fwait
jb
sarl
fisttpll
in
cmpsl
sti
jmp
cmp
xchg
xor
add
mov
lds
mov
mov
dec
fs
cmpsb
lcall
fidivl
pop
mov
test
sbb
stc
xor
sbb
fcompl
push
push
lret
je,pt
jecxz
aad
ljmp
icebp
mov
sub
icebp
cld
rolb
arpl
jns
popf
shll
and
je
fdivp
cmp
cmp
jp
adc
mov
pop
xchg
fwait
pop
mov
add
pop
inc
dec
mov
lret
insl
scas
outsb
sub
push
sbb
push
adc
push
test
xor
jnp
xor
sarb
mov
insl
cmp
mov
inc
test
add
lds
sar
mov
test
imul
leave
jecxz
push
sbb
cmpsb
pop
sub
not
cmp
cmp
sbb
pop
dec
cmpsl
dec
mov
push
push
jbe
xchg
icebp
sti
call
in
repnz
dec
inc
lahf
test
and
aaa
and
ret
js
test
sub
mov
lds
sbb
not
iret
arpl
xchg
xchg
ret
sbb
test
sub
cmp
xchg
add
sub
lods
lcall
int3
pop
cmc
ja
cmp
or
jecxz
inc
mov
pushf
iret
lret
xor
stos
ret
iret
push
fcmovb
mov
mov
testl
fcompl
xchg
call
stos
or
mov
iret
pop
mov
cltd
das
jp
mov
push
adc
loopne
call
sub
xchg
imul
faddl
sub
mov
int3
mov
stc
std
ds
lods
cld
idiv
sub
aas
int
cs
inc
leave
lock
jns
cmpsb
and
pop
jnp
std
repz
sbb
pop
or
add
pop
push
arpl
addl
adc
scas
mov
add
mov
jne
jno
dec
mov
jns
adc
jb
je
adc
mov
out
lcall
jl
ljmp
or
sbb
cmp
inc
iret
jbe
xchg
loop
mov
ljmp
sub
loopne
ja
test
jne
mov
cmp
mov
imul
jbe
mov
pop
in
call
pop
lret
cmp
fwait
pushf
jg
adc
std
mov
dec
stos
stc
xchg
add
or
mov
faddp
jae
pusha
lahf
enter
dec
xlat
repnz
lock
stos
mov
insl
in
leave
insl
lods
pop
sbb
inc
cs
aad
sub
fsubs
ljmp
popl
outsl
push
jnp
aam
jne
lods
jecxz
pop
cwtl
out
pop
xlat
pop
jae
push
adc
sub
lods
push
jae
pop
loop
iret
data16
in
mov
sbb
cmpsb
inc
movl
cld
inc
scas
fbstp
enter
dec
adcb
add
hlt
lahf
outsl
insl
ret
outsb
jl
xchg
push
pop
mov
pop
xor
test
xchg
push
mov
xchg
push
sub
dec
mov
mov
jne
ja
xor
jle
mulb
fnstcw
sbb
jmp
sti
lods
mov
cltd
push
lahf
inc
data16
iret
mov
xchg
imul
jno
outsb
mov
add
int3
fmuls
in
mov
lcall
add
testb
push
lds
out
jmp
loop
mov
mov
outsb
rclb
mov
test
add
mov
in
ljmp
sbb
xchg
mov
loop
fiaddl
mov
fsub
xchg
push
iret
pop
loop
aaa
aas
sti
push
call
mov
gs
dec
lahf
and
test
out
fldcw
cwtl
repnz
es
sub
in
sub
loop
test
dec
fdivl
lret
leave
inc
icebp
push
in
lret
lahf
push
xchg
mov
stc
fimuls
mov
in
insb
adc
sbb
arpl
roll
add
cmp
in
scas
and
scas
jbe
add
mov
dec
lods
fsubrl
jmp
movsb
adc
pop
in
mov
sub
in
push
pop
dec
mov
out
pop
nop
popf
sbb
lods
mov
pop
sbb
clc
stos
loope
fsubs
pushf
ds
sahf
je
sub
push
movsl
add
and
inc
inc
sub
jne
cmp
pop
out
jo
test
ss
shlb
push
push
mov
jo
xchg
outsb
mov
mov
cmp
je
loope
iret
fbstp
fwait
call
sbb
jne
lcall
fwait
dec
ret
shlb
in
cmpsb
dec
jae
sbb
lods
dec
cmpsb
jo
out
pushf
lea
add
int3
inc
push
stos
sarb
scas
cmc
mov
loope
jp
xchg
cld
or
test
inc
push
push
lock
and
ret
out
mov
lcall
ja
cltd
sbb
movsl
loopne
fisubrs
push
sarb
lds
popf
insb
jo
inc
fnstcw
insb
pop
mov
mov
push
cli
sub
sarl
fcomp
pop
jae
jae
adc
pop
sbb
lock
and
adc
cmp
or
inc
lret
pop
push
inc
lcall
inc
sti
leave
mov
pushf
cli
mov
rcl
cmpsb
lret
jmp
fxch
mov
into
ja,pn
push
xchg
push
ficomps
pop
notb
inc
xchg
xor
cmp
mov
mov
inc
shll
enter
jbe
fistpll
gs
or
jno
pop
ds
pop
cmp
js
ret
stos
enter
sub
jmp
decl
push
mov
mov
pop
sbb
xor
nop
insl
fs
lods
push
mov
mov
into
ss
ret
xor
movsb
add
or
mov
nop
push
xor
cld
hlt
nop
rcrb
inc
dec
add
add
movsl
repnz
jge
or
stos
or
popf
scas
jb
in
js
jg
push
push
jo
add
dec
cmpsb
test
add
inc
lret
inc
outsb
pusha
push
in
cmc
test
pop
cld
sub
cs
mov
or
pop
jnp
mov
xchg
test
into
int
lds
lret
xor
inc
mov
aaa
in
imul
das
inc
mov
dec
sbb
loop
or
push
sub
mov
gs
loope
das
mov
stos
addr16
dec
stos
cmpsb
ljmp
shl
sub
mov
push
dec
fs
mov
push
outsl
test
les
cmpsl
imul
loop
dec
xchg
or
xor
mov
xor
jbe
cmp
xor
or
xchg
lahf
mov
mov
jb
dec
incb
sahf
aaa
cwtl
xor
mov
xchg
lods
mov
das
add
jg
jnp
cmp
mov
out
dec
out
icebp
dec
imul
sahf
xchg
and
mov
push
mov
mov
sub
mov
mov
or
in
clc
mov
or
cmp
mov
loop
sarl
xchg
ja
cltd
and
in
data16
xchg
lahf
fmuls
mov
push
sub
sbb
enter
les
daa
mov
ror
xchg
mov
insb
movsb
cmc
shlb
adc
add
sbb
bound
iret
pop
aad
fsubs
jae
ja
push
in
dec
sbb
cwtl
mov
out
lcall
daa
lods
jne
jo
add
cmp
arpl
mov
dec
pop
xor
inc
subl
repnz
pushf
lahf
ljmp
push
insb
inc
push
sbb
jne
push
dec
dec
ljmp
icebp
jne
lock
or
add
cli
out
pop
shlb
incl
loopne
je
mov
adc
lret
popa
or
add
in
jnp
adc
js
or
repz
test
push
mov
pop
lea
out
pop
mov
out
stos
jns
pop
in
push
bound
inc
adc
and
sub
pop
fistpl
ds
inc
cltd
xor
subl
scas
mov
add
or
cmpsb
jmp
mov
shll
cmpsl
pop
push
sub
out
mov
into
aam
pop
cmpsb
jns
aas
push
lods
adc
sahf
jns
jbe
stc
jge
adc
mov
xchg
fidivl
mov
popa
sub
stc
mov
dec
jecxz
es
and
fcmovbe
sub
push
or
fcompl
mov
xor
dec
cs
xor
mov
in
xchg
and
mov
arpl
shlb
lahf
imul
daa
inc
int
std
mov
adc
fiadds
mov
lea
aaa
in
les
stc
push
sbb
icebp
aaa
sub
xchg
int3
pop
push
popa
xchg
jp
xchg
mov
xchg
xorb
push
sbb
rclb
add
pushf
jecxz
cmp
or
rol
popa
pop
mov
jns
arpl
push
or
push
data16
mov
cmc
adc
xor
mov
fstpl
add
in
hlt
jae
movsl
sarl
js
lret
sub
inc
mov
cwtl
mov
dec
mov
js
xor
mov
push
popa
add
ss
das
jnp
jle
cmp
int3
sbb
loopne
mov
lret
and
adc
pusha
xor
xchg
fidivrl
mov
cmp
stos
push
mov
xor
sub
lods
adc
adc
dec
inc
pop
mov
sarl
ss
xor
cmp
add
iret
dec
mov
ficoms
popa
inc
mov
shrl
xor
cmpsb
test
popa
in
idivl
cmp
push
das
std
sub
out
testb
cld
es
dec
inc
mov
mov
mov
outsb
loop
insl
mov
loop
sub
out
fidivs
xchg
cmpb
xchg
jno
mov
mov
cld
inc
mov
fstp
pusha
clc
dec
jp
cmc
shrb
xchg
stos
outsl
fcomps
mov
xchg
loopne
test
and
mov
mulb
lret
test
std
call
in
jecxz
dec
mov
inc
pushf
int3
xchg
cltd
das
sar
xchg
mov
imul
push
sbb
inc
gs
aad
jmp
xor
inc
or
add
cmp
cmp
and
pushf
imul
jge
cwtl
and
fucomip
xor
mov
pop
mov
push
es
inc
jmp
mov
push
lahf
fisttps
enter
mov
jmp
push
loope
pop
cmp
inc
push
ret
jb
ja
out
adc
jne
out
mov
mov
fcmovbe
sbb
out
insl
mov
add
mov
mov
mov
fistpll
add
ss
lds
cld
push
cmp
out
xchg
add
sbb
mov
inc
repz
inc
adc
xchg
xchg
cmc
leave
int
add
cmpl
bound
sti
stos
je
mul
push
jmp
outsb
jno
lock
inc
jmp
daa
sub
mov
jns
arpl
js
add
push
dec
xorl
arpl
pop
cs
and
mov
pop
cmpsl
test
ds
out
jb
lcall
lcall
pushf
or
popa
inc
or
xchg
xchg
cmp
aam
scas
mov
lods
jle
pop
divb
or
ss
mov
movsb
push
lcall
divl
ret
movb
fsubl
test
xor
into
or
mov
cltd
out
fadds
out
addb
popa
xchg
mov
andb
jmp
ja
xchg
dec
int
push
in
movsl
ret
xor
inc
pop
pop
cld
aaa
jecxz
sarl
mulb
add
push
xchg
sbb
sbb
add
subb
test
lock
loopne
xorb
outsl
push
inc
in
push
adc
jp
sbb
outsb
xor
cld
arpl
rorb
xchg
add
xchg
push
xchg
jmp
pop
xlat
or
lret
xchg
xchg
pop
popf
addb
or
mov
nop
clc
or
hlt
xor
imul
jnp
cmovge
or
fsub
sbb
ja
or
js
rcr
sub
and
push
cmp
jecxz
jae
fists
jecxz
add
and
lea
adc
xor
insl
out
leave
or
cld
popf
test
pop
movl
inc
sbb
fsubrp
mov
das
inc
cmp
and
jg
cmp
out
loopne
xor
fstpt
push
repz
leave
loopne
push
out
xor
dec
push
mov
jl
out
jl
adc
jbe
adcb
mov
into
leave
out
jecxz
mov
cmp
and
push
int
sub
or
jg
sbb
xchg
aam
ljmp
mov
mov
lods
std
popa
jo
je
aad
out
shrb
insb
dec
pop
out
xchg
in
mov
lahf
aam
aaa
arpl
xchg
adc
push
out
cmp
sub
mov
add
jg
jns
inc
call
pop
xor
lcall
hlt
jns
and
loopne
dec
cld
push
jecxz
lods
dec
cmpsl
adc
xor
xchg
mov
mov
sbb
rolb
pop
scas
inc
int3
jp,pt
mov
scas
xchg
test
or
and
mov
mov
inc
sbb
ljmp
dec
pop
push
cmpsl
lods
mov
mov
sahf
gs
adc
xor
enter
loop
and
pop
mov
test
or
dec
dec
stc
stos
jno
lahf
movb
iret
stos
pop
imul
add
mov
les
flds
scas
cmc
arpl
or
jo
aam
xor
aaa
sbb
lret
ds
mov
sub
cmp
xchg
add
pusha
test
cltd
dec
adc
jae
gs
xor
icebp
inc
push
cltd
push
and
lods
sbb
je
push
mov
pop
call
fisttps
loop
push
push
cmc
ds
test
mov
in
std
add
jecxz
push
xorl
inc
in
idiv
fildl
cmpsl
pop
imul
xor
push
push
outsb
xor
icebp
ljmp
mov
add
mov
cld
arpl
adc
cmp
pop
mov
jnp
push
clc
or
lret
ror
outsl
loope
inc
fs
lcall
mov
arpl
cld
mov
stos
xor
jnp
mov
and
push
mov
lret
push
add
imulb
adc
and
jmp
sbb
inc
push
xor
sahf
push
push
and
pop
negl
loop
mov
loope
lahf
imul
clc
xchg
sbb
dec
andb
push
jno
out
push
push
jp
daa
ret
out
xchg
fwait
aad
hlt
mov
push
xchg
add
adc
cs
add
pop
cmp
cmp
ja
movsl
jae
xchg
cmp
test
sub
test
or
fidivl
out
sahf
loop
add
adc
mov
push
sbb
xchg
push
inc
leave
cwtl
dec
adc
int3
lods
out
imul
xchg
outsl
adc
cmc
jae
lcall
iret
xorb
test
mov
pop
mov
sbb
das
je
sbb
jle
mov
mov
xchg
cmp
es
cmp
xorl
ss
xchg
or
incl
jle
dec
imul
mov
in
loope
dec
clc
ja
mov
mov
fnstenv
sbb
sub
pop
aam
xchg
cmp
outsb
ret
mov
div
js
pop
insb
jl
in
inc
pop
sbb
mov
ret
xchg
jmp
int3
or
push
movsb
push
pop
stos
inc
pop
cmp
lret
push
shll
je
push
push
xchg
dec
fdivrl
mov
daa
imul
cmp
sbb
mov
or
pop
fwait
mov
ja
xchg
mov
cltd
mov
loop
or
test
sub
or
dec
gs
repnz
jmp
adc
xor
ljmp
lock
fnstenv
cli
push
test
sub
mov
inc
loope
pop
stos
int3
xchg
sub
push
jle
pop
fsubrl
lcall
and
jecxz
stos
test
xchg
dec
adc
add
mov
push
mov
jge
xchg
mov
popa
orb
sub
or
ljmp
inc
fs
jmp
hlt
or
movl
sti
nop
lods
cmpb
shrl
or
xchg
shrb
and
ret
jns
ffreep
sahf
adc
and
sti
mov
jb
jmp
inc
adc
push
ss
idivb
cmp
rolb
mov
xor
pushf
adc
jae
scas
ljmp
test
add
imul
and
cltd
ljmp
and
cmp
lret
cltd
popa
or
lahf
push
adc
fs
sbb
push
lods
ret
jbe
dec
cli
xor
lcall
adc
inc
gs
and
sahf
sub
mov
shl
into
icebp
push
rolb
jnp
mov
adc
sub
jnp
in
xlat
pop
testb
jo
push
scas
dec
lea
leave
xlat
sub
xchg
jl
ret
out
sarl
ja
sbb
out
stc
out
sbb
sub
cmp
adc
mov
xor
imul
jo
xor
mov
adc
ficoms
rorb
mov
add
imul
xchg
pop
inc
mov
push
jl
and
cmp
push
aad
lfs
xor
jae
xchg
jecxz
ds
inc
incl
notb
inc
iret
sub
scas
leavew
fmul
add
adc
mov
mov
and
mov
pop
test
jmp
lods
or
mov
mov
mov
inc
das
xchg
pop
decb
add
ja
scas
xorb
fcmovne
xlat
xchg
pop
push
fsubr
cmp
lcall
mov
or
and
dec
or
xchg
insl
mov
and
mov
or
leave
dec
jb
shrb
push
lods
mov
xor
lcall
outsl
repz
out
dec
fildll
andl
sbbb
xchg
lock
mov
fnsave
mov
cmp
cs
cmc
inc
xorl
aam
cmpsb
test
ja
out
imul
sub
stos
sbb
shr
fs
mov
pop
ss
insb
mov
pop
mov
jns
bound
sub
inc
jae
dec
mov
subl
repz
imul
mov
aad
outsl
lods
rcll
inc
test
sub
lods
shrb
push
lahf
cltd
dec
out
pusha
push
cwtl
pop
mov
lods
insl
xor
sahf
cmpsl
cld
jnp
nop
arpl
das
ret
adc
xor
lcall
and
aad
cmc
push
ljmp
xchg
mov
cmp
cmp
or
mov
xor
sahf
rclb
xor
std
out
iret
lahf
adc
std
loopne
sub
lods
jmp
or
adc
in
push
lock
or
pop
pop
loope,pn
out
pop
xlat
imul
sbb
ret
cmpl
and
loope
es
xchg
adc
fdivl
imul
sub
jp
fcos
inc
je
insb
pop
jmpw
pop
fisubs
pushf
test
scas
mov
jl
out
xor
mov
mov
sbb
shl
test
lret
push
dec
mov
shrb
cmc
lret
mov
or
cs
insl
sub
mov
push
pop
insb
pop
mov
lds
movsl
jo
out
pop
sub
daa
ljmp
add
sbb
outsb
pop
jne
popa
xor
mov
imulb
add
adc
in
iret
push
icebp
adc
imul
and
push
jecxz
or
adc
in
sub
add
shrl
mov
mov
xchg
or
js
xlat
daa
cmp
dec
push
xchg
inc
loop
or
shrl
mov
xlat
in
scas
xor
stos
jb
pop
hlt
sar
adc
mov
lds
test
jbe
cmp
lds
stos
dec
rclb
add
popf
mov
fwait
sti
mov
ss
xor
loopne
dec
call
mov
ror
xchg
mov
mov
dec
loope
or
rep
or
out
adc
out
insb
lods
mov
stos
repnz
scas
dec
inc
inc
repz
sub
pop
mov
bound
fwait
loop
lcall
push
int
pop
or
mov
mov
sbb
int
xchg
push
imul
jle
lret
push
das
xchg
ret
adc
jbe
cmp
cli
mov
add
cmpsb
out
push
shrb
xchg
push
imul
gs
cmc
js
or
aas
sbb
popa
lock
repz
lret
les
movl
sbb
in
mov
fildll
into
push
pop
scas
sub
jae,pn
arpl
xor
int
fs
fwait
stos
inc
push
mov
loop
cmp
fwait
mov
push
ret
test
inc
sti
ljmp
and
xchg
dec
stc
xchg
mov
jge
sbb
or
or
inc
or
nop
pop
test
mov
icebp
sti
sbb
in
rorb
stos
mov
cmp
adc
mov
cmpl
leave
ficoml
stos
mov
call
inc
cmp
daa
dec
and
xor
jns
out
dec
pop
jmp
sbb
xor
out
xor
jbe
cmp
push
cli
push
pop
xchg
mov
adc
loope
gs
loop
or
push
inc
add
push
pop
or
aam
in
jbe
mov
xor
pop
xchg
stos
sub
fwait
adc
aam
dec
cs
std
pop
or
xchg
xlat
xorb
sub
and
add
addr16
enter
cmp
xchg
int
or
sub
ret
jmp
and
movsb
mov
lret
jge
ljmp
jae
mov
and
mov
jns
sub
inc
mov
mov
xor
hlt
inc
jnp
mov
mov
jbe
enter
ss
sbb
int
sbb
mov
hlt
hlt
fistpll
mov
cs
add
xchg
jmp
mov
fstpt
and
out
xchg
cmp
or
jmp
and
cmp
xchg
pop
outsb
daa
and
test
insl
adc
mov
sub
lock
iret
icebp
inc
jnp
cmp
jns
mov
in
out
and
push
pop
cmp
aad
cmp
add
aad
inc
add
add
hlt
mov
std
int3
mov
push
int3
mov
data16
hlt
jne
cltd
or
inc
fisubl
cli
dec
es
dec
or
scas
cmp
inc
cmc
pushf
sbb
jmp
mov
push
jl
fimull
negl
sbb
into
dec
inc
shrl
fcmovnbe
inc
inc
mov
pop
xor
jnp
es
jne
push
pop
mov
inc
push
jne
sbb
adc
fildll
in
rcl
bound
add
sub
cwtl
add
fldenv
pop
mov
push
xor
adc
rcl
lds
xchg
push
mov
and
dec
xlat
sub
or
sbb
aad
or
and
leave
int3
xchg
cmpsb
repnz
add
hlt
jnp
mov
popa
cmp
jnp
push
mov
mov
iret
sbb
fwait
mov
lods
mov
ss
jb
mov
push
enter
cwtl
pop
cmp
xor
dec
mov
lock
pushl
adc
clc
loop
mov
into
es
in
jno
dec
arpl
jp
fimull
ss
inc
leave
add
xlat
sub
add
add
outsl
jb
inc
cld
inc
mov
inc
loopne
popf
cmpsb
clc
adc
sti
pop
and
sub
mov
jnp
nop
imul
cwtl
push
les
shrl
sub
sub
xor
sub
jnp
mov
or
inc
push
inc
jns
ret
je
andl
sub
push
mov
icebp
sbb
out
xchg
fcompl
add
push
enter
mov
lret
adc
idiv
mov
mov
push
sub
adc
dec
test
xor
loope
add
cmc
push
es
dec
lea
ss
jo
std
adc
stc
jbe
mov
push
fstpl
and
aas
mov
sbb
inc
mov
nop
xor
enter
xor
mov
and
rcr
stos
jg
rolb
mov
xchg
jnp
fwait
scas
sub
aas
pmuludq
cmc
mov
fdivs
popa
mov
rorl
shll
lcall
sub
add
sbb
adc
fildl
loope
inc
pop
and
clc
cmp
jno
xchg
imul
lret
ja
mov
fwait
cwtl
mov
and
cwtl
jno
mov
jne
mov
fisubs
push
in
movsl
add
test
and
nop
scas
inc
sbb
shrl
lods
arpl
jbe
sub
in
in
test
xor
xor
xchg
mov
pop
adc
sbb
mov
testl
incb
pop
test
xchg
nop
inc
push
ja
lret
mov
subl
pop
aad
outsl
or
mov
mov
mov
repnz
dec
cltd
leave
xchg
xchg
sub
shll
test
ret
imul
dec
sbb
shlb
out
ss
or
jno
pushl
jge
sbb
or
push
repz
push
dec
push
xor
js
dec
enter
mov
xchg
addr16
idivl
adc
mov
sbb
cmp
pusha
push
int
and
jne
addl
mov
sbb
stc
jecxz
push
insl
or
push
rclb
jae
je
xor
rcl
xor
cmc
cmp
insb
mov
repnz
in
aam
cmp
dec
cmp
aad
pop
insl
decb
xchg
imul
xor
mov
lods
pop
aaa
loop
repnz
pop
and
js
and
hlt
lret
and
aam
stos
push
mov
adc
mov
out
fs
popf
jl
pop
fsubrl
jbe
mov
imul
ds
cmp
fildl
mov
fxam
or
dec
mov
inc
jns
lods
xor
or
into
add
aaa
sti
loop
sbb
scas
negb
adc
flds
lods
out
shll
push
sti
push
js
mov
stos
es
mov
dec
loope
test
jb
fnstcw
faddl
mov
in
push
aad
xchg
lret
cs
cmpsl
out
sub
dec
jmp
adc
stos
jmp
aas
sub
or
insl
jge
rcl
inc
push
jae
jg
sub
mov
inc
addr16
in
or
lds
add
push
inc
mov
mov
adc
ss
jo
sub
mov
rcrb
pop
aam
imul
insl
xor
pop
mov
inc
iret
ja
pop
hlt
inc
inc
inc
and
fcmovnu
cmp
sub
notl
sub
mov
in
loope
mov
ja
sbb
insl
insl
adc
mov
pop
and
popf
sahf
pop
cmp
in
call
div
dec
xor
or
movsb
sub
out
adc
sbb
ss
add
jmp
pop
js
pop
cmp
add
xchg
data16
std
lret
sbb
push
out
in
adc
mov
fsub
inc
inc
es
mov
sti
inc
shlb
pop
test
adc
fucom
sub
xlat
fisubl
mov
xor
cli
cmp
fwait
outsl
in
shll
lret
loop
push
std
call
fcomp
lcall
or
dec
mov
push
jb
fs
in
mov
mov
add
jno,pt
ss
sbb
add
cmp
pop
ret
dec
outsb
out
pop
outsb
jb
daa
lret
sub
fnsave
fcoms
jo
or
jle
jg
sub
ret
sub
arpl
sub
movsb
jp
push
xchg
push
sbb
ja
add
and
cld
test
inc
les
cmpsb
loope
call
lcall
pop
push
shr
jle
and
push
lahf
sti
stos
push
sbb
sbb
inc
aam
ja
mov
psubsb
es
jno
ja,pn
scas
mov
loope
push
je
lret
mov
add
lcall
inc
inc
dec
mov
push
divl
repz
aam
aad
push
inc
stos
and
arpl
insb
shr
js
mov
push
cmpb
cmpsl
push
add
jg
mov
jns
lea
pop
dec
sbb
sub
scas
and
test
lahf
cmpsl
sub
add
int3
nop
adc
sub
xchg
ret
ds
xor
sub
iret
adc
fisttpll
jo
dec
sahf
adc
andb
fisubl
xchg
out
leave
mov
cmp
push
pop
dec
dec
stc
push
into
rcrb
stos
rcr
hlt
loopne
mov
sub
push
jne
bound
mov
bound
add
sub
decb
xor
adc
test
xchg
inc
repnz
jno
mov
movsb
mov
or
mov
adc
in
leave
adc
bound
outsb
pop
popa
loope
adc
roll
stos
aad
roll
adc
fnstenv
pushf
into
xchg
inc
mov
ljmp
out
out
or
mov
out
mov
add
or
adc
and
jge
adcl
and
mov
mov
push
push
push
out
repz
imul
jmp
or
lahf
fcmovbe
cli
adc
cmp
in
imul
lret
lods
pop
lahf
rcl
fsts
fsubrl
cwtl
cmpb
mov
and
jns
daa
mov
aad
sbbl
adc
stc
mov
pop
lcall
fcompl
fbld
dec
in
loopne
ret
xchg
inc
xchg
cmpsb
loopne
xchg
cmp
sbb
mov
pop
mov
jb
cmp
filds
push
shll
mov
sbb
lret
mov
push
int
scas
mov
pop
mov
mov
sbb
mov
test
dec
stos
stc
out
add
push
out
jne,pt
sbb
push
das
pushf
lock
pushf
ret
and
imul
test
cmp
push
das
xchg
and
or
in
std
outsl
cltd
andb
mov
nop
fnstsw
inc
fwait
or
fwait
das
pop
inc
xchg
nop
into
push
orl
xlat
ret
pop
adc
icebp
sbb
test
adc
test
push
xchg
fs
in
clc
scas
cld
push
dec
push
dec
mov
cld
wrmsr
adc
mov
or
pop
add
push
mov
cs
out
push
test
dec
xchg
out
into
ja
jb
in
rcll
insb
arpl
iret
mov
add
mov
stos
jno
loopne
iret
imul
std
int
or
ja
imul
mov
mov
xchg
jo
xchg
sbb
pop
in
ja
xchg
rclb
pop
btl
movsl
in
xchg
xchg
test
fsubs
or
sets
insb
call
lret
mov
sbb
cmc
cwtl
popa
rcr
inc
inc
xor
sub
inc
adc
mov
jbe
jp
adcl
call
inc
enter
ss
stc
leave
push
sbb
repz
xchg
test
mov
mov
pushw
mov
pop
push
lea
push
and
sti
dec
xchg
out
sub
call
or
jae
and
adc
pop
sbb
fcomps
nop
loop
es
sti
insb
scas
mov
sub
push
mov
mov
xchg
lahf
enter
sarb
les
cltd
cmp
sbb
jecxz
dec
mov
mov
lahf
rorb
lock
lcall
mov
scas
adc
sahf
pop
jp
push
mov
sbb
xor
dec
xor
or
and
repnz
je
loopne
inc
cmc
mov
pusha
jmp
loope
xor
ds
lods
fdivs
loop
inc
loope
mov
jge
rorl
sub
or
shl
imull
inc
dec
xor
popf
xchg
dec
push
scas
sahf
inc
cs
and
nop
out
sar
dec
sub
vmovsldup
sub
imul
push
inc
jns
mov
push
call
outsb
or
es
or
nop
dec
nop
pop
mov
lods
jecxz
in
aaa
lods
orb
inc
xlat
nop
jno
xchg
daa
sbb
and
rcrb
leave
xor
jle
push
jge
loop
pop
fwait
repnz
mov
adc
lret
mov
or
pop
pop
jae
call
jl
mov
or
testl
fs
dec
das
cmp
gs
cmp
test
in
gs
lods
popa
sub
xchg
xchg
jg
pop
outsb
daa
mov
jmp
aas
fistpll
mov
lahf
outsb
or
pushf
sbb
cmpsl
mov
or
int3
and
pop
nop
mov
test
cmpsb
add
mov
in
push
out
lods
out
mov
pop
divb
xor
fucomi
imul
lods
loopne
inc
movb
dec
fadds
and
xchg
fdivs
ds
adc
or
shll
out
ja
adc
sbb
shl
fcmove
mov
xor
push
addb
mov
inc
push
mov
mov
mov
or
mov
mov
push
out
mov
ljmp
loop
cmpsl
or
sub
lret
lcall
fisubs
sbb
ja
xchg
popa
lret
mov
fwait
incl
push
xor
daa
mov
inc
pop
pushf
or
fistps
mov
mov
inc
jl
xchg
adc
jmp
pop
subb
mov
fiadds
out
sbb
adc
insb
arpl
add
lods
push
pop
dec
pop
and
in
popa
test
idivb
cltd
out
or
mov
cwtl
test
int
insb
dec
sbb
xchg
and
fucomi
shrl
out
mov
popf
xchg
mov
mov
test
outsl
mov
sub
cmpsl
mov
push
push
std
push
mov
adc
mov
push
test
mov
mov
divb
xchg
pop
pop
pop
jle
daa
sahf
inc
fnstsw
out
mov
inc
rcl
fcmovnb
add
imull
push
or
movl
call
xchg
fisubl
xor
clc
push
and
sbb
ret
in
dec
add
cmp
cmp
pop
out
arpl
lret
push
push
rorl
loope
mov
jmp
push
fwait
add
in
adc
push
sub
mov
divb
ss
jp
cwtl
lret
xor
pop
gs
xchg
mov
imul
push
xorb
pop
or
les
adc
sub
daa
aad
or
sbb
adcb
mov
cwtl
into
stos
pop
push
loop
mov
rolb
dec
jle
lods
and
xor
js
sub
xor
cmp
sub
adc
lret
inc
lods
mov
inc
xchg
mov
int3
popf
dec
or
xchg
add
and
mov
cltd
jno
jb
jbe
icebp
mov
mov
push
inc
in
and
icebp
leave
pushf
enter
bswap
mov
aad
dec
js
jns
je
sub
sbb
add
in
pop
cmp
xor
cmpsl
sahf
loope
jo
mov
push
cmp
aam
and
sub
mov
cmp
or
or
and
hlt
pop
mov
adc
sub
inc
mov
cmpsl
adc
cli
sbb
shrb
lcall
mov
push
dec
jmp
push
fsubrp
cmpsb
loope
pusha
jle
push
mov
bound
xor
cmp
scas
push
arpl
movl
push
shl
rorb
xor
sbb
xor
dec
fstpl
pop
sbb
mov
push
sub
pop
add
push
cmp
decb
xor
cmp
and
subl
data16
push
notl
sub
push
das
dec
dec
pop
push
popl
mov
jle
data16
out
stos
imul
mov
jl
into
pusha
mov
mov
xlat
jmp
mov
push
pop
test
js
js
sub
xor
pop
popa
push
sub
mov
jp
push
es
mov
into
pop
xor
jno
int3
push
dec
mov
mov
fcmovu
mov
out
outsl
stos
and
or
jle
in
jle
mov
push
clc
xor
xor
ficomps
jnp
sub
psrld
xchg
cltd
cmc
jbe
cmp
adcl
cmp
push
adc
push
ja
adc
in
jle
xchg
fsubl
pop
jb
dec
dec
clc
aam
cmpsl
aaa
mov
xchg
sub
mov
ljmp
test
pop
mov
nop
dec
cmpsl
sahf
je
mov
lea
push
add
dec
push
push
xchg
call
and
inc
push
iret
mul
fcomi
bswap
sbb
cld
mov
cmpb
insl
ljmp
jg
xchg
icebp
loopne
sbb
pop
aad
lods
cmpsb
addr16
add
jmp
jo
add
jle
idivl
in
xchg
pop
cltd
pop
mov
mov
push
jle
gs
shl
aam
movsl
mov
xchg
test
mov
cli
mov
push
push
dec
lock
inc
ret
fsubrl
aaa
aas
mov
movl
ret
mov
push
imul
xchg
mov
xchg
or
jmp
adc
int3
adc
arpl
cwtl
pop
adc
int
orl
dec
loope
push
std
push
std
decl
xlat
outsb
int3
icebp
mov
xchg
or
jne
mov
jae
cmc
adc
cltd
ljmp
lret
dec
adc
mov
xchg
pop
push
xchg
jno
jo
das
jle
cld
add
dec
lret
ljmp
mov
movsl
fildll
dec
mov
inc
adc
push
inc
negb
cmpsl
xchg
inc
test
ja
fstpl
ss
push
xor
stos
popa
cmp
scas
jecxz
lea
xorb
lcall
fstpt
mov
cmp
mov
leave
dec
iret
xchg
and
out
icebp
pop
je
cmp
add
pop
add
add
sub
and
mov
jbe
xlat
je
dec
scas
lahf
jmp
lds
cwtl
imul
jns
fists
sbb
inc
faddl
cmpl
pushf
fcoms
and
adc
inc
mov
or
push
js
pop
mov
mov
xchg
jmp
or
and
iret
addr16
mov
jne
mov
jmp
sbb
bound
je
xchg
mov
xchg
or
loop
and
jle,pt
xlat
ja
dec
jns
fstpt
xor
and
push
out
jle
mov
mov
insl
test
cmp
sbb
andl
jo
sub
jmp
shrl
call
push
push
jno
fwait
ljmp
stc
xor
pop
stos
mov
ss
cmp
jne
mov
inc
mov
into
pop
jae
dec
popf
cmp
pop
mov
cmpb
aad
insb
repnz
pop
push
inc
pop
sbb
jmp
rol
adc
mov
dec
push
mov
out
lret
sbb
push
stos
cmp
pop
jo
test
cmp
jg
movsb
xor
sbb
inc
inc
popf
mov
in
inc
rolb
cmp
cmp
mov
ret
mov
scas
or
daa
mov
xor
add
outsl
aas
dec
leave
aaa
cmp
adc
scas
mov
call
movl
mov
mov
lea
daa
aam
dec
add
sbb
test
pop
lods
mov
jns
mov
nop
mov
pop
inc
push
and
push
sub
sub
cs
mov
rcr
out
shr
add
cmp
test
pop
adc
xchg
and
mov
stos
dec
pusha
cmp
addr16
lds
mov
sbbl
jno
scas
fcmovnu
dec
jmp
aaa
arpl
enter
xlat
nop
insl
inc
mov
arpl
jmp
out
push
lds
cwtl
sub
mov
xor
push
repz
adc
and
call
fnstsw
push
cmpl
test
out
cmp
mov
out
mov
rcrb
iret
das
jbe
outsb
in
in
cmp
and
and
inc
icebp
enter
jns
imul
pop
imul
mov
inc
xchg
xor
lcall
lcall
les
rorb
dec
insb
fisubl
xor
faddl
mov
xlat
dec
push
pop
sbb
push
adc
xor
inc
or
jnp
nop
lock
lock
mov
aad
stos
rcll
push
mov
scas
out
pop
xchg
in
loop
outsb
rorb
lea
jae
mov
xchg
xchg
les
sub
mov
fldl
push
sub
movb
sti
sub
lret
sarb
pop
insb
je
sub
mov
dec
popa
jp
pop
aam
dec
lret
add
cli
sbb
mov
adc
add
out
call
mov
and
in
add
pop
cmp
xchg
jne
xor
scas
inc
ljmp
inc
cld
mov
lds
std
idivl
adc
or
jo
sti
cs
ret
dec
sbb
insl
ljmp
mov
aaa
and
xchg
jp
mov
test
out
pop
je
or
add
mov
in
xchg
gs
loop
and
push
jbe
add
sbb
pop
popf
es
mov
xchg
addr16
lock
jns
mov
pop
test
test
jb
fcmovu
xor
test
pop
add
xlat
and
push
jp
mov
orb
stos
add
nop
sbb
lods
jg
nop
pop
mull
jne
push
lret
mov
das
cltd
mov
fsubrs
mov
movsb
iret
jp
pop
jnp
call
shl
lds
addr16
xor
aas
mov
add
addr16
jb
repnz
lock
xchg
dec
xor
sbb
pushf
clc
lcall
xchg
push
inc
adc
psrad
shl
push
enter
and
insl
sub
inc
pop
cmp
mov
fidivl
in
loope
jl
iret
aad
push
xchg
cld
cmc
jecxz
das
out
xchg
jns
dec
subb
fwait
add
out
popf
xchg
rcl
aas
sbb
mov
adc
push
outsl
mov
jle
in
fbstp
push
push
jmp
movsl
ds
popa
scas
pop
pop
sbb
lret
ret
js
jne
dec
lds
int3
cwtl
test
xchg
jmp
add
sub
mov
sbb
push
xchg
and
lea
in
icebp
and
pop
arpl
sub
jle
push
stos
push
mov
cmp
dec
mov
push
or
out
xlat
mov
or
lods
pop
cmp
mov
jg
shll
and
push
rcr
xchg
or
cld
test
loope
xchg
cmp
fsubr
and
addr16
lock
leave
cltd
xor
popl
sub
orl
add
jle
xor
inc
push
xchg
pop
lret
loopne
mov
insb
xlat
daa
mov
js
pushf
lea
push
add
jae
sub
jne
push
inc
arpl
pop
fsubl
xchg
xchg
pop
int
aam
mov
outsb
cmc
pop
lret
push
mov
imul
ds
imul
mov
aas
insb
xchg
sbbb
or
xchg
cmpsl
adc
aad
fisubrl
movsb
pop
std
aam
and
xchg
dec
in
or
subl
pop
hlt
aam
mov
mov
adc
repnz
not
jp
inc
in
in
pop
jno
dec
and
sarb
jae
mov
xchg
and
pmuludq
mov
rclb
adc
mov
lcall
js
clc
mov
mov
repnz
das
out
fxch
push
jne
jl
mov
pop
sub
addr16
inc
ds
sarb
loope
adc
sbb
divb
or
loopne
add
add
mov
lahf
and
gs
arpl
mov
add
test
push
sti
or
push
out
je
add
insl
jo
sub
or
mov
lret
or
push
lret
ret
add
mov
cs
cmc
sbb
sar
sbb
mov
jp
cli
push
daa
daa
pop
or
cltd
sbb
leave
sbbb
call
lret
xor
movsl
mov
xchg
pop
mov
data16
inc
ds
pop
add
notb
sub
add
es
inc
loop
shll
mov
rolb
xchg
xchg
sub
or
and
dec
sbb
or
dec
sbb
lret
dec
test
in
repnz
cmp
jle
jns
sarb
pop
in
mov
inc
fcmovb
sbb
cs
pop
dec
xchg
push
cltd
xlat
cmp
mov
cld
fsubrp
aaa
out
sti
icebp
mov
test
fst
int3
xchg
cmp
imul
stos
pop
das
daa
clc
sub
aad
std
scas
cmp
jns
stos
std
outsb
push
add
xor
mov
adc
ja
inc
ljmp
stos
jge
stc
stc
es
push
cmpsb
mov
loop
adc
loopne
cld
mov
outsl
add
sbb
cmp
cmp
dec
mov
sbb
scas
gs
ss
ds
mov
std
clc
movsb
dec
add
sub
je
icebp
push
sbb
xor
cmp
scas
pop
mov
and
xor
add
mov
cwtl
mov
clc
test
inc
ds
cmpl
mov
test
xchg
and
fcompl
aad
lock
mov
popf
in
arpl
js
push
jns
ret
xchg
mov
cmc
dec
js
arpl
push
cmp
enter
into
dec
jmp
sahf
pop
pop
dec
or
fucomip
notl
popa
fildl
lret
mov
flds
adcl
fs
sub
adc
dec
xor
push
mov
es
data16
mov
xor
std
jnp
insb
lods
xor
movsb
mov
push
in
push
jge
add
cld
sbb
mov
subb
cwtl
in
cmp
in
mov
enter
mov
xor
sub
pop
ja
dec
or
dec
subl
loopne
iret
or
negb
lcall
pop
fstpl
add
push
aad
sarb
fwait
dec
adc
add
sbb
in
cwtl
or
mov
je
pop
sbb
outsb
and
xchg
sbb
sub
lods
sub
mov
stos
jno
adc
stos
mov
mov
jg
outsb
es
and
fiadds
stos
xchg
imul
pop
pop
hlt
dec
cmp
in
mov
push
ds
and
cwtl
or
xor
fistpll
out
outsb
ljmp
mov
adc
sub
xchg
push
cld
daa
xchg
cwtl
cmp
dec
pop
mov
push
mov
push
out
rorb
cs
push
int3
test
negl
xor
or
rorl
test
sbb
push
divb
xchg
xor
lock
cs
prefetchwt1
cmp
xor
cld
pop
push
sub
dec
insb
pop
ret
mov
xor
into
inc
out
dec
add
xor
add
movsb
lcall
cmp
and
xchg
push
jp
gs
aas
push
mov
cld
xor
in
sarl
jl
add
ss
jg
add
xor
mov
adc
and
cli
or
dec
xchg
lcall
mov
in
push
or
in
mov
out
movsb
scas
mov
addb
sub
or
shrb
and
dec
push
sub
xor
dec
jns
push
and
cmp
mov
dec
or
ljmp
fldenv
xor
pop
xchg
inc
jp
test
or
and
outsl
in
repz
pop
lret
sar
sub
ss
sbb
adc
jne
repz
push
adc
adc
jp
repz
popa
jp
inc
xchg
rclb
mov
pop
and
sub
popa
sub
outsl
inc
sbb
cmp
xchg
lds
aas
movsb
jg
fs
xchg
adc
movsb
inc
inc
bound
aam
jb
clc
xlat
jecxz
lods
jno
out
icebp
inc
mov
cmp
cwtl
loopne
push
inc
sub
stos
outsl
jl
jae
roll
imul
pop
outsl
mov
das
or
sbb
jns
mov
dec
out
call
mov
cs
mov
addr16
mov
and
xchg
scas
jp
add
dec
adc
and
cmp
sbb
in
jp
out
dec
movsl
pop
sbbb
add
xlat
mov
or
push
xor
repz
xchg
pop
sar
sbb
and
pop
jg
mov
enter
lret
es
xor
inc
cmp
jne
stos
dec
pusha
or
jae
dec
movsb
pop
scas
pop
cmp
inc
mov
mov
jns
mov
testl
add
cmp
out
xchg
clc
hlt
mov
iret
add
mov
or
adc
adc
pop
xor
push
pop
pop
nop
pop
mov
cmp
popa
dec
mov
fidivrl
nop
push
js
das
jmp
sbb
push
mov
pop
mov
pop
cmpsl
sbb
sub
fisttpl
fimull
and
stc
addb
arpl
adcw
arpl
or
cmp
push
mov
mov
cmp
sbb
push
cmp
scas
jmp
repnz
insb
jl
stos
mov
mov
cwtl
js
addb
fwait
sbb
ret
addr16
sti
pop
es
and
inc
popa
mov
adcb
push
lds
pop
inc
sti
mov
ds
mov
adc
dec
in
daa
mov
ja
cmp
cmp
cmpsl
stc
jmp
clc
out
inc
cmc
jmp
xor
and
addb
pop
sub
push
add
jns
inc
shrl
push
stc
out
pop
cmc
cwtl
sbb
aas
jp
mov
pop
xlat
mov
sbb
popa
loope
into
dec
jge
jecxz
add
cmovae
out
mov
dec
divb
dec
or
lcall
data16
push
jmp
cmpl
hlt
mov
jmp
inc
test
andl
gs
and
daa
lahf
dec
push
or
dec
dec
popf
aad
test
xchg
ljmp
sbbb
icebp
xchg
or
adc
popf
push
sbb
add
sar
call
xor
jl
pop
adc
push
sarl
clc
xchg
int
into
mov
notl
mov
cmp
loope
sbb
aaa
sbb
repz
xchg
jnp
jg
push
aam
and
jne
in
into
fst
cmpsl
push
aas
and
xchg
xor
sub
adc
into
fists
int
not
sbb
adc
or
pop
mov
addr16
inc
fstpt
inc
push
mov
mov
sub
js
pop
pop
mov
icebp
pop
pop
adc
stc
and
push
in
push
int
mov
cwtl
test
mov
push
pusha
movl
xchg
popf
int
sub
sbb
cmp
rep
call
jo
leave
add
inc
jbe
push
jae
jbe
int
mov
pop
lea
mov
dec
pop
aam
inc
ret
test
subb
push
xchg
mov
mov
jge
mov
clc
push
ljmp
xchg
mov
and
or
dec
cmc
mov
lock
or
xor
pop
rcl
popf
pop
push
sbb
aam
fs
mov
add
call
popf
push
push
xchg
jge
xchg
cmp
sub
xchg
repnz
adc
test
les
dec
sbb
mov
fbld
mov
cmp
arpl
cld
bound
xchg
sub
loope
scas
ja
mov
addb
mov
jmp
mov
in
jmp
mov
insb
inc
fwait
jmp
dec
cli
addr16
rorl
lahf
int
inc
scas
mov
jbe
xchg
mov
out
mov
stos
xchg
movsl
mov
xchg
pushf
rorl
stos
jmp
sbb
out
orl
or
mov
loop
push
sahf
aad
rorl
mov
or
mov
into
pusha
cmp
clc
xchg
in
xor
adc
enter
imul
sub
sahf
adc
mov
enter
cli
sub
jno
std
test
stos
mov
cmpsl
sbb
cmpsl
and
jg
sub
loope
or
inc
mov
jo
cs
dec
out
jnp
stc
xor
divb
ss
loop
int
stos
js
imul
mov
or
xchg
adc
and
mov
andl
loop
jae
ja
jns
jae
imul
test
repz
push
dec
cmp
ret
ror
lods
jnp
nop
adc
xchg
xchg
ljmp
arpl
and
xor
out
mov
stc
icebp
or
jg
cmc
pop
inc
inc
cmp
or
inc
push
pop
lret
push
mov
frstor
aam
movsl
das
mov
jo
xchg
jp
mov
sub
repnz
js
scas
shll
lea
cmp
into
jp
movsl
adc
add
fcmove
inc
rcll
pop
or
mov
push
pop
ss
mov
mov
jle
lods
mov
gs
sub
mov
hlt
mov
aaa
outsb
divl
mov
or
sub
loopne
push
xor
std
mov
leave
scas
sbb
fiadds
cs
xchg
push
cmpl
and
pop
rorb
ret
insl
jmp
je
push
insl
push
inc
jne
mov
adc
test
inc
sbb
movsb
jbe
mov
lahf
gs
in
push
mov
adc
mov
hlt
inc
mov
fs
call
cmp
xor
push
xchg
fistps
mov
scas
cmp
add
add
mov
in
adc
jp
jo
push
cmc
adc
fiadds
test
lods
dec
mov
div
or
popfw
adc
in
clc
xchg
mov
lcall
push
shlb
mov
mov
fsts
int3
push
lods
and
push
addr16
pop
data16
stc
ljmp
mov
add
sbb
rcl
test
mov
xchg
xchg
outsb
arpl
mov
lcall
ds
sub
mov
neg
inc
out
cld
data16
in
sbb
pop
cmc
sub
xchg
jl
imul
loopne
jbe
in
xchg
push
adc
loop
xorb
jno
das
in
add
cmp
icebp
aam
call
mov
adc
pusha
or
mov
dec
jmp
dec
or
push
mov
xor
in
call
jo
add
mov
jne
stos
cmp
mov
adcb
fcoms
sarb
mov
arpl
or
into
xor
cmp
mov
jg
movsl
inc
inc
or
dec
mov
mov
xchg
inc
adc
js
das
pop
gs
fwait
test
jg
shrb
adc
js
push
dec
pop
repnz
sub
in
loopne
cli
fwait
das
fsts
mov
cmp
and
jge
dec
or
movsl
mov
mov
lds
cmpsl
mov
fidivrs
mov
lea
and
fdivs
pop
shlb
stc
push
repz
leave
jo
sti
sahf
adc
push
lds
cmc
pop
stos
sbb
pop
orl
add
sbbb
testl
stos
cwtl
rclb
dec
sahf
lret
pusha
xchg
subb
bound
sahf
pop
cld
xor
xor
dec
cwtl
adc
lret
sti
and
cli
ficomps
outsb
fucom
outsb
imul
mov
pop
in
out
aam
push
push
dec
fdiv
xchg
jp
lds
cmpsb
sub
inc
add
sub
push
bound
add
xchg
or
popf
js
cmpsl
mov
jne
pop
mov
xchg
dec
push
or
cmp
push
add
push
sub
icebp
cli
addb
push
fnsave
push
mov
je
or
iret
push
stos
mov
sbb
ss
imul
cmp
inc
pop
or
outsl
mov
inc
test
mov
add
addr16
js
push
cmpsl
icebp
jl
movsl
dec
mov
bound
push
adc
std
xlat
or
mov
pop
adc
daa
gs
outsb
sub
dec
xchg
cmp
jecxz
int
xchg
pop
cmpsb
mov
jnp
mov
pop
fstl
test
js
call
fsubs
loope
inc
add
mov
jg
stc
jae
mov
sub
int3
jecxz
aaa
add
movsb
pusha
stos
cmp
mov
adc
inc
cwtl
sbbb
mov
ret
out
mov
pop
xlat
mov
fsts
enter
imul
loope
loope
ja
mov
faddl
loopne
lcall
inc
scas
pop
pop
xchg
notl
out
mov
mov
icebp
cltd
fstpt
ljmp
mov
xchg
pusha
adc
daa
jl
adc
or
mov
mov
and
mov
and
lcall
inc
dec
mov
push
pop
xchg
push
movb
fsubl
push
mov
and
bound
leave
inc
shrl
and
jae
sub
rorb
lret
cmp
xor
ds
xor
fcomi
rorb
lcall
lea
cmp
mov
jno
push
mov
adc
daa
jl
push
inc
movsb
pop
in
adc
subl
outsl
cmp
das
inc
into
push
xchg
xchg
loop
pop
cld
dec
add
sti
cmp
lods
loopne
insb
add
sarb
neg
mov
bound
lea
dec
mov
pop
sbb
cltd
psubsb
mov
lock
fisubs
frstor
daa
push
xchg
sti
ret
scas
jmp
add
pop
shll
push
and
cmp
cmp
xchg
dec
insl
cltd
repnz
and
sti
cmpsb
cmpsl
imul
jle
push
and
push
or
dec
xchg
ja
xlat
ss
jg
xchg
sub
imul
mov
xor
lds
testl
jno
jp
scas
dec
daa
push
jl
rcll
and
out
and
mov
xor
add
push
das
hlt
pop
inc
rclb
out
cmp
pop
cwtl
test
outsl
nop
mov
adc
mov
and
jmp
mov
inc
dec
inc
add
lods
in
out
in
mov
addl
push
sbb
cld
shl
pop
lahf
xlat
pop
inc
ja
jb
les
fiadds
jae
cs
mov
and
leave
push
int3
incb
mov
xchg
cmpl
add
call
mov
xor
mov
daa
pop
insb
xchg
pusha
pop
mov
and
mov
lds
jbe
mov
or
lea
not
movsl
mov
lret
sbb
xchg
push
data16
and
je
jmp
and
subb
cmc
or
shll
popf
inc
dec
push
fmul
xchg
mov
jge
int
fiaddl
mov
mov
shlb
insl
inc
add
out
cli
lock
in
sahf
mov
rcrl
cmp
aaa
dec
lcall
ljmp
xchg
or
mov
insl
or
cld
in
sub
cmp
rclb
jns
repnz
xor
xchg
dec
inc
mov
xchg
inc
mov
in
and
hlt
adc
sbb
lret
mov
test
mov
and
fs
lea
movsb
in
jecxz
xor
in
data16
rcr
bound
push
pop
loopne
sbb
pop
or
cmp
imul
sbb
sahf
sub
les
sub
inc
mov
fdivl
hlt
sub
rcrl
push
and
xor
cmpsl
gs
jo
sub
icebp
push
idivl
cld
dec
mov
and
add
popf
aam
outsl
pop
hlt
sbbl
scas
and
out
lret
mov
jbe
sbb
cmp
fwait
outsb
cmpsl
orl
rcrl
fwait
sub
cmpsl
out
xchg
pusha
insb
mov
stos
push
mov
pop
in
pop
bound
test
mov
cwtl
jno
and
dec
sub
mov
mov
in
addr16
movsl
cmp
movsb
repz
push
pop
sub
addb
movsl
xchg
or
test
add
sbb
into
hlt
pushf
xchg
imul
outsb
mov
and
mov
pop
fcomi
add
jns
push
inc
lret
jb
jae
jo
aas
sahf
xchg
xchg
xchg
mov
push
mov
jge
jbe
mov
enter
in
mov
pop
ja
movsl
test
test
loop
pop
stos
xor
pop
mov
lret
add
leave
or
in
cmpsb
aad
inc
repnz
mov
imul
sub
xchg
mov
fs
cmp
lahf
cmc
bound
test
mov
loop
xor
fcmovnb
test
fisttpl
sti
and
add
xchg
popf
mov
jmp
clc
stos
jmp
ud2
inc
pop
cs
jo
jno
outsl
ficomps
ds
sub
mov
push
jbe
in
inc
sub
loopne
test
xchg
fwait
sbb
sub
inc
mov
popf
xchg
jb
pop
sub
mov
iret
lret
shll
or
cmpsl
push
jmp
jo
sbb
xchg
fsub
cmp
jbe
addr16
fstps
lcall
jecxz
or
xchg
clc
call
leave
hlt
aas
sahf
fsubrs
cltd
push
or
dec
fistps
nop
scas
jo
jne
inc
dec
adc
sti
mov
test
iret
ror
fstpl
dec
mull
lret
push
cmpsb
roll
push
dec
repnz
movsb
xchg
mov
inc
lea
je
sbbl
test
pop
gs
xchg
pop
mov
pop
lcall
pop
or
frstor
xor
stos
scas
pushf
pop
or
enter
aad
dec
jno
call
out
cmp
cmpsl
add
mov
dec
mov
pop
rorl
ficoms
sbb
cmp
or
or
pop
icebp
cld
and
pop
adc
push
daa
js
pop
ficomps
sub
in
adc
fstps
push
or
sub
scas
pop
mov
jo
mull
and
dec
jle
jg
js
and
mulb
jnp
test
jg
mov
cmpsb
pop
mov
in
xchg
pop
add
adc
rcrl
cmp
aas
aas
std
mov
mov
icebp
or
xor
sub
test
lahf
shrl
outsl
gs
fldt
testb
addr16
insb
hlt
pop
and
pushf
xchg
mov
push
inc
adc
andb
dec
xchg
js
popf
loopne
cld
push
sub
ss
jmp
jge
add
popf
cltd
xor
xor
mov
jecxz
int
mov
jo
add
add
mov
lods
gs
adc
clc
or
std
dec
bound
mov
imul
pop
lock
ljmp
shl
outsl
sarb
out
fsubl
jl
add
lahf
sbb
mov
jo
push
add
pusha
loopne
sbb
repnz
xor
cli
jp
rdpmc
gs
sti
gs
and
jge
movsl
loop
int3
sub
daa
add
sub
aad
jmp
gs
push
pop
or
mov
lret
xchg
and
xchg
or
in
out
jae
and
in
adc
scas
xor
jmp
mov
in
mov
je
push
add
cmpsb
mov
imulb
out
fcomp
cmpsb
gs
not
imul
adcb
scas
adc
cld
loope
mov
cmp
inc
jo
in
pop
add
fwait
pop
jo
in
pop
in
mov
mov
pop
nop
dec
rcr
xchg
jb
in
mov
scas
mov
pusha
push
ljmp
sbb
sahf
pop
test
or
data16
jo
add
dec
push
insl
mov
lds
push
xchg
and
add
xchg
mov
test
jns
das
mov
imul
add
popa
int3
lods
xchg
jge
mov
jns
movb
movsl
dec
sub
add
push
or
xchg
or
dec
stc
std
xor
sarb
cmovle
mov
xchg
and
add
mov
lea
and
cmp
and
mov
push
fbld
cltd
mov
cmp
in
mov
xchg
sub
mov
ret
xor
pop
test
inc
sub
cld
sub
es
push
xor
push
add
icebp
pop
cmp
ja
jmp
mov
pop
jge
mov
pop
xchg
xchg
mov
aas
mov
or
jb
xorl
aam
cld
sbb
add
das
popf
stos
out
xchg
mov
leave
or
sbb
mov
or
lods
movsb
xor
jp
mov
stos
xchg
add
lods
jae
cld
inc
repnz
mov
stos
cs
pop
xor
adc
add
insb
and
ret
jmp
xor
movsb
int
fsubr
imul
mov
pop
adc
xlat
inc
lret
popf
inc
xor
pusha
int
in
cwtl
iret
xor
insl
push
out
jecxz
negl
sub
pushl
lret
adc
ds
dec
lds
fcoml
aas
addr16
call
push
or
pushf
in
popf
xchg
mov
data16
jecxz
xor
mov
mov
xchg
pop
call
adc
popa
jae
leave
inc
and
or
adc
ret
pushf
vprotb
push
pop
xorl
mov
jbe
xchg
xor
mov
lret
pop
mov
repz
mov
pushf
inc
and
loopne
cld
sbb
imulb
les
xchg
jg
xchg
push
subb
lds
in
enter
push
movl
pushf
jmp
test
or
xor
adc
pop
inc
pop
subb
fstps
stos
roll
mov
sub
xchg
lds
cmpl
incl
mov
sbb
dec
push
and
push
ret
push
mov
mov
inc
xchg
out
mov
test
sbb
xlat
in
dec
loope
fnsave
ljmp
sbb
dec
xchg
pop
outsl
fldcw
xrelease
xchg
inc
pop
addr16
aas
insb
dec
pushf
push
dec
dec
sub
xchg
mov
cmc
jmp
mov
std
insl
push
inc
and
mov
mov
pop
lods
adc
pop
jge
or
sbb
stos
lods
std
arpl
repz
cmpsb
sti
push
jg
fimull
inc
jge
lds
cmp
jae
and
mov
jno
mov
imul
dec
cmp
lock
dec
jo
and
xchg
fldenv
cmp
xchg
outsb
jge
push
ds
push
push
add
pop
cmp
mov
xor
and
out
mov
lods
pop
scas
enter
cmpsl
and
or
popf
test
cmp
pop
cmpsb
nop
push
icebp
cmp
or
popf
jo
aam
call
das
enter
mov
lret
ja
loopne
mov
imul
xlat
cmp
fs
jno
cld
in
shlb
pop
or
jp
sub
push
and
frstor
scas
pushf
in
inc
mov
bound
add
loop
js
imull
insb
ds
cmp
xchg
pop
mov
pop
idivl
inc
shrb
or
dec
repz
lret
mov
cmpsl
xchg
mov
gs
mov
rcr
mov
dec
xchg
ja
cld
das
popf
mov
jb
les
or
aad
add
mov
loopne
cmp
adc
stos
rcl
fisubl
jb
bound
pusha
lock
jecxz
dec
xor
jmp
sbb
lret
dec
pop
xchg
lahf
push
dec
or
cmpsb
xchg
stos
loop
lods
sub
sbb
cmp
dec
xor
jno
add
data16
nop
cmc
fcomps
push
stos
lret
dec
sub
adc
testl
add
movsl
loope
je
gs
cmp
add
mov
popf
stc
inc
stos
xor
and
frstor
xorl
jne
imull
mov
xchg
mov
in
xchg
jne
push
insb
iret
cmc
gs
jbe
in
xor
jns
and
movsb
hlt
orb
sub
sti
aad
add
popf
cwtl
int
roll
and
cmp
add
shl
adc
dec
jmp
add
cltd
mov
loopne
ljmp
fidivl
sub
jnp
push
mov
push
or
pop
push
pushf
or
cmp
and
mov
and
adc
int
cwtl
mov
repz
fwait
xor
out
xchg
xor
mov
sbb
andl
mov
bound
cmp
loop
mov
inc
out
inc
je
or
cmp
imul
popf
repz
fs
ljmp
dec
ljmp
mov
mov
cmp
xorb
pop
adc
dec
insl
std
test
cmp
ds
mov
shrb
lock
in
inc
mov
mov
ljmp
or
out
pushaw
xor
or
mov
mov
repz
push
jecxz
in
xchg
push
mov
pop
mov
inc
lahf
scas
jl
or
mov
push
je
and
fs
pop
adc
int
mov
std
pop
sub
mov
sbb
xlat
idivb
inc
cmpl
into
dec
sub
mov
push
lea
xor
cs
pop
mov
jge
xlat
jns
outsb
sbb
sub
out
inc
ret
dec
xchg
mov
jmp
les
inc
mov
ljmp
jb
ja
cmpsb
push
andb
add
inc
stc
in
dec
sti
push
xor
pop
outsl
xchg
add
pop
cs
mov
pop
repnz
jno
dec
sbb
jl
xchg
mov
xchg
cld
jb
xchg
lods
jl
pop
jle
imull
inc
push
sub
pop
je
xor
mov
pop
popf
fs
das
data16
call
mov
js
jbe
sub
aam
loope
mov
cmc
ret
paddusw
cmpl
fstps
xorl
jno
push
arpl
cli
scas
inc
scas
fs
testl
mov
push
dec
push
xchg
sbb
ljmp
push
sar
xor
hlt
xor
sub
mov
lahf
mov
cmp
mov
adc
inc
cld
mov
in
enter
or
mov
add
into
aaa
js
inc
data16
pushf
push
jge
xchg
popa
cwtl
cwtl
xchg
push
aaa
inc
mov
pop
data16
push
popa
loopne
or
and
pusha
mov
cmc
repz
aas
in
xchg
stc
push
fildl
cmpsb
push
push
call
mov
xor
in
mov
pop
xchg
or
in
fs
pop
jae
lods
mov
jae
outsb
inc
cmp
or
jp
addb
ret
addb
adc
push
dec
dec
scas
mov
xchg
lock
inc
mov
cmp
aas
dec
ds
mov
int3
sti
lret
and
sub
aas
call
sbb
out
fstps
jl
outsl
and
daa
pop
push
xchg
mov
into
inc
js
stos
test
fs
addr16
inc
stos
push
lcall
sbb
inc
mov
ficoms
push
pop
mov
jecxz
pop
scas
popf
inc
adc
prefetch
mov
add
sbb
cwtl
xor
stos
ja
adc
int3
add
fmuls
xchg
xchg
and
jb
mov
popl
icebp
imul
adc
jp
mov
push
testb
out
add
sub
fistpl
xor
push
jmp
or
mov
sub
mov
mov
jnp
in
xor
stc
push
sub
in
js
jns
test
sarl
jnp
stos
adc
cmpb
lret
add
jns
cmc
mov
mov
mov
pop
and
int
mov
addr16
cs
rclb
mov
dec
adc
jo
scas
loop
fucomp
mov
clc
jle
push
push
rclb
lea
mov
imul
or
call
push
adc
add
out
xchg
xor
sbb
lea
sbb
stos
mov
xchg
ss
faddl
fprem1
adc
in
mov
lcall
or
pop
mov
imul
xor
pop
and
loopne
mov
mul
out
ret
pop
das
movsb
sbb
add
push
gs
jns
jle
outsl
mov
mov
in
cltd
add
cmpsl
enter
push
sub
ja
mov
add
stc
pop
mov
ss
sahf
sbb
jns
xchg
adc
inc
fdivrs
outsb
cmp
pop
les
dec
and
mov
leave
jp
mov
jno
and
cmp
cmpb
inc
nop
mov
add
jle
lea
cwtl
movsl
or
int3
pop
in
dec
and
dec
bound
xchg
call
cmp
mov
sub
dec
popf
jnp
dec
test
push
add
cmp
popa
or
cltd
sbb
jge
jl
and
fstpl
push
les
inc
dec
popf
mov
add
dec
fildl
or
mov
fwait
xor
inc
push
into
lahf
aad
aaa
ds
jmp
xchg
or
inc
leave
sub
js
sub
hlt
push
add
aas
pushf
lock
fmull
and
decb
xchg
andl
sub
lods
in
dec
jns
mov
pop
jp
out
jne
jbe
ret
test
dec
xor
cmpsl
bound
push
loope
gs
push
fwait
mov
repz
sti
mov
rol
cmp
mov
sub
insb
mov
sbb
cli
incl
js
movsl
in
lods
ss
loop
test
push
xchg
ret
rol
xor
adc
or
sahf
sar
stos
pop
sub
mov
clc
sub
xor
ds
and
add
adc
aad
daa
jns
fadds
push
imul
js
or
mov
mov
insl
push
mov
jae
gs
stos
xchg
pop
mov
js
jmp
arpl
mov
scas
ds
pop
push
mov
sti
mov
scas
mov
stos
lcall
pusha
push
stc
pop
and
nop
and
mov
mov
dec
push
imul
in
dec
in
pop
fs
loopne
out
push
dec
sbb
xchg
in
xor
push
psllw
dec
inc
sahf
or
in
mov
cmpsb
add
roll
pop
out
rorl
mov
movsb
fsubs
wbinvd
push
sbb
or
stc
or
xor
cmp
arpl
das
ja
stos
in
jo
xchg
mov
aaa
aas
pop
and
mov
pop
sbb
dec
pop
dec
inc
aas
fcompl
inc
lahf
icebp
jno
aas
and
cltd
dec
icebp
sub
sbb
orl
pop
push
or
jae
cmpsl
jbe
and
inc
es
xchg
lret
push
cmpsl
hlt
xchg
pop
cmp
push
sti
shll
test
sub
mov
add
cmp
cmc
lock
aam
pop
inc
add
ffreep
pop
movsb
lock
adc
lahf
insb
ja
jbe
les
enter
addl
inc
incl
cli
inc
mov
outsb
lods
sub
in
test
mov
inc
mov
and
dec
aam
mov
fld
std
jnp
cmp
dec
fldcw
add
jg
arpl
and
fwait
roll
mov
jnp
cli
sbb
mov
testb
mov
adc
dec
and
sbb
sahf
and
mov
cltd
pushf
jns
adc
rcll
sbb
or
stos
mov
sbb
push
imul
rclb
sbb
stc
push
out
jmp
mov
jnp
add
out
pop
imul
dec
fsubrl
ja
lock
xchg
mov
sub
and
pop
in
divb
and
lcall
cmpsl
mov
out
xchg
stc
jmp
aas
test
pop
out
leave
dec
jbe
ret
sbbl
cwtl
addb
jnp
cmpsl
das
clc
int3
data16
test
dec
push
jnp
inc
mov
jmp
xchg
mov
dec
mov
xor
inc
lahf
cmp
xchg
xlat
roll
enter
inc
xor
fcomip
mov
jge
jne
lods
jo
fcomps
cwtl
sbb
push
scas
jnp
cmp
dec
cmp
add
mov
mov
inc
adc
sbb
mov
lods
rorb
lret
sbb
xchg
push
outsl
insb
pop
adc
ss
xchg
fs
std
sub
mov
leave
enter
jb
push
lock
pop
repz
mov
imul
dec
jg
mov
mov
sub
incl
lret
inc
popf
or
clc
push
mov
imul
jle
push
sar
aad
adc
ficoms
jge
adc
mov
pop
pop
dec
nop
sbb
pop
scas
leave
lcall
int
push
inc
xchg
mov
pop
xchg
push
add
gs
ljmp
out
xchg
pop
clc
jno
pop
ret
das
or
in
mov
add
inc
stos
sub
push
rcrb
xchg
mov
loope
loopne
push
fwait
mov
jbe
mov
dec
outsl
ror
loopne
jne
iret
scas
fsub
xchg
mov
mov
repnz
mov
ret
lahf
cmp
jno
shlb
data16
xor
mov
xchg
lahf
aaa
ljmp
mov
popf
hlt
test
or
mov
fidivrs
movsb
addr16
sub
addb
push
ljmp
sub
push
sub
dec
imul
jbe
aaa
cwtl
lods
mov
pusha
sti
loop
mov
ffreep
or
cwtl
or
inc
cld
test
insb
jecxz
js
subb
mov
rcr
push
out
pop
push
push
push
or
push
mov
dec
mov
jge
push
pop
or
fadds
and
and
sahf
push
gs
inc
xchg
je
ss
sbb
sarl
pop
lods
das
push
inc
das
stos
xchg
shll
jg
push
rol
push
mov
or
mov
adc
ror
enter
cld
popa
pop
add
pop
bound
mov
loope
test
in
cld
aaa
lds
std
cltd
push
adc
pusha
stc
dec
pop
jnp
inc
ss
fcomip
and
sub
lods
daa
scas
mov
das
hlt
mov
sbb
pop
out
mov
dec
loope,pt
inc
dec
xchg
push
fcmovnu
lds
xchg
xor
xchg
stc
fldenv
js
out
mov
xchg
ret
jg
orb
lea
testl
mov
lods
shl
pop
cmpsb
push
out
in
fisubrl
cmp
push
les
jb
sarl
pusha
aaa
sub
jb
cmp
sbb
xchg
icebp
sbb
push
cs
lods
pop
cmc
inc
xorb
or
test
sbb
inc
or
push
int
mov
mov
pop
pop
je
arpl
mov
mov
mov
insb
jo
push
dec
xchg
imull
mov
call
jae
js
es
repnz
jnp
adc
stos
push
mov
cmpsb
lods
divl
daa
jp
bound
inc
jge
std
push
stos
xchg
pop
xlat
inc
cmp
hlt
lods
pop
push
inc
adc
cld
adc
pop
or
cmp
mov
pop
mov
push
addl
or
push
jae
mov
cmc
cwtl
inc
out
dec
orb
mov
xchg
mov
xchg
sarl
cwtl
sbb
and
push
xlat
add
cmp
out
adc
cmp
arpl
pop
jo
xor
pop
adc
and
rcrb
ss
rolb
clc
mov
add
dec
mov
xchg
xchg
or
cmpsl
test
lcall
cs
push
addb
xor
sbb
adc
xchg
jo
rclb
test
ret
insl
xchg
cltd
mov
mov
das
lds
cmp
movb
in
xor
mov
hlt
add
movsl
mov
cmpsl
sbb
jno
aas
ficomps
cwtl
cmc
jg
movsl
fwait
shll
ljmp
vmaxpd
jle
add
push
jno
jmp
fucom
aam
and
out
insb
cltd
push
fimuls
int3
movsb
adc
pop
mov
int3
in
xchg
or
in
loopne
mov
test
mov
dec
movsl
int3
mov
push
jne
data16
imul
sbb
lahf
mov
aas
int
xor
lds
and
jae
jge
aaa
mov
imull
pusha
add
lret
lcall
mov
sub
scas
inc
push
cs
or
fwait
sarb
push
jecxz
fsubs
sbb
cld
imul
pop
inc
cwtl
jae
call
mov
xorl
dec
push
add
add
mov
mov
mov
out
push
or
stc
fdivs
enter
add
mov
sbb
dec
sahf
and
cwtl
push
inc
mov
lahf
icebp
sub
loopne
dec
adc
stos
cmc
xorl
divb
mov
mov
insl
outsb
pushf
loope
sbb
mov
jecxz
or
enter
test
fnstcw
sbb
jbe
mov
xchg
inc
pop
push
je
jp
jg
jns
xchg
xchg
daa
adc
jmp
es
ds
lret
fsts
jle
lret
out
inc
ss
pop
cmpsb
fidivrl
inc
cmpsl
stos
dec
jno
lcall
jae
xor
xor
cli
push
push
pop
pop
mov
sbb
sbb
add
mov
or
cmpsb
mov
sbb
clc
xor
xlat
cmc
cmpsl
jns
dec
lods
std
adc
imul
sub
outsb
mov
mov
jns
xchg
dec
jle
bound
bound
lret
loop
cs
add
pushl
cwtl
jo
sub
xchg
jg
dec
adc
pop
push
pop
sbb
jae
dec
add
jnp
mov
cwtl
mov
adc
shlb
imul
or
inc
add
repz
iret
cmpsb
jmp
stos
cltd
jbe,pt
scas
sub
jbe
inc
lcall
and
jo
xchg
test
cmp
dec
sub
enter
mov
les
mov
push
lds
rcrl
rorb
mov
cld
sahf
pop
sbb
sub
test
test
inc
into
and
lcall
test
ffreep
std
stos
cmp
mov
bswap
push
imul
push
dec
data16
lret
gs
aam
push
loope
inc
sbb
les
adc
dec
xchg
adc
out
inc
cmp
xor
lahf
shrb
inc
bound
jg
xor
stos
or
and
mov
and
cmp
or
mov
lahf
mov
out
mov
cmp
sub
gs
fbstp
lods
pop
imul
fistps
ja
pop
push
pop
jmp
and
cmp
or
frstor
cmp
cli
outsb
addl
sarb
sbb
mov
imul
jb
je
ljmp
in
arpl
pushf
out
dec
daa
mov
pop
subb
nop
lahf
jb
leave
iret
jno
icebp
test
scas
imulb
lret
cmp
adc
dec
jle
js
sbb
jo
dec
sbb
xchg
cmc
push
daa
pop
push
xchg
rclb
cmpsl
js
adc
cs
imul
stc
xchg
jge
add
push
mov
sahf
pop
xchg
fwait
aas
or
fsubp
push
outsl
push
mov
mov
jnp
ja
mov
xor
cmp
popa
mov
scas
or
dec
mov
mull
das
jecxz
cmp
fstps
fcmovu
inc
jmp
xchg
pop
sub
inc
push
pop
insb
negb
loop
adc
pushf
idivb
rcll
jo
test
jae
or
fildll
inc
push
mov
ror
lahf
outsl
shrb
cwtl
xchg
dec
xchg
aaa
mov
in
movsl
jns
or
mov
mov
mov
adc
jbe
call
test
mov
jle
cmp
and
add
dec
push
jae
jbe
aas
push
mov
xchg
jecxz
lods
les
das
push
xor
pop
rorl
mov
outsb
mov
cld
push
stos
jnp
flds
mov
pop
out
sbb
push
sub
or
sub
sbb
xor
adc
movsl
jns
jno
add
aad
adcb
arpl
imul
dec
dec
jmp
repnz
sub
push
imul
lret
fwait
mov
pop
xchg
or
and
popf
jp
lret
mov
mov
leave
mov
mov
pushf
xchg
adc
dec
adc
insl
cmp
cmp
push
loopne
repz
sbb
and
leave
pusha
stos
jg
sar
subl
jge
pop
jmp
jae
mov
jecxz
push
aam
int
ljmp
cwtl
sub
xchg
mov
out
lcall
mov
cmp
mov
mov
fidivs
mov
test
sbb
gs
mov
lcall
cltd
iret
add
add
xchg
fidivs
sbb
sub
js
and
scas
jp
popa
aam
fdivs
das
dec
mov
enter
das
test
add
hlt
xchg
fstps
arpl
lret
pusha
lods
stos
push
fs
fnop
in
sbb
lret
insl
or
mov
and
and
call
mov
test
imul
jbe
jge
and
repz
das
movsb
sub
stos
inc
jle
icebp
or
mov
push
xchg
fldenv
in
les
dec
bound
or
mov
je
add
jmp
jno
push
lahf
movsl
push
sbb
mov
movsb
xchg
mov
mov
loopne
inc
and
fldcw
inc
orl
je
in
subl
and
loope
jge
mov
push
inc
add
in
mov
mov
clc
add
xchg
mov
push
jecxz
sarb
mov
cmp
pusha
inc
sub
js
or
add
sbb
insb
das
push
inc
imul
into
cmpl
arpl
fdivs
sbb
lods
adc
push
ret
std
and
inc
and
xor
pop
shll
adc
mov
sbb
lods
mov
mov
add
sbb
sub
out
mov
mov
test
xchg
push
mov
repnz
sbb
ret
sub
aad
insb
rcrl
cmpsb
sub
es
sbb
jb
and
addr16
sbb
movsb
cmp
shlb
mov
mov
inc
jp
push
cmp
inc
cli
inc
add
and
int
jmp
lock
cmp
notb
jbe
test
and
sbb
dec
popa
mov
std
inc
pop
mov
popf
sbb
xor
fadds
fs
adcl
mov
movsb
jge
inc
test
aam
lods
jge
inc
rcr
ljmp
or
test
xchg
jg
and
jl
xchg
ja
push
cmp
test
lea
push
fiadds
xchg
fwait
mov
mov
inc
jecxz
push
ljmp
push
push
or
push
stos
lea
outsl
ficomps
repz
imul
test
sbb
frstor
fisubs
jecxz
sub
sub
and
repnz
add
lds
sub
clc
and
icebp
and
in
push
scas
pop
sbb
jnp
js
mov
and
jp
inc
pusha
test
xchg
ret
inc
dec
aad
adc
push
mov
push
in
xor
cltd
cltd
dec
xor
bound
popf
out
movsl
mov
std
sahf
mov
xchg
push
shrb
lods
daa
les
daa
mov
lea
mov
cmc
jl
dec
repz
adc
dec
mov
cmp
xor
dec
push
lahf
inc
xchg
jns
jo
cmc
cmpsl
inc
fimuls
xchg
test
test
mov
push
mov
jbe
xlat
jne
call
stos
inc
cmp
das
fists
xor
test
dec
dec
movsl
aas
mov
xchg
out
jp
mov
ljmp
shll
icebp
in
push
push
rol
lock
cli
jno
xor
loop
clc
xchg
bound
fcoms
and
jecxz
dec
push
cmpsl
mov
jnp
and
test
add
dec
lds
aaa
sbb
dec
xchg
push
push
and
call
jl
mov
push
xchg
imull
or
popa
lret
cmp
dec
pusha
adc
push
ret
sarb
push
sub
pop
nop
ret
fsubrp
les
mov
das
inc
in
fbstp
popa
mov
leave
inc
or
xor
ds
rol
xchg
fadds
das
dec
lea
outsb
cmp
decb
or
xchg
ret
mov
sbb
jge
dec
cmp
es
inc
daa
push
pop
push
sarb
fistpll
cld
xor
lods
or
fcmovb
insl
push
mov
test
adc
xor
repnz
push
insl
cmp
mov
aad
icebp
sahf
stos
rcl
into
fwait
lock
lret
sbb
pop
lds
push
and
inc
fwait
sub
das
cmp
dec
lcall
add
mov
jns
arpl
call
sbb
adc
test
shll
jp
fstpl
sbb
icebp
imul
mov
repz
adc
clc
clc
dec
and
adc
add
add
xor
imulb
rorl
addb
lods
iret
ljmp
out
sbb
popf
or
testb
cmp
adc
iret
cmpsl
push
out
mov
mov
dec
adc
mov
lds
pop
push
dec
pop
aaa
push
push
dec
sbbb
pop
sahf
mov
icebp
push
and
mov
fwait
mov
mov
mov
std
sub
sub
lahf
repnz
xor
mov
ja
shlb
jo
jp
jno
jge
mov
push
push
jmp
pop
into
fiaddl
stc
pop
xor
pop
fisttpl
pop
ljmp
scas
push
dec
lods
xchg
or
jmp
push
cmp
insb
sahf
cmc
aam
ja
es
fs
mov
aam
hlt
add
imul
sub
imul
test
add
outsb
aad
or
decl
xchg
in
hlt
aas
ljmp
cltd
mov
lods
or
lds
fidivrl
adc
imul
sub
add
mov
test
movl
loope
adc
sbb
loop
rolb
aaa
mov
mov
lock
push
je
cmp
ret
mov
repnz
aam
adc
in
inc
dec
mov
add
imul
pop
lds
cmc
lock
jecxz
jae
mov
pushf
jmp
push
adc
rorb
call
cmpsb
mov
repz
lock
xor
sub
pop
lret
sub
mov
push
fnsave
jmp
cmpsl
xor
push
sti
xchg
movsb
jno
ret
or
shll
jb
inc
nop
mov
mov
loopne
mov
fisubrl
sbbl
cld
imul
or
popa
jmp
je
xor
adc
and
adc
mov
pushl
je
xchg
inc
cmp
cmpl
aas
in
test
dec
xorl
push
mov
lods
ret
pop
lahf
xor
lret
aad
mov
imul
stos
dec
mov
addr16
addr16
mov
outsb
fmul
inc
jae
pop
fstpl
or
fstpl
arpl
stos
cli
lds
arpl
roll
cmpsl
cmp
and
stc
movsb
mov
ret
dec
rcrl
imul
mov
scas
adc
cmp
cmp
and
jb
cmpsl
mov
inc
gs
jae
lds
testb
imul
pop
sbb
dec
cmp
notl
add
insb
adc
push
js
lds
xchg
in
test
pop
mov
je,pt
ret
sahf
enter
ficoms
cmc
mov
lcall
mov
lock
in
in
inc
fsts
notb
lods
in
add
jecxz
cmpsl
mov
insb
rcrl
and
cmp
xor
insl
jbe
imul
mov
fidivrs
hlt
cli
in
andb
out
pop
xor
cli
cwtl
xchg
mov
bound
adc
jno
pusha
mov
mov
loopne
add
repnz
ljmp
xor
out
je
dec
push
sbb
lret
push
mov
pop
es
test
aad
icebp
out
dec
stos
es
stc
loope
repz
pop
push
outsl
push
pusha
pop
inc
insl
scas
xchg
or
cwtl
mulb
mov
int
stc
jbe
inc
lahf
aad
sub
push
jne
data16
mov
xchg
ficoms
pop
dec
outsl
std
and
movsl
movsb
rorl
mov
mov
mov
es
cmc
xchg
xor
scas
xchg
push
and
cmpb
clc
mull
dec
mov
popa
shll
subl
cmp
mov
int
mov
dec
jmp
lahf
out
pop
loop
je
mov
inc
adcl
dec
lahf
fnstsw
pop
ret
repnz
cvtps2pd
nop
shlb
push
cmp
fwait
mov
leave
insl
int
xchg
pushf
scas
mov
cmpb
mov
fisubl
lods
and
lret
push
push
bound
dec
ss
mov
test
and
je
xchg
sbb
loop
les
cli
arpl
les
or
dec
sbb
push
sub
aas
outsb
jle
xorb
shrb
out
int
xor
push
and
das
inc
clc
es
sbb
fst
mov
cmc
jmp
cmc
jmp
daa
or
and
fildll
inc
xchg
inc
and
jbe
stos
loopne
imul
jae
sbb
jg
call
cmpsl
popa
cmp
lahf
andb
ds
jmp
mov
imul
fisttpll
int3
call
addr16
insb
out
sub
sub
sbb
dec
and
andl
add
inc
lock
and
add
mov
or
mov
inc
adc
fisttpl
ret
jbe
xchg
push
push
sbb
fistpl
add
mov
test
outsl
loope
lock
xor
push
cwtl
xchg
repnz
xor
dec
lret
fldcw
js
sub
ret
lods
push
inc
outsl
xor
cmc
push
popl
mov
jp
mov
xchg
imul
xor
xchg
lcall
dec
loope
aas
cltd
je
mov
mov
or
call
popf
mov
insl
fs
test
add
leave
mov
pop
fsubrs
aam
js
enter
xchg
mov
and
pop
xchg
mov
insb
loope
jno
pop
into
repz
jmp
or
mov
mov
ret
mov
xlat
scas
fwait
addr16
adc
mov
loope
xor
and
lret
jne
adc
jecxz
sti
xor
aas
int3
pop
sbb
inc
adc
cmp
stos
mov
mov
sub
pop
mov
ror
fs
or
mov
push
fidivs
andl
xor
fdivl
xor
fbld
shlb
lds
filds
push
cmpsl
cmpsb
std
jecxz
in
dec
sahf
cli
mov
pushf
mov
adc
cmpsl
lea
fsub
test
movsl
icebp
adc
jae
into
sub
mov
ljmp
mov
rcrb
cmc
jae
aaa
mov
adc
push
pop
fdivs
push
subb
or
adc
lahf
xlat
xor
cmp
mov
jmp
mov
notl
dec
mov
scas
mov
and
adc
in
cmp
shl
lods
loop
ret
dec
dec
push
dec
test
lods
pop
sarl
adc
out
cmp
xchg
and
lea
orb
cmp
ja
leave
sub
push
mov
inc
clc
repnz
lods
ror
movb
test
je
into
mov
xchg
je
hlt
push
jns
xlat
rcrb
inc
sub
lods
jbe
imul
movb
mov
mov
mov
movsl
mov
pop
pop
jg
scas
lret
mov
or
addb
xor
or
xor
inc
iret
stc
sub
lds
sub
cmp
lods
xlat
xchg
dec
xchg
xchg
rcrl
lock
movsl
mov
std
leave
dec
lods
push
test
addr16
or
shrl
push
dec
xchg
insb
stos
xchg
nop
cmp
fcomps
dec
pop
out
xchg
pop
lds
pop
outsl
ds
mov
push
out
in
lcall
adc
jbe
int3
or
ret
xchg
cmp
outsb
nop
and
cli
cmp
jmp
or
orb
jp
dec
push
jne
jmp
xor
dec
dec
or
test
jg
in
scas
jmp
lea
sbb
pop
lret
pop
and
dec
mov
push
and
sti
ss
dec
adc
add
testl
cltd
adc
or
add
add
aam
vpunpckldq
clc
lahf
and
lods
cmpsl
sbb
hlt
sub
repnz
imul
xlat
inc
sub
rorl
mov
cmc
test
mov
xchg
decb
lret
mov
shll
idiv
and
xchg
movsb
in
data16
mov
popf
mov
sarb
lahf
inc
mov
sub
sarl
sub
and
mov
and
xor
loope
push
in
and
daa
pop
pop
mov
ljmp
or
pop
adc
incl
daa
push
mov
mov
ljmp
add
xchg
jo
lahf
xchg
add
jle
inc
jno
push
imul
jecxz
ret
in
dec
in
and
gs
pop
std
xlat
sti
pusha
call
jecxz
fstps
add
push
mov
subl
jle
inc
sbbb
dec
es
jns
iret
in
pusha
or
xchg
push
adc
out
cli
lds
sub
jo
les
inc
test
addr16
ss
loope
xor
inc
jne
inc
jmp
xchg
xchg
xor
out
xchg
dec
xchg
jb
or
mov
pop
int
inc
dec
sbb
mov
imul
scas
jp
lea
mov
ficoms
fxch
push
sbb
in
xor
mov
push
mov
mov
xchg
lea
sbb
mov
clc
ret
mov
inc
jo
mov
xor
stc
data16
push
rorb
inc
add
or
jo
das
add
inc
cmp
jnp
cmp
dec
cmp
jge
push
orl
lds
xor
stos
adc
xor
push
cmpsl
rclb
mov
scas
add
pop
fimuls
or
scas
inc
xlat
lret
inc
add
mov
cmp
test
push
out
jg
fs
sbbb
mov
daa
cmpsl
sti
pushf
or
ret
pop
cmp
call
loopne
mov
fcomps
xor
int
fistl
mov
jl
rclb
jmp
sbb
rolb
jl
add
mov
orb
xchg
xchg
test
mov
cmp
inc
sbb
xor
addps
pop
aas
pop
sub
fidivl
dec
push
mov
xchg
out
in
movsb
pop
std
cld
jmp
jae
int3
push
out
pushf
das
adc
bound
test
xor
mov
adc
jp
cmc
adc
ret
test
lret
enter
mov
shrb
xchg
push
dec
sub
cmpsb
or
xchg
cmc
adc
ljmp
mov
insl
pop
and
xor
aam
divl
or
mov
inc
shr
xor
cmp
sbb
sbbb
jp
jg
or
inc
sbb
mov
lret
and
jle
cmpsb
push
repz
in
push
lods
sbb
testb
cmp
test
iret
movsb
es
push
push
cmp
sbb
lock
loop
jns
lock
outsl
test
shl
outsl
cmpsb
mov
in
mov
mov
mov
ret
pop
add
sbb
bound
jae
into
pop
mov
gs
push
das
or
pushf
sub
les
or
and
scas
cmc
std
xor
lret
mov
xor
jb
jbe
lea
mov
imul
shrb
imul
mov
stc
jae
mov
mov
in
sbb
and
mov
mov
loopne
popa
out
pop
xchg
xchg
outsb
sub
daa
inc
and
cmp
xchg
hlt
cld
jae
pop
xor
sti
clc
sbb
jmp
ljmp
fwait
inc
aas
dec
add
dec
in
push
jle
add
or
jb
xchg
movsl
test
in
mov
push
shll
xor
mov
sub
inc
xchg
neg
mov
nop
push
pop
in
mov
pop
aad
daa
ds
adc
clc
sahf
mov
movsl
mov
or
xchg
add
dec
sub
lock
jbe
and
movsl
jne
xor
outsl
add
stos
rcr
xlat
inc
jne
mov
sub
arpl
pop
fstl
loop
push
sbb
push
sub
movb
in
inc
sbb
pop
imul
jbe
daa
jl
mov
dec
mov
or
push
es
jnp
test
dec
mov
mov
jle
add
lea
add
negb
fwait
inc
sub
xchg
test
inc
pop
mov
out
sbb
push
negl
jle
or
mov
dec
sahf
jg
mov
mov
stc
daa
mov
into
repz
or
adc
mov
push
inc
push
mov
mov
dec
push
loope
in
popa
scas
sub
sub
les
das
jnp
movsb
fwait
pushl
inc
or
xchg
xchg
scas
ljmp
jno
je
loope
jle
sbbb
mov
test
int
mov
int3
mov
xchg
mov
mov
push
xchg
fisubs
mov
call
int
insb
aam
scas
in
add
jecxz
loopne
cmp
inc
ret
aas
popa
sbb
cld
rorl
das
cmp
jl
push
push
sahf
mov
je
xchg
sub
jmp
int3
or
xchg
aas
dec
sub
out
hlt
fdivrl
pop
sub
jb
iret
pop
pop
fistl
jo
ret
push
dec
sbb
pop
ds
js
cmp
mov
push
jg
cmpsb
or
push
mov
ljmp
xchg
cltd
mov
in
mov
pushl
push
leave
stos
xlat
movswl
push
shrb
xor
gs
shlb
scas
jmp
mov
mov
mov
push
daa
inc
add
jo
pop
mov
addb
jnp
or
pop
push
cmp
sub
cmp
jb
mov
ljmp
push
sub
sbb
sub
and
fistpl
ret
fiaddl
push
pop
movsb
sub
inc
jle
ret
or
cmpsl
jbe
sahf
mov
in
les
xchg
shl
mov
call
sbb
xchg
inc
mov
lock
mov
shlb
jge
pop
jmp
lds
and
inc
jo
jmp
mov
lods
int3
lcall
xchg
xor
xchg
cmp
xor
movsb
rolb
or
xchg
aas
mov
dec
dec
or
mov
mov
outsl
call
clc
pop
insl
dec
arpl
push
mov
push
and
sbb
cmpsl
stos
dec
add
xchg
sub
jns,pt
dec
jle
popl
add
mov
ffreep
fdivrl
mov
repz
jmp
out
fstpl
fsts
movsb
cmp
enter
addr16
pop
movsb
or
mov
lret
inc
jl
aas
insb
sub
xchg
lods
ja
mov
lret
mov
inc
iret
xor
stos
lea
cltd
inc
pushf
shll
push
cmp
mov
jge
in
mov
mov
dec
lock
or
dec
mov
out
inc
pushf
ds
mov
test
subl
mov
call
lret
out
push
xchg
cmpsl
add
test
sbb
aam
jl
pop
inc
mov
xchg
xor
push
mov
cmpsb
add
xor
in
in
pop
push
and
mov
and
adc
popf
mov
mov
jo
adc
xor
mov
cmpsb
rorl
dec
jg
inc
pop
cmp
out
fcmovnb
sbb
lahf
jbe
cmp
out
cs
xchg
xchg
xlat
dec
in
push
out
movsl
mov
jmp
or
sbb
pop
fisubrl
xor
push
daa
rcrb
orl
leave
jmp
xlat
xchg
and
mov
xchg
pop
in
in
imul
popa
mov
add
jg
inc
fstpl
or
push
lret
lds
push
mov
sbb
lods
jl
xor
pop
cmp
fs
cmp
mov
scas
aas
outsb
pop
sbb
lock
data16
repz
pusha
out
aaa
cmp
sbb
int3
je
rcr
cmp
test
aad
in
sub
jbe
fimuls
push
push
cmpsb
xor
fisttpl
out
xor
sbb
insb
jle
adc
and
popf
xchg
dec
and
and
stos
jecxz
cmp
push
mov
dec
push
adc
scas
mov
dec
sarb
fistl
lock
fdivs
add
xchg
enter
jno
sub
lret
stos
sahf
sub
sbb
mov
xchg
jmp
xlat
scas
or
cli
cmp
inc
push
outsl
ss
mov
es
xchg
call
aad
repz
inc
inc
out
nop
dec
stos
jmp
xchg
cmp
xlat
mov
or
adc
pop
inc
push
push
int3
cltd
xor
stos
xor
jne
xor
int
add
pusha
gs
mov
icebp
or
lods
jecxz
popa
and
lret
cltd
scas
sub
push
xor
push
adc
outsb
mov
adc
sahf
cmp
jl
jae
mov
lcall
push
les
je
shl
loope
cmp
push
mov
sub
inc
movsb
lock
fistl
fwait
cs
dec
mov
or
int3
shr
dec
mov
fadd
shll
lock
pop
or
and
pop
add
add
andb
test
xchg
js
push
pop
dec
sbb
rcrl
adc
mov
fisubs
jns
mov
call
outsl
std
scas
popa
cmp
jecxz
insl
push
mov
inc
mov
pop
add
mov
je
xchg
bound
jnp
scas
inc
adc
ret
pop
xlat
fsts
out
inc
fisubrs
push
das
or
in
mov
push
enter
or
fidivs
xchg
enter
nop
sub
xchg
pusha
sahf
mov
mov
std
into
sub
jbe
shrl
lods
cmp
adc
rcrl
mov
inc
loop
xchg
xor
or
cs
cli
ret
enter
rcrl
mov
xchg
xchg
push
repz
repz
dec
pop
push
fmull
cmp
loop
dec
ja
ror
xchg
in
sub
dec
pop
test
mov
test
pop
ja
rcr
or
and
inc
xchg
sbb
or
jp
cmp
std
adc
jmp
xchg
mov
je
add
ja
add
add
sub
iret
lret
inc
dec
inc
jl
lods
inc
int3
addb
cmp
add
and
loopne
mov
push
pop
sub
xchg
push
mov
fs
mov
fisubs
push
popf
sub
sub
jge
dec
jnp
mov
aam
inc
ja
xchg
mov
mov
shlb
pop
inc
add
cmp
cmp
xchg
add
les
jae
cmp
pop
sbb
nop
inc
lds
fimuls
and
xor
ret
xchg
mov
sub
xchg
les
insl
mov
adc
pop
add
inc
or
mov
jle
enter
in
sub
jl
add
sub
mov
fwait
jae
jns
pop
push
arpl
mov
imul
lret
cmp
fisubrl
shlb
dec
js
in
inc
ss
cli
and
cmp
or
pop
ficoml
call
mov
in
adc
test
pop
mov
nop
pop
jbe
add
ljmp
scas
inc
sbb
dec
sub
xchg
sub
ret
or
cwtl
hlt
sbb
add
push
stos
sbb
push
and
mov
lods
scas
adc
lahf
repnz
aaa
cmpsb
daa
adc
hlt
fmulp
leave
aam
loop
pop
sbb
sub
mov
inc
lret
and
int
xchg
ljmp
bound
rcrl
clc
sbb
arpl
repz
jecxz
aad
jmp
pop
sbb
jno
in
inc
cmp
gs
push
xchg
lret
xlat
sub
jae
notb
mov
loopne
lods
sub
int3
jb
lret
ficompl
out
test
scas
fisttpll
fadds
sti
xchg
adc
stos
nop
push
shl
sbb
test
add
js
in
in
jb
xchg
movb
adc
mov
sbb
in
push
sub
jbe
mov
sub
stos
test
jb
push
and
stc
cmp
stos
pop
inc
int
mov
repnz
shll
xchg
mov
and
sub
push
rcrb
pop
leave
pusha
cwtl
xchg
outsb
and
lahf
sti
pop
fistpll
mov
popf
jl
hlt
fldl
sbb
mov
jo
jno
into
jne
imul
and
push
into
add
test
push
das
lock
fld
loope
push
clc
shrl
pop
ss
in
femms
sahf
xchg
ljmp
imul
jg
aad
scas
push
push
int3
les
vmovapd
xor
outsl
subl
ljmp
xchg
xchg
xchg
add
lcall
mov
jns
fimuls
dec
outsb
nop
das
or
inc
movsl
push
mov
mov
jne
pop
adc
push
xor
xchg
dec
hlt
xchg
rcrb
inc
pop
in
sbb
xchg
in
mov
xlat
lea
pop
loop
add
iret
jae
mov
clc
and
lock
add
pop
pop
xor
sbb
gs
jae
sbb
pop
lock
adc
dec
push
stc
shlb
xor
pop
sahf
and
adc
push
fisttpl
inc
fcompl
es
ret
lock
outsb
xor
je
mov
sub
clc
lahf
stc
out
sbb
and
sbb
sub
xchg
dec
and
xchg
cmp
mov
inc
dec
aaa
std
rcrb
cs
and
cli
mov
sub
into
xor
insl
test
sub
lods
data16
xchg
in
jae
aam
aas
pop
add
sti
ljmp
aad
cs
sub
test
mov
push
mov
xchg
decl
mov
lock
pop
pop
lock
lds
jp
mov
pop
in
shl
cmp
enter
lock
jecxz
data16
nop
add
fstp
pop
insb
movsb
aas
push
insb
push
into
sub
stos
je
or
dec
bound
cltd
mov
jmp
std
sub
cmpsb
dec
mov
mov
lea
add
shlb
cmp
inc
dec
mov
fs
scas
mov
call
inc
jo
or
sub
imul
cld
xchg
addb
jb
loop
sub
outsb
fmuls
outsb
addb
or
lcall
movl
mov
jge
add
ja
insb
fcomp
adc
mov
ficompl
daa
loop
and
fcomps
push
mov
jnp
jnp
ss
enter
inc
xor
jp
mov
mov
jge
push
jae
xor
rclb
mov
bound
inc
mov
dec
lret
adc
push
jl
movb
mov
add
or
enter
cmp
mov
dec
jge
inc
hlt
jge,pn
fwait
imulb
jle
aad
inc
cld
inc
imul
mov
cmp
dec
mov
cmpsl
lret
jmp
and
sarb
fmull
mov
fsub
mov
lods
push
jp
loopne
insb
ret
nop
sbb
test
xchg
push
mov
pusha
ret
pop
mov
clc
cs
ret
xchg
mov
ljmp
rcrb
mov
les
sbb
xchg
jmp
js
sbb
xchg
jmp
loop
fstpl
mov
inc
sub
pop
mull
sub
mov
xchg
nop
xchg
sub
inc
dec
shlb
xchg
sbb
cltd
xlat
ss
cmp
fcmovb
xchg
into
and
lret
mov
lods
lcall
fsubrl
pop
dec
cli
gs
fucom
mov
shlb
movl
cmp
push
mov
xor
out
ds
pop
pop
jmp
inc
imul
ret
and
mov
cmp
nop
push
daa
pop
jmp
sbb
std
jnp
cmp
pop
scas
int
jbe
sbb
xor
je
push
scas
std
jecxz
call
mov
sub
inc
dec
cmp
jae
addr16
cmp
clc
jmp
pop
mov
addr16
or
jmp
and
mov
mov
inc
popf
in
xor
fldl
sub
in
xchg
cld
test
cmp
cmp
std
gs
in
sbb
jb
adc
loope
in
cmp
testb
fldt
lods
mov
xor
mov
jmp
mov
rclb
sub
mov
lret
and
inc
mov
in
in
inc
imul
stc
notl
xchg
inc
test
pop
adc
mov
lea
ss
xchg
mov
jl
cmpl
test
in
mov
dec
stos
mov
dec
inc
icebp
lret
jg
mov
les
or
jns
popf
push
shr
add
sub
scas
test
jmp
xor
adc
mov
insl
add
push
mov
push
adc
int
aam
in
mov
sbb
push
cltd
pop
loope
sbb
mov
mov
xchg
xlat
out
inc
mov
jmp
push
inc
cmpsl
out
fs
lahf
pop
mov
lods
and
sub
and
mov
cs
dec
mov
xor
xor
out
negb
mov
mov
subl
je
add
jno
push
in
add
jg
addr16
cwtl
and
xchg
clc
shlb
mov
jge
jecxz
cmp
ret
mov
push
ret
fistps
sbb
xchg
pop
aam
mov
adc
xchg
jnp
push
mov
mov
call
ljmp
stos
jp
sub
xchg
mov
ja
sbb
fisttpll
repnz
addr16
iret
mov
iret
sub
dec
cli
mov
in
inc
push
or
imul
xchg
out
fnsave
movsl
pop
add
cld
jle
push
push
subb
inc
fs
ret
pusha
lret
add
add
sbb
inc
insb
sahf
out
dec
fdivp
call
and
adc
pop
repnz
scas
inc
adc
adc
mov
rclb
dec
push
adc
or
jnp
leave
jmpw
xor
cmp
sbb
sub
stos
mov
mov
mov
subb
xchg
add
lahf
push
sbb
dec
rorl
pop
xchg
fdiv
xchg
jecxz
and
pop
lret
cwtl
mov
or
mov
dec
out
imul
int
adc
jp
inc
push
push
rcll
hlt
scas
out
clc
insb
dec
sub
cmc
and
inc
aam
xor
call
rdtsc
mov
rcr
sti
mov
outsl
pop
sbb
aad
jge
popa
mov
loope
xchg
out
sub
pop
dec
pop
dec
jecxz
mov
sub
sub
push
shll
imul
mov
dec
pop
jo
enter
dec
inc
mov
sti
and
lods
inc
lds
je
pop
rclb
xor
cmpsb
jmp
arpl
cmpsl
adc
out
push
or
mov
icebp
push
push
mov
cmp
pop
mov
out
stos
lcall
adc
sub
xlat
pop
sbb
xor
inc
lret
cmp
mov
inc
jb
ret
mov
mov
push
imul
xor
dec
mov
and
testb
push
inc
pop
popf
adc
jne
mulb
and
xchg
imul
fwait
je
xor
shll
mov
push
cmc
dec
sub
sbb
inc
pop
xor
jge
push
xchg
add
mov
add
and
push
out
imulb
push
mov
and
mov
xor
loop
out
or
enter
push
push
pop
mov
out
out
cli
mov
push
and
and
das
mov
cli
mov
add
inc
addr16
nop
lret
std
jmp
xchg
in
add
enter
add
cld
test
mov
fdiv
mov
mov
mov
add
scas
out
loop
imul
lret
nop
lea
sbb
in
shl
jge
rclb
jae
jno
jl
in
jns
int
rcl
adc
nop
xor
push
into
lcall
fisttpl
enter
call
cltd
jo
adc
mov
jno
pop
pop
and
inc
and
rcl
imul
add
add
mov
aas
jle
sarb
sub
fbld
lcall
test
or
pop
addr16
stos
stc
push
dec
cmp
cmp
in
jo
pop
and
xor
mov
cmp
sub
fucomip
jae
jl
mov
sbb
pop
mov
in
es
sar
out
dec
jecxz
xchg
inc
dec
and
or
stos
shll
int
loope
cmc
je
test
into
js
repnz
sbb
fwait
pop
dec
cmp
adc
sub
lcall
int
push
imul
dec
sahf
adc
cmp
movsl
jl
jmp
incb
sti
mov
lods
out
popa
jg
les
mov
ja
dec
sbb
enter
or
ret
sub
ljmp
outsl
arpl
fwait
imull
mov
adc
repz
jg
test
stos
adc
sti
cmp
add
pop
and
pushf
cld
es
xor
aas
cmp
ljmp
push
mov
daa
es
add
sahf
std
aam
mov
scas
scas
sub
lcall
pop
aam
fndisi(8087
out
loop
adcl
adc
mov
out
daa
push
rcrb
loopne
jno
adc
int3
jae
jg
jns
or
rcrl
pop
dec
stos
dec
ret
shrl
mov
cmp
movb
mov
add
bound
pop
mov
scas
cmp
dec
add
in
or
jl
leave
add
lods
lahf
loop
stc
bound
stos
mov
mov
mov
lods
outsl
push
ljmp
xor
dec
inc
add
popa
fisttps
rorb
xchg
mov
ret
pop
adc
inc
das
jns
gs
es
popf
mov
in
sbb
xchg
ret
inc
js
aad
stos
loopne
mov
push
or
jne
push
aam
ret
sbb
je
daa
pop
push
push
fidivrs
jecxz
lret
pop
mov
arpl
dec
add
stos
sub
inc
test
or
mov
sub
sbb
aad
fisttpl
out
add
cli
bound
adc
push
lods
popa
enter
sub
sub
cli
cmp
ja
dec
cld
xor
out
mov
stc
fistpl
push
push
sbb
out
push
ljmp
sti
shl
cmp
xor
adc
ja
fidivs
or
cwtl
jnp
adc
scas
and
bound
sub
mov
mov
pop
nop
mov
and
inc
inc
jge
or
out
cmp
xor
ret
add
popa
sarl
sub
lret
and
and
inc
shlb
mov
cltd
jp
sub
pop
jno
insl
fldl
mov
inc
aam
add
xchg
fucomi
insb
xchg
fcompl
out
loopne
mov
insb
mov
lea
jnp
pop
hlt
push
adc
push
mov
dec
mov
cmpsb
cltd
fists
xor
push
icebp
iret
mov
pop
jno
sarb
xorl
mov
mov
mov
andb
mov
loop
or
mov
in
push
ds
js
pop
and
std
mov
dec
push
mov
insl
cld
fwait
cmp
loopne
call
fmul
call
icebp
jl
jnp
xchg
push
cmp
push
fcompl
cmp
push
adc
ds
dec
adc
lods
imul
xor
sbb
imul
dec
insl
push
cli
mov
adc
ja
lea
pop
js
adc
jo
cmpl
ret
cmp
pop
imul
ss
divl
ret
shlb
pop
push
cmp
pop
xchg
data16
sub
cwtl
sub
mov
int3
fcmovnbe
je
mov
adc
xchg
rdpmc
int3
sarl
pop
sub
mov
mov
pop
je
jp
sub
push
pusha
mov
sbb
ss
rorb
sahf
jg
je
shlb
pop
rcrl
imul
xchg
sub
dec
mov
mov
and
inc
out
into
add
fdivrl
popa
push
cmp
leave
and
sbb
mov
out
lahf
in
xor
add
out
mov
test
dec
test
push
inc
mov
sti
and
fwait
lret
aas
test
ret
fildll
adc
outsl
add
flds
add
inc
fwait
rclb
fdivrs
sub
rcrl
int3
scas
ss
es
pop
sbb
mov
sbbl
cwtl
lock
rcrb
popa
inc
loopne
pop
add
or
xlat
and
inc
pop
aas
scas
sub
mov
ljmp
test
mov
out
and
or
movsb
scas
pop
lds
popf
rcll
fwait
pop
mov
ds
das
rorb
das
add
sbb
jbe
mov
cld
mov
or
mov
mov
ret
cmpsl
push
inc
adc
int
lods
insl
and
mov
into
popl
scas
push
jno
fwait
inc
mov
jecxz
sti
outsl
sbb
jmp
jp
shl
mov
into
ss
cmp
scas
mov
push
test
xchg
mov
cli
enter
loope
idivl
inc
or
mov
xor
push
sub
neg
xor
jo
loop
dec
pop
push
stos
and
std
xor
shlb
push
xor
leave
ja
sbb
sarl
dec
lods
lea
insl
daa
scas
mov
xchg
or
in
insb
out
mov
scas
sbb
xchg
shll
out
push
mov
sbb
pop
adc
pop
nop
icebp
push
shlb
jle
lret
inc
pop
push
rclb
sub
add
std
xor
scas
aas
mov
sbb
sub
aad
dec
push
and
dec
arpl
cmc
inc
cmp
cmp
das
setl
mov
cmp
jb
clc
mov
sahf
xor
dec
lods
jp
cld
nop
and
stos
movsl
fcmovb
lods
jmp
ret
outsb
inc
push
inc
sub
push
inc
outsl
xchg
aam
pop
stos
es
cmp
mov
sbb
test
add
mov
stos
jge
cld
sti
sub
xchg
aaa
mov
out
out
mov
stc
and
jns
sbb
cmp
cli
inc
mov
mov
inc
rcrb
push
stos
mov
fwait
cmp
sbb
add
push
jno
jae
dec
ss
int3
std
rcrl
inc
repz
mov
cmpsb
int3
push
imul
push
mov
popa
push
arpl
cmc
or
pop
lods
add
lea
push
out
jae
add
rcll
std
jecxz
and
stos
psubsw
out
add
popf
mov
mov
xchg
cld
je
ljmp
fs
in
loope
jle
subl
add
lods
lret
pop
push
nop
pop
rclb
loop
ss
mov
rorl
sahf
xchg
jp
int
push
ds
mov
ret
lret
jne
loope
lcall
scas
jae
push
jp
and
mov
popw
aaa
xor
inc
mov
mov
cwtl
out
out
lret
in
push
adc
adc
popf
jne
adc
sar
js
fdivrs
loop
clc
and
popa
adc
enter
fs
je
mov
and
mov
jg
loop
xchg
leave
addr16
stos
lods
movsl
adc
subb
or
pusha
sbb
mov
pop
xchg
test
mov
jecxz
ja
icebp
popa
adc
or
iret
cmp
scas
fstpt
aam
xor
or
cld
cmp
outsl
and
and
add
pop
in
in
addr16
cmpsb
js
cmp
jo
scas
dec
scas
cmp
mov
repnz
inc
or
push
xchg
add
dec
lea
sbb
stos
inc
cs
fcoml
mov
xchg
mov
add
test
lea
ret
pop
push
xchg
cmp
mov
imul
sub
out
add
jecxz
lds
inc
mov
and
push
sub
mov
rcll
pop
andb
daa
movsb
cmp
int
cli
xchg
lea
testl
mov
cmp
lcall
dec
gs
ret
and
test
das
repnz
inc
pop
sub
mov
push
test
in
or
push
divl
or
dec
push
sub
push
or
nop
add
dec
cs
or
outsl
test
mov
or
push
fwait
aaa
mov
cmp
sbb
hlt
jl
ret
rolb
sar
sbb
cmp
sahf
lock
dec
add
dec
and
cmp
lock
xchg
cmp
dec
gs
fmuls
sbb
push
mov
jg
add
cmp
push
mov
movsl
repnz
lahf
test
ret
mov
lods
jne
adc
repz
ja
cmp
je
mov
or
cmc
jp
adc
jle
lock
jo
imul
lahf
mov
cltd
sbb
insl
clc
test
jno
cmpsl
xchg
repz
xlat
push
fs
mov
ret
scas
mov
dec
in
jge
or
jbe
mov
or
xor
and
sbb
xor
mov
push
sub
or
pop
cld
jne
imul
sarl
scas
jmp
cltd
xchg
pop
int
sub
pop
bound
adc
jecxz
jb
test
lea
pop
push
push
push
inc
shll
fwait
movsb
or
and
inc
mov
inc
aaa
push
in
out
outsl
push
push
cltd
in
mov
dec
je
mov
fs
ss
dec
lods
and
inc
mov
add
inc
cmp
adc
gs
iret
mov
or
call
ja
cmp
arpl
mov
xchg
mov
les
xchg
cs
jbe
stos
cwtl
push
lahf
sbb
adc
movsl
mov
js
loopne
je
jge
rolb
add
fmulp
xchg
jge
lods
dec
in
clc
sub
cmpsl
jbe
call
in
jbe
imul
dec
xchg
mov
nop
adc
ret
dec
or
sbb
loop
jmp
sbb
or
add
sti
lea
pop
sub
fwait
rorl
test
adc
sar
in
xor
es
xor
into
mov
adc
scas
sub
mov
cmc
xchg
mov
cwtl
aad
addr16
lods
xor
int
cs
xor
and
jb
nop
dec
lahf
shlb
push
jnp
out
aad
roll
movl
lds
mov
out
pop
inc
pop
jp
into
iret
iret
adc
ljmp
jle
cs
inc
movsl
xchg
cs
sarl
out
xlat
add
add
dec
dec
lock
fidivl
push
int3
xor
xchg
ja
inc
mov
and
ficoms
lret
xchg
filds
add
sub
add
stos
push
sbb
ret
pop
lcall
xchg
ljmp
fisubrs
xchg
bound
push
inc
in
dec
or
push
mov
mov
aaa
or
clc
mov
cmp
cwtl
repnz
pop
mov
xchg
int
cmpsl
clc
stos
xchg
dec
pop
fsubrl
pop
cmp
dec
pop
mov
scas
aam
push
fcmovnu
inc
pop
rcrl
divb
add
int3
test
inc
push
iret
jp
xor
push
lds
and
mulb
mov
sub
sub
jle
dec
les
inc
cwtl
pop
xchg
lds
test
pop
xlat
add
mov
int3
xlat
lods
ficompl
les
or
push
mov
mov
imul
lret
jmp
jno
subb
das
ss
add
inc
sbb
xor
mov
jnp
daa
mov
push
pop
lock
sub
push
pushf
sbb
mov
rcll
andb
sub
imul
movsb
push
dec
sarb
mov
dec
out
xor
cli
jl
lea
cmp
stos
adc
int3
jno
sbb
xchg
and
xchg
xor
cvtpi2ps
das
or
inc
xchg
mov
jg
iret
lock
fptan
ss
mov
dec
push
call
cmp
sahf
fiaddl
pop
lahf
pop
je
je
sbbl
daa
add
rolb
shl
fstpl
cmp
and
sub
jp
fwait
sub
dec
push
jno
sti
lea
out
xor
jl
pop
cmp
pushf
jo
add
jne
jne
or
mov
add
push
cmp
xchg
shll
mov
sbb
in
jp
adc
icebp
mov
adc
aaa
pop
ljmp
jle
dec
adc
mov
clc
cwtl
mov
jns
inc
cmpb
cmpl
xor
mov
or
jo
and
aaa
adcb
in
dec
shr
stc
jnp
mov
inc
jno
pusha
clc
dec
cli
fwait
dec
sub
or
xor
stos
pop
rcl
aam
iret
es
fucomp
mov
sub
bound
test
mov
dec
jmp
int
je
arpl
stc
insb
outsl
inc
jecxz
sub
mov
mov
inc
sti
addb
fbstp
sbb
insb
sahf
in
inc
out
and
popf
push
clc
pop
jle
xor
stos
inc
popa
xchg
pushf
sbb
in
test
inc
imul
mov
jne
adc
ljmp
sbb
mov
repnz
dec
jge
push
cmp
sbb
sahf
sbb
fsubl
rcll
test
aam
jp
in
ljmp
xor
cmp
mov
xor
mov
repnz
sbb
ljmp
insl
xchg
iret
or
popf
mov
push
mov
dec
push
inc
shrl
jg
repnz
push
in
or
dec
lock
dec
push
out
xchg
outsl
in
mov
and
int
sahf
in
leave
push
js
pop
add
xchg
push
dec
mov
cmp
inc
xchg
mov
push
pop
jecxz
xchg
cld
lea
push
loope
push
pop
aam
or
jge
fcmovne
cmp
aam
test
push
pop
pop
or
inc
jmp
out
pop
xor
ss
cmc
clc
cs
mov
aad
and
mov
add
in
cmpsl
mov
out
scas
and
sbb
inc
cmpsb
fbstp
test
ds
xchg
mov
call
test
add
aas
jno
int3
rclb
test
sti
or
xchg
scas
sti
mov
fidivrl
and
mov
jecxz
adc
test
push
dec
sahf
pusha
loop
inc
add
mov
daa
lahf
pop
add
add
pop
sbb
sti
bound
cmpl
in
and
rcrb
leave
mov
mov
jae
popa
or
loope
lahf
imul
sti
jns
add
xchg
mov
push
push
and
int
arpl
testl
lods
sub
int3
outsl
pop
or
clc
out
sbb
neg
cltd
push
push
xchg
jl
inc
dec
es
imul
add
inc
push
lret
and
aas
pop
dec
dec
aam
je
jmp
cs
aad
pop
dec
dec
xchg
int3
dec
in
aaa
lock
sbb
add
cmp
mov
xchg
cmp
test
sbb
or
call
mov
sub
test
dec
sbb
pop
mov
cltd
add
xor
bound
lret
popf
cltd
cmp
sbb
jmp
sahf
jl
push
aam
lods
es
lods
out
das
call
mov
psrlq
jp
bound
int
inc
pop
fsubrl
adc
sbb
out
in
mov
jno
fistpll
push
stc
fsubr
sub
mov
sbb
mov
mov
in
cltd
jne
xchg
out
push
jbe
inc
mov
inc
into
push
daa
dec
ret
in
pop
adc
mov
enter
sub
loope
cwtl
mov
pop
mov
scas
xchg
lock
sahf
push
das
push
out
and
jl
lea
xchg
mov
jecxz
jae
cmc
addps
lea
movsl
das
pop
pop
jns
xchg
inc
or
push
je
shrl
test
cld
test
add
cs
inc
and
xchg
or
jno
lea
rclb
enter
sbb
adc
dec
or
mov
jne
xchg
mov
repz
adc
stos
mov
jb
cli
mov
mov
sbb
iret
xor
call
jb
sarb
push
cmpsb
pop
rcrb
nop
xchg
adc
mov
add
sub
mov
mov
pop
dec
mov
mov
xor
sti
sti
or
gs
scas
cs
popa
in
cmp
clc
cmp
lcall
fistl
xor
add
add
test
xchg
outsl
mov
out
adc
inc
fistpll
mov
movsl
sbb
dec
xchg
ja
mov
sti
mov
insb
add
dec
push
cmp
push
and
lock
sub
mov
pop
leave
aaa
rclb
in
stos
cmc
and
mov
mov
imul
loope
adc
test
adc
xlat
int
jbe
inc
add
xor
stos
xor
sbb
or
stos
mov
pop
loop
or
test
add
lcall
addr16
sub
cmpb
cmc
mov
mov
sub
mov
std
sub
idiv
lods
xchg
incb
dec
dec
pop
xor
ds
sbb
cmp
inc
jle
jnp
int3
mov
mov
xor
fisttpl
mov
mov
xchg
repz
and
sbb
add
out
or
inc
lcall
mov
pop
xor
mov
fnstsw
and
stos
ret
adc
xchg
fcoms
jno
insl
dec
popf
dec
cmp
fistps
es
pop
test
pop
pop
fstpt
ja
or
lcall
mov
push
adc
insl
pop
pushf
sbb
pop
mov
and
cli
dec
sbb
and
imul
fwait
daa
mov
mov
lcall
leave
inc
pusha
dec
orl
cld
jge
or
scas
inc
push
outsb
jb
enter
or
into
xchg
out
loope
arpl
inc
pop
jns
fbld
jmp
sub
push
mov
mov
test
jmp
rorb
mov
arpl
lret
mov
ljmp
lock
inc
inc
rcrb
gs
nop
inc
mov
cmpsb
mov
push
xor
fcomi
ret
dec
sub
xlat
push
stc
fptan
dec
fildll
daa
frstor
xchg
or
repnz
xor
jg
add
jne
insl
push
test
loopne
lcall
outsl
jecxz
dec
in
cmc
lock
push
mov
bound
ficoms
cwtl
aam
add
push
jmp
mov
xor
pop
mov
inc
or
lret
pop
stc
inc
and
jg
xchg
mov
sbb
fst
push
mov
xchg
xchg
ljmp
and
pop
sbb
shll
inc
ret
sahf
jns
mov
pop
test
idivl
lods
rcrb
jns
sub
es
xchg
imul
cmc
test
xor
pop
fsub
push
add
pop
cmp
sub
or
add
sub
jbe
imul
mov
xchg
clc
popf
cmp
mov
icebp
test
push
fidivrl
xchg
adc
mov
push
mull
push
in
mov
jp
dec
fwait
sub
movsl
repz
loope
mov
push
cmp
ljmp
je
inc
in
lret
shll
inc
repz
js
loope
xchg
pushf
cld
and
adc
cmpsb
fdiv
ret
test
and
int
push
mov
mov
jle
arpl
in
imul
add
mov
iret
inc
stos
aad
jecxz
cmp
jp
cltd
push
push
cmp
ficomps
cwtl
cmpl
inc
jge
mov
enter
push
and
jp
xchg
xchg
mov
out
xchg
push
jbe
cmp
repnz
adc
xchg
push
jle
push
and
adc
lea
outsl
inc
popa
jae
pushf
and
jge
jnp
fimull
lods
dec
adc
leave
shl
test
popa
imul
inc
sbb
jns
int
aad
sbb
rorb
adc
pop
xor
jge
fcoml
shrl
jno
and
jmp
or
rorl
jns
xlat
andl
cli
sub
mov
add
lods
pop
push
jb
rcr
add
popf
xor
mov
and
lcall
pusha
fdivs
lcall
dec
jb
imul
mov
cmpsl
fsubrl
inc
sbb
jbe
sbb
test
out
fcoml
adc
test
pop
ret
mov
lret
int
ficompl
movsl
jo
rclb
into
cmp
divb
pop
cli
in
add
mov
xchg
jl
das
ljmp
mov
xor
xchg
xchg
jns
cs
enter
sbb
loope
stc
cmp
mov
sbb
ret
or
jne
adc
cli
add
cmp
or
xor
pop
xor
pusha
lds
inc
pop
shl
pop
clc
imul
hlt
ljmp
add
outsb
dec
mull
hlt
inc
out
jle
inc
fsts
jge
popa
stos
mov
sub
in
scas
add
pop
insl
insl
or
push
loopne
sub
xchg
stos
sub
nop
aam
lock
add
jmp
dec
jb
aam
cmp
xor
mov
in
inc
push
pop
adc
xchg
dec
lods
mov
fwait
mov
lods
stos
imul
sub
push
loopne
pop
ficompl
data16
xor
inc
mov
add
pop
add
or
mov
std
pop
xchg
push
outsb
pop
das
das
xchg
or
enter
xchg
movsb
stc
and
mov
cmc
ret
mov
dec
mov
sub
jecxz
aam
fs
add
fistps
xchg
sub
adcl
fs
cmp
bound
cmp
jmp
mov
jb
pop
int3
loope,pn
add
mov
xchg
sar
popa
pop
fbld
xchg
xlat
subb
ret
pushf
movsl
mov
scas
mov
repnz
ficoml
cvttps2pi
pop
cltd
mov
mov
rcll
mov
fcomps
pop
push
scas
inc
inc
pop
push
shl
aas
sbb
mov
adc
ljmp
loope
scas
cs
je
lock
xchg
fsubs
popa
adc
popf
cltd
sarb
adcl
rorl
or
sti
push
pop
xchg
data16
mov
xchg
xchg
pop
aam
pop
mov
mov
ss
sub
clc
sub
xchg
pop
xchg
lret
push
pop
xor
fcmovne
addr16
clc
mov
ror
mov
pop
push
lret
sub
out
adc
gs
stos
xor
inc
sub
jnp
ljmp
mov
mov
inc
or
adc
sub
xor
xchg
jl
adc
push
inc
in
sbb
and
pop
xor
inc
cmp
mov
push
aad
sbb
jo
hlt
cmp
lret
js
call
and
mov
sub
xchg
inc
ss
push
pop
adc
lret
push
mov
jno
insb
or
call
test
out
data16
cmp
xchg
sub
mov
jl
movsl
adc
jns
mov
cmc
fldl
iret
vhsubpd
xor
jge
arpl
decl
outsl
lahf
push
lret
xor
ds
mov
popl
jl,pn
testb
lret
cmp
out
pop
mov
out
ds
jmpw
enter
lds
xor
ss
fidivl
or
scas
sub
mov
mov
sarl
jg
xchg
sbb
out
out
test
mov
adc
mov
shrb
je
jo
shlb
in
outsl
xor
jg
sub
xorl
fdiv
inc
orl
xchg
imul
mov
pop
jge
xor
dec
inc
test
cmpsb
sub
in
stos
cmp
mov
stos
mov
push
push
lcall
jle
adc
pushf
xor
xor
out
pop
popa
adc
cmp
scas
addr16
imul
dec
mov
inc
jmp
inc
push
push
and
mov
mov
out
sahf
enter
mov
push
js
fldl
mov
adc
mov
lcall
mov
out
mov
push
inc
out
xchg
xchg
jno
push
fdiv
imul
sub
out
hlt
lds
call
pop
pop
mov
filds
xchg
push
shrb
lcall
xor
inc
mov
and
ret
lods
sub
pop
clc
and
fcoms
scas
ret
in
rorb
jns
sbb
ss
divl
xor
fimull
mov
or
cmp
js
outsb
test
popf
push
mov
scas
xor
adcl
lods
iret
pushf
bnd
imul
pop
sbb
mov
outsb
fadds
mov
fisubl
sar
mov
pop
sbb
fldenv
testl
cwtl
lea
and
sub
ret
addr16
mov
pop
xor
lret
mov
add
gs
push
push
test
je
mov
inc
sbb
sbb
cmp
hlt
into
ret
insb
js
inc
push
out
sub
pop
mov
jle
data16
ret
cltd
push
daa
adc
pop
xchg
pop
ss
pop
or
mov
sub
sbb
int
dec
inc
dec
aaa
cmpb
lods
sub
inc
sub
xchg
sbb
sub
fs
or
dec
int3
mov
push
mov
fcoml
xchg
repz
test
mov
adc
and
adc
sub
mov
add
popa
add
je
pop
dec
cmp
cmp
lock
and
cwtl
mov
lods
ja
pop
fimull
and
pushf
aaa
or
imul
test
popa
pusha
jmp
cmpsl
push
dec
sub
dec
sub
xor
je
adc
dec
jne
int3
mov
xchg
pop
shlb
mov
out
lret
xchg
imul
stc
fistps
sbb
sbb
outsl
stos
pop
test
xchg
adc
insl
inc
cmp
lods
mov
insl
int3
sbb
pop
adc
imul
negb
mov
ja
dec
cmp
test
push
pop
inc
xchg
mov
mov
mov
add
dec
sahf
xchg
gs
cmp
fistl
jecxz
pop
lcall
and
pushf
sub
jg
pop
leave
cltd
imul
cmpb
movsb
cmp
adc
pop
fbld
aas
sub
mov
adc
mov
inc
cmp
cwtl
xchg
movsb
xchg
jbe
scas
lods
rorb
add
mov
cmc
xor
popa
nop
pop
sbb
rcrb
xor
pop
sbb
xchg
mov
sbb
shl
cmpsb
lds
xchg
out
add
mov
subb
cmpsl
inc
and
jo
iret
je
fwait
sbb
enter
xchg
push
pop
gs
in
mov
dec
jle
lahf
adc
outsb
sbb
jl
mov
inc
bound
rclb
mov
push
inc
icebp
fwait
outsb
faddl
pop
xlat
inc
pop
lods
pop
mov
es
int3
aad
out
dec
push
sbb
jge
addr16
loope
lret
mov
mov
push
cmp
adc
lret
subl
stc
fwait
adc
jne
int3
out
gs
or
adc
orb
mov
dec
les
push
mov
dec
cmp
cmp
dec
xchg
cli
andb
lret
and
xchg
les
inc
push
daa
clc
int3
or
dec
mov
pop
dec
cmp
out
test
aaa
or
iret
sbb
std
dec
jg
mov
out
cltd
or
mov
arpl
mov
xor
notb
xor
lods
xchg
mov
push
mov
and
cmp
jns
leave
lods
lods
insb
mov
test
xchg
mov
lret
pop
sahf
les
push
xor
int
into
jbe
popa
cmpsb
ja
in
pop
popf
popf
push
cmpsl
adc
dec
aas
andb
stos
mov
dec
sbb
sub
mov
enter
daa
adc
push
loope
iret
xchg
jmp
and
popa
mov
std
inc
cwtl
shrb
sub
mov
xor
push
sub
sbb
sub
nop
adc
mov
jle
ljmp
icebp
out
fs
add
fstpl
pop
stos
push
cmp
pop
push
sbbl
movb
dec
sub
arpl
call
test
in
mov
popf
inc
push
aad
aas
loopnew
leave
xor
or
inc
lcall
leave
fdivp
adc
xchg
out
data16
dec
loope
push
shlb
add
fists
cmp
fnstcw
mov
cmpsb
loope
inc
push
sub
cld
xlat
mov
cmp
and
lods
iret
mov
fdivl
pop
mov
mulb
js
push
les
xchg
dec
mov
pop
jge
dec
imul
bound
stc
cli
div
cmpsl
sub
sub
into
in
mov
add
jmp
subb
xor
andb
sub
int3
cwtl
sub
cld
mov
mov
mov
cmp
and
mov
sub
xchg
mov
cs
jnp
and
test
xchg
cmpsb
push
jl
adc
or
jnp
or
adc
int
in
lcall
popa
outsl
xchg
or
out
icebp
jg
add
cmp
insl
push
inc
mov
cmp
mov
cmp
sbb
xchg
pop
shlb
ja
call
mov
sub
sbb
insb
pusha
lods
sbbl
lock
mov
sbb
sahf
mov
fisubl
pop
mov
dec
in
aam
xor
je
mov
or
mov
icebp
push
pushf
inc
mov
xlat
je
or
adc
insl
mov
inc
ljmp
fimull
push
int3
push
or
push
xor
clc
dec
gs
movb
xor
dec
jle,pt
jl
xor
js
push
test
jl
sbb
or
fdivrs
cld
or
fsubr
dec
pusha
mov
add
inc
in
mov
lods
outsl
mov
into
inc
sub
sbb
int3
sahf
dec
or
test
dec
jne
or
xchg
out
xlat
scas
mov
pop
data16
inc
add
jg
sahf
incl
push
fmuls
push
lret
imul
out
inc
cmp
mov
and
das
jmp
sbb
bound
cmp
pusha
fistps
sub
in
leave
jecxz
xor
das
mov
ljmp
loop
push
cli
loopne
mov
repnz
lcall
shlb
insl
mov
pop
daa
adc
ds
pop
imul
lea
repz
sbb
mov
or
xchg
sub
mov
sarl
flds
shlb
pushf
pop
jmp
idivb
or
sub
sbb
dec
cmpsb
es
insl
call
imul
mov
hlt
sub
test
jg
xchg
cmp
or
insl
imul
outsl
jl
cmp
call
cmp
dec
jmp
scas
subl
jae
enter
movsb
fwait
jmp
add
and
mov
pop
mov
inc
sti
mov
neg
pop
div
sbb
or
and
stos
or
in
and
sub
jl
loopne
sub
lock
xor
and
sbb
cltd
push
stc
cmp
ja
aad
push
fldcw
aaa
popf
lcall
push
aas
rcl
cmp
push
test
push
repnz
fcoms
es
lar
lea
pop
popa
les
xchg
cmp
push
shl
fcoml
notb
js
icebp
mov
mov
arpl
jnp
sub
add
pushf
pop
push
das
aas
js
test
add
inc
pop
pop
adc
sbb
adc
inc
adc
cmp
xchg
push
jns
fidivrl
cmp
cmp
push
and
mov
or
sti
pop
sub
mov
outsb
ret
out
popf
fsubrl
dec
cmpsb
aas
out
call
or
popa
pop
hlt
mov
stos
leave
add
mov
dec
imul
inc
mov
jae
adc
out
adcl
insb
xor
xchg
sbb
pop
mov
sbb
xor
outsl
inc
lret
pushf
push
loope
call
clc
mov
inc
into
add
pop
and
aam
jne
adc
mov
imul
xor
xor
cmp
ret
mov
jae
inc
inc
cmp
or
jg
mov
and
mov
in
dec
push
in
out
mov
dec
dec
decl
test
imul
insl
test
jmp
jge
push
or
das
sub
shrb
data16
mov
das
pop
mov
xor
insb
roll
lock
lea
and
jg
adc
mov
dec
mov
pop
xor
shl
add
add
movsb
dec
pop
mov
push
inc
jmp
or
or
push
sbb
insb
aas
xchg
sbb
pop
test
adc
fldenv
xor
ficompl
hlt
out
shl
stc
lahf
sub
les
dec
add
jb
jmp
add
loope
pop
testb
pop
out
mov
adc
sbb
push
je
xchg
pop
shll
sahf
out
mov
pop
ret
sti
lods
and
out
iret
cltd
or
jle
push
or
or
rcrl
in
push
or
mov
ljmp
test
adc
dec
addr16
cmp
in
xor
push
xchg
movsb
sub
or
inc
push
push
xchg
cmp
mov
push
push
das
dec
xlat
dec
add
xchg
fldenv
mov
gs
mov
into
push
cmpsb
aam
shll
sbb
test
cltd
jp
inc
cmp
or
mov
pusha
adc
xchg
lea
adc
push
imul
jmp
add
sbb
mov
lea
mov
stos
icebp
xor
loope
mov
dec
pushf
inc
ret
ss
out
xor
fnsave
das
cmpl
popf
hlt
jecxz
jmp
sub
jecxz
push
cld
leave
xorl
inc
faddl
lcall
or
sbb
sbb
xchg
insb
flds
loop
sbb
cltd
xor
xlat
lcall
idivb
push
loop
andb
lahf
negb
fiaddl
ret
fists
mov
inc
test
cmp
push
jp
lahf
jge
cs
and
adc
xchg
mov
mov
or
mov
inc
inc
and
repz
call
jl
inc
mov
cmpsl
inc
xchg
fiaddl
adc
cmp
mov
ja
iret
xor
push
test
and
mov
and
and
fisttps
fwait
gs
cld
xor
pop
sbb
mov
lds
adc
lret
push
dec
sahf
pop
sbb
sti
das
enter
scas
stos
cmp
jb
mov
mov
popf
jne
xor
xchg
cmp
xor
xlat
nop
xchg
jmp
dec
stos
and
and
mov
scas
pop
and
jo
adc
outsb
pop
xchg
fisubrs
add
cmp
pop
inc
sarl
nop
cmp
and
dec
insb
xor
sti
sti
mov
xor
fwait
daa
lods
adc
push
mov
mov
in
fwait
aam
repz
or
mov
fidivl
mov
and
jecxz
lcall
jb
fldenv
add
lret
ja
jg
mov
imul
xchg
divb
cmp
and
sbbb
dec
pop
out
xor
subl
stos
cmpsb
mov
mov
and
mov
cwtl
lea
jae
loopne
sub
dec
xor
cmpsb
js
xchg
xor
sbb
stos
cmpsb
data16
push
fwait
cwtl
mov
mov
arpl
push
iret
adc
mov
lock
out
jns
test
hlt
std
push
inc
inc
nop
gs
in
ljmp
test
inc
incb
xlat
lods
bound
adc
xor
fwait
je
es
mov
adc
dec
xor
enter
lea
mov
add
jp
int3
pop
aaa
int3
int
sbb
lahf
and
clc
cmpsb
out
je
add
adc
lods
xor
fdiv
push
andl
hlt
inc
loope
sbb
mov
les
mov
cmc
or
xchg
fdivl
roll
aad
int
sub
in
dec
lahf
insl
add
push
lods
clc
in
sbb
std
jns
adc
cld
jb
mov
dec
shr
cwtl
aas
rol
daa
stos
and
outsl
cmp
aaa
push
out
cmp
cmpsl
pop
cmpsb
mov
lods
lret
adc
dec
inc
ljmp
imul
int
push
add
arpl
ficoml
cmpsl
aas
and
xchg
inc
xchg
sbbl
push
push
push
ret
in
lcall
dec
mov
adc
ror
or
cmp
les
shl
push
leave
orl
and
cwtl
popf
insl
stc
icebp
leave
mov
pop
ret
mov
dec
test
pop
jecxz
push
push
sti
xchg
xchg
cld
arpl
lods
out
jbe
jmp
push
adc
add
pop
sbb
lret
mov
fdivr
ffreep
out
cmp
jno
add
push
andb
pusha
lret
mov
icebp
or
jae
cmp
addr16
dec
or
ljmp
mov
sahf
orb
es
jl
pop
addr16
push
or
fstps
mov
cs
inc
sti
adc
mov
mov
adc
dec
outsb
test
mov
jbe
insl
and
mov
test
fldt
pop
rol
sbb
lret
ljmp
in
mov
mov
mov
and
dec
mov
mov
inc
xchg
call
jecxz
xlat
pushl
mov
shlb
andb
ds
mov
add
imul
jmp
mov
cwtl
fcmovnu
cmpsl
pop
sbb
lret
insb
popf
cmp
test
in
shrl
std
mov
push
dec
test
adc
fldl
push
scas
mov
dec
testb
iret
stos
add
and
cmc
shrb
pop
imul
xor
insl
and
test
push
movsb
jns
add
add
pop
in
jno
cs
cmpsl
pop
cmp
repnz
shll
mov
inc
pop
push
ficomps
push
jae
adc
inc
icebp
xorb
mov
fwait
add
popf
scas
dec
push
adcb
icebp
sti
outsb
jae
mov
push
mov
and
es
mov
push
adc
jne
mov
xchg
xchg
sub
imul
pop
pop
fwait
lds
mov
xor
push
popf
adc
in
out
dec
pop
pop
xor
insl
mov
pop
add
xchg
pop
sahf
sbb
je
shl
pop
incb
dec
mov
into
and
movsl
xor
scas
call
out
cmp
cltd
push
sub
push
or
les
jno
dec
rorb
test
push
mov
stc
mov
lret
fstpt
cmpsl
shlb
mov
out
pop
push
adcb
xor
or
aas
je
insb
push
mov
imul
pop
cltd
popf
dec
in
loop
sahf
or
into
sbb
cmpsl
push
incl
mov
jne
cmpsb
scas
adcl
mov
into
cmp
dec
cli
out
jb
gs
or
es
jecxz
pop
push
aaa
mov
fcoms
int
or
dec
leave
push
xchg
mov
arpl
popf
sahf
ret
sbb
ja
mov
push
std
divb
es
or
cmp
dec
push
sbb
and
inc
fstps
dec
mov
int3
dec
xor
shr
ret
mov
shlb
jecxz
cmp
int
rorl
pop
movsb
sub
aas
das
pushf
ja
inc
sbb
sbb
vmread
cmpsl
loope
xchg
adc
les
adc
cmpb
aam
mov
cmp
cmp
data16
out
mov
adc
jne
stos
cmc
push
adc
call
rcrb
loopne
add
popf
jo
out
cmpsl
imull
inc
inc
jg
sti
pop
scas
jae
inc
pop
sub
and
mov
sub
mov
cmc
int3
ljmp
or
imul
popa
addb
inc
fwait
mull
in
imul
mov
ret
aam
mov
fsubr
mov
test
jl
ljmp
lds
cld
push
lret
dec
xlat
loop
mov
add
or
xchg
mov
xchg
push
out
mov
pop
sahf
cltd
popf
hlt
xor
fs
sbb
jae
inc
scas
int
lods
inc
dec
adcl
cmp
xorl
and
sti
rorb
and
pushf
xor
jmp
stos
and
out
js
stos
lret
stc
notb
mov
frstor
add
mov
sub
sbb
stos
scas
jnp
lret
pop
cmc
mov
mov
dec
and
lea
fisubl
xor
repnz
cmp
cmp
and
jp
jge
or
ds
fwait
sbb
icebp
out
jae
iret
fiadds
fld
fcomip
or
test
lods
mov
imul
ds
icebp
mov
sbb
add
mov
daa
pop
addr16
es
loop
je
movsb
jge
or
popa
sti
lahf
flds
sub
cmp
movb
orl
repz
dec
outsb
lahf
push
lods
lcall
adc
xor
repz
xchg
or
sahf
push
enter
ss
jno
pop
loope
fdivs
dec
mov
jne
icebp
mov
stos
push
outsl
dec
cmp
xor
pop
scas
hlt
fadd
in
lcall
dec
xchg
jbe
xchg
fnsave
and
jae
mov
outsb
adc
das
sbb
jle
xchg
adc
and
cmpsl
dec
loop
lods
sub
mov
fwait
mov
mov
imul
sti
decl
cmp
mov
add
mov
push
fsubrs
adc
repnz
sub
das
lret
push
mov
sub
sahf
ljmp
movsl
or
mov
cmp
sbb
icebp
cmp
js
jmp
dec
imul
push
call
js
pop
push
iret
or
jp
mov
xchg
cmp
sbb
and
fldt
adc
jbe
cmc
and
sbb
cmp
push
nop
push
subl
lret
inc
mov
add
cmpb
test
xchg
fstl
jbe
xorps
sbb
aaa
pop
insl
mov
xor
cmp
pop
dec
jmp
inc
dec
outsl
jmp
xchg
mov
lods
jae
mov
pop
xchg
loopne
adc
outsl
and
mov
mov
inc
push
push
mov
ss
cmp
add
dec
mov
nop
call
adc
cmp
mov
gs
xchg
mov
repnz
ret
js
xchg
adc
stos
xchg
jbe
xlat
cmp
add
or
ret
lods
jg
lret
xchg
dec
insb
push
xchg
jne
adc
xchg
popa
loop
adc
call
pop
insl
stos
jl
push
mov
pop
int3
xchg
test
std
in
inc
stos
cmp
add
add
jnp
enter
scas
lahf
cmp
out
jecxz
in
in
les
cld
sbb
stc
mov
aaa
fwait
pop
cmp
mov
mov
mov
pop
std
vpperm
ljmp
lock
mov
outsb
into
dec
add
push
push
lsl
adc
insl
pop
dec
sbb
fisubrl
lcall
sbb
pop
shl
cltd
aaa
lret
xor
push
sti
push
sti
cmpsb
xchg
jecxz
je
mov
mov
mov
pop
popf
mov
imul
mov
mov
ds
or
cs
xlat
mov
pop
test
popa
lods
jge
xchg
or
pop
jo
lock
in
aam
xor
sub
sub
add
out
or
xchg
adc
and
or
fcmovu
aas
cmpsl
fisttpll
sbb
xchg
and
jno
cmc
lea
das
dec
movsl
push
test
scas
mov
cmp
loop
pop
lcall
xchg
cmp
mov
sub
fdivrs
jns
into
ret
mov
nop
divb
sbb
aaa
inc
repnz
out
inc
jg
add
gs
mov
shrl
lret
mov
das
decl
mov
push
mulb
in
test
mov
push
add
push
inc
mov
in
iret
aas
pop
sub
adc
mov
dec
mov
ret
aad
cs
pop
jo
gs
ljmp
lea
outsl
mov
inc
out
push
dec
mov
fsubs
data16
ret
pop
ljmp
xchg
mov
mov
adc
lods
pusha
or
xchg
test
jno
out
and
pop
rol
adcb
xor
mov
hlt
loope
push
out
adc
lahf
fadds
lods
inc
push
outsl
dec
ljmp
mov
lods
sub
jo
orl
sbb
adc
cli
nop
pop
insb
jge
cmp
add
mov
xchg
loop
pop
ret
idivl
nop
mov
pop
dec
mov
dec
cmc
aam
in
loopne
xchg
imul
bound
jecxz
enter
das
inc
addl
mov
and
push
clc
jp
hlt
xchg
push
loopne
ja
mov
sti
leave
mov
add
or
ja
test
mov
clc
push
int
testl
and
out
in
jecxz
pop
adc
mov
push
nop
dec
and
je
jo
xchg
clc
sbb
negb
aas
sub
loop
ficoml
push
jg
pop
pause
sbbb
cmp
mov
dec
mov
inc
ror
xchg
xor
jae
bound
rorl
fwait
imul
jo
gs
pop
push
xor
sahf
imul
negl
mov
dec
cld
dec
ficomps
mov
cli
test
jno
inc
pop
repz
or
xchg
test
inc
stos
or
mov
dec
xor
dec
ds
push
cmp
lcall
lea
mov
dec
stos
dec
loopne
leave
sbb
dec
cmp
and
jp
xchg
push
and
dec
dec
mov
popl
sahf
fcmovnu
sti
scas
xor
add
aam
xor
test
hlt
in
sahf
xor
and
mov
jne
and
mov
mov
int
popf
push
imul
fwait
or
mov
jecxz
subl
jne
mov
notl
push
cmpsb
hlt
out
mov
xchg
inc
push
fld
cmp
xchg
loopne
std
jne
mov
mov
mov
sbb
les
inc
push
push
add
add
pop
iret
imul
mov
push
push
jmp
mov
test
js
jo
pop
sub
movsb
dec
push
add
pop
add
push
inc
leave
dec
adc
cwtl
sub
js
lahf
jmp
pop
stos
sub
mov
sbb
or
jge
push
shlb
dec
cwtl
shrl
test
lret
sbbl
dec
shrb
pop
xchg
insb
sbb
scas
test
and
jnp
ljmp
mov
loop
pop
arpl
mov
ds
rorl
add
cmpsl
nop
cmpsb
aaa
mov
xchg
icebp
dec
mov
and
bound
out
pop
movsl
hlt
sub
adc
sub
pop
cli
and
test
cmp
mov
pop
jle
mov
xor
sbbb
mov
sahf
out
int3
xchg
fdivl
test
subl
inc
lcall
call
dec
scas
fwait
repnz
jle
loop
xchg
pop
jmp
call
sub
xor
rcrl
push
in
stos
cmpsl
mov
out
es
adc
pop
pop
rol
add
inc
xor
daa
sbb
or
fbstp
insb
jb
cmp
push
daa
lea
jg
pop
shr
loope
sub
movsb
fs
mov
addr16
aad
pop
adc
add
fsubrs
inc
out
insl
add
into
dec
sub
sbb
pop
mov
sti
or
cmp
dec
sub
out
push
and
arpl
frstor
das
hlt
test
test
mov
jmp
xchg
xchg
sti
xchg
std
push
dec
xchg
sub
popf
rcrl
sbb
mov
push
xor
pop
sbb
lods
cmp
bound
lock
and
and
stos
and
roll
mov
and
out
incb
les
leave
jge
sbb
in
movsl
and
push
ret
jo
scas
hlt
call
ljmp
push
inc
dec
jbe
jbe
or
mov
and
push
push
push
repnz
std
or
xchg
rol
add
outsb
out
add
dec
push
inc
roll
push
fwait
rclb
nop
push
stc
dec
cltd
lahf
addr16
xor
xor
in
test
arpl
imul
mov
fldenv
out
shrb
cwtl
adcb
add
mov
bound
andb
xor
mov
and
sub
push
ret
ret
ret
jb
mov
push
test
xchg
jmp
aaa
xchg
sub
mov
or
push
cmp
std
mov
sbb
push
fiadds
bound
and
xor
orb
adc
inc
movsb
cld
daa
cmp
ljmp
shlb
scas
mov
mov
clc
shrb
imul
call
inc
adc
inc
mov
add
dec
ret
mov
xchg
insb
add
mov
sub
frstor
adcl
inc
ja
mov
aaa
push
mov
stc
mov
std
xor
xor
mov
js
insb
imulb
pop
leave
push
push
push
das
inc
test
jg
pop
frstor
stos
movsb
jecxz
cmp
jo
push
out
out
lcall
mov
outsb
dec
mov
pop
xor
inc
sub
stos
inc
test
inc
dec
mov
loopne
sub
es
sub
sbb
leave
out
sarl
mov
ljmp
ljmp
xor
aaa
cs
sub
jge
inc
mov
mov
mov
sub
sub
push
cmp
inc
xchg
inc
cltd
int3
cwtl
fistl
aad
xor
iret
inc
mov
push
imul
xor
jmp
dec
lahf
sbb
pusha
inc
fldl
push
in
clc
test
xchg
sti
outsl
inc
into
in
lea
mov
sarl
push
scas
and
cmp
out
data16
xor
dec
jo
out
rcr
repz
test
jb
scas
adc
pusha
dec
or
xor
imul
in
dec
test
jbe
push
das
mov
sub
adc
mov
out
and
cmp
mov
mov
inc
sbb
jno
or
out
aam
xor
mov
jb,pt
cmp
repnz
pop
push
xchg
xchg
mov
mov
icebp
es
ret
andl
or
gs
lea
add
mov
mov
loopne
xchg
pop
mov
mov
pop
mov
clc
in
mov
xchg
loope
push
push
and
ret
lods
outsb
sbb
inc
cmp
sahf
dec
xchg
xor
jecxz
xor
xchg
pop
push
inc
std
sti
xchg
push
sub
pop
xor
enter
aam
add
rcl
xor
daa
pusha
inc
mov
int
fcoms
cltd
das
and
jbe
mov
cmc
adc
mov
jns
dec
push
mov
mov
mov
adc
pop
mov
cmpsb
stos
pop
mov
imul
lret
xor
adc
push
mull
pop
jp
ljmp
fbld
mov
lcall
mov
xchg
inc
orl
mov
sbbb
mov
push
stc
imul
xchg
inc
int3
adc
jg
and
sub
cmp
aad
icebp
push
push
mov
cli
sub
shll
sahf
shlb
repnz
into
mov
xchg
jne
mov
mov
fldcw
sbb
mov
xor
mov
jle
mov
loope
jbe
ret
push
imul
inc
xor
push
xchg
pushf
xchg
scas
clc
lods
add
adc
cmpsb
test
xchg
in
push
lods
or
pop
push
ficomps
or
inc
icebp
and
jne
jne
ficompl
pop
lret
lret
mov
sub
repnz
repz
sarl
stc
mov
in
aaa
cwtl
mov
add
or
es
xchg
or
xchg
stos
dec
insl
stos
lcall
cld
call
aas
rcrl
pushf
mov
inc
sub
mov
add
jmp
into
data16
sbb
fistpl
xlat
jno
cmp
or
pop
shrl
popf
push
cmc
dec
fsubrl
pop
stos
inc
das
ljmp
shll
xor
mov
or
hlt
mov
dec
fsubs
xor
mov
loopne
xchg
dec
and
pop
cmc
sub
jbe
call
popa
mov
xor
insl
clc
bound
and
sub
push
outsb
and
xor
jp
rolb
xchg
in
lret
mov
sar
cmpsb
in
dec
jge
pop
adc
or
mov
pop
mov
pop
dec
daa
lods
pop
mov
or
lret
adc
pop
addr16
aam
lcall
pop
test
aaa
sbb
and
push
iret
sarb
addb
lock
nop
dec
bound
popf
lods
inc
rorb
les
data16
sbb
push
cmc
mov
imul
lahf
in
mov
mov
xchg
into
cmp
bound
popf
popf
push
dec
movsl
nop
dec
fwait
jnp
mov
in
cmp
or
inc
dec
addb
mov
and
add
popf
jmp
ja
sbb
insb
cltd
jb,pn
repnz
mov
or
inc
std
repz
xchg
inc
loopne
xchg
stc
addb
jns
push
mov
add
jno
jle
jbe
scas
mov
xor
fists
shr
mov
ror
pop
insl
mov
pop
mov
shll
call
push
sahf
jle
xchg
sub
cli
stos
js
imul
jg
pop
cli
shlb
mov
sbb
pop
sbb
sub
xchg
into
pusha
mov
pop
loope
fcmovnb
bound
cmp
clc
call
in
icebp
or
xlat
push
jp
mov
jno
aam
cli
outsb
test
push
sbbl
js
cmp
and
mov
pop
cs
inc
sbb
dec
mov
cmpsb
cmpsb
or
rclb
jecxz
xchg
shr
adcb
in
std
push
jmp
add
imul
or
fcoml
mov
out
pop
adcl
fldlg2
addr16
or
jmp
add
ret
dec
addr16
out
jno
imul
fsubrp
or
fndisi(8087
imul
outsl
sub
mov
sub
andl
lock
sbb
jle
ds
jmp
movb
mov
pop
cmp
dec
or
pop
addl
dec
hlt
mul
fs
addl
inc
jmp
gs
jl
scas
fs
mov
xchg
adcl
and
out
xlat
dec
add
das
push
das
pop
repz
xchg
sub
gs
sbb
xor
mov
inc
cltd
jnp,pn
pop
lahf
arpl
xchg
or
imul
js
test
cld
mov
mov
sbb
adc
hlt
cli
inc
clc
ficoml
mov
pop
test
dec
jbe
outsl
cmp
pop
mov
loopne
inc
xor
jle
mov
jns
xchg
inc
dec
inc
inc
adc
sti
mov
mov
jmp
jns
jge
movsl
add
scas
jnp
pop
xchg
mov
xchg
outsl
fistps
mov
cs
pop
cmp
int3
nop
push
aad
pop
je
mov
fdivl
add
cmc
and
test
pop
dec
or
out
clc
dec
jmp
lods
test
or
movsl
inc
xchg
jecxz
cmp
inc
mov
add
int
pushf
stc
jle
xchg
mov
lcall
daa
push
cli
cltd
jge
fisubl
lods
shlb
ds
push
enter
fildll
stos
mov
cmc
ds
sub
aam
pop
stc
jmp
ja
scas
mov
push
ljmp
fistps
push
jo
ficoms
inc
sub
cmp
out
xchg
les
jne
inc
clc
rol
test
lahf
add
xor
mov
mov
out
mov
fldcw
dec
jb
xchg
mov
lret
jne
in
mov
leave
sbb
cmpsl
and
mov
pusha
in
xchg
mov
sbb
push
pop
movsl
sbb
xor
sub
pop
inc
mov
ljmp
mov
leave
aad
clc
xlat
into
xor
lcall
into
jnp
pushf
je
xchg
in
adc
cmp
push
lahf
and
sar
and
inc
adc
aam
ss
push
fldcw
popa
lret
int3
push
cmp
rclb
add
push
push
notl
xor
clc
sub
shlb
rcll
sbb
mov
pop
insb
mov
fistpll
mov
outsb
mov
xor
push
cltd
sbb
ret
das
inc
loope
out
push
lock
dec
push
ret
push
mov
aaa
lods
out
es
cmp
mov
daa
inc
cmpsl
jp
push
sbb
pop
fwait
adc
call
outsb
rcr
into
gs
pop
movsl
push
cmp
shrb
xor
cmpsl
fcmovnbe
stos
call
add
sbb
sbb
sbb
pop
daa
cmp
push
and
xchg
movsb
add
in
mov
or
xchg
push
punpcklwd
mov
std
pop
das
push
orb
cmp
push
mov
pop
fimull
adc
jae
mov
stos
and
scas
push
scas
mov
out
inc
cli
cmp
fwait
add
inc
dec
lock
pop
xor
push
adc
pcmpgtd
xor
push
stc
out
bswap
clc
mov
xchg
push
int3
test
frstor
inc
pop
fwait
lods
jp
xor
daa
add
xchg
shlb
cmpsl
nop
xchg
push
movsl
repnz
movsl
aam
cmp
push
inc
movsb
nop
loope
mov
pop
cmp
stos
mull
jl
test
stos
test
jg
jmp
mov
xlat
cmpsb
add
inc
jnp
iret
pop
add
pop
ret
lods
movb
vcomisd
push
sbb
xlat
mov
icebp
popa
jl
out
inc
xchg
inc
mov
cmp
push
das
sub
neg
sub
sub
xchg
xor
sbb
test
icebp
gs
cmp
mov
bound
adc
adc
adc
lcall
pushf
jb
sbbb
jl
lcall
mov
jb
mov
jle
or
in
fstps
loopne
lret
nop
jmp
xchg
and
icebp
push
lock
jp
int3
div
cmp
push
dec
xor
xor
dec
std
in
fadds
cwtl
cwtl
ja
cwtl
aam
cmpsl
mov
pop
pop
data16
xor
fcomps
mov
bound
and
sub
shrb
cmp
jbe
cmp
es
rolb
and
adc
xchg
pop
push
jnp
jno
jecxz
cltd
lahf
or
sub
and
pop
bound
jb
outsl
int3
jnp
negl
sahf
add
jb
add
fdivr
pop
cmp
pop
shrl
sahf
pop
push
xchg
ljmp
pop
mov
pushf
sbb
mov
inc
pop
pop
push
jp
cmp
pop
inc
jnp
outsb
adc
stos
adc
test
inc
shlb
lret
mov
aad
lahf
outsb
pop
cmpsb
lcall
out
bnd
pushf
dec
into
push
cmp
dec
stc
pop
mov
rorb
cld
std
cmp
jae
inc
mov
xor
out
out
cld
push
in
in
lods
ja
ret
pop
add
push
xchg
test
xor
repnz
xlat
insb
sub
in
clc
sub
movsl
fucomi
mov
aam
mov
addb
xchg
lock
and
scas
imul
dec
jge
std
add
jae
xor
or
or
xorb
mov
xor
push
loope
sar
jns
lret
fnsave
ds
out
jo
test
push
and
or
lahf
lret
or
xchg
es
orb
adc
xchg
inc
fdivrl
push
pop
xchg
jmp
sub
pop
std
mov
xorl
minps
xor
push
in
and
int3
ret
xchg
and
es
pop
ja
mov
sbb
xchg
dec
pop
int
sub
data16
or
mov
ds
in
xchg
in
outsb
popf
or
testl
js
push
sbb
xor
les
movsl
fldl
call
je
cli
addr16
pop
rclb
and
cmp
xor
cltd
dec
nop
pop
push
add
shrb
pop
mov
rorl
cltd
and
shll
adc
push
out
data16
cmp
fwait
aas
xor
shll
mov
ds
xchg
mov
aad
xadd
dec
or
mov
xchg
push
pop
push
pop
push
cli
ja
mov
pop
push
ficoml
fwait
xor
mov
mov
adc
dec
adc
arpl
rclb
xor
mov
sbb
insb
das
mov
shr
mov
outsb
sbbl
push
cmpsl
out
fimull
stc
mov
stos
sbb
xchg
jnp
sahf
cmp
push
jbe
test
cwtl
mov
jge
add
lods
test
fimuls
je
lret
add
jb
mov
enter
push
jne
pop
inc
or
and
shll
mov
cvttps2pi
movsb
repnz
fcmovne
je
dec
cld
ja
shr
shr
icebp
pop
add
loop
and
pop
jmp
roll
push
clc
lea
or
inc
push
lcall
ljmp
xchg
mov
mov
imul
ja
jle
mov
mov
dec
gs
pop
adc
xchg
or
lods
mov
inc
and
push
sbbl
mov
or
cli
fcomip
jmp
cmpb
cmpsb
bound
rcll
mov
int3
mov
push
sbb
fs
sub
inc
dec
jmp
iret
jle
lock
mov
pusha
sbb
and
lods
inc
add
scas
lds
xchg
jp
pop
ds
sub
enter
leave
lds
int
sahf
dec
cmpsl
jge
add
mov
pop
pop
sub
pop
clc
enter
jp
xor
aad
add
pop
cmp
push
jns
mov
lret
mov
add
mov
enter
adc
sub
popf
or
adc
xchg
js
aad
xlat
mov
cmpsb
outsl
iret
cmc
add
int3
bound
dec
mov
sub
push
pusha
aam
stos
add
pusha
test
push
and
popf
mov
xor
adc
mov
inc
push
jo
inc
adcl
lret
andl
cmp
fyl2xp1
dec
imul
lods
sub
dec
cmp
shrb
lods
xchg
jp
xchg
pop
js
pusha
cltd
xchg
jns
sub
in
pop
xor
stos
mov
sahf
sub
jae
pop
cld
mov
and
imul
mov
mov
std
or
xorb
dec
or
lea
shlb
add
fldt
shlb
inc
mov
iret
mov
jp
cmp
and
mov
fisttpl
xchg
cmp
daa
into
popf
lahf
das
jg
test
ret
add
jp
inc
or
push
lahf
mov
or
inc
sub
xor
mov
pop
jae
sub
ffree
stc
insl
inc
das
mov
jbe
dec
mov
stc
ds
sub
pop
mov
scas
inc
dec
in
sbb
push
xchg
xor
aas
pop
fdivrl
pop
stos
pop
aad
jnp
scas
mov
pop
ds
cltd
iret
pop
insl
or
cwtl
imulb
insl
imul
mov
jno
dec
into
test
push
xchg
aam
addr16
xchg
pop
inc
push
push
mov
jne
cmp
push
test
mov
and
sbb
mov
xchg
int3
and
mov
xchg
cmp
shlb
loop
xchg
mov
sti
popa
adc
cmpsb
jbe
add
or
dec
lods
lret
iret
out
push
sbb
daa
aam
add
aaa
dec
cld
mov
pop
dec
mov
mov
ja
imul
pop
mov
ficoml
mov
bound
dec
repz
jo
or
dec
and
outsb
adc
mov
cmp
lds
xchg
mov
fsub
pop
xor
fcoms
jge
inc
hlt
dec
mov
add
mov
subb
andl
ds
sbb
aaa
add
pushf
mov
movsl
out
inc
jle
lret
mov
scas
gs
jne
xor
dec
mov
or
jmp
lahf
jbe
leave
int
cmp
push
mov
lods
pop
mov
sbb
sahf
cmp
fisubs
pushf
imul
je
mov
cmpsl
rol
mov
dec
lds
adc
sbb
inc
ficoms
xchg
or
pop
jnp
jno
sti
mov
mov
sub
mov
jae
pop
or
daa
sbb
data16
pushf
je
imul
adc
inc
stos
add
call
fsts
les
ljmp
movsb
xor
mov
arpl
dec
dec
xchg
add
sarw
mov
xchg
cmc
and
inc
mov
cmc
pop
push
and
clc
rcrl
pushl
pop
gs
inc
pop
iret
negb
fidivrs
mov
aaa
shrl
mov
lret
cmpsb
cmp
idivl
orl
fildll
mov
shll
test
jecxz
jl
push
inc
cwtl
idivl
push
pop
movsb
cmc
add
sub
mov
or
or
and
jmp
and
jno
push
xchg
in
repnz
sub
mov
dec
ret
pop
add
pop
dec
inc
arpl
jnp
imul
stc
mov
aam
imul
inc
xor
enter
jp
dec
jb
add
mov
sbb
out
pop
xchg
in
mov
fldenv
in
dec
imul
in
mulb
scas
pop
scas
aas
inc
xchg
iret
pushf
xchg
xchg
dec
mov
xor
mov
dec
fsubr
sub
cmp
adc
add
movl
xchg
inc
int
inc
enter
inc
cmp
je
lret
adc
fsubl
mov
sub
push
jecxz
cmp
mov
xor
sbb
fwait
je
sti
dec
aas
imul
fadd
fadd
adc
pop
sbb
xor
mov
jle
sub
int3
outsl
mov
inc
or
filds
rcrl
clc
push
nop
int
or
push
rolb
add
pop
sbb
cltd
scas
ds
mov
cmp
and
daa
jnp
push
sub
adc
loope
jbe
popa
sbb
stos
or
or
and
mov
inc
bsf
lods
adc
pushf
sti
and
mov
sbb
dec
or
mov
pop
xchg
addr16
mov
xchg
push
mov
fiaddl
pop
pop
sbb
stc
scas
adc
ret
notb
stc
mov
mov
outsb
rcr
sahf
outsl
jae
dec
sub
ds
sub
pusha
bound
push
adc
insl
dec
and
xchg
out
mov
dec
pop
dec
int
fmul
dec
pop
push
mov
or
in
inc
in
or
push
mov
xchg
popa
xchg
mov
sahf
shll
sub
add
fstps
cmpsb
mov
ljmp
arpl
push
xchg
adc
and
push
in
xchg
jmp
movsl
das
sub
xchg
cmp
popf
push
xor
sub
imul
add
fmulp
xchg
maxps
dec
int
test
lods
pop
cld
mul
mov
cmp
mov
dec
dec
jnp
xchg
inc
sub
roll
xorb
daa
cmp
icebp
loop
pusha
inc
or
enter
xchg
xor
dec
mov
pop
out
lods
jp
lds
adcb
lods
daa
push
push
pop
movsb
pop
mov
mov
pop
push
out
mov
xorb
jg
xor
sbb
aam
or
paddsb
xor
dec
push
mov
or
cwtl
pop
xor
sbb
inc
push
adcb
mov
fcmovne
repnz
push
jge
call
subb
xor
test
mov
daa
int3
jo
int
jp
adc
lcall
sbb
insb
jns
mov
test
add
das
or
cmp
sbb
inc
push
cmp
inc
rcrl
inc
sub
aam
ja
scas
lods
pop
mov
mov
and
ds
sbbb
xchg
insb
jae
lahf
push
add
cs
and
mov
je
jnp
mov
or
leave
xor
stos
lds
push
into
and
fnsave
mov
mov
in
dec
or
dec
sar
sub
push
cld
out
stc
adc
popf
adc
pop
push
jmp
xor
cmp
and
mov
jne
mov
push
out
repz
and
sbb
jae
in
iret
sbb
sarl
sub
mov
movsb
lods
repz
sub
icebp
fists
test
cmp
ret
sub
xchg
loop
pop
xor
or
mov
sub
mov
sub
mov
mov
jge
sbb
test
adc
push
mov
and
pushf
pushf
dec
xor
mov
sbb
enter
adc
fs
mov
cmp
mov
iret
pop
mov
pop
xchg
mov
mov
leave
push
inc
test
mov
nop
fwait
inc
xor
or
les
dec
pop
push
mov
mov
cmpl
test
pop
addr16
lods
and
mov
pinsrw
cli
int
or
es
icebp
test
leave
dec
xchg
call
scas
gs
bound
xor
stc
dec
mov
mov
int3
xor
movsb
dec
fwait
test
lock
inc
sbb
fs
jb
pop
jg
pushf
jl
outsl
pusha
fdivl
xchg
xchg
in
test
jg
and
dec
inc
pop
ljmp
lret
inc
divl
jno
mov
sbb
arpl
xchg
mov
pop
sub
arpl
pusha
adc
into
dec
and
mov
ss
sbb
push
sbb
fwait
or
sbb
shll
sbb
mov
pop
pop
sub
lret
jnp
push
jo
fidivrl
cmpsl
mov
rcr
out
xchg
jbe
lret
add
adc
push
hlt
arpl
xchg
into
imul
dec
mov
fistps
in
jge
cltd
jl
xor
xchg
push
std
negb
jmp
add
rcr
idivl
jl
lahf
mov
dec
push
repz
inc
bound
lods
and
fsubrs
push
testb
es
mov
int
nop
push
and
out
inc
dec
jnp
jl
les
add
addr16
and
out
pop
imul
xor
adc
mov
addr16
mov
inc
sbbl
jae
mov
mov
sub
or
fisttps
cmpsb
rorb
sub
push
loopne
mov
jb
scas
aaa
push
push
fmul
popa
and
ficompl
and
mov
negl
and
jno
icebp
and
mov
out
gs
lods
sar
mov
outsb
sbb
add
cld
xorl
into
repz
pop
ljmp
push
mov
cs
mov
pop
mov
mov
popf
rcrl
gs
movsw
inc
jp
add
pop
mov
jmp
jmp
aas
push
xlat
mov
inc
hlt
jp
push
mov
jmp
dec
or
inc
ja
adc
pop
lcall
filds
push
mov
jno
and
cmp
mov
test
sub
push
pop
dec
sbb
sub
in
inc
aad
inc
imul
xchg
sbb
push
jne
xchg
sbb
sahf
sbb
push
adc
sahf
jmp
in
andl
sbb
and
cmp
mov
and
data16
out
repz
add
cmpsl
rorl
mov
aaa
jns
aaa
pop
pop
cs
int3
js
aaa
fidivs
mov
jle
sub
mov
mov
shll
sbb
xchg
and
loop
les
cld
movsl
and
data16
mul
add
and
sbb
lea
jae
jg
dec
or
loopne
cmpl
fwait
movsl
ret
dec
pop
pop
arpl
inc
xchg
adc
adc
mov
mov
or
lcall
mov
imul
pushf
xor
ret
mov
add
repnz
sbbl
lret
sbb
sub
mov
jns
popf
xchg
inc
pop
mov
cmpsl
mov
xchg
xchg
cmp
out
out
mov
test
jecxz
or
repnz
imul
push
hlt
aam
outsb
into
xor
jb
flds
ds
cmp
sub
sub
adc
cmp
mov
ja
pop
cmp
cmpsb
iret
scas
xor
xchg
push
adc
xor
jb
cmp
jle
loopne
dec
jmp
mov
mov
cmp
sbb
clc
push
arpl
int3
jnp
push
pop
push
mov
lods
movsl
inc
repz
push
in
cltd
mov
push
cmp
dec
adc
je
mov
into
adc
sbb
pop
call
inc
push
negl
nop
mov
sub
xchg
dec
leave
adc
cmp
pop
jmp
inc
cmp
fadds
fisttpl
dec
sbb
pop
inc
in
pop
dec
ss
je
push
daa
pop
imul
push
xchg
mov
movb
mov
sti
and
mov
cwtl
jge
outsl
xchg
sahf
dec
out
xchg
pop
pop
aad
loop
fwait
xor
icebp
push
mov
pop
push
in
push
addb
inc
call
pop
sarb
scas
jp
mov
mov
pop
mov
aas
out
outsl
sub
jnp
notl
push
jg
fldt
out
xor
aas
mov
in
xor
daa
or
in
sub
xor
xchg
push
adc
repnz
pextrw
mov
xchg
push
addr16
mov
jbe
gs
jae
xor
or
lcall
inc
and
mov
xchg
leave
shrb
in
ja
dec
imul
scas
cmc
fisubs
lahf
xor
mov
adc
pop
mov
subl
xor
into
xor
push
in
pop
ret
dec
enter
dec
push
call
and
xor
push
inc
gs
jns
dec
xchg
fsubl
mov
nop
es
xchg
sbb
push
xchg
decb
jns
movsb
sbb
mov
mov
clc
and
int3
dec
fists
pop
lahf
pop
ret
xchg
movsl
lcall
sub
stc
and
mov
jo
push
cmp
cmpsb
dec
or
jmp
sbb
xor
test
sti
sub
or
or
in
dec
xchg
icebp
cli
jl
out
imul
xor
bndstx
int3
push
mov
test
dec
ret
cltd
or
lds
sbb
insl
or
xor
mov
cmp
mov
fistpl
in
mov
dec
pusha
nop
out
mov
push
sbb
scas
add
sbb
cli
std
into
jg
lock
mov
imul
ja
aaa
mov
dec
movsb
into
ja
mov
sbb
ljmp
test
and
mov
push
push
cmp
jl
sub
cld
cmp
inc
sub
pushl
xchg
fs
aas
movsb
mov
dec
cmp
xor
ljmp
into
stos
cltd
test
movsl
dec
pop
xchg
ljmp
add
pop
dec
inc
pop
lock
dec
mov
mov
pop
add
xor
xchg
pop
mov
push
and
lcall
sub
cltd
sub
sbb
scas
sub
jae
and
stos
fmuls
movsl
shlb
aaa
mov
cltd
data16
fs
out
mov
stc
ret
stos
dec
cmpsl
pop
push
shl
dec
mov
ret
aas
frstor
shlb
sar
push
adcb
stos
clc
repz
in
and
xchg
pusha
pop
push
testb
int3
int3
dec
sbb
jp
shll
sbb
push
adc
xchg
xor
jl
pop
jp
cmp
movb
pusha
fmuls
shr
dec
cs
inc
add
lret
xchg
add
or
push
pop
jne
sbb
sbb
jno,pn
sti
jg
hlt
cld
shrb
outsb
adc
outsb
xchg
shr
cmp
cli
add
cs
scas
loop
sub
inc
std
andb
sub
mov
xchg
xor
adc
add
mov
pop
mov
push
lret
in
or
mov
rcll
push
or
push
inc
cmp
inc
xlat
sub
xchg
aad
out
loop
dec
dec
inc
mov
xor
out
scas
mov
cmpsl
out
ret
push
loop
popf
and
movsb
mov
jecxz
imul
lods
sub
mov
xorl
jp
out
cmpsl
xor
and
outsb
xor
imull
push
fidivrs
fstpl
out
sti
mov
inc
mov
mov
movsl
out
add
sbb
in
insb
out
lods
pop
mov
bound
pushf
push
repz
pop
out
or
lds
into
sbb
inc
push
mov
mov
cmp
test
cmpl
xchg
sbb
std
adc
jecxz
sbb
daa
or
add
and
mov
jo
jg
movsb
js
pop
jmp
aas
push
test
cmpsl
faddl
es
popa
js
mov
sbb
pushf
daa
in
sti
je
shlb
adc
hlt
test
jo
push
sbb
insb
jecxz
ds
das
fdivs
sbb
sbb
add
ficompl
js
mov
add
imul
inc
lds
ret
lahf
mov
mov
divb
inc
insb
data16
add
pop
enter
adc
push
ja
jbe
out
lahf
sub
xchg
jle
fdivrs
aaa
add
push
mov
test
gs
adc
lea
in
bound
sub
fs
sbb
addl
aas
mov
or
mov
adc
jnp
mov
loopne
dec
jns
idivl
inc
mov
mov
mov
sbb
pop
pop
daa
out
mov
cmp
int3
mov
das
in
dec
push
cmp
xor
sbb
push
cmpsb
pop
and
xor
dec
add
ds
loope
push
stc
inc
mov
cs
add
mov
mov
je
ss
xchg
jb
mov
mov
sahf
je
mov
loopne
pop
mov
aas
sbb
movsl
cltd
sti
mov
aam
cltd
dec
les
mov
stos
popf
cmp
test
testb
adc
fmulp
loope
cmp
lods
adc
mov
dec
test
mov
or
les
sub
pop
fildl
je
movsl
pop
daa
outsb
xchg
out
add
rcrb
test
cld
fsts
orl
inc
add
test
cld
jge
mov
pop
inc
dec
cmc
adc
pop
mov
mov
pop
or
mov
inc
add
push
xchg
popl
lahf
cmp
sub
shll
push
adc
inc
xchg
dec
pop
leave
jbe
mov
jge
cwtl
add
mov
and
cld
push
jo
sbb
xor
push
dec
or
mov
jl
ficoms
mov
pop
cmp
sub
cwtl
lds
fs
and
push
dec
cmp
dec
pop
jo
and
jg
adc
fs
mov
fwait
sbb
lds
jp
in
lea
mov
xchg
mov
in
clc
in
add
cmpsb
mov
popa
nop
jnp
push
cmc
inc
imul
and
cmpsl
movsl
adc
jl
pop
inc
lock
dec
stos
cmp
mov
sub
jb
sbb
jno
sub
jae
mov
stos
sahf
divl
in
sub
pop
test
cmc
mov
rolb
xchg
pop
stos
and
pop
dec
pop
mov
mov
repz
fldcw
fbld
in
dec
push
loopne
icebp
add
adc
push
and
rcrl
arpl
loope
or
gs
sub
aam
daa
cmp
repz
inc
adc
add
sub
pop
mov
adc
jl
pop
outsl
fcomip
stc
xchg
lock
jp
syscall
popf
jns
cmpsl
scas
xor
mov
clc
gs
shlb
pop
call
cmp
push
and
jle
fucomip
out
lods
jae
xor
mov
aas
mov
ljmp
add
xchg
jecxz
inc
dec
jne
lcall
sarl
std
adc
dec
mov
add
ljmp
loop
sub
dec
gs
push
jno
mull
mov
xchg
scas
iret
dec
nop
imul
mov
pop
jnp
out
push
pop
adc
adc
mov
mulb
dec
cltd
inc
mov
bswap
cmp
inc
hlt
stos
sbb
ret
loope
sub
fwait
push
fiadds
rorl
mov
hlt
fistps
idivl
sbbl
dec
jbe
int
adc
pop
jne
fbld
ret
ja
and
mov
mov
push
out
jae
data16
pop
sti
fisubl
pop
mov
pusha
push
and
dec
mul
gs
cmp
lahf
pop
push
bound
sti
mov
sahf
ja
ljmp
cmpsb
lds
sti
ljmp
leave
push
fcomi
cwtl
pusha
movb
push
push
ret
lds
mov
mov
fmull
std
ja
or
lea
frstor
mov
mov
jecxz
movsl
lods
adc
pushf
cmc
lods
add
popf
ss
jmp
data16
test
loop
push
stc
hlt
push
fdivrs
inc
cmp
cli
jno
mov
add
dec
mov
in
sub
and
ficompl
outsl
daa
mov
push
popf
fst
add
fcom
and
push
fwait
xchg
cmp
mov
push
fisttps
mov
pop
add
jg
loope
pop
movsb
mov
add
xor
les
pop
push
stos
xorl
xor
mov
jp
rclb
jl
adc
ret
pushf
icebp
xchg
xchg
cwtl
mov
mulb
push
mov
xchg
notl
test
stos
and
pop
jmp
dec
popa
inc
push
hlt
and
mov
mov
add
mov
popf
jne
int3
lret
jl
xchg
aam
pop
lods
in
jmp
sub
in
pop
sbb
xchg
outsb
jge
mov
push
push
dec
lea
cltd
lret
loope
je
push
pop
or
inc
inc
movsl
leave
mov
jl
jns
or
lret
sbb
pop
sbb
rorb
adc
sbb
sub
mov
jmp
mov
clc
jnp
jb
mov
jle
pop
ljmp
imul
incl
mov
xor
push
bound
or
mov
cli
cwtl
inc
cmp
push
push
push
push
jne
movsb
jmp
ljmp
ss
mov
inc
cmp
jg
xchg
inc
cmpl
adc
je
inc
mov
mov
jno
sub
daa
jnp
cltd
xchg
popf
cmp
out
add
inc
xor
push
adc
and
rolb
lahf
cmc
xor
xor
inc
ffreep
add
sub
cltd
cmpsb
and
movsb
adc
sti
xchg
loopne
sbb
inc
and
data16
into
icebp
push
dec
nop
mov
cmp
fidivrs
sbb
mov
out
int
in
sbb
fisttps
lock
out
adc
cmp
shlb
or
inc
iret
adc
xor
aad
mov
js
mov
jg
push
xorb
sbb
push
xor
sahf
jl
xor
and
mov
adcb
scas
lahf
cs
scas
push
popa
es
dec
shrl
adc
or
popa
push
dec
aaa
data16
jb
add
data16
jmp
mov
subl
test
fimull
jb
sub
sub
mov
mov
out
xchg
mov
hlt
pop
ljmp
ret
je
dec
ds
stc
mov
mov
lds
arpl
icebp
repz
push
bound
mov
and
xchg
mov
jbe
cwtl
push
cmpsb
out
sub
dec
sub
push
cmp
lds
pop
out
inc
loope
out
loop
sahf
inc
fs
and
insb
mov
addr16
inc
or
pop
jbe
loopne
push
jle
arpl
stos
hlt
and
stc
cli
mov
movlps
stos
lret
push
push
lds
repz
or
cmp
mov
push
mov
scas
xchg
inc
pop
jb
mov
faddl
fs
std
pop
pop
or
or
push
shl
jo
sbb
test
in
pop
fstpt
cmp
xchg
cwtl
mov
imul
jo
push
addr16
sahf
arpl
jecxz
mov
and
enter
push
xor
mov
or
imul
lods
push
cmp
mov
sub
pop
jle
testb
in
push
or
fsubrl
pop
out
popa
pop
adc
and
fnsave
fistps
jae
push
shlb
fstl
sbb
cmp
jbe
stos
je
orl
cmp
ret
insl
push
lds
daa
dec
jmp
mov
dec
xor
mov
arpl
and
int
mov
out
push
fs
clc
and
and
cmc
arpl
pop
inc
stos
dec
inc
cmp
or
xlat
jne
andl
cmpsl
pop
cli
rcrb
movsb
clc
lods
sbb
cwtl
jb
in
loop
jno
in
ds
cli
xchg
jb
and
adc
and
xchg
sgdtl
daa
xchg
xchg
pop
sub
cltd
cmp
ja
cmp
stos
es
mov
call
add
xchg
loopne
push
inc
cs
jg
pushf
fwait
fwait
imul
adc
adc
daa
cmp
or
pushf
inc
addr16
aas
cmpsl
mov
jl
sbb
lret
and
dec
push
sub
xor
dec
xlat
inc
jbe
jno
int
cmpsb
stos
xor
cld
jnp
fiaddl
sbb
mov
aad
fwait
push
aaa
in
and
enter
sbb
push
xor
cmp
je
jno
pop
rorb
or
mov
xchg
xchg
xlat
sub
jmp
test
jl
push
mov
pusha
out
cmp
pop
mov
lods
mov
push
arpl
cmpsl
sbb
mov
in
ret
ljmp
sarb
pop
fldcw
in
dec
adc
ret
pop
lods
loop
pushw
pminsw
mov
cs
fsts
add
ja
scas
scas
pushf
and
mov
add
movsb
movsb
jle
jmp
xchg
pop
and
aam
das
adc
mov
xchg
lret
pop
push
mov
fnstcw
fdivrl
push
xor
add
mov
jae
imul
insl
push
sbb
shll
imul
hlt
push
mov
fucomi
and
xor
mov
xor
push
es
push
dec
sub
repz
popa
stos
sub
mov
pop
jge
inc
dec
pushf
sbb
iret
movb
clc
adc
sbbb
rolb
and
mov
call
push
fs
mov
out
out
or
js
dec
push
push
jmp
adc
out
fadds
psrld
nop
loop
ret
push
sub
sarl
fcoml
mov
push
les
paddusw
cwtl
js
jb,pn
dec
mov
aaa
jp
xchg
and
mov
jo
xchg
pop
cmp
and
mov
cmp
mov
roll
addr16
sub
sbb
or
ds
sbb
lock
inc
sbb
jae
xor
cmpsl
test
pop
adc
shr
adc
pushf
pop
daa
push
mov
sbb
aas
or
arpl
das
or
mov
mov
int
gs
cmp
neg
fisubrs
cld
mov
push
xor
inc
jbe
ja
lcall
or
mov
in
dec
pop
out
or
test
jge
bound
pcmpgtw
xor
scas
enter
xor
adc
je
xor
fisttps
ljmp
lods
mov
push
cwtl
rclb
adc
cmpsl
sub
sub
sbb
int
jg
cmp
dec
xor
push
push
sub
imul
dec
cli
sub
int
jge
movsl
imul
push
fistpll
xor
cmp
sbb
test
stos
pop
push
mov
out
jno
sub
lret
fidivs
mov
push
inc
push
mov
push
mov
pop
jns
adcb
in
xlat
les
or
test
lret
push
rcl
data16
push
shrl
dec
decb
arpl
mov
push
aad
and
sub
icebp
stc
xor
mov
mov
or
jo
lods
outsl
mov
adc
pushf
imulb
cld
lods
cmp
in
repnz
mov
je
cmp
inc
fxch
jo
out
lods
in
dec
mov
mov
mov
in
pop
jl
mov
dec
mov
dec
repnz
int
int3
mov
pusha
cltd
or
and
in
je
cli
stc
repnz
push
rcll
mov
push
iret
mov
mov
jae
inc
adc
pop
adc
test
and
int3
aad
and
pop
xadd
insb
push
loope
rolb
or
js
icebp
xchg
lods
hlt
mov
leave
jmp
jmp
push
xlat
jo
and
cld
sbb
ror
popf
add
ror
addl
ror
mov
shll
mov
loop
jns
mov
testb
das
es
mov
mov
xor
push
dec
and
cli
nop
fwait
xor
mov
ljmp
leave
or
negl
mov
bound
fdivrl
js
xor
adc
mov
jp
lds
dec
jbe
pop
add
lcall
push
insl
popf
fldl
insb
fwait
pop
ret
push
aaa
xor
aam
inc
ret
mov
adc
sub
fcoms
push
or
sbb
ljmp
sbb
les
push
jp
les
pusha
mov
std
mov
repz
inc
add
test
jb
daa
cmp
aam
xchg
out
lahf
clc
xlat
out
mov
lds
mov
fcoml
dec
inc
mov
sub
aad
lea
xor
aaa
sbb
fisubl
or
pop
stos
xor
mov
jmp
xor
ljmp
mov
sti
push
push
cmc
jge
stos
cmpsl
imul
leave
ret
dec
jl
add
in
cli
js
test
ja
jecxz
pusha
sbb
xchg
dec
in
movsl
cmp
int3
cwtl
pop
dec
idiv
int3
test
jnp
ss
movsb
rol
inc
or
push
aad
inc
out
push
lret
dec
mov
leave
mov
push
imul
or
pop
cmc
jae
adc
ret
in
sbb
pop
popa
imul
cmp
push
jl
cmp
xlat
inc
repnz
mov
or
lahf
dec
movsb
test
push
je
popa
sub
or
loope
loope
and
mov
sbb
test
mov
fs
cltd
stc
fcompl
add
insb
mov
or
mov
xlat
out
sub
ffree
icebp
rcrb
js
cmp
pop
sub
orb
scas
insl
js
fmull
cli
cmp
sbb
mov
dec
pop
jae
inc
aam
pop
hlt
cmp
fisubrl
imul
xchg
jb
insb
push
pop
fists
mov
cmp
cmp
inc
hlt
js
bound
or
rorl
hlt
sub
mov
pop
aad
xchg
push
ret
out
pop
fs
sbb
add
cmpsb
cld
add
in
je
mov
mov
shl
mov
cmp
rclb
xor
xor
imul
mov
adc
orl
sbb
mov
mov
xchg
test
scas
jecxz
xchg
js
sbb
lea
sub
sbbl
repz
mov
jns
adc
cli
jge
dec
repz
repnz
or
lea
sub
int3
jl
add
and
inc
or
std
rcrl
mov
and
xor
inc
mov
fdivp
mov
mov
push
jmp
jbe
mov
lret
movsl
addl
mov
add
jl
xchg
ds
sub
mov
hlt
in
lods
outsb
stc
sbb
dec
or
sbb
repnz
lret
inc
cmc
jle
shrl
int3
xchg
or
lods
pop
das
mov
and
pop
cmp
ret
adc
xchg
je
mov
scas
jl
not
movsl
cmp
jns
arpl
adc
dec
and
lods
sub
nop
xchg
cmp
test
loop
xchg
mov
scas
mov
mov
xchg
in
std
repz
lds
lret
cmpsb
jns
and
movsb
in
fistps
fsubs
arpl
lock
jnp
or
fistl
aad
pushf
arpl
shlb
cmpl
mov
mov
out
fbstp
or
clc
push
lret
jne
loop
cmpsb
es
fucomip
out
xchg
daa
ret
imul
pop
adc
and
dec
jg
in
adc
nop
push
sub
imul
mov
outsb
fdivrs
imul
or
in
aad
mov
jb
repz
mov
and
jb
lcall
cmp
cmp
outsb
jle
stos
cmovnp
addl
les
test
out
mov
xchg
xor
pop
and
xor
add
xchg
out
push
xchg
cmp
lahf
bound
iret
push
jns
xchg
xor
fistl
jo
mov
fwait
int
lods
jb
xor
pop
xchg
dec
dec
xchg
adc
xor
push
pop
leave
or
dec
lods
dec
pop
jns
mov
cmpl
jne
pop
or
xor
lock
pop
jmp
push
pop
sbb
pop
cli
movsb
jnp
and
jae
push
rol
jl
lods
sahf
enter
test
data16
data16
cmp
testb
jl
or
cmp
ret
cmp
lcall
js
and
adc
pop
out
test
stos
mov
sbb
out
scas
mov
inc
faddl
or
lods
out
sti
jne
ret
or
insb
outsl
ficompl
pop
jg
daa
stc
inc
cltd
mov
jle
jmp
and
bound
pusha
xor
mov
cli
mov
cs
push
adc
addb
dec
faddl
fwait
roll
fists
push
jo
pop
xlat
test
jg
js
loop
xchg
bound
jb
in
cld
pusha
mov
mov
xor
sbb
cmpb
dec
icebp
pop
and
xchg
mov
repnz
pop
mov
jmp
scas
mov
inc
adcb
je
adc
adc
pop
int
mov
lcall
push
addb
daa
leave
xor
xor
adc
xor
and
aas
push
fisttpll
addr16
int
jbe
dec
into
mov
sbb
fs
int
sub
push
rclb
fidivrl
ss
lahf
xchg
jno
outsl
mov
int3
out
lcall
and
sub
out
dec
lods
adc
pop
insb
addr16
and
scas
pop
pop
push
jo
jmp
jnp
or
lds
xor
movb
popf
sbb
and
int
or
lret
fldt
mov
decb
xchg
int
push
inc
jnp
in
sub
imul
out
xlat
push
daa
jmp
test
and
xlat
push
movsl
sti
sbb
lret
dec
sub
pop
fldl
dec
pop
mov
cmp
mul
mov
loope
loope
ja
in
insb
testl
sub
loope
lods
jp
shrb
dec
insl
push
data16
iret
mov
cmc
lds
mov
cwtl
pop
sub
cmp
or
ret
out
mov
jbe
lods
jnp
dec
ss
mov
addr16
cltd
add
lock
out
lods
push
or
into
outsb
sti
dec
outsl
jb
pop
loopne
repnz
pushf
and
jno
jnp
cmpsb
push
and
and
mov
sarb
sbb
dec
cmc
mov
pop
push
ret
les
out
pop
ja
ret
ret
pop
adc
jl
pop
shlb
inc
jno
mov
push
rclb
out
pop
and
ficompl
data16
cmp
cs
stc
icebp
divl
lret
adc
fsubl
lahf
ja
xchg
mov
test
js
inc
je
sarb
insb
nop
mov
lods
and
adc
cs
iret
pop
mov
dec
cs
dec
mov
jno
dec
lahf
sahf
mov
into
push
jno
inc
fucomi
pusha
ds
pshufw
mov
jne
andb
outsb
sti
jae
stos
adc
loop
test
push
inc
and
xchg
mov
push
dec
js
jmp
add
out
inc
aam
xor
bound
dec
cli
stos
pop
cmp
mov
ret
push
int
cs
test
adc
test
mov
mov
mov
jo
mov
push
jbe
add
xchg
rcrl
xor
mov
xor
paddd
jnp
stos
pop
mov
add
test
mov
push
enter
rorl
mov
mov
loope
and
inc
dec
inc
andb
mull
mov
outsb
shlb
sti
sbb
cs
or
and
pop
inc
xor
outsl
mov
shlb
or
xchg
fcmovbe
repnz
xor
movsb
xchg
test
cmp
popf
mov
jno
xchg
imul
pushf
cmpsl
push
fs
call
lret
mov
flds
mov
lret
jo
stos
lea
outsl
rolb
pop
mov
inc
lret
fadds
adc
push
and
mov
xchg
and
jo
shrb
push
sahf
test
push
enter
ret
push
jecxz
xor
cltd
and
push
mov
fisubrs
fsts
sub
xlat
cmp
test
adc
push
cmp
iret
xchg
fsubl
lods
cmp
nop
add
push
dec
and
gs
mov
and
inc
adc
pop
ja
jb
andl
xchg
or
je
pop
mov
shll
mov
lock
ja
ret
lret
xchg
mov
mov
xchg
sbb
cmpsl
into
mov
add
filds
cmpsl
dec
adc
sub
test
sbbb
enter
decl
jl
ret
and
xorb
mov
xchg
fmuls
js
fiadds
sbb
pop
inc
or
xor
mov
xchg
lret
inc
gs
std
sti
dec
test
or
imul
or
mov
jo
add
lods
inc
es
xor
add
lahf
rorb
stc
mov
adc
fimuls
pop
fstpt
fcomi
push
pop
sarl
lds
xchg
loopne
mov
das
ljmp
jns
inc
xchg
fisubs
mov
mov
popl
cmp
adc
fs
in
push
dec
std
or
out
nop
mov
outsl
add
jno
jnp
lds
sbb
push
sbb
sub
lock
js
xlat
clc
and
or
inc
inc
or
xchg
pop
xchg
add
insb
and
jmp
fdivl
dec
fldt
hlt
in
cld
test
fcmovnb
dec
nop
jge
xchg
pop
insl
and
sbb
xchg
mov
outsb
cwtl
addr16
mov
jl
xchg
or
insl
pop
outsl
aam
add
add
mov
movsl
pop
sahf
mov
sbb
cld
loopne
sub
mov
cmp
sbb
icebp
adc
sub
add
rol
xor
push
pop
dec
or
outsb
push
sbb
cmp
fstl
and
in
pop
dec
xor
negb
mov
mov
inc
dec
loope
sbb
inc
xchg
jno
sbb
lret
pop
mov
cmp
or
inc
xchg
jp
nop
imul
andl
push
mov
insl
roll
push
test
adc
push
xor
cmc
xor
movsl
pop
stc
pop
shlb
roll
push
pop
mulb
shlb
cmp
push
adc
lods
ret
int
outsb
mov
inc
rcrb
cmp
stc
cmp
stos
xchg
add
lahf
jp
loopne
adc
icebp
ret
test
xor
stos
lods
sub
lcall
xchg
or
inc
test
adc
xor
stos
punpcklwd
xchg
xor
aaa
xchg
mov
aas
sub
jo
or
jb
cmp
mov
pop
in
hlt
sub
pop
dec
test
out
pop
fsts
pushl
cmp
inc
arpl
sbb
or
loope
test
enter
mov
insb
xchg
rorl
xchg
push
sahf
es
stos
pop
lret
and
mov
scas
testb
inc
xor
add
popf
repz
enter
outsl
mov
cld
push
scas
lods
mov
lds
mov
mov
mov
andb
lahf
rolb
rolb
lods
pop
testb
jge
dec
gs
lea
les
sub
jp
lds
jnp
mov
pop
dec
jbe
jns
xchg
jg
out
cmp
jle
mov
pop
in
outsb
fidivs
mov
lods
lods
pop
ss
std
popf
inc
adc
loope
mov
in
rcl
dec
mov
xor
aaa
adcl
push
mov
pusha
popa
mov
jmp
dec
js
out
pop
dec
inc
sbb
bound
pop
sti
rcll
sub
mov
pop
fiaddl
and
push
loop
and
push
sbb
cli
stc
lods
std
push
pushf
push
out
push
lea
sti
aam
and
into
push
int3
push
xor
ror
adc
pop
push
test
shll
mov
jnp
les
sbbl
hlt
loopne
sbb
and
ret
rorb
mov
orb
loop
pop
sub
pop
pop
push
ljmp
pop
clc
das
rcrl
pop
xchg
xor
lahf
call
fidivrs
cmpsb
mov
divl
fsts
insb
movsb
scas
stos
sub
mov
push
movsb
or
push
xchg
es
arpl
cmp
popf
xor
pop
cmp
xor
fcmovnb
cli
inc
sbb
fidivrl
mov
repnz
xchg
adcl
les
jle
mov
mov
inc
mov
or
rcll
xchg
aas
or
push
pop
xlat
xor
ljmp
mov
cmp
pop
popl
into
cmpsb
push
push
inc
pop
dec
push
popa
cmpsl
sbb
jl
xchg
adc
int3
shrb
aam
inc
cld
lock
sbb
sub
xor
imul
ret
mov
pop
fists
xchg
int3
xor
sub
pushf
ja
ds
outsl
sbb
jmp
scas
push
imull
xchg
add
bound
pop
inc
mov
sub
mov
xchg
fstl
mov
and
imul
pop
cs
fmull
xor
jecxz
adc
fdivl
pop
dec
mov
int
adc
in
or
comiss
jne
or
dec
fidivrl
xchg
sub
cmp
push
xchg
lahf
cmpl
cmpsl
call
jo
push
mov
cmpb
iret
push
mov
mov
cld
sub
jge
lods
inc
popa
stos
jae
push
push
fsts
nop
in
lcall
icebp
dec
pop
call
ljmp
imul
fcoml
aad
inc
insl
pop
js
sub
cmpb
inc
pop
xor
call
add
mov
pop
xor
inc
mov
in
and
loope
pop
insl
mov
or
jp
mov
sbb
in
ja
sub
popf
mov
fstl
xchg
mov
push
js
test
sub
inc
xchg
mov
and
push
xchg
into
push
test
jl
into
mov
fldt
repz
and
sub
mov
jbe
movsb
rolb
scas
add
add
stc
xchg
push
xor
stc
lahf
xchg
cmp
pop
inc
jecxz
add
ds
push
fidivrs
inc
mov
push
lahf
into
imul
mov
sbb
in
adcb
mov
test
xchg
inc
sbb
mov
add
xchg
loope
sbb
rcrb
addr16
mov
pop
and
cmp
xchg
cwtl
or
sarl
pmulhw
ljmp
mov
pop
pop
cld
dec
aaa
inc
mov
int3
jmp
xor
cmp
scas
fcomp
adc
cmp
sarb
inc
scas
mov
cs
cmp
jb
jns
adc
add
imul
or
or
adc
sti
inc
mov
sub
dec
mov
bound
dec
inc
cmp
push
push
add
fs
or
mov
clc
ljmp
or
shrl
mov
mov
stc
int3
xor
movsb
add
dec
adc
hlt
lods
std
stos
lret
cmpsl
ss
aas
rcrl
shrl
mov
inc
mov
jle
mov
rep
xchg
xlat
and
inc
and
out
test
mov
loop
mov
repnz
sub
inc
in
mov
xor
or
sbb
jg
mov
sbb
xchg
sub
add
cmp
shrb
dec
fistl
cmp
cmpsl
mov
jg
mov
mov
movsb
lret
push
fstl
loopne
pop
aam
fimull
mov
popa
push
repz
scas
icebp
xor
add
arpl
pushl
insb
xchg
or
cmc
xchg
dec
push
das
lods
cmp
ss
or
je
xor
mov
dec
jno
sub
mov
lcall
fcmove
push
inc
mov
popa
insb
sti
push
bound
test
adc
dec
or
cmp
xor
lock
push
mov
jbe
mov
fisubs
jnp
fs
leave
push
sbb
out
add
mov
push
jns
xlat
sub
cmp
pop
lea
xchg
and
fcmovb
sub
call
das
sub
sbb
pop
or
shl
sub
mov
les
test
inc
fnsave
movsl
mov
jl
sub
inc
test
sbb
sti
loope
notl
roll
jp
xchg
rep
sub
mov
or
cmpsb
pop
xor
repnz
pop
scas
push
inc
or
sub
test
int
jns
fld
es
sub
mov
cltd
xchg
data16
cmp
mov
xchg
cmp
insl
or
adc
imul
add
xchg
hlt
xor
mov
cmpsb
push
imul
sbb
mov
loopne,pn
sbb
dec
popa
jae
test
mov
inc
frstor
or
cmc
rep
sub
xchg
sbb
pop
popf
sub
xlat
mov
add
mov
ret
daa
pop
data16
stos
scas
ss
cltd
icebp
int
add
mov
xor
shrl
sub
in
xor
sub
jmp
pop
dec
lods
popf
jmp
ds
and
shlb
cltd
cmc
push
cmc
repz
xchg
mov
clc
in
mov
adc
lock
lods
fidivs
mov
das
jae
cs
int
arpl
jo
cld
adc
xchg
and
inc
mov
lock
popf
daa
xor
mov
rorb
clc
sub
mov
jle
inc
mov
add
cmp
and
mov
mov
add
xchg
push
outsl
cmpsl
insl
pop
fldl
outsb
icebp
cmc
xchg
sub
sbb
rcll
shrl
jge
out
outsb
out
test
mov
xor
aam
jp
push
repnz
mov
scas
cmp
lods
daa
mov
in
sbb
mov
das
jle
aam
gs
pushf
movsl
pop
xchg
jmp
scas
or
lock
add
rolb
fisttpll
and
cmc
cmp
mov
sbb
xchg
sti
popa
push
mov
dec
cmp
pop
mov
cmp
cmpsl
xor
cmp
mov
lds
cmp
cwtl
aam
mov
xor
jbe
stos
test
xchg
add
dec
cmp
or
filds
mov
ss
xchg
ret
mov
pop
mov
or
cmp
mov
inc
or
in
sahf
add
hlt
loop
push
push
inc
lret
arpl
rcll
sub
mov
out
or
dec
add
fs
jno
daa
aad
data16
rorl
mov
outsb
or
jle
pop
lods
imul
loopne
xor
ljmp
adc
and
repnz
int3
pop
loopne
sub
xchg
and
lods
js
subb
or
mov
lods
int
pop
int
mov
lea
arpl
lds
inc
sti
xchg
addr16
push
sti
push
fnstenv
addl
jb
or
pushf
inc
push
add
out
test
jb
lods
rorb
movl
icebp
dec
mov
les
pusha
and
outsb
and
dec
inc
pop
enter
rcrb
lret
rdpmc
jne
shll
mov
aas
sbb
in
ret
lds
ret
in
jmp
jle
mov
lods
jmp
test
push
xorb
icebp
mov
mov
pop
xchg
mov
mov
push
or
ror
mov
jmp
cmp
dec
fcoml
add
addr16
mov
sahf
xchg
dec
sub
push
nop
push
popf
adc
fadds
stos
cmp
adc
sbb
dec
ret
xor
stos
fldt
test
rcll
dec
fwait
cmpsl
push
pop
dec
lret
enter
cltd
in
dec
das
popa
inc
sub
inc
ret
push
cmp
push
xchg
cmpsl
xchg
push
cld
pop
js
jmp
outsb
or
and
sub
jle
jo
cmp
mov
shlb
daa
in
hlt
add
xchg
loope
rolb
stc
mov
xchg
lea
xchg
mov
inc
popf
add
sahf
mov
dec
xor
xlat
hlt
addr16
int3
mov
mov
jnp
lret
xlat
aas
rcll
jo
dec
cli
fildll
mov
aam
pop
inc
hlt
push
test
pushf
adc
outsl
dec
mov
aad
jb
pop
scas
call
dec
add
insb
push
add
std
adc
mov
jecxz
or
into
adcb
into
cmp
ds
xlat
mov
inc
test
mov
dec
insl
xchg
and
pushf
jecxz
in
and
hlt
sbb
jae
dec
jl
cld
out
jns
pop
insl
stos
sub
test
inc
ljmp
xchg
mov
ret
pop
notb
cmp
fwait
cmove
outsb
push
push
add
and
pushf
orb
cmp
jo
movsb
cltd
or
mov
lock
mov
in
jl
push
xchg
dec
fsubrs
int
ficoms
mov
xchg
movsb
mov
and
mov
cmp
les
sbb
fisttpll
jmp
add
cmp
stos
and
sbb
rclb
push
lea
mov
cmp
sbb
cli
adcb
pop
cmp
outsb
mov
mov
int3
pop
push
imul
jecxz
lock
mov
jp
not
adc
jb
scas
xchg
mull
push
orl
hlt
daa
jecxz
es
and
lea
arpl
and
test
mov
cmpsl
push
ss
mov
loopne
mov
stc
jl
jg
push
cli
inc
fnstenv
outsb
xchg
push
push
xchg
bound
jb
out
xchg
lcall
or
shll
lret
mov
mov
mov
mov
or
outsb
ret
loopne
or
shr
sti
movsl
jg
mov
and
ss
int3
mov
mov
gs
popa
inc
mov
push
lret
pop
push
loope
jmp
adc
mov
in
shll
xor
mov
mov
xchg
sub
lcall
sub
test
cmpsb
push
repz
leave
fimull
bound
cmp
dec
pop
mov
cmpb
adc
imul
and
and
jg
adc
lock
out
rorl
mov
and
push
mov
inc
ss
or
xchg
xchg
dec
roll
add
mov
dec
or
xor
outsl
addr16
stos
cmpsl
mov
stos
cld
and
or
addl
mov
loop
push
push
mov
popl
mov
or
xchg
loopne
and
adc
cltd
jo
fisttpll
cltd
lret
sar
xor
scas
sub
push
lds
shlb
lock
sub
and
pop
scas
les
inc
xchg
popf
sahf
push
push
dec
sti
pop
push
xor
add
push
stos
out
das
xchg
int
iret
orl
ljmp
idivl
xorb
add
loopne
sbb
mov
mov
cs
cwtl
fnstcw
mov
int3
add
cmp
xchg
addb
adc
mov
inc
cmp
add
xchg
jle
les
nop
gs
xlat
pop
push
sahf
and
imul
or
dec
and
subl
inc
jae
in
mov
bound
inc
cli
adc
lret
fidivl
or
loopne
adc
mov
ret
sub
leave
cmp
dec
fldcw
push
push
call
cmp
mov
xor
stos
sub
dec
inc
insb
push
ret
fistps
pop
xor
out
mov
inc
repnz
mov
mov
xchg
gs
mov
es
icebp
ljmp
lcall
arpl
push
repnz
stos
bound
outsl
mov
pop
mov
adc
cmp
hlt
das
fmuls
sahf
pop
push
insb
jbe
xorb
int3
cmp
pop
sub
push
lock
jns
dec
addr16
addr16
sbb
addr16
scas
push
icebp
pop
push
clc
xchg
xor
or
dec
dec
test
mov
push
dec
cmp
fmuls
jg
jnp
push
cltd
mov
sub
popf
pop
lret
or
inc
int3
jl
pop
int
push
add
or
arpl
out
insl
jecxz
lock
dec
loop
xor
jb
lcall
sub
jno
and
sub
jle
imul
stc
or
pop
pop
rorb
push
je
xor
out
ljmp
divb
mov
repz
repnz
aad
and
add
mov
sahf
pop
lds
sub
scas
dec
test
jp
fidivrl
inc
and
xor
movsb
adc
lret
add
cld
or
cmp
int3
inc
inc
dec
dec
nop
push
xchg
mov
jp
int
cmp
shrb
fdivs
rolb
inc
nop
lret
rol
cld
pop
push
and
pop
xchg
enter
push
ror
xchg
lea
fdivl
pop
push
testl
mov
cmp
cmc
out
xchg
cmc
das
cmc
jb
pop
add
fs
push
lret
gs
enter
mov
push
movsl
scas
out
mov
push
lods
arpl
xlat
adc
xchg
or
nop
add
jge
xor
call
push
cld
push
lcall
xchg
dec
int
js
mov
fsubrl
lea
ja
mov
sbbb
push
or
dec
and
mov
mov
and
pavgb
cmp
inc
cmp
push
inc
jmp
jne
movsb
adc
fdivrs
mov
xor
lahf
scas
add
mov
dec
sub
fsts
sub
mov
popl
cmp
inc
fcmovu
sbb
rclb
mov
or
mov
sbb
inc
cmp
and
xlat
pop
jg
add
cwtl
rorb
or
stc
into
inc
outsb
lret
inc
mov
xchg
mov
cli
push
mov
filds
lcall
pop
jmp
cltd
bound
in
dec
cli
lret
jno
sub
rcrb
int
scas
push
andb
shll
jnp
jbe
push
inc
jmp
movsl
out
clc
jge
bnd
push
orl
in
jbe
mov
pop
lret
adc
cmpsb
imul
test
sbb
test
inc
pop
addr16
popf
lock
xor
movsl
addr16
inc
in
jno
cltd
xchg
push
fwait
push
inc
daa
scas
inc
xchg
dec
jo
in
xor
jb
jno
cmp
mov
fstps
or
mov
pop
in
xor
push
out
mov
mov
adc
jbe
dec
sarb
ror
shrb
lret
dec
mov
xor
gs
loop
movsb
adc
stos
mov
jmp
pop
jnp
scas
rclb
jns
cmp
xcrypt-ofb
cmpsl
scas
push
mov
xchg
add
je
icebp
inc
fidivs
aad
lcall
test
mov
push
gs
mov
fs
xchg
sub
cltd
inc
add
xor
lcall
add
cld
mov
add
notl
ja
mov
pop
mov
jge
xchg
repz
movsl
subb
test
mov
mov
loopne
dec
into
mov
into
and
test
dec
cmp
outsb
aad
adc
leave
jle
xor
xor
xchg
or
pop
dec
cmp
cmpsl
call
fcomps
push
xchg
inc
add
ror
pop
out
cwtl
daa
xchg
leave
sub
cld
std
dec
je
pop
ret
inc
insl
rcll
lret
xlat
lahf
incb
mov
sub
xchg
lods
int
xor
pop
fidivrs
sahf
jle
xchg
std
in
adc
pushw
movsb
mov
into
xchg
xorl
and
arpl
adc
subb
sbb
aas
adc
fdivrl
lret
cmp
ss
push
stos
cmp
xchg
mov
aas
jb
mov
pop
movzwl
dec
in
add
or
ljmp
dec
lret
ret
sti
popa
mov
cmp
call
daa
insl
or
mov
or
mov
addr16
cli
roll
and
cmpsb
adc
jl
push
ss
dec
sbb
fwait
pop
jmp
sub
push
sub
lods
int
cli
pop
xor
leave
push
mov
sbbb
mov
jle
repz
test
dec
sti
in
push
adc
mov
adc
mov
fwait
mov
push
clc
fimull
adc
jns
cmc
pop
sbb
pusha
xor
dec
or
cmp
fistps
cmp
inc
cs
push
or
lea
js
xor
sub
call
push
in
aaa
je
or
sbb
cld
rolb
pop
sbb
or
inc
fs
adcb
int
dec
movsl
in
rorl
and
mov
fisubs
out
xorl
xchg
andb
mov
mov
rep
mov
sti
outsl
pop
lahf
xchg
repz
cli
push
repnz
mov
sub
hlt
mov
push
push
in
jg
dec
jb
push
push
pop
aam
into
mov
ja
push
test
pop
in
inc
shll
cmp
sbb
push
jae
ficoml
sub
mov
pmovmskb
dec
inc
clc
jne
mov
clc
mov
xchg
dec
dec
push
push
ljmp
addr16
adc
leave
sbb
dec
pop
ficoms
inc
test
sub
sbb
jnp
lcall
shrl
dec
dec
idivl
js
dec
mov
leave
and
fdivs
outsl
pop
adc
cwtl
adc
mov
loop
jnp
xchg
xor
xchg
mov
pusha
mov
mov
xchg
adc
mov
inc
add
mov
fwait
push
std
sarl
jl
es
rorl
mov
mov
mov
jge
mov
dec
pop
bound
push
in
jmp
cmp
mov
addb
mov
add
pop
add
shll
xchg
sbb
cmc
push
inc
adc
mov
jmp
add
std
repnz
push
adc
and
iret
in
cltd
test
sarl
out
push
jecxz
jae
cmpsb
pop
mov
push
jg
pop
lods
dec
xchg
sbb
mov
js
ldmxcsr
mov
xchg
cmp
adc
sbb
mov
add
sbb
inc
or
mov
adc
cmc
popa
push
aaa
xor
lds
xchg
rorb
addl
and
and
or
push
pop
fs
clc
sbb
add
jle
pop
jg
into
movsb
sbb
imul
jp
loop
movsb
inc
mov
pop
mov
lret
push
out
test
rclb
push
xor
mov
stc
jno
fs
repz
in
dec
pop
pop
mov
cs
xchg
sahf
out
add
in
iret
mov
outsl
sti
sub
xchg
pop
loop
jo
jnp
add
xchg
stos
das
mov
pop
mov
and
cltd
inc
inc
fsts
filds
cli
jne
dec
jnp
popa
sub
jno
sub
daa
lret
xchg
xchg
inc
fdivs
pop
sbbb
in
pop
sbb
mov
cltd
ror
push
ret
mov
push
push
es
push
jp
clc
pop
out
jno
mov
push
aad
iret
pop
sahf
insb
xchg
es
loop
pop
ja
inc
add
and
decl
jl
push
out
lcall
dec
adc
icebp
mov
shll
push
imull
and
xchg
repz
orb
mov
push
lret
pop
push
pusha
pushf
ficoms
mov
fs
mov
push
jb
mov
jne
into
fsubs
jg
push
adc
ds
in
xor
das
dec
cmp
fldt
pop
jle
pop
lcall
adc
push
sbb
popa
cli
pushf
hlt
ja
push
mov
sbb
movsl
push
test
movsb
popf
xor
imul
jp
adc
push
loopne
sbb
mov
mov
ficomps
inc
or
jmp
mov
push
insl
mov
cmp
dec
insb
mov
jnp
clc
push
pop
jge
push
or
mov
xor
jnp
incb
jmp
jo
xor
pushf
inc
insl
jmp
les
test
xchg
push
mov
sub
sahf
rorb
ss
sbb
mov
push
jle
scas
xor
lret
sub
dec
sbb
mov
mov
test
fidivrl
push
and
push
mov
imul
adc
xchg
out
add
in
mov
cmp
xor
mov
push
inc
out
sbb
testl
in
and
mov
or
inc
jecxz
stos
dec
and
enter
movl
ficoml
xchg
mov
mov
sub
jb
loope
out
sbb
iret
push
fidivs
arpl
add
sarb
or
sbb
push
adc
cmpsb
mov
dec
fs
popf
and
test
dec
imul
pop
jmp
dec
jbe
xor
sbb
cmp
loopne
incl
jb
iret
lahf
xor
sbb
js
jl
data16
jae
test
adc
movsb
shr
das
push
popf
xor
mov
mov
pusha
stos
outsl
mov
cmp
aas
cs
push
fcoms
loope
dec
and
sub
jo
jno
dec
cmc
jne
repnz
lods
je
insl
inc
fwait
xchg
or
lcall
or
loop
or
inc
loop
jl
daa
and
sub
mov
push
mov
cld
cltd
jae
mov
in
sarb
hlt
inc
movsl
in
push
jle
ficomps
je
rolb
icebp
out
shll
xchg
pop
lods
pop
cmc
adc
push
pop
sbb
push
sub
and
cld
aas
sbb
cmp
push
mov
pushf
iret
jo
bound
cmp
imul
das
inc
cmp
cmc
repnz
adc
dec
pop
lcall
int
xlat
das
pushf
push
lock
sahf
push
or
int3
mov
shlb
dec
lock
iret
icebp
inc
jmp
lret
push
shlb
sub
daa
pop
push
mov
push
das
into
in
adc
leave
imul
pop
mov
inc
lcall
sti
push
sbb
lahf
shll
das
mov
mov
dec
jb
adc
lret
lahf
dec
xchg
insl
inc
insl
sub
dec
les
hlt
sbb
push
adc
cmpsb
inc
popa
dec
ret
cld
dec
pop
lods
add
aas
sti
lret
mov
cmpsb
into
push
ret
mov
filds
sti
or
loopne
jns
inc
mov
and
int
fs
out
cmc
push
jg
in
insb
mov
pop
test
inc
dec
mov
scas
sub
aam
aaa
add
nop
fisttpl
in
adc
cltd
cltd
subb
mov
ret
push
arpl
je
jb
dec
pop
xor
sbb
out
clc
shrb
leave
sub
adcl
popa
stos
xchg
jl
stc
or
mov
or
jmp
sti
push
stc
int3
mov
mov
repz
inc
adc
adc
mov
jns
in
jne
xchg
pushf
leave
out
dec
jbe
mov
loopne
adc
lds
dec
mov
pop
jp
xor
xchg
adc
stc
jno
fadds
sbb
fcomps
jle
in
pushf
jmp
mov
popf
add
scas
jl
cmp
mov
cmove
leave
add
sub
nop
push
pushf
add
les
dec
test
or
sti
dec
mov
shrl
nop
or
sar
inc
das
add
mov
lahf
sbb
pop
jge
dec
adc
cld
xchg
out
mov
add
std
ret
cltd
push
sub
cltd
pushl
add
xor
hlt
mov
jae
mov
insl
cwtl
push
sub
dec
icebp
and
stos
std
sbb
scas
in
jge
mov
leave
ret
sbb
xor
xor
dec
xor
mov
leave
test
imul
push
rcl
sub
jno
push
pop
pop
mov
inc
orl
cmp
ret
out
lods
push
mov
repnz
jb
cli
jmp
mov
mov
xchg
cwtl
push
cmp
test
cmpsl
mov
ret
mov
sahf
or
jne
push
orb
outsb
enter
xchg
dec
fidivrl
cld
sarl
rcrb
shrl
xor
fwait
jns
jg
and
mov
and
sub
jne
inc
xor
adc
fwait
lock
mov
xor
leave
xorl
pop
popl
test
imul
dec
es
mov
xchg
adc
or
es
lods
mov
mov
jb
mov
cmc
fdivrs
xchg
fnstenv
mov
ljmp
add
mov
jne
pusha
daa
int
mov
ss
xchg
mov
repnz
outsl
mov
jmp
push
xchg
je
push
mov
in
jo
push
or
test
push
ucomiss
pop
push
clc
xchg
or
push
daa
mov
insb
flds
xor
bound
and
fnstenv
clc
pop
or
pop
xchg
aas
popf
arpl
insb
adc
cld
xchg
and
cmp
adc
cmpsb
mov
cmp
mov
lret
adc
pop
repnz
jp
dec
cs
pushf
mov
pop
adc
ret
popf
mov
iret
or
jmp
inc
ret
xor
cmc
push
test
add
or
push
lods
stos
test
mov
mov
or
push
mov
add
test
ficompl
push
fisubrs
mov
adc
add
popf
mov
xor
push
push
pop
popf
sar
into
inc
xchg
lds
xor
jg
movsl
push
scas
pop
and
icebp
mov
lods
loop
sub
cmp
xchg
test
jno
adc
les
push
sub
xchg
pop
repnz
rcl
gs
sbb
testl
pop
mov
add
jne
mov
push
jne
or
loop
aad
call
mov
cli
out
mov
and
into
cmpsl
mov
ret
inc
cmp
ds
repnz
insb
mov
sahf
mov
mov
or
jnp
mov
sub
ja
movsl
aam
or
enter
outsl
sti
inc
pop
push
insl
cli
in
lea
movsl
movsl
xor
xchg
imul
shlb
out
repnz
xchg
imul
adc
xchg
mov
iret
xchg
mov
xor
lods
js
adc
ret
movsl
jnp
enter
fmull
repz
in
push
dec
xor
mov
push
sub
push
cli
mov
aad
jbe
inc
into
push
xor
add
ss
or
pop
ja
in
addr16
add
mov
andb
push
orl
adc
inc
popf
pop
loop
sahf
int
mov
out
sbb
mov
push
adc
hlt
push
push
clc
or
lods
ret
push
mov
jecxz
test
daa
inc
mov
push
je
push
mov
mov
fwait
xchg
cmp
cld
pushf
scas
test
fwait
cmp
inc
ja
xchg
xchg
inc
inc
inc
loopne
out
xor
xchg
sbb
mov
jbe
outsl
cmc
loop
cmc
jns
popa
popa
cmp
lods
ficompl
pop
lods
jb
lahf
add
cmp
cmp
jmp
sbb
jo
xor
js
fmuls
mov
test
scas
or
hlt
stc
and
add
sub
in
in
adc
dec
out
pop
dec
pop
sbb
stos
adc
xchg
push
lods
dec
mov
or
in
push
mov
mov
fisttpll
lods
push
lahf
shrl
jmp
jmp
test
pop
data16
jmp
daa
xchg
mov
pushf
dec
lret
mov
xor
jb
and
add
nop
mov
mov
aaa
jle
mov
imul
add
cmp
or
adc
dec
incl
call
or
mov
pop
mov
pop
or
push
ret
mov
and
cltd
negl
out
adc
inc
jne
rcl
out
sti
cmp
or
incl
enter
xor
dec
pop
shlb
loopne
sbb
mov
jp
xor
enter
push
push
enter
das
cmc
push
inc
mov
sbb
adc
filds
arpl
mov
sub
and
movsb
stos
xchg
mov
pusha
pushf
add
add
adc
push
gs
orb
test
sarw
dec
jbe
movb
cmpsb
push
imull
cld
mov
pop
ds
and
les
stc
mov
aas
lahf
push
data16
lock
imul
fwait
or
sub
subb
or
rorb
xchg
mov
stos
rcll
aaa
pop
sbb
push
and
push
add
mov
je
call
aas
sti
dec
dec
mov
push
xchg
cmc
test
popf
in
sub
or
jnp
js
or
xchg
out
lods
std
iret
ret
jno,pn
mov
aas
add
jo
adc
fisubrl
push
ja
inc
or
loopne
mov
fwait
jns
popl
aam
testl
and
jb
hlt
cli
out
jle
inc
leave
lock
xor
sub
inc
cmp
mov
push
mov
sub
sbb
sbb
std
rcrb
push
sti
das
sbb
xchg
arpl
cmp
xchg
sub
in
daa
das
mov
dec
fldenv
cmpsl
outsb
pop
fstpl
xchg
jnp
cs
add
cmp
fbld
test
push
jge
mov
jnp
outsb
fmuls
push
cmc
add
imul
adc
es
xor
adc
dec
jp
cmp
cmp
xchg
sbb
outsb
pop
adc
arpl
mov
push
inc
add
das
cmp
fwait
subb
bound
push
int
gs
jge
push
push
popa
push
mov
testl
jmp
adc
dec
das
xor
lock
popf
imul
mov
xchg
adc
movsl
mov
jne
adc
js
push
popa
dec
pop
push
aas
rorb
cwtl
add
movsb
stc
daa
stos
mov
mov
push
add
movsb
mov
or
sbb
dec
stos
xor
pop
mov
fstpt
mov
fwait
mov
sbb
adc
test
mov
mov
or
inc
je
testb
lret
ljmp
xchg
jne
inc
dec
add
call
dec
popf
xlat
iret
das
pop
cltd
jne
adc
lock
fbld
jne
pushf
adc
inc
jg
cmc
mov
adc
xor
sbb
das
lret
out
sbb
jns
or
pop
lods
out
mov
pop
aaa
neg
enter
fcompl
inc
movups
add
cmp
push
dec
sbb
jmp
sti
in
iret
repz
adc
jg
adc
jns
outsl
sbb
sbb
dec
je
cmc
in
xchg
mov
std
outsl
into
or
lcall
fwait
loop
xor
rcll
out
stc
pop
jecxz
shlb
inc
and
aam
adc
push
popf
or
arpl
test
jae
repnz
mov
les
push
scas
mov
dec
stos
adc
fisttpl
pop
jnp
test
dec
push
pop
dec
dec
pushf
jb
mov
xor
mov
or
cmpb
adc
mov
scas
mov
test
std
add
jle
btr
push
in
mov
shlb
mov
lods
mov
add
insb
mov
mov
push
fstps
jo
or
push
xchg
and
mov
test
bound
ret
push
mul
cs
cmp
lds
and
subl
in
cli
adcb
push
push
gs
pusha
pop
clc
inc
aad
adc
aad
mov
cwtl
xchg
sbb
jnp
lds
dec
sub
aas
or
push
dec
lock
imul
mov
shlb
push
clc
or
idiv
xchg
inc
inc
ret
and
mov
dec
inc
adc
mov
movsl
test
push
loopne
cli
inc
insb
loop
mov
push
adc
sbb
ret
in
cmp
int
in
mov
fwait
push
or
add
xor
push
dec
add
fdivrp
movzbl
outsb
adc
test
aaa
xchg
sub
and
cmp
push
notb
adc
into
cld
mov
push
aas
sahf
lock
mov
pop
fimuls
roll
or
jne
xor
dec
and
inc
push
sub
mov
fsub
and
into
pushf
mov
push
aaa
sbb
inc
cmc
addr16
cmp
mov
pop
rorb
mov
dec
xchg
dec
js
push
mov
shrl
adc
push
cmp
push
xor
std
inc
mov
outsb
or
inc
test
sub
dec
xor
mov
inc
mov
test
add
push
dec
dec
fldcw
outsl
loopne
dec
leave
sub
sbb
movsb
push
gs
jge
lret
int3
push
test
pop
xchg
xchg
push
scas
adc
jae
xchg
lret
je
xor
test
mov
test
sti
jae
add
add
adc
dec
mov
sub
xchg
push
sbb
mov
outsb
or
lcall
adc
jae
into
jle
push
sbb
xor
fisttpll
and
hlt
xchg
pop
push
adc
mov
ja
or
inc
sbb
cmp
pusha
lcall
cwtl
std
add
fs
shlb
lahf
dec
mov
add
mov
inc
mov
jl
aam
inc
sar
push
pop
fisubs
clc
aas
stc
jl
pop
xor
data16
jno
xadd
js
out
scas
xor
rcr
popf
and
popa
xor
jmp
pop
jg
mov
mov
and
mov
cmpsl
adc
dec
or
notl
cmpsb
outsl
lea
into
popa
mov
ds
stos
rolb
inc
pop
pop
test
lods
int
cmp
loopne
les
out
add
xchg
xor
sub
xchg
jbe
fidivl
push
fs
add
into
jbe
movsb
mov
dec
or
test
imull
sbb
or
lods
sbb
xchg
ficomps
jne
inc
sbb
push
leave
cmp
loopne
rclb
test
cmp
mov
pop
nop
mov
hlt
pop
inc
add
cmp
ljmp
out
jmp
js
dec
mov
dec
adc
insl
enter
repnz
push
push
mov
pop
daa
fldenv
shll
outsb
cmc
or
xchg
mov
adc
popa
shl
mov
xlat
shll
sbb
cmpsb
add
cli
aad
aam
pop
mov
fstps
clc
dec
iret
out
xchg
arpl
loopne
adc
popf
push
fwait
ds
leave
cmc
mov
loope
lock
test
add
inc
push
mov
dec
mov
xchg
scas
dec
dec
sbb
adc
insl
mov
mov
pop
ljmp
and
je
rcrb
int3
mov
sahf
jne
add
adc
and
pop
push
shr
jae
sahf
mov
popa
xchg
int3
hlt
xchg
xchg
rorb
jbe
sub
cli
rorl
lret
es
fsub
dec
jb
inc
outsl
test
cmovae
jb
dec
movb
push
xor
mov
bound
jmp
push
xchg
jl
mov
mov
mov
cmpsb
lds
fwait
pop
mov
xchg
push
jo
cmp
xlat
in
add
je
add
je
popa
push
and
cmc
lock
aaa
cwtl
inc
pop
pushl
sbb
sbb
hlt
mov
outsl
mov
ljmp
mov
aam
stos
stos
xchg
xor
xor
loopne
add
aad
mov
push
adc
popa
cmp
xchg
ja
js
mov
inc
cli
jmp
out
je
aad
cmc
dec
aaa
mov
mov
pop
fidivs
lcall
popa
lcall
push
stos
mov
iret
mov
loopne
cmpsl
fcmovu
sahf
xor
sub
int
dec
sub
scas
mov
inc
push
xor
add
or
je
pusha
pusha
mov
es
in
xchg
ds
pusha
jge
lock
movsw
cmp
scas
push
inc
je
xchg
stos
cltd
xchg
sarl
adc
pop
jne
ss
test
mov
xchg
cmp
rcl
mov
fdiv
gs
add
mov
pop
shlb
xsha256
cmpsb
adc
nop
adc
lcall
lods
sbb
adc
insl
notb
mov
jae
mov
mov
sub
xchg
jp
cmp
push
inc
or
mov
jecxz
decb
movsl
rcrl
sub
cmp
xchg
movsb
ljmp
mov
inc
jbe
popf
or
inc
les
xor
xchg
adc
cmpsb
lcall
scas
icebp
das
pop
mov
out
fcmovne
mov
nop
mov
addr16
fdivp
pop
push
int3
rorl
xchg
stc
sub
stc
xor
mov
sbb
rol
lret
enter
mov
inc
notl
jo
and
sbb
inc
dec
cmp
and
cmpb
jecxz
aas
and
lock
sbb
or
xchg
mov
push
pop
test
lds
das
loop
and
or
scas
in
lods
add
or
cli
pop
imul
shl
and
lcall
lahf
repz
push
and
loope
scas
sbb
icebp
cmp
cmp
push
push
mov
das
fimull
mov
test
push
clc
lods
xlat
rorb
call
outsb
sub
adc
cmp
fisubrs
dec
js
add
je
subl
lock
repz
mov
int3
mov
ret
testb
mov
stc
lret
adc
push
pop
in
movsb
adc
add
fildl
adc
xor
fbld
aas
pop
imul
xlat
jecxz
lea
xor
push
bound
jmp
jbe
mov
roll
pop
inc
mov
jl
xchg
sbb
xor
push
mov
cmp
test
jp
outsl
mov
fsubl
push
lcall
ds
fdivs
mov
mov
adc
jb
pop
and
xchg
shl
scas
imul
mov
push
aas
lcall
lcall
and
rclb
push
iret
xchg
lcall
pop
pusha
and
and
insb
in
and
loope
mov
sub
out
xchg
jne
data16
outsl
cmp
repnz
xchg
cmpb
lret
push
out
fistps
dec
out
lods
inc
cmp
inc
inc
or
ds
fisttpl
imul
ja
shrl
sbb
mov
xchg
fcoml
daa
xchg
sub
push
out
lea
pop
sub
dec
sbb
and
xor
subb
lcall
lods
add
sub
callw
mov
jecxz
fistpl
cmp
or
jecxz
out
dec
mov
xchg
push
push
repnz
mov
test
inc
mov
in
pop
inc
inc
mov
add
dec
xchg
push
mov
adc
or
or
pop
dec
adc
sbb
lock
xchg
ja
pop
ret
lret
sub
insl
sub
pusha
clc
orl
sub
push
pop
arpl
sbbb
lods
in
out
mov
in
jmp
add
adc
sub
adc
repz
push
rcrl
in
test
idiv
icebp
loopne
shr
xor
xchg
ret
dec
cmpsb
cmp
sbb
xor
clc
mov
cltd
or
add
mov
mov
shlb
sbb
xchg
stos
mov
imul
sub
cmp
insb
es
lods
xchg
and
pop
outsl
mov
dec
push
and
cs
cmp
punpckhbw
sbb
and
sbb
rorl
or
cmp
jno
mov
gs
sbb
mov
rcrl
pushf
aad
sub
pop
test
xor
repz
push
sbb
pop
cmc
add
mov
adc
mov
cld
repz
mov
mov
add
decl
inc
cmp
dec
cmpsb
xor
or
cmp
outsl
scas
and
jg
mov
or
or
into
add
push
push
jmp
push
repnz
push
lahf
or
inc
pop
andb
cld
jp
xor
data16
sub
or
loopne
push
sarb
dec
and
out
lret
ja
push
xchg
iret
dec
inc
data16
cmp
sti
push
xor
filds
adc
mov
nop
mov
xchg
arpl
cmpsl
jge
loope
out
cltd
das
push
mov
mov
pop
xchg
rcrb
std
iret
inc
scas
rcll
inc
ffreep
mov
ficoml
andb
cmpsl
or
xchg
fnstcw
out
adc
adc
inc
jbe
stc
dec
jns
aaa
lcall
test
push
pusha
pop
fidivrl
lcall
mov
ficompl
sbb
shl
push
daa
jne
adc
mov
sub
movsl
sub
cmpb
mov
iret
xor
movsb
sahf
out
fsubrs
adcl
pop
inc
inc
std
push
dec
adc
inc
sbb
xchg
insb
js
and
adc
xor
movsb
inc
cltd
call
in
and
push
sub
cmp
jle
jb
mov
jmp
mov
sub
cltd
ret
dec
enter
mov
repnz
rep
cmp
ljmp
clc
fnstsw
pusha
mov
lea
pop
dec
cmp
mov
fwait
rclb
std
mov
mov
and
cmpsb
or
fwait
cmp
push
jae
cld
popf
cmp
aam
add
sub
adc
ljmp
fs
jne
aaa
push
sti
outsb
mov
or
in
sbb
pop
cmp
jbe
mov
push
gs
lret
mov
mov
mov
push
cwtl
bound
and
ret
in
lods
xchg
or
mull
push
pop
jmp
pop
jl
push
pop
push
daa
and
scas
fcmovnb
adcl
pop
lcall
cld
adc
jnp
pop
push
adc
push
pusha
test
stos
mov
imul
or
aaa
pop
mov
cmpb
ja
inc
xchg
xor
xchg
pop
xchg
inc
sbb
mov
mov
dec
mov
inc
cmp
dec
je
fbld
push
xchg
xlat
repnz
push
ljmp
loopne
inc
adc
push
xchg
pusha
inc
lret
or
leave
jl
jle
and
xchg
dec
out
out
mov
mov
mov
lcall
cmp
mov
out
push
ljmp
xor
in
cmp
jnp
hlt
mov
out
inc
cmp
adcb
mov
adc
sub
jno
sub
pop
arpl
mov
sbb
movb
adc
sub
xchg
andb
shrb
jge
cmp
inc
cmp
hlt
pop
sbb
push
cmp
sbb
test
decb
sub
sub
xchg
dec
rorl
pop
es
sbb
popf
dec
shlb
fstl
bound
mov
push
ret
fildl
aam
sarl
lods
stc
aaa
stos
mov
adc
je
cmp
and
pop
mov
jo
fadds
clc
out
fists
adc
pop
sub
push
loopne
popf
pusha
mov
add
jne
or
sbb
xchg
or
ss
xchg
push
gs
insb
frstor
int3
push
cmp
lret
sti
repz
add
xor
push
lock
lcall
jmp
loop
cmp
jg
stos
xor
out
lods
mov
mov
movsb
movl
xchg
fisubrl
pop
sub
lds
ret
adc
mov
cmp
jb
pop
lret
stc
ljmp
test
dec
inc
and
ret
sbb
cmp
xchg
pop
pop
insb
xor
lds
inc
fldcw
xor
pause
pop
lahf
mov
push
jb
sar
sub
sbb
sbb
rorl
dec
pop
mov
hlt
out
sub
sbb
stc
mov
mov
lret
jno
inc
stc
xor
testl
xor
mov
fimuls
dec
ret
clc
xchg
out
dec
jmp
pop
fcmove
cmp
fwait
lret
or
inc
fcmovb
out
pop
inc
cs
cwtl
jp
mov
cmp
int
cltd
cmpsl
or
mov
mov
jns
pushl
faddl
jno
repnz
jle
out
imul
push
lods
cld
call
fstps
cmp
mov
fstpl
jne
pusha
push
add
ja
repz
jnp
mov
and
int3
and
js
pop
push
dec
xchg
sub
mov
data16
ljmp
add
in
xchg
pusha
out
sub
lahf
jno
repnz
jge
aad
cmc
mov
ret
xchg
or
lds
cmc
jge
cmp
or
scas
pop
in
test
dec
jge
lock
push
cmp
or
bound
jno
fsubp
push
mov
sub
xchg
popa
mov
inc
into
pop
ljmp
push
jae
mov
cwtl
adc
in
out
aas
cltd
iret
imul
popf
adc
dec
adc
in
lret
loopne
arpl
push
popf
mov
jno
rcll
xchg
fmull
std
mov
cmp
test
mov
pushf
mov
ja
push
fadd
push
push
jg
fmull
jbe
rcll
dec
cltd
sub
fcom
sub
dec
lds
addr16
ds
incl
push
std
ret
fistpl
pop
lea
mov
ret
cmp
and
inc
sub
push
mov
jae
jae
push
adc
push
sbb
je
das
mov
push
popa
inc
scas
xor
ds
loop
push
sub
sbb
mov
push
cmc
iret
xchg
enter
jg
lret
jae
lods
out
dec
lods
jp
ret
dec
mov
jle
sbb
loopne
push
mov
lea
and
xor
jnp
loop
or
leave
aas
jmp
pop
sar
das
inc
dec
in
loope
push
jns
movsl
push
lahf
mov
pop
jl
pop
sbb
les
aam
in
mov
and
int
inc
ret
sub
arpl
into
jb
mov
dec
ret
mov
mov
call
psubusw
ret
fimull
and
inc
xor
lock
or
das
addb
stc
stos
add
mov
testb
fs
xchg
test
sub
je
out
dec
push
jge
pusha
mov
les
mov
xor
fcmovnbe
pop
aad
mov
adc
and
xchg
outsl
call
adc
push
mov
call
movb
jl
sti
lods
outsl
aad
mov
cs
inc
jnp
pop
lea
sahf
fstl
outsl
sti
stos
cmp
js
into
mov
mov
mov
fistps
ljmp
out
sbb
imul
push
xlat
lahf
fcmovbe
mov
iret
repz
out
outsl
inc
in
aad
mov
insb
incl
mov
ffree
inc
sbb
sbb
mov
ds
push
inc
xchg
push
or
pop
std
mov
add
pusha
out
xor
mov
inc
and
mov
mov
pop
dec
js
or
jp
pop
shlb
xor
js
xor
fldl
sbb
jmp
fnsave
je
mov
jo
aas
mov
jp
inc
fsts
lret
sbb
test
subb
loope
stc
aam
aas
bnd
cli
lock
rol
orb
push
mov
inc
mov
mov
xchg
test
adc
inc
pop
in
lea
inc
sbbb
movsb
mov
cld
xor
mov
notb
lods
adc
sub
xor
xor
inc
dec
jp
cmc
dec
sbb
shrb
sbb
or
xor
jmp
push
sti
test
inc
decl
jne
dec
adc
add
sarb
mov
test
mov
inc
dec
ss
jnp
popf
adc
inc
xor
mov
aaa
ja
or
xchg
xor
sbb
cmp
xor
negl
aam
fists
shr
das
enter
xchg
pop
sbb
and
jmp
add
add
add
insl
enter
repnz
mov
mov
adc
outsb
push
pusha
sub
das
scas
jl
stc
sti
adc
sub
aas
std
add
stos
push
sub
inc
inc
xchg
cmp
pop
les
mov
cmp
sub
push
or
push
mov
mov
inc
data16
mov
mov
movsb
push
mov
aaa
imul
iret
lret
iret
testb
fisubrl
sbb
mov
or
je
mov
dec
mov
mov
cs
cwtl
dec
lahf
mov
push
cmpsb
pop
adc
jmp
mov
fs
adc
test
jp
loop
mov
add
ret
mov
rclb
in
add
pushf
nop
jl
mov
outsb
lds
push
divl
js
or
scas
push
push
loope
dec
mov
and
cmpsb
dec
pop
jmp
adc
jmp
es
mov
jb
xor
pop
xchg
out
jnp
cmc
xchg
mov
jmp
lock
ret
sbb
dec
cmp
mov
icebp
jne
sbb
fistl
adc
inc
adc
add
cmp
add
xor
div
sbb
enter
out
mov
clc
test
inc
xor
pop
insl
add
push
sbb
or
lcall
sbb
test
adc
jecxz
jl
push
arpl
lcall
and
push
cmc
pushw
mov
movsl
or
push
int3
iret
lds
dec
les
repnz
dec
and
lea
mov
mov
mov
adc
cwtl
sti
or
dec
add
mov
pop
xchg
les
sbb
fidivl
mov
fnsave
sub
add
lea
in
mov
daa
pop
inc
or
clc
pop
mov
mov
sbb
xchg
aaa
xchg
test
addr16
pop
loope
movsb
out
xor
shlb
scas
fnstenv
lcall
jb
jge
in
sti
lcall
mov
ficoms
adc
add
mov
push
sbb
pop
in
inc
iret
fisttpl
fldenv
jbe
ror
ds
xor
loop
stos
fs
mov
xlat
cmpsb
mov
pop
insl
mov
jnp
ret
in
and
test
imul
mov
jge
stos
call
cltd
lret
jecxz
lcall
cmc
xor
push
dec
insb
add
pusha
cmpsb
adc
inc
popa
jge
push
add
arpl
and
inc
ljmp
mov
mov
mov
xor
pop
pop
sbb
pop
cmp
push
stos
cld
or
xchg
xchg
test
fisttpl
push
pushf
sysenter
bnd
add
xchg
cmpsl
sbb
mov
mov
filds
sti
and
fcoml
mov
sbb
rol
mov
mov
xchg
add
test
aad
movsb
push
jb
scas
sub
xchg
or
insl
repnz
mov
mov
scas
data16
outsl
rclb
jo
add
adc
daa
popf
add
jmp
loopne
mov
xor
inc
xor
jno
aaa
das
jle
jb
fildll
movsl
pushf
sbbl
add
movsb
lods
repz
out
out
out
aas
jmp
lods
xchg
mov
popl
std
movsb
mov
adc
xchg
push
inc
decb
mov
jo
loope
mov
out
push
cmpsl
icebp
jle
xchg
pop
setle
pushfw
fldenv
sbb
sub
and
fcmovnb
packuswb
mov
out
push
insb
and
push
out
adc
ficoms
fldenv
je
negb
add
adc
cmp
mov
popf
cmp
inc
lret
adc
popa
pop
paddw
dec
cmp
cmc
aas
sbbl
sub
jns
loopne
mov
pop
in
out
push
idivb
or
insb
hlt
ja
js
sub
adc
mov
scas
inc
jmp
xchg
pop
into
ret
nop
pop
stc
lret
addr16
push
imulb
arpl
mov
insl
adc
filds
in
mov
fnstsw
sbb
dec
faddl
in
sbb
xchg
sahf
pop
movsb
sbb
lds
cmpsb
pusha
popa
pop
int3
arpl
dec
sub
loope
push
sbbl
push
ds
cmp
xchg
pop
xchg
call
push
enter
sbb
xchg
stos
in
xchg
pop
int3
rclb
jmp
movsb
lods
lret
xorb
sub
pop
stc
sub
pop
fwait
imul
sti
dec
popa
mov
in
xor
mov
ds
push
movsb
loopne
ja
out
aam
loopne
lcall
cmp
lods
pop
out
mov
std
mov
mov
bound
xchg
sbb
repz
add
pop
outsl
xchg
pop
mov
insl
jb
dec
xor
dec
aaa
dec
sbb
add
int3
rorb
in
jno
out
aam
daa
push
push
add
push
das
push
loop
pop
filds
inc
xchg
cli
jbe
pusha
ss
ljmp
ds
movsl
xchg
jle
xchg
dec
loopne
rorl
lahf
jmp
sub
pop
pop
cmpsb
ret
adc
mov
clc
movsl
xor
cmp
jmp
cmc
push
jp
loopne
or
mov
mov
jge
mov
cwtl
lock
std
cltd
or
out
xchg
or
in
cmpsb
fs
cwtl
sub
loope
mov
sahf
lcall
push
mov
addl
dec
pop
fildll
cmp
aam
lcall
aam
push
adc
or
mov
xchg
hlt
push
rclb
xchg
aaa
sub
jp
sbb
arpl
or
psubusb
jb
js
out
pop
fwait
pop
jle
jnp
lcall
pop
dec
outsl
jbe
xchg
inc
pop
ja
mov
mov
incl
add
xchg
mov
mov
mov
movsb
insl
fs
sbb
adc
in
push
sbb
shrl
inc
mov
movsl
mov
xchg
xor
mov
fisttpll
sbb
int3
sahf
push
jns
sub
mov
sub
sarl
cltd
mov
xchg
cmp
aam
inc
out
dec
push
in
sbb
dec
jo
push
hlt
ljmp
mov
outsl
inc
movb
adc
push
cmp
dec
shlb
mov
mov
pop
and
outsb
loop
inc
sub
push
subb
in
mov
push
xor
or
imul
pop
push
push
popa
cli
fcoms
js
sub
mov
and
mov
push
push
jns
fs
arpl
scas
inc
pop
adc
movsl
cmc
loopne
out
mov
je
lahf
pop
mov
insl
lahf
xchg
ret
insb
fldcw
mov
jb
mov
fldcw
cmc
lock
fs
push
outsl
test
addr16
decl
xchg
and
xchg
or
dec
lock
fnstenv
std
stc
ret
cmpsl
or
pop
lahf
jle
jb
test
cmpsl
pop
jmp
sbb
imul
jg
cltd
int3
inc
dec
or
pop
adc
incb
pusha
in
rorl
leave
sbb
push
xlat
lahf
sub
or
je
cmp
rorl
movsb
int
cmp
fstpl
xor
rcrb
push
jg
sti
cmpsl
and
and
cmc
mov
fcomp
aas
stc
sub
pop
popf
adc
mov
dec
idiv
inc
sub
cli
pop
je
sahf
mov
sbb
xorb
in
js
dec
in
aas
negl
push
fimull
test
stc
push
fdivs
or
pop
sub
lea
push
xchg
leave
pop
mov
lea
mov
lcall
pop
ret
dec
sbb
insb
mov
aaa
rorb
scas
ret
xchg
test
pop
mov
sarl
roll
imul
and
orl
mov
in
lret
rsm
add
lret
fsubs
sub
pop
loopne
movsl
rolb
adc
mov
dec
mov
inc
or
lret
push
pop
shll
push
sub
mov
sub
rcr
inc
xchg
xor
xor
xor
test
js
pop
inc
lea
aam
xchg
shll
xor
negb
or
js
rclb
push
cltd
out
mov
fs
repz
packsswb
and
sbb
mov
fs
fwait
inc
loopne
mov
sub
int3
jle
in
hlt
cld
cmc
cmp
test
xchg
dec
bound
or
jae
aaa
hlt
clc
adc
push
sub
mov
jp
xor
test
int
push
inc
jns
pop
cmpsb
hlt
lds
push
insb
mov
push
mov
sub
retw
dec
leave
int3
xor
pop
push
arpl
mov
sarl
popa
push
jbe
test
rorl
jnp
in
xchg
mov
aam
pop
ljmp
push
popa
add
jne
add
add
inc
jp
in
or
mov
test
data16
ret
lock
mov
or
push
fsubrs
cld
in
mov
add
mov
sbb
movsl
int3
arpl
test
imul
xchg
mov
inc
dec
dec
stos
xor
flds
dec
jge
in
jp
je
in
std
imul
pushf
inc
mov
or
and
ja
pusha
or
xchg
daa
inc
das
cmp
pop
mov
jnp
rcrl
xchg
test
dec
in
std
or
and
icebp
cs
filds
in
fidivl
cmp
xchg
pop
pop
xlat
push
cmp
jb
xor
fdiv
in
xor
dec
shll
mov
hlt
sub
loop
inc
outsb
adc
pop
hlt
insl
out
scas
movsl
mov
cmpsb
scas
xchg
call
cld
dec
mov
add
adc
push
jmp
fcoml
jbe,pt
stc
das
nop
out
aam
xor
pop
pop
xor
arpl
gs
sbb
xchg
cmp
popa
cmpsb
dec
mov
jns
jns
enter
ljmp
mov
stc
mov
jnp
push
or
push
rcrb
xchg
fwait
inc
mov
loop
add
gs
scas
arpl
jg
inc
mov
stos
jp
add
xor
jnp
js
pop
mov
inc
pop
imul
add
cmp
pop
mov
mov
ja
or
mov
fnsave
call
cltd
add
xor
shrl
cmp
inc
and
lock
pop
out
and
inc
stos
sub
mov
lahf
cmp
test
jns
xor
repz
xchg
push
bound
popf
mov
sbb
cmp
fs
or
lods
pop
fisubrs
ret
and
cmpsl
outsl
stc
bound
jbe
pop
cmp
mov
scas
fisubrl
cmp
dec
ss
je
mov
dec
mov
repz
movsl
int3
cs
pop
sbb
xchg
mov
adc
and
pop
sbb
or
jne
inc
sub
xchg
fisubrl
sarb
daa
sarb
lret
jmp
jl
jg
outsb
scas
mov
into
and
sub
xchg
lcall
xor
ja,pn
or
jmp
adc
mov
iret
xchg
mov
push
mov
push
dec
mov
outsl
or
fcoms
std
jae
push
dec
cmp
sti
adc
daa
xchg
mov
negl
mov
test
fdivrp
mov
scas
pop
popf
mov
enter
popa
pop
push
push
in
cmp
sbb
dec
or
or
mov
mov
sub
push
loop
xlat
arpl
push
stos
jbe
inc
mov
fcoms
js
push
xchg
cltd
pop
and
aam
in
or
xor
aad
in
test
jge
mov
in
daa
clc
jb
push
repz
fiadds
pop
repnz
or
adc
or
mov
inc
add
mov
push
dec
repz
add
xchg
arpl
inc
mov
movsl
mov
imul
inc
and
loopne
stos
push
cmc
mov
sub
mov
push
jns
fbstp
pop
add
fnstcw
movsl
dec
mov
add
movsl
scas
std
test
popw
stos
dec
xchg
lods
pusha
jp
lods
shlb
cltd
pop
popf
sub
f2xm1
or
pop
lahf
hlt
inc
lret
mov
in
push
jo
sub
nop
mov
mov
std
and
outsb
outsl
mov
sbb
hlt
jnp
adc
ret
inc
mov
ficoml
cmpsl
jle
sbb
into
fdivrp
jmp
jmp
nop
das
cmp
sbb
dec
adc
jnp
pop
ljmp
inc
lods
fs
mov
aam
shl
add
filds
mov
adc
sarb
aas
cs
inc
scas
xor
add
out
dec
fsts
push
pop
cmp
dec
in
add
cmpsl
icebp
ds
cmpl
lods
lret
mov
data16
pop
pusha
and
pop
out
jp
insb
sub
mov
xor
hlt
lcall
push
addb
push
pop
and
xor
and
or
and
mov
lea
pusha
jbe
inc
dec
fistps
lret
popa
add
sbb
push
mov
outsl
sub
sub
adc
sbb
shrb
and
xor
mov
inc
sbb
lock
ljmp
cmp
loope
mov
fs
fidivs
adc
adc
lea
mov
push
jecxz
push
pop
jnp
push
cmp
fldt
outsb
nop
adc
mov
pop
xchg
fldenv
aad
cs
sub
shlb
jo
push
sub
jp
in
bound
add
and
mov
jl
xchg
addr16
mov
inc
fsubrp
xor
xor
aad
lea
mov
jmp
xor
cwtl
push
jecxz
mov
or
add
push
lods
mov
or
push
or
in
cmp
adc
ror
or
xchg
mov
insb
dec
movsb
ret
sbb
pop
movb
fwait
push
xchg
lret
jge
and
pushl
sbb
ds
mov
and
push
cmp
test
mov
xchg
or
cmp
rol
cld
pusha
dec
mov
jle
test
inc
adc
das
fxch
shll
shll
pop
add
sub
cmpsl
push
sbb
in
sti
sbb
in
push
mov
xchg
sbbl
or
add
cmc
and
mov
das
fmull
cli
dec
and
mov
out
mov
pop
gs
sahf
add
jmp
cmp
iret
mov
sbb
faddl
jb
stos
loope
hlt
cmpsb
sbb
mov
out
sarb
xchg
cmp
push
data16
inc
sbb
lcall
xchg
sbb
ss
add
sti
insl
xchg
cmp
sti
mov
repz
xchg
lods
fmul
shrl
adc
fbld
sub
ror
cmp
xchg
cmpsb
in
fs
aam
out
and
mov
pop
or
mov
loope
mov
sub
ds
sarb
or
cltd
pop
sub
mov
out
xor
sub
push
pop
mov
xor
push
inc
ficoml
scas
aam
in
dec
hlt
sbb
jbe
iret
jo
data16
sbb
xchg
loope
push
aaa
mov
addb
cli
dec
inc
pop
cmp
jbe
scas
xor
test
addb
jb
jnp
scas
push
andl
incb
iret
data16
cli
xor
dec
inc
mov
adc
cmp
or
cmp
mov
jnp
int3
dec
inc
stos
mov
aas
in
outsb
popf
push
sbb
jno
sbb
xchg
testb
mov
jge
in
pop
popa
int
test
sbb
sub
nop
aad
cmpsl
rclb
cmp
pop
mov
repnz
xchg
hlt
adc
aad
imul
or
xchg
aam
dec
enter
dec
or
lds
sbbb
call
mov
out
inc
fadds
jo
rclb
fwait
int
in
mov
add
xchg
shlb
lds
mov
xor
and
mov
cmp
jb
das
mov
pop
push
sbb
cmpsl
add
je
xor
imul
lcall
mov
sub
movsl
pop
aaa
or
outsb
mov
add
mov
outsb
mov
mov
xchg
aas
pushf
fcoms
test
dec
and
push
test
and
fwait
ja
jmp
push
insl
scas
xchg
mov
adc
out
test
divl
mov
lods
xchg
push
insb
daa
ret
lret
or
cmp
sub
or
gs
pop
mov
fwait
jmp
xor
cwtl
pop
icebp
insb
xchg
rcrb
xor
into
add
clc
or
xor
sbb
mov
call
loop
fsubrl
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sub
call
daa
aam
jb
inc
jns
pop
insb
xor
rcrb
call
setl
inc
pop
xor
shlb
int3
adc
add
mov
xor
pushl
mov
pop
mov
sub
or
add
mov
xor
push
or
pop
push
push
movswl
pop
popl
adc
or
sub
sbb
dec
dec
dec
push
sbb
pop
cmp
jne
or
jmp
lock
stos
jnp
push
jp
pop
jmp
dec
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
ret
test
pop
push
fs
rolb
inc
pushf
aad
inc
push
leave
mov
lahf
sbb
inc
pop
ljmp
sub
sub
pushf
hlt
gs
mov
sbb
mov
xor
mov
cltd
sbbb
lock
add
dec
gs
xor
lds
ret
mov
or
pop
ret
lahf
dec
repnz
das
popa
sbb
pop
dec
enter
ret
shrb
adcb
jecxz
clc
imul
cmp
push
test
add
cmp
xor
add
or
stc
cld
stc
je
ret
cld
pop
movsb
cmc
mov
lock
pop
mov
mov
mov
or
adc
movsb
js
xor
dec
pop
pop
inc
or
push
and
xor
movsl
adc
xlat
cli
xchg
fimull
jg
push
inc
test
xor
inc
test
int
mov
mov
cmp
push
or
out
push
push
or
pop
cmpsl
pop
dec
add
in
mov
fdivs
sbb
ficompl
loop
pop
xchg
add
cmc
mov
jg
test
mov
jl
sbb
push
stos
pop
inc
xor
push
call
aad
or
rorb
imul
xchg
and
cld
test
add
lcall
cmp
push
xchg
cmpsl
imul
outsl
fucom
sbb
gs
lret
lock
test
fwait
pop
sbb
cmpsl
push
and
scas
pop
lret
and
push
cld
test
or
fstp
cmp
lcall
adc
fstpt
shrb
inc
in
rorb
test
inc
jo
adc
or
imul
aas
lods
push
jl
xor
fs
jae
in
mov
sbb
mov
xchg
aas
int
sbb
xchg
imul
sbbb
sub
out
jmp
push
cld
test
scas
adcb
out
lahf
in
jnp
sbb
and
mov
icebp
test
push
sbb
add
sub
stc
es
test
shrb
or
jae
or
lahf
or
rol
sti
shlb
cmpsl
gs
and
fwait
in
movsb
scas
mov
test
mov
pushf
mov
xorl
push
xchg
inc
scas
sti
movsb
cmp
mov
sub
sahf
fwait
dec
lahf
jnp
mov
mov
mov
xchg
dec
cmp
cmpsl
dec
inc
mov
and
cmp
mov
lahf
xchg
dec
cmp
pop
adc
fwait
in
mov
xchg
mov
sahf
loopne
add
lock
mov
in
aam
movsb
dec
push
fwait
in
push
clc
rdpmc
mov
and
fsts
sbb
adcb
and
jmp
decb
pushf
xor
mov
in
mov
in
sti
jg
add
fwait
in
jecxz
cmp
mov
dec
fstpt
in
cltd
fcompl
jnp
in
add
loope
add
inc
addb
mov
add
fwait
mov
push
xchg
in
divb
add
ret
cmp
mov
repz
test
mov
jns
cmc
inc
sbb
mov
sbb
fwait
in
rolb
add
fiadds
mov
pop
jbe
in
pop
dec
jnp
jp
testl
fwait
in
mov
add
pop
out
or
push
mov
jg
add
cltd
in
mov
pop
add
aas
sbbb
fwait
in
jge
sbb
fwait
in
mov
xchg
in
add
cmp
pushf
aas
jge
jge
mov
xor
in
divb
add
cld
cmp
mov
in
mov
mov
add
add
cmc
repnz
fwait
in
mov
in
lods
dec
sbb
cmc
sbb
int
mov
mov
cmp
jg
insl
add
lea
xor
adc
xor
or
mov
sub
orb
stc
lea
xor
mov
hlt
xor
or
outsb
pop
cmp
les
das
dec
ret
jle
or
ret
orb
stc
lea
xor
push
lret
cmc
ret
jno
adc
rcrb
out
push
jle
or
ret
orb
stc
lea
xor
xchg
andb
jae
iret
cwtl
in
mov
or
out
jge
insl
add
lea
xor
xchg
jno
xchg
push
rorb
clc
inc
into
scas
xchg
in
rcrb
clc
popf
inc
mov
mov
mov
mov
out
das
aas
ret
jle
or
int3
mov
adc
or
pop
jno
xchg
push
rorl
clc
inc
into
outsl
xchg
in
call
sahf
hlt
fs
in
pop
sbb
in
mov
inc
dec
test
cmpb
mov
popa
dec
in
pop
sbb
in
mov
push
mov
fwait
in
mov
pop
pop
js
add
add
mov
add
adc
out
mov
add
rorl
cmp
mov
in
hlt
pop
arpl
mov
imul
fwait
pushf
cmp
push
add
mov
int3
cmp
mov
bound
mov
jge
xchg
add
fwait
in
xchg
into
xor
pop
add
sbb
out
int
or
sub
mov
cmp
test
in
clc
jmp
mov
leave
movsb
dec
insl
jmp
adc
sbb
fmull
adc
inc
rcl
mov
fwait
popa
cltd
pop
mov
jmp
cli
insl
mov
in
mov
in
mov
in
mov
cmp
pop
sub
add
stos
cmp
mov
in
mov
in
mov
les
mov
in
mov
in
mov
shl
mov
sbb
dec
mov
loop
adc
addr16
icebp
xchg
sub
das
idiv
xor
mov
pop
lea
jle
imul
pop
repz
add
cmpsb
add
sahf
imul
sbb
loope
out
push
mov
xorl
push
pop
adc
jg
iret
lods
dec
push
sub
mov
popa
pop
sub
aam
mov
inc
jns
push
ret
sbb
sub
sarb
mov
pop
mov
out
jnp
lods
push
sub
xchg
push
adc
pop
sbb
adc
pop
popf
pop
stc
xor
mov
jmp
clc
add
pop
movsl
cmpsl
cli
cmp
dec
shlb
xor
jmp
xor
pop
push
repz
adc
xchg
or
xor
bound
xchg
jp
add
and
add
add
add
stos
sbb
inc
stos
sbb
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
stos
sbb
cld
test
add
mov
sbb
fldt
add
shrl
add
stos
sbb
jmp
sbb
arpl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
stos
sbb
add
add
or
add
push
stos
sbb
add
add
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sbb
popa
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
add
sti
in
in
push
jmp
ds
jp
add
inc
dec
cmp
pop
loop
push
jnp
push
std
ret
das
sub
mov
std
cmpsl
js
adc
arpl
jns
lock
jo
mov
push
cmp
xchg
cmp
mov
inc
cmpsl
pop
mov
fnstcw
lods
xor
push
aad
in
out
sub
ud0
xor
mov
out
jb
lods
iret
sbbl
ljmp
inc
adc
xor
sbb
or
cltd
lods
fs
mov
or
and
lret
movsb
pop
frstor
arpl
jp
and
movsb
cld
ret
lret
les
mov
lret
xchg
push
movsl
jl
fdecstp
sub
sbb
xor
mov
arpl
scas
lcall
cmp
stos
inc
inc
dec
push
push
mov
into
push
or
adcb
shrl
in
icebp
fldenv
push
insl
push
in
mov
inc
gs
in
enter
cli
xor
idivl
cld
sub
mov
mov
lahf
outsb
aam
push
jne
div
pop
jle
fucomi
pop
cld
in
jle
lcall
lods
jno
mov
scas
imul
mov
add
push
mov
iret
cmp
stos
loop
call
jmp
jl
std
jecxz
shlb
pop
pop
jl
mov
test
fiaddl
push
xor
mov
imul
push
ret
dec
lcall
test
sbb
movsb
fwait
mov
dec
dec
in
and
mov
dec
fwait
or
aam
mov
xchg
jno
imul
mov
movsl
push
scas
hlt
call
test
xlat
es
pop
popa
push
push
std
dec
rcl
pop
scas
cmp
xchg
es
and
mov
jle
fisttpl
lods
daa
sbb
je
popf
xlat
jg
xor
inc
mov
insl
addb
nop
aas
in
pop
jno
add
outsl
adc
push
sbb
mov
pop
out
jle
and
jbe
dec
int3
lea
outsl
pop
xor
push
fnsave
aam
cmp
mov
and
cmpl
jg
ds
xor
push
pop
push
or
loop
addr16
sets
scas
pop
fs
cmp
or
pushf
int3
inc
out
jmp
cwtl
xchg
test
cs
cwtl
repz
mov
inc
stc
inc
and
scas
add
cltd
mov
mov
mov
jo
add
pmaxub
jnp
iret
hlt
pusha
shll
scas
sbb
mov
and
dec
inc
mov
and
sarl
fdivs
rolb
ffree
das
pop
shlb
lahf
push
inc
int3
jb
push
mov
pop
bound
mov
scas
or
lea
arpl
movsl
adc
sbb
scas
fdivr
fsts
mov
sub
jmp
pop
enter
jo
mov
fists
addb
daa
mov
mov
repnz
dec
jbe
scas
add
cmp
sbb
aaa
pop
or
push
sti
push
jnp
lret
sarl
cmp
inc
dec
aas
cld
mov
or
inc
add
inc
arpl
subl
lcall
ja
xor
ret
add
or
popa
push
in
insb
sbb
neg
jge
xchg
aaa
or
ljmp
and
inc
movsl
ja
mov
push
repnz
dec
jle
hlt
bnd
je
xor
cmp
into
pushf
xor
and
les
pop
jge
jp
jge
xchg
jb
stc
pop
push
push
js
stos
aas
ficomps
or
or
sti
fcoml
jge
pop
lds
mov
test
xor
add
xchg
mov
insl
and
clc
add
nop
lock
into
xchg
push
sub
pop
mov
icebp
pop
jg
out
sbb
pushf
call
add
inc
pop
test
pusha
imul
mov
outsb
lcall
std
int3
add
pop
push
inc
leave
add
lods
cwtl
sub
xor
dec
mov
fldt
or
fwait
xchg
pop
aad
push
mov
clc
fstpl
jo
mov
shrl
adc
sbb
push
adc
adc
jns
push
lret
not
push
xor
push
push
sub
mov
xor
fcoms
xchg
xchg
pop
xchg
pop
adc
int
test
out
or
mov
mov
xlat
bound
and
bnd
mull
fisttpl
clc
popa
mov
mov
xor
lds
adcb
aas
sbb
ja
or
mov
popf
pop
cmp
mov
push
fxch
into
sbb
movsl
ja
xchg
into
popf
roll
push
xor
mov
shrl
insb
ja
stos
push
sarb
lahf
sbb
lds
cmp
pop
and
dec
mov
sub
add
sbb
mov
stc
push
jmp
mov
mov
pop
popf
sub
fdivs
insl
jns
mov
sahf
or
dec
mov
mov
jne
test
add
add
ss
cmp
