push
call
ret
ret
mov
adc
loop
jno
adc
gs
pop
in
cmc
cld
lock
mov
mov
and
in
mov
notb
mov
nop
mov
ss
insb
or
das
xchg
lret
push
je
in
add
mov
pop
mov
sti
pop
ds
push
ficoms
dec
rcl
mov
adc
xorl
int
inc
orl
sbb
decl
cwtl
mov
mov
xor
bound
ss
cs
mov
js
cmp
ja
jecxz
cmp
xchg
lret
popf
insl
mov
stc
mov
sbb
fwait
dec
adc
push
cmp
mov
mov
sbb
cmp
inc
out
addl
jo
push
repz
and
xor
adc
out
int
popa
dec
fwait
in
or
dec
int3
sbbl
repz
shlb
jle
int
sbb
xlat
insb
scas
push
push
jp
or
xchg
aaa
pop
ror
xor
mov
jbe
lret
sub
sub
into
inc
lret
cld
iret
es
cmpsb
adc
cmp
adc
cmc
push
mov
fmull
pop
cli
pop
xchg
stos
xlat
mov
inc
jle
or
push
and
pushf
ja
cmp
inc
push
enter
mov
or
cwtl
xchg
sbb
inc
fidivs
dec
lcall
xor
dec
sub
sub
les
pop
push
or
lods
clc
sbb
dec
rol
jecxz
outsb
push
mov
aas
dec
cmp
or
sub
cmp
aas
int
sbb
test
jbe
lcall
daa
leave
xchg
mov
or
jp
in
cmpb
ret
and
sub
cmp
out
pop
cld
xchg
pop
dec
movsb
loop
out
movl
inc
jmp
notb
notb
cs
cltd
jns
mov
mov
push
mov
add
dec
out
xor
loop
les
adc
scas
sbb
jg
rcrb
fwait
jae
gs
push
inc
push
jmp
sub
nop
int3
cmp
out
mov
ds
popf
sbb
cmp
dec
fstpt
jp
or
in
mov
cmp
clc
cmp
or
add
jno
fstpl
out
adc
hlt
mov
addr16
pop
lret
shlb
icebp
aaa
cmp
repnz
mov
in
push
lock
mov
jle
pop
push
adc
cmp
rclb
dec
jle
jge
outsl
cmp
jmp
imull
ficoms
es
fbld
arpl
xchg
mov
pop
and
in
pop
inc
ljmp
add
xor
dec
imul
daa
xor
jmp
cmpsb
out
xor
fwait
ret
jp
mov
mov
jge
clc
pop
jp
pop
aaa
push
add
xchg
and
in
imul
cwtl
sub
mov
cmc
mov
shlb
insl
mov
rorb
jne
sbb
jmp
mov
ljmp
pop
iret
adc
mov
xchg
fwait
daa
push
pop
lret
sub
pop
aam
leave
cmp
pop
lods
arpl
or
mov
cmp
iret
mov
push
insb
andl
and
aaa
inc
mov
stos
pop
popa
into
cs
cld
mov
mov
cmp
xchg
xchg
cmc
rep
int3
cmp
iret
aas
adc
shrb
in
xchg
jmp
fildll
loopne
cmp
cmp
inc
pushf
inc
push
adc
jmp
push
sbb
mov
mov
fmuls
and
in
cmp
cmpsb
cmp
es
mov
pushf
js
enter
mov
sub
xchg
pop
inc
rcr
enter
push
push
lds
nop
adc
popa
pop
shl
push
sbb
sub
scas
sbb
and
jge
inc
arpl
cmp
push
and
xchg
call
test
daa
mov
imul
lcall
push
mov
mov
sub
adc
xor
dec
add
push
cs
inc
sub
pop
gs
and
negb
out
sti
repz
mov
dec
mov
xlat
cmpsb
mov
aaa
pop
shrd
push
mov
mov
lods
lods
jns
mov
mov
xlat
inc
inc
loopne
gs
xchg
mov
cmpsl
sbb
nop
je
dec
jmp
or
and
push
inc
pop
repz
into
cmp
iret
jae
jg
lods
rorl
mov
add
cmpsl
fdivs
mov
sub
mov
and
dec
jle
nop
test
data16
xchg
xchg
jno
sub
je
push
add
inc
ret
xor
mov
push
mov
repz
outsb
pusha
mov
loopne
stos
insb
adc
or
or
shrb
stos
cmp
js
inc
out
cwtl
aaa
push
ret
call
repnz
jg
jge
lcall
ret
or
pop
and
sbb
fwait
lea
dec
cmp
aas
push
dec
mov
lods
movsb
fstpl
out
out
xor
outsb
or
or
sti
lret
mov
dec
mov
cmp
mov
sti
cmpsl
cmpsb
dec
pop
fcomps
pop
nop
cwtl
cmc
gs
dec
insl
push
ret
mov
aaa
xchg
jmp
xchg
pop
sub
repz
inc
add
lds
and
sbb
gs
in
stos
pop
sbb
pop
stos
cmp
lds
jno
mov
stos
js
jnp
rorl
mov
mov
or
in
sub
fmul
mov
push
rorl
pop
mov
inc
addb
pop
movsb
push
lahf
inc
pop
insl
mov
ret
sbb
aaa
xlat
insb
add
pop
jmp
mov
mov
mov
lds
das
push
push
mov
jecxz
popf
cmp
scas
add
push
fdivrs
adc
ficomps
icebp
dec
jae
out
subb
sub
sbb
pop
push
inc
mov
lret
add
adc
in
lcall
fcmovnu
adc
mov
fdivl
mov
add
sub
or
cltd
in
scas
inc
jne
fs
xchg
push
int3
test
js
pop
jge
push
out
add
fiaddl
rol
lahf
and
inc
cwtl
sbb
add
cmpsl
rolb
mov
cmp
js
adc
jbe
and
pop
jle
dec
loopne
sbb
xchg
or
sbb
mov
in
cld
les
dec
subl
fninit
mov
sbb
cmc
sub
pusha
and
dec
addr16
and
ret
icebp
cmpsl
and
js
push
mov
movsb
sti
push
cld
push
gs
decl
fisubs
imul
xlat
mov
inc
add
lods
jnp
mov
mov
add
rol
in
or
push
jns
andl
sub
sbb
mov
push
inc
imul
sub
mov
test
jle
mov
lock
xchg
mov
ret
jae
jp
test
test
fildl
clc
shrl
inc
sub
fistl
xchg
mov
cmp
ljmp
mov
xchg
xor
xor
je
int
ja
test
sahf
fmul
stos
xchg
jmp
mov
bsf
cmp
fdivrs
ja
pusha
call
mov
sub
jbe
pop
push
pop
aam
xchg
lea
movsb
or
xchg
fscale
out
inc
popa
repz
pop
and
mov
mov
pop
popa
push
test
repnz
les
in
push
inc
test
outsb
outsb
add
lcall
cld
add
popa
fmull
mov
aaa
aas
or
test
pop
and
jl
mov
bound
add
adcl
sbb
jg
pop
pusha
shlb
mov
add
adc
into
mov
or
adc
xchg
je
in
adc
jecxz
cmpsl
outsb
xchg
adc
sbb
or
push
into
test
sub
xor
pop
addl
dec
xor
push
jnp
mov
cmp
ret
jno,pn
cmpsb
or
cltd
aaa
and
mov
rorb
shlb
mov
dec
mov
mov
or
cmpsb
test
hlt
dec
fwait
sbb
xchg
and
jmp
add
out
pop
es
inc
sbb
add
loopne
repz
sub
dec
cmc
fsubr
xor
stos
enter
xchg
cmp
addr16
mov
in
mov
xchg
popa
mov
xor
div
mov
shrl
gs
inc
cmp
mov
jb
pushf
sub
push
dec
jae
pop
dec
pop
sbb
or
mov
mov
and
cltd
loopne
ss
push
repz
xchg
jg
ret
fmul
adc
mov
lahf
ja
shll
push
arpl
mov
stos
mov
sbbl
test
das
sub
sbb
mov
mov
ficoms
out
inc
aaa
adc
xlat
jno
and
mov
movsl
test
arpl
movsl
cltd
sti
xchg
dec
xchg
ds
and
stos
jno,pt
adc
inc
aad
mov
fisubrl
sbb
rol
shll
mov
mov
leave
movsl
cwtl
inc
sbb
sbb
orl
jg
imul
add
xor
sub
cmp
scas
int3
mov
aam
sbb
or
gs
cmp
das
sub
frstor
mov
imul
lds
jecxz
mov
jnp
gs
outsl
daa
pop
jg
in
mov
test
pop
decl
cmpl
mov
movl
aad
jle
pop
push
jbe
popf
mov
pop
stos
or
aam
push
dec
push
mov
sub
or
test
je
mov
int
push
xor
std
mov
inc
mov
data16
daa
mull
push
into
cltd
movsl
loopne
out
sub
jae
aaa
out
pusha
orb
shl
popf
popf
sbb
scas
movsb
pop
and
cmpsb
fs
xor
mov
cmpb
fnstenv
xor
aam
sub
sub
pushf
or
jmp
mov
pusha
xor
rcll
in
js
stc
mov
out
push
lret
mov
ret
das
outsl
dec
lahf
addr16
dec
stos
orb
push
sbb
cmpsb
rol
and
ds
lock
lods
inc
mov
sti
sti
dec
leave
push
repnz
imul
stc
dec
fidivrs
ss
mov
push
addr16
fimull
cmpsb
cltd
icebp
add
jae
in
lret
add
or
dec
xchg
icebp
movsl
imulb
outsb
push
xor
jno
cld
pop
mov
mov
aam
aas
xlat
imul
stc
xchg
cmc
pop
push
shll
dec
outsb
adcb
xchg
dec
xchg
mov
movsl
xchg
insb
xor
sbb
mov
sbb
pushf
fdiv
xchg
std
repz
sbb
cmpsb
pop
mov
push
mov
xchg
push
mov
mov
addl
loop
mov
mov
adc
jbe
fs
movsb
xor
cmpsl
sub
in
sbb
pop
mov
push
hlt
cld
push
test
sub
cmp
sbb
mov
jmp
push
mov
cmp
jle
outsl
jnp
push
ret
dec
mov
adc
mov
mov
lods
pop
aas
add
repnz
add
jecxz
lods
push
sarl
adc
lret
pop
pop
loop
test
xchg
push
sub
mov
inc
in
pandn
les
sbb
bound
dec
pop
jp
fs
ret
or
add
inc
pop
pushf
xor
pop
in
adc
addr16
jno
add
push
push
jl
jnp
loop
popf
movsl
repz
adc
jnp
outsb
sub
pusha
pop
lods
jns
cltd
inc
sub
jmp
mov
jo
stos
xchg
fiaddl
push
int
sub
aad
inc
lods
int3
jne
jmp
fmull
fstl
lock
lahf
xlat
and
lret
or
iret
xchg
jb
and
pushf
pop
scas
sbb
cmp
sar
mov
add
daa
adc
jge
outsb
lods
jo
popa
das
dec
push
insb
sar
jge
imul
mov
pusha
jg
aad
jne
mov
pop
mov
or
adc
stos
insl
rcll
inc
call
pop
xlat
lods
cmp
rorb
xlat
or
or
push
jecxz
call
inc
lds
data16
mov
mov
and
in
sub
push
cmpsl
mov
push
frstor
movsb
xor
lcall
fidivs
sbb
fisttpll
pushf
pop
fdivrl
or
jnp
pop
fldt
pop
fimull
xor
andb
shl
or
imul
daa
xchg
sbb
push
orb
das
add
push
push
mov
mov
dec
aas
cmp
sbb
add
dec
les
fcomps
xor
in
cmp
shll
loop
mov
push
ljmp
jne
in
sarl
cmpsl
rcr
scas
fwait
in
shlb
es
xchg
hlt
sub
in
repnz
pushf
int3
jno
mulb
lods
inc
insl
jecxz
into
push
mov
test
xchg
cli
push
xchg
mov
lds
pop
fstl
and
int
movsb
dec
imul
shrb
dec
cmp
pop
push
aas
mov
inc
sub
imul
aam
dec
imul
or
push
cmpsl
lret
add
lds
jb
fwait
into
js
enter
ffree
mov
push
sbb
add
dec
sub
gs
lods
cmp
popa
daa
and
pop
and
xchg
jno
ss
dec
and
xor
js
test
mov
enter
dec
push
mov
push
cwtl
cwtl
push
cmc
or
lods
rolb
aas
jge
or
jcxz
mov
jae
mov
mov
outsb
mov
xchg
pushf
xchg
pushf
mov
jecxz
and
jne
xrelease
mov
enter
xor
repz
fnsave
add
mov
add
idivb
scas
loopne
mov
pop
jae
adc
jne
fcmovbe
ss
std
ret
push
inc
inc
inc
out
or
sub
jg
shll
xor
jae
xor
pop
fldenv
ljmp
imul
jne
or
std
sbb
and
mov
stos
insb
mov
negl
pushf
out
or
or
shr
lea
lods
ficomps
jns
and
jbe
loope
jecxz
js
subb
cli
popa
shll
jmp
mov
adc
cld
cli
xor
adc
pop
jnp
sbb
mov
addb
notb
jno
add
pop
test
pop
jbe
inc
dec
xchg
stos
imull
sbb
fsts
cmp
sbb
popf
jl
lods
jmp
sahf
inc
mov
add
xchg
push
pop
mov
push
inc
cmp
lods
das
insb
jge
leave
mov
push
push
leave
mov
cmpsl
neg
jnp
sti
les
push
pushf
test
dec
repz
popa
jae
sub
cmp
sbb
cmp
add
in
outsb
stos
imul
sar
fs
bound
adc
idivl
mov
scas
mov
cmpsb
xchg
cmp
push
movsb
pop
imul
in
lods
push
ret
rcr
add
sub
call
stos
or
push
mov
insb
shlb
int3
jo
sub
and
pop
and
or
loope
jne
and
std
insl
hlt
mov
mov
jo
mov
mov
stos
sarb
pusha
ret
xchg
mov
xchg
cmp
xchg
outsl
mov
orl
stos
pop
inc
pop
outsl
dec
jg
stos
aad
jmpw
pop
fistps
sub
or
sti
dec
adc
push
xor
int3
add
js
mov
outsl
insb
pop
mov
jne
aaa
movsl
cmc
les
aaa
mov
cli
enter
mov
add
and
push
mov
jecxz
insb
pop
add
das
test
push
cmp
imul
push
int3
mov
push
leave
xor
movsb
xchg
call
shrl
mov
and
mov
adc
ret
cwtl
sahf
jne
adc
add
push
mov
jle
mulb
and
ja
push
add
mov
imul
ljmp
pop
aad
sub
sbb
fisubl
push
inc
jle
daa
pop
dec
mov
adcb
sub
lock
mov
jle
push
inc
fdivl
movsb
pop
adc
dec
mov
ds
imull
je
pop
icebp
adc
shrb
jae
aam
mov
outsl
inc
aaa
stos
out
lods
ds
adc
jmp
or
mov
outsb
xor
stos
test
test
mov
mov
fists
xor
cwtl
or
add
lods
pop
mov
mov
fucomi
ret
fcoml
nop
lods
cmp
pop
aas
test
mov
xchg
push
sbb
xchg
paddb
into
mov
repnz
lret
pop
mov
ror
cmp
dec
lods
sub
inc
xor
cmpl
lret
cmc
jmp
sbb
dec
fucomi
popa
lret
or
iret
lcall
add
in
inc
dec
xor
les
or
dec
movsl
mov
out
cmc
sub
pop
test
mov
add
xchg
ljmp
jae
lea
sbb
pop
test
pop
faddl
lods
lcall
mov
ljmp
sbb
call
mov
push
scas
ds
push
dec
jne
dec
sahf
es
xor
aad
sarl
mov
fucomi
xchg
shll
xchg
out
dec
pop
daa
hlt
inc
push
stc
xlat
or
dec
sbb
test
mull
jmp
scas
dec
lds
dec
sbb
push
icebp
loope
sbb
cmpsl
pop
lea
int
mov
jae
scas
adc
loopne
pop
enter
arpl
leave
xor
xchg
push
pop
addl
ss
cld
mov
je
lock
dec
fcmovnb
sti
insl
bound
sar
cmpsb
mov
rcrb
or
mov
repnz
in
pop
lods
pop
notl
inc
mov
ljmp
lods
mov
cmp
add
pop
ja
sub
cltd
inc
pop
pop
xchg
mov
outsb
sbb
push
inc
cmc
push
xchg
xchg
mov
aaa
cmc
fcompl
adc
push
mov
shrl
mov
jg
fsts
mov
jae
jbe
pop
mov
fisttps
push
rclb
lds
cmpsl
sub
dec
ret
jle
sub
and
enter
das
push
ror
push
push
dec
out
sbb
mov
xor
insl
jno
call
repz
ret
xchg
scas
cmpsb
shll
mov
xchg
mov
idivb
mov
popl
ljmp
ljmp
cmpsl
push
outsl
jmp
jmp
mov
fnstenv
movsl
mov
or
dec
push
sbb
jbe
cld
mov
pop
or
faddl
dec
xor
or
jb
icebp
out
into
pop
adc
jge
in
aad
addb
dec
jmp
ja
leave
mov
mulb
push
mov
aas
dec
mov
mov
maxps
dec
cmp
inc
popf
jno
mov
std
sarl
adc
fmuls
push
xchg
push
cmp
fadds
pop
push
in
je
imul
add
cmpb
imul
outsb
mov
and
mov
enter
sbb
cmp
and
add
mov
push
xchg
jmp
mov
stc
xor
in
andl
mov
fdivr
das
sub
fisubl
jecxz
lea
sub
stos
sub
xor
xor
mov
pop
mov
shll
cmpsb
movsb
xchg
clc
fsubrl
popf
leave
mov
mov
dec
lcall
jae
xor
inc
fstps
mov
adc
adc
adc
lcall
fs
mov
call
push
pop
je
lods
jp
cld
inc
sti
jbe
test
enter
xorl
xlat
je
ja
and
and
xor
aad
mov
mov
mov
pop
dec
ficomps
mov
add
cmp
dec
pop
or
and
data16
dec
out
jnp
psrld
push
dec
mov
push
cmp
push
aaa
adc
aaa
xchg
pop
mov
mov
push
shlb
cmp
and
xchg
dec
idiv
push
mov
nop
ret
pushf
insl
in
adc
or
outsl
ret
ret
fimull
cmp
stos
test
xchg
movb
les
stos
jnp
cmp
nop
int3
jo
shll
xchg
sbb
imull
fcomps
out
jl
add
cmp
fst
movsl
xlat
cwtl
and
cli
jbe
je
decl
fstl
fstps
jo
not
mov
and
inc
or
xchg
jecxz
or
inc
movsb
aaa
fisttps
test
lcall
psubw
loopne
lcall
mov
pop
add
pusha
in
mov
fists
nop
cmp
aaa
mov
bound
stos
mov
or
jmp
cmp
sbb
adc
cmc
xchg
sar
adc
mov
xchg
es
sar
add
lahf
fidivrl
rcl
mov
push
jb
adc
aam
adc
test
cmp
push
jae
inc
call
icebp
push
or
nopl
push
sub
inc
cli
mov
mov
adc
fbld
inc
adc
fucomip
dec
xor
jge
loop
sub
mov
jge
mov
xchg
pushf
in
call
mov
enter
test
push
mov
or
mov
movsb
icebp
push
mov
inc
adc
loopne
in
scas
dec
dec
arpl
dec
jo
mov
cmp
jbe
jecxz
bound
push
jno
push
xor
bound
mov
stos
push
pop
ja
es
mov
jle
leave
pop
stos
or
jnp
aaa
push
lods
jns
mov
adc
dec
xor
cmp
or
mov
cwtl
insl
sub
xchg
mov
jge
add
loopne
lds
subb
push
and
pop
xchg
sarb
jge
cmp
fidivrl
cli
shrb
insb
outsl
mov
sub
cltd
sub
movsl
pop
call
or
lret
cmp
cwtl
mov
loopne,pn
inc
cld
sahf
adc
scas
ja
mov
addr16
xor
push
mov
aad
scas
hlt
scas
arpl
loop
xchg
stc
xor
sar
push
jae
mov
xchg
fdivrl
mov
rclb
mov
inc
pop
mov
out
push
jbe
insb
bswap
xor
lods
pop
adc
sbb
testb
imul
mov
pop
push
pop
dec
add
add
cmp
mov
xor
fs
dec
cld
ljmp
stos
sbb
or
or
aaa
lcall
dec
cmpsl
and
jl
int
cmc
rcrb
xlat
lret
mov
negb
popf
stos
dec
jecxz
xor
mov
cltd
sbb
lret
and
ss
push
sti
push
mov
pushf
or
push
fnstsw
ds
cli
scas
lret
mov
and
pop
lds
scas
cmp
push
mov
stos
iret
addr16
clc
cld
push
xchg
xchg
sub
gs
rorb
in
sub
jne
sbb
fisttpl
cmp
mov
sarl
xor
dec
popa
rorl
sbb
sub
jg
rcrl
popa
sub
cld
dec
adc
int
stc
push
lea
shrl
outsb
popf
adc
jbe
and
mov
clc
dec
xchg
xchg
mov
addr16
add
jnp
popf
sub
scas
aam
mov
lahf
cmc
pop
mov
ds
lock
cmp
mov
push
push
out
pop
std
es
in
pop
ja
fadds
pushl
or
push
pop
sub
dec
ss
and
and
repz
or
sbb
add
inc
and
sbb
add
inc
mov
enter
xlat
lret
push
lods
mov
dec
lret
aaa
int
scas
pop
pusha
mov
arpl
lds
sbb
dec
mov
and
mov
mov
sbb
jne
sbb
aaa
fsubrp
and
mov
dec
mov
mov
mov
sahf
push
push
loope
sbb
loop
dec
out
les
arpl
xchg
fsubrs
inc
mov
cmp
dec
out
sub
mov
lock
addl
mov
push
cmpsl
add
mov
xchg
inc
cmp
jmp
es
push
mov
sub
sbb
movsb
inc
aam
xchg
pop
mov
test
std
subl
mov
jmp
mov
mov
mov
loope
js
inc
mov
hlt
mov
shl
adc
outsl
add
push
test
cmp
jne
xchg
add
lcall
jle
jmp
xchg
das
stc
and
xor
aad
es
test
scas
xchg
jp
pop
mov
xor
mov
inc
mov
pushf
push
mov
bnd
mov
int
cmp
mov
daa
jae
js
push
push
xchg
mov
ja
mov
outsl
fldt
lret
sbb
or
cmpb
mov
int3
inc
repnz
mov
lret
adc
inc
cmp
xchg
jo
je
scas
cmc
cli
shrl
lcall
or
xor
add
xor
pop
inc
mov
mov
adc
adc
sbb
dec
popf
add
aad
lods
lods
add
int
xor
inc
arpl
out
xchg
stos
xchg
insb
movsl
iret
sub
mov
in
xlat
dec
lods
mov
rcrb
sub
sub
inc
sbb
xor
loop
pop
lret
fmulp
adc
pop
neg
mov
jp
outsb
scas
rol
pop
xchg
in
push
add
lds
jmp
and
fldt
jb
std
mov
jmp
cmpsb
jae
and
dec
inc
pop
gs
pusha
or
push
push
rcr
xchg
fucom
lcall
mov
in
xor
adc
lock
addr16
cmpsb
push
jno
into
jbe
add
push
pop
test
adc
xchg
cli
cmp
mov
std
mov
jns
lock
ficoml
push
cltd
rcrb
adc
mov
fcompl
dec
int3
cwtl
hlt
test
loop
jle
adc
sarl
mov
out
imul
scas
inc
dec
fsubrl
sub
fcomps
add
sar
mov
mov
and
push
push
test
inc
les
add
test
div
mov
aas
and
repz
mov
jnp
loop
dec
push
daa
outsl
lea
dec
jbe
xchg
into
cld
add
test
cli
icebp
fistl
cmpsb
xor
and
shlb
mov
sub
push
jnp
push
pop
dec
adc
xchg
pop
sub
pop
cwtl
cmp
cli
enter
jae
sub
push
out
repz
xor
mov
xchg
cli
js
lds
fildll
prefetch
out
jp
cs
mov
mov
mov
sbb
xchg
pusha
sub
sub
mov
push
negl
ficomps
push
fiadds
and
xchg
shrl
insl
push
mov
cmp
add
mov
das
push
mov
sbb
sub
xor
inc
outsb
mul
add
mov
jae
and
adc
std
test
add
mov
add
sbb
jmp
call
pop
push
xchg
push
int
mov
mov
mov
fwait
sbb
mov
adcb
stos
cmp
mov
divb
outsb
sub
mov
mov
repnz
push
fidivs
pop
cmc
aad
jmp
lret
mov
adc
xchg
xor
mov
mov
push
lcall
loop
or
sbb
lret
gs
xchg
mov
scas
pop
movl
jge
das
push
cmpsb
push
and
test
out
imull
shl
push
ja
jns
subb
xchg
repz
sbb
nop
push
stos
sti
cmp
mov
cmp
lods
pop
add
mov
js
xchg
dec
repz
xchg
or
shrb
xchg
repnz
inc
bound
cltd
pop
lret
loop
subb
movsl
adc
mov
sahf
xchg
sub
adc
pop
xor
cld
enter
dec
pusha
add
fld
shrb
lcall
push
pop
inc
dec
push
aaa
sbbb
inc
fs
adc
pop
push
lods
data16
aaa
pop
pop
cmpsb
add
aaa
les
sbb
push
ja
rcrl
pusha
mov
pop
xor
mov
push
add
mov
hlt
mov
ror
sahf
outsb
out
in
inc
outsl
dec
jb
add
adcl
outsl
xchg
adc
xor
pushf
ljmp
in
cwtl
mov
test
jge
cwtl
nop
dec
mov
fwait
mov
xchg
inc
add
cltd
imul
jecxz
loop
xor
cmp
popf
repnz
pop
gs
mov
shrb
dec
lods
or
sub
mov
mov
pop
lcall
stos
pop
sbb
jo
pusha
cmpl
mov
fdivs
xchg
mov
pop
pmaddwd
jae
sbb
mov
xor
push
mov
mov
bound
xor
mov
sub
sbb
dec
xorb
fcomps
xorl
xchg
loop
mov
pop
xlat
xchg
sub
lock
push
stos
dec
dec
dec
enter
sub
xchg
xchg
mulb
adc
push
cltd
sub
icebp
in
out
add
repnz
loop
add
jg
sahf
sbb
dec
lods
pop
dec
aaa
jmp
data16
or
push
mov
xor
lea
adc
hlt
mov
cmp
adc
mov
push
xor
push
mov
pop
fwait
lahf
sub
mov
test
xchg
nop
in
pusha
sbb
movsb
mov
lcall
sbb
lods
inc
xor
cmp
push
lods
pop
sbb
push
jb
and
mov
ja
and
mov
sub
pusha
and
cmp
je
mov
loopne
push
repz
mov
call
pop
scas
stos
loop
dec
sub
ffree
mov
and
lods
clc
cmp
lea
push
pusha
sub
lea
cwtl
je
fldt
loope
push
push
hlt
fcoms
cld
stos
sbb
lods
out
fdivs
xchg
pop
add
push
push
add
in
mov
jp
push
jmp
mov
push
pop
loopne
clc
lret
xor
outsb
jno
int3
jae
js
inc
add
test
inc
mov
cltd
aas
xchg
mov
iret
jle
shrb
jnp
push
das
adc
inc
enter
packsswb
xor
ret
ror
mov
insl
int3
push
outsl
xor
jg
mov
shrl
cmpsb
pushf
mov
rcl
lret
mov
iret
pushf
xchg
push
imul
out
xor
loopne
jge
or
push
xchg
dec
mov
sbbb
fmul
sub
xchg
iret
cs
iret
je
or
insb
or
sbb
arpl
or
ss
movsl
add
jbe
fimuls
fwait
in
mov
fidivl
cmp
adcb
mov
in
push
mov
sbb
inc
lretw
mov
dec
xchg
xor
stc
dec
je
add
pop
out
sub
lahf
xchg
test
sahf
dec
pop
adc
cwtl
cld
pop
inc
cmp
sbb
jecxz
fwait
jb
bound
jae
sbb
arpl
movntq
out
scas
mov
outsl
scas
flds
mov
add
leave
clc
cld
out
int
stos
push
dec
mov
inc
adc
pop
pop
xor
mov
add
sbb
je
mov
out
sub
movl
sub
inc
push
adcl
fiaddl
repz
cld
leave
xchg
push
jp
stos
dec
enter
arpl
lcall
push
fisttpll
stos
jns
fimull
xorb
arpl
or
fsubrs
loop
std
jp
xchg
push
jnp
pop
loop
jb
in
les
rcll
sub
pop
daa
pop
sahf
mov
jg
cs
in
mov
push
aad
int
or
cmp
lret
xchg
jle
in
fsubrp
addr16
pop
mov
inc
stos
push
fwait
lcall
cmp
push
cli
popa
lods
mov
inc
lods
testb
sub
push
ss
mov
push
push
or
insb
dec
movl
rcrl
cltd
push
adc
insl
dec
mov
mov
adc
push
pop
cmpsb
xor
cmp
es
inc
inc
cmp
mov
ror
mov
lret
inc
push
add
dec
push
jle
int
sbb
push
dec
push
pop
mov
incb
push
push
adc
insb
and
loop
popa
push
fs
sar
sub
push
fs
xorl
fdivrs
add
pop
mov
call
arpl
ret
insl
ss
lcall
gs
in
cmc
cmp
icebp
or
add
pop
test
mov
jle
dec
pop
pop
mov
jecxz
jno
subb
dec
pop
and
xor
add
push
jp
xchg
outsl
js
sbb
fmull
pop
adc
mov
xchg
mov
mov
scas
cmpsl
lods
add
das
clc
arpl
and
sub
insb
xor
test
fnsave
hlt
loopne
cmp
outsb
xchg
jae
add
jl
les
sbb
sbb
js
jns
mov
sub
sbb
inc
lea
sub
adc
push
out
adc
inc
jnp
mov
mov
ficomps
enter
loope
mov
mov
inc
rol
xor
mov
enter
mov
test
xor
and
xor
pop
clc
mov
pushf
mov
mov
stos
mov
jbe
add
lods
les
or
fistpl
lods
stos
sbb
repz
or
and
pop
dec
lock
or
ljmp
popf
xlat
aad
inc
repz
push
in
mov
ret
dec
in
mov
inc
xor
mov
xor
roll
inc
cmp
fldt
and
cmc
xor
push
out
xchg
out
loopne
iret
enter
imul
test
pop
jne
jo
icebp
push
ss
push
std
idivb
in
popf
pop
mov
xor
cmp
loop
push
or
ds
hlt
push
xchg
dec
pop
mov
iret
jle
ljmp
cmp
cltd
sbb
jb
mov
fstpt
enter
inc
mov
adc
pushf
ficompl
cmpsl
xchg
rorb
pop
icebp
xor
jo
outsl
sahf
xchg
dec
ret
or
stos
insb
in
xor
pop
mov
push
cmp
mov
loope
notl
mov
fcoms
in
outsb
xor
dec
lods
retw
cs
in
or
pop
repz
xchg
out
scas
lods
dec
sbb
jecxz
inc
adc
pop
fistps
sub
icebp
or
sbb
adc
mov
xchg
xor
enter
test
test
aam
popf
loope
ljmp
iret
mov
adc
dec
pop
mov
or
adc
ret
lods
ret
push
cmpsl
call
pop
arpl
into
lahf
pop
pop
pusha
fadds
mov
jmp
inc
inc
and
imul
outsl
in
sti
je
jecxz
add
mov
clc
lea
sub
jmp
push
psubsw
xor
sub
add
xchg
mov
test
jge
lea
ret
gs
and
dec
xchg
test
xor
shll
into
adc
sahf
test
mov
subl
inc
cmp
push
add
dec
mov
xor
lret
dec
repz
add
pop
xor
xchg
adc
test
dec
dec
jbe
cmpsl
ret
ljmp
push
movsl
jecxz
add
push
lret
lods
mov
push
popf
xor
ficompl
or
divl
inc
dec
call
mov
dec
loope
out
sarb
push
cmpb
ja
mov
or
adc
dec
push
jle
push
lret
mov
xchg
xchg
out
sub
into
dec
jno
loopne
pop
push
pop
adc
push
stos
mov
add
sbb
lahf
dec
lock
lock
mov
bound
xor
test
mov
cltd
outsl
bound
sub
and
divb
sub
jl
lods
out
xchg
mov
jnp
ret
xlat
fisubs
les
jae
lea
mov
mov
stos
xchg
ret
push
fists
add
ret
sbb
arpl
jecxz
sbbl
jbe
push
scas
add
fwait
push
adcb
into
ss
mov
or
pushf
enter
pushl
add
xor
xor
xor
fwait
sub
cmp
insl
mov
jmp
add
and
mov
rcr
out
insl
push
aam
cmpsb
fists
cmc
sbb
loopne
sbb
cmp
icebp
jo
cmc
add
jne
insl
xor
shl
adc
push
sarl
sbb
pop
inc
lods
stos
or
and
inc
hlt
xchg
test
clc
xlat
es
stos
mov
jo
test
push
addr16
dec
call
jg
lods
dec
dec
xchg
pop
jle
je
lods
pop
and
test
fsubl
mov
aad
out
out
mov
cmp
push
bswap
jle
jbe
jmp
push
adc
das
fistps
movsl
dec
xchg
push
pop
std
or
mov
stc
or
das
push
jbe
addl
fidivrs
xor
lcall
test
mov
push
inc
xchg
push
repnz
xor
push
lds
or
out
jmp
mov
in
movsl
loop
add
movsb
dec
mov
mov
aaa
cmpb
in
adc
lea
jmp
insl
jo
loopne
pop
xchg
add
cwtl
aaa
jo
addl
out
cmp
out
ffreep
cmp
and
jb
ret
imul
and
sub
lret
adc
imul
ret
sub
clc
jb
mov
mov
cmp
and
xchg
fnstcw
dec
scas
test
data16
mov
cmp
das
icebp
stos
add
and
psrld
into
daa
inc
inc
and
mov
movsl
jecxz
push
mov
and
into
jb
addr16
pop
iret
sbb
and
push
stos
sbb
shlb
hlt
or
or
out
dec
bound
adc
mov
mov
flds
popf
outsl
push
lret
es
stos
in
in
add
push
sti
mov
jae
loop
dec
sarl
pop
sub
adcb
sub
lcall
std
jae
xlat
sub
jmp
mov
ret
clc
and
mov
incb
sbb
mov
out
pop
cmc
push
xchg
shll
std
push
enter
or
fistl
mov
push
inc
xchg
xchg
outsb
lods
scas
xchg
inc
into
inc
jl
sbb
out
rorb
insb
movsb
pop
mov
fcompl
adc
std
pop
push
outsb
cmp
mov
je
data16
stos
sbb
subl
add
push
push
dec
in
xchg
dec
shlb
leave
mov
add
xchg
lods
cwtl
xchg
xor
push
fsubs
cmc
rcr
jmp
xorb
idivl
fiadds
add
sub
pop
adc
out
xchg
insl
cmpsl
pop
fists
jo
jg
mov
sbb
cmp
cmp
lret
jbe
pop
repz
push
roll
hlt
lds
pop
mov
shr
stc
or
fs
les
leave
das
bound
into
call
mov
lock
lret
repnz
movsl
into
add
mov
scas
sub
xor
adc
rol
ss
push
and
imul
ja
out
test
cli
scas
mov
add
adcl
mov
lds
add
nop
add
pop
mov
scas
mov
jp
mov
sbb
loop
bound
push
sbb
into
ret
mov
loopne
sbb
sub
rclb
mov
add
inc
negb
shll
jge
ds
aad
roll
lret
sar
mov
je
pusha
aam
mov
or
sub
repnz
xchg
or
sbb
sub
nop
or
stos
push
data16
mov
xchg
ds
pop
fidivs
aaa
icebp
or
push
lcall
xor
mov
xchg
shrb
js
cmpsl
js
push
dec
sbb
mov
mov
add
in
mov
aad
inc
loopne
idiv
int3
xchg
and
jmp
sub
notb
ds
into
lret
sub
fnstenv
icebp
cld
dec
sbb
dec
inc
ljmp
push
aas
test
int3
lea
test
mov
insb
loop
outsb
mov
les
or
jle
push
repz
and
or
mov
fsubrs
inc
outsl
idivl
out
add
sub
mov
sti
leave
aaa
nop
push
xor
mov
sahf
daa
outsb
pop
inc
aam
ja
push
push
ficoml
js
cwtl
mov
inc
fildll
scas
mov
enter
xchg
push
lcall
mov
and
jl
aad
sbb
cmp
xor
push
lea
jo
ja
imul
push
addb
lcall
repnz
xor
inc
les
dec
sbb
out
sbb
shll
xor
inc
inc
xor
and
inc
lods
inc
leave
outsl
std
mov
cmc
xor
stos
inc
stos
stc
jle
inc
icebp
sbb
mov
sbb
int3
mov
movsb
je
cmp
push
cmp
push
repnz
sub
cmp
inc
cli
das
xor
ret
mov
and
shrl
or
add
hlt
xor
shrb
push
dec
add
sahf
in
dec
xchg
popa
jo
test
arpl
aaa
dec
outsl
dec
adc
or
lock
mov
jp
sbb
cmpsb
test
out
cltd
adc
and
pushf
adc
mov
insl
loope
or
imul
jmp
xchg
cmc
shll
ret
lret
cmpl
mov
ret
add
jno
in
and
sub
outsb
scas
iret
je
inc
xlat
push
cs
mov
mov
pop
iret
sarb
hlt
jb
inc
cmp
dec
lock
push
cld
jge
jmp
enter
pop
xorb
mov
aas
mov
inc
sub
test
movsl
and
cmp
notb
hlt
loop
nop
dec
xor
inc
aad
lods
bound
fmulp
jns
mov
cvtps2pd
icebp
test
xchg
lods
ds
adc
mov
xor
fnsave
shrb
das
fldcw
jb
flds
jo
rcrl
and
jle
scas
xlat
xchg
rorl
jo
push
cmp
push
pop
testb
test
dec
xlat
xchg
iret
or
loopne
mov
scas
lret
add
lock
xor
xor
ret
xchg
add
mov
mov
scas
mov
jo
in
enter
shl
imull
jno
in
lret
xlat
sub
ljmp
pop
ret
orl
xchg
dec
shl
testl
fucomi
or
mov
sub
cmp
lods
int3
and
add
pop
repz
ds
sub
fs
jecxz
mov
xchg
stc
jmp
or
ja
cmp
mov
cmpsb
andb
shlb
dec
cmc
loop
fcompl
jne
fldcw
enter
mov
out
hlt
or
orl
lret
pop
movsl
sbb
sbb
push
loope
mov
in
xor
or
xchg
jl
stos
mov
cs
pop
scas
push
or
jbe
pop
xor
aad
pop
test
leave
scas
sub
inc
or
dec
jne
das
pushf
jnp
jl
sub
dec
sbb
sub
btr
xor
daa
jecxz
mov
and
mov
out
sbb
imulb
loopne
fcoml
cmc
push
mov
scas
and
pop
jnp
and
fstpl
push
pushf
ficompl
sub
loope
or
mov
dec
mov
jno
addl
and
pop
ret
dec
jecxz
es
in
sbb
add
ret
pop
mov
fs
sbb
push
xor
pop
lods
hlt
lahf
inc
jg
ss
inc
dec
ret
shll
mov
orl
jno
dec
xchg
icebp
enter
pop
mov
test
mov
or
cltd
push
jo
es
dec
mov
movsl
shlb
imul
jge
arpl
and
fdivrs
je
xchg
mov
in
js
and
ss
je
mov
leave
test
cmpb
fnstcw
fildll
cmc
sub
jns
jle
ficoml
sub
mov
add
mov
or
lods
stos
xlat
cs
mov
mov
std
push
jp
mov
jmp
push
jae
mov
sub
xchg
fs
scas
jb
dec
add
fistpll
xor
inc
cmpsb
leave
int3
push
arpl
rolb
loop
call
in
push
lret
mov
and
imul
push
pop
mov
add
and
dec
das
sub
xor
int
dec
xor
push
pop
sti
mov
fimull
out
stos
out
and
loopne
sahf
push
cmp
jo
cmpsb
or
xchg
cli
clc
mov
popa
lahf
jne
push
lret
cmc
int3
jbe
adc
daa
jnp
add
mov
and
cmp
mov
loopne
adc
xchg
pop
fcmovnbe
jg
fiaddl
jmp
adc
jbe
pusha
jg
call
fdivp
sahf
adc
xchg
sbb
out
ficoml
mov
push
lcall
ret
int3
loopne
xchg
icebp
push
cmc
popa
ljmp
inc
cwtl
adc
jnp
aad
cwtl
or
sbb
mov
lcall
out
div
jmp
or
fisttpl
jo
push
pop
flds
testl
je
mov
enter
pusha
push
outsl
ret
mov
shlb
pop
sub
jg
inc
cltd
sahf
pushf
jmp
iret
add
sahf
jno
les
lods
mov
sbb
pusha
js
mov
xchg
mov
inc
les
pop
add
std
jnp
ret
idivb
cmp
fsub
outsb
cwtl
movsb
push
inc
push
fstpl
test
je
mov
xchg
mov
cs
pop
les
or
xor
movsb
ficomps
sar
add
icebp
dec
adc
fcmovnu
ret
xchg
pushf
dec
sub
out
sub
xchg
out
jg
test
in
jb
imul
push
es
testb
movsl
mov
icebp
inc
inc
out
aad
mov
dec
or
call
push
test
adcb
fmuls
add
and
jbe
push
and
lds
jne
or
cmp
fs
inc
dec
dec
fstl
mov
inc
ret
frstor
xor
xchg
or
call
stos
inc
repz
jae
loop
xor
mov
sbb
lahf
add
mov
add
jb
xchg
loopne
cmpsb
jmp
rcrl
stos
mov
ret
adc
sahf
and
stos
rolb
rorl
subb
xchg
push
inc
fwait
sbb
cmp
mov
popf
cld
dec
movsl
push
inc
test
cmp
xchg
mov
mov
ja
dec
adc
mov
sub
fistps
sub
leave
cli
xchg
btc
stos
loope
subl
inc
adc
imul
arpl
fidivrs
fwait
push
jle
sarl
in
sub
pop
push
lods
lods
cmp
xchg
or
xor
xor
sub
loope
xchg
or
lcall
xor
pop
sub
push
divb
fadds
jmp
xchg
icebp
shlb
xor
jns
dec
orb
xchg
pop
mov
into
orb
in
cmpb
iret
adc
icebp
dec
sub
sbb
add
pop
mov
and
es
mov
add
push
movsb
cmpsb
or
add
mov
inc
and
add
loope
leave
cmpsl
pshufw
add
inc
in
addb
data16
mov
sbb
or
out
jecxz
in
lret
mov
stos
and
xchg
xchg
repnz
das
outsw
dec
shll
add
jb
xchg
push
xchg
insl
sub
mov
and
ficoml
jl
mov
movsl
cmp
mov
imul
sub
gs
add
mov
adc
test
mov
test
and
shr
out
mov
outsl
jge
xchg
dec
sbb
mov
push
sar
int
or
inc
fsubrs
mov
fnsave
ds
sub
cmpsb
addb
into
outsb
push
lods
shll
push
or
mov
aad
push
adc
out
mov
cmp
cmp
push
add
mov
mov
pusha
cmp
mov
inc
aaa
int3
movntq
out
into
popf
roll
and
dec
sarb
xchg
fisubl
pop
leave
cltd
int3
and
dec
mov
and
adc
add
in
push
imul
ret
sti
mov
or
clc
ljmp
jne
popa
loope
sbb
xchg
pop
jge
cmp
push
les
lret
adc
dec
pop
mov
ss
jo
push
jne
push
cmp
inc
jmp
call
in
cli
push
jns
sbb
add
inc
push
iret
mov
repz
cmc
orl
rcrb
das
inc
lock
aas
jno
adc
aas
pop
mov
cmp
pusha
test
inc
cmp
or
test
mov
cmp
jmp
sbb
adc
sub
test
iret
sub
cmp
or
mov
and
xchg
lahf
outsl
push
push
xchg
fwait
fadd
pop
mov
mov
push
jmp
cmp
stos
jb
daa
jmp
sbb
outsb
cmp
mov
xchg
pop
xchg
and
std
ss
mov
test
iret
scas
ss
leave
cmc
pusha
outsl
sahf
add
pop
push
jae
mov
clc
mov
adc
mov
pop
cmp
faddl
xchg
xchg
enter
dec
mov
mov
scas
pop
inc
lods
fstps
jp
aad
xchg
pop
adc
jmp
loopne
pop
and
or
cmpsb
add
jnp
inc
mov
fcoms
cmpsl
sti
pop
clc
add
in
fiadds
jge
jmp
lea
bound
dec
sub
fstps
mov
clc
imul
push
pop
xchg
imul
int3
call
xchg
aaa
jle
mov
insb
imul
push
and
pushf
or
aad
aam
lods
adc
test
lahf
inc
mov
fiaddl
dec
mov
loopne
mov
pop
testl
and
shll
dec
outsb
mul
sub
inc
rcl
cmp
push
add
cmp
pop
roll
xchg
daa
push
je
daa
int
popf
rcll
adc
mov
add
daa
es
in
xchg
adc
dec
dec
out
outsb
mov
xor
add
fucomi
mov
fildl
fimull
xchg
sbb
pop
dec
jmp
ja
lock
inc
js
or
ret
jge
mov
push
aad
adc
int3
adc
in
jle
iret
xor
or
scas
gs
lds
xlat
and
xchg
mov
or
sbb
jl
repz
out
cli
clc
rorb
add
std
subb
jbe
mov
jns
daa
fnstenv
aaa
jecxz
mov
std
xor
pop
pop
out
mov
loopne
call
push
imul
popa
mov
jecxz
xor
pop
mov
mov
adc
pushf
cltd
mov
lea
dec
imul
push
pop
addr16
lock
addl
je
xor
cmp
ds
cmpsb
sbb
xorl
int3
gs
cmpsb
lret
std
enter
mov
inc
lea
ds
adc
jne
icebp
jg
pop
or
mov
lods
sub
test
stc
add
movsb
and
sbb
push
aam
mov
fcoms
scas
sub
mov
rolb
push
movl
mov
mov
cltd
lea
pop
dec
xchg
inc
dec
out
in
mov
inc
enter
ret
call
xor
and
push
sbb
inc
dec
and
jb
notb
xchg
sahf
push
into
fisttpll
sti
fstl
xor
add
add
pop
out
jns
cmpsl
test
aad
cmp
dec
cmp
sbb
jmp
sub
out
or
dec
hlt
xor
aam
push
sub
das
push
cltd
clc
fs
pop
mov
and
inc
mov
lahf
repz
lret
xor
in
jle
data16
rolb
jle
stos
test
cmp
inc
sbb
pop
xchg
xlat
sbb
leave
jo
add
adc
sbb
es
loop
pop
push
xor
mov
es
xchg
aas
fildll
mov
add
cmpsb
fdivl
push
out
push
movsb
jge
cmp
data16
or
jae
scas
mov
xor
out
adc
pop
push
adc
jmp
dec
jl
inc
push
test
mov
xchg
cltd
mov
leave
sbb
xchg
push
mov
and
fdivrl
int3
loope
cli
cli
in
add
mov
stc
jmp
lahf
aam
out
ss
jecxz
jl
into
bound
sub
xor
mov
call
lods
mov
jno
xchg
lcall
mov
test
lods
xor
enter
test
lret
mov
xchg
popf
addr16
xor
faddl
mov
addr16
pop
mov
push
inc
mov
sub
test
cmc
pop
mov
push
or
push
icebp
insl
aad
into
xchg
icebp
lret
sbb
call
mov
lcall
insl
pushf
imulb
mov
dec
sbb
and
mov
or
xchg
mov
shrb
and
inc
pop
cmc
mov
cs
push
sbb
sbb
mov
push
add
das
xlat
push
sahf
mov
jge
sbb
lcall
je
jp
fnstcw
sbb
repz
push
pop
lret
jno
mov
sbb
and
mov
xchg
cmc
outsb
lods
lahf
inc
adc
nop
and
enter
mov
fmull
jle
cltd
out
xchg
outsl
scas
dec
jae
xchg
inc
rcll
int3
xchg
in
int
and
rorl
xor
outsl
xlat
mov
lds
cli
and
adcl
push
aam
cld
dec
sbb
movsb
and
aam
ret
jb
pop
push
fsubs
push
jns
push
xor
or
mov
insb
dec
aam
fs
mov
nop
fimuls
add
rorb
sbb
fidivrs
cmp
enter
clc
add
pop
xlat
inc
int3
loop
jle
xor
cmpsl
mov
push
shr
dec
sbb
jne
ja
fistpl
mov
stos
imul
add
or
xchg
cli
cmc
cwtl
test
xlat
daa
mov
adc
jle
mov
cmp
push
pcmpgtd
scas
inc
gs
cwtl
les
add
xor
xchg
insl
and
hlt
fidivs
bound
xchg
xchg
sbb
sub
aam
in
test
jo
ret
sub
call
mov
imul
xchg
int3
aas
lea
xor
mov
adc
out
int
mov
cmp
cltd
cmp
mov
cmp
pop
lahf
xor
inc
xlat
sahf
scas
arpl
and
leave
pop
xor
mov
mov
in
ret
fwait
mov
insl
lds
xchg
dec
xchg
pop
jge
sar
mov
xchg
mov
mulb
ss
jmp
cmc
push
orl
xor
add
int
out
dec
mov
insl
mov
mov
test
out
pop
push
in
rcrl
pop
dec
jno
into
xchg
dec
lret
stos
dec
inc
cltd
jns
push
adc
iret
stos
enter
xchg
jge
loopne
stos
inc
xlat
sub
add
adc
push
cmpsb
movsl
mov
loopne
jecxz
mov
inc
inc
xorb
pop
or
hlt
lret
jg
push
push
xor
push
or
xchg
lds
pop
fistps
mov
and
and
inc
scas
loopne
aas
jnp
pop
mov
push
sti
xchg
push
xor
insl
add
es
or
mov
mov
dec
adc
rorl
aam
lods
xchg
xchg
mov
xchg
jo
and
punpcklwd
or
pop
cmpsl
jno
inc
push
cmp
out
jne
in
jg
lret
push
sahf
insl
cmp
pop
fs
xor
push
pop
les
shlb
xchg
mov
lahf
ret
jno
negb
cmp
sahf
jle
jl
and
or
inc
add
xchg
jmp
jmp
jge
pop
adc
fmul
or
cmpsb
inc
jo
or
and
insb
in
mov
pop
dec
adc
or
jne
mov
das
xchg
nop
shlb
jnp
pusha
inc
push
cld
push
imul
sbb
mov
jecxz
out
mull
adc
or
lods
xchg
cmp
aaa
xor
insb
mov
movzbl
jg
inc
add
adc
cmp
pushf
mov
pop
pop
sbb
inc
popf
shrl
stc
xchg
shlb
mov
cmp
cwtl
aad
cmp
dec
dec
xchg
out
fisubl
mov
add
inc
xor
fisubrl
mov
ja
jb
mov
dec
push
pop
test
adc
fisubrs
hlt
adc
dec
jae
cld
cltd
movsb
rcll
ss
test
in
add
pushf
add
pop
xor
fldl
lcall
xor
sbb
cmc
mov
cmpb
fistpll
sarl
scas
sbb
fcmovnbe
sub
inc
add
jnp
sub
callw
sub
push
jp
or
cwtl
dec
movsl
test
xor
fdivr
clc
mov
int
xchg
ret
loopne
mov
sbb
sarl
xorl
subb
hlt
cwtl
loope
int
test
inc
lret
stos
add
dec
mov
jecxz
or
inc
sub
in
movb
push
cmpb
adc
lock
dec
subb
mov
lds
jns
jp
nop
mov
cmp
mov
mulb
xor
push
adc
lods
xchg
fwait
ret
sti
aad
fsubs
std
cmp
sbb
pop
xchg
fiaddl
iret
shl
enter
pop
jb
cmp
stc
sar
loop
cmp
xor
pop
popa
push
jp
lret
push
or
dec
scas
mull
jbe
sbb
das
in
das
add
sub
jle
sbb
int
outsb
shr
xchg
cltd
lods
movsl
mov
int3
or
jo
adc
adc
pop
mov
adc
js
cwtl
scas
jge
xchg
rcrl
pop
xor
and
adc
loopne
sbb
or
aad
shll
pop
mov
loop
bound
fsubl
adc
add
xor
sub
sub
mov
inc
inc
jbe
mov
bound
test
js
lods
cmp
lods
fildll
adc
lcall
je
add
jae
out
mov
and
mov
in
cld
sbbb
push
sbb
push
jb
pusha
pop
stos
inc
adc
xchg
aad
movsl
push
xchg
add
insl
mov
fbstp
mov
fisubrl
pop
adc
shlb
xchg
mov
mov
popf
fldenv
mov
insb
cmp
fdivr
or
jmp
cwtl
jge
and
int3
sbb
xchg
loopne
mov
outsb
xor
mov
repz
sahf
lock
xchg
inc
mov
sub
inc
test
xchg
lds
mov
pop
data16
xor
mov
imul
pop
cmp
add
mov
rolb
pop
inc
daa
sbb
cmp
mov
and
mov
lahf
aaa
popa
xchg
aam
fwait
add
imul
mov
inc
xchg
jge
out
push
dec
sub
jecxz
fnsave
in
ss
mov
jg
mov
cmc
pusha
mov
sbb
aad
out
fninit
sub
dec
xchg
iret
stos
insl
and
ror
inc
aam
ljmp
cmp
fisubrs
xor
or
cwtl
inc
out
lret
orl
push
int
lds
cli
outsb
xor
add
je
psllq
cmp
mov
jecxz
cmpsb
push
xorb
jl
movsl
mov
mov
rcl
sub
stc
mov
fdivrs
je
sbb
inc
pop
or
fldt
fcoms
aaa
xor
fidivs
sub
adc
jne
aas
xor
xchg
dec
unpckhps
fistpl
jne
jno
aaa
mov
lds
cmpsl
sbb
aad
mov
mov
dec
cmp
sbb
test
shlb
sbb
and
psadbw
xchg
mov
inc
popa
shll
je
or
push
inc
imul
and
jae
xor
dec
mov
pop
cltd
or
stos
dec
outsw
pop
lods
aaa
loop
mov
sbb
out
inc
test
mov
ret
call
xlat
or
mov
movsl
inc
lahf
movsl
jecxz
sbb
mov
in
andl
mov
stos
subl
clc
mov
movsl
ret
jmp
out
push
insb
popf
aad
mov
fadds
push
scas
jns
xchg
pop
mov
ljmp
loope
popf
aas
push
push
sub
sub
insl
rcl
adc
inc
cltd
adc
loope
jb
mov
jg
jle
pop
out
xor
mov
sub
int3
in
pop
loopne
fnstcw
xchg
sarl
lock
xchg
adc
inc
cmp
popf
sahf
inc
stc
in
repz
mov
fsubs
push
mov
cmp
aas
push
sbb
dec
mov
jno
adc
sub
sub
jo
lea
jbe
jp
aam
mov
and
pop
cs
mov
jne
or
sbb
outsw
mov
jp
dec
xorl
pop
andl
in
out
dec
adc
fnsave
mov
aam
ret
push
mov
fisubrs
lcall
hlt
xchg
jno
addr16
pop
lret
mov
lcall
cli
inc
adc
pop
loopne
mov
loope
fcoml
sbbb
cmpsb
adc
sub
fstpl
sahf
shlb
shl
dec
jp
cmp
cmpsl
shl
lds
lret
pop
dec
or
loop
mov
dec
jo
and
push
xlat
arpl
mov
pusha
ds
pop
scas
inc
jae
popa
jmp
lods
dec
lret
popa
adc
jb
xchg
jge
mov
inc
sbb
es
and
dec
aad
scas
stc
in
xchg
pop
in
push
cmp
lret
xchg
xor
cmp
in
je
les
xchg
dec
data16
fmull
aam
iret
push
dec
jg
aaa
sbb
fwait
into
add
daa
daa
fsubrs
jg
add
sbb
in
adc
popf
and
cmc
mov
cmc
or
popa
iret
pop
cmpsl
cpuid
jmp
mov
mov
nop
es
lock
shr
or
fcoml
xchg
push
jns
jge
push
test
rolb
pop
popa
add
and
ss
dec
sbb
jns
mov
mov
lcall
pop
fsubr
mov
mov
popf
pop
aam
push
adc
jle
stc
cmc
jne
mov
cmpsb
sub
inc
in
pop
adc
sbb
sbb
mov
dec
inc
int
sbbb
call
mov
add
push
lret
jno
shrw
xchg
pop
xchg
insb
cmp
and
pop
mov
cmp
or
out
push
shr
repz
sar
mov
add
push
xchg
scas
cwtl
or
xchg
pop
pop
cltd
jo
push
mov
pop
xchg
imul
gs
mov
loop
ret
ja
mov
je
mov
dec
addr16
icebp
dec
or
repz
dec
ja
xor
or
mov
stos
es
push
xchg
flds
fidivs
jmp
jp
movsl
push
outsb
pop
dec
in
sbb
ret
movsb
jae
xor
test
icebp
inc
dec
xor
jb
pop
and
xacquire
sub
mov
mov
and
fisttpl
sti
outsb
pop
mov
cli
cli
fwait
jbe
mov
inc
sub
push
lock
into
xor
sbb
filds
adc
lods
pop
pop
jmp
pop
fnsave
pop
andb
or
hlt
rorb
bound
mov
xor
xor
aaa
xchg
je
adc
cld
fadd
in
out
lds
decl
mov
add
es
call
mov
out
xor
scas
rclb
iret
shll
add
pusha
out
aas
in
mov
hlt
subl
xor
in
fisttpl
sbb
int3
out
adc
fsubr
jbe
sub
xchg
nop
int3
aam
mov
add
repz
pop
inc
mov
push
mov
arpl
adc
sbb
and
mov
je
in
mov
aaa
stc
bound
xchg
fiadds
sub
stos
lret
leave
pop
inc
xor
fdivs
loop
roll
mov
out
push
jne
and
fidivrs
mov
sti
enter
mov
repnz
xchg
rorb
xor
inc
add
pop
push
repnz
push
xchg
cmpsb
pop
cmp
add
pop
jnp
inc
lahf
pop
jecxz
hlt
add
scas
jecxz
mov
mov
cmp
pop
jge
insb
jb
push
xchg
test
mov
inc
mov
lods
xor
lahf
lea
lds
imul
xor
ja
sub
sbb
lret
add
pop
pusha
mov
outsb
fsubrs
aas
pop
fnsave
add
add
xchg
clc
aas
push
pop
sub
cld
pop
xchg
lcall
movsl
hlt
pushf
jno
xor
lcall
hlt
pop
add
les
stc
mov
scas
call
mov
inc
cmpsb
pop
inc
sti
into
adc
push
stos
adc
cmc
sub
popf
xchg
ret
addr16
adc
jge
iret
call
push
adcb
mov
pop
xchg
aam
movsl
push
xchg
mov
inc
scas
ss
loop
fdivl
sarb
xchg
push
ja
leave
mov
xchg
lock
movl
aad
jnp
xchg
jbe
inc
mov
jb
inc
insb
mov
lods
add
cmc
data16
popa
push
push
push
cmp
cwtl
pop
fisttpl
cmp
dec
sbb
out
add
inc
outsl
cmp
mov
cwtl
subb
inc
movsb
ds
scas
mov
xchg
inc
cld
or
int3
scas
or
push
jno
push
lock
scas
cli
mov
sub
dec
adc
dec
xor
mov
notb
sub
pop
cld
dec
repnz
cmp
pop
pop
or
pusha
pop
imul
aad
pop
repnz
test
cmp
fildl
int
aam
or
addr16
mov
xor
cmp
xchg
and
dec
sub
iret
aaa
xchg
scas
mov
lcall
sub
imul
add
sbb
lods
movb
mov
daa
shr
and
jp
xadd
mov
gs
pop
and
xchg
xchg
mov
fs
sub
icebp
bound
cwtl
mov
gs
xchg
add
out
add
aas
ficompl
and
jb
lret
dec
and
rcrl
test
mov
and
gs
dec
dec
cmp
les
and
rolb
inc
insl
push
pushf
jae
push
sbb
cmpsl
push
dec
xor
jns
xor
mov
or
lret
adc
iret
mov
xchg
ret
pop
jnp
pop
jmp
adc
insb
int3
cmp
or
lret
pushf
or
xchg
ds
cmp
test
lret
test
adc
cmp
jbe
insb
fs
inc
xor
cli
test
dec
pop
nop
push
sbb
stos
push
mov
cwtl
jmp
mov
popf
lods
jns
or
scas
inc
xor
movsb
dec
pusha
cwtl
adc
sub
jge
outsl
jae
les
js
scas
ss
mov
sub
std
int
loopne
push
mov
xor
pusha
rolb
add
aad
pcmpeqb
and
mov
cltd
mov
sub
jb
loopne
mov
dec
pop
leave
xchg
xchg
xor
mov
cltd
icebp
adc
fisubrs
dec
xor
sbb
sti
or
aad
jno
jae
adc
and
and
mov
lahf
jg
shrw
xor
pop
push
lock
adc
ret
cwtl
cmc
mov
mov
inc
mov
fnstenv
and
mov
adc
loope
lock
xor
in
and
mov
loope
mov
call
pop
bound
cmp
call
push
lods
aaa
mov
and
jnp
inc
imul
inc
cmp
aam
jge
mov
in
sahf
stos
scas
cmpsb
cmp
add
lods
out
loope
loope
and
pop
int3
sbb
mov
fnstcw
fidivs
in
jg
jl
sbb
rcrl
clc
in
cmc
mov
imul
mov
sbb
pop
jl
shrl
push
das
scas
mov
sbb
out
sbb
rcr
pusha
js
addr16
mov
lahf
shlb
xor
jle
daa
mov
and
cmp
pop
cmpb
xchg
scas
cmp
stos
dec
fcmove
mov
or
fmul
or
faddl
scas
xchg
adc
lea
add
jecxz
and
jnp
insb
adc
or
int
fcmovb
ja
xchg
add
mov
testb
inc
adc
loop
jecxz
sub
xor
mov
hlt
pop
dec
push
pop
jns
int
add
adc
mov
pop
stos
xor
sbb
inc
dec
jmp
pop
jns
int
adc
shlb
xor
nop
int
adc
in
inc
mov
lods
or
push
sahf
mov
loope
mov
sub
jg
mov
dec
jle
dec
imul
mov
mov
add
dec
and
call
push
adc
cmc
inc
add
mov
jmp
filds
mov
push
jae
popf
sub
mov
xor
test
adc
cmp
mov
test
mov
sbb
or
dec
js
adc
les
push
test
cs
push
add
lcall
cmp
lock
jae
mov
fcom
pop
sbb
cltd
loope
imul
repnz
dec
and
ret
and
in
pusha
jb
xor
cmpsb
and
jl
ljmp
lret
cmp
lock
or
fidivs
and
outsl
gs
scas
or
cmp
imul
cld
xchg
adc
lds
inc
xchg
fs
xor
adc
push
jbe
xchg
pop
enter
lret
imul
inc
jl
vcvttss2si
mov
inc
addb
xchg
pop
mov
mov
jle
shlb
push
fcmovb
insl
mov
xlat
sbb
mov
inc
dec
test
pushf
xchg
push
repnz
rolb
xchg
xchg
cmp
sahf
ret
jnp
dec
test
push
fstl
ret
pop
mov
xor
fisubrs
and
xor
outsb
sbb
add
mov
pop
xchg
adc
sub
add
lock
mov
icebp
jmp
sub
repnz
clc
or
js
fld
xor
pop
cwtl
fsubl
xchg
mov
sahf
inc
pop
loope
sub
addr16
inc
dec
stc
lret
fs
sbb
sub
nop
xchg
pop
call
sbb
or
jae
jmp
mov
cli
sahf
sub
or
out
add
movsl
jp
cwtl
or
gs
imull
xor
test
add
loopne
cld
jle
mov
shlb
int
push
cmpsb
jmp
rclb
repnz
add
imulb
inc
lock
add
mov
lret
nop
hlt
in
inc
jns
jno
pop
loope
xchg
dec
sbb
lcall
jp
cltd
arpl
sub
ja
mov
in
ljmp
data16
mov
or
pop
lret
dec
mov
dec
xor
dec
mov
jecxz
pop
call
cmp
pop
adcl
pop
mov
test
cmp
icebp
call
lods
addb
jae
ret
xchg
call
inc
data16
jo
cmp
fisubs
or
cmp
mov
sub
testl
adc
push
fldcw
push
in
add
ss
call
ds
movsb
fisubrs
add
cwtl
scas
add
fidivrl
push
lods
aam
jle
rcrb
xor
dec
push
gs
sub
jmp
push
fstpt
push
sub
mov
adc
sub
repnz
aam
push
inc
loope
test
outsb
or
pop
push
cmc
inc
addr16
mov
add
insb
aas
in
fnsave
aaa
sahf
lods
xlat
dec
xor
test
push
stos
imul
dec
test
repnz
inc
into
inc
imul
inc
test
sti
out
ds
fbld
lahf
stos
idivl
nop
cmp
sbb
add
xchg
adc
imul
das
and
jl
jecxz
in
sub
push
inc
xchg
mov
or
orl
cs
jl
aam
pop
loop
dec
pop
xor
jno
add
es
sub
and
imul
sar
xchg
adc
push
mov
inc
out
movsb
adc
insb
mov
je
add
sub
jbe
nop
shrb
repnz
call
mov
add
jnp
mov
pop
je
xchg
cmp
xchg
mov
fidivrl
cli
push
jl
jne
sub
mov
mov
in
mov
jecxz
or
and
push
dec
movsb
rolb
in
dec
fwait
xor
rcl
lods
lret
scas
sbb
dec
pusha
xchg
add
fcoms
mov
es
jp
add
aad
or
pop
fwait
add
add
sbb
mov
hlt
fwait
jae
xchg
call
ja
test
repz
jo
inc
hlt
and
mov
xorb
mov
cmp
sub
mov
sbb
inc
pop
out
xchg
xchg
or
xor
or
clc
sbb
inc
loope
scas
xchg
jne
sbb
in
add
inc
jnp
mov
fdiv
adc
dec
aad
pop
bound
pop
push
loop
sbb
inc
popa
roll
add
outsl
sbb
ficompl
setge
pop
movsl
aas
sarb
push
and
adc
fisubrl
rcr
push
ss
popa
popf
lods
fnsave
ret
adc
add
aam
pop
pop
dec
sbb
pop
add
loop
out
mov
mov
sti
idivl
mov
lret
cmp
divb
sbb
fwait
mov
icebp
pop
int
insl
dec
push
push
pop
mov
in
xchg
pop
fwait
xchg
adc
jnp
cmp
cld
xchg
pop
rolb
stos
lcall
push
jne
pushf
jno
bound
mov
addr16
popf
dec
cltd
push
stc
and
xor
sbb
dec
in
jp
enter
mov
rorb
ja
xor
cmpsl
and
push
dec
fs
inc
or
dec
aad
movsl
adc
adc
lahf
or
pop
mov
stos
jbe
imul
or
xor
and
inc
mov
in
sbb
and
mov
lcall
inc
sar
add
shl
jae
rolb
jp
icebp
dec
shll
neg
xor
repnz
movsl
jmp
push
lret
mull
push
jb
add
adc
cmpb
dec
add
mov
insl
fiaddl
dec
movsb
inc
xor
adc
lock
xor
in
sbb
stos
outsb
ret
xchg
mov
aas
lock
das
stc
cmpsb
iret
mov
fwait
test
adc
mov
test
std
loopne
loopne
or
popf
mov
out
sbb
adc
or
jge
push
lret
cmp
enter
pop
pop
cwtl
xchg
sbbb
dec
pop
ljmp
pusha
int3
and
bnd
mov
inc
movl
movsb
sbb
popa
xchg
nop
adc
jmp
sarl
sarl
sub
fxch
ljmp
stos
and
cli
pop
int3
add
pop
in
mov
mov
test
insl
push
mov
insb
mov
mov
rolb
ss
push
adc
insl
push
imul
fcmovnb
inc
push
push
das
sub
adc
call
in
shrl
cli
fldt
in
mov
inc
fwait
mov
mov
shll
ja
sbb
popf
xchg
ja
ljmp
mov
or
push
gs
pop
or
inc
cli
aas
insb
xchg
scas
dec
cmp
fldcw
jnp
jo
lret
repz
jg
sub
push
nop
ret
sub
leave
dec
iret
outsb
pusha
sub
insb
aam
loop
mov
push
cmp
inc
push
dec
push
enter
mov
xchg
lcall
cmp
cmc
insl
lds
clc
fwait
out
out
repz
faddl
cmp
iret
inc
aas
movsb
sahf
test
leave
nop
andb
test
test
aaa
vcvttpd2dqy
shl
push
test
cmp
cmc
cwtl
and
push
out
and
push
sbb
adc
dec
cs
in
cmp
insl
movsl
sarb
imul
inc
cmpsl
lods
jmp
out
stos
inc
in
es
cmpsl
lock
orb
pop
das
mov
insl
mov
pop
dec
mov
ds
xor
fmull
push
xchg
lock
xchg
mov
jp
test
push
cmc
arpl
shll
mov
push
mov
je
mov
js
dec
orl
testb
xchg
xchg
lods
rcrl
clc
jp
in
fstl
inc
leave
xchg
fmull
mov
mov
fiaddl
cmp
lea
pop
xor
pop
dec
shll
push
cmp
mov
xor
and
push
mov
mov
pop
popa
flds
out
and
rcl
sub
and
inc
jb
push
push
daa
int3
insb
push
jge
lea
pop
es
fwait
test
jbe
jne
xor
inc
orb
jbe
push
mov
mov
loop
rcr
cltd
addr16
xchg
flds
scas
pop
xor
test
in
push
sbb
xor
push
arpl
stos
mov
fistps
lcall
out
pop
or
fcmovb
imul
mov
inc
pop
test
jno
stos
cltd
xor
sub
dec
xlat
ss
mov
or
fwait
dec
ret
pop
ds
outsb
push
xchg
mulb
jl
jbe
bound
pop
cmpsb
or
xlat
sub
add
or
subb
adc
push
mov
push
fwait
lahf
into
std
test
sub
pop
add
cltd
pop
add
ret
and
sbb
leave
cmp
in
and
mov
fs
lcall
cmpb
not
cmpsl
ljmp
ljmp
dec
rclb
testl
pop
jbe
in
sarb
xchg
movsl
mov
enter
and
nop
mov
lods
in
andl
daa
push
mov
dec
inc
dec
xchg
or
ret
xchg
cmp
jae
movsb
lea
xchg
or
xlat
mov
cmp
lea
cmp
rol
fsubl
out
lahf
push
test
dec
jge
inc
loopne
and
mov
dec
mov
add
mov
jecxz
inc
add
notb
pop
xor
dec
sub
ror
mov
fmulp
addb
push
das
dec
or
xchg
scas
lret
insl
or
outsb
data16
xor
es
cltd
or
std
shlb
outsb
inc
test
cmpsl
sbb
xlat
fstpt
aam
mov
in
xor
adc
dec
or
pop
mov
mov
ja
lods
add
cmp
in
mov
jns
aam
cmc
adc
jecxz
addr16
jae
std
inc
dec
mov
sbb
push
cmp
mov
stos
cmc
xchg
punpcklbw
je
enter
add
and
insl
adc
cmp
insb
dec
jns
movsl
enter
or
and
js
xor
ret
and
repnz
jmp
and
aas
clc
inc
gs
in
int3
into
in
jbe
arpl
les
or
mov
mov
out
mov
sbbl
pop
inc
mov
mov
popf
shll
pop
fisubs
std
fwait
mov
jecxz
shll
ret
mov
mov
push
add
out
ss
adc
push
inc
out
cltd
adcb
inc
cmpsl
gs
sbb
sbb
fcmovu
mov
dec
fidivrs
and
cmpsb
mov
daa
movl
dec
loopne
push
sbb
and
fwait
mov
push
cmpxchg
push
ljmp
test
adcl
dec
in
pop
enter
cltd
std
dec
addr16
jae
cmp
xorb
xor
push
imulb
stc
sub
pop
fisttps
aaa
pusha
add
inc
xchg
test
loop
pop
clc
xor
cmp
ficomps
dec
lahf
sahf
xchg
add
jmp
rcl
mov
add
jge
xchg
popf
pop
sbb
sbb
call
aad
push
in
or
sti
loope
fs
adc
pop
push
cs
pusha
mov
jb
movb
movsl
jns
in
mov
add
repz
cltd
pop
scas
sub
pop
imul
cmp
xlat
stos
sbb
and
add
shrl
imul
scas
jge
out
push
xor
add
cmp
test
clc
inc
packssdw
dec
arpl
addb
leave
jmp
jae
aad
mov
test
push
inc
roll
stc
in
or
jbe
shll
cmp
dec
jecxz
jl
adc
stos
mov
inc
out
jne
jnp
mov
leave
test
or
mov
xchg
dec
ja
sub
insl
xor
lahf
dec
call
out
xorb
call
pop
aad
fs
mov
pop
xchg
and
adc
movsb
push
lea
loope
or
movsw
call
rol
push
clc
daa
sub
mov
in
push
out
test
dec
shlb
xorb
insl
test
lahf
push
mov
mov
mov
mov
stos
out
mov
dec
mov
jne
sbbb
out
idivb
bound
lcall
jnp
inc
inc
mov
ljmp
xorl
sbb
ds
jo
jmp
cld
xor
mov
xor
out
pop
jmp
lods
mov
test
clc
mov
mov
pop
xchg
out
mov
add
imul
sbb
xlat
in
mov
sub
scas
pop
jne
icebp
pop
xchg
inc
icebp
fs
lods
and
inc
cmpsb
ret
roll
xorl
xor
fmull
into
test
fdiv
test
repz
pop
pshufw
sub
in
mov
ljmp
lahf
mov
insb
ja
xor
mov
hlt
pop
iret
and
stos
stos
pop
lods
sub
or
es
mov
add
jp
pop
ds
adc
push
mov
sbb
test
pop
cmc
shr
mov
ljmp
ja
cmp
loop
cmp
in
aas
push
sahf
idivb
and
negb
inc
movsl
and
roll
cmp
cmp
xor
rolb
ds
pop
lea
cmp
pop
pop
icebp
sub
mov
jge
jge
enter
lahf
popf
inc
js
add
or
sbb
xlat
daa
push
inc
scas
sub
xor
xchg
insl
je
je
dec
scas
adcl
push
mov
xlat
sbb
adc
add
popf
test
mulb
push
or
lahf
lcall
xor
in
sub
mov
fcmovne
shr
pop
push
add
lock
fs
mov
dec
fcomps
jbe
and
jnp
jno
and
loope
ret
lcall
std
test
inc
ja
loopne
xlat
in
xor
jg
jo
dec
inc
movsl
dec
xchg
xor
xlat
pop
sub
jmp
les
outsl
out
xchg
frstor
cltd
mov
mov
dec
addl
xchg
sub
fdivl
mov
mov
lea
mov
fidivrl
mov
mov
xchg
ror
and
lahf
cli
inc
out
xchg
fucom
pop
sbb
stc
sub
ja
sti
and
push
xor
push
addb
pop
dec
outsb
add
out
adc
pop
daa
andb
cwtl
cld
out
jl
sub
gs
aaa
fcompl
int3
jo
push
adc
or
or
sbb
jp
sbb
mov
and
pop
sub
mov
fmuls
aam
inc
lea
pushw
clc
outsb
hlt
sub
imul
xor
aad
and
xchg
fscale
jge
mov
rcll
push
add
data16
pusha
cld
sti
stc
xchg
fwait
inc
aas
out
jnp
xor
movq
fcmovnb
cmc
inc
cmp
es
out
insl
adc
popa
sahf
out
lock
and
cs
cmp
testb
shll
fsubr
out
push
inc
cltd
cmpsl
fs
mov
mov
test
push
mov
ret
mov
fstl
out
pop
es
and
popf
push
das
cld
sarb
addr16
enter
lea
daa
je
divb
push
sub
inc
cmp
cwtl
scas
leave
mov
sahf
and
push
mov
mov
test
psadbw
add
insl
fists
rorl
rcrb
mov
sub
std
mov
lods
ficoml
mov
testb
jae
loop
gs
pop
mov
or
adc
cmc
and
add
iret
es
xor
inc
add
ds
xor
scas
dec
pop
jg
sub
rorl
dec
lcall
jo
inc
mov
mov
fs
cli
inc
jns
dec
fs
imul
sub
in
push
in
fwait
pop
xchg
cmp
push
push
jg
scas
loope
mov
mov
pop
call
sub
jae
or
and
and
nop
jp
mov
push
sbb
call
or
div
fcompl
es
sbb
mov
shlb
add
fdivl
pop
test
hlt
push
jle
mov
imul
xor
or
mov
rorl
pop
pusha
test
pop
sbb
jno
mov
cmp
inc
push
and
leave
jecxz
cwtl
xor
stos
xlat
xor
add
mov
enter
les
fadd
dec
and
add
mov
or
xor
jns
data16
push
mov
sub
dec
and
inc
sbb
cs
and
movsb
cld
cmp
pop
repnz
outsl
or
cmp
sbb
in
scas
ds
dec
fwait
clc
pop
imul
or
out
gs
lock
sti
push
ds
lods
sbb
mov
icebp
data16
jne
add
adcb
in
adc
insb
mov
push
push
mov
cmp
into
popa
jbe
jle
add
mov
decl
ds
mov
sbb
subb
xchg
idivl
ljmp
dec
jge
lock
mov
ss
scas
inc
lods
pop
sbb
and
enclu
adc
jb
loope
bound
jmp
jno
push
jae
pop
push
jae
inc
mov
jo
in
and
and
call
lods
dec
jae
inc
push
test
push
mov
xchg
movsb
shl
cwtl
gs
inc
jns
mov
xchg
push
clc
pop
cmp
notb
aam
in
lods
enter
mov
push
subb
adc
rcrb
gs
and
cwtl
mov
adc
in
ja
test
pushf
adc
test
outsb
je
dec
jecxz
mov
out
push
mov
sbb
add
aad
pop
lcall
mov
ret
and
mov
arpl
dec
sub
xor
mov
sub
xor
and
jb
dec
add
out
xor
int3
xchg
dec
mov
jnp
into
jno
fdivr
and
cmpsl
jne
swapgs
cmpl
push
xchg
sar
iret
imul
push
out
fwait
ror
xor
shrl
jno
xchg
jmp
push
cmp
inc
add
fstl
rclb
jbe
div
push
fxch
cld
xor
ds
in
inc
push
rcll
mov
ss
femms
sbbl
add
mov
xchg
cmp
cltd
or
aam
jge
jle
ljmp
xchg
or
popf
test
aam
data16
add
repz
sub
rcrl
dec
loope
mov
lock
mov
mov
dec
xor
into
test
out
je
add
je
lret
shlb
into
mov
sahf
cmp
shll
lods
dec
mov
sbb
cmpsb
jl
cli
dec
xchg
sbb
xchg
mov
out
push
movsb
and
adc
outsl
iret
inc
add
pop
pop
sbb
or
jne
je
sbbb
lret
add
adc
or
loop
cmp
xor
mov
add
testb
out
in
sub
inc
cmp
jl
jae
or
sub
push
clc
mov
aaa
cltd
and
push
jl
sbb
push
loop
add
cltd
scas
push
movsb
ret
sbb
and
xchg
ja
adc
repnz
lods
sarl
xchg
aas
pushf
mov
push
lods
lods
es
adc
repz
int
ss
inc
mov
pop
and
adc
fmul
fistpll
xor
inc
and
pop
mov
cs
out
lea
sahf
inc
in
inc
clc
xor
aas
dec
lds
lods
mov
add
ret
movb
mov
loop
sahf
sbb
lret
mov
xor
aas
jbe
mov
mov
arpl
cli
pop
sbb
inc
push
push
xchg
xchg
cmp
test
xor
in
pop
xor
mov
in
cmpsb
cmp
dec
sbb
data16
mov
inc
in
loope
sbbb
addr16
enter
lods
dec
out
cltd
push
pop
push
add
pop
add
das
xchg
ljmp
leave
adc
sub
adcl
xchg
stos
ret
in
dec
cmp
push
lods
jo
mov
push
jbe
mov
insb
cmp
or
cli
jle
inc
pop
jmp
test
xchg
ja,pt
test
sub
dec
shll
js
xor
into
sub
rol
ljmp
dec
inc
sub
add
and
inc
mov
inc
ds
dec
icebp
mov
xchg
mov
stos
adc
dec
add
jle
inc
movsl
ret
sbb
loope
roll
pop
sub
push
out
adc
lcall
pop
arpl
xor
xchg
add
lahf
lds
mov
dec
fimull
cmp
in
xor
cld
imul
inc
push
push
xor
push
and
xchg
and
out
xor
pop
xor
add
call
inc
fsubs
shr
pop
push
in
adc
cmp
dec
xchg
ret
loope
sub
sub
and
inc
sub
mulb
inc
xchg
or
xchg
mov
out
xchg
scas
jl
das
jp
insb
ret
orl
aaa
ds
movsb
sti
pop
mov
mov
cld
pusha
pushf
inc
mov
inc
add
divl
popf
sub
ja
insb
pop
inc
negb
test
sbb
xchg
add
xchg
insb
enter
adc
adc
popa
xchg
cli
sbb
sub
cmpl
jecxz
outsb
mov
dec
sbb
aam
lcallw
sbb
js
jo
jmp
jnp
xchg
pop
fs
mov
xchg
aam
scas
fnsave
push
addl
inc
aaa
inc
sub
adc
les
inc
lcall
xchg
fadds
int
fistpl
fldenv
inc
std
sub
cmp
push
roll
shrl
int3
xor
les
sbb
push
xchg
ja
cwtl
mov
loop
pop
mov
jge
ret
cld
pusha
push
jecxz
cmp
sub
mov
push
outsb
call
repz
in
cmp
pop
push
shll
add
int3
mov
hlt
subl
cld
cwtl
addr16
std
cs
mov
arpl
push
sahf
stc
dec
and
add
out
mov
mov
out
es
stos
push
jl
sub
lahf
push
pop
out
fists
dec
mov
shll
jbe
pop
xor
mov
jnp
sbb
cmp
in
push
sub
repz
stc
test
xor
xor
xor
jbe
aam
in
cmp
lret
ljmp
add
nopl
jg
daa
mov
xchg
fisubs
push
out
cmp
jne
test
pop
inc
mov
xor
mov
repnz
ljmp
repz
jecxz
dec
popl
mov
push
jo
ret
push
fidivrs
add
insl
jno
cli
movsl
jns
inc
lds
sbb
cmp
or
sub
das
fsubrl
pop
imul
mov
mov
into
gs
jns
mov
into
ss
push
fcoms
mov
jnp
lods
shrb
roll
scas
idivb
gs
test
sub
add
jbe
stos
pop
enter
cli
cmp
pop
xchg
lock
and
add
push
aaa
loop
or
lret
xor
cmp
jl
mov
xor
push
jge
add
imul
dec
repz
and
jae
lret
les
inc
and
stc
mov
push
lret
add
add
push
jmp
lahf
imul
repnz
dec
and
mov
xor
fdivl
enter
movsb
lret
in
inc
xor
shll
dec
push
xchg
mov
imul
cmpsl
mov
in
out
pushf
mov
in
xchg
aaa
mov
cmpsb
and
pop
inc
xchg
jmp
in
sbb
ret
or
pop
pushf
mov
cld
mov
adc
mov
data16
mov
jl
test
or
and
shl
jbe
leave
stos
cmpsl
jnp
bound
in
loopne
ds
dec
mov
hlt
add
sub
stc
mul
mov
fcmovnu
js
dec
jecxz
icebp
push
add
inc
and
mov
mov
test
jbe
cmp
or
dec
ret
jno
sbb
xor
sub
xor
and
ret
pop
into
std
mov
iret
aam
ss
inc
stc
pop
xchg
lcall
pop
rcl
popl
jo
hlt
ret
mov
xor
inc
push
mov
lds
mov
les
filds
outsl
cmp
les
xor
adc
pop
es
add
xchg
int3
xchg
mov
and
fucompp
pop
xchg
xor
in
push
lcall
in
adc
stos
popf
xchg
adc
stc
in
or
dec
and
ficompl
xor
and
xor
inc
stos
test
out
or
lock
enter
jp
incl
sbb
jb
lcall
pop
arpl
mov
std
push
je
outsl
pop
xchg
mov
mov
fwait
mov
shlb
loopne
inc
aad
mov
dec
mov
cmp
push
jle
mov
adc
or
rorb
pop
dec
add
dec
stos
inc
sbb
mov
icebp
sbb
fstps
and
imul
fdivl
sub
outsl
and
les
push
movsb
ret
xor
push
mov
aaa
or
jmp
add
shlb
hlt
repnz
ds
imul
dec
shll
data16
lcall
testl
dec
lods
ja
sbb
cmp
outsb
push
jmp
icebp
sub
xlat
push
insl
rcrb
cmpsl
mov
leave
out
cltd
xchg
lret
lret
inc
sbb
xor
subb
movsl
cld
cld
add
xchg
cmp
cmp
cmp
popfw
fmull
jmp
inc
repnz
loopne
pop
insl
insl
dec
mov
sbbb
aad
jns
loope
cli
icebp
adc
into
dec
pushl
jo
fwait
mov
shll
xchg
lods
sbb
ja
sti
jecxz
cmpb
push
outsl
popf
or
xchg
push
jge
sub
mov
xor
adc
adc
ret
popf
jge
cmp
bound
jo
dec
pushf
mov
add
cmp
insb
pop
pop
and
ret
nop
inc
es
mov
and
mov
push
stos
mov
stos
jle
lods
notb
movsl
mov
xchg
hlt
mov
or
dec
push
insb
sub
jno
push
xchg
add
cwtl
cltd
inc
pop
xor
das
sub
mov
push
call
ficompl
xchg
std
sahf
push
mov
outsl
add
jge
and
dec
mov
mov
lea
and
outsl
mov
daa
mov
call
lret
shrb
lret
mulb
mov
outsb
mov
lret
mov
adc
jge
idivl
pushf
mov
mov
stos
loopne
jp
shll
xor
sbb
jmp
outsb
sbb
add
movsl
ret
xchg
movsl
xor
pushf
popa
test
add
int
sub
in
or
push
mov
int
pop
mov
xor
add
sub
mov
popf
sbb
scas
jg
dec
je
mov
add
icebp
in
mov
mov
int3
pop
fidivs
shlb
imul
and
js
xchg
mov
mov
fdivrp
das
lret
fs
aaa
bound
loope
jle
ss
test
pop
mov
ja
xchg
rcl
add
jns
aam
jmp
push
mov
inc
mov
adc
add
sub
in
nop
subb
call
mov
sub
fstl
scas
sub
mov
pop
pushf
cltd
fisttps
in
imul
pop
jno
or
bound
std
lcall
jbe
daa
cmpl
hlt
rcll
sti
icebp
push
inc
inc
scas
inc
idivl
add
pushf
and
clc
or
ja
pushf
xlat
test
adc
xlat
rorl
cmpsl
test
mov
pop
jnp
mov
dec
jb
cmpl
add
or
nop
lock
jp
mov
push
add
add
nop
mov
mov
dec
ds
stc
mov
in
pop
aad
repz
add
nop
dec
cmp
mov
notb
fisubrl
xlat
mov
lahf
xor
in
scas
out
jno
fdivs
lds
or
lock
push
inc
jg
mov
inc
sbb
stc
cmc
daa
sub
cmpsl
popa
test
adc
repnz
repz
sub
inc
dec
enter
push
lea
test
call
adc
arpl
fisttps
inc
fs
push
jmp
adc
int
and
or
test
xor
shl
xchg
test
pop
xchg
cmp
fisubs
jno
pop
or
push
xchg
jge
test
cmp
pushl
fildl
or
sub
pushf
lods
and
stc
xorl
push
scas
ds
ds
fwait
jo
les
xor
mov
xchg
aad
mov
sub
mov
rol
stos
xlat
push
es
sbb
in
lret
cmp
into
stos
jns
mov
imul
lret
cli
jae
pop
xbegin
aad
sub
lock
mov
mul
stc
fidivrl
mov
push
lahf
sbb
leave
aad
cwtl
faddp
mov
push
imul
mov
lcall
adc
sti
fsubp
push
mov
faddp
repz
pop
fs
cmpsb
cwtl
bound
xchg
dec
adc
call
cmp
and
cmp
mov
popf
jbe
insb
cmpsl
les
sbb
es
inc
in
mov
in
lods
sub
xchg
push
jb
mov
and
cltd
lret
pusha
std
inc
popl
das
xor
jne
jnp
fstl
sti
dec
pop
cltd
enter
aam
aad
jp
mov
je
dec
aam
mov
or
clc
dec
mov
shll
std
cli
cvtps2pi
xor
cmpl
pop
jmp
negl
adc
jo
fcoms
dec
dec
rcl
adc
cmc
pop
mov
jo
cli
std
jg
movsl
add
cs
outsl
cs
jo
mov
jnp
aas
test
sub
hlt
sbb
xchg
mov
or
shlb
add
stos
sub
mov
jne
dec
sub
or
add
or
pop
pop
dec
mov
xor
scas
inc
shll
test
aas
imul
pop
jp
pop
mov
outsl
subl
jl
mov
pop
movsl
adc
addr16
ja
cmpl
sti
cmpsb
adc
test
aad
imul
jecxz
add
mov
or
icebp
jns
adc
inc
jbe
mov
adcb
ds
cld
mov
rol
sahf
adc
mov
cld
stc
clc
popf
inc
dec
pusha
xchg
ret
repz
inc
sbb
push
test
xchg
js
xchg
repz
es
movsb
xor
add
dec
je
ret
lds
push
rorl
sbb
cmc
push
mov
push
cli
dec
mov
mulb
out
cmp
stc
cmp
sbb
sbb
push
rclb
mov
shll
xorb
cmpsl
stos
movsb
pop
outsl
pop
adc
inc
pcmpgtb
cmp
inc
dec
inc
sub
inc
test
imul
decl
loopne
sbb
sub
rep
mov
aad
cmp
xchg
push
mov
inc
or
xchg
xchg
adc
xor
lcall
dec
jnp
pusha
das
sbbl
pop
jae
sub
clc
mov
mov
jl
icebp
push
repnz
loop
sub
int
inc
or
cmp
mov
mov
push
jns
sbb
cmpsl
dec
xlat
or
dec
sbb
loopne
xor
cli
mov
jb
adc
xor
lods
and
addr16
stos
mov
pop
inc
stos
mov
jns
jg
sarl
push
popa
and
push
xor
int3
int
sbb
cld
push
inc
adc
dec
dec
dec
push
in
cmp
jnp
cmp
aad
js
hlt
loope
pop
repz
aam
mov
sbb
jne
clc
iret
arpl
inc
jle
ja
sbb
iret
sbb
add
jmp
pop
lea
repz
ds
cmpsl
les
xchg
adc
pop
into
pop
popa
xorb
and
leave
add
mov
repz
mov
nop
int
or
outsl
in
ret
fisubl
fstpt
out
lods
out
jge
jl
pop
bound
test
jg
shlb
push
es
out
imulb
int
loop
out
and
push
sbb
cltd
push
jae
fldln2
mov
cmpsl
mov
je
mov
xor
repz
sub
pop
out
in
cwtl
jns
push
cmp
pop
in
jne
test
fisubrs
ds
sti
sub
enter
inc
mov
movb
loopne
cli
push
mov
out
sub
jne
mov
test
mov
insl
fcmovu
jecxz
xchg
jne
add
mov
inc
sbb
xchg
mov
jb
pop
xchg
lods
fisubrl
aam
sub
pop
jae
lods
loopne
test
pop
mov
shrb
xor
jle
fdivr
movsl
xlat
xchg
ret
adc
fs
pop
pop
outsb
xchg
into
add
lcall
jle
je
fcompl
stos
ds
out
dec
push
mov
int
jp
adcl
push
hlt
imul
popa
popa
test
aaa
mov
sbb
push
jg
xor
pusha
jmp
dec
addr16
sub
fistpl
xchg
je
popf
cmc
stc
sub
jmp
imulb
jo
push
or
repz
into
sub
jl
shl
ficompl
jmp
adc
std
mov
pushf
sub
mov
mov
inc
xor
lods
inc
xchg
cmpsl
mov
out
push
fwait
scas
sbb
insl
out
scas
inc
aad
shrb
mov
les
es
ret
fsub
add
test
mov
test
fs
push
dec
fldt
lret
fstpt
pop
int3
pushf
aad
jnp
fldl
xchg
mov
jne
jmp
jne
shr
mov
sub
in
insl
cld
arpl
pushf
cmp
xchg
popf
xchg
into
sbb
jmp
rolb
sbb
cmp
lcall
adc
jae
add
cmpsl
push
sbb
pushf
fistps
ss
data16
push
ljmp
test
pop
insl
pop
in
iret
inc
cmp
mov
js
push
lret
dec
popf
outsb
xor
and
inc
mov
jb
jns
and
cmp
pop
adc
jnp
jl
xchg
xlat
lea
adc
mov
imul
mov
sub
aaa
inc
test
movsb
and
and
and
fisttps
xchg
push
mov
adc
add
pushf
mov
outsb
lods
jne
sbb
push
mov
aad
mov
stc
shlb
mov
les
jecxz
mov
cwtl
jge
dec
imul
mov
ljmp
call
jb
imulb
cld
mov
test
int
xchg
dec
pop
arpl
cmpb
jns
xor
jns
inc
imul
sbb
xchg
add
adc
xchg
mov
sub
xchg
jb
clc
push
cmpb
add
clc
dec
jge
mov
dec
cmpb
jl
out
sahf
aam
mov
jnp
nop
test
lret
nop
xchg
pop
mov
test
sbb
xchg
mov
push
xor
xor
in
movl
mov
xchg
iret
cmp
jecxz
xor
jns
fwait
add
js
jne
xchg
shll
adc
sbb
dec
xor
cld
enter
fisttpll
shrb
cs
out
mov
dec
pusha
in
inc
lahf
in
adc
fisubs
cltd
aad
setg
mov
mov
mov
cmp
outsb
adc
cmp
xorb
push
pop
les
add
jno
push
fsubr
or
stos
les
xchg
in
ljmp
pop
loopne
push
aaa
pop
stos
divb
decl
jp
loop
insl
outsb
iret
repz
popa
lahf
je
sahf
pushf
nop
in
inc
stos
out
ljmp
jp
insl
push
pop
outsb
cld
and
lods
test
sahf
push
bound
shll
int
cmp
jbe
add
stos
mov
js
in
enter
divb
cmpsb
mov
jne
inc
cltd
scas
jge
push
xchg
pop
orl
add
mov
mov
int3
in
pop
cltd
and
inc
xchg
jmp
movsb
cmp
or
sbb
cwtl
jp
sub
xor
jge
out
cmpsb
out
sbb
fwait
sub
xchg
cs
js
add
js
loopne
ret
outsl
pop
xlat
dec
sarb
stc
out
lret
pop
mov
pop
cmp
stc
sub
pop
stc
sub
mov
adc
and
daa
scas
loopne
lock
repz
mov
fwait
out
push
loopne
mov
xchg
push
dec
add
inc
add
mov
inc
fstpt
in
lods
pop
nop
xor
mov
repz
inc
and
dec
dec
xchg
std
ret
in
ret
addl
aas
pop
imul
leavew
xchg
sub
pop
lret
and
sub
nop
jb
inc
cmc
xchg
fwait
and
pop
cmp
and
push
inc
adc
or
mov
lretw
and
adc
addr16
cmpsb
into
push
xchg
gs
adc
and
pop
icebp
and
dec
das
mov
test
fiadds
mov
pop
adc
and
xchg
mov
cmpsb
add
mov
stos
cmp
js
mov
adc
pusha
cld
push
mov
int3
add
push
lcall
xor
mov
cmpsb
or
je
call
and
cmpsb
xchg
and
adc
pop
cmp
or
xchg
jnp
div
idivl
mov
adc
je
in
daa
dec
add
bound
mov
mov
cltd
mov
dec
jecxz
inc
sbb
or
push
inc
push
popa
jbe
inc
jg
pop
dec
mov
sbb
mov
xchg
rcrb
sbb
or
movsb
jl
lret
popf
add
adc
jecxz
mov
sbb
aaa
scas
rorl
push
aam
xor
sbb
frstor
repnz
pop
loope
inc
mov
mov
je
dec
adc
imul
xor
dec
cs
aaa
jle
or
mov
loope
test
movsl
loopne
pop
push
rolb
mov
mov
or
or
pop
push
hlt
cmp
adc
popa
mov
mov
adc
add
in
mov
loopne
outsl
add
jge
cwtl
jg
push
sub
cli
cltd
or
adc
or
push
cltd
sahf
scas
fidivl
jno
jg
xchg
sub
ret
insl
jns
pop
cmpsl
push
jnp
inc
push
push
cmp
shlb
sbb
sub
daa
fs
push
lea
gs
adc
cwtl
and
scas
jbe
dec
push
scas
xor
inc
xchg
in
sbb
xor
jmp
imul
cmp
out
pop
adc
sub
repz
in
sub
cs
mov
out
xchg
call
sbb
push
cmp
push
push
and
mov
test
cmpsl
pop
mov
push
rcrl
aaa
mov
push
xlat
ss
xor
sbb
push
aas
jle
out
popf
scas
cld
ret
movsl
lret
adc
iret
inc
sub
orl
sarl
adc
and
dec
push
enter
mov
pusha
jg
je
into
int3
pushf
add
xchg
mov
cmp
jp
mov
fiadds
sar
mov
fimuls
pop
mov
pop
int3
ds
sarl
add
and
and
daa
mov
cs
adc
push
sub
or
fdivrs
cwtl
xchg
cwtl
cltd
rclb
push
fisubs
dec
scas
inc
gs
scas
inc
lods
dec
cmc
cld
mov
mov
inc
mov
push
movsb
fdiv
xchg
inc
out
mov
xchg
mov
imul
sub
inc
mov
xchg
mov
dec
adc
int3
push
jnp
dec
sbb
push
call
mov
mov
dec
adc
push
jnp
jae
cmp
sbb
fsubrp
sbb
lret
pop
xor
push
pop
movsb
lds
pusha
xor
test
bound
pop
test
inc
xchg
dec
xor
mov
push
cmpsb
dec
xlat
cmp
shll
jg
gs
sar
bound
push
sub
mov
aam
mov
cmc
movd
fsubs
sub
out
dec
mov
pop
cmpsb
xor
mov
pop
enter
ljmp
sbb
gs
leave
cmc
pop
es
in
mov
sbb
jns
sbb
mov
icebp
and
mov
sbbb
pop
fstps
sub
movsl
jns
sarb
jp
mov
jb
sbb
cmp
out
inc
push
mov
imul
adc
loop
jle
jp
rcll
push
mov
xchg
sbb
pop
data16
jl
out
mov
sbb
in
sbb
andl
sub
jo
cmp
fs
hlt
sbb
movsb
pop
aad
lcall
xor
dec
test
mov
sbb
lret
lods
mov
push
mov
jp
or
jb
xchg
daa
popf
add
fsts
inc
notb
cwtl
jmp
test
in
iret
test
pop
jne
int
push
jne
add
pop
mov
jge
ss
pop
sbb
mov
xchg
into
test
mov
jb
adc
cwtl
sub
jl
and
xchg
adc
pop
pop
nop
sub
test
out
adcl
popa
mov
hlt
popa
pushf
push
fisubl
test
push
fdivrs
arpl
pop
pop
inc
xchg
ret
enter
add
fildl
jo
and
outsb
sahf
outsb
cld
mov
sub
cmpsl
mov
pop
and
mov
adcl
das
aas
xchg
fstl
lcall
imul
lcall
inc
jb
pop
popf
lret
or
cmp
jmp
in
into
lret
mov
out
gs
cli
add
es
addb
jnp
insl
iret
andl
pop
and
jno
call
jnp
xor
sbb
adc
or
jnp
mov
adc
xor
inc
loope
out
sub
mov
data16
xchg
inc
popa
pop
in
sbb
adc
push
mov
adc
mov
mov
sub
cmpsl
call
je
sub
and
insb
cltd
cmp
adc
sub
mov
jg
js
repnz
cmpsl
repnz
repz
fistps
push
xchg
clc
mov
hlt
jo
outsl
xchg
push
pop
lock
sbb
scas
jge
and
ja
aam
or
cli
imul
testl
mov
push
scas
push
ficomps
add
pop
stos
ds
lcall
push
inc
add
mov
mov
aas
pop
lcall
ja
push
sti
dec
std
inc
mov
cli
pop
ljmp
mov
jbe
imul
inc
cmc
add
jp
shlb
add
mov
mov
mov
scas
push
mov
out
sbb
dec
dec
into
lahf
pop
inc
sbb
jmp
jle
ss
mov
out
ffreep
repz
push
popa
pop
call
xchg
mov
lods
push
xor
xor
iret
stc
ret
pop
cmpsb
xchg
ret
mov
add
cltd
es
gs
xor
nop
mov
dec
xchg
xchg
xchg
fwait
inc
pop
imul
aad
es
lcall
in
test
adc
flds
sahf
lahf
es
call
cld
out
outsb
cmp
xchg
popf
and
xchg
cmp
sbb
in
out
lcall
cwtl
mov
or
xchg
dec
cs
shll
xchg
xor
add
shl
xchg
orb
push
fdivrs
jmp
push
lods
cmp
into
sub
cmp
and
pop
adc
cmc
fwait
test
mov
lret
xchg
repnz
ds
sub
and
sub
push
fsubrs
shl
mov
xor
sbb
add
mov
lea
mov
and
xchg
jl
mov
and
insl
mov
fisttpll
mov
mov
mov
lock
icebp
ds
mov
mov
xchg
sbb
cltd
test
sbb
push
xor
sub
push
dec
dec
js
insl
cld
push
movb
mov
inc
mov
push
sbbb
xchg
inc
sbb
ret
cmc
jo
pop
jle
testl
adc
or
pop
hlt
in
aaa
outsl
push
aas
mov
mov
jle
jne
movsb
sub
add
loop
sbbb
push
aad
pop
sub
xchg
and
mov
aam
pusha
mov
dec
insb
dec
or
pop
mov
xchg
pusha
pop
popf
xchg
dec
jno
ss
cmp
cmp
and
mov
popf
push
fsubrl
jae
sar
push
sbb
inc
add
jl
idivl
push
testb
xor
inc
cmp
cmp
loope
mov
dec
jo
cmp
jo
mov
cmp
aas
lods
inc
arpl
push
rolb
or
fmuls
lret
jle
ret
mov
insl
xchg
loop
mov
aam
dec
jmp
xchg
push
js
pop
or
leave
mov
nop
xor
lods
jle
nop
cwtl
mov
xor
mov
push
pop
daa
mov
fucom
lcall
adc
test
add
and
idiv
lcall
sub
xor
inc
fcmovne
cwtl
jecxz
loopne
lds
mov
loope
shll
fnstsw
mov
xor
inc
mov
je
test
sahf
pop
aam
shlb
int
mov
aam
addb
jg
jle
cmp
mov
gs
mov
sbbb
aam
ljmp
xchg
lods
xchg
mov
dec
push
sbb
imul
je
es
icebp
push
je
iret
test
insl
fisttpl
fs
mov
movsl
call
xor
leave
ret
aas
cltd
in
lock
iret
aas
loop
pop
test
das
jecxz
in
out
test
or
rcrb
pop
clc
lret
es
movsl
int
jmp
pop
fstps
stos
jl
jmp
sub
xchg
cmpsl
push
into
not
ret
sbb
add
fnsave
adc
dec
imulb
lea
sub
outsl
sti
addb
push
dec
addr16
xchg
scas
leave
test
jnp
dec
mov
jg
push
mov
out
loopne
hlt
add
xor
mov
daa
xor
aaa
fldz
sbb
sti
push
jl
fwait
scas
nop
loope
mov
andb
add
jnp
mov
rcll
cltd
inc
dec
xor
popa
andb
push
add
fadds
divl
mov
inc
xlat
enter
cld
enter
push
ret
add
sub
mov
in
incl
sahf
mov
push
movsl
in
movsb
jne
mov
mov
cli
cmp
push
imul
xor
cmp
xor
push
inc
pop
dec
lods
lock
dec
jno
dec
dec
cmp
addr16
sbb
fisubrs
mov
clc
pop
int
imul
push
sub
adc
loop
sbb
push
sahf
clc
cmpsl
in
sar
inc
jae
fwait
out
lock
test
sub
leave
and
je
in
sub
pop
jecxz
incb
sbb
nop
inc
inc
adc
cmpl
adc
adc
jbe
cwtl
fsubr
or
sti
dec
sub
sbb
or
sub
mov
lods
jmp
jmp
mov
pop
add
stos
mov
sbb
mov
cmp
sahf
pusha
mov
addr16
dec
sub
sub
push
xchg
loopne
push
push
ljmp
dec
dec
shlb
lods
mov
sbb
aam
shll
dec
sub
arpl
fstps
stos
leave
or
out
hlt
add
mov
sbb
testl
lret
pushf
mov
jne
in
inc
inc
fsubrs
sub
test
loop
adcb
out
fsubl
fsts
in
lret
call
dec
fstpl
ds
movsl
inc
aad
movsl
xchg
sub
mov
jg
and
cmpsb
in
xchg
hlt
mov
push
test
jp
cli
add
xchg
testb
out
inc
push
cmp
aad
adc
fnstcw
jge
out
cltd
outsb
xchg
call
in
jno
cli
lods
mov
in
cmp
adc
cltd
fstpl
es
xor
cmp
sbb
pop
and
xchg
mov
dec
dec
notl
or
mov
push
xor
pop
mov
add
fmull
sub
sub
jp
xor
imul
test
xor
into
lcall
jle
mov
sbb
dec
shrl
test
sub
lds
push
inc
push
fldl
aaa
cmpsl
sub
rdmsr
notl
mov
sub
mov
mov
pop
aad
prefetcht0
pusha
fnstcw
sti
test
int3
mov
mov
xor
and
idivb
and
aaa
lock
arpl
out
roll
out
mov
cs
arpl
sbb
dec
sub
cli
adc
cmp
add
cmp
jle
sbb
inc
orb
adc
int3
mov
inc
xor
stos
mov
in
jle
xchg
js
mov
inc
outsl
jecxz
fwait
popa
cmp
fwait
movsb
add
push
or
jns
mov
pop
rcrl
ja
leave
jle
push
dec
mov
fdivr
and
sbb
into
inc
ficomps
dec
sti
ds
andb
jbe
not
pop
lcall
sbb
arpl
pop
mov
outsl
roll
out
faddl
fisubrs
popf
adc
aaa
jnp
jle
ret
xchg
and
sbb
mov
jmp
xor
cmp
or
gs
mov
cmp
daa
lock
dec
sub
sbb
ljmp
push
dec
popf
adc
jo
cmpsb
mov
add
enter
cmp
insl
dec
cmp
test
or
push
xchg
inc
loopne
jp
sbb
sbb
xchg
adc
jbe
jp
jl
adc
cmp
mov
cmpl
mov
sub
iret
sub
xor
pop
pop
adc
xchg
clc
mov
cmpsb
mov
lahf
push
je
pop
pop
mov
imul
cli
adc
ret
enter
inc
testl
aas
push
push
mov
dec
popf
lea
pusha
dec
cltd
fisubrs
scas
pushf
mov
dec
nop
sti
bound
out
icebp
addb
data16
pop
int3
mov
xor
lods
jp
aam
xlat
stc
xchg
out
pop
push
mov
adc
push
sub
dec
sub
mov
inc
mov
mov
pop
add
pop
hlt
std
mov
jbe
dec
jne
push
movsl
imul
movsl
sub
add
mov
das
aad
insb
inc
fadds
aam
jo
sbb
push
push
mov
cmc
lea
dec
movsl
mov
adc
inc
lea
mov
insb
pop
movsl
jle
inc
or
out
mov
shlb
xor
roll
mov
ret
mov
js
call
stc
inc
cmp
push
adc
jb
push
jb
cmp
jae
add
fwait
sub
inc
mov
enter
popf
rclb
pop
xchg
sahf
call
jp
clc
arpl
nop
inc
dec
cmp
cmp
jge
cmp
xchg
sbb
lods
test
add
push
movsl
jle
mov
insb
sub
stos
ret
in
add
sub
sub
mov
add
sahf
mov
das
lcall
ret
in
push
lahf
rcll
dec
scas
add
stc
popa
xor
dec
sti
testl
testb
mov
outsl
push
sysenter
scas
push
dec
popa
imul
or
ljmp
subl
dec
push
jge
in
fwait
lcall
or
add
mov
pop
ljmp
jecxz
icebp
and
lods
pushf
or
je
inc
add
cltd
push
addl
mov
jbe
jno
push
out
iret
and
add
aam
push
and
fidivrl
leave
lea
outsl
sbbl
fwait
ret
adc
push
cmp
cmp
or
fisubrs
cmp
cwtl
dec
ljmp
add
sbb
inc
jecxz
ror
mov
push
sub
mov
and
out
cltd
mov
mov
mov
mov
pop
lods
jne
insl
test
sub
push
jns
out
fstps
stos
cli
mov
stos
outsb
xor
add
sahf
rcrl
lcall
xchg
inc
icebp
jle
pop
mov
mov
xchg
int
iret
lahf
fildl
or
jb
adc
push
and
add
sbb
clc
in
adc
dec
popf
inc
push
add
insl
sbb
js
dec
movsl
sbb
insb
push
add
add
cmp
or
enter
xchg
hlt
cmpsb
mov
test
loopne
rcl
sbb
cmc
data16
mov
addr16
sub
sbb
xchg
imul
in
hlt
fsubrl
jbe
inc
stos
mov
cwtl
and
adc
sbb
popf
cmpsl
push
inc
lahf
mov
xor
sbb
push
jns
mov
divl
push
out
es
sub
push
addr16
adc
inc
rorl
sub
insl
stos
adc
sahf
fs
adc
mov
pop
jb
push
negb
popf
or
inc
cmp
je
pop
sahf
stos
aaa
mov
push
jno
jg
mov
in
hlt
movsb
cli
imull
adc
das
push
fisubrl
xor
bsr
aam
sahf
lret
jl
jle
push
sub
in
sbb
xchg
pop
dec
lock
movsb
clc
push
ffreep
jge
repz
ror
and
out
std
sub
sbb
mov
push
fdivrp
and
das
inc
mov
js
out
out
or
leave
test
je
inc
cmp
loop
dec
cli
inc
mov
imul
lret
mov
test
push
cmpsb
mov
adc
test
sbbl
fwait
repnz
jge
hlt
cmc
hlt
outsb
ds
inc
add
mov
cmpsl
icebp
mov
test
test
pop
fcompl
adc
sub
pop
sub
jmp
sub
add
daa
push
shl
outsb
das
sub
or
mov
dec
movl
iret
repz
sub
push
fisubrs
fs
movsb
popf
arpl
sahf
das
and
and
or
out
imul
loope
and
xor
xchg
jmp
cmpsl
fldt
mov
push
push
mov
jb
clc
add
icebp
lds
mov
dec
cmpl
cmp
subl
inc
mov
jbe
inc
iret
pop
add
dec
inc
sbb
mul
iret
push
mov
aad
loopne
mov
sub
cltd
jle
adc
shr
xchg
jae
aas
xchg
je
loope
out
fists
lcall
fsts
mov
clc
out
stos
inc
jg
lds
or
movsl
or
jecxz
ret
cmp
repnz
cwtl
lods
jge
fsubrs
push
jge
xor
dec
or
adc
ret
outsb
xchg
xchg
and
shl
inc
outsb
and
stos
and
cmc
and
out
div
lcall
push
mov
scas
jmp
jbe
inc
xor
mov
inc
fldt
push
test
sahf
adc
inc
icebp
fmul
insl
inc
into
repnz
lods
or
inc
pop
mov
gs
mov
jmp
mov
cmp
cmpsl
mov
lcall
mov
adc
dec
mov
fisttpl
sbb
adc
pushf
mov
bound
add
xchg
add
imul
dec
cmc
sub
cmp
add
add
lcall
sbb
adc
les
cmp
popa
hlt
inc
jp
inc
dec
aaa
fimuls
sub
jle
xchg
lret
sbb
mov
cmpsl
and
sarl
in
bndstx
pop
fiaddl
int3
insb
add
stc
adc
rcr
imulb
mov
cmovo
dec
sbb
xor
lock
faddl
mov
les
int
mov
xor
into
mov
insb
call
lods
jp
pop
sub
fiadds
dec
test
sub
pop
cmpsb
adc
repz
dec
aam
insl
mov
clc
mov
ds
mov
sbb
pop
dec
flds
mov
inc
mov
shll
aaa
xchg
push
sti
repnz
mov
dec
jbe
mov
js
add
ficoms
cmp
adc
icebp
mov
daa
sub
cmc
cmc
lock
and
fildll
roll
loop,pn
mov
xlat
in
xchg
aas
aam
xlat
inc
psubd
je
rol
cltd
shr
sub
fxch
test
sbb
or
xchg
pop
aas
mov
mov
cmp
dec
mov
call
lret
dec
test
mull
xchg
jmp
int3
xlat
add
std
sbb
cmc
and
jno
rcll
pop
adc
aas
mov
fldenv
cmp
out
insb
add
jne
insl
sub
mov
cmpsl
ljmp
cmp
ljmp
cmpl
test
jp
dec
outsb
push
and
and
andl
cmp
icebp
pop
out
or
aam
xor
lds
ds
cmp
movl
cli
dec
stos
out
inc
jmp
mov
orb
and
dec
cld
cmp
pushf
xchg
test
jnp
insb
mov
jnp
test
adc
dec
aaa
rcrl
popa
outsb
fs
sub
iret
inc
pmuludq
adc
jle
sub
clc
jp
cmp
pusha
xor
fnsave
push
aas
dec
mov
inc
mov
sti
jp
xor
shrl
push
mov
jmp
mov
mov
jle
popf
pop
lcall
aaa
dec
fildll
and
push
pushf
mov
mov
popa
mov
add
imul
push
dec
lock
and
lea
je
sub
or
sysenter
inc
add
mov
inc
pop
scas
xchg
out
mov
add
push
cmc
pushf
mov
ret
mov
mov
mov
fld
nop
or
jecxz
arpl
shll
push
mov
call
inc
mov
pop
jg
and
push
ljmp
test
mov
stc
cmp
adc
ret
imul
sub
cmpsl
aad
xchg
jne
dec
xor
aas
xchg
or
sti
sbb
bound
dec
dec
sbb
sbb
push
sbbb
jb
jbe
ljmp
sbb
jo
rcrl
test
popa
ss
ja
shrb
repnz
mov
scas
pop
rcrb
daa
cs
pop
fwait
cmpsb
inc
jmp
xchg
cmp
cmp
jae
cmpb
subl
mov
cmpsl
cld
repz
sub
or
das
lahf
les
mov
mov
imul
out
fsubrl
mov
jp
cltd
dec
pop
std
xor
sbb
fldenv
cmp
or
pop
jbe
das
rorb
ret
in
inc
icebp
std
cmpsl
in
fnsave
pop
push
leave
aad
jne
inc
inc
out
mov
and
dec
and
sbb
clc
mov
pop
mov
cmp
mov
cld
jno
lcall
shrb
jbe
dec
icebp
adc
das
inc
push
popf
popf
idivb
sub
js
fistl
cmp
inc
mov
cltd
lret
je
cmpsl
test
mov
mov
adc
outsb
inc
mov
jmp
sbb
cmp
jae
or
cmp
adc
aaa
push
imul
icebp
adc
scas
fcomps
mov
jne
inc
out
xchg
adc
mov
ret
daa
sub
xor
push
fwait
jb
lahf
mov
cli
jle
mov
push
add
xchg
lea
mov
iret
mov
movsb
std
shr
adc
xchg
jbe
mov
xlat
cltd
daa
ret
pop
idivl
in
cmp
jle
jbe
popa
xor
ss
out
pushf
jp
and
cli
rolb
aas
dec
mov
cmp
dec
pop
data16
loope
or
or
jg
sub
mov
out
add
dec
pop
mov
clc
xchg
jbe
mov
idivb
jo
mov
pop
mov
mov
fwait
push
dec
xchg
inc
xchg
int
add
orb
js
mov
dec
mov
loope
jnp
in
mov
js
lcall
pop
fdivs
fsubl
in
fdivrs
out
adc
fcmovb
or
mov
jae
shl
fwait
hlt
lock
jnp
jge
std
lods
inc
mov
in
push
adc
hlt
aas
or
in
push
test
mov
rcl
push
daa
lods
out
add
loope
insb
call
add
lahf
lea
jp
adc
mov
push
cwtl
xor
dec
frstor
mov
xchg
cli
xor
mov
push
aas
ds
fimull
mov
mov
sub
xlat
sub
stos
pop
std
push
add
test
jg
sti
test
in
repz
push
mov
mov
adc
push
repnz
pop
daa
stos
and
dec
pop
or
cmp
addl
jno
iret
jb
jne
sbb
ret
pop
mov
cmc
rorb
mov
int3
push
sbb
jbe
xchg
jg
push
jb
and
int3
out
cmp
xchg
pop
shll
adc
testb
inc
ret
cwtl
jbe
ljmp
dec
cmp
ja
sti
fimull
pusha
lahf
addr16
inc
sarl
pop
repnz
repz
scas
lds
inc
add
xchg
mov
out
les
clc
cli
push
push
jne
adc
jmp
sti
mov
aas
aad
dec
in
cmpsb
loopne
xchg
and
out
cmp
out
roll
ret
adc
dec
pop
imul
add
test
fisubs
movsl
dec
jb
adc
std
and
leave
movsl
std
dec
loopne
shl
or
test
nop
pop
test
add
andl
lcall
outsb
jb
mov
or
ret
cwtl
pop
in
xchg
mov
shrl
jl,pn
daa
call
dec
mov
pop
cmpsb
xlat
js
pop
xor
rcr
out
daa
xor
aad
loope
dec
adc
rorl
pop
nop
dec
fldt
lock
inc
inc
dec
lret
out
sbb
in
add
and
pop
negb
xor
add
sub
xor
pop
lock
push
pop
add
push
aad
push
cmpsb
pop
stos
add
daa
out
lcall
das
aam
ds
dec
mov
test
xchg
stc
jno
stos
orl
cmp
movsl
sub
mov
cmp
mov
inc
adc
mov
push
arpl
shll
fdivr
dec
jp
imul
inc
mov
loope
xor
sbb
daa
pop
aas
std
addr16
outsb
fcomi
sbb
adc
mov
popa
hlt
and
adc
hlt
mov
sbb
push
add
add
inc
mov
and
xchg
les
pusha
stos
testl
dec
in
xor
popf
test
cli
js
or
pop
or
pop
adc
xchg
push
mov
sbb
add
clc
add
data16
jnp
mov
repz
adc
ds
pusha
sbbb
push
rcr
call
mov
xchg
fimuls
add
pop
insl
bound
lods
jecxz
leave
or
in
push
cmpsb
out
mov
jb
mulb
and
callw
mov
xchg
xchg
testl
xor
inc
sub
sub
je,pt
icebp
add
cs
mov
gs
cmp
mov
xor
push
push
stos
push
inc
jo
sbbb
push
pop
repz
dec
dec
in
adc
and
cltd
fdiv
and
loopne
clc
bound
or
movsb
sbb
daa
fs
stos
mov
ret
cmp
and
int3
add
jmp
add
xlat
loop
adc
lret
sub
xchg
sbb
repnz
daa
leave
test
call
fdivp
movsb
push
outsl
xchg
popa
data16
pop
sub
fisubrl
sbb
fwait
mov
cmp
fildll
arpl
mov
enter
mov
bound
repnz
rolb
ja
push
or
fists
sbb
lcall
xchg
mov
mov
sti
mov
lret
xor
mov
push
pop
cwtl
push
xor
pop
mov
sbb
adc
imul
mov
sbb
or
jno
mov
std
add
push
cmp
xchg
nop
sbb
pop
or
sbb
mov
jo
outsl
pop
call
xchg
rolb
cmp
pop
cmc
mov
mov
adc
arpl
imul
inc
divl
cmp
jb
cmpsb
sub
xchg
les
push
lret
xor
into
mov
mov
imul
mov
xor
rcrb
lds
fwait
leave
and
pop
out
insl
fsubs
insb
insb
sub
mov
cmpsb
das
jp
lock
xor
or
pop
pop
dec
insb
pop
cmp
cmp
dec
xchg
lods
cld
aad
xlat
cwtl
fsubrl
and
ficoml
pop
adc
pop
in
repnz
xor
bound
pop
dec
xchg
jno
bound
and
jns
sub
fdivr
cmp
pop
cmpsb
fdivs
vmovsd
mov
dec
adc
adc
call
lret
pop
es
cmp
or
pop
das
aam
xchg
sbb
mov
bound
mov
stos
je
xor
adc
or
mov
jnp
or
in
fsubrp
jae
repz
fs
es
hlt
out
pop
mov
out
insl
cs
pushf
test
lret
pop
mov
negb
fst
ds
mov
or
jmp
push
pop
cs
dec
scas
jl
jg
adc
ja
aam
or
sub
in
push
leave
test
lods
cltd
imul
adc
stos
shl
test
aaa
xor
mov
pushf
icebp
ja
sti
outsb
in
ss
stos
lds
add
cld
ljmp
or
dec
loop
xor
and
lds
push
jecxz
das
xchg
jae
mov
mov
add
out
adc
adc
nop
push
fidivl
addb
mov
lcall
jl
xchg
ds
push
xor
add
add
loopne
push
inc
fsub
scas
lock
sub
popf
sbb
lea
and
jne
mov
xchg
mov
faddp
cmp
fnstenv
add
fdivs
mov
pop
xor
mov
es
std
mov
mov
aaa
lret
adc
movsb
jnp
xor
ret
jp
outsb
push
sub
into
ljmp
or
and
inc
push
and
iret
jmp
jns
push
push
or
call
mov
out
shl
cmpb
sub
or
repz
sahf
dec
xor
mov
movsb
les
pop
das
js
mov
popa
lds
push
jle
popf
jnp
jg
int
cwtl
pop
sbb
jle
int3
mov
ljmp
mov
xlat
es
xor
xchg
inc
push
imul
sbb
test
xchg
mov
jb,pt
cmpsb
fdivrs
mov
ja
push
dec
int
imul
jle
mov
and
addr16
sub
fidivrs
sbb
addr16
aam
inc
mov
xor
das
les
xchg
cld
push
ret
push
push
pop
pop
pusha
bound
pop
addb
addb
push
xor
cmp
inc
fsubrs
dec
xchg
shrb
pusha
xchg
mov
ds
fcmovb
push
inc
sti
orl
fcomps
push
jnp
pavgb
and
popa
fstps
addr16
adc
mov
call
xchg
inc
push
cmp
sub
fildll
out
sti
push
fbld
mov
fdivrl
inc
idivb
ret
dec
mov
imul
insb
and
dec
mov
jne
out
jecxz
je
fstpl
mov
adc
repz
ljmp
enter
jmp
xor
mov
lods
fsubs
sub
adc
cmp
xor
jbe
mov
mov
adc
mov
push
pop
icebp
pop
out
lcall
and
mov
call
sub
in
call
jno
jno
jne
xchg
cmp
lock
and
cmc
push
fiaddl
push
test
movsl
out
mov
pop
out
xchg
dec
retw
push
add
arpl
fld
pusha
push
andb
xchg
js
aad
inc
dec
mov
into
int3
adc
mov
inc
rcr
mov
mov
pop
sub
inc
mov
mov
mov
jmp
in
push
cmp
cwtl
repnz
xchg
repnz
jl
jne
notl
mov
jbe
add
mov
xlat
dec
aad
pop
insl
jnp,pn
fadds
and
mov
adc
adc
pop
mov
mov
fwait
das
das
inc
inc
add
xor
orb
cmp
enter
adc
mov
inc
incb
je
dec
ss
and
fmull
lea
daa
mov
inc
imul
addr16
popa
mov
in
adc
jg
xchg
pop
add
stos
jbe
inc
or
hlt
xchg
push
cld
jge
ret
push
push
cltd
repnz
pop
loopne
dec
roll
xchg
mov
xchg
jo
inc
lret
adc
add
mov
cs
mov
insb
mov
add
ficoml
pop
aaa
lcall
gs
xor
aaa
mov
shrb
xor
jl
cmp
ss
xor
xchg
cmp
cli
and
enter
mov
adc
dec
enter
ret
je
adc
mov
arpl
cli
pop
mov
mov
lods
cmp
mov
and
rol
popa
negl
push
fnstcw
push
mov
pop
andb
sub
jmp
stos
pop
out
lock
or
mov
push
cmpsb
and
xchg
dec
sahf
inc
pop
addl
add
xor
rcrb
scas
sti
lods
ret
jb
xor
aad
mov
inc
cli
addr16
adcb
jg
or
in
jmp
lods
jmp
mov
dec
push
adc
mov
xchg
mull
shl
arpl
dec
cs
ds
push
movsl
aam
adc
bound
mov
xor
mov
pop
add
icebp
fildll
inc
xor
mov
iret
pusha
push
mov
daa
jbe
push
or
and
inc
int
rorl
jo
add
push
mov
mov
xchg
xor
out
out
push
and
rcll
lds
pop
out
or
xor
pop
cmp
fsub
cmp
push
mov
into
inc
aam
mov
cltd
stos
fucomp
sarb
add
in
mov
mov
sti
adc
mov
sbb
dec
bound
fbstp
shlb
in
ds
sbb
aas
mov
test
dec
fst
sub
mov
lock
add
push
cs
sbb
in
bound
mov
jne
mov
bsf
cwtl
lcall
js
cwtl
arpl
dec
cmp
jl
inc
sub
pop
dec
sub
icebp
cs
cmp
xchg
cmp
push
jecxz
pop
cmc
xor
loope
sbb
push
mov
je
das
jle
test
xor
cmc
add
rcrl
jnp
les
sub
sbb
fisubrs
shrl
or
fdivr
lret
or
push
mov
movsl
clc
xor
fs
xchg
cmp
jle
sub
ret
cmpsl
dec
outsl
dec
mulb
push
lods
lock
in
popa
and
add
aaa
inc
dec
insb
mov
inc
jge
movsb
sarl
ljmp
testb
fstl
jg
mov
ljmp
adc
xor
scas
mov
xor
cmp
rolb
push
push
dec
jnp
inc
dec
add
iret
wbinvd
sysenter
adc
jb
mov
sahf
stc
mov
inc
and
pop
int
pop
mov
sbb
das
mov
jns
addr16
push
or
mov
cmpsl
cmp
mov
fwait
roll
fnsave
dec
cmp
jg
in
and
pop
xchg
and
add
xor
sub
adc
out
pop
popf
push
idivl
enter
into
mov
ret
mov
das
mov
js
jmp
add
out
maxps
ljmp
cmpsl
mov
dec
fisttps
inc
cmp
inc
cltd
dec
pop
daa
pop
std
out
jmp
add
sbb
leave
ja
cmp
pushf
nop
enter
fildll
mov
ss
mov
add
xlat
cmp
mov
mov
cmpsb
cmpsl
fcomps
shlb
rorb
xor
cld
adc
cld
xchg
push
push
jmp
sahf
popa
cmpb
jns
cmp
jnp
imul
pop
stc
fyl2x
pop
xchg
icebp
jmp
bts
popa
popa
test
or
push
fisubl
pop
divl
xchg
adc
mov
add
xor
xchg
imul
ss
fdivs
xlat
jmp
dec
mov
stos
pop
adc
shl
mov
jnp
cld
test
pusha
movsl
sbb
ret
rcrl
ret
push
out
sahf
data16
pop
dec
mov
push
mov
in
jp
loopne
clc
push
add
mov
dec
shlb
jnp
xchg
pop
add
loope
mov
aam
mov
jno
xorl
ret
sti
addr16
in
dec
pusha
mov
dec
sbb
sahf
hlt
cmp
jmp
jmp
xor
fimuls
mov
inc
insb
jnp
or
adc
cmpsb
sub
mov
cli
push
mov
pushf
rcl
push
fisubl
aas
aad
inc
and
jae
mov
and
shll
addr16
ja
dec
mov
mov
arpl
xor
cli
xlat
stos
mov
push
mov
dec
add
push
cmc
scas
mov
rolb
sub
mov
sub
fsubl
orl
xchg
pop
int
inc
push
jge
jle
int
jne
xor
sbb
xchg
aas
dec
cmp
aaa
push
adc
push
sar
mov
jmp
xor
sbb
or
daa
fisttpll
shrl
pslld
dec
cs
lods
jbe
jns
push
rolb
add
ja
adc
cmp
adc
jns
fwait
je
outsl
push
push
iret
faddl
insb
ret
scas
inc
out
cmpsl
mov
push
push
bound
testb
arpl
stc
nop
push
sti
in
xor
outsb
ret
mov
subl
flds
xor
fsubp
mov
mov
sbb
or
push
adc
and
cwtl
ds
add
adc
cmpsl
jg
jb
int3
or
inc
divl
data16
xlat
cltd
aas
adc
jl
repnz
test
scas
sets
fisubs
adc
or
mov
xchg
enter
orb
daa
shr
and
nop
mov
mov
lea
jmp
rolb
int
out
pop
dec
add
mov
pop
pop
mov
or
jle
and
dec
into
in
pop
jbe
sub
cmpsb
sub
jns
mov
push
jmp
stos
dec
repz
xchg
popa
fcmovnu
cmc
lods
add
sub
sti
aas
loopne
mulb
dec
cmp
js
ret
xor
sahf
call
mov
repz
sub
cs
mov
mov
xchg
test
stos
dec
mov
pop
std
add
push
sbb
push
mov
in
aaa
pop
xor
push
push
jne
dec
aam
movsl
jae
pop
jmp
add
pop
sbb
jnp
jle
fcmovnbe
test
mov
adc
and
stos
cmp
xor
pop
adc
das
sub
pop
jge
push
hlt
mov
xor
dec
jp
rol
inc
sub
push
dec
mov
dec
jo
cli
sbb
call
icebp
stc
outsl
xchg
int3
hlt
push
push
lahf
pusha
dec
and
jg
xor
mov
xchg
scas
cli
sahf
daa
xorb
stos
push
jle
lcall
imul
imul
ret
hlt
stos
outsb
jle
in
daa
sub
je
dec
sbb
xchg
jb
add
or
aad
mov
arpl
xor
popa
push
decb
iret
int
mov
scas
repz
aas
pop
gs
ljmp
sbb
scas
sub
dec
xor
push
sbb
aaa
roll
nop
pop
out
data16
aas
das
scas
sbb
fiaddl
pushf
inc
int3
fimuls
pusha
xchg
popf
pop
mov
dec
inc
sub
inc
sub
sti
mov
jae
cmp
sti
sysenter
in
movsl
ljmp
add
xlat
bound
mov
testl
repz
mov
aad
sti
cmpsb
mov
mov
inc
xchg
cwtl
sahf
mov
push
adc
xor
cmp
sti
in
pop
daa
xor
fldl
imul
loope
jno
jb
jbe
jle
cltd
or
xchg
mov
mov
fidivrl
adc
mov
mov
mov
repnz
inc
mov
mov
fneni(8087
xchg
mov
popa
mov
push
cwtl
rolb
enter
jo
add
add
add
push
push
adc
jns
into
mov
cmc
pop
mov
push
icebp
lods
jle
xor
xor
cltd
xchg
xorl
aad
pop
and
pusha
sti
mov
jne
lock
pop
pop
xor
aam
stc
out
fwait
push
scas
push
xorb
inc
movsl
xchg
cmp
or
mov
stos
lock
and
pop
xchg
dec
and
popa
aam
add
pop
fstpl
iret
fsts
addr16
mov
jno
mov
inc
orl
cmpsb
adc
xor
xlat
push
jae
fisubrs
jbe
dec
gs
fucomp
fcmovnbe
xchg
mov
mov
sbb
roll
add
in
or
movsb
testl
sub
std
cwtl
lret
or
stc
into
inc
pop
mov
jge
pop
popf
lahf
mov
mov
push
movsl
cmpsl
not
mov
cmp
ss
fwait
lcall
shlb
stc
call
in
sahf
data16
xchg
ret
loope
push
push
idiv
fwait
pop
push
jns
je
cli
pushf
cmpsb
shll
mov
mov
sub
xchg
lods
pop
enter
mov
popf
or
leave
cmc
mov
out
int3
pop
push
aad
adc
mov
add
leavew
mov
xchg
lahf
mov
push
xor
lds
notl
test
dec
in
pop
hlt
mov
jmp
mov
adc
fstpt
shr
mov
xor
mov
jb
adc
addr16
sbb
pop
mov
add
inc
scas
cltd
xchg
mov
jo
pop
nop
push
xor
adc
adc
lret
push
add
push
sub
imul
fdivl
mov
adc
dec
cmp
roll
lcall
push
stos
fs
dec
icebp
ljmp
xchg
sbb
andl
rcl
mov
push
lret
aam
pop
jbe
adc
out
adc
mov
lahf
jl
dec
sahf
pop
adc
pop
jg
cltd
adc
adcb
cmc
nop
push
add
sub
mov
loopne
test
inc
dec
dec
nop
call
aam
in
or
pop
aad
inc
add
sbb
ljmp
inc
pop
dec
pop
dec
cmp
test
push
inc
xchg
pop
es
nop
test
pop
pop
les
pop
fmull
fstpl
or
movsb
adc
jb
mov
int
inc
repnz
lret
cmp
mov
hlt
cwtl
mov
sbb
dec
mov
sub
sub
mov
pop
mov
dec
leave
ljmp
lret
pop
xlat
xor
ss
and
das
movsb
mov
xchg
add
add
loop
loopne
dec
pop
negl
adc
cmp
pop
mov
lds
out
xchg
cmp
sub
lock
dec
push
mov
fldenv
dec
push
insl
dec
shl
jae
stc
cmp
pop
push
lahf
mov
mov
icebp
rorb
aad
mov
or
push
cltd
push
mov
out
call
rolb
adc
mov
cmp
test
mov
je
adc
addr16
lods
jp
in
dec
cmc
mov
fisubs
lcall
mov
push
sbb
enter
lods
popa
sbbb
mov
pop
inc
hlt
add
ret
sub
dec
or
dec
xor
popf
loop
inc
repnz
pop
pop
inc
jo
xor
jnp
xor
mov
add
or
dec
inc
mov
lahf
call
dec
jb
xchg
mov
out
lods
xor
xchg
xchg
mov
jbe
add
pushf
test
clc
cmpsb
ficompl
adc
xchg
insl
inc
sub
hlt
jmp
lret
xor
das
cltd
imul
mov
mov
inc
mov
fcomps
push
stos
push
mov
mov
out
sti
imul
addr16
mov
mov
mov
ja
cld
shrb
lret
push
std
and
pop
fwait
int
lea
jp
daa
xchg
mov
adc
out
testl
mov
arpl
repz
xchg
fsts
call
ss
rorb
fstl
fprem
idivb
lods
jne
fwait
lods
and
mov
xchg
push
sub
cmp
adc
push
cmpsl
inc
mov
pop
outsb
adc
xor
mov
ljmp
jo
pop
js
lret
push
mov
jb
int3
lcall
jle
loope
mov
cmpsl
xchg
jnp
mov
dec
inc
inc
jo
shr
ficoms
in
movsb
insl
mov
push
les
pop
sbb
inc
or
scas
cmpsl
in
jbe
gs
and
popa
icebp
gs
pusha
icebp
mov
popa
cmpsb
into
je
das
push
jmp
inc
roll
clc
pop
shl
sbb
mov
cmp
sbb
js
lods
jmp
pop
cs
adc
cmpsb
std
aaa
outsl
push
lcall
mov
inc
sub
sub
xor
dec
add
ret
sub
add
sub
push
imul
outsl
pop
inc
sub
pop
push
int
jmp
call
fisttpl
mov
pop
sub
xor
cwtl
add
inc
push
mov
int3
mov
pop
sbb
mov
xlat
push
and
fidivs
mov
sar
dec
das
add
out
push
sub
in
pop
mov
mov
dec
sub
lcall
in
jno
pop
jb
testl
or
subl
xchg
sbbl
push
xchg
fdivrs
shl
xor
xchg
bound
loopne
push
ja
loopne
es
xlat
shlb
or
mov
xchg
call
js
and
mov
mov
lods
or
sbb
xchg
mov
lods
ss
cmc
push
in
gs
sub
popa
icebp
push
push
repz
mov
addr16
ss
xor
cmpsl
test
test
out
dec
mov
sahf
pop
xchg
add
push
shr
inc
jecxz
fs
push
test
fs
and
mov
xchg
movb
fistl
mov
das
rep
test
repz
inc
popa
dec
xchg
pop
arpl
xchg
adc
popa
or
xchg
xorl
loop
pop
bound
dec
inc
cltd
pop
inc
in
fucomi
and
lret
mov
mov
push
mov
pop
fs
and
lahf
out
xorl
jmp
cmpsl
jmp
imul
icebp
inc
mov
xor
cld
aas
daa
mov
jo
das
sar
mov
push
inc
mov
cmp
push
pop
or
and
push
jg
dec
popa
xchg
push
enter
jnp
push
mov
jmp
add
in
test
vpunpcklbw
mov
mov
dec
pop
bound
es
jecxz
out
lods
pop
les
xor
add
and
cmp
daa
dec
arpl
sub
cli
sub
push
adc
movsl
mov
push
clc
nop
movsb
aas
pushf
loopne
jge
xor
jmp
cmp
stos
dec
ds
fiaddl
stos
sbb
cmp
or
add
cmpsb
and
call
pop
inc
push
jb
ret
mov
les
xchg
das
push
ret
jae,pn
pop
std
xor
popf
add
call
rorb
add
mov
shll
sti
cmpb
gs
iret
mov
jne
fdiv
lret
cmp
xor
sbb
push
inc
jno
sahf
nop
and
pop
and
enter
cmp
daa
or
push
add
and
mov
jnp
or
ss
adc
cmp
xorl
pop
out
fwait
inc
push
pop
cld
inc
jp
jb
aaa
and
push
test
je
push
ss
push
inc
jb
mov
and
out
mov
les
loope
fcompl
neg
cli
jns
mov
xchg
dec
mov
jo
roll
flds
mov
adc
movsl
jb
xchg
outsb
hlt
push
movsl
gs
jne
sub
scas
cmpsl
jl
and
inc
xchg
jo
pop
jnp
xchg
ja
and
adc
push
push
lret
jge
or
popa
repz
and
out
shrl
dec
cmp
lock
data16
jp
add
stos
cltd
int3
jo
and
cld
inc
xchg
add
stc
imul
stos
repnz
jns
fs
mov
jns
cli
fwait
stos
addr16
test
mov
add
imul
jb
xchg
fwait
fwait
cmp
mov
out
dec
cmpsb
sub
lahf
xchg
sub
push
push
cld
mov
push
xchg
stos
sbb
mov
mov
sbbb
mov
mov
xchg
fsubrs
push
not
decl
xor
popf
sbb
rep
aam
xchg
xchg
mov
lahf
das
adc
cwtl
rcll
xor
mov
out
jo
fcmovnu
sub
pop
nop
cmp
jno
mov
mov
fildl
aaa
mov
fwait
sti
xor
xor
adc
push
add
mov
lahf
jecxz
shlb
aam
push
cli
scas
testb
enter
sti
inc
xchg
in
shll
add
pop
adc
popf
rcl
pop
test
test
push
clc
vorpd
push
clc
sbb
outsb
add
push
les
pop
aaa
push
mov
ljmp
xchg
xchg
sub
in
repz
lea
and
cmp
sub
push
fldcw
sbb
nop
push
fsts
test
or
outsl
inc
push
shl
and
xor
xchg
shll
mov
icebp
inc
aas
add
sub
push
xor
mov
xor
test
mov
or
jbe
and
inc
aam
jb
stos
and
fwait
inc
fwait
or
orb
shlb
dec
int
je
out
xor
xlat
add
pop
and
sbb
loop
stos
mov
jbe
mov
push
fcompl
xor
push
shlb
mov
inc
gs
inc
mov
sbb
clc
inc
sbb
inc
cltd
sbb
mov
jns
lock
test
mov
add
dec
enter
pop
cmp
xchg
mov
lock
testl
jmp
fwait
pop
mov
movsb
add
inc
mov
and
mov
and
cmp
sub
arpl
pop
fwait
add
mov
test
fs
mov
xchg
bound
enter
iret
xchg
xchg
add
mov
nop
sub
or
jne
xor
stos
cmova
aam
inc
sahf
mov
cld
incb
xor
push
aas
push
call
loope
ret
divl
stc
stos
lock
or
f2xm1
pop
les
push
jecxz
cmp
fs
xchg
cli
and
sbb
mov
mov
and
insb
mov
cmc
test
ffreep
inc
sbb
cmp
jno
in
fistl
and
xchg
ja
fsubrl
jae
fcoml
in
adc
mov
in
ds
inc
cmpsl
in
fwait
insb
push
lcall
iret
sub
pusha
mov
cwtl
test
sbb
xor
std
dec
ja
cli
push
loop
test
rcr
adcb
push
mov
inc
lds
push
sbb
pop
sub
sbb
lds
xlat
dec
mov
sub
in
xor
test
inc
inc
clc
mov
cs
jle
push
mov
and
mov
dec
test
aam
lods
sarl
icebp
mov
shll
fsubs
iret
cmp
std
notb
xchg
mov
das
cltd
sub
or
mov
ss
cmp
lds
mov
lahf
push
dec
push
neg
sbb
adc
iret
out
xchg
jne
int
jbe
and
daa
xchg
sbb
jbe
stos
mov
mov
dec
das
lcall
subb
pop
adc
or
xchg
mov
stos
mov
les
jne
outsb
jae
mov
cli
sub
sbb
test
inc
mov
mov
mov
int
lcall
stc
and
shr
repnz
pop
cmp
add
inc
rcl
cmp
sub
xchg
andb
out
loopne
in
or
add
inc
jne
jg
mov
mov
cli
stos
enter
loopne
jle
movsb
mov
lds
or
mov
ret
jno
stos
xchg
das
push
or
es
aad
fxch
sub
xor
xchg
movsl
push
fstl
mov
in
imul
jb
gs
add
divb
fistl
push
lods
fists
pop
inc
mov
ret
dec
sbb
cmp
jle
push
sub
aas
test
cmp
pusha
sub
push
inc
loop
std
out
add
or
push
inc
stos
inc
movsl
inc
loopne
jmp
sbb
arpl
cmp
les
push
push
maskmovq
xchg
test
movl
and
bound
leave
fcompp
ss
cmpsl
mov
dec
push
lock
xchg
or
jb
xchg
test
xor
cmp
mov
fiadds
ja
popa
es
cmp
aam
mov
dec
pop
pop
sbb
mov
xor
fwait
lcall
incb
lea
repnz
sub
je
jbe
pop
stos
cmpsl
out
pop
or
mov
loopne
cs
sbbl
shlb
cmp
cmp
dec
repnz
sbb
loop
loop
push
mov
addr16
inc
pop
repnz
test
jmp
mov
lcall
jne
inc
sbb
clc
cmovo
mov
out
inc
push
mov
jns
sub
mov
insl
mov
lds
or
push
jge
sub
dec
pop
iret
rorl
nop
pop
test
jp
imul
or
mov
call
pusha
jno
out
sbb
repnz
pop
inc
sub
xchg
test
imul
ds
imul
jne
lods
mov
insl
mov
mov
mov
pop
aam
add
and
clc
pusha
and
mov
mov
xchg
fwait
dec
mov
add
sahf
sbb
rorb
jecxz
sub
aas
jge
jne
iret
cmp
sbb
add
leave
adc
mov
mov
xchg
push
dec
push
jnp
push
sub
sub
or
adcl
frstor
or
adc
sub
mov
orl
fwait
xchg
dec
cmp
sahf
push
sub
icebp
imul
aad
mov
out
test
sub
jle
cmpb
or
cld
jl
movsb
mov
inc
mov
pop
adc
add
cld
adc
mov
xchg
popa
ljmp
movsl
rorl
dec
test
movsb
dec
out
pushf
mov
push
jmp
fwait
mov
das
dec
addl
mov
imul
add
popa
sbb
loop
dec
jae
sub
lahf
lds
mov
add
out
mov
mov
dec
lcall
je
push
imul
pushf
popa
pop
xchg
enter
or
mov
sbb
ljmp
sar
add
pushf
ss
inc
outsl
fcmove
or
and
cmp
flds
xor
sbb
fstpt
mov
sub
mov
les
cmp
stos
xchg
cmp
outsb
mov
cmp
movsl
lock
pop
push
and
fdivs
rolb
push
sub
xor
sar
cmp
test
lods
mov
xorl
pop
stos
jne
xchg
xchg
sarb
leave
lock
imul
shlb
dec
fld
out
jp
les
push
out
sub
push
cmp
fsts
sbb
adc
inc
pushf
lods
adc
xorl
out
insb
jge
inc
es
cli
inc
stc
mov
shlb
adc
push
pop
push
xor
movsb
mov
xor
mov
rorb
inc
jb
test
and
fs
pop
jle
lods
iret
ficoml
mov
and
stos
dec
bound
sub
cmp
fwait
xor
push
iret
repnz
mov
iret
sbb
inc
mov
out
out
jp
in
iret
iret
lret
in
sti
xchg
fcmove
cwtl
outsl
jne
push
int3
std
mov
jnp
mov
mov
adc
out
dec
loope
push
xor
mov
test
movsb
out
repnz
in
push
cmp
jo
orb
dec
mov
cli
test
jne
or
jecxz
jae
subl
ds
mov
fs
jp
pop
fisttpll
leave
xchg
mov
jo
inc
cmp
in
jl
add
ss
imul
movsb
es
fcoms
bound
lret
jl
aas
ss
jle
or
sub
mov
test
push
loopne
mov
sbb
test
and
js
enter
fadds
lods
mov
in
cli
cmp
fstpl
call
pop
sbb
jno
adc
cmp
and
or
mov
inc
decb
lahf
dec
lods
int3
sti
sub
mov
dec
xchg
pop
imul
cmp
jg
inc
popa
cmp
xor
cmp
xor
or
mov
divb
xchg
out
jmp
xor
xchg
imul
mov
xchg
adc
loopne
adc
cmp
decl
dec
rclb
subl
sbb
aad
xor
movsl
pop
sbb
inc
or
hlt
cmpsl
sbbl
dec
cli
test
xchg
ficoml
xchg
lcall
std
cmp
out
jl
jmp
push
incl
pop
pop
lret
insl
insl
xchg
outsl
xchg
lods
divl
push
lock
dec
push
adc
lock
pop
add
mov
sahf
lea
or
xchg
hlt
ret
pop
inc
push
or
xchg
popa
pusha
insl
icebp
push
pop
mov
mov
xchg
paddsw
and
shr
and
jno
daa
sbb
test
add
sub
dec
pop
jbe
scas
jns
js
repz
pop
jg
adc
or
in
push
iret
xchg
popa
arpl
mov
leave
add
aas
and
mov
sbb
ficoml
push
jge
sarl
push
dec
jb
cld
add
mov
scas
or
js
test
decb
dec
add
sarl
fwait
xchg
nop
mov
test
xchg
or
sub
mov
jo
pusha
adc
adc
inc
sahf
arpl
jne
bts
lods
push
jge
sub
pop
mov
add
and
dec
sub
iret
testl
fucom
xchg
int
xchg
jmp
mov
fcompl
shl
and
mov
sbb
adc
cli
push
int
fwait
lock
sub
jnp
adc
mov
jp
test
fsubrp
lods
push
cmp
sub
lods
aaa
fldl
jle
pop
xor
sub
pop
xor
jl
xor
cs
sub
jmp
push
adc
cmp
mov
icebp
scas
jne
pop
mov
insb
jb
adc
xor
push
xor
jle
adc
pop
mov
aas
mov
ljmp
cmp
fstps
les
aad
cmp
add
leave
bound
push
sbb
sbb
inc
dec
clc
imul
push
jle
shrl
push
and
mov
sbb
or
cmp
in
sub
jmp
out
loope
dec
push
cwtl
mov
shll
dec
leave
xor
mov
push
stos
push
inc
imul
ficomps
mulb
xor
cmc
pop
or
daa
pop
xchg
sub
inc
scas
arpl
mov
xchg
add
ja
mull
pop
divb
fidivs
dec
xchg
bound
xchg
jb
loope
pop
and
lcall
andl
shrl
ror
nop
cmp
imul
sti
loope
rorb
pop
push
sbb
jg
cmpsb
pop
nop
fisttpl
mov
popf
adc
jbe
rcrl
push
sti
add
mov
in
jns
mov
aas
xchg
or
lea
outsl
in
out
sub
xor
inc
cmc
std
subl
scas
lea
add
inc
jno
pop
dec
jae
pop
bound
xorb
iret
pop
push
cld
mov
dec
rcl
adc
imul
sub
lods
nop
ret
arpl
cltd
jo
mov
out
stc
add
pop
fcompl
inc
fdiv
jnp
or
xor
shrl
push
lea
adc
out
lcall
ss
mov
and
xor
icebp
adc
int
mov
xchg
das
and
shrl
mov
sbb
dec
cmpl
repz
and
xchg
movsl
mov
inc
jo
loope
inc
mov
fdiv
sbb
push
fadds
out
cmp
fldl
cmpsb
imul
repz
cmp
mov
mov
frstor
dec
lods
rcrb
and
testb
mov
out
add
outsb
into
sahf
pop
jle
xor
out
mov
fsubrs
out
test
mov
lea
or
shrb
test
jg
xor
ds
sub
data16
cmp
xor
call
shrl
or
jo
jbe
stos
mov
and
pop
mov
imul
je
pusha
or
dec
sub
jmp
outsl
aas
scas
stos
mov
push
cmp
xchg
mov
ljmp
adc
xchg
add
cmp
xlat
stc
popf
mov
cmpsb
adc
cmpsl
add
les
mov
das
ret
mov
cli
and
adc
adc
dec
icebp
push
inc
ja
je
mov
dec
addl
int
inc
cmc
sbb
or
push
testb
cld
subl
sub
cld
sar
fsubrp
adc
lods
push
cmp
sbb
mov
xchg
sbb
hlt
xor
rcrl
mov
call
sbb
sub
mov
sub
mov
lcall
fisubrl
sbb
cmp
inc
mov
pushf
jno
mov
mov
fstps
shrl
jbe
add
enter
std
aas
js
dec
aad
stc
lds
pop
mov
sbb
into
adc
sub
jb
je
ss
mov
aas
cmp
xchg
popa
sbb
in
popf
call
add
inc
mov
movsb
fstps
mov
lods
inc
sub
sbb
test
or
fs
sti
out
pop
aam
mov
push
mov
push
xor
xchg
or
call
out
dec
rcr
jo
jbe
scas
or
dec
clc
dec
add
sbb
dec
cld
push
aad
stos
sbb
sbb
mov
mov
je
and
add
dec
cmp
cli
test
cwtl
das
mov
testb
sbb
sub
scas
es
ja
push
imulb
iret
lret
sub
sbb
insl
mov
mov
bound
out
cmc
fs
rol
negb
dec
enter
fstps
jae
cli
leave
add
imul
mov
pop
pushl
and
cli
pushf
add
lods
push
fxch
push
adc
jle
js
mov
les
sahf
or
cmp
push
jo
xchg
sbb
sbb
pop
jg
stos
mov
xlat
data16
mov
pop
pop
dec
pop
fmull
adc
imul
xchg
fiadds
std
bound
aad
push
push
les
jl
arpl
push
mov
or
sbb
xchg
mov
notl
rcll
mov
add
fwait
fwait
mov
stos
xchg
loop
push
enter
push
dec
notl
or
cmp
outsl
and
adc
adc
fdivrs
in
cmpb
dec
loope
movsl
jnp
popf
outsb
repnz
fsubrl
pushf
addr16
ror
or
enter
cmpsl
adc
aaa
lock
lret
lret
int3
mov
and
or
jns
cli
imul
lahf
jo
lret
and
mov
inc
pushf
cltd
mov
rcr
arpl
jle
xchg
xor
movsb
cwtl
sub
ds
shlb
shlb
mov
xor
sbb
cld
push
fdivrl
mov
into
jmp
lahf
lods
loopne
jae
mov
xchg
cmp
outsl
dec
cltd
add
pop
scas
div
shlb
jl
mov
jg
mull
push
xchg
jle
scas
cmpl
mov
cltd
mov
movsl
xchg
mov
jns
call
or
aas
scas
pushf
movnti
mov
mov
jmp
jo
push
pop
or
bound
pop
pop
insl
and
fs
outsl
orl
test
push
mov
mov
aas
stc
xchg
pop
mov
in
jl
les
cltd
pop
mov
leave
inc
ds
xchg
add
shlb
pop
inc
push
jnp
ja
or
mov
cmp
mov
subl
fists
adc
jnp
movsl
and
dec
xor
add
xor
call
call
cmp
dec
jecxz
push
mov
pop
scas
xchg
popf
aaa
mov
mov
xchg
xor
lock
mov
cltd
cmpsb
xor
out
icebp
mov
enter
iret
mov
fisubrs
fst
scas
pop
or
xor
sbb
jne
mov
mov
adc
xor
push
aas
cli
movsl
fdivrp
fisubs
cs
jp
inc
xchg
push
ljmp
dec
adc
test
add
cs
xchg
cmpsl
scas
dec
lahf
jl
dec
fistl
outsl
xorl
sbb
pusha
lea
add
lods
test
push
mov
push
mov
xchg
int3
fnstcw
lock
ret
sbbb
pop
jge
mov
add
jg
aaa
pop
fs
jp
pop
or
xchg
out
jbe
rorl
ljmp
shl
stos
outsl
push
mov
pop
push
outsl
inc
dec
sub
mov
lock
in
aam
xchg
inc
xlat
lock
xor
aad
sub
or
jecxz
mov
lods
shlb
dec
jge
and
aam
fimuls
out
lea
repz
mov
or
push
cld
lret
lcall
mov
mov
out
push
pop
pop
pop
sub
leave
jge
nop
adc
xor
out
scas
push
mov
mov
js
xor
jae
mov
divl
ja
sbb
daa
jnp
rolb
cmpsl
pop
cmpsb
jle
xchg
xchg
test
and
icebp
jns
and
jg
rclb
add
cs
mov
mov
cmpsb
inc
iret
jle
push
mov
test
sti
pop
mov
test
xchg
inc
js
jl
pop
mov
pusha
fcompl
jg
dec
test
pop
inc
push
jnp
sub
sub
push
xor
cmpsl
jo
mov
or
test
fisubs
jp
push
ljmp
test
mov
iret
or
rorb
enter
in
mov
push
and
push
and
movsl
std
filds
clc
imul
cltd
cld
mov
loop
inc
addb
add
adcl
and
decb
mov
inc
lds
lods
sub
xchg
or
test
add
add
push
cmpsb
mov
aad
je
xchg
out
xor
xchg
cmp
cs
push
cmp
repnz
xor
adc
and
rol
pop
lds
pop
mov
push
mov
int
dec
xor
call
mov
push
loop
sahf
packssdw
nop
ljmp
insb
sub
or
mov
add
leave
mov
iret
mov
adcl
shll
mov
leave
outsb
out
sahf
and
ret
sar
mov
inc
andl
push
inc
bound
jnp
hlt
xchg
test
lock
enter
xor
push
insb
or
jle
imul
in
std
pop
aas
shll
push
mov
mov
jmp
adc
test
xor
or
mov
pop
fsubrs
xchg
xchg
adc
cmp
loope
fisubl
int3
pop
test
pop
and
add
in
stc
negb
add
jle
dec
jg
push
cmpsl
or
pop
cwtl
mov
mov
mov
jp
aaa
xor
mov
movsb
aaa
push
movsl
cmpsb
test
cmp
sti
or
stos
and
in
cmp
inc
loop
mov
add
pop
push
adc
repz
xor
mov
cs
inc
arpl
mov
pushw
or
imul
cmp
inc
lock
mov
subl
setge
les
int3
dec
ret
jbe
pop
and
jb
imul
mov
adc
sahf
inc
cmp
stos
je
outsb
jmp
mov
jns
and
add
outsl
dec
pop
push
mov
xor
or
sti
cmp
jo
pop
dec
cmp
sbb
add
out
pop
roll
pop
push
xchg
dec
or
cmp
bound
ja
pop
xor
jo
mov
mov
cmpl
adc
cmpsb
sub
ss
xor
jbe
fdivl
xor
jle
cmpsl
xchg
test
cmc
dec
outsb
add
fwait
ret
fdivs
into
mov
mov
insb
cmp
cwtl
in
mov
mov
movsl
xchg
repz
push
or
and
add
xorb
ror
xor
je
or
mov
xor
add
je
bound
les
lods
idiv
data16
mov
dec
xor
lahf
xor
push
sbb
mov
push
add
pop
push
in
fdivrs
sarb
lret
mov
notb
dec
aam
aas
jbe
outsl
jne
std
lea
push
adc
mov
xchg
mov
or
xchg
sub
lcall
pop
xchg
cmpsl
popa
and
adc
scas
xchg
cmp
mov
xchg
jae
rcrl
push
mov
inc
lret
cli
cmpsl
out
push
mov
sti
mov
sub
loop
xchg
or
add
mov
or
push
mov
and
fidivl
loopne
pushl
xchg
and
inc
test
inc
addw
addps
ljmp
xlat
sub
inc
dec
test
cs
and
pop
inc
arpl
or
push
pop
test
push
sahf
rorb
pop
pushf
push
cltd
das
imul
xchg
sbb
cmp
loop
test
fwait
mov
fsubl
mov
mov
out
cltd
les
fdivs
mulb
sbb
in
jecxz
cli
jge
jle
cmpsb
lock
repnz
iret
add
xchg
mov
fstl
dec
xchg
or
ds
pop
mov
stos
das
fcomps
js
inc
xchg
mov
mov
inc
test
pop
in
insb
xor
dec
fdivrl
xchg
push
jecxz
pop
or
pop
xor
add
frstor
hlt
mov
orb
ficoms
fnsave
or
inc
cld
rorl
sub
sub
xlat
cmp
faddl
loopne
lcall
pusha
mov
add
stos
sbb
push
inc
dec
inc
and
xchg
cs
subl
mov
cmp
adc
push
icebp
sub
jmp
stos
jae
icebp
mov
mov
xchg
addl
in
xor
ja
adc
dec
mov
test
cmpsl
lret
ds
sub
das
shlb
jmp
cmp
aam
out
addr16
stos
mov
out
lcall
add
lds
addl
cli
pop
jbe
scas
testb
clc
and
movsb
and
sub
sub
push
dec
in
mov
add
jl
fldenv
mov
add
shll
cmpb
pop
xchg
je
add
pop
add
xchg
cmpsb
fsts
sub
dec
nop
jmp
cmp
in
adc
push
sarl
lods
adc
leave
aas
sub
and
jle
sub
or
pusha
xchg
sti
fs
call
nop
mov
jbe
ror
push
js
mov
cmp
icebp
rorb
push
pop
and
inc
cmp
sbb
cs
mov
jge
lahf
jb
and
adc
call
sub
js
add
mov
gs
add
adc
xlat
adc
jne
mov
insl
hlt
enter
rcll
negb
aaa
fists
cmc
push
lods
in
outsl
mov
mov
sbb
clc
scas
test
inc
lret
sar
in
jbe
lret
daa
adc
cmp
xchg
push
sbb
xor
cmpsb
hlt
jmp
sbb
rcl
xor
stos
negl
mov
push
cwtl
std
scas
ret
fstpt
cmpsb
movsb
fistpl
push
imull
aam
inc
xor
pop
call
fstps
pushf
lret
or
mov
sbb
pop
jl
cwtl
or
mov
les
mov
out
fdivl
sbb
data16
sub
adc
cs
mov
mov
cmpl
arpl
cmpsb
adc
lret
jbe
in
cwtl
pop
pop
mov
js
imul
sub
cmc
outsl
jle
cmp
std
inc
jge
sahf
sar
push
jecxz
and
xor
cmp
iret
daa
pop
cmp
imul
inc
adc
dec
push
cmpsl
inc
jmp
andb
ret
enter
add
dec
mov
mov
sbb
cmc
or
push
sbb
mov
cmp
aam
lods
adc
es
add
inc
lods
push
and
xor
stos
inc
sub
ljmp
cmp
mov
inc
xor
xchg
arpl
sahf
imul
xchg
addb
mov
dec
push
jl
xlat
jbe
xchg
mov
jnp
mov
gs
cmp
les
and
sub
sub
mov
push
pop
push
hlt
les
jg
mov
mov
mov
xorl
or
lahf
mov
mov
popa
mov
dec
mov
int
push
sti
lret
mov
mov
bswap
subl
xlat
dec
lods
sbb
aad
mov
aam
mov
mov
pop
sbb
jl
xchg
inc
sub
sahf
pop
imul
sbb
lret
mov
xchg
xchg
mov
std
pop
xor
sbb
popf
add
insl
idivl
sbb
pop
mov
mov
mov
and
stos
or
sbb
outsl
lahf
sub
das
xchg
pop
jp
test
xor
xchg
jno
fimuls
mov
inc
cmp
cs
cmp
jp
repnz
and
lods
and
and
ss
adc
repz
mov
push
adc
mov
or
test
xchg
sbb
add
or
cli
sbb
test
mov
movsl
mov
xor
or
and
cmp
mov
add
xchg
dec
push
icebp
bound
or
pop
shrl
sahf
lds
dec
sbb
les
lods
insl
adc
mov
call
pop
cld
out
inc
push
cmpsb
ret
sahf
out
mov
test
pop
sub
stos
cmp
scas
stc
jecxz
xchg
scas
push
bound
rorb
and
mov
sub
int
roll
push
push
mov
fcomip
cmp
loop
lock
jno
shll
dec
jo
xor
push
out
stos
out
shrl
cmp
loope
inc
ret
sub
pushf
insb
adc
xor
les
jmp
mov
pop
mov
mov
push
mov
cltd
sub
out
sbb
push
pop
das
mov
and
add
dec
lods
or
add
call
scas
fs
cmp
mov
and
test
rolb
pop
mov
mov
push
iret
mov
or
inc
divb
mov
je
cmp
test
xor
ret
push
or
cmp
mov
fadds
xor
cmp
in
xor
cmpsb
inc
in
sbb
inc
rorb
nop
xchg
in
lahf
xchg
or
out
xchg
mov
add
aaa
ljmp
sub
shlb
jns
bound
lcall
mov
out
pop
icebp
and
hlt
or
cmp
and
mov
lret
xor
fisttpl
and
fwait
ja
mov
mov
xor
xchg
xor
mov
aad
push
insb
ja
popf
xchg
imul
bound
cmpsl
dec
xor
mov
dec
push
inc
jp
lahf
xchg
rclb
dec
add
mov
int
and
mov
outsb
fadds
fisubl
push
jl
adc
imul
xchg
divb
inc
mov
fstpl
mov
out
mov
ljmp
cmpsb
dec
and
clc
sub
xor
or
mov
insl
lret
addb
mov
xchg
jp
je
push
inc
pop
out
dec
repz
leave
push
inc
aam
testl
insb
sub
jns
mov
sahf
stos
movsb
fs
lret
ss
jmp
xchg
aam
add
xchg
pop
subl
addr16
inc
dec
push
rorb
push
xor
icebp
add
ja
mov
inc
sub
push
mov
jge
les
fldcw
bound
adc
test
mov
ss
mov
xchg
xchg
jbe
sbb
mov
sbb
mov
push
cwtl
inc
jecxz
cmp
and
cmpsl
iret
mov
clc
push
add
adc
and
pop
xchg
adc
xchg
rorb
cmp
inc
pop
sbbb
pop
leave
or
lret
sub
pop
jne
sub
sub
mov
cltd
in
sbb
ljmp
push
int3
out
hlt
push
jb
push
mul
pushf
pusha
cmc
add
repz
push
es
xlat
jmp
fimull
testl
enter
sub
decb
sbb
inc
fbld
lods
cli
ret
sbb
jle
cmpsl
cli
sahf
test
pop
xchg
std
fdivl
daa
push
aad
in
cmp
push
cmovge
clc
mov
and
mov
cli
jno
or
dec
xchg
lds
les
inc
emms
movsb
push
xlat
and
cmpsb
mov
lock
mov
pop
adc
adc
test
out
push
pop
enter
adc
imul
sub
cld
jle
mov
call
icebp
push
jne
maskmovq
idivl
pop
mov
pop
mov
in
scas
push
rorb
sahf
lock
cwtl
int
divl
decb
aaa
ret
mov
or
fwait
lcall
lahf
movsl
je
pextrw
add
mov
mov
and
in
pushf
and
jbe
cmpsb
std
movsb
adc
jno
xor
mov
or
xor
js
or
lods
js
xchg
fistpl
outsl
dec
sub
ds
push
cs
mov
or
ja
addr16
add
rcrb
adc
ret
fstl
aas
pop
and
push
sar
lret
orb
sub
lock
or
push
jle
dec
cmpsl
jno
inc
pusha
push
jmp
xchg
in
or
out
call
popf
pop
clc
mov
mov
jbe
jp
nop
test
movhps
pusha
ret
jge
insl
jae
add
test
outsb
lahf
jbe
mov
xchg
add
mov
jae
ljmp
mov
mov
xchg
jne
lret
add
xchg
test
movsb
xlat
or
insb
bound
in
aam
sub
jnp
jge
pushf
inc
mov
and
shll
jnp
enter
popf
inc
mov
cld
stc
es
add
inc
sbb
mov
fldl
mov
out
notb
jns
fidivs
mov
dec
loope
mov
mov
movsb
fists
and
cmp
enter
out
xor
push
sbb
orl
fimull
mov
fcomip
stos
sbb
rcrb
and
pushf
test
or
repz
test
push
push
sbb
mov
lcall
popf
popa
mov
push
fimull
fisubrl
in
mov
add
hlt
movsl
bound
std
xchg
mov
push
inc
into
jl
cmp
sbb
cmp
inc
dec
pop
mov
dec
sahf
add
gs
outsl
add
mov
jecxz
or
push
neg
lea
dec
sbb
sbb
mov
and
mov
xchg
aad
cmp
jmp
test
dec
and
adc
out
sbb
push
mov
pop
arpl
push
xchg
mov
sahf
mov
std
mov
fisubrs
popa
into
cs
mov
stos
loope
sbbb
and
aad
and
add
cltd
es
mov
fcoms
jbe
cmp
inc
cmp
cmp
xor
mov
push
jno
xor
mov
inc
adc
mov
dec
push
in
pop
das
fwait
xor
mov
ss
xor
mov
or
cltd
pop
pop
lock
mov
xchg
popa
daa
and
pop
incb
out
cmc
push
inc
sbb
push
stos
cmc
or
rcrl
xchg
cmc
sub
ja
cltd
andl
movsb
fs
sub
out
icebp
fsubr
ja
test
in
dec
jmp
lea
mov
or
add
inc
xor
leave
adc
int
inc
je
cmp
cmp
jbe
lock
mov
sbb
xlat
mov
insb
mov
sbb
inc
pop
ljmpw
shr
js
and
mov
iret
ret
xchg
daa
or
sub
cmp
lock
jo
lcall
sub
in
jecxz
xchg
imul
mov
add
mov
jmp
sbb
mov
sub
pop
aaa
mov
adc
inc
int3
popf
stc
imull
jl
xor
pop
sarb
sub
add
xor
scas
and
scas
jmp
jns
mov
inc
mov
pushf
inc
jle
pop
sbb
sbb
mov
fisubrl
and
inc
push
push
and
mov
xchg
cmc
bnd
cli
ljmp
adc
add
sub
inc
stc
clc
sbb
les
xchg
sbb
push
xor
pop
jne
sti
sbbb
pop
pop
imul
arpl
movsb
push
cwtl
aas
notrack
loop
out
les
mov
ds
fisttpll
rorl
dec
sub
mov
adc
mov
lock
pop
jne
inc
dec
ja
mov
sbb
test
fwait
push
mov
jnp
mov
jns
xchg
outsb
fildl
xor
fbld
pop
loopne
sbb
dec
mov
cmc
cmp
xor
and
rep
or
dec
mov
sub
inc
in
shll
mov
sbb
inc
or
push
cltd
addr16
cmp
lahf
ljmp
aas
shll
mov
xchg
mov
vmread
adc
or
fistpl
outsl
cltd
pop
popf
push
cmpsb
std
js
ret
and
int3
hlt
xor
inc
out
push
mov
movsl
test
pusha
add
push
sub
mov
arpl
in
lcall
inc
sub
lods
push
xchg
hlt
jge
pop
loopne
mov
fistpll
lahf
mov
lock
cmp
pop
cld
cmpsb
push
loopne
ss
sahf
cs
ds
das
je
add
insb
out
mov
mov
xor
scas
leave
in
dec
scas
pop
inc
mov
andb
int
dec
sub
mov
out
ss
pop
sbb
push
add
push
data16
fstl
cli
cs
jmp
pop
mov
cmp
pop
add
push
mov
in
add
push
add
pop
fcoml
dec
sarb
xor
testl
mov
faddl
lds
fs
adc
les
adc
testb
stos
and
mov
xor
int3
inc
push
xor
xchg
dec
mov
and
pop
mov
leave
pop
mov
add
jmp
dec
iret
jecxz
enter
cmp
mov
int3
mov
jmp
jp
in
xchg
stos
fcoms
sub
cmc
cmc
mov
add
mov
xor
insl
push
or
out
add
jp
outsl
imul
xor
dec
lret
inc
push
xchg
cmp
xor
pop
test
add
cmpb
lock
sbbl
aaa
cli
ds
cmp
push
mov
fldcw
arpl
out
imul
add
mov
and
xor
shl
mov
clc
pop
jle
icebp
imul
ja
jle
jecxz
sahf
or
popf
rcl
test
arpl
xchg
adc
xor
mov
pushf
out
test
cmp
ds
and
xlat
ret
sbb
stos
in
dec
or
fnstenv
stc
mov
cmp
fistl
mov
mov
xor
mov
sbb
cmp
lahf
sub
inc
push
mov
test
add
jge
sub
sar
enter
imul
push
and
adc
dec
imul
add
adc
sbb
movsb
arpl
pop
hlt
fwait
pop
call
orl
sub
gs
pop
cli
add
mov
orb
dec
jle
jecxz
popf
add
in
add
jb,pt
cli
jne
sub
jne
or
stos
dec
or
aad
xchg
cli
or
push
fstpt
pop
sarl
and
push
shll
enter
repnz
mov
mov
xor
ss
xchg
sbb
aad
push
push
and
insb
imull
fistl
daa
out
push
inc
jno
xor
lods
xor
out
xchg
loop
in
leave
mov
bound
sbb
and
mov
pusha
mov
nop
leave
add
out
mov
shlb
pop
push
add
and
cmp
push
mov
mov
adc
mov
int3
imul
ret
jge
jp
stos
jae
push
pop
pop
push
out
lock
jnp
out
sub
inc
sbb
arpl
cld
mov
push
push
repnz
xchg
test
pop
xchg
sarl
mov
xchg
fidivrs
add
popf
popa
ss
ja
bound
xchg
cmpb
imul
in
jno
push
ret
mov
shl
push
push
repnz
test
cld
and
rclb
mov
sarl
repnz
inc
jp
mov
mov
shll
adc
add
movsl
xor
test
dec
add
cld
int
rclb
aad
lds
dec
iret
or
popa
jmp
outsb
jae
cli
addr16
xor
xor
lds
cmp
insb
sbb
in
les
icebp
pop
xchg
imul
adc
cmp
arpl
lods
lcall
adc
push
lcall
enter
aam
imul
sbb
lret
and
lret
addl
jns
adc
js
dec
hlt
popf
pusha
jl
pop
lods
sbb
cs
int3
cmp
jmp
xorl
push
xor
mov
jl
mov
sbb
fwait
mov
jp
mov
cmpsl
pop
xchg
jnp
decl
lods
adc
fsts
jmp
pop
jmp
lcall
jno
btr
lock
int3
gs
repnz
fmul
gs
or
cmpsl
sbb
std
les
pop
add
pop
mov
adc
mov
dec
vmwrite
repnz
dec
xchg
aas
aas
push
xchg
iret
xchg
xor
cmovp
gs
pop
sahf
jo
cmp
mov
scas
cmp
fnstcw
fwait
sbb
mov
add
dec
dec
ret
pop
andb
sub
mov
stos
bound
cmp
call
or
ds
lea
mov
cli
ds
sub
push
scas
xchg
and
or
es
cli
pop
and
xchg
rol
cwtl
pushf
or
mov
add
icebp
inc
and
lret
mov
mov
sub
frstor
lods
and
fmull
stos
popa
sbb
mov
aad
ror
mov
das
fwait
in
pop
inc
movsl
inc
fmuls
cmc
sti
sub
shll
test
mov
lea
inc
sub
push
nop
mov
push
outsl
mov
popa
js
std
sahf
sbb
jno
or
cmc
lcall
mov
sbb
mov
inc
push
leave
in
inc
lret
sbb
xor
cmp
sbb
int3
mov
fidivl
or
fs
pop
lret
xchg
movb
and
jne
mov
pop
and
leave
adc
imul
sbb
adc
test
or
inc
cli
iret
pop
xchg
arpl
pop
jno
mov
mov
xchg
jle
cs
cmp
sahf
dec
sub
or
dec
loop
mov
movsl
cmp
or
xor
test
inc
fdivs
jno
pop
adcb
dec
ficompl
lahf
jns
rclb
add
mov
and
popf
lahf
sbb
cmp
inc
mov
sbb
pop
xchg
jl
lods
cs
ficomps
add
jae
aaa
adc
lock
les
and
adc
pop
stos
cmpb
sub
lds
pop
test
insl
roll
inc
pop
dec
sub
in
adc
mov
dec
and
test
or
inc
ret
mov
popf
cmp
lret
jae
filds
fsubrp
cmp
adc
dec
call
adc
add
movsl
dec
ss
int3
or
aad
call
inc
ret
out
ret
pushf
test
outsl
fwait
pop
subb
xor
fsubrs
loop
lods
test
mov
push
loopne
sahf
xchg
sahf
mov
add
jg,pn
icebp
push
jmp
data16
jmp
inc
mov
push
bnd
inc
xorl
push
ss
ja
js
ss
fnstsw
pop
jo
pop
xchg
or
pop
xchg
leave
dec
loopne
in
subb
cmp
into
arpl
hlt
hlt
sub
ret
push
push
push
cmp
xchg
jns
inc
mov
sub
pop
jb
mov
rol
jmp
cmp
in
pop
cli
hlt
sbb
icebp
sub
mov
dec
sub
adcb
jmp
dec
push
add
mov
xor
shll
inc
xor
lods
out
jb
out
outsl
leave
mov
mov
call
jle
push
aam
xchg
xor
xor
popf
fldcw
xchg
sub
cli
adc
shlb
fidivs
pop
mov
lahf
pop
push
adc
stc
adc
in
movb
subb
fcoml
mov
adc
mov
sub
pop
cmp
insl
lds
roll
jnp
outsl
imul
cwtl
pop
push
mov
or
cmc
loope
xchg
and
fists
mov
add
rolb
clc
pop
jae
adc
fiadds
jns
push
das
faddp
mov
adc
es
inc
out
or
cmc
jns
or
adc
sbb
stos
pop
das
jp
in
xchg
lods
test
sbb
test
dec
xchg
shrb
pop
mov
mov
dec
gs
mov
int3
cmc
std
cmc
pop
xchg
out
push
push
pop
ret
in
cmp
jecxz
cmp
cmpsl
push
cmp
dec
add
push
adc
int
mov
inc
and
and
add
lret
xchg
pop
cs
lock
cmp
lcall
xchg
rorl
mov
mov
in
pop
jecxz
test
adc
push
out
mov
loope
sub
gs
pop
test
mov
push
call
in
cwtl
fcmovnu
inc
mov
cmp
cmp
ds
or
popa
xchg
sub
or
sub
and
int
mov
pop
mov
mov
jb
or
or
xchg
xlat
inc
imul
imul
rorb
adc
push
lahf
pop
inc
and
sub
lods
lret
cmp
outsb
mov
inc
pushf
sbb
push
push
xor
fisubl
mov
in
sub
and
dec
test
nop
out
lods
mov
dec
xchg
dec
in
dec
shl
mov
mov
cmp
lcall
jge
call
mov
lods
in
jp
push
cmpsb
loop
xor
sub
fwait
sub
mov
xor
movb
inc
fcompl
xchg
or
mov
aam
es
or
leave
imul
mov
inc
imul
notl
cwtl
xchg
loope
mov
in
mov
outsb
jns
cmp
stos
pop
scas
in
push
jle
aaa
loope
loopne
fstpl
roll
cltd
pop
cmpsb
dec
fisttps
dec
sbb
hlt
xchg
js
pop
lock
xor
jns
jge
or
arpl
jmp
inc
jo
sbb
and
xlat
inc
cmpsl
sahf
xor
mov
repnz
xor
pop
aaa
cmp
lds
addl
inc
adcb
pop
mov
pop
pushf
inc
cmp
push
mov
pop
je
add
dec
pop
or
sub
out
pushf
add
ljmp
repz
movsl
nop
cld
jns
pop
daa
lds
dec
jns
inc
les
mov
sbb
mov
lret
je
jae
je
cltd
jo
shrl
lds
aam
cmpl
negl
push
sti
aad
mov
fsts
mov
mov
xor
stos
ret
fstl
test
lea
out
mov
pop
pushf
mov
mov
mov
daa
andl
aad
adc
clc
xchg
sub
fbld
shlb
pop
out
scas
loope
stos
mov
hlt
mov
mov
repnz
into
mov
popa
gs
xor
lahf
pmullw
jmp
jl
push
in
xor
shlb
fimull
scas
out
or
outsb
mov
lea
jle
cld
xchg
xor
inc
or
lods
test
xchg
ljmp
or
jg
xchg
push
lods
cs
xchg
aaa
add
sub
nop
rol
mov
sub
in
sub
push
mov
testb
stos
cmp
arpl
push
stos
insb
testl
jno
add
adc
xchg
fsts
jae
in
lret
push
out
inc
into
jns
testl
stos
lahf
xor
in
out
xchg
add
pop
sti
popa
sub
stos
push
je
push
dec
mov
ror
es
int
jmp
cmpsl
and
int
mov
or
pop
leave
insl
fstl
cli
jbe
pop
ja
cmpsb
and
inc
cmp
lock
push
mov
mov
out
test
mov
sub
ret
pusha
inc
add
fwait
out
lret
test
push
jl
or
sbb
sub
aas
mov
out
fiadds
or
adc
lcall
psllq
jecxz
fbld
xchg
cwtl
jno
call
add
lock
mov
mov
pop
pop
mov
mov
inc
push
insb
jge
pop
fucomip
mov
cld
sbb
xor
mov
and
mov
repz
pop
lods
loop
xlat
add
fs
xchg
mov
mov
push
or
mov
jecxz
mov
mov
push
xor
hlt
xor
js
dec
mov
mov
pop
add
insb
push
sbb
add
repz
jbe
cmp
out
cmpsl
pop
fcoms
mov
inc
out
mov
push
outsb
andl
aas
add
fcomps
push
and
mov
das
mov
mov
or
out
sub
mov
scas
sub
enter
scas
out
inc
dec
jae
enter
mov
adc
stos
negb
cli
pop
inc
and
push
out
and
in
inc
add
cld
sbb
xchg
lahf
mov
fs
jns
test
inc
jmp
scas
mov
pusha
loopne
mov
xchg
sbb
xchg
mov
xchg
or
outsb
call
pushf
push
push
adc
inc
aas
jge
pop
mov
push
les
or
mov
dec
enter
js
inc
push
scas
lods
sarb
mov
cmp
jno
repz
sbb
loop
xor
jb
les
sar
or
test
popl
sub
insb
add
arpl
shll
xor
outsl
and
data16
cltd
mov
repnz
cwtl
repz
pop
mov
call
xchg
mov
fnsave
pop
xchg
inc
pop
and
or
das
or
mov
jg
and
rorb
das
lahf
in
mov
sbb
push
add
pop
add
xchg
jg
aad
lcall
mov
push
lods
push
and
ljmp
jo
addl
dec
xor
mov
and
out
idivl
adc
add
push
jb
xchg
lret
mov
mov
sbbb
sbb
aaa
test
add
xor
sub
sub
testl
fisubrl
xchg
dec
mov
add
leave
lret
outsl
sub
dec
push
lds
stos
cs
push
fildll
hlt
test
movsb
adc
into
lock
icebp
mov
jne
pop
jb
xchg
stos
push
xchg
ds
in
mov
cmp
movsb
in
lret
lods
fidivrl
dec
dec
andb
add
lret
addl
mov
sti
push
jmp
and
inc
into
cmpsb
int3
mov
clc
adc
fldenv
shlb
pop
sub
or
sub
std
mov
adc
mov
sbb
cltd
sub
inc
cmc
or
mov
mov
jg
add
fidivl
data16
sarl
mov
or
sub
jg
adc
add
dec
mov
cmc
xchg
pop
sub
lret
cmp
mov
dec
icebp
push
arpl
lock
mov
enter
and
inc
jle
pop
data16
fs
mov
mov
stc
sbb
jno
mov
mov
lods
sub
adc
enter
cwtl
mov
push
movsb
jo
mov
and
ja
push
pop
lock
ficomps
adc
pop
clc
adc
arpl
dec
pusha
lret
pop
bound
popa
sahf
call
fucomi
lea
jg
mov
push
mov
mov
mov
outsb
jecxz
outsl
out
mov
pop
mov
imul
sub
inc
cmp
pop
cld
jnp
adc
jb
in
pop
leave
lret
call
dec
dec
dec
push
bound
test
xchg
jbe
imul
adc
add
fsubs
rorb
daa
jg
fdivrl
dec
incb
push
clc
bound
cmp
mov
mov
xchg
outsl
mov
rcrb
inc
mov
cmp
jo
cli
pandn
popa
jb
repz
fs
xchg
insb
out
pop
pop
add
cmpsb
hlt
dec
iret
cltd
fld
out
inc
dec
mov
add
xor
jmp
ss
jl
jmp
dec
inc
test
mov
sbb
aam
and
pop
sbb
arpl
rolb
or
pop
xorl
xor
mov
xchg
adc
aas
ja
lea
inc
sbb
xor
cmpsb
cmp
cmpb
hlt
add
lcall
sub
xchg
lods
loop
insb
in
jo
aaa
fistl
xorb
cltd
xor
into
out
xchg
inc
lcall
sub
mov
push
imul
mov
jmp
cmp
enter
subl
inc
sahf
pushf
and
test
mov
out
xor
mov
ret
stos
call
test
cmp
push
scas
pop
aaa
cwtl
gs
pop
aad
xchg
js
in
inc
sub
and
mov
or
je
test
adc
jmp
add
addr16
mov
jne
out
decb
mov
test
mov
gs
icebp
or
jns
das
mov
dec
fcmovne
or
gs
xchg
or
dec
sbb
jne
mov
xchg
ret
lock
jmp
addr16
mov
fst
dec
sbb
jnp
pop
outsl
xlat
out
xor
sub
cmp
push
popa
xchg
mov
fsubrl
repz
test
mov
push
cwtl
data16
sbb
push
xlat
lcall
enter
xchg
dec
call
rol
adc
lcall
adc
or
mov
or
jge
cmpsl
pop
nop
mov
mov
dec
pop
test
popf
std
lods
in
mov
sti
sar
jl
mov
mov
push
mov
rcrb
sub
sar
mov
cmp
mov
xlat
xchg
and
pushf
xchg
pop
add
pop
inc
dec
pop
adc
test
inc
shll
movb
add
sub
or
mov
mov
cmp
sub
cmc
dec
mov
pop
sbb
mov
enter
and
sbb
sub
scas
imul
mov
shlb
cmp
sub
xor
pop
testb
rolb
push
addl
cmc
js
jp
addb
fldenv
dec
xchg
stc
popf
rcrl
pop
ja
jle
mov
das
fiadds
sbb
dec
mov
xchg
leave
sbbl
mul
psrld
push
lcall
or
or
test
pop
shl
or
push
lods
push
aaa
aaa
ret
push
and
jns
cmc
scas
and
in
xchg
int
mov
mov
inc
cli
fisubrs
aas
mov
testb
outsl
sub
jae
mov
jb
cltd
mov
mov
pusha
imul
xchg
ds
push
sub
and
hlt
jge
lcall
ficoms
outsl
dec
add
es
xor
ret
xchg
mov
xchg
and
sti
mov
and
xor
cmp
add
sbb
insl
add
orb
jns
iret
mov
push
sub
std
movsb
dec
dec
shlb
aad
addr16
lods
mov
xchg
sbb
ds
ja
aaa
imul
es
aad
xchg
int
adc
adc
push
dec
outsl
mov
pop
adc
loopne
icebp
mov
or
test
inc
fst
add
mov
ret
push
mov
and
insb
pop
fsubrl
scas
sbb
and
xorb
movsl
mov
jg
adc
lds
sbbb
test
push
mov
jle
mov
push
repnz
test
mov
mov
pop
iret
push
icebp
sbbl
lcall
hlt
mov
or
dec
aad
jb
push
or
dec
pop
fnop
xchg
imul
enter
push
in
in
insb
pop
xor
out
std
aam
mov
shlb
or
rclb
sub
ret
cmc
test
xor
jae
ficompl
lcall
xchg
dec
ret
push
cld
cmpsb
pop
rorb
jns
xorb
cld
roll
hlt
adc
std
insb
aam
mull
push
sbb
xlat
movsb
mov
sub
lods
pop
sbb
pop
xorb
ds
inc
inc
or
mov
add
daa
pop
adc
sub
xchg
cmp
sub
sub
xor
lea
mov
ret
ret
adc
dec
mov
jbe
test
mov
mov
push
mov
mov
xor
inc
push
dec
dec
loope
out
loop
testb
push
cmp
pusha
fdivp
cmp
sub
push
mov
or
inc
mov
aaa
lods
xchg
into
push
test
add
dec
cwtl
jmp
out
fcoml
gs
loope
imull
lret
arpl
ds
add
add
fwait
imul
and
jle
jmp
call
lret
xor
sbb
imul
cld
int3
sub
xor
push
xchg
push
pop
addr16
insb
out
mov
or
out
pop
out
test
out
mov
push
and
jecxz
lret
mov
jmp
push
sbb
imul
mov
outsb
rclb
mov
sbb
mov
jecxz
adc
inc
mov
fnstcw
push
loopne
and
into
hlt
pop
pop
add
out
pop
sbb
jecxz
push
push
mov
mov
sbb
test
or
inc
jl
das
push
enter
jno
mov
aad
xchg
sarb
mov
fistl
inc
jmp
std
lahf
out
xchg
mov
xchg
pop
mov
cmp
loop
inc
xor
stos
jne
sub
xchg
jbe
mov
add
lods
dec
test
jle
mov
pop
outsb
mov
leave
shll
jmp
adc
xor
jmp
xor
stc
jle
jb
xchg
push
dec
push
sbb
mov
jecxz
divl
ret
or
or
aad
dec
jp
jo
adc
cmc
in
in
sarl
mov
mov
lcall
test
jmp
lea
sbb
jp
mov
cmc
mov
cmp
pop
inc
lret
add
icebp
movsl
and
fistl
mov
daa
cltd
cmp
aaa
mov
jecxz
lret
repnz
aam
notl
scas
scas
rorl
mov
andb
ret
daa
sti
and
or
jmp
and
cmp
xor
rcrb
or
jge
and
int3
push
dec
and
gs
scas
fld
mov
out
and
enter
or
mov
lods
addr16
subb
fsts
mov
cmp
xor
movsb
adc
std
mov
or
inc
fs
push
hlt
int
mov
push
cmpl
sub
cmc
jnp
mul
mov
fxch
and
lods
lea
popa
imul
push
stos
int3
xor
daa
ret
test
adc
mov
cmp
sub
pop
mov
jbe
jb
das
cs
into
sbb
cwtl
mov
adc
sub
sub
xorl
mov
cmp
mov
jno
jmp
aaa
sub
jno
loope
cmpxchg8b
call
inc
stc
aas
add
movsb
loop
mov
movsb
jnp
inc
xor
push
xchg
daa
lds
mov
pop
pop
repnz
sarb
lea
sahf
dec
shll
or
jne
sarb
mov
fimull
rcrb
jle
test
cld
mov
arpl
mov
mov
dec
loope
dec
pop
jb
push
xchg
jp
xchg
push
mov
call
imul
xor
in
dec
mov
xchg
imul
mov
test
cli
cmpsb
jbe
lahf
pop
jg
jns
divl
mov
mov
push
or
addr16
jle
push
or
das
dec
mov
ds
push
enter
pop
push
jno
stos
les
mov
sbb
mov
mov
fidivl
and
and
cmc
out
movsl
inc
rorl
add
xchg
pop
adc
jge
fstpt
sahf
test
callw
rolb
push
test
movsl
cwtl
scas
sbb
aaa
xor
stos
xchg
and
adc
lods
lods
add
mov
mov
adc
fwait
jmp
adc
or
repz
je
js
mov
or
push
in
mov
rorl
inc
outsb
xchg
rcll
dec
cltd
sub
mov
aad
add
cmpsl
insl
xlat
inc
popf
in
scas
imul
pop
dec
and
dec
int
jl
fmul
ja
movsl
dec
jle
jbe
icebp
sbbb
movsb
jg
pop
cmpl
stc
leave
mov
loopne
addr16
pop
sub
mov
xor
lods
xchg
cmc
sbb
lret
sbb
mov
xchg
insb
add
daa
adc
sbb
pop
mov
rcrb
test
fs
in
xchg
dec
mov
int
pushf
jge
enter
dec
iret
movsl
out
cmp
rorb
sti
in
xchg
les
out
add
sbb
jnp
mov
inc
xchg
stos
test
pusha
scas
adc
inc
jl
push
pushf
push
push
mov
sub
int3
cmp
es
lods
xchg
lret
xchg
pushf
fnstsw
call
pop
gs
out
fsubrl
add
mov
es
cmpsw
mov
ret
cmpb
or
pop
mov
mov
nop
push
out
hlt
dec
push
or
dec
sub
lcall
push
movsb
jge
and
push
icebp
inc
ret
lahf
push
cmp
and
cmp
jbe
mov
adc
push
jno
push
push
mov
pop
push
in
fwait
test
inc
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
sbb
cli
stos
or
push
and
fstps
fwait
pop
movswl
add
mov
push
pop
mov
sbb
sub
push
pop
xor
or
sub
sbb
push
mov
popl
mov
sub
mov
add
mov
cmp
jne
movswl
and
or
lret
xor
leave
mov
movsl
hlt
or
dec
inc
in
mov
stos
scas
mov
test
sar
cmp
push
mov
pop
and
mov
xchg
ret
adc
push
psubusw
push
add
jge
cmpsl
daa
mov
lret
cmpsl
push
test
les
add
pop
add
and
notb
inc
and
inc
push
es
cmp
notl
dec
lret
sbb
jecxz
push
xchg
ss
mov
mov
push
mov
out
inc
or
cwtl
mov
xor
cmp
adc
pushl
mov
or
jle
mov
sub
jle
ljmp
pusha
inc
pop
jo
mov
mov
mov
loop
push
mov
push
frstor
push
leave
cmp
push
outsl
adc
jne
js
clc
lret
cmp
mov
sub
jmp
mov
mov
js
push
leave
jmp
shlb
cltd
inc
mov
scas
push
push
mov
inc
add
push
mov
push
iret
pop
push
mov
sub
push
mov
lods
inc
mov
push
loop
enter
or
scas
mov
test
jno
and
and
and
out
sbb
cmp
cmp
cwtl
xor
lret
sbb
lods
push
mov
inc
add
inc
mov
int3
or
adc
adc
adc
adc
sbb
sti
pop
in
xlat
mov
leave
cmp
sti
cmp
push
xchg
and
mov
add
xor
xchg
clc
cs
rclb
and
xchg
pop
xlat
adc
andl
lret
cltd
sub
das
shl
lret
cltd
sub
shl
and
xchg
sbb
sahf
push
roll
adc
adc
rcr
sub
leave
aam
out
and
jmp
shr
outsl
cwtl
iret
xchg
inc
in
lcall
fs
inc
xlat
adc
pop
stos
stc
pop
add
outsb
dec
movsb
cli
dec
jb
lock
in
mov
jge
retw
push
outsl
push
sub
mull
jb
xchg
fmull
inc
jecxz
pop
stc
lahf
mov
ffreep
mov
inc
pop
push
dec
jb
xor
hlt
movsl
mulb
out
dec
jb
ja
je
in
push
popa
jae
fcoml
imull
dec
clc
movsb
inc
mov
clc
dec
aam
sub
sub
cmp
sub
cli
push
jb
lds
mov
fmul
ja
fdiv
push
adc
mov
inc
inc
jp
dec
ret
pop
or
dec
sbb
icebp
repnz
stos
xor
fs
dec
sub
out
inc
jb
ja
cwtl
mov
cltd
pushf
inc
shlb
rclb
xchg
jg
sbb
adc
mov
cs
jg
mov
mov
js
jg
sub
das
cmpl
frndint
mov
push
xchg
stos
jne
mov
jge
xchg
sarl
cli
mov
fs
addr16
sbb
or
jg
stos
xchg
add
sarl
cli
mov
inc
push
popa
xchg
jg
lahf
xchg
jg
lahf
xchg
or
orb
movsl
jbe
xchg
inc
cmpb
xchg
jg
mov
xchg
jg
dec
push
adc
lret
stos
cmp
cli
outsl
aam
stos
imul
dec
jno
cli
lahf
scas
aas
iret
cmp
cli
lods
addr16
xchg
inc
cli
decb
clc
lahf
xchg
ljmp
out
jbe
xchg
fs
data16
cli
das
arpl
sar
pushf
jg
cmp
cli
xchg
xchg
mov
cli
mov
outsb
jbe
xchg
ljmp
mov
clc
lahf
adc
or
xchg
jg
cmp
out
leave
push
cli
mov
in
divb
js
cli
mov
imul
lock
lahf
sti
ds
mov
xor
cli
lahf
adc
cmpsl
int3
push
xchg
lahf
xchg
ljmp
xchg
jg
loope
jg
lret
scas
dec
nop
lret
stos
dec
push
adc
xor
xchg
in
int
enter
add
dec
dec
adc
adc
xchg
das
sti
stc
sarl
jg
int3
int
and
push
mov
lahf
xchg
ljmp
xchg
ljmp
xchg
jg
hlt
jl
cltd
int
imul
adc
cmp
xchg
jg
cmp
out
js
jg
mov
jae
mov
fs
lahf
arpl
xchg
xchg
inc
jnp
sti
les
cmp
cli
xchg
xchg
xor
cli
lahf
pushf
jg
lahf
xchg
movsb
cli
lahf
xchg
jg
lahf
xchg
jg
int3
add
addr16
jle
xor
sti
insb
aam
js
cmc
leave
insl
outsb
xor
jmp
call
notl
mov
xor
adc
call
notl
dec
das
push
jge
test
cmp
sbb
mov
movsl
ret
and
xor
push
adc
inc
pop
nop
das
sub
sbb
aas
cmp
divl
and
xor
cs
dec
xor
inc
arpl
xchg
jg
cmp
divl
and
xor
cs
mov
cltd
add
pop
insb
jp
and
cmp
jg
lahf
xchg
das
push
jge
test
push
xor
sbb
mov
movsl
ret
mov
mov
bound
cli
sub
jg
push
test
test
dec
mov
fsin
subps
nop
adc
mov
and
orb
lds
subps
lret
fidivs
sar
xchg
stc
call
int3
call
lds
adc
pop
jecxz
mov
arpl
lahf
xchg
jg
lret
int3
xchg
jg
jge
cli
cmp
mov
inc
xor
scas
add
lahf
sti
dec
xor
xchg
aas
mov
mov
jns
lahf
movsl
ret
aad
xchg
jg
push
sbb
lahf
sti
addr16
push
nop
fs
lahf
sbb
cli
lahf
xchg
int3
mov
mov
insl
rcrl
xchg
jg
lret
stc
jno
insl
stc
imul
jb
js
outsb
jns
js
push
jno
pop
adc
xchg
or
lock
pop
mov
xor
xchg
popa
xor
pop
cmp
jne
shrl
into
sub
jne
push
adc
mov
cs
mov
sub
xor
sahf
mov
inc
adc
mov
pop
in
negl
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
cmp
data16
pusha
js
inc
imul
lahf
xchg
jg
lahf
xchg
aas
negl
xchg
jg
lahf
xchg
jg
outsl
sti
jge
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
and
cli
lahf
scas
and
lea
add
lods
mov
inc
fisubrs
xchg
adc
scas
pop
arpl
xlat
aam
xor
adc
je
push
popa
push
jnp
adc
out
leave
xchg
repz
or
int
push
pop
das
push
pop
push
movsl
pop
jnp
je
repz
cmpb
inc
jb
sbb
adc
stos
jbe
jne
add
mov
sbb
outsb
inc
fadds
js
into
adc
and
loop
pop
out
into
jo
in
lret
imul
inc
xor
daa
xchg
pop
outsb
jg
mov
push
out
clc
int3
cmp
pop
push
mov
outsl
lods
mov
mov
cmp
popf
push
sti
icebp
inc
divl
pop
je
or
hlt
sub
aam
clc
fbld
lahf
cwtl
push
lea
stos
mov
dec
das
mov
sub
xchg
shll
add
popf
sbb
and
add
add
add
ljmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
ljmp
enter
cmc
ljmp
shr
std
ljmp
fucomi
sldt
add
add
ljmp
insl
jo
cs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
sub
sldt
add
add
sldt
add
add
add
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
loopne
mov
out
or
jo
xchg
adc
mov
inc
adc
inc
and
and
sub
sub
adc
add
sbb
push
hlt
inc
nop
push
sub
mov
fiadds
mov
adc
or
sub
ss
adc
or
add
jb
outsb
xor
add
push
and
xor
or
test
sbbl
add
arpl
and
xor
cmp
xchg
and
in
test
cmp
xchg
je
mov
in
jb
cmp
pusha
add
xchg
push
enter
dec
jb
cmp
add
cmp
xor
xor
cmp
cmp
sub
clc
and
push
xchg
fmul
fsub
aam
rcrb
push
add
or
subb
add
or
add
fdivl
mov
push
xor
pop
jmp
sub
xor
and
xor
sbb
sbb
adc
movups
or
add
push
mov
adc
push
int3
push
call
add
test
jne
xor
rolb
lret
mov
add
or
mov
add
jge
rcrb
sbb
add
fs
sahf
aas
mov
xor
add
mov
cmp
shll
cmp
fadds
xchg
test
add
dec
mov
mov
push
or
cltd
push
add
aas
adcb
xor
adc
inc
cmp
add
mov
stc
push
xchg
push
adc
mov
nop
push
jg
add
aam
pop
pusha
xchg
add
inc
push
jmp
add
mov
jns
adc
jne
push
add
call
xchg
pusha
jg
add
inc
add
jmp
dec
add
dec
cmp
aam
sbb
fildll
pop
add
loope
call
test
pop
pop
pop
movsb
add
je
in
mov
xor
mov
jge
sbb
add
call
fmul
ja
and
jne
mov
ss
or
arpl
stos
cmpl
inc
add
jmp
xchg
or
push
jb
ja
into
je
fbstp
push
iret
incb
sbb
sub
and
stc
push
jl
pop
xchg
adc
sar
loopne
jbe
xor
sub
or
add
jle
gs
sbb
pop
bound
fisubrl
into
dec
adc
pushf
or
jmp
add
adc
mov
jae
push
push
sbb
nop
out
cmp
or
test
cmp
or
sarl
fs
adc
and
mov
cli
call
clc
jp
adc
pop
flds
cmp
add
popa
push
mov
push
push
push
lds
jns
lret
and
cmp
movl
lahf
in
add
dec
adc
dec
in
adcl
or
pop
push
data16
push
nop
sbb
clc
lds
jns
adc
addb
push
and
repz
inc
push
out
ja
dec
cmp
mov
je
add
mov
adc
packssdw
dec
xchg
or
movl
filds
xor
xor
jle
add
sub
jmp
and
xchg
sbb
adc
je
add
jb
ljmp
aaa
add
xchg
ret
setae
loop
clc
mov
mov
dec
sbb
or
dec
inc
cmc
xor
pop
je
adc
add
xchg
nop
jbe
add
fstp
add
call
cmpb
add
adc
sub
add
cmpsb
jmp
nop
xor
mov
mov
or
xchg
imul
xor
mov
repz
push
es
flds
add
pop
leave
clc
divl
add
cmovno
sbb
jae
fisttpll
loope
jge
add
addl
add
xchg
enter
add
pusha
shll
movl
out
shlb
cmc
pop
aam
cmp
jg
pop
sub
jl
xlat
push
push
add
push
add
push
add
inc
arpl
test
leave
or
fiadds
call
and
int3
sbb
cmpsl
int
add
cmp
lahf
add
pop
fisubrs
adc
fs
mov
sub
cmpb
xchg
add
bound
jne
test
push
add
jle
add
sub
pushf
es
imul
mov
xor
add
enter
add
mov
or
rorb
leave
mov
mov
orb
pop
pushw
lahf
dec
jo
dec
sub
sbbl
mov
cmpsb
jp
inc
inc
and
sub
imul
adc
inc
adc
movl
es
lds
sbb
or
jnp
push
out
cmp
fiadds
jae
ror
push
je
roll
mov
jmp
int3
inc
mov
mov
test
fcmovne
pop
mov
ret
nop
mov
cmp
mov
adc
mov
repnz
cmp
inc
add
xchg
add
pop
mov
pop
addl
push
dec
add
xor
add
gs
jle
and
pop
add
popa
mov
sahf
jb
mov
adc
push
sbb
mov
push
push
sbb
popf
adc
leave
add
hlt
inc
sub
add
jo
sub
add
bound
add
mov
mov
adc
pop
xchg
sub
jmp
adc
in
cs
pop
les
add
out
xchg
test
add
movsb
shlb
dec
sbb
loopne
lock
adc
add
ja
and
add
push
cmp
in
out
add
std
pop
add
xor
adc
add
lret
xchg
sbb
pop
push
or
and
fistpl
loopne
push
sbb
jl
orb
subl
or
fists
add
cmp
jg
add
test
jns
sbb
add
xchg
inc
add
rclb
jmp
dec
pop
push
fimull
inc
sbb
pusha
cmc
mov
adcb
popfw
mov
sub
shll
out
or
sysret
push
ret
cli
lock
sahf
add
mov
push
mov
sub
xchg
sbb
add
cli
adc
jl
movl
add
and
mov
repz
leave
enter
mov
or
sbb
xchg
sub
lock
loop
xchg
in
pop
adc
adc
add
lods
cmp
or
jl
add
sub
or
push
dec
or
cmpsl
ret
add
mov
dec
dec
nop
xor
add
je
sub
add
mov
mov
add
xor
test
lods
and
inc
testb
cli
mov
jb
or
cmp
pop
push
add
mov
dec
mov
or
add
or
fs
pop
mov
and
and
clc
mov
and
add
jbe
js
push
xor
add
mov
incb
dec
sub
clc
xchg
or
pop
dec
cwtl
aas
pop
fdivrl
add
push
repz
xchg
scas
pushf
les
cli
jmp
cmp
push
xchg
xchg
les
inc
psubb
inc
out
adc
sub
add
in
jns
push
xor
aad
sub
mov
jecxz
stos
adc
pop
jo
cmp
adc
mov
or
pusha
add
dec
jmp
fisttps
sub
roll
rcll
cltd
dec
cwtl
aaa
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
cs
push
add
pop
adcb
ljmp
bound
sub
xor
push
mov
adc
pop
scas
push
xchg
imul
inc
lea
pop
cld
ret
or
mov
inc
addb
sbb
fadds
es
sub
add
and
add
and
aas
movb
xor
test
mulb
ffree
xor
insl
fistps
outsl
cmc
xor
dec
add
adc
iret
aam
icebp
or
add
xor
les
and
pop
nop
cmp
or
mov
loope
push
cs
sti
ret
pusha
dec
or
mov
cmp
xchg
pop
add
push
addb
add
ljmp
mov
mov
jne
pop
ja
add
insb
add
jnp
xchg
sbb
xor
jg
mov
jmp
pop
sub
add
in
shll
push
add
fmuls
dec
xchg
sbb
add
jp
idivb
jmp
sbb
sub
cmpl
cwtl
test
cmp
mov
les
xor
fnstcw
add
repz
into
xor
push
dec
sbb
mov
gs
pop
add
xchg
xor
jmp
adc
inc
mov
add
imul
dec
jle
pop
fs
xchg
push
lea
add
mov
dec
call
cli
aad
leave
bound
sub
xor
and
mov
push
add
sti
shrb
add
xor
add
test
xor
jge
jns
and
add
cmpsl
add
jne
imull
and
aas
add
popf
add
sahf
dec
lret
cmp
inc
jbe
mov
test
subb
or
push
imul
nop
add
and
adc
sarb
loope
sub
jo
push
push
inc
or
in
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
jnp
pop
mov
andb
pop
test
and
mov
cmp
cli
sub
pop
sub
lock
in
add
mov
add
cmc
test
push
test
jne
movsb
inc
dec
inc
inc
add
jns
cwtl
fs
roll
ror
pop
push
add
inc
mov
stos
pushf
push
add
pop
addr16
notl
loopne
xchg
int3
xor
or
dec
pop
sub
cmp
push
adc
mov
or
cmpsb
movsl
lcall
and
cmp
out
aas
dec
push
addb
mov
test
faddl
orb
dec
cmp
cmp
jb
mov
inc
add
orl
ljmp
js
mov
mov
push
lds
push
or
add
push
mov
xor
mov
imul
pop
pop
sub
xor
out
dec
adc
jo
cmc
xlat
shl
mov
and
enter
add
mov
popf
mov
add
sar
push
jne
shl
sub
xchg
in
jge
jge
js
pop
enter
imul
pop
testb
add
stos
add
push
sahf
aam
test
mov
fldl
imul
add
dec
jne,pt
and
subb
add
daa
fsubl
jl
add
ret
adc
repnz
push
xor
mov
sub
sbb
shll
dec
add
xlat
jmp
add
and
js
xchg
ret
cmc
in
push
adc
sbbl
cwtl
add
jmp
xchg
sahf
sub
rorl
dec
inc
ret
movl
cmp
xor
loop
imulb
add
notl
and
add
scas
stos
mov
add
add
arpl
fs
cli
jmp
sbb
adc
pop
repnz
mov
les
pop
and
adcl
adc
add
dec
ss
pop
sbb
xor
rolb
ret
push
hlt
dec
lock
add
xchg
test
adc
xchg
call
inc
pop
cld
or
mov
xchg
and
and
mov
adc
xlat
mov
cmp
mov
push
shlb
xchg
jne
add
leave
je
xchg
jl
add
push
mov
and
add
sbb
and
fdivr
jle
push
cmp
adc
rcl
cmpsb
faddl
add
or
scas
add
add
sub
mov
ja
orl
add
int3
enter
iret
ror
into
sbb
lret
fcmovu
fstp
push
fnstsw
add
jecxz
in
nop
pop
push
add
test
cmpl
add
shlb
add
popl
push
adc
psubb
mov
mov
adc
rclb
fcom
push
cmp
or
ja
je
pusha
sub
add
rep
clc
sbb
shlb
xor
cmp
push
sbb
push
std
sbb
add
movl
or
les
or
jmp
decl
mov
inc
shl
cmp
jbe
pop
add
push
jnp
loop
pop
add
out
pop
and
sbb
inc
adcb
add
bound
adc
lock
cs
shrb
pop
cmp
jl
popa
pop
into
and
add
adc
out
add
lret
sbb
ret
js
loopne
push
push
add
and
mov
cmp
repz
push
add
push
push
cmovnp
jmp
aad
and
loopne
scas
sbb
jb
inc
jae
pavgb
sarb
out
repnz
hlt
add
imul
pop
fs
loopne
add
add
pop
cmpb
or
ffreep
mov
insb
push
add
fstps
mov
std
fistps
push
sub
adc
sbb
xor
pop
psubusw
mov
add
jb
cmp
enter
pusha
shrl
add
jp
addl
addb
dec
leave
mov
push
test
pop
loopne
and
push
daa
and
push
hlt
or
imul
adc
mov
sbb
addb
cmp
jne
dec
clc
adc
loope
pop
lret
sbb
ret
dec
inc
loop
push
out
push
cmp
lock
je
mov
cmp
jne
xor
xchg
dec
add
add
mov
push
inc
or
js
add
mov
adc
mov
sbb
add
mov
push
xchg
adc
data16
mov
sbb
add
xor
add
cmovno
mov
mov
cmp
dec
push
adc
inc
es
outsl
add
xchg
mov
fistl
xchg
dec
add
clc
pop
sbb
movl
jge
movb
cli
mov
pop
pop
inc
mov
stc
adc
out
test
push
mov
xchg
jnp
add
mov
adc
dec
jne
inc
lods
add
and
jmp
xor
xchg
jae
arpl
mov
mov
push
inc
cmp
xlat
clc
int3
mov
add
sub
shlb
and
or
popa
rcrb
add
psrad
lods
sub
dec
test
dec
int3
and
add
jmp
or
shlb
sub
clc
call
add
add
fcoms
xor
jne
dec
xchg
aam
jl
add
xor
dec
add
jle
js
fldcw
fidivs
add
outsb
lds
mov
mov
xor
je
xchg
popa
jb
add
mov
or
adc
adc
add
or
mov
add
rcl
jge
add
cli
sub
shr
add
inc
mov
dec
adc
repnz
push
cmp
add
add
add
je
nop
xor
push
clc
in
ss
add
mov
or
dec
mov
adc
add
dec
sbb
pop
cld
or
mov
lock
add
push
rolb
xor
sub
add
sbb
nop
jmp
mov
fneni(8087
push
arpl
je
add
sub
add
inc
cwtl
repnz
dec
pop
push
mov
cwtl
mov
mov
jo
dec
pusha
inc
mov
cld
push
bound
push
cmp
inc
call
add
adc
popa
mov
xor
mov
sbb
inc
hlt
add
lret
or
add
lods
and
add
ljmp
push
cwtl
loopne
sub
jno
in
and
lahf
clc
add
or
sti
push
mov
add
inc
push
push
inc
loopne
add
inc
outsl
jb
popa
cmp
outsb
cmp
inc
gs
jo
imul
rolb
push
add
jae
push
mov
xchg
add
cmp
lods
xlat
pusha
jo
xor
and
inc
scas
cli
in
cmp
fadds
call
pop
adc
ljmp
push
jne
ss
dec
faddl
push
pop
call
inc
pushf
inc
divb
push
mov
push
pop
imul
add
sbb
or
sets
add
add
loopne,pt
add
and
add
mov
xorb
cld
dec
add
xlat
stos
mov
and
fisttpl
pop
call
dec
loop
mov
push
add
jo
sbb
jmp
cmp
cs
add
jae
testb
push
sub
orb
jg
add
dec
jne
inc
jecxz
push
add
leave
adc
cmpl
hlt
js
inc
add
ret
dec
mov
test
xchg
add
dec
push
sbb
sarl
add
movl
clc
or
mov
ret
pop
add
sub
lock
add
notl
adc
adc
add
sbb
call
add
faddp
xchg
inc
out
adc
add
loope
push
lahf
or
add
push
mov
popl
adc
pop
adc
jle
add
xchg
imul
add
or
add
or
pop
inc
lock
push
or
adc
je
add
sbb
pop
and
xor
inc
and
adc
push
clc
xchg
sub
add
in
lods
mov
out
stos
push
push
call
adc
add
adc
imul
add
pushf
xor
sub
push
cmc
add
push
cmp
or
or
jbe
add
or
mov
jae
jmp
mov
movsb
adc
add
cmp
cmp
jmp
or
mov
cmpsb
cmp
push
mov
adc
xor
mov
pop
or
push
adc
and
inc
loop
ret
jbe
loopne
mov
dec
inc
sbb
andl
in
cmp
add
inc
inc
sbbl
dec
adc
je
cld
push
call
dec
or
mov
add
cs
call
mov
out
and
add
orb
push
je
pop
lods
movsl
loopne
or
cmp
ja
add
scas
adc
and
add
stos
sub
xor
lret
loop
mov
sbb
adc
or
out
pop
cmp
add
dec
add
add
fildl
loop
popa
sbb
out
inc
movsl
pusha
mov
push
shrl
fwait
nop
call
out
pushl
mov
aad
add
movl
stc
pusha
push
cmpsl
mov
jecxz
mov
adcb
mov
nop
test
inc
inc
sub
jmp
pop
add
enter
je
xchg
es
xorb
sbb
jmp
add
inc
sub
or
addr16
add
in
lds
inc
push
out
dec
pop
add
and
clc
test
add
fdivrs
dec
out
addr16
fs
mov
shrb
or
popa
into
je
les
pop
imul
or
add
xacquire
es
clc
xchg
jmp
and
sub
and
inc
push
icebp
insb
mov
cwtl
push
inc
mov
mov
lcall
lea
call
or
loopne
loope
or
mov
inc
add
fisttps
test
rorl
sub
add
push
mov
pop
xchg
add
inc
das
imul
push
mov
push
xchg
mov
sub
inc
or
jns
pusha
add
std
cmp
or
add
xor
mov
sbb
pop
fcoms
mov
add
outsl
lea
add
fs
mov
xchg
les
cs
add
movl
pop
dec
pop
int
adc
add
mov
add
push
cmp
pusha
adcl
sub
pop
xchg
mov
wbinvd
adc
enter
xchg
orb
pusha
xor
aas
pop
addl
sub
add
adc
sub
cs
adc
push
and
sbb
sbb
push
mov
sub
enter
leave
cmp
popf
and
iret
and
movl
cmpsl
push
or
fchs
push
lret
daa
push
ss
mov
pop
ret
addr16
repz
sub
cli
icebp
nop
es
mov
lret
cltd
ss
add
push
divb
cmpl
xor
sbb
mov
mov
out
add
pop
dec
pop
add
aaa
pop
xchg
jne
push
adc
xchg
adc
or
ja
in
xchg
add
imulb
clc
add
fmuls
lods
or
mov
add
cmp
shrb
pop
pushl
add
cmc
popf
and
mov
add
dec
loope
add
jo
xchg
cmpsl
jmp
test
sbb
lock
aam
xchg
add
shlb
out
cmp
adc
mov
add
stc
dec
or
pop
cmp
pusha
test
dec
add
xor
xor
adc
cmp
jle
sbb
ffreep
ds
out
sub
jg
dec
pusha
jecxz
adc
lea
mov
rep
popl
fwait
inc
add
mov
out
clc
movsb
or
dec
cmc
or
xchg
cmpl
mov
jns
add
sub
cli
inc
or
inc
mov
pop
inc
mov
jmp
xchg
das
push
popa
addl
sbb
and
jne
or
adc
fstps
and
and
xor
rcll
inc
je
sbb
lahf
cmp
mov
push
push
js
and
cmp
and
dec
add
test
push
in
lods
adc
rol
mov
out
mov
add
dec
adcl
call
or
add
pop
pop
lcall
mov
push
pop
rclb
call
and
ljmp
or
ja
push
and
add
xchg
movsb
push
es
adc
neg
sbb
pop
leave
test
test
mov
xor
and
nopl
cmpl
loopne
pop
mov
rolb
ret
adc
jne
or
cmp
je
adcl
and
test
add
adc
mov
subb
or
pusha
and
jo
outsb
dec
add
push
ds
adc
lods
sub
add
jne
mov
pop
mov
inc
or
lock
and
mov
push
pop
add
stos
shr
insl
aaa
pop
cs
jns
cmp
add
pop
push
jg
and
ljmp
ret
sub
adc
cmp
pusha
lret
mov
add
push
jnp
insb
sti
cmp
jp
add
mov
jns
cmp
add
pop
sub
xorl
sub
scas
lret
int3
add
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
push
daa
add
enter
in
add
mov
and
inc
jg
mov
add
inc
add
scas
pcmpgtb
dec
adc
add
jmp
mov
jl
dec
dec
xchg
add
adc
cmp
push
add
jne
pop
or
add
adc
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
nop
jecxz
and
pop
in
incb
mov
jp
add
xchg
pop
in
xor
add
cmp
in
xchg
test
add
shl
fptan
ljmp
dec
and
sti
push
js
jge
add
or
push
sub
adc
inc
jnp
xchg
test
inc
add
add
into
cmp
push
xor
in
jnp
cwtl
pusha
add
cwtl
push
and
pusha
xor
add
inc
lret
mov
adc
loop
rcll
push
and
cmp
adc
loop
add
or
add
bound
pop
imul
xor
sbb
rcrl
in
adc
add
xor
or
and
xor
or
sub
jmp
xchg
push
jbe
xlat
and
pop
nop
cmp
ret
push
inc
dec
add
push
push
push
sbb
repnz
scas
mov
not
pop
add
rcrl
mov
add
popa
jo
ljmp
ja
jnp
leave
xor
add
test
std
xor
mov
add
test
cli
push
cmp
add
ja
sub
jp
push
dec
add
movsb
cmc
add
stos
adc
cmp
xchg
inc
mov
je
add
mov
stc
rolb
jmp
pop
cmp
rcll
into
push
add
add
inc
outsb
jne
fisttps
fadds
mov
ja
cli
mov
xchg
addps
divl
dec
clc
decb
lret
push
push
scas
add
push
cmpsb
inc
in
mov
dec
xchg
dec
adc
das
adc
cld
dec
jno
push
pop
xor
add
mov
outsl
shl
add
into
push
rolb
jne
sub
out
enter
les
pop
lea
add
loopne
fldcw
icebp
add
rorb
jg,pt
add
fcoml
sarb
add
adc
add
mov
push
in
mov
dec
mov
sub
mov
out
xchg
pop
add
push
and
cmp
xor
push
cmp
adc
lret
add
jae
add
sub
and
cli
aam
pop
adc
add
shlb
push
clc
add
js
inc
xchg
adc
fildl
cmpb
addb
dec
mov
cmp
and
adc
fcomps
int3
sbbb
ss
mov
jle
and
es
jne
add
fidivrl
sub
push
sahf
jg
push
hlt
leave
xchg
arpl
and
or
mov
fsts
adc
aad
mov
rolb
add
adc
add
jle
sub
jmp
mov
repnz
dec
jg
pop
sti
push
mov
inc
dec
filds
test
xor
add
orl
js
mov
inc
rcr
adc
aad
add
mov
cmp
repz
adc
mov
in
pop
sbb
pop
inc
shlb
daa
add
push
inc
xor
sub
fwait
dec
cld
ret
cmpl
outsl
jne
in
call
mov
clc
movsl
cmp
jne
out
inc
sbb
nop
pop
scas
push
xor
sub
fwait
xchg
stos
pop
xor
sar
and
add
push
add
jne
mov
lret
inc
sbb
repz
push
mov
add
inc
adc
ss
aas
mov
loopne
mov
add
nop
sbb
repz
or
pushl
inc
fninit
push
adc
sbb
les
leave
clc
stos
and
dec
push
pop
xor
roll
dec
push
sti
xchg
push
inc
into
pusha
dec
pop
adc
xlat
or
and
adc
adc
in
add
mov
mov
popa
push
bound
sbb
test
incl
cs
adc
jg
sahf
add
jl
stc
loopne
fisttpll
mov
add
jnp
or
test
inc
push
or
pop
aas
or
push
inc
jnp
enter
mov
add
mov
pop
outsl
mulb
iret
sub
sarb
jmp
adc
repz
js
xchg
sbb
xor
int3
sbb
inc
sub
lock
in
add
xchg
repz
push
shlb
or
add
or
arpl
sub
sbb
jno
std
aaa
push
push
lock
jmp
push
inc
add
call
ja
xchg
repnz
push
icebp
dec
add
mov
dec
cwtl
test
mov
mov
dec
fiaddl
movb
popa
ja
stc
push
push
pop
pop
mov
sub
cmp
cmc
and
push
sbb
ja
jle
sub
filds
and
xchg
inc
int3
fwait
add
or
push
add
push
mov
fdivs
sub
dec
sub
fwait
add
mov
xor
sub
pop
mov
test
test
sbb
std
sub
test
add
mov
test
cmp
mov
mov
adc
xchg
jns
cmp
gs
jne
cmp
jb
loopne
cltd
mov
adc
cmp
loopne
sbb
daa
add
dec
loopne
mov
aam
movsb
popf
nop
mov
andw
shlb
lea
test
and
jmp
adc
push
adc
mov
pusha
cmp
add
adc
xchg
jp
inc
or
ret
cltd
jo
jg
adc
movd
jns
xor
add
xchg
adc
or
in
mov
jp
push
ret
xchg
fs
rorb
sbb
cmp
lock
add
jge
push
sub
add
xor
adc
push
xor
push
pusha
sub
jbe
cwtl
dec
ds
xchg
xchg
pushf
icebp
add
mov
cmp
and
push
jo
mov
imul
jnp
pop
add
bound
es
and
pop
jno
xor
daa
incl
enter
xor
roll
iret
call
loopne
lret
rolb
push
sub
std
add
das
cwtl
sbb
pop
mov
xor
inc
fs
or
add
xor
dec
popl
jge
daa
push
rcrl
pop
push
add
dec
sub
pushf
xchg
inc
add
xchg
mov
std
cmp
jecxz
pop
insb
in
shlb
lock
xchg
ret
loopne
fmuls
push
call
pop
lcall
jbe
out
add
pushf
fimuls
xor
fadds
jne
filds
pop
loop
xor
adc
add
and
shll
or
aad
add
and
add
xchg
xchg
ret
add
fwait
das
xchg
rcrb
adc
clc
ja
add
adc
jns
push
mov
into
add
pop
scas
gs
jb
push
inc
cltd
mov
movsl
rclb
out
add
sub
fdivrs
js
add
or
repz
daa
movntps
loopne
and
push
pop
add
mov
pushl
or
les
add
mov
cmp
sub
push
adc
jp
push
roll
add
and
mov
push
mov
cmp
add
cmpsb
je
addl
test
test
in
sbb
xchg
rclb
jl
adc
movsl
add
jmp
add
inc
sbb
cld
adc
int
add
ja
pop
add
or
or
loopne
test
ss
hlt
out
jmp
add
xchg
adc
ret
out
inc
clc
mov
fs
dec
leave
xor
xor
subb
add
xchg
ret
rolb
lock
hlt
cmpl
rcrb
mov
ja
insl
sarl
movsb
adc
inc
add
ss
cmpb
cmp
vmread
std
in
out
loopne
adc
adc
xlat
xor
adc
lea
lds
pop
push
add
psllq
jne
jge
push
add
cmp
clc
dec
movl
add
nop
movsb
jg
inc
add
add
xor
loope
pop
jecxz
inc
je
fidivs
addr16
mov
iret
aam
cmp
add
inc
cmp
dec
movb
inc
inc
dec
lods
inc
nop
lock
aaa
jbe
add
test
and
test
call
add
sub
pop
or
rorl
gs
shrb
cs
jnp
cmc
setb
outsl
jae
push
popa
out
push
add
adc
test
loopne
setb
jno
jecxz
inc
stos
pusha
pop
inc
out
add
jnp
fldcw
loopne
and
faddl
adc
add
jo
jne
les
and
add
push
sbb
pusha
ret
movsl
mov
aam
nop
outsl
cmp
add
jp
push
jae
pop
aaa
sbb
push
push
cmp
inc
xsha256
cmpsb
push
mov
xor
xchg
call
add
add
sub
sbb
adc
testb
mov
scas
mov
or
mov
into
loopne
adc
dec
mov
cmp
add
sub
add
adc
leave
add
insl
inc
mov
cmp
sub
add
stos
inc
xchg
xor
inc
imul
and
add
cmc
inc
and
leave
fneni(8087
adcb
add
jb
gs
dec
fidivrs
arpl
jae
cmp
sti
cmp
and
pop
mov
mov
add
and
pop
daa
and
push
cmpsb
and
loop
mov
outsl
add
pop
cmp
mov
add
push
ja
mov
fsts
std
sbb
add
lods
mov
shr
dec
pop
aaa
shll
push
add
and
mov
jae
mov
or
mov
in
or
cs
mov
loopne
cli
ljmp
shlb
jecxz
cmp
addb
mov
mov
or
add
mov
jnp
push
add
repz
xchg
sub
jecxz
inc
enter
adcb
adc
loopne
sub
push
lea
mov
sub
jb
mov
adc
pop
clc
insl
pop
repz
sbb
push
mov
add
jge
scas
jmp
inc
mov
and
xor
imull
jg
jbe
dec
pop
je
jne
dec
sbb
jbe
add
dec
mov
lret
push
and
pop
add
or
jge
cld
cs
sarb
bound
repnz
inc
rol
inc
sbb
call
daa
or
cli
les
in
mov
js
dec
mull
add
cmpb
and
scas
mov
sti
cltd
sqrtps
or
pusha
jo
and
cmp
and
sub
mov
pop
decl
push
add
ss
jnp
enter
mov
push
sub
inc
push
cmp
stos
sub
aad
popa
adc
jl
pushl
inc
add
andb
outsb
fmul
add
push
or
test
add
dec
sbb
inc
adc
or
and
xchg
adc
push
xchg
mov
inc
pop
push
jle
divps
call
push
cmp
pop
leave
outsl
imul
pusha
shlb
add
dec
cli
loopne
in
ret
jl
add
and
add
jmp
mov
lock
nop
iret
dec
adc
add
mov
push
ljmp
adc
sbb
pop
mov
adc
nop
adc
dec
add
jp
push
adc
mov
xorb
sbb
clc
adc
int
movsb
add
ret
sub
xchg
mov
mov
out
rcrl
out
push
ret
and
cmpsb
scas
sbb
mov
and
in
xchg
xorb
sub
push
mov
cmp
mov
sbb
and
push
loope
and
dec
jmp
add
femms
dec
cld
out
adc
rcrb
js
or
movsb
mov
jae
clc
push
cmp
cmp
addl
hlt
loope
pushl
or
test
mov
les
pushf
xor
inc
xorl
jbe
push
add
adc
add
add
sbb
incl
push
xorw
adc
dec
cmp
cli
pop
aad
cmp
jb
fildl
pop
mov
icebp
call
lods
xchg
dec
dec
ret
hlt
add
orl
lret
les
andb
adc
cs
stos
pusha
add
jmp
xor
adc
mov
add
cmpsl
into
fs
push
pop
aam
rorb
pop
jmp
lods
push
ret
inc
or
loopne
xor
je
xchg
pop
cld
adc
jo
icebp
sbb
mov
dec
add
mov
cwtl
add
and
mov
inc
or
loop
pop
xorb
pop
add
sbb
xchg
and
icebp
mov
jne
mov
pop
mov
mov
mov
cmc
lds
inc
xor
nop
jle
add
mov
inc
add
sarl
add
mov
sbb
movsb
dec
pop
add
push
pop
test
add
bound
xchg
push
cmp
jne
add
cmp
add
pop
cmpsb
dec
es
add
sub
pop
js
push
mov
cmp
jle
and
pop
jmp
lcall
push
xor
pop
add
jle
add
pusha
jmp
ret
sbb
jno
aas
and
cmp
or
or
inc
or
icebp
cmc
add
add
jmp
fisttpl
repz
pop
jge
adc
adc
test
adc
pop
sub
lret
add
lret
leave
mov
imul
call
shll
shrb
add
test
loopne
jnp
add
inc
hlt
repnz
shll
in
and
add
xlat
nop
aaa
cmpsb
stos
lahf
and
loopne
dec
je
lret
push
adc
mov
shrb
loop
add
xchg
fldt
sbb
fmulp
shr
add
bound
push
mov
add
inc
add
test
ljmp
add
mov
push
or
pop
addr16
loopne
mov
gs
add
adc
enter
mov
inc
add
ja
pushf
or
push
ret
inc
jp
add
adc
adcb
and
out
sbb
push
jp
xchg
subb
inc
mov
add
aam
or
out
je
mov
out
sub
xor
cmp
or
leave
sbb
mov
aaa
cli
jbe
cmp
cmp
xchg
ds
mov
mov
lods
add
jmp
lods
inc
rolb
adc
fadds
lods
add
js
xchg
xor
push
push
in
int3
add
into
sbb
rorl
mov
popa
push
jbe
jp
pop
add
movsl
sbb
push
mov
hlt
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
ret
add
sub
inc
add
mov
dec
or
mov
stos
and
out
push
mov
xorb
cmp
lea
divl
xchg
inc
xor
cmp
jecxz
adcl
sti
jmp
add
inc
mov
push
sbb
paddb
sarb
int3
repnz
inc
sbb
or
lahf
outsl
inc
pop
stos
clc
add
cli
in
pop
pushf
sbb
jmp
repnz
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
rclb
or
cmp
xchg
add
dec
dec
in
xchg
loope
cmp
push
in
pop
cmp
mov
lock
movsl
mov
aaa
popa
sti
in
popf
and
fildl
addr16
repz
mov
lret
fwait
xchg
and
mov
add
les
aad
bound
add
aas
cli
dec
adc
jge
cmp
fs
cmpb
rcrl
pop
ret
movsl
and
sub
xchg
inc
xchg
dec
rcrb
or
sbb
shlb
pop
add
jns
es
out
in
cmpl
jae
iret
add
jle
xchg
fucomi
and
jne
add
xorb
add
loopne
rorb
cmp
jb
xchg
jo
sbb
sbb
inc
loop
pop
test
je
inc
imul
repz
jmp
rcrb
lock
cwtl
and
or
cmp
jne
add
lret
repnz
add
ret
add
pushl
addb
clc
xor
sub
stos
test
in
andl
inc
mov
sahf
jnp
add
fs
dec
pop
push
inc
pop
out
enter
jle
pop
jb
hlt
pop
lods
xchg
lret
and
int3
inc
add
inc
xor
orb
rsqrtps
stos
cmovo
and
add
sbb
pop
stos
xor
loop
adc
sti
pop
sbb
and
cli
pop
mov
out
cltd
xor
clc
cmp
pop
aas
xor
fs
cmp
scas
add
inc
push
popf
add
and
rcll
sub
lods
pop
push
or
jg
outsl
or
or
adc
stc
cmpl
in
movsl
xor
push
fcoml
add
clc
push
pop
push
addl
and
psraw
mov
cltd
and
cmp
add
add
inc
inc
clc
inc
add
add
call
cmpsl
xor
sub
or
adc
add
andb
aas
imul
nop
or
pop
imul
repz
jns
fwait
adc
add
stos
popf
stc
add
cmp
dec
cvtps2pd
sub
loopne
add
fstpt
dec
and
repnz
ja
xor
repz
pusha
xchg
add
mov
xchg
mov
clc
in
jb
cmp
or
push
das
mov
subl
add
xlat
loopne
sbb
lock
call
push
jne
add
cwtl
add
add
xor
add
adc
add
xchg
sub
mov
push
out
mov
movsl
loopne
push
ja
lds
dec
dec
sarb
or
add
sub
pop
sbb
test
adc
sub
dec
mov
add
inc
adc
add
sub
imul
add
lods
outsb
pop
xor
pop
push
mov
and
pop
jp
out
mov
mov
mov
imul
or
mov
mov
or
add
or
jnp
xchg
add
stc
jne
out
and
sahf
leave
mov
add
aad
daa
out
rcrl
in
dec
and
add
xor
mov
and
int3
push
cltd
int3
or
push
add
and
cmpsb
push
pusha
jmp
iret
sahf
movsb
rclb
jb
and
cltd
or
or
sbb
or
test
mov
pop
mov
cmp
jg
jo
add
in
jb
cmp
push
and
sbb
add
inc
jb
cmp
pusha
cmp
xor
xor
in
jb
cmp
adcb
cmpsb
add
inc
hlt
and
xchg
in
iret
add
lahf
mov
loopne
or
fdivrs
inc
inc
rolb
xchg
fiadds
loope
movzwl
rolb
roll
adc
ret
call
xchg
das
mov
add
jg
aad
sbb
or
adc
fs
xchg
nop
jg
sbb
xchg
jl
add
jo
adcb
cmp
inc
mov
push
cwtl
or
icebp
ds
jb
cmp
sbb
ror
and
xchg
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
in
out
cmp
sbb
and
dec
mov
jmp
sbb
and
in
xor
add
shlb
jne
call
sbb
sub
add
fsts
inc
rcr
fisubs
sbb
add
and
xchg
ret
in
les
cmp
sbb
mov
xchg
lret
in
jb
int
into
sbb
add
and
mov
xorl
mov
mov
cmp
adc
mov
pop
jo
and
inc
popl
inc
add
pop
out
sbb
sub
cmp
dec
jg
pop
stos
sub
inc
push
add
sub
inc
js
gs
shll
cmpsl
xor
sbb
pop
push
addl
add
push
in
mov
adcb
inc
dec
jne
je
data16
insl
outsl
jb
cmp
and
inc
mov
or
dec
outsb
fnstsw
cwtl
mov
sub
xchg
or
je
inc
sub
mov
mov
xor
test
adc
push
pop
jle
and
lock
adc
add
sarb
jns
testb
inc
inc
imul
outsl
add
pushf
adc
out
dec
add
add
outsb
addr16
popf
and
add
or
or
jbe
scas
data16
outsl
dec
hlt
je
sbb
pop
fld
sbb
or
mov
arpl
repz
or
imul
icebp
pop
mov
shlb
dec
insb
icebp
popa
movsb
rcl
bound
pop
lcall
or
pop
cmp
sub
mov
mov
xchg
outsl
dec
ss
test
or
sbb
or
inc
mov
add
inc
jne
add
outsl
aam
add
mov
int3
ljmp
ret
mov
mov
mov
mov
sub
sub
es
push
xor
mov
in
cmp
lret
or
orb
push
add
arpl
push
nop
addr16
mov
or
add
and
out
cmpsl
xor
scas
pop
fs
test
xchg
or
cld
aam
pop
ljmp
rcrb
inc
popa
and
outsl
lea
pusha
mov
sbb
bound
mov
pushf
orl
dec
inc
lods
shlb
je
pusha
in
mov
push
sub
fsub
jo
incl
imul
in
cmpsl
fimull
add
ret
adc
repz
hlt
pop
or
stc
rclb
fadds
mov
add
iret
insb
pop
push
sub
add
imul
insl
and
push
cmpsb
sub
popf
inc
sbb
add
dec
cmc
pop
or
add
cmp
clc
dec
loope
jmp
fisubrl
dec
mov
nop
push
leave
mov
mov
or
rorb
push
fmull
shll
inc
ds
repz
je
add
js
jo
jp
ja
dec
jge
jg
and
cmc
cmp
add
xor
sub
imul
ljmp
in
add
outsb
out
inc
cmp
jl
pop
jae
push
pop
jmp
jbe
hlt
push
or
mov
xchg
popa
jmp
pop
dec
xchg
sub
xor
insb
add
sub
jne
shll
xor
xchg
add
pop
cmpsb
push
or
mov
mov
dec
pusha
add
inc
push
dec
notl
add
add
mov
test
psubw
add
loop
sbb
xor
clc
loop
add
push
sub
push
add
or
adc
add
jne
xchg
cmp
add
cmc
and
add
cs
loop
repnz
xchg
aas
cmp
xchg
cs
sbb
lock
add
in
pop
inc
dec
in
push
movsl
decb
lock
add
gs
int3
or
add
mov
aam
scas
add
inc
bound
dec
pop
add
aam
aaa
xor
pop
outsb
popf
pop
xor
imul
popf
ret
out
mov
je
adc
ljmp
imul
test
pop
jbe
inc
push
out
dec
mov
inc
add
push
dec
mov
test
jg
popf
fxch
add
lods
cli
lahf
rcll
add
out
lock
int
mov
aam
xorb
adc
stos
push
rcll
xchg
lods
iret
xor
push
or
and
add
jo
inc
shld
das
add
insl
shlb
shlb
cmp
scas
add
mov
cmp
cli
add
fstpl
or
add
or
sub
cmp
ret
adc
add
pop
daa
popa
fimuls
nop
pop
add
adc
xchg
xchg
push
and
mov
cwtl
jecxz
add
cmp
xor
lret
xorb
jmp
rcl
mov
lock
outsb
std
and
out
ficomps
add
dec
inc
ss
lds
pop
push
push
mov
pop
inc
idivl
out
popf
fwait
lret
mov
imul
dec
dec
add
jne
inc
js
add
pop
test
cmp
or
rolb
lahf
lds
push
sub
jp
and
hlt
sub
xor
decl
shlb
sahf
and
add
clc
adc
push
mov
adc
ljmp
pop
cwtl
test
cwtl
lret
out
adc
xor
cmpsl
inc
fs
push
cmp
adc
cmp
pop
mov
xchg
arpl
cwtl
add
add
clc
dec
inc
mov
cwtl
sub
ljmp
stos
mov
jb
add
stc
imul
adc
lahf
ja
js
jo
fnstcw
repnz
push
pop
jbe
add
mov
add
lahf
dec
filds
les
sti
pop
repnz
add
sbb
jmp
mov
stos
push
lret
and
lock
push
lock
mov
add
popl
out
neg
stos
lea
loop
push
pusha
xchg
add
add
push
mov
add
cld
nop
sub
hlt
adc
int3
push
push
cmp
mov
dec
and
inc
sub
aas
dec
sub
or
mov
call
or
in
add
sbb
xor
xor
fisubrl
sarb
add
xor
and
filds
adc
mov
les
sub
mov
es
add
ret
jne
push
pop
push
cmpsb
add
sti
pop
out
orb
xor
cmpb
jl
or
lret
add
inc
lods
movsb
pop
xchg
pop
or
jp
xchg
push
lcall
cmp
inc
add
add
sbb
mov
sbb
clc
sub
je
or
jb
cmp
cmp
aaa
imul
shl
add
sub
ret
adcb
xchg
or
pop
jmp
inc
add
cmpsl
ja
call
ja
cmp
xorb
xchg
pop
dec
fsubrl
sar
add
push
jo
pop
add
or
xor
fadds
cmovp
mov
inc
and
popf
insw
inc
hlt
add
or
add
icebp
adc
inc
lret
dec
add
add
fs
shlb
rcrb
mov
call
push
mov
sub
aad
xor
adc
cltd
adc
push
or
enter
pusha
sub
pop
fiadds
mov
sub
add
inc
push
push
push
xorb
sbb
stc
add
cli
and
mov
sub
push
shl
fisttpl
icebp
add
mov
popf
dec
pop
js
inc
sbbb
loop
pusha
add
cmp
ret
pop
sub
push
push
inc
cmp
daa
mov
lret
dec
scas
sub
mov
push
push
jbe
cmp
ljmp
mov
lgs
adc
inc
test
loopne
add
sarb
fsubr
sub
sbbl
gs
jnp
nop
pminsw
into
adc
mov
add
and
rol
test
in
clc
std
or
out
pop
and
cmp
jmp
add
leave
and
mov
add
shrd
mov
pop
fldl
jns
add
mov
push
pop
pop
lret
pop
xchg
jl
xor
or
je
ljmp
ja
sbb
pusha
or
xchg
sbb
jecxz
orb
xchg
push
orb
sbb
xor
xchg
mov
jmp
add
loope
outsb
mov
inc
shlb
add
nop
add
inc
out
inc
inc
add
dec
enter
rcrb
add
cld
jae
xchg
in
cmp
ret
mov
jne
add
or
mov
mov
jnp
sbb
sub
rorb
push
push
cli
xchg
or
call
sarl
bound
push
stos
flds
lock
adc
out
cli
icebp
add
jecxz
jge
adc
or
or
cs
xor
xlat
call
addr16
add
incb
jl
imul
xchg
cmp
xchg
test
vpinsrw
fiaddl
xchg
lock
inc
aam
jge
add
jl
pop
loopne
sub
cmp
pusha
sbb
jecxz
add
out
add
push
cwtl
jnp
push
inc
pop
rolb
cmp
add
add
add
fnsave
das
jb
cmpsl
dec
imul
add
cmp
in
xor
ds
sub
loopne
and
pop
mov
add
fcoml
jp
or
call
sti
jns
sub
add
sbb
dec
fadd
push
jmp
movsb
or
add
mov
out
add
cs
add
test
inc
mov
add
or
cli
cmp
inc
add
inc
clc
addl
cmp
add
shl
xchg
push
pusha
aad
push
inc
ret
rcll
call
or
js
scas
enter
push
xchg
sbb
inc
fwait
cmpsl
add
dec
push
cmpb
xchg
push
xchg
rorb
jb
movsw
jns
sysret
dec
or
aad
rclb
test
add
cmpl
shl
pop
xor
xchg
push
add
mov
fidivrl
clc
pop
xchg
sub
loope
hlt
cmpsb
add
and
add
and
adc
mov
fs
sbb
jbe
mov
and
pop
mov
inc
lea
mov
adc
adc
cli
out
fadds
jo
stos
cmpsl
inc
sbb
bound
lcall
in
xor
vucomiss
and
jge
or
mov
cmp
ja
and
add
lock
sbb
cld
movl
adc
push
pop
xor
add
incb
jne
add
dec
or
shll
imul
add
cmp
lock
insb
add
std
repz
add
sub
test
std
lds
push
inc
test
lock
ja
jnp
bound
mov
shrb
cmp
adcb
adc
sub
push
pop
or
jne
mov
or
pop
call
rolb
jg
sub
pop
pop
fildll
or
mov
mov
shrb
adc
pop
dec
cmpl
loopne
adcl
pcmpgtd
add
rcrl
std
adc
adc
jge
mov
add
xorb
add
add
or
or
imul
pop
inc
je
push
sub
nop
inc
mov
pop
mov
add
lock
loopne
pop
add
dec
mov
out
lret
add
bound
insl
push
adc
xchg
xchg
inc
enter
lods
add
cmp
add
fs
pop
jmp
jg
mov
sbb
or
jge
add
fs
hlt
dec
pop
mov
dec
push
rolb
and
or
addr16
and
add
jmp
jle
adcb
dec
xchg
add
or
arpl
cld
inc
pop
rcpps
pop
cmpsb
out
mov
push
fdivr
or
add
adc
and
popa
pusha
adc
mov
mov
mov
xchg
add
push
lea
das
int
lcall
xchg
cmp
add
dec
ret
repz
and
xlat
enter
mov
bound
cmc
cltd
xchg
add
inc
add
idiv
add
mov
xor
mov
add
or
adc
mov
xor
cmpsl
add
push
xchg
pop
or
jbe
dec
rorl
dec
add
int3
dec
push
push
out
cmpsb
jle
add
ja
jecxz
dec
fucomi
dec
add
lret
mov
pop
inc
push
sbb
push
shlb
cmp
add
dec
call
repnz
and
inc
lock
xorb
xchg
add
push
pop
hlt
adc
enter
scas
popa
mov
inc
push
add
adc
pop
clc
cwtl
push
add
add
in
sbb
xorl
leave
jne
add
sahf
add
add
jne
mov
xchg
ja
push
loope
imul
lret
repz
movsl
data16
mov
pop
add
je
xchg
cmp
mov
loop
add
mov
or
aas
xor
rclb
mov
loop
dec
les
pop
inc
in
inc
repnz
rclb
add
sub
movsb
dec
leave
and
sbb
add
mov
cmp
pop
filds
mov
mov
jl
movhps
dec
ror
mov
mov
pop
push
jge
mov
popl
std
into
jmp
push
push
push
xor
push
push
and
mov
aam
nop
lods
hlt
pop
cwtl
push
add
cli
imul
stos
xchg
inc
js
xchg
add
push
dec
fsubrl
xor
cmpsb
dec
mov
add
das
movsl
pop
lret
lret
jnp
add
rol
cmpb
mov
pop
pop
or
add
fisttpll
push
add
fld
das
ret
push
xor
inc
nop
sub
inc
dec
sbb
psubb
push
repnz
scas
add
cli
pop
dec
inc
fcoms
je
jle,pt
add
and
add
adc
and
bt
add
jae
xor
and
push
into
dec
ja
push
add
dec
hlt
mov
cmp
insl
mov
ja
add
call
mov
add
jmp
add
mov
adc
pop
movsb
adc
mov
lods
lahf
add
mov
pop
je
mov
pop
fs
aaa
les
mov
stc
lock
je
add
les
jp
lock
dec
fcompl
fs
lds
add
sbb
loopne
into
adc
aaa
add
mov
call
cltd
and
sbb
call
addb
les
cmc
nop
ficompl
push
add
clc
mov
or
inc
das
jne
sbb
cwtl
pop
out
inc
std
mov
aam
mov
inc
inc
jne
and
lock
mov
popa
dec
push
mov
or
popf
xor
int3
and
daa
mov
call
pop
rolb
add
and
adc
add
pop
adc
add
adc
call
inc
and
mov
xor
mov
jecxz
dec
into
sub
insl
add
ljmp
adc
pop
dec
add
es
aas
mov
and
repz
or
inc
dec
inc
xchg
movsb
hlt
mov
pop
or
shrb
insb
mov
shufps
lret
xchg
int3
es
xchg
mov
mov
add
mov
cld
push
ljmp
lea
push
mov
mov
pusha
cmp
mov
push
cmpsb
add
add
nop
test
outsl
mov
add
inc
jns
push
add
jg
sub
sbb
setg
enter
add
out
daa
jg
add
mov
add
and
add
adc
inc
outsb
inc
ljmp
pop
shrb
inc
add
xchg
cmpsb
mov
fstl
inc
ficoms
add
jge
sub
add
or
cmp
mov
ret
iret
fistl
pop
jno
add
mov
xor
add
mov
shl
insb
ds
pop
pop
les
jle
and
mov
mov
cmpsl
or
stos
add
xor
lea
push
or
add
push
arpl
mov
repz
xor
or
push
enter
pop
aas
cmp
jg
cmp
or
adc
call
pushf
jo
pop
cmp
fimull
add
add
mov
ja
in
orb
xchg
mov
add
sub
mov
dec
je
add
push
punpcklbw
add
jmp
mov
and
cld
add
ja
vpunpckldq
xor
dec
icebp
iret
push
jge
push
fsubrl
mov
xor
int3
cmp
push
cld
add
iret
les
add
shr
add
aam
or
scas
lock
cmp
jge
pop
imul
or
shl
jl
pusha
sub
add
push
push
ljmp
into
xchg
mov
bound
aad
or
lock
adcb
dec
mov
int3
outsl
mov
stos
jb
mov
cmp
add
ror
sub
add
rcrb
xor
sbb
popa
subps
addb
xchg
sti
add
fcoms
push
add
cmp
jl
mov
inc
add
xor
xor
adc
add
sbb
add
ss
in
xchg
add
lret
or
or
add
jne
out
xchg
cmpxchg
test
out
push
xorb
inc
mov
dec
sub
test
mov
test
cmpl
jg
and
dec
mov
pushf
pop
add
xchg
es
das
js
xorb
jge
lock
and
pop
dec
popa
or
inc
push
cmpsb
jno
jo
cld
test
data16
mov
add
xchg
or
add
sub
push
fs
and
push
xor
mov
les
or
adc
jge
mov
or
push
jg
xor
add
mov
call
xchg
dec
sub
pop
aam
xchg
push
enter
into
pushf
shlb
xor
or
sbbl
test
loopne
outsb
pusha
outsb
mov
mov
mov
mov
jmp
add
jp
daa
mov
pop
inc
orl
mov
lret
or
je
xor
add
ret
pop
test
cmp
hlt
cmpsl
int3
imul
in
std
add
loopne
add
jbe
add
jge
movsb
pop
test
dec
cmp
inc
add
lock
xchg
leave
fcmovne
testl
add
and
aam
test
cmp
lret
mov
fsubs
bound
and
inc
cld
add
cmpsl
jg
rcl
pop
add
push
or
and
ds
cmp
cmp
call
add
mov
and
loopne
fisttpll
sbb
xor
add
or
or
jb
mov
mov
sbb
call
xor
test
push
jge
add
cwtl
inc
fsubrs
call
sub
rcr
or
adcb
xor
push
xor
pop
sub
add
pusha
inc
adc
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
ja
pusha
fs
add
mov
inc
add
testl
add
mov
and
inc
add
jmp
es
add
or
add
mov
add
mov
add
adc
jp
and
das
pop
add
les
push
or
je
psadbw
loop
dec
incb
xlat
mov
leave
push
add
pop
push
adc
int3
das
shl
add
mov
lock
mov
mov
inc
adc
mov
add
sbb
scas
xor
and
push
pop
stos
mov
add
jb
adc
inc
cmp
or
jne
cli
cmp
add
sub
mov
add
lods
jne
movl
push
aas
inc
clc
mov
notl
jecxz
lea
mov
pop
xchg
cmp
and
out
test
mov
jmp
add
mov
adc
mov
or
sub
add
stc
pop
or
inc
push
sbb
inc
xor
imul
and
push
rcrl
add
add
jb
inc
mov
es
or
int3
lret
add
out
add
pop
and
sub
lock
int3
stos
add
pop
pop
sub
adc
imul
inc
cwtl
jl
adc
call
mov
pop
adc
add
xchg
jmp
pop
push
inc
jns
mov
ret
mov
add
mov
adc
jns
add
fwait
mov
mov
mov
push
add
dec
add
xor
pop
adcb
jmp
mov
adc
mov
mov
repnz
adc
rorb
repz
outsb
sbb
and
movsl
aaa
nop
cmc
enter
mov
pop
roll
cmp
jnp
mov
sub
or
mov
and
enter
add
cld
pusha
sub
mov
jne
rcr
int3
aas
sti
cmp
push
xor
in
iret
sub
or
aas
cmp
add
cmp
gs
and
popf
inc
sbb
add
mov
lock
add
aas
and
xchg
fdivl
lock
pop
in
cmp
hlt
nop
mov
repnz
cmp
and
push
jl
add
and
adc
mov
iretw
sub
sub
add
dec
stc
or
push
add
jne
jge
shrb
sub
mov
dec
lret
and
push
insl
cmp
jge
paddusw
inc
pop
and
add
shrb
jecxz
data16
jo
sbb
and
mulb
fsubs
inc
dec
jb
push
loope
add
inc
mov
push
into
test
sbb
add
adc
push
mov
adc
jg
inc
adc
lahf
test
shl
push
add
xchg
inc
or
dec
jne
mov
xchg
cwtl
and
push
add
inc
and
cmp
or
adc
test
ds
pop
add
inc
jb
call
arpl
inc
js
inc
mov
mov
pop
add
cwtl
out
enter
movl
outsb
in
mov
ficoml
loopne
dec
mov
xchg
sbb
push
mov
test
es
xor
cld
enter
sbb
sahf
inc
adc
and
dec
mov
sarb
adc
inc
jl
cmp
adc
inc
sub
shlb
dec
sbb
cltd
mov
pop
mov
push
xor
cmpl
aam
mov
fildll
and
pusha
data16
fadds
bound
add
xor
shrb
and
xorb
pusha
pop
les
dec
cmp
lods
test
push
adc
cmp
int3
jmp
cmc
test
lock
movsb
cld
ror
sbb
iret
xor
pushf
iret
enter
in
sete
les
mov
call
and
lods
loopne
cmp
pop
jl
sbb
js
sub
pcmpeqb
scas
fs
push
cli
clc
pop
pusha
repz
dec
clc
loop
je
enter
mov
iret
adc
inc
pusha
cmp
dec
xchg
xor
inc
clc
adc
std
out
repz
cld
or
call
mov
andb
loopne
jb
je
inc
mov
cli
mov
cmp
repz
dec
pop
push
or
add
sarb
dec
mov
or
in
addb
adc
add
mov
sub
pop
sbbl
clc
sub
xor
add
enter
jle
lea
inc
cld
shlw
out
movzbl
add
add
add
repz
jle
add
popf
dec
jle
inc
mov
push
xor
fcoms
loopne
popl
mov
loopne
sub
inc
out
adcb
paddb
in
test
jg
pop
add
or
add
dec
stos
cmpb
daa
pop
inc
mov
fldenv
repz
jmp
mov
xchg
add
loop
add
adc
and
xchg
mov
jg
addl
repnz
xchg
bound
hlt
sub
mov
sbb
or
xor
pop
out
mov
clc
mov
shr
nop
jge
addl
neg
xlat
outsl
push
mov
mov
les
fdivl
add
xor
mov
add
inc
dec
or
adc
mov
pop
add
cmp
clc
adc
jae
cwtl
femms
cmp
sbb
push
loop
outsl
dec
mov
add
sub
add
mov
rorb
add
repz
inc
lods
mov
sub
hlt
mov
lds
jmp
dec
test
inc
pop
jecxz
cmp
addb
sub
iret
es
mov
push
or
icebp
sbb
add
fnstenv
add
add
fisttpll
nop
pop
and
add
shlb
jbe
jle
cmp
jp
sub
or
int3
idivl
pop
pop
adc
loop
jmp
lods
xor
add
add
add
inc
mov
fwait
add
pop
negl
sub
lods
std
sub
aam
jle
mov
dec
jmp
stc
push
sbb
sti
jg
adc
cmc
sbb
adc
push
std
add
addr16
xor
popf
sub
ja
pop
cltd
rolb
outsb
push
or
flds
imul
add
nop
or
dec
ljmp
adc
ja
add
dec
fisubrs
sbb
push
dec
call
and
adc
pop
add
testl
cltd
cmc
scas
jecxz
out
inc
cmp
pop
or
stc
adc
add
jne
push
push
sub
add
pop
adc
dec
setns
mov
xor
push
ret
push
mov
rolb
je
add
div
push
add
and
sbb
sti
jmp
or
sbb
je
cmp
adc
push
out
loop
mov
jg
pop
or
or
mov
mov
adc
jmp
add
gs
mov
mov
mov
clc
push
popa
add
xor
and
sub
xchg
xor
inc
cs
cmp
add
fists
add
cmp
fmuls
add
fistpl
fidivrl
lret
addl
call
push
in
add
pusha
mov
add
scas
sub
mov
cli
setl
add
xchg
pop
add
imul
clc
add
mov
shl
mov
xchg
dec
push
out
pop
ret
and
sub
pusha
sub
popa
adc
pop
ret
and
push
jecxz
or
faddl
roll
arpl
sub
add
out
clc
movsb
into
inc
add
fisubl
dec
out
xchg
push
push
and
inc
inc
and
pop
shlb
int
mov
outsb
sub
aas
hlt
push
es
cld
add
rorb
jne
stos
in
add
inc
andl
add
mov
sub
iret
lea
lods
stos
lock
jmp
int3
add
mov
add
pop
cmc
add
dec
and
add
xor
les
in
adc
inc
xchg
pop
or
jno
stc
xor
fiadds
mov
xchg
insb
cs
push
sahf
and
inc
add
loopne
jle
pop
mov
sbb
repnz
lcall
inc
sbb
add
jp
add
insl
jae
xor
leave
or
cmpsl
lea
inc
shlb
add
pop
or
lahf
adc
cmpl
inc
adc
add
inc
fmull
imul
aas
add
and
insb
pop
add
andl
fabs
aaa
call
cld
fildl
sub
repnz
dec
cmp
addl
test
jo
inc
cld
or
add
fbstp
pop
bnd
add
adc
inc
adc
call
pcmpgtd
loop
jmp
add
mov
das
or
add
or
cmp
or
jae
cmpb
and
loopne
sbb
adc
adcb
ja
jmp
pop
cwtl
das
add
pop
push
xor
sbb
nop
mov
xorl
xor
ljmp
push
add
subb
add
into
cs
enter
je
cld
jns
popf
sub
popa
addl
repz
push
roll
jp
testb
mov
push
sub
sbb
or
add
daa
js
cwtl
cwtl
adc
filds
insl
adc
mov
add
jns
xor
rcrl
inc
popa
add
mov
or
stc
push
add
pop
dec
int3
in
jmp
cmp
or
add
stos
and
add
xor
cwtl
add
lea
add
movb
adc
aas
test
testl
daa
jmp
loopne
rorb
jmp
lock
jge
push
es
daa
add
call
adc
cmp
pop
xor
add
cld
lock
xchg
cmp
sub
pop
cmp
into
fmuls
and
mov
mov
cmp
subb
sub
rolb
add
and
mov
adc
xor
sbb
push
loopne,pt
fistpll
add
outsb
fisttpl
add
mov
rcll
add
insl
nop
fwait
test
ret
lods
add
dec
frstor
add
repz
lock
add
fimull
into
add
mov
adc
mov
popa
sub
imul
inc
nop
addl
or
cmp
mov
lds
xchg
push
and
jne
push
jbe
adc
jp
aas
and
add
cmp
cmp
mov
fbstp
inc
pop
mov
pop
push
cmp
sub
aas
scas
push
inc
add
or
push
nop
dec
adc
inc
inc
and
adc
jns
mov
or
cld
je
and
fs
sub
sub
pusha
daa
add
adc
xchg
xchg
pop
xchg
icebp
or
cld
bound
jae
inc
mov
xlat
and
lea
inc
addb
leave
dec
lret
adc
xor
mov
lea
add
les
mov
inc
xchg
je
cmpb
repnz
push
outsl
add
js
in
jle
push
sbb
add
out
inc
orl
add
sub
and
mov
cmpsl
pusha
clc
dec
fsubs
add
jecxz
not
pop
mov
inc
xchg
jns
push
fdivs
jae
xor
fistpl
out
add
ret
test
add
sbb
xor
repnz
or
out
fistpl
jl
adc
mov
shl
std
dec
xlat
add
pop
add
add
fs
loopne
add
jmp
pop
add
call
and
es
into
add
cmp
ja
rcrb
lahf
push
adc
cli
jae
loopne
and
mov
mov
inc
cmp
mov
jmp
add
jb
nop
in
int3
loopne
add
popf
mov
test
cwtl
in
jp,pt
cmp
cmp
pop
dec
adc
dec
in
add
dec
jge
mov
ret
or
cmpsl
jno
into
and
cmp
lea
ret
add
xor
lret
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
cmp
xchg
xor
or
mov
mov
add
mov
movsl
inc
adc
ja
or
js
add
cmp
mov
mov
sub
mov
or
sar
add
bnd
xchg
or
add
cli
mov
jg
push
push
add
daa
lret
loope
pop
fimull
add
dec
outsl
pop
repnz
enter
and
mov
lahf
jne
stos
xor
lea
mov
inc
pop
test
add
daa
inc
inc
add
xor
sub
cmpb
add
ds
or
pop
out
xor
cmp
sbb
aaa
fcoml
push
add
inc
inc
dec
jne
flds
icebp
out
sub
cmp
call
dec
iret
in
and
push
mov
mov
mov
xchg
add
adc
sub
fstpt
jbe
pop
xlat
lahf
jns
add
add
loope
incl
cmp
flds
push
or
add
mov
and
pop
add
ret
sub
add
cs
adc
jle
jne
add
cld
push
add
xor
mov
jo
dec
pop
sub
jae
jge
bound
mov
in
mov
xchg
mov
fstpl
adc
popf
test
xchg
add
jecxz
dec
std
call
jle
mov
inc
loopne
jge
adc
dec
scas
and
xchg
add
mov
add
pop
sbb
leave
pop
jne
cld
lods
xor
jl
lea
inc
or
adc
mov
addb
pop
inc
inc
inc
dec
dec
add
dec
dec
add
push
push
or
push
cmp
add
pop
popa
bound
fs
push
insb
insl
outsb
pop
outsl
jo
jb
add
ja
js
jp
add
xor
xor
sbb
aaa
cmp
cmp
das
cmp
popf
add
jnp
sub
cmp
add
sub
daa
or
or
in
addr16
xchg
and
lds
ljmp
es
and
add
out
mov
and
pusha
jmp
or
cld
add
sbb
pop
imul
add
sub
ret
and
add
data16
in
pop
sbb
jmp
xchg
jo
push
or
pop
iret
aam
adc
daa
push
mov
add
pop
dec
or
add
mov
movsl
push
xor
flds
data16
lock
add
insb
loope
add
sub
xor
push
call
add
adc
clc
add
std
mov
in
push
mov
dec
inc
add
add
jbe
into
mov
push
sbb
out
and
movb
lods
add
cli
inc
mov
adc
mov
push
insl
and
or
out
jnp
dec
push
push
dec
jp
add
mov
sbb
push
sarb
cmpsl
ret
sub
dec
lahf
push
pop
fldlg2
and
add
ss
loope
mov
aam
pop
lods
inc
mov
jg
add
mov
movsb
pop
insl
test
incb
aas
enter
sub
add
jl
sub
sbb
loopne
dec
in
xchg
add
lahf
xorl
pop
push
push
mov
jno
bound
jae
push
lret
add
test
mov
pop
mov
mov
cld
adc
clc
and
mov
push
add
imul
add
lock
inc
mov
scas
dec
ret
xorl
xchg
sbb
or
inc
or
je
js
add
dec
inc
mov
or
inc
push
ror
loope
add
insb
xchg
and
cli
ljmp
aam
lods
lahf
pop
jg
mov
leave
xchg
or
add
subb
sub
mov
mov
stos
pop
inc
mov
add
or
str
and
push
test
add
mov
cmp
out
loopne
shlb
xor
xchg
testb
add
inc
loop
add
xchg
pop
clc
addl
pop
mov
or
xchg
adc
push
sbb
leave
mov
add
add
fcompl
mov
mov
add
dec
jne
xor
jge
je
adc
mov
or
cmp
sarb
cmpsb
add
rcll
dec
add
nopl
testl
std
in
add
cmp
pop
add
sub
adc
sbb
mov
fcom
mov
mov
sbb
int
inc
mov
call
notb
out
test
lock
ret
in
pushf
jle
gs
in
in
push
add
idivl
bound
mov
daa
enter
adc
shrl
cs
mov
scas
push
in
lret
frstor
mov
shlb
fisttps
xchg
js
add
fsubrs
sub
or
cmpb
loop
decb
fidivs
mov
adc
ja
xchg
add
mov
or
pop
add
hlt
cmp
movsl
xchg
lock
add
pop
dec
repnz
daa
add
movsb
inc
dec
push
jmp
add
inc
xorl
jp
add
popf
jno
mov
add
pop
xchg
pop
fstpl
lock
rcll
adc
add
push
rcll
push
mov
jae
popf
jns
add
xchg
in
xor
scas
fs
xchg
les
mov
mov
pop
testl
ret
aas
add
cmpsb
pop
dec
or
mov
int
mov
stos
out
add
xchg
xchg
sbb
gs
mov
repnz
sub
mov
out
add
push
add
mov
fisttpll
xchg
dec
pop
mov
cmpb
pop
jle
mov
add
ret
add
dec
pop
push
mov
in
rolb
outsl
dec
pop
jne
cmp
inc
lahf
mov
popa
inc
flds
sub
jbe
add
xor
xchg
add
je
xor
filds
and
dec
add
sbb
and
dec
mov
cwtl
or
orl
dec
add
add
mov
arpl
mov
sbb
rcll
les
dec
adc
or
inc
sub
cmp
stos
rclb
xchg
xchg
cld
jge
testb
lea
bnd
add
lock
shl
adc
adc
sub
movsl
fs
pusha
imul
push
adc
pop
call
xchg
out
lock
push
sub
in
pop
cmc
add
pop
pop
hlt
andb
les
inc
test
fsub
push
pop
add
xchg
cld
push
xor
dec
add
inc
subb
jmp
mov
jl
add
jmp
fdivs
lock
add
into
add
jmp
rorl
pop
not
insb
out
ds
movsl
rclb
test
popa
aam
les
mov
fiaddl
loopne
lock
pop
cld
mov
arpl
test
pop
sbb
add
push
xchg
fistps
sahf
cmp
aam
pop
push
add
cmp
mov
mov
pop
out
dec
add
sub
push
adc
and
add
dec
fucomp
mov
jno
xchg
inc
and
push
rclb
repz
lods
dec
int3
pmulhw
sub
adc
add
pop
sarl
push
lock
push
mov
dec
jns
into
jmp
inc
mov
cmp
in
icebp
in
rcrl
fsubl
rcll
jne
mov
call
clc
dec
xorl
add
movl
mov
test
cwtl
xchg
cmp
dec
adc
add
push
adc
shl
ss
mov
inc
pop
jno
sub
sub
sbb
push
in
sub
or
bound
enter
push
pusha
xchg
clc
pop
stos
adc
mov
mov
inc
or
js
pusha
test
or
push
lods
inc
mov
fcoml
jnp
add
iret
dec
inc
and
add
inc
cwtl
stos
add
mov
addr16
repz
sub
lahf
call
lret
movsb
inc
pushl
add
ret
call
sub
or
lods
lret
sbb
xchg
out
in
into
ja
cmpsb
sub
push
stos
xchg
inc
andl
add
pop
dec
sub
fmull
loop
mov
sbb
xchg
in
inc
cmp
jne
pop
lcall
mov
push
and
test
ficomps
add
mov
cmp
add
mov
js
scas
or
push
inc
mov
incb
lea
rep
add
push
pop
sub
dec
jae
lret
mov
loopne
or
ja
cmc
add
sub
daa
jl
addl
mov
push
cmpl
mov
mov
or
add
stos
and
leave
ret
nop
pop
xchg
ljmp
pop
cmpb
outsb
adc
test
add
sub
or
enter
leave
or
out
add
or
adc
xor
add
and
xor
lods
loopne
add
lret
stos
sub
bound
call
mov
add
xor
add
jmp
and
xor
outsl
push
repnz
enter
or
and
mov
rolb
dec
and
fimull
cwtl
ja
daa
or
lods
mov
add
ret
xor
aam
cli
fiadds
xchg
call
jle
add
jmp
verr
mov
popa
add
xchg
jecxz
and
lahf
jo
and
xorl
jb
and
jae
pop
and
lods
movsb
sbbb
sbb
fmull
push
sub
add
xchg
inc
iret
jno
lods
sub
dec
jo
cs
mov
pop
xchg
add
push
sub
add
fcoms
loopne
test
add
or
sbb
repnz
mov
rorb
std
add
enter
add
je
pop
dec
dec
or
sbb
pushf
call
in
add
pop
sbb
arpl
hlt
add
dec
push
scas
add
adc
xor
mov
jne
jne
jl
add
cmp
inc
push
sbb
mov
sub
or
sbb
scas
and
leave
jae
xlat
into
test
nop
mov
xchg
or
jge
cmp
ja
adc
push
mov
repz
fcmovne
add
iret
mov
mov
mov
or
out
fists
sbb
add
pop
icebp
hlt
ret
push
add
lret
push
sub
adc
ret
inc
sahf
adc
aas
jo
xchg
xchg
cmc
add
clts
adc
jecxz
or
adcb
inc
clc
mov
jmp
cmp
imul
out
mov
pushf
inc
push
pop
add
add
dec
imul
insl
jae
or
repz
xchg
and
sbb
fnstcw
je
push
sti
out
jne
popa
add
push
in
mov
rorl
jmp
repz
out
add
pop
adcb
mov
call
add
jmp
add
xchg
adc
and
add
xchg
adc
fistl
adc
shrl
add
mov
sub
pop
dec
dec
xchg
push
mov
out
xchg
js
nop
xlat
add
add
jne
push
inc
adc
cld
in
jmp
pop
add
fisttps
or
in
cmp
add
rcrl
jmp
add
push
mov
sub
stos
popf
mov
xor
lds
out
push
adc
call
mov
adc
mov
add
cmp
mov
adc
add
cmp
jbe
add
dec
call
add
or
adc
jle
add
mov
xchg
lret
xchg
add
jb
mov
mov
lock
and
cmpl
je
sub
cmpb
and
cwtl
dec
xchg
test
cmp
dec
adc
mov
jl
sub
in
add
test
movsb
mov
mov
adc
add
cwtl
mov
nop
test
add
mov
push
dec
dec
fimuls
sub
xchg
sti
call
push
mov
mov
inc
xor
les
sub
or
push
cs
insb
clc
and
dec
sarl
orl
sbb
sbb
inc
jae
nop
mov
add
sarl
push
pop
push
lock
mov
loopne
dec
cs
adc
data16
mov
sub
rcll
and
mov
pushf
jne
dec
adc
test
lods
add
or
je
inc
jl
push
and
aaa
cmpsl
or
mov
repnz
sub
das
jbe
iret
mov
mov
push
mov
add
arpl
cld
in
lea
xchg
push
hlt
sub
jg
add
shlb
or
adc
pop
add
add
mov
mov
outsl
lcall
ret
popf
push
jge
sahf
fiadds
enter
inc
and
xorl
and
add
incb
sbb
test
xor
adc
es
out
addb
jge
push
push
xchg
ret
std
push
inc
inc
inc
dec
repz
cmp
dec
add
mov
mov
sahf
add
push
dec
inc
clc
dec
add
mov
or
xchg
add
movsl
mov
cld
mov
add
lods
imul
sub
sub
mov
aas
push
cmpb
mov
int3
pop
es
xor
pop
out
inc
adcb
and
je
inc
mov
lock
add
dec
inc
mov
xchg
js
add
rcr
add
mov
dec
imul
add
jns
mov
mov
sub
add
jb
je
outsb
xchg
jge
jmp
push
adc
xor
or
mov
dec
mov
cmpl
push
cmp
and
inc
sbb
dec
cmp
sbb
out
std
hlt
in
pop
cli
xchg
push
lock
nop
das
mov
sub
addl
sbb
inc
sti
or
adc
leave
shl
mov
pop
cli
pop
es
jl
out
inc
pop
call
loopne
add
mov
xchg
push
add
pop
enter
popl
das
jle
psraw
add
outsb
or
add
sub
add
cmp
jle
cld
cwtl
or
or
lock
js
cli
add
cmp
sub
aam
clc
and
sbb
in
add
sub
push
dec
shrd
push
add
ss
dec
xor
out
xlat
push
dec
push
add
popa
jae
mov
add
fsts
or
jge
loop
mov
inc
cpuid
mov
movsb
push
jb
add
add
cs
ret
pushl
loop
loopne
imul
jl
and
cmpsl
dec
add
cltd
les
in
mov
hlt
movb
lret
xor
call
cld
pusha
fsubrl
inc
sub
or
xor
and
in
dec
roll
fistpl
test
adc
add
dec
faddl
and
rclb
in
cmp
call
test
cmc
mov
mov
add
push
xchg
clc
enter
lea
sarb
xchg
jmp
lret
dec
add
jae
xchg
dec
or
push
jnp
add
mov
popf
imul
mov
jnp
add
lods
fsubrs
bound
add
fisubrl
test
and
movsl
mov
push
dec
das
ja
scas
cmp
cmp
jmp
out
xor
dec
pop
sub
test
xor
xchg
mov
test
xor
in
add
repnz
mov
mov
imul
dec
jnp
mov
add
pop
xchg
dec
sub
push
sub
xchg
ret
in
sti
into
add
jnp
or
inc
push
arpl
push
cmp
scas
adc
fdivl
pop
pop
sbb
add
add
mov
adc
int3
mov
mov
push
es
sbb
ret
mov
shrl
push
movsb
adc
and
jns
mov
lds
lods
cmp
jmp
dec
fisubl
popf
adc
add
mov
mov
in
fldcw
pop
jo
in
xor
lock
mov
pushf
int3
iret
shlb
jae
add
adc
push
add
adc
fbld
hlt
in
rep
xchg
xchg
fs
cmc
aaa
jbe
add
je
mov
add
pop
enter
add
add
jns
xchg
pop
push
cmp
lret
loopne
cltd
adc
mov
pop
jmp
pop
jecxz
fists
fiaddl
popa
and
and
dec
js
ret
mov
and
mov
xor
lea
sbbl
and
jl
ror
mull
testb
mov
add
in
scas
dec
fists
mov
out
mov
hlt
in
sahf
inc
xor
add
dec
sub
or
adc
inc
adc
adc
cmp
or
add
test
inc
push
xor
outsb
add
orl
jne
sub
jno
mov
cld
sub
ja
dec
or
pushf
add
inc
jne
je
fdivrl
ret
imul
mov
dec
push
sbb
push
call
sbbb
fldl
add
pop
pop
push
push
lods
loop
or
cmp
fiaddl
jae
jnp
lds
and
test
aam
dec
mov
xchg
divl
and
add
add
mov
mov
ljmp
mov
inc
add
hlt
fstpt
faddl
push
mov
or
add
lock
xchg
repz
hlt
sub
mov
test
call
add
enter
test
popa
adc
jbe
adc
and
rcll
pop
loopne
inc
add
scas
jno
fcompl
mov
add
mov
cmp
add
dec
inc
inc
and
mov
fdivr
and
testl
dec
xor
sub
pop
add
cld
xchg
mov
add
inc
cmp
adc
jg
cmp
add
inc
cmp
jb
or
loopne
adc
popa
add
mov
sub
rcrb
bound
jae
rcrb
test
aad
or
jnp
sbb
test
or
icebp
and
xor
jmp
scas
lahf
inc
or
ret
sbb
jl
sub
jne
cmp
in
je
cwtl
or
je
add
sbb
add
add
xor
or
add
dec
adc
mov
sub
cmp
sub
inc
sbb
add
in
dec
add
imulb
pop
pop
push
push
and
imul
cmpsb
add
ljmp
jne
sbb
je
sub
cmp
mov
jp
and
sbb
sbb
scas
inc
jne
leave
into
stc
ret
fcmovb
andl
nop
xor
je
push
add
jbe
rorb
add
cmpsb
sbb
dec
add
ret
test
enter
std
call
scas
sbb
cmpsb
add
xorl
or
add
add
inc
adc
movsb
push
loope
les
jne
mov
dec
cli
mov
add
add
repnz
sbb
and
add
sbb
pop
ss
push
add
inc
nop
subl
mov
sub
add
adc
xlat
stc
or
outsb
mov
pop
jne
mov
addr16
repz
push
dec
in
add
push
out
jg
adc
and
xor
faddp
push
jno
ja
pop
nop
mov
mov
loope
adc
push
clc
or
rcl
je
xor
adc
sbb
aas
jmp
mov
mov
xor
xor
adc
in
fld
cli
call
faddl
xor
adc
movsb
jnp
add
stc
push
enter
add
mov
shl
xor
or
xchg
adc
jo
enter
dec
push
shlb
xchg
mov
out
add
icebp
push
or
adc
sbb
push
mov
sub
add
push
and
ret
ret
lsl
scas
cmp
stc
cmp
jmp
add
dec
shrl
add
loopne
dec
cmp
inc
adc
lret
pop
and
cmc
popf
inc
je
cli
inc
and
pop
add
std
add
adc
add
je
cld
shlb
or
add
jnp
addr16
add
fistpl
dec
test
jle
add
and
pushf
pop
enter
add
mov
sub
xchg
mov
push
pop
jnp
add
jo
cmovo
add
sti
call
aad
pusha
pop
add
cmp
iret
loopne
shl
int3
jmp
cmc
lea
sti
and
sbb
or
jp
add
cmc
clc
pushf
cmp
fsubr
loopne
ret
pop
sbb
and
push
fxch
mov
idivl
xchg
add
xor
adc
rep
inc
push
add
add
mov
cmp
adc
fisubrl
jae
pop
sbb
mov
les
and
push
xchg
sub
inc
call
jb
scas
sbb
clc
call
and
pop
enter
xchg
sub
sbb
clc
lds
les
cmp
scas
iret
and
sbb
scas
adc
je
mov
movsl
or
adcl
lds
cltd
jns
pop
jp
scas
jg
inc
mov
ss
mov
sub
push
mov
add
push
sbb
push
add
int3
adc
aam
enter
mov
add
or
mov
out
and
inc
adc
subb
add
movsb
add
mov
lods
insl
inc
xchg
push
and
sub
cmpsl
subb
rolb
pop
ljmp
sub
ret
xor
mov
sub
and
dec
stos
or
inc
testl
jl
daa
add
loop
mov
mov
xor
shlb
mov
icebp
sbb
xor
addl
add
popf
xor
loopne
cltd
daa
add
pop
mov
pusha
cmp
jmp
popl
xchg
and
pop
sbb
pop
jmp
mov
adc
roll
ds
xchg
mov
jo
add
les
pop
cmp
fidivrs
enter
lods
xchg
mov
pop
leave
verr
inc
inc
test
pop
and
cmpsb
shll
in
sbbl
jp
mov
sub
insl
ret
inc
mov
sbb
adc
loopne
push
inc
jmp
clc
xor
nop
stc
add
xlat
in
add
dec
jl
add
dec
add
pop
inc
dec
adc
test
andb
push
fidivrl
cs
sti
rcrl
shl
mov
xchg
fadds
lock
add
add
addr16
dec
mov
push
or
fdivrl
jbe
xor
add
loope
ret
add
rorb
add
fs
int
add
and
shrb
sub
loope
add
outsb
pop
jl
cmp
aas
add
inc
add
and
clc
cmp
jle
test
sub
imul
fistl
hlt
sub
sbb
push
adc
xchg
push
xor
add
cli
jg
das
fdivrs
mov
sbb
insb
adc
lods
lcall
xchg
sbb
add
sub
push
jnp
ja
in
outsb
test
jbe
cli
xlat
and
std
pop
cmp
jge
lea
cmp
lret
andb
scas
sub
test
add
lea
cld
cmp
sbb
out
add
add
fnstcw
ret
sbb
add
popf
push
sti
mov
dec
add
push
outsl
push
imul
mov
jo
push
or
call
inc
mov
add
lret
xorb
loope
push
mov
call
shrl
or
cmp
lret
jl
repz
mov
and
imul
mov
adc
movd
inc
stos
jge
into
mov
test
add
mov
or
pop
lsl
lahf
scas
mov
scas
sarb
mov
adc
rcll
js
add
sub
xchg
icebp
push
add
nop
sbb
add
inc
xor
inc
sbb
adc
nop
add
cwtl
invd
imul
sub
scas
add
jp
mov
mov
popf
in
mov
fildl
sub
mov
push
rclb
mov
add
adc
or
inc
cld
jg
int
xor
xchg
jno
std
mov
scas
mov
inc
jns
pop
cmpsb
and
stc
cmp
add
mov
dec
call
ret
add
push
imulb
inc
mov
mov
mov
inc
jb
push
shrb
inc
mov
js
sub
sbb
mov
add
pop
es
cmp
xorl
pusha
lock
adc
dec
cwtl
stos
inc
mov
dec
rcl
add
add
add
adc
or
mov
rcrb
das
call
push
sub
push
adc
inc
add
mov
les
out
fdiv
in
add
cwtl
enter
inc
out
adc
fiadds
mov
loope
pop
ret
push
jns
addb
adc
aaa
ret
js
cld
insb
adc
iret
add
or
lods
inc
pop
pop
adc
add
adc
inc
cld
xchg
xor
sbb
add
mov
mov
add
add
mov
adc
mov
outsl
addr16
in
sbb
and
mov
testb
add
cmp
jnp
add
mov
mov
jno
loopne
data16
push
dec
rolb
sub
and
mov
mov
add
push
jo
cmp
or
add
mov
sub
push
pop
orl
ljmp
xchg
mov
jb
cs
adc
flds
pusha
mov
scas
and
mov
mov
inc
movsb
add
jle
fwait
sub
ret
or
inc
rcll
daa
orb
push
pop
cld
into
sbb
add
xor
aam
mov
add
and
aam
flds
je
add
in
cltd
test
icebp
roll
loopne
and
jl
mov
scas
cmp
add
lods
inc
les
inc
jno
add
inc
and
hlt
xchg
adc
pop
out
add
push
add
and
test
add
inc
add
or
js
dec
xchg
add
cs
and
xchg
nop
lds
inc
pop
rclb
adc
adc
xchg
xor
add
push
shl
add
nop
add
fcomps
push
add
ret
pop
pop
inc
mov
aad
or
xchg
int3
ljmp
in
mov
out
mov
xor
int
and
sahf
adc
je
mov
aas
and
cmp
fs
sub
inc
decb
nop
inc
andb
add
mov
xor
mov
add
xor
sbbb
push
testl
add
mov
mov
aam
adc
or
mov
add
mov
sub
fwait
mov
in
mov
hlt
mov
das
push
in
dec
cmpsl
shl
inc
cs
sbb
add
inc
push
push
pop
std
jl
mov
cli
add
mov
adc
or
mov
movsb
mov
xchg
clc
test
jg
dec
push
cmc
test
jno
add
stos
cld
jb
out
add
sub
adc
icebp
les
jae
mov
push
jg
add
and
enter
dec
aaa
dec
pop
clc
adc
cli
sub
xlat
mov
adc
push
add
pop
mov
sti
sub
jmp
fisttps
mov
xchg
aad
pop
xlat
jnp
int3
mov
pop
add
insb
fldl
enter
repnz
pop
jbe
xchg
out
cmpsl
xlat
into
xchg
push
loop
add
push
push
sub
data16
mov
adc
fisttps
into
mov
pop
inc
push
sbb
xor
int
sbb
sbb
lea
or
inc
cmp
repnz
loop
adc
adc
mov
cmp
add
insb
outsl
insl
mov
in
jb
add
and
leave
mov
test
lods
dec
out
add
mov
mov
aaa
fs
or
sbb
sti
daa
inc
insb
sahf
decl
add
mov
inc
or
pop
mov
pop
add
das
insb
int
or
dec
mov
movsb
roll
inc
fadd
popf
lret
mov
cltd
shl
add
xchg
adc
sahf
lret
or
push
mov
clc
sub
mov
fistpll
popa
add
pop
les
mov
mov
xchg
out
leave
or
mov
ds
inc
adc
inc
inc
cmp
pop
icebp
or
les
and
adc
mov
dec
loop
add
mov
in
sti
shlb
or
cmpxchg
repnz
shll
sub
mov
int3
les
popf
cmp
pusha
add
fistpl
cmpsl
into
sbb
call
push
cwtl
and
daa
outsb
ja
call
add
pop
leave
pop
mov
cmp
mov
inc
int
add
lods
icebp
dec
fldt
adc
inc
scas
jae
les
add
inc
fdivrl
and
inc
mov
pusha
pop
xchg
sbb
cmpsl
jb
or
sbbl
mov
and
leave
stc
fildll
add
imulb
push
and
add
cs
mov
in
stc
adc
or
jge
movsb
mov
mov
pop
mov
pushl
iret
mov
ljmp
jmp
add
fisubrl
sarb
stc
pop
mov
mov
aaa
das
jno
scas
dec
fisubs
pop
out
and
clc
out
pop
out
or
xor
aaa
lret
sbb
stc
add
call
dec
push
push
mov
fimuls
xchg
jnp
mov
and
inc
mov
and
movsb
push
add
or
flds
out
push
and
test
or
stc
and
mov
cmp
inc
fistpll
adc
shrl
jmp
pop
inc
test
sahf
mov
adc
stos
loop
aas
nop
mov
stos
sbb
xchg
add
pushf
push
push
cmpb
and
pop
jbe
add
or
xchg
shl
pop
fsubrl
add
les
loope
adc
push
mov
repnz
loopne
shlb
test
and
pop
test
ds
aas
xor
scas
outsb
lret
add
sarl
or
xor
call
add
push
add
negb
mov
xor
call
jb
dec
sti
xor
sbb
xor
push
pop
add
dec
outsl
jnp
out
xor
and
add
lods
pop
call
xchg
aam
nop
out
jge
add
sub
pop
mov
cmp
inc
ljmp
sub
movsl
idivb
scas
imul
pop
adc
jg
add
decl
sbb
scas
add
sub
add
insb
aas
hlt
inc
add
sbb
scas
lea
adc
lock
daa
in
inc
cmp
sbb
add
pmuludq
cmp
dec
mov
addb
dec
and
hlt
ret
add
jl
dec
adc
and
add
push
es
inc
out
add
call
aas
xorb
xchg
out
mov
enter
in
cs
and
mov
add
shll
pop
in
adc
or
jmp
mov
xor
int3
lods
pop
dec
mov
xlat
sub
fnstsw
das
jl
adc
mov
clc
inc
add
mov
bound
push
xor
incl
nop
sub
shl
pop
add
out
pop
push
cmp
ret
or
pop
shlb
and
data16
mov
lods
sub
and
mov
rolb
pop
out
arpl
rcr
mov
sub
or
pusha
jmp
xor
ret
mov
cmp
mov
sbb
add
daa
dec
pop
mov
sbb
push
mov
push
sub
pop
cmp
insl
adc
xor
aas
or
adc
hlt
push
sbb
andb
mov
push
xor
repz
cmp
call
fildl
and
lock
jmp
mov
xor
pop
cmp
adc
call
lret
lds
sbb
jmp
or
inc
ljmp
daa
adc
push
adc
and
mov
xor
sub
mov
andb
mov
repnz
pop
cwtl
stc
xchg
jp
and
psubb
adc
scas
jae
orb
sub
cmpsb
or
movsl
add
les
mov
jo,pt
insl
push
inc
mov
adc
cld
xchg
jo
lret
add
cwtl
subb
out
dec
or
sub
or
enter
sub
pusha
or
in
jae
mov
pop
mov
jp
push
pop
cld
sub
push
in
pop
push
inc
test
cld
shrl
mov
mov
xchg
les
dec
mov
inc
and
or
in
pop
insl
cmp
ret
xor
or
pop
jecxz
mov
adcl
fists
in
cli
pop
add
push
xor
data16
test
sub
dec
in
les
jo
into
test
jl
out
cld
in
loopne
sbb
mov
mov
mov
popa
inc
loopne
loopne
push
add
rorl
jnp
hlt
mov
addb
lahf
loop
mov
outsl
inc
jbe
jno
es
ds
add
mov
xchg
mov
mov
mov
gs
or
cmp
out
pusha
fisubs
sbb
sahf
dec
and
clc
pop
cmp
jmp
add
xchg
cli
mov
add
test
lock
cmp
add
push
test
dec
lock
xchg
inc
notl
sub
or
mov
loop
mov
jnp
jle
add
lods
xor
testb
icebp
cld
or
mov
or
shl
pop
inc
cld
mov
or
push
cltd
mov
daa
xchg
jecxz
cld
dec
add
add
cmpsb
aam
push
icebp
adc
add
or
pop
cltd
pop
jle
mov
repnz
rcrb
pushf
lcall
xorb
sahf
xor
das
lock
pop
lahf
roll
sarl
mov
test
ret
push
adc
sub
not
push
and
sub
shrl
into
mov
inc
loopne
rorl
dec
cmp
lods
ds
jnp
inc
rclb
or
or
cmp
sub
xor
nop
and
and
dec
repz
or
dec
aam
repnz
add
adc
rcrb
inc
hlt
enter
pop
shll
cli
push
outsl
pusha
movsl
mov
out
pop
stos
and
add
add
hlt
xor
add
add
bound
xchg
or
mov
adc
xlat
adc
pop
push
push
movsl
jecxz
xor
dec
push
adc
and
inc
add
xchg
mov
lock
ljmp
mov
jo
add
mov
xor
leave
addl
cmp
inc
push
add
pop
add
mov
add
mov
add
inc
cmp
pop
clc
das
adcb
mov
cli
xchg
add
sbb
hlt
xor
loopne
push
enter
lret
add
ss
dec
sbb
add
in
cmp
cmpb
mov
jo
adc
or
mov
into
inc
out
add
sbb
pop
fsubs
xor
add
inc
sub
add
add
push
in
pop
add
xor
inc
dec
sete
xor
add
or
and
pop
addb
loop
add
jecxz
out
mov
nop
xor
xor
jo
xchg
or
sbb
outsl
add
push
in
out
add
xor
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
xor
push
mov
mov
push
call
cli
cmp
push
and
sbb
icebp
mov
inc
sbb
mov
outsl
enter
nop
sub
and
pop
inc
xor
add
stc
cmp
mov
pop
add
enter
dec
and
and
push
clc
jb
pop
or
or
cwtl
pop
stos
testb
in
and
mov
pusha
cs
xchg
dec
ret
ss
stc
dec
mov
add
call
movzwl
sub
nop
js
jl
pop
add
repz
and
test
negb
bound
hlt
jb
ds
xor
rcll
inc
pushf
jp
mov
mov
enter
push
test
test
std
jnp
add
jge
add
call
add
daa
or
outsl
mov
fstpl
xchg
out
sub
pusha
pop
lock
inc
add
jb
sbb
faddl
dec
test
add
movsb
pop
and
push
add
test
fmul
rolb
mov
in
jp
add
xor
push
sbb
inc
fiadds
xorb
aas
les
jb
fdivrs
fmull
add
out
or
loopne
int
shlb
push
pop
fbstp
aas
negb
pop
bound
mov
repz
or
or
arpl
xchg
mov
clc
xchg
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
sbb
aas
enter
xor
and
sbb
inc
and
movb
and
inc
add
test
push
inc
sbb
je
mov
or
push
pop
add
sbb
fadds
jns
lret
cld
enter
sbb
add
fldl
mov
aas
xorb
mov
push
or
roll
shll
dec
and
add
in
add
adc
jp
pop
je
adc
test
mov
add
adc
ljmp
loopne
add
add
dec
jne
idivb
sbb
icebp
xor
rcl
es
add
and
xor
mov
das
xor
aam
add
jo
scas
add
pop
pop
sub
pop
xor
add
jle
in
mov
cmp
ret
mov
add
or
jle
add
int3
rolb
xadd
iret
push
or
xchg
nop
lret
orb
add
rcr
or
neg
negl
inc
sbb
add
rcr
sub
jmp
push
add
inc
filds
pop
add
rcrb
cmp
add
aam
aad
rclb
adcb
js
in
call
jo
add
rcl
rorb
loopne
lock
xor
shl
repnz
xor
push
ss
cmp
add
add
shlb
cmp
adc
cmp
rolb
cmp
cmp
add
jo
add
sar
cmp
sbb
sub
jmp
pop
sub
out
scas
nopl
pxor
sub
arpl
js
in
and
lcall
test
and
xor
or
jecxz
and
cmp
shlb
and
xlat
mov
xlat
mov
mov
ja
add
cmpsb
xchg
andl
push
insb
shrl
scas
add
outsl
sbbb
inc
scas
shrl
sbb
stos
add
test
push
inc
mov
rclb
jp
aas
mov
push
jg
mov
cmpl
jne
cmp
ja
mov
mov
inc
jbe
jb
mov
mov
jae
mov
jno
jo
jo
adc
nop
add
rclb
inc
je
jbe
js
sbb
sbb
add
xchg
adcl
pop
inc
jo
in
roll
sbbl
loopne
pop
mov
pop
pop
inc
cwtl
fisttps
lahf
mov
sbb
dec
xchg
add
dec
out
dec
cmp
or
or
rolb
inc
inc
xchg
addr16
addb
cmp
data16
cmp
test
jl
push
mov
adc
cld
pushf
mov
pop
rcrl
popf
mov
xor
ret
inc
and
and
push
sbb
cpuid
sub
loopne
sbb
add
fcompl
pop
outsb
jecxz
andb
xor
lods
push
ds
out
add
jae
call
mov
pop
fnstcw
jbe
in
xor
out
ret
and
and
cwtl
mov
push
add
in
lock
adc
add
add
push
mov
cmp
sub
arpl
xorl
push
add
shrd
jmp
sub
jmp
push
pop
out
pusha
rclb
add
cld
mov
add
pop
dec
or
lods
xor
ret
orb
lcall
add
dec
or
xlat
lcall
add
pop
sbb
pop
pop
adc
adc
pop
lods
add
jle
and
mov
outsl
enter
cld
dec
bnd
aad
ror
push
lods
cmp
cmpsb
jmp
add
call
inc
leave
clc
or
add
jb
xchg
outsl
pop
inc
ljmp
test
cld
jbe
adc
cmp
je
shrb
ja
add
push
lea
add
jmp
mov
xchg
add
jp
mov
pop
scas
js
add
add
push
and
addr16
push
mov
shr
cmp
add
mov
mov
sub
or
subb
push
clc
aad
add
lcall
add
ljmp
mov
insb
add
inc
jno
sub
fiadds
add
not
and
pop
daa
add
or
pop
add
ret
inc
incl
ret
jb
sbb
clc
cmp
rol
jne
jg
add
dec
or
bnd
dec
rep
xchg
mov
into
roll
adc
addl
gs
cmp
push
mov
stc
iret
fsubp
icebp
push
push
and
rorl
inc
adc
lret
lock
add
scas
and
and
and
xchg
jno
sub
add
add
mov
fwait
enter
xor
addb
cmp
cmp
push
adc
loopne
cmp
dec
mov
add
add
push
xchg
cli
fisubs
sbb
movsl
stc
or
sub
xchg
mov
sar
pop
call
sbb
movsb
ret
addr16
adc
ljmp
and
inc
inc
popa
adc
cmp
xchg
mov
xor
mov
and
add
xor
mov
ja
lods
inc
mov
sbb
push
adc
add
leave
or
nop
testl
push
repz
mov
outsb
sub
dec
lock
or
pop
leave
loope
adc
add
adc
cmp
add
adc
jle
lock
xchg
mov
mov
sub
add
pop
fnstenv
xchg
nop
sub
sbb
aas
jno
addb
and
enter
or
push
sbb
and
lret
or
pop
icebp
shll
cmp
add
pop
push
or
stos
enter
orb
xor
sbb
rcl
repnz
out
xchg
pushf
sbb
or
or
add
out
idivl
jmp
sub
les
stos
and
inc
aad
xor
and
pop
sub
ret
dec
cld
icebp
or
mov
test
cld
xchg
loopne
popf
sahf
push
lret
mov
or
push
or
pop
je
hlt
add
inc
pop
mov
rclb
test
add
fadd
and
leave
je
jl
cs
ljmp
int
pop
dec
mov
xor
xor
psubw
daa
call
add
or
add
dec
sbb
push
dec
lahf
mov
data16
and
jmp
inc
push
mov
cltd
add
imul
cmp
andb
in
push
add
jae
mov
add
add
mov
in
int3
inc
lds
pop
test
pop
lea
mov
mov
adc
adcl
add
push
push
add
adc
or
lret
adc
sub
adc
adcb
push
mov
je
add
push
pop
mov
das
pop
mov
inc
mov
dec
subb
or
in
pop
add
mov
adc
lret
add
movsb
adc
pop
sbb
add
enter
jae
jns
shlb
sub
rcl
in
push
xchg
add
jbe
test
clc
jle
mov
push
push
mov
sbb
pop
add
jb
loop
std
in
pop
lods
adcl
enter
and
ss
push
insl
cmc
and
rcll
hlt
in
repnz
data16
test
mov
xchg
push
ljmp
sub
fwait
jnp
lsl
sbb
jne
push
int3
sub
add
dec
xor
repz
inc
jecxz
jecxz
hlt
mov
jmp
xor
add
nop
adc
sub
xchg
sbb
rolb
shll
inc
add
nop
jl
mov
cld
sbb
sar
rol
pop
jl
add
dec
gs
hlt
cld
lret
fisttps
test
inc
dec
jmp
mov
push
imul
hlt
fcompl
xchg
mov
or
and
inc
rcrb
adc
jl
add
dec
cmp
xchg
push
inc
fs
jo
aas
shr
addb
mov
js
jne
sbb
mov
add
dec
loopne
out
xchg
add
mov
rclb
fwait
aam
and
shl
inc
adc
cmp
fistps
movsl
xor
shrl
fcoms
rcrb
mov
nop
lods
jns
add
mov
lahf
add
adc
or
pop
aad
inc
popf
std
insb
sbb
add
push
out
add
pushl
fs
push
push
mov
add
or
mov
cmpl
or
out
sbb
xor
lahf
inc
xchg
adc
mov
loop
fs
add
mov
add
add
sbb
shll
inc
mov
imul
jb
push
or
das
pop
push
push
cmp
enter
lcall
add
shl
mov
mov
and
xor
mov
pop
cltd
sub
aam
or
pop
rolb
push
shl
cmp
divb
and
test
sbb
pop
movsb
in
jmp
addl
loope
std
sbb
jbe
inc
and
mov
add
push
push
icebp
mov
cmp
sti
pop
jmp
xchg
into
push
mov
lock
adc
cmp
aam
call
rclb
int
mov
add
es
stos
dec
push
dec
fsubr
arpl
push
sub
rorl
pusha
mov
add
aaa
shll
dec
das
fstpl
jns
adc
pop
mov
cwtl
push
arpl
imul
pop
inc
mov
dec
loope
sub
and
inc
inc
add
scas
push
push
cli
add
fdivs
push
push
jge
adc
add
mov
pop
inc
inc
lock
imul
sub
js
pop
jb
push
decl
lcall
pop
pop
dec
jns
outsl
in
call
adc
add
lock
test
loope
adc
push
jge
es
rclb
ljmp
movsl
cmp
add
dec
pop
leave
repz
mov
aad
or
push
inc
into
inc
mov
repz
mov
fs
pop
jo
rolb
dec
push
in
shrb
cld
enter
out
jb
ret
call
mov
movw
add
push
inc
or
adc
or
lods
cs
adc
add
push
sub
xor
sub
sbb
sbb
or
mov
mov
add
imul
verr
outsb
sub
push
les
xchg
sbb
addb
lea
adc
add
bound
ret
xchg
xchg
mov
jns
add
and
test
lods
hlt
inc
movsl
push
ds
ficomps
xor
jns
sbb
dec
test
push
aam
outsl
mov
and
xchg
dec
iret
cli
cmp
daa
add
inc
mov
mov
mov
arpl
cmp
xor
inc
cmp
adc
jl
or
pop
or
add
xchg
movb
or
adc
dec
inc
arpl
push
pop
mov
add
sti
ret
je
or
jmp
adc
repnz
dec
xorb
pop
jne
out
and
push
add
repz
inc
outsl
xor
cs
add
aas
loopne
fdiv
inc
pop
add
and
pop
sub
or
scas
jne
lret
add
ds
push
in
push
lds
mov
jl
fsts
in
or
sub
inc
jno
sub
sarl
push
js
adc
add
outsb
mov
or
jb
sbb
repnz
cmp
jne
inc
pop
add
push
jmp
add
dec
and
mov
xor
adc
loopne
sub
gs
add
mov
add
mov
jb
pop
insl
pop
std
stos
mov
jo
mov
xor
aas
arpl
xlat
imulb
rclb
cli
xchg
lea
pop
mov
mov
dec
or
jge
mov
add
lds
and
jo
mov
adcb
sub
sub
cmp
sbb
pushf
lret
repz
sub
jl
mov
or
jmp
cmpsb
hlt
call
jns
mov
fistpl
inc
rcr
add
je
rcrl
or
test
cld
enter
lret
add
push
push
js
add
or
adc
add
std
repz
cld
mov
movsb
sbb
mov
xorl
inc
add
test
cmc
and
cli
clc
add
pusha
add
mov
mov
fistpl
out
mov
lea
addl
scas
sbb
sbb
cmp
mov
push
add
imul
add
sub
out
cmp
pop
jmp
jb
mov
sub
cmp
movl
inc
ds
mov
jne
push
cwtl
xchg
mov
add
push
out
ja
sbb
test
jmp
inc
adc
nop
pop
fldl
xor
sbb
test
dec
adc
push
mov
rorb
mov
pop
pop
orb
adcb
xor
dec
inc
dec
scas
dec
or
xchg
ja
adc
xorl
pop
leave
sbb
flds
jle
and
inc
add
ret
fistps
inc
xor
xlat
loop
inc
pop
sub
adc
cmp
cmp
cltd
inc
push
mov
mull
ret
adc
and
enter
loopne
add
add
mov
loop
faddl
sbb
sbb
add
xchg
xchg
addr16
or
xchg
pushl
push
push
cmp
pop
dec
jge
sub
mov
cmp
jb
add
dec
xchg
fnsave
add
cmpsb
jge
adc
push
loope
dec
mov
sbb
ljmp
xor
rolb
pop
ret
test
cmp
hlt
inc
testb
cmp
roll
mov
or
idivb
and
cmp
xchg
add
or
rcl
push
jmp
inc
roll
out
fadds
push
or
fstpl
dec
add
ret
sub
pop
mov
mov
add
test
cld
rcl
je
add
dec
mov
cmp
mov
add
pop
pop
xor
add
rcll
cmp
inc
sbb
out
fsubrl
adc
inc
jne
aas
mov
xchg
add
adc
cmc
les
testb
stc
adc
repnz
adc
jmp
xor
add
sti
rorb
xor
xchg
mov
gs
notl
rclb
pop
cmp
mov
add
popa
xorl
or
xor
mov
add
mov
outsl
repnz
pushf
ds
adc
xchg
sbbb
rolb
es
cmpsl
fisttps
and
inc
adc
mov
sbb
pop
add
sub
rcr
jb
dec
adc
adc
ja
or
lods
sub
sbb
pop
repz
frstor
pop
inc
mov
add
dec
scas
xor
add
dec
rcr
add
mov
or
push
cld
pop
shll
out
cmp
andb
pop
add
mov
out
or
adc
jmp
push
add
add
push
inc
or
sbb
inc
or
ljmp
sub
ds
add
test
lock
sbb
add
out
sub
fwait
dec
xor
in
sub
mov
add
inc
mov
add
les
xchg
mov
add
inc
mov
sbb
fisubs
ja
add
sbb
and
sbb
mov
and
lret
inc
lock
cwtl
add
orb
mov
outsl
call
sbb
dec
mov
mov
or
cs
repnz
push
movb
sub
dec
jmp
andb
adc
test
rol
mov
cli
sbbb
getsec
test
notl
mov
adc
jne
jns
push
rclb
xchg
sbb
adc
push
push
rclb
mov
push
inc
stos
rolb
mov
sahf
push
out
cld
call
cmp
inc
jg
or
push
addb
add
push
pusha
data16
dec
add
daa
dec
cmp
sub
mov
add
inc
jnp
push
sub
push
sub
test
xchg
mov
or
push
aam
push
xchg
cmp
rolb
push
jg
add
sub
push
lock
adc
rcrl
xchg
xor
cmc
and
or
cmp
lods
nop
in
add
pop
dec
push
xor
sbb
pop
sbb
inc
movsb
xchg
pop
mov
sub
push
cs
mov
insb
imul
ret
cltd
xor
stos
call
xchg
dec
push
mov
xchg
or
xchg
rcll
and
dec
inc
std
and
add
push
aam
adc
inc
lret
add
stos
cwtl
fnstcw
add
add
or
add
cltd
add
fisubrs
mov
cmpsb
mov
adc
es
add
stc
ds
call
test
lea
xor
call
rolb
sbb
mov
inc
dec
sub
testb
inc
add
push
dec
out
xchg
lea
mov
gs
mov
cmp
xor
push
inc
jo
scas
pop
nop
cli
pop
aas
lock
or
mov
in
jle
mov
adc
ds
mov
cmp
push
add
sub
test
lahf
hlt
or
add
push
cs
das
pop
jbe
jo
push
add
xor
add
add
clc
pop
jg
push
mov
jbe
pusha
sub
pop
and
add
push
mov
xor
lret
xchg
add
jge
mov
das
push
adc
or
inc
or
push
push
gs
xchg
out
add
fs
add
mov
pop
push
add
xchg
pop
adc
clc
or
divl
add
mov
jae
aam
or
lahf
inc
xchg
add
mov
pop
mov
or
hlt
cmp
out
aad
outsl
xor
or
xchg
ljmp
fistpl
fsubs
cmp
add
enter
icebp
insb
mov
fadds
add
jge
push
jg
mov
add
call
enter
loop
adc
getsec
pop
dec
dec
and
mov
fsubs
lea
rolb
stos
and
xchg
push
adc
scas
jne
cwtl
and
jo
fdivrs
add
fs
add
mov
add
rcr
sbb
aas
add
loope
xor
inc
fdivs
pop
mov
jle
jo
pop
add
dec
xor
push
or
pop
das
es
sbb
push
xor
mov
cs
hlt
in
adc
pop
ds
add
outsl
cltd
and
jae
cli
add
jl
orb
pop
es
leave
lret
sub
inc
jo
and
mov
add
in
mov
imul
call
dec
daa
add
fisubs
mov
jge
fs
push
shrl
pop
pop
test
push
pop
push
jp
and
test
inc
sub
inc
jns
or
mov
bound
nop
add
mov
xor
in
and
and
adc
pusha
add
add
xor
sub
sub
sbb
add
adc
mov
sbb
add
add
adc
add
insl
mov
xor
orb
out
mov
movb
cmpb
add
or
add
sub
add
cli
add
push
push
mov
add
add
test
or
xor
add
pop
push
xor
sub
add
cmpsb
push
mov
adc
js
cld
inc
push
push
pop
fucom
scas
sbb
cli
sub
push
add
and
pusha
pmuludq
mov
add
sarb
sbbb
dec
scas
add
call
add
cld
lea
add
inc
das
lds
xorb
rcll
fnstcw
add
popa
or
add
add
push
inc
push
stos
ret
xor
jmp
cltd
sub
pop
int
sbb
add
into
mov
fadd
push
push
inc
mov
push
add
out
fimuls
leave
add
pop
jecxz
add
sbb
fcomps
fwait
mov
in
enter
sub
mov
push
inc
dec
xchg
dec
inc
push
pop
mov
lock
xchg
add
xor
push
fstpt
ds
gs
adc
clc
shl
add
ljmp
add
push
pop
sbb
jle
xchg
test
jo
push
nop
addb
and
cmp
sub
popa
inc
movsl
mov
sub
pop
jno
inc
xchg
add
xchg
movsl
mov
mov
dec
add
add
iret
int3
xchg
ret
pop
add
adcl
int
jge
mov
repnz
call
repz
jnp
andb
ds
push
add
insl
orl
adc
popf
adc
cmpsb
adc
xchg
lcall
and
aas
shlb
and
mov
cmovb
add
repnz
add
std
in
ret
pop
mov
add
xchg
xor
jns
pop
sarl
sbb
add
rcrb
add
test
fldcw
push
shlb
call
push
iret
add
inc
sub
add
mov
rol
rorb
fadds
xchg
inc
dec
stos
jp
add
je
flds
add
cld
int3
test
pop
es
cmp
mov
in
mov
andl
hlt
test
jp
add
aas
daa
cmp
mov
mov
mov
add
push
mov
rcrb
enter
xorl
subb
cmp
add
adc
or
sub
add
dec
mov
add
add
scas
lds
ds
add
xor
sub
sub
mov
add
repz
push
cmp
add
add
sbb
sbb
push
loopew
sub
add
xor
add
stos
inc
rcr
in
push
add
xchg
push
mov
xor
dec
cmpsb
push
std
add
add
daa
or
adc
loope
sub
or
mov
aad
xchg
sbb
cmp
jnp
xor
loope
xor
pop
cwtl
pop
icebp
int
push
decb
lcall
in
add
gs
cmp
outsb
jl
adc
add
test
add
sub
inc
cli
add
xor
fs
and
push
sbb
fwait
add
jecxz
sbb
push
add
push
dec
add
in
arpl
lds
mov
dec
add
mov
aas
ret
sbb
or
xor
aaa
lock
arpl
jb
imul
push
stos
inc
insl
add
sahf
add
ret
and
stos
xor
mov
icebp
add
movsl
ret
sub
test
mov
pusha
xchg
insb
xor
jne
push
data16
sarb
aam
push
pop
into
test
mov
out
add
lret
add
adc
push
stos
sub
icebp
add
dec
pop
in
xor
pop
les
jecxz
jns
ss
add
pop
mov
or
add
inc
or
lds
push
ret
add
cltd
fnstsw
sub
js
pusha
adc
add
push
pop
fsubrs
xchg
mov
push
ds
cmp
push
sub
jecxz
jo
subl
nop
out
sbb
mov
or
fs
je
ret
adc
xor
jb
sub
sbb
cmp
or
fs
rolb
test
leave
cmp
lods
pop
adcb
jmp
adcl
movsb
push
and
sub
clc
pop
lcall
in
scas
add
test
repnz
repnz
imul
stos
mov
nop
je
cmpsl
sbb
add
cmp
or
or
clc
dec
int
mov
add
sbb
hlt
scas
xorb
adc
outsl
andb
push
test
mov
push
lock
inc
fildll
dec
ja
cmp
aas
xor
pushf
and
lds
call
gs
sbb
sti
lcall
in
addr16
pop
shlb
lea
xchg
adc
adc
add
cmp
xor
inc
test
mov
mov
add
xchg
stc
sbb
xor
mov
cmp
add
and
movsl
cld
add
xor
or
enter
scas
xchg
and
loopne
jmp
adc
or
xchg
stos
scas
adc
ret
jns
repnz
sub
inc
cmc
or
icebp
push
sbb
jle
and
loop
sbb
sub
mov
add
dec
xor
dec
mov
add
sub
add
pop
hlt
pop
pop
xchg
add
lret
clc
lcall
add
mov
pushf
ret
and
sub
or
or
lea
aam
mov
pop
fstl
and
jno
fisttpl
cmc
push
mov
cwtl
add
lret
mov
add
stos
xchg
iret
test
popl
int
or
add
les
dec
fistl
cmp
mov
push
jg
call
and
mov
stc
nop
mov
inc
xor
add
inc
add
xor
add
xlat
mov
aas
cld
mov
or
lods
fisubrl
ror
add
push
not
movsl
cmpsl
sbb
add
test
fists
cmp
pop
add
cmpb
and
xor
sarb
dec
imul
iret
inc
shlb
jmp
pop
add
xor
sub
inc
sbb
add
int3
and
dec
out
or
add
mov
subl
sbb
push
das
xchg
pop
movsb
rorb
out
setno
and
xor
add
push
loope
and
or
test
add
and
dec
lods
sti
cmpxchg
scas
dec
inc
ficoml
shrb
mov
sahf
test
jns
mov
or
cmp
fdivrs
lea
add
test
into
sbb
mov
push
inc
add
add
mov
call
cmp
lock
jne
cwtl
daa
out
add
xchg
lahf
cld
movsb
adc
mov
sarb
xorb
loop
dec
ds
repnz
and
addr16
shlb
and
mov
mov
div
add
xchg
rcrb
cmp
dec
or
mov
imul
lock
add
lock
je
adc
mov
xchg
les
jl
dec
add
sti
pop
sub
dec
movl
xor
sbbb
loope
lret
pop
das
xchg
sahf
adc
jle
aaa
mov
call
cmp
cmp
js
in
clc
or
cmp
dec
mov
or
scas
add
mov
je
pusha
adc
sbb
das
add
mov
lret
push
add
mov
and
gs
sahf
hlt
xor
cmp
lahf
push
adc
call
add
repnz
add
ja
cmpsl
aad
inc
jg
sub
aas
mov
push
add
or
int
inc
pop
xchg
out
adc
ret
mov
out
cld
loop,pn
cmpsl
add
scas
je
inc
mov
lea
xor
gs
dec
mov
enter
data16
pop
leave
mov
daa
iret
add
sub
add
pushf
cmp
add
cmp
sbb
pop
cmp
das
dec
mov
fdivs
movl
cmp
pop
cmpsl
fcoms
xchg
jecxz
xchg
mov
add
mov
pop
add
inc
jge
pop
movsb
pop
push
sub
push
sbb
jns
push
enter
inc
dec
jno
xchg
fs
jge,pn
fidivl
out
les
add
sbb
mov
fbld
push
pusha
sub
cmp
jno
add
jne
xchg
add
push
jns
or
mov
add
push
pop
mov
pop
jle
sahf
cmc
add
push
and
xor
stos
push
ret
jp
push
add
sub
test
mov
popf
xchg
push
or
bswap
hlt
adc
negl
add
lock
loope
scas
add
xchg
sub
add
sub
mov
pushf
hlt
mov
add
fildll
aas
lcall
inc
inc
mov
std
lret
push
pop
sbb
mov
rcrb
popf
mov
in
sbb
cmp
les
push
test
sub
jb
inc
dec
or
lret
pop
xor
jo
pop
std
add
popf
or
adc
mov
lods
sub
add
scas
jecxz
imulb
mov
dec
xor
cwtl
adc
or
dec
sbb
jne
stos
movsb
adc
mov
and
stos
inc
repnz
push
add
push
fucom
inc
fdivrl
xchg
into
sbbb
les
out
mov
add
lea
mov
repnz
mov
adc
push
out
xchg
inc
daa
push
inc
push
xchg
jne
add
mov
je
add
adc
imul
add
inc
push
aad
mov
fiaddl
add
xor
imul
lods
fisttpl
test
xchg
mov
out
cmc
cwtl
hlt
jne
or
std
push
add
dec
push
push
ret
jmp
and
jae
adc
mov
sub
push
or
and
cld
rcll
mov
in
mov
and
ljmp
xor
or
test
and
xor
sub
inc
sbb
push
cltd
jl
add
sub
adc
movsb
push
jns
jge
je
add
neg
add
pop
and
out
or
xorl
add
jne
incl
jle
mov
aad
add
loopne
bound
call
and
jmp
roll
repnz
jnp
or
in
adc
out
pop
sub
addb
ljmp
js
sar
cli
add
insb
xlat
cmovg
cmpb
xor
mov
je
bound
push
pusha
push
sbb
rol
jnp
or
cmove
add
and
jmp
inc
sbb
dec
jne
addl
jg
pop
sub
sbb
aas
aaa
pop
sbb
and
cltd
in
pop
test
add
dec
es
scas
sub
loopne
cwtl
sbb
mov
add
and
cwtl
push
add
pop
jp
mov
pop
push
rolb
ss
add
jle
ret
sbb
and
inc
dec
cmpsb
out
push
add
sbb
push
and
add
inc
jo
mov
xor
cmp
pop
je
add
xor
cmp
loop
add
idivb
add
sbb
add
movsl
inc
lea
add
ret
sti
mov
ja
add
or
mov
xlat
movl
mov
add
xchg
mov
add
push
call
prefetch
pusha
leave
mov
or
add
push
sbb
push
mov
dec
or
jbe
sub
ret
js
xor
pop
inc
lret
mov
sbb
dec
mov
sahf
pop
jae
jb
cmp
mov
mov
xchg
mov
dec
inc
subb
lret
adc
xchg
inc
push
jo
aaa
push
jle
shll
add
jl
cmc
jp
insl
clc
dec
pop
pusha
add
icebp
shlb
sub
mov
xchg
mov
or
dec
pop
pushf
loop
sbb
decb
dec
add
inc
jb
out
and
nop
pop
cmc
decb
mov
stos
jo
add
dec
sbb
pop
mov
setno
pop
xlat
add
stos
cmp
testl
mov
pop
add
lret
adc
daa
add
and
in
fisubrl
push
jo
add
inc
ljmp
ret
movb
cmp
push
add
aaa
out
sub
les
pop
mov
xchg
push
xor
inc
add
in
or
sbb
cli
jns
xchg
add
push
movsl
cmp
xchg
mov
add
nop
push
dec
ljmp
mov
inc
insl
ja,pn
bound
pusha
fistps
adc
arpl
jge
push
jbe
outsb
pusha
addr16
sbb
push
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
or
inc
push
popa
add
jge
jl
inc
nop
add
outsb
loope
addr16
clc
stc
push
jo
inc
pop
sbb
pop
outsl
insb
andb
pusha
ror
jae
jge
pop
inc
mov
and
inc
adc
xorb
push
fwait
or
jno
jp
out
fimuls
adc
arpl
push
insl
ja
add
mov
fs
add
xchg
or
jbe
sbb
mov
ret
je
loopne
outsb
lods
sbb
icebp
dec
push
jbe
fs
jg
mov
or
push
jae,pn
add
inc
outsl
ljmp
sbb
push
xchg
imul
arpl
inc
jno
je
jns
pop
addr16
popa
andb
xchg
je
sysret
mov
dec
sahf
loop
outsb
imul
sarl
sahf
inc
decb
add
push
push
imul
sti
and
xchg
pusha
clc
lahf
add
push
push
xor
xchg
sbb
inc
adc
adc
add
jbe
mov
push
mov
insl
data16
jp
lock
call
xor
outsl
sub
loopne
push
push
ljmp
adc
pusha
movsl
xor
inc
ja
dec
arpl
mov
je
cmp
imul
lret
insl
jnp
add
fcoml
or
loopne
add
mov
mov
les
pop
movsb
add
test
inc
cmpsb
xchg
cltd
add
sub
add
dec
sub
or
pop
push
mov
inc
push
cmp
adc
cmp
sub
add
rolb
push
cmp
ret
inc
pop
subb
and
cmpsl
sbb
lcall
popa
divl
sbb
xor
xchg
lods
loopne
pop
jecxz
sbb
push
inc
jns
sbb
cmp
sti
loopne
adc
jl
and
fldl
xchg
hlt
mov
or
adc
js
pop
cmpb
sbb
sub
inc
gs
into
dec
xorl
and
inc
inc
add
xor
adc
das
es
rorl
call
add
push
sbb
and
inc
push
adc
xor
xor
sbb
add
shrb
add
test
mov
in
push
adc
icebp
in
out
or
pop
push
es
mov
sarl
add
pop
ret
push
add
popf
pop
xchg
cmp
repnz
mov
pop
or
push
subl
sarb
mov
sub
mov
pop
cld
mov
xor
cmp
jne
mov
add
jmp
test
pop
clc
sbb
xor
xor
in
push
movsl
stos
mov
xchg
scas
add
enter
ljmp
push
add
das
test
fildl
cld
lock
add
nop
enter
lea
lock
push
mov
mov
decb
insb
ds
mov
andl
int3
add
fisttpl
je
pop
mov
pop
mov
jbe
filds
por
add
test
aaa
push
mov
pop
cmp
stc
jmp
push
add
mov
fldcw
push
push
inc
dec
addr16
add
js
mov
fcoms
lahf
scas
pop
mov
mov
iret
inc
les
ret
int
cmp
inc
adc
add
pop
jg
les
test
xchg
les
jbe
aaa
xor
hlt
push
add
mov
jg
sbb
cmp
rolb
push
push
add
out
and
adc
add
repz
sub
add
in
das
mov
sbb
out
add
movb
fisubrs
mov
cltd
push
xor
jle
add
adc
pop
add
mov
mov
movsl
add
aas
cmc
dec
jl
add
jp
inc
add
and
pop
push
jo
dec
dec
pop
add
mov
fcoms
cmp
push
sbbb
add
add
dec
jmp
mov
fisubrl
jmp
pop
add
cmp
adc
ret
sub
adc
add
adc
mov
add
jmp
xchg
mov
add
je
add
das
push
dec
pop
jmp
jp
add
mov
stos
xchg
sbb
or
scas
into
pop
push
rcll
add
scas
push
or
mov
in
fadds
or
mov
rolb
dec
cmp
or
imul
mov
sbb
add
and
pop
addb
xor
add
incb
mov
imul
jae
add
jecxz
add
fsubr
push
add
and
pop
nop
ret
daa
xchg
jmp
inc
dec
sbb
cmc
sarl
fstpt
mov
jmp
outsb
add
jb
loopne
add
test
scas
adc
dec
xchg
add
cmp
lahf
daa
push
pop
ja
mov
jmp
icebp
bound
fldenv
and
add
cli
into
and
mov
jbe
mov
add
cmpsl
push
and
out
xchg
inc
inc
jmp
or
add
or
lret
and
add
or
add
or
xor
jmp
cltd
push
add
xchg
subb
push
jne
sub
and
ret
fst
mov
pop
cmpb
sbb
loopne
inc
add
xchg
lods
cmc
cmp
shll
push
ret
jg
add
test
testl
stos
shll
mov
addr16
adc
adc
pop
pop
bound
inc
cwtl
or
push
xchg
cli
cmpsb
in
hlt
xor
sbb
cwtl
test
adc
xchg
adc
adc
sub
aas
js
and
test
rorb
pop
lds
xlat
mov
dec
sub
rolb
jge
icebp
jl
loopne
cwtl
pusha
das
andb
outsb
add
sti
cmp
push
fcomi
scas
out
inc
or
subb
add
aad
push
pop
add
dec
loope
jnp
add
xchg
mov
lock
sub
or
cmp
add
movl
sbb
or
ret
pop
lret
leave
sbb
sbb
sbb
cmp
push
adc
add
jne
lods
lahf
hlt
mov
push
pop
inc
inc
or
lret
xchg
sbb
inc
scas
add
mov
call
mov
cmp
jle
dec
add
cmpsl
pop
call
dec
adc
mov
mov
sti
sar
add
loop
fs
and
jnp
jns
adc
and
add
insb
pop
fsubrl
xchg
adc
dec
push
pop
cli
mov
pop
jle
or
pop
jmp
loop
xlat
nop
jno
fistl
pop
inc
push
add
or
repnz
in
ds
mov
push
xor
jmp
repz
rolb
call
cmp
inc
jae
mov
sti
neg
pop
sub
pusha
inc
inc
mov
rorb
jmp
push
push
sub
test
ljmp
dec
js
mov
cmpb
and
rorl
add
add
in
add
cs
add
out
jmp
out
inc
jne
add
add
jb
xorl
nop
add
cld
and
int3
setb
add
ljmp
cmp
aaa
mov
in
lea
mov
push
cmp
sbb
push
sarl
add
pop
mov
xor
cld
add
mov
add
mov
jb
fadds
repz
mov
cmp
adc
ds
dec
add
aaa
xchg
loopne
add
cmp
shlb
enter
dec
mov
out
push
scas
stos
ffreep
jle
call
aam
cmpb
shll
add
add
aaa
adc
out
adc
and
cvttps2pi
add
cli
or
xchg
mov
rcrb
addl
loopne
iret
mov
in
data16
push
sbb
cmp
sbb
adc
add
sbb
fimuls
clc
jge
add
rolb
add
loopne
jle
out
lods
fadds
add
add
cmc
add
xlat
iret
test
mov
inc
inc
shr
and
mov
fstl
push
mov
sti
lret
jne
rorb
jg
xchg
and
add
adc
dec
ficoms
push
adc
or
push
jmp
xchg
or
mov
out
push
test
add
dec
mov
addb
inc
cltd
sbb
or
rorl
adc
mov
insb
fadds
xchg
adc
clc
inc
sbb
scas
add
dec
inc
push
lret
mov
jno
and
mov
aaa
mov
sarl
testl
adc
icebp
jp
jbe
pushf
enter
ljmp
mov
xor
add
hlt
xlat
clc
lahf
xchg
add
scas
cmp
add
inc
movsb
test
sbb
in
add
jmp
call
add
xor
cmpsl
loopne
xchg
lcall
les
stos
pop
insb
hlt
and
inc
sbb
lahf
sub
sbb
call
pop
scas
loopne
add
int3
add
add
aam
inc
in
mov
ficompl
inc
nop
scas
je
pop
mov
jl
pop
cld
lret
add
outsb
lods
jecxz
adc
inc
mov
icebp
inc
mov
cmp
inc
fadds
push
push
add
dec
lock
pop
test
shlb
sbb
mov
mov
push
lcall
fcomip
pop
jnp
jp
js
and
dec
aas
cmovb
mov
push
xor
add
mov
inc
gs
sbb
in
insb
mov
xor
pop
rsqrtps
imul
add
or
sub
fstpt
add
jmp
hlt
adc
test
xchg
addr16
insb
sbb
inc
cmp
add
clc
push
sbbb
add
std
or
aam
pop
test
mov
push
sahf
adc
fists
ficoms
outsb
add
inc
jo
add
sub
pop
or
mov
pop
bound
enter
dec
leave
jo,pn
js
mov
and
dec
xchg
les
dec
rcrl
push
std
mov
push
mov
push
mov
pop
or
pop
mov
add
fwait
dec
sub
popa
add
jnp
mov
sete
inc
mov
enter
or
outsl
add
ret
sub
lret
add
add
insl
in
cmp
inc
subb
add
jp
dec
add
sarb
adc
mov
add
jne
pop
pushl
fildl
out
add
push
cs
and
pop
xchg
mov
jae
add
or
shlb
test
in
aad
sbb
enter
sbb
pop
lret
push
sub
ljmp
icebp
xor
pop
pop
xchg
add
int3
or
mov
mov
push
jno
push
adc
mov
das
icebp
mov
or
cmp
inc
pop
and
in
psubsb
rcrl
add
pusha
mov
xor
add
add
test
aam
jg
in
aas
adcl
mov
or
sarb
or
add
xchg
add
push
cmc
xor
xorb
adc
sbb
add
jbe
cli
xchg
sbb
iret
pusha
mov
jb
cld
push
mov
cmp
in
mov
lea
add
testb
stc
push
lods
sbb
add
push
cld
add
jnp
faddl
dec
test
cmpsl
aam
sub
jne
call
adc
hlt
aas
addb
and
xor
xorb
loop
mulb
ret
or
jne
jge
add
push
mov
push
dec
sarl
ljmp
jg
and
mov
inc
adc
push
xor
clc
inc
cmp
sub
and
inc
add
sub
or
mov
dec
pop
sub
add
push
jo
or
es
cmpsb
dec
aas
add
ds
fadds
push
or
xchg
cmp
je
mov
dec
subb
rolb
add
adc
testb
jo
repnz
cmp
cmp
jbe
js
add
jnp
cmp
inc
inc
add
jae
push
cmp
inc
ja
out
psrlq
inc
pop
mov
sub
inc
jp
loop
push
in
lock
sbb
pusha
fmul
inc
negb
mov
mov
or
cmp
push
shr
cli
add
neg
push
adc
mov
jmp
jge
add
and
and
icebp
mov
mov
movsb
push
or
cmp
xchg
jae
cmp
les
and
bound
add
das
lock
add
lods
push
cmp
and
ret
xor
sub
jp
cmp
add
je
pop
pop
fnstcw
jmp
adc
fsubrs
and
enter
add
jo
loopne
mov
daa
sub
mov
add
rorl
mov
ror
mov
push
les
add
je
push
sbb
aaa
lea
inc
jecxz
xchg
call
je
shr
sub
call
dec
rcrb
mov
test
xor
aaa
aam
mov
in
add
sbb
adc
cmp
add
mov
mov
add
mov
adc
hlt
pshufw
lods
add
mov
enter
cmp
sbb
push
add
xchg
or
adc
adc
ret
push
pop
sub
add
fidivl
xor
lock
and
sbb
xorb
jl
adc
stc
scas
push
or
sbb
clc
daa
lret
cmc
push
test
mov
cmp
push
jnp
inc
mov
dec
jmp
add
mov
test
adcl
jmp
ret
jne
add
dec
fs
sbb
mov
sbb
pop
cwtl
clc
sub
push
lcall
jmp
int
mov
push
sub
xlat
mov
test
mov
cmpl
call
imul
je
addl
or
rorb
add
add
pop
ret
push
push
push
data16
pop
mov
dec
sub
shlb
fbld
add
jae
sahf
inc
imul
lea
add
jg
arpl
push
out
xlat
mov
add
pop
andl
xchg
add
or
xorb
js
shrb
ret
in
add
inc
inc
add
ret
les
mov
add
add
xor
test
repnz
inc
add
or
sub
call
scas
xchg
push
test
shlb
pop
add
sub
jno
add
and
shlb
push
lret
xor
xchg
orb
je
call
mov
pop
repnz
add
push
adc
xchg
sbb
mov
push
pop
and
push
jae
lret
sbb
jmp
lahf
cmp
mov
add
cmpsb
push
xorb
mov
xchg
ret
pop
sub
popa
push
hlt
cmp
add
pop
jg
shll
addb
dec
sti
shlb
xchg
xchg
in
xchg
add
add
push
cmc
pop
hlt
add
push
cld
lcall
sbb
or
stos
pop
cs
lea
add
loop
adc
xor
lods
shl
sbb
pushl
dec
addl
or
pop
cs
xchg
jno
mov
pop
and
dec
mov
pusha
cmp
ret
jo
icebp
clc
push
adc
adc
js
pop
add
sarb
add
xchg
or
out
add
cmp
inc
dec
adc
adc
add
push
pop
add
jg
test
add
add
imul
adc
fnstsw
xchg
test
in
inc
movups
adcb
push
mov
inc
inc
outsl
jne
add
mov
daa
or
cmp
pusha
adc
mov
std
mov
add
add
xchg
add
mov
add
ljmp
pop
mov
or
push
xor
mov
sub
push
push
push
push
push
inc
jle
mov
xchg
xor
push
push
add
je
push
or
add
jp,pn
dec
push
test
inc
push
xlat
test
in
popa
addr16
and
lods
gs
lock
push
mov
add
push
enter
inc
mov
mov
inc
sub
jae
iret
xchg
or
lock
or
sub
sbb
adcb
nop
fs
mov
jno
pop
aam
add
sub
add
nop
xor
test
jb
clc
pushf
js
daa
in
adc
adc
mov
lock
sbb
inc
push
mov
sub
xchg
add
int3
nop
or
push
add
jno
aaa
sti
cmpb
cs
comiss
stos
cmp
push
nop
cmp
loopne
mov
sbb
dec
add
inc
add
xchg
lods
jmp
xor
adc
sub
movsb
pop
rep
cmp
and
nop
add
add
push
xor
mov
cld
movb
sti
and
rolb
or
cmpsl
pop
cmp
or
jo
sbb
lret
sti
cmp
mov
shrb
jns
loop
add
cwtl
push
into
jmp
call
dec
cmp
add
mov
add
cmpsb
inc
push
mov
add
add
lock
iret
add
sub
push
pop
xorb
add
shl
xlat
addl
scas
sub
mov
je
sub
add
pop
xorl
xor
stc
std
jle
add
pop
mov
mov
sub
repnz
adc
add
push
push
inc
lds
add
and
fs
adc
dec
dec
add
test
mov
sahf
sbb
xchg
enter
pop
push
sbb
sbb
fsubs
sub
movsb
push
add
jge
mov
mov
in
add
lea
subl
scas
lods
adc
dec
mov
add
jnp
lods
and
ds
test
adc
andl
or
lock
cltd
add
dec
pop
rorb
cmpsb
jae
or
andb
sub
clc
mul
cmp
testb
xor
mov
pusha
pop
jl
and
or
addb
dec
cld
sub
xchg
shlb
xor
or
je
cmpb
add
adc
inc
cwtl
incb
shr
pop
jo
inc
dec
jmp
out
push
aad
mov
cmp
cmc
jne
cli
loopne
push
popa
pop
add
or
mov
pop
pop
add
or
pop
mov
ficoms
add
shll
stc
cld
add
into
pushl
mov
daa
or
aam
add
or
inc
and
je
sar
add
cmp
test
test
fidivrs
or
xor
mov
sbb
mov
and
sub
iret
add
mov
and
js
jmp
add
call
repnz
and
shlb
jge
add
pop
inc
leave
xchg
sbb
dec
sbb
rol
push
inc
clc
int
add
xor
sub
hlt
aam
dec
leave
jecxz
data16
loop
stc
inc
nop
mov
add
fwait
xor
lret
test
xchg
jne
movsl
cli
add
and
mov
pop
xor
inc
fdivrs
mov
repnz
out
xorb
add
inc
out
and
mov
cwtl
cmpsl
fdivrs
ds
aas
cmc
push
adcb
pop
test
xlat
add
movsb
pushf
cmpsl
outsb
mov
filds
pop
inc
mov
adc
adc
cli
add
sub
add
sub
ds
cmp
mov
push
push
ljmp
pusha
test
xor
les
adc
clc
test
lods
cli
and
sarl
sbb
add
stos
mov
push
rorb
dec
sarb
or
adc
adc
ret
pop
sub
fadds
in
xchg
inc
add
xor
inc
iret
pop
jmp
popf
andb
ljmp
dec
add
stc
cli
or
aas
push
lahf
jnp
mov
add
cmpsl
xor
pop
inc
xchg
jne
fwait
pop
add
test
xchg
adc
ss
push
ret
ljmp
cli
rclb
repz
add
call
movb
jns
cmpsl
lock
sti
add
ja
sub
jge
pop
and
clc
shrb
or
addb
mov
inc
or
add
jo
xchg
or
cltd
add
out
jg
add
add
mov
in
push
insb
test
mov
dec
adcb
rcr
les
cmp
daa
add
ja
mov
inc
adc
dec
mov
bnd
xchg
and
push
imul
and
push
inc
pop
js
add
not
or
fwait
aam
arpl
add
imul
test
pop
xchg
push
adc
push
mov
adc
je
dec
mov
pop
sub
inc
add
aaa
test
js
add
push
je
or
pop
lcall
inc
mov
lret
lds
add
push
inc
fs
stos
xor
iret
mov
jbe
adc
ret
or
pushf
sbb
cwtl
jnp
pop
push
out
lds
cmp
xor
push
and
pop
add
je
jp
arpl
ja
add
mov
or
add
shlb
insb
cmp
test
loop
imul
and
cli
into
je
lcall
add
pop
movlps
dec
xchg
rcrb
mov
subb
and
inc
pop
js
movsl
sti
xchg
add
pop
rcrb
adc
mov
lds
mov
inc
jmp
or
push
sub
adc
loop
fsubl
mov
jne
add
sub
subl
push
add
cmp
mov
inc
roll
pushf
sbb
lea
sbb
aam
dec
test
scas
pop
loopne
mov
jo
mov
xchg
xor
outsl
and
sub
add
push
outsb
add
mov
add
popa
cmp
or
add
push
push
pop
pop
mov
sahf
cmp
out
adc
add
push
adc
xor
push
dec
sub
sub
push
in
adc
hlt
add
mov
pusha
and
fwait
add
push
mov
add
jge
cmc
bound
loopne
notl
popf
fdivr
inc
aad
mov
sbb
inc
adc
add
mov
xor
sub
push
xor
loopne
pop
adc
mov
or
rorb
add
mov
test
cwtl
testl
xchg
push
jmp
add
add
movsl
push
popa
out
sbb
push
cmp
and
clc
and
pushf
fistl
push
popa
mov
aaa
adc
stos
cmp
pop
add
add
push
jg
cwtl
flds
aas
fdivr
add
enter
movsb
mov
jbe
cmp
inc
roll
inc
add
and
dec
mov
pop
mov
shlb
add
imul
dec
outsb
mov
test
pop
add
xor
cmp
fstpt
or
push
das
adc
mov
sahf
insl
add
or
outsl
loopne
push
dec
add
xor
movsb
jo
in
loopne
mov
sysenter
test
add
jecxz
pop
mov
sbb
in
and
shr
add
test
add
repnz
dec
push
hlt
jmp
enter
or
pop
std
in
pop
aad
out
dec
test
sub
jo
or
pop
sub
sbb
mov
push
inc
sbb
xchg
add
add
or
xchg
or
mov
cmp
clc
push
jmp
cmc
add
xor
add
and
lock
or
decl
add
call
or
cs
jnp
mov
mov
and
jo
inc
push
mov
sbb
mov
mov
into
lcall
push
mov
test
or
call
add
scas
sarb
inc
push
push
add
in
mov
xchg
mov
int3
jne
add
pop
pop
adc
nop
scas
pop
xchg
cmp
cli
jp
out
xor
push
mov
adc
sub
pop
and
sti
lock
dec
imulb
cmpb
sbb
mov
pop
call
andl
mov
cmp
jno
mov
ds
or
push
push
pop
pop
dec
inc
adc
pop
adc
inc
loope
mov
mov
add
xchg
dec
arpl
ja
adcb
jmp
dec
adc
sub
ret
loope
add
call
cmp
sub
popl
mov
movsb
add
fldcw
dec
test
mov
pop
mov
add
movl
sbb
jno
rorl
dec
test
ret
push
aaa
add
dec
es
in
sub
push
add
mov
dec
push
xlat
mov
add
mov
mov
sub
mov
cltd
dec
sub
imul
cmp
cmp
cltd
insl
or
dec
xchg
sbb
sub
push
and
and
xchg
push
add
aas
mov
enter
notb
lret
mov
xor
inc
mov
add
pop
mov
mov
pop
mov
add
pushf
jmp
jp
add
mov
jg
ret
jo
lret
rcrb
sahf
lods
mov
add
mov
in
cwtl
cmc
jns
pop
mov
or
mov
sub
cld
pop
into
arpl
mov
ret
and
and
ljmp
leave
out
or
andl
int3
add
xor
jg
add
mov
ja
add
sahf
lods
scas
dec
in
add
push
enter
out
xlat
andb
jno
add
xor
pop
xlat
fmul
ljmp
adc
lret
es
std
xchg
shrl
mov
pop
cld
fdivp
data16
xchg
mov
dec
dec
stc
ret
pop
pop
mov
lret
in
mov
imul
xor
test
movsb
lods
pop
mov
lea
add
sub
mov
dec
sbb
iret
cmpsl
xor
jnp
movb
add
cmovp
push
mov
mov
add
imul
sbb
jle
xorb
in
push
jle
add
adc
adc
or
add
aas
loop
xchg
adc
sub
stc
push
add
subl
inc
mov
sub
ret
cmpsl
xchg
adc
add
sub
lock
or
add
add
mov
pop
xor
pushf
int3
jnp
cmp
adc
pop
add
clc
sbb
lock
rol
add
sbb
sub
jae
jmp
add
dec
movsl
or
jne
add
pop
adc
sub
fcomps
pop
cmp
adc
add
inc
call
and
fwait
ljmp
adc
jne
out
pop
xor
mov
adc
mov
pop
jns
xor
add
xor
shrl
jg
add
mov
cmc
cmp
adc
add
repnz
push
cmp
dec
cli
adc
push
aam
scas
clc
inc
add
adc
add
mov
imul
add
add
pop
sbb
faddl
les
mov
push
jne
inc
adc
dec
xlat
xchg
loop
clc
adc
xchg
add
jb
dec
aam
mov
jno
add
and
div
mov
test
cmp
adc
sbb
mov
out
mov
sarl
insl
cmp
jbe
push
add
mov
push
or
cmp
adcb
jnp
inc
add
lcall
pusha
iret
mov
cwtl
clc
add
jne
jb
in
into
sub
add
mov
add
jg
cwtl
aam
add
insb
shlb
add
cltd
xor
aas
pop
mov
add
jmp
add
in
jmp
adc
add
or
outsl
cmp
mov
add
lods
in
mov
lock
add
cwtl
inc
int
popf
lcall
inc
rcrb
or
xchg
add
aam
ret
loopne
insl
mov
es
cmp
pop
shlb
aaa
hlt
add
cltd
in
enter
incb
jo
dec
andb
add
xorl
add
daa
lahf
sub
or
cmp
add
sub
push
add
pusha
pop
or
push
pop
fadds
add
push
loopne
fildl
jnp
das
fidivrl
push
dec
pop
pushf
enter
pop
pusha
push
cmp
or
and
inc
mov
adc
rcll
sub
stos
sbb
sahf
or
sub
inc
test
lcall
sbb
aam
xor
or
add
adc
in
sub
or
ja
add
sub
add
push
xor
sahf
add
je
mov
inc
sbb
pop
add
push
leave
pop
sarb
add
mov
fs
add
xchg
cmpsl
xchg
push
jb
xchg
cmpb
cmp
movsb
push
or
or
mov
inc
push
xor
sbb
cld
lret
filds
inc
jmp
mov
sahf
or
test
pop
add
add
adc
sbb
outsl
hlt
cld
sti
add
jbe
fiaddl
js
mov
adc
add
dec
scas
mov
sbb
int3
aas
orb
and
lcall
clc
lock
dec
lds
inc
orb
jp
add
mov
pop
lds
cmc
add
aaa
adc
and
mov
mov
pop
icebp
pop
dec
xchg
pusha
loopne
cmp
add
inc
iret
pop
ljmp
bound
and
scas
jae
les
sbb
sahf
inc
push
xchg
das
mov
shl
add
add
bnd
sbb
in
das
fs
fadds
mov
dec
xor
push
sbb
lds
sbb
popf
adc
sbb
add
test
dec
xchg
xadd
cmpl
add
pop
sbb
enter
inc
cmp
pop
inc
xor
or
and
push
mov
lahf
mov
xchg
lock
mov
push
mov
add
call
lea
mov
pop
adc
sub
popa
pop
push
dec
or
mov
xchg
xor
movsb
sahf
xchg
popfw
jae
and
sub
cmp
mov
mov
push
xchg
cwtl
cmp
add
jb
pushf
pop
jmp
ja
add
fnsave
stos
inc
cmp
shll
jb
cld
jle
inc
xor
adc
fisubl
clc
mull
stos
ja
lcall
stos
sub
add
inc
and
aam
and
sub
in
nop
push
lock
adc
push
add
ljmp
cld
ret
adc
mov
mov
call
pop
into
adc
insb
lods
add
nop
push
mov
movsb
mov
movsl
pop
setb
frstor
adc
sbb
and
xor
pusha
fnsave
fnstsw
cwtl
mov
push
rorb
xorb
and
pop
out
mov
sbb
push
cwtl
dec
dec
fsubrp
add
xchg
iret
add
adc
dec
inc
out
mov
cli
lret
push
loopne
add
fldcw
test
nop
les
mov
and
add
pop
ror
stos
add
movsl
decl
push
jnp
inc
fdivp
shrb
push
push
enter
sbb
mov
es
orl
add
xor
ficomps
test
add
jb
pop
adc
enter
inc
loop
dec
pusha
adc
dec
push
das
or
dec
fs
push
pop
xor
add
xor
jmp
jae
fiadds
and
add
add
or
aad
pop
in
inc
add
jns
cmc
fld
cmp
xchg
insb
jmp
xor
add
and
push
pop
jns
push
mov
addb
gs
lcall
insl
sbb
pop
ja
mov
ret
add
addl
adc
in
pop
push
xchg
scas
ljmp
add
and
sqrtps
xor
mov
popa
xchg
outsb
or
ret
dec
pusha
adc
push
and
mov
cmp
scas
std
sbb
mov
pop
or
or
adc
and
jo
lahf
loopne
pusha
jo
addb
shl
add
add
add
add
loop
add
push
addb
mov
ret
or
repz
adc
push
mov
push
push
mov
add
xor
popf
mov
inc
sub
stos
or
pop
lret
mov
out
pop
xorl
cld
jp
add
add
mov
xlat
pop
adc
cmp
rorb
lcall
sub
shr
aam
movsb
add
jns
iret
and
mov
ds
pop
mov
pop
fdivl
pop
lods
sarb
mov
pop
mov
push
mov
add
sub
push
push
push
cwtl
push
and
mov
cs
loopne
popf
mov
rep
mov
cmp
hlt
lock
add
mov
cmp
add
inc
inc
cmp
mov
call
add
cwtl
push
inc
pop
adc
rcrb
dec
enter
addb
sbb
adc
xchg
push
xor
shl
add
add
les
add
xor
jo
add
add
cmp
mov
add
inc
shlb
dec
mov
movsb
leave
insl
shl
in
mov
add
sbb
and
add
sti
sub
add
mov
mov
sti
mov
and
jge
dec
jnp
fcomip
ljmp
sbb
cld
add
jle
test
add
lea
inc
add
rorb
jae
add
adc
and
push
cmp
mov
andb
enter
and
inc
xchg
mov
insb
mov
mov
or
loop
pop
or
inc
addr16
dec
pop
inc
xchg
enter
lods
mov
sbb
add
lcall
add
or
out
mov
mov
sti
fmull
add
or
push
adc
or
mov
scas
pop
js
stc
xor
shlb
cld
cs
loop
pop
sub
addb
and
pop
add
movsb
adc
addb
in
fcompl
mov
add
inc
sub
cmp
ret
add
sbb
js
push
add
adc
scas
pop
xlat
das
mov
xor
pop
or
adc
add
add
mov
leave
jns
test
add
or
xchg
mov
ret
and
call
add
pop
rorl
shlb
adc
shrb
mov
mov
push
mov
jnp
sbb
jp
jecxz
add
inc
cmp
jb
xchg
rcrb
cmp
pop
add
int3
testl
mov
in
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
or
rcrl
add
lea
pushf
add
call
idivl
inc
mov
push
add
push
jle
add
add
pop
add
call
pop
pop
xor
ret
add
mov
enter
add
rcl
jno
push
add
sub
sub
stos
xor
roll
mov
rorl
addl
adc
lea
repz
push
xchg
dec
pop
cltd
xchg
or
pop
ret
add
xor
or
adc
adc
mov
mov
jo
add
inc
jmp
jne
sub
cmpsb
pop
sbb
jle
adc
rorb
and
add
ljmp
adcb
testb
pop
push
cltd
or
sbb
pop
push
mov
cmovs
and
jl
mov
xchg
cmp
add
stos
or
add
and
mov
add
inc
xor
movb
cmpb
cs
fiaddl
and
sbb
cmp
add
gs
push
mov
mov
add
divl
call
fwait
pop
lock
mov
loope
in
ljmp
mov
add
adc
fcompl
pop
add
adc
xchg
push
dec
xor
push
add
fistpl
mov
mov
lds
and
adc
add
xor
sti
leave
add
push
pushf
adc
roll
lea
cs
mov
pop
adc
and
cli
mov
add
dec
or
nop
or
and
jo
add
lea
pushf
sbb
cmp
jnp
testl
sub
ror
rcl
ljmp
pop
in
xchg
ficoml
hlt
add
adc
lret
ja
adc
xchg
scas
push
xchg
sbb
insb
nop
mov
addl
add
jno
add
inc
add
push
add
cs
loop
and
es
or
add
out
push
or
push
mov
mov
jns
xchg
sub
or
sbb
inc
or
inc
out
lahf
mov
xlat
call
jmp
pop
adc
insb
test
or
lods
adc
xlat
pop
add
sbb
add
add
add
mov
mov
or
repnz
sbb
sbb
add
dec
mov
aam
push
jg
fisttpll
push
mov
adc
inc
lea
pop
xchg
fisubs
shrb
roll
mov
add
lock
add
mov
cmp
mov
movsl
and
cmp
sub
add
inc
adc
cli
add
pop
ret
int
sub
add
mov
cmp
les
adc
mov
sbb
std
pop
out
ret
nop
roll
xchg
push
stc
jecxz
mov
mov
jne
add
andl
inc
adcb
cld
cmpsl
loope
out
xchg
scas
dec
rclb
mov
aaa
call
cmp
pop
add
push
jl
push
jle
into
jg
or
inc
push
andb
xor
pop
mov
push
add
pop
mov
bound
inc
ja
xor
add
push
add
jmp
add
rolb
aas
cmpsb
or
stc
out
or
inc
add
or
mov
sarl
je,pt
xchg
das
addb
add
inc
in
shll
pop
add
add
lret
rcrb
cli
pop
push
xchg
mov
rolb
sbb
or
dec
sub
cmp
mov
mov
orb
xchg
add
mov
and
xchg
in
pop
sbb
push
lret
js
and
push
pop
inc
fwait
push
test
dec
jb
jg
sbb
xchg
and
add
and
cmp
add
lods
xchg
jb
imul
sbb
mov
movsl
pop
pop
pusha
test
add
addb
jmp
sbb
add
inc
aam
xchg
dec
and
add
or
sub
stos
xchg
jp
mov
dec
je
aam
add
and
decl
in
xor
jg
lea
pop
sub
ror
sbb
fsubrl
mov
lock
je
hlt
aas
lret
xor
lea
ret
rclb
test
aad
popf
push
add
jbe
jmp
sub
mov
in
gs
aaa
aad
mov
out
pop
les
mov
cmpsb
addb
fs
outsl
add
push
push
add
or
inc
dec
mov
cwtl
fs
jne
or
lea
mov
adc
lods
pop
add
test
or
lods
pop
fcoms
jne
ror
pop
adc
sub
push
sub
add
stc
into
xor
cmpsb
add
and
cmp
test
cmp
je
jne
mov
mov
rcrb
or
adc
scas
lahf
xor
and
test
lcall
adcb
outsl
add
faddl
add
in
sbb
dec
jle
scas
lds
and
mov
jle
dec
inc
xor
lahf
dec
imul
xor
and
dec
xor
jns
or
push
add
jo
push
andb
lret
jle
leave
jg
shl
add
jp
hlt
hlt
add
fistpll
jb
ds
add
lock
xchg
jg
add
es
add
int
push
push
dec
inc
paddsb
mov
mov
add
jg
jge
xor
adc
jnp
pop
in
popf
push
add
cli
stos
fs
mov
add
lods
imul
out
mov
pop
mov
add
adc
repnz
xchg
or
dec
push
cld
cs
fcoms
stos
mov
inc
sub
xchg
clc
testb
cmpb
jp
dec
aam
add
cld
push
jnp
push
imul
jle
dec
sbb
lods
lock
aam
push
mov
jae
js
stos
inc
inc
add
cld
pushf
pop
cltd
pop
pop
popf
icebp
rcl
les
outsb
stos
mov
add
loop
dec
sub
popa
and
xchg
ja
adc
push
stos
mov
push
int3
push
and
lock
xor
mov
rorl
or
verw
test
pushf
je
add
addr16
push
add
out
xor
dec
lea
dec
adc
push
add
mov
add
mov
pop
and
sub
cmp
sbb
or
add
jns
mov
inc
and
add
push
or
jle
inc
adc
movl
jmp
add
sub
or
mov
push
mov
jb
sbb
jecxz
orb
push
xchg
mov
push
je
shlb
add
xchg
and
lods
push
dec
stc
dec
add
movsl
or
inc
add
adc
adc
pop
test
pop
pushf
stos
jne
push
adc
dec
or
add
call
push
jl
das
add
bound
cwtl
xchg
or
xchg
scas
je
add
inc
add
ljmp
inc
pop
xor
je
add
push
jne
add
outsb
dec
mov
xchg
inc
cli
and
dec
fadds
clc
and
sbb
xchg
sbb
cmp
mov
and
xor
mov
jl
test
cli
add
or
dec
ljmp
fimuls
cld
ja
add
icebp
mov
cmp
roll
push
lcall
int3
cmc
paddw
mov
popl
mov
xchg
js
ja
add
mov
pushf
add
xlat
ds
dec
xchg
testl
inc
clc
fs
cmp
jg
pushf
nop
das
ds
add
pop
inc
jne
jb
mov
lods
bswap
push
jle
loopne
fisubrs
xor
in
jae
mov
push
dec
add
dec
push
cmp
push
sbb
inc
push
push
push
inc
es
dec
call
add
scas
sub
loop
add
cwtl
xorb
inc
cmp
or
ja
inc
jbe
xchg
aas
loope
and
rcll
add
inc
add
sbb
xor
jnp
js
js
cmp
mov
daa
or
adc
jmp
sbb
add
in
xor
push
lock
mov
pop
xchg
jo
jnp
clc
je
add
sub
out
repnz
imul
lds
cwtl
xchg
popf
fs
pop
lock
push
inc
push
loop
mov
gs
jmp
mov
add
aaa
mov
xchg
add
sub
pop
mov
pushf
daa
test
ja
addb
push
imul
push
jge
mov
mov
add
in
lahf
pop
add
sbb
loopne
add
clc
cmpsl
sbb
mov
mov
jno
sbb
inc
dec
add
push
adc
jb
add
mov
je
sbbl
or
inc
add
outsb
cmp
sub
and
cmpsl
fidivrs
outsl
insl
jmp
adc
cmp
rolb
shll
jae
mov
les
dec
inc
into
lret
add
mov
xchg
mov
es
jecxz
fs
icebp
or
loop
int
pop
jbe
mov
mov
pop
pop
xchg
cmp
cmpsl
mov
sbb
push
push
xchg
lea
dec
mov
pop
pop
add
xchg
rol
fs
add
sub
sbb
repz
sahf
or
cmp
mov
dec
add
dec
pop
cmp
and
jbe
cmc
add
out
pop
add
ret
mov
out
sbb
mov
push
push
mov
daa
xor
fadds
cwtl
lcall
jns
repnz
rorl
dec
xchg
aad
jge
fs
jnp
push
sti
loopne
mov
xchg
popf
sbbb
cmp
jnp
pop
fidivs
rcll
jae
je
lea
mov
mov
dec
orb
cwtl
add
xchg
rorb
shll
scas
add
stos
xor
or
push
sbb
mov
xor
jge
hlt
ret
pop
hlt
lret
or
adc
fsubp
sub
push
outsl
test
pop
add
xchg
inc
inc
mov
ret
stc
sbb
adc
and
rcl
push
cmp
mov
nop
pop
rorl
rdtsc
aam
les
add
push
out
mov
push
fxch
inc
faddl
mov
shlb
daa
scas
add
call
adc
and
push
xlat
add
sbb
nop
fcomps
rolb
test
adc
jbe
or
jmp
xor
sbb
xchg
pop
pop
rolb
mov
mov
or
sbb
dec
push
lods
cmpl
std
add
mov
or
adc
jmp
mov
mov
pushf
out
rcrb
add
pop
cli
cmpsl
and
icebp
jnp
add
jb
pop
cmp
test
hlt
sub
sbb
aam
cmp
add
gs
jg
or
addl
and
int3
cmp
sbb
jmp
adc
repnz
mov
cld
loope
add
sbb
jp
add
add
xor
mov
int3
in
shlb
mov
rolb
sbb
push
dec
cmp
mov
inc
mov
sub
and
add
in
shlb
fildl
pcmpeqb
cmp
add
sub
cltd
xor
jne
in
cmc
xor
popl
xchg
xchg
enterw
cmpl
nop
test
add
lret
ljmp
mov
scas
addl
ja
add
in
add
int
andb
jne
xor
push
jle
pop
insl
out
inc
add
lea
add
or
sbb
mov
jno
sub
incl
bound
push
test
movsb
or
or
dec
add
call
mov
add
lret
les
inc
and
xchg
cmp
testb
mov
add
addl
adc
inc
xor
data16
mov
incb
fiadds
add
mov
push
aad
pop
insl
lea
dec
cmp
push
cmp
ja
cld
cli
dec
cli
fiaddl
adc
shrb
xor
mov
jmp
sub
sbb
cmpb
and
or
nop
sbb
adc
add
pop
andb
into
sbb
jne
inc
ds
add
orl
push
invd
cli
mov
mov
jmp
mov
clc
sldt
sbb
add
lods
adc
enter
mov
push
inc
add
xor
cli
and
and
ss
mov
jmp
add
pop
inc
mov
in
mov
mov
je
test
add
and
mov
jbe
andl
cmpsb
aaa
cwtl
mov
ss
mov
inc
pop
inc
pop
aam
cmc
add
cwtl
int3
pop
call
rclb
ja
xchg
test
cmp
add
xor
or
pop
clc
push
pusha
or
mov
jg
add
xor
dec
dec
cmpsl
lds
add
pop
push
xchg
dec
xchg
or
pop
adc
add
push
je
push
add
inc
push
mov
jmp
add
mov
cmp
imull
mov
arpl
fdivrl
mov
pop
sub
pop
jg
pop
or
inc
pop
nop
push
andl
adc
pop
adc
and
dec
adc
cmp
sbb
enter
mov
movsb
mov
pusha
inc
mov
lahf
or
mov
add
add
add
xor
ss
jbe
mov
adc
arpl
ret
sub
adc
push
cli
in
cmp
ucomiss
pusha
movntq
out
mov
jb
loopne
add
arpl
inc
outsb
pop
add
push
jp
push
sbb
add
jbe
push
add
add
test
add
add
inc
add
mov
outsb
mov
insl
cwtl
jb
pop
out
push
jo
lods
dec
xor
movsl
sub
scas
fcompl
sub
dec
outsl
fs
mov
dec
xor
fdivr
lcall
lods
jo
fidivs
add
pop
shrb
mov
orl
inc
or
sbb
jl
dec
jo
testb
dec
cmp
pop
int3
jge
mov
pop
les
jecxz
es
pop
add
mov
add
inc
aam
push
add
jge
push
pop
add
mov
xchg
dec
adc
loopne
in
add
rorb
sub
pop
dec
mov
mov
mov
mov
gs
add
inc
jns
xor
dec
cwtl
out
and
xor
popa
inc
out
add
cmp
fmul
push
sbb
movsl
add
dec
pop
add
or
xchg
jp
add
inc
mov
js
pop
inc
xchg
dec
mov
test
and
push
push
pop
test
dec
pusha
shr
adc
jns
add
js
jp
inc
ds
mov
cwtl
and
dec
or
cmp
add
xchg
aas
mov
cmpsb
fists
pop
sbb
ljmp
add
mov
les
sub
jne
pop
xchg
nop
mov
adc
in
mov
ret
add
inc
dec
cmp
jns
push
jl
sbb
dec
dec
adcb
inc
mov
push
push
sub
call
xor
mov
aam
sub
shrl
cld
xor
xchg
xor
in
icebp
lret
add
xor
cmpsl
cwtl
jnp
rcrl
test
xor
push
cmp
outsb
imul
add
jne
lret
push
jg
pop
inc
in
ret
call
adc
nop
mov
fs
repnz
adc
popa
outsb
jae
insl
gs
sbb
jb
pop
outsl
xchg
xor
popf
inc
int3
push
inc
aad
mov
xchg
or
or
sbb
jmp
movsl
bound
mov
daa
movb
jo
add
jb
je
jne
repnz
add
sub
push
addb
test
fmull
add
push
jae
xor
jbe
add
mov
fldt
and
jp
cmp
sbb
mov
movsb
pop
cmp
mov
add
outsb
jno
jne
sbb
out
imul
test
xchg
scas
lea
pop
xor
imul
or
and
arpl
jmp
push
xchg
add
cmp
dec
js
subps
mov
sub
and
add
push
adc
andb
clc
xchg
push
push
or
jmp
and
ret
add
sub
mov
xchg
add
js
lods
mov
jbe
repnz
pop
call
imul
xchg
ss
ds
sarb
test
and
dec
mov
push
aad
fxch
cmp
sbb
fwait
in
and
repz
sub
add
or
mov
inc
pop
sbb
mov
rcrl
mov
push
mov
mov
push
jne
add
xor
loopnew
add
jmp
jle
movsb
fldt
add
or
fisubl
stc
push
adc
aad
jo
sbb
pushf
pop
push
xchg
sub
add
test
push
add
test
scas
sub
sub
stos
mov
mov
cmp
add
lret
loopne
xchg
push
xor
add
shr
cmovle
sbb
mov
inc
mov
mov
loope
out
or
mov
pusha
pop
ljmp
adc
adcb
shrb
pop
add
pop
jp
test
int
add
push
mov
add
mov
or
dec
mov
lea
je
fsubs
adc
and
je
add
adc
mov
jbe
out
mov
dec
inc
mov
gs
pop
sbb
and
movsb
lods
cmpsl
add
insb
dec
adc
inc
xor
mov
add
adc
cmp
mov
clc
mov
addr16
rclb
and
dec
leave
ror
dec
or
fdivl
inc
sub
xchg
jle
sbb
add
inc
xchg
mov
pop
adc
outsb
or
xorb
cmp
xor
or
sub
movsb
push
push
les
push
add
mov
iret
pop
push
rorb
mov
aam
jno
hlt
test
add
fcompl
lahf
push
mov
add
sbb
fmul
or
add
pop
loope
mov
movsb
add
adc
add
or
leave
push
das
add
enter
mov
movsl
rcrb
pop
call
icebp
outsb
cli
mov
and
mov
jmp
sbb
add
in
test
inc
test
pop
shrl
dec
inc
add
adc
pop
add
or
test
adc
int3
and
add
les
add
dec
stos
fimuls
fmull
mov
jmp
add
in
subb
jno
cld
fs
jle
push
hlt
sub
jbe
in
mov
cmp
filds
inc
ds
add
in
adc
fldl
adc
int3
xor
subl
pop
sub
inc
loopne
outsb
mov
lds
push
in
xor
movsl
lea
xor
add
into
fisttpll
cltd
loopne
jp
sub
scas
dec
sub
push
add
rclb
cmp
ja
add
mov
mov
stc
add
std
orb
sub
gs
movb
ud2
out
rorb
add
fs
add
pop
or
inc
shll
xchg
dec
jg
jl
dec
jp
push
add
ss
fadds
add
outsb
sub
xor
xchg
ret
inc
push
push
jns
push
call
mov
jg
add
lock
imul
sbb
push
adc
jle
gs
and
dec
pop
dec
pop
lock
push
popa
add
clc
lods
dec
jnp
sub
dec
sti
aam
xlat
ds
nop
pop
push
clc
outsb
in
mov
add
test
out
outsl
jg
adc
into
fbld
pop
jae
pop
push
and
jb
jo
pop
shlb
mov
scas
or
add
and
dec
and
and
in
subb
sub
out
lret
fsubl
xor
mov
insb
sbb
ja
push
pop
sub
sbb
mov
or
mov
shr
add
cmp
clc
add
cld
rclb
inc
pop
in
in
rcrb
pop
push
in
add
test
xchg
adc
or
pop
push
je
adcb
stos
movsl
daa
add
in
sbb
mov
shrb
dec
add
inc
outsl
insl
add
xor
or
in
cmp
mov
les
or
sarl
push
addb
or
jnp
dec
jo
push
sarl
insb
xchg
sbb
arpl
mov
dec
enter
lods
les
xor
das
add
imul
cwtl
and
or
mov
insb
push
lods
push
fmull
inc
push
dec
xor
or
jo
pop
leave
push
sub
loopne
stos
fsubs
sbb
xchg
lds
sub
enter
mov
es
mov
push
nop
add
les
pop
inc
adc
add
mov
add
fs
push
dec
jecxz
add
fmull
inc
jl
pop
mov
inc
inc
jne
adc
fs
orb
xor
mov
and
or
les
pop
packssdw
pop
push
clc
xlat
data16
add
inc
adc
sbb
sbb
add
cs
cmp
sbb
jl
add
stos
adc
add
adc
daa
lock
lods
rolb
mov
mov
fists
pop
popf
ja
xor
pop
loope
sub
sarb
sub
in
and
mov
inc
add
cmpsl
mov
aad
addl
sti
dec
cmp
add
jb
loop
mov
leave
add
mov
mov
push
add
inc
add
sbb
inc
push
push
push
sub
in
imul
pop
ljmp
pop
jae
cmp
jmp
push
pop
adc
mov
movntps
mov
add
dec
daa
std
adc
ljmp
add
je
cmp
jbe
push
andl
pop
cmpb
add
cmp
mov
mov
jne
imul
push
ss
add
lahf
inc
aam
jbe
add
loop
shl
nop
sbb
inc
orb
sub
sbb
in
into
lock
inc
add
or
inc
and
aam
or
push
cmpsb
aad
fidivs
movsl
fldenv
add
cmpsl
fistl
pop
push
push
je
or
add
cmpsb
sub
push
jecxz
fisttps
and
sub
push
dec
ret
push
or
pushf
or
into
or
mov
push
mov
xlat
test
incl
jb
sbb
into
jmp
insb
add
pop
pop
in
push
mov
ja
mov
sub
sti
mov
pop
pop
xorl
pusha
out
pop
int3
add
incb
pop
xor
loope
sub
cmc
shll
imul
icebp
mov
add
fsub
sbb
pop
inc
add
add
addb
add
xor
inc
scas
sub
sbb
inc
daa
pusha
push
cmp
mov
add
addb
inc
iret
rclb
pop
dec
flds
stos
fnstenv
jecxz
test
xor
cmp
xchg
add
mov
cmp
jb
mov
adc
nop
mov
cmp
add
cwtl
out
hlt
insb
adc
add
dec
pop
add
push
cmp
lods
cld
loopne
add
xor
add
pop
add
out
cmp
sahf
sbb
sbb
stos
fstpt
dec
pop
inc
lahf
push
mov
adc
cmpsl
mov
sahf
mov
adc
sub
lds
add
in
call
mov
add
mov
sub
add
xchg
add
cwtl
sbb
add
sub
loop
dec
pushf
ds
inc
lret
xor
xor
mov
push
gs
add
add
add
and
sbb
scas
add
std
adc
pop
add
push
bound
pop
mov
pop
mov
movsb
mov
adc
jg
out
mov
adc
and
inc
pop
outsl
dec
and
add
inc
cmp
xchg
out
add
mov
movsl
sbb
aam
aas
iret
repz
fdiv
mov
decl
push
pmaxsw
and
add
in
inc
fwait
mov
aas
lods
aam
outsb
xor
add
ljmp
xlat
add
and
ss
cs
inc
jno
ljmp
loopne
xor
repz
mov
push
add
pop
outsl
pusha
push
loop
and
and
adc
push
loopne
rorb
jae
push
mov
call
jbe
pop
cmc
sbb
xlat
mov
test
sar
sbb
dec
mov
shll
inc
mov
mov
push
and
lea
jecxz
call
mov
pop
mov
nop
mov
enter
cwtl
inc
out
xchg
adc
add
neg
add
test
out
adc
aad
pop
lods
test
mov
inc
imul
gs
cmp
add
addr16
lods
push
sahf
sub
mov
push
inc
ret
add
and
int3
aad
sbb
mov
dec
push
or
or
add
add
pop
inc
add
jecxz
sub
loop
bound
pushf
push
mov
lods
add
repnz
adc
add
dec
mov
fimull
test
sbbl
pop
out
loopne
pop
push
cmp
loope
aam
adc
and
mov
fidivl
faddl
shrb
popl
cmp
stos
cmpsl
jmp
cwtl
shll
pop
cmp
push
jo
dec
loope
or
mov
cmp
hlt
mov
in
and
icebp
fstpt
inc
mov
push
std
pop
inc
xchg
add
jmp
xchg
pusha
scas
shrb
ss
add
mov
clc
sbb
adc
les
sub
pop
hlt
inc
jp
pop
in
push
or
dec
mov
mov
mov
lret
mov
mov
imul
fsubrl
dec
sti
xchg
add
or
jno
imul
gs
jecxz
jmp
jmp
clc
push
jmp
cltd
adc
cmp
mov
and
xor
add
sub
cmp
sbb
mov
aas
add
sub
adc
add
dec
mov
add
shlb
mov
add
jo
pop
add
add
jne
incb
mov
add
dec
add
aas
fwait
sbb
rcl
jmp
add
movzbl
sub
jne
cmp
dec
xchg
push
and
add
sub
call
or
js
or
fcmovb
scas
stc
and
mov
frstor
outsb
testb
push
xchg
loop
push
mov
fisubrs
les
int3
mov
sbb
lods
aam
addb
mov
sbb
mov
ficomps
and
dec
sbb
and
shr
add
ljmp
cmpsb
sub
add
add
push
flds
movsb
sbb
or
rorb
and
lds
xor
add
or
add
push
push
aad
add
outsb
fbld
or
add
test
nop
jp
fildll
mov
add
and
jle
aad
out
jl
pop
fmuls
jo
pop
xor
loopne
lods
push
and
sti
test
xchg
test
jne
roll
mov
mov
pop
add
pop
inc
lock
enter
mov
add
aaa
stos
pop
mov
sbb
sbb
cmpsb
xor
mov
js
add
mov
push
jne
lods
movsb
ret
jp
pop
dec
daa
adcl
add
xlat
ja
adc
enter
and
sub
ret
pop
int
loopne
push
add
in
subb
add
inc
stos
fmuls
xchg
aam
adc
push
add
add
out
inc
scas
add
jg
or
push
push
comiss
mov
lret
cmp
addb
push
or
pop
cltd
cmp
rcrb
pushf
or
je
roll
cmp
add
and
add
jp
fists
in
xor
jge
pushf
add
mov
call
add
cmp
cmp
adcb
decb
xor
add
xchg
imul
mov
sbb
test
and
addb
adc
je
adc
jecxz
mov
xlat
and
cmpsl
pop
or
xor
cmp
sbbb
xchg
jns
movsl
inc
jg
add
cmp
mov
dec
add
and
or
add
scas
and
sub
aam
iret
add
mov
xor
sub
add
das
fiadds
sbbb
mov
push
loop
add
mov
mov
add
xchg
loope
pop
pop
pop
push
dec
xor
pop
andb
shl
jmp
sbb
jmp
out
add
test
rclb
pop
inc
sar
rcll
add
test
cli
ds
mov
stos
iret
pop
and
mov
add
sbb
or
add
inc
mov
mov
sbbb
sbb
add
ss
sbb
jno
mov
popa
fcomip
das
incb
push
xchg
jns
pop
movsb
shll
jne
and
sbb
inc
mov
rcll
adc
dec
add
dec
and
push
jae
add
push
imul
mov
xchg
scas
aad
xchg
sti
add
sub
mov
out
cmp
add
xchg
das
add
nop
dec
jmp
add
mov
enter
mov
jae
and
inc
test
sub
add
shlb
xchg
inc
movsl
add
mov
dec
jo
clc
cmp
cld
or
test
dec
adc
xor
rorb
add
mull
js
in
add
dec
imul
ds
shrl
repnz
mov
add
and
dec
lock
fiadds
loop
or
ficoms
and
dec
pop
add
lret
call
mov
push
xor
scas
add
lahf
rorb
rcl
movsb
fsts
gs
dec
or
mov
pop
lock
fs
add
sub
sbb
lock
add
aaa
mov
loope
pop
add
shll
cmp
inc
add
inc
inc
cmp
faddl
cmpsl
repz
push
fcoms
inc
or
cmpsb
fadds
enter
xchg
sti
hlt
sub
or
lods
lea
sub
mov
sub
sub
add
js
das
enter
add
outsb
cmp
add
and
cmp
add
loop
jne
push
xor
and
lret
jp
inc
in
in
hlt
cmp
andb
sub
bound
push
daa
testb
in
jle
xorl
and
pop
mov
aam
adc
dec
in
mov
and
iret
out
xor
rolb
add
imul
push
add
idivl
xchg
xchg
cmpb
cmp
cmp
add
insb
rolb
mov
add
dec
js
add
pusha
adc
add
adc
clc
or
ss
or
imul
sub
fs
jge
add
sub
fstps
in
add
cwtl
mov
aas
data16
add
mov
ret
push
add
jmp
mov
push
orl
pop
inc
push
push
cmc
jmp
dec
adc
lcall
pop
outsl
enter
jns
inc
push
js
pop
or
test
ficoml
pop
xchg
testl
in
sub
fs
add
jo
jb
cmp
cmp
cmp
mov
rclb
dec
jne
stc
mov
out
je
clc
incb
or
add
gs
sbb
xchg
xchg
sub
sub
add
add
addb
push
add
push
lea
mov
add
das
dec
pop
pop
sub
xchg
rcrb
dec
sub
and
nop
add
xorb
sbb
addr16
inc
loopne
jmp
mov
sub
cmp
sub
dec
add
lea
cmc
add
push
lahf
xorb
clc
ljmp
sbb
nop
stos
cmp
sarb
mov
push
loopne
xchg
xchg
ret
lret
addb
or
mov
in
and
sub
add
dec
shlb
inc
cmp
sbb
and
sub
sbbb
add
jmp
mov
cmpb
cli
aas
and
dec
and
or
loope
jae
add
xor
sub
imul
call
mov
add
push
fiaddl
inc
xchg
mov
ljmp
cmpsl
push
inc
lods
cwtl
add
repnz
dec
into
and
sub
sbb
sbb
sar
enter
cli
call
add
popf
push
inc
nop
int3
add
inc
in
enter
pop
dec
jp
psubusw
jmp
out
sub
mov
adc
in
mov
mov
or
in
aas
add
push
inc
add
idivb
adc
int3
in
add
adc
mov
inc
fsubs
push
jns
add
mov
arpl
xchg
mov
add
jnp
xlat
repz
mov
ja
imul
in
inc
jns
and
xchg
dec
add
push
dec
jo
add
mov
add
push
data16
insl
mov
add
clc
and
leave
jns
addr16
mov
fimuls
and
aad
iret
in
cmpsl
scas
test
cmpl
mov
sub
mov
pusha
cld
push
add
pop
inc
movb
adc
adc
shlb
dec
les
xor
and
add
xchg
fmuls
and
shr
add
test
xor
insb
fmuls
mov
stos
mov
add
cs
clc
enter
push
jne
jo
add
and
popa
lods
xor
arpl
adc
mov
jae
mov
mov
or
sti
or
imul
out
test
movsb
cmp
dec
add
dec
xor
iret
cmp
add
stos
int3
or
pop
lar
clc
sbb
jl
pop
sbb
dec
repz
pop
bound
pshufw
mov
dec
scas
das
add
aam
add
adc
rcrb
dec
jl
scas
add
cmp
insl
mov
adc
pushf
mov
inc
or
add
inc
imul
aas
xor
cmp
or
mov
add
xchg
js
mov
push
js
add
ja
or
dec
and
mov
adc
add
es
xor
add
mov
iret
and
ljmp
mov
cwtl
dec
mov
push
xchg
adc
push
in
jno
adc
cmc
out
add
loopne
add
dec
jbe
nop
fiaddl
imul
push
sbbl
sub
cwtl
mov
xor
test
arpl
ja
pushf
or
or
dec
repz
adc
lret
rclb
add
adc
adc
mov
add
dec
cmp
pusha
add
aaa
add
mov
je
jbe
and
xchg
sub
xchg
mov
sbb
or
test
aaa
and
or
daa
daa
mov
cld
movsb
into
sbb
add
and
cmp
lods
enter
inc
xor
xchg
jle
cmpsb
xchg
push
les
enter
and
xchg
rorb
sub
xchg
insl
or
cmp
fildll
lods
xlat
cmp
pop
jno
in
cmp
mov
push
sub
inc
add
or
in
add
adc
xlat
and
out
rorb
xor
push
fs
cmp
dec
add
jmp
and
loop
dec
hlt
arpl
gs
lcall
loopne
andb
inc
pop
and
mov
cli
adc
adc
dec
js
dec
orb
jae
insl
repnz
add
and
mov
hlt
push
jns
jns
jbe
psubb
jns
addb
push
in
fimull
xchg
mov
daa
dec
mov
jl
prefetch
int
incl
xor
xchg
imul
ds
or
ja
xbegin
test
add
js
loopne
dec
add
pop
cli
mov
inc
mov
add
adc
popa
mov
sub
cmp
stos
fisttps
xchg
push
push
and
stc
xor
in
xchg
add
push
pop
adc
adc
nop
inc
sub
int3
jns
add
jl
enter
and
jne
lods
and
sub
mulb
jo
insb
add
lods
test
arpl
sub
xchg
fcom
add
cmc
inc
mov
fistl
sub
xor
pop
jl
mov
imul
hlt
mov
add
into
sub
adc
mov
in
movsl
add
sbb
aad
mov
data16
hlt
in
mov
frstor
cmp
add
lods
jb
add
mov
or
pop
dec
mov
loopne
jno
pop
and
add
or
add
mov
or
in
mov
shll
sub
popf
add
ss
cmp
cmp
jb
jo
inc
bound
ret
fs
sub
sbb
mov
test
adc
pop
inc
pop
add
outsb
push
gs
popl
mov
js
add
sub
repz
mov
cmp
mov
call
daa
and
int3
dec
ficoml
add
out
dec
adc
and
fisubrs
hlt
and
sub
ljmp
divb
xchg
or
inc
mov
arpl
adc
fs
and
ja
jae
jo
es
sbb
jl
sub
nop
stc
adc
pop
jg
jg
add
jnp
add
push
xchg
add
mov
mov
jmp
out
mov
dec
dec
add
sbb
les
push
add
and
xlat
fs
out
push
jecxz
push
add
fsubrs
ret
pop
in
daa
or
and
pop
lcall
pop
test
jmp
dec
sbb
add
lahf
add
push
inc
or
sbb
clc
push
xchg
pop
adc
cmpsb
add
outsb
dec
pop
inc
inc
add
push
adcw
adc
add
push
pop
ret
jg
jmp
orl
adc
mov
or
aam
les
add
inc
push
ret
fsub
cs
and
xchg
sbb
inc
or
sub
xor
ljmp
sub
out
pop
jo
or
mov
inc
adc
shrb
push
xchg
add
xchg
add
loop
push
enter
mov
pop
xchg
lods
dec
adc
mov
adc
or
or
in
dec
adc
test
pushl
cmp
pop
cmp
in
flds
xor
add
inc
or
inc
and
ja
pavgb
sub
mov
push
add
push
loope
test
pop
movsb
adc
push
aad
sahf
pop
dec
lret
divps
push
add
mov
pop
add
mov
les
cld
cmp
movsl
add
repz
push
dec
add
pop
add
dec
je
cwtl
push
adc
adc
jmp
shr
and
das
mov
add
sbb
push
mov
outsb
loop
jl
push
xor
jno
push
xor
enter
sub
add
sbb
xor
and
add
cli
out
gs
sub
les
aaa
pusha
call
cs
popa
outsb
daa
je
and
insb
outsl
fisubl
sbb
aas
pop
push
jae
ret
and
pop
test
sbb
sbb
add
adc
add
cli
or
mov
sahf
insb
add
mov
repz
and
add
adc
or
add
adc
sub
add
sbb
pop
adc
push
aad
mov
hlt
repnz
mov
mull
and
push
lret
dec
mov
jnp
sub
sbb
xor
inc
push
add
sbb
cmpl
das
dec
add
ficomps
push
movsb
inc
and
cmp
mov
xor
jp
jbe
leave
ja
sti
cmp
aam
inc
mov
and
adc
or
aaa
lahf
ljmp
lds
jb
ret
stos
mov
mov
jl
add
cmp
flds
mov
adc
faddl
xchg
out
test
ret
add
test
xor
sbb
jbe
dec
jns
cmp
xchg
out
add
addb
xor
and
adc
cld
sub
int
push
in
and
and
xor
and
jmp
xchg
jle
les
lock
mov
stos
ret
mov
sub
push
xchg
ret
add
ret
add
cld
leave
mov
sbb
push
popf
fmuls
mov
lock
push
popf
jp
adcb
das
sbb
cmpsb
jnp
adc
and
mov
pop
orl
dec
cld
inc
add
push
negl
pushl
mov
adc
jp
add
mov
call
add
push
jle
loopne
lea
xchg
cmp
add
sub
push
pop
aad
push
add
add
clc
js
fdivs
and
pop
ja
in
xor
sub
lods
adc
mov
xchg
pop
mov
add
jmp
add
dec
stos
xchg
fidivs
xorb
fsubrl
sub
es
cli
cmpsb
imul
jge
out
cltd
jmp
pop
mov
rolb
pop
pop
enter
jl
arpl
add
fwait
add
push
adc
inc
data16
mov
dec
adc
push
lea
mov
ss
push
hlt
adc
aad
loopne
aas
add
rsm
int
nop
stos
inc
sub
in
add
cmp
in
inc
test
stos
loopne
daa
lcall
inc
test
repz
lock
clc
notb
js
jb
dec
add
inc
test
xor
mov
push
ljmp
aam
cwtl
jno
lock
inc
jns
pop
and
enter
int3
push
jo
filds
sub
fwait
and
pop
sti
mov
or
jae
addl
jp
mov
pushf
xor
das
sub
jle
add
out
jo
mov
imul
int3
jno
ljmp
mov
cltd
mov
sti
imul
adc
inc
popf
mov
ret
in
sbb
add
jb
pop
add
pop
xor
adc
cmc
inc
adc
add
xchg
and
ljmp
scas
mov
push
and
test
loopne
test
or
push
test
jo
lods
popf
add
add
jbe
adc
rolb
add
and
or
mov
cmpsl
cmc
lea
push
push
push
jne
xchg
push
jmp
adc
cmpsl
aad
add
or
inc
pop
mov
andb
lds
xchg
cs
push
cmp
sub
nop
cltd
rcrb
sub
add
dec
push
xor
add
cmp
cmp
push
mov
pop
in
mov
popa
push
jb
cmpsb
push
push
and
cmp
and
call
cld
ret
add
repnz
push
dec
add
das
ds
adc
pop
cmp
clc
mov
data16
xchg
add
in
pop
adc
aad
cli
push
test
js
add
mov
mov
adc
add
in
mov
lock
mov
into
adc
mov
lods
sub
adc
push
out
cmpsb
pop
inc
xlat
movsb
sub
sub
or
in
call
loopne
fs
pop
xchg
or
int
mov
sti
iret
stc
add
xchg
fidivrl
xchg
rcrb
add
aas
aad
mov
stos
andb
pop
pop
mov
test
imul
ret
mov
je
add
repz
add
ret
and
mov
add
pushf
sbb
xchg
mov
jl
push
clc
out
and
inc
pop
pop
loopne
add
rolb
mov
orl
mov
lea
inc
add
aad
add
std
loopne
add
or
mov
sahf
std
fld
ja
add
in
xchg
push
cld
inc
mov
sbb
sbb
popa
xchg
lea
push
mov
insb
cmp
push
adc
cli
icebp
add
dec
pop
pop
stc
jg
mov
adc
je
push
jne
inc
xchg
dec
add
sbb
std
fwait
jle
bound
inc
add
mov
add
or
sbb
mov
adc
in
inc
jmp
add
xchg
mov
inc
icebp
cld
adc
xchg
sbb
hlt
test
sub
das
inc
jbe
mov
jp
mov
cmp
add
mov
jge
ja
push
out
cli
mov
sub
adc
sub
mov
push
mov
and
mov
in
ja
jnp
or
sub
clc
push
loopne
enter
add
sub
add
jns
hlt
inc
mov
or
and
xor
or
adc
mov
jmp
addb
cwtl
dec
adc
pop
jg
loopne
mov
clc
nop
sbb
lcall
xchg
inc
adc
loopne
rorl
addb
and
aas
add
dec
and
and
sbb
and
add
mov
xlat
out
imul
pop
pop
bound
fmull
push
cmp
sarb
in
ret
push
nop
and
add
repnz
adc
aad
inc
ljmp
ja
add
clc
cld
movsl
flds
or
shrb
call
add
adc
clc
and
add
mov
push
call
dec
jp
add
andl
lock
ret
add
mov
ja
add
mov
or
add
jecxz
jae
adc
add
and
aam
sub
xchg
test
push
roll
inc
cmp
pop
sub
adc
adc
add
icebp
cmp
adcb
jo
outsl
cmp
sbb
add
xor
inc
or
fninit
add
not
jne
test
repnz
fsubs
or
pop
push
lret
inc
xchg
loop
ljmp
clc
jb
pop
les
mov
sarb
je
xorb
movb
lret
dec
cmpsl
jp
add
sub
addl
mov
xor
pop
jo
hlt
adc
mulb
sub
xchg
outsl
addb
jmp
cli
pop
rcrb
fnstcw
ret
ja
xchg
aas
repnz
repz
jae
nop
negl
gs
adc
popa
cmp
add
and
jb
push
dec
jp,pt
pop
clc
push
and
lock
out
push
add
test
jne
push
push
nop
add
mov
fmul
fimuls
mov
inc
pop
or
test
and
sub
dec
add
xchg
lock
xor
pop
cmpsl
push
dec
cmp
jmp
decl
pop
invd
cs
notb
mov
call
inc
outsl
lcall
lea
push
dec
inc
jmp
and
ret
movl
loope
lea
ficoml
and
pop
test
mov
xor
cs
add
lret
pop
mov
mov
movsl
mov
pop
test
test
dec
daa
mov
pop
in
dec
cs
and
les
lcall
cmp
xchg
ret
daa
add
icebp
and
aaa
xchg
mov
je
dec
pop
cmp
mov
xchg
push
add
mov
adc
push
sbb
push
mov
mov
movsb
sub
adc
shr
add
addl
loop
dec
imul
push
stc
jl
add
push
lea
inc
jmp
insl
call
pushf
adc
add
call
outsl
mov
andl
scas
ret
leave
out
cli
enter
stos
loopne
or
mov
and
or
loop
push
test
push
or
repnz
out
movsl
pop
daa
add
jge
add
in
repz
add
clc
cmp
add
test
pmuludq
adc
cmp
ret
pop
sbb
inc
into
and
call
adc
pusha
add
enter
and
inc
add
pop
mov
mov
ljmp
sub
jge
add
jnp
push
and
fs
lock
jno
mov
rorb
or
add
mov
inc
add
mov
ficoml
cmp
xor
cltd
jle
aam
pop
add
and
cmp
inc
mov
mov
add
mov
rep
xor
scas
mov
or
mov
ret
push
call
loopne
adc
add
mov
rolb
dec
ja
pushl
inc
add
mov
add
pop
sub
stos
pop
pop
xchg
xchg
push
mov
sub
jno
pop
dec
sbb
js
shll
sbb
mov
xlat
dec
fs
add
push
cld
adc
hlt
xchg
es
stos
out
pop
cmp
jae
sbbb
adc
testl
dec
pop
out
push
or
js
bound
inc
jecxz
sbb
dec
lret
enter
pop
push
dec
jl
add
jl
sbbb
add
inc
mov
lods
add
cmp
add
jle
out
jmp
fidivrl
dec
scas
dec
push
add
call
sub
mov
frstor
mov
push
lcall
ror
std
dec
jo
and
maskmovq
notl
mov
dec
adc
and
dec
add
add
cmp
cmpb
cmpl
pop
cli
jns
and
data16
dec
xlat
test
add
inc
cmp
mov
xor
inc
push
push
ds
push
js
cmp
rorb
add
lcall
inc
mov
es
xor
or
out
faddl
mov
dec
pop
fs
adc
cmp
test
clc
mov
sub
dec
in
add
lock
into
push
fdivl
jnp
pop
lcall
push
subb
fadd
fadds
in
shll
jmp
ret
dec
and
jle
dec
mov
pop
sbb
shr
mov
divb
cmpsb
add
stos
hlt
scas
insl
mov
jns
add
std
xor
ja
xorps
rcrb
dec
rcrb
add
scas
sbb
add
add
call
cmp
ficoml
push
add
lea
xchg
std
adc
sarb
sbb
add
pop
push
dec
add
xchg
mov
jae
sbb
adc
mov
ret
add
test
les
pusha
call
sahf
jae
jge
js
jo
cli
pop
mov
xchg
rcrl
hlt
das
xchg
dec
or
adc
mov
arpl
xchg
xor
adc
sbb
xchg
cs
or
sbb
shl
jp
pusha
push
or
out
adc
lock
push
add
and
mov
mov
add
pop
cmp
je
test
or
dec
jae,pt
cmp
pop
outsb
in
sbb
add
and
rcll
cld
xchg
fadd
sub
push
add
lcall
add
sbb
dec
jne
outsl
xchg
addr16
xchg
imul
jl
jmp
mov
and
push
dec
xchg
fistl
add
ret
push
adc
inc
addr16
add
aad
add
fimull
addb
ja
push
jne
aam
sbb
enter
sbb
ljmp
xchg
push
imul
add
enter
in
ja
add
pop
je
add
jmp
cld
push
nop
jno
add
cs
sbb
dec
aad
push
adc
scas
sub
std
rolb
xrelease
scas
mov
jne
addr16
pop
lret
cltd
xor
ret
dec
adcb
inc
add
insb
push
pop
dec
and
das
mov
fiaddl
int
xchg
inc
cwtl
add
push
cltd
ret
pop
jl
nop
add
imul
inc
push
outsl
dec
jne
pop
add
mov
mov
xchg
lcall
dec
stos
data16
xchg
nop
aad
add
call
into
cmovs
loopne
jge
rcll
cmp
or
cmp
or
add
ret
inc
and
into
rorb
add
lock
movsl
adcb
loopne
cmp
and
dec
mov
pop
inc
cmp
inc
fs
les
test
pusha
add
jo
popf
add
into
ljmp
decl
jle
or
pop
add
mov
ficoms
js
or
es
mov
cmp
and
pop
ret
rcr
and
mov
add
pop
push
inc
mov
add
movzwl
add
xor
add
pusha
or
cmp
push
je
push
add
push
or
es
add
mov
add
repnz
push
cli
xor
inc
or
pop
test
rorb
repnz
sub
repz
daa
imul
sbb
cltd
sbb
in
add
sti
or
and
incl
and
jmp
or
push
mov
pop
add
call
subb
es
or
je
out
mov
push
jmp
push
cmp
push
adc
push
inc
stos
and
cmp
add
mov
and
call
add
idivb
push
out
pop
mov
and
lcall
adc
adc
iret
inc
bound
mov
mov
inc
popf
mov
movsb
cmp
mov
aad
add
push
in
push
clc
add
xchg
dec
add
sub
dec
xchg
dec
adc
xor
test
mov
jae
inc
add
fiaddl
loope
cmp
fmul
add
fadds
cmp
xor
sbb
push
or
fwait
xchg
dec
xchg
xchg
rolb
add
cmc
push
stos
in
inc
dec
add
inc
xchg
add
xchg
adc
mov
add
xchg
ja
cmc
fcmovnb
push
clc
and
fildll
addb
mov
into
add
sbb
pop
jle
pop
inc
sbb
cmp
push
and
pop
xor
sbb
push
test
pusha
aam
xor
sbb
xchg
adc
push
in
pop
adc
mov
jmp
aaa
push
aas
push
movsl
addb
or
jg
mov
inc
adc
mov
loopne
dec
fiadds
push
sbb
mov
sti
jmp
insb
ret
cmp
aam
dec
push
js
adc
repz
testl
and
push
and
add
dec
aam
cmpsl
and
loop
jg
je
loopne
mov
loopne
sbb
xchg
repnz
push
mov
push
cli
rorl
xchg
aas
ret
lea
test
inc
mov
sub
cmp
jle
xor
sub
add
lret
in
pop
loopne
cmp
add
jae
add
push
call
divb
pop
dec
add
mov
add
pop
sub
and
push
push
adc
xchg
and
out
inc
pop
pop
push
mov
roll
addr16
dec
jb
and
cmp
mull
dec
add
sbb
lahf
movb
inc
mov
gs
shr
add
add
add
cmp
adc
mov
shlb
dec
push
add
adcl
ja
ds
inc
cmpsl
clc
jne
or
cld
push
or
filds
ret
or
insb
and
iret
hlt
lahf
add
dec
test
in
je
orb
cmp
dec
pop
mov
stos
loope
popa
cmp
or
vpmadcsswd
loope
aaa
pop
xchg
push
in
inc
mov
dec
in
lea
mov
jge
mov
ret
pop
jno
out
lret
pusha
lcall
mov
jbe
push
ljmp
xchg
cld
pop
pop
sbbb
add
sbb
loopne
sbb
jl
pop
aam
fmul
orb
hlt
je
add
movsl
and
fcoms
in
mov
push
in
mov
pop
and
sub
les
dec
fcoml
add
push
outsb
stos
xor
push
lret
fcomp
mov
add
add
push
add
or
bnd
adc
pop
out
loope
in
or
add
testb
jb
add
leave
aas
push
add
adc
inc
adc
xchg
xchg
cmp
imul
std
jle
leave
nop
add
repz
je
add
ss
xchg
xchg
test
add
popl
sub
dec
inc
inc
push
roll
mov
xchg
mov
cld
aas
add
lahf
enter
dec
lcall
mov
pusha
jmp
inc
sub
add
std
mov
and
cmpsb
inc
adc
push
sarl
lock
jmp
cld
paddusb
inc
jmp
rorb
test
ss
in
sub
nop
xorl
push
mov
inc
fadds
cmp
lea
fucomi
push
lcall
mov
jnp
jecxz
cmp
xchg
daa
push
pop
jno
iret
add
sbb
dec
add
rcrl
inc
bound
inc
into
pop
data16
xchg
and
inc
pop
dec
and
add
or
stc
mov
jo
sbb
sub
aaa
sbb
sbb
cmp
pop
es
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
loope
call
adc
xchg
sub
addl
add
fisubrs
xorb
push
mov
or
add
fiadds
ja
sbb
xor
inc
rorl
push
adc
push
lods
mov
sub
sti
cmp
mov
ret
cltd
mov
pop
add
popa
xor
add
xchg
inc
sub
sbb
das
or
nop
es
jecxz
aas
add
mov
and
int
and
roll
add
daa
add
rcrb
push
pop
les
mov
add
xchg
add
pop
add
inc
frstor
add
jge
add
push
clc
in
jg
add
adcl
add
inc
xor
push
add
inc
mov
add
pop
cld
or
jp
pop
push
leave
and
sarl
mov
in
cld
enter
add
rcrl
sub
add
pop
mov
rcrl
cmp
scas
dec
std
sti
cmpsb
add
and
inc
sbb
mov
movsb
or
xchg
inc
xchg
pushl
and
das
icebp
fwait
mov
shll
push
mov
add
popa
sub
addb
mov
jge
pusha
leave
inc
aam
mov
add
and
cmpsl
shll
insb
jno
add
jmp
ss
push
add
mov
idivl
inc
push
dec
outsl
jne
mov
sti
pop
aad
and
jle
xor
test
dec
push
xchg
jne
and
and
and
ljmp
jae
mov
add
dec
hlt
lock
lret
lds
rcrl
xchg
adc
loope
xor
pop
sbb
xlat
das
jb
jecxz
cmp
ror
in
jmp
or
clc
ret
xchg
out
mov
adc
sub
inc
push
ret
out
mov
sub
dec
lods
dec
shr
mov
mov
ds
fisttpll
push
mov
out
sub
in
movsl
shlb
push
pusha
adc
adc
lahf
cmp
jo
add
sub
mov
sbb
push
fmuls
xchg
jne
add
cli
inc
xorb
push
sbb
jne
nop
or
jno
pop
add
js
loopne
je
push
addb
cld
adc
cmpl
adc
add
idivb
cld
imul
and
mov
je
sbb
sbbl
add
pop
je
adc
bound
jmp
idivb
js
mov
and
inc
ds
xchg
je
pop
push
and
aad
jg
mov
push
pop
ja
add
jae
lea
fldl
shll
iret
test
cmp
in
push
dec
or
insb
add
adc
add
inc
stos
push
dec
seto
mov
ja
nop
lods
mov
push
add
xor
dec
iret
lret
shlb
mov
sbb
mov
mov
daa
sbb
mov
xor
inc
jne
sbb
cmpb
fwait
rcrl
shl
add
and
in
enter
les
dec
inc
inc
aad
jmp
push
add
loope
cs
ja
push
xor
ret
mov
push
pop
add
pop
adc
add
push
scas
xor
punpckhbw
pop
mov
pop
xchg
push
mov
test
mov
add
or
pop
lock
add
mov
sub
stc
pop
pop
repz
pop
je
in
jb
sub
enter
cld
xlat
sbb
cwtl
dec
cs
js
pop
add
mov
incb
mov
or
jecxz
sub
dec
pop
mov
aas
jae
add
cmp
xchg
scas
jne
sbb
add
add
adc
add
fcom
mov
cmp
sbb
out
add
and
repnz
pop
sbb
xorb
mov
dec
stos
cmp
adc
loop
sub
mov
mov
mov
mov
inc
out
mov
or
ds
cmp
das
daa
jle
idivl
hlt
cmp
xor
and
add
call
int
cmp
jae
lcall
mov
mov
adc
or
sbb
sub
bound
pop
sub
clc
add
out
dec
xchg
jmp
mov
xchg
mov
pusha
jl
push
scas
inc
xchg
loopne
lods
add
xchg
push
movb
add
jmp
or
and
push
adc
sub
jns
push
sub
mov
jae
movb
lea
lods
mov
add
mov
pop
and
mov
sub
mov
pop
sti
shlb
push
shll
imul
jne
cmp
push
sub
mov
jle
std
add
call
push
add
loopne
faddl
pop
fcom
push
repz
xor
sti
scas
mov
or
gs
pop
andb
pop
js
push
mov
loopne
sub
add
cmc
mov
pusha
xchg
mov
inc
push
addl
inc
sbb
mov
jg
lsl
push
movsb
loopne
clc
leave
add
push
lock
mov
add
jbe
insl
inc
mov
add
popf
subb
pop
xchg
inc
dec
ljmp
add
ja
sbb
mov
add
sbb
addb
lds
jbe
mov
lret
movsb
fsts
or
xchg
movl
mov
cmpb
mov
int
lea
das
arpl
adc
mov
addb
mov
ljmp
je
mov
shrb
jns
addr16
sbb
loop
repz
add
imul
add
fmuls
pop
adc
icebp
aam
in
jge
pop
cmp
repnz
je
int3
bound
xchg
or
or
add
mov
pop
add
ret
rolb
stos
or
cmp
shll
mov
test
add
adc
sti
pusha
sub
loope
cs
adc
xchg
aas
add
inc
jo
mov
add
ja
xchg
nop
pop
subl
dec
shlb
adc
hlt
add
and
mov
add
and
jb
fcomps
mov
push
add
jb
add
and
dec
xor
adc
je
add
xchg
add
hlt
loopne
incl
pop
and
addr16
adc
add
mov
push
mov
and
or
and
loopne
or
loop
in
sub
je
push
negb
push
sbb
shll
dec
in
sub
add
nop
movsb
mov
cmpb
daa
ja
xor
inc
jno
mov
sbb
add
pop
add
mov
add
fcom
pop
or
inc
test
dec
int
mov
lret
jg
out
add
sbb
cmp
add
ss
xor
movsl
adc
mov
push
popf
in
jmp
cltd
or
mov
jne
add
cmpsl
lret
adc
mov
xlat
ljmp
mov
jbe,pt
or
add
out
add
out
mov
fildll
aam
mov
add
lock
mov
add
pop
clc
push
push
loop
add
xor
cmpsb
bswap
sub
mov
mov
inc
push
les
xor
repnz
rcrb
add
clc
jne
push
mov
pushf
inc
clc
int3
pop
mov
inc
insb
and
cmp
in
pop
adc
aad
cmp
lock
fstpt
out
sbb
push
in
xor
adc
fs
push
cmp
popa
cmp
inc
clc
mov
cli
or
mov
sub
and
xchg
jg
shrb
dec
cmp
jb
and
pop
repz
inc
inc
pop
sbb
add
sub
mov
mov
aaa
call
bound
mov
dec
add
inc
in
or
cmc
push
test
fcoml
sbb
dec
sbb
inc
gs
je
popa
icebp
cld
fs
jp
jae
and
imul
shll
add
stc
sbb
insl
adc
and
mov
bound
add
loope
fnstsw
lods
add
jge
pushf
add
cs
bound
lret
ds
addl
out
js
mov
cmp
test
sahf
sub
loop
movsl
add
call
add
rorb
je
and
jle
add
out
stc
fs
inc
add
sub
adc
lret
add
aas
jmp
call
add
xchg
cmp
les
stos
sbb
pop
call
out
push
add
adc
dec
push
dec
add
mov
jp
leave
lret
jne
push
cli
ret
add
add
push
pop
clc
repz
into
adcb
movsb
add
imul
or
es
push
lret
cmp
sub
cmp
inc
sub
enter
mov
mov
je
mov
ljmp
pop
mov
push
in
arpl
js
sub
sbb
inc
add
in
call
add
mov
in
outsb
push
mov
sub
in
sti
adc
add
xchg
push
add
in
add
loopne
andl
add
sub
sahf
pop
shl
jge
push
lock
push
mov
ss
cmp
add
shlb
imul
jge
push
cmp
je
add
pop
pop
pop
nop
repnz
xlat
add
wbinvd
in
shrb
pop
dec
ret
cld
lock
push
pop
in
xor
inc
inc
cmp
mov
mov
cld
mov
sbb
xchg
notl
sbb
in
add
add
jo
cmp
adc
push
hlt
fmull
add
loop
arpl
jnp
add
jl
js
add
sbb
add
testb
or
pop
dec
add
xchg
cmp
and
sbb
lock
mov
xchg
lods
sbb
add
xchg
mov
jae
jg
add
les
jmp
push
jge
xor
jle
xor
loopne
outsl
push
jp
pop
das
add
jmp
lret
push
xor
and
push
mov
rcrb
push
mov
mov
fs
sub
cmp
cld
out
add
pop
bound
sti
std
popa
add
mov
clc
arpl
sbb
fldcw
and
testl
dec
jecxz
jns
into
fldl
cmp
lods
fcoms
add
jo
mov
jne
adc
lahf
push
push
iret
pop
sar
dec
in
mov
push
mov
adc
add
mov
dec
add
sub
cmp
and
aad
mov
inc
sub
rorb
insl
out
sub
data16
lcall
xchg
inc
cld
push
setae
and
icebp
or
addr16
push
add
iret
into
sbb
mov
adc
add
adc
popf
dec
pop
mov
add
lods
push
lret
adc
xchg
add
dec
or
adc
xchg
sub
xor
inc
or
and
fnstenv
rcll
jmp
ds
add
in
mov
jne
push
sub
data16
inc
cmp
jmp
test
cmp
stos
clc
jo
xchg
orb
xor
pop
das
je
fcomip
cmp
mov
sbb
push
cmp
pop
inc
xor
add
mov
dec
adc
and
imul
enter
subps
sahf
pop
push
jae
addl
lea
clc
je
mov
adc
add
enter
cs
add
stc
mov
inc
js
pop
xor
xchg
jo
push
mov
xchg
lock
ds
iret
pmulhw
jmp
insb
inc
push
rorb
mov
pop
lods
inc
clc
add
mov
pop
jns
movsl
add
dec
rolb
inc
dec
add
or
or
lock
and
call
pop
mov
add
inc
dec
in
inc
add
push
pusha
add
pop
sbb
jne
movsb
add
mov
sub
and
fadds
jmp
enter
jl
and
push
sbb
incb
jb
xchg
mov
xor
add
mov
dec
shlb
and
gs
outsb
jecxz
test
orb
aas
inc
pop
sets
cmp
mov
sbb
dec
nop
mov
out
rclb
adcb
mov
test
das
push
ds
dec
jb
xchg
cli
jmp
out
add
cld
and
adc
jne
add
mov
nop
cmc
inc
fbstp
pop
pop
xor
ficoms
add
and
jp
mov
stos
lcall
jg
cmc
mov
xchg
jns
pop
ret
jbe
lahf
push
loopne
fdiv
mov
out
orb
test
mov
inc
add
mov
shrb
addl
jge
and
add
dec
test
adc
mov
stos
lcall
pop
push
movl
fistps
call
add
jle
sbb
push
jmp
in
in
test
add
dec
sbb
add
mov
outsl
cmp
adc
and
or
mov
incb
push
xor
add
gs
sbb
and
pop
add
les
add
ja
clc
sti
sub
jecxz
pop
adc
inc
and
dec
sub
insl
and
add
sbb
addl
jns
dec
cmp
xchg
mov
xchg
add
pusha
inc
sub
add
push
subb
stc
sub
pop
gs
add
pop
out
sbb
mov
call
inc
das
pushf
mov
or
and
add
enter
jb
je
inc
mov
add
orb
xor
in
ret
fcoml
mov
pop
testl
push
and
add
push
or
dec
add
aad
and
adc
cmp
test
push
adc
push
sbb
push
push
xor
pop
repnz
aas
inc
xor
push
add
add
add
mov
stos
cmp
lcall
adc
push
add
pusha
and
dec
inc
xchg
cmp
xorl
leave
test
xor
into
push
idiv
pop
mov
add
inc
movsl
addb
adc
cltd
or
dec
adc
arpl
dec
lods
push
les
mov
adc
stos
inc
out
mov
orb
and
add
leave
mov
js
add
test
cmp
and
and
fiaddl
push
cmc
adc
daa
scas
movsl
add
jmp
pop
pop
aas
pop
std
shlb
in
scas
icebp
push
mov
mov
or
add
inc
popa
sub
mov
add
and
out
dec
or
cmp
jg
xlat
adc
loopne
dec
std
add
jle
cwtl
or
xchg
loopne
mov
test
out
dec
addb
fidivrl
lds
imul
sbb
or
jle
faddp
xchg
daa
sub
pop
mov
jp
xchg
in
inc
into
jle
xchg
jl
mov
in
add
fstl
push
pop
dec
adc
sti
xorb
cmp
sub
hlt
das
mov
test
je
cvtps2pd
dec
imul
and
in
jg
sub
pop
or
iret
aas
sbb
cmp
cli
mov
adc
xchg
cmp
sbb
add
xchg
ds
add
cld
add
or
jo
xor
push
push
ds
sbbb
cmp
inc
sti
pop
inc
adc
dec
push
sarb
jbe
gs
test
dec
into
repz
andl
add
ja
push
cmc
out
mov
daa
adc
and
add
dec
mov
enter
add
push
and
fmuls
inc
pop
ja
push
mov
je
add
pop
and
adc
push
sbb
add
or
inc
mov
and
adc
stc
loopne
addb
push
testb
cld
or
test
xchg
sahf
xchg
rcrl
fists
push
pusha
add
call
movsb
push
add
mov
add
nop
repz
and
sbb
xchg
sub
jns
pushf
sub
jo
jae,pn
xchg
add
push
imul
and
cmpsl
je
jmp
cmp
jbe
add
xchg
test
xchg
out
add
inc
js
rolb
mov
clc
les
dec
cmp
dec
out
repz
and
imul
inc
add
in
insb
inc
test
test
push
movsb
sbb
add
and
fsubl
js
int3
pop
or
xchg
addb
mov
add
lcall
add
mov
mov
lcall
clc
ret
push
nop
push
adc
or
or
add
sbb
pop
call
or
mov
faddl
sbb
mov
and
movsb
add
pop
and
lock
andl
das
call
xor
add
cmp
movsb
and
add
sub
mov
add
mov
lods
add
adc
loopne
xor
pop
xor
scas
add
or
and
pusha
hlt
and
or
int3
push
mov
lret
mov
push
enter
loopne
fcoml
dec
sbb
xchg
adc
stc
and
sbb
test
sub
or
and
je
xor
mov
jne
fs
adc
lods
dec
aas
add
lods
pop
arpl
add
test
cmp
cmpsl
or
add
rclb
pop
mov
mov
cmp
jo
pushf
inc
shrl
jle
pop
and
dec
pop
icebp
insb
jbe
subb
fcoml
lods
adc
cld
insl
add
and
fs
push
jne
mov
pop
mov
add
adc
dec
push
inc
sahf
mov
movsb
or
push
sub
and
testl
sbb
mov
push
lea
adc
test
sbb
or
and
andb
out
loopne
add
je
insl
gs
add
outsl
out
addl
cld
ljmp
inc
sbb
sbb
cmpb
inc
mov
pop
adcb
in
or
dec
rol
push
or
xor
aam
adc
stc
rcrl
sbb
repz
fmuls
loop
add
jl
movsb
add
pop
adc
pop
or
pop
es
dec
je
add
mov
xchg
and
pushf
dec
movsb
xchg
xchg
repz
aam
fdivr
in
in
sti
hlt
clc
cld
add
add
adc
sbb
les
pop
xchg
xor
cmp
pop
dec
icebp
push
pop
clc
in
fs
insb
jo
jl
test
dec
cmpb
cmp
inc
and
ds
add
or
rorb
fs
mov
mov
addb
and
mov
in
pop
loop
gs
add
and
adc
add
xchg
sub
inc
dec
dec
dec
add
incl
push
pop
pop
add
in
add
inc
dec
push
dec
adc
addr16
insl
pop
outsb
scas
add
add
add
and
imul
fcoml
mov
cmpsl
add
call
je
push
xor
inc
cwtl
mov
pushl
adc
or
xchg
xor
and
inc
xor
cmp
inc
add
imul
lock
nop
sub
sbb
inc
cmp
and
je
mov
mov
add
sbbl
and
and
pop
add
lea
cmp
add
push
scas
mov
sbb
hlt
add
sbb
js
add
push
xchg
divl
test
mov
or
cmc
add
jecxz
mov
pusha
insb
add
clc
daa
push
and
cwtl
gs
popl
xchg
psubsb
test
cltd
pop
jo
or
jg
add
add
mov
jne
adc
movsb
or
jle
add
xor
loopne
in
jo
inc
cmpsl
or
int3
dec
clc
xchg
or
movsl
pusha
cmp
jecxz
adc
dec
nop
test
mov
shlb
xor
cmp
inc
inc
push
add
and
rcl
mov
ds
cwtl
push
add
add
add
add
pop
pusha
or
push
or
femms
inc
adc
add
cltd
or
and
sarb
and
xor
add
push
fwait
loopne
rolb
xchg
adc
nop
jbe
add
sbb
pushf
sbbb
test
and
adc
xlat
mov
mov
and
daa
jp
sub
and
push
mov
xor
cmp
add
push
aas
add
adc
loopne
xor
mov
ds
xor
push
ss
cltd
add
xor
les
cmp
dec
xchg
add
inc
pop
mov
adc
add
arpl
xor
xor
sbb
jo
fstps
sahf
call
scas
and
mov
adc
pushf
cmp
pop
cltd
jns
insb
ret
shll
loopne
add
les
jne
add
sub
fsubl
andb
loopne
and
mov
sbbb
or
and
pusha
adc
mov
add
aam
test
pop
sbb
or
inc
add
push
dec
cltd
mov
mov
fldenv
inc
xor
gs
or
pushf
mov
sbb
add
sub
inc
notl
lea
sub
flds
pop
adc
mov
mov
xor
xor
test
je
hlt
outsl
pop
inc
cmp
rcll
xchg
jnp
ret
movsb
or
sbb
pushf
adc
add
movsl
lods
dec
pop
sbb
imul
xor
add
movsb
fcomp
test
popa
dec
or
dec
repnz
jns
inc
and
jp
data16
cmp
enter
hlt
jne
mov
add
adc
xchg
pusha
push
lcall
mov
popa
insb
in
adc
xor
add
pop
mov
test
jo
mov
and
lods
xchg
or
pushf
xor
mov
inc
mov
nop
add
push
inc
push
add
jl
mov
push
lods
mov
xchg
nop
xchg
push
jo
xchg
sbb
enter
add
jl
lea
add
or
loope
cwtl
add
and
inc
mov
pushf
sarb
fwait
add
sub
push
xchg
aas
xchg
adc
push
lods
xchg
cli
mov
pop
cltd
xor
or
dec
aam
loop
and
inc
decb
pusha
push
xor
and
lahf
jle
nop
mov
fdivrp
lock
mov
iret
cmp
iret
dec
rcrb
and
std
sarb
mov
sub
xchg
rclb
ss
sub
push
adc
adcb
add
aam
in
hlt
add
xchg
sbb
adc
daa
jle
add
inc
fs
and
test
xor
mov
sbb
sub
cmp
add
mov
cmp
xchg
aam
loop
lock
adc
cmc
pop
add
cwtl
stos
mov
push
lret
decb
or
and
lods
sbbb
xchg
mov
shl
loopne
and
cmp
xchg
jg
add
orb
push
add
sub
or
xor
scas
movsb
in
fs
je
jle
lcall
xor
add
outsb
pop
insb
xor
add
adc
inc
xchg
leave
add
into
outsb
out
push
fs
add
insl
inc
inc
xor
add
jne
in
jnp
add
jmp
adc
xor
dec
lret
pop
push
loopne
fidivrl
mov
sbb
add
jp
xor
in
jne
incb
xor
mov
outsl
arpl
call
sbb
sbb
cmpsb
sub
in
adc
push
push
imul
push
shl
add
inc
jns
xor
add
lock
je
mov
dec
or
add
jo
std
xchg
push
je
imul
popa
mov
jmp
mov
and
push
xchg
add
or
jl
add
jb
jno,pt
into
add
xor
dec
outsl
cli
add
outsb
stc
or
inc
dec
adc
inc
imul
insl
push
push
pop
push
dec
push
adc
mov
fsubl
insl
add
push
xor
add
push
sub
mov
sbb
inc
pushf
inc
xor
jae
sub
rcrl
push
mov
push
outsb
push
inc
cmp
push
inc
cltd
fidivl
shlb
push
outsl
xchg
add
add
cmp
addb
aam
or
pop
push
sbb
rep
lock
shlb
fs
mov
and
sub
xchg
add
imul
jo
and
jp
cmp
xchg
jno
add
jne
jb
lret
dec
xor
inc
mov
jge
add
addr16
dec
incl
sahf
popa
mov
dec
add
mov
or
jnp
sub
jo
movsb
dec
repnz
pop
push
inc
xchg
add
add
sub
cmpsb
cmp
add
aam
mov
and
popa
jne
sub
mov
in
mov
hlt
pushw
sub
outsl
cwtl
mov
sub
lcall
lods
or
mov
mov
aam
movsl
add
test
call
inc
sbb
ficoml
stos
dec
pop
sub
mov
lahf
sub
and
aas
dec
fiadds
adc
in
xchg
inc
xchg
pusha
add
loop
insl
inc
jo
add
push
mov
lds
jp
adc
or
push
inc
or
mov
es
lds
movsl
sbb
add
sub
inc
out
and
mov
in
lods
repnz
xor
imul
dec
sbb
div
push
test
int3
push
insl
repnz
xor
xor
mov
add
cmp
add
mov
add
mov
sub
jbe
or
movsb
cld
add
aas
pop
popa
arpl
repnz
push
add
ja
xchg
and
inc
hlt
out
fwait
and
addb
imul
mov
jne
jle
add
sub
xor
pop
cmovne
cmpsl
mov
filds
add
pop
pop
cmpsl
adc
cmp
add
add
in
and
jo
adcb
pop
or
pop
out
fcom
js
sub
xchg
inc
xor
inc
ret
in
add
movsb
out
shll
add
loopne
test
cmp
and
add
mov
pushf
add
sub
aam
sbb
cmp
adc
xchg
test
ljmp
push
xor
and
mov
sub
mov
cmp
repz
adc
dec
cmp
test
in
repz
xchg
aaa
add
sub
push
add
sub
inc
stos
inc
insb
in
add
and
sbb
popa
mov
gs
or
mov
add
jge
or
cwtl
movsl
mov
or
mov
pop
jle
push
and
js
push
sbb
xchg
outsb
fiadds
into
push
sarb
cmp
aad
pop
movsl
add
hlt
add
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
decb
lods
xchg
add
je
jbe
js
add
jl
jle
nop
mov
cmp
es
pushf
inc
loopne
popa
and
push
leave
push
sarl
add
sbb
cmp
ret
push
aad
fistps
je
add
xchg
cmp
daa
sbb
cmp
pop
sub
js
jp
jl
jle
jle
jle
jle
push
pop
cmp
add
inc
sub
xchg
or
popf
adcl
push
movb
sbb
xor
jg
add
cmp
faddl
sbb
cmp
aaa
add
push
pop
pop
call
xchg
hlt
in
clc
hlt
or
andb
add
sub
jmp
stc
mov
sti
andl
pop
add
or
pushf
xor
popf
add
test
cmp
xchg
mov
out
out
ret
sbb
push
xchg
mov
push
subps
and
xchg
les
lret
push
jle
sbb
xor
popf
pop
sbb
mov
lahf
xchg
pop
out
cmp
add
or
daa
sbb
addr16
lock
mov
xchg
out
leave
mov
xchg
add
fnstcw
jb
je
jbe
add
dec
xorl
mov
leave
rcl
push
add
cmp
push
test
iret
lock
hlt
add
loope
icebp
imul
dec
cmp
scas
add
loop
or
sub
mov
ret
rorl
aas
cmp
enter
int3
sbb
pop
pop
out
xchg
xor
push
enter
iret
je
xor
inc
fmuls
add
jp
jl
jle
repnz
xor
popf
dec
sbb
push
pop
lahf
fs
nop
sub
js
push
xchg
hlt
mov
mov
sbb
inc
cmp
cmpsl
imul
mov
jmp
cld
call
ss
pop
sarl
sti
cmp
addb
insb
adc
xchg
dec
xchg
cmpsl
add
xor
in
mov
mov
loopne
in
std
call
sub
jbe
sbb
cmp
popf
add
sbb
loop
add
inc
lds
test
mov
mov
add
add
push
leave
loopne
sar
and
cmp
add
push
icebp
cwtl
lret
push
push
adc
xor
mov
rcrb
jecxz
repnz
mov
pusha
sbb
repz
fcompl
in
in
pop
testl
call
sub
sbb
aas
push
dec
pop
mov
orb
dec
xchg
lcall
iret
shl
add
je
cmp
js
jp
jl
jle
test
ja
jns
jnp
jge
jg
add
sbb
aaa
sbb
sahf
dec
push
test
xchg
xchg
lahf
scas
pop
mov
mov
lahf
lahf
ficomps
testb
daa
pop
push
inc
push
addr16
ss
push
out
inc
iret
dec
inc
push
bndldx
outsb
hlt
jbe
jle
lret
aas
cs
outsb
sahf
scas
cmpsb
out
scas
das
mov
mov
iret
iret
fmulp
out
out
iret
test
push
push
cmp
dec
push
add
cs
add
cmp
adc
in
hlt
add
jle
cs
hlt
enter
sub
call
fcoml
cld
inc
dec
dec
mov
pcmpgtb
je
jl
and
cld
xchg
cld
pushf
cld
movsb
cld
lods
cld
mov
mov
int3
aas
aam
fdivrl
in
in
ds
pusha
add
cmp
cmp
sbb
and
sub
xor
aas
in
call
pop
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
mov
aam
fsubl
stos
xchg
cld
xchg
mov
add
sbb
and
sub
xchg
int3
push
add
jl
test
inc
mov
mov
loopne
hlt
pop
cli
cmpb
or
js
dec
mov
cmp
cmp
pop
cmp
insb
aas
jo
je
js
sub
xchg
jl
jmp
stc
enter
rcrb
pop
loopne
push
adc
ds
and
cmpsl
add
les
pop
out
je
insb
in
je
js
jl
cmp
cld
mov
mov
nop
cld
xchg
cld
movsb
cld
cld
int3
cld
sar
aam
in
xorl
call
add
push
sub
xor
xor
loope
xchg
pop
inc
dec
xor
dec
test
sub
aas
mov
adc
dec
sub
and
lock
xor
div
cltd
mov
pusha
aam
and
push
pause
push
xor
mov
je
jbe
add
call
mov
ret
clc
sar
jo
add
add
or
cmp
cmp
lahf
dec
xchg
add
insb
pop
cmpsl
outsb
pusha
out
jo
cwtl
in
pushf
lock
lods
stc
mov
sbb
jle
add
addb
mov
and
inc
add
dec
dec
or
add
pusha
xchg
subb
leave
pushf
shll
mov
cmp
rolb
and
loopne
pop
add
lods
xlat
add
cs
lahf
sbb
xchg
and
dec
and
pop
iret
pusha
leave
shrl
insb
loope
jno
lock
pop
jl
xor
dec
and
es
jle
add
out
je
xor
cmp
adc
and
sub
std
lahf
add
mov
in
js
jl
sbb
test
mov
adc
iret
enter
rol
aam
fmuls
loopne
jb
dec
call
add
sub
hlt
cmp
mov
fidivrl
js
jp
jl
mov
push
mov
leave
fsubs
pop
in
dec
pop
mov
shlb
adc
xor
cmp
jo
or
clc
add
push
rorb
dec
lcall
stc
clc
int
add
push
pop
jno
cld
cmp
inc
inc
push
outsb
mov
jp
jle
popf
xchg
and
sub
push
pusha
into
cmpsb
cmp
add
or
xorl
test
add
es
nop
dec
shrl
or
lahf
add
push
sbb
addl
xor
ss
daa
dec
add
rcrl
stos
shlb
out
pop
and
cmp
mov
cmpsl
add
repnz
xor
out
xor
faddl
loope
cmp
pushf
shll
scas
ljmp
pop
add
sub
imul
js
iret
mov
jno
popa
jg
movsl
fsubrs
xor
pop
add
ljmp
ret
int
xchg
es
push
or
test
rclb
das
pop
add
js
xchg
cwtl
scas
adc
mov
or
or
add
fsub
mov
mov
sbb
sub
mov
in
dec
sti
orl
es
add
insl
dec
movb
sub
sub
mov
ret
iret
popf
aad
ficompl
jmp
lock
add
and
sub
push
push
clc
push
add
into
jns
jb
je
add
inc
movb
xor
and
int3
and
or
cmp
sbb
xor
cmp
imul
aas
xchg
pop
or
out
loope
cmp
leave
sub
popa
pop
inc
jmp
mov
and
sub
mul
adc
cmp
cmp
andb
sbb
xor
add
jnp
hlt
cmp
mov
mov
fmuls
add
movsl
cmpsb
call
add
jecxz
xchg
jp
add
mov
mov
sub
cmp
movsl
mov
jmp
ret
les
add
xchg
jo
lret
add
adc
mov
shlb
fcompl
mov
mov
stc
shlb
aas
add
cs
or
cmp
ficoms
fstps
jae
sub
add
loop,pn
inc
in
int3
dec
in
or
out
test
push
mov
nop
ljmp
in
call
shl
stc
jle
add
in
popf
cs
jne
stos
add
cltd
clc
and
and
sub
and
stc
cmp
sahf
add
pop
pop
xchg
pusha
mov
sub
add
and
adc
push
dec
jo
or
jp
dec
pop
or
cli
mov
mov
xchg
xor
movb
fidivl
or
nop
pusha
mov
ud2
xor
xor
add
ljmp
notb
pop
cmpsl
test
inc
jb
xchg
add
lds
in
push
shlb
dec
push
add
add
dec
out
dec
pop
mov
jae
test
fwait
ror
adc
int3
mov
shl
sbb
daa
or
mov
cmp
add
cmp
daa
add
inc
ljmp
push
jb,pt
je
push
aaa
add
jo
pop
add
xor
adc
adc
mov
jbe
push
sub
add
ss
mov
fcomp
ljmp
xor
in
pusha
sub
pushf
rcrb
lahf
and
les
push
lock
addl
and
sbb
addb
rolb
jl
loopne
dec
sbb
out
dec
iret
icebp
or
add
push
inc
mov
leave
loopne
sbb
orb
sub
jecxz
push
pop
xor
dec
das
inc
dec
add
scas
xchg
mov
add
mov
in
loop
lock
hlt
and
xor
cmp
cmpb
cmp
cmp
xor
dec
dec
loope
xchg
out
add
xlat
icebp
ljmp
jge
add
or
lea
xchg
aaa
lahf
dec
mov
lock
add
inc
sbb
mov
jo
jb
int3
inc
jbe
cwtl
js
hlt
pop
cmpb
xchg
cmpb
push
cmp
aam
jle
sbb
popa
fs
fcos
jecxz
rcr
xchg
and
or
xor
call
sbb
sub
clc
pop
mov
dec
jae
cs
loop
mov
lret
aad
out
cli
sti
xorl
dec
push
or
fs
and
sbb
leave
mov
sub
add
and
jb
mov
jbe
dec
add
rdmsr
sbb
popf
dec
sub
pop
enter
fs
js
jle
jne
rorb
jb
je
jbe
js
roll
call
xchg
mov
cmp
pop
adc
out
in
cld
roll
xchg
sub
xor
add
sarb
stc
inc
push
push
cs
adc
pop
nop
lock
hlt
pushf
xchg
push
pop
movsb
lahf
test
lods
test
mov
enter
leave
lock
sbb
add
cmp
test
roll
add
subb
imul
into
icebp
sarb
jle
mov
addb
inc
xor
data16
push
sti
fidivs
jb
sbb
jl
test
mov
jp
sti
jmp
js
add
jo
dec
sub
stos
inc
mov
cwtl
jecxz
out
sub
popa
pop
mov
pop
cmp
pop
pop
pop
jle
fldl
stos
add
lret
loop
add
xchg
push
addr16
xchg
movsl
mov
or
out
loopne
xor
dec
add
push
dec
arpl
shll
hlt
pop
xor
push
dec
xlat
sbbl
push
xchg
jae
jp
add
out
sti
add
or
in
sbb
in
sub
stos
pop
add
insb
sbb
repz
subb
jge
ds
mov
in
push
shlb
add
je
jbe
pusha
je
and
iret
sbb
rolb
daa
negb
out
add
jle
clc
mov
repnz
and
mov
adc
fldl
dec
aam
cmp
push
cmp
lahf
arpl
psubsw
jg
xchg
cmpsl
xchg
mov
int3
add
popa
mov
stc
xlat
xchg
frstor
sarb
add
cmpsb
loop
push
pop
fmull
add
subb
push
clc
push
or
cmp
outsb
les
in
add
xchg
or
mov
iret
in
add
ss
add
cmp
push
cmp
loopne
jle
add
pushf
pand
orb
pop
inc
dec
adc
loope
cmp
push
push
sbb
mov
adc
add
dec
in
pop
xchg
popa
push
fsubrs
jb
scas
into
push
test
cmp
ds
loopne
add
mov
or
ljmp
jmp
pop
nop
lods
in
call
add
mov
and
sbb
xor
popf
add
pop
mov
das
rclb
cmp
pop
inc
or
add
into
or
cld
xchg
xor
xor
cmp
pop
inc
or
add
loope
enter
jbe
leave
jp
bound
roll
aas
je
cmp
mov
add
bound
in
jge
pop
cmp
mov
ret
xor
add
lahf
in
add
sbb
inc
daa
lods
cli
jno
in
and
sbb
out
mov
cmp
mov
mov
xor
pushf
jnp
xchg
add
fcomps
fiadds
cmc
xchg
or
mov
cmp
ds
aas
out
add
add
and
add
lock
cmp
push
xchg
cwtl
clc
adc
aaa
add
fmull
aas
and
add
js
cld
test
cmp
daa
inc
loope
fs
inc
push
or
sbb
add
push
jl
cmp
and
or
dec
sub
loopne
pop
repnz
dec
roll
mov
ds
dec
xlat
add
push
testb
sub
mov
xor
xchg
xchg
fadd
pusha
mov
dec
xchg
fadds
add
sahf
pop
add
fiaddl
lcall
clc
pusha
nop
pop
cld
jb
pop
mov
rep
nop
and
into
jbe
adc
addb
and
mov
lock
cwtl
mov
loopne
dec
and
add
mov
xchg
push
cmp
dec
and
xor
mov
into
pushf
sahf
pop
add
adc
sub
cli
inc
add
lock
outsb
clc
jnp
add
pushf
jl
push
pop
mov
add
out
cli
jo
push
adc
add
setbe
cld
add
mov
orl
or
sbb
rorb
pop
xor
add
sarb
cld
aas
cltd
in
add
out
enter
aad
mov
add
push
js,pt
dec
push
add
in
add
xchg
testb
in
cmc
lock
xor
iret
insl
sub
or
pop
stos
cmp
inc
jg
shrb
mov
mov
jl
dec
fldcw
xchg
leave
cmpsb
mov
mov
adc
js
sub
add
push
sahf
loopne
and
adc
ljmp
je
add
repnz
jo
mov
and
leave
unpcklps
and
inc
loope
jmp
sub
insb
pop
mov
mov
add
popf
pop
mov
out
in
add
mov
orb
mov
sarb
test
fcomps
je
jbe
pop
lret
or
or
push
mov
sti
cmp
cmp
daa
push
xchg
push
data16
ret
lock
mov
loopnew
jnp
dec
pop
sbb
lahf
out
repz
std
mov
add
ror
mov
insb
add
aas
push
xor
scas
hlt
orb
enter
mov
xor
and
mov
inc
mov
scas
push
dec
mov
mov
xor
nop
pop
add
dec
cmpb
dec
add
pop
or
lods
adc
daa
sbbb
cli
add
pop
cmp
aas
insl
leave
js
or
lea
adc
aas
repnz
pop
in
cmp
cmp
sub
inc
dec
add
add
xorl
cmp
ds
ja
stos
xchg
jo
jle
stos
add
ret
xor
repnz
fsubs
scas
add
mov
inc
shlb
add
pop
push
fs
mov
inc
add
jmp
jmp
mov
shll
addl
mov
xor
clc
pop
push
pavgb
xchg
leave
stos
punpcklwd
mov
hlt
cld
or
cmp
adc
sub
dec
and
nop
lahf
insb
xchg
je
ret
add
adc
loop
in
cmp
jo
add
ficoml
pusha
insb
add
adc
or
repz
add
repnz
shlb
inc
je
rorb
data16
jle
andb
stc
cmpsb
inc
mov
push
fld
add
push
ljmp
shrb
add
push
popa
cli
test
xchg
rolb
in
xchg
add
mov
and
inc
add
push
and
outsl
xchg
les
popf
ret
inc
fcmove
subb
mov
mov
shll
stc
popf
fstpt
cmp
jb,pt
je
add
mov
jo
pop
add
jl
dec
test
add
fmull
nop
add
cmovle
mov
loopne
ret
push
jbe
xrelease
sbbb
mov
or
jb
push
dec
and
loop
add
data16
insl
in
pop
clc
cltd
shlb
pusha
into
xchg
inc
push
add
adc
pop
sub
mov
jecxz
repnz
fcomps
outsb
dec
cli
jo
pop
nop
jl
lock
xchg
add
divps
int3
faddp
jb
sub
cli
scas
push
pop
jbe
lea
daa
roll
stc
jmp
add
cld
in
pop
jle
test
add
cld
icebp
xchg
jp
add
ss
xor
andb
arpl
dec
jl
testb
lret
test
and
xchg
cmp
cmp
push
add
shl
loop
icebp
add
pop
ret
daa
filds
clc
loop
adc
pop
ret
fs
shrl
mov
nop
stc
xlat
and
in
lahf
test
pop
cmp
cmpsb
clc
stos
xchg
lcall
cmp
ja
pop
push
ds
in
rolb
xor
or
or
loopne
adc
jbe
in
test
cwtl
aas
pushl
imul
adc
add
daa
jl
aam
insb
adc
add
clc
xchg
lahf
bound
or
dec
cmp
subb
mov
out
inc
push
add
push
clc
sbb
std
add
sub
dec
cltd
xchg
pop
cmp
addl
push
lods
jnp
add
insb
shrb
fidivs
fs
add
dec
sub
js
push
lock
ret
bound
mov
cmp
push
push
push
jle
inc
icebp
pop
or
and
scas
arpl
movsb
adc
lods
cmp
cmp
add
mov
subb
pop
fcomip
jecxz
and
stc
repz
sar
insb
add
or
iret
aaa
dec
sahf
push
push
subb
pop
rorb
adcl
enter
jmp
cli
testl
icebp
les
sbb
push
cmp
push
cmp
arpl
xchg
imul
subb
mov
push
xor
idivb
jbe
daa
loopne
add
fdivrl
jb
pop
sbb
test
xor
mov
cmp
aaa
add
add
or
enter
add
stc
popf
push
add
movsl
repnz
add
in
lock
test
clc
mov
sahf
rorl
mov
xchg
dec
in
inc
jl
cmp
add
ret
jl
adc
adc
orb
fcomps
jle
pop
jmp
and
dec
cmp
cmp
sahf
sub
jo
mov
insb
add
add
push
test
rorb
test
ds
mov
mov
mov
ret
or
cmp
negl
xor
sbb
sub
dec
jno
sub
mov
mov
fmuls
dec
cmp
loope
ljmp
sar
fiaddl
xor
dec
lahf
je
add
ret
or
xchg
sbb
in
mov
scas
cld
add
push
mov
mov
mov
dec
repz
add
inc
andl
and
pop
xor
jnp
ja
add
xor
pusha
sub
fisubrs
clts
rclb
pop
add
je
dec
cmp
testb
clc
push
sub
cli
sti
push
movsb
ss
inc
push
cmp
jo
faddl
je
dec
aad
int3
loopne
sbb
push
sub
lock
loop
rorb
xor
sahf
mov
notl
xor
ret
imul
or
test
test
dec
jle
into
and
cs
scas
push
mov
inc
add
inc
imul
rcl
test
dec
add
xor
mov
jmp
out
jae
jle
fiaddl
stos
ret
mov
xchg
or
loope
pop
loopne
jp
pop
xchg
leave
sahf
repnz
pop
mov
aas
or
add
cmp
das
add
jo
aas
sub
cmp
dec
scas
stos
add
pop
add
cmp
cmp
jbe
xchg
fcompl
add
dec
inc
or
lock
push
xlat
add
xchg
test
mov
cmc
cld
sbb
ds
push
cmp
adc
adcb
lock
pop
add
adc
fsubrs
inc
cmp
jp
jl
dec
fmull
dec
add
mov
shlb
dec
sbb
ljmp
cmp
xchg
fldl
dec
in
lock
pushf
sahf
add
insb
adc
add
lcall
add
movl
dec
int3
adc
enter
jge
mov
leave
mov
jmp
mov
push
cmp
sbb
aas
adc
sub
incb
lahf
mov
roll
es
sarl
sub
popa
jo
aas
or
cwtl
cmpb
rcrl
lret
xor
mov
xchg
jbe
scas
add
add
add
dec
leave
cmpb
add
test
sbb
mulb
mov
outsb
push
or
ficompl
pushf
mov
movsl
xchg
add
inc
popf
dec
sbb
push
xorl
jb
je
jbe
add
pop
cmp
es
call
icebp
mov
lret
add
add
mov
ret
push
jle
add
pcmpgtd
mov
ss
fs
fldpi
add
int3
or
out
inc
add
dec
adc
sub
cld
call
sub
mov
dec
roll
cli
xor
fldl
xor
xor
jbe
or
sbb
stos
inc
out
add
leave
pop
and
mov
or
mov
shrb
jo
and
cwtl
in
xchg
xor
jb
sbb
les
clc
and
or
pushw
add
fadds
lock
sbb
cmp
loop
shrb
mov
push
es
and
xor
xor
call
xchg
sub
bound
popf
movsb
sbb
cmp
dec
cli
enter
sbb
aas
jno
jns
mov
pusha
and
cld
dec
fstpl
add
rol
sbb
test
add
and
hlt
add
push
cmp
je
dec
jo
add
repz
push
shl
jmp
cmp
dec
repnz
cmp
fdivs
dec
retw
add
mov
xchg
fsubrl
pushf
daa
sbbl
dec
pop
pop
mov
test
or
xchg
and
popf
mov
jo
jl
jle
mov
mov
inc
pop
xor
ja
add
loope
jmp
add
in
cmp
xchg
ds
pop
xorl
icebp
add
pop
shr
test
js
daa
rolb
mov
mov
into
mov
pop
or
mov
mov
orl
popa
mov
mov
mov
xchg
xchg
aad
loop
mov
pop
or
xchg
daa
push
push
pop
mov
xchg
aas
xor
jo
mov
add
imul
movsl
add
lock
insb
test
mov
aam
enter
rclb
add
or
aas
daa
mov
mov
pop
dec
je
add
jl
shlb
lock
add
jl
add
push
stc
std
mov
popa
or
add
push
loopne
in
sub
sub
push
aas
xor
inc
pop
mov
and
and
popa
xchg
gs
add
loopne
lcall
in
pop
fimuls
testl
pop
push
jbe
xorl
add
lods
aam
adc
mov
push
jbe
pop
enter
lock
lret
xchg
add
in
aam
ret
es
dec
and
notb
hlt
xchg
loop
sub
fs
dec
fidivs
loopne
xchg
mov
add
sbb
add
loopne
int3
cld
sarb
lret
mov
lock
or
loopne
sub
dec
adc
adc
rcrl
jecxz
repnz
xchg
pop
sub
sar
jns
jno
pop
stc
pop
cli
inc
dec
in
add
mov
call
adc
loopne
leave
pusha
fmuls
lahf
mov
enter
leave
add
push
dec
cmp
shr
stc
or
js
out
mov
xchg
jp
pop
push
ret
cmc
shl
loop
jbe
sub
fcompl
lret
sbb
stos
pop
sub
or
cmp
jl
xchg
add
stc
je
das
and
add
les
pop
fs
or
sbb
rolb
or
cld
push
jo
mov
test
sub
outsl
or
mov
sbb
cmp
mov
add
setp
insb
jnp
lock
jns
arpl
clc
xor
ds
fs
jmp
or
js
test
cmpb
enter
hlt
fs
cli
add
icebp
rcr
pop
xor
or
jl
add
dec
cwtl
and
hlt
add
test
stos
mov
mov
add
lahf
notb
xchg
test
and
or
add
je
test
das
cmpxchg
dec
xchg
ficomps
push
ror
aam
push
jle
nop
loopne
in
or
hlt
jbe
orb
add
or
dec
dec
jae
lock
sbb
hlt
pop
mov
add
xchg
sub
scas
mov
fadds
cmp
loopne
inc
mov
pop
clc
jne
in
mov
pusha
add
mov
test
add
add
adc
addb
loopne
dec
ficomps
mov
fstpl
sub
xor
xor
orl
test
add
loopne
push
call
mov
sbb
in
adc
inc
call
inc
cli
and
jge
mov
dec
push
push
pop
push
push
inc
fildll
inc
es
cmp
or
push
call
enter
loope
inc
sbb
movsb
loop
and
mov
lea
push
test
out
pop
rol
add
add
or
push
adc
adc
inc
int3
and
push
and
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
or
popf
add
lcall
jo
sub
test
jnp
push
decl
aaa
movb
ret
cmpsl
xlat
iret
mov
add
mov
aas
pop
xor
or
push
add
sbb
cli
jmp
add
jmp
sub
add
add
repz
cli
loopne
pop
pop
pop
pop
pop
bound
dec
adc
rorl
add
movsl
loope
add
movsb
pop
push
mov
addb
mov
jp
push
rol
ljmp
sub
loope
push
dec
xchg
rcrb
shr
inc
mov
add
dec
pushl
mov
or
add
pop
roll
or
sti
add
pop
add
cmp
sub
adcl
jns
add
aam
sbb
cmp
add
mov
or
adc
loop
pusha
or
rolb
push
add
mov
add
jne
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
shl
add
aas
jnp
pop
and
add
pop
mov
fisubs
push
pop
push
and
pop
orl
add
xor
xchg
call
adc
shl
and
add
cmp
add
adc
add
or
mov
dec
cmc
sub
ret
add
mov
push
add
fiadds
and
in
or
xor
add
cmp
add
adc
xor
inc
loope
xor
leave
add
inc
sub
xchg
cmp
pop
cwtl
je
sub
inc
out
lahf
xchg
adc
into
ret
sbb
hlt
aam
stos
add
dec
lods
outsb
sbb
push
mov
fwait
in
cwtl
lds
enter
adc
mov
out
xor
pop
pop
cmp
mov
pusha
out
cmp
loop
jb
xchg
add
dec
mov
add
cmp
int
and
enter
jns
icebp
mov
pop
loopne
stos
ljmp
push
inc
shrb
add
mov
sub
sarl
sbb
pop
add
xor
add
xchg
fists
jns
add
aad
push
sub
add
int
cmpb
mov
xchg
mov
mov
and
jmp
jbe
aad
inc
push
mov
daa
add
mov
sub
outsb
add
xor
std
add
mov
or
les
mov
and
inc
pop
fstpl
fiadds
sbb
aas
cmp
mov
add
shrb
pop
ret
and
iret
inc
mov
sub
mov
or
pop
in
cld
mov
lock
fwait
xlat
inc
sbb
stos
pusha
add
add
je
popa
int3
push
lock
dec
cmpl
mov
xor
pop
aad
add
mov
add
sbb
cmc
xchg
pusha
das
mov
push
push
cs
imul
cmovle
cli
pusha
test
mov
mov
xchg
fildl
or
lcall
mov
ljmp
add
fucomip
mov
jbe
pop
xor
cltd
push
cmp
sbb
sub
fs
push
mov
lock
hlt
add
scas
sbb
sub
add
and
gs
jae
inc
inc
xlat
push
sbb
push
in
imul
aaa
popf
jnp
mov
add
inc
push
jmp
or
xor
ret
sub
scas
mov
adc
mov
fnstenv
call
dec
in
pushf
rolb
pop
aam
inc
addr16
fs
dec
or
rcr
outsb
ret
mov
mov
stos
add
rorb
add
rcrb
and
enter
insl
test
cmp
push
mov
loopne
in
add
lods
lds
and
push
add
adc
mov
in
sbb
cmpsl
jbe
jmp
adc
into
rolb
test
aam
add
addb
jbe
push
stos
insb
pop
dec
aam
jl
ja
or
jle
cmpsl
pop
xchg
daa
fdivrl
add
loop
test
add
insl
ret
push
lods
js
repz
testl
mov
fwait
test
sub
fs
add
loopne
add
in
mov
push
xor
xor
jge
cld
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
dec
shll
call
pop
and
leave
loopne
mov
sub
cmc
rep
pop
jmp
dec
shl
mov
xor
sbb
push
add
inc
and
adc
add
test
imulb
xor
leave
shr
je
adc
add
pop
pop
mov
xchg
ret
jns
pop
mov
jl
cmp
push
cmp
orps
je
popa
repz
adc
mov
gs
outsl
lcall
js
icebp
jp
jae
push
inc
jne
mov
popa
addr16
decl
lock
emms
pusha
jo
imul
dec
lock
inc
push
outsb
and
sahf
jnp
cwtl
in
gs
jo
outsl
jne
pop
aaa
inc
jns
mov
fisubs
pop
shrl
bound
dec
xchg
mov
cmp
sti
imul
imull
arpl
int3
and
bound
fidivl
cmpsl
push
outsl
fs
mov
pop
and
rol
xor
or
sub
std
xor
inc
idiv
aad
lcall
mov
cmpsb
jge
arpl
dec
outsl
fildll
mov
addr16
movsb
dec
xchg
filds
ljmp
arpl
add
imul
xor
data16
insb
jnp
movsl
test
mov
jbe
pop
cmp
outsl
adc
icebp
inc
ret
sbb
hlt
jp
imulb
xchg
or
decl
pop
jecxz
push
adc
int
icebp
repnz
stos
ljmp
jbe
in
andl
rcr
cmp
in
fcomps
add
insb
lcall
mov
inc
lods
and
push
or
scas
sbb
call
or
xchg
aaa
mov
cmc
and
mov
mov
jge
das
or
xchg
popf
iret
push
push
stc
sbb
test
mov
call
xlat
mov
orb
mov
cmp
pop
xchg
sti
clc
dec
call
test
push
add
adc
ja
fwait
sub
sahf
nop
cmp
jnp
push
pusha
sub
sub
adc
pop
iret
aas
push
xchg
cmp
lods
lret
pop
jl
insb
and
xchg
sbb
jmp
inc
jb
inc
int
in
xor
add
imul
int3
or
pop
sbb
imul
mov
imul
pop
inc
and
fidivrl
sbb
mov
mov
scas
hlt
xor
and
lcall
pop
les
mov
pop
adc
jp
movsl
cmpsl
pop
stc
dec
sbb
jg
cmp
test
push
pop
push
xchg
jo
mov
shll
and
jb
sbb
popa
xor
lahf
inc
ds
adc
jecxz
roll
addr16
lret
aaa
int
push
sub
xor
add
xchg
je
xchg
gs
adc
icebp
push
pop
lcall
mov
sbb
add
andl
jns
cmpsb
popf
sub
dec
int
ljmp
dec
jmp
test
ds
movsb
mov
cli
push
dec
cmp
add
sbb
add
jmp
push
adcl
jnp
and
scas
push
stos
mov
lods
pop
mov
js
test
adc
sbb
in
jbe
lods
test
jo
jp
xor
ljmp
pop
rclb
lcall
xchg
mov
add
pop
aad
cs
movl
adc
mov
scas
jmp
or
ss
mov
insb
test
lret
and
out
popa
fistps
sub
ja
sahf
xchg
push
fcoml
cmc
sub
lahf
data16
mov
mov
fildl
sar
jbe
pop
xor
xorb
popa
xchg
adc
sbb
in
movl
fwait
cmp
dec
mov
js
mov
scas
shrl
fistps
adcl
shrb
loopne
pushl
mov
insb
sti
sub
shrb
outsl
push
addl
inc
jo
add
xchg
nop
mov
sub
inc
pushf
push
push
or
ds
pop
sbb
pusha
pop
xchg
cmc
xchg
adcb
pop
or
dec
cmp
or
outsb
jge
addb
gs
push
mov
push
pop
mov
cld
js
cld
pop
mov
popf
xor
and
cmpsl
fidivl
add
add
push
push
loope
rol
sbb
pop
and
test
enter
mov
bound
ret
stos
inc
mov
mov
aam
mov
shlb
sti
add
arpl
cmp
aad
xlat
movsb
push
mov
jbe
lret
popf
sub
rcll
stos
pop
dec
xor
pop
mov
adc
adc
mov
jl
xchg
aad
and
lcall
inc
out
into
into
inc
flds
pop
pop
pop
fldenv
add
cld
lret
fimuls
pop
inc
xchg
mov
jg
sub
mov
xchg
add
hlt
add
dec
sarb
fwait
xor
xor
dec
xor
sbb
sub
movsl
and
cmp
loopne
push
repz
stos
fnsave
in
pop
jo
call
std
xor
add
bound
int3
dec
and
inc
stos
mov
lahf
ja
jmp
sbb
int3
or
push
fisubrl
xorb
shl
daa
lock
jecxz
lods
insl
push
aad
aad
or
bound
cmc
mov
push
jae
jne
add
ljmp
xor
pop
mov
sub
insb
in
dec
xor
leave
addb
in
mov
push
les
adc
xchg
out
gs
push
mov
push
subb
add
jg
adc
xchg
loop,pn
dec
sbb
rcrl
je
outsb
icebp
stos
xor
das
es
mov
push
add
imul
sbb
xchg
dec
test
mov
jno
mov
outsb
cltd
sbb
push
out
stc
cmp
mov
dec
fwait
sbb
ret
cmpsl
adc
repnz
push
cs
push
in
push
movsl
outsl
adc
fcomi
pushf
mov
je
mov
outsb
sub
add
push
adc
std
icebp
fwait
pushf
push
xchg
cmc
ja
sbb
adc
push
sbb
mov
lods
nop
or
dec
insb
xor
cmpb
in
mov
xor
fiaddl
arpl
lock
pop
into
cld
adc
mov
jnp
push
addr16
pop
pop
sbb
ja
jbe
xorl
and
gs
lret
rol
pop
xor
xorb
mov
mov
add
idivb
sti
mov
jae
cmp
ja
sbb
dec
in
xchg
or
mov
jl
out
dec
dec
mov
lods
adc
mov
mov
jmp
sub
sbb
cli
out
pop
rcrl
cs
xchg
aaa
cltd
arpl
jne
arpl
xor
mov
and
or
loope
out
out
setge
pop
je
xchg
add
and
mov
stc
mov
and
call
sbb
rcrb
sub
repz
push
lds
mov
inc
add
popa
jmp
cltd
pop
add
pop
test
mov
sub
and
repnz
sub
inc
mov
sbb
testb
pop
pop
cmp
adc
jno
mov
rclb
inc
cli
fwait
adc
lea
mov
sbb
xlat
mov
jno
test
add
mov
push
jl
inc
pushf
jge
dec
add
mov
adc
in
xchg
pop
add
loop
xchg
rcrb
es
ds
data16
mov
pop
shll
cli
fdivrl
mov
cmp
lahf
fsts
or
add
lods
sbb
pop
movsl
mov
sub
pop
add
repz
shlb
jmp
jb
push
hlt
cmp
fidivrl
xor
mov
mov
mov
test
cmp
aaa
lahf
push
repnz
mov
or
out
int
imul
dec
lods
in
dec
fists
pusha
inc
les
adc
jb
adc
je
sub
fisttpll
mov
push
cmp
pushf
movsl
add
addl
rclb
pop
test
in
bound
ret
mov
in
mov
out
sbb
sbb
sub
dec
adc
repz
cmp
xchg
cmp
pop
mov
lock
sti
jp
lock
or
pop
dec
sub
mov
jb
xor
inc
xchg
mov
pop
fs
xchg
cld
pinsrw
sub
push
stc
insb
cmp
lds
imul
jne
mov
and
inc
arpl
popl
leave
push
aas
cltd
test
and
sub
cmp
mov
jl
outsl
mov
imull
pop
test
pop
cli
in
out
fisubrl
call
pop
pop
xchg
xchg
in
ret
stos
adc
cli
xchg
add
in
sbb
or
es
mov
inc
cltd
adc
mov
sbb
mov
dec
insl
cmp
push
nop
jbe
fwait
jg
lcall
int
andb
insb
xor
xchg
sti
rcr
inc
jp
xor
pop
imul
ret
sbb
or
movsb
sbb
movsl
mov
imul
mov
and
test
cld
daa
scas
in
cmp
andb
test
mov
or
stos
jno
loopne,pn
outsb
mov
xor
cmp
shrb
cmp
outsb
fs
int3
addr16
or
ds
mov
and
in
push
jbe
jo
aad
jge
sub
sbbb
scas
xchg
fwait
ror
push
fisttpll
test
jl
mov
shlb
cs
xchg
je
add
enter
pop
sbb
decl
sub
add
mov
movsb
dec
mov
and
movsb
mov
push
or
jmp
pop
cmpsl
lds
push
ja
pop
nop
and
int3
jno
out
outsb
mov
mov
or
mov
jl
dec
int3
push
dec
mov
popa
sub
int
enter
and
dec
xchg
adc
jg
add
je
in
fsts
mov
mov
rorl
mov
movsl
mov
test
movsb
or
mov
xor
popa
rol
push
dec
lea
mov
popf
jbe
sub
and
mov
dec
int
ss
push
fildll
cmpsb
xor
fdivs
xlat
xor
sub
jb
popa
mov
nop
addl
nop
xor
mov
js
sub
int
sub
fnstcw
cmc
push
out
push
mov
add
mov
mov
pop
cwtl
repnz
je
ret
mov
cltd
arpl
sbb
inc
cli
cwtl
mov
cmp
shlb
je
outsl
add
dec
aam
jp
mov
out
jmp
xchg
je
sub
out
mov
in
lret
sbb
and
xlat
mov
sub
lahf
add
imul
xorb
cld
cmc
push
inc
xchg
or
or
daa
mov
cmp
xchg
dec
out
fists
jne
call
clc
arpl
sbb
movsl
test
pop
adc
mov
int3
insl
repz
int
cmpsl
fistps
dec
lea
sbb
pop
mov
cmc
int
call
vmovups
ficoms
mov
data16
xchg
xchg
jle
jb
fsubrl
fisttps
and
popf
arpl
add
dec
nop
pop
ss
inc
cltd
sub
pop
fisttps
mov
mov
mov
lods
es
cmp
jne
mov
in
test
mov
fs
sbb
xor
pop
fstpt
cmp
test
loope
into
inc
xor
out
movsl
xchg
cwtl
mov
inc
cwtl
out
add
test
mov
lcall
mov
sub
rclb
stos
or
add
mov
sub
sub
sub
pop
mov
enter
lcall
insb
or
push
and
xchg
push
sub
mov
lcall
xchg
mov
or
cmpb
icebp
lods
cmpl
mov
add
scas
jp
addb
sub
mov
sbb
xchg
adc
and
test
push
fcomps
cmp
fmul
pop
rorb
ficomps
inc
mov
xor
ja
sub
movsl
lcall
call
sbb
fwait
dec
loop
int3
adc
je
jmp
pop
mov
push
pop
and
xchg
mov
cmp
aam
int3
mov
out
push
pusha
idiv
lret
int
and
xor
xor
and
inc
xor
repnz
ljmp
inc
jb
sub
jnp
or
insl
pusha
icebp
fnstsw
add
inc
sti
fdivs
lret
outsb
cld
push
mov
dec
aas
pop
ss
push
pop
repnz
mov
imul
rcr
aam
or
out
pop
stos
aaa
pop
aad
sub
sub
and
int
call
add
loop
and
push
cld
out
or
and
mov
mov
sti
gs
mov
into
pushf
and
imul
jns
mov
mov
lcall
jge
and
inc
mov
push
insb
leave
jmp
das
adc
rorl
addr16
xlat
jno
sbb
push
sub
pop
repz
leave
out
cltd
mov
dec
outsl
cld
cltd
sbb
cmpsl
mov
ljmp
jmp
mov
inc
js
push
xchg
inc
sub
movsl
pop
mov
aaa
pop
inc
dec
dec
sbb
mov
in
xor
mov
mov
in
pop
push
jae
lock
mov
fwait
insl
decb
cmp
adc
cltd
shr
cli
inc
fsubl
ficoms
nop
mov
imul
sub
cmp
ds
movsb
jns
push
and
ja
jbe
xor
push
push
popa
ljmp
fidivrl
add
dec
addl
xchg
sahf
into
sbb
mov
test
mov
cltd
sub
mov
jg
and
and
lcall
call
inc
xchg
inc
add
iret
pop
in
jae
test
sbb
mov
imul
xchg
mov
inc
mov
repz
or
jae
inc
mov
popf
xchg
or
popa
std
fisttpl
ss
outsb
sbb
xchg
sub
sub
jnp
sbb
add
sub
lds
cltd
dec
iret
imul
xchg
rorl
sub
inc
jnp
dec
insl
mov
iret
negb
rorb
repz
pop
in
jmp
ror
mov
out
xchg
xor
ret
mov
mov
ss
jnp
fwait
dec
cmp
sub
jge
scas
xchg
push
add
and
je
into
xlat
adc
in
lds
cmp
jo
cmc
lods
sbb
dec
subl
lods
ret
inc
dec
enter
push
test
cli
cmpsl
adc
xor
or
adc
loop
nop
dec
in
gs
inc
or
sbb
out
pop
inc
roll
enter
les
in
mov
pushf
xchg
cwtl
or
jle
shr
roll
sarb
in
js
dec
mov
add
xchg
cmp
shlb
lock
aas
mov
pop
mov
loopne
call
inc
cld
lods
insb
and
and
mov
mov
lods
int3
add
pop
push
pop
mov
lea
idiv
mov
xchg
and
xor
nop
aas
cmp
push
dec
sub
inc
arpl
inc
or
or
inc
lea
push
lods
inc
xchg
xchg
add
pop
cmpsl
add
cmpsl
cmp
sbb
in
sub
lahf
add
push
xor
mov
lcall
fwait
pusha
pusha
mov
jns
inc
add
sti
xchg
fsubrs
sub
mov
jnp
xchg
bound
cmp
xlat
repnz
das
and
mov
fsubs
mov
shl
cmp
xor
popa
add
addr16
outsb
adc
push
dec
repz
nop
jp
inc
or
mov
xorb
pop
fstl
dec
dec
cltd
mov
adc
ds
rorb
and
jmp
or
or
pop
sbb
push
cmpsl
lret
inc
mov
add
inc
push
fmulp
mov
mov
lods
adc
or
and
and
cli
xchg
cmp
adc
insb
dec
ret
cmp
mov
adc
mov
xor
add
jne
or
mov
sbb
jg
popa
adc
adc
into
ret
inc
pusha
jns
push
mov
sbb
insl
rcrl
sub
mov
lret
icebp
adc
lds
test
mov
mov
sbb
xor
and
insl
mov
addr16
pop
divb
sub
xchg
xor
mov
lahf
pop
or
or
lret
add
push
dec
adc
movsl
dec
addr16
int
lods
mov
repz
aaa
lea
dec
shll
jno
adc
icebp
ss
lds
pop
movsb
add
addl
cltd
mov
inc
mov
xchg
push
push
or
outsb
adc
sub
sub
push
jns
out
orl
dec
fistl
in
pop
mov
xchg
xchg
jns
cmpl
rcrb
je
dec
test
xchg
pop
or
mov
push
ja
mov
add
daa
fildl
mov
pop
jge
sbb
jle
aam
in
jl
mov
fwait
dec
push
push
mov
inc
xor
ds
or
mov
lret
ret
stc
push
hlt
adc
scas
sub
fwait
xchg
subb
ljmp
scas
rcrl
sub
inc
pop
sbb
mov
in
aaa
sbb
ja
test
in
push
scas
push
idivl
icebp
xchg
ret
sbb
or
lahf
shlb
push
jle
mov
mov
shlb
das
xor
negl
insl
xlat
dec
scas
dec
mov
xor
rorl
dec
pop
xchg
in
lcall
stos
sub
sub
loope
and
fnstsw
int3
mov
roll
jl
or
jb
dec
fcoms
out
mov
xchg
call
add
cmp
push
mov
or
push
xor
cmp
ljmp
push
sbb
mov
sub
cmpsl
in
cmpsl
pop
jg
xchg
xor
pop
mov
pop
jl
stos
fwait
dec
mov
mov
test
stc
outsl
mov
sti
and
scas
adc
loop
pushf
aam
xlat
push
push
jnp
or
push
nop
adc
add
sbb
sub
sub
or
scas
push
jne
or
mov
mov
mov
sbb
lods
mov
mov
inc
daa
and
sub
mov
inc
sti
in
aam
dec
add
das
adc
pop
jecxz
xor
mov
pop
and
inc
jl
inc
test
icebp
adcl
mov
add
int
pop
loopne
dec
jne
mov
inc
into
pop
xchg
or
fwait
xchg
push
fiaddl
int3
adc
iret
mov
lahf
mov
add
pusha
mov
mov
sbb
dec
inc
push
dec
lds
aam
add
push
sbb
or
sub
nop
into
pushf
inc
xchg
and
lret
fdivs
or
dec
mov
shrl
data16
ds
pushf
sub
data16
pop
push
rorl
cmpl
mov
scas
pop
pusha
scas
popl
jmp
fldl
mov
jnp
jno
fcoms
pop
inc
in
mov
aas
mov
call
sbbl
or
cli
sbb
or
adc
mov
dec
inc
int
mov
jge
loop
mov
in
nop
int3
ja
and
mov
fldcw
cmp
test
sbb
mov
mov
fwait
mov
mov
mov
mov
mov
js
inc
cli
jno
dec
or
add
mov
push
sbb
jmp
lahf
cmp
adc
pop
inc
loope
jae
mov
or
jb
inc
repnz
negl
scas
mov
loopne
jns
xchg
add
jae
je
mov
sub
inc
jmp
add
dec
pop
ljmp
repz
lock
push
jecxz
loop
xchg
pushf
xorb
sbb
bound
add
cmp
nop
push
xchg
mov
sbb
inc
pop
cmp
lret
mov
ds
call
dec
ffreep
dec
mov
adc
and
in
out
mov
xchg
mov
inc
gs
fwait
xchg
and
and
sbb
dec
dec
adc
lds
cmpsb
jecxz
or
mov
shlb
dec
dec
inc
cld
add
jecxz
ljmp
add
je
mov
scas
mov
rorl
inc
leave
in
mov
jo
sub
cltd
xor
gs
stos
xchg
sbb
test
out
xor
lds
mov
fs
nop
pop
sub
or
push
mov
xor
mov
or
leave
sub
jbe
push
hlt
or
mov
add
insl
xchg
rcl
fxtract
and
loop
fisubl
inc
shl
out
mov
sbb
fldenv
fs
mov
cmp
mov
popl
jns
dec
loope
adc
loop
mov
ret
xchg
mov
dec
or
or
jns
fcmovbe
ss
jb
and
pop
fcmovb
and
dec
jecxz
popa
das
lds
push
sbb
shrb
outsb
ret
dec
push
test
nop
xor
cwtl
push
jnp
push
jnp
jl
xchg
leave
in
scas
jg
sub
mov
and
sub
adc
jg
scas
icebp
or
pop
jnp
lret
les
mov
out
mov
xchg
fidivrs
sbb
repz
sti
es
mov
and
out
sbbb
repz
sbb
xchg
addr16
inc
pop
jg
enter
clc
sub
scas
int
loopne
scas
aam
xchg
cltd
cmc
cli
or
push
xchg
pop
mov
mov
popf
fwait
pop
mov
in
out
roll
mov
pop
fdivrl
aad
push
insb
inc
ret
sahf
add
mov
jg
shll
aad
sub
outsb
lret
xor
push
inc
sub
mov
xchg
jmp
loope
cmp
movsl
inc
jg
jp
mov
add
jb
loopne
iret
outsl
je
js
push
sarb
imul
loopne
out
xor
pusha
fstp
lret
pop
sub
mov
dec
cmp
je
fstl
outsb
mov
and
push
pop
add
movsb
stc
cwtl
push
xchg
mov
sti
iret
int3
or
jle
nop
mov
stos
daa
fistps
stos
sbb
js
ss
inc
fldenv
push
outsb
jl
aas
jne
mov
inc
outsb
in
dec
cmp
add
or
pop
cmp
jl
adc
inc
shrb
xor
mov
adc
out
mov
cli
xchg
stos
cmpsb
adc
sbb
out
inc
xchg
pop
loop
inc
mov
insb
or
pop
adc
adc
push
jnp
or
cmp
mov
hlt
xchg
jne
or
adc
lahf
mov
jno
imul
mov
int
xor
test
std
push
jg
mov
jp
nop
mov
and
xlat
aas
adc
jmp
lret
pop
bnd
scas
sub
outsb
jmp
js
cmp
aas
mov
stos
push
adc
xchg
inc
and
mov
daa
clc
push
rcrb
xchg
jp
imul
mov
not
jnp
xchg
mov
out
pushf
mov
xchg
xor
sub
pop
stos
fisubrl
sub
sahf
scas
in
out
shr
jmp
das
push
inc
sub
repnz
in
aas
ds
lea
lea
loope
push
lds
or
mov
cmp
js
loop
mov
xlat
mov
icebp
mov
pop
outsb
icebp
in
fildll
ficoml
add
xchg
inc
or
push
or
popw
in
xor
push
jmp
cld
or
pop
nop
test
xor
ror
add
mov
add
lcall
push
jb
mov
push
mov
adc
dec
push
mov
jne
and
dec
add
xchg
lds
stos
ljmp
inc
rcll
stos
inc
and
leave
addr16
add
xchg
and
rorl
mov
push
fisubs
cmp
jno
ficoml
pop
outsb
ret
insb
aam
into
adc
bound
mov
hlt
push
movsl
shr
mov
xchg
xor
enter
xor
mov
in
in
add
adc
std
or
outsb
xor
mov
sbb
shll
sub
sahf
add
pop
add
mov
add
sub
xor
jb
rcrl
jmp
adc
out
sbb
sbb
sahf
aas
pop
jge
push
enter
xchg
xor
out
dec
adc
sbb
leave
fists
or
js
adc
pop
or
cs
pop
int3
cmpsl
add
mov
fisubl
aaa
xor
pop
cli
add
or
test
stos
aam
add
iret
negl
shlb
xchg
pop
repz
mov
mov
or
test
cmp
sahf
mov
inc
xchg
shll
jns
dec
aas
testl
dec
push
mov
xor
add
sahf
jp
sub
push
stos
ds
int
jl
xchg
popf
adc
in
ret
es
mov
fdivp
cmp
outsl
hlt
push
lcall
push
js
leave
fwait
push
and
cli
in
mov
ja
call
lcall
push
loope
adc
pushf
inc
cmp
in
sub
and
data16
sbbl
sti
icebp
mov
push
push
mov
roll
push
leave
jl
shlb
out
jmp
movsl
cmpsl
aas
or
ja
pop
popa
mov
into
repnz
dec
pop
lahf
fdivp
inc
and
scas
popf
dec
shlb
push
lods
je
xor
stos
mov
jo
push
sub
fs
push
shr
repz
and
rcrb
cltd
test
inc
sub
pop
add
xor
adc
mov
and
mov
call
js
cmc
lods
sbb
inc
cltd
ljmp
dec
adc
xchg
bnd
stc
xchg
xchg
jne
rclb
cmp
sub
std
out
push
movsl
stc
mov
xor
adc
stos
or
pop
push
insb
pop
repnz
mov
fisttpll
push
leave
addr16
cltd
lods
jns
xchg
jg
push
cmp
push
mov
aad
xchg
push
fdivp
lods
mov
push
dec
mov
sahf
imull
out
sbb
lods
pop
das
and
bound
mov
mov
mov
jl
sbb
add
pand
lock
push
pop
jle
pop
add
mov
test
leave
sti
push
jecxz
ret
xor
add
jecxz
mov
int
add
sbb
lods
std
push
inc
cmp
push
imul
jmp
cli
dec
aam
arpl
mov
jns
mul
ds
adc
sbb
push
scas
dec
repz
push
sub
dec
jmp
mov
mov
ja
sbb
mov
pop
fistpll
inc
imull
mov
pop
pop
sbbl
fwait
lods
pop
and
or
test
mov
pop
fisttpll
inc
stos
and
cmc
mov
mov
mov
sahf
fdivs
dec
cltd
jp
add
jl
int
fcmove
out
mov
xchg
push
les
or
shl
lcall
push
imul
dec
adc
sub
mov
mov
aas
jmp
lock
xchg
insl
lret
lods
xorl
push
adc
mov
imul
inc
pusha
xchg
jae,pt
scas
shlb
xorl
test
pushfw
in
jge
fistpl
add
mov
and
add
xchg
jp
mov
cmp
or
mov
add
lret
jne
scas
inc
dec
mov
mov
test
decl
in
push
mov
cmp
in
icebp
sub
pop
pop
xlat
pop
jmp
pop
inc
js
add
xor
lcall
jge
js
adc
adc
loopne
hlt
sub
fsubs
push
sub
adc
mov
inc
bound
fdivrs
imul
jle
sub
xor
in
sbb
out
outsb
out
add
imul
xchg
int3
imul
ja
insb
aad
lahf
add
mov
roll
pop
mov
xchg
pop
sub
xor
dec
outsb
cmp
rcll
arpl
mov
popf
mov
jb
loope
pop
mov
and
mov
scas
adc
mov
addr16
loopne
jp
cmpsl
shl
jns
xor
xchg
in
lds
aad
loope
cmp
jne
hlt
sbb
pop
dec
ret
out
in
sti
push
shl
push
fcmove
xlat
repz
push
movsb
icebp
popa
push
push
out
mov
sub
xchg
xchg
sub
sub
mov
repz
stos
fwait
dec
test
push
lods
stos
sbb
push
or
shll
mov
xchg
push
out
cmp
arpl
fdiv
sub
rcl
sub
pop
lret
loope
and
mov
dec
add
xchg
pop
xchg
or
cmc
inc
and
inc
cmp
std
cmpsl
loope
scas
add
shl
or
dec
xchg
fwait
add
push
sbb
add
xor
shl
cmp
stc
popf
push
jns
repnz
das
das
adc
out
pop
jmp
sbb
jne
mov
xor
cmp
test
popf
in
addr16
mov
pop
fnstcw
push
sbbl
js
xor
aas
or
or
faddl
out
sub
out
jbe
mov
add
sbb
test
jp
roll
adc
adc
xchg
mov
in
ror
adcl
inc
cmp
pop
pusha
popf
mov
imulb
adc
repz
and
fnstcw
cmpl
rorb
adc
adc
xchg
lock
js
ja
loop
in
add
in
aas
and
test
and
sti
ljmp
jge
fnsave
push
jge
arpl
mov
lcall
lcall
jne
cmp
sbb
icebp
adc
mov
scas
push
sbb
adcb
xchg
cmp
mov
and
adc
or
dec
ss
lret
or
clc
test
add
jns
sarb
fldpi
cmp
cmc
xchg
aam
xor
push
pop
out
adc
xchg
out
mov
andl
add
jns
sbb
dec
pop
lock
jne
inc
xor
xchg
test
mov
xlat
stos
mov
lds
cli
pop
test
lods
xor
call
mov
jp
xor
dec
mov
mov
cmp
sbb
xor
shr
push
adc
xlat
pop
or
mov
fimuls
add
jns
jae
fidivrs
nop
fldl
das
sbbb
or
std
aaa
stos
xor
mov
pop
add
jb
push
dec
push
sbb
add
fsts
stos
mov
pop
test
sub
lea
push
out
das
push
and
jle
push
xchg
inc
fisttpll
ficoms
lods
sbb
sub
mov
loop
inc
push
jae
mov
test
aam
and
push
aad
dec
cmp
loop
adc
leave
xor
loop
ja
sub
les
bound
out
adc
cmpsl
in
cmp
xchg
nop
xchg
stos
cmpsl
icebp
xor
sub
push
adc
dec
out
enter
cmp
pop
dec
into
sub
sub
outsl
pop
pop
ret
data16
out
cmp
roll
popf
in
imul
jne
push
push
xor
dec
lock
sti
mov
jmp
jle
adc
jno
push
decb
test
sub
ljmp
push
jnp
cmp
stc
cmc
mov
jns
adc
cmp
pop
out
outsl
mov
mov
mov
test
loop
push
jl
pop
neg
leave
mov
and
cltd
push
leave
ljmp
rcrl
jmp
dec
sahf
movsb
xchg
negb
mov
push
adc
mov
nopl
int3
jmp
movsl
jmp
mov
sahf
mov
jle
sbb
lea
call
inc
mov
mov
wrmsr
gs
insb
cmp
pop
mov
xor
inc
mov
scas
in
roll
in
xor
lret
imull
aam
push
dec
dec
cs
cld
cmp
call
inc
jae
popa
loop
test
cli
insl
cmp
mov
xchg
push
xchg
mov
fidivrs
mov
push
fwait
pop
ja
jl
fs
outsl
xor
imul
pushf
pop
addb
and
ss
ret
aam
mov
dec
cltd
test
int
cmp
int3
jnp
dec
and
dec
xchg
aam
jb
leave
das
orl
xor
or
adc
cmpsl
daa
mov
pop
shrl
mov
sub
je
sbb
xor
jns
push
std
jbe
outsl
and
xor
fdivl
popf
add
fwait
and
mov
or
fists
sub
mov
outsl
or
xor
lods
fs
jnp
push
jmp
xlat
mov
mov
in
lret
xor
pop
mov
fldcw
pop
cmp
jl
pop
mov
iret
xlat
aam
cmpsb
push
test
xchg
out
addb
div
xlat
popl
push
jp
xchg
dec
ret
and
fwait
adc
cmpsl
ret
dec
int3
loope
lea
mov
mov
pop
dec
xchg
jns
inc
dec
js
xchg
add
mov
push
dec
data16
sub
sbb
icebp
aas
stos
lods
out
xor
mov
xchg
xchg
xchg
sar
ficoms
xor
loopne
xchg
stos
jl
xor
in
cmc
mov
daa
mov
mov
cmpsl
daa
add
pop
cltd
mov
idiv
jmp
pop
lahf
mov
add
pop
jae
rcrb
stc
dec
push
cltd
ds
insb
orl
mov
pop
inc
cmc
cmp
push
jo
iret
mov
into
push
cmp
test
push
fidivs
dec
fstl
push
xor
sub
adc
add
repz
fwait
mov
adc
or
push
sub
nop
fcoml
fidivs
nop
nopl
out
mov
sbb
loope
in
cmp
ss
insl
pop
cmp
icebp
psllq
xchg
mov
or
sbb
and
or
mov
cli
mov
mov
popa
push
or
movsl
in
mov
and
mov
or
push
mov
fsub
jae
xlat
xchg
push
nop
mov
scas
sub
mov
test
int3
dec
adc
insl
adcl
jae
je
xchg
jns
into
rorb
fists
test
and
lock
jne
xor
arpl
cmp
flds
roll
lcall
notl
sti
stos
pop
xchg
movsl
jno
sub
sbb
ret
bound
cmp
movsl
scas
push
or
mov
mov
gs
jecxz
mov
or
fucom
jo
fs
jle
sbb
lcall
and
rcll
gs
insl
sti
jae
subb
daa
adc
mov
rolb
or
je
mov
mov
sub
adc
cmp
sbb
test
lock
sub
in
add
subl
mov
xchg
cmp
add
imul
roll
cmp
jmp
loop
outsb
out
popa
fadd
insb
fbld
repz
mov
rorb
push
addr16
mov
mov
mov
and
sub
sarb
call
mov
ljmp
int3
xchg
and
push
dec
jmp
mov
in
jmp
fcmovnu
lahf
xchg
push
pushf
loope
sbb
in
xchg
push
and
and
pop
cmp
or
inc
pop
mov
pop
movsl
cmpsb
js
shrl
js
jae
add
lods
cmp
fucomip
sbb
cmpl
adc
in
or
add
lock
outsb
aaa
test
and
lcall
mov
ja
and
shll
popa
push
jmp
xchg
inc
movsl
push
push
das
pop
stos
dec
sahf
aaa
mov
dec
push
push
out
pusha
sub
add
loope
adc
sbb
or
jae
push
xchg
jb
jge
add
add
das
push
arpl
pop
cmpsb
or
push
movsl
fistps
add
xchg
dec
cmp
sbb
fwait
call
cmp
pop
cwtl
pusha
mov
jg
dec
xchg
cltd
fistpl
dec
push
cwtl
push
cld
call
fs
mov
pop
cmpl
sub
fists
lret
pushf
xchg
stos
add
test
push
lock
fwait
scas
cmp
push
incb
decb
xor
mov
mov
and
dec
stos
mov
stos
into
push
in
dec
fisttpl
loope
or
cmp
pop
daa
leave
out
scas
mov
xchg
stos
xchg
pop
mov
and
hlt
fsubrl
mov
lock
imul
nop
mov
sbb
or
mov
push
or
push
insl
aam
push
fistps
clc
push
iret
jg
pop
lods
inc
jl
int
sub
jb
scas
mov
ss
imul
mov
inc
mov
pop
and
aad
adc
arpl
dec
sub
sub
mov
in
loope
sbb
loopne
jnp
int
lods
lods
movsb
or
out
popf
ja
insb
in
add
inc
mov
sub
add
fs
mov
das
leave
scas
lock
enter
out
xchg
push
push
stos
aam
push
mov
dec
add
ss
add
jge
xchg
mov
test
insb
mov
cmp
mov
mov
loope
jnp
cmp
push
push
jb
sub
lahf
jns
stc
les
mov
insb
scas
dec
data16
out
cmp
or
cmp
in
imul
or
add
popa
inc
mov
sbb
adc
cld
ja
pop
jmp
and
xor
sub
int
add
xchg
cmp
sbb
movsb
popf
adc
sbb
mov
cli
add
stc
push
dec
bound
pop
int3
dec
out
aam
test
shrb
sbbb
out
cld
les
push
js
das
jl
push
push
inc
mov
data16
and
adc
pusha
sub
imul
xchg
sbb
cmpsb
add
fisubrs
insb
ds
shrl
test
jmp
xchg
mov
dec
jns
daa
dec
push
inc
add
mov
inc
cmp
sbbl
test
adcb
push
pop
outsl
or
pop
push
push
pusha
push
sbb
lods
pop
and
cltd
insb
mov
pop
pop
xchg
gs
mov
lea
dec
push
cmc
and
mov
outsb
push
call
xchg
rcr
pop
pushf
mov
or
enter
outsb
test
xchg
out
cs
inc
test
cwtl
inc
in
mov
clc
dec
cmpsl
adc
repz
lods
dec
adc
sarb
in
xor
es
inc
arpl
fistl
loopne
inc
sti
xchg
push
sub
xchg
bnd
or
es
mov
cmp
mov
cltd
jb
push
insl
aaa
aas
xchg
push
and
pop
pop
pop
lret
sarl
jle
in
outsl
add
jg
jge
adc
sub
outsl
inc
xor
adc
pop
fidivrl
bound
sub
pop
cmp
daa
gs
pop
aad
lock
aam
jns
push
cmc
cld
cmp
pushf
push
xor
dec
lock
pusha
push
jmp
mov
pop
lretw
loope
xor
jno
movsb
rcrl
mov
add
sbb
clc
jb
out
dec
mov
jp
repz
mov
fidivrl
or
xor
xchg
dec
dec
sbb
mov
rcrl
lods
aaa
mov
mov
cltd
iret
jb
xor
jno
incb
fs
xchg
cmc
xchg
popa
sbb
jnp
rcrb
int3
sahf
adcb
push
mov
loope
aad
jmp
adc
push
loope
cld
je
sub
aam
xchg
inc
mov
jbe
jg
cmp
xor
mov
std
inc
pop
xor
popf
mov
adcl
in
insl
fiadds
imul
lods
imul
lret
scas
outsl
mov
or
mov
add
pushf
fstl
xchg
lea
mov
and
jmp
mov
fs
mov
cmp
mov
mov
inc
scas
rolb
dec
mov
lcall
pop
and
out
pop
fwait
lock
int3
sbb
cld
jecxz
fnsave
adc
xor
in
push
xor
or
ds
and
pop
or
sbb
mov
xor
adc
xchg
fbld
stos
scas
mov
add
jg
pop
int
jae
clc
adc
test
mov
fstpt
shll
sbb
pop
sarl
int3
xchg
imul
imull
fstl
test
sub
pop
jns
sbb
xchg
insb
aaa
cmp
sub
cmp
jp
pop
or
adc
aaa
out
out
and
gs
pushf
cmp
leave
lds
ret
in
jns
or
jo
outsl
adc
sub
sbb
adc
xchg
adc
jbe
imul
stc
pop
inc
rorl
loop
sub
or
jne
inc
fwait
xchg
adc
adc
in
iret
push
leave
adc
test
cli
xlat
mov
jl
add
sbb
scas
call
lods
cmp
inc
jg
aas
leave
jmp
inc
mov
aad
pop
mov
mov
movsl
shrb
and
adc
jo
mov
mov
cli
daa
je
push
addb
movsb
fnsetpm(287
daa
scas
outsl
insl
push
and
adc
adc
push
xor
jne
mov
out
imul
adc
stos
dec
negb
dec
jo
and
clc
sub
fdivl
stc
or
lds
xor
jge
popf
repz
xlat
in
lcall
push
cld
or
xor
or
cmpsb
pop
mov
push
movsl
mov
jno
jecxz
gs
sahf
mov
xchg
loope
pop
add
shll
mov
jb
mov
xchg
pusha
cmp
jg
dec
sub
jnp
in
cs
lock
bound
in
and
daa
mov
sbb
stos
je
das
mov
pop
or
aam
inc
jne
ja
popf
jl
push
out
xchg
lcall
xorb
std
lahf
inc
lret
dec
inc
iret
mov
rorb
add
mov
inc
rcr
std
push
cmp
jmp
rol
ljmp
cmp
shlb
inc
push
lea
es
pushf
xor
pop
cmp
dec
pop
fidivrl
or
sub
test
xchg
jl
jmp
pop
push
pop
xor
pop
int
dec
jmp
ret
cmc
push
jae
fdivs
test
inc
cmp
push
jns
jp
add
push
and
stos
iret
inc
push
mov
mov
mov
inc
or
mov
ds
div
jmp
lret
add
xor
cld
xor
shll
sbb
mov
mov
imul
imul
loopne
ljmp
lcall
adc
jge
in
mov
mov
add
jno
mov
mov
mov
js
cmp
pop
dec
fucom
jne
fists
ret
push
out
jbe
xchg
sub
call
rorb
and
and
ficompl
pop
pop
or
inc
mov
pop
push
fnstsw
icebp
mov
mov
hlt
push
adc
sbb
jge
mov
insl
out
mov
in
mov
bound
aad
insl
daa
ljmp
pop
popf
jp
add
js
inc
xchg
jno
adc
jp
popf
cmp
lods
loop
jno
cltd
popf
jne
nop
cmp
arpl
cmp
iret
add
insl
mov
dec
cli
sub
push
popf
push
test
cmp
test
mov
or
out
xor
fwait
insb
pop
add
jecxz
ret
adc
dec
mov
jmp
fildll
shl
stc
or
push
or
mull
rorb
adc
and
test
xor
cs
cld
pop
jne
cs
and
adc
out
imul
ja
orl
arpl
xor
loopne
data16
push
enter
and
repnz
push
stc
cmpsb
xchg
sbbl
adcb
mov
xchg
divps
jge
enter
enter
xchg
pop
lods
sub
lret
xor
sbb
mov
icebp
aam
fs
call
mov
data16
adc
lock
outsb
mov
hlt
xor
int3
or
test
sbb
add
and
sarl
and
jns
sahf
jo
mov
or
fs
frstor
cmp
out
mov
xchg
outsb
mov
jmp
loop
scas
xor
imul
clc
cmc
rclb
int3
out
inc
ss
add
inc
je
sarl
mov
fcoms
fidivrl
decb
nop
fsubr
dec
shl
test
popa
sahf
repnz
jmp
mov
jnp
in
outsb
gs
sbb
aaa
addr16
sbb
push
ret
repz
daa
dec
xor
lcall
adc
cmp
pop
jne
loop
std
rcr
ds
inc
loope
push
jl
arpl
xor
xor
or
dec
push
subb
sarl
stc
push
test
sbb
and
jns
lret
rcl
sub
dec
add
sbb
mov
jne
mov
cli
jg
or
push
fldcw
imul
dec
pop
int3
ficomps
add
cmp
mov
jge
mov
movsl
inc
in
mov
out
mov
inc
frstor
dec
scas
fs
sbb
lahf
outsl
in
inc
inc
aam
cmp
xchg
mov
pop
in
daa
cmp
xchg
cld
or
bound
cwtl
or
inc
mov
pop
dec
xlat
dec
dec
mov
mov
or
xchg
inc
cmp
insb
pop
jecxz
mov
testb
lea
imul
inc
xchg
lods
dec
out
mov
hlt
data16
in
cld
js
pop
out
adc
movsb
jo
ljmp
adc
lods
cmp
shll
popa
inc
sub
and
jg
push
pop
imul
and
adc
mov
add
dec
scas
cs
xchg
inc
lret
jne
out
add
cmc
xchg
inc
pusha
sbb
into
pop
dec
pop
or
int
adc
aaa
nop
icebp
cs
cmpsb
xchg
scas
test
and
mov
and
hlt
ret
add
mov
push
pop
imulb
mov
or
repnz
fwait
inc
sub
jbe
and
push
mov
xlat
mov
stc
xchg
sbb
mov
gs
jne
cmp
mov
imul
out
ja
loope
pop
mov
fdivrl
and
aam
xchg
pop
in
scas
daa
mov
testl
nop
cmp
into
mov
dec
inc
je
add
testl
jl
mov
outsl
xchg
mov
cmpsb
lcall
movsb
lret
in
lahf
arpl
adc
cwtl
je
popf
xor
jne
fs
push
addr16
in
in
fbstp
shrl
mov
sub
inc
mov
fiaddl
clc
jb
xor
out
aad
cmp
push
and
icebp
in
leave
cmc
jecxz
enter
lds
sbb
pusha
daa
nop
jbe
fs
shll
int3
inc
adc
je
or
lret
cmpsb
push
scas
sub
sbb
inc
arpl
mov
cmc
and
shrb
outsb
shrl
xchg
sbb
xor
xchg
fsts
cs
add
push
mov
nop
jnp
aad
jecxz
leave
mov
lret
adc
js
sub
aaa
pop
in
fidivl
jg
jmp
jbe
cmp
out
cs
push
push
dec
outsl
out
adc
sub
in
lahf
cmp
cli
xor
mov
and
out
out
cli
std
xor
sub
pminub
and
push
jnp
fisttpll
cli
push
push
in
bound
nop
insb
bound
mov
jae
mov
pop
adc
imul
mov
addr16
jp
inc
fdiv
dec
xor
xchg
dec
jmp
cmp
pop
jb
xchg
xchg
mov
mov
pop
jge
jae
test
pop
pop
xchg
in
aas
cmp
mov
addl
dec
mov
push
mov
ja
mov
xchg
mov
sub
xchg
jae
insl
in
repnz
aas
jns
and
aad
xchg
jo
loopne
pop
faddl
mov
jl
pusha
jl
sbb
outsl
lret
pop
pop
mov
lock
movsl
cmpsl
and
es
sti
repnz
push
or
mov
push
shll
or
mov
aas
jno
mov
or
ret
push
mov
call
pop
cmp
mov
scas
or
jns
pop
sbbl
aad
add
clc
shrl
adc
imul
mov
outsl
out
mov
inc
jnp
mov
fistl
push
les
ss
cmp
or
mov
and
mov
inc
xchg
fadd
pop
and
loopne
mov
and
std
shll
push
and
push
icebp
lret
and
aaa
jmp
fnsave
or
cmp
scas
fsubl
shll
scas
jne
lock
dec
sub
fs
pop
or
inc
push
sarl
xor
mov
mov
mov
pushf
jb
std
dec
and
lret
dec
mov
stc
aam
iret
inc
ds
inc
lods
stos
inc
or
pop
pop
cld
push
jge
cmp
ret
cmpsb
into
enter
dec
ja
loop
xchg
fmul
cmp
xchg
js
pminub
imul
push
cltd
js
data16
call
test
dec
dec
aas
fdivrl
mov
adc
push
adcl
dec
repz
cmp
adc
mov
es
mov
scas
stos
mov
pusha
imul
pop
jo
out
lock
xor
or
add
push
sarl
lahf
imul
stos
data16
xchg
jbe
rcll
icebp
push
sbb
testl
orl
mov
js
push
test
jns
sbb
jno
loop
cmpsb
aaa
fucomp
leave
mov
mov
inc
mov
ret
mov
repz
mov
lcall
add
jbe
pop
shll
sarb
mov
sub
mov
or
xchg
int3
add
xor
stos
dec
imulb
mov
cmpsb
lahf
fwait
scas
xchg
mov
mov
out
adc
xlat
cmp
pop
repz
add
adc
push
outsl
xchg
add
js
pushf
test
test
inc
mov
ret
lock
hlt
and
fwait
mov
cmp
push
mov
mov
adc
shlb
mov
jecxz
sub
sbb
cmp
popf
test
xchg
imul
jle
loopne
mov
lret
inc
out
sbb
adc
ja
cmp
inc
fstl
dec
adc
add
inc
pop
ds
xor
xchg
add
fwait
cmp
mov
mov
test
dec
sub
adc
sub
int
lods
pop
cmp
pusha
int
mov
or
push
filds
call
icebp
ljmp
in
push
sub
jge
inc
mov
lcall
aam
stc
mov
data16
jl
mov
mov
jp
std
mov
sub
sub
arpl
lds
rclb
imul
mov
mov
push
or
repnz
cmpsl
insl
or
xchg
int3
xchg
pop
dec
int
pop
push
out
repnz
fsubs
pop
mov
mov
sub
cwtl
mov
iret
mov
inc
or
lcall
aas
daa
sahf
sub
jmp
adc
jns
pushf
sub
dec
aam
dec
xor
jnp
sbbl
mov
xchg
pushf
mov
les
push
pop
ret
or
or
add
mov
inc
add
cmp
leave
ret
imul
fmull
loop
xchg
fisttpll
stc
or
ficoms
fdivrl
insb
and
push
aad
out
cmpb
push
xchg
arpl
sub
inc
xor
cltd
ljmp
sar
mov
add
shrb
iret
ret
pusha
mov
loope
outsb
adc
rcrb
enter
ret
xchg
inc
xchg
xchg
mov
xchg
add
addb
repz
xchg
out
leave
lret
mov
mov
push
pop
add
inc
mov
jb
pusha
repz
push
dec
pop
popa
jnp
push
cli
pop
xor
stos
addb
jp
ret
gs
inc
test
cld
or
rorb
push
jecxz
push
sbb
mov
pop
xor
mov
sub
pop
gs
or
mov
loopne
fidivl
cmc
fsubrp
jo
imul
sub
mov
rorl
popf
xor
dec
cmp
ret
sbb
test
push
andb
mov
xchg
jns
lds
test
dec
dec
add
aam
lahf
xchg
mov
call
incl
shl
and
mov
dec
and
in
hlt
push
mov
xchg
adc
divl
jns
lods
outsb
jne
dec
xor
js
jb
and
push
cmp
cmp
out
cmp
push
and
adc
add
inc
xor
and
std
dec
jge
cli
and
pop
sub
lods
ret
xchg
fimull
xchg
daa
popa
scas
mov
ja
add
lods
xor
imul
loope
sbb
mov
pushf
mov
push
ljmp
sbb
dec
or
jae
lahf
test
cmp
add
faddl
int3
cmp
jnp
pop
xchg
imul
xor
xlat
pusha
jl
dec
fwait
cmp
jns
sub
inc
outsb
int3
jecxz
pop
mov
or
fbstp
movsl
ss
in
orl
add
movsb
imul
sub
js
mov
scas
xchg
mov
sbb
mov
sahf
cmc
and
in
int
icebp
mov
push
insb
xchg
test
lock
xchg
jg
push
imul
and
add
out
std
rorb
dec
lcall
dec
ds
and
mov
ds
repnz
lods
movsb
in
push
rcl
outsl
push
add
fstps
lods
mov
mov
sti
daa
sub
fiaddl
cmp
mov
jmp
cmp
mov
mov
mov
adc
push
iret
int3
dec
test
pop
sbb
mov
orl
aam
cmpb
push
test
mov
add
iret
xor
scas
cmpsl
jb
and
push
mov
mov
dec
pop
dec
in
cmc
xchg
fs
sub
lret
negl
jnp
test
ret
bound
imul
push
repz
shl
adc
xchg
dec
or
mov
shl
xor
nop
test
inc
xchg
addb
das
in
and
push
ret
push
push
adc
cwtl
fmuls
jo
mov
iret
repnz
call
lret
add
mov
mov
mov
addr16
mov
mov
push
cltd
sbb
cmc
cmpb
je
or
mov
inc
push
mov
cmp
inc
mov
pop
pop
ds
repz
aas
scas
add
inc
sbb
jg
jl
mov
xchg
or
add
scas
dec
out
es
out
scas
outsl
dec
mov
jl
add
test
pushf
xor
xchg
adc
sti
mov
in
aaa
mov
adc
mov
sahf
loopne
bnd
aaa
out
test
icebp
sub
repz
mov
js
bswap
loop
mov
nop
outsb
iret
push
cmp
push
iret
fbld
popf
sub
cli
push
dec
insb
pop
int
pop
jne
int3
jns
scas
jno
xchg
std
loop
xlat
int
sbb
cmpsl
cmp
in
push
sub
or
jne
test
lods
test
mov
and
push
repz
xor
daa
out
movswl
insb
ret
pop
out
sbb
inc
xor
add
shr
add
vmovups
lea
mov
dec
loope
lods
mov
adcb
pop
push
fisubs
jl
enter
imul
add
inc
shl
int3
dec
push
mov
jb
data16
and
scas
xchg
pop
scas
sbb
pop
popf
cmp
pop
lds
push
mov
leave
xor
test
adc
jbe
inc
cmp
xor
xchg
jp
call
repnz
mov
fs
mov
mov
adc
jb
sar
movsl
jae
sub
scas
fmul
scas
xchg
cmp
or
cmp
fadd
or
inc
xor
vphaddudq
jbe
pusha
fabs
mov
in
or
cwtl
rclb
ffreep
imul
push
push
mov
lods
fisubs
push
pusha
or
jl
mov
push
jmp
jne
xchg
shl
cmpsb
add
jge
fsubl
jae
shrb
dec
ss
popf
repnz
bound
insl
lock
ja
sbb
add
push
mov
xchg
dec
sub
loop
mov
notb
and
xchg
pop
jmp
inc
loopne
clc
inc
pop
int
or
and
leave
mov
fcmovnb
or
mov
test
mov
outsb
stos
leave
cs
aaa
cwtl
mov
pop
inc
pushf
jg
dec
fnsave
xorl
int3
mov
dec
scas
jo
and
jb
xor
add
mov
and
ret
dec
scas
and
inc
orl
sbb
sbb
int
or
cmpsb
inc
pop
jno
inc
test
movsb
iret
jmp
or
push
imul
movsb
xchg
iret
sbb
divl
mov
jne
pop
and
sti
pop
out
aas
cmp
insl
lcall
mov
add
je
adc
mov
repz
pushf
pop
inc
rorb
clc
subl
fs
fst
incl
sub
or
mov
mov
xchg
pop
mov
loop
pop
pushf
cmp
daa
pop
add
dec
pushl
inc
push
outsb
jg
mov
dec
es
push
enter
mov
cs
mov
inc
lret
movsl
pop
insb
jno
dec
data16
xchg
shlb
scas
test
fcmovu
xchg
push
ss
xor
cmpl
sub
inc
sub
arpl
hlt
hlt
nop
jne
fcompl
mov
xchg
sbb
mov
pop
sti
lock
xchg
adc
push
loopne
les
pop
test
movsl
mov
out
fistl
or
or
std
adc
nop
push
jo
cmp
insl
clc
push
pop
rorb
fneni(8087
fwait
jge
cmp
pop
xchg
xchg
jo
mov
or
bound
mov
sbb
dec
lods
adc
mov
pop
fsubrl
push
jp
add
movsl
push
sub
sub
jbe
test
stos
lret
fwait
sub
sub
leave
arpl
and
repz
inc
adcb
push
outsb
shll
lahf
fldenv
mov
ss
jl
mov
mov
loop
cmp
lea
stos
xchg
mov
or
loop
jbe
push
fs
push
fnsave
inc
in
mov
jae
push
mov
adc
imul
daa
lcall
or
pop
mov
mov
xchg
and
push
mov
or
nop
in
divl
pop
movd
scas
lret
sbb
repnz
xor
mov
fcomps
pop
mov
in
sub
or
adc
addr16
or
mov
imul
loop
sub
mov
dec
cmp
pop
mov
int
loope
icebp
js
push
and
aad
fadds
sub
jo
dec
mov
sbb
repnz
sbb
bound
push
fnstcw
adc
dec
push
mov
inc
push
jmp
lret
or
jg
ret
pminub
ljmp
or
scas
and
mov
es
ljmp
inc
xor
inc
repz
iret
mov
add
out
adc
and
sti
mov
xchg
inc
sbb
shrb
sti
dec
dec
inc
scas
dec
repz
nop
inc
mov
inc
mov
sbb
imul
loopne
cmpsl
loop
sbb
push
dec
push
out
mov
ljmp
mov
sar
sub
pop
or
pop
into
fabs
test
xchg
push
sarl
mov
call
aad
dec
and
in
inc
jle
popa
lock
sub
movsl
sbbl
push
mov
mov
push
add
test
mov
cwtl
pop
fwait
inc
out
adc
xchg
sbb
cwtl
and
cmc
dec
mov
xchg
pop
add
add
xchg
ret
int3
repz
test
fnsave
sub
adc
ficompl
pop
mov
cmpsb
mov
sbb
leave
pusha
pminub
outsb
jmp
pop
lret
into
adc
out
int3
mov
push
cld
cli
push
shr
or
and
movsb
push
jo
addb
aad
or
and
aam
fcoml
aaa
ss
mov
or
dec
dec
sub
mov
adc
cmp
lret
dec
push
iret
cmp
into
nop
pop
pop
cmpsb
ss
data16
fldt
mov
into
mov
adc
mov
cmpsb
ja
add
mov
imul
jl
jl
ja
cli
das
xor
mov
pop
sub
sbb
cltd
leave
add
test
add
movsl
sbb
or
dec
jbe
sub
repz
push
mov
inc
sbb
scas
inc
cmp
imul
adc
popa
xchg
adc
push
jl
push
shll
lcall
and
adc
push
ret
sarl
mov
in
mov
es
insb
in
xor
xor
push
sti
adc
fldenv
xor
out
cmp
pusha
mov
dec
sub
jle
out
sub
lcall
mov
sbb
mov
imul
les
jmp
and
adc
jl
pop
insb
lea
enter
ret
rolb
imul
jno
insl
jle
cmp
stos
mov
repnz
mov
mov
scas
add
push
jecxz
pushf
sub
mov
pslld
and
xchg
stos
jae
push
out
push
xor
pop
enter
pop
xor
push
sub
mov
adc
dec
push
mov
xchg
out
push
or
mov
fcmovnbe
mov
jbe
cmp
adc
pop
xor
cld
ss
adc
jb
lock
aad
popa
adc
add
je
xchg
mov
mov
imul
or
mov
insb
js
jg
mov
cld
in
pushf
pop
pop
loope
xchg
mov
inc
loope
xor
movsb
fisttpl
insl
lcall
adc
lahf
sti
arpl
loop
inc
mov
shrl
mov
movsl
ljmp
mov
mov
lahf
dec
pop
sti
mov
fsubr
or
mov
xor
test
push
rorb
mov
sbb
into
fcoms
mov
cwtl
mov
cmpsb
jecxz
sbb
in
cmp
inc
hlt
jnp
or
pop
fidivrl
in
xor
in
les
loop
nop
daa
xchg
jne
fucomip
adc
dec
add
adc
movsl
push
cld
frstor
push
jp
push
ljmp
arpl
aaa
loop
cs
mov
xorb
lock
call
out
cmpsb
xchg
xor
aas
adc
or
sub
mov
push
fsubr
xlat
movsb
add
or
jne
jle
test
lds
fdivrl
aaa
xchg
sub
mov
outsb
mov
stos
pusha
xor
lret
or
mov
pop
xchg
and
out
mov
scas
inc
lds
ds
fildl
and
mov
lods
scas
ss
test
dec
push
mov
push
fsubs
mov
push
push
xchg
cmc
add
ja
mov
hlt
fmul
test
cmp
cwtl
mov
fldcw
iret
sahf
cmc
push
ljmp
cmp
xchg
pop
jl
in
sbb
lods
jmp
or
fisubrl
sbb
push
orl
or
mov
or
sbb
xlat
es
pop
adc
leave
test
push
subb
outsb
fsts
cltd
ret
cmc
and
push
into
int
jno
and
sub
fsubrl
gs
repz
push
bnd
xchg
ret
jge
push
stos
jb
fcompl
mov
dec
pusha
dec
jge
mov
inc
das
sbb
in
push
sbb
testl
xchg
sbb
or
fnsave
mov
leave
mov
pop
ljmp
fsts
nop
pop
add
roll
inc
call
mov
shrl
xchg
rclb
cwtl
leave
sbb
mov
subl
inc
dec
push
mov
xchg
xlat
or
ret
add
lret
adc
emms
inc
sbb
cwtl
push
xchg
mov
add
fimull
xchg
jae
mov
add
mov
loop
or
fs
adc
jl
int
mov
lods
in
or
push
cmp
mov
jle
cmc
pop
lret
push
stc
dec
adc
xchg
xlat
inc
cmp
call
das
mov
and
into
mov
dec
les
and
push
xchg
scas
aad
inc
frstpm(287
add
ljmp
fcompl
mov
popf
aas
enter
test
push
push
aam
mull
jecxz
mov
and
test
mov
in
out
pushl
xchg
ljmp
or
xchg
mov
mov
sbb
sub
iret
sub
push
jmp
cmp
jno
sbb
imul
xor
or
stc
mov
fildl
push
adc
dec
lods
sub
lret
mov
push
jne
outsb
imul
test
scas
insl
lods
mov
fs
inc
mov
es
jp
push
xchg
clc
aad
xchg
xor
mov
cmp
jp
rol
xchg
pop
pop
mov
mov
sub
test
xchg
sbb
adc
insb
mov
inc
ret
negl
loopne
pop
push
std
int
vpmacsww
sti
leave
inc
enter
cs
outsl
stc
adc
leave
lods
cmpsb
sub
and
jne
pop
mov
hlt
jmp
and
ret
cmp
test
cmp
pop
inc
out
xor
frstor
in
mov
cmp
sub
inc
inc
lcall
push
add
add
shr
xchg
cmc
pushf
push
sbb
lcall
insb
repz
mov
pop
mov
mov
add
mov
addb
fadds
push
std
xor
in
js
cmp
adc
xchg
push
fcoms
dec
lret
sti
jg
rcll
mov
dec
aam
lret
dec
out
sub
clc
jo
inc
enter
movb
dec
outsb
jge
and
in
add
aaa
fimuls
and
mov
or
hlt
fiaddl
mov
in
push
mov
pusha
cmp
sbb
inc
scas
test
inc
and
shrl
outsl
adc
jae
adc
xlat
sub
mov
pop
mov
xlat
push
pop
sub
popf
adc
mov
repz
push
scas
sarl
cmc
or
mov
loop
cmpsl
push
out
mov
push
and
lock
jle
inc
push
fs
push
jl
jae
or
adc
cli
imul
mov
push
sub
xor
outsb
subb
jp
push
into
aad
scas
or
jecxz
fstpl
ret
movsl
xchg
and
mov
jg
xchg
jae
cmp
ret
pop
fistl
add
ficomps
dec
xchg
sbb
pop
stos
stos
neg
push
out
out
out
sbb
clc
xchg
roll
insl
jmp
pop
out
inc
fyl2x
sub
jo
xchg
lahf
mov
mov
add
mov
mov
inc
push
test
out
and
in
loopne
loop
aam
sti
inc
mov
addr16
jge
inc
push
test
loopne
inc
stos
addr16
test
and
ss
mov
sub
add
jae
push
dec
das
mov
sub
outsl
mov
dec
loope
out
cmp
push
mov
not
pop
fnstsw
dec
pop
cltd
lock
push
cmp
and
push
adc
cmp
xchg
pop
mov
insl
stos
in
jno
inc
cmp
idivb
popf
dec
ja
jno
daa
push
repz
mov
mov
fs
aas
adc
adc
mov
xchg
mov
js
lcall
pop
cmp
sbb
lea
in
cmp
into
popa
test
push
mov
rcr
cmp
cmp
jae
inc
mov
mov
leave
add
cmpsl
inc
xchg
addr16
and
jecxz
or
pop
dec
adc
jno
fidivrl
jl
xor
les
push
dec
cmp
jg
das
pop
mov
es
inc
sub
dec
cld
out
addb
pop
mov
int
pushf
ret
and
inc
loopne
xchg
mov
ljmp
rcll
outsb
dec
test
rolb
leave
iret
icebp
das
jo
sub
mov
ret
pop
mov
int3
insl
pop
xor
jo
int
mov
mov
call
jg
mov
enter
sub
add
mov
push
mov
mov
aaa
fsubl
push
mov
mov
pop
sub
fisttpll
push
popf
dec
fidivl
pop
ja
stc
inc
test
sbb
and
mov
loop
jg
fcoms
and
js
imul
mov
aam
lea
xor
mov
xchg
jmp
dec
into
and
stos
in
cmpsb
stos
jb
mov
jnp
pop
jae
pop
jmp
aam
or
sub
or
push
cmpl
xor
call
adc
push
movsb
rclb
fists
xchg
les
lods
xor
lds
cmp
or
push
cmpsb
cld
and
dec
xlat
imul
aaa
imull
dec
into
mov
rsqrtps
cs
mov
mov
xor
jo
imul
inc
mov
in
sbbl
xchg
push
mov
lea
mov
and
adc
out
mov
fwait
pop
rcr
outsl
mov
lret
xor
mov
cli
pop
int3
negl
or
jl
iret
add
and
sarb
out
sbb
insl
dec
dec
popa
mov
pop
add
faddl
lahf
jno
bound
pop
cltd
mov
daa
and
xor
add
insb
push
mov
rcl
xor
sub
or
inc
outsl
rcll
stos
lods
xchg
loop
das
jp
outsl
and
loope
and
dec
jle
mov
and
pop
add
int3
popf
out
sbb
pcmpeqd
scas
aad
stos
add
push
mov
sbb
fdivrl
movsl
repnz
pop
pop
add
mov
xor
sbb
cmc
cld
push
lock
cmpsl
pop
ds
in
mov
jno
mov
mov
add
ljmp
in
inc
add
sbb
stos
pop
inc
ret
cmp
or
sub
add
ja
dec
and
arpl
cmpsb
scas
push
cs
les
sbb
ret
mov
pop
xor
xchg
shr
or
repnz
loopne
imul
dec
in
and
scas
jb
cmp
xor
lahf
inc
cs
push
fwait
sub
stc
imul
push
mov
or
sub
out
sarb
outsb
inc
adc
fnstsw
xlat
test
je
loope
jl
cmp
divl
xchg
sbb
outsb
xchg
jl
inc
or
addr16
xor
pop
mov
lods
je
in
lods
comiss
jb
ljmp
in
pop
xchg
test
movsb
pop
stc
xchg
push
push
mov
pushf
popa
and
orl
mov
push
out
cld
pop
mov
lcall
repz
dec
icebp
shl
cmc
dec
fistps
stos
and
sub
cmp
insb
js
xchg
adc
dec
lret
jno
mov
inc
enter
test
jg
pop
jns
sub
xor
test
add
pop
cmpsb
push
mov
cmp
lea
sub
inc
es
insb
pop
dec
pop
in
push
in
jbe
dec
or
bnd
jnp
repz
push
rcrb
rolb
dec
inc
mov
roll
sub
in
and
or
or
cmpsb
adc
testl
sbb
cmp
lds
test
lods
jecxz
pop
divb
cld
into
mov
call
xchg
push
movsb
into
adc
aaa
push
cmp
cmp
rclb
mov
mov
mov
test
ret
xor
sahf
adc
aaa
xchg
add
adc
sub
pop
in
fiaddl
sub
sahf
push
xchg
jb
dec
stc
xchg
std
or
push
ret
call
push
jb
test
pop
gs
es
cmp
and
out
mov
ret
scas
mov
pop
cs
xchg
jbe
mov
sub
fldl
shlb
mov
mov
lea
and
xor
in
es
mov
sub
int
test
cwtl
sbb
test
mov
push
dec
pop
dec
mov
jnp
adc
imul
mov
push
js
push
js
sub
and
leave
sbb
imul
inc
flds
inc
sub
sbb
cmp
mov
test
xchg
pop
jb
sub
ds
pop
stos
inc
add
nop
in
outsb
adc
lods
stos
jnp
hlt
mov
jge
data16
std
pop
pop
iret
mov
mov
lcall
and
cmp
icebp
js
jbe
mov
stos
aad
rorb
push
mov
pop
pop
mov
push
outsl
inc
rcl
mov
shlb
xchg
hlt
or
inc
sbb
fcompl
mov
loopne
mov
dec
dec
push
xor
lahf
and
pop
push
rclb
mov
sub
into
mov
push
jno
aam
sub
pop
aaa
dec
test
xchg
je,pt
lea
jmp
sahf
jmp
orb
sub
in
pop
arpl
lret
mov
push
add
push
dec
in
cmp
xchg
mov
sbb
shl
test
mov
jb
mov
mov
adc
jle
sub
push
pop
fisttps
push
add
xlat
push
adc
ljmp
ret
int3
xchg
push
jne
mov
ret
sub
lea
jno
push
cld
ret
jo
mov
sbb
lds
imul
icebp
rcrb
bound
aaa
lahf
xor
xchg
nop
pushf
mov
mov
lret
mov
mov
clts
cmp
inc
or
push
std
cld
sub
inc
or
lret
xor
test
pusha
pop
dec
jns
out
pop
mov
shll
rcrl
fnsave
pop
cwtl
and
lds
jecxz
xchg
add
sti
addb
mov
pusha
das
adc
sbb
out
dec
lea
xlat
in
xchg
mov
repnz
jge
dec
cmpsb
jl
ljmp
push
mov
inc
pop
scas
or
imul
stos
mov
mov
std
mov
jg
in
jl
idivb
incl
das
pop
push
jl
ss
xchg
test
fwait
push
mov
loope
lret
aad
daa
jg
adc
shlb
hlt
mov
push
test
int
data16
addb
jo
out
jp
addl
sub
into
xchg
mov
mov
inc
push
push
push
mov
and
sub
push
mov
mov
pop
jns
sbb
enter
inc
rcll
or
or
icebp
inc
in
xor
dec
cmpsl
xor
aaa
add
mov
rol
enter
xorb
ja
and
fmull
popl
in
dec
insl
sbbl
into
dec
inc
inc
neg
pusha
xchg
jl
cmp
lock
fdivl
adc
cmp
je
or
stc
data16
sub
out
sbb
cmp
push
repz
add
dec
mov
je
out
add
loop
fs
mov
sbb
rorl
pop
les
adc
mov
cmp
loopne
or
pusha
jge
and
ja
adc
sahf
loopne
in
into
push
out
xchg
stos
insb
ss
insb
std
repnz
js
lds
inc
add
loopne
pop
xor
lods
out
in
mov
push
fst
xchg
loop
popa
bound
push
in
imulb
cmp
lock
pop
mov
or
jbe
sbb
and
ret
and
mov
fwait
mov
sahf
xor
pop
lahf
jns
sub
push
das
sbb
xchg
sbbb
adc
mov
pop
hlt
sahf
push
push
dec
jge
ja
mov
mov
ljmp
xchg
mov
loope
shll
int
or
push
xchg
lret
nop
mov
mov
jg
movsl
pushf
fldenv
sbb
push
pop
jmp
fwait
push
push
adc
lahf
lods
jle
adc
and
push
xchg
cltd
shll
gs
xchg
xor
adc
test
fisubs
sarb
jne
xchg
mov
push
mov
test
icebp
xorb
leave
xchg
js
ds
lea
xor
jmp
repnz
dec
rclb
lret
inc
add
enter
or
cmpsl
arpl
pop
dec
subb
xchg
lock
aam
mov
ror
sbb
popa
mov
mov
push
xlat
hlt
cmpsb
push
stc
in
rcr
and
jecxz
and
pop
insl
fsts
cmp
sub
or
jmp
ja
add
scas
je
cld
xchg
fisttps
xor
jmp
push
mov
out
mov
and
testb
imulb
sbb
lds
ret
inc
xchg
mov
loopne
shll
std
xchg
fcmovne
mov
dec
ljmp
das
xchg
mov
mov
mov
cmc
adc
dec
inc
aaa
dec
ds
cmp
subb
out
shlb
push
movsl
rep
xchg
mov
lcall
into
imul
loopne
mov
in
stos
pop
popf
dec
inc
nop
data16
xor
jg
dec
mov
dec
std
sbb
push
enter
sub
dec
inc
sahf
stos
jae
mov
sub
mov
inc
and
jb
cmp
or
std
sti
push
mov
mov
cmp
sar
int
repnz
ljmp
bound
push
stos
push
mov
xchg
test
ja
hlt
sbb
mov
dec
jnp
mov
jns
bound
mov
insb
loop
or
inc
cmp
sbb
pop
repnz
add
and
jge
and
xchg
in
test
add
dec
or
adc
out
jmp
repz
jnp
das
and
mov
sub
mov
mov
adc
sbb
mov
ret
xchg
push
out
adc
cltd
mov
sub
lea
sub
sbbl
xchg
or
mov
or
xchg
int3
xchg
push
or
je
rclb
cmp
cmp
xor
or
xchg
and
and
lahf
movsb
mov
dec
sbbl
or
aam
xor
out
popa
or
sub
ljmp
ds
sbb
lret
jl
push
sbb
pmulhw
pusha
pop
aad
sub
idivb
flds
or
push
inc
ljmp
fisubl
movsb
bound
pop
data16
or
dec
jle
nop
call
adc
pop
fstpt
insl
dec
imul
out
pop
xchg
scas
lods
mov
mov
shrl
aad
fsubrl
cwtl
mov
sahf
adc
xor
aaa
int3
jns
bound
and
cmp
jecxz
sub
out
inc
mov
cld
sbb
iret
es
jecxz
int
int3
sbb
jge
call
frstor
xchg
out
mov
daa
mov
add
fists
stos
sti
sbb
out
pop
add
mov
data16
jecxz
or
add
lock
fs
or
sbb
movl
andl
sbb
jo
jbe
xor
in
stos
push
sub
sub
sbbb
subb
push
inc
pop
jb
add
jl
jmp
sbb
sub
xor
shrl
icebp
mov
cltd
clc
inc
or
push
push
testl
int
outsb
sub
daa
mov
cmp
popa
mov
jns
enter
sbb
ficomps
xchg
leave
mov
xor
test
aaa
and
fildll
outsl
mov
icebp
jae
addb
in
dec
mov
add
mov
aas
adc
cmp
cmp
cmpsb
adc
xor
pop
mov
adc
outsb
mov
xchg
aas
cmp
out
or
mov
adc
addr16
xchg
adcb
xor
add
lock
lea
and
dec
in
jns
mov
sub
enter
loope
pop
int
mov
push
mov
out
repnz
adc
mov
push
or
int
dec
mov
dec
fildl
jns
popf
adcb
test
sbb
jnp
mov
scas
outsb
push
jmp
movsl
xchg
cld
sbb
mov
inc
adc
subl
inc
push
aad
xor
and
icebp
xor
jo
aas
iret
inc
mov
mov
inc
pusha
insb
jnp
mov
in
pop
pop
out
inc
mov
fildl
std
jmp
sbb
xchg
in
push
dec
out
lcall
mov
aaa
fnsave
xchg
adc
inc
mov
outsb
aaa
lea
dec
mov
loopne
push
int3
cmp
in
popa
lds
mov
dec
rcrl
test
cmpsl
incl
das
or
push
fsubs
std
push
lock
inc
mov
push
lahf
in
dec
aas
pop
test
daa
push
push
mov
inc
pop
fiadds
popf
test
xchg
js
out
ret
add
or
ds
rolb
mov
jge
arpl
cwtl
dec
mov
lea
jns
shlb
aad
daa
pop
movsl
xchg
inc
mov
xchg
lahf
jae
roll
jmp
or
inc
add
sbb
jae
dec
out
outsb
sbb
mov
cmpsb
xchg
jnp
or
lcall
pop
out
mov
xor
out
cmp
imull
dec
push
sub
dec
sbb
sbbl
test
insl
imul
mov
and
and
hlt
cs
dec
orb
cs
sub
push
jne
xor
into
push
and
mov
or
xchg
icebp
adc
sbb
nop
insl
adc
inc
mov
inc
movnti
push
hlt
push
jnp
sub
jle
sar
push
mov
jecxz
les
pop
scas
in
rolb
cmp
std
or
xor
addl
xor
aas
pop
sub
inc
pop
inc
and
mov
mov
jg
sti
mov
ds
mov
movsl
stc
cmpsb
pop
inc
sub
jnp
rorb
sub
pop
sahf
aad
pop
std
jns
sub
ja
dec
out
icebp
nop
pop
push
pop
movsb
icebp
rorl
adc
ss
adc
and
outsb
fstl
clc
jnp
sti
into
aaa
stc
mov
cmp
pop
fsts
fwait
pop
pushf
xchg
ja
outsl
mov
add
je
push
ret
sbb
or
inc
iret
incb
jl
push
add
and
inc
fadds
sbb
shlb
fmuls
repz
pop
jno
ret
and
lcall
cwtl
scas
add
pop
xor
arpl
add
sbb
gs
xor
jo
sub
jns
jb
push
cmp
mov
cmp
ret
testb
push
xor
push
pop
fadd
in
test
stos
mov
add
mov
lcall
addl
ret
mov
call
and
inc
mov
shlb
rcll
add
cmp
mov
dec
mov
or
sbb
test
bound
push
mov
cmp
lods
je
pushf
stc
jbe
pop
in
das
sahf
hlt
and
orl
inc
pop
popa
and
loopne
imul
mov
daa
mov
inc
outsb
cmpsb
das
aas
xor
cs
inc
scas
rclb
and
lcall
mov
or
int3
jecxz
cld
dec
mov
mov
popa
daa
lods
outsb
std
jmp
inc
push
mov
and
inc
fidivs
xchg
scas
sbb
scas
fists
stc
mov
jmp
xchg
insl
lahf
jo
jge
cmp
arpl
lcall
in
stc
sub
cld
in
cs
and
mov
lret
jge
mov
mov
xor
xor
cltd
lahf
sarl
pop
sbb
mov
scas
mov
jle
pushf
addr16
fwait
pop
xor
sti
int
call
bound
add
movl
and
pushl
stc
cs
inc
call
hlt
mov
les
mov
imul
push
jae
push
jnp
adc
jo
mov
and
addb
ja
shll
jecxz
fistpl
ljmp
mov
fneni(8087
insb
or
fbstp
insb
and
mov
mov
xchg
push
jle
push
xchg
ret
inc
sbb
cli
push
dec
daa
pop
xchg
gs
shrb
fbld
sub
loopne
xchg
mov
adc
leave
stos
lahf
jne
ficomps
inc
xchg
stos
adc
mov
xor
push
add
push
fstps
push
out
adc
aas
fldt
cs
fiadds
mov
inc
aad
adc
mov
fbstp
loopne
hlt
aas
and
out
cmp
dec
pop
jns
in
jae
adc
daa
mov
js
test
jb
mov
lahf
nop
shl
mov
aas
inc
pop
into
xor
mov
push
mov
jb
stc
stos
arpl
fucom
insl
loop
int
sub
mov
outsb
into
cmpl
mov
mov
sbb
or
stos
dec
mov
push
or
ljmp
add
mov
ret
roll
call
insb
xchg
jecxz
into
adc
add
add
pmaxsw
mov
or
movsl
mov
or
sbb
mov
das
aaa
setle
sub
xor
jg
pop
sbb
test
mov
and
mov
lods
mov
scas
mov
je
xor
rcll
cmpsl
clc
fst
aad
push
cmp
jbe
lea
jle
sbb
xchg
ds
roll
mov
stos
test
pop
pop
add
daa
dec
cmp
xor
jmp
test
mov
inc
pop
cmpsb
and
pop
adcb
loop
push
mov
mov
repz
mov
pop
mov
add
cltd
pop
or
jmp
es
push
cmp
cmp
add
xchg
insl
mov
push
movsl
mov
andb
mov
lcall
push
aad
pop
cmp
cmp
fbld
repz
les
cmp
addr16
add
push
insb
sbb
adc
xlat
lods
stos
sbb
mov
and
mov
mov
pop
shll
mov
inc
leave
adc
popa
cs
mov
ja
movsb
cmpsl
nop
rcrb
hlt
inc
mov
push
dec
inc
pop
jbe
pop
pop
mov
sbb
enter
mov
call
mov
data16
inc
sub
dec
test
ds
js
stos
gs
pusha
test
sub
pop
leave
sbb
xchg
dec
xchg
push
add
mov
mov
shll
jne
jne
ret
lret
dec
sarb
mov
mov
pop
scas
pop
loope
fwait
jo
lret
adc
mov
mov
or
icebp
pop
mov
xchg
std
sbb
mov
inc
add
pop
mov
dec
cmp
cmp
aaa
mov
mov
pop
inc
scas
mov
loope,pn
mov
ds
shrl
pop
pop
sbb
aad
cmovno
lret
mov
push
mov
pop
repz
cmp
