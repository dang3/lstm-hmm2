jb
mov
xor
pop
imul
jbe
pop
add
dec
outsb
pop
dec
mul
fwait
xor
scas
push
loopne
or
jle
jnp
xchg
pusha
cmp
or
ljmp
dec
cltd
divb
jae
test
repz
negl
xor
dec
daa
sahf
jbe
push
mov
lcall
xchg
adc
je
adc
pop
sar
inc
jmp
mov
dec
fndisi(8087
fucomip
lea
andl
mov
lret
cli
je
repz
fidivrl
or
out
mov
ja
jns
push
add
arpl
xlat
mov
pop
sbb
or
push
jmp
mov
mov
pop
or
mov
sbb
push
fbstp
and
mov
jl
add
adc
outsb
daa
push
loopne
xlat
push
ds
int3
add
lret
insb
adc
and
fildll
mov
out
ret
leave
jne
jg
cmp
mov
push
push
xor
lahf
push
ja
inc
mov
bound
inc
mov
je
lods
xchg
adc
and
outsl
clc
enter
xchg
inc
call
jle
inc
push
or
dec
pop
outsb
dec
jg
mov
xchg
sar
xchg
push
mov
or
xor
mov
add
negb
pop
dec
jecxz
jecxz
xchg
or
jg
clc
inc
sub
jmp
sub
and
or
out
stos
dec
outsl
jle
and
push
mov
push
inc
pop
jle
scas
mov
mov
lcall
xor
pop
fs
stos
push
sbb
incl
mov
mov
out
aaa
fsubrl
mov
jg
jecxz
insb
pop
or
mov
repnz
push
mov
xor
ja
add
mov
push
sbb
mov
sub
js
push
int3
jl
lret
jecxz
cmp
daa
dec
arpl
sti
aas
jle
mov
jae
cmc
sub
stos
and
sbb
or
ret
mov
pop
push
popa
pop
jne
clc
shrl
xchg
xchg
or
repnz
repz
out
push
ljmp
rcl
push
ret
push
add
mov
test
dec
pop
cmp
ja
or
sti
repz
xor
int3
pop
filds
sub
movsb
cld
fs
arpl
xchg
loope
push
push
xor
ffreep
cmp
add
xor
in
fldt
mov
xlat
jl
popf
push
xor
fcmovu
jge
mov
sub
jge
pop
ret
mov
jp
dec
pop
push
xorl
xchg
xor
push
rcrl
pop
push
out
sarb
cmpsb
out
dec
shlb
gs
mov
mov
jnp
sarb
daa
fidivs
inc
dec
add
add
into
sbb
mov
sbb
cmpb
sub
dec
xor
push
push
or
push
into
jno
fwait
inc
lret
xchg
and
movsl
cwtl
push
rcrl
loop
and
jb
or
pop
sahf
rcr
dec
push
test
pushf
jae
arpl
das
or
mov
fs
arpl
mov
dec
and
dec
popf
mov
ret
cmc
jmp
adc
cmpsb
push
ss
in
pop
sbb
dec
andl
pop
fcomps
in
pop
pop
mov
pop
test
xchg
lret
dec
test
les
imul
insb
sbb
push
inc
dec
push
stos
mov
into
sti
lret
lods
imul
test
or
inc
fdiv
push
repz
aas
cmpsl
mov
inc
inc
inc
dec
loop
sarl
outsl
or
dec
je
pop
xchg
xor
xor
cmp
dec
inc
mov
fistpl
push
mov
push
mov
es
shlb
push
js
movsl
mov
cli
loop
adc
pop
or
inc
mov
mov
aas
or
pop
xchg
cmp
xor
stos
repz
scas
or
out
pop
push
rorl
lock
nop
jnp
sahf
cmp
iret
or
add
cmp
lret
pop
dec
push
mov
js
sub
adcb
lock
xchg
pop
sub
inc
movsb
std
inc
shll
xchg
imul
ficoml
sub
test
bound
jle
call
mull
mov
or
in
push
movsl
cmc
push
movsb
lret
iret
and
repz
sbb
out
stos
les
ja
lret
loop
mov
xchg
push
cld
idivb
add
dec
jmp
imul
fwait
cmpl
repnz
or
js
push
lods
out
xchg
scas
cli
mov
lahf
popa
dec
pop
dec
sub
cli
mov
jnp
out
push
mov
insb
push
sub
dec
repz
pop
cltd
and
mov
mov
lods
jb
dec
mov
mov
fs
pushf
inc
outsb
pop
xor
lock
jno
cld
jae
dec
inc
xchg
xadd
arpl
cwtl
dec
xchg
inc
push
ret
sbb
sbb
dec
ss
push
add
addr16
iret
addr16
pop
jecxz
mov
cld
pop
mov
fwait
pop
out
or
xchg
pop
out
sub
sub
xchg
loope
aam
cmp
pop
imul
xor
mov
aas
sti
mov
push
mov
js
cmp
cwtl
sti
push
xchg
and
fmull
mov
testl
mov
fadd
push
pop
pop
xchg
pop
xchg
mov
mov
add
push
mov
cmp
xchg
das
mov
jle
pop
dec
sub
add
ss
push
cmp
sub
lret
sbb
lds
dec
dec
adcl
cmp
mov
addr16
cmpsl
mov
popf
lret
inc
test
xorb
gs
jnp
icebp
sbb
setg
movsb
test
and
in
sti
repz
adc
inc
cs
adc
pop
repz
imul
mov
testl
push
dec
cmpl
xchg
arpl
shlb
push
mov
sbb
cltd
xchg
dec
lock
movsl
outsb
xor
and
pop
and
jp
mov
mov
cmpsl
mulb
sbb
mov
mov
sub
inc
mov
or
xor
ljmp
push
pop
sbb
imul
out
loop
pop
add
adc
adc
jle
push
push
sub
dec
or
addr16
xchg
aaa
push
sub
repnz
iret
push
jne
pop
lahf
pop
test
inc
add
aad
ret
daa
or
xchg
xchg
je
clc
scas
ljmp
stc
arpl
xor
cmpl
sarl
pusha
adc
mov
or
sub
mov
data16
scas
imul
xchg
sub
pop
imul
jecxz
mulb
mov
out
ffreep
adc
fwait
jle
enter
mov
mov
xchg
pop
into
in
lret
repnz
adc
pop
repnz
ret
test
in
jae
add
cli
call
push
ds
sbb
mov
xchg
test
fwait
shrl
adc
push
in
inc
cmpsb
sbb
clc
dec
or
dec
negl
fs
lret
push
lods
hlt
aam
sub
jecxz
ss
in
inc
std
push
pop
mov
into
and
dec
jl
mov
ret
and
cs
cmpsl
in
sub
les
push
outsl
sub
fisubl
xchg
add
sti
jnp
xor
push
push
add
mov
cmpsl
lock
scas
popa
jns
sbb
jae
stos
ret
or
pop
out
aas
arpl
push
or
push
fbstp
and
xor
rorb
call
push
icebp
addl
test
pop
cmp
push
repz
sti
xor
mov
das
and
and
adc
fistpl
shlb
popa
add
enter
lods
loopne
mov
aam
jae
cmp
cmpl
int3
push
fistps
or
pop
cmc
fisttps
loopne
xchg
dec
movsb
ret
push
xchg
shlb
sbb
fadd
sub
inc
stc
adc
addr16
fmull
aam
sarb
jp
fidivrs
cmp
add
push
cmpsl
int
incb
push
pusha
adc
xor
movsb
sbb
es
xchg
bound
adc
jle
xor
jmp
or
mov
jae
jmp
and
fcoml
add
push
inc
cmpsb
sbbl
push
add
scas
lret
xchg
dec
adc
xchg
dec
mov
xlat
les
inc
jae
sbb
out
cmp
cld
fsubrl
sbbl
or
or
dec
repz
mov
dec
xor
xor
inc
adc
push
in
out
jge
idivl
pop
lahf
addl
ja
xor
xlat
int3
outsl
inc
xchg
adc
push
xchg
mov
push
push
arpl
mov
cltd
fwait
dec
mov
outsl
mov
scas
sarb
fwait
pushf
notl
dec
in
push
lcall
jnp
addr16
pop
sub
add
popa
movsl
repz
and
jp
in
jg
faddp
cltd
mov
xor
std
mov
mov
movsb
outsl
mov
dec
cmpl
sbb
fcmovbe
mov
adc
xor
fisttps
into
out
dec
push
dec
and
es
movl
dec
pop
fcmovbe
inc
mov
push
shl
sbb
xchg
repnz
inc
in
cmp
outsl
xchg
cmpsb
addr16
fstps
dec
xor
aad
movsb
and
scas
fdivrl
jl
loop
lahf
mov
push
add
or
test
dec
cli
test
movsl
sbb
push
mov
aas
scas
xchg
xchg
loope
lret
jb
pop
add
pop
cli
adc
je
leave
cmpsb
mov
mov
push
mov
lds
daa
filds
adc
or
pmaxsw
aas
dec
fsub
push
xchg
add
repnz
xchg
add
scas
lret
ficomps
les
inc
dec
mov
insl
pop
pop
add
aad
pop
aas
xchg
das
aas
pop
inc
les
sbb
add
or
fsubrp
dec
pusha
jnp
dec
js
and
push
jge
sahf
cmp
jns
add
dec
test
or
mov
adc
imul
scas
adc
xchg
mov
subb
cli
jo
pop
mov
inc
inc
jp
aam
sbb
push
aad
test
mov
jo
dec
sub
mov
adc
mov
push
cltd
sbbb
cwtl
cmp
push
lcall
sbb
pop
in
scas
xor
inc
push
sahf
push
sbbb
js
mov
cmp
sbb
adc
push
sahf
and
add
sbbb
xor
adc
lock
mov
xor
mov
aad
cmp
dec
mov
xchg
into
loope
xchg
adc
jb
jo
mov
jns
pop
icebp
jae
xchg
int3
inc
sti
cmp
mov
ret
iret
leave
out
je
in
dec
shrl
repnz
cmpl
lret
fisttpll
xchg
in
pop
les
iret
push
out
loopne
aas
inc
sbb
ss
mov
jb
push
push
sahf
pop
fcom
outsb
lret
icebp
xor
add
cmp
repnz
iretw
pop
mov
mov
or
cmovge
cltd
mov
push
imul
testl
loopne
testl
dec
jb
loop
xor
aad
ja
bound
sti
jb
imul
push
imul
sub
cmp
leave
ja
in
and
cmpl
sbb
fcom
mov
mov
mov
mov
iret
shlb
inc
aaa
ret
adc
pop
sub
mov
sbb
lock
mov
loope
shll
pop
loop
jnp
cmpsb
pop
jnp
cld
das
daa
lock
mulb
ficoms
and
push
xchg
cmc
movsl
inc
out
pop
xor
and
fcmovnu
inc
dec
sti
push
test
fimull
xchg
xor
icebp
push
and
movhps
cli
jmp
sub
or
pushf
or
adcb
dec
ss
fdivrs
divl
iret
dec
pushf
lahf
lret
jo
in
xchg
iret
and
adc
mov
push
lcall
scas
and
mov
ret
xlat
pop
xlat
repz
outsl
or
xor
inc
aad
cmc
xor
arpl
pop
imul
scas
mov
pop
mov
repnz
jae
mov
inc
nop
push
fstpt
subb
jae
push
add
xchg
inc
xchg
sub
loop
xchg
js
addr16
pop
daa
or
stos
adc
movsb
stos
mov
and
mov
rorb
push
lahf
cmc
call
pop
ljmp
push
lahf
push
xchg
out
das
adc
fcoml
xchg
add
push
std
mov
mov
jo
loopne
pop
mov
inc
pop
xchg
ss
xor
sti
loopne
cmp
mov
loopne
sbb
mov
lods
mov
mov
rcr
jno
mov
popf
add
addr16
rsqrtps
sub
stc
and
pop
in
lret
fldt
cltd
push
outsl
addr16
sub
dec
cld
cmpl
pop
pusha
xchg
push
or
cs
in
sbb
dec
insb
fidivs
xchg
in
fidivl
push
mov
out
add
int3
adc
out
cmp
repz
xor
or
out
cmc
inc
and
fsubp
clc
mov
int3
popa
aas
les
xlat
mov
jl
hlt
clc
adcl
push
ja
jmp
inc
pop
mov
sub
addl
ljmp
aaa
lcall
jecxz
int3
fwait
and
jg
inc
int
lock
mov
xchg
gs
movsl
jecxz
rclb
jae
mov
pop
push
mov
insb
xchg
push
cmc
sub
enter
or
pop
push
pavgb
jbe
aaa
sbb
adc
fmull
sarb
sub
ss
das
sub
leave
in
xchg
mov
push
add
inc
xor
pop
add
or
pop
xor
sub
lock
add
gs
xchg
in
popa
push
xor
lock
push
sbb
out
sub
jecxz
call
lret
cmpsb
and
loopne
push
negl
enter
lods
sahf
lret
les
adc
test
lret
in
pop
cmp
xchg
adc
fucomi
iret
aaa
jnp
mov
ja
pop
mov
jns
cltd
jno
lcall
push
gs
dec
cmpl
mov
fwait
popf
xor
inc
int3
enter
lcall
push
xor
test
push
pop
fisubl
std
inc
fnstenv
jge
sahf
cmp
xchg
sub
or
out
out
fnclex
imul
cmp
icebp
cli
je
ljmp
or
pop
sub
mov
aam
sahf
hlt
xchg
scas
pop
insb
cmpsl
adc
mov
fildll
cwtl
fwait
xor
in
je
cmp
adc
or
mov
inc
lea
in
out
das
cld
inc
xchg
outsb
adc
pop
jne
cmp
scas
adc
fmull
jle
mov
sbb
sub
mov
jae
xchg
std
sbb
xchg
data16
push
mov
or
repnz
std
pop
mov
pop
push
xor
lret
lcall
scas
push
movsl
pop
andb
add
xchg
scas
arpl
jge
push
rcl
lret
mov
pop
push
sub
call
xchg
rol
loopne
leave
mov
push
sub
dec
stos
iret
xchg
jl
mov
testb
fbstp
xchg
popa
xchg
dec
or
out
daa
cmp
lret
pop
loope
xchg
xchg
inc
cmpsl
filds
cmp
jnp
or
sbb
mov
ret
push
loope
das
filds
add
push
adc
cmp
adc
scas
repnz
rclb
xchg
push
bound
mov
mov
sbb
cmp
cltd
mov
scas
jp
push
mov
pop
pop
lret
pop
cs
sub
cs
in
ljmp
mov
cmp
xor
adc
xchg
push
xorb
push
aad
or
push
mov
cmp
sub
repz
mov
adc
xor
jb
sbb
cmpsl
sti
das
push
lods
cmp
add
cli
rcrl
adc
ret
fwait
push
mov
mov
stos
push
xor
enter
adc
dec
push
push
ret
cmc
inc
adc
loopne
idivl
xchg
pop
push
inc
jecxz
mov
add
repz
or
push
add
sbb
aas
mov
sahf
mov
fidivrs
iret
or
or
js
rol
inc
aas
arpl
ds
into
mov
inc
data16
imulb
in
insb
xchg
icebp
mov
cld
insl
rcrl
les
mov
stos
cmp
dec
pop
outsl
je
ficomps
pop
dec
xchg
jo
in
bound
test
enter
repz
test
jne
mov
xor
outsl
cmp
fwait
mov
ljmp
shrb
mov
setae
fisubl
jbe
mov
rcl
lret
cmp
cmpsl
mov
xchg
push
psrlw
clc
scas
adc
cmpsl
or
cltd
popf
inc
cltd
cmpsl
sarb
xchg
jae
sub
shrl
mov
add
fildll
sub
inc
lea
out
xchg
add
lret
add
aam
paddsb
mov
xor
adc
sbb
mov
leave
mov
mov
or
popa
adc
outsb
push
call
pushf
mov
cwtl
mov
aaa
fst
mov
and
push
and
cmpsl
jb
sbb
mov
inc
dec
jge
int3
outsb
in
adc
rcrl
sub
push
jbe
data16
ss
lcall
pop
adc
add
add
ficoml
sub
pop
aad
sbbl
imul
cmp
pop
sub
rol
shll
sbb
test
call
pop
mov
pop
jae
dec
jbe
inc
add
jbe
and
pop
inc
sarl
push
rcrl
dec
aas
adc
cmp
ja
lea
ss
push
push
lahf
cmp
cwtl
inc
jbe
add
rclb
cmp
negb
shrl
and
and
addr16
xor
add
or
jnp
das
sub
sarb
rol
mov
cmp
add
jl
mov
js
iret
xchg
std
sbb
adc
fcmovbe
clc
jne
adc
xor
cld
xor
push
sbbb
pop
in
xor
pop
jp
lods
xchg
test
sub
out
fistpl
fsubrl
mov
push
mov
inc
push
xchg
or
jno
mov
mov
mov
mov
xor
mov
shlb
push
test
mov
mov
pop
jbe
leave
pop
repz
xchg
lret
xor
ja
xchg
jg
sahf
not
leave
sbb
aam
lahf
pop
adc
out
mov
push
mov
fisubrs
xchg
jbe
movsb
in
movsb
cmp
inc
xchg
mov
mov
leave
cltd
popf
sbb
inc
xor
rol
roll
inc
add
sub
pop
mov
ffreep
xor
mov
mov
shll
xchg
pop
outsl
decl
and
dec
inc
xchg
jb
and
ja
push
and
imul
push
shll
mov
filds
push
ja
rcl
xchg
push
xorl
push
sub
das
xchg
cmp
mov
shrl
dec
push
jl
stos
test
hlt
mov
stos
and
clc
or
shll
inc
mov
mov
outsb
out
add
insb
xor
and
cmp
repz
pop
sub
in
les
jge
xor
test
mov
sub
ljmp
ret
sahf
sub
dec
cli
aas
lcall
sbb
adc
jmp
adc
inc
test
mov
repnz
nop
sub
mov
inc
lret
cs
mov
xchg
xchg
bound
push
add
shlb
add
jns
cmpsl
adc
lret
sub
jp
xchg
push
adc
mov
add
icebp
sti
sub
cmc
inc
xor
fstps
addr16
and
scas
out
add
lea
in
sbb
sub
mov
in
js
push
xchg
sub
xlat
pop
cmp
stos
or
mov
or
mov
add
sbb
popf
pop
or
sub
test
push
xchg
std
lods
xchg
xchg
dec
pop
push
aas
push
sub
in
pop
fs
jl
in
add
cli
aaa
cmc
popa
xor
out
dec
pop
push
jp
mov
lods
xchg
out
mov
jne
xor
inc
int
sub
inc
lds
sub
cs
mov
shlb
aaa
sbb
aam
push
and
mov
lea
dec
sbb
lods
cmpsl
cmp
sti
stos
data16
add
sub
inc
push
cmp
popa
aam
pop
mov
jge
fwait
sbb
fbld
jp
xchg
fcompl
and
int
cmp
sbb
xchg
test
jg
int3
ret
dec
mov
ret
sahf
insb
dec
es
ja
pushf
loopne
mov
add
jecxz
dec
jae
inc
imul
bnd
add
ss
psubd
jbe
dec
orl
out
jno
xlat
in
jbe
and
dec
push
test
jg
je
hlt
mov
and
or
pop
insl
pop
je
push
mov
adc
loope
pop
fwait
imul
inc
enter
cmp
sub
push
sub
add
xchg
cmc
out
aad
mov
sub
adc
stos
mov
jecxz
bnd
mov
pop
or
out
fwait
ja
aam
dec
and
aas
add
addr16
sub
dec
xor
test
fsubrp
sbb
insb
add
pop
stos
xchg
add
arpl
add
push
pop
testl
cmpsb
mov
imul
sbb
adc
push
repz
dec
lret
pop
std
enter
dec
test
mov
ret
or
mov
in
lret
aad
ss
mov
pop
jp
aas
jnp
loop
sbb
ret
imul
outsl
and
into
inc
loopne
lods
fsubs
rol
xchg
xchg
test
dec
ror
xchg
xchg
and
inc
fcmovnu
inc
xchg
mov
mov
mov
cmp
bound
xchg
push
cli
popf
jnp
rorl
inc
push
shl
push
rcr
or
xlat
dec
movsb
cld
add
sbb
in
mov
bound
incl
repz
jg
addr16
call
aaa
nop
and
cmc
cmc
ret
lods
pop
int3
inc
stos
in
cmc
nop
mov
inc
divb
in
pop
pop
push
push
cltd
fimull
rcrb
lods
xchg
push
xor
pop
jne
jl
shl
enter
lahf
neg
push
leave
push
jmp
push
movsb
scas
out
dec
add
daa
pop
and
dec
jmp
bnd
mov
pop
stos
cs
xor
push
mov
adc
out
pop
ffree
push
scas
pop
pop
lahf
jb
cmp
icebp
xlat
aam
int
testl
pop
sub
mov
out
jnp
leave
out
sub
lcall
xchg
sbb
ret
iret
xor
mov
xchg
aam
cmp
sbb
orb
and
dec
cwtl
cmp
sub
sti
dec
imul
dec
icebp
or
inc
jg
outsl
hlt
aas
negb
push
clc
and
inc
fiadds
xor
repnz
mov
inc
pop
and
scas
repnz
stos
call
aam
push
mov
xchg
pushf
mov
pop
cli
mov
cmc
rcl
xlat
scas
popa
adc
cmc
aaa
cmpsl
aaa
jl
pop
ljmp
mov
cli
and
sahf
pop
stos
cli
and
jne
ret
lahf
inc
sub
movsl
out
gs
in
xor
adc
leave
sub
sbb
fnsave
std
inc
into
call
pusha
fildl
leave
adc
mov
cmp
out
hlt
mov
test
icebp
or
cmp
and
push
jnp
mov
dec
mov
xchg
les
push
into
pop
faddl
adc
in
lods
pop
out
scas
add
mov
orb
in
xor
inc
outsl
cs
fldt
xchg
data16
sti
scas
lret
mov
xchg
rol
push
push
pop
pop
inc
mov
push
cwtl
ror
sbb
sbb
rcl
pop
std
push
fsts
pop
mov
pop
adc
pop
out
lret
cs
mov
hlt
mov
mov
mov
and
cmp
sti
jecxz
push
in
das
push
jmp
cmpsb
cmp
repz
loop
enter
daa
enter
xchg
mov
jecxz
mov
repnz
aam
lcall
mov
out
xor
jmp
cmp
adc
clc
jno
int3
movsl
cmpsb
cs
mov
push
mov
xorl
mov
xchg
or
inc
push
xor
sbb
roll
inc
insb
xchg
dec
fildl
fdivs
lahf
ljmp
sub
fbstp
sub
or
andb
xor
mov
xchg
roll
inc
leave
lret
jl
pushf
idivl
insl
daa
hlt
inc
jb
push
adc
ja
push
rolb
mov
js
sub
mov
xchg
cmc
fxch
fsubrl
fimuls
mull
jmp
mov
pop
into
sub
mov
lods
filds
rolb
pop
iret
sbb
and
les
jo
pop
and
test
pop
sub
stos
dec
test
out
pusha
mov
cli
push
imul
loop
mov
xchg
insb
mov
repz
ljmp
or
movsb
cmp
jmp
push
push
iret
cmp
fistpll
add
leave
cli
inc
sbb
inc
cmp
lret
push
aam
cli
jg
outsb
push
cmpsl
and
int3
push
data16
adc
cmp
aas
lcall
xlat
jns
cli
pop
sub
jmp
push
pop
pop
jo
sahf
dec
cmpsl
outsl
inc
jl
outsb
add
mov
subl
sbb
loopne
js
call
cltd
sub
aam
ja
test
or
pop
jbe
lret
arpl
call
aas
cmp
mov
pop
imul
dec
push
jp
mov
xchg
lock
xchg
adc
add
inc
dec
scas
push
sbb
fmull
add
cmovne
stos
or
in
stc
fwait
lea
mov
push
repz
and
jb
lret
pop
insb
sbb
loop
out
sub
xor
xlat
ss
ljmp
add
mov
xchg
cmp
add
dec
mov
sbb
lret
jg
out
int
inc
aam
sbb
mov
pop
fnstsw
mov
out
inc
stos
jle
mov
xchg
or
in
es
or
jp
vpperm
cmp
cmp
fidivrl
jp
dec
mov
cmp
aad
or
addl
push
enter
orb
icebp
sbb
mov
outsl
mov
mov
pop
xchg
pop
mov
mov
pop
nop
and
mov
and
insb
fwait
nop
outsl
lahf
sub
hlt
fwait
lcall
cmp
test
divb
mov
pop
out
push
mov
or
sahf
sahf
xchg
mov
sub
add
mov
xchg
clc
lret
fsubrl
out
cmc
cld
sahf
lea
mov
and
sub
pop
ja
xor
shlb
sbb
out
mov
mov
iret
sub
mov
sbb
dec
xchg
iret
sbb
imul
es
mov
pop
leave
inc
daa
jecxz
lea
cmp
mov
or
mov
pop
or
sub
sahf
cmpsl
fsubp
sub
mov
or
jg
lea
or
jmp
cli
push
mov
shll
in
push
xlat
or
push
aam
shlb
cmp
das
sub
jae
scas
sbb
mov
in
jo
mov
mov
test
invd
ja
inc
push
jnp
mov
mov
sti
dec
or
fisubl
lret
mov
loope
add
cmp
clc
je
sub
and
jg
loop
fwait
add
inc
xor
cmp
jle
int
cmp
inc
out
call
bound
mov
idiv
sub
ror
aaa
sbb
addr16
es
jp
push
mov
xchg
mov
mov
mov
fistl
inc
ficoml
jb
sub
pop
push
cmp
xchg
pop
mov
stc
dec
xchg
xchg
pop
sub
mov
pop
insl
dec
lret
insl
movsl
cli
mov
cld
mov
mov
sbb
fcompl
sbb
negl
xor
mov
and
jecxz
jnp
stc
aas
js
xchg
inc
incl
jo
xchg
cltd
test
inc
sbb
popf
mov
xor
inc
sbbb
out
lret
daa
adc
popa
adc
push
push
sbb
pop
inc
cltd
outsb
mov
cmp
enter
fidivl
jl
iret
dec
adc
pop
push
cli
cmp
xor
outsl
stc
lahf
insl
mov
pop
stc
push
in
xor
daa
das
dec
ss
push
sub
pop
imul
sbb
add
xor
mov
dec
por
cmp
or
les
mov
sbb
popf
in
mov
das
dec
dec
ja
inc
cmp
into
insb
push
cltd
aam
xor
daa
faddl
aam
sbb
cltd
dec
ficoms
iret
out
and
out
and
and
fdivrs
jg
mov
frstor
push
jo
pop
pop
stos
xchg
sbb
fwait
inc
sbb
stos
bound
adc
sub
add
mov
int3
jp
inc
mov
mull
mov
xor
mov
lcall
sti
adc
inc
ss
fidivrs
pushf
aaa
add
adc
inc
jb
add
jae
adc
repz
lods
js
and
push
mov
jb
leave
mov
stc
or
daa
jg
xchg
mov
pop
mov
xor
lock
xchg
dec
sub
stc
or
std
pop
cmp
sti
pop
add
sbb
addl
and
sub
lock
inc
dec
add
mov
pop
xchg
push
iret
pushf
sub
mov
jb
mov
stos
or
jp
push
stc
data16
into
movsl
dec
jo
scas
xor
daa
xor
mov
and
mov
mov
mov
add
arpl
pop
or
mov
mov
jnp
nop
pushf
in
arpl
int3
xor
out
movsb
aaa
jle
js
push
mov
xor
fidivl
cmp
fdivrl
sbb
mov
xchg
inc
xor
fucom
imul
pop
imull
sti
fpatan
pusha
std
lahf
sbb
ret
mov
hlt
mov
mov
or
cmp
xchg
out
adc
push
adc
and
xor
hlt
push
push
jmp
shll
int
nop
popa
mov
xchg
scas
adc
int
loope
sub
mov
repnz
push
sbb
sbb
xor
adc
mov
fs
pop
dec
andb
fs
flds
jp
lret
jle
sbb
js
jnp
movsl
push
cmpsb
jb
jbe
out
lret
out
flds
bound
sub
add
lahf
and
negb
xchg
or
repnz
in
insb
pushf
xchg
inc
xchg
mov
clc
pushl
std
popa
xor
mov
jbe
aas
push
adcl
daa
mov
mov
pop
mov
mov
outsl
outsb
mov
cwtl
popf
push
mov
lock
cmp
fwait
sub
mov
rorl
add
gs
adc
in
push
shlb
fld
jp
and
cli
or
out
xor
orb
jp
add
or
mov
adc
add
stos
add
mov
jmp
pop
jg
lods
dec
pop
inc
sbb
arpl
mov
jge
dec
imulb
and
addr16
jmp
or
insb
inc
mov
xchg
test
sub
sub
insb
push
and
mov
testl
pop
fbld
mov
lods
out
push
push
mov
mov
cltd
adc
flds
mov
shll
push
mov
add
shl
sub
pop
mov
jb
sbb
push
outsb
lahf
sbb
arpl
xlat
fwait
mov
sbb
sub
sahf
pop
aas
loopne
out
mov
push
or
pop
icebp
popf
pop
addr16
imul
push
lods
es
loope
mull
xor
mov
mov
fnstcw
fmuls
adc
add
out
and
lock
fildll
pop
sbb
xchg
rclb
lds
or
pop
mov
fadd
push
mov
jne
in
sbbl
pop
pop
pop
push
lds
sbb
mov
lahf
js
or
pop
or
mov
stos
dec
je
mov
xor
pop
mov
idivl
cmp
sub
out
lret
loope
push
or
xchg
icebp
pop
fucomip
inc
fwait
sbbl
test
bound
shrb
scas
fdivl
pop
imul
jns
xchg
jno
mov
jp
inc
loopne
insb
test
sub
scas
xchg
cs
in
inc
jnp
cmpsb
mov
movsl
push
fs
repnz
sbb
js
mov
pop
in
enter
fxch
lahf
int3
lret
mov
pop
sti
adc
dec
outsb
jne
jge
xchg
imul
jp
pop
dec
jo
cmp
add
xchg
mov
stos
inc
test
jmp
std
data16
das
rolb
test
out
scas
sbb
inc
xchg
test
out
pushf
data16
pop
or
fisubs
inc
and
ret
andb
insb
scas
mov
add
mov
and
sbb
adc
das
or
mov
rclb
mov
loopne
fldt
and
jg
lahf
outsl
sbb
xor
enter
sbb
push
ret
xchg
cld
xchg
pop
leave
xchg
jbe
popa
fnstenv
into
inc
xchg
in
add
ret
in
pop
jg
add
mov
fisubl
push
cld
pop
push
decl
ret
pop
cmp
lock
fs
int3
mov
dec
test
jne
jno
cmpsl
sbb
xchg
push
lret
test
push
or
sub
mov
and
pop
inc
fisttps
es
cmp
push
add
xorl
js
ljmp
adc
stos
dec
insb
inc
sbb
or
push
pop
in
pop
pop
inc
lahf
iret
lods
xchg
movsl
shrl
aaa
cmpsb
mov
insl
mov
add
mov
dec
rcl
push
mov
loop
or
push
in
js
and
jno
jl
repnz
insl
sarl
loope,pt
mov
sub
cmp
cs
jle
cmp
pop
and
call
pop
loopne
cmp
push
fwait
aas
lcall
test
fstps
jne
push
mov
inc
out
fcompl
or
cmc
adc
cld
fcompl
pop
test
inc
mov
popf
scas
test
cli
or
xor
xlat
aad
in
ret
arpl
popa
mov
pop
xor
mulb
jbe
mov
lahf
push
test
inc
xchg
add
pop
jp
stos
adc
pop
popl
aaa
rorb
rolb
or
sbb
push
sub
mov
or
mov
ret
outsl
orl
rorl
cmp
xchg
insb
enter
aad
jo
fucomp
add
outsl
add
js
lock
pop
mov
sub
pop
jecxz
xchg
push
pop
pop
nop
and
or
sub
inc
push
lret
fninit
mov
insl
dec
cli
dec
xchg
and
xchg
push
dec
ljmp
pop
stos
mov
bound
and
sub
lahf
fs
and
test
or
inc
lret
sarl
out
cwtl
call
outsl
pushf
int3
lret
mov
inc
xor
imul
xchg
adc
fwait
decl
pop
int3
mov
add
mov
sub
mov
and
inc
gs
hlt
pop
cmpsl
loopne
nop
mov
rorb
sbb
dec
add
aaa
mov
mov
in
fwait
lret
pusha
or
int3
leave
loope
sahf
scas
xor
aaa
adc
cli
jae
pop
push
add
dec
cmp
mov
cmpb
ret
pusha
inc
xchg
repnz
inc
xlat
xchg
cmp
cmc
jecxz
fldl
xchg
cmp
out
xor
dec
dec
hlt
ja
mov
push
leave
xlat
rcr
pop
or
push
call
movsl
imulb
fimuls
decl
fidivrs
js
cmp
sub
outsl
mov
nop
mov
adc
or
xor
xchg
aas
mov
insl
call
rolb
leave
pop
lahf
pop
hlt
pop
call
pusha
test
push
mov
xor
push
lcall
xchg
xchg
ret
adc
jl
inc
mov
mov
stc
pop
test
addr16
mov
pop
inc
inc
cmp
xlat
mov
mov
dec
jle
rcrl
sub
and
ret
pop
adc
call
mov
je
mov
pop
mov
data16
lcall
out
dec
aaa
dec
mov
and
in
pop
lea
sti
cmp
adc
push
xor
sbb
add
testb
js
repnz
sbb
mov
inc
mov
sub
js
in
sbb
mov
jecxz
dec
mov
outsl
or
enter
mov
cli
xlat
push
arpl
iret
cmpsb
loop
dec
daa
xor
xor
and
and
push
jmp
ds
cmp
push
shrb
sub
sarl
ficompl
les
xor
leave
cmp
sbb
jns
push
je
repz
mov
inc
adc
push
inc
leave
xchg
mov
out
shll
and
or
icebp
cmpsb
in
inc
clc
lods
jle
cmp
and
adc
out
mov
mov
mov
mov
mov
ficoml
mov
mov
xchg
shl
jl,pn
daa
ror
push
mov
pop
ret
aas
daa
jne
mov
lahf
in
fistpl
das
out
push
push
jmp
pop
leave
push
lahf
js
decl
xor
sti
xchg
mov
push
jle
xorl
repnz
cli
loope
bnd
inc
repz
outsb
iret
mov
jb
pop
inc
iret
in
jbe
testl
out
nop
dec
hlt
inc
push
pushf
add
loope
sub
adc
pop
cmp
push
outsb
mov
push
pop
sbb
jg
cmpsl
arpl
sbb
inc
sbb
lcall
insl
ss
adc
xchg
and
push
mov
shrl
add
add
loopne
cs
insl
test
and
jl
fstl
bound
push
idivb
jae
aad
xlat
into
lock
xlat
sbb
scas
xchg
mov
adc
int3
add
insl
adc
daa
lret
push
cmp
aam
lea
mov
std
xchg
ror
movsb
xor
cmp
dec
lret
adc
lret
xor
hlt
repz
in
cmp
mov
jecxz
push
mov
mov
mov
stos
sti
fisubrs
data16
lock
xor
mov
mov
mov
inc
cmpsb
pop
js
inc
pop
pop
fsts
sub
loop
repz
es
aam
mov
mov
fstpl
inc
mov
mov
adc
jne
outsl
insl
jbe
push
dec
jno
or
jmp
out
and
fdivl
xor
pop
incl
fildll
loopne
pop
dec
outsb
js
push
sarl
fadd
cmc
outsl
pop
in
xor
repnz
and
shll
dec
lret
lahf
mov
xlat
dec
js
div
out
adc
mov
jbe
xchg
movsb
pop
ds
mov
pop
imul
lds
add
mov
ja
mov
pushf
scas
xchg
cmp
or
sub
aam
mov
jg
aas
je
out
push
and
xchg
adc
dec
push
ret
es
arpl
repz
ret
ja
jb
ljmp
les
ljmp
jmp
sub
pop
adc
xor
fsubrp
mov
bound
mov
ljmp
pushf
pop
or
mov
inc
inc
inc
cmpsl
enter
shll
dec
out
pushl
lcall
adc
int
scas
mov
in
sub
mov
pavgw
scas
adc
add
in
dec
mov
xchg
dec
mov
addr16
stos
ja
xor
repz
ret
dec
dec
adc
jecxz
ret
pop
cwtl
fdivrs
fdivrp
outsl
aaa
add
inc
psraw
xor
pop
nop
enter
rcr
pop
hlt
test
adc
test
dec
divl
data16
sti
push
mov
mov
pop
jo
inc
or
mov
pop
mov
pop
scas
mov
xorl
mov
or
ret
cwtl
fcmovnbe
test
jb
cmpl
mov
push
hlt
jmp
jl
out
dec
push
xchg
dec
mov
sbb
les
inc
xor
sbb
cmpsl
push
fbstp
jge
push
inc
push
add
add
stos
jno
outsl
cmp
mov
insb
xor
jnp
scas
jg
push
xchg
data16
test
cwtl
sub
aas
out
cmp
add
shrb
push
daa
lahf
xor
mov
dec
xlat
cmpsl
inc
push
ja
cmp
push
in
stos
add
stos
lock
sti
jle
aaa
in
dec
mov
rolb
test
sub
push
es
lods
call
jnp
push
or
and
inc
pop
pop
int3
lahf
add
jge
js
es
xchg
test
cwtl
adc
pop
fcoml
cmp
in
pusha
cwtl
pop
fistl
aas
jo
gs
aas
push
add
pop
xlat
push
push
mov
hlt
push
aaa
sub
outsb
mov
push
out
or
lcall
mov
mov
in
or
xchg
rcr
push
scas
fistl
testb
mov
aas
int3
out
aas
and
sbb
xchg
xchg
jg
sbb
mov
jle
repz
jmp
inc
jns
dec
pop
jnp
or
dec
cmpsl
inc
push
dec
push
adc
xor
cmp
call
add
stos
mov
adc
xor
in
aam
adc
jnp
mov
gs
nop
ret
mov
inc
loopne
sbbl
ret
add
scas
xlat
pop
jnp
push
aad
scas
mov
daa
pop
sbb
jge
fwait
pop
daa
cld
adc
cld
sbb
movaps
add
adc
shlb
dec
sahf
pop
seto
imul
push
shrb
mov
in
sbb
lods
lcall
push
jecxz
jo
xchg
aas
shlb
in
xchg
mov
jle
arpl
push
out
mov
mov
inc
inc
ja
ljmp
test
jnp
mov
stos
sbb
sub
aaa
mov
pop
mov
xor
loopne
push
add
push
mov
xorl
add
push
aam
pushf
mov
cmp
or
pop
add
add
cld
ja
scas
call
movsl
mov
aas
mov
xchg
xchg
inc
sahf
ss
or
mov
xchg
lock
pop
testb
stos
iret
sub
pop
xchg
sbb
fwait
jp
nop
scas
mov
adc
fistpll
add
jbe
cs
add
cmp
outsl
push
dec
movsb
dec
imul
fwait
popf
dec
add
jmp
jp
mov
mov
scas
hlt
inc
cli
cmp
pop
pop
rclb
adc
fs
out
movsl
push
sahf
bound
mov
es
lods
jmp
ret
jmp
jmp
pop
aas
call
int3
ret
repnz
sbb
push
into
push
mov
push
xchg
aaa
sarb
adcl
xor
scas
adc
aaa
loopne
pop
shrl
es
das
mov
stos
push
push
and
scas
out
mov
mov
ss
jbe
pop
ss
mov
iret
and
std
ja
xchg
adc
or
push
ja
mov
sti
ja
inc
push
or
imul
jg
mov
sti
sub
jno
aad
fstpt
pop
es
mov
stos
ret
jmp
lds
sub
mov
iret
lcall
loop
es
iret
adc
idivl
flds
sub
pop
mov
pop
pop
pushf
loopne
mov
push
je
cmpsb
inc
xor
test
in
daa
mov
outsl
jnp
jnp
push
cmp
das
jg
inc
pushfw
or
mov
xor
subl
add
cli
push
dec
out
jb
xor
jmp
jae
shll
scas
jl
fmul
push
sub
ret
jae
jg
mov
pusha
enter
or
adc
dec
sub
lahf
dec
xorl
es
cmpb
adc
push
lret
shl
mov
leave
xor
xor
push
jo
xchg
jbe
push
push
cmp
pop
dec
cmp
xchg
dec
arpl
scas
ds
push
ret
pop
jno
addr16
pushf
scas
test
xlat
sbb
adc
lea
push
shll
xlat
repnz
aam
mov
dec
push
stos
mov
xor
pop
cmpsl
add
cmp
in
and
add
rorl
test
loopne
dec
lea
xor
xchg
mov
imul
and
xor
mov
mov
cmp
sbb
lds
jge
mov
cmp
aas
pop
jno
loop
xchg
fnsave
out
dec
push
and
in
mov
add
scas
sub
adc
das
adc
xchg
lods
push
cmp
cli
sbb
mov
gs
dec
jne
jbe
test
sub
push
pusha
cwtl
or
lahf
sbb
int3
jmp
fwait
pop
out
pop
sbb
iret
sub
enter
fst
into
dec
jb
adcl
mov
lea
add
rorb
dec
sub
mov
dec
jbe
cmp
bound
cmpsl
ja
mov
jle
cli
add
push
loop
mov
iret
shlb
fwait
mov
push
ret
cmp
fcoms
mov
jl
xchg
push
rorb
lret
push
push
xchg
stos
push
loopne
jbe
ljmp
jns
mov
popf
ljmp
mov
pop
into
mov
stos
add
lret
mov
cmp
pop
stos
mov
or
cmp
xorb
or
adc
xor
xchg
fildll
or
push
imul
inc
outsl
arpl
lcall
or
daa
xlat
sbb
inc
jle
mull
pop
pop
fbstp
sbb
xchg
data16
mov
sbb
pop
ja
iret
jae
push
inc
fsubr
mov
outsb
xor
xchg
out
xlat
pop
pop
das
pop
xor
xor
mov
in
push
scas
rcr
adc
dec
or
pop
aad
cltd
mov
pop
loopne
dec
xchg
dec
cld
rcl
add
adc
int
loope
mov
lret
in
out
xor
dec
cmc
push
out
test
push
fs
ret
and
sbbl
inc
bound
cmp
cmp
sub
aam
pop
dec
add
outsl
sub
adcb
mov
in
repz
mov
dec
mov
es
jnp
add
psubusb
push
aas
fadd
xlat
pop
ret
jae
and
or
ljmp
movsl
nop
sbb
add
ja
mov
add
leave
lret
adc
mov
fs
cmp
pop
popf
jmp
fwait
sbb
mov
arpl
loopne
sti
ljmp
mov
add
xor
sbb
pop
push
iret
sti
dec
jae
dec
iret
loopne
pop
mov
pop
xchg
lods
mulb
lahf
aaa
xchg
icebp
and
cmp
mov
mov
je
dec
adc
push
sbb
es
sbb
cmc
xor
mov
outsb
fadd
dec
inc
dec
pop
jb
shlb
jns
int
mov
rcll
sub
adc
loop
cmpsl
fsub
outsb
cmpsl
xchg
out
rorl
pop
enter
lahf
xrelease
mov
ds
movsl
mov
ja
xchg
push
pop
std
pop
les
cmp
and
imul
in
loope
push
mov
mov
mov
sbb
ljmp
xor
pop
sbb
push
pop
mov
mov
dec
mov
sub
xor
in
es
add
daa
das
cmpl
mov
mov
daa
push
add
int3
pop
jecxz
rcll
in
xchg
shl
pop
adc
jl
push
lahf
mov
fcomi
add
sbb
out
sub
pusha
lahf
mov
int
loopne
sahf
cmp
inc
out
cmp
lods
inc
push
push
sub
pop
xchg
aam
xchg
cmp
or
and
call
test
fmull
sbb
xor
and
mov
xchg
cltd
mov
cmp
dec
mov
out
jns
popf
je
pusha
popa
cmc
push
sub
dec
lret
stc
or
xor
push
sbb
sti
lods
pop
jno
cmpsl
mov
cli
sahf
cmp
inc
les
js
lret
push
adc
jmp
sub
mov
lods
sub
mov
sub
rcl
ficoml
add
adc
subb
sub
or
mov
test
addr16
mov
xor
psraw
cmp
mov
jo
mov
fbld
repz
je
bound
jge
nop
add
mov
ret
adc
fstps
rorl
lods
fbld
cmc
dec
scas
inc
das
adc
mov
mov
jmp
inc
or
mov
mov
outsb
and
jp
mov
dec
gs
scas
pop
mov
shlb
imul
das
ret
into
mov
push
call
xor
xchg
inc
dec
push
xlat
das
movsb
adc
mov
push
outsl
imul
pop
ljmp
add
cmp
sub
fadd
pop
in
mov
xchg
call
stc
dec
std
mov
aas
push
daa
ret
xchg
loopne
outsb
mov
aas
pop
fidivl
mov
sbb
cwtl
and
jno
ret
test
faddl
popa
add
pushf
push
dec
sub
mov
addr16
repz
fwait
xchg
or
add
out
sbb
daa
cwtl
outsb
pop
lds
ffreep
push
xchg
clc
in
jne
mov
test
js
shlb
aaa
pop
test
mov
mov
mov
popa
push
xchg
inc
js
add
aaa
jge
or
jg
jnp
mov
mov
add
dec
push
mov
ret
pop
pop
or
shlb
loope
push
in
or
daa
pop
das
incl
leave
push
cmp
add
mov
cmp
xchg
mov
shl
adc
sarl
movsb
push
inc
mov
adc
sub
push
dec
lret
outsb
jae
and
pop
mov
sub
adc
mov
test
pop
jnp
add
cmpl
push
and
dec
jae
jmp
icebp
fistl
push
mov
push
pusha
std
nop
dec
push
xchg
test
lcall
xor
incb
mov
adc
fistps
aaa
out
or
cmp
std
aad
jmp
cmpsl
stos
jp
mov
rolb
mov
stc
das
cmp
imul
mov
add
mov
mov
adc
out
pop
mov
lahf
mov
repnz
sub
hlt
xor
add
add
sbb
adc
das
imul
sbb
clc
inc
dec
mov
jg
nop
stos
mov
fs
inc
inc
xchg
or
mov
push
and
push
jecxz
sbb
out
or
cmp
mov
nop
divl
xchg
stos
cmp
dec
dec
inc
stos
mov
pop
scas
mov
adc
jae
out
std
adc
adc
iret
aam
arpl
arpl
loope
fwait
scas
or
lock
mov
jge
xlat
pop
test
jb
or
add
inc
aaa
mov
xchg
jge
nop
fsub
aad
pop
sqrtps
adc
sbb
mov
dec
cs
clc
adc
push
data16
aaa
dec
out
fwait
cmp
cmp
cltd
dec
sti
cmp
mov
mov
out
fwait
sub
cmp
cmp
adc
pusha
insl
mov
dec
cmpsl
adcb
repnz
dec
iret
xchg
mov
cmp
inc
mov
jp
push
enter
sahf
sub
xorl
incl
pop
hlt
add
in
pop
sbb
imul
add
sub
and
loope
xchg
imul
fimull
cltd
adc
gs
mov
es
mov
sbb
jle
icebp
lahf
divl
dec
clc
sub
mov
aas
int3
cmp
divl
call
aas
rcll
inc
sub
dec
fsubp
jo
lcall
movsb
and
clc
fwait
stos
sbb
das
stos
mov
and
adc
jnp
push
std
mov
das
icebp
cmp
repz
ret
mov
push
lcall
pop
stos
out
aaa
adc
push
notl
pop
mov
cmp
jg
xchg
or
jae
les
loope
add
insb
pop
xchg
jno
jle
pop
into
mov
repnz
ljmp
add
sub
mov
xchg
push
loopne
jmp
leave
xchg
inc
pop
scas
popa
mov
mov
pop
inc
xchg
dec
cwtl
inc
sahf
imul
imul
test
out
jbe
icebp
dec
mov
push
daa
rorl
push
mov
or
pop
jo
pop
mov
dec
aaa
mov
mov
scas
inc
pushf
inc
push
push
mov
js
fnstenv
cmp
or
out
imul
or
inc
sbbb
push
mov
dec
in
outsb
lret
adc
lahf
jmp
js
inc
cmpsb
pop
sbb
pop
and
pop
xchg
iret
mov
cmp
pop
and
pushf
mull
aaa
jg
pop
popa
ljmp
mov
jecxz
outsb
loop
mov
rorb
mov
fmul
xchg
cmp
daa
add
decl
mov
push
sub
jl
ja
and
cmc
pop
push
in
daa
xchg
jmp
lds
enter
stc
movl
sbb
mov
push
xorl
lds
inc
sahf
shr
sub
ss
sub
popf
psllq
cmp
out
mov
cmc
mov
scas
adc
xor
mov
cmp
mov
frstpm(287
int
inc
sub
rcr
test
xor
cmp
lret
hlt
jo
push
inc
stos
jo
pop
jns
lock
out
out
sub
and
std
scas
mov
ljmp
inc
fdiv
outsl
adc
mov
lret
mov
insl
xor
mov
jmp
and
mov
push
xor
test
mov
outsl
fwait
div
int3
rolb
lods
call
daa
jp
xchg
cmp
mov
scas
lea
push
pop
jnp
cmp
mov
pop
cmp
push
pop
sub
cmc
push
sbb
sub
iret
inc
scas
sbb
adc
fs
mov
xchg
push
jno
push
cmp
inc
into
add
push
jb
xor
mov
jnp
push
adc
xor
pop
sbb
mov
aad
push
jle
mov
adc
mov
arpl
aas
and
cld
arpl
shl
rol
pop
fwait
lret
rclb
lret
bound
sbb
adc
jae
ret
insb
jnp
dec
jo
outsb
or
bound
repnz
pusha
xrelease
and
cmpsb
nop
cmpsl
cwtl
clc
jg
test
cld
in
and
mov
shll
sub
jnp
roll
loop
inc
mov
jecxz,pn
pop
xchg
xchg
dec
cs
out
aas
mov
arpl
pop
sti
lret
jmp
sbb
push
mov
out
dec
rclb
sub
mov
jne
dec
mov
int3
dec
or
pminsw
and
test
jg
lock
lahf
into
rcl
jae
push
idivl
adc
or
test
pusha
mov
cmc
sbb
ss
sub
sub
jecxz
sbb
inc
out
pushf
lret
cltd
mov
sahf
inc
add
mov
sbb
add
into
loopne
or
repnz
stc
pop
sbb
sub
test
inc
mov
insb
push
sub
push
adc
imul
pop
cmpsb
and
fbstp
and
mov
ret
mulb
setp
repz
call
les
xchg
iret
loop
divl
or
jnp
pop
jmp
pushf
ja
das
mov
sub
push
bound
push
jne
cmp
dec
sbb
decl
jae
dec
push
or
jp
or
push
ja
inc
popf
sbb
fimuls
add
pop
fwait
adc
and
jno
cmp
mov
mov
cwtl
mov
idivl
pop
add
xchg
jle
push
sbb
xchg
pop
xchg
dec
add
add
subb
loop
xchg
jg
dec
in
or
jae
in
je
in
dec
push
fsub
shlb
or
shll
dec
stos
jns
pop
stc
xchg
jmp
mov
das
xlat
es
lods
mov
mov
cmpsb
adc
dec
jecxz
inc
imul
dec
imul
jle
hlt
fdivrs
xor
data16
js
xor
sbb
ljmp
fs
push
imul
pop
xchg
mov
ja
movsl
jnp
subb
add
push
inc
test
bound
out
add
and
mov
inc
adc
pop
out
not
cvtpi2ps
push
push
jae
scas
push
or
ds
fbld
cmp
negl
xor
test
pop
add
lds
cmc
and
pop
dec
mov
ret
negb
shll
repz
ss
pop
mov
int
xchg
ret
imul
es
arpl
jmp
push
mov
inc
adc
lcall
pop
and
roll
mov
repz
pop
mov
inc
sub
push
lods
sub
xchg
out
rcpps
adc
inc
orl
fldz
dec
cmp
fistl
inc
jg
jge
fsubrs
out
and
imul
sbb
or
jp
mov
subb
or
mull
sbb
push
jg
icebp
sub
xchg
cmp
xor
push
jecxz
pop
push
adc
mov
fdivr
mov
out
ja
mov
js
xorl
orb
lcall
cmp
jmp
pop
jnp
xchg
dec
fcmovnbe
aas
xchg
push
les
xchg
mov
lcall
dec
add
jp
jge
xchg
fcomip
xor
pop
nop
jg
lcall
jno
sahf
add
xchg
jge
arpl
and
cmp
data16
ljmp
xor
cmp
out
xlat
mov
nop
gs
insb
arpl
pop
adc
and
orb
pop
inc
mov
lahf
ss
test
test
and
push
aam
mov
sbb
add
add
lret
mov
pop
rcrl
jmp
mov
xor
jp
mov
xchg
pusha
sbb
jl
dec
mov
jp
repz
lret
jmp
daa
xchg
fwait
js
pop
push
call
push
pop
arpl
pushf
push
push
cmpsb
push
mov
enter
inc
scas
mov
fwait
lret
mulb
inc
xchg
add
sahf
data16
xchg
push
dec
mov
popf
loopne
stos
imul
push
or
or
cs
adc
push
mov
mov
jle
arpl
mov
lret
jg
test
and
jmp
aaa
shll
mov
pop
les
repnz
aaa
xor
mov
sahf
push
jb
push
add
je
int
call
fdivrl
mov
cltd
jle
fstps
inc
pop
cmpsl
jae
lahf
nop
push
jnp
fnstenv
jne
and
mov
out
jg
int
lahf
aas
ret
mov
test
icebp
inc
dec
sbb
add
lds
daa
jo
inc
jmp
lea
stos
pop
gs
pop
mov
add
int3
pop
mov
mov
inc
cmp
pop
mov
inc
mov
mov
xchg
and
sub
repnz
andb
xchg
mov
shrl
cmp
mov
push
mov
add
mov
ljmp
mov
xchg
adc
adc
sbb
push
cs
aaa
cltd
jmp
sar
sbb
lds
es
scas
aam
cmc
inc
lock
adc
scas
js
stos
inc
data16
movsb
sbb
scas
xor
add
decl
jg
or
mov
xor
jl
sbbb
mov
mov
or
jbe
outsb
insb
or
das
sub
lcall
cltd
inc
push
xchg
sbb
movsl
imul
or
pop
movsb
icebp
dec
imul
fldl
shll
mov
sub
fsubrs
inc
in
mov
aas
cmp
scas
lret
add
push
cwtl
dec
shr
je
push
cld
fucomi
jmp
dec
or
mov
stc
outsb
pop
fbld
jo
outsb
jecxz
mov
pop
loope
sbb
shl
cwtl
arpl
mov
adc
mov
inc
or
fnsave
sub
adc
fnstenv
punpckhwd
mov
arpl
inc
scas
inc
mov
jmp
mov
pusha
mov
pop
sub
sub
fisttps
in
das
cmpsb
dec
insb
pusha
test
outsb
mov
jmp
flds
jo
leave
xor
mov
shlb
clc
addr16
sub
insl
pop
add
add
jnp
pop
mov
pop
inc
dec
pusha
xor
dec
cwtl
jecxz
fs
push
lods
sbb
es
mov
lods
cmp
xchg
pop
fs
out
xlat
or
cmpsb
loopne
adc
xchg
fisubs
inc
gs
ja
std
cmp
and
jmp
jnp
jae
xor
xor
xor
sbb
dec
dec
movsb
fists
pop
inc
or
test
inc
stos
lahf
call
jecxz
jmp
std
hlt
jmp
push
aas
add
insb
push
lods
sarl
cmc
push
xchg
into
pusha
fimull
and
lcall
lahf
jno
add
xchg
sarb
sub
fcomp
lods
and
insb
pop
imul
sbb
pop
jmp
pop
adc
sbb
jae
in
rcrb
lcall
lock
dec
dec
mov
or
lcall
jae
mov
arpl
add
sbb
lods
adc
loop
sbb
xor
addl
mov
cmpsl
iret
ja
test
lret
and
daa
test
jecxz
ss
mov
aas
push
cld
pop
mov
push
mov
fs
stos
cmpb
popf
and
sub
and
lcall
mov
sti
inc
stc
xchg
and
inc
fldt
add
outsl
pop
movsl
jo
push
ret
aad
call
leave
icebp
out
and
scas
cmpsl
test
mov
push
pop
bound
add
out
jp
mov
inc
pop
fiaddl
hlt
push
mov
jno
cmpsl
daa
into
mov
scas
push
cmp
fimull
in
mov
lcall
dec
cmpsl
xrelease
push
or
cltd
or
sti
pop
mov
xchg
mov
xchg
fstl
je
outsl
cmp
scas
add
lcall
int3
js
push
shl
mov
mov
sbb
sub
dec
dec
dec
loop
movsl
out
outsl
test
sbb
mov
inc
dec
mov
repz
arpl
xchg
mov
popa
xchg
mov
or
adc
jo
aaa
add
test
sub
stc
mov
mov
stos
or
mov
mov
je
or
aam
adc
pop
arpl
out
push
pusha
pop
ljmp
jb
xchg
in
xchg
jo
divps
sub
cmp
pop
into
lds
pop
cmp
adc
ffreep
scas
les
das
stos
adc
fwait
out
push
cmove
arpl
xor
daa
push
mov
js
fimull
xchg
mov
jo
push
stos
mov
mov
jb
out
lahf
les
push
pop
ficoms
mov
and
cmpsl
inc
cltd
call
lea
sub
mov
shlb
jecxz
dec
rorb
inc
push
jb,pn
adc
loop
mov
push
movsb
bound
scas
aad
sbb
arpl
dec
push
into
in
popf
ret
jno
stos
jnp
pop
push
movsb
lahf
out
xchg
mov
shlb
scas
ds
icebp
dec
mov
push
fsubl
enter
mov
inc
nop
shr
adcb
pop
mov
scas
loopne
push
loopne
js
mov
pop
sub
sarb
fstp
imul
inc
fsts
dec
aaa
cwtl
pusha
mov
push
xor
pop
in
lods
addb
int
inc
out
dec
lock
popa
hlt
sar
gs
inc
cmpsb
cmpsl
push
sarb
push
lods
hlt
and
inc
repz
in
mov
mov
adc
clc
fadds
jne
and
inc
pop
pop
adc
mov
push
fucomip
andl
mov
cli
outsb
int
cmp
dec
cmpsl
inc
inc
jbe
xor
aas
jbe
xchg
inc
mov
sbbb
movswl
hlt
outsl
inc
in
lods
pop
fcompl
es
jp
movsl
mov
xchg
sbb
cmpsl
add
test
mov
sub
pop
aam
repz
hlt
jge
sahf
ljmp
mov
popa
sub
dec
cmpsb
add
xchg
xchg
mov
push
fwait
cmp
jae
sbb
xor
hlt
in
inc
xor
dec
faddl
clc
mov
ror
sub
int
int
mov
shll
sbb
enter
push
cmp
pushf
in
xchg
loope
or
mov
rclb
xlat
pop
push
lret
cmp
ret
dec
data16
jnp
add
aas
mov
aaa
sbb
mov
loope
inc
push
ja
out
xchg
xor
add
out
stos
imul
ljmp
xor
insl
xor
int
mov
dec
pop
jb
cs
int
jl
cwtl
adcb
sbb
nop
xlat
pop
jmp
push
fsubrs
subl
inc
mov
and
cmp
pusha
fisubs
pop
mov
movl
jno
js
addr16
pop
sbb
xor
inc
ficompl
sahf
test
and
hlt
aaa
dec
jo
clc
and
cmpsl
jmp
pop
xor
xor
dec
dec
mov
or
xor
outsl
loopne
mov
xor
lret
movsl
xchg
sahf
mov
dec
xchg
dec
call
imul
adc
adc
pop
call
leave
imul
lods
in
lret
or
sbb
cmpb
sbb
xchg
movsl
je
jnp
cmp
into
push
scas
nop
or
ja
jp
adc
mov
xor
add
das
outsl
cs
jne
and
mov
mov
cmc
data16
inc
add
inc
mov
aaa
or
or
in
cmp
outsl
dec
sub
mov
int
jg
loop
cmpsl
or
out
add
and
lods
cmp
jg
popl
pop
loopne
mov
cs
xor
addr16
int3
pop
jle
mov
scas
fcompl
and
mov
aaa
xor
adc
fisttpl
cld
in
sbbb
add
mov
mov
or
lds
pushl
and
pop
pop
and
lret
jnp
dec
rcr
repnz
push
xor
cmc
adc
iret
sbb
mov
xchg
inc
sbb
mov
and
jmp
xchg
imul
jo
push
into
and
cmpsl
jne
sub
push
add
inc
fucomp
adc
and
jne
pop
mov
push
push
das
pop
jnp
scas
sub
adc
neg
jo
adc
xchg
ss
bound
movsl
rcr
and
sbbl
add
pop
cli
xor
mov
addr16
sbb
add
mov
lods
into
bound
pop
or
lock
mov
xchg
mov
pop
cmp
sub
test
mov
mov
mov
inc
mov
and
hlt
in
push
lea
call
data16
rolb
add
cmpsl
ds
xchg
cmpsb
lcall
lea
fisubrl
mov
adc
push
aas
pop
push
es
repnz
insb
dec
in
clc
mov
jg
add
lock
sbb
or
mov
cli
stos
shl
sbb
fwait
call
jbe
cmp
cld
scas
cmpsb
jno
ds
mov
push
pop
sub
and
out
cmp
pop
mov
mov
arpl
push
mov
and
dec
mov
xchg
incb
adcb
mov
aad
bound
mov
lds
sbb
add
iret
ja
int3
xor
inc
inc
ficompl
jbe
dec
stos
cmp
and
fnop
jns
cmpsb
lods
mov
fsubrl
xlat
es
cltd
xchg
lahf
or
jnp
cmp
sti
mov
mov
jb
pusha
ficoms
sahf
shlb
nop
sub
mov
imul
xchg
js
test
sub
xor
or
shll
pop
ds
sahf
dec
loop
or
dec
lods
shlb
sub
lahf
dec
cmp
fcomps
lds
mov
fs
push
js
push
or
jno
and
movl
ja
icebp
cmc
cmp
sbb
mov
scas
and
lret
jns
push
dec
inc
sub
iret
cld
scas
lret
stos
adc
pop
shlb
inc
sub
sti
mov
gs
and
sarl
addr16
fcom
in
mov
lds
orl
or
adc
lods
cmp
adc
fwait
bnd
sbb
jae
xor
mov
jbe
pop
in
outsb
stc
fidivrl
pop
test
out
fistl
shlb
cmpsl
mov
andb
test
es
inc
daa
fimull
pushf
ret
xchg
test
dec
lods
xorb
iret
cmp
mov
sarl
cld
xchg
pop
loop
out
sbb
mov
sbb
movsl
mov
cmp
sbb
fbld
jmp
sbb
xchg
or
lea
pop
jecxz
int
ja
out
dec
cmc
mov
cmp
sbb
xchg
pop
ret
out
call
jns
fisttpl
push
push
sub
dec
lds
out
push
adc
dec
bound
jg
rcl
xchg
lock
pop
pop
dec
inc
cltd
shll
imul
pop
dec
push
xchg
fdivrl
arpl
inc
in
lea
xchg
lret
and
inc
mov
lea
fistl
sarb
in
mov
ljmp
mov
add
xchg
sbb
lock
sti
pop
std
popa
add
dec
push
sti
push
mov
jmp
out
adc
dec
lcall
insl
push
lret
imull
jno
aas
xor
mov
inc
mov
loope
aaa
push
lahf
or
cmp
sub
cwtl
xor
lret
movq
pop
cld
mov
xorb
jnp
inc
cld
push
imul
sbb
ljmp
scas
aas
jae
rorb
sub
xor
int
adc
in
mov
das
mov
xrelease
adc
idiv
push
adc
or
fisttpl
aas
into
iret
aam
mulb
add
xor
dec
addr16
inc
int
jle
cmp
add
inc
sti
or
xchg
push
cmp
push
in
mov
inc
push
fwait
jns
ljmp
xchg
push
fsubp
popa
repz
rcll
andl
aad
jl
dec
negb
cwtl
mov
and
inc
mov
xchg
push
jp
push
mov
jae
mov
pop
sub
int
push
js
xor
outsb
jae
lods
push
pushf
stos
pushf
add
mov
ret
sub
mov
leave
inc
mov
rolb
hlt
fwait
bound
fdivrs
sti
inc
xrelease
and
jns
mulb
jecxz
cwtl
adc
shr
sub
outsl
je
ja
and
or
xor
mov
int3
iret
or
inc
out
fwait
mov
inc
pop
sbb
sub
shll
lock
call
xchg
jg
xchg
fistpl
mov
icebp
hlt
mov
loop
inc
mov
fsubs
aas
cmpsb
push
mov
mov
push
mov
leave
and
xlat
mov
jle
jge
imull
dec
insl
fmulp
sub
add
push
fadd
ja
stos
add
adc
ret
cmp
sub
ret
jbe
push
pop
inc
popf
dec
fistpl
mov
das
jge
imul
xchg
andl
and
mov
fwait
add
iret
adc
in
or
lahf
lods
mov
inc
divps
movsl
fisubrs
add
ss
icebp
je
gs
add
fwait
in
pop
out
addr16
cmp
sub
sbb
xchg
and
rclb
ja
jbe
out
xchg
das
enter
push
jg
and
lds
movsb
sbb
in
xor
lock
dec
fiadds
jne
and
xor
xlat
int
pop
js
push
pop
rolb
or
mov
fs
sub
jo
les
mov
out
int
dec
into
pop
push
inc
rcrl
jnp
xor
sub
fxam
nop
test
pop
or
push
das
data16
filds
xchg
mov
dec
mov
push
pop
aaa
or
xor
inc
in
scas
inc
push
push
mov
lret
imull
cli
cmp
loopne
cli
pop
xchg
adc
dec
push
push
stos
lret
bound
sub
lahf
adc
stos
pop
sub
push
call
in
sub
cwtl
out
mov
cmp
dec
mov
sub
icebp
sbb
inc
imul
js
adc
add
cmpsl
fdivrs
paddusw
mov
jbe
xor
xor
mov
bound
pusha
adc
cmpsb
nop
scas
add
out
scas
idivb
leave
push
lahf
into
dec
mov
xor
popf
test
ret
cmp
sahf
mov
aad
das
sbb
jmp
mov
xor
repnz
frstor
xlat
and
cld
and
inc
mov
rcl
mov
iret
mov
imul
rcll
fisubrl
mov
mov
rcl
cmpsl
push
dec
ret
pop
outsl
inc
std
jnp
dec
dec
test
xchg
fcomps
jge
dec
pop
jecxz
add
negl
aad
adc
mov
andl
jae
in
fwait
loope
stos
js
pushf
sar
mov
loop
xlat
out
mov
aas
push
cwtl
push
mov
inc
ja
add
fsubrl
jg
mov
mov
xor
jl
repnz
mov
orb
jo
ss
popa
xchg
sub
mov
mov
int
test
sbb
mov
xchg
mov
dec
mov
mov
jp
fwait
push
adc
jno
xchg
les
pop
les
xor
mull
push
adc
mov
mov
popf
sub
and
sub
arpl
mov
adc
movsl
xchg
rcl
cmp
dec
sbb
out
jl
fisttpl
sbb
pop
cmp
adc
push
stos
gs
mov
adcb
lahf
mov
sub
aad
jg
arpl
inc
mov
mov
xor
ja
lret
lret
arpl
jmp
pop
lds
loop
inc
push
push
ss
outsl
movsb
xor
stos
push
vcvtsd2ss
pop
lock
dec
sub
jg
pop
mov
lcall
mov
and
fcoms
jno
mov
cli
rcrl
mov
mov
push
movsb
and
or
je
in
out
add
adc
lods
lahf
push
pop
adcl
mov
lock
test
pop
mov
pop
cmp
in
jbe
les
jge
push
or
gs
or
fwait
mov
iret
cmp
inc
dec
ds
sbb
sarb
pop
mov
adc
cli
dec
jg
mov
dec
jl
pop
lds
jae
fstpl
add
push
sti
dec
fwait
movsl
and
mov
adc
icebp
psrad
push
push
sti
pushl
mov
int
repz
cmpsb
fs
out
sub
add
sub
lret
loop
push
pusha
push
rsqrtps
pop
inc
and
scas
and
or
pop
addl
push
sub
adc
mov
mov
insb
or
imul
pop
mov
sub
push
je
xchg
loope
cmp
and
mov
fcompl
adc
mov
fsub
jecxz
mov
pop
pop
or
jl
xor
pop
shrl
mov
outsb
mov
test
icebp
aam
mov
daa
mov
jae
pushf
xchg
pop
xor
cmp
dec
xor
cmp
xchg
lock
out
xchg
sbb
mov
pop
out
push
lret
push
dec
sbb
in
out
ret
mov
lock
aaa
mov
testb
sub
movb
jnp
sarl
arpl
xchg
pop
iret
aaa
ja
jae
add
xchg
ja
sbb
stos
ljmp
scas
hlt
mov
cmp
lahf
sbb
int3
mov
pop
dec
bound
push
inc
sti
aaa
lds
fsubr
lcall
and
aaa
das
insb
lret
in
in
adc
inc
jmp
into
and
push
mov
jl
nop
pop
xlat
ja
adc
mov
ret
mov
pusha
das
lret
test
in
out
jg
dec
dec
mov
ret
push
pop
cld
lret
lret
enter
mov
jmp
aas
lcall
push
icebp
mov
push
dec
enter
push
jle
inc
daa
xchg
clc
aam
xchg
mov
and
dec
adc
pop
rorl
enter
loope
mov
inc
or
xchg
fisubs
fdivl
inc
imul
testl
aad
int3
jmp
rcl
inc
pop
mov
out
cld
xor
push
jp
ret
mov
add
jbe
aas
aad
outsb
movsb
pop
mov
je
adc
fwait
inc
pusha
scas
push
xchg
sbb
add
push
dec
xchg
mov
iret
add
xor
push
aam
inc
adc
mov
ret
xor
rorb
jecxz
cld
loope
in
hlt
add
pop
fmul
jg
add
out
mov
sub
sub
pop
mov
push
insb
sti
pop
in
gs
sub
and
ljmp
lret
push
sbb
mov
xor
add
aas
out
in
fisubrs
fwait
pop
push
inc
jmp
inc
cmpsl
js
idivb
fidivs
dec
ljmp
sbb
aam
test
adc
ja
out
xchg
cs
adc
cmc
iret
cmc
enter
mov
out
cld
jnp
add
xchg
fdivr
loop
or
arpl
xchg
ret
sarl
cmp
enter
scas
insl
mov
rolb
xchg
lss
arpl
daa
pop
imul
mov
fldt
int
pop
adc
jbe
mov
xlat
fstpt
jp
sbb
cmc
jnp
add
cltd
iret
lods
jl
scas
lods
mov
mov
ror
not
push
imul
stos
inc
loop
lcall
xchg
rclb
cmp
jb
rorl
push
addr16
cmp
out
imul
sub
test
xor
shlb
leave
pop
ss
in
fldcw
dec
fisubs
jg
aam
mov
hlt
mov
sahf
sahf
dec
std
adc
fstpl
pop
shr
jae
sub
sahf
xchg
pop
jns
cmp
push
out
pop
pop
loop
mov
jl
jg
inc
add
jg
jb
sub
call
adc
fsubrl
imul
and
lock
adc
inc
jae
aas
movl
or
mov
loope
fcomi
es
and
lret
shr
adc
add
jae
lock
test
es
pop
adc
xchg
xchg
les
clc
les
or
in
cmc
pop
mov
in
ja
xor
sarl
push
dec
stos
cltd
hlt
push
and
mov
sub
shll
inc
mov
and
fwait
out
cmp
xchg
pop
push
push
pop
cmp
jge
mov
lret
push
mov
pusha
aas
ss
aam
test
xchg
in
iret
orl
jl
psrad
xchg
or
and
add
sahf
mull
pop
mov
xor
lock
int3
scas
lods
pop
js
iret
lock
nop
repnz
mov
stos
pop
cmp
mov
addr16
mov
mov
inc
xor
mov
fs
sbb
mov
mov
pop
push
mov
mov
or
sub
test
jae
rorl
ret
loop
js
mov
mov
outsb
mov
cmpsl
dec
test
push
pop
sub
dec
cld
addl
aas
mov
add
cmp
in
xchg
int3
fbld
dec
lods
jmp
clc
mov
push
mov
inc
jae
repz
test
cltd
jl
cmpsl
sub
ret
mov
xchg
call
adc
push
rolb
movsl
sbb
push
negl
cmp
pop
fidivrs
std
jae
push
fwait
pavgb
cmp
inc
inc
and
movsb
xchg
cmp
das
sahf
out
push
rolb
xchg
arpl
dec
enter
in
cld
inc
ja
mov
les
sub
enter
jns
xorb
sub
lods
test
iret
lea
scas
into
test
mov
cwtl
test
test
shr
aaa
inc
ret
popf
es
addl
or
lahf
jle
andb
jbe
aas
aas
sbb
xchg
or
das
in
sbb
ret
or
gs
or
in
jle
jbe
xor
pop
les
shrb
mov
cs
cmpsl
lret
or
xchg
fisttpll
mov
pop
push
pop
arpl
std
add
out
adc
and
cmc
sub
sahf
xor
mov
mov
lods
lcall
sbb
in
out
mov
dec
xlat
stc
sbb
push
aam
and
jl
jno
addl
loope
jmp
imul
dec
divb
fistl
lods
cwtl
sub
fsubl
pushf
inc
xlat
cmp
push
sti
andb
and
jne
scas
and
rcrl
enter
arpl
mov
out
ss
icebp
subb
push
cwtl
out
repz
fs
es
xor
aas
js
rol
aam
das
sahf
pop
stc
cmpsl
aam
jbe
cltd
das
sahf
insl
ds
adc
cmpsl
adc
inc
push
adc
bts
out
xor
pushf
push
flds
xlat
or
push
add
cmp
xacquire
pushf
cmp
adcb
pop
lods
pop
movsl
pop
add
or
decl
out
xchg
sbb
mov
pop
push
sub
cli
clc
data16
mov
add
insl
adc
or
fidivrs
ret
shr
sbb
imull
jne
adc
ret
mov
divb
sub
stos
out
fsubl
cmp
es
xor
daa
pop
outsb
out
or
mov
dec
sbb
xor
ja
sti
jmp
fstpt
inc
int3
adcl
test
fisttpl
push
mov
pusha
aad
push
scas
pop
mov
das
sbb
xchg
add
movsl
add
fiaddl
dec
fwait
movsl
mov
and
fisubl
pop
lock
cmp
and
fninit
push
sub
xchg
xor
mov
jne
es
mov
cmp
jl
int3
lahf
xchg
ja
mov
mov
mov
inc
rorl
jnp
pop
lahf
inc
out
ret
loopne
add
sub
rcr
inc
cvtdq2ps
jge
pusha
sarl
js
lea
nop
fs
mov
imul
lea
sahf
fbld
outsb
lahf
mov
out
mov
push
xchg
rorb
jecxz
enter
and
mov
es
sub
cmpsb
outsb
lock
lret
popa
aaa
jbe
mov
sahf
ljmp
in
mov
insl
out
adc
adc
inc
mov
dec
xchg
sub
mov
push
pop
pusha
hlt
call
xlat
xchg
cs
mov
xchg
push
fdivrs
xchg
clc
sub
or
int3
arpl
mov
cli
rcl
mov
or
adc
pop
mov
in
push
cmpsl
or
popf
xchg
fbld
inc
inc
arpl
addb
sbb
sahf
pop
inc
iret
jnp
add
cmp
jnp
repz
stos
dec
aas
dec
xor
psubsw
pop
hlt
push
sbb
and
cld
arpl
jle
dec
add
mov
aas
lahf
test
int
xchg
aad
cmp
movsb
popa
rcrb
loopne
lret
popf
fwait
sti
sub
outsl
js
fadds
insl
xchg
stos
ficoms
push
adc
pop
repnz
rcrl
outsl
into
adc
sar
jmp
cmpsb
addr16
out
sub
pop
pop
dec
aad
xchg
mov
pop
lods
fwait
push
in
push
mov
cmp
lods
int3
cli
sbb
mov
repz
flds
es
or
int3
and
mov
lds
int3
jecxz
stos
icebp
and
bnd
pop
push
pop
mov
inc
mov
sbb
outsb
xchg
adc
jle
jp
es
or
ljmp
pop
mov
and
cmc
mov
repz
std
jo
xor
push
mov
dec
lds
mov
push
ja
out
sti
repz
jo
and
into
sub
adc
out
shll
pusha
xor
lahf
push
hlt
sti
outsb
mov
int
int
sbb
iret
sbb
test
pop
push
jmp
xlat
out
mov
orl
arpl
rcl
ljmp
pop
adc
rcrb
mov
data16
imul
or
push
imul
getsec
out
push
adc
scas
fcmovbe
enter
out
dec
lods
mov
arpl
lock
fdivrs
iret
mov
sahf
sub
mov
sub
gs
xchg
in
xchg
lret
dec
pop
dec
cmp
mov
jecxz
jg
scas
ja
aaa
sub
sub
and
insb
insl
out
or
xchg
adcb
lret
xor
cld
push
orb
and
jne
call
mov
fistpl
mov
cwtl
loopne
pop
loopne
das
dec
mov
enter
orl
mov
arpl
pop
or
loopne
xchg
ja
mov
lock
push
test
cmp
or
loop
xor
sub
aas
roll
nopl
cmc
push
xlat
or
jb
in
inc
stc
xlat
test
adc
xor
mulb
or
jnp
fs
dec
sbb
jge
xchg
xchg
jge
fisttps
fwait
aas
cmp
xchg
cs
int
into
and
jl
and
outsl
dec
out
out
test
ja
cli
arpl
faddl
cli
mov
xor
insl
push
ficoml
jnp
mov
stc
rorb
testb
loop
mov
ds
cmp
and
jmp
ror
stos
imul
pop
jecxz
aam
daa
mov
mov
cli
jl
cmp
xchg
cs
imul
sar
ret
xor
insb
cmp
jecxz
shl
push
pop
adc
ljmp
inc
aad
pop
and
inc
sbb
repz
dec
dec
ss
notl
or
xchg
mov
push
add
out
push
xor
cmpsl
add
popf
pop
and
mov
lgs
jbe
or
loop
bound
mov
movsb
dec
iret
dec
rorb
push
insl
push
mov
lret
jbe
pop
mov
xlat
sbbl
rcll
jmp
test
das
mov
mov
or
in
inc
out
lea
fstl
push
pop
mov
in
push
adc
mov
test
pop
push
adc
pop
sti
cs
clc
addb
jnp
mov
and
add
mov
mov
mov
out
test
out
adc
push
orl
ficomps
inc
orb
hlt
aad
pop
mov
cmpsl
popf
bnd
sub
ss
aam
fs
test
adc
sbb
and
in
clc
cmpsb
lcall
sbb
push
lcall
int3
outsl
out
out
sbb
daa
ret
jbe
lahf
sbb
mov
adcb
in
cmp
roll
mov
sub
jnp
out
and
dec
js
sbb
loope
test
mov
mov
pop
fs
mov
iret
sarb
jecxz
add
lret
outsl
pop
les
bound
inc
dec
push
lcall
idivb
jecxz
and
movsb
aam
push
pop
lahf
dec
inc
fldt
and
pop
fwait
sbb
fldcw
lahf
adc
or
jb
aaa
mov
and
into
and
iret
sbb
jnp
jno
mov
mov
jg
rolb
push
inc
cmp
daa
jp
data16
adc
mov
dec
mov
push
in
inc
in
das
pop
addr16
pop
inc
fsubrs
pop
js
cwtl
adc
or
dec
aad
inc
out
push
mov
mov
jb
pop
std
pop
stc
rolb
or
rorl
pop
cmp
cmpsl
mov
dec
movsl
pop
dec
mov
das
pusha
fnstenv
js
gs
mov
jmp
sbb
int
mov
test
hlt
adc
inc
outsl
daa
mov
jg
push
adc
data16
jmp
ret
mov
sub
in
aaa
cld
dec
adc
in
outsl
testb
aam
dec
lret
addb
xor
fs
mov
jmp
jae
aam
arpl
fs
cmp
inc
fstl
mov
aam
loopne
mov
cmp
in
rdpmc
mov
push
xchg
xchg
clc
sub
pusha
shll
sbb
outsl
lods
sub
inc
inc
arpl
jmp
mov
inc
sti
or
loopne
xor
rsqrtps
mov
or
xor
pop
pop
shr
shlb
mov
and
sbb
cmc
xchg
xlat
cmc
int3
xchg
cmpsl
repz
lret
add
scas
leave
loop
add
cmp
inc
jl
sti
xor
std
ror
outsl
mov
cs
popf
ljmp
addr16
out
fbstp
sar
arpl
mov
cmp
mov
fcmovb
jmp
lret
cli
popa
sub
dec
pop
jno
out
add
ljmp
add
fidivl
and
cmp
and
rcl
mov
mov
sub
inc
mov
xchg
mov
mov
andl
roll
inc
push
sub
inc
out
sbb
into
and
cmpxchg
imull
xchg
cmp
push
push
data16
imul
jg
inc
es
push
fwait
sub
mov
ret
insb
fucomp
test
push
insl
cld
sbb
mov
rorb
and
daa
mov
cmp
lods
andb
clc
sbb
and
jo
dec
das
insb
dec
sub
mov
fwait
pop
mov
fcoms
mov
sbb
inc
daa
mov
xor
jg
mov
jge
inc
outsb
inc
in
js
mov
aaa
xor
push
fsts
insb
movsb
lahf
cmp
sti
pop
call
sub
fucomi
cmc
mov
mov
in
repz
and
ss
sbb
adc
aaa
ret
or
movsl
adc
push
cli
aas
out
add
mov
call
inc
mov
outsb
in
rcll
mov
dec
shrl
push
movaps
sti
test
push
icebp
shlb
and
inc
outsl
jg
add
arpl
sbb
mov
fisubs
out
scas
push
xchg
sbb
xchg
enter
enter
sbb
inc
pop
fisttpl
inc
push
xchg
inc
inc
ret
rclb
dec
imul
out
arpl
fnstenv
mov
in
or
inc
shr
cmp
push
pop
mov
lret
repz
mov
jae
mov
sub
clc
call
xchg
sahf
mov
stos
adc
mov
aam
js
les
mov
add
dec
jbe
push
mov
jecxz
mov
sarl
xchg
inc
mov
cmp
add
mov
in
mov
dec
sbb
mov
xchg
mov
shr
insl
ret
pop
inc
cmpsl
sahf
shll
pop
pusha
fucomip
shl
pop
cltd
mov
xchg
xlat
xchg
push
or
adc
lods
outsl
scas
cmpsb
adc
cmp
mov
out
pop
mov
xorl
xchg
mov
nop
sub
scas
lea
dec
out
loop
gs
pop
mul
cwtl
push
addr16
jge
dec
jb
add
cmc
push
hlt
add
popf
pop
inc
inc
mov
adc
enter
out
adc
mov
fidivrl
cmpsl
mov
adc
out
dec
lock
fwait
insl
cmpsl
adc
sbb
and
dec
dec
lds
sub
inc
stos
jmp
xchg
arpl
mov
ret
fnstcw
mov
mov
fnop
cli
push
aam
and
inc
test
aaa
jecxz
or
jp
lock
xlat
mov
cmp
lea
cli
sarl
inc
mov
movsl
ret
add
sub
dec
or
adc
sbb
outsl
sahf
ret
cli
mull
pop
and
int
jns
dec
xor
cmp
stos
lret
psubsw
cmp
xor
rorl
psubw
push
and
pop
pushl
jo
push
les
xchg
push
or
mov
push
aaa
jae
dec
xor
les
lahf
cmp
inc
int3
lahf
jg
aaa
mov
mov
enter
jge
arpl
sbb
pusha
inc
add
lret
inc
mov
in
jne
popf
push
fidivs
aaa
out
test
ljmp
sbb
push
test
xchg
mov
xor
daa
out
adc
shlb
es
xchg
jge
inc
inc
je
xchg
adc
inc
and
shlb
pushf
imul
aad
insb
hlt
pushf
cmp
xor
xor
sub
dec
pop
adc
icebp
pop
inc
jp
sbb
cltd
jae
dec
sbb
adc
fisttpl
fldenv
inc
jno
push
sbb
dec
mov
cmpsl
bound
fcoml
in
ret
pop
inc
dec
jmp
test
into
mov
scas
ja
jae
dec
inc
jne
jnp
daa
cli
jl
adc
cmp
xchg
mov
add
popa
aaa
push
cli
jge
rol
xchg
pop
or
xchg
push
push
push
xor
mov
out
sub
and
push
mov
jae
add
inc
xchg
repz
fistps
pop
push
xor
inc
lods
mov
movsb
data16
add
lcall
and
clc
mov
lock
mov
scas
out
rcrl
sbb
inc
movl
sbb
inc
andb
or
jb
out
jp
dec
xchg
jecxz
mov
xor
mov
push
sbb
mov
lret
push
jecxz
cwtl
aas
xor
test
dec
add
pushl
sbb
mov
cmp
ud0
xchg
shlb
add
cs
out
ss
les
lods
sarb
jb
xchg
lock
cmp
mov
shr
lret
mov
xor
cmpl
inc
call
jl
sub
xor
mov
or
mov
push
sub
xchg
or
into
fcmovne
pop
push
cmp
daa
lods
and
ljmp
or
pop
addr16
lahf
ret
popf
dec
adc
or
mov
jp
dec
lds
and
adc
or
push
daa
loopne
sbb
mov
mov
orl
push
lret
push
shlb
stc
xchg
add
js
scas
scas
cli
xor
mov
lea
jae
sub
pop
xchg
xlat
push
ljmp
aas
dec
dec
stos
rolb
call
repz
adc
cwtl
out
jb
ja
outsl
jle
pop
push
pop
mov
rcrl
mov
xchg
sbb
lds
mov
cmp
pop
lahf
jl
adc
adc
repnz
movb
cmpsb
pop
fadd
fisttpl
ljmp
loop
pop
xchg
sbb
jg
add
lock
in
mov
mov
fnstenv
gs
and
bound
push
mov
imul
js
iret
das
lods
jge
jl
xor
push
cmpsl
mov
jmp
testl
ret
fwait
hlt
or
adc
pop
jo
push
inc
inc
inc
mov
daa
fsubl
xorl
leave
jecxz
push
andl
es
loope
rolb
pop
push
out
popf
fildll
aaa
pop
les
push
iret
shll
mov
bound
or
sub
jge
lahf
mov
repnz
mov
cmp
mov
hlt
pop
inc
ss
fidivl
inc
sahf
imul
scas
dec
das
inc
xchg
adc
lods
mov
cld
shlb
and
push
sub
clc
gs
xchg
cld
pushf
push
roll
fldl
shll
dec
inc
out
jl
lret
sub
scas
jle
lds
jmp
sbb
test
and
sbb
dec
ja
mov
sbb
std
stos
sahf
jae
pop
mov
pop
xchg
and
inc
inc
testb
xlat
outsb
mov
adc
rcrl
pop
repnz
pop
sti
add
and
add
xorl
inc
pop
jecxz
xor
mov
out
or
pop
mov
aad
pushf
xlat
les
sub
sti
aas
adc
notl
out
sub
mov
iret
pop
test
sub
ds
cs
js
xchg
push
xchg
lret
inc
mov
jl
dec
das
das
in
pop
adc
arpl
out
jg
scas
adc
cltd
arpl
in
sbb
mov
dec
ret
out
arpl
or
mov
sub
popa
outsb
sub
stc
dec
scas
mov
enter
mov
scas
push
jl
mov
repz
xor
mov
sarl
cmp
lods
repz
divl
jbe
mov
xchg
shl
cmpsb
insb
push
cmp
out
sbb
or
fldt
les
testl
lea
into
aam
sub
mov
imul
xor
pop
xchg
mov
in
mov
xchg
push
pop
push
mov
fnstsw
fildll
lods
out
pop
out
pop
in
aas
cmp
or
jns
or
or
and
jg
push
inc
mov
lcall
out
lret
scas
in
addl
les
mov
stos
mov
cmpb
xchg
and
mov
mov
sub
mov
cmp
pop
js
lret
int3
sahf
ja
aad
int
aam
pop
ds
sbb
dec
push
dec
ljmp
aaa
and
les
or
add
mov
out
sbb
scas
push
mov
dec
add
inc
mov
cs
push
mov
cmc
cmpsb
lahf
sbb
std
adc
mov
dec
imul
js
in
pop
ds
jo
jg
mov
xlat
inc
sti
inc
adc
mov
and
mov
mov
jnp
lcall
popa
repz
mov
fs
call
xchg
pop
pop
loop
lret
add
aam
sahf
call
mov
bnd
mov
in
jb
dec
mov
ljmp
jae
in
jnp
xchg
jbe
xchg
and
inc
cmpsb
cltd
mov
sub
mov
cmp
insl
jnp
sahf
fsubr
or
rorb
and
or
mov
imul
add
enter
movsb
sbb
fnstcw
stos
pop
fsubl
addr16
lock
repz
in
jae
xor
std
pop
mov
sub
hlt
pusha
test
rorl
sti
iret
int3
xor
push
cli
push
pop
decl
sbbb
mov
test
andl
dec
divl
repnz
in
cmp
sub
in
pop
pop
nopl
in
add
xor
lods
aas
add
inc
orl
sbb
mov
jl,pn
xor
mov
mov
stos
mov
test
and
push
scas
pop
lods
or
add
xlat
imull
aas
jo
sbb
xchg
out
addl
stos
adc
test
loopne
xor
xchg
mov
cmpsl
and
call
pop
dec
xchg
sbb
aas
xchg
outsl
mov
dec
fwait
int3
push
mov
adc
xor
fbld
push
jg
jecxz
gs
inc
test
dec
rolb
mull
ficompl
aam
dec
mov
sub
adc
mov
push
mov
pop
mov
inc
mov
push
movsb
xchg
or
daa
adc
jno
push
dec
rorb
pop
lods
cmp
sub
jnp
pop
xchg
insb
xchg
shll
adc
xchg
cmpsl
or
mov
sub
test
add
out
add
or
lods
jecxz
xchg
xorl
sub
or
fwait
out
sbb
mov
clc
xchg
mov
pushf
add
movswl
xor
mov
mov
lock
cmp
dec
les
incb
cmp
fisttpll
jno
call
jne
mov
pop
orb
lock
sarb
push
push
dec
jns
mov
in
imul
pop
cmp
inc
and
mov
jbe
pushf
test
jecxz
push
lds
fistl
pop
adc
je
pop
scas
push
lret
cmpsb
or
inc
leave
dec
adc
jns
sub
lds
dec
test
cmp
sbb
lods
mov
mov
sub
sbb
loopne
insl
aam
push
dec
jo
pop
xchg
jecxz
mov
add
in
jnp
insb
inc
ja
mov
leave
clc
out
or
push
xchg
mov
dec
cmp
sbb
fwait
cmp
xor
add
subb
fisubrs
rcr
sub
mov
sti
xchg
repnz
cwtl
icebp
aaa
xchg
dec
movlps
fiaddl
xor
imul
popf
mov
mov
popf
les
dec
xchg
lods
and
sbb
dec
xchg
jnp
ret
call
mov
push
inc
in
jle
jno
xor
xor
mull
scas
fisubs
leave
cmpsl
mov
jne
sub
sbb
adc
repnz
ret
loope
clc
shl
sub
xchg
test
imul
mov
lods
js
pop
push
je
fsubl
xchg
sbb
or
sbb
mov
sub
jb
mov
lahf
mov
pop
cld
mov
imul
mov
loop
test
mov
mov
outsl
pop
xchg
push
add
xor
decb
or
fwait
imul
add
enter
data16
cmp
jl
mov
dec
jge
jnp
inc
clc
sbb
mov
mov
dec
int
loop
push
jle
pusha
movsb
outsb
imul
mov
ror
xchg
sub
dec
mov
inc
cli
outsl
mov
xor
outsl
sbbl
ljmp
push
xchg
xor
jae
cmp
pusha
sbbl
inc
push
adc
orl
fbstp
lret
cli
lahf
sub
mov
dec
xorb
in
ret
addb
sbb
cmpsl
ja
inc
adc
filds
shll
pop
call
xchg
lods
cmp
dec
xor
mov
mov
jle
xchg
sub
enter
xchg
in
xchg
sarl
jmp
inc
jmp
cmc
movsb
daa
pop
lahf
jle
mov
mov
xor
outsb
cmp
mov
dec
adc
arpl
stc
addr16
test
fwait
sbb
ss
stc
jg
and
mov
insb
outsl
cmpsb
dec
sbb
scas
pop
mov
fistpll
out
sub
ss
adc
bound
pop
jecxz
xchg
clc
mov
ss
push
adc
rorl
mov
call
incb
aas
mov
gs
xchg
xlat
xchg
inc
or
xchg
add
sbb
xor
pop
xlat
sub
loopne
jg
les
dec
xor
stos
inc
and
sbb
jns
loopne
pushf
dec
push
push
sbb
in
and
lods
sub
add
push
lahf
bound
jl
daa
test
mov
sub
mov
mov
xorb
mov
lcall
daa
xchg
mov
dec
dec
mov
sbb
cmpl
fcmovnbe
jl
fiadds
cmp
aad
aam
rclb
insb
cld
pop
imul
pop
sub
iret
jl
sti
cmp
push
sub
jecxz
push
daa
orl
or
lahf
push
test
cli
adc
cmpsl
pop
push
clc
mov
dec
mov
add
mov
popa
inc
pop
in
mov
xchg
stc
push
inc
pusha
pop
cmpsl
dec
out
push
xor
out
icebp
call
push
mov
incb
sbb
inc
mov
adc
fbld
jae
clc
pusha
push
fwait
mov
ljmp
mov
stos
movups
or
paddb
movsl
jg,pn
xchg
jae
out
xor
or
jo
cmp
dec
sti
jo
fs
xchg
cmp
ret
xchg
mov
dec
pop
push
mov
pop
jne
cmp
pop
xchg
jnp
jmp
mov
push
cli
daa
ds
or
les
push
mov
xor
sub
pop
test
xor
add
sub
cli
pop
lds
nop
fs
aaa
aam
lods
rolb
jb
ljmp
lea
imul
and
cmp
and
sbb
outsb
cmp
jge
imul
loopne
pop
cld
xchg
and
mov
xor
mov
push
iret
mov
fstpt
add
xchg
jns
notb
mov
dec
xor
fld
cmpb
test
jb
imul
jl
ret
popf
sub
jmp
mov
int
imul
and
sub
daa
and
fwait
pop
mov
mov
jo
popf
imul
iret
repz
mov
mov
mov
and
push
adc
daa
jae
loop
xor
adc
push
cmp
gs
mov
jne
jle
int3
cltd
mov
lods
out
lcall
pusha
jns
pop
repz
test
or
add
dec
es
push
ja
into
jg
pop
popf
pop
loope
decb
scas
out
leave
popf
or
dec
xor
pop
jecxz
mov
dec
add
sub
stos
push
rcl
jae
aam
jmp
out
sarl
and
and
jnp
jae
adc
and
insb
fimuls
mov
fcomps
bound
mov
sahf
dec
arpl
insl
movsb
gs
cmp
push
sahf
mov
mov
repz
or
ror
xchg
sbb
sub
inc
loopne
push
outsl
ret
hlt
outsb
cwtl
push
adc
scas
mov
mov
mov
cmpsb
cld
sub
into
cmp
pop
mov
sahf
ljmp
movq
repz
in
inc
push
repz
lcall
or
sub
das
mov
cmp
inc
mov
mov
dec
out
std
pop
mov
dec
insb
mov
into
or
ss
popl
addr16
ret
sbb
and
and
pop
mov
mov
xchg
jne
and
mov
pop
addr16
into
adc
stc
das
dec
fisubrs
dec
stos
repnz
push
pop
sub
rcrb
lods
data16
mov
mov
mov
lcall
cmp
shr
adc
cli
add
lret
nop
lcall
idivl
lahf
testb
jge
mov
xchg
push
sub
adc
lock
and
or
inc
in
xcrypt-ctr
cmpsl
pop
std
cmp
das
es
jmp
pop
jns
xor
push
out
mov
mov
fldlg2
sbb
test
repz
dec
xchg
jo
add
push
bound
xlat
das
xor
add
pusha
rorb
push
push
sbb
out
in
jg
mov
divps
cmp
sub
push
jl
loope
xor
xchg
in
rcl
cmpsl
repnz
ret
stc
mov
pop
mov
mov
out
push
pop
int3
push
or
jg
dec
lret
outsb
jmp
mov
xchg
fbld
mov
xor
cmp
faddp
or
add
lahf
fsubrl
jmp
add
nop
outsb
cmpsb
test
bswap
addr16
or
sbb
and
dec
push
iret
and
js
aam
xchg
int3
jnp
pop
or
sbb
sar
add
ret
ljmp
lret
imul
js
inc
aaa
int
push
movsb
cmpsl
mov
in
sub
lcall
dec
jb
sub
inc
mov
mov
fs
inc
push
mov
cs
push
mov
flds
repnz
je
mov
faddp
dec
jo
int
mov
imul
mov
pop
mov
fimuls
mov
sti
jne
in
aaa
mov
inc
pop
jae
push
jge
inc
push
mov
sub
pushf
pop
cmp
mov
push
cwtl
cld
mov
pop
mov
mov
repz
adc
xchg
decl
outsl
push
push
xchg
mov
jo
dec
pop
insl
adc
and
enter
mov
movl
leave
pop
sarb
add
mov
mov
fyl2x
test
imul
inc
enter
lret
xlat
fidivrl
cmpl
lods
fs
fistps
jl
push
mov
sbb
adc
pop
frstor
movsl
ja
xchg
fists
fyl2xp1
xlat
rcll
aad
pop
mov
es
imul
repz
test
popa
aad
outsb
jb
rcl
jnp
xchg
sti
inc
ljmp
sbb
rcrl
cmpsb
pop
repz
fistl
pop
out
addr16
fmull
sub
add
jno
adc
scas
dec
inc
into
mov
xchg
repz
mov
imul
subl
cli
inc
pop
adc
xor
xchg
pop
mov
mov
fstps
lds
dec
cli
sti
aaa
int3
aas
imulb
lahf
arpl
icebp
sbb
arpl
jb
imul
lret
pusha
lods
ret
stos
push
test
xor
loopne
sub
and
push
rorl
dec
mov
xchg
out
ds
frstor
lds
imull
mov
inc
test
dec
push
cmp
and
mull
in
add
jl
add
mov
xlat
orl
sahf
xor
ret
adc
test
pop
out
xor
mov
push
aas
cli
cmp
adc
pop
movsl
mov
mov
insl
iret
mov
mov
jno
jae
test
cmpsb
or
xchg
add
pop
loopne
jmp
out
mov
jbe
jae
xchg
paddw
lock
ja
adc
lods
xor
sub
mov
mov
dec
pop
push
daa
or
roll
movsl
rclb
aam
rcrb
cmp
push
lret
mov
xchg
test
cli
pop
push
cmpsl
cltd
icebp
pop
test
sbb
stos
lret
test
pushf
fsubrl
test
cmc
das
shlb
pop
pop
dec
in
jae
pop
loop
cmp
aas
popf
lock
insb
and
and
mov
sub
mov
fistps
popf
es
call
call
fiadds
add
shrl
jnp
jp
subb
mov
bound
xchg
enter
loopne
sub
mov
sahf
xor
mov
cmp
popf
xchg
jmp
jmp
in
and
cltd
imul
addr16
inc
cmpsl
mov
dec
in
xchg
lock
test
xchg
sub
mov
mov
pop
bound
or
outsb
xchg
cmpsb
cmpsb
mov
fidivrl
mov
pop
jnp
pop
xchg
mov
or
dec
mov
sub
dec
adc
loop
call
mov
fldt
enter
pop
xor
scas
pop
daa
adc
roll
mov
jo
xor
and
or
adc
fsubrs
dec
xchg
sti
outsb
and
in
repz
enter
jno
cmpsb
sti
jae
xor
lcall
dec
push
and
inc
and
out
mov
xchg
lret
sarb
fstps
outsb
mov
mov
mov
mov
push
ret
sti
mov
xchg
xchg
jo
jo
push
out
mov
jge
daa
imul
dec
or
negb
push
fistps
xlat
sub
inc
arpl
loopne
push
jl
fwait
pop
icebp
cwtl
pop
pop
das
jge
push
cli
dec
out
outsb
xchg
sub
ret
nop
pop
mov
jae
sub
xchg
fists
imul
mov
cld
outsl
mov
mov
xor
or
xor
dec
sti
jno
out
add
xlat
adcl
sub
jnp
stos
xor
out
fwait
dec
imul
add
sbb
lods
mov
bswap
or
jg
mov
add
add
sbb
popa
xchg
ror
mov
jp
sbb
pushf
iret
xchg
shrb
jno
out
test
push
pop
leave
insl
repnz
js
push
popf
add
in
xor
sub
jle
fcoml
cmp
arpl
fcmovnb
fstps
or
js
aaa
xchg
sub
insb
fdivrs
pop
out
push
fnsave
repnz
dec
jecxz
adc
clc
sub
repz
insb
scas
adc
add
into
pusha
cwtl
inc
jo
pop
pushf
push
cmc
push
test
jnp
std
inc
mov
cld
aam
mov
insb
inc
xchg
add
xchg
mov
sub
fcmove
xor
std
jg
mov
push
mov
push
stos
push
pop
adc
test
mov
add
mov
fsubl
int
pop
mov
sbb
pusha
and
mov
and
jg
fildl
std
loop
bound
aas
push
or
stos
fnstsw
es
insb
test
mov
pop
push
popf
jo
clc
push
test
mov
xorb
lock
mov
dec
fidivl
mov
arpl
cltd
ret
adc
cld
loope
fs
add
test
push
adc
xchg
ret
repnz
sbb
sbb
fistpl
insl
push
stos
sahf
mov
adc
cmp
jmp
push
jle
inc
or
pop
jno
es
or
mov
push
xlat
movl
or
lret
stos
cmp
and
jb
imul
lret
test
and
pop
data16
cli
push
xor
pop
hlt
cmp
stos
adc
xor
adc
fbstp
faddl
test
aad
xchg
mov
pop
test
lods
pop
andb
mov
pop
sbb
imul
xchg
test
xlat
ficompl
push
lds
fistps
jne
sbb
xchg
jp
cltd
xor
mov
mov
icebp
sarb
mov
fcmovnu
movzwl
or
pop
cmp
xor
xlat
inc
imul
cmp
or
adc
aam
loopne
mov
aas
ds
arpl
xchg
test
push
stos
in
mov
or
or
ret
test
mov
xchg
test
sub
xchg
xchg
add
fcompl
shrb
jo
push
scas
test
xor
insl
push
dec
insl
push
rcr
push
daa
cmpsl
jge
fwait
mov
in
pop
inc
in
inc
xchg
cmpsb
mov
sub
pop
xchg
and
xlat
jb
sub
pop
xchg
loopne
sub
lret
xchg
aas
pop
lahf
or
mov
into
dec
mov
inc
js
test
or
lret
iret
xchg
cmp
cmpsl
pop
or
data16
push
loopne
jo
dec
lahf
out
xchg
jp
push
arpl
sub
xchg
push
jbe
or
inc
xchg
sbb
mov
cmc
mov
outsl
xchg
sbb
cli
mov
lods
and
pop
xchg
outsl
xchg
or
mov
mov
aam
in
enter
xor
dec
je
mov
adc
mov
js
sub
dec
mov
inc
sahf
shr
sub
push
cmp
out
arpl
fiadds
push
inc
push
xchg
iret
pop
int3
shl
sub
lret
ffree
mov
mov
test
outsb
cld
enter
mov
into
jmp
sbb
push
shrl
push
mov
fisubrl
jno
pop
out
xchg
fisttps
dec
sbb
add
dec
dec
scas
pop
xor
movsb
pop
and
sti
jne
int
rcll
xchg
out
dec
movsb
mov
xchg
fucomi
scas
adcl
ret
mov
imul
push
push
iret
sbb
xorl
cmp
notl
jg
pop
mov
jo
sti
inc
inc
xor
or
adc
add
cmp
cmpl
jge
rol
fisubl
ss
pop
and
ret
cwtl
dec
mov
inc
lret
jecxz
out
lods
jl
hlt
cmp
xchg
rcl
imul
xlat
inc
pop
in
insb
pop
das
cmpsb
rcll
push
jg
push
and
inc
and
bound
mov
pop
adcb
mov
push
sub
and
inc
push
add
enter
cmpsb
dec
pop
data16
into
int
sub
xchg
sti
int3
sbbl
sub
repnz
lret
sub
push
lret
mov
inc
out
or
jbe
int3
test
cld
adc
dec
push
andl
jp
out
push
es
imul
add
insb
out
sub
mulb
push
xchg
movb
sti
shl
test
ds
outsl
sbb
add
daa
call
mov
push
ja
dec
xchg
shrb
and
pop
inc
xor
int
lods
or
xor
lods
in
outsb
cli
mov
jne
dec
pop
dec
fiadds
jo
and
adc
and
mov
or
mov
in
pop
bound
xchg
sub
push
push
fwait
inc
ljmp
cmpsb
test
mov
cmpsl
adc
paddusb
mov
or
push
dec
sub
sub
rorb
ja
jbe
sbb
repz
out
rcrb
pop
subb
scas
sub
ds
dec
xchg
jns
mov
jge
xor
int3
jne
int3
int3
out
mov
mov
lahf
inc
bound
add
xor
xor
jb
in
adc
pop
xchg
nop
pop
lds
adc
out
out
scas
cmp
inc
mov
push
add
push
lcall
jl
aas
subb
add
or
lock
jmp
scas
dec
push
inc
addl
subl
inc
popa
and
mov
or
int3
sti
lcall
or
xor
pop
sti
test
cmp
movsl
xlat
ljmp
lods
cmp
jecxz
xchg
sbb
dec
ljmp
jmp
in
cmp
add
outsl
arpl
mov
dec
lock
mov
jae
int3
mov
fcoml
cwtl
outsl
andl
xor
sub
xor
insb
fisttpl
int
pop
insb
jge
lock
fbld
fcompl
jbe
fdivrs
ljmp
dec
dec
cmpsb
jge
push
jmp
sub
xchg
scas
xchg
jmp
movsl
sbb
js
cmp
cmovnp
adc
sbb
jecxz
sbb
lods
sti
sub
jno
push
xlat
andw
fs
xchg
xor
dec
xlat
cmp
sarb
jnp
jge
fwait
dec
leave
aas
cmp
jae
int
cmp
pop
xlat
clc
in
jbe
mov
cmp
mov
call
and
aam
and
insb
mov
xchg
fwait
rol
mov
adc
cltd
pop
mov
cmp
or
ret
sbb
loop
pop
pop
insl
jo
xor
mov
mov
lret
test
cmp
mov
popa
pop
xor
xor
or
inc
inc
lods
ret
mov
aas
aam
fcomip
add
cmp
shrl
fistl
int3
fsubr
add
imul
bound
std
bound
loop
popl
sub
push
insb
mov
push
fisubl
push
icebp
xor
jno
sbb
xchg
scas
or
dec
jg
mov
sbb
and
iret
dec
imul
movsb
out
or
dec
orb
imul
add
addr16
adc
pop
pop
mov
xchg
imulb
in
test
in
dec
jle
push
lea
ljmp
cmpsb
imul
insl
into
insl
mov
or
insl
jmp
add
stos
outsl
jbe
movsb
pop
stos
repnz
or
sbb
test
out
jecxz
imul
pop
and
pop
dec
in
mov
mov
shrl
xchg
nop
es
cmp
xchg
inc
addr16
inc
cmp
cltd
xchg
addr16
scas
lret
imul
je
dec
into
outsb
nop
sti
sbb
mov
or
popa
cmpl
xor
push
inc
ret
push
cmp
sbb
jo
jne
loopne
adc
pop
xchg
xchg
pushf
aaa
pop
xchg
push
andb
test
adc
jle
mov
fisubl
outsl
inc
das
mov
scas
dec
and
pop
sub
mov
mov
lahf
ja
addr16
mov
pop
and
cmpsl
lret
fsubrl
push
stos
iret
stos
or
bound
jge
rclb
add
mov
jge
jb
mov
and
jbe
ss
std
stc
xchg
loop
cmp
jae
adc
movsl
mov
mov
mov
mov
mulps
adc
dec
lods
test
sbb
call
mov
int3
mov
ss
jmp
pop
imul
dec
jg
pop
lcall
pop
jp
add
add
xchg
gs
in
lods
inc
orb
hlt
or
lahf
mov
adc
jmp
jmp
push
sub
xor
call
mov
and
stos
or
jecxz
or
lods
test
es
out
push
out
xchg
inc
cmp
jne
arpl
je
leave
add
ret
pop
cli
es
push
xor
jecxz
out
sub
pop
out
mov
and
cmp
mov
idivb
push
cmpsb
xchg
or
jno
fstps
pop
out
loope
adc
lahf
jns
adc
fwait
mov
dec
jge
stos
ret
call
sub
cmc
cwtl
mov
pusha
call
mov
hlt
jns
movsb
outsl
movsl
mov
pop
out
adc
xor
jp
dec
iret
or
imul
jnp
and
ljmp
mulb
mov
lret
jno
mov
rcl
bound
fs
popf
int3
mov
ja
pop
mov
mov
in
mov
adc
shlb
out
mov
hlt
aaa
das
bound
ljmp
call
fldl
sub
cmp
jg
push
xchg
sub
aas
push
push
push
int3
push
lock
imul
dec
mov
mov
cmp
loope
inc
xchg
xchg
jle
cs
notl
insl
imul
mov
movsl
out
push
shlb
fwait
mov
icebp
pop
out
mov
gs
mov
iret
fisttpll
pop
shll
fcoml
jo
pop
iret
adc
pop
pop
aas
in
or
sub
dec
aam
mov
mov
incl
sbb
les
cmc
subl
jno
push
dec
sbb
add
call
mov
bound
nop
cmpb
pop
xchg
add
hlt
mov
lods
sahf
jp
mulb
imul
out
int3
xor
icebp
sbb
test
stos
ds
stos
or
call
das
dec
bound
pop
movsl
fisubrs
sub
fidivl
inc
and
rcll
fbstp
or
and
roll
push
add
lock
ret
push
jns
test
xchg
mov
movsb
idivb
lahf
push
dec
cli
in
mov
scas
jo
fsubl
in
fistps
mov
sbb
inc
popf
jl
ret
aam
mov
cmp
cmp
in
roll
adc
dec
iret
inc
or
orb
in
adc
dec
jecxz
add
ljmp
jae
test
jg,pt
xchg
ss
flds
mov
loope
movsb
dec
cmpsb
mov
insl
pop
inc
xchg
xorb
repz
xchg
sbb
shrb
pop
jmp
dec
out
xchg
insb
std
mov
mov
test
lds
stos
cli
jbe
sbbl
rcrb
cmp
sbb
cmp
push
jb
jecxz
int3
addr16
movsl
addr16
ja
cmpsl
xor
ss
and
dec
add
aas
lods
lret
jle
inc
or
fistpl
fsubp
sub
xlat
nop
add
aas
loope
fimuls
or
xchg
shr
les
movsl
push
mov
clc
mov
push
stc
dec
adc
ja
dec
push
sub
das
lcall
mov
add
addr16
test
mov
add
popw
lahf
mov
cmp
xchg
xchg
ss
mov
cmp
cmc
in
mov
sbb
adc
or
in
test
std
sbb
xchg
sub
push
jmp
or
mov
sub
rclb
pop
sti
inc
dec
jne
mov
sahf
sub
jno
jns
mov
or
lahf
cmc
inc
pop
jg
adc
movsl
push
xor
nop
cli
mov
mulb
jne
mov
xor
sbb
test
jb
or
enter
repnz
into
mov
adc
je
dec
mov
loop
xchg
imul
out
nop
xor
dec
cwtl
clc
cmp
mov
mov
clc
test
data16
jge
sbb
addb
inc
mov
add
add
js
outsl
xchg
pop
mov
mov
mov
fwait
divl
mov
sub
or
fstps
dec
add
jg
mov
lods
or
fs
addb
clc
sbb
test
mov
or
cmp
lret
mov
stos
fisubrl
sbb
arpl
dec
fidivl
add
dec
sub
jo
inc
movsb
jne
push
jbe
inc
mov
mov
adc
enter
mov
scas
mov
mov
enter
shl
arpl
adc
add
add
push
ja
bound
add
adc
dec
dec
mov
xchg
movl
add
arpl
jo
pop
xor
popf
movq
test
mov
lock
mov
popa
dec
xorl
test
pop
daa
push
cmc
sbb
push
inc
or
inc
je
and
sub
pop
sub
jb
scas
inc
rol
aas
mov
fwait
scas
xlat
or
jne
insl
push
pop
cmp
lret
xchg
and
mov
pop
fiaddl
pop
ret
and
and
jg
add
lods
push
cmp
or
scas
ds
mov
mov
or
mov
or
mov
vunpcklps
pop
cs
or
notl
jecxz
hlt
sbb
rcr
jle
cmpsb
and
xchg
enter
push
pop
sub
and
pop
xchg
cmp
sub
jg
jmp
lahf
sub
push
inc
mov
push
inc
mov
in
mov
inc
loopne
js
rolb
jnp
mov
aad
and
stos
mov
aad
or
pushf
stos
sub
jg
sahf
dec
dec
ja
sbb
inc
in
pop
repnz
pop
sbb
xlat
jne
or
mov
lods
lods
mov
out
int
subb
inc
jmp
mov
aad
lock
iret
pop
orb
cmp
push
and
je
xchg
inc
ljmp
mov
push
jg
jbe
aam
mov
jge
pop
stos
and
push
add
outsb
sub
imul
sti
outsb
das
mov
mov
mov
sbb
push
mov
fstpt
inc
sub
dec
insl
scas
mov
call
loope
das
pop
sub
cmp
push
rorb
push
push
mov
pop
scas
jnp
mov
push
or
mov
push
add
out
lcall
int3
shlb
dec
pop
xor
or
mov
mov
arpl
push
nop
cmp
stc
sbb
lahf
xchg
fildll
jl
sbb
inc
ret
mov
in
pop
rol
pusha
or
popf
inc
loopne
hlt
push
dec
cmp
and
rep
cmp
push
imul
jecxz
pop
jge
iret
push
mov
push
pop
xchg
cwtl
pop
enter
stos
push
lds
mov
push
hlt
mov
inc
lods
out
or
jmp
in
inc
das
inc
jge
add
jo
jle
movsb
mov
scas
fcmovnb
dec
fisttpll
sar
ljmp
mulb
cmp
cli
arpl
inc
xchg
fiadds
mov
add
cwtl
cmp
test
dec
inc
sbbl
jle
adc
adc
push
dec
ds
push
lods
inc
test
xchg
leave
pop
rcrb
mull
scas
inc
sbb
mov
stos
fnstsw
ds
cli
or
out
adc
mov
sbb
popf
fwait
or
shl
sbb
push
lods
push
cmc
push
and
xchg
push
repnz
jle
lock
ja
bound
jnp
push
dec
pop
lock
cmp
stc
rcrl
add
jle
inc
sub
add
fwait
sbb
push
lods
fisubs
sbb
movsl
in
jne
push
arpl
lcall
dec
lds
pop
aaa
pop
xor
mov
xor
and
xlat
jecxz
mov
shrb
push
cltd
mov
cmp
negl
lods
xchg
lret
in
jecxz
mov
jl
pop
push
cmpsb
cld
pop
and
sahf
and
andb
xor
cmpsl
sbb
loopne
roll
and
push
dec
mov
sarb
loop
xor
pop
cmp
cmp
aas
push
lea
loopne
push
push
push
push
mov
daa
add
aas
push
dec
out
mov
ja
mov
xor
ja
je
movsb
adc
lcall
jnp
aas
mov
and
arpl
push
inc
cmp
sub
lahf
push
push
mov
and
mov
mov
data16
mov
in
pop
sbb
test
or
lret
cmp
add
and
les
in
inc
xchg
mov
movl
lcall
xchg
pop
test
or
cs
lcall
fwait
shrl
arpl
aaa
inc
xchg
cltd
aas
insb
sarl
arpl
mov
sub
das
jl
jg
ror
mov
arpl
ja
scas
fisubrs
jp
mov
ret
adc
xchg
shll
inc
je
mov
dec
shlb
data16
push
popf
mov
fcmovnbe
adc
int3
jbe
fisttpl
je
dec
dec
stc
dec
fdivrl
mov
das
cmpsl
in
out
xorl
movsb
jo
adc
jbe
lahf
xchg
cwtl
and
imul
and
dec
scas
pop
push
dec
pop
xchg
inc
push
out
push
out
adc
ss
jne
push
inc
jbe
lcall
daa
movsl
cmc
xchg
jnp
push
push
outsl
lahf
inc
sub
adc
lds
adc
in
dec
push
cmpsl
outsl
repz
adc
pop
and
jnp
xchg
aas
push
mov
adc
enter
inc
mov
push
jg
mov
jnp
test
testb
stos
sbb
outsl
mov
out
xchg
test
mov
js
jne
cmp
push
stos
pop
ja
outsl
xor
out
iret
dec
inc
inc
jno
mov
iret
cld
in
stos
dec
adc
cmp
mov
movsb
ret
fisubs
cmp
mov
sbbb
or
add
fdivrp
adc
jge
repnz
aam
shr
fcoms
shrb
xor
movsb
cli
andl
fs
icebp
xor
push
mov
push
push
test
loopne
insl
adc
imull
scas
sub
cmp
daa
mov
mov
out
test
ds
aad
adc
cltd
xor
dec
mov
or
xor
ja
and
loop
fmul
jmp
out
push
add
jbe
mov
push
rorl
sbb
movsb
rclb
mov
je
inc
or
jno
test
xor
push
call
sub
push
sbb
pop
mov
and
jl
mov
out
dec
and
scas
push
sbb
or
sub
mov
mov
xchg
dec
insb
mov
jl
push
inc
xchg
fcoml
adc
xchg
jmp
std
js
mov
jno
out
js
jg
mov
adc
pop
mov
mov
push
ljmp
and
push
xor
add
mov
mov
and
mov
mov
cmpsb
push
in
pop
adcl
adc
cs
push
mov
les
xor
fs
xchg
xchg
inc
sbb
xor
into
pop
or
xchg
les
fidivl
fidivrs
fs
cmpsb
adc
add
shlb
xchg
rcl
sub
pushf
arpl
xor
pop
ljmp
inc
xchg
inc
mov
andl
aaa
mov
push
daa
mov
ret
dec
and
dec
cld
out
and
push
mov
lea
pop
ss
pop
lret
mov
xchg
test
and
lds
dec
pop
or
xor
mov
add
mov
cli
mov
push
jle
add
iret
mov
push
sti
mov
je
enter
dec
cwtl
mov
sbb
xor
sub
lods
xchg
inc
push
inc
sbb
or
or
fstpl
mov
xor
mov
fstl
mov
ret
and
ja
andl
test
push
call
movl
or
daa
pop
adc
add
outsb
cmp
xchg
jo
adc
lock
bound
enter
in
xor
cli
test
loopw
sbb
pslld
ffree
cmpl
lahf
imul
int
mov
mov
sbb
xchg
mov
inc
aaa
push
sbb
popf
arpl
pop
je
idivl
hlt
andb
sarb
sub
pop
in
jb
dec
lret
pushf
int3
cs
dec
mov
lret
lock
add
jnp
jbe
cld
push
js
xchg
mov
and
jmp
pop
addl
mov
adc
mov
xchg
or
add
es
adc
dec
sbb
aaa
sbb
and
out
xchg
sbb
push
rorb
lret
imul
push
adc
pop
sarb
decb
ror
imulb
mov
inc
adcb
mov
movsl
xchg
or
in
js
bound
repnz
scas
sub
and
lret
jl
dec
cmp
sbb
xchg
lea
bound
mov
or
out
mov
or
dec
push
cmc
ss
jmp
jg
jns
pop
lock
push
cmp
jge
insl
stos
sbb
rorl
jg
mov
divb
imul
jbe
sub
popf
lahf
add
dec
cli
sub
pop
sbb
ret
jp
jnp
fldl
pop
or
loopne
mov
mov
push
js
jg
js
or
stos
pusha
jecxz,pn
push
stos
jle
and
push
das
mov
xor
aad
cs
les
mov
adc
pop
jmp
xor
mov
mov
mov
enter
sahf
sub
lahf
aas
pop
les
ljmp
sti
or
mov
xchg
jge
cmp
ds
cmpsb
ss
pop
int
and
or
pushl
cmp
add
outsb
lret
es
lret
stc
rol
popf
xor
ss
dec
es
cmp
aam
stos
jp
add
test
lahf
insl
cmp
std
push
js
xor
jge
xor
and
inc
sub
xor
jecxz
lods
pop
inc
inc
sub
cmpsb
es
pop
sub
adc
movsb
jp
in
std
scas
insl
pop
daa
jl
fimull
shlb
jno
cmp
cmp
push
sub
fimuls
aam
ljmp
mov
sbb
or
stos
into
fsubr
inc
int
push
sbb
cmp
test
sub
dec
andl
lods
mov
mov
gs
ds
xor
pop
mov
shlb
sub
adc
xchg
scas
push
lds
lret
int
in
cmpsl
mov
push
insb
test
adc
mov
mov
adcb
inc
aas
jbe
or
test
inc
xchg
rol
out
and
pop
push
loope
mov
imul
lock
pop
cmpsb
mov
iret
jmp
mov
adc
stos
lea
sub
cs
loopne,pt
xchg
inc
mov
dec
pop
ss
sbb
repz
and
dec
lods
or
mov
fimull
adc
stos
out
and
or
enter
adc
add
push
fidivrs
add
add
jb
fbld
bnd
fldenv
lock
lods
movsb
popf
lcall
lods
imul
cmc
and
or
mov
nop
pusha
push
movmskps
mov
out
cmp
out
mov
out
cwtl
dec
jp
int
add
add
pop
cmpsb
cld
sbb
adc
int
pop
add
dec
cmp
inc
leave
add
dec
push
pop
push
mov
mov
push
sbb
roll
ljmp
pop
lret
cmp
test
pushf
sbb
dec
cmc
dec
out
insb
out
jnp
movsb
cmpsb
shlb
add
pop
in
hlt
mov
dec
ja
ficompl
imul
mov
xor
cs
popa
adc
mov
aaa
int
ljmp
cmpl
and
dec
jbe
fdivr
scas
mov
lahf
push
leave
and
in
fimull
mov
cmp
mov
mov
aam
aaa
test
jb
sti
pop
out
push
cmpsl
pop
ss
jns
pop
jo
xor
pusha
or
iret
lret
cli
sbb
add
mov
fdivr
inc
ficomps
sub
cmpsb
sbb
mov
push
cmp
mov
sbb
dec
pusha
jbe
fcomip
push
push
in
test
mov
cmp
into
pop
imul
movsb
dec
aam
sub
push
sub
fsubrs
out
je
inc
add
and
xchg
adc
icebp
mov
lret
int3
jge
int
rcr
cld
lret
mov
je
push
mov
jmp
mov
test
test
and
ljmp
out
rcrb
jo
push
jp
rcpps
or
pushf
lret
daa
sub
sub
cli
movsb
mov
or
aad
ljmp
in
mov
outsb
jecxz
mov
fs
jbe
sahf
push
in
inc
lea
add
mov
push
into
fcom
jbe
adc
inc
dec
ret
xchg
adc
in
push
rcrb
or
sbb
jb
lahf
sub
xchg
inc
lods
cmpb
cmpl
aas
sub
xchg
orl
dec
sub
ss
clc
paddq
nop
mov
lds
cltd
sub
enter
aaa
jp
fldenv
cmp
shl
lahf
test
sbb
shlb
xchg
xor
ret
jne
neg
cmp
push
adc
fidivs
sub
lahf
inc
addr16
mul
mov
add
ds
lret
dec
je
das
xchg
push
leave
xor
xlat
sbbl
push
popa
xchg
jae
scas
std
repnz
pop
push
js
test
adc
jo
imul
adc
out
cwtl
fsubrl
jne
mov
sbb
adc
sub
cmp
mov
mov
xchg
imul
scas
call
jb
push
dec
daa
jbe
cltd
popf
or
arpl
xor
push
cmc
cmp
repnz
pop
roll
sarl
mov
mov
sub
mov
xchg
or
push
ss
xor
jmp
pop
jbe
xchg
pop
pop
inc
or
pop
xor
xchg
std
in
and
dec
adc
adc
movsl
addr16
inc
inc
lcall
test
pop
popl
jne
sbb
jecxz
xor
and
addr16
add
cmp
mov
lahf
inc
add
call
push
outsb
sbb
sub
dec
jb
and
rcl
and
aas
fucomip
int
jbe
mov
repnz
push
sti
cmc
xlat
fcoms
dec
jb
jne
and
xchg
insl
ret
jns
xor
sub
cwtl
sbb
mov
xor
mov
push
imulb
in
sub
or
sbb
xorb
xor
lods
scas
dec
sub
je
xchg
push
les
mov
jmp
push
inc
fbld
leave
pop
cs
lea
cmp
jmp
mov
and
gs
imul
mov
data16
enter
mov
lcall
xchg
enter
pop
push
addr16
jmp
mov
aam
inc
mov
imul
push
sub
sub
popa
lds
pop
pop
hlt
ret
cmpsl
mov
or
push
push
test
dec
ret
movsb
popa
mov
push
cwtl
cmpsl
decl
mov
mov
push
test
mov
jmp
in
ret
fwait
adcb
jbe
lcall
out
lahf
dec
and
lds
inc
call
int
lcall
ret
dec
dec
xchg
mov
out
xor
ss
push
and
or
push
and
cmp
inc
pusha
mov
cmpsl
in
lret
xchg
xchg
stos
sbb
gs
jmp
add
and
shlb
lods
xorl
flds
or
dec
pop
idivb
xor
push
push
or
pusha
pop
arpl
cmpsb
mov
movd
insl
inc
sub
cltd
dec
cmp
xlat
mov
and
xlat
or
icebp
into
mov
notb
jecxz
xor
or
es
fdiv
loopne
mov
jb
push
sub
sbb
repnz
mov
dec
cmpsb
push
pop
hlt
loop
xor
sarl
adc
sub
fsubrl
rorb
shlb
test
out
adc
lret
rolb
and
imul
lret
and
icebp
popa
data16
pop
or
hlt
mov
pop
ja
cmp
mov
popa
imul
and
pop
cmp
subb
stc
mov
int3
add
aad
or
or
jg
or
adc
or
inc
test
add
orb
mov
mov
mov
jl
sahf
rcrb
cmp
icebp
jo
sbbb
mov
xor
mov
inc
mov
gs
leave
and
jns
adc
test
call
adc
mov
lods
mov
mov
call
pop
enter
clc
sbb
push
mov
fisttpl
dec
mov
lret
outsb
data16
adc
cwtl
loopne
add
shrl
xchg
jbe
inc
out
out
dec
orl
lods
mov
test
push
xor
das
cmp
jbe
inc
mov
sbb
shrb
jp
mov
shr
push
movsb
lret
fsubrp
pop
mov
in
aaa
repz
adc
add
pop
in
sub
or
bound
push
rclb
push
jmp
in
ds
adc
add
and
mov
and
in
addr16
push
inc
mov
jbe
outsb
std
gs
fiadds
xchg
lret
cmp
not
std
mov
lock
xchg
lods
in
cld
fldenv
repz
pop
daa
pop
sbb
mov
nop
cltd
cltd
std
inc
pusha
xorl
ss
sub
pop
pop
xchg
pop
mov
es
mov
pop
in
nop
mov
out
mov
es
dec
xchg
je
fwait
jne
xor
mov
in
repz
cmpsb
mov
incb
mov
mov
cmp
cmp
xchg
cmp
pop
cmp
out
sbb
xchg
dec
and
loope
sti
mov
push
pop
repz
cmc
cwtl
adc
sahf
xchg
xlat
jmp
ret
fstl
mov
fldenv
sub
jae
xor
loopne
maxps
xor
mov
mov
adc
push
fdivs
addr16
cmp
sbb
scas
arpl
enter
mov
or
inc
fwait
ss
mov
loop
or
sub
cmp
ret
xchg
out
popa
adc
add
loopne
push
js
dec
and
into
loope
in
ljmp
and
hlt
scas
xchg
stos
out
pop
jg
pop
xchg
sub
xchg
mov
xor
sub
into
mov
or
outsb
cli
cmp
xor
lahf
sub
xchg
push
mov
mov
mov
pop
je
cmp
mov
cvtps2pd
test
icebp
lret
mov
stos
or
dec
in
test
into
pop
mov
loop
xor
inc
mov
aas
daa
cmp
cmp
mov
and
fstpt
adc
ja
pop
scas
sub
cli
xchg
imulb
popa
add
push
aad
dec
inc
mov
dec
add
pusha
mov
aaa
idivl
in
and
lahf
cwtl
lcall
and
sub
dec
lods
mov
pop
add
sub
add
mov
pop
xor
or
dec
aas
fildl
pop
xchg
pop
addr16
xchg
push
jecxz
imul
movsb
dec
xchg
cmpsl
xor
mov
mov
push
inc
fwait
push
gs
out
mov
xor
lock
lods
loopne
xchg
lods
fwait
cvtps2pi
into
mov
test
inc
inc
movsl
add
ljmp
jno
loope
pop
fiaddl
adc
mov
pop
and
mov
das
jnp
testl
ds
popa
test
jmp
fcomp
xchg
and
lret
test
or
mov
cld
cmp
lods
mov
iret
out
cs
or
aam
push
mov
inc
xchg
jbe
mov
cli
sarl
jae
xor
add
pop
push
add
cmp
cld
in
test
push
sbb
add
dec
daa
jmp
mov
pushl
push
aas
fnstcw
rclb
das
fabs
addl
shll
xlat
mov
loop
push
mov
sub
mov
sbb
and
mov
cmpsl
mov
and
push
mov
mov
stos
cmp
lret
pop
in
call
icebp
mov
sub
cmp
lds
add
inc
dec
cli
fists
addb
dec
inc
xchg
xchg
daa
inc
mov
sub
scas
inc
test
lods
insb
rcrb
or
mov
mov
and
xchg
pop
and
lret
outsl
je
sti
insb
jo
xchg
sub
repnz
mov
shll
mov
mov
leave
dec
jnp
mov
sahf
jne
pop
lea
sti
or
dec
stos
xchg
out
cmovle
pop
pop
test
lret
es
and
orb
aaa
jp
add
xor
jnp
nop
dec
mov
pop
xchg
xchg
and
push
dec
lret
test
sub
das
out
or
sahf
push
xchg
mov
mov
jle
xor
shll
xor
ret
stos
push
sub
inc
pop
outsb
popf
pop
incl
sub
dec
inc
mov
adc
fcoml
and
pop
xor
mov
xchg
and
push
mov
xor
mov
cmp
and
shll
push
inc
cmp
push
or
movsb
addr16
sbb
jl
xchg
push
mov
push
jb
sub
sbb
in
stc
add
sbb
in
daa
adc
cmp
repnz
sahf
mov
loopne
mov
dec
shl
iret
jne
cmp
sbb
in
pop
out
lret
jno
and
shll
inc
sbb
ret
iret
pop
iret
inc
js
out
shl
mov
sbb
cmp
fisubrl
pop
and
push
into
sub
xchg
jl
jp
bound
jmp
stos
lock
cmp
mov
inc
roll
out
in
inc
jg
xchg
push
and
mov
sbb
and
mov
inc
sbb
imul
aaa
out
ljmp
push
lods
dec
mov
and
pop
push
and
sbb
fiadds
dec
jge
enter
les
rol
jge
shrb
xchg
sub
push
xchg
adc
pop
sbb
fisubs
lahf
mov
lret
negl
xor
addr16
sbb
xor
daa
cld
push
in
inc
stos
fisubrs
jae
add
sar
jmp
adc
cmpsb
stos
addl
sti
push
jp
or
enter
mov
out
pop
das
xor
and
or
mov
or
ror
shll
jo
xchg
int3
xor
cld
inc
push
in
cmpb
pop
scas
mov
xchg
adc
push
jle
jb
add
mov
add
sub
push
inc
sub
inc
lea
mov
lret
gs
xor
jp
cwtl
mov
cmpsb
jg
jg
lcall
pop
inc
sbb
cld
inc
pop
sbb
mov
pop
push
lods
ss
cld
repz
leave
push
mov
mov
dec
mov
xchg
aas
insb
fsubs
xor
addl
and
arpl
mov
pop
into
imul
mov
mov
repnz
xor
rclb
in
sahf
aaa
lock
mov
mov
outsb
xchg
ss
sbb
in
data16
xchg
pusha
outsb
cli
mov
pop
into
cmpsb
in
movsl
das
repnz
xchg
rorl
xchg
pushf
cmpsb
std
mov
decb
ds
leave
jbe
adc
jo
add
ds
add
rclb
add
sub
arpl
mov
testl
inc
jnp
xchg
stos
add
lds
out
pushf
test
stc
sbb
mov
adc
stc
lea
lret
lods
inc
xchg
mov
test
clc
repz
dec
into
dec
in
insb
fsts
shrl
sub
or
xor
loopne
jmp
push
out
fimull
dec
jb
in
lods
sub
pop
les
loop
cmp
mov
cmp
pop
das
xchg
rolb
cs
mov
ss
repnz
xchg
cmp
lret
adc
pushf
and
push
sub
push
pushl
ror
repnz
add
push
lcall
lock
jl
mov
outsl
cmpl
xlat
lods
shl
xor
leave
pop
out
cmp
ficomps
cmpsl
aam
pop
cs
pop
out
enter
rorb
mov
cs
mov
xchg
push
aaa
fisttpl
outsl
push
pushf
mov
cmp
mov
inc
bsr
clc
xorl
lahf
push
leave
outsl
cmpsb
ret
dec
mov
ss
rorl
jmp
and
dec
push
scas
shrl
cwtl
cmpsl
stc
xor
cltd
scas
lret
xor
pop
test
ljmp
sub
cmp
das
loop
movsl
mov
je
add
fstpt
push
mov
js
or
outsb
adc
test
test
pusha
dec
fidivl
mov
stos
ret
bound
xor
xchg
cmc
jle
xchg
loopne
cmpb
mov
dec
jle
ror
jnp
jno
movsb
das
pusha
fisttpll
sbb
dec
enter
repnz
push
out
int3
inc
or
jl
shll
and
sub
cmp
jbe
pcmpgtd
mov
mov
arpl
aam
mov
add
roll
mov
mov
add
mov
mov
lret
add
shr
adc
adc
pop
stc
mov
cmpsl
hlt
pop
mov
jp
mov
fisubrs
dec
adc
cmp
add
in
and
cmp
cli
imulb
aam
pop
fdivr
adc
xchg
clc
and
cmp
sub
dec
into
mov
insl
and
or
out
leave
mov
and
xor
not
mov
dec
mov
add
mov
inc
push
sub
mov
inc
pop
repz
push
inc
and
sbb
push
push
cmp
mov
cli
pop
in
les
jno
xchg
sub
mov
xchg
lods
xchg
sbb
and
shrl
sub
shlb
aad
scas
int
loop
iret
ss
jmp
popa
inc
and
addr16
pop
jp
jl
cmp
movsl
nop
pop
stc
mov
dec
jmp
aaa
fisubl
jbe
pop
std
mov
mov
aad
iret
fcompl
clc
inc
cwtl
aaa
or
push
inc
fs
pop
imul
mov
scas
jo
lret
pop
loope
adc
lds
idivb
sbb
popf
xlat
adc
dec
lods
and
mov
scas
cwtl
mov
dec
adc
aaa
cli
enter
dec
movb
adc
js
pop
mov
adc
dec
les
jb
in
das
and
xor
popa
mov
stos
mov
lcall
inc
push
std
inc
jle
roll
jmp
sbb
push
in
in
mov
xchg
add
divb
iret
iret
xor
repz
lcall
sbb
leave
jns
cmp
inc
out
fcmovne
hlt
and
and
jbe
and
mov
push
mov
outsb
push
movsb
mov
push
fnstcw
cltd
dec
loope
and
sbb
int
orb
jnp
test
adc
xchg
sub
pop
inc
fs
std
jmp
aad
mov
xchg
pop
imul
shll
stos
lret
ja
cmpsl
push
lret
push
movq
xlat
ficoml
inc
imul
aas
stc
ss
sbb
jle
mov
cmpsb
push
lea
pop
aas
and
add
sbb
mov
jnp
cmp
xor
insl
jne
xchg
fwait
shlb
xchg
stos
add
test
lods
xchg
loop
imul
jmp
insb
dec
adc
ret
pop
div
sbbb
cmp
out
xor
lret
rorb
xchg
shll
adc
stos
filds
imul
xchg
subb
xchg
mov
sbb
lods
mov
imul
stos
fcomp
fisubrs
arpl
inc
lcall
mov
mov
scas
push
test
cmp
sub
pop
mov
lret
sahf
jmp
xor
mov
or
mov
adc
repz
xor
and
sub
sub
insb
inc
jno
xchg
and
cmp
rcr
aad
cmpsb
aad
dec
cmp
popa
out
sub
popa
pop
fcoml
dec
inc
mov
cld
test
pop
test
jmp
xchg
popf
jle
ja
gs
and
xlat
mov
mov
mov
sub
incl
insl
jp
xor
push
add
ret
mov
stos
icebp
shlb
mov
pop
loop
in
mov
or
add
xchg
and
xchg
dec
mov
pop
xor
imul
test
sub
and
push
and
jne
addl
les
xchg
sub
pop
lahf
inc
xchg
sbb
and
aaa
mov
leave
shl
mov
pop
xchg
xor
sub
mov
loope
cmpsl
push
xchg
cmp
fs
bound
sbb
jmp
sbb
stos
cli
mov
int3
mov
and
nop
fwait
in
scas
leave
mov
jmp
ds
es
stos
inc
adc
fidivl
pop
mov
sub
pop
dec
gs
sbb
scas
jmp
mov
test
mov
ja
sbbb
mov
cmp
sbb
out
xor
inc
clc
loope
adc
dec
repnz
test
add
pop
mov
test
pop
fnstsw
fnstsw
inc
mov
ret
push
mov
inc
pop
mov
incb
inc
and
out
mov
outsb
jmp
xor
into
sub
add
sub
or
cmp
dec
ss
lahf
test
test
dec
sbb
push
and
mov
cmpsl
repnz
sub
adc
loop
add
add
insl
int
pop
fwait
and
xchg
lret
push
jae
sub
loop
out
pop
mov
pop
cmpsb
fldl2e
adc
jns
xchg
pop
dec
pusha
test
subb
nop
jne
adc
jmp
dec
adc
mov
add
insb
add
cmp
test
nop
nop
stos
test
xchg
xchg
imul
scas
cmpsb
jle
or
aas
jae
xchg
jp
pop
inc
push
sbb
or
in
sti
notl
rcrb
aas
out
sub
in
and
jae
pop
into
xor
or
cmc
or
sbb
bound
or
clc
add
or
push
xor
lret
pop
lea
pushf
test
mov
push
in
or
in
ss
fdivl
mov
pop
dec
or
pop
xchg
les
adc
push
shl
sbb
mov
hlt
mov
je
insb
enter
gs
xchg
sub
and
lcall
lcall
addr16
xchg
lahf
cmpsl
mov
icebp
cld
push
mov
push
mov
imul
ficoms
iret
adc
nop
scas
lret
jmp
nop
xor
pop
cmpb
in
adc
ror
mov
lret
mov
push
mov
jmp
mov
loop
cmpsb
aad
shrb
mov
into
es
cmpsb
lea
std
mov
nop
adc
dec
iret
rcr
add
dec
rcll
add
sub
test
fwait
push
add
mov
sub
test
jno
jae
inc
call
sub
fmull
sbbl
mov
xchg
mov
outsl
adc
xlat
jmp
jl
mov
sarl
jno
jle
dec
loop
pop
lret
dec
cld
mov
xor
decl
xchg
xchg
push
jle
inc
jae
adc
test
xchg
adc
sbb
test
xor
mov
inc
jmp
sub
xlat
adc
dec
dec
lods
cld
insl
mov
mov
test
pop
idiv
lock
filds
out
hlt
out
sbb
xor
mov
shl
es
sbb
mov
cs
mov
inc
stos
jno
clc
mov
or
mov
add
sahf
inc
arpl
or
xchg
arpl
lahf
jle
pop
aas
iret
mov
pop
adc
mov
xchg
arpl
sbb
pop
aaa
jmp
popf
jno
push
aad
adc
push
inc
cli
test
push
inc
cmp
dec
push
pop
lahf
dec
push
or
pop
adc
sbb
sbb
imul
iret
push
hlt
adc
pop
cltd
mov
les
in
in
ret
mov
inc
imull
xor
and
lcall
loopne
inc
jne
mov
pop
push
stos
push
aam
jo
lods
sbb
xor
cld
aad
push
jp
pop
ror
pop
cmpsb
xchg
out
mov
in
cmp
pop
push
jae
mov
mov
mov
idivl
dec
mov
cmp
add
cld
fsubrl
mov
cs
pop
lods
lea
add
lret
lds
mov
lods
dec
repnz
out
inc
enter
xlat
arpl
pop
mov
sti
repnz
and
test
je
mov
iret
out
sbb
sbbl
and
negl
pusha
xchg
push
sbb
shl
leave
shr
pop
sbb
addl
daa
cs
push
mov
lods
movsb
xlat
xor
cmp
fistpl
sahf
pop
repnz
xor
push
xchg
or
jg
decb
push
mov
adc
pop
lock
push
insb
mov
stos
and
divl
test
cwtl
sbbl
pop
imul
int3
mov
and
ss
jg
in
xchg
or
cltd
jmp
and
mov
or
leave
xor
nop
dec
roll
repnz
in
sbb
mov
lds
imul
jne
cmp
or
lods
or
inc
mov
lea
mov
inc
ja
test
shl
stos
dec
cs
jl
lret
jbe
inc
sarb
jg
rcrl
sub
or
adc
jecxz
nop
jl
dec
lods
dec
mov
xor
mov
in
inc
outsb
in
ss
sub
pop
xchg
dec
mov
add
clc
jp
jne
pop
and
sbb
icebp
aam
scas
stos
sub
scas
jle
and
aas
pop
dec
or
pop
mov
fimull
test
xlat
xor
ja
fiaddl
mov
aas
pop
or
es
xor
addr16
shll
mov
adc
sahf
sbb
xor
inc
xor
sub
icebp
sbb
ret
jmp
jno
jae
sbb
outsl
xorl
lods
jle
pop
popf
aad
rorl
sub
mov
dec
dec
mov
add
lahf
icebp
pop
mov
inc
sub
cwtl
push
test
les
fmull
inc
inc
lret
xor
xor
jbe
into
rorb
mov
fs
xor
mov
inc
out
mov
jne
push
fcmovnb
rolb
inc
es
mov
sub
leave
sahf
popf
inc
mov
or
je
int3
push
cmp
mov
fwait
dec
loope
jmp
cmpsb
cli
call
movsb
pop
mov
mov
add
out
jl
das
adc
add
es
in
cli
adc
subl
add
mov
lods
lods
orl
rcrb
xor
sub
out
aam
inc
pop
aaa
mov
mov
inc
xchg
int
push
jae
push
je
out
ljmp
divb
and
or
lcall
loope
icebp
and
add
or
loop
arpl
mov
xchg
push
out
mov
or
jg
das
xchg
mov
inc
aad
inc
orb
sbb
mov
fsubrp
aaa
push
inc
es
addr16
cmc
stos
popf
shl
mov
mov
shrl
and
out
mov
sub
sub
addb
hlt
rolb
inc
negl
or
jl
xor
mov
sbb
leave
cwtl
pusha
pop
add
jae,pt
push
and
ds
push
mov
or
in
hlt
mov
repnz
dec
into
aad
mov
or
jle
inc
mov
sbb
jp
addr16
push
aas
fimull
pushl
push
adc
loopne
rcrb
jns
movsb
xchg
faddl
lcall
dec
stos
push
push
fstl
enter
aam
mov
pop
movsl
jp
mov
mov
decb
aam
imul
xlat
sbb
push
sbb
adc
mov
dec
lahf
dec
mov
ss
das
fnstsw
cli
es
in
orb
and
cmp
call
call
repnz
rcll
jne
getsec
jecxz
adc
adc
sti
scas
stos
jle
and
ret
into
cltd
lcall
xchg
pop
shrb
add
lret
adc
dec
aaa
jo
clc
scas
jp
or
loopne
mov
es
xchg
jp
repz
fdivl
adc
push
cmc
inc
xchg
and
rolb
mov
stos
stos
mov
ret
test
iret
int
sub
inc
mov
in
daa
cmc
xor
movl
xor
or
cmp
cmp
aam
leave
push
int3
inc
inc
push
enter
mov
sbb
das
xchg
mov
xor
imul
xchg
mov
cs
dec
sub
dec
hlt
cmp
push
mov
mov
sub
hlt
push
xor
or
outsb
add
scas
jo
jne
pushf
loopne
aad
inc
ljmp
das
push
movsb
lock
scas
inc
ss
mov
dec
scas
and
jnp
shl
mov
push
cmp
cmp
mov
push
test
mov
mov
cwtl
and
lcall
imul
xchg
insb
and
fs
int3
es
andps
lret
fwait
mov
jno
push
xchg
xchg
rorl
test
push
sbb
fidivrs
xlat
pop
adcl
push
cmp
push
negl
mov
lods
xorb
add
data16
adc
and
add
lods
dec
or
bound
rcrb
cmc
pop
mov
pop
out
pusha
icebp
sbb
cmc
add
xchg
mov
in
or
es
jbe
sti
xchg
rcrb
xchg
iret
decl
outsb
jp
in
fadds
mov
cli
out
fcompl
inc
or
cld
dec
mov
add
shrb
popa
xchg
es
test
inc
in
dec
ss
sub
hlt
jno
js
lods
jge
out
sbb
push
into
dec
js
push
cmp
stos
add
lcall
xchg
jb
cwtl
xor
scas
pop
inc
insb
call
mov
and
adc
mov
aas
mov
push
repnz
xor
test
push
lods
subb
ss
cmpsb
pop
pop
fucomi
jnp
mov
jo
pusha
sti
push
push
int3
pusha
dec
mov
out
shlb
xor
xor
mov
aas
xor
mov
and
mov
sub
inc
mov
push
cld
adc
adcl
ret
push
jno
cmp
fisubs
outsl
rep
jge
dec
cmc
mov
out
or
fcomip
xchg
cmp
lahf
or
jge
adc
mov
mov
sub
arpl
aad
shll
iret
push
stos
add
push
out
pop
les
jmp
sub
mov
mov
and
push
pop
lret
stc
and
dec
ret
push
fsubl
push
xlat
mov
shrb
cltd
mov
movsl
add
lahf
loop
daa
mov
into
shl
cmpsb
dec
dec
inc
pop
data16
addb
xor
shll
int
jg
xlat
outsb
imul
dec
xchg
xchg
fcmovnb
ror
mov
ds
and
cmp
in
jle
push
and
dec
sarl
out
imull
jge
andb
fmul
repnz
xlat
xchg
out
cld
fmuls
push
xlat
aam
in
sbb
imull
ds
cmp
sub
stc
repnz
push
cmpsl
lahf
mov
ror
adc
and
cmp
cmp
add
xor
lret
pop
xor
sbbb
xor
push
imulb
push
aas
cmp
dec
add
sub
mov
hlt
xlat
shl
jbe
rolb
sbb
cmp
push
shrl
inc
imul
imulb
pop
ljmp
repnz
xor
adc
push
mov
mov
fsubrs
iret
pop
test
add
sahf
cmpl
dec
jmp
scas
mov
pop
insl
stos
fcoms
ds
insl
push
lods
out
ja
jmp
testl
push
ds
out
mov
loopne
test
mov
mov
cwtl
cli
push
push
divl
push
mov
inc
mov
xor
sub
imul
stos
addr16
mov
mov
xlat
out
mov
xchg
xchg
dec
sar
fwait
das
test
or
movsl
int3
inc
xchg
dec
outsb
jmp
push
mov
mov
stos
mov
bnd
push
add
lcall
icebp
clc
out
sbb
aam
mov
xor
arpl
mov
adc
pop
mov
sub
or
add
mulb
imul
aaa
sub
cltd
negb
xchg
push
or
dec
lcall
push
inc
pop
out
or
xchg
push
cwtl
in
dec
adc
lcall
sbb
inc
jmp
mov
pusha
test
cmp
lret
dec
xchg
push
cltd
jp
test
addr16
cmp
inc
jne
int3
pop
daa
mov
pop
aaa
lret
mov
out
sbb
jl
pop
das
mov
stos
sti
fimull
divb
orl
ret
fmul
decl
icebp
ret
orb
loopne
mov
jo
and
test
inc
mov
in
sbb
cmp
arpl
inc
sbb
jmp
inc
jo
ret
xor
cmp
imul
or
or
adc
mov
test
cwtl
sbb
cs
popa
out
scas
push
xor
mov
or
lahf
push
sahf
testl
pop
filds
lret
fimull
jp
movsl
sub
xchg
jno
fs
cmc
dec
stos
into
mov
in
das
mov
jle
cmp
push
cmp
push
into
repnz
inc
sub
jp
mov
inc
sbbb
sahf
repnz
movsb
fcomip
pop
cmp
jmp
mov
imul
pop
aam
cmp
sahf
imulb
xor
cmp
add
scas
jno
dec
push
push
data16
fistl
pusha
push
int
push
data16
mov
adc
leave
lods
loopne
fsubrl
sub
mov
es
imul
sub
cmp
cmp
nop
inc
and
inc
gs
and
shlb
aas
lods
ret
and
mov
xor
push
les
incl
sbb
jbe
dec
ja
push
mov
out
loop
and
lea
xchg
lds
mov
loop
xchg
mov
sub
cli
sub
add
cmpsl
xor
sti
orb
push
lret
add
xchg
cmc
xor
push
int3
jbe
lret
int3
out
or
stos
add
cli
sbb
xlat
shlb
fxch
add
imul
mov
sbb
mov
jecxz
sub
jne
cmc
popf
dec
xchg
sub
inc
push
loopne
xchg
dec
or
out
dec
xorb
jo
jbe
sub
cmpsl
sub
add
imulb
mov
cmpsl
pop
mov
sti
push
cmpsb
into
sti
jg
mov
sub
xor
fsub
out
cmp
jg
jae
sub
packuswb
xor
add
and
jmp
mov
pop
sbb
mulb
cwtl
mov
test
xchg
stc
pop
into
jmp
sub
test
std
js
and
stos
pop
inc
push
mov
test
cli
adc
inc
and
push
adc
or
cmp
push
repnz
jnp
outsl
push
dec
mov
jp
jg
mov
scas
mov
or
inc
cltd
fisubl
insb
stos
in
xchg
ss
loopne
inc
sbb
cmp
jbe
dec
xor
xor
cmp
adc
add
mov
xchg
push
sub
mov
and
jmp
mov
jb
add
mov
cmp
in
mov
pop
sbb
stc
cltd
jle
adc
sbb
call
and
in
das
ficomps
or
mov
or
cmpsb
ss
sbb
pop
mov
aam
add
arpl
mov
nop
jle
ds
sbb
or
pushf
xor
lcall
xor
push
push
jb
or
fnsave
pop
cld
pop
mov
add
jl
xchg
or
push
push
mov
imulb
or
loop
test
cmc
cld
lods
jecxz
ljmp
rcr
rsm
cwtl
scas
mov
movsl
xchg
frstor
cmp
mov
lcall
adc
stos
cmp
ret
jns
imul
add
dec
xchg
xchg
insb
cmpsb
aas
push
mov
clts
shl
leave
fdivl
nop
js
loop
call
ds
cmc
test
mov
jb
and
stos
dec
fistl
sub
aas
cltd
mov
pop
movsl
push
hlt
jb
lret
into
repnz
subb
sub
daa
xor
jnp
sbb
xchg
call
lods
inc
xor
insb
lret
push
cli
push
cmp
jno
push
sbb
mov
pop
scas
mov
jecxz
in
sub
and
bndstx
sbb
daa
inc
int3
push
inc
xchg
mov
adc
push
shrb
pop
sbb
xchg
sbb
xor
adc
lahf
lret
into
add
scas
loopne
loopne
mov
push
cmpsb
in
pop
dec
and
xchg
ret
xchg
js
sbb
lock
fs
xchg
sub
xchg
or
and
lahf
mov
xor
add
scas
sub
lock
dec
insl
dec
mov
mov
cmp
cmp
std
xor
jno
in
ss
lret
mov
ds
pop
test
dec
rol
arpl
cmovno
xor
bound
pop
inc
ds
sub
test
inc
jnp
aas
inc
sub
mov
movsl
pushf
mov
xor
add
sub
movsl
aad
aas
sbb
mov
popf
insb
or
addr16
ds
outsl
cmp
mov
dec
dec
repnz
pop
fiadds
adc
or
cmp
pop
popf
mov
into
mov
mov
popa
stos
pushf
jecxz
jo
dec
scas
sub
mov
xor
and
popf
in
sahf
lock
xlat
jl
enter
dec
jl
das
mov
ret
and
mov
inc
addr16
xchg
into
in
mov
les
movsb
mov
outsl
cmp
in
inc
fwait
inc
pop
push
call
pop
testb
push
xor
push
push
and
outsl
add
jns
xchg
xchg
pop
pop
adc
pushf
ret
dec
test
leave
pop
adc
sub
test
ljmp
dec
xchg
jo
mov
addr16
ljmp
lea
in
sub
shlb
push
bound
jb
lods
pop
repnz
add
fstps
lret
and
ja
pushf
xchg
cltd
mov
adc
pusha
bound
mov
sahf
mov
mov
test
mov
je
or
fcmovnbe
sbb
shll
mov
jmp
imul
out
adc
sub
inc
js
testl
hlt
stos
mov
push
aad
fucomip
sub
or
xchg
loop
push
subb
push
mov
cmp
jns
jp
cmpsl
cmpsl
ret
mov
push
cmpsb
pop
enter
cmp
cmp
push
pop
cs
call
cmp
inc
push
xor
mov
push
js
outsl
bound
mov
cld
stc
mov
jbe
pop
mov
daa
repnz
rcll
add
nop
xchg
adc
inc
nop
mov
dec
dec
in
sub
jo
ja
push
faddp
xchg
pop
sub
sub
out
shr
mull
jp
jg
ret
pop
movsl
iret
push
inc
sub
mov
fimuls
out
mov
mov
stc
cmp
jbe
and
xor
add
pop
sbb
sub
insl
pop
cmp
roll
mov
fs
jge
ja
imul
mov
lret
aam
jns
ret
stos
ret
jmp
dec
inc
cld
pusha
lret
outsl
or
sbb
insl
repnz
outsl
lock
add
in
fnstenv
adcb
mov
mov
test
mov
xor
push
mov
jecxz
dec
je
pop
or
call
fwait
or
out
jae
rol
push
test
push
pop
shl
aas
repnz
inc
ds
pop
and
inc
push
mov
imul
std
mov
push
dec
mov
pop
das
inc
cmpl
ss
push
int
dec
dec
rol
jae
or
adc
stos
xchg
mov
xchg
push
or
jmp
dec
cwtl
inc
lret
lea
ljmp
scas
jle
shll
add
mov
mov
repz
push
pop
lret
mov
rclb
xchg
sahf
shrl
sbb
ljmp
xchg
sbb
add
lcall
jb
xor
scas
cli
in
negl
jnp
mov
jae
xchg
jle
mov
or
imul
pop
shr
xchg
sbb
incb
xor
sbb
cmpsb
mov
or
inc
sbb
jno
jae
inc
cmp
mov
add
pop
xor
adc
cwtl
inc
ret
int3
in
arpl
xchg
push
les
cs
lea
xchg
hlt
jae
mov
fcomip
lcall
sahf
pop
xchg
sub
mov
cld
pop
iret
leave
push
xchg
mov
insb
stos
sbb
xchg
lahf
clc
xor
mov
out
push
xor
shlb
cmpsb
push
sub
dec
stos
xchg
dec
sub
xor
inc
cmp
fcoml
das
loop
outsb
dec
js
mov
cli
fwait
sahf
lret
fidivs
hlt
pop
pushf
inc
xchg
cli
gs
test
mov
inc
cmpsb
shrl
js
xchg
pop
mov
inc
jo
push
daa
jno
ret
push
add
int3
fs
add
adc
cmp
insb
mov
jb
rolb
lahf
into
adc
mov
imul
frstor
repz
test
xchg
into
das
dec
dec
lret
cmp
fldenv
adc
push
jae
lods
sbb
adc
mov
clc
in
out
jl
or
movsl
jnp
fdivs
cmp
test
jg
jg
xor
fistps
sub
add
mov
out
and
adc
mov
arpl
iret
adc
mov
xlat
push
fldl
fisubl
push
je
iret
mov
scas
add
pop
scas
xchg
xor
push
leave
or
jle,pn
movsl
pop
pop
jmp
daa
mov
fstpt
stc
imul
repz
xor
cmp
push
xor
add
sub
sub
rcr
jg
pusha
cmp
sbb
sub
jecxz
test
sbb
jae
insb
mov
xor
in
cltd
inc
push
in
pop
lahf
mov
repnz
and
in
ja
das
or
dec
push
mov
fs
add
mov
xchg
mov
mov
pop
rorb
insb
int
mov
call
pushf
mov
push
mov
ss
les
cmpsb
lcall
fs
test
mov
ds
dec
enter
mov
je
aas
sub
call
packsswb
pop
movsl
popf
pop
filds
push
stc
les
ljmp
push
movsb
mov
mov
lods
lret
les
pop
xchg
lret
iret
mov
orb
or
and
add
test
dec
in
pop
mov
xor
insb
or
push
out
popa
sahf
push
xchg
lods
adc
ficoml
popa
add
jne
or
dec
ret
jb
push
jg
iret
cmpsb
test
pop
push
dec
xor
jb
mov
mov
int3
les
sbb
test
dec
fwait
and
or
ljmp
mov
sub
add
call
fdiv
cmpsb
xor
inc
into
ret
out
fisubrl
adcl
lods
mov
push
sub
jecxz
sbb
repz
lcall
mov
sbb
es
fwait
adc
repnz
adc
data16
mov
subl
jge
pop
pop
cld
jp
pushf
fwait
lods
fcmovb
dec
mov
mov
in
pop
insb
jbe
mov
xor
push
pop
pop
fsubrp
out
out
das
sbb
aam
push
mov
outsb
lock
aad
loop
dec
sub
inc
adc
addr16
aaa
dec
xor
and
lock
mov
aas
adcl
aam
repnz
sbb
insb
pop
fldl
or
movsl
fmuls
dec
cld
dec
je
lahf
into
cwtl
cmpsw
lds
stos
mov
repnz
jg
jno
push
rcrb
xor
fs
pop
test
inc
movsl
in
testl
iret
dec
or
out
ret
repz
jge
cld
fwait
int3
lds
mov
scas
xchg
cmp
aas
repz
pop
dec
imull
out
jbe
and
xchg
inc
in
std
cmpl
mov
shlb
inc
rcrb
mov
pop
fdivrs
ljmp
movsb
out
sbb
scas
jge
imul
jle
stos
pop
cmp
xor
addl
gs
ror
scas
fs
add
popl
jmp
shll
xchg
fldl
or
add
mov
mov
clc
int
push
jecxz
out
dec
into
dec
es
aas
fstl
mov
pop
not
jb
push
cmp
mov
xor
aam
add
jmp
adc
cmpsl
or
loopne
fldl
sub
aam
cmp
mov
xchg
mov
aaa
sbb
xchg
xchg
incl
shll
loopne
pop
sub
mov
jecxz
in
add
xchg
mov
sub
outsb
ja
mov
or
push
pop
mov
std
es
cmp
xor
pop
shrb
pop
push
fmulp
das
subb
cmc
xchg
scas
loop
push
out
mov
mov
scas
fdivs
cmpsl
fisttpl
add
inc
insb
cld
arpl
xor
push
xchg
xlat
sub
out
icebp
pop
fs
push
xor
frstor
out
push
nop
out
sbb
loop
in
lea
pushf
adc
or
push
mov
int
mov
mov
cwtl
lods
cmp
shrd
dec
mov
test
fstpt
shr
jmp
mov
cmc
adc
pop
and
xchg
xlat
scas
push
mov
cli
ljmp
inc
lahf
sbb
fiadds
imul
pop
push
jle
lods
push
popa
pop
sub
cmpl
imul
out
movsl
and
inc
and
pop
ljmp
push
xchg
xchg
sbb
dec
leave
in
mov
xchg
mov
xor
ret
pusha
arpl
mov
xlat
pop
add
dec
bound
mov
pop
ficompl
addr16
inc
sarl
cmp
push
cmp
jmp
mov
popf
mov
lret
xor
xchg
jo
jbe
mov
cmpsl
in
cli
pop
xor
add
out
sub
das
je
jmp
push
xor
mov
or
sbb
or
in
pop
cwtl
frstor
mov
pop
xchg
dec
push
mov
loopne
push
xchg
jns
pushf
jp
adcb
inc
lea
jg
xchg
pop
lods
ret
mov
imul
mull
cmp
push
push
sbb
lret
cltd
scas
xchg
pop
mov
cmp
mov
in
out
pusha
dec
push
rcrl
pop
enter
rcrb
stos
jle
test
jle
sub
cli
cli
notb
fisttps
mov
adc
dec
xchg
jo,pt
ficoms
mov
pop
dec
add
mov
outsb
adc
xlat
mov
push
dec
shrb
fsubs
add
call
out
push
xchg
or
jecxz
data16
ljmp
rorb
or
push
notb
dec
sub
mov
mov
push
pop
or
mov
lret
in
inc
add
push
sbb
xlat
or
or
cmp
daa
sub
loop
or
cmp
jne
lods
addb
popa
push
xor
push
sti
sbb
shrb
fwait
and
in
movsl
imul
jg
bts
xchg
bound
into
sbb
inc
cmp
inc
andb
xor
cs
cmp
aas
es
sub
test
adc
or
cmc
inc
cmpsl
jl
fmull
push
or
ds
and
aas
rcrl
rcll
mov
jbe
mov
das
sub
outsl
xchg
mov
sahf
mov
and
jnp
hlt
fnsave
popa
cwtl
mov
sub
cmpsl
test
rorl
repnz
scas
shr
cli
jno
icebp
jnp
mov
enter
push
lods
mov
or
mov
out
hlt
aam
push
loope
popf
sbb
or
ss
in
iret
std
pop
test
jae
mov
mov
xchg
imul
int3
cmp
scas
mov
and
jno
jno
cmpsl
adc
cmc
sub
cmp
xor
sti
xor
cs
popf
mov
add
inc
in
imul
insl
imul
jnp
popa
ret
test
xchg
add
and
sub
imul
cmp
cmp
imul
js
mov
cmp
push
lods
inc
les
mov
and
into
test
lods
in
mov
iret
js
decl
cld
sbb
adc
push
rorl
ffree
in
daa
jb
fwait
daa
dec
xchg
nop
inc
cmp
pop
and
mov
icebp
and
sbb
sbb
shl
subl
insl
and
sbb
mov
adc
or
pop
push
cwtl
xor
addr16
jecxz
add
pop
insl
pop
inc
adc
in
test
insb
divl
and
inc
fdiv
and
mov
cmc
inc
push
or
or
shrb
les
call
fwait
mov
scas
dec
nop
xor
sbb
mov
shll
jecxz
jae
popf
pop
sub
jno
das
int
mov
adc
fdivrl
mov
dec
or
and
mov
popf
and
ret
fsts
pop
insl
pop
jge
cmc
jne
test
out
arpl
int3
inc
das
xor
fs
lahf
fstl
xchg
pop
or
push
je
pop
rcpps
mov
movsb
jae
add
mov
inc
ljmp
adc
rol
sbb
jge
xchg
lret
js
sub
ds
sbb
pop
inc
test
mov
dec
mov
jbe
xor
sbb
and
pop
mov
xor
mov
in
sbbl
rep
ret
pushf
movsl
jg
insb
jge
xor
fnsave
xchg
jge
inc
mov
loopne
dec
std
lds
addl
loop
pop
mov
jbe
mov
push
clc
pop
fnstenv
push
movsl
push
or
mov
cmpsl
data16
push
stos
clc
mov
cltd
out
das
cmp
mov
push
das
push
mov
jae
stc
dec
xlat
int3
mov
dec
or
ficoml
jecxz
xchg
or
and
call
jecxz
cmpsl
xchg
pushf
aam
fldcw
mov
ficompl
push
push
outsl
fwait
and
pop
xchg
in
sub
enter
jb
add
lock
jbe
cmp
das
cmpsl
call
and
sbb
cmp
push
lds
or
out
sarb
push
pop
add
dec
in
fdivrs
je
jp
in
jl
pop
push
push
std
add
xchg
xor
cmpsb
out
mov
or
jbe
lahf
mov
add
add
inc
mov
cld
jne
jne
sub
adc
xchg
mov
fisttpll
and
add
push
cmc
imul
out
jbe
jb
shlb
out
push
mov
pushf
arpl
insb
xchg
adc
addr16
test
fwait
sbb
mov
clc
xor
lods
xchg
xchg
pop
mul
into
push
imul
sub
popa
call
inc
hlt
ss
ss
pop
stos
pop
pop
mov
jle
fisttps
dec
orl
pop
std
sub
loopne
int
popa
sbbl
leave
rcll
sbb
shrb
mov
inc
xor
test
sub
add
pop
out
in
mov
ret
nop
adc
ljmp
cmp
lcall
es
xchg
aaa
out
iret
sbb
out
imul
xor
mov
fcompl
or
xchg
dec
push
jb
mov
dec
dec
cltd
clc
sbb
in
imul
xchg
inc
scas
push
movsb
cs
jle
xchg
pop
mov
es
out
add
call
sarl
ds
pushl
lods
and
out
mov
nop
xor
jnp
fsubs
ret
dec
sbbb
scas
lods
mov
adc
sub
cmp
adc
jmp
xchg
xchg
arpl
or
jle
ljmp
aam
jnp
pushf
mov
mov
roll
cmpsl
add
movsl
sbb
into
and
mov
repnz
filds
popa
shl
jecxz
sbbb
test
xor
fiaddl
repnz
adc
mov
mov
jle
nop
lret
cs
loope
repz
arpl
outsb
es
js
scas
inc
dec
ss
push
es
xchg
sub
xchg
negb
inc
loopne
es
xor
xchg
insb
jns
repz
pop
inc
mov
mov
ret
insb
xor
pop
icebp
sub
adc
out
outsb
mov
sub
pop
cmp
cmp
add
bound
and
sub
sub
inc
lret
xchg
clc
pop
arpl
mov
or
rcll
roll
xchg
jp
mov
loop
jnp
sbb
push
iret
ficoms
pop
jmp
aaa
jne
std
movsb
scas
fbld
cmp
fwait
scas
call
push
test
push
movsl
repz
pop
push
jmp
scas
cs
dec
mov
adc
mov
aam
inc
push
mov
add
lcall
push
in
mov
cld
xchg
and
mov
sub
cli
inc
or
add
shrl
insb
adc
cli
shrl
jo
in
jae
xchg
inc
cwtl
xor
lret
enter
push
mov
mov
cwtl
mov
insb
insl
das
das
pop
mov
cli
es
mov
mov
pusha
push
iret
mov
cmc
scas
fsubrp
mov
in
cmc
push
push
outsl
jp
call
dec
adc
cmp
cmp
mov
es
insl
into
pop
pop
clc
cmp
imul
sahf
inc
push
jo
or
ss
adc
aaa
aaa
jg
or
lock
hlt
add
pushf
in
and
jae
rol
lahf
add
mov
imul
mov
jnp
cli
sahf
shlb
outsb
shlb
jo
sbb
and
pop
popf
sar
das
sbb
inc
xor
xor
aas
xlat
arpl
xor
nop
pushl
cltd
xchg
ds
lock
xchg
pop
fstps
push
mov
shll
sbb
mov
jbe
insl
in
push
lcall
outsb
inc
nop
shrl
mov
bound
arpl
in
lret
adc
stc
or
aaa
out
add
dec
int3
iret
dec
sub
enter
leave
cld
xchg
mov
hlt
loopne
pop
lods
mov
jne
push
mov
push
xchg
lret
sub
aam
mov
xor
adc
mov
jns
sti
in
arpl
pop
xor
addr16
movsb
lods
push
je
out
lods
dec
insb
in
inc
or
lds
cmp
dec
jb
xor
add
les
lea
fdivrs
inc
cmpsl
sti
cmp
aas
xchg
int3
ljmp
iret
xchg
pop
mov
and
cmp
sbb
pop
insb
mov
dec
repnz
inc
jge
outsl
ficoms
scas
or
pop
stc
cmpsl
enter
pop
std
mov
jle
jo
jbe
inc
out
scas
sbb
pusha
roll
test
movsb
cmp
vpmullw
add
xor
jmp
cmpsl
jne
jle
jl
movsb
pushf
pop
lds
pop
push
and
ljmp
js
ljmp
stos
test
mov
add
inc
mov
sub
fs
push
sbb
dec
adc
out
cld
leave
addr16
inc
and
shrl
popf
mov
mov
push
fstl
and
cmp
pusha
lret
icebp
daa
das
fsubrs
cmp
push
out
sar
pop
stos
adc
mov
iret
bound
xor
daa
xchg
xchg
jnp
outsb
and
js
add
iret
sbb
pop
xchg
outsl
xor
push
dec
sub
xor
dec
xchg
fistps
ja
pop
fwait
popf
out
pop
xchg
push
mov
mov
cs
adc
aas
inc
scas
mov
pushf
dec
jo
xchg
lcall
add
mov
insb
pusha
push
cld
push
jg
sti
lea
jmp
cmpsl
mov
jp
mov
dec
pushf
rolb
adc
movsl
dec
jo
adc
sub
push
jnp
lock
jp
pop
xor
out
cmp
outsl
aam
inc
xchg
add
push
loope
or
test
ret
arpl
mov
xchg
fnstenv
inc
and
inc
push
ja
jnp
lret
mov
jae
pop
rcr
popa
mov
out
daa
and
pop
cmp
fbstp
jg
pop
outsl
add
xor
push
jge
mov
stc
dec
adc
out
sbb
scas
sub
pop
mov
stos
push
repz
out
bnd
fbstp
xchg
enter
push
js
sbb
shll
jmp
inc
push
ds
ret
pusha
push
inc
in
cmp
es
in
mov
mov
in
dec
mov
pop
mov
lret
mov
inc
es
popf
in
sarb
xchg
pop
or
dec
jecxz
andl
je
mov
mov
fcoms
popa
nop
ss
cwtl
push
imul
out
je
test
adc
mov
cmc
fisubl
mov
pop
mov
fimull
popa
push
pop
push
adc
push
xor
dec
loopne
cmpsl
lods
rorl
jb
jp
add
js
subb
cmpsl
lods
cld
out
lods
push
loope
popf
hlt
inc
pop
aas
adc
hlt
aaa
pop
sub
push
mov
int3
pop
inc
sub
outsl
or
push
repnz
repnz
mov
ret
ret
mov
fsubs
jg
add
jmp
mov
arpl
les
add
test
mov
inc
mov
test
sbb
sub
mov
push
cmp
push
pop
cld
aam
insb
dec
movsb
mov
dec
push
test
jg
aam
push
fwait
aas
or
push
adc
enter
jl
stos
and
les
fildll
xor
es
xchg
mov
sbb
lret
fstpl
call
push
adc
cmp
out
leave
dec
js
sub
fidivrl
mov
sti
std
mov
cmpsb
adc
addr16
jmp
mov
pop
xchg
movsl
dec
cmp
mov
push
jb
les
test
call
inc
bound
xchg
lret
mov
sbbb
and
mov
and
pushf
sti
stos
mov
rolb
push
cmpl
outsb
inc
test
jo
movsl
jge
pop
lds
scas
subb
dec
adc
mov
mov
jb
cs
rep
xor
or
setns
stos
mov
lods
jmp
pop
mov
fnstsw
or
lea
mov
cltd
inc
jecxz
mov
ds
cmc
push
jg
mov
dec
sub
jae
sbb
fnsave
dec
ret
xchg
pop
push
fdivrs
push
cld
ds
mov
push
sbb
xchg
popa
sbb
idiv
sti
fbld
mov
cwtl
cmp
mov
push
cmpsb
inc
fdivrs
scas
add
push
xchg
lret
push
dec
and
iret
aaa
mov
cmp
loope
mov
stc
push
push
cmp
and
xchg
jl
lds
sbb
and
ret
mov
mov
push
fldl
and
xchg
pop
mov
es
push
test
xlat
loope
cmpsb
jae
fisubrs
jmp
call
jp
repz
int3
sbb
and
scas
xorb
pop
lods
dec
ljmp
add
jmp
movsl
clc
xchg
pop
jb
pop
push
adc
filds
sub
sub
or
pop
xchg
movsb
mov
xchg
sub
mov
leave
shll
inc
insl
xor
push
mov
sbb
in
mov
jo
sbb
adc
jae
push
mov
cs
fs
sub
mov
pop
push
xchg
stc
push
daa
pop
dec
call
add
and
inc
pop
xchg
scas
bound
cmpsb
sub
mov
pop
push
pop
fistps
stc
in
lcall
or
mov
sbb
dec
sbb
xchg
ret
dec
push
mov
shlb
or
stos
aas
fbstp
fdivrs
lcall
mov
test
imul
cmp
int3
ja
mov
pop
inc
fwait
out
inc
xchg
xchg
adc
push
mov
mov
cli
xor
mov
inc
enter
in
les
jmp
out
test
cmp
in
sbb
or
rorl
add
shlb
push
and
sbb
hlt
jb
addr16
stc
pop
xchg
xchg
inc
dec
notl
add
into
jbe
push
pop
sbb
mov
fimuls
mov
pop
pop
gs
pop
and
or
push
jl
push
jb
or
aaa
test
leave
ljmp
add
sbb
les
push
cli
scas
sbb
dec
cmp
push
push
xchg
insb
dec
adc
cmp
insb
or
sbb
int
pop
addr16
mov
xorb
cwtl
or
jge
push
repz
or
cmp
insb
fdivl
mov
or
scas
mov
je
jbe
xor
cmp
je
jno
popa
or
sahf
pop
ret
and
cmp
push
mov
ds
mov
xor
cmovae
push
jo
and
lea
jg
idivl
or
cmp
jnp
mov
stc
sub
xor
es
mov
push
mov
xor
inc
shlb
xchg
hlt
hlt
push
mov
test
pop
orl
int3
es
adc
shr
popf
jo
jmp
in
cmp
repz
jae
jge
push
out
shll
xor
and
xor
adc
mov
lret
lods
push
cmp
xor
iret
jecxz
rol
scas
push
imul
fcmovb
lods
test
xor
push
pop
mov
stos
mov
subb
xchg
lcall
mov
rolb
adc
mov
loopne
sbb
dec
ret
pop
pop
fcmovb
fistps
repnz
imul
dec
or
in
rolb
pop
xchg
imulb
xchg
int3
xor
adc
out
sti
daa
fisubl
mov
or
xlat
sbb
pop
push
jp
loopne
add
push
jb
sbb
sbb
push
out
adc
cmp
pushf
rcl
mov
ljmp
sub
xchg
mov
daa
pop
mov
sbb
add
add
xchg
rorb
sbb
or
inc
mov
jne
push
push
xor
fdivp
push
bound
adc
in
mov
mov
sti
fists
shlb
mov
xorl
and
ficoms
movsl
ror
and
movsb
inc
ds
stos
cmpsb
sti
imul
sahf
jl
and
or
sbb
or
jo
add
push
pop
add
push
xchg
fnsave
xchg
pusha
insb
pop
in
push
lcall
outsb
push
fs
jmp
mov
mov
cli
mov
mov
std
ljmp
xchg
movb
aaa
mov
rorl
mov
leave
sarb
xchg
xchg
mov
pop
call
lret
into
or
dec
mov
push
push
addr16
fsubrs
es
xor
sub
int3
arpl
pop
xor
stos
dec
cmp
sub
cmp
push
lea
xchg
sar
fadd
into
dec
out
cs
push
jnp
scas
and
push
shrl
jno
or
cwtl
ds
xor
push
stos
movsl
adc
jle
or
into
mov
ljmp
negb
aam
adc
sti
out
lds
dec
mov
inc
mov
ljmp
arpl
and
jo
cmp
sbb
pop
addl
pushf
adc
jnp
push
mov
mov
lret
cld
jae
ljmp
int
hlt
add
cmp
inc
in
in
loopne
repnz
insl
pop
mov
call
mov
lods
sarb
cmp
mov
dec
or
xchg
mov
adc
fimull
sbb
inc
mov
gs
push
mov
fmulp
les
subps
mov
and
push
ret
and
or
sbb
movsb
lock
aas
sub
push
cmovno
push
push
cmp
sub
fistl
add
ljmp
sbb
cwtl
mov
decl
pop
add
ss
das
daa
movsl
test
xchg
loopne
cmp
mov
rcrl
jg
enter
cs
lods
int3
inc
imul
stos
sbb
sbb
movsb
sub
inc
imul
mov
xor
imul
ret
negb
add
das
loopne
outsb
pop
outsb
jecxz
or
clc
dec
fstps
bound
pop
loope
sti
cmp
adc
imulb
sbb
fwait
xor
jmp
int3
ret
mov
pop
imul
lahf
sbb
sbb
popa
shrl
sbb
cs
push
inc
loop
sbb
push
xchg
out
fdivs
les
loop,pt
cmpl
adc
imul
daa
xor
aad
insb
mov
sbb
mov
dec
push
loope
cmp
push
mov
loopne
mov
jp
mov
mov
sbb
jecxz
sub
test
jle
cs
sub
ja
jmp
mov
mov
shll
lods
repz
xchg
push
ljmpw
ret
pop
daa
stos
jecxz
dec
xlat
mov
inc
popf
lds
test
mov
dec
dec
jle
aam
push
mov
cmp
int
imul
jae
ret
sbb
flds
mov
inc
sbbb
jg
sub
mov
sahf
aad
mov
pop
xor
mov
pop
fbld
adc
and
nop
adc
fs
push
or
ret
pop
xchg
push
mov
frstor
push
js
xor
jl
fbstp
fs
into
stos
stos
mov
mov
cli
enter
aad
ljmp
or
repnz
push
mov
lds
outsb
ds
xchg
pushf
repnz
ljmp
in
ljmp
test
fbld
out
jae
loop
xlat
push
sub
cmpsl
cmpsb
insb
bound
adc
pusha
and
add
xchg
adc
dec
mov
lds
das
clc
xor
push
mov
fstpt
inc
pusha
out
mov
lahf
adc
jmp
add
add
inc
aam
mov
gs
nop
cld
les
sbb
fs
mov
inc
sub
daa
xor
fsubl
push
imul
xchg
add
sbbb
adc
int
cs
xor
or
lcall
mov
test
cmp
mov
inc
pop
pop
ss
aad
outsl
xchg
inc
test
jb
pop
push
xor
mov
mov
subl
mov
js
cmp
jnp
repnz
imul
scas
icebp
jecxz
pop
pop
mov
es
or
loopne
out
inc
mov
into
jl
or
and
inc
sbb
sub
pushf
sub
push
inc
aad
insb
mov
in
push
sub
jb
in
push
xchg
xlat
sbb
push
jnp
imul
lahf
fcoml
pop
sbb
cmp
sbb
insl
sub
sub
xchg
adc
lret
xchg
mov
adc
call
sub
or
loopne
fistpl
sbb
lahf
nop
jg
test
clc
fs
xlat
sti
rcll
out
aas
loopne
lret
in
outsb
loope
sti
cltd
push
scas
sbb
xchg
adc
in
push
adc
adcb
lahf
and
rcrl
repnz
in
sub
ret
lods
cmp
pop
loopne
xor
xchg
ret
or
and
cmp
or
imul
xor
scas
cwtl
ljmp
add
out
and
adc
dec
xlat
and
inc
xchg
lahf
fiadds
mov
loopne
test
cmp
inc
mov
ljmp
push
push
push
shrl
lahf
jl
adc
push
jg
das
lock
lret
or
dec
inc
adc
mov
out
and
in
xchg
push
mov
stos
or
dec
fcompl
xor
sbb
xor
mov
outsl
push
jecxz
rolb
ret
and
sub
sbb
test
sub
cs
sbb
or
cmp
add
mov
clc
jae
lock
shr
lods
sbb
jnp
lock
mov
dec
loopne
lods
je
lock
mov
xchg
test
or
mov
cmp
outsb
ret
pop
xchg
mov
xor
in
addr16
leave
xchg
lcall
fldz
push
repnz
jns
ss
xlat
test
sahf
js
sbb
sub
pop
scas
mov
adc
das
xchg
lds
adc
adc
inc
lods
add
mov
adc
lods
lret
orl
mov
mov
aaa
xchg
jns
in
xor
lret
cmpsb
inc
pop
in
inc
pop
subb
cmp
mov
out
add
inc
push
push
lahf
xor
pop
xchg
dec
mov
sub
lahf
in
mov
popf
xchg
stos
popf
loope
adc
or
inc
xchg
std
push
pop
inc
add
mov
jg
out
pop
out
adc
cmp
mov
and
fs
cmpsl
xchg
subb
cmp
lock
jge
loopne
mov
jbe
lret
inc
aam
sub
mov
cmp
stos
scas
sub
int3
insb
xor
adc
sbb
mov
pop
shl
inc
repz
test
cltd
cld
clc
test
je
jnp
adc
stos
cs
sbb
inc
decb
add
cltd
fs
fst
jns
or
or
push
mov
xchg
sbb
or
mov
push
stc
xor
xchg
sbb
cmp
scas
mov
push
mov
mov
ficompl
or
cmp
ret
dec
flds
sub
out
push
lret
sbb
cld
test
sbbl
push
mov
lret
sbb
jecxz
push
or
enter
jg
data16
pop
inc
lods
xchg
ljmp
iret
stc
in
sbb
sub
dec
int
or
jl
push
mov
dec
dec
xlat
fs
inc
pop
push
mov
jb
push
inc
dec
pop
push
outsl
mov
and
dec
mov
push
lock
pop
fwait
dec
in
sub
mov
jp
leave
mov
push
aas
and
dec
push
push
sti
rcrl
js
inc
std
dec
push
mov
lahf
mov
aad
leave
jecxz
int
inc
sbb
push
ret
pop
pop
out
jne
in
test
cmp
mov
sub
ret
sub
cmpsl
cmp
push
jp
jbe
dec
pop
out
mov
push
sbb
rcl
xchg
divb
pop
out
jnp
cli
rorl
pop
sub
test
arpl
mov
mov
pop
xchg
in
pop
sub
mov
ljmp
pop
ljmp
ljmp
xchg
aam
dec
jno
loop
push
push
lcall
jnp
inc
jae
vmovntps
lods
sbbb
xchg
adc
pop
test
iret
out
aam
cmc
subl
ds
fildl
jo
or
mov
out
xchg
out
xchg
mov
pop
mov
push
lea
inc
inc
mov
cs
dec
sbb
subb
adc
gs
fmul
jbe
fcomi
fidivrs
dec
xor
cmpb
pop
adc
icebp
sbb
nop
mov
mov
fsts
mov
push
outsl
cmp
cmp
pushf
aad
movsb
jp
xor
lds
fwait
xchg
pushf
dec
scas
pop
xchg
sbb
std
pop
mov
arpl
out
sub
popa
mov
mov
pop
and
add
lea
ret
push
mov
sbb
je
pop
mov
clc
inc
dec
jae
sub
sub
cwtl
loopne
jo
fwait
cmp
fnstcw
inc
mov
roll
pop
int3
xor
into
dec
mov
push
ret
jbe
lcall
push
lods
fstl
ss
push
xchg
sar
stos
dec
push
push
push
mov
test
push
mov
xor
xor
push
adc
jns
aaa
pop
out
mov
inc
push
add
scas
and
pop
outsb
cltd
mov
bswap
fimuls
dec
ljmp
ret
jo
fucomip
push
sbb
sbb
pop
fists
mov
sub
enter
pusha
xchg
adc
or
fists
add
fwait
iret
aaa
add
cmp
lcall
sub
ficoml
call
stos
mov
out
dec
lret
mov
xor
lock
mov
scas
lret
cwtl
ds
xchg
xor
fcompl
aad
or
scas
adc
das
mov
mov
movsl
sub
outsb
insl
fs
jno
hlt
lock
jmp
outsb
pop
inc
cmp
dec
loope
jb,pt
lods
imul
iret
pop
jle,pn
xor
and
add
xlat
outsb
mov
insb
or
xor
mov
imulb
inc
ds
inc
xor
xchg
pop
aam
scas
gs
clc
and
stos
je
faddl
mov
mov
repnz
xchg
sbb
ja
inc
sub
mov
pop
adc
fcmovb
jns
cmp
fsubr
jnp
fildl
je
pop
lods
dec
sbb
jl
fmul
ret
xchg
int
rcrb
mov
and
shr
xor
mov
nopw
iret
push
lds
neg
dec
ljmp
ret
mov
pop
in
hlt
cmpsl
fldt
fisubs
push
mov
or
mov
cmp
push
or
enter
cmpsb
sti
mov
pop
mov
add
xchg
das
je
mov
push
sahf
cmp
fsubrl
movsb
mov
sbb
inc
loop
adc
inc
xorl
pop
outsb
jmp
hlt
xchg
pop
jbe
and
enter
sub
sub
gs
push
lahf
testl
in
xchg
in
pushf
imul
jmp
out
mov
repz
movsb
in
jmp
in
xchg
mov
lods
stos
jp
mov
pop
mov
lcall
jp
jne
mov
mov
test
jne
mov
xor
leave
test
lods
fistpl
xchg
xor
dec
mov
xchg
cmpsl
mov
xor
nopl
mov
call
iretw
xchg
adc
sti
cmp
sub
cmpsl
jo
movl
ja
stos
push
and
inc
js
pop
movsl
cli
cltd
int3
and
imul
xchg
leave
cwtl
fidivrl
xchg
lods
cwtl
add
clc
es
add
in
arpl
stos
stos
imul
dec
add
mov
cmp
cmp
xor
xchg
cmp
adc
je
scas
leave
push
dec
adc
out
pop
cmp
xchg
pop
dec
jnp
int3
das
pushf
subl
dec
adc
mov
cmpsl
pop
fidivl
daa
dec
jg
bound
pop
xchg
or
sbb
push
je
fisubrs
dec
incb
in
cmp
jne
xor
push
pushf
add
sbb
pop
insb
pop
leave
push
es
sbb
lahf
mov
rorb
jp
leave
sub
adc
adc
mov
push
dec
inc
enter
cmpsl
daa
sub
ljmpw
nop
or
cld
ss
jecxz
lock
mov
lods
mov
jmp
fisubs
mov
add
pop
movsb
stos
mov
xchg
mov
mov
jbe
add
data16
aam
into
xchg
pushf
loop
xor
and
and
rclb
lret
stos
lock
inc
lods
repnz
loop
decb
imul
mov
mov
mov
jae
jecxz
int3
insb
adc
mov
xchg
jb
mov
call
test
or
out
or
pop
jle
repnz
lock
stos
cmp
cmp
push
pop
cmp
pop
adc
xchg
mov
jb
mov
std
cmp
imul
cmp
inc
fists
mov
shrl
ret
mov
std
adc
loope
add
sar
or
or
nop
test
lods
xchg
xor
sub
mov
popa
xlat
xchg
pop
push
mov
les
scas
mov
push
js
push
daa
test
sar
jl
sub
aad
out
inc
jmp
xchg
dec
ret
fidivs
ret
mov
mov
lahf
mov
divb
loopne
test
repz
cmp
xchg
pop
jecxz
arpl
xchg
mov
int3
or
dec
dec
aas
mov
and
scas
test
inc
pop
jbe
ja
movsl
mov
out
lods
add
sbb
or
add
xchg
inc
in
hlt
sub
divl
pop
pop
in
lahf
mov
mov
lods
rorl
mov
push
sub
sti
shlb
sub
pop
test
cli
inc
cmpb
jno
sub
cmp
xchg
sbb
xor
int
out
xor
mov
inc
or
enter
out
fdivp
cwtl
fcmove
mov
ret
arpl
cmp
inc
sub
sub
dec
mov
cmc
jge
dec
and
clc
int
mov
mov
jae
add
test
subl
or
mov
out
shl
xchg
inc
xchg
pop
test
mov
lret
je
rol
mov
lret
clc
add
iret
mov
pop
shr
incb
inc
out
lcall
pop
pop
dec
addl
pop
and
mov
jmp
push
les
clc
or
xlat
xchg
jae
into
mov
into
rclb
pop
xlat
mov
ljmp
nop
cmp
es
sti
ljmp
sbb
jg,pt
and
mov
inc
inc
aad
fcmovu
add
popf
jl
mulb
in
dec
mov
push
lock
pop
lcall
repnz
sub
cmp
popa
insl
rcr
arpl
push
push
jmp
pop
add
scas
adcl
popa
popa
movsb
xchg
jg
mov
inc
fistpl
icebp
mov
nop
inc
xchg
sahf
and
mov
add
sbb
into
mov
add
out
je
dec
cmp
enter
in
fisttpll
add
in
lock
xchg
lret
iret
xchg
aam
fidivrs
mov
lret
xchg
xor
mov
push
jae
mov
sub
jmp
fwait
mov
fmuls
or
xlat
notl
fimuls
and
or
pushw
leave
lret
imull
sub
sar
out
clc
push
mov
pusha
and
jmp
jb
lahf
mov
mov
shr
sub
push
cmpsl
add
aam
xor
cmp
inc
xor
mov
cmp
xchg
mov
or
lods
movsl
pop
push
add
inc
adc
sbb
gs
cld
aaa
fdivrl
add
js
cmovns
subl
pop
lret
in
clc
mov
fucomip
inc
or
xchg
aad
div
idiv
pop
dec
cltd
cwtl
cmp
cmp
xchg
push
inc
xchg
les
inc
pushf
mov
push
xor
mov
mov
inc
mov
mov
or
mov
push
mov
dec
dec
insl
xchg
jmp
sub
xchg
pop
push
test
cld
mov
pop
push
stos
adc
jg
lahf
sub
and
and
and
and
std
dec
adcb
test
xor
mov
jbe
fisttpl
negl
mov
mov
out
xchg
inc
stos
jb
fcoml
dec
shlb
pop
fmul
scas
pop
inc
add
inc
sbb
inc
cs
fwait
adc
fisubrl
imul
in
dec
mov
test
xor
xor
add
jp
pusha
xchg
out
cs
mov
xchg
enter
arpl
fisubrl
sub
outsl
xchg
loop
repnz
pusha
sbb
ds
pop
xchg
cmpl
mov
mov
not
int
orl
fucom
xor
inc
xchg
push
repz
testl
lcall
dec
xor
adc
or
ds
mov
and
adc
leave
mov
lcall
mov
sub
mov
ljmp
add
ret
lea
hlt
push
insb
mov
dec
loop
arpl
int
jp
stos
mov
das
push
pop
je
xor
jns
loope
xchg
out
pop
jg
lahf
dec
stos
dec
adc
sbb
push
cmpsl
lret
shl
cmc
repnz
push
aaa
mov
pop
add
popl
mov
mov
repnz
jo
xchg
incl
pop
mov
vandnps
pop
mov
sahf
stos
mov
jnp
mov
addr16
add
xor
cmc
in
push
in
jnp
inc
inc
or
inc
mull
sahf
fucomip
out
push
xchg
mov
adc
enter
es
je
jo
in
fadd
dec
loop
scas
jle
push
xorl
adc
mov
cmpsl
mov
out
lds
repnz
pop
xchg
pop
xchg
out
inc
adc
movsb
rcl
loope
inc
lcall
bound
andb
nopl
lods
rorb
jge
lods
cwtl
or
and
mov
inc
cmp
dec
add
push
sub
jge
pop
or
fs
pop
shll
dec
loop
mov
stos
pop
dec
std
mov
lcall
or
jb
jo
cli
rclb
lcall
lock
in
sbb
jecxz
cltd
pop
jne
cmpsb
cmp
repnz
ss
cs
rolb
adc
or
fcompl
dec
push
fbld
sahf
sub
lds
push
lret
in
test
push
adc
stos
dec
mov
push
mov
mov
or
or
sub
dec
xchg
jb
ret
cltd
je
cmp
push
jle
add
fs
dec
add
orb
addb
dec
test
pop
ss
insb
inc
pusha
addr16
lds
outsb
add
test
adc
std
or
mov
mov
popf
ret
ret
adc
lcall
sbb
sahf
mov
xchg
lds
fisttps
mov
mov
loope
pushf
mov
mov
mov
add
stos
sahf
sbb
repnz
sbb
push
ret
inc
dec
rorb
loopne
ret
mov
lods
adc
cmc
cld
mov
sahf
dec
push
cmp
aas
and
inc
jmp
test
jae
pop
adc
mov
fcmovb
push
aaa
adc
test
sbb
clc
lea
pop
rclb
testb
jae
divb
xchg
xchg
mov
data16
enter
mov
mov
stos
inc
pop
adc
xchg
std
adc
test
push
mov
xchg
and
push
fnstenv
leave
sahf
scas
rcl
fwait
sbb
mov
add
stos
mov
push
lods
scas
pminsw
and
mov
cltd
cmp
int3
sbb
nop
lods
faddl
xchg
pop
pop
into
push
das
push
lret
sbb
inc
adc
xor
lahf
and
and
inc
dec
and
push
jle
jb
xchg
mov
mov
jmp
dec
lahf
notl
pop
test
and
jbe
jge
inc
fs
repz
jbe
mov
loopne
inc
lods
lret
stos
dec
mov
dec
fldt
dec
mov
out
ret
int
aad
push
mov
lds
es
mov
pushf
sub
push
mov
insb
mov
push
insl
jne
lock
push
dec
sub
sub
sub
loopne
pop
jecxz
and
mov
sahf
mov
or
and
fdivr
mov
pop
lock
lods
outsb
popa
inc
jl
mov
xchg
and
out
xor
push
pusha
outsb
in
mov
dec
jb
cmc
inc
clc
inc
mov
add
jge
sub
adc
jecxz
enter
cmc
das
scas
pushf
xor
adc
and
or
push
ja
in
into
mov
dec
lret
sbbb
daa
mov
test
scas
sub
push
insl
aaa
inc
mov
sahf
in
cltd
clc
push
add
pop
ss
ja
je
les
sarl
sbb
mov
sarb
mov
outsl
call
icebp
addr16
push
sbb
xchg
cmp
push
xor
cmp
ret
and
lods
mov
stos
cmp
mov
hlt
mov
xor
sub
or
lahf
or
arpl
sub
xchg
or
repz
mov
shll
stos
enter
test
xor
pop
mov
lock
nop
insb
test
or
lret
pop
adc
inc
dec
popa
faddl
pop
pusha
fdivr
inc
or
int
popa
push
hlt
sbb
or
pop
dec
or
xchg
push
push
xchg
xchg
sub
jg
push
imul
cmp
cli
mov
push
inc
repnz
nop
inc
push
scas
or
mov
xor
sub
aam
mov
sahf
xbegin
mov
adc
nop
push
test
and
mov
dec
sub
sbb
cli
inc
scas
or
in
sub
mov
lock
gs
sar
mov
ss
sahf
cmp
movsb
rorb
in
xor
xlat
push
shl
jbe
outsl
push
dec
lahf
int
clc
out
movsb
hlt
push
push
int3
sub
arpl
fs
fs
repnz
cmp
and
xorl
push
pop
lea
in
sti
cmp
pop
mov
lcall
cld
ds
psraw
inc
push
xor
pop
flds
xchg
adcl
xchg
imul
sahf
push
mov
xorb
imul
and
lock
and
xchg
movsl
lret
jae
xor
icebp
jle
cmc
test
jae
mov
test
cmp
pop
push
int
xor
mov
xlat
cmp
pop
cli
sub
sub
push
out
dec
push
mov
pushf
lret
ret
out
lock
mov
movsl
test
mov
pop
lcall
scas
jle
bound
enter
dec
aas
lods
mov
in
lock
icebp
cmc
clc
dec
mov
cmp
bound
repnz
popf
or
mov
xchg
pop
push
in
mov
rorb
lea
cs
cmp
testl
rcll
or
or
push
test
outsb
sbb
pop
jg
sub
std
subb
lds
gs
cli
sub
sahf
push
sti
cli
into
int
add
fsubr
enter
jb
subb
xchg
test
adc
mov
dec
lcall
mov
pop
push
xor
mov
xor
cmp
mov
sarb
dec
sarb
inc
jmp
inc
sub
fmul
mov
out
mov
fisubs
cmp
movsl
mull
ds
dec
inc
jns
cli
or
xchg
fwait
repz
sub
dec
out
jecxz
loop
cltd
xchg
ds
and
ret
mov
sub
inc
popa
mov
sbb
movsl
adc
mov
mov
js
mov
andb
xor
dec
imul
int
stc
push
push
push
pop
adc
lods
pop
jge
jbe
aaa
jmp
sub
int3
pop
dec
aas
stos
pop
hlt
and
fs
xor
repnz
leave
adc
sti
push
fisttpl
add
mov
push
or
test
dec
jecxz
out
rcrb
mov
int3
pop
mov
aaa
test
stos
xor
push
xchg
dec
subl
jae
mov
cmp
push
ficomps
int3
jmp
pop
sbb
test
push
adc
mov
mov
sbb
ret
and
dec
push
imulb
icebp
nopl
leave
push
cmp
mov
cli
fisubl
mov
jle
jge
popf
les
dec
inc
jmp
clc
sub
jmp
pop
push
sarl
jmp
mov
in
inc
and
popf
mov
push
sub
stos
rol
mov
mov
inc
cmpsl
push
pop
pusha
sahf
jecxz
mov
fsub
mov
bt
movsb
cld
ret
xchg
dec
cmp
push
adc
mov
dec
mov
mov
inc
xchg
xchg
or
pop
pop
xor
ret
xor
jg
pop
sahf
icebp
mov
sbb
ficomps
xor
insl
dec
sbb
into
mov
dec
dec
in
ljmp
test
mov
dec
inc
and
xor
and
xor
sbb
call
pop
jb
mov
cmp
pop
pop
push
pop
pop
mov
adc
insl
repz
push
add
jbe
push
cmpsb
jbe
mov
in
fnsave
sti
mov
cmp
inc
add
jns
sub
loope
scas
ljmp
mov
inc
jle
lret
cwtl
rclb
jp
push
dec
test
daa
fnsave
lds
jno
or
fwait
into
pmullw
dec
xchg
push
in
test
mov
mov
adc
pop
dec
dec
pop
ds
fwait
cmpsb
scas
sbbl
in
cli
push
add
push
xor
fldl
fisttpl
sub
mov
push
dec
pop
mov
fidivs
xchg
pop
lret
lret
imul
divl
jg
push
shll
sbb
dec
add
mov
inc
cmc
mov
lds
xchg
ss
outsl
ss
call
jg
bound
xchg
divl
cld
pushl
sub
into
dec
pop
pop
add
mov
inc
push
mov
aas
ret
xor
xchg
addr16
cmp
es
js,pn
adcl
and
ljmp
xchg
iret
pop
sti
dec
jmp
fwait
mov
and
mov
cmpsl
inc
punpckhbw
lahf
inc
push
int
and
sbb
dec
or
rcrl
out
mov
outsb
dec
cltd
jae
out
cmpsl
cmpb
mov
fistpl
jmp
stos
ror
sbb
call
movsb
sbb
mov
xchg
xchg
xchg
dec
lods
cmp
fcomp
sub
inc
scas
mov
jo
mov
pop
aad
sub
scas
in
pop
xchg
scas
test
mov
test
and
or
es
mov
gs
jle
cli
jo
inc
stc
dec
ljmp
jbe
jns
movsl
dec
mov
ds
sub
sbb
imul
mov
or
mov
sub
jg
fs
pop
lret
adc
iret
test
sahf
repz
cmp
pop
inc
lahf
aam
xor
push
cmpsb
xor
xor
push
inc
sub
es
dec
lock
mov
adc
push
mov
cmc
ficompl
push
adc
mov
mov
dec
sbb
ror
imul
cmpsb
adc
fcomip
nop
xor
mov
or
and
push
leave
fs
mov
pop
out
into
imul
xor
or
mov
out
add
mov
mov
mov
xchg
mov
pop
ds
xor
cmpsb
leave
sbb
cmp
jno
mov
cmp
inc
pushf
lret
jae
inc
xchg
xchg
mov
pusha
and
push
cltd
int
sbb
pushf
pop
loopne
xchg
int
ret
pop
cmp
mov
mov
insb
xchg
out
call
push
cmpps
insb
push
pop
test
pop
cld
es
fisubl
in
pop
mov
add
jne
sub
push
pop
lret
push
cmp
pop
daa
mov
xchg
stos
das
add
lret
stos
mov
jnp
movsl
sub
leave
dec
cmp
mov
sti
add
mov
adc
cmp
ja
adc
mov
sub
add
mov
push
scas
mov
sahf
cwtl
and
loop
add
sbb
cmp
ret
sub
stos
mov
fiaddl
in
jmp
psubsb
jle
shl
push
ljmp
pop
xchg
push
std
clc
popf
push
nop
push
and
or
std
mov
fisttpl
test
shll
inc
mov
xchg
fildll
imul
jge
jmp
dec
xchg
mov
dec
scas
lret
fwait
cmp
cmpb
shlb
jno
ljmpw
pop
testb
movsl
fsts
mov
es
aad
push
jle
cmpsl
imul
dec
ret
jbe
in
int
stos
adc
clc
push
imul
imul
xchg
js
mov
addr16
mov
test
add
jl
es
bound
xor
dec
outsl
stos
jmp
in
lret
ret
jb
dec
dec
pop
push
in
dec
lret
cmpsl
adc
adc
dec
and
jle
mov
cwtl
jae
mov
shll
cli
mov
jle
pop
push
aas
mov
adc
inc
jb
subb
jbe
dec
movsb
lcall
inc
inc
push
jecxz
inc
insb
sub
dec
or
pushf
cli
xchg
repz
xlat
sub
dec
lret
push
std
ret
add
outsb
cmpsl
add
push
cmpsl
fucomp
leave
addr16
shl
ret
pop
faddl
xor
loopne
bnd
add
cld
push
push
fmull
fistps
es
dec
mov
dec
xchg
add
scas
fsubp
loop
jb
bound
sub
dec
cmc
dec
dec
test
lods
lods
cmpsb
xchg
pushf
xor
add
stc
sub
leave
fwait
and
test
or
mov
mov
sbb
jae
aaa
mov
cmpsl
mov
fistps
sbb
sahf
lods
icebp
push
popf
sbbb
jle
pop
dec
lock
out
sbb
cld
inc
mov
into
mov
jns
jmp
xor
jbe
jnp
and
or
popf
adc
pop
mov
mov
xor
test
insb
stc
push
mov
pop
fidivl
mov
cmp
jge
add
cs
or
adc
add
sbbb
movsb
push
addb
push
dec
cld
jle
push
cmp
jl
aam
je
or
mov
decl
xchg
decb
out
xor
cs
xor
sbb
mov
push
aas
insb
ds
sbb
out
lods
pop
cmp
push
lret
stos
sub
and
ljmp
ds
jmp
xchg
lcall
out
or
pop
addr16
sub
sahf
jecxz
mov
movsb
popf
mov
adcb
ljmp
stos
and
bound
lret
xor
add
pop
pop
ja
mov
sub
mov
xchg
inc
stc
add
out
out
xchg
mov
or
loope
shl
std
adc
cmp
insl
pop
cmpsb
arpl
filds
scas
and
test
dec
sbb
ljmp
adc
mov
mov
pop
fcomps
and
shr
mov
mov
xor
inc
loop
add
mov
and
dec
imul
fsubr
in
push
sbb
xor
pop
fs
mov
sub
add
sub
push
rol
and
das
add
mov
push
std
xchg
loopne
jmp
inc
jp
mov
cmp
pop
test
arpl
outsb
clc
or
sbb
inc
sbb
jo
ret
xchg
fwait
add
and
dec
mov
pop
lods
fidivrl
mov
inc
sarl
stos
and
jmp
xor
mov
ljmpw
sti
fnstenv
pop
insb
xor
lods
loop
jecxz
push
jecxz
mov
xor
jge
ds
addr16
pushf
andb
xor
lds
aas
jg
mov
jae
inc
inc
cmp
enter
rcl
mov
xor
xchg
xchg
icebp
inc
push
lret
cs
xchg
pop
fs
inc
lret
or
in
lahf
sti
dec
sbb
or
sbb
mov
ret
adc
jle
lds
jmp
lcall
std
dec
push
push
mov
push
rorl
push
das
mov
push
mov
fstp
ret
sub
clc
xor
add
sub
xorl
inc
dec
sub
movsl
daa
jb
push
outsb
aad
mov
xor
xchg
dec
das
es
scas
sub
subl
lret
cmp
pop
push
movsl
adc
roll
mov
inc
mov
mov
and
pop
cmp
nop
stos
jb
fidivl
lock
jg
or
dec
repnz
daa
push
jo
negb
jnp
mov
sbb
and
ficoms
add
lods
fistpll
imul
cmp
les
iret
sbb
sub
movl
mov
in
mov
sahf
or
xchg
mov
and
popa
or
push
das
jno
ret
mov
data16
push
subl
leave
scas
imul
or
test
ret
out
push
icebp
mov
xor
ret
inc
pop
mov
sbb
sbb
push
lcall
push
adc
push
xchg
jecxz
mov
sub
std
push
push
mov
ds
pop
enter
outsl
dec
stos
clc
xor
xchg
jge
mov
movsb
jecxz
mov
das
aad
inc
pop
xor
jecxz
adc
add
jae
dec
pusha
sti
sbb
dec
add
mov
mov
push
inc
fwait
add
sbb
jne
in
inc
mov
jecxz
jl
push
mov
mov
testb
jp
xlat
das
call
addb
iret
pop
push
fisubs
addl
xchg
movsl
pop
mov
or
or
insl
fs
jbe
add
daa
push
stos
or
loop
push
fidivrl
sbb
inc
or
add
add
lcall
lret
loop
enter
add
jo
jno
clc
mov
mov
scas
and
and
dec
fwait
cli
mov
xchg
pop
dec
push
dec
ret
clc
std
mov
dec
adc
jne
adc
jo
iret
pop
xchg
pop
mov
jg
xor
push
inc
out
daa
xchg
cld
ds
int3
xchg
or
lods
decb
fdivr
mov
in
sub
imul
xor
push
js
cmpsb
mov
push
sbb
xor
mov
mov
mov
push
dec
mov
sti
pop
test
ljmp
daa
bound
cli
jns
hlt
movsl
mov
mov
mov
dec
pushf
adc
push
cmp
mov
insl
mov
clc
xchg
test
ficompl
push
inc
push
add
mov
inc
sbb
jno
cwtl
out
mov
iret
cwtl
fs
outsb
and
je
cmp
pop
movsl
leave
jmp
stos
adc
lea
daa
push
cmp
stc
cmp
push
pop
xchg
push
leave
cmp
jle
sub
fisttps
test
mov
mov
imul
stos
xor
clc
repnz
inc
dec
jle
std
pop
or
push
xchg
aas
inc
mov
idivl
or
jns
repz
push
ret
aas
xor
mov
leave
dec
push
jmp
in
popf
enter
inc
inc
xchg
lret
sti
aam
repnz
repz
add
mov
mov
subb
mov
xchg
icebp
mov
sub
bound
mov
cli
sbb
mov
imul
xchg
jge
ja
loopne
jg
ja
adc
test
mov
popa
dec
or
fmul
push
fdivl
xor
sbb
popf
xorb
cmp
dec
push
out
inc
cli
loop
and
loope
sub
push
dec
mov
xchg
dec
mov
lea
jb
mov
or
shr
sbb
mov
sub
push
insl
dec
pop
mov
jmp
ljmp
jnp
les
into
dec
data16
add
cmpl
inc
inc
ja
and
push
pop
dec
sbb
mov
sbb
hlt
mov
sbb
jns
mov
jne
dec
mov
gs
shll
repnz
xor
pushf
movb
pop
dec
lahf
cmp
xor
cmp
mov
push
popa
call
in
cmp
push
les
or
out
inc
cmp
pushl
dec
dec
sbb
add
test
sti
sbb
dec
mov
xor
mov
or
or
jecxz
insb
dec
xor
jle
mov
cmp
adc
out
cmpsb
adc
les
mov
negl
mov
pusha
pop
out
dec
pop
mov
fistl
jo
add
scas
dec
dec
mov
inc
insb
popf
cwtl
adc
negb
push
orb
or
repnz
mov
and
or
sbb
pushf
jp
and
xor
mov
mov
outsb
dec
call
dec
cmc
sbb
jg
mov
xor
add
out
adc
fiadds
data16
push
cmp
mov
dec
in
adc
pop
lahf
cmpsl
roll
mov
adcb
cmp
xor
pop
mov
dec
add
cmpsb
mov
pop
jo
dec
fldt
inc
scas
cmp
jle
cmp
lods
ret
and
push
nop
ja
sub
ret
xlat
mov
nop
or
cwtl
mov
bound
push
or
xchg
xor
xor
ja
fisubrs
pop
sub
in
mov
popa
sub
jp
adc
push
push
dec
stos
daa
call
test
jmp
mov
sub
out
or
inc
mov
rorl
xchg
shrb
add
mov
jge
rcll
push
jg
pop
jg
fisttpl
dec
add
arpl
add
and
push
dec
cmp
pop
bound
mov
xchg
movl
fcoms
push
shr
pop
inc
cmp
fiadds
dec
subl
jbe
data16
inc
dec
rsm
pop
jp
int
push
inc
cmp
or
lock
push
inc
ss
jnp
fwait
and
xor
movsb
sbb
or
ja
cmp
pop
jno
leave
bound
adc
stc
in
mov
add
mov
shll
jae
or
or
inc
mov
fcomps
cmp
gs
mov
in
push
adc
pop
test
dec
std
mov
xor
adc
mov
mov
sbb
std
aaa
cmpsl
mov
int3
std
sub
shrl
in
jmp
pusha
mov
mov
dec
lods
cmp
hlt
scas
mov
bound
cmp
iret
pop
pop
adc
xor
test
hlt
js
aaa
orl
xchg
into
mov
xchg
icebp
cmp
popf
orb
or
roll
pop
or
mov
add
pop
sub
dec
pop
dec
arpl
mov
test
push
and
xor
cli
loopne
bound
addr16
cmpxchg
cld
aad
std
sahf
out
outsl
icebp
or
xchg
into
cmpb
imul
sti
xlat
lock
mov
mov
dec
mov
cmpl
outsl
ja
adc
decl
test
rorl
inc
pop
or
shlb
incb
call
out
loope
adc
inc
pop
push
scas
pop
mov
cmc
mov
jae
pop
xchg
lods
inc
mov
dec
ficoms
push
dec
mov
rclb
jo
lods
cld
xor
imul
xor
mov
fiadds
inc
jbe
lock
sti
dec
inc
mov
mov
fiadds
pop
cmpsb
xor
jbe
or
into
fdivr
loopne
mov
jns
mov
push
adc
in
mov
adc
mov
mov
repz
cltd
sbb
pop
lcall
push
push
les
ret
shrb
outsb
enter
loop
xlat
push
sti
dec
notb
push
test
push
jno
sbb
mov
mov
and
repnz
jmp
and
mov
mov
jecxz
cmp
mov
ss
mov
jae
shrl
xchg
call
mov
push
in
leave
jnp
mov
lods
sub
sbb
mov
sahf
xchg
pop
fisubs
or
loope
xchg
nop
push
movsl
test
and
je
inc
pop
aad
mov
pop
into
pop
out
mov
pop
movsb
dec
pop
lods
xchg
lret
ret
test
or
jl
push
lock
sub
std
add
cmp
loope
cmc
cmp
mov
dec
int3
cmp
xor
ss
add
cmp
cltd
and
cmpsl
jmp
sbb
ficoml
imul
cli
dec
call
mov
or
dec
pusha
aas
mov
out
test
push
mov
in
bound
scas
orb
xchg
leave
in
das
add
sbb
sbb
loope
ljmp
mov
mov
xchg
cmpsb
push
jge
mov
add
cmpsl
and
clc
outsb
outsb
fwait
test
lods
adc
pop
in
cwtl
fs
cli
mov
les
out
add
and
sub
lods
jns
aaa
adc
sbb
and
xchg
fisttpl
lock
cmp
out
pushl
test
pushf
xor
clc
push
pushf
fcoml
mov
and
adc
xor
pop
roll
pusha
push
lret
cmp
mov
enter
fs
push
imul
push
xchg
add
mov
inc
ljmp
ss
jge
call
push
inc
imul
mov
adc
dec
cltd
ja
loop
fidivs
pop
xor
hlt
mov
ffreep
daa
jge
xchg
mov
lea
and
cs
cs
add
fisttpl
push
push
xchg
jno
mov
and
mov
repnz
sub
mulb
bound
mov
mov
stos
pop
sub
test
test
loop
mov
cmp
sub
sub
cmp
or
repnz
pop
mov
xchg
xchg
sub
insl
scas
pusha
lcall
cmp
xor
dec
push
es
sbb
pushf
inc
xchg
mov
cmp
lret
mov
in
out
pop
into
xchg
cmp
mov
mov
inc
or
add
divb
sti
test
pushf
mov
or
lods
repz
mov
push
loop
dec
std
pushf
jg
loop
sbb
movsb
mul
fdivs
popa
movsl
lahf
lods
incb
mov
xchg
mov
and
xor
add
pop
fistl
nop
mov
cmp
and
push
push
and
fdivrl
pop
mov
test
sbb
xchg
sbb
sub
mov
rcrb
js
xorb
mov
imul
es
sbb
repnz
mov
daa
and
push
sub
inc
cld
icebp
inc
or
aas
pop
adc
stc
incb
xchg
pop
inc
sub
outsb
shl
imul
lcall
dec
jecxz
xor
lcall
adc
or
lret
nop
pop
pop
mov
pop
sbb
pop
loope
pop
pop
dec
sub
jmp
sbb
and
ret
sub
mov
or
les
push
cmpl
pusha
rolb
insl
gs
scas
ret
repz
xchg
cmp
dec
adc
push
xchg
xchg
je
add
lods
icebp
ret
mov
arpl
push
cmc
sub
push
pop
mov
fisttps
sahf
outsb
jno
jo
adc
xchg
mov
outsb
shlb
push
mov
subb
rorl
ret
loopne
xor
call
out
hlt
test
fisubl
scas
test
rolb
inc
pop
outsb
fisubl
call
inc
push
orb
inc
sahf
filds
outsl
pop
inc
in
lcall
cltd
mov
test
popa
repz
repnz
mov
arpl
pop
push
or
popf
adc
pop
outsl
lods
fcmove
mov
int3
ret
data16
test
inc
mov
cltd
inc
sub
xchg
adc
fistpl
divb
add
mov
sub
and
xlat
das
pop
inc
rcl
ja
iret
push
mov
add
mov
idivb
fisttpll
stos
xlat
sub
jge
add
lahf
pushf
xlat
sti
out
push
jge
cmc
movsl
aad
cwtl
adc
and
cs
lahf
jbe
arpl
inc
jmp
and
xchg
bound
jno
dec
repnz
jns
sarb
adc
sar
shll
inc
dec
xchg
push
pop
and
lock
fucomip
cmp
nop
adc
dec
add
sub
rcrb
jecxz
xorl
popf
jne
xchg
cmc
xchg
pop
xchg
mov
jge
xchg
pop
rcr
mov
cmp
jp
iret
icebp
mov
lahf
je
sub
xchg
cmpsl
hlt
dec
cmpsb
ret
jno
aam
xchg
repz
aad
or
clc
lods
sbb
stos
cmp
or
or
shrl
sbb
loopne
and
pop
dec
and
in
mov
pushf
inc
xchg
aas
adc
repnz
dec
sub
cmp
lock
xor
push
outsb
xor
js
adc
lods
pusha
dec
mov
sub
les
push
inc
shlb
call
sbb
iret
or
jbe
cmp
mov
add
pop
les
sahf
dec
adc
cmp
lods
and
mov
testb
or
mov
and
sbb
push
int3
cli
inc
xchg
iret
fdivrs
sbb
call
xchg
xor
mov
and
cmp
push
lea
sub
fisubl
pop
fnstsw
push
inc
in
mov
xchg
mov
and
xor
shrb
and
add
mov
std
fwait
pop
das
scas
adc
add
nop
mov
es
dec
arpl
or
cmpsb
outsb
cli
loope
or
stos
fwait
leave
mov
dec
push
test
mov
mov
or
insl
dec
jbe
and
or
imul
repz
jb
stc
insb
stos
mov
push
add
mov
sarb
fcomp
pop
push
jo
fidivrs
fidivl
adcl
and
pop
mov
insb
dec
inc
xchg
mov
in
cmp
inc
lahf
mov
mov
int3
push
jge
adc
inc
or
xor
add
adc
gs
jo
nop
add
jnp
dec
lcall
cs
insb
push
fldenv
call
fs
sbb
sbb
mov
mov
add
pop
mov
call
out
js
cmpsl
jmp
and
aad
adc
inc
lods
outsb
inc
cltd
popa
xchg
ja
fmull
mov
out
es
hlt
pusha
sub
xor
pop
pop
aad
cmp
or
in
cmp
inc
sbb
jne
into
sahf
insl
xchg
in
inc
pop
sahf
fldenv
insl
inc
push
adc
sub
or
dec
and
and
loope
clc
pop
lcall
or
mov
mov
in
jno
push
mov
sbb
sti
es
cmpsb
int
lock
leave
jle
jp
inc
pop
dec
xor
mov
popa
cs
xorl
fadds
data16
mov
add
xchg
cmp
cmp
je
into
inc
arpl
cli
out
das
mov
fdivs
je
pusha
andb
ljmp
int3
dec
clc
push
mov
call
pop
mov
mov
mov
mov
and
cmp
aad
sbb
aam
imul
cmc
xchg
push
add
rolb
lods
shl
mov
mov
jle
or
clc
fsubl
jge
dec
shll
in
or
xchg
dec
sub
mov
ret
inc
dec
lret
push
cmp
push
outsb
movsl
lret
inc
mov
adc
jl
push
pop
stos
daa
lcall
sbb
test
dec
je
push
add
fsubrs
loop
scas
pop
fistps
jnp
in
mov
push
sub
pop
dec
in
sti
sahf
pop
sbbb
xor
orb
aas
arpl
mov
and
loope
mov
xchg
xchg
loop
in
and
cmp
out
orl
call
mulb
sub
movsl
insl
pop
cwtl
push
repz
ret
jecxz
mov
jmp
nop
and
mov
push
jl
scas
lds
dec
jmp
and
sar
stos
mov
mov
cwtl
mov
xchg
sbb
movb
lahf
jp
sub
dec
mov
in
fistpl
dec
xlat
lods
dec
into
clc
sub
jnp
outsl
push
dec
data16
dec
cmpsl
fs
pop
sti
pop
mov
fists
shrl
sbb
push
xchg
push
ficomps
xchg
sti
sbb
jmp
pop
mov
mov
arpl
jl
xchg
pop
cmpsb
fwait
cmpsb
test
divb
mov
rolb
roll
pop
mov
jo
pop
js
mov
pop
inc
cmp
pop
lea
data16
test
loop
lods
repnz
repnz
ljmp
dec
mov
sub
pop
mov
adc
fidivl
mov
jmp
inc
addr16
inc
aam
in
mov
loopne
rcr
mov
addr16
push
mov
lods
xor
dec
rcl
outsb
xor
sbb
mov
mov
cmpl
push
bound
adc
jl
ficompl
sub
adc
rcll
push
xor
cmp
les
dec
cwtl
iret
stc
mov
sub
cwtl
jo
or
sbb
push
insl
inc
int3
aas
mov
inc
shlb
inc
es
xchg
insb
in
and
lret
rep
fimuls
push
je
lods
sbb
scas
cmp
pop
in
int3
mov
cmp
sahf
fists
ss
cwtl
loope
push
lret
mov
inc
adc
mov
adc
mov
int
test
or
add
ss
or
pop
insb
cmpsb
cmc
and
pop
ds
xor
sbb
xor
mov
jae
pop
mov
lret
xchg
cmp
rcrb
pop
dec
testb
mov
loopne
inc
push
aam
in
pop
out
sarb
aaa
jl
sahf
aam
sbb
inc
js
adc
subl
divl
cmc
adc
dec
jo
data16
in
aad
fbld
jo
push
pop
xchg
mov
adc
enter
push
adcl
loopne
sub
ljmp
cmpsb
jg
xor
cmc
jae
push
pop
gs
jge
sub
mov
jnp
jg
out
sbb
cmpsb
imul
arpl
or
jmp
adc
in
arpl
mov
mov
test
mov
lcall
and
push
push
jg
mov
jle
int3
lret
cmpb
sahf
test
fildl
push
fs
push
pop
cli
out
push
repz
or
cmpsb
lret
jge
pop
xchg
push
jp
cs
in
subl
adc
xchg
or
mov
sub
pop
jl
xor
pop
rcrb
push
xor
nop
jg
inc
jg
fisubrl
addr16
pushf
imul
and
negb
push
or
and
push
lahf
or
mov
in
aas
add
imul
sbb
adc
call
lods
stos
cmp
into
jge
dec
loope
rcll
push
fdivrs
aaa
cmc
add
mov
mov
imul
stos
sbb
cltd
xchg
push
insl
fldenv
in
push
icebp
jmp
mov
mov
dec
fmull
test
enter
test
jbe
dec
enter
adc
cmp
inc
jg
cmp
lods
aas
jle
lods
dec
pusha
into
cmpsb
and
and
aad
xor
out
out
loope
sub
and
addr16
aam
xor
scas
push
pop
je
fnstenv
adc
int
testl
scas
mov
jle
aam
sbb
push
shlb
jp
out
xchg
pop
movswl
js
pop
xchg
int
test
scas
jmp
mov
dec
ja
mov
jo
cli
cs
lret
arpl
cmpsb
adc
insl
lods
into
int
inc
and
cmp
sub
pop
mov
inc
aad
iret
loopne
adc
in
outsl
mov
sub
rcrb
jns
inc
push
lahf
cmp
js
inc
dec
fs
jb
cmp
dec
dec
sub
shlb
sbb
sub
das
mov
nop
push
jl
xor
fistps
fcompl
jo
mov
pop
lret
scas
ret
outsb
pop
aas
xchg
sarb
jp
sahf
sub
iret
stos
loop
out
jne
and
jmp
or
dec
lahf
pop
shrb
lret
dec
pop
mov
stos
jle
sbb
mov
and
enter
xchg
adc
lahf
inc
lea
std
outsl
xchg
xchg
or
int3
aad
jl
ret
or
pop
cmp
insb
movsb
and
mov
pop
pop
jmp
cmpsb
fs
loop
pushf
or
dec
cmp
pop
imul
test
cmp
sbb
xchg
xchg
aaa
and
fsubs
stc
pop
mov
addl
loopne
addb
mov
dec
movsl
imul
iret
imul
jl
std
out
movsb
adc
jnp
loop
ljmp
and
mov
rorl
lds
aad
inc
cmc
mov
ss
add
popa
add
mov
fs
outsb
add
aam
jle
and
sub
sbb
cltd
int3
nop
sti
push
and
pushf
imul
lcall
icebp
add
add
or
int
and
popa
dec
popf
sbb
xchg
outsb
cltd
ja,pt
sbb
mov
pushf
xor
arpl
dec
enter
xor
sub
jp
popl
pop
stos
or
ljmp
inc
out
rep
aam
cmp
dec
stos
cwtl
xlat
mov
mov
ret
sbb
mov
lock
lea
push
aaa
dec
and
sub
movsl
mov
cmp
sub
xchg
jno
add
xor
or
mov
xchg
pop
push
fucomp
ret
dec
add
in
xor
imul
mov
mov
mov
cmp
mov
insb
push
out
push
mov
or
outsb
xchg
rolb
adcl
inc
pop
les
outsl
dec
jbe
jecxz
enter
adc
add
jecxz
shlb
fadds
xchg
in
mov
adc
sub
mov
xchg
mull
xchg
push
inc
in
scas
xchg
shrl
out
lahf
sbb
xchg
mov
data16
sbb
in
and
or
xor
jnp
pop
in
int3
dec
jg
lret
sub
push
mov
inc
sbb
mov
je
pop
pop
out
syscall
test
mov
or
dec
popf
lods
stos
loope
hlt
int
arpl
mov
pop
pop
fiaddl
or
test
cli
inc
imul
xor
push
lahf
sbb
lds
shll
mov
fcmovnbe
xor
lock
push
xor
cmp
pop
pop
insl
inc
xchg
cld
mov
xor
pop
rcrl
dec
sub
inc
stos
test
push
mov
xchg
int3
repz
jno
cwtl
jp
rcll
nop
pop
sarb
enter
push
push
push
jo
mov
or
pop
lods
or
loopne
mov
inc
add
int3
pop
dec
sub
divb
ljmp
sahf
mov
out
mov
push
and
jns
rcll
or
mov
pop
sbbl
add
and
add
outsl
sub
lret
int3
cmp
insl
xchg
sbb
mov
push
lcall
je
inc
outsb
aaa
cmp
adc
pop
cmpsb
pop
insb
cmp
sub
stc
xchg
mov
sar
mov
arpl
dec
mov
out
out
mov
xchg
sub
jne
mov
ficomps
int
mov
into
pop
cmp
nop
inc
movsb
outsb
inc
das
iret
ror
addr16
push
mov
push
lret
outsl
test
or
sbb
dec
and
jg
negl
xlat
push
dec
popa
adc
sbbl
or
adc
leave
pop
mov
sti
leave
jnp
aam
jp
movntps
cmp
pop
lahf
fwait
subl
scas
jo
mov
movsb
aad
in
scas
push
stos
aaa
pop
push
icebp
rcrb
push
inc
mov
out
nop
int3
xlat
push
and
insb
rcrb
fistps
pop
push
rorl
adc
mov
or
lahf
lods
in
lret
imul
pop
and
rorl
fbld
push
subb
inc
insb
xlat
lret
dec
dec
jno
jecxz
mov
push
cs
sbb
bound
mov
les
lods
sub
loop
insb
adc
mov
dec
mov
pop
sbb
in
mov
push
or
mov
inc
jge
sbb
fimull
fistl
fadds
imul
cmp
mov
mov
mov
in
rorl
sahf
and
dec
stos
lcall
dec
aad
lea
int
cmpsl
das
xchg
andl
jb
sbb
les
xchg
mov
pop
fs
insb
jle
test
mov
or
mov
adc
jl
pop
xchg
sahf
sub
rcll
aas
mov
shlb
outsb
js
ja
nop
nop
and
fstpt
inc
loope
jno
js
dec
dec
push
mov
mov
fs
ss
xchg
sbb
sbb
mov
mov
inc
jbe
inc
loope
and
sbb
xor
mov
mov
cld
or
dec
lcall
and
push
dec
add
negb
adc
daa
cmp
xchg
jns
scas
mov
add
dec
out
gs
arpl
scas
jp
sub
mov
lods
mov
movsb
xor
fidivrs
jb
and
ret
xchg
xchg
jl
outsb
fsubrs
pop
and
jnp
fldt
jno
ds
stos
fsts
adc
int3
cmp
inc
daa
pop
push
into
ret
out
sbb
pushl
popl
inc
imul
sub
mov
clc
jbe
movups
pop
fists
xorb
adc
out
lahf
out
div
clc
jle
das
icebp
scas
push
lahf
pop
push
jecxz
pop
xchg
call
pop
addr16
out
mov
adc
push
out
jae
mov
lahf
and
xor
repz
jnp,pn
jb
popa
xchg
cmp
jle
push
mov
repz
jbe
fwait
ret
pop
aaa
lret
inc
jae
aas
pop
mov
xlat
jg
ret
outsl
and
inc
jae
lcall
mov
leave
aaa
data16
or
jg
imul
sub
pop
dec
arpl
cmpsl
fwait
jg
mov
and
mov
in
pop
mov
xchg
ret
jecxz
in
cmc
sub
dec
out
fwait
rorl
imull
pusha
mov
inc
imul
outsl
mov
pop
lahf
rcll
sub
xchg
mov
movsb
mov
jecxz
cmpsl
adc
in
mov
pop
test
subb
aas
scas
scas
xor
fimull
rol
negb
clc
xor
int3
popa
leave
xor
sbb
jge
and
fiaddl
aas
mov
sub
adc
es
sub
sarl
jbe
mov
mov
sbb
or
inc
mov
iret
add
ret
xchg
test
push
cs
and
or
push
lds
test
data16
sbb
cmc
jne
push
cli
test
dec
mov
stc
jns
mov
repnz
mov
xchg
mov
mov
and
addb
movsl
cmc
in
adc
xchg
xor
and
sub
arpl
push
loopne
sti
xor
cli
jo,pn
sbb
into
lods
and
jne
pusha
mov
lock
sub
nop
loop
mov
ret
pusha
ret
icebp
and
push
fs
push
pushf
dec
push
aad
mov
shl
in
adc
dec
dec
mov
and
and
mov
inc
aam
cld
jo
out
cmp
es
or
mov
ljmp
push
mov
pop
add
orb
addps
cmp
jae
insb
fiaddl
pusha
inc
fwait
inc
pop
push
daa
lock
sbb
mov
stos
es
nop
es
fwait
xor
cs
decb
and
or
push
in
push
jg
mov
out
aad
dec
sub
repz
mov
out
mov
pop
sbb
out
mov
jnp
ud0
dec
inc
mov
push
pandn
sub
mov
call
sahf
push
lret
xor
mov
lods
iret
pop
aam
rcll
je
es
nop
lea
pop
addr16
bound
pop
movsl
aam
push
cmp
fnstenv
inc
xchg
mov
xchg
sub
scas
push
or
mov
test
aas
sub
fisttps
dec
fbld
pop
in
out
loop
pushf
popa
xchg
jbe
jns
adc
repnz
sub
adc
or
sti
imul
cmpsb
xor
add
and
sbb
insb
addb
leave
mov
sub
pushf
mov
inc
jg
repnz
xor
sahf
mov
iret
and
inc
or
jb
pusha
lock
leave
daa
arpl
or
mov
fwait
xchg
outsl
je
sbb
jmp
bound
mov
lahf
sub
pop
testb
and
imul
push
repz
jle
in
dec
xor
fisubrl
sbb
imul
mov
popa
inc
pop
inc
xchg
xor
fistps
in
daa
inc
mov
xor
sub
mov
hlt
or
sbb
dec
mov
clc
add
fwait
rcl
arpl
or
mov
es
outsl
or
aam
xlat
mov
fs
dec
mov
repz
lret
cmpsl
repz
or
psubb
push
lret
inc
xchg
lcall
aaa
mov
sub
in
mov
fstl
inc
movsb
push
adc
pop
lret
add
insb
mov
mov
mov
xor
movsb
push
push
mov
push
mov
jge
ficoms
push
or
mov
mov
push
and
jae
pop
idivb
xchg
cld
arpl
jg
push
push
push
jle
dec
inc
inc
enter
adc
cwtl
pop
dec
pusha
sub
outsl
subb
cmpsb
dec
inc
sbbb
xchg
ja
xor
das
int
push
sub
in
inc
inc
mov
pop
inc
stos
sbb
inc
push
xchg
mov
data16
scas
mov
out
and
xlat
dec
daa
jbe
out
cmpl
mov
pop
ret
add
mov
pop
sub
ds
loope
jbe
adc
cld
subb
inc
popa
adc
adc
movsl
inc
enter
aaa
mov
mov
dec
shll
fs
out
icebp
mov
test
into
ljmp
dec
adc
sbb
outsl
xchg
pop
xchg
stos
mov
mov
add
ss
mov
jge
jmp
data16
cli
aam
sbb
into
daa
jno
push
dec
out
rcl
or
shl
ret
dec
int3
sub
or
xchg
xor
test
jp
mov
sbb
cmc
sub
push
mov
lret
in
mov
mov
mov
push
dec
dec
faddp
mov
inc
xchg
and
xchg
push
ret
sahf
adc
push
sbb
sahf
xor
pop
dec
dec
adc
push
sti
je
mov
dec
je
gs
lret
jmp
jmp
or
sbb
pop
pusha
mov
mull
in
or
adc
dec
xor
dec
call
cwtl
jle
mov
push
xchg
mov
cmc
add
pop
xchg
sbb
hlt
mov
repz
add
stos
data16
pop
stos
daa
cmp
ret
adc
arpl
jg
rolb
cmpsl
sub
into
sbb
mov
test
and
cmpsl
lret
pop
dec
das
push
jns
push
jb
loopne
sbb
movsb
movl
mov
jae
dec
mov
mov
push
movsl
mov
in
sub
and
xor
xchg
imul
mov
push
out
mov
cmpsl
es
in
mov
mov
lcall
lret
loop
lea
repz
pop
cmp
movl
xchg
push
jnp
mov
lret
push
test
sbb
cmc
and
jmp
std
notb
daa
aaa
std
es
xor
fsubr
daa
dec
ja
imull
rcll
cmpsb
pop
mov
add
jl
and
lods
sbb
dec
sub
movsl
xor
fsubrs
push
cmp
xlat
adc
out
fcomps
ret
fildll
out
mov
aam
mov
pop
mov
cmp
mov
sub
push
data16
jp
inc
xchg
in
ret
xchg
iret
pop
cli
push
repnz
adc
xor
lret
clc
out
mov
sbb
imul
adc
sub
sbb
or
stc
out
rolb
gs
push
pop
dec
push
cmpsb
cmpsb
mov
push
jl
mov
adc
sub
fldcw
je
mov
jb
or
dec
fildl
and
fs
out
repz
jle
pop
insb
cmp
scas
loop
jnp
mov
out
xchg
jnp
lret
xor
mov
dec
adc
ja
in
ret
cmc
push
inc
mov
sbb
mov
lret
cs
pop
stos
cwtl
pop
mov
lods
into
push
cs
bound
xor
cmp
pop
dec
outsl
outsb
mov
xor
adc
loop
xchg
jl
sbbl
jb
mov
jg
in
out
dec
aaa
in
sub
test
and
mov
xchg
mov
jle
jb
mov
mov
test
adc
xchg
inc
push
inc
mov
repnz
jbe
notb
test
xchg
jnp
ljmp
je
outsb
mov
jle
cmpsb
ret
mov
mov
das
pop
sbb
mov
mov
pushf
jg
jl
fadd
inc
pusha
in
dec
sub
cmp
test
out
mov
int
sbb
sbb
orl
fcmovnb
mov
mov
xor
lret
push
out
push
add
dec
push
sbb
sbb
fisubrs
lods
xchg
pop
mov
cmc
lret
out
insl
push
sub
pop
lcall
movb
push
sbb
out
daa
jb
inc
lahf
add
pop
es
js
xor
cmpsb
jbe
shll
push
bound
adc
adc
loopne
pop
leave
sub
push
cmp
leave
test
push
dec
iret
and
sahf
sbb
xchg
jle
jae
jl
push
xchg
cmpl
jp
push
xchg
pop
mov
and
mov
mov
mov
mov
adc
cli
lea
ds
lea
hlt
ficoms
outsl
andb
jno
sbb
mov
call
iret
call
adc
loope
stos
cmp
inc
scas
jg
sub
mov
test
int
add
xor
xchg
rcrb
lret
leave
loope
pop
jecxz
into
add
cld
in
push
mov
stos
sbb
les
imul
pop
xor
pop
mov
or
gs
sarb
dec
mov
dec
xor
mov
test
push
xchg
xor
mov
add
push
mov
push
cli
cmpb
mov
hlt
sbb
je
lret
add
or
mov
pop
and
test
repnz
ret
jl
imul
fcoml
adc
dec
mov
out
mov
pop
daa
add
in
add
ljmp
or
stos
ja
je
iret
pop
adc
jno
outsb
adc
std
and
xchg
sub
or
lret
daa
jae
fs
and
push
jg
mov
xchg
push
fadds
outsb
inc
lea
jne
and
and
aad
iret
jl
jle
stos
stos
mov
enter
pop
or
in
jg
ds
lahf
sbb
sbb
or
addr16
int
rcr
mov
ret
mov
inc
sbbb
lea
pushf
add
popf
inc
sti
fnclex
daa
loopne
movsb
mov
mov
sub
push
incb
sbb
stos
ficoms
mov
mov
xor
sbb
ss
mov
leave
jle
add
cmp
gs
cltd
cmc
push
xchg
aad
add
dec
data16
xchg
leave
lahf
rorl
push
cmp
mov
cltd
adc
ja
adc
inc
mov
xlat
icebp
xor
lds
xchg
dec
xchg
in
jae
test
data16
imul
inc
stc
outsl
push
cs
mov
cmp
mov
int3
jle
nop
subl
jle
xlat
mov
lcall
pop
pop
jecxz
lock
sti
dec
repnz
std
int
jns
push
inc
add
xchg
or
pop
mov
sub
adc
sub
insl
mov
pop
nop
mov
cmp
popf
xchg
mov
ffreep
adc
mov
add
jnp
or
or
jl
cmp
idivb
jmp
mov
inc
push
inc
mov
mov
pop
mov
xor
cltd
imul
lods
aad
pop
xchg
mov
mov
rcrl
scas
jns
stos
xor
outsb
int3
mov
and
and
out
dec
pop
sub
sti
push
jno
pop
xor
xor
mov
daa
shrb
cmpsb
ss
sarb
fisttpl
and
jl
and
js
int3
scas
sbb
mov
jge
mov
subb
inc
stos
mov
mov
mov
and
and
sahf
mov
jge
test
push
fstpl
mov
sbb
sbb
fcmovu
call
ljmp
fbld
es
test
test
push
mov
js
mov
xor
pop
jno
cmp
sub
cmpsb
jl
movsb
lods
movsb
adc
mov
pop
mov
xchg
sahf
out
shrb
add
dec
inc
jb
int3
add
dec
fnsave
cmc
xor
les
inc
cwtl
xlat
andps
jmp
sahf
cmp
mov
xor
xor
add
repz
lcall
adc
cmp
add
loop
mov
mov
or
je
lahf
pusha
ja
cltd
push
ficoms
mov
fsubrs
out
pusha
push
sub
imul
daa
mov
pop
adc
adc
pop
adc
pop
pushf
dec
repz
dec
xor
daa
cmp
pop
mov
inc
jnp
clc
xor
push
push
adc
xchg
cltd
jmp
aaa
mov
loope
lods
jge
xor
sarl
fcoml
dec
push
xchg
inc
sub
outsl
add
jbe
rol
repnz
and
sahf
lods
out
enter
imul
mov
hlt
cmp
mov
into
sbb
jge
sarb
or
fadd
add
test
inc
shll
cwtl
shrb
pop
push
jp
xchg
xlat
ljmp
jns
inc
dec
out
inc
test
sub
mov
or
aaa
adc
pop
stc
ljmp
mov
lret
lods
and
or
inc
stos
fcmovnbe
les
repnz
push
mov
xchg
mov
cmp
movsl
rolb
mov
or
mov
cmp
lds
cmp
xor
outsl
mov
lock
inc
xor
lahf
movsb
jbe
jl
aam
insl
push
xor
mov
ret
int3
pop
xchg
cs
popf
sarl
cmc
add
push
and
cltd
hlt
inc
mov
inc
ror
aad
cmc
jle
shll
cmp
adc
cmpsb
add
jb
rclb
cmp
adc
movsl
subl
dec
pop
xorl
mov
mov
in
push
mov
lea
pop
sub
fs
ret
dec
xor
mulb
shll
cmp
mov
and
mov
fistpl
fmull
arpl
pop
jnp
add
jns
in
push
push
movsl
mov
outsl
sub
std
dec
dec
inc
or
test
aas
nop
jecxz
dec
sub
lahf
decb
cld
mov
iret
cmpsb
test
or
cli
lret
and
cmpsb
mov
imul
or
sti
sub
xchg
jns
ja
lret
fcoml
shr
push
out
jo
mov
sti
xchg
xchg
fcoms
mov
jecxz
xlat
xchg
or
sahf
xlat
ret
jns
jae
popa
pop
cs
push
cli
and
sub
mov
sub
sahf
jnp
add
cmpsl
out
popf
sbb
pushl
mov
cmp
loopne
or
jae
cmovp
imul
mull
mov
outsl
and
imul
iret
mov
lock
pop
in
scas
and
ljmp
fidivrs
popa
out
and
dec
dec
shrb
imul
outsb
outsb
loopne
xor
std
push
cmc
mov
mov
inc
xchg
or
inc
pop
std
jne
or
and
out
jmp
testb
push
push
addr16
xlat
hlt
dec
lret
andl
cmp
das
cmpsl
cmp
pop
dec
jbe
nop
pop
mov
dec
mov
xchg
popf
insb
push
inc
mov
inc
iret
mov
sbb
xorb
add
xchg
xor
push
dec
insb
fisttps
xor
shll
rcrl
jl
fldcw
add
push
test
cmpsb
repnz
fadds
vpshaq
data16
sbb
jg
push
xchg
imul
les
es
and
aas
sub
repnz
lea
aaa
icebp
scas
ljmp
std
add
cmp
out
jge
stc
or
dec
enter
mov
inc
stos
test
test
lds
or
movaps
loop
cmp
iret
aaa
rclb
mov
push
imul
ljmp
mov
fildl
or
arpl
jecxz
lods
pushf
pop
xor
mov
xchg
aad
dec
xchg
out
fbstp
or
lcall
mov
xor
push
test
stos
pusha
mov
xor
inc
push
int3
aas
mov
xchg
imul
sbb
nop
and
daa
rorb
sbb
push
dec
xchg
je
imul
stos
jle
loopne
sub
jo
ja
or
xchg
clc
out
xchg
and
cmp
pop
das
mov
and
mov
mov
jne
mov
scas
aaa
inc
jo
add
das
sbb
mov
or
cmpsl
add
shrl
inc
cmpsb
sub
stos
push
leave
cmpsb
adc
mov
push
adc
popl
adc
jge
mov
xchg
sahf
iret
lock
in
and
out
push
fsubl
dec
mov
mov
inc
xchg
mov
jg
and
mov
xor
adc
dec
jno
jp,pn
xor
mov
orb
js
xor
std
mov
mov
xor
mov
xchg
pusha
fists
jae
fwait
js
mov
orb
and
adc
mov
mov
add
test
daa
jmp
out
testb
jno
adc
arpl
insl
add
xchg
pop
mov
bound
into
mov
push
sbb
les
out
fwait
repz
mov
and
in
mov
cmp
add
in
mov
sahf
xchg
fildll
adc
scas
popl
push
push
adc
jge
jle
sar
fs
sbb
jge
jae
mov
push
pop
das
das
xor
dec
sbb
jg
jl
mov
lds
mov
and
loop
lock
sub
xor
mov
out
mov
fwait
iret
sbb
jmp
ficoml
push
outsb
mov
aam
xlat
push
movsb
in
cli
es
cmpsb
rorb
fisttps
push
dec
xor
outsl
adc
icebp
push
sbb
movsl
add
jbe
sarl
ds
std
lods
push
and
andb
icebp
xchg
in
aaa
ret
push
push
nop
jmp
mov
sbb
mov
xchg
mov
lret
loopne
push
repnz
hlt
iret
cmp
inc
pop
add
fwait
jmp
outsl
mov
mov
orl
cmpsl
mov
adc
lahf
lcall
push
cmp
cmpsl
mov
call
sbb
dec
mov
sbbb
jle
inc
push
enter
fwait
jbe
or
fsubrs
in
pushl
sub
nop
xor
inc
ret
pushl
cli
adc
lea
out
cmp
addr16
rcll
sbb
pop
stos
add
push
test
push
pushl
xor
xchg
mov
mov
bound
xchg
mov
std
push
cmpsb
push
rep
mov
lret
mov
dec
jne
out
mov
int3
cltd
insl
cmp
decl
inc
outsb
jno
dec
jne
jmp
push
sub
jp
push
pop
inc
mov
pop
inc
addl
mov
xor
mov
jbe
mov
sbb
inc
pop
out
pop
dec
mov
stos
popa
in
outsb
je
and
divl
xchg
cmp
push
ror
push
mov
adc
mov
out
adc
insb
lds
in
sub
mov
mov
and
shlb
mov
cmpsl
xchg
cli
pop
sbb
mov
mov
rcrb
adc
dec
ss
pushf
ffree
adc
xchg
mov
xor
xlat
add
jecxz
inc
xchg
pop
mov
aaa
push
lahf
loop
cmp
cmp
sbb
mov
daa
out
push
mov
mov
fcomip
mov
dec
dec
push
cmp
loope
stos
imul
or
and
in
cmp
and
in
inc
scas
xor
dec
call
rcrb
aad
enter
push
test
xchg
in
lahf
or
dec
push
cmp
pop
pop
xchg
inc
fdivl
nop
inc
dec
fs
xor
movsl
push
js
mov
les
push
outsl
cmp
fnstcw
mov
pop
stos
adc
cmp
insb
xlat
push
insl
push
stos
loopne
aad
lret
mov
pop
dec
mov
push
movsl
cmpsb
adc
mov
add
xor
inc
add
push
inc
addb
or
iret
sub
inc
fildll
pop
imul
mul
adc
fists
pop
aas
out
ss
lods
popf
and
fwait
dec
das
ret
xor
leave
rep
in
jns
lcall
mov
leave
xchg
aas
shlb
xorb
pop
xor
jns
push
call
add
orl
test
iret
cmpsb
test
dec
add
sahf
subb
outsl
adc
xor
mov
iret
fcmovne
dec
jbe
mov
scas
lret
add
pop
std
jmp
mull
jl
mov
jp
inc
cmp
pushf
out
mov
cld
outsb
dec
xchg
adc
mov
xor
cmpsl
pop
sbb
fnstenv
fbld
mov
hlt
mov
jp
js
lds
and
cmp
adc
jnp
outsb
loop
stc
call
push
pop
push
in
mov
push
lea
std
repnz
enter
add
mov
add
addr16
fcompl
cs
loop
mov
xchg
push
add
in
jae
xchg
int3
xchg
iret
mov
add
int3
pop
mov
xor
stos
push
jp
dec
jae
or
cli
jle
popa
add
pop
cltd
jecxz
test
adc
icebp
and
fwait
shlb
or
dec
fidivs
xchg
xchg
out
daa
out
mov
comiss
mov
inc
orb
jo
imul
outsb
pushf
add
pop
jmp
gs
xchg
repz
mov
xchg
jnp
or
mov
test
cmc
or
cld
sub
sti
and
jmp
mov
add
adc
mov
scas
jl
or
or
std
jmp
mov
ficomps
fsubr
pushf
sub
dec
jns
lods
mov
adc
mov
dec
sti
imul
push
fwait
pop
pop
sbb
sbb
mov
push
xchg
mov
dec
sub
add
sbb
adc
scas
add
into
jns
out
push
jp
xor
shr
or
cmc
xchg
clc
subl
xor
xor
addr16
inc
inc
les
cwtl
es
fs
ds
in
int
stos
fistps
dec
or
jbe
ja
rcrl
xchg
out
push
dec
add
jg
loope
push
lret
inc
imul
bnd
aad
inc
mov
divb
push
pop
mov
cmc
jl
in
lahf
or
xchg
test
mov
xor
popf
jns
pslld
movsl
iret
frstor
in
jmp
fistpll
dec
add
sub
jbe
adc
imul
outsl
adc
hlt
mov
popf
jns
and
pop
or
mov
aad
fisttpl
scas
add
or
push
addr16
inc
mov
aad
sbb
out
xchg
xor
fwait
loope
mov
sub
and
fimull
fstps
dec
insb
imul
subb
loopne
add
repz
fsubs
push
jle
push
arpl
jb
mov
addr16
int
mov
popa
shl
jp
ret
stos
mull
shrd
repnz
inc
les
outsl
idivl
mov
mov
push
in
adc
fidivl
dec
mov
repz
push
daa
or
mov
es
data16
jecxz
scas
xor
jbe
sub
dec
lcall
aas
sub
sub
test
mov
dec
out
inc
jb
mov
cmpsl
dec
xchg
stos
out
push
pop
rcll
outsl
testl
xchg
pop
push
test
sbb
add
insl
cmpsl
cmp
iret
insb
cmp
cmp
loopne
push
jle
jbe
fimull
jne
fadd
add
dec
pop
xchg
adc
addb
and
stos
add
std
cmp
outsb
mov
repz
xlat
rcl
popf
sahf
adc
xchg
call
out
out
jle
or
add
sbb
xor
lods
inc
pop
jb
jno
rorb
aas
pop
cmp
fcmovb
xchg
aad
out
mov
pop
rolb
ds
xchg
dec
movsb
sub
push
mov
jo
into
shll
lret
out
pop
dec
nop
shll
pop
push
pop
xchg
adc
sarl
mov
or
mov
shl
jecxz
cmp
push
aam
jnp
dec
adc
push
hlt
jbe
push
push
lret
mov
add
in
ret
xchg
shlb
aaa
pusha
inc
scas
insl
mov
cmp
daa
test
xchg
xchg
fdivs
sbb
negb
ds
into
and
mov
push
mov
and
jle
xchg
xchg
xlat
xor
xor
sahf
cli
cs
pop
data16
mov
int
lret
push
pop
pushf
dec
mov
cli
lcall
adcb
dec
ss
dec
test
mov
and
adc
mov
add
bound
sbb
dec
jno
ficoml
les
into
imul
fdivrl
loop
xchg
ret
and
insb
xor
ljmp
add
popa
cmp
jmp
push
cld
lock
sbb
ficoms
adc
test
arpl
and
sub
pop
mov
mov
test
jns
sbb
xchg
pop
mov
call
mov
xor
xchg
stos
mov
in
and
insl
fcmovnu
insl
subb
adc
outsb
lea
lea
fstp
mov
lock
popf
aas
cmc
dec
pop
dec
lret
push
xchg
mov
loop,pn
push
bound
scas
jo
stos
sbb
test
push
add
pop
mov
and
pop
dec
jbe
adc
in
xchg
loop
call
popa
adc
mov
cmc
add
dec
jne
shlb
pop
rorl
scas
cmp
mov
dec
imul
push
test
sbb
addb
nop
xor
xor
fldl
insb
or
mov
int
fdivr
pop
int3
cli
pusha
shll
mov
fwait
in
lods
movsl
adc
mov
leave
stc
insb
sub
nop
mov
lds
dec
xchg
sub
jg
or
adc
icebp
out
add
insb
fs
cmpsl
inc
testb
push
mov
sbb
adc
cmp
xchg
enter
cli
shlb
lea
jl
jne
sbb
sbb
leave
adc
loopne
add
fsts
jnp
or
mov
pushf
lret
hlt
inc
movsl
jns
and
iret
add
movsb
add
mov
push
cmc
sbb
dec
fsubs
push
lods
push
mov
adc
cltd
sbb
mov
loope
dec
out
je
mov
add
enter
jp
jecxz
lea
lods
inc
js
sbb
std
insl
inc
xor
pushf
sbb
push
lods
in
test
pop
pop
imul
add
shlb
pop
cld
mov
jmp
or
push
rorl
pusha
popf
mov
popa
push
cmp
inc
adc
xchg
inc
cmc
icebp
mov
lds
insl
imul
and
dec
mov
and
dec
test
mov
sub
je
mov
dec
jge
popf
movsb
or
xor
out
pushf
add
in
and
push
and
cld
movsb
pushf
mov
pop
cmp
movsb
popa
jl
leave
dec
adc
xor
lds
or
add
add
call
out
sub
fs
int
dec
mov
fcoml
fdivrl
push
mov
sub
mov
jl
in
xchg
cmp
or
dec
aaa
jmp
mov
mov
fdivrl
std
jl
xchg
pop
pop
aam
lea
pop
jecxz
clc
pop
xchg
add
fldcw
mov
dec
jbe
adc
mov
jge
je
int
sbb
test
lods
icebp
add
jl
lret
movsb
add
jge
xorl
push
jns
sub
nop
and
cmc
mov
mov
in
insb
iret
in
movsl
jne
aam
int3
dec
cs
std
aad
inc
jecxz
fmuls
mov
cltd
clc
pushf
call
dec
cmp
xor
and
and
xlat
cwtl
dec
shrl
add
in
jmp
test
inc
inc
adc
inc
out
or
sarl
call
fstpl
pop
je
in
adc
dec
xor
sbb
push
sbbb
xor
aaa
push
shlb
push
das
fisttpll
and
stc
mov
xor
sub
cld
and
pop
and
mov
xor
pop
fldl
test
jg
hlt
nop
sub
mov
add
and
int
ret
inc
test
pop
je
icebp
lods
mov
add
sbb
mov
insl
lahf
stos
and
add
xchg
dec
dec
lods
adc
clc
sub
aad
pop
ffree
or
and
mov
inc
add
loop
cmp
pop
in
mov
sbb
inc
sbb
cmp
lds
push
mov
pop
push
aad
clc
test
idivb
mov
fdivs
xorl
xlat
push
es
cmc
cld
xor
cmp
mov
int3
mov
add
loope
fsubrl
imul
ret
lcall
jge
jb
les
push
stc
sub
push
inc
inc
std
xchg
jbe
inc
inc
fsubl
push
xchg
or
mov
mov
daa
mov
faddl
aas
pop
mov
and
fwait
in
adc
repz
sti
pop
cwtl
nop
cld
inc
mov
in
scas
push
and
push
mov
lods
push
xor
and
pop
jo
push
stc
fs
insl
add
pop
mov
movsb
iret
fistps
sbb
pop
sbb
sti
test
cmpsl
push
divps
andl
dec
stos
enter
aam
pop
cmpsb
out
xchg
or
cltd
inc
outsb
mov
dec
aad
mov
inc
pop
pop
push
js
xchg
enter
in
pop
mov
push
jae
push
jmp
daa
pushf
add
sbb
jp
jo
roll
push
mov
int
js
das
mov
dec
lret
xchg
cmc
add
xor
push
xchg
in
out
sbb
sbb
addb
push
fidivs
ret
test
add
push
out
pop
lahf
inc
repnz
ror
out
in
dec
push
adc
mov
mov
inc
mov
mov
test
jne
or
cwtl
lods
inc
push
mov
lcall
pusha
sub
movsb
out
add
cs
aam
loopne
out
stos
fwait
adc
shlb
icebp
mov
inc
nop
movl
fdivl
iret
xchg
cmpb
es
mov
dec
ficoml
rcrb
loope
jecxz
mov
mov
jo
jl,pt
jbe
inc
icebp
mov
test
sbb
fwait
lock
push
sbb
lea
sahf
mov
mov
and
push
xor
dec
push
mov
xchg
test
push
arpl
and
jns
outsb
sti
adc
out
rol
leave
icebp
mov
and
rcll
adc
inc
cmpsb
jle
pushf
mov
cmp
push
outsb
pop
mov
sti
scas
inc
aam
fmul
pop
int3
jge
sbbb
cmp
fcoml
popf
shll
push
jno
inc
cs
jg
fistpll
sti
and
xchg
mov
dec
or
mov
hlt
ljmp
iret
jecxz
lods
addb
adc
sub
cmpsb
hlt
rcrl
pop
test
cmc
out
mov
inc
fldenv
aas
mov
xchg
adc
out
jecxz
sub
mov
repnz
jb
mov
jmp
jp
addr16
mov
push
andb
sahf
ljmp
dec
jle
add
popf
cmp
inc
mov
push
inc
and
ret
xlat
cmpsl
xor
jl
and
fcomip
fcoml
fdivrs
pop
imul
dec
dec
popf
int3
test
lcall
and
cli
popa
aam
dec
and
pop
insb
cmp
dec
ljmp
inc
push
push
inc
lret
stos
xor
ds
imul
ljmp
fists
mov
adc
xor
sbb
mov
xchg
inc
pop
dec
les
call
jg
int
pop
xor
pushf
and
xchg
inc
out
cwtl
aad
fnsave
sub
sub
sti
imul
jnp
icebp
pop
add
push
daa
lahf
fwait
pusha
test
out
pop
pop
pusha
mov
push
mov
fildl
cmp
movsb
ret
cli
jbe
sub
push
out
ja
insl
in
insb
cmp
pop
push
add
push
pop
inc
cmp
mov
fwait
xchg
int
shll
mov
pop
pop
or
daa
mov
mov
dec
pushw
mov
into
dec
mov
stos
add
sbb
add
add
pusha
mov
lea
push
or
push
push
push
push
mov
mov
mov
and
shr
xor
sub
shr
imul
not
inc
loop
pop
pop
pop
pop
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
