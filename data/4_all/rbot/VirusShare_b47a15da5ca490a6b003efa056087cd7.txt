leave
mov
sbb
mov
mov
jne
icebp
insl
or
sub
inc
inc
imul
or
push
inc
sbb
lahf
ret
push
xchg
sub
cmp
rcrb
test
mov
cld
ficoms
mov
xchg
loopne
pop
adc
jge
add
pop
sar
add
jp
mov
loope
inc
mov
adc
xorl
or
dec
xchg
xchg
dec
loop
jb
test
add
js
push
mov
push
mov
cli
lods
xlat
and
lods
cmc
loope
icebp
mov
xchg
mov
sbb
jo
cmp
pop
dec
xchg
es
imul
lcall
xor
cmp
fldcw
ret
adc
cs
dec
fdivrl
xor
and
rcrb
cmpsb
pop
mov
mov
pushf
jnp
aad
cmp
enter
ret
scas
mov
pop
mov
add
aas
or
add
inc
loop
mov
pop
mov
mov
outsb
jmp
jbe
mov
push
mov
leave
cli
or
ret
lret
pop
push
jns
fsubl
mov
jne
icebp
inc
dec
stc
adc
fisubs
std
into
in
push
jae
mov
push
adc
in
push
pusha
scas
insl
hlt
or
notl
cmpsl
stos
jmp
pop
mov
cmp
pop
and
adc
jnp
insb
ss
cmp
movsb
fadds
call
sub
dec
or
pop
sbb
dec
pushf
jmp
sub
push
push
xchg
xor
push
and
testl
inc
sbb
mov
and
mov
mov
dec
ret
xlat
repz
pop
fdivs
xchg
mov
pop
stos
in
ljmp
bound
sbb
mov
mov
imul
push
je
repz
and
insl
add
imul
popf
pop
mov
js
in
andl
dec
cmp
fistps
fs
repz
sub
arpl
loopne
scas
cmpsb
sbb
add
cmp
mov
push
imul
cmp
mov
es
clc
xchg
idiv
les
mov
jno
nop
std
data16
push
repz
aaa
jg
dec
or
xchg
jecxz
mov
movsbl
lds
inc
scas
lods
test
dec
push
and
nop
nop
loope
xchg
movsb
movsl
jne
aad
mov
je
xor
jmp
sub
jb
jecxz
xor
nop
or
leave
add
mov
pop
jge
ret
arpl
inc
mov
hlt
xorb
or
push
je
imul
sub
out
mov
push
mov
jmp
subl
neg
insb
push
dec
add
and
inc
scas
fiaddl
cmp
nop
lret
dec
cmp
fdivrl
hlt
jmp
lods
push
push
jns
shl
or
cs
test
arpl
and
stc
js
insb
mov
sub
rcrl
bound
pop
pop
xor
pop
ret
ds
sar
mov
data16
adc
stc
mov
fistpll
pop
lcall
mov
pop
lahf
pusha
or
movsl
into
dec
lret
jnp
cld
and
or
popa
shrl
jp
das
cmp
add
sub
or
mov
rorb
pop
int3
mov
test
or
and
dec
xchg
movl
faddl
jg
mov
inc
jns
dec
mull
ja
and
repnz
lret
pop
dec
dec
pop
dec
lods
das
mov
fidivrl
or
mov
add
push
insl
test
push
lahf
add
fidivl
dec
push
scas
clc
clc
pandn
sbb
xor
sbb
push
sbb
out
test
adc
les
mov
or
mov
test
and
addr16
fmull
jmp
mov
mov
lock
jmp
mov
in
mov
stos
or
mov
jno
jne
add
mov
inc
push
ds
xor
sub
int
pushf
outsb
cmc
sbb
inc
cs
push
leave
or
jmp
mov
push
lods
fldt
xor
pop
in
mov
pop
jne
js
pushl
add
cld
stos
bound
mov
mov
dec
pop
jae
lcall
pop
fistl
or
and
gs
mov
test
insl
and
aam
dec
sti
xchg
imulb
adc
cmc
aas
push
in
fdivr
jne
lcall
push
test
cmc
ja
into
pusha
lods
jl
push
lock
fs
pop
sbb
mov
adc
or
mov
sti
xchg
sub
or
addb
insl
inc
fs
mov
jne
loopne
sbb
addr16
test
mov
cmpsl
jecxz
lods
adc
adc
cmpsb
jnp
xorl
mov
dec
mov
pop
mov
out
jne
xor
dec
push
mov
xor
push
cwtl
cltd
inc
add
cmp
out
push
jns
neg
popa
and
mov
jb
ficoms
xor
ja
xlat
scas
fldl
fistl
fsubrs
mov
icebp
xor
sahf
lret
pop
sbb
push
xchg
xor
xor
mulb
rorb
ja
lcall
mov
call
fs
xchg
sub
outsl
lret
xchg
xor
sbb
out
sub
cltd
out
movsb
add
ret
dec
mov
test
and
cltd
inc
jo
and
dec
fcompl
push
fisubl
bound
stc
orb
push
in
cmpb
push
aad
pop
sahf
and
js
or
sbb
and
pop
mov
aas
repz
dec
jae
cld
cmpb
mov
imul
filds
adcl
adc
popf
mov
inc
push
jo
push
cmpsl
sbb
and
mov
ja
popf
es
mov
mov
addr16
or
xor
mov
fdivrs
notb
cmp
scas
xchg
add
in
pop
or
xchg
inc
sub
sub
andl
jg
cli
add
sbb
push
adcl
stos
mov
or
loop
inc
sbb
shll
cld
outsb
mov
testl
and
push
xor
push
pop
push
int3
mov
testl
mov
or
lock
mov
jbe
cmpl
pop
mov
popa
out
iret
or
ror
adc
xchg
stos
mov
push
and
pop
dec
xchg
add
cwtl
and
dec
xchg
es
not
or
xchg
pop
xor
pusha
aad
sbb
push
jns
cwtl
inc
adc
aaa
pop
jns
lahf
xchg
mov
inc
fistps
xor
cmp
cmpps
cmp
push
insb
mov
jle
les
call
out
sbb
call
sahf
repz
je
sub
xchg
gs
mov
repnz
sbb
pop
jae
iret
dec
xor
pop
push
add
rep
dec
lret
jno
push
loopne
inc
scas
sbb
aad
sbb
dec
gs
les
push
lods
sub
push
fdivrs
sahf
xor
bound
pop
aas
fsub
pop
sbb
sti
inc
cmp
or
inc
sbb
negl
lcall
jl
mov
pushf
pop
test
xor
cmp
sub
icebp
ja
adc
inc
jo
icebp
xor
jge
aad
mov
movsl
icebp
shlb
mov
pop
popa
addr16
push
jl
dec
adc
std
mov
divl
inc
xchg
sub
mov
and
icebp
adc
ficoml
mov
inc
push
xor
ljmp
sarb
and
mov
enter
jo
stc
lods
jns
dec
je
push
leave
pusha
or
sbb
subb
pop
std
pop
fisubs
push
mov
fadd
push
out
xor
pop
outsl
icebp
push
iret
sub
dec
sub
mov
inc
sbb
imul
sbb
mov
fists
rclb
push
arpl
shl
in
fwait
neg
loope
iret
mov
mov
cmp
add
jnp
je
test
add
jp
aaa
or
and
pop
lcall
jl
faddl
scas
dec
pcmpgtw
push
stos
outsb
cli
popf
mov
fnstcw
jnp
mov
aaa
ja
test
push
insl
jg
fisubrs
xor
mov
neg
rcl
out
popf
or
hlt
aam
mov
push
push
sbb
daa
shlb
pop
xchg
xchg
stc
push
or
cmpb
add
push
dec
test
shlb
aad
stos
icebp
pushf
insb
lock
int3
sub
rcrb
mov
cmp
pop
xor
loope
out
insb
dec
xchg
pop
pop
pusha
xchg
mov
call
adc
daa
mov
lahf
push
push
loope
data16
xor
sarb
cmp
xchg
push
pop
xchg
sub
add
pop
mov
ljmp
fstpt
mov
std
lcall
xor
shlb
call
aam
sub
dec
mov
mov
clc
int
mov
movsl
cld
jno
mov
icebp
dec
mov
ss
or
ss
jmp
icebp
repz
adc
jne
adc
add
xor
cmc
insb
cmp
and
je
xchg
scas
aas
aam
adc
pop
jg
popf
enter
loop
fcoml
rclb
imul
jo
xlat
dec
ficoml
mov
sti
mov
add
or
xlat
pop
mov
lock
mov
sti
mov
mov
xchg
pop
rcll
jnp
push
test
insb
das
mov
pop
int
imul
xor
pop
sahf
insl
ss
jmp
cld
mov
dec
jne
scas
and
lret
dec
movsl
cld
test
mov
xor
out
orl
mov
aaa
stc
push
popa
inc
xchg
popa
repnz
in
cld
movsl
mov
jle
add
rdmsr
dec
sti
testb
jg
cmpsl
or
in
pushf
cltd
cs
nop
in
jge
cwtl
sub
mov
inc
cmc
mov
pop
mov
or
adc
push
mov
or
ljmp
mov
aam
popa
sub
imul
adcl
shlb
jae
xor
dec
push
sub
loopne
sub
cs
out
fdivl
lock
mov
and
mov
push
lcall
ljmp
pop
subb
in
mov
dec
push
adc
out
dec
ja
xchg
sarb
imul
adc
sahf
test
js
push
jno
pop
cmp
adc
insb
outsl
jo
push
insl
in
subb
cltd
je
mov
scas
cmpsl
dec
mov
cld
daa
pop
sbb
push
loopne
jbe
sbb
data16
mov
adcl
inc
push
xor
mov
sub
jmp
xchg
mov
mov
adcl
mov
mov
mov
icebp
cmp
pop
pop
inc
out
stos
shlb
test
xchg
jns
sbb
dec
into
out
mov
icebp
mov
lcall
and
scas
mov
fs
sti
lret
lret
sbb
mov
ret
call
push
xchg
push
xorl
repz
call
sbb
ret
pusha
cmp
or
gs
sub
xor
out
ret
xor
lcall
sub
test
jle
add
outsb
aas
add
mov
roll
mov
or
xchg
jmp
xor
xchg
push
icebp
adc
cwtl
repz
fistpl
fldcw
leave
adc
push
push
mov
fwait
xor
pop
frstor
call
mov
sbb
popl
or
pop
dec
push
sbbl
push
xor
pop
push
sbb
push
add
pop
roll
les
mov
mov
cmp
into
mov
cs
mov
xchg
adc
aad
or
cmp
icebp
xchg
jne
jmp
pop
mov
lret
ja
insl
pop
jmp
add
adcl
pop
das
jecxz
arpl
je
or
cmpb
mov
push
or
xor
sbb
pop
test
sub
into
scas
sub
jmp
sar
mov
loopne
adc
sahf
movsb
out
lret
inc
ja
cs
cmp
lar
mov
js
scas
call
sub
mov
in
sub
mov
mov
mov
or
fistpl
aam
xchg
pop
arpl
xchg
push
mov
orl
add
fwait
push
inc
and
adc
pop
lea
mov
push
xchg
cli
pop
and
popa
adc
outsb
sahf
pop
adc
test
pop
dec
sbb
mov
popa
push
lret
jle
mov
in
fisttps
aad
mov
cltd
jo
jb
inc
imul
dec
pop
lds
mov
cli
jl
push
cwtl
cltd
sub
cmp
cli
dec
adc
xchg
nop
fbld
xchg
loop
jecxz
mov
popf
push
jecxz
push
lods
testb
int3
pusha
and
push
xor
push
xor
mov
jmp
cmp
adc
subl
lea
je
cli
jae
xchg
pusha
cmc
repz
dec
cmpsl
mov
dec
mov
mov
ds
icebp
inc
ja
cmpsb
call
outsl
cmp
add
inc
aad
xchg
pop
rcrl
jg
adcb
shlb
cmp
call
push
push
outsb
jle
jno
call
aad
fs
inc
shrb
and
mov
js
cmp
sbb
xchg
decl
adc
dec
mov
insb
pop
xchg
stos
into
shlb
lods
adc
stc
xor
and
aam
loope
push
jns
cmp
xchg
aas
movsb
mov
roll
pop
or
adc
lods
sbb
hlt
test
cmp
dec
mov
cs
mov
fnsave
mov
xchg
push
loop
repz
and
sbb
mov
cs
int3
aas
shlb
scas
aas
xchg
dec
in
xor
jmp
lods
jge
rorl
jp
xchg
pusha
xchg
sub
mov
notl
bound
and
inc
inc
movsb
adc
cmp
jo
lock
in
jecxz
jl
pop
in
outsb
inc
add
sti
in
inc
dec
inc
aaa
cli
pop
adc
rol
int
aas
shrb
push
loop
stos
inc
repz
mov
sbb
rcll
pop
add
pop
and
into
arpl
ret
out
xchg
fld
arpl
jnp
and
mov
jmp
daa
jbe
jbe,pt
mov
int
push
sub
inc
mov
and
scas
xchg
or
mov
dec
stc
mov
mov
mov
dec
in
popf
clc
or
mov
nop
mov
sbb
sbb
add
adc
dec
sbb
aas
rorb
push
adc
lods
push
fnstsw
call
shll
dec
cld
add
push
mov
adc
mov
push
cltd
insb
pop
dec
das
jmp
cwtl
cmpsb
pop
incl
sar
xor
cmpb
sbb
into
jle
inc
mov
mov
mov
lahf
mov
mov
xor
aaa
repnz
pop
mov
dec
mov
mov
dec
pusha
xchg
jns
rcrb
pop
sbb
xor
xlat
or
movsl
shlb
mov
pop
pop
pop
dec
mov
xchg
fwait
lret
or
xchg
lret
iret
je
das
ds
jnp
xlat
inc
shll
into
mov
mov
imul
pushf
rorl
jns
mov
int3
cltd
mov
jp
push
push
xchg
jno
mov
or
pop
jne
fs
daa
mov
data16
jnp
and
mov
sarl
leave
pop
stc
hlt
add
cmp
inc
inc
ret
dec
outsl
inc
push
mov
mov
and
sbbl
imul
xor
and
push
xchg
data16
pop
cmpsl
sbb
test
into
cmp
loop
xchg
in
mov
xchg
aas
push
scas
insb
xchg
jae
pop
and
daa
xor
aaa
jne
cmpps
push
inc
in
or
jne
jge
push
mov
xchg
lock
fcoms
and
es
dec
mov
ffreep
js
dec
rolb
psadbw
sub
ljmp
and
fs
or
pop
ret
jg
xor
adc
dec
gs
cli
ss
test
adc
xchg
faddl
enter
pop
pop
das
ficompl
std
cmp
mov
ret
leave
pop
ss
pop
and
aad
fstpt
call
sub
repz
test
std
dec
jno
aad
or
xchg
daa
fiaddl
mov
fildll
pop
inc
or
je
and
jmp
sti
dec
dec
aaa
pop
xchg
sbb
lea
and
sub
inc
sbb
data16
dec
inc
insb
sub
mov
push
jae
adc
mov
aaa
ret
mov
loope
cltd
mov
add
repnz
repz
mov
test
pop
add
dec
or
adc
dec
push
and
jp
cmpsb
inc
cwtl
mov
dec
iret
or
addb
leave
jnp
pop
std
lcall
and
arpl
mov
mov
and
mov
jo
loope
shrl
aas
push
fdivp
cs
jbe
cmp
loop
inc
mov
dec
aaa
cmp
dec
test
out
pusha
or
xchg
add
mov
ret
clc
stos
divl
xchg
inc
pop
cli
inc
xor
mov
jne
je
adc
and
mov
mov
lret
out
loope
or
lret
push
popf
rclb
sub
pop
push
outsb
add
scas
pop
cmp
push
arpl
icebp
adc
cmp
jecxz
in
int
sbb
stos
enter
or
dec
push
popa
xor
shll
rolb
mov
mov
scas
pop
add
test
mov
fs
pop
xor
hlt
or
jo
in
lods
adc
fisubrl
inc
sub
mov
cmova
mov
jmp
dec
mov
sbb
lock
ja
dec
clc
push
jno
jp
ljmp
ret
sub
inc
sbb
xor
xchg
xor
pop
and
sbb
loope
sub
jp
sbb
lds
test
pop
mov
cwtl
sbb
mov
shlb
inc
rorb
gs
mov
lahf
sub
cmp
movsb
jns
cltd
test
je
or
sbb
iret
repnz
pop
mov
or
mul
ret
idivb
fnstcw
push
xor
push
cmp
mulb
inc
or
shl
sti
adc
mov
lcall
in
or
ret
mov
cmpsb
mov
and
sbb
iret
les
jae
scas
jnp
adc
outsb
dec
inc
sub
sub
rclw
rorl
lcall
or
mov
ds
mov
adc
mov
mov
jno
cmp
add
sbb
or
sbb
sbb
int
lods
or
mov
adc
sti
and
adc
dec
dec
cs
int
ret
subb
in
or
inc
in
xchg
aad
fdivrl
push
mov
push
adc
in
mov
push
or
lret
xorb
fstl
paddusw
lret
aas
sbb
mov
sbb
mov
rorb
fmull
fmul
pop
push
xchg
mov
jbe
int
outsl
cmp
jb
je
jmp
pop
mov
fisubrl
pop
cmp
push
lock
sub
aaa
jle
notl
and
adc
sub
rcrb
or
mov
cmp
mov
or
jmp
pop
cmc
mov
imul
jnp
sub
xchg
sarl
gs
negl
inc
icebp
fldl
in
in
rorb
mov
repnz
or
push
inc
movsl
cmp
sbb
cmp
daa
ss
insb
test
cmp
sbb
cmpsb
xor
mov
outsb
push
inc
inc
push
rorl
adcl
xchg
movsl
xor
push
lret
and
loopne
adc
xor
or
aaa
and
sub
mov
xchg
pop
add
les
or
cmpsl
jb
aaa
je
inc
pop
push
pop
push
or
and
push
inc
fidivrl
mov
in
popa
inc
push
lcall
jmp
data16
or
popa
jecxz
mov
sub
mov
push
push
push
adc
outsl
inc
or
mov
bound
enter
imul
adc
jle
pushf
push
dec
dec
mov
rorl
push
dec
xchg
sbb
stc
pop
mov
jb
andb
inc
movsl
sahf
xchg
dec
jl
fsubrs
or
pop
sub
fdivr
mov
mov
mov
fcoms
arpl
jno
jmp
fcmovnu
jo
rolb
aam
cs
or
xchg
fidivl
jl
es
int
aad
xchg
jns
xor
add
int
mov
inc
sarl
shlb
add
dec
cwtl
inc
inc
push
pop
pop
add
js
stos
mov
iret
add
enter
cmp
jnp
xchg
cmp
ret
dec
cld
push
or
call
je
sbbl
das
lret
cmp
rorb
pop
stos
jae
test
xlat
mov
mov
adc
pop
arpl
xor
hlt
ljmp
aam
cmp
xchg
or
aaa
or
pop
or
ljmp
daa
ds
je
adc
fstpt
sub
push
mov
fwait
jbe
shlb
mov
ret
mov
push
jle
mov
inc
inc
sbb
testl
fsub
adc
popf
movsb
sub
lods
idivb
test
adc
cli
mov
jge
mov
les
pop
movsl
std
jmp
std
inc
inc
sbb
fimull
pop
adc
sar
ret
ljmp
std
xchg
insb
mov
lods
inc
insb
mov
sub
cmc
jg
sbbb
cmp
or
int
lcall
xor
dec
ss
pusha
sub
subb
repz
xchg
testb
nop
xchg
push
pop
jnp
add
cmp
out
pop
aas
mov
mov
add
cmp
sbb
rclb
xchg
cltd
shll
pop
sarb
xchg
xchg
into
popa
les
cmp
mov
js
or
test
dec
daa
outsb
repnz
mov
fisubrl
outsl
push
pop
mov
sub
push
mov
xchg
push
cmpsb
mov
pop
pop
ficompl
xchg
les
cmp
lods
mulb
or
std
flds
rcrb
mov
or
loope
sub
add
sbb
or
dec
call
jg
sbb
or
xlat
sbb
stc
sub
movsb
jne
cld
int3
jmp
cmc
lods
pfsub
xchg
jae
popf
in
scas
pop
lahf
adc
inc
lods
jl
pop
and
and
outsl
xchg
shl
sbb
mov
and
popf
cmp
call
lea
repnz
test
into
sti
inc
xchg
or
sbb
popf
push
mov
out
ja
rcrb
add
adc
jae
sti
jl
add
mov
mov
les
mov
aas
or
mov
outsb
je
negl
add
lods
inc
push
cltd
repnz
mov
mov
nop
jne
in
insb
xor
popf
adc
das
xlat
loop
or
mov
jbe
adc
es
out
lea
jno
mov
sbb
int3
add
shlb
out
mov
cmp
enter
lcall
js
cwtl
jb
xlat
rcrb
mov
sub
push
push
cmc
pop
push
or
push
mov
nop
ror
rorb
or
mov
ljmp
dec
lock
mov
adc
ja
sub
sub
sarb
pushw
popf
push
jb
cwtl
lods
xchg
mov
add
fldcw
pop
or
sti
inc
nop
out
pop
mov
nop
or
pop
cmp
movl
xchg
jbe
push
or
fdivp
into
iret
cmp
or
add
xchg
mov
insl
xor
fistl
sahf
add
stos
hlt
fnsave
movsb
or
xor
out
out
sbb
imul
aam
mov
mov
cmpsb
sub
add
enter
in
mov
out
jbe
inc
inc
mov
in
jp
scas
ss
mov
push
cmp
lock
shr
arpl
inc
int
and
fdivrs
aaa
push
cmp
mov
aam
popl
in
mulb
clc
fnstenv
cmp
scas
cld
sbbb
fisubrs
push
pop
outsl
dec
push
clc
cli
add
cmpl
pop
imul
xchg
mov
push
testb
mov
jecxz
arpl
cmp
push
xor
arpl
pop
or
fiaddl
xor
mov
jnp
xchg
dec
cmp
push
insb
pushf
lahf
sub
stos
es
aam
xchg
insl
push
mov
pop
or
mov
insb
jbe
data16
in
sti
mov
xor
push
cmpsl
mov
insb
outsb
dec
cmp
repnz
clc
dec
or
lcall
mov
mov
shl
daa
mov
add
pop
xlat
rol
xor
mov
mov
mov
outsb
shr
stos
mov
xchg
adc
mov
pop
cmp
aam
push
mov
push
aam
and
xchg
pop
out
rcrl
rorl
xor
push
add
imul
sarb
cmp
mov
out
in
call
flds
popf
jp
jmp
cmp
cmp
jmp
xchg
add
lahf
into
and
cmp
mov
imul
dec
lret
movsb
adc
or
sahf
push
mov
icebp
shlb
inc
pop
sbb
pushl
pushf
pop
arpl
xor
inc
jge
iret
inc
in
loop
aam
add
push
pushf
jp
push
pop
cltd
std
push
dec
scas
fdivs
shr
inc
add
int
cmp
inc
ja
xlat
add
xor
subb
sub
fcoml
les
sub
lea
pushf
sub
add
pop
add
push
iret
lahf
mov
adc
xor
pop
stos
mov
dec
mov
jne
mov
xor
xchg
jns
dec
dec
mov
leave
repnz
cmpsb
push
fadds
popa
fisubrs
jne
mov
or
sub
or
mov
dec
shlb
xor
xchg
fisubrl
movsl
lds
and
rcll
jge
repnz
lret
xchg
addr16
dec
adcl
pop
pushf
les
sub
fwait
xchg
inc
enter
bound
je
js
mov
clc
pop
rcrl
cmpsl
dec
mov
out
push
iret
mov
aad
hlt
dec
add
out
gs
push
jmp
int3
stos
rcr
hlt
jecxz
dec
pop
in
icebp
xchg
dec
popf
loope
call
jle
cmp
sub
into
scas
xor
add
fldl
addr16
mov
imul
jbe
enter
repz
jbe
outsb
lock
jne
enter
pop
or
sahf
test
pop
pop
mov
xchg
cld
xlat
mov
dec
xchg
jae
ficoml
mov
push
push
in
jnp
jp
xchg
in
mov
roll
popf
les
imulb
pop
loopne
or
adc
or
pop
imul
ret
lcall
cmp
aaa
mov
push
xor
fiadds
loopne
inc
fdivrl
lret
mov
cmp
test
imul
inc
mov
out
js
pushl
add
dec
imulb
adc
lock
cltd
in
loop
mov
xlat
fmull
popf
fdivl
ja
bound
xor
xor
mov
movsl
lcall
mov
fwait
mov
and
and
cmp
mov
nop
adc
add
out
push
lahf
cmpb
add
push
hlt
fisubl
pushf
loop
cmp
mov
jecxz
jmp
xchg
adc
pop
or
adc
cmc
imul
in
xor
and
pop
mov
xor
pop
mov
jo
lods
jmp
fimuls
pusha
pop
inc
push
xlat
or
mov
add
shll
ss
jo
sbb
jecxz
out
pop
dec
das
imul
fiaddl
mov
rcll
and
and
repz
sbb
leave
or
aad
sahf
push
cmc
mov
mov
por
cmp
and
push
mov
push
idiv
sub
mov
cmp
cmc
es
mov
ds
pop
icebp
sub
enter
sarb
stos
xor
insb
push
sub
inc
out
sbb
into
popf
stc
xchg
cmp
jae
jmp
mov
cmp
xchg
movsb
les
stc
push
pop
and
mov
aad
cmp
mov
imul
js
dec
and
arpl
pop
adc
fcoml
enterw
int
dec
movsb
cmp
and
sbb
inc
or
ljmp
out
mov
jg
adc
in
pop
dec
fs
fisubrs
test
jne
jns
fistps
pop
out
pop
jne
inc
lret
xor
mov
cs
mov
mov
and
xchg
add
pop
pop
cmpsl
mov
iret
xor
lahf
or
leave
nop
loope
cli
pop
cmp
inc
loopne
mov
inc
dec
cwtl
pusha
out
jge
cli
mov
pop
je
lret
mov
int
xchg
je
mov
jns
jne
push
xchg
adc
adc
jecxz
pop
aas
pop
cs
mov
ret
insb
mov
push
subl
pop
pop
mov
mov
mov
xor
les
dec
popa
dec
adc
fwait
loopne
pop
shrl
cmpsl
sub
out
hlt
movsl
jmp
popa
lods
in
popa
dec
push
push
daa
pusha
mov
jle
inc
jle
pop
jle
fidivs
push
js
jecxz
xchg
cmc
fldl
call
xor
sti
adc
adc
lea
out
lock
cmp
dec
test
sarb
cli
in
out
xor
push
int3
pop
xchg
jge
fidivrs
xor
icebp
nop
aam
mov
sbb
xchg
jns
call
jge
sub
mov
roll
lds
aad
push
xchg
test
enter
add
shr
lods
add
int
loope
inc
insb
mov
jge
out
jne
in
sbb
mov
cmp
ror
jae
in
sbb
sbb
and
lahf
mov
inc
mov
dec
popa
and
push
fsubs
mov
sbbb
xor
xor
push
in
xchg
xchg
mov
adc
jle
add
and
fcoml
loop
xchg
and
loop
push
pushf
or
jo
xchg
rcl
out
scas
mov
sbb
fimull
and
push
shl
repnz
push
mov
frstor
mov
mov
cmp
jno
jo
es
dec
xchg
mov
test
stos
and
dec
mov
jmp
xchg
mov
dec
or
mov
mov
subl
add
xchg
loopne
mov
pop
jg
ret
xchg
clc
sahf
pop
outsl
push
mov
jle
inc
insl
insl
mov
cmp
mov
push
sbb
ja
aam
inc
push
jo
mov
push
nopl
movsl
dec
pop
fcomi
inc
sub
cmpsl
mov
cwtl
cmpsb
mov
or
mov
out
test
xchg
pop
mov
push
nop
xor
xchg
xchg
jecxz
pop
inc
loop
xchg
push
les
fcomps
inc
cmp
loope
xlat
dec
sbb
std
inc
inc
pop
into
mov
dec
test
cltd
ja
test
fnstsw
push
or
dec
pushf
mov
popf
adc
addr16
add
stc
fstpt
push
test
and
mov
test
int
outsl
sbb
jbe
jp
and
mov
xor
xor
ds
and
popl
adc
inc
ds
push
and
inc
sub
lahf
pushf
addb
clc
sub
push
je
icebp
xchg
sub
bts
or
fstpl
push
mov
inc
lock
popf
fldenv
js
test
rcrb
push
mov
clc
std
dec
inc
xchg
loope
adc
mov
movsb
push
jo
cmp
sbb
mov
and
nop
sub
mov
mov
mov
pop
jp
in
into
or
int3
or
mov
out
push
dec
mov
sub
rclb
xor
adc
jge
cli
push
inc
cmp
xor
pop
cld
cli
ljmp
ret
dec
data16
jp
outsl
insb
rcr
mov
dec
fiaddl
xor
imul
les
ja
aas
mov
mov
xchg
xchg
xor
cmp
pop
aam
neg
aam
imulb
jno
mov
push
insl
jo
sbb
pop
pop
push
push
xchg
orl
mov
mov
fwait
lret
stos
push
pop
movsl
sti
loop
mov
jno
dec
ljmp
lods
test
pop
dec
sbb
hlt
aad
rcrb
dec
dec
cmp
jle
ficompl
xchg
mov
stc
add
push
in
bound
nop
pusha
mov
ficoms
mov
inc
jbe
pop
adc
lea
fdivs
add
sahf
add
pusha
cmp
je
mov
movl
mov
popf
decl
add
sub
xor
push
jmp
ret
dec
sbb
jbe
lret
mov
add
lret
clc
add
int3
dec
mov
xchg
jge
sub
arpl
test
add
mul
add
push
mov
xchg
ret
or
jge
bound
pushl
push
dec
lock
es
test
inc
lahf
mov
insb
xor
adc
push
test
rcrl
pushl
adc
xor
cmp
scas
mov
push
or
ret
icebp
pop
mov
cmpsb
add
imul
lods
icebp
lods
inc
fsubrl
repz
scas
add
inc
mov
cmp
pusha
pusha
xchg
add
mov
inc
and
insb
das
xchg
mov
and
sub
loope
or
jmp
add
cmp
cmp
and
adc
mov
mov
testb
or
xchg
xchg
into
jnp
xor
mov
test
and
pop
mov
loop
cwtl
push
sbb
jnp
sub
xor
jo
sub
jecxz
adc
mov
js
push
mov
lret
movsb
out
arpl
mov
mov
add
stos
mov
mov
hlt
push
mov
pusha
and
mov
push
inc
xchg
adc
pop
cmp
cmp
test
inc
push
nop
adc
test
stos
mov
rcr
mov
jle
or
clc
loop
or
pop
add
or
mov
daa
daa
popl
xor
pop
cs
insl
les
sti
out
or
dec
sub
sti
pop
outsb
xor
push
cmpsl
mov
xlat
mov
ljmp
and
push
stos
mov
push
jbe
out
out
push
gs
scas
push
daa
push
popf
cli
cmp
lcall
movsb
xchg
cli
inc
mov
out
jge
rclb
and
add
das
cmpsb
push
test
push
cwtl
aad
jmp
dec
cld
mov
push
sub
or
jl
test
pushf
lcall
sub
dec
and
pop
pop
add
scas
inc
inc
dec
inc
std
jnp
pushf
add
adc
mov
insl
cld
pop
fst
mov
xor
arpl
sub
push
out
adc
pusha
dec
mov
repnz
pushl
dec
adc
mov
jae
aam
idivb
aad
sub
addr16
imul
orl
andb
das
jbe
outsb
mov
pop
pop
test
pusha
push
das
push
jecxz
popf
jecxz
stos
mov
aas
sbb
jno
lcall
fs
loopne
out
mov
add
sti
push
add
dec
sbb
xor
stc
adc
test
fstps
jo
jno
mov
pop
test
and
push
sbb
sbb
jo
push
sub
cs
mov
pusha
stos
enter
jg
mov
repnz
or
loop
cwtl
in
jle
in
adc
lret
xchg
dec
dec
icebp
ror
push
mov
pop
mov
inc
cs
dec
notl
pop
jp
sti
shl
push
and
cmpsl
rclb
addr16
stos
aam
outsb
mov
mov
pop
pop
out
imul
mov
mov
inc
aad
cmp
out
imul
cwtl
clc
hlt
jle
test
dec
xor
cmp
mov
or
mov
push
mov
inc
cmp
popa
push
insl
cmp
pop
roll
fistpll
sbb
repnz
dec
mov
insl
pop
mov
sub
les
sbb
leave
sub
pop
sti
rorl
sbb
mov
cmp
loope
dec
andl
dec
lods
mov
or
pop
addb
addr16
out
pop
test
es
scas
cmpsb
push
mov
hlt
repz
inc
lods
es
daa
aas
addr16
mov
xchg
mov
mov
pushf
adc
add
rol
arpl
in
xlat
jns
lods
adc
or
pop
inc
out
inc
and
inc
les
xor
jnp
xchg
xor
inc
xchg
je
pop
add
lods
test
pushl
xchg
xor
jmp
imulb
mov
cmp
and
and
jge
movsb
aaa
stos
mov
lahf
daa
mov
sbb
push
cwtl
push
jmp
clc
inc
and
pusha
sub
sahf
mov
or
or
icebp
mov
enter
xchg
jp
push
mov
add
sbbb
mov
adc
fwait
mov
fs
movsl
sub
aam
inc
cmp
js
or
add
cmp
lds
out
mov
mov
dec
ss
cmp
dec
sub
mov
jp
jae
and
in
dec
or
into
inc
cmp
pop
push
pop
cmp
sbb
xlat
dec
fucom
push
mov
push
out
hlt
push
jnp
mov
test
push
in
sbb
adc
pop
inc
rcrl
mov
sbb
cmp
gs
cmp
mov
mov
fdivrl
lods
cmpsb
ja
je
cmp
mov
mov
stc
cmp
push
xor
popf
iret
ret
sahf
and
in
inc
add
jbe
rcrl
sub
mov
mov
stos
imul
mov
and
lahf
ss
pop
pop
or
pop
push
inc
mov
push
cmpl
xchg
ja
sbb
pop
repz
push
push
mov
jo
pop
fnstenv
push
and
call
and
stos
xor
sub
push
or
cwtl
add
cmpsl
pusha
push
fimuls
outsl
mov
popf
fstpt
cmpsb
push
fs
push
jmp
jne
mov
inc
jbe
inc
pop
hlt
test
popa
ds
setns
ljmp
sbb
xor
jnp
scas
jecxz
and
clc
stos
loope
dec
test
cmp
ds
and
cmp
idivb
imul
push
aad
mov
aas
cltd
sub
mov
pop
fidivrl
add
fcoml
data16
or
int
cmp
push
leave
scas
mov
jp
push
jg
pushf
inc
scas
rorb
sub
cmp
lods
ret
in
jp
inc
clc
in
sahf
add
cwtl
dec
test
int
clc
lods
or
add
iret
cmp
cmpsb
pop
pop
jmp
bound
out
lock
inc
push
cmp
and
cmpsl
not
xchg
movzwl
push
pop
dec
sub
aad
mov
out
sbb
pop
addl
xchg
andl
stc
aad
push
xlat
pushf
push
das
mov
jnp
and
push
sbb
mov
lods
push
cld
pcmpgtd
sub
test
inc
std
ret
add
push
int
mov
aas
repz
jecxz
mov
les
mov
dec
ljmp
xchg
insb
dec
cs
mov
jmp
decb
mov
inc
loop
pop
mov
jmp
inc
pop
cmp
ret
pop
popf
arpl
push
sbb
fbstp
dec
idivb
popf
mov
push
incb
mov
rolb
inc
inc
and
out
scas
jl
cs
ljmp
dec
adc
cmc
lods
add
xchg
les
lret
sti
adc
lcall
sar
or
dec
dec
imull
sbb
fs
les
fs
stos
scas
fisubs
cmc
cmpb
loopne
inc
cld
ja
test
sarl
jmp
es
dec
ret
push
imul
add
shrl
iret
fbstp
mov
pop
int3
pushf
repnz
lock
stc
and
ljmp
lret
or
push
jg
and
mov
jno
int
mov
xor
out
pop
js
sub
mov
dec
push
mov
jne
add
out
repnz
jnp
pop
mov
je
lock
fcmovnbe
or
pop
jl
xchg
jle
push
add
clc
imul
pop
pop
clc
jno
jne
out
pop
jns
icebp
int
iret
xchg
bound
mov
call
push
int3
mov
sbb
inc
xchg
popa
dec
xchg
push
or
mov
jecxz
clc
add
int3
nop
sbb
mov
out
mov
loopne
aas
int
mov
or
dec
insl
shrb
ret
inc
inc
scas
ja
sub
daa
std
stos
ret
fwait
pop
jae
movsb
stos
adc
and
mov
roll
and
testl
sbb
outsb
add
add
mov
pusha
push
js
lcall
or
xor
mov
icebp
sub
mov
shll
sub
sub
push
mov
mov
and
mov
es
clc
mov
aas
xchg
pusha
stc
sub
push
clc
mov
mov
loopne
js
imulb
push
lahf
adc
xlat
push
stos
idiv
fldpi
add
std
cmc
clc
andb
hlt
test
dec
arpl
pop
insl
hlt
ret
loope
rcrl
imul
aad
xor
je
adc
outsb
aad
inc
jo
push
pop
rcrb
mov
cmp
rorb
add
iret
sub
mov
jns
mov
and
mov
push
mov
and
and
cli
cmp
icebp
mov
mov
fmul
lret
sub
pop
xor
mov
jnp
aam
and
fimull
arpl
test
insl
mov
imul
aam
popf
push
gs
jle
and
andb
mov
sti
xchg
rclb
xchg
jne
fidivl
js
or
popa
sub
into
jne
jmp
jle
shrb
mov
call
mov
and
or
dec
mov
mov
jo
fmulp
inc
add
sub
ljmp
sub
inc
xchg
cli
shrl
sbb
and
sub
adc
ret
fs
fldl
cld
scas
dec
sub
dec
mov
sbb
adc
or
imul
sub
xchg
or
lock
daa
cltd
sub
jnp
call
inc
les
jp
hlt
sub
jg
mov
mov
rcrb
and
xchg
push
lods
sbb
push
andb
loope
std
sub
sahf
jnp
push
mov
pop
lds
fidivs
and
mov
hlt
mov
stc
dec
fwait
jecxz
xchg
inc
mov
adc
cli
gs
mov
divl
jle
push
outsl
jmp
stos
stc
cld
xor
aad
outsl
adc
sub
rclb
xchg
clc
addl
ret
dec
cmp
lcall
hlt
out
outsb
scas
or
dec
dec
jnp
and
mov
into
inc
push
or
sub
cmc
fldenv
nop
jb
mov
sahf
inc
xchg
jno
pop
pushf
test
stc
ljmp
pop
shr
xor
mov
scas
test
adc
jl
xor
aas
ss
dec
jmp
repz
dec
shrl
int
fbstp
outsb
scas
std
adc
add
lahf
lret
cld
adc
sub
sub
jns
aam
xchg
icebp
imul
shrl
sub
inc
mov
ljmp
in
xchg
mov
daa
mov
mov
imul
out
inc
mov
ds
cmp
pushl
test
nop
out
xor
dec
or
mov
test
push
das
cmpsl
sbb
pusha
jmp
fsubrl
jb
test
xor
sub
in
inc
xchg
adc
lods
mov
push
dec
cmpsb
xor
push
aad
aad
lock
popa
mov
sbb
jle
pusha
cs
ds
dec
cs
nop
enter
jp
mov
sbb
mov
outsb
mov
add
imul
mov
dec
lods
jbe
jecxz
popf
cmpsl
sbb
sbb
inc
jl
adc
insl
test
xor
icebp
mov
nop
xchg
pop
out
dec
adc
js
pushf
bound
jp
xchg
ret
lret
pop
jbe
push
xorb
enter
jmp
add
mov
imul
mov
or
mov
pop
in
push
mov
shl
xchg
lds
push
into
adc
sub
mov
jmp
mov
adc
jo
xchg
cmp
sub
in
pushf
icebp
and
pop
mov
pop
leave
sub
orl
xchg
cmp
fsubrs
add
jb
fwait
mov
mov
orb
lds
xor
pop
int
lea
mov
push
xorl
jle
and
loope
das
in
push
cmc
add
mov
hlt
or
cmpsb
cmp
es
loope
enter
ds
ret
jmp
sti
pop
xchg
pop
push
outsl
call
cli
std
mov
movl
adc
add
push
sub
mov
sub
inc
push
loope
stos
aam
dec
and
outsl
sbb
cmp
test
xor
lcall
out
xlat
jecxz
test
lret
or
adc
leave
inc
mov
js
in
adc
ja
int3
lods
iret
inc
mov
cmp
hlt
lcall
sbb
sbb
loopne
hlt
movsl
bound
data16
cmp
sub
inc
xchg
sbb
icebp
lods
and
test
add
cmp
dec
rclb
in
shlb
test
mov
or
or
push
jb
push
test
test
adcb
fwait
mov
sbb
popf
or
scas
push
cmp
test
ja
mov
loopne
or
inc
sbb
add
jno
test
sbb
divb
mov
jbe
sbb
jo
addb
and
es
fildl
orl
adc
or
xor
cs
into
add
mov
mov
xchg
sub
dec
sub
mov
xor
repnz
fiaddl
gs
dec
cmpsl
cs
mov
fdivs
push
dec
or
jo
jnp
xchg
fs
xchg
rorb
xchg
lret
mov
outsb
pushf
imull
in
and
fsubl
roll
jo
arpl
sbb
subl
jecxz
sahf
xchg
cmp
leave
test
daa
cmpsb
gs
sub
repz
fisubs
and
jecxz
push
lret
mov
cmp
lods
divl
push
sbb
gs
enter
jne
adc
sahf
test
xchg
adc
xchg
adc
mov
es
add
loop
shll
push
inc
dec
dec
push
dec
xchg
mov
decb
sbb
mov
jns
ds
jne
xor
xchg
adc
icebp
inc
xchg
jns
or
aaa
aaa
aam
ljmp
out
out
push
xchg
ret
ret
add
jno
roll
movsl
fstps
repz
adc
adc
js
cmp
cli
das
mov
inc
inc
cmp
shll
rolb
or
jp
loop
into
ljmp
test
ljmp
add
push
jbe
idivb
inc
std
stc
outsl
nop
adc
jecxz
inc
mov
imul
jle
push
inc
fldenv
mov
xchg
cmp
inc
and
mov
scas
ret
popa
cltd
imul
out
fs
out
inc
decl
adc
ret
arpl
mov
jmp
mov
mov
xor
cmpsl
push
je
mov
add
and
xchg
jno
leave
cmpsb
imul
sbb
sbb
pushl
jg
adc
push
mov
mov
or
add
mov
jae
cli
lds
cwtl
cwtl
lret
add
push
sbb
jl
int3
pop
mov
mov
out
sub
sbb
jl
adc
or
mov
fsubs
pop
ret
mov
mov
fldcw
sub
adc
mov
pop
loop
iret
movsb
xchg
iret
sub
lcall
sub
cmp
mov
ret
fiadds
xchg
loopne
fimuls
jl
sbb
fbstp
movsb
jmp
lret
fsubs
pop
aas
cli
sbb
xorl
inc
incb
jno
jno
jp
stos
dec
inc
mov
jae
mov
sahf
in
or
adc
aad
jae
cs
dec
gs
clc
cmp
bound
movsl
ljmp
popf
push
sahf
jp
mov
aaa
pop
andl
push
add
fistpll
stc
shrl
stos
cmp
inc
inc
jmp
pushf
dec
or
mov
xchg
push
mov
outsw
mov
into
lock
xor
out
mov
push
mov
cltd
dec
out
repnz
add
mov
add
jb
movsb
decl
xor
mov
sbb
mov
mov
mov
and
pushf
loop
addr16
jns
out
bswap
ret
gs
leave
pop
stos
aad
mov
push
jno
jg
xlat
adc
adc
xor
repz
aaa
xchg
jns
sub
cmp
mov
dec
mov
pop
pop
fdiv
dec
cmpsl
dec
pop
dec
push
jecxz
pushf
mov
adc
cs
mov
iret
bound
mov
in
cld
shrl
mov
jb
xchg
aaa
push
das
ret
orb
dec
test
or
xchg
rcrl
jg
xchg
out
loop
scas
add
cmp
and
pop
mov
cmp
cwtl
adc
loopne
fisttpll
repnz
out
cmpsl
or
test
add
fwait
cmp
mov
ljmp
push
mov
sub
idivl
add
push
out
adc
pop
dec
fsubp
jmp
lahf
int
sub
cwtl
add
add
xor
cmp
xor
into
bound
xchg
arpl
in
inc
dec
push
lcall
mov
gs
shlb
cmp
pop
pusha
sub
xchg
test
cli
call
mov
pop
dec
and
mov
push
out
and
or
dec
cmp
push
ffree
xchg
lret
pop
icebp
andl
pop
sbb
cmp
sub
add
lcall
enter
out
cmpsb
iret
jo
in
mov
sub
pop
aas
outsl
imul
or
push
adc
lds
mov
jne
add
inc
push
or
in
jecxz
das
out
sbb
aas
or
stc
mov
imul
inc
cld
rcrl
lret
dec
adc
lret
push
imul
bound
inc
add
cmc
sub
inc
inc
cmc
lods
ffree
mov
or
pop
rcll
pop
and
ljmp
out
inc
jae
repnz
jnp
sbb
push
sub
ss
gs
out
subl
mov
and
scas
shlb
repz
xor
fidivl
sbb
mov
mov
aaa
xor
es
outsl
shrl
mov
xchg
jbe
pop
in
push
movsb
mov
push
dec
add
xor
jge
lock
notb
lock
cmp
sbb
test
cltd
sbb
fs
jne
sub
popl
pop
push
into
jp
add
mov
les
std
rcll
add
lahf
sub
stc
and
addl
in
mov
add
adcl
insl
pusha
nop
mov
sub
pop
pop
mov
or
fcmovnu
scas
iret
mov
jp
mov
cmpsb
mov
stc
sahf
pop
gs
je
adc
lahf
movsb
hlt
xchg
je
cltd
jb
out
mov
push
sahf
xchg
in
pop
mov
mov
xchg
vmulsd
pop
push
out
mov
stos
fnstsw
jnp
jmp
push
jbe
dec
sbb
insl
enter
pop
add
mov
xchg
mov
add
movsb
ja
jbe
pop
fwait
inc
pop
xchg
xor
inc
shrb
sbb
data16
out
inc
inc
cmpsl
dec
aaa
inc
or
out
and
cmp
jnp
jbe
push
cs
jmp
lds
bound
dec
dec
mov
mov
imul
ret
push
jns
pop
push
jbe
inc
pop
shlb
gs
sbb
jnp
test
sbb
mov
push
test
push
icebp
in
xor
or
dec
jno,pn
stos
ds
pop
and
sbb
ljmp
sbb
ret
out
lret
sti
sbb
shr
and
ds
or
lea
xchg
out
mov
mov
xchg
inc
repz
loope
icebp
aad
sub
sahf
dec
lods
call
sbb
or
movl
cmp
pop
push
adc
pushf
mov
shl
sbb
add
mov
xor
pop
or
pop
loope
pop
decb
dec
sahf
pop
jb
mov
xor
add
divb
pop
stc
movsb
mov
mov
sub
xchg
sbb
inc
push
mov
mov
and
ja
fmuls
and
sub
push
push
jns
pop
dec
hlt
sub
jle
in
cmpb
xchg
mov
xchg
xor
fcomps
mov
jp
mov
hlt
sahf
cmc
stos
mov
lea
xor
or
cmpsl
xor
add
arpl
inc
roll
adc
adc
std
xor
sub
mov
pop
push
mov
xchg
lret
pusha
faddp
ret
movsb
xchg
shr
and
jb
push
pop
in
mov
inc
pop
adc
xchg
pop
in
je
mov
adc
sbb
jb
fnstsw
stc
and
mov
xchg
inc
test
mov
dec
xchg
xchg
adc
and
adc
pop
test
test
addr16
jge
adc
ret
xchg
insb
add
dec
and
sahf
es
fucomi
sbb
aad
bound
sbb
cmc
xor
sets
sub
inc
add
xchg
pusha
scas
mov
dec
xchg
adc
cwtl
les
enter
enter
enter
mov
decl
jmp
adc
decb
or
lods
sbb
lds
sub
dec
stos
sahf
push
mov
xchg
js
shlb
adc
shll
ror
out
or
push
adc
sub
inc
inc
dec
fisubrs
hlt
mov
popf
fadds
inc
inc
mov
and
enter
lret
aaa
pop
psrld
mov
cmp
and
mov
stc
dec
popf
cli
aas
lods
add
push
sbb
mov
call
or
sub
cmc
shl
xchg
jnp
cld
lods
pop
bound
jle
gs
and
nop
lret
and
fcompl
inc
inc
xchg
fidivrs
ljmp
pushf
mov
shll
cmp
jecxz
mov
sub
ja
xchg
lock
xchg
movsb
scas
push
rorl
mov
jae
dec
jbe
repnz
stc
fwait
rcll
test
mov
cmp
xor
sti
mov
dec
add
cmp
sub
int3
mov
dec
out
out
movsb
dec
sti
leave
rolb
xor
iret
cmp
out
cwtl
cmp
jle
lods
jge
mov
mov
mov
add
fs
sub
inc
in
decl
sbb
out
fcomip
jl
test
sbb
sbb
out
xchg
sub
ficompl
mov
out
xor
ja
sarb
pop
out
sbb
pop
sarb
mov
stos
or
popa
xor
insl
dec
mov
cvttps2pi
push
fwait
add
stos
data16
pushf
iret
xchg
mov
push
es
xchg
stc
or
pop
pop
mov
test
pusha
pop
sub
loop
fidivl
push
lock
sbb
inc
popf
mov
loop
nop
push
jmp
loop
divl
mov
dec
adc
je
hlt
test
push
fisubl
mov
inc
cmp
adc
popa
mov
insb
sub
push
icebp
push
sti
les
xor
adc
cmp
test
call
outsb
inc
data16
mov
inc
or
xor
iret
sub
push
push
mov
jle
mov
jb
mov
push
test
push
lcall
mov
push
gs
mov
out
shrl
cmpsl
test
dec
je
negl
ret
mov
xchg
mov
cmpsb
shl
mov
pop
lahf
sti
ret
xchg
imul
in
jae
xor
push
mov
mov
jo
xor
add
daa
pop
cmp
fcmovu
jl
cmp
pop
xchg
jno
fwait
mov
loopne
lret
ss
andb
dec
daa
iret
mov
pop
cmp
in
jcxz
in
pop
outsl
push
pusha
jle
in
mov
fs
jecxz
or
sbb
sub
mov
shlb
sub
icebp
aam
jle
jno
sbb
mov
push
fisttpl
aam
adc
shrb
adc
out
jg
dec
xor
pop
bound
sub
sub
xlat
mov
jb
ret
les
xchg
aas
sbb
movsb
mov
push
aas
lea
xchg
xor
push
lods
cmp
scas
sbb
shl
inc
push
jno
xchg
sbb
sbb
cwtl
ret
shl
xor
jmp
xor
das
mov
pop
push
push
repnz
repnz
insb
xlat
in
mov
inc
inc
sbb
stc
jbe
jne
fldenv
loope
jne
mov
mov
and
adc
mov
fldt
push
nop
mov
lahf
out
sbbb
fs
xor
nop
fidivrl
mov
push
das
dec
mov
stc
mov
out
fcoml
ljmp
mov
sub
pop
or
sub
sahf
cmpsb
mov
xor
sub
push
xchg
dec
add
xor
cs
std
out
xchg
sbb
or
rcll
pop
test
fwait
movsl
jae
mov
call
rcll
jl
je
pushf
xchg
pop
and
out
sub
mov
test
mov
in
adc
inc
adc
push
mov
jg
orb
jp
mov
insb
cld
push
stc
mov
in
xor
xchg
mov
pop
adc
je
sahf
adc
sub
push
xor
scas
sahf
fstpt
daa
popf
and
test
mov
adc
jbe
mov
sbb
jns
xor
xor
add
sarb
push
cld
popf
pop
std
dec
xchg
mov
jmp
mov
js
pusha
jg
mov
ret
int3
xor
cmp
imul
das
aaa
pop
insl
lea
cltd
outsb
jecxz
sbb
clc
ja
fnstsw
jg
pop
xchg
jl
mov
pop
mov
inc
mov
das
xchg
pop
cmp
add
mov
movsl
ficoms
cmp
and
leave
stos
mov
push
test
xor
adc
pop
daa
or
or
into
mov
push
push
int
iret
stos
lret
lret
jmp
into
clc
sub
testl
mov
cli
xchg
sbb
cwtl
lods
pop
or
cmp
cli
push
xchg
aam
test
or
movsb
inc
jb
andb
xchg
sbb
enter
outsl
addr16
dec
sar
imul
xchg
gs
or
mov
add
and
out
push
aaa
pop
ljmp
sub
mov
mov
pop
jo
xchg
stos
mov
mov
jo
in
fdiv
dec
mov
faddl
or
mov
cmp
cmp
sarl
xor
clc
dec
dec
cmp
mov
xchg
push
fwait
cmpsb
repnz
adc
scas
lods
pop
mov
dec
ja
es
je
stos
mov
scas
gs
es
sbb
rcll
pop
add
pop
mov
or
jae
xchg
outsb
inc
mov
loopne
or
fcom
mov
fistl
lods
loop
js
mov
inc
shl
daa
and
fstl
adc
or
mov
inc
inc
fiaddl
lret
out
push
lret
sub
push
jge
idivl
ret
ljmp
inc
jle
lock
repnz
test
cmp
subl
lret
imul
xor
std
repz
or
adc
in
ja
icebp
repnz
scas
clc
or
jne
mov
idivb
insl
mov
sub
cmc
sbb
cli
mov
stos
rorl
repnz
notb
les
pop
add
shl
push
push
pop
test
xchg
scas
nop/reserved
stos
cltd
insl
push
push
mov
adc
cmpb
sub
xor
add
mov
or
sbb
mov
mov
data16
repz
xor
jmp
sub
cld
jne
sub
cmp
ret
addl
adc
jo
xchg
rcrl
fstpl
xchg
pop
add
jne
lods
jns
mov
stos
int
mov
or
sbb
jno
mov
fwait
mov
popf
fcompl
push
lea
dec
out
mov
outsl
inc
repz
in
fbld
adc
cld
stc
xlat
jns
movsb
out
out
outsl
ss
pop
and
cmc
fisubl
pop
test
pop
sub
fiadds
sbb
push
push
iret
mov
mov
aam
mov
cli
inc
stos
xchg
rcrb
test
lods
test
sbb
hlt
outsl
cmc
arpl
and
adc
pop
add
and
mov
cwtl
cmpsb
leave
out
add
fwait
loope
sarb
cmpsl
andb
jmp
cmp
mov
xchg
sbb
mov
inc
jne
mov
adc
int3
scas
push
jg
rcl
shlb
push
fisttpll
jnp
test
psubq
add
mov
xchg
mov
cs
out
nop
jne
stos
push
call
rol
fidivrl
or
enter
lahf
popf
int
pop
jae
xchg
xor
popf
add
and
jg
ja
fsub
mov
cmp
negl
xchg
inc
pushf
sbb
fimuls
sbb
stos
std
aaa
mov
xchg
jns
out
sbb
mov
div
out
inc
xor
mov
inc
mov
mull
inc
fiadds
js
jecxz
sbb
es
movsb
cmp
filds
out
icebp
movsl
push
pusha
pop
test
or
jnp
cmp
inc
frstor
xchg
xor
iret
hlt
jmp
loope
pop
mov
pop
sub
in
mov
popa
cmp
adcl
loopne
inc
nop
sbb
xchg
adc
sbb
adc
cmp
ret
sub
pop
add
shll
xchg
jne
popf
push
cmp
and
or
cmc
arpl
fdivs
dec
jecxz
adc
dec
xchg
das
or
scas
andb
lcall
outsl
pop
imul
in
nop
ret
negl
inc
cmpl
mov
xor
mov
mov
jecxz
mov
and
or
inc
insb
pop
dec
xor
pop
pop
dec
sbb
sub
rorl
lcall
push
and
cmp
into
cmpsl
popf
pop
js
dec
pusha
inc
inc
test
push
xchg
cmpsb
pop
sbb
jle
mov
repnz
orb
push
cwtl
sbb
cmp
push
call
test
aam
dec
jae
ja
xlat
mov
adc
mov
int3
psubsw
outsl
and
stos
add
xchg
sub
add
dec
mov
adc
jg
adc
add
and
cmp
movsb
lea
sbb
xlat
cltd
cmp
adc
in
loope
test
or
mov
loop
xchg
outsb
xor
aam
pop
cmp
into
movsb
mov
loop
jp
sbb
mov
ret
add
xchg
sarb
inc
out
xchg
jg
pusha
adc
mov
rcrb
sub
imul
cmp
xlat
xchg
xor
inc
nop
dec
mov
cltd
cltd
add
xchg
test
out
mov
sahf
out
xor
out
and
stc
mov
sub
cs
sahf
mov
jge
out
mov
jno
push
ljmp
pop
pop
in
pop
sub
stos
sbb
jae
clc
ja
dec
inc
cmp
out
xchg
sbb
sbb
pop
ret
push
jae
cmpsl
mov
mov
repnz
jecxz
clc
or
and
sbb
icebp
test
or
push
dec
push
dec
test
out
add
in
cmpsl
jmp
lods
es
addr16
add
notb
add
incb
jno
movsb
fs
jmp
es
leave
dec
ljmp
mov
fs
push
mov
gs
into
out
adc
jg
lods
dec
in
shll
in
out
hlt
in
push
add
mov
cld
sbb
xchg
sarl
jbe
sub
xor
mov
ficoml
pop
fbld
cmp
orb
inc
std
divb
mov
popf
jo
xchg
clc
in
out
mov
pop
dec
xor
sub
jl
sarb
mov
inc
and
out
scas
xchg
iret
jg
popf
push
cmpsb
lcall
xchg
push
dec
pop
mov
in
in
pop
push
dec
push
inc
enter
cmp
fnsave
dec
jmp
out
imul
inc
push
ljmp
aas
mov
add
jmp
or
aad
out
rol
daa
pop
jge
mov
and
ljmp
jl
test
pop
outsl
push
pushf
push
ja
cmp
clc
adc
adc
lods
push
loope
inc
pushf
xchg
mov
sbb
in
mov
hlt
pusha
and
dec
dec
xchg
add
mov
fucomi
or
push
jno
fldcw
ljmp
xchg
adc
push
movsb
add
mov
push
inc
cld
subl
mov
repz
mov
inc
inc
sbb
loop
int
sbbl
mov
gs
aam
sub
rcrl
shlb
xchg
pop
loopne
jp
pop
push
mov
imul
in
dec
xor
xor
lds
clc
xchg
cmpsl
and
xor
xor
outsl
add
loope
inc
push
pop
das
jae
jo
ret
jbe
add
pop
pop
xor
xor
sbb
jle
in
bound
inc
xchg
stc
push
xchg
hlt
mov
inc
das
mov
fs
popa
jno
fnstcw
sbb
lret
dec
into
rcr
inc
xor
movl
cmc
sbb
aaa
push
test
pop
mov
mov
push
testl
es
bswap
pop
ja
lods
mov
inc
pop
lret
sub
insl
adc
imul
mov
mov
pop
fidivs
jnp
mov
dec
popa
movsb
add
sub
push
hlt
jno
cmpsl
fiadds
sub
xor
add
pusha
pusha
mov
lods
movsb
popf
cs
jle
jnp
xchg
stc
outsl
das
add
inc
mov
testl
and
and
or
out
lods
push
jp
lea
addr16
dec
sbb
rolb
roll
mov
int
pop
sub
mov
ret
mov
jmp
jbe
xor
mov
imul
and
jo
imul
dec
sbb
data16
jg
jg
xchg
in
stc
aaa
push
sub
or
insl
cmp
enter
sbb
and
or
aam
xchg
sahf
fucomi
cmp
in
icebp
ja
lahf
adc
adc
nop
jnp
xchg
dec
std
cld
cmc
test
fwait
xchg
jne
loop
lret
inc
dec
sti
xchg
lret
adc
mov
repnz
insb
sbb
mov
lret
loope
adc
mov
cltd
lods
outsb
jmp
fisttpll
cmp
mov
cmp
mov
pusha
pop
fmulp
daa
aad
cmp
rep
sbb
push
inc
sub
rcrl
push
scas
or
sbb
dec
outsb
fisubrl
mov
les
lret
dec
push
xchg
inc
push
cs
or
cmp
movsl
jecxz
cmp
cwtl
pop
sub
add
iret
or
jae
xor
add
fucomi
pop
push
add
mov
aad
dec
imul
mov
cmp
push
pop
aam
inc
jp
push
jle
cmpsb
push
dec
push
test
lret
ja
xchg
cwtl
xor
inc
sub
add
sub
mov
stos
mov
push
out
nop
lcall
outsl
push
cmp
pop
test
push
aas
sti
shlb
fsubrl
mov
jo
mov
push
dec
xchg
jae
in
ds
js
sbb
or
push
inc
shll
shr
or
pop
cld
pop
insb
repz
imul
iret
pop
push
inc
pop
sti
xchg
sbb
fwait
xchg
inc
pop
push
cmp
aam
in
test
pop
dec
in
sub
fldt
stos
sbb
pop
jns
xchg
out
js
push
out
or
addr16
mov
std
mov
pop
push
sahf
inc
ret
xchg
imull
and
mov
mov
jne
daa
shll
mov
mov
pop
sahf
sub
xor
stc
sbb
cwtl
sbbb
insl
fisubrl
ljmp
pusha
stc
jb
imul
add
push
adc
lret
mov
imul
pushf
iret
xor
mov
hlt
xor
push
std
push
xchg
and
push
mov
popa
pushf
mov
xor
fnstcw
xchg
ja
aas
xchg
adc
jmp
test
or
lret
cmp
test
mov
into
popf
clc
mov
push
and
and
test
sarb
aad
aam
adc
inc
dec
mov
rcrl
add
aad
push
out
cwtl
cltd
cltd
dec
imul
dec
sub
dec
add
push
add
jmp
mov
out
inc
nop
mov
mov
out
aas
mov
xor
cmc
dec
jae
frstor
inc
loopne
add
lods
gs
mov
adc
adc
aas
lahf
dec
lea
cli
mov
sbb
std
push
adc
or
mov
jle
cmp
repnz
cmp
lods
and
push
leave
data16
xchg
fwait
jbe
fnsave
leave
xchg
ret
aaa
cmp
movsl
jg
xorps
mov
add
jmp
pop
lret
push
inc
sbb
insl
jge
inc
mov
pop
pop
mov
mov
out
mov
in
adc
ljmp
sub
mov
dec
iret
dec
mov
nop
or
inc
dec
pop
mov
sarb
sbb
mov
insb
xor
out
test
adc
or
and
mov
mov
js
sub
int3
sub
cld
int
cld
aad
popa
sub
pushf
dec
int
mov
cmpsl
popa
mov
add
adc
outsl
cli
mov
mov
aaa
test
loope
shr
pop
in
jb
std
outsl
push
push
jbe
mov
movsb
sub
jp
aam
daa
pop
push
or
mov
mov
scas
popw
xchg
jo
sub
mov
fs
popl
enter
inc
push
in
mov
cmc
mov
insl
and
xchg
jecxz
iret
cwtl
xor
mov
mov
sbb
cmp
ds
stos
xchg
faddp
mov
push
inc
and
insb
je
in
stos
inc
insl
nopl
sbb
iret
fstps
call
xchg
out
jge
call
inc
inc
adc
sub
add
xchg
push
mov
xchg
cs
sub
and
jmp
pop
jb
mov
inc
iret
and
jbe
or
ret
xor
jbe
jns
cmp
lcall
mov
xor
xchg
adc
xchg
dec
cld
andb
cwtl
sbb
call
mov
jae
pop
mov
jp
icebp
inc
pop
xlat
fistps
pop
mov
mov
jg
aaa
andb
in
rcrl
push
int
and
aam
dec
daa
rorb
jmp
xor
push
loope
cmp
out
pop
test
addps
xlat
xor
loop
jns
out
push
inc
jmp
mov
jno
and
cmp
push
cmpb
cli
jecxz
enter
aaa
dec
mov
mov
js,pn
ljmp
mov
lock
push
fstp
nop
cwtl
push
adc
enter
aas
mov
movsl
scas
inc
xlat
orb
mov
mov
push
stos
jl
test
inc
int3
fistpll
int3
bound
popa
xor
cld
jno
xchg
pop
jl
pop
ja
int
xchg
subb
gs
jmp
pop
cwtl
pop
lcall
mov
jp
out
pop
fidivrl
int3
sbb
movl
or
call
mov
pop
int
inc
dec
in
std
ret
xchg
jle
xor
sub
scas
mov
iret
jno
arpl
or
fldt
rolb
add
xchg
insl
pusha
shlb
or
pop
test
cmp
add
lret
adc
add
les
sahf
mov
fisubs
addb
mov
add
bound
clc
lods
inc
sub
ret
sbb
xchg
adc
and
out
add
cli
push
inc
lcall
imul
cmc
xchg
and
mov
leave
leave
inc
and
pop
loopne
inc
jns
daa
adc
jb
dec
mov
mov
stos
aad
cli
ficompl
leave
sub
jnp
cli
mov
flds
stc
jo
loop
adc
dec
and
movsl
add
out
cmc
fbld
and
loop
fisubl
inc
out
and
or
xorl
sti
wbinvd
in
icebp
sbb
xchg
push
xor
add
nop
cwtl
inc
les
xor
scas
add
pop
mov
xchg
ds
les
call
fsubr
jno
dec
pop
sti
and
fstpt
sub
icebp
and
or
and
add
jbe
dec
cs
push
mov
imul
xorb
fildl
loope
xlat
mov
push
mov
sbb
dec
push
jge
into
push
mov
inc
test
push
jp
add
test
mov
inc
cmp
test
pop
fists
fisubl
aas
adc
rcll
xchg
subb
fadds
loop
leave
cmp
rorb
push
cmpsl
aam
cmpsl
outsb
mov
or
push
xor
pushf
pop
add
out
add
scas
push
xor
pusha
out
imul
cmpsb
jae
sbb
aam
add
jno
fucompp
ret
adc
popa
outsb
test
inc
sahf
xor
and
enter
sub
jmp
dec
icebp
popf
adc
shlb
loop
push
push
or
lret
inc
fimull
cmc
inc
pop
sbb
cmp
je
push
and
dec
jo
stos
mov
je
lret
cmp
push
xor
inc
insl
aas
lock
inc
sub
clc
lods
sub
mov
mov
jae
jle
mov
jecxz
mov
and
int3
dec
add
mov
mov
inc
in
das
ds
rcrb
adc
xor
mov
mov
adc
sbb
or
push
pop
xor
lods
pop
rol
mov
inc
add
cmp
cltd
cs
sbb
loopne
push
sti
rcrb
inc
aaa
inc
sub
or
ja
inc
loopne
and
adc
aad
loope
jne
xchg
cmpsb
loop
mov
push
mov
es
inc
jnp
pop
das
add
sub
push
or
bound
ja
xchg
add
add
dec
cmc
fists
negb
jp
int
rcrb
sub
push
pop
int
jge
cmpl
aam
testb
inc
inc
outsb
mov
push
jns
mov
rcrl
frstor
inc
sub
xor
movsb
pop
sub
jl
loop
cmpsl
sub
sbb
in
sub
movsb
dec
mov
rol
inc
sub
lcall
inc
mov
pop
mov
add
jb
pop
cmp
or
cltd
cmp
push
in
scas
loop
mov
clc
push
pop
pop
in
or
data16
xchg
stos
adc
test
or
adc
inc
push
push
mov
cmp
pop
xchg
push
add
cmp
out
jmp
sub
insb
cmp
mov
lock
jno
sub
shlb
push
mov
or
stos
jecxz
mov
fadd
pop
lret
add
xchg
xor
xor
sbb
rep
fiaddl
lcall
repz
test
mov
mov
lret
loope
imul
inc
out
popf
cmp
jp
movsb
mov
jbe
out
jns
cmp
hlt
pop
mov
xchg
mov
or
lahf
cmpsl
scas
mov
icebp
dec
lcall
inc
sti
cltd
es
enter
dec
iret
inc
ret
jecxz
jg
mov
cli
inc
push
leave
jmp
mov
lret
mov
xor
cli
addr16
pop
lret
pop
xchg
clc
dec
jge
mov
push
mov
add
in
aaa
out
scas
les
cmp
arpl
aam
sub
shrl
sbb
gs
out
lcall
testb
pop
jle
mov
push
xor
mov
cmp
dec
insb
stos
decl
push
adc
fldt
sarb
and
jo
lods
jbe
mov
push
add
push
fwait
add
pop
or
shll
outsl
push
insl
push
addr16
in
xchg
inc
or
cmp
mov
xchg
pop
jo
int
mov
aad
rcrb
sbbb
mov
aad
push
jl
out
ja
cli
pop
stos
gs
mov
cmp
test
or
dec
sbb
scas
sub
fcompl
pop
paddsb
mov
sub
out
int3
sub
cmp
mov
scas
aad
jle
and
fwait
dec
sahf
mov
pop
pop
movsb
mov
popa
jo
arpl
mov
dec
sub
pop
sub
data16
jb
fdivrp
mov
lods
xchg
inc
cld
lods
shlb
shll
shll
cltd
fsubrp
adc
cltd
stos
aaa
pop
lock
push
cmp
jnp
push
sahf
jbe
orb
xchg
and
xchg
out
clc
inc
jmp
cs
hlt
xlat
imul
mov
mov
mov
mov
xchg
cmp
and
xor
aam
adc
xchg
dec
lods
mov
push
test
decb
cwtl
jo
outsl
mov
inc
pop
in
add
adc
scas
scas
out
sbb
inc
cmp
aas
inc
cwtl
jae
pop
push
mov
xchg
aad
cmp
cmp
bound
jae
jle
scas
xor
pop
ja
pop
fldt
cld
sub
or
cmp
push
push
mov
test
negb
xchg
xchg
pop
xchg
mov
fnsave
bswap
jecxz
cmp
call
cwtl
xchg
jecxz
cwtl
ret
xchg
pusha
pop
and
pop
dec
mov
mov
and
outsb
pusha
out
imul
sbb
jno
jo
test
addr16
cltd
jg
jecxz
lds
sbb
cmpsl
lds
pop
call
popa
sbb
addr16
cwtl
adc
insl
jbe
popf
cltd
call
data16
pop
test
and
push
sub
mov
jae
jae
mov
push
push
inc
inc
xor
cli
in
add
mov
sbb
cmp
add
push
cs
leave
out
ret
add
xchg
pop
sub
fwait
inc
rcrb
inc
dec
shrb
lret
pop
data16
push
in
xchg
pusha
or
mov
cs
jge
pusha
or
xor
fs
pop
fbstp
daa
xchg
add
cmp
sbb
xor
or
or
mov
cwtl
aad
repnz
pop
push
sub
je
and
cmp
sbbb
or
sbb
in
mov
out
or
and
pusha
mov
dec
push
rorl
xor
add
inc
stos
pusha
aad
sub
pop
cmc
jne
xchg
cmp
mov
or
inc
mov
jae
lcall
inc
outsb
mov
inc
aam
mov
mov
leave
sbb
pop
arpl
and
out
gs
pop
out
bound
outsb
ficomps
pop
in
fisttpl
les
in
jb
lock
out
repz
lcall
sub
lds
stos
dec
pop
push
outsl
inc
call
xchg
cmpsb
imul
rorb
and
mov
pusha
stc
cmp
call
sbb
lahf
inc
fstl
jecxz
add
stos
scas
mov
sti
movsb
adc
cmp
dec
mov
mov
inc
sahf
divl
jae
push
push
sbb
mov
lcall
ret
fildl
imul
xchg
push
mov
push
rclb
and
mov
cmp
push
das
cmc
inc
xchg
inc
pop
addl
test
lcall
dec
pushf
aaa
inc
push
sahf
mov
shll
mov
cmpsb
sbb
mov
mov
cmpsl
pusha
test
push
sarl
fwait
jmp
and
add
lock
add
jae,pt
popa
or
xchg
cmp
sahf
idivl
mov
jbe
call
cmpsb
imul
mov
dec
dec
sbb
fs
jne
xor
dec
adc
mov
xchg
nop
adc
rorb
aaa
xchg
dec
push
xchg
lcall
jno
popa
push
popa
xchg
add
and
push
sbb
jp
mov
push
cmp
std
pop
dec
and
test
rcrl
xor
add
cwtl
mov
cmpsl
jae
mov
jbe
pop
mov
insb
sbb
lock
lods
pushf
shll
jl
lcall
pop
aad
xrelease
push
aad
ret
sub
mov
jp
jo
jbe
xchg
jne
pop
daa
cmp
loopne
shrl
sub
cmp
or
push
into
mov
dec
add
cmpsl
mov
popa
or
sbb
mov
scas
inc
mov
in
movsl
mov
loopne
cwtl
addl
rorb
add
xchg
jl
inc
mov
into
sbb
and
dec
or
and
mov
jnp
aaa
mov
andl
dec
aas
movl
rcll
cmp
xchg
mov
xor
in
mov
jmp
data16
pop
sbb
int3
aam
pop
or
repz
mov
aad
insb
sbb
test
out
and
fdiv
into
pop
fstpl
add
stos
cld
lds
mov
aas
icebp
outsl
in
jnp
js
push
bound
push
or
out
jg
shlb
add
push
mov
sbb
loope
pop
mov
adc
and
or
ret
pushf
daa
cli
push
or
dec
xchg
imul
cmp
test
aam
cmp
cmc
outsb
xchg
scas
ret
lret
scas
mov
out
shll
addr16
notl
fwait
daa
inc
loopne
inc
push
pop
into
cld
cmp
jnp
js
mov
adc
in
addr16
mov
mov
mov
pop
daa
sub
dec
or
jns
or
push
push
insb
mov
data16
mov
adc
and
push
outsb
cwtl
add
imul
mov
movsb
mov
adc
adc
mov
aad
jb
negl
mov
pop
in
scas
cmp
push
jae
xchg
fiaddl
repz
cmp
loope
sub
lcall
jo
inc
mov
stc
cmp
adc
mov
adc
or
mov
and
aas
adc
jno
call
pop
dec
jo
and
mov
outsl
sub
inc
imul
fcomp
sbb
insl
and
outsl
mull
lds
jmp
jnp
jno
sar
push
int
push
dec
lods
in
mov
loope
ret
js
add
pop
jnp
and
inc
in
das
enter
fwait
inc
mov
aaa
sbb
insb
sub
or
cmp
and
subb
hlt
ret
pop
in
push
mov
and
adc
outsl
lods
into
xchg
out
and
inc
and
push
and
test
outsb
cmp
mov
dec
ret
aaa
ret
push
mov
js
jle
test
nop
pop
pushf
orb
mov
cmp
fbld
mov
dec
sub
and
xchg
mov
mov
jle
add
and
dec
cmc
inc
pop
ds
push
movlps
mov
fildll
in
test
test
mov
dec
aam
mov
or
or
icebp
pop
or
xor
add
cmp
out
or
adc
mov
or
mov
mov
cli
mov
or
filds
arpl
out
adc
sub
ror
or
adc
loopne
xor
cs
fisubrl
sub
lock
inc
cmc
mov
push
lea
mov
dec
cld
filds
cli
loope
sbb
adc
jns
dec
sub
lds
shrl
call
jmp
inc
and
and
outsb
rcrb
repz
push
sti
jns
xchg
imul
xchg
jbe
lret
in
ror
sub
testb
sbb
clc
arpl
jecxz
dec
stc
daa
scas
xchg
cwtl
dec
test
inc
ficoml
cmp
adc
jnp
int3
sbb
mov
out
pop
stos
jo
stos
test
xor
cmp
sbb
or
mov
in
jno
repz
xor
insb
sbb
scas
aaa
sti
test
lahf
sbb
mov
int3
xlat
fmull
inc
and
cltd
fisubrl
ficoml
je
jle
mov
sahf
insb
ficomps
lods
in
std
cmp
and
or
dec
or
pop
push
xchg
xor
movsb
push
orl
loop
cmp
pop
mov
fidivs
pop
cmp
sbb
ficoms
dec
das
icebp
in
jno
test
xchg
out
arpl
mov
add
fildll
clc
push
testb
scas
pop
mov
out
call
not
adc
lret
or
dec
fists
dec
ret
aad
sub
jo
fs
pop
stos
cmpb
mov
jl
inc
pop
cmp
sbb
arpl
idivl
ficompl
or
mov
int
aaa
inc
stos
imul
jecxz
xor
nop
aaa
add
push
jge
mov
mov
das
call
mov
mov
pop
test
ljmp
xor
sbb
andl
jbe
lock
add
or
cmc
insl
push
or
add
or
ljmp
dec
push
pop
iret
out
and
jno
pop
rol
xlat
dec
int
sub
fcompl
push
pop
xor
aad
and
jnp
pop
mov
shrl
mov
add
jno
repz
sbb
adc
mov
mov
pop
or
jl
lahf
cmpsl
mov
out
loope
sti
aaa
pop
mov
xchg
xor
adcb
loopne
mov
shll
rcrl
jb
iret
pop
jle
jge
pop
push
mov
mov
bnd
iret
mov
sahf
test
popa
out
sbb
std
fsub
fstps
mov
xchg
or
and
into
jbe
adc
sbb
push
xor
or
jb
in
clc
and
rcrl
std
fnstcw
loope
addr16
into
adcl
stos
fisubrs
push
movsl
add
lret
pop
jno
mov
jnp
ret
xchg
add
xchg
lahf
dec
int3
repz
dec
sbb
add
push
imulb
cli
or
jb
lret
push
adc
jmp
jb
ficoml
pop
mov
test
fisttps
mov
fdivrl
sbb
ljmp
shrl
adc
cld
ret
jp
push
jne
mov
outsl
dec
jmp
bound
push
jns
fnstenv
xchg
dec
jae
jge
lods
in
mov
adc
mov
lcall
gs
ja
lret
dec
or
iret
pop
jmp
pop
or
fidivl
inc
lock
inc
int
and
int
ret
mov
jne
lret
or
push
movsb
and
jecxz,pn
push
fwait
orb
dec
data16
xchg
adc
jne
mov
int
ja
lgs
dec
cs
mov
inc
push
jne
inc
add
fisttps
mov
fistpll
adc
repz
dec
pop
aaa
mov
mov
xor
mov
lods
xor
int
mov
xlat
dec
fwait
inc
xchg
gs
add
jno
daa
out
popf
and
sbb
and
adc
inc
mov
lcall
and
pop
loope
push
andl
fidivrl
and
push
cli
loope
enter
js
add
adc
xor
or
loope
pop
dec
push
outsl
es
roll
incl
adc
add
dec
add
xor
inc
push
shll
push
in
or
mov
mov
jmp
cwtl
xor
push
and
test
push
mov
jl
inc
scas
xchg
inc
rcrb
jl
fstpt
jge
pop
jno
inc
mov
sbb
inc
push
cli
pop
test
sti
popf
dec
mov
hlt
or
test
filds
iret
dec
scas
mov
aas
xchg
sbb
push
lea
hlt
and
fsts
mov
jmp
iret
or
test
nop
xor
mov
scas
or
dec
mov
frstor
movsl
dec
adc
mov
stos
jmp
mov
insl
fsubs
clc
mov
lret
subb
js
xchg
push
inc
cwtl
imul
xchg
test
mov
sub
or
sbb
push
jle
hlt
arpl
xor
mov
je
orl
ja
lret
test
lods
xchg
cwtl
dec
sbb
decl
and
mov
bsr
adc
call
call
pop
pslld
popa
outsl
jnp
scas
leave
mov
mov
inc
push
imul
pop
pop
inc
xor
mov
push
cmc
aaa
xchg
in
push
xlat
mov
dec
and
shll
movb
dec
xchg
mov
sbb
xchg
xor
mov
xchg
dec
sahf
and
out
scas
push
test
loopne
lret
sbb
addr16
fs
sbb
xor
lcall
push
jnp
mov
mov
insl
xor
enter
lods
cwtl
dec
push
dec
cmpsb
sahf
fs
cmp
dec
fdiv
sbb
jge
mov
pop
add
lret
sbb
sub
cmp
dec
repnz
inc
insb
bound
xlat
test
jg
pop
enter
out
sar
test
or
cmp
push
cmp
push
scas
lea
dec
jns
pop
push
lahf
jbe
ret
pop
stc
in
xchg
cmpsl
jbe
call
jmp
movsb
dec
rcll
and
roll
imul
adc
inc
stc
push
or
shr
inc
pop
movsb
jnp
mov
test
fwait
adcl
pop
lods
push
into
xor
jne
xchg
sbb
mov
jge
ret
mov
xorl
xlat
dec
add
push
in
mov
fildll
or
mov
aas
ss
movsb
cmc
pop
xlat
ljmp
jmp
jno
adc
pop
dec
shll
gs
imul
jge
mov
arpl
fimuls
sti
es
loopne
sbb
lea
sub
lds
inc
xchg
into
xor
or
push
pop
xor
test
repnz
inc
push
xor
xor
mov
call
push
loope
mov
movb
mov
adc
test
notl
lock
inc
pusha
xchg
cmp
sti
ss
addr16
clc
cs
mov
dec
pop
addr16
out
inc
push
cmpsl
nop
mov
push
arpl
repz
sub
push
pop
and
pop
scas
push
inc
pop
mov
pop
lds
daa
addr16
addr16
dec
fists
call
sbb
roll
pushf
lea
and
imul
jo
jbe
xor
adc
adcl
jmp
and
jne
mov
lcall
aas
movsl
out
sbb
dec
sbb
subb
mov
clc
enter
out
ljmp
bound
pop
add
add
push
ljmp
test
and
cmp
sbb
fwait
cmpl
je
dec
jo
adc
hlt
jo
inc
imul
rcrb
ds
cmp
out
stos
ror
sbbl
xor
int3
js
mov
lods
repnz
mov
enter
sbbl
ror
pop
mov
mov
jecxz
adc
lahf
adc
out
adc
lret
pop
jl
sti
loopne
mov
push
cltd
insb
or
xor
pop
mov
cvtps2pi
or
roll
aad
stos
mov
pop
sub
repnz
sub
shlb
cmp
adc
pop
jmp
shll
xchg
xchg
lahf
in
jecxz
sbb
mov
jg
sbb
and
xor
xor
popa
rcl
jbe
inc
arpl
mov
mov
aam
adc
or
iret
jo
push
jno
aaa
icebp
aaa
in
into
push
subb
outsl
push
or
lcall
cmp
pop
mov
mov
inc
movsb
fimull
movsb
stc
add
imul
dec
adc
jae
daa
and
jno
fadd
xlat
mov
mov
addr16
mov
mov
lahf
lea
add
sbb
xor
ret
roll
add
insb
cmpl
data16
out
dec
pusha
aam
mov
xchg
out
pop
xlat
fnsave
mov
or
pop
pop
push
xchg
movaps
fpatan
movsl
mov
fbstp
into
push
int3
roll
push
inc
jno
mov
adc
popa
je
xchg
mov
push
jl
mov
fdivr
push
shl
aas
mov
mov
add
pop
fs
push
xor
mov
shl
dec
test
and
in
pop
outsl
mov
ror
xor
cmpsb
fnstcw
mov
js
cwtl
pop
mov
fistps
adc
xchg
movsl
jg
inc
lret
adc
sbb
in
xor
test
and
out
dec
cmpsl
inc
lahf
js
xchg
pop
movsb
imul
push
lcall
jmp
rcrl
sbb
lret
fs
dec
mov
fisubs
sbb
test
lahf
movzbl
fldl
mov
xchg
mov
arpl
push
lods
add
iret
lods
sti
add
inc
or
ds
fcmovu
xchg
outsl
or
ss
mov
les
inc
in
imul
loop
mov
and
xchg
dec
sbb
aad
insb
add
cmp
mov
xlat
sbb
xchg
cmp
mov
stc
or
ds
imul
mull
sub
mov
scas
leave
lcall
dec
je
adc
call
push
mov
scas
mov
scas
sub
push
mov
mov
ss
mov
js
jmp
pop
adc
int3
gs
adc
xor
mov
lods
cltd
jb
xchg
es
stos
push
xchg
stos
pushf
aas
cld
cmp
inc
mov
cwtl
test
xchg
sub
inc
rolb
repz
mov
stos
fadd
sti
cmpsb
int
cmp
imul
sti
mov
enter
out
pop
data16
xchg
scas
xor
or
cmp
ret
jmp
scas
rolb
js
int3
push
mov
inc
popf
out
mov
int
test
add
leave
mov
outsl
sbb
pop
cmp
pop
addr16
mov
cmpb
fs
xchg
lds
dec
cltd
add
push
fsubr
call
mov
adc
push
loope
sub
stc
setae
pushl
and
enter
push
ss
shl
cmpsb
cs
and
lods
cwtl
enter
jle
scas
mov
call
adc
decb
cmp
rol
out
addr16
add
rcl
push
inc
in
sti
mov
cwtl
test
dec
dec
adc
or
dec
sbb
xor
ficomps
stc
mov
xchg
unpcklps
cmp
jle
sbbb
mov
jge
jnp
mov
mov
or
dec
mov
mov
pushf
xchg
insb
imul
mov
and
push
xchg
inc
jmp
shlb
ds
sub
jl
shlb
int3
les
jecxz
arpl
cs
xor
mov
cld
mov
ret
gs
push
mov
out
push
hlt
mov
cmpb
cmc
lods
jb
aaa
inc
xor
or
mov
and
cld
adc
fildll
dec
cmp
or
clc
aas
xchg
or
sub
push
lock
mov
call
ja
scas
popa
loope
inc
loop
aam
daa
in
xor
push
add
or
aam
lret
nop
xchg
popa
sti
leave
ret
and
sbb
divb
hlt
arpl
ret
mov
add
nop
inc
ret
stos
sti
pop
inc
jae
and
inc
and
mov
mov
xor
or
leave
mov
or
push
scas
or
in
mov
es
mov
fs
push
lods
jecxz
lret
movsl
dec
add
pop
mov
out
hlt
jp
jecxz
cmpsl
loopne
or
mov
xor
ret
call
xor
xor
jno
mov
mov
mov
fmull
xchg
popa
jl
sbbb
cmpsl
inc
mov
add
inc
cld
inc
and
fwait
mov
push
add
add
jecxz
dec
cmc
in
out
scas
push
xchg
mov
dec
adc
test
aas
sub
cli
cmp
adc
mov
dec
mov
jo
cmp
add
sbb
adc
in
jmp
mov
movsl
cltd
fsubrl
aad
inc
in
stc
aam
pop
mov
cwtl
aaa
jle
jmp
mov
inc
or
dec
dec
or
sbb
pop
fidivs
lods
mov
outsb
jns
adc
lret
insb
mov
rol
mull
or
xchg
sti
jae
sub
jb
les
shlb
int3
aas
hlt
xlat
jb
sub
xor
push
rcrl
xor
mov
inc
pusha
imul
jbe
adc
idivl
je
in
inc
push
lods
mov
movl
out
int
inc
fsub
clc
pop
sub
icebp
std
in
hlt
dec
or
in
popf
scas
out
dec
xor
inc
push
sarb
popa
fldt
pop
jp
inc
push
cli
dec
jmp
push
incb
es
or
mov
cmpb
jl
xchg
sbb
pop
adc
xlat
inc
mov
cmp
add
sbb
idivb
push
sbb
and
and
and
fisttps
sub
sbb
sub
push
mov
test
out
repnz
out
cmp
pusha
mov
je
outsb
pop
ret
subl
fldl
mov
lea
dec
xchg
pusha
in
das
add
mov
mov
mov
mov
aas
push
sbb
or
sbb
jl
pop
push
mov
enter
insl
mov
ljmp
push
test
mov
and
sbb
je
pop
shrl
sbb
icebp
mov
mov
jne
test
inc
cmp
push
aaa
cltd
jmp
mov
test
pop
jnp
push
shll
out
test
loop
inc
sbb
cmp
das
pop
or
jne
push
cs
and
jmp
cld
and
std
in
push
add
mov
pop
stos
pop
xchg
fmul
xchg
loopne
sub
pop
push
pop
aam
enter
sub
aas
xlat
ss
ja
insb
jmp
inc
test
dec
cmp
lret
in
cmp
push
fisubrs
lahf
jle
sbb
aaa
mov
cmc
push
cmp
dec
inc
scas
test
add
cwtl
int
repnz
js
ds
pop
mov
xor
push
repz
repz
push
push
mov
cli
idivb
lods
jnp
add
pop
jecxz
jmp
xor
mov
lods
ja
scas
fidivrl
xlat
add
sbb
jmp
mov
mov
and
jno
push
jo
jecxz
adc
jae
dec
addr16
ljmp
dec
popa
dec
movswl
push
mov
enter
arpl
aam
lea
aas
inc
outsl
adc
xchg
dec
adc
xorb
pop
adc
repnz
dec
sub
xor
scas
sub
push
mov
lds
mov
sub
ss
pop
orb
mov
add
jb
rcl
mov
sub
mov
test
cmpsb
sbb
lods
mov
and
enter
clc
and
test
cmc
arpl
les
push
inc
add
rcrb
adc
xchg
lods
loope
sub
inc
mov
push
nop
scas
and
xlat
cmp
cmp
hlt
inc
lods
push
lds
lcall
repnz
push
imul
pop
shll
inc
enter
mov
inc
xorl
outsb
into
je
popf
inc
std
mov
xor
idivb
sub
jb
sbb
xchg
dec
add
int3
cmovae
xchg
loope
cmpsb
dec
rorb
sub
adc
lret
adc
scas
es
fs
ret
popa
jno
and
mov
jae
xor
int
xlat
inc
out
mov
xchg
xchg
aam
mov
and
push
or
loope
js
sbb
inc
pusha
stc
add
aam
scas
into
js
rcl
xchg
clc
pop
sbb
push
add
mov
hlt
push
fbstp
pop
addr16
jp
jp
mov
xchg
xor
xchg
fbstp
fiaddl
xchg
inc
nop
neg
xlat
fiadds
into
sbb
dec
out
adc
decb
and
test
xlat
sbb
arpl
popf
shr
xorb
inc
jne
or
inc
fbstp
fistpl
ja
faddl
sbb
mov
or
jle
sbb
jo
cmp
sub
xchg
shrl
mov
inc
mov
inc
in
sub
mov
push
push
ficomps
and
dec
pop
test
sarb
scas
and
arpl
clc
fstpt
add
es
jge
cli
aam
scas
cmpxchg
fdivrs
xor
jnp
shrl
loopne
mov
cmp
mov
out
push
push
rolb
add
ficoml
xor
xchg
jl
sbb
pusha
adc
es
daa
js
repz
mov
fidivrl
mov
and
inc
inc
inc
int
jp
fidivs
adcb
jmp
jbe
or
pop
sub
dec
sub
stos
dec
jo
mov
mov
cmpsb
std
push
lsl
xorl
daa
mov
jle
xchg
cmp
sbb
test
jmp
lods
jno
in
pop
sub
adc
add
movsb
add
mov
xchg
jns
xor
enter
fstl
inc
imul
adc
imul
or
out
sub
ljmp
das
daa
dec
mov
push
out
xor
cmp
and
sbb
inc
sub
mov
and
mov
fwait
xor
dec
loop
inc
out
xchg
xor
or
out
mov
insb
xor
push
mov
mov
inc
mov
inc
jo
sub
and
icebp
inc
and
pop
int
or
inc
clc
rorl
jg
or
adc
xchg
inc
jmp
negl
aad
push
lret
mov
lahf
ds
mov
mov
jae
pop
in
sbb
jg
or
fs
push
add
pushf
pop
test
sub
pushf
xchg
dec
mov
cltd
insb
cs
jg
pop
ror
xchg
icebp
loop
mov
cld
movsb
lret
test
and
pop
jns
cmp
lahf
and
es
mov
test
adc
notl
xchg
roll
sbb
pop
pop
sbb
icebp
dec
hlt
add
xor
mov
mov
mov
xchg
adc
add
jle
lret
jns
es
xchg
push
adc
rcrb
mov
push
add
stos
sahf
ret
or
and
in
or
stos
fs
and
stc
mov
call
mov
cs
sbb
dec
dec
jmp
xchg
adc
mov
filds
cmp
lods
cwtl
add
addb
sbb
inc
adc
pop
xchg
outsl
and
sti
or
inc
xchg
iret
repz
jb
int3
xor
inc
data16
jmp
add
dec
cmc
test
xchg
lock
xchg
fadd
add
jg
adc
les
popl
lea
sbb
or
sub
ljmp
xchg
sub
pop
and
cmpsb
xlat
pop
add
push
dec
ja
bound
icebp
subl
xlat
push
and
clc
aas
daa
sbb
xlat
dec
clc
fimuls
push
outsl
shlb
push
clc
aas
lcall
add
mov
mov
mov
sub
jmp
cwtl
fcmovnu
add
xchg
faddl
xor
xor
lods
and
jg
idiv
xchg
mov
xchg
pop
loop
pop
out
mov
inc
adc
or
jbe
mov
mov
fbstp
jno
or
jno
or
dec
shll
outsb
sub
xor
ret
mov
fwait
sbb
push
insl
xchg
sahf
inc
adc
jne
bnd
ret
mov
je
int3
mov
lods
jno
xchg
ss
inc
fnstsw
in
daa
add
sbb
fwait
lret
daa
xchg
add
shrb
push
and
loopne
sbb
shll
fs
fcmove
inc
pop
popa
ljmp
pop
ret
mov
xchg
cld
adc
arpl
add
inc
pop
out
iret
inc
daa
mov
mov
mov
fstps
clc
sub
inc
movsl
jb
aaa
push
pop
jp
out
test
sub
jle
in
sub
xor
aad
out
jno
cwtl
pop
icebp
xchg
iret
sbb
lods
mov
jmp
pop
push
xchg
sub
outsl
fcmovnu
ret
lahf
fdivl
add
mov
les
or
add
pop
cmc
pop
jnp
ja
mov
sub
cld
in
cmp
cld
aam
adc
mov
inc
mov
xchg
jmp
push
test
jo
jg
popf
sbb
fbstp
push
inc
xchg
sbb
fildll
insl
cmp
jp
xchg
inc
jae
and
xchg
leave
push
repz
cmp
sub
insb
les
xor
imul
movsl
jbe
in
jmp
jae
mov
movsl
adc
loope
push
push
dec
sbb
push
aad
push
fcompl
mov
pushf
push
mov
sti
sbbl
jmp
fs
pushf
fistl
adc
pminub
mov
mov
push
inc
push
mov
inc
lret
imul
aam
daa
test
movsl
ss
lock
add
inc
cld
cltd
outsl
fs
ljmp
daa
aad
test
rorl
jb
mov
dec
in
std
scas
nop
test
fdivp
mov
dec
scas
sbb
or
shl
mov
test
mov
adc
les
xchg
lods
push
fistl
insl
and
stos
arpl
cmpl
sbb
add
inc
inc
push
movl
inc
mov
fdivrp
xchg
xor
aad
clc
xor
xchg
sub
mov
gs
repnz
mov
loopne
jae
and
repz
xor
mov
add
rclb
imul
xorl
data16
fisttpll
cmp
stos
loope
push
fxch
ljmp
jb
leave
mov
shlb
sbb
lds
pop
or
mov
sahf
mov
adc
xor
xor
in
add
jle
out
idiv
add
cwtl
xchg
adc
pop
inc
dec
leave
shlb
aad
adc
int3
rcll
lods
out
mov
leave
jno
enter
dec
push
jno
repz
aas
mov
xchg
out
rcll
ljmp
mov
jne
std
or
pop
arpl
cmp
sahf
lock
inc
arpl
imul
adc
imul
jecxz
xchg
loopne
and
cmp
push
imul
mov
inc
adc
mov
gs
or
jp
mov
mov
pop
pslld
cmc
out
mov
add
addr16
xchg
add
mov
fiaddl
ds
iret
mov
aas
xchg
mov
decb
or
pop
ret
nop
push
int3
push
daa
inc
imul
sub
lods
fsubrs
loope
inc
pop
and
fs
pop
jne
insb
cmp
mov
or
or
lea
stos
pop
jae
cmp
cmp
jnp
push
pop
xlat
testb
popf
xor
in
inc
mov
test
or
adc
sub
lods
imul
jge
aaa
lcall
push
popf
fwait
and
or
inc
push
in
mov
push
or
push
shrl
in
push
xchg
out
push
mov
movsb
aad
in
cs
jbe
and
push
aaa
cmp
aam
lea
in
push
test
xchg
shlb
jbe
jno
mov
mov
pop
in
jnp
aaa
data16
jno
xor
test
mov
push
mov
lods
or
or
fs
je
sbb
movsb
mov
enter
ffreep
adc
jne
cmpsb
sahf
xor
push
ret
lods
lods
pusha
insl
push
test
je
test
add
mov
fnstcw
xchg
add
pop
in
out
fdivrs
and
add
gs
es
imul
push
push
sub
ret
leave
int3
stos
adc
xchg
aam
and
aad
pop
lcall
out
mov
and
nop
cmc
loope
push
adc
fwait
push
xor
loop
jmp
fstpl
mov
adc
mov
fadds
pop
out
pop
adc
push
ds
or
mov
std
scas
pop
into
xlat
mov
stos
push
push
insb
mov
adc
mov
xor
mov
pop
adc
mov
arpl
out
pop
data16
pop
cmp
sub
xor
cmpsl
mov
lret
mov
add
lret
inc
jo
dec
and
ds
daa
inc
sbb
or
push
movsl
shll
mov
test
inc
xchg
sarb
cmp
fisubrl
inc
dec
js
lahf
inc
leave
loopne
cmc
sbb
push
sar
je
inc
xchg
or
sub
stos
lock
ret
lcall
sub
adc
sbb
ljmp
lock
xor
dec
sub
popa
popf
xchg
push
test
ret
mov
sbb
aaa
jmp
and
mov
mulb
mov
ret
mov
fchs
pushf
jecxz
pop
adc
loopne
in
shlb
test
pop
stc
mov
jns
ret
mov
push
dec
fbld
jne
jle
sbb
xchg
sub
in
out
dec
ficoml
out
inc
cmp
mov
test
jg
jne
push
cs
jmp
adc
mov
addb
popf
ss
mov
jecxz
sbb
sub
mov
xchg
sub
add
and
cmpsl
imul
cli
lea
sbb
iret
sub
aad
das
xchg
int
scas
loopne
test
sub
scas
jbe
and
push
xchg
lahf
mov
sub
push
jmp
jae
test
push
pop
cld
fcoml
inc
or
dec
lock
inc
movsb
sti
leave
cmp
daa
movsb
aam
shl
fsubs
lods
sub
jg
xchg
inc
sbb
xor
int3
clc
dec
mov
cmp
push
sub
jge
jg
sbb
mov
movl
or
mov
loopne
aad
cld
scas
sub
or
sub
adc
sahf
xchg
imul
dec
es
mov
jle
cltd
je
lods
sahf
popa
dec
xchg
scas
jmp
jae
lcall
dec
fwait
or
jae
jmp
push
inc
cwtl
into
pop
js
push
jno
adc
cmc
dec
pop
jae
pop
jmp
int
jecxz
and
lret
fsubr
and
jb
push
fwait
jmp
pop
jae
xor
mov
adc
cltd
test
adc
mov
push
cmp
aam
imul
pop
xchg
inc
push
jno
hlt
push
lds
in
outsb
and
arpl
mov
ret
addr16
xchg
pop
imul
dec
cmp
in
dec
std
popf
mov
lret
sbb
popa
imul
adc
in
lahf
push
mov
mov
cmp
daa
cmp
icebp
lods
jno
adc
add
pop
pop
cmpsb
or
fisttps
push
nop
cli
or
sub
xlat
test
rcll
cmp
pop
or
and
jle
and
mov
xchg
mov
jecxz
cmc
insb
pop
inc
int3
xor
js
shrl
push
xor
and
jge
shll
gs
xlat
scas
sbb
cmpsl
xor
pop
nop
cmp
xchg
mov
xchg
test
test
push
iret
pushf
and
mov
mov
mov
nop
sub
xchg
jmp
std
sub
hlt
pop
xchg
mov
xor
outsl
jmp
std
iret
xchg
int3
mov
pop
inc
cmp
mov
mov
mov
mov
inc
mov
dec
mov
ss
sub
imul
xchg
adc
xor
mov
jno
or
fsubp
inc
aam
mov
stos
pop
cmp
mov
out
mov
push
imul
inc
addr16
jge
xchg
push
adc
cmp
dec
mov
repnz
xchg
in
xor
push
repnz
lods
mov
dec
out
mov
lods
jge
mov
sbb
mov
fcomp
subb
jmp
jne
cltd
into
mov
push
mov
add
vphaddsw
insl
push
aas
mov
mov
ja
sub
dec
bnd
sbb
push
inc
push
pop
add
test
and
out
mov
inc
scas
jge
cmpsb
sbb
ds
hlt
push
test
jbe
push
hlt
in
dec
mov
xorl
sub
push
test
iret
call
mov
aaa
cmp
inc
mov
push
sahf
lahf
adc
xor
dec
lret
lcall
repz
leave
inc
sbb
pop
mov
cmp
sub
les
inc
sbb
aad
push
add
cltd
mov
sub
sub
mov
mov
ss
incb
popa
xor
push
insb
sbb
push
mov
rcr
lahf
or
cltd
adc
and
jecxz
mov
les
sub
xor
js
and
out
sub
cmp
in
test
pop
cmp
and
sbb
fst
mov
or
dec
out
mov
mov
clc
inc
fnstenv
leave
jo
scas
ret
cmp
inc
jo
and
nop
mov
addr16
pop
pop
lods
aam
and
in
cmp
repz
sbb
jle
adc
lret
inc
push
fchs
mov
out
hlt
daa
xchg
xorl
das
push
and
inc
stos
test
adc
movsb
lds
not
mov
lock
xchg
popf
test
in
xchg
and
mov
xor
shll
fptan
out
push
ja
lock
xchg
call
jns
shl
xchg
cmp
mov
pop
push
aad
pop
imul
bound
xlat
xchg
inc
out
fdivrs
push
push
hlt
mov
pop
and
jne
rcll
imul
push
adc
jo
jae
cmpl
push
outsl
popf
mov
les
mov
cmp
movsb
fsts
rcrb
int
cmp
pop
imulb
leave
lret
in
cmp
repz
lock
xor
mov
push
pop
dec
lods
lret
bnd
xchg
mov
xor
mov
jno
mov
shll
and
ljmp
lds
movsl
cwtl
pop
scas
cltd
jp
xor
inc
dec
in
insl
cmpsl
mov
sub
add
daa
cli
imul
xchg
adc
xor
bound
inc
xor
std
or
jmp
es
jne
push
jmp
adc
clc
adc
cwtl
repnz
insb
cs
arpl
jge
pop
or
xor
fldcw
sub
roll
adc
adc
fnstcw
or
cwtl
and
in
pop
fsubrl
arpl
dec
or
insb
rol
icebp
dec
mov
mov
push
xlat
scas
inc
es
outsl
dec
jmp
xchg
add
je
add
orl
or
and
lret
data16
les
pop
jp
jp
aad
push
sub
aam
test
cmp
imul
sub
mov
adcl
pop
dec
loope
dec
xor
in
lcall
fwait
lods
adc
inc
add
xor
je
out
xlat
and
rolb
int3
mov
mov
fidivrs
shrb
leave
jb
xchg
flds
imul
push
push
dec
scas
scas
aaa
and
inc
ss
sbb
aaa
mov
mov
or
mov
lea
in
stc
lcall
inc
inc
stc
daa
xchg
loope
insl
lea
es
xlat
xorb
sbb
pop
mov
adc
mov
cmc
mov
hlt
sub
clc
lds
cmp
outsl
int
sbb
xchg
call
pop
add
ret
adc
in
fwait
aam
push
adc
inc
out
lods
fildll
test
lds
andl
inc
mov
sbb
and
clc
pop
lock
pop
jbe
mov
dec
xor
pop
std
je
int3
imul
and
or
cmp
cmpsb
mov
je
int
in
push
mov
mov
sbbl
add
jmp
mov
jg
mov
xor
dec
or
pusha
cmp
stc
nop
and
testb
shr
xor
fisubs
mov
nop
xchg
dec
sub
aas
add
hlt
lret
scas
push
mov
cmp
popf
inc
cli
add
sbb
sbb
dec
test
pusha
loopne
push
inc
popf
jle
sub
loop
shrl
adc
cwtl
in
dec
sbb
xchg
gs
and
jge
jp
enter
sbb
mov
in
iret
mov
imul
xor
lods
aas
sarl
mov
dec
outsb
or
mov
push
icebp
std
pop
je
mov
dec
mov
lret
stc
adc
bound
addr16
loope
repz
and
xchg
aaa
mov
test
jbe
fimuls
jnp
out
out
push
pop
ss
loope
adc
pop
outsb
push
lea
pop
in
fmull
push
test
mov
inc
icebp
andb
dec
cmp
ds
pop
cwtl
add
pop
loopne
xchg
insb
sbb
xchg
outsl
pusha
or
popf
sbb
add
and
push
cltd
les
sbb
iret
mov
ds
je
lods
out
arpl
in
cmp
rolb
add
sub
or
push
sub
inc
mov
fstps
inc
inc
push
pop
fistpll
fst
js
inc
pop
sub
jno
or
andb
data16
dec
pop
fisubs
clc
das
dec
out
jl
sbb
mov
pushl
in
pop
dec
ret
sbb
notl
icebp
push
stos
and
or
xor
and
xchg
jecxz
call
int3
sbb
push
pusha
jb
pop
rorb
mov
ljmp
inc
or
push
jecxz
cmp
int
cmp
or
mov
push
pop
mov
sub
inc
and
int
into
fcmovnu
sub
popf
fadds
adc
dec
cld
sbb
jne
sub
mov
lret
in
movsl
fbld
xor
nop
add
repz
push
fistl
add
xor
mov
sub
mov
pop
cmp
sub
xor
les
xor
shr
sub
push
out
xchg
mov
outsb
sbb
jnp
push
icebp
dec
jecxz
jns
push
jle
fidivl
cmp
dec
mov
cmovae
loop
je
bound
pushf
sarl
push
mov
gs
mov
mov
lea
pop
mov
sbb
test
jnp
pop
jg
mov
push
inc
shr
aas
add
mov
fimuls
pop
ret
scas
cmp
adc
adc
jae
jge
mov
test
stos
out
aas
push
mov
xlat
fdivrp
negl
jle
jne
sbb
mov
push
jns
push
jl
pop
mov
jge
pop
shrb
out
sub
loopne
xchg
lea
mov
inc
int3
add
fisubrl
insl
adc
mov
lret
inc
clc
cmp
xlat
lret
jecxz
icebp
xorb
loope
xchg
sub
or
bsr
adc
repz
clc
aaa
mov
fsqrt
push
outsb
aas
scas
sub
ja
sub
dec
pop
push
jno
xorl
in
test
fmull
stc
lcall
stos
icebp
cli
shlb
imul
mov
mov
or
loop
lcall
xchg
push
scas
add
data16
test
insb
push
out
xchg
mov
add
ja
int3
addr16
pop
cmp
scas
test
jne
enter
fnstsw
xchg
xchg
pushf
stos
icebp
cltd
add
xor
out
jae
aas
mov
mov
cwtl
and
fiadds
jge
add
push
cmpsb
sbb
scas
xor
ss
std
mov
popf
mov
jmp
arpl
dec
xchg
sbb
jmp
repnz
into
shll
jnp
adc
or
inc
jae
ljmp
dec
jge
fs
xor
dec
push
mov
inc
fists
movsb
pop
adc
sbb
lods
popf
push
bound
jnp
jle
outsb
cli
mov
xchg
mov
imul
ds
aad
cld
leave
push
mov
sub
mov
xor
sbb
in
pop
sbb
lcall
dec
rcl
sbb
out
mov
mov
adc
push
iret
dec
icebp
cli
pop
scas
pop
adc
mov
movsl
fiadds
pop
push
lcall
sub
iret
pop
mov
push
xor
stc
and
fsubs
sub
mov
jne
xor
popf
mov
roll
out
leave
cmpb
sub
fldenv
flds
sbb
negl
push
repz
lahf
in
data16
sub
sbb
dec
orl
movsb
sbb
adc
lock
dec
sahf
jge
repnz
out
mov
cmp
leave
into
test
inc
decl
addr16
add
dec
push
out
sbb
cld
lock
push
inc
aaa
sbb
mov
mov
outsb
mov
pusha
int
movsl
mov
jb
sub
addr16
cmp
out
call
xlat
sub
movsl
mov
ja
pushf
mov
sub
mov
les
add
popf
dec
adc
jno
and
pop
xchg
or
xchg
mov
dec
pop
cmc
xor
mov
imulb
sub
iret
nop
imul
adcl
lahf
mov
mov
push
icebp
add
push
push
add
loope
and
sbb
mov
cmpsl
and
or
leave
xor
mov
aad
and
add
mov
lcall
aaa
fidivl
bswap
loope
aam
test
data16
std
and
movsl
mov
push
pop
add
pop
push
rcll
jns
repz
lods
sub
jl
adc
cmc
lock
pushf
movsb
bound
push
mov
pushf
mov
sbb
inc
cmp
movsb
int
and
push
cmp
ret
mov
les
mov
outsl
rclb
jp
adc
pop
mov
adc
or
xchg
jp
pop
push
cmp
int
jo
lea
sub
sbb
repz
mov
fistpll
aam
test
mov
or
lahf
xor
and
ret
lahf
adc
lock
and
int3
ljmp
dec
jp
or
mov
aaa
hlt
xor
ds
ret
or
sub
jo
stos
dec
ret
sub
out
test
and
ljmp
xchg
adc
jge
in
stc
mov
mov
or
and
xor
xchg
out
jo
or
into
shlb
dec
mov
aam
insl
inc
and
mov
mov
lods
jae
es
sub
or
xchg
das
lods
dec
je
mov
pop
inc
gs
xlat
cmp
addb
jge
cmp
add
into
insb
sti
les
out
repz
sub
outsl
and
mov
cmp
mov
push
inc
into
nop
xchg
and
lds
pop
in
sub
sub
clc
aad
inc
daa
mov
jae
fstl
mov
inc
scas
pop
pop
mov
mov
jl
inc
mov
and
imul
xor
push
mov
aad
dec
xchg
out
sti
add
imul
icebp
shrl
inc
or
sbb
mov
jmp
jge
inc
push
inc
xchg
pop
add
or
movsb
mov
lcall
aas
movsb
mov
rcll
mov
mov
dec
cwtl
aas
std
mov
mov
int
lea
es
movsl
das
int
cmp
ret
fimull
loopne
test
adc
lcall
mov
jbe
pop
xchg
or
lock
sub
or
adc
and
mov
xor
shlb
ffreep
retw
int3
dec
ret
mov
xor
stos
adc
xor
clc
mov
xchg
aas
mov
jecxz
xor
filds
clc
movsl
lods
jge
pusha
sbb
xchg
sub
popa
sbbl
and
jecxz
ja
pop
inc
push
xor
mov
stos
pop
lret
pusha
or
jae
sbb
lods
shl
inc
and
xchg
xchg
rolb
sub
sbb
adc
xor
dec
lcall
hlt
inc
das
loop
lahf
shr
aas
adc
shlb
inc
jns
mov
push
push
sbb
mov
sub
or
adc
aam
lods
xchg
test
mov
push
ret
jge
je
lods
or
imul
test
lods
leave
jnp
fs
inc
jne
cmp
mov
mov
sub
pop
lcall
or
xchg
inc
jmp
in
and
mov
mov
cmp
jge
mov
scas
roll
jb
cld
lahf
xchg
mov
out
or
into
imul
adc
pop
or
dec
cltd
adc
insb
int3
inc
pop
mov
dec
loop
mov
and
out
outsb
inc
cmpsb
test
sbb
leave
sbb
pop
jbe
pop
iret
and
lds
pop
jmp
or
add
ret
fdiv
jmp
cmpsl
or
or
into
adc
movsl
cmpsl
adc
push
test
pinsrw
lock
mov
cmp
xor
jbe
jl
mov
lret
inc
dec
adc
pop
icebp
lret
or
cmp
movsl
outsb
xchg
shll
int3
out
mov
sbb
aas
into
sub
mov
jne
push
enter
hlt
mov
aaa
inc
sub
adc
jbe
adc
dec
mov
sub
jbe
cli
mov
mov
outsb
mov
out
sbb
xlat
or
xlat
mov
hlt
sub
mov
push
fwait
lret
push
cmp
or
xor
mov
cmp
loope
lret
inc
mov
cld
sub
aas
pop
and
or
scas
jne
mov
sub
sub
sahf
xchg
sbb
jp
popf
adc
mov
daa
ljmp
leave
mov
mov
push
add
xor
mov
mov
cmpsl
test
ss
sbb
fsubrl
repnz
lret
fsub
push
add
lds
jae
adc
and
inc
pop
mov
test
scas
mov
jno
test
mov
aad
pop
iret
cmp
xor
fisttps
xchg
imul
dec
mov
mov
dec
and
fs
addr16
cli
jle
mov
inc
sbb
sub
adc
int
jl
jbe
xor
cmp
cwtl
fsts
mov
stc
mov
repz
add
popa
mov
test
jnp
out
ficompl
or
stos
xchg
or
imul
stc
pop
mov
movhps
popa
or
xchg
adc
rcr
shr
and
inc
mov
cli
or
mov
push
imul
jne
jno
adc
xchg
lock
dec
add
cmpsl
mov
add
test
test
mov
mov
out
pop
stos
cmpsb
aam
sbb
aaa
adc
xchg
shrl
and
xchg
or
movsl
dec
ret
ss
cmp
push
dec
je
push
das
jmp
jg
popl
push
sahf
cmp
cmp
adc
xchg
movsl
nop
jmp
mov
scas
mov
sub
add
popa
fcomps
outsb
mov
testl
rorb
xor
ret
adc
dec
dec
lods
mov
scas
jns
dec
clc
mov
xlat
lock
jle
jae
sbb
fisubl
push
and
xchg
mov
mov
out
mov
adc
pushl
in
push
in
icebp
push
sub
and
xchg
or
xchg
shl
fwait
push
inc
mov
or
inc
loopne,pn
jle
pop
aaa
jnp
sbb
pop
fxch
cmp
data16
or
jecxz
insb
jnp
jmp
filds
ds
pop
movsl
inc
movsb
test
add
jecxz
ret
rolb
addb
repz
mov
aad
cmp
repz
or
lret
or
icebp
and
mov
loop
loope
addl
ret
cmp
ret
xchg
mov
aas
fbld
cwtl
jns
cmp
xchg
inc
test
cmpsl
loopne
dec
jg
mov
jo
inc
xchg
out
mov
or
mov
ljmp
bound
popa
jl
xchg
jmp
mov
sub
sbb
push
sbb
xor
cmp
popw
mov
push
jp
repnz
mov
add
stos
scas
stos
ror
mov
sbb
cmc
jp
xchg
outsl
cmp
loopne
popf
outsl
stc
sub
cmp
or
sub
cld
jns
xlat
loop
push
mov
sbb
mov
jnp
pop
or
fsts
aam
out
push
je
jecxz
cmp
or
xchg
cmp
pushf
mov
repnz
add
sbb
inc
push
popf
clc
stos
cmp
xor
cs
jg
bswap
iret
jle
jbe
ljmp
push
cmp
inc
or
fildll
xlat
popa
add
mov
mov
movsb
or
mov
imul
xor
jecxz
daa
add
dec
lds
mov
pop
mov
std
mov
mov
mov
fcom
aam
sahf
aaa
lds
repnz
sbb
les
insb
lcall
pop
push
xchg
dec
mov
loopne
jle
cmp
pop
ja
rclb
mov
fidivs
and
push
lods
dec
sub
lds
jnp
push
dec
xchg
sbb
popa
cs
adc
adc
xchg
sahf
andl
dec
decb
adc
rcrb
push
lods
jge
les
jmp
fst
cmp
lds
inc
notb
sub
fcomi
or
adc
loopne
sub
cmp
mov
pop
bound
fistpl
in
aad
clc
dec
push
addr16
sbb
cmpsl
lods
stos
insl
adc
arpl
je
sbb
xor
cmp
fstp
add
cmp
push
shr
es
fisttpl
mov
mov
call
inc
mov
addr16
xchg
jl
mov
xor
int
jecxz
iret
das
outsb
lods
xor
stc
adc
mov
sarl
or
scas
mov
cwtl
outsb
test
add
str
xchg
and
add
dec
jae
pop
fdivrl
mov
cwtl
dec
sar
adc
and
fwait
cmp
jb
sbb
aaa
add
mov
es
push
jle
test
cmp
xchg
mov
sub
inc
int
mov
mov
das
adc
cld
jae
sti
mov
cmpsl
call
pop
je
pop
in
and
add
adc
hlt
pusha
push
sub
fcom
inc
cmpsb
dec
gs
cmp
xchg
push
jo
pop
xchg
loopne
mov
dec
pusha
add
pop
pop
loopne
nop
cld
or
mov
pop
add
pop
xchg
xchg
data16
mov
rol
pusha
sarl
cld
mov
pop
sbb
aas
mov
fisubrl
xor
mov
push
xchg
insb
adc
jnp
add
ja
out
in
outsb
jmp
mov
jno
inc
test
jg
arpl
push
and
bound
push
sbb
and
push
cs
sbb
inc
jo
loope
jge
cmp
loop
pop
insl
dec
mov
popf
jae
push
lods
sub
fdivrl
push
fs
xlat
testb
push
subl
out
test
adc
push
out
mov
push
mov
add
mulb
fildl
mov
fwait
je
shll
and
add
bound
mov
out
dec
cmp
rorb
test
or
imul
hlt
out
arpl
rcr
leave
dec
xchg
out
pop
dec
hlt
aam
push
enter
stos
mov
dec
pop
insl
arpl
pop
test
cli
xchg
cmp
push
adc
jo
jg
add
aaa
outsb
cmp
es
xor
nop
sbb
test
es
or
pop
mov
dec
ret
add
lcall
xor
movsl
lock
nop
mov
adc
cmpsb
mov
cwtl
cli
lock
hlt
movsl
loope
xchg
dec
jno
lea
ret
loopne
test
push
fnstsw
dec
dec
xor
movsl
dec
cwtl
push
lahf
fisttpl
sbb
sbb
lock
mov
push
mov
fnstcw
jg
sbb
aas
gs
jb
in
and
dec
out
scas
dec
mov
ret
inc
jne
xchg
cmpsb
stos
jle
adc
mov
add
mov
pop
inc
ljmp
and
or
jae
daa
insl
jns
loope
mov
inc
repz
mov
lret
aad
mov
fsub
push
fistpl
movsl
push
or
popa
inc
cmp
mov
inc
or
aas
mov
jmp
or
sub
jge
loopne
cmp
test
sahf
cli
jl
cmp
xchg
and
movsl
repnz
aad
xlat
nop
dec
pop
out
inc
and
pop
mov
cmp
mov
scas
xor
xchg
cwtl
mov
mov
add
repz
xchg
fwait
push
clc
sub
ljmp
and
pop
mov
rcrb
mov
inc
into
loopne
or
int
mov
xor
or
pop
adc
pop
jge
popa
xchg
lcall
inc
pop
inc
lods
sub
sbb
jb
sbb
movsl
imul
ret
dec
bound
mov
sbb
push
and
inc
mov
xor
xchg
aad
or
inc
add
es
cmp
adc
jp
dec
stc
outsb
aas
repz
insl
stc
daa
js
outsb
cli
ret
or
xchg
jnp
xchg
repnz
inc
dec
push
orb
mov
mov
popa
fidivs
push
out
aaa
add
inc
jb
mov
jle
push
xchg
mov
add
add
pop
jg
popf
push
insb
lret
pop
jge
sub
pop
gs
neg
imul
gs
push
push
lods
das
add
mov
fidivs
xchg
add
mov
add
sub
add
add
lcall
mov
jmp
xchg
out
inc
dec
dec
xor
outsb
mov
push
dec
and
sub
push
fisttpl
inc
mov
lods
sbb
jmp
xchg
leave
sub
and
aas
sarb
adc
mov
stos
mov
xchg
xchg
sbb
in
push
shr
jns
adc
rcr
fisttps
pop
inc
cmc
adc
mov
adc
lods
je
mov
sbb
sbb
jnp
mov
push
jns
test
nop
daa
cli
imul
movsl
mov
sti
mov
push
in
xor
cmp
push
cmp
or
imul
ret
fwait
hlt
fwait
movsl
jne
xchg
cli
shlb
addb
leave
aam
mov
xchg
mov
jge
or
cmpsl
hlt
loop
push
mov
mov
mov
cld
mov
mov
add
adc
push
stos
xchg
jl
lret
fimuls
push
inc
decb
dec
jae
in
loop
shrl
adc
test
test
jle
mov
leave
jmp
cltd
das
fdivr
ret
xchg
rcrl
in
sbb
fldl
and
mov
inc
inc
repnz
pop
pop
jae
dec
jmp
push
daa
inc
adc
xchg
test
sub
xchg
dec
mov
push
repz
lahf
push
xor
sub
or
mov
or
jecxz
mov
sub
lea
lock
outsb
in
cmp
adc
loop
dec
std
push
xor
xchg
shrl
push
inc
xchg
xorl
les
cmp
or
insl
dec
andl
and
iret
lret
xor
roll
push
add
xchg
inc
add
dec
out
rcr
and
inc
jle
rcrb
scas
out
and
pop
add
sub
pop
push
jmp
adc
rcrb
addr16
imul
data16
sbb
pop
cwtl
repnz
test
push
push
push
xchg
popf
pusha
cli
fsubrp
add
scas
loope
ss
xchg
mov
add
popf
add
ss
inc
rcrl
int
js
sub
xchg
daa
jne
push
lods
inc
shlb
imul
das
ljmp
call
jge
shl
ret
push
inc
sbb
scas
sub
fdivrl
add
in
sbb
pop
cmp
push
xor
aas
xchg
into
xchg
shrl
jo
fwait
mov
iret
mov
incb
xor
jae
push
insl
sbb
int3
add
push
cmove
hlt
idivb
punpckldq
xorb
fmull
sub
je
inc
add
imul
icebp
mov
stos
inc
sub
imul
nop
inc
pop
adc
inc
scas
jp
mov
xchg
pop
xchg
fstpt
jo
push
repnz
pop
fwait
test
push
aam
je
lret
push
jle
int3
cltd
fcoms
pop
cmp
sbb
and
movsb
rclb
push
lea
cmpsb
cmp
sub
mov
test
bound
icebp
aam
out
jno
popa
lcall
jge
scas
outsb
mov
dec
mov
lock
or
pusha
std
xor
lahf
ds
xor
jl
sub
cli
ds
mov
lock
mulb
sbbl
testl
lods
dec
sti
add
xchg
dec
or
in
jl
mov
xor
dec
sbb
push
mov
push
mov
xchg
add
push
sub
aam
mov
add
das
inc
pop
mov
fcmovnu
call
add
push
imul
movsl
clc
mov
sbbl
dec
notb
das
add
or
push
in
int3
and
notb
out
fmull
les
div
pop
mov
ds
xor
popf
imul
xor
push
iret
sub
lods
mov
push
orl
dec
cmovb
icebp
pop
mov
jns
cs
in
dec
cmc
add
rcr
addr16
gs
fildl
sbb
dec
inc
lahf
jne
pop
idiv
test
and
mov
enter
jne
sub
data16
lds
pop
enter
fucomi
cmp
testl
sub
sbb
add
test
sarb
dec
shl
imul
or
pop
adc
lret
enter
mov
xor
aaa
and
xchg
sbb
xor
fdivr
sbb
sub
or
xchg
inc
imulb
ret
xor
dec
mov
sti
fwait
xchg
rclb
sbb
test
mov
stc
not
and
std
jp
aaa
mov
stc
imul
dec
test
stc
or
fildl
lea
and
cmp
test
xor
push
movsl
test
pop
jg
and
les
lods
push
mov
xchg
es
jne
leave
dec
icebp
loop
popa
xor
in
pop
iret
fdivr
cmp
jge
fbstp
pop
jle
fnstsw
push
sub
int
add
fldcw
jg
rcll
or
xor
stos
enter
stos
xor
xchg
jns
adc
imul
sbb
repz
jns
in
out
jl
loop
inc
ret
cmpsb
fmull
adc
sub
adc
add
xor
xchg
in
cmp
cld
sbb
mov
mov
lret
fildll
cmp
or
fcmovb
leave
add
sub
dec
clc
inc
jecxz
sbb
jae
push
jnp
jl
es
out
push
iret
cltd
sahf
dec
stos
notl
loopne
mov
xchg
lea
movsb
ja
jbe
imul
scas
lods
xchg
dec
je
lds
stos
or
fsub
sbb
jl
cmp
inc
test
jb
jg
aaa
or
lods
cmc
cmp
or
bound
jno
mov
xor
out
test
popf
imul
stos
push
out
pop
int
test
jae
xor
mov
adcb
lods
out
cmp
push
testl
ret
sub
scas
push
xchg
clc
jmp
js
addr16
cmp
sub
insb
rolb
jge
sahf
nop
pop
cmp
and
cmc
mov
mov
mov
scas
sub
inc
inc
adc
aam
sub
inc
and
push
sbb
push
inc
push
xor
aas
sbb
inc
and
arpl
scas
mov
cmp
lea
fucom
mul
mov
inc
sbb
test
cmp
sti
jl
ret
popf
xchg
pop
test
inc
cmc
push
push
jb
adc
pop
cmp
dec
push
xchg
stos
jno
adc
sub
sbb
and
fdivrl
push
cmpsl
and
nop
jno
adc
ret
xchg
std
scas
sub
fldpi
add
mov
mov
jb
jp
add
dec
ret
push
shll
out
pop
movsl
sbb
adc
imul
and
es
ja
cmp
movsl
dec
xor
mov
mov
and
lahf
test
fxch
fsub
mov
inc
mov
dec
aam
cwtl
data16
mov
cmp
scas
fld1
mov
aam
daa
imull
test
stos
lods
or
dec
jle
sub
jbe
jns
iret
insb
sbb
enter
cwtl
pop
add
es
mov
stc
mov
mov
xchg
mov
add
out
in
in
and
mov
fs
insl
pop
imul
fimull
xor
loopne
ret
cmp
fsubs
out
scas
jle
cmc
addr16
inc
xchg
mov
xor
cli
stc
pop
xlat
and
mov
mov
test
test
mov
add
sbbb
cld
or
xor
dec
test
mov
movsl
fildll
mov
add
adc
mov
jmp
sahf
inc
js
adc
jmp
movsb
ljmp
test
into
sti
sahf
xor
int3
xchg
mov
rcrl
mov
lock
and
pop
cltd
ds
sub
xchg
adcl
dec
test
sarl
mov
int3
sub
sub
xlat
and
dec
dec
fsubrl
imul
ret
cmc
fiadds
sbb
jno
fs
xor
fisubrs
cltd
jle
addr16
push
iret
sub
jb
xchg
in
mov
aad
mull
pop
scas
mov
mov
inc
aaa
insl
xor
sub
fidivrl
cmpsb
jp
lds
outsl
jno
out
sti
ss
fmul
mov
jns
dec
dec
stc
adc
jg
std
push
les
lret
scas
add
jae
out
add
ja
mov
call
push
xlat
inc
xor
ss
test
call
and
pop
and
out
jmp
mov
fiadds
sub
xor
popf
outsl
mov
jb
or
int
outsl
mov
in
aad
sub
sub
dec
roll
cltd
jecxz
test
and
or
pop
scas
movsl
cmp
lret
rcl
xor
aaa
add
and
jp
in
daa
dec
cmp
popa
cmpsl
xor
push
ret
mov
and
jnp
jne
xchg
insb
adcb
push
aam
push
ret
iret
sti
and
fnsave
scas
sub
add
pop
fwait
pusha
pop
push
sub
add
int
mov
icebp
imul
jae
in
in
clc
sbb
fidivs
scas
stc
adc
ss
pushf
jmp
rclb
mov
jne
jne
adc
sti
mov
inc
xor
mov
call
jae
mov
dec
or
push
lds
sbb
push
mov
iret
pop
push
hlt
pop
aam
ljmp
sbb
dec
push
jnp
les
pop
pop
gs
sbb
mov
movsb
add
repz
mov
aaa
jg
jno
xchg
orl
sbb
sbb
pop
dec
jnp
mov
insb
stc
sahf
xchg
mov
pop
cmpsb
rorl
xor
dec
dec
mov
test
push
pop
jno
fstps
insb
mov
call
mov
xor
pop
repz
out
xchg
mov
xchg
into
stos
and
sti
or
dec
rorl
inc
insb
loopne
fsubrp
insl
or
push
push
sbb
cwtl
das
push
shrb
sbb
cs
insb
push
sbb
mov
test
cmpsl
loop
mov
mov
stc
xchg
xor
jbe
stc
out
out
rcl
dec
push
shll
pushf
fwait
scas
fbld
imul
dec
jbe
jne
mov
nop
jb
movsl
bound
mov
sbb
sbb
loopne
cmp
push
in
out
insl
add
mov
in
inc
pop
insl
adc
bound
pop
sub
inc
pop
fistpll
xchg
daa
push
adc
xlat
lret
pop
addr16
das
std
xchg
lock
xchg
js
mov
add
test
sbb
add
xchg
pop
popl
jnp,pn
inc
xchg
mov
inc
or
push
sub
add
ds
push
addl
adc
testb
and
sarb
mov
outsl
or
dec
inc
ja
xchg
and
js
rol
fwait
pop
stc
push
mov
sub
jo
cmp
sbb
rolb
xchg
mov
aaa
loopne
leave
inc
xchg
jp
pop
dec
dec
xor
xchg
cmp
repz
mov
and
lods
fs
int
push
in
push
shll
xor
sbb
out
mov
push
sbb
repz
sahf
mov
testb
jbe
cli
jo
addr16
fisttpl
cmp
lcall
test
add
cli
add
sbb
es
popf
std
push
pop
aad
out
xchg
int3
leave
or
nop
andl
out
mov
enter
sbb
scas
movsb
pop
idiv
repnz
xor
call
or
fcomi
adc
pop
sub
mov
mov
mov
stos
mov
popf
incb
xor
jl
or
add
loopne
fcmovb
jns
xor
pop
scas
pop
loopne
jns
scas
cmc
pushf
mov
popf
xchg
push
inc
or
cmp
popf
insb
cs
xchg
ret
lea
jbe
aas
sub
or
jmp
imul
push
inc
ljmp
xchg
push
leave
mov
leave
or
cmp
enter
pushf
pop
or
shll
mov
aam
sbb
cwtl
dec
aad
hlt
in
outsl
mov
sbb
and
out
outsl
push
popf
pop
data16
or
sub
push
xchg
cli
cmp
mov
repnz
fstpl
inc
loop
inc
aaa
lods
inc
push
xchg
and
push
rolb
inc
mov
add
aas
lods
jnp
pop
push
in
cmp
jmp
insb
xor
push
or
dec
cs
xchg
in
xor
scas
fcompl
mov
mov
add
test
inc
mov
cli
cli
mov
icebp
jecxz
movsl
fimuls
mov
mov
testb
add
cli
dec
in
pop
xor
in
dec
mov
add
ja
sbb
leave
sahf
sbb
jle
and
mov
mov
mov
js
outsb
fdivrp
pop
nop
mov
rol
es
xchg
cmc
mov
jns
roll
or
add
popf
sbb
sti
adc
loopne
js
jecxz
les
jbe
dec
je
mov
insl
ret
mov
loope
std
push
jle
jge
inc
xchg
xor
imul
aad
stc
pop
sub
fidivl
jae
out
sbb
dec
sub
std
pop
inc
xorb
mov
or
lods
mov
add
cmpsl
fwait
fs
push
loopne
dec
scas
fbld
cmp
mov
cmpsb
mov
ss
movsb
scas
and
xchg
mov
mov
mov
inc
add
pushf
mov
std
fimuls
movsb
jb
cmp
jl
pop
rorb
out
and
dec
nop
pop
enter
mov
cmc
scas
stos
mov
and
iret
sub
sbb
imulb
aaa
adc
cmp
pop
inc
and
mov
sti
pop
divl
ss
dec
add
push
xor
pop
fwait
scas
lds
scas
out
sbb
int3
cmc
or
xchg
sbb
inc
fdivs
int3
ret
xchg
leave
outsb
mov
or
inc
inc
outsl
mov
sub
jb
roll
mov
add
shrb
mov
cmp
rcrb
sub
sub
icebp
movsl
in
and
loope
test
repz
sub
decb
rcll
in
arpl
ja
int
inc
sbb
inc
movsb
sub
lret
shr
pusha
aaa
jmp
movsb
arpl
pop
push
lods
stos
incb
sub
das
sbb
mov
mov
loopne
xchg
call
orl
jecxz
mov
rep
add
add
pmullw
in
dec
mov
inc
xchg
jbe
push
dec
ss
cmpsl
sub
out
fwait
push
adc
in
xor
loop
incl
adc
fisubrl
shrb
rcll
sarl
mov
test
sarl
insb
lcall
cli
mov
dec
push
pusha
or
pop
or
push
adcb
loope
push
jbe
adc
dec
xchg
mov
aad
xchg
push
push
mov
jo
rorb
xchg
inc
clc
mov
dec
lahf
or
cs
add
lods
sbb
std
pop
mov
or
into
sbb
xor
cmp
inc
push
mov
jne
fisubl
cmp
xorb
jbe
or
dec
add
std
push
adc
insb
out
mov
mov
push
call
mov
or
scas
jle
mov
xor
sbb
sbb
call
jne
fdivrs
sbb
sbb
in
xor
push
outsb
repz
cwtl
rorl
bnd
mov
sub
and
cmp
inc
cmpsb
int
cli
mov
mov
sti
ja
jne
mov
pusha
fwait
insb
add
sub
pusha
jb
xor
stc
imul
fisttpl
fstp
popf
js
jnp
and
in
inc
and
xchg
sub
jl
mov
dec
je
mov
sub
jnp
das
inc
mov
lods
int3
pop
cmp
cmpsb
mov
das
push
mov
jne
shlb
shll
adc
out
cmp
stos
mov
stos
inc
mov
into
sbb
test
inc
inc
add
or
lret
or
call
mov
popf
int3
sub
jge
push
dec
sbb
jae
dec
andl
mov
adc
imul
cmpb
popl
sarl
lret
data16
add
mov
xchg
cmp
mov
ds
pushf
out
push
mov
pop
aam
imul
repz
add
push
ret
cld
js
sbb
dec
les
adc
enter
int
stos
ret
rolb
sti
pop
mov
lock
les
rcl
dec
sbb
mov
dec
mov
adcl
in
push
or
mov
and
ret
outsl
lea
jo
mov
mov
iret
cmp
fstp
iret
xor
call
aaa
outsl
and
iret
push
add
js
cs
jo
push
or
sbb
outsl
or
xadd
dec
push
pop
lds
push
jb
popf
add
pop
mov
cli
popf
pop
pop
xcrypt-ofb
cmpsl
sub
mov
sub
popa
mov
mov
lea
lods
popa
mov
and
push
or
or
in
dec
xor
mov
push
mov
ss
adc
imul
push
dec
xchg
aaa
inc
cs
bnd
insl
cwtl
js
popa
sub
jle
and
push
xor
in
xor
insl
xor
mov
faddl
mov
in
pop
jp
loopne
icebp
scas
ss
pop
rcrb
pusha
movsb
stos
inc
jb
mov
xor
ret
bound
pop
fs
lahf
cli
pop
inc
pop
pusha
pop
mov
in
sub
ficompl
add
dec
pop
insb
sbb
inc
sub
lret
pop
mov
movsb
in
xor
mov
out
jg
jg
into
add
out
mov
or
addl
jp
sbb
aas
xor
aaa
enter
int3
jp
push
mov
xchg
nop
sarl
fists
in
rorb
cmp
mov
mov
xor
push
ja
jl
pop
jmp
loopne
es
dec
inc
cld
fsubrs
pop
and
jne
jbe
mov
iret
fs
and
add
add
fmuls
mov
popa
ret
jmp
inc
jl
bound
push
mov
fs
call
daa
xchg
in
mov
adc
xchg
repz
into
push
mov
push
inc
push
aad
add
xchg
xchg
aas
lahf
mov
cmpsl
xorb
sub
aad
inc
push
adc
cmp
ret
jge
mov
clc
scas
mov
lcall
pop
adc
mov
adc
cld
aad
and
ljmp
adc
dec
bound
or
stos
fisubl
shr
arpl
cmpb
stos
mov
aad
iret
pop
pop
jge
ljmp
or
fadds
sub
outsl
xchg
or
mov
popf
jecxz
sbb
ja
std
cmp
notl
push
push
dec
nop
scas
imul
mov
dec
fldl
xchg
push
popa
faddl
jne
or
push
lahf
mov
fidivrs
cli
adc
mov
out
or
push
dec
int
lret
hlt
ret
xchg
mov
rclb
mov
jp
xor
pop
sbb
or
in
push
repnz
xchg
jmp
push
scas
mov
mov
ret
or
sbb
hlt
mov
and
sbb
in
lock
arpl
cmp
std
mov
rorb
je
jbe
cmpsb
ret
mov
xchg
ds
mov
inc
pop
test
jns
mov
mov
stc
xchg
outsb
ljmp
push
mov
or
stos
cld
mov
or
mov
dec
out
fdivl
push
push
inc
loope
out
push
stos
cmp
adc
call
addr16
adc
mov
fildl
xchg
inc
int
setae
negl
icebp
mov
sbb
fnsave
xor
pop
xlat
out
cmpsl
push
js
pop
sahf
inc
push
jb
mov
lods
fldz
adc
jl
dec
outsb
mov
lods
in
jno
sub
xchg
dec
sub
mov
adc
out
add
push
push
fs
fwait
mov
es
xchg
jo
cmp
stos
jb
aad
add
ret
lret
adc
xor
fsubrl
loop
bound
jns
in
sub
in
gs
push
addr16
jnp
push
sbb
sub
fstl
jns
xchg
mov
or
jns
mov
xor
mov
jg
push
pop
jo
iret
lods
pushf
mov
cwtl
push
pop
sub
mov
xchg
scas
in
pop
out
push
fucom
inc
jp
clc
sbb
xchg
or
scas
stos
dec
mov
mov
mov
mov
xchg
mov
xor
xchg
shll
js
insl
jne
mov
repnz
dec
insb
fistpll
movsb
mov
xchg
rol
lods
in
movsb
dec
xchg
mov
in
sub
ljmp
push
cmp
push
push
fs
addl
lods
sub
cld
sar
pushf
mov
enter
sub
inc
push
jns
pop
or
stc
sub
mov
in
sbb
lea
add
sub
cmc
fwait
cmp
repnz
jb
fstps
in
cli
test
stos
je
ss
mov
pop
cmpb
sbb
mov
cmp
mov
xchg
sub
addr16
outsb
dec
mov
sahf
rcrb
daa
test
notl
pusha
aam
popf
gs
aas
cmpb
push
pushf
cmp
cmpsl
push
movsb
xchg
inc
sbb
mov
add
mov
scas
icebp
into
mov
sbb
ret
pop
pushf
inc
push
data16
dec
outsl
cwtl
pusha
or
dec
loope
xor
mov
push
into
mov
lret
sahf
pop
pop
icebp
aaa
mov
mov
fimuls
push
shlb
xor
movsl
movsl
adc
add
push
sub
push
test
addr16
mov
cmpsb
cmc
jnp
rorb
push
xor
jns
adc
xchg
dec
cmc
ret
lds
or
inc
orl
loopne
repz
repnz
out
imul
incb
cmp
sti
adc
bound
xchg
rcrl
mov
insl
dec
hlt
fiaddl
imul
mov
mov
inc
dec
popf
mov
dec
sahf
mov
inc
adc
inc
popf
out
push
aad
arpl
or
ds
sbb
into
dec
mov
jne
rclb
mov
xchg
mov
and
dec
ja
ljmp
mov
fucomp
dec
pop
dec
insb
adc
inc
jae
aas
xor
test
xchg
stos
daa
jbe
shll
mov
xlat
jg
mov
fidivrs
sbb
lds
lret
mov
mov
sbb
insl
dec
divl
mov
je
imul
cmp
xchg
pop
pop
loop
rorl
mov
dec
lods
jl
jns
loope
push
and
inc
sahf
and
add
repnz
test
iret
stc
imul
dec
fsubs
pop
jb
arpl
cmp
and
dec
mov
xor
jl
mov
in
adc
loopne
leave
mov
add
pop
shrd
inc
test
in
mov
gs
ret
dec
cmp
xor
into
xchg
or
rorl
sbb
cld
faddp
adc
inc
hlt
stos
inc
add
test
je
mov
test
mov
in
pop
lods
in
test
push
xchg
jmp
fnstcw
sar
std
xchg
push
jno
and
xchg
dec
jp
push
add
push
jecxz
sarb
push
xor
std
inc
xchg
sub
fildl
in
jle
sbb
adc
jg
adc
fdivrl
push
mov
xor
ret
ffree
inc
push
add
adc
cmp
pop
adc
pop
push
fidivl
sbb
dec
add
and
jo
test
adc
inc
int3
cmc
pop
shr
jo
pop
stos
scas
mov
jb
ljmp
push
xchg
mov
aad
and
pop
ficoml
inc
leave
jnp
loopne
je
into
outsb
call
inc
inc
mov
push
jo
out
sbbb
mov
fs
inc
push
jle
mov
xchg
mov
inc
push
inc
adc
sbb
sahf
add
mov
fstpl
xchg
fists
fwait
rclb
xor
or
mov
ds
sub
inc
xchg
jnp
push
insb
dec
pop
sbb
insl
inc
shll
xchg
sub
pusha
clc
pusha
cli
neg
lea
inc
test
xor
movsb
rorb
das
or
outsl
data16
lret
dec
xchg
std
stos
jl
cmp
fcom
xchg
mov
lret
das
add
insl
xchg
inc
pop
dec
cmp
rcr
mov
adc
and
imul
stos
out
or
fwait
rorl
mov
push
insb
mov
inc
sub
mov
pop
adc
push
stos
push
repnz
and
outsb
push
imul
xlat
int
dec
and
mov
fdivrs
into
addr16
icebp
push
stc
je
les
adc
jmp
sub
lods
push
push
inc
jo
pop
add
or
fwait
test
adc
fsubl
cmp
repz
mov
jg
pop
std
pushf
movsl
test
mov
push
test
sbb
rcrl
addb
sub
lcall
mov
xlat
cmp
xchg
xchg
or
dec
into
repz
jge
cmpb
fs
jns
dec
loope
lahf
test
sub
lds
pop
pop
push
les
dec
ret
jmp
lcall
or
adc
adc
add
jns
int
mov
movsl
and
xorl
cmc
sub
inc
icebp
sub
push
insb
shl
ss
outsb
dec
xchg
mov
outsl
insb
outsb
adc
mov
cs
mov
cmp
add
hlt
je
jns
lret
cmpsl
jp
loope
popf
sbb
mov
dec
fmuls
sbb
and
cmp
and
daa
cmpsb
push
lahf
mov
or
lcall
ja
dec
cmp
std
push
ja
sub
sbb
ficoms
repz
leave
enter
pop
mov
insb
mov
bound
jg
cmp
cmp
pop
ret
cwtl
mov
dec
cmp
leave
movsb
aaa
jne
movsb
xchg
xor
in
mov
mov
lret
mov
adc
mov
scas
into
add
cmpsl
loop
outsb
inc
inc
jp
xchg
in
aam
xor
sbb
push
dec
negb
pop
and
loope
shll
fdiv
dec
test
pop
cmp
insl
std
mov
dec
mov
push
and
jae
andb
lcall
mov
js
lahf
push
out
and
mov
pop
push
push
add
xor
pop
cltd
jns
pop
push
mov
lock
test
icebp
in
xchg
jg
and
cmc
aas
or
push
jge
sub
xchg
repnz
sbbb
push
or
out
push
out
aas
test
inc
push
stos
add
sbb
imull
mov
lock
idiv
mov
dec
aaa
bound
rolb
ret
cmpl
xchg
call
cli
and
mov
loop
scas
jl
mov
pop
ljmp
movb
push
cmp
fists
push
hlt
push
scas
je
push
sbb
push
stc
sbb
into
scas
mov
or
sbb
jl
dec
lock
dec
call
push
add
inc
gs
dec
jnp
mov
test
in
pushf
lods
lds
mov
sbbl
dec
nop
mov
loope
arpl
jmp
dec
cmp
fwait
dec
xchg
loope
out
jbe
imul
inc
adc
int
pop
mov
in
sti
out
gs
jnp
mov
inc
sbb
nop
sbb
push
ljmp
test
add
lea
add
notl
and
hlt
cmpsl
adc
xor
aam
sbb
addl
add
out
mov
add
dec
negb
arpl
sbb
jo
fcompl
and
push
in
lcall
mov
icebp
call
into
mov
xchg
push
or
sbb
add
or
mov
cs
mov
add
add
pusha
push
push
divl
xor
dec
in
daa
test
int3
mov
lret
test
adc
outsb
enter
or
mov
shr
jecxz
incl
cmp
imul
outsl
test
pop
ja
enter
hlt
xchg
add
adc
cmp
fildl
mov
lret
imul
add
pop
fwait
jp
cld
cmp
xor
push
pop
sahf
lods
lds
loopne
loopne
xchg
out
mov
pop
out
loop
xchg
push
cmp
aas
repnz
and
jl
add
into
push
mov
push
out
sub
or
data16
jb
cwtl
push
xor
jecxz
push
push
pop
sub
pop
push
test
cwtl
sub
rclb
cs
dec
popa
int
mov
xor
pop
lcall
mov
push
and
jl
mov
in
loop
cmp
outsl
xor
in
push
mov
or
mov
mov
ljmp
out
sahf
test
jle
scas
sbb
mov
dec
sub
into
aaa
or
std
pop
pop
in
loope
or
sti
subb
mov
mov
jl
jne
mov
testb
jle
lret
enter
fistl
or
rep
into
pop
repnz
inc
or
push
repz
jle
scas
cmp
add
xchg
lock
cmpb
adc
es
add
push
inc
popa
fnstenv
mov
insb
push
adc
in
sub
sbb
and
xchg
int3
mov
les
fnstsw
add
insb
xor
scas
mov
lea
aad
sbb
jmp
inc
divl
pushf
inc
fs
push
fcomps
pop
mov
push
sbb
mov
dec
mov
pop
fbstp
icebp
jp
negb
push
push
aaa
addr16
aas
gs
sub
mov
dec
xchg
sbb
fdivl
out
fisubrl
push
inc
stc
hlt
je
sub
pop
lahf
jae
aad
pusha
xor
push
mov
add
std
jnp
cli
xlat
insl
leave
cmpsl
les
sarb
jp
repz
fmull
cwtl
cmp
pushf
push
les
pop
push
bound
mov
xchg
inc
jae
pushf
push
mov
sub
xchg
jb
jg
mov
shrb
lret
adc
outsl
shrb
cltd
fidivs
xorl
pop
inc
into
or
mov
mov
jnp
lret
adc
pop
jmp
dec
out
rcr
mov
int3
mov
or
ret
std
cmc
cli
je
aaa
imul
fsubrs
pop
jns
lods
xor
hlt
pop
addr16
pop
ffree
dec
fcomps
xchg
popa
xor
ret
cld
xchg
jno
divb
gs
out
rclb
pop
sub
mov
add
inc
fstpl
daa
push
mov
pop
add
sub
mov
sub
fiaddl
or
pop
mov
testl
cvttps2pi
dec
sbb
and
or
in
or
mov
in
addb
mov
jne
mov
mov
push
lahf
mov
loopne
jl
jle
dec
popf
jo
loop
xchg
xor
imul
pushf
jg
add
and
inc
daa
mov
jo
js
xlat
pop
add
lret
push
jg
out
dec
shl
arpl
ljmp
icebp
sysenter
adc
inc
sbb
mov
push
push
dec
scas
adc
jno
clc
cmp
clc
aad
fcmovnu
jl
rorb
iret
dec
in
add
sbb
orb
pop
and
mov
mov
fldcw
inc
push
pusha
lcall
fldenv
outsl
dec
mov
mov
popf
cmp
aam
imul
xor
mov
pop
aaa
add
fdivrs
aam
imul
dec
hlt
jae
cmpsb
repnz
mov
andl
jp
std
mov
dec
js
iret
mov
adc
sbb
in
das
mov
sub
out
mov
ret
pop
mov
jl
rclb
sub
sub
cli
rcpps
pop
jb
lcall
sbb
pop
lcall
out
cmp
sahf
mov
insl
inc
xor
cmc
fisttpl
outsl
ret
pop
lret
adc
outsl
lea
mov
imul
les
int3
loopne
js
pop
and
xchg
movsb
in
xor
movsl
adc
dec
mov
inc
in
daa
push
mov
add
push
mov
fcompl
jne
jb
dec
mov
push
stos
fwait
mov
outsl
cltd
notl
mov
sbb
jle
mov
push
dec
push
xor
call
pop
cwtl
out
jmp
sub
sbb
and
mov
inc
dec
shl
loopne
insl
data16
adc
std
push
test
sub
push
notb
loope
cltd
sub
call
push
or
mov
jns
cmc
xchg
sub
add
test
jno
jmp
ja
xor
insl
sbbb
or
jle
pop
lds
xchg
jecxz
stos
dec
cmp
imul
xor
xchg
cld
inc
and
lods
push
xor
enter
jbe
cmp
push
or
add
jns
mov
nop
int
xchg
lock
inc
insl
sub
pop
sti
dec
add
dec
insl
sbb
insb
int3
jne
dec
mov
loopne
lahf
push
in
add
mov
dec
in
in
popa
or
outsl
stos
aas
push
push
xchg
inc
aam
sub
pusha
add
xchg
cmpsl
cmp
xor
push
or
enter
mov
fucomp
fldcw
js
jp
insb
dec
sub
sahf
mov
jbe
mov
pop
flds
js
aas
pusha
pop
xor
mov
jno
rcll
insb
push
in
jp
hlt
lahf
mov
mov
ret
insb
xchg
inc
inc
cld
xor
cmp
fsubrl
arpl
xchg
hlt
jae
call
push
mov
lret
into
insl
jns
sahf
jg
xchg
movsb
sbb
shlb
fbstp
int
mov
loopne
mov
jae
xchg
pop
std
xchg
or
push
clc
popa
lahf
cmpsb
stos
push
pop
leave
xor
adc
cmpl
add
sbb
mov
les
cmp
and
push
iret
dec
idiv
and
scas
adc
mov
jb
arpl
arpl
jae
pushf
push
rclb
dec
mov
mov
sub
add
popf
lods
cmc
clc
jg
mov
sti
inc
sbb
jmp
stos
scas
sub
lock
ljmp
jns
dec
xchg
mov
mov
sub
or
aam
loopne
or
mov
mov
or
lret
inc
pop
cmp
xor
xor
test
pop
leave
stos
aad
ds
mov
add
xchg
pop
vorps
int
stc
insl
push
jg
out
mov
pcmpeqw
push
adc
test
mov
or
and
outsl
push
sub
or
dec
xchg
jecxz
add
enter
in
cmp
push
and
fmulp
leave
adc
and
mov
cs
mov
call
lods
mov
jmp
pushf
stos
push
ret
fcoms
fs
andl
movsl
testb
nop
pushf
xchg
sbb
cmp
mov
push
popl
test
icebp
lahf
test
push
dec
push
pop
andl
movsl
push
sub
movsb
cmp
movsl
movsb
stc
and
cwtl
mov
cmp
iret
xchg
lret
fnstsw
sbb
mov
je
jmp
ds
jmp
mov
inc
dec
test
aas
loop
mov
insb
cmp
je
ja
fcomps
rcr
and
aad
xor
mov
mov
out
cmp
xchg
in
inc
pop
test
add
push
rep
jge
arpl
pop
dec
fstps
outsl
pop
lahf
push
jne
mov
dec
xchg
rcrl
test
add
add
sub
lret
js
adc
jp
mov
ret
in
cwtl
cmp
sbb
jg
mov
aas
jne
push
pushf
inc
int
rorl
dec
or
je
dec
inc
dec
mov
je
mov
ret
ds
lret
iret
add
outsb
cltd
lock
xchg
xor
lret
daa
jg
xor
fsubrs
outsb
roll
mov
cmpsl
sbb
clc
out
jg
sbb
enter
test
or
sbb
sbb
xchg
xor
xor
inc
mov
push
jl
mov
into
ret
jp
sbb
es
arpl
xlat
subb
push
std
sub
jb
sbb
loop
pop
popl
jecxz
std
popa
hlt
sub
jno
fsubl
mov
je
push
adc
push
jae
inc
jmp
mov
push
dec
mov
pop
imul
popf
stc
lahf
dec
add
xchg
mov
lds
shlb
aad
lret
xor
inc
fisttpl
mull
in
pop
xchg
aam
daa
jb
xchg
adc
pop
dec
jae
add
sub
ret
jns
sbb
xorb
pop
jb
sub
ja
mov
xchg
mov
xlat
mov
clc
pushf
xor
lea
jl
xlat
jbe
push
dec
sbb
jecxz
pop
outsb
test
push
adc
push
or
call
icebp
jmp
loop
jbe
das
sub
and
cld
faddp
sub
andb
aaa
inc
sti
xor
jb
dec
mov
dec
push
nop
adc
jge
push
xchg
dec
push
mov
fwait
push
xor
std
sub
icebp
cmp
push
movsl
mov
xchg
sub
adc
shrb
push
adc
test
cmpsb
cli
xlat
xchg
or
add
fnstenv
sahf
adc
sti
fildl
js
jns
xlat
lods
xchg
inc
and
or
mov
lods
inc
test
pop
imul
xorb
or
xchg
ds
jle
push
out
inc
jne
sbb
adc
cmpsl
cld
adcb
addr16
push
inc
roll
in
xchg
loop
push
mov
cmp
sbbl
cld
lret
mov
push
pop
sbb
movsl
add
fwait
or
fimuls
fisttpll
nop
insl
cwtl
push
push
retw
push
mov
je
repz
cmc
aaa
push
xor
xchg
push
in
test
jge
psrad
out
cmp
leave
dec
int3
icebp
aaa
push
xchg
scas
icebp
test
mov
jne
into
xor
mov
dec
mov
mov
outsl
hlt
negb
xchg
xchg
and
dec
orl
loopne
sahf
sbb
mov
lods
sbb
loop
push
cwtl
pop
inc
or
je
xchg
jle
mov
call
stos
cwtl
rorb
pop
mov
clc
mov
mov
pop
mov
jg
jge
xchg
pop
addb
inc
mov
mov
cwtl
imul
cmp
lea
pop
dec
cmp
push
push
dec
inc
ljmp
andl
cmp
in
jle
adc
fcoml
addr16
jg
aam
pop
cld
cmp
sarl
and
xchg
push
xlat
and
mov
push
sub
and
lods
mov
adc
jecxz
sub
fst
fucomi
pop
bnd
and
cmpsl
cmpsl
mov
fs
cmp
insb
push
dec
imul
cmp
jnp
jp
xor
sbb
mov
lcall
les
cmp
mov
xchg
inc
mov
push
out
in
pop
testl
push
cmp
add
mov
aad
in
subb
jb
add
xchg
out
shlb
cli
add
daa
or
in
mov
push
test
fsubrs
and
xchg
loopne
jl
scas
fidivs
or
and
jnp
into
js
cmp
rclb
sub
adc
pop
xchg
lea
xchg
jns
push
jl
push
push
cmpsl
call
cmc
sub
add
adc
sub
sub
xchg
dec
pop
sbb
arpl
pushf
aas
xlat
mov
mov
pop
shl
inc
insl
or
adcl
mov
pop
add
jg
push
in
loope
imull
pop
or
out
insl
lods
jo
jmp
xchg
imul
and
stc
lret
jb
adc
pop
sub
cmp
sub
outsb
and
aas
nop
pop
int
add
stos
ja
repz
sbb
cmp
push
out
push
sbb
cmp
mov
loope
rcrb
or
das
dec
jae
cmp
js
ljmp
icebp
inc
outsb
sahf
ret
pop
test
inc
jecxz
lea
xor
xchg
test
les
cmpsl
pop
cmp
fs
xor
jo
cwtl
jnp
out
test
fcoml
inc
pop
shlb
sub
adc
jb
mov
fdivl
inc
imulb
insl
repnz
aam
pop
adc
dec
push
xor
xchg
repnz
mov
mov
xchg
mov
sub
jle
push
adc
dec
add
cwtl
stc
leave
mov
mov
dec
sub
push
pop
imul
ljmp
stos
ficoms
inc
jns
cmp
repz
mov
dec
xchg
and
fcomps
in
das
pop
push
pop
fwait
xchg
cli
divl
jg
jp
dec
xor
jecxz
xchg
push
imulb
cmp
loope
dec
hlt
sbb
pop
cmp
mov
inc
mov
xor
inc
test
or
mov
xchg
or
shr
mov
xor
xchg
mov
les
popa
mov
mov
mov
enter
lock
sbb
or
ret
clc
or
icebp
pop
stos
cmp
sahf
jmp
xchg
xor
out
cltd
rorl
mov
fldl
adc
inc
push
push
into
lods
jmp
cltd
mov
sub
scas
cltd
mov
xchg
or
lcall
adc
imul
jmp
mov
cwtl
add
pop
dec
dec
sub
js
cli
test
leave
mov
fdivs
cmpl
mov
pop
sub
pop
xchg
popl
jo
cvtdq2ps
iret
sbb
mov
jge
nop
and
cmp
push
ds
push
insb
push
sbbl
adc
dec
ret
stos
mov
and
cmpsb
adc
push
les
cmpsb
arpl
lods
dec
lahf
sub
das
xchg
mov
adc
sahf
xchg
mov
push
std
cli
push
sti
cmp
dec
arpl
mov
mov
sbb
or
call
inc
scas
ljmp
add
xor
dec
sub
xchg
aad
xchg
dec
mov
outsl
jno
aad
or
or
sar
hlt
mov
cmp
mov
out
lret
xor
adc
fstpl
cmc
bound
rcr
int
xor
imul
ffree
push
scas
push
push
arpl
shll
xchg
test
pop
scas
adc
repnz
aaa
pushf
fyl2xp1
pminsw
sarl
pop
jbe
mov
fcmovbe
adc
ret
mov
mov
inc
mov
push
lret
bound
mov
sub
negb
and
dec
push
pop
xor
mov
imulb
mov
test
xchg
and
push
outsl
push
mov
push
mov
pop
cwtl
inc
xchg
and
notl
negl
call
jno
daa
das
add
es
sub
lret
lods
sub
jle
add
inc
cmpsb
cmp
bound
push
lret
gs
or
sub
pop
jecxz
fsub
loope
lahf
daa
js
imul
or
or
jl
pusha
lock
loopne
mov
add
jp
inc
enter
int3
ja
or
icebp
mov
rol
push
stc
fs
fcmovbe
xchg
xor
mov
pushl
xchg
dec
mov
inc
push
popa
mov
mov
ret
cmp
fistl
mov
mov
lock
es
wbinvd
xorl
add
fidivrs
xchg
je
mov
jmp
and
cli
push
dec
mov
sti
sbb
fisubl
fsubl
popf
sahf
subl
cmpsb
ret
xor
sub
xchg
into
inc
xor
push
mov
aas
cmp
mov
daa
sub
mov
cs
incl
fs
lret
cs
or
adcl
aad
fstl
aaa
cmc
mov
jmp
sbb
into
cmpsl
test
sub
adc
shll
nop
adc
mov
in
std
push
and
rcl
xor
add
cmp
imul
pop
xchg
in
sub
push
fisttps
and
sub
call
jb
mov
sub
push
loopne
inc
daa
or
daa
jno
jl
out
sub
sub
push
aas
jne
hlt
pop
sarl
fmuls
sub
jno
xchg
ljmp
mov
inc
out
push
jg
int3
std
fidivs
movsb
pushf
push
push
orl
icebp
cmp
and
cmpsl
xchg
fwait
push
mov
pop
mov
mov
xchg
mov
pop
repnz
jbe
add
xchg
leave
loopne
fwait
ds
jno
andl
clc
jmp
xchg
dec
pop
mov
lods
xlat
fnstenv
pushf
sub
sub
pop
ja
pop
loopne
and
cld
cmp
into
cmp
add
cwtl
dec
mov
fdivrs
jbe
lods
les
pop
cmp
aaa
mov
pushf
push
out
iret
ss
pop
clc
cmc
mov
cmp
mov
ret
ljmp
sbb
or
js
shl
clc
jns
cwtl
mov
loopne
push
in
pop
mov
fdivs
movsb
sti
push
push
cvttps2pi
push
adc
inc
sub
cmp
sub
les
addr16
sub
xchg
xchg
or
ja
adc
lret
or
shll
call
mov
lds
lret
inc
pop
and
hlt
movb
jbe
cwtl
pop
xor
mov
mov
xchg
push
int
mov
popf
pusha
jbe
or
ret
int3
or
xchg
ret
dec
stc
pop
jae
scas
out
lahf
xlat
sub
sub
int3
dec
push
lcall
push
mov
repz
loop
mov
popf
jmp
lods
add
mov
or
mov
std
sbb
dec
js
iret
or
imul
inc
int3
das
ret
or
lret
aaa
mov
nop
inc
out
nop
in
lods
movsl
out
or
jbe
adc
and
adc
int3
sbb
jnp
pop
or
test
xchg
nop
xchg
test
sbb
popw
notl
adc
outsb
cmp
mov
sub
loopne
xor
dec
sahf
gs
sub
pop
pop
fcoms
cmp
jno
mov
jle
imul
mov
or
add
pop
or
pop
test
loopne
cmp
divb
dec
stos
jne
jge
test
loopne
movsb
outsb
imulb
ja
nop
repnz
jo
sub
mov
push
andb
stos
xchg
lret
pop
adc
inc
loope
xor
fs
movsl
test
mov
js
mov
scas
cmpsb
dec
out
cmpsb
test
ja
inc
in
pop
movsb
std
sbb
or
adc
or
jns
push
push
add
adc
mov
stc
add
scas
sahf
mov
je
push
adc
pop
lret
ja
xchg
iret
nop
loope
mov
sbb
rcr
ss
fiadds
sub
mov
add
xor
cld
movsl
lods
outsb
push
jp
xorl
cs
sbb
sbb
cmp
xor
ja
xlat
sbbb
sbb
adc
adc
arpl
je
out
xchg
lock
adc
sbb
out
mov
pop
dec
fstps
cmc
pop
subb
idivb
lds
fists
testl
push
adc
js
push
repnz
in
ret
xor
in
xchg
mov
popf
lcall
mov
dec
sub
aam
cltd
inc
call
rorl
aas
dec
and
fistpll
mov
sbb
call
inc
or
dec
insb
in
negl
lcall
or
xchg
loopne
jns
push
jne
aam
lcall
out
imul
pop
pop
out
rcl
je
dec
hlt
fidivrs
dec
dec
mov
xchg
add
mov
jbe
cmp
aad
lahf
ljmp
into
movsb
pcmpgtw
push
mov
cmp
adc
daa
outsl
negl
fdiv
inc
sub
dec
xchg
enter
fbld
les
pop
sub
cmpsl
inc
js
mov
mov
lock
xchg
loop
and
inc
cwtl
mov
es
int
jne
ja
pop
lret
jne,pt
add
push
daa
mov
mov
and
popa
adc
mov
jnp
cmp
inc
fbstp
inc
std
xor
aas
ja
dec
fistps
mov
xchg
outsb
sbb
push
ljmp
ja
xchg
roll
lret
jb
mov
add
xchg
clc
cmpsb
jo
je
std
inc
pop
mov
xchg
xchg
incb
xchg
push
mov
shlb
xchg
scas
popl
shlb
xchg
xor
inc
stos
ljmp
pop
hlt
lcall
mov
out
push
jnp
pop
cmpsb
stos
repnz
push
fcoml
mov
inc
push
hlt
imul
gs
mov
shl
xchg
sbb
mov
outsl
xor
rorl
sti
sub
dec
mov
xor
mov
and
cmpl
es
adc
bound
jb
lea
push
addl
cmp
mov
jp
jmp
leave
xor
movsb
les
out
mov
scas
sbb
xchg
dec
rcll
fcmove
stc
call
lret
sbb
inc
mov
cld
std
add
add
aas
ja
and
arpl
sar
mov
pusha
scas
pop
push
push
cwtl
int
out
iret
daa
mov
cmpb
dec
into
lret
mov
push
push
pop
int3
cmc
xor
int
add
jbe
adc
pusha
pop
cmp
jnp
pop
cmp
jno
jnp
fidivs
stos
addr16
and
fcompl
leave
or
test
jmp
or
lret
mov
mov
mov
test
cmpsl
stos
imul
push
xorl
movsb
cwtl
test
clc
xor
test
call
loopne
int
sub
and
and
fwait
aaa
lret
std
xor
inc
inc
inc
int
inc
fidivrs
cli
dec
pop
jno
in
adc
mov
movsl
sbb
out
mov
lret
pop
jo
mov
jg
sbb
or
test
out
pusha
dec
in
add
dec
cld
adc
pop
mov
jnp
arpl
int3
mov
jmp
push
mov
jle
inc
fwait
push
pop
pusha
or
testl
pushf
fwait
idivl
aaa
pop
pop
adc
repz
in
adc
gs
fidivrl
in
mov
subl
push
cmp
inc
shll
xchg
pop
lods
push
lds
adc
outsb
mov
negl
scas
ljmp
inc
push
nop
cmp
or
std
mov
sbb
sub
sbb
imul
ret
and
mov
add
pop
daa
fwait
sbb
dec
ja
cld
fldcw
pop
sub
iret
pop
pop
rcl
inc
push
scas
aas
and
mov
fucom
dec
dec
iret
leave
ja
pop
sub
xor
dec
movsb
fidivs
jae
jne
xor
mov
jg
or
sbb
mov
popf
push
inc
int
call
adc
les
mov
repnz
loop
xor
insl
fisubs
add
push
dec
sbb
pop
mov
push
aad
jmp
cmp
push
popf
inc
sbbl
or
test
jg
adc
and
shll
mov
xlat
nop
roll
or
mov
data16
inc
push
rcrl
divb
cmovbe
ds
and
inc
fs
and
lahf
out
jle
adc
int3
or
pop
mov
pop
notb
iret
cmpb
lods
adc
mov
frstor
sub
or
sbb
mov
dec
pushf
lds
xor
fs
mov
mov
xor
push
or
mov
int3
test
lcall
xlat
adc
leave
daa
enter
push
pop
xor
or
bound
mov
pop
mov
cmp
icebp
test
sub
notl
js
mov
mov
mov
or
out
sti
xor
mov
xchg
add
in
cmc
sub
pop
add
div
fmuls
cmp
jnp
movsl
add
lcall
outsl
jne
pop
iret
push
pusha
inc
rcll
pop
rcrl
repz
fsts
sub
mov
dec
mov
pop
jne
cmp
cmp
fs
mov
leave
into
mov
out
push
jg
ljmp
arpl
mov
mov
or
gs
inc
add
ss
inc
xchg
es
cmp
cmp
imul
pop
push
ret
cmp
mov
cmp
sub
jns
cs
enter
fldz
adc
js
jp
sub
adc
push
xchg
in
dec
xor
mov
imul
or
and
inc
fidivs
add
int3
imul
ret
push
repnz
fwait
sub
jl
scas
mulb
hlt
shrb
add
pop
out
ret
inc
stc
aad
add
stos
xor
and
inc
push
test
push
jecxz
jae
shlb
pop
inc
add
mov
pop
jecxz
sbb
aam
sarl
out
dec
fcmovbe
inc
xor
xchg
or
inc
dec
std
dec
cmc
add
jmp
pop
popa
divl
mov
adc
xor
xchg
ret
imul
jns
pop
shlb
movb
pop
daa
pop
jle
fldpi
lods
leave
push
sbb
add
ficomps
inc
outsb
mov
insb
pushf
mov
fistpll
mov
fsts
sahf
adc
mov
sbb
lds
clc
stos
push
push
jb
add
loopne
dec
inc
movsl
or
cmc
push
repz
mov
in
stos
push
dec
mov
out
scas
aad
mov
sbb
pop
inc
add
xor
push
jbe
mov
aaa
rcll
inc
incb
shll
add
stos
clc
shrb
movsl
addr16
sbb
mov
mov
insb
outsl
mov
push
or
sbb
sub
clc
or
gs
xchg
mov
pop
out
cwtl
lret
jmp
jmp
rcrl
sbb
fdivrp
iret
je
in
mov
jg
cmp
push
repz
and
cmp
add
loope
out
ret
adc
movsl
inc
rolb
test
adc
in
cmp
pop
fwait
hlt
xchg
sub
mov
lret
int3
lret
dec
test
adc
loop
pop
and
mov
imul
jp
js
mov
mov
mov
daa
mov
xor
pop
or
lret
call
inc
ret
mov
push
and
pop
imul
sahf
pop
icebp
mov
mov
push
div
enter
pop
iret
push
xchg
xor
cmp
fwait
call
xchg
arpl
push
mov
add
loope
xorl
adc
cmp
mov
rolb
icebp
jno
push
std
push
push
loope
jle
or
pop
mov
mov
stos
dec
mov
pop
leave
jbe
sub
bnd
out
fimull
mov
xlat
test
sub
mov
movsb
jge
shll
and
jb
add
icebp
idivl
push
mov
sub
stc
gs
out
inc
out
mov
fcompl
and
add
psubsb
fucomi
xchg
cmp
pop
in
push
mov
adc
mov
rcll
xor
push
pushf
stos
ds
push
outsl
or
mov
icebp
pcmpeqw
shlb
cs
adc
fidivs
push
ds
test
inc
and
dec
or
stos
call
aas
cmp
mov
pushf
aas
pusha
fcmovnb
sub
adc
ret
push
push
dec
mov
aam
sbb
dec
cmp
dec
jp
mov
sbb
adc
ja
mov
ljmp
shll
cmp
inc
mov
lea
push
push
dec
sub
outsl
outsl
mov
addr16
out
jns
push
into
ds
das
or
inc
in
fld
insb
inc
and
or
sbb
roll
xchg
xor
sub
xor
push
ret
lods
cli
je
xor
inc
cmpb
mov
push
popa
das
jb
aad
push
ja
fidivl
xchg
stos
jae
pop
out
aad
cmp
dec
or
sub
jge
mov
inc
adcl
cli
jg
nop
call
shll
and
push
dec
sahf
mov
cs
fistps
sub
mov
jo
inc
stos
cld
fs
mov
pop
pop
sbb
imul
roll
or
aam
lcall
xlat
adc
arpl
insb
fstl
mov
mov
pop
adc
popa
jg
stos
jle
push
es
es
mov
test
mov
cs
pop
lea
stos
mov
fwait
xchg
dec
jnp
xchg
test
lods
shlb
pop
pop
push
jp
in
adc
sbb
and
pushw
insl
fsubs
sub
sbb
sahf
mov
sahf
sub
dec
shlb
cld
repnz
outsb
and
jecxz
filds
aam
test
int
mov
mov
es
and
or
pop
pop
fcomps
mov
cmp
adc
popf
loop
cmc
cmp
lcall
adc
fidivs
stos
je
icebp
cmp
push
imul
xor
xor
test
sbb
out
mov
mov
cmp
add
mov
ds
pushf
and
and
repnz
popa
cmpsl
xor
jns
das
mov
sbb
sbb
in
dec
jecxz
dec
add
xchg
fwait
rorb
cltd
loopne
into
fnsave
mov
scas
lods
iret
xor
scas
push
leave
fistl
jns
test
popa
repnz
jmp
ja
bound
cs
aad
mov
inc
push
mov
xor
and
pop
mov
inc
lcall
mov
jb
out
cltd
hlt
daa
push
xchg
mov
adc
roll
push
and
dec
add
fdivs
dec
outsb
push
cs
test
es
dec
stos
ds
in
lret
inc
xor
dec
xchg
push
and
xorb
dec
jg
push
leave
out
push
je
mov
scas
insl
push
mov
xchg
cltd
es
addr16
mov
movsl
mov
xor
mov
inc
adc
pop
jl
fsubrl
jp
push
adc
add
andb
cmp
addr16
popl
mov
call
pop
fsts
inc
cmp
ret
out
adc
and
scas
cmp
push
js
popf
cmpsl
movsb
out
push
repz
inc
mov
cmp
push
jmp
add
xchg
xor
cmp
test
mov
add
cmp
outsl
jp
lods
lahf
xor
pop
pop
jnp
jo
adc
jg
or
mov
push
mov
out
das
rolb
aas
or
popf
mov
lcall
bound
movsl
pop
or
idivb
stc
sub
mov
and
out
xchg
rcr
xchg
push
fdivl
adc
ss
clc
and
fwait
les
add
out
lds
pop
dec
cs
jg
insl
fsubrl
rcrb
cmp
jns
mov
xchg
rcl
es
rcrb
dec
cmp
cmp
jge
outsb
push
jno
inc
stos
push
adc
in
stos
push
sub
xor
ds
mov
jbe
into
loope
sub
test
pop
rcl
xor
scas
add
push
xor
sbb
loopne
test
push
add
push
into
jo
sub
cmpsb
mov
jg
je
sbb
movsb
pusha
into
clc
adc
sbb
scas
mov
xor
dec
popa
andb
pop
shrb
xor
in
inc
mov
mov
xchg
in
cwtl
or
jg
pop
mov
inc
or
add
cmpsb
iret
sti
sub
add
mov
jge
and
xor
icebp
adc
or
dec
xlat
shll
sbb
ret
jmp
sub
add
scas
scas
xchg
scas
cli
stos
sbb
pop
aas
enter
adc
xchg
mov
in
lds
add
add
xchg
andl
jmp
cmp
push
adc
dec
push
jbe
push
in
sahf
sbb
sar
mov
fwait
sti
hlt
mov
add
sub
fadds
mov
xlat
push
mov
adc
inc
negb
adc
ss
xchg
or
pop
pop
rolb
mov
test
mov
xchg
ret
cmp
cmp
mov
into
inc
clc
cmc
test
aam
xchg
jno
in
xchg
xlat
and
xchg
stos
dec
gs
into
mov
out
in
dec
xor
pushf
jne
out
insl
pop
stos
in
mov
pusha
dec
jb
repnz
push
test
mov
mov
adc
je
imul
inc
or
popf
lret
jo
jbe
adc
jo
mov
xor
sub
mov
dec
mov
mov
mov
aad
mov
cli
lds
cld
lods
sub
sbb
adc
aam
jmp
stc
jno
jl
sti
jecxz
and
sub
push
cmp
test
mov
add
sbb
jg
sub
icebp
or
ss
out
adc
or
jl
inc
cmp
and
mov
jmp
push
repnz
test
sub
jmp
cmp
aas
pop
jmp
je
cmovbe
xchg
xchg
xor
in
push
inc
aad
imul
adc
lret
mov
pop
push
push
xor
ret
lret
and
adc
insl
les
ss
dec
xchg
xchg
fmull
call
mov
inc
inc
lds
movsb
lods
dec
jecxz
mov
lret
jl
and
jl
mov
out
cmpsl
icebp
push
mov
push
add
inc
dec
mov
or
adc
inc
pop
xor
mov
adc
jg
shlb
ret
pop
push
mov
sarb
or
sbb
mov
icebp
cmpsb
sub
cmp
ss
cltd
adc
cmp
lcall
in
orb
mov
mov
jno
mov
cltd
cmc
fldt
aaa
sahf
fnstsw
movsl
inc
mov
fdivr
cmp
adc
lret
adc
test
test
cmp
lods
dec
test
mov
or
jb
shrl
shrb
ljmp
push
or
popa
popa
cmp
cli
pop
cmp
mov
sub
or
ds
loopne
fwait
or
dec
push
cmc
or
or
push
push
mov
mov
out
arpl
cmp
mov
negl
jb
out
dec
rcrl
aad
cmp
imul
jl
insl
dec
movsb
mov
jle
inc
setnp
push
jae
mov
cwtl
aad
ret
mov
bound
iret
dec
ds
mov
jecxz
xchg
or
cmp
les
cmc
lahf
cwtl
sbb
jl
outsb
adc
and
sub
cli
sarl
les
adc
adc
fsubrs
lcall
xchg
cmp
fcmove
pop
lock
jno
or
pcmpgtw
lahf
push
lahf
stc
inc
push
decb
test
test
lret
pushf
orb
cs
pop
mov
ret
cmpsb
jb
std
js
jne
in
pop
daa
andl
dec
push
inc
adc
jmp
scas
jo
sbb
jg
jecxz
adc
push
pop
js
call
pushf
imul
mov
iret
inc
jo
cltd
jmp
adc
in
call
jbe
lods
mov
fistpl
mov
jae
sub
xchg
xchg
test
xchg
push
dec
mov
jl
cmpsb
pop
mov
dec
mov
and
aas
or
arpl
add
mov
orb
add
add
add
mov
mov
and
mov
int3
adc
pop
jecxz,pt
dec
pop
lret
cmp
jg
in
sbb
pop
sub
sbb
xchg
push
nop
out
cmc
sbb
cmc
cmc
ds
sbb
inc
jnp
dec
cmp
shlb
imul
loop
clc
dec
in
data16
loop
sub
cli
popf
jno
test
inc
mov
lahf
jae
sbb
orl
ret
cmc
cmpsl
or
pop
sub
cs
inc
nop
add
adc
aas
jno
jo
int3
push
lock
lret
jmp
repz
xchg
lds
shrl
in
adc
inc
fsub
xlat
xchg
fcomi
xor
push
mov
push
scas
rcrb
xchg
dec
loope
jo
cmp
jns
push
test
fnstsw
cmpsl
mov
sub
dec
lahf
xor
push
clc
sbb
push
jbe
fisubrl
mov
in
int3
es
jmp
mov
lock
fisttpll
out
adc
stos
sub
shlb
into
mov
jp
jae
xor
or
and
fistpl
mov
cmpsl
aaa
pop
rolb
xchg
ja
mov
movsl
les
ja
cmpsb
jnp
cmp
mov
hlt
subl
mov
xor
mov
jae
in
jb
pop
pop
stos
jo
dec
rorb
and
pop
mov
gs
push
sub
scas
xor
jns
push
sbb
daa
fcompl
icebp
loopne
push
imul
repz
fs
rorb
push
add
inc
pop
push
fs
stc
xor
and
in
pop
or
popfw
jnp
or
jne
divb
inc
jle
imul
mov
jle
mov
push
jns
sbbb
pop
cmp
ja
lret
or
inc
repz
jl
loope
mov
clc
mov
call
add
cmpb
enter
aas
cmp
mov
cmpsb
mov
ds
xchg
sbb
push
push
lret
cmc
fimull
inc
xchg
imul
fmuls
dec
jl
or
inc
cmp
sub
pop
mov
add
xor
jecxz
jl
mov
aam
insl
and
mov
repnz
cmpsl
pop
sbb
shr
push
add
stos
out
in
stos
pusha
test
scas
gs
push
and
cmp
adc
sar
sub
fstpt
addr16
cmp
ds
in
push
mov
mov
push
sub
bound
insl
inc
inc
sbb
lahf
rcl
or
ja
cmp
pop
inc
aaa
jmp
mov
cs
iret
hlt
push
sti
ret
pop
push
fcmovbe
xchg
pop
clc
std
pop
adc
sbb
push
rcl
mov
aas
adc
mov
jo
lds
dec
ja
lea
xor
jmp
fmull
fcmovnb
or
ljmp
out
ficoms
pop
mov
ret
sbb
mov
jge
sub
leave
add
push
or
mov
pop
aas
add
movsb
inc
dec
and
gs
aad
adc
test
test
inc
sub
jo
incl
inc
in
hlt
data16
lahf
push
pop
lret
aad
inc
not
lea
add
aam
test
fisubl
fdivrl
enter
mov
pop
inc
repnz
rcrl
fcomip
mov
adc
pop
mov
mov
mov
or
dec
js
mov
inc
int3
outsl
add
xchg
flds
mov
pop
xlat
mov
repnz
cmp
jno
and
jbe
lds
adcl
outsl
sub
pop
push
loopne
or
movsl
xchg
push
lea
lock
outsl
pop
pop
jp
add
ret
pop
mov
pushf
push
inc
push
lcall
lret
notb
cli
ret
mov
cmp
scas
rorb
sbb
pop
jle
sbb
mov
xchg
lods
sahf
lret
insb
inc
xchg
rcll
movsl
fidivs
rcll
push
aas
xchg
std
mov
xchg
jl
imul
mov
cld
inc
fsubl
pop
dec
or
jne
imull
mov
daa
mov
dec
fwait
push
ljmp
sub
sub
fmul
mov
pop
and
xchg
push
pushf
sbb
rorb
and
out
sub
add
mov
add
push
stos
add
xchg
add
or
xor
sub
pop
shlb
roll
popf
jecxz
jge
jg
popf
push
call
pop
cli
cmp
pop
or
pop
dec
std
nopl
mov
jmp
arpl
jbe
fimull
ret
add
pop
lods
adc
jmp
push
dec
sub
mov
sub
sahf
sub
xchg
add
aaa
in
cmp
shlb
jnp
cmpsl
xor
rorl
cmp
into
hlt
insl
and
fistl
xor
jmp
pop
add
mov
lods
loop
xor
and
jnp
test
cli
lock
ds
outsl
push
das
test
fsubrl
stos
pop
cmp
pop
pop
sub
fidivl
shr
hlt
sbb
imul
xchg
ss
shr
adc
jmp
bnd
jnp
inc
lods
iret
aam
mulb
fldcw
lds
xlat
xor
fmulp
inc
rorb
inc
push
arpl
les
sub
xchg
add
adc
or
mov
pop
jae
in
lret
dec
enter
scas
mulb
or
icebp
stos
xchg
enter
iret
imul
loopne
mov
fdivp
mov
js
sub
dec
lahf
push
pop
mov
xchg
test
or
fiadds
pop
xchg
sub
mov
or
movsb
jg
fisubl
mov
pop
pop
movsb
int
hlt
rcrl
cmp
outsl
mov
rorb
push
add
fimull
int3
call
lret
scas
push
push
jl
loope
sub
pop
jle
cwtl
sub
push
gs
lods
xchg
in
adc
xchg
icebp
and
inc
in
icebp
movsl
pop
dec
xchg
mov
cmpsb
ss
sub
jae
in
mov
inc
xchg
xchg
movsl
fsts
lahf
pop
rorb
push
mov
mov
stos
inc
sahf
push
es
loope
xor
ret
lods
fidivrs
mov
testl
cltd
rorl
fmuls
stc
jo
lock
nop
dec
sti
dec
jb
insl
in
push
scas
int3
sar
movsl
xchg
mov
mov
push
loope
lock
add
mov
jo
cmp
das
std
dec
fistl
loop
jp
ret
js
aas
sub
daa
into
cmp
js
lahf
xor
pop
cmp
cmp
jns
cmp
ds
xchg
loop
xchg
push
sbb
jo
adc
ret
xchg
sub
aam
icebp
and
loope
loop
fmuls
lcall
enter
fwait
mov
sbb
addb
cltd
add
xlat
imul
test
mov
xchg
mov
adc
cmp
push
daa
aaa
pop
mov
pusha
lods
sbb
iret
adcl
inc
push
loope
pusha
dec
push
mov
xchg
jg
mov
movsl
xchg
and
lods
sarb
call
adc
push
xor
xchg
mov
mov
adc
cmp
adc
push
scas
test
aaa
jae
xchg
dec
inc
xchg
xlat
pop
pop
rclb
mov
jl
adc
fs
xchg
inc
add
sbb
into
dec
loopne
sbb
mov
add
mov
arpl
push
jl
jnp
mov
adc
push
aaa
pusha
lahf
jecxz
inc
pop
loope
xchg
ljmp
gs
daa
or
mov
xchg
lahf
adc
fistps
mov
xor
roll
mov
xchg
inc
push
xchg
inc
call
jb
mov
jl
push
xchg
out
xor
subb
mov
xor
add
dec
and
jp
lods
push
loopne
andl
xchg
xor
jecxz
push
ret
xchg
jo
pop
and
and
ror
in
inc
xlat
ljmp
imul
and
lret
imul
inc
pop
cwtl
pop
inc
pop
mov
in
inc
mov
xchg
clc
adc
in
sub
ret
dec
imul
test
ljmp
mov
or
scas
in
data16
push
xchg
jg
shlb
cmp
mov
inc
mov
repnz
mov
hlt
ret
mov
or
aaa
pop
push
pop
sub
push
inc
sti
cltd
arpl
pop
add
ss
push
mov
mov
inc
dec
pop
imul
add
xor
adc
outsl
mov
nop
ret
shlb
xchg
sbb
sti
iret
push
je
mov
pusha
cmp
ud1
loop
fs
pop
in
int
add
pop
fsubr
fldcw
dec
inc
cmp
arpl
fisttpl
cmp
add
daa
aam
xchg
jno
xor
mov
cmpsb
ja
mov
inc
icebp
popf
xor
rcrb
out
pop
inc
push
adc
test
in
ret
or
nop
pop
in
mov
imul
lcall
mov
inc
test
es
cltd
movsb
inc
jb
rcrb
mov
loopne
cmp
adc
ss
sbb
and
lret
inc
rorl
pop
hlt
js
pop
movsl
jne
cmp
and
jmp
insl
xchg
out
hlt
pop
add
sbb
xor
and
aas
xchg
lahf
jp
je
scas
inc
aam
push
pushf
jecxz
and
leave
pop
or
pop
ljmp
in
mov
push
dec
imul
adc
jns
push
inc
dec
test
pop
fsubl
fsubl
mov
in
mov
hlt
mov
mov
test
stc
ret
aam
lcall
mov
add
icebp
into
lea
fisttpl
aad
aam
jecxz
push
jp
and
ret
mov
dec
add
mov
stos
add
sarl
dec
rcrl
pop
fisubrs
in
int3
lea
sub
idivl
and
mov
gs
sub
push
insb
xor
imul
in
push
sub
pop
repnz
inc
cmp
inc
add
shr
je
mov
pop
mov
mov
xchg
xor
test
ds
and
repz
mov
dec
addr16
add
xor
cwtl
mov
mov
xor
cmc
dec
pop
and
fs
cmc
es
rcr
xchg
daa
sbb
lret
cltd
xchg
call
ds
mov
roll
sub
pop
mov
out
pop
shll
cmp
and
pusha
lds
jns
mov
mov
cs
jno
xor
jnp
lcall
sub
cmp
lds
imul
and
test
mov
pop
sbb
push
ret
jmp
xchg
mov
adc
stc
or
cltd
cmc
jo
fimull
cli
xchg
xlat
outsl
out
push
loopne
divl
pushf
mov
fisttps
mov
or
mov
mov
in
nop
fimull
iret
in
xor
sbb
adcb
pop
insl
adc
and
stos
push
je
push
cmpb
lods
out
sub
loop
cmp
jp
or
jae
inc
sbb
ret
into
and
xor
cmpsb
icebp
inc
shlb
fists
sub
fnstsw
lret
loop
xor
or
pushf
push
in
call
push
repnz
inc
pop
inc
mov
fs
xor
mov
push
xchg
filds
test
or
pop
jge
jmp
neg
das
lret
jp
cltd
outsl
ss
push
xor
ja,pt
inc
mov
gs
test
cmp
push
or
inc
sbb
std
adc
adc
lods
push
add
mov
in
das
dec
cmpb
mov
xchg
mov
int
sbb
pop
push
inc
cmp
jbe
mov
lahf
out
mov
incl
sbb
data16
into
lahf
jle
mov
xchg
jg
dec
movsl
fldcw
push
xor
xchg
mov
loopne
pop
cmp
dec
jmp
popf
jge
xor
push
fsubs
aaa
pop
jae
jle
test
push
jne
lret
jns
les
push
pop
test
out
push
cmp
es
and
dec
icebp
mov
sub
push
fsubrp
mov
mov
pop
pop
clc
dec
fwait
xor
imulb
jno
bound
mov
pop
icebp
cmc
xor
pop
mov
dec
sub
pop
aam
sub
cltd
jno
lods
aaa
scas
dec
test
push
stos
adc
inc
dec
lds
add
ficomps
testl
jne
and
and
jno
cwtl
xor
scas
lock
xor
roll
das
mov
add
leave
ror
lock
jae
jmp
das
inc
mov
js
and
mov
jns
leave
sbb
or
push
push
jne
cld
rclb
mov
test
cmpsb
imul
xor
mov
cmpsb
dec
fcmovu
int
dec
xor
clc
outsb
sti
sbb
imul
xlat
jno
cmp
xchg
movsl
fistps
sbb
mov
in
xor
xor
add
jle
pop
sbb
mov
stc
pop
orl
in
mov
popf
mov
mov
mov
mov
stos
adc
les
push
cmpsl
jmp
adc
hlt
lock
jo
mov
in
jecxz
rclb
inc
jecxz
outsb
pop
push
insl
lods
dec
adc
add
leave
xchg
jno
inc
mov
sbb
pop
je
loop
nop
sbb
lret
mov
inc
sub
and
add
adc
div
sbb
das
cltd
nop
repnz
cmpsb
mov
imul
mov
subb
jecxz
subb
ret
sbb
sbb
out
inc
test
mov
lods
fmull
mov
mov
andl
mov
inc
lcall
pushf
adc
push
adc
sbb
add
ja
ret
mov
test
xor
testl
outsb
sahf
les
int
lret
add
iret
pop
mov
fwait
shrb
mov
and
popf
pop
mov
jne
je
inc
inc
fiaddl
xor
pop
scas
mov
ljmp
mov
cmp
nop
sbb
dec
std
insl
jle
cmp
fcoms
xchg
add
dec
iret
cmp
aas
or
imul
inc
pop
add
in
or
add
outsb
jbe
les
sarl
cltd
pop
mov
cwtl
or
pop
add
mov
xchg
fs
adc
test
and
and
addr16
out
das
cs
rcl
imul
into
xor
stc
or
test
fcomip
sbb
loopne
nop
das
inc
cmpsb
mov
rcll
test
jnp
fucom
callw
jnp
scas
pushf
enter
out
shl
mov
js
test
icebp
pop
ret
cmp
ja
out
jle
inc
cmc
and
shll
stc
sub
out
rcrb
adc
sbb
mov
cmpsb
mov
xchg
test
add
xchg
mov
fcmovnu
ljmp
lods
mov
xor
mov
cmc
jbe,pt
aas
sarb
cmpsl
xchg
push
lods
dec
lahf
cwtl
or
pop
mov
fsubr
in
mov
aas
push
ljmp
cmp
lock
mov
adc
mov
mov
sub
jmp
and
ret
in
loop
sahf
lds
loop
add
out
inc
xor
fiadds
xchg
and
pop
stc
pop
push
stos
inc
popf
mov
fs
ss
and
ret
mov
int3
imul
add
xchg
es
or
loopne
dec
sbb
jne
js
mov
jg
xchg
jle
xor
nop
and
aas
fst
cld
mov
aad
sbb
push
mov
lret
adc
mov
pop
aaa
mov
cmp
popf
xor
lcall
mov
lret
shlb
dec
xchg
cmpsb
mov
jo
cld
fldenv
and
pop
fcmovu
repnz
ss
xor
daa
jnp
sbb
pop
aaa
mov
xchg
cmp
lds
push
shlb
inc
fwait
xchg
pop
sub
call
iret
and
pop
xchg
mov
ljmp
imul
aaa
and
mov
out
mov
inc
orl
insl
mov
and
subl
push
imul
and
mov
loope
test
je
sub
movsb
lcall
cli
or
xlat
js
xor
mov
fisubrl
in
stos
sti
js
xchg
inc
mov
jnp
lods
or
ret
rcrl
push
mov
jmp
addb
or
roll
pop
les
pop
fwait
adcl
mov
and
pushf
jg
cmp
scas
and
outsl
mov
cld
inc
mov
or
push
lods
insb
push
ljmp
jo
adc
jns
mov
push
or
shrl
int
adc
loope
adc
xor
and
imulb
test
and
mov
push
xchg
sbb
call
sbb
add
je
insb
fmull
xchg
imul
rolb
ffreep
xor
movsl
or
lcall
sub
add
mov
jne
fstl
add
ficomps
scas
hlt
mov
xchg
fsubr
or
mov
aad
jmp
sbb
mov
inc
sahf
add
and
pop
pop
lods
ja
es
mov
cmpsl
xor
add
mov
cmp
lods
lcall
xchg
aaa
push
fildll
jp
mov
lods
imul
mov
jae
sub
mov
and
imul
mov
and
cmpsb
mov
push
adc
lea
cmp
mov
dec
les
mov
jmp
arpl
sub
out
cmp
inc
lret
xchg
movsb
movsb
cmc
ret
and
dec
stos
mov
pop
pop
es
mov
stos
test
and
mov
push
mov
insb
call
mov
inc
scas
mov
jl
mov
dec
lret
push
fldt
shll
outsb
xchg
push
dec
pop
jmp
notb
dec
loope
test
aaa
adc
xor
xchg
cld
idiv
sub
xchg
gs
pop
jo
test
dec
scas
lock
lret
out
mov
fsubl
stc
fsubl
or
and
ret
mov
cltd
mov
jb
jno
push
add
xlat
ret
and
orb
jmp
cld
stos
lock
cmp
icebp
sti
sbb
xchg
mov
jl
insl
sbb
movsl
mov
xor
cwtl
dec
jae
je
and
ret
xlat
sbb
inc
and
mov
in
lcall
mov
cmpsl
adc
subl
cmp
mov
fdivrp
dec
add
sbb
sbb
xchg
pop
bound
mov
push
movsb
hlt
clc
in
mov
out
xor
lret
sarl
xor
les
push
je
pop
push
insb
mov
repnz
subl
stos
add
daa
lods
add
mov
cmc
addr16
sarb
adc
jge
push
lods
jge
mov
divb
jns
shr
jb
push
mov
or
nop
add
rcrl
and
movsl
inc
cmpw
xchg
adc
xor
lcall
inc
repnz
cmpsl
cmpsb
popa
jl
and
popf
popa
out
arpl
push
adc
test
or
js
xor
jae
rcll
push
jne
add
fimuls
cmp
iret
jecxz
lret
jg
pop
dec
ja
je
mov
mov
dec
outsl
insl
pop
in
into
stos
mov
aaa
movsb
mov
call
inc
ss
fimull
lods
fidivrs
pop
test
and
or
mov
fcmovbe
leave
lds
daa
push
cs
and
dec
mov
jmp
movsb
pop
push
ljmp
lcall
loopne
fmuls
add
lret
xchg
xor
push
out
sub
adcl
lea
mov
leave
push
fisttpll
addr16
push
fucom
xor
dec
stc
jae
and
sbbb
mov
lds
add
addb
xorps
mov
insl
je
stos
push
xchg
add
insb
or
scas
push
enter
out
popa
loopne
add
adc
mov
mov
pop
push
bound
add
jns
lea
xor
pop
pop
inc
sahf
andb
adc
and
and
and
mov
shll
shrl
int
sub
push
push
jge
mov
push
jg
and
adc
and
pop
inc
shll
mov
lds
or
xchg
fisttpl
loop
ljmp
mov
movsl
aaa
mov
popf
mov
jge
dec
andl
fisttps
lea
ret
or
adc
lret
sahf
clc
stc
inc
orl
sub
ja
lret
loopne
push
sub
in
pop
aad
and
std
sbb
jno
test
movsl
fsubl
jbe
sti
inc
out
pop
mov
pop
cmpl
add
xor
adc
fnstcw
pushf
jbe
pop
sbb
testl
and
xchg
hlt
in
jp
add
stos
fisubs
xchg
test
mov
cmpsl
mov
movsb
jge
jp
mov
jecxz
xor
lret
jb
xchg
rcr
or
pop
pop
daa
xlat
mov
jae
ds
and
sahf
out
lea
cmp
add
or
lods
cld
mov
insb
shll
push
dec
sarl
or
xchg
cmp
mov
fwait
les
fistpl
add
daa
inc
icebp
dec
stc
lret
and
outsb
mov
lea
les
adc
xchg
cmp
xor
in
push
jle
pop
push
fs
push
jb
sbb
adcb
mov
xchg
insl
int
mov
cwtl
test
test
pop
pusha
dec
sbb
std
dec
xor
dec
push
fisubl
push
dec
mov
pop
int
dec
clc
xor
leave
outsl
adc
in
out
jbe
stos
push
fdivl
aad
cld
mov
inc
jo
push
fistpl
mov
std
ljmp
insl
add
pop
sub
ss
repz
cmp
gs
aas
les
scas
jg
mov
pop
dec
aam
ja
dec
lods
lret
add
mov
add
cmp
mov
scas
mov
cli
xor
pop
adc
inc
icebp
push
push
push
loop
stc
mov
pop
loopne
cltd
pop
test
mov
lods
sahf
jge
inc
xorl
pushf
xchg
inc
out
inc
sub
xchg
adc
addr16
out
mov
mov
das
jno
orl
xor
ja
or
test
inc
bsf
insl
scas
notb
mov
div
fidivrs
inc
inc
jmp
pop
arpl
and
mov
inc
sbb
xor
insl
adc
iret
dec
out
push
sbb
orl
out
nop
mov
faddl
mov
xchg
in
outsb
xor
ja
fcom
mov
outsb
and
leave
and
iret
idivb
jnp
movsl
jae
mov
outsb
sbb
mov
inc
enter
scas
jl
paddusw
mov
mov
inc
aas
xlat
push
sbb
mov
data16
inc
lret
mov
xchg
or
pop
cmp
mov
rol
mov
lods
sbb
roll
cmp
movsl
push
mov
repz
sarb
push
dec
aad
clc
ret
cwtl
jle
cmpsl
jg
or
mov
ficoml
add
mov
mov
movsl
push
test
mov
or
or
jecxz
xor
pop
sub
mov
aad
push
or
leave
adc
jns
cmc
es
aas
xor
lret
dec
popa
pop
cmpsb
mov
or
sti
jecxz
mov
insb
pop
mov
pusha
adc
xchg
js
call
sbb
cli
loop
cld
test
cli
cs
aas
rclb
dec
jno
std
or
je
add
xchg
xor
rorb
inc
push
stos
les
xchg
push
ljmp
jge
xor
movsb
mov
ljmp
cltd
shr
jl
outsl
xchg
mov
mov
aaa
jle
mov
xchg
test
mov
or
movsl
fmull
pusha
push
addl
aas
push
lret
adc
leave
jae
jae
mov
scas
movsl
jns
repnz
sub
xchg
adc
ljmp
sub
mov
das
jecxz
jge
mov
xchg
mov
add
cmp
je
repnz
pop
nop
call
andps
mov
adc
nop
xchg
divb
push
inc
inc
jge
stos
inc
das
jmp
testl
add
push
inc
movsb
test
imul
mov
mov
mov
adc
jne
jne
mov
jo
js
jo
sbb
das
stos
pop
adc
sub
sbb
in
jb
jge
stc
ror
and
sti
mov
jns
xchg
jg
fists
cmp
lea
out
sbb
cs
push
mov
or
icebp
jbe,pt
mov
fs
cli
xor
shlb
ret
imul
test
cmpsl
push
sbb
or
or
jbe
push
icebp
sub
testl
sbb
iret
cld
add
out
push
mov
cmc
xchg
and
movsb
or
outsl
popa
jge
cmp
mov
dec
mov
adc
cmp
je
cltd
xor
push
fucomi
and
push
xchg
cmpsl
sarb
in
dec
xchg
mov
lahf
cmpsb
jb
xchg
pop
or
shll
fmuls
add
arpl
fdiv
jmp
cmp
fimuls
sub
jne
pusha
adc
jge
imul
out
icebp
jno
cmc
inc
xchg
and
dec
out
sarl
push
push
cmp
enter
jb
insl
pushl
jo
inc
push
ret
sbb
dec
or
jb
inc
mov
fdivr
in
icebp
imul
lret
les
or
repnz
mov
out
push
add
js
add
jno
mov
jp
mov
adc
xchg
in
push
cmpsl
repnz
out
std
mov
pop
fcomi
xchg
cltd
mov
mov
lods
adc
lds
jl
xchg
push
scas
sti
add
pop
faddl
aas
jbe
adc
adc
dec
mov
mov
adc
sbb
lods
sub
pop
xchg
push
enter
xorl
movsl
add
out
arpl
or
aas
push
xor
mov
add
stos
and
cmp
pop
mull
adc
mov
mov
mov
daa
sarb
add
mov
xorl
cmp
test
inc
push
and
jbe
es
loope
xor
data16
jmp
in
adc
dec
movsl
ret
ljmp
xchg
imul
sarl
cmp
cmp
xchg
dec
mov
out
dec
push
pop
or
mov
and
push
cmp
cs
aam
mov
pop
cld
inc
inc
dec
push
or
data16
dec
add
sub
mov
adc
ret
mov
xchg
mov
push
movsb
mov
mov
outsb
add
aad
and
mov
pusha
mov
xlat
jecxz
out
mov
pop
and
adc
pop
or
mov
call
and
cltd
shlb
test
mov
stos
cmp
jbe
mov
inc
xchg
cmp
pop
pushf
fsubl
cmpsb
int3
ljmp
pop
push
jmp
push
ss
gs
or
pushf
xchg
or
sbb
shll
push
daa
push
int
push
lods
clc
and
push
add
xchg
sub
out
cltd
and
xchg
loop
push
and
call
xchg
outsl
mov
mov
mov
in
push
pop
call
jg,pn
aaa
pop
jno
sub
xchg
ficomps
push
jno
dec
adc
sbb
je
repz
out
and
arpl
mov
push
sahf
xchg
push
addr16
ja
mov
inc
mull
es
rolb
dec
add
ret
mov
push
fsubrl
xchg
add
das
jge
out
packssdw
data16
mov
pop
mov
mov
cmpl
out
push
mov
jo
outsl
mov
inc
icebp
inc
sbb
dec
imul
push
push
jg
push
fwait
inc
mov
cs
jmp
jge
and
pop
scas
add
mov
cmp
gs
mov
add
jmp
dec
out
mov
hlt
test
cltd
decb
and
rcrb
test
gs
loope
nop
pop
lret
or
int3
filds
scas
xchg
jecxz
cmp
xor
sbb
or
shl
mov
mov
bound
outsl
shl
and
incb
jns
lret
or
scas
lock
aaa
in
fwait
repz
pusha
xorl
test
mov
mov
shrl
cmp
shrb
cs
mov
out
mov
test
push
xlat
cli
and
push
jmp
xor
or
or
int
sub
dec
cmp
push
nop
aad
repnz
dec
out
jae
cmpb
inc
addr16
push
jl
insb
pop
sub
push
push
and
pop
notl
repnz
and
jp
sub
push
dec
push
loope
adc
jecxz
lahf
add
xor
xchg
inc
sub
jbe
aad
inc
inc
insl
std
aad
rclb
mov
xor
cmpsb
sub
mov
mov
adc
orb
popa
aaa
and
jbe
popf
out
sti
loope
sahf
subl
shll
es
pusha
icebp
dec
dec
arpl
or
dec
imul
test
data16
jno
loopne
repz
sub
mov
popf
xor
das
in
popa
sbb
pop
sub
lahf
bound
push
xchg
lods
xchg
xor
jbe
icebp
popf
adc
ljmp
rcrl
xor
test
push
subl
fs
inc
sti
mov
adcl
es
push
pop
adc
xchg
xor
out
int
mov
insb
add
nop
adc
inc
adc
lods
jmp
out
mov
cld
outsl
add
jnp
sbb
jp
mov
lock
out
jno
testl
sahf
xorb
call
daa
lods
add
in
adc
aaa
test
fisubs
les
add
jl
std
or
loopne
pop
enter
cmp
lar
out
pushf
xor
push
mov
notl
sahf
jp
loop
test
test
mov
mov
pop
jp
xor
xorb
sbb
and
sbb
and
inc
montmul
cmpsb
inc
jmp
inc
scas
mov
or
iret
fildl
bnd
mov
pusha
push
in
jb
jne
pushf
push
fdivl
ret
xor
into
jl
loopne
and
nop
adc
xor
xchg
sub
jo
and
ja
stos
inc
xlat
addr16
xor
or
ret
mov
ss
rolb
lcall
xchg
ljmp
sub
fbld
loope
push
mov
sub
fidivs
rorb
adc
sub
xchg
lret
cmpsl
loope
jnp
pop
xor
and
rolb
adc
ficoms
arpl
out
pop
and
test
sbb
cwtl
jmp
scas
mov
mov
push
out
mov
push
add
cmpsb
fs
nop
lods
and
enter
sub
xchg
ss
inc
adc
addl
jl
aaa
mov
imul
push
fcmovbe
outsb
jns
cmp
adc
jp
je
mov
mov
cmp
hlt
mov
lcall
in
ss
aas
rcrb
sbb
aad
xor
add
inc
mov
nop
imul
inc
and
jno
outsl
push
gs
addr16
inc
xchg
cmpsb
and
stos
xor
lds
and
cmp
inc
sbb
stos
dec
or
or
out
std
mov
iret
movsb
fdivs
jmp
fsubrs
mov
jmp
mov
pop
cmp
test
cmpsl
jmp
gs
add
mov
clc
xchg
jg
loope
movsb
fdivrl
cmpsl
in
adc
xor
jmp
add
push
pop
cltd
lea
inc
mov
add
and
out
jae
enter
insl
mov
and
dec
mov
movsb
xlat
aaa
int3
lock
out
sub
dec
jecxz
out
or
mov
test
popa
imul
sbbl
mov
jb
lahf
xchg
or
into
call
xchg
sub
in
jmp
es
test
out
outsl
test
jno
or
lods
pop
add
popa
movsl
int
xor
enter
mov
push
jg
mov
stos
sub
mov
mov
mov
hlt
push
jmp
loop
dec
int3
inc
std
imul
fucompp
popf
pop
icebp
stos
push
std
push
inc
ja
xor
aam
adc
push
lcall
or
mov
inc
js
and
popf
add
pop
and
loope
jnp
add
xor
pop
push
sub
jns
pushf
mov
mov
stc
push
hlt
clc
mov
add
lods
mov
push
xlat
pop
and
push
mov
pop
push
in
mov
into
imulb
punpcklwd
jge
pop
or
sbb
sbb
push
push
mov
or
push
icebp
es
inc
das
and
scas
mov
mov
rorl
icebp
mov
push
iret
jecxz
dec
jnp
cmpsb
push
mov
pusha
xchg
dec
dec
in
stos
mov
mov
jns
arpl
mov
ret
int3
sub
ret
inc
jne
dec
test
in
leave
nop
insl
addr16
or
fisttps
inc
cmp
inc
adc
lcall
lcall
sbb
or
lret
aaa
out
push
cmp
stc
loopne
mov
shl
sti
inc
xchg
outsb
pop
stc
sbb
mov
addr16
push
mov
mov
aam
fistps
add
sbb
outsl
cmp
sub
ficompl
scas
push
dec
leave
dec
pop
xor
push
cs
arpl
divb
mov
shlb
adc
and
or
je
push
shl
inc
sti
movsb
sub
pop
andb
push
pop
xchg
mov
dec
jns
mov
fisubl
test
iret
and
mov
jnp
push
sbb
int
popa
push
jnp
shrb
jbe
push
ret
leave
out
xchg
mov
bound
js,pn
hlt
adc
cmp
push
xchg
vpsubd
xor
pop
out
inc
pop
into
sbb
outsb
clc
push
scas
iret
jg
scas
jne
daa
adc
std
popf
lds
testb
mov
insb
filds
lock
or
popa
rorb
pop
scas
mov
pop
imul
sbbb
loopne
inc
movsb
mov
mov
cmpsl
mov
xor
jne
adc
cmp
addr16
cmp
ss
push
mov
mov
sub
popf
loop
jb
mov
clc
push
push
push
jle
daa
mov
leave
push
adc
das
and
xchg
cli
cmp
in
xchg
cwtl
mov
aam
adc
rcrb
or
and
fiaddl
mov
cmp
icebp
std
fmull
addr16
xor
xor
jecxz
lods
fisttpl
adc
pop
jle
test
jmp
frstor
push
pop
xor
popa
jnp
fildl
je
movsl
ffree
adc
out
stos
cltd
fwait
cmp
fnstsw
adc
mov
push
js
lcall
enter
filds
sbb
sbb
dec
ret
push
out
popf
and
test
shlb
jl
pop
add
jg
pop
in
repz
test
pushf
stos
stc
inc
gs
lret
dec
ljmp
push
xchg
cld
ljmp
sbb
mov
lret
inc
filds
mov
xlat
das
test
mov
push
mov
push
xchg
ds
popa
or
cmp
xor
scas
inc
out
dec
aad
xchg
mov
add
iret
pop
xor
adc
xchg
cmp
ja
jae
out
xchg
stos
sub
sbbb
cmc
and
inc
or
jecxz
xchg
push
clc
out
pop
xchg
jge
mov
cmp
mov
data16
pop
mov
xchg
inc
jmp
arpl
dec
clc
sbb
cmp
aad
jecxz
adc
movsl
jae
mov
xchg
lret
mov
ja
sub
mov
loope
leave
lret
push
dec
mov
xorb
cmp
ret
aad
mov
xor
subb
adc
mov
jb
call
arpl
push
fnsave
stc
lret
pop
or
loopne
movsb
push
adc
fwait
pop
jge
push
and
xchg
loopne
out
pop
popa
push
rcr
fdivrs
and
aam
or
push
sbb
aam
pop
lods
jge
lret
lock
aad
mov
mov
mov
mov
pop
and
dec
mov
inc
sbb
xlat
mov
push
mov
cmp
aas
pop
sub
push
lea
movsb
enter
jbe
into
data16
mov
jno
push
xchg
lret
pop
in
pop
fsubs
mov
aaa
out
xchg
pop
mov
fists
or
mov
sbb
into
mov
lea
imul
cltd
gs
ret
fcmovnbe
stos
test
lret
sbb
in
ret
push
inc
xchg
addl
dec
pushf
sahf
and
cmp
rclb
out
loopne
dec
push
push
or
mov
cmp
or
jp
sub
fwait
and
das
test
jae
xchg
adc
add
loopne
cmp
or
dec
loope
sub
jae
mov
adc
inc
and
xchg
mov
cmp
mov
xor
daa
ljmp
sub
jl
xchg
xchg
lods
push
pop
jo
sarb
pop
test
stos
xlat
rcr
cmp
ljmp
jl
xchg
js
fsubp
mov
arpl
cmp
fmuls
mov
cmp
insl
cmp
jno
dec
cmp
in
jge
mov
lods
cmpsb
cmp
pop
push
sub
ljmp
clc
pop
sarb
out
xchg
push
and
xor
adc
push
jmp
mov
das
mov
mov
int3
cwtl
cmp
sahf
dec
mov
repnz
enter
inc
pop
pminub
adc
xchg
lcall
jge
sti
lret
inc
mov
notl
mov
outsl
cmp
lcall
loope
jae
inc
mov
xchg
mov
adc
jle
in
call
sub
je
xchg
mov
adc
push
dec
es
sub
cltd
in
and
mov
fisttps
sub
jne
test
pop
shrb
inc
out
sbb
loop
pop
jmp
xor
mov
pop
mov
bound
sub
jp
cmc
push
jg
aam
push
cmp
inc
movsl
stc
inc
enter
lea
addr16
outsb
cmpsl
sbb
dec
outsb
mov
xor
pop
insb
nop
ja
ret
insb
call
fisubl
pop
push
inc
ss
addl
pop
clc
mov
sub
test
sbb
dec
adc
hlt
daa
or
jmp
mov
push
inc
jecxz
pop
andps
outsl
stos
sub
ja
scas
sub
mov
dec
icebp
mov
pop
mov
lea
popf
jmp
mov
add
je
in
fcoms
pop
push
sub
gs
mov
in
xor
out
lretw
aaa
lods
movsl
pop
enter
push
test
jnp
in
repz
mov
and
xchg
add
mov
lock
iret
push
jge
cltd
movl
sbb
lods
xor
pop
jnp
loopne
inc
ret
hlt
add
pop
add
add
mov
ja
ret
jmp
adc
repz
gs
mov
repnz
jecxz
add
fs
add
sbb
dec
adc
sub
lret
fistpll
xchg
sbb
iret
loope
sar
clc
sbb
clc
mov
outsb
mov
pop
daa
push
add
and
xor
sbb
into
pop
inc
sbb
or
mov
xchg
cmp
push
pop
dec
sub
adc
add
sub
out
xor
loope
in
das
push
push
add
push
jb
jmp
push
lods
imul
loopne
psllq
stos
mov
cmp
xlat
mov
sub
es
je
dec
fcoms
inc
push
fists
scas
adc
pop
jle
jns
push
mov
int
out
cmc
pusha
xor
pop
jmp
imul
orl
jnp
xor
divb
mull
ja
cmp
mov
lods
or
in
mov
pushf
inc
add
stos
and
sbb
in
ds
mov
push
loop
jno
bound
xchg
and
add
xchg
int
add
push
cmp
sar
pop
cmpsl
pop
mov
xorb
sub
mov
pop
gs
add
xchg
sub
pop
xchg
mov
xchg
iret
data16
aam
gs
imul
pushf
xchg
and
mov
mov
shlb
mov
add
sbb
fwait
inc
aas
xchg
sub
insb
imul
andb
out
gs
and
jge
fldenv
ds
xor
in
jbe
test
jl
cld
ret
clc
jno
pop
rcll
sti
cmp
out
or
and
xchg
cmpsb
movsl
mov
and
call
jo
je
xor
into
xchg
daa
xchg
dec
mov
repz
daa
cld
sub
lret
or
mov
pop
jp
mov
sar
jecxz
jae
mov
fs
gs
in
cmc
fnstenv
test
pop
repnz
mov
jbe
pop
imul
mov
dec
pop
fsincos
outsl
loopne
cltd
cwtl
ss
test
es
rolb
jp
xor
fiaddl
fldt
lods
push
adc
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
.byte
pop
in
cmp
cmp
jmp
out
inc
mov
inc
dec
aas
mov
and
jne
add
es
adc
push
mov
xlat
mov
out
mov
daa
shrl
pop
xchg
nop
xor
mov
mov
xor
adc
adc
punpckldq
push
jg
iret
cmp
dec
sbbl
pusha
and
in
add
lods
mov
pop
add
jecxz
pop
mov
inc
jno
das
das
psubw
test
js
flds
jg
test
popf
cmp
hlt
cmp
test
inc
jmp
rolb
add
mov
inc
mov
int3
push
mov
jbe
jle
loope
int3
push
les
das
ljmp
jae
sbb
dec
es
jne
daa
xor
push
pop
pop
jge
js
pop
cmpsl
ret
test
xchg
or
inc
je
ss
aad
mov
push
push
je
test
cmp
pop
mov
jb
das
mov
mov
push
adc
cmp
testb
mov
sbb
mov
into
mov
mov
scas
adc
xlat
lock
adc
xchg
jbe
jns
dec
hlt
cltd
pop
mov
xor
ljmp
xchg
popa
aad
aam
xchg
jl
es
stos
pop
xor
jns
aad
mov
pop
aaa
add
mov
mov
fsts
imul
ficomps
cmpsb
js
sbb
into
jge
or
pop
imul
inc
lret
loope
push
cmpsl
and
inc
mov
inc
outsb
outsb
mov
mov
push
xor
aad
xor
push
cmp
idivl
sti
xor
dec
sub
xchg
jb
add
jae
add
mov
dec
sbb
and
xchg
insl
add
notb
jp
scas
push
inc
sub
es
jae
xchg
or
sahf
sbb
mov
lods
sbb
adc
jns
adc
xorb
aad
das
pusha
xchg
arpl
movsb
ss
inc
jns
scas
adcb
add
xchg
inc
lea
cmpsb
sbb
mov
std
mov
or
call
dec
mov
pop
stos
aam
xchg
hlt
inc
mov
imul
sti
iret
or
and
mov
adc
cmpsl
mov
xchg
xchg
xor
mov
repnz
enter
xchg
imul
jmp
push
add
adc
inc
cmpsb
lods
pop
push
mulb
mov
imul
sub
or
inc
pop
loop
mov
push
das
enter
and
jle
jb
or
sbb
bound
loop
xor
add
sbbb
push
sysret
sbb
leave
scas
sub
orb
js
jmp
loope
mov
push
fstpt
outsb
and
and
mov
sub
outsl
add
sti
psubusw
das
insl
xor
cmp
in
mull
shr
jnp
xorl
cmpsb
subl
insb
or
cmp
mov
mov
sub
cmp
imul
mov
scas
jl
or
mov
je
out
cmp
cmpsl
dec
or
into
pushl
cmpsb
imul
sub
shlb
mov
xchg
mov
inc
inc
cli
sub
dec
add
mov
movsb
adc
mov
xchg
mov
sub
xchg
sahf
and
out
mov
jge
insb
dec
int
xlat
xchg
imul
negl
dec
ljmp
adc
ljmp
pop
and
loop
daa
out
sahf
ror
lea
xchg
jno
mov
fdivs
and
mov
jno
jl
mov
or
lds
aas
fdivrs
nop
cmp
test
push
jecxz
ficoml
jo
cmc
stc
mov
xor
jae
dec
sbb
pop
data16
jp
jecxz
movb
sub
jmp
mov
fwait
out
add
call
mov
test
call
and
mov
rclb
inc
fwait
sub
or
je
inc
push
insb
jecxz
push
out
outsb
es
pop
pop
mov
rol
mov
cld
call
xor
push
add
adc
xor
pop
popf
jp
mov
shll
outsl
out
xor
jmp
adc
sbb
xor
mov
cltd
xor
and
jmp
shrl
lock
andb
fcomps
icebp
sbb
mov
je
iret
in
xchg
addr16
sahf
insb
in
or
mov
clc
push
add
jb
es
push
add
cmp
push
cltd
cmc
andl
push
imul
pop
sti
sub
sub
pop
fsubl
cltd
add
and
lods
and
fcomps
js
rorb
mov
cli
outsb
inc
and
fsts
js
mov
xchg
xor
test
sub
insl
xchg
xor
out
push
test
scas
dec
pop
sub
xchg
shlb
mov
add
das
lret
xor
fwait
push
popf
loopne
cmp
sub
sbb
addr16
cld
or
mov
jecxz
xor
mov
mov
movb
xchg
inc
popa
cmp
adc
mov
add
push
and
push
mov
fsubrl
in
sbb
cmpl
lret
push
pop
push
insb
mov
add
pop
add
ja
adc
rcrb
add
sbb
jno
or
mov
ret
test
and
in
ret
adc
sub
jmp
xchg
pop
outsb
leave
out
jno
outsb
dec
adc
push
cwtl
xor
lock
pop
stc
int
out
out
jmp
rolb
mov
ljmp
popf
or
or
mov
lahf
inc
movsl
fists
or
jo
rcrl
sarl
fdivrs
push
pop
popf
lcall
pop
and
fwait
xchg
negl
dec
out
scas
or
arpl
ret
stc
mov
add
cmc
scas
inc
fwait
loopne
mov
pop
sub
mov
ds
add
mov
inc
aad
icebp
and
xchg
das
cmpsb
or
adc
sahf
outsl
jle
xchg
xor
push
pop
cmp
sbb
lret
and
mov
nop
popa
lods
rol
xor
xchg
lret
out
rcl
or
pop
mov
test
xchg
pushf
fcomps
ds
sarb
add
dec
ret
adc
mov
fidivs
mov
mov
add
int
or
adc
inc
inc
jnp
sub
out
pop
scas
xchg
inc
lahf
mov
inc
sub
iret
jbe
pop
xor
mov
fnstsw
orl
lock
sub
dec
push
and
fidivs
fmul
lock
int
push
clc
cli
cmp
cld
xchg
push
popa
cmp
lret
mov
sub
xor
pop
mov
mov
int
cmp
pop
gs
and
cmp
mov
imul
and
fsubr
stos
push
mov
imul
adc
and
shrb
sahf
xchg
ja
inc
call
jge
loop
gs
sub
mov
or
push
dec
dec
and
aaa
and
fiadds
lods
and
out
push
dec
repnz
xchg
xor
sub
arpl
and
inc
dec
push
xchg
mov
push
nop
ret
repz
and
cmp
out
addr16
sub
sub
int
add
loopne
mov
lds
or
repnz
sub
fsubrs
jno
mov
jnp
jmp
mov
sub
loop
cmc
jnp
mov
push
test
bound
ja
idivb
push
stc
xchg
sub
cs
sbb
inc
inc
or
or
fcompl
dec
dec
adc
and
in
lock
dec
fxch
mov
into
aaa
cmpb
cmp
jecxz
jp
pop
or
cmpsb
pop
mov
sub
pop
push
loope
jno
xor
pop
mov
push
ret
dec
xchg
out
in
cmp
ss
cwtl
ds
pop
leave
dec
ret
mov
cmp
adc
xchg
lcall
push
pop
push
xchg
xor
imul
iret
cmp
scas
in
adc
pop
scas
pop
loop
xor
filds
enter
leave
sbb
sub
loopne
shll
dec
fcoms
or
out
in
pop
movsb
dec
movsb
in
fwait
js
subb
lods
push
push
mov
inc
push
sahf
popf
enter
pop
aam
ret
push
mov
imul
in
into
adc
dec
mov
sub
push
imul
das
adc
movsb
mov
and
xor
cmp
scas
movhps
inc
jnp
lret
cmp
and
push
ret
push
push
pushf
aam
and
sarb
mov
test
lea
in
mov
mov
lea
pop
pop
inc
scas
and
out
xchg
inc
pop
pop
iret
int
pop
or
cmp
pop
lea
jl
sbb
stc
outsb
jg
movsb
rolb
test
jmp
fistpl
jecxz
les
xchg
mov
push
xchg
dec
cwtl
xor
das
in
or
sbb
jae
ficomps
data16
push
sub
mov
dec
js
xchg
xchg
add
mov
lea
fnstenv
mov
or
jg
push
lcall
loop
inc
pop
test
daa
adc
inc
pop
add
testl
jno
add
sub
ffreep
enter
mov
gs
pop
aaa
movsb
jnp
jnp
int3
mov
cmc
out
cld
inc
add
pop
jns
call
and
popl
cli
cld
les
pop
outsb
inc
nop
mov
ret
xor
adc
push
pusha
jmp
cmc
pop
pop
mov
in
sbb
dec
xchg
bound
sbb
movsb
jl
lea
out
enter
icebp
lods
in
loopne
adc
sub
aaa
mov
sahf
xchg
jmp
jge
inc
sbb
xchg
xchg
cmpsb
pop
sahf
push
es
mov
lock
test
cltd
mov
mov
lea
movb
mov
stos
jp
adc
xchg
into
sub
jnp
mov
push
mov
adc
dec
mov
push
adc
lahf
sub
stos
add
int
mov
sub
daa
adc
pop
lock
iret
xchg
jo
iret
cmp
test
andb
add
mov
mov
test
int3
sub
push
sbbl
andl
call
fstpl
rcrb
fdivrs
test
addl
mov
adc
popf
pop
push
repnz
pop
push
out
cmpsb
dec
lock
lods
call
ret
xor
leave
rcl
push
pop
ret
scas
out
adc
dec
andb
cwtl
cwtl
iret
cwtl
insb
out
insb
and
push
syscall
pop
dec
fstl
adc
xchg
or
sbb
or
nop
es
ss
mov
imul
mov
call
push
pop
incb
pop
push
insl
xlat
shl
pop
in
ss
xlat
add
xchg
enter
jae
pusha
xor
xchg
repz
int3
lret
sarb
xor
insb
out
xchg
fisttps
mov
xchg
je
das
fwait
jbe
shl
xchg
data16
mov
cmpsl
pusha
and
fldenv
and
mov
push
mov
mov
sbb
cli
iret
lea
pop
shl
ljmp
xchg
inc
out
dec
push
fisttps
push
jo
cmp
stos
sahf
or
xor
fidivrl
repnz
pop
aas
inc
lods
push
stos
std
add
sub
mov
popf
xchg
pushf
cmp
das
pop
out
pop
loopne
iret
push
fwait
push
mov
movl
sub
inc
mov
and
cmp
xchg
or
outsb
and
stos
mov
mov
rcrb
mov
ds
xchg
cmp
std
add
push
cmp
fisubs
adc
xlat
aam
push
repnz
iret
sbb
xchg
mov
jmp
loope
push
movsl
shr
loopne
mov
and
cltd
sti
push
xchg
lea
mov
inc
fbld
loopne
icebp
outsb
and
outsb
or
fiaddl
jnp
mov
mul
call
push
sub
sub
insb
cmp
loopne
xor
mov
arpl
call
mov
jbe
jge
das
fs
enter
lods
push
adc
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
.byte
pushf
xorl
mov
lret
sbb
int3
aas
lock
mov
dec
mov
mov
dec
push
pop
insb
in
add
push
mov
pusha
sub
and
ljmp
lods
xchg
cld
mov
fldl
pop
xchg
arpl
inc
pop
jae
movsl
repz
out
sub
pop
dec
mov
mov
and
push
pop
pop
lret
mov
rcrb
push
jnp
jp
fnstsw
sti
dec
leave
daa
pop
movb
inc
pop
ret
mov
leave
and
test
sub
mov
jecxz
xchg
clc
pushf
bound
jno
jp
fstpl
pushf
mov
xor
lods
jnp
add
std
cmp
mov
xor
mov
pop
mov
in
dec
mov
mov
add
inc
lahf
lcall
jne
mov
clc
lcall
push
iret
lds
pop
mov
adc
pop
hlt
out
cltd
iret
hlt
push
lea
ja
dec
scas
aas
stos
sub
jb
popf
mov
mov
xchg
lcall
in
loope
stos
int
jne
cmp
addr16
mov
sbb
ret
imul
jge
gs
icebp
and
jge
data16
push
pop
push
xchg
ror
arpl
xor
xor
iret
cli
push
shrl
mov
jp
inc
daa
stc
cli
add
pop
xchg
dec
push
cmp
xchg
pop
lods
sub
add
jne
pop
jl
insl
addl
movsl
add
ficompl
ljmp
sahf
jnp
xchg
add
in
pop
fwait
out
mov
lcall
lret
adc
add
imul
jmp
cli
xlat
imul
add
jp
cmpsb
mov
xor
es
push
sub
pop
shr
cmp
sbb
dec
out
cwtl
repnz
mov
addr16
xor
orl
jmp
or
mov
add
sub
imul
cld
nop
xlat
dec
movsl
sub
fisttpl
dec
stos
pop
imull
cmpsl
dec
scas
pop
inc
or
push
std
sub
dec
cmp
xchg
arpl
lcall
aas
cli
aam
push
lea
xchg
or
mov
in
out
pop
in
mov
cmp
and
jmp
fnstenv
push
lret
adc
push
repz
cmp
outsb
mov
je
dec
sbb
sbb
cwtl
in
clc
inc
xlat
iret
aaa
mov
shrb
fdivrl
cmpsl
sbb
lahf
aad
pop
mov
or
stc
jno
subl
push
mov
in
bound
pop
sbb
out
lret
mov
test
movsl
fs
movsb
ja
dec
jbe
mov
adc
imul
fcoms
shrl
nop
icebp
cmp
cli
mov
or
lret
sub
sub
jae
int
inc
pop
rclb
push
mov
push
mov
cli
or
iret
pushf
xor
imul
pop
sub
jle
aad
sub
lret
cld
xchg
mov
sub
xchg
inc
insl
jmp
sub
xchg
loop
jl
lret
push
mov
mov
jbe
xor
rcll
test
xchg
dec
cmpsl
mov
sub
jge
ljmp
aas
roll
and
ss
lock
mov
mov
mov
rcll
mov
mov
mov
filds
insl
call
fnsetpm(287
addr16
orb
inc
out
mov
or
outsw
or
sub
cmp
mov
sbb
rclb
jecxz
sbb
mov
jns
adc
dec
mov
sbb
cltd
loope
shrl
sub
push
and
cmp
test
scas
pop
fs
into
mov
js
mov
mov
cmp
clc
imul
mov
cmc
fldenv
std
xchg
sbb
enter
fsts
idivl
and
and
xchg
stos
xor
push
jbe
jge
das
jbe
pusha
into
inc
xor
sbb
jns
pop
mov
cli
addr16
mov
loop
in
fistpl
adc
arpl
leave
cmpsb
mov
pop
insb
mov
sbb
jns
mov
icebp
add
xor
dec
adc
mul
stos
cs
mov
xchg
inc
in
cmp
test
js
lods
insl
div
cmp
cltd
xchg
inc
mov
add
jl
add
sbb
jmp
fisubrl
test
xor
dec
imul
xlat
cmp
xor
add
sbb
dec
scas
mov
mov
push
mov
and
bound
mov
sub
daa
dec
push
push
call
fistps
ret
cld
and
out
push
stc
cmp
xchg
pop
divl
xor
mov
shlb
test
xchg
cmp
loope
cmp
test
sbbb
fdivr
push
cs
dec
or
or
cmp
and
shl
or
cmpsb
mov
mov
xchg
mov
dec
lahf
fbld
sti
leave
andb
xor
pusha
dec
cmpb
add
or
enter
push
icebp
and
fnsave
dec
and
pop
cltd
mov
loope
cli
jne
cli
arpl
dec
push
mov
sbb
fsts
jl
mov
insb
xor
push
les
insl
rorl
mov
sub
xchg
xor
enter
add
inc
mov
in
dec
insb
mov
insl
stos
loop
mov
test
test
rcrb
mov
shl
movsl
mov
test
ret
fidivs
insl
sti
ret
mov
mov
mov
xlat
fcoms
mov
inc
cld
and
and
imul
std
rclb
mov
or
mov
push
mov
scas
push
dec
jmp
xor
mov
daa
fcompl
outsb
int
push
dec
in
jb
adc
pop
mov
jne
scas
pop
std
incl
pop
inc
mov
aam
mov
push
jecxz
xor
fwait
pop
ss
adc
jp
ljmp
rclb
loope
dec
xchg
pop
popf
popf
inc
pop
add
xchg
push
js
push
inc
subl
aas
ds
jg
push
test
cmpsl
leave
xor
fcmovb
test
movsb
cmp
xor
sbb
pusha
pop
push
pusha
test
lahf
cmpsb
xchg
lods
push
xor
cmpl
jecxz
push
pop
scas
dec
subl
rcr
mov
jns
stos
lods
mov
mov
movsb
mov
loop
inc
repnz
jno
add
hlt
fisubl
loope
mov
out
pushf
imul
cmpsl
mov
inc
loopne
pop
mov
mov
stos
mov
push
mov
mov
sbb
stos
xchg
std
iret
push
pop
mov
dec
push
add
inc
es
stc
cmp
cld
pushf
and
mov
xchg
pop
jnp
jmp
adc
call
movsl
or
xchg
jmp
pop
in
les
sbb
xchg
scas
push
pop
ret
mov
loope
cmp
adc
mov
and
das
sub
sub
in
or
mov
mov
jp
dec
cmp
jns
adc
cld
xor
xchg
sub
xor
sub
pop
cmp
out
push
xchg
jmp
and
mov
xchg
mov
ret
dec
std
mov
js
or
popf
sub
in
leave
fcmovnb
enter
je
ja
xchg
and
pop
mov
enter
ljmp
cmp
push
mov
xlat
ror
xor
fst
xor
xchg
or
push
loope
and
lods
jp
ljmp
subb
push
shll
push
sbb
xor
sbbb
push
cwtl
stos
dec
jns,pt
repnz
xchg
out
test
cli
jge
lcall
aaa
lods
pushf
popa
add
add
out
mov
imul
mov
push
std
jg
or
decl
mov
or
lcall
push
sbb
mov
aad
push
inc
cs
pop
subl
dec
das
test
mov
lods
mov
roll
dec
xchg
add
xchg
cmp
mov
imul
xchg
ret
fnstenv
test
xchg
enter
cmp
jno
test
sbb
test
add
dec
int
mov
call
jno
jp
pop
pushf
cmp
lds
lods
pop
fcmovnbe
push
push
aas
mov
or
push
add
xchg
movsl
cwtl
outsb
xlat
das
xchg
lock
lret
mov
out
les
getsec
xchg
mov
and
shr
and
aas
psubd
cmp
and
loope,pt
out
rolb
jb
lock
fcmovu
xchg
pop
sbb
ljmp
movsl
and
mov
jb
jns
xor
and
mov
cmp
popa
in
test
bound
adc
jp
clc
inc
dec
ret
pop
es
jl
out
loopne
push
test
mov
xor
and
movl
or
adc
mov
aad
out
or
and
andb
call
jp
and
dec
testb
les
add
mov
sub
jb
xor
xchg
test
in
push
popf
push
aaa
push
push
push
add
das
dec
dec
std
lock
inc
out
out
ljmp
inc
mov
lds
cmp
fsts
mov
push
pop
xchg
add
sbb
mov
mov
subb
adc
or
jns
mov
ror
ljmp
sub
push
cli
dec
add
fwait
xor
or
push
mov
test
push
push
xlat
scas
dec
test
out
jge
mov
jo
lods
je
push
and
ds
not
test
cmc
mov
popf
adc
call
loopne
and
mov
sbb
in
or
std
push
xlat
dec
pop
add
or
pop
cli
jge
lods
vdivsd
sarl
mov
mov
lds
and
cmpsl
mov
movsb
es
pop
cld
test
mov
adc
xchg
fcmovb
out
dec
sub
xchg
mov
daa
jns
mov
cwtl
pushf
cmpl
nop
pop
out
adc
sbb
add
jb
jne
mov
out
das
xchg
lods
sub
outsb
push
push
jge
add
aas
mov
xchg
and
add
lcall
adc
es
loopne
cmp
xor
lcall
arpl
fisttpl
test
pop
or
rcrl
mov
pop
inc
inc
or
or
scas
dec
mov
pop
adc
or
dec
das
mov
dec
stc
sbb
iret
sub
icebp
es
adc
cmp
add
mov
dec
and
fwait
scas
mov
xchg
xchg
fimull
dec
xchg
cmp
in
std
pop
adc
popf
gs
push
xor
fwait
mov
jnp
push
fistpl
sbb
push
jl
pop
sahf
ret
jecxz
fimuls
nop
into
ret
mov
sbb
clc
leave
mov
push
test
pusha
or
or
push
inc
cmp
adc
ficomps
ljmp
dec
xchg
outsl
mov
scas
xor
adc
dec
jns
mov
sbb
mov
push
popf
jnp
outsb
xchg
cmp
int
sub
ficompl
icebp
inc
test
pop
into
adc
add
sbb
fsubrp
sbb
dec
mov
pop
sbb
and
rcrl
push
dec
push
sbb
fsubr
xor
aad
xchg
jns
ret
xchg
mull
jae
ljmp
imul
cltd
fidivrl
std
sbb
js
or
in
jmp
pop
inc
sbb
cmpsl
xchg
shlb
xchg
icebp
dec
call
fwait
movsb
push
xchg
push
pop
dec
mov
mov
imul
ja
add
iret
mov
into
fistpl
dec
cmp
jo
leave
cltd
cli
pop
dec
or
fwait
inc
xor
stos
std
insb
sub
addr16
push
cmp
lret
pop
add
popa
and
fcoml
stc
push
scas
clc
cmp
lea
ficompl
jb
arpl
mov
xchg
divb
adc
mov
aaa
jno
outsl
pusha
aad
arpl
in
add
jno
push
jbe
imul
mov
frstor
data16
shll
cli
cmc
scas
jae
mov
test
pop
shrl
push
test
rcl
in
mov
into
mov
loopne
mov
out
ja
adc
adc
pusha
ljmp
xchg
inc
cmp
sub
std
gs
pop
fucomi
movsb
mov
mov
and
fisubl
popf
popa
gs
inc
pusha
mov
nop
lds
xor
and
mov
jp
or
add
cmpsb
iret
call
insb
pop
jb
dec
sub
xchg
adc
outsb
outsb
or
push
and
and
pop
sti
mov
imul
xlat
pop
cmp
inc
pop
adc
cmpsl
ds
cmc
and
and
pop
xchg
ret
ds
push
loop
fdivrp
pushf
jge
aad
jne
push
div
loopne
iret
negl
test
mov
repz
imul
dec
push
sahf
stos
add
enter
push
pop
shll
ljmp
mov
sub
push
fisubl
sub
pop
test
lahf
fldcw
cmpsl
mov
adcl
ja
sub
stos
and
xor
aam
cmp
outsb
icebp
cltd
adc
mov
shrb
cmp
dec
decb
sub
pop
nopl
add
sti
dec
cli
adc
mov
push
cmp
inc
pop
nop
out
stos
cli
outsb
sbb
mov
jnp
and
je
sub
fwait
cmp
lock
insl
lret
lcall
xchg
add
scas
pop
cmpsb
xchg
sahf
mov
testb
jae
cltd
inc
movsb
xchg
jbe
mov
xchg
pop
dec
pushf
sbb
mov
mov
sub
mov
xchg
lock
pop
mov
inc
mov
addb
cmp
enter
shrl
outsl
lcall
ss
adc
ss
nop
movsl
cld
and
nop
pop
ret
adc
fdivr
xor
fbld
xchg
inc
mov
cmp
xor
loopne
mov
inc
int
subb
add
xchg
lret
stc
cmpsl
dec
call
or
divb
inc
roll
in
iret
call
mov
sub
scas
enter
iret
arpl
pop
sbb
push
jo
in
lcall
lods
adc
mov
lret
lds
xchg
mov
adc
call
adc
push
call
aaa
test
dec
sub
inc
sub
daa
jbe
movsb
stos
movsb
or
jne
imul
gs
lock
push
mov
sarb
sti
insb
in
sbb
hlt
jge
icebp
inc
dec
mov
sub
adc
lds
push
aad
mov
xor
mov
mov
pop
add
call
cmp
movsb
rolb
inc
movb
shrb
sbb
xchg
mov
adc
arpl
mov
test
out
ret
negl
jecxz
inc
fmul
jp
dec
mov
and
jno
pop
push
dec
add
outsb
cmp
sub
xor
and
inc
fwait
pop
inc
mov
in
addr16
xchg
popa
mov
jle
sub
and
and
ja
jmp
push
cwtl
sbb
sub
int
jns
push
or
or
dec
sti
pop
add
sbb
sbb
shr
mov
leave
fwait
add
popf
icebp
iret
jns
add
push
cmp
loop
loopne
jb
mov
xchg
sbb
ja
loop
jecxz
sbb
jmp
decb
stos
pop
out
ja
xchg
push
mov
jmp
in
dec
orl
pop
mov
aas
mov
pushf
sbb
stos
inc
xchg
sub
and
mov
cmpsb
in
dec
and
sbb
mov
mov
xchg
xchg
out
mov
rorb
fistl
in
ret
arpl
lea
dec
subb
mov
inc
mov
leave
or
cs
inc
sbb
test
int
inc
ss
jmp
mov
push
lret
mov
mov
nop
hlt
fcoms
not
aad
ficompl
les
xchg
shrl
and
xor
leave
mov
dec
movsl
or
mov
les
insb
scas
les
xchg
inc
adc
loopne
pushf
and
sar
add
enter
shrb
jns
mov
pop
dec
mov
cs
sbb
scas
cmp
push
call
push
ret
push
mov
push
in
cmp
dec
ret
mov
aad
sahf
bound
loopne
sti
popf
sub
addl
pop
fadds
push
inc
stos
inc
mov
mov
je
lods
add
push
push
xchg
ss
or
icebp
rclb
mov
jg
and
lcall
sub
xor
sbb
mov
xor
rorl
in
mov
mov
xor
sbb
pop
faddl
pop
mov
daa
loop
xchg
pop
mov
fcoms
cmp
xlat
sbb
outsl
shll
sar
lock
hlt
out
mov
dec
and
and
add
xchg
inc
imul
jg
xchg
xchg
adc
mov
sub
jl
cmp
sub
cwtl
stos
mov
inc
lret
pushf
aam
dec
inc
jp
adc
mov
fimull
xor
ret
test
ja
mov
xorb
cli
lods
aas
nop
filds
stos
test
sub
mov
fdivrl
pop
movsb
push
int
push
jmp
js
mov
dec
xchg
repnz
subl
sti
lret
jno
lods
push
sahf
jnp
cld
imul
dec
hlt
jmp
ds
ss
aad
iret
add
inc
loop
mov
push
jno
imul
xor
icebp
mov
adc
xchg
scas
sub
jl
jmp
into
inc
adc
jnp
ret
xorl
mov
push
or
nop
aaa
enter
int3
adc
data16
test
mov
stc
xlat
and
outsb
pop
loopne
inc
mov
dec
test
incb
lock
subl
xor
ljmp
and
mov
jecxz
daa
adc
jbe
rcrl
sbb
lahf
and
data16
mov
frstor
imul
lret
sub
ret
dec
movsl
repz
sti
scas
cld
fs
or
mov
jnp
sub
stc
xor
loopne
mov
negb
les
push
or
xchg
mov
loopne
rcrb
xlat
jp
mov
scas
por
fsubr
sub
movsl
rorl
mov
pop
add
and
mov
pop
lcall
out
push
incl
enter
sub
repnz
and
xor
popf
pop
dec
jmp
cmp
mov
shlb
lds
dec
jae
fiadds
jno
mov
out
xor
and
jecxz
xchg
xchg
mov
mov
test
or
push
xchg
dec
into
or
xor
cmp
adc
cmp
cmpsl
cmp
add
or
sahf
rcll
and
dec
cli
sub
xchg
in
sub
inc
pushl
and
sub
dec
mov
jnp
std
add
outsb
xor
sti
fcmovnu
in
orl
orb
pop
outsl
mov
jae
ffree
sub
lret
sbb
int
rclb
push
aam
and
xor
dec
bound
fwait
mov
es
cmp
mov
je
es
int3
test
sub
mov
and
push
aaa
in
int
insl
inc
and
sar
jecxz
and
sbb
std
xchg
mov
push
leave
int
jle
adc
pop
pop
outsl
shll
cs
out
test
jb
push
int
or
sbb
icebp
adc
ror
subb
sub
inc
rorb
mov
push
lea
pop
mov
loopne
shlb
fnclex
lods
out
in
dec
into
inc
add
shr
scas
xlat
clc
or
dec
mov
mov
dec
xor
loope
bound
fsubrl
xchg
adcl
iret
mov
pop
insl
setae
dec
xchg
dec
jl
jge
mov
mov
add
xchg
inc
ret
das
pop
mov
cmpsl
mov
hlt
or
andb
insl
sub
int
test
mov
mov
mov
aad
sub
mov
sbb
shlb
repnz
sub
mov
xchg
inc
ret
push
jae
lds
jnp
dec
mov
mov
pop
pop
mov
xchg
jg
jge
lret
test
aaa
sbb
flds
stos
daa
and
loop
test
out
xchg
inc
sbb
imul
xlat
icebp
cltd
mov
mov
push
sbb
je
pop
aad
cld
mov
scas
lock
gs
out
sub
test
or
dec
fmull
mov
cmpsl
mov
mov
mov
iret
scas
sysenter
pop
lcall
je
xchg
adc
ret
mov
ficoms
add
std
pushf
lcall
fcmove
in
shr
sbb
and
filds
in
push
mov
mov
and
mov
jle
jns
sbb
mov
mov
or
movsl
add
pop
pop
out
cmp
inc
sub
int3
push
stos
ret
mov
add
je
sarl
lods
jb
push
stc
cwtl
bound
in
rcll
mov
cmp
sarl
arpl
push
pusha
cmc
adc
xchg
imull
jge
fisttpll
stos
inc
xor
push
lahf
testl
mov
mov
mov
jno
xchg
out
mov
inc
sub
in
adc
cwtl
xchg
les
repnz
xor
imul
sarb
and
pop
mov
cltd
jl
lcall
adc
pop
sub
movsl
popf
pop
xor
push
pop
add
lcall
and
pop
lret
sbb
aad
ds
cs
xor
mov
push
inc
popf
jle
jp
orl
xchg
push
and
ja
mov
or
sub
pop
mov
test
popf
xchg
iret
pop
cwtl
push
xchg
cmc
dec
adc
std
mov
fnstcw
orb
mov
inc
pusha
pop
aad
sbb
hlt
stc
jno
gs
mull
add
test
stos
jnp
lahf
gs
shlb
xchg
iret
sub
and
jne
mov
mov
mov
aam
push
mov
xor
jne
mov
xchg
out
xchg
movsb
shlb
pushf
test
dec
es
out
fcomp
mov
mov
dec
out
jmp
sub
lret
fdivl
lret
sub
in
xor
sbb
mov
mov
hlt
lcall
into
inc
inc
pusha
sbb
pop
push
cltd
add
xchg
push
ss
jno
or
or
xchg
loope
sub
mov
test
test
sub
stc
jg
mov
gs
sub
and
mov
mov
push
sub
fidivs
add
jae
sbbb
fdivrl
loope
jle
jmp
jmp
or
push
pop
out
sti
pop
fidivrl
adc
nop
push
fiadds
adc
roll
jmp
ljmp
das
ljmp
shlb
testl
inc
enter
cmp
mov
lcall
shl
push
lea
and
idivl
add
out
and
cmpsb
dec
sub
sub
mov
xchg
loop
dec
mov
push
pop
add
and
sub
pop
fisttpll
xor
sbb
pop
add
mov
aaa
jg
fwait
stos
or
jbe
mov
movsl
leave
lods
or
popa
or
loope
fs
jle
ljmp
sub
adc
xor
mov
xlat
lods
push
loop,pt
push
mov
insl
inc
cmp
fs
movsb
cmp
jo
daa
cmc
cmp
pushf
xor
enter
push
andl
pop
pop
leave
mov
push
sub
push
rcrb
dec
sub
mov
pop
test
sub
mov
cmp
and
lock
mov
std
aam
pop
pop
pop
add
xchg
adc
mov
jle
pop
add
jb
int
push
lret
ficoml
mov
mov
ret
jnp
mov
or
sti
outsb
jnp
mov
push
pop
lret
and
les
shlb
adc
and
js
jno
icebp
stos
xchg
sub
dec
inc
imul
add
add
xchg
movsl
dec
xchg
xor
push
repnz
outsl
xor
mov
xor
aam
addl
imul
mov
shrb
loopne
imul
fmuls
add
das
xchg
jne
mov
movsb
inc
stos
push
xlat
pushf
cli
jbe
and
hlt
idivl
dec
leave
xchg
pop
sub
push
test
jg
outsb
and
add
bnd
js
xor
jnp
test
mov
fisubrl
jle
and
jmp
cmp
and
push
scas
ret
push
adc
cli
pop
mov
nop
call
adc
dec
adc
test
jmp
add
adc
jecxz
fldt
filds
iret
xchg
xor
mov
push
inc
sarb
adc
jle
mov
lods
dec
lea
leave
fwait
ret
jno
sti
add
scas
iret
adc
mov
mov
xchg
push
test
adc
aam
pop
rorl
nop
xchg
dec
pushf
ja
dec
inc
cwtl
sbb
add
in
push
repnz
cmpsl
cmp
fadds
jle
call
xchg
inc
pop
addr16
add
aam
and
daa
fwait
das
pop
lods
jg
add
movsb
ficomps
mov
cmp
out
push
pop
das
mov
pop
scas
sub
pop
pushf
out
push
fptan
mov
jne
xchg
jne
scas
ret
outsb
imul
mov
inc
int
push
jb
mov
inc
push
mov
xchg
gs
add
popl
push
arpl
and
gs
mov
push
mov
add
xchg
jb
fcmovb
mov
out
cwtl
cs
mov
and
fwait
adc
mov
adc
in
mov
xlat
fwait
mov
insb
push
xor
int3
sbb
cmc
nop
fwait
pop
into
mov
jns
mov
jecxz
jp
dec
addr16
add
inc
and
fildl
mov
arpl
dec
add
cltd
mov
or
push
dec
aam
mov
jecxz
addr16
push
fcmovne
cmp
pushf
pop
sub
cmp
and
lret
dec
xor
xchg
push
or
mov
cmp
jge
test
das
pop
mov
outsl
sbb
ja
pop
lods
push
std
das
adc
lret
imul
dec
jecxz
lods
ss
jo
push
pop
sbb
lods
mov
inc
and
sub
and
jnp
imul
fwait
jnp
repnz
mov
lret
jbe
aas
adc
out
push
jp
jo
imul
inc
pop
jbe
test
mov
je
jne
or
xchg
pop
in
xor
mov
and
pop
gs
cmp
in
insb
inc
adc
or
fimull
or
aad
sbb
sbb
cmp
inc
imul
fnstsw
pop
dec
int
sarl
xor
mov
push
jae
fimull
lret
jns
pop
scas
movnti
xor
negb
dec
xchg
xor
jecxz
jg
xchg
sub
repnz
mov
les
xchg
sub
js
mov
sub
cs
imul
aad
jl
xchg
inc
xor
ja,pn
xchg
mov
sbb
repz
aaa
decb
sbb
lret
pop
xor
inc
imul
arpl
scas
out
sbb
dec
aam
popf
cs
lods
push
sub
sub
aaa
cmc
popa
fcmovbe
cmp
push
cmc
mov
mov
and
jnp
inc
inc
in
mov
addr16
or
dec
xchg
and
mov
cmpsb
mov
mov
popf
outsl
xchg
or
int3
test
xchg
in
mov
jl
cmp
leave
sub
shr
add
adcb
mov
mov
aad
cmc
jmp
sub
mov
push
jecxz
fs
cli
scas
pop
cmp
and
leave
outsb
jp
lret
cmc
dec
push
xchg
jbe
mov
cmp
add
daa
gs
jg
ds
popf
mov
or
add
cmp
and
push
and
pushf
cmp
and
xchg
pop
ret
test
mov
je
or
adc
aas
cmp
testl
movsl
mov
pop
aam
jmp
or
cmc
in
notl
and
add
and
cmp
sub
mov
nop
and
xchg
loop
xchg
push
daa
out
call
scas
xchg
fmul
push
repnz
mov
adc
push
mov
hlt
push
cmp
xchg
cmpsb
push
mov
inc
lret
xlat
ljmp
gs
sub
lock
xor
test
sarb
cltd
jecxz
dec
pushf
xchg
mov
pusha
movsb
jbe
dec
repnz
push
fistps
or
and
adc
push
sub
xchg
lods
and
adc
bound
repnz
jno
fcomip
mov
adc
pop
mov
cmp
in
mov
int3
sbb
xchg
xor
popf
inc
and
mov
stc
sbb
mov
cmp
ss
aas
fldt
ret
ret
in
rcll
jp
data16
mov
scas
notl
lods
mov
test
dec
cmpsb
xchg
inc
out
xchg
inc
jge
imul
loope
pop
fbstp
pop
and
jnp
pop
sbb
clc
test
aam
dec
shll
fistl
cmpsl
pop
adc
and
mov
add
call
mov
mov
pop
sub
mov
mov
push
sarl
ficoms
scas
mov
sub
sahf
test
insb
sub
and
pop
out
mov
cmp
scas
in
mov
mov
jge
pop
adc
sar
aad
mul
jb,pn
lret
pop
and
xchg
pop
lret
lods
pop
xchg
push
cmp
test
les
mov
out
mov
out
mov
addr16
xchg
push
test
pop
xor
mov
push
das
fwait
leave
xchg
push
fadds
xor
lcall
xchg
in
cld
push
and
testb
aam
int
sub
xchg
or
lret
xlat
jno
push
loopne
sbb
lea
xor
sbb
movsl
dec
push
xlat
loop
fisubrl
or
xlat
cmp
or
or
mov
push
xchg
stos
inc
test
cmp
out
xchg
push
ja
lcall
lds
xchg
insb
cmp
in
sarl
fsubrp
in
mov
xchg
push
and
inc
imul
adc
inc
leave
notb
xor
cmpsl
cmpsb
jns
sti
adc
ljmp
ret
mov
loope
adc
inc
push
cmpsl
lods
std
lret
xlat
push
loopne
fcmovbe
add
cltd
mov
push
test
mov
das
das
push
add
daa
xchg
dec
scas
mov
stos
lcall
push
je
dec
pop
inc
xchg
inc
outsl
mov
popa
ss
push
leave
pop
inc
aaa
stos
rolb
repz
sahf
imul
mov
je
sarl
daa
stos
mov
stos
fs
push
mov
imul
xlat
pop
mov
cmp
neg
fwait
and
mov
mov
xorb
je
jnp
hlt
jl
or
int
and
cltd
inc
ja
loopne
jg
fwait
ljmp
das
je
fsub
cmp
inc
outsb
cmpsl
push
jnp
ficoms
inc
push
jnp
ljmp
mov
or
xchg
jp
call
jnp
out
push
insb
shll
mov
pop
leave
xchg
hlt
dec
loope
rcr
shr
pop
testl
and
mov
lods
inc
xchg
jne
test
sarl
fildll
pop
sub
xor
mov
test
sbb
or
pusha
adc
gs
aad
inc
aam
lahf
lds
mov
jb
xor
inc
mov
adc
mov
fldl
cli
nop
ficomps
or
mov
sbb
dec
sarl
xorl
out
mov
int
mov
jmp
sub
dec
notb
jo
jecxz
fidivl
push
loopne
fdivs
dec
add
pop
fsubrs
xchg
cwtl
pop
add
sbb
arpl
lds
mov
std
out
fnstenv
cmp
xchg
adc
imul
imull
sbb
daa
xchg
add
jl
in
mov
cmpsb
in
jne
es
mov
lahf
jge
adc
xchg
in
jle
imul
gs
sbb
out
mov
js
andl
xor
push
and
aam
cmp
cmpsb
mov
and
jnp
sub
pop
xchg
sbb
je
and
test
inc
pop
sarb
std
push
or
popa
xlat
ret
jae
idiv
jns
pop
sahf
sahf
inc
pop
ds
sub
jbe
clc
dec
xchg
push
mov
or
pop
push
out
inc
jge
mov
and
fsubs
sbb
stc
pop
lods
imul
loop
aaa
shll
add
sbb
arpl
test
adc
loopne
lahf
pop
mov
sahf
pop
dec
cmp
out
xor
jb
ficoms
into
xchg
lahf
aam
xchg
jl
adc
mov
cmp
test
push
test
mov
movl
int
test
pop
lods
fldl
push
jecxz
pop
xchg
mov
and
leave
mov
faddl
loop
xchg
gs
lcall
or
mov
add
or
xchg
sbb
push
mov
aas
mov
in
mov
and
lds
mov
or
sahf
in
pop
dec
jne
and
xlat
pop
mov
inc
sub
aas
pop
push
insl
repnz
pop
pmuludq
test
test
dec
cmpsb
cmpl
sub
mov
sub
sti
or
lahf
cli
sbb
lret
mov
mov
dec
ror
adc
adc
jno
jno
adc
dec
icebp
pop
push
into
pushf
aaa
loop
aad
sbb
sbbb
push
push
and
cld
pop
popf
loop
int3
inc
hlt
jg
adcb
test
movsl
sub
dec
imull
bound
je
and
inc
xor
out
adc
repz
jne
jae
dec
mov
bndldx
mov
sub
mov
out
jg
rcrb
pop
pop
cmp
xor
mov
mov
inc
sub
hlt
jae
push
or
xorl
out
leave
adc
sub
mov
sub
push
mov
lods
subl
fs
pushf
cmc
mov
je
ja
mov
ja
adc
pop
sbb
sbb
sbb
push
hlt
pop
cmc
add
cmc
adc
jo
cli
inc
ret
loope
hlt
mov
pusha
mov
movsb
mov
xor
mov
or
xlat
push
outsb
cmp
imulb
ret
add
push
lahf
cmp
fsubrs
jne
adcl
inc
aas
test
and
cmpsb
pushf
es
mov
inc
push
lcall
lcall
pushf
arpl
push
cmpsl
fisubs
sub
into
or
call
lcall
mov
fidivs
xchg
mov
mov
aad
cmp
ds
cmpsl
xor
insb
and
push
inc
in
cwtl
pop
cmp
sbb
shll
sub
adc
or
jge
cmp
adc
clc
sbb
push
dec
mov
outsl
dec
lea
fisubrs
add
out
mov
jb
jo
jecxz
addr16
push
ja
push
sub
jp
and
jb
leave
jnp
shrb
push
mov
jne
fs
inc
push
pushf
mov
add
sbb
mov
js
stos
push
and
sbb
jbe
mov
lds
mov
js
or
aaa
cmp
es
adc
xor
xor
stos
cwtl
sbb
pusha
mov
mov
mov
shrb
repz
sub
push
sub
jmp
jnp
test
add
push
push
mov
xchg
mov
stc
xchg
and
rol
mov
mov
inc
lods
cmp
clc
or
sub
xchg
dec
stos
xchg
or
pop
aaa
out
dec
inc
lcall
lods
iret
lret
add
data16
dec
or
gs
mov
adc
lret
testl
and
popf
push
sarl
icebp
fdivr
inc
xchg
pop
into
subb
fucom
add
pop
sub
inc
outsl
mov
mov
xor
adc
fimuls
data16
mov
inc
cmpsl
lods
sub
push
mov
out
dec
cmp
gs
sub
cmp
iret
aam
push
xor
test
pop
pop
in
clc
mov
cmp
arpl
push
mov
mov
fldt
mov
sub
insl
inc
in
ja
je
dec
cmp
xchg
pop
add
out
push
mov
jbe
and
call
lea
mov
movsl
pop
rorl
push
icebp
cmc
cmpsb
in
mov
sbb
cmp
mov
xchg
or
xchg
add
jb
lret
adc
xchg
dec
or
sbb
loope
cmp
mov
push
les
ret
js
lock
xor
cmpsb
mov
test
out
mov
mov
mov
or
dec
mov
dec
fidivl
dec
mov
add
xor
das
mov
pop
pop
cli
lret
sub
pop
mov
mov
push
dec
xchg
lea
mov
popa
ror
adc
add
out
lcall
call
es
test
xor
sahf
dec
test
fstps
xor
ss
xor
imull
faddl
jge
cmp
dec
sub
adc
jle
roll
mov
mov
les
in
sbb
mov
jg
jb
fwait
insl
sbb
imul
jmp
inc
xchg
or
pop
gs
jno
je
add
add
jnp
rclb
xlat
xchg
fbstp
into
pop
and
jne
or
aad
ds
xchg
xor
push
mov
fsubrl
scas
add
and
cmp
mov
add
inc
arpl
cmpl
or
frstor
xor
xor
adc
sti
nop
mov
xchg
movsl
rorl
mov
push
int
es
fildl
xlat
iret
cwtl
fldl
les
sbb
or
xor
inc
gs
cmpl
cmp
rol
stos
stc
js
lods
push
or
popf
stc
ds
pop
movsb
jmp
sub
dec
cmp
inc
dec
cmp
sub
dec
add
mov
mov
or
sbb
xor
push
sub
push
cmp
pop
int3
imull
push
jbe
xchg
xor
imul
je
adc
lock
pop
daa
stos
jo
adc
arpl
iret
inc
add
dec
xchg
jl
pop
or
cltd
mov
dec
into
mov
stos
xchg
orl
mov
stos
push
or
data16
stc
pop
fcmove
xlat
fcoms
psubw
sub
xorb
jp
push
jge
nop
fstpt
mov
rolb
jmp
jge
outsb
int
mov
mov
leave
jns
cmp
inc
xorb
add
std
mov
jo
inc
ret
mov
rclb
faddl
push
lcall
jl
dec
in
incb
mov
mov
ret
idivl
push
or
jo
scas
gs
cli
rol
pusha
add
bound
pushf
in
sbb
ja
mov
mulb
inc
sbb
push
adc
add
repnz
or
mov
out
add
mov
or
out
pop
pop
loop
cmp
outsb
enter
or
data16
xlat
jg
or
jae
mov
repnz
test
gs
lcall
outsb
mov
and
add
add
mov
pop
sar
mov
cmpsb
mov
imul
rolb
aad
cmp
cmpsb
or
lock
push
sub
xor
ja
xor
loopne
inc
lods
sbb
cmp
dec
sub
sbb
pop
iret
inc
mov
cmp
xchg
sbb
dec
mov
lock
adc
shll
push
mov
test
mov
sub
mov
jnp
jae
jg
fs
cli
push
jbe
stos
inc
stos
and
sub
cmp
jns
movsb
push
add
repnz
dec
ret
lcall
push
mov
and
shr
jnp
mov
inc
addr16
pushf
push
mov
ret
sbb
mov
cmpsb
stos
push
in
lret
lret
add
mov
shrb
icebp
adc
adc
roll
mov
xchg
push
mov
jmp
hlt
in
cltd
dec
cli
ja
addr16
xchg
push
mov
in
aad
add
cwtl
dec
into
sahf
mov
xor
insb
test
jne
mov
xchg
scas
mov
xchg
pop
fcmovne
push
mov
stc
adc
xchg
fcoms
std
sbbb
push
mov
faddl
inc
xchg
mov
fcompl
mov
js
iret
outsb
xchg
or
sbb
pop
push
inc
outsb
je
mov
cmp
sahf
lahf
std
ljmp
lods
sbb
scas
push
test
lcall
mov
lock
pop
mov
inc
ficompl
xchg
mov
push
int3
or
sub
xorb
pop
mov
les
jo
jg
sbb
cmp
add
xchg
mov
mov
fadd
pop
outsb
jp
cmp
xchg
adc
lahf
sub
add
cmp
mov
push
push
sub
mov
stc
cli
movsb
incb
adc
mov
sbb
cltd
out
aaa
sub
jne
xor
push
popa
bound
fmuls
mov
push
mov
imul
dec
dec
sbb
pop
cli
mov
out
fnstsw
bound
lods
jo
pop
mov
sbb
ljmp
inc
test
sbb
jp
loope
dec
rol
cs
sbb
or
pushf
push
jns
fmuls
xor
push
or
inc
int3
orl
push
dec
adcb
mov
ret
js
ds
stos
mov
mov
cmpb
dec
setl
aaa
inc
ljmp
decb
and
in
mov
sbb
out
shll
sbb
sbb
clc
je
mov
filds
mov
mov
ret
push
xor
fistl
sbb
mov
xor
addl
lock
xor
jns
in
push
push
cmpsl
cld
xor
or
out
xor
inc
pop
pop
add
pop
push
add
pop
data16
ja
test
into
mov
ljmp
and
adcl
test
or
xor
pop
out
stc
sbb
lcall
jno
xchg
and
push
adc
out
decb
mov
loop
bnd
mov
mov
xor
insl
ja
jmp
in
dec
inc
and
gs
push
mov
rcll
sub
mov
mov
sbb
inc
lods
dec
xchg
and
push
add
push
lret
and
sarl
mov
sub
pop
cltd
push
adc
ljmp
jae
pop
imul
and
in
xor
inc
es
sub
mov
jo
or
fsubrs
cmp
bound
aaa
cmp
fwait
rcl
out
imull
push
orb
dec
aam
notb
adc
je
mov
cmc
and
sbb
and
in
adc
dec
rclb
mov
push
pop
das
adc
sbb
xor
lods
arpl
jno
pusha
cltd
xor
pop
sub
and
jae
insl
popf
pop
or
out
xchg
xchg
pop
popf
push
icebp
loop
lcall
jae
cmp
mov
jecxz
decb
add
cmpsl
pop
mov
fs
mov
add
xchg
and
sbbb
xor
mov
and
lock
push
and
dec
mov
loopne
jns
mov
dec
enter
lret
sbb
mov
movsb
cmp
mov
mov
push
add
xchg
sbb
mov
add
mov
cmp
adc
push
jle
repz
mov
mov
pop
jno
jge
js
cmp
ss
sbb
mov
sahf
mov
fcomps
xchg
ja
test
mov
test
lea
mov
jae
jbe
fsubl
sahf
xor
mov
jae
ds
sbbb
pop
adc
ret
repz
stc
jno
xchg
xchg
cld
pop
outsl
mov
xchg
cmp
test
insl
adc
mov
lods
xor
ficoml
inc
mov
rorb
addl
dec
pop
pop
xchg
repnz
cld
cmc
sbb
cli
pop
aas
ret
jno
xor
mov
subb
add
mov
xor
sbb
add
sbb
mov
fisubrs
pop
out
adc
stos
sbb
and
add
mov
cli
sti
or
mulb
push
pop
cmpb
pushf
test
sbb
outsl
push
jg
fwait
add
and
aad
pop
sarl
test
pop
jae
and
call
pusha
xor
lret
jl
cmc
mov
outsb
or
mov
cmp
jnp
and
es
dec
mov
subl
jle
popa
lods
sahf
jecxz
daa
mov
aad
das
add
sbb
addr16
xchg
cmp
repnz
sbb
xor
dec
popf
mov
ret
leave
fs
mov
inc
inc
jle
xchg
aaa
jo
enter
jbe
mov
test
xchg
lret
decb
sub
xchg
fadds
xlat
jge
add
ret
fidivs
pop
adc
scas
fistl
adc
imul
sbb
xchg
je
cmp
mov
pop
push
fsubrl
mov
insb
cmp
mov
cmc
and
data16
stc
mov
cmp
int
lds
add
adc
mov
mov
out
cmp
xchg
les
leave
xor
dec
fcomp
dec
nop
in
ds
lret
push
les
adc
sbbl
test
jl
fmuls
xchg
cmp
jno
cmpsb
sbb
in
lret
sub
push
add
or
xchg
out
imul
fisttpll
xor
pop
int3
and
jge
cld
loope
jo
mov
xchg
and
ja,pt
push
add
cli
fcomp
aad
dec
call
sbb
inc
scas
call
addr16
or
xor
xchg
push
cmc
lods
jb
pop
pop
int
pop
dec
orl
shl
repz
adc
sbb
adc
xchg
sub
mov
adc
pop
das
push
ficompl
or
lret
bound
out
test
mov
ficoms
sub
cmp
lods
mov
addr16
push
leave
mov
js
in
rcrl
dec
or
nop
sub
add
aaa
pop
and
cmp
ja
mov
frstor
adc
mov
test
pop
jge
sbb
bound
stos
mov
mov
fisubl
pop
mov
push
xchg
cmp
ret
bound
bound
ja
mov
cltd
mov
fsub
dec
mov
dec
mov
movl
dec
pop
adc
int
xor
cmpsb
mov
clc
aas
jnp
xor
insb
lret
ja
lret
popa
mov
mov
push
bound
imul
pop
mov
sbb
inc
adc
in
pushf
pop
pusha
mov
xor
lahf
iret
pushl
scas
stos
mov
mov
cmp
add
lea
rolb
and
movsb
xchg
inc
xorl
ds
call
pop
adc
sbb
mov
dec
push
mov
nop
lcall
in
inc
dec
pop
push
mov
dec
push
pop
sub
jns
mov
sub
push
inc
sub
mov
ret
and
inc
push
mov
fiadds
ljmp
dec
adc
pop
cmp
xchg
add
ljmp
sub
xorl
ret
outsl
ds
js
or
pop
negl
roll
sti
es
shrb
enter
jge
rolb
sahf
scas
xchg
mov
pop
out
je
pushf
sbb
mov
sbb
mov
xchg
mov
hlt
adc
pop
add
mov
es
ds
cmp
fcmovne
aaa
pusha
xchg
adc
int
neg
xchg
stos
sbb
sbb
insb
jns
mov
sub
mov
xor
js
fld
adc
inc
jmp
push
mov
xor
test
cmpl
arpl
out
insl
xor
insl
mov
in
daa
cmp
out
dec
mov
cmp
mov
call
sub
add
stc
rcl
movsl
sbb
push
sub
inc
into
lcall
mov
or
xor
push
test
sarl
and
cmpsb
mov
jp
fcomp
roll
lods
flds
jg
inc
cmp
pop
lahf
adc
cmp
xchg
mov
mov
xor
add
test
cmpsb
inc
stos
lods
mov
sahf
or
call
call
pop
andb
dec
jle
add
cmp
lods
cmp
pop
into
ror
inc
xor
mov
mov
cmc
push
ljmp
or
adc
int
xor
pop
dec
sub
mov
or
xor
mov
aam
pop
push
add
popa
push
jb
jecxz
jbe
inc
nop
push
insb
mov
lret
fmull
jno
add
scas
sub
pusha
jl
lock
adc
sbb
jecxz
sub
add
in
das
test
es
cwtl
lds
iret
mull
jae
push
mov
and
adc
out
imulb
cmp
inc
dec
mov
push
push
lret
and
or
dec
cs
pop
push
imul
cmp
sti
movsb
sbb
aad
add
arpl
xchg
inc
cs
out
lahf
push
xchg
stc
push
inc
frstor
push
or
fidivs
sbb
out
cmp
mov
mov
call
lret
and
pop
mov
ficomps
or
adc
dec
addr16
clc
mov
add
loope
pop
subl
cwtl
bound
adc
xchg
xchg
rorl
inc
xor
mov
adc
pop
or
sahf
pop
xor
xchg
xchg
ret
sbb
insb
int
mov
sbb
push
xchg
sub
push
dec
dec
jp
xchg
or
mov
mov
push
pop
bswap
lods
mov
cmp
sub
mov
cs
sti
xor
add
cwtl
mov
sarl
cmp
inc
cwtl
xor
loop
cwtl
pop
xor
push
aas
pop
pop
add
mov
adc
inc
fisubl
inc
sub
cli
clc
push
loop
popa
adc
aas
loopne
test
mov
pop
xor
jb
das
or
xor
fsubrs
pushf
ret
mov
xchg
push
push
lods
dec
ret
ret
ljmp
push
cwtl
push
push
popf
jl
jbe
lcall
mov
clc
push
pop
fdivrs
rcrl
lea
sahf
shrb
mov
dec
mov
ljmp
push
cwtl
push
push
shlb
pushf
jl
pop
fstps
dec
inc
jnp
jl
ds
inc
ds
addr16
mov
push
xchg
pop
add
pop
orb
out
cld
add
xchg
sub
lods
in
cli
dec
sbb
movsl
or
arpl
and
rorl
or
fidivrs
stc
mov
xor
mov
sbb
popf
sti
mov
popf
lods
mov
xlat
out
ret
cmp
testl
and
mulb
sbb
scas
and
dec
das
push
iret
push
xor
xchg
add
cmp
shlb
push
cld
pop
sbb
xlat
jo
cs
jne
lret
out
call
sbb
in
dec
push
xor
jae
cmp
dec
out
pop
aad
mov
add
xor
push
mov
xchg
subb
mov
je
cmp
loope
les
jl
sub
adc
rclb
mov
addr16
cmp
push
adc
cmp
xor
adc
inc
jns
xchg
jno
pop
ds
cs
jo
mov
jnp
loop
xchg
aad
mov
xlat
jle
dec
je
push
cmpl
rcll
jmp
sti
sbb
and
pop
rcll
fdivs
icebp
rcrl
and
sub
inc
mov
mov
sbb
adc
pop
jmp
ret
fsubrl
pop
sbb
xchg
jmp
rol
mov
sub
mov
jnp
push
test
fs
sub
or
aaa
push
outsb
out
mov
pop
sub
loope
push
xchg
cmp
sti
stc
pop
cmp
aaa
mov
addr16
adc
push
out
push
popa
add
cmp
in
cmpsl
or
loope
push
or
loope
outsb
xchg
xlat
pop
sub
cwtl
aad
rclb
and
iret
push
stos
push
popa
aam
mov
cld
mov
and
lret
mov
cmp
movaps
mov
jb
popa
roll
mov
pop
stos
inc
inc
dec
dec
cmp
stos
aam
xor
div
sub
lods
jo
incl
jbe
lods
push
mulb
out
cmc
sub
movsb
push
or
inc
scas
scas
in
fildll
pop
and
xor
sub
push
test
inc
fs
mov
in
mov
xchg
pop
dec
dec
das
xlat
mov
cmpsb
and
add
add
es
xor
mov
mov
stos
and
imul
cmp
fsubr
pushf
mov
xchg
pop
xchg
pusha
rcrl
adc
test
stos
pop
sbb
and
pushf
xor
and
es
xchg
xchg
repz
icebp
lods
movsb
mov
cmp
lret
out
cwtl
push
aad
insb
sbb
pop
xchg
jb
mov
lahf
rclb
bound
out
into
jbe
xchg
xchg
stc
push
inc
frstor
push
add
lds
inc
cmc
std
pop
subl
into
xchg
imul
popl
sub
js
push
notl
cwtl
jg
jg
imul
mov
iret
inc
cmc
mov
push
or
sbb
insb
int
je
sbb
rcrl
cmpsb
pop
jle
adc
js
pop
leave
and
mov
adc
fs
test
shrb
jns
cmpsb
mov
add
clc
repz
xchg
add
mov
push
inc
fistl
and
dec
ds
int
lods
sbb
xchg
pusha
out
dec
mov
push
addr16
cmpsb
adc
xchg
push
xchg
jge
cmc
mov
call
adcl
rorb
add
lea
dec
lock
icebp
jnp
mov
cli
and
jl
test
xchg
daa
mov
in
jo
push
cmovge
pop
ja
cmp
outsl
push
mov
inc
dec
outsl
lea
adc
outsb
call
xchg
ljmp
inc
mov
icebp
xchg
xor
cli
clc
jne
add
sti
pushf
orb
xor
add
scas
push
in
neg
int3
call
aam
out
popa
mov
xchg
out
inc
lret
aad
aaa
nop
stos
xchg
ljmp
pop
shrb
dec
push
movsl
arpl
mov
lret
lcall
lds
lock
pmaddwd
nop
and
mov
mov
jge
std
jno
lahf
fistpl
mov
xor
rcrb
sbb
jnp
add
pop
mov
sahf
xchg
mov
and
xchg
cli
cmp
pop
imul
ljmp
insl
js
lret
ja
stos
out
in
fcmovnb
lret
cmp
xor
jb
jg
and
inc
jnp
add
or
jl
sub
push
pop
sbb
fs
push
std
inc
dec
lods
push
fisubs
ror
call
xchg
test
xchg
inc
add
insl
arpl
inc
mov
push
orb
arpl
xchg
out
push
mov
adc
or
clc
mov
add
fildl
push
int
add
in
aaa
cmp
dec
mov
inc
fwait
pop
leave
fisttpl
xor
mov
cmp
push
xchg
dec
and
gs
aas
dec
jle
add
jne
int
xor
test
or
and
aaa
sub
lret
mov
inc
lea
popa
movsl
mov
jmp
stos
sub
pop
push
xchg
sbb
jecxz
jge
call
push
cmp
jg
inc
dec
push
cmp
aaa
xchg
inc
cmpsl
sbb
and
dec
inc
rcrl
cwtl
xor
xchg
pusha
push
xchg
ljmp
mov
mov
inc
sbb
pop
in
or
jne
and
push
in
mov
xor
cmp
test
lods
hlt
push
jb
ja
test
sub
incb
dec
cmpsb
loope
and
gs
xor
sbb
mov
hlt
and
xor
jne
mov
push
js
int3
not
mov
fbld
xchg
add
cld
push
out
jae
popa
jbe
adc
cwtl
jg
adc
rclb
cld
xor
lcall
sub
jp
adc
pushl
icebp
adc
add
pop
iret
and
push
push
add
adc
popa
fdiv
lods
pop
stc
push
roll
jne
xchg
push
jne
stc
inc
mov
sarl
jl
shrb
stc
clc
stos
dec
ja
mov
cmc
mov
nop
imul
scas
dec
or
outsl
lods
jae
jp
gs
mov
dec
clc
aaa
ds
mov
loop
xor
sub
or
int3
jle
fists
cmp
mov
movsl
sub
cmp
test
std
bound
cmpl
ja
stos
dec
icebp
outsb
mov
sbb
push
xor
mov
aas
xchg
in
in
out
inc
and
lock
mov
push
add
add
jb
in
pop
js
add
pop
xchg
push
pusha
pop
dec
xor
fidivrs
pop
aam
fdiv
sub
repnz
or
and
and
orb
out
cld
add
pop
bnd
adc
jge
shrl
fiaddl
jp
addr16
std
dec
dec
pop
push
pushf
hlt
inc
pop
xchg
jmp
cwtl
jno
cmpsl
aaa
and
or
cmpsl
add
inc
jns
or
push
xchg
jno
stos
notb
xchg
lea
pushf
ret
jae
jns
sbbl
cld
add
roll
lds
mov
inc
cwtl
cmpsl
or
es
cmpsb
mov
or
adc
int
mov
enter
lds
and
push
pop
daa
out
fdivs
xadd
mov
test
test
into
and
test
jns
mov
pop
dec
popa
cmp
std
out
pusha
incl
lea
int
xor
xchg
roll
ljmp
sub
xchg
or
lea
in
call
push
xchg
xor
jg
jbe
stc
out
lock
stos
scas
movsl
test
adc
loop
push
sbb
sbb
andl
cmp
dec
inc
mov
pusha
sub
or
pop
jnp
pop
xor
cmpsb
mov
sbb
push
sbb
rol
mov
pop
xor
mov
ret
mov
test
cmp
addr16
lahf
add
push
add
popa
ret
adc
mov
mov
pop
sub
cld
push
xchg
and
inc
sahf
ja
xchg
jmp
pop
pop
or
inc
scas
inc
push
inc
mov
movsb
mov
and
imul
icebp
dec
and
ret
mov
pop
call
mov
lock
add
mov
and
lods
rolb
in
in
sbb
mov
and
pusha
xchg
ss
imul
sub
cmc
inc
inc
test
add
push
call
push
data16
and
inc
push
cwtl
xor
movsl
dec
int
sahf
pop
inc
fiaddl
xor
rclb
sub
mov
push
mov
jp
jne
adc
rol
jne
or
ljmp
jnp
mov
pop
push
mov
sbb
fadd
pusha
pop
add
scas
mov
jge
jno
xchg
cltd
cmp
cmpsb
ljmp
mov
or
std
rcl
cmp
xorl
std
js
dec
mov
fimuls
xor
movsl
xor
mov
pop
cmp
jl
insl
mov
test
mov
and
stos
xchg
mov
pushl
mov
jmp
lods
icebp
gs
repz
addb
jg
xchg
imul
add
dec
pushf
mov
inc
fsts
mov
aam
push
je
popa
mov
test
movsl
jnp
mov
ljmp
cmp
mov
into
pop
and
fnsave
add
pop
popf
je
lods
adcl
stc
in
jl
push
or
and
pop
cmp
mov
adc
pop
sti
xor
lods
imul
mov
enter
out
pusha
jnp
pusha
addr16
mov
xorl
in
and
mov
inc
mov
mov
pop
push
mov
shll
push
outsl
sbb
cltd
repz
xor
mov
or
out
and
sbb
mov
cmp
pop
int
int3
pop
data16
ret
sub
icebp
or
arpl
mov
mov
or
movl
mov
jle
and
mov
mov
outsl
aas
dec
add
cltd
mov
push
in
popf
mov
lods
sub
inc
dec
lahf
lods
cmp
cmc
in
jb
xchg
inc
movsb
mov
adc
xchg
push
dec
outsb
insl
fiaddl
outsl
inc
jae
ja
mov
add
pop
pushf
push
xchg
cmpsl
rcl
sbb
lds
sub
cmp
stos
or
jo
jbe
jb
mov
dec
pop
icebp
lods
test
pop
std
or
add
or
mov
in
cmp
fidivrs
sub
sub
push
mov
shlb
cmp
dec
getsec
jp
sbb
testb
inc
lock
loope
ret
push
in
adc
fs
push
cmp
dec
fldt
push
dec
int
bound
std
adc
push
aad
dec
dec
dec
mov
data16
sbb
fwait
in
fldl
push
mov
mov
outsl
test
xchg
xchg
jmp
jb
push
js
and
inc
pop
push
fildl
mov
mov
fwait
in
fisttps
inc
xor
aas
cmpsl
fxtract
xchg
mov
push
push
ficoms
mov
sbb
scas
xchg
push
loopne
movaps
test
pop
lods
xchg
fldenv
or
and
sub
leave
jo
je
cmp
shl
xchg
dec
push
in
test
cli
aas
inc
and
repnz
imul
insl
dec
inc
inc
add
fdiv
cld
sub
test
enter
cs
imul
push
push
rcrl
test
adc
xorl
adc
and
push
pop
jl
sti
push
insl
out
jg
jns
jmp
jo
fbstp
xor
mov
jl
jg
pusha
dec
or
inc
sub
out
cmp
jnp
pop
scas
jle
movsb
jg
loopne
int
mov
pop
sti
sub
pop
jp
dec
mov
addl
push
mov
push
xor
mov
lock
cld
scas
mov
sub
jbe
int
loope
mov
inc
jnp
lds
or
test
iret
dec
cmc
jmp
inc
imul
out
jbe
mov
or
test
and
jbe
inc
outsb
jae
xchg
jp
lods
test
push
sbb
push
xor
dec
cs
push
sbb
shll
sbb
inc
mov
mov
push
daa
push
xchg
add
fs
mov
mov
xchg
inc
je
lods
push
popf
or
jae
dec
add
test
mov
loope
push
push
mov
and
repnz
js
push
ss
orb
in
xchg
push
lret
das
mov
inc
dec
int
mov
jns
sub
push
push
cmp
rcrb
js
cmpsb
out
ret
sahf
mov
and
shr
fwait
mov
cltd
inc
popf
negl
jbe
insb
lds
mov
in
mov
dec
mov
fxch
xor
adc
cmp
in
dec
push
aad
add
fistps
int3
out
sub
or
or
cld
mov
stos
inc
bound
loop
fistpl
push
sbb
sub
pop
popa
pop
add
cmp
pop
jo
es
insb
or
pop
mov
and
sbb
mov
mov
test
in
jecxz
mov
mov
and
out
add
cmpsb
jns
cltd
cmc
out
push
aad
sarb
shrb
jl
add
cmp
push
xchg
lcall
fisttpl
pusha
dec
mov
adcb
in
add
cltd
mov
insb
lcall
cmc
lds
aas
add
and
xor
and
and
mov
ja
xchg
std
sub
xchg
stos
popf
popf
icebp
into
scas
lret
dec
jne
ret
jge
push
push
jg
mov
or
adc
inc
fldl2e
dec
repz
sub
iret
sarl
jbe
mov
jno
pop
dec
std
xor
gs
test
cmpsl
int
push
pop
cmpsl
repz
sub
sub
lret
dec
xor
jo
sub
sub
mov
lods
mov
xor
xchg
les
or
jg
aam
inc
pop
stc
iret
cmpsb
sbb
insl
icebp
dec
mov
testb
cmp
out
ljmp
mov
mov
mov
pop
dec
dec
out
adc
mov
test
add
nop
lcall
leave
fnsave
out
sub
mov
mov
jo
push
inc
sbb
mov
insl
in
stc
pop
mov
cmp
mov
addl
ja
cld
lret
cwtl
inc
mov
inc
cs
popf
int3
push
adc
sahf
mov
test
sti
das
dec
cmp
ret
mov
cmp
addb
pop
cmpl
iret
or
cmpsl
pop
cld
push
jg
or
push
cmp
outsl
leave
push
cltd
dec
and
stos
pusha
or
cli
lods
cmpsl
push
jp
nop
adcl
mov
adc
or
or
ja
insb
mov
and
fdivrl
mov
push
pop
add
pop
testb
mov
pop
lcall
mov
mov
fimull
xor
jo
popf
loope
bound
xorl
jnp
lahf
cmp
sub
inc
pop
dec
fistpl
mov
cmp
es
imul
repnz
push
test
pop
iret
shrb
xchg
popf
jp
mov
xchg
int3
pusha
xor
cmovle
test
decb
sti
ss
int3
inc
jmp
xchg
lea
inc
loop
xchg
or
inc
out
enter
mov
sbb
xchg
movsl
inc
dec
daa
pushf
cmpsl
out
add
arpl
shrl
push
dec
xchg
sub
outsb
inc
lcall
mov
inc
push
mov
stc
imul
in
js
mov
sub
xchg
xchg
add
pusha
lods
push
xchg
ret
mov
sbb
int
add
adc
xchg
loop
add
cs
sub
add
inc
jmp
out
nop
inc
dec
cmc
inc
jno
movsl
loopne
addb
testb
adc
jl
aam
ret
fwait
adc
or
and
idivb
call
lret
and
bound
cltd
xchg
mov
xchg
sub
jle
jge
cwtl
fwait
cmp
dec
pusha
add
xlat
jecxz
popf
inc
jns
push
dec
loopne
cld
and
mov
mov
ss
mov
add
add
lds
push
mov
push
inc
fisttpll
out
inc
lds
sti
mov
mov
pushf
cmp
stos
mov
and
rolb
je
test
out
xchg
scas
inc
fwait
insl
or
sub
adc
mov
and
add
pop
jecxz
subb
push
xor
sbb
lea
flds
sti
jp
cmp
push
int3
jb
mov
fs
pop
or
dec
push
pop
icebp
xor
or
xchg
push
adc
adc
mov
rolb
xchg
mov
rorb
ret
mov
dec
cmc
dec
xor
dec
call
jle
pusha
jecxz
insl
xor
cltd
inc
sarl
cmpsl
notb
ss
pop
loopne
and
into
popf
cli
add
add
jle
sub
enter
gs
mov
popf
rcl
adc
pop
out
dec
inc
add
fisttpl
lods
xchg
dec
mov
add
mov
in
xchg
es
popf
lods
test
xor
jp
sbb
adcb
push
xchg
or
ljmp
add
in
add
push
cli
movsb
les
or
insl
orl
xchg
fldt
ja
mov
cmc
es
sub
dec
ret
sahf
mov
dec
insb
cmpsl
fmulp
jl
push
arpl
in
dec
pop
mov
or
cld
inc
in
pop
mov
pop
imull
cld
ret
adcb
pop
cmp
testl
cs
fimull
jg
sbb
in
add
subl
adc
iret
xorl
push
test
arpl
jnp
push
divb
lea
ds
lahf
mov
cmp
ja
adc
fcomi
ret
adc
sub
jo
psubw
cmp
movsb
popf
iret
pop
scas
push
dec
fwait
cmpsb
mov
movsl
mov
movsl
lret
inc
push
rcrl
push
mov
ret
sub
adc
fucomp
push
push
dec
inc
popa
jp
jp
push
jl
or
inc
arpl
aas
xchg
fwait
sbb
cmp
add
xchg
xor
jb
cmp
mov
xchg
xchg
insb
jnp
sbb
clc
std
imul
xchg
sub
ja
insb
push
jbe
pop
in
mov
xor
faddl
insb
cmpsb
jle
popa
xchg
and
test
int3
pop
sbb
and
mov
push
jge
xor
bswap
fisttps
insb
mov
push
inc
sub
imul
cmpsb
xor
js
mov
rorl
adc
negl
test
xor
inc
mov
aam
bound
aad
in
loopne
mov
shrl
pop
pop
aad
dec
push
rcr
xor
inc
mov
xchg
dec
sub
xlat
fs
cmc
rcrb
xor
cmpsl
pop
mov
pop
add
pop
adc
iret
sbb
loop
mov
fldenv
rcl
shlb
sub
jb
repz
and
jmp
xor
cmp
shl
mov
cld
dec
std
mov
xchg
cmovae
xor
cli
iret
fsubrs
lcall
in
cmp
faddl
movb
stc
fildl
mov
cmp
push
addb
or
dec
xor
andl
sub
mov
add
hlt
sbb
or
arpl
sub
lock
jecxz
mov
sti
jl
call
arpl
pop
in
cmp
je
iret
in
add
fcmovnbe
xchg
enter
stos
jns
push
or
lds
cli
scas
xor
call
cmpsb
ss
loop
cmp
sbb
xor
push
pop
lods
fwait
int3
fwait
mov
stos
xor
jo
fiadds
push
mov
jno
les
stos
pop
or
push
add
sbb
cmp
in
jle
xchg
jp
dec
ror
fadds
fiaddl
sbb
pop
out
ds
xchg
mov
sub
push
sahf
in
nop
fiaddl
add
pusha
fwait
cmc
and
inc
popa
rolb
into
lds
nop
loop
cmp
pop
and
fists
dec
js
mov
out
ljmp
sahf
xor
je
and
in
inc
mov
xchg
pusha
lds
adcl
mov
fisttpll
or
test
fildll
fs
mov
inc
sub
jg
sti
out
imul
movsl
leave
mov
arpl
idivb
shrl
das
shll
lret
push
sub
push
ds
push
rolb
and
rcrl
inc
or
loop
push
cli
jmp
test
pop
cmp
jp
incb
mov
dec
shlb
xor
loop
push
jmp
call
repz
rcrb
les
jmp
pushf
outsb
aas
xchg
inc
and
lahf
adc
mov
dec
cwtl
xor
in
in
lds
sub
push
add
xchg
orl
and
mov
adcl
fnstsw
sbb
adc
or
sub
rol
pop
xorl
cld
push
mov
int3
mov
mov
mov
sbbl
cmp
and
mov
std
jg,pt
fcompl
sbb
mov
addr16
push
mov
fnstenv
add
pop
test
imul
pop
pop
pop
adc
mov
jle
test
or
out
arpl
mov
mov
outsb
push
and
xor
sbb
mov
sbb
lret
popf
dec
add
xor
pusha
loope
scas
push
mov
mov
or
stos
repz
cmc
cmp
add
addb
cmpsl
mov
jmp
jae
cli
mov
mov
movsl
pusha
hlt
sub
movsl
xor
mov
push
cmc
fdivrl
sti
test
mov
inc
jecxz
cmpsb
cli
jge
mov
and
imul
lds
pop
push
nop
push
jl
popl
bound
xchg
mov
pop
mov
sbbb
insl
and
out
mov
ret
mov
jb
jge
mov
jge
sti
and
divb
mov
xor
call
outsl
pop
das
push
sub
cltd
cmp
inc
sbb
cmpsb
imul
push
mov
ss
hlt
cmpsl
sub
loop
pop
mov
mov
sti
xor
cmc
data16
pop
adc
les
mov
ds
rol
add
icebp
inc
push
lea
fistl
push
ss
icebp
adc
mov
dec
jnp
lcall
leave
gs
lret
jae
inc
mov
dec
fisttpll
push
popf
outsb
shr
dec
add
enter
fimuls
or
or
jb
sub
fisttpll
pop
and
jbe
cmp
jp
fmull
jp
push
out
pop
sbb
test
jno
pop
cmpsb
inc
jno
push
imul
orb
subl
enter
flds
aam
sub
sub
adc
adc
mov
dec
out
or
cltd
cmp
stos
out
sub
fildll
call
mov
push
cmp
sub
adcl
mov
enter
das
sub
dec
xor
inc
push
insb
in
inc
lahf
mov
pop
cmp
fcoms
push
adc
cld
xor
cmpl
jp
pop
dec
xor
push
outsb
or
dec
sahf
aad
pop
inc
insl
push
ja
xchg
addb
lea
inc
adc
js
pop
dec
dec
sub
data16
test
daa
xchg
out
leave
fsubrl
call
and
inc
cmp
jg
orb
and
int
xchg
shlb
int
test
inc
xor
fidivl
aaa
jo
and
inc
mov
sbb
pop
sahf
mov
pop
or
push
scas
mov
dec
stos
or
ss
push
imul
rep
mov
mov
or
incl
push
sarl
push
ficomps
cmp
mov
pop
mov
test
gs
aaa
loope
adc
scas
mul
mov
pop
fs
xchg
test
jl
mov
sahf
jp
inc
sbb
cmp
inc
and
fsts
imul
addr16
mov
pop
mov
shlb
test
push
jbe
mov
push
mov
in
sarl
mov
leave
rcrb
push
lds
jne
flds
hlt
add
cmp
enter
outsl
add
sbb
xchg
mov
sub
add
fiadds
jp
popa
jge
mov
movsb
div
jnp
out
pop
mov
cmp
xor
xlat
repz
mov
adc
es
mov
pop
and
mov
popa
add
inc
fisttps
cltd
mov
push
mov
push
mov
lods
push
xchg
xor
add
or
ljmp
in
cmpsl
jge
pop
xchg
and
mov
loopne
cmc
cwtl
lds
pop
mov
leave
add
test
push
mov
ret
jge
dec
cmp
dec
push
mov
and
mov
lahf
dec
fsubrl
pushf
aas
cmc
loope
out
mov
cli
jmp
jmp
es
mov
mov
pop
mov
push
adc
add
sub
pop
add
pop
fsqrt
iret
cli
mov
negl
cli
outsb
int
ds
jecxz
xchg
imul
jle
cmp
aaa
pop
in
test
add
sbb
fmuls
in
inc
scas
add
mov
dec
mov
out
jo
add
sub
hlt
lahf
mov
loop
push
adc
std
dec
mov
mov
outsl
pushf
das
cmp
outsl
in
jo
outsl
xor
mov
lods
adc
xor
push
cmp
inc
and
mov
xchg
mov
inc
pushf
inc
dec
mov
mov
fiaddl
rcrl
dec
jle
xchg
movsl
xor
imul
subl
pop
adc
orl
test
pop
mov
mov
enter
jl
test
je
inc
hlt
xlat
pop
pop
inc
call
popa
mov
mov
push
data16
and
popf
scas
adcl
adc
aas
and
lds
ss
dec
cli
insl
mov
jns
mov
stos
scas
or
imul
and
fsubs
stos
and
dec
pop
jnp
cmp
arpl
push
jb
push
pop
jae
sub
jg
mov
mov
js
dec
mov
jecxz
imull
mov
xchg
cmp
ret
jge
dec
dec
lock
movsl
movsl
mov
jne
outsl
fsubrs
xor
mov
or
scas
sub
in
pop
pushf
and
fs
icebp
lds
and
aas
fsubrl
cld
stos
cltd
fldenv
cld
sub
or
jmp
add
js
mov
push
inc
xor
aam
push
cmp
test
fdivrl
outsb
shrl
leave
pop
sbb
inc
jnp
imul
test
mov
cmp
scas
mov
jne
jl
test
movsb
in
cmp
push
adc
mov
insl
test
xchg
int3
mov
cmp
add
negb
neg
xchg
push
mov
cwtl
mov
or
or
dec
add
mov
lret
adc
outsb
cltd
adc
pop
shlb
sub
add
sub
rclb
es
dec
fs
xor
in
cmp
jo
pop
add
test
divl
out
pop
jmp
mov
push
insl
mulb
mov
test
jb
outsb
lds
cwtd
notb
cmpsl
inc
mov
inc
cmc
mov
sub
jns
mov
pushl
filds
mov
jge
je
out
push
add
nop
popa
inc
mov
cmp
test
repz
adc
xor
shlb
mov
sti
jbe
cmp
mov
add
cmpsb
popa
jb
sbb
loope
sbb
fdivl
or
cmc
push
sub
jnp
mov
std
cltd
jecxz
hlt
jnp
mov
dec
addb
xchg
add
dec
push
cmp
inc
push
or
xchg
inc
add
jl
pop
jnp
jns
mov
jmp
fcomps
inc
cmp
mov
pop
mov
int
sbb
mov
insb
push
repz
out
imul
les
push
lret
fcompl
add
test
or
addr16
loop
int3
pop
pop
shrb
movsb
mov
es
dec
inc
mov
sbb
ret
mov
movsb
mov
scas
stos
pusha
pop
add
pop
xor
jns
jnp
jge
loop
jecxz
push
ja
cmc
mov
imul
aad
incb
jmp
inc
fisubrs
mov
pop
imul
nop
mov
ljmp
loop
andnps
dec
in
mov
fcomp
and
jb
pop
sub
roll
dec
loop
or
pop
in
sahf
leave
cmp
dec
ja
popa
addb
fnstsw
ja
loopne
popf
out
das
movsl
dec
insl
stc
mov
mov
fistl
jbe
jae
stc
scas
sbb
add
sub
push
sub
stos
hlt
jle
adc
and
lock
jae
xchg
idivb
dec
clc
ja
push
or
cmp
push
aas
shrb
test
int3
aaa
into
leave
jne
imul
xor
das
daa
sub
gs
cmp
cmp
adc
inc
adc
xchg
hlt
jno
push
inc
mov
dec
ljmp
mov
in
cmp
out
mov
dec
sub
clc
in
js
scas
call
mov
push
je
js
add
push
mov
aad
into
ret
setg
push
mulb
ret
or
xchg
and
and
xor
pop
pop
dec
xor
rorl
lcall
lcall
icebp
mov
dec
jbe
iret
ja
inc
mov
mov
add
push
aam
dec
ja
cli
neg
dec
add
jge
lret
mov
xorl
or
push
outsb
xchg
cs
fld
dec
lods
xchg
cwtl
push
jns
cmpsb
cmc
adc
cmpsb
sbb
jge
gs
mov
push
testl
ffreep
cmp
sbb
mov
add
mov
adc
call
jg
or
adc
in
popf
dec
mov
aas
push
insl
jle
xlat
cmpsb
mov
pop
fiaddl
xchg
add
test
xchg
mov
xor
orl
into
daa
imul
pop
insl
shl
daa
fldl
or
pushf
xchg
xor
in
mov
adc
fstps
inc
fwait
shlb
aaa
jecxz
and
inc
jns
aad
lret
add
inc
int3
fsubs
adc
mov
test
mov
in
mov
lods
std
jbe
mov
test
xorb
lea
iret
int
sub
xor
pop
fcoms
jbe
jnp
loop
out
lahf
shll
mov
push
fcoms
fisubl
popf
xor
out
in
pushf
es
mov
push
sub
test
cmc
ja
jmp
or
jbe
xor
jb
dec
jb
mov
fcompl
xchg
imul
cltd
push
repz
pop
lcall
in
test
popa
inc
loopne
sbb
cmp
add
jl
sbb
shrl
push
add
clc
hlt
nop
mov
inc
dec
daa
fdivrl
ficomps
mov
xorl
fcomps
cmp
pop
sbb
xchg
xor
fildl
dec
inc
jp
push
aad
jo,pn
js
sar
fildll
adc
ficoml
push
jno
rclb
leave
lret
and
out
xchg
dec
or
adc
push
sbb
inc
push
fsubr
cmpsb
push
adc
adc
subb
jnp
jae
sub
daa
xchg
sbb
loop
dec
pop
cli
xchg
decb
iret
lock
rol
inc
xchg
sahf
push
xchg
xchg
fsub
jmp
and
jl
and
lahf
imul
inc
hlt
push
fstps
incb
in
pop
out
pop
mov
cmpl
adc
or
cmp
jp
pop
dec
fbld
aas
mov
sti
cli
mov
xchg
xlat
xchg
push
cli
into
scas
lds
in
dec
sub
mov
fstpl
in
and
add
mov
jmp
sbb
adc
push
or
pop
mov
xchg
les
add
adc
and
rclb
pushf
out
pusha
mov
int3
or
mov
jne
dec
dec
cmp
call
adc
jecxz
inc
mov
or
mov
in
xor
jmp
xchg
sub
jno
lcall
mov
cmp
js
stc
in
and
adc
xor
and
scas
enter
scas
or
in
adcl
movswl
xchg
dec
in
sti
sbb
nop
mov
or
iret
clc
cmc
sub
data16
out
mov
mov
mov
fdivrl
roll
data16
sbbb
or
xchg
adc
mov
test
push
movsl
adc
int3
jb
add
jmp
loopne
push
nop
shl
insl
pop
inc
icebp
dec
test
es
imul
arpl
mov
shll
aas
push
pop
rcll
lahf
jp
lea
and
xchg
sbb
stc
xor
cmovne
fldl
aas
add
pop
push
dec
push
je
repz
fsubrs
gs
pop
enter
jne
dec
push
mov
adc
cmc
or
imul
test
out
jns
jne
pop
int
and
jl
lock
movsl
out
scas
add
lock
ja
pushf
fwait
xchg
movsb
adc
dec
mov
adc
xchg
scas
mov
sub
xchg
dec
shlb
loope
push
dec
cmp
rol
jno
dec
cltd
add
push
xchg
jge
leave
add
or
lea
nop
fsts
cs
aad
scas
lea
movsb
ret
xor
mov
xor
mov
add
mov
mov
hlt
xchg
test
pushf
nop
bound
loopne
add
cmpsb
xchg
mov
test
or
mov
inc
fs
fistps
xlat
xor
test
xchg
jb
mov
data16
pop
adc
popf
inc
and
sbb
shll
mov
add
rorb
mov
out
int
in
ret
loopne
outsb
loop
lods
gs
or
and
and
test
shrl
adc
or
pop
adc
jno
sub
cwtl
dec
xchg
sbb
jge
enter
inc
adc
mov
mov
xchg
add
xchg
dec
enter
iret
xlat
inc
jbe
std
push
fcompl
sub
jl
test
cmpsb
add
dec
sub
push
cmc
push
push
shrl
neg
out
mov
jno
sbb
jl
into
dec
mov
cmp
xchg
cmp
je
mov
cmpsl
outsl
loop
data16
mov
pusha
jecxz
jp
mov
std
mov
push
push
les
inc
push
nop
cli
repz
bound
inc
pop
xor
in
call
test
or
sbb
outsl
adc
mov
sbb
sub
mov
out
push
and
push
sbb
loopne
add
adc
stos
push
mov
imul
inc
xor
xchg
inc
lahf
inc
xchg
push
mov
test
or
daa
sbb
add
mov
mov
repz
fs
push
sub
push
shr
dec
fldl
push
add
push
mov
push
outsl
test
add
mov
sub
scas
shlb
iret
push
xor
push
dec
push
jae
push
das
sub
int3
jae
and
mov
js
xor
sub
mov
mov
mov
fidivrl
mov
dec
jo
ret
rcrl
mov
mov
lret
xor
push
cmpsl
movsb
mov
pop
enter
in
pop
dec
es
int
xchg
push
add
clc
and
in
pop
add
mov
into
sbb
or
and
fwait
mov
mov
mov
rorl
mov
mov
shll
dec
mov
xor
xor
stos
xor
dec
sub
pop
mov
adc
pop
ret
pop
bound
ss
add
add
inc
int3
xchg
jg
loopne
in
into
mov
sub
mov
je
enter
rcrl
in
cmp
adc
pusha
jge
leave
shrl
adc
sub
movsb
xchg
xchg
jno
dec
jp
jnp
cmpsl
inc
inc
mov
cmp
int3
push
cs
je
mov
push
jno
mov
and
cmpb
xor
popw
rorl
jl
sbb
leave
arpl
out
gs
and
movsl
adc
push
movsb
cmp
dec
jg
add
dec
and
xor
out
outsb
andb
leave
and
sbb
pop
lcall
adc
mov
ss
in
xchg
mov
push
cmpl
add
mov
jle
iret
out
push
xlat
outsl
xor
fdiv
dec
or
inc
jecxz
aad
pop
je
out
ljmp
iret
mov
inc
ja
jbe
jns
in
adc
xchg
inc
sbb
jmp
push
movsl
movups
fsubrl
imul
add
jb
mov
sahf
fisubrs
cli
add
sub
and
mov
loope
sbb
dec
dec
pop
xchg
hlt
inc
lcall
js
inc
lcall
addr16
sub
pusha
adc
pop
out
pop
cmpsb
dec
lret
and
cmp
pop
loope
pop
inc
cmp
dec
adc
cmp
jl
dec
bnd
mov
in
aaa
lcall
cli
je
lock
sbbb
inc
mov
adc
cld
push
pop
dec
std
jo
push
fisttpll
cmp
lahf
movsb
mov
scas
mov
out
ret
xchg
lds
lock
add
cmp
push
mov
push
xchg
jp
adc
repz
lahf
dec
jns
pushf
lahf
push
out
xor
xchg
adc
mov
movsb
out
pop
sbb
sti
mov
inc
adc
loop
pop
cltd
ss
mov
mov
cmpsl
movsl
std
loopne
es
sub
je
movd
mov
and
je
mov
cmp
xor
mov
add
outsl
mov
mov
das
lret
fcoms
xchg
jo
dec
stos
dec
push
insl
popa
mov
and
xchg
and
lods
cmpl
enter
lahf
sahf
insb
ret
mov
fnstenv
pop
int3
sub
cmp
int
push
xchg
das
mulps
outsb
cmp
imul
xchg
imul
xor
in
adc
jns
int
dec
adc
in
xchg
xor
sub
dec
popf
sub
fs
sub
xor
orb
mov
or
inc
xchg
lea
push
jg
adc
push
mov
ljmp
bound
out
mov
jns
jae
mov
mov
mov
icebp
sbb
movsb
sarl
daa
sub
filds
mov
inc
in
filds
or
jno
mov
bound
mov
in
in
mov
or
and
ret
inc
outsb
into
pop
es
pop
xor
scas
fbstp
jno
scas
stos
or
imul
pop
div
or
enter
sbb
mov
push
fs
jle
add
loopne
adc
xchg
out
cmpsl
lods
push
mov
add
or
mov
add
mov
fisubrl
push
lods
push
ficomps
ljmpw
push
push
imul
ret
arpl
ret
mov
mov
and
and
fisubrs
mov
dec
imul
mov
cmpsb
bnd
lcall
mov
aaa
xor
jmp
mov
adc
ret
xchg
dec
js
bnd
test
cmp
lret
pop
lret
es
and
sbb
or
mov
std
jnp
test
or
aad
sub
pop
cwtl
push
inc
out
mov
adc
mov
cmp
nop
sbb
out
sbb
mov
pop
insl
jle
dec
out
fiaddl
and
and
hlt
mov
je
ret
pusha
nop
pop
inc
or
or
cmp
cmp
cmc
rcrl
adc
push
adc
jbe
xchg
sbb
xor
imul
sbb
jns
jle
dec
mov
sbb
pop
sbb
pop
ja
lods
xor
jne
sar
mov
lock
inc
int3
movsb
xchg
movb
movsb
scas
cmp
inc
sbb
mov
push
dec
cmpsb
jns
push
lret
jl
lret
pop
movsl
pushw
mov
xor
fsubrl
cmp
mov
lcall
mov
push
outsl
negb
mov
mov
jge
jo
aaa
test
aaa
stos
rcl
pop
xchg
inc
jno
iret
jg
inc
jae
and
stos
movsl
testl
popf
and
add
scas
xchg
cmp
in
ds
in
xor
push
adc
cs
jnp
shrl
ret
mov
push
pop
fwait
cmc
repnz
enter
ficoms
pushf
add
outsl
adc
je
and
pop
out
dec
sbb
xor
cmp
dec
pop
push
sbb
mov
out
les
cmc
jecxz
push
sbbl
test
and
xchg
lret
outsl
sti
fmuls
inc
mov
sub
in
popa
in
pop
mov
into
adc
outsb
pop
test
jmp
andl
push
loop
das
ljmp
cmp
sbb
mov
sub
xchg
cmpsl
sub
mov
xchg
cltd
loope
daa
int3
add
lret
inc
and
nopl
mov
das
pushf
mov
enter
adc
pop
leave
mov
mov
cmp
aas
addr16
mov
sub
adc
pop
cld
mov
ret
sbb
xor
jns
jecxz
or
cmp
jmp
shll
jl
std
push
xchg
les
xchg
clc
aam
xchg
call
hlt
mov
ret
or
sti
mov
cmp
ja
mov
jmp
sub
lea
xchg
cmp
jle
sub
leave
mov
inc
and
xchg
clc
and
hlt
jne
test
clc
mov
jbe
fsubrp
es
mov
dec
cltd
dec
or
test
or
icebp
xchg
enter
pushf
adc
inc
jo
iret
call
dec
icebp
pop
mov
lock
inc
lods
mov
sbb
jmp
or
out
test
push
xchg
ficoml
pop
push
sub
mov
cmpsl
std
stc
xchg
cmp
xor
or
ljmp
test
jno
sbb
jnp
out
push
xlat
mov
into
push
mov
mov
cwtl
mov
movsb
shll
mov
cld
repz
cld
adc
movsl
jb
mov
ret
inc
fs
movsl
inc
lret
inc
mov
xor
imul
sbb
cld
cmpsl
aaa
std
mov
jns
dec
addr16
mov
add
notl
aad
loope
push
and
cmove
add
adc
inc
mov
inc
incb
subl
das
addr16
mov
xchg
dec
push
inc
inc
js
xor
lret
sub
xchg
push
fcoml
mov
fldl
gs
ljmp
xor
adc
mov
mov
arpl
cmc
xor
pop
or
frstor
rcrl
adc
jnp
mov
mov
cli
in
or
push
sub
les
xor
push
xor
rcll
mov
sub
test
or
imul
std
sbb
icebp
sbb
mov
cmpsl
xchg
xor
stos
in
mov
ret
sbb
mov
or
pop
hlt
mov
or
xchg
jns
xchg
fistpll
icebp
loope
cli
addr16
sub
test
mov
jecxz
xor
push
push
dec
jbe
gs
adc
enter
adc
dec
mov
in
cmpsl
xchg
add
outsb
mov
add
nop
cltd
jge
push
idivl
pusha
dec
dec
xchg
stc
xchg
andl
mov
pop
jnp
aaa
cmp
test
fdivrl
push
cmp
xchg
sti
popl
dec
dec
int
adc
fs
xor
andl
push
sahf
stc
xlat
or
push
subb
or
in
mov
jo
xchg
rcll
popa
mov
mov
lar
add
or
sub
sbb
les
loop
mov
into
sub
jle
pop
dec
jg
fildll
mov
out
pop
adc
cmp
or
dec
xchg
mov
andl
iret
out
xor
mov
sub
xchg
js
into
xchg
imul
leave
shl
sbb
jne
in
addb
mov
mov
mov
subl
push
cmpsl
shll
cmpsl
mov
adc
inc
dec
and
dec
add
pop
lcall
and
jp
andl
xlat
lds
xor
inc
into
xchg
mov
repz
push
popa
push
push
bound
mov
mov
fmull
jmp
test
les
orl
inc
dec
pop
lods
cli
icebp
ret
inc
sub
fisubl
sub
imul
iret
pop
inc
and
les
mov
push
stos
insb
stos
inc
mov
repnz
fdivrs
loope
outsb
ret
lea
adc
or
enter
mov
xchg
sti
xor
movsb
push
push
shrl
int
mov
add
shrb
ret
mov
adcl
pusha
neg
mov
jp
nop
add
pop
sbb
mov
mov
orl
cmp
shll
push
loopne
xchg
mov
sub
cmc
push
inc
xchg
or
jo
stos
fiaddl
xlat
out
add
lds
rcrb
mov
enter
push
mov
stos
pusha
out
ret
std
sti
or
inc
push
hlt
pop
jmp
and
add
cltd
outsb
loop
push
loopne,pt
out
push
add
cli
leave
pop
test
fldt
push
lahf
jne
mov
pop
sarl
das
enter
sahf
adc
roll
push
xchg
add
push
or
push
les
shlb
daa
xchg
test
lock
mov
popf
ja
sbb
push
lock
dec
pop
lds
sbbl
sbb
push
arpl
inc
lock
push
ljmp
loope
popa
mov
pusha
insb
pop
or
aam
cwtl
outsl
loopne
push
ret
pop
mov
fildll
cwtl
and
push
lret
fs
stos
mov
adc
push
mov
xchg
lea
cwtl
shll
xor
mov
insb
and
aas
shl
jp
dec
push
iret
adc
adc
jecxz
test
fists
push
mov
divb
mov
pusha
mov
sbb
int
cmc
jnp
ds
aaa
jmp
fsubrp
pop
sbb
adc
test
iret
addr16
das
jp
push
push
pop
cld
int3
rcrb
xchg
jmp
mov
sarl
mov
pushf
xchg
pop
mov
mov
sub
cmp
sbb
mov
lret
int3
test
jge
ret
push
adc
fs
es
pop
add
out
adc
je
ds
mov
lahf
ljmp
out
out
and
or
mov
incb
push
pusha
mov
lcall
shll
mov
push
pushf
and
repnz
arpl
repz
js
mov
mov
or
sti
mov
addr16
fsubrs
es
inc
sbb
mov
xor
loop
sbb
test
ss
xor
xlat
aaa
jg
xlat
shlb
dec
pop
lcall
cmc
xchg
loopne
mov
pop
and
dec
lock
roll
test
jae
cmc
sub
mov
outsb
std
xchg
mov
outsb
add
lods
cmp
inc
lods
stc
mov
jp
jne
ds
jg
mov
in
es
lods
cmpsb
push
or
loope
lods
je
inc
repnz
cmpsl
fstpl
cwtl
sub
or
scas
out
inc
mov
scas
push
inc
loop
push
mov
push
push
sbb
xlat
subl
pusha
xlat
mov
add
sbb
adc
and
jne
push
lods
mov
mov
shll
xchg
mov
pop
stos
lods
jg
repz
pop
push
repnz
out
lcall
fistpll
lcall
pop
inc
push
bsf
xor
or
mov
sub
mov
nop
pusha
mov
inc
fdivs
sbb
cmpl
call
cmp
movsb
add
adc
test
mov
push
pop
dec
dec
cltd
shrl
mov
and
cmp
insl
ds
dec
xchg
cmpsb
lods
icebp
stos
rorl
cmpsb
adc
incl
test
fwait
lods
inc
fcoms
adc
inc
jnp
add
cli
xchg
sbb
cmp
jl
movb
insl
pop
mov
adc
pop
mov
add
in
ret
icebp
out
sarb
cmp
push
push
ja
cs
inc
repz
adcb
out
cmc
cmp
mov
jne
sbb
inc
hlt
sahf
mov
rorl
add
je
scas
jo
push
fs
bound
xor
lods
push
rcrl
xchg
dec
xchg
ljmp
outsb
adc
fwait
call
inc
lcall
into
ret
push
test
mov
mov
mov
and
or
rcrb
mov
int3
sbb
popa
fldenv
inc
mov
fistps
sub
mov
adc
je
stc
mov
mov
call
xchg
sbb
scas
mov
outsb
std
movsb
cld
ret
add
jp
xchg
mov
xor
enter
mov
notb
mov
dec
dec
lcall
cwtl
cli
or
sub
test
add
dec
adc
in
mov
std
jns
nop
jg
out
arpl
jle
mov
sbb
xchg
sbb
call
test
mov
insb
pop
mul
notl
cld
sub
jp
insl
data16
cmp
xchg
gs
ds
and
leave
out
adc
arpl
out
push
mov
fdivs
mov
ja
adc
mov
fimull
icebp
arpl
mov
xorl
loopne
dec
ljmp
inc
mov
sub
cmp
es
pop
and
xlat
pop
rcll
or
xchg
dec
addr16
pop
roll
outsl
fdivrl
push
pop
jle
ds
add
fiaddl
xchg
xor
inc
xchg
lods
aam
jno
sahf
pop
cmpl
xchg
sarl
in
xlat
fidivs
hlt
movsb
in
cmp
push
ret
jnp
mov
out
xchg
fcomps
aam
or
dec
out
push
out
aad
push
ja
jp
scas
sub
aas
jne
cs
and
push
push
sub
adc
adc
rorl
adc
adc
aaa
pop
outsb
sub
stos
and
cmp
lret
ror
fiadds
arpl
fsave
xchg
inc
es
cli
out
ret
test
shrl
push
add
ss
mov
cmp
out
ficomps
push
xchg
int3
add
inc
popf
loopne
dec
sbb
mov
movsl
fsubr
or
jae
pop
insl
jb
or
pusha
jle
test
adc
fdivrl
cltd
and
xchg
mov
push
gs
ss
pop
sbb
sbb
adc
xchg
or
add
push
push
inc
mov
popa
xchg
sbb
pop
mov
scas
test
std
cmp
push
scas
idivb
ljmp
mov
mov
js
hlt
cmp
adc
mov
dec
add
ret
cmp
xchg
movsb
jo
sbb
mov
into
lahf
xor
xchg
or
js
push
aam
cmp
lcall
pop
stc
push
andb
imul
loope
and
int
add
push
incb
jge
arpl
fcoms
imul
es
push
adc
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
fisubrs
pop
push
.byte
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
pop
call
call
int3
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
je
js
add
add
add
add
add
add
add
add
add
add
jb,pn
popa
je
add
jle
add
add
add
add
add
add
add
inc
add
loopne
fs
je
add
add
push
add
xor
add
jp
add
xor
add
add
je,pn
js
add
add
out
add
add
add
pushf
add
add
add
add
jb,pn
popa
je
add
test
add
add
add
sbb
add
dec
add
inc
add
loopne
fs
je
add
add
add
add
add
add
add
add
add
add
dec
inc
inc
dec
pop
xor
add
add
pusha
call
fucom
xor
in
div
cmp
sbb
mov
movsl
push
jbe
dec
es
mov
int
aad
and
mov
sub
hlt
gs
mov
adc
mov
add
sub
add
jmp
call
scas
xlat
add
nop
addb
mov
and
xor
pusha
jmp
adc
test
pusha
and
jmp
fmulp
xor
sbb
das
cld
pop
sub
inc
pushf
scas
dec
ss
cmpsb
add
and
dec
cmp
cmp
push
add
mov
sub
scas
stos
jle
lret
out
jmp
mov
or
in
sbb
push
fbstp
xchg
ret
xor
outsl
sub
in
imul
xor
add
aas
mov
movsl
inc
out
lret
sahf
ja
or
js
or
divl
jnp
jge
iret
cmpsl
ds
push
daa
mov
or
push
push
or
je
push
xchg
adc
nop
test
or
popa
add
aaa
ret
inc
xchg
cld
gs
push
push
scas
iret
sbbb
das
jae
sbb
mov
cwtl
cmp
imulb
jl
xchg
out
dec
ja
or
pop
ja
push
sbb
mov
test
int3
lcall
test
lock
imul
and
ja
daa
or
icebp
stc
inc
in
mov
sbb
cltd
mov
ja
adc
icebp
cmpl
xchg
ljmp
aas
ret
mov
pop
aam
xchg
mov
vpcmpeqw
je
mov
pusha
dec
cmp
cmp
fists
sub
fnstsw
aas
test
pusha
aad
cmp
xor
stos
fmuls
cwtl
mov
cmp
jbe
lcall
jle
jp
mov
cld
and
leave
cmp
add
cltd
sahf
or
stos
pop
push
mov
adc
sbb
inc
push
mov
cmp
outsl
dec
sub
or
cmp
out
sub
loop
xor
xchg
lret
clc
xchg
cmpl
and
cwtl
daa
shrb
lods
out
push
add
outsb
inc
in
mov
push
fcomip
mov
push
repz
inc
aad
lahf
pop
jo
cmp
xchg
fdivs
and
rcrb
xor
xor
dec
adc
ja
mov
shlb
std
xchg
adc
movsl
subl
add
popa
xor
xchg
cmpsl
sar
mov
cltd
sbb
mov
sahf
clc
outsb
les
loop
addb
push
pop
xor
nop
in
adc
push
pusha
cmp
xor
mov
xchg
or
outsb
jo
stc
and
icebp
add
push
mov
jmp
and
movsl
xchg
xor
fwait
xchg
pop
push
mov
sahf
aaa
dec
fisttpl
movsb
insw
cli
add
iret
dec
dec
jae
int3
mov
decl
pop
jle
sub
adc
sbb
fdiv
xchg
int
insb
mov
or
inc
xor
pusha
mov
sub
xor
std
push
and
mov
mov
cmpsl
das
mov
test
push
xchg
sbb
and
das
test
xchg
jge
lcall
ds
sbb
adc
xor
stc
jne
repz
push
adc
cmp
outsl
insl
mov
adc
je
sarb
cmpsl
fdivl
mov
add
lods
mov
icebp
mov
in
dec
cmp
gs
xor
or
mov
sti
adc
xor
adc
iretw
and
push
pop
pop
ja
enter
sub
ret
and
dec
jo
xor
ret
push
arpl
scas
cmp
cmp
mov
lods
outsl
jl
cmc
mov
cmpsl
dec
mov
dec
adc
rcll
sub
movb
or
ret
add
mov
insl
pop
sti
add
inc
outsb
lods
mov
ljmp
adc
ds
fs
dec
repz
pop
sbb
js
push
or
popa
mov
xchg
xor
jae
jecxz
aad
xchg
xor
mulb
aas
dec
lret
aaa
mov
add
cmp
int
push
and
jmp
mov
mov
sbb
pushf
ss
orb
daa
rcll
mov
and
lea
lahf
cmp
ds
and
fs
or
int
mov
dec
xchg
and
mov
movsb
jae
addr16
push
pop
or
mov
int
mov
dec
sbb
sbb
xor
addps
ja
mov
mov
sbb
loopne
xchg
mov
movsb
lock
dec
inc
push
shll
scas
xchg
fs
mov
lock
and
xor
call
lea
mov
push
in
in
xor
xchg
repnz
test
int3
xor
add
imul
xchg
ljmp
mov
xor
jl
push
aam
cmp
add
cmp
add
fidivl
add
hlt
aas
ret
shrb
mov
sub
aam
push
insb
mov
pop
inc
rcrl
dec
lods
or
movsl
fnstcw
add
mov
add
pop
std
cmc
dec
pop
mov
dec
sub
lods
hlt
xor
fs
sbb
shrl
xchg
or
sbb
hlt
xor
xchg
outsb
loope
out
fcmovnb
sbb
xlat
loop
enter
aad
push
in
pop
imul
adc
scas
ds
stc
pop
jns
xchg
xchg
add
pop
out
mov
and
cmp
sbb
push
inc
je
inc
loope
cs
mov
shlb
call
out
out
mov
xchg
dec
xchg
mov
hlt
in
fcmovnbe
insb
mov
inc
cmp
in
aad
int
xor
xor
add
jmp
pop
adc
xchg
jb
mov
popa
jl
aas
sbb
insb
arpl
int
dec
pusha
and
lods
jg
int3
xor
jbe
fsubrs
into
ret
sahf
cmp
leave
push
pop
js
xchg
inc
xor
mov
mov
fldcw
xchg
insl
jl
push
adc
insb
xor
lret
mov
pop
xlat
xchg
in
adc
mov
and
add
sub
xchg
icebp
and
pushw
outsl
jmp
pop
ljmp
xor
in
enter
mov
out
xchg
adc
leave
lcall
lret
test
jbe
xchg
xor
add
cli
pop
push
dec
mov
push
xlat
xchg
push
mov
outsb
cmpsl
mov
or
notb
jp
aad
cmp
andb
jle
mov
data16
dec
cltd
out
xchg
xchg
mov
adc
xor
push
pop
popf
stc
sub
mov
pop
lret
stc
and
push
add
lea
cli
sub
or
popf
into
andb
mov
xchg
mulb
xchg
loop,pt
cmp
ds
jle
loopne
mov
cmpsl
lret
mov
and
addr16
mov
xor
aam
mov
movsb
cmp
inc
test
in
fwait
or
in
cmp
dec
mov
xorl
cltd
into
and
call
ljmp
adc
jle
xorl
sbb
mov
inc
push
pop
movl
sarb
cmp
mov
cmpsl
or
ljmp
and
xlat
leave
lods
movsl
shl
push
stos
push
mov
out
xchg
fwait
movsb
out
dec
sbb
arpl
pop
popa
pop
jns
je
sub
aas
mov
adc
sbb
loop
int3
jo
lock
or
stc
push
push
imul
popf
and
lahf
jg
outsl
movl
shrb
leave
jl
dec
push
setge
push
inc
lcall
icebp
test
mov
cmp
xchg
mov
sbb
mov
inc
mov
in
push
mov
mov
push
fstpt
mov
pop
sbb
and
es
insb
hlt
outsl
loope
stos
ret
in
inc
push
adc
sbb
int3
sub
add
cmp
jnp
add
rorl
out
fmull
push
mov
mov
fstpl
xchg
es
push
movsb
subb
inc
jne
dec
popa
iret
jl
cs
xchg
ljmp
pop
aas
or
lods
xchg
or
out
test
in
mov
bound
push
mov
orl
adc
nop
cmp
lea
pop
pop
ja
addr16
xor
les
mov
shl
aas
adcb
pop
lock
cmovno
add
in
mov
into
scas
cld
js
mov
in
sbb
aas
lds
ljmp
cmp
vpmulhw
shll
add
xlat
fnstenv
pop
icebp
cmp
clc
push
dec
ss
daa
or
fsts
add
mov
ret
scas
and
pop
xchg
fstpt
mov
je
xor
xor
xchg
add
cmp
in
pop
and
aas
sbb
xor
aaa
push
mov
fs
in
xchg
sbb
and
inc
mov
inc
mov
push
sbb
aaa
popa
sub
outsl
xor
out
jecxz
mov
mov
cli
stos
pop
movl
push
test
xchg
add
xchg
xor
mov
movsl
mov
popa
in
xlat
movsl
cmpl
mov
cmpsl
push
test
pop
inc
pop
mov
fbld
and
out
inc
adc
lds
iret
jge
sbb
repz
sub
mov
mov
lods
lcall
int3
adc
push
jg
add
add
sub
pop
xchg
push
fadds
push
jmp
lcall
repnz
xlat
push
xlat
mov
dec
jne
cmp
xor
xor
out
ficomps
je
clc
push
mov
int3
lcall
lret
mov
xor
movsl
mov
dec
push
sbb
or
push
sahf
shlb
into
movsl
stos
imul
icebp
in
mov
xor
fldcw
mull
mov
je
mov
fiadds
inc
sub
psubsw
pop
sbb
push
int
out
pushf
bound
shrb
incl
or
push
ljmp
icebp
loop
pop
cld
neg
adc
imul
std
insl
push
sahf
aas
mov
rclw
lods
xor
jp
or
lcall
fldt
repnz
inc
clc
cmpl
gs
jne
dec
dec
adc
sub
xchg
fcomi
ret
inc
push
es
push
mov
mov
push
xor
cld
xchg
cwtl
scas
call
fadds
sti
test
shlb
ret
loopne
pop
addl
push
xor
je
adc
sahf
cmp
ret
shrl
out
jnp
cmp
lods
push
mov
xchg
pop
mov
test
js
nop
add
cmpsb
mov
xchg
xchg
push
insb
dec
hlt
out
mov
aam
xchg
es
push
xor
mov
adcb
je
jb
xchg
iret
add
cltd
fnstenv
dec
clc
je
push
test
call
sub
test
xchg
lret
cmp
push
push
filds
pop
test
test
pop
arpl
into
or
push
in
add
sub
xchg
std
pusha
mov
cld
andl
mov
insl
sbb
cmp
insb
sarl
mov
jmp
ds
hlt
jl
push
insb
aas
mov
cld
lods
adc
sahf
fimuls
add
testl
fmull
inc
mov
outsl
fcoml
xor
mov
and
scas
or
mov
mov
sbb
rcl
ficoms
inc
mov
xchg
mov
dec
or
out
cwtl
or
push
cmpsl
jb
sbb
inc
push
gs
push
stc
dec
xchg
dec
loop
addr16
inc
sub
shr
inc
sub
popa
stc
popf
aaa
adc
es
outsl
roll
pushf
popa
cmp
shlb
inc
xchg
jnp
lds
add
iret
sbb
sbb
xorb
sbb
jp
push
adc
frstor
and
shlb
push
lds
ud1
popa
imul
or
test
or
fcoms
adc
sub
sub
ret
sub
nop
outsb
fldenv
gs
and
mov
dec
adc
sub
add
inc
pop
imul
inc
addr16
push
loop
loop
adc
gs
lret
ja
out
push
xor
into
mov
mov
das
jmp
pusha
mov
sbb
dec
jmp
and
xchg
and
orb
adc
insb
mov
in
and
mov
jbe
xor
inc
daa
adc
xor
push
data16
lods
inc
xor
inc
subb
in
push
andl
jb
push
push
cmp
mov
jg
cmc
pop
jle
cmc
lock
inc
sub
or
mov
fnstsw
nop
sbb
xchg
ja
in
in
push
cmp
adc
mov
mov
xchg
jns
stc
inc
data16
cs
xchg
cmp
shrl
lcall
push
or
pop
add
push
adc
push
enter
imul
add
or
mov
filds
xchg
sbb
cmp
push
jmp
xchg
push
mov
leave
roll
sub
mov
out
mov
shl
aaa
add
nop
jmp
adc
fwait
vdivps
test
cld
xor
and
shl
mov
inc
adc
pop
icebp
lret
fs
cmc
push
cmovns
mov
mov
test
nop
in
push
lods
xor
outsb
insl
cwtl
out
add
jl
inc
jnp
add
pop
inc
test
adc
jl
js
sub
push
ror
mov
push
jno
inc
idivl
xor
sahf
mov
lods
cmpsb
xchg
mov
adcb
iret
pop
les
mov
jne
lds
mov
or
ret
incb
adc
xor
cmpsl
push
ds
std
push
arpl
popf
call
dec
xor
mov
mov
inc
inc
dec
shl
mov
aas
stos
or
stc
mov
aad
sbb
push
xchg
cwtl
xchg
xchg
cmovne
call
fisubrl
push
fistpl
inc
push
test
test
lds
mov
dec
ljmp
xchg
into
cwtl
inc
jbe
pop
fcomps
into
inc
arpl
rcl
ljmp
mov
cmpb
cmpb
aaa
mov
push
sub
mov
push
in
outsb
loopne
inc
into
sbb
xor
pop
pop
jle
xchg
sub
ds
shlb
pop
repz
pop
insb
jb
jge
mov
mov
inc
addr16
mov
enter
cmp
mov
daa
push
les
and
pusha
add
imul
jbe
aas
into
outsw
repz
mov
sbb
out
iret
outsb
inc
sub
xorb
rol
cmp
dec
out
inc
mov
rclb
xchg
push
jne
sti
or
insb
stc
mov
pop
out
pop
movsl
lret
xbegin
and
jne
enter
adc
inc
mov
sbb
js
das
jb
jo
inc
jb
lods
aam
out
jp
jp
ret
mov
filds
and
aam
loop
sub
add
cmp
std
push
aaa
out
jecxz
nop
popa
sub
push
jg
pop
xchg
sbb
roll
xchg
test
xchg
mov
daa
xchg
loope
mov
pop
push
or
mov
dec
cmp
xchg
orl
sub
popf
inc
add
js
fwait
inc
and
dec
cmpsb
pop
xor
out
ret
mov
pop
mov
mov
sub
jecxz
lahf
sbb
pop
es
es
fxch
cltd
dec
outsb
push
mov
imul
mov
cmpsb
push
pop
push
sbb
js
add
lret
loop
or
imul
sbb
ljmp
aas
mov
popf
push
fcmovnb
in
fimuls
sti
sub
roll
or
jnp
xchg
sbb
ja
or
jnp
rorb
mov
mov
adc
lahf
dec
jg
sarb
pop
andb
or
test
enter
enter
push
test
popf
cmp
add
dec
pop
mov
loopne
push
scas
fwait
push
daa
shl
inc
out
lods
or
sbb
inc
arpl
inc
xchg
push
and
and
dec
dec
xor
lret
or
repz
sub
in
into
cmp
sbb
xor
inc
repz
xlat
jl
cmp
inc
adc
xchg
sub
cmp
sbb
sbb
out
mov
mov
hlt
jg
jmp
pop
mov
cmpb
mov
fsubrs
jb
in
enter
and
dec
rorb
cwtl
popa
pop
ja
in
stos
push
in
xchg
or
mov
inc
xchg
repz
imul
xor
mov
jnp
pop
dec
stc
test
iret
mov
mov
fs
js
push
shll
cmpl
push
adc
jmp
and
xor
mov
mov
adcl
sbb
xchg
adc
jge
stos
mov
add
mov
pop
cmpb
mov
mov
fsub
sbb
dec
imul
stos
adc
movsb
sbb
xchg
fwait
mov
push
sarb
xor
mov
pop
les
pop
xor
aas
xchg
cmpsl
pop
jmp
mov
jmp
cli
sub
push
xlat
and
inc
jp
push
sub
dec
sub
cmp
inc
mov
scas
pop
jecxz
cwtl
sbb
mov
mov
call
sti
callw
loopne
popa
adc
inc
leave
mov
orb
or
inc
out
clc
cmpb
aam
cmp
insb
test
hlt
inc
mov
sub
pushf
dec
mov
jl
add
jo
andb
cmpsb
fs
or
mov
nop
lock
xchg
dec
dec
ret
and
sbbb
xchg
pop
add
push
pop
mov
or
jmp
inc
add
std
adc
push
fs
cmc
push
inc
std
ja
fwait
fcmovu
popf
subb
pop
sub
in
stos
jp
pop
mov
inc
dec
or
icebp
or
add
stos
pushf
inc
jbe
mov
jnp
xchg
xchg
pop
jns
jp
punpckhdq
dec
loop
stc
fsub
fisubs
adc
ret
mov
xlat
sahf
mov
mov
inc
test
jl
jle
pop
sti
push
and
mov
mov
outsl
scas
push
inc
ficompl
sub
shlb
mov
or
push
jmp
mov
test
xor
in
mov
mov
xchg
orb
jbe
xorl
loope
faddl
mov
push
loopne
cmc
daa
jae
gs
mov
negb
and
cli
ret
icebp
sbb
push
or
lret
enter
shlb
cmp
mull
mov
lea
sahf
stos
jae
xchg
out
adc
inc
push
iret
or
fsub
fiaddl
fstl
jmp
leave
cmpl
mov
test
dec
popf
aaa
loope
outsb
rcl
mov
js
mov
jmp
xchg
mov
fnsave
push
bound
imul
mov
fnstsw
sub
in
cmpb
fidivl
lock
das
inc
pop
insb
xchg
push
shrb
pop
adc
lahf
imul
jb
jg
int
ret
lods
lcall
xchg
mov
pop
aad
inc
sub
xchg
push
mov
or
cmpb
xor
cmpsb
inc
cld
fistpll
in
or
int3
popa
xor
push
pop
dec
inc
int
mov
cmp
scas
mov
cmp
inc
push
adc
sub
outsb
cmpsl
xchg
and
ret
ds
imul
lret
sarl
lods
rclb
xor
push
ficoml
sbb
push
xchg
mov
stos
inc
inc
mov
xor
mov
out
dec
shl
movsl
out
cli
negl
out
sar
scas
jae
mov
sbb
loop
movsl
pusha
scas
fnop
push
pop
xchg
and
adc
and
mov
icebp
and
out
int3
je
and
movsb
jge
mov
rcrb
mov
daa
push
clc
add
xlat
test
mov
lahf
cmpsb
push
or
fldenv
xchg
mov
out
or
pop
out
dec
repz
dec
xchg
dec
lds
push
xor
inc
pop
jb
repz
xchg
push
push
mov
sbb
xchg
ds
or
add
shl
inc
push
fidivl
push
jbe
cmp
sub
cmp
dec
outsb
cmpsb
cwtl
out
or
jle
inc
rcrl
jne
pop
popf
push
ja
in
or
push
mov
insb
or
bsr
adcb
mov
sbb
int3
dec
dec
push
sub
push
pop
cmp
es
dec
jbe
dec
mov
fs
pop
nop
push
add
aam
sub
daa
lds
cmp
mov
sbb
enter
adc
mov
push
sub
jbe
mov
leave
sub
cmpsb
mull
fstpt
push
and
jne
daa
cmpsl
outsl
js
mov
rclb
add
inc
loop
dec
dec
cpuid
les
iret
sub
cmp
fcmovu
push
pop
push
fcmovne
fstpt
pop
sub
lea
cmpsb
inc
jbe
ja
mov
mov
jmp
mov
out
sbb
dec
in
mov
fldl
icebp
test
and
mov
and
xor
sbb
push
adc
jbe
mov
sub
pop
jg
into
fstl
push
push
push
fidivrl
jle
aad
fisttps
adc
sbb
leave
aas
fmul
dec
inc
cwtl
xor
mov
push
jo
cmp
rcrb
fwait
and
rolb
push
lods
in
jns
fdivs
lods
jg
clc
push
cmp
mov
data16
mov
mov
jae
negb
mov
push
dec
jge
xchg
sbbb
enter
sbb
sar
xor
stc
jnp
fs
add
sbb
xor
pop
add
dec
mov
or
lock
test
ficoml
repnz
lcall
je
ss
pop
mov
push
lock
dec
loopne
pop
stos
fs
sbb
outsl
cmpsl
call
or
iret
xchg
xor
xlat
push
hlt
jg
add
in
sub
jae
gs
xchg
inc
xchg
adc
stos
mov
cld
ja
mov
roll
lods
js
arpl
dec
pop
aad
xlat
jo
or
lret
hlt
in
or
mov
daa
sbb
adc
fsubrl
cmc
cwtl
inc
dec
adc
cwtl
ds
push
imul
or
xchg
mov
xor
mov
sub
je
repnz
or
mov
outsb
in
adc
pop
xchg
call
shl
fld
out
pusha
cmpsb
cmp
loop
xchg
cmp
dec
push
inc
shll
or
test
jns
fisttps
mov
xchg
and
jmp
or
inc
repz
mov
push
int
arpl
std
ljmp
jmp
das
adc
leave
aam
icebp
xchg
push
push
fsub
hlt
mov
adc
int3
adc
popa
cmp
testl
inc
xchg
sub
int3
cmp
dec
hlt
and
mov
jae
mov
adc
jnp
outsb
pop
out
cmovp
push
mov
mov
imul
out
xchg
call
mov
mull
aaa
add
into
adc
ss
adc
sti
loope
mov
sub
adc
lret
std
xchg
hlt
imul
int3
pusha
lds
xor
xor
mov
or
rorl
dec
push
adc
lods
pop
stos
int
jb
mov
or
xor
or
cmc
jg
adc
xlat
arpl
gs
es
inc
pop
outsl
sub
dec
cmp
sub
push
jno
cmp
clc
mov
pop
leave
cld
push
inc
xchg
jne
arpl
lret
insl
add
or
dec
decl
add
mov
add
jne
sub
pop
in
paddusb
or
jle
pop
cs
outsb
pop
jp
sbb
inc
inc
mov
imul
sub
imul
add
ret
adc
mov
pop
sarb
int
aad
push
subl
bound
flds
jge
popf
aas
cltd
and
into
es
dec
xchg
std
negl
test
mov
fisttpl
mov
jb
jb
dec
push
sub
into
rcr
xchg
cmp
clc
sbb
pushf
je
and
sbb
loopne
je
dec
clc
and
inc
imul
leave
mov
adc
outsb
in
or
js
mov
cmp
inc
rcr
dec
push
sub
mov
push
les
mov
jo
inc
repnz
in
andnps
and
insb
or
ret
cmp
mov
mov
stos
pop
sahf
push
jae
addr16
jge
jne
clc
push
and
insl
int
xchg
dec
imul
cld
daa
ljmp
in
or
cld
mov
repnz
jnp
inc
push
subb
inc
pop
and
mov
sub
push
loopne
sbb
aam
push
jno
in
enter
cmp
adc
mov
push
inc
jnp
adc
lea
push
rcll
pusha
mov
nop
mov
pop
repz
cmpl
and
sbb
cmp
xchg
cli
mov
ret
test
rcr
push
movsb
adc
fcoms
push
leave
stos
fsubs
repnz
adc
mov
mov
push
or
mov
pop
arpl
mov
in
cmp
pop
pop
out
cmp
mov
dec
dec
iret
popf
lea
outsb
mov
mov
sbb
fs
add
or
cmp
xor
dec
and
imul
stc
push
jns
lock
scas
loope
push
mov
adc
inc
pop
sbb
xlat
xor
insb
negb
leave
xchg
fmuls
pop
das
or
sub
adc
lret
ds
mov
sahf
pushf
in
pop
pushf
push
aam
mov
test
mov
xchg
repnz
mov
scas
sbb
cli
js
movsb
sahf
push
pop
or
ds
in
xchg
inc
or
lahf
adc
test
scas
in
bound
mov
cmp
mov
stc
cmp
push
mov
iret
mov
nop
nop
fstpt
sub
mov
fdivp
xor
insb
cmp
sbb
out
mov
stc
mov
stos
push
movsl
adc
mov
int
sbb
pop
xchg
sbb
mov
pusha
stos
cmp
jl
lcall
popa
jmp
lea
dec
cltd
mov
xor
fcoms
lods
popf
int
out
aaa
imul
add
xchg
dec
fprem1
pop
mov
into
scas
pushf
add
shlb
cwtl
cli
cmpl
mov
mov
ds
lret
add
jmp
jae
or
mov
fsubr
inc
and
jmp
enter
mov
fisubrs
mov
mulb
scas
ljmp
shrl
mov
xorl
dec
inc
iret
and
xchg
mov
jne
mov
test
int
xchg
pop
sub
mov
mov
ds
fsubrl
insl
int
into
fsubrs
jbe
xor
ret
pusha
adc
and
fldenv
jbe
mov
leave
pop
mov
mov
out
adc
sub
push
mov
lods
adc
adc
cs
pop
add
nop
cmp
adc
stos
and
sbb
movsb
leave
jnp
add
shrl
sbbb
mov
adc
sub
jns
inc
aam
or
stos
inc
jnp
ss
adc
jb
mov
xor
mov
inc
dec
shlb
test
test
mov
xlat
std
sub
popa
mov
and
std
sub
inc
aas
add
loop
dec
pop
adcb
ss
das
cltd
imul
xor
and
inc
push
out
icebp
test
ljmp
add
js
pusha
xchg
rclw
and
sub
inc
sub
xchg
mov
inc
push
xchg
cmp
in
rcrb
call
xorl
mov
xor
adc
mov
sbb
leave
je
add
mov
xchg
imul
ds
sub
pop
pop
add
push
popa
mov
push
popf
inc
mov
mov
pushf
dec
mov
scas
cmp
jge
jge
sub
pop
mov
js
sub
aas
sbb
insl
or
mov
fsub
jmp
cmpsl
push
push
lods
imul
loope
jg
mov
das
xchg
cmpsl
shll
mov
mov
jns
mov
ss
sahf
mov
cmpsb
mov
mov
cmp
fidivrs
or
or
lods
push
movsl
sar
mov
leave
mov
cmp
call
shlb
and
les
jb
lret
int3
icebp
mov
imul
jge
pop
jg
ss
lahf
inc
shlb
in
stc
dec
rcll
loope
jnp
push
mov
xchg
inc
xchg
iret
xor
int
dec
adc
cltd
xchg
into
push
inc
adc
iret
mov
daa
call
cmp
mov
fucomip
into
les
cmp
xlat
shl
aas
push
das
mov
pusha
ficompl
movsb
inc
out
push
pushf
loop
loope
pop
in
push
cmp
jnp
repz
aad
inc
mov
sbb
cltd
inc
loopne
xchg
cmpsb
mov
lret
loopne
mov
test
cmpl
aaa
loope
jne
lahf
aam
xchg
push
mov
mov
jae
imul
and
into
fstpl
aas
arpl
cbtw
add
sub
shll
adc
bound
pop
int3
stos
and
inc
sti
xchg
loopne
mov
je
addr16
push
lret
cmp
cli
test
fwait
pop
loope
test
xchg
mov
xor
mov
cld
mov
mov
outsl
add
jae
nop
mov
popf
mov
add
stc
xchg
jno
dec
xor
sbb
mov
lods
push
dec
jecxz
fisubrl
cmpsl
dec
xor
adc
int3
call
cmpsl
cmp
mov
pop
fcompl
sbb
jmp
cmc
rcrl
push
xor
dec
inc
sbbl
es
add
int3
gs
sarl
or
xchg
addr16
out
jge
mov
cwtl
mov
daa
inc
pop
sub
ret
jno
jmp
out
lds
mov
adc
adc
shl
or
sub
outsb
add
test
sbb
add
xchg
std
int3
loopne
xor
sbb
push
inc
test
je
cmc
pop
stc
jbe
mov
fiadds
push
repz
dec
xchg
ret
call
dec
pop
adc
repnz
in
pop
mov
addb
push
nop
mov
push
loope
mov
movsb
clc
sub
out
sub
and
out
jne
push
fiadds
jp
dec
imul
sub
mov
pop
add
rcll
roll
shrb
cmp
xor
jnp
mov
movsl
pop
xchg
add
nop
and
sbb
mov
mov
mov
dec
cmpsl
add
cltd
mov
rcr
pop
ret
lret
mov
xor
dec
push
inc
sbb
xor
and
ret
stos
out
cli
mov
cmp
lods
dec
sysenter
xor
sbb
into
fdivr
subl
mov
sbb
add
mov
pop
adc
xchg
les
xchg
cmp
cmpsl
sbbb
push
push
or
mov
imul
adc
prefetch
or
roll
out
sbb
jmp
fisttpll
cmc
push
dec
inc
fisttpl
push
xchg
dec
pop
cmpsb
lods
dec
push
xchg
mov
in
jecxz
in
and
test
cmp
adc
aas
lds
or
mov
in
fcomps
jle
pushf
shll
mov
xchg
popf
cwtl
fsubrl
and
jnp
lahf
jecxz
fcmovnu
add
rorl
das
inc
jae
cwtl
addb
outsl
or
mov
xor
mov
rorb
dec
add
loope
add
pop
cmp
lods
cs
mov
and
cwtl
cmp
scas
insl
repnz
das
adc
outsb
out
and
inc
dec
insb
mov
movsb
int3
push
pop
aam
push
repnz
lret
push
xor
inc
outsb
int
fldt
mov
rclb
pop
das
sbb
push
or
sbb
and
aas
adc
fidivl
lahf
jge
jge
mov
mov
fistl
data16
mov
mov
xchg
xchg
push
imul
into
sub
orb
nop
pop
les
gs
jae
aas
stos
aas
imul
mov
icebp
std
xor
pop
or
adc
movsl
mov
int3
pop
ret
lret
mov
push
loop
sti
aam
jmp
shll
and
gs
cmc
add
xor
sbb
popf
mov
int3
pop
int
mov
pop
popf
add
out
stc
fcoms
bndstx
dec
lret
repnz
mov
mov
sub
jmp
cmp
sub
mov
adc
xchg
inc
mov
mov
dec
cld
es
test
jge
dec
sub
and
inc
mov
lds
inc
cmpsb
fmuls
push
push
mov
bound
push
loope
pop
push
cmpsb
dec
pop
and
cmp
mov
popa
shl
jbe
popa
pushf
int3
inc
mov
xor
mov
addl
nop
out
mov
lock
lcall
sbb
dec
push
push
jecxz
xor
jb
in
int
mov
push
cwtl
xor
stc
jmp
rep
sbb
and
mov
and
sbb
gs
imul
pop
and
bound
pushl
push
cmp
xchg
cli
sarl
sahf
lods
pop
das
dec
das
adc
adc
call
xchg
test
add
cmp
cmp
hlt
out
pop
icebp
cltd
ds
inc
movsl
pop
push
adc
push
jl
inc
xor
roll
mov
mov
clc
jbe
cmpsb
testl
test
fwait
adc
fldcw
cmpsb
loope
jbe
cli
mov
cltd
pop
add
dec
sahf
dec
sub
mov
dec
sub
sub
dec
sbb
cwtl
or
adc
in
cmp
lods
lcall
cmp
jns
push
and
mov
push
xor
cltd
xchg
sbb
in
out
cs
stc
popa
test
lcall
inc
je
sub
mov
dec
ret
jg
sahf
or
push
inc
xlat
pusha
pop
je
xchg
ret
mov
je
sbb
test
out
mov
xchg
movsb
pop
mov
push
lret
gs
ljmp
jmp
adc
arpl
mov
jle
mov
push
movsw
and
mov
ja
lods
mov
movl
push
test
lds
rorb
aaa
pop
lods
push
cld
sub
xor
dec
leave
fidivs
xchg
ss
or
vcvttps2dq
xchg
jns
xchg
fcomps
jb
jge
stos
cmp
rcl
pop
xchg
mov
hlt
jo
in
fstps
scas
mov
dec
hlt
es
pusha
jne
cwtl
push
jp
test
shl
mov
cmp
das
mov
pop
xchg
scas
pop
dec
push
jnp
rclb
mov
mov
mov
sbb
pop
aaa
arpl
repz
out
insb
jle
mov
jl
popf
and
ljmp
push
sbb
fcmovbe
mov
std
lea
out
cli
dec
lods
int
sbb
adc
adc
enter
pop
cs
mov
dec
and
adc
insl
inc
xchg
jae
mov
ret
insb
xor
dec
pop
jnp
jbe
mov
jo
jecxz
xor
and
pop
cld
cmp
not
adc
pushf
sub
or
inc
jno
push
aad
and
jecxz
outsl
mov
outsb
mov
xchg
adc
mov
add
outsl
xlat
lcall
xrelease
and
mov
popa
pop
or
add
bound
xor
in
fmulp
adc
mov
das
mov
das
test
sub
push
ja
pop
jecxz
dec
lods
sbb
add
fnsave
fnstenv
ficoms
mov
mov
or
cmp
lret
mov
paddq
or
in
mov
lods
sub
jmp
jl
shl
addr16
fidivrs
lds
mov
or
loope
sub
or
or
jns
lahf
ror
jecxz
inc
lds
mov
jl
mov
aam
inc
mov
gs
add
das
mov
dec
mov
in
ss
mov
aas
out
jecxz
xor
notb
fidivl
pushf
cmpsb
mov
ljmp
ds
dec
addr16
je
rcll
ja
lock
sbb
sti
hlt
fs
lea
sub
or
mov
inc
pop
scas
out
ljmp
or
outsl
outsb
xor
cmp
leave
sub
xor
inc
mov
push
js
pop
inc
push
cmp
rolb
imul
jae
jns
or
shl
mov
cmp
xchg
mov
loopne
lods
jbe
cld
inc
dec
mov
xor
iret
sti
leave
jecxz
push
aaa
and
jecxz
lret
pop
imul
xor
sub
and
daa
sahf
icebp
outsb
andl
push
stos
xor
ljmp
in
inc
fsubrs
lods
ficompl
cmp
cli
clc
repz
shl
bound
lock
dec
mov
or
rorl
push
lret
add
xchg
and
es
clc
scas
adc
sub
pushf
dec
adc
ss
sahf
mov
push
xchg
or
out
or
fldcw
pop
aas
inc
sets
inc
dec
testb
push
adc
sub
and
jb
and
jbe
xchg
or
in
arpl
sti
xchg
sub
and
xchg
and
xchg
xlat
and
or
add
sub
or
mov
jge
push
xorb
jg
push
mov
push
push
xor
jno
cmp
hlt
jnp
ret
frndint
arpl
mov
push
jecxz
sub
outsl
das
int3
aaa
test
ret
cmp
dec
dec
inc
aaa
cmp
shlb
mov
sub
arpl
jae
mov
cltd
loopne
loopne
shrb
fcoml
lret
jo
inc
pushf
dec
jecxz
test
or
pushf
jmp
jbe
xchg
jns
cmpxchg
pop
xchg
sbb
aaa
hlt
aam
repz
test
jne
std
loopne
cs
or
aaa
cmp
xchg
cmp
and
mov
or
mov
fisubl
xchg
sub
jns
daa
int3
jp
pushf
xor
pop
push
sub
push
shlb
sbb
mov
adc
shll
xchg
js
fwait
push
lret
repnz
mov
and
mov
stc
stos
or
push
or
mov
lret
push
mov
inc
inc
out
movl
sub
mov
adc
negl
imul
add
pop
insl
pop
je
int
sbb
cmpsl
xchg
add
push
imul
aam
mov
mov
inc
ret
repnz
lods
mov
mov
inc
or
xor
faddp
enter
mov
mov
mov
mov
jne
lret
jl
out
cmc
pop
mov
push
mov
enter
data16
xor
mov
pushf
xlat
mov
in
xor
das
dec
icebp
adc
std
bound
int3
jmp
test
pop
fildll
jecxz
xchg
testl
fstpl
push
lods
inc
jne
hlt
into
mov
or
inc
lcall
out
cmp
add
shr
enter
mov
mov
aas
add
cmp
inc
mov
xor
in
xchg
pop
pop
mov
nop
push
fcoms
or
jl
movb
mov
mov
mov
loopne
xchg
ret
cmpsl
dec
inc
mov
xor
into
sub
jno
mov
pop
int
mov
in
jg
nop
lret
into
cmp
subl
jo
or
popf
and
pop
call
pop
push
rol
add
pusha
insb
jae
xchg
out
fstpt
stc
stos
mov
mov
jmp
sbb
cmp
mov
sbb
popa
pop
imulb
cs
or
xchg
jle
call
inc
xor
aaa
test
mov
sbb
mov
adc
mov
push
inc
jbe
jmp
pop
push
test
test
sbb
adc
xor
cmpsl
std
call
jne
xor
fsub
jo
sub
adc
xorl
push
in
xor
std
repz
xchg
xchg
jg
and
sbb
test
cmp
xchg
inc
cli
daa
out
out
fsubs
cmpsl
jp
andb
push
rol
lret
les
in
cmpsl
add
out
outsb
test
adc
mov
clc
xlat
xchg
cmp
fidivl
add
push
and
pop
jg
mov
mov
adc
insl
pop
xchg
and
mov
aas
js
mov
fdivrs
add
jne
insl
ds
mov
mov
xchg
mov
jle
cmpl
xor
enter
in
push
mov
and
pop
add
jl
inc
adc
or
into
decl
inc
inc
sub
outsl
cltd
cmp
nop
or
sti
ljmp
insl
das
adc
cld
lahf
mov
aaa
rcll
push
jno
lret
or
loope
insl
js
into
div
aas
mov
les
mov
in
sbb
lods
fsub
mov
inc
mov
mov
out
dec
je
xchg
adc
xor
in
cld
add
mov
pop
arpl
and
test
pop
out
push
or
pop
imul
xor
loopne
hlt
imul
sahf
mov
sti
mov
and
decb
jg
mov
mov
fdivp
mov
xor
imul
mov
gs
loopne
in
fsubrs
ds
adc
fwait
jecxz
pop
and
mov
insl
stc
mov
jmp
cmp
pushf
shl
pop
xchg
movsb
sahf
out
jnp
adc
push
sbb
dec
repnz
jnp
pusha
fstps
lods
or
mov
jbe
mov
loopne
push
loope
call
imul
lds
repnz
ja
ljmp
inc
add
jge
cmp
xlat
lahf
test
fs
shlb
je
ret
mov
dec
inc
jno
cmp
shlb
push
shlb
iret
into
sbb
inc
inc
xchg
movsb
inc
mov
jp
fldt
xor
push
mov
xchg
arpl
mov
and
ss
ret
idivb
dec
imul
push
adc
and
xchg
xchg
push
mov
or
jl
sti
jle
jg
stc
inc
je
mov
mov
adc
dec
or
cmc
xchg
nop
fwait
xlat
mov
out
loope,pt
cmp
cmp
push
das
mov
jae
pop
mov
cmp
adcl
cli
sub
rolb
cld
pop
iret
sbb
jle
in
fld
sahf
lds
jp
dec
jbe
cld
mov
cmp
loope
aad
scas
push
rorl
inc
out
xchg
adc
jbe
das
scas
ficompl
mov
cmpsb
inc
or
test
inc
mov
scas
cmc
into
sub
pop
shrb
sub
fcompl
cld
mov
xchg
inc
loopne
out
loopne
loope
push
in
mov
add
adc
fiadds
arpl
aam
or
cmc
or
loope
or
dec
popa
adc
loopne
jbe
xor
shl
cmpsl
cmp
lds
push
fisubrl
xchg
pop
fcmovb
xor
push
inc
push
pop
ss
cmp
sub
mov
shrl
idiv
repz
pop
mov
inc
push
jnp
icebp
pop
sbb
nop
adc
lea
or
mov
clc
or
xchg
inc
imul
inc
shll
mov
push
sub
push
cs
sub
popf
fcmove
lret
jecxz
fidivl
pusha
add
push
and
fildl
mov
cs
pop
ljmp
imul
xchg
pop
rcrl
dec
xor
add
jmp
loopne
pushf
cltd
sbb
scas
inc
xchg
gs
inc
out
lret
cld
push
mov
mov
or
mov
adc
pushf
cmp
test
cmpsb
cs
jp
roll
or
sbb
adc
jne
cmp
out
or
push
mov
mov
and
xor
jmp
in
arpl
pop
jmp
ret
pop
mov
or
cmp
out
mov
gs
bound
mov
cli
xchg
xchg
sbbl
rolb
cmp
sub
hlt
sbb
jp
xchg
out
jmp
out
jge
adcb
pop
imul
mov
loopne
lahf
pop
mov
mov
je
in
add
xchg
or
and
fildll
sbb
ss
mov
stos
into
push
sbb
adc
pusha
mov
mov
inc
sti
loop
sub
inc
sbb
sbb
cmc
ss
mov
ficoml
pop
cmp
xchg
test
adc
ja
dec
dec
nop
pop
or
lds
into
je
int
repnz
aam
jmp
shl
jae
daa
xor
std
lds
stos
fwait
adc
hlt
push
mov
sarl
in
xchg
push
addr16
adc
dec
dec
lea
adc
mov
or
popf
clc
ficoms
fnsave
mov
ja
xor
mov
or
jp
push
cwtl
and
mov
test
xchg
xor
add
cld
and
loop
loopne
pop
pop
fsubrs
stos
imul
int3
or
xchg
test
and
pop
lahf
pop
jmp
jg
lea
add
sbb
int3
icebp
aad
stos
jl
cmp
icebp
push
sub
pop
out
xchg
sbb
pop
mov
inc
cld
pop
sbbb
stc
push
loopne
in
les
ljmp
mov
adc
jno
xor
mov
popf
mov
ror
push
sbbl
loope
xor
and
mov
xchg
mov
mov
shrb
xchg
bound
or
in
das
push
fisubs
les
inc
les
jne
ror
sub
shlb
mov
jo
mov
jno
iret
jge
cmc
icebp
fsubrl
mov
imul
sub
mov
add
dec
add
je
inc
jg
dec
sub
add
jb
leave
add
pop
imul
pop
and
lea
idiv
mov
xchg
stos
mov
inc
inc
lret
fcomip
insl
int
jge
cmpsb
dec
insb
lret
cmc
stos
movsl
cmpsl
or
xchg
int3
pop
ret
imul
push
out
sub
std
jecxz
test
lods
movsb
clc
repz
xchg
mov
aas
push
cmp
add
jmp
mov
ss
inc
cvttps2pi
int
inc
outsl
out
xor
neg
xor
rorb
xchg
jge
das
and
roll
lcall
inc
lds
rep
xor
cmp
push
dec
mov
inc
sbb
scas
jo
adc
test
adc
clc
dec
in
sahf
xor
arpl
sub
sbbl
sbb
les
xchg
xor
outsl
stos
imul
sahf
cmp
lret
cmpsl
adc
dec
lods
popa
xchg
mov
pop
inc
lret
int
test
push
sti
in
data16
jmp
iret
out
push
mov
shlb
or
or
xor
or
or
ffreep
push
bound
mov
pop
repz
jne
fidivs
cmp
rcrl
and
push
sahf
xchg
pop
cmpsl
ret
inc
lcall
pop
outsb
mov
push
fidivrs
mov
or
mov
movsl
in
mov
mov
out
mov
adc
push
adc
sub
fxch
loopne
fistl
push
mov
out
outsb
test
xchg
mov
jnp
int
jb
ss
sub
gs
inc
pop
and
add
es
inc
jmp
outsl
xchg
or
cwtl
sti
mov
xchg
cmp
dec
popf
dec
xchg
mov
inc
fisubl
or
das
mov
and
into
cmp
mov
fwait
movsb
hlt
xchg
into
out
in
dec
mov
cmp
ret
add
mov
ret
into
or
into
sbb
dec
lcall
jp
in
stc
in
push
mov
jnp
push
fdivrs
xor
stos
repz
nop
add
sub
sarb
pop
jecxz
adc
lret
and
rcrb
xor
sub
imul
sub
xchg
ja
stc
inc
cmp
data16
mov
std
ja
push
or
or
shll
leave
sub
lahf
dec
lret
leave
cmpsl
test
mov
sbbb
mov
lods
push
sbb
imul
test
scas
lret
das
pop
out
cmc
sbb
cmp
jecxz
add
mov
popa
mov
cmp
mov
lcall
and
and
movsl
inc
and
ja
jo
shrl
adc
int
dec
gs
js
hlt
sahf
push
sbb
pinsrw
test
mov
sbb
add
mov
pushl
inc
pop
into
xchg
jae
and
addr16
mov
idivl
pop
iret
flds
int
mov
xor
push
into
mov
cmp
andl
cmpsb
mov
sub
in
mov
xorl
or
fmul
jmp
call
xor
pop
pop
sub
mov
dec
call
push
insb
call
cltd
clc
ljmp
leave
xor
pop
xor
and
mov
dec
sbb
jge
jmp
les
mov
dec
jmp
stc
xchg
or
mov
movsl
and
test
jp
fistps
sub
daa
fcmovnb
pop
mov
or
sbb
xor
addr16
xor
xchg
shl
xor
les
notl
pusha
sub
xor
cmp
aaa
inc
push
aas
in
dec
adc
dec
loopne
mov
lret
push
fs
xchg
sub
idivb
mov
and
sub
push
pop
mov
sahf
push
xor
insb
in
push
ret
fistl
mov
fwait
mov
mov
fbstp
outsb
sahf
je
pop
test
sub
lcall
mov
sub
aas
adc
lods
mov
iret
sbb
hlt
add
pop
mov
sar
mov
push
bound
push
jmp
fldl
subb
mov
xlat
sbb
lret
pop
or
pop
xchg
sub
repz
mov
jb
or
out
inc
enter
pop
xchg
xchg
lods
dec
test
test
and
fisubs
scas
scas
xor
mul
add
bound
bound
xchg
movsl
xor
add
into
jmp
jmp
xchg
or
dec
fxrstor
xchg
adcl
aas
sbbl
insb
adc
std
shrb
cmp
shrb
int3
push
cmpsb
pop
mov
rorl
xchg
sbb
cli
ret
aas
scas
loop
test
mov
cmp
out
shll
xor
xchg
sbb
in
xchg
pop
cli
out
inc
in
mov
add
addr16
sub
add
dec
jmp
xchg
roll
popa
lret
and
jge
icebp
xchg
sub
mov
aaa
sbb
xlat
pop
push
and
ss
xor
jb
insb
aas
lock
lods
lds
xchg
icebp
bound
cmc
pop
or
xchg
fmull
std
and
pop
mov
inc
insl
inc
imul
in
cmp
cs
enter
mov
cmpsb
movsb
jno
outsb
dec
push
push
fidivrs
dec
in
mov
fidivrl
insl
jo
dec
mov
pop
xor
xchg
sarb
pop
cli
push
hlt
pop
or
xor
notl
rorb
xlat
movsb
rcr
mov
subl
in
std
lret
shrl
les
pushf
repz
xchg
pop
test
out
xor
fucomi
cmp
mov
mov
mov
xchg
or
repz
fstpt
ja
sbb
ret
ds
dec
or
adc
fistps
dec
xchg
mov
shll
or
out
andb
mov
cmpsb
sub
ret
inc
int
loop
pop
fs
movsb
sti
cltd
sti
sti
adc
es
xchg
xor
sub
addr16
lret
fsubr
scas
sbb
lea
cmc
addl
gs
xchg
das
dec
mov
enter
and
sti
mov
lods
push
test
xchg
cmc
push
push
mov
loop
jns
sbb
aad
subl
mov
sub
ja
es
xor
in
dec
sahf
int3
add
lods
push
push
insl
fdiv
xor
lahf
inc
pop
fstl
ficoms
in
call
adc
div
jl
pusha
pop
and
sarl
lods
stos
stos
ret
ds
out
push
popa
movsl
loop
mov
and
out
outsb
sub
push
fwait
jge
fwait
stos
pusha
mov
fiaddl
xchg
outsb
and
push
mov
add
or
mov
in
jp
shll
in
insl
sarb
roll
xchg
test
daa
rol
mov
mov
fwait
pop
dec
ljmp
mov
scas
cmc
pop
aas
ret
mov
jns
jae
nop
lds
xchg
test
ss
mov
movsl
cmp
xorl
cld
cli
jne
mov
inc
sbb
inc
lret
push
pop
mov
loopne
test
sarl
je
bound
cld
imulb
int
dec
jbe
stos
pop
sti
xchg
iret
ljmp
mov
push
jnp
cmp
cli
scas
mov
push
iret
adc
push
mov
or
aaa
push
push
mov
insl
sub
adc
xchg
xor
push
sbb
adc
ret
and
push
fbld
out
inc
js
in
cmp
cmc
add
push
out
pop
fs
xchg
or
insb
ja
mov
jle
in
pop
js
adc
pushf
adc
jns
popf
jb
out
cmpsl
mov
aad
das
nop
push
popw
nop
stos
xor
pop
sbb
xchg
sti
mov
das
mov
sub
cltd
mov
or
jno
mov
push
fisubrl
lods
aad
add
comiss
shrl
out
arpl
push
mov
cltd
orl
andl
or
mov
add
arpl
pop
decl
mov
sub
daa
fmull
sub
jbe
repz
negb
iret
mov
pop
lea
insl
sbb
rcrl
repz
fdivs
or
push
sbb
je
fbstp
shll
and
mov
pop
pushf
jns
leave
outsb
mov
push
loope
lret
pop
rcrb
test
ret
jmp
cmpsb
xor
daa
rclb
mov
adcl
mov
jae
pop
inc
inc
xchg
pop
dec
cltd
repnz
enter
mov
mov
into
xor
test
inc
cld
nopl
fistl
fs
mov
mov
or
xor
movsl
gs
lods
inc
into
ret
aad
mov
sub
xchg
sub
int3
jecxz
mov
shl
into
ret
cmp
inc
xchg
jbe
sub
sti
fmuls
push
add
insl
push
fildl
insb
xchg
lods
aaa
pop
shlb
jmp
popf
icebp
push
dec
lock
mov
negb
add
pop
adc
push
mov
fwait
pop
mov
push
add
inc
cmp
loope
push
adc
ljmp
in
ret
dec
stos
dec
adc
aad
xor
js
cmp
repnz
jl
rorb
shrl
pop
push
mov
mov
inc
add
in
or
cmp
cli
es
mov
ret
and
mov
sti
sbbl
lds
sub
mov
cld
jge
iret
xchg
jae
arpl
or
or
icebp
jbe,pn
inc
rcll
pop
push
out
mov
jo
or
imul
push
addr16
inc
lods
insl
rcrl
cltd
std
add
int3
imul
jg
andb
mov
sbb
push
sub
sub
push
arpl
cmp
xor
jle
fcoms
les
add
pop
aas
push
or
mov
mov
pop
jns
mov
leave
fisttpll
mov
in
aad
xor
adc
mov
call
jmp
pop
jg
and
sbb
outsb
mov
fiaddl
mov
mov
push
jb
rorl
leave
sahf
gs
adc
jb
in
rorb
enter
movl
pop
or
jb
idivb
dec
push
jge
pop
adc
les
cli
enter
repnz
pop
repz
sti
cmp
bound
shl
out
clc
sub
add
mov
xchg
faddp
jecxz
sbb
lea
lds
mov
and
lea
mov
dec
cmp
popa
and
stos
cmp
and
cmpb
addr16
pop
lods
adc
push
ja
aad
cltd
mov
push
imul
loope
bound
test
jbe
jbe
jg
pop
xchg
pop
sbb
enter
mov
adc
jo
divl
mov
xor
pop
lea
out
mov
iret
xchg
inc
xchg
fisttpll
jne
test
cmp
push
fidivs
orb
stos
inc
out
xchg
aad
add
test
loopne
repnz
pop
xor
jb
loopne
loop
rcrb
xchg
shlb
inc
xchg
push
sub
xchg
mov
dec
divb
pop
mov
push
xor
mov
lods
iret
aad
enter
fcomps
xchg
cmc
js
fisubrl
and
das
and
mov
sar
bound
in
outsb
or
push
xor
lea
push
or
push
lea
adc
insb
inc
lret
or
cmp
sbb
mov
mov
pop
push
pop
mov
pop
xchg
jne
lret
pusha
cmpsl
mov
andb
or
mov
icebp
mov
cltd
addr16
push
frstor
add
loop
inc
jl
aas
in
push
into
jl
pushf
in
dec
xor
int
icebp
repnz
rcll
add
mov
sti
push
jl
push
inc
in
cmp
mov
and
mov
scas
inc
dec
sbb
imul
loope
mov
out
cmp
pop
ficomps
in
fdivrl
sbb
push
xor
or
dec
xor
cmp
test
cmc
cwtl
or
inc
icebp
inc
dec
testl
fwait
mov
ja
daa
xchg
fnsave
push
cmp
lods
xor
cmp
stc
push
popf
jno
xchg
in
push
jle
pushf
cld
outsl
in
ret
nop
pop
jbe
aas
js
mov
cmp
xor
pop
jbe
sbb
sub
jge
test
aaa
adc
pop
and
and
ljmp
out
nop
sub
fdivl
in
data16
or
or
dec
jb
sbb
movsl
pop
fimull
ret
nop
lock
frstor
and
sbb
xchg
cmp
cwtl
dec
and
in
push
pcmpeqb
inc
cmp
mov
scas
jmp
rcll
iret
mov
movl
pop
add
inc
adc
fdivrl
enter
mov
jne
js
pop
bound
adc
out
jbe
adc
and
lcall
das
mov
mov
ljmp
lods
push
xor
mov
repnz
out
fisttps
and
scas
mov
push
xchg
jg
fadds
rcll
out
mov
jb
sbb
ret
scas
push
leave
fidivrs
sub
ja
lcall
out
mov
mov
mov
lea
cmc
scas
and
fiadds
loopne
cmpsb
push
loopne
out
fisttpll
int
jg
jmp
pop
or
jp
aad
and
mov
sub
sarl
sub
hlt
outsl
inc
jge
imul
mov
jb
mov
push
sub
cmc
cmp
jp
mov
push
arpl
add
out
push
mov
mov
repz
rorb
cmp
test
cmc
adc
pop
mov
arpl
daa
xor
sbb
sarb
xchg
in
test
testl
test
mov
mov
xchg
pop
jl
mov
wbinvd
and
lea
lods
fsubrl
xor
test
mov
bound
push
push
pop
repnz
add
mov
cmp
arpl
lret
aam
leave
jp
loopne
fidivrl
or
aas
or
mov
dec
cwtl
mov
push
inc
ja
mov
fs
push
outsl
mov
out
ss
out
jge
cmp
mov
jmp
jb
inc
test
ret
jae
mov
or
inc
testl
and
daa
movsl
das
sbb
les
dec
and
repnz
inc
or
ljmp
test
idivb
ja
pusha
jl
pop
repz
inc
pop
pop
fwait
inc
mulb
ret
aad
jmp
sbb
push
fs
insb
fs
mov
fcomps
push
pop
lahf
mov
loop
fwait
lods
cmp
pop
push
in
push
pop
mov
cwtl
push
adc
cmp
jecxz
popf
test
in
xchg
testb
addr16
jno
xchg
xchg
mov
clc
ljmp
rol
lds
call
leave
shrb
cmp
stc
mov
xor
jb
sub
mov
push
jnp
lock
push
cmc
cmpsl
cmp
cmp
ljmp
stos
outsb
cli
inc
shlb
insb
mov
mov
cmp
mov
mov
inc
sub
scas
roll
jb
in
aaa
jo,pt
xchg
add
adc
push
dec
xchg
jg
outsl
inc
cmpsl
mov
dec
jg
mov
addr16
jl
andb
icebp
ljmp
sahf
adc
fimull
inc
xchg
lods
xchg
inc
repz
pop
jmp
xchg
test
popa
jnp
test
int3
sbb
ja
pop
mulb
rorb
loope
mov
test
xor
iret
sub
push
in
mov
dec
xlat
in
ljmp
inc
jo
jnp
lods
mov
in
xor
inc
cmc
mov
push
pop
pop
cmpsl
repz
mov
adc
jae
mov
inc
repz
stos
push
mov
out
iret
push
addl
push
add
js
fnstsw
cmpb
mov
sub
cmp
mov
sbb
mov
shll
add
fmuls
mov
inc
mov
push
and
mov
mov
ljmp
jnp
gs
jne
jp
mov
fdivrl
pop
test
shrl
popf
sub
mov
mov
xlat
movsl
mov
fbstp
rclb
pusha
lds
ss
shlb
lods
add
inc
jle
and
lods
inc
jae
pop
dec
int3
aam
sti
adc
cmp
jmp
dec
sub
xchg
sbb
xchg
ret
pop
cmp
push
mov
xor
sub
xchg
dec
cmp
adc
xor
xchg
pop
shlb
ficoml
mov
xchg
imul
lods
rclb
fisubrl
mov
sti
fdivs
into
in
rcrl
pop
inc
int3
icebp
jno
dec
and
fdivrl
mov
adc
mov
cwtl
sbb
xor
clc
aam
incl
lods
test
mov
jecxz
mov
push
dec
into
mov
cmp
mov
ja
add
jns
addr16
adc
je
mov
fldl
sbb
mov
mov
mov
mov
stos
addl
aas
das
mov
or
repnz
ja
and
sar
push
test
push
es
cmpsl
sub
out
dec
mov
xchg
daa
inc
mov
pop
xor
je
call
cmp
nop
push
jae
sub
and
inc
outsb
roll
insb
fadds
mov
cmp
lret
push
xchg
cs
lret
dec
shll
jns
in
inc
paddsw
xor
pop
sbb
cs
int3
aad
push
pop
pop
lods
pusha
dec
inc
jge
xor
in
aam
loopne
sub
push
gs
repz
mov
ret
lods
inc
cmc
sti
icebp
add
inc
data16
shl
bound
push
daa
shr
mov
mov
xor
neg
outsb
inc
out
lret
sahf
mov
mov
test
popa
cs
lcall
ret
lods
ds
fstpl
jle
push
arpl
leave
mov
push
pop
adc
call
test
dec
and
xchg
xchg
xchg
pop
mov
lret
data16
jecxz
dec
dec
mov
packssdw
lahf
ret
xchg
and
loope
cmpsl
inc
xchg
shll
dec
xor
cmp
cmp
frstor
pop
out
add
ss
jl
mov
nop
fcmovne
dec
aad
cmp
daa
xchg
nop
es
clc
loop
sarb
popf
sbb
imul
testb
in
mov
es
lret
mov
adc
pop
xchg
imul
jno
dec
ret
xlat
hlt
repz
pop
inc
aas
pop
iret
add
mov
stos
xor
sbb
lock
sub
cmp
push
stc
hlt
movsl
mov
sbb
pop
jne
push
cmp
gs
push
out
imul
add
cmp
pushf
dec
pop
mov
push
mov
jecxz
adc
sahf
outsl
fwait
inc
dec
jbe
test
jno
jnp
in
and
arpl
mov
fadds
mov
add
pop
jmp
mov
icebp
or
cmpl
lods
fisubl
mov
xor
ret
int3
xchg
sbb
addr16
jne
mov
push
mov
call
stos
xor
enter
pop
mov
cmc
inc
outsl
in
push
fsubrl
ficomps
jb
push
push
daa
or
ds
dec
les
aam
sarl
mov
and
aaa
mov
adcl
cltd
test
cmp
pusha
pop
dec
lahf
pop
lcall
add
iret
bound
adc
fwait
push
mov
sbb
xchg
dec
push
insb
leave
mov
or
inc
jge
shrb
fcompl
sahf
xor
or
das
xor
and
xchg
mov
out
xchg
cmp
jge
sub
or
xchg
test
pop
xchg
xchg
dec
jecxz
dec
or
dec
jp
jo
aaa
mov
cmpsb
pushw
lods
inc
ret
out
cmp
shrl
lret
clc
loope
out
dec
out
lds
add
xchg
jecxz
out
sbb
inc
cmp
sarb
mov
mov
xchg
push
repz
dec
mov
inc
test
sub
rorl
repnz
adc
test
mov
test
iret
inc
test
cmpsl
sbb
iret
test
mov
cmc
in
mov
jp
mov
mov
clc
lcall
pop
fyl2xp1
lea
es
or
sbb
ljmp
adc
gs
pop
fistl
push
inc
aad
jge
lret
adc
nop
shlb
fidivrl
stos
dec
xchg
mov
mov
fistpll
mov
imul
mov
hlt
push
pop
into
inc
mov
jg
lea
pop
fdivp
mov
jmp
inc
jl
and
aam
out
mov
enter
jns
and
fistpll
mov
inc
daa
into
dec
je
shlb
loopne
imul
pop
and
cwtl
dec
scas
xchg
and
pop
pop
clc
rcrl
icebp
push
pop
sub
pop
mov
jns
out
inc
dec
and
push
pop
xchg
aas
jns
insl
scas
cmp
push
or
outsl
fcomps
pop
pop
fneni(8087
movsl
pop
sarb
jo
mov
sarl
xor
or
test
sub
pop
push
xchg
adc
add
rep
mov
mov
leave
xchg
ja
cld
int3
into
cltd
push
cmp
inc
xlat
sbb
aaa
movsl
pop
cmpxchg
jne
fcomp
mov
adc
sub
jne
pop
jo
outsl
lds
pop
lods
sar
inc
rorb
fisubs
cmpsb
enter
jbe
sti
fwait
mov
or
jg
movzwl
lret
mov
or
dec
xor
orb
pop
scas
movsb
pop
jp
insb
popa
xor
jbe
fnsave
mov
nop
lret
aas
dec
push
hlt
sub
xchg
pushf
jb
inc
inc
fsubrs
scas
addr16
inc
imul
lahf
or
addr16
stos
cmpsl
cmp
dec
iret
outsl
xor
lods
lds
stc
pop
xchg
clc
and
mov
mov
in
mov
fistps
jge
out
sbb
sbb
pop
jae
loope
jge
cmp
pop
bound
xchg
ljmp
mov
and
jbe
sbb
add
sti
aas
and
mov
fistpl
sub
sahf
pop
mov
pop
bound
mov
or
jnp
rolb
out
sti
sub
ret
call
mulb
dec
mov
push
push
daa
dec
adc
cmp
aad
inc
movsb
sub
mov
lods
ds
loope
stc
xchg
mov
pop
push
bnd
bound
ss
xor
inc
seta
inc
sbb
jp
mov
cmp
cmp
nop
lcall
jmp
inc
out
inc
popf
dec
cmp
enter
fsts
js
push
inc
ljmp
sub
sub
mov
out
daa
movsb
movsl
xor
inc
cmpsl
adc
cli
aad
jecxz
insb
add
ret
pop
mov
cwtl
mov
pop
test
inc
fsubrl
lahf
jl
sub
adc
cld
movsl
js
xchg
add
pop
and
mov
and
and
cmp
cmp
std
testb
rolb
jae
dec
test
popf
push
mov
xor
mov
mov
popf
inc
fldl
dec
push
test
dec
or
in
xchg
in
push
cmp
and
out
rcrl
loop
mov
pop
jb
xchg
nop
or
jne
scas
je
clc
adc
mov
mov
icebp
mov
aam
xor
lahf
pop
mov
das
sub
add
cwtl
cmc
mov
jns
xchg
pop
xchg
pusha
int3
adc
xchg
outsb
xchg
in
fisttpl
fdivl
outsl
mov
rorb
inc
pop
push
hlt
adc
and
sti
das
in
pop
inc
cld
adc
mov
sbb
fisubrs
pop
sbb
mov
pop
stc
adc
lea
stos
pop
imul
popa
repnz
add
arpl
dec
nop
sbb
push
xchg
mov
scas
mov
push
add
stos
in
scas
adc
mov
inc
sub
pop
int3
subl
inc
sbb
pop
int3
mov
pop
push
dec
addb
into
fnsave
ds
mov
lods
je
jbe
les
sub
andb
loop
mov
lds
sub
in
mov
xchg
insl
jmp
cwtl
xchg
gs
inc
jmp
xchg
cmc
imul
sti
pushf
dec
mov
lcall
lret
out
ljmp
dec
jmp
mov
aad
fmull
loope
out
push
lods
mov
sbb
cmp
cmp
xor
lret
jle
js
mov
jp
mov
lock
sub
clc
mov
test
mov
addr16
add
loop
fstl
sbb
sub
in
addb
adc
add
lea
rcrl
jle
fcmovnbe
push
sbb
jmp
xchg
test
testl
cmovge
push
adc
pusha
insl
sbbb
add
nop
ljmp
aam
jg
xchg
dec
jne
test
add
fadds
fbld
cmp
mov
xchg
das
dec
hlt
scas
bound
mov
into
mov
in
and
pusha
lods
icebp
imulb
enter
in
adc
push
into
mov
rcll
enter
jno
aas
xlat
pop
pushf
repz
lds
and
std
pop
sub
dec
rcrb
les
cmp
outsb
jmp
mov
imul
xor
pushf
xor
sbb
xlat
repz
mov
imul
in
popf
mov
pop
adc
pop
xchg
mov
popa
or
out
push
xchg
xor
lods
lock
or
push
negb
jns
push
xchg
mov
ja
int
mov
rol
adc
mov
das
fmull
std
mov
shrl
hlt
dec
fldlg2
addl
icebp
lret
mov
bound
dec
pop
addr16
lea
iret
push
mov
inc
in
and
pushf
mov
lea
scas
gs
dec
mov
fmuls
cwtl
daa
enter
negl
sbb
leave
cmpsb
or
push
idivb
loop
test
mov
pop
jo
jl
inc
scas
inc
les
das
adc
dec
scas
arpl
and
mov
ljmp
mov
sbb
adc
push
xchg
cmpsb
dec
push
pop
jns
mov
sub
xchg
hlt
mov
push
pop
mov
xor
sbb
out
sub
pop
es
sbb
lahf
data16
out
roll
iret
loopne
pop
rolb
pop
pop
inc
cmpsl
cmp
test
push
adc
pop
cmp
push
clc
bound
push
fdiv
loope
loope
cmpsb
in
lods
pop
push
jnp
pop
or
scas
sbb
mov
movsb
cltd
ucomiss
dec
jno
data16
push
push
ljmp
insl
mov
jne
faddl
test
sub
stc
ret
std
insl
cli
lret
rclb
in
sahf
xchg
jge
iret
xchg
jge
push
cmp
arpl
mov
out
jnp
inc
aad
dec
sbb
stos
data16
cwtl
sbb
data16
adc
jle
bound
scas
aam
sub
jl
add
push
adc
cmc
jne
imul
inc
xor
mov
push
mov
push
adc
inc
jecxz
or
loope
shlb
inc
push
loope
or
jbe
idivb
mov
mov
add
test
push
test
xor
pop
aad
xor
fwait
xchg
mov
jo
lods
adc
das
outsb
clc
sub
cmpsb
mov
push
cmp
fcomps
push
xor
dec
in
bnd
jbe
pop
inc
cmp
icebp
and
mov
ljmp
lea
in
xor
adc
jecxz
addr16
mov
sbb
dec
sub
jbe
arpl
mov
and
adc
repnz
jno
pop
mov
mov
movb
and
ret
xchg
hlt
adc
shl
xchg
neg
xor
aad
in
insl
xchg
or
xchg
bound
inc
dec
ficompl
sbb
dec
mov
scas
push
das
clc
adc
mov
dec
xor
pusha
sub
in
push
fwait
insb
pop
fdivrs
mov
enter
mov
mov
mov
lcall
mov
or
mull
mov
pop
mov
xor
sarl
mov
mov
mov
xlat
xor
sbb
sbbb
aad
rcrl
rorb
mov
push
sbbb
ss
jg
xchg
cmpsl
jmp
mov
rcr
sbb
aad
lret
nop
sti
push
fs
ds
mov
pop
fidivrs
int
sub
das
dec
orl
or
adc
lret
pop
cwtl
adc
iret
leave
int
dec
cld
ret
int3
xchg
jo
mulb
clc
loope
in
jbe
and
xor
jns
cli
out
adc
jmp
and
loop
movb
insb
pushl
mov
xorl
or
xor
push
push
mov
cmc
pop
test
cld
lods
inc
ja
mov
dec
cmc
js
cmpsb
fsubrs
testl
aaa
ret
test
sbb
cmp
mov
pop
dec
adc
jmp
push
mov
stos
icebp
and
and
divb
sbb
daa
ljmp
jge
lea
scas
js
cwtl
testl
leave
xchg
lret
cmovnp
cmpsl
xor
filds
jl
xchg
arpl
mov
and
into
addr16
bound
sbb
int3
mov
mov
push
xor
rol
into
inc
inc
xor
inc
aad
fwait
inc
ja
jg
cmp
ss
and
lods
cs
or
mov
mov
and
jo
lods
sarb
pushf
js
je
movsl
sbbb
cmpsb
jge
shl
movb
push
ss
repz
inc
ret
add
mov
imul
gs
xchg
mov
or
fists
js
jo
inc
xor
xchg
test
stos
push
sti
mov
dec
sahf
mov
dec
lods
les
or
ss
ret
nop
and
xorb
les
outsb
imul
push
aas
je
cmp
sti
ja
mov
jns
inc
loop
sub
xor
repz
xor
lock
stos
fidivl
loopne
popf
xchg
xor
aaa
stos
xor
icebp
and
cmpsb
jg
loop
and
push
or
je
loope
test
sahf
int3
push
fildl
cwtl
cmp
aam
pop
push
int3
call
push
push
lret
popf
xchg
add
sarb
je
rclb
sbbl
mov
popf
dec
dec
aas
mov
lret
ret
stos
add
pop
and
sub
xorb
push
mov
dec
push
arpl
mov
cmp
sbb
mov
daa
mov
cmpsl
dec
outsl
fsubs
mov
sti
mov
cltd
adc
mov
sbb
pop
adc
sub
hlt
mov
jg
pusha
bound
inc
bound
into
mov
inc
lea
xchg
xchg
jmp
add
pop
adc
dec
sbbl
shll
aaa
pop
and
movsl
adc
dec
clc
dec
or
jl
inc
cmp
adc
adc
pusha
mov
and
shrb
movsl
or
xchg
jne
add
mov
sub
inc
adc
push
and
fisttps
cmc
imul
stc
sub
int
sbb
jno
inc
pop
js
lret
inc
xor
push
xchg
add
dec
dec
and
inc
pop
jbe
xor
rclb
rcll
add
icebp
mov
mov
pop
xchg
mov
jae
xor
movl
outsl
jmp
xor
enter
pop
sub
pushf
outsb
adc
lods
dec
and
xor
push
lret
popa
mov
cmp
xor
frstor
cmpsl
stc
push
std
outsb
dec
pop
mov
cwtl
mov
push
fistpl
or
xorb
fsubl
push
jnp
dec
push
push
dec
out
test
push
clc
jg
xor
xchg
and
lcall
movsl
andl
sbb
mov
mov
push
add
lock
jle
add
adc
or
jl
inc
mov
xchg
out
fsubl
xorb
ljmp
adc
pusha
aaa
push
loop
sti
mov
fimull
ds
xor
into
repnz
inc
xor
adc
sarb
pop
pusha
push
mov
inc
sub
mov
sahf
gs
pop
jnp
sbb
mov
cmp
xlat
mov
out
mov
jae
pop
jno
pushl
mov
mov
inc
stos
iret
shll
add
dec
jg
in
bound
fcomip
push
adc
xchg
dec
cwtl
clc
fwait
pop
xchg
lock
outsb
or
xlat
flds
lods
adc
fstps
or
das
or
loope
xchg
mov
sahf
push
cmp
lods
sub
adcl
sub
popa
and
shlb
rcl
cmpsl
jmp
dec
js
shrl
push
adc
ljmp
leave
test
out
xor
cmp
outsb
pop
jmp
loope
into
movsb
xlat
sbb
sbb
xor
ficomps
in
push
sub
sahf
mov
mov
jl
mov
and
xor
push
xor
xor
xor
nop
lods
mov
in
adc
jl
mov
rcll
add
in
pusha
mov
popa
negl
lret
imul
xchg
sbb
insl
shrl
daa
sbb
pushf
enter
xorb
lret
loop
push
les
and
jo
clc
adc
cltd
subb
push
aaa
lcall
scas
sbb
nop
shl
lods
mov
mov
movb
and
mov
push
ds
movsl
or
daa
mov
icebp
stos
pop
inc
push
sub
jae
loop
xlat
fiadds
lcall
mov
in
cld
aaa
sbb
in
fwait
dec
aam
cmp
add
faddl
mov
mov
bound
push
mov
adc
xor
sbb
fistpll
loop
fndisi(8087
jecxz
sbb
enter
jae
add
xchg
sub
jno
mov
adcl
mov
mov
loop
sbb
dec
icebp
sbb
ret
push
push
mov
push
xor
and
mov
ss
push
sbb
jecxz
jge
test
inc
or
cmpb
xchg
ljmp
xchg
fstpt
dec
ljmp
xlat
xchg
adc
adcl
arpl
stos
repnz
push
or
lds
ror
in
psubsw
int3
lahf
mov
xchg
movsb
pushf
push
out
and
shlb
sub
mov
arpl
xchg
std
mov
daa
jmp
loopne
push
aam
outsb
and
mov
cli
in
mov
inc
sti
mov
popf
mov
xchg
xchg
fildl
pushf
clc
clc
icebp
add
jmp
push
xchg
inc
dec
mov
jnp
jl
sbb
fwait
push
fildl
into
nop
movsb
sbb
sbb
bound
add
dec
xor
mov
push
cmp
bnd
lods
sbb
dec
andl
mov
jmp
pop
push
sub
xchg
cltd
vmread
inc
inc
sbb
outsl
sahf
dec
inc
movsl
mov
jbe
roll
out
fucomp
incb
mov
jl
mov
lds
add
mov
sbbb
jns
or
xor
mov
cmpsb
xor
jb
xor
movsb
jle
out
lahf
mov
shrb
stc
fmul
pop
out
xchg
jmp
sub
out
xchg
dec
inc
es
fmull
xor
add
sub
ret
das
sar
sahf
or
insl
push
jnp
pushl
xchg
fwait
push
lahf
cmp
mov
std
mov
insl
jb
cmpsl
movsl
out
nop
addb
ret
inc
clc
or
xchg
aas
push
fcmovbe
rcrl
ja
or
mov
xchg
jle
and
jae
das
mov
lret
pop
ljmp
fnstsw
jge
and
sub
sub
aam
in
lea
sbb
adc
je
movb
push
das
cmpsl
inc
lret
into
pop
inc
adc
into
pop
scas
movsl
loop
push
inc
cmovnp
mov
lcall
pop
out
jo
aad
hlt
addr16
test
inc
push
ljmp
in
xor
sbb
xchg
adc
cltd
lret
mov
or
sub
xor
sahf
rorb
cmc
or
shlb
loope
shl
push
inc
andl
xorb
adc
sbbb
xchg
and
xor
fs
rcr
ret
mov
mov
xchg
sbb
cmp
pusha
popa
cmc
sub
jbe
repz
es
movsl
mov
push
mov
dec
mov
js
ret
jl
stos
data16
adc
lahf
lea
hlt
inc
mov
ja
inc
aad
mov
pop
ss
hlt
enter
addr16
pusha
jmp
imul
sbb
jmp
fstp
pop
hlt
pop
jo
jnp
stc
outsl
sub
ret
lret
mov
std
sub
cwtl
iret
mov
mov
xor
adc
cmpsl
xchg
shrb
jae
es
xchg
adc
jbe
mov
sub
repnz
call
lahf
mov
aam
pushf
push
sarb
ja
dec
jl
mov
out
xchg
stos
sbb
xchg
pop
jp
mov
rcl
arpl
mov
mov
ss
xlat
and
add
sub
gs
repnz
loop
dec
lea
adcb
cmp
lret
or
jb
fstpt
fidivrs
push
and
add
sub
push
lret
ja
jnp
and
scas
int3
andb
mov
insl
scas
and
add
cmp
add
pop
fwait
out
pop
or
xor
pop
jno
popf
leave
jae
imul
cs
xchg
pop
fsub
into
popf
ljmp
pusha
jl
mov
adc
dec
cs
add
iret
mov
mov
inc
sahf
test
call
pop
punpckhdq
dec
push
mov
push
adc
mov
jae
popa
out
faddl
sbb
mov
daa
fsubrl
shlb
mov
inc
push
xchg
sub
push
cwtl
sub
jl
int
jno
inc
adc
sbbb
xchg
mov
movq
loope
orb
int3
pop
inc
dec
insl
push
lret
xchg
outsl
rcll
or
out
jb
adcb
les
gs
mov
test
mov
stos
and
out
mov
cmp
sbb
pop
or
es
out
cwtl
pop
mov
pop
cmp
or
in
fcomp
pushf
sbb
stos
xlat
jp
popf
lcall
loope
ja
sub
adc
xchg
or
and
and
jmp
loope
test
sub
mov
cmpsb
inc
in
and
xchg
pop
jns
mov
xorb
xchg
scas
lods
shlb
xchg
test
bound
cld
sub
mov
mov
fidivrl
movsl
int
xorl
sahf
in
adc
sbb
push
iret
push
fbstp
mov
into
lret
xchg
ja
cwtl
push
jb
jecxz
mov
ja
paddd
notl
xchg
test
or
xor
sub
std
lds
mov
stos
push
pop
or
mov
stc
fists
imul
push
mov
adc
scas
adc
in
lock
or
leave
std
mov
mov
or
xor
cltd
mov
aaa
fisttpll
pand
inc
jb
icebp
push
jbe
nop
dec
inc
fnsave
movsb
add
adc
mov
insb
inc
mov
mov
adc
out
mov
sbb
jle
test
and
adc
pop
in
popa
fistl
in
data16
daa
divl
lods
mov
pop
and
xor
cmp
push
in
insl
push
cmpsb
push
int3
inc
push
sbb
cmp
fistpll
sub
ret
inc
fistps
clc
into
lret
xor
dec
xchg
mov
cmpsb
xor
mov
pop
into
push
cmp
pusha
lret
imul
and
xchg
push
out
push
es
mov
mov
aas
sub
push
push
out
mov
inc
jb
dec
jmp
in
stc
test
xor
ret
icebp
add
sti
jp
lods
fnsave
pop
in
rcll
add
data16
mulb
mov
mov
pop
cmp
fistl
or
cmpsl
out
mov
xor
sbb
das
add
xor
inc
test
dec
cmc
pop
stos
std
cmp
pop
jl
xchg
xor
push
jecxz
int
hlt
cmpl
sub
cmp
jle
jg
pop
pop
out
cmp
mov
jbe
shrb
xchg
movsb
aaa
jno
icebp
je
scas
int
repz
roll
out
aas
movsb
idivl
std
xchg
test
pop
iret
cmp
and
outsb
jae
scas
mov
inc
loop
cmp
sub
xor
ss
mov
scas
push
pop
jge
inc
jp
ds
xorb
hlt
sahf
pop
or
cmp
xchg
and
dec
xchg
sbb
dec
inc
add
jle
pop
cmpsl
adc
cmpsl
testl
mov
aas
mov
out
sbb
into
and
adcb
fimull
mov
jno
es
in
data16
outsb
call
adc
shr
stc
jl
call
mov
adc
sbb
jnp
scas
or
fstl
inc
cmovle
sahf
sti
push
sbb
sub
incb
xchg
sub
in
out
sbb
test
pop
scas
pop
mov
cmpsb
movsb
cmp
or
jbe
in
pop
or
sub
popa
insl
test
add
mov
repz
push
hlt
pop
add
mov
jmp
sub
adc
inc
cmp
mov
sti
or
inc
rcrb
push
imul
dec
dec
leave
fstps
pusha
and
jmp
fs
jg
les
ss
loopne
xchg
mov
pop
rcl
pop
or
lock
movsl
xor
adc
ljmp
mov
mov
xor
fcmovnbe
fidivrs
mov
stos
or
cmp
fmul
push
shl
mov
ds
sub
sahf
sub
pop
mov
dec
pushf
sbb
notl
js
loope
or
jecxz
push
adc
inc
pop
pop
xor
and
cmp
dec
stc
cltd
cmpsl
push
inc
xor
gs
loop
jl
inc
push
cwtl
sub
push
sbb
aad
and
dec
ret
imull
aaa
push
xchg
mov
cmp
sub
shll
adc
xchg
cwtl
jl
out
mov
mov
scas
dec
or
fcomp
into
je
dec
and
add
cmp
sbb
mov
sbb
shlb
inc
cs
adc
jmp
push
out
addb
or
and
cmp
iret
sub
insb
cmpsl
arpl
fs
fimull
repnz
lret
xor
cmp
aam
test
sbb
or
mov
in
sbb
aaa
jae
insb
pop
test
aaa
imul
sbb
push
addr16
push
loope
push
std
pusha
xchg
iret
test
pop
dec
and
in
jecxz
nop
ljmp
mov
mov
lret
popf
cmp
fldenv
fdivrl
daa
inc
jge
andb
xchg
push
xchg
stos
cmpsl
in
aad
mov
xor
clc
lods
ss
xor
and
and
sub
aas
xchg
mov
andb
mov
sbb
ljmp
ds
sarb
jbe
icebp
xor
xchg
andl
scas
and
cmp
mov
scas
inc
push
or
dec
push
add
xor
pop
mov
cmpsl
imul
adc
les
repz
bound
cs
repnz
pop
inc
test
xlat
dec
xchg
fdivrl
pushf
scas
scas
jp
cmp
sub
jmp
adc
xchg
push
and
xchg
dec
inc
dec
leave
sub
mov
popa
mov
fcoml
mov
lock
mov
pop
aad
or
dec
out
xchg
mov
cmp
add
cmc
ds
aas
mov
rorb
push
push
dec
enter
jp
push
mov
lds
dec
pop
push
inc
imulb
xor
in
dec
mov
push
fidivrs
mov
xchg
in
or
sbb
adc
cli
scas
pushf
repnz
pushf
sub
inc
and
lods
and
outsb
sahf
sub
add
xchg
push
lea
cmpsb
and
lret
out
pop
les
pop
pop
shll
arpl
fldl
test
hlt
mov
jge
ja
fucomi
push
sarb
xchg
repnz
adc
psrld
mov
jmp
iret
lea
lds
or
xor
mov
jg
or
jbe
mov
push
in
rorb
lcall
ret
xor
les
popa
mov
sahf
fcmove
ljmp
icebp
loope
in
jns
sub
push
inc
sub
jp
dec
gs
adc
xchg
rclb
dec
in
jns
lcall
mov
mov
mov
bound
and
or
push
mov
xor
shrl
pop
cwtl
xchg
orl
insb
nop
popa
jb
fadd
adc
mov
fcmovnbe
sbb
push
mov
fisubs
push
sub
out
xchg
inc
cmp
mov
mulb
call
mov
sarb
mov
out
adc
xor
daa
and
in
out
xchg
sub
outsl
jne
inc
mov
xor
add
stc
leave
sbb
and
sub
jnp
sub
and
xchg
outsl
lcall
xor
addr16
test
lods
out
pop
dec
scas
out
mov
movb
sbb
enter
pop
xor
imul
test
fs
and
and
aaa
fsubrl
pusha
loop
imul
scas
cmp
je
pop
std
sbb
ljmp
fnsetpm(287
popf
inc
popa
inc
out
das
jmp
pop
sub
aas
mov
bound
andl
lahf
repz
mov
dec
xchg
sbb
inc
dec
iret
mov
and
lret
sub
jg
data16
xor
jge
in
scas
inc
inc
cmpl
push
fldt
mov
std
jl
les
cwtl
xchg
push
ror
xor
test
aas
pop
orb
icebp
loopne
int
or
cmc
dec
xchg
cld
mov
lret
lcall
and
fadd
outsb
popa
xchg
sub
add
xor
push
shl
sti
ret
lock
aaa
push
les
jmp
or
test
xchg
inc
flds
bnd
jb
pop
mov
aaa
push
daa
pushf
lcall
fdivrs
out
mov
inc
push
test
sub
loopnew
jle
push
sub
cmpsb
sbb
inc
leave
cli
sbb
repz
push
xchg
popf
adcb
stos
push
mov
and
addr16
pop
mov
inc
pushf
fidivl
xor
int3
cs
arpl
or
sub
ja
push
push
movsl
cmpb
orb
ds
lea
mov
xchg
and
ret
leave
pop
sti
push
or
gs
jecxz
push
sub
and
pop
xchg
adc
mov
fidivrl
stos
ds
cmc
cs
mov
mov
sti
mov
xchg
jp
adc
jecxz
push
push
mov
or
push
je,pt
in
and
jecxz
mov
mov
imul
dec
inc
add
sub
jb
mov
mov
jge
lock
xorl
xchg
shl
cmp
les
lock
in
push
mov
adc
lods
lds
loopne
stos
and
or
insl
adc
jl
test
push
das
mov
pop
lret
mov
ret
aas
sub
lods
xchg
imul
dec
or
mov
inc
or
daa
call
repnz
xorb
test
mov
dec
imul
mov
pushl
dec
dec
in
in
or
dec
and
mov
sbbl
xor
pop
rcrb
mov
dec
xor
rclb
xchg
xor
sar
scas
sbb
rclb
mov
push
and
cltd
pushf
add
mov
imul
and
xor
mov
sbb
out
xchg
push
pop
push
out
jno
jl
cmp
out
cmpsb
pop
add
pushf
hlt
ror
in
aad
ds
add
and
shrl
rorb
pop
iret
imul
xchg
sbb
dec
inc
dec
imul
pop
mov
int
or
pop
into
fnstenv
or
gs
in
jmp
sar
daa
push
gs
pop
adc
jecxz
shlb
push
jo
add
mov
add
and
and
inc
sbb
sub
js
shr
or
adcl
cmpsb
gs
lock
xor
loop
stos
hlt
adc
mov
mov
loope
mov
pop
mov
movsbl
js
and
sub
jge
test
ficompl
dec
ror
xchg
hlt
dec
test
push
mov
jnp
repz
inc
pop
fisubl
pop
in
imul
jbe
add
add
mov
popf
sbb
pop
and
adc
cmp
loope
jbe
or
inc
xor
daa
mov
mov
xchg
dec
scas
pop
cmpsb
jmp
add
addr16
sub
push
dec
jb
mov
cmp
test
aam
push
icebp
arpl
insb
aad
jns
lcall
mov
outsl
daa
test
jnp
and
pop
mov
in
cmc
sbb
jbe
inc
lock
mov
sub
lcall
cmpsl
mov
mov
addr16
movsl
out
imul
jmp
add
sarl
push
insb
repnz
int3
xchg
sub
fistps
das
push
pop
test
jl
lds
sarb
aas
scas
je
inc
cld
es
cmpsb
repnz
pop
mov
add
xlat
lret
stos
rcrb
and
popa
mov
movsb
or
fdivl
int3
cmc
in
adc
pop
sti
rol
cmp
mov
gs
mov
pop
mov
mov
push
pusha
test
push
ret
ret
mov
cmp
xor
xchg
lret
mov
adc
adc
movsl
out
inc
push
jg
push
cwtl
lcall
adc
icebp
push
std
repnz
pop
sub
mov
insl
and
popf
push
jle
xlat
lods
ss
outsl
mov
rorb
lds
xchg
lock
mov
test
xor
mov
fldenv
out
imulb
fs
push
sbb
das
adc
mov
dec
test
stc
hlt
rcrb
ljmp
les
lcall
lock
mov
out
sub
aaa
dec
pop
ds
add
sub
sub
bound
cmp
pop
mov
mov
pop
pop
js
fnstcw
gs
mov
mov
lret
outsl
into
lea
xor
and
xor
lcall
and
cmpsb
ss
sbb
xor
mov
push
inc
iret
xchg
hlt
pop
sbb
push
das
push
xor
adc
fadds
push
insl
outsb
mov
data16
and
and
mov
pop
fadd
and
mov
adc
imul
das
orl
pop
imul
mov
cmp
imul
imul
jle
jmp
xor
pop
xor
push
mov
xchg
adc
jbe
dec
lods
mov
xchg
push
rol
dec
adc
inc
js
std
cmc
ds
mov
fsubs
jae
movsb
idiv
int
jl
mov
je
mov
fs
and
xor
sub
mov
and
ret
fdivrp
dec
xlat
cmc
int3
pop
repnz
xchg
test
mov
add
mov
add
push
scas
cmp
lock
lods
jp
jle
pushf
inc
pop
jnp
dec
push
mov
pop
jge
stos
adc
scas
movsb
lcall
push
sahf
es
inc
or
rcrl
mov
and
mov
lret
mov
bound
jge
lea
rcrl
cmp
in
jb
jl
adc
mov
xor
jne
dec
loop
lods
mov
jbe
ret
clc
xchg
dec
sub
xchg
testl
fcoml
lods
outsl
movsw
mov
test
dec
xchg
int
or
mov
stc
mov
lahf
jl
adc
cld
rcr
test
mov
imul
daa
jnp
xor
dec
aaa
mov
daa
dec
xchg
mov
mov
or
mov
mov
out
add
fists
mov
dec
inc
andb
cmc
push
push
dec
or
das
sbb
jnp
fimuls
shrl
jmp
pop
or
jb
push
imulb
enter
add
imul
push
and
cmp
ds
orl
cwtl
daa
pop
and
dec
dec
push
ds
loop
loope
adc
addl
mov
aam
fmulp
and
movsb
push
push
notb
mov
lret
mov
loope
scas
add
insl
insb
xor
test
lock
stos
js
daa
dec
mov
push
in
adc
xor
inc
cmp
lods
pushf
or
and
call
and
mov
mov
imul
pop
jns
inc
sarb
mov
xor
cmp
lds
or
cmc
ret
stos
pop
clc
leave
add
lods
out
jg
adc
popa
cmpsl
push
stc
scas
repz
mov
mov
sub
push
mov
jno
mov
int
aas
adc
adc
xchg
das
insl
out
mov
mov
enter
cmpsb
aad
xcrypt-cfb
cmpsl
mov
xchg
mov
or
cmp
adc
and
push
frstor
mov
add
stc
rclb
cmp
adc
push
rorb
and
jp
fstps
jnp
and
cmpsb
lds
xchg
movsl
mov
sub
out
xor
lds
mov
or
xchg
dec
push
rorb
leave
fadd
out
push
jno
nop
fildl
jno
jne
std
or
mov
mov
mov
add
rcrb
stc
or
xchg
cld
and
jno
cmp
dec
stos
lcall
jnp
jmp
mov
jl
je
sarl
sbb
mov
cli
shrl
or
lret
mov
incl
pop
lock
dec
or
sub
pop
ficomps
icebp
push
mov
jno
mov
xchg
cld
rorb
sbb
cmpsl
xchg
shll
in
xchg
xchg
dec
popf
imul
cmp
mov
fcmove
inc
loopne
out
inc
fmuls
pop
inc
test
push
mov
jns
repnz
mov
or
aam
test
negb
shll
dec
mov
dec
mov
insb
iret
fwait
push
push
cmp
sbb
scas
add
push
rcl
jo
idivl
xchg
pop
xchg
loope
push
mov
cmp
ja
adc
jge
shl
add
mov
cmp
or
in
cmc
cmc
pop
xchg
jmp
lods
insl
pop
fdivrl
push
sbb
ret
xchg
enter
inc
xchg
lret
ss
dec
int3
inc
and
add
dec
outsl
inc
xchg
or
ret
mov
and
pop
lock
mov
sarl
push
push
xchg
mov
ss
test
jg
jp
pop
loope
cwtl
cmp
add
fistpl
push
clc
dec
or
sbb
or
xor
jg
mov
mov
addr16
je
add
enter
aas
repnz
pop
mov
sbbl
sub
pop
subl
int
shrl
mov
or
mov
inc
cmp
adc
mov
test
inc
scas
lods
insb
jl
fldenv
push
mov
mov
test
jae
pushf
sub
xchg
es
xchg
fsubrl
cmp
repz
or
adc
push
add
add
fsubs
aad
xor
pop
fstpt
mov
or
add
inc
scas
outsb
jne
xchg
cmpsl
and
movsb
gs
out
pushf
insb
mov
repz
mov
dec
addl
xor
mov
pushf
sub
arpl
fisubs
lret
imul
push
pop
icebp
xchg
pop
mov
vmovdqa
add
lock
jns
mov
or
fisubrl
push
ds
gs
loopne
pusha
mov
or
gs
xchg
addr16
outsl
or
mov
cmp
adc
xor
test
fildl
cld
or
movsl
cmp
pop
or
rorl
mov
jg
xchg
fnstsw
mov
xchg
pop
jno
ds
xlat
cmp
xchg
dec
jno
dec
cli
jno
rorb
sbb
aas
sub
insl
push
or
out
or
xchg
jo
mov
dec
fwait
lahf
imul
out
push
pmuludq
or
mov
cld
pop
aaa
xor
enter
data16
and
pop
push
movsl
mov
test
mov
cmp
cmp
push
and
movsl
mov
fcoml
int3
dec
iret
dec
mov
arpl
sbb
sub
das
adc
jge
fdivrl
fists
daa
into
adc
jnp
mov
pop
mov
outsl
sbb
sub
sub
jp
cs
xchg
popa
jg
nop
sbb
mul
or
cli
daa
fisttpll
push
jp
jle
sahf
fstps
inc
xor
fsubp
adc
xchg
jb
aaa
and
adc
mov
shlb
mov
push
cmpsl
and
aas
pop
push
faddl
out
jbe
mov
xor
fldcw
pop
inc
or
jb
dec
fsubs
sbb
push
orl
xchg
dec
andl
cld
jbe
out
imul
sahf
out
or
mov
popf
lahf
pusha
scas
scas
jbe
cltd
sub
out
sub
lcall
push
xchg
les
sbb
xlat
adc
inc
pop
add
mov
cli
add
add
je
jo
outsb
insl
repnz
xchg
daa
bound
call
and
repnz
dec
scas
out
jg
mov
mov
addr16
sbb
loopne,pt
jmp
shlb
in
pop
arpl
inc
ljmp
repz
jecxz
test
aaa
xchg
add
dec
dec
and
or
popa
inc
and
cmp
out
and
or
xor
mov
adc
xchg
call
scas
ds
dec
dec
mov
and
and
das
jecxz
inc
jno
popl
lret
mov
cmp
mov
xchg
jns
jae
rcrl
mov
pop
fldenv
leave
mov
xor
pop
jae
sti
xchg
pushf
mov
int
xlat
or
sub
fs
jae
out
xorl
sbb
jb
push
pushf
dec
rclb
mov
rol
out
loopne
dec
subb
repz
inc
push
int
popf
dec
or
cli
andb
fildll
adc
arpl
jl
clc
sahf
test
lods
dec
jg
movsl
pop
mul
int
mov
jnp
cmp
push
popa
xor
data16
sbb
xchg
mov
into
sbb
mov
test
stos
dec
pop
mov
jmp
or
jbe
jae
cltd
pop
mov
dec
sub
jg
mov
sarb
adc
andb
jae
mov
pop
or
out
push
out
jo
dec
pop
push
or
out
inc
mov
jg
dec
add
xchg
push
or
shrb
pop
icebp
xchg
and
in
jl
ret
sbb
inc
lret
cmp
pop
ret
rcl
int
xor
pop
pushf
adc
pop
imulb
jp
sub
cld
scas
mov
outsb
xchg
inc
mov
sbb
test
cli
jg
fisttpll
xor
fisttpll
lret
in
insl
into
sti
xchg
inc
stc
xor
in
shrb
lods
popa
fwait
sti
jp
xor
push
jl
pop
imul
cmc
lcall
shrb
jl
ror
rol
daa
inc
pushf
push
aas
jg
push
cwtl
xchg
jne
add
ret
sbb
mov
pop
ror
jmp
aas
in
push
imul
shlb
add
adc
cmp
hlt
std
mov
sbb
cmp
fnstenv
xor
xchg
or
mov
pop
lret
fdiv
out
sub
out
mov
in
jo
xor
dec
sbbb
inc
lock
push
ret
aam
aaa
and
xor
mov
in
cltd
cli
sbb
notb
out
sub
nop
mov
and
jne
xchg
mov
pop
into
stos
dec
dec
inc
lods
out
adc
push
test
cmpsl
inc
mov
subb
or
inc
std
xchg
adc
sub
hlt
sub
add
pop
xchg
jl
idivl
pop
stos
and
insl
test
hlt
xor
pop
add
lret
xchg
mov
jp
insl
out
rcrb
leave
cmp
std
adc
imul
pop
insl
xchg
out
jno
jne
iret
sub
cs
sti
repz
data16
jns
push
pop
fstl
or
mov
movzwl
sub
lahf
pop
sbb
and
lds
inc
repnz
and
pop
iret
jbe
mov
dec
mov
xor
stos
lahf
ficoml
inc
repz
pop
ret
adc
mov
out
lcall
cmp
sbb
ds
mov
cmpsl
dec
inc
cwtl
addr16
push
xor
fisubl
jnp
lret
stc
rcll
xor
loopne
sbb
and
das
testb
pop
shrb
push
lods
xchg
and
aad
rclb
aam
mov
cltd
sub
test
addr16
in
mov
jb
testl
movsl
jg
out
inc
pop
ret
icebp
enter
test
cli
or
lods
pop
repz
lea
pop
repz
adc
xchg
lds
mov
and
xchg
out
or
mov
mov
sbb
sub
ret
ror
cmpsb
stc
fcomp
add
mov
shll
stos
inc
shlb
andl
push
lret
nop
add
cmpsb
mov
mov
pop
dec
adc
xor
sti
hlt
inc
daa
mov
inc
pop
pop
insb
fwait
xor
mulb
lcall
jmp
mov
stc
sbb
mov
pushf
pop
ds
or
mov
mov
push
ss
pop
lods
xchg
out
mov
pop
ret
ds
or
cmpb
stos
shrb
gs
enter
or
outsb
mov
popa
lods
test
xlat
pop
push
popa
xor
rcr
cli
cli
xchg
out
aad
pop
fisttpll
inc
xor
leave
roll
dec
mov
jnp
mov
dec
ret
stc
sahf
push
dec
lcall
dec
cmp
jne
mov
ds
mov
xchg
roll
mov
dec
add
push
jnp
sub
mov
sub
pushf
pop
add
notb
jb
cmp
pop
mov
xor
push
cmpsl
mov
out
jp
and
xor
mov
pop
dec
scas
test
outsb
insl
std
dec
adc
lea
dec
mov
or
add
xor
lcall
in
loop
dec
push
or
ss
dec
dec
adc
icebp
pop
icebp
stc
jo
and
and
jne
ljmp
and
ss
enter
into
aaa
mov
es
call
mov
push
out
push
aaa
xor
aas
inc
mov
frstor
fcompl
pop
pop
mov
insl
bound
dec
xchg
push
adc
clc
add
xchg
mov
or
popa
sbb
lcall
sbb
fisttpll
push
iret
int
lods
insb
xchg
sub
cmp
mov
in
add
pop
cmc
fsubl
cltd
pop
sub
mov
mov
ja
cli
or
fstpl
mov
and
sub
pop
jb
cs
inc
subb
aad
outsl
xchg
leave
cwtl
iret
add
jl
cmpsl
aas
mov
repnz
roll
dec
mov
out
incb
lds
xor
mov
out
in
mov
mov
and
cmp
inc
inc
add
mov
pop
mov
cmpsl
movsl
leave
adc
adc
cwtl
in
ds
dec
hlt
cmp
loop
jp
pop
stc
pushf
in
pop
mov
pop
adc
mov
scas
lds
cmpsb
or
popf
imulb
mov
leave
mov
imul
fstps
movsb
jns
mov
lcall
xor
pop
fisubl
aad
loope
push
sub
insl
mov
ljmp
inc
sbbl
push
inc
repz
addb
shrl
pop
push
sub
xor
imul
cmp
push
mov
lret
and
rolb
rol
inc
mull
xlat
dec
pop
ret
mov
test
lods
jbe
mov
pop
es
movsl
push
xchg
out
pop
aad
sarl
sub
loopne
xchg
and
sub
push
sub
outsb
mov
das
and
jmp
lea
pop
test
mov
mov
inc
dec
and
add
inc
push
pop
rorl
xlat
cmp
sbb
insb
xchg
lret
mov
adc
nop
or
sbb
in
cmp
sti
filds
or
aas
repz
mov
add
out
push
xchg
xchg
imul
icebp
or
and
stos
scas
pushf
mov
and
push
enter
xchg
mov
cmp
ss
sbb
fldcw
sahf
sub
sbb
xor
pushf
mov
std
arpl
xchg
mov
push
rol
mov
push
adc
pop
xchg
lcall
push
cmp
repnz
mov
xchg
push
test
sbb
jbe
lods
stos
insl
push
dec
cwtl
dec
jge
and
dec
in
ret
push
xchg
cmp
dec
clc
fnsave
ffree
lods
lret
inc
adc
fsubp
cmpsl
repz
adc
incl
mov
aad
xchg
mov
popf
adc
mov
cmpsb
add
arpl
repz
jnp
jnp
je
flds
fcomp
push
mov
into
jmp
fcompl
fdivrl
mov
and
cltd
lock
loope
cmc
pushf
push
fnstsw
adc
or
pop
js
add
or
mov
add
js
add
js
add
js
add
jns
add
or
sub
add
or
push
jns
add
or
jb
or
add
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
cltd
dec
add
add
add
cwtl
dec
add
cwtl
dec
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
incl
add
add
dec
add
add
add
incl
add
add
cmpsl
dec
add
movsl
dec
add
incl
add
add
test
add
incl
add
add
stos
dec
add
add
add
incl
add
add
lods
dec
add
add
add
incl
add
add
scas
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
add
add
incl
add
add
mov
add
incl
add
add
dec
add
add
add
incl
add
add
ret
add
add
incl
add
add
dec
add
add
add
incl
add
add
fimull
add
add
mov
xlat
dec
add
incl
add
add
loope
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
ljmp
dec
add
dec
add
add
add
out
dec
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
stc
dec
add
add
add
dec
add
add
add
stc
dec
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jmp
pop
dec
add
or
hlt
fwait
dec
add
fwait
dec
add
fwait
dec
add
push
adc
add
adc
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
sbb
add
add
incl
add
add
sbb
add
add
call
sbb
add
pushl
dec
add
and
ljmp
and
dec
pop
nop
add
add
add
add
incl
add
add
add
add
rolb
add
push
pop
mov
int
mov
push
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
and
and
fs
add
add
add
popf
mov
lcall
lcall
fcmovnu
lcall
lcall
aad
lcall
fcomp
lcall
lcall
push
inc
add
dec
add
add
inc
loopne
sidtl
add
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
cmp
add
je,pn
js
add
add
add
add
adc
add
push
add
add
add
add
pusha
jb,pn
popa
je
add
stos
add
add
and
add
add
add
or
add
add
fs
je
add
add
add
xor
add
add
add
or
add
add
movzbl
cmp
jg
je
cmp
jg
je
add
cmp
ja
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
sub
je
sub
je
dec
jmp
mov
ret
mov
ret
sub
je
dec
je
dec
je
dec
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
pop
adc
and
inc
add
adc
sub
inc
add
adc
xor
inc
add
inc
add
in
push
push
push
mov
push
mov
sub
push
push
push
andb
push
pop
xor
lea
rep
stos
stos
lea
push
mov
push
call
lea
push
call
lea
push
push
call
pushl
push
lea
push
call
add
lea
push
lea
push
call
mov
cmp
je
andl
lea
push
call
test
jne
push
lea
push
call
pop
pop
mov
mov
pop
pop
pop
leave
ret
orl
call
jmp
pushl
call
ret
jmp
push
mov
sub
push
push
push
push
xor
pop
xor
lea
mov
push
rep
stos
stos
mov
lea
push
push
mov
call
test
je
mov
lea
mov
push
call
movzbl
mov
push
shl
call
pop
pop
push
movzbl
pop
or
sub
addl
shl
or
inc
inc
cmpl
jl
lea
push
push
push
call
test
je
xor
lea
mov
mov
push
call
movzbl
mov
push
shl
call
pop
pop
movzbl
push
or
pop
sub
add
shl
or
inc
inc
cmp
jl
cmpl
je
mov
lea
mov
push
pushl
mov
call
test
je
cmp
jne
push
pushl
call
lea
push
pushl
jmp
pushl
call
pop
push
call
pop
pop
xor
pop
leave
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
jmp
add
mov
and
add
and
add
and
add
and
add
add
and
add
xor
add
dec
and
add
add
sahf
and
add
add
add
add
add
incl
add
add
inc
add
add
add
add
add
add
add
add
mov
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
xor
add
dec
and
add
add
sahf
and
add
add
add
add
add
fs
insb
outsl
jae
add
inc
gs
gs
inc
imul
imul
je
imul
inc
gs
jne
jb
outsb
je
imul
jns
add
pop
add
je
jne
jb
outsb
je
imul
jns
add
add
je
gs
jo
popa
je
inc
add
jge
inc
js
je
jb
arpl
jae
into
add
imul
insb
gs
bound
arpl
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
dec
inc
dec
xor
cs
insb
add
lods
add
jo
imul
push
inc
push
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
add
add
pop
inc
and
and
and
add
add
pop
pop
inc
dec
inc
inc
dec
push
push
pop
push
push
dec
inc
inc
push
push
add
pop
pop
inc
dec
inc
inc
dec
push
push
pop
push
push
dec
inc
inc
push
push
pop
dec
inc
add
and
add
add
add
add
add
incl
add
add
and
add
add
incl
add
add
add
add
add
incl
add
add
and
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
add
add
jmp
sub
daa
sub
pushl
sub
cmp
dec
add
lcall
dec
add
add
ljmp
add
dec
add
call
sub
jmp
sub
incl
add
add
sub
add
add
incl
add
add
add
add
incl
add
add
sub
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
call
xor
incl
add
add
incl
add
add
add
add
inc
ja
add
ja
add
pushl
add
dec
add
call
jp
add
or
cli
js
add
pusha
or
pop
js
add
or
mov
add
js
add
js
add
js
add
jns
add
or
sub
add
or
push
jns
add
or
jb
or
add
add
stos
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
data16
je
jb
jb
je
arpl
push
arpl
outsb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
sub
mov
sbb
push
into
pusha
pushf
movsb
mov
fwait
xchg
and
dec
imul
xor
sbbl
push
sub
adc
dec
lds
mov
xchg
push
fdivrs
pop
xchg
mov
std
jp
mov
cmp
or
xchg
jmp
push
data16
sub
and
or
and
adc
push
in
xchg
cs
ficomps
testb
sbb
mov
xchg
dec
pushw
aas
out
pop
lcall
std
adc
rorb
out
fimull
out
imul
es
es
xchg
mov
inc
push
jecxz
imul
mov
mov
cmp
or
pop
daa
leave
push
dec
jmp
ret
mov
shlb
stos
lret
or
fildl
sub
test
insb
mov
mov
jle
sub
out
ffreep
movsl
cmp
pop
xchg
push
cmp
cmp
sub
push
rorb
mov
iret
adc
adc
mov
aam
push
out
shrb
xor
cmpsl
fsubs
mov
jecxz
inc
sarl
sahf
cmpsb
mov
fnsave
hlt
stc
shl
sti
xor
xchg
scas
mov
jne
shr
fldl
mov
sbb
mov
inc
cmp
push
lret
or
cmpl
dec
adc
shlb
inc
jnp
mov
dec
adc
add
jns
into
lea
lret
pop
sarb
out
xor
lds
clc
jnp
clc
orb
sbb
push
imul
xor
adc
lahf
mov
mov
add
into
icebp
imul
push
push
int3
xchg
out
repnz
jmp
ds
jle
stc
mov
push
lea
fildl
add
mov
insl
sbb
cwtl
mov
mul
in
in
or
push
xchg
test
push
pop
xor
cmc
cmp
inc
inc
mov
ds
test
xor
pop
mov
or
inc
cmpsb
test
insb
jo
mov
xchg
dec
push
cli
ret
xlat
xor
loop
sub
mov
je
mov
pushf
sbb
sbb
mov
arpl
nop
push
scas
ret
cmp
inc
test
xor
xchg
scas
or
fsubrs
mov
cwtl
mov
in
ret
lahf
adc
icebp
outsb
xor
add
outsl
mov
aas
enter
and
dec
xchg
pop
cmpsb
jns
std
pop
sbb
adc
push
nop
mov
ffree
sbb
inc
sbb
mov
fbstp
jns
int3
xor
jmp
xchg
inc
pop
pop
push
lahf
mov
and
sbb
push
gs
dec
into
hlt
aam
aad
xchg
jmp
xlat
dec
pop
pop
popf
inc
lock
out
in
or
or
mov
cld
nop
mov
mov
stos
ret
dec
mov
or
xor
inc
adc
sub
push
xchg
nop
xchg
int3
pop
lods
das
cli
shrb
cmpsb
pop
or
mov
popf
outsb
jecxz
mov
inc
cmp
inc
lcall
mov
mov
cmp
sub
fwait
cmp
in
pop
push
pop
cmp
pop
xchg
sbb
xchg
sub
cld
sub
sti
popf
aaa
repz
jmp
std
into
aam
pop
xor
cli
or
pop
or
xchg
lds
mov
sti
imul
or
hlt
dec
icebp
popf
add
sub
mov
es
bnd
mov
outsb
add
and
fidivs
nop
or
xlat
lahf
inc
add
inc
sti
xor
sub
cld
cs
or
sahf
fwait
test
cld
cmc
adc
icebp
adc
mov
mov
pop
adc
and
adc
lods
inc
cmpsl
repz
push
lds
sahf
loop
push
repz
jl
or
cmp
mov
hlt
mov
cmp
cld
testb
push
xchg
push
jp
push
cmp
ja
jnp
pop
push
mov
sbb
xchg
orb
ja
sub
les
cltd
xchg
mov
popa
mov
imul
shrl
adc
lock
jge
mov
add
movsb
cmpsb
pop
push
xchg
insl
aam
and
outsl
fcoms
shlb
ds
pop
dec
jne
sbb
sbb
shll
push
mov
lahf
imul
xchg
pop
push
ljmp
cmp
cmc
cmpsb
ljmp
xor
xor
or
mov
mov
dec
dec
push
idiv
push
arpl
mov
in
pop
call
out
jp
out
or
insl
dec
pop
xchg
js
in
sbb
int3
xchg
int
int
mov
fst
addl
mov
fwait
add
mov
push
jb
in
xchg
dec
pop
outsl
mov
xchg
pushf
pop
lcall
scas
lea
cwtl
fiadds
inc
cmc
inc
inc
xchg
popl
fwait
mov
push
pop
add
aam
imul
or
test
mov
and
lods
push
rclb
sub
adc
jae
and
cwtl
test
push
cmc
sub
add
pop
sti
in
sahf
pop
pop
pop
or
hlt
mov
bound
rcll
sub
fdivrp
push
out
inc
sbb
xlat
mov
loopne
push
loopne
jp
mov
insl
movsb
aam
pop
icebp
mov
fisttpll
jo
arpl
mov
rcl
mov
fwait
push
sub
push
cmp
daa
je
leave
enter
push
loopne
mov
enter
add
scas
sub
sub
lods
pcmpgtw
push
mov
xor
pop
jb
insl
ds
sub
stc
xlat
popf
jl
clc
in
pop
xlat
pop
sub
scas
pop
bound
sbb
dec
and
out
mov
or
mov
push
sub
pop
push
mov
xor
push
cmp
insl
mov
mov
inc
mov
popa
sub
adc
pop
jno
and
dec
cmpsl
mov
inc
clc
add
mov
add
mov
sahf
mov
scas
test
repnz
sub
enter
call
mov
testl
ss
fdivr
fdivr
insl
popf
inc
dec
jae
std
dec
push
lods
das
in
sub
inc
or
mov
loop
add
mov
jecxz
mov
shll
cmp
ja
cmpsb
hlt
jp
jg
orb
sub
cmc
cwtl
push
sub
xchg
xor
push
test
push
out
inc
ret
sahf
outsl
mov
and
cmp
pop
in
push
into
fcmovnb
sbb
dec
adc
mov
mov
aad
mov
movsl
rol
rcll
jae
outsl
je
xchg
mov
aam
lahf
sub
scas
pop
andb
add
dec
cmp
jg
out
in
aam
out
dec
test
loopne
jp
mov
cwtl
mov
lret
cmp
jle
xchg
imul
push
mov
data16
ja
dec
faddl
inc
jp
lds
sbb
insl
or
fisttpll
call
push
adc
sbb
dec
jno
lret
popa
int
arpl
mov
adc
mov
dec
fs
fbstp
push
push
sbb
push
sub
lods
pop
out
jge
loope
inc
add
xchg
sub
mov
out
test
hlt
pop
mov
inc
pop
sub
cmp
push
lods
lock
in
aaa
jl
call
sbb
jl
jge
incl
aas
dec
rcll
cmp
enter
decb
movsl
clc
dec
notb
adc
movl
push
xor
dec
jb
push
jnp
mov
push
mov
and
xchg
sub
cwtl
setg
int
dec
jb
jo
or
lret
inc
cmpsb
jns
xorb
adc
inc
push
cmp
or
test
lea
pop
sub
mov
jb
orb
dec
std
jb
dec
addb
pop
loope
pop
sub
outsb
add
lahf
stos
cmpb
jae
adc
in
xor
in
jg
int
fnsave
or
loopne
andps
pop
mov
movsl
pop
aad
add
jg
es
push
push
or
pop
mov
xchg
xchg
je
int3
ljmp
cmpsl
aad
movsl
dec
and
lods
jae
popf
movsl
ljmp
inc
loopne
pop
in
jecxz
in
std
pop
test
adcb
fwait
and
cmp
imul
cmp
push
dec
lret
add
pop
mov
xor
aad
xchg
push
dec
adc
out
dec
stc
in
pop
pop
xor
dec
fdivrl
ds
lret
lahf
test
loopne
sbb
inc
dec
xor
nop
repz
dec
je
dec
adc
inc
lock
jns
test
out
stos
int3
pop
clc
fs
in
cmpxchg
cmp
push
or
js
loope
popf
loopne
cltd
bound
iret
fisubl
insb
lahf
or
lcall
jl
in
mov
js
pop
mov
loopne
or
movsl
dec
inc
aaa
sub
popl
xor
test
int3
push
test
insb
pop
lcall
out
insl
xor
adc
adc
xor
mov
jle
jge
and
pop
inc
es
insb
add
and
fldt
adc
mov
andb
dec
xor
mov
inc
and
mov
mov
pop
cli
cmp
mov
push
lock
cmp
pop
xor
jl
mov
call
leave
sub
jmp
push
fdivrl
or
outsl
test
and
dec
xor
cmpl
aam
loop
adc
mov
mov
aas
mov
jno
pop
push
mov
ret
xchg
cmp
lcall
and
inc
push
sbb
test
icebp
xchg
orb
shrb
mov
out
dec
pop
iret
mov
sarl
push
push
outsb
mov
cmpsl
rclb
call
and
jbe
jnp
or
xor
es
xor
sbb
and
mov
mov
arpl
sarl
int
mov
lret
sub
je
or
mov
test
outsl
mov
jns
dec
and
loop
mov
adc
jnp
mov
sub
push
and
sbb
xchg
out
movsb
inc
test
pop
mov
or
adc
dec
add
adc
sbb
pop
insl
and
adc
add
adc
fidivs
add
mov
out
mov
jns
push
lods
in
push
pop
add
icebp
jmp
and
daa
popf
arpl
xlat
sub
jmp
popa
or
sub
shll
std
jl
mov
pop
adc
arpl
outsb
mov
mov
push
pushf
das
xchg
or
xchg
int3
imull
and
pop
and
pop
mov
push
add
mov
push
sarb
aam
xchg
ss
inc
into
in
mov
jae
dec
scas
push
ret
pop
in
xlat
jp
and
jmp
inc
cmp
and
push
push
scas
sbb
fiaddl
push
ss
cmp
popa
leave
mov
sub
cmp
or
mov
inc
jl
mov
pop
imul
shll
out
jne
adc
out
add
mov
lock
mov
scas
and
xor
test
and
sbb
call
clc
jae
add
cmpsl
sbb
lods
jecxz
lahf
inc
test
mov
adc
push
iret
out
sbb
mov
insl
rclb
jns
xor
cmpsb
repz
xchg
and
pop
jae
jnp
mov
mov
jl
ds
nop
loope
imul
push
data16
push
data16
jp
aas
xor
adc
xchg
mov
cmp
dec
mov
and
mov
add
popa
sbb
inc
and
mov
xchg
inc
mov
push
int3
add
movsb
sub
inc
les
xor
test
jno
icebp
mov
xor
add
cmp
cmp
cmp
or
pusha
aad
fcoms
or
jge
xchg
or
jo
inc
repnz
or
pusha
iret
sti
cld
cld
dec
push
inc
scas
jno
iret
mov
and
pop
xor
xor
lods
sti
xchg
test
xchg
loope
jle
stos
gs
leave
daa
cmp
cmp
fisttps
loop
enter
jp
sbb
xchg
mov
mov
icebp
test
mov
mov
mov
xchg
push
xchg
dec
popf
and
cmp
xor
and
jne
leave
dec
out
cltd
xor
nop
sub
mov
cli
and
imul
mov
ds
inc
adc
dec
js
mov
mov
loopne
sti
mov
xlat
push
dec
cli
jnp
ja
push
mov
sahf
inc
xor
ffree
mov
dec
mov
mov
fadds
pop
lahf
dec
dec
push
cltd
mov
pop
or
sbb
popf
mov
call
pop
xor
mov
pusha
xor
popf
mov
push
push
lock
ds
imul
mov
mov
aas
xlat
xchg
xchg
jns
xor
push
or
pushf
pop
lods
push
fimull
pop
push
jns
out
bound
mov
pushf
insl
push
xor
mov
jg
data16
jne
mov
xchg
xor
repz
sbbl
pop
jno
inc
inc
gs
mov
mov
cmp
sbb
pop
movsl
rorl
lock
mov
in
mov
dec
cmp
cwtl
add
fdecstp
and
aad
insb
sub
fisubl
adc
push
adc
mov
push
mov
adc
dec
mov
and
push
loopne
mov
jge
rcl
sub
ss
lret
imulb
aas
xlat
jae
dec
repz
pop
dec
test
test
sub
movsb
mov
jbe
mov
xchg
mov
cmc
inc
shlb
sbb
and
cmp
or
test
adc
idivb
xchg
mov
mul
adc
out
mov
sub
jl
arpl
insl
aam
fbld
bound
stos
jno
stos
flds
mov
lret
xor
loope
mull
mov
test
in
aaa
jp
push
jl
mov
mov
sbb
repnz
xor
push
sub
sbb
adc
test
sbb
lahf
mov
fs
push
test
push
inc
ss
or
lret
jnp
lods
fistpll
jmp
daa
inc
outsb
sbb
mov
or
push
std
ret
pusha
fsts
inc
sti
js
fimull
scas
inc
lret
sub
inc
jecxz
outsl
push
ficompl
pop
xor
dec
pusha
pushf
push
mov
ret
add
sub
jo
push
cmpsb
inc
repz
daa
pop
jl
xor
aaa
cmp
js
data16
sbb
sbb
xlat
cmpsl
out
push
or
adc
lahf
leave
xor
roll
out
insl
stos
xorl
or
inc
jl
loope
lock
add
pop
rcl
mov
addr16
std
cld
scas
mov
or
in
outsl
mov
or
insl
pushf
push
out
jp
dec
fidivrs
cli
andl
js
push
push
repnz
pop
pop
sbbb
out
or
int3
imul
jp
loop
sub
adc
jb
cli
mov
inc
into
pop
dec
push
sti
enter
and
push
jns
lret
mov
leave
je
mov
enter
imulb
mov
insb
pop
bound
xchg
cmp
out
fcmovnb
sbb
sbb
add
jae
mov
gs
in
sbb
mov
mov
and
mov
mov
notl
and
add
stos
xchg
fcmove
sahf
mov
push
xchg
ds
repz
setge
fbld
mov
lock
mov
jg
mov
ds
xlat
rorb
mov
or
mov
jg
or
pop
sub
into
jmp
loope
pusha
scas
xor
jmp
clc
insl
jnp
mov
pop
divps
rorl
jae
lret
push
ljmp
in
cmpsb
jecxz
mov
cwtl
sti
jg
dec
dec
mov
xor
rcl
dec
stc
movb
shl
pop
xchg
dec
insl
repz
out
fs
aad
push
or
inc
xchg
jo
jne
add
mov
inc
cs
mov
je
xor
push
mov
jp
ret
lahf
cmc
frstor
mov
inc
ret
cltd
addb
into
mov
inc
push
inc
dec
xchg
push
inc
cmpsl
cmpsl
mov
movsl
mov
xorb
scas
movsl
inc
sarl
stos
js
mov
lods
fmull
dec
push
cmp
out
pop
xchg
mov
jg
adc
push
pop
rorb
rcrb
jg
mov
test
pop
les
jbe
lea
test
sbb
or
pop
aas
mov
sarb
dec
aam
push
pop
sarb
dec
repnz
pop
les
sbb
push
scas
or
cmp
test
xchg
ljmp
test
mov
out
cmpl
stc
jl
and
xchg
jmp
out
popf
push
xchg
push
push
mov
cmp
outsl
pop
xchg
push
or
jecxz
xor
dec
xor
mov
lret
sub
mov
repz
and
clc
jne
shrb
pop
mov
inc
adc
jecxz
fs
mov
mov
push
test
xchg
shll
cmp
xor
cld
ret
add
push
out
gs
xchg
cli
or
add
jns
xor
mov
fwait
push
imul
fwait
inc
pop
int
scas
ret
inc
gs
mov
leave
or
aam
inc
cmc
flds
xchg
push
xchg
xchg
cltd
loope
lods
addr16
ss
lret
cmp
push
aas
cmpsb
scas
push
insb
and
sub
nop
loope
sub
sti
imul
sbb
dec
xchg
in
stos
cltd
nop
and
adc
ljmp
pop
xor
jbe
out
jecxz
imul
or
psllq
mov
push
lahf
outsb
cmp
push
pop
xchg
sub
popf
sub
sbb
scas
shlb
push
loopne
fsubr
or
aad
mov
out
mov
or
lcall
mov
add
out
adc
movsb
xchg
clc
xor
add
mov
lock
xchg
or
aaa
xchg
scas
push
xlat
in
popa
jne
sbb
insl
movsl
fdivrl
fidivl
adc
xchg
push
mov
pop
outsl
adc
sar
leave
and
jbe
aad
push
loop
inc
adc
daa
out
add
jp
adc
int3
lret
xor
repz
mov
fucomip
pusha
cmc
scas
sarl
pop
testl
loopne
sub
adc
inc
roll
in
add
lret
mov
and
mov
or
int3
cmc
pop
arpl
pusha
xchg
jp
jmp
jl
cmp
cmp
add
or
push
sub
xor
mov
orl
and
iret
mov
arpl
pop
mov
hlt
dec
loope
mov
dec
roll
add
jge
fistl
xor
out
jmp
scas
pop
push
dec
xchg
mov
jmp
shrb
jl
inc
loopne
inc
dec
cmp
cmc
icebp
fstl
xchg
cmp
addl
inc
cmp
inc
loope
jecxz
or
push
and
jnp
mov
in
mov
mov
fnstcw
sahf
mov
xor
push
push
daa
test
jp
sbb
call
pop
adc
arpl
daa
jecxz
add
popf
push
popf
inc
mov
push
or
call
jns
cmp
jge
movsl
jge
adc
ds
fistps
mov
repnz
loop
xchg
out
mov
cmp
fnsave
imul
int3
aaa
lods
ret
in
sahf
cwtl
lret
dec
lods
and
lcall
rorl
gs
call
mov
jo
out
out
push
ss
push
dec
xchg
ja
pop
addb
es
cmp
mov
neg
xlat
aas
pushf
adc
adc
in
je
sbb
fisubs
cmpsl
add
outsb
subb
leave
xchg
ret
pusha
inc
daa
rep
in
adc
sbbb
mov
out
jp
push
adc
data16
sbb
add
aaa
cmp
xchg
out
cmp
js
lret
jmp
lcall
enter
ret
in
loop
stos
push
in
call
add
inc
cld
push
mov
or
sbb
je
adc
inc
aaa
rol
movsb
mov
mov
out
xchg
lock
dec
xchg
dec
test
sub
inc
dec
adc
jmp
push
sub
mov
jp
jcxz
flds
xchg
mov
andb
fdivrl
and
ds
xchg
mov
js
dec
push
sub
push
xchg
dec
clc
cli
inc
or
dec
lods
inc
dec
stos
movsb
test
stos
jno
inc
bound
into
or
aaa
pop
inc
loop
inc
dec
inc
mov
popf
ficompl
push
test
sub
cmpsb
jb
push
and
jmp
xchg
in
or
outsb
test
std
lea
outsl
incl
push
fistl
leave
shlb
and
or
mov
xlat
and
xor
xchg
lds
subb
cmp
sbb
lock
xchg
add
inc
test
sbb
repnz
pop
rsm
mov
push
or
ljmp
je
xchg
gs
test
push
jae
sbb
jae
xor
jno
and
or
testb
or
jne
lods
mov
dec
shlb
out
scas
movsb
mov
arpl
test
add
sub
push
dec
xchg
mov
mov
cmp
call
mov
fs
inc
int
push
test
ljmp
sbb
js
inc
pop
cmp
lea
xor
mov
push
dec
or
ret
cs
neg
ss
mov
in
std
jno
dec
sub
xchg
mov
jb
pop
adc
cmp
dec
mov
scas
inc
div
repz
pop
adc
in
fucomip
adc
fucomi
xchg
dec
.byte
