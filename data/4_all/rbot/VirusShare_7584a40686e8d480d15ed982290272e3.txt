mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
insb
mov
jbe
cmp
js
jl
fs
ret
test
sti
push
and
inc
das
jl
dec
push
sti
push
pop
mov
leave
iret
mov
jne
test
mov
stos
mov
mov
ret
mov
stc
sub
pop
dec
fucomip
xchg
sub
xchg
call
push
xchg
dec
and
sbb
mov
lock
sbbl
jnp
daa
push
jno
sub
xchg
popf
repz
inc
mov
rcl
and
mov
push
movsb
mov
sbb
adc
push
and
adc
iret
and
inc
dec
js
mov
test
lcall
pop
lahf
jbe
data16
repnz
adc
cmp
sahf
je
dec
int3
sti
mov
mov
jg
adc
add
inc
imul
jge
in
add
mov
ds
stc
ds
cwtl
enter
sub
es
pop
sbb
adc
push
jl
jmp
scas
mov
bound
fucomp
scas
or
aas
sub
repnz
adc
ja
stos
cmc
in
push
sub
sub
cwtl
mov
in
mov
jo
js
movsb
les
outsb
adc
movsb
sub
add
fistl
pop
xchg
and
xor
pop
lahf
test
shlb
fs
xchg
call
test
push
push
jnp
aas
sub
mov
pusha
unpcklps
mov
mov
ds
push
data16
fbld
pop
ret
and
int
aas
stos
mov
mov
xchg
cwtl
loop
push
lods
jnp
push
add
insb
jne
pop
gs
mov
cmp
push
sbb
pop
repnz
push
inc
and
mov
cmpsb
and
enter
xor
stos
int3
mov
push
nop
mov
ljmp
in
push
mov
popa
stos
arpl
inc
fldl2e
mov
push
into
push
daa
mov
cmpsl
bound
lret
cmp
inc
push
loopne
mov
aas
hlt
ret
dec
mov
pop
imul
add
mov
out
xchg
adc
or
sbb
pusha
cwtl
repz
push
push
stc
cmpsb
fnstenv
cli
mov
inc
test
xchg
rclb
xchg
jmp
fwait
inc
xchg
push
xchg
mov
fdivrl
cmp
push
loopne
lock
and
imul
daa
or
sub
and
aam
mov
insl
jb
push
sbb
jl
adc
xchg
lods
imul
jge
incb
dec
rcll
xchg
std
loop
and
stos
je
mov
in
jmp
in
stos
lcall
or
push
rcrb
inc
pushf
and
aaa
aam
and
and
jae
mov
out
mov
test
push
jmp
and
push
push
mov
jle
mov
mov
pop
imul
lret
leave
int3
clc
jno
sub
sbb
movsb
js
mov
in
cmpsl
stos
xor
ret
pop
mov
loopne
cmpsl
sti
pop
sbb
dec
mov
pop
inc
and
pop
cmp
imul
push
pop
push
test
xor
mov
push
push
mov
xchg
xchg
lea
jecxz
dec
pop
mov
dec
add
jbe
sbbl
inc
adc
mov
mov
cmc
stos
sbb
sbb
adc
xlat
cmp
mov
sbb
loopne
int
sbb
add
fbld
ds
sub
sub
in
dec
imul
rol
leave
dec
fisttps
mov
sbb
jmp
ljmp
push
fimull
xchg
clc
adc
sbb
pop
cmp
sub
or
test
icebp
hlt
in
and
daa
cmp
insb
mov
icebp
push
push
je
mov
les
cmp
sbb
mov
sarl
repz
cmpl
mov
aam
sbb
jmp
cltd
or
cltd
cmp
stos
sub
out
cmp
in
lds
addr16
inc
cs
pop
iret
imul
shl
cwtl
sbb
incb
stos
mov
push
rorl
add
or
call
or
pop
movaps
xchg
rcll
es
inc
mov
arpl
ret
insl
lret
mov
inc
jmp
out
imulb
jbe
jge
roll
dec
add
inc
inc
sbb
in
or
icebp
and
xor
pop
popf
outsl
pop
lods
sarl
shlb
outsl
xchg
inc
jne
push
or
mov
sbb
mov
xor
xchg
push
xor
adc
sbbb
fidivrl
inc
js
insl
dec
inc
cmp
jae
mov
pop
mov
cmpsl
mov
fptan
jb
xorb
dec
sbb
cmc
and
sbb
pop
ret
adc
aas
testl
imul
sahf
add
pop
jno
shrb
inc
in
int
pusha
jle
lods
adc
jg
aaa
xchg
imul
jb
test
stos
or
mov
cmp
push
mov
inc
dec
inc
mov
adc
or
pop
or
nop
aas
aas
rcll
sarb
mov
sbbb
push
cmp
inc
scas
sbb
dec
mov
out
xchg
imul
and
xchg
adc
mov
sub
adc
call
inc
push
pop
inc
test
inc
test
imul
push
insb
or
leave
in
sbb
xlat
mov
fildl
sbb
or
cmp
or
jl
add
cmp
pop
push
daa
push
icebp
mov
clc
into
mov
inc
jbe
sub
cli
dec
xlat
jbe,pn
js
mov
or
lods
push
adc
stos
pop
lea
out
sbbl
dec
sub
popa
adc
cmovbe
iret
sarb
fiaddl
not
xor
push
jp
jecxz
fdivrs
sti
mov
sub
mov
cmp
repnz
jae
in
push
cmpsb
iret
popf
in
cmpsb
and
iret
pop
inc
rcll
inc
psrlw
or
lods
push
dec
call
xchg
jo
xchg
into
stos
xchg
adc
xchg
cmp
lret
leave
and
test
cmpsl
out
push
fisttpl
clc
xchg
in
sar
dec
lret
mov
faddp
xor
test
or
js
cltd
dec
sub
adc
aas
inc
out
iret
ljmp
push
sbbb
lret
inc
in
mov
add
loopne
and
sarl
les
out
sub
xchg
pop
js
adc
std
pusha
push
cltd
sbb
mov
pop
or
push
adc
and
cmpsb
push
adc
pop
cmp
aam
int
ja
hlt
jg
bound
xchg
hlt
push
aad
fildl
rolb
cmp
cmp
pop
push
push
inc
mov
sbb
js
xchg
jo
or
push
lods
push
jbe
ja
sub
leave
test
test
mov
jnp
push
icebp
xchg
lret
jge
add
push
test
fxch
mov
outsl
xchg
or
jno
sbbb
and
mov
dec
adc
inc
push
stc
push
add
push
data16
mov
lcall
icebp
clc
push
loop
cli
dec
cmpsb
aaa
bound
cs
add
mov
rorb
sar
cmpl
adc
adc
sbb
std
into
or
xchg
les
sbb
fdivp
pop
xor
push
sbb
shrl
jbe
out
jns
dec
sub
jbe
pop
pushf
out
xrelease
or
pushf
and
xor
sub
mov
push
cmc
mov
popf
and
add
and
nop
pop
or
data16
lcall
dec
test
push
out
xchg
jge
lret
cmc
sbb
fstl
aaa
sbb
shlb
and
leave
sbb
mov
inc
nop
mov
pop
mov
scas
and
and
es
in
call
push
adc
mov
mov
mov
lods
jle
call
loopne
ja
sub
cltd
adc
add
push
pop
mov
movsb
fidivl
push
jno
xor
divb
lds
sbb
xor
in
jne
mov
das
sub
jae
and
mov
out
stos
add
inc
mov
js
ss
das
jle
pop
xchg
hlt
test
jae
push
mov
test
push
movsb
cli
cltd
mov
int
fs
push
ret
int
out
pushf
sbb
cs
mov
cmpsb
sbb
sbbb
mov
aam
clc
push
push
add
es
movsl
sub
in
enter
mov
iret
push
mov
xor
inc
movsb
and
dec
dec
sbb
jno
sbb
sbb
std
jg
lods
and
add
in
dec
push
sub
mov
fistpll
mov
sub
sbb
adc
stos
clc
and
inc
xor
inc
pushf
sahf
cmp
js
jno
push
jne
jae
lahf
adc
call
mov
push
data16
inc
fsubrl
loopne
sbb
xor
mov
push
insl
mov
mov
lods
std
jne
push
sahf
mov
rorl
inc
subl
mov
repz
add
xchg
jl
clc
mov
lahf
call
jns
mov
leave
jbe
ss
jns
dec
pop
or
aas
arpl
dec
pop
jge
adc
or
mov
loope
jno
xor
loope
xor
mov
sub
sub
ljmp
jns
and
mov
push
xchg
adc
xchg
ret
aam
mov
jo
fsts
inc
push
sub
cmp
sub
orl
mov
sbb
outsl
cld
lahf
loope
mov
push
or
sbb
inc
jnp
jns
or
bound
insb
addl
jnp
add
mov
sub
cmp
jmp
in
adc
xchg
les
push
inc
repz
dec
es
jge
jae
or
pop
inc
pop
inc
addr16
outsl
ficomps
adc
lahf
pop
cmp
or
jmp
xor
cmp
enter
imulb
lods
es
or
xchg
jne
call
adc
cmp
sbb
inc
aas
cli
push
xorl
sub
mov
fcompl
xor
js
xchg
mov
adc
mov
je
mul
jmp
cwtl
cltd
mov
imul
push
ret
sub
clc
aam
lcall
iret
sbb
idiv
xchg
sbb
or
mov
aam
mov
enter
mov
aas
pop
sub
and
xchg
xor
add
mov
fidivrl
mov
pop
cmp
test
fwait
push
lea
mov
rcrl
hlt
fsts
pushf
inc
mov
ret
sub
xlat
cmc
insl
mov
adc
call
sbb
notl
fildl
lcall
clc
das
outsb
sbb
rcll
sub
jns
iret
test
sahf
cmpsl
push
mov
xorb
sub
xchg
rcr
sub
repnz
xor
loop
sub
and
mov
mov
sbb
or
cli
jl
pop
pop
xor
cmpsl
lods
lea
jle
movsl
push
adc
jg
push
cmp
pop
test
mov
in
mov
inc
pop
xlat
lods
rolb
jge
push
xor
adcl
and
loopne
xor
push
sub
mov
into
mov
xchg
jns
inc
rolb
mov
arpl
fwait
push
push
cs
cmp
fadds
mov
aam
loope
dec
lret
hlt
cltd
in
jb
mov
in
mov
adc
aam
inc
dec
movsl
sti
mov
ret
loope
jbe
shlb
mov
dec
loope
push
pop
push
mov
test
subb
sub
sbb
lret
add
mov
cmpsb
and
mov
adcb
mov
jl
adc
fists
cmp
imul
dec
jbe
cmp
lret
int3
cmp
push
and
push
cmp
addb
mov
dec
arpl
jo
pop
cmpsl
imul
sub
jp
mov
dec
xor
push
cli
loop
add
pop
add
sbb
xchg
clc
cmp
out
stc
lds
mov
inc
mov
test
scas
or
out
mov
pushf
fmul
loopne
subb
cli
repnz
addb
int
jo,pt
inc
popa
shlb
jmp
inc
out
adc
cmc
aam
pop
pop
pop
xor
mov
lret
jmp
mov
and
out
xor
test
xor
popf
repnz
das
ja
xchg
add
sub
sahf
cs
inc
add
adc
adc
popf
sarb
sub
or
test
iret
hlt
sub
shrb
jns
mov
movsb
dec
ljmp
or
ljmp
push
pop
mov
movsl
add
jae
push
cwtl
jbe
movsl
inc
imul
dec
mov
adc
jecxz
mov
insl
jl
movsl
and
js
push
xchg
in
mov
enter
mov
add
lret
pop
jno
sub
ror
dec
fldenv
and
vpshaq
or
sbb
das
adc
jp
fwait
push
mov
aam
imul
mov
test
mov
or
fldenv
pop
addr16
int3
mov
xor
dec
dec
sub
dec
mov
push
cltd
arpl
ss
rclb
dec
mov
jg
cli
data16
div
cmp
lahf
mov
xor
cmp
addl
loopne
sub
add
pop
arpl
fidivrl
push
scas
adc
xchg
push
cmpb
es
pusha
lahf
mov
pop
mov
jp
sti
aam
dec
cwtl
push
lahf
nop
mov
or
cli
push
popf
sub
fldt
jno
in
push
add
sub
lret
mov
stos
shlb
sar
arpl
cmp
cwtl
pop
orb
lahf
sub
cmc
mov
int
mov
ds
repz
pop
sub
xor
jecxz
sahf
fmuls
repnz
mov
test
rol
push
jmp
fdivrs
pmaxsw
mov
shlb
or
jnp
sbb
neg
cmp
stos
jecxz
and
lea
lret
shll
sub
cli
jle
or
mov
jbe
imul
lods
inc
test
mov
or
sti
cmpb
sub
ret
nop
push
leave
inc
cmc
and
mov
cmp
repz
and
push
pop
add
mov
jle
add
mov
sti
roll
cmp
jno
out
clc
push
xchg
out
dec
jg
pop
pop
lods
and
cwtl
imul
frstor
adc
testl
mov
test
insl
int3
arpl
lods
add
cmpsb
and
mov
mov
adc
outsb
addr16
jmp
sbb
insb
or
mov
lods
dec
hlt
decl
lea
in
addr16
iret
jmp
aaa
and
call
es
in
ljmp
dec
cmpsl
ret
lea
mov
xlat
leave
out
inc
out
cs
movsl
out
js
add
xchg
xor
mov
push
pusha
adc
repnz
movsl
pop
pop
loope
push
lds
daa
test
int
bound
pop
hlt
add
push
call
pusha
mov
lret
xchg
or
daa
pop
adc
cmpsl
sarl
stos
xchg
adc
sub
shl
cmp
roll
test
fdivrs
into
mov
add
inc
dec
js
sub
jecxz
push
mov
xor
jne
pushl
stc
test
fidivs
fisubl
sti
rolb
and
xchg
cmp
inc
dec
cmp
cmp
xor
in
sub
inc
jo,pn
insb
adc
mov
loopne
in
andb
or
push
insb
adc
lret
jbe
test
cmpsl
jmp
add
mov
pop
sub
clc
fwait
lret
cmp
in
dec
mov
pop
add
es
das
mov
les
loope
leave
inc
pop
inc
ja
xchg
xchg
test
push
out
adc
inc
outsb
mov
inc
add
and
imul
xlat
iret
jecxz
icebp
cld
push
mov
divl
jnp
dec
push
into
cmp
inc
shl
call
mov
inc
xchg
cmp
mov
mov
xor
adc
pop
xchg
jle
jecxz
jmp
inc
mov
mov
pusha
in
xchg
inc
mov
and
mov
movsl
faddl
jae
std
out
aaa
out
fldcw
loope
adc
add
or
clc
jae
mov
int3
loopne
sbb
not
lods
loop
ds
add
in
or
push
dec
icebp
stos
mov
mov
test
std
in
movsl
xchg
fidivrs
std
lods
insl
arpl
ja
jae
fisubrs
xchg
fxch
push
shrb
mov
dec
negl
add
incb
cld
cmp
ja
inc
or
fldt
pushf
inc
add
dec
push
and
xor
popa
aad
cmp
pushf
pop
push
xchg
adc
xlat
mov
stos
mov
in
add
mov
xchg
pop
in
and
popf
sahf
enter
mov
ja
or
mov
mov
daa
jecxz
pop
lahf
loop
mov
mov
cmc
dec
fimull
push
add
clc
xchg
add
mov
ljmp
mov
mov
dec
icebp
cmp
dec
movsb
push
ss
subw
loop
clc
mov
iret
lret
fsub
and
scas
aad
xchg
nop
xchg
adc
js
cmp
lods
mov
xlat
js
fcmovnbe
out
cld
test
popf
adc
xchg
shl
rcrl
cld
xchg
inc
mov
jnp
mov
mov
imul
push
ret
push
jl
es
call
std
jne
inc
lcall
ljmp
scas
push
cmp
mov
push
outsb
lret
add
dec
cmp
shll
xchg
xchg
adc
pusha
xchg
pop
out
jo
ljmp
mov
dec
jns
sbb
xchg
fnstenv
jo
das
leave
repz
pusha
cmp
scas
push
add
cmovne
jb
or
sbb
add
jno
mov
lahf
mov
aad
cmp
imul
rol
fidivs
sub
and
fisttps
jb
adc
nop
lods
adcl
mov
dec
cltd
mov
mov
sbb
add
pop
std
and
adc
iret
das
stos
mov
mov
xchg
inc
fbld
faddl
adc
fcomp
stos
sub
test
or
xchg
jle
adc
popf
sub
pop
mov
dec
pop
sbb
push
test
ss
int3
sbb
scas
je
xor
popa
stos
imul
xchg
enter
mov
xor
in
fdivl
lods
sub
jnp
push
cld
add
mov
xlat
xchg
sub
inc
xor
mov
lcall
mov
sub
adc
push
push
out
insl
insb
and
adc
dec
stos
cmp
mov
jb
sbb
push
adc
push
ficoml
and
fadd
dec
dec
mov
xor
xorl
aaa
dec
jmp
jae
int
in
repnz
ret
out
jge
mov
dec
negb
sbb
stos
scas
add
pop
xchg
dec
movsl
cld
loopne
stos
out
mov
inc
dec
jl
notl
jns
xchg
lahf
mov
push
xchg
and
test
dec
mov
aas
dec
dec
lods
xchg
int3
addr16
adc
sbb
jmp
cmc
call
stc
insb
dec
in
sbb
xchg
int
jmpw
xor
cltd
pop
mov
pop
in
jecxz
cmp
and
stc
xchg
cmp
test
test
push
or
adc
xor
fldcw
pop
gs
fwait
lock
jns
dec
jmp
inc
mov
ret
dec
push
out
out
push
add
mov
ret
in
push
mov
pushf
mov
cmp
inc
mov
sahf
inc
or
decb
sbb
mov
pop
dec
push
popf
in
mov
inc
movsl
xor
aam
sub
mov
insl
in
fwait
hlt
aas
pop
sbb
out
jge
adc
scas
iret
mov
xor
pushf
mov
xchg
mov
fcomps
rcr
cltd
or
lcall
or
leave
out
pop
lret
add
mov
push
cli
ljmp
jge
jbe
lahf
jmp
es
repz
inc
pop
out
or
dec
adc
sub
sub
jp
or
xor
mov
add
sbb
repnz
lods
int3
xchg
adc
pop
mov
rcll
pop
xlat
sbb
lods
adc
repnz
jns
sub
in
jp
sbb
outsl
push
int
xchg
pop
mov
lcall
or
sbbl
bound
dec
je
rorl
loope
add
bound
leave
pop
xchg
inc
shlb
repz
mov
scas
mov
xor
mov
adc
pop
fstl
sbb
in
xchg
and
mov
pop
int3
jbe
mov
cwtl
push
mov
mov
iret
mov
adc
out
push
cld
push
daa
pop
xchg
sub
jb
sub
pop
imul
les
sub
cmpsl
push
addb
add
pop
sbb
jne
pop
rcll
or
and
push
dec
pop
out
bound
mov
shll
aad
addr16
in
cmp
adc
mov
xchg
js
test
rcl
fisttps
sbb
mov
and
ljmp
mov
cld
add
xchg
movsb
or
in
jmp
rol
call
mov
inc
mov
sub
dec
cltd
and
scas
iret
decl
mov
sahf
movsb
sub
push
inc
push
push
insb
xchg
sub
or
js
sahf
mov
or
pop
pop
popa
ja
jbe
cmp
pusha
imul
sub
push
decb
test
cmp
push
mov
jge
cmpsb
sub
hlt
lahf
lret
stos
mov
icebp
fidivs
mov
inc
jmp
dec
pop
push
xor
or
jb
sti
arpl
sub
sub
shlb
inc
loope
adc
loop
push
xchg
xchg
cmp
ja
push
sbb
shl
mov
push
cltd
cmpsb
outsl
aad
cmp
sub
mov
test
jmp
cmc
ror
sbb
and
ss
pop
vpackusdw
mov
mov
test
fwait
add
push
shll
cmpsb
dec
dec
cwtl
and
jo
out
xor
xor
mov
out
imul
dec
sbb
push
mov
jmp
mov
les
add
vpsubusb
mov
sub
repnz
jmp
push
enter
push
shll
pop
and
xchg
jo
notb
push
fistpl
jbe
xor
cmpsb
mov
dec
pop
mov
pusha
daa
push
dec
js
out
ret
popa
or
shll
into
mov
xchg
rcl
notl
mov
fs
jmp
pop
jecxz
sbb
lock
adc
sub
pop
sbb
xchg
jg
jecxz
push
pop
fcomps
xchg
inc
call
scas
mov
inc
data16
jo
mov
mov
movsb
rolb
into
jecxz
shrl
dec
sub
and
fcmovb
inc
and
adc
sahf
inc
dec
sub
push
fistpl
jecxz
sbb
mov
xor
outsl
mov
or
push
xchg
dec
inc
or
sub
arpl
cltd
xlat
call
inc
inc
or
adc
jae
repz
mov
mov
lcall
lret
fnsave
lods
sub
mov
push
lea
out
ljmp
xorl
popa
frstor
out
lods
jnp
loop
mov
and
inc
push
decb
ds
or
pop
mov
sbb
or
push
push
cmp
or
hlt
mov
mov
jle
pop
call
jle
stc
push
lret
mov
insb
push
out
fildl
sbb
mov
mov
xor
je
add
adcl
ret
call
test
mov
pop
inc
fwait
push
rcrl
and
in
xlat
stos
push
rcl
stos
subb
mov
xchg
out
inc
call
xor
ljmp
mov
xchg
mov
sub
outsb
cmpsb
fcom
mov
ss
cltd
mov
pop
pop
insb
in
iret
mov
out
cld
adc
sub
xor
addr16
sbb
cmp
mov
push
push
xor
movl
or
mov
das
cmc
lcall
dec
out
adc
out
mov
in
test
adc
pop
jmp
jnp
out
imull
mov
or
in
stos
je
xor
lds
sbb
inc
cmpsb
subb
or
icebp
inc
push
cmp
add
mov
sub
popf
sbb
cmp
mov
pop
fnstcw
sahf
mov
xor
imul
lods
aam
std
out
jno
cmc
scas
ret
or
xchg
or
fcmovnbe
repnz
cltd
cmpsl
in
jns
and
push
in
xchg
pop
push
jnp
pusha
push
add
cmpsb
in
add
jnp
orl
rcrl
jmp
outsb
cmpsb
pop
mov
and
aas
inc
jne
xor
lods
rclb
aaa
jl
pop
insb
lret
or
setp
cmpb
lea
dec
addr16
mov
push
sub
and
cmp
cmp
inc
and
mov
mov
jne
ds
rcrl
aam
or
adc
enter
cmpsl
and
aas
shrb
push
movsb
lds
mov
xchg
stos
clc
and
add
dec
ds
loopne
pop
jo
pop
sub
sub
dec
push
hlt
xchg
xchg
loopne
cmp
dec
js
add
fdivrs
enter
nop
mov
inc
mov
xchg
adc
aaa
xchg
les
ss
inc
inc
iret
push
cmpl
mov
cmp
test
in
dec
xor
popf
popa
int3
jae
push
test
push
xchg
ret
loop
into
push
mov
in
add
push
push
aad
mov
mov
add
xchg
pop
or
inc
movsb
iret
fisttpl
pop
cli
enter
repz
or
hlt
dec
rcl
aam
mov
jp
repnz
jnp
shll
jno
push
cli
mov
dec
ljmp
pop
and
repnz
cmp
push
outsl
loope
mov
lea
ja
jl
jp
inc
mov
push
xchg
imulb
xchg
and
sbb
pop
xchg
xor
xchg
sbb
pop
dec
hlt
insb
sbb
sarl
sbb
fsubl
fcomps
dec
gs
pop
jne
mov
movsl
dec
mov
sbb
push
dec
mov
out
sbb
in
adc
dec
mov
mov
movsl
scas
jecxz
jne
jns
cmp
xor
dec
jmp
sarl
mov
pop
mov
lock
xor
in
call
mov
mov
adc
es
insb
sub
and
and
aaa
mov
mov
cli
repnz
or
cli
js
jo
mov
cmp
loopne
mov
lret
movl
rol
outsl
ror
lds
loop
stc
shll
leave
mov
dec
jae
lods
push
insb
sahf
sbb
inc
shrl
testb
jp
xchg
add
jne
or
sub
inc
push
mov
push
cmc
mov
mov
call
test
jmp
cmpsl
mov
push
xchg
in
test
dec
add
pushf
out
fistl
rolb
xchg
dec
sarb
popa
jnp
icebp
adc
cli
push
adc
testb
dec
lods
outsl
sarl
xor
js
out
inc
pop
pop
xchg
cmc
in
mov
scas
les
scas
mov
push
bound
push
test
cmp
jle
js
cmp
aaa
data16
call
fnsave
push
push
inc
cmp
adc
pop
sarb
mov
call
jle
out
popf
or
lahf
into
js
ss
mov
repz
mov
inc
xchg
cltd
stos
fcoms
adc
adc
adc
ret
lock
cltd
icebp
sub
mov
test
cld
in
sbb
add
xchg
push
mov
sub
outsl
cmc
stc
shlb
loop
push
sbb
lds
mov
pop
hlt
xor
inc
loope
jmp
les
dec
lahf
call
inc
lahf
mov
push
sub
pop
jle
pop
cltd
stos
mov
xchg
mov
xchg
test
jp
cmp
sti
cmp
test
insb
enter
sub
xor
insb
test
loop
pop
sbb
mov
xchg
leave
call
inc
je
loope
inc
out
or
out
shll
lcall
mov
mov
pop
mov
mov
js
sbbb
sbbl
cmp
xchg
addb
cs
xchg
sahf
imul
icebp
ljmp
pop
xor
pop
mov
dec
adc
imul
and
sub
fnstcw
push
in
fists
inc
fs
adc
add
pop
je
shrl
mov
int
test
insb
sub
jno
cli
mov
mov
inc
jnp
cli
inc
xchg
jecxz
lods
mov
cmp
mov
cmp
dec
ja
js
loope
dec
add
in
mov
lods
mov
pop
cmpsw
scas
or
cmpsb
adc
repz
xchg
pushf
adc
out
shrl
lods
mov
sub
mov
fwait
inc
push
mov
fistpl
repnz
jns
insl
xor
sub
insl
scas
inc
stc
mov
mov
mov
cld
adc
fnstcw
mov
add
enter
outsl
sbb
aad
mov
rclb
imul
lahf
mov
stos
mov
adc
out
sbb
jge
push
into
mov
cmpsb
dec
out
push
mov
cmp
out
push
faddl
rorb
adc
ljmp
xchg
dec
jns
pop
int
ja
movsb
mov
jbe
pop
ja
or
inc
add
sbb
dec
loopne
sub
adc
jp
test
std
mov
fstps
jmp
cltd
lods
sahf
add
mov
shll
adc
or
dec
fsubrl
pushf
outsb
cmp
jp
mov
std
inc
aam
add
ret
stc
fistps
cmp
sahf
adc
xlat
loop
outsl
mov
fisubs
cmp
in
insb
into
add
xlat
mov
and
or
insl
jle
aad
and
push
mov
cmp
clc
lock
gs
add
ret
cmp
and
je
cmp
dec
enter
mov
jmp
dec
cmp
dec
pop
pop
popa
cmp
pop
mov
mov
xorb
ja
jns
sub
sub
mov
jge
adc
pop
mov
cmp
fldl
add
out
push
dec
inc
cld
jg
aad
test
xchg
xchg
mov
scas
dec
imul
mov
lcall
jecxz
jo
push
cmpsb
lds
mov
mov
inc
sbb
jge
add
and
xchg
fcomi
mov
fmuls
pop
imul
cli
bound
insb
mov
dec
and
or
imul
mov
jecxz
cmp
jge
sub
adc
aas
xorb
jo
mov
out
dec
xor
pop
inc
jae
pop
lret
out
mov
xorb
sub
loop
dec
jecxz
dec
mov
test
jmp
push
lret
outsb
push
push
xchg
fcomps
mov
push
inc
stos
pop
jb
orb
aas
push
xlat
sti
adc
movsb
xchg
cmpsb
cmpsb
mov
xlat
or
lahf
lea
cmp
or
cmpsb
loopne
inc
cmp
jo
fdivrs
sahf
push
push
jb
fildl
addr16
out
rorb
sbb
sti
pop
fsubl
rolb
dec
fimuls
adc
pop
adc
cs
fisttps
hlt
ret
aam
cmp
inc
sti
jg
sbb
sbb
push
push
cli
scas
add
pushw
aam
jbe
int
stos
insl
pop
imul
out
sti
cmc
lret
repnz
mov
push
sahf
sbbb
sbb
adcl
ss
dec
xor
sbb
push
jb
testl
and
cmp
mov
das
mov
sbb
add
pop
add
enter
addr16
push
cli
imul
pop
out
dec
stos
sti
jns
hlt
test
mov
xlat
inc
pusha
mov
jae,pt
sub
and
pop
mov
int
mov
mov
jo
and
xchg
mov
mov
xor
lods
je
out
jae
xchg
mov
inc
push
xchg
mov
mov
outsb
ss
cmc
jl
jge
aas
jne
sbb
xor
je
xlat
xchg
inc
add
adc
fildll
pop
xlat
pop
notb
pushf
mov
ja
jmp
pop
adc
mov
in
mov
fldenv
sbb
pusha
push
sub
imul
popf
stos
jns
push
pop
mov
xor
sbb
and
xor
push
jae
outsl
ljmp
mov
jge
push
dec
es
lcall
pop
leave
flds
mov
outsb
dec
push
push
pop
jo
bound
add
scas
sbb
std
lret
adc
push
pop
mov
sub
sub
fmull
int
push
stos
mov
add
adc
outsb
ret
xor
jmp
test
int3
repz
scas
ds
into
cltd
pushf
mov
sub
cmp
pop
dec
dec
and
test
clc
bnd
or
fmuls
aad
inc
sbb
leave
cli
jns
or
ret
fiadds
sbbl
pop
and
inc
addr16
in
jecxz
sub
dec
adc
sbb
fcmovne
push
imul
mov
mov
out
fs
in
push
and
ror
push
cmc
mov
push
push
xor
cld
or
insl
scas
sub
addl
pushf
cmpsl
jne
outsb
cmpsb
pop
mov
ja
movsb
push
pop
lods
xchg
or
jmp
xchg
jbe
test
or
aad
push
xlat
orb
xchg
adc
out
mov
ds
mov
int3
shlb
add
jl
enter
push
enter
in
sbb
std
or
fcmovu
clc
push
addl
mov
mov
cmp
scas
stc
push
popa
aam
inc
and
pop
test
negl
fs
bnd
pop
stos
cwtl
nop
cmc
into
pop
jle
cwtl
mov
lods
rcr
aam
sbb
in
inc
push
sbb
add
bound
jbe
mov
and
std
mov
adc
aaa
jmp
pop
inc
scas
xchg
mov
xchg
out
xchg
dec
dec
pop
mov
adc
repz
add
push
push
mov
sbb
insl
ljmp
inc
stos
lods
lods
lret
push
xor
insl
sub
pusha
xchg
enter
sbb
arpl
or
rcll
stos
jns
xchg
mov
dec
popl
and
in
cs
movsb
scas
scas
jns
in
in
orl
or
or
jae
and
ret
xor
dec
xlat
inc
test
icebp
outsl
pop
xchg
pop
mov
cmp
rorb
sbb
mov
cmp
push
shrl
test
xorps
movsb
cmp
add
scas
inc
add
sbb
das
sbb
pop
push
mov
ret
add
lds
sbb
push
test
test
mov
cltd
lods
fimuls
inc
xor
outsb
fs
fdivr
dec
pop
adc
fidivl
bound
mov
leave
bound
sarl
push
sbb
xor
scas
ds
lock
inc
out
cmpb
mov
int3
sub
push
jnp
dec
xchg
ja
mull
test
push
cmp
outsl
sub
or
ja
notl
push
and
sbb
cltd
jnp
adc
and
pop
testl
popf
xchg
mov
icebp
xor
inc
fs
xor
add
loope
xorb
es
sbb
dec
mov
je
lret
mov
cmp
inc
loopne
aam
mov
push
hlt
xor
popa
jecxz
push
repz
inc
call
sub
hlt
xchg
insb
mov
mov
xadd
lock
stos
adc
cmp
sbb
lcall
xor
pop
popf
neg
xchg
push
xor
lods
mov
movl
push
or
sbb
and
mov
icebp
inc
or
cltd
popf
mov
into
cmp
nop
inc
mov
dec
inc
in
movsb
dec
jl
sub
cmp
pop
mov
inc
sbb
andl
iret
push
cmpsl
jns
ds
movsl
push
jb
arpl
adc
outsb
mov
arpl
ss
fcmovu
stc
cmp
lds
xchg
pop
or
in
and
sbb
pop
push
mov
xchg
rcll
pop
sbb
xlat
mov
movl
sbb
rcr
xchg
fimull
push
addr16
fs
aam
add
or
ds
add
dec
imul
add
gs
es
outsb
mov
or
loopne
ss
je
test
andb
mov
xchg
push
inc
push
lcall
inc
push
sbb
andl
sti
cmp
mov
fdivl
test
sbb
sbb
and
ret
lds
mov
mov
rcrb
cmp
inc
cmc
cmp
jecxz
inc
icebp
push
adc
xchg
add
je
sbb
test
add
testb
adc
leave
cwtl
adc
stos
add
push
sbb
in
jmp
adc
xor
daa
sahf
sar
jle
xor
mov
int
pop
les
or
dec
outsl
cwtl
aas
test
cmp
cmp
lods
jl
lret
xchg
xor
fwait
or
pop
and
push
sub
popa
lahf
stos
xlat
mov
xchg
or
shll
push
lret
pushf
pop
mov
cmp
insl
or
mov
aas
push
jbe
mov
ret
ja
rcrb
pop
mov
insl
jne
jp
in
lods
sti
nop
fimuls
daa
fisubrl
sub
sub
gs
movsl
sub
mov
scas
in
jbe
aam
mov
stos
mov
mov
sbb
xchg
dec
add
arpl
jl
out
push
outsb
push
sbb
in
xor
inc
add
in
stos
adc
add
stos
push
fldenv
sub
pusha
insl
scas
fbstp
aaa
add
dec
cli
dec
mov
push
or
dec
test
idivl
bound
pop
add
mov
cmp
adc
outsl
aas
stc
sub
and
cmp
mov
jp
pop
jp
addr16
bound
mov
add
jo
push
or
lea
inc
pop
clc
and
or
or
into
mov
lret
scas
fiaddl
jbe
ds
outsl
cmp
shl
outsl
xor
add
lods
iret
mov
mov
and
mov
imul
aad
aaa
mov
cmpsl
sub
loopne
scas
mov
stc
test
rorb
pop
add
outsb
pop
mov
pop
add
mov
movsb
cwtl
dec
cmpb
mov
cmpsb
cmc
scas
rorb
ja
out
inc
and
das
outsb
push
xchg
negl
push
cld
or
mov
jno
aad
mov
popa
sbb
mov
call
sub
dec
xchg
das
shr
mov
pop
es
mov
in
repz
mov
fsubs
cmp
enter
repz
xchg
loop
test
jmp
mov
xlat
xchg
adc
xchg
stos
cmp
dec
mov
or
push
in
ret
cmp
ds
mov
mov
dec
hlt
adc
mov
xchg
mov
imul
loopne
testl
insl
mov
pop
push
out
dec
rcrb
test
call
sbb
push
outsb
pop
fisttps
and
push
xchg
ficompl
xchg
cmp
test
mov
ds
or
and
mov
dec
aas
xor
fsubrp
push
and
mov
mov
in
filds
dec
inc
popa
subl
gs
dec
je
lods
xchg
sbbl
cmp
inc
xor
sbbl
clc
dec
shrb
lahf
dec
push
mov
jb
test
inc
pop
cmc
xorl
inc
mov
jle
clc
xor
stos
call
arpl
mov
xchg
aad
or
cmc
outsb
mov
in
adc
lock
sbb
in
cld
or
mov
insl
scas
push
sbb
pushf
push
fldl
inc
inc
vphaddbw
aaa
popf
jecxz
inc
push
pop
lock
xchg
lahf
mov
jae
cmp
mov
mov
cltd
mov
cmp
push
adc
sub
fnstsw
fstps
push
pop
iret
je
test
jno
stc
push
inc
jp
je
lahf
dec
loopne
test
int3
incb
add
dec
mov
push
push
mov
cs
into
ss
sbb
outsb
jno
mov
movsb
lods
adc
lret
gs
mov
mov
mov
test
out
push
mov
inc
mov
cmpsl
in
into
dec
popa
enter
sub
jae
and
fs
pop
jbe
addb
cmp
sub
pusha
mov
xchg
dec
hlt
jl
jnp
xchg
popf
or
jecxz
cmp
mov
or
or
inc
out
int
das
xor
pop
loop
or
sub
lahf
insb
mov
jae
loope
sub
test
imul
sub
loop
push
lds
iret
insb
inc
aas
test
pop
shll
cmpsb
xchg
add
ss
cmp
js
jp
rorb
mov
jmp
faddp
ja
scas
push
ljmp
push
pusha
push
cmpsb
lret
mov
clc
mov
fs
lcall
out
std
xor
mov
jge
cmp
mov
xchg
dec
ljmp
sub
push
push
cli
nop
jmp
ret
aad
mov
das
aas
or
clc
ret
pop
bound
cmp
test
push
daa
sub
js
pop
and
add
and
add
lods
jmp
mov
adc
scas
add
pop
iret
cmpsl
int3
lahf
rcrb
cmp
add
xchg
test
cmp
in
je
loopne
pushf
inc
dec
inc
add
add
out
inc
in
cmpsl
fimuls
test
fnstcw
imul
dec
dec
mov
push
out
insb
cmp
pop
icebp
and
pop
mov
int3
sub
add
pusha
fldl
std
mov
dec
fstps
cmp
pop
pop
cmpsb
clc
je,pn
out
movsl
faddp
push
repnz
inc
mov
mov
xchg
xchg
or
and
push
jge
rorb
loop
cwtl
fwait
ret
lea
int3
aas
je
xor
jo
sub
mov
insb
or
jb
push
add
sarl
rcl
aaa
add
popa
adc
push
xor
sbb
pop
and
fsubl
scas
and
mov
push
mov
and
xor
dec
mov
out
dec
mov
adc
cmpsl
xchg
xchg
sbb
inc
icebp
sub
sub
test
jnp
movsb
mov
pop
shr
xchg
jne
inc
xchg
pop
xor
xchg
pop
cmp
out
test
dec
data16
ljmp
add
popa
fiadds
jb
xchg
enter
push
out
daa
addr16
sub
stc
push
sub
sub
in
xorb
dec
lahf
enter
jne
vpsrad
inc
sbb
mov
daa
outsl
add
shrl
inc
xchg
lcall
jb
sub
pop
loopne,pn
cltd
lods
fidivs
add
xchg
dec
iret
scas
adc
mov
inc
das
mov
repnz
test
ja
pop
sub
pushf
rclb
js
jp
mov
fisubs
mov
repz
shl
sub
mov
sub
das
pop
push
xchg
adc
out
add
cwtl
cltd
mov
push
subl
movb
inc
xchg
mov
into
inc
rcrl
jo
and
in
sbbl
test
sub
push
cmp
pushf
outsl
popf
sbb
cmp
int3
xor
call
scas
mov
decl
ss
adc
pop
fwait
pop
das
stos
add
imul
aas
iret
daa
mov
loopne
movsl
js
insl
adc
orl
imul
adc
pop
repnz
xchg
push
iret
jb
jno
jno
sbb
jb
lahf
dec
imulb
mov
pop
pop
in
push
mov
and
out
and
mov
fcoms
mov
subl
enter
or
cmc
xchg
mov
push
call
imul
xchg
out
xchg
inc
leave
leave
cmp
ds
negb
add
jnp
lods
push
hlt
mov
mov
adc
cld
bound
outsb
push
stc
xchg
sbb
xlat
and
cmp
xor
lret
int3
mov
je
adc
push
ja
orb
mov
mov
mov
push
sub
and
fsts
stos
sub
xor
or
js
sbb
mov
and
call
xor
and
xor
cmp
pop
adc
push
sub
fdivrs
sub
add
cmp
aaa
out
cli
movsl
leave
dec
jns
aas
call
cwtl
sbb
repnz
mov
fadd
inc
or
aad
daa
loope
or
aaa
sbb
rol
lahf
loope
iret
sbb
iret
nop
dec
jns
cwtl
mov
imul
add
xorb
inc
inc
sub
aad
pop
pop
dec
push
pop
lcall
popa
dec
fsubp
xchg
inc
mov
jmp
sar
aad
mov
adc
xor
pop
ljmp
loope
jle
mov
inc
jnp
icebp
ljmp
add
cmp
sub
dec
imul
xchg
inc
cmp
jno
pop
aas
idiv
dec
ljmp
pop
icebp
aam
outsl
xor
jmp
jne
mov
push
jl
add
addr16
xchg
mov
pop
xchg
test
push
loopne
clc
sub
sub
or
cmpsl
idivl
xchg
aam
lcall
ljmp
push
pop
popf
pusha
inc
lods
mov
push
mov
es
and
fcmove
addr16
imul
movsl
sbb
jmp
pop
test
cmp
lock
mov
andl
lret
rcrb
mov
mov
and
sbb
lds
xchg
leave
les
jne
fnstenv
jp
lods
cli
int3
inc
push
inc
das
ljmp
test
dec
or
ljmp
lahf
inc
mov
daa
out
dec
and
pop
pop
arpl
subb
enter
scas
and
dec
sub
dec
inc
xor
ja
icebp
pop
ja
xchg
sbb
test
mov
cmpsb
sub
mov
fisttpll
inc
mov
mov
cltd
std
sub
pop
xchg
pop
mov
cmp
popf
out
dec
add
lea
mov
or
out
xchg
gs
icebp
and
divb
mov
xor
notl
lret
movsb
shrb
dec
xrelease
xor
push
jg
bound
pop
xorb
add
lahf
int
push
notb
mov
out
test
xchg
inc
dec
stos
cmpl
pop
std
mov
sbb
call
mov
call
mov
jp
test
mov
inc
cmc
and
mov
xor
or
movsw
addb
mov
mov
lea
fistpll
mov
ret
fwait
cmpsl
je
imul
je
add
dec
push
dec
ret
sahf
mov
push
lcall
mov
xor
xor
push
pusha
xlat
fst
sub
dec
inc
jle
add
cwtl
sub
insb
jb
ret
mov
push
push
inc
ret
mov
and
fstpl
in
adc
push
jg
sbb
dec
sbb
mov
inc
jns,pt
inc
push
cmp
cmp
inc
shlb
pop
push
mov
xor
test
testb
adc
jg
xchg
push
scas
jmp
or
mov
or
decl
mov
and
enter
cmp
inc
push
scas
jb
cwtl
jmp
mov
jge
inc
pusha
loop
xchg
clc
in
int
fwait
jle
insb
mov
push
mov
aas
push
add
and
dec
and
fwait
test
icebp
sbb
push
addr16
dec
mov
mov
pop
stos
dec
adc
adc
pop
aas
lcall
mov
dec
ret
jecxz
pop
xchg
mov
cwtl
frstor
pop
mov
lea
mov
in
cwtl
inc
mov
jnp
push
out
xor
lcall
scas
leave
ret
and
scas
inc
into
std
xchg
push
pop
ret
cld
inc
mov
leave
pop
push
fisubrl
xorl
in
hlt
lahf
sbb
mov
mov
addr16
mov
and
test
mov
adc
push
and
mov
cmpsl
cmp
add
ret
into
jp
cmp
int
push
adcl
mov
add
mov
cmp
jmp
xchg
jp
sub
mull
shlb
cli
or
mov
push
pop
jne
rcr
jp
mov
aam
neg
add
mull
add
sub
loopne
lahf
inc
dec
or
xchg
cs
xor
adc
inc
and
add
cmpsl
or
stc
mov
aaa
jb
push
inc
pop
and
lahf
push
adc
aad
jle
clc
and
stos
sub
cmc
mov
push
xchg
push
jmp
inc
or
jbe
pop
adc
dec
mov
dec
xchg
sub
jbe
dec
push
mov
and
ljmp
mov
pop
lds
cmp
mov
cs
jnp
call
mov
push
pop
add
cmp
daa
test
and
sub
ja
out
popa
js
jp,pn
ror
in
push
xchg
push
lret
pop
and
add
jg
ljmp
movsl
mov
pop
cltd
cmp
jns
lock
lea
fneni(8087
mov
lret
cli
push
mov
push
cmp
les
rorb
addl
mov
xor
test
mov
pop
scas
ret
pop
outsl
daa
stos
fldlg2
mov
sbb
icebp
or
jp
roll
or
sub
or
roll
rcll
mov
mov
pop
push
mov
mov
addb
leave
lcall
jae
mov
pushf
out
out
gs
sar
fmuls
sbb
aam
mov
lahf
xchg
mov
je
jle
jbe
jns
push
mov
jb
ret
dec
aaa
mov
add
or
xchg
jnp
notl
pop
adc
jbe
cmp
mov
push
add
or
mov
adc
fmuls
and
pop
sub
jae
stc
fnsave
fiaddl
mov
lahf
dec
cltd
or
and
inc
pusha
das
nop
ja
cltd
aas
push
xchg
dec
ljmp
je
rorb
roll
aad
sahf
test
inc
xchg
loop
push
pop
stc
outsl
mov
lcall
aas
jo
inc
rolb
sbb
test
addr16
xchg
cmp
push
pop
mov
out
xor
pop
fmull
and
jp
cmpsl
pop
mov
mov
lret
push
aam
insl
bound
jne
pop
movsb
sub
dec
push
and
sub
pop
xchg
and
int
aaa
adc
pop
mov
mov
loope
nop
adcb
jns
pop
sub
mov
push
stos
fnstsw
sub
pop
sub
mov
mov
jo
inc
sub
sbb
lods
je
sahf
inc
jmp
jne
out
adc
cmp
lea
push
addl
cwtl
jae
jmp
aam
inc
sub
pushf
pop
aas
loopne
insb
in
andb
and
cltd
aam
or
jp
jmp
mov
js
push
js
add
jge
popf
sbb
or
pop
lock
jne
dec
xorl
std
cmp
in
inc
add
xchg
lods
adc
out
mov
inc
fwait
jb
cmc
in
pop
or
sub
dec
rclb
loope
pop
pop
jbe
jp
inc
repnz
test
adc
aas
stos
push
aaa
in
mov
mov
adc
xor
add
or
sub
push
je
lods
sub
mov
pop
jo
outsb
and
arpl
xor
sahf
mov
cmc
icebp
loop
cli
lods
pop
adc
and
in
sbb
mov
cmp
pop
dec
sbb
in
pop
sti
cltd
cmp
shlb
mov
call
movsl
mov
testl
or
js
pop
enter
inc
dec
shr
out
push
lods
popa
mov
jmp
push
shll
lock
nop
push
xchg
in
sub
push
xor
repnz
in
adc
sbb
pop
xchg
in
out
lock
or
sub
fbld
aad
addr16
and
jbe
mov
enter
add
test
aam
adc
push
push
and
and
cmp
mov
or
xlat
sub
lret
repnz
or
pop
and
in
int3
cmpb
inc
xchg
loopne
mov
jmp
insl
dec
ret
xchg
sub
test
aaa
aaa
mov
out
mov
sub
push
mov
cli
imul
and
jo
adcl
inc
shll
lcall
mov
aam
xchg
loop
fsubrs
repz
shrl
clc
sub
mov
rorb
loop
imul
push
pusha
jne
addr16
fisttpll
jbe
ret
add
or
sbb
add
pop
jae
jne
cmp
pop
frstor
jmp
out
cmpsl
not
repz
cmpb
insl
push
rorl
mov
pusha
fldenv
stc
fisubl
mov
mov
insb
push
clc
cwtl
jp
sub
je
icebp
xor
add
aas
mov
stos
sub
sbb
pop
mov
dec
out
xchg
cmp
nop
jp
mov
arpl
sbb
mov
adc
sbb
mov
ficoms
jnp
and
adc
fst
cmpsl
scas
aas
inc
xor
into
inc
and
fidivl
jg
scas
out
cmp
clc
sti
movsl
das
aam
pop
inc
jle
imul
dec
push
sub
xchg
sbb
dec
and
and
push
call
sahf
sub
xchg
fdivrs
nop
dec
jae
push
xchg
or
int
jp
repnz
sbb
jne
dec
cmp
xchg
add
in
mov
xchg
insb
fnstsw
mul
xor
std
add
in
cmp
xor
mov
mov
inc
cmp
cltd
mov
or
xor
aad
inc
inc
dec
into
mov
mov
or
pop
mov
loopne
cld
sbb
insb
les
popa
out
mov
in
incl
aas
nop
xchg
and
xchg
out
in
cmp
imulb
jg
lock
push
dec
mov
cmp
push
notl
gs
fisubrl
outsl
xchg
cltd
fldcw
mov
jg
cltd
inc
xor
jp
push
mov
jno
test
dec
popf
add
stc
lods
mov
out
dec
mov
cmp
push
jno
das
loopne
adc
call
sbbb
cmp
incl
rorb
pop
mov
adc
loop
pop
push
outsb
xlat
inc
adc
inc
sbb
or
sti
ds
out
sbb
aam
sarb
push
pop
fnstcw
mov
sub
push
xor
out
pop
aad
test
xchg
test
fstps
sbb
pop
pop
pusha
int3
adc
pop
out
mov
in
stos
push
push
xchg
jle
cmpsb
pop
jnp
cmpsb
push
mov
lcall
popf
pop
inc
xlat
into
in
fmul
xchg
leave
cmp
sbb
cmp
mov
jno
push
rcll
xchg
lods
leave
push
mov
mov
fs
std
xor
test
jmp
lods
push
push
loop
xchg
cltd
mov
mov
pop
xor
sbb
jnp
add
jns
aad
daa
call
inc
xchg
or
adc
mov
mov
ss
jl
or
outsb
pop
and
rclb
ja
jle
sbb
add
out
iret
lret
add
rcrl
pop
mov
cmp
pop
mov
pop
sub
iret
shrb
jo
lock
jle
push
into
mov
in
xor
adc
clc
cmp
adc
xchg
push
mov
in
fsubrl
mov
mov
push
std
mov
arpl
mov
cltd
push
ds
pushf
mov
mov
jg
daa
scas
sbb
imulb
add
inc
jmp
daa
inc
ljmp
daa
pop
subl
sbbb
mov
lahf
aaa
jl
dec
cs
faddp
hlt
inc
jle
push
fsts
and
pop
and
inc
call
mov
lds
js
push
shll
jo
daa
fimull
push
in
insb
add
push
iret
or
mov
out
sub
add
and
cmpsb
es
data16
sti
or
popf
push
loope
ret
sub
xchg
jb
and
mov
mov
jbe
add
std
push
mov
pop
fnstenv
aas
lods
aas
push
fsubrs
in
and
xchg
pusha
cwtl
stc
jo
mov
fcompl
adc
cmpsl
cwtl
ljmp
sbb
jp
jne
cs
sahf
shrb
adc
and
imul
out
jle
mov
stos
jle
mov
out
xchg
sbb
cmp
idivb
in
fadd
lahf
dec
sub
adc
xor
or
test
clc
out
jp
mov
lea
jne
subl
jmp
cmpsb
xchg
enter
mov
mov
lret
cmpsl
add
jp
hlt
mov
mov
xchg
aam
add
movsb
lock
xchg
out
mov
and
je
fstps
sbb
cli
jp
xchg
dec
sbb
nop
xchg
jmp
xor
inc
pop
in
dec
es
call
imul
jmp
xchg
inc
xlat
or
sub
inc
jp
sbb
jae
mov
sti
push
mov
cmc
pop
pop
push
inc
jle
lret
stc
iret
inc
add
and
es
loopne
sub
pop
insl
popa
scas
or
xlat
cs
insb
out
xor
pop
cmc
pop
and
pcmpgtd
pop
pop
insb
mov
sub
add
clc
cmp
inc
arpl
shl
dec
out
ljmp
ds
popa
push
int
cmpsb
push
sti
pop
lret
sub
sti
sbb
mov
adcl
dec
rcll
mov
add
mov
xlat
sub
in
cld
jno
cmp
stos
sub
pop
ljmp
ret
xchg
daa
xchg
inc
push
pusha
out
xchg
in
subb
insl
xchg
cmp
aad
add
fwait
dec
rolb
push
xchg
mov
daa
jb
mov
jno
mov
out
imul
arpl
jmp
sub
shl
push
lock
pop
cltd
addb
sbb
mov
call
lea
pop
sbb
cld
inc
xchg
lahf
enter
jns
mov
xor
insb
xor
dec
jge
jle
stos
push
push
xchg
stos
in
cmp
xor
sti
int
std
and
cltd
xor
xor
adc
pop
sahf
ss
mov
push
inc
clc
xor
cs
push
shll
cmpsb
stos
fdivp
xchg
paddusb
ret
into
cmpsl
outsb
sub
cmpb
adc
push
dec
xchg
adc
popf
aad
movsl
dec
push
mov
cmc
cmp
js
gs
mov
rolb
pop
loop
lds
loop
push
inc
mov
scas
push
test
adc
mov
dec
jmp
lods
pop
aas
sub
push
and
andl
jns
jae
adc
imul
loope
inc
mull
mov
xchg
sbb
lods
mull
cwtl
mov
in
test
mov
inc
sbb
fwait
sbb
pop
lock
cmp
int
sti
lret
cmpsl
add
aas
cs
mov
and
mov
repz
and
in
ret
mov
push
and
mov
jg
hlt
jmp
outsb
dec
cs
inc
dec
pop
insl
rolb
js
or
cmp
jbe
sbb
in
lahf
dec
orl
fisttpl
add
stos
popa
add
jg
stos
mov
in
popf
nop
jne
add
add
sbbb
push
rclb
dec
shl
fisubrs
xor
popa
lahf
pop
dec
inc
pop
adc
sti
loop
jg
inc
ror
pop
imul
xor
call
popa
hlt
push
add
add
ror
and
push
or
pop
loope
mov
lds
push
movb
xchg
sbb
pop
adc
jmp
pop
movsl
jge
jle
sub
nop
icebp
dec
push
inc
test
arpl
outsb
cmp
sub
ret
sub
jge
mov
push
inc
adc
jo
sub
das
sub
or
fildl
cmp
xor
dec
outsb
mov
sub
loope
int3
sub
data16
mov
imul
xor
lods
out
psllq
pop
add
and
and
cltd
repz
or
xor
rorl
dec
mov
sbb
movsl
dec
sub
push
jbe
pusha
jo
mov
push
xorb
jge
gs
xorb
sub
test
test
lahf
or
and
jmp
push
pop
dec
imul
jbe
loope
add
into
sbb
test
stc
enter
test
or
mov
or
aaa
mov
add
rcll
cmc
shlb
cmp
inc
push
addl
push
shll
sub
inc
mov
pushf
cmp
cmp
cmp
int
mov
mov
fwait
push
jle
sbb
inc
mov
js
in
mov
cmp
into
dec
pop
xlat
jns
lds
jae
lds
mov
mov
push
mov
sub
mov
pusha
packuswb
pop
add
daa
jl
shlb
inc
push
pop
push
jb
add
dec
sub
add
or
mov
push
pop
ja
movsl
cmp
notb
andb
hlt
push
push
inc
sahf
je
clc
or
movsl
fmuls
test
lods
mov
insl
popa
jge
lret
adc
jb
mov
sub
mov
leave
or
jp
rclb
lret
cld
lods
fcomp
and
lret
aas
filds
movsb
les
jo
fcmovnbe
push
cmc
mov
cmp
jmp
inc
cld
xor
imul
cmpsl
fsubp
push
or
mov
daa
ja
out
push
jmp
jecxz
iret
mov
jns
dec
out
sub
mov
inc
cvtps2pi
mov
add
das
sub
stc
call
push
and
pop
imul
and
pop
outsb
fcoms
sti
sub
rcll
ja
mov
mov
hlt
in
add
test
push
xchg
aam
cmp
add
and
mov
arpl
xchg
fwait
add
mov
leave
jno
clc
dec
aad
sar
cmp
sub
add
add
add
cli
insl
ljmp
lret
push
call
outsb
repnz
mov
ds
fsubrl
or
cmpsl
andb
pop
stc
inc
cli
sub
pop
lods
ss
stos
jbe
movsb
adc
adc
xchg
enter
pop
mov
push
pushf
movsb
jb
xlat
push
mov
jp
and
add
sbb
jnp
add
enter
sbb
or
loopne
push
imul
rorl
push
sbb
subb
push
pushl
fists
inc
fs
adc
jb
test
lret
mov
pop
cmpsl
loopne
adc
scas
push
jle
test
mov
push
fdivs
add
mov
mov
pushf
pop
adc
mov
xchg
ds
or
sbb
dec
dec
xchg
mov
insb
enter
fwait
sbb
loop
mov
push
inc
adc
stc
sahf
mov
dec
adc
sbb
push
adc
in
icebp
inc
fchs
cld
pop
insb
outsb
sub
mov
jecxz
xchg
movsbl
dec
xchg
inc
test
push
sbb
fisttpl
and
scas
aam
ficomps
shl
test
jp
sti
fisubrl
mov
pushf
mov
mov
inc
stc
lods
push
divl
jb
sbb
inc
test
pop
mov
dec
test
stos
sahf
cli
add
mov
adc
inc
mov
mov
iret
mulb
int3
push
fcom
fimuls
pop
outsb
lcall
stos
jns
push
jno
rcll
xchg
jns
sub
dec
pop
lods
fnstenv
add
sarl
sub
jo
mov
push
out
or
xchg
loop
xlat
jmp
xchg
xchg
jmp
les
lcall
testb
ret
or
xorb
aam
adc
pop
nop
mov
scas
fcompl
mov
jno
sub
jmp
push
xchg
mov
dec
push
stos
mov
sub
std
xor
icebp
xor
push
fistpl
pop
mov
push
inc
fnstenv
enter
xor
mov
dec
lret
sub
addl
sub
test
mov
xlat
mov
and
jns
mov
mov
and
fwait
in
mov
or
lock
int3
cmp
push
mov
sbb
sub
and
lds
cmpsl
filds
mov
int3
test
out
pushf
stos
mov
nop
dec
jo
inc
ret
mov
addr16
jno
sbb
cmp
sub
flds
fcmovnb
movsl
ficoml
sarl
push
notb
das
sahf
lods
mov
repnz
fldcw
push
enter
mov
movsl
lret
stc
bnd
ret
in
and
sub
int
addr16
sarl
xchg
in
jl
bsr
outsl
enter
pop
lea
mov
movsb
divb
inc
dec
movsb
xchg
or
mov
cmp
xor
cmpsl
mov
sbb
mov
cmpsb
mov
cltd
push
mov
push
add
cmpsl
inc
or
add
adc
in
repz
in
testb
repz
dec
push
int3
push
test
xchg
or
pop
repz
sub
xor
sbb
scas
addl
push
daa
fcoml
fisubrl
add
daa
repnz
ds
mov
jmp
mov
xchg
pushf
push
fdivl
mov
mov
jmp
xor
jp
mov
int
or
jnp
inc
rclb
xchg
js
dec
push
pop
in
cmp
cmpb
mov
xchg
inc
lcall
sbb
loopne
cwtl
lock
nop
sbb
jo
loope
ljmp
sbb
xchg
lds
clc
adc
out
inc
sub
jl
stos
mov
jae
xchg
in
pusha
and
adc
jnp
xchg
mov
stc
cmpsb
jbe
pop
into
mov
inc
sbbb
jmp
or
icebp
test
push
int
add
xor
sub
push
repnz
iret
nop
jae
inc
roll
mov
sbb
test
repnz
or
loopne
or
js
sbb
int
xchg
lret
jmp
add
mov
sub
lret
fiadds
cmc
cltd
xchg
fcmove
sub
imul
rcrb
xchg
xchg
cld
out
stos
cs
test
ljmp
add
stc
sarl
cmp
sahf
sub
enter
xchg
sbb
push
push
xchg
andl
push
fs
hlt
std
fiaddl
cmpsl
sbb
fsubrl
sahf
fisubl
insl
xor
orl
or
aas
xor
push
in
sbb
jecxz
cmp
and
cmpsb
or
sbb
cwtl
jbe
fimuls
push
lret
sbb
inc
sahf
pop
incl
in
gs
daa
mov
fnstenv
hlt
xchg
dec
addr16
fidivrl
adc
loop
mov
frstor
adc
cmp
pop
and
mov
mov
out
xchg
or
addb
mov
pop
lret
lds
pop
jbe
xchg
popa
lds
push
test
sbb
xor
dec
cmp
ja
cmp
out
aad
icebp
adc
mov
sub
mov
jg
xor
in
les
aas
pop
icebp
sub
roll
mov
outsl
out
mov
jbe
lock
xchg
pop
out
lock
stos
jo
movl
loope
mul
pop
mov
pop
inc
into
and
and
cwtl
cmp
adc
inc
test
loope
mov
insl
mov
inc
jmp
lahf
dec
fists
adc
and
sub
leave
dec
lods
stc
or
leave
shrb
push
dec
xorl
cli
out
inc
xchg
xchg
dec
xchg
lret
mov
stos
cmp
cmpsb
fs
test
inc
xor
push
ljmp
mov
cmp
lahf
cmp
jecxz
push
data16
and
and
pop
test
mov
mov
dec
sbb
or
ds
sbb
or
push
loop
insb
dec
mov
mov
lret
imul
lods
es
lret
std
dec
mov
test
pop
xchg
sti
mov
in
lcall
sbb
xor
repnz
in
fdivrl
xchg
out
mov
inc
push
ljmp
ds
xor
cmpb
in
test
enter
movsl
jmp
pop
popf
push
test
jmp
imul
mov
xchg
pop
mov
xchg
push
pop
xor
mov
js
add
call
and
pusha
insl
jne
repnz
cmp
inc
out
jnp
cltd
sbb
insb
sub
cltd
and
xchg
xchg
pop
int3
aaa
aas
incb
mov
push
mov
push
xchg
sub
sub
adc
pop
jbe
sub
lahf
mov
ja
lock
adc
or
xlat
jmp
cmpsb
testl
repnz
sub
adc
pop
rol
lret
push
sbb
and
pmulhw
push
adc
jge
jb
xor
imul
jno
mov
outsb
nop
xor
or
sbb
xchg
dec
adc
or
sbb
repz
pop
inc
jecxz
jne
sub
enter
push
add
dec
pop
adc
gs
sarb
push
push
aad
cld
and
or
push
jno
pop
dec
aaa
mov
mov
xor
ror
addr16
std
mov
pop
xchg
loopne
xor
roll
fmuls
sub
dec
jno
addr16
adc
clc
push
xchg
data16
pop
sbb
jb
jecxz
jo
fcompl
je
dec
xor
out
add
ret
sub
test
cltd
sbb
les
push
lret
out
lret
push
nop
add
fadd
xor
push
ror
inc
add
push
mov
push
push
mov
mov
inc
dec
inc
cwtl
divl
mov
imul
push
es
adc
int3
add
cmp
sub
pop
outsl
out
adc
pop
repnz
push
or
scas
ret
pop
sub
inc
cmp
xchg
add
cmp
lea
pop
pusha
add
addb
and
cmp
into
inc
pop
fsubs
movsb
xchg
dec
inc
repz
icebp
pusha
fnstcw
jge
push
sbb
fnstenv
mov
lret
sbb
mov
pop
loope,pt
xor
push
mov
mov
fnsave
push
fdivs
add
ret
sti
or
sbbb
cmpsb
orb
xor
add
or
sub
sbb
push
loop
fstl
faddl
scas
into
mov
lds
ja
push
cmpl
cmp
jns
jb
hlt
push
lds
jbe
cli
xor
pop
jno
std
jo
dec
bound
negb
and
or
fwait
test
jae
shll
pop
out
das
jne
sub
adc
lret
imul
divl
lds
arpl
and
popa
popa
cmp
loope
stc
stos
xor
pop
andb
cwtl
pop
in
int
cli
imul
jns
cmp
loopne
dec
in
push
shl
das
decb
iret
jne
pusha
je
sbb
lahf
or
scas
push
mov
je
cmpsl
test
mov
lods
test
lret
jecxz
cs
cltd
push
and
insl
dec
and
lock
iret
sbb
sub
and
sbbl
fmuls
test
push
push
jno
hlt
into
repnz
pop
vpackssdw
sbb
or
aad
inc
fidivrl
fistpl
aaa
pop
icebp
jl
and
test
out
leave
stos
arpl
imul
xchg
inc
adc
in
jg
rorl
push
out
test
add
or
adc
cmp
std
adc
push
ljmp
dec
push
fnstenv
ljmp
data16
mov
xchg
cs
inc
dec
dec
lods
xchg
aas
jmp
pop
mov
int
jge
xchg
xchg
in
call
fs
stos
shr
lret
enter
jno
scas
xchg
ret
out
cmp
leave
pop
cmpsl
push
sarl
and
ja
jge
adc
push
std
js
loope
dec
mov
or
popa
and
xlat
hlt
out
or
aaa
mov
jg
cltd
lcall
cwtl
rcll
adc
clc
aas
adc
pop
jne
inc
inc
push
cmp
dec
pop
decl
add
mov
push
push
add
xor
sti
stc
or
cmp
in
imul
xor
ja
jo
xchg
add
mov
inc
dec
in
jle
cmp
jno
and
out
add
repnz
sti
test
mov
sbb
pop
and
popa
sbb
jo
ret
or
gs
or
jmp
enter
inc
mov
push
movsl
mov
jnp
xchg
loope
and
mov
xor
lcall
xchg
cmpsl
pop
cltd
sahf
inc
ss
mov
push
faddl
leave
mov
mov
adc
cmp
lods
mov
xchg
jno
stos
div
or
sbb
mov
or
ret
ret
imul
roll
loop
cmpb
es
inc
aaa
add
inc
lcall
inc
cmp
xchg
push
jge
cld
fisubl
lret
and
xor
shll
inc
cmp
mov
push
aad
aam
in
sbb
cwtl
aad
mov
mov
adc
lods
sub
cmp
dec
xchg
cmp
cmp
xorb
fstpt
pminub
iret
icebp
sbb
cs
lods
mov
mov
fdivrl
push
pop
cmpsb
sub
addr16
lcall
push
pushl
cmp
xchg
xchg
aad
pshufw
jmp
rcrl
cli
mov
loope
cmp
xor
push
clc
ja
pop
sub
enter
dec
ja
lahf
shll
gs
leave
cmp
cmp
in
adc
insb
out
fstl
imul
and
mov
cwtl
cmp
rclb
pop
or
or
divl
xchg
dec
jne
adcb
lcall
jp
push
xor
sub
jne
cli
mov
inc
lods
mov
push
loop
stos
jl
aas
aaa
leave
fs
cltd
rcll
jmp
fisubrs
add
cmpsb
xchg
je
int3
fists
repz
insb
xor
xchg
mov
or
fdiv
or
rorb
mov
pop
loop
outsb
push
jbe
add
pushf
nop
dec
imul
mov
fnstenv
mov
xchg
jno
xchg
mov
stos
shll
enter
repnz
push
pusha
mov
inc
rcll
data16
test
inc
cmp
sti
and
or
fwait
mov
sbb
aaa
add
lret
and
cmp
stos
mov
mov
cmp
jb
cmp
cltd
dec
icebp
sahf
loop
cmp
test
je
push
int
test
and
scas
bnd
stc
sti
jns
test
jbe
sub
inc
mov
test
adc
stos
pop
jbe
jmp
mov
mov
sub
dec
movb
sar
jmp
in
incl
scas
or
mov
xor
fnsave
rcrb
jns
test
fisttpll
push
pop
xor
into
andl
cmp
std
loope
jne
aas
in
push
sub
sbb
inc
add
sub
or
into
cmp
int
out
in
test
sbb
xchg
pop
divb
fdivs
lods
lds
mov
pusha
mov
adc
sub
xchg
ss
les
je
adc
fs
sbb
add
xchg
call
lret
cmp
loope
sub
mov
int
andb
stos
mov
aam
cmp
mov
in
adc
fwait
sti
es
nop
es
shrb
rorl
cmp
hlt
in
test
aas
sahf
inc
or
in
xchg
inc
cmp
push
sbb
faddl
fnstcw
adc
push
test
repz
sarb
pop
mov
adc
cmp
mov
popf
ds
rcrb
outsb
fldl
push
outsb
fsubl
add
xchg
cmp
xchg
loope
jnp
and
push
xlat
js
std
sub
mov
mov
test
push
sbbl
cmpsl
mov
andb
out
imul
push
or
flds
cmp
iret
stos
ret
mov
cmpsl
dec
lahf
xchg
jae
cmp
pop
cld
jnp
xor
mov
ficoml
jp
jns
xlat
ljmp
insb
arpl
int3
xor
mov
mov
sbb
cmpsb
aam
push
adc
fdivs
mov
jg
jecxz
aad
inc
dec
jne
push
daa
adc
mov
jbe
fiaddl
mov
popf
fcmovnbe
cs
icebp
std
pop
fstpt
sub
mov
mov
adcb
sub
adc
adc
or
rcrb
dec
lea
fldl
cmpsb
xchg
mov
pop
fiaddl
rorl
idivl
jno
sti
jg
mov
jnp
fistpll
ds
xchg
fwait
sbb
add
add
sub
ja
cld
repnz
addb
mov
push
jl
mov
or
aas
out
jl
push
jg
cmp
data16
mov
pop
in
out
mov
dec
add
repz
aas
push
daa
outsl
mov
leave
bound
lret
xchg
ret
bound
enter
lds
mov
into
sbb
ss
inc
stos
jns
out
push
aam
hlt
mov
test
scas
loopne
pop
stos
xchg
push
fldl
cmp
adc
add
inc
call
std
push
or
call
imull
adc
aam
push
shr
adc
mov
cltd
pop
pop
xchg
pop
aas
jle
push
lret
xchg
into
sbb
mov
lea
xchg
cmp
cwtl
mov
xchg
jb
roll
inc
rcrl
and
fisubrs
aaa
jecxz
mov
pop
dec
frndint
cmpsl
xchg
inc
negl
cmp
inc
adc
xchg
fadds
in
push
adc
sub
repz
or
xor
imulb
fildl
inc
imul
pop
mov
xchg
push
mov
xchg
lahf
or
inc
adc
shlb
ds
mov
shll
pop
mov
pop
inc
pop
push
dec
lret
das
mov
xchg
xchg
mov
sbb
mov
lock
push
push
lahf
shll
jb
imul
mov
jae
lret
fnstenv
aad
dec
gs
push
test
and
sbb
in
cltd
stos
push
cmc
inc
jl
push
aam
lods
add
cmpsb
mov
push
inc
fdivrp
sahf
cmpsl
roll
mov
xchg
push
pusha
cwtl
lods
cmp
xor
or
addr16
scas
xchg
sbb
sub
sbb
arpl
std
pushfw
xor
inc
xchg
fisttpll
push
jle
push
or
or
pop
sub
mov
mov
sahf
add
shlb
fdivrs
add
lret
std
push
xchg
sahf
xlat
jmp
jl
ja
sub
ja
ds
push
fists
dec
cmp
cltd
mov
out
pusha
js
fbstp
imul
jae
into
jg
or
xor
out
leave
pop
frstor
sbb
xor
xor
or
mov
sub
int
dec
aaa
or
out
out
jo
cs
fimull
xchg
fdivrl
jb
mov
sub
xor
push
or
sub
or
jno
leave
ret
xor
fsubl
les
sbb
sahf
mov
fisubrl
jge
sbb
pushf
enter
inc
cli
or
adcb
mov
faddl
popa
dec
test
cwtl
inc
pop
adc
xchg
and
aad
xor
cli
lcall
sahf
sub
push
iret
push
cmpsb
xchg
xchg
nop
test
mov
inc
pop
jmp
js
sahf
dec
jnp
aam
imul
xchg
mov
push
mov
stos
aad
mov
and
shrl
repz
mov
aas
pop
add
sbb
cmpsl
stc
inc
mov
cmpsb
std
addb
push
cmp
pusha
sbb
out
enter
imul
inc
mov
or
push
cmp
pop
mull
lock
pop
dec
cmp
shrl
shrl
gs
sahf
inc
mov
adc
sub
mov
sti
mov
mov
lret
sahf
mov
int
insb
inc
dec
adc
je
inc
push
cmp
pop
xor
and
pop
aam
sbb
push
iret
push
push
out
mov
mov
arpl
jbe
sahf
mov
push
xorb
icebp
push
xor
popa
xor
mov
pop
test
push
aad
ja
adc
dec
jp
cmp
aas
pop
pop
adcl
icebp
cmp
sbb
inc
lcall
mov
loopne
pop
push
adc
or
and
inc
addr16
lock
cwtl
ljmp
push
das
jg
jg
ds
jo
in
adc
aaa
adc
cmp
lds
pop
into
xor
stc
fisubrl
inc
aam
adc
mov
rorb
mov
mov
pop
xor
xor
jmp
pop
adc
mov
mov
sbb
out
and
out
adc
loopne
add
je
popf
fidivl
sbb
jbe
xchg
pop
fnsave
test
pushf
jns
push
lods
mov
js
dec
or
loopne
mull
loop
ret
cmp
inc
pop
add
push
negl
popf
xchg
pop
int3
std
sbb
leave
mov
pop
mov
add
hlt
testb
jns
push
repnz
aad
in
idivl
adc
filds
inc
fs
and
iret
push
inc
adc
test
dec
ja
adc
in
xor
pop
gs
push
mov
gs
and
sub
fstps
test
mov
mov
mov
ljmp
mov
mov
aam
mov
nop
repnz
addr16
int3
pop
push
nop
pop
aam
mov
in
aaa
sub
mov
pop
mov
sub
or
js
sarl
xor
and
inc
xchg
cmpsb
xorl
hlt
xchg
cmc
outsl
xor
ds
bound
test
std
lods
jb
ds
mov
mov
jnp
xchg
or
pop
inc
jns
push
in
fdivrs
ret
les
or
and
xchg
sbb
jmp
movsb
xor
out
loope
aam
cmp
arpl
fimuls
outsl
push
sub
ret
cmp
and
push
push
lods
fdivs
movsb
adc
xchg
sti
adc
push
xor
dec
cmpsl
negb
xchg
testl
out
jns
test
push
jae
scas
out
mov
mov
mov
or
lods
cli
insb
je
mov
aad
xor
push
jl
cli
ffreep
mov
nop
fbld
gs
sbb
and
cmp
outsl
rcrl
adc
pop
dec
xchg
sbb
lock
jo
dec
addr16
lea
leave
push
mov
xchg
add
test
or
insb
jl
push
lock
sbb
mov
sbb
xor
xchg
sub
dec
cmp
jb
jns
push
dec
in
fnsave
and
bound
pop
and
add
lock
pop
jbe
jnp
mov
xor
push
adc
cmp
jmp
movsb
mov
sbb
push
inc
aas
cmpsl
or
add
add
andl
stc
aad
lcall
enter
pop
outsl
or
xchg
sbb
lea
in
dec
xchg
ret
das
mov
sbb
jo
sbb
sub
fmuls
pop
jo
nop
in
add
push
notl
and
push
or
mov
mov
inc
lcall
aaa
jl
clc
mov
cmp
xchg
bound
or
adc
xchg
scas
add
xor
enter
xlat
movl
jns
ret
xchg
mov
popa
clc
fisubs
mov
fimull
add
repnz
lahf
push
fsubrl
movsb
test
adc
ret
loope
bnd
mov
aam
das
ja
nop
iret
rorl
pop
lods
or
outsb
pushf
test
mov
cmc
ret
adc
out
orl
inc
clc
xor
stos
push
lods
push
push
xor
sub
aad
mov
jnp
or
cs
fwait
push
mov
jp,pn
xor
mov
add
sar
and
push
mov
fsubr
arpl
insl
or
shll
or
mov
fbstp
es
jb
std
mov
jl
pop
in
mov
adc
cmp
lret
imul
mov
int3
cmpsb
mov
addr16
inc
cs
xchg
jae
mov
dec
jno
and
jo
add
xor
push
sbb
roll
rclb
xchg
stc
cld
mov
in
push
sbb
jecxz
aaa
mov
push
rorb
incb
pop
aas
push
mov
fadd
pop
mov
or
pop
arpl
pop
js
pop
rorb
xor
pop
fmuls
lods
leave
cmpsb
add
mov
in
inc
out
aaa
js
pop
iret
mov
jecxz
or
lret
repz
loope
dec
mov
cli
fs
push
cmpsl
test
addb
mov
call
int
push
lahf
mov
mov
sub
mov
pop
mov
sub
pushl
icebp
xchg
xchg
in
xor
pop
push
jp
jb
inc
push
push
jbe
mov
push
jge
lock
popa
push
dec
inc
loope
xchg
jns
mov
mov
push
call
add
pop
mov
inc
into
adc
mulb
xchg
in
mov
mov
push
repnz
cmp
add
fisubl
rcrl
fstps
rol
int3
push
div
into
adc
fidivs
xlat
xor
push
or
daa
loop
push
sub
push
stc
push
rolb
mov
cmpsl
sbb
sbb
gs
jmp
mov
mov
rcrb
sbb
je
mov
sbb
xor
lcall
pop
dec
rclb
into
daa
mov
inc
sub
out
pop
xchg
push
scas
inc
test
push
inc
push
xlat
loop
xorb
push
sbb
adc
imul
push
clc
pop
mov
cmp
xlat
mov
je
push
in
add
pop
stos
inc
xchg
sbb
push
add
cmp
ss
or
fistpl
jbe
or
mov
xchg
push
or
and
das
repnz
push
adc
ret
test
lret
push
int
nop
sbb
and
sub
push
dec
pop
pop
inc
scas
dec
js
or
inc
adc
adc
cmp
repz
jne
fcompl
fwait
cmc
push
shrl
pop
xor
jp
pop
mov
sub
xlat
loopne
cmpsl
les
fs
bound
out
cmpsb
xchg
stos
cmp
andb
popa
push
or
enter
fistps
jae
xor
push
movsb
dec
jp
rorl
dec
cwtl
popa
sbb
sub
sub
add
in
mov
lret
out
insl
sbb
ds
rolb
mov
push
sbb
add
pop
add
dec
fdivrl
in
aas
mov
mov
les
fdivrp
push
mov
push
in
cltd
jb
lea
lret
nop
pop
fs
push
push
dec
fdivrs
add
int
dec
add
iret
inc
fnstsw
xor
stc
cltd
fldl
clc
rol
dec
insb
test
stc
mov
pop
sbb
out
aam
xlat
pop
outsb
adc
dec
mov
loop
add
jecxz
or
lret
enter
icebp
mov
mov
and
mov
push
arpl
add
and
add
push
les
push
mov
nop
mov
clc
sbb
lods
fsubrl
jo
popa
mov
xor
pop
add
notb
xor
pop
test
jne
test
jg
add
dec
rcrb
mov
mov
loope
ret
leave
xchg
ds
pop
or
in
add
mov
sbb
mov
stos
push
cwtl
hlt
push
add
mov
fidivrl
and
cld
or
jg
mov
add
xor
sub
sbb
pop
cmp
imul
or
repz
movsl
or
push
aam
cmp
xlat
push
loope
mov
cmp
lcall
movl
mov
cld
inc
sub
dec
mov
and
repz
fildl
pop
test
test
mov
fmuls
ror
mov
loop
fstpt
jl
lret
mov
mov
hlt
pop
aad
mov
xor
cmp
mov
es
and
xchg
jne
add
mov
aam
pop
cltd
or
jb
loop
aam
sub
aaa
aad
push
out
aaa
and
adc
scas
sbb
push
std
fstp
jbe
mov
popa
pushf
xchg
sub
loop
jecxz
jge
inc
inc
mov
inc
push
out
mov
inc
dec
enter
push
adc
sbb
jo
inc
xchg
int
or
or
stos
lret
in
cmp
lods
dec
pusha
pop
int
fld
add
jmp
adc
sbb
pop
test
in
mov
inc
add
or
jnp
dec
rol
mov
xchg
mov
scas
mov
cwtl
sbb
dec
xchg
scas
xlat
pushf
rorl
mov
lock
sbb
or
mov
add
movsb
and
jo
loope
inc
xor
pop
daa
pusha
push
and
mov
xchg
mov
jo
pop
insl
mov
mov
jae
and
xor
pushf
xchg
mov
cwtl
cmp
jae
pushf
cmp
imul
cld
push
xchg
aas
bnd
mov
shrb
jo
mov
int3
mov
popf
mov
stos
add
pop
sbb
and
sbb
push
jge
fs
or
pop
enter
pop
mov
dec
aaa
xor
inc
ss
dec
jmp
clc
in
aas
fists
pop
test
test
jle
mov
rcrb
in
or
jbe
sbb
xchg
jl
aas
pop
jne
aam
jg
lret
test
mov
dec
push
cmpsl
loop
fmull
orl
lea
andl
addr16
sbb
fs
inc
xor
movsb
cld
xor
push
nop
xadd
aas
mov
into
dec
pop
inc
mov
cld
int3
jmp
das
out
mov
je
jmp
adc
sahf
mov
or
sbb
sub
mov
cwtl
pop
sbb
sub
xchg
orl
adc
cwtl
lret
and
sub
cmp
jae
or
xor
dec
mov
scas
or
adc
push
mov
std
mov
dec
ret
push
cli
popf
mov
push
inc
push
xlat
icebp
add
mov
xor
mov
lcall
or
adc
icebp
lret
repz
rcrb
repnz
test
sti
xchg
jge
out
or
and
sbb
dec
or
pop
cs
and
xchg
lods
sarb
ja
int
call
ss
pusha
or
jle
sahf
aad
lret
popa
lds
and
adc
inc
enter
cmp
hlt
xor
sbb
push
imul
fldl
push
into
in
jecxz
in
push
add
int3
jg
fcmovbe
mov
imul
mov
mov
out
sbb
adc
pop
lahf
push
out
xor
test
out
mov
jns
xchg
mov
add
mov
add
ret
adc
bound
imul
pushf
xor
fmull
test
mov
sub
jecxz
sbb
pop
shll
cmp
or
loopne
sbb
jae
mov
sbb
repz
loope
fiadds
sbb
or
mov
jle
test
sbb
mov
adc
fcomp
cmp
cwtl
sbb
sbb
and
enter
xchg
in
stc
sub
or
mov
pop
ret
sbb
repnz
and
push
popa
adc
and
xor
push
aaa
sarb
mov
xchg
lock
lret
mov
xchg
fidivl
sbb
test
sbb
jnp
lahf
mov
mov
jbe
cli
add
dec
lock
xchg
pop
je
mov
or
iret
jmp
jl
dec
movsl
or
pop
mov
jbe
sti
je
icebp
jmp
jle
mov
dec
repnz
in
imul
push
xor
cmpsb
nop
sbb
lret
mov
pop
in
cmova
scas
sbb
vmovupd
mov
ljmp
mov
dec
xchg
jmp
outsl
cltd
and
xchg
cmpsb
mov
lcall
push
jecxz
xchg
sub
fucomi
dec
les
pushf
mov
addr16
test
and
cli
scas
loopne
and
inc
mov
or
xchg
or
pop
mov
adc
ss
push
xor
inc
sbb
js
mov
push
mov
or
rcr
mov
loop
jecxz
shll
xlat
mov
xorl
pop
cmp
adc
push
out
jg
jae
loop
jae
stos
ficompl
pop
mov
mov
fcomip
pop
pop
iret
aad
add
clc
mov
dec
adc
add
push
in
and
push
pop
stos
jge
or
jg
fwait
aaa
clc
lcall
fdivs
imul
push
or
out
xchg
les
aad
mov
test
mov
lahf
int3
inc
cwtl
leave
dec
pop
lahf
sbb
and
movsb
shll
in
arpl
jle
out
mov
cmp
cmc
push
adc
sbb
scas
sahf
mov
and
call
aas
pusha
jecxz
insl
stos
mov
push
stc
cmpsl
fimuls
sbb
jns
test
jnp
lds
jno
dec
adc
addl
mov
repz
pop
xorl
mov
lods
mov
push
xor
cmpsl
cltd
lcall
mov
sub
test
jno
inc
xor
repnz
pop
mov
aad
loopne
inc
fstl
inc
test
pop
scas
scas
into
jg
popa
cmp
movl
out
movntq
test
fsubl
stos
subb
pop
or
inc
jo
sbb
add
xchg
cld
push
lret
ljmp
xchg
repz
or
into
insl
add
mov
cmp
lret
mov
mov
pop
push
out
push
stos
adc
lret
mov
mov
jbe
test
test
xchg
mov
call
xchg
inc
mov
test
aaa
fists
push
not
xchg
jle
fdivp
jp
or
xchg
push
out
fmuls
les
mov
and
push
rcl
sbb
cmp
add
popa
push
jb
jnp
mov
push
sti
push
xchg
cmp
mov
dec
inc
sub
ja
test
cs
jp
push
fs
cltd
jb
out
cmp
push
daa
jl
repz
inc
dec
jecxz
daa
jl
arpl
sub
ret
hlt
daa
push
and
hlt
in
in
add
cmp
dec
ljmp
js
or
and
add
mov
stos
gs
mov
inc
dec
dec
les
enter
sbb
bnd
out
adc
mov
popa
lods
pop
mov
mov
das
and
fldcw
into
sub
jo
std
push
dec
cmp
and
xor
repnz
sbb
push
sub
sbb
xor
add
or
and
les
push
sarl
lock
dec
ss
mov
xchg
insl
and
or
and
sub
int3
add
mov
mov
xor
jns
out
adc
insb
dec
fwait
xchg
push
pop
push
mov
or
leave
stc
rcrb
fisubl
push
sti
mov
lds
mov
mov
mov
sub
ret
and
dec
insb
out
jl
xchg
mov
inc
or
insb
jnp
add
loope
loop
pop
es
xchg
push
pop
sub
in
push
in
std
ret
fnstenv
in
mov
xchg
push
cmpsb
sub
jmp
adc
mov
xchg
filds
aam
iret
xchg
ss
dec
dec
adcl
pushf
inc
xor
xor
pop
lea
or
inc
sbb
aad
scas
xchg
push
das
inc
lahf
sub
adc
jle
xlat
fidivrs
mov
mov
sbb
sub
addr16
cmp
push
pushf
loopne
nop
ds
xchg
sub
pop
stos
imul
mov
and
mov
jle
push
gs
loopne
mov
stos
cwtl
push
lods
les
sti
sbb
fcomps
loop
fs
adc
lcall
pop
gs
negl
mov
jmp
mov
xchg
enter
jne
pusha
mov
loope
cmpsb
mov
data16
insl
loope
sarb
xchg
fcomps
stc
dec
inc
mov
lret
in
sub
lret
arpl
push
adc
stos
shlb
xchg
test
rorl
mov
inc
adc
mov
movsb
jmp
scas
lods
and
sbb
pushf
sahf
mov
or
cmp
std
xchg
dec
out
xor
push
cmp
ljmp
jns
aad
sub
sub
push
imul
test
inc
lcall
push
mov
push
sub
popa
mov
movsl
cmpb
fstl
add
and
iret
aad
lock
shlb
sbb
mov
cmp
cs
push
or
push
andl
sub
push
repnz
aas
add
andl
stos
add
xor
mov
cmc
and
inc
pop
cmp
jo
mov
adc
jecxz
mov
roll
sbb
or
push
sti
movsl
scas
je
pop
pop
adc
cli
mov
out
imul
insb
xlat
and
int
xchg
xchg
scas
outsl
imul
dec
jbe
insl
sub
xchg
fmull
pushf
fistpl
mov
in
in
pop
hlt
pusha
js
inc
or
jle
jmp
jb
xchg
shlb
mov
and
fs
pop
xor
cmpsb
in
nop
enter
gs
sarl
popf
ja
jb
xlat
sbb
jb
push
inc
out
pushf
loop
enter
mov
ja
ret
and
loop
icebp
hlt
lret
in
push
sahf
lret
hlt
vpsubusw
je
xor
push
outsb
pop
jne
mov
jae
into
mov
mov
es
arpl
push
in
adc
pop
jno
cmp
loopne
sub
cmp
stos
push
stos
xchg
lock
xchg
add
in
lcall
adc
test
xor
mov
aaa
mov
or
lahf
cmp
negl
push
shrb
lds
clc
int3
pop
mov
ljmp
repz
mov
dec
call
or
divb
dec
xor
daa
cmp
aad
lock
movsl
arpl
loopne
or
loop
ja
clc
shrl
andb
pop
xor
mov
pop
fimuls
pop
aaa
das
push
inc
add
lcall
mov
icebp
cmp
xor
fmull
popa
sbb
sub
push
fs
adc
sar
and
sahf
insb
xorl
sbb
aas
jg
adc
cld
push
rcll
mov
inc
adc
inc
ljmp
scas
jl
lds
cmpsl
ss
out
pop
push
push
mov
sti
fcomps
iret
jnp
sub
int3
bndldx
fisttpl
mov
sub
cmpl
cmpsl
fdivl
daa
sbbl
or
inc
shl
int
adc
add
dec
pop
jg
data16
push
loope
mov
stos
mov
pushf
and
dec
inc
call
ds
stos
ds
add
sbb
pop
jnp
mov
cli
push
fildll
in
outsl
xor
gs
mov
movsl
and
ljmp
xchg
lahf
daa
push
ror
and
jne
mov
pop
mov
ds
add
xchg
pusha
repnz
sbb
fdivs
mov
stos
lods
cltd
add
jle
push
mov
mov
fisttpl
xchg
jp
je
lret
fsubrl
xchg
adc
out
insb
fcoms
mov
imull
ja
lods
xchg
sarl
dec
add
stc
sub
nop
in
push
cs
mov
cmpsb
push
fwait
cmpsb
in
cmp
ret
adc
es
popa
inc
aaa
add
insb
xchg
lea
xchg
rcrb
sub
cmpsb
push
cmp
lds
and
push
mov
lret
push
or
xchg
aam
popf
pop
cmp
lret
cmp
mov
sbb
out
xor
clc
or
test
mov
lea
jne
jmp
and
push
int3
es
int3
test
add
mov
mov
in
sub
or
pop
cwtl
add
jno
outsb
adcl
dec
mov
jl
xchg
inc
insb
lret
inc
insb
pop
xor
cmpb
adc
push
dec
inc
cld
shl
ds
mov
rol
or
pop
fucomi
test
dec
hlt
xchg
sbb
jge
loop
divb
testb
mov
push
xchg
xchg
daa
fldt
jmp
repnz
push
rorb
mov
aaa
iret
movsb
jmp
pop
push
xchg
ljmp
jl
iret
xor
ret
je
push
sti
push
or
xchg
sarl
shl
je
dec
xchg
and
movb
ficomps
addr16
rcll
test
hlt
cmpsb
cltd
add
iret
in
dec
rcrl
and
mov
add
in
pushf
push
fwait
push
inc
cld
jg
cmpsb
hlt
andl
add
in
inc
cwtl
adc
iret
cld
rorl
mov
ficoms
ret
push
loope
pop
out
pop
push
mov
repz
dec
or
out
test
push
mov
mov
pop
add
pop
jo
in
pop
dec
roll
or
sti
addl
add
fwait
std
ficomps
inc
jne
xchg
cltd
jb
cmp
jno
sbbl
push
pop
pop
subl
xor
nop
aas
xchg
dec
cli
xor
shlb
les
inc
cmp
scas
adc
mov
imul
xorb
mov
fwait
aad
inc
rorl
cmp
cmc
enter
sbb
out
inc
jbe
dec
divb
jae
test
out
fs
push
inc
and
pop
mov
or
cmp
rolb
popa
jae
and
and
cwtl
pop
sub
loopne
rcl
cmp
leave
jbe
jmp
out
cld
push
fstps
mov
xor
push
cmc
pop
jbe
loope
lods
xor
cmp
test
push
bound
jns
jmp
aaa
insb
daa
sbb
cltd
cmc
ja
lcall
add
imul
xchg
repz
or
hlt
add
loop
pop
loope
cmp
aaa
sbb
in
movsb
jne
sbb
into
xor
scas
sbb
xchg
in
shl
in
sbb
mov
lock
jp
pusha
add
lods
mov
ja
cmpsb
xchg
imul
mov
jns
pop
psubd
xor
xchg
int3
mov
adc
adc
repz
fs
cmp
mov
shll
movsb
inc
leave
es
and
ret
addb
cmp
shll
cli
jle
add
loope
call
sbb
xchg
in
fdivrs
cmpsl
xchg
in
jmp
add
lahf
push
movsl
xchg
mov
ret
cmp
mov
movsl
nop
push
in
xor
inc
add
inc
inc
jmp
sub
mov
push
and
rorl
push
imul
jnp
xor
dec
sbb
push
arpl
leave
imul
sbb
insb
jle
es
mov
push
pop
sbb
or
sub
stc
cmp
int3
popf
mov
fildl
icebp
test
sub
mov
outsl
sub
push
inc
pop
addr16
test
inc
outsb
and
mov
int3
bound
popa
cli
outsl
dec
xchg
dec
pop
xchg
aas
out
xor
mov
mov
adc
roll
cs
or
ret
testb
inc
aas
pop
fldl
lods
sti
addr16
stc
xchg
lods
dec
pop
jno
nop
xchg
ret
sub
in
out
inc
aam
jo
push
into
cmp
xchg
jnp
lods
adc
add
movb
sbb
movsb
fidivs
xchg
push
push
imul
add
rcrb
fistpll
sub
jbe
push
in
lock
movsb
pop
enter
fiaddl
leave
and
xor
sub
inc
in
insl
pop
aas
aaa
xchg
jl
sub
sbb
jmp
pop
negl
mov
mov
dec
dec
stc
mov
cmp
scas
in
cmp
sbbb
stos
imul
xchg
pop
mov
adc
hlt
outsl
push
fisubl
fidivrs
pop
sub
pop
pusha
sub
jl
divb
js
aas
outsb
lcall
push
sbb
dec
add
dec
out
and
mov
iret
mov
add
pop
push
lret
movq
pop
mov
adc
or
xchg
leave
repz
movsb
ds
lret
imul
jg
dec
out
push
in
lock
push
pop
data16
xchg
mov
lock
pusha
adc
push
push
lods
pop
cwtl
push
push
inc
loop
stos
pop
adc
mov
dec
xchg
fisubs
xchg
out
jae
icebp
sbb
out
rolb
movsl
cwtl
lret
jae
cmp
pop
in
push
cltd
fisubl
outsb
fisubs
push
dec
pop
fiaddl
mov
push
je
movsl
pusha
push
outsb
dec
inc
add
movsb
test
or
mov
popf
xchg
jp
je
mov
std
cmp
mov
mov
imul
rcr
sub
pop
sbb
nop
jns
aad
les
pop
loopne
xorb
stos
pushf
clc
push
and
jae
ret
and
cmp
enter
sbb
dec
fistl
xor
cwtl
add
es
xchg
leave
lea
push
out
test
scas
in
xor
add
jo
mov
pop
push
lods
pusha
pusha
or
scas
cmp
inc
or
dec
pop
xchg
sbb
js
jns
hlt
add
call
xchg
pop
into
daa
ret
xor
popf
adc
lods
mov
cmpsl
xor
in
or
mov
bnd
push
xchg
push
and
dec
repnz
inc
or
dec
jecxz
inc
mov
adc
sbb
enter
repz
and
sti
rclb
sbb
out
push
pop
dec
stos
in
mov
cli
pop
scas
mov
pop
out
lock
sub
xchg
mov
fwait
pushf
pop
sbb
ds
xchg
movsl
add
fldt
cmp
xor
add
aaa
sub
inc
out
add
ret
dec
fmull
sbb
sbb
gs
aam
sbb
dec
jp
push
jnp
sahf
or
jnp
imul
and
xor
fs
fstpt
cs
cmc
mov
xchg
pop
mov
mov
lods
sub
dec
sub
les
push
rorb
test
dec
shll
imul
jns
stos
stos
sbb
xchg
push
push
inc
into
scas
je
adc
jno
push
sub
cmp
xlat
popa
adc
bound
fwait
out
adcl
jmp
lods
fstps
movsb
sub
jbe
push
leave
cmpsb
mov
test
scas
lock
jbe
icebp
pop
xor
lods
or
ds
icebp
xchg
sub
enter
xchg
out
mov
sahf
add
aam
les
aam
sub
pop
or
xchg
dec
inc
or
shlb
ss
push
out
lods
add
pop
popa
sbb
in
std
mov
test
pop
push
push
ds
arpl
xchg
into
mov
out
cmp
fisttpll
outsb
sbb
sub
sub
fwait
dec
inc
cmpsl
and
lret
rcrb
jns
shll
iret
pop
cmc
cmc
fisubs
push
insb
and
xor
add
aaa
loope
inc
adcb
loopne
mov
out
mov
add
gs
das
rol
fsubrp
add
leave
arpl
mov
fiadds
stos
or
cltd
jnp
add
nop
and
jge
jno
fstl
sti
in
rolb
push
cmp
out
fnstsw
hlt
or
jmp
mov
in
xchg
xchg
mov
out
adc
loop
jle
shl
cmp
aaa
pop
lock
dec
scas
aas
fwait
movsb
dec
mov
jne
iret
fdivs
mov
push
aas
xor
or
dec
xchg
or
popf
pop
sub
or
xor
cmp
sub
ljmp
xor
repz
xor
les
ljmp
sub
cld
in
pop
aad
ss
mov
push
std
insl
and
lea
adc
int
mov
xchg
jl
dec
mov
xor
dec
jae
push
pop
pop
inc
sarb
jmp
call
add
jl
stos
xor
std
imul
mov
clc
jae
mov
xorb
inc
fdivrs
das
add
cmp
repnz
mov
push
rolb
iret
out
cmpsb
cmp
out
pusha
mov
lcall
push
push
fisttpll
pop
jecxz
pop
cli
cmp
das
mov
fcmovne
sarb
ret
sbb
ljmp
or
xchg
or
push
jns
cmp
out
add
sbb
mov
scas
mov
jb
popf
dec
rcl
or
adc
xor
test
mov
das
mov
gs
jmp
imul
mov
jae
cwtl
mov
pop
dec
adc
adc
mov
in
xchg
cli
clc
xchg
cmp
popf
ljmp
aas
inc
xchg
jge
lahf
jne
jl
jbe
mov
adc
sub
sub
inc
fldenv
jae
jae
jb
or
imul
push
scas
or
adc
mov
sub
dec
adc
sbb
les
jp
arpl
cmp
or
es
cmpl
ja
pop
mov
push
xlat
jg
mov
fs
sub
imul
jae
or
fisubl
nop
xchg
inc
pop
inc
mov
inc
xchg
stc
imul
adc
sub
pop
lcall
orb
call
sbbb
popf
icebp
and
jle
adc
adc
lcall
mov
lret
xor
test
jg
sub
shl
pop
pop
and
lods
lock
nop
sbb
dec
fnstsw
inc
or
xorb
pminsw
add
inc
mov
jp
cmp
clc
jmp
imul
mov
les
push
pop
sub
pop
lods
stos
mov
and
pop
mov
pop
jno
loopne
xchg
iret
mov
mov
inc
andb
sbb
aaa
sti
sahf
xor
loope
int3
adc
jo
mov
insb
mov
mov
mov
mov
lock
loop
data16
imul
sub
movsl
das
icebp
push
cmp
mov
aad
inc
ret
jnp
mov
rolb
jnp
in
jne
pop
xor
lea
inc
inc
xorb
mov
or
je
jp
xchg
mov
lea
mov
pop
cmpsb
push
adc
jns
daa
add
sahf
mov
sahf
imull
xchg
nop
lock
fnstsw
jp
sbb
pop
dec
repnz
inc
aas
or
arpl
aam
in
dec
sbb
and
sbbb
aad
sub
ret
jmp
and
ljmp
lret
loopne
cmpsb
test
pushf
aas
inc
sbb
mov
orl
xor
dec
scas
pop
cltd
lret
inc
insl
cs
dec
ret
push
mov
dec
cmpl
dec
or
incb
push
mov
cmove
and
cmp
in
inc
int
loopne
enter
sti
dec
add
int3
ljmp
cltd
and
sarl
inc
fistps
ljmp
xchg
fcompp
aad
jbe
mov
add
mov
jo
add
stos
mov
add
mov
push
je
jb
sarb
loop
sbb
add
jbe
movsb
jb
sahf
es
pop
add
hlt
add
popf
xor
or
pushf
data16
flds
sbb
push
movsl
shlb
mov
ds
js
pop
push
loope
or
cmp
fdivrs
or
mov
jns
mov
out
cmp
inc
pusha
xlat
outsl
adc
inc
and
out
loope
ret
or
cmp
inc
lahf
outsl
sti
lea
in
and
xor
cmc
mov
data16
clc
in
lret
jb
mov
add
push
sbb
pusha
ffreep
out
lods
jbe
mov
arpl
outsl
push
xor
jne
test
bound
or
xchg
in
mov
movsl
push
outsb
dec
jge
pusha
stos
pop
sub
dec
test
mov
sub
adc
lret
rclb
mov
add
mov
jns
and
sarb
adc
xor
cmp
inc
int3
cmp
dec
inc
or
push
mov
mov
es
aaa
cmpl
repz
push
and
inc
jle
gs
xchg
fs
pop
jno
adc
fnstenv
add
and
cmpsl
xor
mov
aaa
xor
mov
mov
lret
add
fistps
jp
data16
decl
add
inc
inc
pop
aam
pop
xchg
cmc
lcall
add
movb
mov
jno
cltd
aad
push
div
adc
add
push
push
lock
push
outsl
jb
mov
icebp
popf
jle
ret
test
push
xchg
ljmp
push
nop
loopne
inc
inc
xchg
mov
loope
cmp
cmc
pop
orb
cmp
or
addr16
sti
movsb
push
xorl
xchg
cltd
sti
cmpsl
insl
sub
iret
cmpsl
fwait
gs
repnz
jne
nop
adc
add
int
pop
sbb
inc
add
fldcw
cs
push
mov
int
in
mov
fwait
push
xor
in
jg
ljmp
lret
into
adc
in
cmp
or
movsl
repnz
jae
mov
sbbb
mov
push
or
xor
and
int
mov
jmp
dec
rolb
cwtl
lds
pop
dec
mov
ficoml
out
xor
loop
add
in
cs
mov
test
or
rcrb
sahf
inc
inc
fsubs
mov
loop
adc
sbb
mov
adc
lea
gs
iret
movsb
fsubl
je
out
js
aas
jne
jmp
or
mov
sbb
inc
jp
jp
pop
icebp
sub
mov
imul
add
stos
inc
insb
bound
test
pop
fidivrl
flds
fmuls
fadd
popf
sub
pop
add
iret
das
orl
jp
test
pusha
mov
add
dec
jmp
imul
pop
adc
stc
ficompl
push
ss
in
int
inc
nop
dec
push
jl
out
cltd
sub
mov
mov
jp
jae
jecxz
jl
xchg
xor
mov
cwtl
cwtl
or
push
mov
inc
xchg
lock
shlb
daa
pop
ds
sbb
int
daa
lds
mov
jae
inc
into
test
sarl
std
mov
cmpsb
pop
jg
add
and
lods
mov
cmp
stos
movsb
fst
jns
dec
in
mov
loop
xchg
mov
mov
insb
xchg
add
jo
push
addr16
xor
dec
mov
xchg
xchg
fimull
pop
push
addr16
fmulp
inc
lahf
cmp
shlb
loopne
gs
or
enter
xor
mov
lods
out
mov
adc
out
jno
int
enter
mov
adc
dec
cmp
cmc
and
inc
inc
fdivs
xor
xor
add
sbb
and
sub
aad
mov
rep
pop
xorl
movsl
cmp
dec
mov
shlb
inc
lock
jb
mov
and
mov
in
nop
scas
xorb
test
adc
insb
imull
or
jb
in
jmp
fwait
push
test
test
ja
cmp
fwait
loope
cmc
imul
pop
mov
xlat
mov
mov
cmpsb
lea
pushf
lahf
push
scas
lods
add
loop
and
enter
scas
inc
dec
dec
int3
lods
jmp
inc
out
pusha
ja
mov
jge
cmp
add
cmp
setge
mov
adc
xor
or
fdivrs
jae
mov
cmp
sbb
jle
dec
cmp
push
lock
fsubrl
scas
and
xchg
frstor
cmpsb
mov
insl
fistpl
das
ret
mov
test
adc
loop
enter
or
pop
xchg
mov
mov
inc
out
notb
in
andl
repz
test
cmp
ficoms
push
mov
mov
mov
cmpsl
xor
jp
xor
jmp
les
sahf
jg
jle
xchg
ja
xchg
call
sbb
hlt
call
jge
daa
aas
test
mov
xorl
push
in
pop
xor
add
mov
jns
push
jns
push
loop
ss
jne
icebp
sub
fldenv
pop
sub
lcall
aam
pop
sti
mov
push
sbb
xchg
push
je
push
clc
shll
mov
jg
mov
xor
pop
mov
testb
or
mov
popa
pop
adc
mov
push
ficoml
pushf
xchg
lcall
mov
data16
sub
cmp
sbb
fbstp
xchg
jns
xor
ljmp
aam
nop
and
xchg
jp
test
push
mov
movsb
lret
test
aas
in
mov
loope
mov
scas
mov
lret
jecxz
add
push
pusha
sbb
sub
mov
xlat
sub
jl
push
gs
aaa
sbb
fiaddl
sub
pop
xor
cmpsl
jb
lock
or
loopne
mov
cmpsb
inc
pop
inc
mov
lret
and
mov
lds
jmp
cmp
and
xor
or
lds
inc
int3
mov
popa
or
out
mov
push
insb
shlb
fidivl
cmp
not
ret
popf
mulb
cmc
mov
icebp
xchg
sub
or
leave
lock
pop
ja
or
add
stc
mov
int
adc
xchg
icebp
dec
xchg
lahf
jp
mov
dec
leave
jge
test
add
sarb
testl
bound
mov
negb
mov
frstor
fcompl
call
jne
inc
xor
out
daa
fmull
lcall
jl
xor
test
hlt
push
lret
rcl
daa
das
adc
add
test
sub
cmp
xlat
xchg
mov
cmp
scas
xorb
ret
jl
add
je
insb
divl
or
sbb
test
lahf
rcll
fsubrs
cmp
fisubl
mov
js
icebp
loop
cmp
insl
mov
loope
xchg
push
or
outsb
loop
hlt
js
jno
fdivrs
daa
jecxz
sub
jg
sbb
xlat
cvtdq2ps
cmp
xchg
lea
adc
and
ds
or
je
in
mov
sbb
stc
and
or
loop
mov
mov
into
xor
popf
loop
les
loop
icebp
add
sbb
lret
fmull
push
rcrl
out
popf
cmp
inc
xchg
dec
jmp
repz
ja
pop
inc
and
ljmp
jmp
xchg
idivl
fmuls
mov
or
dec
lock
push
cltd
cli
dec
lods
test
aas
std
lcall
mov
bnd
inc
dec
stos
scas
cmpl
ds
aaa
out
dec
into
xor
or
bound
push
jbe
or
aad
sbb
xor
mov
test
popf
test
enter
mov
jge
es
pop
leave
or
xchg
dec
mov
jno
adc
mov
rolb
loop
cmp
or
pusha
ja
test
cltd
push
mov
sub
fxam
xchg
xor
adc
daa
leave
dec
mov
mov
and
add
shlb
repnz
mov
hlt
pop
inc
lea
je
push
sub
pop
cmp
imull
push
js
adc
jb
cmp
xor
fsubrs
and
mov
lahf
idivb
addr16
mov
mov
flds
mov
test
or
and
movl
push
sub
pop
push
pop
lret
dec
adc
test
sbb
and
and
call
les
cmp
shr
movsl
clc
jl
int
jg
mov
movsb
das
or
fdivs
add
fs
cmp
add
popa
cld
loopne
insl
testb
push
lret
xchg
jno
lahf
xchg
jmp
lods
inc
fcmove
idiv
aas
xchg
imul
icebp
or
mov
jb
jmp
test
pop
jb
js
xchg
pushf
jns
xchg
sbb
push
jge
ja
push
loop
mov
inc
cli
aam
lds
adc
test
ret
mov
sub
lods
shrl
mov
out
pop
push
sbb
xchg
dec
dec
jne
pop
pavgw
aas
lahf
jns
jmp
ljmp
push
mov
shlb
cmc
out
xchg
pop
push
xchg
and
cmp
outsb
xchg
mov
es
sub
fisubrl
std
loop
test
jge
out
sub
inc
sbb
shl
jmp
xchg
les
shrl
cwtl
jnp
ret
dec
arpl
shlb
pop
xor
inc
dec
dec
or
or
ja
sub
cltd
jle
fstl
push
test
rcr
gs
mov
int3
daa
xor
in
pop
add
push
or
dec
shr
loop
mov
pop
out
inc
imul
rorl
dec
and
xchg
mov
xchg
mov
cmpsl
gs
sub
mov
imul
insb
pop
gs
cwtl
xor
movsb
xchg
in
sub
sbb
jns
pusha
push
int
cmc
mov
push
call
xchg
imul
cli
loopne
ret
add
pop
and
xchg
xor
repnz
out
or
lar
xchg
jne
fisubrl
mov
or
jle
in
inc
outsl
jb
lret
fmul
add
inc
test
jl
mov
scas
in
jbe
adc
pop
xchg
or
mov
mov
lcall
cmp
arpl
and
fs
sbb
jmp
jno
jbe
jb
stos
dec
es
push
pop
mov
stc
xchg
aam
je
cmp
or
in
repnz
in
lea
lods
jo
jle
lret
xor
lret
cmp
fbld
lea
imul
jne
pop
pop
in
cmp
or
sarl
fwait
dec
roll
fwait
cld
adc
or
adc
xchg
dec
subl
fbld
ja
xchg
and
call
jnp
shrl
push
mov
mov
cmp
mull
popf
movsl
sub
or
sbbb
mov
push
fwait
leave
pop
sbb
lea
jecxz
in
jg
xor
ret
movsb
test
out
cmp
mov
repz
xor
lret
enter
push
imul
outsb
stc
inc
cmp
mov
push
jo
pop
pusha
scas
ret
mov
add
xchg
stc
cltd
push
call
pop
lret
sub
decl
xor
add
xchg
adc
add
leave
subl
lea
rcrb
jns
iret
ljmp
add
mov
fstpt
popf
cmp
hlt
int
mov
or
cmp
insb
sbb
mov
jmp
mov
fbld
andb
rcrb
mov
and
cmpsl
jo
mov
aad
cmp
xlat
push
adc
iret
movsl
sbb
jecxz
out
repz
mov
mov
adc
dec
jmp
in
pop
out
and
jb
les
out
aad
cmp
in
shr
shl
adc
mov
ret
jge
xor
dec
pushf
add
in
mov
adc
xchg
push
jle
fisubrl
dec
mov
adc
lret
xor
dec
and
out
test
adc
dec
roll
jl
mov
aas
pop
adc
sbb
xor
xchg
ret
movsl
cs
mul
lret
xlat
call
adc
dec
and
imul
je
mov
sti
pop
sbb
out
addr16
sub
insb
mov
mov
and
repz
orl
push
push
in
adc
push
scas
sahf
pop
lods
cmp
dec
call
inc
inc
les
call
xor
fwait
daa
shll
mov
dec
mov
repnz
icebp
lea
scas
jg
inc
xor
xchg
mov
pop
jne
dec
dec
cltd
mov
push
imul
add
and
shl
rolb
or
pop
and
push
das
and
aas
fsubl
and
sbb
insl
mov
or
pop
int3
cmp
ljmp
les
js
mov
jl
in
popf
std
cmpsl
add
jo
dec
sbb
loopne
jo
sbb
loopne
outsl
xlat
sahf
in
mov
les
push
hlt
pop
or
cwtl
xchg
jno
mov
cltd
or
aad
add
aam
jnp
cmp
sbb
lahf
shlb
sbbl
jb
aaa
stc
sub
adc
mov
out
mov
mov
movsb
rorl
bound
aaa
sub
pushf
adc
sbb
and
out
xchg
lods
lahf
xor
adc
frstor
icebp
mov
sbb
jb
pop
cmc
cld
cmp
jg
jp
sub
push
pop
insl
insb
and
repnz
test
xor
inc
pop
jne
jge
push
inc
sub
rcrb
shll
xchg
imul
testl
mov
repz
push
mov
xor
notb
aas
clc
xor
xor
out
aad
lea
sbb
or
push
je
addr16
scas
xor
daa
mov
stc
bound
mov
xor
mov
push
push
mov
or
clc
rorb
jge
xchg
adc
popa
lret
inc
jl
xchg
lods
sub
jle
add
popa
lods
addb
scas
sub
push
or
loopne
cmp
mov
pusha
ror
dec
mov
pop
lods
or
xchg
sub
adc
cli
sbb
adc
fdivr
sahf
add
ljmp
inc
sub
repz
push
pop
je
or
loope
cld
pop
mov
cmp
xor
and
xor
inc
mov
push
add
movsb
xchg
lock
sbb
scas
jb
xchg
xlat
or
adc
adc
sti
sbb
out
sarl
xchg
imulb
ja
iret
lcall
inc
adc
or
icebp
lock
add
les
cmp
in
cmpb
cmp
and
pusha
xchg
mov
inc
fs
lret
add
xchg
aas
sbb
rclb
mov
arpl
cmp
je
jnp
mov
lea
mov
and
clc
dec
adc
inc
add
out
arpl
push
mov
mov
flds
repnz
xchg
xchg
scas
add
mov
out
jne
cmp
hlt
cmp
adc
sub
incb
cmp
jne
dec
or
and
test
insb
daa
push
fsubs
mov
sub
mov
fs
jge
cmc
jns
mov
adc
dec
and
stos
mov
mov
les
loop
or
cmpb
shl
dec
pop
push
cmp
fs
test
mov
repnz
sub
jle
fidivl
call
xchg
stos
xchg
test
jbe
pop
in
rcrb
adc
push
mov
jae
pop
sub
xchg
mov
and
nop
test
lock
mov
jb
sbb
push
xor
sub
insb
cmpsb
adc
bound
rcl
in
bswap
push
push
mov
mov
add
mov
fdivrs
inc
jb
pop
xchg
imul
add
decl
adc
dec
push
xchg
out
xchg
out
aad
lahf
ret
xor
and
out
fisttpll
mov
and
push
shll
mov
inc
fwait
mov
lock
add
cld
push
bound
pop
pop
test
jno
mov
sbb
adc
xchg
sti
nop
xchg
sub
xor
jns
mov
inc
xchg
pop
cmpsb
lods
js
mov
add
or
in
jge
push
pop
add
push
pop
out
mov
or
jnp
mov
lds
cmpsl
xor
mov
mov
lcall
out
inc
mov
jl
jns
mov
push
inc
int
xor
cmp
dec
and
rorb
push
xor
push
cmp
pop
iret
jns
lods
pop
cmp
and
sbb
and
inc
ret
aad
add
int3
push
lods
xchg
mov
and
fldcw
jns
mov
sbb
lret
sub
aad
icebp
mov
gs
jecxz
jge
je
shl
inc
iret
rorl
call
fwait
cmpsb
test
das
xor
dec
iret
dec
adc
push
fnstenv
mov
inc
xor
dec
push
jb
mov
dec
push
add
out
movsb
mov
sbb
punpckhwd
cmc
jb
aas
or
and
and
dec
or
cld
mov
xor
push
push
dec
insb
dec
dec
mov
jnp
mov
or
int
add
sub
fcmovnbe
mov
gs
shll
lcall
xchg
inc
mov
xor
in
incl
xor
in
dec
cwtl
clc
addr16
in
xchg
in
sub
into
and
je
xchg
inc
and
dec
sahf
sbb
push
push
aad
xchg
jb
jp
out
pop
sbb
repnz
repnz
stc
test
sub
daa
cmp
and
sbb
data16
inc
or
mov
addb
test
cs
outsb
push
jb
jae
inc
pop
lods
inc
sbb
mov
xor
das
add
scas
and
adc
int3
lret
sub
repz
adc
push
outsb
xor
mov
arpl
pop
mov
mov
pop
sub
jmp
or
in
xchg
int3
addb
test
aas
clc
mov
push
imul
xor
pop
imul
adc
lods
pop
dec
ljmp
pop
frstor
sbb
jnp
ffreep
inc
insb
mov
jmp
or
fs
pop
push
fistpl
mov
or
sub
and
ja
xchg
cmpsb
ja
push
pop
out
and
mov
fidivs
mov
scas
xor
xchg
xchg
mov
cltd
push
fwait
pop
jmp
cmp
loope
addr16
out
push
cmp
out
stos
int
cmp
movsl
cld
pop
push
insl
push
into
int
iret
mov
mov
jo
dec
xchg
or
xchg
push
fcomps
ss
dec
push
mov
cmp
adc
jmp
sub
fistps
rolb
dec
pop
sub
jp
scas
cmp
lock
xorl
ror
sbb
mov
bnd
jecxz
xchg
lahf
inc
rorl
popa
insb
push
fwait
or
cmp
xor
push
mov
xchg
push
mov
stos
cmp
mov
mov
shlb
adc
jbe,pt
outsl
insl
mov
xchg
outsb
outsl
jle
xor
pop
insb
lret
jmp
hlt
push
fs
mov
adc
call
inc
inc
push
out
inc
mov
cmpsl
mov
inc
std
mov
adc
and
popf
or
in
shlb
xor
fstpl
push
bound
xchg
imul
add
adc
cs
xorb
mov
mov
lcall
fmul
xchg
out
ljmp
jne
cmp
pop
ret
je
mov
pmaxsw
daa
and
push
iret
test
jb
push
fbld
dec
mov
movsl
jl
sahf
ljmp
adc
and
push
cld
out
gs
js
xor
andb
imul
test
mov
dec
clc
stos
scas
stc
jge
mov
jno
jl
cmp
inc
aaa
bound
xchg
cmpsb
lods
scas
hlt
mov
push
aaa
sub
aad
repz
ret
xchg
pop
ds
icebp
cmpsb
test
or
cmp
mov
push
mov
jb
pop
das
adc
sbb
xor
or
mov
jno
aad
jle
sbbb
insb
cmp
dec
sbb
pop
pop
xchg
cmc
cld
mov
sbb
cwtl
nop
mov
mov
sbb
aas
fisubrl
mov
dec
dec
jae
ror
mov
lret
jmp
imul
sub
xor
push
in
arpl
cmp
sahf
cwtl
jecxz
cmp
mov
push
iret
ds
adcl
lea
mov
cmp
mov
in
cli
fbld
shl
add
bound
xchg
shll
inc
mov
enter
faddl
xor
adc
cltd
push
jecxz
xor
or
mov
or
xlat
nop
cmp
sarb
pop
xor
push
inc
cs
jge
inc
push
sbb
xchg
cmp
clc
mov
pop
jno
imul
xor
mov
inc
cwtl
jmp
xchg
push
sti
out
pop
mov
jmp
dec
push
pusha
daa
jbe
xor
inc
pop
stos
mov
ret
lret
shrl
mov
ljmp
jl
push
sub
push
xor
push
fstpt
pop
or
lods
popf
ror
inc
pop
sbb
fwait
jne
mov
out
or
mov
mov
ret
add
daa
adc
fadds
shr
in
sub
std
repz
adc
lretw
cs
aam
push
xchg
es
mov
int3
lea
xor
cmp
mov
and
inc
push
pop
aas
sub
and
iret
lahf
mov
inc
cmp
mov
sti
jo
xor
mov
into
out
fnstcw
jl
jmp
push
negl
insl
pop
rolb
dec
lock
add
add
push
add
add
add
lock
add
add
add
cmp
push
add
lock
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
adc
add
bound
add
add
add
add
add
add
cmpl
stos
test
cmp
add
adc
add
push
add
mov
add
fldl
add
jns
or
add
cmp
add
jb
jne
insb
inc
insb
insb
outsl
add
and
arpl
imul
gs
xor
sbb
push
mov
push
push
push
call
jo
add
add
cmp
mov
lea
mov
cld
rep
lea
push
call
adc
andl
add
aas
adc
add
add
push
push
jmp
add
sbb
xchg
das
adc
add
pop
leave
ret
rolb
addb
and
jmp
push
mov
add
or
push
cld
sub
sub
pushl
xor
inc
add
add
cld
mov
jne
xor
add
je
add
cmp
sbb
cmp
jb
push
push
add
add
xchg
movsl
mov
add
adc
in
testl
addl
mov
rep
mov
pusha
les
xchg
xor
add
add
insb
add
add
or
add
or
add
or
add
add
test
add
push
adc
add
add
hlt
sbb
add
inc
add
add
or
dec
add
jmp
in
cmp
inc
or
add
push
xor
inc
mov
mov
mov
shl
mov
mov
shl
mov
push
xor
dec
dec
mov
add
add
mov
mov
mov
add
mov
shl
mov
movb
mov
add
add
add
mov
mov
mov
mov
mov
mov
je
mov
mov
shr
mov
add
add
stos
adc
rep
mov
andl
push
or
pop
mov
movzbl
shl
or
add
add
inc
dec
mov
jne
cmpl
mov
ja
mov
mov
mov
xor
pop
pop
pop
leave
ret
add
add
mov
mov
mov
mov
mov
and
shl
add
cmp
add
add
jae
mov
movzbl
shl
or
shl
inc
mov
mov
movzwl
movzwl
mov
roll
add
out
or
scas
repnz
jae
mov
movzwl
mov
sub
movzbl
sar
add
add
pop
sub
mov
mov
and
shr
mov
shl
mov
xor
inc
add
imul
cmpl
lea
mov
jl
sub
add
dec
lock
movzbl
mov
shll
mov
mov
and
add
add
push
lret
dec
add
add
jae
mov
mov
movzbl
shl
or
shl
add
add
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
add
add
cmpl
mov
jne
jmp
sub
sub
inc
add
mov
shr
sub
sbb
add
cli
jge
mov
pusha
add
insl
jmp
mov
lea
mov
add
mov
mov
and
test
test
repz
add
adc
repz
add
mov
add
jmp
sub
mov
data16
add
ljmp
shrb
mov
inc
je
xchg
mov
mov
incl
adc
add
cmpl
mov
mov
jge
andl
jmp
or
add
add
adc
insl
clc
push
jmp
push
in
sub
pop
pop
or
or
dec
addb
mov
popa
mov
dec
in
dec
fmuls
pusha
add
add
mov
mov
mov
jge
cltd
jmp
movl
sub
pusha
add
add
and
xchg
sub
mov
shr
sub
inc
add
add
mov
lea
jae
mov
adc
inc
arpl
rol
ljmp
or
cmpl
add
cwtl
mov
mov
mov
add
shl
or
add
add
cmp
or
jae
mov
out
loop
mov
mov
orb
leave
loop
push
or
mov
movzwl
repz
add
add
repz
mov
je
mov
mov
xor
movsb
add
orb
popf
shrl
lock
lea
mov
mov
mov
test
cmp
add
repnz
mov
jmp
sub
sub
das
add
push
movsb
push
mov
mov
mov
lea
movsb
mov
dec
loopne
mov
jmp
test
mov
lea
inc
push
mov
jmp
gs
add
add
in
dec
fmuls
loopne
push
in
push
lock
mov
sub
push
loope
add
xor
add
pushf
push
enter
test
loopne
movsb
push
mov
shl
andl
lea
jmp
lods
add
mov
jp
mov
add
test
das
loope
mov
add
add
shl
mov
lea
movl
adc
sbbb
mov
add
adc
lret
sub
mov
mov
movl
decl
xchg
mov
add
add
mov
shll
mov
jmp
test
mov
inc
add
call
xchg
mov
xor
inc
mov
xchg
fsubrl
lret
call
pop
jge
addl
cmpl
jge
mov
jmp
push
pop
mov
add
add
shl
lea
movl
lea
mov
aam
icebp
mov
jae
mov
mov
mov
sar
add
mov
add
jmp
sub
mov
add
add
inc
mov
sub
cmp
jl
xor
inc
mov
mov
roll
add
add
and
dec
or
cmp
mov
jge
lret
in
mov
sub
lea
add
sub
cltd
pop
cld
mov
movzbl
shl
or
orb
cltd
jge
shr
add
cmp
jb
sub
or
dec
jne
xchg
add
mov
add
push
lock
jne
mov
push
or
xchg
movsb
mov
push
lea
jge
aas
cmpsl
xlat
mov
cmpsl
push
cmpsl
jle
mov
lock
sar
add
mov
cmp
push
adc
cli
jne
inc
mov
mov
or
roll
add
and
cld
mov
add
lock
mov
addl
cmp
add
add
ja
mov
mov
sub
add
mov
decl
mov
inc
inc
cmpl
mov
mov
add
add
je
cmp
jb
mov
cmp
jb
jmp
xor
inc
jmp
add
add
mov
push
mov
movzbl
push
cltd
push
pop
idiv
push
pop
push
add
add
movzbl
mov
cltd
idiv
mov
mov
mov
mov
mov
add
push
add
addr16
add
mov
add
push
push
call
rolb
add
add
lea
push
push
pushl
mov
push
add
push
lea
push
call
push
add
jne
call
mov
pop
pop
mov
add
je
and
add
add
jl
sub
jge
xor
lea
movsb
cmp
jae
call
jae
add
add
call
xchg
call
dec
dec
inc
inc
shl
lods
inc
push
mov
sub
rep
pop
jmp
add
add
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
add
or
popa
push
and
mov
cld
lods
push
mov
shr
and
rep
add
or
mov
rep
pop
pop
pop
and
add
mov
add
cmp
lea
add
test
jbe
lea
shr
inc
mov
shl
mov
add
add
push
mov
mov
mov
shl
and
add
xor
mov
shl
add
add
add
add
movzbl
add
mov
add
dec
jne
pop
cmp
mov
jae
sub
mov
sub
mov
mov
aaa
inc
dec
jne
pop
pop
pop
js
or
xor
movsb
mov
call
leave
add
or
call
shr
or
mov
inc
mov
call
adc
jae
add
add
stos
jmp
call
adc
inc
jbe
lods
shr
je
adc
add
xchg
dec
fs
add
jae
cmp
jae
mov
add
cmp
ja
inc
inc
xchg
mov
mov
orb
push
inc
in
push
lcall
inc
call
out
lea
pop
pop
xor
or
and
add
xor
inc
push
push
mov
push
mov
jp
jp
or
out
inc
aam
dec
dec
mov
sti
add
jge
mov
das
push
in
push
fdivl
enter
cli
add
inc
testl
lcall
incl
dec
mov
jne
pushl
adc
push
or
pop
shlb
pop
lock
cwtl
pop
mov
mov
xor
in
push
cmp
xor
shr
add
mov
icebp
mov
and
ljmp
shr
aam
mov
cmp
or
jmp
pusha
ret
dec
jl
dec
call
hlt
xorb
mov
jmp
pop
lea
and
in
pop
sub
in
movsl
jne
mov
movsl
jae
push
and
inc
mov
rolb
test
nop
sbb
decl
cwtl
cwtl
inc
js
jl
loope
imul
push
xchg
mov
sbb
iret
rcl
push
jae
js
adc
sub
jl
mov
aad
icebp
sub
popf
jns
aad
add
xor
mov
aad
add
leave
mov
shr
rorb
jns
mov
or
mov
push
stos
inc
stos
lahf
int
add
cmp
call
add
repz
jno
push
mov
xchg
mov
push
xchg
cld
inc
mov
rorl
jns
shrl
jns
inc
mov
in
add
mov
or
shll
mov
mov
rorl
push
push
jae
pop
sub
inc
add
jge
add
aas
push
adc
jne
inc
hlt
cmp
mov
incl
mov
mov
mov
inc
jmp
and
adc
jmp
push
dec
adc
mov
sbb
sbbl
hlt
loopne
xor
jp
xchg
mov
pop
in
xor
pop
pop
jp
push
pop
fmull
dec
call
in
fwait
rclb
orl
push
or
adc
sbb
xor
repnz
bound
or
ljmp
jmp
lods
jnp
and
add
pusha
jno
lea
push
add
jmp
popa
mov
add
push
jnp
add
or
fadd
inc
hlt
mov
pop
inc
sbb
mov
test
cwtl
add
popa
add
mov
mov
jmp
add
add
pop
call
mov
lea
mov
decl
jne
xchg
cmp
rolb
repnz
sub
add
jge
sahf
xor
in
stos
inc
fiaddl
shl
lea
push
sub
adc
cmpsb
push
push
pop
adc
mov
ja
jge
add
pusha
inc
adc
xchg
mov
mov
cli
add
fimull
mov
add
add
lret
and
dec
or
cmp
mov
jge
shl
mov
sub
lea
add
inc
push
shr
add
add
sub
or
dec
jne
lea
shl
movl
gs
inc
push
lea
flds
mov
add
or
in
lret
add
or
or
mov
lea
inc
add
add
gs
pop
call
jne
addl
or
add
fidivs
mov
mov
sub
add
dec
hlt
mov
inc
inc
lock
hlt
hlt
dec
jne
je
cmp
sbb
dec
mov
or
jb
dec
lcall
push
dec
add
push
test
shl
dec
mov
mov
lea
push
push
pushl
add
shll
testl
stos
mov
push
xchg
jno
mov
push
lods
adc
push
out
add
and
add
mov
rorl
add
sbb
add
add
adc
add
add
cmc
add
add
and
xchg
or
inc
add
incl
lock
add
add
adc
add
add
adc
add
shll
adcb
add
add
add
cld
fmuls
push
and
aaa
or
int3
sub
add
dec
jo
icebp
add
das
add
add
cmpb
pop
sub
lea
mov
add
sub
add
add
mov
mov
mov
add
lea
lods
stos
add
je
add
add
divb
and
add
add
mov
add
rep
mov
lea
add
add
add
outsl
or
adc
pop
add
add
mov
add
shlb
test
je
dec
mov
mov
add
add
sbb
add
xchg
hlt
and
adc
adc
mov
call
lea
dec
pop
cmp
test
call
add
add
add
push
call
test
je
push
push
call
add
add
test
je
mov
mov
test
jne
lea
jmp
test
add
add
loope
jg
lea
push
lea
push
call
add
add
inc
inc
push
push
lea
or
add
pusha
or
lea
pop
add
pop
mov
jnp
mov
add
add
inc
or
dec
inc
mov
add
movb
add
sub
mov
mov
jmp
add
insb
pop
das
add
inc
int3
mov
call
add
pop
pop
pop
pop
ret
add
repz
pop
adc
or
add
lret
push
call
mov
add
add
xor
add
je
add
xor
push
mov
add
push
push
xchg
lock
adc
jmp
add
add
jne
stos
psubsw
jge
add
mov
mov
mov
pop
sbb
add
mov
jmp
cwtl
or
sbb
push
jne
push
xor
xor
add
je
add
inc
or
incb
xchg
add
mov
movzwl
test
ret
test
mov
xor
add
add
nop
nop
nop
movzwl
mov
add
cmp
jge
mov
inc
push
mov
je
add
add
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
nop
nop
nop
add
addl
vmcall
add
jmp
pop
pop
xor
jmp
push
mov
mov
add
add
ret
add
jbe
push
push
call
pop
add
dec
jne
inc
mov
jle
in
pop
in
addl
fimuls
mov
adc
mov
addb
adcb
rol
add
movsl
add
and
rep
mov
adc
add
adc
rcrl
stos
add
sbb
mov
add
mov
add
add
dec
jne
outsl
mov
add
sbb
mov
add
pusha
cwtl
jo
push
xchg
je,pn
ret
jge
push
or
add
adc
enter
pop
inc
or
add
mov
add
mov
mov
dec
mov
push
push
pushl
call
mov
call
rorb
xor
add
je
add
add
inc
in
popl
jmp
pop
push
mov
add
cmp
jne
add
rolb
add
jmp
mov
lea
add
shr
shl
sub
mov
dec
pop
pop
pop
fimuls
call
bound
pop
insl
pop
pop
pop
pop
pop
xor
inc
or
pop
mov
inc
mov
add
add
cmp
je
push
push
mov
sub
mov
add
lea
call
jne
push
call
mov
lea
lods
add
stos
add
push
rcll
xor
add
je
add
mov
pop
fwait
jne
test
xor
loope
push
xchg
add
or
xchg
clc
xchg
loope
inc
or
inc
cmp
leave
mov
lea
add
loopne
lea
je
add
sbb
mov
add
cmp
mov
add
ja
add
dec
jne
sub
mov
and
dec
or
dec
add
add
or
clc
push
lea
push
push
push
push
call
xor
add
je
add
add
and
mov
test
je
push
call
movl
jmp
pop
sbb
push
daa
xor
jne
xor
add
add
lahf
or
pop
or
sarb
adc
cmp
je
add
je
add
mov
add
mov
cmp
add
test
je
add
push
push
push
push
call
dec
xchg
or
or
pop
insl
jae
bound
push
and
push
fwait
mov
lods
inc
or
adcl
xorl
inc
mov
leave
or
call
xchg
or
rolb
and
bound
add
jne
lea
push
je
add
je
cmp
jae
add
cmp
add
add
jne
inc
inc
jmp
pop
jmp
call
mov
mov
movb
inc
test
jne
mov
mov
bound
add
mov
test
jne
mov
test
jne
mov
jp
mov
test
je
les
sub
mov
push
add
mov
dec
or
inc
xchg
or
inc
cmp
pop
push
mov
mov
jne
and
pop
and
add
test
je
mov
mov
add
add
jmp
les
shlb
mov
mov
adc
dec
xor
icebp
mov
xor
inc
sbb
dec
or
add
push
xor
cld
insl
pushf
aas
add
sbb
mov
shr
xor
or
loope
pop
mov
sub
add
orb
pushf
cmp
rcrl
or
and
and
pop
movsb
outsl
mov
adcb
mov
add
add
inc
dec
daa
insl
and
jb
jns
and
jae
popa
jo
insb
imul
and
or
add
insb
insb
and
je
jb
outsb
and
imul
sub
imul
outsb
imul
add
je
lea
add
xchg
jbe
call
push
sbb
push
dec
inc
inc
add
dec
push
or
add
loope
jne
add
lea
fmuls
add
mov
stos
add
or
adc
xor
mov
mov
pusha
xchg
rep
dec
jne
add
add
xor
mov
lods
push
push
push
push
add
add
lea
mov
jne
sub
add
and
and
fistps
pop
ret
inc
pop
rorb
scas
add
gs
outsl
jb
add
add
adc
jb
jne
je
add
and
outsl
arpl
jne
and
add
add
jne
fs
bound
insb
outsl
arpl
gs
and
and
and
mov
imul
xor
add
inc
xor
adc
pop
sbb
jne
gs
xor
dec
gs
sub
add
addr16
outsl
js
add
jo
imul
addb
push
mov
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
iret
popa
add
pop
inc
gs
outsl
fs
sbb
add
push
push
jb
je
arpl
jae
bound
addr16
jb
jae
outsb
je
shrb
popa
je
inc
imul
rolb
add
adc
and
adc
and
adc
and
adc
add
pop
and
add
add
adc
fistps
add
lret
pop
mov
adc
adc
sbb
adc
sbb
add
jbe
add
je
and
jl
sub
lods
test
je
xor
lea
movsb
cmp
jae
call
jae
call
xchg
call
dec
dec
inc
inc
shl
lods
inc
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
mov
push
add
add
lods
sub
add
or
add
lock
add
push
add
add
add
push
add
push
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
sbb
add
push
add
add
add
add
add
jns
add
dec
adc
add
jb
jne
insb
inc
insb
insb
outsl
arpl
imul
gs
xor
add
add
add
in
push
push
push
call
pop
sub
mov
lea
mov
cld
rep
lea
push
call
mov
lea
lea
lods
test
je
add
push
push
pushl
call
stos
jmp
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
mov
jmp
push
mov
add
push
push
push
call
pop
sub
pushl
pushl
pushl
call
mov
mov
cmp
jne
xor
add
je
add
cmp
jb
push
push
push
push
call
mov
add
mov
lea
mov
add
mov
stos
mov
mov
mov
add
rep
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
add
add
insb
or
add
or
add
or
add
add
test
add
push
adc
add
add
hlt
sbb
add
add
sbb
add
add
add
jmp
push
mov
sub
mov
mov
push
push
xor
inc
mov
mov
mov
shl
mov
mov
shl
mov
push
xor
dec
dec
mov
mov
mov
mov
add
mov
shl
mov
movb
mov
add
mov
mov
mov
mov
mov
mov
je
mov
mov
shr
mov
rep
adc
rep
mov
andl
push
or
pop
mov
movzbl
shl
or
inc
dec
mov
jne
cmpl
mov
ja
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
movzbl
shl
or
shl
inc
mov
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
movzwl
mov
sub
movzbl
sar
add
push
pop
sub
mov
mov
and
shr
mov
shl
mov
xor
inc
add
imul
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
mov
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
add
cmpl
mov
jne
jmp
sub
sub
mov
shr
sub
cmpl
mov
lea
je
cmp
jl
jmp
mov
lea
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
add
jmp
sub
mov
shr
sub
mov
sub
mov
inc
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
sub
sar
add
mov
mov
mov
mov
add
shl
add
cmp
mov
lea
jae
mov
movzbl
shl
mov
mov
shl
or
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
cmpl
mov
je
mov
mov
xor
cmpl
setge
sub
incl
lea
mov
mov
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
movzwl
mov
sub
sar
add
shl
mov
lea
movl
movl
jmp
sub
sub
mov
shr
sub
mov
add
movl
movl
mov
mov
movl
mov
add
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
shll
mov
jmp
sub
sub
mov
shr
sub
mov
mov
inc
mov
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
jge
addl
cmpl
jge
mov
jmp
push
pop
mov
shl
lea
mov
movl
mov
lea
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
mov
inc
decl
jne
sub
cmp
jl
xor
inc
mov
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
mov
sub
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
mov
movl
mov
mov
mov
mov
mov
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
sub
sar
add
shll
mov
mov
jmp
sub
sub
mov
shr
sub
inc
mov
mov
or
mov
shll
decl
jne
jmp
mov
incl
je
mov
addl
cmp
ja
mov
mov
sub
add
mov
decl
mov
inc
inc
cmpl
mov
mov
je
cmp
jb
mov
cmp
jb
jmp
xor
inc
jmp
push
mov
sub
push
mov
movzbl
push
cltd
push
pop
idiv
push
pop
push
push
movzbl
mov
cltd
idiv
mov
mov
mov
mov
mov
add
mov
shl
lea
push
push
call
mov
mov
lea
push
push
pushl
mov
push
add
push
lea
push
call
push
push
pushl
call
mov
pop
pop
leave
ret
add
pusha
mov
mov
cld
lods
test
je
xor
lea
movsb
cmp
jae
call
jae
call
xchg
call
dec
dec
inc
inc
shl
lods
inc
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
mov
cld
lods
push
mov
shr
and
rep
mov
rep
pop
pop
pop
ret
add
add
in
mov
mov
push
push
mov
andl
lea
add
test
jbe
lea
shr
inc
mov
shl
mov
push
mov
mov
mov
shl
and
add
xor
mov
shl
add
add
movzbl
add
mov
add
dec
jne
pop
cmp
mov
jae
sub
mov
sub
mov
mov
inc
dec
jne
pop
pop
pop
ret
add
jmp
push
mov
sub
mov
mov
push
push
xor
inc
mov
mov
mov
shl
mov
mov
shl
mov
push
xor
dec
dec
mov
mov
mov
mov
add
mov
shl
mov
movb
mov
add
mov
mov
mov
mov
mov
mov
je
mov
mov
shr
mov
rep
adc
rep
mov
andl
push
or
pop
mov
movzbl
shl
or
inc
dec
mov
jne
cmpl
mov
ja
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
movzbl
shl
or
shl
inc
mov
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
movzwl
mov
sub
movzbl
sar
add
push
pop
sub
mov
mov
and
shr
mov
shl
mov
xor
inc
add
imul
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
mov
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
add
cmpl
mov
jne
jmp
sub
sub
mov
shr
sub
cmpl
mov
lea
je
cmp
jl
jmp
mov
lea
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
add
jmp
sub
mov
shr
sub
mov
sub
mov
inc
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
sub
sar
add
mov
mov
mov
mov
add
shl
add
cmp
mov
lea
jae
mov
movzbl
shl
mov
mov
shl
or
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
cmpl
mov
je
mov
mov
xor
cmpl
setge
sub
incl
lea
mov
mov
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
movzwl
mov
sub
sar
add
shl
mov
lea
movl
movl
jmp
sub
sub
mov
shr
sub
mov
add
movl
movl
mov
mov
movl
mov
add
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
shll
mov
jmp
sub
sub
mov
shr
sub
mov
mov
inc
mov
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
jge
addl
cmpl
jge
mov
jmp
push
pop
mov
shl
lea
mov
movl
mov
lea
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
mov
inc
decl
jne
sub
cmp
jl
xor
inc
mov
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
mov
sub
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
mov
movl
mov
mov
mov
mov
mov
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
sub
sar
add
shll
mov
mov
jmp
sub
sub
mov
shr
sub
inc
mov
mov
or
mov
shll
decl
jne
jmp
mov
incl
je
mov
addl
cmp
ja
mov
mov
sub
add
mov
decl
mov
inc
inc
cmpl
mov
mov
je
cmp
jb
mov
cmp
jb
jmp
xor
inc
jmp
push
mov
sub
push
mov
movzbl
push
cltd
push
pop
idiv
push
pop
push
push
movzbl
mov
cltd
idiv
mov
mov
mov
mov
mov
add
mov
shl
lea
push
push
call
mov
mov
lea
push
push
pushl
mov
push
add
push
lea
push
call
push
push
pushl
call
mov
pop
pop
leave
ret
add
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
mov
cld
lods
push
mov
shr
and
rep
mov
rep
pop
pop
pop
ret
add
add
clc
pop
add
push
mov
sub
mov
mov
andl
andl
xor
inc
push
push
mov
push
mov
shl
mov
mov
mov
shl
mov
add
mov
shl
dec
dec
mov
add
movb
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
rep
mov
andl
push
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
cmpl
ja
xor
pop
pop
pop
leave
ret
mov
and
mov
mov
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
movzbl
mov
and
push
pop
sub
xor
shr
mov
shl
mov
inc
add
imul
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
je
mov
mov
xor
cmpl
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
xor
movl
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
push
movl
jmp
sub
sub
mov
shr
sub
mov
add
push
movl
pop
mov
mov
mov
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
shll
mov
jmp
sub
mov
sub
mov
shr
sub
mov
mov
lea
mov
decl
jne
mov
xor
inc
mov
shl
sub
add
cmpl
jge
addl
cmpl
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
lea
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
shr
sub
mov
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
addl
cmp
ja
mov
mov
sub
add
mov
decl
mov
inc
inc
cmpl
mov
mov
je
cmp
jb
mov
cmp
jb
jmp
xor
inc
jmp
push
mov
sub
push
push
mov
movzbl
push
cltd
push
pop
idiv
push
pop
push
push
movzbl
mov
cltd
idiv
mov
mov
mov
mov
mov
add
mov
shl
add
shl
push
push
call
mov
mov
lea
push
push
pushl
add
push
push
lea
push
call
push
push
pushl
call
pop
pop
mov
pop
leave
ret
add
je
and
jl
sub
lods
test
je
xor
lea
movsb
cmp
jae
call
jae
call
xchg
call
dec
dec
inc
inc
shl
lods
inc
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
in
mov
mov
push
push
mov
andl
lea
add
test
jbe
lea
shr
inc
mov
shl
mov
push
mov
mov
mov
shl
and
add
xor
mov
shl
add
add
movzbl
add
mov
add
dec
jne
pop
cmp
mov
jae
sub
mov
sub
mov
mov
inc
dec
jne
pop
pop
pop
ret
add
jmp
push
mov
sub
mov
mov
push
push
xor
inc
mov
mov
mov
shl
mov
mov
shl
mov
push
xor
dec
dec
mov
mov
mov
mov
add
mov
shl
mov
movb
mov
add
mov
mov
mov
mov
mov
mov
je
mov
mov
shr
mov
rep
adc
rep
mov
andl
push
or
pop
mov
movzbl
shl
or
inc
dec
mov
jne
cmpl
mov
ja
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
movzbl
shl
or
shl
inc
mov
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
movzwl
mov
sub
movzbl
sar
add
push
pop
sub
mov
mov
and
shr
mov
shl
mov
xor
inc
add
imul
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
mov
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
add
cmpl
mov
jne
jmp
sub
sub
mov
shr
sub
cmpl
mov
lea
je
cmp
jl
jmp
mov
lea
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
add
jmp
sub
mov
shr
sub
mov
sub
mov
inc
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
sub
sar
add
mov
mov
mov
mov
add
shl
add
cmp
mov
lea
jae
mov
movzbl
shl
mov
mov
shl
or
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
cmpl
mov
je
mov
mov
xor
cmpl
setge
sub
incl
lea
mov
mov
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
movzwl
mov
sub
sar
add
shl
mov
lea
movl
movl
jmp
sub
sub
mov
shr
sub
mov
add
movl
movl
mov
mov
movl
mov
add
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
shll
mov
jmp
sub
sub
mov
shr
sub
mov
mov
inc
mov
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
jge
addl
cmpl
jge
mov
jmp
push
pop
mov
shl
lea
mov
movl
mov
lea
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
sar
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
mov
inc
decl
jne
sub
cmp
jl
xor
inc
mov
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
mov
sub
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
mov
movl
mov
mov
mov
mov
mov
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
movzwl
movzwl
mov
shr
imul
cmp
jae
mov
sub
sar
add
shll
mov
mov
jmp
sub
sub
mov
shr
sub
inc
mov
mov
or
mov
shll
decl
jne
jmp
mov
incl
je
mov
addl
cmp
ja
mov
mov
sub
add
mov
decl
mov
inc
inc
cmpl
mov
mov
je
cmp
jb
mov
cmp
jb
jmp
xor
inc
jmp
push
mov
sub
push
mov
movzbl
push
cltd
push
pop
idiv
push
pop
push
push
movzbl
mov
cltd
idiv
mov
mov
mov
mov
mov
add
mov
shl
lea
push
push
call
mov
mov
lea
push
push
pushl
mov
push
add
push
lea
push
call
push
push
pushl
call
mov
pop
pop
leave
ret
add
push
push
mov
mov
cld
lods
push
mov
shr
and
rep
mov
rep
pop
pop
pop
ret
add
add
or
add
inc
add
add
push
out
add
add
add
push
add
push
add
mov
add
daa
add
sbb
add
add
add
add
adc
add
add
add
cmc
add
adc
add
add
incl
lock
add
add
mov
add
add
add
incl
adc
add
adc
add
add
sarl
add
adc
add
adc
add
fadds
add
add
add
add
add
add
add
add
dec
sub
add
add
add
add
add
add
call
pop
sub
lea
mov
add
sub
cld
mov
mov
mov
add
lea
lods
stos
lods
stos
lods
stos
lods
stos
nop
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
lea
push
call
push
push
call
mov
test
je
call
test
je
dec
mov
mov
push
push
push
push
call
mov
call
push
call
lea
test
jne
push
call
push
call
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
test
jne
test
je
push
push
mov
xor
nop
nop
nop
movzwl
mov
add
cmp
jge
mov
inc
nop
nop
nop
nop
nop
nop
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
nop
nop
nop
add
add
inc
jmp
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
movzwl
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
mov
push
push
push
movzwl
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
movzwl
test
je
push
push
mov
sub
mov
add
lea
cmpl
jne
push
call
mov
lea
lods
add
stos
lods
add
stos
lods
add
stos
jmp
xor
add
je
add
pushl
call
pop
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
lea
xor
add
je
add
xor
mov
mov
add
cmp
ja
add
dec
jne
sub
mov
and
jne
mov
add
mov
mov
push
lea
push
push
push
push
call
xor
add
je
add
mov
test
je
push
call
mov
add
jmp
add
jmp
pop
lea
push
pushl
pushl
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
add
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
insl
jae
bound
add
in
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
jne
xor
dec
pop
pop
pop
leave
ret
push
mov
lea
xor
add
je
add
je
cmp
jae
add
cmp
jne
inc
inc
jmp
pop
jmp
call
mov
mov
movb
inc
test
jne
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
push
mov
test
jne
mov
add
movb
inc
movb
inc
mov
movb
inc
test
jne
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
add
mov
shr
shl
push
lea
push
push
push
push
call
mov
test
je
sub
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
pop
sub
jmp
dec
daa
insl
and
jb
jns
and
jae
popa
jo
insb
imul
and
insb
insb
and
je
jb
outsb
and
imul
sub
imul
imul
add
je
lea
push
push
push
push
call
push
call
pop
pop
pop
ret
pop
pop
cs
push
dec
inc
inc
add
pop
dec
push
dec
inc
inc
add
in
add
push
push
push
mov
add
lea
xor
mov
add
mov
call
pop
sub
lea
push
push
push
pushl
call
xor
mov
mov
xor
rep
dec
jne
pop
pop
pop
leave
ret
add
push
call
pop
sub
push
push
push
push
push
push
lea
push
call
inc
jne
push
push
push
push
push
push
lea
push
call
inc
je
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
jo
insb
imul
and
jb
jb
inc
jo
insb
imul
and
jb
jne
je
add
and
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
add
pop
add
repnz
add
jne
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
gs
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
jae
bound
addr16
jb
jae
outsb
je
inc
jb
popa
je
inc
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
and
adc
and
adc
and
adc
add
pop
and
adc
add
add
pop
add
andb
adc
pop
add
lret
pop
add
xlat
pop
add
add
add
enter
ljmp
adc
