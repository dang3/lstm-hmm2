and
gs
cli
push
jp
loope
pop
outsb
pop
dec
jbe
cld
fsubrl
out
gs
movswl
push
mov
mov
push
xchg
dec
adc
je
pop
dec
out
pop
push
das
lret
jmp
or
imul
aas
jge
xchg
inc
push
mov
cmpb
sbb
sub
mov
adc
xchg
shl
daa
sub
fs
int
adc
xchg
fnstenv
dec
cli
jge
fisttpll
pop
push
ja
push
cmp
imul
mov
insb
sahf
xchg
jo
vmovlps
idiv
jmp
jge
push
mov
addl
add
nop
adc
push
call
pop
and
add
add
add
call
mov
mov
add
jmp
nop
jmp
faddp
fiadds
notb
cmpsl
imul
psubsb
adc
daa
push
inc
add
ficoml
inc
sub
mov
movsl
jbe
jns
lret
in
sahf
mov
or
push
arpl
aad
jmp
push
stc
mov
lcall
cli
push
push
and
jbe
aad
push
fcoml
stos
in
mov
test
xchg
ss
jne
out
or
mov
cwtl
jns
dec
outsl
sub
push
int
pop
cmp
push
inc
outsb
push
inc
pop
xor
cmp
mov
sub
sub
sub
sub
sub
push
push
push
or
xor
and
mov
call
pop
sub
sub
mov
call
mov
shr
mov
mov
mov
test
je
add
xor
stos
inc
loop
push
push
push
push
push
mov
call
add
mov
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
lea
push
mov
add
push
pop
rep
pop
mov
mov
mov
mov
push
push
push
push
push
call
pop
test
jne
push
push
push
push
call
test
je
mov
mov
mov
mov
add
rep
mov
add
movzbl
lea
push
push
pop
rep
pop
mov
test
je
push
mov
add
mov
mov
mov
add
rep
pop
dec
jne
mov
sub
je
mov
mov
add
mov
test
je
add
mov
test
je
lea
shr
lea
movzwl
push
mov
shr
mov
and
add
add
pop
dec
jne
mov
shr
jmp
dec
jne
movzwl
add
jmp
dec
jne
add
inc
inc
loop
add
jmp
mov
test
je
mov
add
mov
test
je
mov
add
mov
mov
test
jne
mov
add
mov
add
push
mov
call
test
je
mov
mov
mov
test
je
test
je
and
jmp
add
inc
inc
push
push
mov
call
mov
mov
addl
addl
jmp
add
jmp
mov
mov
mov
mov
mov
cmp
je
push
push
push
call
pop
test
jne
mov
add
mov
add
test
je
xor
push
push
pop
repz
pop
je
mov
add
mov
sub
jb
cmp
jbe
add
jmp
push
lea
push
push
call
lea
push
push
pushl
pushl
call
test
je
push
mov
lods
test
je
sub
add
stos
jmp
lea
push
pushl
pushl
pushl
call
pop
jmp
mov
cmp
jne
mov
mov
add
mov
add
mov
cmpl
jne
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
pop
pop
pop
leave
ret
movl
movl
movl
movl
ret
faddp
faddp
ret
mov
add
add
and
adc
sbb
dec
hlt
in
add
mov
cmp
mov
stos
pushf
pop
adc
pop
stc
loopne
add
sub
gs
sbb
and
sub
popf
imul
push
sbb
aam
ret
push
sub
dec
in
adc
imull
pop
loopne
imul
mov
bound
xchg
xor
cmp
jns
outsl
fisubrs
divb
jb
jbe
mov
xor
imul
pushf
cwtl
jl
sub
movsb
and
push
dec
jg
repz
inc
cmp
ds
push
mov
jb
mov
pop
cmp
sbb
push
and
scas
lods
int3
inc
sub
shll
jp
mov
push
les
clc
xchg
push
sub
mov
les
push
jae
dec
mov
sbb
pop
mov
ffreep
mov
mov
andb
push
cmp
pop
push
test
pop
cld
stc
mov
xchg
stc
sub
std
cld
mov
xchg
jmp
fwait
adcl
adc
mov
mov
cmp
int3
repz
lret
icebp
dec
rolb
push
outsl
addr16
and
pop
and
adc
jo
movsl
push
push
push
ds
nop
push
movzbl
ror
ja
push
push
rol
pop
pop
sub
cmc
nop
loop
pop
push
call
fistpll
ds
lret
push
sub
push
loopne
inc
cld
sarl
mov
aaa
sub
pop
push
popl
loop
jecxz
xchg
or
jle
jle
cmp
pop
clc
push
mov
pop
mov
movl
jp
cmp
loop
jecxz
test
mov
imul
inc
ret
inc
jb
cmp
jp
push
xor
pop
ja
push
cmp
pop
jne
ror
nop
nop
mov
movl
loop
jecxz
ret
sahf
fwait
mov
ret
into
pop
mov
enter
add
add
and
add
clc
xor
je
clc
sub
loop
jecxz
mov
lock
sbb
sbbb
jle
or
nop
cmc
stc
cld
push
call
mov
and
or
rcr
xor
xchg
jp
dec
and
pushf
inc
jp
std
mov
rorb
xchg
icebp
dec
adc
fiaddl
outsb
pop
pop
call
and
cmp
cmp
jo
push
and
pop
add
push
add
mov
inc
inc
inc
inc
test
push
push
jl
xor
pop
pop
ror
jl
push
push
mov
pop
pop
jb
ja
jge
push
inc
dec
pop
and
push
test
pop
push
mov
pop
clc
cmp
rol
push
add
push
pop
pop
jmp
jb
std
mov
push
mov
cld
fldt
add
pusha
xchg
int3
or
sub
fwait
outsl
aam
sbb
incl
add
cmp
or
dec
and
lret
cmp
inc
in
clc
outsb
and
or
jmp
pop
cltd
xor
movsb
jp
addl
pop
add
loopne
and
cltd
fldcw
add
push
pop
pop
push
push
ja
xor
pop
pop
sub
jae
jns
mov
push
ja
cmp
pop
nop
xor
add
jmp
dec
mov
and
xor
push
into
imul
push
sub
xchg
sarl
sahf
jo
or
inc
adc
jge
jb
mov
cmp
push
ret
shr
test
jne
jmp
test
jmp
lods
cmpl
in
push
leave
stc
mov
nop
adc
ljmp
dec
movsb
cmpsl
std
pop
cli
popf
jmp
xchg
mov
xchg
or
adc
jp
in
push
pop
add
pop
fwait
lahf
stos
push
ja
dec
test
sub
or
out
push
xor
mov
pop
cmp
aas
and
out
push
sub
sbbl
add
push
jl
push
xchg
pop
pop
clc
xor
jmp
cmc
pop
orb
or
adc
repnz
sub
out
aam
inc
sbb
and
imul
mov
ss
test
imul
mov
pop
jl
cmpsl
mov
push
mov
xor
push
sbb
mov
mov
outsl
mov
cmp
or
ret
int3
pop
push
pop
xchg
pop
jmp
icebp
cmp
insb
std
and
adc
jns,pt
in
shll
push
add
and
dec
stc
daa
push
cwtl
insb
imul
insl
and
dec
sbb
push
cs
mov
in
or
imull
in
lock
lcall
jne
sub
xchg
inc
shll
xor
push
mov
and
dec
ss
stos
popa
xchg
cld
mov
jecxz
inc
jl
stos
out
cmc
add
mov
adc
dec
lahf
and
xchg
adc
ja
fcoms
push
pop
add
pop
jae
or
loop
jecxz
or
mov
call
or
cli
or
inc
mov
jmp
mov
xor
jmp
inc
idivl
inc
aam
push
sub
ja
inc
sbb
stc
xchg
and
mov
daa
adc
xor
push
test
pop
jl
push
sub
cmp
mov
mov
push
testb
sub
push
rcll
cmpsl
dec
xor
mov
sub
ja
pop
mov
jg
inc
and
push
dec
pavgb
arpl
adc
push
inc
mov
cwtl
add
cmp
iret
mov
hlt
and
scas
dec
jne
push
call
arpl
xchg
test
bound
add
dec
ss
inc
outsb
loope
jle
in
or
xchg
or
cmpsl
add
mov
push
aam
psubsw
imul
sbbb
cmpl
movsl
jmp
daa
rcll
or
inc
in
lods
mov
jae
les
pop
jno
popa
push
test
jecxz
and
pop
xor
jae
sbb
jp
cmp
mov
sub
add
int3
sbb
test
lods
and
push
popf
sbb
stos
outsl
fdivl
cltd
cli
mov
xchg
jne
xorl
call
shl
xchg
lds
mov
shl
pop
xchg
cmp
xor
sbb
lret
outsb
vcvttpd2dqy
out
test
aas
mov
les
ret
test
rol
stc
stc
mov
xor
jp
cmp
xchg
cmpsl
aad
cmpsl
imul
rcrl
rorb
inc
sub
call
mov
adc
dec
adc
daa
mov
push
inc
fwait
scas
inc
add
pushf
add
lods
in
push
rorl
sahf
mov
xchg
out
in
cmp
ret
faddl
bound
add
push
hlt
clc
shlb
pop
loope
dec
fs
jmp
push
xorl
out
movsl
out
xchg
movsl
jbe
enter
xchg
pop
stos
test
dec
shll
js
cmpb
clc
mov
mov
adc
in
mov
cs
aaa
subb
imul
sub
adc
stc
hlt
pop
mov
adc
xor
out
push
arpl
scas
arpl
in
or
or
xorl
mov
aam
lock
dec
and
pop
outsb
jmp
sbb
push
jmp
push
clc
inc
push
les
sub
mov
aaa
cli
push
loop
lods
loop
mov
inc
mov
jne
mov
jecxz
sbb
mov
push
leave
dec
lods
fldcw
test
sub
push
idiv
push
mov
push
and
cmpb
add
daa
iret
mov
fs
gs
sti
mov
fcoml
in
ja
mov
cmp
lods
pop
fildll
lret
mov
inc
mov
or
pop
test
and
pop
xor
mov
jno
out
push
out
adc
xchg
lcall
adc
adc
jecxz
scas
and
aaa
and
inc
jle
dec
xor
dec
sbb
lret
push
jno
jne
dec
data16
out
aaa
call
ds
inc
aas
or
xchg
or
lea
push
fidivl
scas
pop
sub
mov
andl
xchg
adcb
dec
outsl
cmp
pop
and
inc
in
mov
push
aaa
mov
int
add
pop
mov
mov
std
dec
sub
push
sub
inc
sbb
outsb
push
sub
push
inc
pop
pop
inc
pop
out
fwait
pop
xor
mov
add
add
sbb
call
adc
sti
lcall
push
fcompl
push
mov
loop
andl
in
ret
jo
inc
jno
leave
sub
fsubr
jo
inc
jno
leave
sub
fsubr
jo
inc
jno
ror
in
inc
fsubr
jo
inc
jno
mov
fsubr
jo
inc
jno
mov
lods
push
push
and
or
fmul
decl
add
pop
addr16
mov
mulb
testl
mov
dec
mov
loop
mov
sahf
mov
mov
add
sar
int3
gs
int3
shrl
and
adc
mov
icebp
leave
inc
repnz
dec
adc
daa
lret
xchg
daa
push
hlt
jg
inc
fsubrl
add
mov
push
roll
mov
sub
fisubl
push
pop
xor
lods
adc
insb
inc
mov
pop
sub
mov
xor
mov
arpl
add
push
pop
mov
cmpsb
out
movsl
xor
jbe
inc
iret
aad
adc
sarb
int
and
fbld
loopne
addr16
xchg
xchg
sbb
sti
insb
inc
aaa
lds
add
out
fidivrl
push
dec
ja
dec
and
jns
xchg
scas
inc
xchg
push
jns
push
arpl
scas
arpl
in
cmp
sti
cmp
je
adc
and
bound
jmp
cmpsb
jns
sbb
loop
lea
test
stc
mov
pop
pop
stos
mov
mov
push
rclb
sub
cwtl
xchg
jne
dec
mov
inc
push
add
push
cltd
push
adc
ret
and
fidivs
popl
dec
mull
inc
add
push
faddl
pop
pop
pop
or
sarb
stos
daa
adc
mov
add
push
xchg
out
outsl
add
cmp
and
mov
out
sub
cmc
ds
lret
pop
mov
dec
pop
mov
stos
jnp
shrb
rorb
pop
pop
jle
test
jb
push
jnp
push
pop
mov
xchg
mov
or
dec
and
add
repz
mov
bound
mov
jl
cmpsb
dec
daa
push
sub
imul
daa
push
cmp
mov
mov
stc
or
push
fnstcw
movsl
xchg
jo
inc
sti
in
testb
or
pop
push
insb
fsubrl
mov
mov
xchg
ss
add
mov
mov
daa
and
into
fwait
mov
cmp
xor
stos
ljmp
jp
cmpl
scas
inc
mov
out
out
cltd
mov
jae
xor
icebp
xor
test
hlt
and
jl
pop
pop
dec
xchg
pop
lock
jmp
pop
adc
push
mov
xlat
mov
inc
ljmp
sahf
stos
test
mov
cmpl
or
jbe
cmpl
jge
jb
addr16
addr16
xchg
leave
push
cmpsb
fldenv
repnz
xor
and
cmp
jp
lret
sbbl
jg
pop
push
call
cmpb
cmp
fnstsw
ds
jae
inc
xchg
mov
xlat
sti
aad
loop
adc
adc
sub
mov
add
cmp
iret
push
sub
faddl
or
inc
xor
lret
fwait
mov
pop
stos
sub
or
insl
fdiv
mov
xchg
xor
add
or
pop
inc
fsubl
movsl
iret
daa
adc
rcll
pop
lock
inc
jns
fwait
les
stos
jb
push
sahf
xchg
or
aad
and
cmp
mov
mov
lahf
xor
mov
jns
adc
pop
mov
dec
sub
push
cmp
lods
inc
sar
push
in
push
insb
andb
xor
xor
sub
add
mov
outsb
jae
mov
push
sub
sub
icebp
imul
insl
xchg
pop
in
inc
das
pop
jb
sub
jl
loopne
fnstcw
push
push
bound
loop
int
mov
pop
aam
es
mov
xor
xchg
mov
and
aaa
call
scas
nop
sub
push
ss
cmp
xchg
jle
mov
scas
xor
pop
cmp
cs
cs
cmp
in
repz
cmp
lret
insb
inc
adc
mov
test
mov
and
insl
push
enter
push
pop
movd
jns
mov
sti
or
divl
lret
add
subl
ss
push
push
movsb
repnz
and
test
mov
ffreep
std
add
sti
mov
insl
icebp
sub
leave
xchg
mov
stos
aam
and
mov
adc
jnp
popa
push
fwait
mov
add
ss
add
inc
popa
or
inc
imul
push
repnz
andb
jp,pn
adc
or
out
sbb
jae
and
mov
xor
dec
xor
flds
cmp
mov
in
mov
xor
jae
call
or
mulps
movsb
test
lock
pop
pop
cmpsb
mov
mov
fisubl
pop
or
adc
fisttps
js
pop
aas
mov
mov
xlat
ss
xchg
rorl
inc
imul
lret
aam
xchg
add
inc
rorb
mov
push
or
push
jbe
pushf
xor
stos
shlb
mov
and
xor
jae
jl
pop
inc
inc
xchg
adc
inc
jecxz
adc
dec
dec
aaa
and
sub
test
cwtl
daa
scas
sub
push
sub
call
sbb
iret
movsl
push
inc
xor
scas
xlat
mov
jl
fwait
jbe
data16
mov
cmp
pop
fnstenv
or
push
mov
imul
cli
jbe
clc
xor
push
jecxz
je
in
push
test
popa
adc
bound
loop
out
std
sbb
test
mov
fidivrl
fsubl
jmp
aaa
push
mov
push
imulb
xchg
pusha
mov
add
cmc
pop
lcall
push
sub
ds
xchg
out
stos
xor
mov
sbb
shll
pop
dec
or
dec
sarb
xchg
xlat
addl
imul
and
stos
lahf
fwait
dec
add
and
frstor
sub
shr
pusha
xchg
xchg
push
test
dec
ret
dec
push
or
nop
es
add
mov
lods
in
iret
mov
inc
jnp
ds
insl
dec
mov
clc
stos
outsl
xor
xchg
repz
lods
movsb
fisubs
inc
ss
lock
call
push
fucomi
aam
movl
inc
jae
cltd
daa
data16
movsb
lahf
lret
sub
ds
mov
leave
push
insl
jmp
jbe
in
mov
icebp
testl
cmpsl
lods
mov
cmc
cmpl
jo
aas
imul
aaa
or
pop
push
jmp
pusha
jle
sub
mov
ljmp
mov
dec
cmp
mov
mov
out
push
out
int3
push
and
jp
adcb
and
lock
repz
cs
test
cmc
movsl
adc
stos
jns
insl
lds
jmp
cmp
ljmp
pushf
lock
push
shlb
push
dec
fcomps
mov
adc
dec
shll
xchg
or
clc
mov
cmpsb
adc
jle
sbbl
push
and
pcmpgtw
cli
cwtl
movsl
lea
push
jo
xor
sti
cli
repnz
cmp
inc
xor
add
scas
cs
xchg
fs
mov
lds
mull
hlt
cmp
cmp
mov
pop
test
mov
xchg
adc
sub
push
lret
ret
sub
xchg
jle
out
jl
push
and
icebp
test
cmp
and
daa
xchg
into
test
xchg
stos
dec
jbe
or
mov
loopne
mov
outsb
inc
popa
leave
jl
jp
xchg
and
xor
cltd
jne
out
fldenv
out
lahf
mov
insl
push
push
data16
mov
xor
push
aaa
repz
scas
fs
pop
jmp
out
xor
rcl
pop
loope
mov
dec
or
pop
mov
pavgw
das
mov
mov
adc
stc
xchg
fdivrs
adc
mov
mov
jle
pushf
cld
jo
inc
andl
test
bound
popa
or
hlt
cmp
pop
xor
subl
data16
das
lods
bound
insb
inc
fcomps
mov
cli
mov
xchg
lret
movsb
jl
mov
shrb
ficompl
xor
adc
int
test
sbb
enter
inc
cmp
icebp
pop
jmp
scas
jecxz
cwtl
jle
inc
sbb
and
fildll
dec
sbb
and
enter
test
jg
scas
xchg
fildl
mov
jns
push
imul
cmc
add
mov
mov
int3
mov
xor
or
push
js
jl
push
push
fucomp
dec
add
cltd
inc
repz
mov
push
in
push
out
mov
out
dec
lcall
fnstenv
test
or
xchg
outsl
cmp
inc
jbe
push
push
mov
push
push
mov
hlt
jl
movsb
adc
cmpsl
xor
xchg
push
lods
fs
push
inc
sub
out
imul
fidivl
push
scas
int3
sbb
add
mov
jno
aaa
push
mov
fildll
leave
arpl
push
inc
cbtw
icebp
bound
inc
add
mov
pop
and
adc
mov
mov
or
xor
std
sub
mov
add
fsubrs
mov
orb
push
in
sub
lock
cmp
mov
and
dec
jnp
sbb
xor
insb
push
mov
mov
xlat
sti
jae
fimuls
loope
mov
pop
in
cmp
mov
mov
fistpl
dec
jnp
cmp
sub
jle
sub
xor
and
pop
mov
bound
inc
or
mov
add
mov
mov
pop
scas
adc
mov
mov
push
add
rcrb
mov
ret
pop
pop
adc
mov
in
aaa
cmp
popf
pop
lcall
jnp
rcll
xor
sbb
jno
dec
dec
ljmp
xlat
jmp
imul
fdivl
and
out
add
or
xchg
in
dec
cmp
dec
mov
call
add
cmpsb
adc
push
mov
xor
cmc
xchg
xor
es
pop
dec
std
jge
ss
jb
lcall
inc
mov
addr16
loop
into
xor
adc
adc
xor
inc
add
in
push
std
adc
rclb
push
cmp
int3
clc
xor
cmp
ret
push
rol
lret
or
cld
loope
roll
adc
jo
imul
aam
sti
push
fs
cmc
popa
and
and
jg
push
mov
adc
mov
sbb
pop
xchg
add
jmp
scas
push
xchg
scas
cmp
iret
push
sti
aad
mov
push
dec
xchg
ffree
dec
cld
adc
cwtl
sbb
jmp
sbb
test
imul
push
and
mov
add
enter
push
inc
andb
fldcw
cmpsb
xchg
add
subb
mov
bound
push
jmp
and
pushf
stos
stc
xor
andb
sbb
sub
in
add
ds
addr16
xchg
mov
xor
and
sbb
cltd
sub
and
add
fldcw
jb
out
push
mov
cs
pop
icebp
in
sbb
rorl
enter
adc
jb
jbe
xor
push
es
movsl
xchg
movsb
test
add
mov
loop
fdivrs
test
rorl
ret
test
loopne
mov
or
mov
in
scas
jge
int
mov
repz
and
pop
stos
or
add
jge
into
stc
or
lahf
add
je
out
add
cmp
cli
movsb
shlb
addb
or
aam
xchg
pop
repz
xchg
sbb
arpl
lods
inc
test
dec
aas
cmp
inc
jns
inc
and
ljmp
filds
out
in
add
xchg
filds
xor
lret
fs
dec
sub
mov
cs
lods
jnp
mov
xchg
add
stc
mov
sub
cltd
lds
mov
stc
movsl
jno
push
test
je
xor
not
imul
out
pusha
mov
inc
hlt
movsl
adc
mov
pop
add
outsb
ficoms
popa
pop
loope
pop
jmp
clc
sar
rcrl
aam
je
mov
adcl
test
loopne
mov
adc
test
fcompl
pop
pop
jl
fwait
aaa
mov
xchg
mov
or
dec
iret
aad
mov
das
dec
addr16
icebp
sti
call
cmp
shlb
imul
sahf
add
mov
push
out
cmp
xchg
test
jns
xchg
cmpsl
idivb
imul
aam
mov
push
js
jg
insb
test
push
scas
or
adc
decl
cmc
jns
insl
push
out
adc
mov
ficompl
lods
pusha
mov
sahf
pop
loopnew
sarl
xchg
pop
nop
xchg
xchg
push
jmp
stos
in
push
cli
adc
adc
pop
or
lcall
inc
mov
lds
or
and
shl
int
movsb
movsb
enter
xchg
lds
sbb
lds
push
fisttpll
sbb
lahf
addr16
inc
cld
jecxz
xchg
iret
in
shlb
ljmp
xchg
mov
push
scas
addr16
pop
add
add
mov
mov
xchg
sbb
outsb
leave
icebp
adc
stos
mov
cli
stc
repnz
mov
mov
xchg
data16
xor
xchg
aas
rcl
fwait
lock
sub
adc
bound
div
and
pop
pop
stos
mov
ljmp
lret
aas
gs
negl
or
scas
jo
inc
pop
dec
ficoms
pop
popf
cmp
mov
dec
pop
cmp
xor
cltd
push
xor
push
jne
mov
mov
xchg
scas
mov
sub
cmp
sub
add
inc
inc
enter
in
or
cld
insb
pop
or
mov
cmc
xor
mov
pop
push
mov
inc
roll
mov
dec
cwtl
cmp
mov
loope
xor
repnz
and
dec
imul
push
pop
rcrl
lcall
push
jp
lds
push
mov
daa
cmp
imul
xchg
lea
test
js
and
out
adc
sahf
ljmp
or
xor
mov
or
fdivrs
inc
dec
cmpsl
mov
cmp
sub
cmpsb
sub
jl
xchg
adc
std
lea
fs
or
push
mov
dec
out
ficomps
pop
jecxz
mov
pop
xchg
mov
or
ret
aas
dec
lret
xor
int
cmpsb
pop
dec
or
push
and
xor
lods
or
mov
sub
test
adc
fcmovu
rclb
mov
shll
data16
xorb
pop
pop
push
ss
fnsave
xchg
in
lds
neg
mov
scas
icebp
dec
into
pop
push
adc
repz
mov
mov
aad
ds
add
mov
cli
dec
xor
and
xchg
fcomi
dec
in
dec
push
pop
push
mov
movsb
xchg
xor
and
xchg
and
push
cwtl
mov
and
or
push
jmp
je
and
add
xlat
push
xchg
jp
push
mov
sub
hlt
movsb
sub
or
xchg
cmp
sub
fwait
sbb
das
test
cld
daa
subl
xor
adc
cmp
xlat
movsl
jecxz
fbstp
push
ss
or
jge
or
cs
jg
jae
cld
or
aad
faddp
pop
lcall
cmpsb
xor
mov
cltd
int
sahf
hlt
pusha
fstpt
push
roll
mov
xor
dec
sbb
rcl
push
addr16
jnp
or
or
sbb
push
loope
push
jl
sbb
shll
and
cmp
icebp
sub
shrb
and
push
cld
xchg
scas
mov
jle
adcb
mov
mov
sub
sbb
dec
out
add
add
jbe
hlt
mov
sub
dec
pop
xor
mov
xor
ss
add
hlt
sbb
xchg
jo
aaa
lods
mov
notb
cwtl
imul
test
lock
jns
popa
mov
aas
lods
rcrl
mov
in
fs
add
mov
out
sarl
mov
sub
adc
and
movsl
mov
mov
or
and
movsl
jge
cmove
xchg
lods
dec
jl
sti
xchg
loopne
xchg
lcall
stc
mov
ja
xlat
das
icebp
dec
mov
shll
in
inc
arpl
js
mov
mov
inc
sub
adc
arpl
sbb
in
mov
movd
adc
dec
out
cmp
push
push
mov
movsb
or
rcr
adc
dec
fsubl
ja
out
insl
popf
pop
push
mov
jl
repnz
stos
xchg
add
fs
or
push
imul
jle
pushf
and
push
sbb
int
sub
int
sbb
movsl
sub
xlat
sbb
cltd
or
adc
iret
test
shll
jns
daa
in
lcall
sub
inc
fsts
or
dec
ret
cli
roll
ret
mov
xor
in
or
pop
sbb
fsubrl
mov
repz
add
daa
scas
sbb
test
push
in
sub
outsb
jmp
inc
jbe
stc
fcoms
and
dec
icebp
fadd
sub
mov
rorb
fisubrs
daa
mov
xchg
mov
test
cmc
ja
divl
pop
sub
pusha
and
std
sbb
insb
mov
arpl
pop
push
sarb
jge
inc
idivl
pusha
xchg
xor
pop
arpl
jmp
shrl
bound
cmp
imul
xchg
ja
hlt
stc
fstps
stos
setb
scas
dec
pop
shrb
adc
aam
fistpl
out
in
xlat
jl
pop
jno
adc
pop
sbb
mov
ljmp
mov
mov
pushf
jmp
test
enter
pop
mov
sbb
or
push
icebp
dec
sbbl
push
mov
pop
jnp
mov
cli
lds
push
in
xchg
test
sahf
lret
ret
bound
pop
push
js
dec
insb
mov
or
into
sub
cmp
mov
xor
in
gs
xchg
out
jnp
sti
cld
leave
ljmp
ret
divb
dec
and
jae
or
fwait
test
adc
mov
cmpsl
data16
ja
pop
pop
loopne
pop
enter
outsb
pushf
mov
dec
imul
mov
dec
lret
gs
or
adc
icebp
lcall
cmp
in
mov
push
popf
or
aam
out
addr16
int3
cmp
inc
mov
outsb
bound
adc
lods
insl
and
or
mov
mov
add
cmc
and
add
jle
mov
out
jecxz
test
bound
lods
pop
and
scas
lods
inc
sub
and
sub
dec
sub
out
ficoms
stos
xchg
pop
lcall
cmp
pop
lock
xlat
fcom
icebp
sti
shll
xchg
sub
sbb
std
repnz
rclb
push
movsb
out
pop
mov
pop
lea
cmp
imul
leave
hlt
adc
lods
dec
sbb
cmc
push
mov
es
inc
push
frstor
sbb
jp
xor
pop
and
xchg
les
lret
mov
xchg
out
arpl
mov
into
sahf
std
mov
cmp
jae
cli
cli
insl
or
sidtl
icebp
and
into
in
out
mov
mov
mov
xor
mov
and
insl
xchg
ja
pop
out
inc
pop
jle
dec
sub
hlt
pop
jo
sbb
push
mov
add
rclb
mov
ja
mov
or
je
mov
push
mov
das
jle
jl
gs
sub
jno
shlb
insb
add
mov
mov
clc
add
add
jge
dec
hlt
pop
aad
das
push
les
rorl
hlt
in
dec
incb
xor
xor
daa
mov
shlb
sbb
xor
test
inc
and
outsb
sub
jge
cmp
dec
dec
pop
lods
in
decb
xchg
sahf
add
ja
xor
jl
cmp
bound
pop
bound
or
ret
int3
fstpt
lret
rcrl
cmp
inc
lds
clc
gs
mull
paddsw
and
adc
cwtl
push
aad
aaa
test
bswap
mov
ret
faddl
arpl
inc
xor
ljmp
push
inc
shlb
or
or
popa
aam
pusha
fidivs
orl
stc
mov
mov
add
cld
lcall
adc
push
push
mov
in
sub
pop
cmpsb
push
sub
or
mov
mov
test
mov
mov
cmpb
insb
add
mov
mov
aaa
pop
xchg
popa
inc
arpl
movsl
int3
movsb
push
sub
scas
jmp
pop
xchg
and
and
sub
lods
stc
int
cmp
mov
es
adc
xor
ret
scas
orb
ficompl
cmpl
into
ret
or
sbb
lds
jne
nop
adc
pop
jbe
cmpsl
and
aad
sbb
mov
xor
test
shrl
cmp
arpl
cli
adc
cmp
xchg
push
int
ja
sbb
jl
lret
in
add
sub
shlb
xchg
enter
lods
and
mov
dec
pop
mov
outsl
push
and
push
pop
dec
sub
inc
cld
in
and
and
jge,pt
jmp
sbb
lahf
mov
sbb
mov
hlt
dec
outsl
cmc
inc
das
push
add
sbb
nop
and
sbb
xchg
scas
mov
sahf
mov
ja
scas
push
fcmove
fsubrl
mov
dec
insb
inc
shlb
jae
mov
dec
dec
test
bound
adc
inc
mov
sbbb
mov
repnz
sub
jne
outsb
dec
aas
test
jecxz
mov
mov
loope
adc
sbb
adc
xor
cmp
cmp
xchg
rorl
mov
pushf
jle
and
pop
and
std
shrl
inc
das
nop
insl
gs
lock
jg
push
js
pushf
fcoms
addr16
dec
adc
pusha
and
lcall
bnd
pop
jecxz
sbb
ljmp
cmc
jmp
imul
push
cltd
inc
add
sti
dec
hlt
in
pushf
into
mov
iret
adc
xchg
paddsw
xor
cmpl
push
jno
outsb
or
dec
inc
shrl
cs
aad
push
jae,pt
xchg
and
mov
xchg
scas
fdivrp
jecxz
fwait
pop
imul
push
fnstcw
push
scas
add
adc
enter
xchg
jbe
push
jno
in
sahf
faddl
jg
call
sbb
pop
cli
sar
outsb
arpl
mov
out
ljmp
in
movsl
mov
cs
cmpsb
jo
popa
inc
or
outsl
pushf
mov
sbb
aaa
push
inc
repz
stc
or
lret
xor
dec
addr16
into
mov
popa
pop
lods
push
int
xchg
lahf
dec
arpl
or
pop
fildl
ret
decl
mov
push
andb
scas
dec
jmp
and
mov
push
ret
js
pushf
sbb
in
movsb
xor
sbb
rorb
std
in
cmp
je
fisttpl
jno
ja
jecxz
subl
or
call
inc
add
lds
inc
push
inc
mov
movsl
pusha
pushf
jb
jle
nop
ds
mov
imul
imull
iret
fstpt
out
dec
inc
adc
dec
push
add
push
mov
mov
ja
pop
movsl
popa
adc
das
sub
cmpsb
mov
andl
mov
mov
stos
push
pop
cltd
fldt
add
adc
rclb
xchg
movsb
int
mov
push
and
shlb
jns
fcmovu
jl
dec
data16
cmp
adc
xchg
es
roll
jno
iret
arpl
add
mov
popa
adc
lds
cltd
push
loope
cltd
iret
and
insb
mov
mov
jle
int3
inc
sbb
out
insl
out
fstl
daa
or
dec
xor
aas
enter
lods
int
sbb
sbb
xchg
sbb
mov
push
add
cmp
psllw
mov
xchg
dec
mov
addr16
aad
lods
out
outsl
call
inc
pop
jmp
push
es
jns
mov
jecxz
dec
popf
jbe
sub
xorl
pop
lds
jno
pop
adc
jmp
inc
subl
dec
push
mov
mov
cli
sub
add
sarb
pop
push
jmp
push
cmpl
dec
sbb
dec
pop
testl
notb
ja
sbb
mov
ds
loopne
and
popf
ja
enter
daa
ficompl
inc
inc
repz
dec
mov
int
mov
pop
cli
cmc
andl
aam
pop
lahf
stc
push
pop
cmp
sti
xorb
mov
mov
jb
push
js
pop
data16
iret
or
into
push
out
test
add
outsb
or
and
xchg
in
mov
sub
inc
fnstsw
add
scas
jmp
outsb
sbb
ja
data16
xchg
cmp
lret
popf
shr
add
gs
dec
adc
or
jne
out
add
push
in
mov
ror
fcomps
mov
jbe
adc
fldcw
sub
push
shll
movsl
jns
xchg
dec
sbb
les
push
cmpsl
xchg
insb
fnstsw
mov
xchg
cli
test
inc
xchg
mov
adc
cltd
cmpsl
mov
mov
xlat
jecxz
cmpsl
pop
mov
imulb
sbb
push
push
ret
fdivl
rclb
mov
add
lea
arpl
push
inc
and
xlat
mov
mov
push
mov
sahf
lods
xor
enter
pushf
mov
cld
scas
jmp
push
jne
das
push
js
xor
pop
or
int3
leave
mov
cmpsb
enter
dec
dec
pusha
stc
mov
sahf
or
enter
cs
fs
lahf
cltd
out
push
repnz
push
cltd
push
frstor
or
adc
mov
out
insb
xor
push
insb
arpl
pop
bnd
flds
es
pop
cwtl
repnz
repz
mov
lahf
mov
xor
add
dec
xchg
push
out
jmp
jmp
mov
fwait
pop
nop
mov
jae
je
lods
insl
add
test
imul
mov
je
fdivrl
jecxz
push
lds
and
ja
or
mov
fsubrl
sahf
mov
test
fwait
enter
clc
stos
jae
aam
or
mov
xor
das
cmc
js
mov
aas
jl
or
lahf
push
and
mov
test
notb
mov
inc
cmp
mov
mov
add
xchg
adc
cmp
ret
inc
fwait
ja
out
xchg
cmpsl
lds
popf
push
sbb
mov
inc
stos
jp
jns
inc
idiv
push
dec
stos
out
mov
dec
dec
dec
mov
push
fisubrl
lock
push
into
jbe
push
adc
mov
mov
loopne
mov
push
xchg
mov
stos
gs
mov
leave
pop
outsb
insl
shll
scas
fmull
sub
je
push
sti
or
adcl
incb
inc
jl
adc
mov
sti
cwtl
mov
sbb
out
loopne
add
out
xchg
imul
mov
jle
data16
outsl
mov
bnd
and
test
add
mov
pop
sub
or
xchg
dec
and
or
add
add
cmp
jo,pt
pop
cmp
dec
xchg
icebp
out
or
sub
das
sbb
dec
adc
pop
fidivrl
cli
fucomi
repz
shl
shl
stos
aad
jb
mov
in
test
insb
lds
stos
push
push
ds
movd
xchg
pop
lds
insb
adc
jp
dec
cmc
pop
pop
jge
mov
and
sbb
xor
jge
or
push
cmp
nop
mov
test
add
push
mov
cltd
pop
loop
inc
js
sbb
js
repnz
pop
mul
inc
ret
call
aad
ss
or
push
push
pushf
lret
fcomps
data16
sub
into
cmp
lods
inc
test
inc
mov
cmp
or
out
xchg
jnp
mov
and
dec
cwtl
mov
and
ret
sti
push
out
push
add
sub
int
shll
sub
clc
push
cmc
ret
pop
bound
lods
ret
aas
or
xor
repnz
in
out
pop
push
dec
lods
add
cmp
in
add
ja
pop
imulb
jmp
sub
add
pop
rorb
jae
push
cmpsl
mov
sbb
sub
xchg
shl
push
fisubrs
imul
ljmp
xor
lret
mov
jle
inc
js
cwtl
xor
outsb
push
jl
or
add
mov
iret
std
in
repnz
mov
in
xor
sub
add
xchg
xchg
or
sbb
stos
fildl
lods
cmp
inc
sub
xchg
bound
shrb
scas
aas
jp
out
inc
addr16
in
scas
and
pop
jae
mov
ss
popf
mov
dec
scas
cmp
sbb
ret
mov
decb
push
repnz
jb
jge
std
loop
jp
mov
aad
dec
mov
push
mov
xchg
imul
xchg
dec
push
hlt
fnstsw
shlb
loopne
adc
inc
mov
inc
inc
bound
sti
or
fs
scas
sti
call
pop
movsb
out
mov
xor
dec
push
insl
mov
pop
push
stc
outsb
lock
dec
jmp
scas
mov
sub
jbe
sub
in
sub
jae
mov
sbb
enter
mov
into
scas
mov
insl
pop
mov
xor
daa
out
daa
dec
fwait
inc
test
jle
xchg
leave
jl
fadd
lds
insb
int
sub
mov
out
sub
jecxz
cmpl
add
or
das
clc
pushf
movsb
cmpsl
ficomps
pop
inc
pop
sbb
imul
push
rcr
push
rorl
push
lcall
movsb
sbb
mov
jg
mov
dec
enter
xchg
imul
in
out
cld
fs
ljmp
jno
dec
sbb
cmc
out
cwtl
mov
jg
push
stos
dec
mov
ds
mov
cmp
sbb
std
cs
out
jno
imul
stos
or
inc
push
xchg
mov
xor
push
andb
orl
mov
mov
in
fistpl
mov
stos
mov
repz
testb
inc
cld
mov
mov
jle
xchg
loop
out
adc
popf
sub
fucomp
mov
pop
dec
mov
cmpsb
test
in
popa
and
mov
iret
inc
movsb
fsts
mov
cmpsb
mov
push
ret
adc
sbbb
filds
mov
outsl
outsb
adc
mov
xor
or
dec
int3
mov
dec
popf
scas
adc
rep
in
sbb
push
xchg
and
sbb
inc
aad
clc
and
cbtw
sbb
mov
sub
subb
xor
cmp
cmp
cwtl
loop
sbb
jp
mov
mov
jno
ret
adc
popf
xlat
test
nop
mov
dec
fisubl
sbb
push
leave
xabort
stos
xor
cmpsl
js
mov
outsb
cmp
scas
add
jg
sub
or
jnp
pop
js
add
sub
jg
enter
jmp
and
jmp
dec
mov
jecxz
ret
push
adc
lret
ror
cli
push
mov
je
test
lods
fildl
jge
movsl
movsl
jmp
jmp
out
mov
sti
adc
push
int
das
push
testb
mov
add
mov
sub
loop
mov
addr16
movsb
insb
sub
mov
or
dec
les
xor
pop
mov
sub
push
stc
or
cli
arpl
jo
push
cmp
jb
lahf
es
dec
std
or
insb
arpl
ret
popf
push
lock
lcall
adc
push
jne
daa
jmp
mov
push
out
jb
lods
inc
fsubrp
stos
or
enter
mull
movsl
xchg
sub
cmp
sub
ret
and
cmp
sbb
insl
sub
leave
shll
cmp
adc
fcmove
cltd
aam
sbb
add
in
mov
jnp
pop
push
xor
jmp
pop
mov
xchg
aaa
dec
sbb
cmc
fnstcw
or
sub
add
push
leave
cmpl
out
inc
clc
in
cmpsl
mov
addl
or
sti
cs
les
mov
aam
add
pop
or
inc
adc
aad
idivb
sahf
ret
pushf
jmp
mov
or
jno
fdiv
sub
fcomip
cmp
inc
popf
aam
pop
pop
push
mov
push
mov
push
xor
or
cmp
or
cmp
iret
ljmp
movsl
xor
or
ljmp
or
push
inc
adc
push
rol
sbb
pop
jno
rep
push
and
std
mov
push
xchg
shll
addr16
pop
add
addr16
add
push
nop
testl
jnp
jne
mov
and
push
fcompl
gs
and
fidivrs
movsl
popa
mov
adc
mov
sbb
imul
pop
out
ret
add
mov
xchg
int3
imul
insb
add
mov
cmpsb
jge
addr16
ret
jne
jle
scas
mov
fwait
or
dec
pop
inc
jp
scas
cmp
adc
pop
in
fisubs
inc
lret
mov
in
pop
cmp
repz
fisttpl
cs
fs
push
ja
insb
xchg
mov
xchg
dec
js
mov
push
stos
ficoml
jg
rcll
jbe
inc
sub
mov
add
pcmpeqb
and
cld
adc
or
outsl
lock
lret
in
mov
mov
popa
rcrl
push
stos
jb
mov
aaa
mov
bound
or
or
movsb
cmp
jae
scas
lret
rcll
insb
inc
jo
out
int
mov
shrb
scas
imul
dec
repnz
pop
adc
xor
lcall
cltd
dec
fcomp
dec
xor
cs
mov
xchg
sahf
jmp
jne
fistl
hlt
scas
outsl
cwtl
mov
cmp
inc
jl
add
std
xor
lret
cmc
adc
iret
das
mov
mov
mov
lock
rclb
jp
cmp
mov
cmp
or
jmp
mov
jb
mov
scas
pop
xor
jnp
scas
inc
out
mov
test
mov
jecxz
sbb
imul
arpl
mov
add
dec
mov
testl
sub
enter
scas
add
cld
cld
cwtl
movsl
out
stc
jge
out
or
idivb
adc
movsb
aam
nop
aad
ja
mull
bound
mov
mov
xor
rclb
aas
adc
cltd
ret
dec
jmp
sub
pop
add
mov
std
in
iret
and
out
sub
insb
rcrl
ja
hlt
mov
stos
lods
xchg
add
idivl
push
mov
enter
cltd
mov
movsb
arpl
mov
inc
jg
mov
inc
xor
inc
cmpsb
sub
fisttpll
pop
aas
pusha
sbb
inc
cmp
test
mov
addl
lock
fcomi
imull
lods
push
dec
mov
aam
mov
repnz
adc
pusha
aam
dec
fimuls
mov
pop
xchg
jne
jmp
out
xchg
push
mov
xor
lock
xchg
lock
pusha
hlt
mov
repz
movsl
inc
lock
jmp
mov
adc
mov
and
imul
jns
xchg
fwait
outsb
xor
fcoms
fdivrs
mov
mov
pop
jecxz
lods
scas
jle
jbe
and
mov
cwtl
mov
mov
xor
in
call
cld
stos
insl
mov
rol
out
jo
pop
dec
sub
or
xchg
dec
stc
dec
jne
cmpsl
outsb
ret
dec
lds
jo
and
adc
fiaddl
mov
lcall
dec
xchg
dec
jmp
mov
jnp
jno
and
dec
daa
xchg
mov
xor
lret
icebp
stos
add
xlat
pop
mov
adc
stc
xlat
jno
imul
ds
sub
sbb
cmpsb
dec
mov
aam
cmp
adc
je
leave
or
mov
mov
cld
push
add
add
jb
pop
nop
frstor
cmpsb
les
mov
xchg
lahf
pusha
iret
repnz
rorb
fiaddl
lods
push
mov
pusha
lds
in
push
or
cli
ret
pop
int3
push
loopne
jle
pop
lds
enter
imul
jne
xor
sbb
mov
add
rcrb
call
jp
loopne
adc
xlat
mov
je
push
lea
out
or
stos
pop
add
enter
fsub
int3
mov
andl
cs
push
dec
push
js
subl
cmpsl
je
aad
pop
jbe
adc
mov
sbb
pushf
in
xor
scas
lret
out
hlt
jae
xchg
ret
lea
xor
xchg
call
inc
push
push
cmpb
mov
pop
sub
push
pop
lods
add
inc
cmp
pop
mov
int3
jo
rcll
or
jg
dec
mov
push
and
lret
xchg
dec
loop
sub
pop
cli
fbstp
xchg
sbb
mov
cmpb
aas
xchg
mov
adc
in
out
cmp
pop
xor
xor
test
dec
loope
jno
into
cmp
inc
ficomps
rcr
mov
mov
ds
test
mov
out
cli
mov
iret
mov
stos
je
stos
or
adc
inc
jmp
lret
scas
cmc
repnz
rclb
dec
outsl
scas
fstps
fs
test
push
adc
bound
pop
xor
push
mov
out
mov
testl
jns
xchg
test
mov
test
adc
jbe
mov
sti
mov
std
addr16
call
mov
pop
xchg
imul
pop
es
push
cmp
xor
test
inc
sbbb
xchg
pop
dec
adc
mov
stc
dec
sbb
jns
insl
add
fcomps
inc
dec
cmp
fdivrl
clc
push
push
insl
addr16
scas
clc
fs
js
stos
test
jns
fbld
xor
jns
push
jbe
xchg
movsl
insb
ret
subb
ljmp
mov
cmp
sub
push
cmp
pushf
add
in
mov
inc
sub
xlat
bound
mov
mov
mov
std
fnstenv
test
jl
sbbl
adc
outsb
mov
sti
mov
jae
cmpl
jp
sub
pushf
or
pop
fstpt
scas
push
dec
push
sub
fsubrl
stos
push
mov
sbb
subb
cmpsl
mov
icebp
mov
out
sub
test
mov
sub
push
insl
clc
add
lret
jecxz
xor
sar
nop
pop
cmc
jmp
lea
cmc
xor
mov
mov
movsb
adc
je,pt
int3
leave
xchg
mov
mov
psllw
and
ja
cmp
xor
inc
lea
dec
pop
xlat
popf
jnp
pop
push
jne
loopne
rol
jae
xor
xor
sbb
fadds
shl
inc
mov
inc
int
call
mov
dec
dec
inc
pop
fstpt
test
or
jg
mov
push
aas
mov
mov
and
aam
sti
stos
psadbw
mov
lcall
testb
xor
push
int3
shll
mov
xchg
xor
sbb
pop
test
xor
ljmp
jle
out
xor
lods
shr
jae
scas
test
int3
jecxz
xchg
lret
fidivl
js
sub
pop
push
mov
ds
je
add
sahf
sub
push
mov
out
sub
xor
out
insl
fadd
add
jno
cmpsl
mov
js
mov
mov
jecxz
mov
sti
movsb
fldcw
and
push
ja
loope
dec
test
add
orl
dec
inc
and
xor
lods
sahf
inc
push
ret
xor
je
add
call
sub
mov
xor
hlt
sub
dec
call
insb
pop
xor
xor
sub
data16
jnp
bound
into
xchg
mov
lock
dec
push
mov
aas
testl
sbb
sti
out
xchg
xchg
pop
xchg
dec
xor
pop
push
mov
sub
adc
popf
xchg
or
sbb
jmp
xchg
sbb
fstl
push
mov
jno,pn
outsl
dec
stos
icebp
cltd
adc
jb
mov
push
inc
movsl
and
dec
dec
inc
je
leave
add
test
mov
mov
mov
push
mov
inc
je
mov
nop
ds
dec
int3
cli
xor
adc
fldenv
sub
outsl
xlat
loope
or
mov
stos
jp
fwait
or
les
or
mov
sbb
adc
xor
repnz
pop
or
in
pusha
lds
and
sahf
fsubr
in
stos
arpl
dec
cmp
push
hlt
and
andl
cmpl
mov
cs
mov
mov
sbb
hlt
cs
ret
loop
out
ds
ss
adc
jno
movsb
dec
add
stc
fisttpll
sub
ja
test
mov
jp
mov
sub
std
notl
mov
mov
icebp
jno
push
inc
dec
and
movsl
and
addb
sbb
stc
sarl
or
mov
jno
or
int3
pushf
inc
push
fisttpl
adc
xor
imull
pusha
mov
imulb
add
or
sub
xchg
inc
add
inc
pmaxsw
jae
cs
cmp
outsb
inc
adc
adc
out
clc
pop
insl
sub
jmp
outsl
xchg
shrb
xchg
mul
shll
sbbb
adc
jl
add
fwait
mov
sahf
int3
inc
daa
stos
rcrl
dec
sti
cmpsb
mov
pushf
pop
xchg
xchg
add
sbbb
inc
sub
dec
dec
jp
cmc
ficoms
inc
and
fiadds
jle
mov
xchg
cmp
stos
testl
popf
and
pop
push
jl
clc
daa
mov
les
mov
xchg
fld
jg
sbb
inc
and
out
faddl
test
loopne
aam
stos
pop
scas
fisttpl
lock
push
jo
or
outsl
jge
mov
shlb
and
jle
adc
cltd
data16
cmp
push
int3
add
xchg
inc
push
mov
push
stc
cmp
xchg
push
push
shll
adc
push
dec
cwtl
cltd
xchg
out
outsl
adc
icebp
sub
add
mov
test
test
inc
cmp
push
fistpll
push
int
xchg
arpl
icebp
test
sahf
xchg
icebp
push
addb
xor
aam
sbb
loope
push
jmp
fdivrl
add
adc
sub
sub
sarl
popf
and
push
loop
jne
add
jp
xor
gs
mov
xor
ds
add
xchg
xchg
mov
push
dec
sub
int3
jge
xchg
xor
push
xor
xchg
xchg
lcall
adc
adc
test
adc
push
mov
in
lods
icebp
mov
lock
and
cwtl
jnp
shll
out
jae
lds
mov
add
pushf
sub
loopne
popf
cli
add
subl
lea
xor
mov
pop
and
mov
loop
mov
leave
xchg
rorb
leave
data16
and
cs
dec
add
shr
notb
in
inc
sub
pop
icebp
iret
into
sahf
cmp
pusha
stc
insl
adc
leave
ret
outsb
in
std
mov
loop
jg
icebp
jae
and
lods
in
in
xor
push
fsubr
es
movsl
test
fnstcw
sub
rorl
aaa
lds
arpl
xor
sub
nop
xchg
or
push
jns
adc
dec
inc
aas
das
add
mov
inc
or
mov
xchg
or
mov
movsb
lcall
fldl
push
je
mov
or
fcoms
adc
bound
xchg
je
aam
or
in
jbe
dec
arpl
shl
lock
pop
fmull
ds
adc
xchg
pop
ret
adc
adcl
sbb
xchg
mov
fcmovu
out
insb
cmpsb
mulb
flds
es
mov
mov
lret
xchg
sbb
jl
icebp
push
xor
mov
subl
and
add
dec
shl
add
cmpsb
mov
inc
jns
fidivs
rclb
and
jbe
add
dec
mov
cs
sub
pop
je
fmuls
fs
mov
pop
fxam
or
cwtl
mov
cs
mov
out
pop
arpl
iret
cltd
test
add
clc
push
mov
push
into
jecxz
sbb
cli
mov
mov
add
or
or
inc
mov
jne
and
cli
xchg
cmovns
inc
adc
lds
sarb
les
inc
mov
mov
mov
jp
sbb
xor
cwtl
pop
xor
hlt
sub
push
inc
cli
mov
sbb
sbb
mov
mov
pop
push
iret
xorb
or
mov
mov
in
fbstp
sbb
xor
mov
push
popa
andl
sbb
rorl
movsl
mov
shlb
mov
push
rcrb
inc
cmp
lcall
jg
out
xor
xor
testl
sub
outsl
aad
cs
mov
addb
iret
lds
das
mov
rcl
or
xor
fisubrs
ljmp
cld
adc
imul
call
push
jbe
pop
imul
or
mov
outsl
mov
aas
add
fdivrp
cmp
punpckhbw
stos
pushf
push
mulb
xchg
dec
aas
lret
mov
hlt
stc
pop
adc
bound
fcoml
jbe
and
aaa
pop
inc
and
inc
jecxz
sbb
pop
jge
mov
cmpsl
push
sbb
xchg
rclb
fcoml
ss
mov
inc
add
inc
adc
add
cmpsl
fwait
xchg
lret
jns
movsb
cmp
cmp
int3
add
xchg
dec
push
out
inc
out
and
bound
mov
inc
lret
and
loope
shr
fwait
xchg
std
inc
xchg
negb
add
jmp
fadds
dec
mov
out
cmpl
sbb
adc
push
pop
mov
repz
xlat
scas
and
or
sbb
jge
xchg
mov
popa
adc
push
xchg
lcall
icebp
and
mov
mov
lea
mov
adc
adc
jecxz
cwtl
mov
scas
cmp
in
push
jae
pop
xchg
sti
icebp
lock
test
cmp
stc
ja
pusha
imul
sar
add
shl
pop
shrb
fdivrl
push
test
pop
cld
imul
jl
js
jp
rcll
enter
scas
iret
push
stos
and
flds
adc
pop
xor
dec
dec
mov
push
je
fisttps
jg
gs
ja
addb
adc
daa
andl
stc
inc
add
nop
dec
outsl
xor
push
cmp
xor
popf
pop
lcall
out
cwtl
stc
cwtl
or
pop
aam
or
pop
icebp
jecxz
popf
xchg
sbb
dec
outsb
pushw
jnp
nop
cs
int
and
xor
stc
jno
jae
add
jmp
mov
cmp
insb
aad
sub
mov
es
addr16
roll
loopne
sbb
into
inc
jns
daa
iret
gs
pop
and
jge
das
lock
lods
pop
and
sahf
test
sbb
mov
lahf
mov
xor
pop
xchg
insb
out
mov
add
loop
daa
add
fimull
data16
jp
and
jne
xor
pop
iret
int
inc
pop
pop
in
add
sbb
xor
arpl
adc
enterw
lret
or
in
xchg
cmp
lods
push
incl
jg
mov
sub
cmovb
cmp
mov
sbb
movsl
cmp
cmpb
or
cmpsl
or
or
loopne
lds
sub
cmp
in
fsubs
or
add
push
push
and
jle
stc
dec
xchg
sbbb
sub
cmp
or
jo
out
std
mov
jle
xor
sbb
dec
push
hlt
adc
rorb
orl
sti
loopne
repz
fsubrl
jmp
out
into
outsl
xor
mov
out
cltd
xor
fidivl
xchg
or
test
cmp
pop
repz
cmpsl
sti
push
push
push
mov
lret
pop
cmpl
fwait
cmp
xor
movsb
or
test
dec
cmp
mov
fld
sbb
add
out
adc
push
jbe
in
dec
repz
popf
pushf
jmp
mov
adc
jle
mov
push
mov
clc
and
mov
mov
inc
cmc
jp
push
cmp
imul
or
sub
into
dec
pop
idivl
jmp
xchg
ja
dec
cmp
stos
cs
ja
out
inc
jb
mov
rclb
jno
dec
sbb
std
js
aad
subl
repnz
mov
cmp
push
pop
scas
arpl
push
sbb
mov
stc
insb
and
sbb
cld
sub
aam
xor
dec
fldt
push
xchg
or
sbb
push
push
imul
mov
sub
fsub
mov
or
inc
lahf
sarb
rcll
mov
mov
add
sbb
mov
loope
pop
in
out
xor
adc
sbb
xchg
jns
mov
hlt
imul
inc
movsb
jle
sbb
push
lahf
add
sbb
sar
jmp
arpl
mov
push
sub
in
clc
je
sub
movhlps
push
out
mov
jl
mov
adc
xchg
or
pop
xchg
xor
xlat
leave
sub
adc
jle
dec
sub
stos
hlt
jmp
mov
sbb
sbb
cltd
test
ds
push
lret
loopne
in
push
imul
xor
mov
sbb
sbb
lock
call
pop
movsl
notb
mulb
jmp
gs
daa
or
enter
jns
xchg
inc
mov
cmpsb
xchg
inc
aam
lret
pop
cmpsl
xchg
cmpsb
sub
ja
cmp
jle
insb
dec
add
mov
mov
mov
jmp
leave
in
add
pop
out
das
dec
jmp
and
leave
pop
xchg
mov
jae
mov
ljmp
pop
popf
mulb
inc
add
xchg
jge
stos
pop
jle
mov
cmp
mov
push
xorb
sub
mov
or
sbb
mov
adc
add
nop
sub
push
dec
add
stos
jns
add
sbb
and
jne
sub
pop
scas
xchg
sub
imul
jae
enter
dec
mov
inc
cmpsb
call
or
rcll
mov
lods
push
xor
inc
cmc
push
dec
es
lods
cli
xchg
std
aaa
gs
mov
dec
push
jns
arpl
test
push
jb
cmpsb
xor
dec
das
leave
mov
shrb
arpl
addr16
das
jb
loope
scas
mov
adc
cmp
dec
rep
or
ljmp
push
mov
pop
daa
stos
sub
pop
jno
lock
push
lods
fwait
xchg
sahf
shlb
jae
dec
in
mov
dec
clc
inc
loope
loope
mov
or
mulb
xchg
pop
or
clc
fiadds
or
dec
iret
push
ja
aad
jae
fs
adc
or
repz
loop
mov
pop
lds
aaa
roll
testb
mov
mov
add
or
and
push
ss
push
ljmp
mov
jbe
frstor
mov
fnstsw
popa
or
dec
xor
fxch
add
test
fldcw
sbb
jnp
jp
mov
add
sbb
loope
jp
and
sbb
clc
pop
roll
xchg
mov
sub
xor
sbb
ljmp
mov
sbb
mov
sub
xchg
cs
aam
jmp
add
adc
sub
xchg
mov
xor
cmpsb
icebp
ss
movl
cltd
fiadds
cmpsb
sub
out
lods
mov
insl
jb
jle
xor
sahf
add
les
or
test
out
clc
pop
jne
stos
movl
fidivrs
stc
xchg
mov
sub
aas
std
into
and
mov
jl
pop
sbb
xlat
cmpsb
ret
je
add
mov
mov
stos
shll
inc
inc
inc
jle
subb
test
test
adc
enter
enter
sub
out
out
sti
jb
imull
inc
shr
dec
clc
push
testl
inc
cmp
and
jle
movsl
incb
mov
ja
sarl
adc
cmp
mov
sub
mov
lods
push
push
sub
movsb
imul
and
sahf
rol
pop
dec
ds
lahf
nop
lret
inc
mov
adc
imul
adc
nop
push
adc
push
and
test
jle,pn
js
cmpl
mov
jbe
ret
sarb
std
scas
mov
adc
test
addr16
push
sbbb
xchg
xchg
jle
dec
push
xchg
and
ret
xor
xchg
shrl
dec
jnp
inc
jp
ja
or
dec
daa
ret
add
xchg
sub
andl
clc
shrb
int
jbe
xchg
sub
ljmp
jno
divb
jnp
aaa
jle
sub
sbb
movsb
icebp
popa
aad
fldcw
addr16
out
iret
jl
stos
out
pop
dec
xchg
decb
push
adc
xchg
xchg
unpckhps
inc
cmp
add
testl
imul
dec
hlt
cmpsl
push
add
add
das
mov
xchg
mov
pop
xchg
cwtl
daa
and
cmp
int
mov
cmp
jmp
and
mov
jl
push
mov
insl
xchg
nop
sbb
and
mov
in
cld
fisttps
adc
xorb
pop
adc
xchg
mov
add
xor
das
cmp
mov
pusha
iret
inc
xchg
jg
or
xchg
or
or
sub
ret
outsl
and
xchg
icebp
mov
sbbb
jecxz,pt
leave
cmp
shl
dec
push
push
in
jno
rcrl
mov
inc
mov
pop
mov
mov
pop
mov
dec
mov
in
push
shufps
bound
je
add
inc
sbb
or
pop
ss
fwait
sub
jne
gs
inc
add
inc
jmp
mov
jnp
push
in
xlat
decl
sti
test
sarl
and
push
dec
inc
jge
mov
pop
or
stos
and
jl
out
mov
pop
inc
stos
mov
ret
sub
or
mov
mov
in
pop
xor
push
sbb
iret
mov
repz
test
pushaw
or
jmp
bound
sti
mov
dec
sbb
popa
inc
pop
cltd
xor
insl
and
pusha
movb
pop
jge
pop
mov
ja
movl
or
push
pop
xor
shl
inc
aas
mov
test
fdivrs
lret
dec
dec
mov
push
cli
cmp
mov
cmp
xor
test
push
fadds
into
inc
mov
lret
scas
xor
loopne
in
sbb
sub
stc
test
pop
stc
fxch
xchg
push
pop
sbb
cld
jb
push
push
rcl
dec
movsl
adc
fiadds
insl
mov
hlt
outsl
sub
js
test
xchg
mov
inc
out
ror
imul
lea
cmc
dec
xlat
and
jnp
dec
fwait
lea
pop
adc
outsb
fistl
cs
sub
div
ret
dec
push
rol
mov
add
nop
mov
ljmp
cmp
jbe
pop
sahf
jb
fs
and
les
not
push
ja
cmpsb
xchg
jp
jle
and
inc
jmp
leave
clc
push
push
dec
pop
fmul
stos
imul
jmp
sahf
icebp
pop
js
push
jae
in
jbe
dec
or
mov
sub
frstor
in
loopne
mov
jp
add
push
in
lds
mov
pop
xchg
pcmpgtd
add
dec
js
jle
insl
sub
mov
and
sbb
out
addl
dec
xchg
xchg
adc
xlat
add
fwait
pop
pop
jns
dec
and
fisttps
pop
ficoml
xor
sub
scas
mov
and
insb
call
mov
cmp
sbb
out
and
dec
sbb
aam
into
mov
divb
fidivs
pop
stos
add
inc
ret
shl
and
lods
push
inc
xor
mov
mov
xchg
or
bndstx
jnp
xorl
adc
hlt
sarl
inc
adc
or
jnp
cmp
and
cmc
fwait
jmp
push
xor
test
jle
cmp
cltd
xchg
repz
fwait
adc
push
add
aas
mov
cmpsl
pop
pop
add
add
mov
in
std
test
cld
jae
cmp
test
jle
mov
lret
or
inc
in
pop
daa
cmpsl
outsl
aad
arpl
sub
pop
pusha
cld
fistpl
shll
mov
test
pop
push
sub
dec
incl
mov
inc
adc
scas
xchg
jp
jae
shl
cmp
fwait
daa
cmp
js
mov
outsb
push
mov
outsb
xchg
imul
pushf
xor
mov
xchg
ds
xor
repnz
sahf
icebp
imul
lods
jnp
popa
enter
xor
pop
xchg
dec
out
das
fs
jbe
adc
adc
sti
out
xor
push
das
cmp
mov
jae
and
sbb
adc
adc
mov
lahf
shl
dec
mov
ret
out
ret
les
mov
xor
jb
jae
mov
mov
jp
repnz
imul
jns
sub
mov
enter
clc
popa
cld
or
xchg
mov
pop
jge
out
xorl
adc
lahf
daa
push
lea
mov
push
xor
mov
notl
out
jb
and
jecxz
jne
mov
dec
xchg
inc
jecxz
aad
mov
pop
iret
lock
inc
lahf
mov
call
jge
movsb
push
mov
ret
cmp
push
sub
mov
pop
dec
pop
dec
push
je
adc
lods
mov
mov
imull
mov
or
lock
mov
pop
lahf
push
xchg
inc
mov
popa
inc
std
jne
inc
testb
out
sub
or
les
and
divl
push
mov
or
mov
nop
dec
xchg
mov
movntps
imul
sub
and
je
les
push
enter
stos
mov
lcall
into
and
push
enter
lea
mov
lcall
ljmp
mov
or
dec
das
and
xor
mov
add
pop
sub
in
jne
aaa
rorb
iret
push
push
sbb
dec
stos
adc
mov
mov
cs
aam
and
aam
dec
arpl
fadd
ror
dec
or
push
mov
sahf
add
subl
fcomps
scas
dec
pushl
cld
int
testl
es
das
das
inc
sbb
jne
pusha
sar
mov
push
push
jno
dec
cmp
lahf
les
mov
jns
xor
mov
fs
mov
lret
adc
mov
add
push
sub
push
cli
jl
pushf
daa
dec
js
push
imul
xlat
push
icebp
mov
xchg
lods
pop
lahf
popf
clc
pop
neg
or
repnz
loopne
mov
fucomi
bound
bound
loope
push
mov
dec
fadd
pop
lods
add
sahf
mov
sbb
push
inc
mov
ljmp
adc
rorb
rcrl
sub
shr
sub
es
mov
sub
pop
mov
push
fisubrl
mov
mov
xchg
cs
cmc
mov
inc
aaa
jecxz
pop
cmp
cmp
test
test
mov
bound
scas
nop
shll
mov
roll
cld
ret
fbstp
mov
repz
out
daa
and
stos
inc
and
sub
cmp
andb
rcrb
les
cwtl
xchg
xchg
bound
rcll
add
imul
sub
and
clc
mov
mov
enter
aaa
push
ja
leave
imul
mov
and
add
adc
psubw
dec
sbb
and
out
inc
and
addb
pop
lret
add
cmp
fcompl
pop
repz
fisttpll
out
aas
cmpsb
repnz
pop
pop
lock
test
in
inc
mov
imul
xor
pop
subl
sbb
or
fldenv
out
xor
in
add
push
mov
mov
mov
in
pop
into
ljmp
add
jne
jb
cmp
mov
xchg
enter
xor
mov
add
pop
imull
mov
clc
pop
dec
pop
mov
cmpl
xchg
sbbb
repz
pop
xchg
jno
sbb
jmp
lods
popf
add
insb
mov
push
pop
push
mov
in
or
mov
dec
push
pop
jo
add
pop
jl
push
sub
arpl
inc
pop
les
push
inc
jecxz,pt
pop
mov
dec
dec
ljmp
loope
mov
and
out
jbe
add
subb
cmp
sbb
pop
subl
jo
addr16
inc
insb
in
jle
inc
cltd
and
nop
insl
push
fcmovne
or
scas
inc
jle
scas
cld
mov
les
dec
jbe
jmp
rcl
lret
jmp
or
xchg
push
stos
sub
or
mov
repz
push
sub
call
jno
adc
dec
imul
jb
or
ja
xchg
add
cwtl
es
jecxz
out
add
ja
dec
leave
addr16
inc
sbbb
icebp
pop
mov
ljmp
mov
ret
ss
add
sarb
out
add
cmp
ja
adc
dec
int3
insl
cltd
xlat
into
in
insb
add
cmc
lret
add
mov
and
add
decl
test
add
test
pop
inc
stc
loopne
movsl
bound
xchg
testb
aaa
pop
and
pop
lock
scas
xchg
mov
sub
sbb
jne
repz
sbb
xor
outsb
pop
and
jbe
and
xchg
cld
inc
or
push
pop
pop
mov
mov
lret
sub
sbb
mov
aas
cs
add
mov
adc
dec
pop
xor
popf
add
dec
pushf
out
leave
in
dec
cld
mov
in
adc
xchg
call
sbb
pop
cmc
jb
add
ds
add
inc
add
mov
inc
xchg
push
test
shlb
push
and
rcr
int3
rcl
flds
loope
sub
int
sub
push
lods
jecxz
mov
sbb
push
mov
out
daa
sahf
sub
test
adc
loopne
sbb
stos
xchg
push
lahf
jae
dec
push
or
aas
sar
mov
inc
mov
push
out
or
mov
in
clc
cli
in
xchg
dec
aaa
mov
push
mov
pop
addr16
out
cmp
mov
add
test
sar
lods
push
pop
inc
xchg
dec
pop
adc
iret
out
popf
mov
outsb
push
mov
pop
mov
nop
sti
mov
rcrl
in
pop
sbb
add
ds
cwtl
ja
or
lods
xor
or
loop
jns
and
popf
shlb
xchg
pop
mov
cmpsl
jne
subl
sbb
adc
pop
rclb
test
jl
jmp
out
mov
cli
daa
dec
jg
je
movsb
xor
mov
pop
mov
into
gs
pop
inc
movb
fcoms
loopne
fwait
inc
cld
mov
pushf
in
mov
aaa
movsl
jmp
lods
mov
testb
mov
and
inc
pop
cld
xor
push
fs
dec
xor
pop
inc
addr16
adc
int
jne
call
ja
push
add
xchg
js
mov
add
dec
movsl
jns
icebp
in
pop
mov
shrb
xchg
lods
lcall
divb
jmp
xor
pop
lds
jno
arpl
addr16
imul
nop
lds
daa
xor
pop
movsb
ret
push
cmp
test
sub
insb
repnz
jae
ret
clc
fildl
add
sub
mov
mov
mov
mov
mov
insl
sbb
mov
xor
lahf
push
mov
fldt
je
xlat
push
sbb
mov
lods
jl
push
test
shl
std
sub
and
mov
nop
pop
mov
sub
add
jbe
push
in
or
cmpsl
ret
in
xchg
jg
xlat
or
mov
stos
sub
xorl
dec
and
jne
lahf
jb
mov
push
shr
and
or
cmp
add
ja
hlt
dec
outsl
mov
fcomip
stos
push
jl
xchg
pop
sub
jo
xlat
and
cltd
mov
ret
insb
and
jecxz
mov
insb
out
int3
gs
ja
jl
repz
jecxz
add
jbe
pusha
mov
out
mov
mov
pushf
out
pop
aad
test
mulb
add
popf
push
dec
jnp
fsubs
adc
test
out
rorb
sahf
adc
loope
add
jae
lods
int
sub
fcomps
sub
or
pop
push
sbb
or
inc
sub
les
fcomip
inc
jbe
fdivr
lea
scas
data16
data16
pop
loope
pop
cmpb
cmp
popl
scas
movsb
push
adc
mov
arpl
inc
movsb
arpl
dec
adc
arpl
mov
add
std
clc
aaa
fmulp
jae
and
addl
jo
xchg
movsb
xor
sub
push
notl
cli
pop
and
xchg
push
dec
cs
xchg
xchg
dec
icebp
pop
mov
aas
ret
mov
xchg
push
mov
pop
mov
jle
stos
push
pop
bswap
cmc
rcrb
ja
movsb
js
sqrtps
sub
push
mov
lock
arpl
jg
cmp
or
inc
push
jno
mov
lahf
push
aam
dec
iret
sti
xchg
xor
jb
jg
push
mov
cmp
and
arpl
jecxz
xor
add
mov
sbb
lret
add
sbb
or
or
sarb
hlt
sub
jnp
xchg
mov
imul
iret
jl
jmp
out
out
aas
push
cmp
loope
or
jb
mov
or
movsb
test
dec
mov
fmuls
pop
inc
shr
xchg
je
sbb
xchg
add
add
stos
sbb
ljmp
nop
outsb
out
pop
add
adc
popf
push
insb
push
cmp
pop
mov
push
adc
sahf
sub
scas
leave
xchg
mov
lcall
and
or
mov
sub
aas
jnp
cmp
lcall
fcmovnbe
jge
fcomps
or
cmc
arpl
pop
dec
add
repz
ret
and
adc
jmp
lret
inc
jge
lret
sub
dec
cltd
adc
nop
pop
fildl
enter
and
addr16
or
call
rcrb
sub
mov
mov
sub
mov
rolb
repnz
cld
enter
stos
ja
loopne
imul
rcll
pushf
jo
loop
xchg
add
cli
and
mov
movsl
pop
into
rcr
adc
sub
inc
cbtw
xor
pop
push
stc
dec
sub
dec
data16
sbb
push
pop
shlb
je
call
fcoms
loop
mov
mov
xchg
push
shlb
je
movsb
sub
cld
add
out
mov
and
or
insb
push
cmc
fs
mov
paddb
and
lcall
push
arpl
fld
subl
mov
ret
movsb
cmp
sbb
je
sub
push
mull
mov
popa
inc
test
shll
pop
out
fcompl
mov
lret
iret
mov
js
mov
jl
inc
test
mov
ljmp
rcrb
mov
jp
sbb
daa
xchg
sbb
push
fisubs
repnz
pop
filds
outsb
addr16
cmp
xchg
orl
cld
adc
add
mov
mov
imull
icebp
lret
lock
add
jns
sub
pushf
xchg
cmp
sbb
jbe
inc
mov
mov
mov
js
jo
cmp
xchg
lcall
jp
sete
gs
push
inc
cmp
or
jp
adc
je
repz
sub
andl
add
adc
fdivp
je
outsl
fidivs
xor
cmc
push
or
jb
stc
jle
mov
or
clc
xchg
add
push
or
push
jno
jne
and
mov
ja
rorl
add
jl
divl
bound
jo
dec
push
jecxz
fistps
mov
setb
clc
mov
mov
cld
subl
movsl
in
mov
jb
je
pop
mov
pop
push
pop
lcall
pop
dec
aaa
andl
scas
jmp
lock
sarl
xor
in
or
cmpsl
js
cmp
scas
jbe
arpl
addl
push
cmpsl
mov
daa
sbb
or
sub
subl
lock
lret
and
ret
mov
fnstenv
lds
test
or
int3
push
xorl
cs
inc
rclb
push
lea
mov
mov
mov
ja
enter
stos
outsb
inc
jge
fistl
sub
lods
enter
enter
cmpsb
mov
repz
push
or
test
adcb
pop
jg
mov
test
shlb
mov
rcrl
mov
incb
adc
inc
nop
dec
daa
jle
adc
nop
movsl
fbstp
pusha
pushf
outsb
add
jo
xorl
sti
adc
add
ret
cli
fcmovne
adc
mov
sbb
insb
xorl
sbb
xor
inc
mov
jmp
push
addr16
add
stos
xor
mov
int
ret
int
add
mov
mov
sbb
or
inc
fwait
pop
cmpsl
pop
icebp
and
scas
dec
xchg
call
je
ja
nop
pusha
sbb
mov
lds
xchg
xor
gs
int
sahf
cmp
fnstsw
xchg
xchg
mov
xor
loop
dec
jl
or
sub
mov
lods
inc
pop
cmp
pushf
sbb
add
dec
adcl
jecxz
aaa
push
movsb
mov
jp
push
lock
xor
mov
adc
sub
push
mov
std
push
shll
mov
xor
xchg
jno
aam
push
js
mov
and
mov
jmp
pop
or
fs
mov
jp
mov
jbe
xchg
and
repnz
mov
xchg
or
dec
dec
out
add
bound
out
mov
sarb
in
ret
in
lods
mov
adc
ljmp
sbb
leave
imul
fwait
dec
push
outsl
lea
pop
test
fwait
divb
bound
test
dec
sahf
inc
mov
jo
cli
cmp
mov
call
or
xor
aas
inc
int3
push
cmp
stos
push
jnp
jbe
imul
js
pop
and
ret
sbb
push
sub
push
xchg
xor
loope
add
push
addb
mov
xchg
ss
inc
dec
dec
push
add
mov
aad
mov
gs
inc
add
xor
xor
and
inc
pop
cli
ljmp
inc
sub
mov
sbb
xor
jle
add
imul
xchg
test
adc
lea
std
jle
cli
arpl
push
mov
dec
data16
add
adc
adc
fsub
imul
stos
inc
push
push
and
dec
aas
ret
les
loopne
test
fistps
dec
and
movsl
dec
push
dec
repz
insl
and
mov
paddb
inc
mov
pop
or
dec
inc
js
mov
pop
xchg
stc
outsl
addr16
fistl
pushf
inc
jo
sbb
mov
push
mov
mov
repnz
push
jns
xor
cmc
mov
mov
mov
loopne
int
popa
pop
pop
hlt
popa
adc
cmp
push
fisubl
popa
sbb
clc
jle
and
xchg
lods
shll
pop
data16
dec
mov
mov
ficoms
mov
out
into
aaa
pushf
clc
imul
xlat
stos
and
les
xchg
sbb
xchg
lock
std
cmp
push
loope
dec
rorb
jecxz
sbb
sbb
mov
call
mov
sub
cmp
push
jns
mov
adc
mov
xchg
out
pop
testb
fisubs
in
add
jmp
js
pop
mov
or
sbb
or
cltd
xlat
test
punpcklbw
cmp
push
fs
add
xchg
sbb
int
outsb
xchg
adc
cld
push
lea
scas
je
push
push
dec
lock
ds
popa
pop
pop
std
adc
lock
movsl
add
fbld
andb
rcrb
fs
lods
inc
inc
xchg
gs
dec
cmc
lea
jae
rclb
cmp
ror
mov
cmc
mov
jecxz
loope
mov
in
int3
mov
outsl
inc
fcoms
mov
lret
out
add
stos
addr16
push
filds
mov
jnp
jae
stos
aam
jb
or
cwtl
test
pop
jmp
jg
dec
pop
adc
das
loop
pop
inc
in
pop
ficoms
sahf
cli
clc
push
xor
pop
inc
mov
ficompl
sub
in
adc
or
out
sub
test
sub
pop
adc
movb
repz
lods
lods
hlt
dec
sub
ds
sub
stos
std
loope
dec
cwtl
mov
pop
xchg
rcl
hlt
fcomps
and
push
sub
or
addr16
scas
sub
mov
sub
fwait
push
test
push
xor
sbb
mul
mov
sbb
adc
mov
call
dec
adc
ret
sbb
lods
pusha
insl
scas
push
rclb
gs
test
jl
data16
xchg
sbb
dec
sahf
scas
mov
mov
scas
xor
sbbl
xor
push
data16
icebp
enter
adc
xchg
ret
add
push
or
int3
and
nop
int3
add
adc
fs
mov
mov
sub
jge
jl
mov
cmp
ljmp
notb
xor
lea
inc
fcoml
rorb
sahf
or
stc
xchg
sub
mov
or
cli
and
lahf
repz
jl
rcrb
xor
mov
pop
in
roll
inc
push
mov
jae
lahf
mov
push
aam
test
pop
dec
aas
sbb
mov
fisubrs
aaa
shr
jnp
ss
rolb
push
stos
sti
inc
xor
mov
xor
and
data16
push
orb
ret
fcmovbe
aaa
out
dec
sahf
inc
pop
push
lds
iret
pop
into
subb
shr
jecxz
fneni(8087
test
jne
sahf
push
lods
dec
and
and
in
in
mov
or
bound
inc
orl
ret
insb
jmp
adc
popa
lock
std
fucomip
fisubrl
inc
mov
fbld
mov
inc
and
dec
icebp
mov
fs
test
in
mov
inc
cmpsl
aaa
lcall
insl
aas
stos
sbb
cmp
inc
fisttpl
push
out
xchg
cmpsb
int
inc
dec
mov
push
loope
mov
shll
insl
dec
rorb
push
mov
and
mov
vpsadbw
adc
repnz
pop
sbb
push
push
jnp
mov
ds
pop
imul
pop
ficomps
add
fs
loop
call
xorb
mov
cmpsl
imulb
dec
mov
and
add
fisttps
nop
pop
js
mov
out
loop
gs
or
add
pop
inc
je
outsb
xor
je
cwtl
push
sub
mov
inc
xor
cmp
loopne
jb
xchg
movsb
sti
aaa
and
push
bound
jmp
fistps
dec
shlb
push
pop
mov
enter
adc
and
add
mov
negb
xchg
nop
cmpl
gs
outsl
push
in
scas
sub
mov
in
test
cmpsl
dec
mov
sti
lret
inc
cwtl
dec
testl
fidivrs
imul
int
bound
push
dec
andl
imul
mov
dec
add
or
mov
pop
mov
xchg
xchg
aam
lahf
sub
cmp
repz
jecxz
sub
mov
lea
or
xor
jp
cmp
clc
pop
loop
into
xchg
push
mov
dec
bound
mov
fld
xchg
mov
hlt
adc
push
and
push
cmc
pusha
and
and
incb
add
repnz
dec
mov
jne
dec
xchg
cmp
xchg
loopne
mov
fisubl
or
and
adc
shrl
or
inc
jae
imul
fiadds
das
lahf
xchg
lock
push
jg
rolb
xor
insb
pop
pop
das
cmc
jle
es
scas
daa
addb
xchg
pop
sbb
fwait
scas
rcl
sbb
push
mov
mov
aad
xor
aad
lods
and
sti
add
mov
mov
push
pop
test
xchg
mov
jbe
and
inc
ss
sbb
push
jg
jg
dec
cmp
cltd
mov
pushf
ljmp
nop
fnstenv
mov
rclb
int
rcrb
movsl
ss
jbe
aad
jmp
push
jmp
jb
mov
cmpsl
sub
into
adc
cmp
or
inc
inc
or
adc
loope
jb
out
test
sbb
dec
pop
lds
movsl
es
sub
pop
push
sub
push
xchg
insl
mov
push
mov
dec
push
sub
insl
add
enter
shrl
fstl
xor
call
jbe
sub
inc
out
fs
ss
mov
inc
out
test
and
add
call
inc
dec
add
mov
mov
gs
add
push
push
pop
lahf
test
lahf
xchg
or
repnz
imul
xor
ja
lods
ret
xchg
sbb
xchg
and
pop
add
add
ficoms
inc
sbb
movsb
int3
sub
inc
sahf
adc
add
mov
mov
sbb
adcb
stc
sub
lret
cld
enter
mul
sarb
outsl
pop
fimull
mov
pusha
icebp
xchg
jns
xchg
ja
arpl
sbb
out
push
rol
loop
xlat
bound
inc
xchg
fisubl
mov
repz
pop
mov
int3
outsl
inc
mov
ss
and
insl
mov
insl
mov
mov
shll
sarb
adc
and
mov
pop
cs
jnp
jnp
xchg
icebp
sub
or
xor
out
arpl
inc
ficomps
mov
imul
test
cs
or
aas
sub
insl
jnp
jl
out
outsb
cwtl
adc
pop
movsb
dec
ljmp
ja
cmp
stos
xchg
in
sarl
or
sub
jbe
push
pop
stos
dec
pop
sub
sbb
les
movsb
add
inc
mov
mov
inc
loope
xchg
stc
ret
aad
es
into
cltd
pop
xor
loop
sub
mov
xchg
ret
fdivl
cmp
cmc
mov
mov
push
sub
iret
inc
test
xchg
fcompl
pop
pusha
cmp
sbb
jo
cmp
inc
and
mov
gs
aam
xchg
popf
add
jb
lds
xchg
mov
add
cltd
add
xor
push
adc
frstor
or
cmp
nop
and
rclb
arpl
andb
int
fstpt
in
repz
sbb
xor
scas
push
gs
movsl
daa
cmp
xor
xor
sbb
aam
notb
sarl
outsl
loope
dec
pushf
cmp
inc
jmp
and
sti
stos
shrl
mov
push
push
nop
push
insl
icebp
sbb
or
inc
test
ljmp
aaa
faddp
add
aaa
adc
loopne
cwtl
cs
lea
jb
scas
sub
xorb
jns
and
cmpsb
pusha
push
mov
and
pop
inc
sbbb
xor
mov
sub
aas
je
dec
scas
add
xchg
sbb
xor
mov
cmpl
dec
adc
mov
adc
aad
insl
or
jo
push
or
and
lahf
cmp
jl
pop
xor
mov
ficomps
adc
dec
dec
xorl
aad
xchg
iret
clc
pushf
xchg
inc
das
ret
shld
inc
dec
xor
hlt
pop
pop
arpl
mov
cmc
in
mov
push
push
jno
imul
pusha
dec
imulb
or
cmpl
imul
popf
dec
lret
add
testb
mov
push
xchg
mov
movsl
add
push
inc
orl
sbb
jnp
or
xchg
push
les
cmp
scas
xchg
lock
fucomi
repnz
shl
iret
inc
adc
sbb
jbe
ljmp
es
test
mov
cmp
stc
pusha
mov
sahf
jle
int
in
fsubrs
pop
rorb
mov
sub
mov
jle
lock
stos
dec
loope
xor
ret
stc
cltd
sub
sub
cmp
inc
pop
xor
es
xorb
jmp
ficompl
xor
add
addr16
movsl
daa
fs
pop
movsb
aad
stos
xchg
jb
jb
push
mov
mov
fldenv
call
mov
xor
sbb
sarl
dec
test
rcrl
cmp
cs
mov
xchg
inc
sub
out
test
push
push
enter
pop
mov
jb
pop
push
or
loope
mov
sti
movsl
or
jo
mov
sahf
push
es
ffree
sbb
push
cmpsl
mov
fistpl
jge
cmp
inc
or
mov
mov
stos
gs
call
adc
add
mov
push
jmp
out
or
or
sbb
ret
add
and
jmp
push
and
jmp
mov
daa
sub
cltd
xchg
xchg
fisubl
gs
pop
movsb
jne,pt
jns
out
hlt
dec
ficoml
dec
dec
jecxz
jno
iret
cmp
test
fnstenv
fs
repnz
adc
dec
xor
repnz
push
ljmp
and
jno
fwait
add
dec
push
push
mov
nop
jmp
stos
add
push
sbb
xchg
loopne,pt
addr16
cmp
bound
ljmp
mov
stc
sbb
mov
movsl
out
add
mov
or
lods
imul
mov
out
insb
add
push
lods
sbb
test
add
fcomp
mov
fadd
mov
lock
fcom
icebp
push
xchg
je
and
lret
jbe
dec
aaa
and
lods
je
ret
insl
adc
cmp
add
imul
mov
mov
test
sub
imulb
adc
mov
inc
mov
pop
or
int
mov
sahf
sti
jne
cltd
rclb
sub
mov
test
pushf
xor
sahf
xor
mov
lahf
iret
insl
daa
cmp
test
push
stc
clc
pushf
stc
in
sti
dec
push
lods
mov
aas
lahf
and
imulb
mov
mov
jb
loop
outsl
dec
rcll
fwait
ds
mov
fsub
adcb
xchg
mov
add
fidivs
js
loope
stos
adc
dec
pop
std
push
sub
or
in
jo
sbb
fwait
leave
jae
jb
push
cmpsb
xchg
movsb
sbb
jp
cmpsb
jb
pop
jecxz
test
add
leave
aas
shrl
call
add
aam
ja
imul
mov
push
lods
pop
lock
push
sbb
jo
lcall
rcll
outsb
push
insb
mov
mov
xor
push
jns
jnp
mov
push
sub
cmp
cmp
adc
pushf
aas
aam
movsb
inc
jbe
sbb
mov
std
and
out
stos
enter
and
ss
xchg
out
cli
sub
cld
jb
pop
xor
cmpsb
mov
and
jmp
add
xor
adc
add
lock
das
pop
pop
pop
dec
out
jnp
lods
fs
cmp
push
push
loopne
and
xchg
mov
pusha
jmp
jbe
shr
aam
enter
arpl
sbb
add
jae
and
test
idivb
test
rcr
mov
xor
and
push
adc
mov
aaa
cld
imul
cmp
outsb
mov
outsl
aad
js
jp
ds
lods
insl
push
add
mov
sbb
int
lahf
push
jl
inc
stos
inc
daa
scas
imul
mov
sarl
push
mov
je
or
dec
nop
mov
mov
cmc
cmpsb
stc
inc
out
lret
and
ja
fimuls
adcl
jbe
mov
sub
pushl
push
xchg
lret
in
dec
xchg
mov
mov
sub
pushf
cmpsl
jbe
pop
mov
lret
cs
add
push
add
or
jbe
jb
jp
pop
adc
cwtl
lods
fwait
add
pop
mov
in
aaa
mov
loopne
cli
repnz
inc
inc
dec
jl
test
push
lds
test
mov
mov
and
lock
insb
or
cmp
int
outsb
ljmp
jg
inc
pop
out
adc
pop
inc
xor
xlat
dec
sub
imul
or
call
cmp
inc
bnd
push
pop
ror
inc
adc
add
mov
lods
mov
pop
test
popa
and
mov
xchg
stc
or
jle
es
nop
xchg
dec
pop
dec
fdivrl
xor
inc
in
outsl
imul
adc
sarb
lods
add
mov
nop
and
fwait
pusha
jb
jmp
or
or
ss
loope
repnz
cmc
jg
adc
popl
cmpsl
cmp
xchg
not
insl
dec
xchg
or
leave
imul
scas
leave
and
cmp
pop
or
mov
cmpb
pop
cld
push
aas
and
imul
in
sbb
ljmp
xor
rolb
or
sti
ds
scas
loop
adc
jmp
lahf
mov
mov
test
push
pop
int
jb
dec
or
or
or
cmp
dec
pop
test
loopne
aaa
decl
es
rep
cmp
xor
movsl
clc
inc
dec
ja
adc
cmp
adc
jo
gs
sub
loop
cmp
and
or
sub
mov
fdiv
outsb
dec
push
arpl
lret
mov
in
repz
ss
loop
xor
incl
stos
lcall
rcrl
mov
out
fldt
jae
inc
shll
mov
dec
mov
imul
sbb
lds
sti
fistpl
dec
cmp
cltd
inc
shll
arpl
leave
add
popa
aaa
jnp
movsl
dec
shlb
adc
jae
leave
add
mov
inc
pop
cmp
bound
sbb
pop
mov
and
xor
imul
cmp
jae
mov
pop
scas
scas
dec
fidivs
sbb
pop
xchg
hlt
in
xlat
es
xor
lods
xchg
pop
mov
push
outsb
adc
jp
clc
cs
dec
imulb
shl
int3
cmp
leave
and
test
xor
or
lret
aas
adcl
mov
add
fistl
jmp
stos
fistl
cmp
cmp
push
in
mov
pop
push
mov
jmp
xchg
icebp
in
out
test
or
dec
push
iret
and
and
push
iret
mov
lahf
xchg
mov
xchg
sub
pop
das
jmp
out
int
test
sahf
test
push
pop
inc
lcall
inc
shrl
pop
jp
cld
imul
pop
scas
lock
lds
std
outsb
es
std
repz
arpl
testl
xchg
sbb
or
or
mov
dec
daa
fisubrl
clc
dec
dec
cli
and
xchg
xor
mov
xchg
jbe
fs
or
and
inc
das
sub
add
add
add
test
lock
mov
imul
cmc
xor
jns
xchg
mov
push
xchg
add
pop
or
sti
jbe
gs
and
push
pop
dec
or
xor
jbe
sbb
aam
mov
adc
cmp
cli
pop
pop
mov
xor
inc
lcall
push
add
add
jmp
adc
pop
mov
icebp
xorl
or
push
cli
outsb
xor
pop
rolb
test
jo
jge
mov
xchg
jg
cmp
add
out
pusha
sub
out
int
ss
mov
shll
or
jno
pop
cmpsb
fbld
or
xor
jg
xor
mov
and
dec
dec
jmp
rcr
inc
xor
cmp
lods
in
xchg
les
dec
shlb
loope
pop
clc
repnz
add
rclb
and
ror
push
addb
inc
cmp
je
mov
aas
or
pop
notb
cmp
fnstcw
andb
xor
lahf
push
mov
addr16
rorl
int3
out
lret
xchg
inc
inc
test
sarb
outsl
mov
jne
test
jg
jo
es
sub
notb
lods
repz
ficoms
cmpsl
mov
jb
cmp
or
and
mov
sub
mov
mov
test
shr
scas
fldl
repnz
push
push
inc
ds
out
dec
sub
cltd
ds
clc
push
push
pushf
call
sahf
div
push
mov
or
mov
into
notl
pop
nop
ficompl
push
sub
test
call
je
lods
dec
mov
loope
add
pop
cmp
mov
ljmp
jb
aam
idivb
push
mov
in
scas
insl
mov
pop
sub
inc
outsb
cmp
loop
sub
mov
cmp
pop
pop
dec
icebp
mov
das
scas
dec
das
test
pop
loope
incl
mov
inc
test
push
fistpll
lods
jns
cld
adc
sbb
je
pushf
test
mov
es
addl
insl
push
fcomip
or
ret
push
rcrb
cmpsl
lcall
inc
inc
add
aam
jae
or
mov
cmp
pop
data16
mov
mov
fwait
jnp
pop
cs
loop
jbe
inc
inc
xchg
inc
add
ljmp
ret
lcall
test
jmp
ljmp
out
and
pop
xor
rcr
loop
sarb
xor
and
dec
sahf
pop
sti
movsl
lods
cli
sub
lods
loop
push
mov
sub
pusha
mov
sbb
dec
cs
dec
inc
das
pop
push
mov
stos
addl
imul
mov
pop
popf
mov
clc
mov
stos
into
jo
js
test
pop
push
xchg
jne
iret
popf
and
jne
jge
inc
jnp
ja
movsl
sub
mov
aaa
test
cmove
jle
ds
mov
orb
outsl
or
je
pop
out
loope
push
bound
mov
xchg
add
lret
fists
cmpl
shll
xchg
sti
test
xor
mov
or
jg
fdivrp
fisubs
jl
mov
repnz
scas
fiadds
mov
mov
sub
dec
fistps
cs
sti
repnz
sbb
mov
jno
cmpsl
adc
inc
lea
js
dec
adc
xchg
dec
js
cs
sbb
js
mov
sbb
cwtl
pop
xchg
repz
ds
subb
sahf
dec
dec
sbb
insl
xor
mov
push
mov
jecxz
test
jl
les
mov
sbb
bound
mov
add
cmc
cmpsb
into
xchg
out
adc
hlt
inc
iret
mov
daa
mov
or
or
sbb
je
sub
add
xor
xchg
or
mov
mov
xor
out
arpl
leave
fstpt
rcr
dec
xor
xor
dec
leave
outsb
mov
xor
and
outsl
roll
popf
je
test
or
add
add
repnz
dec
jb
cwtl
testb
or
sub
mov
in
push
sti
test
mov
cli
sub
push
test
inc
pop
lahf
fmulp
lret
dec
in
mov
pop
sbb
xchg
test
sbb
fmuls
lds
push
or
push
jo
add
je
cmp
cmp
xchg
or
xchg
es
jne
fadds
add
cmpb
xor
scas
cltd
and
and
push
sub
jno
jnp
lahf
and
mov
fbstp
movsb
mov
pusha
sub
ret
dec
loope
dec
mov
or
cmp
or
popf
and
mov
dec
jo
push
ss
sbb
fildll
sub
lods
fstp
cmpsb
cltd
pop
dec
das
or
leave
xchg
and
les
es
aas
dec
pop
mov
pop
fcoml
imul
pop
inc
or
ss
and
out
jo
sti
sbb
mov
insl
push
sar
sub
imulb
sbb
push
cmp
dec
adc
jecxz
mov
mov
push
pop
sub
stos
or
imul
jp
scas
push
ret
or
push
cmpl
xchg
or
sub
jno
inc
jl
stos
scas
sahf
mov
nop
lods
and
pop
dec
push
imul
push
jmp
pop
and
mov
fimull
xor
xchg
xchg
or
sahf
cwtl
dec
jne
rcrb
inc
andb
lcall
pop
repz
push
pop
fs
mov
adc
movsb
jmp
mov
dec
cld
dec
cwtl
lock
outsb
add
xchg
aas
scas
push
sti
int3
icebp
sahf
cli
pop
js
cmp
adc
sahf
ss
mov
xchg
movsb
cmc
mov
sbb
or
xchg
iret
sbb
enter
mov
cmp
push
sub
push
data16
xor
shll
xor
stc
pop
js
shrl
idivl
lret
cmp
jp
xor
xchg
lahf
call
lods
and
call
or
cmp
xor
add
adc
arpl
or
adc
enter
daa
xchg
mov
xor
fsubrs
cli
pop
jg
lea
lret
mov
or
or
pop
mov
xor
xor
fdivs
mov
mov
push
cld
lcall
bound
pop
ret
sub
loope
imul
inc
jge
dec
xchg
sarb
idivb
fnsave
call
inc
inc
mov
roll
xor
add
outsb
movsb
cmp
cmp
addr16
xchg
mull
add
lods
stos
enter
fidivrl
call
add
adc
push
clc
aad
mov
fcmovbe
cmp
add
mov
loope
lahf
jae
ss
ja
inc
and
xchg
lret
sbb
addl
imul
fdivs
lcall
mov
stos
shlb
mov
das
hlt
mov
je
rcrb
flds
sbb
jecxz
repz
jl
icebp
and
pushf
mov
xor
cmpsb
in
ret
aaa
dec
mov
ss
popa
push
adcl
clc
sub
cmpsb
add
mov
jl
pop
sbb
out
xchg
dec
xor
mov
or
or
xor
stos
repz
jmp
idivl
mov
mov
push
mov
or
fisubl
lock
int3
pop
inc
fnstsw
pop
in
push
pusha
pop
mov
test
cli
insl
popa
xor
ret
outsl
call
or
fs
mov
fadd
loopne
incl
in
clc
shll
cmp
xor
ja
xchg
add
bound
outsl
sbb
loop
adc
jo
pop
inc
jne
sub
stos
cmpsl
inc
fmuls
aam
adc
int3
cltd
dec
cmp
dec
mov
inc
nop
xor
xchg
push
mov
and
lret
enter
or
jae
ds
lods
dec
cs
jne
mov
out
jo
mov
ret
lock
das
add
aam
ss
cs
cmp
xchg
popa
lock
std
or
push
lea
sbb
jl
ja
inc
ret
dec
lcall
push
lea
jg
pop
and
mov
xchg
cld
ss
or
inc
leave
or
mov
jmp
xchg
aas
add
popa
mov
push
pop
inc
lret
insb
push
cmp
add
xchg
pop
icebp
xor
lds
arpl
rcll
push
pop
sbb
ss
cmp
add
mov
mov
or
cltd
movsb
mov
push
push
mov
data16
js
sub
xor
cmp
push
aad
push
movsb
das
jmp
cwtl
sbb
cwtl
jb
mov
jno
sbb
les
leave
or
shl
into
je
call
nop
int
popa
stos
popa
jecxz
stos
data16
out
mov
stc
jo
jg
notl
adc
rol
xchg
dec
cmpsb
push
pop
bound
sbb
test
and
out
data16
outsl
bswap
sbb
loop
sbb
push
shll
xchg
or
mov
fcoms
dec
push
mov
dec
mov
push
push
ljmp
and
cmp
mov
dec
andl
cwtl
ds
lea
mov
xchg
and
addr16
pop
fsubl
stos
daa
int
enter
js
push
es
pop
out
lret
mov
test
jnp
push
adc
popa
xchg
mov
jo
xor
add
rcll
jbe
out
mov
jb
out
imul
mov
shll
aas
add
push
or
outsl
sub
mov
and
pusha
mov
rcl
sub
icebp
dec
insb
push
fcoms
dec
push
popa
lcall
adc
cmp
mov
jnp
mov
out
popf
add
adc
xchg
mov
out
and
add
sub
cmp
push
loopne
mov
int
outsb
lret
cmp
fisttps
inc
add
vucomisd
fwait
dec
aad
push
xchg
rclb
loop
jo
push
mov
mov
cmp
and
mov
fld
in
cwtl
xchg
in
jmp
shl
mov
inc
cld
and
xchg
or
and
or
jg
movsl
pop
xchg
aam
nop
sub
test
sbb
mov
aas
mov
mov
push
gs
mov
repz
in
scas
jecxz
dec
push
dec
and
out
pop
sbb
pop
pop
in
subb
insl
out
pop
fisttpll
jle
ljmp
je
or
mov
add
dec
aad
ret
xchg
cmpsb
xor
outsl
ss
mov
out
insl
ret
xchg
mov
mov
inc
jle
sub
les
sbb
xor
dec
xor
mov
inc
add
and
cmpsl
ja
iret
push
cli
mov
push
repnz
test
push
xor
out
cmp
and
in
int
and
jb
lds
push
fildl
dec
nop
xor
jo
scas
shll
divb
test
scas
push
cs
mov
rolb
fmull
adc
cli
sar
adc
mov
mov
nop
das
jbe
je
mov
mov
loop
test
imul
repz
jno
jmp
mov
dec
sub
mov
lock
imul
adc
daa
aam
fmull
sbbl
xchg
cmp
xchg
dec
jns
cmp
push
test
mov
pop
xor
les
pop
push
bound
fsubrp
jb
add
arpl
dec
pop
enter
xchg
push
and
sahf
and
jne
lods
mov
int3
pop
adc
add
sbb
fmul
xchg
xor
sub
jno
push
push
aaa
aas
sbbl
pop
jne
push
shrb
mov
jmp
xchg
push
xlat
aas
xchg
sbb
mov
sub
adc
push
adc
xor
xor
inc
push
and
andl
rclb
xchg
cltd
dec
push
ror
in
jnp
pop
cs
push
push
cmp
jmp
int
aam
mov
push
dec
inc
sti
movsb
rorb
mov
mov
out
ja
sbb
mov
pop
mov
sbb
sub
scas
mov
outsb
in
fildl
add
xor
sbb
and
inc
or
cwtl
aad
loop,pn
inc
pushf
das
push
cmp
hlt
scas
jo
pop
pop
mov
push
pop
fwait
int
or
jno
jne
lds
bound
insl
outsl
xor
int3
sub
mov
mov
outsb
pcmpgtw
out
ret
shrb
and
lods
fs
data16
pop
and
or
and
mov
cltd
sub
idivb
inc
pusha
xlat
daa
aam
xlat
push
xchg
ss
mov
out
cmp
lahf
mov
stos
out
xchg
test
and
jge
cmp
lcall
jne
mov
push
clc
push
mov
mov
mov
les
mov
ret
sar
lds
mov
insl
xchg
xchg
push
loope
loopne
gs
test
inc
xchg
push
mov
aas
push
jo
push
jp
pop
dec
sub
out
fsubrs
push
dec
xor
shlb
xchg
shll
cmp
andl
inc
add
ljmp
mov
jmp
les
xlat
add
lret
movl
cmp
fwait
mov
lcall
jecxz
pop
sbb
dec
leave
mov
aaa
loopne
fidivrs
dec
lods
movsb
inc
fs
cmp
aad
mov
add
mov
push
ffree
sbb
jmp
mov
jno
mov
xchg
out
out
mov
push
in
dec
pop
dec
adc
lcall
outsl
push
push
bound
test
dec
fdiv
movl
add
push
lds
pushf
sub
jnp
mov
jo
adc
int
idivl
shll
test
test
mov
push
fistpll
jnp
addr16
add
ret
iret
xor
inc
outsb
mov
sti
popa
dec
sbb
xor
xchg
mov
xchg
adc
cmc
lods
pop
or
push
fistpll
stc
icebp
mov
and
jbe
cli
insb
fisttpll
loope
sahf
dec
or
aaa
call
fdiv
adc
repnz
mov
mov
mov
cmp
int3
or
mov
mov
adc
and
stos
hlt
cmp
jecxz
adc
and
dec
xor
jp
stos
mov
cwtl
sbb
cltd
and
mov
das
hlt
rorb
push
lahf
rol
mov
orb
shll
mov
push
mov
push
lahf
aam
mov
nop
lcall
sub
push
into
mov
ljmp
xor
or
push
out
movsl
cmp
fisttpll
mov
divb
sub
jns
cmp
push
insl
xchg
push
test
test
push
cld
add
fs
es
orb
test
lea
adc
daa
xor
mov
in
inc
movsl
mov
pop
xchg
cltd
cltd
inc
in
push
sub
out
in
xchg
or
xchg
add
cmp
jne
inc
jnp
push
pop
fcompl
pusha
ss
aam
imul
punpcklwd
push
push
sbb
das
push
dec
mov
pop
fdivs
cmp
xor
push
pop
shll
adc
sub
xorl
test
pop
scas
add
mov
xor
test
inc
fcmovb
call
or
mov
mov
imul
mov
and
ds
lcall
call
out
push
lea
dec
pop
inc
lea
adc
into
cmc
loop
push
jl
sub
jle
scas
mov
sub
aad
rcll
xchg
sysret
jecxz
inc
xor
loope
adc
cmp
mov
jb
loop
insl
and
movsb
pop
pop
into
mov
pop
lock
movsb
push
nop
lock
jge
push
inc
inc
ja
outsb
icebp
pushf
nop
decl
test
add
push
in
iret
dec
inc
pop
test
dec
cwtl
cld
sub
icebp
loopnew
negl
jnp
jnp
insl
mov
adc
testl
cmc
pop
and
sub
sbbb
mov
inc
push
fwait
add
mov
or
fcoms
adcl
ja
daa
pushf
mov
inc
sti
mov
lea
enter
jl
xor
or
dec
ds
or
mov
and
mov
mov
adc
jns
jne
push
cmp
ljmp
popa
jmp
fldl
or
mov
sbb
bound
or
cmp
fidivs
sub
mov
xchg
lahf
pop
lods
scas
pop
test
lods
das
push
adc
sarb
in
add
ret
stos
incb
movsb
insl
jb
add
or
xchg
jne
test
ja
dec
mov
fidivl
les
dec
xor
xchg
aad
fiaddl
aam
pop
aam
dec
mov
push
sub
shll
add
ss
mov
mov
adc
push
xor
jmp
push
stc
mov
stos
inc
xor
mov
push
repz
inc
aaa
daa
inc
ss
aad
sub
pop
fs
adc
lds
xchg
shll
in
jg
inc
mov
in
mov
sub
add
stos
inc
xorl
cmp
inc
mov
push
pop
sahf
or
leave
imul
push
enter
je
jecxz
jnp
scas
pusha
test
mov
enter
push
iret
cld
xchg
jmp
xor
jg
mov
inc
ljmp
hlt
gs
xchg
push
adc
cmpsb
es
aad
les
fdivp
pop
pop
stc
test
sub
adc
int3
ljmp
mov
fnsave
cmpsb
insl
test
stc
addr16
inc
push
jge
mov
jbe
out
test
jge
mov
std
inc
sbb
test
in
adc
mul
scas
lahf
sub
lds
insl
jo
mov
sub
push
loope
jmp
add
ljmp
outsl
in
and
jb
dec
dec
lea
lahf
cmp
pop
into
sub
push
mov
xor
mov
fldl
fidivs
jp
scas
cld
into
aam
dec
mov
lret
cmp
cmp
js
mov
sbb
mov
test
adc
cltd
cmp
test
or
jmp
dec
sbb
cmpsl
push
sub
jmp
jnp
push
inc
xor
adc
imul
xchg
iret
adc
jge
sahf
mov
xor
pop
rep
lahf
and
sub
push
lret
mov
daa
test
xchg
aam
adc
jb
iret
mov
adc
lret
pop
fisubs
sub
addr16
sub
cmp
push
xor
sub
out
cmp
fildll
jmp
mov
mov
leave
imul
sahf
fisubrl
imul
ds
fsubrs
fisttps
lods
or
dec
xlat
push
cmc
adc
xchg
in
add
out
arpl
mov
dec
xor
ss
and
cmpl
out
rolb
lret
mov
iret
adc
inc
js
xchg
mov
movsl
int
int
lods
add
jns
jl
xchg
mov
popf
test
jno
xchg
jp
loop
aaa
popa
sahf
cmpsb
xchg
mov
inc
loop
jnp
ja
jnp
jl
pop
dec
loopne
push
rol
sbb
rcrb
call
iret
cmp
adc
inc
adc
insl
test
cli
shrl
xchg
xchg
cli
inc
sbb
xor
nop
xchg
push
test
push
dec
xor
ret
adc
out
rorb
stos
aad
lea
jp
sbb
xor
mov
movsl
scas
sub
adc
cmp
mov
mov
repnz
jl
out
jle
dec
push
ret
fdiv
push
out
movsl
sub
push
sub
push
mov
pop
mov
or
and
push
jg
sbb
in
outsb
dec
xor
rcrb
fidivs
sub
outsl
push
or
addr16
sbb
lods
dec
mov
push
jmp
test
cs
ljmp
dec
inc
pusha
insb
imul
sbb
cmp
jne
hlt
sub
jp
add
mov
int
add
adc
sbb
in
sbb
mov
push
sub
pop
adc
add
imul
adc
inc
xchg
mov
pop
dec
mov
ret
stos
loop
lea
sub
mov
jle
mov
cwtl
mov
out
lcall
push
sti
push
jp
test
icebp
iret
push
loop
mov
out
jbe
in
mov
inc
icebp
lret
push
cld
adc
nop
cwtl
xchg
call
ss
stos
add
sbb
nop
mov
pop
jl
clc
stos
jne
pushf
lock
lret
imul
pop
dec
xor
iret
dec
sbb
cltd
xor
ret
insb
xchg
ret
clc
sub
or
pushf
outsl
sti
mov
clc
fbstp
mov
mov
fs
insl
or
pop
sub
notb
incl
repnz
pop
ret
xorl
insl
insl
into
lods
adc
pop
cmp
lret
in
push
jecxz
scas
jg
movsl
in
addr16
fdivrl
jne
aad
adc
pop
push
sub
lock
jae
fldcw
pop
stc
mov
mov
addr16
movsb
and
add
mov
pop
out
dec
movsb
inc
xchg
inc
std
xchg
push
mov
int
jle
in
push
xor
inc
int3
xor
stc
xor
cwtl
out
mov
std
adc
popa
imul
pop
lods
xor
lods
jecxz
and
int3
pop
lret
fdivrp
pop
pop
pop
add
lods
loope
hlt
mov
inc
add
jg
cmp
inc
cmp
mov
add
push
and
add
cmp
jecxz
lods
mov
push
es
enter
jb
cwtl
push
dec
shll
out
xchg
scas
cmpl
shl
lea
mov
pop
cmp
mov
adc
mov
dec
pshufw
les
rcl
pusha
scas
clc
cmp
iret
lahf
int
insl
stos
aam
mov
or
cld
bound
orl
cmp
andl
fs
add
mov
xor
xlat
in
out
dec
dec
shlb
add
sub
sbb
test
mov
imul
icebp
mov
lock
stos
cmp
add
adc
xor
scas
pop
cmp
subl
xor
cmp
fsubrp
aaa
adcb
jo
mov
ret
js
sahf
enter
shrl
fnstenv
daa
jle
fisubs
inc
insb
adc
jne
imul
or
lods
xor
ljmp
cmpsb
sub
push
popa
inc
xchg
sbb
lds
pop
in
jp
xchg
mov
mov
mov
out
ret
out
dec
or
cmp
mov
adc
inc
hlt
xchg
push
lret
push
pop
pop
shrl
pop
addr16
rolb
dec
add
xor
sahf
push
loope
int
loope
inc
adc
lea
dec
arpl
and
icebp
out
cmp
xchg
xor
rcrb
mov
pop
outsb
mov
cs
cmp
or
dec
out
cltd
cmp
fsts
fldt
lea
lret
fnstsw
std
shll
add
popf
push
mov
in
daa
mov
push
and
imul
popf
int
or
add
and
jecxz
xchg
int3
outsb
das
and
aad
loop
stc
cmp
or
push
adc
cs
hlt
sub
outsb
xchg
into
outsb
inc
orl
mov
jmp
imul
hlt
in
jge
inc
lcall
sbb
xchg
inc
jecxz
cmp
jmp
ror
push
fucomip
xor
stc
pushf
sahf
loope
cmp
ds
jno
adc
lea
push
inc
pop
push
xchg
mov
jb
fs
cmp
push
xlat
enter
lock
pop
sbb
adc
jmp
loopne
mov
sub
xchg
push
lret
lret
out
and
ficoml
enter
hlt
mov
mov
fmuls
andl
mov
add
jp
daa
or
jo
loope
les
loop
pop
fisubl
add
stos
stos
cmp
rclb
scas
aas
bound
xor
insb
std
outsl
inc
inc
lods
mov
rcr
jp
addb
xchg
and
stos
idivl
xlat
sti
mov
arpl
inc
popa
adc
leave
test
inc
cld
jno
rcl
test
sbbb
pop
mov
test
pop
inc
popf
les
cmpsl
mov
dec
jge
mov
les
aas
out
inc
es
sub
xchg
mov
push
loop
push
mov
decb
insb
les
push
sti
imull
shll
adc
rorl
mov
fwait
js
xorb
xchg
add
lods
stos
js
lds
data16
ret
hlt
push
jo
loope
xor
mov
push
icebp
push
jns
push
sahf
mov
adc
fistpl
mov
jnp
pop
shr
mov
sub
xor
lcall
les
xor
xor
dec
cmc
pop
mov
lret
clc
scas
dec
fsubrs
inc
jp
push
sbb
sub
inc
in
std
fdiv
add
push
addl
clc
push
stc
xchg
add
cmp
shrl
fstl
cmp
les
neg
clc
ret
sbb
lods
adc
add
imul
ljmp
dec
sub
rcrb
fidivl
jmp
jae
aaa
mov
lcall
or
mov
jle
out
pop
cmpsb
aas
sub
add
jg
dec
gs
pop
in
adc
pop
aas
mov
ret
outsb
inc
xchg
dec
dec
ja
push
pop
and
adc
jne
pop
adc
xor
dec
test
iret
imul
mov
fwait
fwait
ljmp
das
push
cwtl
xchg
popa
cwtl
pop
mov
xchg
or
inc
scas
sbb
fs
mov
jbe
iret
insl
xor
lcall
jecxz
leave
mov
mov
push
sahf
jge
or
push
loop
mov
cmc
mov
sbb
loopne
cmp
dec
in
mov
popa
leave
mov
mov
jp
pop
cmp
outsl
inc
mov
mov
out
xchg
test
xor
sub
daa
mov
mov
cmpsb
aam
xchg
dec
dec
adc
sahf
push
pop
paddq
aad
icebp
sahf
mov
insl
mov
jns
adc
cld
push
cli
push
mov
push
test
pop
into
sahf
imul
jnp
xor
pop
hlt
mov
xchg
stc
es
mov
inc
xchg
movl
out
jg
in
mov
dec
xor
mov
frstor
inc
or
cltd
mov
sub
jnp
ret
jg
inc
rorl
or
ja
jge
ret
inc
dec
cli
cmpsb
sbb
push
push
mov
ret
sbb
push
mov
or
xchg
cwtl
sub
lret
in
fildll
cltd
dec
popf
test
ficompl
xchg
bound
pop
mov
in
std
ja
xchg
icebp
jg
fwait
js
popa
jbe
cmp
daa
es
mov
cmpl
ss
and
jns
pop
sbb
sahf
push
jbe
popa
pop
popa
ficompl
outsl
ficoml
cmp
repz
cmp
jl
imul
xor
and
daa
stos
inc
mov
aam
loopne
jnp
mov
xchg
imul
ret
cmp
jnp
and
mov
rolb
push
push
push
dec
jl
xor
cmp
push
pop
mov
push
jbe
mov
add
es
cmp
jae
cmp
mov
add
and
jb
ja
dec
imul
js
mov
inc
xor
xlat
sbb
popf
stos
aam
ljmp
lods
inc
jecxz
fwait
in
mov
lret
or
adc
xchg
mov
jmp
xchg
movsl
jnp
lods
jns
jg
mov
lea
cmp
cmpsl
repnz
mov
sbb
pop
pop
gs
sarw
mov
enter
xlat
mov
test
inc
adc
fisubrl
ds
ja
loop
mov
insb
adc
outsl
out
lods
dec
loope
dec
or
jp
cld
or
test
clc
pop
and
dec
add
fsubs
mov
cmp
mov
jecxz
aas
js
fcoml
add
stos
push
sub
fdivl
cmp
int
adc
mov
test
mov
jno
fldenv
rolb
jns
fbstp
test
cmp
scas
xchg
mov
or
mov
add
inc
inc
xchg
adc
js
mov
int
dec
push
jbe
rcll
cwtl
cmp
pop
out
int
sbb
push
cmp
inc
pushf
das
cltd
fcmovne
loop
mov
mov
into
xchg
mov
jns
imulb
adc
jmp
mov
push
pop
enter
int3
stos
mov
pop
in
or
inc
ljmp
or
daa
jo
cmp
adc
aas
sbb
cli
lds
cmp
lahf
xorl
orl
jl
test
jge
xor
into
mov
add
adcl
xorb
call
mov
dec
jb
push
push
cmp
add
ds
pop
cmp
inc
icebp
loopne
xlat
jno
sahf
iret
cmp
rol
add
add
lret
and
jb
push
and
test
sti
aas
xchg
or
cwtl
sbb
cli
inc
shlb
fsubrs
in
rorb
cmp
pop
mov
fs
pop
or
sub
in
sbb
xchg
lahf
jl
jg
sahf
adc
push
stos
sarl
js
and
ficompl
mov
or
mov
xor
push
xchg
sarl
sti
mov
ja
jmp
stos
adcb
xor
dec
xchg
xor
mov
popa
adc
mov
ss
inc
je
movsl
rcll
jge
or
xchg
stc
pop
movsl
fmull
xchg
xor
or
mov
test
dec
fmul
xchg
or
or
adc
pop
iret
pop
or
cmpsl
mov
sbb
gs
arpl
incl
adc
mov
clc
repz
out
fimull
cmp
mov
int3
lcall
outsl
jo
inc
xor
testl
xchg
fdivs
sub
out
js
movsl
lret
mov
push
jge
inc
data16
cmc
mov
addl
fisubrs
dec
outsb
cmpsb
stos
push
add
stc
sub
and
add
in
lods
es
cs
cmp
daa
jp
lahf
adc
mov
lahf
jae
dec
into
add
rclb
xor
shrb
or
cld
or
push
add
sbbb
repnz
dec
mov
outsb
xor
test
and
inc
or
sub
loope
xor
jp
cs
xor
test
pop
stos
rorl
ficompl
push
or
out
and
addr16
sbb
dec
cli
stos
lret
xchg
cmp
aaa
inc
pop
push
or
lods
and
inc
es
enter
int3
aaa
lea
flds
clc
loopne
lods
mov
ja
lcall
aaa
sbb
test
inc
leave
sahf
dec
sahf
xchg
mov
stc
fadds
add
outsl
aaa
mov
cld
pop
jno
xchg
mov
dec
jb
jns
notl
push
adc
jge
xchg
sbb
mov
xor
cmp
cli
sbb
or
sti
out
stos
stos
in
jo
push
mov
sti
dec
js
xchg
sbb
sbb
mull
mov
pop
mov
adc
push
mov
pop
adc
or
ljmp
mov
or
xor
jnp
sbb
mov
pop
in
insb
xor
inc
daa
shr
jle
leave
mov
mov
cmpsb
jge
and
rorl
jns
inc
ret
sbb
mov
stos
aad
and
test
dec
aas
loop
test
xchg
jno
outsl
movsl
mov
int
addr16
pop
lea
add
sahf
scas
or
cmp
in
cltd
sub
imul
lret
jnp
xchg
fcomip
outsb
jmp
andl
sahf
add
mov
ljmp
cmpsb
icebp
push
mov
dec
jbe
and
divl
aad
int3
imul
aam
xchg
call
fnsave
push
and
and
inc
push
sbb
cli
decb
xchg
pop
fstpt
cwtl
les
enter
xchg
pusha
out
push
push
rol
aas
xlat
loopne
xor
or
pop
out
outsl
js
movsl
mov
pop
dec
fisttpl
sbb
or
dec
sbb
xor
fisttps
jl
mov
jne
add
cmp
and
lods
inc
ja
push
sarb
fimull
xor
notb
out
lret
jecxz
imul
pop
outsl
sub
jg
mov
add
aad
stos
js
adc
cmp
xor
mov
xor
call
out
stc
inc
cmc
stc
add
inc
out
jb
ljmp
imul
sbb
dec
jg
xchg
out
push
imul
popl
mov
dec
stos
lods
aaa
xchg
sarl
dec
inc
ss
dec
cmp
call
sbb
sub
dec
add
or
cmp
dec
pop
aam
stos
adc
nop
inc
mov
es
xor
push
and
je
mov
pusha
shrb
xor
pop
ja
or
hlt
sub
rorb
sbb
jo
xchg
ret
jae
lea
adc
xor
aam
icebp
dec
sub
add
push
test
xor
ljmp
clc
mov
cld
out
gs
sub
push
cmp
jne
data16
in
lret
push
rcll
divl
call
or
xor
stc
lret
xchg
ss
out
imul
cmp
stos
repnz
in
loopne
hlt
repz
and
push
shrb
pop
jecxz
test
clc
addb
lods
mov
dec
popa
scas
aas
aaa
scas
jmp
xchg
sti
imul
mov
xchg
sub
andb
mov
xchg
jge
jmp
pusha
lods
inc
js
arpl
push
dec
lock
inc
inc
andl
mov
movsb
pop
fsts
fisttps
test
aas
or
sbb
ja
pop
mov
rdpmc
inc
xor
mov
push
jmp
cmpsl
lcall
xor
orb
fidivrs
mov
lret
sub
fmull
into
cmpsl
push
ss
sti
movsb
sbb
das
daa
inc
and
in
pop
bound
movsl
push
bound
bnd
gs
jle
or
jge
inc
jle
loopne
mov
ret
in
inc
sahf
xor
arpl
lods
mov
xchg
pop
mov
arpl
arpl
inc
xlat
jl
div
cmp
push
flds
add
pop
lods
cmpsl
sbb
ja
push
test
mov
dec
sbbb
or
int3
sti
jg
popa
int3
or
andb
pop
idivb
mov
sbb
sub
or
lahf
adc
sahf
outsl
out
divl
fcmovb
orb
xor
sahf
lods
out
xchg
imul
shld
dec
in
sub
xchg
adcb
fdivrs
inc
popf
int
lcall
out
mov
cwtl
jns,pn
ja
inc
xlat
xor
jl
jbe
es
mov
inc
shl
xor
cmpsb
sbb
xchg
xor
and
rcr
push
jle
cmp
fs
lcall
sarb
inc
pop
mov
adc
jbe
or
sbb
push
mov
xor
cmpsl
sahf
fs
mov
icebp
popf
pop
jno
pop
dec
insl
xor
xor
jle
clc
add
add
xor
cmpsl
leave
leave
push
pop
jge
cltd
mov
int3
or
pushf
lods
and
imul
sbb
in
std
push
in
int3
cmp
leave
jge
add
push
sub
loop
repz
lahf
push
shll
and
push
adcl
pop
mov
leave
data16
mov
sub
into
xchg
sbb
jl
ss
push
call
lock
xor
stos
sbb
cs
push
ret
fwait
adc
xchg
shld
mov
inc
inc
insl
imul
mov
cmp
jg
out
cmp
add
jle
mov
xchg
call
lock
jae
inc
or
add
cltd
sbb
cld
int3
mov
pop
xchg
sub
test
add
sti
mov
xor
outsl
fmuls
fcmovnu
test
or
data16
stc
dec
dec
out
je
mov
and
cmp
loop
dec
mov
pop
fwait
insb
fisubrl
push
sub
and
sub
int
into
and
test
ljmp
int3
es
test
pushf
jge
lds
icebp
cltd
push
lods
adc
mov
jae
cmp
sahf
mov
xchg
sub
movl
xchg
fcoms
stos
mov
xor
arpl
cmc
or
adc
inc
mov
and
out
dec
sub
jmp
cmpsl
and
xchg
inc
stos
jb
mov
es
jp
jmp
mov
lock
cmp
imul
and
ljmp
repnz
mov
das
lds
in
div
lret
aaa
and
pop
xlat
mov
sbb
sbb
mov
xor
out
push
push
or
inc
pop
lds
imul
dec
into
fcmove
adcl
jecxz
aaa
aad
mov
xchg
outsl
in
fwait
into
mov
sbb
add
lock
outsl
inc
adc
mov
data16
adc
sub
adc
mov
stos
push
adc
mov
sub
insb
in
movsb
push
stos
je
lock
cmp
stos
lcall
fcomps
ret
arpl
imul
into
sbb
or
dec
stos
mov
and
mov
ret
dec
das
cmp
cmp
or
lret
repnz
push
push
or
loope
shrb
jbe
addr16
sbb
cwtl
ret
push
addr16
cmp
jbe
aam
in
daa
test
mov
cwtl
out
push
fdivrl
das
out
int
je
push
test
in
shr
sbbl
xchg
imul
jg
jb
lret
cmp
xor
xchg
pop
scas
sub
addr16
sbb
xchg
jno
das
sub
mov
outsl
cmpsl
xlat
cmpsb
ja
mov
fbstp
sbb
cmp
fiadds
pop
dec
cmpl
xchg
cmpsb
stc
lock
jl
lock
adc
cmpsl
addl
stos
and
outsb
movsb
cmp
and
sub
xor
shll
mov
arpl
mov
call
xor
and
loop
pushf
adc
mov
jp
ficoml
clc
mov
adc
mov
jge
push
outsb
mov
push
pop
shl
imul
cmp
popa
pop
pop
ljmp
xchg
jmp
notl
push
cmp
xchg
dec
cmp
and
cmp
jbe
xorl
and
test
push
dec
lret
int3
pop
or
inc
into
dec
fiadds
fists
fdivs
lea
fwait
jg
test
xor
inc
or
stc
push
scas
jecxz
xor
push
lods
add
movswl
adc
decb
jmp
mov
loopew
xchg
outsl
rolb
add
das
push
xlat
sbb
sub
popa
or
dec
mov
out
push
loope
lahf
bnd
cs
inc
add
test
dec
rolb
sub
fstpt
dec
orl
add
push
outsl
jo
das
adc
test
push
loopne
adc
pop
and
in
push
push
out
std
add
push
into
mov
mov
jns
js
push
lds
push
jne
shrb
adc
bound
cmpsl
popf
insl
repz
adc
loopne
xor
ja
std
dec
int
xchg
int
scas
aad
push
inc
mov
cmc
rcr
imul
adc
mov
jmp
cmp
xchg
nop
cmp
add
jno
mov
mov
or
fs
divl
aam
push
sbb
adcb
sbb
outsb
dec
cltd
mov
movsl
mov
outsl
add
aam
jl
aam
outsb
pop
inc
stos
or
sbb
jmp
pop
jns
mov
inc
in
repnz
mov
jo
xchg
ror
test
inc
and
nop
inc
adc
xchg
lods
sarl
xor
jg
shr
aaa
sbb
lods
mov
aad
xchg
out
jno
inc
push
mov
or
dec
gs
scas
mov
mov
cltd
movsl
jle
adcb
push
dec
fwait
or
fwait
cld
push
pop
repnz
mov
jmp
std
dec
pop
call
sub
int3
data16
inc
mov
lret
mov
push
inc
cwtl
cmpb
xchg
test
cmpsb
inc
ja
adc
imul
push
dec
mov
popa
out
xchg
push
cmp
test
imull
fimuls
clc
aas
ret
aam
shl
cmpsl
cs
cltd
xor
aas
adc
push
shll
add
in
add
arpl
mov
mov
lret
mov
call
adc
pop
push
or
pushf
in
and
je
mov
popa
xchg
test
xchg
rclb
movb
pmaxub
pop
xchg
out
sahf
sbbl
push
pop
call
pop
sbb
ret
outsb
lea
int3
mov
push
and
ret
ljmp
loope
mov
testb
ja
inc
mov
fwait
push
ret
xchg
imulb
test
popf
leave
add
mov
push
negl
inc
mov
fcompl
mov
inc
and
jno
jno
inc
scas
mov
mov
dec
test
pop
je
insl
or
hlt
insl
lcall
ret
or
lcall
movsl
mov
test
xorb
insb
test
lcall
xor
stos
aam
xorb
sbb
jge
pop
adc
jg
sbb
lret
jecxz
xchg
pusha
push
je
mov
and
sub
imul
sbb
daa
cmc
push
jns
gs
fstpt
ret
sbb
popa
xor
scas
daa
sub
leave
inc
ljmp
adc
sarl
je
xchg
xor
jecxz
jmp
aad
repnz
aaa
jecxz
xchg
dec
push
push
gs
das
insl
jmp
sbb
dec
pop
xchg
push
push
cmc
fcoml
scas
outsb
xor
pop
xor
incb
add
lods
rcrb
sub
fisubl
bound
cs
mov
adc
nop
xchg
push
sub
loope
lcall
push
push
xchg
push
bound
mov
iret
dec
sahf
stos
es
js
rorb
jo
pop
pop
test
push
ljmp
scas
in
hlt
xor
mov
cmp
push
adc
in
push
jae
rorl
out
testl
push
xchg
xorb
push
xor
pop
mov
mov
stos
int
mov
mov
in
aam
pop
adc
mov
mov
ret
or
add
cltd
scas
and
stc
mov
cld
or
iret
bound
mov
sti
xchg
add
mov
nop
dec
pop
test
cmp
jecxz
push
cmp
cmp
das
es
repnz
inc
jnp
xchg
push
pop
xor
mov
repz
out
test
setb
jb
jo
add
sub
xchg
mov
cmp
nop
movsb
mov
or
jae
sbbl
pop
rclb
xchg
pop
push
cltd
lret
je
xor
or
mov
push
sbb
push
sbb
or
mov
xchg
xlat
sub
jg
test
or
imul
cltd
pop
add
movsb
lea
movsl
clc
sarb
and
push
aaa
je
sar
inc
jg
gs
xchg
or
popf
xchg
mov
xchg
dec
mov
lret
lods
addr16
dec
cmp
pop
sub
jmp
in
xor
rol
push
jmp
out
ret
fiadds
or
mov
xchg
jns
xlat
and
gs
xchg
sub
cmp
int
lret
pop
mov
mov
inc
or
cmpsb
mov
xor
in
std
push
jnp
push
pop
pop
ljmp
inc
adc
mov
mov
ret
jg
pop
arpl
cmovge
mov
pushf
andl
les
and
arpl
xchg
sub
inc
imul
and
movsb
dec
lods
xchg
fwait
or
pop
outsb
cld
xor
or
cmpsb
stc
pop
mov
dec
or
iret
cmp
xchg
or
dec
fcomip
push
test
jle
in
out
shrb
jmp
outsb
lcall
hlt
xchg
push
mov
loop
call
mov
mov
outsl
fs
les
sub
into
pop
mov
call
add
lahf
insl
dec
cld
and
fisttps
mov
int3
popa
leave
pop
xor
and
nop
leave
fistps
mov
adc
aaa
clc
push
add
mov
xchg
sub
hlt
mov
sub
mov
jmp
lea
cld
jmp
xor
std
imul
fistps
xlat
fimull
mov
pop
dec
inc
push
sbb
lods
cli
jnp
cld
mov
iret
stos
fcompp
imul
push
inc
hlt
out
xor
loop,pt
mov
xchg
mov
decl
dec
test
ret
mov
push
mov
cltd
pop
fwait
push
or
mov
test
or
mov
imul
neg
je
shl
jl
add
mov
movl
ljmp
out
sub
push
sub
in
jae
mov
imul
add
fwait
mov
cs
jns
cwtl
mov
mov
aas
inc
out
rclb
popf
in
mov
jae
pop
nop
or
sub
aam
dec
or
mov
and
dec
xchg
push
pop
mov
or
mov
lock
and
fsubrs
sub
loope
sub
xor
sub
push
daa
adc
jp
xchg
sbb
mov
add
ljmp
insl
fs
lock
xor
xchg
lcall
imul
xchg
push
mov
mov
mov
addr16
inc
push
dec
out
inc
xchg
in
or
leave
cli
jae
pop
pusha
xor
repnz
jb
jbe
js
test
jo
imul
pop
cmp
push
insl
inc
sbb
xchg
cli
lods
jne
leave
sbb
push
fs
jge
stos
psubsb
xlat
ret
mov
insb
jge
lods
cmp
and
fmuls
leave
lods
push
fwait
mov
and
push
add
cmp
xor
popa
cli
xorl
pop
in
pop
add
sbb
movq
sarl
cmp
imul
mov
repz
insb
mov
jbe
push
pop
add
aad
adc
push
les
test
push
fists
sub
mulb
roll
and
mov
adc
mov
test
mov
mov
sbbl
jns
add
jp
rcr
mov
dec
dec
and
ret
sbb
inc
subb
and
xor
fmul
popa
int
aam
jbe
cmp
xchg
push
pop
ds
xchg
lock
and
ss
dec
in
dec
fwait
sbb
fists
test
push
lds
bswap
cld
pcmpgtw
mov
sub
stos
push
movsb
jae
or
jb
push
adc
xor
xchg
aad
mov
call
dec
xor
pop
movsl
xchg
arpl
insl
mov
cltd
adc
mov
sub
mov
jnp
pusha
xorb
lcall
dec
dec
or
push
mov
fwait
outsl
sub
sub
roll
imul
ss
rorb
inc
sub
mov
xchg
ficoms
les
std
scas
or
push
jb
sti
or
iret
imul
and
pushf
push
dec
cmpsl
adc
and
nop
dec
cmp
and
add
rclb
nop
mov
sti
xchg
adc
bound
adc
push
cli
dec
shl
dec
fucom
fistpll
fidivl
dec
mov
aad
cltd
add
or
stos
jmp
in
fwait
lods
sbb
mov
xchg
xor
sub
add
mov
sub
push
ja
bnd
sbb
fwait
add
and
sbbl
js
fdivrs
xchg
scas
pop
dec
in
movsb
rcrl
dec
mov
push
mov
ja
imul
notl
mov
imul
inc
jae
scas
push
jmp
or
sbb
cmp
mov
jecxz
insb
mov
in
pop
pop
and
test
cli
imul
jae
into
xchg
jle
xchg
insb
jno
push
xor
inc
push
xlat
scas
cmpsb
xor
inc
fwait
fwait
sbb
mov
push
cmp
ljmp
mov
lret
loop
fpatan
adc
mov
mov
cmp
out
test
mov
rcrl
not
iret
out
fimuls
mov
sbb
or
nop
sub
outsl
and
adc
jge
mov
sub
dec
adc
ret
out
test
sub
mov
repnz
jae
pusha
out
jmp
call
bound
rcl
sub
dec
or
sub
mov
xchg
test
cli
and
repnz
lret
sub
mov
movsb
mov
fdivrl
fnsave
stc
mov
data16
lret
je
and
imull
inc
lahf
inc
mov
cmc
in
test
popa
sbb
iret
jmp
xor
fwait
and
rcll
push
ss
and
pop
dec
std
sbb
xchg
test
add
mov
jno
aaa
mov
mov
adcl
xchg
jae
dec
push
xchg
pop
inc
mov
cmp
jg
lock
fldt
add
mov
adc
xlat
test
lods
ret
dec
mov
ss
mov
les
movsl
mov
ljmp
xor
int
mov
cwtl
push
loopne
addr16
out
cmp
mov
and
inc
lea
shlb
add
mov
xchg
popf
lret
nop
gs
test
shlb
jl
outsb
push
cli
mov
lods
pop
mov
adc
mov
inc
stos
xchg
adc
mov
loope
dec
push
mov
cmp
mov
sub
and
mov
mov
jecxz
fsubs
popf
js
ret
add
inc
imul
aaa
push
test
dec
mov
jmp
mov
xor
cmpsl
sub
lret
dec
rcr
pop
ja
push
scas
repz
aaa
and
cmp
and
aad
inc
mov
mov
inc
lret
data16
sbb
shrb
int
mov
outsl
add
sbb
push
cmp
add
in
test
shl
in
adc
inc
sub
pop
cmpl
inc
insl
fmuls
or
pop
jmp
cmp
pop
jbe
lods
int
add
addr16
jle
mov
mov
fiadds
xchg
enter
adc
aas
inc
push
clc
jle
xchg
in
jbe
push
cmp
pop
push
add
filds
pop
andb
dec
adc
sbb
aam
cwtl
fst
pusha
jbe
xchg
clc
sub
add
div
pop
mov
add
pop
ja
jb
adcl
adc
out
jns
inc
mov
add
mov
dec
inc
add
push
mov
sti
pop
add
fimuls
scas
outsb
pop
pop
mov
clc
pop
dec
test
push
std
xchg
or
xor
aaa
iret
jns
mov
mov
rorb
and
xchg
movsl
movsl
mov
out
xchg
sub
stc
in
mov
pop
in
arpl
int3
cwtl
outsl
mov
popf
or
jns
fisubs
dec
mov
in
and
cmp
je
mov
inc
lcall
fdivrs
sbb
and
jmp
sbb
sub
imul
and
iret
push
cld
xchg
xchg
xchg
test
mov
lcall
cmc
pop
xchg
bound
mov
fsub
pop
leave
out
jo
mov
rol
mov
hlt
fcmovu
push
mov
and
shll
dec
test
dec
and
cmpsl
mov
jg
mov
mov
nop
mov
pop
repnz
xor
addr16
mov
push
cli
jle
data16
dec
fstl
mov
xor
out
mov
pop
mov
cmp
lcall
and
lds
shlb
incb
dec
sbb
negl
jbe
sarb
cmp
rcrl
jp
xchg
test
mov
fs
das
sub
xor
xchg
and
loope
add
push
aaa
cmp
pop
push
and
ret
sub
dec
mov
mov
jge
mov
mov
stos
mov
mov
xchg
mov
hlt
cmc
mov
in
js
stos
icebp
push
mov
inc
add
fnstsw
andb
pop
stos
jno
xchg
ljmp
pop
push
repz
loope
imul
xchg
fcoml
ds
pop
pushf
je
daa
not
fs
jmp
pushf
xor
fidivrs
insb
xor
pop
xor
jae
insl
das
jl
jns
cld
add
xchg
daa
xchg
dec
push
insl
adc
daa
sub
cmp
notl
cli
lcall
push
mov
fucomi
mov
out
test
or
xchg
push
pop
dec
pushf
pop
pop
push
out
fadds
mov
mov
push
adc
fstps
ja
push
das
xchg
mov
add
mov
mov
inc
mov
sbb
xchg
lock
mov
xchg
cli
lcall
mov
mov
adc
clc
mov
rorl
in
mov
fcmovnbe
mov
inc
push
push
loope
fs
xor
cmp
push
add
shrb
xchg
jbe
mov
mov
sbb
sbb
pop
pop
mov
inc
xor
in
pop
jno
mov
lds
in
mov
sbb
fistpll
bound
fs
mov
adc
lret
jnp
pop
mov
into
xchg
fsubrs
cmp
das
xchg
dec
push
int
scas
push
xor
test
xorl
pop
xlat
cmpsl
cltd
in
pop
int3
fld
add
movsb
das
adc
aaa
idiv
lods
inc
subb
xor
mov
mov
loop
adc
or
cmp
stos
inc
xor
imulb
inc
mov
pushf
iret
mov
pop
inc
movsl
push
stc
loop
scas
sbb
sub
jno
sub
dec
es
push
lea
aam
cmp
scas
fldcw
jnp
pop
popf
in
shrl
mov
in
divl
sub
jl
pop
cld
push
aaa
jg
andl
pop
dec
flds
mov
mov
mov
gs
jl
rcrb
fadd
test
xor
dec
leave
mov
sub
jl
mov
fiadds
xchg
xor
pop
dec
jmp
add
add
faddp
push
fs
and
xchg
mov
testl
imul
mov
icebp
pop
mov
test
dec
lret
out
xchg
xchg
decb
call
out
loop
inc
sbb
adc
je
icebp
or
inc
xchg
push
call
sbb
mov
shll
push
mov
test
inc
mov
xchg
pop
or
test
xorb
orb
mov
mov
lds
or
fwait
js
pop
adc
mov
push
mov
es
mov
int
es
jle
ret
add
ficompl
test
mov
adc
call
shll
arpl
or
cmp
jno
dec
mov
ss
xchg
push
out
lea
and
dec
xlat
jecxz
lock
inc
ljmp
lods
pop
shrl
test
jp
pop
mov
stos
cmp
scas
lret
ja
xchg
adc
xchg
sbb
and
fcoml
sub
test
pusha
cmp
xchg
mov
push
daa
sub
lods
addr16
adc
aad
mov
lds
xchg
lods
xor
add
adc
ret
sub
mov
test
mov
lea
fnstenv
mov
pop
loope
inc
mov
outsl
adc
aad
sub
pusha
mov
adc
xchg
lcall
push
xor
stc
jno
pop
ret
sub
sub
ja
aad
push
in
add
add
out
mov
push
cli
daa
lds
ficompl
jno
out
adc
fcmovbe
dec
jge
mov
jb
xchg
cli
arpl
in
insb
out
lcall
cld
loope
push
cmp
adc
mov
test
aaa
lods
pop
cmp
ja
popa
flds
inc
addr16
xor
das
js
cmp
lods
push
int
xchg
icebp
jmp
out
jno
xorl
aad
ljmp
aaa
mov
mov
dec
pop
repnz
test
or
sub
jbe
and
neg
ss
pop
faddl
clc
push
xchg
jb
cltd
out
popf
out
insl
inc
dec
add
call
dec
sbb
sub
adc
pop
and
mov
push
add
xor
test
xor
sbbl
popa
jnp
sbb
mov
and
jae
mov
out
jnp
xchg
push
outsl
dec
mov
inc
jbe
test
mov
mov
out
icebp
mov
sbb
gs
push
bound
sbb
in
jmp
xchg
lods
mov
jo
push
lcall
cs
sub
jmp
mov
and
cmc
or
rcll
xor
lahf
inc
nop
shlb
lahf
adc
dec
sar
int3
mov
ret
xchg
in
xchg
push
ficoms
push
int3
es
and
and
sub
xchg
test
insb
outsl
push
addr16
push
or
xor
xchg
out
push
aaa
jge
jg
mov
js
push
or
ret
shll
scas
sahf
adc
pop
jb
pop
or
mov
push
pusha
nop
adc
mov
xorb
mov
jp
das
pop
shl
mov
jg
push
adc
add
daa
out
pop
test
imulb
cmp
ljmp
ja
bound
ret
sub
leave
inc
jb
test
add
pop
lret
pop
out
mov
mov
push
sub
inc
push
mov
jb
jp
fimuls
fcompp
xor
mov
loope
out
test
ret
popa
ret
jns
fldcw
jge
pop
in
jbe
dec
jae
adc
and
sbb
test
adc
jnp
jb
lds
aaa
mov
xor
push
pop
jl
sub
stos
mov
xchg
jo
mov
mov
lahf
std
inc
lret
mov
jle
mov
or
sub
push
cld
out
cmp
cmp
in
cmpsl
add
iret
push
xor
insl
inc
imul
test
add
xchg
iret
inc
insl
addr16
adc
sbb
xlat
fsts
sub
and
out
dec
js
fdivrs
scas
jae
iret
and
out
xchg
mov
mov
dec
outsb
jbe
inc
add
hlt
mov
mov
push
push
push
lcall
pop
negb
mov
mov
cmp
pushf
in
xchg
ret
add
or
and
loopne
es
mov
rorb
mov
js
cwtl
int3
outsl
dec
ret
shrb
xchg
fdivr
int3
arpl
jl
aam
mov
dec
sbb
sbb
pop
dec
xchg
or
outsl
inc
rcll
mov
xchg
add
mov
mov
and
out
sub
pop
push
test
mov
adc
rcll
jo
cltd
sub
stc
push
mov
jmp
daa
lock
stos
push
mov
sbb
dec
sbb
xor
test
push
js
jbe
lods
push
cmc
les
xor
jecxz
push
fmull
mov
sub
out
or
sub
or
sbb
lahf
mov
add
clc
and
pop
outsl
cmp
pop
dec
lcall
adc
cmp
dec
das
cmc
cli
pop
dec
call
imul
fdivrl
and
test
stos
std
stos
xchg
test
pushl
pop
mov
dec
jecxz
outsb
dec
daa
shlb
push
or
cmpsl
std
hlt
xor
xlat
push
dec
xor
inc
lcall
out
xor
push
subb
push
nop
pop
jns
sub
mov
adc
pop
loope
insb
adc
push
xorl
cmc
xchg
jecxz
outsl
mov
sbb
xor
addr16
mov
mov
ret
rcl
adc
repnz
xchg
adc
int
jge
lock
mov
xchg
shll
aam
aaa
mov
mov
and
push
push
dec
add
sub
jo
xchg
sub
jmp
mov
cmpsl
iret
mov
adc
int
sbb
push
es
and
test
push
inc
add
aas
pop
rorl
mov
and
cwtl
cmpsb
ret
decb
mov
ss
mov
inc
sbbl
mov
cmp
or
pop
out
cmpsl
push
and
fsubrs
mov
inc
mov
dec
sbb
cmp
dec
scas
lock
cmp
leave
and
xchg
dec
xchg
inc
arpl
jle
mul
movsl
xor
test
cmp
shll
inc
imul
pop
cltd
shl
inc
push
jno
call
notl
leave
push
andl
in
das
mov
pop
dec
xchg
jmp
mov
sbb
xchg
sbb
mov
std
pop
out
mov
push
insl
push
lock
test
stos
fildl
daa
xor
mov
pusha
pop
leave
mov
cmp
adc
out
aaa
mov
into
mov
cs
lret
pop
cs
fmuls
cmp
push
cld
cmpl
or
jmp
cmpsb
daa
frstor
movsb
mov
cmpsl
icebp
pop
mov
and
subl
ss
push
test
and
xchg
fildll
pop
push
bound
dec
adc
dec
dec
movl
insl
cmpsb
adc
sahf
sbb
jo
orl
cwtl
xor
mov
in
and
and
add
mov
adc
or
xor
sti
imul
scas
jle
inc
dec
ljmp
xchg
mov
mov
loopne
clc
bound
enter
mov
push
and
dec
mov
add
mov
push
jp
aad
mov
sarb
cmp
arpl
add
cmpsb
inc
rorl
adc
mov
je
out
cmp
mov
mov
out
movsl
jge
enter
ss
dec
xchg
adc
in
mov
stos
jae
adc
hlt
xor
dec
pop
shl
dec
xchg
in
adc
movsb
movsb
jb
in
lock
pop
popf
fistpl
leave
call
sarl
sub
rcll
sub
push
leave
mov
out
notl
lahf
xchg
scas
mov
pop
or
arpl
cltd
out
add
repnz
xchg
dec
fimuls
jle
cltd
xor
je
fstp
ss
add
ds
jl
mov
test
in
sub
lcall
roll
xchg
dec
out
mov
push
addr16
adc
testl
jge
adc
push
jge
fdivs
jae
mov
fs
sub
lock
fdiv
orb
cmp
pop
mov
and
jl
mov
jp
call
enter
push
out
into
aaa
shlb
add
divb
xorl
call
shr
imul
pop
leave
mov
cmpl
dec
lret
lcall
ret
xor
sarl
test
mov
in
inc
jl
add
sti
dec
es
jno
add
cmp
stc
jl
inc
push
mov
mov
inc
jge
sub
sub
dec
jp
xor
xchg
dec
xor
or
out
cs
call
pop
push
je
cwtl
outsb
leave
dec
cmpl
aaa
popa
out
adc
push
dec
inc
lods
and
pop
roll
sbbb
inc
mov
rcrl
bound
das
jle
popf
pop
push
add
inc
les
lock
ss
and
mov
jmp
movsl
mov
decl
cmp
pop
mov
mov
mov
imul
arpl
xor
cmpsb
push
sub
lods
xor
lock
push
cmp
cltd
lcall
je
and
in
fisttpl
jle
mov
push
into
mov
push
push
ds
je
and
xchg
ljmp
lahf
cld
sub
pop
sbb
sub
cld
adc
cmp
jg
and
mov
addl
sbbl
push
cmpsb
pop
sub
aam
xor
add
mov
xor
add
dec
out
xor
push
daa
pop
adc
mov
jp
dec
or
mov
inc
lods
xchg
sbb
add
xchg
idivl
sbbl
or
pushl
add
popf
mov
add
add
lahf
std
mov
cmc
lock
dec
sbb
fsubr
aas
mov
in
xor
and
popf
inc
mov
mov
jp
outsb
test
scas
int3
pop
jno
mov
add
movsb
cmp
cmp
fsubp
cli
enter
jecxz
test
jae
xlat
leave
mov
int
inc
cli
ja
push
test
es
mov
pop
cmp
add
jb
scas
test
mov
jo
inc
imul
jecxz
rorl
dec
jno
test
imul
cmp
push
cld
pop
mov
jo
into
adc
push
dec
cmp
pop
ljmp
stc
mov
rcll
pusha
cmp
dec
addl
call
jbe
sti
jle
push
fmull
fcmovnu
icebp
mov
out
sub
movsl
clc
adc
push
jecxz
test
xchg
daa
cmp
mov
xchg
inc
mov
arpl
std
clc
insb
inc
js
sbb
adc
shlb
popa
mov
stos
sub
xor
mov
cld
adc
bound
inc
repnz
cmpsl
mov
ds
push
nop
and
je
push
in
jne
inc
dec
or
sbb
stc
dec
jae
in
pushf
xchg
pop
call
ss
dec
mov
push
push
adcb
push
mov
arpl
and
das
push
sub
jg
inc
mov
jbe
push
jmp
aas
add
inc
mov
ret
dec
inc
mov
push
fucomp
mov
cwtl
xor
into
das
jb
jecxz
repnz
pusha
or
pop
xor
cmp
xchg
inc
pushf
ret
adc
add
loopne
mov
push
shll
or
testb
mov
sbb
dec
loopne
dec
stos
inc
mov
mov
aas
push
sub
fidivl
ja
dec
add
xchg
ficompl
fistps
sarb
jb
adc
shl
sub
ss
mov
test
add
xchg
xchg
or
xorb
cltd
cli
mov
and
ror
fnsave
lcall
out
adc
mov
neg
adc
and
xchg
lahf
incb
mov
es
push
xor
addl
test
pop
hlt
inc
pusha
push
push
testl
mov
lock
lods
popf
fildll
jge
push
dec
mov
fs
sbb
out
aaa
jmp
push
mov
cltd
dec
push
jmp
mov
push
je
sub
push
stos
gs
sub
and
mov
add
aam
inc
lret
sbb
in
addb
loop
test
mov
pop
sbb
inc
jmp
xor
cmp
in
dec
test
loop
lock
mov
sub
fstpt
jbe
dec
xor
shlb
jnp
sub
pop
sti
mov
adc
mov
into
popf
cltd
bnd
mov
push
aas
or
rorl
mov
jecxz
pusha
lret
cmp
stos
fstpt
push
rorb
jbe
bnd
fiaddl
mov
pop
mov
cwtl
sbb
cmp
and
mov
adc
and
jno
pop
fs
je
lahf
insb
jbe
mov
jo
mov
fsubrl
jne
mov
mov
dec
and
add
or
fwait
in
add
rclb
shlb
and
cld
dec
scas
outsb
push
ljmp
add
pop
pushf
arpl
xor
jne
fadds
shlb
cmp
inc
fcompl
xor
je
loopne
scas
cli
out
xchg
jne
dec
movsl
adc
std
loop
pop
ret
aad
ffreep
cmp
loopne
mov
jno
dec
test
push
pop
std
push
stos
out
rcrl
adc
insl
jns
mov
mov
arpl
dec
pop
sub
or
and
in
add
pop
fiadds
and
jg
mov
daa
out
jbe
pusha
jp
mov
out
push
shlb
addr16
sti
sub
sbb
cltd
sub
int3
imul
xchg
push
out
imul
mov
or
sti
mov
xchg
stos
cmpsl
aas
bound
test
icebp
aam
push
inc
enter
mov
sbb
shll
mov
std
insl
sbb
pop
sub
dec
push
data16
movl
add
jmp
xchg
cmp
dec
sub
jmp
ret
shrl
outsb
insl
push
xchg
movsb
mov
shr
lock
add
sub
jmp
out
rcrb
pop
test
test
dec
stos
mov
pop
add
cmp
or
stos
or
mov
lods
sub
jl
aam
push
outsb
sub
xor
mov
adc
inc
sub
jecxz
imul
ds
outsl
add
lcall
jge
mov
sub
rolb
mov
cli
mov
xor
jb
lahf
out
xor
mov
pop
adc
adc
fwait
push
xlat
push
repnz
xchg
mov
cmp
int
cli
clc
cmp
mov
cmp
push
iret
adc
fistps
mov
call
into
enter
mov
icebp
aas
fadd
xchg
push
ss
push
push
and
clc
and
xchg
sbb
cmpsb
lret
out
sbb
push
xchg
mov
enter
push
shlb
inc
adc
sbb
pop
xchg
xor
cmpsl
cmp
pusha
les
iret
and
decl
mov
and
notb
inc
nop
sub
sbb
adc
outsl
fnsave
xchg
mov
jp
sbb
addl
roll
jne
and
imul
ja
mov
fisttpl
push
pusha
mov
add
add
insb
cli
mov
mov
movsl
inc
dec
lret
lods
ja
movsb
add
mov
and
mov
call
popa
push
lods
ret
dec
into
clc
push
or
xor
lock
sbb
mov
js
pop
xchg
aam
inc
lcall
icebp
inc
sub
inc
fmulp
mov
ss
test
into
mov
sti
loope
cli
push
and
in
mov
rcrl
ljmp
hlt
and
xchg
std
stos
jp
subb
mov
daa
cmp
xor
xchg
adcl
mov
push
ds
xorb
int3
punpcklwd
mov
insb
lret
xchg
hlt
cli
xchg
movsl
mov
sub
xorb
and
inc
inc
push
xor
aad
push
insb
pop
cmp
popf
dec
test
add
push
or
popa
repz
or
lahf
pusha
add
inc
pop
cld
cmp
and
outsl
push
push
inc
and
jmp
pop
or
in
mov
lret
adc
mov
cli
xlat
push
mov
or
movsl
popf
repz
push
mov
adc
imul
mov
insb
pop
stc
movsl
stc
and
inc
call
pop
xchg
test
xor
setb
in
xor
imul
xchg
dec
xchg
adc
sbb
cltd
dec
jns
jle
inc
clc
push
inc
scas
aaa
roll
or
sbb
mov
sub
mov
idivb
ljmp
xchg
xchg
aad
shlb
or
sbb
std
sbb
sub
in
ljmp
xchg
test
mov
xchg
xor
in
loop
mov
popf
mov
and
jge
jl
ffree
outsl
sahf
int
insb
xor
xchg
and
jb
cli
jp
jo
jnp
call
in
and
cmp
mov
adc
mov
loopne
add
scas
sub
iret
cwtl
xchg
sub
pop
jb
mov
cltd
push
int3
mov
inc
jo
xor
jmp
loopne
int3
roll
dec
scas
repz
lret
lods
fstpt
pop
cmpsb
dec
push
sbbl
mov
push
sub
dec
testb
push
cmp
sbb
fstps
mov
sbb
sub
out
jnp
xchg
mov
psadbw
nop
insl
xchg
xlat
stc
or
push
fsubrl
js
dec
push
xor
stc
inc
xlat
bound
cmp
mov
pop
and
repz
fs
out
mov
aas
push
mov
xor
mov
outsb
insb
je
xchg
outsl
push
mov
lcall
out
inc
sti
pop
int
or
std
sub
mov
inc
cmp
jne
dec
and
negl
or
add
out
and
jg
in
fsubrs
shrb
stc
fimull
jmp
out
adc
sahf
sub
or
cmp
sub
adc
inc
pop
jbe
imul
gs
mov
in
xchg
sub
fwait
testl
fisttpl
xorb
call
fwait
mov
xchg
jmp
std
in
test
test
fcoml
lods
subb
pusha
nop
mov
std
inc
mov
fsubrs
mov
sub
pop
pop
or
in
cld
hlt
xlat
mov
jno
xor
adc
popf
cmp
sub
xchg
dec
dec
inc
or
loope
add
cld
hlt
inc
test
rorl
mov
xor
ljmp
mov
inc
shll
push
mov
daa
in
pop
or
pop
popa
push
mov
rorl
fucom
xor
stos
mov
dec
adc
arpl
pop
bound
loopne
repnz
and
mov
push
inc
js
mov
or
jmp
add
mov
mov
clc
pop
mov
jmp
pushf
xor
sbb
stos
imul
orb
fs
pop
les
ss
adc
mov
popf
fwait
and
sbb
and
cmc
mov
icebp
ds
movsb
or
dec
incb
outsb
inc
test
inc
dec
mull
adc
lret
push
lds
jo
sub
call
imul
outsb
sbb
in
jge
xchg
mov
xchg
push
dec
inc
mov
vmovntps
popf
and
outsl
in
jge
push
ficoml
push
out
jle
inc
mov
xchg
xchg
test
mov
sub
outsb
out
flds
inc
push
mov
std
or
addb
cmp
adc
cli
mov
mov
sub
std
out
aad
sub
bts
cwtl
sti
dec
iret
add
mov
sarb
outsb
push
aaa
xor
sub
andl
pop
iret
out
roll
es
loop
mov
ret
cmpsb
outsl
pop
fwait
sub
sub
jae
adc
je
ljmp
mov
lods
mov
fiadds
or
in
jns
dec
outsl
enter
mov
stos
mov
pop
fidivs
arpl
add
gs
mov
fmul
and
and
jb
cs
push
pop
leave
shlb
jbe
jecxz
adc
mov
cmp
test
push
ret
into
jmp
rcrb
mov
jg
xor
sar
jnp
and
imul
xchg
ret
dec
popa
mov
sub
xor
pop
push
mov
pop
cwtl
jmp
scas
pop
adc
and
mov
daa
sarb
mov
std
push
and
stos
inc
lods
pop
mov
cli
jb
jnp
scas
jg
mov
mov
loopne
push
push
scas
pop
insl
xor
out
jg
sti
lahf
ret
xchg
xchg
inc
jo
or
fcompl
add
sub
adc
call
lods
in
push
rorl
and
dec
xchg
dec
arpl
js
adc
fidivl
lret
or
adc
aas
xorb
lea
mov
popa
jb
mov
ja
fisttps
cmp
xor
push
adc
dec
sub
inc
xchg
mov
aaa
or
loopne
fwait
mov
lock
xchg
je
add
andl
shrl
loopne
repnz
shlb
pushl
and
in
add
mov
imul
add
or
fsubrl
cmp
push
std
fcomp
mov
xor
xchg
sbb
and
push
pop
cwtl
xchg
push
rcrb
sbb
mov
mov
out
dec
and
jbe
aad
imul
in
les
xchg
push
pop
out
dec
pop
pop
int
fcmovb
add
test
out
std
xchg
scas
jbe
mov
je
aaa
pop
push
cmp
std
scas
pop
cmc
add
xchg
insb
dec
inc
ficoms
dec
pop
jl
cwtl
or
lods
sub
sbb
cld
xor
sub
repz
sti
sbb
das
mov
testb
sti
push
and
mov
mov
imul
adc
fucomi
scas
cmp
xchg
adc
gs
repz
add
jg
test
adc
xor
dec
sbb
adc
lods
and
dec
jb
mov
cwtl
jg
xor
xlat
or
test
lods
outsb
js
shl
test
mov
gs
rolw
adc
lcall
push
xchg
sbb
xchg
jg
cld
mov
cwtl
sub
add
insb
adc
lcall
push
jb
sub
cmp
mov
jno
sub
test
pop
icebp
addb
rolb
fsin
sbb
or
ds
out
bound
rol
add
sbb
enter
mov
sbb
mov
mov
inc
xor
mov
sub
or
and
adc
lea
mov
cwtl
aaa
mov
insl
in
mov
sub
sarb
les
pop
sbb
add
jo
add
rolb
jno
push
mov
push
cmpsl
scas
cld
movsl
adc
mov
mov
adc
xchg
mov
pusha
imul
repz
es
aam
adc
scas
jmp
sbb
xorl
push
mov
cmp
or
and
push
mov
push
outsl
ja
push
or
ret
call
push
repnz
shl
sti
push
out
and
or
xor
insl
and
push
leave
mov
out
les
jecxz
insb
jo
mov
shll
ljmp
pop
out
call
iret
or
dec
jl
aas
xchg
xchg
jno
stos
test
je
mov
push
push
ror
add
pop
lods
cmpsb
xor
andl
inc
std
or
mov
cmpsl
das
jns,pt
out
frstor
fs
mov
pop
aad
es
mov
mov
mov
lcall
in
xchg
sbb
popf
sbb
xor
nop
push
jg
dec
adc
mov
lcall
dec
xchg
adc
mov
int3
and
bound
test
sti
dec
and
mov
lahf
push
dec
fstpl
sbb
and
and
add
sub
mov
jg
xor
inc
les
mov
adc
sbb
xchg
xchg
mov
inc
repz
pop
push
jmp
push
push
jge
xchg
and
es
in
aas
mov
ror
jbe
push
cwtl
adc
push
sub
jecxz
add
mov
imul
pop
pusha
aam
pop
loop
outsl
xchg
xchg
push
cli
jge
push
jg
xor
cmp
sbb
test
push
sub
das
mov
fdivrl
movb
or
xor
mov
ss
and
cmp
test
out
ljmp
dec
aaa
lret
mov
aam
stos
add
cld
pop
dec
shl
enter
daa
xchg
cli
dec
out
iret
outsl
cmp
out
mov
push
push
popf
cmpsl
xor
fsubr
xlat
adc
test
push
mov
dec
push
mov
jnp
add
or
mov
inc
push
pushf
mov
mov
xchg
dec
hlt
in
out
loop
decb
push
movsl
shrl
movsb
iret
cmp
in
adc
sub
xchg
pop
int3
cmc
mov
mov
jg
in
sahf
jmp
int3
fstl
in
scas
or
andb
and
xor
sbb
sub
in
stos
sbb
xlat
or
sub
sbb
add
fnsave
daa
dec
outsl
xchg
pop
mov
mov
or
mov
xor
in
jl
push
push
add
sbb
add
rclb
mov
lcall
sbb
sbb
add
mov
xor
sub
mov
stc
jl
in
add
lcall
cli
push
jl
in
outsl
mov
dec
fpatan
cmp
sbb
jmp
addl
mov
pusha
dec
loopne
pop
loopne
stos
dec
pop
mov
dec
test
dec
faddl
mov
adc
push
cmp
inc
push
xchg
scas
fs
jg
pop
imul
pop
pop
mov
jl
sbb
dec
add
frstor
mov
insl
cmp
repnz
dec
cmc
cmpsb
lods
jae
cmp
stos
mov
in
out
sub
pushf
test
int3
mov
mov
imul
push
mov
loop
fs
mov
jecxz
xchg
gs
sbb
add
sbb
inc
pop
pop
cmp
insb
mov
shlb
sarb
sub
sarl
mov
stos
test
adc
lock
xchg
mov
enter
mov
jo
mov
or
popl
and
jl
js
ds
dec
xchg
lods
cmp
movsb
cmp
push
cli
clc
adc
or
mov
daa
pop
fsub
add
shrb
mov
push
xchg
dec
mov
inc
sbb
xor
cmp
popf
fistpl
fdivs
enter
and
js
dec
mov
pop
push
js
adc
int3
test
aaa
negl
and
aas
mov
std
xor
leave
add
push
sub
in
out
mov
jno
or
adc
xchg
push
cmpxchg
js
es
mov
cld
inc
movl
push
add
fstpt
ja
rcrb
and
cmp
push
loope
push
pop
rclb
pop
mov
or
orl
psllq
or
pop
xor
fidivl
push
xchg
push
test
pop
dec
inc
cmovne
insl
xor
js
add
xorl
jge
sbb
pop
sbb
inc
mov
sbb
pop
lcall
int3
inc
popf
aas
adc
ss
adc
bound
pushf
inc
mov
insb
mov
xchg
cmp
mov
xchg
movsl
jle
daa
test
les
lahf
sub
shll
mov
and
add
cmp
lcall
adc
add
shlb
and
xlat
push
add
xor
inc
push
adc
cmp
mov
dec
test
in
inc
addr16
out
mov
and
fcompl
sub
or
jne
int3
clc
xchg
mov
mov
arpl
jno
inc
and
mov
jge
nop
stc
add
aam
xchg
ljmp
inc
enter
stos
cli
loope
mov
nop
push
popf
or
or
add
shrl
mov
sbb
and
rcr
inc
data16
dec
push
add
mov
shlb
rol
loop
ret
pop
dec
fiadds
roll
fisubs
fmuls
ret
cmp
cmp
xlat
cmp
push
mov
sti
imul
push
mov
jmp
xchg
ficoms
xchg
loope
sti
jbe
stc
jg
ds
ja
sbb
mov
sbb
cmpsl
mov
sbb
cmpsl
pop
xchg
mov
fisubrl
into
movsl
mov
mov
add
adc
mov
or
xlat
ficomps
inc
adc
mov
out
outsl
push
fiadds
cmp
push
movsb
push
jne
pop
cltd
add
data16
lahf
daa
mov
adc
in
jne
mov
pop
fcoms
pop
jne
call
pextrw
fcom
push
repnz
mov
enter
mov
adc
out
and
xlat
jecxz
ds
lds
gs
jmp
adcb
daa
mov
fsubl
sbb
push
in
aam
push
aas
rcrl
jge
inc
mov
and
push
pop
les
jb
add
sbbb
adc
push
jne
std
iret
shr
and
add
stos
mov
jne
cmpsb
inc
or
ret
sti
mov
lcall
add
push
out
icebp
es
nop
repnz
insb
adc
out
inc
icebp
out
test
or
dec
popa
insb
and
mov
je
mov
or
xlat
in
out
and
push
jmp
and
cld
leave
mov
loopne
lods
adcb
cmp
push
jns
je
ret
xor
pop
shll
sub
sub
push
mov
ret
loop
lret
mov
loop
xor
stos
lods
inc
and
and
inc
js
push
bound
add
lret
push
xchg
inc
lods
xor
movsb
outsl
lods
xor
sub
iret
lock
sahf
sbb
sbb
aaa
fs
add
pop
es
push
pop
cld
sbbl
mov
jl
pop
push
call
add
out
pusha
mov
cmpsl
jmp
lds
shl
pop
jg
aas
inc
repnz
push
sub
push
sbb
les
std
test
das
xor
sub
cmpsl
imul
or
adc
sti
aaa
dec
mov
cmpsb
movsbl
cltd
lods
loope
shl
insl
adcb
xchg
pop
mov
mov
inc
xor
cmpsl
jp
push
xor
or
imul
mov
pop
mov
shr
pop
std
mov
mov
iret
lcall
ja
clc
lret
sbb
movsb
aaa
loope
ret
or
mov
and
inc
addr16
and
push
sbb
xchg
test
div
repnz
pop
jno
add
fdivl
clc
mov
mov
adc
sti
sbb
jmp
sub
or
sti
xor
mov
roll
and
mov
int
mov
xchg
add
push
jl
test
jbe
sub
xor
fsubrs
pop
jmp
mov
insl
mov
mov
mov
mov
mov
fsub
mov
cmc
sahf
dec
inc
dec
add
fsubrs
and
mov
outsl
dec
add
mov
out
roll
inc
aas
popa
es
xchg
repnz
mov
jno
ret
lret
xor
mov
sub
jge
push
gs
inc
out
sbb
jno
imul
sub
cmp
out
cltd
and
dec
inc
jnp
mov
dec
imul
cld
xlat
jne
std
inc
insl
or
add
and
rorl
sbb
mov
hlt
cmp
push
sahf
lds
scas
ja
xor
push
jl
mov
inc
out
pop
stos
inc
shll
mov
pop
call
xorb
sbb
cmp
lret
pop
push
dec
push
xor
roll
mov
sbb
add
std
adc
imul
es
adc
bound
lcall
push
popa
data16
xchg
popf
mov
sub
dec
push
or
sbb
mov
xchg
js
xor
stos
push
in
cs
pop
mov
dec
in
inc
cmc
push
cmpsb
repz
push
sub
pop
mov
push
iret
add
cli
mov
insb
test
mov
mov
mov
ja
or
xor
insl
aad
sub
ljmp
lock
addr16
jne
fldt
mov
mov
jmp
std
mov
cmpsb
and
out
mov
int
sbb
add
xor
or
insb
les
ljmp
jmp
or
inc
jo
ret
mov
adc
ss
push
xorl
stos
cmp
mov
cmp
mov
dec
jmp
scas
in
mov
jno
adc
in
std
pop
pop
repz
mov
hlt
mov
scas
out
xchg
adc
cmpsl
test
sub
jecxz
das
lock
icebp
sbb
jbe
fistps
sbb
sbb
pop
and
xor
ss
mov
shl
fisubrs
sahf
push
cmpsb
cmp
or
movsl
sbb
push
mov
mov
xor
xor
popf
sarl
or
cmpsl
ds
lods
pushf
jge
mov
shr
xchg
stos
orb
jmp
xor
mov
or
out
pop
sub
rclb
scas
insb
add
dec
cmp
inc
mov
push
inc
std
fildl
jle
lret
int
mov
pop
adc
lock
mov
mov
in
arpl
bound
out
in
inc
daa
or
icebp
loopne
add
movsl
jmp
push
test
mov
mov
pusha
lock
out
sti
in
outsb
in
cmp
dec
jbe
fists
mov
insb
test
lahf
ja
push
sub
push
pop
xchg
addr16
push
jnp
push
inc
xchg
xor
sbb
and
cltd
jmp
scas
out
xchg
loopne
pop
scas
ret
dec
out
test
sbb
test
cli
andl
pop
loope
dec
jmp
mov
inc
sbb
cld
call
int
std
in
and
sub
ss
cld
push
arpl
test
mov
scas
mov
loope
movsb
xchg
roll
ljmp
mov
push
and
xor
dec
add
ficoml
add
outsl
sub
cmc
pop
push
loop
and
insb
arpl
dec
push
jo
sti
ss
push
and
ret
cmpsl
xchg
mov
fsubs
sub
push
push
xchg
int3
push
fdivrs
cs
sbb
mov
daa
hlt
push
adc
movsl
adc
loope
data16
aad
loopne
orl
fstps
jne
jno
popf
push
aas
push
sarl
pop
sbb
into
mov
cmp
fwait
sbb
jo
add
in
mov
pop
lahf
xorl
movsb
cltd
xlat
jg
test
dec
mov
gs
popf
add
xchg
push
mov
sub
adc
push
cmp
aas
fldt
insl
mov
cmc
or
add
jp
out
hlt
mov
adc
xchg
jae
mov
cs
loope
ljmp
and
fldt
push
call
inc
mov
mov
sub
lock
rcrb
and
lods
dec
jge
aas
int3
jbe
fidivrs
cmpsb
pop
gs
mov
lods
mov
adc
stos
sub
gs
enter
dec
mov
sub
xchg
movl
xchg
lea
popa
cmp
sub
jp
inc
xchg
add
imul
lea
addr16
bound
in
push
shlb
rcrl
cmpsb
loopne
les
or
bswap
test
pushl
popa
insb
jg
sub
mov
sbb
and
js
xchg
inc
out
jmp
fstpt
pop
and
addr16
mov
pop
lret
callw
outsl
shrb
cli
fcmovnu
stos
cs
xor
imul
push
push
dec
lcall
jno
scas
xchg
in
jno
mov
add
xlat
or
mov
jno
jmp
sbbb
loop
imul
int3
jnp
subl
out
mov
sub
cmp
mov
or
mov
push
test
cld
rcrl
and
insb
sete
mov
jo
adc
cmp
fs
nop
rcl
aam
sarb
lods
xchg
divl
inc
mov
xchg
mov
fwait
pop
sbb
sbb
sbb
test
xchg
call
mov
inc
sub
push
jae
inc
jb
xor
mov
inc
xchg
in
xorl
mov
popa
imul
mov
sti
inc
popf
jecxz
add
jge
pop
dec
jb
out
push
adc
out
outsl
int
stos
inc
std
ljmp
ljmp
sub
pop
fisubrl
outsb
cmp
fistps
jle
xor
iret
call
xor
mov
loope
push
scas
scas
dec
jbe
scas
sbb
push
test
mov
in
mul
in
xchg
cld
cmpsl
loopne
lea
mov
adc
adc
xlat
push
adc
test
jno
test
pop
pop
pop
sti
iret
cs
xchg
lds
and
out
dec
enter
dec
add
ror
cmpsb
add
cs
pop
pop
int
lret
dec
mov
push
xlat
call
xchg
xor
imul
push
xchg
fs
or
cld
test
es
faddl
xor
pop
shrb
jle
dec
push
dec
sbb
inc
adc
inc
xchg
dec
lret
in
aad
inc
rcll
jae
pop
in
movsl
out
adc
or
mov
outsb
mov
out
sbb
jnp
div
jp
push
sbb
sbb
mov
repnz
ds
lret
push
jns
insl
cmp
jo
mov
push
fdivl
adc
scas
bound
rcrl
pop
push
add
rclb
std
cs
mov
inc
lcall
cwtl
and
insb
fmulp
dec
pop
push
pop
sub
cs
push
mov
fists
lock
cmp
add
xchg
push
gs
jl
in
xchg
out
test
jae
jae
dec
nop
int
call
sbb
nop
push
movsl
sbb
insl
push
pop
xor
mov
xchg
mov
jmp
lret
testl
jno
mov
add
jmp
xchg
data16
js
mov
sub
aas
or
push
sub
xchg
sbb
xchg
pop
or
and
xor
xor
dec
pop
insb
loopne
jo
cld
sarb
movsb
jb
push
loop
in
popf
leave
and
clc
lods
jo
adc
push
stos
je
xlat
out
push
int
push
xor
ret
xchg
push
out
rcll
out
push
clc
fs
inc
addb
dec
sbbl
inc
mov
out
push
test
jmp
lret
mov
test
push
call
aad
jmp
sbb
shr
inc
xorb
jns
sahf
sub
pop
in
push
xor
scas
repz
test
sarb
lock
cmp
ss
loope
bound
clc
sti
inc
inc
push
inc
stos
and
xchg
xor
inc
bound
fwait
mov
in
fiaddl
inc
push
add
pop
shl
and
sub
iret
mov
sbb
push
je
ret
lds
sbbb
inc
lds
lods
insl
idivl
sub
or
dec
adc
mov
xchg
and
and
mov
das
js
pop
lret
insb
or
call
xchg
inc
jmp
and
out
das
fbld
cmc
fs
les
ds
test
mov
cmpsb
loopne
inc
loope
push
js
mov
sub
lahf
rclb
test
cmp
sub
or
and
inc
dec
mov
fcoms
and
jmp
insl
cli
mov
mov
mov
je
mov
push
mov
rclb
cltd
jb
jmp
les
sbb
movsb
xchg
fimull
xchg
mov
stos
outsl
mov
sar
mov
xor
and
xchg
cmp
inc
pop
cli
ficoms
loope
xchg
pop
add
fs
dec
in
pop
jae
nop
and
sbb
movsl
add
cmp
or
ret
adc
aad
push
push
pop
dec
sbbl
lds
jle
lea
std
and
ja
bound
insl
push
xchg
add
inc
mov
xchg
xchg
mov
sbb
push
les
cmpsl
ljmp
ret
jecxz
inc
iret
jnp
or
repz
cmp
das
push
imul
lea
jecxz
or
sub
push
outsl
loopne
lods
sahf
ret
negb
push
notb
pop
movsl
cwtl
fcoms
mov
repnz
sub
ss
pop
mov
jecxz
fidivrl
mov
push
push
pusha
or
mov
cmpl
cmp
pop
lock
test
sbb
test
test
inc
cmp
fmuls
mov
lret
xchg
xchg
aaa
adc
mov
stc
ficoms
fstpt
je
scas
pop
xchg
jae
xchg
inc
call
mov
adc
jle
test
test
repnz
into
mov
mov
and
sub
push
inc
jecxz
dec
sbb
popf
cld
in
inc
dec
dec
movsb
loop
mov
and
out
popf
xlat
push
pop
lods
insb
lds
add
jbe
stos
rcl
xchg
lret
sub
xor
pop
add
add
inc
cpuid
out
leave
mov
mov
scas
mov
pop
mov
mov
inc
clc
add
xchg
jnp
inc
data16
and
loop
mov
test
fadds
mov
adc
pop
cmp
add
xchg
dec
sbb
popa
xor
cmc
dec
ds
popf
sub
jb
mov
push
xchg
inc
std
mov
adc
nop
sub
lods
adc
into
adcb
lret
mov
adc
dec
pop
dec
ficompl
cmp
mov
add
or
sub
mov
mov
jge
mov
mov
jge
addb
jb
sub
hlt
sub
push
rcrb
sbb
repz
fsubrs
cld
adc
daa
enter
out
sbb
adc
roll
or
xor
aas
sub
lcall
cmpb
pop
fwait
call
hlt
bound
cs
xor
pop
mov
xchg
adc
test
and
fucomip
inc
sbb
fs
jnp
imul
test
scas
fwait
ljmp
jmp
test
pop
and
movsb
add
out
cmp
cld
mov
push
push
dec
xor
sub
push
sbb
push
dec
and
inc
pop
and
jnp
mov
mov
adc
sbb
push
test
pop
lea
gs
inc
cmc
jne
fisubrs
xor
sbb
out
pop
jge
push
mov
sub
call
out
addl
bound
xor
or
sub
lock
or
dec
pusha
jae
adc
inc
jbe
and
dec
cvtdq2ps
icebp
xchg
addb
xor
pop
sbb
arpl
jns
xlat
xchg
pop
stos
add
push
jno
das
test
jne
pop
fiaddl
orl
push
sarl
fmull
cmp
ret
fists
jne
add
pop
insl
sbb
js
sbb
inc
pop
mov
shrb
out
aaa
sbb
jmp
dec
arpl
mov
out
inc
cmp
scas
xor
dec
gs
sahf
dec
push
imul
das
mov
xlat
iret
mov
outsl
or
in
mov
xor
xor
fdivrl
or
mov
sbb
inc
ss
push
int3
and
leave
scas
je
pop
outsl
inc
and
push
inc
ret
gs
int
pop
sbbl
jmp
fstp
sahf
into
push
subb
inc
das
jmp
arpl
ds
jbe
stos
xchg
dec
or
test
mov
dec
pop
aam
stos
and
sbb
inc
xor
into
out
xlat
outsb
inc
rclb
lret
push
or
cmp
cmc
fmul
nop
roll
mov
popa
xor
out
pusha
jle
push
and
jae
sub
push
push
mov
add
sahf
mov
sbb
mov
cmp
cmp
out
or
add
xchg
lds
mov
sub
inc
andl
lea
scas
xchg
and
pop
dec
je
ljmp
loope
cmpsl
push
jne
outsl
arpl
loope
dec
pop
mov
xchg
nop
cmp
cmp
push
jle
fsubrl
jmp
xchg
daa
inc
adc
inc
call
mov
loopne
popa
mov
add
xchg
mov
adc
stc
push
push
pop
adc
xor
loop
add
test
pop
jne
push
mov
dec
pop
xor
pop
dec
test
rclb
jle
push
arpl
pushf
and
loope
and
sbb
xchg
fimull
loop
lea
cltd
mov
dec
adc
ret
mov
sbb
mov
lods
lods
or
in
das
mov
jg
push
je
ja
std
mov
mov
cmpsb
adc
add
int
dec
scas
jge
mov
lret
push
pop
fldcw
inc
jo
add
jmp
jae
lret
inc
jmp
jbe
and
icebp
inc
fs
nop
adc
add
inc
pop
je
xor
jecxz
in
inc
pop
sbb
icebp
rol
xchg
jbe
outsl
dec
addb
jp
outsl
aam
sub
pop
and
sub
xor
xchg
aaa
mov
imul
xchg
inc
pusha
insl
mov
dec
and
add
sbb
out
inc
jmp
cld
aam
into
add
cmp
bound
cltd
aam
lret
xchg
mov
sub
cwtl
in
pushf
lds
orb
loop
sub
popf
imul
ror
mov
loopne
repz
inc
lahf
fimull
lds
jne
xor
lds
lret
and
adc
insb
cmp
lret
fsubrs
int3
dec
adc
mov
mov
das
cmp
or
js
mov
dec
sub
push
es
xchg
xor
roll
and
xchg
mov
sbb
int3
sub
daa
cmp
test
ja
lret
ret
leave
xor
add
xchg
mov
pusha
out
add
xchg
push
movsl
push
mov
push
out
dec
push
in
test
add
dec
repnz
in
add
xchg
jne
cmp
es
mov
inc
push
pop
mov
xorb
jno
movsb
cltd
dec
add
mov
dec
imul
gs
enter
mov
popf
jg
sub
lds
cmp
shr
pushf
inc
cmp
cmp
xchg
jno
dec
jae
addb
flds
movsl
mov
pop
mov
in
std
notb
or
loope
xchg
push
add
jge
or
xor
fxch
test
pop
adc
fs
js
add
lock
sbb
filds
xchg
and
mov
sub
xor
jmp
dec
pop
pusha
pop
inc
sti
cwtl
xchg
push
vdivpd
repnz
mov
or
jl
jp
out
lock
fs
loope
mov
xor
lea
jecxz
push
sbb
inc
jns
sahf
mov
jb
mov
jle
popf
pop
cmp
jns
subl
out
leave
ficoms
cltd
push
movsb
jl
sti
mov
sahf
mov
xor
es
and
push
pop
int
cwtl
nop
xor
rorl
sahf
lret
popa
inc
out
fstps
mov
mov
xor
jo
movsb
push
push
pusha
jo
or
dec
dec
mov
inc
cmp
push
mov
pop
scas
xor
jl
jno
dec
jns
ljmp
fisubl
dec
lret
dec
loop
out
xor
jb
ss
mov
pop
cmp
das
sbb
fisttpll
pusha
fmull
adc
addr16
cmc
lock
outsb
push
mov
mov
inc
aas
push
or
jb
ljmp
sbb
lret
outsb
movsb
pop
inc
xor
sub
xchg
stos
mov
stos
ret
pop
inc
xchg
mov
push
xor
lret
je
andl
ret
leave
sbb
xchg
inc
pop
loop
or
cmpl
pmuludq
icebp
sbb
call
and
mov
jle
out
aad
es
mov
lret
cmp
in
push
xchg
shlb
mov
dec
lea
push
imul
lock
push
or
jno
push
pop
cmpl
ja
mov
mov
cs
inc
dec
cwtl
fwait
jmp
dec
or
mov
mov
mov
loopne
sbb
mov
std
sbb
gs
pop
add
xchg
xlat
jbe
and
push
daa
sub
pop
sahf
pop
loopne
push
fistpl
idivl
clc
loop
xchg
inc
mov
test
jp
loop
shll
outsl
or
lret
sbb
and
or
scas
gs
mov
mov
inc
jns
mov
rorl
lahf
or
mov
push
sub
cmp
test
ja
loop
lret
adc
mov
mov
aam
xor
inc
loopne
mov
xchg
scas
xor
lea
pusha
sub
shlb
push
rcrb
ljmp
sub
xchg
mov
add
popf
mov
adc
fs
clc
sub
xor
push
mov
addr16
push
add
push
dec
mov
adc
cmpl
popf
fsubs
xor
mov
inc
sbb
mov
or
inc
add
sub
dec
aaa
in
jle
sbb
push
xchg
push
mov
xor
inc
jnp
cmp
pop
cmp
cmp
push
sahf
imul
in
movsb
iret
ja
mov
roll
jl
sbb
push
sbb
arpl
and
or
pop
mov
icebp
push
mov
leave
shrb
jp
inc
repnz
lcall
or
leave
icebp
call
es
cmpb
pop
add
and
out
in
jne
data16
mov
int3
jne
add
icebp
in
das
cmpsb
mov
mov
pop
cmc
testl
adc
test
aad
adc
mov
xlat
and
enter
dec
roll
dec
iret
ret
insb
sbb
rcrb
mov
mov
stc
nop
bound
mov
pusha
push
xchg
mov
repnz
fs
scas
cmp
inc
inc
aaa
shl
add
in
and
sarl
aam
push
pop
sti
xor
mov
pop
sub
int
adc
pop
insb
mov
adc
jo
cli
inc
mov
push
nop
xor
ja
andb
xor
sub
cmp
stos
std
sbb
xchg
push
rcr
push
cmp
pushl
push
pop
sub
icebp
ja
sbb
mov
and
xchg
mov
mov
jb
jo
mov
sbb
fsubrs
jp
data16
jecxz
dec
shlb
imulb
lea
pushf
mov
insb
rcrb
push
out
hlt
pop
repnz
push
test
inc
add
xor
fcompl
cs
std
pushf
aas
cmpsl
pop
jae
stc
mov
jbe
sbb
adc
sbbl
mov
decl
jb
mov
and
jecxz
pop
adc
adc
subb
mov
out
push
add
pop
jo
aam
mov
lock
pop
mov
pusha
out
cli
je
sub
hlt
loopne
fimuls
lret
add
subb
cmp
int3
inc
ja
out
xor
outsb
imul
dec
sbb
nop
xchg
sbb
nop
or
push
cmp
mov
out
mov
ds
arpl
push
jle
adc
sbb
mov
pop
imull
mov
push
das
lods
cmp
push
jae
xchg
cmp
inc
mov
or
pop
push
ljmp
ds
rol
sbb
sahf
xorl
adc
jp
cmp
push
sub
dec
dec
and
stos
cwtl
jnp
inc
inc
xchg
add
loopne
add
mov
rorb
loope
sbb
je
dec
sub
xchg
cld
xchg
rcrb
mov
js
pop
adc
xorl
stos
cmpsb
in
sbb
jg
pop
inc
leave
bound
mov
cmp
inc
or
cwtl
out
pop
jns
mov
jle
mov
pop
jne
cmc
ja
xchg
xor
jb
adc
cs
sub
add
fldt
sbb
leave
mov
sbb
sbb
jp
idivl
fidivl
mov
aad
movsb
movsb
cs
pop
inc
lahf
fs
jnp
out
sbb
mov
into
roll
test
add
popf
aas
imul
idivb
push
and
cmp
dec
pop
test
mov
dec
push
jg
sub
lods
cmpsl
sbb
cld
insl
xor
out
shr
dec
pop
das
fdivrs
sub
mov
mov
jno
inc
sub
pop
pop
add
add
pop
jge
pop
xchg
xlat
vmovshdup
lock
adc
dec
arpl
loopne
ds
bound
lods
pop
call
adc
mov
inc
adc
pop
fnsave
xchg
in
push
lahf
pop
aam
rorl
es
in
scas
daa
movsb
sub
inc
loop
dec
adc
push
cmpsb
out
push
insb
dec
test
jg
xor
inc
cmp
repz
xchg
mov
lea
mov
mov
loop
jb
jae
pop
jb
int
popa
fisubl
stos
inc
inc
xor
repnz
mov
ficompl
pop
mov
pop
and
fwait
xchg
mov
repz
jb
sti
pusha
sti
pop
mov
add
sub
sbb
jbe
repz
add
mov
cmp
fisubl
icebp
adc
sbb
nop
cs
or
inc
popa
pop
jmp
xlat
std
mov
pusha
cld
inc
jns
adc
stc
lea
lock
cmp
jnp
scas
int3
or
stc
out
icebp
out
bnd
push
add
insl
dec
xor
sbb
scas
xchg
daa
imul
popa
pop
test
xor
jne
mov
aaa
sbb
pushl
loope
adc
add
loope
mov
jge
lods
mov
adc
sub
and
int
andl
adc
rcl
pop
lea
add
lret
or
adc
lret
xchg
add
mov
xchg
mov
movsl
sub
cltd
and
repz
pop
sti
aas
push
jl
cwtl
jl
aas
sub
dec
inc
les
pushf
sbb
inc
add
inc
jecxz
ss
test
add
out
cmp
repz
pop
icebp
jecxz
flds
xor
mov
xorl
adc
jge
dec
fcomip
bound
inc
xchg
jecxz
fs
mov
jae
mov
arpl
insl
test
xor
cmc
test
adc
je
mov
pop
fwait
jb
jle
gs
xchg
gs
sub
jne
out
icebp
jecxz
pop
cli
and
loopne
cli
enter
popf
cmp
ret
scas
add
xchg
lods
movsl
push
pop
dec
jns
outsb
jecxz
push
mov
mov
clc
pop
lock
push
mov
out
popa
divb
js
rolb
testb
test
lret
icebp
jno
cmpsl
cmpsl
test
decl
pop
dec
repnz
ljmp
bound
adc
adc
gs
xchg
jbe
pop
movsl
cltd
lea
lea
xor
dec
mov
cs
sub
sti
mov
and
ficompl
mov
pop
adc
dec
xchg
dec
push
push
xchg
scas
jl
sub
or
sbb
fistpl
cltd
jl
mov
insb
push
dec
jle
mov
inc
nop
xorb
jecxz
stc
xor
stos
popa
popf
mov
jb
loop
and
in
clc
sbb
xchg
and
call
mov
lret
fsts
or
cmp
call
mov
lds
rcll
jb
jp
push
movsb
adc
sbb
fstps
inc
daa
mov
faddp
out
cmpsb
pop
jbe
add
jno
or
loope
inc
push
mov
xor
push
scas
dec
aaa
int
data16
in
and
int
fsubp
insl
pop
xor
sub
inc
loop
push
push
dec
stc
in
enter
cld
lods
popa
and
rorb
adc
in
adc
xchg
dec
cmp
jl
mov
pusha
push
add
outsl
mov
or
popf
sbbb
cmp
ss
mov
mov
sub
sbbl
jg
push
inc
dec
or
fimuls
mov
sbb
call
jo
or
adc
mov
pop
test
inc
or
sbb
movsl
mov
orl
aad
or
sbb
pop
shlb
add
or
inc
ror
mov
clc
cli
bound
int
ret
or
jns
lock
pop
dec
lock
jb
sub
jns
cmp
sub
or
inc
es
push
or
dec
add
jle
cmp
jmp
inc
bound
or
mov
out
push
je
cmp
ret
fs
inc
dec
push
and
mov
push
into
mov
mov
roll
icebp
mov
lret
add
add
loop
xchg
or
mov
stos
fidivrl
adcl
ljmp
push
and
xchg
jb
dec
outsl
scas
out
or
leave
repz
inc
or
adc
loop
setbe
out
push
loope
inc
cmp
dec
inc
dec
imul
push
ss
sub
fsts
in
es
mov
out
sbb
pop
jecxz
inc
daa
rcll
rcll
mov
ret
cli
dec
daa
sub
push
imul
adc
xchg
jne
pop
popw
mov
cmpsb
adc
je
in
add
jae
jecxz
pop
test
outsl
movsl
flds
pop
rclb
adc
aas
add
into
jecxz
add
out
push
insb
insb
sbb
je
mov
cmpsl
and
pop
cmp
ror
mov
xchg
lods
jmp
adc
jnp
pop
test
pop
inc
xor
jnp
mov
aam
mov
loop
mov
gs
pop
sbb
push
xchg
dec
push
sbb
repnz
or
shrb
xchg
ret
lret
cltd
outsl
cmpsl
mov
repnz
test
sbb
or
popl
jl
inc
ret
repnz
int
pop
push
mov
pushf
pop
jge
mov
mov
or
sbb
loopne
mov
push
inc
push
cmpb
in
lods
lahf
xchg
dec
mov
repnz
inc
lahf
cmp
push
adc
mov
dec
dec
jg
rorb
fnstcw
mov
mov
jnp
mov
das
xor
fstp
xchg
or
lcall
mov
arpl
enter
push
jne
sbb
lods
mov
push
push
fcoml
in
lods
pop
leave
mov
aas
push
scas
mov
push
bound
dec
and
into
test
xor
pop
xor
add
cmpsl
js
scas
fcomp
outsb
lret
or
pusha
cltd
jg
xor
test
push
sbb
loop
stos
inc
and
lds
ret
cmp
xor
mov
into
xor
mov
arpl
negl
add
xlat
int
xchg
test
sbb
stos
call
insb
mov
scas
imul
xor
push
or
mov
jle
das
les
test
les
cmp
aaa
and
sub
sub
adc
movsl
mov
add
dec
inc
jns
xchg
cmp
push
loopne
sub
push
daa
xchg
cmp
push
mov
xor
bound
jne
jb
std
xor
cli
insl
cmc
add
in
push
out
iret
scas
xchg
xchg
mov
mov
rol
dec
jp
adc
cmpsl
out
cmp
nop
inc
sub
pop
punpckhwd
popf
repz
loopne
test
xchg
sbb
cli
out
filds
mov
mov
cmp
out
sti
shr
xchg
lea
xchg
cld
xchg
pop
mull
adc
sbb
test
dec
inc
add
adc
ret
mov
mov
inc
pop
push
xchg
mov
fsts
pusha
outsl
scas
insl
mov
test
in
pop
or
mov
or
into
jle
sub
lcall
dec
pop
jnp
dec
mov
inc
dec
imul
mov
push
movsl
fisttpll
dec
sub
ret
in
mov
ss
or
aas
fistps
cmpb
lahf
mov
pop
push
mov
sub
dec
or
xor
inc
jmp
cwtl
add
bound
out
push
fcompl
pop
enter
lret
cmp
cltd
inc
cld
and
in
xchg
inc
aam
inc
ret
xlat
inc
mov
mov
adc
xor
cld
es
or
inc
mov
cmp
stos
data16
jge
fwait
test
lret
icebp
mov
xor
jg
addr16
mov
sub
or
jmp
dec
cmp
aas
and
or
addr16
inc
cmp
inc
inc
inc
sbb
sbb
iret
dec
hlt
dec
jno
jns
jecxz
xchg
push
add
fidivl
inc
faddl
test
mov
or
and
push
outsb
push
sbb
testb
pushf
mov
mov
ljmp
jmp
dec
pushf
dec
pop
gs
fbld
pop
loopne
inc
insl
test
pop
and
pop
es
mulb
fstpt
inc
pop
adc
mov
sub
out
rorb
shl
int3
or
xchg
adc
sub
xor
add
cs
push
shr
insl
push
dec
lea
movsl
sub
add
push
int
fcoml
push
ja
out
pop
insl
adc
es
daa
jbe
out
das
stos
and
aas
push
movsb
gs
inc
pop
xchg
pop
jns
or
dec
jle
ret
jae
shll
orb
lods
in
xor
aaa
in
mov
add
insl
adc
andl
rcl
cmpb
xor
sbb
hlt
fcmovne
or
mov
sbb
sbb
mov
cmp
les
bound
cld
xchg
inc
dec
lret
into
in
rclb
add
insb
and
xchg
std
lea
adc
inc
subl
in
xchg
xchg
sbb
imul
xchg
lods
ret
iret
stos
pop
cwtl
push
pop
ja
and
or
loopne
cmp
outsb
lds
rep
pop
jp
xchg
dec
test
or
imul
mov
jge
adc
sbb
mov
insb
jl
orb
cwtl
mov
in
and
aaa
sar
or
pop
push
jno
pusha
and
call
push
cmpsb
js
add
jne
dec
imul
mov
xchg
fld
add
stc
sub
inc
pop
mov
shr
dec
or
lds
movsb
mov
push
mov
cltd
cmp
loope
cltd
xor
pop
xor
adc
insb
jb
out
mov
pushf
cmp
mov
xor
sbb
pop
nop
std
adc
mov
int
fadd
arpl
jnp
mov
ss
xlat
jb,pn
push
adc
xchg
out
test
mov
hlt
fbld
push
mov
mov
inc
mov
cwtl
cwtl
sbb
fists
fsubrl
sub
xor
cld
pop
inc
dec
adc
arpl
push
movsl
js
push
add
push
cmpsl
mov
mov
test
out
fwait
jo
into
adc
and
aam
dec
xor
std
ja
jbe
bound
gs
pop
imul
int3
daa
inc
sub
fisubl
lret
push
adcb
pop
mov
mov
nop
outsl
add
subl
jecxz
adc
mov
pop
adcb
cli
clc
mov
cmpsb
pusha
stos
cwtl
das
mov
out
out
std
lret
pushw
rcr
mov
pop
jno
call
outsb
or
mov
jl
std
or
fsts
popa
xor
push
xchg
jae
test
fwait
jle
lods
push
jo
lock
push
shlb
sub
and
xchg
je
adcl
lahf
dec
cmp
loopne
outsb
jl
shll
cmp
mul
in
jo
ret
iret
and
dec
movsl
shr
movsl
sbbb
cmp
sti
lods
repz
call
in
mov
iret
mov
idiv
das
xchg
into
xorl
fsubrl
and
inc
les
nop
sub
push
dec
orb
mov
cmpsb
imul
xor
out
pop
addb
fstl
loopne
pop
cs
push
adc
dec
enter
test
hlt
push
and
ss
int
into
xor
cmpsl
js
inc
dec
mov
mov
mov
inc
fs
test
icebp
add
mov
or
sub
push
pop
rcrl
jne
clc
xchg
mov
inc
xor
xchg
popf
cs
jecxz
sbb
push
aam
pop
or
sbb
hlt
xor
and
cld
xor
pop
jae
cmp
aam
ss
rol
sub
sub
fldcw
xchg
jne
ficompl
inc
test
clc
push
adc
push
punpckhbw
out
shr
mov
dec
pop
or
jne
inc
aaa
insl
pop
das
je
out
push
pop
pop
jno
mov
inc
pop
mov
inc
out
add
jb,pn
xor
lods
inc
sbb
lods
jne
xor
or
testl
sbb
insb
inc
loope
in
or
sub
add
cmp
cs
out
mov
or
sbb
call
mov
pop
pop
scas
mov
mull
arpl
push
adc
add
mov
inc
subb
loopne
sub
push
dec
xor
mov
outsl
mov
leave
das
addl
mov
adc
jl
int
sub
sub
xchg
int3
push
xchg
pop
into
scas
xlat
dec
fdiv
cld
xchg
test
and
jne
aaa
pop
bnd
dec
sar
icebp
cmp
lret
mov
stos
mov
xchg
cmp
enter
pop
cld
xchg
mov
addl
lds
mov
out
daa
movsl
frstor
jb
jl
or
jmp
pop
inc
cmp
cmp
pusha
push
xor
push
sahf
int3
xchg
jae
mulb
cmp
dec
xchg
icebp
popa
push
mov
dec
mov
stos
lahf
xchg
and
jno
push
sub
add
mov
push
mov
mov
cmp
add
cltd
out
imul
mov
lods
lahf
les
sub
sub
imul
mov
mov
sub
lret
cld
mov
sbb
inc
pushf
fisttpll
dec
jg
rcll
hlt
shlb
cmp
jg
fimull
jo
out
mov
pop
jl
dec
ljmp
dec
mov
mov
pop
mov
cmpsb
pop
inc
cmpsl
insb
jecxz
ret
fwait
push
add
add
lds
mov
je
aad
test
dec
scas
push
popf
dec
xor
inc
xchg
jnp
arpl
ss
lods
pop
movl
mov
add
rcrl
add
jge
icebp
xchg
aad
dec
mov
aas
mov
jge
mov
pop
xor
inc
lahf
push
lods
inc
testb
push
xor
jno
mov
xchg
inc
jnp
dec
dec
ret
lds
adc
cmp
ds
popf
ficomps
popf
nop
xchg
incb
mov
out
cmpl
ss
int
ja
push
push
arpl
rcrl
outsb
xor
mov
push
sarl
testb
adc
rolb
cmp
and
cld
jb
test
inc
das
xor
adc
mov
xchg
loopne
sub
jge
mov
sub
adc
xchg
mov
sti
popf
dec
jle
int3
mov
mov
mov
xchg
adc
ret
cmp
jl
icebp
rorl
xor
roll
bnd
push
or
dec
mov
add
loop
enter
inc
cmp
mov
sbb
sbb
mov
pop
ret
mov
stos
pop
push
cmp
xchg
pop
mov
clc
pop
mov
mov
mov
loopne
or
rcll
sub
stos
popa
push
xchg
push
loop
loopne
loop
or
out
call
mov
addps
call
mov
aad
push
mov
mov
or
dec
inc
lret
push
fiaddl
mov
in
mov
adc
cltd
sbb
mov
daa
lahf
inc
mov
icebp
test
jecxz
insl
pop
lds
cmp
out
jecxz
xor
mov
and
mov
test
shlb
ret
jp
sbb
or
push
mov
adc
fcoms
push
popa
ds
ret
sub
icebp
sbb
jg
outsl
addr16
mov
push
pop
repnz
dec
ja
outsb
pop
addr16
add
outsl
pop
jne
shrb
pop
xor
jns
notl
cli
add
jg
arpl
std
cmp
repnz
add
bound
xchg
cmp
lcall
adc
ja
pop
out
aaa
sbb
mov
cwtl
test
mov
shll
or
shlb
xor
pop
gs
in
sub
add
outsl
into
add
cli
pop
xor
xor
ror
push
pop
repnz
pusha
in
xor
jno
jnp,pn
sbb
mov
push
pop
cmp
dec
int3
sub
fwait
je
rclb
lods
in
daa
sub
jns
addl
leave
xchg
cmc
aas
pop
in
jbe
enter
push
adc
cmpl
std
fbld
cmp
in
xor
inc
fdivp
push
or
js
clc
push
adcb
dec
mov
cmp
das
pop
rcrl
dec
icebp
mov
rorl
int
aam
xor
stos
push
out
xor
out
xor
adc
xor
push
mov
cmp
jp
daa
fimull
rcr
mov
leave
dec
add
mov
push
rcll
pop
fsubs
or
mov
xor
add
stos
sub
mov
jl
pushf
ljmp
xor
icebp
xor
inc
sub
clc
push
fwait
push
mov
mov
push
adc
dec
outsb
dec
sub
mov
push
cmp
lret
outsb
je
xor
adc
lods
out
cmpsl
push
and
shrb
xchg
adc
adcl
xchg
cld
sub
pop
add
inc
cli
out
hlt
in
clc
nop
mov
icebp
add
leave
out
xchg
xchg
fs
pop
pop
jle
cwtl
loopne
sbb
push
loope
loopne,pt
insb
mulb
xor
movsl
addl
sbb
add
dec
fmuls
sbb
push
adc
roll
push
adc
jg
cmp
paddsb
inc
mov
aas
and
jo
loop
adc
lock
cs
sbb
fstl
cmp
imul
xchg
xor
loop
pop
jae
or
cld
and
jle
sub
mov
cmc
pop
xchg
in
mov
sbb
jae
scas
push
adc
lods
push
or
inc
pop
lahf
test
or
es
cwtl
test
sti
mov
dec
into
rcrl
push
sbb
sbb
mov
movsl
push
mov
mov
mov
xor
test
cld
stc
mov
repnz
fists
out
cwtl
sbb
leave
mov
inc
dec
test
mov
sbb
bound
bound
es
or
pusha
gs
call
xchg
jns
test
aad
jo
ljmp
mov
mov
cld
sub
cwtl
aad
mov
and
out
adc
xchg
push
ja
jne
xchg
sub
insb
lret
push
mov
adc
daa
push
cmc
adc
popa
jb
inc
scas
insb
xor
insl
cmc
mov
fisubrl
shlb
in
sub
mov
or
std
xchg
pop
loope
outsl
out
jge
out
cmp
inc
sub
mov
ret
sub
push
dec
cmpsb
in
push
or
push
cli
and
sub
push
out
mov
hlt
shll
pop
rcl
jmp
xchg
clc
imull
add
xchg
xchg
mov
in
popa
aaa
in
or
int3
fidivs
cmp
or
imul
cmpsb
nop
addr16
mov
sub
jno
inc
mov
dec
cld
cmp
outsl
pop
push
insb
jnp
sub
call
pop
je
popa
jp
jo
dec
cltd
mov
enter
and
ja
mov
sub
push
rorb
outsb
adc
lds
insb
and
out
rolb
pop
inc
cmp
add
lods
sub
jns
mov
jmp
ret
subl
add
lds
call
push
inc
daa
mov
or
jl
adc
aaa
mov
fwait
out
push
out
psubsb
cmp
adc
sub
iret
ficoms
imul
and
pop
out
pop
sbb
jae
xor
xchg
sub
popf
cmpsb
and
cltd
nop
or
mov
cmpsl
dec
outsb
xor
filds
aad
xor
xchg
in
scas
lock
mov
arpl
pop
add
in
nop
jo
jne
push
add
adc
addb
bound
lock
mov
jecxz
jae
xor
pop
cmc
mov
test
push
gs
dec
xlat
dec
push
inc
sbb
lods
addr16
iret
shll
push
jg,pn
xlat
es
das
loope
fwait
pop
addb
add
cmp
in
iret
inc
jmp
imul
pusha
jp
jne
add
xlat
insb
and
jecxz
adc
push
or
push
mov
ja
imul
jb
ret
adc
sub
out
xchg
mov
jp
cwtl
test
ret
xlat
mov
pop
out
shl
das
es
shr
push
pop
jbe
inc
sbb
mov
dec
movb
pop
push
or
mov
lock
jns
mov
pop
push
mov
nop
xchg
les
addr16
pushf
xchg
cmp
mov
js
psubw
push
cld
xchg
jno
mov
xchg
das
scas
mov
popf
add
jecxz
popf
rcl
push
arpl
pusha
jbe
xor
cwtl
sbb
xlat
shll
dec
adc
push
cmp
jg
and
or
int
push
pop
push
sahf
repnz
pop
daa
testl
cli
and
loopne
cmp
push
scas
test
and
outsl
inc
cmp
push
inc
xchg
sbb
lret
dec
mov
cmp
lret
stos
mov
iret
lahf
push
mov
jbe
xchg
jbe
insb
es
cvtps2pi
and
add
push
decl
pushf
inc
xor
push
in
cmc
push
push
and
xor
cli
inc
out
sub
and
add
scas
mov
lahf
ja
jmp
cmpb
jbe
dec
jecxz
aas
adc
sub
pusha
enter
gs
arpl
jecxz
and
dec
sub
jmp
mov
and
or
mov
cmp
sti
jl
pusha
dec
shlb
xor
lea
in
cltd
ja
hlt
sbb
cmp
insb
bnd
fidivrl
and
cmp
loopne
mov
movsb
mov
insb
mov
mov
dec
jo
adc
mov
std
out
fwait
xchg
cmp
inc
rclb
lock
inc
xchg
sbb
lret
sub
dec
or
lcall
mov
sub
sbb
or
andb
push
out
add
addb
cmp
lcall
xor
and
mov
add
jne
adc
ret
loop
and
xor
inc
mov
jbe
dec
mov
jnp
cmp
loopne
xchg
mov
data16
loopne
call
xor
mov
int
cmpsl
jns
outsb
lods
pop
push
and
ss
pop
js
fwait
dec
std
int
pusha
ficompl
les
mov
push
jmp
mov
push
sub
jns
jl
adc
or
push
sbb
pushf
sahf
out
add
cmp
rolb
or
shr
xor
fisttpl
sub
fdivrl
addb
add
add
xchg
inc
hlt
dec
fcomps
stc
dec
testb
add
jb
mov
and
cmp
test
mov
mov
cmp
pop
fcoml
pop
inc
mov
pushf
rorl
leave
sbb
xchg
out
pop
jge
jmp
insb
das
repz
jno
aad
or
inc
shrl
rol
cwtl
les
movsl
mov
stos
xor
fwait
pop
mov
out
cmp
mov
jae
movl
cmp
stos
mov
ret
shl
mov
jg
mov
int
ja
mov
in
lods
or
rorl
xor
movl
jge
roll
sbb
arpl
and
scas
cmp
test
dec
sbb
xor
test
push
add
rorb
ficomps
aam
in
adc
sub
das
inc
jg
orb
roll
out
sub
fcmovu
jp
fisttps
lret
lret
push
cmpsl
repz
xor
mov
or
inc
out
push
sar
insl
and
sbb
jg
mov
fldt
lea
push
sub
push
or
sbb
jp
pop
jo
mov
mov
loopne
ficoms
arpl
adc
mov
repz
inc
or
and
jg
cmp
stos
xor
clc
sahf
mov
leave
push
mov
fdiv
sbb
icebp
cmp
xchg
aad
inc
add
mov
inc
outsb
and
sbb
call
mov
std
lret
gs
inc
push
sub
jmp
adc
pop
add
and
push
dec
pop
lcall
loop
sub
cmp
fcoml
into
mov
adc
pop
inc
hlt
in
jns
cmp
mov
mov
jne
add
dec
call
pusha
pop
jl
mov
sub
dec
cmp
in
and
xor
mov
aam
stc
xchg
fidivrs
je
icebp
dec
in
fldenv
adc
and
inc
dec
repnz
das
pop
push
pop
pop
add
cld
mov
sub
or
mov
aad
or
sbb
inc
jb
insl
push
inc
les
popa
mov
shll
mov
inc
js
hlt
lahf
push
xlat
lcall
ret
cmp
mov
mov
inc
out
repnz
mov
sti
repnz
pop
int
push
mov
mov
rcll
or
popa
clc
or
ljmp
mov
push
sub
aaa
mov
mov
adc
cmp
mov
ja
insl
and
ja
mov
pop
jp
xchg
cli
push
mov
mov
pushf
xchg
sbb
fisubrs
aas
mov
mov
push
sbb
insl
insl
out
loop
xor
push
push
xor
loop
mov
mov
mov
popa
mov
jge
push
mov
es
arpl
adc
push
jae
mov
mov
sbb
inc
mov
or
gs
dec
push
adc
cli
in
mov
imul
cs
xchg
mov
jg
dec
cld
int3
das
mov
push
mov
in
mov
jb
mov
fdivs
sub
push
lods
push
push
push
lods
out
ss
repnz
mov
mov
xor
fsubs
xor
dec
push
pop
in
inc
int3
bound
inc
sub
xor
push
stc
cli
movsb
jne
mov
fmull
cmc
jp
mov
cmc
xchg
cltd
leave
mov
cmp
xor
mov
test
add
daa
cmpsl
xor
in
dec
xor
fstl
mov
add
pusha
out
xor
and
cmp
and
inc
inc
cli
mov
push
pop
push
ret
fs
push
pop
sbb
push
jno
nop
outsb
cmc
add
cmpsb
mov
xor
xor
cmp
add
mov
push
and
xchg
movsl
push
data16
or
mov
mov
xchg
or
mov
pop
test
ret
mov
in
mov
and
les
ret
lcall
pushf
jno
pop
addr16
lahf
pop
ret
add
leave
pop
test
push
inc
sbbl
pushf
loope
inc
push
adc
fsincos
xlat
jg
sbb
mov
mov
gs
enter
les
lret
inc
mov
push
ret
lods
call
lods
fildll
pop
xor
cld
movsb
sbb
push
push
xor
aas
in
mov
aaa
dec
cwtl
jp
adc
out
mov
call
push
inc
movsl
jno
notl
mov
and
test
adc
fdivs
push
add
or
icebp
jae
subl
xchg
add
bound
fwait
loop
mov
jo
push
xchg
rcrl
inc
je
mov
bound
imul
lahf
andl
or
in
clc
leave
push
mov
movsb
subb
shl
sbb
and
adc
testl
pop
iret
sbb
fwait
sub
jne
fbstp
pop
lods
mov
stc
daa
push
add
and
add
sti
mov
push
out
adc
ljmp
cmpl
fidivl
push
jmp
in
cmp
xlat
mov
adc
push
sub
mov
addr16
or
aas
and
nop
cmp
push
push
lods
enter
lods
and
cmp
inc
loopne
xor
sub
cmp
cmp
inc
nop
adc
lds
out
ljmp
jno
mov
fcmovb
cli
js
test
int3
jno
outsl
rorl
mov
jp
mov
jp
pop
imul
adc
cli
pushf
fnstsw
xchg
cs
stos
xchg
sti
dec
add
stos
sub
jecxz
mov
shlb
or
leave
sbb
and
arpl
jo
popf
or
stos
out
inc
rol
jo
sbb
outsb
jns
scas
testl
jae
xor
add
scas
hlt
les
or
pop
mov
inc
push
incl
or
lds
push
scas
cmpl
repz
and
fnstenv
cmp
push
or
cmp
test
ds
rol
jne
fmul
xor
adc
out
xchg
adc
out
inc
inc
clc
mov
sub
loope
rorl
add
pop
arpl
jno
mov
lahf
inc
stos
lds
mov
xor
mov
jnp
ret
mov
fidivl
add
ss
js
add
pop
addr16
sub
outsb
movsl
adc
lahf
aas
pop
xor
ja
cmp
pushf
xchg
stos
imul
aad
jns
pop
lock
scas
jb
inc
popa
xorl
mov
and
cmp
push
pop
xor
push
push
pop
fcmovu
fdivl
adc
mov
outsl
push
mov
dec
sub
inc
stos
inc
insb
xchg
dec
jnp
test
bnd
jae
fs
test
in
fnstenv
fucom
loope
cwtl
les
sbb
movsl
xchg
pop
pop
pop
sbb
jge
jmp
xor
jbe
paddusw
ret
mov
adc
out
xor
adc
addr16
jl
push
sbb
rcll
sub
cmpsb
aaa
sbb
pushl
icebp
pusha
mov
es
fadds
leave
shlb
push
and
cld
adc
lea
or
shr
aam
in
addl
out
cmp
pop
repnz
sub
push
cs
sub
sub
and
fcompl
add
stos
lea
add
push
cmpsl
out
inc
cmp
jns
repnz
pop
stos
daa
jle
out
imulb
xor
xchg
sbb
mov
jno
sbb
jo
mov
cmp
mov
lret
mov
xchg
inc
inc
adc
icebp
scas
inc
test
add
adc
and
sbb
lea
mov
push
or
loope
xchg
xchg
jge
shrb
scas
es
mov
dec
sbb
jmp
hlt
outsl
cltd
fs
add
fwait
and
adc
add
je
or
mov
cmc
cmp
hlt
scas
ds
mov
sub
int3
scas
adc
cli
loopne
cmp
and
or
in
push
psrld
cmc
sahf
xchg
mov
lods
imul
data16
js
mov
mull
les
sub
lds
gs
adc
adc
adc
jno
pop
jo
leave
pop
ret
fbld
jl
sbb
rcrb
xchg
and
xor
fs
fadd
ljmp
cmpsl
xor
or
mov
dec
decl
sub
add
test
and
iret
push
adc
sub
imul
shll
pop
pop
adc
incl
jge
aad
jp
nop
je
mov
fnstsw
jge
cmpl
lock
imul
int3
hlt
pop
add
hlt
jmp
mov
jbe
out
sbb
fwait
add
xor
mov
leave
ret
sahf
mov
popa
lret
loopw
mov
jne
inc
sbb
push
aad
gs
es
lret
dec
mov
inc
loope
movsb
pop
sbb
dec
adc
inc
push
mov
fldt
cli
xchg
into
loope
mov
xchg
jne
add
addr16
cmp
fsubs
mov
mov
xchg
pushf
test
cld
jl
sbb
sbb
clc
push
or
out
ret
lods
mov
cmp
cwtl
dec
fcmovu
test
pop
in
and
jp
dec
jge
shlb
dec
movsl
in
or
loopne
int3
pop
pop
xchg
rorl
ljmp
pop
clc
xchg
or
inc
lcall
imulb
and
jb
or
jecxz
pop
mov
and
mov
lods
ss
jns
jp
das
imul
xor
jg
adc
repnz
sub
scas
mov
xchg
xchg
mov
mov
hlt
pop
mov
sbb
cmc
inc
outsl
shll
pushf
xlat
clc
xchg
call
movsl
scas
test
ljmp
mov
subl
cld
lds
pop
pop
xor
rcr
imul
push
movsl
popf
roll
jle
scas
inc
mov
popf
mov
dec
xor
jnp
mov
dec
inc
xchg
mov
xchg
aad
push
lods
sti
mov
cltd
and
push
das
lahf
clc
out
lahf
jecxz
movsb
push
test
mov
cld
or
sub
and
aaa
pop
xchg
sub
dec
add
iret
push
lock
jb
mov
sbb
loop
jno
or
cmp
int3
push
out
pop
je
dec
sbb
jge
push
dec
cmp
lock
mov
repnz
cmpsl
fiadds
inc
mov
sarb
push
movsb
adc
cmpl
xchg
pop
cmp
cmp
inc
and
adc
in
and
xchg
xor
pop
dec
pusha
addr16
jmp
inc
xor
outsb
jp
insb
sbb
fimull
es
sbbb
xchg
imul
mov
je
es
fisubs
aam
xchg
les
pushf
mov
mov
cmpsb
add
adc
je
cmp
jb
lea
cli
push
popa
xlat
cmpsb
xchg
dec
stos
jo
jo
enter
mov
and
imul
popa
int
and
sub
cmp
lret
lahf
repz
mov
sbb
mov
out
inc
pop
jnp
bound
popa
icebp
roll
shll
fidivrs
lock
ljmp
push
insb
fists
stos
xchg
mov
je
addr16
cmp
xchg
sub
add
jge
gs
mov
adc
adc
in
mov
jecxz
lret
xchg
aaa
pop
dec
aaa
inc
or
pusha
loope
ret
adc
cld
ret
inc
dec
shlb
test
cmpsl
cmpl
leave
and
mov
mov
fdivrl
fnsave
cmp
jp
add
xchg
std
rolb
shlb
pop
push
add
cmpsl
xchg
inc
imul
arpl
or
xchg
mov
sbb
xchg
mov
fs
ret
es
cmp
pop
adc
mov
pop
cmp
jns
cmp
jl
inc
add
ficompl
lods
jl
pop
jecxz
jno
pop
iret
call
adc
pop
outsl
data16
xor
pop
xor
sub
mov
mov
xor
and
imulb
adc
pop
sbb
testl
mov
mov
and
mov
pop
xchg
out
and
adc
mov
push
lods
int3
mov
adc
pushl
push
jmp
adc
mov
int3
call
sub
xlat
or
es
push
mov
iret
sarl
es
sbb
dec
repnz
push
es
push
cmp
sti
push
cmpsl
sahf
sub
fdiv
stc
jl
inc
rcr
fisttpll
pop
lret
lock
fists
or
pop
xchg
shrl
js
mov
mov
gs
in
in
aaa
sub
mov
push
cld
pop
dec
in
jge
mov
cltd
ficoms
pop
xchg
adc
ja
push
sbb
dec
and
stos
sbb
mov
mov
int3
mov
push
ret
jne
orb
mov
lea
clc
push
aaa
outsb
ds
or
dec
xbegin
ret
iret
repnz
adc
iret
imulb
dec
xchg
lahf
dec
sub
icebp
enter
icebp
sub
in
add
shll
adc
aaa
fwait
xor
xor
inc
movsb
pusha
and
jecxz
js
imull
xchg
inc
xchg
mov
sbb
mov
push
cmp
test
pop
ja
in
lods
jo
testl
dec
pushf
movl
xlat
test
sub
ja
sbb
mov
add
dec
xchg
inc
lods
push
test
cmc
sub
cmpsb
add
mov
pop
sbb
arpl
mov
sbb
add
inc
jne
mov
aad
inc
push
int3
pop
xor
dec
mov
jecxz
in
out
sub
mov
or
int
xchg
idivl
jge
push
sub
int
subb
ljmp
pop
stos
negb
pusha
adc
adcl
negb
jbe
sbb
mov
je
lret
loop
aas
data16
sbb
xor
in
pop
negl
push
orl
jmp
add
inc
jl
add
pop
out
mov
aas
jnp
xlat
mov
pop
sbb
addr16
mov
call
test
pop
cmp
fidivl
arpl
test
add
xchg
fnstsw
jg
or
cmp
push
fimull
pop
ja
xchg
mov
out
xchg
jp
popf
dec
xchg
xchg
add
and
outsl
lds
shll
test
cmpsl
jo
sub
arpl
fs
mov
jle
or
jle
std
push
lret
mov
rorl
or
mov
sbb
mov
cmpsl
aaa
adc
xor
mov
fdivp
repz
mov
cmp
lret
jmp
jno
lods
in
ss
sahf
xor
fsubr
mov
mov
inc
dec
push
repnz
sbb
mov
loopne
inc
into
fwait
cltd
sbb
jne
sbb
mov
out
lock
push
mov
jg
xor
mov
shlb
and
cltd
int3
repnz
adc
mov
pop
mov
xchg
sbb
xchg
mov
push
xor
push
fs
cmp
mov
shll
push
cltd
jl
pop
jb
inc
sub
sbb
xchg
daa
bound
dec
inc
add
xchg
adc
mov
and
js
xor
add
adc
mov
out
and
out
cmp
cwtl
std
sbb
add
movsl
aas
scas
mov
jnp
mov
std
pop
jmp
cmp
stos
xchg
sahf
xchg
mov
test
mov
inc
xchg
sub
cltd
loope
dec
and
push
mov
inc
jmp
pop
mov
call
lret
mov
lods
test
cwtl
int
es
je
scas
jp
stc
and
and
pop
xlat
roll
xlat
mov
fimuls
push
iret
mov
pop
insb
outsb
hlt
jmp
js
mov
lret
dec
jle
jle
sub
xchg
pop
fs
cmp
and
fiadds
shr
mov
loopne
dec
outsl
inc
cmp
add
push
xor
mov
pop
fisubrl
mov
cltd
scas
fisttpll
insl
pop
jl
or
jne
sbbb
mov
mov
lods
xchg
test
push
xchg
and
int
xor
mov
fdivs
jo
pop
xlat
cmp
fsubr
push
push
adc
shr
fwait
cwtl
add
xor
dec
xor
inc
data16
xor
stos
cmp
popa
shll
cmp
inc
pop
in
shlb
push
loop
popa
and
mov
sub
adc
mov
pop
pop
mov
jbe
pusha
test
jecxz
push
jae
out
push
mov
push
xchg
fcoml
ficomps
call
cmp
sti
or
mov
push
movsl
movl
mov
insb
scas
push
jge
insl
mov
sbb
lahf
xchg
push
dec
jo
add
pop
or
cmp
jecxz
lret
pop
xchg
sahf
test
xchg
cmpsl
lds
adc
or
out
pop
mov
xor
sub
inc
sub
fdivs
add
jb
arpl
pop
rcrb
xchg
dec
jb
insl
mov
mov
daa
cmpsb
xchg
dec
jb
mov
push
lock
inc
scas
add
mov
ret
les
cmp
or
inc
jecxz
setg
jl
xor
mov
inc
lods
adc
movsb
jo
loope
adc
lods
pop
mov
test
adc
scas
test
push
shrl
cs
hlt
and
push
mov
jnp
mov
add
pop
push
add
jl
push
cmp
loop
inc
inc
inc
mov
push
xor
mov
adc
orl
jno
aad
outsl
jnp
fildll
lcall
stos
or
imul
mov
inc
cs
fmull
mov
jl
test
mov
dec
les
repnz
fimuls
xor
test
cld
dec
push
cmpsl
ds
mov
inc
movsl
clc
jp
ret
and
inc
js
sbbl
or
push
test
mov
popf
pop
lcall
adc
sub
add
add
shl
xor
cli
outsl
lods
jmp
pop
aam
mov
pop
jo
fwait
and
mov
je
gs
lds
add
mov
movsb
inc
cs
sub
test
mov
sub
sarl
data16
mov
daa
mov
fdivl
adc
mov
pop
or
dec
aam
push
lock
jp
popa
jg
sbb
lea
xchg
push
jne
jne
fimuls
adc
aad
insb
sbb
pushf
mov
in
movsl
cld
addb
cmp
cmp
lods
inc
sub
cmp
mov
in
ret
sbbl
ja
jb
jae
sub
sbb
or
test
mov
sbb
xor
xchg
std
test
mov
dec
mov
movsl
jge
out
push
repnz
mull
mov
fdivrs
fimull
or
jo
js
out
js
mov
jno
xchg
test
cmp
gs
jl
out
andb
rclb
mov
xchg
add
lods
movsl
or
aad
jge
adc
add
imul
fbstp
pop
adc
pusha
pop
shlb
cmp
enter
jns
test
xor
mov
cmpsl
jp
push
arpl
rcrl
adc
aaa
pop
mov
push
aad
xor
cwtl
sbb
jmp
jb
arpl
jbe
out
insl
into
mov
cltd
fildl
sbb
insb
or
cld
test
jge
dec
push
fisttpll
ret
jmp
arpl
insl
std
data16
sbb
push
loopne
gs
and
ljmp
imul
int3
xchg
aam
jne
sub
pop
inc
ss
mov
aaa
ss
sbb
fisubl
xor
loope
fwait
or
sub
nop
cli
jbe
mov
test
inc
or
or
inc
jmp
enter
mov
jmp
rcrb
outsl
pop
gs
jno
mov
or
push
fistpl
leave
push
jle
in
rcll
pop
dec
daa
cs
das
inc
sbb
add
rorl
xchg
cmc
xor
lock
setge
push
cmp
ljmp
fmull
xorb
xor
mov
push
les
ja
imul
fs
push
mov
lock
aas
test
cmpb
call
sti
sub
sub
das
ss
sbb
inc
aad
xlat
scas
leave
pop
das
push
jae
jge
sbb
ds
sub
fists
cmpb
mov
xchg
push
and
xor
outsb
idiv
js
inc
push
mov
dec
idiv
pushf
inc
cmp
repz
js
sbb
pusha
or
jnp
mov
push
pop
xchg
inc
outsb
in
push
dec
scas
outsb
stc
aad
sub
jb
iret
mov
mov
xor
sbb
lods
add
fstpl
cmp
mov
stc
jmp
lea
inc
std
and
hlt
fcmovnb
pop
pop
test
cmpsb
movsl
fdivrl
insl
ret
gs
stos
mov
pop
add
mov
inc
addb
push
outsl
xor
add
sub
enter
testb
ret
xchg
push
inc
lcall
int
jb
xor
pusha
sbb
push
push
stos
jmp
aaa
les
ret
dec
and
out
pop
je
xchg
mov
sub
add
dec
notb
cltd
mov
dec
fnsave
movsb
dec
sbb
dec
scas
xchg
pop
subl
sbb
loop
outsl
imul
pop
cmpsb
fwait
lret
into
dec
or
push
mov
cld
les
push
sub
adc
xor
in
push
shll
and
fstp
insl
dec
and
mov
mov
sahf
movsl
cmpsb
aad
or
mov
out
out
jnp
mov
into
insl
das
jo
negb
push
jecxz
imul
xchg
pop
iret
sti
xchg
adc
inc
fdivl
cmpsl
dec
mov
xchg
inc
iret
jg
testl
inc
mov
add
clc
outsb
jae
aaa
push
mov
pushf
xchg
enter
add
les
inc
jne
pusha
sub
add
sbb
lret
jne
pop
daa
lret
sahf
xchg
jg
cld
or
and
data16
lret
and
outsl
mov
fidivrl
and
or
jno
sti
stos
sbb
or
in
xchg
mov
mov
scas
mulb
xchg
roll
stc
insl
sbb
xchg
fistps
addl
divb
icebp
jo
aaa
mov
in
movsl
mov
sahf
push
add
push
pusha
bound
inc
mov
insl
or
popf
je
out
inc
xor
and
call
jmp
or
cmc
ja
adc
or
mov
leave
cmp
icebp
aas
stos
mov
push
add
dec
sbb
and
dec
ja
jnp
lret
dec
inc
sbb
mov
fs
mov
adc
inc
and
lret
fmul
andl
mov
insl
inc
loope
jo
testl
shlb
ret
fisubrs
fidivs
addl
pop
icebp
xchg
jp
mov
bound
pop
xchg
push
divl
push
daa
stos
mov
pop
or
mov
push
hlt
mov
mov
sub
push
and
rcl
div
add
mov
repz
ds
mov
cmp
push
les
sub
daa
sahf
adc
xchg
inc
adc
popa
fisttpl
lods
xchg
movsl
jmp
shll
add
shll
lds
push
add
popf
sysexit
mov
mov
mov
das
fwait
in
je
flds
outsb
in
jp
loop
cmpsb
push
roll
jnp
lret
push
arpl
mov
jecxz
mov
fwait
shlb
sbb
lret
mov
aaa
out
and
icebp
loopne
sbb
sarl
imul
xorb
pop
pop
clc
sbb
ljmp
repz
lret
and
in
add
xchg
pop
sub
repnz
or
pop
cmp
dec
mov
inc
lcall
test
bound
push
and
js
cmpsb
sub
js
and
rolb
jno
lcall
test
fiadds
imul
in
das
lret
notb
lahf
xchg
pop
shr
pop
mov
sti
orl
addl
xor
push
or
mov
mov
sub
push
stc
mov
jnp
int
fldl
ljmp
xor
or
dec
adc
cmpsl
xchg
pop
mov
inc
mov
jb
dec
mov
popf
cmp
lcall
sbb
mov
repz
lahf
inc
jmp
adc
pop
lds
xlat
popa
add
test
sub
xchg
mov
pop
dec
cmc
hlt
loop
or
push
jno
adc
in
adc
repnz
inc
scas
jnp
fwait
or
push
mov
xorl
popa
xchg
mov
ret
dec
imul
pop
cmc
jbe
dec
mov
aam
mov
enter
sbb
inc
adc
jge
jns
ror
std
loopne
sub
gs
std
mov
mov
inc
pop
mov
dec
xchg
insl
sti
stos
pusha
cld
xor
and
lods
sarb
dec
add
fidivs
test
ds
out
push
idiv
jb
movsl
add
cmc
sub
roll
loope
mov
fisttpll
xchg
out
dec
insl
mov
dec
in
popa
xchg
aad
aas
xor
mov
lret
dec
aam
xor
std
cmp
xor
cwtl
cmp
adc
xor
flds
xchg
int
xchg
loopne
call
cwtl
les
lds
dec
sbb
sub
int
xchg
adc
repz
cmp
jno
call
popf
aad
rolb
pop
scas
insb
sbb
jmp
iret
enter
or
sub
lret
pop
pop
mov
push
jle
addr16
dec
out
adc
adc
ret
sub
pushf
mov
jnp
cli
cltd
jg
int3
xor
xor
mov
mov
lods
or
call
aam
mov
cmpsb
fstl
jge
loope
dec
and
jp
mov
sbb
mulb
pushf
scas
push
mov
data16
std
push
js
mov
jge
loopne
mov
repz
xchg
or
xlat
in
pop
rcr
arpl
xchg
shll
push
jne
test
dec
push
xor
std
jns
cs
cmc
into
mov
pop
stos
pop
xchg
pop
inc
enter
imul
mov
data16
xlat
or
jnp
lcall
lcall
mov
fbstp
jnp
jnp
lods
mov
xor
mov
icebp
rcrl
jb
fwait
mov
ret
xchg
mov
cmp
insb
mov
push
mov
adc
fs
aad
dec
push
insb
cmp
les
test
cmp
fists
sahf
push
add
push
das
stos
lahf
daa
sub
jl
jb
push
dec
aaa
dec
ljmp
jns
and
xchg
inc
add
push
pop
rep
rcrl
inc
cmp
imull
add
sbb
cmove
mov
xor
ret
mov
test
out
jle
shr
fimuls
ret
int
cmp
jo
das
loop
sub
jg
cs
sub
cli
push
aam
ret
imul
ja
xchg
inc
rsm
jge
ret
dec
dec
call
fiadds
data16
jne
mov
jl
cld
push
movsl
shrl
orb
cmc
sub
lea
mov
in
dec
cmc
idiv
in
int3
inc
fs
insl
dec
inc
mov
push
ss
sbb
push
repnz
popa
inc
or
inc
adc
lea
call
pop
cmp
rcr
inc
cmc
inc
sbb
jge
shll
cmpsl
mov
out
pop
push
daa
jmp
lret
xor
mov
xchg
pop
push
sti
push
or
sti
adc
int3
aad
mov
dec
mov
mov
sbb
sarb
aad
jne
mov
sbb
jbe
mov
or
dec
jp
rcl
pop
xchg
sub
movsb
and
jmp
pop
adc
aam
inc
add
push
in
xchg
lret
in
ret
loopne
addr16
and
xchg
adc
sbb
cmp
adc
push
pop
jmp
jp
adc
dec
ret
jp
jb
pushf
fwait
std
push
and
clc
cmpsl
pop
jp
and
sti
aaa
xchg
jmp
std
ret
mov
sbb
sub
clc
stc
lods
insb
sub
outsl
cmp
test
inc
leave
popa
adc
pop
or
cmpsl
inc
bound
fdivr
pop
mov
add
mov
add
aas
out
es
lods
pushf
mov
stos
out
pop
push
ret
jmp
xor
mov
icebp
xchg
fists
fistpl
xchg
je
cmpb
shl
lods
lcall
adc
jle
mov
jl
mov
shlb
adc
fcomi
ret
xchg
ja
push
lcall
lcall
inc
cmpsl
hlt
cli
pusha
scas
repz
inc
mov
push
mov
push
jmp
mov
sti
call
out
int3
test
popa
jno
pushf
sbb
and
repnz
mov
push
sbb
adcl
test
ja
cld
dec
xor
pop
or
mov
push
inc
dec
sahf
sub
and
repz
or
cmpb
xchg
or
cmp
jbe
lret
mov
out
cwtl
scas
push
lcall
and
or
add
roll
subb
aad
cmp
inc
scas
mov
das
ret
sbb
in
movsl
pushf
outsl
scas
push
lret
mov
push
fsubrs
add
pop
jbe
imul
add
mov
or
sbb
and
cmp
sbb
inc
push
cltd
push
pop
or
in
inc
notl
jg
cld
call
push
in
out
mov
icebp
pop
loop
fmulp
pop
sti
fwait
cmc
xor
clc
mov
jne
dec
lret
jp
adc
in
mov
rcll
das
stos
in
jbe
je
inc
fdivl
xor
mov
cmc
inc
or
ljmp
test
and
stos
movsb
mov
sbb
inc
and
sbb
cli
adc
add
xchg
lds
mov
mov
xor
aas
imul
sub
xchg
sti
lods
fcmovu
loopne
jg
push
hlt
lods
testb
imul
insb
ficoml
mov
pop
js
mov
test
xchg
or
lds
lods
outsb
js
mov
sbb
and
inc
or
cmp
mov
push
jmp
int
pop
mov
lds
jno
sbb
fsubrs
push
in
mov
ja
mov
mov
test
div
dec
mov
dec
in
cmc
hlt
cmpsb
xchg
repnz
cli
pop
scas
pop
xor
adc
sub
cwtl
je
mov
mov
cwtl
sbb
xchg
jl
inc
pop
in
je
mov
mov
and
xchg
lods
push
incl
xor
repnz
sbb
test
js
leave
xorl
cmpsb
imul
enter
pushf
and
addr16
mov
test
add
lods
mov
jecxz
push
ds
lock
sbb
in
insl
lcall
inc
pushf
sub
or
cli
data16
inc
imulb
das
xchg
mov
mov
loop
adc
xor
lcall
or
mov
push
pop
rorl
jle
popa
lds
adc
fwait
cmp
add
adcl
and
pop
shrb
cmpsl
testl
push
outsb
in
pusha
enter
addl
cmc
push
jmp
dec
mov
push
pop
idivl
mov
in
int3
lea
dec
rol
mov
imul
mov
lods
cmc
sub
jnp
pop
ret
inc
push
aas
in
adc
xorl
je
arpl
jge
sub
and
lcall
orl
fnop
scas
xor
outsl
inc
sub
sbb
cmc
and
jg
cmpsb
push
fdivrs
cltd
fs
aas
mov
lock
hlt
lcall
mov
xor
jo
push
jae
and
stos
pop
cmc
fisttpl
inc
pop
in
hlt
ss
out
hlt
push
imul
or
cmp
xchg
hlt
iret
test
push
shl
dec
cmp
adc
jle
mov
xchg
cmp
sti
loope
lcall
repnz
sub
pop
mov
loopne
insl
mov
loope
pop
lea
movq
jecxz
test
in
and
xchg
or
lea
fnstcw
int3
and
pop
or
repz
in
dec
ss
xor
dec
xlat
rep
xchg
cmp
jge
fstpl
pusha
fdivs
and
inc
cmp
push
push
ss
subl
test
or
push
outsl
add
or
cmp
xor
ja
dec
sbb
push
loop
pop
subb
mov
sub
daa
movsb
lock
ret
inc
cmc
adc
clc
or
in
xchg
cld
addr16
jne
std
fisubl
xlat
sub
aad
sub
mov
pop
fdivrl
sarl
imul
pop
sub
xor
xchg
or
mov
push
sbb
add
cmp
mov
xor
jl
stos
out
push
cmp
adc
in
and
jno
out
movsb
lock
mov
cmpsl
xor
xor
xor
mov
imul
popa
mov
xor
cmp
cwtl
mov
lock
and
pushl
xor
adc
int3
ds
daa
arpl
in
dec
out
pop
shl
nop
mov
inc
xchg
lahf
jle
into
lret
out
in
or
insl
jns
dec
ficoms
xor
decl
jbe
or
std
movsl
and
add
cmp
test
xchg
test
addl
mov
mov
sbb
pop
ljmp
pop
xlat
sub
inc
mov
inc
mov
xchg
jecxz
lock
stos
pop
push
or
out
xor
and
and
notl
xchg
sub
bound
imul
test
ss
xlat
ror
push
push
inc
sbb
and
mov
mov
jecxz
gs
sbb
scas
lods
inc
mov
ficoms
jno
out
mov
je
insb
out
popa
outsb
add
push
dec
jbe
lret
and
xchg
sbb
test
test
mov
pop
pop
xor
movsb
aaa
xchg
inc
sub
iret
push
lock
pop
int
jbe
iret
nop
sbb
and
sarb
repz
jmp
lods
in
and
addr16
fstpt
ret
add
inc
push
cmpsb
rcll
sbb
out
jo
sbb
mov
jns
mov
cmp
fs
clc
jle
sti
das
jg
jmp
push
pop
bound
mov
popa
pop
repz
popa
mov
inc
lcall
push
fdivrl
inc
mov
in
adc
mov
sub
xor
jbe
sub
push
inc
xor
sub
cmp
mov
int3
rcrl
cmp
test
sahf
aas
outsb
or
push
xchg
cmp
dec
add
test
and
cmpsb
cld
les
adc
pushf
daa
or
pop
and
and
decl
hlt
push
loopne
and
pushf
push
int
psubusw
out
pop
xchg
mov
pop
jge
shlb
dec
int3
aas
pop
push
pop
mov
pop
rolb
in
sbbl
jns
and
ret
pop
pop
mov
sub
pop
dec
xor
stos
xchg
pop
push
mov
fdivl
pop
mov
pop
add
cmp
xor
popa
xlat
pop
fidivrs
aas
adc
mov
movsl
stc
add
mov
lret
das
mov
push
dec
lcall
aaa
mov
xor
pop
daa
dec
push
out
adc
hlt
iret
movsb
dec
or
aas
popa
sub
xor
sub
out
scas
inc
adc
sub
pop
add
mov
mov
push
sbb
mov
pop
loopne
or
test
mov
mov
dec
jae
push
mov
stos
arpl
jmp
cwtl
or
cmp
std
gs
or
lods
push
jecxz
mov
xchg
loop
pop
scas
js
mov
jo
inc
loop
sub
idivl
dec
pop
sub
or
fs
gs
jbe
aad
test
lock
bound
gs
addr16
call
mov
lcall
and
cltd
jb
in
test
data16
lock
ret
dec
bswap
fwait
adc
jae
xchg
mov
stos
stc
cld
mov
push
sbb
es
faddl
dec
pop
pop
rorb
movsb
ja
test
and
mov
mov
add
decl
into
adc
imul
subl
rorl
mov
ds
mov
inc
clc
ror
jo
mov
stos
movsb
aam
insl
cmp
lcall
ss
shlb
sub
add
xchg
add
jo
xor
sarb
push
fisubrs
adc
jbe
xchg
out
sbb
aaa
xorb
xchg
cmp
add
insl
leave
inc
sbb
jnp
frstor
andb
xchg
adc
adc
lret
mov
adc
adc
cmp
lret
pop
push
cmp
mov
xchg
push
sbb
fldt
inc
bound
mov
jge
shlb
leave
les
nop
fildll
xor
jbe
or
sub
pushf
fwait
in
iret
sub
xlat
cli
xor
std
lahf
out
cmp
int
cmc
mov
mov
test
adc
data16
repnz
jne
mov
mov
cmp
sti
jl
iret
pop
dec
dec
sub
cmp
cli
outsl
cmpsl
dec
fs
sub
sub
push
xor
movsb
jecxz
dec
in
or
cmp
insl
cmpsl
add
adc
xchg
inc
popf
pop
jg
movsb
sbb
shl
pop
add
cmpsl
mov
xchg
push
sub
add
inc
mov
sbb
adc
xor
addb
xor
add
sbb
xlat
sahf
cmc
lret
mov
sbb
and
mov
mov
inc
add
xchg
ret
add
mov
or
xor
stos
xor
pop
dec
rcrl
inc
out
and
addl
cld
lea
loop
mov
les
mov
cmp
stc
xor
lcall
fsubrl
rcll
mov
xchg
pop
insl
cli
lret
andnps
bound
lds
xchg
push
xlat
mov
adc
mov
ss
fdivl
dec
mov
mov
mov
mov
jle
push
in
enter
sub
scas
nop
js
pop
std
add
xor
push
std
xchg
fnstcw
jnp
pop
adc
lahf
mov
cwtl
jle
mov
in
andb
dec
adc
test
inc
pop
fildll
rorb
add
lahf
push
fsubrl
dec
test
ds
cmp
inc
xor
xor
cmp
push
pop
jnp
sbb
imul
xlat
xchg
rcrl
outsl
outsl
les
inc
xchg
fidivl
lods
movsb
xchg
dec
popf
in
sbb
xchg
sub
out
jg
mov
cmpsl
adc
sbbb
cmc
test
mov
loope
stc
adc
loop
and
mov
mov
ja
mov
pop
fs
pop
fistps
jno
xchg
popf
sub
mov
outsb
imul
cmp
cmp
dec
add
jg
pop
inc
popa
mov
cmp
xchg
xchg
aam
rclb
aad
mov
inc
push
xchg
pop
bound
sub
mov
sbb
call
or
test
or
sbb
ds
push
jmp
cmp
jo
mov
js
stos
ret
popf
adc
and
scas
pop
xor
cmpsl
lock
testl
fcmovnu
out
jg
daa
adc
and
inc
add
js
jno
xor
ret
insl
push
mov
std
test
test
or
aam
pop
pop
fcomip
loope
test
test
mov
sbb
mov
lds
push
and
sub
xchg
pop
sbb
cmp
add
ret
xchg
stos
arpl
mov
cmp
test
mov
lahf
fcomi
xor
dec
pop
int
xchg
add
inc
lahf
mov
pushf
enter
lods
xor
dec
mov
test
mov
pop
mov
bnd
jg
fcomp
xor
fs
and
xchg
and
mov
jmp
les
ja
call
pop
adc
pop
jmp
sub
jae
aad
dec
ret
pop
test
fimull
mov
xor
pop
push
pop
xchg
mov
adc
adc
push
stos
mov
loopne
add
push
fsubrs
push
in
shr
subb
xor
lea
push
rol
mov
jae
xor
sbb
frstor
sahf
ret
test
xchg
mov
ret
and
cmpsl
movsl
mov
adc
push
xor
lahf
sahf
les
inc
sbb
mov
xor
and
cli
mov
in
ficomps
movsb
shll
adc
cld
dec
dec
fistpl
mov
push
cwtl
add
sbb
jnp
sub
mov
jo
mov
sub
lods
cmp
stc
icebp
dec
adc
inc
adc
mov
mov
mov
xchg
loop
inc
push
lods
aam
cmc
ljmp
sbb
push
call
imul
inc
sbb
mov
shlb
cmp
cli
sbb
add
add
cmp
mov
lret
loope
adc
outsb
in
and
mov
enter
pushf
bound
pop
cmp
shr
cmpsb
mov
ja
mov
mov
push
inc
imulb
leave
fiaddl
sbb
sub
jecxz
cmpsb
mov
add
mov
cli
add
or
adcl
mov
rorb
or
pop
xor
jae
inc
inc
lret
inc
test
test
or
inc
lods
lcall
mov
adc
inc
repnz
mov
ficoms
xchg
dec
int
outsb
rcl
jns
rclb
mov
xor
div
out
push
adc
xchg
cli
ret
sub
inc
push
xchg
iret
sti
out
repz
mov
jmp
icebp
aad
sbb
and
or
add
cmpsl
xor
scas
in
inc
jns
jae
dec
sbb
dec
add
inc
cmp
sbb
push
je
mov
inc
dec
fistpll
xor
cmp
aad
xor
mov
jns
xchg
ret
sbb
add
cmp
pop
rcrb
fcmovbe
loopnew
hlt
add
repnz
inc
cwtl
test
sbb
mov
push
and
xchg
jge
adcl
cmpb
gs
mov
es
jmp
add
insb
mov
sub
adc
adcb
mov
and
imul
jl
mov
lahf
push
cwtl
jg
out
out
push
cwtl
enter
mov
lcall
adc
pusha
dec
push
dec
out
fstps
mov
bound
jae
test
std
loopne
pop
fimuls
and
ficompl
js
jg
dec
das
push
push
cli
push
mov
ret
es
jo
movsl
mov
xchg
mov
jnp
stos
stc
sarb
ds
pop
jbe
inc
sti
popa
lods
loopne
mov
and
pop
or
test
sbb
xchg
sbb
inc
popa
mov
leave
and
mov
frstor
ret
jp
jg
lret
adc
sti
and
inc
icebp
push
and
jp
adc
pop
repnz
jbe
dec
inc
sbb
aad
pop
pop
dec
fwait
xchg
cmp
test
push
in
pop
xchg
clc
jae
mov
jnp
cmp
aad
test
hlt
push
lret
and
pop
inc
fwait
test
mov
fdivl
in
xor
mov
imul
mov
inc
std
das
jmp
fs
xchg
pop
or
andb
aas
ret
out
cmc
outsl
in
pop
loope
xchg
sbb
stos
cltd
or
dec
jbe
add
jnp
nopl
imul
xor
dec
out
push
sahf
jg
insl
test
or
cmc
sti
add
lods
adc
cmp
pop
push
movsl
es
cli
hlt
fs
push
stc
xor
dec
in
outsl
popf
mov
jl
add
dec
test
jmp
cmp
imul
adc
insl
das
btr
addr16
ror
sgdtl
jo
sbb
sahf
out
push
orl
mov
cltd
sahf
cmp
movsb
dec
mov
sbbl
xchg
and
std
and
cmpsb
loopne
push
add
xor
lret
jo
push
dec
rol
or
mov
xor
scas
dec
sub
xor
mov
fcmovne
dec
mov
loop
fcoml
dec
jo
nop
loope
int
in
in
je
push
test
sub
and
xchg
mov
pop
clc
test
fwait
pop
enter
repnz
and
bound
jno
or
push
je
lcall
mov
push
add
fwait
imul
cmp
in
jmp
pushw
jb
jno
test
xchg
mov
gs
call
lret
mov
inc
das
rcrl
out
jmp
sbb
sti
inc
cmp
pop
mov
das
mov
mov
mov
scas
cmp
add
mov
or
jl,pn
sub
push
push
lea
cltd
addb
lret
inc
lret
push
leave
xor
lahf
insb
push
sbb
jmp
sbb
sbb
pop
xchg
adc
mov
lret
popa
add
push
jecxz
rclb
pop
sarb
pop
push
inc
add
dec
adc
aaa
fcomps
sub
lods
fnstsw
bound
xchg
mov
mov
pop
fimuls
dec
jnp
or
out
mov
shr
cmc
cltd
push
jecxz
stc
xor
xor
popa
jnp
rclb
sbb
cmp
inc
int
add
jg
lods
jge
mov
mov
bt
rorb
andb
int
outsb
mov
xor
sti
or
ret
ss
push
stos
lods
dec
idivb
enter
mov
out
jae
cmpsb
pop
mov
scas
int
iret
arpl
sub
fistpl
sbb
loope
fs
or
popf
dec
dec
mov
pop
xor
mov
xchg
shll
or
lret
loope
cltd
test
jbe
and
bound
push
jge
ljmp
push
mov
dec
mov
jge
push
mov
cmc
xchg
lret
inc
sub
pop
mov
in
cltd
frstor
fidivrs
sub
dec
dec
jge
gs
testb
stos
jb
cs
cmc
sub
orl
and
sbb
xor
test
mov
dec
pushf
xchg
mov
mov
cmpb
gs
ljmp
sub
jno
jbe
and
cmp
std
xor
es
pop
sub
data16
mov
push
aam
inc
sub
pop
and
cmpb
pop
ficoml
jnp
inc
pop
and
lret
leave
dec
fisubs
ret
sbb
and
mov
out
das
push
pop
or
mov
push
jg
pop
mov
and
adc
cmp
shl
jo
pop
jge
xor
lahf
addr16
xchg
fwait
add
push
push
das
leave
or
push
or
and
pop
cmc
cmp
flds
fcomps
lret
mov
or
adc
fimull
jmp
imul
inc
mov
sbb
inc
imul
adcl
jmp
orb
scas
incb
push
or
imul
xor
fsubs
xchg
inc
les
arpl
xchg
jle
jnp
sub
aam
out
xchg
lods
rorb
push
cmpsb
and
in
stos
in
add
pop
scas
sub
mov
adc
out
xor
rsm
mov
imul
scas
mov
loopne
shll
and
cs
rclb
sub
fucomp
and
out
cmc
aam
pop
cltd
inc
push
in
push
push
decb
push
leave
cmp
push
je
stos
icebp
test
and
andb
xchg
outsl
jnp
xor
xchg
lret
jns
xchg
xor
xchg
jmp
insb
std
xchg
lods
int3
xor
mov
or
mov
jae
arpl
dec
bound
inc
add
rcrl
xchg
mov
adc
mov
dec
inc
hlt
and
jl
push
les
std
mov
int3
test
xchg
cmp
imul
cwtl
ret
aad
push
push
sahf
sbb
push
ljmp
add
cmp
lock
push
pushw
add
jle
stos
cltd
add
call
in
lods
cli
sbbl
mov
sub
or
inc
lret
lahf
dec
dec
data16
mov
stc
ret
jmp
jmp
cmp
push
or
imul
inc
add
in
xchg
mov
cli
je
fldl
out
enter
jmp
and
mov
and
sub
inc
xchg
and
int3
and
mov
outsb
sbbb
xor
fucomi
lret
sub
cmp
and
hlt
lret
fcmovb
fisttpl
ds
in
mov
pop
add
dec
cli
xchg
ja
adcl
xchg
ja
pop
sub
dec
xchg
dec
sub
jmp
dec
sub
sub
push
or
call
cmp
std
test
shl
call
pop
repz
inc
mov
iret
shrb
shl
fcmovu
jnp
sub
push
das
mov
addr16
ja
lods
or
out
cmpsl
in
jp
mov
and
icebp
inc
cli
in
sub
aam
imul
ret
dec
inc
jle
outsb
dec
push
mov
xor
lock
lret
repnz
ds
jnp
bound
or
fildl
lea
sub
shlb
dec
jp
sub
xlat
pop
adc
push
es
and
scas
add
pop
iret
outsl
jle
and
jmp
cltd
jle
imul
add
cmp
sub
sbb
pop
stos
in
xchg
fcompl
lahf
pusha
xor
mov
pop
pop
test
xchg
lods
lret
and
and
adcb
stos
push
sub
cmp
cmpsl
xchg
push
dec
push
outsb
push
repz
xchg
xor
sbb
bound
es
ja
xchg
arpl
lods
sub
inc
push
rcll
sbb
fadds
scas
mov
incl
or
test
cmp
test
movsb
xor
cmp
dec
jno
cmp
push
mov
xchg
out
xchg
das
mov
popa
popf
int3
and
ret
bound
xor
mov
in
mov
daa
sub
bound
rolb
add
jecxz
or
in
jo
cwtl
ds
rcrl
bound
push
push
xchg
or
cmp
add
mov
fs
ret
cmpsb
dec
cmp
pop
data16
je
add
xlat
jl
mov
inc
adc
mov
jo
inc
jns
addr16
je
hlt
fdivs
out
lods
mov
mov
test
shll
pop
test
loop
cmp
fiaddl
sbb
movsb
jmp
adc
sub
mov
shl
in
out
mov
sbb
daa
lods
add
push
pop
inc
rolb
gs
clc
sub
push
push
or
in
inc
inc
incl
imul
rorb
loope
dec
jp
mov
nop
mov
pop
lcall
les
mov
fsubr
mov
ficoml
popf
stc
leave
pop
push
in
sarb
adc
fs
push
push
inc
loope
lock
jae
xor
into
jge
pop
data16
dec
sub
and
or
sub
cmp
xor
filds
push
daa
xlat
or
dec
jno
dec
test
jb
popa
push
push
sbb
push
lret
aad
rorl
inc
shrb
data16
jae
test
jl
add
cmp
or
push
jge
test
push
les
shr
sub
xor
mov
mov
sub
insb
push
sub
inc
mov
push
sahf
add
add
push
pop
sbb
mov
push
or
in
adc
fmull
cmp
shrb
je
xchg
xchg
sahf
cmp
mov
xor
mov
inc
data16
sub
rcrl
aad
nop
mov
or
xor
clc
les
fcompl
xchg
lahf
repz
jg
stos
ljmp
pusha
adc
cmp
xor
mov
fstpl
sub
and
in
push
add
stos
out
pop
jmp
sbb
ja
add
adc
movsb
or
dec
xor
xchg
jl
xchg
sbb
push
cmpsl
push
cmp
adc
mov
nop
aad
cmpsl
push
mov
inc
popf
lods
cmpsl
xchg
or
fs
aam
mov
andl
mov
fdivr
pop
test
andl
movsl
mov
push
loope
jl
cmp
mov
fdivl
inc
mov
mov
cmp
shlb
jmp
movsb
pushf
fldenv
sbb
rorl
jecxz
adc
pop
fisubrs
lods
loopne
je
dec
movsb
mov
ljmp
sub
jl
pop
xor
aaa
and
stc
jae
in
jbe
aaa
jmp
fbld
icebp
hlt
fdivrs
shlb
pop
mov
ss
mov
popa
fistps
or
outsb
adc
ljmp
out
xchg
pop
lahf
lock
test
sahf
xchg
sbb
push
xchg
sbb
sbb
dec
clc
dec
add
sub
xor
cltd
ret
repnz
cmp
sarl
mov
xchg
cmp
jmp
xchg
pushf
shr
sahf
das
pusha
rorl
repnz
in
sbb
lock
jp
fldt
cmp
xchg
sbb
xchg
aas
pop
push
fists
dec
lcall
shll
cmp
mov
pop
dec
repz
pop
dec
mov
rcrb
or
out
int
jp
out
inc
mov
or
fs
cmpsl
jae
out
ffreep
mov
hlt
or
cmp
cltd
sbb
jo
mov
lret
fisttpll
stos
mov
xchg
xor
in
out
sub
push
jge
xor
sbb
out
out
mov
mov
cmp
aas
pop
cmpsl
jbe
jno
cmp
add
lock
ret
xor
adc
daa
dec
pop
sbb
mov
into
xlat
push
jg
xor
push
fs
insb
add
clc
pop
and
xchg
mov
repnz
mov
or
xchg
pop
xchg
test
pop
adc
aam
add
mov
movsb
cmp
dec
mov
out
movsl
xchg
out
imul
jp
insb
jecxz
adc
cmp
fwait
imul
sbb
jg
cmp
mov
mov
das
mov
pop
mov
fwait
jns
add
push
or
fstp
out
mov
pop
cs
jg
add
out
push
or
add
xchg
aaa
jge
gs
adc
fbld
mov
xor
jl
in
dec
push
loope
add
cmp
xchg
ficoml
and
and
xchg
sti
add
imul
lret
dec
lret
and
jl
push
bound
xchg
imul
and
and
out
push
add
testl
mov
lret
pushf
mov
int
fisttpl
and
stos
mov
pop
sbb
dec
fldenv
loope
in
inc
and
cmpsb
pop
push
cmp
in
imul
xor
push
xchg
sbb
jg
sbb
pushl
lahf
rol
pop
push
fs
repz
mov
dec
inc
and
sub
out
add
mov
imul
mov
rolb
addr16
bound
xchg
or
ljmp
sbb
add
rorb
jns
mov
mov
rcll
xor
cmc
xchg
jne
pop
pop
jno
test
inc
imul
ljmp
xchg
enter
push
cli
aaa
add
sti
push
nop
and
inc
je
add
jg
pop
mov
xor
jo
push
mov
stc
imul
mov
cmpsb
dec
in
pop
data16
dec
push
mov
mov
inc
ror
cmp
xchg
adc
mov
in
ljmp
dec
movsb
cmp
shrb
mov
rcll
adc
jp
cmp
adc
addr16
push
out
les
fwait
inc
jl
call
xlat
adc
pop
int3
imul
add
pushf
inc
mov
ljmp
aaa
outsl
subl
push
int
addr16
arpl
js
dec
xchg
xlat
nop
mov
rorl
jle
repz
mov
in
insb
ja
ffree
inc
xlat
or
imul
mov
fnstsw
cmc
pop
lret
xor
fdivrs
int
push
insb
mov
sub
sub
xchg
bswap
dec
cmpb
add
int3
push
dec
sti
insb
and
xchg
push
mov
or
xchg
inc
jb
jecxz
jle
jnp
jge
mov
add
jno
iret
mov
orb
out
lds
cli
dec
lds
repz
dec
jp
sar
push
add
in
imul
jl
in
xchg
sbb
mov
xchg
sbb
pushf
arpl
or
fdivr
pop
adc
cli
add
xchg
call
or
dec
push
inc
rorl
test
jno
pop
movsb
mov
lcall
hlt
fcompl
ljmp
cmpsl
adc
es
dec
ret
cmpsb
cmp
cmpsl
dec
vcvtss2si
je
and
in
outsl
daa
adc
or
or
jmp
fs
insb
or
inc
in
xor
scas
out
sti
pop
xchg
add
sub
jns
jp
mov
ljmp
fwait
adc
xchg
loopne
xchg
pusha
nop
lock
and
iret
aad
jo
dec
mov
pop
fcomip
cld
movsb
outsb
out
testl
jg
ds
mov
jns
popf
xchg
test
jae
fsubrl
shrb
stos
dec
fs
and
jle
das
pop
dec
add
jns
sbb
adc
fmul
stos
cmp
pop
das
push
xlat
sbb
repz
adc
js
xchg
add
jecxz
sar
lock
jmp
sub
dec
mov
lret
les
or
mov
or
ret
pushf
insl
sti
inc
cltd
sarl
fcomps
in
outsb
and
mov
push
iret
std
jnp
push
shl
push
cmc
lds
cltd
cmp
inc
dec
jge
cwtl
enter
mov
orb
xchg
xchg
imul
cmp
rolb
mov
xor
push
sub
rol
rorl
test
jbe
and
iret
dec
jb
jo
arpl
adcb
sub
cwtl
sbb
mov
pusha
jnp
mov
shll
lahf
in
mov
and
shlb
pop
add
sarb
xor
out
insb
mov
stc
and
in
sub
daa
in
popf
or
pop
mov
stos
in
icebp
mov
xchg
push
fldenv
ja
mov
cmp
xor
mov
and
fimull
mov
in
cli
into
cli
and
push
addb
es
fisttps
jb
mov
in
aas
ret
cmpsl
cmp
adc
or
inc
mov
leave
and
dec
push
mov
aaa
adc
sbb
sbb
cmp
js
pop
add
imul
sbb
add
arpl
fsubl
xchg
pop
and
cmpsb
sbb
sbb
mov
rcl
mov
lods
pop
in
add
mov
pop
pop
cs
sbb
pushf
sub
sbb
clc
test
std
pop
mov
in
sbbl
mov
stc
adc
push
jge
push
push
inc
push
ret
mov
dec
jbe
or
in
or
or
je
mov
cmp
loop
sub
dec
push
dec
cmp
pop
add
orl
clc
in
xchg
sbb
jo
rcr
lret
xchg
xor
repz
cmpb
push
clc
test
jo
test
lods
cmp
jb
xchg
mov
or
jle
add
test
jns
call
mov
mov
adc
mov
sub
shr
shll
push
test
jle
sbbl
dec
adcb
mov
dec
fsubrs
jp
testb
adc
out
loopne
xchg
jmp
loop
clc
stos
aas
ret
jg
mov
xchg
fnsave
inc
or
mov
mov
dec
fwait
jmp
scas
mov
adc
dec
sub
stc
mov
pop
push
mov
daa
inc
in
out
ljmp
outsl
mov
mov
imul
and
fimuls
cmp
clc
inc
xchg
jg
jb
lock
jle
xor
and
cmp
test
and
adc
push
xchg
xchg
jmp
lret
mov
jno
enter
sahf
lahf
scas
shlb
add
mov
push
adc
push
push
sbb
sub
cmp
fs
lcall
lock
dec
mov
je
xor
aaa
addr16
adc
dec
pop
sub
adc
pop
mov
imul
push
push
mov
enter
add
jae
xchg
iret
fistpll
mov
mov
je
repnz
mov
ret
pop
cmc
loope
bound
mov
cli
cli
adc
int3
pop
dec
fbstp
pop
sarl
jge
add
jbe
inc
hlt
jecxz
mov
lahf
push
sbb
repnz
mov
rolb
ja
mov
imul
aaa
dec
xor
cmp
icebp
xor
sub
or
ds
mov
sbb
rclb
sbb
pop
aas
mov
jmp
nop
cmp
push
jecxz
jle
movsb
std
push
mov
mov
loope
or
test
sbbb
cmpsl
adc
test
scas
inc
jnp
or
addr16
sbb
lret
inc
adc
rcrb
push
pop
sbb
cmp
adc
lock
pop
movsl
xchg
loop
cli
repz
movsb
jmp
pop
and
dec
mov
movsl
scas
lock
jmp
ljmp
pop
cmpsl
orl
xchg
scas
pop
ret
xchg
sub
in
lahf
pop
aad
push
orl
mov
fisttpll
fldl
mov
xor
daa
pop
ret
mov
mov
push
rol
xor
jae
repz
jecxz
ret
stos
mov
xchg
push
fwait
jnp
sbb
insl
outsb
cmp
outsl
mov
bnd
movsl
jle
jo
xor
ljmp
es
pop
scas
inc
into
shrb
and
ss
jge
cltd
pop
dec
rorl
pop
addr16
scas
pop
pop
dec
test
inc
mov
adc
jns
ljmp
jmp
pop
test
pop
push
cld
notl
jns
ss
std
scas
rorl
pusha
mov
mov
xor
or
cmpb
jl
jecxz
loopne
hlt
ja
insb
mov
mov
add
mov
xor
pop
imul
sti
push
or
repz
inc
mov
inc
jl
jns
lods
mov
roll
ja
out
arpl
pop
inc
nop
dec
add
pop
add
mov
popw
inc
jge
and
or
fcomi
ljmp
xchg
push
loop
pop
sbb
jo
adc
add
aaa
mov
push
fisubl
and
pop
aad
scas
addb
xchg
int3
jb
dec
sub
or
or
mov
iret
fsubrl
je
or
lcall
ds
or
lods
aaa
lods
or
jns
sub
pushf
jno
xchg
mov
and
out
arpl
xchg
sub
push
std
push
xchg
xchg
rclb
pop
mov
enter
cmc
es
aad
cmp
xlat
mov
adc
pop
dec
pop
adc
in
jle
cmp
iret
dec
adc
lret
out
xchg
filds
dec
addr16
out
add
mov
dec
sti
jno
insl
push
movsb
iret
push
sti
mov
and
sub
aad
loopne
jb
push
push
mov
push
sbb
xor
lahf
jmp
xor
cmp
rclb
jns
negb
mov
ftst
and
or
int3
pop
mov
fisttpll
sub
mov
popa
test
add
sbb
mov
pop
pop
push
les
mov
nop
mov
and
fs
notb
repz
and
clc
stos
lret
movsl
cld
mov
fsubrs
aas
mov
dec
imul
dec
push
jmp
imul
sub
loope
mov
sarl
aas
bound
movl
outsl
and
add
jmp
inc
lahf
test
push
pop
sbb
cli
mov
push
push
imul
cmpsl
inc
aas
pop
cmc
jae
lds
ja
mov
lea
loopne
mov
xchg
test
lret
shr
mov
or
aas
pop
xor
rcrl
aam
insl
fdivrl
mov
push
adc
cmpsl
or
icebp
fwait
scas
iret
sub
xor
call
aaa
lahf
call
pop
mov
mov
sub
mov
repnz
inc
pusha
iret
clc
bound
sub
test
mov
out
inc
jo
pop
arpl
fadd
loopne
xor
dec
pushf
popf
jmp
ljmp
or
jl
pusha
js
movsb
in
lds
repz
insl
add
sub
ja
inc
movsb
arpl
daa
pop
inc
inc
ret
cmpl
cmp
int
mov
pushf
and
or
mov
adc
add
push
sarb
scas
scas
xor
cwtl
testl
icebp
cli
sub
lea
fsubr
in
xor
cmc
cmp
adc
aas
fildll
sub
mov
cltd
pushl
repz
das
stc
jb
and
aad
in
cmpsb
or
ret
xchg
push
popa
mov
mov
shrb
push
mov
nop
imul
pop
rcrb
and
push
loop
aas
push
xor
push
push
xor
outsb
lcall
adc
movl
sub
sbb
arpl
sub
jp
dec
fadds
dec
dec
ss
cmpl
aaa
mov
dec
dec
jle
sub
dec
repz
mov
adc
inc
fwait
jnp
hlt
inc
jg
sub
imul
add
outsb
daa
xor
movsl
jg
and
repz
ret
ds
mov
lock
addr16
xchg
popf
pushf
push
and
imul
insb
scas
cmc
or
or
imul
adc
cmp
pusha
cmp
repz
andl
push
and
mov
fnstenv
pop
addr16
pop
xlat
jnp
call
ficompl
fisubl
or
xchg
dec
jge
mov
out
fcmovnu
fwait
xor
xor
gs
clc
jo
pop
fnsave
push
sub
inc
decl
dec
sbb
sbb
mov
sarl
mov
mov
sti
add
in
sahf
ds
and
xchg
xchg
cmp
lock
xor
subl
imul
push
into
sub
add
std
push
dec
cmpsb
xor
xor
xor
stc
movsb
mov
outsl
adc
pop
or
pop
sahf
jae
lret
xchg
mov
inc
push
push
std
pop
pop
and
insb
daa
jne
lock
ret
pop
adc
cmp
popl
adc
enter
jge
lret
inc
jmp
ficomps
lcall
mov
dec
xor
jae
cmp
push
movl
dec
pop
lahf
pop
mov
scas
or
bound
lock
jns
or
sti
outsl
xchg
mov
sarb
and
adc
pop
loopne
int3
cmp
icebp
mov
xor
add
pop
hlt
mov
out
mov
sub
push
and
mov
leave
sbb
mov
mov
shlb
dec
enter
out
mov
cltd
mov
push
cmpl
xchg
xchg
jmp
jo
dec
pop
stos
stos
in
lahf
das
arpl
ja
xchg
add
xchg
mov
adc
xor
roll
in
mov
or
dec
add
mov
stos
cltd
add
fisubl
inc
jnp
fcomps
and
fists
dec
lds
cwtl
int3
jmp
push
movsb
pop
sarb
nop
xchg
and
std
jno
push
inc
mov
xlat
push
sbb
inc
das
add
sbb
out
ret
sub
mov
push
lret
imul
sbb
call
jg
fisubrs
insb
je
int
cmp
scas
mov
xchg
push
pop
je
add
xchg
add
adc
aad
pop
mov
lock
dec
and
pop
sbb
mov
mov
push
cs
push
cmp
insl
pop
pop
push
xchg
imul
xchg
iret
out
mov
push
cmc
add
sub
hlt
dec
sub
and
les
int3
inc
aam
in
fucom
dec
hlt
cwtl
dec
inc
movsb
or
jnp
add
push
jp
dec
lods
sub
in
xor
push
and
inc
mov
std
sub
insb
adc
adc
das
scas
cmpsb
cmc
fldt
test
insb
fsincos
adcb
adc
cli
inc
je
jo
dec
pop
jno
cmp
push
pop
jmp
and
mov
push
lock
fcoml
and
add
in
xor
lcall
jbe
xchg
imul
out
inc
dec
sub
dec
scas
pop
push
mov
loop
lods
mov
jbe
sub
movsb
push
hlt
mov
pop
rcr
jo
push
sti
mulb
fdivrl
or
js
in
popa
fld
jle
cmpsb
imul
or
pop
mov
push
pop
pop
adc
pop
jo
subb
insl
das
jecxz
and
in
int3
ds
mov
lahf
xor
js
mov
sbb
xchg
aam
mov
pop
cmpsl
cmp
jno
and
push
aas
push
jp
dec
mov
add
jo
fistpl
fcmovnu
shll
out
movsb
xchg
add
lds
dec
ja
inc
stos
ret
and
fbld
pop
aam
adc
and
push
xchg
mov
sub
cmp
jbe
inc
into
rcl
cmp
sbb
jp
push
icebp
sbb
insl
mov
jle
jns
xchg
call
xchg
lock
add
les
xor
mov
out
inc
inc
in
mov
mov
mov
xor
pushf
xor
push
mov
daa
pop
add
pop
xor
leave
in
aas
leave
push
fildll
das
cli
push
test
mov
xchg
or
sbb
add
pop
adc
outsl
jp
out
ljmp
std
dec
dec
inc
sbb
jmp
xor
nop
pop
inc
into
and
xchg
outsl
lock
xchg
jnp
scas
push
lret
mov
jg
es
inc
xor
mov
push
fistpl
test
pop
pop
inc
loopne
mov
mov
sbb
mov
pusha
dec
push
dec
lock
mov
or
es
mov
mov
sti
int
sbb
inc
sbb
jbe
in
cmc
mov
sbb
in
shlb
add
mov
xor
popf
mov
clc
sub
inc
jb
popl
push
imul
int3
mov
scas
inc
insb
outsl
pop
sti
jo
shlb
inc
sahf
mov
inc
outsl
or
mov
adc
rol
push
aas
lret
sub
pusha
pushf
mov
leave
mov
arpl
outsl
adc
dec
fwait
les
jb
inc
pop
scas
pop
pop
xchg
cli
pop
xchg
sarb
jmp
jmp
mov
loopne
jle
ret
fisubrs
stos
or
mov
test
loope
out
mov
shll
mov
xchg
dec
sub
rorb
cmpsb
aad
mov
push
mov
fiaddl
xlat
or
scas
cmc
or
incl
pop
stos
xchg
inc
shll
std
outsb
sub
cld
adc
js
int3
fbld
cmp
rcrb
xor
scas
out
fcompl
cld
icebp
stos
data16
fcoms
xchg
cmp
sub
cld
cmpsl
repz
test
out
out
stos
nop
cwtl
xchg
psrlw
lds
leave
and
subb
popf
dec
in
inc
or
mov
or
cmp
adc
adc
xchg
orl
inc
aas
out
shll
add
sti
lahf
bound
test
mov
jnp
push
mov
inc
cmc
sbb
subl
movsb
mov
add
std
xlat
bound
cli
xor
and
in
fs
filds
xor
fst
cltd
cmpl
xlat
dec
cwtl
cmp
mov
lret
pop
and
pop
xchg
cld
add
cmp
stc
sbb
jp
imul
mov
fimuls
sbb
dec
cld
push
push
fidivl
subb
mov
aaa
push
pop
iret
sar
sub
xchg
test
sub
push
jmp
jns
adc
pop
inc
imul
pushf
or
xor
add
mov
and
dec
shl
add
shlb
outsl
enter
rolb
in
leave
decl
mov
inc
xchg
mov
sub
fnstcw
dec
int3
push
adc
or
pop
xchg
popa
xchg
mov
jl
imul
mov
idivl
add
push
push
push
mov
clc
and
jmp
add
cwtl
imul
add
cli
mov
imul
inc
inc
cwtl
add
loop
or
mov
cmpsl
cmpsl
inc
jne
push
pop
loope
jns
xlat
aam
stc
loope
dec
or
mov
and
xchg
aas
fs
ds
aaa
popf
daa
xchg
add
cmp
pop
push
ds
xor
sub
inc
out
xchg
pushf
fnstsw
filds
adc
dec
mov
cld
leave
push
sbb
lret
lea
icebp
mov
mov
into
aas
sarb
movsl
arpl
jbe
stc
ds
or
xchg
in
cmp
inc
test
lahf
int3
pop
mull
mov
mov
enter
and
outsb
or
jne
hlt
inc
sub
dec
pop
cs
ljmp
stos
dec
jae
sbb
dec
xchg
dec
stc
xlat
push
push
mov
gs
mov
iret
jae
loop
or
sbb
in
push
mov
xchg
and
movsb
jecxz
ja
stos
cmp
xor
xchg
jmp
add
jbe
pop
cmp
in
loopne
xor
loop
jbe
aas
jmp
shrb
lret
cltd
push
adc
bound
dec
or
jns
lahf
or
or
jnp
jnp
or
enter
sub
and
pop
sub
jns
cmc
fistpll
aad
insb
hlt
ficomps
pushf
xchg
in
adc
les
dec
fidivrl
clc
pop
ja
ljmp
mov
cmpsb
ja
jbe
xor
scas
sub
jns
movsb
mov
je
mov
xor
add
leave
enter
fldenv
insb
cli
stc
fs
xor
sbb
addb
daa
or
push
push
inc
pop
cmp
sahf
inc
mov
test
mov
test
in
push
cs
push
jno
cwtl
inc
pop
lock
lds
jo
or
push
sbb
mov
scas
xchg
add
scas
loope
fstps
pop
or
pushf
inc
mov
fisubrs
cli
js
lods
les
stos
push
dec
jbe
pop
sbb
ss
gs
jo
mov
mov
xor
lods
nop
pop
sbb
lret
pusha
pop
ja
push
je
jl
test
pop
lock
stc
decb
test
pusha
add
pop
add
mov
push
fstpt
cmp
pop
shlb
mov
arpl
cltd
fadd
cmpb
xchg
in
out
cmp
mov
lds
sahf
inc
and
enter
jno
sub
int3
sbb
jns
dec
xor
ret
popf
mov
jecxz
enter
adc
sub
subb
xor
dec
imul
in
sarb
add
rolb
xchg
jne
mov
stos
cmpsl
add
fcomi
mov
mov
mov
xor
ss
jno
push
xchg
cwtl
xor
pop
mov
popf
sarb
sbb
lret
pop
fcmovb
outsl
ja
pop
mov
ss
push
sahf
adc
test
push
adc
cmp
cmp
jnp
push
sahf
sub
xor
xor
and
fwait
jp
xor
scas
cmp
jecxz
xchg
mov
pusha
fdivrs
lret
aam
faddl
test
sbb
jle
sub
lods
pushf
inc
nop
int3
cmp
das
push
sbb
push
aaa
xchg
imul
or
or
lea
stos
imul
or
jae
push
mov
out
jmp
cwtl
sahf
lods
mov
sub
adc
pushf
or
cmp
dec
mov
sbb
call
jmp
push
xchg
daa
shlb
fs
fcmovu
es
inc
jl
and
mov
dec
pop
setg
inc
dec
sarb
mov
mov
push
loop
mov
mov
xor
lods
sub
fnstcw
dec
push
repz
daa
or
mov
rcll
les
ja
xchg
sub
mov
cs
sti
sbb
iret
lods
sti
pop
cmp
mov
ds
cltd
test
int
cmpsl
imulb
xchg
cld
sahf
out
dec
adc
hlt
push
outsb
dec
xchg
xor
mov
movsl
fs
or
mov
std
xor
sub
xor
repz
push
dec
sbb
clc
push
add
cs
jmp
pop
sahf
pop
pop
xor
dec
mov
mov
add
mov
xor
add
jnp
cltd
imul
or
addr16
aad
outsl
fldcw
mov
pop
sub
jne
in
jle
xorl
and
pop
jg
adc
leave
adc
test
xchg
sub
pop
mov
cmpl
fdivl
pop
outsb
pop
fcmovu
fisttpll
adc
xor
dec
sbb
cmp
mov
dec
jmp
cmp
mov
ja
cmp
inc
push
mov
imul
sub
adc
jl
or
leave
inc
pop
jnp
ss
add
xchg
aaa
popa
xchg
stos
divb
js
stos
pop
and
mov
xor
repnz
adc
mov
mov
aad
in
pop
mov
ret
popf
jb
in
mov
iret
or
jl
mov
and
pusha
or
mov
sub
pop
and
mov
lcall
xor
in
adc
clc
les
sub
add
dec
cmp
stos
ficoml
sub
call
push
push
std
push
pop
outsb
sbb
cmp
jbe
jle
shrl
jns
fmuls
fsts
mov
xchg
scas
es
rcrl
dec
pop
cltd
mov
and
dec
push
mov
mov
gs
sub
push
clc
jae
cwtl
hlt
inc
dec
dec
jge
pop
and
lret
pop
into
pop
loopne
xchg
xchg
adc
insb
inc
sub
inc
dec
out
dec
out
shl
or
and
and
xchg
movsl
in
xchg
push
outsl
xchg
push
arpl
push
arpl
mov
or
ret
ret
inc
test
aad
cwtl
aad
adc
and
dec
and
mov
jmp
lcall
cmp
push
stc
mov
das
in
sarb
jae
loop
into
xor
adc
fisubl
inc
add
mov
aaa
mov
mov
out
fdivrp
xchg
insl
xchg
mov
pop
andnps
jno
and
mov
sub
sub
mov
aad
mov
fs
xor
fadd
push
fcoml
ss
ja
in
ja
xchg
cmp
lods
stos
fsubrl
mov
in
mov
aas
mov
test
push
test
xor
test
out
out
dec
out
xorl
orl
xchg
rclb
scas
sbb
ss
scas
ss
jnp
jbe
imul
add
pop
add
fsubp
mov
out
sbb
ljmp
aas
or
inc
cmp
sub
pop
scas
pop
mov
pop
mov
push
mov
cwtl
mov
cwtl
jns
lret
dec
stos
orb
dec
outsl
sub
sub
sub
push
inc
in
outsb
in
int
bswap
outsb
cmp
outsb
pop
imulb
adcb
std
sub
std
sub
and
inc
outsb
ja
outsb
push
arpl
inc
popl
inc
pop
es
pop
xor
pop
xor
ja
add
push
add
mov
cmp
sti
sarl
sti
ret
ret
ret
push
mov
push
mov
imul
in
stc
sub
xchg
in
jo
jo
in
addl
sub
sub
nop
in
jo
clc
jo
in
jnp
in
jo
in
jo
cmc
jo
in
js
in
jo
in
jo
bnd
push
jne
push
push
push
push
push
sbbl
into
pop
or
test
jmp
fnstcw
std
les
jge
jbe
int
fstpt
xchg
sub
andb
add
jae
push
cmpsb
add
mov
mov
roll
jns
int
adc
or
adc
cwtl
sub
xchg
lret
pop
arpl
xchg
pusha
xchg
push
test
js
pop
scas
in
movsb
dec
adc
sub
add
add
add
inc
mov
adc
dec
mov
adc
add
add
dec
mov
adc
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
