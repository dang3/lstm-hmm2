push
call
ret
ret
or
and
shrl
add
and
subb
fidivrs
xor
das
or
pusha
cmp
stc
push
or
and
mov
xchg
cmp
adc
popf
push
subl
add
mov
sbbl
sbb
out
mov
into
pop
fcomps
stos
xor
loope
sbbb
mov
movsb
jns
in
push
hlt
popf
mov
int
inc
jne,pt
jbe
mov
iret
cmp
dec
xor
jae
mov
ss
adc
fs
shrb
inc
dec
sub
cs
or
ljmp
add
cmpsb
pop
data16
fmull
stos
jbe
pmulhuw
jg
sbb
or
gs
sahf
popa
pusha
dec
movsb
add
and
mov
jno
cmp
loopne
sbb
cmp
cli
mov
je
dec
inc
dec
jl
jecxz
or
mov
int
insb
adc
sbb
sbbl
cltd
popa
js
mov
and
xor
xor
mov
sahf
outsl
mov
or
stos
test
fwait
and
or
sub
filds
push
inc
add
cli
push
dec
adc
repnz
loop
sub
inc
dec
xlat
inc
mov
iret
mov
pop
mov
jle
jp
pusha
dec
add
cmp
xor
cs
mov
mov
pop
jae
cmp
xchg
and
insb
stos
inc
pusha
pop
dec
fld
pop
cltd
mov
or
insb
repnz
mov
push
icebp
aam
lcall
call
ja
inc
push
push
adc
scas
ficoms
imul
out
xchg
scas
push
xor
movsl
fcoml
in
es
lret
jmp
mov
lds
mov
hlt
icebp
mov
mov
mov
cmp
in
and
cli
repz
mov
orb
xchg
jge
ja
aad
sub
fwait
shrb
stos
loop
cmp
mov
sub
xchg
aam
xor
imulb
outsl
jle
loope
mov
inc
outsb
push
fistl
data16
jns
pop
popa
movsb
popf
jecxz
dec
mov
mov
dec
lods
push
mov
or
pop
movsb
cli
add
inc
out
inc
xchg
es
dec
loope
addr16
jge
adc
pop
ss
int
add
rcll
in
imul
out
mov
sub
pop
stos
fmull
nop
in
xchg
lods
leave
cmp
and
jb
and
pop
cmp
push
xor
sub
push
repz
xlat
add
insl
lds
push
icebp
jge
jb
xchg
mov
xchg
sar
bound
push
roll
mov
outsb
jge
xchg
mull
leave
sbb
ljmp
cltd
lret
xor
mov
or
sub
insb
mov
pop
xchg
adc
or
cmp
xlat
daa
cmpsb
adc
or
sub
sbb
cmpl
scas
bound
or
fmull
jp
sbb
shlb
jl
scas
into
daa
and
mov
cltd
push
mov
test
idivl
adc
sub
subl
pushf
cltd
mov
push
test
loopne
dec
adc
shl
stos
mov
ds
cwtl
int3
leave
in
scas
inc
mov
dec
into
aad
inc
ja
pop
mov
xchg
loope
push
adc
fimull
add
mov
sahf
push
mov
nop
pop
dec
xchg
sahf
inc
aaa
xor
mov
jbe
cmp
sub
int3
xor
subl
or
xchg
adc
cwtl
fsubr
add
adc
jo
sbb
xchg
dec
lcall
lods
std
ficoms
add
sub
fldl
orb
mov
xor
sbb
jns
outsb
dec
mov
inc
in
xchg
aam
rcl
xor
jmp
inc
loope
call
jecxz
fldt
adc
sub
notl
dec
sbb
aam
mov
es
mov
out
andl
sbb
outsl
add
mov
pop
loop
bound
dec
fwait
jne
outsl
mov
pop
dec
push
inc
outsl
and
pushw
or
pop
mov
mov
pop
sahf
das
push
sbb
mov
push
adc
insl
jge
in
xchg
cmp
xor
out
fisubs
cmc
fstpt
loope
arpl
xor
jns
cmp
cmp
pop
push
pop
cmp
sti
jecxz
ds
sar
xchg
fisubs
push
xor
subl
lret
or
inc
adc
sbb
sbb
shl
outsb
push
stc
push
or
sahf
cmp
add
jb
pop
sub
outsb
and
scas
cmc
icebp
mov
jnp
jge
jle
jbe
adc
loop
mov
out
pusha
xor
adc
cmc
outsl
mov
adc
notb
add
xchg
adc
cmpsb
adc
rcll
rcrl
dec
sbbl
jp
mov
mov
xorb
syscall
pop
hlt
and
call
mov
test
cmp
xor
mov
pop
ja
mov
fisubrs
dec
sbb
push
and
cmpsb
push
and
pop
popa
mov
mov
out
or
jb
int
inc
add
nop
mov
add
ja
fisubs
ret
push
mov
inc
adc
fs
cltd
pop
es
ror
test
cmp
cwtl
sbb
lahf
sbb
jg
movl
and
mov
bound
adc
je
movsb
mov
inc
push
push
notb
mov
sti
mov
mov
fucomi
mov
pop
lods
dec
jge
xor
xchg
stos
loop
or
fsts
ret
mov
dec
addl
sub
js
pop
mov
dec
iret
out
mov
and
xchg
xchg
mov
sub
mov
inc
les
or
test
dec
lods
sbb
ds
sub
repnz
jae
mov
cmpsb
pop
mov
ja,pn
xor
mov
mov
lds
sbb
pop
push
add
into
data16
mov
outsl
pop
clc
adc
test
xchg
roll
cmpb
loope
fadds
fistpl
dec
push
mov
mov
xchg
cmp
xor
repz
sub
sbb
sbb
sub
int3
mov
mov
pop
pop
mov
das
inc
out
cmp
adc
push
pop
decl
push
decl
jns
rcrl
sbbl
fwait
xchg
lds
int3
orl
icebp
inc
aaa
push
pop
mov
int
xor
lret
jg
push
in
lahf
imul
das
push
mov
inc
xchg
xor
xor
sub
fwait
jo
into
lret
daa
mov
push
movsb
lods
cmp
mov
sbb
pop
insb
inc
jp
jp
mov
enter
inc
sti
mov
les
push
or
add
arpl
inc
inc
push
mov
mov
jbe
mov
sbb
outsb
ret
cmp
sti
loop
inc
sub
inc
mov
cld
inc
push
les
xchg
sbb
mov
cmp
aaa
cmp
insl
or
push
jne
loop
add
cs
movsl
pop
loop
test
test
popa
xchg
push
sbb
mov
inc
sub
jecxz
sbb
inc
lret
cmpsb
mov
jb
test
inc
sbb
je
std
mov
pop
out
insl
addr16
sbb
mov
nop
inc
sbb
adc
add
dec
cmp
pop
cmpsb
insl
nop
pop
pop
fidivs
sbb
mov
sbb
icebp
pushf
test
xchg
and
pop
mov
mov
sbb
f2xm1
xchg
xchg
adc
jns
ljmp
notb
push
test
xchg
idiv
jle
sub
cmp
imul
push
mov
mov
mov
push
and
andl
push
and
sarb
xchg
sub
and
in
insb
push
inc
aaa
jae
cli
fmuls
insl
adc
inc
int
int
cmpsb
adcb
and
inc
push
cmc
movsl
adc
inc
notl
test
jge
lret
jnp
push
sub
push
xchg
movsb
ficompl
stc
push
iret
fnstsw
mov
jae
pop
push
xlat
and
test
add
imul
fwait
ljmp
pop
bound
sbb
inc
mov
negb
push
pop
sti
push
mov
mov
scas
sbb
inc
mov
dec
mov
xchg
or
mov
mov
sub
pop
push
filds
push
loop
iret
iret
mov
leave
ret
jge
cmpsb
mov
mov
xor
or
shrb
xchg
inc
inc
arpl
mov
jg
or
sbb
push
leave
int3
cmpsb
push
mov
icebp
cmpsl
outsl
cmp
sbb
mov
aaa
add
mov
push
inc
add
test
xchg
jp
pop
imul
test
push
int
les
inc
fmul
pop
cmpsb
jae
dec
adc
pop
jo
test
xchg
fcmovnbe
icebp
push
pop
pop
out
cmp
popl
and
fs
std
add
and
hlt
aam
aas
cli
cmpsb
add
pop
mov
xlat
rcrb
jo
dec
sbb
movsb
mov
push
jp
adc
ljmp
lods
xchg
mov
or
scas
mov
bound
push
test
js
lods
push
jle
loope
xor
mov
mov
call
iret
es
push
push
push
lret
pop
push
or
std
daa
outsb
rorl
push
or
data16
lea
fwait
mov
cmpsl
push
sbb
data16
cmp
nop
in
push
addr16
add
cmp
mov
or
xor
xlat
rcll
mov
adc
div
pop
sbb
xchg
mov
push
negl
mov
fistpl
push
mov
daa
xchg
out
bound
cmp
imul
mov
jo
bound
add
fs
fidivrl
cmpsl
int
mov
sbb
fldcw
aam
mov
repz
inc
xor
mov
sbb
test
dec
mov
dec
mov
addr16
shr
push
lods
pop
mov
les
mov
and
stos
pushf
jno
add
mov
mov
lret
mov
adc
rclb
loope
xchg
and
mov
xchg
pop
jg
test
mov
dec
idivb
and
pop
fildll
imul
in
push
or
in
xor
mov
xchg
mov
fisubl
jae
mov
movsl
jmp
mov
push
js
popa
or
lahf
fxch
and
in
clc
mov
push
jge
out
add
xor
jno
mov
das
insb
fnstenv
sarb
mov
xor
pop
int
imul
xlat
loope
push
xchg
fists
repz
aam
repnz
adc
bnd
rorl
sbb
jae
arpl
sub
xor
xchg
mov
mov
idiv
sbb
rolb
cmpsb
xor
stos
dec
dec
push
shrl
aam
push
adc
jp
cs
lahf
inc
mov
adc
lds
and
in
xchg
subw
mov
insl
imul
jmp
jecxz
divl
cmpsl
mov
int3
popf
repz
int
je
subb
mov
pop
sub
inc
scas
sbb
sbb
enter
les
sbb
in
sti
add
test
cld
xor
dec
fmull
call
mov
inc
xchg
adc
mov
or
xchg
dec
sbb
fldenv
or
mov
mov
data16
push
cs
das
mov
shlb
pushl
pushf
jle
jns
xchg
or
jne
subl
inc
xor
xor
mov
and
add
nop
add
pusha
addb
inc
les
icebp
sub
mov
inc
idivl
add
jb
fstl
and
pushf
adc
mov
mov
push
push
add
xchg
and
xchg
mov
icebp
dec
jmp
pop
jmp
push
jmp
stos
mov
subb
out
ja
inc
push
xor
gs
aas
add
mov
xor
dec
cmp
adc
jbe
cwtl
push
cmp
inc
mov
or
cwtl
loope
adc
gs
aaa
sub
fimuls
sub
mov
lret
lea
jb
jmp
test
push
int3
mov
scas
adc
xchg
jp
into
sub
call
stos
add
int
jnp
push
sub
test
sbb
jmp
movsl
aad
bound
and
and
fmuls
xor
lcall
nop
jecxz
push
nop
pop
cmp
add
push
push
dec
pop
sub
pushl
push
daa
pop
dec
mov
push
inc
cmp
and
dec
pop
aaa
inc
adc
mov
repz
pop
jo
and
sarb
sbb
mov
adc
in
test
popa
movsb
and
pop
mov
mov
mov
and
ljmp
add
out
test
mov
in
rcr
sub
loop
adc
xor
pusha
mov
pop
mov
rorl
push
inc
push
mov
xor
testb
iret
pop
ds
dec
stos
outsb
ret
xor
popf
sub
iret
push
sub
push
cmp
xchg
lret
je
cmpl
loop
lea
sub
je
cmpl
adcb
cltd
jnp
daa
scas
lea
hlt
jl
push
pop
fwait
lret
mov
lret
iret
dec
test
jg
repnz
leave
add
xchg
jae
jl
mov
inc
push
nop
scas
push
dec
dec
out
into
int
movb
adc
outsb
mull
bound
test
mov
out
ja
xor
mov
lock
jmp
pcmpeqw
jge
enter
fs
loope
aam
cmp
fcomps
push
adc
ret
or
insb
jb
fidivl
shll
inc
out
or
inc
out
pop
out
dec
sub
mov
or
movsl
roll
jno
pop
dec
popa
and
mov
sub
rorl
sub
pushf
push
jmp
shl
add
out
inc
or
push
lock
xchg
push
int3
sbb
roll
cmp
popf
daa
cmpsl
jp
sbb
dec
insb
stc
mov
or
cld
xchg
std
ret
mov
pop
nop
mov
mov
add
sub
bound
in
cmpb
push
cmp
xchg
mov
repz
insb
rcrl
inc
call
and
xchg
arpl
in
inc
lds
repz
pop
jecxz
inc
or
dec
test
pop
add
imulb
jmp
aas
insb
or
cli
lret
mov
fldt
adc
pop
mov
sbb
std
jbe
fstps
pop
mov
mov
sarb
out
cwtl
mov
or
pop
sub
hlt
fnsave
outsl
nop
pop
call
movb
bound
in
lret
inc
add
push
adc
mov
xchg
dec
fldcw
lds
ror
mov
sahf
or
stos
dec
fwait
adc
out
daa
add
adc
mov
mov
andl
mov
add
mov
pusha
fdecstp
aad
gs
ljmp
push
cmp
cmpsl
mov
shll
outsb
rol
cs
push
dec
outsb
pop
testl
daa
sub
imul
sub
xor
aas
repnz
mov
inc
aaa
cmp
icebp
inc
aaa
or
popf
or
pop
add
inc
std
lcall
xchg
mov
inc
or
call
pop
jmp
pop
inc
lcall
lret
push
aam
test
mov
fcoml
inc
sbb
inc
int3
push
jp
and
mov
add
dec
push
sub
xchg
addr16
push
lcall
rolb
frstor
xor
into
inc
push
inc
mov
xor
aas
sbb
and
and
jne
aad
mov
sbb
jne
xor
fisubl
push
xlat
mov
or
and
xchg
adc
xchg
xor
icebp
push
and
mov
neg
stos
or
xchg
call
cmp
or
lods
push
mov
icebp
loope
jp
jnp
mov
pushf
out
testl
fisttpl
xchg
dec
fistps
ljmp
sti
lret
fcoml
mov
jae
add
scas
aas
repnz
cs
ja
lahf
xchg
sbbl
insb
cltd
mov
adc
test
sbb
inc
push
hlt
mov
and
fisttpll
jo
scas
enter
mov
and
pop
add
inc
out
ss
xor
push
mov
mov
std
insl
and
lods
addl
mov
xchg
fmull
sub
fiadds
xchg
mov
mov
add
adc
mov
cmp
rol
cmp
rdtsc
sub
inc
lcall
das
icebp
xor
cs
adc
iret
jne
shlb
test
mov
inc
inc
xchg
in
jae
js
out
jns
mov
dec
enter
jle
test
push
add
push
xor
adc
push
jle
int
mov
movsl
pop
jb
inc
sahf
mov
js
test
outsb
lods
jb
jnp
icebp
out
pop
xor
nop
rcrl
fdivrl
icebp
sbb
fnsave
fiaddl
ret
and
xchg
xlat
int
mov
mov
sbbb
and
loope
adc
jmp
lock
lahf
adc
sbb
pop
cmp
loope
or
cmpsl
fidivl
pop
das
ret
in
push
xor
in
inc
into
xchg
out
mov
cmp
scas
sub
xor
xchg
mov
push
inc
cmpsb
int
sti
ljmp
or
xor
mov
add
std
sbb
and
cmpsb
cmp
xchg
pop
or
cs
dec
add
pop
dec
insl
sahf
cmpsl
cmp
repz
mov
cs
roll
mov
sbb
out
sar
jb
mov
test
shll
push
lahf
xchg
push
add
fs
cli
inc
fnstcw
aaa
xlat
addr16
test
mov
mov
push
xchg
jno
lods
fwait
jno
push
jno
std
out
dec
and
pop
xor
jns
pop
inc
dec
stc
leave
imul
and
bound
or
inc
shrl
and
jge
aas
mov
aas
inc
sbb
int
pop
gs
cwtl
faddl
jno
lahf
sub
mov
ffree
mov
je
int
mov
mov
rcrb
inc
xchg
and
aam
into
dec
mov
jb
add
cmp
cli
jb
in
lret
mov
call
xchg
and
fnstenv
rep
or
dec
push
pop
jp
and
mov
aam
loope
adc
or
adc
push
or
dec
dec
loopne
or
repz
pop
pop
fdivrl
inc
and
testb
mov
cld
jecxz
push
jle
jge
icebp
aas
clc
xchg
push
fdivrl
ljmp
push
lahf
adc
mov
pop
jmp
les
xor
jmp
jmp
push
sub
mov
jae
mov
popf
in
test
xor
inc
cmp
jge
inc
aad
ja
adc
popf
or
push
adc
adc
mov
sub
pop
test
inc
mov
mov
into
fs
out
aas
mov
mov
or
adc
cwtl
push
pop
cmc
outsb
pop
or
mov
ss
jb
xchg
sbb
lret
sbb
ds
jne
mov
pop
xor
mov
test
add
test
adc
int3
push
push
sbb
jnp
sub
ljmp
dec
push
adc
enter
insb
cltd
push
stos
out
jecxz
or
cltd
pushf
cmp
xor
xchg
in
fs
and
xchg
sbb
jle
xor
mov
push
rcrb
orb
les
mov
sbb
cli
mov
mov
ret
dec
mov
xchg
push
sub
fcmove
ss
sub
lret
lret
or
jmp
sub
lcall
push
xchg
enter
pusha
stc
mov
pop
repnz
sub
pop
xchg
stos
test
jmp
push
adc
push
or
loope
enter
nop
js
roll
fidivrl
lea
nop
or
imul
fstps
sub
dec
das
inc
popa
scas
test
test
lcall
enter
mov
loope
loope
lahf
pusha
or
sbb
icebp
outsl
sbb
mov
xchg
cmp
and
xor
push
fadds
xor
add
dec
in
aam
jp
mov
jg
fidivrs
pop
or
or
mov
inc
cmc
insb
ror
lcall
arpl
mov
hlt
adc
pusha
fistpl
sti
lock
mov
jp
xor
cmp
sbb
push
jnp
aam
bound
jbe
aad
inc
test
ret
dec
jl
jle
stos
pusha
cmp
clc
inc
leave
jae
pop
or
call
add
sti
je
or
mov
rcrb
int
iret
arpl
inc
cmc
adc
iret
push
adc
adc
xchg
rcrb
xchg
sbb
pushf
push
in
inc
scas
push
mov
xchg
adc
add
xor
mov
adc
mov
and
dec
orb
fbld
jge
cmpsb
aam
inc
insb
or
cmpsb
add
int
and
pushf
cmp
das
adc
sub
sbb
mov
push
push
or
push
fcoml
jmp
jbe
stc
add
outsl
jbe
inc
movsb
loop
jle
inc
jne
test
out
insb
inc
and
xchg
cltd
adc
add
pop
mov
push
or
pop
adc
mov
adc
xchg
scas
ret
cltd
cmp
xor
aas
mov
std
enter
iret
inc
js
pop
loop
loopne
nop
sbb
into
xchg
push
sub
push
nop
shl
pushf
fcoml
mov
pop
xor
into
or
jg
fs
xchg
and
cmpl
jl
xor
xor
adc
rcr
fcomps
popa
fsubrs
subl
mov
or
fcos
mov
jne
xchg
and
test
and
mov
jecxz
popf
mov
fstl
das
fisttps
jg
fdivrs
cmpps
add
sysret
pop
lds
xchg
push
inc
fstpt
pop
mov
mov
sbb
dec
dec
add
ljmp
cmpl
adc
insl
incw
add
rcrl
push
fistl
mov
cli
ret
xlat
mov
shrb
cld
sub
loopne
roll
std
negb
add
fisttps
or
xchg
pop
cli
es
dec
inc
out
jb
pop
in
outsb
daa
cld
imul
sbb
adc
shll
and
fistpl
dec
ret
mov
lret
rclb
sbb
je
sbb
push
loope
out
pop
rcll
fsubrs
adc
or
cld
or
icebp
and
jle
and
jg
xchg
test
arpl
jl
pop
dec
and
js
shr
ret
inc
mov
xor
lret
cmpsb
gs
stos
sbb
jno
sub
mov
xchg
ja,pn
pop
cmpb
mov
loope
insb
pop
gs
jg
xchg
jne
mov
lret
imul
lock
cmovp
or
in
add
inc
cld
cmp
and
lea
andl
das
je
push
sbb
lea
cmc
sbb
mov
lods
aas
mov
test
jmp
push
movsb
sub
ja
gs
andb
sub
inc
cmpb
pop
cwtl
sbb
adc
inc
xchg
mov
lods
cmp
es
aas
cmp
add
jno
adc
dec
push
ret
aaa
stos
repz
sub
imul
sub
in
xor
add
cmpsb
adc
sbb
mov
and
pop
leave
test
sub
gs
enter
lea
imulb
sub
dec
aam
test
int3
rorb
aas
rcrl
or
test
movsl
pushf
js
das
outsl
in
push
adc
xchg
mov
xchg
pop
jno
mov
sbbl
arpl
outsb
lods
sub
push
add
inc
jp
sub
lcall
dec
mov
int
insb
divb
xchg
arpl
xchg
adc
push
xlat
xor
fabs
out
pop
push
mov
bound
cmpsl
pop
mov
movb
lret
arpl
je
xor
out
xlat
imul
bound
pop
int
sbb
fs
and
sub
cwtl
insl
dec
add
push
adc
cmc
popa
jne
sbb
clc
sbb
nop
cld
fistpl
inc
fcompl
jg
les
arpl
inc
mov
aaa
fs
sbb
inc
loopne
jg
cmp
jg
cmpsb
out
loop
and
or
xor
ficoml
outsl
push
jg
xchg
mov
mov
mov
inc
imul
fs
pop
dec
sub
xchg
cmc
cmp
mov
or
cmpsl
aaa
pop
adc
sbb
dec
adc
push
lret
std
cs
in
inc
pop
add
sbb
mov
jbe
imul
in
sub
repnz
sarb
repnz
pop
pop
shlb
adc
lcall
repz
mov
xchg
dec
dec
test
pop
std
dec
or
cmp
stos
in
aad
add
add
push
push
inc
xchg
lock
bound
loopne
popw
xor
insb
out
cmp
mov
and
push
mov
xchg
push
pop
in
ds
cmp
adc
sbb
push
pop
cltd
mov
cli
xchg
mov
push
dec
xchg
in
mov
ror
push
cli
push
aas
ficoml
scas
sarb
fdivrp
sub
mov
lds
and
lods
and
in
cmpsb
pop
push
pop
xor
pop
mov
gs
in
cmpl
ficoms
enter
pop
fnstcw
jle
in
hlt
daa
cmpsl
enter
add
out
movsl
adc
cmp
pop
mov
inc
pop
or
into
outsb
fstpl
push
fsts
pushf
gs
in
iret
mov
mov
loope
je
inc
lea
fbld
arpl
icebp
pop
jp
cwtl
jne
jns
fstpl
push
and
or
push
in
xchg
cmp
lock
pop
inc
add
inc
test
clc
jne
push
mov
hlt
dec
sub
rcrl
mov
adc
dec
push
test
inc
mov
cld
sub
je
mov
mov
add
cmc
aad
gs
fbstp
ds
fisubl
scas
xchg
xor
outsl
sub
pop
cli
stos
push
mov
jecxz
xor
xchg
add
sbb
std
cmpsl
jmp
addr16
push
pop
outsl
sub
arpl
int3
cmc
add
push
dec
pushf
lock
movsl
mov
ficoml
rorl
das
xchg
fimull
clc
lock
and
iret
or
outsl
stos
rcr
and
repnz
mov
in
and
jo
cmp
clc
mov
mov
pop
stc
subb
sbb
loope
scas
out
or
push
out
in
cltd
mov
clc
xor
mov
daa
lock
or
fnop
sbb
cmp
inc
pop
pop
lea
mov
stos
es
inc
jae
pop
aas
push
fidivrs
pop
rclb
lret
ja
fistps
pop
adc
jb
pop
mov
mov
jae,pn
nop
add
loopne
xchg
ss
pop
repnz
mov
in
sarl
add
mov
pop
clc
mov
push
repz
dec
dec
jge
push
mov
xchg
faddp
call
pop
lods
out
mov
inc
xchg
dec
dec
leave
cli
or
jb
jle
repz
cs
in
sub
cmp
inc
inc
push
in
mov
test
xor
jl
mov
xor
mov
fcomps
cmpsb
mov
sbb
jl
pop
mov
mov
das
repz
pop
mov
adc
xchg
arpl
aas
push
push
dec
popf
out
push
mov
mov
pop
inc
jae
xor
test
popa
sub
hlt
jbe
pop
mov
icebp
sub
cld
in
mov
mov
sub
insl
lea
xchg
inc
jge
addr16
rorl
sti
gs
push
inc
mov
pop
test
hlt
das
aas
lods
lahf
sub
inc
test
int3
je
sbb
roll
xor
add
pop
xorb
gs
mov
or
push
inc
outsb
cmpl
pop
xchg
stos
scas
scas
jbe
test
ja
icebp
push
popa
pop
push
xchg
ret
xchg
pop
and
cmpb
pop
mov
stos
adc
or
insl
bound
fst
and
and
loopne
lahf
iret
aam
lahf
lods
lret
roll
sti
xor
cmp
addr16
and
jg
andl
push
and
push
or
push
and
sbb
stos
or
pop
aam
sbbb
inc
and
and
popf
into
sbb
add
fstps
sub
pusha
mov
mov
jns
dec
mov
xchg
pop
iret
test
push
ss
ret
push
repz
cld
and
inc
fwait
inc
cmp
adc
adc
test
outsb
xchg
pop
mov
leave
mov
cmp
leave
scas
lahf
push
mov
ret
mov
push
in
mov
cmp
stos
jmp
es
mov
xor
loop
ljmp
lahf
xchg
hlt
push
cmpsl
cmp
cmpsb
fwait
mov
in
jo
dec
cmc
adc
out
pop
das
in
jno
xchg
stos
das
cltd
sub
insb
rorb
fists
bound
jg
jns
cmc
xor
sbb
ja
dec
mov
pop
jecxz
pop
in
add
pop
ret
xor
pop
jg
or
xor
aaa
data16
push
dec
popf
ret
fildll
cmpsl
mov
mov
es
cltd
adc
inc
xor
push
idivb
push
mov
dec
mov
sub
pop
sbb
or
icebp
add
lock
les
int3
mov
clc
ss
das
mov
jge
dec
cmp
ljmp
je
mov
movsl
sbb
out
jmp
jl
pusha
sti
ror
pop
jecxz
sbb
lods
cmp
cmpsb
je
mov
inc
jl
addr16
push
mov
sub
sub
sbbl
test
imul
rorl
inc
jmp
sub
push
cmp
jp
sbb
mov
dec
subb
cli
pop
movsb
cmp
rcrl
leave
dec
jae
pop
fmul
out
and
mov
xchg
mov
shl
movsb
jg
ror
mov
push
lds
nop
push
andl
loope
out
stc
jbe
fidivs
cmp
cli
lret
cmp
and
fucom
pop
xor
ja
xchg
jnp
insb
shll
pop
sub
shrb
jno
ret
je
sub
fisttpl
cwtl
lcall
movsl
test
or
cmp
andb
and
mov
ret
ret
shrb
or
sbb
in
cmpsb
sbb
in
lds
mov
ds
jle
pop
xorb
mov
movsl
dec
fucom
push
xor
add
dec
xor
js
orl
add
std
ljmp
daa
test
ss
das
pop
ja
inc
fwait
push
loope
cwtl
pusha
inc
mov
cvtpi2ps
mov
adc
mov
mov
shll
sub
lcall
mov
pop
add
imul
jle
repnz
dec
inc
or
iret
push
mov
loop
stos
push
mov
fsubrl
leave
jbe
mov
mov
mov
popf
push
xchg
repnz
imul
out
xor
lcall
mov
inc
sbb
scas
xor
lahf
mov
and
mov
push
nop
js
push
and
or
ljmp
lds
jl
and
sbb
or
push
and
cli
inc
testb
dec
call
push
dec
inc
aas
adc
pop
test
push
push
add
bound
in
cmp
mov
pop
cmp
mov
out
daa
xor
into
fucom
fstps
push
push
adc
mov
addr16
cld
lret
aam
add
or
pop
push
lods
ja
repz
sbb
adc
clc
mov
mov
push
mov
cmp
out
cmp
inc
dec
jecxz
imul
mov
mov
mov
ljmp
push
stc
scas
cmp
aad
jno
data16
out
jnp
dec
out
mov
mov
mov
into
sar
out
xor
ret
add
dec
sub
incb
outsl
and
xor
in
test
push
insl
adcl
push
push
arpl
push
clc
mov
jecxz
aaa
int3
insb
push
aas
das
add
jle
xor
cmp
out
adc
insl
dec
push
dec
loop
out
mov
sti
aas
push
or
adc
cmp
pusha
lret
pop
cmp
xchg
xchg
adc
xchg
sbb
add
cmp
test
or
test
outsb
jl
inc
sub
cli
or
int
rcrb
int
cmpsb
inc
push
shrl
inc
or
xchg
fisttpl
iret
fs
mov
mov
lea
mov
ja
mov
inc
sbb
icebp
sub
inc
pusha
xchg
aad
loop
fistps
push
inc
cmpsl
mov
shlb
cld
stos
lods
dec
inc
sbb
mov
cwtl
xlat
test
jo
jmp
fsts
int
adc
lods
push
push
mov
je
repnz
mov
iret
mov
ret
inc
xor
sub
out
adc
divb
aad
das
sti
xchg
mov
mov
push
ja
or
and
outsl
xchg
inc
mov
pop
mov
inc
lods
movsl
adc
inc
jmp
jp
cs
pop
xchg
or
adc
cs
sti
xor
add
mov
inc
insb
ja
jnp
fnstenv
int
cmp
cwtl
sbb
mov
out
inc
dec
xchg
cs
popa
movsb
insl
mov
sbb
sbb
cld
gs
popf
stc
jo
push
imul
lahf
leave
push
aad
xchg
inc
mov
jmp
jecxz
shrl
pop
in
cld
mov
daa
sub
pusha
push
sbb
setnp
xchg
push
cmpb
movsl
add
int
insb
pop
mov
jae
lods
popf
daa
mov
cltd
out
adc
fsub
xor
push
outsb
add
xor
xchg
aas
cmp
int3
cmc
enter
iret
test
out
mov
fbld
xor
cli
xchg
cmp
mov
loope
sub
mov
adc
xor
popf
ja
mov
loope
add
out
push
mov
std
or
repnz
pop
fsubl
in
pop
mov
outsb
fldenv
je
or
cwtl
sub
imul
mov
js
aaa
dec
jle
or
stos
mov
mov
pop
and
xchg
adc
mov
fwait
mov
les
dec
icebp
mov
sbb
mov
aad
sahf
add
cld
ja
mov
orb
dec
push
mov
xchg
jecxz
inc
pushf
add
popa
dec
subl
xlat
sub
rcrl
and
in
aam
jge
cli
std
xchg
mov
dec
lret
inc
into
mov
pop
andl
pop
adc
gs
ret
sbb
sbb
in
push
lods
ret
adc
hlt
jns
push
inc
test
xchg
sub
filds
jno
test
and
stc
push
pop
mov
loop
nop
dec
fsubrl
test
add
pop
test
dec
push
inc
sub
out
inc
xor
rcrb
bound
inc
push
mov
xchg
pop
xor
roll
mov
outsl
out
rorl
xchg
mov
test
in
pop
jb
add
dec
jb
jmp
jno
dec
mov
ljmp
push
lret
xor
roll
push
loope
pop
jecxz
cld
fistpll
mov
daa
xlat
aam
mov
jg
cli
out
xor
iret
mov
cmp
add
xchg
ds
sub
or
jne
adc
and
ljmp
mov
pop
adcl
or
cmpsl
push
sahf
pop
and
test
addb
push
lods
dec
stos
pop
test
psubusb
inc
sub
leave
push
cmp
or
mov
test
cmc
mov
mov
lcall
sub
movsb
insb
mov
push
cmp
mov
jns
sahf
insb
lret
shr
jns
sti
pop
push
dec
out
out
inc
and
dec
adc
scas
mov
lds
lret
or
pop
sbb
sbb
outsb
lret
dec
and
roll
lret
insb
jo
mov
call
imul
mov
int
gs
aam
push
mov
xor
cmpsb
sbb
jb
lar
cmp
rcrl
nop
ds
or
roll
lods
xor
lds
cmpsl
hlt
sbb
inc
push
pop
sbb
adc
nop
push
pop
or
add
cmpsb
mov
lcall
ja
pusha
lods
ds
jo
ja
dec
jecxz
scas
movsl
mov
setp
pop
or
push
loope
push
inc
xchg
jp
iret
jmp
out
cs
mov
adc
inc
mov
cmc
aaa
pushf
fnsave
and
lock
outsl
adc
sub
pop
sbb
and
data16
inc
pop
jl
add
inc
inc
notb
jecxz
lea
out
cltd
mov
sbb
pop
cli
iret
inc
das
push
stc
rcrb
inc
sbb
jge
add
in
in
or
or
push
lea
hlt
and
and
imul
push
pop
sbb
sbb
dec
dec
fstpt
aas
mov
pop
insb
out
mov
icebp
dec
shlb
fcoms
dec
sbb
testl
in
mov
mov
dec
out
enter
cwtl
jmp
sub
imul
movsl
fs
ret
lcall
scas
div
jge
jmp
xchg
push
pop
mov
in
cmp
roll
adc
dec
mov
cmp
mov
loopne
icebp
pop
lcall
cli
gs
mov
cs
inc
xor
rcrl
jbe
inc
mov
xchg
das
xchg
lods
push
insl
push
pop
push
push
ret
sbb
in
mov
je
daa
or
jns
mov
in
mov
mov
dec
shll
arpl
mov
or
fsub
mov
fwait
sub
test
dec
aaa
dec
mov
inc
mov
data16
cmp
repnz
cmp
mull
gs
lods
fwait
dec
pop
test
dec
xchg
jg
mov
or
adc
sti
cld
jmp
pushf
mov
pop
dec
mov
or
mov
nop
adc
sbb
jl
sbb
lret
add
mov
adc
or
pop
jmp
iret
ljmp
out
mov
rclb
rcll
jo
div
fbld
mov
or
out
dec
outsl
or
lods
fildll
out
push
repnz
sub
push
xchg
cmp
das
shl
mov
pop
lods
ljmp
aad
stos
jge
mov
stos
es
clc
cmp
outsb
addr16
enter
push
or
in
movsl
sub
dec
mov
add
mov
dec
es
rcr
add
mov
gs
btr
cs
cwtl
aad
inc
mov
jl
lods
xchg
shl
dec
sub
lods
add
fldcw
rol
cmp
adc
sub
pop
add
jle
inc
ja
add
cmp
push
mov
dec
or
inc
test
loop
sub
rcrl
test
mov
dec
or
fsubr
dec
inc
sbb
mov
sbb
inc
sub
incl
outsb
mov
lea
adc
movsl
jne
dec
push
cmp
inc
push
mov
push
and
and
push
pop
sarb
pop
or
push
dec
icebp
mov
dec
les
jp
jmp
int
xchg
pop
add
pushf
fmull
mov
add
dec
std
mov
rol
loopne
add
and
fcmovnbe
jg
movb
sbb
xor
fstpl
out
das
movsb
aaa
pop
jmp
popa
cli
mov
push
loopne
out
decl
outsb
hlt
dec
mov
rcrl
push
pop
pop
xchg
sbb
in
ja
mov
mov
les
mov
pop
and
ja
ljmp
cmp
jne
push
sub
sub
shlb
and
loopne
rol
insl
jb
popa
ret
xor
jns
fldt
cmpsl
leave
loope
xchg
mov
sbbb
xor
stos
jae
test
repnz
cmp
add
js
jmp
popf
xlat
jno
iret
test
sub
xor
push
js
mov
mov
add
jns
xor
and
inc
rclb
xchg
xchg
ret
jmp
insb
mov
cmp
cmp
xchg
push
xchg
or
fxch
ret
xchg
and
in
mov
inc
shll
push
push
icebp
jge
lds
fnstsw
mov
addr16
dec
stos
inc
ljmp
or
lret
idivl
adc
fisttpl
shlb
jae
pop
add
inc
out
stc
push
or
lea
insb
inc
mov
aad
adc
dec
stos
imul
popf
mov
inc
push
jo
das
add
aad
rorl
sub
jae
dec
hlt
imul
pop
mov
sbb
xchg
rorb
movsb
cmp
xor
ret
xorb
add
pop
mov
and
shl
push
sbb
ljmp
gs
pop
add
test
imul
jmp
movsl
xor
scas
xchg
scas
push
into
and
in
cmc
ss
pop
dec
ds
mov
nop
lods
add
mov
and
testb
push
dec
test
mov
scas
dec
das
pop
pop
repnz
fs
cwtl
inc
xchg
int3
mov
mov
incl
ret
xchg
jb
jle
dec
arpl
nop
mov
loop
add
xor
xor
test
shlb
adc
cwtl
mov
stos
xchg
xchg
pop
test
cmp
push
jp
imul
pop
adc
dec
pop
adc
aam
jne
fidivrs
negl
push
mov
sbb
adc
ja
sbb
and
push
pop
xor
mov
lds
xor
stos
adc
mov
insl
cmp
pop
and
outsb
pop
xchg
sub
mov
jo
sub
push
out
test
daa
cmpsb
pop
add
or
inc
xlat
mov
push
add
iret
jg
outsb
xchg
rorb
or
outsb
das
sbb
cltd
pop
sahf
sub
mov
dec
push
insl
add
andb
cwtl
shll
mov
in
push
movsb
xor
int
test
dec
sbbl
mov
dec
jbe
xlat
sti
dec
pop
aas
sbb
repz
pop
jbe
lret
nop
inc
add
jo
mov
dec
aam
cmp
pop
std
push
mov
jno
dec
loopne
outsl
insl
push
mov
pop
xchg
cmc
cmp
mov
iret
inc
inc
or
jne
es
mov
xchg
pop
and
aas
mov
int3
jmp
nopl
lahf
mov
ret
int
mov
repz
fisubl
xchg
xor
xor
pop
xor
imul
movsb
mov
rorl
dec
dec
prefetcht0
jg
xlat
xor
or
rclb
mov
adc
and
or
mov
xchg
dec
jl
lods
leave
adc
in
or
loopne
int
and
mov
dec
mov
test
pop
in
std
adc
test
ss
adc
push
and
sub
inc
idivl
mov
dec
roll
sbb
ja
pop
idivb
sbb
nop
ret
and
and
jecxz
dec
sub
sti
pop
or
sub
out
mov
std
and
das
movb
mov
addr16
fwait
imul
add
ret
mov
dec
fs
adc
push
sbb
cmc
mov
mov
xor
out
je
xchg
fisttps
inc
jl
mov
pop
cltd
addr16
insb
mov
pop
add
cmp
mov
jbe
and
rol
pushf
enter
negw
test
hlt
push
testl
dec
ja
cmpl
push
sub
pop
shrd
js
xchg
mov
scas
push
or
imul
fldenv
sbb
mov
fisubl
mov
repz
xor
or
repz
das
inc
push
ret
push
into
mov
outsl
test
adc
add
push
dec
and
xor
stos
mov
sub
int
pop
out
out
lea
xlat
push
add
add
xor
xor
adc
mov
push
mov
lahf
and
rcrb
addr16
leave
sti
jmp
imul
int3
add
mulb
test
mov
cmp
sbb
gs
sbb
cmpsb
imul
jge
push
jne
xchg
jb
je
cltd
fs
jg
jg
fistps
cld
lds
dec
and
sub
mov
and
out
cmc
icebp
nop
pop
push
or
mov
adc
addl
xchg
popa
xchg
mov
jne
in
sub
hlt
pop
ljmp
orl
or
lcall
mov
fstpt
movsl
aam
xchg
fwait
scas
jecxz
mov
jns
iret
sahf
mov
fcomp
in
icebp
push
sti
mov
xchg
mov
fbstp
pop
inc
hlt
pop
add
popa
adc
in
scas
dec
add
repnz
lahf
es
aam
xchg
inc
and
mov
subl
test
push
jnp
xchg
xchg
clc
push
or
inc
push
and
sbb
out
adcb
push
and
push
cmp
xchg
test
inc
adc
jno
popa
les
adc
cmp
stc
fnstenv
je
mov
imul
sbb
cmp
xchg
jno
or
es
imul
mov
stc
cmp
ja
stos
jnp
pusha
inc
das
mov
leave
adc
push
ds
pop
clc
loope
add
xlat
sbbb
mov
mov
mov
arpl
and
push
dec
out
jmp
lret
cmp
push
push
push
add
sub
stos
lods
push
mov
movsl
sbb
rcrl
push
xchg
jmp
mov
mov
pop
dec
test
test
repz
in
mov
ficoml
int3
jne
fimull
fidivs
jp
out
das
nop
jns
mov
mov
pop
push
push
movaps
adc
into
mov
xchg
loope
and
mov
sbb
xchg
mov
aaa
clc
call
add
mov
addr16
repz
lcall
dec
nop
sbb
xchg
je
adcl
movsl
test
push
in
inc
icebp
add
dec
push
sbb
lret
idivl
pop
cmp
mov
test
sar
and
lods
shrl
mov
dec
sub
inc
insl
cltd
add
mov
cmp
dec
cmp
mov
mov
sbb
lock
or
xor
xchg
adc
xchg
stc
scas
loope
inc
loop
jo
hlt
pop
fmull
inc
inc
in
out
sub
jno
adc
jo
xchg
sbb
movb
inc
xor
fwait
subb
das
cmp
add
and
inc
mov
push
jp
or
jl
push
push
repnz
movsb
sbb
out
nop
add
fimull
add
fdivrl
inc
xchg
cmc
insb
mov
mov
pop
push
mov
push
and
push
sub
rclb
adc
out
int3
xor
xchg
inc
mov
xchg
or
sub
addr16
das
imul
fwait
out
lret
loope
mov
mov
out
in
pop
push
ds
mov
js
mov
icebp
movsb
mov
cmp
scas
pop
mov
dec
ja
mov
jmp
repz
dec
cmp
dec
mov
inc
pusha
lods
jg
mov
fistl
sub
lock
in
dec
inc
imul
daa
rcll
push
pop
test
imul
repz
mov
inc
pop
iret
cmpsb
cli
insb
mov
cmpsl
out
adc
scas
icebp
jg
test
xor
sub
sub
pop
sub
dec
or
mov
aaa
stc
hlt
imul
bnd
into
int
out
mov
inc
hlt
data16
inc
jb
ror
arpl
daa
adc
or
repz
mov
das
cmp
xchg
jb
cltd
hlt
neg
inc
mov
cs
rcl
pop
mov
cmp
cmp
out
push
pop
daa
test
mov
mov
call
insl
pop
addr16
push
jp
mov
mov
out
nop
cmpsb
mov
jbe
in
adc
clc
stos
mov
xchg
stos
fildl
push
shll
push
xor
xor
addr16
sbb
sbb
sub
pop
mov
push
std
xor
pop
into
outsl
addr16
jns
cmp
sub
loope
cmp
push
aaa
pop
mov
ljmp
inc
lock
inc
adc
inc
mov
or
inc
dec
sahf
insl
xlat
adc
std
mov
add
ljmp
repz
dec
arpl
in
mov
and
and
pop
enter
mov
inc
pop
pop
mull
push
int3
cmp
and
sub
cmp
std
jne
imul
pop
push
mov
lods
es
lea
das
ss
jno
loop
andl
jb
cmp
jbe
fwait
stos
adc
xchg
mov
test
cwtl
add
push
or
fildll
lret
mov
lods
xchg
stos
mov
outsb
push
lods
ljmp
mov
ja
xchg
xchg
inc
dec
arpl
fcomi
cmp
adcl
out
jg
mov
inc
addl
call
pusha
ret
es
jecxz
inc
and
jge
push
jg
or
xchg
adc
cli
shrb
jns
xchg
dec
gs
xchg
roll
jge
push
mov
jo
inc
ja
mov
push
shl
add
scas
sub
xchg
cmpsb
add
push
xchg
test
pop
pop
ficomps
pop
pop
cmp
or
and
pop
push
out
lret
jmp
iret
pop
and
pop
add
int
and
or
mov
scas
nop
cli
pop
scas
sub
adc
dec
cmp
pop
aam
or
shrl
pop
add
data16
fidivrs
and
mov
shrl
inc
xor
int
add
iret
cmpsb
sub
outsb
mov
jne
adc
loop
aam
pop
mov
icebp
sbbl
rol
or
inc
push
sub
push
ficoms
xchg
fistpl
pop
test
call
jno
out
cmpsl
dec
jle
dec
inc
mov
scas
cwtl
loop
jo
xchg
pop
push
loope
outsb
mov
adc
bound
lsl
out
gs
mov
mov
inc
cwtl
fidivrl
in
fstps
pop
dec
add
mov
lret
lds
outsl
mov
or
sti
aad
mov
test
add
cmp
mov
xorb
fs
imul
fcmovb
stos
pop
push
clc
mov
callw
test
cmp
push
fs
loopne
bound
sbb
dec
push
inc
loope
jb
push
xchg
jae
cmpsl
fsub
mov
in
inc
cmp
sbb
fnsave
cwtl
shll
subb
nop
aas
jo
jl
inc
enter
andb
popa
jle
outsl
sub
lret
repz
pop
repz
mov
fldl
iret
fadds
insb
sbb
jae
adc
cmc
in
mov
dec
lock
xchg
lock
xor
fnstenv
or
sbb
lds
sub
lret
or
mov
jno
adc
gs
ss
cmpsl
xor
and
popa
xor
jle,pn
mov
leave
or
cwtl
cmp
jmp
mov
or
pop
xchg
lahf
add
es
dec
loop
ja
push
jae
daa
lahf
jo
sbb
and
push
mov
xlat
out
mov
daa
push
jnp
adc
add
mov
lods
into
or
call
mov
mov
mov
lods
xor
mov
xor
jl
gs
mov
in
add
fnstenv
pop
imul
xor
lahf
adc
dec
in
xor
lock
xor
cmp
idiv
nop
out
gs
neg
loopne
push
shlb
les
sub
or
enter
das
inc
in
mov
mov
imul
sub
stos
cwtl
mov
das
xchg
dec
mov
ds
lods
push
jbe
test
lds
daa
pop
xchg
dec
jg
inc
lods
add
lock
mov
mov
adc
inc
and
imul
andl
lods
or
in
test
xchg
ljmp
addr16
xchg
mov
adc
clc
inc
push
lds
cmpsb
jns
sbbl
pop
dec
jl
adc
jg
ds
sub
lret
enter
xlat
shlb
lock
sbb
movsb
gs
add
lret
dec
inc
nop
jecxz
push
xor
popa
and
xchg
iret
xlat
in
mov
fldl
mov
enter
mov
movsl
outsl
cmp
push
sbb
arpl
adc
cld
lods
adc
pop
gs
mov
test
mov
callw
dec
sub
push
lods
cmc
pushf
data16
push
pop
mov
ret
cmp
sbb
lods
sarl
js
push
int3
test
jns
iret
jnp
lcall
pop
out
cld
arpl
sti
sti
inc
push
cmp
pop
mov
jns
mov
out
dec
sbb
sbb
push
shrl
addr16
nop
movsb
aas
clc
daa
add
xchg
ret
and
xor
mov
loop
test
or
xchg
add
ret
or
aam
mov
cwtl
insl
clc
sbb
mov
cli
mov
mov
repnz
aad
das
adc
pop
xor
mov
aam
aad
xor
mov
cmp
mov
inc
leave
lea
mull
shrl
mov
pop
mov
inc
jp
out
addr16
xor
rclb
cltd
jns
shll
imul
icebp
out
mov
push
push
jecxz
test
xchg
roll
cmp
arpl
scas
or
xchg
aaa
mov
add
pop
js
adc
popf
lods
jae
pop
sub
cmp
icebp
pop
popf
adc
jmp
ds
mov
inc
sub
subl
neg
mov
pop
aas
inc
sub
cmp
mov
jnp
nop
ja
jmp
adc
and
jo
xchg
enter
or
fistpll
popa
out
mov
cli
pusha
xchg
outsb
imul
rorl
sub
mov
dec
gs
ja
add
fisttpll
cmp
jno
lret
cmpsb
orb
bound
out
push
sbb
popa
fstpt
add
sbb
fiaddl
outsb
jge
loop
movsl
pop
inc
dec
movsb
xchg
stc
or
ss
idivb
sbb
out
sbb
call
in
shl
mov
fistpl
and
int3
or
fstp
jno
movhps
xchg
xchg
rol
xchg
pop
pop
mov
test
fucom
clc
jle
or
lods
sub
cli
mov
ja
and
lds
imul
push
or
push
push
adc
clc
out
inc
cltd
add
negb
cmp
inc
lods
adc
ss
xor
nop
lea
jbe
int3
sub
iretw
inc
lods
xor
incb
xor
jmp
mov
add
das
shl
movsb
dec
add
rclb
in
mov
lea
cmp
xlat
dec
push
push
pop
stc
into
or
loop
jge
inc
adc
pop
imul
jmp
mov
das
stc
imul
sahf
sar
inc
dec
jmp
push
addr16
scas
je
loope
or
cli
dec
adc
std
jl
xchg
push
push
pop
mov
loopne
and
fsubrl
pop
sub
mov
movsb
shr
in
imul
xchg
lods
jne
movsb
and
inc
push
sahf
or
mov
fisubs
movsl
sbb
inc
xlat
cli
jnp
push
aad
jbe
mov
imul
out
or
add
push
hlt
pushf
pop
mov
sbb
insl
stos
mov
jo
filds
flds
push
lock
sbb
pop
jns
fistl
pop
insb
xchg
sub
nop
fistpll
xlat
fisttpl
mov
and
stos
push
or
lret
pop
dec
pop
pop
aas
mov
sbb
stos
fimuls
outsl
lds
xor
negb
int
xorl
orl
lods
lods
mov
inc
inc
jnp
sub
std
jbe
ficomps
stos
ds
and
jb
bound
imul
cmpsl
bound
shlb
lahf
lret
sub
and
mov
mov
or
or
es
cltd
bound
mov
inc
mov
cs
lock
adc
gs
shrl
adc
mov
jne
mov
cmc
mov
aam
pop
call
inc
negb
in
dec
and
imul
nop
nop
ds
je
cmp
cmp
outsb
xor
stos
das
lret
in
or
je
popf
xor
pop
dec
bound
push
mov
push
shrl
iret
mov
jo
lock
push
and
push
cmp
sti
movsl
das
mul
fdivrs
and
pop
add
cltd
push
fcoml
mov
cmpsb
rorl
lds
fld
xchg
loopne
bound
mov
bound
shlb
mov
or
mov
dec
fdivl
adc
jno
inc
push
lock
push
mov
cmp
int
or
mov
fsubrp
dec
or
sbb
cmp
dec
jecxz
insb
lahf
fistl
gs
rolb
les
or
fsubrl
cmpsl
xchg
into
xlat
adc
sbb
ret
pop
add
and
fwait
add
cs
in
sbb
and
popa
jg
xor
push
lret
pop
fiadds
popa
mov
lock
xor
jnp
sti
xchg
rcr
fs
mov
or
out
mov
adc
add
mov
sub
inc
out
lea
ja
imul
es
xchg
sbb
jnp
loope
push
adc
popa
adc
idivl
push
fisubs
bound
mov
leave
mov
dec
loope
clc
aaa
fsts
cld
loop
jo
add
mov
or
jmp
insl
sbb
jg
aad
daa
push
mov
cmpb
dec
xor
rorb
cmpsb
pushf
fs
aas
out
dec
dec
xchg
mov
push
pop
mov
push
add
and
mov
pop
sbb
sbb
nop
push
jg
je
xor
or
sub
movsl
adc
clc
push
xorl
outsb
push
sub
das
fwait
cld
add
nop
cmpsb
sbb
repnz
mov
stos
inc
stc
inc
mov
xor
repz
pushf
repnz
popa
jl
pop
sbb
or
push
fldcw
std
mov
negb
add
sub
bound
sub
push
dec
xor
pop
icebp
mov
jmp
push
dec
aam
or
or
sbb
inc
mulb
pop
adc
jno
mov
popa
or
jnp
loop
push
out
sbb
mov
imulb
clc
lds
adc
mov
push
inc
pop
sarl
jg
xchg
push
pushf
pop
cmp
lods
fistpl
pop
mov
lock
inc
jnp
popa
push
xor
adc
divl
addr16
test
inc
iret
arpl
fs
sub
mull
pop
ret
mov
aam
lret
lock
mov
mov
adc
cli
clc
xchg
popf
out
adc
cmp
lods
call
xchg
xchg
sarb
mov
sub
lods
repnz
xchg
test
mov
in
dec
or
lds
insb
mov
sub
cli
mov
add
pop
ret
xchg
jg
enter
dec
arpl
bound
aam
add
inc
pushf
pop
stc
cltd
fwait
sub
and
outsl
jp
leave
outsl
je
inc
fstps
mov
imul
fwait
fs
sbb
and
cli
or
decb
andb
push
xor
sahf
loope
and
sbb
mov
in
jae
push
clc
das
xor
sbb
lret
add
addr16
pop
ljmp
daa
inc
and
sarl
mov
out
rorl
icebp
jl
jmp
pop
lock
pop
mov
loop
js
fiadds
addr16
xchg
add
lcall
jecxz
sub
or
sahf
ja
hlt
sub
adc
xor
mov
or
insl
mov
lret
push
inc
mov
inc
in
jg
insb
sarl
lods
mov
inc
insl
lret
jb
inc
repz
inc
mov
js
sbb
push
cwtl
add
mov
arpl
ja
lahf
ss
int3
int3
rcrl
into
pop
xchg
aad
icebp
mov
dec
pop
and
testb
xor
jp
std
test
cmpsb
mov
in
inc
test
enter
mov
cs
cmpsb
dec
pop
xchg
fs
les
add
inc
into
inc
xchg
jae
sbb
xchg
pop
push
and
cmp
xor
push
in
scas
inc
and
mov
dec
cmp
nop
or
or
mov
addr16
sbb
dec
inc
jmp
loop
mov
fcoml
xchg
mov
das
adc
adc
add
imul
inc
in
cli
xchg
xchg
ret
mov
xchg
and
adc
sbb
clc
or
adc
repz
movsl
cld
int3
sub
fmulp
cs
and
aas
lds
stc
jae
sbb
sahf
nop
sub
fld
jnp
or
imul
shrb
sbbl
dec
mov
int3
mov
add
adcb
push
mov
aaa
insl
ja
mov
add
and
jp
xchg
jnp
mov
xor
aam
and
lock
xlat
xor
jg
cmc
test
loopne
push
lock
pop
jecxz
loopne
pop
and
pusha
adc
or
lcall
cwtl
xor
outsb
push
xlat
and
pop
adc
pop
icebp
lods
jle
push
add
push
pop
cmpsb
add
and
loope
daa
dec
mov
cmp
out
je
popa
adc
push
cmp
push
insl
cmp
pop
std
jecxz
mov
mov
ret
mov
popf
cmp
sbb
xor
inc
loop
dec
inc
gs
std
pushf
popa
push
lds
or
mov
into
and
jp
out
cltd
into
jae
imul
mov
stc
insl
mov
or
xchg
test
mov
loopne
aaa
lods
xor
jl
pushf
test
pop
out
mov
int3
add
mov
lcall
xor
out
xchg
imul
cmp
fcom
lcall
xor
ret
in
negl
ja
jns
cmpsl
push
mov
inc
inc
add
mov
data16
jle
arpl
mov
adc
xchg
or
dec
or
mov
adc
dec
es
sub
test
pop
and
xorb
sbb
or
in
adc
inc
testb
test
pop
ret
xor
jbe
sub
aas
cltd
loopne
cmp
or
adc
adcl
fidivl
mov
push
pushw
lods
rcr
aas
sti
inc
lds
fwait
loopne
push
fwait
mov
aaa
in
and
adc
dec
jmp
add
pop
out
loop
in
mov
mov
sbb
push
hlt
cwtl
clc
mov
xor
mov
jb
xor
insb
es
imul
jg
xchg
xlat
test
ljmp
fcoml
xor
sub
jae
inc
mov
les
mov
imul
push
mov
adc
fidivrs
mov
dec
push
vpaddsw
fistl
pop
push
daa
or
mov
outsb
inc
or
js
cmp
jp
mov
add
ljmpw
ret
es
jb
scas
push
adc
jmp
cmc
inc
or
xor
pushf
int
sbb
push
mov
push
inc
clc
and
faddp
mov
sub
jo
dec
xchg
xchg
mov
mov
pop
push
inc
stc
or
cmpsb
push
sar
mov
dec
mov
mov
cmpb
lds
movl
inc
insl
push
and
push
cmp
add
jecxz
bswap
aam
fldcw
shr
xor
loopne
cmp
shl
sub
lds
lret
mov
mov
sar
out
in
jns
mov
ret
jmp
push
xchg
xchg
push
fstps
mov
je
out
jnp
adc
hlt
pushf
xor
enter
das
adcb
test
sahf
jle
mov
pop
mov
ret
ja
fisubl
add
clc
or
loop
jae
lods
push
mov
mov
andps
push
pop
xor
insb
nop
pop
jmp
iret
xchg
push
or
movsb
mov
cmp
push
stos
inc
rcrl
xor
cmpsl
mov
subps
mov
fldt
daa
jno
ret
outsb
cli
jg
pop
dec
insb
cmp
rclb
inc
ret
ret
rcrb
jecxz
mov
adc
add
in
clc
dec
movsb
int3
jl
loope
mov
pop
mov
in
loope
adc
xor
in
ror
mov
aad
mov
mov
aam
xchg
cwtl
cltd
jmp
xchg
test
mov
mov
and
add
out
dec
sub
outsl
cmp
test
jle
push
stc
dec
add
mov
sub
or
or
pop
add
fstp
fldcw
out
adc
jle
insb
add
sbbl
cmc
arpl
xor
jge
sarb
mov
mov
bound
add
inc
jo
and
std
sub
xchg
adc
add
and
add
xlat
inc
sub
xchg
lods
cld
add
loop
les
mov
je
adc
sbb
mov
jo
and
adc
xchg
jb
push
ret
sbb
push
xlat
movsl
out
clc
mov
or
push
pop
mov
add
icebp
fdivrl
pop
stc
or
movsb
daa
xchg
adc
repz
int
in
call
inc
add
lret
mov
inc
icebp
faddl
lahf
dec
and
lock
loopne
push
gs
jo
push
cs
stc
fstl
fsubrl
sub
sbb
lock
adc
fnstcw
mov
xchg
adc
or
xchg
adc
jge
xlat
xor
sbb
mov
mov
out
ja
or
je
lcall
aam
in
ss
lods
das
mov
stos
adc
arpl
cwtl
add
sub
sub
lods
movsl
jno
rcrb
out
iret
popl
adc
cmp
lea
lea
js
inc
add
cmp
jae
add
or
sbb
decb
lret
dec
adc
jo
mov
lahf
ss
cmp
cmpsb
jb
cmp
inc
fsubp
inc
cld
sbb
das
out
fdiv
movb
jae
pop
push
bound
dec
dec
pop
popa
stos
inc
adc
dec
mov
and
xor
lods
mov
orl
test
aad
mov
pop
pop
add
push
and
dec
jmp
pop
and
lock
gs
adc
push
fs
push
subb
fsubs
out
ret
pop
mov
sbb
out
inc
and
mov
dec
jo
shll
sbb
inc
shld
add
mov
dec
pop
mov
jecxz
lea
dec
dec
pop
or
inc
data16
mov
mov
mov
sbb
sub
out
jno
mov
pop
lret
xchg
cmp
lods
push
cli
scas
insl
add
rcll
scas
dec
sarl
sub
icebp
fidivs
add
dec
lgs
sub
sub
loope
ss
or
shll
std
push
test
ds
mov
sub
jne
ficompl
outsb
in
aaa
imul
outsb
stc
mov
gs
je
xor
jmp
dec
mov
sub
xchg
hlt
add
ss
jecxz
or
pop
cmc
addr16
and
mov
pop
pop
jmp
mov
xchg
jno
and
cld
inc
jno
mov
cmp
stc
std
jb
mov
pushf
inc
fucomip
pop
loop
out
sub
in
sbb
jns
imul
jge
mov
jle
lods
inc
sub
in
aas
stos
push
arpl
xchg
mov
repz
push
jb
inc
fisubs
push
pop
in
dec
pushf
inc
scas
xor
add
cltd
ds
xchg
imul
movsb
pusha
push
ret
or
hlt
inc
jg
sub
mov
andb
lock
cld
int3
std
pop
jg
dec
inc
loope
pop
int
fidivs
jae
imul
mov
rclb
mov
enter
add
icebp
push
shr
or
icebp
out
addb
mov
iret
jae
clc
out
fdivrs
jl
mov
fists
movsl
fisttpll
mov
movsb
inc
je
hlt
push
mov
sub
pushf
addr16
movsb
scas
scas
push
sub
insl
insb
aas
jge
popf
push
ja
loop
xchg
fiadds
pop
mov
dec
mov
or
test
mov
rcrl
mov
aam
loop
pusha
sub
data16
je
or
dec
fsubrs
and
inc
jmp
sbb
inc
rol
insb
dec
pop
mov
imul
adc
leave
out
inc
mov
test
lock
andb
fimuls
xor
xchg
jecxz
ret
jmp
dec
insl
pop
or
cmc
mov
inc
adc
push
lock
xchg
xchg
xor
pop
std
push
das
jbe
fistps
add
mov
cld
rcl
fisubrl
and
mov
movsb
lret
dec
test
push
in
or
aad
and
ret
push
jae
faddl
and
xchg
scas
cmp
inc
mov
int3
mov
push
pmullw
fbstp
pop
push
lods
clc
push
lret
pop
mov
pop
push
loop
jns
lcall
daa
leave
and
loope
inc
addb
cli
add
adc
or
shrb
xchg
adc
jl
push
inc
fs
popl
xor
jge
xor
mov
mov
xor
testb
sbb
mov
mov
push
dec
jp
les
out
sub
xchg
sti
sbb
call
or
ror
imull
sbb
cltd
sub
js
rorl
lods
pushf
cli
lds
inc
fldcw
xchg
ja
fchs
and
mov
push
push
fsubs
loopne
cmp
clc
jmp
and
pop
je
sbb
arpl
test
repnz
sahf
stos
cmp
insl
push
jne
or
mov
stos
hlt
ret
jle
and
sbb
loopne
push
jp
arpl
pop
ret
pop
shll
add
arpl
outsl
push
dec
jl
test
xor
out
dec
cli
fidivl
pop
les
push
adc
std
adc
cmp
adc
mov
lret
sahf
test
lods
pusha
sub
shll
lods
fildl
cmp
sbb
addr16
sub
push
cmp
dec
sub
and
iret
mov
or
sbb
imull
jbe
mov
jle
inc
or
loope
xor
cmp
stc
dec
fldcw
add
cltd
dec
mov
push
iret
idivb
scas
mov
add
in
adc
dec
xor
and
bound
fisubrs
inc
push
push
mov
lea
inc
cmc
mov
jbe
cmpsl
push
or
push
std
imul
pop
push
mov
push
imul
add
mov
enter
push
mov
dec
sub
or
xlat
sub
xor
jns
pop
adc
sbb
int
testb
popa
sub
inc
dec
mov
sbb
mov
jp
xor
push
int3
in
xor
sbb
xor
sti
inc
nop
sub
sub
and
jo
push
loop
pop
pop
ret
idivl
push
push
pop
dec
push
add
imul
dec
pop
push
lods
push
push
mov
add
imulb
push
iret
mov
mov
and
sahf
out
adc
dec
mov
subl
sbb
inc
mulb
sub
dec
xchg
xlat
idivb
lods
cmpb
and
pop
pop
loop
mov
cmp
jmp
xor
dec
pop
dec
out
mov
add
add
xchg
push
and
xchg
loope
add
js
mov
xor
test
cmpsb
or
pop
das
insb
jae
jno
mov
aam
xchg
movl
pop
in
add
sbb
int
push
push
dec
push
mov
test
jne
or
in
pop
enter
push
sub
pushf
adc
pop
jl
cmpsb
jecxz
outsl
lret
imul
push
adc
fadd
dec
and
add
jnp
xchg
loope
pop
inc
aaa
dec
xchg
mov
xor
les
mov
pop
add
or
mov
sbbl
xor
aam
jo
dec
cmp
inc
sub
dec
xchg
jo
xor
mov
add
or
pushf
xor
test
ret
fwait
adc
popa
mov
push
xorb
mov
mov
lods
sbb
jl
and
and
neg
into
push
enter
movsl
pop
divl
js
out
xchg
dec
inc
dec
out
xchg
mov
xor
insb
sbb
xchg
call
jmp
or
or
ss
mov
push
repnz
add
cmp
call
push
mov
jnp
cmpsl
and
jnp
xor
fnstcw
adc
call
hlt
jl
adc
jno
stos
xor
fcomip
test
adc
xchg
in
add
jle
mov
test
pop
jnp
sub
shlb
inc
or
mov
int3
rcl
popa
and
or
lcall
jo
loope
shlb
hlt
mov
ss
sti
cmp
xor
or
xor
cli
in
dec
xor
push
bound
or
xlat
mov
or
fs
movsl
or
push
outsl
and
leave
dec
inc
out
frstor
in
mov
add
mov
dec
sub
pop
adc
dec
fisubs
data16
insl
mov
adc
movsl
jle
jno
sbb
clc
xchg
lods
pop
cmc
cmpsb
pop
mov
aad
lcall
insb
je
test
sbb
push
in
fwait
sarl
outsl
testb
jmp
inc
push
jl
xor
cwtl
pop
fnsave
dec
push
dec
rcll
pop
mov
jbe
mov
mov
pop
dec
pop
test
insl
pop
data16
int3
pop
out
nop
inc
leave
jg
pushl
pop
ret
inc
mov
movsb
mov
sbb
out
popa
shll
idivb
ja
mov
addr16
jge
sbb
dec
push
stos
inc
shrb
add
sbb
inc
shl
add
xor
cmpsb
mov
xchg
xor
popl
push
mov
sbb
cmp
scas
push
mov
sti
jmp
cld
cmpsl
adcl
arpl
or
cmp
test
xchg
sub
dec
sbb
adc
fstpt
movsb
outsl
jg
or
mov
ljmp
clc
and
iret
adc
sbb
sbb
adc
mov
nop
or
adc
sbb
push
test
stc
mov
test
and
lods
and
mov
inc
add
push
jno
cwtl
outsb
sahf
mov
mov
jecxz
mov
lahf
xor
mov
int3
xchg
fmul
cmp
out
mov
lret
test
xchg
mov
mov
fldl
mov
arpl
cmp
pop
insb
in
cmp
aam
jl
fimuls
push
push
lods
inc
enter
ljmp
stos
cmp
mov
popa
call
sbb
int3
in
cmpsl
ror
xchg
push
daa
test
cld
and
cmp
inc
push
fistl
cmpsb
dec
fwait
int3
push
xchg
push
fs
dec
mov
out
xchg
test
and
int
push
orl
ja,pt
mov
repnz
pusha
jb
xor
scas
aad
scas
lock
jmp
in
inc
cmp
or
push
xchg
push
jmp
ficomps
add
push
cmc
push
and
sbb
popf
mov
xchg
adc
push
xchg
insl
add
add
add
mov
mov
xlat
xor
xlat
sti
sbb
xchg
mov
cld
incl
cs
push
and
or
mov
fiaddl
sub
outsl
stc
lods
and
out
test
cmpsl
ja
cmp
xchg
push
cmp
sub
cmp
sub
cld
call
mov
data16
sub
add
mov
cltd
subb
or
sbb
xor
fs
in
or
sbb
xor
pop
insb
xchg
imul
xor
imull
mov
jns
stc
adc
test
xchg
mov
pushf
add
loopne
mov
push
pop
mov
rolb
test
mov
xor
push
sbb
jge
fimuls
mov
jno
or
sub
aam
sahf
mov
test
mov
mov
ret
ljmp
std
sub
pop
lcall
sbb
stc
loop
dec
dec
mov
jnp
fwait
sub
pop
sbb
les
mov
cwtl
lea
aaa
dec
and
dec
cltd
adc
mov
mov
jb
jno
mov
and
dec
fsubl
mov
sbb
testl
out
xchg
add
ret
idivb
aam
js
adc
js
rcrb
mov
sub
mov
fimuls
push
jecxz
mov
adc
shrb
ret
fs
inc
mov
push
adc
mov
neg
pop
aam
jnp
sbb
push
fiaddl
jl
sub
add
lret
insl
addl
decb
mov
je
popf
mov
lcall
mov
rclb
inc
xchg
cmc
stc
bound
lahf
stos
jg
dec
nop
fildl
dec
cmp
push
push
jg
pop
loopne
in
inc
xchg
test
jbe
stc
lret
adc
pop
push
lret
rclb
enter
xchg
mov
daa
stos
inc
adc
daa
adc
cmpsl
ja
imulb
aaa
jnp
inc
int
push
push
fmuls
cli
orb
adc
xchg
inc
sti
pop
repz
dec
fdivrs
push
imul
xor
into
icebp
dec
jl
stc
pop
jae
or
push
mov
push
xchg
mov
movsl
adc
xchg
pop
xor
ljmp
adc
mov
mov
cmp
jl
ret
ja
jmp
push
aaa
pop
imul
xchg
ds
lods
mov
es
clc
mov
fidivs
and
sbbb
or
mov
adc
out
jl
inc
xor
cltd
ljmp
mov
mov
push
stos
mov
mov
lret
sahf
repz
fisttpl
jns
cmp
test
loopne
mov
xchg
jp
jecxz
repz
daa
lret
cltd
inc
in
sub
inc
std
arpl
lea
lret
imul
cmp
and
mov
inc
mov
jmp
arpl
test
push
or
dec
notb
addr16
leave
mov
sbb
xchg
test
jnp
dec
fsubrp
stc
incb
inc
xor
pushf
sub
subb
cmp
pop
add
mov
lahf
mov
rcll
mov
int3
pusha
xchg
arpl
lods
pop
pusha
hlt
lahf
fildll
adc
or
lock
fistl
push
sub
and
sbb
mov
xlat
add
mov
notb
and
lds
ret
lods
into
mov
loope
int
mov
out
lret
enter
lret
pop
push
test
divl
cmp
cld
dec
cld
bound
mov
inc
pop
call
imul
sub
cmp
sbb
sbb
icebp
xchg
jmp
mov
repz
out
aad
fidivrl
leave
inc
adc
dec
inc
jne
pop
jbe
mov
push
gs
push
dec
scas
mov
addb
aad
dec
dec
or
jns
lahf
cmpsl
js
je
sub
jbe
inc
mov
outsb
ret
daa
test
inc
jle
or
xor
jns
and
add
mov
rcl
pop
lret
sub
and
jo
adc
out
ds
cs
movsl
fnsave
mov
cld
test
ret
repnz
jmp
out
ret
xor
xchg
pop
cmpsb
jmp
test
jle
cmp
aad
mov
aad
cmp
add
dec
mov
push
sbb
and
inc
movsl
jg
mov
sub
mov
add
xchg
loopne
stos
jno
call
adc
in
jb
and
xchg
fs
ficoml
test
dec
jg
xchg
xor
sbb
jno
and
jmp
js
mov
mov
std
and
rcr
cmp
js
das
or
xor
dec
mov
inc
mov
lock
mov
dec
je
xchg
cmp
jo
es
xchg
shrb
dec
cmc
stos
cmp
push
faddp
mov
xlat
mov
jno
addr16
nop
mov
lds
stc
stos
rorb
pop
adc
popf
xchg
mov
loop
xor
loopne
js
sbb
mov
or
rorb
andl
aad
adc
test
rcrb
stos
and
dec
out
lea
add
mov
test
notb
pop
dec
jnp
fldl
add
jns
sub
jmp
in
dec
cmp
cmp
and
repnz
mov
adc
scas
je
inc
jmp
es
addr16
xlat
mov
pop
in
xor
jbe
das
and
in
outsb
mov
divl
cwtl
push
inc
test
out
fnstcw
test
xchg
popf
xor
xchg
dec
int3
or
sbb
push
adc
xchg
out
sbb
jecxz
js
es
sub
dec
lds
and
imul
xchg
sbb
jo
cmp
sub
mov
js
pop
xchg
or
push
push
jle
jl
nop
push
cmp
cltd
rcr
fists
int
jmp
repz
mov
shrb
push
lods
sbb
add
pop
sahf
jo
or
dec
jecxz
push
mov
push
outsb
xor
mov
or
roll
push
addr16
imul
loopne
mov
cwtl
push
ja
mov
fsubs
ret
notl
imul
sub
and
scas
adc
fsts
dec
das
lods
pop
ror
and
jne
mov
lret
add
or
adc
scas
xchg
xchg
jl
clc
ss
cmpsl
push
push
lcall
fs
cmp
xchg
and
mov
mov
cmp
push
pop
call
push
dec
cmp
and
js
das
inc
call
flds
xchg
xrelease
hlt
cmp
out
mov
idivl
test
sbb
ds
fdivr
aad
jmp
xor
loopne
pop
or
pop
inc
xchg
insl
int
pop
pop
push
fs
inc
or
xchg
stos
fcmovnbe
fistps
idiv
out
cmpsb
inc
inc
xchg
xchg
pop
adc
cmc
inc
push
lea
inc
mov
push
ljmp
inc
idivl
cmp
xor
add
es
inc
add
mov
and
jbe
aas
pusha
lret
xchg
bnd
fsubrs
mov
fwait
xchg
leave
ret
push
mov
scas
push
mov
pop
jb
dec
sbb
adc
inc
in
pop
push
push
mov
sub
jmp
cmpsb
scas
sti
add
mov
and
pop
out
iret
adc
cmp
dec
mov
sbb
int3
out
jne
mov
or
insb
and
frstor
hlt
pop
push
mov
jnp
popa
fiadds
sub
ja
cmp
sbb
lds
pusha
adc
inc
mov
sbb
xchg
jnp
imul
mov
popa
rcrb
nop
pop
mov
jnp
data16
mov
adc
jnp
sub
insl
pop
das
pop
or
fdivr
jmp
xchg
and
lods
adc
aaa
add
mov
jecxz
mov
and
lods
sub
mov
lret
push
ffreep
out
adc
in
add
fbld
jbe
mov
jmp
imul
sbb
ficoms
int
push
mov
or
inc
fstpt
gs
cmp
push
jl
adc
add
sysret
jno
sahf
jg
call
adc
jns
ljmp
cmp
mov
pop
sti
pop
gs
mov
mov
cmp
sbb
xor
adc
scas
jp
jp
mov
adc
mov
cmpsl
hlt
data16
jne
or
lods
rorb
ljmp
xchg
jl
cmp
in
xor
jmp
cmp
sbb
mov
das
mov
inc
sahf
les
mov
sbb
pop
shll
xchg
rcll
or
in
rcrl
sahf
lret
pushf
lcall
es
mov
call
cmp
out
test
mov
mov
mov
mov
aaa
loop
cmpb
pop
inc
sub
mov
ja
test
xor
pop
push
jmp
ja
mov
sbb
call
jmp
ds
insl
mov
fdivrl
and
bnd
fbld
jae
fwait
jns
inc
xorl
cmpsb
mov
mov
jle
xchg
iret
aam
push
adc
mov
and
aas
dec
cmpb
enter
cmpsb
fwait
or
mov
data16
jle
inc
jbe
jbe
mov
jge
or
mov
mov
and
sub
loope
jne
push
lds
dec
outsl
jb
mov
mov
and
xor
fstp
stc
sub
mov
test
pop
imul
out
addb
pop
fisubrs
ljmp
cmp
shll
mov
test
adc
fdivrl
js
pop
jae
repnz
rcr
xorps
mov
mov
in
insl
sahf
adc
sub
in
dec
mov
ret
mov
paddusw
sub
or
jg
in
push
and
popa
mov
loopne
xchg
pop
mov
test
ljmp
pop
das
push
pop
es
cltd
pop
mov
enter
out
push
cmp
test
dec
cli
mov
cmp
out
inc
add
in
mov
cmp
andl
jns
mov
outsl
repnz
xchg
jo
imul
xchg
arpl
popf
push
out
push
xchg
jne
or
gs
repz
cwtl
mov
lea
pop
popf
add
mov
test
test
sbb
push
mov
push
scas
scas
mov
orb
sbb
rcl
add
cli
inc
fistl
shlb
push
or
dec
call
mov
lret
mov
jno
cmovbe
jnp
mov
into
sti
fistps
jno
mov
add
sbb
pop
mov
mov
push
sbb
inc
push
ret
test
bound
orb
cmp
rcrb
push
scas
lods
xor
mov
sbb
popa
out
rcll
les
rorb
lods
decl
cltd
insb
loope
divb
and
sub
ja
lock
mov
incl
pop
incl
sbb
stc
clc
add
adc
sti
nop
mov
inc
in
fsubrs
arpl
out
mov
lds
mov
push
or
inc
gs
xchg
push
or
adc
gs
mov
adc
mov
inc
notl
shrb
sbb
mov
mov
in
xor
dec
jg
jo
std
iret
xor
es
std
add
or
adc
int3
push
push
daa
idivl
mov
sub
lcall
adc
icebp
mov
lahf
cs
xor
cmc
hlt
sbb
lods
jne
pop
filds
mov
add
out
scas
pop
mov
pusha
pop
cmpb
xlat
and
inc
inc
xchg
leave
jmp
pushf
cmp
push
jmp
adc
xchg
pop
jp
mov
cmp
into
jmp
xor
testl
jle
lea
nop
pusha
and
rorl
xor
ror
jmp
jp
outsb
adc
movhps
xor
and
mov
pop
shll
adc
pop
fs
idivb
cld
in
xchg
add
dec
jbe
addr16
pop
addr16
loop
sub
dec
sub
mov
scas
adc
add
out
xor
dec
fs
jae
mov
and
sub
or
lret
dec
xchg
sbb
das
test
jmp
and
es
xchg
and
fsubrs
xor
pop
xchg
shlb
dec
ret
lahf
fwait
subb
dec
sbb
inc
lods
jb
stos
and
push
fnsave
mov
jne
push
loop
lret
daa
loop
sarl
shlb
lahf
push
fsubl
mov
dec
rcll
fdivrl
cli
cmp
mov
pop
push
rcl
leave
imul
mov
xor
dec
pop
mov
xor
push
mov
fs
ret
and
rolb
sub
enter
mov
lret
movsl
stos
pop
pop
mov
jb
in
push
inc
and
out
pusha
ret
inc
pop
add
xor
inc
mov
mov
pop
or
out
scas
sbb
push
xchg
xchg
dec
mov
test
mov
mov
pop
bound
faddl
dec
cli
lods
xor
movsl
push
mov
and
mov
and
leave
and
mov
lock
aas
sub
cmp
dec
bound
insl
es
mov
push
in
adc
cmp
lret
pushf
adc
push
mov
or
inc
pop
jp
std
test
pop
loope
cmp
jmp
mov
rol
mov
rol
jnp
cli
lret
loope
insb
das
sub
jge
push
xor
inc
mov
sbb
lahf
enter
pop
cmp
test
or
test
inc
mov
sbb
mov
cmp
add
nop
xor
outsb
es
cmp
lods
loopne
leave
inc
mov
bound
lods
call
jl
fwait
xchg
mov
repz
pop
sub
ficomps
push
dec
sub
cmc
jnp
cmp
outsb
cmpsb
xor
pop
outsb
imul
jg
sub
add
or
arpl
mov
cmp
insb
inc
sub
mov
sub
add
stc
insb
mov
mov
daa
fadds
sbb
lret
jmp
sbb
mov
inc
aam
loop
fisttpl
cli
fwait
sbb
xchg
bt
xor
outsb
push
sti
pop
push
fdivrs
jmp
call
jb
mov
jae
push
jno
mov
imul
cmp
cmpsl
insb
jmp
test
mov
cld
loope
cli
add
js
test
aam
sub
mov
mov
mov
mov
xchg
lock
frstor
lret
ja
pop
inc
add
cmp
decb
sub
xor
mov
mov
adc
jecxz
test
fsubs
xchg
cs
push
scas
daa
mov
stos
jp
repnz
inc
ret
pop
pop
ret
jg
test
push
out
into
test
add
and
fildl
aad
sbbl
inc
je
cmp
loopne
ja
nop
das
ja
sbb
mov
ja
repz
repz
or
fstpt
aad
jae
sbbb
test
adc
addr16
cwtl
mov
pop
adc
adc
add
imul
shll
insl
or
mov
repz
dec
sbb
lds
xchg
sbb
divl
popa
push
loope
sbbb
repnz
xchg
adc
or
push
test
fidivl
insb
pop
inc
or
sbb
mov
lret
dec
out
aad
lcall
cmpsl
iret
mov
xor
xorl
cmp
std
jecxz
cli
adc
call
push
xchg
add
cltd
push
movsl
or
xchg
adc
fs
xor
or
sub
aad
call
mov
mov
adc
pop
mov
xor
push
stc
sbb
insb
dec
stos
mov
fmuls
inc
rcll
add
hlt
shl
negl
sbb
sbb
sbb
mov
dec
pop
lods
in
dec
or
icebp
pop
aad
fistpll
jg
xchg
js
incb
sub
out
mov
mov
adc
push
lock
inc
imul
fdivs
fsts
xlat
adc
cmp
add
imul
cmpl
and
inc
subl
mov
dec
int
sbb
test
addr16
loopne
cmp
push
cwtl
pop
pop
shlb
jmp
add
in
pop
loope
faddl
rorb
popf
sbb
and
js
mov
cmpsb
push
shrb
cs
fmulp
mov
mov
arpl
pop
inc
aam
mov
cli
dec
cmp
jg
data16
mov
jne
or
std
rol
bound
add
jne
bound
pop
fs
int3
jnp
push
adc
jmp
je
sbb
pusha
bound
jno
test
das
idiv
xlat
mov
sub
cmp
dec
jae
clc
mov
sub
or
mov
aam
ret
pop
stos
ss
add
mov
aam
jmp
add
xor
pop
lret
push
jae
adc
mov
fstps
xor
clc
push
leave
pop
xor
cmpsb
mov
inc
stc
mov
push
or
adc
lcall
fnsave
inc
insb
xchg
insl
adc
lret
call
xchg
data16
fmul
mov
test
adc
loopne
je
push
iret
sti
addr16
pop
test
stos
mov
xor
data16
inc
mov
test
bound
adcl
pop
sbb
inc
cs
lret
push
js
data16
mov
jae
pop
adc
mov
push
out
jecxz
xor
mov
js
js
xor
push
cmpsb
sbb
push
sbb
add
adc
sub
mov
push
stc
pop
lcall
inc
in
xchg
or
in
xchg
cld
jg
pop
imul
mov
add
mov
adc
add
pmulhw
cld
jb
loop,pn
mov
and
int
repz
jo
iret
mov
aas
jecxz
lcall
xor
cmp
push
cwtl
scas
pop
jp
les
lcall
mov
es
and
sbb
or
aad
out
mov
repnz
shr
cmc
test
adc
mov
and
js
int
stos
sub
push
mov
sub
xchg
outsl
orl
adc
orl
test
push
icebp
mov
sub
shll
jae
mov
push
inc
jo
or
insb
hlt
and
pop
jp
mov
sub
dec
imul
lcall
push
or
mov
pop
outsb
xchg
movsb
in
hlt
add
notl
loopne
cmc
mov
cmp
mov
popa
outsl
dec
das
xchg
sbb
out
push
or
insb
push
scas
in
inc
in
fnstenv
push
xchg
jecxz
push
pop
push
stos
cmp
mov
fwait
int
testb
js
dec
mov
inc
or
imul
pop
and
push
add
mov
jno
cmp
sbb
adc
jns
cmc
jge
pop
xor
arpl
pop
lret
stos
pop
and
mov
xor
stc
stos
cmp
movsl
cmp
popf
mov
lret
test
sbb
mov
cmpsl
add
fistl
jl
mov
jecxz
add
imul
daa
xor
pusha
push
roll
pusha
sbb
out
xor
into
dec
test
icebp
and
cmp
dec
pushl
or
call
popa
shrl
sahf
aam
ja
fisubs
jl
push
lret
push
adc
mov
movsl
out
sbb
cli
push
push
cmp
and
lea
pop
aas
sub
mov
je
mov
cltd
lahf
gs
and
movsl
mov
mov
iret
cmc
inc
ljmp
sarb
test
std
pop
xchg
pushf
ja
dec
or
jmp
clc
xchg
jno
fdivrl
sbb
mov
mov
sahf
mov
ret
orb
mov
in
sub
push
pop
loope
inc
and
cmpsl
add
scas
scas
je
fildl
fs
inc
adc
loop
and
sbb
lds
fcomps
arpl
imul
cld
mov
inc
int
jecxz
insb
loopne
sbb
sbb
jg
or
imul
add
push
or
xchg
movsl
stc
jge
mov
pop
outsl
xor
rorb
or
outsb
fsubrs
icebp
jg
jne
cltd
cmp
jl
and
ficomps
imulb
jbe
insl
pop
ss
shlb
fcoms
push
je
inc
push
imul
xor
add
mov
lret
out
xchg
and
push
pcmpeqb
popa
inc
repnz
stos
or
sub
sti
bts
jle
jne
popf
xor
sahf
cli
aam
fbstp
shrb
outsb
inc
pop
xlat
in
adcb
cwtl
sub
cmove
lods
adc
int3
mov
xchg
push
or
sub
xor
fildll
and
jns
lret
adc
repnz
js
out
dec
jg
xchg
insb
aas
in
ss
fldcw
push
or
into
fsubrp
lods
jge
jmp
inc
mov
iret
dec
or
jge
sbb
jns
mov
outsb
mov
mov
xor
lea
fmul
inc
lock
outsl
sahf
pusha
in
cmp
addr16
insb
gs
inc
in
xchg
aas
xor
les
push
xchg
nop
gs
lret
hlt
fists
push
in
aad
psubb
aad
jbe
sub
pop
addl
iret
push
xchg
repnz
fdivs
push
xor
sbb
test
xor
rcrl
adc
stc
add
sub
repz
mov
jno
outsl
loop
sub
sub
es
sub
lods
dec
out
cwtl
add
lret
aad
iret
pop
mov
stc
mov
bound
ret
in
and
ss
movsl
and
xchg
pop
cs
addr16
enter
add
xor
sbb
int3
add
loope
inc
insl
loope
push
xlat
and
dec
add
mov
pop
stos
lock
inc
imul
or
ror
cmp
insl
mov
insb
test
mov
call
pushf
push
scas
lret
add
pop
ror
aam
cmp
pop
aam
cmp
mov
daa
movsl
pop
push
nop
mov
push
loope
sti
insl
mov
mov
jge
es
xchg
std
fdivp
insb
pop
adc
in
pop
daa
and
add
dec
daa
sub
cs
js
and
clc
testl
daa
test
out
xor
mov
push
out
scas
lock
or
aas
jo
popa
push
inc
push
fistl
jmp
xchg
repz
inc
lcall
outsb
lahf
in
sbb
shlb
jle
sbb
pop
jae
adc
mov
je,pn
push
sub
push
mov
enter
xor
movsb
cmp
fdivs
fmuls
sub
push
add
stos
jne
push
adc
mov
hlt
loope
dec
xor
mov
xchg
packssdw
sub
stc
outsb
cmpsb
and
adc
fld
fcmovb
fcoms
push
jp
mov
sub
arpl
jmp
sub
push
jae
scas
cmp
and
loope
adc
jmp
insl
iret
mov
repz
sbb
scas
or
sbb
dec
aad
inc
int3
sti
inc
add
dec
inc
mov
mov
inc
int3
rolb
jb
leave
mov
pop
popa
xchg
addl
movsl
jle
adc
in
stos
data16
add
cmp
es
sbb
xchg
dec
test
rcrl
mov
aam
mov
testb
pop
pusha
adc
xchg
xor
mov
add
mov
sbb
cmp
imul
push
adc
sub
cltd
mov
aam
test
dec
fisttpl
test
pop
enter
pop
stos
mov
fdivl
repz
sarl
push
lods
xlat
pop
pop
or
add
dec
and
mov
xor
gs
nop
xchg
rcrb
cmpsl
add
and
sub
fnstcw
lret
aam
lods
lret
hlt
loope
xor
repnz
or
jno
addl
jmp
and
nop
pop
es
aas
and
and
sbb
cmp
sbb
pop
in
inc
cmp
jbe
pop
ret
inc
ret
inc
bswap
mov
js
lcall
push
adc
sar
dec
ss
mov
adc
pop
lds
decb
test
xchg
add
fdiv
adc
adc
ljmp
cld
dec
stos
stos
sbb
enter
mov
das
inc
adc
jle
lock
xor
add
arpl
adc
inc
xchg
pushf
hlt
push
mov
push
adc
adc
aas
mov
sub
into
cmp
orl
push
je
in
pop
mov
adc
pop
adc
dec
adc
push
into
movsl
cmp
mov
or
test
rol
cs
sub
addl
and
loope
adc
hlt
arpl
orl
xchg
jmp
mov
mov
test
mov
jb
into
xorl
adc
cltd
ss
std
cmp
mov
adc
out
ror
inc
pop
stc
xchg
dec
cs
and
mov
mov
imul
jmpw
int3
inc
aam
mov
and
mov
mov
jbe
xchg
push
icebp
es
rorb
ficoml
xor
sahf
xchg
mov
add
jmp
xor
test
mov
or
add
iret
rclb
jns
movsb
jb
stos
aam
dec
hlt
dec
in
mov
mov
dec
mov
jnp
popf
mov
movsb
adcb
sbb
addr16
shl
mov
xchg
push
xor
stos
xor
loope
cmpb
pop
mov
mov
lret
xchg
cmc
mov
ret
inc
aam
xor
jno
mov
cmp
inc
mov
repz
in
mov
cld
std
xlat
add
dec
add
push
cld
int
mul
shl
out
mov
arpl
jg
std
and
sbb
mov
jge
das
mov
mov
jmp
jle
xor
addl
cltd
inc
jge,pn
fwait
mov
lret
mov
sub
leave
pop
arpl
pop
stos
out
sbb
cmp
pop
or
jno
popf
sub
lods
lods
imulb
push
das
mulb
outsl
xchg
or
xchg
pusha
repz
adc
jmp
add
mov
nop
inc
addr16
jb
shrb
inc
ljmp
ret
ljmp
adc
fbld
addr16
push
or
or
xchg
call
sbb
movsl
cltd
js
mov
in
push
mov
sub
js
mov
out
fists
lods
fmulp
es
inc
aad
add
adc
ret
lock
adc
ss
or
in
int3
imul
out
jae
pop
dec
ror
fstpl
dec
sti
fidivrl
push
push
nop
inc
dec
lods
hlt
movsl
clc
mov
jo
push
push
cmp
and
or
negb
rcrl
std
scas
aam
sbbl
dec
or
insl
dec
sbb
fcoml
jae
jb
add
push
scas
cmp
adc
and
sbb
inc
xor
fildl
pop
xchg
int
lret
fmull
into
sbb
std
lds
lret
or
incb
xchg
xchg
cmp
inc
test
xchg
xor
bound
sub
das
push
cmpsb
mov
mov
aam
pop
push
popa
ds
out
addr16
inc
jno
pusha
pusha
roll
sbb
imul
leave
iret
lock
dec
pushf
sbb
dec
dec
js
xchg
or
ljmp
outsb
into
rcrb
push
dec
orl
push
sahf
mov
and
imul
cld
or
js
mov
push
push
cmp
sub
sub
and
les
mov
lret
sbb
clc
and
mov
insl
xchg
mov
enter
add
pop
clc
jl
sahf
push
rolb
flds
sbb
xor
push
and
push
call
outsb
xor
sahf
cmpb
push
dec
jno
push
mov
mov
push
xchg
lea
lea
jl,pt
ficomps
ret
flds
repz
roll
std
and
test
shl
sbb
cld
mov
inc
les
pop
xlat
mov
xchg
lods
pop
fadds
ljmp
mov
mov
rcll
mov
daa
mov
and
sub
mov
mov
fmuls
icebp
pushf
or
rcrl
std
arpl
xchg
fucomi
punpckhdq
mov
mov
add
jb
lcall
xor
mov
xor
out
pop
lods
pop
add
add
lods
ljmp
inc
xchg
adc
sub
xor
cmp
push
jl
jecxz
inc
xor
lret
push
sbb
push
and
cmp
notb
clc
enter
push
mov
lds
inc
test
popa
or
mov
jno
jb
and
xchg
sbb
daa
insl
hlt
adc
jbe
call
adc
sub
cmpxchg
fisttpll
movsl
mov
pop
aam
xor
xchg
jae
in
icebp
dec
daa
xor
sti
xor
xor
mov
jmp
scas
scas
insb
fldcw
sbb
mov
sahf
add
shlb
inc
xor
in
push
sahf
nop
mov
push
mov
lcall
lcall
push
daa
sete
and
add
inc
lea
inc
push
xlat
mov
divps
push
je
insl
pop
dec
pop
mov
mov
flds
pop
dec
sub
outsl
bound
mov
dec
sbb
in
jb
aam
jns
lods
mov
cmp
xchg
and
or
dec
bound
std
pop
jno
sbb
cmp
xchg
add
mov
mov
or
lods
stos
mov
lock
push
jnp
or
rorb
loope
fiadds
test
or
xor
dec
cmp
adc
test
popf
in
or
sub
sahf
push
cltd
in
jns
cld
rol
dec
cmc
push
push
xor
sbb
add
sbb
push
cmc
and
adcl
xlat
negb
xchg
mov
loop
jno
or
dec
mov
jmp
jge
test
movsl
leave
add
lcall
xchg
jp
or
mov
jl
pop
push
scas
or
mov
ss
stos
cmpsb
aad
mov
sub
enter
and
or
jnp
pop
arpl
cmpsl
jmp
lods
pop
ja
pusha
push
out
sti
mov
jecxz
sub
mov
in
mov
jecxz
or
ficoml
pop
add
js
xlat
lcall
fstl
test
mov
push
push
and
movsb
and
lret
repz
lcall
aaa
xor
out
fdivr
shl
adc
jo
ret
xchg
mov
jmp
fnstenv
and
push
sub
cld
ficoml
out
filds
ret
fidivl
stos
cwtl
call
sbb
fidivl
and
cmc
out
sub
push
lock
cmp
cmp
aaa
lods
leave
xchg
pop
sub
rcll
scas
inc
mov
cmp
jmp
pop
and
xor
lock
es
in
push
outsb
xor
push
push
fsub
rclb
mov
and
fnsave
repnz
or
cmpsb
das
xchg
or
fldt
jl
xchg
pusha
out
or
imul
jp,pt
and
mov
pop
stc
adc
lods
stos
xchg
cmp
push
clc
add
mov
repnz
cmp
xchg
push
les
movsb
movsb
fwait
test
nop
fs
movsb
jno
jp
es
in
leave
mov
rcll
sti
or
xchg
loop
push
insl
scas
mov
js
outsb
adc
mull
pop
gs
cmp
mov
or
push
fisttpll
mov
cmp
cmp
push
mov
clc
mull
fcoml
sti
fdivs
imul
mov
sub
pop
ja
lds
ret
out
shlb
mov
mov
sbb
mov
in
sub
cmp
inc
mov
dec
repnz
lahf
clc
push
pop
bound
xor
xchg
insl
sub
adc
mov
popf
xor
scas
xchg
out
xlat
shlb
mov
push
scas
pop
stos
aad
aas
and
test
orb
pop
add
pushf
push
sub
inc
sub
jg
push
push
and
andb
ss
mull
outsb
dec
sub
jmp
fcmovu
loop
ljmp
les
xor
inc
lods
popf
xchg
mov
sbb
gs
pop
push
push
inc
push
fcomi
mov
popf
int
pusha
adc
xchg
pusha
add
xchg
dec
jmp
fstpl
je
push
testl
mov
mov
or
cmpb
imul
push
gs
ret
loop
in
testb
pop
xchg
pop
mov
nop
push
mov
mov
les
xor
sub
sbb
in
loopne
dec
mov
jge
xchg
push
fistps
enter
and
pop
pop
lret
push
mov
outsl
daa
stc
mov
mov
xor
cmp
into
in
arpl
add
xchg
outsl
jo
in
ret
xchg
out
nop
cmc
sbb
and
push
mov
outsl
cmp
sbb
aas
sbb
cmpsb
adc
add
mov
push
inc
je
clc
aam
mov
mov
sub
fidivrl
jnp
nop
lods
je
sahf
and
cmp
pop
test
addl
lods
call
frstor
cmpsb
ret
ss
orb
jl
and
loop
loop
stos
dec
mov
cltd
insl
cmc
mov
xlat
mov
add
int3
pop
int
loop
cltd
mov
enter
and
push
bts
or
push
inc
pop
clc
mov
mov
jne
sbb
pop
cmp
mov
inc
pop
mov
into
jg
scas
pusha
add
push
jp
push
test
mov
andb
fmull
fsubs
inc
and
mov
push
in
or
repz
sbb
loope
xchg
std
popf
sbb
jmp
into
add
cmp
push
mov
fwait
fwait
jae
in
pop
push
lret
shlb
out
pop
mov
test
sub
leave
add
lcall
adc
lds
divb
adc
or
inc
jge
cs
iret
cmp
stc
dec
daa
xchg
and
flds
push
mov
cwtl
loop
mov
mov
push
push
clc
popf
call
push
arpl
mov
or
ret
mov
mov
sbb
movsl
stos
fadds
mov
jp
movl
pop
sbb
ret
cmp
out
clc
out
xor
je
cmp
inc
sub
dec
shll
fcmovu
cltd
dec
aas
inc
push
add
jb
jg
inc
xchg
sbb
and
xchg
test
mov
dec
jno
les
shrb
repnz
cmp
push
mov
xchg
push
inc
sbb
fnstcw
mov
push
cld
pop
fistpl
in
xchg
cs
push
movsl
cmpsl
add
es
mov
sbb
std
nop
fwait
mov
and
jge
movl
push
rolb
fnsave
jmp
mov
nop
stc
xchg
mov
pop
sbb
bound
aas
lea
out
lods
loopnew
movsb
pop
scas
jae
adc
pushf
mov
and
mov
orb
lea
int
pushf
mov
jg
jmp
push
or
jns
js
in
lods
push
mov
cmpsl
xor
gs
cli
scas
mov
pop
jmp
mov
loope
mov
sub
imul
xor
cmp
inc
cs
das
mov
lods
outsl
aas
hlt
xchg
jecxz
jle
xchg
test
cmp
movsb
not
jae
shr
ds
ret
imul
mov
lahf
cmp
xor
lods
scas
xor
add
loop
mov
jp
lea
mov
fistpll
inc
rol
pop
push
mov
xor
mov
mov
cmp
mov
dec
int
stc
enter
mov
lahf
and
xchg
inc
mov
outsb
jbe
into
cmp
xchg
test
test
push
add
jb
in
mov
adc
shll
or
jb
hlt
push
lret
data16
sbb
cmpsl
adc
xor
cmp
je
sub
mov
nop
mov
in
test
fdivs
cld
imul
mov
orb
push
ja
sti
dec
lock
into
push
xor
lock
cs
cmc
push
test
inc
call
cld
pop
lcallw
movd
add
dec
push
cmc
push
xor
out
aad
bound
jge
gs
jmp
sub
scas
ret
sbb
iret
shll
xchg
xchg
vunpcklpd
pop
pop
and
test
out
cmp
jo
sbb
out
mov
add
fwait
lea
add
mov
lret
movsb
addb
sub
fstpl
mov
movsl
jecxz
iret
jne
xchg
cli
mov
xchg
pop
aad
cmp
in
es
push
dec
sbb
and
jmp
mov
xor
and
es
fwait
sub
push
xor
insl
bswap
pusha
adc
int3
rcrb
js
sub
dec
shll
fucomi
test
xchg
jge
jecxz
xor
mov
movl
out
lods
jbe
add
add
iret
adc
pop
icebp
lret
das
push
adc
sbb
push
lods
lahf
inc
jb
ret
int3
push
icebp
xchg
inc
xchg
aaa
in
test
fldcw
fcoml
mov
jle
sarb
int
pushf
mov
test
pusha
loop
dec
das
inc
ret
data16
inc
sub
sub
mov
pop
cld
jle
out
sti
pop
and
xchg
cmpsb
adc
lahf
push
in
sub
xlat
insl
fiadds
dec
cmp
dec
sub
imul
xchg
xchg
movsl
pushf
or
in
inc
fcompl
mov
mov
stc
mov
movzbl
or
xchg
nop
test
push
out
lcall
xor
mov
push
xchg
enter
and
stos
cmp
jmp
movsb
pop
xchg
mov
and
add
decb
adc
mov
test
push
sbb
jbe,pn
insb
sub
pop
mov
sub
push
and
scas
ret
mov
mov
push
insb
xchg
mov
mov
loop
xor
out
add
and
icebp
shll
fstpt
mull
ds
sub
loopne
mov
push
xor
aaa
sub
daa
rcll
stos
mov
add
dec
jmp
out
les
or
lock
adcl
int
lahf
xor
insb
dec
aaa
mov
cwtl
aas
outsl
mov
cmpl
sbb
jg
or
pop
jae
test
sahf
daa
lods
jmp
bswap
sub
fstp
dec
add
sbb
mov
push
mov
xor
outsb
mov
inc
sbb
and
cltd
inc
xlat
int
mov
mov
push
daa
xor
cmp
mov
xchg
cs
cmpsb
insl
mov
loop
mov
mov
mov
pop
es
arpl
imul
pop
jno
inc
inc
cmp
loopne
iret
sub
ljmp
fcmovbe
pusha
xchg
insb
pop
mov
js
mov
sbb
mov
imul
loope
sarb
or
into
jl
push
adc
cli
or
xchg
cmc
mov
mov
outsl
xchg
pop
cld
or
lret
mov
in
aam
mov
pusha
cli
sbb
lret
insb
sbb
or
jns
lret
daa
mov
outsb
lret
jmp
jle
in
subl
test
test
jl
adc
hlt
scas
loope
dec
adc
pop
adc
sbbl
test
aaa
lahf
jnp
jp
sbb
pop
push
jb
push
mov
jno
sbb
xchg
add
rcrl
sarl
lret
js
in
popf
cmp
lret
iret
jo
cltd
imul
or
xlat
aam
adc
fldenv
mov
push
sbb
and
nop
stos
or
ja
dec
nop
sub
mov
push
xchg
jnp
push
pop
das
lcall
js
notb
and
fstl
push
imul
jae
xchg
fsubp
addr16
lret
push
jl
pop
add
xchg
cmp
mov
sahf
or
inc
mov
fnstsw
mov
clc
mov
sub
cltd
adc
mov
fidivrl
inc
stos
mov
imul
popf
or
push
push
divl
cld
les
and
nop
sub
movsl
cs
rorb
push
xchg
push
lret
dec
call
sub
std
insl
push
insb
or
jno
mov
andb
jne
insl
or
and
cmc
or
mov
push
aaa
cli
mov
jnp,pt
leave
pusha
inc
push
xor
cltd
push
pushf
push
jno
push
lahf
pop
and
mulb
in
std
sub
cmpb
cmp
popl
cli
lods
ja
inc
test
pop
add
mov
cmp
inc
adc
pop
adc
stc
leave
test
dec
mov
mov
int3
xor
sbb
out
loope
jmp
push
push
push
outsl
mov
cwtl
sar
fbstp
cmp
xor
pop
xor
inc
aaa
mov
mov
sub
sbb
add
cmpsl
aaa
push
lcall
fcoms
xchg
sub
pop
adc
pop
int
fwait
xchg
cmpsl
out
xor
mov
fdivrp
fldcw
cmpsb
adcb
popa
fnsave
subl
insb
lahf
jl
cli
fs
nop
xchg
rolb
rcrl
push
imul
cmp
or
inc
adc
xchg
push
aad
and
test
loop
test
mov
push
stc
cmp
adc
scas
int3
pop
notl
pop
jmp
cltd
ja
jecxz
outsb
fidivs
sub
xchg
je
xchg
add
mov
sub
lahf
mov
pop
xorb
or
lcall
push
lcall
imul
mov
popf
loop
pop
push
sbb
pop
mov
pushf
dec
xchg
outsb
sbb
and
add
xor
cmp
into
aas
in
or
cld
xor
movb
xor
ss
mov
andl
xchg
jb
push
cld
fs
cmpsb
aam
pop
daa
insl
aad
adc
iret
adc
jne
push
sub
pusha
or
xlat
push
out
sub
mov
jno
sub
mov
adc
mov
pop
lds
cmp
and
ss
into
fs
cmp
mov
stc
enter
push
sub
add
test
sbb
int
xchg
sbb
cltd
add
sbb
pop
mov
cmp
jno
addl
pushf
clc
push
push
jne
mov
insl
sub
out
rol
xchg
pop
jae
insb
xchg
lea
dec
imull
and
pushf
mov
lret
mov
sub
aas
pop
cmp
adc
pushf
jne
lret
or
stos
jecxz
ljmp
jle
add
test
and
or
ljmp
or
inc
jl
jb
idivb
scas
pop
icebp
fs
neg
mov
xorl
clc
int3
data16
push
outsl
adc
lret
popl
test
xor
movsb
sub
push
fnsave
mov
jo
xchg
push
repz
mov
mov
mov
nop
mov
cmpsb
scas
fwait
adc
jl
adc
mov
sbbb
jnp
aas
and
lock
shlb
push
icebp
fsubrl
fwait
jnp
insl
adc
mov
mov
mov
mov
or
jnp
in
idivb
fnsave
cli
inc
sub
sub
js
push
jne
mov
call
inc
inc
lret
mov
dec
jo
xor
and
aam
xchg
out
lret
imul
fldl
add
bound
sahf
test
vpunpckhqdq
lds
sub
xchg
test
mov
xchg
xor
mov
ret
mov
add
adc
and
push
cmc
cmp
int3
push
jo
dec
iret
aas
fdivl
push
lds
pop
sarb
sub
and
mov
shll
xchg
pop
mov
cmp
sub
lret
jp
mov
iret
fdivs
dec
xor
outsl
push
mov
data16
rorb
dec
xor
repnz
inc
fiadds
ds
lds
dec
sbb
int3
stos
adc
adc
sti
popa
mov
divl
sub
retw
or
jns
and
popw
mov
jnp
inc
pop
mov
add
dec
push
lock
add
sbb
or
push
in
sbb
jp
scas
mov
add
in
lds
dec
movsb
repnz
pusha
lods
ficompl
insl
arpl
call
cmp
pushf
popf
push
mov
xlat
mov
jmp
and
xor
add
fs
loope
add
jp
fs
fstps
dec
jle
pop
sbb
xor
adc
xor
sbb
fnstcw
push
mov
cmp
call
mov
insl
pop
and
adcl
sbb
and
cmpsl
std
pop
arpl
mov
test
or
test
and
pop
xchg
fistpl
lcall
xor
iret
cltd
lahf
mov
and
fisubs
mov
or
imul
insl
cwtl
nop
or
test
out
pushf
or
enter
cwtl
shrb
pop
xor
jb
in
in
arpl
fsubs
hlt
mov
out
cld
mov
addb
push
sti
and
dec
imul
push
rcll
in
adcl
mov
movsl
jg
mov
test
das
push
adc
filds
repnz
pushf
sub
int3
shlb
dec
push
mov
add
xor
pusha
add
xor
pop
xchg
ret
mov
mov
sub
shl
inc
loope
sbb
leave
bound
mov
mov
xchg
sti
icebp
shrb
or
xor
mov
cmpsb
xchg
bound
push
push
adc
addl
scas
adcl
jnp
imulb
pop
ja
and
in
sub
inc
popa
mov
pushf
sbb
sbb
xor
pop
les
or
and
mov
ret
xchg
cmpsb
or
xchg
pushf
mov
mov
inc
fldcw
imul
xchg
in
cmovo
push
inc
aam
pop
inc
insl
push
test
outsl
push
ljmp
or
inc
in
imul
pop
in
cmp
and
aam
xchg
sub
lret
test
test
sub
outsb
xchg
or
loopne
sti
push
pop
xor
mov
insl
mulb
leave
pop
mov
xorb
mov
pop
in
sti
rcrl
cmp
stos
jns
pop
jecxz
ss
push
imul
stc
in
sbb
jae
jno
lret
sahf
mov
cmpsb
sub
inc
adc
sbb
sbb
and
xor
pop
xchg
push
and
add
mov
sbb
inc
add
adc
push
adc
andb
jp
lcall
in
cmpsl
inc
mov
adcl
mov
les
test
xchg
mov
sahf
sub
dec
adc
sub
mulb
mov
add
mov
sub
daa
aam
leave
mov
push
add
sbb
sbb
dec
imul
cmp
fadds
out
add
push
jno
lods
pop
fidivl
xchg
mov
mov
lods
sbb
movb
ss
or
jp
add
or
xor
out
or
cmpsl
xchg
cltd
popa
jmp
fucom
iret
xchg
lods
and
push
sub
jmp
outsb
mov
addl
push
subb
push
pushf
jnp
xchg
cmpsb
out
jge
repnz
pop
mov
iret
jp
xchg
out
pop
das
jle
xchg
and
scas
lret
or
xchg
ffree
cmp
scas
sahf
mov
loope
aaa
xchg
mov
daa
mov
aas
jl
fimuls
cmc
in
andl
repz
je
mov
adc
mov
int3
imul
fmull
rcrb
push
fwait
rcr
mov
mov
jb
pushl
pop
xchg
ds
aad
sub
sub
scas
outsb
std
push
and
test
faddl
mov
add
call
loopne
fdivl
insb
stos
and
inc
jp
adc
or
les
sbb
jo
mov
or
jne
movb
fidivl
loope
out
xchg
mov
cmpsb
sarb
mov
jns
inc
es
aam
pop
inc
sbb
mov
dec
into
or
or
or
popa
addl
sar
je
filds
xchg
into
das
mov
sbb
adc
mov
loopne
xchg
dec
cltd
push
into
out
xor
mov
xchg
sub
mov
pop
or
rcrb
or
xchg
ja
pop
mov
aam
mov
mov
push
cmp
and
mov
dec
jno
call
push
int
es
loop
jb
imul
cmp
dec
das
or
jg
cltd
push
add
mov
lods
sbbb
pop
dec
fmul
dec
orb
pop
sbb
jl
adc
cmp
dec
jbe
pop
out
clc
pop
jno
js
inc
sarl
outsl
sbbl
mov
bound
insl
notb
xchg
sbb
jns
fildll
xor
lds
data16
mov
in
pop
pop
cmp
rcrb
adcl
test
pop
call
push
mov
std
sbb
stos
add
outsl
jns
aas
push
fmull
jne
or
sub
jp
cmp
jo
lods
mov
fbstp
pusha
inc
dec
outsb
imul
xchg
stc
out
jge
inc
into
jns
jae
rcll
pop
push
pop
jns
sub
sub
icebp
ja
int
sub
test
jmp
inc
sarb
nop
dec
inc
loopne
cs
jno
pusha
inc
sbb
sti
add
movsl
dec
inc
xchg
dec
xlat
xchg
xchg
fs
int3
out
push
inc
mov
aad
add
and
mov
jmp
sbb
inc
int3
ljmp
into
mov
dec
pop
repnz
imul
push
xchg
test
rolb
sti
inc
mov
fwait
bound
mov
inc
lret
shrb
and
mov
mov
lahf
lahf
sub
lahf
lahf
push
stos
aaa
push
jb
xor
push
or
xchg
into
jbe
pusha
inc
push
adc
push
or
sti
push
sar
adc
xor
popa
inc
mov
fs
mov
xchg
xorb
ss
gs
aad
testl
cs
push
fs
stc
jae
dec
sub
mov
mov
dec
fwait
mov
dec
sub
test
sbb
ljmp
or
xchg
outsb
adcl
push
add
push
cli
push
dec
psubsw
ja
pop
loop
sti
movsb
mov
push
iret
dec
sub
pushf
sbb
add
and
jnp
insb
das
out
ret
in
cmpsb
out
clc
cmp
dec
ret
bndstx
popa
je
mov
jnp
add
or
dec
psubsb
fdivs
sub
fldt
sub
xor
out
icebp
js
fwait
dec
das
pop
dec
inc
sub
push
pop
mov
jne
add
xchg
xchg
cmpl
mov
or
in
push
cmp
jge
in
push
fdivrl
mov
fsts
adc
cmpb
loope
or
pop
test
and
sti
lods
addb
xchg
inc
rorl
cli
in
pop
and
aaa
cs
lahf
les
fstpl
dec
add
sub
pop
add
sahf
jmp
je
rcrb
push
ds
je
jb
divl
sahf
repnz
mov
or
add
andl
mov
inc
xchg
cmp
dec
rol
and
xchg
idivb
ds
inc
int
cwtl
lea
mov
dec
mov
push
xor
xchg
dec
mov
fwait
add
je
out
fs
cmp
jno
lock
dec
sti
out
xchg
addb
nop
cs
dec
das
ja
xchg
push
pop
lret
jmp
dec
fnsave
int
mov
mov
out
xlat
mov
sbb
xchg
jecxz
dec
sub
es
mov
pushf
sub
xchg
ja
push
popa
sbb
in
and
ret
dec
jmp
adc
xor
cmpsb
pop
mov
ret
rcr
xor
inc
mov
jbe
mov
pop
or
sub
leave
xor
and
push
xchg
imul
lods
jns
inc
imul
js
inc
cmp
and
je
lahf
xor
popl
jg
pop
inc
mov
clc
push
test
and
xor
push
gs
cmp
adc
mov
and
jge
jnp
call
pushf
sbb
dec
xorl
adc
and
mov
call
pop
mov
pop
dec
int
loopne
mov
adc
push
sbb
addr16
loop
popa
push
outsb
ds
and
out
and
jge
mov
in
adc
das
sub
pop
pop
sbb
aad
pusha
push
push
cmpsb
outsb
pop
add
push
xchg
test
jno
adc
push
dec
jecxz
ret
adc
push
fcmovnu
inc
mov
mov
and
aaa
mov
sbb
mov
rol
fdiv
mov
xor
outsl
xchg
xorb
clc
pop
lods
fadds
les
dec
mov
adc
mov
daa
test
enter
ror
clc
movsl
mov
xor
scas
xor
xlat
add
mov
ss
lods
jnp
sub
dec
add
xchg
test
mov
bound
aas
in
addb
mov
nop
pop
imul
jl
lret
mov
push
pop
std
jg
inc
js
ja
pushf
fcoml
aad
cld
sahf
cmc
or
xchg
into
lea
inc
cmp
mov
fwait
or
lods
push
or
ja
mov
sub
sub
jl
adc
jmp
icebp
push
push
lahf
lahf
iret
xchg
fistl
stc
jle
jl
shlb
mov
pop
cmp
aas
and
icebp
sbb
cwtl
cmp
test
ret
mov
inc
xor
mov
in
xor
or
lds
push
loopne
scas
sbb
outsl
add
out
pop
arpl
push
ret
and
xorl
clc
mov
sbb
lods
push
movsl
dec
mov
add
dec
jne
imul
inc
add
sub
popa
add
pop
andb
push
mov
sub
sbb
rcll
callw
les
pop
sarl
insl
inc
cmp
icebp
dec
dec
dec
ja
cltd
push
mov
cmp
sub
gs
in
sub
lods
idivl
mov
push
mov
mov
add
stos
in
aad
fisttpll
push
js
movb
jle
sbb
fildl
popa
sub
xchg
add
in
int3
push
mov
push
mov
ljmp
fisttpl
sub
mov
mov
jb
rcll
daa
test
test
jg
add
insl
lret
movsb
push
xor
jl
stos
inc
xor
xlat
push
xchg
inc
jle
add
sbbb
xor
adc
cmp
mov
push
mov
fnstsw
loopne
xor
dec
or
push
jle
cld
sub
in
into
or
icebp
lcall
jge
cmpsb
clc
mov
xchg
jecxz
and
out
xlat
pop
bound
xor
mov
push
add
out
rcrb
lahf
push
mov
jnp
fisubl
add
cmpl
call
jnp
inc
aam
cmp
fldl
outsl
add
lret
je
pushf
sub
bound
add
fcom
mov
icebp
sbb
sbb
mov
fnsave
jle
push
add
inc
pop
xor
and
jmp
xchg
and
fidivrs
sbb
stos
cmp
sub
jecxz
pop
mov
pop
repnz
xchg
inc
shl
xor
out
jg
out
lret
or
sub
loopne
xchg
and
inc
je
adc
stos
imul
sbb
fxch
loopne
adc
ficoms
xchg
adc
add
out
movsl
mov
xchg
sub
push
mov
js
les
nop
or
dec
cmp
mov
lea
sbb
lret
pushf
mov
sbb
mov
mov
fidivl
xchg
pop
inc
mov
in
pop
inc
inc
adc
mov
movsl
fisttpll
xchg
pusha
and
push
mov
mov
xor
jne
out
xor
and
filds
mov
mov
lea
and
fdivs
pop
and
xchg
xchg
xchg
or
sub
call
mov
mov
mov
pop
mov
ss
into
nop
adc
movsb
sbb
mov
pop
adc
hlt
sbb
xchg
in
mov
push
adc
or
enter
cmpsl
es
in
test
mov
jg
out
jns
cmp
xabort
xchg
cld
lcall
jp
cltd
fisttpl
jbe
cmp
xor
repnz
int3
add
aaa
push
pop
mov
lret
xchg
mov
scas
stos
pop
in
aad
pop
jle
mov
cmpsl
stos
mov
sub
inc
or
jge
mov
push
jge
fistpll
mov
and
aas
cmp
lods
mov
push
mov
sbb
lret
repnz
sti
popa
sbb
mov
inc
mov
or
and
push
or
lret
std
inc
mov
push
push
fisttpl
pop
lods
bound
xlat
popf
add
push
jg
mov
cs
adc
cmc
imul
in
push
in
push
xchg
cmc
addr16
mov
sbb
stos
and
stos
pop
int3
pop
imul
imul
addr16
cld
lods
sub
imul
pop
adc
ss
sahf
iret
sbb
mov
sub
pusha
scas
out
mov
mov
inc
or
pushl
sub
and
mov
cmp
xor
data16
filds
cmp
test
jno
or
aam
enter
cmp
push
push
and
popa
jb
cmpsl
stos
dec
outsb
sub
cmpsl
pop
testb
daa
jge
pop
adc
dec
dec
mov
sbb
pop
or
push
mov
pushf
test
xor
fs
test
hlt
sub
jge
mov
mov
sti
cmpsb
sbb
push
movsb
std
dec
pop
dec
sub
aaa
ret
jbe
insl
jp
sti
jne
mov
cs
cmp
xor
push
adc
es
fstl
mov
lret
xor
add
icebp
inc
les
or
dec
jl
or
lods
mov
cwtl
js
sbb
inc
inc
nop
ret
xor
adcb
test
sti
dec
jmp
ss
xchg
xor
pop
mov
test
andb
mov
js
pop
dec
sbb
lods
pushf
pop
arpl
ja
mov
push
pop
aas
enter
mov
add
jnp
cli
jmp
jmp
ret
enter
mov
popf
cmp
sub
dec
outsl
cmp
cwtl
cmpsl
adc
push
sub
mov
or
and
lcall
jno,pn
enter
adc
icebp
lahf
cmp
daa
sahf
inc
stos
fs
push
out
mov
pop
cmc
leave
push
je
pop
add
jp
or
dec
fnstenv
lea
mov
pop
call
xchg
push
or
rcll
es
fbstp
lock
push
lock
jno
ret
hlt
or
mov
movsb
push
fdivrl
mov
mov
mov
inc
xchg
sub
mov
push
ret
and
arpl
rol
sbb
mov
xorl
jle
push
or
hlt
ret
gs
not
cmc
stos
xchg
push
mov
ror
mov
inc
shl
int
pop
inc
jmp
int
jmp
pop
xor
out
nop
insl
js
in
dec
xor
scas
cmp
rcll
jl
pop
sub
xor
popf
subl
enter
pop
rorb
aas
incl
sbb
dec
jge
xchg
mov
or
mov
loope
clc
pop
or
jge
push
nop
repnz
mov
ret
mov
push
pop
cmp
dec
sar
icebp
es
arpl
sub
mov
jmp
pop
adc
lods
stos
movsl
ljmp
sbb
mov
out
xor
push
fmulp
cmp
imull
and
ret
adc
popf
push
lods
in
mov
xchg
push
iret
lcall
mov
iret
mov
xor
popa
pop
xchg
lahf
cli
pop
xchg
fnsave
daa
out
xchg
loopne
adc
adcb
cmp
sub
mov
push
push
jo
cmp
scas
cmp
movsb
clc
pop
nop
lret
jnp
mov
adc
jnp
arpl
sbb
lds
cmp
cmpsl
aaa
adc
pushl
test
cmp
push
loop
mov
mov
cmp
pop
jmp
jmp
out
push
clc
push
xchg
and
leave
in
adc
lods
jne
pusha
push
fbld
rorl
lods
nop
in
ds
push
and
clc
and
std
pop
add
sub
adc
rorl
stos
jle
jge
int3
int
shrl
scas
xchg
mov
pop
push
rcl
add
in
sub
mov
xlat
xchg
jmp
dec
test
aam
fbld
ljmp
mov
into
test
das
and
testl
jl
pop
and
xor
arpl
mov
int
into
mov
loope
or
sbbl
outsb
arpl
jb
dec
inc
add
mov
mov
xor
pop
mov
icebp
cmp
jo
rorl
xchg
jno
mov
and
jns
inc
sub
jns
out
xor
lock
sbb
mov
test
mov
and
cwtl
mov
pop
pusha
loope
out
shrb
pop
stc
cmp
aam
bound
adc
cs
aad
sti
fwait
pop
movsb
sub
pop
test
lcall
rcrl
jle
gs
push
cs
stos
lea
jae
shll
fs
in
stos
fisttpl
and
jae
inc
fs
bound
push
scas
or
xor
inc
and
sub
in
cmpb
xchg
shl
es
mov
cmp
xchg
iret
pop
repz
enter
pusha
out
inc
icebp
or
pop
xchg
xchg
xchg
test
mov
in
and
lret
mov
scas
inc
lock
cmp
jno
addb
test
xlat
shl
cmpsb
add
test
push
adc
xor
and
xor
push
loopne
jno
cmpsb
repnz
xlat
lahf
or
lret
sub
hlt
in
and
loop
sbb
dec
das
pop
dec
lea
push
les
dec
xorl
ret
movsl
ljmp
test
mov
stc
mov
ljmp
sub
fwait
je
sub
mov
lods
push
js
jg
push
adc
mov
jmp
mov
push
xor
loopne
sub
inc
jge
or
ja
sub
push
insl
notl
rcrl
or
daa
dec
dec
rcr
dec
lahf
push
jmp
jno
out
in
movl
xchg
jno,pt
sarb
loope
xchg
xchg
pop
push
cmc
dec
lcall
cmp
lahf
sti
movsl
jmp
xor
stos
repz
iret
xorb
sbb
jge
sbbb
std
add
sub
aaa
insl
cmpsl
lret
dec
push
into
cmp
je
sbb
int3
js
inc
xchg
pushf
in
jb
rcl
fnstsw
mov
xor
push
dec
mov
pop
fistpll
out
jnp
or
daa
cmp
push
jns
icebp
add
inc
test
add
mov
out
pop
mov
test
cmp
and
lods
sbb
xor
scas
cmp
push
xor
adc
push
loope
cmpsb
incl
sub
nop
cltd
fistpl
dec
jno
mov
fdivrl
ss
popa
mov
inc
sbb
test
movsb
cs
mov
pop
adc
imul
dec
fisttps
xchg
aam
test
out
add
lods
cmp
dec
xor
push
stc
stos
movsl
mov
cmpsb
sub
std
int3
pop
adc
std
and
mov
js
sbb
lods
sbb
icebp
adc
push
ss
shr
loop
mov
cmp
outsb
fdivrl
push
addr16
xor
add
insb
insl
cmp
stos
leave
stos
mov
lcall
pop
push
mov
popa
mov
xchg
jmp
pop
inc
jmp
fadds
roll
xor
aas
cmp
movsb
adc
sarb
pop
push
fists
iret
test
stos
mov
sub
sbb
inc
xor
out
push
lea
sub
popf
addr16
pop
jno
push
add
add
inc
shl
aad
dec
addr16
or
mov
sub
not
and
dec
mov
cwtl
dec
ret
scas
shl
mov
jb
rcrl
adc
sub
or
in
ss
das
push
int3
and
mull
fidivrl
lods
jge
jnp
push
shl
sbb
ds
dec
mov
ljmp
cmp
outsb
aaa
pop
loope
fs
test
xor
ljmp
out
mov
fisttpl
in
push
mov
bnd
push
inc
hlt
int
jg
mov
fnsave
stos
fs
adc
xor
jp
xchg
orl
adc
xor
bound
cltd
push
mov
jl
das
adc
popl
push
ficompl
ds
push
stc
daa
out
inc
mov
pop
inc
push
pop
adc
cmpsl
inc
inc
in
mov
jbe
xchg
inc
pusha
testl
cmp
jns
mov
inc
out
loopne
adc
push
add
mov
ljmp
in
push
mov
sub
dec
sub
je
ljmp
ret
sub
mov
lret
jne
lods
pushf
sbb
xchg
repnz
aaa
jne
mov
sub
movl
fcmovne
outsb
adc
xlat
xor
daa
pop
mov
push
and
push
and
nop
inc
pop
enter
xchg
sbb
and
in
push
in
stos
cmpsb
cmpsl
cmp
and
sbb
dec
out
dec
mov
xchg
ret
test
ss
xor
in
pusha
pop
and
jnp
adc
mov
es
movsl
inc
xchg
outsb
les
dec
into
and
dec
cmpsl
dec
cmpl
dec
movsb
int3
aaa
mov
add
jle
cli
fstp
out
jns
cmpl
adc
test
lret
je
loope
xor
clc
in
add
xor
mov
mov
lods
vmovhps
adc
push
out
rcl
pop
inc
cmpsb
out
in
xchg
push
sbb
cmp
cltd
xchg
test
sub
jmp
repnz
jmp
aad
jp
sub
mov
outsl
xchg
nop
add
inc
lea
nop
popa
xor
cmc
subl
jmp
xchg
out
xorb
ds
lods
jle
subb
mov
mov
mov
push
mov
in
mov
subl
mov
ret
icebp
test
ja
sbb
jge
adc
int
add
repz
stos
cmp
cmp
loopne
in
dec
int3
mov
gs
popa
mov
inc
mov
sub
imul
daa
and
faddl
ficoms
mov
shrl
in
mov
adc
fidivl
xlat
or
stc
add
pop
fs
sahf
sbb
dec
dec
push
out
out
push
mov
outsb
arpl
loopne
mov
jbe
test
lahf
arpl
xor
dec
adc
mov
xchg
add
cmpb
xor
jne
aaa
mov
and
fwait
xlat
dec
cli
mov
cmp
adcl
jno
push
mov
mov
push
pop
or
xchg
adc
cld
scas
add
sbb
lahf
inc
inc
out
sub
popf
and
xlat
cmc
inc
xchg
pop
fildl
dec
push
sub
ret
pop
dec
jecxz
loopne
mov
inc
inc
fisubrl
sub
ljmp
or
sub
push
inc
addr16
mov
test
std
inc
mov
fisubrs
gs
imul
or
xor
sub
xchg
cmp
repz
xchg
add
int
mov
js
rcll
in
in
sub
nop
repz
repz
in
pusha
mov
add
sub
in
jmp
mov
mov
gs
jo
cmpsl
outsl
push
xor
dec
shll
xchg
test
ret
pop
pusha
lea
fsubrl
insl
sbb
ds
dec
push
dec
mov
popf
jge
inc
mov
pop
sahf
push
dec
iret
or
jno
mov
sbb
inc
movsb
xor
mov
sub
les
imul
jbe
jae
fdivrs
fmuls
dec
jge
jp
inc
fldt
popf
hlt
jecxz
push
movsl
int3
sbb
leave
cmp
mov
mov
aad
aad
mov
hlt
loop
cmp
mulb
or
repz
addr16
dec
ss
xor
jle
lds
cltd
int3
arpl
test
fwait
enter
in
stos
lcall
es
or
push
ss
stos
dec
xlat
lock
addl
mov
jp
add
xchg
rcl
gs
and
pop
movsl
adc
loope
mov
rcll
test
dec
mov
cli
std
popf
in
js
out
push
xchg
lods
test
idiv
xorb
rclb
jmp
lea
fnstcw
pop
or
lret
les
push
arpl
and
shlb
sbb
push
xchg
xchg
and
fadds
sbb
loope
jo
inc
xchg
cmp
pop
push
cmp
push
mov
jge
shll
jnp
les
xlat
xchg
inc
pusha
testl
pop
push
fildll
scas
cltd
cmc
in
out
jnp
je
pushl
pop
mov
sbb
xchg
lods
adc
push
sub
pop
addr16
push
inc
fldt
inc
addr16
add
std
jl
stc
nop
fs
inc
in
into
in
pushf
mov
rcrl
xchg
out
aaa
sar
sqrtps
iret
mov
mov
cmpsl
es
pop
sbb
fs
adc
icebp
out
xor
pop
orb
testb
insl
mov
rolb
push
jb
sub
fldcw
jns
add
jg
inc
in
negl
mov
in
pop
cwtl
sbb
fiadds
stos
pushf
mov
pop
inc
adc
mov
call
or
fsubrl
loopne
xchg
pop
movsl
outsl
pop
rorl
into
movsb
hlt
add
dec
test
pop
test
mov
es
es
sub
xchg
adc
add
and
insb
xchg
gs
movsb
repnz
outsl
push
fisttpl
ljmp
cmpsl
xor
dec
or
cmp
mov
mov
or
or
stos
mov
xchg
popf
mov
lods
and
movsl
ljmp
mov
xchg
mov
int3
push
inc
inc
pusha
cltd
out
xchg
xchg
ficomps
loope
mov
std
adc
in
ss
push
jmp
xor
test
and
push
ja
gs
loope
aaa
hlt
aaa
arpl
fistps
hlt
lret
movsl
hlt
xchg
xor
mulb
adc
ret
les
lcall
add
mov
adc
push
stc
xchg
fimuls
jecxz
pop
sbb
xchg
in
push
cmpsl
jmp
sbb
push
inc
mov
jecxz
inc
xlat
call
adc
push
mov
inc
js
mov
cmp
pop
ss
push
xor
popf
sub
dec
jo
in
xor
stos
jno
cmp
dec
mov
les
cmp
ds
fsin
rcll
cmovno
aas
adc
adc
rcrb
call
imul
add
lea
xchg
jbe
and
adc
and
fadd
add
mov
inc
gs
sub
sbb
scas
cmp
nop
mov
shl
inc
lea
in
mov
cs
pop
daa
jge
jnp
inc
and
adc
sbb
jmp
pop
pop
push
pop
arpl
push
xor
xchg
add
popl
lea
mov
subl
mov
aad
sub
ss
inc
or
cmc
xor
mov
push
push
loope
les
dec
mov
in
cmc
sub
jne
push
add
lret
jp
push
ja
lods
addr16
sbb
xchg
and
jne
gs
pop
adc
pop
iret
mov
es
adc
out
jo
push
fistl
inc
mov
add
rorl
pop
mov
push
out
cmp
pop
rorb
or
incb
mov
pop
mov
repnz
aas
xchg
out
cld
adc
mov
loopne
incb
enter
cmp
pop
adc
xor
xchg
adc
sub
cmc
sbb
mov
mov
fnstsw
mov
xor
int3
xor
ror
lret
lds
adc
push
adc
xchg
mov
fsubrs
adc
mov
push
cmp
fstpt
arpl
fsubr
lock
fcmove
in
dec
push
add
addr16
push
inc
icebp
sub
or
fcomp
aam
jle
pop
mov
cmpsb
mov
adcb
push
aad
mov
add
inc
xchg
jp
shr
pushf
jg
and
mov
aaa
ljmp
inc
pop
aad
imull
push
sti
xchg
pshufw
xchg
out
imul
repz
push
inc
mov
cmp
xchg
jns
popf
adc
or
push
sub
setp
and
jb
xorl
std
andl
mov
or
repz
jge
gs
or
lret
inc
ret
pop
mov
in
dec
adc
xor
adc
pop
sbb
fisttpl
push
or
repnz
and
testb
out
push
into
add
mov
ret
dec
xor
inc
stos
cmp
ja
mov
add
sub
fcompl
cwtl
rcrl
inc
jle
mov
inc
leave
testl
pop
xorb
sub
dec
in
jle
aad
movsl
movsl
mov
mov
shrb
inc
repz
dec
mov
xor
insl
jle
scas
xchg
add
loop
in
outsb
out
mov
sbb
lds
shrl
cmp
call
ret
lret
inc
pop
and
cld
aad
int
lret
stos
out
xlat
fs
int
cmp
fsub
mov
sahf
int
cltd
jns
push
xchg
pop
jg
cli
andb
gs
push
clc
adc
fidivl
mov
ja
shrl
xchg
cs
xor
inc
cmc
call
cmp
lahf
push
mov
cmc
dec
cmpb
fstps
cmp
sub
adcl
jb
xchg
pop
mov
insb
and
xor
or
pop
js
outsb
frstor
iret
push
sub
sub
dec
nopl
add
scas
dec
cwtl
lods
stc
imul
int3
cmpb
adc
pusha
jno
cmpsl
movsl
call
dec
xor
dec
in
sub
xor
ror
mov
cmp
push
arpl
insl
sbb
in
dec
aas
pop
and
es
xor
imul
cli
fdiv
popf
push
jne
dec
pop
mov
cmp
mov
adc
jo
cmp
outsl
cli
jge
dec
leave
rcrb
jp
cs
sti
mov
fldl2t
jae
sbbl
sahf
test
mov
or
mov
sub
loopne
repz
and
insl
test
xchg
push
adc
or
stos
or
xorb
or
out
lea
jae
int
jle
cmp
add
scas
sar
cmp
sarl
daa
cmp
inc
fidivrs
andl
jb
rorl
iret
inc
jno
jp
pop
aaa
out
adc
popf
popf
sbb
cmpsl
or
pushf
jg
xchg
lods
xor
cmpsb
out
inc
add
xchg
fsubs
int3
imul
mov
push
rclb
inc
cmp
cltd
popf
cmpsb
sahf
mov
mov
outsb
jmp
add
jbe
pop
jb
cmp
pop
iret
stc
mov
jle
cltd
pop
neg
add
rcrb
push
fdivrl
pop
add
adc
xor
daa
ja
push
test
xor
test
push
scas
xchg
das
lcall
lahf
enter
jmp
rcl
sub
jge
and
jns
jae
jl
jb
mov
test
out
add
dec
lcall
cmpsb
aaa
xchg
fsub
push
adc
rcr
xor
stos
and
ja
popa
popa
xor
pop
rcll
enter
mov
jnp
pop
cmp
add
jle
loop
xchg
pop
add
xchg
sbb
cmp
cmp
fcompl
rcll
xchg
add
das
aad
inc
ljmp
shrl
pop
cmpsl
scas
xchg
mov
xchg
mov
pop
cmp
mov
cmp
in
pushf
mov
scas
mov
cltd
pop
aaa
xchg
pop
ja
mov
xchg
loope
add
sar
mov
cmpsb
ret
out
mov
mov
mov
test
shrl
add
clc
mov
int3
mov
push
push
push
clc
aad
mov
mov
loope
imul
sub
jae
mov
pop
mov
or
notl
test
out
pop
pop
push
aas
lods
xor
aam
xchg
sub
add
imul
jb
xchg
movsb
mov
jl
inc
xor
je
jmp
inc
test
adc
adc
mov
pushf
test
cmp
repnz
leave
sbb
aas
int3
cmp
lods
jb
cmp
add
dec
jae,pn
aad
aam
sbb
dec
leave
lret
shrl
or
add
mov
ja
cmp
sub
popl
test
test
aas
mov
sbb
in
pop
and
xor
outsb
push
pop
xor
repz
popa
lods
xchg
push
xor
stos
in
in
idivb
enter
jg
mov
shlb
jg
ss
cmp
xchg
push
sbb
pop
mov
gs
cmp
das
dec
pop
mov
loope
nop
mov
rorb
jge
and
fadds
jmp
xchg
push
lret
inc
cwtl
bnd
push
testl
loope
cs
add
adc
iret
xchg
inc
inc
mov
xor
sub
inc
dec
adc
mov
xchg
fcmovne
mov
jge
or
lods
cmp
sbbb
jno
rcrl
pop
hlt
sub
cmpb
lcall
call
lock
out
xchg
jg
dec
lods
lods
cmp
inc
jns
fnsave
call
mov
out
jp
inc
mov
sbb
jmp
add
aaa
inc
push
mov
xchg
cmpsb
ljmp
nop
in
xchg
out
aaa
fldl
fcomps
lock
ficomps
fsts
inc
outsb
test
push
mov
mov
loope
pop
adc
inc
cs
jecxz
cmpsl
mov
sbb
push
frstor
sub
mov
divb
testl
iret
jbe
push
dec
fsubrp
push
test
inc
fcmovnu
lret
sbb
movsl
scas
push
lods
xor
in
xor
and
dec
pop
daa
repnz
cmp
fisubl
movsb
sub
add
nop
aam
hlt
in
rorb
pushl
pop
loop
jmp
push
lcall
lods
pop
ret
and
xchg
leave
add
pop
pop
stos
jle
lcall
jne
lods
in
push
adc
shlb
int
cmp
push
mov
in
cltd
mov
mov
xchg
jo
dec
lea
shl
mov
adc
loopne
ds
mov
xor
mov
in
xchg
mov
sahf
in
push
ret
nop
loope
cmp
stos
mov
sbb
out
ljmp
jg
icebp
dec
scas
stc
mov
rcll
call
sub
pushf
testl
sbbb
xor
hlt
sub
sbb
pop
repz
or
mov
lret
ja
enter
int
sahf
in
xadd
sbb
inc
jge
jecxz
jno
sbb
imul
or
dec
sub
mov
push
nop
rcrb
lahf
dec
pop
adc
xor
xchg
xlat
test
popa
outsb
fldt
rcrl
pop
sbb
ret
mov
xchg
pop
cmp
movsl
xor
xchg
cmpsl
push
or
clc
fs
scas
fnstsw
adc
dec
mov
loopne
jb
cmp
jg
in
cld
lods
sti
call
inc
pop
test
or
les
mov
ja
ret
cs
sub
xlat
movsb
fs
out
push
and
mov
sbb
jle
outsl
mov
ret
les
jmp
gs
in
fmul
jnp
adc
iret
popa
add
andl
jmp
mov
and
inc
cmp
jnp
aaa
fwait
daa
adc
mov
push
add
cmp
aad
add
xchg
popa
imul
mov
lret
pop
fdivs
loopne
mov
add
inc
imul
xchg
jb
cli
mov
test
mov
in
jno
jae
faddl
dec
outsl
cld
dec
cld
pusha
or
leave
xchg
fs
xlat
and
push
loopne
inc
fstl
pop
jg
xchg
test
in
adcb
push
pop
sub
jb
outsb
push
repnz
icebp
mov
and
adc
and
push
and
in
insb
ret
rorb
push
mov
mov
shlb
gs
pop
adc
cltd
push
cmp
pushf
jmp
enter
in
stos
arpl
pop
adc
shlb
cmp
cwtl
jle
and
insb
in
enter
pop
sbb
mov
xchg
pop
xchg
xchg
jmp
std
daa
mov
jmp
dec
test
mov
push
mov
push
inc
cs
mov
les
scas
push
inc
dec
mov
jle
inc
sbb
sbb
push
inc
out
inc
sar
add
rcrb
repz
jns
in
cmpsl
cmc
popa
or
push
dec
mov
adc
loop
in
inc
lahf
pop
jl
mov
aaa
orb
insb
cmp
mov
pop
xor
pop
adc
xor
nop
xor
lea
jecxz
pop
xor
mov
inc
xor
pop
lahf
pop
push
inc
mov
adc
pop
or
and
test
add
sub
loop
ret
into
test
hlt
mov
sarl
in
jge
cmp
mov
jbe
mov
dec
js
jmp
sbb
pop
pop
cmpsl
and
or
mov
rcrb
data16
pop
jno
and
jmp
xchg
test
mov
inc
cld
mov
in
inc
xchg
xor
pop
sub
mov
sbb
aas
inc
sahf
daa
cmp
out
and
daa
addr16
or
xor
mov
mov
sbb
mov
cmpsl
ja
rolb
dec
addl
push
daa
notb
pop
repz
push
gs
ds
mov
sub
xchg
shrb
xchg
imul
push
pop
sub
xchg
jp
or
push
mull
xor
add
leave
frstor
and
add
jp
cmp
add
int
sub
mov
xchg
frstor
mov
pop
inc
cli
xor
lock
jb
pop
mov
idivl
fcoml
dec
push
mov
mov
push
je
lret
mov
js
mov
sub
push
inc
test
xor
pop
sti
or
jp
fwait
xchg
mov
jo
shrl
popa
xchg
xchg
lock
xor
jge
cmp
sub
dec
in
shlb
inc
pop
cwtl
push
icebp
je
ret
mov
subb
ljmp
lcall
test
xor
jg
xlat
pop
mov
adc
insb
adc
rorl
push
mov
mov
test
lods
les
xor
jmp
sbb
faddl
jp
aaa
mov
fnstsw
clc
stos
call
repz
cli
dec
stc
in
jno
cwtl
mov
daa
inc
ficoml
mov
sahf
cmp
pusha
and
das
add
stos
cmp
pop
fcmovbe
add
xchg
imul
jecxz
addr16
insb
bnd
xlat
add
mov
test
leave
or
or
ja
push
ljmp
adc
shrl
push
inc
sbb
std
add
repnz
jp
lret
push
push
fiadds
testb
jns
lea
mov
inc
loopne
jnp
mov
sbb
xor
outsb
fstp
or
push
jge
push
fidivl
push
in
add
loop
sub
ret
enter
daa
mov
dec
dec
cmp
jg
inc
and
push
sbb
testb
push
test
mov
add
sbb
arpl
xchg
lds
and
sub
cltd
aam
mov
testb
mov
xchg
pop
enter
aaa
out
in
cmpsb
jno
icebp
rcrl
adc
push
sahf
mov
xchg
rcrl
mov
loop
lea
xchg
dec
mov
pop
je
pop
insl
movsl
pop
sahf
pop
pop
lods
aaa
xchg
inc
jo
sub
out
mov
xchg
movsl
add
and
aad
mov
adcl
jb
lret
fisttps
ja
push
repnz
mov
and
cmpsl
push
sahf
test
shrb
and
aad
rolb
mov
adc
and
enter
inc
lahf
sub
xchg
test
das
in
sbb
mov
shr
dec
fisubl
scas
xor
push
js
or
sahf
pop
sub
dec
aam
inc
pop
xchg
sub
pop
pop
cwtl
xor
orl
dec
test
lods
mov
int3
or
inc
inc
arpl
mov
lahf
testl
aas
xchg
add
add
shrl
sti
jno
mov
aaa
out
ror
cmpsb
bnd
daa
cld
out
pop
add
sbb
inc
inc
cmp
add
push
dec
es
cmp
insl
mov
mov
int
stc
sbb
push
loope
sub
mov
loope
int
and
imull
dec
shlb
jnp
sub
data16
fwait
mov
or
and
in
shll
dec
mov
pop
mov
adc
cwtl
pop
call
pop
sarb
das
cmc
push
mov
mov
sub
sub
sub
xor
cmovns
out
adc
mov
xor
fwait
push
jecxz
push
es
fdivs
push
xchg
and
jge
ret
leave
fwait
push
jg
mov
imul
sbb
ds
add
loope
loope
stos
lret
mov
and
adc
or
cwtl
cmp
mov
xchg
sbb
cmc
mulb
cmp
push
xor
jnp
add
fdivs
push
icebp
icebp
mov
xchg
orb
out
int3
inc
mov
test
mov
ret
dec
jmp
sarl
sbb
jbe
mov
fcompl
sub
fcomip
js
cmp
mov
icebp
jg
bound
pop
fbstp
pop
pop
jmp
cmp
aas
in
push
sub
mov
scas
pop
fnstenv
ljmp
inc
mov
in
pusha
cmpl
add
push
jne
adc
jmp
aaa
dec
leave
add
jno
insb
push
nop
jp
iret
mov
dec
mov
out
adc
inc
push
mov
das
lret
into
sti
pop
outsb
inc
sub
mov
aad
push
insl
in
loopne
dec
ficoms
xlat
dec
lret
mov
sub
adc
adc
int3
jl
in
dec
xchg
stos
mov
leave
enter
mov
hlt
mov
xchg
test
xor
mov
xchg
or
stos
test
sub
push
fcomi
jne
lock
lret
or
mov
js
in
jmp
sub
pop
adc
iret
in
push
idiv
xchg
jbe
lock
fstpl
push
add
jmp
daa
pop
sti
nop
fsts
mov
mov
andps
dec
test
and
ret
lret
insl
mov
mov
movsl
jb
add
aad
mov
jle
xlat
arpl
jbe
add
pusha
or
int
sub
mov
in
ficoml
pop
repnz
add
adc
xlat
push
inc
fcompl
dec
data16
xchg
lods
dec
movl
fldt
adc
stc
insl
pop
icebp
stos
sbb
insl
das
cli
cmc
out
cwtl
xchg
fucomip
test
lahf
xchg
xor
sub
mov
aam
lods
pushf
xchg
pushf
pop
cltd
xchg
jnp
fidivrl
rcrb
push
mov
loope
pop
jo
sbb
inc
andl
pop
sub
inc
repz
push
cmpsb
cmpsb
xlat
movsb
cmpsl
je
xor
movsl
loop
sbb
adc
mov
jae
mov
jecxz
das
out
inc
insb
sti
fstpl
sub
subl
push
push
inc
mov
cmp
aam
sarb
pop
dec
call
jp
test
cmp
inc
cmpl
jmp
ret
mov
cli
jg
add
adc
mov
notb
ss
test
fldenv
cmp
xchg
loopne
mov
and
std
loope
pop
imul
add
out
jge
out
pop
pusha
fldl
inc
adc
push
push
popf
mov
mov
xchg
push
call
xor
lods
fisubs
push
add
push
je
ja
inc
mov
aam
pop
inc
xchg
push
int
sbb
xor
inc
push
das
je
jge
popf
lods
mov
pop
lret
outsb
or
adc
mov
push
cltd
notl
cwtl
aas
or
mov
adc
insl
insb
xchg
xor
push
push
cmp
mov
dec
movsl
loopne
ja,pt
dec
fimuls
xchg
scas
xchg
sbb
nop
jae
lds
adc
jo
sti
subb
clc
cmc
inc
inc
cpuid
add
and
cltd
popf
adc
add
shr
aas
mov
xchg
add
cmp
ficompl
iret
dec
mov
dec
jnp
pusha
aas
dec
push
fld
test
pop
adcl
pop
loope
bnd
sub
iret
dec
fldenv
stos
unpcklps
cli
pop
ds
inc
dec
add
adc
inc
movsb
xorb
imul
inc
add
xchg
push
leave
or
dec
cli
mov
pop
xor
jbe
fwait
pop
scas
and
jo
or
cmp
push
jns
jle
stos
mov
out
lods
xchg
cmp
outsw
das
inc
int3
fisubrs
hlt
adc
lock
sub
jnp
mov
in
aaa
pop
cmp
inc
outsl
jb
pop
sub
adc
xor
pop
loopne
stos
cmpsl
and
cmp
out
or
insl
xchg
cmp
sbb
cmpsb
outsl
fiadds
imul
stc
xchg
outsl
std
ffreep
cmp
fmul
sub
fnstsw
rclb
cmc
inc
fwait
jmp
push
es
sahf
es
outsb
lret
or
dec
nop
das
js
and
or
ret
pop
out
stos
aaa
xchg
stc
jns
clc
mov
jns
cltd
shlb
push
cmp
add
xchg
adc
xchg
or
and
xchg
xchg
mul
or
or
and
xor
pop
xor
sub
mov
push
mov
rorl
dec
cs
mov
iret
jmp
push
sbb
testb
in
mov
jmp
cltd
mov
lock
mov
in
lret
xchg
xchg
pop
mov
add
push
jne
sbbb
push
xlat
dec
loop
loop
lods
repnz
js
stos
enter
xlat
inc
inc
jbe
rcrl
sub
lods
test
add
jbe
pop
or
add
aad
add
loop
jp
pop
cld
nop
ljmp
stc
negl
stos
mov
jmp
mov
das
aaa
mov
jns
test
push
and
jno
sbb
inc
push
ja
cmp
and
xor
and
sbb
repz
mov
cmpl
mov
dec
cmp
aam
pop
dec
dec
or
shrb
fs
pop
xchg
cmp
dec
ret
sbb
dec
imul
jns
add
mov
mov
pop
ja
or
je
sbb
dec
in
sub
out
adc
sub
js
jae
sub
popa
jg
add
or
add
cmp
mov
loopne
inc
xor
cmpb
test
dec
std
scas
mov
mov
xchg
aaa
cmpsl
fwait
fwait
adc
pushf
push
adc
sub
out
xor
mov
insl
mov
push
cmc
ss
in
cmc
pop
bound
push
dec
call
js
int3
insl
shr
mov
aaa
shrb
or
mov
mov
fs
fcompl
arpl
cmp
mov
add
xor
in
outsl
push
jno
adc
sbb
and
push
and
insl
jle
mov
test
pop
xor
js
xor
loopne
in
into
jb
inc
rol
jecxz
pop
andl
add
icebp
pop
cmp
ret
and
push
add
pop
pusha
push
loope
and
adc
and
cltd
std
mov
test
ds
shl
sbb
test
push
or
xlat
mov
ficoml
scas
mov
icebp
and
mov
hlt
cmpsl
mov
inc
cltd
hlt
test
lret
enter
shll
fisubl
test
mov
cmp
sbb
daa
cmp
ljmp
push
paddw
pusha
sbb
fwait
push
jnp
push
into
push
jg
ljmp
ljmp
xor
jg
scas
jmp
mov
and
data16
dec
mov
inc
add
pop
xchg
and
dec
cld
xor
jg
addb
pop
mov
pop
inc
mov
test
dec
pop
sarl
inc
shld
mov
vphsubbw
loope
sub
lods
repz
push
xchg
lret
push
repnz
ljmp
dec
fdivl
push
loope
mov
shlb
add
xor
mov
stos
sbb
dec
cmp
idivl
xchg
sub
inc
jbe
ret
rorb
mov
adc
inc
es
push
imul
insl
inc
je
scas
andl
outsb
pop
inc
repz
ret
and
mov
scas
pop
jbe
sbb
test
xor
push
add
addr16
mulb
mov
adc
mov
aam
and
das
jo
pop
out
inc
mov
fsubl
loopnew
aad
pop
push
jae
sahf
add
out
mov
sub
cwtl
into
outsb
mov
aaa
mov
hlt
pop
cmp
and
hlt
into
push
sub
sti
inc
xchg
loop
fwait
roll
mov
xor
les
xor
insl
test
shrb
cmp
push
in
aas
mov
sbb
cs
and
sbb
inc
cmpsl
sub
dec
daa
loope
test
popa
in
sub
ds
xchg
xchg
imul
cwtl
adc
std
lcall
test
inc
dec
mov
xlat
mov
inc
add
jmp
out
cmp
cmp
mov
dec
fisubrl
or
adcb
adc
cmp
aad
test
popa
aad
mov
pop
testl
sbb
aad
dec
xlat
xor
xor
mov
jne
pop
fcmovb
jae
inc
mov
cltd
in
mov
test
out
mov
jecxz
jno
xchg
cmpsl
rolb
outsl
sub
das
enter
push
dec
sti
popf
sbb
jb
xchg
outsb
in
shr
popf
filds
sub
adc
notl
push
outsb
imul
cmp
cmpl
cli
mov
adc
sbb
bound
inc
stos
movsl
and
add
and
jge
jp
lcall
xchg
lea
inc
bound
rcrl
mov
aas
sbb
sbb
adc
and
sub
cmp
mov
sbb
inc
sub
test
aam
bound
sbb
xor
pop
fistpll
lods
gs
add
xchg
add
bound
popf
ja
scas
or
test
pusha
out
sub
stc
xor
divb
pusha
testl
cmp
das
imul
shrb
popf
movsl
in
lcall
pop
add
popa
push
in
jne
or
xchg
aaa
add
and
daa
mov
ja
xchg
cmp
pop
mov
andl
outsb
enter
shl
subb
dec
sub
ret
add
inc
out
sti
mov
pop
in
adc
sub
call
outsl
or
jne
xchg
sub
test
inc
pop
mov
js
enter
aad
jmp
movsl
push
sbb
sbb
sub
js
pop
pop
js
jge
mov
and
xor
int3
nop
sub
inc
shll
andl
and
scas
jae
fcoml
cmp
lods
push
sti
push
pop
fmull
xor
and
out
jl
cld
push
adc
add
icebp
inc
mov
out
aaa
mov
xorl
out
and
adc
adc
daa
jp
cmp
jae
cmpsl
in
popf
and
test
into
scas
test
test
test
aaa
test
dec
mov
out
add
lods
cmpsb
lds
idivl
sub
add
mov
pop
xchg
sub
leave
jmp
sub
sbb
push
pop
test
jne
xchg
inc
movsl
ret
sub
xor
sub
push
outsb
fstps
add
dec
inc
or
jns
dec
sbb
mov
inc
das
sub
inc
xorl
outsb
pop
cmpl
cmpsb
ljmp
es
out
cmp
jnp
lcall
xchg
sahf
jle
es
sti
xor
not
insb
xchg
add
nop
pop
mov
and
sbb
mov
shld
pop
pop
imul
mov
test
es
add
dec
pop
loop
dec
push
push
imul
pop
mov
adc
mull
cs
icebp
mov
xor
add
imul
xor
and
leave
and
jnp
adc
mov
cvtpi2ps
mov
or
fnstenv
mov
imul
xchg
lcall
rcl
jns
adc
in
mov
decb
and
or
arpl
into
push
push
mov
push
pusha
adc
xor
or
sub
cli
push
xchg
mov
add
jns
sbb
jb
lret
xchg
ret
add
ret
lods
jno
dec
xor
pop
int3
iret
inc
push
xor
mov
or
dec
int3
int
leave
mov
in
cmp
movsb
mov
adc
dec
out
mov
call
in
dec
fwait
xlat
jp
imul
mov
clc
iret
clc
push
sub
int
es
push
ds
rolb
pop
cli
xor
int3
inc
cltd
movsb
mov
adc
dec
jns
jl
cmp
jo
fsubs
cmp
jns
sahf
clc
inc
or
out
adc
dec
cld
andw
das
cmp
cmpl
nop
mov
lds
shll
dec
pop
sbb
div
movsb
xchg
subb
testb
and
lock
mov
adc
shlb
adc
ret
add
fimuls
test
pop
and
adc
rcll
xor
fcoml
pushf
leave
test
in
jg
test
imul
rolb
lea
in
pop
int3
clc
ljmp
stos
add
mov
or
movsl
repz
sbb
add
xchg
adc
jecxz
xchg
test
xor
and
xchg
push
stos
xchg
test
fcmovnbe
stc
sub
test
or
sbb
scas
or
movsb
int
mov
mov
stos
rcrb
test
out
add
addl
or
jbe
cmp
out
hlt
testb
sub
les
xchg
push
xchg
inc
jg
mov
lea
pop
pop
jno
lcall
std
mov
shll
jne
pop
inc
std
sub
sub
pop
add
jle
out
push
push
aas
mov
cmp
jo
insb
jecxz
lods
dec
mov
mov
inc
pop
inc
pop
inc
mov
adc
insl
ret
xor
orb
cmp
sub
mov
bound
or
adc
dec
dec
mov
pop
mov
loope
add
fs
jb
je
mov
xchg
push
scas
in
test
clc
mov
rcrl
mov
and
mov
pop
es
sub
ret
mov
test
js
lds
mov
orb
ret
dec
dec
xlat
pop
sbb
loopne
insl
test
and
mov
push
lcall
add
mov
movsb
pop
arpl
cwtl
scas
lcall
ds
mov
cmp
loopne
adc
aam
ds
fnstenv
or
sub
int3
gs
test
dec
jae
push
mov
cmpsb
push
iret
or
xchg
and
push
popa
push
xchg
jae
ret
sub
into
lret
push
pop
and
cmp
test
sub
divl
pop
and
cmc
popf
xchg
pop
sbb
jmp
push
cmp
call
subl
cmp
in
into
cmp
mov
daa
fcoml
pop
cmp
inc
jo
aaa
pop
xchg
lods
inc
leave
negb
mov
pminsw
ror
leave
add
mov
lcall
adc
cmc
push
imul
xor
cmpsb
jae
icebp
test
data16
in
lods
mov
add
jns
pop
adc
dec
jo
inc
hlt
outsb
mov
jge
stos
cmp
outsb
sub
or
rcrb
dec
cmp
adc
push
xlat
cltd
test
shl
sub
xor
rcrl
mov
xchg
or
sbb
mov
mov
lock
in
aam
inc
sahf
add
jg
pop
icebp
mov
lret
inc
push
push
sub
add
ret
cli
stos
repnz
jmp
into
int3
push
data16
mov
cmp
dec
jecxz
sar
mov
scas
mov
iret
xchg
mov
rcrl
sub
jg
shlb
add
jp
scas
xchg
xor
dec
nop
add
lock
or
clc
mov
inc
push
js
or
adc
scas
inc
add
fnstenv
mov
stos
cwtl
pushf
cmp
iret
dec
xor
xchg
aaa
mov
or
shl
ja
and
jmp
inc
xchg
push
sti
sbb
lds
in
cmp
jo
sub
mov
mov
pop
and
add
pushf
repnz
loop
dec
iret
loopne
lret
stc
popa
mov
loope
dec
out
dec
cmp
xchg
stc
stc
stos
push
adc
mov
aas
in
incb
jmp
stos
pop
fdivs
jmp
idivl
cwtl
aaa
jnp
mov
out
sbb
idivl
imulb
dec
fs
push
sbb
mov
repz
push
js
dec
jne
or
mov
sbb
inc
xchg
mov
shrb
ret
sahf
inc
mov
outsl
aad
dec
in
adc
cmp
cmp
jbe
sbb
dec
and
stos
arpl
in
fcoml
daa
and
pop
jnp
cmp
fcmovnb
ss
fs
fs
in
pop
pop
mov
lods
and
bound
mov
fisttps
push
outsb
mov
push
pushf
mov
popa
jmp
ljmp
mov
sub
jp
push
outsl
push
dec
or
add
pop
fildll
lahf
jmp
jns
ret
sub
test
loop
stos
xor
insb
xchg
fs
dec
jbe
pusha
lods
mov
xchg
mov
adc
adc
nop
mov
ss
xchg
in
lods
mov
aaa
fmuls
cmp
xchg
cmp
mov
push
add
push
lods
push
aam
inc
bound
mov
jmp
cmp
xor
sub
adc
dec
in
adc
addl
or
adc
fwait
mov
mov
and
push
inc
rcrb
pop
xchg
in
out
add
pop
adcl
aaa
adcl
and
xchg
sbb
and
sbb
cld
sbb
xchg
fcoms
scas
mov
data16
stos
shll
cmp
sub
aam
dec
push
ss
push
add
and
cmpsl
mov
repz
xor
loopne
scas
mov
pop
test
inc
push
mov
aam
out
jnp
out
push
das
cmc
mov
pop
lods
std
cld
je
ds
fdivrp
addb
sbb
inc
ds
outsl
jnp
les
sbb
lods
jmp
outsl
xchg
xchg
add
dec
pop
test
jp
add
mov
sub
pop
or
aam
daa
inc
pop
inc
mov
out
or
div
push
inc
icebp
repz
mov
test
aam
push
dec
popa
lret
jno
or
mov
inc
mov
mov
fmuls
das
sar
aas
xchg
inc
fst
push
mov
sbb
mov
cli
and
mov
bound
loop
test
or
inc
outsb
adc
loope
add
cld
repz
in
repz
ja
mov
or
fucomip
bound
nop
mov
fwait
ss
test
inc
xor
cmp
int
leave
iret
add
mov
sub
jg
adc
sub
and
mov
aaa
fists
and
and
mov
pop
sbb
push
inc
pop
jge
je
mov
mov
pop
xchg
sbb
enter
mov
les
jae
or
sub
mov
sbb
nop
sti
or
sub
mov
sti
aas
mov
jne
xchg
xor
push
jns
das
popf
loope
jp
sbb
xchg
add
and
mov
xor
add
jmp
mov
ret
pop
mov
icebp
pusha
sbb
jmp
push
xor
inc
test
xchg
cmpsl
shlb
scas
inc
lea
ret
scas
int3
jge
sbb
nop
in
add
cmp
bound
jge
mov
xlat
leave
in
cld
cmp
dec
sbb
into
mov
out
mov
add
inc
adc
stc
aaa
fmuls
addl
shll
lret
or
mov
adc
push
das
in
mov
add
int3
jnp
xchg
sbb
mov
test
pop
lahf
fldl
sti
loop
bound
xor
sahf
lret
sbb
cmp
or
cmp
mov
cld
mov
fldcw
in
sub
ss
adc
pop
repz
jns
pusha
jle
lock
mov
out
add
jns
add
mov
mov
adc
imul
xor
inc
cld
pop
push
adc
shrb
out
dec
push
ja
rorb
sub
daa
or
mov
sbb
push
cltd
jne
xchg
scas
xchg
ja
testl
lea
and
inc
rcrb
sbb
int
and
inc
sub
push
in
repnz
bound
cwtl
subb
xchg
dec
test
rcl
push
xchg
xchg
jmp
inc
xchg
movsb
inc
in
sarb
ds
or
xchg
lcall
nop
jno
or
popa
loopne
mov
pop
loop
dec
iret
out
inc
or
xorl
rcll
cmpsl
pop
pop
xchg
loop
and
stos
lea
out
mov
hlt
imul
adc
pop
sbb
sbbb
jge
fiadds
daa
pushf
cli
cmpsb
push
xchg
pop
lods
mov
fsubr
nop
mov
shlb
xchg
data16
outsl
leave
testl
add
loope
pushf
daa
or
stos
repz
pop
pop
stos
and
loopne
enter
lret
jmp
push
lods
rolb
jle
jno
pushf
mov
cs
aad
data16
mov
movl
cmp
cmpsb
lock
out
fadds
das
ss
jae
and
int3
xlat
pop
add
add
pop
mov
sub
or
sti
mov
jns
decl
rorl
inc
in
fldt
or
mov
sub
mov
and
out
jnp
insl
push
mov
mov
mov
lods
pop
ljmp
pusha
insb
mov
dec
insl
xchg
and
test
icebp
repz
add
mov
lods
pop
call
adc
pop
sbb
in
lods
int3
xor
inc
fiaddl
pop
sahf
jno
ret
mov
push
mov
icebp
loop
movsl
sbb
sbb
out
hlt
and
jae
rorb
loop
xorl
xor
xor
test
inc
out
bound
jle,pt
out
push
xor
int
mov
pop
enter
adc
or
orb
cs
cmpsb
push
cmc
mov
push
arpl
jns
test
jne
mov
add
jge
sahf
sub
or
sub
inc
adc
mov
imul
out
push
ret
mov
stos
popa
add
jne
data16
aaa
testb
adc
cmpb
xchg
pop
ds
cmp
jge
xor
cmp
shll
imul
push
movsb
data16
cld
stos
xchg
mov
add
and
adc
push
andl
mov
inc
and
and
pop
scas
push
pusha
cmp
loop
push
aas
push
push
sbb
jmp
popf
jecxz
insl
sbb
sahf
inc
xor
pop
imul
rclb
or
aam
fidivl
imul
stos
mov
out
addr16
sti
and
dec
lahf
cmpsb
or
mov
in
jge
ja
push
inc
pusha
pop
xorl
in
in
dec
mov
sub
hlt
mov
dec
add
imul
pop
and
and
bound
ja
dec
xchg
fwait
insl
mov
jnp
popa
mov
pop
mov
scas
jle
xchg
addr16
cmp
mov
stc
fwait
in
hlt
pop
mov
and
xchg
mov
dec
fstpl
xor
lea
pop
sub
adc
lret
mov
add
hlt
ljmp
in
dec
lcall
xor
push
int3
sbbl
push
xchg
cmp
push
xor
stos
insb
test
mov
add
cmp
mov
outsb
mov
out
mov
push
pop
and
and
xchg
mov
out
arpl
imul
mov
inc
aad
int
sahf
dec
das
je
push
rcrb
jmp
mov
aas
push
mov
jne
daa
and
jnp
sub
fnstenv
lret
test
mov
xchg
andl
push
out
je
jae
dec
enter
push
and
rcrb
ds
push
mov
ret
dec
popa
out
pop
add
test
add
sbb
add
movsl
xchg
test
jns
pop
xor
cmp
or
orb
insl
xor
pop
stc
sbb
jb
into
call
test
or
sti
pushf
popa
push
mov
addr16
ret
shrl
xor
shl
inc
mov
push
push
xchg
je
jg
inc
xor
xor
push
sbb
jecxz
les
out
movsl
sti
xor
pop
and
or
sbb
pop
push
mov
mov
dec
movsb
testl
sbb
pop
fwait
mov
dec
xchg
stc
test
aas
ret
xchg
xchg
push
movsb
pop
inc
fmuls
mov
adc
push
or
inc
test
or
stos
add
mov
push
stos
jp
adc
iret
sahf
inc
in
dec
cmp
add
es
fldt
fisttpll
out
mov
inc
je
stos
out
int
je
xorl
or
sbb
push
pop
mov
mov
sbb
mov
push
enter
jmp
outsb
xchg
cmp
jnp
fnstsw
xchg
out
cmp
jno
push
mov
mov
mov
movsb
pop
push
jo
lret
dec
mov
mov
popf
mov
push
jmp
sbb
push
arpl
inc
aaa
mov
xchg
nop
mov
addb
loopne
jl
ja
dec
push
sbb
call
jmp
rcrb
icebp
into
loopne
shl
sbb
loop
pop
andb
push
pop
test
xor
sbb
cmpsl
sti
ret
adc
and
mov
cmc
xchg
inc
repnz
enter
push
outsb
cli
jae
sarl
sbb
hlt
test
sbb
scas
shll
inc
int3
negl
pop
dec
das
sbb
push
nop
push
dec
sarl
loopw
pop
movsb
and
mov
in
mov
ret
sbb
nop
inc
sub
jp
inc
leave
push
fmul
xlat
das
xor
pop
mov
push
lock
iret
dec
repnz
out
out
fcomp
ret
and
mov
enter
sbb
pop
loopne
sbb
ljmp
and
push
mov
cwtl
stos
out
add
pop
sub
or
xchg
ja
rorl
rol
cmc
ret
xchg
inc
mov
mov
dec
jno
pusha
mov
pop
mov
shlb
ss
fbld
pop
test
adcl
jecxz
and
out
mov
fs
lods
xchg
inc
push
les
rcll
fisubs
sbb
or
rep
and
xor
dec
jmp
pushf
push
or
std
imul
jp
cmc
pop
or
and
mov
jle
push
pop
fadd
inc
or
pop
cs
movsl
push
shl
dec
adcl
data16
push
shr
add
cltd
shrb
in
jmp
ss
lret
pop
mov
not
or
call
adc
rcrl
sub
pop
jns
arpl
sarb
mov
mov
lods
out
aaa
call
sbb
neg
cmpb
mov
std
sub
ret
mov
mov
xchg
in
ret
and
ss
or
cmp
cwtl
xchg
jle
int
adc
cmpsb
jo
mov
push
push
outsb
cmp
xchg
fisubrs
adc
dec
adc
jae
mov
pop
or
add
xchg
mov
xor
loop
test
popf
andb
adc
push
mov
dec
stos
aam
mov
icebp
fisttpll
mov
dec
mov
adc
ret
ffree
jmp
and
mov
jo
outsl
daa
lods
fsubrl
push
add
add
xchg
lods
push
cli
add
mov
out
sbbl
jnp
gs
jbe
jl
pop
add
jnp,pt
jno
sbb
in
fchs
bnd
in
or
add
out
push
dec
lods
jb
cwtl
jg
cmp
push
test
clc
sub
popa
jle
shrl
in
xor
lds
xor
cmp
mov
dec
fwait
push
js
stc
lock
push
data16
inc
aam
xchg
movsl
shll
loopne
and
dec
popf
xchg
sub
mov
adc
clc
or
bound
lock
shl
xlat
orb
pop
or
jl
inc
dec
mov
jnp
add
bound
stos
jp
pop
jae
pop
mov
jb
xchg
fucomi
xchg
and
aam
clc
or
cmp
sub
mov
cmp
mov
or
sub
mov
sub
into
frstor
lcall
push
sub
xchg
and
cwtl
decb
xchg
cmp
aad
sahf
mov
mov
vfrczss
push
mov
xlat
fwait
subl
jb
add
into
inc
popf
xchg
jecxz
sub
decl
cmp
enter
aad
or
mov
jge
lock
inc
lret
sub
sub
aaa
test
jnp
xor
or
sbb
dec
aad
lahf
rcrl
pop
cmpsl
adc
dec
mov
xor
cli
cmpsl
jnp
mov
xchg
jge
sub
bound
xor
jecxz
and
dec
lret
xchg
test
fcmovnbe
hlt
cli
push
or
nop
dec
jns
pop
ds
or
pop
xchg
jae
outsl
jns
mov
cld
xchg
mov
dec
dec
inc
fwait
rcr
shll
push
imul
out
rolb
lods
jg
cli
inc
shrb
sbb
pushf
mov
cmp
sub
pusha
lock
jne
mov
mov
flds
mov
or
adc
lods
loope
out
nop
push
xor
addr16
jmp
int3
adc
push
jge
inc
and
cs
sbb
cld
adc
in
sbb
sbb
and
lret
cmc
mov
iret
or
pop
mov
pop
rcll
inc
pop
sub
aam
sub
cmpsl
sbb
jbe
fwait
cmp
fdivrl
rorb
push
cmpsl
fildl
inc
mov
test
std
out
ja
in
test
adc
jne
lock
lods
pop
in
lea
push
push
movb
mov
push
dec
inc
add
and
mov
jns
stc
add
mov
mov
repnz
loope
xor
jbe
cmpsb
pusha
scas
jae
push
sti
push
ss
aas
mov
pop
ret
mov
test
test
pop
mov
jle
sub
fildl
pop
push
add
cmp
cli
enter
mov
mov
mov
cmp
pop
jmp
imul
es
inc
repnz
mov
sbb
shll
aam
std
mov
insb
sbb
incl
mov
enter
lret
jb
xchg
pop
jns
mov
push
jnp
dec
or
pop
rorb
inc
test
fidivrs
xor
rclb
mov
in
add
imul
ss
sub
loop
jge
mov
inc
or
dec
lods
subb
mov
roll
mov
stc
aad
je
insl
dec
cmp
mov
movsl
fldenv
xor
js
leave
mov
adcl
mov
add
popa
push
scas
push
loop
aaa
sub
repz
test
fprem
scas
xor
adc
xchg
xchg
ret
cmc
pop
mov
and
mov
and
cmp
movl
imul
addr16
push
pop
xor
xchg
inc
fisubrl
add
das
inc
dec
popa
bound
jle
sbb
out
add
mov
mov
push
sti
iret
out
mov
pop
in
negb
movsb
iret
mov
xchg
jg
xor
adc
sbb
jg
jmp
xor
dec
mov
out
mov
call
dec
fidivl
in
mov
mov
push
jns
ret
aad
cs
or
insb
fwait
das
inc
loope
xchg
mov
shrb
jg
pop
push
jg
loopne
enter
mov
mov
fidivl
in
pop
das
clc
add
pop
mov
sbbl
cmp
jns
sbb
xlat
test
test
sarb
push
dec
inc
fcmovnb
sbb
sub
add
mov
pop
cmp
and
mov
cmpsb
or
mov
jge
stos
outsb
data16
repz
int3
xchg
imull
xchg
xor
adcb
and
mov
mov
jns
mov
dec
fbstp
pop
jge
jns
dec
sahf
jmp
sti
jecxz
push
add
std
dec
add
shld
push
jnp
sbb
jne
mov
dec
jmp
ljmp
shl
mov
dec
xor
mov
cld
cmp
xchg
inc
aaa
fsubrs
imul
clc
out
mov
enter
sahf
fisttpll
test
jo
dec
mov
stc
and
mov
mov
test
dec
pop
call
inc
sahf
pop
push
xor
xchg
sub
mov
gs
sti
adc
test
bound
xor
stc
cs
clc
shrb
pop
sti
sbb
and
inc
data16
testb
sub
negb
cmc
inc
mov
mov
pushf
out
clc
adcb
popa
fs
inc
fisubrs
insl
addr16
and
mov
push
movsb
loop
aas
mov
sbb
cmp
jbe
shrb
movsl
lahf
cmp
add
dec
addr16
mov
xchg
xor
jmp
push
jb
and
test
sbbl
push
iret
or
xchg
dec
filds
pushl
xchg
mov
test
js
test
jmp
les
fs
ret
push
lret
jnp
mov
dec
iret
in
out
mov
and
iret
fisubrl
scas
sub
gs
hlt
adc
repnz
xor
sub
subb
push
mov
test
in
shll
shll
sbb
dec
dec
clc
shl
xor
dec
add
sub
pop
dec
es
aam
iret
sub
pop
jno
mov
lds
jb
mov
push
filds
add
inc
sbb
xchg
fcmovnbe
ja
repz
loop
ss
mov
sbb
push
xchg
pushf
js
sub
pop
outsb
adcl
stos
jle
add
jge
imul
jno
mov
out
mov
mov
jg
sub
lret
and
mov
xor
pop
shll
das
add
push
fbstp
adc
or
mov
mov
lea
inc
ss
ja
push
in
and
or
repz
xchg
insl
test
andb
adc
sub
push
insb
rclb
jb
loop
pop
mov
pop
push
aas
and
sub
add
mov
xchg
dec
push
lea
jnp,pn
loopne
outsb
pop
pusha
mov
inc
ds
mov
pop
jo
cltd
popf
into
lock
jno
imulb
pushf
and
lret
in
adc
addr16
into
orl
imul
fdiv
fs
into
jle
cli
in
cmp
or
push
push
shrl
imul
je
daa
dec
mov
or
aas
mov
into
shrl
aas
xchg
cltd
or
inc
jne
jo
xor
cmpsb
lds
xor
mov
repz
fsubs
xchg
add
mov
in
cltd
mov
mov
inc
lods
lea
fmuls
out
pop
mov
lcall
lcall
cmp
int3
mov
enter
repnz
repnz
fs
addr16
stos
addr16
pop
jle
or
xchg
mov
sbb
or
push
es
icebp
sub
fnstenv
mov
mov
push
add
cmp
sub
jno
lods
out
test
push
xchg
push
mov
push
enter
in
cli
mov
mov
rcrl
mul
fcoms
jl
loope
and
je
inc
mov
or
sub
pop
std
jp
clc
xor
fxch
out
xchg
sbb
jl
out
cmpsb
mov
test
cmc
aas
mov
and
stc
aaa
call
push
fucom
stos
je
dec
andb
xor
add
push
jb
sbb
push
scas
pop
xchg
lahf
jae
sbb
sbb
mov
dec
addr16
jle
xlat
or
mov
xlat
repz
das
movsl
aad
inc
mov
fwait
push
out
adc
pop
dec
mov
pop
in
xchg
mov
lret
lcall
int3
or
cli
jbe
jbe
pop
mov
ds
int3
xchg
mov
lods
inc
jg
adc
push
outsl
pusha
xor
xlat
cmp
nop
pminsw
lcall
or
nop
pop
aas
cwtl
lahf
xor
sahf
jno
insb
xor
loope
mov
and
mov
xchg
scas
mov
ds
sbb
push
adc
mov
arpl
push
mov
fistl
lcall
cmpsl
fs
outsb
lret
jge
jo
mov
adc
cwtl
enter
add
and
jne
pop
stos
stc
inc
stc
daa
inc
cmp
movsb
adc
jno
cmpsb
add
cmp
fsubrl
lea
adc
mov
int3
xor
loope
adcl
pop
int
lds
int
arpl
ljmp
js
call
adc
decb
xchg
mov
mov
or
add
or
lock
js
outsl
fistps
mov
aaa
in
sbb
clc
bound
idivl
lds
push
jl
xor
lods
xchg
es
and
iret
sub
xorl
add
insl
repnz
xchg
mov
sub
jecxz
ss
imul
add
stos
mov
xor
aas
mov
test
cmc
daa
push
and
mov
sbb
push
xchg
fsubrs
fs
pop
ds
xchg
dec
adc
push
out
add
fimull
in
xchg
icebp
clc
imul
push
push
lret
push
ffreep
adc
jmp
daa
mov
jnp
data16
sub
fucom
pop
lcall
popf
dec
sbb
pop
mov
insb
arpl
cs
stc
xchg
jmp
inc
bound
aaa
pop
andl
adc
add
rorl
mov
out
subb
xchg
push
ret
xor
push
je
mov
ds
ljmp
dec
mov
mov
das
les
sahf
jg
aam
inc
repnz
add
push
lahf
dec
fisubrs
stc
out
das
fidivs
jb
dec
mov
les
mov
pop
es
mov
and
adc
arpl
outsb
std
jecxz
enter
insb
mov
popf
pop
mov
xor
dec
pop
movsb
sarw
insb
pushf
jbe
pop
push
push
lea
scas
pop
ret
sbb
adc
fstps
jl
xor
addl
mov
out
pop
jne
ficomps
xlat
ret
sub
stc
mul
lcall
mov
aas
clc
mov
sahf
add
mov
fcoml
xor
push
ja
mov
inc
add
andl
add
rorb
add
adc
push
lds
mov
fdivrp
cltd
push
xor
mov
sti
add
ficoms
lds
insl
mov
jecxz
xchg
jb
cmc
es
mov
pop
ja
inc
ret
mov
aaa
pop
int
repz
fdivs
mov
lcall
sbb
aam
sub
pop
arpl
enter
xor
mov
sti
dec
sub
fcomp
inc
cmc
les
mov
xchg
and
ja
mov
loop
std
push
xor
loopne
jno
and
lcall
sub
inc
push
andnps
in
cmp
xor
pushf
jne
enter
arpl
xchg
pop
lret
out
cmp
push
mov
daa
scas
insl
nop
test
ficomps
daa
mov
movsb
dec
xchg
sub
mov
lock
shll
xchg
aaa
insb
sar
in
push
cmp
addl
ljmp
cmp
jb
mov
outsl
scas
jp
gs
pop
mov
adc
fwait
jbe
jns
xor
icebp
cli
imull
std
and
jne
loope
fs
jnp
mov
dec
stos
mov
aam
mov
xchg
push
mov
jne
mov
dec
movsb
lea
gs
stc
fwait
jl
call
mov
je
cltd
stos
jle
repnz
jne
pop
das
mov
addr16
adc
push
adc
hlt
push
dec
sbb
dec
repz
and
mov
push
ret
add
mov
xor
test
cmp
sub
add
and
cmp
addr16
sub
test
xor
lret
add
dec
sbb
xor
lcall
mov
mov
fisttpll
es
xor
sbb
push
add
in
mov
add
pop
jns
mov
jns
xor
sub
pop
dec
pop
mov
test
daa
sub
inc
mov
xor
or
sub
adc
jg
xor
int
ja,pn
xor
shrb
sub
lahf
jecxz
and
js
push
pop
xchg
test
loop
push
fidivs
inc
mov
pop
jae
mov
xor
mov
cltd
or
dec
pop
mulb
xor
pop
or
xchg
xor
push
stos
ljmp
addl
cwtl
pop
inc
test
mov
cmc
jb
xchg
sub
inc
icebp
cltd
insl
mov
fildl
jae
test
cmp
repnz
scas
cwtl
mov
ljmp
cmpsb
pop
std
cmp
aad
mov
rcr
subb
lret
shrl
call
push
sub
jge
pusha
sub
sbb
push
cwtl
jmp
nop
mov
in
and
ja
popa
cli
fldt
mov
icebp
shll
adc
add
in
loopne
inc
or
cmp
pop
rcr
inc
sbb
xor
jne
mov
sbb
mov
js
xorl
and
fsts
fxch
nop
subb
mov
mov
xor
sub
mov
mov
nop
cmpl
fstl
in
jns
mov
lods
dec
jo
je
xor
pop
test
loopne
loopne
loopne
inc
xchg
ret
rolb
fiadds
jne
push
add
sahf
sub
cs
xorb
into
pop
push
and
jnp
add
mov
out
pusha
mov
daa
ljmp
jae
repnz
aam
bound
cmp
or
mov
fcoms
lods
pushf
ror
jae
mov
js
lahf
insb
cmpsl
andl
or
xchg
fisttpl
scas
inc
in
fisubrl
ret
xor
mov
ja
pop
inc
mov
lahf
fcmovnb
shlb
add
and
shll
scas
mov
mov
insl
xchg
out
sub
pop
dec
and
test
orl
fadds
outsb
add
int3
pop
xchg
jge
mov
insb
sar
roll
and
stos
mov
rorl
clc
imul
stc
or
mov
mov
pop
icebp
pop
or
scas
ret
clc
mov
cmpsb
ret
sti
nop
jmp
data16
xchg
jns
push
adc
mov
jns
pusha
mov
cmpsb
cmova
cmc
dec
sahf
add
inc
dec
in
sbb
and
out
in
ficomps
jge
jns
pusha
dec
mov
fmuls
daa
xchg
sbb
push
push
repnz
fwait
out
stos
lret
push
sub
lods
xchg
fimuls
cmp
stos
and
les
dec
sbb
out
push
aas
push
sbb
jle
pop
mov
in
push
mov
fistl
or
out
xchg
bound
and
loopne
roll
mov
les
and
repnz
or
je
or
mov
mov
mov
outsl
xor
adc
sub
xor
inc
jae
cld
ficompl
jmp
push
mov
test
xchg
sbb
cmp
pop
ja
jb,pn
lods
mov
or
pop
andl
xor
loope
insl
int
popa
iret
mov
pop
jmp
xchg
push
in
xchg
sub
daa
lret
inc
mov
mov
cld
inc
int3
jns
aad
into
jp
mov
gs
inc
pop
mov
pop
cwtl
roll
popf
dec
push
mov
mov
xchg
dec
fisubrl
xchg
stc
stc
push
fistl
test
sbb
xor
sub
hlt
mov
js
ljmp
in
push
cmpb
mov
jg
cmc
ss
add
ljmp
cltd
jle
adc
mov
and
inc
in
and
cwtl
idivb
xchg
add
std
or
jle
das
push
lcall
cld
dec
adc
inc
pop
addr16
or
mov
dec
jg
movsl
xor
add
test
popf
xchg
pop
popa
mov
call
sti
lock
inc
scas
jae
inc
mov
adc
cmc
outsb
les
scas
or
outsl
ss
pushf
mov
sahf
insb
in
xchg
inc
or
test
jl
movsl
outsl
jle
outsl
gs
rcrb
iret
push
cli
lret
mov
dec
mov
ss
push
hlt
sbb
enter
mov
jnp
add
mov
and
pop
loopne
add
push
xchg
js
xorl
outsl
mov
inc
es
js
xor
fiaddl
cwtl
rcrb
pushfw
cmc
sub
scas
sub
add
mov
mov
inc
push
iret
sbb
pop
and
push
mov
lcall
test
inc
dec
push
jge
mov
add
scas
lock
xchg
stc
in
jno
mov
sub
in
cmpsb
add
in
push
int
cmp
fidivs
cmp
jle
mov
ja
xor
xchg
or
jge
push
outsl
xlat
pop
mov
in
jae
enter
lret
add
pop
adc
sahf
add
mov
out
mov
push
push
shll
mov
and
mov
in
fstp
cmpsb
scas
lcall
int3
sbb
arpl
ja
adcb
rclb
mov
aas
movsb
mov
addb
mov
or
xchg
or
inc
andb
xchg
lds
adc
addl
aas
mov
or
mov
orl
hlt
lcall
popl
mov
sub
pop
cmp
fldt
clc
mov
xchg
adc
ret
sub
movsl
and
jmp
loopne
int3
mov
pop
lcall
fsubrl
addl
xor
in
cmp
idiv
outsb
inc
movsl
fistps
gs
jb
test
mov
inc
call
mov
push
pop
fisttpl
jmp
movl
xlat
cli
xor
inc
mov
fisubl
clc
push
movsb
mov
loopne
repnz
mov
outsl
mov
push
scas
mov
dec
xor
and
jge
sahf
and
mov
inc
mov
stc
cmp
dec
mov
cld
or
mov
loope
das
mov
jp
pop
xor
add
mov
imul
shl
xchg
sub
xchg
iret
jmp
and
inc
sub
sbb
loop
movlps
or
data16
pop
and
das
test
mov
adc
inc
negl
mov
movsb
lock
test
push
popf
into
pop
shlb
mov
fisubrs
fmull
cmpsl
pop
les
cmp
xchg
xchg
icebp
js
ret
or
adc
lahf
sub
out
imul
in
pop
jns
sbb
sub
ret
push
mull
mov
mov
test
lea
insb
gs
jp
scas
jns
adcb
es
xor
insl
sbb
aas
fidivrl
popl
loope
push
out
ja
sub
ja
int
stos
lds
icebp
jne
mov
and
jl
imul
lods
dec
stos
cs
fisttpll
or
loope
jg
push
pop
mov
int
ds
gs
dec
lahf
call
lahf
cmp
stos
sub
and
push
xor
arpl
scas
inc
mov
sbb
xor
pop
faddl
mov
jecxz
mov
xchg
jo
adcb
mov
repz
outsb
sub
and
sti
pop
mov
xchg
jnp
sub
fldenv
test
push
push
mov
sahf
cli
in
dec
cs
sbbb
cmp
hlt
mov
cmp
insl
inc
pop
xor
out
andb
push
ja
in
repnz
dec
les
das
fsts
push
inc
out
xchg
leave
jb
dec
adc
mov
add
sbb
pop
pop
repnz
sbb
and
aad
mov
addl
or
pop
or
cmpsb
push
outsb
dec
inc
adc
or
xor
mov
insb
sti
jmp
stc
movsl
mov
dec
in
out
cmp
jmp
ss
lret
add
dec
push
mov
mov
lock
mov
cmpsl
jno
stos
mov
inc
aaa
lret
push
les
dec
or
mov
dec
pop
sbb
and
push
negb
icebp
xor
sub
adc
mov
push
pushf
inc
test
insb
inc
jg
mov
add
push
imul
mov
in
cmpsb
mov
inc
mov
icebp
pop
repz
sahf
xchg
lods
aas
aaa
in
fdivr
je
push
clc
movsl
push
jb
push
clc
stc
adc
lock
fwait
xchg
adc
aaa
fs
inc
out
xchg
cmpsb
push
js
in
xor
dec
dec
xchg
test
sbbl
test
daa
fld
sti
pop
jae
xor
cmp
add
dec
mov
and
fimull
fs
imul
push
xchg
out
mov
js
cmpsb
pop
in
loopne
cmpsb
psraw
int
or
jbe
xchg
mov
push
lcall
adc
add
inc
insl
xor
cmp
pusha
aam
mov
adc
xchg
mov
leave
popa
push
sub
sub
dec
adc
push
repnz
mov
lea
push
in
mov
push
lock
sub
add
jb
ljmp
adc
dec
dec
rol
jecxz
add
sbb
mov
test
xorb
movsl
dec
cs
std
dec
into
xlat
sbb
mov
data16
cltd
mov
mov
or
fmul
test
pop
std
add
stc
mov
dec
or
pop
push
decb
ljmp
dec
push
push
call
mov
icebp
insl
std
pop
gs
es
add
fisttpl
js
cmp
cmp
fcoms
sbb
shlb
jbe
mov
js
mov
inc
into
lret
pop
jl
adc
or
push
fiadds
sub
xor
dec
xchg
sub
ljmp
not
mov
test
scas
les
adc
iret
or
lods
and
sub
or
dec
test
mov
movl
inc
test
cld
pop
call
or
aam
push
mov
es
mov
cmp
imul
mov
xchg
and
jg
jnp
ret
outsl
jns
dec
add
movb
insl
or
dec
pushf
imul
push
mov
sub
jecxz
sarl
inc
cmp
xor
scas
popf
movsl
rcl
adc
push
lds
dec
inc
adc
fistps
jg
mov
sarb
dec
adc
inc
xchg
jl
ret
out
stc
and
pop
mov
insl
push
dec
jmp
dec
mov
pop
sub
sub
xchg
leave
aaa
mov
stc
mov
ds
mov
hlt
sbb
and
mov
cld
scas
sub
inc
cs
sub
ja
jle
insb
mov
mov
cli
ret
jnp
push
in
xlat
repnz
jb
adc
mov
or
lcall
push
or
setp
and
xchg
ss
dec
cmc
call
pop
call
xchg
mov
adcl
out
xchg
push
jge
inc
imul
call
stc
sti
mov
mov
scas
outsb
rol
mov
loopne
pushaw
shll
mov
and
dec
mov
cwtl
cli
ss
jg
arpl
xor
xor
sub
sub
push
mov
adc
and
mov
fcmovnbe
popa
outsb
push
movsl
mov
sbb
stos
das
add
xor
sbb
dec
fstpl
xchg
mov
jne
fs
xor
add
subb
and
lods
push
movsl
sub
in
push
fadds
xchg
fisttpll
xor
dec
lea
xchg
out
xchg
cld
iret
pop
pop
int
xor
stc
mov
inc
add
cmpsb
sar
dec
movsb
or
inc
sbbl
sahf
cs
int
leave
scas
add
cs
arpl
pop
mov
filds
adc
and
add
mov
inc
jecxz
repnz
push
notb
push
rcrb
movsl
jne
add
scas
mov
sarb
jns
add
cmp
fdivrs
mov
cmpsl
jae
adc
or
push
inc
lods
ds
sbb
cltd
cmp
xchg
shrl
faddl
sub
test
xchg
mov
leave
rcrl
test
mov
test
mov
inc
cwtl
lods
sbb
adc
rcrl
subl
xchg
sub
pop
push
xchg
ljmp
jle
icebp
sub
mov
aam
mov
stos
dec
cmp
jge
jg
ret
ret
or
adc
repz
cmpsb
mov
fs
fcmovu
call
inc
and
lds
mov
and
ficomps
add
pop
pushf
jo
enter
loop
out
test
sbbl
pop
inc
add
add
cmp
and
scas
fisubrl
xor
xor
rol
adc
nop
rcll
push
out
lds
fwait
ljmp
out
sub
fldt
push
add
enter
mov
pop
fsubrp
test
push
popa
inc
cwtl
add
mov
sub
jle,pt
filds
popa
xor
pop
dec
shrl
xchg
test
cld
insl
clc
bound
mov
xchg
iret
call
test
mov
stos
sbb
out
mov
ficompl
scas
jae
jecxz
bound
lods
jno
xchg
enter
fmulp
loop
xor
leave
xor
xorb
rcrb
js
jle
mov
mov
ljmp
mov
lret
mov
inc
testl
ret
mov
pop
cld
mov
movsl
add
mov
fs
pop
push
clc
dec
arpl
icebp
cmp
pop
data16
mov
inc
pusha
cmp
sub
or
shll
jl
mov
stos
xchg
xchg
push
test
add
jb
fwait
cwtl
sbb
push
addr16
cmp
addb
fs
.byte
and
xor
and
outsb
sahf
popa
stc
ljmp
mov
mov
mov
xor
leave
cs
das
push
cld
add
xor
mov
lret
lahf
movsl
sub
pop
repnz
ds
cmp
cmp
aas
loopne
xor
inc
adc
mov
xor
sub
rorb
adc
jbe
add
inc
pop
je
and
xchg
pop
fmul
push
inc
cld
jb
xor
mov
cmp
movzwl
inc
addl
adc
ja
pop
ss
jge
mov
dec
int
gs
sub
pop
xor
xchg
add
cs
add
dec
mov
icebp
out
out
div
int
push
call
push
mov
out
dec
xchg
fists
stc
jno
shll
fpatan
add
jo
pop
inc
and
jo
sub
push
xlat
mov
and
test
shl
sub
addr16
and
jbe
std
xor
fsts
pop
scas
cmpl
lods
mov
or
mov
cmp
pop
pop
outsl
xor
pop
or
fistl
sahf
xor
clc
sbb
or
jle
xchg
into
inc
scas
sbb
xor
aaa
push
pop
pop
pop
sarb
stc
loope
je
ds
ljmp
js
addr16
sbb
repnz
repnz
loope
push
lret
iret
out
mov
imul
lcall
xorl
mov
vpmaddwd
mov
fwait
popf
sahf
xchg
fwait
andb
cmp
pop
imull
jb
shll
lds
xchg
scas
les
arpl
lret
fdivl
push
flds
xor
out
frstor
adc
fcmove
mov
iret
fisubrs
and
lods
rol
jmp
rcl
fs
sbb
test
repnz
adc
adc
sbb
push
inc
stos
push
mov
test
stos
dec
add
add
xchg
cwtl
cld
scas
jne
sub
xchg
push
pop
sbb
nop
dec
push
dec
negl
inc
sbb
push
pop
cli
pop
push
fldenv
and
sub
ds
out
cmpsl
sbb
push
mov
jo
pusha
xchg
mov
leave
and
and
std
mov
int3
sahf
ret
mov
cmp
adcl
push
push
test
xlat
cmp
fcoms
shlb
fs
sbb
stos
dec
fcompl
lods
fmull
or
addr16
sbb
pop
aaa
sbb
pop
xor
add
cmp
lcall
cmp
cmc
pop
repnz
mov
add
pop
js
mov
or
scas
xor
and
sub
fs
test
adc
mov
dec
pop
in
scas
icebp
je
mov
test
sbb
es
mov
inc
jns
xor
push
xchg
mov
mov
aam
mov
test
lret
in
out
mov
mov
movsb
lcall
mov
inc
jge
push
mov
divl
inc
or
cmp
push
push
adc
ret
sbb
xchg
push
nop
rcr
loop
cmc
jmp
mov
add
mov
adcl
rcll
int3
inc
add
pop
cli
dec
adc
rcrb
lock
inc
mov
mov
cmp
xchg
out
or
lret
repnz
adc
cmp
push
sbb
jb
dec
cwtl
mov
sub
push
pop
and
xor
pop
test
xor
add
testl
pusha
push
ja
nop
nop
mov
or
inc
xchg
push
jo
call
call
sub
sub
out
mov
popf
ds
push
push
sbb
dec
mov
shr
lcall
into
lock
repz
push
or
xchg
jge
sub
aaa
out
push
mov
roll
sub
fs
mov
adcl
sarl
adc
xchg
fisttps
or
mov
sub
repz
ret
and
lock
rcrb
mov
sahf
fstpl
dec
mov
adc
iret
dec
ss
xor
sub
in
push
pop
adc
gs
sbb
ss
xlat
xor
push
cltd
pushl
inc
aam
pushf
out
cs
pusha
clc
jg
jle
popaw
rorl
mov
dec
popf
lcall
jb
jbe
test
imul
xchg
ss
out
push
ds
mov
loopne
andb
aas
stos
mov
dec
out
pop
jecxz
addb
mov
pop
data16
sti
call
je
test
les
inc
sub
jge
into
hlt
fstl
adc
out
push
out
push
fwait
or
int3
inc
sbb
mov
xchg
dec
rcrl
ret
xor
or
push
into
or
lds
jmp
mov
jbe
aad
or
shlb
dec
jbe
mov
test
daa
stc
ljmp
fldt
pusha
in
xor
mov
jb
std
jp
or
adc
mov
mov
inc
mov
jnp
ret
mov
pop
imul
fdivl
movsl
popf
enter
dec
fisttps
xchg
es
sahf
xchg
imul
or
cmpl
ror
sub
mov
cmp
std
push
or
cmp
ljmp
xor
lods
mov
or
es
pop
push
rcr
pop
adc
cld
mov
mov
sbbb
leave
in
in
leave
test
cmpb
cltd
pop
push
js
in
jne
inc
jnp
je
cli
sbb
push
sub
clc
ja
js
in
nop
addr16
or
dec
and
sub
add
inc
xchg
mov
cltd
or
mov
xchg
pushf
jl
lret
xor
cmp
shlb
sbb
in
cmc
int
rolb
inc
call
insb
sbb
pop
sbb
jbe
lahf
mov
fstpl
jg
test
xchg
out
cmp
xchg
mov
push
cmpsl
mov
jae
shrb
add
stc
cmp
mov
aas
mov
pop
aas
xor
dec
adc
jmp
and
or
sub
mov
out
push
test
pop
mov
leave
sub
icebp
stos
into
inc
stc
xor
repnz
rol
fwait
ret
adc
xor
jae
xchg
loope
pop
rcrl
push
loopne
in
pop
add
xor
mov
cmpsl
aad
fisubrl
mov
cld
inc
mov
add
pop
jb
fisubrs
popa
adc
rorl
inc
dec
mov
add
mov
and
bound
sbb
cli
cmpsb
mov
pusha
das
lret
lods
outsl
jecxz
jecxz
inc
icebp
sbbl
or
pop
mov
pop
cmp
and
movsb
and
push
jmp
jl
xor
outsb
fstpl
sub
push
and
test
das
shl
out
mov
into
and
sub
sar
sub
sbb
test
aas
nop
dec
sub
loope
or
mov
repz
leave
xchg
pop
sti
cmc
sbb
insl
and
popf
jmp
push
or
stc
sbb
cmp
icebp
rclb
inc
sbb
dec
jg
xor
clc
out
xchg
ret
subb
xor
andb
inc
insl
adc
mov
mov
xchg
cli
arpl
jbe
pop
fldcw
push
pop
pop
pop
xchg
mov
orl
addr16
ret
andl
xor
pop
sub
adc
addb
cmpsl
mov
daa
scas
sbb
mov
adc
lods
xchg
xlat
cmpsl
xor
sbb
push
cmp
push
pop
insb
dec
dec
stc
stos
mov
sbb
add
sbb
fmul
mov
add
mov
sbb
enter
dec
in
mov
shlb
mov
dec
adc
sbbl
mov
lock
sub
adcl
ljmp
pop
shlb
das
xor
loop
bound
mov
enter
cmp
data16
mov
jnp
xchg
push
and
pusha
cwtl
lret
aad
stc
jo
mov
out
xor
dec
jge
dec
cs
sbb
adc
mov
stos
out
pop
jl
ret
ljmp
xor
popf
cltd
pusha
shll
pop
sub
add
and
dec
jg
sub
pop
in
pop
cmp
cmpsb
insl
int
jne
ljmp
in
mov
dec
les
outsl
dec
and
add
movsb
scas
mov
cld
out
ret
jmp
or
jl
mov
inc
mov
aad
inc
es
inc
das
sbb
out
jp
adc
adc
hlt
insb
or
nop
dec
repz
or
dec
hlt
rorl
xchg
stc
cli
mov
sarb
cmp
sbb
fdivrs
jns
xor
imul
push
pop
sbb
ss
sub
popa
cmpsl
add
jns
inc
adc
inc
cld
cld
cmp
jmp
cmp
push
push
push
mov
xchg
xchg
add
int
jg
and
jnp
and
push
xor
shrl
ret
or
mov
std
xor
xchg
mov
mov
and
inc
xchg
mov
pop
mov
lahf
int3
aad
mov
test
mul
xchg
and
cmpb
int3
iret
pop
not
test
pop
outsl
or
ret
jge
sub
rorb
xchg
add
pusha
cmc
adc
pop
adc
outsb
loopne
das
adc
enter
xchg
leave
cmp
dec
mov
shrb
inc
jl
test
push
test
jge
cmpsb
addr16
or
push
cltd
imul
xchg
dec
xchg
sbb
shlb
mov
test
mov
mov
cmp
vmwrite
insl
pushf
jmp
imul
push
cs
out
sub
jmp
and
stos
jl
push
mov
pop
sbb
iret
push
js
pop
int
and
jae
sti
dec
adc
sahf
in
mov
mov
pop
adc
pop
adc
mov
adc
andb
lods
out
dec
and
enter
jb
popf
imul
fsubr
jp
sbb
les
cmpsl
cmc
inc
jns
pop
cmc
jae
sbb
fstps
jb
fnsave
mov
xlat
fidivl
cmc
mov
jne
xchg
xchg
cmp
es
outsb
sub
mov
icebp
pop
addb
mov
push
shlb
dec
sahf
adc
dec
aam
jb
clc
inc
xor
sub
ficomps
jecxz
jae
xchg
cmp
mov
mov
xchg
aaa
sti
or
out
jmp
sub
mov
sbb
andl
js
push
stos
pop
adc
in
xor
dec
jp
ds
ds
pop
push
adc
jg
addr16
mov
mov
inc
test
nop
and
push
inc
fwait
cmp
ds
icebp
sbb
xlat
aaa
push
xchg
xchg
mov
inc
int
das
mov
out
lahf
mov
mov
repnz
adc
mov
pop
xor
call
push
xchg
cli
cs
notl
xchg
pop
outsb
decl
sbb
test
xor
sbb
rdpmc
cmp
mulb
mov
pop
mov
shlb
pop
bound
xchg
adc
jne
adc
das
or
clc
jmp
jecxz
dec
add
dec
imul
std
fwait
mov
inc
aad
add
lgs
inc
cli
xor
and
or
inc
into
adc
leave
cmpsl
jge
sbb
pop
lcall
mov
int3
mov
cld
sbb
fwait
xchg
push
xchg
cwtl
pop
inc
shl
out
sub
push
or
or
les
sub
test
inc
adc
cmp
add
adcb
movsl
mov
jl
sub
and
je
push
roll
insl
push
mov
out
cmpsb
pop
or
jle
or
inc
xlat
in
push
mov
pop
xchg
ss
outsl
pop
cmp
sahf
fdivrp
xor
xor
call
mov
sub
dec
cmp
iret
ljmp
inc
jge
cmp
xchg
mov
lcall
lock
jo
dec
add
inc
mov
cmpsl
bound
mov
jb
adc
stos
or
push
fimull
xor
mov
mov
mov
or
pop
lock
sti
or
sbb
mov
imul
xchg
cmc
cmp
mov
stos
mov
movsb
shlb
sub
cmpsb
call
ret
xor
cmp
jmp
mov
cld
mulb
idiv
gs
icebp
aas
ret
sub
jne
js
aaa
insl
push
iret
jg
inc
jnp
pop
mov
xchg
push
push
mov
xchg
ss
dec
sbb
ret
adc
or
mov
cmp
shrl
jge
dec
ja
cli
sub
loopne
inc
mov
sub
pop
test
fistl
jle
fdivr
push
lods
dec
xor
jae
out
cwtl
or
or
aaa
cmp
mov
mov
idivb
cmpl
mov
ds
pushf
dec
or
fcmovnb
cli
in
sbb
mov
mov
nop
aas
lock
inc
cltd
loope
xchg
add
pop
xchg
xor
fnstenv
mov
xor
mov
roll
mov
or
sbb
push
jmp
fdivrs
ret
addl
out
jg
xchg
lret
test
push
std
aam
mov
not
adc
mov
decl
cli
mul
jg
and
pop
push
and
test
fldl
push
pop
xchg
inc
jnp
xchg
adc
xchg
and
mov
es
jle
test
sub
xchg
and
aam
cmp
pushf
cmp
add
mov
jecxz
mov
lock
scas
push
stos
inc
cwtl
jge
ret
fs
pop
xor
fcom
loope
push
shll
stos
pop
lods
dec
xchg
or
add
into
lods
fs
dec
xor
inc
int
pop
cmp
sbb
sub
outsl
fisttpl
or
mov
lcall
adc
jae
pop
addb
sub
mov
push
data16
push
popf
mov
adc
xor
push
int
cmpsb
xchg
mov
push
out
jecxz
aad
sub
mov
jle
pop
into
or
leave
dec
das
mov
stos
aas
stc
jp
adc
adc
loope
adc
and
bound
mov
mov
push
subl
mov
pop
cs
push
stos
cld
jl
loopne
cmp
inc
sbb
fs
leave
icebp
xchg
xchg
mov
test
mov
frstor
dec
aas
in
mov
fidivrs
pop
add
jle
pop
fidivl
loope
cmp
into
dec
fldt
adc
pop
xchg
test
xchg
inc
mov
sbb
cwtl
push
cmc
sbb
loop
frstor
pop
lea
cltd
imul
add
mov
data16
cmp
cmc
xor
sub
xchg
mov
cwtl
test
out
and
xchg
dec
orb
mov
pop
pop
repz
sbb
popf
std
adc
sub
outsl
outsl
pusha
inc
sbb
push
aam
add
push
dec
ja
enter
popa
or
data16
push
sbb
sbbl
mov
jno
sub
inc
lea
negl
mov
or
mov
mov
imul
mov
push
scas
mov
or
push
push
jmp
inc
xchg
repnz
inc
int
ss
adc
outsl
jg
pushf
mov
aam
and
andl
loop
dec
xor
jns
or
dec
lods
mov
push
sub
jns
mov
cmp
jns
orb
sub
mov
sar
sti
cmc
lret
in
jb
scas
int
pop
mov
mov
fildl
out
fdivp
pop
in
sbb
outsb
leave
shlb
mov
dec
mov
dec
hlt
pushf
jo
lret
dec
mov
divb
inc
adc
roll
pop
cs
cmp
jg
cmpsl
repnz
sti
cld
jno
dec
cltd
enter
stos
mov
gs
sbb
loope
sbb
push
out
je
xor
mov
jecxz
ljmp
mov
jno
jns
push
test
test
fadd
cmp
pop
fdivrl
mov
and
mov
clc
xchg
addr16
sbb
sbb
stos
mov
in
add
jae
fimuls
add
cs
jbe
dec
xchg
mov
in
xlat
out
aam
cld
xchg
pusha
and
jle
daa
ret
and
sarl
pop
xchg
shl
shrl
xor
lcall
repz
pop
bound
shll
cmp
scas
and
sub
movsl
or
or
mov
mov
iret
iret
jnp
incl
cmp
add
ss
sbb
xchg
lahf
and
out
cmpsl
jge
sub
inc
jg
rcrl
fnsave
mov
mov
mov
xchg
sub
push
mov
mov
push
cmp
fmuls
or
ja
jle
lret
adcb
and
xor
push
outsb
xchg
hlt
jo
add
lods
xor
xchg
mov
xchg
mov
cmc
jg
and
addr16
dec
xor
jmp
mov
pusha
pushf
pop
xlat
pop
test
sbb
inc
andb
addr16
js
in
fmull
and
mov
inc
sti
movl
fcomp
lea
xchg
pusha
divl
xor
inc
fwait
cmp
jnp
lret
pop
add
icebp
adc
outsl
pop
dec
popa
mov
insl
cli
xchg
inc
addr16
subl
clc
test
pop
adc
out
loop
mov
in
sbb
cltd
cmp
lock
sbb
dec
scas
popa
xchg
nop
fsubs
je
push
inc
mov
mov
jb
cs
test
mov
fcmovbe
inc
imul
sub
dec
xorl
outsb
pop
or
call
insl
xchg
inc
loope
push
or
or
and
or
gs
jno
lret
scas
and
iret
fiadds
fwait
shlb
jp
aas
push
mov
inc
out
push
or
inc
sub
std
xor
jae
mov
cli
aam
xor
add
lret
jge
stos
inc
mov
xchg
fdivs
adc
mov
in
xchg
push
jno
in
inc
push
pop
stc
xor
dec
test
inc
sub
push
dec
fistpll
daa
xchg
push
and
sbb
call
sub
das
mov
adc
ja
movsl
adc
mov
aas
sbb
insb
mov
push
fwait
stos
mov
push
jno
mov
jae
inc
test
lahf
js
add
icebp
jp
imul
xchg
testb
push
fxch
enter
adc
sbb
inc
enter
je
or
icebp
loope
lods
scas
stos
jbe
dec
mov
xchg
or
xchg
popf
inc
jno
cmpsb
lret
cmp
adcb
loopne
fnstsw
xchg
mov
jge
mov
repz
push
ret
jl
xor
jb
shl
clc
sbb
outsl
sahf
int
pop
stos
leave
testb
add
loope
lret
adc
jnp
and
and
lcall
adc
pop
sbb
lock
jg
filds
mov
push
cli
in
ja
push
mov
add
imul
push
dec
adc
pop
dec
xor
cltd
scas
pop
icebp
jbe
pop
lods
xchg
push
dec
sbb
jae
loop
ja
stc
push
xchg
adc
sub
arpl
seto
aas
fs
inc
push
mov
pop
mov
push
pushf
jns
insl
fsubl
loopne
sub
lods
push
push
mov
fisttpl
push
faddl
dec
cli
xor
add
jae
cmpsb
cld
mov
fistpl
test
outsl
stc
jle
sahf
mov
mov
mov
cwtl
mov
nop
clc
lcall
arpl
mov
filds
cmpxchg
mov
xor
push
cmp
or
shll
loopne
clc
adc
cltd
roll
cmp
jne
lods
sub
out
ret
loope
in
rorb
jns
mov
add
lret
lods
roll
cmc
mov
in
int
cmp
cmp
sub
jb
and
push
out
popa
je
mov
out
xchg
pushf
and
ret
lcall
push
sbb
push
pop
in
dec
cld
jae
dec
int
mov
add
push
pop
push
out
mov
inc
xorl
lret
dec
inc
cmp
cltd
xor
ficomps
xchg
pop
clc
jne
sbb
mov
sbb
add
sub
ljmp
test
fstpt
in
jns
mov
ja
je
inc
adc
js
jmp
popf
lret
cmc
dec
or
adc
dec
out
push
sub
pop
lret
inc
insl
std
jbe
sbb
pusha
popa
xor
pop
push
repz
fmul
mov
mov
scas
pop
add
lret
int
dec
test
and
arpl
sarl
push
pop
shl
popf
jnp
and
addr16
aam
push
std
pop
mov
mov
jp
aaa
test
repnz
mov
xchg
and
pop
movsl
jbe
xchg
or
cmp
stc
and
mov
xchg
and
aad
cmp
enter
lds
mov
mov
call
mov
adc
mov
xchg
test
mov
aad
push
sbb
cmp
push
test
cld
out
fnop
pop
hlt
sub
in
cwtl
add
inc
nop
fdivl
int3
adc
push
sub
mov
fists
shll
lock
xor
stos
add
jnp
fisttps
pop
push
and
repnz
lret
inc
pop
fstl
out
nop
inc
pop
roll
jp
sbb
xchg
add
inc
add
cs
test
xchg
or
push
push
mov
push
inc
pop
and
mov
jp
and
or
loop
inc
jg
imull
pop
int
xchg
jbe
sub
into
mov
pushf
testb
xor
pop
cmp
popf
or
jae
and
sub
xchg
sahf
in
xchg
rcll
in
ss
pop
lret
mov
cmpl
inc
cli
cmp
ret
dec
mov
push
loope
mov
lret
fwait
mov
fwait
outsb
ret
mov
in
inc
add
cmp
int
ror
fldt
int3
les
jae
adc
mov
cli
loop
cmpsb
in
int3
es
pop
mov
mov
push
or
popf
mov
pop
cmp
cmpsl
mov
cmpsb
and
rep
cmpsl
jl
jge
and
std
in
or
adc
imul
iret
mov
in
movsl
add
mov
xchg
inc
dec
pushf
lds
popa
sub
fiadds
cld
fnsetpm(287
and
or
xor
stos
stos
mov
icebp
inc
pop
popa
dec
stos
outsb
sub
xor
in
push
push
mov
mov
sbb
dec
sbb
jl
inc
jb
add
out
sti
cmp
or
push
scas
repnz
int3
dec
ja
push
cli
lret
fsub
inc
and
mov
pusha
enter
push
and
cld
inc
in
rclb
mov
cmp
push
xchg
sub
lock
dec
jge
push
imul
pusha
scas
sbbb
pop
ret
popf
mov
jns
dec
in
jmp
pop
mov
mov
lahf
jae
out
bound
mov
out
movsl
repnz
jae
cld
cltd
dec
inc
in
int
sar
adcb
xlat
fsubs
xlat
ror
pop
lods
jmp
movsl
js
mov
rcl
popf
sbb
shll
movsl
sbb
push
fldt
cld
mov
icebp
jp
fwait
adc
outsl
mov
imul
adcl
dec
jge
pop
fnstcw
xor
mov
aam
adc
adc
stos
mov
cmp
pop
xor
je
clc
aaa
stc
repnz
pop
add
push
add
sub
es
test
jns
sub
inc
add
add
push
aam
sbb
stos
stos
pushf
inc
pop
xchg
fildll
jb
sbb
cmp
xchg
sbb
cmovge
xchg
mov
push
lcall
jns
xchg
notl
imul
movsl
rolb
leave
cli
jmp
in
xchg
outsb
test
adc
xor
gs
inc
dec
xlat
push
int
scas
in
outsb
daa
stc
pop
sub
sub
adc
jmp
sahf
inc
add
repz
aaa
aam
pop
cmp
fsubs
add
lods
jecxz
pusha
adc
xor
cli
cmp
leave
mov
out
adc
xchg
clc
andb
xchg
mov
shll
lods
jmp
xchg
mov
sarl
frstor
insb
sbb
stc
mov
dec
xor
inc
popa
scas
or
scas
imul
enter
cmpsb
stc
xor
push
adc
ss
xor
adc
mov
sbb
les
xchg
cmpl
cmpsb
push
mov
jmp
cltd
dec
push
mov
negb
aad
in
sbb
dec
icebp
xor
xor
test
cmp
push
cmc
in
loope
sub
loop
fisubrl
in
dec
sub
xlat
push
xchg
in
push
fnstenv
jl
es
xor
mov
mov
mov
cld
cmp
clc
add
out
in
mov
ja
push
mov
roll
dec
mov
push
mov
cltd
les
pop
dec
ds
int3
jg
repnz
push
jnp
imul
shrb
lahf
inc
adc
add
sub
pop
push
push
push
push
lock
dec
andl
and
outsb
jbe
xchg
and
mov
arpl
fimull
arpl
pushf
int3
shrl
mov
mov
sub
stc
repz
icebp
add
xchg
ds
xchg
stos
std
mov
bound
int
mov
mov
push
xchg
aam
add
test
test
and
movsb
adc
dec
mov
roll
sti
maxps
add
inc
add
movb
cmpsb
std
push
fldl
sbb
pop
scas
out
pop
cmp
jp
lret
push
pop
and
push
pop
aad
test
dec
xor
lods
inc
mov
inc
adc
sbb
dec
cmp
popf
sbb
loopne
clc
jae
jno
fsubr
lock
popa
in
mov
xchg
sub
jle
mov
sahf
add
mov
xchg
cld
xor
mov
daa
int3
std
pop
leave
mov
in
and
pop
lret
push
mov
mov
arpl
xor
sub
pusha
cs
inc
mov
or
inc
and
xchg
xchg
xchg
test
jnp
jl
jns
andb
sub
sbb
sbb
pop
dec
outsb
pop
dec
push
lcall
cmpsb
mov
jmp
adc
cmp
xor
cwtl
push
mov
aas
shlb
dec
sub
jbe
mov
cmpsl
jle
ljmp
aas
out
fdivrl
adc
or
dec
fwait
aam
test
sbb
push
out
sbb
pusha
xor
int
xor
ja
in
mov
mov
imul
imul
fdivrp
sbb
ror
and
rcll
sub
aam
test
mov
insl
push
je
sbb
pop
dec
sbb
outsl
sub
and
xlat
js
and
rolb
and
sub
sbb
insl
in
out
fcomps
rorb
push
fucompp
imul
adc
sub
adc
mov
jbe
jno,pt
jl
push
test
rorl
sbb
and
subb
xor
test
jnp
repnz
roll
movsb
xlat
mov
pushf
mov
outsl
pop
jecxz
fwait
cmp
aam
in
rcrb
sub
shl
or
rcr
out
cli
stos
das
adc
dec
pop
outsl
pop
loope
jae
cmp
mov
cltd
shll
ret
movsb
addr16
dec
push
lea
mov
mov
sub
ss
pop
and
jge
rcrb
xor
stos
or
push
stc
sarl
sub
dec
rcrb
fbstp
roll
and
std
xchg
jbe
xor
out
inc
xor
mov
mov
dec
fucom
inc
jo
cmpsb
jecxz,pt
xchg
pop
xchg
jmp
nop
mov
inc
pop
outsb
push
adc
mov
push
adc
pushf
test
icebp
aam
inc
call
jns
mov
mov
mov
repz
add
dec
mov
inc
call
add
testl
lahf
int
jmp
adc
inc
pop
cmpxchg
outsb
pusha
ja
bound
sbb
test
idivl
lret
dec
cmp
scas
jo
and
jp
pop
mov
pop
add
add
xor
add
jbe
daa
cmp
mov
dec
and
sahf
out
adc
frstor
bound
push
faddl
xchg
subb
mov
pop
push
adc
lods
jae
sbb
adc
xchg
pop
or
or
jecxz
mov
mov
repz
cmp
pop
pop
fistps
in
out
popa
cwtl
xor
mov
out
xor
jecxz
aas
jp
in
pop
and
into
repz
lret
xlat
xor
das
stos
rcr
cmp
inc
repz
jbe
idiv
push
stos
stc
iret
mov
cltd
incl
push
or
ja
scas
xchg
popa
xchg
call
or
lock
jecxz
add
test
or
mov
mov
or
js
adc
loopne
jl
inc
cmpsb
push
repnz
imul
fcoml
push
jecxz
jae
dec
mov
xchg
mov
adc
call
or
and
movl
call
adc
xor
dec
or
xchg
divl
cld
ret
push
jmp
dec
mov
or
mov
sub
pop
pusha
jbe
iret
cmp
sbb
xchg
pop
loopne
lock
cli
out
cmp
or
rcl
insl
dec
inc
cltd
dec
dec
outsb
cs
jne
imul
inc
mov
sahf
shrd
int3
add
mov
inc
loopne
dec
shll
sub
shll
ret
mov
cmpb
inc
jmp
lret
nop
fmulp
mov
adc
iret
jno
fcoml
add
cmpsl
clc
cs
sub
test
pop
loope
pop
jno
cmp
jl
sub
repz
and
jl
push
add
inc
nop
arpl
fimuls
sbb
cmp
mov
bound
jo
mov
in
es
scas
pop
cli
mov
and
out
push
lods
adc
pop
loopne
hlt
jo
mov
xchg
push
adcl
pop
add
cs
xchg
adc
mov
in
movsl
xchg
test
sbb
es
pop
and
lret
jmp
jecxz
cwtl
mov
icebp
jmp
lock
test
shll
mov
hlt
dec
add
jmp
sbb
sahf
stc
in
cld
xor
aad
test
xor
mov
sub
and
or
loopne
lock
push
lcall
jmp
arpl
xor
inc
shr
jl
mov
inc
mov
dec
fisubl
sub
pop
lods
push
lods
dec
cwtl
add
scas
jbe
inc
es
fimuls
stos
adc
cmp
orl
jl
add
addr16
clc
or
xchg
push
add
int
sahf
cmp
lea
push
adc
pop
dec
bound
fstpt
cmp
test
mov
cmp
lret
dec
pop
push
xor
mov
push
cmp
xchg
and
push
mov
outsb
outsb
call
pushf
or
dec
pushf
xchg
stos
jae
pop
jns
and
xchg
jp
rcrb
add
adc
cmp
cs
nop
or
mov
std
sub
aam
cmp
movsb
aas
int
inc
imul
xchg
in
add
pop
pop
sbb
push
xchg
sub
cs
dec
push
daa
jmp
andl
push
icebp
ret
cmovnp
mov
jecxz
sbbb
inc
fsubrs
xor
mov
inc
stos
jno
and
or
aas
imul
in
repz
mov
fidivl
xchg
add
mov
out
arpl
jbe
test
inc
dec
rorl
mov
pop
jns
sub
inc
mov
mov
inc
int
fdivrs
aam
mov
je
or
in
ret
cwtl
lea
sbb
pushl
subl
dec
out
nopl
cmp
push
lock
fnstcw
mov
sti
out
push
repz
lea
arpl
faddl
roll
dec
adc
add
xchg
inc
add
mov
push
jmp
xor
dec
pop
in
inc
movsb
pop
clc
dec
xor
fstps
cmpsl
add
in
clc
add
adc
inc
shl
in
mov
test
das
shlb
pusha
adc
int
and
cmp
xor
adcl
mov
mov
cld
daa
cli
enter
iret
xchg
sub
out
notb
sbb
int
loopne
shlb
cmp
pop
scas
ss
scas
cwtl
mov
xor
fldl
inc
pop
fsub
je
cmp
lret
pop
cmp
mov
test
inc
mov
and
pop
mov
and
pop
stos
sarb
mov
push
jae
divl
pop
adc
add
dec
shrl
mov
push
push
scas
test
push
xorb
and
dec
dec
pop
stos
jno
scas
sbb
mov
scas
pop
adc
sbb
fidivs
push
jbe
pop
stc
push
int
push
add
cmp
icebp
or
scas
rcll
imul
stos
xor
and
cmp
fisubrl
pop
inc
movsl
or
adc
daa
leave
cs
popa
ficoms
fwait
shl
jbe
mov
push
sub
and
add
cli
jns
inc
mov
mov
xchg
adc
jns
adc
std
dec
xchg
rcrb
mov
pop
jno
sbb
push
cmp
adc
xchg
xor
call
arpl
sahf
insb
in
insb
pop
loopne
or
push
pop
push
andl
jl
repnz
xchg
sub
xchg
push
jp
ret
call
and
inc
gs
xor
je
sbb
inc
lods
and
mov
lahf
and
sub
sbb
mov
sub
adc
mov
cli
addr16
cltd
sub
in
mov
push
jb
lock
lock
inc
icebp
ljmp
pushf
icebp
nop
jmp
sti
xlat
sub
int3
adc
cmp
mov
aaa
subl
jbe
cmp
xchg
lcall
jbe
or
inc
and
gs
repz
mov
dec
fimuls
sbb
or
jecxz
mov
jecxz
dec
jle
arpl
je
pop
cmp
pop
sub
xor
xor
xchg
or
in
jno
sub
inc
in
cmc
ss
push
sbbb
jmp
cmp
mov
fucomp
sub
cmp
sbbl
push
lcall
xchg
arpl
cmp
adc
lea
pop
out
xor
cltd
call
divb
pop
and
jne
andb
xchg
cmp
xchg
mov
or
pop
scas
inc
sar
addr16
lcall
sub
xor
cmpsb
inc
or
cmpsb
pop
into
and
shll
into
xor
inc
test
cmp
nop
and
filds
sub
daa
xchg
scas
adc
jo
loopne
jle
jl
cld
mov
adc
add
pop
inc
fcmovne
xchg
push
fsubl
scas
clc
jmp
std
push
rolb
mov
ljmp
xchg
or
add
or
and
jno
popf
push
dec
mov
adc
decl
mull
sub
push
in
mov
xchg
mov
inc
sub
xor
mov
iret
sub
xor
lret
movsl
in
cmp
adcb
push
sbb
mov
sbb
or
add
xchg
call
aad
sti
mov
jmp
call
loopne
shrb
movsl
inc
fstpt
pusha
or
dec
loopne
inc
sar
loopne
out
mov
std
iret
fistpll
pop
call
bound
pusha
mov
push
xchg
test
cmpsl
and
xchg
xchg
fisubrl
mov
xor
mov
xor
adc
pavgw
into
push
mov
mov
lcall
fnstsw
mov
cmc
ret
adc
push
pop
xor
jecxz
push
jg
nop
xchg
jne
and
repz
jno
cld
inc
rcll
into
sub
jae
test
insb
sbb
dec
sbb
js
jge
dec
scas
xchg
mov
mov
mov
shll
ss
insl
inc
push
popa
add
mov
or
adc
fldcw
retw
jne
sub
pop
mov
ret
loopne
mov
mov
je
dec
shr
cmp
ja
mov
push
or
int
js
xchg
arpl
loopne
out
shl
push
mov
mov
aam
push
stc
pop
int
movsb
mov
mov
or
lds
arpl
outsl
cmp
cmpsl
xor
jle
cli
call
add
pop
sbbb
pop
dec
jnp
jp
vphaddbq
sbbb
dec
enter
pusha
dec
nop
pop
sub
cmp
stc
aad
das
cwtl
addb
push
cmp
sbb
cli
xchg
mov
cli
cmpsb
clc
inc
xor
rcrb
add
ffree
cwtl
and
mov
call
fadds
push
call
mov
fstl
and
mov
mov
adc
mov
orps
outsl
add
add
test
mov
mov
xor
sar
mov
mov
xchg
adc
xor
xor
insb
xchg
fstpl
repnz
test
and
jae
fstpt
xor
outsb
jno
das
aaa
jae
rcll
shlb
pusha
mov
cmovg
scas
inc
fs
pop
sbb
pusha
int
dec
imul
icebp
outsl
sbb
mov
jl
xchg
xor
in
jp
mov
pop
xrelease
pushf
testb
jnp
cmpsb
fidivrs
test
push
push
lret
pop
loop
ja
xlat
push
int3
ret
inc
xchg
cs
divl
lahf
fmuls
add
js
stc
sbb
xchg
pop
test
mov
es
sti
xor
movups
mov
arpl
jecxz
pop
push
shll
push
gs
add
pusha
jmp
hlt
pop
in
mov
mov
jl
pop
stc
cmp
xchg
mov
xlat
push
movsl
pop
mov
xchg
dec
fs
adc
lcall
jne
aam
js
jno
sbb
out
or
leave
pop
cwtl
bound
test
out
in
imul
jo
push
pusha
adc
repz
add
mov
push
add
xlat
push
cmpsb
lret
sarb
loopne
mov
jns
loop
addr16
mov
and
xchg
or
movsb
dec
mov
push
fsubrl
dec
adc
sub
fldt
and
imul
sub
xor
loope
add
imul
fdivrs
shl
dec
rorb
mov
es
call
bound
aas
sub
ljmp
add
addr16
nop
mov
adc
jge
dec
cmp
outsl
xor
sub
gs
mov
mov
aaa
adc
addr16
test
sbb
or
scas
lea
pop
or
sbb
pushf
arpl
inc
ja
sub
dec
cltd
imul
cmp
scas
lds
jae
icebp
and
stc
out
test
addr16
mov
mov
mov
stos
dec
pop
clc
icebp
xchg
inc
mov
imul
out
inc
xor
pusha
cmp
jno
lahf
pop
inc
inc
call
loope
push
mov
lods
mov
sub
insb
loop
mov
sub
adc
sbbl
sti
sbb
jl
xchg
xor
push
lahf
mov
rcrl
jecxz
mov
add
test
lods
cmp
imul
out
bound
xor
int3
adc
sub
push
push
in
jp
sbb
repz
xchg
sbb
aam
dec
dec
jmp
sbb
jb
fwait
sti
loope
push
mov
iret
sbb
daa
int3
pop
stos
sahf
mov
jo
lcall
lds
ss
and
inc
mov
and
cmp
cmp
sbb
decb
out
adc
jnp
stos
jmp
mov
mov
pop
mov
hlt
lahf
jl
inc
cmpb
add
out
mov
lea
sti
icebp
jnp
mov
test
push
ljmp
arpl
cmp
imul
sub
jmp
push
mov
sahf
push
xor
inc
js
imul
pop
dec
sub
add
mov
insl
xor
ret
xchg
push
add
mov
pop
enter
adc
sbb
mov
jge
push
push
fidivrl
mov
push
aad
cmp
inc
into
insb
nop
popl
mov
mov
push
test
sbb
je
mov
sub
popf
loopne
xor
mov
subl
xchg
ja
cmp
sbb
fdivrp
inc
mov
aas
mov
sbb
insb
sarb
popa
mov
inc
les
fdiv
and
shl
pop
jo
clc
fsubl
lcall
push
xchg
inc
mov
jns
push
jbe
jno
jb
arpl
jne
inc
mov
jmp
stos
pop
sub
xchg
adc
inc
sbb
fnstcw
add
mov
mov
das
push
cmp
hlt
repz
pusha
jl
push
add
sbb
pop
shrl
add
dec
sbb
add
and
push
scas
jno
mov
aas
ds
push
and
push
clc
pushf
push
nop
leave
lahf
cltd
mov
scas
out
push
addr16
cmp
jl
shl
out
lock
mov
into
scas
pop
cs
adcb
xchg
out
outsb
xchg
das
mov
rcl
jno
mov
lcall
pusha
mov
sub
cmp
inc
cltd
jb
fimull
arpl
enter
movsbl
je
adc
xlat
add
shlb
pop
or
or
or
es
push
xor
inc
mov
daa
jno
pop
enter
js
jnp
push
ljmp
push
outsb
cmp
lds
imul
push
push
dec
in
lret
and
pop
cmp
clc
out
mov
and
stos
icebp
pop
data16
aam
or
cmp
xor
pop
mov
lret
push
pop
pop
iret
movsb
cwtl
pop
mov
xchg
add
or
js
xlat
fldt
ljmp
fcomps
aaa
or
or
shr
xchg
add
test
mov
int3
inc
mov
mov
fdiv
test
div
pop
xor
adc
scas
ja
lahf
shrb
add
pop
mov
xor
nop
out
mov
push
and
in
xchg
clc
not
xchg
dec
pop
mov
mov
gs
cmc
mov
sub
addb
aas
ja
outsb
enter
hlt
movb
int
xchg
xchg
xor
xor
xor
xor
lods
mov
jo
jno
mov
pop
xchg
adc
rcr
shlb
nop
test
lret
or
cmp
mov
insl
gs
rorl
xchg
sbb
add
inc
fisubrs
ja
adc
fisttpl
mov
or
lods
lcall
xchg
add
sbb
sarb
push
mov
scas
push
jmp
cmpl
mov
rcrl
jns
mov
add
sub
fisttpl
push
jbe
cltd
insl
xor
loope
sbb
insl
out
into
popl
mov
xchg
xlat
out
push
in
or
push
pop
aad
jo
cmp
mov
push
pusha
scas
addr16
pusha
ljmp
jp
xchg
out
loope
scas
mov
repz
stc
jno
cmp
xadd
adc
cmp
mov
popa
in
fisttpll
scas
adc
sti
movsb
or
fcompl
pop
mov
sub
push
xor
lret
adc
sub
movl
pop
cmp
ret
cmp
jno
mov
cmp
pop
xchg
push
pop
rcr
enter
mov
jle
pop
dec
jge
jae
mov
aam
mov
lcall
push
mov
cli
in
jno
mov
cld
repz
ret
inc
and
sbb
adc
jg
cli
mov
jne
jmp
pop
mov
mov
mov
popf
dec
adcb
pop
decl
aaa
aad
jo
movsb
test
push
dec
sub
movsb
mov
daa
xor
xor
sub
push
js
push
test
popf
xor
push
in
jmp
dec
or
inc
lods
push
xor
mov
jl
xchg
and
xor
shl
mov
push
dec
xchg
ss
imul
neg
xchg
dec
and
adc
ror
jae
imul
add
sbb
repz
dec
roll
sti
out
mov
mov
je
aad
pop
hlt
movsb
insl
and
and
pop
mov
mov
inc
inc
imul
fldl
stos
out
push
or
xor
xor
cmp
dec
lret
shrb
je
cmc
mov
aam
xchg
mull
clc
call
in
jae
xchg
cmp
pop
mov
xor
pop
lds
pusha
add
cmp
ja
mov
negl
dec
iret
sbb
pusha
fstpt
adc
inc
and
dec
mov
inc
mov
adc
cmpsb
fidivs
or
pop
or
pop
int3
mov
and
sub
inc
mov
loopne
in
xchg
cmc
add
add
loope
xchg
jecxz
push
push
bound
orl
insb
jg
xchg
mov
imul
adc
cmp
and
jle
fstp
sub
mov
adc
jb
jnp
subps
xor
mov
sbb
scas
das
xlat
cmp
sub
mov
push
shrb
mov
das
xchg
dec
jae
pop
cmp
movsl
mov
fidivrl
repnz
cmc
mov
fisttps
lds
and
mov
mov
sub
out
arpl
adc
iret
pushf
loope
adc
mov
xchg
test
lcall
mov
test
inc
mov
xor
mov
sti
dec
mov
mov
push
and
cmp
push
inc
lahf
stos
lods
pop
push
out
cmpsl
inc
inc
stos
movsb
or
jmp
cmpb
fs
mov
ret
stos
movsb
fcompl
mov
xchg
or
mov
jbe
enter
mov
setg
inc
push
mov
mov
rsm
cmp
faddl
ja
pop
sub
cmp
loope
xlat
fnstenv
mov
pop
aad
js
adc
sbb
cmpsb
roll
cmp
dec
push
inc
mov
jo
pop
data16
mov
sbb
mov
push
mov
jle
out
sub
les
push
lods
lret
aad
dec
out
dec
mov
outsl
xchg
xchg
fnstsw
mov
arpl
cmp
jp
enter
sbb
jnp
orl
add
jge
leave
data16
mov
mov
mov
mov
jmp
je
lock
and
pop
out
pop
jl
xchg
mov
push
jns
lods
cmp
pusha
add
xor
mov
fs
test
imull
aam
adc
inc
push
jae
pop
mov
mov
rcrl
rorb
mov
mov
dec
ficomps
out
or
nop
dec
sub
push
fucomp
rcrb
sbb
cvtdq2ps
popf
shlb
fwait
cmp
mov
push
cmp
ja
jae
andl
out
push
and
cmp
jl
arpl
icebp
dec
mov
cmp
sbb
jmp
rcll
dec
push
repnz
test
dec
andl
stos
cmp
sub
cmp
xchg
and
shl
dec
cmp
lds
enter
test
mov
clc
xchg
bound
sub
add
aad
sbb
lock
xchg
jns
leave
es
adc
loop
xchg
mov
dec
sti
js
sub
mov
daa
pop
lods
pushf
imul
mov
mov
mov
mov
fldl
cld
jb
cmpsl
mov
orb
nop
bound
dec
mov
dec
mov
mov
fmul
into
pop
jne
out
push
and
xor
sbb
jb
iret
pop
and
pop
adc
sub
out
or
lods
xlat
imul
push
and
jne
sub
jl
cwtl
leave
aad
fs
int
ds
addr16
mov
lods
xor
push
leave
and
adc
bound
loope
mov
jnp
jo
aaa
jbe
pop
pop
cmp
test
in
add
xor
orl
in
shrb
pop
dec
cmp
sub
fcmovnbe
xchg
ja
leave
je
xor
pop
cld
push
sar
jmp
mov
andb
cmp
insb
cld
je
pop
ret
dec
sub
imul
jno
subb
test
daa
xchg
mov
mov
mov
sbb
sub
repnz
rclb
mov
call
fmuls
daa
cwtl
pushf
out
mov
add
xchg
push
adc
adc
push
jae
iret
adc
xor
aas
jo
xor
scas
jns
call
sbb
movsl
sahf
sub
loopne
enter
pop
popf
mov
inc
pop
sub
rorb
je
nop
cli
xchg
mov
popa
pop
ds
and
add
inc
xchg
daa
cs
lcall
fwait
rorb
pop
or
or
fidivrl
lcall
test
mov
dec
mov
lret
xchg
or
loopne
imul
fsubr
cmp
inc
sarb
movb
aam
stos
xor
test
adc
scas
pop
mov
mov
clc
nop
inc
adc
pop
fs
cmc
dec
xor
scas
jmp
and
sbb
fsubr
add
lock
imul
inc
jo
push
out
mov
jmp
js
push
addr16
push
mov
push
pop
push
ja
into
sub
sub
lock
adc
sbb
enter
in
shrl
les
and
xchg
pop
inc
sarl
scas
fs
pop
cmp
lods
push
int3
xchg
pop
push
ja
lods
fadd
cmp
je
enter
adc
ja
pop
jns
movsl
lds
push
pop
xor
push
out
xor
addr16
jnp
jae
icebp
jno
stos
adc
inc
clc
lahf
lods
jp
lea
mov
cld
sar
sub
fwait
sub
jle
setg
push
add
insb
or
sub
add
popl
rcll
bound
popa
push
jp
daa
and
pop
sbb
pop
fmul
inc
scas
mov
fdivrl
sub
or
xchg
xchg
xchg
scas
fisubs
icebp
push
adc
adc
jnp
pop
add
rorl
mov
xor
addr16
mov
pop
fcomps
loope
pushf
jnp
rorb
lahf
test
cmp
jae
mov
cmp
fnsave
dec
addb
push
pop
aaa
xchg
xor
sub
out
jmp
hlt
inc
push
mov
xor
sub
inc
mov
mov
add
data16
inc
outsb
outsl
xchg
add
fisubrs
fs
aaa
mov
fsubl
gs
add
or
xor
imul
jae
movsl
mov
cwtl
inc
jge
jnp
pop
sub
sbb
popf
jmp
or
cmp
jmp
lock
add
and
sahf
out
sub
and
decl
mov
adc
adc
jns
leave
mov
mov
mov
rcr
or
das
add
sti
pusha
cli
mov
mov
xchg
popf
loop
push
in
mov
jmp
dec
pusha
adc
xor
jecxz
filds
test
dec
adc
shll
test
and
adc
mov
fsub
xor
adc
and
xchg
cld
fdivs
in
fcomps
negl
push
push
or
int
sti
rcrb
mov
stc
in
mov
xchg
jne
push
xchg
sbb
adc
testb
repnz
rorb
mov
fcoml
inc
fsubrs
das
jle
pop
dec
push
icebp
cmp
cmp
push
and
mov
add
xor
addb
and
cvtps2pi
cltd
fcompl
sub
in
faddl
sub
inc
push
ja
imul
inc
pop
inc
das
divb
inc
and
mov
sbb
mov
clc
leave
push
leave
repz
stc
ret
mov
stc
add
jle
push
lds
in
mov
sbb
mov
out
xchg
xor
scas
into
push
int3
maskmovq
mull
push
cmpsb
lods
in
sub
fcomps
jle
and
ja
jecxz
pusha
push
inc
jno
loopne
jae
sbb
pop
sarb
push
xchg
in
scas
loopne
ds
aad
aad
add
jns
mov
mov
xor
mov
call
add
fyl2xp1
orb
or
xor
stos
dec
push
inc
cmp
out
loopne
xor
mov
movb
sub
sbb
ds
sub
inc
xor
sub
je
inc
popa
or
or
mov
mov
xor
push
flds
sahf
jge
sub
cltd
pop
stc
frstor
mov
mov
inc
lcall
mov
data16
cmp
outsl
pop
pop
lock
xchg
pop
sub
clc
cmp
mov
fwait
mov
or
rcrl
sub
xor
int
mov
icebp
js
in
adcb
shrl
inc
sub
outsb
mov
repnz
stos
pause
cmpsl
outsb
cmp
mov
mov
hlt
repnz
test
mov
mov
adc
inc
adc
das
iret
icebp
adc
dec
pop
ret
or
lea
sahf
mov
push
pop
mov
ljmp
sub
filds
sahf
xchg
jp
into
mov
push
adcl
mov
push
ror
push
fdivl
pop
mov
mov
mov
mov
loop
adc
sbb
mov
push
icebp
stc
dec
test
dec
mov
imul
jmp
mov
lods
pop
std
imul
jb
pop
cmc
stc
xor
xchg
aad
pop
or
adc
jnp
dec
jo
add
imul
jl
out
and
ss
mov
inc
inc
cmc
addb
and
mov
sub
mov
dec
lods
sbb
daa
loope
mov
inc
inc
sbb
or
pop
mov
mov
jb
fisttpll
lcall
rcr
cld
lock
sub
pop
or
and
dec
mov
push
and
pop
push
hlt
mov
subb
lods
inc
xchg
jecxz
stc
loop
stc
test
iret
les
inc
and
repz
subb
push
fistl
idiv
dec
xchg
push
and
hlt
dec
jae
fildl
ljmp
dec
subb
push
inc
push
popf
jg
jne
not
cmp
add
jecxz
int
filds
adc
jnp
sbb
loopne
add
sti
xor
mov
dec
pop
pop
ror
into
cmp
in
adc
mov
lahf
cld
add
push
cmp
scas
lcall
ret
add
leave
mov
push
jle
pop
leave
ret
push
test
daa
icebp
add
fildll
loopne
inc
pop
jnp
movsl
arpl
xchg
adc
ficomps
scas
or
stos
mov
aam
dec
rcll
popa
repz
mov
inc
popa
hlt
sub
sub
movsb
in
shr
jns
lods
push
les
xor
dec
mov
outsl
mov
test
jne
add
cmpsb
into
sub
scas
lds
xor
mov
and
cmp
push
or
clc
cmc
pusha
dec
and
sbb
ficoms
in
fadds
loope
mov
repz
jb
cmp
xchg
add
out
dec
ret
xchg
test
push
cli
loopne
xchg
test
mov
mov
jmp
pop
push
jge
dec
iret
int
test
dec
shlb
sub
imul
jns
mov
mov
lods
mov
jb
clc
ja
jmp
push
lock
or
lahf
negb
mov
inc
adc
les
jne
aas
xor
adc
xchg
lods
bound
pop
push
stos
push
lock
mov
mov
shll
fisubrl
loope
mov
adcb
je
pushf
jmp
insb
shl
in
fstl
lret
mov
enter
and
cmc
lret
mov
jne
jg
out
adc
mov
pop
pop
add
mov
mov
in
cmp
adc
sub
add
cmp
adc
xchg
outsb
je
lock
cmp
cli
cwtl
pop
xchg
mov
xor
and
fimuls
and
cmp
das
lea
js
xlat
jae
jbe
or
xchg
lods
enter
add
fscale
dec
or
jmp
mov
mov
push
in
fs
xor
cmp
loope
cmp
aas
sti
push
movsl
cmp
jge
mov
lahf
pop
add
lods
inc
movsb
mov
addl
mov
mov
and
lods
fs
add
out
push
push
sub
mov
dec
mov
jmp
add
stc
aam
loop
pusha
out
push
adc
pop
mov
shll
lret
mov
in
dec
incl
sahf
adc
or
and
xor
out
aad
es
xchg
outsb
inc
dec
cmp
dec
xlat
lock
sub
jle
cmpsl
and
jmp
rol
incl
outsb
pop
jecxz
push
pushl
xlat
imul
jno
xchg
mov
repnz
and
out
cltd
pop
xor
ljmp
push
xchg
cmp
and
lcall
lods
push
push
aaa
add
mov
imul
lret
xchg
jne
ficoml
push
sti
aad
jno
mov
sub
mov
jecxz
and
push
push
cld
sbb
mov
lret
jge
push
imul
aas
aaa
pop
loope
xor
jne
cwtl
add
cwtl
sub
rclb
movsb
loopne
les
enter
or
cmp
adc
test
cs
mov
inc
int3
inc
enter
push
popa
jmp
push
outsl
adcb
icebp
xchg
add
rcr
adc
or
pop
mov
pushf
push
push
mov
nop
insl
jl
es
or
cmp
pushl
dec
inc
xchg
xor
das
or
dec
mov
or
adc
mov
addr16
lret
out
cmp
lret
cmp
or
scas
fiaddl
pop
cs
loopne
add
nop
mov
cld
jno
inc
sub
je
sub
je
mov
aam
test
mov
jmp
push
inc
mov
or
sbb
lds
sbb
push
mov
fcomps
dec
xchg
jp
xchg
imul
xor
pop
pop
shll
inc
fisttpl
or
lahf
sbb
ss
and
sarb
mov
das
cmp
in
fwait
scas
js
roll
jg
cmp
aas
and
imul
out
mov
xor
push
sub
sub
int3
xchg
cs
pop
push
xchg
jb
mov
mov
jmp
fadd
fildl
and
aam
mov
lds
lret
dec
xchg
xor
test
stos
aaa
add
jg
clc
jmp
or
xchg
push
std
mov
jmp
push
mov
int
sarb
push
jecxz
shrb
andb
push
jb
mov
ds
dec
stos
jecxz
std
sbb
rcl
adc
je
popf
je
xchg
xchg
mov
in
cwtl
loope
popa
addr16
outsl
lahf
fidivs
int3
fst
mov
dec
icebp
cld
dec
arpl
int
cmp
adc
pop
mov
popf
fs
scas
ja
pop
lret
adc
pop
daa
xchg
inc
mov
movsl
adc
xchg
int
xchg
push
test
test
iret
cmpsl
dec
lods
into
call
int3
popa
es
ds
ljmp
xchg
std
dec
adc
mov
and
addb
add
and
lcall
jbe
lret
fsts
ljmp
sub
adc
or
rcll
stc
add
push
or
and
scas
lods
xor
rcrl
cmpsl
or
jmp
test
pop
addr16
mov
and
mov
stos
add
sbb
scas
ficoml
sarb
icebp
inc
jecxz
pop
movsl
shrb
addl
inc
and
orl
dec
xchg
jg
jmp
sub
test
cwtl
xor
and
sbb
push
js
out
mov
rorb
sti
sub
jge,pt
out
popf
jo
pop
mov
xor
aaa
adc
pusha
jge,pn
dec
sbb
add
xchg
mov
int
in
idivb
cmp
sub
xlat
addr16
or
iret
and
fcomip
cmc
dec
test
sub
mov
movsl
mov
jle
ret
fs
ficoml
sbb
jo
rcl
aas
mov
orl
push
loope
pop
ret
or
in
dec
fldl2t
dec
ds
ljmp
mov
and
cmp
jo
sbb
std
mov
mov
sahf
mov
xor
mov
daa
cmp
jp
jle
stc
xor
sarb
outsl
out
cmpsl
mov
adc
mov
jns
inc
inc
cmp
sbb
lock
inc
cmovp
and
popa
out
inc
mov
dec
pushf
test
push
dec
sbb
cld
dec
mov
icebp
cmc
fisttpll
pusha
cmp
and
cmp
lret
jmp
cmp
xchg
in
insb
shl
or
mov
pop
in
add
and
ret
test
gs
lock
test
ret
xor
call
xor
push
mov
out
lret
mov
lea
leave
adc
push
inc
test
in
in
sbb
arpl
stc
rcll
or
in
jle
or
cmp
adc
mov
dec
out
sbb
neg
jmp
lcall
ja
xor
inc
lods
ret
inc
neg
push
push
jp
out
or
imul
int
or
lret
cmpsl
adc
stos
fbld
lods
or
dec
and
popa
test
or
mov
xor
stc
jne
dec
aam
imul
or
pop
fiaddl
loopne
orps
jne
mov
lea
movsb
jl
xchg
cmp
leave
jo
xor
loopw
dec
aad
dec
adc
and
and
adc
adc
pop
pop
orl
mov
pushf
js
fcmovb
jp
mov
inc
pop
sbb
cmp
dec
xor
xlat
mov
jmp
pop
jae
mov
cmp
fimuls
mov
add
or
xlat
mov
sub
gs
nop
push
popa
sub
push
icebp
xor
icebp
test
aam
pop
loop
outsl
sbb
pop
cmp
mov
out
pop
jg
jl
add
andb
stos
scas
jmp
lcall
stc
mov
add
xchg
sbb
cmpsb
pop
sbbl
movsb
scas
jb
pop
enter
into
aam
cmp
scas
inc
test
add
cmp
test
jns
icebp
mov
in
ja
mov
mov
fs
cld
cmc
xor
ja
and
push
dec
loopne
iret
or
imull
cmp
sti
jb
add
das
cli
cmc
enter
xor
dec
ret
call
adc
add
and
jecxz
aas
cmp
sbb
fldl
mov
inc
dec
cmpl
sbb
mov
sarl
stos
scas
dec
mov
out
in
repz
cmc
lcall
hlt
sub
push
mov
mov
adc
or
cmp
lea
xchg
lods
push
and
stos
xchg
movl
lahf
out
in
adc
and
xchg
sbb
push
cmp
roll
or
jns
sub
mov
data16
dec
dec
cld
movsb
lret
xor
hlt
or
mov
and
repnz
sub
push
test
shll
pop
ud0
mov
lcall
movsb
mov
daa
add
cmpsb
js
pop
cld
jb
cmp
adc
or
xchg
popl
mov
dec
lret
icebp
pop
pop
ds
adc
fstps
pop
push
int3
jae
aaa
ljmp
dec
jl
sub
xchg
cmpsb
sub
leave
shl
es
aam
sbb
xor
sbb
xor
movsb
in
sbb
cmpsl
bound
push
mov
dec
or
rcrl
sub
in
xor
adc
cmp
lahf
cmc
jnp
mov
scas
jg
cmpsl
insb
insl
xchg
loope
mov
lock
xchg
add
ror
lock
mov
cmpsl
fcom
mov
mov
bnd
mov
aas
aam
rclb
incl
lret
sub
xchg
enter
or
int
cltd
pop
pop
mov
inc
dec
mov
clc
sahf
xor
sahf
pop
push
mov
push
insl
pop
push
jge
pop
sub
jl
out
add
repz
shlb
sbb
sbbl
in
xor
and
divl
jns
jmp
sub
sub
pop
pop
jo
das
loop
fstpl
adc
add
sbb
jg
clc
jbe
hlt
xlat
dec
inc
xor
addr16
in
cltd
lret
adc
icebp
xchg
fcoml
inc
and
je
xchg
daa
push
pop
pop
es
js
ja
adc
add
sbb
push
js
xchg
dec
mov
ficompl
cmpsl
fsubrl
inc
inc
add
or
pop
iret
xor
loop
sarb
clc
pusha
dec
mov
mov
call
mov
adc
push
jle
cs
popa
push
sbb
cmpsb
sbb
cmp
dec
outsb
lahf
sub
repz
sbb
pop
inc
outsl
xchg
mov
lahf
add
into
sbb
int
or
jl
push
leave
or
xchg
popf
pop
mov
sahf
jo
fcom
hlt
mov
mov
les
js
adc
bound
and
pushf
aas
inc
fstps
mov
aad
das
mov
adc
out
xlat
sbb
cmpsb
push
fisubrl
insl
mov
push
jecxz
enter
pop
mov
outsb
cltd
mov
in
leave
in
xor
insb
fs
mov
test
rcr
inc
rcr
cli
in
xchg
fldcw
sub
add
sub
sub
sub
or
ljmp
xchg
lret
daa
or
popf
mov
stos
push
mov
sbb
sbb
pop
mov
repz
outsl
sbb
shrl
ret
dec
push
cwtl
jg
mov
fcom
inc
shll
pop
aam
pop
sbb
push
icebp
add
dec
mov
mov
arpl
pop
ja
add
mov
out
sbb
fsts
dec
pop
in
xor
xor
aad
stc
sub
xlat
push
mov
stc
jl
cmp
jle
xchg
fsts
dec
cmp
stos
and
popa
jbe
les
outsl
inc
inc
mov
ss
iret
pop
xor
jmp
inc
pop
pop
mov
cmp
lret
jl
insb
int3
insb
mov
nop
xchg
subl
ret
jb
add
push
pop
or
outsl
xchg
and
mov
jnp
sub
jo
int3
ret
pop
jle
lret
aam
pop
flds
and
xlat
xchg
xor
inc
adc
add
push
xor
sub
and
mov
add
stos
inc
in
std
pop
mov
push
fs
orl
loop
inc
mov
sbb
pop
mov
sbb
or
mov
xchg
xchg
movsl
sub
mov
mov
mov
cltd
das
adc
push
push
pop
shll
clc
xor
sbbl
pop
and
cmp
ds
mov
rolb
mov
ja
mov
cmc
adc
dec
inc
in
hlt
adc
iretw
pop
xchg
je
out
mov
mov
add
inc
mov
inc
test
adc
inc
les
mov
iret
test
imul
pop
mov
adc
test
into
mov
out
or
fisttpll
mov
cmpsl
inc
fildl
jno
outsb
jo
into
arpl
push
cmc
repnz
mov
jg
xchg
sbbl
inc
add
or
popa
xchg
mov
xor
push
cmpsb
inc
cltd
popf
scas
neg
movsb
adc
insl
repz
enter
test
inc
push
jne
xchg
rolb
movsb
mov
pop
and
pop
scas
and
dec
pop
sbb
cmpsl
push
int3
mov
xchg
add
xchg
jmp
jbe
xchg
lods
and
pop
push
mov
lcall
jmp
out
inc
xor
and
out
clc
outsl
fisubrl
jge
enter
add
pop
jnp
shll
loopne
mov
pusha
sahf
insl
test
in
add
in
out
jl
int
loopne
int3
push
clc
scas
scas
cmp
dec
aas
stos
jg
xor
ret
mov
adc
jmp
out
cmpsl
jecxz
pop
ret
jmp
ret
popf
mov
sbb
lods
push
inc
mov
icebp
pushf
inc
clc
repnz
cli
cmpsl
sbb
test
jl
andb
subl
test
out
je
rcll
xchg
popa
lahf
inc
fdivrs
ja
nop
fadds
daa
add
lods
push
xchg
inc
lods
rol
add
inc
stos
dec
fwait
adc
jp
es
repnz
stc
push
inc
add
dec
out
jle
sti
test
inc
adc
or
xchg
in
lret
clc
dec
lods
pop
xchg
rol
seto
push
dec
stos
jno
jp
sbb
adc
add
mov
in
sbb
pop
int3
repz
into
push
or
push
xor
movsb
mov
jns
push
bound
shl
add
adc
insb
pop
int3
mov
xchg
push
pop
and
xlat
mov
cmpsb
ret
inc
cmp
pop
int
add
negl
sti
fsubs
mov
mov
jg
jo
push
push
rcpps
push
outsb
call
in
xchg
sahf
aas
jne
dec
jb
push
bound
xchg
mov
mov
scas
cld
mov
movsb
fwait
lret
sub
stos
mov
jns
outsl
ds
lcall
lret
inc
out
sub
insl
ror
sub
lret
lret
dec
mov
dec
insl
xchg
pop
add
hlt
aam
inc
sub
bound
and
push
lahf
xor
jge
ficoms
xchg
bound
jo
pop
inc
cld
pop
rcrl
adc
inc
sbb
ljmp
sahf
stos
cli
cmp
fidivs
push
xor
sub
and
fstpl
out
sbb
mov
scas
pop
aaa
cwtl
jecxz
dec
pop
orl
out
outsb
jmp
sub
sbb
fwait
xchg
pop
repz
icebp
push
dec
lea
mov
adc
out
aad
fidivl
lret
repnz
mov
cmp
dec
jb
add
jecxz
mov
in
lcall
movsl
push
push
or
test
test
adc
push
jg
popa
mov
loop
fbstp
and
push
incl
pop
and
mov
cmp
xor
popa
lea
cli
or
in
mov
xor
cmp
push
xlat
adc
add
mov
test
xor
dec
ds
mov
sbb
and
std
mov
push
cld
insb
pop
and
mov
pop
fcmovne
fistps
cmp
inc
mov
push
cs
mov
mov
inc
pop
jne
lcall
dec
mov
sub
sahf
popf
iret
lods
pop
int
repnz
out
popa
xchg
aas
adc
movsl
or
decb
adcl
int
sub
mov
xchg
push
jle
pop
pop
jmp
sub
mov
mov
mov
fimull
xchg
push
into
ljmp
test
fwait
sbb
iret
rclb
or
adc
imul
mov
xchg
cmp
xchg
and
xor
pushf
into
nop
xchg
xchg
mov
adc
push
decl
ret
sub
lcall
push
lock
aad
jp
or
adc
out
addb
inc
lcall
ficompl
repz
mov
rolb
addr16
jbe
or
pop
shll
inc
xor
mov
cli
push
fisttps
add
inc
xor
mov
lock
dec
hlt
and
xchg
mov
ja
push
in
or
cmp
cmp
adc
ja
rcrl
add
inc
inc
mov
mov
nop
frstor
loopne
pop
mov
mov
push
call
and
add
adc
imul
mov
and
inc
mov
aam
push
icebp
push
lock
orl
or
jae
sbb
popf
sub
jne
pushf
push
dec
insl
xor
xorb
cmpsb
add
or
bound
sbbb
movsl
in
jno
and
jecxz
jae
xor
fcomps
out
mov
subb
movl
scas
fisubl
inc
mov
imul
pop
inc
adcl
xchg
testl
xchg
hlt
sbb
stos
mov
imul
or
or
fidivs
xchg
js
stos
mov
ljmp
mov
out
test
stos
out
aad
mov
mov
xchg
push
xchg
lret
mov
mov
sbb
cs
mov
test
mov
ljmp
data16
addr16
push
adc
jo
call
test
sbb
mov
aam
jle
loop
sarb
test
pop
popa
mov
aas
push
test
push
cli
stos
loop
mov
andl
sub
aas
jecxz
xchg
jg
outsl
fidivl
jl
cmp
fnstsw
jmp
push
mov
mov
mov
data16
pop
test
jp
add
lea
xchg
pop
rcrb
cmpsl
test
icebp
mov
add
push
iret
adc
dec
daa
cmp
pop
pop
mov
sbb
movsl
nop
pop
cmp
jnp
jmp
lock
into
fsub
lret
es
jo
xchg
int
cli
inc
fldl
bound
pop
dec
inc
arpl
inc
shll
mov
inc
xchg
scas
in
fimull
popf
adc
xor
mov
jle
roll
fsubrl
sbb
ss
or
or
loope
mov
in
cmp
mov
movsb
icebp
xor
ret
sub
lret
mov
and
aas
inc
addr16
in
jb
jae
in
cmc
xor
inc
cmpsb
adc
push
and
mov
stos
orb
imul
cmp
xchg
inc
out
subb
push
adc
fsubrs
imul
cltd
xchg
pop
add
mov
in
leave
por
repz
int3
jg
xchg
jns
aam
mov
outsl
mov
or
xchg
dec
movsb
incb
insb
xor
leave
or
xor
call
repnz
out
cmpsb
roll
pusha
dec
jno
push
in
mov
mov
and
mov
mov
or
std
hlt
ret
mov
mov
push
inc
sbb
adc
mov
dec
les
out
or
femms
xor
ficompl
lods
jmp
cmc
xchg
mov
arpl
jo
sub
mov
lock
clc
shl
fstl
cltd
ret
imul
and
das
jge
jae
imul
pushf
xlat
nop
xchg
cli
cld
push
decb
outsb
test
lret
inc
mov
or
sub
jmp
sbbl
or
xor
test
mov
and
inc
lret
jmp
mov
xchg
enter
fs
orb
and
repz
out
jnp
push
add
imul
add
fidivrs
jp
lds
fcmovb
in
cmpsl
fbld
loope
fldt
dec
into
cmc
xor
pop
arpl
jge
xor
call
incb
hlt
add
or
mov
divl
mov
adc
aad
push
popa
in
fiadds
and
jne
mov
push
sub
jno
jmp
cltd
cmpsb
cmpsb
scas
push
shrl
popf
test
push
decb
cmc
sbb
push
ss
cmp
ds
scas
xor
test
idivl
dec
movsl
je
jmp
xor
jp
inc
cmpsb
add
int3
rcll
fistps
pushf
faddl
jp
mov
mov
lret
inc
mov
mov
mov
ja
mov
sahf
adc
fmulp
mov
xor
insl
adc
add
jle
pop
jo
mov
loope
pop
daa
jo
inc
and
inc
pusha
xor
sub
lock
inc
jecxz
or
fwait
aaa
inc
fdivrl
pop
test
fcoms
pop
btc
cmpsl
sbb
xchg
adc
popf
pop
jecxz
pop
mov
fildll
dec
cmpl
cs
bound
in
dec
mov
adc
sub
push
in
movsl
xor
nop
test
or
push
jge
push
lahf
das
movsl
fcoml
add
daa
icebp
mov
inc
cmp
jae
les
cmc
inc
add
cli
sahf
pop
jmp
addr16
and
dec
add
xchg
inc
fucomp
scas
mov
mov
adc
xchg
mov
mov
dec
iret
push
ss
fcmovnbe
insl
mov
cmp
lret
lock
mov
jno
dec
call
int
jo
outsb
xor
dec
pushf
mov
cmpsl
test
repz
incb
and
clc
stos
push
push
jp
adc
adc
push
push
push
mov
sbb
inc
or
jno
adc
dec
pop
or
push
je
cmc
lods
sub
leave
jecxz
and
loopne
xor
int3
xchg
lret
push
in
pop
jge
mov
dec
imul
jns
rolb
xchg
out
sbb
cmp
insb
sbb
push
inc
movsl
adc
xchg
dec
adc
xchg
mov
push
ret
in
loope
cmpsl
dec
repz
jbe
inc
xor
nop
inc
lock
push
jle
cld
sub
cmc
rol
out
push
sub
lret
jae
mov
std
enter
out
jmp
out
sbb
pop
fdivr
push
xor
jecxz
add
cltd
cli
xor
adc
jbe
lea
sbbl
shrl
insb
int
xchg
push
repnz
nop
push
fs
inc
sub
and
andb
mov
jg
mull
std
data16
mov
ret
pop
xchg
pop
in
insl
sub
rorb
popf
push
jl
mov
push
sub
dec
adc
aas
xor
mov
sti
lahf
jb
and
int3
lods
xchg
add
movsb
dec
and
xchg
pusha
pop
sub
mov
sbb
mov
dec
testb
lcall
nop
sbb
sti
add
and
mov
mov
jle
fcoml
dec
movsl
mov
push
cmp
out
cmpsl
adc
sub
mov
mov
cmp
push
adc
stos
popf
cmp
sub
sti
dec
xchg
mov
lahf
inc
mov
pop
mov
shll
cli
sub
cmpb
mov
iret
shll
push
xchg
pop
rolb
mov
aad
mov
pop
sub
mov
adc
pop
xor
adc
pushf
lods
sti
jp
sub
cmpsl
or
ficoms
add
add
mov
inc
xchg
out
pop
xchg
or
stos
repz
lods
and
pop
es
arpl
out
jl
dec
pop
xor
or
and
mov
or
movsl
cld
repz
out
and
mov
mov
sub
fistpl
jae
imul
imul
fwait
cltd
adc
xchg
nop
mov
or
int
andl
jp
mov
test
sti
lea
into
out
data16
mov
cwtl
out
adc
push
cltd
adcl
push
mov
mov
testl
and
imul
sbb
pop
jne
gs
stos
out
and
and
add
jecxz
icebp
and
mov
rcll
je
es
imull
cld
xchg
hlt
call
imul
mov
pushf
push
pop
fimuls
ljmp
mov
out
stos
push
mov
and
adcl
loopne
je
insl
pop
int3
aas
jp
xor
sar
mov
test
ds
xor
cmp
dec
aam
sti
movsb
or
int
xchg
adc
sbb
pop
orb
add
int
movsl
jp
jae
imul
inc
mov
mov
and
push
lahf
shll
cwtl
dec
int
cmp
sbb
popf
cs
mov
lcall
data16
adc
jb
ds
lret
pop
lods
aas
push
fwait
jp
decb
sbb
arpl
dec
xor
jbe
lahf
int
popf
cmpsb
mov
sti
mov
add
lahf
inc
clc
cltd
cmp
in
adc
in
jl
call
dec
test
xchg
and
jmp
cmpsb
and
movsb
arpl
scas
add
imul
loop
outsb
arpl
jne
rorl
scas
inc
fstp
mov
fcmovbe
sbb
ret
adc
cmp
cmpsb
js
negb
inc
fidivrl
lcall
sbb
mov
ljmp
lret
mov
pop
ret
aaa
aam
cmpsl
push
ja
movsb
push
repz
or
or
add
dec
iret
jg
pusha
sbb
repnz
int
rcr
xchg
xchg
dec
je
mov
test
je
ljmp
mov
pop
ror
sbb
out
enter
push
or
jmp
jg
clc
es
insb
out
fldcw
cmpsl
das
lods
aam
mov
outsb
push
xor
loope
jns
xor
and
imul
leave
sbb
xor
out
sbb
shl
daa
mov
cmp
ds
sub
push
mov
or
add
jmpw
out
cmp
mov
cmpb
sub
in
mov
jo
insb
pop
dec
add
call
jbe
lret
bound
xchg
adc
xchg
enter
mov
and
fnstenv
aam
add
push
pop
xor
addb
ret
int
pushf
xor
pop
mov
sub
jne
xchg
je
inc
dec
idiv
sbb
push
push
cld
aaa
test
punpckldq
into
arpl
test
jno
push
mov
jb
push
inc
inc
nop
dec
xlat
leave
or
and
mov
daa
and
adc
loopne
aas
push
xchg
scas
sbb
push
hlt
cmpps
sbb
inc
mov
data16
mov
xor
push
sbb
mov
cmp
ret
jecxz
add
int3
add
pop
lea
sbb
add
pop
jl
sbb
add
insb
in
fwait
mov
xchg
sub
cmp
xor
add
push
cli
or
into
sub
and
out
aaa
in
iret
scas
outsb
xor
test
loop
int
push
lea
mov
mulb
addr16
call
fistpll
gs
ret
xchg
jae
outsb
popa
push
xor
mov
mov
mov
mov
ficompl
dec
out
inc
ljmp
xchg
dec
lcall
clc
int
cs
in
lcall
mov
xor
mov
jnp
cmp
mov
stc
int
lret
or
sbb
ljmp
pop
inc
dec
test
mov
fidivrs
and
mov
stos
rcrl
out
jno
or
pusha
aas
mov
mov
nop
xchg
mov
inc
or
sbb
pushf
cmp
int
push
pop
cmc
dec
lods
pop
mov
sbb
pop
out
jg
sub
jmp
jnp
daa
cmp
mov
inc
inc
dec
mov
pop
decl
adc
adc
fcmovu
or
adc
xchg
aam
push
fidivrs
pushf
cmp
inc
mov
mov
sbb
xchg
mov
mov
lds
mov
push
cmc
cmp
aam
adc
adc
sahf
mov
dec
test
je
pop
out
pmullw
enter
fcoms
in
xchg
pusha
push
pop
in
sbb
inc
loopne
and
cmp
test
jbe
pop
inc
push
pusha
fnstcw
xchg
inc
sub
mov
jg
jge
inc
push
pand
test
inc
pop
scas
push
mov
or
shll
pop
xor
dec
fstpt
push
hlt
je
push
stc
xor
les
xlat
mov
or
shll
cld
or
je
adc
mov
xchg
dec
ss
jnp
lret
cmp
fucom
loop
mov
or
mov
push
out
pop
sub
jno
pop
xchg
pop
mov
cmp
xchg
mov
sbb
aas
mov
out
or
xchg
mov
outsl
mov
add
cmp
mov
or
aad
pop
mov
loope
xorb
push
add
sub
movsb
mov
cld
adc
and
mov
in
mov
bound
pop
sbb
cmpsl
movsl
push
mov
ret
movsb
mov
fcomp
les
mov
mov
mov
or
out
cmp
or
jmp
fsubl
xlat
ljmp
rolb
ja
mov
nop
and
sub
xchg
mov
or
sub
dec
repnz
lcall
jb
xor
fldt
dec
push
in
shlb
int3
loopne
test
imul
jp
mov
les
push
sub
fwait
mov
orl
or
jb
mov
iret
mov
mov
lock
jb
lods
aam
add
cmpsl
push
or
inc
sti
push
es
and
pusha
lods
lock
mov
cmp
sub
jg
ja
js
movsb
js
sti
divl
push
add
push
push
in
int
ror
je
cmp
sbb
rcrl
cwtl
fcomp
arpl
dec
arpl
popf
inc
cmp
jne
cmp
loopne
add
mov
cmp
mov
repz
jne
pop
jmp
cmp
mov
movsl
daa
divb
fistl
test
xchg
stc
in
leave
jnp
or
ja
mov
mov
movsb
shll
sbb
flds
std
sti
movsl
out
xchg
mov
cmp
mov
call
push
xchg
dec
xchg
loopne
cmp
xchg
cmpsl
sbb
cmp
pop
stos
adc
mov
fisubrs
add
xchg
test
sbb
and
xor
stc
jp
dec
int
xchg
xchg
dec
and
cmp
lcall
sbb
in
mov
sub
int
push
icebp
cwtl
imul
mov
fisubl
insb
rcll
mov
fwait
sti
lds
sbbl
inc
jo
ja
es
cmc
cmp
test
mov
rol
inc
jg
cltd
ja
xchg
imul
and
pop
xchg
jbe
sbb
adc
daa
dec
push
adc
int3
mov
lcall
cli
add
imul
mov
push
jmp
mov
cmpsl
pop
pop
fwait
clc
addr16
jl
jb
xor
xor
cmpsb
mov
xchg
aas
mov
ret
arpl
xor
xor
jno
xor
popf
clc
dec
cmp
call
mov
push
push
inc
xrelease
mov
test
push
jg
xchg
stos
dec
insb
lods
pop
xorl
scas
fimull
xchg
dec
and
push
lret
pop
pusha
pop
rcr
mov
cld
aas
sub
hlt
test
push
arpl
or
mov
mov
insb
mov
outsb
push
inc
stc
inc
int3
stos
or
push
dec
mov
decl
xchg
stos
push
jmp
lea
jno
clc
sbb
mov
ss
mov
sbb
unpckhps
cmc
sahf
lods
jne
outsl
mov
lods
xor
jmp
or
aaa
add
fmuls
pop
mov
test
test
xor
mov
push
mov
aad
pop
sbb
mov
in
sub
mov
pop
loopne
aas
cmc
mov
fwait
in
inc
cltd
inc
jmp
jl
sub
mov
mov
repz
ret
cmp
lods
movsb
nop
rcrb
sti
fistl
push
cltd
test
and
push
jns
rorb
cmp
pop
bound
push
xor
out
sub
inc
sbb
lret
cltd
sbb
leave
and
adc
test
rorl
mov
sub
mov
xor
adc
push
cmc
inc
xchg
dec
cmp
bound
in
or
gs
cmp
test
sub
into
pusha
add
mov
jb
int3
clc
xor
jecxz
sti
pop
inc
imul
lods
cmp
push
loopne
int3
bound
sbb
pop
sub
in
pop
xor
inc
fldl
or
push
push
push
cmpsl
mov
and
mov
bound
rorl
daa
loopne
fstpt
pusha
js
jecxz
aad
xchg
mov
xchg
add
add
inc
ljmp
scas
or
xor
inc
ljmp
lods
movsl
lret
test
add
xor
das
push
test
push
push
mov
sbb
sbb
jg
xorb
adcb
test
ds
fisubs
xor
leave
and
outsb
out
das
popf
rclb
fadd
hlt
ljmp
push
fisubrl
dec
imul
add
lret
xor
lds
lods
sub
jno
cs
sub
xor
cmpsb
arpl
aad
or
popf
out
adc
add
push
jb
cmp
push
mul
jp
add
mov
stc
push
aad
pop
out
mov
bound
and
scas
in
adc
lock
outsl
cmp
lds
test
mov
aam
cmp
or
sbb
sub
fidivl
iret
stos
add
mov
jle
mov
std
jp
lock
mov
cmpsb
mov
lock
enter
xchg
cmpsl
or
in
dec
xlat
iret
and
jmp
add
test
sti
adc
adc
aad
rclb
mov
out
jo
fistpl
push
cwtl
imul
into
enter
add
fdivr
popa
cmp
or
cmpsb
xlat
xchg
cs
mov
ret
jno
pop
xor
fiadds
int3
xorps
sub
bound
mov
aas
cmp
adc
mov
inc
fwait
inc
mov
es
xor
mov
cmpsb
mov
or
adc
xchg
jl
pop
imul
pusha
les
push
outsb
xchg
jge
or
push
push
dec
rorl
xchg
gs
xorl
dec
or
ret
test
add
cmpsb
imull
xorb
xchg
push
mov
sbb
test
repnz
push
into
xchg
imul
pop
sub
or
outsl
out
shlb
xor
cmp
or
push
insl
call
imul
mov
or
out
mov
pop
push
or
mov
xchg
stos
aad
and
sub
frstor
or
out
push
sub
cwtl
scas
enter
daa
mov
addr16
push
out
mov
stos
push
cmpsb
mov
adc
hlt
mov
ret
inc
lds
pop
aad
adc
or
lea
mov
sub
dec
lods
inc
cld
ss
jno
pop
jae
int
sahf
mov
mov
jp
push
jp
adc
jo
cmp
scas
or
mov
inc
or
or
in
mov
jb
insb
adc
mov
das
cmpsb
scas
iret
data16
xchg
sub
xchg
shlb
adc
push
orb
mov
mov
fucomip
mov
mov
test
mov
ret
imul
mov
jl
mov
jle
dec
les
dec
pusha
ret
cs
out
jg
mov
or
mov
shrl
sar
inc
lock
lods
inc
push
jecxz
sbb
lock
std
add
mov
stos
push
and
add
sbb
add
fdivp
stos
jo
lock
ret
cmc
pushf
popf
jp
dec
inc
sub
add
dec
cwtl
jnp
inc
adc
pushf
insl
lods
lods
ret
inc
jne
jno
mov
cmpsb
sbb
jle
and
or
jg
das
les
mov
jae
sbb
pop
movsl
sub
mov
lds
and
fs
lcall
fdivrs
xor
js
aaa
or
adc
cmpsb
sub
mov
xchg
dec
test
xor
jge
pop
cwtl
sbb
mov
int
outsb
sub
fadds
mov
xor
hlt
push
add
push
orb
and
add
fdiv
out
fistpl
inc
sub
clc
mov
enter
sub
nop
ja
dec
push
mov
push
add
rorb
in
pop
aam
xchg
cltd
mov
lret
ja
test
sbb
cmp
xor
iret
cmp
push
add
cmp
or
mov
mov
jg
sub
cli
mov
sub
xchg
pop
cmc
insl
fmull
jmp
mov
mov
dec
mov
push
cmp
xchg
or
xchg
std
outsb
ds
mov
push
jge
and
insl
cmp
pop
pop
stos
sti
leave
add
pop
mov
lret
jae
or
push
inc
shlb
sub
dec
call
ret
xchg
inc
loopne
sub
fstpt
iret
xchg
lock
popa
aaa
push
test
or
or
pop
mov
fsts
clc
popf
dec
adc
adcb
push
jae
rorl
push
mov
out
mov
popf
std
jb
shrl
xor
push
xchg
push
push
mov
push
aad
stos
mov
inc
ja
cld
jmp
pop
insb
cltd
repnz
scas
sti
out
xchg
push
rclb
es
fsub
jl
cld
and
mov
or
xchg
mov
jo
aam
mov
and
popa
mov
push
insb
ljmp
and
xchg
pusha
pop
pop
pop
ljmp
pop
sub
test
std
mov
pop
adc
cmp
cmp
push
xchg
leave
cs
xchg
add
fincstp
aad
xor
bound
shll
testl
sti
ljmp
push
push
cmpsb
int3
or
dec
push
mov
sub
push
std
and
mov
pusha
stc
or
xchg
jmp
mov
sbb
add
call
aad
lcall
lcall
stos
pop
cmpsb
mov
stc
mov
and
mov
das
data16
lods
mov
arpl
mov
xchg
lods
sub
roll
les
jl
cmp
ds
fdivrs
clc
and
fsub
aas
sbb
ret
or
inc
mov
dec
cmp
cmpxchg
mov
adc
dec
cli
ret
inc
fnstenv
pop
in
fmuls
sahf
aas
stos
sbb
imul
push
inc
jns
jecxz
sub
ret
pop
jge
xchg
jbe
lret
xchg
gs
in
inc
adc
dec
jg
fwait
push
xor
dec
adc
push
or
icebp
decb
lds
imul
gs
mov
lret
mov
rol
lods
jecxz
push
xchg
push
sub
cwtl
shrl
fwait
or
add
push
mov
cmpsl
es
pop
xchg
push
out
in
xchg
cmp
jae
icebp
xor
mov
aad
lret
sbb
dec
cmpl
push
mov
sarb
lret
fstpl
movsb
sarb
test
xor
mov
dec
mov
push
add
jecxz
and
sbb
xchg
popa
es
lret
sbb
push
movsl
andl
pop
fsubrl
mov
jne
cmp
in
enter
jo
aad
insb
cmp
fmull
cltd
and
data16
mov
add
dec
xor
in
adc
xchg
fnstcw
shl
jl
int
mov
addr16
cmpb
imul
inc
aaa
xor
jo
sahf
xlat
aaa
mov
or
sub
cwtl
add
bound
movl
adc
insb
jge
adc
scas
call
adc
cltd
sbb
push
sub
lock
jle
xchg
pop
es
sahf
adc
xor
aaa
xchg
loopne
dec
outsl
jle
adc
xchg
dec
adc
pop
cwtl
aad
fdivl
xor
fsubl
xor
jecxz
sub
pushl
fistps
xchg
mov
ja
push
adc
inc
icebp
repnz
mov
out
cmp
xchg
cmp
cwtl
rcrl
pushf
pop
addr16
fidivs
adc
int3
test
dec
divb
mov
in
cmpsb
jo
xor
jl
dec
fsubl
lds
int
pop
test
scas
sub
mov
mov
mov
pop
cmp
add
out
xchg
adc
out
xchg
ret
sbb
iret
stos
shr
mov
inc
out
loopne
pusha
mov
sti
jg
repz
imul
lds
pop
jae
enter
inc
adc
cmp
test
mov
jmp
fldt
push
imul
push
xchg
out
sti
lock
jmp
mov
xlat
out
mov
jmp
outsl
test
jbe
ljmp
push
mov
sbb
adc
push
inc
icebp
inc
jne
xchg
xchg
or
popf
fildl
mov
pusha
cwtl
sub
repz
inc
xor
cmp
shll
pop
adc
mov
jl
adc
xchg
xchg
in
ret
mov
test
std
loopne
pop
frstpm(287
iret
inc
xchg
inc
cltd
aad
mov
jle
xor
add
fwait
pusha
mov
outsl
loopne
dec
or
loop
mov
mov
std
hlt
pop
add
xchg
cld
sub
fsubs
sarb
push
out
jbe
or
aas
pop
dec
ja
dec
sahf
mov
shrb
enter
into
dec
mov
mov
lret
das
and
pop
jae
lods
pop
daa
cmc
cmpsb
nop
jbe
xchg
push
xor
pop
mov
hlt
inc
pop
pop
fwait
and
aas
push
negb
clc
pop
lock
push
or
ret
mov
shl
out
mov
or
repz
dec
add
mov
mov
xor
add
cmp
mov
int
mov
push
or
loope
sbb
adc
xorl
in
fidivrs
ret
push
cmp
dec
cld
cld
fcompl
mov
and
fnstsw
into
dec
cmp
xchg
mov
shl
ficompl
pop
push
lds
sti
mov
inc
lock
mov
or
sbb
adc
imul
push
xor
push
test
int
cmp
sub
push
add
aas
add
sub
xorl
mov
sbbl
and
adc
mov
add
scas
inc
fsubrs
pop
hlt
and
xor
in
sbb
inc
or
rclb
inc
dec
aam
push
push
cli
ja
test
aaa
jmp
test
adc
cmpsl
scas
loop
dec
clc
andb
add
rcrb
inc
insb
or
cmpsl
idivl
popa
sti
mov
jmp
sarl
into
vmovdqu
aad
mov
jns
inc
sub
nop
mov
cld
jecxz
inc
inc
jb
mov
cld
adc
cmpsl
mov
cmp
or
dec
xlat
fstpl
addr16
and
pop
sub
mov
test
xchg
clc
jb
or
or
pop
jecxz
and
aas
xorb
cmp
pop
mov
jl
pop
ret
jno
les
rcrl
pop
cwtl
pop
and
aas
nop
fstps
or
inc
movsb
fidivrl
add
loope
loop
mov
xchg
call
aas
push
jl
xor
cs
jg
and
xor
test
pop
sbb
pop
mov
push
sbb
xchg
icebp
mov
or
inc
inc
aad
mov
dec
push
cs
sub
jmp
mov
lods
sub
xor
or
gs
in
rclb
shlb
out
xor
cwtl
mov
rcrb
mov
jle
fcompp
xchg
rcl
or
mov
xchg
insl
or
pop
jns
out
movsb
mov
test
je
cmp
push
es
aas
imul
xor
xlat
cmc
adc
loopne
jae
xor
outsl
mov
push
xchg
xor
cmpsb
loopne
imul
add
loop
fstpl
shll
sti
xlat
js
ja
cmp
push
jl
sahf
mov
insl
insb
test
dec
pop
mov
lock
or
fistps
sarl
add
pop
lea
pop
bswap
mov
repz
cmp
pop
sub
push
add
cmp
test
xor
mov
int
lods
scas
cmpsl
ja
mov
mov
mov
pop
push
fcom
popf
add
or
stos
push
push
ja
lock
cli
sub
and
lea
in
sub
stos
cld
mov
outsl
imul
jnp
in
sbb
jge
or
mov
push
cmp
fiadds
lea
mov
pop
imul
jno
xchg
push
jbe
xchg
imul
shll
mov
sbb
push
in
out
fxam
inc
lds
or
mov
enter
jmp
push
dec
inc
jnp
sub
int
cmp
xor
jge
mov
fwait
stos
leave
bound
pusha
sar
mov
mov
mov
adc
jns
dec
imul
cld
lea
sub
in
cmp
lret
out
pop
stos
mov
loop
rol
int3
xchg
mov
xor
int3
mov
mov
jmp
loop
add
daa
ffreep
ror
aas
push
pop
adc
mov
jg
iret
adc
cli
mov
jcxz
add
arpl
pushf
push
shll
mov
cmp
std
and
jmp
icebp
mov
dec
lahf
dec
adc
sbb
dec
lods
inc
andl
scas
push
pop
testb
sti
gs
jmp
out
mov
jmp
inc
repnz
bound
jno
fs
xchg
adc
shlb
sbb
dec
xchg
mov
pop
hlt
int3
test
mov
subb
sbb
sub
push
jmp
ss
fstpt
bound
mov
jb
mov
jbe
fbstp
ds
fstpl
sbbl
in
out
add
aaa
call
and
or
addr16
dec
xchg
outsb
xchg
loopne
loope
adc
add
rcrb
xor
bound
push
gs
out
or
jle
cmp
stos
mov
add
sub
pop
sub
cmp
popl
sbb
movsb
push
ss
inc
into
push
mov
push
and
ficoms
cli
mov
sub
mov
dec
addr16
mov
cli
out
add
fucomi
cmpsl
faddl
mov
stos
iret
scas
jbe
out
imul
pop
fisttpl
fnsave
fs
dec
mov
push
jle
cmp
mov
xor
call
movsb
loop
add
in
push
and
sarl
push
inc
jno
je
ror
gs
mov
add
mov
lahf
adc
fnclex
enter
bound
test
sbb
jns
push
aad
arpl
repz
add
dec
lret
popa
jg
pop
out
xchg
inc
in
push
fadds
or
mov
aad
movsl
xor
test
insl
mov
xchg
popf
xor
sub
pusha
mov
push
rorl
repz
mov
mov
cmpsl
mov
je
notb
jge
sahf
shlb
pop
popf
leave
cmc
in
adc
sahf
xchg
test
pusha
mov
dec
cli
push
jle
jbe
xlat
dec
dec
lods
stos
push
mov
mov
or
ffreep
ljmp
xor
cmp
pop
jp
fcompl
push
adc
lock
rcll
fwait
fwait
mov
or
mov
and
mov
sbb
leave
lds
add
enter
and
je
gs
loopne
aas
sahf
test
outsb
aam
mov
jp
loopne
jecxz
xchg
pop
ja
out
lcall
std
jne
mov
inc
jmp
shll
mov
lret
shll
xor
in
sbb
ret
xchg
push
mov
mov
jns
sahf
sbb
into
lea
mov
pop
inc
rorl
fsubs
jno
fstps
push
icebp
mov
xchg
inc
cmp
pop
std
mov
sbb
repz
ficoms
js
or
adc
repz
jle
ret
dec
mov
jnp
push
lods
fs
in
pop
rcrl
cmp
mov
push
fcoms
dec
mov
xchg
add
inc
push
test
sub
jge
iret
.byte
adc
add
mov
lret
jno
add
inc
data16
pop
cmp
adc
idivl
out
sbb
cmp
imul
lock
inc
aam
and
cmp
sub
daa
pop
add
imul
imul
add
out
push
add
mov
push
and
adc
push
dec
stc
outsl
xchg
loopne
sub
mov
jo
dec
jbe
add
push
and
jmp
loopne
jge
ljmp
jnp
fiadds
jp
inc
insl
arpl
mov
mov
sub
in
jge
das
sub
pop
mov
push
xchg
dec
movups
sub
cwtl
cmp
inc
jge
inc
and
pop
jns
push
imul
and
or
int
sub
fnsave
jecxz
addb
mov
and
out
xchg
pop
lea
cmp
fcmove
mov
ficoml
jecxz
test
adc
aad
mov
push
xor
mov
gs
outsb
cmpb
dec
cltd
pusha
push
lods
xlat
addr16
add
xchg
test
repz
jge
mov
ja
xchg
mov
mov
shl
inc
cmp
test
and
je
fnstsw
mov
je
or
cmp
test
imull
sub
aad
dec
xor
nop
or
rol
pop
pushf
daa
stos
and
int3
inc
xchg
repz
js
pop
push
int
icebp
pause
sbb
dec
pop
lret
test
adc
ja
ljmp
in
dec
loope
mov
mov
pop
aaa
lret
in
push
lahf
add
mov
hlt
ljmp
call
fistpl
imul
jb
jmp
hlt
push
jno
add
.byte
gs
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
and
call
inc
sar
lahf
in
mov
or
push
xchg
test
xor
imul
push
xor
pop
add
mov
mov
jmp
jbe
in
add
sub
jmp
outsl
jl
pop
mov
es
mov
cmpb
ret
push
inc
jmp
icebp
push
inc
sub
scas
dec
fsub
xor
mov
mov
sub
sub
push
mov
pop
sub
jne
jno
sbb
jmp
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
insb
call
add
and
pushf
movsl
inc
es
dec
stos
jbe
inc
cmc
inc
leave
bnd
gs
popf
fiaddl
and
jo
pop
stos
sbb
push
int
push
mov
xchg
lea
loop
dec
and
nop
dec
stos
inc
cmp
xchg
jecxz
pushl
jb
inc
stos
sbb
scas
or
stc
pop
sub
nop
fistl
pop
sub
sub
icebp
cltd
push
xchg
out
pop
xchg
repz
lret
nop
dec
sub
jl
xchg
sub
lret
movups
mov
out
cltd
push
insb
xchg
rcr
lret
jns
sub
shrl
nop
dec
stos
ds
push
sub
je
idiv
jbe
ret
mov
pminsw
enter
push
sbb
cmp
sbb
adc
jp
cli
rol
push
test
stc
jo
sti
repz
sub
in
sbb
adc
add
sub
dec
stos
ds
inc
add
pop
cli
popa
fisubrs
sbb
nop
lret
test
test
dec
ja
jg
ror
jecxz
xlat
sub
test
hlt
xor
and
pop
pusha
movsb
fpatan
or
gs
daa
mov
jmp
loop
aam
add
sbb
pusha
xchg
std
pop
sbb
shll
sbb
icebp
mov
xchg
mov
xchg
loop
cmp
test
sahf
cmp
push
jmp
xchg
in
test
and
loop
or
into
out
je
out
ljmp
pop
inc
or
jo
xchg
loop
sbb
xlat
mov
or
insb
jae
fadd
outsl
mov
arpl
xor
jnp
mov
sti
outsl
data16
gs
in
outsb
inc
mov
jmp
int3
loop
xchg
in
call
cld
mov
pop
pushf
sbb
arpl
mov
out
in
in
sbb
sti
xchg
jo
mov
cwtl
loop
bound
popf
in
movlhps
imul
out
xchg
xchg
in
xor
punpckhbw
lock
aam
add
cmp
lahf
xlat
cmp
lods
aaa
pusha
jge
into
out
push
inc
fstpt
inc
fistpl
dec
jae
mov
xor
jge
pop
ja
pop
leave
out
cltd
inc
xor
cli
cmpsl
bound
inc
mov
jge
shll
push
mov
pop
bound
sbb
out
lret
enter
out
mov
jge
into
out
mov
mov
cmp
movsb
out
xchg
lret
cmc
inc
add
test
lret
mov
mov
and
jge
push
call
mov
call
inc
add
mov
fsubp
jge
jl
cmpl
into
jbe
mov
push
call
cmp
lret
sub
pusha
cmpl
into
call
jge
mov
das
lret
inc
dec
popl
cmpsb
scas
out
popf
movsl
push
jle
inc
jae
mov
adc
cmpsb
scas
out
inc
lret
mov
or
or
in
cld
jge
aas
sub
or
add
and
jge
inc
lods
dec
pusha
cmpb
arpl
test
out
data16
mov
lret
lret
mov
out
lret
stos
mov
into
je
adc
mov
mov
dec
mov
jmp
inc
arpl
test
cld
repz
pop
cmpb
pusha
cmpb
jae
mov
enter
cld
jl
inc
jae
test
jne
jg
out
inc
or
or
pop
jle
mov
jnp
inc
lret
sub
jge
mov
xchg
imul
mov
into
out
mov
and
outsl
cmp
add
les
ja
add
aas
lds
cmpsl
cmp
add
or
jmp
cmp
jne
sti
mov
cmpsl
jl
cmp
add
or
jmp
inc
mov
mov
lret
jne
sti
mov
lods
dec
repnz
in
sub
mov
inc
mov
cmp
add
or
jmp
mov
xorb
dec
add
stos
jg
add
or
test
jge
add
aas
inc
mov
cmp
add
or
jmp
and
mov
into
out
testl
mov
cmpsl
cmp
add
or
jmp
and
add
bound
fsubrl
call
add
or
out
scas
out
mov
dec
repnz
in
sub
mov
inc
mov
xor
jge
sarb
jl
into
out
jmp
notl
mov
dec
roll
fs
mov
jmp
call
dec
jg
pop
lcall
pusha
outsl
fs
mov
jmp
call
mov
inc
jp
mov
jge
into
out
data16
mov
mov
into
mov
out
jbe
sub
mov
cld
jge
aas
fmuls
scas
leave
daa
pop
mov
ret
cld
jge
inc
sbb
mov
sub
jge
aas
lea
mov
into
adc
jl
jl
idivl
push
jp
adc
loop
out
add
jnp
and
test
xor
in
push
cmpl
loop
add
andb
cld
ret
jmp
cld
inc
adc
mov
mov
imul
or
arpl
in
lret
mov
popf
mov
test
int
cmp
jmp
in
adc
mov
aad
mov
and
enter
jl
into
out
mov
into
out
mov
into
out
mov
into
out
ja
out
fs
mov
jge
out
mov
into
daa
jl
into
out
mov
into
out
mov
into
out
mov
into
out
mov
fsubp
jge
int3
std
jge
add
push
xor
stos
daa
dec
ja
test
add
xchg
adc
enter
repnz
sbb
mov
inc
scas
xor
pop
pusha
lret
push
pop
add
pop
dec
sti
cmc
jle
popa
in
pop
in
push
and
xchg
fptan
xor
fnstenv
inc
fucomi
ljmp
and
repnz
sub
notb
sbb
sbb
icebp
shll
add
sub
push
jnp
test
popf
sbb
rcr
arpl
in
jmp
test
sbb
ret
adc
sbb
xor
and
pushf
push
dec
mov
enter
leave
les
jmp
mov
mov
call
adc
push
or
jo
adc
call
lret
mov
pop
adc
ds
scas
mov
add
and
add
add
add
mov
add
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
gs
xor
fs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
mov
add
add
add
add
addb
add
daa
mov
add
add
add
add
add
add
outsb
fs
gs
popa
addr16
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
loopne
mov
out
or
jo
xchg
adc
mov
inc
adc
inc
and
and
sub
sub
adc
add
sbb
push
hlt
inc
nop
push
sub
mov
fiadds
mov
adc
or
sub
ss
adc
or
add
jb
outsb
xor
add
push
and
xor
or
test
sbbl
add
arpl
and
xor
cmp
xchg
and
in
test
cmp
xchg
je
mov
in
jb
cmp
pusha
add
xchg
push
enter
dec
jb
cmp
add
cmp
xor
xor
cmp
cmp
sub
clc
and
push
xchg
fmul
fsub
aam
rcrb
push
add
or
subb
add
or
add
fdivl
mov
push
xor
pop
jmp
sub
xor
and
xor
sbb
sbb
adc
movups
or
add
push
mov
adc
push
int3
push
call
add
test
jne
xor
rolb
lret
mov
add
or
mov
add
jge
rcrb
sbb
add
fs
sahf
aas
mov
xor
add
mov
cmp
shll
cmp
fadds
xchg
test
add
dec
mov
mov
push
or
cltd
push
add
aas
adcb
xor
adc
inc
cmp
add
mov
stc
push
xchg
push
adc
mov
nop
push
jg
add
aam
pop
pusha
xchg
add
inc
push
jmp
add
mov
jns
adc
jne
push
add
call
xchg
pusha
jg
add
inc
add
jmp
dec
add
dec
cmp
aam
sbb
fildll
pop
add
loope
call
test
pop
pop
pop
movsb
add
je
in
mov
xor
mov
jge
sbb
add
call
fmul
ja
and
jne
mov
ss
or
arpl
stos
cmpl
inc
add
jmp
xchg
or
push
jb
ja
into
je
fbstp
push
iret
incb
sbb
sub
and
stc
push
jl
pop
xchg
adc
sar
loopne
jbe
xor
sub
or
add
jle
gs
sbb
pop
bound
fisubrl
into
dec
adc
pushf
or
jmp
add
adc
mov
jae
push
push
sbb
nop
out
cmp
or
test
cmp
or
sarl
fs
adc
and
mov
cli
call
clc
jp
adc
pop
flds
cmp
add
popa
push
mov
push
push
push
lds
jns
lret
and
cmp
movl
lahf
in
add
dec
adc
dec
in
adcl
or
pop
push
data16
push
nop
sbb
clc
lds
jns
adc
addb
push
and
repz
inc
push
out
ja
dec
cmp
mov
je
add
mov
adc
packssdw
dec
xchg
or
movl
filds
xor
xor
jle
add
sub
jmp
and
xchg
sbb
adc
je
add
jb
ljmp
aaa
add
xchg
ret
setae
loop
clc
mov
mov
dec
sbb
or
dec
inc
cmc
xor
pop
je
adc
add
xchg
nop
jbe
add
fstp
add
call
cmpb
add
adc
sub
add
cmpsb
jmp
nop
xor
mov
mov
or
xchg
imul
xor
mov
repz
push
es
flds
add
pop
leave
clc
divl
add
cmovno
sbb
jae
fisttpll
loope
jge
add
addl
add
xchg
enter
add
pusha
shll
movl
out
shlb
cmc
pop
aam
cmp
jg
pop
sub
jl
xlat
push
push
add
push
add
push
add
inc
arpl
test
leave
or
fiadds
call
and
int3
sbb
cmpsl
int
add
cmp
lahf
add
pop
fisubrs
adc
fs
mov
sub
cmpb
xchg
add
bound
jne
test
push
add
jle
add
sub
pushf
es
imul
mov
xor
add
enter
add
mov
or
rorb
leave
mov
mov
orb
pop
pushw
lahf
dec
jo
dec
sub
sbbl
mov
cmpsb
jp
inc
inc
and
sub
imul
adc
inc
adc
movl
es
lds
sbb
or
jnp
push
out
cmp
fiadds
jae
ror
push
je
roll
mov
jmp
int3
inc
mov
mov
test
fcmovne
pop
mov
ret
nop
mov
cmp
mov
adc
mov
repnz
cmp
inc
add
xchg
add
pop
mov
pop
addl
push
dec
add
xor
add
gs
jle
and
pop
add
popa
mov
sahf
jb
mov
adc
push
sbb
mov
push
push
sbb
popf
adc
leave
add
hlt
inc
sub
add
jo
sub
add
bound
add
mov
mov
adc
pop
xchg
sub
jmp
adc
in
cs
pop
les
add
out
xchg
test
add
movsb
shlb
dec
sbb
loopne
lock
adc
add
ja
and
add
push
cmp
in
out
add
std
pop
add
xor
adc
add
lret
xchg
sbb
pop
push
or
and
fistpl
loopne
push
sbb
jl
orb
subl
or
fists
add
cmp
jg
add
test
jns
sbb
add
xchg
inc
add
rclb
jmp
dec
pop
push
fimull
inc
sbb
pusha
cmc
mov
adcb
popfw
mov
sub
shll
out
or
sysret
push
ret
cli
lock
sahf
add
mov
push
mov
sub
xchg
sbb
add
cli
adc
jl
movl
add
and
mov
repz
leave
enter
mov
or
sbb
xchg
sub
lock
loop
xchg
in
pop
adc
adc
add
lods
cmp
or
jl
add
sub
or
push
dec
or
cmpsl
ret
add
mov
dec
dec
nop
xor
add
je
sub
add
mov
mov
add
xor
test
lods
and
inc
testb
cli
mov
jb
or
cmp
pop
push
add
mov
dec
mov
or
add
or
fs
pop
mov
and
and
clc
mov
and
add
jbe
js
push
xor
add
mov
incb
dec
sub
clc
xchg
or
pop
dec
cwtl
aas
pop
fdivrl
add
push
repz
xchg
scas
pushf
les
cli
jmp
cmp
push
xchg
xchg
les
inc
psubb
inc
out
adc
sub
add
in
jns
push
xor
aad
sub
mov
jecxz
stos
adc
pop
jo
cmp
adc
mov
or
pusha
add
dec
jmp
fisttps
sub
roll
rcll
cltd
dec
cwtl
aaa
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
cs
push
add
pop
adcb
ljmp
bound
sub
xor
push
mov
adc
pop
scas
push
xchg
imul
inc
lea
pop
cld
ret
or
mov
inc
addb
sbb
fadds
es
sub
add
and
add
and
aas
movb
xor
test
mulb
ffree
xor
insl
fistps
outsl
cmc
xor
dec
add
adc
iret
aam
icebp
or
add
xor
les
and
pop
nop
cmp
or
mov
loope
push
cs
sti
ret
pusha
dec
or
mov
cmp
xchg
pop
add
push
addb
add
ljmp
mov
mov
jne
pop
ja
add
insb
add
jnp
xchg
sbb
xor
jg
mov
jmp
pop
sub
add
in
shll
push
add
fmuls
dec
xchg
sbb
add
jp
idivb
jmp
sbb
sub
cmpl
cwtl
test
cmp
mov
les
xor
fnstcw
add
repz
into
xor
push
dec
sbb
mov
gs
pop
add
xchg
xor
jmp
adc
inc
mov
add
imul
dec
jle
pop
fs
xchg
push
lea
add
mov
dec
call
cli
aad
leave
bound
sub
xor
and
mov
push
add
sti
shrb
add
xor
add
test
xor
jge
jns
and
add
cmpsl
add
jne
imull
and
aas
add
popf
add
sahf
dec
lret
cmp
inc
jbe
mov
test
subb
or
push
imul
nop
add
and
adc
sarb
loope
sub
jo
push
push
inc
or
in
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
jnp
pop
mov
andb
pop
test
and
mov
cmp
cli
sub
pop
sub
lock
in
add
mov
add
cmc
test
push
test
jne
movsb
inc
dec
inc
inc
add
jns
cwtl
fs
roll
ror
pop
push
add
inc
mov
stos
pushf
push
add
pop
addr16
notl
loopne
xchg
int3
xor
or
dec
pop
sub
cmp
push
adc
mov
or
cmpsb
movsl
lcall
and
cmp
out
aas
dec
push
addb
mov
test
faddl
orb
dec
cmp
cmp
jb
mov
inc
add
orl
ljmp
js
mov
mov
push
lds
push
or
add
push
mov
xor
mov
imul
pop
pop
sub
xor
out
dec
adc
jo
cmc
xlat
shl
mov
and
enter
add
mov
popf
mov
add
sar
push
jne
shl
sub
xchg
in
jge
jge
js
pop
enter
imul
pop
testb
add
stos
add
push
sahf
aam
test
mov
fldl
imul
add
dec
jne,pt
and
subb
add
daa
fsubl
jl
add
ret
adc
repnz
push
xor
mov
sub
sbb
shll
dec
add
xlat
jmp
add
and
js
xchg
ret
cmc
in
push
adc
sbbl
cwtl
add
jmp
xchg
sahf
sub
rorl
dec
inc
ret
movl
cmp
xor
loop
imulb
add
notl
and
add
scas
stos
mov
add
add
arpl
fs
cli
jmp
sbb
adc
pop
repnz
mov
les
pop
and
adcl
adc
add
dec
ss
pop
sbb
xor
rolb
ret
push
hlt
dec
lock
add
xchg
test
adc
xchg
call
inc
pop
cld
or
mov
xchg
and
and
mov
adc
xlat
mov
cmp
mov
push
shlb
xchg
jne
add
leave
je
xchg
jl
add
push
mov
and
add
sbb
and
fdivr
jle
push
cmp
adc
rcl
cmpsb
faddl
add
or
scas
add
add
sub
mov
ja
orl
add
int3
enter
iret
ror
into
sbb
lret
fcmovu
fstp
push
fnstsw
add
jecxz
in
nop
pop
push
add
test
cmpl
add
shlb
add
popl
push
adc
psubb
mov
mov
adc
rclb
fcom
push
cmp
or
ja
je
pusha
sub
add
rep
clc
sbb
shlb
xor
cmp
push
sbb
push
std
sbb
add
movl
or
les
or
jmp
decl
mov
inc
shl
cmp
jbe
pop
add
push
jnp
loop
pop
add
out
pop
and
sbb
inc
adcb
add
bound
adc
lock
cs
shrb
pop
cmp
jl
popa
pop
into
and
add
adc
out
add
lret
sbb
ret
js
loopne
push
push
add
and
mov
cmp
repz
push
add
push
push
cmovnp
jmp
aad
and
loopne
scas
sbb
jb
inc
jae
pavgb
sarb
out
repnz
hlt
add
imul
pop
fs
loopne
add
add
pop
cmpb
or
ffreep
mov
insb
push
add
fstps
mov
std
fistps
push
sub
adc
sbb
xor
pop
psubusw
mov
add
jb
cmp
enter
pusha
shrl
add
jp
addl
addb
dec
leave
mov
push
test
pop
loopne
and
push
daa
and
push
hlt
or
imul
adc
mov
sbb
addb
cmp
jne
dec
clc
adc
loope
pop
lret
sbb
ret
dec
inc
loop
push
out
push
cmp
lock
je
mov
cmp
jne
xor
xchg
dec
add
add
mov
push
inc
or
js
add
mov
adc
mov
sbb
add
mov
push
xchg
adc
data16
mov
sbb
add
xor
add
cmovno
mov
mov
cmp
dec
push
adc
inc
es
outsl
add
xchg
mov
fistl
xchg
dec
add
clc
pop
sbb
movl
jge
movb
cli
mov
pop
pop
inc
mov
stc
adc
out
test
push
mov
xchg
jnp
add
mov
adc
dec
jne
inc
lods
add
and
jmp
xor
xchg
jae
arpl
mov
mov
push
inc
cmp
xlat
clc
int3
mov
add
sub
shlb
and
or
popa
rcrb
add
psrad
lods
sub
dec
test
dec
int3
and
add
jmp
or
shlb
sub
clc
call
add
add
fcoms
xor
jne
dec
xchg
aam
jl
add
xor
dec
add
jle
js
fldcw
fidivs
add
outsb
lds
mov
mov
xor
je
xchg
popa
jb
add
mov
or
adc
adc
add
or
mov
add
rcl
jge
add
cli
sub
shr
add
inc
mov
dec
adc
repnz
push
cmp
add
add
add
je
nop
xor
push
clc
in
ss
add
mov
or
dec
mov
adc
add
dec
sbb
pop
cld
or
mov
lock
add
push
rolb
xor
sub
add
sbb
nop
jmp
mov
fneni(8087
push
arpl
je
add
sub
add
inc
cwtl
repnz
dec
pop
push
mov
cwtl
mov
mov
jo
dec
pusha
inc
mov
cld
push
bound
push
cmp
inc
call
add
adc
popa
mov
xor
mov
sbb
inc
hlt
add
lret
or
add
lods
and
add
ljmp
push
cwtl
loopne
sub
jno
in
and
lahf
clc
add
or
sti
push
mov
add
inc
push
push
inc
loopne
add
inc
outsl
jb
popa
cmp
outsb
cmp
inc
gs
jo
imul
rolb
push
add
jae
push
mov
xchg
add
cmp
lods
xlat
pusha
jo
xor
and
inc
scas
cli
in
cmp
fadds
call
pop
adc
ljmp
push
jne
ss
dec
faddl
push
pop
call
inc
pushf
inc
divb
push
mov
push
pop
imul
add
sbb
or
sets
add
add
loopne,pt
add
and
add
mov
xorb
cld
dec
add
xlat
stos
mov
and
fisttpl
pop
call
dec
loop
mov
push
add
jo
sbb
jmp
cmp
cs
add
jae
testb
push
sub
orb
jg
add
dec
jne
inc
jecxz
push
add
leave
adc
cmpl
hlt
js
inc
add
ret
dec
mov
test
xchg
add
dec
push
sbb
sarl
add
movl
clc
or
mov
ret
pop
add
sub
lock
add
notl
adc
adc
add
sbb
call
add
faddp
xchg
inc
out
adc
add
loope
push
lahf
or
add
push
mov
popl
adc
pop
adc
jle
add
xchg
imul
add
or
add
or
pop
inc
lock
push
or
adc
je
add
sbb
pop
and
xor
inc
and
adc
push
clc
xchg
sub
add
in
lods
mov
out
stos
push
push
call
adc
add
adc
imul
add
pushf
xor
sub
push
cmc
add
push
cmp
or
or
jbe
add
or
mov
jae
jmp
mov
movsb
adc
add
cmp
cmp
jmp
or
mov
cmpsb
cmp
push
mov
adc
xor
mov
pop
or
push
adc
and
inc
loop
ret
jbe
loopne
mov
dec
inc
sbb
andl
in
cmp
add
inc
inc
sbbl
dec
adc
je
cld
push
call
dec
or
mov
add
cs
call
mov
out
and
add
orb
push
je
pop
lods
movsl
loopne
or
cmp
ja
add
scas
adc
and
add
stos
sub
xor
lret
loop
mov
sbb
adc
or
out
pop
cmp
add
dec
add
add
fildl
loop
popa
sbb
out
inc
movsl
pusha
mov
push
shrl
fwait
nop
call
out
pushl
mov
aad
add
movl
stc
pusha
push
cmpsl
mov
jecxz
mov
adcb
mov
nop
test
inc
inc
sub
jmp
pop
add
enter
je
xchg
es
xorb
sbb
jmp
add
inc
sub
or
addr16
add
in
lds
inc
push
out
dec
pop
add
and
clc
test
add
fdivrs
dec
out
addr16
fs
mov
shrb
or
popa
into
je
les
pop
imul
or
add
xacquire
es
clc
xchg
jmp
and
sub
and
inc
push
icebp
insb
mov
cwtl
push
inc
mov
mov
lcall
lea
call
or
loopne
loope
or
mov
inc
add
fisttps
test
rorl
sub
add
push
mov
pop
xchg
add
inc
das
imul
push
mov
push
xchg
mov
sub
inc
or
jns
pusha
add
std
cmp
or
add
xor
mov
sbb
pop
fcoms
mov
add
outsl
lea
add
fs
mov
xchg
les
cs
add
movl
pop
dec
pop
int
adc
add
mov
add
push
cmp
pusha
adcl
sub
pop
xchg
mov
wbinvd
adc
enter
xchg
orb
pusha
xor
aas
pop
addl
sub
add
adc
sub
cs
adc
push
and
sbb
sbb
push
mov
sub
enter
leave
cmp
popf
and
iret
and
movl
cmpsl
push
or
fchs
push
lret
daa
push
ss
mov
pop
ret
addr16
repz
sub
cli
icebp
nop
es
mov
lret
cltd
ss
add
push
divb
cmpl
xor
sbb
mov
mov
out
add
pop
dec
pop
add
aaa
pop
xchg
jne
push
adc
xchg
adc
or
ja
in
xchg
add
imulb
clc
add
fmuls
lods
or
mov
add
cmp
shrb
pop
pushl
add
cmc
popf
and
mov
add
dec
loope
add
jo
xchg
cmpsl
jmp
test
sbb
lock
aam
xchg
add
shlb
out
cmp
adc
mov
add
stc
dec
or
pop
cmp
pusha
test
dec
add
xor
xor
adc
cmp
jle
sbb
ffreep
ds
out
sub
jg
dec
pusha
jecxz
adc
lea
mov
rep
popl
fwait
inc
add
mov
out
clc
movsb
or
dec
cmc
or
xchg
cmpl
mov
jns
add
sub
cli
inc
or
inc
mov
pop
inc
mov
jmp
xchg
das
push
popa
addl
sbb
and
jne
or
adc
fstps
and
and
xor
rcll
inc
je
sbb
lahf
cmp
mov
push
push
js
and
cmp
and
dec
add
test
push
in
lods
adc
rol
mov
out
mov
add
dec
adcl
call
or
add
pop
pop
lcall
mov
push
pop
rclb
call
and
ljmp
or
ja
push
and
add
xchg
movsb
push
es
adc
neg
sbb
pop
leave
test
test
mov
xor
and
nopl
cmpl
loopne
pop
mov
rolb
ret
adc
jne
or
cmp
je
adcl
and
test
add
adc
mov
subb
or
pusha
and
jo
outsb
dec
add
push
ds
adc
lods
sub
add
jne
mov
pop
mov
inc
or
lock
and
mov
push
pop
add
stos
shr
insl
aaa
pop
cs
jns
cmp
add
pop
push
jg
and
ljmp
ret
sub
adc
cmp
pusha
lret
mov
add
push
jnp
insb
sti
cmp
jp
add
mov
jns
cmp
add
pop
sub
xorl
sub
scas
lret
int3
add
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
push
daa
add
enter
in
add
mov
and
inc
jg
mov
add
inc
add
scas
pcmpgtb
dec
adc
add
jmp
mov
jl
dec
dec
xchg
add
adc
cmp
push
add
jne
pop
or
add
adc
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
nop
jecxz
and
pop
in
incb
mov
jp
add
xchg
pop
in
xor
add
cmp
in
xchg
test
add
shl
fptan
ljmp
dec
and
sti
push
js
jge
add
or
push
sub
adc
inc
jnp
xchg
test
inc
add
add
into
cmp
push
xor
in
jnp
cwtl
pusha
add
cwtl
push
and
pusha
xor
add
inc
lret
mov
adc
loop
rcll
push
and
cmp
adc
loop
add
or
add
bound
pop
imul
xor
sbb
rcrl
in
adc
add
xor
or
and
xor
or
sub
jmp
xchg
push
jbe
xlat
and
pop
nop
cmp
ret
push
inc
dec
add
push
push
push
sbb
repnz
scas
mov
not
pop
add
rcrl
mov
add
popa
jo
ljmp
ja
jnp
leave
xor
add
test
std
xor
mov
add
test
cli
push
cmp
add
ja
sub
jp
push
dec
add
movsb
cmc
add
stos
adc
cmp
xchg
inc
mov
je
add
mov
stc
rolb
jmp
pop
cmp
rcll
into
push
add
add
inc
outsb
jne
fisttps
fadds
mov
ja
cli
mov
xchg
addps
divl
dec
clc
decb
lret
push
push
scas
add
push
cmpsb
inc
in
mov
dec
xchg
dec
adc
das
adc
cld
dec
jno
push
pop
xor
add
mov
outsl
shl
add
into
push
rolb
jne
sub
out
enter
les
pop
lea
add
loopne
fldcw
icebp
add
rorb
jg,pt
add
fcoml
sarb
add
adc
add
mov
push
in
mov
dec
mov
sub
mov
out
xchg
pop
add
push
and
cmp
xor
push
cmp
adc
lret
add
jae
add
sub
and
cli
aam
pop
adc
add
shlb
push
clc
add
js
inc
xchg
adc
fildl
cmpb
addb
dec
mov
cmp
and
adc
fcomps
int3
sbbb
ss
mov
jle
and
es
jne
add
fidivrl
sub
push
sahf
jg
push
hlt
leave
xchg
arpl
and
or
mov
fsts
adc
aad
mov
rolb
add
adc
add
jle
sub
jmp
mov
repnz
dec
jg
pop
sti
push
mov
inc
dec
filds
test
xor
add
orl
js
mov
inc
rcr
adc
aad
add
mov
cmp
repz
adc
mov
in
pop
sbb
pop
inc
shlb
daa
add
push
inc
xor
sub
fwait
dec
cld
ret
cmpl
outsl
jne
in
call
mov
clc
movsl
cmp
jne
out
inc
sbb
nop
pop
scas
push
xor
sub
fwait
xchg
stos
pop
xor
sar
and
add
push
add
jne
mov
lret
inc
sbb
repz
push
mov
add
inc
adc
ss
aas
mov
loopne
mov
add
nop
sbb
repz
or
pushl
inc
fninit
push
adc
sbb
les
leave
clc
stos
and
dec
push
pop
xor
roll
dec
push
sti
xchg
push
inc
into
pusha
dec
pop
adc
xlat
or
and
adc
adc
in
add
mov
mov
popa
push
bound
sbb
test
incl
cs
adc
jg
sahf
add
jl
stc
loopne
fisttpll
mov
add
jnp
or
test
inc
push
or
pop
aas
or
push
inc
jnp
enter
mov
add
mov
pop
outsl
mulb
iret
sub
sarb
jmp
adc
repz
js
xchg
sbb
xor
int3
sbb
inc
sub
lock
in
add
xchg
repz
push
shlb
or
add
or
arpl
sub
sbb
jno
std
aaa
push
push
lock
jmp
push
inc
add
call
ja
xchg
repnz
push
icebp
dec
add
mov
dec
cwtl
test
mov
mov
dec
fiaddl
movb
popa
ja
stc
push
push
pop
pop
mov
sub
cmp
cmc
and
push
sbb
ja
jle
sub
filds
and
xchg
inc
int3
fwait
add
or
push
add
push
mov
fdivs
sub
dec
sub
fwait
add
mov
xor
sub
pop
mov
test
test
sbb
std
sub
test
add
mov
test
cmp
mov
mov
adc
xchg
jns
cmp
gs
jne
cmp
jb
loopne
cltd
mov
adc
cmp
loopne
sbb
daa
add
dec
loopne
mov
aam
movsb
popf
nop
mov
andw
shlb
lea
test
and
jmp
adc
push
adc
mov
pusha
cmp
add
adc
xchg
jp
inc
or
ret
cltd
jo
jg
adc
movd
jns
xor
add
xchg
adc
or
in
mov
jp
push
ret
xchg
fs
rorb
sbb
cmp
lock
add
jge
push
sub
add
xor
adc
push
xor
push
pusha
sub
jbe
cwtl
dec
ds
xchg
xchg
pushf
icebp
add
mov
cmp
and
push
jo
mov
imul
jnp
pop
add
bound
es
and
pop
jno
xor
daa
incl
enter
xor
roll
iret
call
loopne
lret
rolb
push
sub
std
add
das
cwtl
sbb
pop
mov
xor
inc
fs
or
add
xor
dec
popl
jge
daa
push
rcrl
pop
push
add
dec
sub
pushf
xchg
inc
add
xchg
mov
std
cmp
jecxz
pop
insb
in
shlb
lock
xchg
ret
loopne
fmuls
push
call
pop
lcall
jbe
out
add
pushf
fimuls
xor
fadds
jne
filds
pop
loop
xor
adc
add
and
shll
or
aad
add
and
add
xchg
xchg
ret
add
fwait
das
xchg
rcrb
adc
clc
ja
add
adc
jns
push
mov
into
add
pop
scas
gs
jb
push
inc
cltd
mov
movsl
rclb
out
add
sub
fdivrs
js
add
or
repz
daa
movntps
loopne
and
push
pop
add
mov
pushl
or
les
add
mov
cmp
sub
push
adc
jp
push
roll
add
and
mov
push
mov
cmp
add
cmpsb
je
addl
test
test
in
sbb
xchg
rclb
jl
adc
movsl
add
jmp
add
inc
sbb
cld
adc
int
add
ja
pop
add
or
or
loopne
test
ss
hlt
out
jmp
add
xchg
adc
ret
out
inc
clc
mov
fs
dec
leave
xor
xor
subb
add
xchg
ret
rolb
lock
hlt
cmpl
rcrb
mov
ja
insl
sarl
movsb
adc
inc
add
ss
cmpb
cmp
vmread
std
in
out
loopne
adc
adc
xlat
xor
adc
lea
lds
pop
push
add
psllq
jne
jge
push
add
cmp
clc
dec
movl
add
nop
movsb
jg
inc
add
add
xor
loope
pop
jecxz
inc
je
fidivs
addr16
mov
iret
aam
cmp
add
inc
cmp
dec
movb
inc
inc
dec
lods
inc
nop
lock
aaa
jbe
add
test
and
test
call
add
sub
pop
or
rorl
gs
shrb
cs
jnp
cmc
setb
outsl
jae
push
popa
out
push
add
adc
test
loopne
setb
jno
jecxz
inc
stos
pusha
pop
inc
out
add
jnp
fldcw
loopne
and
faddl
adc
add
jo
jne
les
and
add
push
sbb
pusha
ret
movsl
mov
aam
nop
outsl
cmp
add
jp
push
jae
pop
aaa
sbb
push
push
cmp
inc
xsha256
cmpsb
push
mov
xor
xchg
call
add
add
sub
sbb
adc
testb
mov
scas
mov
or
mov
into
loopne
adc
dec
mov
cmp
add
sub
add
adc
leave
add
insl
inc
mov
cmp
sub
add
stos
inc
xchg
xor
inc
imul
and
add
cmc
inc
and
leave
fneni(8087
adcb
add
jb
gs
dec
fidivrs
arpl
jae
cmp
sti
cmp
and
pop
mov
mov
add
and
pop
daa
and
push
cmpsb
and
loop
mov
outsl
add
pop
cmp
mov
add
push
ja
mov
fsts
std
sbb
add
lods
mov
shr
dec
pop
aaa
shll
push
add
and
mov
jae
mov
or
mov
in
or
cs
mov
loopne
cli
ljmp
shlb
jecxz
cmp
addb
mov
mov
or
add
mov
jnp
push
add
repz
xchg
sub
jecxz
inc
enter
adcb
adc
loopne
sub
push
lea
mov
sub
jb
mov
adc
pop
clc
insl
pop
repz
sbb
push
mov
add
jge
scas
jmp
inc
mov
and
xor
imull
jg
jbe
dec
pop
je
jne
dec
sbb
jbe
add
dec
mov
lret
push
and
pop
add
or
jge
cld
cs
sarb
bound
repnz
inc
rol
inc
sbb
call
daa
or
cli
les
in
mov
js
dec
mull
add
cmpb
and
scas
mov
sti
cltd
sqrtps
or
pusha
jo
and
cmp
and
sub
mov
pop
decl
push
add
ss
jnp
enter
mov
push
sub
inc
push
cmp
stos
sub
aad
popa
adc
jl
pushl
inc
add
andb
outsb
fmul
add
push
or
test
add
dec
sbb
inc
adc
or
and
xchg
adc
push
xchg
mov
inc
pop
push
jle
divps
call
push
cmp
pop
leave
outsl
imul
pusha
shlb
add
dec
cli
loopne
in
ret
jl
add
and
add
jmp
mov
lock
nop
iret
dec
adc
add
mov
push
ljmp
adc
sbb
pop
mov
adc
nop
adc
dec
add
jp
push
adc
mov
xorb
sbb
clc
adc
int
movsb
add
ret
sub
xchg
mov
mov
out
rcrl
out
push
ret
and
cmpsb
scas
sbb
mov
and
in
xchg
xorb
sub
push
mov
cmp
mov
sbb
and
push
loope
and
dec
jmp
add
femms
dec
cld
out
adc
rcrb
js
or
movsb
mov
jae
clc
push
cmp
cmp
addl
hlt
loope
pushl
or
test
mov
les
pushf
xor
inc
xorl
jbe
push
add
adc
add
add
sbb
incl
push
xorw
adc
dec
cmp
cli
pop
aad
cmp
jb
fildl
pop
mov
icebp
call
lods
xchg
dec
dec
ret
hlt
add
orl
lret
les
andb
adc
cs
stos
pusha
add
jmp
xor
adc
mov
add
cmpsl
into
fs
push
pop
aam
rorb
pop
jmp
lods
push
ret
inc
or
loopne
xor
je
xchg
pop
cld
adc
jo
icebp
sbb
mov
dec
add
mov
cwtl
add
and
mov
inc
or
loop
pop
xorb
pop
add
sbb
xchg
and
icebp
mov
jne
mov
pop
mov
mov
mov
cmc
lds
inc
xor
nop
jle
add
mov
inc
add
sarl
add
mov
sbb
movsb
dec
pop
add
push
pop
test
add
bound
xchg
push
cmp
jne
add
cmp
add
pop
cmpsb
dec
es
add
sub
pop
js
push
mov
cmp
jle
and
pop
jmp
lcall
push
xor
pop
add
jle
add
pusha
jmp
ret
sbb
jno
aas
and
cmp
or
or
inc
or
icebp
cmc
add
add
jmp
fisttpl
repz
pop
jge
adc
adc
test
adc
pop
sub
lret
add
lret
leave
mov
imul
call
shll
shrb
add
test
loopne
jnp
add
inc
hlt
repnz
shll
in
and
add
xlat
nop
aaa
cmpsb
stos
lahf
and
loopne
dec
je
lret
push
adc
mov
shrb
loop
add
xchg
fldt
sbb
fmulp
shr
add
bound
push
mov
add
inc
add
test
ljmp
add
mov
push
or
pop
addr16
loopne
mov
gs
add
adc
enter
mov
inc
add
ja
pushf
or
push
ret
inc
jp
add
adc
adcb
and
out
sbb
push
jp
xchg
subb
inc
mov
add
aam
or
out
je
mov
out
sub
xor
cmp
or
leave
sbb
mov
aaa
cli
jbe
cmp
cmp
xchg
ds
mov
mov
lods
add
jmp
lods
inc
rolb
adc
fadds
lods
add
js
xchg
xor
push
push
in
int3
add
into
sbb
rorl
mov
popa
push
jbe
jp
pop
add
movsl
sbb
push
mov
hlt
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
ret
add
sub
inc
add
mov
dec
or
mov
stos
and
out
push
mov
xorb
cmp
lea
divl
xchg
inc
xor
cmp
jecxz
adcl
sti
jmp
add
inc
mov
push
sbb
paddb
sarb
int3
repnz
inc
sbb
or
lahf
outsl
inc
pop
stos
clc
add
cli
in
pop
pushf
sbb
jmp
repnz
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
rclb
or
cmp
xchg
add
dec
dec
in
xchg
loope
cmp
push
in
pop
cmp
mov
lock
movsl
mov
aaa
popa
sti
in
popf
and
fildl
addr16
repz
mov
lret
fwait
xchg
and
mov
add
les
aad
bound
add
aas
cli
dec
adc
jge
cmp
fs
cmpb
rcrl
pop
ret
movsl
and
sub
xchg
inc
xchg
dec
rcrb
or
sbb
shlb
pop
add
jns
es
out
in
cmpl
jae
iret
add
jle
xchg
fucomi
and
jne
add
xorb
add
loopne
rorb
cmp
jb
xchg
jo
sbb
sbb
inc
loop
pop
test
je
inc
imul
repz
jmp
rcrb
lock
cwtl
and
or
cmp
jne
add
lret
repnz
add
ret
add
pushl
addb
clc
xor
sub
stos
test
in
andl
inc
mov
sahf
jnp
add
fs
dec
pop
push
inc
pop
out
enter
jle
pop
jb
hlt
pop
lods
xchg
lret
and
int3
inc
add
inc
xor
orb
rsqrtps
stos
cmovo
and
add
sbb
pop
stos
xor
loop
adc
sti
pop
sbb
and
cli
pop
mov
out
cltd
xor
clc
cmp
pop
aas
xor
fs
cmp
scas
add
inc
push
popf
add
and
rcll
sub
lods
pop
push
or
jg
outsl
or
or
adc
stc
cmpl
in
movsl
xor
push
fcoml
add
clc
push
pop
push
addl
and
psraw
mov
cltd
and
cmp
add
add
inc
inc
clc
inc
add
add
call
cmpsl
xor
sub
or
adc
add
andb
aas
imul
nop
or
pop
imul
repz
jns
fwait
adc
add
stos
popf
stc
add
cmp
dec
cvtps2pd
sub
loopne
add
fstpt
dec
and
repnz
ja
xor
repz
pusha
xchg
add
mov
xchg
mov
clc
in
jb
cmp
or
push
das
mov
subl
add
xlat
loopne
sbb
lock
call
push
jne
add
cwtl
add
add
xor
add
adc
add
xchg
sub
mov
push
out
mov
movsl
loopne
push
ja
lds
dec
dec
sarb
or
add
sub
pop
sbb
test
adc
sub
dec
mov
add
inc
adc
add
sub
imul
add
lods
outsb
pop
xor
pop
push
mov
and
pop
jp
out
mov
mov
mov
imul
or
mov
mov
or
add
or
jnp
xchg
add
stc
jne
out
and
sahf
leave
mov
add
aad
daa
out
rcrl
in
dec
and
add
xor
mov
and
int3
push
cltd
int3
or
push
add
and
cmpsb
push
pusha
jmp
iret
sahf
movsb
rclb
jb
and
cltd
or
or
sbb
or
test
mov
pop
mov
cmp
jg
jo
add
in
jb
cmp
push
and
sbb
add
inc
jb
cmp
pusha
cmp
xor
xor
in
jb
cmp
adcb
cmpsb
add
inc
hlt
and
xchg
in
iret
add
lahf
mov
loopne
or
fdivrs
inc
inc
rolb
xchg
fiadds
loope
movzwl
rolb
roll
adc
ret
call
xchg
das
mov
add
jg
aad
sbb
or
adc
fs
xchg
nop
jg
sbb
xchg
jl
add
jo
adcb
cmp
inc
mov
push
cwtl
or
icebp
ds
jb
cmp
sbb
ror
and
xchg
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
in
out
cmp
sbb
and
dec
mov
jmp
sbb
and
in
xor
add
shlb
jne
call
sbb
sub
add
fsts
inc
rcr
fisubs
sbb
add
and
xchg
ret
in
les
cmp
sbb
mov
xchg
lret
in
jb
int
into
sbb
add
and
mov
xorl
mov
mov
cmp
adc
mov
pop
jo
and
inc
popl
inc
add
pop
out
sbb
sub
cmp
dec
jg
pop
stos
sub
inc
push
add
sub
inc
js
gs
shll
cmpsl
xor
sbb
pop
push
addl
add
push
in
mov
adcb
inc
dec
jne
je
data16
insl
outsl
jb
cmp
and
inc
mov
or
dec
outsb
fnstsw
cwtl
mov
sub
xchg
or
je
inc
sub
mov
mov
xor
test
adc
push
pop
jle
and
lock
adc
add
sarb
jns
testb
inc
inc
imul
outsl
add
pushf
adc
out
dec
add
add
outsb
addr16
popf
and
add
or
or
jbe
scas
data16
outsl
dec
hlt
je
sbb
pop
fld
sbb
or
mov
arpl
repz
or
imul
icebp
pop
mov
shlb
dec
insb
icebp
popa
movsb
rcl
bound
pop
lcall
or
pop
cmp
sub
mov
mov
xchg
outsl
dec
ss
test
or
sbb
or
inc
mov
add
inc
jne
add
outsl
aam
add
mov
int3
ljmp
ret
mov
mov
mov
mov
sub
sub
es
push
xor
mov
in
cmp
lret
or
orb
push
add
arpl
push
nop
addr16
mov
or
add
and
out
cmpsl
xor
scas
pop
fs
test
xchg
or
cld
aam
pop
ljmp
rcrb
inc
popa
and
outsl
lea
pusha
mov
sbb
bound
mov
pushf
orl
dec
inc
lods
shlb
je
pusha
in
mov
push
sub
fsub
jo
incl
imul
in
cmpsl
fimull
add
ret
adc
repz
hlt
pop
or
stc
rclb
fadds
mov
add
iret
insb
pop
push
sub
add
imul
insl
and
push
cmpsb
sub
popf
inc
sbb
add
dec
cmc
pop
or
add
cmp
clc
dec
loope
jmp
fisubrl
dec
mov
nop
push
leave
mov
mov
or
rorb
push
fmull
shll
inc
ds
repz
je
add
js
jo
jp
ja
dec
jge
jg
and
cmc
cmp
add
xor
sub
imul
ljmp
in
add
outsb
out
inc
cmp
jl
pop
jae
push
pop
jmp
jbe
hlt
push
or
mov
xchg
popa
jmp
pop
dec
xchg
sub
xor
insb
add
sub
jne
shll
xor
xchg
add
pop
cmpsb
push
or
mov
mov
dec
pusha
add
inc
push
dec
notl
add
add
mov
test
psubw
add
loop
sbb
xor
clc
loop
add
push
sub
push
add
or
adc
add
jne
xchg
cmp
add
cmc
and
add
cs
loop
repnz
xchg
aas
cmp
xchg
cs
sbb
lock
add
in
pop
inc
dec
in
push
movsl
decb
lock
add
gs
int3
or
add
mov
aam
scas
add
inc
bound
dec
pop
add
aam
aaa
xor
pop
outsb
popf
pop
xor
imul
popf
ret
out
mov
je
adc
ljmp
imul
test
pop
jbe
inc
push
out
dec
mov
inc
add
push
dec
mov
test
jg
popf
fxch
add
lods
cli
lahf
rcll
add
out
lock
int
mov
aam
xorb
adc
stos
push
rcll
xchg
lods
iret
xor
push
or
and
add
jo
inc
shld
das
add
insl
shlb
shlb
cmp
scas
add
mov
cmp
cli
add
fstpl
or
add
or
sub
cmp
ret
adc
add
pop
daa
popa
fimuls
nop
pop
add
adc
xchg
xchg
push
and
mov
cwtl
jecxz
add
cmp
xor
lret
xorb
jmp
rcl
mov
lock
outsb
std
and
out
ficomps
add
dec
inc
ss
lds
pop
push
push
mov
pop
inc
idivl
out
popf
fwait
lret
mov
imul
dec
dec
add
jne
inc
js
add
pop
test
cmp
or
rolb
lahf
lds
push
sub
jp
and
hlt
sub
xor
decl
shlb
sahf
and
add
clc
adc
push
mov
adc
ljmp
pop
cwtl
test
cwtl
lret
out
adc
xor
cmpsl
inc
fs
push
cmp
adc
cmp
pop
mov
xchg
arpl
cwtl
add
add
clc
dec
inc
mov
cwtl
sub
ljmp
stos
mov
jb
add
stc
imul
adc
lahf
ja
js
jo
fnstcw
repnz
push
pop
jbe
add
mov
add
lahf
dec
filds
les
sti
pop
repnz
add
sbb
jmp
mov
stos
push
lret
and
lock
push
lock
mov
add
popl
out
neg
stos
lea
loop
push
pusha
xchg
add
add
push
mov
add
cld
nop
sub
hlt
adc
int3
push
push
cmp
mov
dec
and
inc
sub
aas
dec
sub
or
mov
call
or
in
add
sbb
xor
xor
fisubrl
sarb
add
xor
and
filds
adc
mov
les
sub
mov
es
add
ret
jne
push
pop
push
cmpsb
add
sti
pop
out
orb
xor
cmpb
jl
or
lret
add
inc
lods
movsb
pop
xchg
pop
or
jp
xchg
push
lcall
cmp
inc
add
add
sbb
mov
sbb
clc
sub
je
or
jb
cmp
cmp
aaa
imul
shl
add
sub
ret
adcb
xchg
or
pop
jmp
inc
add
cmpsl
ja
call
ja
cmp
xorb
xchg
pop
dec
fsubrl
sar
add
push
jo
pop
add
or
xor
fadds
cmovp
mov
inc
and
popf
insw
inc
hlt
add
or
add
icebp
adc
inc
lret
dec
add
add
fs
shlb
rcrb
mov
call
push
mov
sub
aad
xor
adc
cltd
adc
push
or
enter
pusha
sub
pop
fiadds
mov
sub
add
inc
push
push
push
xorb
sbb
stc
add
cli
and
mov
sub
push
shl
fisttpl
icebp
add
mov
popf
dec
pop
js
inc
sbbb
loop
pusha
add
cmp
ret
pop
sub
push
push
inc
cmp
daa
mov
lret
dec
scas
sub
mov
push
push
jbe
cmp
ljmp
mov
lgs
adc
inc
test
loopne
add
sarb
fsubr
sub
sbbl
gs
jnp
nop
pminsw
into
adc
mov
add
and
rol
test
in
clc
std
or
out
pop
and
cmp
jmp
add
leave
and
mov
add
shrd
mov
pop
fldl
jns
add
mov
push
pop
pop
lret
pop
xchg
jl
xor
or
je
ljmp
ja
sbb
pusha
or
xchg
sbb
jecxz
orb
xchg
push
orb
sbb
xor
xchg
mov
jmp
add
loope
outsb
mov
inc
shlb
add
nop
add
inc
out
inc
inc
add
dec
enter
rcrb
add
cld
jae
xchg
in
cmp
ret
mov
jne
add
or
mov
mov
jnp
sbb
sub
rorb
push
push
cli
xchg
or
call
sarl
bound
push
stos
flds
lock
adc
out
cli
icebp
add
jecxz
jge
adc
or
or
cs
xor
xlat
call
addr16
add
incb
jl
imul
xchg
cmp
xchg
test
vpinsrw
fiaddl
xchg
lock
inc
aam
jge
add
jl
pop
loopne
sub
cmp
pusha
sbb
jecxz
add
out
add
push
cwtl
jnp
push
inc
pop
rolb
cmp
add
add
add
fnsave
das
jb
cmpsl
dec
imul
add
cmp
in
xor
ds
sub
loopne
and
pop
mov
add
fcoml
jp
or
call
sti
jns
sub
add
sbb
dec
fadd
push
jmp
movsb
or
add
mov
out
add
cs
add
test
inc
mov
add
or
cli
cmp
inc
add
inc
clc
addl
cmp
add
shl
xchg
push
pusha
aad
push
inc
ret
rcll
call
or
js
scas
enter
push
xchg
sbb
inc
fwait
cmpsl
add
dec
push
cmpb
xchg
push
xchg
rorb
jb
movsw
jns
sysret
dec
or
aad
rclb
test
add
cmpl
shl
pop
xor
xchg
push
add
mov
fidivrl
clc
pop
xchg
sub
loope
hlt
cmpsb
add
and
add
and
adc
mov
fs
sbb
jbe
mov
and
pop
mov
inc
lea
mov
adc
adc
cli
out
fadds
jo
stos
cmpsl
inc
sbb
bound
lcall
in
xor
vucomiss
and
jge
or
mov
cmp
ja
and
add
lock
sbb
cld
movl
adc
push
pop
xor
add
incb
jne
add
dec
or
shll
imul
add
cmp
lock
insb
add
std
repz
add
sub
test
std
lds
push
inc
test
lock
ja
jnp
bound
mov
shrb
cmp
adcb
adc
sub
push
pop
or
jne
mov
or
pop
call
rolb
jg
sub
pop
pop
fildll
or
mov
mov
shrb
adc
pop
dec
cmpl
loopne
adcl
pcmpgtd
add
rcrl
std
adc
adc
jge
mov
add
xorb
add
add
or
or
imul
pop
inc
je
push
sub
nop
inc
mov
pop
mov
add
lock
loopne
pop
add
dec
mov
out
lret
add
bound
insl
push
adc
xchg
xchg
inc
enter
lods
add
cmp
add
fs
pop
jmp
jg
mov
sbb
or
jge
add
fs
hlt
dec
pop
mov
dec
push
rolb
and
or
addr16
and
add
jmp
jle
adcb
dec
xchg
add
or
arpl
cld
inc
pop
rcpps
pop
cmpsb
out
mov
push
fdivr
or
add
adc
and
popa
pusha
adc
mov
mov
mov
xchg
add
push
lea
das
int
lcall
xchg
cmp
add
dec
ret
repz
and
xlat
enter
mov
bound
cmc
cltd
xchg
add
inc
add
idiv
add
mov
xor
mov
add
or
adc
mov
xor
cmpsl
add
push
xchg
pop
or
jbe
dec
rorl
dec
add
int3
dec
push
push
out
cmpsb
jle
add
ja
jecxz
dec
fucomi
dec
add
lret
mov
pop
inc
push
sbb
push
shlb
cmp
add
dec
call
repnz
and
inc
lock
xorb
xchg
add
push
pop
hlt
adc
enter
scas
popa
mov
inc
push
add
adc
pop
clc
cwtl
push
add
add
in
sbb
xorl
leave
jne
add
sahf
add
add
jne
mov
xchg
ja
push
loope
imul
lret
repz
movsl
data16
mov
pop
add
je
xchg
cmp
mov
loop
add
mov
or
aas
xor
rclb
mov
loop
dec
les
pop
inc
in
inc
repnz
rclb
add
sub
movsb
dec
leave
and
sbb
add
mov
cmp
pop
filds
mov
mov
jl
movhps
dec
ror
mov
mov
pop
push
jge
mov
popl
std
into
jmp
push
push
push
xor
push
push
and
mov
aam
nop
lods
hlt
pop
cwtl
push
add
cli
imul
stos
xchg
inc
js
xchg
add
push
dec
fsubrl
xor
cmpsb
dec
mov
add
das
movsl
pop
lret
lret
jnp
add
rol
cmpb
mov
pop
pop
or
add
fisttpll
push
add
fld
das
ret
push
xor
inc
nop
sub
inc
dec
sbb
psubb
push
repnz
scas
add
cli
pop
dec
inc
fcoms
je
jle,pt
add
and
add
adc
and
bt
add
jae
xor
and
push
into
dec
ja
push
add
dec
hlt
mov
cmp
insl
mov
ja
add
call
mov
add
jmp
add
mov
adc
pop
movsb
adc
mov
lods
lahf
add
mov
pop
je
mov
pop
fs
aaa
les
mov
stc
lock
je
add
les
jp
lock
dec
fcompl
fs
lds
add
sbb
loopne
into
adc
aaa
add
mov
call
cltd
and
sbb
call
addb
les
cmc
nop
ficompl
push
add
clc
mov
or
inc
das
jne
sbb
cwtl
pop
out
inc
std
mov
aam
mov
inc
inc
jne
and
lock
mov
popa
dec
push
mov
or
popf
xor
int3
and
daa
mov
call
pop
rolb
add
and
adc
add
pop
adc
add
adc
call
inc
and
mov
xor
mov
jecxz
dec
into
sub
insl
add
ljmp
adc
pop
dec
add
es
aas
mov
and
repz
or
inc
dec
inc
xchg
movsb
hlt
mov
pop
or
shrb
insb
mov
shufps
lret
xchg
int3
es
xchg
mov
mov
add
mov
cld
push
ljmp
lea
push
mov
mov
pusha
cmp
mov
push
cmpsb
add
add
nop
test
outsl
mov
add
inc
jns
push
add
jg
sub
sbb
setg
enter
add
out
daa
jg
add
mov
add
and
add
adc
inc
outsb
inc
ljmp
pop
shrb
inc
add
xchg
cmpsb
mov
fstl
inc
ficoms
add
jge
sub
add
or
cmp
mov
ret
iret
fistl
pop
jno
add
mov
xor
add
mov
shl
insb
ds
pop
pop
les
jle
and
mov
mov
cmpsl
or
stos
add
xor
lea
push
or
add
push
arpl
mov
repz
xor
or
push
enter
pop
aas
cmp
jg
cmp
or
adc
call
pushf
jo
pop
cmp
fimull
add
add
mov
ja
in
orb
xchg
mov
add
sub
mov
dec
je
add
push
punpcklbw
add
jmp
mov
and
cld
add
ja
vpunpckldq
xor
dec
icebp
iret
push
jge
push
fsubrl
mov
xor
int3
cmp
push
cld
add
iret
les
add
shr
add
aam
or
scas
lock
cmp
jge
pop
imul
or
shl
jl
pusha
sub
add
push
push
ljmp
into
xchg
mov
bound
aad
or
lock
adcb
dec
mov
int3
outsl
mov
stos
jb
mov
cmp
add
ror
sub
add
rcrb
xor
sbb
popa
subps
addb
xchg
sti
add
fcoms
push
add
cmp
jl
mov
inc
add
xor
xor
adc
add
sbb
add
ss
in
xchg
add
lret
or
or
add
jne
out
xchg
cmpxchg
test
out
push
xorb
inc
mov
dec
sub
test
mov
test
cmpl
jg
and
dec
mov
pushf
pop
add
xchg
es
das
js
xorb
jge
lock
and
pop
dec
popa
or
inc
push
cmpsb
jno
jo
cld
test
data16
mov
add
xchg
or
add
sub
push
fs
and
push
xor
mov
les
or
adc
jge
mov
or
push
jg
xor
add
mov
call
xchg
dec
sub
pop
aam
xchg
push
enter
into
pushf
shlb
xor
or
sbbl
test
loopne
outsb
pusha
outsb
mov
mov
mov
mov
jmp
add
jp
daa
mov
pop
inc
orl
mov
lret
or
je
xor
add
ret
pop
test
cmp
hlt
cmpsl
int3
imul
in
std
add
loopne
add
jbe
add
jge
movsb
pop
test
dec
cmp
inc
add
lock
xchg
leave
fcmovne
testl
add
and
aam
test
cmp
lret
mov
fsubs
bound
and
inc
cld
add
cmpsl
jg
rcl
pop
add
push
or
and
ds
cmp
cmp
call
add
mov
and
loopne
fisttpll
sbb
xor
add
or
or
jb
mov
mov
sbb
call
xor
test
push
jge
add
cwtl
inc
fsubrs
call
sub
rcr
or
adcb
xor
push
xor
pop
sub
add
pusha
inc
adc
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
ja
pusha
fs
add
mov
inc
add
testl
add
mov
and
inc
add
jmp
es
add
or
add
mov
add
mov
add
adc
jp
and
das
pop
add
les
push
or
je
psadbw
loop
dec
incb
xlat
mov
leave
push
add
pop
push
adc
int3
das
shl
add
mov
lock
mov
mov
inc
adc
mov
add
sbb
scas
xor
and
push
pop
stos
mov
add
jb
adc
inc
cmp
or
jne
cli
cmp
add
sub
mov
add
lods
jne
movl
push
aas
inc
clc
mov
notl
jecxz
lea
mov
pop
xchg
cmp
and
out
test
mov
jmp
add
mov
adc
mov
or
sub
add
stc
pop
or
inc
push
sbb
inc
xor
imul
and
push
rcrl
add
add
jb
inc
mov
es
or
int3
lret
add
out
add
pop
and
sub
lock
int3
stos
add
pop
pop
sub
adc
imul
inc
cwtl
jl
adc
call
mov
pop
adc
add
xchg
jmp
pop
push
inc
jns
mov
ret
mov
add
mov
adc
jns
add
fwait
mov
mov
mov
push
add
dec
add
xor
pop
adcb
jmp
mov
adc
mov
mov
repnz
adc
rorb
repz
outsb
sbb
and
movsl
aaa
nop
cmc
enter
mov
pop
roll
cmp
jnp
mov
sub
or
mov
and
enter
add
cld
pusha
sub
mov
jne
rcr
int3
aas
sti
cmp
push
xor
in
iret
sub
or
aas
cmp
add
cmp
gs
and
popf
inc
sbb
add
mov
lock
add
aas
and
xchg
fdivl
lock
pop
in
cmp
hlt
nop
mov
repnz
cmp
and
push
jl
add
and
adc
mov
iretw
sub
sub
add
dec
stc
or
push
add
jne
jge
shrb
sub
mov
dec
lret
and
push
insl
cmp
jge
paddusw
inc
pop
and
add
shrb
jecxz
data16
jo
sbb
and
mulb
fsubs
inc
dec
jb
push
loope
add
inc
mov
push
into
test
sbb
add
adc
push
mov
adc
jg
inc
adc
lahf
test
shl
push
add
xchg
inc
or
dec
jne
mov
xchg
cwtl
and
push
add
inc
and
cmp
or
adc
test
ds
pop
add
inc
jb
call
arpl
inc
js
inc
mov
mov
pop
add
cwtl
out
enter
movl
outsb
in
mov
ficoml
loopne
dec
mov
xchg
sbb
push
mov
test
es
xor
cld
enter
sbb
sahf
inc
adc
and
dec
mov
sarb
adc
inc
jl
cmp
adc
inc
sub
shlb
dec
sbb
cltd
mov
pop
mov
push
xor
cmpl
aam
mov
fildll
and
pusha
data16
fadds
bound
add
xor
shrb
and
xorb
pusha
pop
les
dec
cmp
lods
test
push
adc
cmp
int3
jmp
cmc
test
lock
movsb
cld
ror
sbb
iret
xor
pushf
iret
enter
in
sete
les
mov
call
and
lods
loopne
cmp
pop
jl
sbb
js
sub
pcmpeqb
scas
fs
push
cli
clc
pop
pusha
repz
dec
clc
loop
je
enter
mov
iret
adc
inc
pusha
cmp
dec
xchg
xor
inc
clc
adc
std
out
repz
cld
or
call
mov
andb
loopne
jb
je
inc
mov
cli
mov
cmp
repz
dec
pop
push
or
add
sarb
dec
mov
or
in
addb
adc
add
mov
sub
pop
sbbl
clc
sub
xor
add
enter
jle
lea
inc
cld
shlw
out
movzbl
add
add
add
repz
jle
add
popf
dec
jle
inc
mov
push
xor
fcoms
loopne
popl
mov
loopne
sub
inc
out
adcb
paddb
in
test
jg
pop
add
or
add
dec
stos
cmpb
daa
pop
inc
mov
fldenv
repz
jmp
mov
xchg
add
loop
add
adc
and
xchg
mov
jg
addl
repnz
xchg
bound
hlt
sub
mov
sbb
or
xor
pop
out
mov
clc
mov
shr
nop
jge
addl
neg
xlat
outsl
push
mov
mov
les
fdivl
add
xor
mov
add
inc
dec
or
adc
mov
pop
add
cmp
clc
adc
jae
cwtl
femms
cmp
sbb
push
loop
outsl
dec
mov
add
sub
add
mov
rorb
add
repz
inc
lods
mov
sub
hlt
mov
lds
jmp
dec
test
inc
pop
jecxz
cmp
addb
sub
iret
es
mov
push
or
icebp
sbb
add
fnstenv
add
add
fisttpll
nop
pop
and
add
shlb
jbe
jle
cmp
jp
sub
or
int3
idivl
pop
pop
adc
loop
jmp
lods
xor
add
add
add
inc
mov
fwait
add
pop
negl
sub
lods
std
sub
aam
jle
mov
dec
jmp
stc
push
sbb
sti
jg
adc
cmc
sbb
adc
push
std
add
addr16
xor
popf
sub
ja
pop
cltd
rolb
outsb
push
or
flds
imul
add
nop
or
dec
ljmp
adc
ja
add
dec
fisubrs
sbb
push
dec
call
and
adc
pop
add
testl
cltd
cmc
scas
jecxz
out
inc
cmp
pop
or
stc
adc
add
jne
push
push
sub
add
pop
adc
dec
setns
mov
xor
push
ret
push
mov
rolb
je
add
div
push
add
and
sbb
sti
jmp
or
sbb
je
cmp
adc
push
out
loop
mov
jg
pop
or
or
mov
mov
adc
jmp
add
gs
mov
mov
mov
clc
push
popa
add
xor
and
sub
xchg
xor
inc
cs
cmp
add
fists
add
cmp
fmuls
add
fistpl
fidivrl
lret
addl
call
push
in
add
pusha
mov
add
scas
sub
mov
cli
setl
add
xchg
pop
add
imul
clc
add
mov
shl
mov
xchg
dec
push
out
pop
ret
and
sub
pusha
sub
popa
adc
pop
ret
and
push
jecxz
or
faddl
roll
arpl
sub
add
out
clc
movsb
into
inc
add
fisubl
dec
out
xchg
push
push
and
inc
inc
and
pop
shlb
int
mov
outsb
sub
aas
hlt
push
es
cld
add
rorb
jne
stos
in
add
inc
andl
add
mov
sub
iret
lea
lods
stos
lock
jmp
int3
add
mov
add
pop
cmc
add
dec
and
add
xor
les
in
adc
inc
xchg
pop
or
jno
stc
xor
fiadds
mov
xchg
insb
cs
push
sahf
and
inc
add
loopne
jle
pop
mov
sbb
repnz
lcall
inc
sbb
add
jp
add
insl
jae
xor
leave
or
cmpsl
lea
inc
shlb
add
pop
or
lahf
adc
cmpl
inc
adc
add
inc
fmull
imul
aas
add
and
insb
pop
add
andl
fabs
aaa
call
cld
fildl
sub
repnz
dec
cmp
addl
test
jo
inc
cld
or
add
fbstp
pop
bnd
add
adc
inc
adc
call
pcmpgtd
loop
jmp
add
mov
das
or
add
or
cmp
or
jae
cmpb
and
loopne
sbb
adc
adcb
ja
jmp
pop
cwtl
das
add
pop
push
xor
sbb
nop
mov
xorl
xor
ljmp
push
add
subb
add
into
cs
enter
je
cld
jns
popf
sub
popa
addl
repz
push
roll
jp
testb
mov
push
sub
sbb
or
add
daa
js
cwtl
cwtl
adc
filds
insl
adc
mov
add
jns
xor
rcrl
inc
popa
add
mov
or
stc
push
add
pop
dec
int3
in
jmp
cmp
or
add
stos
and
add
xor
cwtl
add
lea
add
movb
adc
aas
test
testl
daa
jmp
loopne
rorb
jmp
lock
jge
push
es
daa
add
call
adc
cmp
pop
xor
add
cld
lock
xchg
cmp
sub
pop
cmp
into
fmuls
and
mov
mov
cmp
subb
sub
rolb
add
and
mov
adc
xor
sbb
push
loopne,pt
fistpll
add
outsb
fisttpl
add
mov
rcll
add
insl
nop
fwait
test
ret
lods
add
dec
frstor
add
repz
lock
add
fimull
into
add
mov
adc
mov
popa
sub
imul
inc
nop
addl
or
cmp
mov
lds
xchg
push
and
jne
push
jbe
adc
jp
aas
and
add
cmp
cmp
mov
fbstp
inc
pop
mov
pop
push
cmp
sub
aas
scas
push
inc
add
or
push
nop
dec
adc
inc
inc
and
adc
jns
mov
or
cld
je
and
fs
sub
sub
pusha
daa
add
adc
xchg
xchg
pop
xchg
icebp
or
cld
bound
jae
inc
mov
xlat
and
lea
inc
addb
leave
dec
lret
adc
xor
mov
lea
add
les
mov
inc
xchg
je
cmpb
repnz
push
outsl
add
js
in
jle
push
sbb
add
out
inc
orl
add
sub
and
mov
cmpsl
pusha
clc
dec
fsubs
add
jecxz
not
pop
mov
inc
xchg
jns
push
fdivs
jae
xor
fistpl
out
add
ret
test
add
sbb
xor
repnz
or
out
fistpl
jl
adc
mov
shl
std
dec
xlat
add
pop
add
add
fs
loopne
add
jmp
pop
add
call
and
es
into
add
cmp
ja
rcrb
lahf
push
adc
cli
jae
loopne
and
mov
mov
inc
cmp
mov
jmp
add
jb
nop
in
int3
loopne
add
popf
mov
test
cwtl
in
jp,pt
cmp
cmp
pop
dec
adc
dec
in
add
dec
jge
mov
ret
or
cmpsl
jno
into
and
cmp
lea
ret
add
xor
lret
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
cmp
xchg
xor
or
mov
mov
add
mov
movsl
inc
adc
ja
or
js
add
cmp
mov
mov
sub
mov
or
sar
add
bnd
xchg
or
add
cli
mov
jg
push
push
add
daa
lret
loope
pop
fimull
add
dec
outsl
pop
repnz
enter
and
mov
lahf
jne
stos
xor
lea
mov
inc
pop
test
add
daa
inc
inc
add
xor
sub
cmpb
add
ds
or
pop
out
xor
cmp
sbb
aaa
fcoml
push
add
inc
inc
dec
jne
flds
icebp
out
sub
cmp
call
dec
iret
in
and
push
mov
mov
mov
xchg
add
adc
sub
fstpt
jbe
pop
xlat
lahf
jns
add
add
loope
incl
cmp
flds
push
or
add
mov
and
pop
add
ret
sub
add
cs
adc
jle
jne
add
cld
push
add
xor
mov
jo
dec
pop
sub
jae
jge
bound
mov
in
mov
xchg
mov
fstpl
adc
popf
test
xchg
add
jecxz
dec
std
call
jle
mov
inc
loopne
jge
adc
dec
scas
and
xchg
add
mov
add
pop
sbb
leave
pop
jne
cld
lods
xor
jl
lea
inc
or
adc
mov
addb
pop
inc
inc
inc
dec
dec
add
dec
dec
add
push
push
or
push
cmp
add
pop
popa
bound
fs
push
insb
insl
outsb
pop
outsl
jo
jb
add
ja
js
jp
add
xor
xor
sbb
aaa
cmp
cmp
das
cmp
popf
add
jnp
sub
cmp
add
sub
daa
or
or
in
addr16
xchg
and
lds
ljmp
es
and
add
out
mov
and
pusha
jmp
or
cld
add
sbb
pop
imul
add
sub
ret
and
add
data16
in
pop
sbb
jmp
xchg
jo
push
or
pop
iret
aam
adc
daa
push
mov
add
pop
dec
or
add
mov
movsl
push
xor
flds
data16
lock
add
insb
loope
add
sub
xor
push
call
add
adc
clc
add
std
mov
in
push
mov
dec
inc
add
add
jbe
into
mov
push
sbb
out
and
movb
lods
add
cli
inc
mov
adc
mov
push
insl
and
or
out
jnp
dec
push
push
dec
jp
add
mov
sbb
push
sarb
cmpsl
ret
sub
dec
lahf
push
pop
fldlg2
and
add
ss
loope
mov
aam
pop
lods
inc
mov
jg
add
mov
movsb
pop
insl
test
incb
aas
enter
sub
add
jl
sub
sbb
loopne
dec
in
xchg
add
lahf
xorl
pop
push
push
mov
jno
bound
jae
push
lret
add
test
mov
pop
mov
mov
cld
adc
clc
and
mov
push
add
imul
add
lock
inc
mov
scas
dec
ret
xorl
xchg
sbb
or
inc
or
je
js
add
dec
inc
mov
or
inc
push
ror
loope
add
insb
xchg
and
cli
ljmp
aam
lods
lahf
pop
jg
mov
leave
xchg
or
add
subb
sub
mov
mov
stos
pop
inc
mov
add
or
str
and
push
test
add
mov
cmp
out
loopne
shlb
xor
xchg
testb
add
inc
loop
add
xchg
pop
clc
addl
pop
mov
or
xchg
adc
push
sbb
leave
mov
add
add
fcompl
mov
mov
add
dec
jne
xor
jge
je
adc
mov
or
cmp
sarb
cmpsb
add
rcll
dec
add
nopl
testl
std
in
add
cmp
pop
add
sub
adc
sbb
mov
fcom
mov
mov
sbb
int
inc
mov
call
notb
out
test
lock
ret
in
pushf
jle
gs
in
in
push
add
idivl
bound
mov
daa
enter
adc
shrl
cs
mov
scas
push
in
lret
frstor
mov
shlb
fisttps
xchg
js
add
fsubrs
sub
or
cmpb
loop
decb
fidivs
mov
adc
ja
xchg
add
mov
or
pop
add
hlt
cmp
movsl
xchg
lock
add
pop
dec
repnz
daa
add
movsb
inc
dec
push
jmp
add
inc
xorl
jp
add
popf
jno
mov
add
pop
xchg
pop
fstpl
lock
rcll
adc
add
push
rcll
push
mov
jae
popf
jns
add
xchg
in
xor
scas
fs
xchg
les
mov
mov
pop
testl
ret
aas
add
cmpsb
pop
dec
or
mov
int
mov
stos
out
add
xchg
xchg
sbb
gs
mov
repnz
sub
mov
out
add
push
add
mov
fisttpll
xchg
dec
pop
mov
cmpb
pop
jle
mov
add
ret
add
dec
pop
push
mov
in
rolb
outsl
dec
pop
jne
cmp
inc
lahf
mov
popa
inc
flds
sub
jbe
add
xor
xchg
add
je
xor
filds
and
dec
add
sbb
and
dec
mov
cwtl
or
orl
dec
add
add
mov
arpl
mov
sbb
rcll
les
dec
adc
or
inc
sub
cmp
stos
rclb
xchg
xchg
cld
jge
testb
lea
bnd
add
lock
shl
adc
adc
sub
movsl
fs
pusha
imul
push
adc
pop
call
xchg
out
lock
push
sub
in
pop
cmc
add
pop
pop
hlt
andb
les
inc
test
fsub
push
pop
add
xchg
cld
push
xor
dec
add
inc
subb
jmp
mov
jl
add
jmp
fdivs
lock
add
into
add
jmp
rorl
pop
not
insb
out
ds
movsl
rclb
test
popa
aam
les
mov
fiaddl
loopne
lock
pop
cld
mov
arpl
test
pop
sbb
add
push
xchg
fistps
sahf
cmp
aam
pop
push
add
cmp
mov
mov
pop
out
dec
add
sub
push
adc
and
add
dec
fucomp
mov
jno
xchg
inc
and
push
rclb
repz
lods
dec
int3
pmulhw
sub
adc
add
pop
sarl
push
lock
push
mov
dec
jns
into
jmp
inc
mov
cmp
in
icebp
in
rcrl
fsubl
rcll
jne
mov
call
clc
dec
xorl
add
movl
mov
test
cwtl
xchg
cmp
dec
adc
add
push
adc
shl
ss
mov
inc
pop
jno
sub
sub
sbb
push
in
sub
or
bound
enter
push
pusha
xchg
clc
pop
stos
adc
mov
mov
inc
or
js
pusha
test
or
push
lods
inc
mov
fcoml
jnp
add
iret
dec
inc
and
add
inc
cwtl
stos
add
mov
addr16
repz
sub
lahf
call
lret
movsb
inc
pushl
add
ret
call
sub
or
lods
lret
sbb
xchg
out
in
into
ja
cmpsb
sub
push
stos
xchg
inc
andl
add
pop
dec
sub
fmull
loop
mov
sbb
xchg
in
inc
cmp
jne
pop
lcall
mov
push
and
test
ficomps
add
mov
cmp
add
mov
js
scas
or
push
inc
mov
incb
lea
rep
add
push
pop
sub
dec
jae
lret
mov
loopne
or
ja
cmc
add
sub
daa
jl
addl
mov
push
cmpl
mov
mov
or
add
stos
and
leave
ret
nop
pop
xchg
ljmp
pop
cmpb
outsb
adc
test
add
sub
or
enter
leave
or
out
add
or
adc
xor
add
and
xor
lods
loopne
add
lret
stos
sub
bound
call
mov
add
xor
add
jmp
and
xor
outsl
push
repnz
enter
or
and
mov
rolb
dec
and
fimull
cwtl
ja
daa
or
lods
mov
add
ret
xor
aam
cli
fiadds
xchg
call
jle
add
jmp
verr
mov
popa
add
xchg
jecxz
and
lahf
jo
and
xorl
jb
and
jae
pop
and
lods
movsb
sbbb
sbb
fmull
push
sub
add
xchg
inc
iret
jno
lods
sub
dec
jo
cs
mov
pop
xchg
add
push
sub
add
fcoms
loopne
test
add
or
sbb
repnz
mov
rorb
std
add
enter
add
je
pop
dec
dec
or
sbb
pushf
call
in
add
pop
sbb
arpl
hlt
add
dec
push
scas
add
adc
xor
mov
jne
jne
jl
add
cmp
inc
push
sbb
mov
sub
or
sbb
scas
and
leave
jae
xlat
into
test
nop
mov
xchg
or
jge
cmp
ja
adc
push
mov
repz
fcmovne
add
iret
mov
mov
mov
or
out
fists
sbb
add
pop
icebp
hlt
ret
push
add
lret
push
sub
adc
ret
inc
sahf
adc
aas
jo
xchg
xchg
cmc
add
clts
adc
jecxz
or
adcb
inc
clc
mov
jmp
cmp
imul
out
mov
pushf
inc
push
pop
add
add
dec
imul
insl
jae
or
repz
xchg
and
sbb
fnstcw
je
push
sti
out
jne
popa
add
push
in
mov
rorl
jmp
repz
out
add
pop
adcb
mov
call
add
jmp
add
xchg
adc
and
add
xchg
adc
fistl
adc
shrl
add
mov
sub
pop
dec
dec
xchg
push
mov
out
xchg
js
nop
xlat
add
add
jne
push
inc
adc
cld
in
jmp
pop
add
fisttps
or
in
cmp
add
rcrl
jmp
add
push
mov
sub
stos
popf
mov
xor
lds
out
push
adc
call
mov
adc
mov
add
cmp
mov
adc
add
cmp
jbe
add
dec
call
add
or
adc
jle
add
mov
xchg
lret
xchg
add
jb
mov
mov
lock
and
cmpl
je
sub
cmpb
and
cwtl
dec
xchg
test
cmp
dec
adc
mov
jl
sub
in
add
test
movsb
mov
mov
adc
add
cwtl
mov
nop
test
add
mov
push
dec
dec
fimuls
sub
xchg
sti
call
push
mov
mov
inc
xor
les
sub
or
push
cs
insb
clc
and
dec
sarl
orl
sbb
sbb
inc
jae
nop
mov
add
sarl
push
pop
push
lock
mov
loopne
dec
cs
adc
data16
mov
sub
rcll
and
mov
pushf
jne
dec
adc
test
lods
add
or
je
inc
jl
push
and
aaa
cmpsl
or
mov
repnz
sub
das
jbe
iret
mov
mov
push
mov
add
arpl
cld
in
lea
xchg
push
hlt
sub
jg
add
shlb
or
adc
pop
add
add
mov
mov
outsl
lcall
ret
popf
push
jge
sahf
fiadds
enter
inc
and
xorl
and
add
incb
sbb
test
xor
adc
es
out
addb
jge
push
push
xchg
ret
std
push
inc
inc
inc
dec
repz
cmp
dec
add
mov
mov
sahf
add
push
dec
inc
clc
dec
add
mov
or
xchg
add
movsl
mov
cld
mov
add
lods
imul
sub
sub
mov
aas
push
cmpb
mov
int3
pop
es
xor
pop
out
inc
adcb
and
je
inc
mov
lock
add
dec
inc
mov
xchg
js
add
rcr
add
mov
dec
imul
add
jns
mov
mov
sub
add
jb
je
outsb
xchg
jge
jmp
push
adc
xor
or
mov
dec
mov
cmpl
push
cmp
and
inc
sbb
dec
cmp
sbb
out
std
hlt
in
pop
cli
xchg
push
lock
nop
das
mov
sub
addl
sbb
inc
sti
or
adc
leave
shl
mov
pop
cli
pop
es
jl
out
inc
pop
call
loopne
add
mov
xchg
push
add
pop
enter
popl
das
jle
psraw
add
outsb
or
add
sub
add
cmp
jle
cld
cwtl
or
or
lock
js
cli
add
cmp
sub
aam
clc
and
sbb
in
add
sub
push
dec
shrd
push
add
ss
dec
xor
out
xlat
push
dec
push
add
popa
jae
mov
add
fsts
or
jge
loop
mov
inc
cpuid
mov
movsb
push
jb
add
add
cs
ret
pushl
loop
loopne
imul
jl
and
cmpsl
dec
add
cltd
les
in
mov
hlt
movb
lret
xor
call
cld
pusha
fsubrl
inc
sub
or
xor
and
in
dec
roll
fistpl
test
adc
add
dec
faddl
and
rclb
in
cmp
call
test
cmc
mov
mov
add
push
xchg
clc
enter
lea
sarb
xchg
jmp
lret
dec
add
jae
xchg
dec
or
push
jnp
add
mov
popf
imul
mov
jnp
add
lods
fsubrs
bound
add
fisubrl
test
and
movsl
mov
push
dec
das
ja
scas
cmp
cmp
jmp
out
xor
dec
pop
sub
test
xor
xchg
mov
test
xor
in
add
repnz
mov
mov
imul
dec
jnp
mov
add
pop
xchg
dec
sub
push
sub
xchg
ret
in
sti
into
add
jnp
or
inc
push
arpl
push
cmp
scas
adc
fdivl
pop
pop
sbb
add
add
mov
adc
int3
mov
mov
push
es
sbb
ret
mov
shrl
push
movsb
adc
and
jns
mov
lds
lods
cmp
jmp
dec
fisubl
popf
adc
add
mov
mov
in
fldcw
pop
jo
in
xor
lock
mov
pushf
int3
iret
shlb
jae
add
adc
push
add
adc
fbld
hlt
in
rep
xchg
xchg
fs
cmc
aaa
jbe
add
je
mov
add
pop
enter
add
add
jns
xchg
pop
push
cmp
lret
loopne
cltd
adc
mov
pop
jmp
pop
jecxz
fists
fiaddl
popa
and
and
dec
js
ret
mov
and
mov
xor
lea
sbbl
and
jl
ror
mull
testb
mov
add
in
scas
dec
fists
mov
out
mov
hlt
in
sahf
inc
xor
add
dec
sub
or
adc
inc
adc
adc
cmp
or
add
test
inc
push
xor
outsb
add
orl
jne
sub
jno
mov
cld
sub
ja
dec
or
pushf
add
inc
jne
je
fdivrl
ret
imul
mov
dec
push
sbb
push
call
sbbb
fldl
add
pop
pop
push
push
lods
loop
or
cmp
fiaddl
jae
jnp
lds
and
test
aam
dec
mov
xchg
divl
and
add
add
mov
mov
ljmp
mov
inc
add
hlt
fstpt
faddl
push
mov
or
add
lock
xchg
repz
hlt
sub
mov
test
call
add
enter
test
popa
adc
jbe
adc
and
rcll
pop
loopne
inc
add
scas
jno
fcompl
mov
add
mov
cmp
add
dec
inc
inc
and
mov
fdivr
and
testl
dec
xor
sub
pop
add
cld
xchg
mov
add
inc
cmp
adc
jg
cmp
add
inc
cmp
jb
or
loopne
adc
popa
add
mov
sub
rcrb
bound
jae
rcrb
test
aad
or
jnp
sbb
test
or
icebp
and
xor
jmp
scas
lahf
inc
or
ret
sbb
jl
sub
jne
cmp
in
je
cwtl
or
je
add
sbb
add
add
xor
or
add
dec
adc
mov
sub
cmp
sub
inc
sbb
add
in
dec
add
imulb
pop
pop
push
push
and
imul
cmpsb
add
ljmp
jne
sbb
je
sub
cmp
mov
jp
and
sbb
sbb
scas
inc
jne
leave
into
stc
ret
fcmovb
andl
nop
xor
je
push
add
jbe
rorb
add
cmpsb
sbb
dec
add
ret
test
enter
std
call
scas
sbb
cmpsb
add
xorl
or
add
add
inc
adc
movsb
push
loope
les
jne
mov
dec
cli
mov
add
add
repnz
sbb
and
add
sbb
pop
ss
push
add
inc
nop
subl
mov
sub
add
adc
xlat
stc
or
outsb
mov
pop
jne
mov
addr16
repz
push
dec
in
add
push
out
jg
adc
and
xor
faddp
push
jno
ja
pop
nop
mov
mov
loope
adc
push
clc
or
rcl
je
xor
adc
sbb
aas
jmp
mov
mov
xor
xor
adc
in
fld
cli
call
faddl
xor
adc
movsb
jnp
add
stc
push
enter
add
mov
shl
xor
or
xchg
adc
jo
enter
dec
push
shlb
xchg
mov
out
add
icebp
push
or
adc
sbb
push
mov
sub
add
push
and
ret
ret
lsl
scas
cmp
stc
cmp
jmp
add
dec
shrl
add
loopne
dec
cmp
inc
adc
lret
pop
and
cmc
popf
inc
je
cli
inc
and
pop
add
std
add
adc
add
je
cld
shlb
or
add
jnp
addr16
add
fistpl
dec
test
jle
add
and
pushf
pop
enter
add
mov
sub
xchg
mov
push
pop
jnp
add
jo
cmovo
add
sti
call
aad
pusha
pop
add
cmp
iret
loopne
shl
int3
jmp
cmc
lea
sti
and
sbb
or
jp
add
cmc
clc
pushf
cmp
fsubr
loopne
ret
pop
sbb
and
push
fxch
mov
idivl
xchg
add
xor
adc
rep
inc
push
add
add
mov
cmp
adc
fisubrl
jae
pop
sbb
mov
les
and
push
xchg
sub
inc
call
jb
scas
sbb
clc
call
and
pop
enter
xchg
sub
sbb
clc
lds
les
cmp
scas
iret
and
sbb
scas
adc
je
mov
movsl
or
adcl
lds
cltd
jns
pop
jp
scas
jg
inc
mov
ss
mov
sub
push
mov
add
push
sbb
push
add
int3
adc
aam
enter
mov
add
or
mov
out
and
inc
adc
subb
add
movsb
add
mov
lods
insl
inc
xchg
push
and
sub
cmpsl
subb
rolb
pop
ljmp
sub
ret
xor
mov
sub
and
dec
stos
or
inc
testl
jl
daa
add
loop
mov
mov
xor
shlb
mov
icebp
sbb
xor
addl
add
popf
xor
loopne
cltd
daa
add
pop
mov
pusha
cmp
jmp
popl
xchg
and
pop
sbb
pop
jmp
mov
adc
roll
ds
xchg
mov
jo
add
les
pop
cmp
fidivrs
enter
lods
xchg
mov
pop
leave
verr
inc
inc
test
pop
and
cmpsb
shll
in
sbbl
jp
mov
sub
insl
ret
inc
mov
sbb
adc
loopne
push
inc
jmp
clc
xor
nop
stc
add
xlat
in
add
dec
jl
add
dec
add
pop
inc
dec
adc
test
andb
push
fidivrl
cs
sti
rcrl
shl
mov
xchg
fadds
lock
add
add
addr16
dec
mov
push
or
fdivrl
jbe
xor
add
loope
ret
add
rorb
add
fs
int
add
and
shrb
sub
loope
add
outsb
pop
jl
cmp
aas
add
inc
add
and
clc
cmp
jle
test
sub
imul
fistl
hlt
sub
sbb
push
adc
xchg
push
xor
add
cli
jg
das
fdivrs
mov
sbb
insb
adc
lods
lcall
xchg
sbb
add
sub
push
jnp
ja
in
outsb
test
jbe
cli
xlat
and
std
pop
cmp
jge
lea
cmp
lret
andb
scas
sub
test
add
lea
cld
cmp
sbb
out
add
add
fnstcw
ret
sbb
add
popf
push
sti
mov
dec
add
push
outsl
push
imul
mov
jo
push
or
call
inc
mov
add
lret
xorb
loope
push
mov
call
shrl
or
cmp
lret
jl
repz
mov
and
imul
mov
adc
movd
inc
stos
jge
into
mov
test
add
mov
or
pop
lsl
lahf
scas
mov
scas
sarb
mov
adc
rcll
js
add
sub
xchg
icebp
push
add
nop
sbb
add
inc
xor
inc
sbb
adc
nop
add
cwtl
invd
imul
sub
scas
add
jp
mov
mov
popf
in
mov
fildl
sub
mov
push
rclb
mov
add
adc
or
inc
cld
jg
int
xor
xchg
jno
std
mov
scas
mov
inc
jns
pop
cmpsb
and
stc
cmp
add
mov
dec
call
ret
add
push
imulb
inc
mov
mov
mov
inc
jb
push
shrb
inc
mov
js
sub
sbb
mov
add
pop
es
cmp
xorl
pusha
lock
adc
dec
cwtl
stos
inc
mov
dec
rcl
add
add
add
adc
or
mov
rcrb
das
call
push
sub
push
adc
inc
add
mov
les
out
fdiv
in
add
cwtl
enter
inc
out
adc
fiadds
mov
loope
pop
ret
push
jns
addb
adc
aaa
ret
js
cld
insb
adc
iret
add
or
lods
inc
pop
pop
adc
add
adc
inc
cld
xchg
xor
sbb
add
mov
mov
add
add
mov
adc
mov
outsl
addr16
in
sbb
and
mov
testb
add
cmp
jnp
add
mov
mov
jno
loopne
data16
push
dec
rolb
sub
and
mov
mov
add
push
jo
cmp
or
add
mov
sub
push
pop
orl
ljmp
xchg
mov
jb
cs
adc
flds
pusha
mov
scas
and
mov
mov
inc
movsb
add
jle
fwait
sub
ret
or
inc
rcll
daa
orb
push
pop
cld
into
sbb
add
xor
aam
mov
add
and
aam
flds
je
add
in
cltd
test
icebp
roll
loopne
and
jl
mov
scas
cmp
add
lods
inc
les
inc
jno
add
inc
and
hlt
xchg
adc
pop
out
add
push
add
and
test
add
inc
add
or
js
dec
xchg
add
cs
and
xchg
nop
lds
inc
pop
rclb
adc
adc
xchg
xor
add
push
shl
add
nop
add
fcomps
push
add
ret
pop
pop
inc
mov
aad
or
xchg
int3
ljmp
in
mov
out
mov
xor
int
and
sahf
adc
je
mov
aas
and
cmp
fs
sub
inc
decb
nop
inc
andb
add
mov
xor
mov
add
xor
sbbb
push
testl
add
mov
mov
aam
adc
or
mov
add
mov
sub
fwait
mov
in
mov
hlt
mov
das
push
in
dec
cmpsl
shl
inc
cs
sbb
add
inc
push
push
pop
std
jl
mov
cli
add
mov
adc
or
mov
movsb
mov
xchg
clc
test
jg
dec
push
cmc
test
jno
add
stos
cld
jb
out
add
sub
adc
icebp
les
jae
mov
push
jg
add
and
enter
dec
aaa
dec
pop
clc
adc
cli
sub
xlat
mov
adc
push
add
pop
mov
sti
sub
jmp
fisttps
mov
xchg
aad
pop
xlat
jnp
int3
mov
pop
add
insb
fldl
enter
repnz
pop
jbe
xchg
out
cmpsl
xlat
into
xchg
push
loop
add
push
push
sub
data16
mov
adc
fisttps
into
mov
pop
inc
push
sbb
xor
int
sbb
sbb
lea
or
inc
cmp
repnz
loop
adc
adc
mov
cmp
add
insb
outsl
insl
mov
in
jb
add
and
leave
mov
test
lods
dec
out
add
mov
mov
aaa
fs
or
sbb
sti
daa
inc
insb
sahf
decl
add
mov
inc
or
pop
mov
pop
add
das
insb
int
or
dec
mov
movsb
roll
inc
fadd
popf
lret
mov
cltd
shl
add
xchg
adc
sahf
lret
or
push
mov
clc
sub
mov
fistpll
popa
add
pop
les
mov
mov
xchg
out
leave
or
mov
ds
inc
adc
inc
inc
cmp
pop
icebp
or
les
and
adc
mov
dec
loop
add
mov
in
sti
shlb
or
cmpxchg
repnz
shll
sub
mov
int3
les
popf
cmp
pusha
add
fistpl
cmpsl
into
sbb
call
push
cwtl
and
daa
outsb
ja
call
add
pop
leave
pop
mov
cmp
mov
inc
int
add
lods
icebp
dec
fldt
adc
inc
scas
jae
les
add
inc
fdivrl
and
inc
mov
pusha
pop
xchg
sbb
cmpsl
jb
or
sbbl
mov
and
leave
stc
fildll
add
imulb
push
and
add
cs
mov
in
stc
adc
or
jge
movsb
mov
mov
pop
mov
pushl
iret
mov
ljmp
jmp
add
fisubrl
sarb
stc
pop
mov
mov
aaa
das
jno
scas
dec
fisubs
pop
out
and
clc
out
pop
out
or
xor
aaa
lret
sbb
stc
add
call
dec
push
push
mov
fimuls
xchg
jnp
mov
and
inc
mov
and
movsb
push
add
or
flds
out
push
and
test
or
stc
and
mov
cmp
inc
fistpll
adc
shrl
jmp
pop
inc
test
sahf
mov
adc
stos
loop
aas
nop
mov
stos
sbb
xchg
add
pushf
push
push
cmpb
and
pop
jbe
add
or
xchg
shl
pop
fsubrl
add
les
loope
adc
push
mov
repnz
loopne
shlb
test
and
pop
test
ds
aas
xor
scas
outsb
lret
add
sarl
or
xor
call
add
push
add
negb
mov
xor
call
jb
dec
sti
xor
sbb
xor
push
pop
add
dec
outsl
jnp
out
xor
and
add
lods
pop
call
xchg
aam
nop
out
jge
add
sub
pop
mov
cmp
inc
ljmp
sub
movsl
idivb
scas
imul
pop
adc
jg
add
decl
sbb
scas
add
sub
add
insb
aas
hlt
inc
add
sbb
scas
lea
adc
lock
daa
in
inc
cmp
sbb
add
pmuludq
cmp
dec
mov
addb
dec
and
hlt
ret
add
jl
dec
adc
and
add
push
es
inc
out
add
call
aas
xorb
xchg
out
mov
enter
in
cs
and
mov
add
shll
pop
in
adc
or
jmp
mov
xor
int3
lods
pop
dec
mov
xlat
sub
fnstsw
das
jl
adc
mov
clc
inc
add
mov
bound
push
xor
incl
nop
sub
shl
pop
add
out
pop
push
cmp
ret
or
pop
shlb
and
data16
mov
lods
sub
and
mov
rolb
pop
out
arpl
rcr
mov
sub
or
pusha
jmp
xor
ret
mov
cmp
mov
sbb
add
daa
dec
pop
mov
sbb
push
mov
push
sub
pop
cmp
insl
adc
xor
aas
or
adc
hlt
push
sbb
andb
mov
push
xor
repz
cmp
call
fildl
and
lock
jmp
mov
xor
pop
cmp
adc
call
lret
lds
sbb
jmp
or
inc
ljmp
daa
adc
push
adc
and
mov
xor
sub
mov
andb
mov
repnz
pop
cwtl
stc
xchg
jp
and
psubb
adc
scas
jae
orb
sub
cmpsb
or
movsl
add
les
mov
jo,pt
insl
push
inc
mov
adc
cld
xchg
jo
lret
add
cwtl
subb
out
dec
or
sub
or
enter
sub
pusha
or
in
jae
mov
pop
mov
jp
push
pop
cld
sub
push
in
pop
push
inc
test
cld
shrl
mov
mov
xchg
les
dec
mov
inc
and
or
in
pop
insl
cmp
ret
xor
or
pop
jecxz
mov
adcl
fists
in
cli
pop
add
push
xor
data16
test
sub
dec
in
les
jo
into
test
jl
out
cld
in
loopne
sbb
mov
mov
mov
popa
inc
loopne
loopne
push
add
rorl
jnp
hlt
mov
addb
lahf
loop
mov
outsl
inc
jbe
jno
es
ds
add
mov
xchg
mov
mov
mov
gs
or
cmp
out
pusha
fisubs
sbb
sahf
dec
and
clc
pop
cmp
jmp
add
xchg
cli
mov
add
test
lock
cmp
add
push
test
dec
lock
xchg
inc
notl
sub
or
mov
loop
mov
jnp
jle
add
lods
xor
testb
icebp
cld
or
mov
or
shl
pop
inc
cld
mov
or
push
cltd
mov
daa
xchg
jecxz
cld
dec
add
add
cmpsb
aam
push
icebp
adc
add
or
pop
cltd
pop
jle
mov
repnz
rcrb
pushf
lcall
xorb
sahf
xor
das
lock
pop
lahf
roll
sarl
mov
test
ret
push
adc
sub
not
push
and
sub
shrl
into
mov
inc
loopne
rorl
dec
cmp
lods
ds
jnp
inc
rclb
or
or
cmp
sub
xor
nop
and
and
dec
repz
or
dec
aam
repnz
add
adc
rcrb
inc
hlt
enter
pop
shll
cli
push
outsl
pusha
movsl
mov
out
pop
stos
and
add
add
hlt
xor
add
add
bound
xchg
or
mov
adc
xlat
adc
pop
push
push
movsl
jecxz
xor
dec
push
adc
and
inc
add
xchg
mov
lock
ljmp
mov
jo
add
mov
xor
leave
addl
cmp
inc
push
add
pop
add
mov
add
mov
add
inc
cmp
pop
clc
das
adcb
mov
cli
xchg
add
sbb
hlt
xor
loopne
push
enter
lret
add
ss
dec
sbb
add
in
cmp
cmpb
mov
jo
adc
or
mov
into
inc
out
add
sbb
pop
fsubs
xor
add
inc
sub
add
add
push
in
pop
add
xor
inc
dec
sete
xor
add
or
and
pop
addb
loop
add
jecxz
out
mov
nop
xor
xor
jo
xchg
or
sbb
outsl
add
push
in
out
add
xor
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
xor
push
mov
mov
push
call
cli
cmp
push
and
sbb
icebp
mov
inc
sbb
mov
outsl
enter
nop
sub
and
pop
inc
xor
add
stc
cmp
mov
pop
add
enter
dec
and
and
push
clc
jb
pop
or
or
cwtl
pop
stos
testb
in
and
mov
pusha
cs
xchg
dec
ret
ss
stc
dec
mov
add
call
movzwl
sub
nop
js
jl
pop
add
repz
and
test
negb
bound
hlt
jb
ds
xor
rcll
inc
pushf
jp
mov
mov
enter
push
test
test
std
jnp
add
jge
add
call
add
daa
or
outsl
mov
fstpl
xchg
out
sub
pusha
pop
lock
inc
add
jb
sbb
faddl
dec
test
add
movsb
pop
and
push
add
test
fmul
rolb
mov
in
jp
add
xor
push
sbb
inc
fiadds
xorb
aas
les
jb
fdivrs
fmull
add
out
or
loopne
int
shlb
push
pop
fbstp
aas
negb
pop
bound
mov
repz
or
or
arpl
xchg
mov
clc
xchg
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
sbb
aas
enter
xor
and
sbb
inc
and
movb
and
inc
add
test
push
inc
sbb
je
mov
or
push
pop
add
sbb
fadds
jns
lret
cld
enter
sbb
add
fldl
mov
aas
xorb
mov
push
or
roll
shll
dec
and
add
in
add
adc
jp
pop
je
adc
test
mov
add
adc
ljmp
loopne
add
add
dec
jne
idivb
sbb
icebp
xor
rcl
es
add
and
xor
mov
das
xor
aam
add
jo
scas
add
pop
pop
sub
pop
xor
add
jle
in
mov
cmp
ret
mov
add
or
jle
add
int3
rolb
xadd
iret
push
or
xchg
nop
lret
orb
add
rcr
or
neg
negl
inc
sbb
add
rcr
sub
jmp
push
add
inc
filds
pop
add
rcrb
cmp
add
aam
aad
rclb
adcb
js
in
call
jo
add
rcl
rorb
loopne
lock
xor
shl
repnz
xor
push
ss
cmp
add
add
shlb
cmp
adc
cmp
rolb
cmp
cmp
add
jo
add
sar
cmp
sbb
sub
jmp
pop
sub
out
scas
nopl
pxor
sub
arpl
js
in
and
lcall
test
and
xor
or
jecxz
and
cmp
shlb
and
xlat
mov
xlat
mov
mov
ja
add
cmpsb
xchg
andl
push
insb
shrl
scas
add
outsl
sbbb
inc
scas
shrl
sbb
stos
add
test
push
inc
mov
rclb
jp
aas
mov
push
jg
mov
cmpl
jne
cmp
ja
mov
mov
inc
jbe
jb
mov
mov
jae
mov
jno
jo
jo
adc
nop
add
rclb
inc
je
jbe
js
sbb
sbb
add
xchg
adcl
pop
inc
jo
in
roll
sbbl
loopne
pop
mov
pop
pop
inc
cwtl
fisttps
lahf
mov
sbb
dec
xchg
add
dec
out
dec
cmp
or
or
rolb
inc
inc
xchg
addr16
addb
cmp
data16
cmp
test
jl
push
mov
adc
cld
pushf
mov
pop
rcrl
popf
mov
xor
ret
inc
and
and
push
sbb
cpuid
sub
loopne
sbb
add
fcompl
pop
outsb
jecxz
andb
xor
lods
push
ds
out
add
jae
call
mov
pop
fnstcw
jbe
in
xor
out
ret
and
and
cwtl
mov
push
add
in
lock
adc
add
add
push
mov
cmp
sub
arpl
xorl
push
add
shrd
jmp
sub
jmp
push
pop
out
pusha
rclb
add
cld
mov
add
pop
dec
or
lods
xor
ret
orb
lcall
add
dec
or
xlat
lcall
add
pop
sbb
pop
pop
adc
adc
pop
lods
add
jle
and
mov
outsl
enter
cld
dec
bnd
aad
ror
push
lods
cmp
cmpsb
jmp
add
call
inc
leave
clc
or
add
jb
xchg
outsl
pop
inc
ljmp
test
cld
jbe
adc
cmp
je
shrb
ja
add
push
lea
add
jmp
mov
xchg
add
jp
mov
pop
scas
js
add
add
push
and
addr16
push
mov
shr
cmp
add
mov
mov
sub
or
subb
push
clc
aad
add
lcall
add
ljmp
mov
insb
add
inc
jno
sub
fiadds
add
not
and
pop
daa
add
or
pop
add
ret
inc
incl
ret
jb
sbb
clc
cmp
rol
jne
jg
add
dec
or
bnd
dec
rep
xchg
mov
into
roll
adc
addl
gs
cmp
push
mov
stc
iret
fsubp
icebp
push
push
and
rorl
inc
adc
lret
lock
add
scas
and
and
and
xchg
jno
sub
add
add
mov
fwait
enter
xor
addb
cmp
cmp
push
adc
loopne
cmp
dec
mov
add
add
push
xchg
cli
fisubs
sbb
movsl
stc
or
sub
xchg
mov
sar
pop
call
sbb
movsb
ret
addr16
adc
ljmp
and
inc
inc
popa
adc
cmp
xchg
mov
xor
mov
and
add
xor
mov
ja
lods
inc
mov
sbb
push
adc
add
leave
or
nop
testl
push
repz
mov
outsb
sub
dec
lock
or
pop
leave
loope
adc
add
adc
cmp
add
adc
jle
lock
xchg
mov
mov
sub
add
pop
fnstenv
xchg
nop
sub
sbb
aas
jno
addb
and
enter
or
push
sbb
and
lret
or
pop
icebp
shll
cmp
add
pop
push
or
stos
enter
orb
xor
sbb
rcl
repnz
out
xchg
pushf
sbb
or
or
add
out
idivl
jmp
sub
les
stos
and
inc
aad
xor
and
pop
sub
ret
dec
cld
icebp
or
mov
test
cld
xchg
loopne
popf
sahf
push
lret
mov
or
push
or
pop
je
hlt
add
inc
pop
mov
rclb
test
add
fadd
and
leave
je
jl
cs
ljmp
int
pop
dec
mov
xor
xor
psubw
daa
call
add
or
add
dec
sbb
push
dec
lahf
mov
data16
and
jmp
inc
push
mov
cltd
add
imul
cmp
andb
in
push
add
jae
mov
add
add
mov
in
int3
inc
lds
pop
test
pop
lea
mov
mov
adc
adcl
add
push
push
add
adc
or
lret
adc
sub
adc
adcb
push
mov
je
add
push
pop
mov
das
pop
mov
inc
mov
dec
subb
or
in
pop
add
mov
adc
lret
add
movsb
adc
pop
sbb
add
enter
jae
jns
shlb
sub
rcl
in
push
xchg
add
jbe
test
clc
jle
mov
push
push
mov
sbb
pop
add
jb
loop
std
in
pop
lods
adcl
enter
and
ss
push
insl
cmc
and
rcll
hlt
in
repnz
data16
test
mov
xchg
push
ljmp
sub
fwait
jnp
lsl
sbb
jne
push
int3
sub
add
dec
xor
repz
inc
jecxz
jecxz
hlt
mov
jmp
xor
add
nop
adc
sub
xchg
sbb
rolb
shll
inc
add
nop
jl
mov
cld
sbb
sar
rol
pop
jl
add
dec
gs
hlt
cld
lret
fisttps
test
inc
dec
jmp
mov
push
imul
hlt
fcompl
xchg
mov
or
and
inc
rcrb
adc
jl
add
dec
cmp
xchg
push
inc
fs
jo
aas
shr
addb
mov
js
jne
sbb
mov
add
dec
loopne
out
xchg
add
mov
rclb
fwait
aam
and
shl
inc
adc
cmp
fistps
movsl
xor
shrl
fcoms
rcrb
mov
nop
lods
jns
add
mov
lahf
add
adc
or
pop
aad
inc
popf
std
insb
sbb
add
push
out
add
pushl
fs
push
push
mov
add
or
mov
cmpl
or
out
sbb
xor
lahf
inc
xchg
adc
mov
loop
fs
add
mov
add
add
sbb
shll
inc
mov
imul
jb
push
or
das
pop
push
push
cmp
enter
lcall
add
shl
mov
mov
and
xor
mov
pop
cltd
sub
aam
or
pop
rolb
push
shl
cmp
divb
and
test
sbb
pop
movsb
in
jmp
addl
loope
std
sbb
jbe
inc
and
mov
add
push
push
icebp
mov
cmp
sti
pop
jmp
xchg
into
push
mov
lock
adc
cmp
aam
call
rclb
int
mov
add
es
stos
dec
push
dec
fsubr
arpl
push
sub
rorl
pusha
mov
add
aaa
shll
dec
das
fstpl
jns
adc
pop
mov
cwtl
push
arpl
imul
pop
inc
mov
dec
loope
sub
and
inc
inc
add
scas
push
push
cli
add
fdivs
push
push
jge
adc
add
mov
pop
inc
inc
lock
imul
sub
js
pop
jb
push
decl
lcall
pop
pop
dec
jns
outsl
in
call
adc
add
lock
test
loope
adc
push
jge
es
rclb
ljmp
movsl
cmp
add
dec
pop
leave
repz
mov
aad
or
push
inc
into
inc
mov
repz
mov
fs
pop
jo
rolb
dec
push
in
shrb
cld
enter
out
jb
ret
call
mov
movw
add
push
inc
or
adc
or
lods
cs
adc
add
push
sub
xor
sub
sbb
sbb
or
mov
mov
add
imul
verr
outsb
sub
push
les
xchg
sbb
addb
lea
adc
add
bound
ret
xchg
xchg
mov
jns
add
and
test
lods
hlt
inc
movsl
push
ds
ficomps
xor
jns
sbb
dec
test
push
aam
outsl
mov
and
xchg
dec
iret
cli
cmp
daa
add
inc
mov
mov
mov
arpl
cmp
xor
inc
cmp
adc
jl
or
pop
or
add
xchg
movb
or
adc
dec
inc
arpl
push
pop
mov
add
sti
ret
je
or
jmp
adc
repnz
dec
xorb
pop
jne
out
and
push
add
repz
inc
outsl
xor
cs
add
aas
loopne
fdiv
inc
pop
add
and
pop
sub
or
scas
jne
lret
add
ds
push
in
push
lds
mov
jl
fsts
in
or
sub
inc
jno
sub
sarl
push
js
adc
add
outsb
mov
or
jb
sbb
repnz
cmp
jne
inc
pop
add
push
jmp
add
dec
and
mov
xor
adc
loopne
sub
gs
add
mov
add
mov
jb
pop
insl
pop
std
stos
mov
jo
mov
xor
aas
arpl
xlat
imulb
rclb
cli
xchg
lea
pop
mov
mov
dec
or
jge
mov
add
lds
and
jo
mov
adcb
sub
sub
cmp
sbb
pushf
lret
repz
sub
jl
mov
or
jmp
cmpsb
hlt
call
jns
mov
fistpl
inc
rcr
add
je
rcrl
or
test
cld
enter
lret
add
push
push
js
add
or
adc
add
std
repz
cld
mov
movsb
sbb
mov
xorl
inc
add
test
cmc
and
cli
clc
add
pusha
add
mov
mov
fistpl
out
mov
lea
addl
scas
sbb
sbb
cmp
mov
push
add
imul
add
sub
out
cmp
pop
jmp
jb
mov
sub
cmp
movl
inc
ds
mov
jne
push
cwtl
xchg
mov
add
push
out
ja
sbb
test
jmp
inc
adc
nop
pop
fldl
xor
sbb
test
dec
adc
push
mov
rorb
mov
pop
pop
orb
adcb
xor
dec
inc
dec
scas
dec
or
xchg
ja
adc
xorl
pop
leave
sbb
flds
jle
and
inc
add
ret
fistps
inc
xor
xlat
loop
inc
pop
sub
adc
cmp
cmp
cltd
inc
push
mov
mull
ret
adc
and
enter
loopne
add
add
mov
loop
faddl
sbb
sbb
add
xchg
xchg
addr16
or
xchg
pushl
push
push
cmp
pop
dec
jge
sub
mov
cmp
jb
add
dec
xchg
fnsave
add
cmpsb
jge
adc
push
loope
dec
mov
sbb
ljmp
xor
rolb
pop
ret
test
cmp
hlt
inc
testb
cmp
roll
mov
or
idivb
and
cmp
xchg
add
or
rcl
push
jmp
inc
roll
out
fadds
push
or
fstpl
dec
add
ret
sub
pop
mov
mov
add
test
cld
rcl
je
add
dec
mov
cmp
mov
add
pop
pop
xor
add
rcll
cmp
inc
sbb
out
fsubrl
adc
inc
jne
aas
mov
xchg
add
adc
cmc
les
testb
stc
adc
repnz
adc
jmp
xor
add
sti
rorb
xor
xchg
mov
gs
notl
rclb
pop
cmp
mov
add
popa
xorl
or
xor
mov
add
mov
outsl
repnz
pushf
ds
adc
xchg
sbbb
rolb
es
cmpsl
fisttps
and
inc
adc
mov
sbb
pop
add
sub
rcr
jb
dec
adc
adc
ja
or
lods
sub
sbb
pop
repz
frstor
pop
inc
mov
add
dec
scas
xor
add
dec
rcr
add
mov
or
push
cld
pop
shll
out
cmp
andb
pop
add
mov
out
or
adc
jmp
push
add
add
push
inc
or
sbb
inc
or
ljmp
sub
ds
add
test
lock
sbb
add
out
sub
fwait
dec
xor
in
sub
mov
add
inc
mov
add
les
xchg
mov
add
inc
mov
sbb
fisubs
ja
add
sbb
and
sbb
mov
and
lret
inc
lock
cwtl
add
orb
mov
outsl
call
sbb
dec
mov
mov
or
cs
repnz
push
movb
sub
dec
jmp
andb
adc
test
rol
mov
cli
sbbb
getsec
test
notl
mov
adc
jne
jns
push
rclb
xchg
sbb
adc
push
push
rclb
mov
push
inc
stos
rolb
mov
sahf
push
out
cld
call
cmp
inc
jg
or
push
addb
add
push
pusha
data16
dec
add
daa
dec
cmp
sub
mov
add
inc
jnp
push
sub
push
sub
test
xchg
mov
or
push
aam
push
xchg
cmp
rolb
push
jg
add
sub
push
lock
adc
rcrl
xchg
xor
cmc
and
or
cmp
lods
nop
in
add
pop
dec
push
xor
sbb
pop
sbb
inc
movsb
xchg
pop
mov
sub
push
cs
mov
insb
imul
ret
cltd
xor
stos
call
xchg
dec
push
mov
xchg
or
xchg
rcll
and
dec
inc
std
and
add
push
aam
adc
inc
lret
add
stos
cwtl
fnstcw
add
add
or
add
cltd
add
fisubrs
mov
cmpsb
mov
adc
es
add
stc
ds
call
test
lea
xor
call
rolb
sbb
mov
inc
dec
sub
testb
inc
add
push
dec
out
xchg
lea
mov
gs
mov
cmp
xor
push
inc
jo
scas
pop
nop
cli
pop
aas
lock
or
mov
in
jle
mov
adc
ds
mov
cmp
push
add
sub
test
lahf
hlt
or
add
push
cs
das
pop
jbe
jo
push
add
xor
add
add
clc
pop
jg
push
mov
jbe
pusha
sub
pop
and
add
push
mov
xor
lret
xchg
add
jge
mov
das
push
adc
or
inc
or
push
push
gs
xchg
out
add
fs
add
mov
pop
push
add
xchg
pop
adc
clc
or
divl
add
mov
jae
aam
or
lahf
inc
xchg
add
mov
pop
mov
or
hlt
cmp
out
aad
outsl
xor
or
xchg
ljmp
fistpl
fsubs
cmp
add
enter
icebp
insb
mov
fadds
add
jge
push
jg
mov
add
call
enter
loop
adc
getsec
pop
dec
dec
and
mov
fsubs
lea
rolb
stos
and
xchg
push
adc
scas
jne
cwtl
and
jo
fdivrs
add
fs
add
mov
add
rcr
sbb
aas
add
loope
xor
inc
fdivs
pop
mov
jle
jo
pop
add
dec
xor
push
or
pop
das
es
sbb
push
xor
mov
cs
hlt
in
adc
pop
ds
add
outsl
cltd
and
jae
cli
add
jl
orb
pop
es
leave
lret
sub
inc
jo
and
mov
add
in
mov
imul
call
dec
daa
add
fisubs
mov
jge
fs
push
shrl
pop
pop
test
push
pop
push
jp
and
test
inc
sub
inc
jns
or
mov
bound
nop
add
mov
xor
in
and
and
adc
pusha
add
add
xor
sub
sub
sbb
add
adc
mov
sbb
add
add
adc
add
insl
mov
xor
orb
out
mov
movb
cmpb
add
or
add
sub
add
cli
add
push
push
mov
add
add
test
or
xor
add
pop
push
xor
sub
add
cmpsb
push
mov
adc
js
cld
inc
push
push
pop
fucom
scas
sbb
cli
sub
push
add
and
pusha
pmuludq
mov
add
sarb
sbbb
dec
scas
add
call
add
cld
lea
add
inc
das
lds
xorb
rcll
fnstcw
add
popa
or
add
add
push
inc
push
stos
ret
xor
jmp
cltd
sub
pop
int
sbb
add
into
mov
fadd
push
push
inc
mov
push
add
out
fimuls
leave
add
pop
jecxz
add
sbb
fcomps
fwait
mov
in
enter
sub
mov
push
inc
dec
xchg
dec
inc
push
pop
mov
lock
xchg
add
xor
push
fstpt
ds
gs
adc
clc
shl
add
ljmp
add
push
pop
sbb
jle
xchg
test
jo
push
nop
addb
and
cmp
sub
popa
inc
movsl
mov
sub
pop
jno
inc
xchg
add
xchg
movsl
mov
mov
dec
add
add
iret
int3
xchg
ret
pop
add
adcl
int
jge
mov
repnz
call
repz
jnp
andb
ds
push
add
insl
orl
adc
popf
adc
cmpsb
adc
xchg
lcall
and
aas
shlb
and
mov
cmovb
add
repnz
add
std
in
ret
pop
mov
add
xchg
xor
jns
pop
sarl
sbb
add
rcrb
add
test
fldcw
push
shlb
call
push
iret
add
inc
sub
add
mov
rol
rorb
fadds
xchg
inc
dec
stos
jp
add
je
flds
add
cld
int3
test
pop
es
cmp
mov
in
mov
andl
hlt
test
jp
add
aas
daa
cmp
mov
mov
mov
add
push
mov
rcrb
enter
xorl
subb
cmp
add
adc
or
sub
add
dec
mov
add
add
scas
lds
ds
add
xor
sub
sub
mov
add
repz
push
cmp
add
add
sbb
sbb
push
loopew
sub
add
xor
add
stos
inc
rcr
in
push
add
xchg
push
mov
xor
dec
cmpsb
push
std
add
add
daa
or
adc
loope
sub
or
mov
aad
xchg
sbb
cmp
jnp
xor
loope
xor
pop
cwtl
pop
icebp
int
push
decb
lcall
in
add
gs
cmp
outsb
jl
adc
add
test
add
sub
inc
cli
add
xor
fs
and
push
sbb
fwait
add
jecxz
sbb
push
add
push
dec
add
in
arpl
lds
mov
dec
add
mov
aas
ret
sbb
or
xor
aaa
lock
arpl
jb
imul
push
stos
inc
insl
add
sahf
add
ret
and
stos
xor
mov
icebp
add
movsl
ret
sub
test
mov
pusha
xchg
insb
xor
jne
push
data16
sarb
aam
push
pop
into
test
mov
out
add
lret
add
adc
push
stos
sub
icebp
add
dec
pop
in
xor
pop
les
jecxz
jns
ss
add
pop
mov
or
add
inc
or
lds
push
ret
add
cltd
fnstsw
sub
js
pusha
adc
add
push
pop
fsubrs
xchg
mov
push
ds
cmp
push
sub
jecxz
jo
subl
nop
out
sbb
mov
or
fs
je
ret
adc
xor
jb
sub
sbb
cmp
or
fs
rolb
test
leave
cmp
lods
pop
adcb
jmp
adcl
movsb
push
and
sub
clc
pop
lcall
in
scas
add
test
repnz
repnz
imul
stos
mov
nop
je
cmpsl
sbb
add
cmp
or
or
clc
dec
int
mov
add
sbb
hlt
scas
xorb
adc
outsl
andb
push
test
mov
push
lock
inc
fildll
dec
ja
cmp
aas
xor
pushf
and
lds
call
gs
sbb
sti
lcall
in
addr16
pop
shlb
lea
xchg
adc
adc
add
cmp
xor
inc
test
mov
mov
add
xchg
stc
sbb
xor
mov
cmp
add
and
movsl
cld
add
xor
or
enter
scas
xchg
and
loopne
jmp
adc
or
xchg
stos
scas
adc
ret
jns
repnz
sub
inc
cmc
or
icebp
push
sbb
jle
and
loop
sbb
sub
mov
add
dec
xor
dec
mov
add
sub
add
pop
hlt
pop
pop
xchg
add
lret
clc
lcall
add
mov
pushf
ret
and
sub
or
or
lea
aam
mov
pop
fstl
and
jno
fisttpl
cmc
push
mov
cwtl
add
lret
mov
add
stos
xchg
iret
test
popl
int
or
add
les
dec
fistl
cmp
mov
push
jg
call
and
mov
stc
nop
mov
inc
xor
add
inc
add
xor
add
xlat
mov
aas
cld
mov
or
lods
fisubrl
ror
add
push
not
movsl
cmpsl
sbb
add
test
fists
cmp
pop
add
cmpb
and
xor
sarb
dec
imul
iret
inc
shlb
jmp
pop
add
xor
sub
inc
sbb
add
int3
and
dec
out
or
add
mov
subl
sbb
push
das
xchg
pop
movsb
rorb
out
setno
and
xor
add
push
loope
and
or
test
add
and
dec
lods
sti
cmpxchg
scas
dec
inc
ficoml
shrb
mov
sahf
test
jns
mov
or
cmp
fdivrs
lea
add
test
into
sbb
mov
push
inc
add
add
mov
call
cmp
lock
jne
cwtl
daa
out
add
xchg
lahf
cld
movsb
adc
mov
sarb
xorb
loop
dec
ds
repnz
and
addr16
shlb
and
mov
mov
div
add
xchg
rcrb
cmp
dec
or
mov
imul
lock
add
lock
je
adc
mov
xchg
les
jl
dec
add
sti
pop
sub
dec
movl
xor
sbbb
loope
lret
pop
das
xchg
sahf
adc
jle
aaa
mov
call
cmp
cmp
js
in
clc
or
cmp
dec
mov
or
scas
add
mov
je
pusha
adc
sbb
das
add
mov
lret
push
add
mov
and
gs
sahf
hlt
xor
cmp
lahf
push
adc
call
add
repnz
add
ja
cmpsl
aad
inc
jg
sub
aas
mov
push
add
or
int
inc
pop
xchg
out
adc
ret
mov
out
cld
loop,pn
cmpsl
add
scas
je
inc
mov
lea
xor
gs
dec
mov
enter
data16
pop
leave
mov
daa
iret
add
sub
add
pushf
cmp
add
cmp
sbb
pop
cmp
das
dec
mov
fdivs
movl
cmp
pop
cmpsl
fcoms
xchg
jecxz
xchg
mov
add
mov
pop
add
inc
jge
pop
movsb
pop
push
sub
push
sbb
jns
push
enter
inc
dec
jno
xchg
fs
jge,pn
fidivl
out
les
add
sbb
mov
fbld
push
pusha
sub
cmp
jno
add
jne
xchg
add
push
jns
or
mov
add
push
pop
mov
pop
jle
sahf
cmc
add
push
and
xor
stos
push
ret
jp
push
add
sub
test
mov
popf
xchg
push
or
bswap
hlt
adc
negl
add
lock
loope
scas
add
xchg
sub
add
sub
mov
pushf
hlt
mov
add
fildll
aas
lcall
inc
inc
mov
std
lret
push
pop
sbb
mov
rcrb
popf
mov
in
sbb
cmp
les
push
test
sub
jb
inc
dec
or
lret
pop
xor
jo
pop
std
add
popf
or
adc
mov
lods
sub
add
scas
jecxz
imulb
mov
dec
xor
cwtl
adc
or
dec
sbb
jne
stos
movsb
adc
mov
and
stos
inc
repnz
push
add
push
fucom
inc
fdivrl
xchg
into
sbbb
les
out
mov
add
lea
mov
repnz
mov
adc
push
out
xchg
inc
daa
push
inc
push
xchg
jne
add
mov
je
add
adc
imul
add
inc
push
aad
mov
fiaddl
add
xor
imul
lods
fisttpl
test
xchg
mov
out
cmc
cwtl
hlt
jne
or
std
push
add
dec
push
push
ret
jmp
and
jae
adc
mov
sub
push
or
and
cld
rcll
mov
in
mov
and
ljmp
xor
or
test
and
xor
sub
inc
sbb
push
cltd
jl
add
sub
adc
movsb
push
jns
jge
je
add
neg
add
pop
and
out
or
xorl
add
jne
incl
jle
mov
aad
add
loopne
bound
call
and
jmp
roll
repnz
jnp
or
in
adc
out
pop
sub
addb
ljmp
js
sar
cli
add
insb
xlat
cmovg
cmpb
xor
mov
je
bound
push
pusha
push
sbb
rol
jnp
or
cmove
add
and
jmp
inc
sbb
dec
jne
addl
jg
pop
sub
sbb
aas
aaa
pop
sbb
and
cltd
in
pop
test
add
dec
es
scas
sub
loopne
cwtl
sbb
mov
add
and
cwtl
push
add
pop
jp
mov
pop
push
rolb
ss
add
jle
ret
sbb
and
inc
dec
cmpsb
out
push
add
sbb
push
and
add
inc
jo
mov
xor
cmp
pop
je
add
xor
cmp
loop
add
idivb
add
sbb
add
movsl
inc
lea
add
ret
sti
mov
ja
add
or
mov
xlat
movl
mov
add
xchg
mov
add
push
call
prefetch
pusha
leave
mov
or
add
push
sbb
push
mov
dec
or
jbe
sub
ret
js
xor
pop
inc
lret
mov
sbb
dec
mov
sahf
pop
jae
jb
cmp
mov
mov
xchg
mov
dec
inc
subb
lret
adc
xchg
inc
push
jo
aaa
push
jle
shll
add
jl
cmc
jp
insl
clc
dec
pop
pusha
add
icebp
shlb
sub
mov
xchg
mov
or
dec
pop
pushf
loop
sbb
decb
dec
add
inc
jb
out
and
nop
pop
cmc
decb
mov
stos
jo
add
dec
sbb
pop
mov
setno
pop
xlat
add
stos
cmp
testl
mov
pop
add
lret
adc
daa
add
and
in
fisubrl
push
jo
add
inc
ljmp
ret
movb
cmp
push
add
aaa
out
sub
les
pop
mov
xchg
push
xor
inc
add
in
or
sbb
cli
jns
xchg
add
push
movsl
cmp
xchg
mov
add
nop
push
dec
ljmp
mov
inc
insl
ja,pn
bound
pusha
fistps
adc
arpl
jge
push
jbe
outsb
pusha
addr16
sbb
push
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
or
inc
push
popa
add
jge
jl
inc
nop
add
outsb
loope
addr16
clc
stc
push
jo
inc
pop
sbb
pop
outsl
insb
andb
pusha
ror
jae
jge
pop
inc
mov
and
inc
adc
xorb
push
fwait
or
jno
jp
out
fimuls
adc
arpl
push
insl
ja
add
mov
fs
add
xchg
or
jbe
sbb
mov
ret
je
loopne
outsb
lods
sbb
icebp
dec
push
jbe
fs
jg
mov
or
push
jae,pn
add
inc
outsl
ljmp
sbb
push
xchg
imul
arpl
inc
jno
je
jns
pop
addr16
popa
andb
xchg
je
sysret
mov
dec
sahf
loop
outsb
imul
sarl
sahf
inc
decb
add
push
push
imul
sti
and
xchg
pusha
clc
lahf
add
push
push
xor
xchg
sbb
inc
adc
adc
add
jbe
mov
push
mov
insl
data16
jp
lock
call
xor
outsl
sub
loopne
push
push
ljmp
adc
pusha
movsl
xor
inc
ja
dec
arpl
mov
je
cmp
imul
lret
insl
jnp
add
fcoml
or
loopne
add
mov
mov
les
pop
movsb
add
test
inc
cmpsb
xchg
cltd
add
sub
add
dec
sub
or
pop
push
mov
inc
push
cmp
adc
cmp
sub
add
rolb
push
cmp
ret
inc
pop
subb
and
cmpsl
sbb
lcall
popa
divl
sbb
xor
xchg
lods
loopne
pop
jecxz
sbb
push
inc
jns
sbb
cmp
sti
loopne
adc
jl
and
fldl
xchg
hlt
mov
or
adc
js
pop
cmpb
sbb
sub
inc
gs
into
dec
xorl
and
inc
inc
add
xor
adc
das
es
rorl
call
add
push
sbb
and
inc
push
adc
xor
xor
sbb
add
shrb
add
test
mov
in
push
adc
icebp
in
out
or
pop
push
es
mov
sarl
add
pop
ret
push
add
popf
pop
xchg
cmp
repnz
mov
pop
or
push
subl
sarb
mov
sub
mov
pop
cld
mov
xor
cmp
jne
mov
add
jmp
test
pop
clc
sbb
xor
xor
in
push
movsl
stos
mov
xchg
scas
add
enter
ljmp
push
add
das
test
fildl
cld
lock
add
nop
enter
lea
lock
push
mov
mov
decb
insb
ds
mov
andl
int3
add
fisttpl
je
pop
mov
pop
mov
jbe
filds
por
add
test
aaa
push
mov
pop
cmp
stc
jmp
push
add
mov
fldcw
push
push
inc
dec
addr16
add
js
mov
fcoms
lahf
scas
pop
mov
mov
iret
inc
les
ret
int
cmp
inc
adc
add
pop
jg
les
test
xchg
les
jbe
aaa
xor
hlt
push
add
mov
jg
sbb
cmp
rolb
push
push
add
out
and
adc
add
repz
sub
add
in
das
mov
sbb
out
add
movb
fisubrs
mov
cltd
push
xor
jle
add
adc
pop
add
mov
mov
movsl
add
aas
cmc
dec
jl
add
jp
inc
add
and
pop
push
jo
dec
dec
pop
add
mov
fcoms
cmp
push
sbbb
add
add
dec
jmp
mov
fisubrl
jmp
pop
add
cmp
adc
ret
sub
adc
add
adc
mov
add
jmp
xchg
mov
add
je
add
das
push
dec
pop
jmp
jp
add
mov
stos
xchg
sbb
or
scas
into
pop
push
rcll
add
scas
push
or
mov
in
fadds
or
mov
rolb
dec
cmp
or
imul
mov
sbb
add
and
pop
addb
xor
add
incb
mov
imul
jae
add
jecxz
add
fsubr
push
add
and
pop
nop
ret
daa
xchg
jmp
inc
dec
sbb
cmc
sarl
fstpt
mov
jmp
outsb
add
jb
loopne
add
test
scas
adc
dec
xchg
add
cmp
lahf
daa
push
pop
ja
mov
jmp
icebp
bound
fldenv
and
add
cli
into
and
mov
jbe
mov
add
cmpsl
push
and
out
xchg
inc
inc
jmp
or
add
or
lret
and
add
or
add
or
xor
jmp
cltd
push
add
xchg
subb
push
jne
sub
and
ret
fst
mov
pop
cmpb
sbb
loopne
inc
add
xchg
lods
cmc
cmp
shll
push
ret
jg
add
test
testl
stos
shll
mov
addr16
adc
adc
pop
pop
bound
inc
cwtl
or
push
xchg
cli
cmpsb
in
hlt
xor
sbb
cwtl
test
adc
xchg
adc
adc
sub
aas
js
and
test
rorb
pop
lds
xlat
mov
dec
sub
rolb
jge
icebp
jl
loopne
cwtl
pusha
das
andb
outsb
add
sti
cmp
push
fcomi
scas
out
inc
or
subb
add
aad
push
pop
add
dec
loope
jnp
add
xchg
mov
lock
sub
or
cmp
add
movl
sbb
or
ret
pop
lret
leave
sbb
sbb
sbb
cmp
push
adc
add
jne
lods
lahf
hlt
mov
push
pop
inc
inc
or
lret
xchg
sbb
inc
scas
add
mov
call
mov
cmp
jle
dec
add
cmpsl
pop
call
dec
adc
mov
mov
sti
sar
add
loop
fs
and
jnp
jns
adc
and
add
insb
pop
fsubrl
xchg
adc
dec
push
pop
cli
mov
pop
jle
or
pop
jmp
loop
xlat
nop
jno
fistl
pop
inc
push
add
or
repnz
in
ds
mov
push
xor
jmp
repz
rolb
call
cmp
inc
jae
mov
sti
neg
pop
sub
pusha
inc
inc
mov
rorb
jmp
push
push
sub
test
ljmp
dec
js
mov
cmpb
and
rorl
add
add
in
add
cs
add
out
jmp
out
inc
jne
add
add
jb
xorl
nop
add
cld
and
int3
setb
add
ljmp
cmp
aaa
mov
in
lea
mov
push
cmp
sbb
push
sarl
add
pop
mov
xor
cld
add
mov
add
mov
jb
fadds
repz
mov
cmp
adc
ds
dec
add
aaa
xchg
loopne
add
cmp
shlb
enter
dec
mov
out
push
scas
stos
ffreep
jle
call
aam
cmpb
shll
add
add
aaa
adc
out
adc
and
cvttps2pi
add
cli
or
xchg
mov
rcrb
addl
loopne
iret
mov
in
data16
push
sbb
cmp
sbb
adc
add
sbb
fimuls
clc
jge
add
rolb
add
loopne
jle
out
lods
fadds
add
add
cmc
add
xlat
iret
test
mov
inc
inc
shr
and
mov
fstl
push
mov
sti
lret
jne
rorb
jg
xchg
and
add
adc
dec
ficoms
push
adc
or
push
jmp
xchg
or
mov
out
push
test
add
dec
mov
addb
inc
cltd
sbb
or
rorl
adc
mov
insb
fadds
xchg
adc
clc
inc
sbb
scas
add
dec
inc
push
lret
mov
jno
and
mov
aaa
mov
sarl
testl
adc
icebp
jp
jbe
pushf
enter
ljmp
mov
xor
add
hlt
xlat
clc
lahf
xchg
add
scas
cmp
add
inc
movsb
test
sbb
in
add
jmp
call
add
xor
cmpsl
loopne
xchg
lcall
les
stos
pop
insb
hlt
and
inc
sbb
lahf
sub
sbb
call
pop
scas
loopne
add
int3
add
add
aam
inc
in
mov
ficompl
inc
nop
scas
je
pop
mov
jl
pop
cld
lret
add
outsb
lods
jecxz
adc
inc
mov
icebp
inc
mov
cmp
inc
fadds
push
push
add
dec
lock
pop
test
shlb
sbb
mov
mov
push
lcall
fcomip
pop
jnp
jp
js
and
dec
aas
cmovb
mov
push
xor
add
mov
inc
gs
sbb
in
insb
mov
xor
pop
rsqrtps
imul
add
or
sub
fstpt
add
jmp
hlt
adc
test
xchg
addr16
insb
sbb
inc
cmp
add
clc
push
sbbb
add
std
or
aam
pop
test
mov
push
sahf
adc
fists
ficoms
outsb
add
inc
jo
add
sub
pop
or
mov
pop
bound
enter
dec
leave
jo,pn
js
mov
and
dec
xchg
les
dec
rcrl
push
std
mov
push
mov
push
mov
pop
or
pop
mov
add
fwait
dec
sub
popa
add
jnp
mov
sete
inc
mov
enter
or
outsl
add
ret
sub
lret
add
add
insl
in
cmp
inc
subb
add
jp
dec
add
sarb
adc
mov
add
jne
pop
pushl
fildl
out
add
push
cs
and
pop
xchg
mov
jae
add
or
shlb
test
in
aad
sbb
enter
sbb
pop
lret
push
sub
ljmp
icebp
xor
pop
pop
xchg
add
int3
or
mov
mov
push
jno
push
adc
mov
das
icebp
mov
or
cmp
inc
pop
and
in
psubsb
rcrl
add
pusha
mov
xor
add
add
test
aam
jg
in
aas
adcl
mov
or
sarb
or
add
xchg
add
push
cmc
xor
xorb
adc
sbb
add
jbe
cli
xchg
sbb
iret
pusha
mov
jb
cld
push
mov
cmp
in
mov
lea
add
testb
stc
push
lods
sbb
add
push
cld
add
jnp
faddl
dec
test
cmpsl
aam
sub
jne
call
adc
hlt
aas
addb
and
xor
xorb
loop
mulb
ret
or
jne
jge
add
push
mov
push
dec
sarl
ljmp
jg
and
mov
inc
adc
push
xor
clc
inc
cmp
sub
and
inc
add
sub
or
mov
dec
pop
sub
add
push
jo
or
es
cmpsb
dec
aas
add
ds
fadds
push
or
xchg
cmp
je
mov
dec
subb
rolb
add
adc
testb
jo
repnz
cmp
cmp
jbe
js
add
jnp
cmp
inc
inc
add
jae
push
cmp
inc
ja
out
psrlq
inc
pop
mov
sub
inc
jp
loop
push
in
lock
sbb
pusha
fmul
inc
negb
mov
mov
or
cmp
push
shr
cli
add
neg
push
adc
mov
jmp
jge
add
and
and
icebp
mov
mov
movsb
push
or
cmp
xchg
jae
cmp
les
and
bound
add
das
lock
add
lods
push
cmp
and
ret
xor
sub
jp
cmp
add
je
pop
pop
fnstcw
jmp
adc
fsubrs
and
enter
add
jo
loopne
mov
daa
sub
mov
add
rorl
mov
ror
mov
push
les
add
je
push
sbb
aaa
lea
inc
jecxz
xchg
call
je
shr
sub
call
dec
rcrb
mov
test
xor
aaa
aam
mov
in
add
sbb
adc
cmp
add
mov
mov
add
mov
adc
hlt
pshufw
lods
add
mov
enter
cmp
sbb
push
add
xchg
or
adc
adc
ret
push
pop
sub
add
fidivl
xor
lock
and
sbb
xorb
jl
adc
stc
scas
push
or
sbb
clc
daa
lret
cmc
push
test
mov
cmp
push
jnp
inc
mov
dec
jmp
add
mov
test
adcl
jmp
ret
jne
add
dec
fs
sbb
mov
sbb
pop
cwtl
clc
sub
push
lcall
jmp
int
mov
push
sub
xlat
mov
test
mov
cmpl
call
imul
je
addl
or
rorb
add
add
pop
ret
push
push
push
data16
pop
mov
dec
sub
shlb
fbld
add
jae
sahf
inc
imul
lea
add
jg
arpl
push
out
xlat
mov
add
pop
andl
xchg
add
or
xorb
js
shrb
ret
in
add
inc
inc
add
ret
les
mov
add
add
xor
test
repnz
inc
add
or
sub
call
scas
xchg
push
test
shlb
pop
add
sub
jno
add
and
shlb
push
lret
xor
xchg
orb
je
call
mov
pop
repnz
add
push
adc
xchg
sbb
mov
push
pop
and
push
jae
lret
sbb
jmp
lahf
cmp
mov
add
cmpsb
push
xorb
mov
xchg
ret
pop
sub
popa
push
hlt
cmp
add
pop
jg
shll
addb
dec
sti
shlb
xchg
xchg
in
xchg
add
add
push
cmc
pop
hlt
add
push
cld
lcall
sbb
or
stos
pop
cs
lea
add
loop
adc
xor
lods
shl
sbb
pushl
dec
addl
or
pop
cs
xchg
jno
mov
pop
and
dec
mov
pusha
cmp
ret
jo
icebp
clc
push
adc
adc
js
pop
add
sarb
add
xchg
or
out
add
cmp
inc
dec
adc
adc
add
push
pop
add
jg
test
add
add
imul
adc
fnstsw
xchg
test
in
inc
movups
adcb
push
mov
inc
inc
outsl
jne
add
mov
daa
or
cmp
pusha
adc
mov
std
mov
add
add
xchg
add
mov
add
ljmp
pop
mov
or
push
xor
mov
sub
push
push
push
push
push
inc
jle
mov
xchg
xor
push
push
add
je
push
or
add
jp,pn
dec
push
test
inc
push
xlat
test
in
popa
addr16
and
lods
gs
lock
push
mov
add
push
enter
inc
mov
mov
inc
sub
jae
iret
xchg
or
lock
or
sub
sbb
adcb
nop
fs
mov
jno
pop
aam
add
sub
add
nop
xor
test
jb
clc
pushf
js
daa
in
adc
adc
mov
lock
sbb
inc
push
mov
sub
xchg
add
int3
nop
or
push
add
jno
aaa
sti
cmpb
cs
comiss
stos
cmp
push
nop
cmp
loopne
mov
sbb
dec
add
inc
add
xchg
lods
jmp
xor
adc
sub
movsb
pop
rep
cmp
and
nop
add
add
push
xor
mov
cld
movb
sti
and
rolb
or
cmpsl
pop
cmp
or
jo
sbb
lret
sti
cmp
mov
shrb
jns
loop
add
cwtl
push
into
jmp
call
dec
cmp
add
mov
add
cmpsb
inc
push
mov
add
add
lock
iret
add
sub
push
pop
xorb
add
shl
xlat
addl
scas
sub
mov
je
sub
add
pop
xorl
xor
stc
std
jle
add
pop
mov
mov
sub
repnz
adc
add
push
push
inc
lds
add
and
fs
adc
dec
dec
add
test
mov
sahf
sbb
xchg
enter
pop
push
sbb
sbb
fsubs
sub
movsb
push
add
jge
mov
mov
in
add
lea
subl
scas
lods
adc
dec
mov
add
jnp
lods
and
ds
test
adc
andl
or
lock
cltd
add
dec
pop
rorb
cmpsb
jae
or
andb
sub
clc
mul
cmp
testb
xor
mov
pusha
pop
jl
and
or
addb
dec
cld
sub
xchg
shlb
xor
or
je
cmpb
add
adc
inc
cwtl
incb
shr
pop
jo
inc
dec
jmp
out
push
aad
mov
cmp
cmc
jne
cli
loopne
push
popa
pop
add
or
mov
pop
pop
add
or
pop
mov
ficoms
add
shll
stc
cld
add
into
pushl
mov
daa
or
aam
add
or
inc
and
je
sar
add
cmp
test
test
fidivrs
or
xor
mov
sbb
mov
and
sub
iret
add
mov
and
js
jmp
add
call
repnz
and
shlb
jge
add
pop
inc
leave
xchg
sbb
dec
sbb
rol
push
inc
clc
int
add
xor
sub
hlt
aam
dec
leave
jecxz
data16
loop
stc
inc
nop
mov
add
fwait
xor
lret
test
xchg
jne
movsl
cli
add
and
mov
pop
xor
inc
fdivrs
mov
repnz
out
xorb
add
inc
out
and
mov
cwtl
cmpsl
fdivrs
ds
aas
cmc
push
adcb
pop
test
xlat
add
movsb
pushf
cmpsl
outsb
mov
filds
pop
inc
mov
adc
adc
cli
add
sub
add
sub
ds
cmp
mov
push
push
ljmp
pusha
test
xor
les
adc
clc
test
lods
cli
and
sarl
sbb
add
stos
mov
push
rorb
dec
sarb
or
adc
adc
ret
pop
sub
fadds
in
xchg
inc
add
xor
inc
iret
pop
jmp
popf
andb
ljmp
dec
add
stc
cli
or
aas
push
lahf
jnp
mov
add
cmpsl
xor
pop
inc
xchg
jne
fwait
pop
add
test
xchg
adc
ss
push
ret
ljmp
cli
rclb
repz
add
call
movb
jns
cmpsl
lock
sti
add
ja
sub
jge
pop
and
clc
shrb
or
addb
mov
inc
or
add
jo
xchg
or
cltd
add
out
jg
add
add
mov
in
push
insb
test
mov
dec
adcb
rcr
les
cmp
daa
add
ja
mov
inc
adc
dec
mov
bnd
xchg
and
push
imul
and
push
inc
pop
js
add
not
or
fwait
aam
arpl
add
imul
test
pop
xchg
push
adc
push
mov
adc
je
dec
mov
pop
sub
inc
add
aaa
test
js
add
push
je
or
pop
lcall
inc
mov
lret
lds
add
push
inc
fs
stos
xor
iret
mov
jbe
adc
ret
or
pushf
sbb
cwtl
jnp
pop
push
out
lds
cmp
xor
push
and
pop
add
je
jp
arpl
ja
add
mov
or
add
shlb
insb
cmp
test
loop
imul
and
cli
into
je
lcall
add
pop
movlps
dec
xchg
rcrb
mov
subb
and
inc
pop
js
movsl
sti
xchg
add
pop
rcrb
adc
mov
lds
mov
inc
jmp
or
push
sub
adc
loop
fsubl
mov
jne
add
sub
subl
push
add
cmp
mov
inc
roll
pushf
sbb
lea
sbb
aam
dec
test
scas
pop
loopne
mov
jo
mov
xchg
xor
outsl
and
sub
add
push
outsb
add
mov
add
popa
cmp
or
add
push
push
pop
pop
mov
sahf
cmp
out
adc
add
push
adc
xor
push
dec
sub
sub
push
in
adc
hlt
add
mov
pusha
and
fwait
add
push
mov
add
jge
cmc
bound
loopne
notl
popf
fdivr
inc
aad
mov
sbb
inc
adc
add
mov
xor
sub
push
xor
loopne
pop
adc
mov
or
rorb
add
mov
test
cwtl
testl
xchg
push
jmp
add
add
movsl
push
popa
out
sbb
push
cmp
and
clc
and
pushf
fistl
push
popa
mov
aaa
adc
stos
cmp
pop
add
add
push
jg
cwtl
flds
aas
fdivr
add
enter
movsb
mov
jbe
cmp
inc
roll
inc
add
and
dec
mov
pop
mov
shlb
add
imul
dec
outsb
mov
test
pop
add
xor
cmp
fstpt
or
push
das
adc
mov
sahf
insl
add
or
outsl
loopne
push
dec
add
xor
movsb
jo
in
loopne
mov
sysenter
test
add
jecxz
pop
mov
sbb
in
and
shr
add
test
add
repnz
dec
push
hlt
jmp
enter
or
pop
std
in
pop
aad
out
dec
test
sub
jo
or
pop
sub
sbb
mov
push
inc
sbb
xchg
add
add
or
xchg
or
mov
cmp
clc
push
jmp
cmc
add
xor
add
and
lock
or
decl
add
call
or
cs
jnp
mov
mov
and
jo
inc
push
mov
sbb
mov
mov
into
lcall
push
mov
test
or
call
add
scas
sarb
inc
push
push
add
in
mov
xchg
mov
int3
jne
add
pop
pop
adc
nop
scas
pop
xchg
cmp
cli
jp
out
xor
push
mov
adc
sub
pop
and
sti
lock
dec
imulb
cmpb
sbb
mov
pop
call
andl
mov
cmp
jno
mov
ds
or
push
push
pop
pop
dec
inc
adc
pop
adc
inc
loope
mov
mov
add
xchg
dec
arpl
ja
adcb
jmp
dec
adc
sub
ret
loope
add
call
cmp
sub
popl
mov
movsb
add
fldcw
dec
test
mov
pop
mov
add
movl
sbb
jno
rorl
dec
test
ret
push
aaa
add
dec
es
in
sub
push
add
mov
dec
push
xlat
mov
add
mov
mov
sub
mov
cltd
dec
sub
imul
cmp
cmp
cltd
insl
or
dec
xchg
sbb
sub
push
and
and
xchg
push
add
aas
mov
enter
notb
lret
mov
xor
inc
mov
add
pop
mov
mov
pop
mov
add
pushf
jmp
jp
add
mov
jg
ret
jo
lret
rcrb
sahf
lods
mov
add
mov
in
cwtl
cmc
jns
pop
mov
or
mov
sub
cld
pop
into
arpl
mov
ret
and
and
ljmp
leave
out
or
andl
int3
add
xor
jg
add
mov
ja
add
sahf
lods
scas
dec
in
add
push
enter
out
xlat
andb
jno
add
xor
pop
xlat
fmul
ljmp
adc
lret
es
std
xchg
shrl
mov
pop
cld
fdivp
data16
xchg
mov
dec
dec
stc
ret
pop
pop
mov
lret
in
mov
imul
xor
test
movsb
lods
pop
mov
lea
add
sub
mov
dec
sbb
iret
cmpsl
xor
jnp
movb
add
cmovp
push
mov
mov
add
imul
sbb
jle
xorb
in
push
jle
add
adc
adc
or
add
aas
loop
xchg
adc
sub
stc
push
add
subl
inc
mov
sub
ret
cmpsl
xchg
adc
add
sub
lock
or
add
add
mov
pop
xor
pushf
int3
jnp
cmp
adc
pop
add
clc
sbb
lock
rol
add
sbb
sub
jae
jmp
add
dec
movsl
or
jne
add
pop
adc
sub
fcomps
pop
cmp
adc
add
inc
call
and
fwait
ljmp
adc
jne
out
pop
xor
mov
adc
mov
pop
jns
xor
add
xor
shrl
jg
add
mov
cmc
cmp
adc
add
repnz
push
cmp
dec
cli
adc
push
aam
scas
clc
inc
add
adc
add
mov
imul
add
add
pop
sbb
faddl
les
mov
push
jne
inc
adc
dec
xlat
xchg
loop
clc
adc
xchg
add
jb
dec
aam
mov
jno
add
and
div
mov
test
cmp
adc
sbb
mov
out
mov
sarl
insl
cmp
jbe
push
add
mov
push
or
cmp
adcb
jnp
inc
add
lcall
pusha
iret
mov
cwtl
clc
add
jne
jb
in
into
sub
add
mov
add
jg
cwtl
aam
add
insb
shlb
add
cltd
xor
aas
pop
mov
add
jmp
add
in
jmp
adc
add
or
outsl
cmp
mov
add
lods
in
mov
lock
add
cwtl
inc
int
popf
lcall
inc
rcrb
or
xchg
add
aam
ret
loopne
insl
mov
es
cmp
pop
shlb
aaa
hlt
add
cltd
in
enter
incb
jo
dec
andb
add
xorl
add
daa
lahf
sub
or
cmp
add
sub
push
add
pusha
pop
or
push
pop
fadds
add
push
loopne
fildl
jnp
das
fidivrl
push
dec
pop
pushf
enter
pop
pusha
push
cmp
or
and
inc
mov
adc
rcll
sub
stos
sbb
sahf
or
sub
inc
test
lcall
sbb
aam
xor
or
add
adc
in
sub
or
ja
add
sub
add
push
xor
sahf
add
je
mov
inc
sbb
pop
add
push
leave
pop
sarb
add
mov
fs
add
xchg
cmpsl
xchg
push
jb
xchg
cmpb
cmp
movsb
push
or
or
mov
inc
push
xor
sbb
cld
lret
filds
inc
jmp
mov
sahf
or
test
pop
add
add
adc
sbb
outsl
hlt
cld
sti
add
jbe
fiaddl
js
mov
adc
add
dec
scas
mov
sbb
int3
aas
orb
and
lcall
clc
lock
dec
lds
inc
orb
jp
add
mov
pop
lds
cmc
add
aaa
adc
and
mov
mov
pop
icebp
pop
dec
xchg
pusha
loopne
cmp
add
inc
iret
pop
ljmp
bound
and
scas
jae
les
sbb
sahf
inc
push
xchg
das
mov
shl
add
add
bnd
sbb
in
das
fs
fadds
mov
dec
xor
push
sbb
lds
sbb
popf
adc
sbb
add
test
dec
xchg
xadd
cmpl
add
pop
sbb
enter
inc
cmp
pop
inc
xor
or
and
push
mov
lahf
mov
xchg
lock
mov
push
mov
add
call
lea
mov
pop
adc
sub
popa
pop
push
dec
or
mov
xchg
xor
movsb
sahf
xchg
popfw
jae
and
sub
cmp
mov
mov
push
xchg
cwtl
cmp
add
jb
pushf
pop
jmp
ja
add
fnsave
stos
inc
cmp
shll
jb
cld
jle
inc
xor
adc
fisubl
clc
mull
stos
ja
lcall
stos
sub
add
inc
and
aam
and
sub
in
nop
push
lock
adc
push
add
ljmp
cld
ret
adc
mov
mov
call
pop
into
adc
insb
lods
add
nop
push
mov
movsb
mov
movsl
pop
setb
frstor
adc
sbb
and
xor
pusha
fnsave
fnstsw
cwtl
mov
push
rorb
xorb
and
pop
out
mov
sbb
push
cwtl
dec
dec
fsubrp
add
xchg
iret
add
adc
dec
inc
out
mov
cli
lret
push
loopne
add
fldcw
test
nop
les
mov
and
add
pop
ror
stos
add
movsl
decl
push
jnp
inc
fdivp
shrb
push
push
enter
sbb
mov
es
orl
add
xor
ficomps
test
add
jb
pop
adc
enter
inc
loop
dec
pusha
adc
dec
push
das
or
dec
fs
push
pop
xor
add
xor
jmp
jae
fiadds
and
add
add
or
aad
pop
in
inc
add
jns
cmc
fld
cmp
xchg
insb
jmp
xor
add
and
push
pop
jns
push
mov
addb
gs
lcall
insl
sbb
pop
ja
mov
ret
add
addl
adc
in
pop
push
xchg
scas
ljmp
add
and
sqrtps
xor
mov
popa
xchg
outsb
or
ret
dec
pusha
adc
push
and
mov
cmp
scas
std
sbb
mov
pop
or
or
adc
and
jo
lahf
loopne
pusha
jo
addb
shl
add
add
add
add
loop
add
push
addb
mov
ret
or
repz
adc
push
mov
push
push
mov
add
xor
popf
mov
inc
sub
stos
or
pop
lret
mov
out
pop
xorl
cld
jp
add
add
mov
xlat
pop
adc
cmp
rorb
lcall
sub
shr
aam
movsb
add
jns
iret
and
mov
ds
pop
mov
pop
fdivl
pop
lods
sarb
mov
pop
mov
push
mov
add
sub
push
push
push
cwtl
push
and
mov
cs
loopne
popf
mov
rep
mov
cmp
hlt
lock
add
mov
cmp
add
inc
inc
cmp
mov
call
add
cwtl
push
inc
pop
adc
rcrb
dec
enter
addb
sbb
adc
xchg
push
xor
shl
add
add
les
add
xor
jo
add
add
cmp
mov
add
inc
shlb
dec
mov
movsb
leave
insl
shl
in
mov
add
sbb
and
add
sti
sub
add
mov
mov
sti
mov
and
jge
dec
jnp
fcomip
ljmp
sbb
cld
add
jle
test
add
lea
inc
add
rorb
jae
add
adc
and
push
cmp
mov
andb
enter
and
inc
xchg
mov
insb
mov
mov
or
loop
pop
or
inc
addr16
dec
pop
inc
xchg
enter
lods
mov
sbb
add
lcall
add
or
out
mov
mov
sti
fmull
add
or
push
adc
or
mov
scas
pop
js
stc
xor
shlb
cld
cs
loop
pop
sub
addb
and
pop
add
movsb
adc
addb
in
fcompl
mov
add
inc
sub
cmp
ret
add
sbb
js
push
add
adc
scas
pop
xlat
das
mov
xor
pop
or
adc
add
add
mov
leave
jns
test
add
or
xchg
mov
ret
and
call
add
pop
rorl
shlb
adc
shrb
mov
mov
push
mov
jnp
sbb
jp
jecxz
add
inc
cmp
jb
xchg
rcrb
cmp
pop
add
int3
testl
mov
in
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
or
rcrl
add
lea
pushf
add
call
idivl
inc
mov
push
add
push
jle
add
add
pop
add
call
pop
pop
xor
ret
add
mov
enter
add
rcl
jno
push
add
sub
sub
stos
xor
roll
mov
rorl
addl
adc
lea
repz
push
xchg
dec
pop
cltd
xchg
or
pop
ret
add
xor
or
adc
adc
mov
mov
jo
add
inc
jmp
jne
sub
cmpsb
pop
sbb
jle
adc
rorb
and
add
ljmp
adcb
testb
pop
push
cltd
or
sbb
pop
push
mov
cmovs
and
jl
mov
xchg
cmp
add
stos
or
add
and
mov
add
inc
xor
movb
cmpb
cs
fiaddl
and
sbb
cmp
add
gs
push
mov
mov
add
divl
call
fwait
pop
lock
mov
loope
in
ljmp
mov
add
adc
fcompl
pop
add
adc
xchg
push
dec
xor
push
add
fistpl
mov
mov
lds
and
adc
add
xor
sti
leave
add
push
pushf
adc
roll
lea
cs
mov
pop
adc
and
cli
mov
add
dec
or
nop
or
and
jo
add
lea
pushf
sbb
cmp
jnp
testl
sub
ror
rcl
ljmp
pop
in
xchg
ficoml
hlt
add
adc
lret
ja
adc
xchg
scas
push
xchg
sbb
insb
nop
mov
addl
add
jno
add
inc
add
push
add
cs
loop
and
es
or
add
out
push
or
push
mov
mov
jns
xchg
sub
or
sbb
inc
or
inc
out
lahf
mov
xlat
call
jmp
pop
adc
insb
test
or
lods
adc
xlat
pop
add
sbb
add
add
add
mov
mov
or
repnz
sbb
sbb
add
dec
mov
aam
push
jg
fisttpll
push
mov
adc
inc
lea
pop
xchg
fisubs
shrb
roll
mov
add
lock
add
mov
cmp
mov
movsl
and
cmp
sub
add
inc
adc
cli
add
pop
ret
int
sub
add
mov
cmp
les
adc
mov
sbb
std
pop
out
ret
nop
roll
xchg
push
stc
jecxz
mov
mov
jne
add
andl
inc
adcb
cld
cmpsl
loope
out
xchg
scas
dec
rclb
mov
aaa
call
cmp
pop
add
push
jl
push
jle
into
jg
or
inc
push
andb
xor
pop
mov
push
add
pop
mov
bound
inc
ja
xor
add
push
add
jmp
add
rolb
aas
cmpsb
or
stc
out
or
inc
add
or
mov
sarl
je,pt
xchg
das
addb
add
inc
in
shll
pop
add
add
lret
rcrb
cli
pop
push
xchg
mov
rolb
sbb
or
dec
sub
cmp
mov
mov
orb
xchg
add
mov
and
xchg
in
pop
sbb
push
lret
js
and
push
pop
inc
fwait
push
test
dec
jb
jg
sbb
xchg
and
add
and
cmp
add
lods
xchg
jb
imul
sbb
mov
movsl
pop
pop
pusha
test
add
addb
jmp
sbb
add
inc
aam
xchg
dec
and
add
or
sub
stos
xchg
jp
mov
dec
je
aam
add
and
decl
in
xor
jg
lea
pop
sub
ror
sbb
fsubrl
mov
lock
je
hlt
aas
lret
xor
lea
ret
rclb
test
aad
popf
push
add
jbe
jmp
sub
mov
in
gs
aaa
aad
mov
out
pop
les
mov
cmpsb
addb
fs
outsl
add
push
push
add
or
inc
dec
mov
cwtl
fs
jne
or
lea
mov
adc
lods
pop
add
test
or
lods
pop
fcoms
jne
ror
pop
adc
sub
push
sub
add
stc
into
xor
cmpsb
add
and
cmp
test
cmp
je
jne
mov
mov
rcrb
or
adc
scas
lahf
xor
and
test
lcall
adcb
outsl
add
faddl
add
in
sbb
dec
jle
scas
lds
and
mov
jle
dec
inc
xor
lahf
dec
imul
xor
and
dec
xor
jns
or
push
add
jo
push
andb
lret
jle
leave
jg
shl
add
jp
hlt
hlt
add
fistpll
jb
ds
add
lock
xchg
jg
add
es
add
int
push
push
dec
inc
paddsb
mov
mov
add
jg
jge
xor
adc
jnp
pop
in
popf
push
add
cli
stos
fs
mov
add
lods
imul
out
mov
pop
mov
add
adc
repnz
xchg
or
dec
push
cld
cs
fcoms
stos
mov
inc
sub
xchg
clc
testb
cmpb
jp
dec
aam
add
cld
push
jnp
push
imul
jle
dec
sbb
lods
lock
aam
push
mov
jae
js
stos
inc
inc
add
cld
pushf
pop
cltd
pop
pop
popf
icebp
rcl
les
outsb
stos
mov
add
loop
dec
sub
popa
and
xchg
ja
adc
push
stos
mov
push
int3
push
and
lock
xor
mov
rorl
or
verw
test
pushf
je
add
addr16
push
add
out
xor
dec
lea
dec
adc
push
add
mov
add
mov
pop
and
sub
cmp
sbb
or
add
jns
mov
inc
and
add
push
or
jle
inc
adc
movl
jmp
add
sub
or
mov
push
mov
jb
sbb
jecxz
orb
push
xchg
mov
push
je
shlb
add
xchg
and
lods
push
dec
stc
dec
add
movsl
or
inc
add
adc
adc
pop
test
pop
pushf
stos
jne
push
adc
dec
or
add
call
push
jl
das
add
bound
cwtl
xchg
or
xchg
scas
je
add
inc
add
ljmp
inc
pop
xor
je
add
push
jne
add
outsb
dec
mov
xchg
inc
cli
and
dec
fadds
clc
and
sbb
xchg
sbb
cmp
mov
and
xor
mov
jl
test
cli
add
or
dec
ljmp
fimuls
cld
ja
add
icebp
mov
cmp
roll
push
lcall
int3
cmc
paddw
mov
popl
mov
xchg
js
ja
add
mov
pushf
add
xlat
ds
dec
xchg
testl
inc
clc
fs
cmp
jg
pushf
nop
das
ds
add
pop
inc
jne
jb
mov
lods
bswap
push
jle
loopne
fisubrs
xor
in
jae
mov
push
dec
add
dec
push
cmp
push
sbb
inc
push
push
push
inc
es
dec
call
add
scas
sub
loop
add
cwtl
xorb
inc
cmp
or
ja
inc
jbe
xchg
aas
loope
and
rcll
add
inc
add
sbb
xor
jnp
js
js
cmp
mov
daa
or
adc
jmp
sbb
add
in
xor
push
lock
mov
pop
xchg
jo
jnp
clc
je
add
sub
out
repnz
imul
lds
cwtl
xchg
popf
fs
pop
lock
push
inc
push
loop
mov
gs
jmp
mov
add
aaa
mov
xchg
add
sub
pop
mov
pushf
daa
test
ja
addb
push
imul
push
jge
mov
mov
add
in
lahf
pop
add
sbb
loopne
add
clc
cmpsl
sbb
mov
mov
jno
sbb
inc
dec
add
push
adc
jb
add
mov
je
sbbl
or
inc
add
outsb
cmp
sub
and
cmpsl
fidivrs
outsl
insl
jmp
adc
cmp
rolb
shll
jae
mov
les
dec
inc
into
lret
add
mov
xchg
mov
es
jecxz
fs
icebp
or
loop
int
pop
jbe
mov
mov
pop
pop
xchg
cmp
cmpsl
mov
sbb
push
push
xchg
lea
dec
mov
pop
pop
add
xchg
rol
fs
add
sub
sbb
repz
sahf
or
cmp
mov
dec
add
dec
pop
cmp
and
jbe
cmc
add
out
pop
add
ret
mov
out
sbb
mov
push
push
mov
daa
xor
fadds
cwtl
lcall
jns
repnz
rorl
dec
xchg
aad
jge
fs
jnp
push
sti
loopne
mov
xchg
popf
sbbb
cmp
jnp
pop
fidivs
rcll
jae
je
lea
mov
mov
dec
orb
cwtl
add
xchg
rorb
shll
scas
add
stos
xor
or
push
sbb
mov
xor
jge
hlt
ret
pop
hlt
lret
or
adc
fsubp
sub
push
outsl
test
pop
add
xchg
inc
inc
mov
ret
stc
sbb
adc
and
rcl
push
cmp
mov
nop
pop
rorl
rdtsc
aam
les
add
push
out
mov
push
fxch
inc
faddl
mov
shlb
daa
scas
add
call
adc
and
push
xlat
add
sbb
nop
fcomps
rolb
test
adc
jbe
or
jmp
xor
sbb
xchg
pop
pop
rolb
mov
mov
or
sbb
dec
push
lods
cmpl
std
add
mov
or
adc
jmp
mov
mov
pushf
out
rcrb
add
pop
cli
cmpsl
and
icebp
jnp
add
jb
pop
cmp
test
hlt
sub
sbb
aam
cmp
add
gs
jg
or
addl
and
int3
cmp
sbb
jmp
adc
repnz
mov
cld
loope
add
sbb
jp
add
add
xor
mov
int3
in
shlb
mov
rolb
sbb
push
dec
cmp
mov
inc
mov
sub
and
add
in
shlb
fildl
pcmpeqb
cmp
add
sub
cltd
xor
jne
in
cmc
xor
popl
xchg
xchg
enterw
cmpl
nop
test
add
lret
ljmp
mov
scas
addl
ja
add
in
add
int
andb
jne
xor
push
jle
pop
insl
out
inc
add
lea
add
or
sbb
mov
jno
sub
incl
bound
push
test
movsb
or
or
dec
add
call
mov
add
lret
les
inc
and
xchg
cmp
testb
mov
add
addl
adc
inc
xor
data16
mov
incb
fiadds
add
mov
push
aad
pop
insl
lea
dec
cmp
push
cmp
ja
cld
cli
dec
cli
fiaddl
adc
shrb
xor
mov
jmp
sub
sbb
cmpb
and
or
nop
sbb
adc
add
pop
andb
into
sbb
jne
inc
ds
add
orl
push
invd
cli
mov
mov
jmp
mov
clc
sldt
sbb
add
lods
adc
enter
mov
push
inc
add
xor
cli
and
and
ss
mov
jmp
add
pop
inc
mov
in
mov
mov
je
test
add
and
mov
jbe
andl
cmpsb
aaa
cwtl
mov
ss
mov
inc
pop
inc
pop
aam
cmc
add
cwtl
int3
pop
call
rclb
ja
xchg
test
cmp
add
xor
or
pop
clc
push
pusha
or
mov
jg
add
xor
dec
dec
cmpsl
lds
add
pop
push
xchg
dec
xchg
or
pop
adc
add
push
je
push
add
inc
push
mov
jmp
add
mov
cmp
imull
mov
arpl
fdivrl
mov
pop
sub
pop
jg
pop
or
inc
pop
nop
push
andl
adc
pop
adc
and
dec
adc
cmp
sbb
enter
mov
movsb
mov
pusha
inc
mov
lahf
or
mov
add
add
add
xor
ss
jbe
mov
adc
arpl
ret
sub
adc
push
cli
in
cmp
ucomiss
pusha
movntq
out
mov
jb
loopne
add
arpl
inc
outsb
pop
add
push
jp
push
sbb
add
jbe
push
add
add
test
add
add
inc
add
mov
outsb
mov
insl
cwtl
jb
pop
out
push
jo
lods
dec
xor
movsl
sub
scas
fcompl
sub
dec
outsl
fs
mov
dec
xor
fdivr
lcall
lods
jo
fidivs
add
pop
shrb
mov
orl
inc
or
sbb
jl
dec
jo
testb
dec
cmp
pop
int3
jge
mov
pop
les
jecxz
es
pop
add
mov
add
inc
aam
push
add
jge
push
pop
add
mov
xchg
dec
adc
loopne
in
add
rorb
sub
pop
dec
mov
mov
mov
mov
gs
add
inc
jns
xor
dec
cwtl
out
and
xor
popa
inc
out
add
cmp
fmul
push
sbb
movsl
add
dec
pop
add
or
xchg
jp
add
inc
mov
js
pop
inc
xchg
dec
mov
test
and
push
push
pop
test
dec
pusha
shr
adc
jns
add
js
jp
inc
ds
mov
cwtl
and
dec
or
cmp
add
xchg
aas
mov
cmpsb
fists
pop
sbb
ljmp
add
mov
les
sub
jne
pop
xchg
nop
mov
adc
in
mov
ret
add
inc
dec
cmp
jns
push
jl
sbb
dec
dec
adcb
inc
mov
push
push
sub
call
xor
mov
aam
sub
shrl
cld
xor
xchg
xor
in
icebp
lret
add
xor
cmpsl
cwtl
jnp
rcrl
test
xor
push
cmp
outsb
imul
add
jne
lret
push
jg
pop
inc
in
ret
call
adc
nop
mov
fs
repnz
adc
popa
outsb
jae
insl
gs
sbb
jb
pop
outsl
xchg
xor
popf
inc
int3
push
inc
aad
mov
xchg
or
or
sbb
jmp
movsl
bound
mov
daa
movb
jo
add
jb
je
jne
repnz
add
sub
push
addb
test
fmull
add
push
jae
xor
jbe
add
mov
fldt
and
jp
cmp
sbb
mov
movsb
pop
cmp
mov
add
outsb
jno
jne
sbb
out
imul
test
xchg
scas
lea
pop
xor
imul
or
and
arpl
jmp
push
xchg
add
cmp
dec
js
subps
mov
sub
and
add
push
adc
andb
clc
xchg
push
push
or
jmp
and
ret
add
sub
mov
xchg
add
js
lods
mov
jbe
repnz
pop
call
imul
xchg
ss
ds
sarb
test
and
dec
mov
push
aad
fxch
cmp
sbb
fwait
in
and
repz
sub
add
or
mov
inc
pop
sbb
mov
rcrl
mov
push
mov
mov
push
jne
add
xor
loopnew
add
jmp
jle
movsb
fldt
add
or
fisubl
stc
push
adc
aad
jo
sbb
pushf
pop
push
xchg
sub
add
test
push
add
test
scas
sub
sub
stos
mov
mov
cmp
add
lret
loopne
xchg
push
xor
add
shr
cmovle
sbb
mov
inc
mov
mov
loope
out
or
mov
pusha
pop
ljmp
adc
adcb
shrb
pop
add
pop
jp
test
int
add
push
mov
add
mov
or
dec
mov
lea
je
fsubs
adc
and
je
add
adc
mov
jbe
out
mov
dec
inc
mov
gs
pop
sbb
and
movsb
lods
cmpsl
add
insb
dec
adc
inc
xor
mov
add
adc
cmp
mov
clc
mov
addr16
rclb
and
dec
leave
ror
dec
or
fdivl
inc
sub
xchg
jle
sbb
add
inc
xchg
mov
pop
adc
outsb
or
xorb
cmp
xor
or
sub
movsb
push
push
les
push
add
mov
iret
pop
push
rorb
mov
aam
jno
hlt
test
add
fcompl
lahf
push
mov
add
sbb
fmul
or
add
pop
loope
mov
movsb
add
adc
add
or
leave
push
das
add
enter
mov
movsl
rcrb
pop
call
icebp
outsb
cli
mov
and
mov
jmp
sbb
add
in
test
inc
test
pop
shrl
dec
inc
add
adc
pop
add
or
test
adc
int3
and
add
les
add
dec
stos
fimuls
fmull
mov
jmp
add
in
subb
jno
cld
fs
jle
push
hlt
sub
jbe
in
mov
cmp
filds
inc
ds
add
in
adc
fldl
adc
int3
xor
subl
pop
sub
inc
loopne
outsb
mov
lds
push
in
xor
movsl
lea
xor
add
into
fisttpll
cltd
loopne
jp
sub
scas
dec
sub
push
add
rclb
cmp
ja
add
mov
mov
stc
add
std
orb
sub
gs
movb
ud2
out
rorb
add
fs
add
pop
or
inc
shll
xchg
dec
jg
jl
dec
jp
push
add
ss
fadds
add
outsb
sub
xor
xchg
ret
inc
push
push
jns
push
call
mov
jg
add
lock
imul
sbb
push
adc
jle
gs
and
dec
pop
dec
pop
lock
push
popa
add
clc
lods
dec
jnp
sub
dec
sti
aam
xlat
ds
nop
pop
push
clc
outsb
in
mov
add
test
out
outsl
jg
adc
into
fbld
pop
jae
pop
push
and
jb
jo
pop
shlb
mov
scas
or
add
and
dec
and
and
in
subb
sub
out
lret
fsubl
xor
mov
insb
sbb
ja
push
pop
sub
sbb
mov
or
mov
shr
add
cmp
clc
add
cld
rclb
inc
pop
in
in
rcrb
pop
push
in
add
test
xchg
adc
or
pop
push
je
adcb
stos
movsl
daa
add
in
sbb
mov
shrb
dec
add
inc
outsl
insl
add
xor
or
in
cmp
mov
les
or
sarl
push
addb
or
jnp
dec
jo
push
sarl
insb
xchg
sbb
arpl
mov
dec
enter
lods
les
xor
das
add
imul
cwtl
and
or
mov
insb
push
lods
push
fmull
inc
push
dec
xor
or
jo
pop
leave
push
sub
loopne
stos
fsubs
sbb
xchg
lds
sub
enter
mov
es
mov
push
nop
add
les
pop
inc
adc
add
mov
add
fs
push
dec
jecxz
add
fmull
inc
jl
pop
mov
inc
inc
jne
adc
fs
orb
xor
mov
and
or
les
pop
packssdw
pop
push
clc
xlat
data16
add
inc
adc
sbb
sbb
add
cs
cmp
sbb
jl
add
stos
adc
add
adc
daa
lock
lods
rolb
mov
mov
fists
pop
popf
ja
xor
pop
loope
sub
sarb
sub
in
and
mov
inc
add
cmpsl
mov
aad
addl
sti
dec
cmp
add
jb
loop
mov
leave
add
mov
mov
push
add
inc
add
sbb
inc
push
push
push
sub
in
imul
pop
ljmp
pop
jae
cmp
jmp
push
pop
adc
mov
movntps
mov
add
dec
daa
std
adc
ljmp
add
je
cmp
jbe
push
andl
pop
cmpb
add
cmp
mov
mov
jne
imul
push
ss
add
lahf
inc
aam
jbe
add
loop
shl
nop
sbb
inc
orb
sub
sbb
in
into
lock
inc
add
or
inc
and
aam
or
push
cmpsb
aad
fidivs
movsl
fldenv
add
cmpsl
fistl
pop
push
push
je
or
add
cmpsb
sub
push
jecxz
fisttps
and
sub
push
dec
ret
push
or
pushf
or
into
or
mov
push
mov
xlat
test
incl
jb
sbb
into
jmp
insb
add
pop
pop
in
push
mov
ja
mov
sub
sti
mov
pop
pop
xorl
pusha
out
pop
int3
add
incb
pop
xor
loope
sub
cmc
shll
imul
icebp
mov
add
fsub
sbb
pop
inc
add
add
addb
add
xor
inc
scas
sub
sbb
inc
daa
pusha
push
cmp
mov
add
addb
inc
iret
rclb
pop
dec
flds
stos
fnstenv
jecxz
test
xor
cmp
xchg
add
mov
cmp
jb
mov
adc
nop
mov
cmp
add
cwtl
out
hlt
insb
adc
add
dec
pop
add
push
cmp
lods
cld
loopne
add
xor
add
pop
add
out
cmp
sahf
sbb
sbb
stos
fstpt
dec
pop
inc
lahf
push
mov
adc
cmpsl
mov
sahf
mov
adc
sub
lds
add
in
call
mov
add
mov
sub
add
xchg
add
cwtl
sbb
add
sub
loop
dec
pushf
ds
inc
lret
xor
xor
mov
push
gs
add
add
add
and
sbb
scas
add
std
adc
pop
add
push
bound
pop
mov
pop
mov
movsb
mov
adc
jg
out
mov
adc
and
inc
pop
outsl
dec
and
add
inc
cmp
xchg
out
add
mov
movsl
sbb
aam
aas
iret
repz
fdiv
mov
decl
push
pmaxsw
and
add
in
inc
fwait
mov
aas
lods
aam
outsb
xor
add
ljmp
xlat
add
and
ss
cs
inc
jno
ljmp
loopne
xor
repz
mov
push
add
pop
outsl
pusha
push
loop
and
and
adc
push
loopne
rorb
jae
push
mov
call
jbe
pop
cmc
sbb
xlat
mov
test
sar
sbb
dec
mov
shll
inc
mov
mov
push
and
lea
jecxz
call
mov
pop
mov
nop
mov
enter
cwtl
inc
out
xchg
adc
add
neg
add
test
out
adc
aad
pop
lods
test
mov
inc
imul
gs
cmp
add
addr16
lods
push
sahf
sub
mov
push
inc
ret
add
and
int3
aad
sbb
mov
dec
push
or
or
add
add
pop
inc
add
jecxz
sub
loop
bound
pushf
push
mov
lods
add
repnz
adc
add
dec
mov
fimull
test
sbbl
pop
out
loopne
pop
push
cmp
loope
aam
adc
and
mov
fidivl
faddl
shrb
popl
cmp
stos
cmpsl
jmp
cwtl
shll
pop
cmp
push
jo
dec
loope
or
mov
cmp
hlt
mov
in
and
icebp
fstpt
inc
mov
push
std
pop
inc
xchg
add
jmp
xchg
pusha
scas
shrb
ss
add
mov
clc
sbb
adc
les
sub
pop
hlt
inc
jp
pop
in
push
or
dec
mov
mov
mov
lret
mov
mov
imul
fsubrl
dec
sti
xchg
add
or
jno
imul
gs
jecxz
jmp
jmp
clc
push
jmp
cltd
adc
cmp
mov
and
xor
add
sub
cmp
sbb
mov
aas
add
sub
adc
add
dec
mov
add
shlb
mov
add
jo
pop
add
add
jne
incb
mov
add
dec
add
aas
fwait
sbb
rcl
jmp
add
movzbl
sub
jne
cmp
dec
xchg
push
and
add
sub
call
or
js
or
fcmovb
scas
stc
and
mov
frstor
outsb
testb
push
xchg
loop
push
mov
fisubrs
les
int3
mov
sbb
lods
aam
addb
mov
sbb
mov
ficomps
and
dec
sbb
and
shr
add
ljmp
cmpsb
sub
add
add
push
flds
movsb
sbb
or
rorb
and
lds
xor
add
or
add
push
push
aad
add
outsb
fbld
or
add
test
nop
jp
fildll
mov
add
and
jle
aad
out
jl
pop
fmuls
jo
pop
xor
loopne
lods
push
and
sti
test
xchg
test
jne
roll
mov
mov
pop
add
pop
inc
lock
enter
mov
add
aaa
stos
pop
mov
sbb
sbb
cmpsb
xor
mov
js
add
mov
push
jne
lods
movsb
ret
jp
pop
dec
daa
adcl
add
xlat
ja
adc
enter
and
sub
ret
pop
int
loopne
push
add
in
subb
add
inc
stos
fmuls
xchg
aam
adc
push
add
add
out
inc
scas
add
jg
or
push
push
comiss
mov
lret
cmp
addb
push
or
pop
cltd
cmp
rcrb
pushf
or
je
roll
cmp
add
and
add
jp
fists
in
xor
jge
pushf
add
mov
call
add
cmp
cmp
adcb
decb
xor
add
xchg
imul
mov
sbb
test
and
addb
adc
je
adc
jecxz
mov
xlat
and
cmpsl
pop
or
xor
cmp
sbbb
xchg
jns
movsl
inc
jg
add
cmp
mov
dec
add
and
or
add
scas
and
sub
aam
iret
add
mov
xor
sub
add
das
fiadds
sbbb
mov
push
loop
add
mov
mov
add
xchg
loope
pop
pop
pop
push
dec
xor
pop
andb
shl
jmp
sbb
jmp
out
add
test
rclb
pop
inc
sar
rcll
add
test
cli
ds
mov
stos
iret
pop
and
mov
add
sbb
or
add
inc
mov
mov
sbbb
sbb
add
ss
sbb
jno
mov
popa
fcomip
das
incb
push
xchg
jns
pop
movsb
shll
jne
and
sbb
inc
mov
rcll
adc
dec
add
dec
and
push
jae
add
push
imul
mov
xchg
scas
aad
xchg
sti
add
sub
mov
out
cmp
add
xchg
das
add
nop
dec
jmp
add
mov
enter
mov
jae
and
inc
test
sub
add
shlb
xchg
inc
movsl
add
mov
dec
jo
clc
cmp
cld
or
test
dec
adc
xor
rorb
add
mull
js
in
add
dec
imul
ds
shrl
repnz
mov
add
and
dec
lock
fiadds
loop
or
ficoms
and
dec
pop
add
lret
call
mov
push
xor
scas
add
lahf
rorb
rcl
movsb
fsts
gs
dec
or
mov
pop
lock
fs
add
sub
sbb
lock
add
aaa
mov
loope
pop
add
shll
cmp
inc
add
inc
inc
cmp
faddl
cmpsl
repz
push
fcoms
inc
or
cmpsb
fadds
enter
xchg
sti
hlt
sub
or
lods
lea
sub
mov
sub
sub
add
js
das
enter
add
outsb
cmp
add
and
cmp
add
loop
jne
push
xor
and
lret
jp
inc
in
in
hlt
cmp
andb
sub
bound
push
daa
testb
in
jle
xorl
and
pop
mov
aam
adc
dec
in
mov
and
iret
out
xor
rolb
add
imul
push
add
idivl
xchg
xchg
cmpb
cmp
cmp
add
insb
rolb
mov
add
dec
js
add
pusha
adc
add
adc
clc
or
ss
or
imul
sub
fs
jge
add
sub
fstps
in
add
cwtl
mov
aas
data16
add
mov
ret
push
add
jmp
mov
push
orl
pop
inc
push
push
cmc
jmp
dec
adc
lcall
pop
outsl
enter
jns
inc
push
js
pop
or
test
ficoml
pop
xchg
testl
in
sub
fs
add
jo
jb
cmp
cmp
cmp
mov
rclb
dec
jne
stc
mov
out
je
clc
incb
or
add
gs
sbb
xchg
xchg
sub
sub
add
add
addb
push
add
push
lea
mov
add
das
dec
pop
pop
sub
xchg
rcrb
dec
sub
and
nop
add
xorb
sbb
addr16
inc
loopne
jmp
mov
sub
cmp
sub
dec
add
lea
cmc
add
push
lahf
xorb
clc
ljmp
sbb
nop
stos
cmp
sarb
mov
push
loopne
xchg
xchg
ret
lret
addb
or
mov
in
and
sub
add
dec
shlb
inc
cmp
sbb
and
sub
sbbb
add
jmp
mov
cmpb
cli
aas
and
dec
and
or
loope
jae
add
xor
sub
imul
call
mov
add
push
fiaddl
inc
xchg
mov
ljmp
cmpsl
push
inc
lods
cwtl
add
repnz
dec
into
and
sub
sbb
sbb
sar
enter
cli
call
add
popf
push
inc
nop
int3
add
inc
in
enter
pop
dec
jp
psubusw
jmp
out
sub
mov
adc
in
mov
mov
or
in
aas
add
push
inc
add
idivb
adc
int3
in
add
adc
mov
inc
fsubs
push
jns
add
mov
arpl
xchg
mov
add
jnp
xlat
repz
mov
ja
imul
in
inc
jns
and
xchg
dec
add
push
dec
jo
add
mov
add
push
data16
insl
mov
add
clc
and
leave
jns
addr16
mov
fimuls
and
aad
iret
in
cmpsl
scas
test
cmpl
mov
sub
mov
pusha
cld
push
add
pop
inc
movb
adc
adc
shlb
dec
les
xor
and
add
xchg
fmuls
and
shr
add
test
xor
insb
fmuls
mov
stos
mov
add
cs
clc
enter
push
jne
jo
add
and
popa
lods
xor
arpl
adc
mov
jae
mov
mov
or
sti
or
imul
out
test
movsb
cmp
dec
add
dec
xor
iret
cmp
add
stos
int3
or
pop
lar
clc
sbb
jl
pop
sbb
dec
repz
pop
bound
pshufw
mov
dec
scas
das
add
aam
add
adc
rcrb
dec
jl
scas
add
cmp
insl
mov
adc
pushf
mov
inc
or
add
inc
imul
aas
xor
cmp
or
mov
add
xchg
js
mov
push
js
add
ja
or
dec
and
mov
adc
add
es
xor
add
mov
iret
and
ljmp
mov
cwtl
dec
mov
push
xchg
adc
push
in
jno
adc
cmc
out
add
loopne
add
dec
jbe
nop
fiaddl
imul
push
sbbl
sub
cwtl
mov
xor
test
arpl
ja
pushf
or
or
dec
repz
adc
lret
rclb
add
adc
adc
mov
add
dec
cmp
pusha
add
aaa
add
mov
je
jbe
and
xchg
sub
xchg
mov
sbb
or
test
aaa
and
or
daa
daa
mov
cld
movsb
into
sbb
add
and
cmp
lods
enter
inc
xor
xchg
jle
cmpsb
xchg
push
les
enter
and
xchg
rorb
sub
xchg
insl
or
cmp
fildll
lods
xlat
cmp
pop
jno
in
cmp
mov
push
sub
inc
add
or
in
add
adc
xlat
and
out
rorb
xor
push
fs
cmp
dec
add
jmp
and
loop
dec
hlt
arpl
gs
lcall
loopne
andb
inc
pop
and
mov
cli
adc
adc
dec
js
dec
orb
jae
insl
repnz
add
and
mov
hlt
push
jns
jns
jbe
psubb
jns
addb
push
in
fimull
xchg
mov
daa
dec
mov
jl
prefetch
int
incl
xor
xchg
imul
ds
or
ja
xbegin
test
add
js
loopne
dec
add
pop
cli
mov
inc
mov
add
adc
popa
mov
sub
cmp
stos
fisttps
xchg
push
push
and
stc
xor
in
xchg
add
push
pop
adc
adc
nop
inc
sub
int3
jns
add
jl
enter
and
jne
lods
and
sub
mulb
jo
insb
add
lods
test
arpl
sub
xchg
fcom
add
cmc
inc
mov
fistl
sub
xor
pop
jl
mov
imul
hlt
mov
add
into
sub
adc
mov
in
movsl
add
sbb
aad
mov
data16
hlt
in
mov
frstor
cmp
add
lods
jb
add
mov
or
pop
dec
mov
loopne
jno
pop
and
add
or
add
mov
or
in
mov
shll
sub
popf
add
ss
cmp
cmp
jb
jo
inc
bound
ret
fs
sub
sbb
mov
test
adc
pop
inc
pop
add
outsb
push
gs
popl
mov
js
add
sub
repz
mov
cmp
mov
call
daa
and
int3
dec
ficoml
add
out
dec
adc
and
fisubrs
hlt
and
sub
ljmp
divb
xchg
or
inc
mov
arpl
adc
fs
and
ja
jae
jo
es
sbb
jl
sub
nop
stc
adc
pop
jg
jg
add
jnp
add
push
xchg
add
mov
mov
jmp
out
mov
dec
dec
add
sbb
les
push
add
and
xlat
fs
out
push
jecxz
push
add
fsubrs
ret
pop
in
daa
or
and
pop
lcall
pop
test
jmp
dec
sbb
add
lahf
add
push
inc
or
sbb
clc
push
xchg
pop
adc
cmpsb
add
outsb
dec
pop
inc
inc
add
push
adcw
adc
add
push
pop
ret
jg
jmp
orl
adc
mov
or
aam
les
add
inc
push
ret
fsub
cs
and
xchg
sbb
inc
or
sub
xor
ljmp
sub
out
pop
jo
or
mov
inc
adc
shrb
push
xchg
add
xchg
add
loop
push
enter
mov
pop
xchg
lods
dec
adc
mov
adc
or
or
in
dec
adc
test
pushl
cmp
pop
cmp
in
flds
xor
add
inc
or
inc
and
ja
pavgb
sub
mov
push
add
push
loope
test
pop
movsb
adc
push
aad
sahf
pop
dec
lret
divps
push
add
mov
pop
add
mov
les
cld
cmp
movsl
add
repz
push
dec
add
pop
add
dec
je
cwtl
push
adc
adc
jmp
shr
and
das
mov
add
sbb
push
mov
outsb
loop
jl
push
xor
jno
push
xor
enter
sub
add
sbb
xor
and
add
cli
out
gs
sub
les
aaa
pusha
call
cs
popa
outsb
daa
je
and
insb
outsl
fisubl
sbb
aas
pop
push
jae
ret
and
pop
test
sbb
sbb
add
adc
add
cli
or
mov
sahf
insb
add
mov
repz
and
add
adc
or
add
adc
sub
add
sbb
pop
adc
push
aad
mov
hlt
repnz
mov
mull
and
push
lret
dec
mov
jnp
sub
sbb
xor
inc
push
add
sbb
cmpl
das
dec
add
ficomps
push
movsb
inc
and
cmp
mov
xor
jp
jbe
leave
ja
sti
cmp
aam
inc
mov
and
adc
or
aaa
lahf
ljmp
lds
jb
ret
stos
mov
mov
jl
add
cmp
flds
mov
adc
faddl
xchg
out
test
ret
add
test
xor
sbb
jbe
dec
jns
cmp
xchg
out
add
addb
xor
and
adc
cld
sub
int
push
in
and
and
xor
and
jmp
xchg
jle
les
lock
mov
stos
ret
mov
sub
push
xchg
ret
add
ret
add
cld
leave
mov
sbb
push
popf
fmuls
mov
lock
push
popf
jp
adcb
das
sbb
cmpsb
jnp
adc
and
mov
pop
orl
dec
cld
inc
add
push
negl
pushl
mov
adc
jp
add
mov
call
add
push
jle
loopne
lea
xchg
cmp
add
sub
push
pop
aad
push
add
add
clc
js
fdivs
and
pop
ja
in
xor
sub
lods
adc
mov
xchg
pop
mov
add
jmp
add
dec
stos
xchg
fidivs
xorb
fsubrl
sub
es
cli
cmpsb
imul
jge
out
cltd
jmp
pop
mov
rolb
pop
pop
enter
jl
arpl
add
fwait
add
push
adc
inc
data16
mov
dec
adc
push
lea
mov
ss
push
hlt
adc
aad
loopne
aas
add
rsm
int
nop
stos
inc
sub
in
add
cmp
in
inc
test
stos
loopne
daa
lcall
inc
test
repz
lock
clc
notb
js
jb
dec
add
inc
test
xor
mov
push
ljmp
aam
cwtl
jno
lock
inc
jns
pop
and
enter
int3
push
jo
filds
sub
fwait
and
pop
sti
mov
or
jae
addl
jp
mov
pushf
xor
das
sub
jle
add
out
jo
mov
imul
int3
jno
ljmp
mov
cltd
mov
sti
imul
adc
inc
popf
mov
ret
in
sbb
add
jb
pop
add
pop
xor
adc
cmc
inc
adc
add
xchg
and
ljmp
scas
mov
push
and
test
loopne
test
or
push
test
jo
lods
popf
add
add
jbe
adc
rolb
add
and
or
mov
cmpsl
cmc
lea
push
push
push
jne
xchg
push
jmp
adc
cmpsl
aad
add
or
inc
pop
mov
andb
lds
xchg
cs
push
cmp
sub
nop
cltd
rcrb
sub
add
dec
push
xor
add
cmp
cmp
push
mov
pop
in
mov
popa
push
jb
cmpsb
push
push
and
cmp
and
call
cld
ret
add
repnz
push
dec
add
das
ds
adc
pop
cmp
clc
mov
data16
xchg
add
in
pop
adc
aad
cli
push
test
js
add
mov
mov
adc
add
in
mov
lock
mov
into
adc
mov
lods
sub
adc
push
out
cmpsb
pop
inc
xlat
movsb
sub
sub
or
in
call
loopne
fs
pop
xchg
or
int
mov
sti
iret
stc
add
xchg
fidivrl
xchg
rcrb
add
aas
aad
mov
stos
andb
pop
pop
mov
test
imul
ret
mov
je
add
repz
add
ret
and
mov
add
pushf
sbb
xchg
mov
jl
push
clc
out
and
inc
pop
pop
loopne
add
rolb
mov
orl
mov
lea
inc
add
aad
add
std
loopne
add
or
mov
sahf
std
fld
ja
add
in
xchg
push
cld
inc
mov
sbb
sbb
popa
xchg
lea
push
mov
insb
cmp
push
adc
cli
icebp
add
dec
pop
pop
stc
jg
mov
adc
je
push
jne
inc
xchg
dec
add
sbb
std
fwait
jle
bound
inc
add
mov
add
or
sbb
mov
adc
in
inc
jmp
add
xchg
mov
inc
icebp
cld
adc
xchg
sbb
hlt
test
sub
das
inc
jbe
mov
jp
mov
cmp
add
mov
jge
ja
push
out
cli
mov
sub
adc
sub
mov
push
mov
and
mov
in
ja
jnp
or
sub
clc
push
loopne
enter
add
sub
add
jns
hlt
inc
mov
or
and
xor
or
adc
mov
jmp
addb
cwtl
dec
adc
pop
jg
loopne
mov
clc
nop
sbb
lcall
xchg
inc
adc
loopne
rorl
addb
and
aas
add
dec
and
and
sbb
and
add
mov
xlat
out
imul
pop
pop
bound
fmull
push
cmp
sarb
in
ret
push
nop
and
add
repnz
adc
aad
inc
ljmp
ja
add
clc
cld
movsl
flds
or
shrb
call
add
adc
clc
and
add
mov
push
call
dec
jp
add
andl
lock
ret
add
mov
ja
add
mov
or
add
jecxz
jae
adc
add
and
aam
sub
xchg
test
push
roll
inc
cmp
pop
sub
adc
adc
add
icebp
cmp
adcb
jo
outsl
cmp
sbb
add
xor
inc
or
fninit
add
not
jne
test
repnz
fsubs
or
pop
push
lret
inc
xchg
loop
ljmp
clc
jb
pop
les
mov
sarb
je
xorb
movb
lret
dec
cmpsl
jp
add
sub
addl
mov
xor
pop
jo
hlt
adc
mulb
sub
xchg
outsl
addb
jmp
cli
pop
rcrb
fnstcw
ret
ja
xchg
aas
repnz
repz
jae
nop
negl
gs
adc
popa
cmp
add
and
jb
push
dec
jp,pt
pop
clc
push
and
lock
out
push
add
test
jne
push
push
nop
add
mov
fmul
fimuls
mov
inc
pop
or
test
and
sub
dec
add
xchg
lock
xor
pop
cmpsl
push
dec
cmp
jmp
decl
pop
invd
cs
notb
mov
call
inc
outsl
lcall
lea
push
dec
inc
jmp
and
ret
movl
loope
lea
ficoml
and
pop
test
mov
xor
cs
add
lret
pop
mov
mov
movsl
mov
pop
test
test
dec
daa
mov
pop
in
dec
cs
and
les
lcall
cmp
xchg
ret
daa
add
icebp
and
aaa
xchg
mov
je
dec
pop
cmp
mov
xchg
push
add
mov
adc
push
sbb
push
mov
mov
movsb
sub
adc
shr
add
addl
loop
dec
imul
push
stc
jl
add
push
lea
inc
jmp
insl
call
pushf
adc
add
call
outsl
mov
andl
scas
ret
leave
out
cli
enter
stos
loopne
or
mov
and
or
loop
push
test
push
or
repnz
out
movsl
pop
daa
add
jge
add
in
repz
add
clc
cmp
add
test
pmuludq
adc
cmp
ret
pop
sbb
inc
into
and
call
adc
pusha
add
enter
and
inc
add
pop
mov
mov
ljmp
sub
jge
add
jnp
push
and
fs
lock
jno
mov
rorb
or
add
mov
inc
add
mov
ficoml
cmp
xor
cltd
jle
aam
pop
add
and
cmp
inc
mov
mov
add
mov
rep
xor
scas
mov
or
mov
ret
push
call
loopne
adc
add
mov
rolb
dec
ja
pushl
inc
add
mov
add
pop
sub
stos
pop
pop
xchg
xchg
push
mov
sub
jno
pop
dec
sbb
js
shll
sbb
mov
xlat
dec
fs
add
push
cld
adc
hlt
xchg
es
stos
out
pop
cmp
jae
sbbb
adc
testl
dec
pop
out
push
or
js
bound
inc
jecxz
sbb
dec
lret
enter
pop
push
dec
jl
add
jl
sbbb
add
inc
mov
lods
add
cmp
add
jle
out
jmp
fidivrl
dec
scas
dec
push
add
call
sub
mov
frstor
mov
push
lcall
ror
std
dec
jo
and
maskmovq
notl
mov
dec
adc
and
dec
add
add
cmp
cmpb
cmpl
pop
cli
jns
and
data16
dec
xlat
test
add
inc
cmp
mov
xor
inc
push
push
ds
push
js
cmp
rorb
add
lcall
inc
mov
es
xor
or
out
faddl
mov
dec
pop
fs
adc
cmp
test
clc
mov
sub
dec
in
add
lock
into
push
fdivl
jnp
pop
lcall
push
subb
fadd
fadds
in
shll
jmp
ret
dec
and
jle
dec
mov
pop
sbb
shr
mov
divb
cmpsb
add
stos
hlt
scas
insl
mov
jns
add
std
xor
ja
xorps
rcrb
dec
rcrb
add
scas
sbb
add
add
call
cmp
ficoml
push
add
lea
xchg
std
adc
sarb
sbb
add
pop
push
dec
add
xchg
mov
jae
sbb
adc
mov
ret
add
test
les
pusha
call
sahf
jae
jge
js
jo
cli
pop
mov
xchg
rcrl
hlt
das
xchg
dec
or
adc
mov
arpl
xchg
xor
adc
sbb
xchg
cs
or
sbb
shl
jp
pusha
push
or
out
adc
lock
push
add
and
mov
mov
add
pop
cmp
je
test
or
dec
jae,pt
cmp
pop
outsb
in
sbb
add
and
rcll
cld
xchg
fadd
sub
push
add
lcall
add
sbb
dec
jne
outsl
xchg
addr16
xchg
imul
jl
jmp
mov
and
push
dec
xchg
fistl
add
ret
push
adc
inc
addr16
add
aad
add
fimull
addb
ja
push
jne
aam
sbb
enter
sbb
ljmp
xchg
push
imul
add
enter
in
ja
add
pop
je
add
jmp
cld
push
nop
jno
add
cs
sbb
dec
aad
push
adc
scas
sub
std
rolb
xrelease
scas
mov
jne
addr16
pop
lret
cltd
xor
ret
dec
adcb
inc
add
insb
push
pop
dec
and
das
mov
fiaddl
int
xchg
inc
cwtl
add
push
cltd
ret
pop
jl
nop
add
imul
inc
push
outsl
dec
jne
pop
add
mov
mov
xchg
lcall
dec
stos
data16
xchg
nop
aad
add
call
into
cmovs
loopne
jge
rcll
cmp
or
cmp
or
add
ret
inc
and
into
rorb
add
lock
movsl
adcb
loopne
cmp
and
dec
mov
pop
inc
cmp
inc
fs
les
test
pusha
add
jo
popf
add
into
ljmp
decl
jle
or
pop
add
mov
ficoms
js
or
es
mov
cmp
and
pop
ret
rcr
and
mov
add
pop
push
inc
mov
add
movzwl
add
xor
add
pusha
or
cmp
push
je
push
add
push
or
es
add
mov
add
repnz
push
cli
xor
inc
or
pop
test
rorb
repnz
sub
repz
daa
imul
sbb
cltd
sbb
in
add
sti
or
and
incl
and
jmp
or
push
mov
pop
add
call
subb
es
or
je
out
mov
push
jmp
push
cmp
push
adc
push
inc
stos
and
cmp
add
mov
and
call
add
idivb
push
out
pop
mov
and
lcall
adc
adc
iret
inc
bound
mov
mov
inc
popf
mov
movsb
cmp
mov
aad
add
push
in
push
clc
add
xchg
dec
add
sub
dec
xchg
dec
adc
xor
test
mov
jae
inc
add
fiaddl
loope
cmp
fmul
add
fadds
cmp
xor
sbb
push
or
fwait
xchg
dec
xchg
xchg
rolb
add
cmc
push
stos
in
inc
dec
add
inc
xchg
add
xchg
adc
mov
add
xchg
ja
cmc
fcmovnb
push
clc
and
fildll
addb
mov
into
add
sbb
pop
jle
pop
inc
sbb
cmp
push
and
pop
xor
sbb
push
test
pusha
aam
xor
sbb
xchg
adc
push
in
pop
adc
mov
jmp
aaa
push
aas
push
movsl
addb
or
jg
mov
inc
adc
mov
loopne
dec
fiadds
push
sbb
mov
sti
jmp
insb
ret
cmp
aam
dec
push
js
adc
repz
testl
and
push
and
add
dec
aam
cmpsl
and
loop
jg
je
loopne
mov
loopne
sbb
xchg
repnz
push
mov
push
cli
rorl
xchg
aas
ret
lea
test
inc
mov
sub
cmp
jle
xor
sub
add
lret
in
pop
loopne
cmp
add
jae
add
push
call
divb
pop
dec
add
mov
add
pop
sub
and
push
push
adc
xchg
and
out
inc
pop
pop
push
mov
roll
addr16
dec
jb
and
cmp
mull
dec
add
sbb
lahf
movb
inc
mov
gs
shr
add
add
add
cmp
adc
mov
shlb
dec
push
add
adcl
ja
ds
inc
cmpsl
clc
jne
or
cld
push
or
filds
ret
or
insb
and
iret
hlt
lahf
add
dec
test
in
je
orb
cmp
dec
pop
mov
stos
loope
popa
cmp
or
vpmadcsswd
loope
aaa
pop
xchg
push
in
inc
mov
dec
in
lea
mov
jge
mov
ret
pop
jno
out
lret
pusha
lcall
mov
jbe
push
ljmp
xchg
cld
pop
pop
sbbb
add
sbb
loopne
sbb
jl
pop
aam
fmul
orb
hlt
je
add
movsl
and
fcoms
in
mov
push
in
mov
pop
and
sub
les
dec
fcoml
add
push
outsb
stos
xor
push
lret
fcomp
mov
add
add
push
add
or
bnd
adc
pop
out
loope
in
or
add
testb
jb
add
leave
aas
push
add
adc
inc
adc
xchg
xchg
cmp
imul
std
jle
leave
nop
add
repz
je
add
ss
xchg
xchg
test
add
popl
sub
dec
inc
inc
push
roll
mov
xchg
mov
cld
aas
add
lahf
enter
dec
lcall
mov
pusha
jmp
inc
sub
add
std
mov
and
cmpsb
inc
adc
push
sarl
lock
jmp
cld
paddusb
inc
jmp
rorb
test
ss
in
sub
nop
xorl
push
mov
inc
fadds
cmp
lea
fucomi
push
lcall
mov
jnp
jecxz
cmp
xchg
daa
push
pop
jno
iret
add
sbb
dec
add
rcrl
inc
bound
inc
into
pop
data16
xchg
and
inc
pop
dec
and
add
or
stc
mov
jo
sbb
sub
aaa
sbb
sbb
cmp
pop
es
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
loope
call
adc
xchg
sub
addl
add
fisubrs
xorb
push
mov
or
add
fiadds
ja
sbb
xor
inc
rorl
push
adc
push
lods
mov
sub
sti
cmp
mov
ret
cltd
mov
pop
add
popa
xor
add
xchg
inc
sub
sbb
das
or
nop
es
jecxz
aas
add
mov
and
int
and
roll
add
daa
add
rcrb
push
pop
les
mov
add
xchg
add
pop
add
inc
frstor
add
jge
add
push
clc
in
jg
add
adcl
add
inc
xor
push
add
inc
mov
add
pop
cld
or
jp
pop
push
leave
and
sarl
mov
in
cld
enter
add
rcrl
sub
add
pop
mov
rcrl
cmp
scas
dec
std
sti
cmpsb
add
and
inc
sbb
mov
movsb
or
xchg
inc
xchg
pushl
and
das
icebp
fwait
mov
shll
push
mov
add
popa
sub
addb
mov
jge
pusha
leave
inc
aam
mov
add
and
cmpsl
shll
insb
jno
add
jmp
ss
push
add
mov
idivl
inc
push
dec
outsl
jne
mov
sti
pop
aad
and
jle
xor
test
dec
push
xchg
jne
and
and
and
ljmp
jae
mov
add
dec
hlt
lock
lret
lds
rcrl
xchg
adc
loope
xor
pop
sbb
xlat
das
jb
jecxz
cmp
ror
in
jmp
or
clc
ret
xchg
out
mov
adc
sub
inc
push
ret
out
mov
sub
dec
lods
dec
shr
mov
mov
ds
fisttpll
push
mov
out
sub
in
movsl
shlb
push
pusha
adc
adc
lahf
cmp
jo
add
sub
mov
sbb
push
fmuls
xchg
jne
add
cli
inc
xorb
push
sbb
jne
nop
or
jno
pop
add
js
loopne
je
push
addb
cld
adc
cmpl
adc
add
idivb
cld
imul
and
mov
je
sbb
sbbl
add
pop
je
adc
bound
jmp
idivb
js
mov
and
inc
ds
xchg
je
pop
push
and
aad
jg
mov
push
pop
ja
add
jae
lea
fldl
shll
iret
test
cmp
in
push
dec
or
insb
add
adc
add
inc
stos
push
dec
seto
mov
ja
nop
lods
mov
push
add
xor
dec
iret
lret
shlb
mov
sbb
mov
mov
daa
sbb
mov
xor
inc
jne
sbb
cmpb
fwait
rcrl
shl
add
and
in
enter
les
dec
inc
inc
aad
jmp
push
add
loope
cs
ja
push
xor
ret
mov
push
pop
add
pop
adc
add
push
scas
xor
punpckhbw
pop
mov
pop
xchg
push
mov
test
mov
add
or
pop
lock
add
mov
sub
stc
pop
pop
repz
pop
je
in
jb
sub
enter
cld
xlat
sbb
cwtl
dec
cs
js
pop
add
mov
incb
mov
or
jecxz
sub
dec
pop
mov
aas
jae
add
cmp
xchg
scas
jne
sbb
add
add
adc
add
fcom
mov
cmp
sbb
out
add
and
repnz
pop
sbb
xorb
mov
dec
stos
cmp
adc
loop
sub
mov
mov
mov
mov
inc
out
mov
or
ds
cmp
das
daa
jle
idivl
hlt
cmp
xor
and
add
call
int
cmp
jae
lcall
mov
mov
adc
or
sbb
sub
bound
pop
sub
clc
add
out
dec
xchg
jmp
mov
xchg
mov
pusha
jl
push
scas
inc
xchg
loopne
lods
add
xchg
push
movb
add
jmp
or
and
push
adc
sub
jns
push
sub
mov
jae
movb
lea
lods
mov
add
mov
pop
and
mov
sub
mov
pop
sti
shlb
push
shll
imul
jne
cmp
push
sub
mov
jle
std
add
call
push
add
loopne
faddl
pop
fcom
push
repz
xor
sti
scas
mov
or
gs
pop
andb
pop
js
push
mov
loopne
sub
add
cmc
mov
pusha
xchg
mov
inc
push
addl
inc
sbb
mov
jg
lsl
push
movsb
loopne
clc
leave
add
push
lock
mov
add
jbe
insl
inc
mov
add
popf
subb
pop
xchg
inc
dec
ljmp
add
ja
sbb
mov
add
sbb
addb
lds
jbe
mov
lret
movsb
fsts
or
xchg
movl
mov
cmpb
mov
int
lea
das
arpl
adc
mov
addb
mov
ljmp
je
mov
shrb
jns
addr16
sbb
loop
repz
add
imul
add
fmuls
pop
adc
icebp
aam
in
jge
pop
cmp
repnz
je
int3
bound
xchg
or
or
add
mov
pop
add
ret
rolb
stos
or
cmp
shll
mov
test
add
adc
sti
pusha
sub
loope
cs
adc
xchg
aas
add
inc
jo
mov
add
ja
xchg
nop
pop
subl
dec
shlb
adc
hlt
add
and
mov
add
and
jb
fcomps
mov
push
add
jb
add
and
dec
xor
adc
je
add
xchg
add
hlt
loopne
incl
pop
and
addr16
adc
add
mov
push
mov
and
or
and
loopne
or
loop
in
sub
je
push
negb
push
sbb
shll
dec
in
sub
add
nop
movsb
mov
cmpb
daa
ja
xor
inc
jno
mov
sbb
add
pop
add
mov
add
fcom
pop
or
inc
test
dec
int
mov
lret
jg
out
add
sbb
cmp
add
ss
xor
movsl
adc
mov
push
popf
in
jmp
cltd
or
mov
jne
add
cmpsl
lret
adc
mov
xlat
ljmp
mov
jbe,pt
or
add
out
add
out
mov
fildll
aam
mov
add
lock
mov
add
pop
clc
push
push
loop
add
xor
cmpsb
bswap
sub
mov
mov
inc
push
les
xor
repnz
rcrb
add
clc
jne
push
mov
pushf
inc
clc
int3
pop
mov
inc
insb
and
cmp
in
pop
adc
aad
cmp
lock
fstpt
out
sbb
push
in
xor
adc
fs
push
cmp
popa
cmp
inc
clc
mov
cli
or
mov
sub
and
xchg
jg
shrb
dec
cmp
jb
and
pop
repz
inc
inc
pop
sbb
add
sub
mov
mov
aaa
call
bound
mov
dec
add
inc
in
or
cmc
push
test
fcoml
sbb
dec
sbb
inc
gs
je
popa
icebp
cld
fs
jp
jae
and
imul
shll
add
stc
sbb
insl
adc
and
mov
bound
add
loope
fnstsw
lods
add
jge
pushf
add
cs
bound
lret
ds
addl
out
js
mov
cmp
test
sahf
sub
loop
movsl
add
call
add
rorb
je
and
jle
add
out
stc
fs
inc
add
sub
adc
lret
add
aas
jmp
call
add
xchg
cmp
les
stos
sbb
pop
call
out
push
add
adc
dec
push
dec
add
mov
jp
leave
lret
jne
push
cli
ret
add
add
push
pop
clc
repz
into
adcb
movsb
add
imul
or
es
push
lret
cmp
sub
cmp
inc
sub
enter
mov
mov
je
mov
ljmp
pop
mov
push
in
arpl
js
sub
sbb
inc
add
in
call
add
mov
in
outsb
push
mov
sub
in
sti
adc
add
xchg
push
add
in
add
loopne
andl
add
sub
sahf
pop
shl
jge
push
lock
push
mov
ss
cmp
add
shlb
imul
jge
push
cmp
je
add
pop
pop
pop
nop
repnz
xlat
add
wbinvd
in
shrb
pop
dec
ret
cld
lock
push
pop
in
xor
inc
inc
cmp
mov
mov
cld
mov
sbb
xchg
notl
sbb
in
add
add
jo
cmp
adc
push
hlt
fmull
add
loop
arpl
jnp
add
jl
js
add
sbb
add
testb
or
pop
dec
add
xchg
cmp
and
sbb
lock
mov
xchg
lods
sbb
add
xchg
mov
jae
jg
add
les
jmp
push
jge
xor
jle
xor
loopne
outsl
push
jp
pop
das
add
jmp
lret
push
xor
and
push
mov
rcrb
push
mov
mov
fs
sub
cmp
cld
out
add
pop
bound
sti
std
popa
add
mov
clc
arpl
sbb
fldcw
and
testl
dec
jecxz
jns
into
fldl
cmp
lods
fcoms
add
jo
mov
jne
adc
lahf
push
push
iret
pop
sar
dec
in
mov
push
mov
adc
add
mov
dec
add
sub
cmp
and
aad
mov
inc
sub
rorb
insl
out
sub
data16
lcall
xchg
inc
cld
push
setae
and
icebp
or
addr16
push
add
iret
into
sbb
mov
adc
add
adc
popf
dec
pop
mov
add
lods
push
lret
adc
xchg
add
dec
or
adc
xchg
sub
xor
inc
or
and
fnstenv
rcll
jmp
ds
add
in
mov
jne
push
sub
data16
inc
cmp
jmp
test
cmp
stos
clc
jo
xchg
orb
xor
pop
das
je
fcomip
cmp
mov
sbb
push
cmp
pop
inc
xor
add
mov
dec
adc
and
imul
enter
subps
sahf
pop
push
jae
addl
lea
clc
je
mov
adc
add
enter
cs
add
stc
mov
inc
js
pop
xor
xchg
jo
push
mov
xchg
lock
ds
iret
pmulhw
jmp
insb
inc
push
rorb
mov
pop
lods
inc
clc
add
mov
pop
jns
movsl
add
dec
rolb
inc
dec
add
or
or
lock
and
call
pop
mov
add
inc
dec
in
inc
add
push
pusha
add
pop
sbb
jne
movsb
add
mov
sub
and
fadds
jmp
enter
jl
and
push
sbb
incb
jb
xchg
mov
xor
add
mov
dec
shlb
and
gs
outsb
jecxz
test
orb
aas
inc
pop
sets
cmp
mov
sbb
dec
nop
mov
out
rclb
adcb
mov
test
das
push
ds
dec
jb
xchg
cli
jmp
out
add
cld
and
adc
jne
add
mov
nop
cmc
inc
fbstp
pop
pop
xor
ficoms
add
and
jp
mov
stos
lcall
jg
cmc
mov
xchg
jns
pop
ret
jbe
lahf
push
loopne
fdiv
mov
out
orb
test
mov
inc
add
mov
shrb
addl
jge
and
add
dec
test
adc
mov
stos
lcall
pop
push
movl
fistps
call
add
jle
sbb
push
jmp
in
in
test
add
dec
sbb
add
mov
outsl
cmp
adc
and
or
mov
incb
push
xor
add
gs
sbb
and
pop
add
les
add
ja
clc
sti
sub
jecxz
pop
adc
inc
and
dec
sub
insl
and
add
sbb
addl
jns
dec
cmp
xchg
mov
xchg
add
pusha
inc
sub
add
push
subb
stc
sub
pop
gs
add
pop
out
sbb
mov
call
inc
das
pushf
mov
or
and
add
enter
jb
je
inc
mov
add
orb
xor
in
ret
fcoml
mov
pop
testl
push
and
add
push
or
dec
add
aad
and
adc
cmp
test
push
adc
push
sbb
push
push
xor
pop
repnz
aas
inc
xor
push
add
add
add
mov
stos
cmp
lcall
adc
push
add
pusha
and
dec
inc
xchg
cmp
xorl
leave
test
xor
into
push
idiv
pop
mov
add
inc
movsl
addb
adc
cltd
or
dec
adc
arpl
dec
lods
push
les
mov
adc
stos
inc
out
mov
orb
and
add
leave
mov
js
add
test
cmp
and
and
fiaddl
push
cmc
adc
daa
scas
movsl
add
jmp
pop
pop
aas
pop
std
shlb
in
scas
icebp
push
mov
mov
or
add
inc
popa
sub
mov
add
and
out
dec
or
cmp
jg
xlat
adc
loopne
dec
std
add
jle
cwtl
or
xchg
loopne
mov
test
out
dec
addb
fidivrl
lds
imul
sbb
or
jle
faddp
xchg
daa
sub
pop
mov
jp
xchg
in
inc
into
jle
xchg
jl
mov
in
add
fstl
push
pop
dec
adc
sti
xorb
cmp
sub
hlt
das
mov
test
je
cvtps2pd
dec
imul
and
in
jg
sub
pop
or
iret
aas
sbb
cmp
cli
mov
adc
xchg
cmp
sbb
add
xchg
ds
add
cld
add
or
jo
xor
push
push
ds
sbbb
cmp
inc
sti
pop
inc
adc
dec
push
sarb
jbe
gs
test
dec
into
repz
andl
add
ja
push
cmc
out
mov
daa
adc
and
add
dec
mov
enter
add
push
and
fmuls
inc
pop
ja
push
mov
je
add
pop
and
adc
push
sbb
add
or
inc
mov
and
adc
stc
loopne
addb
push
testb
cld
or
test
xchg
sahf
xchg
rcrl
fists
push
pusha
add
call
movsb
push
add
mov
add
nop
repz
and
sbb
xchg
sub
jns
pushf
sub
jo
jae,pn
xchg
add
push
imul
and
cmpsl
je
jmp
cmp
jbe
add
xchg
test
xchg
out
add
inc
js
rolb
mov
clc
les
dec
cmp
dec
out
repz
and
imul
inc
add
in
insb
inc
test
test
push
movsb
sbb
add
and
fsubl
js
int3
pop
or
xchg
addb
mov
add
lcall
add
mov
mov
lcall
clc
ret
push
nop
push
adc
or
or
add
sbb
pop
call
or
mov
faddl
sbb
mov
and
movsb
add
pop
and
lock
andl
das
call
xor
add
cmp
movsb
and
add
sub
mov
add
mov
lods
add
adc
loopne
xor
pop
xor
scas
add
or
and
pusha
hlt
and
or
int3
push
mov
lret
mov
push
enter
loopne
fcoml
dec
sbb
xchg
adc
stc
and
sbb
test
sub
or
and
je
xor
mov
jne
fs
adc
lods
dec
aas
add
lods
pop
arpl
add
test
cmp
cmpsl
or
add
rclb
pop
mov
mov
cmp
jo
pushf
inc
shrl
jle
pop
and
dec
pop
icebp
insb
jbe
subb
fcoml
lods
adc
cld
insl
add
and
fs
push
jne
mov
pop
mov
add
adc
dec
push
inc
sahf
mov
movsb
or
push
sub
and
testl
sbb
mov
push
lea
adc
test
sbb
or
and
andb
out
loopne
add
je
insl
gs
add
outsl
out
addl
cld
ljmp
inc
sbb
sbb
cmpb
inc
mov
pop
adcb
in
or
dec
rol
push
or
xor
aam
adc
stc
rcrl
sbb
repz
fmuls
loop
add
jl
movsb
add
pop
adc
pop
or
pop
es
dec
je
add
mov
xchg
and
pushf
dec
movsb
xchg
xchg
repz
aam
fdivr
in
in
sti
hlt
clc
cld
add
add
adc
sbb
les
pop
xchg
xor
cmp
pop
dec
icebp
push
pop
clc
in
fs
insb
jo
jl
test
dec
cmpb
cmp
inc
and
ds
add
or
rorb
fs
mov
mov
addb
and
mov
in
pop
loop
gs
add
and
adc
add
xchg
sub
inc
dec
dec
dec
add
incl
push
pop
pop
add
in
add
inc
dec
push
dec
adc
addr16
insl
pop
outsb
scas
add
add
add
and
imul
fcoml
mov
cmpsl
add
call
je
push
xor
inc
cwtl
mov
pushl
adc
or
xchg
xor
and
inc
xor
cmp
inc
add
imul
lock
nop
sub
sbb
inc
cmp
and
je
mov
mov
add
sbbl
and
and
pop
add
lea
cmp
add
push
scas
mov
sbb
hlt
add
sbb
js
add
push
xchg
divl
test
mov
or
cmc
add
jecxz
mov
pusha
insb
add
clc
daa
push
and
cwtl
gs
popl
xchg
psubsb
test
cltd
pop
jo
or
jg
add
add
mov
jne
adc
movsb
or
jle
add
xor
loopne
in
jo
inc
cmpsl
or
int3
dec
clc
xchg
or
movsl
pusha
cmp
jecxz
adc
dec
nop
test
mov
shlb
xor
cmp
inc
inc
push
add
and
rcl
mov
ds
cwtl
push
add
add
add
add
pop
pusha
or
push
or
femms
inc
adc
add
cltd
or
and
sarb
and
xor
add
push
fwait
loopne
rolb
xchg
adc
nop
jbe
add
sbb
pushf
sbbb
test
and
adc
xlat
mov
mov
and
daa
jp
sub
and
push
mov
xor
cmp
add
push
aas
add
adc
loopne
xor
mov
ds
xor
push
ss
cltd
add
xor
les
cmp
dec
xchg
add
inc
pop
mov
adc
add
arpl
xor
xor
sbb
jo
fstps
sahf
call
scas
and
mov
adc
pushf
cmp
pop
cltd
jns
insb
ret
shll
loopne
add
les
jne
add
sub
fsubl
andb
loopne
and
mov
sbbb
or
and
pusha
adc
mov
add
aam
test
pop
sbb
or
inc
add
push
dec
cltd
mov
mov
fldenv
inc
xor
gs
or
pushf
mov
sbb
add
sub
inc
notl
lea
sub
flds
pop
adc
mov
mov
xor
xor
test
je
hlt
outsl
pop
inc
cmp
rcll
xchg
jnp
ret
movsb
or
sbb
pushf
adc
add
movsl
lods
dec
pop
sbb
imul
xor
add
movsb
fcomp
test
popa
dec
or
dec
repnz
jns
inc
and
jp
data16
cmp
enter
hlt
jne
mov
add
adc
xchg
pusha
push
lcall
mov
popa
insb
in
adc
xor
add
pop
mov
test
jo
mov
and
lods
xchg
or
pushf
xor
mov
inc
mov
nop
add
push
inc
push
add
jl
mov
push
lods
mov
xchg
nop
xchg
push
jo
xchg
sbb
enter
add
jl
lea
add
or
loope
cwtl
add
and
inc
mov
pushf
sarb
fwait
add
sub
push
xchg
aas
xchg
adc
push
lods
xchg
cli
mov
pop
cltd
xor
or
dec
aam
loop
and
inc
decb
pusha
push
xor
and
lahf
jle
nop
mov
fdivrp
lock
mov
iret
cmp
iret
dec
rcrb
and
std
sarb
mov
sub
xchg
rclb
ss
sub
push
adc
adcb
add
aam
in
hlt
add
xchg
sbb
adc
daa
jle
add
inc
fs
and
test
xor
mov
sbb
sub
cmp
add
mov
cmp
xchg
aam
loop
lock
adc
cmc
pop
add
cwtl
stos
mov
push
lret
decb
or
and
lods
sbbb
xchg
mov
shl
loopne
and
cmp
xchg
jg
add
orb
push
add
sub
or
xor
scas
movsb
in
fs
je
jle
lcall
xor
add
outsb
pop
insb
xor
add
adc
inc
xchg
leave
add
into
outsb
out
push
fs
add
insl
inc
inc
xor
add
jne
in
jnp
add
jmp
adc
xor
dec
lret
pop
push
loopne
fidivrl
mov
sbb
add
jp
xor
in
jne
incb
xor
mov
outsl
arpl
call
sbb
sbb
cmpsb
sub
in
adc
push
push
imul
push
shl
add
inc
jns
xor
add
lock
je
mov
dec
or
add
jo
std
xchg
push
je
imul
popa
mov
jmp
mov
and
push
xchg
add
or
jl
add
jb
jno,pt
into
add
xor
dec
outsl
cli
add
outsb
stc
or
inc
dec
adc
inc
imul
insl
push
push
pop
push
dec
push
adc
mov
fsubl
insl
add
push
xor
add
push
sub
mov
sbb
inc
pushf
inc
xor
jae
sub
rcrl
push
mov
push
outsb
push
inc
cmp
push
inc
cltd
fidivl
shlb
push
outsl
xchg
add
add
cmp
addb
aam
or
pop
push
sbb
rep
lock
shlb
fs
mov
and
sub
xchg
add
imul
jo
and
jp
cmp
xchg
jno
add
jne
jb
lret
dec
xor
inc
mov
jge
add
addr16
dec
incl
sahf
popa
mov
dec
add
mov
or
jnp
sub
jo
movsb
dec
repnz
pop
push
inc
xchg
add
add
sub
cmpsb
cmp
add
aam
mov
and
popa
jne
sub
mov
in
mov
hlt
pushw
sub
outsl
cwtl
mov
sub
lcall
lods
or
mov
mov
aam
movsl
add
test
call
inc
sbb
ficoml
stos
dec
pop
sub
mov
lahf
sub
and
aas
dec
fiadds
adc
in
xchg
inc
xchg
pusha
add
loop
insl
inc
jo
add
push
mov
lds
jp
adc
or
push
inc
or
mov
es
lds
movsl
sbb
add
sub
inc
out
and
mov
in
lods
repnz
xor
imul
dec
sbb
div
push
test
int3
push
insl
repnz
xor
xor
mov
add
cmp
add
mov
add
mov
sub
jbe
or
movsb
cld
add
aas
pop
popa
arpl
repnz
push
add
ja
xchg
and
inc
hlt
out
fwait
and
addb
imul
mov
jne
jle
add
sub
xor
pop
cmovne
cmpsl
mov
filds
add
pop
pop
cmpsl
adc
cmp
add
add
in
and
jo
adcb
pop
or
pop
out
fcom
js
sub
xchg
inc
xor
inc
ret
in
add
movsb
out
shll
add
loopne
test
cmp
and
add
mov
pushf
add
sub
aam
sbb
cmp
adc
xchg
test
ljmp
push
xor
and
mov
sub
mov
cmp
repz
adc
dec
cmp
test
in
repz
xchg
aaa
add
sub
push
add
sub
inc
stos
inc
insb
in
add
and
sbb
popa
mov
gs
or
mov
add
jge
or
cwtl
movsl
mov
or
mov
pop
jle
push
and
js
push
sbb
xchg
outsb
fiadds
into
push
sarb
cmp
aad
pop
movsl
add
hlt
add
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
decb
lods
xchg
add
je
jbe
js
add
jl
jle
nop
mov
cmp
es
pushf
inc
loopne
popa
and
push
leave
push
sarl
add
sbb
cmp
ret
push
aad
fistps
je
add
xchg
cmp
daa
sbb
cmp
pop
sub
js
jp
jl
jle
jle
jle
jle
push
pop
cmp
add
inc
sub
xchg
or
popf
adcl
push
movb
sbb
xor
jg
add
cmp
faddl
sbb
cmp
aaa
add
push
pop
pop
call
xchg
hlt
in
clc
hlt
or
andb
add
sub
jmp
stc
mov
sti
andl
pop
add
or
pushf
xor
popf
add
test
cmp
xchg
mov
out
out
ret
sbb
push
xchg
mov
push
subps
and
xchg
les
lret
push
jle
sbb
xor
popf
pop
sbb
mov
lahf
xchg
pop
out
cmp
add
or
daa
sbb
addr16
lock
mov
xchg
out
leave
mov
xchg
add
fnstcw
jb
je
jbe
add
dec
xorl
mov
leave
rcl
push
add
cmp
push
test
iret
lock
hlt
add
loope
icebp
imul
dec
cmp
scas
add
loop
or
sub
mov
ret
rorl
aas
cmp
enter
int3
sbb
pop
pop
out
xchg
xor
push
enter
iret
je
xor
inc
fmuls
add
jp
jl
jle
repnz
xor
popf
dec
sbb
push
pop
lahf
fs
nop
sub
js
push
xchg
hlt
mov
mov
sbb
inc
cmp
cmpsl
imul
mov
jmp
cld
call
ss
pop
sarl
sti
cmp
addb
insb
adc
xchg
dec
xchg
cmpsl
add
xor
in
mov
mov
loopne
in
std
call
sub
jbe
sbb
cmp
popf
add
sbb
loop
add
inc
lds
test
mov
mov
add
add
push
leave
loopne
sar
and
cmp
add
push
icebp
cwtl
lret
push
push
adc
xor
mov
rcrb
jecxz
repnz
mov
pusha
sbb
repz
fcompl
in
in
pop
testl
call
sub
sbb
aas
push
dec
pop
mov
orb
dec
xchg
lcall
iret
shl
add
je
cmp
js
jp
jl
jle
test
ja
jns
jnp
jge
jg
add
sbb
aaa
sbb
sahf
dec
push
test
xchg
xchg
lahf
scas
pop
mov
mov
lahf
lahf
ficomps
testb
daa
pop
push
inc
push
addr16
ss
push
out
inc
iret
dec
inc
push
bndldx
outsb
hlt
jbe
jle
lret
aas
cs
outsb
sahf
scas
cmpsb
out
scas
das
mov
mov
iret
iret
fmulp
out
out
iret
test
push
push
cmp
dec
push
add
cs
add
cmp
adc
in
hlt
add
jle
cs
hlt
enter
sub
call
fcoml
cld
inc
dec
dec
mov
pcmpgtb
je
jl
and
cld
xchg
cld
pushf
cld
movsb
cld
lods
cld
mov
mov
int3
aas
aam
fdivrl
in
in
ds
pusha
add
cmp
cmp
sbb
and
sub
xor
aas
in
call
pop
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
mov
aam
fsubl
stos
xchg
cld
xchg
mov
add
sbb
and
sub
xchg
int3
push
add
jl
test
inc
mov
mov
loopne
hlt
pop
cli
cmpb
or
js
dec
mov
cmp
cmp
pop
cmp
insb
aas
jo
je
js
sub
xchg
jl
jmp
stc
enter
rcrb
pop
loopne
push
adc
ds
and
cmpsl
add
les
pop
out
je
insb
in
je
js
jl
cmp
cld
mov
mov
nop
cld
xchg
cld
movsb
cld
cld
int3
cld
sar
aam
in
xorl
call
add
push
sub
xor
xor
loope
xchg
pop
inc
dec
xor
dec
test
sub
aas
mov
adc
dec
sub
and
lock
xor
div
cltd
mov
pusha
aam
and
push
pause
push
xor
mov
je
jbe
add
call
mov
ret
clc
sar
jo
add
add
or
cmp
cmp
lahf
dec
xchg
add
insb
pop
cmpsl
outsb
pusha
out
jo
cwtl
in
pushf
lock
lods
stc
mov
sbb
jle
add
addb
mov
and
inc
add
dec
dec
or
add
pusha
xchg
subb
leave
pushf
shll
mov
cmp
rolb
and
loopne
pop
add
lods
xlat
add
cs
lahf
sbb
xchg
and
dec
and
pop
iret
pusha
leave
shrl
insb
loope
jno
lock
pop
jl
xor
dec
and
es
jle
add
out
je
xor
cmp
adc
and
sub
std
lahf
add
mov
in
js
jl
sbb
test
mov
adc
iret
enter
rol
aam
fmuls
loopne
jb
dec
call
add
sub
hlt
cmp
mov
fidivrl
js
jp
jl
mov
push
mov
leave
fsubs
pop
in
dec
pop
mov
shlb
adc
xor
cmp
jo
or
clc
add
push
rorb
dec
lcall
stc
clc
int
add
push
pop
jno
cld
cmp
inc
inc
push
outsb
mov
jp
jle
popf
xchg
and
sub
push
pusha
into
cmpsb
cmp
add
or
xorl
test
add
es
nop
dec
shrl
or
lahf
add
push
sbb
addl
xor
ss
daa
dec
add
rcrl
stos
shlb
out
pop
and
cmp
mov
cmpsl
add
repnz
xor
out
xor
faddl
loope
cmp
pushf
shll
scas
ljmp
pop
add
sub
imul
js
iret
mov
jno
popa
jg
movsl
fsubrs
xor
pop
add
ljmp
ret
int
xchg
es
push
or
test
rclb
das
pop
add
js
xchg
cwtl
scas
adc
mov
or
or
add
fsub
mov
mov
sbb
sub
mov
in
dec
sti
orl
es
add
insl
dec
movb
sub
sub
mov
ret
iret
popf
aad
ficompl
jmp
lock
add
and
sub
push
push
clc
push
add
into
jns
jb
je
add
inc
movb
xor
and
int3
and
or
cmp
sbb
xor
cmp
imul
aas
xchg
pop
or
out
loope
cmp
leave
sub
popa
pop
inc
jmp
mov
and
sub
mul
adc
cmp
cmp
andb
sbb
xor
add
jnp
hlt
cmp
mov
mov
fmuls
add
movsl
cmpsb
call
add
jecxz
xchg
jp
add
mov
mov
sub
cmp
movsl
mov
jmp
ret
les
add
xchg
jo
lret
add
adc
mov
shlb
fcompl
mov
mov
stc
shlb
aas
add
cs
or
cmp
ficoms
fstps
jae
sub
add
loop,pn
inc
in
int3
dec
in
or
out
test
push
mov
nop
ljmp
in
call
shl
stc
jle
add
in
popf
cs
jne
stos
add
cltd
clc
and
and
sub
and
stc
cmp
sahf
add
pop
pop
xchg
pusha
mov
sub
add
and
adc
push
dec
jo
or
jp
dec
pop
or
cli
mov
mov
xchg
xor
movb
fidivl
or
nop
pusha
mov
ud2
xor
xor
add
ljmp
notb
pop
cmpsl
test
inc
jb
xchg
add
lds
in
push
shlb
dec
push
add
add
dec
out
dec
pop
mov
jae
test
fwait
ror
adc
int3
mov
shl
sbb
daa
or
mov
cmp
add
cmp
daa
add
inc
ljmp
push
jb,pt
je
push
aaa
add
jo
pop
add
xor
adc
adc
mov
jbe
push
sub
add
ss
mov
fcomp
ljmp
xor
in
pusha
sub
pushf
rcrb
lahf
and
les
push
lock
addl
and
sbb
addb
rolb
jl
loopne
dec
sbb
out
dec
iret
icebp
or
add
push
inc
mov
leave
loopne
sbb
orb
sub
jecxz
push
pop
xor
dec
das
inc
dec
add
scas
xchg
mov
add
mov
in
loop
lock
hlt
and
xor
cmp
cmpb
cmp
cmp
xor
dec
dec
loope
xchg
out
add
xlat
icebp
ljmp
jge
add
or
lea
xchg
aaa
lahf
dec
mov
lock
add
inc
sbb
mov
jo
jb
int3
inc
jbe
cwtl
js
hlt
pop
cmpb
xchg
cmpb
push
cmp
aam
jle
sbb
popa
fs
fcos
jecxz
rcr
xchg
and
or
xor
call
sbb
sub
clc
pop
mov
dec
jae
cs
loop
mov
lret
aad
out
cli
sti
xorl
dec
push
or
fs
and
sbb
leave
mov
sub
add
and
jb
mov
jbe
dec
add
rdmsr
sbb
popf
dec
sub
pop
enter
fs
js
jle
jne
rorb
jb
je
jbe
js
roll
call
xchg
mov
cmp
pop
adc
out
in
cld
roll
xchg
sub
xor
add
sarb
stc
inc
push
push
cs
adc
pop
nop
lock
hlt
pushf
xchg
push
pop
movsb
lahf
test
lods
test
mov
enter
leave
lock
sbb
add
cmp
test
roll
add
subb
imul
into
icebp
sarb
jle
mov
addb
inc
xor
data16
push
sti
fidivs
jb
sbb
jl
test
mov
jp
sti
jmp
js
add
jo
dec
sub
stos
inc
mov
cwtl
jecxz
out
sub
popa
pop
mov
pop
cmp
pop
pop
pop
jle
fldl
stos
add
lret
loop
add
xchg
push
addr16
xchg
movsl
mov
or
out
loopne
xor
dec
add
push
dec
arpl
shll
hlt
pop
xor
push
dec
xlat
sbbl
push
xchg
jae
jp
add
out
sti
add
or
in
sbb
in
sub
stos
pop
add
insb
sbb
repz
subb
jge
ds
mov
in
push
shlb
add
je
jbe
pusha
je
and
iret
sbb
rolb
daa
negb
out
add
jle
clc
mov
repnz
and
mov
adc
fldl
dec
aam
cmp
push
cmp
lahf
arpl
psubsw
jg
xchg
cmpsl
xchg
mov
int3
add
popa
mov
stc
xlat
xchg
frstor
sarb
add
cmpsb
loop
push
pop
fmull
add
subb
push
clc
push
or
cmp
outsb
les
in
add
xchg
or
mov
iret
in
add
ss
add
cmp
push
cmp
loopne
jle
add
pushf
pand
orb
pop
inc
dec
adc
loope
cmp
push
push
sbb
mov
adc
add
dec
in
pop
xchg
popa
push
fsubrs
jb
scas
into
push
test
cmp
ds
loopne
add
mov
or
ljmp
jmp
pop
nop
lods
in
call
add
mov
and
sbb
xor
popf
add
pop
mov
das
rclb
cmp
pop
inc
or
add
into
or
cld
xchg
xor
xor
cmp
pop
inc
or
add
loope
enter
jbe
leave
jp
bound
roll
aas
je
cmp
mov
add
bound
in
jge
pop
cmp
mov
ret
xor
add
lahf
in
add
sbb
inc
daa
lods
cli
jno
in
and
sbb
out
mov
cmp
mov
mov
xor
pushf
jnp
xchg
add
fcomps
fiadds
cmc
xchg
or
mov
cmp
ds
aas
out
add
add
and
add
lock
cmp
push
xchg
cwtl
clc
adc
aaa
add
fmull
aas
and
add
js
cld
test
cmp
daa
inc
loope
fs
inc
push
or
sbb
add
push
jl
cmp
and
or
dec
sub
loopne
pop
repnz
dec
roll
mov
ds
dec
xlat
add
push
testb
sub
mov
xor
xchg
xchg
fadd
pusha
mov
dec
xchg
fadds
add
sahf
pop
add
fiaddl
lcall
clc
pusha
nop
pop
cld
jb
pop
mov
rep
nop
and
into
jbe
adc
addb
and
mov
lock
cwtl
mov
loopne
dec
and
add
mov
xchg
push
cmp
dec
and
xor
mov
into
pushf
sahf
pop
add
adc
sub
cli
inc
add
lock
outsb
clc
jnp
add
pushf
jl
push
pop
mov
add
out
cli
jo
push
adc
add
setbe
cld
add
mov
orl
or
sbb
rorb
pop
xor
add
sarb
cld
aas
cltd
in
add
out
enter
aad
mov
add
push
js,pt
dec
push
add
in
add
xchg
testb
in
cmc
lock
xor
iret
insl
sub
or
pop
stos
cmp
inc
jg
shrb
mov
mov
jl
dec
fldcw
xchg
leave
cmpsb
mov
mov
adc
js
sub
add
push
sahf
loopne
and
adc
ljmp
je
add
repnz
jo
mov
and
leave
unpcklps
and
inc
loope
jmp
sub
insb
pop
mov
mov
add
popf
pop
mov
out
in
add
mov
orb
mov
sarb
test
fcomps
je
jbe
pop
lret
or
or
push
mov
sti
cmp
cmp
daa
push
xchg
push
data16
ret
lock
mov
loopnew
jnp
dec
pop
sbb
lahf
out
repz
std
mov
add
ror
mov
insb
add
aas
push
xor
scas
hlt
orb
enter
mov
xor
and
mov
inc
mov
scas
push
dec
mov
mov
xor
nop
pop
add
dec
cmpb
dec
add
pop
or
lods
adc
daa
sbbb
cli
add
pop
cmp
aas
insl
leave
js
or
lea
adc
aas
repnz
pop
in
cmp
cmp
sub
inc
dec
add
add
xorl
cmp
ds
ja
stos
xchg
jo
jle
stos
add
ret
xor
repnz
fsubs
scas
add
mov
inc
shlb
add
pop
push
fs
mov
inc
add
jmp
jmp
mov
shll
addl
mov
xor
clc
pop
push
pavgb
xchg
leave
stos
punpcklwd
mov
hlt
cld
or
cmp
adc
sub
dec
and
nop
lahf
insb
xchg
je
ret
add
adc
loop
in
cmp
jo
add
ficoml
pusha
insb
add
adc
or
repz
add
repnz
shlb
inc
je
rorb
data16
jle
andb
stc
cmpsb
inc
mov
push
fld
add
push
ljmp
shrb
add
push
popa
cli
test
xchg
rolb
in
xchg
add
mov
and
inc
add
push
and
outsl
xchg
les
popf
ret
inc
fcmove
subb
mov
mov
shll
stc
popf
fstpt
cmp
jb,pt
je
add
mov
jo
pop
add
jl
dec
test
add
fmull
nop
add
cmovle
mov
loopne
ret
push
jbe
xrelease
sbbb
mov
or
jb
push
dec
and
loop
add
data16
insl
in
pop
clc
cltd
shlb
pusha
into
xchg
inc
push
add
adc
pop
sub
mov
jecxz
repnz
fcomps
outsb
dec
cli
jo
pop
nop
jl
lock
xchg
add
divps
int3
faddp
jb
sub
cli
scas
push
pop
jbe
lea
daa
roll
stc
jmp
add
cld
in
pop
jle
test
add
cld
icebp
xchg
jp
add
ss
xor
andb
arpl
dec
jl
testb
lret
test
and
xchg
cmp
cmp
push
add
shl
loop
icebp
add
pop
ret
daa
filds
clc
loop
adc
pop
ret
fs
shrl
mov
nop
stc
xlat
and
in
lahf
test
pop
cmp
cmpsb
clc
stos
xchg
lcall
cmp
ja
pop
push
ds
in
rolb
xor
or
or
loopne
adc
jbe
in
test
cwtl
aas
pushl
imul
adc
add
daa
jl
aam
insb
adc
add
clc
xchg
lahf
bound
or
dec
cmp
subb
mov
out
inc
push
add
push
clc
sbb
std
add
sub
dec
cltd
xchg
pop
cmp
addl
push
lods
jnp
add
insb
shrb
fidivs
fs
add
dec
sub
js
push
lock
ret
bound
mov
cmp
push
push
push
jle
inc
icebp
pop
or
and
scas
arpl
movsb
adc
lods
cmp
cmp
add
mov
subb
pop
fcomip
jecxz
and
stc
repz
sar
insb
add
or
iret
aaa
dec
sahf
push
push
subb
pop
rorb
adcl
enter
jmp
cli
testl
icebp
les
sbb
push
cmp
push
cmp
arpl
xchg
imul
subb
mov
push
xor
idivb
jbe
daa
loopne
add
fdivrl
jb
pop
sbb
test
xor
mov
cmp
aaa
add
add
or
enter
add
stc
popf
push
add
movsl
repnz
add
in
lock
test
clc
mov
sahf
rorl
mov
xchg
dec
in
inc
jl
cmp
add
ret
jl
adc
adc
orb
fcomps
jle
pop
jmp
and
dec
cmp
cmp
sahf
sub
jo
mov
insb
add
add
push
test
rorb
test
ds
mov
mov
mov
ret
or
cmp
negl
xor
sbb
sub
dec
jno
sub
mov
mov
fmuls
dec
cmp
loope
ljmp
sar
fiaddl
xor
dec
lahf
je
add
ret
or
xchg
sbb
in
mov
scas
cld
add
push
mov
mov
mov
dec
repz
add
inc
andl
and
pop
xor
jnp
ja
add
xor
pusha
sub
fisubrs
clts
rclb
pop
add
je
dec
cmp
testb
clc
push
sub
cli
sti
push
movsb
ss
inc
push
cmp
jo
faddl
je
dec
aad
int3
loopne
sbb
push
sub
lock
loop
rorb
xor
sahf
mov
notl
xor
ret
imul
or
test
test
dec
jle
into
and
cs
scas
push
mov
inc
add
inc
imul
rcl
test
dec
add
xor
mov
jmp
out
jae
jle
fiaddl
stos
ret
mov
xchg
or
loope
pop
loopne
jp
pop
xchg
leave
sahf
repnz
pop
mov
aas
or
add
cmp
das
add
jo
aas
sub
cmp
dec
scas
stos
add
pop
add
cmp
cmp
jbe
xchg
fcompl
add
dec
inc
or
lock
push
xlat
add
xchg
test
mov
cmc
cld
sbb
ds
push
cmp
adc
adcb
lock
pop
add
adc
fsubrs
inc
cmp
jp
jl
dec
fmull
dec
add
mov
shlb
dec
sbb
ljmp
cmp
xchg
fldl
dec
in
lock
pushf
sahf
add
insb
adc
add
lcall
add
movl
dec
int3
adc
enter
jge
mov
leave
mov
jmp
mov
push
cmp
sbb
aas
adc
sub
incb
lahf
mov
roll
es
sarl
sub
popa
jo
aas
or
cwtl
cmpb
rcrl
lret
xor
mov
xchg
jbe
scas
add
add
add
dec
leave
cmpb
add
test
sbb
mulb
mov
outsb
push
or
ficompl
pushf
mov
movsl
xchg
add
inc
popf
dec
sbb
push
xorl
jb
je
jbe
add
pop
cmp
es
call
icebp
mov
lret
add
add
mov
ret
push
jle
add
pcmpgtd
mov
ss
fs
fldpi
add
int3
or
out
inc
add
dec
adc
sub
cld
call
sub
mov
dec
roll
cli
xor
fldl
xor
xor
jbe
or
sbb
stos
inc
out
add
leave
pop
and
mov
or
mov
shrb
jo
and
cwtl
in
xchg
xor
jb
sbb
les
clc
and
or
pushw
add
fadds
lock
sbb
cmp
loop
shrb
mov
push
es
and
xor
xor
call
xchg
sub
bound
popf
movsb
sbb
cmp
dec
cli
enter
sbb
aas
jno
jns
mov
pusha
and
cld
dec
fstpl
add
rol
sbb
test
add
and
hlt
add
push
cmp
je
dec
jo
add
repz
push
shl
jmp
cmp
dec
repnz
cmp
fdivs
dec
retw
add
mov
xchg
fsubrl
pushf
daa
sbbl
dec
pop
pop
mov
test
or
xchg
and
popf
mov
jo
jl
jle
mov
mov
inc
pop
xor
ja
add
loope
jmp
add
in
cmp
xchg
ds
pop
xorl
icebp
add
pop
shr
test
js
daa
rolb
mov
mov
into
mov
pop
or
mov
mov
orl
popa
mov
mov
mov
xchg
xchg
aad
loop
mov
pop
or
xchg
daa
push
push
pop
mov
xchg
aas
xor
jo
mov
add
imul
movsl
add
lock
insb
test
mov
aam
enter
rclb
add
or
aas
daa
mov
mov
pop
dec
je
add
jl
shlb
lock
add
jl
add
push
stc
std
mov
popa
or
add
push
loopne
in
sub
sub
push
aas
xor
inc
pop
mov
and
and
popa
xchg
gs
add
loopne
lcall
in
pop
fimuls
testl
pop
push
jbe
xorl
add
lods
aam
adc
mov
push
jbe
pop
enter
lock
lret
xchg
add
in
aam
ret
es
dec
and
notb
hlt
xchg
loop
sub
fs
dec
fidivs
loopne
xchg
mov
add
sbb
add
loopne
int3
cld
sarb
lret
mov
lock
or
loopne
sub
dec
adc
adc
rcrl
jecxz
repnz
xchg
pop
sub
sar
jns
jno
pop
stc
pop
cli
inc
dec
in
add
mov
call
adc
loopne
leave
pusha
fmuls
lahf
mov
enter
leave
add
push
dec
cmp
shr
stc
or
js
out
mov
xchg
jp
pop
push
ret
cmc
shl
loop
jbe
sub
fcompl
lret
sbb
stos
pop
sub
or
cmp
jl
xchg
add
stc
je
das
and
add
les
pop
fs
or
sbb
rolb
or
cld
push
jo
mov
test
sub
outsl
or
mov
sbb
cmp
mov
add
setp
insb
jnp
lock
jns
arpl
clc
xor
ds
fs
jmp
or
js
test
cmpb
enter
hlt
fs
cli
add
icebp
rcr
pop
xor
or
jl
add
dec
cwtl
and
hlt
add
test
stos
mov
mov
add
lahf
notb
xchg
test
and
or
add
je
test
das
cmpxchg
dec
xchg
ficomps
push
ror
aam
push
jle
nop
loopne
in
or
hlt
jbe
orb
add
or
dec
dec
jae
lock
sbb
hlt
pop
mov
add
xchg
sub
scas
mov
fadds
cmp
loopne
inc
mov
pop
clc
jne
in
mov
pusha
add
mov
test
add
add
adc
addb
loopne
dec
ficomps
mov
fstpl
sub
xor
xor
orl
test
add
loopne
push
call
mov
sbb
in
adc
inc
call
inc
cli
and
jge
mov
dec
push
push
pop
push
push
inc
fildll
inc
es
cmp
or
push
call
enter
loope
inc
sbb
movsb
loop
and
mov
lea
push
test
out
pop
rol
add
add
or
push
adc
adc
inc
int3
and
push
and
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
or
popf
add
lcall
jo
sub
test
jnp
push
decl
aaa
movb
ret
cmpsl
xlat
iret
mov
add
mov
aas
pop
xor
or
push
add
sbb
cli
jmp
add
jmp
sub
add
add
repz
cli
loopne
pop
pop
pop
pop
pop
bound
dec
adc
rorl
add
movsl
loope
add
movsb
pop
push
mov
addb
mov
jp
push
rol
ljmp
sub
loope
push
dec
xchg
rcrb
shr
inc
mov
add
dec
pushl
mov
or
add
pop
roll
or
sti
add
pop
add
cmp
sub
adcl
jns
add
aam
sbb
cmp
add
mov
or
adc
loop
pusha
or
rolb
push
add
mov
add
jne
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
shl
add
aas
jnp
pop
and
add
pop
mov
fisubs
push
pop
push
and
pop
orl
add
xor
xchg
call
adc
shl
and
add
cmp
add
adc
add
or
mov
dec
cmc
sub
ret
add
mov
push
add
fiadds
and
in
or
xor
add
cmp
add
adc
xor
inc
loope
xor
leave
add
inc
sub
xchg
cmp
pop
cwtl
je
sub
inc
out
lahf
xchg
adc
into
ret
sbb
hlt
aam
stos
add
dec
lods
outsb
sbb
push
mov
fwait
in
cwtl
lds
enter
adc
mov
out
xor
pop
pop
cmp
mov
pusha
out
cmp
loop
jb
xchg
add
dec
mov
add
cmp
int
and
enter
jns
icebp
mov
pop
loopne
stos
ljmp
push
inc
shrb
add
mov
sub
sarl
sbb
pop
add
xor
add
xchg
fists
jns
add
aad
push
sub
add
int
cmpb
mov
xchg
mov
mov
and
jmp
jbe
aad
inc
push
mov
daa
add
mov
sub
outsb
add
xor
std
add
mov
or
les
mov
and
inc
pop
fstpl
fiadds
sbb
aas
cmp
mov
add
shrb
pop
ret
and
iret
inc
mov
sub
mov
or
pop
in
cld
mov
lock
fwait
xlat
inc
sbb
stos
pusha
add
add
je
popa
int3
push
lock
dec
cmpl
mov
xor
pop
aad
add
mov
add
sbb
cmc
xchg
pusha
das
mov
push
push
cs
imul
cmovle
cli
pusha
test
mov
mov
xchg
fildl
or
lcall
mov
ljmp
add
fucomip
mov
jbe
pop
xor
cltd
push
cmp
sbb
sub
fs
push
mov
lock
hlt
add
scas
sbb
sub
add
and
gs
jae
inc
inc
xlat
push
sbb
push
in
imul
aaa
popf
jnp
mov
add
inc
push
jmp
or
xor
ret
sub
scas
mov
adc
mov
fnstenv
call
dec
in
pushf
rolb
pop
aam
inc
addr16
fs
dec
or
rcr
outsb
ret
mov
mov
stos
add
rorb
add
rcrb
and
enter
insl
test
cmp
push
mov
loopne
in
add
lods
lds
and
push
add
adc
mov
in
sbb
cmpsl
jbe
jmp
adc
into
rolb
test
aam
add
addb
jbe
push
stos
insb
pop
dec
aam
jl
ja
or
jle
cmpsl
pop
xchg
daa
fdivrl
add
loop
test
add
insl
ret
push
lods
js
repz
testl
mov
fwait
test
sub
fs
add
loopne
add
in
mov
push
xor
xor
jge
cld
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
dec
shll
call
pop
and
leave
loopne
mov
sub
cmc
rep
pop
jmp
dec
shl
mov
xor
sbb
push
add
inc
and
adc
add
test
imulb
xor
leave
shr
je
adc
add
pop
pop
mov
xchg
ret
jns
pop
mov
jl
cmp
push
cmp
orps
je
popa
repz
adc
mov
gs
outsl
lcall
js
icebp
jp
jae
push
inc
jne
mov
popa
addr16
decl
lock
emms
pusha
jo
imul
dec
lock
inc
push
outsb
and
sahf
jnp
cwtl
in
gs
jo
outsl
jne
pop
aaa
inc
jns
mov
fisubs
pop
shrl
bound
dec
xchg
mov
cmp
sti
imul
imull
arpl
int3
and
bound
fidivl
cmpsl
push
outsl
fs
mov
pop
and
rol
xor
or
sub
std
xor
inc
idiv
aad
lcall
mov
cmpsb
jge
arpl
dec
outsl
fildll
mov
addr16
movsb
dec
xchg
filds
ljmp
int
add
sbb
and
lea
xchg
data16
shll
out
and
pop
aas
mov
cmp
dec
jle
sbb
ds
rorb
add
xlat
mov
add
aad
aam
jne
push
std
imul
sti
loope,pn
xchg
into
mov
mov
pop
xor
in
fiadds
add
dec
mov
leave
ds
add
cli
scas
add
xchg
je
pop
mov
stos
loop
lahf
dec
addb
mov
out
xchg
mov
xchg
pop
hlt
adcb
fdivrs
das
mov
lds
aam
push
xchg
cmp
ss
stc
dec
cmp
fadds
nop
shrl
subl
adc
lods
addb
jae
jne
addr16
dec
je
aaa
cmp
pop
fdivrl
jl
cmp
or
pushf
aad
or
pop
repz
ljmp
addl
popf
adc
sub
and
mov
das
push
movsl
aad
sbb
and
jbe,pt
and
rol
lret
mov
and
or
mov
jge
aad
mov
adc
jle
mov
fadds
push
xchg
mov
jmp
dec
dec
nop
orb
cltd
sbb
mov
adc
dec
mov
pushf
pop
imul
sub
mov
mov
inc
xor
push
pushf
mov
pushf
daa
add
xchg
aaa
or
xchg
pushf
jne
push
xor
cmpsb
pop
and
mulb
aam
lcall
lret
push
push
leave
mov
xchg
jmp
fidivrs
addr16
aaa
shrl
addb
push
xorb
ljmp
sub
jno
testl
into
inc
jo
cwtl
out
or
arpl
dec
jnp
add
loopne
push
int3
add
mov
scas
mov
les
mov
in
xchg
mov
aaa
inc
cmp
popf
push
xor
dec
imul
dec
dec
fcmovbe
jge
cmp
andb
inc
inc
andl
inc
jmp
and
xor
or
fwait
push
adc
xchg
mov
stos
cmpsb
mov
xor
fmul
addr16
in
bound
mov
sub
test
push
push
mov
add
or
inc
push
dec
out
int3
sub
js
and
mov
jo
mov
aad
and
cmp
inc
add
fwait
pop
and
aas
in
sarl
sub
test
add
xchg
pop
dec
add
lret
inc
pop
jno
push
in
or
test
outsl
scas
in
std
cwtl
push
movsl
mov
scas
jg
sarb
sbb
mov
lock
stc
mov
jmp
mov
fdivl
btc
xor
pusha
jne
mov
add
xor
dec
pop
mov
xor
xor
leave
push
call
sbb
lret
push
sbb
xchg
jno
sub
mov
mov
jg
and
inc
into
mov
stc
mov
xchg
and
outsl
in
inc
xchg
clc
leave
and
jp
jge
idivl
or
out
lret
rolb
inc
imul
pop
rorl
push
mov
ds
sub
insl
outsb
int3
mov
in
ja
bound
loope
sbb
aad
test
aad
lahf
test
loop
cwtl
jne
call
jge
adc
mov
xchg
loope
mov
out
pop
xchg
data16
iret
sbb
mov
arpl
in
popa
mov
data16
fnstenv
and
push
mov
cs
inc
mov
cld
rorl
adc
aad
int
add
mov
out
pop
inc
lret
add
test
mov
mov
ret
push
add
out
repnz
xor
push
mov
and
pop
hlt
data16
mov
xchg
dec
add
add
mov
rcll
je
outsl
mov
add
mov
mov
adc
add
jl
jg
fsts
scas
pop
out
int
not
mov
data16
push
push
enter
fcoml
or
dec
push
mov
rclb
mov
adc
xchg
ja
pop
mov
xor
cs
in
loop
xchg
xchg
xor
nop
or
fdivr
pusha
scas
xchg
xor
mov
std
addl
mov
int
or
outsb
cli
mov
cmp
dec
loopne
inc
cmp
or
notl
mov
dec
jno
sti
ds
int
add
mov
addl
arpl
adc
jne
fwait
outsl
loopne
pop
fiadds
movsb
push
incb
xlat
and
mov
jno
ljmp
movsb
aam
les
loope
inc
xor
cmp
mov
jno
scas
jno
mov
cmpsb
xchg
inc
cmp
and
outsl
ss
xchg
pop
sbb
loope
or
or
idivl
movsl
mov
adc
loop
xchg
cmp
push
addr16
jnp
push
inc
push
daa
xchg
iret
outsb
jno
jns
mov
divl
mov
dec
xchg
xor
subb
mov
pop
inc
lret
push
push
push
scas
cmp
loopne
lret
cmp
mov
xor
aas
xchg
loop
mul
sbb
push
es
mov
lahf
movsl
mov
xchg
lret
loope
jl
xchg
xchg
xchg
outsl
dec
or
xchg
data16
pop
pop
mov
jg
mov
test
inc
jnp
mov
movsb
pop
mov
movsl
bound
stos
adcb
push
sbb
fmuls
pop
arpl
aaa
adc
inc
insb
aas
cmpsb
add
inc
push
cmpsb
sbb
hlt
in
ds
push
mov
and
dec
mov
mov
loope
adc
sbb
jg
xor
inc
jb
adc
orb
jb
xlat
pop
mov
fadd
jecxz
inc
div
mov
push
push
xchg
xchg
insl
sub
out
repnz
cld
das
sub
imul
addr16
mov
int
adc
dec
add
add
in
cld
adc
data16
jmp
push
push
not
inc
iret
push
mov
jne
mov
in
cmpsl
loopne
xorl
cld
xchg
or
sti
nop
filds
mov
jno
xchg
adc
lea
adc
clc
jl
movsl
rorb
arpl
hlt
stos
mov
cmpb
inc
jge
pop
xchg
push
incl
inc
popa
xchg
dec
test
outsb
sub
fistps
mov
stos
addl
outsb
xor
jno
hlt
pop
pop
sub
mov
sarb
adc
jae
aaa
nop
mov
pop
inc
popa
fwait
shr
or
cltd
pop
out
int
push
nop
add
sbb
mov
outsb
and
mov
sahf
imul
lret
xchg
cmp
lea
idivb
aam
vshufpd
inc
jae
mov
cmp
adc
jge
pop
xchg
cmpsl
xchg
fiadds
jns
imul
add
adc
lret
sbb
sti
mov
out
mov
jmp
mov
or
dec
sbb
adc
and
test
shr
lahf
mov
mov
scas
push
outsb
sahf
sub
sahf
cmp
dec
int
jl
sti
xchg
frstor
mov
adc
pop
shll
roll
je
or
pop
mov
test
fsubrp
push
mov
jbe
pop
xor
nop
fldenv
test
pop
or
push
shll
add
xor
fcom
cs
and
rorl
mov
jbe
inc
add
sarl
xor
push
in
sub
push
adc
scas
rorb
popf
rorl
fnstsw
es
sbb
iret
lahf
pop
fisubl
stos
sbb
dec
mov
mov
add
sub
test
pop
jmp
inc
cmpsb
add
mov
mov
mov
sti
and
jnp
mov
mov
dec
jl
sub
push
aam
sbbl
dec
sbb
cmp
pusha
mov
cmp
mov
lods
jns
pop
jae
insl
and
jno
mov
andb
mov
pop
dec
dec
jle
repnz
scas
jecxz
ret
inc
aad
outsl
pop
out
test
pop
jne
and
sub
cmp
inc
movsl
dec
cwtl
sub
mov
lahf
jae
inc
idivb
add
mov
movzwl
dec
aaa
outsb
mov
popf
movl
inc
xchg
adc
fwait
xor
jge
mov
mov
sub
cwtl
inc
mov
test
push
or
inc
add
pop
adc
popf
xor
mov
jle
ret
cmpsl
shl
mov
pushf
xor
mov
jle
jl
fwait
xchg
inc
inc
mov
cli
call
fdivrl
jmp
sbb
sub
dec
sbb
out
xchg
rcrb
pop
enter
jl
xchg
dec
sub
and
pushf
call
jnp
push
dec
mov
cmpsl
js
inc
mov
xor
loope
loop
lea
add
push
testl
sarb
imul
adc
add
mov
jbe
mov
push
loopne
mov
mov
mov
dec
in
mov
lret
inc
or
mov
mov
cmp
add
sub
pop
inc
repnz
push
lret
sbb
aad
insl
xchg
cmpsb
test
imul
out
sti
inc
push
call
pop
jno
les
push
das
nop
subb
pop
xor
adc
xor
cltd
cmp
lea
pusha
add
aad
fwait
push
pop
and
cmc
mov
cmp
cmpsb
mov
cmp
jecxz
sub
mov
test
sbb
adc
push
lea
inc
sub
sbb
test
pop
mov
fistpl
popa
jp
arpl
push
add
xchg
mov
fidivrl
mov
and
inc
clc
lcall
nop
pop
inc
push
mull
dec
jmp
lds
inc
mov
sbb
inc
in
stos
sbb
outsb
shl
push
aam
insb
dec
mov
inc
mov
jo
inc
cmpsl
mov
fnstsw
es
fcmovne
popa
popf
pop
xor
sbb
in
out
lods
jne
test
out
sub
mov
mull
movsb
mov
sub
divb
push
int
sbb
mov
lcall
pop
dec
add
dec
dec
inc
mov
in
repz
cmp
pusha
outsl
jl
sub
dec
cltd
pop
rcll
sbb
arpl
dec
bound
cli
sbb
or
sti
into
xor
xlat
push
pop
pop
lcall
and
into
in
cwtl
fdivs
int
cwtl
mov
inc
sub
sub
mov
fwait
loop
int3
daa
mov
pop
js
js
inc
jmp
jecxz
mov
xor
movl
fcomp
imul
and
in
ja
xor
xor
je
push
sar
in
pusha
das
push
scas
mov
addr16
adc
out
call
mov
xlat
sahf
mov
lret
mov
je
daa
daa
fimull
cld
aam
loope
push
mov
lret
cmc
mov
add
mov
add
ja
dec
jge
out
sahf
xchg
lcall
mov
adc
loop
mov
cmpsl
lcall
ss
divl
ljmp
cmp
lea
outsl
hlt
int
jg
mov
bound
ljmp
roll
or
dec
cld
ljmp
testb
mov
loope
mov
insl
scas
xchg
xchg
rolb
cmp
pop
pop
sti
lds
jae
mov
outsl
jne
xor
and
mov
xchg
dec
rclb
add
stos
xor
divb
mov
push
mov
loopne
xchg
out
pushf
adc
inc
es
jg
lds
jmp
in
addr16
cmp
push
jns
cmp
sub
mov
lret
and
loop
in
inc
jmp
aaa
add
sbb
mov
ss
out
gs
in
xchg
or
call
ja
es
and
loop
mov
adc
pop
add
xchg
xchg
in
in
inc
inc
jmp
jbe
sahf
movb
fstps
sbb
add
dec
and
popf
out
lea
fnstsw
or
sahf
mov
ret
push
cwtl
fstl
lea
add
pushf
inc
and
cli
xchg
xchg
in
mov
dec
stos
pop
dec
mov
ljmp
xorl
or
inc
cli
in
movsb
cmp
xchg
jp
pop
dec
out
in
xchg
push
mov
mov
ss
pop
rolb
leave
hlt
into
push
scas
sahf
fisttpll
scas
inc
rorb
mov
pop
ds
insb
cmpxchg
push
mulb
cmpsl
ljmp
and
xchg
out
fcomps
jb
xchg
in
sub
xchg
int3
pop
shlb
or
sbb
or
mov
fisubrl
fisttpl
iret
xchg
mov
pop
imul
and
and
jae
dec
arpl
push
inc
inc
add
or
cwtl
fldenv
scas
sbbb
dec
add
lock
rorb
mov
sbb
mov
push
imul
cs
xrelease
addr16
test
pop
mov
add
sbb
repz
lret
and
cmp
xchg
push
and
inc
xchg
sarl
shll
clc
imul
xor
mov
mov
fchs
xchg
fdivs
adc
pop
leave
xor
test
or
and
inc
test
inc
inc
sbb
int3
pop
sbb
rcrb
sub
sbb
rcr
xchg
mov
sub
sub
sub
jno
jns
lock
lcall
stos
sub
cmp
scas
jae
sub
stos
adc
adc
xor
orl
add
push
push
dec
loope
std
roll
sbb
or
xor
add
outsb
stos
adc
cmp
xchg
int3
adc
daa
incl
ret
add
pop
cmp
int3
sub
aad
cmp
cli
idiv
sbb
jecxz
mov
sbb
jmp
lods
fs
std
mov
jg
cltd
jp
or
cmp
daa
jbe
sub
add
inc
jmp
fstl
jno
data16
xor
int
jbe
loop
js
mov
cmp
jb
pop
and
pop
sub
lock
add
add
repnz
fmull
les
push
mov
enter
insl
push
pushw
mov
sub
out
mov
in
mov
jnp
insl
les
pop
shlb
xor
hlt
iret
addl
and
and
icebp
pmulhw
sub
insb
mov
imul
or
aad
push
loopne
mov
jae
mov
adcb
jnp
imul
or
add
or
repz
sti
loope
out
fstl
fnstcw
cmc
stc
out
loopne
loope
fwait
adc
scas
repnz
pop
sub
adc
jb
in
rclb
xchg
int3
add
or
push
loope
daa
jmp
aad
pop
jns
jecxz
add
sarb
ljmp
and
adc
pop
rcr
mov
mov
pushf
cmp
test
mov
aaa
imul
jmp
adc
jb
push
inc
mov
shrb
sub
inc
mov
sbb
flds
mov
mov
pop
xor
sbb
je
push
sahf
add
fs
test
sub
cmp
nop
jb
mov
daa
imul
call
sahf
or
bnd
xlat
mov
test
adc
push
les
jp
stos
mov
pop
aam
jl
in
push
icebp
cwtl
xor
sub
pop
lds
lret
inc
aad
dec
adc
das
and
jo
push
sbb
int
cmc
cmp
iret
and
bound
addl
je
jno
jae
push
mov
lahf
hlt
jbe
cmpsb
add
cmp
test
xor
xor
mov
repz
jecxz
inc
dec
mov
dec
mov
imul
inc
cmp
xor
and
cmp
imulb
mov
jmp
in
xor
jmp
mov
in
add
mov
aam
add
fcmovne
jne
call
insb
flds
in
sbbb
pop
xor
roll
sti
xchg
cs
push
cwtl
add
jb
ja
jmp
add
cmp
sbb
xchg
sbb
jns
sbb
bswap
adc
sahf
push
push
inc
dec
jnp
movsl
sti
push
cwtl
jae
jbe
jmp
frstpm(287
and
fcom
lea
xchg
repnz
mov
pop
or
or
andl
xor
cltd
and
sub
fwait
je
pop
xor
mov
sbb
pusha
arpl
pop
lahf
xchg
jl
ja
add
or
push
mov
mov
in
adc
inc
inc
mov
xchg
rsqrtps
mov
shll
hlt
push
push
inc
popf
mov
frstor
cld
hlt
pop
or
fdivl
mov
shrb
nop
add
loop
mov
fistl
cmpsb
je
pushf
or
mov
adc
add
and
add
sbb
fwait
stos
stos
dec
sbb
int3
addb
dec
cli
jns
pop
sub
or
add
and
rcl
fcompl
xchg
mov
outsb
icebp
adc
popa
loope
fmuls
and
lods
je
orb
xor
outsl
xchg
imul
adc
xor
out
push
and
push
sbb
sbb
sub
stos
pop
dec
stc
mov
je
sbb
test
and
vmovlpd
in
lahf
adc
shrl
test
push
jb
add
add
jp
int3
mov
xchg
loop
sbb
add
orb
adcl
xchg
aad
and
adc
mov
cltd
data16
mov
mov
fwait
or
pop
mov
adc
xchg
jbe
sahf
loop
shl
into
fbstp
pop
mov
mov
ss
pop
nop
aas
mov
dec
push
out
incb
sbbb
xchg
mov
jbe
sub
sbb
cmp
in
or
dec
outsb
lods
pop
les
shll
xorl
or
inc
cmp
loopne
ljmp
xlat
jb
adc
adc
xchg
jb
push
pop
xchg
jae
add
int3
xlat
inc
enter
daa
pop
ja
cs
and
push
cwtl
ret
outsb
out
push
push
sbb
sbb
mov
shlb
push
xor
inc
scas
adc
adc
lock
xor
cli
add
pop
hlt
and
rolb
aaa
ja
sbb
mov
sbb
sub
inc
jne
cmpsl
xlat
xchg
imul
ja
jp
sbb
mov
adc
insb
in
mov
push
jecxz
xor
or
sub
pop
insl
xor
sub
aad
aas
loopne
mov
dec
dec
push
fildl
push
in
inc
in
stos
xchg
xor
fmul
sbb
enter
push
pop
xor
adc
fs
movsl
jle
movsb
sub
sbbb
stos
xlat
push
js
mov
bound
ds
lret
repnz
mov
out
in
scas
mov
shlb
stos
mov
clc
pop
adc
cwtl
popl
xchg
jb
popf
out
push
aas
int
mov
shr
in
cmpsb
mov
pushw
push
flds
inc
bndstx
mov
mov
mov
out
mov
xchg
jno
cmp
and
jb
loopne
lea
inc
xor
into
dec
addr16
xchg
xchg
xchg
pop
push
mov
xchg
xor
mov
sbb
mov
dec
jnp
sub
nop
aam
data16
sub
cmp
packssdw
sub
mov
loop
mov
pop
xchg
xchg
clc
sbb
or
mov
std
jbe
xchg
aam
add
incl
jl
dec
xchg
cmp
mov
loope
dec
out
ds
pop
test
aam
add
pop
sub
xchg
inc
gs
mov
sbb
pop
xchg
ljmp
out
push
jb
ffreep
jp
icebp
cwtl
mov
fnstenv
push
scas
mov
inc
mov
and
sbb
push
cmpl
and
in
and
outsl
push
in
mov
scas
sbb
mov
cmp
aad
add
mov
aaa
cmp
mov
stc
std
add
dec
push
add
cli
ret
std
clc
lret
adcb
sbbb
das
push
cld
das
ds
add
loopne
in
sti
mov
cmpsl
sbb
insb
into
jecxz
popa
lods
pop
aas
stos
pop
push
cmpsb
sbb
rcrl
sub
and
es
fs
fisttps
loope
shll
mov
adc
fs
cmp
jle
push
add
xchg
mov
xor
pop
push
xchg
out
lds
hlt
pusha
imul
lods
mov
add
insl
push
ret
and
inc
stc
lret
je
lods
in
mov
fs
out
ret
outsl
fisubrl
pop
imul
push
xchg
jmp
imul
imul
call
and
cwtl
js
adc
cmpsl
xor
ret
idivb
pop
std
mov
xor
orl
inc
add
int3
outsl
inc
push
into
cmp
ret
or
ret
push
xor
movl
out
and
or
stos
xchg
cs
and
aam
in
xchg
sbb
movsb
leave
jb
mov
lret
sub
jmp
orl
mov
cmp
adc
mov
div
or
scas
stc
adc
or
push
adc
les
cmpb
adc
mov
sbbb
cwtl
mov
adcb
in
loope
cmp
stos
jnp
dec
jae
roll
les
push
subl
push
scas
jbe
testl
push
jg
and
fistpl
cmp
sbb
ds
mov
les
movsl
inc
scas
inc
lock
arpl
outsl
and
je
cmpsb
fs
xor
or
mov
dec
mov
inc
pusha
inc
pop
ficoms
ret
push
insb
hlt
insb
int
sbb
call
rep
mov
jnp
fcmovu
lret
lock
cmpsl
loopne
int3
adc
nop
mov
and
popf
cwtl
mov
test
adc
enter
mov
sub
inc
mov
rorb
out
cmp
aam
mov
int3
cmp
push
fcompl
ffree
mov
and
ret
mov
int
xor
push
jae
add
push
or
lods
lods
xchg
push
add
jg
lock
mov
fwait
lods
ret
pop
scas
or
push
or
sbb
xor
inc
and
test
lea
push
shlb
cmc
or
sbb
adc
mov
cwtl
jnp
dec
adc
repz
mov
js
jmp
xor
jnp
cwtl
mov
inc
dec
fwait
idiv
fs
pop
scas
fwait
mov
stos
rcrb
xor
adc
aad
lock
add
test
jmp
outsl
cli
das
leave
lcall
push
adc
nop
loopne
xchg
push
dec
jecxz
popa
and
push
xor
ss
icebp
xchg
movsl
xchg
mov
pop
fimuls
aaa
insl
andb
adc
int
adc
call
and
mov
into
lods
rorl
add
lret
dec
and
arpl
cs
xor
insb
adc
fmuls
push
mov
subl
sub
add
sti
cmp
leave
dec
testb
jne
push
pusha
imul
cmpl
sbb
negb
stos
bound
dec
mov
mov
out
mov
add
add
mov
push
inc
xor
jo
sbb
xchg
enter
and
or
cmp
xor
adc
sbbl
jo
push
mov
testb
mov
leave
jle
push
bnd
dec
je
jo
cld
out
push
cmpsb
hlt
lea
cwtl
lods
sub
lret
aas
mov
xchg
lods
mov
mov
or
add
into
mov
jl
pop
pop
and
lea
cmp
cmpsb
aas
xlat
incl
pop
inc
mov
out
mov
push
and
sbb
and
cltd
pop
jp
pusha
movsb
push
fcmovb
mov
or
xchg
stc
mov
xchg
xor
xchg
push
mov
gs
stc
and
jmp
psubb
aad
sbb
je
push
sbb
jnp
mov
pop
les
inc
jo
test
fs
jae
mov
or
adc
divl
push
mov
cli
lds
repnz
mov
movsb
mov
jg
mov
fnstsw
sarb
jp
fildl
cmp
nop
adc
fwait
jl
dec
adc
pop
clc
mov
hlt
insb
push
fimull
cmpsb
jns
xor
mov
std
fsubrl
inc
shll
dec
xor
loope
sbb
mov
in
jp
xchg
cs
add
inc
sub
mov
lret
inc
pop
xlat
loop
sti
in
shll
lahf
insl
stos
int
out
pop
add
mov
sbb
push
in
fsub
jge
dec
rolb
fmul
mov
mov
push
push
and
das
rorl
xchg
mov
adc
mov
mov
inc
xor
mov
cmp
sub
and
mov
andb
sbb
daa
arpl
imul
sub
test
in
arpl
idiv
std
inc
fsubl
roll
pop
add
insb
push
repz
cmp
cmpsl
add
mov
mov
push
andb
int
adc
sahf
push
or
dec
inc
ffree
das
mov
jle
dec
add
mov
stc
push
mov
clc
dec
out
out
sub
mov
ret
mov
jmp
mov
arpl
rcll
push
pusha
insb
addr16
insb
pushf
pop
xor
repz
pop
into
cli
sbb
jg
mov
repnz
dec
mov
gs
inc
xlat
jmp
push
cmp
gs
js
rolb
or
push
pop
xchg
fwait
sti
les
mov
sbb
insl
mov
jl
mov
repz
mov
gs
insb
xor
and
xor
mov
jnp
cmp
aad
pop
pop
inc
or
xor
xor
scas
mov
pop
mov
add
dec
std
jg
jns
ret
fwait
stos
shrb
fcoml
inc
lods
adc
xor
rcrw
movsl
jo
fcompl
pop
lret
dec
stos
or
icebp
inc
sub
pusha
push
xchg
mov
negb
pop
jmp
mov
or
pop
cmp
jb
mov
sub
mov
in
or
add
cmc
pop
mov
fnsave
xor
xchg
sub
cltd
pusha
pop
hlt
lds
je
inc
dec
jp
sub
or
aas
sbb
rol
loope
int
jl
in
outsb
sbb
outsl
mov
fiadds
pop
stc
mov
es
shlb
incl
sbb
xchg
add
mov
dec
push
xchg
sub
shll
mov
lahf
sub
mov
dec
mov
jae
push
sahf
mov
gs
jg
cmp
addb
test
inc
repz
pop
fiaddl
fs
inc
jno
insl
sbb
xchg
test
mov
push
mov
mov
cmc
xlat
orb
pushf
or
push
out
pop
aad
pop
sarb
js
inc
mov
cmc
aaa
cmp
push
mov
add
out
mov
cli
scas
adc
cmp
mov
or
enter
mov
lret
or
cmp
ret
ficoml
cmp
xchg
shlb
pop
shl
icebp
nop
idiv
pop
cmp
pushf
enter
je
adc
into
test
mov
sbb
cmp
dec
mov
into
sub
daa
mov
out
and
je
cwtl
and
mov
xchg
dec
xchg
mov
or
leave
mov
or
adc
and
iret
or
xchg
insl
insl
inc
aad
cmpsb
fwait
adc
in
mov
sbb
mov
xchg
push
xor
and
call
push
data16
roll
bound
push
jmp
pop
mov
inc
aas
inc
fs
push
push
scas
jo
mov
in
xchg
inc
lret
xor
repz
leave
into
movsl
mov
mov
push
test
inc
ja
xlat
out
add
jg
test
or
push
mov
aas
out
dec
mov
jae
test
jmp
sbb
lds
ficompl
pop
minps
mov
fisubrl
lcall
add
std
jns
mov
cmpb
mulb
hlt
cltd
add
ja
hlt
dec
jge,pt
pusha
shrl
mov
or
push
stos
jmp
sbb
jae
sub
lods
pop
in
outsl
leave
push
xor
sub
int
pop
fbstp
inc
and
insb
popa
push
shlb
push
gs
mov
outsb
push
cmpsb
jae
js
das
xchg
mov
add
pop
cmp
out
cmc
test
ja
add
sub
jmp
into
mov
ljmp
daa
pop
lret
push
xchg
pop
add
mov
inc
lock
dec
repz
roll
pop
and
and
push
lock
or
sub
in
out
test
inc
push
and
sub
cmp
pop
xchg
cli
outsb
xchg
in
fnstsw
out
iret
insl
out
add
popl
mov
outsl
popa
adc
mov
lcall
cmc
repz
pop
or
push
mov
int
imul
sub
cmc
adc
lods
aad
adc
sub
and
inc
fcomi
popf
fisttpl
add
jp
out
stos
jmp
jmp
std
and
insb
xchg
lahf
push
sbb
mov
or
inc
adc
xor
or
and
mov
mov
sti
sub
sub
inc
inc
js
sbb
cwtl
push
jbe
mov
mov
xchg
f2xm1
sti
sbb
aam
stc
imul
sarb
pop
das
push
adc
sbb
mov
cmp
inc
add
imul
out
xlat
in
jl
pop
das
into
cltd
repnz
pop
xlat
lret
cmpsb
inc
aas
inc
out
mov
in
mov
and
sub
sbb
pop
xor
in
mov
js
mov
cs
sub
push
jnp
aas
js
add
or
pinsrw
test
push
mov
xchg
push
sarl
es
into
adc
pop
add
dec
push
dec
fs
cmp
lods
les
inc
scas
popf
gs
push
loopne
cmp
cmpsb
xor
outsl
cmp
lods
add
popf
add
or
daa
jmp
jbe
cmp
xor
inc
loop
scas
ficoml
enter
pop
cmc
test
jnp
xor
shl
xor
lds
add
cmpl
push
jmp
dec
jle
shlb
loop
rolb
xor
arpl
xchg
repz
sbb
mov
dec
ljmp
scas
and
push
jne
mov
and
xchg
cli
sbb
jns
cld
inc
and
and
mov
mov
jmp
sahf
cmp
mov
xor
pop
andb
jmp
aaa
outsb
pop
clc
insl
adc
shrd
push
mov
cmp
push
mov
fdivs
mov
or
or
inc
mov
mov
sub
xor
or
out
iret
fnstcw
jb
icebp
das
testl
sub
adc
insb
rorl
lret
jmp
xchg
into
hlt
insb
xor
sub
outsl
shrl
inc
fistl
test
mov
outsl
gs
adc
xchg
mov
icebp
and
xchg
aas
cmpsb
cmp
ja
pop
xchg
leave
jp
pop
outsl
je
and
cmp
mov
sub
mov
std
jl
xchg
aas
sti
loope
and
nop
cmc
dec
stc
mov
lods
xchg
pop
adc
insl
movsl
xor
sub
sbb
mov
aad
mov
push
and
push
pop
mov
hlt
pop
push
ret
xchg
xchg
pop
jle
adc
outsl
push
jge
popa
mov
or
mov
sub
inc
xchg
jbe
addl
popf
add
das
fwait
push
fistpll
repnz
fcmovb
loopne
inc
ror
subl
negl
jmp
or
insb
in
dec
in
stos
jno
movsl
jns
inc
pop
hlt
jno
in
adc
pusha
repnz
inc
pop
cmpsl
jo
ja
mov
sti
fisubs
sub
int3
or
es
insl
xchg
dec
cmp
lods
and
or
mov
pop
insb
push
inc
in
inc
inc
mov
stos
stc
in
adcl
int
xchg
and
insb
mov
lahf
mov
xor
cmp
dec
sbb
pop
cli
sbb
mov
xor
jmp
bound
insl
push
jecxz
lock
dec
xor
cmp
cmp
andl
imul
fcmovb
sub
mov
xchg
test
sahf
sbb
mov
jo
ficoml
test
mov
notl
or
stc
insb
je
mov
or
sbb
out
fistpl
push
sbb
movsl
push
cmp
sbb
lret
icebp
or
pop
pushf
fwait
insl
xor
icebp
rorl
jge
xor
add
xor
mov
bound
push
arpl
add
mov
xor
cmp
imul
test
arpl
cld
and
stc
and
cmc
sbb
js
nop
imul
subl
stc
test
xchg
cltd
daa
and
mulb
add
aad
dec
mov
cmp
cwtl
push
shlw
mov
loop
std
add
fs
pop
mov
and
sbb
fdivr
mov
imul
mov
pop
mov
adc
add
jo
cmp
lods
add
jnp
push
sub
mov
mov
icebp
sub
add
iret
out
inc
movsl
sbb
push
mov
mov
outsb
loopne
lcall
push
insl
mov
aad
mov
adc
or
push
jmp
mov
add
pop
mov
lock
inc
loope
push
mov
inc
add
dec
jnp
push
gs
jmp
enter
clc
les
xchg
lret
and
add
mov
lods
xor
aam
cmp
mov
and
gs
xchg
aam
sbb
inc
xchg
dec
dec
lock
cmp
and
scas
or
fsts
pushf
pop
imulb
insb
ficoml
push
imul
cmp
andb
shll
pop
fwait
insl
xchg
pop
and
jb
cmp
or
imul
mov
dec
leave
fcomps
xor
jp
leave
xchg
mov
cltd
fmuls
and
scas
test
or
mov
or
sub
cmc
xchg
cmp
dec
fwait
xchg
sbb
sub
sahf
hlt
fldl
les
mov
mov
dec
adc
push
leave
outsb
pusha
jecxz
mov
roll
jle
insb
sub
push
jle
loopne
pop
xor
inc
push
dec
jle
cmp
dec
fiadds
jle
jns
call
xchg
mov
mull
mov
push
rolb
shll
mov
jns
in
sub
loop
cltd
insl
inc
fdivs
lods
repz
xor
and
pop
xchg
leave
shrl
push
lods
dec
ljmp
dec
les
in
xor
stc
shrb
and
jecxz
push
jb
movsl
jmp
xor
and
lds
pusha
cwtl
in
sbb
testl
mov
orb
pop
xor
jge
sbb
das
clc
and
jg
mov
ljmp
push
out
and
lret
mov
aad
sbb
xchg
and
aaa
mov
xchg
cmp
or
pop
adc
in
sti
mov
mov
icebp
ds
ljmp
adc
loop
sbb
fld
bound
sbb
fstpl
or
push
xor
jnp
or
popl
aas
push
aaa
jle
test
sub
pop
sbb
pop
xor
xor
fldt
arpl
pop
sub
loop
aad
mov
loop
in
in
and
rolb
movnti
mov
jae
adc
mov
jae
scas
add
fnsave
jbe
pop
test
into
leave
cmp
mov
test
mov
adcb
sbb
cmp
adc
push
movsb
xor
push
cmc
sub
push
xor
pop
andb
flds
jns
and
cmp
mov
jne
idiv
loope
filds
add
add
pmaxsw
mov
sahf
jecxz
rcrl
in
inc
xorb
cmp
jb
push
fcomp
es
mov
pusha
xor
push
cmp
inc
mov
daa
or
test
xor
rcl
add
lea
inc
jge
push
and
movb
mov
sub
mov
ljmp
jae
pop
aam
sub
or
mov
or
data16
les
mov
lock
sti
flds
xchg
into
mov
cmp
fnstcw
inc
dec
mov
dec
pop
or
jns
inc
pop
xchg
or
jle
popf
into
mov
icebp
push
ret
jnp
jae
xor
scas
adc
pushf
xor
ljmp
mov
jb
or
fimull
ljmp
in
inc
adc
dec
lods
ret
test
sbb
fcmovne
pop
inc
fmull
arpl
mov
cmc
lret
fprem
dec
xorb
xchg
loopne
jb
lds
ud0
cmpsl
stos
jl
sub
dec
push
jecxz
pop
movb
dec
cmpsl
dec
pusha
dec
add
push
dec
dec
jmp
mov
in
inc
jb
ljmp
add
test
stos
mov
ds
pushl
cwtl
fs
push
idivb
movsb
pop
sub
and
mov
iret
pop
in
mov
xchg
and
cmpsl
adc
iret
or
dec
adc
sbb
out
scas
jae
stos
std
jmp
fwait
cmp
jnp
or
adc
in
jp
fidivrs
inc
inc
jge
and
es
and
push
cmpl
stc
int3
out
push
ficoml
rcrb
test
outsb
je
scas
inc
dec
pop
mov
enter
push
fsubrs
xchg
inc
test
fwait
add
rcl
insl
cs
std
in
or
and
xor
cli
inc
mov
adc
dec
add
xchg
inc
sub
adcl
mov
ljmp
mov
dec
add
mov
xchg
push
sbb
inc
dec
fs
int
sti
in
push
insl
test
push
mov
mov
mov
jae
fbstp
inc
jge
pop
out
je
jmp
mov
xor
lahf
loope
dec
ljmp
scas
call
jno
pop
sub
addl
popa
add
mov
mov
mov
jmp
dec
mov
lods
jno
popa
enter
or
fwait
js
xchg
sub
daa
xlat
mov
push
inc
sarb
jb
dec
loope
and
sub
js
mov
mov
fadds
sbb
add
mov
cmc
rcr
and
jns
rorb
adc
mov
lea
adc
jge
ret
push
push
xchg
adc
stos
faddp
sbb
jp
stos
pop
lods
lods
insb
lea
bound
dec
data16
into
imul
push
push
xor
push
push
cld
adc
pop
lahf
and
cmpsb
push
inc
lea
fwait
sahf
sbb
negl
fisubl
xor
das
lock
mov
push
cmp
inc
rorl
and
xchg
mov
jns
cltd
sbb
adc
popf
mov
aaa
aam
sbbb
xor
adc
outsl
rorl
daa
aaa
bound
add
iret
mov
and
repz
test
dec
testb
cmp
push
sbb
lock
cld
sub
arpl
mov
aas
clc
das
xchg
push
ds
or
jno
mov
out
mov
in
int3
gs
pop
mov
in
lret
mov
addr16
inc
mov
jecxz
daa
addr16
pop
pop
push
and
push
jecxz
mov
sbb
mov
popa
sahf
orb
jne
std
lock
int
xor
sarl
add
sarb
cltd
and
xchg
mov
imul
outsl
inc
and
cwtl
cmp
adc
push
sahf
cmpsl
push
subb
jle
pushf
sbb
mov
xor
repz
pop
and
sbb
insl
inc
mov
out
out
ret
js
mov
xchg
mov
mov
daa
jecxz
push
insl
jb
push
jle
enter
movb
inc
rol
dec
cmp
pop
sbbl
xor
nop
cmc
fisttpll
into
push
pop
sbb
adc
mov
dec
sbb
fs
cmc
push
and
xor
add
decl
cmp
mov
mov
in
add
add
int
add
insb
js
jg
filds
lahf
push
jmp
into
inc
cmp
pop
sahf
sub
cmp
cmpl
les
pop
fbstp
cmpsb
mov
inc
push
das
inc
cmp
push
pop
jns
repnz
sbb
pop
xchg
daa
or
movsl
lret
push
dec
dec
inc
adc
rcl
addr16
xor
jae
push
and
cld
adc
or
movsl
cmpl
call
push
jo
push
loop
lock
xor
or
xchg
adc
xchg
ljmp
mov
loope
mov
cmp
mov
mov
int
out
lock
xor
push
mov
aaa
repnz
pop
and
adc
jp
aad
jbe
iret
jge
shl
add
jl
or
mov
fwait
lds
outsl
pop
fs
cmc
nop
fs
mov
adc
insb
lcall
and
daa
outsl
inc
adc
mov
test
into
aam
shrl
and
pop
mov
xor
lret
shrb
add
out
movsl
lret
xor
popf
call
ret
pop
or
loopne
xor
jb
dec
sbb
sub
lahf
dec
idiv
dec
jge
nop
out
roll
sbb
addl
sub
pop
adc
ret
insb
inc
pop
jp
popa
jecxz
stos
outsb
push
mov
notb
dec
adc
and
shll
jge
int
test
mov
add
stos
dec
cltd
jg
ret
dec
jns
push
fmulp
push
add
test
and
jmp
mov
sarb
jae
mov
orl
aas
pop
mov
out
lods
push
data16
push
jno
ret
nop
and
push
jb
sub
les
mov
cmpsl
cmpsl
inc
pop
orl
sub
push
mov
pop
aas
mov
aam
or
out
lods
daa
sbb
lock
adc
mov
sub
scas
stos
or
roll
inc
call
cld
jg
and
insl
mov
cmpl
mov
push
es
int3
pushf
cmc
cli
movsl
and
mov
fcoml
decb
jmp
jne
inc
mov
insb
shrl
dec
mov
sub
dec
scas
jp
inc
pop
xchg
in
mov
aaa
xor
repnz
les
scas
dec
sub
cmp
pushf
xchg
mov
push
cmpsb
es
xor
mov
or
in
popf
dec
call
push
sbb
dec
jp
jb
repnz
.byte
