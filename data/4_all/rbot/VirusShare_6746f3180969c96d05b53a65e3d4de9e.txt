mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
add
cmp
pop
adc
mov
mov
mov
fcoms
inc
ficoml
cmp
out
ret
push
add
add
mov
sbb
jle
add
pop
pushl
jae
shrl
push
push
cwtl
add
add
jne
push
imul
xchg
dec
pop
loop
add
add
xchg
mov
pop
leave
ret
add
add
pop
push
cmp
test
pop
jle
mov
pushl
add
adc
rcr
mov
jmp
jmp
pop
adc
xchg
pop
clc
and
or
cmp
lods
adc
cmp
push
je
rclb
fs
popa
sbb
and
push
jne
jo
or
push
mov
or
push
int3
negl
sbb
loopne
lock
add
cs
pushf
push
dec
je
inc
cmp
cwtl
loopne
mov
popf
cwtl
add
pop
inc
push
mov
add
sbb
shr
push
or
wrmsr
ret
pop
mov
pop
loop
and
cld
std
push
push
cwtl
sbb
mov
mov
jae
and
mov
jo
aaa
mov
inc
loop
outsl
push
push
push
or
fcompl
leave
xor
ret
jo
testl
jne
add
idivl
jo
jmp
push
test
mov
clc
je
mov
rcr
loope
add
mov
mov
sbb
or
or
pushf
pop
je
mov
mov
mov
cmc
mov
sub
and
and
mov
or
jp
cmp
lods
mov
inc
push
shll
jl
lea
push
push
push
mov
mov
popf
push
inc
push
inc
loop
jbe
mov
outsb
sub
xchg
aam
pop
pop
das
mov
jmp
or
pop
or
push
sub
push
rorl
lret
inc
cmp
jnp
pop
push
push
push
mov
and
js
jae
push
sub
jns
pop
pop
test
add
sub
push
or
mov
in
cmp
xor
jbe
xor
jmp
cmp
in
lock
cmp
hlt
faddl
cmp
push
sbb
int3
add
sbb
cld
cld
xor
repz
jne
shl
xor
add
clc
add
inc
mov
pop
push
jo
cmp
add
incl
mov
add
add
movsb
mov
cmp
mov
fsubrl
add
fcomip
call
js
out
jle
add
push
xor
negl
xchg
cmp
int3
push
fnstcw
pop
clc
les
jmp
mov
aas
push
mov
jo
iret
xlat
add
push
mov
mov
cmp
setg
pop
pop
mov
rorb
cmp
push
pop
lea
add
movsl
mov
movl
inc
sbb
adc
jge
mov
pop
imul
pop
pop
cmpl
lahf
popa
ret
je
add
lock
pop
jmp
call
pop
sbbb
push
jecxz
addb
into
shrb
push
mov
inc
enter
loop
push
sub
xchg
sub
inc
mov
loopne
jle
scas
jnp
push
imul
mov
in
in
mov
or
cmpb
add
jno
and
test
shlb
sarl
outsb
adc
push
lods
sbb
fstpl
stos
adc
cmc
and
cmp
scas
mov
add
jns
mov
jp
incb
mov
or
test
pop
and
cltd
call
movsb
in
test
jb
xchg
sbb
cmp
stos
call
mov
test
cmp
mov
call
cmp
and
loopne
pop
ret
push
fiadds
cmpl
add
test
cmp
xchg
cmp
int3
add
inc
sub
fnsetpm(287
inc
mov
inc
or
pop
push
fs
adc
dec
aam
imul
jne
pop
cmpsb
notl
push
cmc
jae
cmpsb
pop
push
add
rorb
imul
int3
sub
jne
adc
insl
xor
loopne
inc
pusha
pop
cmp
fs
add
push
out
nop
stc
mov
les
or
les
cmpsb
sbb
test
ret
pop
ds
aam
xor
cmpsb
pop
stos
mov
add
adc
aam
aad
mov
cmp
mov
pop
add
addb
rcrb
sub
sub
ret
pusha
cmp
xor
adc
stc
in
dec
dec
out
push
in
add
xor
inc
cmp
mov
mov
or
shlb
xorb
jmp
or
dec
loopne
je
jmp
test
loop
orl
mov
dec
pop
xor
inc
jmp
pop
inc
imul
lods
push
mov
mov
mov
cmp
push
insb
aam
out
and
and
gs
sbbb
push
andl
mov
scas
sarb
and
dec
jmp
fiaddl
sub
add
cmp
inc
in
inc
bound
notb
mov
cs
pop
or
push
push
jmp
sbb
add
lcall
imul
sbb
push
mov
sbb
subb
or
push
shrl
inc
push
mov
sbb
fists
fsubs
xor
push
sub
pusha
cmp
lock
cmpb
push
push
je
adcl
sub
cmp
jge
movzwl
cli
rcl
rcll
clc
lock
mov
push
push
push
dec
int
xchg
call
inc
pop
add
push
mov
inc
adc
fiaddl
add
leave
mov
add
inc
jl
cmp
push
xchg
pop
add
je
adc
sbb
dec
ret
push
ret
or
ret
push
mov
push
adc
sbb
sarb
jne
test
cmp
leave
cmpsb
fnsave
ret
popa
inc
mov
mov
lods
pop
es
in
shlb
jno
movl
cmp
mov
and
xchg
mov
test
push
or
orl
lcall
je
push
imul
pusha
je
das
scas
sub
or
push
sub
jge
sub
sbb
test
add
adc
sbb
js
pop
or
push
push
cltd
cmpsb
sub
je
fs
jp
ljmp
push
and
push
mov
repnz
in
sbb
test
call
push
enter
fistl
ds
cli
inc
push
idivb
xchg
and
loopne
inc
cli
sub
or
pushl
xor
push
adc
je
fs
sbb
shlb
ret
or
adc
sub
or
out
push
add
cmp
jb
mov
add
and
pop
pushl
lcall
test
cmp
cltd
nop
lods
pop
add
adc
scas
add
cmp
mov
or
daa
sub
or
repz
or
push
test
or
ja
jae
sbbl
xchg
jmp
xor
cmp
mov
sub
sbb
data16
or
lock
push
jl
rorl
sub
add
es
sbb
nop
xchg
cwtl
mov
mov
push
test
sti
push
shrl
adc
cmp
and
int3
ja
pop
xchg
jne
cs
or
shlb
cmp
mov
loope
jns
jl
push
push
push
add
push
jge
clc
imul
and
xchg
mov
out
add
popa
sbbl
loopne
mov
ss
push
movsb
scas
aas
fiaddl
mov
movsb
inc
mov
or
imul
jo
shlb
dec
sbb
sub
test
lret
test
add
mov
sbb
enter
inc
int3
xor
fucom
cmpsl
mov
pusha
lea
daa
mov
push
push
xor
jp
mov
or
repz
sbb
inc
outsb
inc
lret
call
sub
cmpsb
hlt
sub
or
aam
jmp
les
push
out
enter
inc
jns
jne
inc
icebp
inc
mov
push
xor
ss
mov
jne
inc
adc
lods
mov
adc
and
or
push
rcrb
jne
mov
int3
push
push
push
mov
mov
or
outsb
hlt
push
mov
pusha
es
add
mov
inc
mov
dec
cmovge
or
je
pusha
ret
int3
sarb
jbe
fmuls
inc
ja
mov
mov
insb
scas
enter
shlb
adc
lret
jg
mov
jne
add
jae
mov
add
inc
or
insb
and
adc
sbb
mov
and
add
pop
sub
sub
push
push
cmpsl
fldcw
cmp
test
sbb
xchg
push
mov
sub
push
jne
call
lcall
fs
jno
dec
fists
leave
cmpl
mov
cmp
les
popa
test
adc
xchg
pop
mov
mov
movsb
xchg
cld
push
jne
adc
jns
inc
sbb
jae
popa
pop
push
mov
sub
ret
into
pushf
pusha
push
push
lretw
fdivrs
pop
int3
pusha
pop
rcl
ds
pushf
push
insl
mov
inc
imul
addr16
pop
rorl
cmp
call
fimull
in
mov
aas
cmp
cmpsl
sbb
or
hlt
mov
nop
lea
mov
push
and
cld
push
arpl
adc
cmp
pushl
xchg
xor
mov
lods
lahf
insb
pop
xor
xor
sub
mov
add
mov
iret
mov
fs
mov
outsb
je
fwait
shr
adc
or
sub
sbb
xchg
stos
mov
jmp
push
xchg
mov
shlb
push
push
mov
insb
les
cld
mov
ja
push
and
adc
lds
jge
ja
call
and
arpl
rcrl
lret
daa
imul
or
mov
test
adc
xchg
ja
push
and
push
push
es
test
je
mov
pushf
mov
cs
add
and
and
xor
shr
mov
dec
add
inc
dec
jne
pop
pop
not
pop
ret
cmpsb
jp
outsb
fistl
xchg
fs
int3
cmpsb
into
fadd
mov
dec
rcrl
jne
add
push
es
inc
push
mov
and
dec
xchg
jecxz
push
inc
push
dec
mov
add
or
je
dec
xchg
lds
add
push
fwait
ljmp
mov
xor
mov
test
xchg
imul
repnz
pop
jg
scas
repz
inc
cmp
rcll
sbb
imul
pop
ss
pop
xchg
cmpl
mov
hlt
sub
inc
add
pop
adc
xor
push
mov
pop
imul
rolb
test
cmp
mov
iret
xorl
call
add
es
test
jbe
push
shrb
cmp
mov
cmpsl
jne
inc
daa
pop
test
inc
out
push
cmp
mov
jne
movsb
lds
push
repz
int
mov
daa
inc
adc
push
mov
push
mov
or
mov
inc
call
ljmp
mov
call
push
xor
cmp
call
mov
add
jge
xor
add
stc
cmp
sub
ds
std
push
cmp
mov
mov
inc
add
jo
loopne
add
pop
in
inc
xchg
cmpsl
fcoml
adc
rorb
cmp
repz
add
loope
in
rcll
data16
fsts
pop
add
adc
insb
jno
push
out
or
int3
mov
mov
mov
insl
cmp
je
daa
push
inc
mov
pop
mov
cmc
das
fidivrl
mov
bound
mov
iret
inc
ss
xor
adc
mov
and
inc
nop
ret
push
test
faddl
mov
rcrb
xor
dec
sti
or
aam
nop
add
pop
int3
xchg
mov
xchg
add
into
insl
fs
insb
pop
in
fnsave
xchg
adc
cmpsb
int3
fucomi
flds
push
cld
mov
mov
movsb
adc
dec
fisttpll
push
push
push
insl
jge
enter
add
push
fimull
lcall
mov
es
icebp
mov
pop
cld
imul
clc
cld
scas
dec
push
inc
in
mov
inc
scas
sub
out
push
out
jb
pop
cli
shl
test
lret
inc
push
push
push
jle
push
test
inc
cmpb
add
and
popf
push
je
push
add
or
enter
push
pop
jmp
push
pop
cmp
push
push
inc
mov
xchg
data16
adc
test
je
sub
mov
xor
cmp
cltd
int
repnz
ss
and
in
or
inc
rorb
xchg
sbb
adc
out
or
or
jbe
or
mov
sub
insl
add
repnz
in
je
cld
push
mov
mov
sbb
out
push
add
cmp
test
lcall
les
jge
sbb
dec
mov
outsb
pop
fidivrl
xchg
xchg
push
jbe
or
leave
lock
cmp
and
out
inc
pop
cwtl
lods
lret
testl
mov
pop
stos
mov
not
shrl
je
cmp
insl
cmp
cmp
add
xchg
or
dec
xchg
fisttps
dec
shll
push
jle
push
ja
or
in
lea
std
inc
sub
cwtl
jp
rcll
mov
dec
pop
mov
jne
adc
daa
adc
sub
inc
not
push
addr16
cmp
push
rol
xor
push
aam
cmp
mov
test
js
popf
in
adc
nop
inc
cmp
enter
cmp
imul
sub
test
cmp
jne
push
add
mov
jae
cld
stc
inc
or
mov
cmp
dec
pop
adc
push
dec
pop
pop
in
sub
outsb
in
push
xchg
pop
xchg
jecxz
push
sbb
icebp
sub
addr16
push
mov
mov
into
jo
cld
mov
fsubrs
and
dec
push
cli
adc
cld
push
mov
movb
mov
movsl
enter
sbb
push
add
push
mov
sbb
mov
jg
push
mov
push
pushf
cmp
in
in
push
je
lods
mov
fimull
push
lea
push
lcall
int3
mov
std
arpl
mov
add
cmc
jns
lods
or
in
fsubs
mov
out
jne
call
bound
fwait
out
fwait
xchg
xlat
cmp
cwtl
mov
mov
xchg
repnz
cltd
add
push
ja
push
dec
repz
or
push
hlt
mov
lods
ljmp
imul
jne
pop
mov
shll
add
inc
mov
push
mov
cld
sti
push
dec
sbb
xchg
mov
and
cs
pop
adc
or
xor
pop
xchg
mov
pushf
jno
add
imul
push
push
sub
das
lea
inc
dec
pop
jno
cli
fs
inc
cs
push
inc
mov
std
shrl
cmp
mov
push
inc
adc
push
mov
pop
push
adc
inc
or
je
mov
inc
out
dec
push
lods
mov
pop
lods
sbb
test
jne
cs
pop
mov
and
cmp
fnstenv
push
ficoml
mov
pop
hlt
pusha
xchg
lcall
sbb
sbb
arpl
test
pop
or
hlt
hlt
adc
cwtl
lods
jle
ljmp
push
sub
jae
call
inc
mov
test
cld
fsubrl
inc
cwtl
jl
pop
rclb
dec
jmp
dec
dec
pop
and
in
les
sbb
pop
in
mov
test
clc
hlt
xor
pop
je
rcrb
pop
or
cli
cwtl
mov
xchg
loopne
jb
js
pop
insb
fdivr
sbb
push
xor
mov
sub
mov
and
push
loopne
sub
mov
stos
stos
mov
push
mov
mov
lea
push
push
push
sbb
stos
cmpsb
sbb
dec
dec
pusha
xchg
jbe
stos
scas
cmp
mov
mov
jp
loopne
mov
mov
dec
jle
and
xchg
mov
les
and
add
into
mov
fstpt
je
jmp
pop
mov
or
pusha
fwait
or
mov
pop
xor
insb
fadds
adc
jmp
xor
sub
sbb
jne
pop
inc
add
and
jle
ds
inc
ljmp
cld
outsb
shlb
mov
pop
jl
aam
or
xchg
or
add
in
xor
lock
in
popa
filds
bound
sub
push
sbb
loopne
inc
cmp
lea
adc
jp,pt
pop
lds
mov
test
je,pn
xor
stos
or
adc
stc
cmp
jne
cmpl
adc
add
mov
adc
jp
daa
mov
xchg
push
xor
sbb
xor
imul
insb
repz
mov
fisubrl
cmp
mov
push
cmp
cltd
sub
sar
add
mov
lea
mov
sbb
jbe
fstps
addb
mov
mov
fcomps
int3
int3
mov
lea
add
loopne
cmpsb
adc
fcoms
xor
inc
sbb
dec
int
les
aas
outsb
sub
cmp
push
mov
shrl
push
fs
leave
inc
cwtl
or
and
inc
inc
outsl
or
adc
inc
adc
add
xor
outsb
shlb
inc
cli
mov
and
and
sub
aam
jge
sub
les
addr16
js
lea
or
and
push
dec
movsb
je
mov
inc
mov
cli
dec
fmull
call
push
bound
sahf
or
leave
out
dec
sbb
or
jo
cmp
test
xor
and
fxtract
xchg
stc
sbb
cmpsl
aad
push
insl
bound
dec
es
jne
orl
jg
in
les
fstl
xlat
or
add
ss
mov
inc
mov
push
test
add
push
lods
gs
jp
mov
fildll
ds
fcoml
insl
push
fidivrl
ficomps
xor
scas
leave
mov
out
mov
add
or
js
jge
pop
shlb
cmp
add
push
jmp
xlat
dec
popf
adc
dec
lcall
adc
jns
jmp
popf
ljmp
adc
shr
cmovge
imul
cmp
int3
std
in
negb
repnz
scas
or
pusha
xor
push
pop
push
inc
push
jl
jmp
addr16
stos
sahf
rcll
sbb
jne
int3
int3
test
cmp
lea
decl
jne
xchg
cs
push
mov
push
std
sbbl
movl
lahf
mov
je
cltd
add
cs
cs
cmp
stos
leave
insb
and
add
inc
jns
and
data16
xchg
mov
aas
fldl
repz
sbb
fldenv
jo
pop
pusha
mov
test
movsl
call
add
popf
dec
incl
push
mov
incl
das
inc
cmp
stos
xchg
test
enter
pop
movsb
and
rclb
lea
shl
into
movl
test
xchg
add
imul
stos
push
sbbl
movb
lret
iret
adc
or
ret
rcrb
aam
jae
sub
aad
push
xchg
ds
out
or
movzwl
cltd
mov
adc
push
sub
push
xor
in
mov
int
push
out
adc
bound
hlt
insl
xlat
pop
cmp
jmp
push
rclb
jmp
mov
test
inc
loopne
mov
add
ficompl
rolb
mov
repnz
aam
inc
mov
or
or
incb
or
push
gs
lret
lock
adc
pop
cltd
mov
add
push
pop
adc
rcrb
adc
enter
ss
add
movl
mov
pop
shl
or
fildl
fucomi
mov
jmp
fsubr
inc
mov
mov
loop
mov
xchg
xlat
inc
arpl
dec
push
mov
dec
add
jno
mov
jae
push
push
mov
addr16
inc
aaa
das
int3
push
pusha
xor
lods
inc
push
addr16
sub
lret
mov
xorb
dec
lods
repnz
inc
add
cwtl
and
enter
mov
sub
les
cmpb
cltd
inc
sbb
pop
test
adc
js
jmp
mov
outsb
shll
shrl
push
pop
and
inc
push
jp
mov
movsl
mov
aas
dec
fwait
and
xchg
repz
push
cld
add
push
jmp
lea
sub
cs
adc
mov
or
or
adc
mov
mov
inc
lahf
and
adc
movsb
ss
aad
mov
xor
pop
call
cs
in
xchg
adc
jle
inc
cmp
fwait
mov
outsl
jae
loopne
cmp
lock
sub
fcmovnbe
sub
xchg
mov
lahf
jne
cmp
std
xor
adc
sub
push
inc
mov
dec
mov
insb
in
notl
dec
leave
cmp
mov
xor
and
je
push
jb
mov
xor
mov
jbe
mov
push
sti
jae
dec
loopne
mov
cmp
mov
add
add
dec
add
pushf
lods
add
les
jge
ja
mov
shr
push
out
int3
repz
add
ja
nop
push
push
adc
add
notb
aam
xchg
and
es
lahf
or
dec
je
lret
dec
dec
sub
lahf
imul
inc
mov
cli
or
outsl
sbb
test
shlb
icebp
mov
lea
add
pop
inc
in
push
ret
pop
je
inc
ret
mov
push
mov
pop
enter
in
js
insb
imul
sbb
sub
add
mov
pushf
push
loopne
or
adc
sbb
pop
adc
fmull
push
dec
fstpl
push
push
push
xor
jne
push
cmc
sbb
push
aad
dec
cmpsb
push
push
test
xchg
popf
push
mov
push
stc
add
inc
aam
mov
jg
sti
call
and
mov
push
cld
pop
push
pop
jo
aaa
sbb
mov
xor
aaa
dec
push
sub
pop
imul
rcrb
or
test
mov
push
dec
mov
je
jne
push
sub
pop
fdivl
xchg
cmp
jmp
lds
into
mov
dec
mov
xchg
fistps
push
rcll
ss
addl
ret
push
orb
adc
xor
inc
cmp
rcrb
ret
imul
mov
cmp
push
xchg
sbb
fisttpl
arpl
rcrl
rorl
mov
adc
or
rcrb
mov
inc
push
mov
ret
add
or
push
xchg
outsb
adc
pop
cltd
adc
pop
test
rol
push
sub
jmp
add
insl
mov
mov
inc
xchg
push
dec
enter
repz
cmc
inc
lret
xor
sub
xor
je
dec
and
add
sbb
push
mov
push
ret
mov
cmp
cmp
push
in
sbb
or
sub
lods
in
and
push
loope
clc
cld
mov
ss
push
add
push
ret
clc
call
and
rolb
arpl
mov
cmp
cmp
popa
iret
dec
mov
or
mov
xchg
pushf
push
call
push
cmpsb
lock
clc
pop
xor
push
mov
push
sub
and
call
xchg
mov
inc
push
mov
xchg
enter
bound
sbb
sbb
js
jb
cld
enter
pop
push
lcall
das
lahf
jp
lret
xchg
movsl
je
mov
data16
mov
sarb
and
loope
adc
add
in
ret
add
and
int3
popa
dec
adc
and
or
int3
subb
sbbl
adc
push
mov
adc
ljmp
sti
pusha
test
mov
fsubl
push
stos
pop
enter
sub
push
into
or
sti
push
scas
xchg
hlt
and
pushf
inc
repz
mov
dec
dec
lret
sub
dec
mov
addr16
cmp
jg
pop
mov
je
push
insb
aaa
push
push
addr16
imul
cmp
jne
push
dec
popa
lcall
pop
add
gs
xchg
js
cmp
stos
loopne
mov
cltd
xor
sarl
push
push
inc
lods
pop
push
mov
int3
sbb
movsb
das
inc
ret
jecxz
das
xchg
rol
or
cwtl
jecxz
or
test
xchg
callw
lods
inc
imul
push
adc
cld
sub
xor
xor
lret
prefetcht1
movl
mov
or
out
pop
pushf
add
out
icebp
cmpsl
fs
mov
xor
in
inc
pop
addl
rcrl
pop
pop
pushf
xchg
sub
sub
fs
or
xor
push
push
pop
sti
in
cwtl
push
lods
or
push
out
icebp
outsb
xorb
les
aaa
inc
mov
dec
mov
cmp
fwait
mov
add
faddl
inc
rorl
iret
push
lds
loope
test
cmp
bound
roll
jge
test
nop
mov
dec
add
adc
mov
cs
inc
je,pn
mov
inc
adc
xchg
sbb
ja
sbb
inc
cmp
inc
fs
cmpsb
repz
pop
xchg
xor
popf
daa
xor
dec
cwtl
dec
adc
mov
cli
push
and
sub
stc
xor
jns
push
ss
mov
pop
ret
dec
pushf
add
sub
add
cmp
and
daa
and
ljmp
popa
cwtl
inc
add
cmp
les
push
push
push
mov
push
push
js
je
mov
cld
cmp
lods
flds
push
mov
mov
addr16
jae
test
shlb
mov
lcall
xor
insl
jmp
pusha
jo
add
icebp
sub
cmp
mov
push
mov
pushf
sbb
pusha
add
test
pop
jno,pt
xchg
mov
adc
inc
cmpl
push
out
adc
xor
jmp
pusha
in
push
ret
inc
inc
inc
fnstcw
or
les
xchg
push
das
xchg
pop
mov
inc
insb
bound
in
mov
adc
mov
stc
rcrb
push
stos
pop
dec
sbb
divl
shll
pop
push
pop
add
add
add
push
es
cmp
or
push
mov
cmpb
inc
push
lods
pop
and
push
adc
in
pop
add
jl
jns
mov
pop
loopne
mov
sbb
push
jl
mov
mov
shr
sbb
add
mov
inc
cmp
mov
jb
cmpw
jne
inc
adc
adc
and
jae
sbb
or
and
js
test
sti
and
xchg
pop
jne
jecxz
inc
xor
nop
mov
std
add
gs
pop
cmp
jnp
push
jbe
stc
cmovp
pop
stc
adc
add
sbb
add
sbb
lds
sbbl
jo
in
or
mov
push
leave
dec
push
and
outsb
andl
and
pop
adc
inc
in
push
push
cmp
adc
inc
adc
xchg
je
mov
push
xchg
add
adcb
jne
gs
xor
pop
jbe
orb
cwtl
mov
pop
cmp
je
ret
xchg
push
lock
addr16
out
and
cltd
call
iret
test
shrb
push
or
sbb
mov
push
sbb
mov
mov
and
cmp
jne
add
cmpl
fs
clc
push
movsb
fwait
xor
push
ret
push
lds
and
ret
insb
nop
sub
jb
xchg
pop
ret
mov
adc
adc
rcrb
add
inc
cmp
jb
jmp
imul
mov
test
shll
loopne
mov
xchg
hlt
push
pop
sub
shr
and
mov
cmpl
ds
add
mov
test
xor
push
mov
add
cmpsl
popa
mov
jnp
add
pop
mov
pop
push
repnz
dec
ss
push
mov
sub
test
andl
jecxz
adc
loopne
cmp
adc
xor
inc
cmp
mov
pop
je
mov
add
mov
and
cmp
jne
imul
pop
xchg
xor
popf
addl
xchg
fwait
sub
push
sub
aam
inc
xchg
xor
mov
and
outsl
jecxz
push
mov
add
cmp
fbstp
sub
push
leave
mov
in
add
movsl
loop
sbb
mov
cmp
or
inc
cmpb
rorl
and
adcl
mov
xchg
loope
lea
ret
sbb
mov
insb
xor
jmp
or
leave
push
pushl
mov
push
scas
xchg
mov
mov
pusha
mov
xor
pushf
sbb
cmp
mov
sbb
mov
adc
hlt
adc
mov
mov
incb
popf
repnz
push
dec
call
iret
sub
mov
lock
mov
add
shrb
in
push
add
push
sbb
jne
cmp
push
shlb
jle
or
dec
inc
inc
cmp
das
or
sbb
push
lret
push
rol
or
sbb
sbb
dec
xorb
adcl
inc
aaa
rorl
or
adc
mov
fsubs
test
add
mov
jp
push
imul
testb
jecxz
shl
and
ret
mov
jmp
mov
mov
push
je
dec
pop
inc
pushf
add
adc
gs
and
sbb
cld
or
add
ficompl
fwait
lock
jmp
popl
or
rclb
sbb
lock
xchg
insb
push
sub
mov
lret
cld
mov
inc
cmp
pop
cmpsl
mov
aaa
mov
and
mov
xchg
inc
insb
loope
mov
xlat
pop
insb
xor
je
fcoms
pop
das
je
add
jns
or
inc
repnz
xor
test
jae
icebp
inc
setge
inc
jmp
mov
notb
cmp
es
mov
bound
inc
inc
lock
hlt
mov
in
mov
cli
lods
push
sbb
inc
push
mov
dec
cmp
push
rcrw
lar
mov
insl
xlat
adcl
mov
lods
xchg
das
xchg
addr16
stos
mov
mov
push
add
sbb
add
jle
ljmp
push
xchg
stos
leave
mov
mov
mov
bound
and
dec
lcall
loopne
adc
cld
mov
cmp
inc
cmp
nop
jnp
cmp
add
in
iret
or
int3
pop
rolb
fbstp
hlt
mov
lods
pop
adc
sub
pusha
push
dec
flds
lea
cmp
jb
insb
sub
cmp
jae
mov
inc
or
insl
cmp
sub
jmp
ss
inc
dec
pop
dec
xlat
push
dec
lahf
in
push
insl
and
dec
mov
or
dec
xchg
adc
add
mov
fcomps
inc
cmp
mov
fsub
xchg
mov
dec
repz
loopne
jb
dec
addl
mov
sub
adcb
or
addb
fld
jecxz
push
test
cmp
mov
popa
aaa
mov
jecxz
push
les
dec
pop
loopne
add
add
lds
andb
or
pop
mov
mov
f2xm1
or
cmp
inc
push
inc
cmp
pop
mov
mov
cmp
add
push
xor
and
out
jmp
mov
jns
jp
cld
push
adc
fldenv
pop
add
jae
mov
xchg
cltd
pop
mulb
stc
dec
sub
stc
push
lods
cmp
stos
loope
mov
dec
dec
adc
imul
and
cld
inc
mov
xor
outsl
clc
xor
int3
cmp
not
cmp
inc
jne
popf
mov
and
jl
lret
mov
cli
mov
jecxz
mov
movsl
lock
inc
xchg
push
dec
and
orb
push
push
js
xor
mov
popf
mov
movsb
mov
and
lret
inc
popa
inc
nop
lods
stc
cmp
cs
sbb
and
sbb
and
cwtl
pop
mov
and
sbb
lods
push
push
fmull
clc
test
cmpl
cbtw
loopne
fs
jne
and
lods
imul
and
sbb
dec
cli
rcll
xchg
data16
sub
and
push
mov
lea
jne
loop
mov
push
jp
adc
fstps
lods
les
dec
stc
mov
call
rol
add
or
add
fmuls
push
cmpb
push
ss
orb
movb
push
add
jae
test
jbe
jmp
and
rolb
cmpb
bswap
cmc
xor
divb
jne
movl
and
subl
add
fidivrl
pop
or
pop
rcrl
push
inc
adc
inc
jle
nop
xor
ror
or
repz
andl
xor
int
adc
sub
mov
xor
xor
pop
jne
pop
jno
push
cmp
push
call
insl
add
je
mov
mov
jecxz
fidivl
aaa
les
orl
xchg
testl
loopne
add
int
pop
daa
lret
repz
or
pop
leave
and
jo
pop
xor
movsb
inc
inc
adc
cmp
push
jns
jge
adc
lds
out
aam
clc
das
xchg
mov
cmp
cmp
xor
inc
pop
inc
and
imul
jge
insl
and
loop
push
sub
popa
and
push
loopne
out
lock
add
in
call
insb
cli
push
pop
xchg
jecxz
cmp
clc
fstl
add
mov
adc
and
dec
in
sub
jb,pn
loop
push
gs
jno
fchs
cwtl
lcall
ret
lea
add
cmp
mov
and
ficoml
test
xor
push
nop
fadd
add
sub
sub
pop
cld
iret
sbb
mov
or
aad
xchg
je
push
inc
jmp
add
cs
push
add
rcrb
cmpb
je
dec
jne
inc
push
push
outsb
jmp
arpl
or
mov
lds
lea
or
js
arpl
pop
push
or
popf
jnp
cmpsl
outsb
cmpsl
imul
fidivrl
sar
jno
jecxz
adc
xor
call
add
das
or
add
xchg
mov
mov
sbb
out
aas
daa
aam
ljmp
dec
and
xor
add
je
cmp
sub
sti
push
xchg
push
lock
sti
ss
jecxz
sub
ret
push
or
mov
sub
fcomp
aas
push
xor
jae
inc
push
lock
sbb
jg
idiv
aam
mov
pop
gs
addr16
pop
aam
xor
sbb
ja
mov
pop
adcl
lock
or
repnz
xor
or
cld
and
sub
ret
imul
lahf
pushf
mov
imul
jmp
imull
mov
jmp
fdivrs
sarb
push
icebp
out
mov
mov
inc
mov
cmpsl
lea
cs
sahf
mov
push
inc
lret
pop
test
std
dec
jp
test
clc
cltd
test
pusha
ret
sbb
cmc
add
push
orl
es
mov
lcall
movsl
dec
jmp
lahf
pop
cmp
out
imul
adc
pop
ficoms
es
dec
mov
mov
fadds
mov
into
add
push
cld
sti
jno
push
xchg
jge
push
add
add
fcomps
mov
hlt
cld
pop
int3
sahf
gs
mov
push
fstps
psubw
xor
and
xorl
cmp
call
cmp
aad
ds
jne
lods
or
leave
ds
push
adc
nop
int3
ljmp
cmp
movsl
pusha
dec
cwtl
roll
mov
adc
mov
leave
inc
push
sbb
lds
dec
xchg
adc
sub
push
fwait
xor
jnp
and
test
ret
repnz
sbb
addr16
leave
data16
leave
adc
mov
insl
or
dec
push
pop
stos
dec
sub
notb
stc
jns
lods
dec
adc
data16
out
add
jge
inc
mov
dec
leave
inc
je
into
dec
inc
iret
hlt
push
and
movsl
pushf
lret
lcall
jne
inc
cld
test
inc
or
ja
aas
fcoml
xor
outsl
fadds
pop
sar
inc
lds
sub
mov
imul
sub
add
jecxz
mov
jne
push
negb
add
enter
dec
jne,pn
in
cmc
fistps
notb
cmp
in
dec
outsb
pop
mov
movsb
add
mov
inc
call
mov
push
movb
inc
aam
or
cli
sub
rcrb
sbb
roll
fidivl
rcl
fadd
jecxz
add
pop
mov
aam
inc
jmp
push
mov
mov
pcmpgtw
cmp
cs
mov
dec
in
add
jne
push
cmp
aaa
mov
ret
adc
sahf
lods
adc
cltd
and
pop
and
in
mov
jae
aas
xor
push
push
mov
aam
sbb
push
jp
std
sbbl
add
shl
icebp
cmp
jbe
sbb
mov
mov
dec
adc
divl
shr
push
mov
pop
test
adc
fs
pop
fwait
dec
sub
iret
popf
or
mov
and
or
pop
shrl
int3
mov
sub
push
push
daa
gs
fstl
pusha
test
or
imul
scas
nop
leave
push
rorb
loop
pushf
mov
push
adc
add
push
pop
inc
adc
xor
aam
test
ja
mov
loopne
icebp
push
mov
lods
inc
mov
data16
dec
cmpsb
sub
sub
mov
enter
leave
push
mov
sub
scas
xchg
inc
enter
in
push
scas
push
inc
das
daa
cmp
fbld
cwtl
iret
adc
pop
cld
daa
xor
int3
fs
pop
popa
dec
jmp
hlt
imul
mov
arpl
adc
mov
mov
fdivrl
xlat
sub
leave
inc
pop
push
loop
and
or
sbb
mov
xchg
mov
dec
dec
mov
adc
ret
cmp
js
lock
fsubs
nop
dec
and
sbb
shr
adc
or
sub
in
sub
mov
dec
inc
out
or
lock
push
jnp
dec
dec
mov
divb
inc
push
inc
or
jmp
mov
repz
je
pop
pop
adc
xchg
sub
xchg
aaa
push
sarl
ret
ds
xlat
mov
addr16
test
subl
test
pop
xchg
and
and
stc
js
mov
push
ret
pop
loope
sub
rep
lods
int
xchg
push
dec
push
sub
xor
ss
popa
rclb
sahf
xchg
popa
pop
cmp
mov
push
and
xor
shrb
test
lea
cld
push
inc
or
pop
std
nop
cmc
stos
dec
rorl
pop
add
cmp
pop
cld
inc
jge
xor
jne
movswl
mov
pop
shlb
test
jns
push
les
js
pop
bound
fs
jle
cmp
jle
popa
lcall
test
pop
sbbb
jne
pop
jge
cmpsb
rcrl
test
mov
xor
push
repnz
pop
imul
jne
andb
cmp
cmp
subl
sub
jne
cmp
repnz
cwtl
sahf
stc
xchg
mov
loopne
pop
cmp
je
add
je
enter
add
sbb
sub
insl
add
xlat
push
mov
jge
sub
or
cld
and
lcall
in
push
push
iret
fisubl
sub
ss
call
or
fistl
mov
cmp
sbb
pop
inc
dec
into
mov
push
sub
pushf
outsl
aam
cmp
adc
add
push
test
push
fcoml
push
inc
cld
test
push
push
cmp
mov
je
inc
je
xchg
xchg
mov
call
and
data16
mov
or
or
adc
mov
je
fadd
add
rolb
pop
in
mov
sbb
and
out
mov
mov
iret
pushf
ljmp
mov
in
fcomp
sub
je
push
fnstenv
mov
in
clc
in
pop
push
aam
hlt
cmp
jbe
xor
jge
mov
js
or
jp
push
lret
mov
fimuls
shlb
fisttps
mov
outsl
xor
arpl
loope
push
add
ret
mov
mov
xor
or
je
ror
fwait
call
pcmpeqw
in
call
xchg
xor
mov
push
jnp
ret
inc
xchg
pushf
push
fadd
fnstenv
shll
xor
sti
or
out
mov
cmp
fmuls
in
fwait
loop
insb
aam
jmp
pop
jbe
jbe
inc
or
push
je
dec
loopne
nop
mov
sbb
loope
repz
clc
push
or
sbb
fdiv
fyl2x
fnstenv
mov
fyl2x
fldcw
xchg
in
mov
jns
sbb
iret
mov
cmp
ja
js
aaa
or
mov
pop
cmp
cmp
lock
out
pop
mov
insb
arpl
fcoms
inc
data16
int3
mov
xor
sarw
ss
adc
data16
fwait
mov
pushf
push
in
push
xchg
mov
dec
call
inc
jo
lcall
cmp
je
add
or
cld
clc
ret
cltd
and
push
jb
ret
aam
enter
jecxz
jecxz
enter
gs
fstps
mov
cmpb
test
scas
sub
movsb
out
jecxz
rcrb
je
dec
mov
pop
shl
mov
je
call
push
pop
jbe
dec
pusha
and
mov
in
cwtl
sbb
adc
arpl
mov
cmp
push
jb
push
sbb
dec
push
sbb
dec
or
cmp
dec
fdivrl
cmp
mov
sbb
dec
cmp
push
movsb
dec
test
dec
fmull
mov
inc
add
mov
adc
popf
sub
popa
cmp
rcl
in
mov
flds
mov
add
mov
int3
mov
addr16
fs
and
into
into
xchg
lea
sbbl
xchg
push
jno
call
cmp
cltd
arpl
push
xchg
mov
pop
jle
dec
aas
aas
xchg
mov
aas
enter
inc
test
cmp
push
ja
sbb
orb
pop
pmuludq
fs
dec
dec
push
arpl
hlt
push
and
sbb
or
mov
jg
clc
dec
mov
aam
xor
dec
sub
inc
je
lods
dec
cmp
inc
das
sahf
push
mov
inc
mov
cmp
mov
je
mov
sbb
ja
jle
sub
or
mov
sahf
xor
nop
mov
rcl
dec
xchg
sub
sbb
push
leave
pop
cmp
enter
push
js
fs
mov
inc
leave
dec
fmuls
ljmp
or
icebp
inc
adc
dec
in
cmp
sub
and
sbb
mov
or
call
dec
movsb
in
mov
cmp
fmuls
int3
dec
jbe
mov
and
cmp
mov
jl
or
push
leave
xchg
clc
in
scas
or
pop
xchg
mov
mov
je
fs
fdivrp
xlat
mov
test
sbb
dec
mov
dec
dec
fs
cmp
scas
and
inc
repz
mov
lret
cmp
sub
mov
push
push
sarw
jno
arpl
mov
aas
pop
daa
mov
lcall
outsl
test
dec
movsb
dec
repz
xchg
dec
cwtl
cwtl
cmp
scas
mov
pop
pop
xchg
into
xchg
fs
in
ror
mov
in
sbb
push
xor
jle
in
clc
and
mov
mov
hlt
push
imul
test
sbb
inc
adc
stc
shl
jecxz
dec
loopne
jl
lahf
sbb
dec
imul
inc
pop
and
or
into
or
xor
xor
call
xor
adc
adc
adc
add
gs
jl
in
cld
push
jecxz
iret
push
hlt
loopne
into
enter
stos
out
mov
into
or
adc
sbb
and
sub
xor
cmp
push
inc
inc
popf
pop
push
loopne
dec
repz
mov
lods
cmp
and
in
adc
mov
ja
pop
mov
adc
sub
rorl
pusha
mov
xor
and
xchg
movsl
xor
sbb
jecxz
cli
xchg
sbb
inc
mov
push
jne
inc
fnstcw
push
push
enter
mov
loopne
pop
dec
lcall
je
dec
dec
fwait
test
sub
jne
xor
jmp
mov
ret
fldt
mov
push
inc
sbb
mov
xlat
or
inc
push
lock
jmp
sbb
dec
pusha
dec
add
mov
mov
js
mov
inc
fildl
shrb
call
jno
pop
ror
jg
dec
mov
mov
jo
cmp
jg
shl
js
test
adc
mov
addb
add
mov
pop
and
dec
sbb
rcrl
out
jns
or
cmp
mov
xchg
mov
inc
cli
pop
loopne
mov
push
sbb
jb
mov
shl
sub
test
push
cmp
loop
add
loopne
es
out
test
push
pop
xchg
xor
cltd
jecxz
and
rorb
inc
cmp
rorb
out
mov
les
mov
mov
cmp
lcall
push
sbb
jbe
mov
mov
xchg
mov
push
and
xor
push
test
cmp
in
lock
dec
pop
pop
int
mov
mov
mov
ljmp
test
cmpb
push
cmp
pop
rorl
xchg
sub
inc
mov
xchg
add
cmp
adc
xor
fistpll
test
clc
push
cmp
push
hlt
shlb
movl
test
stos
andl
dec
xor
or
adc
jbe
lods
push
jecxz
jo
pop
push
xchg
pop
inc
sbb
pop
or
sub
xor
stc
mov
sahf
mov
jp
es
lret
mov
hlt
xchg
xor
fmull
push
jl
daa
mov
repnz
into
cmp
dec
aam
nop
cltd
loop
movsb
fldt
pop
and
pop
lret
rorl
lahf
fcom
clc
or
imul
inc
mov
jmp
jmp
imul
iret
inc
mov
dec
inc
cli
in
lret
pop
in
dec
push
iret
stos
lock
es
stc
addr16
cmp
shrb
pop
and
sahf
repnz
push
repz
lods
notl
mov
cmp
shlb
dec
pop
pop
iret
xorb
les
or
push
jbe
push
jmp
push
movsl
fdivs
jo
les
enter
int
loope
pop
mov
xor
sub
jecxz
lods
pusha
pusha
in
mov
cmp
inc
jns
adc
fwait
inc
sub
or
mov
jge
xor
mov
cmp
je
fmuls
je
push
iret
adc
or
xchg
out
dec
jmp
dec
jo
inc
sub
jbe
inc
rolb
xchg
test
andb
je,pn
pop
jmp
sbb
inc
mov
push
dec
popa
fwait
es
cmp
sub
xor
sbb
xor
mov
or
mov
mov
mov
jmp
mov
sub
mov
add
adc
add
or
jne
mov
inc
cmp
jl
xor
imul
or
dec
xor
cmp
je
cmp
or
inc
cmp
jl
cmp
je
jae
int3
repnz
xchg
pop
pop
jbe
bound
adc
and
pop
pop
mov
rep
lea
cli
or
pop
push
mov
adc
add
sbb
inc
mov
mov
dec
cmp
jle
pop
les
and
and
dec
cmp
pop
jl
cmp
jg
sbb
push
orb
fldenv
in
stos
in
ret
xchg
inc
cld
hlt
out
addl
push
jne
add
xor
je
dec
mov
jmp
sbb
stos
fists
fs
pop
mov
cmp
pop
or
dec
rolb
push
hlt
mov
sub
jle
notb
clc
jge
out
or
or
and
pop
push
clc
cwtl
mov
lods
dec
jae
xor
dec
jg
test
in
pop
adc
mul
mov
dec
popf
dec
loopne
push
ja
adc
mov
sbb
push
mov
cmp
adc
mov
cmp
jg
enter
or
mov
in
dec
lea
jb
jnp,pn
test
je
and
mov
inc
adc
test
and
dec
adc
adc
cli
adc
mov
enter
sbb
jmp
adc
dec
mov
dec
fsubl
js
xchg
push
aad
and
mov
rclb
mov
adc
ss
sub
pusha
or
les
push
mov
in
xor
add
cmp
sbb
push
pushf
add
lahf
in
leave
xlat
xor
popa
enter
add
mov
add
mov
ja
push
adc
push
movsb
arpl
call
inc
xor
mov
jno
je
pop
int
push
clc
dec
dec
jl
int3
xor
inc
pop
ljmp
daa
mov
cmp
push
push
fdivl
mov
roll
pusha
jae
inc
int
cmp
dec
orb
inc
insb
xchg
scas
enter
fs
lret
inc
sbb
inc
je
sub
pop
push
cmp
sbb
add
fmuls
push
sub
popa
jns
xchg
cwtl
and
out
lahf
clc
and
push
jbe
add
pop
sbb
pusha
mov
sqrtps
cwtl
ficompl
sbb
mov
test
and
dec
in
inc
add
test
fs
pop
push
addr16
or
lods
arpl
scas
or
sub
jns
fs
adc
lea
cmp
lea
jmp
mov
jecxz
mov
in
jmp
rorl
mov
push
cltd
or
push
aam
mov
push
xchg
test
inc
push
xchg
push
xor
sbb
add
popa
sub
flds
sbb
aam
mov
test
mov
jmp
mov
or
mov
fs
inc
sub
xor
and
popa
mov
out
xor
rclb
fldl
mov
or
mov
jmp
push
jp
cmp
unpcklps
push
xchg
jns
inc
mov
repz
jns
clc
add
popa
sbb
adc
adc
in
mov
push
jecxz
push
sbb
popf
test
pop
imul
js
aam
fs
insb
sub
sub
inc
inc
push
cmpsl
hlt
mov
sub
daa
add
xchg
add
ja
add
sub
dec
dec
je
pop
mov
test
push
je
cmp
test
xchg
data16
addr16
jne
pop
pop
sub
gs
mov
je
or
ret
adc
sbb
mov
push
xor
jmp
mov
push
mov
mov
sbb
je
lea
sub
stc
adc
movzbl
lea
push
nop
fs
sbb
jmp
push
and
pop
inc
rcrl
lea
cmp
orl
push
push
push
or
mov
add
and
mov
or
lret
shl
jns
out
test
les
in
add
add
add
or
ret
pop
or
add
cmp
xchg
mov
out
xchg
sbb
push
jle
pop
dec
sbb
cld
fcoml
cmp
ret
push
lods
xor
faddp
sub
adc
inc
fcomps
cmp
test
lcall
mov
push
popa
add
mov
dec
je
cmp
test
cmp
sub
adc
cmp
dec
adc
pop
xor
sub
leave
cmp
jbe
fadds
sbb
push
std
sbb
adc
addr16
inc
dec
sub
pop
pushl
pushl
cmp
mov
push
mov
and
inc
add
jl
lahf
clc
mov
inc
mov
cmp
shll
mov
inc
cwtl
test
and
push
and
cmp
fimull
dec
jne
add
movsl
inc
orb
jge
or
inc
cmp
push
test
inc
fidivs
pop
mov
cmpsb
and
outsb
jo
dec
int3
addr16
push
inc
ret
andl
je
mov
fnstsw
and
mov
shrl
mov
xchg
inc
mov
xchg
push
dec
stos
jne
fildll
lds
xchg
and
mov
sub
xlat
testb
add
or
add
imul
mov
push
clc
or
xor
mov
pop
pop
pop
and
mov
xchg
jge
adc
push
xor
leave
or
jg
mov
lock
imul
add
jle
and
inc
cld
or
stos
in
dec
sahf
adc
pop
insb
add
shrl
ret
pop
or
dec
lret
push
push
mov
int
add
sahf
outsl
pusha
clc
lea
roll
jns
mov
pop
and
sub
adc
jbe
xor
push
push
aaa
xor
repnz
adc
cltd
sub
xchg
mov
pop
lsl
push
shl
mov
das
lds
add
shll
cmc
jo
mov
jbe
cmp
enter
inc
dec
mov
push
pop
and
insl
ret
loope
jb
int3
cmpsb
xor
or
mov
sub
mov
cli
add
mov
add
push
mov
sub
ss
or
and
add
je
mov
loope
mov
pushf
fimuls
mov
xchg
rolb
xor
lock
cmp
xchg
mov
je
jne
and
adc
out
test
js
cmp
mov
cmp
xor
popa
adc
dec
add
dec
dec
frstor
ljmp
stc
and
push
inc
int3
mov
mov
or
repz
jo
jo
movsl
mov
and
pop
stos
and
nop
lret
or
insl
xchg
pop
xor
xor
cwtl
add
push
call
cmp
pop
or
xchg
cmc
mov
lods
cmpsl
push
sub
or
adc
xchg
jle
mov
jnp
dec
subb
xor
jne
sbb
adc
jle
and
jae
popa
pushl
pusha
inc
fidivs
fistpl
xchg
es
into
add
mov
inc
adc
adc
loop
adc
cmp
rolb
xor
sub
and
gs
iret
pop
adc
imul
call
jle
fcomps
popf
lahf
stc
les
out
jle
xor
test
je
aad
stc
xor
cmp
jle
out
cmp
lahf
stc
jno
and
jle,pt
popf
adc
mov
pop
pop
jmp
xchg
iret
cmp
fisubl
xor
sahf
mov
shrl
rorl
insb
adc
cwtl
xor
sahf
mov
sarb
push
inc
sbb
clc
sbb
jno
fs
test
je
cmp
cld
xchg
test
push
aaa
mov
stos
rcrb
jno,pn
mov
fcmovne
sti
push
push
jbe
mov
or
pushl
push
mov
shrb
inc
cmp
ret
jmp
aad
leave
or
sbb
push
xchg
loop
int3
cld
rolb
notl
cmp
aam
jl
sub
push
add
hlt
pcmpeqw
pop
or
lret
mov
mov
add
je
inc
addl
xor
je
adc
inc
lcall
mov
movsb
lods
mov
dec
jl
pop
pusha
xchg
cmp
inc
xor
inc
cmpb
enter
stos
pop
mov
sub
cmp
loopne
jle
stc
xchg
nop
add
outsb
shlb
lds
je
sub
lret
dec
adc
or
xor
xor
dec
push
xor
push
xor
sub
push
ret
mov
sub
addl
test
push
push
imul
cli
inc
add
push
lds
sbb
dec
pushf
and
mov
aas
call
pop
aas
mov
mov
add
mov
enter
call
mov
jecxz
or
jmp
ds
mov
sub
insl
cs
push
cmp
lea
push
cld
inc
inc
out
fldt
push
mov
push
or
das
sbb
add
movsb
mov
nop
mov
sbb
dec
test
adc
cmc
or
loope
xor
push
inc
push
pop
sub
xchg
xor
xor
pop
mov
enter
pop
sub
popf
adc
dec
sahf
and
outsb
je
pop
and
mov
sub
pop
cs
dec
sbb
sete
dec
nop
sub
dec
xchg
jmp
xor
frstor
aaa
lea
adc
sbb
inc
add
cmp
xlat
add
jmp
push
dec
sub
push
in
and
mov
mov
add
adc
push
pop
mov
mov
shl
lea
sbb
mov
mov
movzbl
push
mov
mov
lock
cmc
inc
adc
push
add
add
stc
add
pop
lea
push
shr
gs
inc
inc
neg
lea
add
sbb
mov
add
inc
inc
push
inc
or
negb
add
or
push
add
mov
and
shr
movl
rol
shl
add
add
ss
mov
incl
test
and
sbbl
adc
and
push
sub
cmpb
xor
cmp
xchg
cmp
jecxz
and
pop
mov
jae
repz
or
inc
movsb
inc
dec
jmp
sbb
dec
adc
pop
pop
dec
call
pushf
outsl
inc
inc
les
jge
mov
enter
shlb
sarb
cmpsb
push
mov
mov
adc
into
add
insl
dec
inc
cmp
jl
insb
mov
sbb
enter
xchg
iret
outsb
int3
push
popa
add
or
dec
sti
insb
lret
push
dec
shl
and
sub
sub
jecxz
sub
inc
fnsave
jb
xor
or
repz
ds
int3
int3
loopne
cmp
adc
push
cmp
sub
xor
mov
shrl
push
incl
push
or
and
mov
push
jno
or
push
dec
jo
sbb
shlb
or
gs
jle
mov
mov
xchg
ss
movb
xchg
xor
addb
xor
jo
mov
sub
xchg
adc
add
xor
mov
mov
jne
int
mov
push
jecxz
div
push
insl
subb
movsl
imulb
pop
testb
sub
sub
in
sub
int
and
pop
mov
data16
adc
jne
inc
or
loopne
dec
clc
add
jb
mov
push
loope
mov
dec
std
or
jae
pop
push
add
shll
or
nop
xor
mov
mov
mov
cld
scas
add
in
movsb
inc
icebp
pop
outsb
jecxz
push
push
scas
pop
adcb
gs
test
cmp
mov
inc
jge
push
push
push
cmp
pop
fisubrl
test
and
sbb
inc
jge
je
adc
mov
mov
cs
rcrb
or
pusha
jb
xchg
xchg
lea
mov
xlat
adc
push
lret
xchg
dec
shl
mov
jo
roll
ficompl
mov
and
or
xor
pop
or
shll
loop
and
push
add
je
lea
movsb
dec
inc
cmpsb
mov
push
push
jmp
test
out
mov
repz
dec
and
xor
sub
sub
sub
xchg
xor
xchg
mov
je
push
inc
aam
xor
pop
inc
notb
xor
xor
sub
xchg
xor
ror
fisttps
int3
les
es
pop
jno
int3
dec
call
clc
rorl
and
dec
xor
movsl
push
lock
ja
repnz
xchg
ret
jno
rcrl
sbb
jae
lret
popf
loope
cmp
push
pop
cmp
decl
pop
in
mov
xchg
pop
add
pop
movsb
sbb
and
push
dec
shlb
out
xor
push
add
xor
pop
inc
jecxz
mov
mov
movsb
pop
adc
repnz
inc
sbb
orb
sub
mov
or
pop
int
add
or
aam
test
nop
sbb
inc
call
cld
pop
emms
push
dec
std
enter
mov
addr16
aam
dec
inc
mov
add
jl
in
fs
negl
mov
les
clc
fwait
andl
cs
rclb
ret
out
into
fs
mov
mov
add
sar
insl
out
sahf
cmpb
pop
test
mov
enter
lds
pushf
mov
pusha
add
scas
mov
or
divb
outsb
test
mov
js
fstps
adc
inc
pop
leave
rolb
pop
mov
arpl
insb
pusha
test
sti
inc
loope
sub
andb
add
mov
fcomip
pushf
sbb
js
and
call
pusha
jb
xchg
mov
clc
mov
out
add
xor
inc
nop
or
add
lock
inc
and
mov
fsubrs
stos
xchg
or
xchg
or
icebp
mov
dec
addr16
cmp
mov
adc
jne
jnp
mov
icebp
xor
pop
cld
cmp
add
notl
jl
mov
or
cmp
cmp
jl
into
addb
mov
lea
adc
push
cmp
cs
jecxz
push
fildl
movsb
pop
inc
xchg
xor
repnz
outsl
pop
addr16
mov
ss
xor
dec
test
cwtl
cmp
popa
lods
addr16
cmp
sbb
inc
push
add
mov
or
ret
fists
fs
pop
dec
lcall
ljmp
ljmp
fwait
sub
and
jne
pop
fcom
pop
cmp
add
cli
push
xchg
pop
int3
mov
jb
inc
loop
pop
dec
inc
push
cmp
xchg
int3
xchg
pop
xor
les
sbb
idivl
lret
add
adc
pop
inc
popf
adc
sarb
inc
adc
and
ljmp
test
faddl
ljmp
repnz
dec
xchg
cmp
test
js
dec
aas
insb
adc
lods
loopne
cltd
pop
xor
xchg
cltd
cmp
aad
or
mov
adc
jge
arpl
push
aam
xor
cmp
je
jbe
sbb
push
inc
icebp
push
jnp
test
inc
mov
xor
inc
scas
xchg
shrl
sar
shll
bound
and
push
inc
inc
ljmp
outsb
andb
push
cmp
jb
or
fisubrl
mov
imul
popf
sbb
repnz
sahf
ror
add
cmp
xchg
outsb
xchg
cmp
inc
aad
ljmp
iret
dec
xchg
sbb
lret
jle
mov
cmp
insb
enter
addb
pop
push
ljmp
sar
mov
pop
addr16
adc
loope
jnp
mov
mov
mov
imul
call
jbe
pop
nop
inc
pop
mov
sub
add
mov
inc
jo
jne
mov
push
pop
jmp
push
jae
sub
add
mov
je
decl
adc
mov
imul
jl
hlt
add
sbb
cli
push
je
fimull
xchg
cld
xor
mov
sahf
xor
sbb
cmc
push
out
dec
push
mov
pop
ds
int
rcll
mov
lret
push
sbb
nop
add
outsb
sub
jo
inc
nop
cmp
andb
fsts
push
inc
aad
push
mov
push
movsl
xor
aam
sbb
hlt
sahf
add
push
inc
push
fs
adc
inc
int3
aaa
add
add
push
sub
pop
inc
dec
sbb
mov
lds
push
ret
arpl
mov
mov
das
and
lahf
bound
test
test
pop
or
inc
decl
xor
pushl
add
mov
mov
insl
adc
fbstp
mov
sub
push
push
mov
add
loop
or
mov
jmp
xchg
jl
das
nop
sbb
adc
add
std
pop
mov
loope
and
xor
cmp
add
out
jno
or
dec
inc
lcall
inc
fwait
popf
cltd
cmpsl
not
fadds
sbb
jno
rclb
or
mov
and
in
or
shr
je
mov
sub
xchg
aad
cmp
cmc
mov
fldl
ret
adc
jle
movsb
jp
pop
xchg
shlb
and
push
sub
and
push
cmp
add
pop
sub
aaa
mov
sbbb
mov
sub
je
dec
stc
dec
popa
dec
mov
push
inc
and
sbb
jl
mov
fisttpll
mov
popa
pop
das
ret
je
inc
or
sbb
inc
cmpsb
jg
pop
jp
pusha
jmp
inc
push
pop
popf
xchg
lods
pop
dec
inc
mov
rep
imul
dec
or
mov
pop
out
mov
mov
inc
fdivrs
mov
popa
inc
call
insl
outsl
lret
mov
lret
scas
aam
mov
dec
pop
and
movsl
xor
into
xor
xchg
cmp
xchg
mov
out
and
ljmp
imul
xchg
fldt
aas
and
bound
or
add
xchg
mov
subb
cmpb
cmp
jne
lcall
add
add
sub
sub
dec
jns
inc
cmp
test
call
fsts
jge
cmpb
je
repz
push
sbb
inc
pushf
ljmp
mov
and
xor
aad
adc
repz
xchg
inc
inc
shrl
dec
push
push
sbb
jns
or
sbb
jb
ret
clc
stos
push
sbb
mov
fidivrl
addr16
pop
pop
cli
in
clc
xor
in
push
inc
aad
jne
push
inc
pop
stc
fildl
bound
dec
inc
out
arpl
hlt
test
cmp
das
push
iret
xor
js
les
fadd
insb
sbb
mov
ja
clc
aam
xchg
cltd
mov
xchg
cmpl
add
idiv
lea
or
xor
bound
xchg
xchg
cmp
je
fmuls
xor
inc
je
push
mov
push
push
mov
xchg
iret
les
mull
adc
mov
xor
mov
sub
sub
jg
and
imul
je
and
xor
jo
dec
mov
push
adc
lret
and
and
idivb
movb
jae
lea
nop
xor
in
sub
stos
or
sub
and
pop
fsts
adc
push
xor
dec
cltd
cmpl
mov
xor
je
or
inc
add
add
into
inc
orb
xchg
pop
push
fwait
xchg
roll
clc
or
inc
push
jle
ja
shl
xor
xchg
stos
mov
decb
sbb
addr16
je
cli
adcb
je
test
mov
cmp
lock
fisubrs
push
xchg
mov
inc
sbb
fwait
push
ja
gs
popf
addr16
push
add
xor
sbb
dec
sub
mov
scas
dec
out
mov
xchg
leave
xchg
rcr
inc
mov
data16
shlb
iret
mov
lret
mov
fnstcw
cmp
mov
push
pop
lea
inc
out
mov
cmpsb
lods
into
pop
push
cs
jne
arpl
push
dec
push
scas
mov
test
or
lea
pop
cmp
insl
jo
movsb
add
mov
shlb
xor
cs
add
push
inc
jns
mov
test
shll
lds
dec
fwait
sub
inc
and
add
mov
aaa
in
stc
out
cmpsb
xchg
shrb
jmp
clc
cmp
sub
inc
icebp
add
inc
stc
xor
stos
je
lret
inc
xor
mov
fidivs
cmp
inc
enterw
stos
cli
pop
xor
jno
in
adc
je
mov
mov
shlb
sub
xchg
stc
cltd
stos
jns
out
push
incl
inc
push
je
sbb
push
lret
fdivrl
pop
test
lret
shlb
cld
and
jmp
dec
xchg
jl
mov
imul
test
faddl
mov
mov
cli
inc
cmp
push
std
mov
loope
ror
std
fldcw
addr16
leave
cmpb
pop
inc
es
or
je
inc
sbb
and
iret
mov
push
mov
lret
pmulhuw
xor
and
cltd
push
loop
movsb
cld
stos
mov
test
or
dec
jae
test
adc
int3
jg
dec
sub
cmp
test
test
rcl
mov
les
js
adc
cmp
mov
clc
push
test
aas
mov
orb
pusha
mov
or
pop
push
jne
mov
pop
xor
dec
jnp
and
sbb
sbb
sbb
hlt
dec
mov
or
or
cli
or
push
aaa
mov
cmp
movsb
jne
jno
or
lret
jmp
mov
loopne
repnz
inc
into
into
add
mov
jl
dec
movsl
hlt
dec
xchg
unpcklps
daa
xor
sbb
mov
push
mov
adc
ds
pushl
mov
hlt
shll
inc
push
and
das
sbb
push
in
dec
repnz
pop
lock
mov
in
sahf
add
decl
sub
mov
lea
jecxz
adc
jno
data16
mov
mov
adc
lods
xlat
mov
adc
sbb
in
mov
xchg
xor
and
sub
orb
fildl
stos
cwtl
sbb
pop
pop
rol
push
cmpsb
mov
mov
mov
inc
addr16
dec
mov
in
inc
xor
sbb
in
aam
mov
sbb
mov
jl
cmp
push
cltd
cmp
jl
sub
inc
inc
mov
jle
pop
mov
inc
sbbb
add
add
mov
mov
jno
ret
sbb
push
dec
mulb
cmp
ljmp
jp
cmpsb
and
int3
pop
cltd
adcb
jno
push
xor
push
stos
push
mov
sbb
movsb
add
push
xor
xor
jge
test
jl
lea
cmp
nopl
add
mov
dec
jp
xchg
je
push
das
and
lock
mov
cmp
les
cld
shl
iret
pop
cld
dec
push
lahf
sbb
ret
dec
in
clc
mov
pushf
cmp
xor
shl
iret
sub
and
and
daa
sbb
pop
adc
pop
cwtl
sti
movsl
clc
cmpsl
mov
in
cmpsl
loopne
mov
ds
rcrb
sub
rol
mov
sbb
pushf
nop
test
jecxz
out
or
or
flds
dec
push
cmp
or
inc
jecxz
adc
or
push
mov
loope
hlt
cmpsb
push
mov
fyl2x
addr16
xor
or
xchg
ds
cmc
inc
int3
push
repnz
push
cmpsb
push
in
mov
mov
movsb
cmpsb
stos
jbe
cmp
mov
icebp
iret
jo
push
aaa
pop
mov
fs
inc
push
cmpsb
sbb
dec
mov
inc
inc
inc
sub
cmp
inc
xor
jecxz
mov
xor
sbb
in
clc
fs
inc
inc
mov
inc
jmp
mov
in
xorl
xor
leave
pop
pop
andl
call
movsl
pop
inc
fdivrs
cmp
or
mov
push
rolb
mov
clc
mov
addr16
lahf
mov
jbe
fldcw
push
cli
inc
mov
in
clc
movsl
xchg
push
loope
mov
nop
inc
mov
inc
aas
cmp
roll
mov
movsl
xchg
cmp
add
fyl2x
inc
pusha
mov
jbe
push
jnp
fyl2x
addr16
inc
or
ds
cmc
cmp
insb
push
or
movsl
adc
lea
sbb
push
xchg
in
cli
cmpsl
bound
push
mov
stos
movsb
xor
or
lahf
movsb
mov
mov
dec
sbb
sbb
ljmp
mov
cmp
fidivrl
cmp
in
rcrb
test
clc
sub
pop
xchg
movl
fyl2x
inc
xchg
mov
cmp
push
aaa
push
inc
cld
shl
iret
dec
test
inc
ss
js
mov
in
xchg
lret
fdivrl
aas
dec
mov
xchg
xor
xor
cld
stc
and
and
lahf
pop
sbbb
icebp
mov
xor
inc
aas
ds
stc
add
xor
stc
fld
addr16
mov
ds
out
xor
ret
jecxz
loopne
cmp
iret
jle,pt
fsubl
sti
clc
fsts
fsubs
aas
aam
xor
jae
jle
stc
les
shl
lahf
pop
sbb
cld
clc
nop
lods
inc
loope
aas
test
movsb
xor
jg
cld
icebp
mov
por
xchg
aam
pop
jg
clc
shrl
lahf
subb
sbb
ds
stc
je
sub
icebp
loope
xchg
fs
sub
jge
cld
jecxz
test
lahf
call
loope
pop
hlt
cmp
and
data16
imul
cld
jg
xchg
push
lret
or
cmp
or
push
add
jne
mov
pushf
xor
push
mov
lgs
cld
add
mov
arpl
aas
popf
and
pop
mov
nop
add
lcall
dec
xor
aam
mov
out
fadd
xchg
adc
into
mov
mov
js
push
push
push
popa
loop
jle
cwtl
pushf
pushf
popa
movsl
shlb
xchg
mov
xchg
pop
sbb
jae
xchg
repz
dec
mov
xchg
enter
lock
inc
out
push
push
jno
shr
imul
xchg
movzbl
ljmp
xchg
movsl
lar
icebp
mov
cld
mov
mov
outsb
add
mov
cmp
test
lahf
sbb
js
pop
fstl
ja
push
data16
ljmp
cltd
ret
or
test
les
mov
cli
and
sbb
sbb
rclb
loope
pusha
mov
xor
sbb
or
pop
lcall
xchg
add
pushf
or
dec
mov
mov
dec
cmp
repz
mov
or
je
push
pushf
push
fisubs
pop
add
or
movb
andl
jl
mov
xchg
mov
lret
ja
or
mov
cld
dec
es
xchg
sub
pushf
xchg
push
fs
testb
jmp
das
cmp
mov
sub
xor
push
mov
js
jb
xor
xor
cs
mov
or
xor
nop
sub
pop
lods
push
cmpb
cmpsl
mov
push
fidivs
jne
outsl
adc
cmp
orl
fwait
mov
dec
mov
dec
sub
sub
imul
mov
stos
add
jbe
mov
nop
and
flds
push
nop
add
sbb
push
cmp
dec
pop
adc
rol
adc
sub
push
lcall
lahf
pop
pop
pop
jmp
mov
pop
mull
and
clc
lock
push
and
and
xchg
xchg
fwait
test
xchg
and
andb
lahf
adc
pop
ds
cwtl
lahf
cld
and
arpl
mov
arpl
test
loope
pop
ds
pop
js
jle
je
arpl
mulb
insb
lahf
in
pop
ds
push
lahf
ds
arpl
push
mul
arpl
push
lahf
cltd
sbb
pop
sbbb
lahf
arpl
imulb
sbb
pop
ds
cmp
ds
arpl
sbb
lods
sbb
loope
pop
and
cli
sbb
lahf
out
pop
jecxz,pt
sbb
fildl
clc
fadd
adc
xchg
aas
jno
dec
pop
cld
sahf
pop
cld
in
aaa
hlt
iret
push
lock
pop
lock
cmp
and
cmpsl
stc
ret
outsl
sbb
and
mul
aam
jge
rcrb
data16
xor
adc
daa
fs
jecxz
adc
sahf
adc
loope
movq
sti
adc
icebp
mov
movsb
repz
jo
pop
jg
clc
pusha
push
xchg
dec
clc
jecxz
lahf
mov
addb
cld
je
or
jle
stos
movl
jo
in
push
ret
pop
fs
or
loope
pop
ds
pop
push
sahf
and
push
sahf
xchg
testb
inc
int3
add
cmp
add
pop
sahf
add
xchg
clc
scas
add
test
and
out
xor
fiaddl
push
adc
or
shr
imul
jmp
sbb
notb
sub
loopne
push
pushf
repz
push
xchg
mov
inc
inc
and
mov
adc
pop
inc
mov
movw
inc
test
insb
inc
test
sbbl
pushw
sahf
dec
pop
xlat
push
lods
out
popa
into
cmpsb
xlat
fwait
cmp
xor
or
mov
in
nop
daa
mov
and
je
je
inc
vorps
les
pop
popf
int
rcll
push
adc
jne
sub
pop
pop
mov
aad
ja
mov
pop
sti
mov
add
xor
mov
int
push
pop
fistpl
call
push
roll
or
inc
push
xor
jl
jl
dec
xor
out
js
je
push
arpl
cmp
in
push
pushf
aad
push
int3
pop
addl
stos
loop
lret
sbb
loop
xor
sub
ficoml
xchg
aas
inc
or
add
cmp
sub
and
push
pop
sahf
xchg
sub
daa
mov
and
test
sub
push
mov
or
push
lods
call
push
fsubl
jecxz
test
or
loop
pop
push
ds
sub
lea
jno
je
lds
mov
dec
and
or
mov
adc
and
jae
push
fisttps
int
unpcklps
cmp
pushf
mov
daa
and
rorb
inc
mov
pushf
int
sub
cmp
test
jp
inc
cmc
jle
mov
jns
or
mov
loope
cmc
xor
sahf
adc
xchg
sbb
je
lods
pause
adc
ret
cmp
jae
and
mov
test
je
movsl
scas
mov
je
out
xchg
and
adc
or
sub
inc
adc
aas
inc
ficompl
pushf
jmp
cmc
add
pushf
jo
hlt
scas
jp
int3
and
popa
push
cmpsl
pop
push
mov
clc
push
shlb
mov
sti
dec
pop
filds
cmp
adc
jne
sbb
je
pop
xchg
cli
pop
pop
rolb
mov
and
in
add
push
ljmp
and
ror
popf
inc
mov
inc
test
jbe
fistl
sti
test
ret
sarb
in
arpl
lret
push
repnz
orps
push
into
stc
pushf
jmp
mov
cmp
dec
scas
mov
push
inc
push
cmp
mov
push
lahf
add
dec
dec
sti
or
mov
movl
clc
fs
xor
dec
aas
popf
dec
mov
lcall
push
addr16
cli
or
push
insb
pop
mov
push
add
mov
inc
cmp
lcall
test
dec
sbb
test
pop
orl
push
or
aam
inc
pop
dec
cmp
andl
sub
push
add
sbb
ret
cmpl
pop
push
cmp
in
and
ret
jo
leave
cmp
mov
dec
out
data16
fldl
cmp
inc
jle
adc
idiv
mov
je
cmpb
je
xor
stos
push
inc
stc
mov
js
sbb
mov
std
rcll
and
mov
jne
mov
cmp
or
xchg
or
daa
test
movsb
inc
cltd
in
mov
test
pop
push
loopne
and
add
and
mov
xlat
imul
push
pop
lock
inc
mov
add
pop
mov
jle
xor
fildl
movb
loopne
cmp
incb
mov
fmuls
mov
jl
mov
pusha
pop
cs
fwait
jmp
pop
push
js
sbb
scas
daa
push
stc
cltd
rsqrtps
test
je
rolb
sbb
jmp
and
mov
push
jmp
mov
pop
enter
in
sbb
push
and
lcall
add
mov
jno
ret
mov
dec
push
pusha
cli
fsubrp
and
inc
pop
xor
fdivs
mov
imul
shll
in
ss
sub
inc
push
mov
sub
mov
cmp
cmp
add
pop
orl
stos
movsb
or
loopne
ficoml
lods
push
xor
lea
mov
sub
movsb
sub
icebp
in
and
adc
and
test
jge
mov
jne
mov
inc
cmpb
lods
sub
mov
insl
aad
inc
lret
sbb
xor
fnsave
mulb
inc
sub
mov
sti
sub
sub
cmp
icebp
push
push
mov
sar
testl
pop
in
cld
pop
cld
leave
inc
lret
and
lret
fcom
sti
cs
dec
pop
xor
cld
mov
add
movsb
mov
imul
push
out
lahf
push
and
inc
insb
dec
out
and
mov
call
xor
aas
je
hlt
in
enter
mov
loopne
std
js
repnz
in
out
and
cs
fmul
inc
sbb
clc
and
cli
push
in
xor
xchg
add
mov
xchg
ret
push
addr16
out
clc
cmpsb
jae
adc
fistpll
aam
push
xchg
cwtl
clc
out
pusha
test
invd
lock
sbbl
xchg
repnz
int
and
or
add
pop
cmpsb
jp
push
sbb
nop
lret
cmp
scas
cwtl
repnz
push
sbb
je
mov
dec
xor
cmp
movsb
repnz
sbb
iret
mov
cld
pushf
pop
push
adc
sub
cmp
mov
mov
aas
inc
outsb
jle
js
call
xchg
sub
pop
push
xor
jmp
test
je
out
out
and
pop
or
xchg
in
or
mov
mov
mov
push
fidivrl
in
sub
fiaddl
icebp
jge
or
cmp
out
fisubs
xlat
jno
sbb
aas
cld
mov
xor
cwtl
loop
jecxz
lock
and
lods
out
dec
sbb
jmp
loope
sbb
in
xchg
nop
loop
icebp
mov
push
or
pop
cmp
outsl
mov
addr16
push
iret
sbb
and
insl
adc
xchg
in
jmp
push
ja
pushaw
and
xor
pop
ret
push
ljmp
ljmp
fsubl
jmp
movsl
pop
cltd
fwait
cmc
dec
push
xchg
scas
shrl
cmp
icebp
sub
shr
inc
scas
inc
scas
cmpl
push
xchg
lret
jmp
xchg
ss
jmp
push
movsb
jbe
lea
fldpi
clc
cmp
adc
mov
clc
int
mov
xchg
aaa
ds
subb
push
inc
sbb
ds
mov
clc
sub
xchg
fiadds
cmc
dec
into
mov
inc
int3
test
mov
icebp
mov
and
sub
push
dec
movsb
xchg
add
mov
filds
push
shrl
mov
fstps
ljmp
and
bound
pop
insl
cmc
cltd
mulb
daa
lds
pop
int3
in
rcrb
and
imul
xchg
cmp
enter
mov
cltd
test
ja
cmp
push
ljmp
pop
jb
in
inc
pop
test
pushf
enter
push
cld
outsb
adcb
add
cmp
test
cmp
jne
lret
inc
inc
rolb
ficompl
pop
adc
jp
xrelease
dec
imul
push
inc
int
push
push
dec
xor
cmp
sbb
cltd
dec
add
loop
sbb
mov
popf
pop
insl
pop
sbb
mov
xor
jbe
sar
xor
adc
hlt
xchg
in
sub
jns
xchg
mov
xchg
inc
mov
popa
aaa
inc
jnp
xor
mov
xchg
pop
dec
icebp
push
adc
insl
int3
xchg
out
inc
push
adc
xchg
xchg
and
pop
mov
scas
pop
xchg
mov
push
in
aam
test
rclb
jo
jle
push
movsb
mov
push
fwait
push
sbb
inc
into
pop
add
pop
push
test
jle
mov
rclb
pop
push
pop
or
aas
xchg
inc
out
dec
faddp
pop
cmpsl
dec
aam
xor
inc
test
movsb
dec
jecxz
insb
jno
outsl
sahf
fildll
cli
in
xchg
inc
fistl
cmp
sbb
aaa
pop
xchg
add
fdivrs
push
mov
outsb
push
loopne
je
jg
adc
movsb
jne
sbbb
pop
test
and
mov
sti
jne
mov
inc
sbb
js
mov
xchg
mov
mov
sbb
testl
fists
cmpsl
clc
dec
mov
std
repz
cmpsb
pop
lods
icebp
popa
jmp
jne
jl
test
mov
test
mov
sub
pop
loope
jne
jns
addr16
push
fadds
cmp
sub
mov
jo
das
lcall
insb
out
rorl
dec
scas
hlt
cmp
xchg
push
pminub
lret
push
stos
xor
dec
cmp
ss
fdivrp
xor
push
sbb
sbb
pop
fstps
inc
daa
test
shll
xor
mov
rorb
sti
in
repnz
fadd
sbb
adc
and
sarb
push
rclb
pop
lods
or
or
mov
lret
xchg
cmpsl
sahf
adcl
test
je
push
inc
fcompl
dec
scas
fildll
fwait
loope
enter
ljmp
pushf
pop
pop
mov
pop
hlt
scas
and
cmp
xchg
popa
and
add
sbbb
insb
or
push
push
cmp
rclb
jle
scas
insl
jne
or
cmp
push
fdivrl
or
xchg
gs
xchg
test
sbb
sbb
cwtl
lea
scas
sbb
push
cltd
pop
testb
xchg
adc
les
cmpsb
scas
push
jbe
outsl
push
or
stos
pop
mov
xchg
jne
inc
daa
mov
insb
jl
dec
inc
add
je
push
jnp
inc
mov
mov
lcall
xchg
loope
jo
inc
xchg
jecxz
xlat
roll
cld
push
sbb
je
testb
ret
je
xchg
push
sub
je
int
mov
adc
cmp
or
sbb
int
adc
push
push
pandn
test
add
scas
punpckhbw
lahf
xor
or
popl
add
notl
jmp
push
not
and
test
nop
nop
inc
jecxz
and
lret
or
push
sub
mov
js
lret
pop
adc
push
dec
adc
dec
add
aaa
test
push
mov
dec
adc
push
mov
lahf
sbb
push
push
ret
dec
sub
mov
mov
or
add
sbb
jmp
pop
pop
mov
fdivl
mov
outsl
dec
nop
call
cmp
popa
arpl
call
mov
stc
adc
icebp
out
sbb
ja
aad
fs
aaa
and
dec
push
jne
xchg
enter
inc
lods
addr16
stc
push
nop
sbb
mov
xchg
ret
jno
mov
sbb
xor
cmp
inc
pop
xor
icebp
ucomiss
push
dec
jge
repnz
push
call
xor
orb
xchg
aam
fnsave
sahf
stos
bound
rorb
mov
mov
and
adc
push
enter
sbb
xor
and
loop
scas
mov
lcall
fdivl
sbb
xor
inc
jnp
dec
in
pusha
lods
mov
adc
sbb
inc
ret
push
jmp
push
gs
or
sub
mov
sbb
add
int3
pop
mov
mov
rorb
mov
mov
mov
movsbl
lock
xchg
inc
jne
insb
cmp
sub
test
test
fdivrs
jns
jl
sub
ss
mov
rorl
mov
outsl
ja
sub
hlt
out
add
daa
insb
orl
pop
mov
daa
mov
js
xor
push
xchg
push
cmp
fcoms
lret
mov
in
ret
cmc
pushf
push
sub
or
sub
cmp
call
jle
std
pop
lods
sub
xchg
mov
cmp
rcll
jb
icebp
stos
inc
arpl
sar
add
rorb
push
lods
inc
aad
xor
bound
push
cmp
jae
pushf
test
adc
lea
pushl
push
sub
adc
lret
adc
cmpsb
or
sbb
inc
mov
dec
sti
mov
sbb
fcompl
sbb
dec
pop
call
mov
mov
js
clc
mov
push
dec
call
fsts
cmp
orps
test
ret
dec
icebp
push
lcall
in
xor
xchg
mov
push
dec
in
popf
dec
adc
cmp
mov
in
pop
push
dec
cmp
xor
cmp
ds
inc
in
mov
push
mov
sub
loope
xchg
mov
push
fcoml
xor
mov
adc
mov
pop
je
pop
mov
push
mov
cmp
jb
xchg
nop
and
dec
sub
jg
aaa
jmp
push
mov
push
enter
sbb
dec
call
push
mov
test
insb
sbb
icebp
loopne
jae
pop
mov
sbb
push
add
mov
cld
imul
adcl
adc
lods
call
push
pop
xor
push
or
mov
push
andl
shll
movsl
jne
movl
sub
js
out
inc
mov
sar
ret
push
test
xchg
push
repz
push
data16
pop
test
mov
ljmp
cmc
int3
cmp
adc
mov
sbb
jne
adc
sbb
fnstsw
aam
mov
fstps
xor
xlat
fdivs
adc
and
je
jmp
sub
sub
inc
adc
lds
jge
dec
sbb
shl
jo
add
mov
push
js
and
mov
adc
dec
pop
repz
orl
loopne
call
sbb
mov
iret
mov
rorl
arpl
dec
je
or
dec
mov
test
es
mov
ror
xchg
cmp
in
insb
ds
ja
push
inc
imul
cmp
aaa
push
ss
mov
or
mov
push
add
jae
and
adc
aam
add
and
push
into
mov
jb
cmpsb
mov
sub
into
leave
xchg
mov
inc
sbb
in
std
push
push
cmp
test
adc
mov
xchg
addl
imul
subb
add
push
bound
insb
mov
pop
push
add
add
push
popa
daa
stos
les
push
cli
jl
mov
add
int3
fcompl
adcb
mov
idivb
sbb
adc
dec
std
sbb
iret
andb
xchg
jge,pn
fisttpll
and
cmp
adc
jns
xor
mov
dec
mov
rolb
neg
cmp
xor
fisttpll
push
into
pop
xor
inc
push
xchg
xchg
not
cwtl
rolb
sub
xor
and
popa
orb
mov
sbb
jge
push
cli
test
mov
xor
les
loop
aas
push
imul
or
xor
sbb
mov
call
scas
in
jo
push
mov
test
xchg
pop
inc
or
cmp
xor
push
stos
push
push
in
dec
push
xor
lods
and
lret
xor
or
sub
insb
push
push
and
jbe
cmc
out
push
mov
cmpsb
daa
jnp
cmp
and
adc
sbb
mov
mov
pop
rorb
ret
mov
xor
mov
rol
subl
xchg
in
jb
js
jl
push
jmp
push
or
fsubs
push
sbb
inc
stos
test
pop
xchg
mov
push
xor
push
mov
lea
push
inc
xor
pop
insb
push
mov
cmp
and
fsubr
clc
mov
std
adc
insb
mov
jb
or
sti
mov
xlat
add
xchg
cs
mov
push
shll
adc
xor
pop
ds
int3
imul
push
ljmp
fdivrp
xchg
sbb
hlt
orb
pop
rcll
dec
hlt
bound
or
sbbb
mov
sahf
lcall
cld
mov
fwait
pushl
fimull
icebp
add
pusha
cltd
mov
cmp
addr16
push
dec
push
add
and
jl
cmp
jge
mov
mov
shl
lea
and
xchg
adc
inc
lods
mov
mov
cwtl
xchg
xchg
cmc
mov
imul
fsubp
outsl
jns
dec
inc
rolb
mov
xchg
dec
sub
mov
xchg
rcrb
push
sbb
aaa
push
test
push
xchg
lret
nop
js
add
mov
cmpsl
lret
and
mov
test
pop
mov
aad
scas
dec
mov
pop
mov
inc
mov
rorl
sahf
sub
pop
push
add
out
ret
and
push
cmpsb
ss
and
mov
cmp
clc
xchg
andb
sbb
pop
sub
jecxz
lret
mov
jl
mov
inc
add
sbb
add
jge
loope
iret
stos
inc
test
sub
bound
enter
xchg
mov
andb
rclb
jmp
shlb
stos
inc
add
nop
jno
mov
clc
sbb
push
sub
fnstsw
push
add
mov
movsb
scas
jae
push
aam
or
xchg
mov
rep
pop
int
adc
and
notb
lcall
mov
jne
xorl
rcrb
push
push
pop
mov
or
in
aam
test
dec
into
cmp
or
testb
pusha
mov
inc
fiaddl
mov
mov
mov
lds
cmc
rorb
mov
test
dec
mov
inc
pushf
ds
les
pop
pop
push
shlb
or
inc
call
pop
adc
stc
stc
jns
sbb
and
jmp
sub
mov
cmp
popf
inc
add
test
sbb
insl
jle
adc
dec
mov
adc
inc
scas
dec
test
shlb
leave
inc
push
lods
mov
les
mov
add
out
and
mov
ljmp
push
lods
test
ficoml
push
lret
pop
ljmp
sbb
push
ja
add
imul
stos
jb
jl
in
cmp
test
inc
sub
enter
lods
mov
loopne
aam
jb
xchg
movb
subb
ror
lea
or
pop
mov
rclb
cltd
push
loope
orb
pop
popl
dec
mov
push
mov
out
mov
push
dec
cld
pop
loop
dec
sbb
inc
sbb
adc
inc
in
negb
movsb
ss
insb
dec
jle
ret
inc
xchg
lods
enter
add
sub
xor
enter
pop
sti
and
loope
cmp
add
fsubr
rcrl
movsb
mov
aaa
mov
popa
ficompl
mov
mov
in
outsl
adc
dec
mov
dec
push
sub
add
mov
xor
push
imul
add
cwtl
or
dec
cld
push
mov
adc
jae
or
jne
xor
lods
jg
test
mov
test
and
push
imul
jmp
and
xchg
cs
dec
imul
ret
or
ret
les
mov
rorl
jne
mov
clc
subb
dec
mov
xor
icebp
mov
jl
leave
fnstsw
cld
jne
xor
fcomp
or
or
sbb
aad
lahf
sbb
and
jbe
pushf
andb
cmp
xchg
push
bnd
mov
cmp
fcompl
push
je
ljmp
sbb
add
mov
pop
or
pop
dec
sbb
pop
jno
nop
sbb
test
sub
jmp
testb
movsb
cld
lods
movsb
xchg
jp
pop
jns
ja
xor
aad
inc
push
or
and
bound
lret
xlat
cwtl
pop
inc
xchg
jns
test
add
push
push
test
mov
inc
int
push
mov
push
mov
mov
push
movsl
xor
int3
cmp
lcall
pushf
cs
sub
push
mov
jb
test
fs
push
adc
or
push
mov
xlat
pop
inc
xor
mov
lds
fsubs
clc
mov
and
or
inc
push
add
jmp
push
push
mov
push
stos
xchg
inc
dec
cmp
xchg
decl
mov
xor
push
mov
xor
xorb
lds
and
xchg
and
mov
xchg
sub
inc
jns
fmull
nop
insb
mov
sbb
push
nop
adc
lds
adc
adc
push
push
push
cwtl
in
adc
lods
ja
insb
cmp
jecxz
jno
lcall
or
pop
movsl
testb
mov
pop
and
sub
addl
lahf
push
and
and
xor
mov
or
ficoms
cmp
sub
imul
sub
in
fcoml
pop
push
cwtl
pop
mov
cmp
pop
std
and
pop
dec
sub
int3
jbe
mov
aas
rolb
loopne
push
or
loop
push
es
and
add
lret
pop
pop
movb
jl
push
enter
dec
or
jne
mov
adc
rorl
adc
xor
pop
ret
push
push
pop
jmp
xchg
loope
dec
adc
rclb
out
out
test
dec
mov
add
fsubr
std
hlt
dec
repz
sub
pop
cli
sbbl
test
scas
mov
rolb
inc
addr16
sahf
cmpsb
sbb
sub
ljmp
add
jp
xlat
push
fldcw
push
mov
mov
adc
loop
ljmp
lea
aam
fneni(8087
mov
xchg
fs
push
imul
xlat
lock
ss
rclb
insl
xchg
xchg
insl
lods
test
xor
add
sub
push
push
jl
test
je
push
fs
cmpl
enter
gs
sarb
adc
cmp
xchg
int3
mov
push
adc
out
mov
mov
sub
mov
cmp
cmp
sbb
popa
inc
mov
inc
scas
enter
or
pop
loopnew
adc
xor
sub
push
jb
fidivrs
aad
pop
push
sbbl
inc
inc
hlt
ja
movsl
inc
out
sbb
lods
les
pop
inc
roll
adc
stc
xlat
mov
mov
inc
sub
push
push
mov
push
outsl
test
imul
es
pushf
xor
es
push
lods
pop
cmp
jnp
xchg
push
pop
lea
pop
and
add
jae
repnz
or
test
jle
cwtl
dec
add
adc
dec
push
add
jl
andb
cmp
out
shlb
ljmp
inc
loopne
imul
xor
or
lods
xchg
ds
jns
pop
push
popf
shlb
icebp
ficomps
into
mov
fldcw
mov
shll
push
mov
pop
xchg
push
addr16
cmpl
push
cli
aam
je
loope
repz
jl
loopne
mov
clc
add
or
pop
cmp
hlt
jmp
or
mov
cmp
mov
xor
add
pop
popf
iret
in
add
fwait
je
sub
xchg
rcrl
test
add
push
xor
pop
mov
sub
rclb
fs
shlb
mov
aas
xchg
cmp
xchg
shlb
test
add
sbb
sub
outsb
sarb
cmp
pop
jbe
xchg
lea
mov
mov
push
push
nop
add
dec
imul
xchg
jge
sbb
xor
enter
pop
and
xor
cmp
mov
dec
or
inc
pop
inc
pop
mov
push
or
pop
rcrb
add
call
sbb
xor
shlb
daa
in
stos
mov
xor
dec
pushl
repnz
movsl
inc
test
inc
mov
cmp
int3
add
add
insl
dec
sbb
je
stc
and
aam
lcall
push
je
mov
mov
addb
mov
sub
mov
sub
out
int3
mov
xchg
sub
inc
popa
int
xor
mov
repz
add
mov
push
inc
add
mov
xor
lods
jle
fcom
cmpsl
mov
lret
jb
mov
xchg
push
shrl
roll
sbb
test
call
and
lods
sub
inc
inc
addr16
cmp
je
je
test
mov
mov
jno
push
adc
pop
xlat
cmp
imul
das
and
add
lret
jle
dec
xor
insb
sub
pop
cmpsb
je
cmp
mov
nop
jmp
mov
inc
jnp
leave
mov
test
mov
lea
jae
mov
roll
fiaddl
pop
sar
pop
and
inc
cmc
xchg
mov
adc
push
mov
stos
sbb
jmp
push
adc
inc
orl
dec
movsl
sarb
mov
mov
or
shll
in
out
sub
punpckhbw
jne
rclb
add
sbb
push
jmp
ljmp
flds
or
mov
xchg
shlb
push
fbld
arpl
clc
mov
fwait
ror
push
mov
into
push
in
or
fs
sbb
enter
adc
inc
in
bound
lret
mov
repz
adc
addl
out
gs
outsb
outsb
adc
cmp
fnstsw
cmpl
xchg
inc
xchg
mov
push
dec
mov
push
lcall
or
and
ds
and
jl
and
gs
cmpl
mov
ss
stos
push
cmp
jmp
and
cltd
adc
inc
je
inc
jbe
clc
cli
mov
sub
adc
xchg
pop
sbb
pop
in
mov
mov
push
stos
mov
cmp
sbbl
xchg
push
adc
push
jo
lock
fists
push
mov
out
in
cmp
jle
loopne
push
inc
popf
jg
inc
push
push
jo
cmp
mov
mov
out
mov
cltd
cmp
iret
ret
inc
pop
leave
arpl
subl
push
loope
lock
xchg
test
push
mov
fsubrp
lret
sbb
or
xchg
and
dec
clc
adc
adc
loopne
cmp
dec
imul
aas
sub
movsbl
push
push
bound
popa
jne,pn
inc
loopne
xor
es
test
pop
shlb
add
daa
mov
adc
insl
aam
cwtl
ja
icebp
jns
and
mov
pop
iret
fiadds
lods
pop
dec
in
add
push
roll
addb
jb
cmp
xor
sub
loop
in
push
dec
add
sbb
enter
jo
sbb
dec
inc
movb
mov
adc
sbb
dec
mov
hlt
push
xlat
stos
pop
adc
les
dec
mov
aas
inc
jns
sub
pop
push
cmc
pop
push
lods
insl
adc
pushl
adcl
push
jecxz
dec
adc
add
in
stos
add
xor
or
je
dec
adc
je
jmp
lods
and
push
lret
xlat
adc
sbb
shr
add
dec
inc
mov
fldcw
nop
add
pop
lods
sub
dec
jp
inc
data16
mov
popa
and
scas
xor
mov
cmp
mov
cmp
sub
mov
push
mov
push
push
test
sbb
aas
push
and
lret
mov
and
inc
add
xchg
lret
dec
sbb
push
adc
cs
fldenv
xchg
or
mov
cld
add
push
stos
xlat
cmpl
int3
loope
mov
leave
push
cs
int3
pop
out
or
dec
push
jb
add
jnp
mov
and
jno
pop
push
mov
dec
addl
push
leave
mov
fisttpl
xchg
mov
jmp
or
test
scas
mov
bound
and
shlb
xor
ret
cmp
mov
in
and
int3
inc
inc
cmpb
push
fldenv
adc
adc
inc
jne
stos
mov
cmc
xor
jmp
sub
push
inc
mov
and
or
fiadds
aaa
sbb
test
dec
xor
xchg
add
mov
jbe
mov
dec
cmp
cmp
je
mov
mov
or
int
sbb
mov
cmp
sub
std
inc
pop
or
cmp
xor
add
jmp
aaa
push
mov
xor
sub
insl
je
fbld
jmp
dec
inc
mov
and
push
scas
cmp
lock
arpl
and
cmp
jnp
add
hlt
je
cmp
je
cmp
mov
or
icebp
jmp
sbb
add
cmp
jne
out
sbb
and
pop
cli
sti
in
push
add
push
jmp
xor
mov
addl
and
lds
or
add
xor
repz
dec
add
sahf
out
and
rcrb
dec
push
push
jbe
push
jge
or
jne
clc
xor
shll
fnstcw
ret
ret
add
add
sbb
jne
cmp
or
or
sub
or
xor
sub
xchg
lods
mov
roll
loopne
mov
into
cmp
pop
sysexit
mov
jne
mov
add
in
lea
mov
mov
pop
mov
sub
mov
cwtl
sub
xor
ret
xor
test
dec
and
mov
push
iret
push
popf
sub
pop
add
push
sbb
push
jns
sti
push
sub
repz
cmp
or
dec
sbb
cmpsl
mov
adc
adc
pop
outsl
mov
cmp
jmp
push
adc
xor
inc
in
arpl
les
out
or
push
cld
gs
sub
add
shlb
pop
pop
pop
enter
add
leave
jne
inc
mov
push
adc
int3
pop
mov
into
jmp
call
pop
je
jne
inc
mov
sbb
push
mov
shr
cmp
movb
adc
mov
ret
xor
jns
add
inc
pop
and
mov
fstl
rcrb
mov
xor
or
inc
pop
lods
adc
inc
cmp
jb
mov
add
adc
push
push
mov
sbb
ret
add
push
push
cltd
adc
iret
adc
pop
ret
dec
add
adc
stos
or
or
aas
stos
add
mov
adc
repnz
sub
or
fcoms
push
notl
pop
sub
into
cmpsb
push
push
mov
dec
push
cs
test
mov
scas
sar
insb
or
xchg
in
ret
mov
and
shlb
xchg
add
push
pop
stos
jne
mov
movsb
scas
nop
int3
mov
jne
push
push
mov
les
and
mov
mov
mov
ror
jb
aam
arpl
jp
mov
push
jge
push
xchg
sub
in
lods
sub
shlb
and
mov
xchg
fsubs
rorl
aam
gs
push
cwtl
mov
aam
mov
orl
dec
dec
pop
adc
inc
lea
push
push
mov
push
push
and
cld
mov
mov
movsl
push
movsb
gs
mov
xor
push
in
bound
jg
mov
add
or
add
cmp
je
and
nop
mov
inc
popa
adc
dec
and
ljmp
popf
movb
mov
adc
push
push
aam
dec
insl
lcall
aam
inc
mov
or
cmp
shll
in
movsl
mov
sub
imul
push
into
pop
adc
repnz
mov
pushf
imul
pop
pop
cwtl
imul
adcb
pop
aad
popa
dec
add
jecxz
adc
mov
inc
xor
push
and
int3
cmp
pop
pop
es
adc
sub
xchg
add
test
and
jo
dec
cld
cli
mov
push
xor
and
cmp
int3
repz
mov
jo
mov
push
outsl
je
pop
lds
xor
jbe
inc
stc
or
push
jle
outsb
test
adc
xor
lock
sbb
mov
push
mov
sbb
jo
or
movsb
pushl
mov
or
inc
or
sbb
nop
ja
or
hlt
dec
adc
cmp
mov
std
or
jns
jno
mov
loopne
loop
jns
out
out
jmp
or
cltd
sahf
add
aam
aam
mov
flds
fimull
popa
sahf
rclb
stos
pop
mov
into
les
or
or
repnz
test
pop
test
ds
repz
int3
rcrb
lcall
xorb
push
cmp
in
int3
push
repz
clc
add
push
mov
es
ljmp
pop
mov
mov
clc
cld
in
add
enter
hlt
iret
jmp
aad
mov
test
add
lds
iret
and
adc
or
pop
sub
mov
mov
test
in
push
shll
push
mov
imul
xchg
sub
adc
lock
dec
imul
je
inc
cmp
dec
sub
dec
add
and
inc
inc
jmp
xchg
cmp
cmp
cwtl
jl
push
sbb
jge
push
sbb
lret
pop
call
sub
pop
or
inc
inc
pop
je
push
push
test
jge
add
push
sbb
push
lcall
insb
add
test
ja
jb
cmp
ja
push
jo
mov
push
cmpsb
fildll
mov
fists
xorb
pop
ja
jb
addl
push
pop
ja
repz
cmp
xor
es
cmp
and
push
sbb
sbb
imul
add
sub
pop
sbb
add
adc
jecxz
push
pop
push
and
adc
pop
cld
push
in
imul
xorl
rcll
jno
int
inc
pop
sub
push
jns
jecxz
cmp
out
cmp
aad
gs
jge
test
cld
mov
xor
and
in
jmp
fiaddl
mov
pop
mov
call
mov
orb
sub
xchg
loopne
das
cmp
add
movb
and
pushf
mov
pop
adc
mov
dec
cmp
ljmp
cmpsb
cmovae
adc
xor
or
lea
shr
stos
sbb
fldl
cmp
iret
and
mov
pop
sbb
test
aad
sti
xchg
movsb
test
jo
mov
in
jecxz
leave
fdivrl
jns
frstor
ret
enter
fmul
xor
dec
into
mov
dec
pop
rcrb
and
clc
and
stc
inc
cmpsb
xor
out
fwait
in
aad
repnz
test
jmp
pop
dec
jmp
mov
mov
shll
popf
dec
outsl
and
shr
addl
inc
mov
sub
sbb
scas
or
fsubl
stos
jno
push
mov
test
addl
xor
mov
nop
sarl
addr16
dec
in
mov
ret
adc
hlt
or
scas
testb
pop
xor
call
es
repnz
xchg
mov
nop
je
out
push
nop
adc
sub
mov
or
fstpl
aam
dec
inc
push
aad
or
sar
popl
cmp
mov
adc
and
and
cmp
das
or
in
mov
cmp
sti
hlt
mov
popf
pop
and
jae
outsb
push
jno
repnz
rol
test
adc
pushf
fimull
scas
jne
sbb
inc
jge
aad
test
std
leave
mov
stos
pop
out
adc
mov
mov
in
rorb
fiadds
inc
xor
push
lcall
cmpsb
aad
subb
ret
fcmovu
nop
mov
je
mov
pusha
cmc
lock
add
and
and
push
xor
mov
in
or
cmp
cmp
mov
jp
jno
adc
push
pop
stc
xor
ljmp
inc
fwait
call
in
xor
mov
rcrb
or
mov
xchg
inc
cmc
pop
repz
in
adc
cmp
lret
adcl
lock
sub
xor
adc
cmp
inc
mov
in
adc
pop
push
dec
cli
clc
mov
rcrl
cmpsb
lea
imul
fnstsw
cmp
fcmovu
pop
jo
jbe
aam
aaa
dec
daa
inc
mov
les
icebp
enter
test
pusha
cmp
stc
jno
scas
xlat
rolb
jne
jb
xchg
inc
mov
adc
les
push
sbb
or
pop
out
cmc
das
push
mov
push
mov
ljmp
in
mov
mov
or
dec
mov
mov
or
inc
push
mov
sarb
bound
mov
nop
mov
dec
adc
int
jno
into
push
and
shlb
sbb
int
jl
dec
fadds
nop
decb
sbb
pop
mov
cwtl
enter
push
mov
sbb
lret
pop
add
xchg
shlb
adc
test
leave
jnp
or
jne
pop
inc
mov
sub
or
sub
icebp
mov
cmp
jmp
mov
clc
push
push
lcall
cmp
ror
inc
xor
movl
cmpsl
jl
inc
mov
and
inc
inc
mov
mov
or
lea
fstl
aam
mov
ret
cld
fmuls
dec
inc
test
rolb
pop
mov
mov
jns
mov
pop
cs
test
sbb
mov
or
rolb
mov
roll
ljmp
or
adc
inc
inc
adc
nop
cmp
jns
inc
and
or
test
or
adcb
cmp
cli
add
rorl
rolb
fldl
push
cmp
mov
cwtl
or
jge
mov
leave
xchg
fdivrs
add
mov
clc
pusha
pop
adc
call
mov
mov
mov
inc
push
cwtl
jne
inc
xor
cmpsb
add
sub
inc
mov
adcb
shrb
sbb
lods
cwtl
adc
push
push
mov
mov
sub
mov
inc
add
iret
sub
orl
xor
jae
lret
or
and
aam
nop
out
rcl
mov
outsb
adc
cmp
jne
hlt
leavew
xor
ret
adc
xor
dec
cltd
adcl
jecxz
sub
add
cmp
jl
jmp
push
mov
es
fiaddl
xchg
and
jp
stc
mov
dec
mov
xor
xor
ret
enter
push
mov
ret
mov
enter
scas
xchg
fiadds
bound
mov
jne
sub
cmp
mov
cmpl
sub
xor
movsl
dec
add
mov
cmp
mov
adc
insl
sbb
jle
repnz
adc
add
mov
aaa
js
or
cmp
je
inc
mov
mov
lods
pop
mov
loopne
sub
or
pop
mov
mov
mov
mov
cwtl
adc
mov
pop
mov
pop
pop
pop
fwait
popa
mov
popf
ficoms
inc
ret
loopne
fisubs
icebp
or
add
sbb
aam
je,pt
push
push
ljmp
jo
sub
mov
iret
inc
es
xchg
shr
adc
push
and
int3
test
add
cmp
add
xor
xor
jo
cmp
je
xchg
push
sub
ret
mov
sahf
xchg
and
xchg
push
lock
in
sub
jge
in
adc
sbb
adc
push
mov
push
sbb
int3
xchg
add
add
push
aas
outsl
sbb
mov
xor
leave
sub
cmp
sub
loop
rcr
cmp
popa
gs
push
xchg
stc
fcoms
movsb
cld
enter
nop
xor
inc
mov
hlt
fisttpll
xchg
cld
dec
add
aad
dec
cmp
pop
xor
movsb
stc
or
jmp
cmp
out
cmp
and
daa
xor
test
ret
dec
loopne
and
pop
or
mov
and
jp
imul
adc
pop
add
movzwl
mov
push
mov
xchg
xlat
sub
ss
lret
repz
fsubr
call
in
iret
sub
jmp
mov
test
and
popa
mov
fs
cmc
fwait
lea
cmp
dec
in
rolb
push
jecxz
xchg
mov
cmpsb
imul
push
das
push
cmpsb
jo
push
int3
mov
rcrl
push
cwtl
ret
fnstsw
sub
lods
outsb
push
lret
xor
sub
icebp
fcmovnb
or
dec
sbb
fdivr
mov
cmp
inc
pop
pop
push
aam
and
jmp
bound
push
or
adc
sub
shlb
aas
movsb
push
sahf
sbbl
mov
cmp
or
sub
vmovups
ds
lods
push
jmp
cmc
data16
inc
lret
inc
add
inc
mov
mov
fwait
loopne
jmp
and
inc
dec
adc
push
repnz
jl
les
inc
inc
rcrl
loopne
push
test
push
add
rorb
cmpb
sub
push
mov
inc
clc
mov
mov
sbb
stos
inc
cmp
mov
shrb
sub
subb
dec
push
cmp
jge
cmp
je
inc
xchg
call
add
sbb
adc
fdivrs
mov
or
sbb
xor
add
adc
mov
clc
aaa
add
mov
cmp
inc
mov
out
clc
leave
sub
lret
push
sbb
cli
push
incl
and
push
loopne
push
mov
loop
pop
nop
or
jne
aas
pop
mov
add
mov
mov
cmp
jne
jmp
inc
mov
add
and
clc
mov
cmp
jne
mov
xchg
adc
sbb
mov
push
push
dec
pop
repnz
cmp
pop
fucomip
adc
cwtl
or
xchg
push
mov
jne
and
sahf
mov
xchg
cld
add
dec
out
rorl
stos
adc
sub
test
jb
inc
push
test
sbb
test
push
loopne
pop
inc
test
je
push
add
adc
mov
add
xor
cmp
clc
ret
add
add
xor
mov
pop
test
je
into
cmp
filds
add
dec
xor
sub
jmp
cmp
or
mov
test
fld
jmp
add
jmp
mov
inc
xor
and
shl
jmp
mov
and
jmp
icebp
mov
add
cvtdq2ps
jno
test
pop
ret
adc
jb
mov
xchg
movb
test
je
imul
pop
push
outsb
ret
popa
mov
daa
sbb
xor
xor
gs
mov
xchg
inc
inc
fldenv
pushw
sbb
inc
or
push
add
sbb
loopne
and
adc
jns
jne
add
pusha
out
add
push
int3
or
mov
mov
or
repnz
inc
neg
dec
mov
inc
cmp
rclb
scas
pop
jl
xor
or
jp
push
fistpl
add
and
and
or
pop
cmpsl
xchg
xlat
nop
and
loopne
and
sub
das
dec
lahf
inc
lret
std
insb
and
mov
push
jmp
out
insb
cmpsb
cld
adc
jae
scas
sub
scas
push
out
cld
or
movsb
xchg
push
fisubrl
cltd
push
add
fwait
shrb
js
jne
popf
push
jecxz
jne
int3
and
adc
add
sahf
mov
mov
add
cmp
jbe
data16
mov
cmpb
add
icebp
and
or
addl
mov
faddl
push
mov
cmp
xlat
add
loopne
add
test
rorb
mov
push
mov
add
sbb
and
pop
adc
add
add
loop
push
in
pop
lods
xor
lea
pop
jns
add
gs
sub
mov
mov
pop
hlt
mov
sahf
ret
fs
push
dec
inc
xor
inc
cmp
in
inc
sahf
out
sub
in
call
jns
lock
hlt
clc
testb
out
cld
cld
lea
add
lock
push
sbb
shll
ficompl
cmp
nop
hlt
call
mov
lret
xor
decl
into
jl
cld
and
xor
or
cmpsb
jecxz
push
push
mov
rclb
icebp
push
iret
stc
sub
push
lret
inc
in
in
nop
cmp
cmc
sbb
pop
add
call
mov
ja
cmc
adc
aaa
scas
out
out
das
pop
scas
mov
xchg
dec
leave
popf
pop
clc
insl
pop
cmpsb
aam
ret
repnz
fsub
cmp
hlt
cld
add
pop
push
lret
repz
sbb
jns
out
sbb
adc
adc
out
sahf
out
or
or
repnz
nop
add
lret
xor
pop
lret
ljmp
jnp
in
mov
jle
ds
jge
inc
push
sub
add
mov
imul
sahf
add
mov
clc
adc
lock
lret
ret
stos
loopne
mov
stos
push
jb
sbb
push
test
adc
add
and
lret
inc
es
in
or
into
roll
enter
adc
dec
loopne
lea
sub
ret
iret
cmp
dec
std
cld
sbb
sbb
mov
inc
mov
or
mov
dec
test
or
rorl
adc
int
jecxz
adc
or
jbe
push
rep
cmc
sbb
cli
push
dec
test
xor
adc
loope
sbbl
mov
add
sbb
hlt
insb
mov
ret
mov
add
or
mov
cmp
jne
or
cmp
sbb
or
aaa
adc
cmp
int
push
cmp
adc
ret
inc
rolb
mov
rcl
inc
ret
ret
es
add
sbb
loopne
lret
jl
or
insl
ror
leave
rcll
mov
mov
cmp
pop
push
fnstsw
adc
iret
inc
lret
adc
pop
imul
test
push
cmpb
cmp
movzbl
push
mov
jmp
or
xor
mov
fwait
inc
jmp
aaa
and
les
sub
mov
xor
sub
push
or
or
or
jo
adc
inc
shr
iret
cmp
inc
add
ret
jne
neg
pop
subl
sbb
mov
pop
mov
mov
push
subl
ja
push
je
mov
mov
dec
imul
mov
or
shrb
call
mov
out
fwait
rclb
pop
sub
dec
and
addl
or
dec
dec
sub
cmp
sub
mov
fidivrs
cmpsb
dec
cmpl
in
ja
jp
or
outsl
xorl
sub
or
lock
push
sbb
sbbb
loopne
pop
data16
movsb
add
mov
and
adc
xor
push
pop
out
xchg
orb
out
inc
ret
push
cli
scas
xorb
or
inc
data16
xchg
mov
push
inc
mov
out
push
ss
mov
jge
es
das
jmp
sbb
enter
mov
add
bound
adc
sbb
or
push
pushf
dec
inc
pop
lea
push
pop
mov
mov
into
or
shll
or
add
shl
lea
loop
adc
jne
test
push
add
push
mov
and
cs
into
pop
shl
xor
dec
xor
pop
add
inc
jmp
movsl
jb
push
or
mov
inc
loope
xchg
shll
add
xorl
mov
ret
pop
cmpsl
loopne
orl
and
fs
adc
mov
lods
xchg
ss
mov
add
cmp
test
je
inc
fwait
loopne
in
or
push
shl
not
add
mov
mov
divl
lret
xor
shll
push
mov
jne
and
roll
or
xorb
inc
out
or
inc
cld
cmp
lret
mov
fdivl
cmp
jmp
jecxz
mov
cmpsl
jno
test
std
inc
out
dec
cld
jge
insb
push
xor
xchg
je
xchg
jg
adc
sub
dec
add
or
mov
push
or
pop
add
sbb
loope
jne
orb
dec
cltd
cmp
and
lock
ret
dec
inc
sbb
push
imul
andl
dec
pop
cwtl
or
sbb
pop
pop
pop
data16
shl
jne
lea
mov
rcl
inc
dec
sub
add
mov
test
repz
mov
je
hlt
jns
fucomip
mov
ret
adc
dec
rorl
inc
cmp
lods
pop
and
lea
sbb
sub
retw
push
or
mov
jne
bound
or
mov
adc
and
inc
dec
mov
xchg
dec
imul
and
adc
testl
xchg
xchg
mov
cwtl
test
mov
test
cmp
adc
adc
ss
xchg
xor
test
push
pusha
sub
add
fists
add
dec
adc
cs
cwtl
je,pt
jb
lds
push
push
jns
jbe
loopne
gs
mov
add
fsubr
sbb
insb
xor
add
gs
dec
jmp
push
sub
jbe
hlt
or
adc
loop
mov
mov
aam
and
xchg
icebp
push
jg
je
inc
in
jmp
jne
jo
mov
les
mov
push
pop
or
mov
movsb
xchg
ja
xor
ja
mov
mov
ret
das
dec
mov
inc
insb
popf
jg
test
imul
dec
je
in
enter
cld
dec
cmp
in
mov
or
js
pop
pop
add
addr16
and
inc
push
lret
in
dec
lock
and
xchg
mov
cmp
push
mov
lock
jb
dec
rclb
fwait
pop
xchg
cmp
and
movsl
push
sbb
sbb
ja
xor
mov
jbe
testl
xor
cld
inc
jae
inc
lret
shrl
or
pusha
jae
mov
shr
mov
and
mov
jo
xor
xor
xor
inc
or
rolb
add
push
jmp
adc
pushf
inc
loope
es
pusha
mov
outsb
jmp
sysret
inc
add
inc
insb
out
sbb
repz
mov
sub
pop
inc
mov
mov
dec
adc
mov
bnd
push
sbb
inc
ljmp
and
push
add
jmp
and
ds
std
jmp
cltd
or
sub
test
das
fs
adc
cs
jmp
out
fidivrl
mov
filds
lret
loope
scas
popf
mov
test
addr16
inc
add
into
int
sub
das
cli
dec
and
mov
mov
lcall
mov
aas
sbb
lods
das
mov
dec
sbb
cmp
cmpsb
dec
aas
mov
pushf
inc
cli
mov
filds
inc
aam
cmpsb
addb
mov
and
xchg
dec
sub
adcb
adc
mov
lret
pushf
les
inc
inc
add
fdivrs
jb
push
mov
inc
sub
mov
ljmp
jb
pushf
dec
dec
jmp
imulb
test
adc
loopne
sahf
pop
dec
cld
sub
xor
out
ret
mov
orw
inc
adc
add
clc
nop
push
testb
mov
xor
adc
and
inc
sub
inc
enter
or
jne
mov
mov
push
sbb
jnp
aam
add
add
pop
push
nop
pop
je
cmpsl
xchg
shll
xor
fnclex
ret
ret
mov
cmp
movl
rcr
jbe
leave
cmp
enter
test
shlb
inc
lea
aaa
enter
adc
ret
test
mulb
int3
pop
imul
xchg
rolb
cltd
add
pop
sbb
pop
ds
outsl
adc
movsb
aaa
jae
icebp
jno
mov
shr
inc
sarl
mov
mov
or
inc
shr
rcr
shr
rcr
or
jne
div
mov
or
or
sbb
add
jb
cmp
xlat
add
pop
cmp
popa
push
js
sbb
out
xchg
jp
out
inc
jmp
loop
mov
and
sub
push
adc
sub
out
enter
cwtl
out
cmp
or
sbb
or
enter
neg
add
push
cmpsl
stc
push
push
push
xchg
xchg
ret
inc
cmpsl
add
add
mov
shl
mov
sbb
dec
jmp
pop
adc
push
mov
jmp
fnstenv
into
cmp
icebp
sbb
lahf
lahf
jne
adc
dec
inc
leave
xchg
jg
pop
adc
mov
jle
push
cld
mov
cld
xlat
mov
add
cmpb
cmp
jl
jg
sub
mov
push
xor
sbb
jmp
mov
push
push
cld
push
popa
mov
pop
sahf
and
mov
cmp
inc
dec
inc
es
dec
pop
out
and
popf
adc
or
or
jmp
pop
adc
clc
shll
xchg
dec
adc
mov
inc
arpl
xlat
add
or
je
test
pcmpeqw
xorb
inc
dec
mov
cmp
leave
add
dec
push
add
add
push
mov
add
in
and
loopne
mov
inc
sub
cmpsl
pop
fadds
lock
adc
cmc
mov
ljmp
mov
sbb
pop
add
or
les
lret
sbb
out
jne
adc
adc
shlb
and
jp
dec
test
push
test
inc
and
leave
jecxz
movsb
cmp
leave
insb
pop
adc
bound
orb
enter
mov
pop
jg
and
and
mov
or
and
and
adcl
pop
and
mov
jle
ret
jmp
mov
sar
fs
dec
or
add
andb
mov
pop
or
or
add
dec
xchg
leave
das
subb
push
mov
jns
bound
testb
std
add
shll
push
pop
xchg
int3
test
jns
inc
or
pop
adc
xchg
ljmp
clc
dec
pop
adc
pop
adc
and
or
cmp
fidivrl
jecxz
sbb
jne
xchg
mov
dec
or
dec
pusha
jbe
shll
push
cld
in
push
sbb
pop
cmp
and
sub
inc
sub
cmp
pop
mov
add
mov
pushf
outsl
lea
lret
mov
inc
xchg
fistpl
sbb
int3
daa
mov
add
outsb
adc
xchg
test
orb
inc
xor
jmp
das
jmp
or
xchg
test
repz
sbb
or
mov
adc
je
dec
dec
inc
xchg
mov
xor
call
push
push
fsubrl
mov
es
jb
jo
sub
add
pop
lea
shr
add
cmp
adc
call
sub
add
mov
or
mov
shlb
or
cld
cmp
jb
mov
dec
pop
rcl
out
add
xor
or
sbb
add
push
push
jb
jne
mov
or
mov
data16
jae
shlb
scas
movb
lods
cmp
add
or
inc
pop
jb
cmpb
jne
and
sbb
je
push
inc
imul
adc
add
inc
jb
or
addb
nop
insl
cmpb
xchg
or
leave
inc
xchg
push
mov
andb
add
stos
and
inc
sbb
fldl
stc
pop
je
data16
cs
loope
nop
jmp
lea
pop
xchg
rorb
iret
xor
clc
dec
inc
jl
test
je
sub
mov
xor
hlt
dec
fs
adc
inc
shll
dec
jae
push
add
jns
sbb
cmc
movsl
mov
xchg
dec
jb
stc
stc
incb
fidivrs
inc
sub
out
pop
jae
cmp
cld
push
les
xor
loope
xchg
cmp
pop
xchg
mov
and
ret
dec
add
pop
sahf
mov
or
or
lea
push
pop
jns
hlt
jno
ret
stos
push
aaa
insl
dec
add
outsb
add
sarb
jge
shrl
orl
jmp
sub
jnp
cmp
xchg
sbb
gs
fcoml
and
cltd
xchg
loopne
je
or
mov
cmp
call
pop
or
xorb
pop
pushf
jge
call
xorl
mov
push
adc
sbb
pop
sub
repz
call
mov
jne
or
xchg
jge
jno
or
dec
ret
sarl
cwtl
or
jae
sbb
pop
or
jb
test
xor
lret
ss
or
scas
add
clc
ret
xchg
insl
mov
pop
jae
stos
adc
pop
sub
add
test
fidivrs
add
call
jne
movsl
adc
inc
add
and
cltd
or
sub
ja
sub
fwait
sbb
daa
notb
js
and
fidivs
jmp
sbb
pop
data16
sbb
neg
pop
cmpsb
test
mov
lds
add
in
xor
insl
nop
outsl
movsb
clc
int
shlb
mov
cmp
xor
mov
mov
scas
push
inc
push
inc
data16
sub
push
pop
mov
fincstp
sbb
mov
repnz
lret
rcrb
mov
inc
xor
leave
cmp
push
add
mov
in
xchg
lock
lods
adc
or
pop
mov
lret
add
and
imull
dec
loop
inc
lahf
xchg
test
pop
fistps
cmp
xchg
pop
and
jmp
aaa
rorl
adc
les
sbb
fwait
mov
push
adc
in
lahf
sbb
inc
dec
xor
dec
sub
or
inc
sub
inc
cmc
push
and
mov
xchg
sbb
gs
aas
inc
decl
xchg
insb
sbb
shlb
loopne
loope
add
in
mov
xchg
call
out
les
pop
call
lret
xchg
lock
or
dec
shll
bound
adc
rcll
and
sbb
icebp
arpl
add
inc
pushf
rcr
cmpsl
pop
int3
ffree
xor
or
out
or
pushf
pop
jecxz
lcall
adc
iret
mov
aad
push
push
mov
mov
stc
sub
jo
and
stos
inc
popa
inc
stos
outsl
mov
cs
js
jo
inc
fdivp
pop
adc
ror
cmpsb
adc
lods
xchg
mov
pop
js
xor
test
dec
bound
sub
andl
stc
adc
jno
mov
and
mov
sub
mov
or
test
lds
and
sbb
or
dec
cmc
and
lods
aas
push
or
pop
stos
sti
pop
outsb
test
in
or
push
je
inc
repnz
add
sub
push
dec
push
or
xor
dec
adc
stos
mov
push
xor
clc
adc
mov
sar
inc
pushf
push
loope
test
mov
in
push
push
lea
mov
push
testb
rcll
push
push
inc
cmpsl
dec
or
inc
mov
pushf
dec
inc
adc
inc
mov
fsubs
push
and
jmp
inc
push
lcall
in
scas
adc
sbb
mov
dec
jecxz
hlt
push
dec
lock
pop
or
inc
cmp
in
faddl
les
adc
nop
pop
add
andb
loopne
adc
lods
add
or
pop
rorb
xchg
sub
subb
push
int3
adc
loopne
cld
fmull
or
in
add
or
pop
dec
dec
je
in
push
scas
pop
push
dec
in
cs
or
addb
sti
sub
inc
and
imul
lea
mov
gs
add
xorl
into
mov
shr
jmp
lock
aas
cld
push
lock
in
push
mov
jmp
dec
je
shll
mov
and
sub
mov
dec
std
or
and
ss
iret
add
jne
inc
inc
or
in
fidivs
repnz
shlb
lcall
sbb
xchg
xchg
jne
cmp
imul
sbb
dec
clc
addr16
and
mov
and
js
dec
xor
call
dec
jo
xor
push
mov
sbb
xchg
add
inc
cwtl
inc
xor
nop
adcb
les
xor
dec
xor
sub
out
lods
incb
dec
inc
mov
movsb
or
pop
rorl
aam
in
lret
jmp
rorl
ret
ret
and
sqrtps
pop
daa
pop
out
sbb
iret
add
push
gs
jl
and
jle
inc
aam
sbb
push
hlt
lea
cmp
loopne
rcll
call
sbbb
je
dec
call
jmp
lds
push
test
adc
push
mov
xor
dec
mov
xlat
jno
movswl
shr
mov
jne
cltd
inc
into
in
or
sub
arpl
xchg
and
andb
inc
cmp
shrb
push
mov
mov
cwtl
push
mov
add
xchg
inc
sbb
addl
leave
add
cmpb
cltd
xor
mov
arpl
mov
imul
call
imul
std
dec
aam
in
mov
ss
push
shrl
ds
xchg
adc
xor
sbb
in
mov
dec
or
pop
xor
sub
mov
fs
je
mov
push
and
movb
add
push
add
dec
and
je
cmp
jmp
inc
outsb
mov
and
fildll
or
mov
mov
jnp
les
or
xchg
add
inc
je
lret
mov
cmpl
and
mov
jmp
inc
ds
ds
loopne
sub
into
je
ret
sbb
jl
adc
or
add
sub
fimull
das
lds
nop
cmp
jne
and
jge
das
lret
les
or
testl
inc
mov
les
ja
mov
jg
movsl
or
sbb
cltd
push
push
push
push
incb
adc
lret
inc
cltd
dec
mov
ret
xor
mov
xchg
push
sub
xchg
movsb
or
add
pop
aam
inc
lahf
rorl
test
or
pushl
push
decb
in
cmpsb
stos
sub
add
mov
xor
dec
imul
cld
test
add
andl
xchg
test
pushf
sub
or
je
or
jp
and
push
ret
loopne
jne
hlt
or
xchg
rcll
push
jns
mov
mov
sub
in
stos
gs
stos
and
jne
mov
dec
faddl
and
jno
push
adc
inc
test
outsl
sbb
push
inc
cmovb
xor
xor
mov
dec
sbbb
dec
xchg
sub
mov
add
cmpsl
mov
jno
inc
call
adc
ja
ljmp
or
jb
in
jae
cmc
cmp
and
cltd
and
adc
decl
js
mov
mov
inc
popa
add
xor
lret
sub
popa
adc
inc
addl
dec
daa
jle
xchg
pop
inc
and
pop
test
and
cmpl
fs
pop
jg
jge
or
ret
dec
jle
pop
jl
ret
dec
sbb
gs
or
push
inc
sbb
cmp
aas
mov
pop
addl
xchg
adc
or
mov
xchg
push
xor
es
les
andb
and
mov
cmp
ror
xchg
jge
sub
cmovo
out
rolb
in
push
xorb
addl
jno
add
dec
mov
xor
cmc
out
cmpb
ret
mov
lret
xchg
out
sahf
call
adc
leave
inc
sti
xchg
sub
sbb
rcrb
hlt
repz
lds
push
ljmp
mov
mov
pop
inc
xor
hlt
jmp
dec
jg
je
push
insb
daa
ret
inc
je
add
mov
jne
adc
sarb
inc
cmpb
jne
mov
add
rcrb
mov
mov
imul
inc
bnd
push
insb
ja
jmp
push
sbb
mov
decb
dec
mov
sti
cmpb
pushf
nop
cmp
push
mov
mov
test
fs
pusha
addl
rorb
arpl
bound
call
add
lds
fnstenv
or
push
add
outsb
les
inc
push
movsl
mov
jnp
paddw
xor
sub
mov
sub
xor
pusha
cmpl
faddl
adc
pop
inc
into
inc
jmp
add
nop
sub
fs
add
and
out
mov
jle
imul
add
mov
je
mov
in
sub
jle
add
sbb
pop
jp
mov
xor
test
xchg
add
addr16
pop
gs
dec
pushf
xchg
mov
xchg
mov
lods
mov
jmp
sbb
inc
add
add
pop
cs
pop
push
inc
sbb
mov
cltd
pushf
imul
in
push
inc
call
cmp
cmp
pop
pop
mov
mov
inc
or
in
mov
xor
xchg
nop
push
movb
lahf
ss
add
cwtl
dec
lods
mov
and
pop
xlat
jns
dec
adc
in
jl
loope
out
jmp
dec
testb
add
int3
andb
fldcw
lods
cltd
cmp
dec
fdiv
ror
or
mov
and
lret
xor
mov
std
outsl
jns
fwait
add
mov
jno
daa
xchg
adc
mov
inc
cmp
hlt
loopne
jae
jecxz
arpl
aas
sub
mov
out
and
in
aas
pop
mov
adc
push
dec
add
xchg
and
scas
sbb
icebp
add
adc
enter
xor
enter
push
mov
test
js
jo
push
pop
ds
mov
enter
mov
pop
bound
adc
sahf
sbb
push
jmp
push
repz
nop
dec
imul
leave
jge
jnp
or
pop
jne
mov
inc
test
and
test
inc
cmp
popa
push
cmp
sbb
inc
cmp
jae
mov
jmp
sahf
add
mov
cmp
ja
rolb
add
ret
repnz
mov
mov
and
mov
or
jns
pushf
inc
dec
jne
xor
jmp
test
add
mov
jmp
pop
push
dec
fwait
adc
data16
popa
fwait
xchg
add
cwtl
jb
inc
inc
sahf
dec
data16
inc
shlb
ret
shl
add
leave
or
push
lcall
shl
arpl
sub
sar
dec
or
shll
adc
cmp
ljmp
enter
mov
pop
dec
fcoml
or
push
or
pop
ret
and
push
sub
cwtl
inc
clc
mov
aam
pop
sbb
cmp
dec
addl
add
mov
xor
loop
jb
mov
aam
addl
mov
jmp
add
shlb
loop
xor
add
xor
xor
mov
push
addr16
and
mov
fmuls
sbb
subb
fisubrs
xor
xor
pop
iret
add
jne
cmp
or
int
add
jg
mov
mov
shlb
cltd
add
mov
mov
out
mov
imul
jge
dec
fmull
pop
adc
mov
data16
jae
and
push
ds
aas
jo
cmp
adc
scas
add
shl
jmp
lea
shl
jmp
lock
ret
push
add
mov
negb
jl
shlb
ret
jo
add
filds
sbb
into
push
addr16
add
int
jecxz
rclb
sbbl
mov
jmp
repz
cmp
inc
sub
incb
or
and
and
inc
pop
repz
imul
cmp
movsl
xor
jecxz
nop
sbb
enter
adc
nop
or
flds
jmp
in
push
outsb
jne
mov
mov
test
add
push
testb
xchg
cld
dec
cmp
jae
pop
test
mov
dec
or
sub
add
loopne
ss
jle
push
shrb
and
mov
mov
or
loope
add
out
pop
mov
inc
adc
decl
js
mov
insb
adc
ret
push
sub
pshufw
scas
aad
scas
xchg
mov
mov
aam
scas
dec
lea
jno
mov
ds
or
cmp
ja
mov
inc
jmp
cmp
and
and
sub
inc
push
pop
lea
decb
push
ss
adc
movsb
inc
mov
or
cs
and
push
scas
or
dec
xchg
add
or
cmp
add
jns
mov
lret
cmpw
add
sub
cmp
add
mov
xor
add
mov
mov
mov
ds
cwtl
sub
jl
mov
sbb
and
jb
inc
arpl
or
shlb
add
testb
sbbl
lea
and
je
add
popa
jl
cmp
jg
sub
mov
adc
ljmp
inc
int3
cmc
and
sub
xlat
inc
xchg
jno
nop
test
mov
xchg
loop
or
imul
push
sub
push
sub
inc
push
je
inc
cmp
add
cmp
int3
div
push
cli
xchg
xchg
pop
xchg
les
dec
cmp
add
xor
xor
cltd
and
cmp
xor
push
mov
xchg
sub
xor
mov
push
aam
and
pusha
mov
mov
add
mov
adc
movsb
cmp
pop
push
lods
out
ret
add
mov
push
test
add
xchg
int3
addb
or
jmp
sub
mov
repnz
and
mov
lea
mov
shll
pop
pusha
add
push
or
cli
add
jle
xor
jmp
movsl
sbb
mov
int3
sahf
add
adc
in
add
sub
shr
xor
iret
imul
call
enter
push
dec
sub
rcrb
lea
hlt
mov
add
inc
mov
push
test
sahf
add
cli
add
cmp
jbe
push
pop
mov
cmp
jne
add
pop
add
mov
shr
lea
testl
decb
jne
and
push
cs
and
sub
pushf
mov
cmp
pop
add
mov
out
shll
pop
add
dec
insl
mov
mov
or
xchg
xlat
inc
fs
or
lcall
fidivs
mov
mov
sti
add
adc
dec
pop
cmp
jbe
mov
jle
mov
rorl
mov
cmp
cmp
je
std
xor
jno
imulb
jno
mov
mov
and
insl
pusha
dec
add
lea
aaa
jecxz
fidivs
fwait
cmpsb
sub
mov
xchg
dec
dec
aas
adc
icebp
add
or
or
jp
or
pop
ret
roll
lea
rcrl
cmp
or
in
aaa
arpl
pavgw
and
or
pop
femms
mov
pop
fisttps
sbb
jno
inc
or
jmp
into
pop
sbb
jns
aaa
in
jl
ljmp
or
push
mov
xchg
iret
adc
or
pop
push
mov
sub
subl
lsl
mov
and
xchg
iret
filds
out
jl
or
or
cld
inc
movsb
push
xlat
ret
sbb
or
xor
xor
inc
mov
mov
js
ss
imul
insl
mov
dec
lea
int
pop
mov
sbb
enter
bound
enter
inc
stc
adc
pusha
mov
mov
out
xlat
decl
add
jbe
or
dec
ret
out
adc
fdivl
inc
movsb
rolb
mov
xchg
outsl
sub
add
cmp
jge
sbbl
and
lcall
shr
ret
into
mov
cmp
mov
loopne
or
push
sbb
mov
and
decb
iret
push
adc
mov
popf
jb
jne
mov
sahf
jge
cs
adc
sub
jae
cmpsl
lock
jnp
mov
mov
mov
iret
fsubrp
push
movsl
js
daa
jge
test
je
xchg
loopne
pop
pop
adc
inc
cmp
outsb
pusha
imul
movsl
mov
mov
push
cld
mov
mov
push
mov
shrb
push
test
les
dec
inc
or
lret
jb
insb
popa
test
and
or
mov
jmp
shll
int3
imul
into
in
int
push
or
mov
pop
jl
shl
inc
jmp
mov
clc
push
adcb
es
fdivp
imul
cmp
jle
repz
test
add
rcll
dec
popa
cmp
push
xchg
iret
shlb
test
add
test
pop
mov
dec
pusha
jo
pcmpeqw
dec
in
sbb
adc
or
dec
push
jp
mov
ficoms
sbb
cmp
movsl
pop
xchg
and
add
lods
daa
jl
jns
stos
enter
or
dec
daa
jns
icebp
icebp
xchg
sarl
mov
leave
mov
sbb
aas
push
decb
jge
add
pusha
or
mov
push
push
sbb
shr
or
pop
jo
or
faddp
add
loopne
sub
cwtl
jnp
mov
mov
push
or
clc
add
xchg
mov
mov
inc
jno
jns
lock
or
jno
xor
sysenter
shrb
loopne
or
cmp
jne
cmp
sbb
shr
dec
mov
lea
ret
ret
aaa
inc
fadd
or
pusha
shll
push
movsb
sbb
aad
sbb
or
cmp
je
cmpsb
mov
fsubp
jns
cmp
out
shlb
ret
cmpsl
sbb
cmp
pop
xor
lret
push
add
rorl
das
push
daa
fstps
jb
jne
jl
and
add
lds
push
call
lcall
lods
mov
push
out
or
push
mov
mov
notl
rol
mov
push
adc
pusha
pop
adc
inc
or
or
mov
int
shl
or
push
inc
pushf
loopne
test
movsl
dec
mov
fadds
cmp
ja
lea
dec
jecxz
dec
orl
lea
sbb
inc
cld
lock
rolb
dec
add
sub
pusha
pop
leave
lcall
aam
pop
sub
sbb
mov
or
addr16
or
sarb
push
popa
mov
or
adc
mov
test
sahf
dec
add
jne
or
mov
ljmp
sub
pop
jle
adc
xlat
lea
sub
inc
xor
sbb
pmulhw
dec
dec
cld
dec
cmp
add
pop
cmp
mov
pop
inc
mov
dec
add
fnstcw
repz
es
and
aas
jbe
inc
cmp
into
pop
mov
sarl
pop
dec
xchg
lods
imul
xor
push
jecxz
sub
xor
sub
dec
or
jg
xor
popf
adc
into
add
dec
data16
stos
cmpsb
sbb
mov
es
sub
xor
mov
jo
hlt
lea
pop
mov
int3
jg
loop
or
jno
xchg
loopne
pop
pop
pushl
sub
adc
and
adc
xchg
xor
movsb
mov
jmp
adc
mov
mov
cmpsl
push
repnz
rclb
stc
cld
xor
outsl
movsb
mov
sub
inc
and
adcl
mov
rolb
or
pop
mov
daa
rcrl
xchg
into
dec
cmp
je
inc
int3
scas
pop
call
jne
out
les
ror
or
cmp
and
test
stc
mov
into
je
mov
adc
dec
imul
push
jno
iret
fdivs
jo
fnstenv
add
lds
mov
stos
pop
jnp
popf
or
cmc
push
or
mov
mov
sahf
mov
icebp
cmp
mov
push
cmp
mov
adc
jbe
mov
lret
sbb
add
lods
mov
mov
sbb
push
xchg
jge
push
mov
or
dec
shlb
inc
aad
adc
sub
sub
mov
mov
or
scas
cmp
mov
mov
dec
jno
inc
test
mov
cmp
lret
test
jmp
mov
mov
xor
mov
lea
enter
or
call
stos
add
xor
cmp
setge
and
dec
inc
mov
scas
rcl
cmp
xchg
push
push
dec
sub
dec
mov
cmp
jae
orb
inc
pop
movl
xchg
add
adc
push
mov
pushf
cmp
scas
jecxz
int
pop
jne
cmp
shl
xor
rol
call
dec
in
sub
dec
inc
dec
cmp
dec
mov
aam
push
mov
bound
pop
mov
pushf
lock
aas
and
inc
stc
jne
fimuls
fwait
in
push
dec
jg
xor
sbb
mov
arpl
xor
or
adcb
jmp
and
test
jge
sbb
add
sub
jns
pop
dec
movsl
mov
nop
mov
inc
gs
sar
out
pop
and
cwtl
mov
pop
cmp
xchg
and
je
sub
aad
mov
push
cmp
decl
and
or
aaa
jmp
test
jne
mov
and
add
lahf
mov
push
adc
sub
loop
fs
loopne
rorb
sub
xor
mov
scas
push
dec
stc
or
cmpsb
adc
or
add
cmpl
mov
pop
sub
inc
lds
push
aaa
inc
mov
aaa
pop
enter
push
cmpsb
sub
repz
push
jmp
sbb
cli
inc
ret
call
and
stc
jae
mov
lret
jl
cmp
lret
push
xchg
dec
sbb
xchg
sarl
daa
jnp
jb
inc
or
and
dec
jle
and
sub
cmp
mov
xor
adc
pushf
mov
lods
in
lret
orl
jb
sbb
je
xor
xor
lds
lea
xchg
sub
test
inc
sub
in
les
inc
out
sub
inc
ret
adc
or
repz
inc
inc
sahf
sub
sub
adc
mov
out
cmp
push
push
clc
adc
jge
inc
mov
and
je
mov
xor
in
or
rcll
mov
cmp
fidivs
rorb
cmp
pushf
jnp
mov
sbb
sbb
cld
mov
adc
inc
aad
sarl
jne
xchg
mov
mov
cmp
jae
sub
jmp
push
dec
inc
mov
shlb
or
inc
adc
or
add
mov
add
push
loope
xchg
je
sub
push
pushf
mov
sbb
mov
rol
pop
sub
sub
push
sbb
sbb
andl
dec
cwtl
xchg
mov
pusha
cltd
int3
mov
xchg
pusha
lret
popl
mov
push
sbb
jae
add
sub
out
add
sahf
in
xchg
add
pop
add
add
adc
xor
cmp
jae
mov
test
jne
or
popa
xor
pop
inc
xor
jne
inc
inc
jmp
jae
cmp
pop
test
push
sbb
sbb
push
sbbb
jmp
repz
dec
push
jne
lea
call
jle
les
pusha
or
jne
lret
cmp
or
inc
and
or
adc
mov
arpl
xor
add
ret
sub
xor
cmp
sbb
lock
jecxz
pop
cmpsl
push
ret
push
rcl
mov
lea
dec
fidivs
leave
cmova
mov
add
and
les
mov
inc
mov
or
sbb
rorb
sub
xor
jbe
mov
pop
xor
jmp
jae
imul
mov
jb
adc
or
jne
mov
cmpb
mov
cmp
ja
loope
ret
daa
lock
xchg
lret
cmpb
xor
push
xor
or
cmp
jo
test
add
push
shlb
inc
mov
and
gs
jne
and
sbb
push
nop
testb
mov
addl
mov
out
in
dec
xor
lea
add
in
add
inc
xor
xchg
xchg
mov
push
clc
dec
inc
cmp
push
push
pop
add
sub
sub
fistps
in
mov
xchg
in
mov
lret
popa
in
mov
ja
or
sbb
inc
in
je
push
int3
xorb
andl
or
push
es
xchg
add
or
sti
fs
xor
hlt
sbb
add
ljmp
sub
ljmp
data16
testb
cs
cmp
mov
neg
push
push
or
imul
jmp
cmp
cltd
loope
cmp
inc
and
adc
or
call
xchg
fistl
push
push
and
jne
xorb
inc
xor
sbb
dec
out
cmp
popf
mov
scas
dec
test
adc
loopne
jns
cmpsb
add
mov
cmp
adcl
push
xor
add
and
mov
sbb
mov
adc
mov
dec
add
or
mov
adc
inc
cmp
mov
scas
fbld
filds
dec
test
ljmp
push
push
lea
push
xchg
inc
cmpsl
and
lahf
lret
adcl
dec
lcall
rol
xorb
rol
bound
stc
adc
stc
sar
adc
add
iret
mov
and
arpl
sahf
push
or
adc
lock
dec
fxch
push
ljmp
and
dec
inc
test
adc
and
enter
daa
mov
and
leave
jge
lds
dec
popa
je
cmp
mov
sub
cmp
mov
mov
into
add
or
sub
inc
add
ret
int3
lcall
popl
or
push
mov
sbb
adc
and
dec
xchg
jo
pop
lods
cmp
insb
icebp
test
mov
and
mov
xorl
or
aaa
mov
jne
and
sahf
add
adc
pop
jmp
mov
or
daa
adc
mov
les
push
je
or
movsb
in
dec
cli
inc
cmpsb
sbb
sarb
call
mov
pop
int
lcall
adc
pop
into
push
mov
aaa
dec
rclb
or
subb
nop
ljmp
stos
les
mov
pop
in
fstps
sbb
mov
orb
pop
sbb
test
shll
xor
sbb
jle
mov
sti
mov
cmp
aam
outsb
or
inc
pusha
movsb
add
inc
mov
in
jmp
mov
jmp
into
add
and
out
insb
mov
gs
lcall
test
cmc
daa
ljmp
outsb
cs
sub
cmpb
mov
or
stos
scas
push
das
imul
pop
popf
xorb
push
fmuls
sahf
push
pop
or
or
in
repnz
bound
adc
pop
inc
add
push
adc
lods
and
add
icebp
inc
movb
add
and
arpl
or
ret
push
pop
xchg
stos
call
scas
ret
mov
into
insl
xor
bound
mov
add
and
push
push
fsubrl
mov
push
movsb
je
xor
push
xlat
or
orl
sti
mov
mov
sub
enter
pusha
mov
jp
cmp
mov
mov
mov
xchg
dec
push
stos
loope
jae
adc
fs
push
and
nop
pushf
pop
movb
inc
jmp
jp
inc
jae
int3
addl
rcl
xchg
or
sub
xchg
in
repnz
adc
arpl
xor
bound
incl
or
sbb
dec
movb
inc
lret
lahf
je
pusha
nop
test
addb
out
fnsave
and
cli
add
sub
mov
jle
dec
dec
xchg
xchg
lock
jns
shll
sub
xchg
push
loop
int
je
stos
loop
or
lods
xchg
jle
and
push
out
clc
adc
push
xor
mov
rorl
and
inc
cmpsb
insl
add
dec
dec
cld
int
sub
or
loope
mov
xchg
and
lock
fadds
mov
lea
sub
cmp
xorl
mov
mov
inc
inc
dec
dec
xor
lock
jo
jl
sub
addb
jb
xor
out
movl
pop
pop
cmp
mov
and
loop
adc
mov
mov
lea
inc
push
adc
mov
mov
popf
or
cmp
jno
pushf
ja
out
cmp
or
dec
jmp
xlat
fstpl
or
jmp
adc
nop
add
int3
push
test
push
pusha
jp
fldl
mov
cmp
fstp
jne
fmull
mov
test
call
call
loopne
jbe
xor
dec
lret
addr16
inc
bound
test
mov
sahf
lahf
pop
mov
mov
aad
mov
sub
popf
mov
or
loope
mov
aam
or
xchg
mov
inc
mov
or
mov
xor
adc
pop
jbe
rorb
je
mov
inc
hlt
xchg
daa
pop
cmp
gs
inc
adc
sbbb
dec
xor
mov
jne
dec
mov
inc
mov
imul
neg
add
xor
aam
jb
sbb
cmp
test
mov
mov
xor
jmp
and
and
fcmovb
mov
popa
jecxz
cmp
in
je
mov
int3
mov
setg
push
xor
sub
leave
bound
es
mov
sbb
mov
outsl
push
mov
or
rolb
add
rolb
lret
lcall
sti
callw
sub
sbb
fs
in
sbb
lret
mov
sbb
push
inc
clc
adc
add
push
pop
rcll
push
sub
lret
enter
xor
inc
roll
and
mov
dec
jns
neg
push
add
adc
andb
stos
fs
pop
idiv
add
mov
or
lret
fisubl
cli
add
mov
adc
cmp
mov
push
xor
inc
mov
stos
sub
or
jmp
adc
call
xor
sub
dec
mov
push
std
mov
sub
xchg
jg
pop
gs
add
shlb
inc
add
xor
mov
xchg
mov
inc
pop
test
jge
andb
neg
jmp
cmp
jl
pop
shlb
es
pop
xor
sub
jo
push
adc
pop
mov
dec
and
in
or
push
push
lds
faddl
push
cwtl
mov
int3
inc
jmp
mov
cmp
inc
sub
leave
and
sbb
or
and
mov
and
push
and
sahf
push
mov
push
adc
je
jae
pop
aam
xor
movb
cli
andb
in
lds
jno
insl
xchg
decb
mov
xor
data16
pop
inc
adc
notb
jne
mov
fsubr
adc
hlt
lret
add
les
sbb
push
push
add
nop
rcrb
mov
pop
pop
out
xchg
adc
inc
lds
adc
and
mov
jl
cmp
jb
pop
push
or
ja
pop
stos
or
add
in
mov
ret
cmp
adc
adc
jbe
out
or
shl
test
mov
cmp
js
pusha
and
push
push
jbe
push
icebp
pusha
icebp
xor
mov
cmp
and
push
fistpl
daa
knotb
sbb
popa
adc
adc
jno
or
push
xchg
mov
test
movsb
cmp
xchg
lock
jp
pushf
mov
rcrl
in
popa
jbe
sbb
lcall
mov
sbb
inc
mov
mov
and
sbb
daa
or
lds
dec
hlt
mov
faddl
jmp
mov
out
push
pushf
or
loopne
fdivl
mov
and
hlt
dec
test
in
pusha
cwtl
sub
jg
fisubrs
cmp
testb
je
lea
or
cmp
lods
lea
push
add
lcall
gs
jecxz
out
icebp
sbbb
mov
ss
jns
popf
int
xor
in
sti
xor
fstps
xchg
in
pushf
jae
repz
add
pushf
and
addr16
insl
mov
test
lock
out
enter
sbb
push
lea
in
test
xchg
and
add
test
lods
dec
test
adc
push
or
arpl
xchg
lea
test
xor
scas
add
cmp
sub
pop
or
lea
push
test
cmp
pop
sbb
or
jle
add
sub
add
orl
adc
cmp
add
sub
sub
or
data16
int
inc
pop
movsb
fcomi
or
push
xchg
int3
loope
push
push
mov
in
adc
or
push
inc
and
push
stos
dec
push
mov
mov
and
jb
cmpl
xor
pop
fnstcw
xlat
add
cmp
pop
subl
mov
inc
adc
add
roll
mov
xchg
or
push
or
shll
ljmp
cmp
ja
bswap
inc
jmp
sbb
lret
dec
lea
roll
adc
shl
stos
lea
mov
pop
mov
out
push
add
xorb
ja
test
mov
xor
or
mov
jne
repz
ret
arpl
jb
add
jno
mov
lcall
pop
mov
mov
movsl
jmp
jns
cmp
fadd
test
call
outsl
cmc
push
in
in
sbb
sub
cmpsb
inc
xor
sbb
dec
je
int
lahf
and
add
cltd
ret
and
sub
push
cmp
jmp
in
js
cld
jne
dec
xchg
lret
outsb
xor
sub
sub
sub
adc
nop
add
or
add
adc
or
add
pop
stos
ret
jae
stos
push
xor
outsb
pop
daa
sar
pop
add
incl
lret
popa
rcll
test
inc
mov
mov
movb
sbb
inc
cmp
adc
cmp
jne
scas
xor
mov
inc
mov
call
rep
inc
inc
mov
xor
push
pop
fs
push
lret
xor
aam
sqrtps
fstp
xchg
dec
das
lret
pop
push
push
dec
inc
icebp
xchg
sahf
mov
repz
out
push
mov
xchg
daa
lea
adc
jmp
shlb
xchg
add
mov
mov
adc
cld
jmp
andb
adcl
add
jb
pop
aam
mov
xor
push
add
mov
insb
popa
jb
jp
push
add
push
into
jmp
lret
mov
adc
clc
and
add
jle
cltd
mov
icebp
out
clc
inc
add
and
pop
xchg
sbbl
sbbb
push
sbb
sub
push
jg
loope
cmp
mov
dec
lock
pop
je
inc
inc
sbb
jae
xchg
or
pop
adc
pop
lret
mov
jne
jmp
andb
mov
mov
add
and
add
insb
mov
lret
outsl
fcomps
or
xlat
push
addr16
jno
scas
jp
bound
dec
inc
mov
xor
popf
inc
lea
add
imul
out
push
or
fbld
add
sahf
push
mov
test
xchg
out
push
cmp
jae
and
pusha
mov
xchg
stos
push
xor
sub
pop
or
jmp
mov
push
scas
add
lcall
popa
jle
jmp
out
xor
les
aaa
sub
aam
mov
and
mov
jnp
loope
jge
xchg
jmp
sbb
xchg
jle
loopne
add
jl
mov
ret
inc
inc
or
sub
cmp
push
mov
jns
sub
loopne
adc
pop
clc
roll
fmull
mov
sar
pop
mov
fiaddl
xchg
or
jno
shlb
cmpb
jne
imul
cmpsb
inc
jmp
cmpb
or
roll
addr16
stos
inc
or
xchg
testb
std
mov
inc
lcall
sub
add
pop
cld
inc
push
sbb
push
adc
hlt
js
dec
stc
inc
or
or
cmpb
xor
xchg
or
xchg
inc
or
mov
daa
jb
jno
bound
cmp
scas
add
add
movsl
shr
cmp
es
stos
cld
add
ret
mov
and
test
jns
inc
popa
pop
or
add
andl
mov
sbb
testb
dec
or
push
push
mov
outsb
mov
push
test
das
and
or
rol
jecxz
rcll
lret
rolb
mov
dec
sub
mov
pop
sarb
or
jne
mov
popa
xor
and
xchg
push
test
nop
call
pop
cmp
or
cmp
lea
and
popl
int
mov
add
rcrl
pop
movsb
pusha
pop
pop
jmp
push
jecxz
jge
mov
adc
xchg
adc
xor
loop
shrl
adc
jbe
lds
popf
jmp
rorb
add
cmp
jne
lea
pop
lea
popf
popa
and
insb
sub
inc
popf
jnp
andl
mov
dec
mov
and
xchg
inc
mov
inc
out
shlb
cmp
jbe
shrb
and
dec
int3
xor
jmp
push
setb
sbb
push
mov
ret
int3
adc
cmp
adc
pop
add
call
add
lea
lret
xchg
jp
cmp
push
or
cmp
cmp
je
push
push
mov
pop
inc
cmpb
push
jae
in
push
dec
push
lea
and
and
push
out
add
jne
pop
jmp
and
sbb
sbb
sbb
jge
push
leave
mov
sbb
and
cmpsl
sbb
pop
mov
adc
clc
sbb
insl
outsb
pop
and
mov
dec
stc
add
repz
pop
mov
add
ret
aad
inc
push
movb
mov
in
add
or
jns
and
adc
dec
xor
shll
mov
cmp
add
cli
data16
enter
aas
jbe
addb
mov
mov
sub
mov
inc
inc
aad
into
xchg
sub
movb
mov
loop
sub
mov
inc
xchg
popf
es
lret
mov
pop
rcll
or
add
int3
push
xchg
jge
dec
rcrb
pop
adc
sbb
in
xchg
inc
sub
xchg
and
pop
insb
enter
jle
inc
adc
or
sub
mov
inc
sub
sub
xchg
and
or
jmp
pop
xor
cmp
inc
cwtl
sbb
xchg
jb
mov
dec
push
inc
and
push
pop
inc
or
adc
jns
dec
cltd
lock
mov
aas
je
adc
mov
fcmovne
push
mov
pusha
lds
add
or
sub
movsb
stc
js
enter
sbb
cmp
adc
push
add
mov
inc
inc
in
cmpb
test
and
aad
lods
imul
sub
movsl
jle
dec
fimuls
adc
cmpsb
sahf
and
jmp
xor
inc
loope
ret
push
add
inc
sbb
inc
adc
push
into
sbb
rorl
leave
clc
cmpsl
dec
xor
push
mov
cmp
je
xor
mov
mov
loop
add
xchg
rcl
push
orb
sahf
movsl
js
cmp
push
dec
cmp
es
and
cmp
sbb
cmp
adc
inc
sbb
pop
inc
movsb
pushl
add
imulb
jno
in
je
dec
mov
push
pop
lcall
xchg
dec
cmpsb
sub
lss
sbb
cmp
adc
and
add
aad
orb
cmpsl
std
movb
mov
or
jmp
lea
mov
push
dec
stc
push
sarl
push
mov
inc
or
rcl
xor
cmp
and
lock
inc
jge
mov
lret
xor
orl
lea
sbb
jle
pop
push
xadd
pop
or
pop
sarb
mov
inc
sub
ret
mov
adc
dec
outsb
dec
adc
or
or
push
jae
test
iret
test
mov
mov
mov
inc
add
cmp
jl
cmp
int3
outsb
cmp
decl
dec
or
subl
sbb
les
shl
gs
call
in
xchg
or
ds
adc
orb
push
les
or
push
sub
jmp
addb
add
add
pop
push
jp
test
xchg
or
lods
push
xor
mov
mov
mov
in
lcall
mov
comiss
add
movsl
jmp
and
add
push
and
andl
or
fsubrs
sub
adc
mov
mov
loopne
rorb
add
mov
mov
lcall
add
jmp
popl
dec
adc
test
adc
add
mov
push
or
push
add
push
mov
push
xchg
ret
dec
stos
pushf
inc
imul
ret
add
int3
int3
push
inc
xor
pop
inc
xor
push
rolb
or
pop
imul
push
mov
sbb
inc
rorl
or
inc
mov
inc
push
push
lea
xchg
subl
pop
pop
sbb
push
or
js
sbb
int3
mov
int3
add
or
outsw
add
inc
pop
aad
xor
fmull
mov
inc
or
jmp
jmp
mov
push
sub
aad
inc
lods
push
xor
mov
push
sbb
fcoml
mov
lds
xchg
and
pusha
cli
test
and
cwtl
into
sub
stos
test
jl
push
mov
mov
movsl
push
mov
add
mov
mov
xor
inc
cmp
add
cmp
sbb
jbe
les
jmp
cmc
cld
cmp
lea
or
pop
mov
lods
popa
stos
xchg
dec
stc
push
push
cmpsb
arpl
mov
pop
es
sub
out
addl
add
clc
push
mov
es
outsb
push
popf
jne
data16
cmp
in
inc
je
lcall
cmp
inc
and
adcl
sahf
inc
ss
add
add
push
int3
addl
shrb
aad
xchg
fisttpl
adc
or
movl
adc
mov
mov
push
test
cmp
dec
mov
pop
xchg
mov
or
sbb
stos
inc
pop
push
in
inc
or
roll
mov
push
push
xchg
sub
pop
jne
mov
jge
out
push
mov
mov
pusha
rcrb
mov
and
mov
mov
repz
push
cmc
sbb
adc
add
and
cmpsb
xor
sub
mov
out
fildll
xor
jo
aam
or
mulb
mov
or
add
pop
ret
mov
inc
loope
add
ror
sarb
and
sub
dec
inc
sub
sbb
and
pop
lea
dec
sbb
lahf
and
push
and
sbb
mov
roll
inc
out
mov
or
push
pop
adc
push
push
loop
decb
sub
rolb
mov
add
sbb
hlt
aam
jge
lret
je
lock
add
and
loope
arpl
add
pop
popa
mov
imul
xchg
or
inc
adc
and
xlat
mov
dec
xor
jne
jb
cmp
push
aaa
mov
lods
aas
std
shl
fiadds
mov
cmp
jl
scas
or
imul
jp
adc
dec
cmp
jae
and
shld
shl
adc
sbbb
ret
loop
sbb
add
push
je
mov
popa
cmp
dec
or
test
pushf
orb
push
or
pop
xor
bound
int
sub
je
decl
adc
mov
dec
fs
mov
call
cmp
loope
out
lcall
or
enter
iret
out
sbb
push
xor
inc
adc
movsb
nop
pop
push
in
inc
faddl
cwtl
insl
or
int
jmp
popa
and
mov
leave
push
and
pop
dec
ret
and
out
sbb
mov
into
adc
mov
ret
inc
xchg
es
or
sbb
xor
xchg
sbb
dec
icebp
popf
loopne
xchg
or
sub
mov
push
inc
jns
or
or
push
outsl
nop
es
sub
push
imul
mov
call
xor
and
jns
mov
std
mov
test
cmp
in
lock
sarl
jmp
loope
sar
and
cli
inc
shlb
in
in
std
mov
lea
sahf
je
fs
shrl
enter
add
cmp
int3
loopne
pop
cmc
aaa
cmc
lea
ret
push
lret
and
add
sbb
xchg
sahf
shlb
push
lret
jg
hlt
cld
cmp
repz
or
sbb
aaa
aad
add
in
jns
lret
pop
push
add
push
cmc
pop
sub
sub
lea
ret
std
adc
mov
icebp
inc
dec
xor
orb
pop
enter
cmpsb
add
and
adc
xchg
pop
and
mov
sub
mov
imul
add
jmp
shl
mov
sarl
aam
push
sub
push
xor
cmpl
adc
dec
test
jne
andb
push
inc
sbb
or
jmp
cmc
jmp
divb
mov
mov
sti
push
sub
or
push
inc
cli
xchg
jne
pop
cld
xor
mov
repnz
mov
push
sbbl
shlb
or
enter
xor
add
dec
out
add
ret
aad
mov
cmp
loop
in
push
shll
push
aad
mov
icebp
dec
in
adc
mov
inc
add
push
test
push
cmp
add
push
andb
hlt
dec
mov
adc
dec
jl
test
cmp
dec
incl
in
rcrl
sub
adc
mov
mov
adc
jmp
addb
or
adc
je
xchg
adc
pop
xor
je
adc
adc
xor
xchg
inc
lock
and
lret
sbb
xor
fistpll
cmp
je
je
adc
out
add
lods
add
cmp
clc
mov
clc
jmp
mov
aad
add
add
ret
mov
call
test
iret
shrb
adc
and
call
inc
sub
inc
sbbl
test
cmp
or
or
test
mov
mov
jo
nop
iret
decl
inc
and
mov
mov
inc
ljmp
push
xchg
lds
sub
sub
inc
pusha
mov
mov
fadds
or
or
sbb
mov
pop
lret
or
inc
cmp
add
xchg
enter
add
xor
js
negb
pusha
add
je
push
adc
xor
push
addl
daa
adc
adc
push
and
xor
out
sbb
subl
and
or
rcll
mov
sbb
punpcklwd
or
adcb
xchg
and
sub
push
and
cld
andl
shlb
adc
and
lock
mov
push
aam
or
fldcw
sub
sbb
dec
mov
sbb
push
push
je
pop
cmp
adc
inc
in
and
push
add
xchg
jns
add
add
or
mov
push
mov
adc
mov
or
mov
jge
adc
imul
add
cmp
jne
or
or
stos
adc
or
and
pop
cmp
or
mov
or
cwtl
pop
pop
test
pop
push
dec
lahf
test
lcall
repz
add
pushf
les
test
mov
lret
shlb
cmp
adc
into
jne
into
mov
test
and
add
jo
or
scas
mov
xorb
test
add
ret
leave
mov
test
push
and
lret
sub
into
or
enter
lret
call
loop
rolb
inc
cmp
inc
xor
add
mov
sub
rolb
fisttps
jl
pop
mov
sbb
xchg
popa
adc
imul
pop
pop
or
loopne
push
imul
js
imul
jbe
xchg
dec
and
mov
pop
orl
nop
or
xchg
sub
adc
push
xor
lods
movl
adc
test
sub
pushf
mov
inc
mov
mov
fidivrs
pop
outsb
mov
test
pop
and
xchg
sarl
sbb
jbe
enter
jo
rep
or
xchg
mov
xor
js
jbe
push
xor
and
or
pop
or
andb
jl
repnz
insb
fmull
out
xor
in
jge
pop
orb
setns
and
sub
dec
pushf
lods
hlt
mov
outsb
xor
pusha
pushf
push
shl
enter
mov
call
pop
int
mov
xor
jne
hlt
sbb
xor
pop
mov
push
pop
add
pusha
test
cmovs
cmp
mov
adc
imul
jns
adc
lds
sbb
or
dec
inc
mov
sub
mov
dec
add
pusha
lods
push
and
sub
loopne
inc
add
sti
add
ljmp
mov
negb
mov
mov
enter
test
call
dec
roll
mov
pop
mov
pushl
ss
xchg
icebp
mov
add
inc
mov
sub
add
or
jmp
cmp
jg
jge
iret
xor
adc
hlt
push
ret
fs
dec
lea
or
pop
scas
or
or
cmp
jl
or
pusha
rorb
sbb
cltd
mov
adc
roll
aaa
aad
jp
sub
jg
repz
rol
je
pusha
or
jg
push
nop
and
jns
inc
xor
icebp
or
dec
mov
push
clc
test
mov
jne
mov
lret
scas
out
add
jo
ret
gs
ja
and
sub
push
inc
lea
or
out
dec
adc
lods
or
mov
aam
movl
shrl
jo
or
add
push
xor
fstpt
add
into
xor
js
scas
mov
add
adc
jmp
push
add
jl
cmpb
jl
mov
sbb
cmp
cmc
ds
test
xchg
incl
jmp
inc
sbb
push
lcall
or
mov
nop
pop
int
xor
fbstp
adc
movsl
scas
mov
mov
call
add
pop
movswl
mov
push
mov
outsl
sub
sbb
inc
push
mov
shll
fnsave
addr16
pushf
bound
test
jne
mov
inc
je
xorl
mov
out
mov
jmp
ret
sbb
push
ljmp
and
mov
pop
xchg
push
ret
or
adc
enter
adc
loop
pop
pusha
sub
cli
pop
add
fcmovb
jmp
or
lea
mov
movl
iret
imul
dec
or
adc
call
movzbl
test
sub
add
or
push
add
inc
xchg
in
mov
jbe
adc
jne
je
and
jnp
xor
shlb
je
bound
sub
andl
push
push
int3
movsl
push
mov
imul
les
call
ret
mov
push
orl
nop
aam
adc
cs
dec
imul
sub
loopne
mov
mov
dec
xor
scas
ja
es
lret
push
cs
push
rolb
dec
and
mov
pushf
adc
les
lea
lea
sbb
sbb
cmc
addb
nop
ds
jmp
cmc
xor
and
pop
fidivs
sbb
je
add
or
jno
ds
adc
pop
push
xor
mov
xor
sbbl
add
movsl
pushf
pushf
mov
dec
mov
cmp
adc
testb
pop
pop
dec
out
push
mov
adc
loopne
add
or
inc
loope
imul
out
lock
imul
adc
clc
jge
pushf
rclb
mov
mov
push
push
sbb
xlat
xchg
mov
jne
in
sub
int
xor
inc
jge
sbb
sub
push
and
mov
popa
and
call
jb
cli
adc
mov
sar
mov
pop
jmp
mov
sub
push
shrb
add
cmp
jb
cmp
jae
and
les
pop
mov
or
mov
jl
pushl
jmp
jmp
loopne
or
xor
incl
iret
jmp
nop
pushl
or
inc
xor
inc
xor
into
add
fisubl
xor
aas
add
mov
mov
shr
shl
or
push
jnp
imul
dec
repnz
out
or
jecxz
mov
mov
shl
ljmp
fld
mov
int3
push
or
sbb
arpl
dec
inc
mov
mov
pop
dec
add
jbe
push
sbb
lea
push
or
mov
dec
cs
cld
gs
jns
aad
js
repz
add
fcomps
cmp
jecxz
mov
cmp
or
jne
into
or
and
xor
out
adc
loope
dec
lods
xchg
inc
rolb
push
or
xchg
jae
jmp
mov
jae
mov
rolb
jae
pusha
cld
or
popa
inc
adc
mov
mov
inc
add
xor
push
sub
mov
adc
test
cmp
in
in
mov
push
imul
nop
or
and
stc
inc
jmp
sub
push
dec
pop
mov
ja
or
mov
inc
sti
xor
adc
adc
jg
insl
pop
mov
mov
into
add
shrb
push
enter
push
or
cmp
mov
mov
jmp
ljmp
xorb
add
leave
lret
mov
pop
les
push
inc
jle
gs
jle
sbbb
jg
enter
push
or
inc
jns
jmp
test
pop
ret
ss
mov
adc
mov
les
adc
nop
cmp
adc
sti
mov
iret
pop
push
cmpsb
fisubrl
and
pop
fadds
jae
sub
mov
hlt
mov
rcl
gs
add
rclb
fiaddl
ficoml
or
fdivl
into
fwait
sub
cmp
loopne
repz
and
xor
xchg
mov
or
jmp
jp
fwait
xchg
dec
ret
lea
adc
arpl
fxch
fs
ja
push
or
xor
loopne
ss
sbb
xor
mov
adc
jmp
testb
or
pop
dec
sbb
sub
nop
andb
in
fdivs
jbe
adc
enter
cmpl
mov
jmp
dec
pop
or
imul
insb
scas
orb
xchg
sbb
shrl
mov
je
push
adc
inc
xchg
test
mov
adc
in
dec
mov
rorb
icebp
adc
jg
cmp
hlt
scas
push
add
bound
add
xor
dec
cmp
pushf
pop
adc
inc
jbe
dec
add
imul
push
inc
pop
call
pop
xor
or
push
mov
mov
push
xor
sbb
jle
and
sbb
daa
or
aam
xor
inc
pusha
xor
mov
lods
sbb
sbb
sub
jge
bound
jmp
xchg
clc
xchg
sbb
lods
into
add
xchg
lahf
cmp
ret
jmp
cwtl
popa
adc
fldl
stos
stos
call
iret
pop
les
sbb
dec
or
push
xorb
jno
mov
push
and
mov
or
mov
sub
adc
sbb
test
jecxz
dec
movsb
sbb
push
fwait
jp
cmp
mov
cmpsl
lock
sbb
clc
xchg
loope
mov
test
sub
sbb
push
int3
in
jns
out
out
jmp
sahf
jmp
in
out
sti
out
aas
xchg
bnd
shlb
add
movsb
cltd
push
sub
inc
stc
push
sbb
popa
or
and
add
aam
pop
ret
lret
mov
mov
adc
jne
ret
maskmovq
mov
push
imul
je
sbb
mov
ret
jne
push
je
and
push
and
jae
add
ds
lds
loope
mov
adc
or
add
sbb
adc
or
outsl
push
xor
lea
push
imul
push
sahf
push
add
lea
decb
outsl
or
movswl
inc
inc
push
xchg
push
test
add
add
jb
inc
adcb
lret
in
push
movl
adc
inc
mov
xchg
leave
push
sbb
sub
cmp
adc
adc
cli
sub
or
leave
aam
dec
or
lods
sbb
jne
ret
or
inc
pop
neg
and
jle
ret
push
dec
insb
test
ret
jle
lds
push
jne
mov
xchg
and
dec
movsl
insl
mov
jp
sbb
jb
push
mov
mov
mov
add
or
add
adc
add
pop
inc
dec
mov
push
add
push
mov
cmp
jb
adc
jmp
data16
and
jns
xor
add
add
sbb
jnp
xor
fldcw
andb
and
sarl
mov
gs
cmp
pop
or
ds
and
add
addb
push
jne
jg
or
mov
adc
and
xchg
add
pop
xor
pop
leave
mov
and
push
add
or
into
push
dec
lret
in
add
outsl
sbb
mov
and
and
cmp
add
xorl
movsb
pop
pop
jg
ds
xchg
xchg
xor
fisttps
js
push
pop
test
movsl
push
sbb
mov
bound
int
sbb
sbbb
push
push
cmp
cmp
pmullw
mov
push
lcall
pushf
or
mov
shlb
jle
scas
and
popa
in
call
hlt
and
ret
sbb
fdivl
add
add
push
push
pushl
sbb
lcall
add
or
call
and
test
mov
or
addl
popa
jle
add
xorb
orb
dec
fisttpll
push
jg
fsubrl
cmc
and
jge
adc
mov
faddl
mov
enter
dec
ljmp
jl
mov
ja
mov
and
cmp
xchg
add
sub
nop
outsb
fidivrs
in
les
pusha
inc
pop
out
xor
loope
out
icebp
das
push
data16
stc
test
jmp
loop
sub
push
dec
mov
fimuls
sbb
popa
push
push
inc
mov
dec
add
push
insl
orl
sbb
bound
add
ds
rcll
xor
xchg
push
mov
inc
xchg
jmp
cmp
movsl
sub
arpl
nop
call
or
xchg
and
or
push
or
lock
add
pop
test
pop
je
lea
cmp
inc
sbb
lea
bound
push
push
pop
bound
addr16
mov
jmp
xchg
cmp
sar
test
sti
pop
ja
adc
ret
and
lret
push
cmp
shlb
dec
cwtl
xor
je
dec
dec
xchg
push
fdivs
xor
inc
xor
lods
or
pop
cwtl
add
inc
pop
addl
out
fsubl
cli
enter
pusha
mov
mov
imul
hlt
or
mov
out
inc
add
or
test
adc
fisttpl
add
jae
jb
hlt
scas
shr
cs
es
leave
push
push
pop
notb
shr
loop
aam
mov
mov
fsubs
mov
lods
push
inc
xchg
sub
cmp
idivb
xor
adc
inc
rclb
sbb
dec
stos
dec
pop
lds
and
hlt
mov
lret
into
xchg
push
sarl
jl
shrb
pusha
push
loopw
shrl
mov
xor
pop
pop
push
xchg
sar
push
cmp
lds
adc
or
inc
in
test
cli
inc
in
lea
and
in
jno
mov
push
push
mov
push
xchg
cmp
mov
cld
adc
and
neg
je
push
push
xchg
loopne
push
dec
push
sbb
cmp
mov
test
push
or
jne
fisubrs
or
in
add
jmp
scas
inc
scas
jl
adc
jg
sbb
sub
inc
leave
pop
out
icebp
ret
inc
cmp
sbb
clc
gs
inc
imul
out
xor
out
ds
add
fisttps
popa
inc
jmp
cld
dec
cli
mov
mov
cmp
pop
lds
xchg
dec
ja
xor
flds
xchg
adc
pop
gs
popl
aam
dec
aas
jb
emms
aam
push
dec
add
mov
pop
popf
sbb
out
sbb
jge
int3
cwtl
fisttpl
mulb
in
xchg
movsb
popa
adcb
sub
test
aam
and
sbb
adc
aam
daa
test
ret
xchg
mov
inc
add
push
cs
push
pop
push
push
sub
ss
adc
or
rorl
popa
femms
xchg
sbb
call
mov
and
sbb
cli
inc
cwtl
rcll
sahf
movsl
in
mov
mov
xlat
aaa
xchg
xor
ja
popa
push
out
mov
les
add
add
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
add
mov
mov
sub
mov
sbb
dec
jno
repz
test
add
ficompl
jmp
mov
hlt
movl
add
shrb
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
add
add
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
insb
fdivs
jne
add
add
iret
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
add
add
mov
cltd
xchg
mov
mov
or
or
and
or
adc
add
add
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
inc
add
mov
push
movsl
in
lahf
xor
mov
js
stc
add
add
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
add
add
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
flds
add
add
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
add
fcomps
mov
into
cmp
mov
inc
movsl
fisttps
xchg
add
adc
shll
jmp
outsb
xor
mov
add
add
jae
add
in
add
pop
dec
or
cmp
add
daa
adc
or
add
add
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
add
pop
cmp
mov
cmp
lods
insb
mov
mov
lcall
mov
cmp
ljmp
add
add
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
add
add
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
or
ss
sbb
push
imul
aam
loopne
add
add
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
add
add
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
test
add
scas
testb
pusha
jp
out
pusha
fists
add
add
test
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
add
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
rolb
add
add
sbb
ret
es
pushf
mov
insl
add
ss
add
add
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
add
in
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
add
adc
mul
ja
outsl
ja
mov
out
jo
ud0
cmp
and
add
pop
or
adc
sahf
gs
clc
sar
imul
add
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
add
add
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
add
add
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
or
aas
ljmp
rorl
mov
pushf
test
cmp
add
mov
adc
add
add
add
sahf
je
add
add
and
cmp
pop
or
aaa
xor
mov
lahf
add
jb
add
jo
js
xchg
or
push
dec
arpl
add
add
jne
insb
lret
daa
sub
outsb
jne
insb
mov
add
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
dec
movsb
dec
push
push
inc
push
push
add
aas
sarb
inc
add
popl
push
jb
arpl
cmp
add
jae
jb
gs
je
jb
pusha
and
outsb
je
inc
push
dec
add
mov
add
xor
loope
cmp
pushl
fsubl
push
dec
imul
and
insl
and
mov
and
sarl
or
inc
sub
cmp
add
enter
dec
push
xor
cmp
mov
sub
je
rolb
imul
imul
jo
cli
add
je
mov
add
push
arpl
xor
xorb
xchg
jno
jae
sbb
xor
jb
dec
js
test
inc
cmp
arpl
xchg
cwtl
insb
cs
mov
fwait
mov
jge
loop
cmp
cld
cmp
les
loop
gs
sbb
out
xor
gs
mov
popa
leave
aas
aaa
insl
addr16
aaa
mov
push
pop
or
imul
mov
pop
mull
loope
daa
jb
or
xchg
shlb
popa
insl
jnp
mov
insl
xor
fists
xor
pusha
push
mov
fisubrs
sarl
cmp
call
jne
lods
pop
pushf
test
data16
addr16
mov
shr
cmpsb
mov
daa
fs
push
stc
or
test
imul
call
imul
jns
xchg
xor
aam
push
mov
cmp
jo
in
daa
fcomps
inc
push
lea
and
or
push
or
inc
gs
popa
inc
push
pushf
push
dec
jbe
xor
lock
add
mov
push
fs
push
out
popa
lock
xor
cmp
dec
inc
clc
pop
or
inc
add
mov
push
ds
loope
mov
mov
cmp
sub
jns
jecxz
mov
sbb
bound
sub
xchg
xor
push
repz
repz
nop
test
out
cmp
loopne
or
push
and
cmp
pop
jb
sahf
out
mov
cmp
out
push
and
dec
iret
repz
pop
push
adcb
fsubr
cld
or
out
lcall
inc
pop
push
jns
out
mov
jns
into
fdivr
push
iret
jae
fcompl
xor
cmp
repz
jo
mov
repz
lock
add
jns
push
sub
dec
pusha
sahf
out
sahf
jo
sahf
mov
jns
lock
adc
cmp
cmp
repz
push
fs
iret
repz
nop
lcall
cmp
push
add
cmp
sahf
out
pop
fs
cwtl
lods
mov
add
dec
add
test
imul
pop
lcall
dec
inc
push
in
add
jne
outsl
fs
imul
imul
add
sbbb
inc
add
lcall
gs
imulb
xchg
outsb
push
dec
xchg
aad
push
mov
inc
outsl
mov
xchg
loopne
add
sbb
mov
push
jo
call
ret
gs
sbb
imul
imul
imulb
cmpb
dec
popa
add
jmp
je
xorl
add
mov
int3
dec
lahf
gs
lea
push
lods
add
out
push
cmp
fadds
dec
inc
jns
xor
outsl
fs
or
push
jb
movsb
push
idivb
push
imul
add
jns
and
fwait
inc
mov
push
fsts
lcall
in
pop
shrl
mov
mov
out
dec
lcall
pop
popa
add
dec
ss
sub
call
mov
jae
push
adc
out
add
push
xor
push
inc
and
out
and
or
inc
fs
cmc
lcall
ret
or
dec
sub
data16
jle
jbe
inc
insb
add
pop
insb
je
mov
scas
in
popl
mov
add
push
int
cmp
pop
iret
mov
cmp
pop
jge
loope
fdivl
add
mov
xor
loope
mov
xchg
push
inc
je
sbb
push
fistps
pop
push
inc
je
pop
enter
jne
push
mov
pushl
ljmp
cmp
inc
inc
pop
adc
outsb
sarl
or
add
loop
dec
add
ret
jo
repz
andb
pop
imul
into
dec
scas
int
sbb
addr16
jbe
aam
cmpsb
lods
cmp
mov
adc
out
jae
push
je
jno
dec
push
fimuls
sub
or
push
add
fs
push
sahf
dec
mov
in
mov
cmp
or
lods
push
push
xchg
popf
or
or
mov
insb
jb
dec
sbbb
jl
push
cmpsl
mov
or
cmp
jo
test
frstor
xor
add
push
pop
and
dec
cmp
push
xchg
mov
pop
fs
xchg
adc
dec
loopne
mov
push
insl
xchg
push
ss
test
inc
rorb
leave
insb
push
shll
fbstp
popf
cmp
xor
sbb
jecxz
inc
in
sbb
xor
and
pop
fists
xchg
pop
xchg
gs
mov
jb
test
xchg
lea
mov
push
mov
aaa
xor
out
inc
or
pusha
jne
fidivl
scas
fcmovu
push
aad
aaa
filds
fadds
outsb
lcall
sbb
mov
js
insb
loop
sbb
std
xchg
outsl
jns
imul
fwait
jne
lea
dec
inc
jb
jns
cmp
push
cld
lret
cmpsb
dec
in
inc
push
cmc
aad
push
sub
jnp
bound
lret
fs
adc
and
test
call
and
jbe
add
sbb
fistps
cltd
int
mov
mov
ficoms
cmpsl
mov
popa
jns
int3
test
ja
mov
in
push
xchg
outsl
loop
push
sub
test
in
add
es
push
mov
push
mov
push
jbe
mov
sub
and
push
inc
gs
pop
push
bsr
sub
mov
orl
arpl
xor
outsb
ret
mov
ljmp
leave
test
mov
loop
add
imul
push
je
mov
sub
inc
add
add
cmp
and
add
inc
xlat
mov
adc
push
inc
inc
dec
pop
sbb
sub
fs
or
sbb
fs
inc
push
adc
dec
arpl
hlt
mov
shl
and
cmp
bound
pop
pop
dec
push
push
push
inc
inc
popa
repz
xor
fs
loop
dec
add
ret
lahf
lock
jmp
mov
cs
push
jle
fbld
insb
inc
lahf
adc
cmpb
add
and
daa
mov
jmp
ja
outsl
in
fstpl
jb
push
aad
jae
je
and
jns
push
leave
pop
xor
push
fisttpl
push
cs
mov
jno
repz
mov
fldcw
mov
sub
cs
in
push
cs
mov
inc
and
or
sub
data16
mov
xor
inc
and
ja
gs
sbb
jl
mov
mov
cmpsb
les
arpl
es
jno
sahf
inc
and
add
outsb
arpl
dec
pop
sub
and
xor
and
sub
mov
movsl
outsl
or
push
pop
sub
inc
fs
ja
jg
repnz
scas
in
adc
pop
push
or
inc
outsb
mov
push
call
pusha
sub
jl
pop
or
iret
repnz
push
dec
inc
pop
add
jne
xchg
es
sahf
ret
loop
sbb
lock
push
aam
iret
iret
aas
iret
mov
js
iret
aas
iret
repz
inc
sub
lahf
or
and
and
in
xchg
repz
dec
adc
and
aas
ds
int3
nop
jg
cli
xchg
and
lahf
lahf
dec
xor
and
and
dec
or
icebp
loope
clc
and
and
pusha
xor
and
and
stc
icebp
mov
jg
call
pop
ds
stc
inc
lock
les
mov
xchg
movl
out
pop
or
stc
stc
out
sbb
pop
fcomps
sbb
mov
stc
stc
push
cmp
lock
sbb
incb
stc
stc
xlat
cmp
out
pop
ds
sbb
sbb
pushf
mov
test
aas
iret
dec
xor
sbb
sbb
jae
sbb
sbb
jl
pop
dec
jecxz
lahf
jg
sbb
loopne
jno
loop
dec
les
imul
xor
or
and
addr16
and
sub
xchg
adc
fs
cmp
sbb
jnp
repz
lret
mov
push
out
pop
xchg
cld
test
repz
outsb
ja
arpl
imul
outsb
aaa
dec
add
push
test
sbbb
inc
mov
pusha
ja
inc
mov
dec
push
dec
pop
xchg
or
insl
je
ja
add
insl
insl
data16
jo
bound
lods
sbb
xor
ret
ljmp
dec
shrl
add
dec
and
outsl
jne
gs
dec
pop
mov
outsb
insb
insb
mov
push
inc
cmp
testb
test
push
es
sbb
into
jnp
dec
xlat
inc
xor
mov
mov
lcall
pop
cmp
test
dec
pop
jmp
dec
jne
bound
ficoms
push
int3
fs
sbb
sub
pop
mov
mov
out
sub
xchg
and
or
test
pop
push
dec
sbb
std
divb
and
ret
repnz
jle
cld
xchg
aad
fists
xchg
loope
push
cmp
hlt
adc
bound
iret
imul
test
out
and
push
mov
nop
insl
and
in
mov
inc
push
inc
dec
push
dec
dec
inc
dec
inc
xor
bswap
popa
jb
cmp
cmpsb
arpl
xor
xor
cli
out
inc
arpl
pop
adc
arpl
dec
xor
push
imul
mov
pop
jge
iret
test
xor
dec
dec
mov
mov
fbstp
inc
dec
inc
inc
jnp
lahf
add
incb
xor
nop
cmp
outsl
cmpsb
das
mov
inc
sub
inc
and
pop
inc
fistl
xlat
shll
es
jg
inc
inc
dec
inc
push
pop
dec
mov
xchg
stos
pop
sbbb
xchg
jp
jmp
leave
test
mov
jnp
jge,pn
repz
repz
repz
add
jne
jae
imul
lret
stos
sbb
pop
cs
xchg
imul
dec
hlt
add
xor
mov
scas
pushl
popf
pop
sbb
daa
test
pop
scas
cli
setae
addr16
mov
and
insl
jb
fidivl
push
fildll
dec
dec
aad
fsincos
mov
sbb
xchg
dec
jae
into
inc
cmp
pop
or
aaa
cmp
or
mov
sub
sub
popf
cld
sub
and
pop
les
lods
jne
cmp
push
lock
sbb
imul
fists
mov
xchg
shll
fiaddl
je
ljmp
xor
xor
push
xchg
popa
imul
test
push
push
sub
lods
jmp
adcl
xor
test
jle
sub
sub
je
ficomps
dec
mov
sub
fs
arpl
gs
imul
imul
sub
or
dec
inc
dec
cmp
dec
jbe
insl
mov
or
loopne
mov
jns
mov
push
xor
jnp
xor
add
addr16
insb
lcall
jo
push
push
cmc
stc
sub
pop
imul
js
dec
inc
jb
aaa
out
lcall
iret
mov
idivl
je
ret
dec
gs
sub
lods
pusha
aam
popa
imul
jb
scas
notl
xorb
xor
arpl
jb
push
icebp
inc
add
cmpsl
test
jo
jbe
loopne
push
dec
outsl
push
outsl
outsl
inc
leave
pop
jno
pop
mov
lahf
dec
mov
xor
sub
push
popa
pop
sbb
push
mov
and
arpl
pop
inc
rorl
repz
loope
cltd
adc
popa
cld
pop
adc
outsl
push
push
push
jae
int3
mov
push
leave
and
lds
adc
push
sbb
bound
inc
out
sahf
jmp
rol
out
sarl
clc
inc
and
inc
and
lcall
sub
add
xor
ret
cmc
sub
or
aad
add
pusha
jmp
pop
dec
xor
mov
xorb
loop
jmp
call
jo
cwtl
cltd
cltd
ret
and
cltd
adc
test
adc
xchg
adc
ljmp
out
lcall
add
enter
repz
shrb
xchg
rol
pop
add
sbb
popf
fdivrl
adc
mov
lcall
add
fwait
nop
xor
add
arpl
outsb
sbb
adc
lcall
add
into
gs
repz
or
imul
push
sub
sahf
fwait
cltd
sahf
insl
xor
adc
popf
repz
lret
jno
sbb
add
add
sbb
adc
inc
rclb
pop
jnp
and
adc
adc
mov
mov
rolb
adc
mov
iret
lret
or
pop
fisubs
push
pop
sub
jno
add
sbb
in
pusha
enter
add
shlb
ja
jno
addr16
in
leave
jmp
cli
fdivr
std
jmp
ljmp
in
cld
cmp
fsub
lock
cltd
aad
subb
lock
jmp
jmp
out
ljmp
je
out
lret
or
les
hlt
or
lock
jns
jmp
dec
dec
push
dec
add
dec
mov
jg
bound
jne
jae
pop
mov
push
scas
adc
xor
jno
call
aad
stc
inc
rep
cli
pop
push
outsb
fcmovnb
repnz
jnp
jno
and
aad
fs
pop
daa
pushf
imul
xor
ficoml
sub
push
xor
adc
mov
mov
leave
fnsave
ja
xlat
jne
es
add
test
in
jg,pn
jb
es
scas
arpl
stc
inc
roll
pop
sahf
subl
pop
rcrb
je
and
shll
je
jne
movsl
or
cmp
xchg
and
fmull
pop
add
xor
sbb
push
add
dec
test
push
jp
inc
xchg
dec
pop
popa
loopne
or
xor
das
xor
cmp
fwait
mov
xchg
lahf
call
or
ja
je
mov
mov
adc
jae
loope
inc
inc
inc
jecxz
adc
ret
push
loop
push
and
in
aaa
shrl
aad
pop
xor
lods
mov
dec
jo
outsl
cs
adcl
push
cmp
int
or
out
insw
inc
mov
ljmp
or
and
out
dec
or
fstpl
adc
push
mov
adc
inc
dec
inc
adc
or
imul
and
mov
lret
js
iret
or
cs
movntps
or
dec
cmp
push
mov
push
sub
outsb
ljmp
inc
cld
ja
data16
or
jne
jp
popa
sub
cmp
stc
into
repz
gs
imul
xchg
out
add
dec
jg
iret
test
bound
lret
add
rolb
dec
push
add
mov
lahf
call
dec
pusha
add
in
pop
into
add
in
and
leave
push
xor
std
lods
insl
add
int3
inc
fs
mov
pusha
pop
or
mov
jl
add
icebp
icebp
sub
adc
adc
and
dec
inc
push
inc
add
push
repz
test
or
pusha
add
xor
dec
inc
ljmp
mov
pop
pop
iret
mov
add
test
xlat
jb
add
or
in
enter
mov
inc
pop
pop
or
stos
les
int
fs
aas
dec
sahf
pop
mov
iret
loop
cmpsb
cli
out
jg
lods
stos
cmp
inc
repz
pop
nop
cmp
repz
and
sahf
pop
fwait
pop
push
out
cmp
and
add
out
in
cwtl
or
cld
cmp
mov
add
arpl
pop
add
fcomps
adc
xor
aam
hlt
pop
mov
call
pop
jne
jge
pop
xlat
je
cmp
add
add
jmp
mov
jp
add
hlt
xor
cltd
mov
outsb
imul
fcomp
or
scas
ja
add
mov
xor
aad
ljmp
sbb
lods
adc
xor
outsb
mov
dec
pop
out
jno
inc
add
ficoml
jp
sti
loopne
or
pusha
pop
add
repnz
add
cmp
or
push
iret
testb
mov
cmpsb
in
incl
dec
add
dec
or
mov
loopne
addb
push
int3
mov
mov
fisttps
push
mov
das
xor
imul
xlat
lret
push
pop
jo
gs
jno
gs
pop
fs
aaa
inc
inc
outsl
mov
ja
cwtl
pusha
or
and
outsl
imul
push
cmp
sbb
icebp
les
sbb
xor
jae
push
pop
push
insl
mov
jae
xchg
incl
mov
mov
adc
push
push
dec
push
sbb
sbb
leave
mov
out
push
jo
imulb
inc
fisubs
movsb
xchg
mov
sub
imul
test
or
call
into
int
and
mov
cltd
scas
stc
mov
jg
adc
imull
mov
iret
inc
push
inc
loope
mov
mov
stos
mov
adc
push
adc
imul
cmp
ss
test
in
jne
lods
mov
mov
repnz
sahf
outsl
jne
fs
out
add
push
dec
bound
sub
fdivrs
fs
dec
gs
adc
roll
jb
stos
movl
aas
adc
insl
cltd
nop
jge
lea
sbb
cltd
and
insl
xchg
sub
sub
jle
add
jbe
movsl
mov
xchg
test
inc
sub
adc
insl
lret
cmp
cld
lds
dec
inc
push
cs
lods
xor
push
std
sbb
mov
ss
sbb
aaa
mov
shl
enter
pop
sub
push
push
call
repz
xor
inc
bound
dec
xor
mov
jg
and
xor
mov
iret
mov
or
xor
jo
test
xor
push
insl
lcall
lret
dec
jo
cmp
sub
inc
roll
sub
and
out
shll
mov
popf
push
push
jae
xchg
shlb
das
sub
mov
add
push
add
inc
push
ret
xor
add
mov
inc
jns
mov
lret
imul
sbb
push
arpl
outsl
xchg
cmp
imul
daa
and
or
mov
insb
mov
ja
fsubrp
aaa
jbe
mov
mov
shlb
push
inc
dec
dec
cmpsl
jne
sbb
add
jns
mov
icebp
jne
aad
mov
sub
adcb
mov
leave
repnz
and
jne
sub
cmp
dec
das
inc
jmp
shrb
sub
popl
cmpb
scas
mov
adc
push
in
push
stc
push
bound
aad
add
pop
add
cmp
rclb
test
add
es
sbb
stos
jns
ljmp
hlt
push
sub
adc
mov
or
sub
inc
inc
push
add
xor
xor
fiadds
sbb
mov
mov
lahf
or
rolb
mov
sub
insb
inc
or
lcall
sub
iret
lock
sub
sub
cmp
test
out
fistpl
sub
sub
jbe
add
sbb
movsl
inc
jne
push
push
inc
push
cmp
add
push
sub
mov
cld
imul
and
cli
mov
inc
popa
rcll
aaa
add
idivb
cmp
repz
and
jns
outsl
jmp
popa
jo
pop
mov
movsl
lea
js
das
push
dec
insl
cmp
mov
cli
mov
xor
push
stos
pop
daa
adc
jo
inc
sub
test
dec
addr16
pop
out
cmp
cmpl
or
cmp
dec
cmp
cmp
mov
sub
cmp
mov
hlt
push
inc
dec
inc
shll
pop
pop
dec
dec
jecxz,pt
lock
dec
push
in
adc
cmp
roll
xor
push
arpl
cmp
sbb
int3
sub
bound
test
push
dec
and
cwtl
fcomps
rcrb
andl
jb
dec
mov
pop
fistpl
dec
inc
mov
xor
jae
outsb
ficomps
cmp
pop
mov
jae
fsubrl
pop
dec
mov
repz
divl
fsubrp
jo
xor
mov
or
das
mov
in
imul
sub
inc
inc
add
imul
insb
sbb
push
cmp
js
inc
dec
xor
fs
outsb
mov
push
add
mov
fcompl
sbb
add
sub
push
popa
stos
cmpsb
hlt
dec
xor
mov
cmp
mov
jmp
leave
imul
pop
cmc
pop
dec
lret
outsb
sahf
push
dec
sbb
fcmovbe
add
adc
xor
movsb
dec
adc
jmp
and
and
repz
xor
and
jo
out
inc
sti
cmpsl
pop
pop
dec
push
rorb
xchg
dec
fidivs
push
fisttpll
or
push
xorb
mov
mov
cmpb
pop
dec
inc
dec
push
loopne
sub
xor
popa
mov
inc
xchg
jae
and
lds
test
push
sub
repz
cmp
jns
push
dec
in
call
inc
cltd
pusha
mov
dec
inc
sub
in
imul
inc
lods
fldt
mov
sub
mov
push
inc
sub
pop
xor
and
repnz
test
and
cltd
movl
pop
and
sbb
jle
arpl
add
mov
add
fwait
cmp
push
bound
xor
into
add
push
jns
or
mov
inc
pop
mov
outsb
sbb
into
pop
rolb
pop
mov
cwtl
test
pop
fsubr
sub
loope
mov
xor
mov
or
pop
sbb
pop
or
pushf
mov
into
sbb
sbb
xor
loope
ja
int3
sbb
jae
cmp
aaa
test
adc
xor
xor
mov
jecxz
xor
jnp
mov
jecxz
xor
lcall
cmp
xor
and
test
sbb
xchg
or
jns
mov
add
xor
icebp
jns
icebp
and
xor
aam
ss
jns
icebp
jns
aaa
cmp
icebp
jns
icebp
sub
cmp
repz
aam
push
xor
pop
adc
sub
jo
sub
outsb
sbb
arpl
push
add
rcll
cmp
push
add
inc
jnp
in
jl
sub
pop
add
push
add
pop
cmp
add
cltd
in
jns
push
xchg
inc
dec
push
jne
push
mov
aam
cwtl
dec
dec
outsl
imul
add
call
mov
jnp
movsl
push
rcr
in
enter
popa
loope
pushf
xchg
sbb
jae
xor
inc
lret
imul
add
lcall
cmpsl
sub
add
xor
lret
dec
imul
xlat
inc
shrl
pop
int3
dec
mov
clc
cmp
daa
and
jns
push
je
pop
xchg
lret
push
int3
sub
inc
je
mov
push
jbe
shl
mov
inc
inc
jecxz
in
dec
outsb
add
ret
mov
xor
jne
push
jne
mov
jl
mov
add
cmp
push
push
add
adc
adc
dec
pop
clc
sbb
sbb
les
push
pop
xchg
and
pop
jl
add
sbb
add
xor
in
dec
dec
pop
sbb
push
pop
sahf
push
jae
add
mov
dec
dec
dec
inc
pop
add
addb
lret
daa
out
push
pop
sahf
push
jecxz
add
es
inc
shlb
cmp
adc
pusha
pop
dec
inc
inc
push
pop
add
xor
addl
sbb
add
cwtl
xor
pop
outsb
fisttpl
sbb
dec
cltd
scas
popa
ss
outsb
fdiv
stc
sub
sub
mov
xchg
sub
sub
pusha
xor
sahf
cmpsb
outsb
xor
cmp
fnstsw
aaa
push
ja
incb
cmp
sbb
mov
xor
jge
pop
pop
repz
cld
cs
out
outsb
push
ljmp
pop
subl
addr16
pop
and
mov
leave
repz
and
int3
sub
xor
add
inc
or
inc
push
fs
jl
arpl
rorb
sub
jb
mov
pop
mov
inc
pop
cmpsb
or
jns
jbe
add
addr16
mov
push
push
lret
adc
inc
mov
and
and
or
jle
or
arpl
dec
dec
call
data16
mov
mov
adc
cmp
push
jae
or
insb
inc
inc
stos
lcall
xor
ljmp
fwait
cmp
insl
jo
pop
sub
mov
rclb
mov
push
sbb
imul
inc
outsb
jae
sub
xorl
cmp
jmp
mov
inc
lods
push
sub
fs
add
push
dec
ds
rcll
sahf
repz
pop
push
mov
dec
imul
movsl
dec
push
dec
inc
jl
out
inc
jmp
shlb
push
mov
outsl
bound
sahf
sbb
pop
and
mov
ds
andb
daa
inc
outsl
mov
push
std
inc
push
or
iret
dec
outsl
jp
push
or
das
xor
sub
pop
pop
scas
dec
fsts
lret
jnp
repz
aaa
push
add
xchg
mov
inc
decl
jnp
fcmovnbe
pop
mov
sbb
dec
add
jl
cmp
cmpsl
cmpsl
inc
lcall
and
jle
insl
stos
sub
push
xor
dec
add
cmp
mov
mov
bound
out
sti
jmp
jne
push
mov
inc
mov
sarl
popa
mov
inc
mov
lret
bound
sbb
cwtl
mov
repnz
je
call
repz
cmp
outsb
insb
aaa
inc
mov
jae
rcr
jb
ds
ret
dec
loop
ret
push
aaa
out
fisttps
insb
sbbl
pop
test
jo
pushf
subb
in
dec
or
pop
pop
inc
inc
dec
jae
shrl
inc
sti
xor
xchg
es
push
inc
mov
cmpb
xor
test
mov
add
nop
inc
imul
add
inc
ja
icebp
add
and
sub
jnp
sbb
dec
mov
mov
lods
jmp
sbb
scas
xchg
cmp
and
push
adc
and
lods
xor
mov
imul
loop
cwtl
mov
ljmp
push
dec
jecxz
mov
je
call
dec
iret
lcall
imul
ret
outsl
outsb
fidivl
jne
out
xchg
push
dec
outsl
es
imul
inc
rcrl
jge
andb
cwtl
jge
icebp
pop
cmp
data16
shlb
mov
hlt
es
hlt
lahf
jae
cs
cmp
rolb
dec
sbb
cmp
js
mov
jne
mov
imul
jno
ss
bound
jae
pop
fs
arpl
popa
aas
lret
add
hlt
pusha
xor
imul
out
sahf
add
fwait
push
jecxz
in
jb
shrl
mov
mov
fidivrl
rcll
add
repz
in
sbb
imul
mov
pushf
cmpsb
dec
nop
cmpsl
jnp
and
popf
lcall
ljmp
sbb
pusha
and
push
outsb
push
xchg
dec
hlt
movsb
loopne
jbe
dec
fwait
push
lcall
xchg
push
fsubrs
inc
xchg
cwtl
lcall
je
mov
pusha
push
insb
loope
push
jo
mov
cmpsb
xchg
push
hlt
mov
pop
jbe
inc
stos
stc
fisubs
insl
xchg
fwait
es
add
stc
enter
fs
lahf
mov
jp
jl
pop
or
aad
adc
add
cmp
and
std
cmp
adc
xchg
bound
rorb
js
jnp
icebp
cltd
icebp
sub
data16
adc
or
sbb
jne
cwtl
add
sub
int
cwtl
iretw
mov
push
outsb
mov
adc
out
or
dec
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
dec
dec
adc
cltd
adc
test
movsl
mov
loopne
fs
fnstsw
cmp
add
rcl
leave
adc
add
repz
push
xchg
or
out
test
test
mov
es
test
add
add
movsl
adc
mov
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
push
and
add
xchg
lcall
in
jle
adc
mov
xchg
rolb
xor
adc
add
or
pop
xlat
xchg
jne
mov
add
sub
pushf
push
jbe
jns
push
mov
cmpsl
and
xor
pusha
xor
jle
pop
loopne
jg
repz
jge
jo
adc
pop
dec
xchg
pushf
in
jne
mov
xor
cmp
push
imul
pop
push
rcl
popf
iret
iret
iret
fcos
test
sbb
into
aad
shrb
jns
lret
mov
jge
into
outsb
cltd
jbe
jmp
scas
xchg
test
shr
lds
test
push
dec
inc
and
push
enter
mov
incb
push
inc
and
push
ret
add
push
dec
and
dec
inc
and
cmp
adc
inc
dec
movsb
sub
dec
mov
cs
adc
or
mov
jo
xor
popa
pop
sahf
dec
xor
leave
xchg
xor
lods
dec
push
and
xor
into
mov
xor
add
add
jns
ds
cld
and
imul
xchg
orb
adc
inc
rorl
outsb
mov
sub
sub
jecxz
sbb
cmp
outsb
push
rcr
jmp
mov
push
lds
enter
aas
xchg
mov
jecxz
lret
cmp
call
adc
mov
add
repnz
sbb
scas
xor
cli
inc
notb
movsb
mov
jne
xor
loope
cmp
loopne
ret
inc
xor
add
xchg
in
sahf
in
xor
mov
xchg
ja
mov
or
add
rorl
push
mov
jo
lahf
add
xor
mov
add
push
leave
outsb
inc
insb
popa
mov
aaa
cwtl
jo
arpl
push
lret
xchg
movsl
push
cmpsl
inc
jae
push
loop
pushf
hlt
es
xor
lahf
adc
xchg
dec
inc
or
sub
mov
xlat
push
sbb
or
rclb
fwait
test
rorb
cmc
jb
jae
cmp
jae
or
pusha
dec
cmpsb
jae
mov
jne
or
mov
pop
xchg
sub
cltd
sbb
push
mov
inc
jl
aas
dec
sarb
add
pusha
std
je
test
add
int
loop
clc
movsb
imul
mov
mov
inc
or
mov
or
popa
leave
add
jno
mov
or
dec
or
sbb
or
psubusb
cmp
sbb
jo
pminsw
into
xlat
mov
sub
popf
add
sar
insb
setp
jmp
fs
mov
and
pop
push
rcrb
xchg
jno
andb
pop
jne
cmpsl
bound
jae
and
and
dec
push
mov
iret
xor
adc
xorl
add
xchg
lods
ficoml
push
jp
pop
xor
std
or
push
cmp
sub
cmpsl
cli
push
jge
adc
push
mov
jo
sub
inc
or
jae
popa
addr16
pop
xorb
out
sub
push
mov
mov
push
fistl
and
hlt
inc
cmp
and
jae
sbb
xor
jno
inc
push
data16
mov
popa
je
sbbb
and
and
or
and
popa
repz
repz
or
mov
push
mov
in
inc
add
popl
sbb
sub
les
lods
movsb
pushf
add
add
das
and
push
icebp
inc
icebp
push
popa
fs
je
aas
je
push
test
jecxz
dec
out
inc
inc
dec
xor
testl
dec
cmp
notb
dec
outsl
sub
sub
add
shrb
fwait
pop
adc
out
adc
outsl
inc
outsb
add
mov
outsl
arpl
sub
push
mov
sub
and
jae
sarb
adc
sub
mov
cmp
outsb
dec
or
mov
popa
shlb
in
jmp
mov
inc
cmpsb
jno
frstor
leave
pop
popa
arpl
mov
in
pop
scas
insl
mov
cltd
ret
imul
lods
shr
cmc
out
in
icebp
je
sti
rcll
sub
popa
arpl
data16
pop
adc
sub
aad
sub
jo
xchg
sbb
lods
jb
mov
sub
inc
fisubrs
fs
mov
enter
popa
jb
out
mov
insb
pop
mov
sbb
cwtl
ret
fwait
scas
arpl
je
insb
lods
mov
les
fidivs
sub
sub
nop
and
mov
or
jmp
movsb
imul
cwtl
sar
inc
les
int
or
cltd
lock
bound
lret
imul
call
test
add
dec
arpl
and
fcmove
mov
test
stos
lock
or
shll
int3
aam
outsl
xor
lea
dec
outsl
dec
shrb
stos
jae
dec
push
xor
jns
movsl
in
dec
test
xchg
xlat
xchg
das
xchg
and
cmc
fcomi
and
out
push
xlat
stos
gs
andl
push
jp
pop
mulb
sub
push
jmp
mov
aad
xchg
pop
xlat
jge
repz
push
xchg
sarl
xchg
jl
xor
and
les
imul
ficoms
fnstenv
jmp
enter
mov
cmpb
ds
xor
mov
inc
sbb
and
dec
bound
xchg
cs
dec
cmp
pop
gs
sub
test
out
enter
pop
inc
xchg
sub
aam
test
pop
push
jae
sbb
lcall
fldenv
push
out
fdivrs
xor
mov
jg
xchg
roll
ljmp
mov
lret
push
push
jbe
les
inc
popl
popa
js
cltd
add
popf
or
dec
lods
lds
jne
sub
mov
repz
and
aaa
push
push
cmpsb
jae
mov
test
fdiv
test
and
xchg
outsb
dec
fisubrs
movsb
imul
cmpsb
jae
inc
sbb
mov
push
xchg
ret
cmp
jmp
inc
imul
jne
insb
outsb
push
jnp
gs
add
xlat
and
jno
insl
dec
icebp
es
xorb
cmp
fiadds
adc
dec
lds
pop
inc
lret
je
es
push
mov
dec
mov
shrl
xor
mov
xor
pop
shl
shrb
mov
shl
inc
out
xchg
and
pop
inc
mov
inc
push
outsl
mov
push
xlat
xor
add
mov
mulb
or
cmp
lcall
push
outsb
sub
bound
lea
in
sarb
iret
or
sub
inc
loop
and
pop
pop
jae
scas
out
cs
fstpl
stos
or
adc
test
jns
xchg
xchg
sub
or
mov
repz
popf
jge
es
mov
outsb
xchg
cmp
pop
push
fbld
sbb
shll
in
push
sbb
fs
adc
sbb
fadds
lret
out
aad
in
roll
sbb
das
imul
push
stos
add
dec
sti
test
xchg
push
pop
cmpsl
push
into
mov
iret
in
test
negl
outsl
mov
mov
inc
imul
movsl
pop
mul
daa
repz
cmp
mov
inc
dec
push
push
dec
es
push
dec
and
sarl
jmp
out
stc
sbb
push
add
cmpsb
mov
push
push
and
inc
aad
cs
pop
mov
sub
jns
bound
addr16
sbb
push
jmp
pop
push
pop
dec
addl
push
xchg
cmp
repz
mov
cld
aaa
sbb
push
inc
push
out
bound
add
or
mov
lock
sahf
out
in
int3
shlb
mov
push
sahf
out
sahf
inc
cmp
adc
jecxz
add
outsl
in
shrb
xor
xor
xor
sub
movsl
jne
xor
andl
sub
lahf
jb
cwtl
arpl
sbb
test
lret
push
dec
outsl
mov
mov
inc
pop
insb
mov
cmp
test
adc
push
arpl
inc
dec
inc
push
push
scas
or
insl
jae
jbe
sti
adc
mov
popa
in
inc
pop
outsb
popw
fidivs
arpl
jno
imull
je
cmp
add
insl
repz
iret
outsb
cld
fsubrl
mov
out
jb
sti
ljmp
fdivrs
dec
pop
mov
imul
add
fistl
sbb
sub
adc
push
xchg
push
mov
xchg
push
mov
push
arpl
ret
jns,pn
jns
jns
or
inc
imul
repz
repz
repz
sub
cmp
aas
repz
adc
cmp
xchg
jne
popf
fbstp
and
popf
inc
and
popf
fistps
popf
popf
sub
stc
das
pop
cmp
aas
daa
popf
popf
pusha
jle
lds
cs
scas
jne
cmp
repz
repz
sub
cmp
mov
cmp
aas
daa
pusha
repnz
rorb
dec
push
stc
popf
and
cs
mov
push
xor
xlat
jns
cmpsl
jle
ja
and
cmp
and
push
mov
popf
fbld
and
dec
xchg
pop
gs
dec
mov
imul
inc
dec
dec
rcrl
push
push
mov
cwtl
jle
movsl
lcall
outsl
jb
push
add
pop
movl
jo
jns
fimull
mov
pop
dec
adc
mov
pushf
add
rorb
outsl
imul
test
shll
push
push
inc
sbb
mov
push
push
cmp
inc
push
loope
imul
outsb
test
jae
imul
cmpsb
movsb
pop
lret
jp
push
and
and
cmp
aad
and
out
inc
shrb
rorl
add
fs
loope
mov
xor
flds
add
clc
add
js
les
pop
data16
lcall
cs
adc
push
cmp
bound
mov
bound
jne
jno
orb
jb
inc
and
filds
mov
bound
pop
push
and
imul
adc
je,pn
je
je
inc
inc
outsb
sub
mov
lea
cmp
sti
mov
sub
inc
and
or
mov
pop
sbb
fsub
js
in
or
clc
movsl
ficomps
xchg
adc
gs
dec
mov
push
fiadds
sti
push
lea
dec
push
pop
push
push
inc
dec
stos
sbb
ja
dec
jae
jne
repnz
pushf
nop
mov
js
fs
push
dec
out
sahf
out
cmp
and
fdivrs
cmp
iret
jp
adc
xchg
loope
xor
in
faddl
sbb
aam
rolb
rolb
xorb
pause
test
xlat
hlt
cmp
fs
push
sbb
xchg
addb
xor
and
aaa
sub
cmp
dec
adc
clc
xchg
loope
xor
sbb
push
int3
add
out
sahf
out
movsb
cwtl
nop
mov
js
push
jns
pop
pop
push
push
dec
out
sahf
out
cmp
sub
cmpsl
in
sahf
sbb
adc
loope
cmp
add
clc
xor
in
xorb
adc
vaddsubpd
add
mov
mov
pushf
nop
mov
js
jo
pusha
jnp
cmp
pop
dec
cmp
xchg
mov
and
sbb
hlt
jg
cmp
mov
popf
inc
iret
repz
shl
sub
mov
sahf
out
sahf
pushf
cwtl
nop
mov
je
fs
cmp
bnd
js
mov
popf
xchg
cwtl
insb
cmpb
popa
sbb
shlb
add
xor
inc
in
pop
jle
jo
ss
outsb
movsb
lret
and
pop
movsb
jae
mov
fnstenv
popf
sub
or
jb
dec
pop
xchg
inc
mov
fnstenv
fwait
into
add
sub
bound
xor
xor
fists
jge
add
jae
pushf
fmulp
sti
jb
pop
mulb
gs
repnz
pop
and
mov
jnp
dec
dec
sub
je
mov
in
fwait
popa
pop
js
jne
and
je
test
jne
test
arpl
sti
sbb
push
subl
mov
dec
in
pop
insl
lds
jnp
lock
and
push
imul
bound
pop
inc
mov
pop
mov
inc
in
pop
shlb
xor
push
insl
imul
xor
sbb
xorb
bound
jno
jp
lods
and
jae
fcmovb
inc
jno
jp
jno
xchg
enter
jl,pt
ja
imul
and
cmp
add
push
pop
movsl
lret
inc
push
sbb
jp
stos
movsb
jecxz
rclb
and
xchg
cld
das
push
sbb
jo
fistl
arpl
fisttps
fldt
mov
jb
xchg
call
pop
stos
push
ficoml
add
int3
mov
sbb
outsl
imulb
dec
push
bound
push
filds
outsl
andl
hlt
repz
jnp
ss
cmp
popf
mov
cmp
add
iret
jae
add
jns
mov
popa
int
ret
cmp
test
sub
or
dec
popa
fs
sub
in
arpl
negl
jmp
cmpsb
data16
xor
out
fdivrp
dec
sub
and
ret
mov
fdivp
inc
xor
stos
or
rorb
fnstenv
jae
outsb
fisttps
ficoms
jmp
jb
cmp
cwtl
inc
jnp
scas
cmp
pop
and
xor
dec
inc
cli
or
sbb
inc
std
sbb
stc
pop
xor
push
fbstp
sub
and
adc
in
dec
addr16
mov
xor
push
inc
inc
movsb
jp
adc
inc
dec
xor
jge
ja
fs
mov
fistpl
test
popa
rcr
aas
jo
es
mov
sub
divl
shll
adcb
and
push
in
outsl
in
cmpsl
movsl
dec
ds
dec
xchg
mov
fmuls
or
fwait
xor
stc
jle
mov
scas
insb
out
mov
test
inc
mov
dec
or
mov
add
cmp
dec
je
dec
cmp
dec
push
push
outsl
out
dec
in
movsl
inc
jbe
adc
sbb
sub
add
and
in
cwtl
and
sti
or
inc
test
cmp
mov
ror
xor
cwtl
je
lods
jae
jnp
shl
fcmovbe
jb
push
dec
fidivs
repz
jnp
jb
and
and
cmc
jge
mov
inc
pop
outsb
mov
jb
std
outsl
cmp
addr16
jns
mov
mov
sahf
outsb
scas
roll
lret
push
jne
push
jae
imul
inc
movsb
out
std
and
push
pop
out
add
or
mov
jmp
testl
fdivrs
adcl
pop
fdivs
shr
dec
jnp
ds
push
fs
dec
mov
sbb
sarb
push
das
xchg
and
dec
outsl
ret
pop
adc
data16
movsb
insb
mov
xor
popf
mov
dec
lock
bound
loop
xlat
mov
cmpsb
cmp
sarb
xor
pop
cwtl
sti
xchg
cltd
fisubs
jle
lods
jp
jbe
xor
in
push
lds
xchg
adcl
cmpsl
ljmp
pop
push
cmp
mov
sbb
jnp
dec
inc
mov
mov
mov
testb
dec
pop
jb
lcall
out
out
dec
ja
popa
mov
jbe
pop
sub
int
fcmovu
adc
pop
sub
cmp
adc
ds
ja
dec
jp
movsb
and
pop
cli
and
ja
mov
fnstsw
push
push
cmpsl
xor
test
or
outsl
ret
je
jge
add
imull
xorl
stc
cmpsb
mov
mov
loope
in
rcr
or
adc
outsb
dec
outsl
sbb
lock
xor
or
lods
gs
inc
movsb
call
or
ja
jnp
cli
add
mov
inc
out
fs
mov
arpl
es
mov
adc
mulb
data16
push
sub
xchg
dec
inc
shrl
fwait
jb
push
into
inc
push
sar
fisttpll
adc
dec
movl
adc
inc
sahf
daa
pop
mov
xchg
fs
pop
push
mov
push
jb
or
and
dec
pop
sub
ds
fldenv
mov
test
cmp
push
repnz
daa
adc
in
sti
imul
cmpsb
jae
fildl
cmpb
xchg
mov
mov
mov
shlb
pop
push
dec
push
inc
pop
mov
in
mov
xchg
and
xchg
mov
or
lea
stos
insb
jmp
inc
sti
cwtl
enter
outsl
stc
pop
and
sarl
cmp
lods
mov
inc
repnz
test
stos
mov
imul
daa
jae
xchg
rol
inc
push
push
push
cmp
xor
sub
pusha
xchg
test
rcrl
mov
jl
push
xor
push
mov
jl
sbb
fisubrl
pop
mov
cmp
aam
lcall
dec
sbb
fwait
cltd
in
push
cmp
fwait
inc
popa
incb
pop
dec
xchg
cmpsl
sbb
sbb
xchg
sub
gs
popl
inc
xor
iret
repz
cmp
mov
mov
inc
mov
sub
mov
js
push
jmp
sbb
xchg
push
cmp
sub
daa
movsb
cmp
and
push
cmc
mov
or
jg
inc
jne
cmp
dec
in
aam
jns
insb
sahf
inc
inc
lahf
push
negb
inc
test
loopne
jl
dec
dec
dec
inc
daa
xchg
ss
pop
push
popa
aaa
hlt
fdivl
iret
neg
mov
and
and
and
leave
or
sub
mov
movsl
outsb
je
iret
lahf
sbb
or
cltd
add
inc
push
inc
negb
stos
and
fsubl
loope
sarb
or
or
fstpl
pop
add
call
iret
inc
sbb
xchg
lods
test
cld
or
ss
xor
inc
pop
pop
cmp
xchg
jbe
lahf
add
fldt
test
jg
adc
mov
pushf
iret
jmp
enter
jns
pop
push
pop
cltd
imul
addr16
fldenv
hlt
mov
es
dec
sbb
dec
sbb
aas
mov
push
in
pop
fiaddl
mov
push
cmp
jns
repnz
jmp
xchg
mov
jmp
mov
stc
push
call
inc
hlt
aas
test
adc
dec
lods
stc
jns
fisubrl
outsl
adc
jp
cmp
and
sbb
pop
xor
inc
inc
movsl
xchg
ds
jge
aas
lcall
insb
dec
mov
ror
in
jae
inc
sbb
xorl
aam
mov
call
xor
adc
ja
inc
pop
aam
mov
jae
insl
adc
mov
dec
dec
jge
lea
lcall
push
shll
fisubs
cld
adc
fs
jns
push
sahf
stos
dec
sub
lcall
test
sbb
fnstcw
push
cmp
or
mov
xor
sbb
je
adc
sbb
outsl
int3
jb
arpl
icebp
out
push
push
inc
push
repz
jmp
push
aas
movsl
test
push
ret
imul
inc
dec
jb
insb
int
sbb
jb
inc
shl
shl
mov
cltd
xor
inc
push
mov
ss
iret
fistpll
pop
sti
inc
pop
push
loop
dec
aam
xor
sub
data16
iret
add
fistpll
int3
push
jo
xchg
bound
xchg
cld
scas
xchg
jp
sbb
test
mov
sub
push
push
loop
or
xchg
fwait
cmovo
jns
add
imul
stos
stc
ds
mov
aas
push
dec
push
cmp
cmc
repz
xchg
mov
inc
mov
lret
cltd
and
inc
xor
pusha
or
in
fnstsw
in
int
pop
jo
adc
or
and
aas
test
rorl
pop
sub
jl
cmp
into
xor
push
lods
jo
dec
stc
sahf
push
or
xchg
fs
mov
sahf
push
mov
or
popa
or
test
mov
xchg
add
add
fmul
test
int3
inc
adcl
xchg
dec
test
hlt
mov
add
cmp
dec
mov
add
mov
cmp
push
pop
xlat
mov
hlt
sbb
daa
int
in
push
dec
lret
mov
push
sbb
jb
ja
popf
fbld
sbb
stos
inc
iret
inc
bound
xor
mulb
test
ja
cmpsl
add
or
push
hlt
adc
insl
mov
cmp
xchg
movsl
push
fucomi
mov
push
aas
aad
xlat
push
adc
aas
sub
ss
jge
pop
push
jb
cmpb
xchg
jmp
pop
xchg
dec
sarl
jg
pop
outsb
pop
add
mov
inc
stos
fdivrl
mov
sbb
cmp
dec
mov
push
push
outsb
imul
mov
push
cmpsl
cs
sub
lret
mov
pop
cli
ds
pop
lret
out
les
movsl
mov
stos
mov
fmull
mov
imul
call
mov
xor
roll
push
std
data16
es
fisttpll
jmp
mov
jp
mov
xchg
imul
les
insl
fs
push
xchg
pop
hlt
jbe
jecxz
mov
xor
dec
mov
xlat
addr16
xchg
je
movsl
xor
dec
repnz
imul
lret
ret
sti
inc
iret
std
fs
pushf
mov
or
sub
negb
mov
sbbl
sub
ret
leave
fisttpll
sub
rcrb
xchg
stos
imulb
mov
jg
xchg
pop
sbb
mov
dec
out
add
dec
out
jne
into
ror
lcall
xchg
or
outsb
in
inc
dec
cmpsb
lds
jo
mov
mov
arpl
xchg
insb
fwait
test
test
adc
jb
push
ror
jns
inc
cmp
ds
fsubl
inc
icebp
mov
mov
xchg
mov
sub
xchg
ds
push
xchg
jb
fdivrl
lods
xor
jno
fs
mov
fwait
das
mov
jl
mov
jo
cli
push
mov
jmp
mov
jne
jnp
dec
jmp
aad
add
pop
mov
into
jmp
dec
js
popa
sbb
inc
mov
rcrb
inc
xor
je
fidivrs
aad
fldcw
arpl
pop
or
jae
jbe
add
jae
jbe
inc
fsts
jb
jge
dec
aad
mov
or
pop
push
add
filds
pop
add
test
mov
inc
fistpll
inc
out
xchg
cld
scas
cltd
popw
xchg
outsb
xlat
int3
enter
lahf
pop
lahf
push
xor
dec
imul
sahf
test
push
cmp
sbb
adc
push
push
movsl
mov
cltd
pop
je
cmp
jns
ret
or
dec
movb
push
and
imul
jae
inc
rcr
fwait
mov
imul
nop
lds
fbld
es
mov
insl
mov
push
jle
lahf
inc
in
adcl
fildll
xor
into
jno
sub
call
add
into
fisttps
daa
push
mov
mov
mov
lock
xchg
stos
pop
movsb
pusha
fs
xor
push
fcoms
imul
cwtl
sbb
clc
dec
bnd
and
sbb
lods
gs
lods
xchg
or
mov
sub
sub
imul
mov
inc
xor
xchg
in
lahf
leave
mov
movsb
test
sbb
inc
push
mov
or
popa
dec
jmp
xor
xor
movsl
cltd
pushf
add
sbb
inc
or
push
inc
push
push
sub
js
add
leave
idiv
jmp
aaa
inc
shll
add
mov
xor
mov
cmp
push
dec
xor
sahf
xchg
push
jbe
cmp
pop
xor
jmp
mov
das
sub
jae
push
xor
xchg
sub
push
clc
inc
sbb
xor
xor
nop
into
enter
cltd
bound
inc
dec
xlat
inc
fdivr
xor
add
inc
adc
aas
jne
sti
xlat
inc
push
push
inc
sti
jg
call
mov
hlt
cmp
cmpsb
ret
push
loop
lret
shrl
dec
pop
pop
popa
int3
jo
sysenter
adc
mov
mov
cltd
fidivl
bound
divb
call
dec
das
sub
aam
outsb
lods
ds
and
cmp
out
push
movsl
outsb
ret
adc
xchg
jae
nop
idivb
nop
push
and
pop
push
adc
fdivl
popa
sub
aaa
je
cmp
loop
mov
add
outsl
xchg
or
gs
mov
xor
sbb
dec
gs
outsb
mov
cmp
cmp
or
push
shrl
ret
push
fisubs
std
mov
fidivrs
push
dec
jno
enter
sub
jecxz
fidivs
fisubrl
andl
int
add
sub
and
add
dec
das
arpl
xchg
add
mov
sbb
aad
adc
add
lea
xchg
dec
lret
jnp
jne
in
repnz
and
fs
repnz
add
popw
inc
imul
xor
pop
cwtl
jl
je
dec
out
dec
mov
xchg
sbb
inc
repz
and
dec
push
xor
pop
add
jbe
pop
add
jnp
add
xorb
inc
xor
ret
call
or
push
fcomp
fisubs
sahf
fidivs
lods
in
orl
inc
mov
aad
mov
mov
mov
mov
enter
mov
mov
add
ds
sbb
mov
inc
or
mov
push
mov
lods
stos
mov
pop
clc
add
stos
aad
in
push
xchg
insl
add
mov
daa
mov
xchg
pop
ficoml
mov
and
cmp
popf
lods
mov
add
or
lcall
or
out
jne
add
jg
ficoms
rol
push
fisubs
scas
test
mov
jmp
ja
adc
fdiv
lock
cmp
rol
or
xor
adc
add
test
add
cltd
test
repz
xor
fdivl
hlt
shr
subl
add
push
paddb
lret
sti
insb
hlt
push
aam
sahf
pop
mov
jae
aam
int3
inc
cmp
xchg
sub
pushf
jo
inc
inc
dec
cmpsb
cmpsb
cmp
inc
xchg
fwait
dec
and
pop
arpl
push
xor
bound
not
gs
dec
cmc
mov
dec
jnp
sub
push
mov
mov
push
int
mov
fcoml
mov
testb
sub
cmp
jge
nop
xor
imul
popf
mov
pusha
cltd
push
mov
mov
inc
lea
sub
adc
std
into
adc
sbb
flds
out
jmp
lods
jnp
sub
inc
lcall
jne
lock
pop
push
or
and
mov
inc
xchg
pop
sbb
pop
fsts
push
outsb
jb
pop
repz
shrb
fdivl
xchg
ss
int3
push
sti
pop
mov
pop
or
andb
test
lahf
dec
clc
push
ljmp
movsl
addr16
sbb
in
xchg
adc
out
mov
adc
jne
xlat
mov
test
fwait
je
push
ds
and
jno
sub
sbb
sub
int3
sbb
sub
jmp
test
add
or
cmp
loop
jo
stos
gs
lahf
sub
add
shlb
js
xorl
andl
cmp
rolb
push
and
inc
lret
js
inc
and
ss
pop
mov
or
cmpl
inc
jne
mov
add
lret
or
xorb
test
je
test
je
add
add
push
call
pop
inc
xlat
and
dec
inc
add
add
call
lcall
insl
add
ret
pop
pop
pop
push
sub
mov
dec
or
add
rep
mov
stos
push
push
push
push
add
call
add
test
ret
add
and
or
aam
jge
outsl
mov
jno
out
jb
pop
xor
das
insb
bound
mov
jg
jge
shrb
sub
cs
leave
call
xchg
xor
dec
add
movsb
jge
and
xor
in
sub
jo
mov
fisubl
cmp
scas
or
pop
inc
push
push
mov
dec
ss
dec
dec
jp
inc
rol
inc
dec
jae
mov
shrb
inc
outsb
movsb
mov
mov
add
and
push
xor
inc
jne
sti
ret
push
dec
push
or
mov
mov
aam
push
scas
enter
mov
mov
cltd
cmp
imul
cmp
add
or
dec
cmp
out
hlt
inc
aam
in
adc
xchg
xchg
out
inc
out
shl
adc
inc
jmp
dec
das
inc
add
int
pop
add
stos
inc
xor
dec
outsl
rcll
mov
lcall
jg
in
mov
repz
repnz
test
test
pop
add
add
xchg
inc
out
ja
loope
enter
fists
cli
pop
cmp
dec
inc
pop
inc
push
xchg
or
pop
sub
js
xor
movsb
call
pop
mov
inc
push
les
repz
dec
dec
jl
fidivs
cmp
cmp
popa
repz
negl
fcmovbe
popa
push
xchg
pop
jae
out
addr16
out
gs
dec
fdivrs
xor
das
cmpsl
fiaddl
sub
lret
jne
jae
jnp
stos
xchg
mov
pop
sbb
xor
and
xchg
pop
add
and
and
cmp
ret
dec
add
test
cld
cmp
in
addl
out
addb
repz
aas
adc
sub
jge
test
inc
add
iret
xchg
decl
pop
fcoml
out
stos
mov
pusha
mov
fisttpl
outsb
iret
inc
adc
push
push
jle
sbb
add
lret
fisubs
add
or
test
sub
or
fists
mov
lcall
in
adc
cld
pop
jle
and
cld
inc
push
push
in
repnz
sti
in
pop
insb
cmp
lret
and
popa
sbb
cld
sbb
xor
push
bnd
addb
addl
repz
repz
movsb
cmpsl
mov
fcomip
outsl
into
xlat
data16
jecxz
pop
add
add
jge
add
jns
sub
or
pop
jl,pt
movsl
sbbl
fldcw
nopl
jle
mov
jge
js
iret
mov
in
call
sbb
add
ret
add
push
xor
fcomp
loopne
xor
je
stc
rorb
gs
sbb
repz
repz
cmp
nop
xchg
xchg
lahf
xor
rolb
or
xchg
sbb
mov
inc
mov
jno
or
clc
cmp
repz
mov
repz
repz
adc
out
push
fdiv
sbb
rcll
iret
repz
jns
mulb
xchg
mov
insl
andl
adcl
add
pop
xor
adc
and
sarb
fsubrl
cmp
xorl
inc
incl
dec
data16
sbbl
and
dec
mov
jne
arpl
xchg
xchg
or
ret
mov
adc
cmpl
push
and
add
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
add
add
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
addl
dec
pop
js
outsl
loopne
jmp
add
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
add
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
add
add
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
add
add
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
add
add
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
add
in
and
mov
jbe
sti
aas
jno
or
mov
add
add
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
add
add
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
add
add
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
add
add
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
jno
add
mov
das
lea
mov
inc
aas
movsl
jmp
add
daa
ljmp
mov
inc
rcr
push
arpl
int3
and
call
add
add
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
add
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fiaddl
add
add
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
shrb
jge
ficomps
frstor
aaa
inc
add
xchg
mov
add
add
add
pop
rolb
add
add
add
add
rolb
decl
add
rolb
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
add
add
mov
sub
push
push
lea
push
push
xor
call
roll
dec
loope
push
push
push
push
mov
jl
add
rcrb
cld
push
add
test
je
cmp
addb
mov
sub
fnstsw
and
lea
mov
jae
cmp
jae
mov
add
in
mov
lea
fbld
jg
sub
jno
cmp
out
adc
sub
cs
pop
push
leave
or
sub
shl
sub
rep
pop
mov
sub
ds
sarl
jl
rolb
rcrl
sbb
fcos
addl
or
pushl
adcb
ds
pop
pop
ret
sbb
inc
add
outsl
sbb
sbb
add
rolb
mov
inc
pop
cli
sbb
add
testl
and
jns
or
sub
xor
xor
or
adc
lods
jg
dec
dec
pop
cmp
shll
mov
fs
pop
mov
ss
mov
call
sbb
push
push
call
xor
mov
inc
cld
popa
lock
and
add
push
or
sbb
ret
mov
sbb
and
dec
and
sub
push
les
fiadds
adc
jae
test
push
mov
jnp
arpl
push
cli
outsb
lea
sbb
add
outsl
add
sbb
push
mov
es
sub
mov
popf
inc
push
push
movl
rorb
out
rorb
mov
xlat
add
filds
pop
xor
xor
leave
add
testb
inc
cmp
xchg
lcall
lea
xchg
jmp
testl
and
lea
pop
sbb
xchg
xlat
es
inc
push
sub
pop
and
pop
push
inc
push
stos
sbb
sbb
adc
and
lock
pcmpeqw
inc
or
inc
icebp
add
dec
pusha
add
movb
add
inc
mov
repz
sbb
hlt
cmpb
dec
fimull
pusha
or
pop
pop
pop
pop
ret
adc
pusha
jecxz
add
mov
add
jmp
adc
push
call
cmpsl
mov
push
add
rcrl
add
xor
add
add
mov
stos
pop
add
jmp
mov
or
push
jne
or
pop
scas
loopne
dec
ror
nop
add
mov
lret
rcrl
xchg
and
or
stos
pop
push
sbb
orb
cld
clc
add
pop
dec
es
loop
cmp
or
or
movsl
dec
push
jmp
mov
add
inc
adc
out
inc
lea
push
pop
and
inc
cltd
push
cmpb
pop
adc
and
nop
add
cmp
jge
push
inc
xor
mov
add
sub
je
pop
mov
jne
xlat
jmp
shll
cmp
lea
add
rclb
les
jae
pushf
loopne
inc
jmp
pop
pop
mov
inc
inc
adc
inc
cmp
inc
xchg
xchg
fwait
or
jnp
lea
xchg
or
adc
pop
push
scas
jecxz
fiadds
jbe
dec
sub
std
jle
scas
sbb
scas
jge,pt
mov
inc
int3
out
aad
cmpsb
mov
add
dec
add
je
push
ret
fs
in
adc
dec
or
and
add
movsl
movb
sub
push
cli
pop
rcrl
stos
shll
mov
stos
pop
shlb
xor
movsb
test
jne
movsb
call
jns
popf
inc
dec
les
and
cmpsb
push
test
cmp
dec
js
push
push
push
jl
push
fcoms
fidivrl
ret
in
fcoms
addr16
lret
pop
insl
mov
add
sub
dec
xchg
aam
mov
hlt
push
sbb
pop
sub
dec
xchg
push
push
push
in
sarb
inc
je
inc
idivb
subl
pop
test
push
jmp
pop
dec
nop
cli
cmp
out
sbb
stc
jmp
cmc
pop
mov
add
or
jno
ljmp
and
out
pop
inc
and
addr16
fisubrl
pusha
in
dec
lahf
mov
fidivrl
inc
dec
cmp
nop
loop
jmp
jp
dec
pop
dec
mov
jmp
jnp
mov
push
push
call
sub
adc
ret
jg
adc
rcr
mov
inc
or
addl
movsl
popf
ret
testb
dec
les
shrb
std
fdivrs
in
cmp
dec
je
jmp
xchg
push
lock
adc
rclb
ds
testb
aas
pop
pop
mov
xchg
adc
test
push
insb
cli
inc
or
sbb
push
inc
and
lret
inc
ds
outsl
adc
push
lods
lcall
lock
subb
sub
mov
hlt
addb
dec
or
dec
repz
mov
cmpl
inc
push
jb
mov
clc
lahf
inc
sub
cs
mov
pop
mov
sbb
or
pop
add
ss
imul
jo
cs
hlt
jne
inc
outsb
jns
mov
imul
adc
push
fsubrp
arpl
stc
repnz
adc
jae
insb
outsb
fistpll
fwait
inc
bound
xor
jecxz
out
imull
inc
dec
jp
xchg
inc
cs
insb
and
push
roll
pop
loop
out
jo
mulb
xor
mul
icebp
jbe
popa
addr16
mov
push
sbb
js
ja
cmpsl
add
fwait
adc
cmp
js
je
in
jmp
es
inc
dec
mov
fisttpll
or
test
or
fwait
and
cmp
or
add
pusha
mov
and
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
rolb
cmp
add
sub
add
add
add
add
rolb
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
