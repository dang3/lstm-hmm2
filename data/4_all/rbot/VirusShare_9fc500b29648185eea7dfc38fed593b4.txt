lea
adc
in
xchg
push
out
jecxz
hlt
push
adc
inc
mov
mov
movsl
cli
test
cwtl
aaa
xchg
cltd
lret
mov
mov
add
pop
jnp
push
push
jb
or
mov
sbb
adc
andb
dec
stc
mov
andb
outsl
stos
cli
sbb
pop
push
nop
pop
int
cmp
cmp
lea
rol
fcomi
lret
or
inc
cltd
sub
adc
mov
mov
adc
test
xchg
cmp
in
push
les
scas
fnstsw
mul
or
arpl
or
scas
jmp
cmp
mov
in
push
mov
inc
pop
call
add
dec
out
in
sarb
or
xchg
mov
inc
addl
sbb
les
mov
add
lahf
fwait
mov
idiv
std
gs
outsb
movsl
cmp
inc
xchg
out
popf
pop
mov
xor
cwtl
out
inc
dec
mov
xchg
xor
nop
jp
mov
pop
push
enter
cmp
popa
fucom
in
cltd
enter
push
adc
pop
aas
jp
push
aaa
jns
movsb
movsb
addb
jnp
jle
dec
frstor
jge
and
push
pop
rcrl
mov
push
xchg
dec
mov
outsb
cmp
icebp
mov
mov
sti
fwait
imul
jp
hlt
push
mov
cltd
push
mov
sbb
xchg
push
lea
push
hlt
leave
mov
push
movsb
jnp
add
xor
mov
jno
xor
cwtl
inc
dec
mov
out
movsb
mov
sarl
cmp
repnz
test
xlat
std
insb
mov
movsl
xor
insb
mov
add
mov
movsb
shlb
andl
scas
dec
out
push
rorl
arpl
movsl
and
cmp
xchg
add
jmp
mov
pop
mov
push
adc
adc
lret
xchg
xchg
fldenv
stc
xor
sbb
sub
fnstenv
push
add
ds
push
cmc
lret
gs
icebp
cmp
cli
push
loop
jl
subb
das
adc
jge
mov
lods
jle
out
ljmp
call
mov
pop
outsb
or
pop
out
mov
xchg
mov
mov
jns
or
jge
lahf
pop
dec
scas
mov
add
ret
out
sub
dec
mov
xor
sub
pop
movsl
xlat
cmc
daa
sbb
gs
outsb
jno
outsb
clc
adc
sbb
aas
jno
insl
popf
mov
shrl
and
xor
push
pop
mov
in
lret
les
dec
outsl
lock
adc
push
pop
sub
pop
jno
pop
mov
xchg
sbb
out
aas
mov
mov
xor
cltd
in
mov
mov
push
jne
push
sti
xor
adc
mov
push
adc
inc
add
arpl
mov
inc
mov
test
fisubl
sbb
mov
and
inc
lods
pop
movsb
sub
or
test
stos
add
pop
jne
push
adc
adc
push
xor
out
push
out
pop
dec
pop
adc
shll
sub
movsl
imul
adc
lods
jle
push
insl
jnp
or
test
sub
iret
lret
pop
cltd
pop
xchg
pop
pop
pushf
add
ret
xchg
cli
fcoml
jae
lea
fstp
fcmovnu
out
mov
dec
or
dec
das
imul
aaa
rcll
cmpsl
mov
and
adc
ret
cmp
ljmp
outsb
lods
dec
sub
mov
gs
pop
fwait
dec
scas
test
xor
in
mov
sahf
repz
out
insl
int
insb
or
movsl
out
pop
mov
movsl
and
rcrb
stos
push
mov
pop
lds
mov
outsb
popf
pop
cmp
clc
sbb
jmp
cwtl
sbb
mov
mov
jnp
or
jge
cmc
cmp
add
into
jge
adc
or
add
aam
inc
or
outsl
ss
into
dec
pushf
out
pop
mov
push
mov
daa
movsl
sub
out
cwtl
jle
loopne
sarb
mov
aam
roll
inc
loop
nop
push
jmp
xor
dec
or
mov
mov
add
sbb
pop
imul
leave
push
outsl
addl
insl
adc
pop
mov
mov
xlat
xchg
cmp
cwtl
adc
cmpsb
fnstcw
mov
jo
aas
pop
or
jns
mov
out
std
sbb
push
add
out
sahf
cmc
sbb
cmp
push
fxch
fs
out
out
cmp
jecxz
imull
adc
or
xchg
loop
hlt
mov
fisttpl
call
or
lock
jg
rorb
pop
cld
out
std
cmp
jae
sbb
movsl
mov
sbb
jle
fstpt
rdtsc
and
mov
je
inc
inc
jmp
outsb
movsb
dec
lret
mov
xor
jns
inc
insb
inc
mov
lret
dec
insb
xchg
sub
push
mov
cmp
lock
mov
pop
pop
movzbl
popa
mov
repnz
bound
xor
add
cs
outsb
cltd
cmp
cmp
aam
xchg
outsl
adc
aaa
test
call
ljmp
push
xor
jecxz
sahf
mov
cmp
mov
jne
cmp
cmpsb
sbb
lahf
push
jno
rcrb
or
outsb
repnz
int
andl
xor
sub
fdivs
jb
xor
insb
pop
test
inc
jae
pop
mov
xchg
das
lods
mov
pop
jl
mov
and
dec
adc
gs
rorl
test
adc
pop
adc
daa
roll
adc
push
xor
fsts
negb
out
mov
push
sbb
fldenv
mov
mov
xchg
imul
fnstsw
sub
sbb
add
xchg
xchg
ss
xor
pop
push
push
iret
mov
lret
daa
cwtl
imul
cmp
inc
ja
sub
inc
sub
lods
add
leave
or
scas
add
dec
test
or
jnp
shr
dec
or
adc
inc
xorb
add
push
xor
les
aas
mov
sbb
int
mov
pop
cmpl
int
test
fmul
data16
inc
mov
adc
aas
mov
mov
icebp
add
xor
mov
jmp
dec
xor
pop
jne
or
aaa
pop
popf
sbb
xchg
mov
sahf
adc
dec
mov
jne
in
add
inc
in
adc
jnp
xchg
mov
sub
jb
cmp
nop
or
lahf
insl
jns
cwtl
insb
lea
outsb
pop
sahf
in
gs
add
inc
mov
lock
xchg
lahf
testb
lock
mov
mov
jmp
sub
jp
cwtl
out
xchg
xor
xor
scas
or
push
out
cs
movzbl
int
push
or
pop
je
aaa
pop
popa
outsb
adc
cmp
movsl
les
ss
sub
and
cmp
orl
or
push
stos
lret
mov
push
add
add
jecxz
dec
lods
cld
shrl
adc
inc
xchg
adc
in
xor
mov
icebp
adc
xchg
and
rcll
or
test
in
and
ja
jae
push
clc
lret
sbb
imul
inc
jbe
push
filds
jmp
cltd
repz
dec
in
rcrl
adc
pop
sahf
flds
inc
movl
mov
es
sti
iret
cmp
out
or
push
roll
jae
sub
sahf
jae
icebp
push
push
xor
or
mov
mov
leave
and
aas
jp
push
xchg
sbb
sbb
or
addr16
sti
xchg
movsl
in
mov
jl
push
scas
adc
or
push
cmp
jb
pop
out
cmpsb
inc
adc
mov
lock
fistl
or
xor
lcall
pop
dec
push
cs
xchg
iret
jns
pop
push
jo
insb
adc
xchg
not
sbb
jle
cmc
sub
or
dec
ljmp
das
mov
adc
or
scas
mov
or
mov
push
dec
test
shrl
arpl
sub
out
jns
or
outsb
adc
sbbl
mov
adc
cmpsb
bound
push
lcall
push
jns
inc
stos
scas
fmuls
dec
fnstsw
fnstenv
dec
cmp
cmp
sub
mov
aas
inc
xchg
filds
sbb
jp
fucom
push
out
test
xor
adc
or
jmp
fstl
dec
push
pop
mov
loope
orb
adc
or
std
sub
adc
mov
mov
pushl
out
inc
inc
sub
fstps
out
jnp
rol
ret
iret
int3
imul
sbb
out
add
xchg
push
insl
mov
inc
sub
cs
repz
cmp
pop
lock
fstl
int3
or
push
adc
adc
shlb
dec
lret
mov
popa
mov
cli
popf
pop
mov
push
or
mov
jg
cmp
jne
gs
shlb
or
pop
jne
sahf
aas
int
pop
xor
les
add
lcall
das
and
or
pop
inc
inc
aaa
jns
loopne
jecxz
out
mov
lret
repz
iret
dec
cmp
lods
pop
roll
mov
lahf
mov
stos
sbb
jecxz
outsb
jg
cwtl
test
cmp
sbb
inc
lret
and
cltd
fldl
xchg
aam
mov
inc
fwait
xchg
cltd
adc
add
push
cli
scas
inc
stos
cmp
lret
dec
sbb
ljmp
sbb
nop
ret
pusha
outsb
mov
lods
fwait
testb
dec
test
aaa
add
pop
mov
jns
ja
sbb
adc
add
pop
int
inc
xorb
mov
pop
add
cmp
inc
push
sbb
es
mov
and
dec
ret
jg
bound
sbb
sub
movsl
push
dec
mov
inc
das
push
outsb
sbb
dec
dec
dec
jnp
shll
push
xor
cli
sbb
out
xor
jmp
es
in
push
sub
repz
lea
imul
sbb
mov
cwtl
cmpsb
pop
fisttpll
sti
jae
xchg
loop
and
aas
lcall
mov
imull
inc
sti
inc
sbb
hlt
dec
insl
push
stc
adc
out
mov
sub
adc
pop
cmp
xchg
push
leave
cmc
lret
je
push
cmp
push
mov
mov
stos
or
push
lcall
push
ljmp
adc
jnp
mov
jnp
sub
fwait
loopne
imul
xor
cmpsb
ss
lods
repnz
outsb
push
xchg
jg
and
inc
lahf
pop
xchg
data16
lret
add
adc
or
and
daa
adc
pop
and
rcrb
pop
fwait
test
sub
pop
lds
mov
addr16
subb
scas
call
rorl
fbld
pop
adc
dec
push
stc
loop
test
mov
in
or
jns
jne
jle
imul
popf
inc
pop
insb
inc
pop
repnz
cmp
xchg
jmp
ss
lret
aam
adc
popa
pop
insb
or
testb
pop
out
or
and
sti
xlat
cmovno
cmpsl
outsl
movsl
lea
pop
into
ja
es
or
mov
adc
repz
andl
mov
sub
out
sub
mov
jcxz
mov
aad
es
sbb
sbb
cld
dec
inc
pop
xor
imul
loopne
pop
push
push
dec
test
pop
push
aad
inc
fiadds
les
push
clc
xchg
adc
sub
xor
mov
cld
cmp
int3
fistpl
cmp
mov
mov
fisttpl
push
data16
xor
les
cmp
or
pop
push
xchg
sti
test
jnp
nop
shll
pushf
ds
xchg
outsl
push
adc
push
jbe
lea
aam
loope
or
adc
jge
fdiv
mov
pusha
outsb
adc
pop
cmp
inc
hlt
sbb
pop
jno
loope
sahf
sbb
xchg
lea
jp
sub
cld
jge
addr16
inc
sbb
shrl
dec
lds
jl
aam
push
jno
clts
mov
add
mov
jmp
outsl
add
dec
or
xorb
shlb
sbb
lahf
pop
fs
jecxz
dec
lds
mov
push
popf
bound
das
cld
or
hlt
flds
mov
icebp
xchg
in
xchg
out
xlat
rcll
xchg
xchg
cmp
inc
sbb
mov
popf
cmpsl
cmp
jge
or
inc
lock
cltd
test
mov
insb
xchg
or
cli
lds
xchg
xor
daa
sbb
fwait
lahf
pushl
mov
push
add
cmp
push
push
aas
mov
push
nop
xchg
mov
mov
mov
pushf
xor
sub
xchg
cmp
lds
mov
and
mov
test
jbe
cmp
int
jns
call
and
cmc
in
je
imul
pop
cmc
mov
mov
or
nopl
mov
cmpsb
sarl
cmp
les
xor
and
push
in
or
adc
and
pop
xor
mov
push
mov
fistpl
dec
imul
lds
push
lret
cs
fstps
pusha
dec
lods
imul
jge
nop
or
cmp
lahf
daa
lods
out
xlat
mov
pop
add
sarb
mov
cmpsl
lock
push
cli
pop
push
in
jg
adcl
aam
xchg
and
or
pop
les
sbb
std
inc
push
pop
dec
cmp
ss
lar
dec
int
xor
xchg
mov
dec
adc
mov
xchg
adc
cmp
jo
mov
mov
roll
cld
ret
mov
cmp
jecxz
inc
jae
idivb
lret
mov
sbb
or
and
cmp
xor
dec
push
testl
push
inc
lret
pextrw
inc
sbb
mov
mov
sub
loopne
pusha
mov
popf
outsb
fcoms
cmp
std
lds
adc
sub
mov
mulb
scas
and
jns
pop
push
dec
test
mov
loope
pop
xchg
cmp
mov
fcmovnbe
mov
inc
adc
ret
adc
leave
aaa
mov
mov
mov
ja
jae
int
push
lock
icebp
and
or
test
pushf
adc
jo
jmp
push
setno
pop
add
mov
int3
int
inc
dec
cwtl
test
xchg
lock
cmpsl
ds
out
xchg
sub
xchg
daa
inc
mov
inc
push
test
pop
xchg
mov
lcall
test
or
jp
roll
lods
xor
int3
je
hlt
or
sbb
enter
test
cmp
sub
mov
stos
loop
iret
cwtl
xor
in
jl
cli
push
adc
inc
xchg
and
sbb
fsubr
repz
push
or
mov
push
popl
int
xor
pop
in
mov
jmp
inc
mov
cmpsl
aaa
pop
xor
jnp
sub
mov
mov
popa
mov
test
in
repz
in
xchg
push
adc
and
sub
es
or
out
inc
cmp
mov
mov
mov
inc
int3
das
iret
push
mov
add
mov
repz
mov
out
adc
sbb
and
cmpsl
cmpb
lahf
movsb
sbb
xor
jle
jmp
std
ss
pop
jmp
adc
in
negl
lods
rcll
cmp
xchg
inc
popf
pop
xchg
and
daa
push
shll
ret
xor
add
push
xchg
jmp
in
sbb
inc
sub
ds
lret
jg
sbb
xor
int
sbb
xor
pop
cmp
cs
stc
or
sti
push
lods
jg
sub
adc
xor
inc
daa
mov
xchg
pop
movsl
xchg
push
sbb
out
adc
xchg
xor
imul
imul
enter
xorb
lods
xchg
sub
sahf
pop
push
fstpl
adc
add
inc
int
jl
test
popf
dec
mov
mov
mov
xorl
xor
inc
adc
add
stos
faddl
jmp
push
ljmp
testl
inc
cmp
mov
jne
out
adc
jge
xchg
or
xchg
ds
mov
shrl
lods
ja
mov
adcb
inc
insb
add
dec
inc
hlt
int
aam
out
call
adc
xor
xchg
mov
mov
lret
xchg
shll
push
iret
inc
ja
cwtl
add
mov
mov
cmpsb
test
fcomip
jo
mov
inc
int
mov
add
jno
insl
sbb
mov
movsl
jnp
movsl
movsl
test
hlt
sbb
fwait
insl
out
fucom
movsl
xchg
mov
repz
lret
leave
jbe
hlt
add
sbb
and
cmp
adc
js
cmc
cmpsb
lret
mov
xchg
mov
arpl
inc
and
sub
fwait
dec
lods
outsl
loope
inc
mov
sbb
xchg
add
sbb
movb
ja
cmp
push
push
shll
mov
mov
fnstsw
in
jmp
mov
insb
repz
inc
cs
adcl
mov
int
lea
fistpl
pop
aam
in
imul
rorl
gs
lds
rclb
stc
xchg
cmpsb
int
jo
mov
lods
mov
push
js
roll
sub
sbb
xchg
push
cmp
ret
adc
sub
sub
or
mov
mov
in
mov
cmpl
add
test
lds
sbb
rcrb
xchg
stos
rcr
mov
lret
sahf
popa
repnz
adc
sub
insl
jg
and
lea
stos
cld
iret
sub
repz
mov
mov
rorl
popa
push
lods
add
test
repz
cli
xor
daa
lret
insb
cli
and
push
xchg
sbb
pushf
jge
push
shll
mov
mov
pop
mov
pop
dec
mov
lahf
pop
mov
lods
and
cmp
loop
adc
mov
xor
add
int3
xchg
ljmp
repz
testl
mov
mov
and
inc
pop
push
js
sub
xchg
mov
fnstsw
rcll
lods
xchg
inc
and
cmpsl
int3
subb
xor
jecxz
int
daa
lods
or
inc
and
stos
mov
lahf
or
mov
dec
or
lods
out
adcl
xor
jmp
in
insb
test
scas
out
rcrb
adc
push
adc
inc
ljmp
cli
out
call
mov
xor
dec
icebp
rorb
dec
xchg
jnp
in
test
ficompl
daa
mov
jg
test
out
adc
xlat
xchg
fisttpll
cmp
movsb
mov
cltd
mov
xchg
cmp
mov
lds
mov
inc
test
insl
cmpsb
idivb
sub
push
outsl
add
clc
dec
vandnpd
test
mov
xlat
addr16
sub
cmp
sarl
inc
mov
call
out
movsb
frstor
scas
and
mov
cmpb
mov
adc
xchg
adc
dec
call
test
lds
add
push
popa
fcmovb
and
and
idiv
jmp
sbb
insb
test
lret
mov
jbe
mov
es
std
mov
arpl
jp
lods
push
mov
test
out
or
mov
adc
xchg
dec
xchg
mov
mov
mov
out
repnz
out
jb
pushf
pop
hlt
jmp
xor
sub
lcall
pop
leave
test
mov
cmp
hlt
jmp
dec
push
fidivrs
mov
mov
lret
jno
add
cs
jle
pop
lret
or
leave
lret
lods
mov
mov
pop
addr16
int3
aad
imulb
xor
and
dec
ret
lret
mov
adc
xor
ret
js
push
adc
aas
cmp
pop
jmp
push
lds
or
push
int3
pop
ds
mov
pop
icebp
sub
or
or
add
decl
and
jge
aam
xlat
sub
sarl
sub
imul
sub
cmc
test
xchg
xor
mov
outsb
nop
sti
sarb
or
jns
fistl
xchg
xor
or
in
xor
imul
inc
imul
adc
loope
cmp
inc
pop
mov
dec
call
in
mov
xchg
sub
dec
rorl
popa
pop
mov
pop
jge
cwtl
pop
ficoml
gs
mov
aam
arpl
jae,pt
pop
inc
push
mov
dec
xchg
xor
jo
sub
fstps
jae
jbe
or
cltd
push
cmp
pop
unpcklps
aam
or
dec
and
cli
jno
or
test
inc
pop
test
cwtl
repz
int3
lcall
xchg
std
js
push
shll
je
xchg
dec
enter
movsb
mov
cli
xlat
cmp
xor
call
pop
sub
push
in
jne
out
lahf
mov
mov
add
xor
inc
mov
dec
push
xor
cld
push
mov
xor
test
out
pushf
mov
inc
lds
adc
dec
inc
lods
out
xchg
roll
pop
subl
adc
pop
in
sti
add
xchg
loope
mov
sub
mov
xchg
aas
inc
decl
mov
ss
and
dec
popa
dec
incl
jae
sub
and
lahf
and
inc
xor
dec
mov
cltd
jmp
loop
mov
jmp
iret
jns
pop
mov
inc
xor
shlb
fnsave
aam
mov
das
shll
xor
stos
js
xorb
sbb
in
sbb
mov
pop
outsb
dec
inc
dec
das
lret
sahf
mov
sub
pop
xchg
out
push
in
jae
aas
cmc
ret
fistl
push
mov
sub
dec
aam
push
inc
jno
pop
add
out
inc
mov
sbb
inc
notb
roll
inc
xor
inc
xchg
mov
push
ret
stos
lea
in
push
jne
add
jge
inc
stos
cmpsl
mov
xor
jnp
mov
or
into
xchg
shrb
sbb
cmc
inc
fwait
fidivrs
stc
mov
inc
insb
sbb
scas
or
std
jmp
adc
inc
xchg
iret
push
je
inc
inc
ret
in
jbe
ds
aas
in
jno
ljmp
stos
cmp
jnp
rdpmc
xchg
insb
sbb
sbb
or
push
shll
sti
insl
xchg
repnz
or
sub
insl
int3
popa
jnp
enter
push
scas
es
shll
lds
rolb
push
sub
les
xor
aad
and
dec
data16
test
or
and
dec
jp
adc
mov
mov
lahf
dec
sub
mov
setnp
push
lret
cwtl
sub
add
push
inc
sbb
push
mov
lods
rol
fcomps
int3
xor
and
sahf
adc
movsl
xor
xor
iret
cmpsl
daa
mov
andb
lret
mov
es
fildll
xor
fsts
push
adc
cmpsb
add
add
iret
mov
out
cmp
dec
sbb
mov
mov
xor
outsl
push
into
fnsave
negb
inc
xchg
movsl
ret
repz
and
jnp
jmp
mov
nop
pop
imul
arpl
xlat
xchg
fstl
xchg
mov
pop
pusha
inc
or
mov
test
and
xchg
dec
xor
mov
sbb
out
adc
lret
repnz
adc
out
push
cmp
cmp
iret
pop
jae
subl
inc
xchg
or
xchg
adc
add
scas
pop
mov
popa
mov
mov
push
or
pop
sub
cwtl
insl
xchg
pop
xor
mov
mov
xlat
pop
in
adc
imul
ret
mov
stos
sbb
mov
lcall
cmp
lock
mov
or
mov
ljmp
xor
sbbl
je
lcall
ss
cmc
sbb
lcall
push
inc
sahf
out
pop
call
push
xchg
insl
mov
mov
push
out
testb
fcoml
fwait
jb
test
scas
adc
push
sbb
xchg
out
adc
andb
and
pushf
nop
or
in
push
mov
cld
nop
push
jle
xchg
shr
jmp
ret
int
mov
lahf
add
push
mov
lods
mov
mov
mov
in
enter
or
lods
shrb
out
faddl
std
addr16
cltd
sub
cmpsb
rcr
out
push
in
mov
cmc
cmp
call
outsb
mov
inc
insl
dec
movsl
sti
mov
stos
daa
dec
cmc
hlt
lea
mov
jno
mov
sbb
push
dec
add
leave
test
sub
test
iret
arpl
aad
push
sbb
or
int3
movsl
pop
lock
out
push
cmpb
add
out
and
stos
mov
shlb
mov
jle
xchg
cwtl
je
xchg
test
jnp
jle
in
cmp
mov
mov
stos
into
jne
lock
xchg
push
jl
xchg
push
and
push
dec
pop
xor
lods
jo
lret
cmp
gs
or
inc
scas
mov
pushf
mov
inc
sub
std
lock
and
pushf
xor
pop
cmc
jbe
mov
aam
sbb
xchg
xchg
es
xchg
rclb
jge
dec
pop
push
into
sbb
mov
cmp
or
shl
jge
mov
stos
adc
lds
icebp
jecxz
movsb
cmc
mov
mov
cmp
xchg
mov
adc
jp
mov
ret
insl
jnp
add
or
ss
xchg
int
popl
sbb
jmp
gs
adc
iret
pushf
ljmp
jbe
mov
cmc
push
adc
out
push
sahf
inc
sub
dec
pop
out
gs
jecxz
insl
and
in
ds
gs
out
inc
cmpsb
daa
pop
dec
mov
push
mov
vpmacssdqh
push
adc
or
cmp
jmp
lods
jno
or
dec
sbb
sbb
stos
fstps
out
jb
sbb
push
xchg
dec
cmp
fwait
arpl
adc
pop
loopne
nop
jecxz
jecxz
jne
cwtl
jmp
add
pop
jecxz
xor
insl
stos
popf
or
daa
les
lds
sbb
push
mov
js
push
jb
imul
cmpsb
cmp
push
jb
push
or
pop
lock
sub
cltd
js
push
mov
jns
lods
mov
lods
std
inc
mov
pop
in
add
adc
mov
pop
and
fs
in
sarb
rorl
cmp
push
xor
jmp
in
sahf
mov
push
sub
lods
cmp
jne
adc
aad
xchg
xor
push
mov
fwait
mov
pusha
inc
iret
add
push
mov
sub
pop
dec
into
cmp
jne
cli
add
dec
or
inc
push
popa
cmpsl
or
push
filds
inc
push
jne
mov
fbstp
aaa
lods
or
inc
pop
out
xor
sti
cmp
dec
add
fiadds
cmp
inc
add
mov
inc
push
dec
sub
sbb
icebp
xor
test
mov
imul
sbb
neg
test
test
outsb
mov
push
inc
roll
sbb
and
out
jl,pn
aad
dec
or
mov
add
push
sub
stc
repz
bound
xchg
mov
fstl
imul
cmp
fstl
mull
std
sub
int
cmc
adc
es
or
out
xchg
loop
xchg
inc
lcall
xchg
and
push
cmp
and
cmp
xor
push
sub
pop
std
out
cmp
inc
cmp
jno
pop
ja
popf
sub
pop
sarl
out
inc
in
cmc
adc
jo
ja
es
jno
pop
jecxz
sbb
push
pop
cld
loopne
jbe
or
xchg
push
adc
fidivrs
cmpsb
out
push
lea
fisubl
push
icebp
adcl
push
loopne
push
jo
lds
xchg
in
lret
sbb
cltd
pop
dec
jnp
pop
mov
rclb
ds
fincstp
js
dec
xor
scas
jecxz
and
pop
pop
ret
sbb
pop
or
fildll
xchg
insl
popa
and
pop
rorl
aas
fisubs
outsb
ljmp
stos
pop
xchg
cli
aad
int3
stos
mov
jp
lret
dec
xlat
and
xchg
adc
sbb
xchg
adc
sbb
lods
test
movsl
ja
push
and
add
imul
xchg
stc
loop
mov
aam
cmp
fwait
cmp
rorl
test
xchg
push
mov
iret
int3
outsb
cmc
pause
into
fstpl
push
gs
sbb
or
stc
xchg
lods
jmp
outsb
inc
sahf
stc
mov
push
into
cmp
and
pop
pop
or
sub
xchg
stos
scas
pop
fidivrs
and
faddl
pop
aad
sbb
xor
repz
mov
jp
lods
push
loopne
pop
lds
xor
dec
out
addr16
shrb
dec
bound
xor
ja
stc
adcb
pop
lcall
and
adc
sbb
jmp
jecxz
pop
jnp
jne
sub
mov
into
push
fldt
sbb
cs
mov
jne
and
scas
call
or
inc
iret
push
inc
inc
xor
testb
andl
xor
pop
mov
push
or
pop
iret
push
aas
shrb
adcb
ret
lcall
cmp
out
sub
mov
inc
jnp
es
or
leave
and
dec
mov
inc
pop
mov
ds
ljmp
ds
jecxz
sub
or
rcr
push
and
in
push
lds
lods
movsl
movsb
cli
out
or
ret
mov
push
lea
jne
pop
test
gs
dec
sahf
fnsave
xchg
mov
jno
aad
outsl
cwtl
and
and
add
add
push
sub
cmp
stos
stos
xlat
sbb
jo
les
test
pop
outsl
daa
pop
in
xor
dec
jne
call
lods
inc
flds
add
addr16
jae
sbb
in
shl
test
pop
jo
dec
xor
adc
xor
jp
sub
loop
inc
loope
fisubs
xor
ds
or
testl
out
add
add
pop
lret
test
inc
lahf
daa
roll
jne
test
jne
aas
ror
je
gs
adc
and
out
and
add
adc
adc
std
pop
int3
push
add
cmc
push
movl
adc
jecxz
or
ljmp
sti
test
pop
cwtl
jae
pop
xor
and
fucomip
lret
dec
pop
pop
mov
rolw
dec
or
adc
lods
inc
push
fcoml
pop
pop
xchg
adc
mov
pop
inc
mov
push
lds
xchg
rclb
xorl
jbe
repnz
mov
loop
xor
repnz
sub
jns
xchg
loopne
pop
push
cmp
subl
fsubr
loope
std
es
cmp
push
mov
mov
mov
mov
jge
loope
in
dec
stos
mov
cli
bound
adc
xor
dec
jl
add
push
sub
adc
xchg
shl
mov
insl
cs
cmpsb
fildl
mov
sub
sbb
int3
jns
rclb
lods
mov
inc
jo
pop
push
rolb
sbb
je
std
adc
out
adc
into
mov
rcrl
les
cmp
adc
add
and
mov
inc
and
scas
sarl
ret
or
cld
divl
adc
dec
mulb
mov
inc
dec
inc
jmp
in
out
scas
inc
jno
addr16
xchg
arpl
push
cmp
dec
sahf
jne
gs
sub
xchg
xchg
repz
sbb
pop
jb
and
dec
inc
mov
sub
or
loope
push
adc
xchg
mov
pop
loope
stos
inc
aaa
repnz
std
mov
and
lret
cmp
mov
mov
xchg
and
popf
insl
xor
jg
pop
imul
jno
js
call
jae
sti
rcl
stos
mov
cmpsl
xor
add
iret
cmpsb
jo
or
sbb
test
jns
lock
in
mov
xchg
adc
psubsw
pop
jne
sub
or
cmp
cmpsb
loop
inc
divl
pushf
fstpl
push
lods
fistpll
cmp
mov
test
adc
mov
test
xchg
dec
dec
testb
jl
out
pop
jne
and
bound
or
test
fcmovnu
in
nop
aas
mov
inc
mov
or
mov
mov
adc
ds
jmp
jb
dec
fnstsw
repnz
aam
xor
repnz
loope
xlat
mov
repz
mov
outsb
loopne
xchg
push
clc
dec
fucomi
nop
mov
rclb
fsubl
cmc
movsb
cmpsb
call
call
into
pop
inc
pop
jnp
inc
or
push
pop
sahf
mov
leave
inc
stos
push
jecxz
cmp
in
xor
js
mov
cmp
in
sti
or
jmp
push
and
imul
jno
adc
adc
scas
sub
stc
test
cmp
cmp
out
pop
test
mov
mov
cmp
int3
add
cld
cltd
in
gs
data16
loopne
inc
jno
or
dec
addr16
jns
movsb
add
sarl
movsb
sarb
jmp
jae
inc
add
cmp
mov
imul
pop
xorl
nop
xchg
push
popf
icebp
stos
mov
pushf
mov
popf
notb
add
fwait
push
test
mov
out
or
inc
test
pop
push
mov
adc
pushf
ljmp
mov
xor
sub
dec
jo
mov
movsl
sub
stos
xlat
inc
fiadds
xor
dec
out
xchg
and
out
dec
xchg
cld
pop
inc
mov
insb
test
ret
cs
cmpsl
mov
mov
jne
jne
xor
push
jo
imul
xor
pop
out
pop
inc
add
idiv
xchg
ficomps
test
sbb
shrl
xchg
fmull
insl
mov
loope
cmp
in
add
inc
call
pop
mov
mov
ss
hlt
mov
gs
lcall
leave
ljmp
lret
sbb
add
cmpsb
add
jp
in
jbe
pop
je
cwtl
inc
dec
inc
sbb
lods
jmp
iret
adc
add
iret
sbb
xchg
lock
xchg
inc
cmp
cltd
cmp
dec
das
xchg
jae
mov
mov
xor
sbb
xor
adc
cmpsb
cmp
or
jmp
test
mov
sbb
pop
push
xchg
mov
jg
outsl
jns
cmp
bound
ds
xchg
mov
sub
les
push
push
push
mov
fmull
ss
ljmp
les
ret
lock
lock
jns
xor
mov
pop
cmc
outsl
gs
iret
sub
mov
pop
xor
mov
xchg
jl
addr16
mov
and
sbb
dec
in
into
aad
mov
roll
inc
test
in
lods
fnstsw
dec
sbb
nop
cs
cs
sub
loop
ja
sahf
popa
adc
cmc
mov
fldt
sub
xchg
not
das
push
mov
inc
popa
pop
stos
or
mov
push
insl
lret
pop
xchg
in
ljmp
inc
add
mov
mov
decl
sub
mov
mov
pop
ss
test
incb
divl
mov
or
mov
push
xchg
std
sbb
push
jo
and
and
mov
outsb
lds
and
push
subb
mov
int
inc
mov
scas
push
aad
daa
data16
andl
test
enter
pop
mov
cmpsl
sbb
or
xorl
mov
cmc
push
jne
mov
inc
or
mov
add
enter
lea
popa
iret
data16
sub
xchg
movsb
subb
pop
mov
and
push
icebp
jmp
mov
and
jp
or
in
xchg
sbb
es
cli
xchg
add
fdivl
int
stos
sub
push
mov
sbb
ja
fnstenv
mov
lcall
stos
movsl
in
fwait
push
bound
mov
test
or
cmpsl
out
sbb
mov
ds
cmp
cs
push
dec
shrb
sbb
or
scas
mov
inc
mov
add
xchg
popa
clc
sub
pop
aad
test
xor
inc
inc
cmp
flds
or
cmp
cmpsl
jg
out
push
js
inc
icebp
ljmp
pop
adc
dec
push
adc
cmp
mov
enter
jg
jmp
pop
mov
lods
cmc
jnp
repnz
or
fwait
popf
inc
stos
jecxz
call
fidivl
mov
lret
sahf
mull
push
arpl
repnz
adc
insl
out
popf
dec
fidivs
xchg
xchg
adc
enter
cmp
mul
sub
iret
adc
dec
stc
push
faddl
and
test
jne
arpl
and
sbb
les
jecxz
xchg
add
push
mov
and
cmp
inc
cmp
fisubl
in
inc
andl
int3
mov
mov
adcb
stos
cmp
das
clc
fwait
xchg
push
addr16
lret
rcll
jo
dec
sub
popf
pop
int3
mov
push
je
sti
xchg
jae
xlat
inc
lret
adc
adc
das
jecxz
or
je
insl
pop
subb
outsb
inc
lret
jbe
daa
pop
sbb
fbld
inc
sub
jne
and
into
loop
xchg
xor
lock
rorl
xor
adc
adc
cmpsb
jne
fcoms
dec
mov
add
dec
pop
adc
xor
les
jl
dec
jge
icebp
stos
cmp
notb
cmp
out
mov
xor
sub
xor
inc
mov
pop
push
inc
aaa
out
sbb
negl
ds
inc
test
test
xchg
push
loop
jmp
mov
sarl
lds
test
jns
insb
mov
push
daa
cmpsb
or
lea
dec
inc
push
std
cmp
mov
in
dec
dec
mov
jnp
cwtl
pop
into
out
mov
inc
es
inc
mov
insb
pop
cmp
fldenv
jl
aas
sbb
lock
or
stos
lock
sbb
mov
in
daa
aad
push
or
xor
fstpt
sub
sbb
aad
xchg
das
mov
cmpb
mov
push
js,pn
xchg
sub
jp
push
movsb
xchg
push
mov
pop
fdivr
and
mov
cmpsl
mov
mov
outsl
and
rorb
jle
hlt
sub
jno
sahf
subl
or
and
dec
or
testb
add
xor
outsb
cmc
push
das
jb
aas
pop
daa
inc
lcallw
cmovge
inc
mov
cmpl
pop
loope
test
adc
cs
xchg
cmp
push
sahf
and
xlat
push
lods
jp
pop
insb
xchg
loopne
mul
push
cs
lods
xor
mov
or
mov
rcrb
pop
jmp
ja
push
xlat
lahf
pushf
fwait
push
sbb
xchg
jp
cli
adc
out
stos
push
jo
lods
in
stc
jae
mov
das
mov
out
jmp
stos
pushf
push
sbb
out
fsts
addr16
mov
jno
pop
and
repnz
sahf
repz
test
cltd
xchg
fsts
push
in
rol
aad
out
lret
imul
mov
xchg
aaa
repz
push
fnstcw
jno
vpcomb
xchg
and
stos
or
repz
xchg
test
adc
cltd
push
push
test
and
sub
outsb
jp
mov
mov
mov
pop
ficomps
xor
pop
lret
lahf
jno
sub
iret
adc
stos
cmp
lock
movb
jae
or
add
mov
jb
sbb
rolb
sub
fwait
test
xchg
inc
out
push
pop
jp
pusha
fwait
sbb
push
cmc
push
pop
dec
jecxz
inc
iret
push
mov
mov
pop
sub
adc
push
sbb
iret
cmovne
pop
mov
dec
loope
gs
loopne
test
mov
mov
lods
imul
xor
push
out
mull
jae
sbb
jmp
pop
xor
cmpb
bswap
outsb
sub
daa
sbb
adc
cmp
stc
mov
push
cmp
or
push
and
mov
cwtl
xor
sub
pushf
inc
and
aaa
testl
insb
lcall
loope
andl
mov
fwait
cwtl
mov
aam
push
cmc
into
xchg
repz
add
jnp,pn
sahf
inc
xchg
out
fnsave
add
dec
mov
in
sahf
in
es
pop
test
push
push
push
inc
pop
add
or
inc
adc
xor
addr16
pop
repnz
jp
loop
adc
add
sub
pop
arpl
stos
repz
or
xor
nop
cmp
pop
add
sbb
push
rep
cmpl
lds
xchg
mov
mov
pop
push
push
mov
inc
mov
filds
cmp
push
or
xchg
inc
call
xchg
je
loop
pop
inc
xchg
ss
jae
pop
jo
push
es
in
loop
js
dec
xchg
cli
rcrl
push
push
mov
sbb
inc
addr16
aas
and
andl
push
jbe
mov
jle
stc
dec
cmpl
or
jecxz
xlat
nop
into
xor
mov
insb
fdivl
inc
dec
mov
ja
xor
or
cmp
je
sahf
xchg
mov
or
test
sub
or
add
mov
lock
lea
add
cmpsl
and
or
popf
pop
fld
leave
hlt
or
push
dec
xchg
sbbl
lea
push
push
je
jp
xor
mov
movsb
shll
xor
ds
sti
adc
imul
and
push
xor
add
push
jg
add
xchg
add
subl
out
in
sbb
pushf
shrl
jns
and
dec
mov
mov
int3
cmp
mov
inc
sub
sub
icebp
pop
lret
insl
dec
ret
movl
push
cmp
cltd
push
std
xor
adc
lahf
cs
addr16
push
pop
test
adc
sub
fstl
or
xor
iret
lret
das
xor
loopne
sub
test
movsl
dec
popa
rolb
cld
push
adcl
stos
lods
fwait
jne
dec
mov
xchg
inc
addr16
pop
or
fwait
sub
pop
or
cmc
push
testl
lock
xorb
loope
fisttpll
repnz
add
mov
jnp
sub
xchg
call
rorl
test
cli
popa
push
pop
insl
push
push
push
lods
test
sbb
xor
test
es
cs
into
mov
push
ret
add
mov
add
xchg
sub
dec
fdivrs
scas
in
sub
in
xorb
outsl
imul
add
js
fiadds
fnstcw
jle
sbb
pop
mov
icebp
lods
push
fistl
mov
push
leave
stc
mov
fdiv
cwtl
sub
lret
jbe
test
outsl
dec
decl
test
sarl
andl
ljmp
sahf
arpl
push
cs
pop
dec
sbb
sub
xchg
push
ret
inc
mov
jle
cmp
jmp
mov
jns
lret
cwtl
jns
cltd
dec
arpl
cmp
xor
adc
xor
repz
jnp
xchg
data16
cmp
mov
int
dec
pop
cmp
jne
inc
dec
icebp
lcall
jno
in
into
xchg
xlat
xchg
push
xor
stc
aam
and
pop
push
pop
call
and
xor
pusha
into
push
shrl
xchg
imul
popa
dec
xchg
lock
pop
mov
movsb
jcxz
nop
lea
flds
notl
das
xor
fidivrl
dec
xor
mov
sbb
push
push
pop
add
lcall
lods
insl
imul
aas
test
or
rorl
sbb
adc
sub
jnp
js
jle
sub
pop
or
aad
in
inc
cld
mov
lret
movsl
stos
adc
pop
mov
mov
cmpsb
and
mov
xorl
aas
or
iret
mov
ret
xor
add
push
shll
insb
xor
sti
shlb
lret
fisubs
dec
add
loope
sub
jbe
stos
mov
inc
test
mov
push
push
cmp
jmp
outsl
mov
out
into
lcall
out
mov
mov
adc
add
sti
jg
sbb
adc
dec
add
jmp
mov
push
sub
push
or
sbb
roll
mov
pop
int3
cltd
ffree
jb
and
pop
sahf
xlat
lea
push
xchg
sub
adc
insl
xor
inc
cwtl
sbb
jecxz
addr16
stos
pop
sbb
lods
and
mov
sbb
inc
push
insl
push
into
mov
inc
dec
inc
test
inc
nop
push
inc
int3
test
stc
stos
inc
dec
push
rcrb
push
imul
stc
jp
pop
sbb
lret
popfw
jp
out
or
mov
insb
hlt
and
call
shrl
stc
iret
mov
mov
iret
add
sub
ljmp
iret
lret
sub
push
pop
dec
pop
popf
push
das
adc
addl
into
dec
mov
popf
cld
ss
stos
dec
dec
and
fistpll
dec
xor
idivb
lds
jb
daa
push
aad
sub
push
bound
mov
xor
sub
fcomi
int
xor
enter
or
jge
pop
mov
ljmp
stos
fldcw
xor
pop
push
in
sbb
sbb
stc
pop
xchg
je
insb
lods
adc
xchg
cmp
jecxz
push
dec
fstl
add
pop
addb
mov
rcrl
cmpsl
or
mov
mov
or
push
test
mov
add
push
xchg
in
scas
fdivs
adc
inc
mov
lcall
adc
loopne
mov
push
popf
rcll
fcoml
ss
into
pop
test
mov
cli
stc
fmuls
push
aad
push
jbe
stc
icebp
push
jb
xor
call
and
adc
dec
jns,pt
mov
fiaddl
jge
mov
fucompp
push
mov
push
jp
sub
pop
daa
cmp
mov
mov
push
into
aaa
push
loope
mov
jge
test
sti
mov
add
movsl
dec
xchg
movsl
frstor
push
bound
add
leave
sub
push
push
lret
inc
scas
mov
sbb
test
xchg
cmpsb
or
xor
push
jmp
push
lea
addb
push
sbb
int3
mov
xor
jl
sub
pop
sub
movsl
fisttpl
push
sub
cltd
xchg
loope
nop
or
or
fidivl
js
xchg
lods
enter
in
inc
fistpll
xor
jae
sub
bound
lea
les
mov
sub
jnp
lods
fwait
lds
xor
repz
adc
imul
fistps
and
sub
shl
pop
outsb
adc
adc
mov
sbb
cmp
sbb
or
sbb
add
or
out
jl
mov
inc
cmp
cli
test
in
sub
sbb
andb
mov
pop
shll
sti
test
xchg
movsl
scas
dec
mov
aaa
mov
or
lds
and
insl
inc
jge,pt
adc
popf
cmpsb
pop
mov
popa
mov
int
push
lcall
fdivrs
add
cmp
or
xchg
jb
add
or
mov
mov
rorl
aaa
push
scas
jg
push
pop
pop
push
lret
cld
xchg
aas
add
cmp
arpl
cmp
mov
push
cs
push
cmpl
lods
pause
mov
cltd
lods
mov
cmpsb
ljmp
scas
or
add
aaa
xchg
and
stos
xor
movsl
fnstcw
inc
mov
pop
pop
push
mov
mov
hlt
xchg
or
test
sbb
sub
sub
bound
loope
stos
lahf
ljmp
lods
movb
popw
mov
sahf
sub
and
aas
test
mov
or
aaa
aaa
into
lods
imul
mov
std
scas
aas
cs
push
dec
aaa
bound
gs
mov
sbb
jns,pn
or
cmpsl
test
mov
adc
pop
xchg
lods
jno
stc
sbb
mov
out
dec
jmp
mov
xchg
dec
aad
pop
scas
mov
push
nop
movsl
test
subl
xchg
inc
shll
push
ret
mov
push
leave
adc
out
decl
nop
mov
pop
mov
cwtl
ret
mov
scas
mov
sbb
jl,pn
mov
inc
mov
into
add
std
dec
popf
mov
test
jmp
add
add
mov
sahf
icebp
or
jbe
and
ja
ja
adc
and
pop
or
inc
call
out
orl
ja
jle
sbb
test
mov
sahf
cmc
jle
push
jle
inc
test
rol
cwtl
div
push
inc
cmpsl
clc
loop
add
scas
mov
sbb
xor
jmp
cmpsl
sbb
sub
push
in
dec
cmp
in
lea
fildl
lods
jmp
sbbl
push
lea
mov
and
jbe
in
xor
push
mov
stc
lret
push
inc
add
pop
cmp
xchg
mov
scas
adc
int
and
jo
adc
pop
mov
int
scas
popf
shrl
out
jg
stos
adc
sti
idivl
pop
scas
mov
rcrb
gs
imull
add
adc
pop
sbb
fwait
lea
adc
jp
xchg
mov
mov
outsl
mov
clc
pop
aad
test
sub
xor
fidivrl
lcall
mov
adc
push
adc
mov
test
jb
dec
imul
fisttpl
add
divl
mov
mov
repz
jns
mov
jg
lea
in
inc
lods
xchg
in
pop
daa
jns
push
cs
addr16
dec
cmp
or
push
adc
fstps
and
das
in
lret
sbb
fnsave
xchg
sub
cmpsb
in
scas
push
roll
dec
inc
xorl
xlat
inc
lods
sub
push
add
cs
jae
pop
pop
add
mov
icebp
jne
inc
adc
loope
roll
fidivs
shll
xor
mov
jle
jmp
inc
pop
inc
jg
stos
push
cld
xchg
jno
test
inc
and
cli
cmc
mov
add
in
pop
je
dec
bound
stos
mov
sti
es
dec
sbb
inc
adc
adcl
sub
xchg
movsb
lcall
mov
mov
jmp
aas
inc
sbb
mov
mov
and
dec
jo
movb
adc
into
jne
pop
or
fbld
xlat
mov
mov
jns
inc
xor
int3
pusha
xlat
lods
and
pop
lods
mov
daa
jae
jmp
mov
xchg
in
push
jne
cld
fs
inc
jo
pop
pop
ljmp
lret
in
cmpsl
out
push
sbb
inc
stos
fs
xor
mov
stos
in
sbb
xor
xlat
and
mov
cmp
mov
mov
push
test
ss
fs
xor
or
cmp
sub
mov
aas
gs
fnsave
test
inc
push
ja
mov
in
xchg
in
lret
adc
sarl
lods
ds
add
sahf
jb
clc
xor
jp
in
aam
xor
xchg
jmp
xor
jp
pop
jnp
scas
mov
stc
dec
loopne
xor
fiadds
cmp
cltd
inc
sbb
fimull
xchg
out
lret
adc
pop
push
dec
xor
repnz
or
inc
aad
sbb
popf
dec
lahf
cmc
adc
loope
jp
inc
add
push
and
inc
test
inc
dec
inc
insl
push
xor
sbb
repnz
js
push
imul
pop
mov
cmp
jae
in
ret
aas
loop
xchg
iret
push
out
movsb
pop
mov
push
mov
jbe
inc
fs
mov
mov
stos
adc
mov
mov
or
add
ljmp
jne
lret
arpl
pop
sbb
mov
flds
in
sti
pop
adcb
pushf
mov
push
mov
add
into
sahf
incb
out
addr16
lcall
imul
gs
and
xchg
into
call
dec
aas
lret
mov
cltd
dec
out
mov
cs
cs
clc
jae
mov
jmp
imul
cltd
adc
push
cmp
fs
or
inc
add
decl
leave
adc
imul
jb
sbb
jmp
pusha
push
sbbl
and
in
xchg
jb
pop
mov
stc
sub
pop
sbb
adcl
stos
and
adc
repz
jo
test
mov
ret
cwtl
jno
filds
imul
jne
sarb
bound
dec
push
jmp
add
mov
jp
addb
test
into
push
inc
sub
scas
in
outsl
push
es
sub
mov
push
xchg
dec
push
gs
pop
dec
mov
movsl
push
leave
cmc
jae
xchg
loop
inc
ljmp
sbb
jb
rcll
out
sbb
sahf
test
cmp
stos
icebp
outsb
cmpsb
movsb
in
dec
push
lods
dec
jmp
test
jge
inc
cmc
fwait
xchg
cs
movsb
jbe
rorl
loop
mov
lahf
clc
fsubp
lock
rorb
das
push
or
ftst
inc
sub
and
mov
cs
xchg
in
xor
mov
in
xchg
test
xchg
push
xchg
jp
pop
out
mov
mov
adc
test
scas
shll
loope
dec
adc
lods
js
shl
call
adc
aas
repnz
adc
sub
cmc
ds
xor
arpl
xor
popf
mov
mov
pop
jmp
add
xor
rol
repz
adc
cs
mov
lret
fildl
xor
test
inc
int
jl
mov
pop
sbb
test
les
and
mov
test
dec
das
adc
xor
popa
fisttps
loop
jmp
adc
jns
dec
ret
push
nop
sub
fstps
or
push
cmp
lods
dec
lea
in
mov
jnp
lcall
subl
nop
andb
xor
cmp
xchg
jo
inc
xchg
sahf
xorb
mov
scas
and
bound
cmp
push
outsb
jmp
or
push
cvtps2pd
pop
inc
inc
das
xor
aaa
fisttps
pop
or
and
idivb
test
insb
add
cmp
hlt
mov
jmp
adc
outsb
stos
or
sti
mov
sti
rcl
gs
lahf
mov
adc
or
call
and
iret
push
mov
stos
mov
add
push
adc
sbb
cmc
inc
push
mov
lea
je
movsl
cld
mov
add
sbb
fildll
push
mov
xchg
push
mov
mov
xchg
sub
pop
adc
pop
and
ffreep
cmp
test
out
les
loopne
xor
jns
cmp
or
ljmp
pop
xor
inc
fdivrs
std
or
xchg
mov
xchg
xor
xor
dec
cld
and
les
xchg
call
fwait
imul
jno
dec
inc
sarb
faddp
in
dec
adc
lods
stos
js
add
test
shr
xchg
mov
mov
pop
sbb
xor
mov
or
add
and
mov
sub
lods
dec
imul
xor
cltd
fistl
inc
lret
inc
cmp
bound
lods
xlat
lods
sbb
lods
cmp
inc
push
cmp
xor
xor
cli
cmpl
dec
int
push
add
dec
xchg
cmp
mov
fwait
sbb
xchg
adc
and
jl
int
and
or
mov
mov
cmp
subb
fcompl
dec
insl
in
dec
cmp
popf
aaa
adc
mov
sti
cmp
cmpsb
orb
sub
pushf
push
sub
mov
jg
or
psubsb
icebp
sti
shll
gs
in
pop
jp
shrl
lret
pop
and
loop
add
sbb
test
ret
out
test
jmp
cmp
hlt
aad
push
jle
scas
push
xor
cmp
rcrl
js
ret
sub
scas
jge
testl
xor
mov
insb
inc
mov
adc
xor
lock
push
push
out
sbb
mov
cmpsl
lods
aad
lret
sbb
stc
mov
divl
cmp
mov
rcrb
es
js
stos
lea
out
jge
lcall
aaa
jecxz
dec
pop
jns
mov
jne
mov
fmull
and
cmpsb
test
cli
xchg
fwait
jns
pop
xchg
mov
add
xor
pop
sub
mov
mov
fldl2e
jg
push
mov
inc
rolb
push
jns
inc
add
daa
in
cmp
cld
outsl
and
lret
std
lods
cmp
stos
pop
push
push
dec
add
mov
es
dec
sub
bound
inc
clc
das
inc
stos
daa
mov
jmp
adc
jb
insl
pop
fisubrs
jmp
repz
shlb
adc
mov
orl
push
or
push
xor
or
mov
ret
or
pop
xor
mov
test
add
jno
pop
xchg
push
loope
adc
mov
jne
adc
push
push
sub
mov
or
dec
aad
adc
and
aam
addr16
sub
sbb
cmpsb
flds
and
jb
push
push
mov
mov
mov
test
scas
in
fwait
push
out
sub
mov
lds
clc
xchg
and
pop
addb
mov
aaa
test
test
sbb
mov
into
fdivrl
mov
jl
xchg
xchg
popf
add
and
les
aam
jecxz
clc
gs
xchg
xchg
jno
jge
scas
insb
mov
fidivl
addl
push
jmp
push
push
adc
and
sti
push
popa
xor
jno
mov
gs
xor
push
jo
mov
popa
mov
and
adc
dec
bound
ret
push
jno
cmp
lods
push
ds
gs
adcl
leave
add
add
cs
add
out
pop
adc
mov
add
push
jmp
std
prefetchwt1
adc
mov
sbb
jle
repz
mov
mov
xchg
lods
out
push
sbb
mov
orl
push
je
mov
imul
jno
lret
cmp
aaa
mov
and
jg
pop
inc
lret
pop
stos
ss
in
imul
andl
cs
sub
pushf
jnp
adc
xchg
push
lea
cmp
fs
mov
jecxz
xor
pop
jns
add
cli
inc
mov
pop
adc
stc
jnp
es
cld
stos
add
jnp
cmp
add
pusha
mov
sbb
add
push
add
subb
incl
mov
hlt
sbb
jmp
sbbb
xor
pop
add
in
popf
inc
adcb
jp
mov
hlt
pop
out
ljmp
lret
push
movsl
je
and
jns
es
push
nop
loop
cltd
pop
orb
insb
xor
jne
pop
mov
jl
mov
dec
push
or
xor
pcmpgtw
push
jmp
stos
stc
add
scas
rcrl
bswap
or
pop
dec
rcrl
sbb
mov
les
sub
out
mov
xchg
lcall
cmp
and
loope
lods
xor
in
call
fs
daa
leave
mov
dec
pop
rep
jb
sub
dec
and
xchg
jae
lret
fisubs
cmc
mov
cmpb
mov
xor
imul
das
xchg
add
mov
xchg
psubsw
xchg
cmpsl
mov
add
push
cmc
mov
mov
push
test
push
mov
pop
or
mov
pop
push
lret
out
cmp
lcall
frstor
lds
and
repnz
push
sti
mov
xor
and
xchg
jns
xor
xor
sbb
dec
adc
aam
cmp
push
cwtl
scas
add
jmp
xchg
test
idiv
iret
xchg
adc
mov
mov
movsl
ret
rorl
xchg
add
pusha
mov
or
adc
mov
sub
cmp
jo
pop
icebp
fisubrl
sub
and
sbb
popf
add
adc
or
dec
sbb
outsb
jno
ljmp
mov
out
xor
lret
xlat
inc
push
mov
push
stos
or
out
insl
sbb
or
lock
cmp
or
sub
fsubrl
pushf
shrl
xchg
ret
movsb
cmp
push
jnp
out
in
call
cmp
test
xorb
mov
fnstsw
pop
loope
or
add
xchg
fcomps
xchg
mov
cld
popa
mov
ret
std
push
or
xor
cmc
dec
sbb
lret
aad
cld
in
clc
lods
enter
add
xor
mov
mov
or
inc
xor
lock
pop
sbb
out
jmp
sub
and
pop
in
push
cltd
iret
in
jne
and
push
imul
aam
add
dec
and
mov
repnz
jnp
cltd
xchg
pop
dec
lret
iret
jmp
sahf
addr16
or
add
jb
fcmovne
push
cmp
jge
and
mov
adc
lds
test
clc
mov
add
filds
mov
outsl
pop
cmp
jbe
cld
inc
negl
dec
movsl
mull
lret
inc
inc
repz
jmp
or
jb
jecxz
pop
xchg
scas
sub
rol
sub
repz
push
pop
xchg
inc
inc
pop
jnp
adcl
xchg
cmp
pop
jp
cmpsl
xchg
jbe
lea
enter
pop
inc
cwtl
jp
movsb
orl
mov
sbb
push
movsb
insb
test
lahf
fisttpll
mov
in
shrb
push
jae
cmp
stos
test
call
fadds
aaa
lret
imul
mov
adc
mov
and
cmp
inc
jbe
bound
pop
in
or
jb
sbbb
adc
xchg
and
jae
pop
mov
roll
inc
add
fdivp
pushf
ret
imul
sub
or
push
popf
dec
xor
jmp
dec
sub
jb
test
and
dec
xchg
mov
jnp
xor
jecxz
into
test
movsl
xchg
mov
sbb
lcall
dec
mov
sbb
cmp
cs
out
inc
mov
and
xchg
adc
out
das
pop
jns
adc
xchg
push
sbb
popf
xor
std
arpl
inc
pop
inc
dec
je
mov
sahf
pop
add
arpl
dec
cmp
xor
adc
jb
dec
fmuls
aad
dec
sub
mov
sti
repz
stos
sti
add
lret
lret
lahf
test
push
sub
dec
fs
psllq
stos
sub
cmp
cmp
dec
and
xor
sarl
push
lock
push
sbb
and
cmp
es
inc
adc
dec
test
outsl
cli
icebp
mov
lods
rcll
mov
xchg
push
aam
int
push
sub
jg
sbb
rorb
jo
xlat
ficompl
sub
popa
ds
int3
mov
mov
xchg
mov
xchg
fldcw
xor
mov
faddl
clc
fidivrl
and
cltd
inc
mov
mov
xchg
push
push
xor
lock
aam
mov
arpl
mov
jns
or
fnstcw
sub
lods
cmpsb
mov
mov
mov
xchg
in
adc
mov
scas
pop
and
aad
fs
mov
lock
add
push
xchg
cmp
or
push
cld
pop
xchg
jae
sbb
push
js
fnsave
into
cli
sub
mov
sub
int
adc
cld
xchg
mov
mov
dec
push
mov
mov
push
out
ljmp
dec
test
or
xchg
jecxz
xchg
push
int
into
fs
push
scas
pusha
iret
and
xor
push
sub
js
cmpsl
push
push
call
sub
lret
sub
push
subl
movsb
shlb
sbb
sbbl
std
test
inc
mov
push
stos
jg
jmp
add
roll
nop
stos
add
adc
cmc
or
fstps
fsubl
cwtl
cmp
mov
fdivrs
push
mov
les
stos
sti
jbe
adc
add
push
or
mov
fsubs
push
add
sub
addb
mov
insl
jg
adc
push
cs
cli
xchg
aam
mov
pop
out
fisttps
lds
inc
test
and
or
sub
push
int
mov
lock
std
hlt
dec
inc
stc
pop
xchg
pop
pushf
and
pop
aad
test
jmp
xlat
mov
pop
sub
leave
cwtl
adc
cld
mov
scas
mov
add
gs
and
or
sbb
ret
mov
or
cmp
outsl
outsl
or
pop
xor
out
push
es
mov
or
inc
andb
test
push
adcb
out
mov
add
push
mov
cltd
daa
das
mov
int
push
inc
stos
les
popf
push
nop
xchg
and
inc
mov
lcall
mov
jo
inc
test
movsl
pusha
adc
js
or
stc
xchg
outsb
imul
push
icebp
icebp
mov
insb
xchg
jecxz
sub
and
and
cmp
sahf
push
daa
stc
das
jge
out
stc
lcall
xor
js
scas
fst
test
cmp
pushf
shlb
gs
arpl
dec
mov
pop
add
shrb
mov
add
jb
inc
lea
pop
aaa
xor
adc
and
adc
ljmp
dec
dec
inc
or
or
clc
mov
cmpsl
cmp
out
jmp
fld
sahf
ljmp
mov
out
lods
jne
sbb
cmp
push
adc
sbb
mov
insl
cmp
cmpsb
lods
test
aam
dec
cs
mov
fimuls
scas
outsb
or
or
cld
scas
mov
jns
pop
push
adc
jne
sbb
mov
sbb
pop
xchg
xor
bound
dec
cmpsb
ret
push
imul
hlt
cmp
xlat
inc
jge
bound
mov
push
push
lea
jbe
and
jbe
push
out
inc
leave
loope
out
repnz
or
cmp
pop
mov
or
dec
inc
mov
lds
jb
add
test
pop
cmp
sbb
int
sub
lret
mov
push
out
test
inc
cmpl
sub
insl
rorl
pop
dec
jnp
arpl
push
insb
call
cmp
movl
in
clc
add
in
mov
add
push
mov
das
dec
ret
pop
mov
push
sbb
xlat
lea
add
xchg
push
mov
mov
push
sti
iret
mov
xchg
fldcw
sub
out
fimuls
daa
xchg
push
xor
mov
and
movsl
push
push
dec
stos
out
mov
xchg
lock
leave
xchg
lret
addr16
inc
xchg
out
std
mov
loope
test
das
sbb
cwtl
inc
arpl
movsl
stc
out
jae
lcall
mov
add
por
pop
cmp
xchg
add
dec
loopne
push
enter
push
pusha
mov
gs
xlat
mov
mov
mov
dec
mov
insl
sbb
xchg
dec
pop
filds
fldl
xor
fs
clc
lcall
jg
and
sub
xchg
sbb
xor
sbb
inc
cs
pop
mov
xchg
push
outsb
xchg
jae
leave
jmp
push
sub
ret
movsb
add
xlat
sti
push
pop
mov
pusha
ret
mov
inc
mov
push
les
xor
mov
mov
in
add
push
clc
inc
jnp
or
fiaddl
xchg
inc
vmovntdq
test
lahf
scas
out
cltd
push
arpl
pop
mulb
mov
mov
out
dec
mov
mov
mov
insl
dec
sbb
das
shrb
mov
dec
popa
push
cld
daa
stos
lods
mov
fimuls
test
insl
pop
fiadds
jmp
sbb
or
stos
imul
shll
push
faddl
xchg
loopne
xchg
sbb
fnstenv
lods
xchg
test
mov
dec
sbb
inc
adcl
mov
loopne
sub
push
test
movsb
xchg
fdivrs
mov
cmp
inc
fwait
adc
fldl
dec
je
mov
jns
push
hlt
out
popf
sub
aaa
mov
xchg
scas
pop
add
and
pushf
mov
cmp
lret
pop
out
jns
lahf
dec
cmp
out
gs
rolb
rolb
push
cmp
incl
xchg
xchg
xchg
mov
jmp
dec
dec
lds
jb
inc
js
mov
cwtl
and
mov
cmc
ret
jg
jle
lret
adc
decl
mov
pop
xchg
mov
mov
mov
mov
cmp
lret
popf
sti
and
das
pushf
and
gs
xchg
cmp
add
sahf
pop
ret
mov
lahf
xchg
dec
or
sub
add
dec
and
sbb
aas
push
mov
xchg
lods
mov
mov
push
pop
cmp
int3
les
cld
es
add
insb
out
or
in
sbb
aaa
pop
adcl
mov
jns
nop
xchg
bound
push
pop
iret
lods
jle
gs
adc
adc
cmp
fsub
lret
popf
repnz
pop
xchg
adc
xor
pop
sub
xchg
and
or
and
dec
mov
movsb
fsts
adc
cmc
fmull
nop
cmp
or
cs
out
push
and
mov
insb
xor
or
mov
ss
or
std
mov
clc
popa
stc
add
hlt
xchg
xlat
jnp
testl
jg
xchg
out
or
cmp
in
jnp
inc
xor
pop
decl
cmp
sub
xchg
inc
out
xor
jl
inc
xor
pop
xchg
mov
pop
or
outsb
test
or
cmp
mov
inc
xor
out
adc
xor
mov
jle
sub
mov
test
lahf
adc
in
jb
mov
xor
fstpt
cmp
sahf
sbb
cld
pop
outsl
sahf
int3
pop
or
pop
outsb
lods
aad
and
mov
mov
leave
sub
xchg
fistps
dec
inc
push
and
push
insl
scas
lds
xor
stc
inc
popa
gs
mov
test
xchg
fidivl
mov
movsl
sbb
loope
sub
fbstp
inc
dec
sbb
push
jecxz
cmp
jecxz
pop
mov
dec
jbe
loope
and
lahf
xchg
push
scas
cmpsl
fwait
ja
fsubrl
cmc
testl
pop
or
ljmp
or
push
push
je
insb
lea
mov
adc
test
jno
insl
insb
mov
fldcw
and
jnp
bound
mov
xor
lods
jle
adc
jecxz
xchg
lahf
insb
incl
jl
pop
push
lret
or
cmc
add
xor
and
and
sub
mov
sub
aaa
into
mov
inc
popl
popa
fists
rorl
xor
sbb
inc
ret
mov
cld
xor
mov
nop
xchg
ret
ret
jb
lock
fs
dec
sbb
leave
jb
jne
push
ljmp
loope
popf
or
imul
xor
adc
stos
adc
mov
mov
sub
insb
xchg
rcrl
sub
mov
shll
movsb
inc
jne
ss
popf
addr16
int3
lock
cmp
mov
js
test
into
cmp
int
call
int3
mov
and
jle
mov
mov
cmp
arpl
and
and
pusha
mov
and
mov
shlb
fs
cmp
jno
mov
incb
sbb
rcrb
iret
pusha
cmp
pop
outsb
imul
mov
cmp
mov
adc
jb
adc
xchg
inc
and
cmpsl
js
xor
pop
dec
dec
xchg
push
or
xchg
mov
push
pop
add
xchg
adc
xor
pop
pop
cmp
outsb
int3
push
nop
outsl
cmpsb
push
movsl
data16
cmp
cmpsb
test
push
adc
ljmp
jge
stos
push
and
clc
push
adc
mov
cltd
or
aas
fistl
fimuls
fcomps
out
hlt
and
cmpsb
in
add
and
mov
test
jmp
stos
pop
jnp
stos
adc
jg
cmp
arpl
nop
dec
aas
je
stos
cmpsb
scas
dec
dec
push
mov
pop
jmp
mov
ljmp
mov
push
mov
mov
mov
addr16
lret
pop
push
lea
cmp
out
shrb
cs
or
iret
pop
in
or
popa
inc
sub
mov
in
adc
xchg
stos
sub
cmp
sbb
mov
mov
out
outsl
mov
xor
inc
push
aas
imul
add
aaa
xor
aad
mov
popl
push
imul
fldenv
les
mov
xchg
aaa
xor
mov
dec
cmc
lods
cltd
shll
dec
mov
push
shrl
sbb
mov
mov
fdiv
aas
loop
sub
jle
pop
mov
mov
flds
in
and
mov
mov
lahf
push
popl
lret
mov
push
cmp
push
push
inc
mov
aam
mov
xchg
xor
ss
movsb
and
inc
and
xor
or
rcrl
xchg
insl
outsl
mov
out
loop
jle
sub
inc
push
fs
cwtl
popa
mov
jo
pushf
fwait
jae
cld
push
popf
xchg
inc
push
cmp
cmp
movsl
sbb
mov
pop
jle
push
push
mov
aam
inc
xchg
jae
mov
jp
gs
sbb
fimuls
notl
ud2
pop
pushf
lret
mov
push
mov
scas
cmc
repnz
mov
pop
movsl
int
lods
aas
mov
mov
pushf
aas
sbb
add
and
sub
add
pop
inc
xchg
outsl
sub
xor
enter
das
adc
sub
cmpsb
jle
sbb
stos
xlat
int3
add
fwait
mov
cmp
push
mulb
sub
adc
mov
xchg
loope
and
loop
aam
nop
push
sub
cwtl
pop
sub
hlt
pop
and
cmp
xor
xchg
fistpll
jnp
test
xchg
xchg
std
or
mov
testl
push
bndldx
test
gs
shlb
pop
push
dec
std
jo
dec
push
mov
imul
mov
mov
add
mov
in
push
cmp
cwtl
lret
or
pop
adc
and
dec
inc
push
jl
add
int3
cmp
jle
out
std
sti
es
sbb
pop
xchg
mov
mov
in
aaa
xchg
das
mov
or
pop
cmc
cs
or
or
jecxz
rcrl
xchg
daa
gs
call
into
or
push
and
adc
cmpsb
pop
add
xchg
cmp
jae
add
and
push
fstps
add
pop
jg
mov
fstsw
sbb
in
mov
mov
mov
add
cmpl
into
idivb
jns
sub
xor
test
pop
xchg
lret
add
adcb
cs
scas
xor
sbb
xchg
inc
cld
sub
ret
adc
nop
adc
out
fs
sub
scas
orb
mov
psubusw
dec
add
sub
popa
sbb
test
test
mov
popf
ficoms
cltd
adc
ret
lea
cli
mov
scas
add
fcoml
in
sti
dec
mov
xlat
dec
insl
inc
aad
mov
xlat
lods
icebp
jno
iret
adc
xor
push
jne
adc
xor
cs
xchg
dec
adc
test
adc
dec
test
and
sahf
pop
sub
xchg
cmc
adc
add
mov
sub
sbb
jle
aad
test
stc
xor
push
jmp
clc
divb
out
mov
aad
mov
xchg
stc
pop
test
lods
mov
xchg
ret
xchg
divl
lret
dec
cmp
sub
ret
inc
cmp
pop
mov
pop
jge
mov
inc
addb
mov
aam
cmp
adc
jae
pop
jmp
and
push
movsl
mov
jecxz
adc
cmp
cmp
out
xlat
stos
les
push
stc
pop
lods
adc
mov
or
cmp
add
jmp
xchg
addr16
cmp
sbb
sbb
dec
shrb
rcrb
nop
aaa
dec
movsl
mov
jmp
jle
cmpl
and
scas
lods
mov
movsl
adc
jmp
xchg
mov
ja
mov
jge
cmp
cltd
out
inc
jmp
addr16
aaa
sub
mov
or
jbe
lods
jecxz
movsb
lret
aaa
jne
stc
icebp
ljmp
shll
mov
incb
sub
in
aaa
dec
pop
mov
ss
mov
adcb
add
mov
and
fwait
pop
pop
lret
andl
insb
es
lret
adc
xchg
mov
arpl
shlb
insb
lods
jg
push
jno
std
or
gs
inc
gs
sbb
movsb
movsl
jg
test
or
push
insb
arpl
mov
daa
bound
out
outsl
mov
call
std
filds
cmp
cmp
sar
imul
stos
iret
adc
or
add
add
repz
rclb
mov
cmp
insl
adcl
lods
mov
jnp
in
scas
pop
push
cmc
ds
sbb
das
lahf
adc
out
aas
sub
jae
sbb
sub
adc
jnp
jecxz
out
sub
test
stc
stos
outsl
add
daa
test
inc
xorb
into
test
pop
cmc
sbb
dec
push
rorb
adc
mov
jbe
sub
rcll
loope
sbb
fists
push
lret
add
and
pop
testl
jbe
addr16
pop
dec
pop
and
push
fsubs
bound
out
pop
mov
push
inc
jae
cld
add
notl
mov
cmp
or
or
in
lret
sub
jae
stos
jg
inc
push
cmp
aaa
add
adc
mov
push
push
add
mov
or
cmp
test
cmp
rcrb
adc
add
lock
pop
int
roll
and
push
bound
lret
mov
lds
cld
add
aas
jp
sub
add
push
cmp
repnz
pop
mov
mov
fsubrs
jne
adc
and
dec
mov
scas
or
mov
lds
loop
ljmp
fimuls
das
fwait
sbb
cmpsl
push
shll
xor
insb
xor
insl
mov
dec
out
sbb
out
sbb
dec
aaa
dec
cltd
mov
sub
sbb
incl
in
ss
test
orl
orb
ret
adc
aad
pop
into
rcrl
cmpsl
push
push
sbb
mov
mov
mov
sub
mov
insl
xlat
mov
pop
imul
jmp
jle
sbb
stos
pop
popa
aam
bound
loopne
jb
xor
sub
out
jnp
mov
cmc
pop
popa
ret
stc
add
ljmp
enter
sub
mov
or
cmp
jmp
js
or
ffree
push
or
xor
iret
cmpsb
jb
pop
sub
adc
mov
lock
insb
mov
jo
push
lods
pop
mov
clc
popa
jb
jg
pop
and
mov
in
shrl
push
outsl
push
scas
test
push
cmp
int
dec
mov
call
mov
fwait
pop
repz
push
cltd
dec
dec
sahf
jae
push
sub
sbb
xlat
and
push
mov
enter
fisubrs
popf
scas
push
and
mov
sbb
mov
lcall
into
sub
sbb
xchg
nop
mov
fs
or
pop
xchg
pop
pop
xor
sbbl
cld
mov
stos
out
lret
mov
dec
jbe
inc
mov
loopne
dec
or
mov
mov
nop
cmpsb
leave
lcall
popa
incb
dec
jnp
mov
vpshufhw
or
mov
sbb
jae
mov
xchg
fnstcw
bound
imul
ds
dec
in
nop
test
adc
out
sbb
sub
lock
xchg
sbb
stos
sub
cmpb
mov
movsl
sbb
jge
inc
sbb
nop
dec
and
sbb
pushf
mov
lret
mov
xchg
orb
into
cmc
stos
jne
push
mov
ds
sbb
subl
jl
xchg
push
scas
xchg
loop
ja
inc
mov
or
test
adc
cmpsl
sub
xchg
leave
out
cld
or
repz
dec
rcrb
xlat
scas
mov
dec
inc
sbb
dec
inc
insl
mov
mov
notb
outsl
pop
enter
xchg
fimuls
mov
dec
mov
push
xlat
lds
xchg
adc
jmp
dec
pop
sub
iret
pop
mov
gs
inc
lds
movsb
or
clc
mov
ljmp
cltd
dec
int
xor
lcall
rolb
sub
lods
mov
roll
mov
mov
sub
popf
or
jp
std
pop
adc
and
add
fsts
inc
fcoml
adc
mov
je
mov
cmp
mov
inc
lea
cmp
insl
lea
insb
xchg
out
out
hlt
xor
cltd
insl
cmpsl
mov
push
test
addl
mov
dec
pop
sbb
inc
xchg
ja
test
xor
test
adc
sbb
ret
sbb
in
cmp
dec
lds
ss
inc
inc
repz
jge
iret
sbb
negb
mov
and
and
in
rcrb
xlat
jmp
orl
dec
mov
inc
add
dec
out
jp
cwtl
jecxz
pushf
arpl
pop
fldl
sub
add
push
movsb
sti
mov
push
ja
mov
jne
dec
adc
test
xor
repz
add
xchg
aas
adc
and
data16
push
inc
push
xchg
into
xor
fistpll
stc
out
or
ret
xor
pop
aad
sub
repz
in
bound
pop
sbb
xchg
pop
inc
cli
sbb
xchg
fiaddl
jge
cmp
popf
push
jecxz
outsb
je
dec
imul
sub
sbb
mov
dec
sbb
mov
sbb
ss
popf
xor
xchg
push
mov
add
pop
add
adcl
daa
loope
lods
inc
jb
xchg
ret
pop
mov
xchg
insb
xchg
mov
in
hlt
les
loopne
arpl
das
mov
das
aaa
mov
incb
addr16
xchg
cs
inc
fwait
in
mov
out
stos
sbb
cs
neg
cmc
into
icebp
lds
pop
sbbl
cwtl
xchg
mov
dec
fmul
xor
les
orb
lds
mov
loope
stos
inc
sub
lahf
mov
fwait
scas
push
cld
sub
mov
push
cmp
imul
jae
pop
fnstenv
cs
stos
addr16
mov
sbb
ret
out
cli
mov
push
xlat
ret
dec
test
jle
or
push
and
addr16
in
lahf
fists
call
lahf
lods
call
mov
enter
push
jo
push
xlat
icebp
xchg
cmc
imul
fisttpl
out
inc
push
pop
sub
mov
iret
mov
mov
out
mov
mov
lods
fdivs
loope
push
les
jge
inc
int
addb
fisubl
sbb
pop
imul
xor
scas
sub
or
shll
orb
mov
jmp
xchg
gs
sbb
sbb
cmc
jmp
adcb
cmc
and
sub
aas
mov
and
push
or
pop
outsb
cmp
in
in
addr16
pop
stos
es
in
insb
cmp
lods
pop
stc
adc
and
cli
filds
add
pop
jmp
sub
mov
rol
cltd
ss
mov
sbb
sarb
fildll
jbe
pop
inc
pop
pop
pusha
mov
fstpt
scas
pusha
pop
mov
mov
xchg
cmpsl
nop
gs
push
mov
call
and
jmp
in
cmp
adc
xchg
pop
and
int
dec
hlt
out
stos
and
test
inc
int3
cmp
mov
insb
loop
fwait
pop
push
push
outsb
inc
push
rcl
push
sub
adc
inc
push
jns
sub
jns
add
mov
inc
jno
fmul
xchg
adc
jno
xor
push
jne
and
mov
pushf
cmp
les
cmpsb
sti
jle
mov
mov
test
cmp
mov
insb
dec
shll
das
cmp
sbb
imul
ja
in
popf
cmp
sahf
fsts
or
scas
push
outsl
adcl
sbb
mov
scas
aas
lahf
push
adc
arpl
mov
jno
std
lea
mov
adc
frndint
xchg
mov
jl
inc
js
push
pop
xchg
inc
stc
or
arpl
push
sub
mov
lret
int3
cmp
jl
popf
adc
std
loop
roll
lods
clc
loopne
iret
repz
stos
aaa
ss
insb
push
mov
adc
and
push
xchg
sub
cmpsl
popa
shll
adc
test
inc
cmp
cmc
mov
push
fwait
and
add
sahf
sub
fwait
inc
xor
cmp
int3
es
repz
imul
hlt
xchg
xor
push
jnp
fisubrl
mov
mov
jae
arpl
insl
push
inc
inc
popa
lcall
sbb
inc
out
push
mov
lret
gs
hlt
mov
push
sub
into
movsb
and
dec
inc
sub
mov
sub
in
lds
push
jle
xchg
testb
std
aas
and
or
insl
loopne
call
mov
mov
notl
cmp
lret
add
mov
and
or
xchg
mov
insb
cwtl
pop
pop
mov
sbb
fsts
fxch
mov
mov
mov
cmp
jg
aad
adc
sub
sbb
inc
shlb
lods
movsl
shll
int
xlat
cs
lret
cli
push
jge
sub
daa
clc
push
popf
push
pop
and
and
mov
mov
mov
sti
sti
stos
sbb
sub
imul
mov
scas
ja
mov
and
inc
adcb
das
push
movsl
mov
jns
mov
inc
push
jg
sti
in
sbb
ds
sub
inc
cmp
or
ds
add
cmpsb
push
fstps
test
inc
inc
enter
lahf
cmp
ret
out
fbld
mov
lods
pop
push
mov
push
jge
aad
test
divl
es
aam
sbb
es
out
scas
std
add
xchg
inc
mov
mov
and
mov
nop
test
push
lret
addr16
and
dec
mov
insl
xchg
mov
imul
sahf
rcl
lret
inc
stos
inc
in
imul
insb
fisubrl
pop
pop
das
imul
loopne
aam
mov
jae
lcall
test
mov
and
mov
xchg
outsb
pop
jo
push
pop
ret
test
xchg
push
rcr
cmp
imull
mov
pop
imul
testb
ud0
xor
mov
xchg
mov
pushf
and
and
xchg
pop
ss
mov
stos
addr16
sub
mov
push
imul
adc
popf
sbb
pop
sbb
inc
and
les
popl
pop
jmp
nop
nop
mov
xchg
jge
pusha
adc
dec
inc
sbbl
call
mov
or
dec
cwtl
mov
cmp
mov
loopne
sub
imul
fadd
test
and
xor
lea
jbe
andl
mov
sub
pop
dec
sbb
into
fistps
inc
and
or
and
scas
cwtl
add
mov
data16
adc
dec
loope
je
movsl
fdivr
stos
adc
and
xor
out
xchg
js
test
repz
js
enter
in
push
and
jno
and
out
data16
jp
inc
xchg
sahf
mov
lods
cmp
aaa
in
imul
in
pop
and
push
stc
out
icebp
jecxz
push
testb
jbe
mov
out
lea
sahf
test
test
dec
xor
mov
movsl
fildl
lret
inc
xchg
bnd
dec
xchg
xchg
aaa
pusha
xchg
popa
in
push
lods
out
and
cs
inc
push
mov
dec
ljmp
xor
out
or
add
arpl
fisubrl
les
xorl
add
pop
shr
and
jns
xchg
sub
cmp
scas
out
xlat
cmp
scas
push
adc
add
int
inc
das
stos
mov
fucomi
daa
int3
clc
ret
mov
xchg
adc
test
movsb
lcall
mov
jg
fscale
sub
orb
outsb
push
inc
xor
mov
lea
inc
int
pop
pop
jl
jnp
decb
mov
lods
dec
sbb
test
test
or
xchg
push
das
int
mov
xchg
jnp
cmc
xchg
jnp
mov
out
ljmp
decl
int
inc
jbe
notb
sbb
adc
rol
push
jae
gs
test
ror
jl
ret
rcr
inc
adc
movsl
jp
cs
sbb
cwtl
cwtl
jno
sub
int
jnp
mov
cmp
fistpl
in
cmp
shll
push
fidivrl
addr16
js
std
lock
push
imul
mov
inc
lret
push
int3
das
xchg
loop
and
mov
shrl
xor
ret
jbe
mov
xchg
jns
lock
and
push
xchg
mov
mov
add
or
in
ljmp
outsl
mov
push
lods
sbb
lds
sbb
pop
or
outsb
xchg
bnd
or
mov
fnsave
es
jo
adc
addr16
jbe
xchg
mov
lret
mov
test
jbe
stc
sub
in
mov
xchg
and
add
cwtl
push
jb
add
loope
mov
shlb
pushl
sub
loopne
dec
sbb
int3
leave
fwait
xorl
mov
fsubrl
mov
addr16
add
insl
fcoml
lahf
loope
pop
push
icebp
repnz
xchg
in
xchg
jns
inc
cmp
cmc
ljmp
call
push
popf
arpl
xchg
add
out
lcall
jp
dec
lcall
pusha
andl
push
dec
or
xchg
cmc
mov
lds
js
adc
pop
imul
pop
push
inc
or
push
andl
and
adc
dec
and
push
mov
pop
sub
jmp
push
dec
sub
xchg
mov
loope
xchg
push
call
testl
jg
mov
xor
cmp
stos
and
pop
pusha
xchg
incb
mov
ljmp
mov
movsl
movsb
pop
sbb
imul
lret
negb
inc
mov
mov
lcall
lret
xor
pop
or
mov
cmp
xchg
lcall
inc
jl
push
lock
aaa
pop
add
js
and
mov
mov
cwtl
fs
mov
fstl
sarb
std
jmp
lods
test
and
out
lods
xor
out
xchg
cmpsl
mov
inc
adc
rorl
adc
dec
jno
repnz
xchg
mov
in
cmp
sub
mov
filds
xor
lods
mov
out
mov
in
mov
mov
mov
xor
popa
mov
and
int
and
mov
repz
pusha
out
sbb
aam
cmp
xchg
push
mov
ret
mov
add
je
mov
in
loope
cmp
mov
lods
add
aam
jae
test
pop
int3
stc
scas
xchg
xchg
xchg
xchg
in
pop
jmp
jns
push
into
add
push
mov
pop
pop
and
cmp
jne
jl
in
mov
jl
or
lahf
dec
and
mov
xlat
mov
xor
pop
sbb
and
in
lock
push
iret
push
in
or
movsb
pop
add
mov
push
jge
pushf
mov
mov
call
and
dec
repz
push
or
std
rclb
xchg
pop
sub
ss
xchg
xchg
push
daa
bound
jb
xor
popf
mov
adc
sub
sbb
int
jmp
clc
push
cli
pop
adc
loope
mov
int3
adc
and
xchg
push
mov
cmpsl
ds
mov
loope
out
roll
push
add
ret
fnstcw
aam
mov
dec
push
pop
inc
xor
fisubrl
or
adc
sbb
faddl
addr16
push
bound
cwtl
adc
inc
cld
dec
sbb
lret
push
mov
sub
add
ljmp
jecxz
rcr
push
adc
jg
jb
pop
and
mov
mov
dec
scas
push
bound
sub
pop
movq
shll
imul
xchg
out
adc
loope
scas
xchg
pushl
adc
movnti
arpl
or
mov
cltd
decb
dec
xchg
testl
mov
es
xlat
or
das
out
fcoms
sbb
xor
lods
mov
push
lds
pop
cmp
in
sub
fdivr
cmp
testb
jmpw
jecxz
ja
jmp
mov
lret
nop
rorl
ja
testl
js
cmpsl
add
hlt
adc
inc
orb
xor
sti
sub
and
gs
pop
jo
or
dec
jl
sub
ret
mov
or
xchg
and
cld
jmp
pop
ret
xchg
jmp
loopne
cmpsl
daa
fldl
jmp
dec
or
shld
call
dec
outsl
and
inc
dec
stos
call
and
mov
das
stos
inc
fwait
xchg
dec
lods
lds
xchg
cmc
subb
push
or
sbb
mov
add
mov
pop
imull
iret
inc
or
dec
mov
adc
xchg
mov
mov
sub
testl
jne
das
testl
pop
enter
in
insl
pop
adc
adc
inc
xchg
mov
es
movsl
shlb
inc
mov
add
mov
ret
dec
insb
adc
add
test
push
push
push
dec
das
xor
repz
dec
repz
adc
mov
push
aaa
nop
dec
and
add
int3
push
push
sbb
cwtl
and
mov
jge
dec
mov
push
into
shl
dec
cmp
add
jo
or
cmp
and
orb
repz
mov
dec
lret
mov
mov
mov
test
xor
ljmp
dec
cmpsb
shrl
dec
push
mov
sub
sub
lcall
test
mov
pushf
adc
cmp
jae
cmpsl
sbb
stc
adc
daa
adc
in
push
inc
pop
xor
sub
add
xor
movsb
mov
fwait
sub
addr16
add
jle
or
fldl
insl
cli
xor
adc
movsl
lods
cs
imul
leave
pop
fwait
cmp
sub
mov
xchg
das
mov
stc
mov
push
push
xchg
add
adc
in
sbb
fcompl
lret
sahf
xchg
movsb
aas
jnp
shll
push
dec
lcall
push
jmp
adc
and
gs
fwait
daa
imul
and
rcll
jp
sbb
punpckldq
mov
mov
xor
push
xchg
xchg
mov
sub
xchg
repnz
movsl
invd
xchg
idivb
mov
fadd
inc
pop
xchg
xor
fwait
mov
popa
lock
loope
int3
sbb
sbb
outsb
xchg
bound
cltd
mov
push
push
jnp
sub
nop
xor
and
les
sub
push
and
xlat
and
in
repnz
stos
nop
sbb
je
inc
push
xlat
loop,pn
xor
sub
mov
xchg
fwait
xchg
jle
iret
dec
inc
inc
test
sbb
mov
jle
fcmovnu
pop
std
or
in
cmpsl
push
lods
inc
dec
or
inc
mov
cmpb
xchg
lock
stos
stos
popa
mov
or
sub
pop
or
fadds
adc
pushf
cmp
pop
jbe
or
rol
sub
push
sahf
inc
sbb
cld
rclb
repnz
shrl
fstpt
mull
adc
iret
cmp
mov
sbb
mov
push
scas
mov
push
xor
xchg
jb
jo
adc
adc
je
gs
arpl
mov
jmp
mov
sbb
mov
pop
mov
pop
rcll
and
sti
mov
sub
sbbl
inc
fbstp
dec
out
mov
xchg
lds
mov
lea
add
add
popa
jmp
sti
sub
sub
xchg
inc
jns
fdivrs
jns
fldcw
and
sahf
jnp
jo
jg
in
icebp
sub
and
adc
fldt
adc
jge
aaa
sti
testw
pop
fld
je,pn
sub
in
ret
icebp
pop
or
xchg
js
stos
movb
sbb
push
icebp
adc
mov
dec
pop
mov
mov
xor
adc
and
aas
and
and
push
sub
push
dec
fs
push
mov
jbe
pop
cmp
jbe
jne
pop
cmp
es
sub
or
or
cmp
jp
mov
jne
pop
divl
and
out
xor
xorl
cmpsl
mov
adc
cmpsb
int
push
or
out
cmpl
push
xor
int
xchg
mov
dec
inc
xorb
das
cld
insl
fadds
arpl
frstor
int3
pop
imull
jg
insl
mov
cld
ret
movsl
inc
push
scas
movsb
clc
mov
dec
pushf
fnstenv
sub
movsb
fdivr
xchg
clc
dec
jno
mov
test
dec
push
sbb
sbb
mov
fiaddl
sub
push
jne
push
cmp
fsts
repz
push
push
push
dec
xchg
ss
ljmp
xor
int3
je
mov
cmp
ret
arpl
ljmp
and
push
aaa
mov
lahf
jmp
jmp
pop
mov
in
jmp
je
and
fldln2
mov
mov
into
add
xor
loope
and
add
lret
push
mov
adc
out
jle
cwtl
mov
cmpsl
mov
mov
push
fildll
stos
dec
cs
ret
mov
xor
jb
inc
mov
aad
and
das
lret
sbb
mov
pop
aam
adc
ss
adc
add
es
sub
pusha
sbb
xor
mov
and
dec
jnp
jbe
cld
shll
cmpsb
or
lds
inc
nop
leave
out
arpl
daa
xchg
push
push
adc
rcr
test
xlat
out
mov
sbb
push
mov
push
mov
adc
sub
adc
mov
repnz
xor
lcall
shl
jmp
stos
cwtl
cwtl
sbb
adc
rcr
xchg
data16
mov
cmpsb
mov
std
push
mov
inc
data16
dec
test
test
in
and
cmp
lock
push
push
sti
mov
or
pop
dec
xchg
ss
scas
add
pop
loope
lret
inc
xlat
push
int
adc
adc
imul
lods
es
rol
cmp
loopne
mov
ss
lar
add
div
and
jo
adc
inc
inc
dec
sti
push
sar
fwait
xchg
add
sub
mov
test
adc
pop
push
pop
xchg
jnp
and
clc
jo
lret
in
add
pop
into
lret
lcall
ret
lret
jnp
cwtl
aaa
cmp
fbstp
xchg
mov
aas
add
push
rcrb
mov
mov
fists
cmpsb
jmp
or
mov
xchg
mov
jnp
dec
fldl
sub
push
sbb
gs
jge
xor
test
cmp
push
pushf
mov
or
lea
outsl
shll
rcrl
jmp
ljmp
movb
lret
stc
jge
inc
fcomp
and
loope
aas
gs
push
jge
loope
outsb
mov
jae
xor
hlt
jns
adc
mov
or
mov
xor
mov
pop
xorb
jecxz
icebp
mov
xchg
nop
ret
mov
and
xchg
and
push
lcall
dec
icebp
cld
daa
lcall
popa
lods
adc
daa
sbb
fldl
mov
cmp
dec
dec
shll
int
jle
push
push
into
outsb
fnsave
cli
sahf
call
mov
lcall
stc
sahf
out
mov
fwait
xchg
test
sbb
mov
arpl
sub
sub
fidivl
jge
xor
insl
or
inc
sarl
push
cmp
lcall
sub
fimull
jecxz
iret
jae
push
fcomi
adc
mov
add
repnz
clc
xor
int
jb
xchg
pop
aad
mov
push
cmp
and
pop
orb
loop
xor
sbb
push
push
pop
or
sub
or
cmp
pop
fstl
jecxz
mov
test
pop
loop
lcall
xor
shrb
jmp
das
pop
mov
dec
in
push
fbld
pop
ds
movl
in
mov
lods
addr16
sbb
push
fcmovne
stos
ljmp
and
jo
inc
aaa
mov
push
mov
mov
push
mov
dec
or
adcb
gs
mov
rol
lcall
mov
adc
pop
push
push
fwait
das
xchg
dec
mov
clc
out
push
aam
scas
push
mov
adc
push
int
addl
dec
arpl
xchg
rolb
mov
lock
sub
lea
or
lret
lret
mov
add
jns
mov
inc
push
pop
or
gs
and
jae
sub
dec
inc
pop
jmp
mov
push
shl
ja
adc
pop
loope
mov
int3
mov
pop
pop
popa
xor
cs
mov
dec
imul
cmpsb
pop
test
mov
ret
pop
mov
in
push
movsl
jmp
out
cltd
dec
ds
add
test
in
cltd
outsl
mov
insl
sub
mov
push
lds
insb
pop
test
popl
pop
add
rcll
jecxz
mov
push
dec
es
mov
das
out
add
mov
dec
dec
or
rcr
and
sbb
jae
int
lcall
lea
push
das
ljmp
ret
movsl
fwait
addr16
inc
fxch
test
insl
adc
adc
lcall
inc
inc
fwait
and
xchg
jmp
xlat
loop
push
and
mov
lods
jp
rcrb
or
faddl
loope
stc
stos
test
cmp
mov
jne
jne
jbe
pushf
cmp
popa
jno
mov
jns
dec
sbb
repnz
cmpsb
inc
lahf
jae
cld
je
shrb
push
cmpsb
out
mov
stos
out
lea
push
dec
dec
stc
scas
pop
mov
adc
cmp
fmull
sbb
lods
and
cmp
addb
loope
push
ja
out
sub
leave
mov
aas
notl
pushf
mov
inc
mov
stos
lret
push
sub
mov
and
jecxz
pop
mov
inc
nop
loop
outsb
insb
fcomps
push
xor
sub
ja
mov
push
pop
jg
lret
fstpl
mulb
test
push
or
bound
inc
mov
inc
stc
inc
adc
mov
push
jge
enter
test
push
mov
cld
mov
mov
dec
mov
add
pop
or
add
sar
fwait
es
sahf
push
xchg
jae
mov
push
xor
push
xchg
jae
mov
inc
test
int3
add
and
push
jno
imul
decl
movsb
in
ficoms
iret
pop
xor
dec
pop
add
adc
lahf
or
adc
enter
hlt
jl
lret
movsl
pusha
arpl
xorb
sub
pop
xorb
xlat
repz
xchg
fadds
dec
or
and
sti
jne
jnp
pop
adc
imul
jecxz
dec
lcall
xchg
cmp
cli
out
test
xchg
inc
cmp
sbb
xor
fsubrs
mov
xor
cmpsb
pushl
pop
hlt
lods
stc
add
and
int3
jbe
insl
sub
mov
icebp
lock
xchg
daa
jne
loope
lahf
gs
rcll
cltd
sbb
int
out
stc
or
dec
insl
lods
mov
pop
pushf
daa
jmp
xchg
sbb
and
sub
push
loop
adc
mulb
and
push
popf
dec
test
jns
ret
mov
ljmp
pop
mov
loope
mov
mov
xor
clc
lea
mov
push
js
loopne
inc
sub
cmp
movsl
mov
cli
xchg
or
cltd
aaa
cmpsb
pop
jle
or
aad
loopne
int3
or
sti
mov
mov
adc
pop
aad
sbb
or
loopne
mov
arpl
nop
out
pop
dec
push
insb
sahf
pop
jo
popa
or
cltd
gs
jnp
shlb
lods
add
or
stos
cmp
sub
or
mov
icebp
pop
mov
cwtl
andb
mov
xchg
sbb
mov
lods
jae
imul
mov
fists
xor
jno
out
out
add
scas
pushf
lods
sbb
jae
jmp
push
clc
fcoml
push
sbb
adc
aam
cmpsl
lahf
std
adc
push
and
adc
repnz
xchg
push
inc
pusha
push
sub
mov
lahf
out
lcall
adc
mov
sub
dec
fisubrl
pushl
add
inc
or
in
pop
pop
sub
push
clc
cli
stos
test
in
xor
jmp
or
jo
lret
stc
inc
adc
push
fsts
lock
lods
inc
mov
rorb
rcl
addl
xchg
outsl
sub
mov
inc
mov
imul
or
mov
jp
or
xchg
dec
cmpsb
add
jns
mov
or
data16
out
and
pop
icebp
cmp
cmpl
jge
cmpl
je
cld
sbbl
and
sub
mov
into
adc
pop
insb
add
sub
push
pop
add
mov
sbb
mov
push
xchg
adc
imul
std
jge
push
lods
out
inc
fld
mov
in
push
push
mov
push
push
sub
test
fidivs
or
pop
insl
je
jl
mov
jg
inc
jne
leave
push
lock
inc
mov
xchg
les
in
cmp
pushf
cmp
movsl
mov
xchg
mov
cld
lret
aaa
imul
dec
roll
das
and
mov
inc
mov
mov
movsb
outsb
cld
pop
jecxz
loope
jns
pop
jmp
push
cld
add
je
int
pop
fmull
cmpsb
movsl
incl
mov
bound
das
insb
mov
rcrl
loopne
stc
pop
adc
mov
xchg
mov
in
test
fisttps
mov
imul
dec
mov
lret
and
rcrl
push
xchg
imul
adc
mov
out
insb
mov
xchg
push
out
cmpsl
xor
lret
lods
daa
scas
hlt
loopne
scas
push
jnp
mov
and
enter
rcrl
xchg
cltd
sub
sbb
or
popa
add
cmp
mov
jne
pusha
mov
insb
pop
adc
sub
fcoms
test
xor
add
inc
movsl
dec
pop
or
inc
test
int3
push
leave
xor
mov
cltd
mov
inc
cmpb
sbb
mov
nop
orb
push
fwait
mov
jge
adc
stc
sub
lret
adc
add
adcl
jle
inc
inc
fdivrl
leave
fwait
repz
dec
jge
cltd
cli
sub
dec
inc
lods
mov
sub
xor
shl
test
sub
dec
popf
ljmp
xor
mov
jno
cmp
add
jmp
mov
rcrl
or
adc
adc
cmp
or
lcall
mov
dec
dec
mov
scas
fs
hlt
sar
les
push
sbb
rorb
paddq
pop
add
sahf
adc
xchg
out
inc
xor
fsubl
sub
mov
mov
fidivrl
inc
sar
repz
cmp
mov
inc
aaa
das
cmp
arpl
pop
das
jne
jne
imul
xor
stos
and
adc
xor
ds
xor
inc
inc
push
lock
sarl
int3
xchg
xchg
ds
mov
ds
mov
jmp
aam
shld
jns
mov
notb
or
push
pop
sbbb
fisttpll
incl
out
push
outsl
inc
fistl
and
or
mov
scas
imul
xor
xor
jb
add
mov
fdivs
mov
pop
cmp
data16
in
jb
cmp
xchg
insb
mov
iret
xchg
mov
dec
std
jns
jmp
xor
fisttps
pop
sbb
inc
aaa
das
mov
add
push
add
push
sbb
or
pop
push
mov
dec
adcb
leave
add
jmp
or
inc
xchg
mov
in
or
mov
loopne
add
repz
adc
adc
fdivl
cmp
sub
insl
add
call
push
or
repz
push
push
ror
jno
or
lock
sub
mov
adcl
add
in
test
test
mov
pop
sub
add
lcall
and
in
out
loopne
icebp
mov
imull
pop
addl
call
arpl
push
adc
ljmp
testl
sbb
jo
pop
jno
xchg
mov
in
fsub
test
ret
cmovg
andb
aam
mov
pop
cmp
movsb
lret
ret
mov
cmp
mov
in
nop
adc
mov
stos
add
inc
xchg
pop
cwtl
mov
je
fwait
pop
leave
push
xor
cmp
jns
or
sbb
cmc
and
jge
mov
push
sahf
adc
jae
ds
sub
ljmp
popf
rcrl
enter
adc
and
xor
pop
mov
adc
sub
mov
lcall
mov
orl
mov
cltd
xchg
cmc
inc
jo
fstl
jge
mov
and
xchg
stc
lea
cmc
ret
mov
iret
xor
xchg
mov
jecxz
sbb
push
lods
pop
jmp
dec
das
out
add
cmpsb
dec
mov
xor
lret
mov
jp
mov
push
jle
ret
mov
add
bound
pop
outsb
xor
mov
mov
lcall
add
nop
rcll
inc
cltd
push
push
mov
insl
xchg
in
rcrb
das
loopne
inc
andl
and
iret
mov
mov
adc
cmp
mov
int
jbe
push
aas
fs
lret
lcall
pop
adc
dec
mov
add
cmp
mov
mov
arpl
inc
push
iret
xchg
test
into
fisttpl
cwtl
jb
pop
mov
pop
sub
ret
popf
mov
aam
jb
xor
sub
repnz
xchg
mov
jne
test
cmc
cld
test
ret
test
inc
mov
xor
into
push
mov
frstor
add
and
push
cmc
mov
popf
dec
and
push
test
jecxz
jbe
jl
aam
push
and
push
pop
lock
push
xchg
dec
xor
int
cmpsl
and
nop
or
ret
push
inc
cld
jnp
or
sub
pop
mov
jns
pop
or
je
push
ret
call
dec
or
aaa
xchg
fcmovnu
fsubrp
xchg
inc
arpl
scas
jmp
pop
stc
xchg
lret
sbb
stos
iret
mov
inc
test
loope
insl
scas
jb
inc
icebp
jne
cmpsb
sbbb
pop
jne
fs
add
sbb
and
fistpll
inc
dec
xlat
push
add
out
jno
ficoml
repnz
push
addr16
ja
push
xlat
andl
push
jno
in
and
pop
jmp
inc
or
mov
and
and
stc
repnz
mov
push
icebp
sub
adc
dec
add
dec
jg
enter
rcrb
lock
cmp
mov
xor
mov
push
into
mov
xor
insb
int
adc
pop
repz
movsb
aaa
xchg
mov
popa
dec
shl
dec
cmpsl
int3
out
cmp
data16
test
push
fisttps
push
jnp
imul
ret
outsb
mov
leave
loopne
fmulp
test
mov
and
mov
add
test
fsubl
sub
inc
pop
mov
fsubrp
or
inc
mov
lahf
cltd
mov
sahf
movb
lods
outsb
push
mov
addb
fwait
and
insb
mov
sbb
mov
fsubr
sbb
jge
out
fmuls
adc
sbb
jo
ljmp
pop
out
rcl
inc
inc
and
sub
ficoml
mov
ret
mov
pop
cmpsl
sbb
xchg
sub
or
ss
and
sbb
stos
fsubs
mov
push
mov
jge
pop
xchg
inc
in
test
stos
aaa
lods
push
jmp
add
mov
popa
push
imul
add
hlt
in
shll
test
insl
mov
inc
push
pop
mov
and
imul
mov
mov
dec
mov
das
xchg
push
popl
mov
mov
cwtl
jmp
push
push
xchg
jae
aaa
enter
enter
xor
mov
sub
jae
mov
push
outsl
cld
pusha
sbb
int
aaa
mov
rclb
andl
sahf
stos
xor
test
or
jo
push
andb
sub
and
in
out
push
xchg
inc
jno
jmp
lods
repz
popa
mov
mov
gs
mov
fistpl
ljmp
mov
cmp
mov
inc
mov
mov
fsubl
addr16
test
push
push
push
xor
mov
ret
fsubrs
mov
mov
mulb
in
daa
and
fcoms
push
cmp
sahf
das
int
cmpb
dec
mov
cmc
rcl
fcomip
mov
stc
jnp
daa
test
movsb
inc
and
in
into
jne
jnp
xor
add
fistps
stos
cwtl
scas
in
daa
xor
nop
sbb
or
xchg
fbstp
push
dec
sbb
mov
jmp
jo
sbbb
jae
daa
aam
add
and
inc
mov
adc
sub
lock
mov
adc
add
test
outsb
sub
lahf
aam
out
fdivrl
repnz
or
push
jns
push
sub
add
rol
mov
pop
jbe
fldl
pop
xchg
lea
iret
pusha
lods
fsubs
cld
sarl
add
and
add
lods
xor
inc
ljmp
fisubs
orl
cmpsl
jns
mov
and
lds
movsb
das
xor
testl
pusha
or
mov
lock
aad
pop
lods
jo
mov
add
push
sbb
inc
icebp
loopne
int3
push
cmp
inc
dec
push
ret
fucomp
inc
add
daa
jecxz
adc
das
es
cmp
mov
mov
xorb
mov
aaa
mov
lods
push
clc
cmpsb
mov
int
sub
rcr
aaa
inc
xchg
shr
sub
sub
arpl
xlat
jge
push
pop
mov
in
jns
jnp
pop
push
pusha
imull
jne
sub
inc
jne
jbe
call
in
es
movsl
hlt
ljmp
jno
dec
dec
arpl
call
lcall
in
push
or
in
test
lods
int
and
sbb
dec
sbb
sti
movsl
lock
jge
mov
xchg
loop
sbb
cltd
scas
adc
mov
xor
es
shrl
push
bound
std
in
or
push
cmp
mov
lcall
mov
cs
cmp
mov
adc
dec
xlat
cltd
ja
push
repz
std
mov
mov
pop
mov
mov
and
mov
push
addb
mov
add
cld
pop
repnz
xchg
mov
jmp
inc
movsb
imul
hlt
cmp
lahf
cmc
sbb
sbb
and
divb
adc
addr16
xchg
xchg
insb
sbb
and
iret
stc
es
lcall
outsb
cmp
sub
mov
xor
into
icebp
jmp
jmp
pop
push
lret
iret
ret
jp
xchg
lds
je
xor
cmp
call
rcll
rcr
dec
imul
jmp
iret
divb
and
xchg
pop
inc
jg
sbb
insb
mov
test
cmp
and
push
cmp
mov
or
lock
shr
jl
rcll
cmp
jno
mov
cmp
or
push
mov
test
stc
rcrb
aad
jecxz
mov
insl
jns
xchg
add
rcrl
cli
call
insl
and
adc
pop
ds
mov
adc
sbb
add
xor
mov
or
add
sbb
and
dec
fsubp
stc
sbb
test
jae
repnz
icebp
jno
cwtl
pop
sbb
popa
mov
mov
and
stos
inc
jp
stos
inc
mov
lods
mov
pop
cmp
dec
mov
xor
dec
lret
sahf
xchg
or
dec
popf
sbb
out
xchg
inc
push
mov
out
out
loope
and
sbb
sbb
push
cltd
pop
dec
out
sub
and
xchg
enter
aad
mov
inc
adc
cmp
and
mov
cmp
sar
cmp
pop
push
sub
mov
mov
xchg
leave
int
lea
test
mov
xor
pop
dec
sbb
icebp
xchg
cmp
push
neg
les
push
sub
fnsetpm(287
mov
lea
push
and
jg
shrl
mov
cmp
imul
adc
mov
jae
inc
scas
jecxz
or
lods
jg
sbbl
cmp
stc
add
xchg
add
daa
mov
repnz
push
vpcmpeqd
test
and
call
xor
dec
cmp
repnz
jp
push
mov
fstpl
mov
aas
fsts
cmc
std
xor
jl
pop
push
sub
popf
sub
std
pop
push
jne
xchg
cmp
roll
outsb
and
push
insb
mov
xchg
lret
push
inc
mov
xchg
pop
or
cmp
jge
inc
ret
jbe
pop
lea
mov
cmp
stos
mov
mov
mov
sbb
cmp
jg
cmp
stos
jb
bound
rcrl
xor
loop
sbb
mov
sub
mov
cwtl
icebp
or
sbb
sub
shll
mov
xchg
mov
sub
xor
test
std
cmpsb
dec
fdivrs
adc
lea
mov
ret
jp
push
push
cmp
push
mov
lret
jge
xchg
adc
fs
add
lods
mov
leave
incl
cmpsb
push
daa
jp
addl
or
rcrb
or
jle
add
repnz
sbb
lea
aas
aas
mov
pop
mov
sbbb
mov
into
andb
testb
out
push
fisttpll
fwait
and
sbb
or
ret
repz
pusha
pop
cwtl
orb
loope
jbe
pop
push
lods
subl
aam
mov
jbe
adc
xorb
adcl
cli
mov
push
cmp
insl
and
adc
dec
add
cmp
in
sub
sub
pop
repz
sbbb
stc
cwtl
add
cwtl
nop
sub
scas
jbe
push
outsb
adc
jnp
xor
sbb
cmp
cwtl
jmp
inc
pop
aam
inc
mov
insb
test
sbb
sub
or
cmpsl
popa
gs
lea
or
sahf
xor
loopne
xor
xor
leave
sar
ret
jmp
sbb
push
cs
xchg
push
inc
or
shlb
push
rclb
mov
inc
sbb
nop
or
jns
mov
stos
fs
sbb
push
sbb
stos
int3
jmp
xchg
sbb
mov
lods
out
rclb
das
inc
mov
in
jp
mov
out
jo
fsub
bound
fsubrl
jp
js
push
std
or
mov
xor
div
jmp
adc
add
xlat
in
lock
add
stos
xchg
mov
popa
cmp
lods
mov
jge
popa
outsl
inc
cmc
xchg
push
sub
or
mov
daa
ret
je
and
out
into
pop
loope
pop
or
mov
fs
frstor
cmp
xchg
cmp
mov
and
test
mov
mov
iret
test
mov
push
outsb
mov
adc
in
or
sbb
pop
stos
lret
bound
mov
jno
or
ja
mov
sbbb
xor
aas
repnz
popa
add
mov
cmc
mov
test
sbbb
cmp
add
pop
xor
loopne
lock
into
les
xchg
cmp
jnp
fmul
cwtl
mov
sub
test
sbb
mov
in
mov
add
pop
dec
cmp
sbb
add
cli
pop
xchg
aam
mov
fdiv
cmpsb
loopne
ror
stos
int
iret
push
mov
or
or
push
lret
add
add
push
movsl
push
int
pop
setnp
mov
mov
mov
mov
movsl
push
cmp
pop
xor
cmpsl
int
push
jge
subl
divl
movsb
add
loop
xchg
cwtl
pushw
push
cli
jno
stos
mov
cmp
lea
stos
test
mov
cld
ss
pop
or
dec
aas
popa
or
iret
xchg
hlt
sarb
filds
gs
cmc
inc
addr16
cmp
jns
xor
sbb
pop
inc
loop
imul
dec
cwtl
dec
cmpsb
stos
mov
adc
cwtl
dec
xchg
scas
shrl
fisttps
xor
dec
inc
popf
sarl
or
jge
jno
adcb
mov
jg
mov
call
dec
mov
lea
jno
repz
hlt
sub
sub
add
jno
call
pop
or
scas
cli
mov
loop
clc
cwtl
std
stc
jle
hlt
stos
or
int3
xor
mov
call
negb
nop
pop
out
imul
mov
sbb
rolb
movsb
xor
xchg
das
call
inc
xchg
sub
jle
lea
insb
dec
and
pop
arpl
mov
push
outsb
push
clc
out
sub
push
xor
loope
clc
sti
cmp
pop
mov
xor
int
pop
mov
add
lret
add
pop
sub
stc
outsb
push
sbb
cmc
call
inc
imul
aam
in
add
and
into
movsb
inc
adc
or
and
nop
aaa
jne
mov
fadd
dec
das
test
inc
add
mov
rol
mov
jmp
xchg
out
roll
add
sub
int3
xchg
hlt
fdivl
pushf
xor
icebp
js
xor
mov
dec
xchg
add
cwtl
es
pushf
mov
or
test
scas
les
cltd
push
int
jmp
xchg
les
jmp
dec
popf
xor
jp
add
js
jbe
xor
inc
xchg
and
lds
sbb
inc
sbb
cli
ljmp
test
push
rclb
insl
push
movsb
mov
jg
arpl
out
jge
cmp
adc
sbb
lret
mov
es
popf
add
outsb
ljmp
test
sub
adc
inc
adc
lea
xor
scas
cmp
push
popa
cli
in
xchg
mov
lcall
adc
mov
inc
sub
jg
sub
in
push
fs
or
jno
push
cmp
fwait
test
lods
inc
std
in
xorb
inc
enter
cmc
push
fsts
sahf
mov
inc
aaa
jmp
inc
ss
mov
movsb
mov
jno
sub
insl
pop
icebp
sahf
imul
repz
popf
ds
and
xchg
jle
stc
xchg
or
pop
or
or
sub
sbb
shrl
imul
xchg
adc
mov
jns
inc
xchg
push
sti
clc
inc
dec
fistpll
or
or
and
push
cli
pop
in
inc
in
pop
push
pop
addl
sahf
cmp
or
mov
sub
dec
add
xlat
jne
jae
mov
and
mov
jne
jae
nop
loopne
and
sbb
ret
and
and
std
fildl
pop
sbb
sbbl
sub
mov
fwait
add
and
mov
insb
mov
setno
mov
mov
in
pop
add
add
test
sub
aam
dec
scas
xor
push
inc
idivb
sub
imul
xor
in
mov
or
push
jae
push
in
out
mov
into
or
repz
pop
pop
in
shrl
cmp
adc
jl
sub
aas
int3
push
jp
sbb
fwait
cmp
div
sub
add
int
mov
ds
jbe
push
pop
pop
adcb
jl
shll
mov
insb
pop
or
jmp
push
xchg
pop
ret
xor
dec
xchg
fstpl
mul
fdivr
outsl
sarl
mov
mov
dec
into
push
pop
jo
and
cmp
js
push
inc
and
rcll
mov
cmp
pop
jne
mov
and
insb
adc
stos
pop
ljmp
adc
mov
lret
push
repz
fildl
inc
add
adc
xorb
push
fsubr
test
push
jp
pop
sar
ret
mov
jp
mov
dec
int3
xchg
int3
loop
mov
sarl
cwtl
dec
mov
fwait
jns
add
cli
stos
inc
mov
jp
and
or
or
sub
add
mov
adc
inc
sbb
rcll
pop
mov
inc
out
xchg
mov
sbb
cli
inc
bound
mov
or
mov
iret
icebp
pop
fildll
adc
push
incb
or
and
jns
into
neg
fldl
push
sbb
movsb
xchg
jl
gs
xchg
adc
addl
cltd
and
adc
bound
subb
push
xchg
pop
rcr
fidivl
cld
jecxz
rorb
sti
adc
clc
pop
mov
add
push
shlb
out
pop
shr
nop
arpl
add
pop
fistps
insb
cmp
aad
mov
jmp
gs
jg
clc
in
inc
xchg
xor
or
xor
dec
arpl
pop
xchg
sbb
mov
mov
jne
xor
into
shl
xor
icebp
into
xchg
inc
stos
mov
decb
pop
sub
push
xchg
outsl
fimuls
mov
adc
cmp
jne
ss
idiv
lcall
mov
fsin
inc
lret
ret
inc
adc
jne
mov
cmp
fxch
mov
push
push
mov
adc
loopne
jae
ja,pn
sub
jnp
lea
insb
jbe
push
or
sti
ret
ret
sahf
std
xor
or
pop
jne
push
jle
mov
dec
or
mov
xchg
test
pushf
sahf
lret
lcall
or
push
inc
mov
mov
orl
pop
pushf
fbld
cmp
shrl
into
push
jno
dec
ret
xchg
scas
arpl
cmpsl
cmpsb
mov
pop
jle
out
mov
sbbb
fwait
iret
ret
add
dec
orb
stc
shlb
mov
rclb
incl
out
pop
orb
int3
or
dec
ficompl
testb
cmc
sarl
pop
clc
inc
or
mov
fwait
dec
inc
mov
add
pop
sarb
lahf
je
mov
mov
inc
pop
negl
addr16
hlt
sbb
das
xchg
pop
imul
adc
sub
xchg
pop
sahf
xchg
subb
xor
lods
jp
or
adcb
sahf
stc
in
or
mov
inc
pop
shr
jl
cltd
leave
nop
subb
out
cs
ss
ljmp
sub
jns
in
mov
cmp
incl
mov
push
mov
sbb
mov
xchg
lret
jns
push
adcb
dec
pop
lcall
pop
cltd
sti
imul
rol
ja
pusha
aaa
inc
ror
xchg
int3
out
and
cmp
gs
push
push
gs
cmp
out
add
inc
push
pop
out
cmp
or
adc
cmp
mul
mov
outsb
insb
sbb
xchg
lret
xchg
fst
pop
imul
inc
inc
xchg
insl
sub
pop
fistps
in
int
test
pop
stos
sahf
insb
sub
mov
stc
mov
dec
cmp
mov
daa
adc
cmpsb
out
and
jnp
scas
dec
ret
xchg
cmpsb
out
mov
pop
ds
rorl
rcll
jnp
cmp
scas
jmp
cltd
push
sub
into
fwait
shrl
cmpsb
out
dec
negl
in
fwait
mov
mov
sbb
or
add
xchg
notl
out
pushf
jbe
xor
pop
push
jmp
push
je
sbb
aaa
and
pop
xchg
lods
cwtl
pop
js
lahf
mov
arpl
jl
pop
int3
add
icebp
sarb
jmp
popa
jno
out
mov
pop
mov
push
push
or
mov
das
xchg
inc
sbb
ffreep
jne
pushf
cs
setno
xchg
sbbb
adc
fnstcw
jb
test
aas
mov
push
sub
enter
pop
orb
jp
dec
stos
ja
xor
pop
rorb
add
add
mov
jg
rorb
dec
lods
cs
pop
inc
movsl
test
xor
pusha
sub
sbb
loope
into
ds
int
in
nop
inc
or
rolb
lock
cmc
scas
add
pop
xor
cs
cli
sbb
jno
sahf
sbb
call
addr16
inc
dec
dec
mov
jnp
aas
adc
pop
ds
jg
out
inc
fistps
mov
out
or
sarb
ja
out
mov
cmp
xor
dec
loop
pop
loopne
sub
pop
test
outsl
test
dec
push
add
inc
push
mov
or
adcb
pop
jmp
and
pop
call
xchg
jle
jbe
pop
pop
fldt
xchg
mov
in
push
xor
jmp
jle
sti
pop
push
daa
stos
xor
mov
std
xor
or
movsb
cld
push
dec
cmpsb
sbb
scas
xchg
out
mov
sahf
jp
test
addb
add
sbb
pop
orl
push
push
mov
add
call
mov
sbb
inc
test
cmp
movsb
pop
sti
shrl
push
scas
into
test
dec
and
lahf
aam
cli
mov
lahf
pop
scas
jae
xchg
cmp
sbb
dec
lea
fucomi
idivb
out
sbbl
cmp
int
lret
sbb
sbb
or
jle
jecxz
in
inc
pop
xchg
xor
cmpl
xchg
add
cld
adc
jmp
lcall
push
mov
test
push
push
iret
imul
in
fidivrs
gs
mov
dec
push
or
ret
xor
mov
test
sbb
inc
push
inc
jo
pop
nop
fldcw
lahf
sbb
pop
jo
in
pushf
ret
das
fs
imul
out
mov
push
inc
das
mov
test
mov
js
sub
add
sahf
sub
in
xor
sbb
or
test
jecxz
pop
dec
jbe
ja
stos
fnstcw
icebp
mov
push
cli
cmp
add
inc
lea
shll
push
clc
add
in
sbb
xchg
roll
lods
in
jbe
push
sti
aas
int3
call
inc
and
jb
jbe
repnz
jl
inc
mov
cli
inc
jb
ds
add
sub
xchg
mov
stc
mov
cltd
xlat
sbb
cld
in
stos
ret
stc
sbb
add
test
mov
xchg
addl
jl
cltd
in
out
gs
and
cld
movsb
mov
push
cmp
lcall
cs
or
mov
mov
lods
push
notl
cmc
push
data16
dec
in
loope
add
cmp
push
loope
sti
int3
loop
fmull
sbb
sub
or
push
dec
out
rclb
movsb
cmpsl
outsb
and
pop
lock
out
sub
pop
and
xor
lock
mov
dec
mov
cltd
inc
xlat
or
rorl
xor
dec
addr16
stos
lea
mov
lret
adc
add
out
adc
cltd
negb
mul
lock
movsb
xor
call
aad
or
mov
out
pop
data16
push
pop
mov
adc
jb
lods
mov
adc
sahf
mov
rclb
shll
or
sti
repz
sbb
mov
or
outsl
dec
jle
pop
pushf
daa
rcrb
mov
pop
xchg
fdivrl
jp
pop
loop
aaa
test
insl
jno
jecxz
dec
outsb
sti
add
daa
mov
out
xor
mov
dec
dec
mov
mov
pop
out
enter
mov
sbb
xchg
ret
xor
data16
insb
stos
sbb
stos
std
sub
add
jb
lds
mov
xor
or
or
jae
mov
xlat
in
cmpsb
jnp
repnz
ss
in
notb
cmp
ret
adc
outsb
xchg
sbb
ret
add
sbb
cmp
jno
adc
mov
push
pop
cmp
sbbl
mov
clc
adc
xchg
js
in
imul
shrb
movsl
and
mov
je
iret
xchg
push
inc
inc
stos
call
es
jecxz
pop
xor
fnstcw
in
cmp
xchg
fwait
pop
mov
xchg
push
stos
or
push
ljmp
loope
cld
mov
nop
push
int3
add
mov
jl
add
add
call
into
dec
pop
or
int3
sbbl
and
js
imul
repnz
pop
jmp
sbb
out
xchg
jns
and
lods
cmp
jecxz,pt
inc
sbb
movsl
inc
daa
in
sbb
xchg
out
xchg
addl
push
ljmp
adc
out
mov
adc
out
mov
or
int3
push
add
js
jno
sub
inc
inc
inc
cmpsb
dec
jg
jmp
or
insb
mov
inc
push
mov
jo
sub
addb
fcoml
push
adc
int3
adc
push
imul
cmp
stc
addb
fimull
fists
xchg
in
rol
outsl
std
sub
pop
or
xor
mov
mov
sbb
lret
xchg
ds
hlt
int3
jp
bound
add
scas
data16
pushf
mov
mov
addr16
in
ds
mov
lea
sahf
pushf
outsb
enter
fwait
sti
fiaddl
jp
mov
mov
les
add
sarl
and
aad
and
mov
and
nop
or
sub
std
fisttps
les
add
or
sub
push
dec
cmpsb
pop
fmuls
sti
inc
xchg
xor
sbb
dec
lret
sub
in
cli
mov
notb
lods
dec
ja
xchg
xlat
cmpsb
rcll
jns
mov
and
jecxz
adc
xchg
outsl
mov
mov
or
fistpl
mov
int
xchg
sub
rcll
jge
dec
leave
roll
mov
xchg
daa
mov
jecxz
push
mov
inc
sbb
or
inc
pop
mov
loop
and
jle
loop
clc
xor
lcall
sbb
sub
add
enter
xchg
or
adc
mov
cmc
int
pop
into
push
or
xchg
mov
jae
lea
mov
dec
in
clc
out
pushf
in
test
sbb
dec
out
mov
movsl
aad
iret
inc
or
dec
cld
push
mulb
mov
mov
pop
or
je
xor
push
into
pop
xchg
add
inc
cmp
leave
lods
mov
movsl
int3
imul
sbb
push
std
add
xchg
jno
mov
mov
pop
pop
sub
scas
add
jae
mov
mov
and
les
out
mov
jbe
mov
popf
cmc
xor
adc
sub
pop
sbb
test
and
pop
inc
sub
inc
leave
inc
fidivs
pusha
and
insb
pop
sahf
adc
into
test
daa
cs
jecxz
daa
mov
mov
pop
hlt
in
call
in
popf
jns
add
out
mov
setbe
call
pop
add
push
mov
push
mov
scas
shlb
stc
das
jmp
shrl
pop
lea
and
js
dec
nop
stos
mov
mov
push
jb
cmp
shrl
psrlw
jp
mov
fisttpll
out
fisttpll
sbb
inc
icebp
adc
adc
sbb
dec
lret
push
jo
cmpsb
aam
xchg
popf
loope
push
dec
loop
mov
pop
pop
js
clc
aad
cld
cmp
outsb
jo
adc
jp
hlt
pop
mov
mov
jne
into
movsb
or
xchg
out
push
push
gs
ret
mov
pop
xor
push
add
das
out
push
jg
pop
scas
jno
sbb
cmpsb
rol
aad
inc
and
test
xor
mov
int3
hlt
push
aad
filds
cwtl
cmpsb
cmpsl
dec
jbe
cs
pushf
je
add
test
sbb
mov
xor
push
mov
add
mov
adc
in
fwait
and
shll
adc
push
lods
jb
push
pop
push
mov
pop
add
mov
inc
loope
mov
clc
adc
pop
adc
int3
sbb
shrl
add
out
fisttpl
clc
pop
and
cmpsb
popa
mov
mov
outsb
lret
int
xchg
lds
les
push
inc
stc
xor
loope
js
pop
sub
lcall
add
je
and
cmp
in
loope
dec
add
je
pop
xchg
andb
push
jo
or
test
xor
loopne
or
data16
mov
push
mov
imul
dec
popa
sahf
adc
mov
inc
lea
in
hlt
and
aad
movsl
rorl
pop
mov
lock
mov
cwtl
push
jmp
dec
dec
iret
ljmp
in
test
sub
mov
and
fbstp
addr16
jo
inc
inc
not
ss
out
add
movsl
clc
pusha
push
lods
icebp
sarb
cmpsl
jmp
jnp
std
push
sub
std
jl
ret
in
cmp
sbb
xchg
mov
out
push
xchg
inc
jnp
scas
mov
daa
pop
movl
add
pop
mov
push
dec
jne
pusha
movsb
loope
or
or
loopne
jb
mov
popf
and
dec
cmc
jnp
iret
sbb
push
add
mov
call
icebp
stos
insl
enter
imul
mov
stos
lds
gs
xchg
inc
mov
adc
stos
mov
xor
adc
or
mov
rcrl
adc
sub
sbb
out
movsb
sbb
sbb
popf
dec
inc
fcom
aaa
les
scas
xchg
cltd
pop
je
fisubrl
mov
sbb
pop
mov
out
mov
mov
xchg
mov
mov
or
int3
jbe
xor
mov
lods
into
gs
pushf
into
dec
dec
xlat
pop
cmp
lahf
faddl
inc
lret
or
imulb
add
jg
xchg
sbb
sahf
push
outsl
sti
fcoms
mov
pop
xor
xchg
gs
pusha
fdivl
add
not
inc
leave
inc
fdivs
push
cmp
xchg
orl
push
pop
jge
gs
mov
push
or
rorb
sbb
inc
sbb
faddl
lret
mov
sbb
ds
mov
fiaddl
push
jge
pop
out
rcr
mov
rcl
sbb
mov
xor
cs
adc
inc
ret
loope
fidivrs
iret
mov
pusha
cmpsl
mov
xchg
aaa
xor
pop
push
xchg
push
dec
sbb
adc
mov
cli
in
movl
mov
xchg
in
stos
cs
lahf
data16
imul
cmpl
inc
cltd
adc
sub
cli
mov
cmp
repz
cs
stos
xchg
sbb
mov
xor
fdivrl
mov
or
mov
xor
push
mov
test
jae
adc
mov
xor
std
inc
nop
xor
test
inc
push
shlb
repz
cmp
mov
or
std
dec
out
jmp
addr16
ss
mov
ss
pop
cmp
aam
cs
pop
out
xor
mov
jnp
ss
push
mov
mov
cmp
jo
push
popf
cmp
push
out
daa
cmp
int3
adc
xchg
push
pop
add
out
mov
call
in
inc
and
es
stos
or
push
adc
push
dec
pop
movb
jnp
arpl
fcomps
dec
cld
rcll
pop
dec
stc
das
pop
xchg
test
jl
inc
mov
rolb
stos
mov
decb
push
sbb
push
lods
mov
inc
mov
mov
hlt
mov
aam
xchg
xchg
in
bound
xor
lcall
pop
sbb
lahf
cs
dec
xor
dec
popa
shll
cmp
sbb
pop
jb
adc
dec
mov
cmc
and
dec
dec
pusha
lret
dec
repz
jl
popf
xor
adc
sbb
push
push
cmp
frstor
mov
sti
clc
in
sti
mov
jmp
out
negb
test
dec
jle
in
jo
mov
fxtract
pop
daa
dec
jb,pn
mov
lock
iret
cmpl
into
dec
out
ja
add
xlat
xor
fcompl
jo
stc
sbb
test
pusha
idivl
xor
inc
cs
pop
pop
in
jb
xor
xchg
xor
ss
adc
je
and
cmpsl
iret
add
in
add
dec
imul
jb
mov
mov
out
sahf
loopne
mov
fcmovb
aam
inc
insl
les
loope
cmp
in
ret
mov
add
das
lret
sbb
xchg
add
repnz
pop
rdmsr
jne
popf
rorl
pop
inc
xor
adc
jno
inc
movsb
cmp
mov
mov
mov
out
push
sub
xchg
add
xor
fwait
xor
push
and
insb
sub
pop
cltd
pop
ss
adc
cwtl
add
popa
mov
xchg
andb
push
xor
fcomp
addb
jge
push
bound
dec
cmp
mov
mov
movsl
stc
dec
dec
sub
xchg
jp
jnp
xchg
jne
adc
mov
mov
xchg
sahf
sbb
pop
mov
repz
jno
cmpsl
fldenv
push
xor
pop
xor
inc
and
jmp
fwait
add
push
cmp
mov
lahf
xchg
cmp
hlt
push
outsl
mov
and
fimuls
pop
add
lret
sub
add
loopne
jmp
mov
sub
dec
sbb
xor
ret
fidivl
push
sub
dec
cs
xchg
and
rorb
pop
sbb
mov
mov
sbb
rcl
xor
xor
and
push
daa
bound
testl
dec
xchg
jl
fsub
repnz
push
fsubs
dec
das
fwait
loop
call
sub
xbegin
sbb
inc
mov
jb
fbld
dec
inc
vpcmpgtb
pusha
fwait
cmp
or
fs
inc
pusha
sahf
ficompl
es
xchg
jp,pn
xchg
add
jne
and
xchg
xchg
icebp
ja
test
loope
mov
or
xchg
ret
movsl
leave
test
sbb
adc
sbb
test
xchg
dec
lret
or
pop
jns
jbe
lret
sub
inc
or
dec
lret
std
ja
push
popa
test
push
sbb
xchg
lcall
loope
sub
xor
adc
dec
iret
push
divb
add
adc
int3
js
push
inc
stc
mov
or
pop
sbb
cmc
sbb
divb
mov
out
sbb
mov
adc
or
mov
icebp
xchg
xor
and
mov
in
test
push
lods
and
mov
fwait
push
shlb
inc
push
loope
xor
dec
adc
adc
xor
movw
fisubs
ds
jl
and
xchg
sbbl
sbb
sbb
cmp
mov
mov
cmp
ret
pop
pop
jb
fs
add
cmpl
cwtl
dec
leave
mov
pop
mov
sub
pop
in
sub
adc
mov
fdivr
mov
fsts
or
pop
ret
loopne
call
inc
inc
cmpsl
mov
xorl
pop
dec
mov
xchg
or
fcomps
lret
xchg
in
adc
add
dec
in
push
push
test
or
or
test
nop
pop
mov
push
mov
stos
mov
sahf
add
movsl
dec
xor
inc
dec
xchg
data16
aam
xor
cmp
mov
dec
and
add
xchg
jbe
test
pop
sub
xor
adcl
xchg
dec
orl
cmp
add
inc
fimuls
shl
cmp
outsl
cltd
clc
stos
jbe
jle
and
cltd
lcall
xchg
lods
pop
and
or
cmp
adc
xchg
mov
push
das
and
jns
mov
inc
mov
cmpb
cmp
cmp
std
pushl
insl
rcrb
push
or
movsl
clc
adc
xor
mov
cli
mov
pop
add
out
push
mov
ret
ljmp
fisubrs
stc
pushf
fdivl
pushf
fcomps
push
pop
pop
and
xor
push
fsubrl
pop
cli
xchg
sbb
lea
inc
cmp
out
pop
dec
inc
or
pop
jl
xchg
leave
add
test
popf
mov
out
loope
jp
into
aad
ficomps
adc
loopne
les
bnd
xchg
ret
call
enter
movsl
and
nop
sbb
aas
jae
mov
data16
push
andl
adc
repz
dec
test
cmpsb
mov
xlat
inc
adc
and
addr16
xchg
inc
stos
pop
sbb
push
std
daa
adc
inc
inc
mov
sub
cs
mov
xchg
scas
cmpsb
or
sbb
decb
dec
icebp
sbb
or
mov
push
and
std
inc
pop
jno
add
cli
shrl
popf
int
mov
fidivrs
in
cli
pop
pushl
add
jmp
cmp
mov
pop
dec
sub
lods
and
imul
add
ds
leave
repnz
dec
and
mov
xchg
jae
jge
mov
push
ds
nop
and
leave
adc
jp
sub
sbb
lcall
pop
jge
pop
or
push
sub
and
cs
jp
fwait
sbb
pop
fistl
jp
stc
es
jb
ret
xchg
xchg
cmpsb
testb
shlb
mov
addb
pop
loope
push
pop
mov
jnp
adc
mov
das
mov
mov
insl
sbb
mov
and
jo
dec
int
stos
cmp
decb
std
and
cltd
xor
adcb
cmc
jp
out
or
icebp
add
xchg
or
or
mov
call
pop
jmp
jae
push
xlat
xor
cmp
pushf
xchg
add
mov
ret
jl
jnp
push
aaa
jo
sbb
push
aad
jnp
nop
loope
scas
or
addr16
cmpsb
mov
loop
or
cmp
mov
cwtl
jnp
lret
jg
andb
mov
push
or
cmpsb
push
lahf
jle
sbb
inc
scas
fnsave
leave
aas
push
pop
dec
mov
ljmp
lods
test
daa
inc
rolb
fwait
add
adc
aas
into
jp
pop
jbe
jbe
dec
lea
cmp
nop
inc
jle
sbb
push
adc
xor
cmp
mov
icebp
cld
cmpsl
rdtsc
jecxz
test
mov
fucomp
dec
test
inc
pushf
adc
mov
jne
jnp
sbb
mov
call
dec
mov
push
and
inc
jp
adc
xlat
or
cmpsb
sub
popa
std
mov
pop
test
dec
ror
mov
sbb
je
dec
jns
sahf
xadd
fiadds
jns
pop
or
ja
rcrl
pop
lea
jecxz
shll
mov
pop
lea
cmpsl
jnp
adc
insl
push
mov
repz
adcb
stos
push
movsb
scas
mov
insl
hlt
mov
adc
stc
pop
shll
rolb
dec
fstl
js
sub
bound
jns
add
les
xor
loop
or
loop
adc
jg
loope
mov
test
in
lahf
in
cmp
xchg
dec
pusha
test
inc
mov
lds
xchg
lods
push
xchg
cmp
inc
movsb
fs
xorl
out
mov
push
cmp
ds
cs
loop
notl
mov
jne
movb
xchg
dec
cmp
push
rolb
cmp
jl
mov
or
outsb
sti
leave
push
aaa
in
and
mov
sub
sbb
pop
dec
shlb
scas
xchg
cli
jmp
and
jecxz
sti
sub
nop
jo
push
pop
fisubrs
xor
mov
or
lods
dec
xlat
push
scas
arpl
sub
add
scas
and
out
fdiv
pushf
test
inc
jp
push
mov
inc
cmpsb
sub
jl
mov
xor
fwait
adc
push
xchg
jae
xchg
push
mov
pop
dec
dec
mov
sahf
out
into
cs
mov
out
jnp
mov
jmp
push
xchg
push
repnz
out
out
out
or
loope
hlt
or
pand
sub
pop
out
inc
addb
imull
mov
jbe
sub
clc
mov
sahf
add
pop
popa
jns
push
cmp
aas
ficoms
jp
out
shlb
aaa
mov
jae
mov
mov
int3
ret
das
scas
push
pop
clc
popf
push
xor
sub
insl
mov
shl
or
adc
test
out
jg
popa
fsubrs
sub
arpl
int
jne
mov
pusha
ret
out
ljmp
jae
gs
push
data16
rcrb
das
mov
pop
dec
jbe
mov
jne
jmp
imull
jmp
adc
into
push
scas
dec
mov
jecxz
mov
and
or
into
scas
jb
push
mov
mov
cltd
les
pushf
mov
adc
pusha
xorb
xchg
xor
cmp
inc
sub
cmp
divl
fsubrs
and
push
into
jl
mov
call
sub
jno
xor
cmp
add
je
loopne
xchg
std
inc
into
je
bound
imul
mov
mov
add
aad
daa
int3
add
data16
aam
fldcw
inc
daa
sub
xchg
sub
jb
inc
mov
sbb
enter
mov
add
bsf
pop
add
push
addl
das
popa
mov
xor
in
mov
jb
push
mov
in
jg
or
stc
xor
sbb
cmpsl
dec
lods
mov
inc
cs
pop
pop
imul
shlb
adcb
test
push
adc
inc
test
cld
add
pop
mul
or
jle
repz
aas
mov
or
adc
mov
add
or
push
push
daa
stc
dec
ja
pop
adc
test
sbb
pop
cmp
xchg
mov
mov
pop
fs
add
mov
add
mov
insl
mov
sbb
aad
mov
or
enter
incb
dec
sub
into
push
push
or
das
inc
or
mov
lods
mov
inc
push
pop
xchg
clc
mov
fisubrs
sbb
insb
imul
or
das
mov
jno
testl
aaa
in
pop
sbb
aas
jnp
push
sub
adc
cmpb
pop
sub
mov
sbb
jo
mov
mov
adc
or
imul
repnz
xor
pop
mov
mov
in
cmc
aas
loope
mov
leave
jmp
sub
pop
test
inc
mov
test
sbb
and
sbb
push
jb
sti
cmc
roll
ja
dec
adc
jne
jne
out
jecxz
jg
les
or
mov
fcomi
xchg
jnp
in
sti
fs
dec
shll
dec
out
fstl
sbb
cmc
push
mov
push
add
mov
mov
xchg
call
xor
dec
xor
test
icebp
jp
in
loop
push
and
or
outsl
ret
xor
inc
lea
sbb
mov
or
or
push
repz
inc
push
cmpsl
xchg
ss
icebp
xor
divb
lret
lock
imul
or
pop
lret
add
sbb
dec
nop
js
scas
call
jb
dec
mov
movsl
dec
sub
ds
dec
les
sbb
inc
pusha
xchg
xor
sbb
pop
xchg
mov
mov
inc
jno
jns
outsl
bound
sbb
cmp
mov
test
add
sub
jae
cmp
mov
cmpsb
sbb
cwtl
jbe
sbb
in
in
add
or
faddp
pop
test
loope
test
mov
out
xlat
add
mov
cmp
inc
pop
inc
cld
ss
pop
xor
out
test
push
arpl
imul
or
nop
popf
cltd
mov
dec
jo
sbb
fsts
dec
stos
lock
add
loop
add
sti
daa
mov
cmp
xor
addr16
mov
add
outsl
xor
xchg
pop
and
push
inc
cmpsl
or
dec
pop
xchg
cmp
fwait
add
jnp
or
push
or
cmp
xor
imul
adc
jbe
jne
fsubrs
clc
or
mov
push
mul
jp
xor
rcrl
jmp
cmpsl
cmp
push
sub
and
scas
ficoms
mov
mov
xchg
loop
andl
call
lock
xchg
inc
and
loopne
imul
sub
stos
xchg
sub
lret
sub
add
call
ret
jge
jns
ret
popa
stos
test
pop
inc
lahf
sub
xchg
xchg
push
or
inc
push
mov
nop
inc
adc
and
sub
dec
jne
leave
rolb
movsb
enter
sbb
push
cmp
cwtl
sbb
mov
enter
push
pop
push
xchg
xlat
sti
dec
mov
movsl
jno
inc
jae
xchg
shlb
mov
fistps
sub
out
fs
adc
jns
mov
in
cmpsl
and
test
lea
int3
in
mov
sub
leave
addl
mov
enter
pop
pop
fs
pop
out
pushf
arpl
jnp
inc
xchg
into
adc
jnp
xchg
dec
mov
shlb
and
push
outsl
mov
mov
shlb
xor
xchg
loop
mov
push
stos
xor
sbb
xchg
cmp
vpslld
cmp
inc
test
repnz
add
or
out
and
dec
jbe
lods
push
mov
jp
add
sbb
lock
je
out
push
in
stos
adc
lock
sarl
push
sbb
mov
lods
icebp
or
adc
xorl
adc
cmpsb
sub
sbb
icebp
jnp
jp
xor
mov
cmpsl
inc
or
into
cld
push
lods
mov
add
cld
idivb
mov
cld
call
ret
push
sahf
int3
jmp
insb
jo
lret
dec
movsb
add
leave
inc
shlb
cmp
cmpl
sbb
inc
xor
roll
dec
inc
fs
jg
repnz
aas
or
lcall
les
or
sbb
cmpsb
das
mov
add
std
ret
add
dec
aam
cs
popf
lahf
std
fnsave
push
jns
cltd
lahf
out
arpl
repz
mov
sub
xchg
enter
aad
sbb
pop
lret
push
mov
cs
or
scas
test
lods
mov
xchg
cmp
sbb
mov
jge
push
loop
xchg
aad
xchg
push
decl
sahf
dec
jp
sub
mov
dec
sahf
mov
push
rorl
cwtl
loop
loopne
push
pop
mov
dec
pop
adc
idivl
dec
sbb
pop
lds
in
orl
test
mov
or
jbe
mov
jns
orl
cwtl
sarl
lock
inc
out
xor
cli
push
mov
sti
or
movsl
popa
dec
push
les
add
push
ljmp
xor
ret
cs
cmpsb
lcall
call
cli
sbb
mov
jnp
scas
push
or
or
cltd
sub
inc
lods
int3
xlat
cmp
or
adcl
sahf
pop
psllw
lods
jl
mov
sti
and
and
lret
add
cmp
aam
or
xor
or
sub
lret
pop
roll
pop
xchg
push
xor
mov
imul
mov
inc
psadbw
inc
ss
xor
cmp
mov
xlat
xor
ss
lds
repnz
bound
lea
aas
lods
mov
xchg
mov
out
or
jle
sbb
cwtl
fwait
cmp
mov
lods
movsl
pop
pusha
xchg
pop
mov
addr16
inc
test
push
dec
mov
push
dec
mov
xchg
xchg
dec
inc
mov
adc
or
test
ret
ljmp
jbe
adc
adc
lcall
adc
mov
pop
push
sub
pop
jnp
repz
imul
jno
push
add
aam
cli
dec
fs
aaa
mov
cmovp
ret
mov
repz
pop
in
loopne
lahf
int
test
inc
fbld
xchg
or
aaa
dec
jo
jp
je
stos
into
dec
sbb
xchg
dec
shlb
repnz
imul
sarl
clc
sbb
jmp
sahf
inc
stos
fistpll
xor
inc
mov
mov
repnz
lea
subl
lds
jecxz
mov
pop
aaa
xor
mov
arpl
sbb
add
sbb
jle
and
and
aam
insl
sbb
mov
inc
insl
and
cmp
pushf
ret
insb
out
jns
cmp
mov
jno
out
or
test
mov
out
popf
lret
xchg
in
push
adc
jl
scas
xchg
out
mov
jmp
negl
lcall
fmulp
add
jo
sub
cmp
insl
xchg
rclb
mov
push
inc
jp
lods
sbb
insl
inc
es
cmp
fidivrl
mov
pop
mov
mov
rcr
mov
cmp
jb
std
and
fmuls
add
inc
cmpsb
iret
fcompl
mov
push
inc
ss
in
pop
mov
add
stos
fldl
jp
clc
add
jl
stc
jmp
sbb
cli
adc
aas
pusha
pop
push
push
jne
pop
ljmp
jnp
pop
out
addl
js
lret
xlat
pop
jmp
sub
pop
push
jmp
fldenv
sub
inc
dec
or
lcall
out
mov
aaa
mov
imul
and
pop
je
shrl
add
and
es
dec
lret
jp
insl
fsub
mov
xchg
and
inc
mov
mul
lret
pusha
sub
xor
pusha
mov
push
sub
xchg
andl
inc
jne
cmpsb
adcl
inc
jge
xor
push
imul
sub
and
push
sbb
lods
xchg
je
test
fldt
mov
jae
fmuls
stos
enter
dec
or
pop
orl
pop
inc
push
repz
imul
dec
lea
or
mov
in
dec
xchg
stos
stc
dec
icebp
xchg
and
inc
inc
das
or
sub
push
ja
sub
dec
pop
popa
pop
lods
xor
out
mov
mov
test
xor
daa
add
mov
movsb
lret
mov
jmp
xchg
fcomi
push
imul
or
imul
jo
mov
adcl
mov
arpl
dec
dec
test
movsl
pop
push
sub
and
ds
lds
cmp
stc
bound
pop
dec
add
and
adc
sbbb
sub
mov
lods
mov
fsubl
out
lds
sbb
dec
out
mov
xor
loopne
jge
sub
fbstp
loopne
ja
sub
sub
mov
push
push
cwtl
add
mov
xor
xchg
cmpsb
adc
ljmp
in
fbstp
in
icebp
cmc
fists
jl
cltd
pop
movsl
dec
adc
pop
int
aam
adc
in
cmpsb
adc
pop
aad
push
loopne
fwait
mov
dec
stos
int
mov
sub
sar
shl
mov
mov
push
fldcw
pop
dec
fs
iret
cmpb
add
das
cld
or
mov
and
sbb
imul
cltd
cmp
xchg
call
or
pop
out
lock
xchg
mov
enter
shl
aam
jne
cltd
xor
xchg
inc
pusha
dec
enter
das
jnp
jbe
inc
lret
jb
int3
or
xor
sbb
add
xor
gs
repnz
cmpsl
and
lret
imul
dec
cmp
iret
push
out
inc
jno
int3
test
and
jge
fiadds
xlat
mov
arpl
adc
push
lea
dec
fstpl
push
or
fwait
mov
jb
and
xchg
loop
lods
lods
mov
loopne
add
cmpsb
adc
xchg
jp
and
icebp
dec
pop
mov
mov
sub
dec
or
cmp
and
jne
pop
xchg
jg
int3
jns
mov
mov
sbb
or
nop
jmp
mov
pop
inc
cmp
dec
sbb
cmp
std
inc
scas
sbb
inc
jae
cmp
rorl
dec
mov
insb
mov
mov
nop
insb
mov
xor
dec
or
dec
mov
in
xor
push
pop
adc
mov
jb
out
adc
add
loopne
jno
mov
out
outsl
call
jo
xor
sbb
jno
push
push
push
push
mov
pop
stc
or
pop
jno
xor
hlt
mov
jle
add
test
jg
adc
shlb
or
pushf
imul
xchg
cmp
cmp
mov
loop
repz
ficoml
movsl
xchg
mov
ds
popa
test
mov
jb
or
test
push
xchg
lahf
mov
push
push
repz
lret
inc
mov
sub
inc
cmp
fwait
add
xor
fiaddl
cmpsb
daa
push
ret
xchg
mov
cli
push
jl
inc
clc
dec
sahf
out
mov
or
xchg
in
cmp
cwtl
sbbb
xor
xchg
cmp
pusha
movsb
jb
inc
jmp
push
cltd
daa
icebp
mov
pop
daa
shrb
hlt
repnz
test
xor
sub
pop
push
dec
shll
mov
mov
imul
push
sub
in
jbe
stos
loopne
xchg
push
dec
outsl
mov
enter
addb
mov
or
shlb
sub
fsub
rorl
jno
mov
pusha
leave
push
icebp
and
lods
add
mov
js
adc
and
adc
sbb
sub
ss
lea
cwtl
push
mov
daa
lret
std
popf
mov
inc
sbb
mov
aas
imul
adc
sbb
insb
adc
int3
mov
mov
inc
shrl
aaa
jge
insl
add
out
xchg
mov
inc
sbb
xor
shll
and
popa
repz
shll
repnz
scas
fwait
popw
fsubr
nop
scas
dec
ret
test
dec
into
cmc
pushl
out
lods
pop
lret
lcall
movsb
cmpsb
fisttpl
int3
push
dec
mov
pushf
mov
xor
cmp
imul
sbb
mov
popf
xlat
push
inc
inc
insb
inc
fidivrl
mov
repnz
andb
pop
gs
fadds
popa
adc
dec
std
mov
daa
test
ret
jecxz
lods
xchg
lret
mov
inc
inc
adc
and
dec
push
cmp
call
adc
pop
push
jg
rcr
pop
dec
scas
xchg
dec
pushf
sahf
fbld
stos
mov
or
mov
mov
cmpsb
sbb
push
call
fcomi
mov
sbb
inc
xor
cwtl
cltd
cwtl
jmp
mov
push
lahf
cmpsl
fwait
sti
shl
or
or
cwtl
mov
sbb
jbe,pn
insb
and
pop
into
fstl
in
fwait
pop
and
cmp
mov
mov
add
popf
loope
test
daa
pop
sahf
push
aas
cltd
dec
call
js
ja
pop
aad
cwtl
pop
mov
mov
add
pushf
mov
rorb
cwtl
cmp
or
stc
sub
decl
push
mov
std
data16
xchg
cmp
jmp
cs
inc
jne
xchg
popf
test
xchg
jbe
and
sub
arpl
and
mov
jbe
pop
pop
mov
mov
jae
or
sub
enter
test
inc
and
mov
mov
ja
add
or
xchg
xchg
inc
mov
fwait
lea
pop
jae
inc
jns
xchg
mov
and
add
sti
add
jmp
iret
jl
jge
das
sahf
out
enter
lods
xor
int3
imul
mov
insl
test
test
push
mov
fwait
push
cmp
jge
cmp
movsb
ss
cmp
pop
frstor
jg
divl
mov
ljmp
int3
sbb
lahf
push
xchg
inc
adc
mov
scas
cltd
add
sub
sbb
es
jge
inc
ret
fwait
repnz
add
push
dec
adc
cmp
daa
ja
and
test
adc
pop
test
add
lods
nop
push
mov
iret
js
pop
adc
stos
and
mov
jnp
jmp
rcl
cli
in
scas
mov
in
push
mov
test
push
sbb
aad
stos
or
pop
ja
stos
nop
or
mov
inc
bound
clc
dec
cltd
jno
rclb
movsl
cltd
clc
pop
outsl
fwait
mov
add
and
pushf
fnstenv
enter
bound
lock
or
xchg
sahf
mov
lahf
repz
cmpb
add
scas
and
jbe
and
pushf
fsubs
pop
push
inc
mov
daa
mov
sbb
loop
out
popa
mov
pop
jnp
call
lahf
xchg
out
aam
testl
inc
pop
xor
sti
xor
push
in
sbb
ret
cmp
push
and
arpl
subb
jle
pop
popa
sbb
imul
ss
popa
pop
or
movsl
mov
jnp
mov
test
jge
mull
in
mov
test
int
ret
pop
es
push
xchg
or
mov
and
xchg
sbb
out
pop
pop
inc
xchg
xlat
stos
lcall
pop
dec
cli
aaa
stc
push
cwtl
push
fildl
cltd
mov
jge
data16
sub
push
jae
xchg
lahf
mov
pop
or
jb
xchg
out
negb
cli
out
and
outsl
cmovs
mov
inc
stc
pop
mov
out
cltd
bnd
outsb
pop
and
dec
mov
or
fwait
adc
pop
insb
mov
sub
aad
daa
sub
inc
pop
loopne
in
fdivrl
mov
sub
int3
lret
pop
xchg
xchg
dec
ja
or
jp
clc
and
jno
xor
lcall
and
ss
adc
add
std
das
and
addr16
add
js
addr16
jbe
push
jbe
jmp
test
lret
popf
inc
mov
fisubrs
pop
pop
mov
mov
fdivp
rcll
dec
push
jb
loop
sbb
addr16
daa
pushf
sahf
dec
fidivs
xchg
ja
xchg
loop
jbe
push
add
test
scas
clc
xlat
add
ret
lea
xor
jns
dec
popa
fwait
leave
sub
incl
xor
shll
pop
lds
adcb
in
xchg
add
mov
add
add
adc
and
inc
incl
mov
jecxz
aas
add
or
lods
add
int3
xchg
mov
add
shll
stc
pop
and
lock
fistpll
cmpsl
nop
out
mov
loope
cmp
mov
icebp
adc
mov
or
xchg
xchg
bound
sub
cmp
cmp
and
push
fcmovbe
lds
ljmp
cwtl
out
cmpsb
add
adc
fwait
in
adc
xchg
rcll
ljmp
popf
adc
mov
or
adc
test
aaa
adc
test
pusha
nop
ljmp
xor
adc
sub
pop
xlat
cli
xchg
iret
pop
sub
mov
cmp
repnz
add
stos
jl
and
jae
pop
sbb
sub
daa
lea
cmp
mov
xchg
and
or
sbb
mov
xchg
scas
icebp
dec
lods
pop
push
cld
lahf
mov
mov
xchg
mov
mov
mov
pop
pop
sbb
lock
pop
sbb
cmp
push
xchg
and
hlt
out
push
and
sub
or
cltd
mov
pop
lahf
xchg
inc
push
das
push
lods
test
les
fcomps
cld
xchg
push
lds
mov
xchg
insl
push
repz
xchg
dec
pop
mov
mov
pop
push
pop
xchg
xor
mov
jbe
test
mov
jb
gs
mov
lcall
test
cld
inc
lret
pop
ds
push
sub
xchg
mov
sub
cmp
cmp
adc
fadd
loopne
pop
adc
jbe
lcall
out
movsb
or
or
bnd
pop
ret
shl
xchg
jb
insl
ficoml
das
std
clc
xor
int
or
xor
ret
test
xor
mov
xor
scas
push
pop
pop
xchg
push
lea
cwtl
dec
scas
aam
or
dec
dec
push
int3
pop
int
test
cs
js
lock
sarl
jb
ss
mov
mov
js
or
mov
mov
sub
jnp
mov
adc
or
hlt
outsb
out
inc
lahf
cmp
lahf
ret
adc
into
sarl
shr
jecxz
mov
inc
nop
pop
and
jnp
and
push
call
xchg
clc
orl
dec
push
xchg
mov
push
pop
xchg
xor
out
daa
pop
cs
jnp
pop
cli
dec
sub
stos
push
lock
adc
sbb
push
daa
fisttpl
je
pop
or
xorb
enter
or
jmp
sbb
fldt
pusha
mov
mov
push
xchg
inc
ror
jp
ds
rcrl
and
xchg
push
cmp
or
in
insb
out
pop
insl
insl
dec
xchg
call
out
add
xchg
and
cmp
scas
push
enter
movsb
fisubrs
pop
inc
or
jns
into
adc
imul
cltd
aaa
and
fcoms
imul
jb
mov
addb
adc
cmovbe
outsl
jne
xor
mov
pop
lods
ljmp
mov
out
cmc
xchg
bound
adc
xchg
shrb
and
adc
mov
and
mov
ja
adc
into
out
lret
jmp
mov
icebp
mov
andb
int3
cli
xchg
and
jmp
mov
arpl
jp
fbstp
fcomp
sbb
adc
rorb
decb
mov
shlb
pop
les
fwait
shrl
pusha
fs
add
loope
dec
pop
push
dec
or
jo
pop
aad
fstl
aaa
lods
pop
xchg
pusha
xchg
add
push
jno
mov
rcrb
pop
pop
clc
subl
fcomip
xor
sbb
mov
push
lret
ss
pop
jge
or
mov
mov
lea
pop
lret
mov
adc
mov
dec
popf
jmp
pop
lret
js
pop
iret
push
pop
aaa
fisttpl
sbb
enter
stos
cmp
push
or
scas
int3
pusha
fldenv
push
mov
into
pushf
fidivs
sti
inc
jno
cmp
jmp
sqrtps
jo
pusha
sub
dec
js
pop
into
ret
insb
dec
loope
enter
dec
xchg
cltd
mov
fs
xor
mov
iret
pop
cmp
lret
lcall
in
scas
clc
clc
enter
jns
pusha
insb
mov
or
and
jg
xchg
pop
stc
jnp
jne
jo
je
mov
add
popa
add
xor
inc
mov
aad
cmp
push
jmp
inc
jnp
ds
pop
aas
cltd
pop
int
ds
ret
shr
push
mov
cld
out
sbb
xor
xchg
xlat
xchg
mov
cmp
pushf
and
sti
mov
lods
dec
mov
inc
int
mov
sub
push
jg
push
push
imul
and
shl
lcall
pop
mov
lahf
mov
push
bound
clc
lea
mov
clc
data16
cld
fwait
icebp
mov
fwait
add
adc
dec
sbb
mov
stc
lahf
pop
mov
inc
xchg
mov
ss
pop
push
sbb
ljmp
jp
ja
cs
jne
mov
mov
xchg
mov
jmp
cmp
and
jno
sub
fildl
shrl
push
stc
jecxz
or
and
xchg
stc
push
xchg
inc
ss
cltd
addr16
js
scas
test
mov
push
add
sub
pop
daa
adc
lea
fistl
scas
push
jg
adc
in
mov
sbb
and
xchg
gs
addr16
pop
movsb
in
jnp
pop
lock
push
jge
mov
push
cmp
mov
and
push
lods
es
sub
mov
test
loopne
popa
xor
stos
jnp
call
push
cmp
push
and
xor
adc
andb
mov
cmpsb
jbe
and
xor
pop
cmp
pop
xchg
test
jae
lret
mov
cli
rolb
negl
clc
icebp
sbbb
or
or
push
dec
arpl
or
insb
outsl
out
fimull
mov
jae
mov
enter
xorb
sbb
cmpsb
xchg
fstpl
jmp
out
idivl
fwait
push
jmp
in
inc
fisubl
imul
cmp
dec
out
cltd
outsl
ret
addr16
popa
push
mov
jno
mov
incb
mov
adc
icebp
leave
dec
lret
test
jbe
jmp
adc
lods
pop
jbe
outsb
add
jae
sbb
and
sbb
icebp
mov
mov
popa
es
mov
outsl
mov
add
jbe
jno
cmpsl
pop
mov
je
sbb
jns
jbe
xlat
dec
int
mov
or
fnstenv
cmpsb
divb
sbb
gs
xchg
loope
add
adc
push
mov
adc
pop
xchg
fnstcw
add
mov
sub
stos
inc
adc
push
arpl
xchg
mov
jb
mov
xor
push
lods
or
push
sub
jbe
jmp
pop
or
or
mov
sbb
xchg
xor
lea
insb
pop
xchg
js
test
or
jmp
adc
out
mov
in
xchg
cmc
roll
mov
pushf
scas
in
inc
orb
mov
jb
adc
nop
dec
out
std
lock
xlat
jecxz
jbe
jae
mov
enter
fs
xchg
roll
les
shrb
insb
test
mov
push
int
fistl
xchg
arpl
imull
iret
mov
adc
imul
in
cmp
mov
test
inc
pushf
xchg
std
cwtl
pop
add
xchg
stc
xor
shl
and
lock
jno
cmp
mov
add
cmpsb
call
mov
sub
shlb
dec
lahf
xlat
mov
and
repnz
jns
js
imull
ss
dec
jno
xchg
lock
xchg
jae
add
in
mov
inc
fnstenv
imul
sub
pop
dec
inc
stc
xor
test
nop
jb
dec
sub
xorl
or
outsl
mov
popf
fwait
data16
xchg
mov
push
int3
lret
dec
loopne
mov
movsb
mov
rcll
push
inc
pop
ror
dec
mov
imul
adc
fstps
adc
std
ds
in
nop
xor
dec
int3
sbb
call
and
inc
jb
mov
movsl
pop
xchg
xor
pop
movsb
mov
jmp
jge
ljmp
xor
jb
out
pop
mov
sub
xchg
push
out
or
pop
and
xor
xor
stos
fmuls
jecxz
jb
sub
insl
aaa
xor
pop
adc
in
rcrl
lahf
push
call
test
inc
js
jmp
pop
mov
sbb
sbb
bound
xchg
repz
dec
out
mov
inc
dec
repnz
dec
bound
movsl
sbb
xchg
cltd
movsb
mov
lcall
js
push
lea
mov
push
mov
lret
jnp
test
sahf
cmp
lods
sbb
out
mov
jb
adc
and
push
xchg
jb
mov
pop
xor
cltd
mov
sbb
adc
scas
mov
jle
mov
dec
rorl
push
stos
clc
pop
mov
dec
mov
xchg
lods
add
jmp
inc
sti
adc
hlt
aaa
ret
int
xchg
aad
mov
scas
dec
cmp
jae
jle
insl
mov
and
cmp
mov
fistpll
fldenv
xchg
xchg
ljmp
sub
push
inc
scas
or
or
out
lods
ds
push
mov
adc
xor
adc
mov
mov
jecxz
and
jmp
push
xorb
popa
int3
dec
pusha
rcr
push
mov
gs
ffree
aad
jecxz
daa
test
mov
movsb
sub
sbb
adc
dec
call
fcomps
jecxz
xchg
mov
xor
xor
ljmp
divb
cwtl
inc
je
push
push
dec
dec
lods
fmul
inc
cltd
adc
cmpsl
add
out
nop
adc
lret
fldt
adc
cmpsb
lcall
repz
mov
jno
imul
sbb
mov
fidivl
pop
movsb
mov
int
inc
adc
push
ja
sub
pop
cmp
inc
push
out
xlat
popf
cmp
cld
add
sbb
adc
clc
sbb
aam
xor
ss
pushf
pop
xor
push
sub
inc
pop
sub
popa
rcrb
and
shll
adc
inc
mov
repnz
pop
int
lret
int
push
cmc
adc
xchg
or
mov
pop
cmc
and
sbb
xchg
enter
jg
out
cld
sub
xor
xor
bound
add
fsubrl
stos
insb
dec
aad
scas
cmc
mov
cmpsl
mov
hlt
sbb
mov
or
mov
add
cmpsb
sarb
cmp
push
inc
les
mov
pop
jno
mov
fs
or
jae
xchg
push
mov
inc
inc
cmp
enter
inc
repnz
ret
dec
dec
add
push
and
das
xor
rorb
push
inc
sbb
jmp
repnz
sbb
pop
sub
push
fucomi
popf
stos
push
cmp
pop
pop
imul
sbb
dec
mov
sub
push
movsl
adcb
enter
mov
pop
sahf
add
int
cmc
push
aaa
pop
jns
adc
in
jae
dec
stos
lock
pop
inc
mov
lea
out
scas
jp
jb
dec
cmp
or
ds
fistpl
stc
xchg
ljmp
jmp
rcr
dec
inc
mov
inc
fiaddl
jg
test
aaa
fnstcw
test
insl
lret
add
outsl
push
in
aaa
scas
mov
dec
mov
leave
fiadds
push
mov
js
pusha
out
jecxz
xor
or
push
jo
mov
and
and
add
or
dec
mov
test
or
push
dec
push
test
sub
push
mov
pop
fisubs
in
jbe
mov
les
inc
shll
mov
frstor
aas
mov
orl
fildll
add
pushf
adc
sub
rorl
jecxz
and
rorl
call
stc
das
cmp
sbb
xchg
jge
sbb
xor
dec
aam
and
das
mov
bound
dec
xor
in
ds
push
and
outsl
cld
lea
pop
lods
xchg
xor
iret
mov
mov
pop
bsr
push
jb
adc
push
mov
jno
add
pop
jno
out
pop
cli
pushf
test
and
pop
or
sbb
cli
fsubl
adc
pop
dec
loope
jno
xchg
jge
je
and
lea
lods
xor
push
sub
push
cmp
push
cwtl
stos
adc
sbb
ficoml
pop
test
lock
mull
push
xor
ret
push
andl
adc
jp
shrl
adcb
push
mov
insb
lret
imul
in
xor
mov
sbb
js
mov
sti
lods
dec
sub
xchg
add
push
sbb
mov
add
and
push
xchg
xor
add
jno
ret
and
sub
or
cmp
cs
adc
dec
shr
leave
ret
addr16
jae
fdiv
sti
aas
add
add
fstpl
jp
fistps
cmpsl
fildll
push
sarb
clc
cmpl
lds
lahf
pop
cld
adc
cmp
or
jno
jns
adc
das
sahf
insb
sbb
push
movsl
adc
in
jns
cld
aaa
inc
scas
test
inc
sbb
aam
cmc
nop
in
lock
iret
out
je
lods
popf
dec
pusha
push
cmpsl
pop
xor
pop
inc
test
or
mov
das
xchg
push
or
fucomip
pusha
xchg
test
inc
add
clc
cmp
lahf
std
push
push
adc
daa
cltd
aas
and
pop
int3
cmpsb
movsb
ds
aaa
test
pushf
mov
push
or
dec
jecxz
lret
dec
test
add
cltd
testl
lret
sbb
or
js
dec
jne
je
mov
cwtl
and
stos
mov
shrb
inc
xor
repnz
xor
sub
or
pop
mov
mov
inc
lock
inc
sbb
mov
mov
pop
jecxz
pop
rorb
jae
xchg
popf
mov
mov
mov
lret
mov
mov
pop
call
jo
or
dec
leave
into
ret
enter
pop
xor
xlat
or
adc
out
ror
pop
mov
mov
cmc
push
out
into
fs
jmp
ds
sti
jb
jmp
xor
jnp
jbe
in
sarl
push
pop
inc
imul
mov
xchg
sbb
int
add
mov
sti
xor
test
jp
mov
iret
inc
fwait
nop
std
cmpsb
into
pop
xlat
aas
add
jae
push
sahf
jb
leave
aam
add
aam
pop
test
push
mov
or
mov
mov
inc
fdivrp
out
insl
or
daa
pop
cld
xor
test
sub
mov
mov
mov
std
cmpsl
sub
neg
in
dec
jb
xchg
push
cwtl
outsb
mov
pop
xor
out
xchg
lock
loope
scas
fdiv
daa
and
cltd
and
add
jg
mov
mov
jle
int3
stos
jg
lods
les
stos
iret
pop
cmp
ss
dec
jae
sub
xor
push
xor
or
repz
sub
or
imul
in
into
inc
or
test
inc
fidivrl
insl
adc
dec
pop
sub
jl
pop
mov
out
les
in
inc
rcll
mov
adc
inc
adc
pop
inc
out
dec
insb
sub
nop
inc
scas
xlat
scas
and
aaa
or
in
mov
sti
into
dec
mov
pop
mov
shlb
push
jnp
subb
or
mov
or
jp
lea
xor
outsb
jns
aam
mov
pop
test
mov
xchg
mov
push
repz
hlt
cmp
stos
cmp
adcb
sub
add
ds
adc
xchg
adc
mov
xchg
call
inc
data16
and
push
mov
lret
adc
fsubrl
loop
fld
sbb
inc
push
sbbb
mov
mov
add
inc
jae
push
fld
cmp
pop
jne
or
lock
out
push
sbb
cmp
jmp
add
jo
cmp
sub
ss
push
int
or
mov
loopne
mov
pusha
xchg
push
mov
or
sbb
js
mov
in
jmp
test
test
pop
jnp
push
pop
test
cmp
push
or
jb
xor
fbstp
in
das
add
and
nop
push
loop
call
inc
clc
lods
mov
xchg
jae
fmull
test
cmpsb
jnp
aas
in
pop
cmpsl
cmp
cmp
or
fwait
pop
inc
sbb
or
sub
mov
dec
or
sbb
jo
bound
xor
or
adc
mov
xchg
cmc
xor
and
fisttpl
push
xchg
insl
adc
and
push
clc
inc
lret
inc
stc
cmp
daa
jne
pop
adc
sbb
adc
xor
pop
movsb
add
ss
adcb
xor
in
sub
idivb
mov
mov
and
push
daa
jl
call
mov
pop
cmpl
xor
test
js
ds
push
fucom
inc
das
and
daa
std
repz
jnp
movl
xchg
sarl
push
mov
mov
cmpsl
daa
fadd
and
dec
stos
or
mov
push
dec
lea
or
xor
sbb
je
stos
lahf
call
dec
add
lock
mov
int3
cwtl
mov
jge
xor
sahf
push
jmp
mov
in
sbb
mov
pop
cmp
sub
cltd
inc
xchg
mov
add
or
popf
test
call
test
mov
cmp
pop
mov
xchg
xchg
enter
push
and
adc
or
inc
cld
mov
sbb
mov
mov
and
xor
mov
daa
in
aam
cltd
popf
lcall
mov
fcompl
movsb
out
mov
cltd
icebp
out
movsb
mov
push
add
ret
cli
cmpsb
sub
pop
dec
sbb
outsl
js
mov
sub
push
imul
or
mov
cltd
and
call
lret
sbb
or
and
xor
fstpl
adcb
rcrb
ffree
mov
test
or
hlt
xchg
leave
mov
cwtl
out
dec
decb
adc
xchg
xor
dec
xor
scas
insl
xchg
mov
jmp
jle
dec
std
jp
nop
inc
mov
mov
push
lret
add
mov
into
pop
xchg
fwait
shll
scas
jnp
sbb
sbb
mov
loopne
sbb
imul
lods
fdivrl
jnp
imul
push
out
lds
dec
jg
push
nop
loop
dec
jb
jecxz
dec
imul
mov
sbb
jp
pop
xchg
sahf
das
loopne
xchg
mov
sbb
mov
push
push
leave
xchg
inc
mov
ja
repz
adc
xor
jg
aad
xlat
pusha
aas
add
in
fwait
je
xchg
mov
sub
sbb
sub
or
add
cmp
inc
and
or
test
mov
xor
int
js
test
outsl
fisttpll
stc
push
or
loopne
push
sbb
dec
cmp
add
or
repz
sbb
dec
mov
xor
scas
xchg
aas
mov
mov
xchg
scas
pop
aas
cmpsb
xor
adc
scas
shlb
dec
scas
xchg
mov
cld
mov
mov
inc
cmp
int
inc
jae
sahf
call
xlat
bound
cmp
or
mov
imul
adc
icebp
jnp
dec
cmc
cli
xor
cmpsb
cmp
mov
push
adc
xchg
pop
add
inc
leave
dec
xchg
mov
add
mov
push
mov
mov
mov
push
cltd
mov
mov
ljmp
cmp
daa
std
pop
ret
push
inc
loope
pop
mov
jo
add
cmpsl
aad
inc
mov
out
xchg
pop
and
cld
mov
out
or
pop
enter
bound
pop
rcrb
cmp
cmp
pop
jne
repnz
adc
popa
mov
and
ficomps
ja
repnz
icebp
or
jns
xor
push
jmp
in
idiv
stc
lcall
in
jnp
mov
movsl
pop
xchg
push
push
push
mov
jb
sbb
stc
adc
std
mov
cmp
mov
loop
and
sbb
adc
icebp
loop
cmp
or
jl
pop
arpl
ja
dec
dec
test
nop
push
int
xor
bound
into
pop
add
outsb
lret
inc
push
jmp
dec
pop
adc
jo
pop
pop
ss
inc
adc
test
sbb
fwait
mov
mov
cs
mov
cmp
cmp
pop
scas
dec
inc
sahf
xchg
test
mov
mov
mov
sub
ja
das
dec
push
pop
les
cmc
mov
or
ljmp
cmc
push
cltd
mov
fcom
jecxz
mov
push
sub
lret
fisubrl
stos
lret
test
mov
mov
add
push
inc
lods
cs
dec
das
jecxz
sbbl
inc
inc
sti
xor
sub
push
mov
mov
sub
mov
mov
shll
loop
movsb
dec
in
fisubrs
pop
addl
xchg
push
lret
ret
jp
pop
xchg
mov
repnz
sub
shl
mov
hlt
in
cmp
cli
mov
sbb
ret
or
mov
mov
push
orb
hlt
outsb
fdivs
or
pop
es
shr
add
dec
mov
add
flds
add
xchg
jge
jbe
mov
push
cld
mov
ret
xchg
xor
jae
rclb
outsb
dec
lods
rolb
xlat
push
shl
pop
push
jecxz
cmp
push
mov
xchg
call
and
xor
aas
lea
cmp
movsb
mov
fdivrs
push
fmul
int3
add
mov
xchg
or
inc
sbb
outsl
push
xor
push
jle
rolb
sub
cmp
imul
push
lea
nop
jg
in
push
ljmp
push
adc
sub
push
popa
aam
mov
out
or
pop
test
out
add
push
mov
mov
in
das
mov
jns
movsb
rcl
cli
andb
in
and
aad
push
cltd
xor
push
jae
adc
hlt
and
jbe
dec
movsb
pop
cmp
insb
iret
out
ficoml
ficoms
sahf
mov
jb
dec
ret
rcrb
mov
mov
mov
fdiv
loop
push
lahf
sub
cmp
fidivrs
mov
movb
orb
dec
fcmove
adc
and
std
and
or
mov
fnstsw
inc
xchg
fwait
cmp
xchg
cmc
adc
jb
ljmp
or
pushf
and
lcall
rcrb
mov
push
faddl
xchg
add
jnp
loopne
loop
xchg
popa
and
pop
pop
dec
sahf
inc
jbe
push
pop
mov
inc
repz
jbe
add
pop
fxch
mov
mov
out
cli
cmc
xchg
repz
push
dec
jb
push
adc
jecxz
push
push
jp
fisubl
sti
testl
or
lret
add
mov
lds
pop
jne
xor
or
in
clc
cmp
je
sub
ja
imul
cmpsl
inc
xchg
xchg
pusha
inc
lods
xchg
or
lds
fdivs
cmp
sub
jns
mov
fs
stos
or
pop
fstps
imul
push
mov
xchg
or
pop
sarl
and
dec
dec
and
or
dec
add
cmp
jo
sub
ret
inc
sub
xor
ja
insb
dec
sbb
jne
mov
sbb
pop
mov
les
daa
into
fildl
sarl
xor
mov
out
les
clc
int
fwait
or
cmc
popf
jo
push
insb
into
test
sub
mov
mov
fwait
inc
cmp
sub
gs
popa
add
cltd
jp
mov
rorl
mov
sti
out
jno
add
cli
test
shlb
roll
in
cmp
push
iret
sub
into
pop
or
lret
fsubr
sbb
dec
jne
js
mov
push
jecxz
jg
lods
andl
loop
xchg
pop
cmp
xor
div
dec
cmp
lods
fmull
out
mov
int3
out
and
pop
loope
push
cmp
xchg
fdivs
rol
pop
in
push
aaa
ds
bound
push
out
inc
loopne
xchg
lods
out
inc
aaa
test
push
and
ret
mov
iret
sbb
add
icebp
pop
push
pop
inc
xor
cmp
gs
movsl
movsl
test
pop
sbb
in
adc
out
and
push
inc
rcl
adc
rcr
nop
ljmp
or
loope
adc
dec
fwait
mov
mov
mov
adc
out
pop
popf
and
stos
aas
dec
fbld
std
and
sub
leave
jecxz
fwait
adc
sbb
das
cltd
daa
and
test
je
cwtl
mov
sub
sbb
clc
sbb
add
in
repnz
pushf
mov
mov
mov
xchg
push
mov
push
adc
mov
into
jbe
mov
adc
stos
pop
adc
cmp
out
mov
data16
dec
mov
scas
arpl
into
ss
mov
add
cmc
or
sbb
shrb
or
lock
mov
js
or
mov
jns
movl
out
leave
shlb
add
jnp
jae
pop
jecxz
dec
sub
xor
mov
sbb
lock
mov
mov
push
stos
and
sahf
adc
jnp
jecxz
cli
test
in
jne
sbb
scas
mov
mov
or
pop
jnp
add
out
fwait
dec
jge
mov
add
daa
lahf
pop
mov
mov
xor
cmp
sub
mov
hlt
and
ljmp
inc
cmp
and
push
mov
jge
dec
dec
cmp
mov
lcall
mov
jmp
sti
mov
cli
shlb
mov
ja
sbb
je
outsl
lods
and
pop
adc
push
or
jg
xchg
and
mov
pop
jno
dec
in
mov
mov
adc
out
inc
add
jmp
push
xchg
fcmovnbe
jne
aam
adc
nop
mov
dec
xchg
xor
jnp
dec
andb
jae
bnd
xchg
or
andb
or
ljmp
vaddpd
shll
sbb
mov
and
loope
mov
xor
or
lock
and
push
inc
mov
pop
and
pop
int3
xchg
sbb
lret
or
pop
sbb
mov
jp
add
cs
sbb
movb
icebp
sub
ds
enter
loope
lret
bnd
cmp
add
popa
icebp
add
mov
out
out
adc
jg
xchg
jne
subb
xlat
push
push
mov
stos
rcll
ret
repz
xor
mov
into
sti
leave
push
and
daa
cltd
xchg
stc
push
bound
push
aas
cld
or
mov
pop
pop
mov
ds
and
push
xchg
dec
int3
loop
movsl
out
or
mov
pop
test
pop
cmp
jne
sub
jl
mov
xorl
pushf
pop
in
cli
sub
test
add
sbb
add
xchg
mov
es
out
int3
cs
pop
push
out
sbb
aaa
cmpb
pop
xchg
cmp
jnp
mov
movsl
mov
inc
inc
mov
jbe
je
inc
xchg
xor
stos
mov
sahf
nop
fwait
jge
sbb
aam
pop
pushf
sbb
xor
push
adc
push
xor
sbbb
cltd
sub
loopne
cs
xor
mov
and
out
sbb
int
jnp
in
pop
push
push
jbe
sub
lods
pushf
pushl
bound
je
cltd
outsb
clc
sub
cwtl
fistpl
sbb
sbb
or
pop
stc
test
test
sahf
rclb
mov
or
push
das
ret
mov
and
mov
pop
out
push
xor
jns
ds
and
mov
cmpsl
repz
sbb
pop
add
shl
or
cmpsl
sahf
adc
inc
mov
mov
out
out
loop
add
sbbb
pushf
pop
fs
jge
mov
sbb
fistl
mov
scas
pop
insb
xchg
subb
inc
imul
mov
xor
sbb
imul
sbb
in
repnz
cmp
xchg
or
jbe
sub
push
repz
push
lods
push
out
outsl
sbb
lret
dec
andl
out
mov
xor
fsts
in
push
jo
and
or
and
xor
pop
and
jl
pop
adc
mov
idivl
jg
lods
xchg
xchg
lahf
add
or
sbb
jne
xchg
pushf
mov
or
cmp
lods
lcall
imul
inc
mov
adc
xor
insl
in
sub
jbe
or
movsb
ret
rcrl
adc
mov
les
sub
sub
repz
test
lds
xchg
jno
dec
fnstsw
mov
lcall
inc
mov
stos
mov
scas
xchg
out
pop
push
stos
lods
negl
xchg
lds
sarl
int
insl
or
rorl
cmp
mov
mov
stc
popf
lret
xor
xor
loope
jae
fwait
or
rorl
jae
sub
mov
stos
inc
icebp
hlt
mov
gs
push
and
incl
xor
jg
xor
add
sbb
call
roll
mov
out
cltd
aam
push
mov
xchg
mov
mov
test
cmp
xchg
pop
testb
jno,pn
xchg
or
cli
cmpsb
mov
shll
add
popa
pop
or
pushf
repz
outsb
add
mov
adc
inc
jbe
popaw
repnz
repnz
xchg
jp
sti
cmp
pusha
mov
pop
shlb
sbbb
xor
dec
cmpsb
into
xchg
xlat
in
mov
cmp
mov
jmp
push
cltd
out
mov
xchg
out
add
xlat
inc
cmp
pop
push
insl
push
push
xor
cmp
xchg
jns
mov
jne
fldln2
fstpt
cmc
cli
mov
daa
cmc
ss
dec
leave
test
hlt
sbb
or
insl
jns
sti
aas
xchg
gs
imul
movsl
mov
fldt
jmp
pop
inc
dec
fs
test
mov
jno
push
test
adc
fisubrs
adc
xchg
or
add
ds
daa
inc
xor
push
ds
enter
add
sarl
push
push
lretw
int
movsb
push
push
js
sbb
sbb
push
fwait
add
lods
cld
xor
mov
dec
push
cmp
ds
sbb
roll
mov
cmpsl
cwtl
mov
cmpsl
mov
inc
popa
or
xchg
imul
out
mov
add
pusha
outsl
ds
movsl
mov
pop
out
xchg
pop
hlt
jp
push
bound
mov
mov
mov
fiaddl
push
lret
incb
ss
hlt
iret
and
and
test
js
mov
lahf
xor
popf
aas
or
in
push
sar
dec
int3
inc
mov
sub
pop
xor
add
xchg
cld
sbb
pop
mov
xor
ret
test
mov
mov
push
jns
xor
and
sub
nop
add
pop
stc
xorb
xor
fbstp
add
add
jbe
sbb
or
inc
mov
mov
inc
xchg
dec
push
fimuls
add
shlb
scas
sbb
mov
or
mov
pop
cmp
ja
xchg
cmp
sbb
dec
int3
roll
adc
jmp
lea
and
xchg
pop
jecxz
sti
jae
jae
sbb
adc
mov
adc
out
pop
push
out
movsb
rclb
sub
fistps
xor
imul
or
mov
fwait
out
lds
cmc
imul
cmp
mov
icebp
shlw
pop
push
js
daa
mov
mov
jae
ret
outsl
add
pop
xchg
sub
mov
or
add
stos
out
push
mov
bswap
add
daa
and
cmpsl
shl
xchg
push
pop
addl
push
mov
push
sub
mov
out
push
pushf
std
mov
adc
push
arpl
add
mov
pop
sbb
push
pop
xchg
or
push
lahf
nop
rcr
lock
negl
add
pushf
xchg
fldl
xor
call
les
sahf
add
pop
sbb
inc
in
pop
mov
in
push
pop
cwtl
jae
js
out
pop
push
mov
mov
add
shl
mov
adc
popl
test
xchg
inc
or
xchg
stc
jb
adc
test
jo
push
cs
mov
or
push
pop
adc
lods
fs
push
pop
cmp
mov
dec
push
push
fbstp
or
nop
in
test
sarl
mov
inc
rorl
push
lods
ficompl
psrld
cmc
popf
mov
jae
jecxz
dec
cmp
xchg
fnstcw
mov
loopne
inc
repnz
mov
fldcw
shll
lods
mov
ja
shll
sub
push
ljmp
jmp
pop
add
cmp
sbb
or
mov
scas
pop
push
pop
into
dec
mov
imul
sbb
adc
cs
mov
and
lret
cmp
gs
jo
dec
stos
jne
adc
mov
push
pop
lret
xor
mov
and
lds
mov
std
push
mov
clc
ret
in
lock
sub
dec
mov
inc
test
sbb
je
stc
xchg
out
outsl
jle
xchg
push
add
xor
mov
hlt
inc
gs
jnp
adc
push
and
repnz
pop
push
fwait
mov
je
sbb
call
push
fucomp
dec
add
addr16
pop
pop
push
stc
loope
cmp
imul
nop
pop
mov
dec
sahf
add
or
es
adc
jle
stc
jno
rclb
cltd
inc
scas
mov
loopne
shrl
test
sbb
shll
movsl
jae
adc
jg
fs
jge
mov
jle
and
shll
or
cmp
bound
icebp
sahf
adc
and
xchg
cld
mov
test
sub
in
xor
in
push
mov
pushf
push
cmp
sbb
testb
ret
rcrl
pop
aaa
or
pop
or
imul
jno
out
les
cltd
jnp
add
popf
or
or
in
pop
xchg
pop
dec
out
fiadds
cmp
xchg
or
js
pop
mov
dec
sbb
or
movsb
jns
gs
jb
pop
inc
xchg
sbbl
cld
xchg
loopne
dec
and
ds
inc
push
data16
sbb
nop
jg
lods
inc
xor
sarb
push
inc
cmp
andb
daa
fildl
movsb
mov
loope
sbb
iret
test
push
xor
xor
test
insb
and
inc
mov
adc
mov
sbb
scas
arpl
out
mov
inc
mov
mov
rcll
mov
test
test
adc
orb
js
xchg
jno
daa
xor
mov
stos
jl
inc
or
xchg
fstl
xchg
sti
sub
or
jp
nop
insl
dec
cmp
or
shl
mov
or
int3
add
in
sahf
mov
dec
in
int
mov
sbbl
push
dec
fidivrl
mov
mov
stos
push
mov
mov
fdivrs
mov
dec
inc
dec
adc
std
cmp
repz
jns
bound
or
clc
mov
stos
push
push
mov
add
hlt
sub
je
pusha
push
jbe
mov
loope
mov
loop
rorl
dec
xor
fnsave
std
in
fwait
arpl
inc
mov
or
outsb
adc
iret
ja
adc
cmp
data16
and
add
insb
sbb
xchg
stos
inc
inc
jle
call
sbb
and
xlat
decb
mov
mov
aas
fwait
xchg
mov
pop
ds
mov
ljmp
enter
sub
subl
xor
jnp
or
cmp
adcl
mov
sbb
xchg
aas
mov
std
loop
dec
mov
or
adc
loop
movb
dec
dec
mov
fs
fidivrs
lcall
xchg
or
xchg
movsb
hlt
out
fwait
push
rol
fsubrl
xor
shrb
pop
lret
imul
mov
mov
dec
insb
cmc
sahf
jnp
bnd
push
pop
jns
jnp
pop
push
jae
jbe
gs
push
js
push
adc
mov
sub
xchg
dec
scas
pop
sbb
pop
push
adc
mov
xchg
test
popf
jno
sbb
daa
cmpsl
xchg
jp
test
jne
mov
mov
sahf
xchg
fs
mov
add
data16
ljmp
adc
fdivrs
pop
mov
mov
add
iret
out
in
and
sub
mov
movsl
out
bound
jbe
push
sahf
jo
push
hlt
mov
xchg
in
mov
or
sahf
movsb
fucomp
sbb
xor
js
aaa
push
and
mov
out
rcr
sbb
out
ret
roll
jecxz
inc
nop
add
xchg
xchg
dec
cltd
std
rcr
jge
push
pop
fistl
jae
lret
sub
push
sbb
add
and
fcmovne
mov
inc
jb
cwtl
testl
lret
xchg
mov
fwait
push
nop
fwait
or
pushf
lea
mov
call
lods
push
adc
testl
push
jo
xor
lock
iret
in
into
arpl
mov
outsl
or
leave
push
data16
xchg
fs
dec
xchg
mov
cld
inc
xor
je
jns,pn
cwtl
push
inc
in
out
mov
mov
xor
sbb
stc
cmp
out
pop
gs
sbb
cmp
mov
ds
mov
lea
mov
ja
cmp
xchg
mov
outsl
push
sbb
and
negl
mov
stos
rcrl
cwtl
or
or
adc
and
cmp
cmc
dec
and
fdivrl
int
ficomps
imul
in
fisubl
loopne
int
mov
xchg
cltd
cmp
dec
sub
test
nop
cmc
int
repz
adc
test
mov
jae
cmp
lock
icebp
in
fwait
push
mov
pusha
loope
adc
and
mov
mov
cltd
in
dec
jb
addr16
lods
shr
xchg
imul
aas
sbb
dec
neg
daa
ret
popa
jnp
ud0
fimuls
fisubl
or
mul
push
inc
rcrb
inc
add
xchg
idivl
add
adc
jbe
iret
jp
aas
push
movsl
inc
dec
pop
cwtl
test
rolb
push
xor
fs
ret
xchg
push
mov
adc
mov
sbb
ret
or
lods
addr16
xchg
mov
sahf
andb
insl
imul
into
jb
or
jg
push
and
or
lock
lods
cmp
cs
or
xchg
push
ret
stos
sbb
repz
ret
nop
rep
dec
out
inc
sub
jno
in
adc
sub
adc
push
cld
push
mov
cmp
xor
arpl
sbb
ljmp
mov
sub
or
pop
jmp
std
mov
call
daa
mov
mov
push
scas
pop
sub
icebp
rol
ja
pop
lret
mov
int3
adc
adc
pop
stc
out
sub
and
cmc
enter
add
test
or
shl
and
sub
mov
mov
in
xchg
int
jge
mov
dec
int
rcrb
lock
popa
pop
fbstp
mov
push
aam
add
mov
xchg
add
mov
daa
xchg
xchg
clc
mov
in
mov
xor
loope
pop
pop
add
mov
sbb
icebp
stos
sbb
mov
lahf
mov
imul
and
jbe
fisubrs
adc
xor
idivl
mov
jl
mov
fsubrs
push
mov
add
or
mov
xchg
imul
cmp
pop
jmp
mov
nop
dec
lret
sub
mov
fwait
nop
pop
mov
lock
xchg
pop
sub
jae
sub
in
in
imul
test
push
adc
cmpsb
shll
mov
or
jmp
mov
repz
ds
movsl
pop
push
cmp
cmpsb
xchg
frstor
pusha
mov
dec
sub
fucompp
jns
orb
inc
mov
mov
idivl
xchg
in
pusha
test
iret
mov
ja
xchg
scas
mov
inc
sbbl
mov
ret
adc
dec
mov
jle
scas
and
mov
jmp
xchg
adc
dec
xor
mov
inc
xorl
jb
popa
incb
push
test
sahf
inc
enter
push
push
inc
dec
or
sub
lock
bound
aas
shl
stos
out
das
pop
mov
fwait
wbinvd
jbe
mov
pop
pop
mov
mov
jns
push
push
scas
shr
shll
das
mov
add
xchg
sbb
sub
sahf
icebp
sub
pop
fadd
push
pop
dec
fidivrs
scas
cmpsl
jo
mov
in
add
mov
and
dec
xlat
pushf
fwait
mov
out
jp
lret
data16
xchg
ret
pop
int3
in
pop
push
xchg
mov
xor
mov
mov
add
inc
jge
and
in
adc
mov
pop
jnp
pop
inc
xchg
aaa
ret
icebp
pop
pop
dec
jae,pn
lea
jo
hlt
lea
mov
pop
shlb
lea
mov
fwait
add
cmp
sbb
lret
dec
dec
jl
jecxz
fidivs
addr16
mov
inc
jbe
mov
push
jl
cmp
dec
insb
xlat
jnp
push
mov
out
aaa
adc
jo
inc
fwait
dec
lret
push
xor
add
adc
into
and
int3
cmp
repnz
mov
fs
mov
push
jns
int3
dec
mov
stc
mov
lret
and
xor
push
or
pop
movb
jge
sub
dec
jl
cmp
jp
sbb
adc
dec
mov
xorl
sti
jbe
loop
cs
xor
les
ljmp
in
out
cmp
icebp
mov
fbld
mov
into
pop
sub
xor
pusha
push
pusha
jmp
cld
test
mov
dec
enter
and
pop
roll
out
sub
jecxz
inc
jle
mov
in
pop
and
xchg
nop
lods
enter
test
dec
nop
add
loop
inc
push
inc
test
xlat
xchg
adcb
push
scas
sub
sbb
xchg
push
xor
mov
adc
adc
cmp
daa
xchg
adcb
mov
mov
pop
lret
push
scas
sbb
movsb
xor
adc
mov
sbb
mov
cmpsb
inc
push
push
incb
jle
push
aaa
aas
lahf
sbbb
test
xor
repz
pop
jmp
movsb
jnp
xchg
inc
jns
xor
icebp
dec
xchg
dec
jge
test
push
xor
adc
or
push
ds
jmp
cmp
sti
xor
getsec
pop
out
add
stc
gs
pop
sar
movsl
sbb
and
adc
inc
je
or
adc
add
mov
dec
push
scas
test
push
fwait
jp
ja
test
lods
xor
adc
push
scas
cli
enter
pusha
sbb
and
sbbb
push
lock
int3
orl
xchg
sub
xchg
scas
in
lret
cmp
loop
inc
mov
stos
fnstcw
addr16
mov
pop
inc
pop
test
fidivs
add
insb
lods
outsb
inc
jnp
das
out
pop
shll
sbb
leave
mov
ss
mov
not
sbb
jb
mov
in
add
push
xor
mov
mov
jns
xchg
xchg
jp
dec
dec
movsb
mov
ja
loopne
andl
xor
pop
push
xor
lock
push
call
mov
dec
adc
push
cmpb
xor
test
mov
dec
pop
xor
sbb
clc
cmpsb
push
fs
jne
fidivs
xor
cmp
inc
sahf
xor
cmp
mov
push
mov
push
dec
aas
in
dec
mov
mov
cmp
pop
cmp
ret
or
lds
xchg
loopne
popf
clc
inc
js
mov
jmp
outsb
xchg
test
in
add
les
mov
mov
ret
jmp
mov
adc
push
loope
sub
push
in
inc
dec
aam
jecxz
fdivrl
adc
jl
pop
cmp
shlb
std
fwait
and
cmpsl
lcall
pop
add
push
inc
mov
fcoms
mov
cwtl
dec
xchg
sub
hlt
jne
jnp
sbb
jmp
mov
mov
pop
mov
push
enter
mov
leave
ja
push
call
xor
test
xchg
aam
push
adc
les
callw
inc
sub
push
addr16
pushf
xor
xor
div
testb
xor
int3
les
jle
push
inc
imul
adc
add
loope
fistpll
push
lods
jmp
lock
and
repnz
mov
into
add
lods
jb
inc
int
pop
inc
or
es
lods
xchg
je
adc
pushf
add
sub
leave
stc
pop
mov
in
std
xor
jg
xchg
cmp
js
les
mov
cmp
dec
inc
inc
jnp
pop
es
sbb
sbb
inc
call
push
ja
lods
jp
fst
insb
lods
push
fwait
aas
lcall
out
jecxz,pn
or
adc
scas
pop
out
mov
xchg
ret
mov
cwtl
cmp
insb
add
in
push
cmpsb
repz
ljmp
mov
rcr
jmp
mov
mov
dec
inc
mov
sub
push
push
jge
nop
cmp
add
jg
imul
adc
xor
push
sub
xchg
push
lcall
or
mov
push
cwtl
lret
adc
mov
xorl
add
mov
or
pop
mov
jp
insb
push
or
iret
xchg
jo
pop
xchg
inc
add
int
das
mov
xchg
push
cmc
adc
cld
add
pop
hlt
mov
int
pop
fwait
cmpsb
das
out
jge
aad
inc
mov
in
xor
xchg
jecxz
and
fdivl
in
das
sub
loop
aam
jne
add
lret
push
sub
dec
inc
fsts
int3
push
shrb
mov
jb
fwait
sub
mov
cltd
xchg
pushf
jae
jmp
and
clc
int
sti
in
repz
jp
xor
lret
xchg
pop
mov
out
mov
and
into
sub
out
repnz
dec
xchg
jb
cmp
iret
add
jp
mov
mov
popa
or
xor
cmp
fisttps
cmp
inc
cmp
inc
xchg
mov
mov
xchg
sbb
repnz
xor
andl
fnsave
mov
adc
loopne
push
movsb
xlat
imull
and
or
pop
scas
iret
popf
cs
pop
fwait
sub
push
rolb
pop
jmp
ret
fsts
adc
hlt
pop
sbb
out
adc
pop
lahf
push
addr16
shl
in
pop
cmpsl
pop
insl
xor
inc
jb
imul
mov
xchg
test
xchg
pop
lret
inc
lock
fdivl
mov
or
lea
jb
push
lea
push
inc
mov
iret
cmp
cs
or
dec
jno
jb
incl
test
push
sub
mov
sbb
and
adc
mov
mov
cli
sbb
push
pop
ds
out
mov
pop
ficoms
stos
ljmp
sahf
insl
cltd
sbb
or
fisttpll
mov
sub
and
addb
and
movsb
sub
ja
into
add
jno
pop
jae
filds
adc
mov
push
sbb
lret
iret
aaa
js
out
rcrl
push
imul
aaa
xor
ds
ljmp
sub
adc
shr
add
fwait
pop
sbb
cmpsl
dec
js
and
cltd
add
add
cmp
orl
dec
dec
lret
dec
mov
aaa
dec
xchg
incl
shl
inc
push
sub
jmp
pop
outsl
out
and
push
and
push
lret
mov
repz
mov
fwait
xchg
lret
into
pushf
and
pop
lcall
push
mul
hlt
mov
mov
scas
jne
jbe
xor
inc
inc
inc
inc
out
aad
les
in
mov
sub
dec
aas
call
xor
mov
sbb
inc
outsl
pop
inc
fwait
aas
in
add
movsl
shll
mov
mov
xchg
mov
sub
out
daa
xchg
clc
jns
nop
sbb
or
sub
out
xor
call
aaa
or
cmp
jge
test
cld
pushf
mov
cwtl
add
out
call
cltd
mul
and
cmp
and
cmp
jae
loopne
ljmp
xchg
inc
or
mov
xor
roll
inc
cmp
in
sub
out
sub
or
cmp
int3
mov
popf
jecxz
pop
lcall
fwait
rorl
ds
sbb
cmp
mov
cmp
test
adc
inc
sub
out
jo
fistps
jge
fisttpl
adc
movsb
cltd
sbb
mov
adc
and
scas
je
sub
pushl
pushf
inc
imul
xchg
popf
mov
sub
adcb
ds
gs
xor
rcrb
cmp
fsubs
sahf
outsb
imull
nop
and
scas
mov
xor
sub
and
dec
xlat
xlat
out
cmp
outsl
fnstsw
sbbb
mov
dec
mov
push
dec
stc
dec
ret
sub
jge
xor
or
in
xor
adc
jmp
movsb
js
or
sub
xchg
movsl
sbb
and
sbb
inc
je
imul
out
inc
xorb
imul
and
out
mov
loopne
pop
add
ds
xchg
xchg
cmp
xor
loope
jp
jecxz
or
cmp
cltd
stc
into
scas
fwait
aam
lcall
in
test
mov
mov
mov
pop
out
mull
mov
in
inc
fisubrl
inc
lods
rolb
push
jecxz
jns
xchg
int3
in
aaa
or
add
out
es
cmpsl
jmp
and
jmp
and
push
sbb
and
adc
and
pop
sbb
inc
pop
outsb
pop
adc
stc
test
and
shlb
fld
ljmp
sub
data16
cmp
lcall
outsl
ds
stc
mov
out
sub
cmp
out
ss
lret
jmp
xchg
std
pop
mov
sub
push
movsl
sbb
xor
pusha
cmp
inc
fisubrl
in
das
inc
inc
ljmp
icebp
mov
inc
push
inc
gs
sub
repnz
scas
inc
test
and
sbb
push
mov
loopne
jle
xchg
lcall
sub
aad
cltd
cld
in
sahf
mov
adc
sub
mov
fsubr
sub
adc
ds
test
aaa
add
inc
bnd
push
dec
mov
aad
mov
and
aaa
add
pop
xor
sub
sub
lds
inc
aaa
xchg
xor
jl
popf
in
or
add
xor
stos
sbb
sub
rcrl
push
insl
sub
and
popf
mov
sbb
push
mov
or
arpl
shr
add
sub
in
xor
jo
lods
xchg
dec
pop
mov
dec
das
out
push
shll
ret
cmp
mov
in
adc
test
clc
dec
repz
pop
dec
pop
out
dec
call
aaa
sub
xor
insb
roll
sbb
out
nop
mov
jo
std
inc
and
jle
rcll
test
cmpsb
loope
and
mov
mov
or
repz
aas
cmp
or
bnd
mov
add
xchg
sub
mov
inc
std
in
aaa
and
mov
popf
cmp
cwtl
xorb
jbe
mov
cs
movsl
subb
push
xor
lds
cmp
bound
xor
cmp
dec
pop
into
rorb
in
dec
cld
dec
jecxz
mov
adc
bound
gs
mov
sub
add
jns
ds
add
mov
push
and
pop
xor
push
sub
or
ret
dec
add
out
dec
mov
nop
or
sub
or
lcall
es
idivl
xchg
inc
add
fistps
mov
dec
xchg
add
aas
sub
lcall
sbb
fwait
add
dec
test
mov
adc
dec
adcb
push
mov
test
repz
push
dec
cmp
lds
sub
cltd
popa
rcrb
push
mov
and
stos
out
sub
jae
jecxz
nop
sub
and
test
pop
dec
jle
inc
pop
stos
aad
inc
jecxz
aaa
lock
push
jne
mov
adc
cmpsb
mov
cs
out
mov
mov
jmp
mov
adc
mov
add
and
les
daa
add
arpl
push
and
mov
sub
cs
outsb
mov
outsl
add
jnp
sahf
and
push
dec
jnp
ficompl
jg
push
js
in
sub
pop
data16
push
int
xchg
sub
xor
add
aam
aam
mov
mov
mov
fnstsw
mov
add
dec
inc
jno
stos
sbb
ss
jne
arpl
loopne
add
das
gs
jle
and
stos
arpl
enter
mov
xor
mov
mov
xlat
in
je
popa
testb
xor
imul
add
jo
lcall
xchg
dec
fbld
mov
fistps
subb
sbb
cmp
pop
sahf
daa
cltd
stos
cwtl
inc
cmp
cwtl
dec
dec
fs
rorb
shlb
jp
pop
push
add
fisubl
fcmovnu
sahf
ret
xchg
mov
pop
cld
rol
add
mov
in
insb
adc
pop
popa
dec
or
lret
adc
dec
cwtl
cs
xchg
int3
es
push
outsb
and
dec
outsl
mov
jl
call
inc
add
pop
pop
dec
jnp
sahf
xor
xchg
sbb
add
outsb
movq
add
out
pop
jecxz
dec
push
push
mov
fs
push
xor
out
xor
iret
or
mov
add
dec
out
sbb
mov
jne
push
movsb
mov
pop
lret
imul
jne
dec
xchg
dec
mov
jno
mov
cmp
jae
push
add
xor
lret
punpcklwd
les
mov
cmp
jecxz
cmpsb
sub
sbb
cwtl
js
pop
mov
push
dec
xchg
test
push
lods
sahf
push
bound
mov
lret
mov
ja
dec
dec
stos
lret
sahf
aas
mov
imul
scas
jnp
dec
std
pop
sub
imul
je
mov
lahf
pop
mov
andl
call
insl
fsubrl
push
xor
push
andl
jg
and
xor
dec
dec
mov
jp
stos
mov
cmpsb
dec
jno
test
and
jl
mov
sbb
and
in
sbb
pop
imul
sbb
xor
jne
idiv
mov
cmp
mov
fcompl
stos
sub
sbb
xor
mov
mov
add
je
xchg
cmpsb
mov
pop
sub
std
in
jl
aam
jae
cmpb
fisttpl
dec
adc
jle
mov
enter
mov
push
add
adc
xor
cltd
sbb
cmpsl
insl
xchg
mov
or
mov
arpl
mov
aad
xor
adc
cmp
cmp
or
test
cwtl
out
aaa
outsl
dec
outsl
add
push
pop
jmp
xor
adc
xchg
std
pop
out
iret
dec
stos
add
push
mov
out
lcall
push
fdiv
cs
or
aad
mov
mov
sahf
repz
jl
mov
pop
cld
pop
mov
bound
xchg
mov
out
sbb
mov
pop
xchg
xchg
pop
ror
mov
jg
mov
test
imul
loopne
jb
out
inc
jbe
ljmp
lcall
cltd
sbb
push
mov
pop
lock
ficomps
jns
xchg
push
clc
inc
popf
dec
out
stos
sahf
adc
cld
mov
movl
sbb
mov
insb
in
mov
push
aaa
xchg
mov
aaa
test
jns
cltd
xor
sbb
fdivr
jmp
fisubrl
popf
sbb
mov
popf
pop
or
test
jp
std
out
aam
jecxz
shl
cld
outsl
int3
loopne
imul
iret
pop
sti
mov
pop
clc
fadd
push
hlt
fsubrs
dec
in
fnstcw
ret
out
popf
jge
xchg
add
int3
xor
pop
push
pop
lods
cmpsb
push
push
inc
rcl
outsl
fwait
cmp
mov
pop
and
cmp
mov
push
dec
lahf
addr16
jge
mov
xlat
and
or
push
mov
in
push
ja
mov
inc
sbb
es
mov
or
in
outsb
sbb
push
imul
scas
lcall
out
aas
jmp
gs
out
add
movsb
aas
and
xlat
mov
cmp
in
jns
rcrl
xchg
pop
test
add
mov
loop
sbb
fcompl
fabs
movsb
xchg
pop
adc
cmc
pop
pop
aam
pop
mov
cmp
sub
ror
xchg
inc
cwtl
dec
xchg
and
mov
xor
dec
inc
jbe
dec
out
outsl
call
mov
dec
lods
clc
icebp
adc
mov
fcmovu
and
jnp
test
test
adc
lret
shrl
and
je
xchg
add
mov
ret
push
xchg
fists
pop
jnp
ret
pop
mov
leave
movsb
enter
push
fdivs
shlb
aam
mov
imul
outsl
xor
addr16
insl
insl
insb
push
adc
repnz
mov
mov
sti
sti
movsl
fistpl
fnstcw
pop
mov
sbb
out
aam
jbe
mov
xchg
scas
xor
cwtl
les
aam
pop
repnz
fcoml
pop
leave
pop
mov
dec
jne
lods
ret
adc
pop
inc
sahf
pop
cmp
cmp
dec
cmp
mov
aas
aas
lods
popf
pop
xchg
adc
scas
pop
pop
stos
lods
inc
xchg
mov
in
fwait
hlt
sbb
cld
fxch
lret
pusha
pop
jg
ret
aam
push
sub
mov
shlb
mov
lcall
pop
stos
shl
lds
repnz
lcall
movsl
addr16
and
adc
mov
daa
lods
shlb
dec
idivl
imul
fisubs
fistpll
leave
or
mov
vphaddubw
xor
jnp
aas
sub
enter
xor
loope
mov
ja
jge
test
mov
or
pop
test
push
std
dec
dec
jb
data16
xchg
cmp
not
dec
das
xorl
mov
add
cmp
push
scas
pop
dec
ss
js
dec
arpl
cmp
xor
and
fistps
pop
ficoms
ds
xor
in
mov
jge
or
xlat
rcl
push
outsl
add
ss
mov
repnz
add
push
test
pop
cmp
dec
loope
xor
test
cli
xlat
outsb
out
insb
sub
adc
cmpsb
mov
push
shrl
movsb
scas
nop
pop
fs
cwtl
jae
and
arpl
mov
je
xchg
aad
jnp
shll
push
xor
movsb
sub
in
add
ds
cwtl
subl
sub
mov
push
jle
aas
clc
aas
repz
dec
pop
push
bound
push
aad
jae
or
repnz
popf
ljmp
lods
iret
fidivrl
fs
shll
jne
subl
xor
inc
sahf
lea
dec
int
mov
push
rolb
push
xchg
aam
pop
push
sti
in
push
inc
jp
or
add
and
repz
add
jecxz
adc
gs
aam
jge
cmp
fcoms
push
movsb
test
jno
lahf
out
jle
cli
lock
xor
aaa
shlb
icebp
dec
stc
stos
pop
fstps
mov
push
adc
icebp
and
sarl
pop
mov
xchg
dec
cmpsl
rcr
rcl
je
push
out
arpl
cld
stc
mov
lock
cmp
aad
push
cli
pop
cmc
dec
mov
test
es
icebp
mov
xchg
jl
mov
xchg
mov
adc
sub
test
clc
xchg
inc
lock
out
dec
test
cmpsb
lret
popa
dec
bnd
cwtl
stc
inc
aaa
adc
test
aaa
sub
sahf
lds
fsubp
xlat
rolb
push
cmc
test
mov
jns
jmp
mov
pop
cmp
lcall
adc
inc
sets
psubusb
dec
mov
subb
xor
stos
negl
aaa
jg
daa
xchg
popa
lea
mov
xlat
rorb
popf
addr16
pop
cmp
imul
fidivrl
cltd
push
aas
popa
push
pop
xor
push
inc
popa
jns
dec
mov
sub
daa
jne
std
cltd
cmpsb
es
nop
dec
xchg
lods
andb
int3
scas
test
loop
ret
cmp
mov
or
adc
lock
lods
mov
jno
repz
fdiv
divl
lods
push
cmpl
mov
fimuls
idiv
pop
or
test
push
int
cltd
xor
nop
fstpl
and
int3
in
jno
in
andb
xor
and
xchg
hlt
daa
sahf
sbb
rcl
mov
push
xchg
jne
pop
sbb
out
cmpsb
lds
lret
enter
cmpsb
mov
lods
orl
cmp
pop
xchg
jno
lods
and
push
cmp
mov
mov
std
les
or
cli
pop
cmp
shr
xchg
push
jg
mov
mov
mov
or
add
mov
push
lea
mov
push
pop
in
jne
fs
sub
xchg
xor
add
and
push
add
mov
cli
jae
pop
test
jl
les
push
in
cli
push
cmp
mov
pop
leave
jmp
xchg
loop
and
fisttps
sbb
add
enter
shll
mov
xor
cld
cmp
in
add
dec
xchg
mov
inc
and
jl
xchg
sahf
inc
out
xchg
sahf
add
call
add
adc
jne
jae
ret
pop
cmp
push
lcall
or
sar
add
sub
test
outsl
stos
test
push
sti
fbstp
jbe
insb
test
sti
into
and
or
call
jle
push
test
cwtl
xchg
mov
imul
roll
fnsave
inc
bound
sub
pop
xchg
push
fmul
push
lret
jge
jnp
inc
cmpsl
dec
icebp
popa
mov
out
addb
dec
sahf
pop
rep
in
lret
fisttpll
dec
std
ret
cli
jecxz
subl
lds
cmc
xlat
popf
jnp
push
scas
inc
fwait
in
testl
paddd
lret
mov
cmp
mov
dec
shr
mov
dec
icebp
lcall
rcrb
test
mov
dec
stos
mov
mov
sti
sbb
gs
jae
xchg
fbld
lock
mov
cmpsl
cmpb
cmc
imul
popa
mov
push
xchg
aaa
lret
loop
fwait
mov
test
mov
sub
out
test
les
push
pop
pop
sub
or
in
stos
aam
shr
hlt
cmpsl
jnp
push
add
loop
jae
mov
je
clc
jmp
cmpsl
icebp
sub
dec
cwtl
lahf
or
mov
sar
cmp
push
aaa
jb
mov
cmp
jns
test
icebp
jecxz
lret
sub
jno
and
mov
hlt
dec
xor
cmc
jnp
push
in
cwtl
push
popf
in
imul
add
dec
jb
adc
inc
xchg
inc
loopne
add
and
xlat
jne
out
in
fldl
xor
push
test
lret
repnz
int3
push
addb
push
leave
mov
cmp
mov
xchg
sub
mov
adc
aaa
mov
fsubrp
test
mov
out
rol
cwtl
jo
jecxz
sub
popa
ss
shr
xchg
int3
dec
cmp
or
notl
cli
out
inc
and
xchg
jp
sar
ffree
movsb
inc
inc
es
clc
push
out
and
std
jne
adc
mov
mov
loop
rol
pop
popf
fsubrp
jmp
adc
fmul
fadds
outsb
adc
in
pop
arpl
push
dec
sub
dec
mov
clc
inc
add
nop
cltd
ret
sbb
push
mov
fistl
push
rcll
push
shl
pop
jno
popf
stos
jg
aad
push
fistpl
enter
lahf
out
std
out
sbb
jae
pop
stc
pop
xchg
sbb
icebp
inc
out
jp
fwait
outsl
iret
add
add
out
lahf
es
pop
push
in
mov
pop
dec
es
jae
rorb
jle
ret
mov
test
mov
fnsave
fcmovb
leave
divb
jecxz
mov
rcr
jmp
xchg
out
pop
dec
push
leave
xor
lret
jmp
pop
ljmp
mov
pusha
mov
jmp
in
cmpsl
add
sbb
add
sub
fcomps
or
jns
sub
cltd
cwtl
scas
pop
mov
xchg
cmp
add
or
mov
loope
lods
cmp
push
xchg
stc
bswap
sbb
dec
rcll
ljmp
xor
insl
ja
pop
cld
jecxz
js
dec
leave
pop
pop
int3
sbb
in
test
loop
jns
or
cmpsl
fcompl
popf
add
mov
cmp
test
xchg
mov
mov
mov
cli
leave
movsb
or
fnsave
gs
cwtl
adc
xor
push
pop
sbb
lods
rcrb
jge
cmp
jo
clc
aam
lds
push
dec
inc
insb
pushw
mov
ljmp
jne
pop
mov
out
repnz
xor
fs
pusha
test
sbb
fadd
adcl
mov
in
addl
cmpsb
in
mov
fwait
les
lret
adc
mov
cmpsl
aam
sbb
setge
xchg
add
mov
xor
mov
jmp
outsb
mov
subl
or
int3
push
hlt
cmc
mov
xchg
dec
jmp
scas
xchg
insl
jb
lock
add
add
sahf
add
sbb
cld
and
hlt
outsl
jl
imul
sub
cmp
cwtl
jg
pop
xlat
ljmp
push
mov
ja
mov
pop
pop
sub
sbb
dec
sbb
mov
iret
inc
jno
jg
ds
testl
xchg
in
mov
call
xchg
divb
dec
decb
add
mov
push
int
mov
nop
sbb
les
sti
int
insl
std
cmp
movsb
fcomip
jl
pop
repnz
popf
lret
rep
push
mov
inc
divl
std
cwtl
jmp
sbb
cltd
jno
pop
mov
hlt
aad
mov
lock
fsts
out
aas
repz
pop
cmp
fstpl
mov
test
jnp
insb
add
pop
xchg
mov
shl
and
cli
loope
fiadds
jg
int3
xchg
push
cmp
xchg
sbb
cmp
leave
mov
sarb
es
dec
jmp
scas
mov
push
ficoml
fsubs
adc
imul
outsb
fistpll
rep
cmpsb
sbb
ret
hlt
sti
std
cli
pop
hlt
jecxz
mov
jmp
xchg
or
jmp
xchg
sbb
shlb
jo
lock
ffree
jae
or
loopne
inc
pop
sub
loope
fnsave
imul
xchg
roll
push
mov
shll
hlt
fnstsw
jl
ret
jmp
mov
cmp
jae
leave
imul
mov
loope
sbb
out
or
shl
sub
and
cmp
pushl
jmp
push
pop
xchg
dec
movsb
mov
ret
pop
popf
addl
ficomps
jmp
es
stos
daa
aam
xor
popa
push
xor
inc
jno
shll
inc
loope
aas
mov
mov
xor
dec
sahf
out
adc
mov
push
mov
lock
dec
push
es
mov
xchg
ja
test
jp
lret
sbb
push
dec
add
ljmp
in
xchg
mov
popf
sbb
fstpl
cli
inc
jge
mov
jge
lret
leave
sarb
stc
ss
ret
test
pusha
into
std
mov
rcr
or
je
leave
ds
scas
test
mov
dec
dec
push
dec
test
mov
ds
test
mov
jne
test
rcr
mov
and
scas
loope
dec
sbb
xchg
mov
jg
frstor
cmc
dec
out
pop
or
loop
popf
xchg
ret
dec
mov
mov
shlb
xchg
sbbl
jae
sbb
std
sbb
movsb
loopne
mov
das
out
test
rcrl
or
jmp
int
xor
les
jae
cltd
and
xchg
insl
test
cltd
stc
jp
shr
mov
xchg
movsl
inc
xchg
iret
mov
cmp
stos
adc
push
jb
shll
pop
inc
mov
ss
movsb
fs
call
out
jge
jne
pop
or
hlt
mov
pop
dec
xchg
mov
mov
fwait
jmp
imul
aas
les
imul
addr16
movsl
add
sub
mov
mov
clc
fstps
aam
adc
and
mov
and
push
aas
xchg
lret
xlat
aad
mov
loope
insl
lret
nop
cltd
adc
cltd
sbb
mov
into
push
test
pop
cmp
out
lahf
xchg
out
dec
push
pop
imul
aad
js,pt
adc
loop
sbb
in
int
jle
lret
fcomp
js
sub
jno
in
jns
rorb
pop
mov
pop
dec
ret
lret
outsb
repz
lret
and
mov
push
ljmp
xchg
push
call
scas
sar
pop
mov
cmp
jle
sbb
mov
sti
ja
mov
lcall
and
imul
mov
or
jnp
push
inc
mov
test
pop
or
mov
cli
or
roll
sbb
lahf
icebp
mov
fcmovbe
jnp
leave
sahf
xchg
movsl
xchg
dec
jae
pop
pop
cltd
inc
pop
mov
and
pushf
aas
mov
ljmp
dec
int
loope
fisttpl
cmp
inc
imul
aas
aaa
and
pop
lret
or
mov
push
jae
hlt
cmp
cmc
cmp
shrb
cmp
add
xchg
mov
and
mov
subl
shl
cwtl
inc
ljmp
in
sbb
mov
inc
lods
nop
or
lea
xchg
sbb
dec
out
and
clc
sub
in
or
les
int
mov
in
out
mov
sti
jmp
jp
loopne
jno
jnp
adc
inc
jb
decl
mov
clc
out
in
lcall
enter
leave
push
add
push
dec
jno
inc
stc
scas
lahf
out
mov
push
sub
xchg
adc
enter
sbb
mov
in
int3
xchg
adc
dec
cmp
stc
mov
cmpsl
mov
or
lods
and
aad
inc
scas
jno
push
ja
in
xor
ret
aaa
daa
shlb
test
les
add
mov
jno
aam
jae
mov
jne
pop
sub
scas
ficompl
call
jns
loope
cmp
stc
loope
xlat
hlt
std
outsl
loop
cmp
enter
pop
mov
cli
xchg
cmp
fiaddl
inc
idiv
xor
lret
inc
fsubs
cli
je
jle
scas
mov
pop
test
repnz
push
sbb
inc
pop
fdivs
imull
icebp
push
sti
loop
or
xor
in
in
out
sbb
rorb
cli
push
movsb
stos
out
inc
or
cmpl
jecxz
popa
cmp
dec
dec
loop
mov
addb
sti
and
mov
push
pop
mov
jmp
test
lods
jne
outsb
xchg
pop
lahf
clc
push
rolb
pusha
cmc
mov
fisubs
fdivrp
cmp
xchg
push
mov
dec
stos
rolb
sbb
sbb
mov
insb
jl
mov
movsl
call
push
sti
sbb
mov
mov
pop
stc
dec
ja
stos
pushf
pop
pop
call
xor
stos
xchg
sti
push
ds
push
js
popf
pop
mov
xchg
dec
aaa
movsb
test
iret
mov
sub
les
xor
xchg
fcomi
inc
or
and
push
repz
enter
mov
mov
adc
data16
cmpsb
out
jo
inc
aad
int
hlt
inc
sahf
jmp
jle
pushf
fstpl
xor
or
pop
fnstsw
lcall
loope
mov
adc
push
push
loop
add
cmp
enter
loop
hlt
jno
rorb
ds
lret
xor
and
push
ficomps
add
out
sub
popa
add
xchg
fwait
loopne
mov
ljmp
mov
and
cmp
test
outsb
mov
lock
stos
pushf
adc
clc
scas
dec
ss
xor
dec
mov
aas
in
out
or
stos
test
shlb
popf
sar
test
mov
xor
mov
outsb
xchg
mov
cwtl
and
add
scas
inc
xor
rorl
in
jecxz
add
cmp
pop
xchg
push
je
adc
addl
sub
xchg
and
mov
ds
mov
ds
fsubrs
fwait
fwait
jp
sbb
js
xchg
sahf
loopne
add
test
add
and
pop
jge
mov
jmp
mov
cwtl
pop
scas
insb
or
add
xor
pusha
cmpsb
call
in
imul
fwait
xchg
sbb
ss
mov
scas
and
aaa
sbb
and
cmp
loope
sarb
fsubl
int
jbe
inc
cld
stos
ret
lods
loopne
pop
sarb
dec
mov
jmp
shll
pop
or
movsb
pop
xchg
adc
cmp
mov
lods
stos
mov
out
ja
mov
xor
xchg
ss
ja
fsubs
xor
cmpsb
push
movsl
mov
mov
sub
mov
in
mov
ss
hlt
imul
cmpsb
call
in
imul
adc
out
jo
mov
xor
xchg
cwtl
in
mov
lcall
mov
addl
push
sub
xchg
idivb
out
jno
mov
int
daa
or
insl
push
stos
imul
stc
xor
mov
addl
shlb
out
cwtl
cwtl
cmc
repnz
push
negl
cld
loop
loope
add
and
pushf
scas
fsub
sar
mov
rorl
call
mov
pop
adc
pop
add
pusha
pop
stos
adc
jnp
jno
repnz
lret
sub
sbb
test
call
mov
imul
mov
out
cwtl
cwtl
cmc
cltd
jecxz
adc
ret
cmp
push
js
xchg
call
xor
enter
fidivrl
call
int3
cld
pop
xchg
ret
sub
cli
mov
dec
inc
into
shll
in
xor
xor
sub
jp
dec
cwtl
xchg
test
cltd
scas
sbb
ret
fmull
jmp
dec
sar
mov
inc
add
mov
sbb
sti
sub
cmp
aad
jp
add
sarb
sbb
inc
push
cmpsb
fnsave
loopne
mov
vmread
mov
test
push
pop
sti
insb
clc
sub
or
push
out
rcl
movsb
in
clc
lret
fcmovne
pop
mov
dec
add
arpl
dec
add
jmp
xchg
jmp
mov
jecxz
cltd
pop
lret
inc
mov
cltd
aad
cmp
sbbb
sbb
mov
lahf
dec
enter
ficompl
cltd
xlat
test
test
push
out
movb
std
inc
jp
jne
adcl
insb
iret
movsl
stc
pop
std
and
lds
push
jae
scas
mov
push
in
repnz
push
adc
out
or
or
and
adc
jl
pop
mov
push
adc
xchg
sbb
arpl
pop
xchg
std
lods
xor
xor
pop
mov
dec
loope
pop
adc
adc
lock
fstpt
gs
out
pop
pop
in
inc
ja
fcmovne
push
stos
mov
lock
popa
outsb
xor
cwtl
push
xchg
adc
pop
mov
push
ret
not
roll
or
inc
in
imul
test
fwait
jecxz
pop
mov
loope
rolb
inc
sub
fwait
mov
jecxz
mov
aad
movsl
loope
push
fisubs
mov
flds
sbb
or
testl
rclb
xchg
mov
and
fadd
and
arpl
outsb
jno
adc
mov
std
in
ficomps
in
test
popl
xorl
or
imulb
cmpsb
sbb
pop
std
ffree
gs
fcomip
xor
sbb
lds
enter
sub
fwait
xchg
icebp
fsubrp
nop
fadd
xlat
popf
fs
adc
mul
out
jp
mov
lods
mov
stos
std
jecxz
in
mov
int3
pop
out
loopne
test
mov
xchg
ss
in
xor
mov
mov
sti
sub
xchg
xchg
mov
imul
cmp
sti
iret
push
and
add
movsb
sti
mov
fstp
inc
mov
aad
out
mov
dec
mov
sub
aas
mov
add
call
test
pop
sti
add
add
int3
movsb
lret
loop
or
rcr
xchg
aam
sub
ret
xchg
and
in
rorl
jb
jmp
cmpl
push
out
out
push
mov
mov
sbb
mov
jo
sub
mov
cmc
arpl
insl
fcmovnb
adc
and
in
clc
les
mov
adc
jmp
dec
lret
aam
testb
jmp
pop
or
dec
xchg
dec
push
lret
or
adc
or
xchg
stc
or
out
jo
mov
mov
ffree
pop
arpl
jmp
xchg
loopne
cmp
cmc
negl
push
js
out
xchg
addr16
test
dec
or
push
repz
cmpsl
mov
jbe
in
shr
xchg
xchg
sbb
jg
ds
outsl
mov
sbb
lods
jg
cmpsb
test
cmp
push
or
jmp
jge
jp
sar
push
mov
pop
xchg
data16
or
jnp
and
das
out
out
or
pusha
test
subb
ljmp
aaa
sahf
mov
ficoms
and
jo
and
push
or
jae
int3
nop
sub
sarl
insb
dec
xchg
out
adc
lret
add
and
enter
inc
aad
in
repz
test
or
jle
adc
jl
add
movsb
mov
cmp
popf
mov
int3
mov
mov
xchg
in
out
push
std
push
mov
decl
mov
sarl
mov
stos
daa
cmp
or
js
mov
xchg
jp
rorl
jl
ret
xor
add
inc
decl
pop
in
or
push
out
jns
rcll
jg
sbb
inc
cmpsb
or
push
mov
dec
jmp
jbe
lods
subl
repz
inc
call
cmp
pop
jge
fwait
aaa
movsl
xor
movsl
mov
mov
insl
scas
pop
and
not
jns
cmc
movsb
jecxz
clc
fildl
lds
dec
sub
sub
clc
inc
inc
sbb
xchg
sub
clc
mov
and
mov
mov
cmp
leave
aas
xchg
or
jne
pop
sti
jmp
hlt
xor
dec
out
mov
lds
sbb
dec
aas
xor
stos
mov
leave
sub
mov
js
dec
lcall
dec
xor
fdivrp
cmc
sub
inc
sbb
stc
pushf
mov
lcall
fdivp
in
push
outsb
roll
icebp
imul
fmul
inc
lret
fmull
rorb
xchg
mov
cmp
in
pop
mov
sbbl
pop
and
push
push
push
stos
outsl
out
cld
in
aas
mov
inc
aas
cmovnp
out
repz
out
icebp
lcall
add
xchg
sbbl
inc
cwtl
dec
inc
das
sarb
push
repnz
cwtl
jbe
inc
or
sahf
jo
and
fmulp
add
adc
int
gs
jmp
insl
aad
cs
or
xor
stc
shr
ljmp
enter
in
ds
add
hlt
ss
aas
xchg
in
scas
push
daa
sub
jge
dec
mov
test
adc
mov
fists
fnstenv
dec
leave
dec
in
xor
shl
cs
rcll
loopne
aam
xchg
cmp
dec
jno
push
pop
dec
fs
inc
dec
pop
cmp
mov
add
or
mov
add
negl
xor
leave
aaa
cs
add
adcl
jb
mov
adc
jo
add
dec
dec
ret
iret
and
push
notb
sbb
cmp
shr
mulb
pop
scas
ljmp
sub
cwtl
sbb
xor
lds
ror
pop
mov
pop
ja
or
flds
cwtl
in
or
inc
sub
stos
cmp
inc
xor
addr16
add
shlb
xorl
icebp
xlat
xchg
adc
lods
push
xor
and
testl
in
push
inc
and
test
push
and
mov
mov
pop
sahf
mov
loop
subl
das
aaa
ja
rorb
mov
or
mov
cltd
pushf
or
out
sub
mov
dec
and
movsl
fs
pushf
jns
int3
sbb
jae
add
jmp
cmp
scas
leave
in
rcrl
mov
mov
dec
jno
popa
adc
pop
push
inc
sbb
sti
mov
xchg
push
inc
pop
adc
jg
xor
ja
sbb
push
dec
shl
arpl
sbb
out
in
add
mov
push
adc
mov
mov
aad
ja
cmp
dec
xchg
sub
mov
lods
orl
mov
in
lock
mov
and
dec
inc
in
out
mov
and
rolb
push
movsb
ret
je
fbld
loopne
outsl
push
xor
sub
push
test
mov
scas
mov
xor
out
hlt
xlat
clc
sbb
cmp
fdivrs
repnz
jnp
rcr
pop
dec
xor
daa
jl
repz
dec
mov
sar
cld
imul
mov
out
filds
movsl
push
leave
xor
sub
push
mov
sbb
je
inc
ja
daa
lcall
xchg
mov
not
out
inc
fsts
xchg
cltd
mov
pop
loope
lock
cmc
cli
leave
inc
cmp
out
mov
loop
pop
mov
xchg
add
out
je
icebp
scas
xor
test
push
add
clc
call
test
ficoml
and
aaa
cmpsb
ljmp
addb
adc
push
inc
inc
jnp
jmp
xlat
sub
adc
adc
iret
dec
xor
xchg
and
lret
cwtl
inc
dec
push
pop
aam
add
mov
fnstcw
sti
leave
mov
xchg
jp
xchg
cmp
jecxz
movsb
mov
inc
loopne
cmp
inc
sbb
rclb
addr16
lret
xchg
dec
jle
sarl
cli
mov
iret
rclb
add
jge
xchg
xlat
pushf
lcall
lock
dec
test
inc
lcall
xlat
push
xchg
sbb
pop
mov
into
cli
ret
insb
xchg
cmc
adc
sub
jecxz
imul
pop
add
out
int
push
stos
xchg
dec
out
cmp
imul
mov
ja
sbb
out
popf
xor
xlat
lock
hlt
and
inc
ficoml
adc
cmp
add
cwtl
addr16
in
test
push
mov
dec
jmp
out
into
dec
add
adc
mov
jae
push
inc
ret
out
xchg
pop
hlt
jbe
mov
sub
sub
lock
jbe
lcall
es
dec
pop
mov
xor
xchg
mov
adc
xchg
pop
xchg
fwait
pop
in
push
jl
sbb
cmpsb
sub
out
shrl
xchg
jp
xchg
mov
xchg
jo
xchg
std
pop
mov
xlat
pusha
cmp
mov
cmp
shll
and
in
or
cwtl
mov
cmp
dec
add
dec
sahf
test
lods
sub
and
fsubl
cld
xchg
add
mov
add
stc
mov
sub
mov
cmpsb
icebp
sbb
cld
jmp
jns
mov
or
inc
cld
fldenv
cld
add
shlb
lock
mov
cmp
fwait
inc
sub
mov
xlat
or
xchg
into
clc
jle
mov
mov
push
loopne
jne
mov
sbb
pop
cmp
mov
cmp
and
and
icebp
jno
mov
xor
lock
jge
insb
and
lea
ret
push
jmp
das
out
nop
leave
jne
and
mov
cmp
inc
sbb
jne
push
xchg
insl
jns
sub
mov
xor
dec
xlat
fdivrl
mov
cmp
mov
lahf
push
xorw
das
xor
and
pop
push
loopne
jne
mov
adc
test
sub
ds
lock
jbe
movsb
jns
xor
xlat
loopne
jne
mov
or
xchg
lcall
mov
cmpsb
add
lods
sti
xchg
in
cmpsl
xchg
and
mov
pop
inc
lock
cmp
inc
push
les
jno
mov
sbb
pop
cmp
mov
add
xchg
add
shll
stc
pop
xlat
lock
or
mov
mov
jns
push
or
xlat
cmp
mov
cmp
xorl
inc
xor
cld
insl
lods
cmp
and
cld
mov
xlat
test
mov
xchg
pop
cmpsb
fwait
pop
in
push
jl
test
sbb
sbb
cld
int
iret
xchg
jmp
sbb
add
and
cmp
push
mov
hlt
or
xchg
movsl
push
movsb
xchg
fisttpll
or
xchg
mov
cmp
cmc
dec
fistl
mov
movsl
push
mov
insl
das
xor
rcrl
repz
jno
mov
and
or
and
lea
xchg
xlat
sub
cmp
cltd
jne
and
mov
sbb
sbb
jns
enter
rorb
add
cmp
pop
lods
xchg
push
mov
xlat
js
cmpl
nop
shll
loope
fcomip
popf
sbb
mov
cld
dec
lods
inc
xchg
popa
jns
add
xlat
xor
mov
cmp
mov
or
dec
mov
cmpsb
popa
sbb
adc
cmp
int3
mov
aam
insl
mov
cmp
test
int
push
adc
sbb
cld
sub
mov
lea
lds
movsl
inc
pop
jg
jns
push
je
test
sub
mov
xor
mov
cmpsb
icebp
sbb
cld
in
lods
stos
xchg
mov
mov
add
jbe
movsb
jns
or
xchg
adcl
lea
mov
fdivrs
cmpsl
cmp
mov
mov
insb
cmc
fisttpl
sbb
sbb
cld
aad
repz
int
iret
hlt
and
lea
rcll
inc
pop
inc
lock
push
or
xchg
mov
xor
push
fucomi
loope
fbld
mov
xchg
movsb
push
mov
inc
jmp
das
daa
nop
add
pop
out
lds
cld
mov
sbb
jle
pop
mov
push
mov
xlat
je
lea
cmp
cmc
jne
and
lea
adc
jmp
lods
inc
xchg
popa
jns
add
xlat
xor
dec
sbb
jle
sbbl
xor
stos
inc
inc
dec
ja
rcr
adc
jne
sti
or
mov
xchg
repnz
pop
mov
in
mov
mov
clc
fmuls
adcb
into
dec
std
ret
xor
nop
dec
adc
out
arpl
cltd
in
jp
testb
icebp
fbld
loopne
pop
es
out
inc
aam
mov
pop
mov
loopne
aaa
mov
cwtl
sti
mov
pop
push
jno
out
adc
lods
sbbb
in
loope
jb
mov
shlb
int3
popf
and
xchg
loop
mov
mov
imul
sti
jae
mov
decl
enter
std
jp
add
imul
add
xor
jb
dec
stos
out
jp
xchg
test
test
enter
mov
out
xchg
xor
outsb
mov
and
lahf
orl
jle
dec
and
sub
cmp
lret
jecxz
xchg
xchg
notl
xchg
pop
lcall
stos
adc
jmp
push
int3
test
and
aam
leave
lret
push
sti
mov
ret
and
lret
mov
clc
mov
jl
jecxz
sub
or
fmull
std
adc
stc
loopne
enter
cmpsb
andl
jg
cld
push
outsl
rcr
mov
mov
stc
and
shrl
mov
imul
lea
outsb
rorb
jnp
mov
mov
outsl
fcmovnbe
dec
scas
adc
mov
cmp
and
cmp
or
cld
mov
add
adc
xchg
xchg
push
fisttpl
or
js
jns
pop
cmc
call
mov
xchg
int3
in
xorl
out
sub
xor
xchg
push
sub
int3
jle
cwtl
sub
jbe
in
mov
sub
and
add
stos
xor
pop
jno
add
inc
ljmp
push
outsb
mov
xor
mov
or
je
loope
vpshlw
enter
lock
and
rclb
stos
or
push
iret
sti
test
xor
outsl
sub
out
pushf
mov
xchg
out
pop
ficomps
rcrb
push
and
cmp
jecxz
rolb
insb
xchg
and
std
adc
fcomi
int
mov
jns
clc
dec
inc
xor
ret
jp
loope
mov
aam
cli
jno
push
pop
je
adc
jno
movsb
lahf
adc
fisubs
add
xchg
sbb
movsl
cltd
xchg
xor
mov
lret
ss
sar
xor
mov
lahf
fdivr
jb
pusha
ds
je
scas
push
mov
and
hlt
xchg
cmp
add
ljmp
mov
fsubs
mov
scas
ss
les
mov
mov
jne
loopne
loopne
scas
mov
mov
int3
popa
sbb
and
and
nop
mov
out
mov
bound
pop
lea
fucom
and
int
adc
adc
ja
fs
scas
mov
das
cmp
shl
lods
cmpb
mov
jnp
fidivrl
mov
in
or
jecxz
insl
pop
in
xor
stc
dec
fs
add
cwtl
sahf
cli
jg
push
jo
and
fcoml
imul
mov
ljmp
xchg
leave
repnz
rcll
and
out
mov
cmp
push
fcoms
je
aad
test
cltd
adc
cmc
xchg
xlat
fcomp
mov
xchg
or
inc
dec
pushf
push
cltd
js
xchg
inc
les
out
or
xchg
xor
jne
addr16
popa
test
cmp
adc
xchg
or
and
mov
dec
outsb
jne
push
lea
test
or
mov
mov
int3
outsl
in
jno
je
sub
and
pop
xor
or
clc
xor
push
inc
stc
sub
mov
stc
and
xchg
imulb
mov
jle
cmp
lods
hlt
out
stos
mov
loop
adc
push
adc
test
imul
mov
iret
mov
cmpsl
xlat
in
scas
call
loope,pn
call
subl
inc
xchg
call
jmp
jecxz
push
test
dec
add
mov
mov
adc
mov
clc
sbb
aam
loopne
shl
adc
aas
lock
jo
decb
xor
out
add
jmp
and
lahf
out
jle
cltd
iret
cmp
pusha
sbb
sub
lahf
push
and
mov
lahf
rolb
cltd
sahf
aaa
sahf
sbb
pop
rorb
inc
cli
pop
ljmp
out
sub
lds
lods
je
fidivrs
cmc
cli
mov
fisttps
add
jae
push
leave
and
or
fistpl
scas
test
pop
test
jle
negb
clc
add
pop
mov
xchg
and
xchg
mov
sub
lret
stc
loop
or
out
test
popa
or
in
sahf
mov
mov
push
jle
aas
jecxz
xchg
cmp
outsl
mov
js
ljmp
out
mov
fldenv
mov
push
push
cmpsb
jbe
mov
rcll
mov
enter
int
cmp
pop
cs
jns
js
and
jecxz
lds
pop
sbb
lret
mov
dec
sub
fmull
jp
sbb
mov
cltd
stos
mov
dec
jb
lahf
les
lcall
pop
xchg
aad
int3
sbbb
ss
push
fnsave
xchg
cmp
and
or
cltd
mov
pusha
lea
xchg
ficoml
rcll
stc
xchg
xor
outsl
mov
cltd
or
jns
xchg
in
fidivrs
xchg
cmpsl
jecxz
aad
icebp
xchg
mov
int
or
cmp
cmpl
loope
lcall
add
pop
sub
out
push
cli
adc
int3
clc
ja
data16
out
popf
in
jne
xor
adc
lahf
mov
or
sbb
ja
pop
pop
fistps
cld
jb
and
les
jmp
jmp
adc
lahf
fsubrs
out
xor
ljmp
mov
mov
xlat
loope
cltd
jnp
ljmp
sub
test
out
movb
fnstsw
adc
test
in
pop
pop
adc
mov
hlt
jo
jae
add
fdiv
stc
stc
sbb
mov
out
mov
push
xchg
add
mov
xchg
push
imul
pop
out
out
std
cmp
fcompl
loop
int3
push
xchg
adc
test
ljmp
lods
xor
jo
hlt
sub
mov
stc
pop
xchg
scas
xchg
outsl
out
aas
loope
int
and
movsb
lds
jp
add
mov
test
int
lods
dec
push
les
or
mov
xlat
jge
jge
loope
and
mov
in
mov
cld
pop
xor
cli
cltd
stos
xchg
cmp
mov
aad
or
xlat
adc
mov
sbb
mov
jmp
cltd
xchg
cmpsl
cltd
stc
adc
sar
push
jno
adc
mov
ss
clc
mov
mov
add
sub
mov
lods
hlt
sbb
shlb
mov
je
sbb
jbe
cmp
mov
mov
idivb
adc
adc
xchg
nop
jo
pop
xor
xchg
es
hlt
lods
sbb
mov
mov
pop
jbe
push
and
dec
movb
popf
xchg
arpl
mov
or
mov
loope
pop
cmp
mov
scas
arpl
push
mov
mov
mov
or
scas
or
xchg
scas
mov
sbb
dec
jl
scas
inc
outsl
iret
inc
adc
repnz
rcll
je,pn
stos
sbb
std
adc
add
inc
outsl
andl
lods
dec
xor
mov
sub
lret
scas
adc
ljmp
push
mov
out
inc
loop
inc
inc
icebp
sub
mov
cmp
and
xchg
inc
mov
sbb
and
mov
stc
andl
in
jge
jecxz
in
mov
dec
aad
add
push
loope
outsb
mov
jmp
insl
jge
mov
and
jecxz
pop
in
sub
mov
dec
idiv
push
mov
or
data16
test
sbb
scas
insb
hlt
aas
lahf
loope
mov
mov
adcb
xor
insl
sarb
int3
push
xchg
fisubrs
repnz
jo
mov
xlat
clc
cmpsb
add
mov
sar
rep
xchg
sub
scas
jecxz
jg
and
add
sbb
int3
hlt
cmp
int
mov
sub
jmp
out
cmc
loope
jp
and
and
mov
ficomps
mov
push
jnp
out
stos
xchg
and
push
mov
scas
dec
cmp
jmp
xchg
cmp
lea
lods
shrl
mov
mov
jecxz
adc
jmp
test
mul
adc
das
lea
and
sbb
enter
aad
out
add
sbb
inc
ficoml
mov
ds
fisubrs
hlt
fadd
adc
movsl
out
mov
lcall
addl
cwtl
pop
mov
xchg
insb
fcomps
xchg
cmp
push
inc
lahf
mov
outsb
jmp
xor
adc
and
sbb
inc
mov
mov
stos
icebp
push
xchg
push
insl
lret
or
adc
mov
push
lea
sbb
mov
enter
mov
int3
dec
adc
xor
inc
jne
fldl
push
cmp
icebp
ja
xchg
or
sub
cmc
pop
aam
cmp
jg
xchg
fstpl
inc
xchg
inc
test
test
fidivl
repz
std
rcl
hlt
call
jge
movsb
out
int
cltd
loope
sbb
fstps
outsb
out
push
xchg
adc
fst
cmp
inc
loop
adc
pop
fisubrl
mov
aad
jns
inc
enter
adc
fdiv
mov
loop
pop
jg
jecxz
leave
out
outsb
scas
xchg
out
mov
std
fnclex
mov
adc
popf
ljmp
out
movsl
dec
movsb
repz
int3
scas
mov
mov
movsb
aam
shr
xlat
mov
jmp
pop
imul
nop
push
lret
dec
pop
lock
fwait
or
jno
sbb
lods
in
ljmp
repnz
add
notb
mov
mov
or
add
nop
gs
push
test
cmpsb
inc
mov
lcall
pop
imul
ljmp
fisttpll
insl
cmp
adc
out
ja
add
xor
mov
mov
jno
mov
in
hlt
out
mov
mov
mov
mov
sbb
mov
pop
and
add
imulb
out
mov
in
push
or
xor
inc
push
movsb
dec
clc
jg
enter
movsb
and
adc
arpl
xlat
xor
push
inc
mov
js
fnstsw
or
and
pavgb
pop
iret
loop
adc
cmc
leave
movsl
out
push
rorb
sub
adc
pop
stc
adc
call
pop
jno
repz
out
jge
inc
push
xchg
mov
pop
jp
xor
push
fistpl
sbb
scas
mov
mov
test
out
push
insb
mov
out
das
ret
dec
lahf
test
xchg
add
filds
jmp
mov
xchg
xlat
mov
out
mov
fwait
xchg
aad
ds
mov
sahf
cmp
xchg
jbe
sub
aam
sbb
loopne
sti
add
fs
dec
imul
leave
inc
icebp
shl
add
pushf
add
subl
mov
mov
dec
out
fucom
stc
ja
popaw
mull
xchg
lds
test
cltd
cli
sbb
adc
pop
outsl
adc
sub
pusha
adc
inc
out
mov
test
es
xchg
inc
mov
hlt
add
das
cmpsb
std
rol
int3
cltd
and
xchg
sti
xchg
movsb
imul
cmpsb
popf
sbb
xchg
mov
mov
inc
das
inc
nop
jne
dec
and
insl
push
xlat
mov
adc
add
cltd
push
sub
mov
fcmovne
fnstenv
cld
stc
lods
xlat
xchg
xchg
jns
pushf
and
lea
push
scas
push
mov
push
jns
push
add
mov
loope
or
cmp
or
mov
push
rorb
mov
cmpsb
xchg
sbb
xchg
mov
mov
cmp
xchg
shrl
mov
in
push
jl
stc
mov
sbb
popf
mov
cmp
mov
out
nop
lds
and
xchg
or
cwtl
mov
and
mov
push
jge
pop
inc
sbb
dec
sub
xchg
movsb
icebp
fisttpl
sbb
pusha
cmp
int3
mov
xchg
pop
push
lods
movsl
int
nop
std
jne
and
xchg
or
mov
mov
loope
jl
or
cmpsl
dec
loopne
mov
hlt
mov
push
lock
data16
jecxz
lret
push
lea
call
xchg
fidivrl
cltd
xchg
insl
and
mov
les
lods
jb
add
cltd
pop
cmp
out
lds
inc
jecxz
xor
and
xor
repnz
andb
in
test
jmp
aam
adc
jecxz
ss
es
xor
into
mov
repnz
shll
cmc
xchg
testl
jge
adc
sar
and
xchg
or
mov
mov
or
test
out
hlt
shl
jmp
test
cld
pop
pop
sub
loope
pop
or
adc
lods
popf
movsl
pop
fbld
stos
into
bound
mull
cmp
add
out
pop
mov
or
jo
pop
test
repnz
xchg
imul
push
hlt
xor
fcmovnb
and
xchg
adc
f2xm1
jbe
mov
xchg
jnp
inc
mov
scas
inc
push
js
adc
adcb
push
pop
lret
shlb
mov
mov
cmpsl
lods
test
cmp
jb
and
imul
pop
sbb
cmpsb
mov
push
jmp
mov
imul
scas
xor
pusha
xchg
xchg
clc
hlt
xorl
dec
shr
icebp
rcr
and
xchg
out
sarl
push
neg
mov
ljmp
pop
push
test
jb
or
imul
pop
sbb
and
test
mov
dec
mov
xchg
jo
jbe
mov
pop
mov
fisttpll
push
lahf
stc
or
outsb
xor
push
fs
repz
adcl
in
testb
roll
lahf
leave
mov
leave
jbe
mov
lea
pop
cltd
fcomps
inc
aas
popa
dec
lret
leave
rcrl
mov
outsl
pusha
lods
in
pminsw
jnp
pop
rcr
xor
fisubs
nop
inc
into
adc
test
js
dec
xchg
mov
repz
pop
out
scas
orb
cltd
ret
cwtl
les
xor
lret
imul
mov
data16
or
or
xorl
dec
ror
pop
in
xchg
jmp
pushf
out
negb
push
int3
add
xchg
adc
loope
xchg
add
js
or
dec
lahf
aaa
popf
cmc
sti
and
inc
loop
xchg
sbb
out
cmp
or
jmp
js
out
jecxz
mov
push
sbb
nop
orb
dec
sbb
xchg
add
sbb
ja
fwait
leave
roll
cmc
sbb
push
inc
inc
jo
call
adc
add
fs
leave
outsl
sub
cmpsb
push
inc
dec
xchg
push
inc
xor
xchg
stos
mov
sbb
xchg
in
jecxz
add
adc
inc
mov
and
add
je
int3
dec
xor
or
mov
inc
mov
ds
push
push
call
inc
or
stos
loope
xchg
pop
mull
adc
movsb
pop
lcall
mov
js
xor
jmp
fimull
sbb
sbb
and
lcall
inc
or
scas
outsb
aas
and
or
xchg
jmp
fistps
push
and
rol
mov
imul
jb
jae
in
jb
scas
or
cmc
aad
cld
jno
pushf
loopne
add
fcomps
pop
clc
stc
add
loope
testl
fists
sahf
jno
pop
stos
scas
xor
xlat
push
stos
rcrl
imul
jns
sub
cltd
shlb
add
call
adc
sbb
aaa
mov
pop
mov
movq
or
cmpsb
add
out
cmc
cld
in
arpl
aad
cwtl
scas
enter
and
sub
mov
fs
mov
sbb
jno
xchg
mov
and
insb
or
in
adc
ljmp
sti
xchg
lock
push
incl
push
loope
sub
sbb
jecxz
repnz
insl
test
hlt
or
cmp
subl
jmp
flds
push
mov
repnz
push
bound
das
test
xchg
out
lock
push
jae
dec
or
add
mov
stos
call
test
or
sbb
pop
lcall
mov
leave
cmc
je
add
dec
xor
lds
mov
in
pop
test
and
cltd
je
xchg
popf
xlat
add
repnz
sbb
push
in
pop
icebp
rcl
rcll
inc
arpl
mov
test
cmp
mov
xchg
pop
lret
lret
push
mov
loop
jae
pop
negl
mov
pop
pop
xchg
negb
jge
xchg
push
or
or
outsl
inc
jle
repz
xchg
stos
adc
gs
std
fildll
loopne
xorb
add
pop
mov
stos
push
xchg
adc
test
mov
arpl
adc
sub
pop
adc
std
xchg
jno
popf
adc
mov
aaa
xchg
push
sbb
or
fs
xchg
adc
mov
andl
mov
lret
add
sbb
test
pusha
outsl
push
dec
add
push
dec
or
jge
lcall
fs
ret
std
push
in
sub
add
pushf
aad
sbb
sti
popf
adc
stc
inc
test
shr
inc
testb
jo
ja
jg
cwtl
test
and
daa
pop
xchg
adc
cmpsb
and
vrcpps
les
push
adc
sbb
incb
fnstenv
in
fistpl
or
movsl
push
aad
pop
add
pop
push
popa
xchg
adc
jmp
movsb
aaa
out
jns
or
test
jecxz
out
jno
rcll
shl
fldt
mov
shlb
push
icebp
and
inc
cld
fdivrs
fdivs
inc
push
push
enter
xchg
cmp
or
rcr
adc
ret
fcmovnu
int
mov
mov
adc
sbb
aad
or
jmp
inc
outsb
pop
pop
xor
ret
stos
les
call
sbb
mov
ljmp
inc
push
sahf
shrb
je
loope
add
lods
jo
sub
and
clc
loope
add
or
fwait
pop
xchg
dec
outsb
std
ss
dec
xchg
aad
ljmp
pop
lret
aas
push
negl
stc
fwait
mov
orb
xor
decl
dec
adcb
push
js
push
aad
stos
testl
add
mov
mov
sub
mulb
ret
xchg
pop
xchg
and
insl
mov
cltd
negl
add
pop
fcomip
mov
xchg
idiv
sahf
add
jp
jnp
xlat
fucomip
or
rcrb
repnz
stc
push
sub
rcll
subb
int3
popa
push
pop
xor
push
jp
sbb
rclb
call
call
sbb
stos
mov
or
push
inc
sbb
adc
in
dec
imul
sub
pop
fst
hlt
pop
and
jns
sbb
inc
pop
push
dec
xor
mov
cmp
dec
and
daa
adc
adc
lahf
cmp
push
pop
inc
das
inc
and
or
ja
sbb
mov
arpl
pusha
and
and
scas
outsb
ret
jo
push
hlt
jno
mov
call
sub
mov
and
inc
sub
mov
clc
xor
jno
sti
xor
subl
lds
lahf
or
out
cltd
xor
and
bound
cmp
scas
mov
cli
subb
enter
negb
pop
fisubrl
or
insl
es
mov
lret
mov
jae
xchg
setne
out
lock
shlb
aaa
jo
dec
imul
inc
xor
jmp
mov
into
ret
mov
out
xchg
daa
dec
pop
sub
sbb
je
jb
dec
in
int3
ljmp
call
stos
inc
hlt
test
daa
inc
mov
inc
call
es
mov
iret
add
scas
and
dec
xchg
rol
push
fninit
dec
xchg
xchg
aam
cmpsl
fcmovbe
aas
cmpb
fwait
cltd
sti
pop
int3
mov
jle
cmp
mov
xchg
mov
sbb
mov
mov
add
cli
mov
fxam
add
fs
test
xor
pop
or
jae
xor
push
or
jns
sub
testl
cmc
mov
push
cmp
not
test
xlat
and
ret
add
xchg
rorl
loope
jle
test
sbb
cmp
adc
ret
faddp
cmpl
cli
add
xor
cmp
int3
push
push
pusha
cmpsl
xchg
mov
loope
out
cwtl
or
cmp
push
xor
leave
add
xchg
ffreep
pop
les
cmc
inc
mov
aaa
mov
std
xor
ds
xlat
or
mov
dec
push
xchg
outsl
mov
pushf
inc
xorl
fwait
adc
ss
lods
or
adc
rol
push
sub
icebp
and
rorl
push
jae
fsubl
adc
popf
out
fs
push
jae
loopne
mov
popa
mov
aaa
mov
cmp
sahf
mov
cmpsb
insl
scas
dec
fisubrl
pop
cmp
out
mov
fstp
aas
push
jg
sbbl
adc
sub
fnclex
push
mov
inc
cmp
xchg
bound
jmp
mov
subb
or
and
xchg
hlt
xchg
outsl
cmc
cli
push
push
sub
and
mov
je
jne
inc
outsl
and
dec
push
xchg
jae
inc
jo
filds
das
imul
pusha
mov
hlt
mov
movsb
mov
jg
dec
jbe
iret
jl
xor
xchg
std
xchg
add
lret
push
and
int3
decl
in
jge
lret
sar
push
fwait
test
push
jnp
scas
push
test
push
shll
cmp
fwait
pushf
fadds
xchg
loope
jns
ds
or
idivb
data16
hlt
scas
add
fucomp
cmc
add
add
pop
sbb
jno
das
xchg
dec
pop
jle
andl
inc
in
shlb
aaa
mov
jge
and
sbb
pusha
mov
dec
add
pop
stc
or
aaa
xor
mov
pop
ljmp
push
repz
insb
shr
adcb
call
rep
popf
add
sahf
flds
daa
adc
out
call
xor
cltd
addr16
mov
jnp
sub
dec
popa
pop
add
jns
fs
stc
movsb
adc
push
test
jo
in
std
adc
data16
sbb
jbe
rcrl
ret
movsl
out
scas
sbb
xchg
loop
jbe
dec
jg
das
cwtl
and
push
clc
mov
aam
lods
stos
aad
sarb
adcb
mov
or
jnp
and
popf
repnz
pop
push
movsl
push
cmp
pop
enter
andl
fldcw
in
or
loope
sarl
test
pop
lret
cmc
movsb
jmp
nop
pop
push
test
inc
cmp
xor
rorb
xchg
sub
push
insb
les
lret
mov
ficomps
movsl
pop
out
rcll
or
add
addr16
jo
lds
call
shrb
sub
jge
xchg
inc
rorl
jns
pop
mov
mov
dec
sar
push
xor
test
jecxz
and
mov
jns
mov
es
data16
bound
ss
jg
sub
loope
icebp
dec
adc
stos
cmp
int3
pusha
jp
stos
les
lret
std
shrl
fbld
or
loopne
xchg
ret
test
pop
xor
xor
mov
stc
dec
add
mulb
outsb
sub
lods
lods
cmp
mov
movsl
xchg
cmpsl
mov
cmpb
push
mov
test
rcrb
mov
daa
sub
aad
push
push
movsb
mov
sub
out
jge
mov
fs
dec
sbb
sub
dec
dec
fs
mov
push
cmc
and
ret
cltd
mov
out
pop
xor
leave
sbb
fcomps
xor
cwtl
xchg
mov
adc
pop
loope
enter
xor
pop
rcrb
in
dec
cmp
ret
in
fldenv
push
imulb
out
scas
ss
mov
rolb
sarl
int3
xchg
into
mov
jne
loopne
sbb
push
stos
outsb
and
pushl
out
lret
mov
sahf
pop
sub
loope
xchg
push
mov
pop
pop
ret
xlat
sub
test
sub
or
adc
push
stos
push
sbb
mov
loopne
mov
dec
dec
adc
push
in
or
mov
insb
xor
stos
sub
adcl
push
push
rol
push
cli
rolb
pop
xchg
sub
fldt
dec
push
dec
ret
movsb
test
xor
push
cli
les
jp
xor
repz
sbb
insb
mov
and
incb
add
xchg
mov
add
mov
pusha
sbb
add
push
pop
sbbl
mov
push
sub
cmp
jbe
scas
sbb
addr16
mov
adc
mov
out
fs
fdivrs
cmp
mov
mov
in
xchg
add
mov
insl
jmp
les
sar
mov
loope
xchg
pop
shlb
outsw
aad
or
lock
call
inc
cmpsb
or
mov
nop
subl
jnp
lock
jge
leave
imul
out
add
adc
inc
scas
inc
ret
sub
stc
rcpps
adc
mov
lcall
in
pop
es
rcrl
mov
shl
xor
mov
dec
mov
fldcw
sub
pop
cmpsl
or
mov
js
cmc
test
jbe
lea
or
ljmp
xor
stos
test
int
lcall
jle
or
xor
lock
mov
xor
inc
push
rorb
lret
cmpsb
in
mov
xchg
mov
mov
mov
imul
pop
push
lock
push
cmp
mov
cmpsb
icebp
sbb
cld
in
fists
and
lea
and
pop
ja
jno
push
js
stc
mov
adc
mov
cmpsb
fstpl
sti
cld
icebp
lods
iret
xchg
jmp
sbb
mov
sar
pop
rcll
push
mov
icebp
push
jo
test
sbb
mov
cmpsb
and
lods
repz
icebp
jns
lock
lea
cmp
out
cmp
sub
cmc
xchg
push
cmp
mov
cmp
xor
and
aad
push
sarb
jno
hlt
popl
andl
sub
movsb
aad
push
in
fs
cmpsb
adc
lods
add
and
les
imul
nop
mov
nop
mov
pop
mov
cmpsb
dec
sbb
jge
push
xchg
insl
jns
add
cltd
lea
mov
mov
cmp
loope
fbld
mov
push
mov
inc
sub
push
movsb
jmp
push
or
fistpl
sbb
cld
fldcw
loopne
jno
hlt
mov
xlat
cwtl
cmp
mov
cmp
cs
pop
mov
cmc
push
jo
test
add
mov
cmpsb
cmp
lods
out
fnstsw
aam
gs
in
jne
hlt
cmp
mov
test
sub
cmpsb
movsl
int
push
loope
pusha
gs
cmpsb
adc
lods
cmp
and
enter
fdivrl
xlat
cmp
xorl
lock
shl
inc
lods
jmp
or
jl
orl
sub
mov
cmpsb
rcrl
jmp
shrl
and
lea
cmp
mov
movsb
pop
in
xchg
pop
mov
xlat
insb
cmp
mov
cmp
xor
and
aad
push
fdivrl
insl
push
cld
jge
addb
xchg
les
pop
jbe
in
fisubl
jmp
das
pop
nop
cmp
pop
out
lock
in
mov
add
orb
xchg
mov
dec
out
mov
leave
xor
cld
lods
pop
xchg
adc
mov
xlat
xor
inc
mov
cmp
cltd
jne
and
mov
loopne
xchg
gs
and
imul
push
xor
mov
cmpsb
cmc
sbb
cld
in
fists
and
lea
xor
push
pop
aad
push
in
push
or
fistl
xor
sbb
cld
shrl
and
hlt
mov
mov
cmp
ss
inc
mov
jmp
fisttpl
mov
cmpsb
xor
lods
out
fnstsw
aam
imul
nop
jmp
sub
mov
mov
xlat
insb
cmp
mov
cmp
xor
pop
jecxz
fsts
sarb
jno
lock
fildl
mov
mov
mov
xor
xchg
movsb
push
adc
das
cld
or
xor
dec
fmuls
insl
mov
cmp
lea
and
dec
cmp
inc
lods
jnp
jne
dec
jo
test
sub
mov
cmp
icebp
jne
and
cltd
adc
nop
mov
cmp
dec
stos
sub
xchg
pop
jns
push
and
lea
xlat
je
test
cmp
and
pop
div
int
push
cld
mov
adc
fstpt
sub
lea
fst
insb
cmp
mov
cmp
xor
pop
pop
lock
push
fdivrl
jno
cld
jge
mov
sbb
dec
in
cmp
inc
das
jg
jne
push
and
sbb
movsl
mov
xor
dec
fcmovnb
lds
cld
in
fists
and
lea
sbb
loope
pusha
mov
test
add
xchg
fistl
sbb
cld
aad
repz
leave
jns
loopne
jne
mov
and
pop
xchg
push
ds
inc
in
push
insb
icebp
mov
cmpsb
add
aas
cld
cmp
fsubs
xlat
hlt
cmp
mov
cmp
push
aas
fwait
inc
in
push
pop
loope
pusha
gs
cmpsb
sbb
aaa
cld
or
jns
int3
and
rorb
jno
lock
das
xchg
push
cmp
and
jmp
das
and
or
pop
lock
mov
loopne
jne
hlt
cltd
mov
cmpsb
lea
xchg
mov
jge
cmp
jns
push
and
sbb
mov
enter
fmul
mov
cmpsb
stc
sbb
cld
jmp
jns
cwtl
and
lea
push
movb
mov
xlat
insb
cmp
mov
cmp
xor
pop
pop
lock
push
fdivrl
jne
hlt
popl
mov
push
ret
jle
movsb
fisttpll
pusha
cmc
fisttpl
sbb
cld
and
jns
aam
gs
in
jns
mov
xchg
mov
pop
xchg
push
jmp
das
and
or
add
cmp
mov
aam
gs
in
fbld
test
mov
lds
inc
das
jg
jne
dec
and
adc
mov
push
xor
mov
cmpsb
loope
xchg
lods
stos
xchg
cmpl
mov
push
pop
outsl
lock
loope
pusha
mov
orl
sbb
mov
cmpsb
and
sbb
sub
jns
call
mov
xlat
cmpb
nop
jmp
das
fwait
xchg
pop
fwait
pop
in
push
insb
in
fstpt
das
cmpsb
add
lods
pop
xchg
aad
out
fsubl
loopne
jne
hlt
cmp
mov
cmp
mov
les
push
jne
push
cmpsb
imul
aaa
xchg
or
mov
xlat
sarb
mov
cmp
test
and
mov
sub
push
call
cmc
fisttpl
sbb
cld
and
fsubs
xlat
lock
mov
cmp
mov
rcr
push
jno
push
cmpsb
imul
aaa
xchg
xor
xor
dec
fmull
jne
mov
or
nop
mov
leave
repz
fs
cmp
gs
and
add
mov
xor
inc
push
rorb
iret
cmpsb
in
mov
xchg
mov
mov
pop
xor
jg
jns
push
je
test
adc
movsl
sbb
cld
leave
lods
xchg
std
jns
hlt
and
lea
cmp
mov
inc
pop
aam
and
jmp
das
aaa
nop
or
pop
pop
lock
pop
mov
lock
cmpsb
movsl
adc
and
imul
cmp
dec
mov
cmp
in
jne
and
mov
push
mov
pop
cmp
dec
lods
inc
xchg
jge
push
je
test
adc
movsl
mov
cmp
int
and
in
add
mov
movsb
xor
mov
push
outsb
inc
movsb
aad
push
mov
cmc
push
je
mov
mov
xchg
fiaddl
imul
dec
pop
push
mov
or
jmp
jae
sbb
inc
sub
add
mov
mov
repz
xlat
cli
jle
adc
fisttpl
call
inc
sbb
lods
dec
mov
outsb
sahf
outsl
sbb
sbb
ret
es
rcrb
jmp
add
fidivrs
dec
notb
dec
repnz
sub
or
xor
leave
clc
std
inc
adc
mov
pop
enter
mov
jmp
imul
pop
sub
movsb
rorl
in
push
clc
in
xor
jg
mov
push
push
mov
imul
pushf
push
jns
pop
push
add
mov
shlb
rcrl
or
movsl
push
fsubr
loop
sub
faddp
cmc
fistps
sbb
dec
ja
aam
cmp
enter
cmp
icebp
std
addb
mov
mov
cmp
sub
rcrl
dec
jo
or
call
in
in
sub
loope
sub
sub
sbb
mov
fwait
adc
test
sti
std
mov
and
inc
sbb
into
pop
dec
pop
test
cmp
mov
jp
lret
and
repnz
inc
jle
push
mov
push
add
adc
movsb
in
js
xchg
lea
pop
jmp
inc
movsb
adc
leave
ja
push
cld
fstpl
sbb
jle
mov
je
and
loope
dec
test
das
dec
sti
das
je
push
movsl
lret
idivb
push
call
xchg
mov
shl
xchg
mov
pop
out
testl
lret
into
shrb
mov
rcll
push
filds
sub
sti
ror
xor
add
in
hlt
scas
pop
loope
xchg
mov
sub
shl
inc
test
movsb
and
sub
int
ror
test
mov
popa
xor
xchg
and
inc
hlt
pop
movsl
inc
ret
push
cmp
rol
dec
addr16
mov
sarb
int
enter
and
cmpsb
lret
ja
fldl
out
xor
and
or
sub
sbb
pextrw
xchg
mov
push
or
orl
sbb
jbe
ret
jno
stc
lds
cmpb
push
divl
mov
rcrb
cmp
sub
cwtl
sub
cs
xor
dec
jne
ja
sbb
stos
sub
test
filds
mov
xchg
mov
xchg
lock
jno
mov
adc
movsl
dec
dec
or
pop
xchg
sub
shlw
push
xchg
xchg
imul
out
mov
inc
pop
pop
pop
cmp
xor
lret
dec
lret
clc
negb
jo
cmp
mov
notl
or
push
out
fwait
lea
jmp
or
icebp
nop
mov
mov
inc
dec
js
jl
push
pushf
xchg
rcrb
sbb
sarb
adcb
mov
lock
outsl
xchg
mov
jnp
inc
outsb
inc
push
movsl
loopne
negb
or
sub
mov
pusha
dec
xlat
mov
vsubsd
and
lret
xor
mov
sub
aam
xchg
xor
sbb
mov
mov
fists
out
mov
mov
jns
ret
mov
sbb
push
leave
sub
shlb
sub
pop
cmc
nop
mov
lods
push
inc
mov
cmp
mov
cltd
or
in
cli
jno
jbe
inc
xchg
fiadds
test
movsb
ja
mov
cld
sub
popa
pop
jle
cwtl
imul
xchg
movsl
adc
sarb
in
fldcw
sbb
fisttps
lret
rorl
mov
or
and
sbb
xchg
and
or
cltd
hlt
out
mov
movsl
dec
cmp
aam
rcr
push
sub
mov
aad
js
hlt
jge
ficomps
int3
pusha
cmpsl
and
inc
call
pop
or
or
jg
aad
leave
jns
adc
sub
pop
sub
xlat
fcomps
leave
add
fsubrl
std
addr16
mov
push
add
mov
rorl
jb
mov
aas
jnp
mov
cli
pop
mov
fnstsw
jae
adc
fcoml
movsl
cmp
or
pop
push
lret
sub
lock
stos
xchg
fcmovnb
inc
pop
push
sub
call
cmp
mov
push
xchg
mov
imul
les
sbb
xlat
adc
jne
push
and
ret
orb
cld
movsl
pop
dec
cmc
movsl
sbb
loopne
cltd
inc
adc
fldcw
dec
cs
sti
mov
ja
lods
lret
xor
psubusb
xor
mov
mov
scas
xchg
sbb
jbe
dec
adc
js
add
fisubl
xor
cmp
and
leave
sub
scas
call
std
pushf
xchg
les
xchg
mov
mov
pusha
ljmp
addr16
rcr
dec
ljmp
push
mov
cmp
je
push
sub
push
mov
push
ljmp
inc
mov
mov
jp
or
lahf
mov
sbb
subl
add
sub
jbe
cmp
cmp
dec
scas
cmc
jecxz
mov
or
cwtl
das
shll
ljmp
and
imul
mov
adc
mov
loope
jns
stos
xlat
sbb
lods
movsl
adc
push
or
mov
adc
shlb
xchg
and
jge
mov
fs
fdivrl
cltd
dec
es
jno
or
xbegin
cltd
xchg
jmp
fisttps
into
enter
sbb
fs
aaa
xchg
xchg
sbb
stc
fs
div
lods
in
inc
sbb
fsubrp
jns
or
xchg
jb
xor
ss
imul
fldcw
sbb
add
int
fwait
inc
addr16
fstpt
and
cmp
shrb
mov
fwait
mov
sub
loop
fidivs
sub
loopne
mov
jecxz
test
andl
jbe
jmp
stos
les
sub
movsb
popf
fucomip
push
mov
dec
mov
shl
das
lahf
jl
jb
ret
and
mov
dec
test
es
mov
jp
dec
insl
xchg
les
in
dec
mov
aad
sub
xchg
xchg
jns
adc
add
int
aad
in
into
sti
insl
aam
mov
pop
or
loope
pop
in
call
das
in
insb
aad
jl
jo
pop
cli
and
arpl
aad
cltd
pop
or
lods
cmp
mov
idivb
pop
aad
pusha
movsb
mov
mov
imul
pop
jmp
inc
movsb
aad
pop
or
iret
push
leave
mov
or
daa
add
aad
push
sbb
popf
int
add
lock
jle
cmpsb
mul
mov
sub
mov
cmp
sub
aad
movsb
leave
jne
vorps
loopne
stc
pop
jmp
xchg
lahf
in
popf
jmp
aad
cmp
sub
sti
jns
xchg
cld
pusha
out
clc
mov
xchg
int
ret
sbb
jae
mov
jns
push
out
adc
in
daa
pop
repz
cmp
leave
push
insb
lret
aad
mov
scas
movsl
sbb
sti
repz
add
fnstsw
movsl
insl
xor
and
leave
aad
enter
sub
pushf
fnstcw
insl
sar
andl
jge
add
mov
shl
adc
lds
cs
xor
xchg
xor
jae
stos
lret
sarl
jo
ret
jl
int
xor
sar
push
pop
das
inc
movsb
popa
jl
hlt
stc
outsb
std
mov
sti
movsb
lret
xlat
push
insl
xchg
fdivr
pop
scas
repnz
mov
pushf
aas
pop
insl
nop
aaa
and
mov
mov
ljmp
std
pop
xchg
in
int3
out
ret
cmpsl
mov
movsb
xorb
adc
stos
movsl
add
icebp
xchg
hlt
push
cmp
adc
pop
push
cmp
subl
push
sbb
sbb
sub
xchg
sub
hlt
aas
mov
fidivs
fdivrl
mov
int
cli
sbb
add
adc
aam
rcrb
push
popa
sub
push
sub
daa
ret
jle
xchg
iret
insb
cmc
movsl
aas
xor
cld
aam
mov
mov
mov
cmc
pop
xor
mov
loope
or
loope
rcrl
add
les
mov
loop
imul
shrl
xchg
clc
out
push
int
push
jmp
ss
rcll
lds
mov
mov
fisubrl
outsl
mov
push
call
movsl
pop
dec
cmp
push
aaa
mov
xor
mov
mov
sub
or
mov
push
mov
inc
or
mov
enter
mov
mov
shlb
repnz
adc
repz
sahf
xchg
fxch
loope
ss
xor
outsb
xchg
test
mov
nop
xchg
loope
inc
dec
es
scas
xchg
pop
movsl
pop
repnz
sub
roll
decl
xchg
call
push
jg
enter
movsl
pop
push
bound
dec
cmp
push
mov
sbb
and
loop
sti
mov
pop
inc
rorb
je
in
xchg
daa
dec
sub
or
add
shlb
xchg
pop
fsubrs
xor
xlat
push
aas
push
and
je
int3
sbb
lcall
xor
std
push
movsl
imul
dec
mov
xor
test
lcall
repz
inc
ja
xor
in
mov
mov
mov
or
add
subl
or
in
jnp
jmp
loopne
mov
inc
and
cmp
xor
sahf
add
loopne
mov
test
into
sti
test
inc
dec
mov
les
enter
push
mov
add
adc
lret
xor
push
call
and
cmpsl
cmpsl
cmp
sub
lods
shlb
push
repnz
cmpsl
and
or
add
out
mov
pop
dec
movsl
push
mov
adc
mov
loopne
mov
add
out
test
iret
dec
adc
xchg
mov
iret
sbb
ret
xchg
pushf
lret
and
out
sbb
lods
fwait
pop
icebp
es
aaa
xor
cs
clc
mov
and
nop
sub
pop
sub
xchg
xor
fcoml
adc
int3
xchg
adcl
jmp
out
call
sbb
pop
jo
sub
notl
pop
xchg
int3
inc
xchg
inc
push
mov
ret
sbb
xchg
test
into
loope
pop
adc
test
mov
sbb
fnstcw
inc
mov
loopne
outsb
shrb
cmpsl
cli
ret
sbb
mov
mov
std
push
add
clc
adc
mov
xchg
jb
filds
dec
lret
test
loop
fwait
xchg
aas
in
imul
icebp
rcr
xor
popa
enter
jg
rcrb
les
cs
mov
sub
or
imul
inc
xchg
adc
sub
xor
pop
fsts
les
sub
mov
int
test
repnz
push
and
fnstcw
jle
movsl
lods
stos
xlat
cltd
xchg
ss
pop
sbb
push
adc
jae
lret
clc
adc
mull
mov
sbb
movsb
sti
dec
sbb
xchg
jbe
mov
xor
cmp
push
lahf
cmp
dec
mov
mov
adc
lods
pop
add
cltd
mov
pusha
sti
movsb
aad
sub
pop
jmp
mov
js
mov
ret
pop
loope
rcll
pop
xchg
js
leave
mov
ficoml
fwait
stos
xor
sahf
popf
push
lods
jge
scas
mov
or
sbb
and
push
mov
mov
ret
sbb
and
mov
imul
ja
iret
pop
adc
jae
popf
ljmp
dec
pop
fisubl
mov
testl
cmp
xchg
repz
add
inc
cli
mov
cmpsl
push
dec
xor
push
cltd
sahf
icebp
jp
jg
and
dec
inc
xchg
in
loope
call
xchg
lahf
lret
pop
xchg
mov
mov
xor
xchg
fisubs
push
subl
jo
xchg
aaa
and
lea
push
ja
fcompl
movsb
mov
imul
stos
movsb
fs
dec
mov
cmc
push
inc
movsl
lea
jno
sub
xchg
imul
pop
push
icebp
pop
les
ret
dec
movsb
lret
daa
mov
push
into
mov
shrb
int
sub
inc
push
setno
mov
in
cltd
repnz
push
movsl
inc
jae
mov
cli
jge
jecxz
push
popf
pop
pop
inc
out
xor
xchg
ljmp
movsl
push
mov
mov
xchg
push
sbb
pop
and
stc
in
movsb
out
push
in
movsl
push
int
andb
inc
scas
popa
jecxz
data16
inc
cmp
call
in
movsb
hlt
xchg
dec
mov
jb
in
sbb
das
cmp
push
and
filds
adc
cmp
movsb
jp
ja
ja
sbb
mov
xchg
dec
loope
sub
jbe
loopne
dec
mov
mov
je
or
push
sbb
xlat
push
xchg
adc
push
es
fmul
inc
clc
push
lahf
jo
jns
push
movsl
ret
movsl
subb
sbb
push
movsl
sbb
push
add
jge
shll
loop
pop
mov
fwait
icebp
fistpl
in
cwtl
push
cltd
mov
leave
or
movsb
cltd
push
out
xor
jge
cmp
dec
rcl
ja
ret
pop
ret
xchg
sub
dec
mov
repz
add
xchg
pushf
mov
xchg
xchg
pop
cmpsl
outsb
xor
sub
or
and
adc
ljmp
loope,pn
test
fimull
repnz
xchg
arpl
scas
mov
inc
ljmp
outsb
mov
jo
insb
mov
clc
adc
dec
divb
pop
cmpsb
shll
dec
loop
xchg
xchg
in
enter
xchg
mov
pop
mov
test
add
fcoms
or
lret
scas
pop
xlat
fwait
xchg
and
in
movsl
enter
lret
insl
xchg
add
cltd
lret
xchg
outsb
test
dec
add
arpl
testl
imul
out
sub
addl
sarl
movl
addr16
sti
xor
pop
jb
ss
push
xor
imull
jmp
dec
xchg
inc
out
in
clc
int3
mov
adc
repz
jbe
and
movsb
inc
fadds
pop
mov
fcomp
xor
out
xor
cld
dec
push
add
arpl
icebp
push
std
in
jbe
pop
mov
out
xchg
test
sub
cmp
cld
mov
inc
dec
push
jmp
inc
outsb
xchg
out
dec
pop
fidivrl
sub
out
test
aas
cltd
sub
test
push
cmpsb
pop
test
add
dec
or
adc
lock
movsl
lock
sbb
lret
add
jp
add
aad
add
fadds
mov
ljmp
in
sbb
cmpsl
pushw
movsl
lret
sub
xchg
sub
adc
or
mov
test
in
in
push
stc
loop
adc
enter
cmc
mov
pop
les
cmpsb
loopne
mov
lods
into
fnstenv
jns
pop
les
scas
lea
sbb
mov
icebp
mov
jbe
jge
mov
das
pop
icebp
into
into
lods
inc
dec
mov
cmp
adc
xor
bound
or
push
xor
test
mov
mov
mov
enter
sbb
shrb
imul
mov
inc
push
lods
add
or
add
xor
mov
sub
pop
push
jecxz,pn
sahf
movsl
call
icebp
push
push
inc
dec
movsb
mov
loopne
xchg
subb
xor
aaa
mov
jns
xchg
cmp
stos
insb
in
shlb
xor
sub
and
xor
arpl
pop
jns
fucomip
mov
je
sub
pop
push
mov
ljmp
sarb
shlb
mov
pop
in
mov
fstp
jecxz
stos
out
pop
pop
movsb
inc
push
xchg
cs
adc
movsl
mov
icebp
mov
push
jmp
addr16
loopne
dec
cmp
and
sahf
movsl
xchg
inc
fmul
xchg
out
jl
lea
out
mov
sub
fistpl
jle
movsl
push
sbb
pmaxsw
movsl
cmpsl
movsb
sti
inc
push
les
xchg
xchg
rorl
shlb
push
mov
loopne
sbb
lds
sbb
push
xor
not
adc
sbb
clc
add
xchg
xor
loop
cld
inc
mov
xor
in
int3
xor
in
shrl
jge
xchg
gs
add
movsl
sbb
mov
test
sub
call
adc
mov
push
data16
xchg
xchg
mov
and
movsw
ja
les
xor
push
pop
je
shll
out
imul
mov
mov
repnz
and
movsl
ss
ret
arpl
fnstsw
imul
lea
xor
clc
xchg
xchg
daa
jle
repz
and
stc
popa
mov
sub
mov
cmpb
cmp
shll
or
stc
mov
pushf
mov
push
adc
fstps
xchg
das
int3
add
xor
cli
adc
pop
stos
movsb
inc
cmp
loope
jb
or
sbb
xor
cld
xchg
mov
pop
fmul
dec
xchg
rcrl
mov
xor
mov
and
stos
add
aaa
sub
add
daa
movsl
insl
inc
fsin
pop
mov
mov
dec
data16
std
mov
xchg
cltd
sahf
insl
mov
iret
push
and
mov
mov
clc
daa
xchg
xchg
xlat
xlat
aam
xor
push
or
push
xor
lods
fsubs
jnp
ficompl
in
fnstsw
test
in
imul
xchg
cmc
je
hlt
fmuls
mov
mov
in
repz
aam
dec
insl
mov
pop
mov
in
out
testl
push
es
sub
shll
mov
pop
scas
xor
mov
sti
mov
not
jno
outsb
xchg
xchg
mov
push
lea
dec
xchg
pop
mov
idivl
xchg
add
lock
dec
out
and
xchg
clc
or
or
mov
mov
pop
mov
lock
lcall
dec
test
mov
adc
add
fistl
mov
mov
xchg
push
xchg
fdivrs
pop
hlt
ds
add
imulb
sub
aad
testl
cwtl
pop
arpl
mov
daa
sar
sub
clc
out
cmpsb
jmp
rcl
and
mov
push
ret
mov
roll
mov
lcall
sub
mov
xchg
cmp
loopne
jl
es
pop
jne
and
ljmp
ljmp
cli
lea
je
insb
sahf
lahf
insl
movsl
and
xor
pop
jl
mov
movsl
call
mov
mov
movsl
or
or
cmp
xor
shl
in
sub
out
sub
js
flds
shll
mov
les
pop
adc
xchg
fucom
das
xchg
lods
clc
xlat
dec
aad
aaa
and
cld
imul
sar
dec
jg
ret
addb
and
hlt
sbb
cmpsb
adc
and
inc
jg
jb
add
mov
bound
push
fstpl
fbstp
out
xchg
test
and
xchg
xchg
cmp
arpl
sbb
jle
mov
push
mov
inc
ljmp
int
jecxz
lcall
sub
pusha
mov
inc
pop
leave
lods
sarb
cmc
jg
sti
ss
xlat
jl
jo
xchg
xor
stc
icebp
cmpsl
sub
std
mov
cmp
xchg
inc
xor
jmp
push
dec
xor
fucomp
loop
or
add
int
mov
xor
jmp
mov
or
xor
sti
sbb
das
add
test
adc
add
cmp
add
loope,pt
ret
adc
dec
enter
push
sub
rolb
test
lret
and
jg
push
sarl
pop
push
pop
pusha
mov
or
ror
test
testl
mov
sub
popf
xchg
pushf
hlt
xchg
or
repz
or
fcom
xor
mov
add
mov
test
push
pusha
test
push
xchg
mov
aaa
push
stos
in
dec
popf
sub
sub
xchg
mov
scas
xor
inc
pop
push
aad
lea
aad
gs
add
mov
xlat
dec
test
xor
stos
lods
mov
pop
or
iret
aaa
test
lret
sub
jge
arpl
das
mov
xchg
enter
cmc
pushf
ds
mov
cs
lret
scas
sub
pop
shlb
sub
push
push
push
lahf
popf
inc
enter
cmpsl
out
lock
icebp
hlt
jno
inc
mov
and
pushf
push
in
data16
cmpsl
adc
and
jg
pop
sub
in
out
testb
sub
int
rcrb
adc
fdivr
nop
adc
sub
fnstcw
fs
mov
test
cld
xlat
mov
iret
movsl
fsubrp
xor
lret
hlt
lods
ficompl
nop
cmp
lock
sbb
mov
dec
fsub
fs
adc
xor
mov
inc
pop
in
loop
and
cld
add
adc
fcomps
addl
mov
xchg
mov
test
xor
ss
push
aam
xchg
xlat
fsubrs
testb
mov
les
iret
std
lock
add
shll
fwait
in
and
dec
loop
ss
adc
mov
es
fcom
pop
aaa
arpl
add
lahf
loope
ljmp
nop
ljmp
stos
mov
out
xchg
into
cmpsl
mov
das
fbld
xor
cmp
outsb
mov
push
in
bound
ljmp
in
outsl
iret
mov
sbb
les
test
sbb
cmp
or
lds
cmpsb
xchg
shlb
adc
mov
sti
add
out
adc
out
and
lcall
sub
jno
mov
mov
jmp
bound
cmp
int3
fistpl
add
into
pop
mov
scas
and
xchg
lcall
cmc
les
jp
scas
mov
call
or
leave
test
popa
lea
lea
outsl
repnz
ret
or
movsl
inc
mov
and
mov
add
mov
sahf
jp
sub
mov
and
pop
or
movsl
push
ds
lods
mov
and
inc
es
push
mov
cs
fs
sbb
jl
mov
cmpsb
mov
lods
das
in
xchg
push
movsl
test
aas
xchg
mov
add
mov
mov
cmp
fnstenv
and
leave
and
mov
clc
mov
cmpsb
mov
mov
mov
movsl
aaa
addr16
lods
js
xchg
mov
adc
leave
adc
fisubs
test
in
das
stc
jl
nop
lret
and
mov
xorb
jge
cmp
out
jle
push
cli
aas
push
pushf
neg
mov
in
popl
mov
cmp
in
mov
mov
aas
xchg
inc
into
add
incb
pop
arpl
mov
movsb
fwait
mov
xor
lcall
pop
cwtl
lock
adc
test
ss
mov
mov
sub
xor
sub
int3
in
adc
lods
cmp
jle
pop
cli
in
lahf
inc
repz
lret
mov
fists
ret
add
xchg
out
sbb
xlat
jl
lods
mov
xor
cmp
leave
lcall
ljmp
lods
aas
fwait
mov
lods
pop
sbb
xor
fwait
inc
mov
sub
mov
lret
aaa
mov
push
and
movsl
pop
sub
sbb
push
dec
scas
test
dec
sahf
ja
testb
and
pushf
xchg
in
cmp
shl
cmc
negb
sbb
loope
pushf
bound
loope
cmpb
and
mov
and
iret
rsm
out
lods
push
es
nop
xchg
scas
lods
jnp
in
cmp
movsb
xchg
test
xor
jecxz
mov
adc
daa
int3
cmp
std
fs
scas
sub
sbb
int3
sub
jne
sub
add
jbe
mov
das
out
lds
and
cltd
mov
mov
mov
cmp
adc
stc
push
fwait
xchg
mov
adc
gs
mov
fstpl
loop
cmp
in
pop
pop
ret
inc
sub
lods
dec
out
xor
cmpsb
lret
mov
std
outsb
lret
ljmp
mov
xor
pop
or
sahf
cli
mov
push
mov
sub
xchg
cmp
inc
mov
xor
xchg
rclb
ret
inc
cmpl
sahf
xor
in
pop
xchg
stc
cmc
push
negb
cmc
lcall
sbb
mov
mov
aaa
fwait
xor
movsl
mov
mov
adc
cltd
cmp
pop
popa
repz
jae
xchg
pop
cmp
aaa
sbb
jecxz
lods
in
ret
fadds
pop
cs
fdivrl
add
fstpt
lret
jnp
add
inc
in
ret
mov
aam
jge
xchg
lods
jl
xor
push
push
je
mov
dec
lods
mov
into
testl
lahf
xor
mov
xor
pop
pop
or
insb
inc
inc
fcompl
icebp
enter
cmp
cmp
or
jnp
aaa
mov
movsl
jmp
inc
lods
fnstcw
daa
xchg
push
stos
or
jb
sarb
jp
nop
clc
mov
out
push
sarl
mov
pushf
mov
subl
mov
mov
out
push
cmp
insb
xchg
mov
cmp
hlt
add
cmp
pop
xchg
call
jmp
mov
arpl
dec
lcall
loop
cmp
xor
cmpsb
cs
adc
lods
scas
ffreep
mov
jge
mov
aaa
add
cmp
jge
add
subb
nop
sbb
or
rcr
int3
mov
xor
lods
adc
out
dec
jo
or
mov
mov
push
ljmp
xchg
lahf
push
xchg
call
repnz
mov
push
pop
push
adc
movsb
test
add
fnstcw
cs
das
mov
pop
xorb
mov
or
in
lea
pop
aas
leave
add
bnd
lret
pop
in
popa
push
lret
ret
xor
sub
decl
and
xlat
lods
sbb
test
mov
mov
jp
or
rorb
loope
in
movsl
es
dec
and
adc
jg
add
adc
data16
lds
insl
push
adc
int
mov
fcompl
sub
out
mov
mov
in
jnp
fwait
or
out
repz
lods
mov
mov
std
inc
jbe
cmp
add
addr16
jecxz
add
in
pop
xchg
push
mov
scas
leave
mov
cmp
jl
loopne
insb
cmpsl
dec
dec
out
cwtl
in
xor
add
add
add
xor
add
add
add
or
les
or
adc
or
int3
xor
add
xor
add
xor
add
xor
add
xor
add
or
in
or
aas
xor
add
or
pop
xor
add
or
xorb
add
add
add
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
add
addb
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
or
imul
adc
sbb
mov
or
sbb
add
add
sub
add
cmovp
je
add
mov
inc
adc
and
pop
inc
or
adc
xchg
or
enter
jb
test
push
inc
mov
and
mov
adc
and
adc
and
aaa
pop
sbb
clc
inc
push
pop
mov
push
xchg
adc
and
data16
fisubrl
and
xchg
xchg
and
push
push
or
scas
sub
cld
and
jb
pop
add
xchg
sub
sbb
mov
rclb
xor
leave
sub
xchg
add
adc
mov
popf
fwait
loop
mov
insl
jne
imull
orb
rclb
add
out
stos
sbb
push
mov
jne
loope
xor
add
push
add
int3
inc
ljmp
aad
add
adc
or
loope
fbstp
scas
mov
adc
repnz
mov
lahf
xor
loop
imul
fmull
mov
dec
sbb
adc
mov
add
in
and
add
ljmp
arpl
sbb
fimull
sbbl
shll
add
inc
shr
mov
sbb
notl
and
push
sbb
add
in
jg
shll
lods
andb
add
loopne
dec
xchg
jl
push
orl
push
xchg
sbb
and
test
aam
add
and
outsb
add
jmp
inc
iret
sbb
adc
in
jns
jg
pushf
sbbl
lret
cs
lds
stos
fiadds
bound
pop
push
jp
add
ja
jns
dec
cmp
lds
into
and
ss
call
and
lods
test
sbb
cmpsb
adcb
int3
add
xlat
push
jl
popf
loopne
add
push
ds
push
movsl
mov
dec
and
adc
sub
test
dec
out
scas
mov
push
les
mov
dec
add
fdivr
inc
adc
ljmp
and
mov
enter
mov
loope
add
pop
add
push
call
or
jbe
mov
or
cmpsb
or
test
fldcw
nop
lods
or
scas
or
adc
adc
adc
xlat
add
add
add
jg
add
add
add
aaa
jmp
stc
in
adc
icebp
sbb
sbb
popa
sti
int
ljmp
bound
add
addr16
mov
or
or
mov
xchg
inc
adc
notl
and
adc
loope
and
ljmp
add
inc
push
in
and
inc
xor
inc
jno
test
mov
add
nop
and
push
dec
push
and
repnz
and
push
and
imul
jp
test
add
addb
inc
subb
cmpl
adc
test
aad
pop
test
jno
xor
mov
and
and
test
ljmp
fildl
sub
movsb
inc
into
xchg
inc
aad
xlat
jmp
inc
inc
fisttps
xchg
popa
fs
ljmp
add
in
add
clc
push
and
sbb
push
and
lds
xchg
outsl
and
xchg
adc
mov
pop
or
sbb
pop
sbb
jmp
sbb
leave
adc
clc
sub
cmpsb
sub
insb
das
pop
xchg
pop
dec
je
sub
inc
mov
adc
lahf
mov
ret
fcoml
mov
inc
or
sbb
add
pushf
js
and
sub
inc
jecxz
add
and
and
adc
adc
mov
fs
mov
adc
adc
in
push
in
das
call
and
adc
in
add
testl
incl
xchg
add
and
dec
inc
xchg
jns
out
adc
or
bound
mov
adc
and
mov
and
inc
call
or
adc
in
jnp
dec
pop
pop
enter
push
sub
or
inc
dec
cmp
mov
aam
in
cmpsl
ffreep
in
dec
movl
or
shll
aas
cmp
sub
cmp
or
cmp
jecxz
inc
cmp
xor
or
add
inc
add
dec
add
adc
or
add
push
je
test
add
add
inc
xor
loope
xchg
enter
adc
xor
inc
lock
sbb
or
insb
sbb
dec
inc
sbb
xchg
and
xor
or
mov
xor
xchg
and
dec
cmp
add
inc
add
and
add
jns
add
pop
mov
in
mov
je
hlt
popl
cwtl
shr
ret
adc
inc
jecxz
lds
sbb
ljmp
and
daa
and
adc
xchg
aas
xor
and
es
sbbb
lret
jno
dec
push
cld
xor
add
add
int3
jmp
and
inc
cmpsb
cmp
into
mov
or
addb
and
push
xchg
push
xchg
xchg
mov
popf
add
cs
xchg
cmp
repz
ret
mov
shrb
das
lea
push
sub
jl
add
mov
jg
cmc
sub
jo
std
int
add
push
outsl
cwtl
dec
inc
push
sub
mov
xchg
adc
or
sub
or
je
ljmp
jne
push
out
add
sbb
xor
cmp
push
ds
push
shll
add
push
add
push
add
push
add
push
in
add
mov
jae
add
jmp
cmpsb
nop
inc
test
je
mov
or
sub
mov
lock
sub
add
repnz
or
xchg
jge
xchg
or
inc
or
mov
sub
leave
or
cmp
mov
das
flds
and
cmp
inc
or
test
xorb
fisttpll
jnp
mov
ljmp
cltd
dec
sbb
and
or
xchg
outsb
repnz
jecxz
push
sbb
aaa
xor
mov
movb
test
push
ret
or
cmp
or
jmp
sti
fs
push
inc
xchg
push
pushf
nop
andnps
loopne
add
push
inc
lds
push
mov
je
enter
dec
or
add
add
int
add
inc
inc
aam
js
adc
bound
sub
mov
cld
outsl
adc
inc
add
mov
dec
inc
or
cmpsb
in
pop
add
sbb
fistl
sub
cwtl
into
push
aas
jb
rcr
movsl
lahf
cmp
adc
inc
sbb
and
add
mov
jo
leave
or
insl
or
aam
xchg
xchg
addl
push
adc
shl
pop
das
add
nop
insl
rorl
loop
or
inc
outsl
pop
mov
or
mov
andb
mov
dec
imull
xor
js
push
cld
or
jg
add
mov
adc
dec
cmpsl
cmp
shrl
aam
int3
cmp
or
push
and
cmc
mov
mov
mov
adc
test
dec
or
sbb
or
inc
jmp
subb
jp
add
repnz
out
test
dec
mov
clc
inc
dec
add
cmc
xchg
push
and
push
andb
inc
ljmp
movups
aam
dec
outsl
int3
dec
add
cmp
and
es
sbbl
xchg
jnp
pop
mov
and
fs
push
pop
and
or
loopne
xchg
adcb
push
sbb
or
push
sbb
or
and
sbb
pop
or
or
addb
or
loop
aaa
add
test
xor
dec
es
imul
orl
push
sbb
add
mov
pop
adc
push
arpl
jge
out
adc
cld
or
test
mov
xor
cmp
push
adc
das
jmp
clc
push
popl
or
test
adc
dec
pop
pop
ja
icebp
mov
or
insb
push
test
push
jl
and
xchg
dec
mov
sbb
es
pop
or
jmp
inc
xchg
and
sbb
add
xchg
sahf
xchg
stc
icebp
xchg
and
jmp
cld
scas
jecxz
or
pushf
cli
sbb
inc
or
dec
mov
outsl
mov
push
cltd
lret
pop
cs
inc
xchg
shlb
mov
dec
pusha
shrl
stos
and
test
add
add
push
int
sahf
aaa
inc
sbb
jge
or
lock
and
shrl
inc
sahf
inc
shl
clc
adc
repnz
aas
cltd
aaa
sub
mull
loope
or
add
inc
inc
xchg
pusha
add
movb
jno
xor
adc
add
adc
frstor
adc
js
mov
pop
incl
push
fsubs
sbb
mov
into
stc
jecxz
iret
or
enter
sbb
mov
stc
add
xor
fidivrs
ret
pop
or
add
cmpxchg
add
mov
mulb
push
and
or
ljmp
jbe
xor
inc
shlb
xor
add
in
jg
sub
testb
and
mov
movsb
push
inc
scas
add
xor
or
outsl
dec
jne
loop
mov
sbb
xchg
add
adc
lcall
push
cltd
add
sub
mov
mov
filds
mov
iret
fmulp
stos
cld
gs
cld
cwtl
xabort
lea
or
out
mov
sbb
push
xor
cmp
mov
out
mov
add
or
sub
cmp
mov
in
adc
fwait
dec
mov
add
loopne
or
adc
std
adc
push
inc
ss
adc
add
lahf
cmp
add
jno
into
std
sub
flds
sbb
or
add
mov
stos
inc
sub
or
scas
xchg
shrb
push
pop
and
ja
jp
rclb
popf
or
add
adc
push
add
jge
cs
sbb
mov
jbe
xor
dec
test
dec
ret
cs
es
or
push
xor
mov
iret
cmpsb
adc
ret
subb
icebp
add
outsb
cmp
pop
dec
bound
andl
or
stos
cs
push
repz
stc
add
ja
and
pop
ljmp
mov
sbb
add
daa
gs
daa
nop
inc
outsb
test
push
jnp
dec
leave
das
loope
adc
adc
aas
xor
dec
mov
ljmp
call
sbb
inc
mov
jg
subl
sti
cwtl
cmpsl
enter
movsb
cmp
push
outsb
inc
test
repnz
push
adc
icebp
or
ret
add
enter
sbb
mov
insl
pop
and
dec
in
adc
add
imul
add
insb
nop
push
mov
shll
pop
inc
test
mov
sbb
dec
sbb
mov
add
fnstenv
mov
ret
mov
and
jns
and
jne
sahf
or
ds
rorb
or
mov
fidivl
aas
into
adc
sbb
push
sti
add
inc
decl
adc
lock
xchg
push
sbb
push
jge
pop
int
sbb
shlb
push
adc
imul
push
add
aam
rcll
add
pop
movsl
pop
in
dec
aas
sub
cmp
push
stc
scas
popf
mov
add
mov
int
aas
add
pop
cmp
push
and
mov
leave
iret
mov
cmp
jo
adc
outsb
add
nop
les
hlt
jno
push
daa
and
and
int
gs
cmp
icebp
xor
jne
push
pop
rclb
add
int3
leave
fimull
adcb
ljmp
or
pop
pop
int3
movl
push
mov
add
mov
bound
lea
nop
cltd
add
or
es
jb
clc
fists
or
mov
jb
jg
push
xchg
pop
adc
jno
cmove
adc
addr16
aaa
ret
je
ret
add
lret
cmovb
lods
mov
or
lds
or
repz
xchg
mov
inc
and
fcmovne
pop
push
pop
lahf
pxor
jecxz
add
mov
dec
out
pop
loope
push
test
dec
jge
ss
shrl
sbb
rolb
mov
add
add
xor
cltd
test
xlat
into
fwait
push
dec
inc
push
lock
push
inc
mov
or
shrb
fdivrl
adc
mov
pop
test
jmp
scas
lret
lds
orl
or
inc
pop
inc
dec
orb
or
or
xor
or
shlb
mov
sbb
or
mov
sti
fsts
add
mov
mov
fdivr
in
gs
jno
add
add
add
push
icebp
push
mov
inc
rcr
mov
mov
push
popa
decb
nop
cmp
pop
pop
mov
roll
jge
orb
mov
push
mov
adc
and
mov
stos
js
clc
and
adc
call
shl
add
dec
lock
xor
push
mov
mov
call
pop
addr16
xor
xchg
add
bound
jmp
shl
ss
mov
jmp
hlt
adc
xchg
and
lret
jns
add
stos
cmpsb
push
cmp
cmp
gs
js
outsl
rolb
xchg
inc
insb
incl
add
jo
rolb
xchg
xor
pop
pop
shr
pop
push
sbb
mov
pop
push
mov
btr
call
add
xchg
add
data16
dec
jmp
cmc
mov
or
cs
aam
inc
hlt
jne
int
cmovl
stc
mov
mov
sarb
out
lods
xchg
jge
shrl
and
sub
sbb
je
push
pop
aam
mov
movb
mov
add
xchg
push
in
push
pusha
scas
addr16
xlat
jmp
push
hlt
lret
addr16
es
lods
scas
add
lds
and
add
popa
push
push
pop
pop
or
cs
fldlg2
inc
inc
btc
or
bnd
mov
sub
adc
imul
fnstenv
jnp
push
repnz
clc
mov
xor
imul
or
enter
add
push
jg
pop
pop
sub
test
push
nop
rclb
push
adcl
pop
cmp
mov
sub
sub
jmp
sub
addr16
fisubrl
push
pop
sub
inc
testb
jbe
adc
mov
mov
cmp
xor
cmp
inc
xchg
sub
xor
aas
jns
mov
push
pop
pop
shl
add
ret
ja
inc
add
je
add
neg
test
lods
dec
iret
mov
cmpb
xchg
sar
xor
pop
and
iret
std
inc
xchg
mov
cwtl
std
cmc
push
leave
neg
fwait
iret
xlat
inc
push
push
subb
cmp
ds
fucomp
add
div
out
push
adc
inc
ffree
mov
call
incb
jle
fsts
pop
cmovs
insb
shlb
push
pop
pop
sub
xchg
fstps
or
mov
mov
loope
lock
icebp
jbe
push
adc
ds
fdivs
lock
test
pushf
cmp
orb
stos
icebp
xchg
mov
cmc
outsl
sahf
in
lock
jno
add
out
cmp
mov
xchg
outsl
mov
cmp
push
pop
pop
or
in
jns
mov
lret
test
push
adc
mov
add
jecxz
out
cmp
dec
call
push
roll
mov
mov
push
or
test
mov
xchg
inc
jecxz
mov
adc
cmp
xchg
shlb
pop
pop
aam
clc
faddp
pushf
mov
inc
movsb
sbb
inc
xor
sub
sbb
xchg
repz
fdivr
rorb
sub
or
mov
neg
cmpb
jmp
pop
pop
adc
jmp
add
push
or
dec
mov
add
add
mov
nop
xchg
fisttpl
xor
sbb
xchg
test
or
int
push
leave
cwtl
add
sbb
pop
or
pushf
ret
stc
cmpsl
dec
orl
and
scas
cmp
and
xor
pop
cmp
movsl
es
shlb
push
mov
inc
push
push
cld
adc
mov
xchg
mov
xor
pusha
jl
popf
mov
ja
cmp
mov
sub
lods
cli
pop
dec
mov
sbb
jbe
sub
adcb
aam
std
ret
shlb
rorl
push
sub
cmp
std
jno
push
xchg
jp
pusha
leave
pusha
adc
jle
mov
cwtl
add
mov
adcb
push
fadds
cltd
jb
adc
cmp
dec
xorb
push
pop
pop
mov
push
jne
add
cld
shl
es
push
lcall
mov
pop
mov
xchg
fs
lret
xchg
mull
add
hlt
fisubs
gs
pop
sub
push
fidivrs
pop
sbb
hlt
test
scas
xor
push
ja
pop
inc
test
lea
pop
jb
push
pop
setg
filds
orb
sbb
lds
dec
pop
fisttpll
rcl
lret
or
dec
cmpb
sub
push
and
xchg
add
jae
cmp
fdivp
fadd
fdivrp
lds
fisubrl
loope
int3
out
add
das
inc
nop
mov
and
insl
or
add
adc
push
fldl
sub
mov
push
je
inc
and
pop
adc
push
gs
and
and
add
int
stos
or
pop
mov
pusha
cwtl
lock
ljmp
cltd
mov
inc
lea
aad
aaa
add
pop
inc
idivb
aam
lret
or
mov
xchg
int
add
out
movsl
lds
pop
push
nop
and
adc
adc
and
dec
xchg
outsl
sbbb
push
inc
fcmovnu
insb
sub
movsb
lahf
shll
jo
mov
jecxz
and
mov
add
test
out
jb
inc
test
int3
mov
jno
mov
repz
mov
jmp
out
adc
mov
add
push
mov
mov
and
jo
call
cmpsb
shlb
inc
adc
add
xchg
paddusb
loopne
fwait
iret
mov
sub
fstps
dec
xchg
dec
addl
enter
aaa
or
push
xor
jb
test
fdivs
outsl
mov
mov
add
out
xor
add
test
and
mov
xor
in
xor
das
loopne
lret
mov
adc
out
cltd
jl
loopne
lods
clc
lret
add
push
cmp
inc
jns
cwtl
mov
int3
nop
xchg
mov
nop
jl
arpl
pop
or
inc
xor
popa
hlt
add
in
mov
ds
push
lret
pushf
adc
add
mov
sub
inc
je
or
push
sbb
or
vpunpcklwd
pop
add
add
dec
nop
mov
out
loope
negl
sbbl
jl
mov
sub
testb
les
aas
ret
inc
or
and
mov
mov
clc
nop
shll
cltd
les
mov
dec
jno
rclb
mov
or
cld
ljmp
roll
clc
pop
add
dec
enter
xor
mov
ficoml
shl
and
ds
sub
jno
and
mov
les
or
cli
inc
cwtl
hlt
push
cld
add
push
cmp
nop
or
xor
popf
push
xorb
scas
dec
sub
dec
or
leave
cmp
cmp
xlat
adc
jbe
rol
fstpt
std
btc
xchg
cmpsb
mov
flds
jmp
les
cwtl
mov
mov
cli
cltd
or
mov
ret
dec
mov
mov
pop
lock
sub
push
js
mov
jg
dec
out
ret
call
push
pop
add
outsl
fadd
ss
sub
mov
add
fsub
sbbl
inc
sbb
ret
sbb
fists
push
sub
mov
dec
adc
dec
repnz
mov
xor
subl
test
test
mov
xlat
xor
fs
add
cmp
dec
adc
or
add
mov
dec
cmpsb
push
adc
enter
jb
mov
test
cmp
loope
adc
loop
mov
arpl
sbbl
enter
push
sti
sub
mov
std
jbe
aam
mov
sbb
pop
cmpl
ret
adc
add
add
xor
or
adc
jmp
xor
xchg
outsb
iret
push
pop
pop
popa
inc
dec
xor
aam
mov
aaa
inc
faddp
mov
icebp
xor
movsb
jae
std
andl
xor
dec
shlb
loop
dec
pop
dec
inc
cmpsl
xchg
xchg
push
jp
jmp
mov
lret
hlt
loopne
push
cmpb
orl
push
fildll
cmp
shlb
popa
add
jbe
cmpsb
or
test
mov
ret
mov
dec
jp
dec
jecxz
sub
pop
fistl
stc
scas
add
cmp
and
cld
push
pop
pop
cmpsb
loope
jae
sub
add
inc
movsl
sbb
dec
pop
rolb
into
mov
push
pop
push
mov
psraw
inc
shr
out
push
cs
setne
test
repz
add
and
push
cmp
xchg
mov
nop
inc
fmuls
mov
shrb
mov
add
lods
adc
adc
add
cli
inc
test
roll
dec
rcll
call
xchg
fcomip
loop
testb
les
fisttpl
xchg
sti
xorl
nop
dec
add
aas
xchg
roll
outsl
add
sbb
pop
cmp
adc
mov
or
xor
dec
lahf
inc
pop
sub
or
pop
lret
inc
int
xchg
pop
js
sub
pop
xor
shll
jb
sbb
pusha
xor
roll
lea
or
cmp
cmp
inc
fwait
adc
push
add
sub
or
test
pusha
cmp
xchg
test
flds
jno
in
push
inc
ds
xchg
jbe
loope
mov
adc
pusha
dec
add
pushf
daa
jno
test
and
and
sub
rcr
inc
inc
xor
mov
mov
aaa
mov
jno
mov
aad
sahf
test
insl
fisttpl
das
aas
mov
sbb
inc
add
cmp
in
push
pop
mov
jns
lock
pop
leave
cltd
pop
sbbl
dec
scas
hlt
xchg
sub
mov
js
and
and
push
cmp
sub
sub
shll
movsl
push
out
cli
sub
fisubl
xchg
out
aam
push
mov
stc
jge
test
sbb
into
add
fisubs
neg
dec
call
jp
inc
xchg
or
sbb
ret
xor
push
xchg
test
xchg
inc
mov
ret
add
test
roll
enter
in
ljmp
repnz
push
add
push
int
add
es
dec
gs
inc
pop
fmull
jge
xchg
push
and
dec
cmpsb
xchg
clc
and
in
mov
cmp
adc
adc
sarb
scas
pusha
stc
hlt
pusha
mov
repnz
sub
iret
test
sub
sti
nop
push
xor
loope
xchg
fs
and
cmp
jge
scas
stos
cli
and
xlat
not
push
sbb
jle
pop
add
or
xabort
dec
pop
rol
push
sbb
mov
add
lea
popf
dec
divl
shll
rcrl
xlat
jl
mov
xor
scas
add
add
jl
fiadds
in
push
pop
pop
imull
fucomip
or
adc
jecxz
jb
mov
push
or
add
push
bound
cmp
add
lcall
xchg
sbb
inc
loop
push
out
int
and
rorl
cltd
icebp
jle
inc
push
pop
add
ljmp
add
inc
push
and
cmp
or
add
stc
push
pop
pop
xor
pop
in
push
jg
out
sub
fistpl
arpl
xchg
shll
sti
or
adc
push
mov
jae
gs
cmp
xor
and
iret
inc
out
or
in
sbb
sub
int3
add
push
pop
pop
or
sub
aaa
jno
sarl
mov
addl
push
or
sbbl
loopne
sub
lret
cmp
and
mov
movb
xchg
das
imul
mov
in
dec
pusha
mov
std
lds
pop
xor
out
and
dec
push
jp
sub
and
outsb
cltd
inc
imull
and
lret
out
loop
mov
cmpsb
loop
aas
jns
bound
inc
cmp
mov
cmp
sub
pusha
mov
dec
neg
dec
and
cwtl
push
xorl
add
add
std
mov
xchg
pop
push
adc
mov
cmc
aad
leave
push
jno
jb
mov
cs
ficomps
or
sub
mov
push
ret
or
inc
mov
test
cs
mov
add
fildl
movsl
test
test
or
into
cli
adc
add
ss
dec
les
sub
jo
test
popf
add
adc
inc
out
and
inc
mov
pop
mov
icebp
iret
outsl
xchg
test
xlat
inc
pop
sbb
add
sub
mov
mov
or
xchg
stc
inc
xor
movsl
pop
mov
nop
mov
dec
sbb
adcb
cvtpi2ps
lret
dec
mov
out
sub
fstl
push
std
addl
mov
addr16
sbb
cmpsl
mov
aas
push
pop
ss
mov
dec
in
add
dec
dec
add
xchg
ret
push
lcall
pushf
sahf
and
pop
push
pop
pushf
and
add
ds
imul
dec
lret
adc
mov
dec
dec
xor
push
dec
push
jno
xchg
sub
aad
add
push
lret
lds
sbb
scas
mov
jns
push
andl
test
xchg
xchg
stc
or
jb
and
jno
dec
inc
ljmp
sarb
add
adc
mov
and
push
pop
fbstp
and
jmp
xor
add
sub
xor
hlt
pop
sub
cmpsl
inc
push
sbb
pop
repz
sub
sbbl
es
inc
es
adc
int3
orl
jecxz
sub
xor
call
pop
jo
fsubl
adc
int
push
xchg
push
sub
lcall
sbb
imull
xor
push
imul
ljmp
xor
lret
cmpsb
lods
inc
enter
jp
lea
push
pop
pop
dec
xor
bound
dec
mov
lret
jbe
test
cmp
aam
or
outsl
lret
es
xor
sub
mov
mov
inc
daa
add
pop
and
and
add
shlb
push
inc
cmpsb
xlat
test
arpl
sbb
pop
pop
inc
dec
and
add
es
sbb
xchg
cmpsb
sahf
add
in
imul
jb
sbb
shrl
and
add
cmp
ret
daa
loopne
xchg
sbb
dec
andl
int3
mov
bound
add
out
push
sub
in
or
add
andl
adc
daa
add
shll
add
cmc
or
lods
loopne
movsb
or
sub
or
mov
ret
pop
pop
stc
nop
icebp
cs
or
xor
dec
and
clc
ss
push
pop
pop
sub
push
out
in
sub
and
setle
cmp
imul
mov
das
xchg
pop
pop
test
inc
clc
add
add
cld
xchg
sub
cmc
xchg
lock
jle
or
subb
xchg
roll
int3
xchg
ficompl
iret
gs
cli
add
and
popa
daa
loope
in
cmp
add
adc
inc
cmp
push
inc
lock
push
pop
sub
popa
xchg
mov
mov
mov
inc
jp
and
add
in
xchg
mov
loopne
pop
xor
mov
mov
push
dec
nop
adc
mov
and
test
sub
push
sub
mov
fsubrs
jge
mov
fistpl
mov
push
lret
addl
lahf
mov
mov
add
jbe
adc
inc
sub
mov
sbb
lods
lock
push
nop
pop
pushf
or
jle
pusha
push
adc
lret
push
and
into
inc
imul
xchg
pop
leave
and
enter
fwait
daa
and
cmp
dec
mov
add
in
pusha
pusha
dec
cmp
not
lcall
pop
cmc
neg
nop
and
push
daa
scas
mov
cmpsl
aad
inc
nop
push
push
sti
mov
or
or
sbbb
call
sbbb
cmp
sbb
pop
movsb
es
mov
outsb
mov
push
imul
push
or
push
xchg
add
bsf
jo
mov
push
push
sbb
mov
xlat
adc
mov
pop
es
lret
and
mov
jno
sub
imul
leave
lahf
outsl
movsb
pop
xor
in
sub
rcr
stos
outsb
and
out
adc
push
dec
pop
sub
lret
mov
fwait
lds
fxch
lar
cwtl
out
clc
cwtl
std
sbb
sub
push
pop
gs
push
push
mov
orb
lea
mov
ret
push
mov
add
mov
iret
arpl
idivl
sub
cld
fcmovb
pop
loope
adc
adc
xorb
or
shrl
je
movsb
or
mov
popa
popf
inc
or
inc
fisubs
adc
inc
and
jmp
popf
inc
adc
inc
sub
dec
stc
cmp
insl
loope
dec
mov
out
aaa
dec
leave
insl
outsl
sbb
xor
or
lahf
fisttps
cmp
pop
cmpl
mov
pop
aaa
je
lock
mov
push
adc
add
aaa
adc
es
pop
rorb
es
adc
cmc
or
pop
sub
shlb
xchg
and
loop
adc
cmp
pop
cli
pop
ret
dec
cmp
or
inc
out
add
mov
cwtl
sbb
leave
add
cmp
adc
cwtl
lcall
test
add
shll
adc
mov
push
inc
loope
mov
andb
stos
sarb
inc
dec
xor
pop
mov
lods
push
ds
sbb
sarl
cmp
fbld
add
and
xchg
xor
pop
push
jb
push
int
or
test
movsb
or
add
adc
jno
jecxz
cmp
push
push
aas
int3
and
frstor
mov
idivl
jecxz
push
pusha
insl
xor
mov
jb
pop
and
cmovl
sbb
cs
enter
aas
adc
ret
mov
test
xor
sbb
xchg
sbb
popa
xchg
push
pop
add
pop
add
aaa
xchg
or
enter
sar
add
mov
test
sub
sub
or
fimull
sub
pop
xor
dec
or
sub
inc
lidtl
aam
inc
in
mov
mov
cmp
enter
rcl
sub
xchg
add
xor
jno
test
sbb
addr16
inc
add
adc
inc
push
adc
repnz
push
andb
or
adc
xchg
mov
shl
nop
sub
dec
rclb
xor
or
push
and
adc
add
pushf
mov
idivb
sub
je
add
jle
pusha
mov
test
mov
imul
and
and
and
cwtl
mov
push
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
iret
push
outsb
cltd
push
fs
arpl
mov
or
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
add
adc
and
and
adc
xchg
push
stos
or
cmp
xor
or
jo
or
push
arpl
or
push
or
dec
pusha
jno
xchg
mov
push
cmpsl
clc
pop
or
inc
inc
or
cmp
fsub
cmpsb
dec
add
shll
push
xchg
inc
inc
push
in
call
sbb
sbb
xor
mov
and
loopne
sbb
imul
inc
adc
movsl
sub
xor
sub
movsl
lret
clc
push
cs
gs
outsl
arpl
adc
sub
and
sub
dec
arpl
mov
sub
adc
add
jmp
add
into
add
or
jb
popa
lcall
mov
nop
sbb
or
push
je
cs
sbb
jo
cmp
dec
or
xchg
inc
sbb
sub
pop
push
dec
bound
arpl
mov
rclb
jb
cmp
inc
nop
and
in
jb
cmp
mov
and
enter
insb
push
sub
xchg
or
in
aas
nop
adc
adc
jb
sbb
or
mov
push
call
add
add
mov
pop
sbb
mov
cmp
pop
lods
or
xor
aam
or
cmp
sbb
mov
and
mov
cmp
push
push
adc
test
jne
xor
rcrb
fmull
or
mov
add
jge
push
mov
nop
push
inc
orl
fs
sahf
cmp
adc
push
pop
nop
mov
cmp
rcrl
repnz
xlat
xchg
test
dec
pusha
mov
mov
or
push
add
or
adc
inc
push
adc
mov
sbb
push
mov
push
sub
adc
xchg
ret
nop
pop
push
push
push
mov
repz
test
adc
add
lea
xlat
jbe
popa
cmp
push
or
int
in
jne
adc
adc
insl
inc
mov
or
push
inc
add
adc
and
mov
fistpll
jmp
pushf
loop
xchg
call
lahf
add
or
pop
pop
mov
jo
pop
push
clc
mov
sbbl
into
add
insb
call
xor
and
sbb
xchg
sub
push
dec
bound
jmp
pop
nop
jp
add
cmp
jmp
sub
test
scas
and
stc
outsl
jl
sti
cmp
and
or
aam
sahf
xchg
or
cmp
sbb
sti
stc
adcl
fiaddl
cmp
pop
mov
lret
mov
xchg
add
add
fmuls
shlb
add
mov
test
je
and
sarl
mov
dec
adcb
call
cmc
pop
fs
and
fnstenv
xchg
push
mov
push
mov
jns
xchg
gs
push
ja
dec
fmull
aas
in
movsb
dec
adc
xchg
or
or
push
aam
sbb
add
iret
sub
push
dec
or
push
and
jae
xchg
out
ja
out
dec
add
fidivs
push
sbb
jbe
imul
jne
stos
jae
xchg
icebp
xlat
dec
lea
sub
fildll
cmp
pushaw
add
sbb
cmpl
sbb
or
adc
sbb
dec
adc
repnz
mov
ljmp
outsl
add
cs
daa
and
psllw
dec
cmp
sub
inc
mov
loope
cmpb
add
pusha
xchg
jbe
repnz
mov
dec
or
pop
mov
push
sub
push
push
or
ljmp
adc
mov
or
push
je
sub
mov
and
xor
sahf
jmp
mov
clc
sub
inc
sub
and
outsl
pop
or
out
mov
mov
xchg
inc
les
and
cmpsb
sbb
inc
cmp
mov
sub
aas
xchg
data16
aam
xor
cld
or
and
call
ja
je
push
inc
aaa
dec
push
xor
leave
inc
stos
call
and
int3
mov
xchg
ja
cmpl
movsl
xlat
and
call
out
aaa
inc
adc
cli
test
cmp
je
dec
push
adc
cmc
add
jle
fisubrl
push
lods
xor
call
mov
xorb
aaa
or
push
leave
xchg
push
mov
insl
movsb
lods
inc
jmp
xor
rorb
test
call
loop
loope
imul
cmc
and
cmp
or
nop
dec
test
cmpl
test
adc
inc
and
or
push
mov
push
pop
dec
dec
xor
inc
and
cwtl
and
jecxz
ss
push
or
cmp
jae
std
rcl
sub
lds
mov
mov
mov
ret
mov
and
movsl
xchg
adc
testb
out
jmp
jnp
push
mov
mov
dec
pushl
cmp
sub
mov
or
push
xchg
jle
adc
daa
pop
sahf
mov
adc
bswap
int3
sbb
mov
mov
inc
push
xor
pusha
rolb
mov
fisttpl
sbb
repnz
and
add
mov
mov
push
mov
pop
and
test
pop
and
push
jl
stc
adc
test
aam
rolb
aam
pushf
adc
xchg
adcb
push
push
sub
cmpsl
cmp
aad
xor
lds
add
jno
sub
or
xor
pop
xorb
into
mov
test
loope
pop
inc
loopne
cmp
or
adcl
pop
or
cmp
mov
pop
test
jns
add
enter
aad
int
mov
jmp
xchg
pop
mov
loope
lret
jle
in
subb
popf
adc
es
adc
in
shll
fisttpll
movhps
sbb
push
adc
test
add
or
jmp
in
cli
add
add
sub
outsl
xchg
fsubs
or
or
or
pushl
add
xorl
add
loop
xor
jg
pop
add
adc
jecxz
push
outsb
or
push
movsl
lret
sub
pop
test
mov
sbb
add
andl
mov
dec
dec
nop
xor
xchg
adc
push
and
or
mov
mov
enter
ret
loop
and
adc
add
cli
and
or
cmp
pop
push
push
mov
pop
fiadds
fdivs
add
or
pop
pop
pop
clc
cwtl
fsubs
add
jne
cmp
sub
xor
inc
push
or
cmpl
mov
or
dec
imul
popa
mov
ljmp
mov
push
jg
aad
pushf
jl
call
jge
fiadds
mov
je
mov
or
adc
into
scas
adc
fstpt
aad
fwait
or
cmpsl
jae
or
imul
lods
or
pop
stos
xchg
testb
pushf
dec
cmp
mov
addb
sub
cltd
nop
sbb
cmp
mov
add
fldenv
nop
dec
hlt
aam
adc
pop
cwtl
lahf
adc
jmp
dec
sti
inc
adc
mov
sbb
jg
add
push
or
pop
mov
lret
push
pop
mov
or
dec
or
or
dec
fwait
inc
pop
jmp
sub
rorl
adc
pop
cltd
xor
sysexit
movlps
int
inc
loop
and
fdivr
call
dec
or
and
push
and
mov
inc
push
roll
fsubs
xor
push
pop
test
inc
add
add
or
xchg
je
or
add
call
pop
or
lret
fs
js
mov
outsb
cli
ds
xorl
pusha
mov
addr16
icebp
add
and
jecxz
dec
dec
pop
mov
dec
inc
adc
adc
adc
leave
and
fcomps
lea
xor
and
clc
add
push
lea
adcb
cwtl
jbe
mov
cltd
pushf
movsb
push
adc
jae
xor
or
mov
adc
and
xchg
xor
mov
cli
inc
sub
je
std
or
arpl
das
dec
adc
xchg
sbb
lcall
push
cmp
sbb
sub
cmpl
cwtl
repz
mov
add
icebp
dec
mov
lret
out
into
xor
cmc
sub
leave
mov
mov
mov
adc
xchg
out
pop
jmp
sub
mov
dec
cmp
lea
push
dec
dec
leave
pop
insb
in
xchg
push
mov
movsl
mov
jne
adc
arpl
mov
sti
clc
enter
movsb
mov
pop
xchg
or
sub
and
add
out
data16
inc
fcmovbe
mov
adc
jg
cmp
nop
aad
add
movsb
scas
dec
inc
pop
or
jne
sub
or
mov
jl
hlt
jmp
in
mov
inc
popl
or
mov
mov
mov
loope
leave
push
xchg
imull
add
inc
cmpsb
shlb
sbb
sub
mov
add
xor
les
mov
pop
adc
loop
test
and
mov
mov
pop
mov
dec
nop
push
inc
pop
cli
and
mov
push
clc
les
pop
mov
add
jmp
and
jp
mov
stc
test
test
add
inc
mov
mov
dec
jns
dec
or
les
rclb
je
mov
or
call
or
xchg
ret
scas
sbb
scas
dec
xor
mov
sar
cmp
dec
test
test
push
adc
xorl
add
dec
movsl
push
faddl
mov
test
je
pushf
and
cli
add
cld
adc
xorl
sub
or
or
push
mov
or
js
mov
cmp
inc
mov
cmpsb
jge
and
pop
mov
stos
popa
in
out
and
and
jmp
lock
movl
push
sbb
addl
stc
sbb
jne
mov
fwait
pop
cmp
add
mov
jge
push
cmpsb
pop
inc
sub
imul
cmp
add
jp
test
fbld
sbb
pop
popa
adc
or
mov
repnz
daa
inc
fsubl
jl
push
push
in
push
sbb
lret
adc
add
add
aaa
dec
sub
and
mov
mov
xchg
fisttps
dec
xchg
sbbl
stos
movsl
seta
cmp
pop
scas
adc
loopne
in
sub
test
aaa
sar
sub
rorb
out
cmp
pop
push
adc
faddl
jb
mov
sti
mov
push
or
es
pop
push
inc
jmp
mov
movsl
inc
lods
sub
push
repnz
mov
cmp
cmpsb
or
pop
sbb
loope
inc
test
pop
adc
jmp
inc
js
adc
inc
clc
pusha
push
into
jo
mov
sbb
cmpsl
cmp
adc
add
xchg
call
pop
fists
mov
lahf
ret
pop
leave
enter
sbb
adc
inc
int3
test
mov
lods
jmp
xor
inc
je
cmp
sbb
test
je
mov
mov
push
cmp
pop
or
ret
push
jmp
enter
xor
sub
sbb
adc
cmc
xor
nop
jbe
adc
sub
iret
mov
cmp
sub
or
push
mov
cmp
ja
jne
ret
in
push
test
xor
and
and
mov
and
adc
pop
bound
xor
lcall
sub
imul
sahf
cmp
add
dec
xlat
out
cmp
ja
je
xchg
insl
add
rep
incl
movsb
and
inc
je
cld
inc
jl
movsl
add
sbb
clts
movw
and
and
ficoml
mov
inc
fsubrs
sub
sbb
sbb
loop
sub
push
test
sbb
jl
add
or
pinsrw
add
fwait
jne
pop
pop
pop
pop
and
cmp
jmp
dec
ret
add
mov
inc
pop
lcall
fsubr
sbb
leave
mov
add
loop
je
jb
jecxz
loop
test
loope
icebp
rcrb
scas
inc
adc
add
cmp
push
mov
divb
sbb
jb
or
fdivs
in
and
or
jne
push
sbb
lock
dec
or
cmp
push
add
adc
jmp
mov
lods
imul
add
loopne
outsb
data16
rcll
cmp
repz
xor
imul
mov
es
dec
daa
dec
inc
nop
lea
dec
and
shll
dec
mov
mov
inc
pusha
sbb
mov
push
sub
sub
and
jne
inc
pop
pop
ljmp
sub
dec
es
pusha
cmp
jmp
or
andl
shlb
lea
cmp
shlb
rolb
xor
aam
push
jmp
pusha
push
neg
jle
pop
js
pop
sub
mov
inc
mov
mov
je
ret
test
add
xchg
and
jbe
adc
addb
or
bound
push
mov
lcall
mov
pusha
adc
repz
leave
push
test
jmp
xchg
push
or
add
test
or
lea
cmp
xchg
fldt
faddp
call
push
movaps
or
sub
cs
popa
push
fsubs
adc
sub
dec
jge
scas
inc
adc
or
pop
ret
xchg
sbb
inc
pop
stc
jmp
fstp
shrl
bound
out
mov
rorl
adcb
mov
inc
add
jb
or
push
ret
inc
invd
and
adc
adcb
mov
imul
mov
or
mov
inc
mov
aam
in
or
sbb
les
mov
and
jecxz
addb
sbb
cs
xor
imul
fimuls
and
mov
inc
bound
inc
add
xlat
fadds
lods
add
js
xchg
mov
or
or
push
in
int3
into
sbb
cmp
test
popa
push
pop
mov
mov
movsl
sbb
nop
mov
add
mov
daa
lret
cmp
or
sbbl
pop
cmp
dec
addr16
leave
repnz
hlt
xchg
sbb
jl
cld
gs
mov
add
test
lds
iret
or
mov
mov
push
stos
mov
cmp
jmp
xchg
jp
add
mov
inc
imul
negl
jo
jl
xor
cmp
call
xchg
mov
movsl
popf
sti
jmp
stos
add
mov
push
sbb
push
sarb
repnz
test
cmp
lahf
fiadds
adc
push
sbbb
jmp
repnz
aam
imul
pop
loope
jp
iret
mov
add
mov
push
cmpsb
pop
scas
mov
pop
or
xorl
dec
in
xchg
cmp
cmp
in
cmp
sahf
xchg
pop
cmpsb
lock
movsl
mov
popa
test
mov
add
addr16
repz
mov
add
mov
push
add
and
clc
bound
or
cmp
and
jl
push
adc
pop
orl
pop
jne
mov
or
and
or
mov
aas
or
jl
xor
das
pop
mov
lea
cld
push
pusha
push
push
or
repz
dec
je
cmp
popa
sub
mov
sbb
inc
hlt
xchg
xchg
push
int
clc
push
mov
lds
jl
mov
lds
out
mov
je
sbb
cs
inc
mov
or
push
dec
inc
push
push
loopne
inc
pop
add
jb
popa
outsb
fs
gs
jo
push
dec
add
push
dec
popa
sbb
insb
jne
and
jecxz
xchg
out
leave
or
cmpsl
or
pusha
jo
xor
add
push
inc
rep
fs
sub
sbbl
jecxz
and
sbb
scas
bound
inc
sbb
test
dec
or
mov
insb
and
sbb
repnz
ret
popl
lret
sbb
dec
jo
push
pop
mov
push
or
push
dec
cld
sar
mov
dec
fdivs
rclb
jmp
pop
mov
cltd
loop
mov
push
or
popa
aas
add
sbb
push
in
cmp
pop
sbb
ret
sbb
dec
adc
add
loopne
adc
xor
ret
and
jne
cmp
sahf
scas
sbb
mov
jp
sub
lret
inc
xor
jmp
int
cmp
add
sub
mov
sbb
xchg
xor
add
and
sti
cmp
push
add
repnz
clc
or
push
test
ret
pop
add
sub
push
je
cld
imul
pop
loopne
dec
rorb
insb
inc
cmp
repz
in
das
mov
cmp
add
push
lret
cmp
test
mov
mov
outsb
call
pop
add
out
sbb
lock
push
push
and
jl
add
inc
sub
fs
mov
mov
inc
imul
mov
or
aaa
or
rclb
jmp
sub
hlt
or
je
xorb
pop
aaa
jno
addr16
adc
push
clc
and
xchg
or
dec
sarb
leave
sub
sbb
inc
jnp
cmpb
jbe
push
cwtl
scas
add
push
call
sbb
pop
pop
popa
push
bound
nop
cmp
or
push
loopne
enter
rolb
push
jmp
and
sbbb
inc
add
das
or
jne
or
mov
push
add
xor
mov
fwait
push
imul
pop
inc
pop
dec
mov
adc
mov
pop
pop
push
adc
ja
jns
sbb
inc
out
outsb
jne
cmpl
push
sbb
adc
outsb
cld
nop
inc
inc
and
adc
dec
je
inc
fbld
adc
pop
mov
add
into
cli
out
push
je
call
loopne
jo
jbe
das
out
imul
push
ret
jb
dec
ljmp
sbb
or
push
xor
push
cmp
push
lods
cmp
gs
sbb
lock
jo
dec
cmpsl
add
mov
adc
sbb
fistpl
test
inc
sbb
dec
sub
mov
inc
outsb
mov
pusha
mov
inc
mov
push
test
adcb
outsl
fistl
test
mov
jmp
add
sbb
xlat
dec
or
je
dec
lcall
cld
push
or
das
shrl
mov
icebp
fmuls
pop
push
or
push
push
xchg
inc
pop
sub
and
xor
xor
mov
or
andl
std
mov
or
popf
dec
movsb
jmp
pop
pop
aas
mov
mov
adc
mov
jnp
lea
pop
push
sbb
je
sbbb
mov
loop
subb
fnstcw
int3
lret
lret
or
mov
xor
cmp
push
sub
pop
push
mov
cmp
mov
add
mov
cmp
jmp
add
sub
cwtl
jle
jle
ja
push
xchg
sub
lds
sub
inc
adc
push
and
cmp
std
xchg
das
push
pop
mov
mov
inc
sub
dec
pop
adc
shll
addr16
and
inc
xlat
inc
push
inc
into
inc
adc
inc
push
inc
fiaddl
inc
flds
inc
lret
dec
xor
push
leave
or
in
sbb
ret
enter
or
sub
je
jno
aaa
dec
lret
dec
ss
xor
pop
lcall
adc
inc
sbb
sti
mov
std
out
insb
sbb
mov
and
and
lods
or
fwait
push
adc
test
mov
xor
hlt
inc
mov
outsl
and
test
jmp
push
pop
movsb
and
or
ret
enter
xchg
jp
or
cmp
jne
into
and
insb
push
mov
or
rolb
pop
push
test
sbb
xor
aam
lcall
outsb
jmp
mov
daa
xor
enter
pop
sub
nop
pusha
or
in
lods
lahf
sub
and
xor
cmp
jle
sbb
adc
cmp
fwait
rcll
in
pusha
scas
xor
mov
les
shrb
rep
ss
dec
mov
sub
xchg
mov
inc
sub
or
cmpl
push
add
mov
push
leave
int
mov
sbb
or
out
mov
inc
or
mov
mov
xor
cmp
add
call
push
leave
loop
mov
dec
dec
aam
adc
cmp
cmp
or
adc
fnstcw
dec
ret
push
insl
cmc
mov
mov
addb
mov
lea
mov
je
add
sarl
dec
jne
jmp
pop
jecxz
push
sub
cltd
sbb
add
adc
mov
pop
jmp
push
outsl
ret
dec
mov
call
add
loopne
rcrl
adc
sub
dec
dec
pusha
and
sub
jl
or
and
push
shr
jb
andl
lcall
push
neg
jbe
dec
inc
aaa
xchg
xor
pushl
sbb
and
leave
call
loopne
rcr
xor
pop
orl
jbe
or
xor
mov
popf
vpsubsb
dec
xchg
or
sbb
or
ss
lock
ret
shrb
inc
jne
dec
xor
aas
sbbb
push
pop
dec
pop
arpl
mov
ret
inc
cwtl
xorb
sub
cmpl
mov
sarb
in
loopne
mov
jne
add
add
pop
xor
pop
dec
sub
xor
jne
pop
test
inc
dec
or
fsubrs
add
add
adc
sbb
pop
cmp
mov
add
or
push
mov
arpl
xor
cs
test
xor
repnz
mov
or
or
mov
pop
test
cmp
xchg
sti
dec
bound
pop
jmp
add
mov
pop
popa
adc
clc
dec
mov
mov
mov
or
push
je
add
dec
jl
lock
push
mov
enter
rcr
push
mov
push
adc
movl
pop
sub
dec
xor
xlat
nop
xor
inc
inc
jg
sahf
in
inc
add
sub
jnp
enter
imul
fnstcw
xchg
adc
dec
sub
sub
bnd
pop
sarb
sbbl
loopne
mov
movw
rorb
mov
jo
clc
xchg
fwait
dec
inc
push
nop
js
into
dec
iret
dec
clc
cwtl
stc
and
mov
popf
mov
dec
cmp
sub
xchg
push
push
adcl
mov
cmp
push
add
out
cld
popf
cmp
mov
mov
outsb
or
cmp
jge
push
aam
movsb
mov
xchg
enter
pop
sub
cmp
xchg
in
xor
push
daa
jmp
cld
int3
xor
pop
sar
inc
xor
or
pop
xor
add
movsl
pop
xor
adc
or
loop
jmp
pop
nop
adc
cmp
aad
rorb
cwtl
movsb
into
or
test
adc
or
mov
outsl
inc
mov
pop
sub
jmp
xor
bound
data16
or
or
jmp
sub
add
sub
lds
sub
or
dec
jbe
nop
sub
xlat
insl
or
scas
rorb
shrl
dec
pusha
xchg
add
lret
and
lock
mov
cld
jns
aas
aas
inc
nop
je
cmpsb
loop
jns
push
xlat
xor
cli
cmp
mov
movsb
mov
adc
stos
push
hlt
push
pop
xor
and
inc
shlb
mov
push
popa
inc
jl
cmp
clc
pop
call
add
mov
out
sub
rcll
cld
add
cltd
and
sti
test
mov
fwait
jmp
push
dec
addps
and
mov
addr16
clc
std
mov
mov
lret
aad
push
dec
push
dec
sbb
xor
nop
movsb
xor
dec
or
inc
cld
dec
jmp
test
push
or
xchg
cmp
jne
cwtl
mov
pop
call
cld
pop
mov
aaa
add
dec
jmp
xchg
insb
sahf
push
mov
leave
repnz
add
dec
mov
jne
jb
js
or
sub
dec
xor
xchg
pop
lea
xchg
jmp
out
dec
jp
cmp
or
cli
add
imul
sub
ja
add
ret
ljmp
pop
cmp
jne
pop
dec
test
in
pop
add
lahf
sbb
inc
jae
mov
push
push
add
fstpl
int3
sub
and
cmp
pop
fnstsw
xchg
adc
in
loope
push
add
add
jmp
scas
popa
in
sbb
inc
pop
adc
pop
or
pop
jmp
sbb
xor
push
clc
inc
mov
sub
and
loopne
ds
cmp
mov
cmp
out
xor
pushl
xchg
inc
loopne
push
lret
pop
adc
pop
ficoms
inc
sbb
adc
daa
mov
les
das
xor
sub
jb
dec
jl
cmp
jge
sub
xchg
jg
add
std
pop
or
dec
xor
and
fldenv
inc
pop
in
jb
ret
xor
cld
adc
sub
jle
sub
shlb
add
stc
add
lea
pop
mov
adc
aas
cli
dec
fmuls
xchg
dec
rcrb
stc
cmpb
enter
cmpl
jne
sbb
ret
in
loopne
arpl
mov
jo
mov
or
sub
es
ljmp
or
shl
movsb
dec
jae
and
les
mov
call
in
arpl
dec
or
shrb
dec
push
mov
mov
or
sahf
mov
mov
push
push
and
mov
lcall
mov
lea
cmp
mov
dec
sub
pop
adc
inc
jns
test
pop
mov
pop
mov
xor
jb
cli
add
nop
cmp
bound
inc
or
inc
or
and
or
inc
dec
inc
nopl
add
lcall
jmp
fcoml
dec
mov
or
or
inc
adc
pop
jmp
push
add
mov
and
add
pop
add
mov
mov
adc
inc
std
xchg
push
push
lock
adcb
rolb
rclb
pop
call
or
jbe
dec
call
or
adc
sub
push
movsb
loopne
dec
ds
push
and
mov
adc
xor
xor
cmp
iret
arpl
mov
jl
mov
sbb
shll
ja
dec
xchg
outsb
sub
inc
repz
pop
mov
test
inc
lea
push
xor
jmp
addb
cmp
cmp
adc
jmp
push
dec
fildl
sub
mov
inc
add
xchg
xchg
add
loope
add
or
outsl
cld
mov
push
or
and
jle
pop
ret
and
ret
sbbb
and
or
and
dec
or
and
or
adc
pop
xchg
movlps
xor
jmp
and
outsl
xor
adc
xor
inc
pop
mov
and
jle
jb
or
sbb
push
or
ret
xor
pop
jmp
and
push
rcrl
adc
dec
test
push
adc
aaa
jmp
das
dec
jne
pop
ljmp
inc
dec
mov
xchg
fs
mov
setbe
inc
inc
and
popa
mov
xchg
sub
not
push
mov
out
adc
scas
xor
cmp
dec
jp
xchg
call
pop
and
pushf
and
jecxz
xchg
cltd
cmp
inc
sbb
ja
add
sbb
pop
cltd
aaa
inc
ljmp
xor
xchg
lds
xor
je
cmp
mov
cmp
imul
dec
scas
sub
or
shlb
lahf
inc
mov
iret
mov
mov
jbe
or
pop
loop
imul
fs
xchg
cwtl
push
jmp
dec
lcall
loopne
fs
pop
lods
inc
cld
push
pop
push
pop
sbb
sarl
jg
orb
pop
mov
data16
mov
mov
mov
xchg
out
pop
lock
mov
sbb
adc
mov
add
leave
add
add
push
call
sbb
adc
insl
call
mov
push
or
clc
std
push
cmp
or
add
xor
jge
lock
sbb
ja
mov
xlat
imul
lock
sti
inc
xor
adc
mov
inc
scas
mov
pop
decl
lods
mov
lock
lea
push
mov
popf
cmp
leave
adc
sbb
xchg
push
mov
into
aaa
call
enter
mov
out
dec
adc
jb
add
loope
sbb
sub
inc
push
aam
iret
bound
fiaddl
ret
cwtl
push
cmpl
add
int
or
orb
cmp
inc
xchg
or
lea
rclb
or
xor
and
out
lret
mov
xchg
filds
add
stos
push
inc
in
push
xchg
inc
xor
shl
dec
clc
jne
daa
mov
push
adc
push
push
pop
mov
inc
pop
mov
pop
jae
mov
pop
pop
mov
xlat
inc
mov
and
adc
adc
push
cs
push
in
mov
pop
pop
les
jmp
or
or
mov
add
adc
mov
inc
call
les
adc
jne
ss
js
dec
pop
pop
clc
inc
adc
adc
addr16
push
add
or
call
adc
jmp
dec
fwait
adc
add
dec
out
mov
xchg
lahf
push
clc
and
xchg
adc
sbb
sub
add
push
push
mov
push
and
push
das
lods
jp
mov
push
addr16
sbb
adc
push
adc
fs
adc
cmp
loop
or
add
pop
cmp
add
ja
data16
and
adc
mov
jbe
sub
sub
add
pop
push
cmp
sub
rolb
cli
and
mov
push
xchg
xor
xchg
xor
stos
dec
xchg
mov
je
inc
jmp
sti
or
mov
ret
cmp
movb
ret
dec
sub
inc
lods
pusha
movsl
inc
adc
push
sub
rorb
test
mov
dec
test
imul
xor
xlat
mov
addb
add
addr16
popa
mov
cmc
inc
inc
adc
mov
mov
lret
sbb
cmp
inc
out
mov
iret
push
jns
jle
sti
push
add
push
repnz
inc
and
adc
pushf
and
shr
cmp
sub
ret
and
inc
enter
lods
pop
mov
xor
push
bound
sbb
rcrl
or
in
fdivs
jnp
fadds
dec
push
cmpsb
popa
xchg
dec
popf
push
mov
cs
add
shll
adc
cmpb
jmp
or
or
and
mov
xchg
and
xorb
cmp
adc
adc
data16
inc
mov
shrl
shlb
movaps
xchg
add
pop
push
add
jns
fs
sbb
and
shll
and
cmc
loope
cmpsl
and
fsts
sbb
data16
popa
das
jb
push
sbb
jae
sbb
mov
loope
mov
pop
mov
adc
enter
inc
repz
adc
mov
push
mov
xchg
add
mov
and
cmp
jne
ja
xor
push
mov
push
pop
iret
xchg
and
lods
je
sub
pop
cmp
out
add
sub
xchg
inc
or
pop
mov
add
mov
cmp
jne
xchg
outsb
dec
mov
ljmp
pop
shl
add
idivb
sbb
add
fmull
popl
pusha
insl
push
inc
das
leave
popa
nop
mov
pop
int3
adc
pop
int3
or
nop
mov
cmp
cmp
roll
sub
sbb
shll
cmc
test
or
lret
loope
sub
dec
popf
movsb
sub
cmp
xchg
dec
push
push
jg
add
push
push
dec
or
lock
xor
cld
mov
in
fcoms
cmp
pop
sub
popf
inc
dec
scas
or
repz
imul
test
xchg
add
and
sbb
loop
or
jecxz
aam
or
dec
or
clc
cmpsb
adc
subl
lds
and
push
jae
inc
sbb
inc
jo
mov
pop
cmp
and
imul
adc
sbb
mov
jecxz
call
cmp
cmpsl
jae
nop
adc
and
je
sub
cmp
add
or
mov
pop
and
xlat
or
adc
jp
push
push
xor
jg
mov
inc
call
bound
pop
mov
xorl
mov
sub
mov
or
inc
jmp
push
mov
out
cmp
test
call
sbb
lods
and
insb
out
sub
pop
push
insl
ficoms
mov
mov
push
aas
sbb
or
fists
add
mov
enter
add
ret
jg
xchg
mov
push
mov
fcmovne
cwtl
nop
stos
mov
mov
sub
orl
dec
lock
pusha
mov
jo
push
or
call
or
xor
mov
dec
pop
sub
mov
push
out
xchg
mov
dec
sbb
test
hlt
mov
mov
rorb
fsubl
in
dec
or
inc
dec
and
cmp
enter
mov
test
mov
nop
sub
push
xor
mov
sbb
cmp
sbb
mov
or
call
in
stos
iret
js
test
pop
fsts
mov
out
add
rep
add
push
wbinvd
sbb
push
add
cmpsb
jno
or
mov
adc
and
xchg
sub
cld
pop
push
push
or
inc
les
cmp
jg
add
and
nop
fwait
nop
mov
jno
sbb
push
push
test
xchg
fisttpl
and
xchg
repnz
jb
cmp
sbb
mov
and
xchg
cli
enter
jb
cmp
sbb
loope
inc
loop
jecxz
in
in
jno
out
call
inc
sub
ljmp
in
jb
cmp
sbb
mov
and
xchg
ror
aam
aad
cmp
sbb
mov
and
xchg
fcmovne
fsub
fnsave
cmp
sbb
mov
and
xchg
ret
enter
jb
cmp
sbb
mov
and
xchg
lret
enter
jb
cmp
sbb
mov
and
in
jb
cmp
mov
enter
jb
cmp
shlb
push
les
adc
push
mov
xchg
frndint
outsl
lahf
ds
mov
and
or
and
dec
in
cld
in
mov
leave
push
ja
xor
xor
or
arpl
je
or
aam
pop
cmp
adc
icebp
dec
push
js
inc
dec
gs
push
jo
or
and
push
adc
add
dec
or
jb
rol
pop
pop
enter
and
mov
pop
or
dec
outsb
mov
in
pop
fs
test
sub
je
add
insb
inc
fdivrs
push
xor
cmp
test
enter
mov
cltd
push
inc
mov
iret
push
adc
adc
mov
or
imul
add
jp
adc
insb
xchg
add
outsb
addr16
scas
pop
movsb
sub
or
jbe
add
outsl
ja
sub
inc
fs
and
or
dec
pop
sub
testb
mov
cld
js
sub
fs
jo
mov
pop
enter
shl
test
and
or
call
sub
xor
pop
fs
sub
push
outsb
push
fs
adc
mov
fmuls
push
je
repz
pop
pop
movsl
or
or
xor
xor
mov
test
je
jo
jo
mov
adc
sbb
outsl
mov
push
int3
pop
mov
sub
mov
arpl
mov
insb
popa
xchg
mov
xor
dec
mov
icebp
push
jb
jns
pop
gs
nop
test
test
push
inc
push
je
arpl
addl
loopne
jo
fdiv
xchg
jo
inc
imul
cmp
int
daa
enter
movlps
sbb
in
mov
xchg
adc
enter
or
ret
popa
dec
outsl
fs
and
push
and
nop
jo
inc
bound
push
mov
pop
hlt
and
stc
jo
dec
or
lods
jg
lods
push
inc
int3
mov
subl
adc
jo
les
aaa
xor
cwtl
push
dec
cmpsb
or
or
jae
inc
jne
mov
and
cmp
call
add
fs
mov
ljmp
pop
or
pop
jp
xchg
lods
pusha
pop
lret
mov
mov
imul
cld
xchg
mov
insl
push
adc
test
insb
jne
movsb
movsb
test
out
sub
mov
cmpsl
aaa
shlb
adc
jb
rcrb
lock
and
sub
jmp
pop
out
daa
lret
dec
loop
test
js
repz
jne
mov
jbe
xor
inc
inc
ret
or
lock
add
sarb
fsubr
fldenv
movsb
mov
inc
dec
les
push
push
xor
idivl
popf
jecxz
cwtl
cli
cmp
add
pop
mov
adcb
pop
pop
sub
in
add
add
mov
rcl
add
mov
dec
jne
push
insb
dec
xor
fldenv
sahf
pusha
xor
and
push
imull
xchg
call
inc
or
sub
push
ret
push
movsl
in
add
push
pop
mov
or
push
mulps
mov
jnp
xor
sbb
imul
add
or
sbbl
faddp
setb
jmp
mov
dec
add
icebp
dec
int
jecxz
stc
mov
enter
mov
cs
rcrl
loope
lret
mov
ret
dec
ret
inc
rcrb
adc
lret
push
iret
dec
lret
pop
mov
or
and
pop
add
movsb
xchg
mov
fmull
stos
ret
pop
aas
es
cwtl
and
pop
loopne
or
push
lock
scas
cwtl
push
add
ret
xchg
shlb
cltd
and
sub
xor
clc
mov
adc
cs
jg
mov
pop
ljmp
cmp
call
dec
push
mov
add
jne
dec
mov
or
ljmp
jl
cmpb
or
push
mov
jmp
xchg
es
push
pop
jne
mov
or
xor
dec
mov
jl
push
and
inc
push
xorl
ds
xor
push
dec
lret
push
jns
push
lods
test
push
mov
pop
pusha
rcl
cmp
push
lock
lea
mov
test
xchg
sbb
pop
cmp
movsb
lret
test
filds
xor
lea
push
and
hlt
inc
clc
cld
call
jns
mov
pop
push
lock
sbb
cmpsl
push
jp
cli
fstpl
pop
and
in
dec
or
sbbl
and
xchg
adc
lock
nop
mov
movsb
xchg
loop
popf
rclb
lds
sub
test
les
cli
adc
andl
push
push
bound
sub
not
jns
pop
pop
jb
clc
shr
dec
cmpsb
std
sbb
xor
push
push
jns
lret
dec
push
pop
sbb
sub
push
sub
mov
xchg
bound
movsb
pop
xor
or
mov
cmp
popa
loope
jp
sub
mov
sbb
or
push
add
je
fildl
push
inc
fld1
jl
nop
call
das
inc
aam
xchg
clc
mov
or
add
je
inc
mov
cmp
dec
repnz
fcom
xchg
or
in
pop
sbb
testb
imul
jno
sub
xchg
jecxz
add
add
fistpll
mov
adc
lea
test
pop
cmp
or
sub
or
cmp
or
sbb
call
dec
pop
mov
jns
inc
andb
lret
xchg
cmpsb
or
js
push
into
ljmp
jge
xchg
hlt
cmp
or
je
popf
jecxz
mov
aaa
pop
stos
shlb
lahf
push
sub
jmp
das
repnz
rorl
incb
out
sub
fsubrl
push
xor
xor
and
lods
jmp
les
mov
cs
mov
fsubl
fsubs
xor
mov
push
xorb
out
or
dec
loop
loop
dec
je
xchg
or
mov
xchg
stos
push
cmpsb
xor
cmpl
push
or
mov
arpl
pop
mov
sahf
jmp
cmp
test
push
xor
xchg
ja
imul
movzbl
rolb
incl
inc
xchg
in
jmp
in
cmp
fsts
decb
nop
ret
addr16
sbb
je
test
fiadds
mov
cmp
nop
push
pop
xorb
xor
in
push
pushf
push
add
and
lds
rorl
xchg
or
and
xchg
adc
xor
or
in
rorb
xor
nop
ja
call
fcompl
shl
cld
jno
repnz
faddl
xchg
andb
addr16
stc
adc
dec
jg
add
repnz
test
or
push
add
inc
jmp
insb
inc
cmpsl
mov
jo
adc
insb
stos
inc
pop
enter
adc
add
ficomps
jno
cmp
adc
movsb
punpckldq
cmpl
jbe
sub
nop
add
xor
and
lods
add
enter
js
cmp
fldl
add
dec
and
dec
ja
insl
push
mov
call
add
mov
rorb
xchg
movsb
pop
and
sbb
or
cld
sub
mov
lahf
dec
cmp
icebp
pop
and
dec
leave
mov
or
hlt
jmp
add
jmp
jo
test
int
inc
je
jg
push
inc
fnstsw
fldl
add
adc
testl
add
adc
sub
and
cmp
add
adc
adc
or
mov
mull
mov
push
jno
xchg
mov
inc
iret
xchg
movsl
or
pop
ds
cli
xchg
ret
stos
xor
mov
pop
pop
ret
xor
sbb
lret
xchg
icebp
xchg
int
outsl
daa
jmp
sti
lret
push
adc
les
or
fdivrl
add
call
inc
add
jmp
mov
das
adcl
shr
cmp
inc
int
push
xchg
xor
mov
loopne
lock
test
inc
loop
psrlw
insb
pop
dec
cld
lea
inc
mov
lods
es
add
ret
jmp
aad
mov
mov
ljmp
inc
push
cmp
js
push
xchg
sub
xchg
push
in
dec
jl
jmp
mov
xor
stos
or
xchg
jge
lcall
push
sub
or
add
push
xor
fsubrp
repz
or
cmp
ror
jg
jmp
cmp
lock
pop
pop
pop
out
and
push
mov
push
sti
adc
mov
mov
adc
adc
repnz
andl
jle
dec
mov
test
dec
jge
add
xchg
ljmp
pop
in
jge
movzwl
sub
add
cwtl
pop
adc
ds
inc
mov
adc
mov
jmp
xor
xlat
cwtl
das
sub
adc
je
add
ja
xor
jle
mov
sbb
popf
and
pop
or
sbb
decl
dec
gs
pusha
inc
jmp
aaa
test
dec
imul
inc
enter
or
add
jge
or
adc
jp
stos
jg
mov
aam
xor
sbb
jl
dec
sbb
xor
and
in
fxch
sbb
mov
inc
lea
loop
orl
inc
stos
or
pop
inc
clc
inc
sub
loop
xchg
pop
stos
xor
dec
js
push
dec
push
mov
sub
add
pop
add
mov
dec
sti
movsb
push
aaa
aas
mov
ds
adc
je
loope
mov
jmp
dec
out
inc
pop
je
push
mov
dec
add
inc
movsb
push
add
cmovnp
test
in
fdivs
jmp
or
das
jne
sahf
mov
add
dec
nop
or
jne
movsb
das
stc
in
ret
fsts
dec
adc
or
cld
cmovo
push
lret
cwtl
mov
xor
imul
dec
mov
cmp
je
push
push
fldenv
in
mov
or
cltd
pop
lods
popf
add
pop
cs
loop
pop
push
or
aam
icebp
mov
and
outsb
inc
add
pop
out
sub
jne
push
sub
add
test
sub
sbb
je
sub
cs
cmp
fisubl
adc
xor
daa
sub
in
sub
xchg
call
cld
es
test
call
ss
pusha
lea
pop
or
data16
xchg
mov
and
cmp
or
fs
adc
xchg
or
add
sbb
inc
in
mov
cs
sbb
adc
sar
inc
xchg
inc
mov
pushf
in
fabs
dec
lods
call
jl
xor
mov
jl
fstsw
mulb
inc
pop
pop
xorb
les
jne
push
cli
add
mov
inc
es
dec
add
call
sbb
add
sahf
add
xor
stos
sbb
clc
add
or
rorl
push
mov
dec
add
cmp
jae
cmpb
cld
and
add
or
add
ja
jmp
movw
gs
and
andl
cld
push
or
fadd
ljmp
add
je
out
xchg
ficompl
pop
adc
add
imul
fadds
test
or
loop
orb
sub
sub
fidivl
repnz
push
inc
rorb
je
push
sbb
fildll
cli
mov
dec
or
add
mov
push
imul
or
add
mov
sub
jmp
add
jne
dec
loopne
jmp
test
add
push
and
sbb
and
xchg
inc
ljmp
sub
movb
adc
aas
in
idivl
cmp
pop
call
sub
push
mov
xchg
xchg
cmp
in
cmpsb
add
call
sti
xor
or
and
add
pop
xchg
stos
or
loopne
mov
frndint
ret
mov
shl
testb
nop
push
add
icebp
xorl
jo
insb
cli
popf
push
inc
inc
imul
dec
sbbl
inc
out
sbb
fadd
in
data16
jge
or
mov
cmpl
add
or
sti
sbb
and
pop
inc
ja
bound
push
int3
lods
data16
pop
dec
incb
ret
jmp
sub
or
shll
icebp
insl
adc
mov
scas
sub
push
inc
mov
inc
stc
std
repz
or
and
nop
sub
sbb
mov
pop
cwtl
js
add
mov
into
push
imul
pusha
test
jne
mov
sub
or
add
pop
jbe
and
adc
mov
dec
hlt
shrl
add
pushl
xchg
push
or
adc
enter
dec
in
test
cld
dec
mov
sub
or
and
jmp
rolb
xor
push
in
dec
mov
mov
add
jl
shr
pushf
rclb
sbb
in
dec
adc
in
ret
mov
add
lods
mov
xchg
pop
in
sbb
sub
imul
xor
movzwl
mov
add
shl
scas
push
and
sub
fs
pop
stos
adc
decl
push
ret
mov
and
dec
fwait
sub
xchg
cmp
ss
adc
xor
decl
add
mull
and
hlt
in
ret
fs
inc
push
xchg
mov
cmp
or
jno
mov
or
xchg
sahf
adc
les
cmpsl
and
push
in
dec
push
inc
sarb
stos
or
jbe
cwtl
xchg
sbb
icebp
xchg
fwait
leave
push
sbb
les
decl
insl
inc
xchg
push
cmp
shr
or
inc
jle
pusha
icebp
dec
lea
adc
jb
dec
adc
mov
push
push
mov
push
aam
dec
and
add
add
push
pop
clc
jae
jmp
jmp
xor
mov
fs
mov
insb
sbb
dec
push
add
push
daa
mov
jno
inc
jbe
fistpl
mov
push
es
aam
adc
or
shl
insl
lock
inc
sbb
ret
int
hlt
push
hlt
out
cmpsb
les
adc
cmp
mov
inc
sbbl
pusha
jne
sub
popa
ds
insb
and
pop
add
stc
lods
fcompl
mov
jno
pop
dec
in
scas
jno
dec
test
push
fnstcw
test
jae
jmp
jo
or
xchg
inc
std
adc
lds
jecxz
mov
add
and
add
negb
jle
je
or
movsb
pop
adc
adc
or
and
mov
movsb
int3
jns
loope
jge
nop
leave
mov
dec
sub
inc
decl
dec
scas
ret
sahf
rorl
push
add
popf
rcll
shlb
fistpl
xchg
jbe
lock
jae
test
popa
push
inc
aam
mov
js
dec
pop
fcmovnbe
in
adc
push
cmp
jb
dec
fnstcw
add
test
push
push
add
mov
push
lock
push
add
jne
sub
sub
movsl
sub
jp
jb
xchg
pop
in
xor
pop
ds
mov
sub
mov
inc
xor
push
mov
or
and
lret
jecxz
addb
inc
pop
scas
sbb
fisubl
repz
fsubr
push
and
inc
hlt
sbb
and
push
lcall
xor
loop
adc
cmp
jle
shr
ss
push
push
inc
adc
bt
cmp
cmp
mov
lret
push
loopne
cld
jmp
jo
lea
lahf
nop
sub
dec
mov
ds
stos
andb
add
adc
sub
push
ljmp
xor
popa
pop
je
add
nop
aaa
mov
jmp
add
test
mov
jmp
ficoms
pop
je
in
mov
xor
jno
xchg
hlt
adc
jns
loope
cmp
sub
cmpsb
and
jb
sbb
mov
popf
into
pusha
or
cmp
and
pop
push
lea
dec
push
std
dec
and
inc
das
jne
push
cwtl
out
inc
std
mov
aam
and
inc
jne
pushf
sbb
mov
cs
sbb
fcomps
xor
add
sbb
inc
and
incb
sbb
mov
xchg
test
iret
and
daa
aaa
imul
sub
mov
push
lcall
cs
aad
inc
gs
cs
ret
mov
inc
add
xchg
aas
cwtl
test
xchg
and
lods
out
adc
and
or
fldcw
es
mov
push
sbb
lahf
add
xchg
les
push
nop
mov
lea
push
push
jecxz
xchg
and
pop
jbe
mov
jbe
push
cmpsb
add
or
int3
pop
dec
sub
dec
sbb
mov
pop
hlt
jl
aam
push
inc
sbb
pop
sbb
inc
inc
and
push
or
int
mov
push
lret
pop
test
jmp
jae
dec
addr16
push
sahf
jae
or
cmpsl
sbb
aas
ss
cmp
inc
and
aam
sub
and
pop
dec
hlt
xchg
arpl
sub
ljmp
repz
rcrb
add
jmp
or
sub
mov
xchg
inc
mov
ja
test
bound
or
push
daa
pop
fisttps
cld
dec
ret
cmp
lods
inc
ja
push
dec
push
leave
mov
int3
sarl
icebp
je
sbb
ret
out
push
lret
xchg
leave
lods
jnp
js
clc
mov
into
jp
cwtl
popl
push
lea
push
or
add
arpl
ljmp
xor
call
lock
inc
lock
push
jg
or
xor
hlt
inc
mov
mov
or
clc
jle
sahf
inc
push
inc
or
jmp
scas
addb
pop
inc
fnstcw
jo
test
mov
pop
pop
mov
sub
jns
or
pop
dec
push
sub
sar
lret
or
add
ljmp
sti
dec
nop
push
jbe
sub
xchg
or
mov
in
lea
dec
cmp
je
pop
and
nop
ret
lcall
sub
push
cld
jl
shlb
cmp
dec
or
jp
dec
shrl
and
das
jmp
inc
pop
mov
sahf
jmp
cmp
in
jg
icebp
divb
pop
push
lock
dec
nop
in
dec
push
loopne
cltd
scas
sub
test
dec
pop
mov
xchg
fcoms
adc
cmp
insl
xchg
lock
xor
xor
mov
sub
cmpsl
cwtl
pop
call
lcall
xchg
jae
adc
or
ret
push
push
inc
fsubrl
jle
pop
sub
inc
push
and
jmp
sbb
aas
loopne
aas
aaa
and
xor
jmp
das
and
andl
add
fwait
add
push
add
or
or
or
or
pop
nop
int3
movsb
xchg
out
jl
test
nop
inc
pop
lock
mov
nop
lods
enter
sbb
cltd
fistpll
shlb
pop
cld
cmpl
jg
inc
xchg
inc
loopne
bound
mov
sbb
jge
xchg
scas
test
test
fildl
xchg
cmpsb
in
mov
sub
inc
mov
lea
fsts
jb
jns
push
and
mov
shlb
ror
movsb
adc
daa
shlb
and
mov
mov
mov
pop
cltd
cmp
pop
cltd
xchg
xchg
or
test
mov
and
adc
or
sub
out
jl
mov
xchg
xor
xchg
jl
aad
mov
imul
adc
cmp
rcrb
ret
ljmp
test
or
mov
push
or
fs
push
push
ja
js
inc
lock
mov
icebp
aas
adc
push
rolb
mov
jge
lcall
push
mov
sbbb
in
mov
cwtl
cs
xchg
insb
pop
inc
xchg
pop
fistl
testl
jge
push
cmpsl
lcall
mov
xchg
cwtl
or
lock
mov
xor
je
mov
aam
push
nop
mov
sbb
or
or
sub
les
inc
or
pushf
leave
sub
push
inc
mov
cwtl
test
xor
leave
adc
test
add
and
pop
test
mov
bt
cs
adc
or
shrb
jne
adc
xor
aam
and
or
push
or
push
adc
cmp
fcmove
mov
cwtl
dec
cli
clc
test
data16
pusha
xchg
clc
xor
lret
out
or
jnp
mov
jnp
add
or
adcl
jb
push
inc
sub
enter
cmpb
or
incb
fadds
add
add
adc
inc
add
mov
or
cmpb
mov
cmp
jecxz
adc
pop
adc
push
fimuls
cmpsb
mov
sub
inc
sub
pop
fwait
dec
mov
pusha
sub
mov
incl
xor
dec
lock
mov
jae
sbb
cmp
and
sub
mov
jne
mov
mov
mov
clc
nop
cmp
xchg
insb
lea
add
je
add
inc
sbb
movl
hlt
sbb
mov
inc
mov
push
inc
inc
hlt
and
hlt
xor
adc
out
cs
fsubs
orl
jge
bsr
stos
adc
adc
je
and
add
imul
sub
pop
call
jb
inc
mov
stc
sahf
push
and
or
fcompl
ljmp
or
cmp
xorb
stc
movsl
data16
or
pop
ja
and
fadd
push
in
sarb
adcb
add
jae
inc
test
or
adc
xorl
adc
mov
sbb
add
mov
sub
rol
lcall
inc
or
mov
movsb
cltd
dec
mov
cwtl
or
adc
test
xor
pop
fs
dec
and
ljmp
jne
mov
pop
mov
or
add
xchg
ret
mov
or
jno
sub
cmp
xchg
les
cmp
lea
adc
mov
addb
and
push
and
mov
cmp
or
ss
rcrb
jbe
or
test
inc
sbb
adc
push
mov
adc
mov
mov
pop
sti
jne
jle
dec
je
adc
jne
dec
push
inc
sub
test
call
arpl
and
adc
dec
in
pusha
jge
dec
adc
push
dec
enter
lock
daa
fs
clc
fwait
mov
sub
sub
ljmp
loop
jmp
pop
mov
sub
nopl
adc
mov
dec
in
outsb
sbb
and
aaa
nop
test
fmull
add
xchg
pop
mov
sbb
sarb
mov
adc
adc
mov
ret
mov
mov
sub
xor
add
and
push
or
mov
add
adc
syscall
push
int3
mov
mov
or
mov
enter
or
test
push
or
les
aas
and
les
adc
bound
hlt
mov
insb
adc
int3
sti
xchg
cld
push
hlt
mov
inc
mov
jb
ss
stc
inc
or
dec
out
cmp
ljmp
push
outsl
jmp
enter
cmp
fs
popf
jo
pop
insl
push
add
fs
mov
popa
insl
or
jo
inc
dec
push
xor
jb
loope
adc
and
cmp
cmp
into
test
testl
add
adc
data16
mov
push
lods
outsb
push
xchg
lds
push
call
pop
xor
jl
mov
pop
or
mov
dec
cltd
movsl
pop
les
imul
push
jo
arpl
inc
dec
js
movsl
push
mov
or
ret
xchg
lock
inc
fmuls
xor
pusha
rorb
enter
shrb
addr16
adc
xor
inc
lock
cwtl
cltd
fsubl
nop
adc
and
mov
mov
addl
and
and
inc
push
fmuls
inc
dec
mov
adc
and
dec
sub
cmp
adc
fs
adc
or
lcall
push
les
lock
sbb
aam
call
sbb
loopne
dec
jb
and
jb
and
ja
xchg
mov
rclb
dec
enter
sbb
les
or
rolb
mov
push
pushf
cmp
mov
orb
and
rcll
lods
sub
test
call
dec
je
mov
pushf
dec
adc
fs
dec
in
fs
dec
nop
or
adc
clc
pusha
xchg
mov
enter
sub
or
inc
cld
cmpsb
and
jl
cmpsb
or
js
mov
rcrb
cltd
or
adc
and
adc
cltd
js
adc
clc
cmp
cltd
sbb
enter
push
popa
js
mov
inc
mov
pop
jnp
ss
or
sub
cmpb
sub
xchg
icebp
mov
mov
pop
adc
xor
add
sbb
or
sub
mov
mov
inc
aaa
dec
test
nop
shlb
sub
adc
aam
dec
or
movsb
push
mov
or
cwtl
pop
xchg
or
mov
jl
mov
rclb
xor
out
adc
mov
mov
push
fimull
inc
aam
subl
mov
adc
sbb
mov
pop
xlat
loope
fimull
shlb
lods
xchg
xor
jno
cmpsb
lret
jb
and
jae
fldt
cwtl
loope
js
cmp
in
fcmovne
les
sub
add
pop
mov
fsubs
test
jbe
pop
mov
add
dec
mov
mov
xor
inc
dec
jne
jmp
inc
push
hlt
jns
add
push
aas
mov
in
fsub
cs
sbb
and
stos
add
xor
mov
std
dec
lcall
add
mov
test
daa
push
dec
sbb
dec
cld
js
cli
and
fxch
and
cld
or
testl
jmp
cs
lods
push
and
subb
sub
out
push
lret
xchg
cmp
hlt
jne
scas
shll
add
daa
dec
sub
leave
lds
mov
aas
daa
pop
pop
mov
jnp
and
adcb
adc
pop
imul
push
dec
lods
cld
lcall
xchg
test
adc
lea
pop
movsl
dec
shl
mov
and
mov
xor
clc
mov
adc
orl
enter
jo
pop
loopne
jmp
mov
add
add
xrelease
and
dec
dec
dec
movsb
xchg
jne
push
frstor
mov
lahf
mov
push
sti
dec
adc
lret
xor
inc
pop
jne
sbb
jmp
and
cmp
sbb
imulb
pop
fstps
roll
stos
pop
popa
inc
mov
ljmp
sub
mov
shll
add
push
std
xchg
leave
into
and
pop
mov
and
shll
push
jmp
push
es
cmp
and
add
loopne
rsqrtps
push
loope
dec
js
js
or
pop
or
outsb
xor
sbb
or
push
inc
sbb
sbb
sbb
sbb
push
loop
adc
sbb
xchg
sbb
and
and
push
test
and
and
adc
inc
push
mov
sub
sub
enter
push
adc
test
stc
xchg
sbb
inc
call
push
ret
je
rorl
call
mov
bound
inc
jp
sbb
imul
xchg
aam
ljmp
push
mov
sub
adc
dec
mov
mov
add
lea
xor
test
jnp
nop
mov
mov
sbb
mov
sub
cmp
mov
sub
push
and
data16
push
fidivrl
and
addr16
sub
mov
xchg
dec
sbb
adc
jb
xchg
xchg
push
jp
popf
test
mov
fnstcw
je
sub
cmpsb
fadds
in
sbb
dec
xor
ficompl
cmp
shlb
push
lret
xchg
xchg
std
lret
jp
movsl
adc
or
jne
sbb
cwtl
cmp
jae
jg
ret
push
nop
lock
push
sbb
or
push
inc
mov
mov
push
xor
shlb
jle
adc
add
dec
jne
jg
and
lea
mov
and
ret
test
inc
stc
and
or
mov
push
cmpsb
pop
shlb
stos
xchg
adc
and
or
add
push
adc
mov
dec
dec
inc
push
loop
stos
pop
adc
ja
popa
in
dec
xor
mov
mov
test
mov
mov
ds
or
inc
push
jp
popf
pop
pop
loope
in
or
mov
inc
sub
add
mov
xchg
push
movsl
push
adc
push
xchg
iret
cmp
mov
pop
pop
xor
xchg
insb
sbb
jo
adc
and
test
push
addr16
leave
xchg
xchg
dec
xchg
int3
inc
test
push
xchg
pushf
fs
xor
mov
loopne
or
outsl
xchg
sbb
sbb
pop
and
out
fadds
out
xchg
out
pop
lret
dec
aam
gs
push
push
dec
pushf
adc
jl
pushf
inc
out
leave
leave
push
aas
xor
movsl
jo
adc
and
loop
les
out
adc
and
loop
les
out
adc
or
and
jb
cmp
sbb
mov
mov
sahf
loopne
mov
cltd
or
sbb
mov
inc
test
mov
in
jb
cmp
push
pop
xchg
push
enter
jb
cmp
sbb
xchg
fst
das
cli
cmp
dec
ret
daa
cmp
push
xchg
mov
xchg
in
imul
pusha
popf
inc
mov
adc
cltd
mov
addr16
testl
leave
test
cmpsb
add
sub
cmpsl
mov
sbb
sub
xor
jge
xor
and
sub
aaa
sub
inc
rorb
pop
cmp
sub
xchg
cmp
repz
cmp
and
add
cmp
cmp
lock
xor
jnp
imul
ja
jae
add
mov
jmp
je
adc
mov
mov
or
cld
inc
js
mov
outsb
imul
jae
sbb
dec
push
in
or
jae
fildll
je,pn
adc
adc
and
int
sub
aam
in
jo
cld
mov
adc
push
out
add
jb
pop
inc
xor
pop
cli
pop
out
add
out
pop
dec
jne
mov
sbb
cmp
test
and
fsubr
dec
xorb
je
cmpl
jg
and
aas
aas
add
or
xor
and
stos
inc
cmpsl
sbb
adc
add
mov
daa
push
ds
mov
repnz
scas
cmpsl
cwtl
das
inc
mov
call
jge
jae
bound
adc
inc
icebp
adc
lea
add
or
cltd
inc
xor
xchg
xchg
xchg
mov
fwait
cmpsl
inc
mov
call
adc
adc
pusha
xorl
inc
shlb
scas
sbb
ds
call
jmp
lods
lods
orb
jecxz
dec
sub
cmp
push
movb
jae
xor
add
pop
stc
leave
popa
aas
pushf
pusha
push
dec
pusha
icebp
push
xchg
or
ja
xchg
push
xor
jmp
mov
pusha
cmpsb
lds
addb
push
inc
mov
inc
adc
add
mov
or
rorb
adc
sarb
je
push
sub
loope
pop
cmpb
mov
mov
push
lret
and
leave
lar
sub
fldl
push
mov
lds
into
cmp
sbb
add
inc
adc
mov
ja
or
add
rolb
call
add
sbb
pop
sub
mov
jl
sbb
push
ret
in
inc
pcmpeqd
dec
repnz
xchg
dec
sub
mov
test
cmp
pop
sub
inc
adc
and
and
or
cmp
push
and
out
cmpsl
adc
cld
sets
mov
xchg
sbb
add
repz
nop
mov
mov
xchg
mov
cmpsb
sub
add
jmp
loopne
and
mov
mov
cli
loop
shll
cmp
xchg
mov
cmp
or
pop
inc
cmp
push
lods
and
xchg
lahf
dec
es
adc
inc
cmpsb
lock
icebp
dec
testl
call
sbb
aas
add
adc
sbb
fsubrl
sub
es
dec
dec
dec
orl
adc
les
nop
or
scas
adc
pop
or
gs
push
adcl
aam
jnp
data16
clc
hlt
leave
inc
or
jmp
mov
and
mov
daa
or
push
mov
movsb
sub
adc
mov
dec
sub
xor
sbb
push
mov
in
sub
add
or
mov
test
test
and
push
lods
sub
or
mulps
insl
addb
fists
fcoml
daa
push
inc
sub
nop
fsubrl
mov
push
negl
clc
sbb
inc
xchg
xchg
sub
push
jne
mov
mov
push
push
les
cmp
sub
arpl
sbb
subw
lods
adc
xor
clc
mov
andb
rol
mov
inc
in
mov
adc
push
popf
mov
lahf
or
push
or
ret
mov
in
sahf
sbb
sub
fsubrs
lret
sub
jecxz
cmp
and
jns
dec
nop
pop
rclb
call
mov
stos
test
or
adc
ds
call
mov
inc
cmp
add
and
pop
xor
push
popa
jg
pop
push
popa
adc
bswap
push
sub
mov
jmp
xchg
inc
lea
add
repnz
and
cmp
ret
lods
std
adc
rorl
sti
sbb
int3
sub
fndisi(8087
movsb
outsb
dec
gs
jns
fbld
inc
mov
or
rorb
jmp
and
xchg
repz
dec
inc
cltd
outsl
dec
pop
or
add
je
sub
pop
mov
jo
movsb
sbb
dec
adc
lds
jne
add
jne
loopne
push
and
add
and
jecxz
push
and
lea
inc
inc
fisubl
fimull
lods
pop
fmull
dec
lcall
xchg
adc
xchg
and
aam
jno
fdivrs
sti
push
jae
pop
cmp
cmp
jmp
pop
scas
enter
adc
popf
mov
inc
inc
pop
clc
int
in
cltd
push
or
inc
fsubrp
and
mov
and
int3
pop
out
or
int3
push
dec
xchg
mov
cmpsb
push
loop
gs
daa
icebp
dec
loopne
enter
and
data16
rclb
xor
decl
mov
aam
push
jmp
mov
in
inc
dec
hlt
data16
xchg
xchg
adc
lret
subl
sahf
repnz
es
ds
bound
dec
mov
jp
mov
or
jne
inc
bound
roll
ljmp
and
shll
cwtl
and
add
out
jne
aaa
arpl
push
add
lret
enter
sub
xchg
inc
fldenv
xchg
and
mov
gs
and
shlb
push
lods
and
pop
adc
cltd
les
dec
sub
pop
sbb
adc
ja
ret
rclb
ret
in
adc
add
loop
cmp
pop
sub
mov
cltd
lods
movsb
xchg
scas
insb
ljmp
add
sahf
push
dec
or
clc
inc
dec
sub
leave
sbb
lods
testb
andb
dec
lock
call
mov
jp
push
or
mov
jbe
xchg
add
push
cmc
push
cmpsl
xchg
adc
dec
push
es
sbb
push
or
add
sub
or
add
push
adcl
cmp
sbb
xorl
or
ret
jbe
sbb
sub
mov
or
sub
or
rolb
and
shrl
pop
call
out
adc
push
lods
movsl
sbb
push
enter
or
push
sub
repz
adc
out
sbb
call
jnp
mov
and
ss
jb
add
cwtl
mov
mov
lret
jmp
or
cmp
sbb
iret
or
inc
fadds
or
push
repz
insl
add
jb
cld
sub
lret
inc
loopne
add
xchg
cmp
ljmp
push
movsl
xchg
push
jbe
addr16
xor
or
les
repnz
push
and
mov
adc
and
in
mov
pop
dec
sub
mov
jbe
ds
adc
adc
jmp
pop
and
pop
pop
cmpb
jne
movsb
push
add
sbb
push
jmp
mov
cmp
xchg
add
jle
lods
jmp
es
loope
cs
sub
lret
cmc
cmp
aam
jle
loope
jge
add
push
mov
daa
sbb
or
jmp
sub
ja
adc
inc
das
add
mov
jmp
stc
mov
sub
sbb
or
pop
ja
cmp
dec
xchg
and
sbb
or
or
loop
jne
dec
enter
push
cmp
scas
adc
and
push
inc
and
pop
fs
mov
jno
aaa
fidivrl
fmull
nop
ja
sub
decb
shl
out
jp
and
add
cmc
outsl
xor
loopne
shr
sbb
ret
dec
sahf
dec
jmp
sbb
lcall
and
pusha
push
adc
outsb
jb
and
xor
sub
and
inc
add
pop
imul
popf
push
enter
jmp
iret
and
int3
pop
jae
inc
jecxz
adc
cmp
je
mov
xor
mov
and
mov
mov
adc
dec
pop
cltd
mov
ja
cmp
ljmp
push
jmp
repnz
mov
dec
orl
push
adc
sub
sbb
adc
jne
adc
xor
pop
and
bound
sbb
mov
test
jae
fxch
test
clc
mov
es
std
xchg
hlt
push
add
push
or
aaa
ja
inc
insl
je
mov
pushl
nop
push
adc
cld
mov
ds
insl
ljmp
stos
mov
outsb
mov
test
jne
pop
mov
add
cld
popf
dec
jmp
jno
xor
xor
or
or
xor
mov
pop
adc
ljmp
pop
inc
mov
inc
imul
sbb
mov
and
push
int3
ss
sub
add
imul
dec
ds
mov
mov
xor
popa
stos
addb
pop
pop
arpl
xor
or
rolb
lret
cwtl
das
arpl
ret
xor
add
loop
dec
push
rcl
xchg
add
adcb
add
and
cmp
mov
push
xor
ret
pop
ja
inc
and
jmp
xorl
jmp
jo
sub
popf
subl
xchg
hlt
and
scas
movsl
into
mov
je
add
sbb
call
jbe
sub
mov
adc
mov
cs
dec
lods
sbb
inc
add
ja
mov
sub
out
mov
cmpsb
mov
and
push
jmp
inc
and
xor
xchg
dec
leave
mov
and
pop
sub
repnz
bound
pop
inc
sbb
ljmp
and
in
gs
pop
xchg
inc
jnp
or
dec
rcrl
cmpsb
enter
mov
or
shlb
int
out
jmp
adc
inc
pop
loop
enter
lds
pop
nop
dec
and
es
push
pop
add
shrd
fldt
je
inc
dec
inc
sbb
dec
mov
push
lret
stos
push
cmpsl
mov
cmpsl
mov
shlb
xor
out
into
and
dec
sar
mov
inc
add
push
dec
adc
mov
xor
outsl
xor
dec
aad
fwait
sub
or
fs
mov
cmp
mov
movsb
xchg
ss
in
mov
add
jb
add
call
cmp
jb
divb
mov
xchg
std
adc
jb
adc
add
subb
sbbl
js
outsl
hlt
push
adc
xchg
push
rcrl
lods
es
jmp
sub
xlat
pusha
add
inc
mov
xchg
sub
pop
mov
sbb
fdivl
loopne
cli
cmp
movmskps
pop
push
icebp
int3
and
push
add
mov
lahf
add
pop
sub
add
adc
movsl
jge
jb
mov
cmpsb
pushf
push
adc
sbb
shll
inc
int
cmp
inc
jno
xor
cld
jnp
push
rclb
lock
movsb
int
pop
adc
add
cmp
dec
inc
pop
sub
jno
dec
jbe
add
pop
in
and
xor
push
xorps
pop
lret
test
jmp
push
test
dec
add
hlt
int3
daa
andl
push
jb
fistps
dec
jl
pop
push
outsl
jl
inc
imul
loop
push
pop
cmp
fbstp
movsb
mov
lcall
test
xchg
test
or
jne
adc
jmp
nop
lock
nop
movsl
aaa
ljmp
je
mov
hlt
rorb
mov
sti
cs
inc
dec
or
and
cs
pop
in
cmp
fs
into
dec
dec
lret
inc
test
loopne
inc
bound
mov
sbb
and
jb
jno
push
xchg
push
nop
jnp
in
js
std
in
xor
mov
adc
add
mov
nop
sub
gs
and
xor
lea
cmp
xor
out
inc
and
push
sti
adc
xor
cli
outsl
mov
cmp
imulb
mov
inc
inc
xor
dec
add
pusha
xor
mov
jne
add
push
repnz
inc
stos
les
testb
lds
push
lea
call
cmp
je
or
inc
adc
nop
rolb
je
jmp
mov
add
mov
push
inc
je
adc
mov
or
inc
push
jne
mov
push
jmp
pop
fcoml
pop
repnz
test
add
adc
add
push
adc
push
ds
call
push
or
add
mov
mov
xchg
sahf
mov
mov
jp
inc
sbb
jnp
xchg
jmp
movsb
and
adc
mov
push
cld
inc
xchg
fdivs
and
xor
mov
dec
ret
add
inc
sbb
and
stos
je
stos
xchg
das
mov
ret
and
jl
ds
push
insb
cld
inc
mov
adc
aas
stos
in
sub
mov
inc
leave
adc
inc
sub
or
and
inc
xor
adc
mov
mov
enter
cs
jmp
mov
xor
sub
repnz
jne
mov
mov
adc
or
scas
fs
mov
mov
adc
ret
stos
push
andl
dec
add
sbb
enter
mov
jle
xor
stos
or
mov
pusha
pop
mov
outsl
mov
test
mov
inc
sub
xchg
dec
testl
dec
fisubs
mov
insl
fs
lret
shl
mov
bnd
ret
pushf
pop
mov
in
lods
push
das
add
mov
mov
push
adc
test
and
int3
lds
sbb
sbb
ret
cwtl
inc
insb
add
xlat
mov
lods
push
add
aam
jbe
aaa
and
dec
mov
invd
add
dec
mov
jae
xor
and
or
bound
jmp
mov
ret
adc
add
mov
mov
test
adc
or
dec
sbb
jge
xchg
or
shrb
je
sbbb
loopne
add
std
jnp
add
imul
mov
add
sbb
xor
mov
xor
and
adc
add
js
inc
jne
cmp
mov
inc
cmpsb
lock
add
dec
cmc
or
xchg
ret
xor
bound
push
test
mov
test
imul
sarb
jb
movb
out
push
pop
pop
es
out
ret
cltd
jae
stos
inc
mov
sbb
mov
movsb
out
add
das
mov
movsb
imul
adc
add
out
and
cwtl
jae
enter
mov
out
or
int
and
pop
aaa
jmp
les
adc
mov
adc
inc
test
imul
sarb
sub
cld
test
inc
je
cwtl
testl
test
cwtl
jae
mov
test
movsb
mov
cmp
ret
xchg
andb
ljmp
mov
ret
roll
or
popa
popf
insl
mov
mov
inc
or
cmp
into
adc
jl
xor
movsb
jl
add
iret
ficoms
jl
jne,pt
inc
cli
pusha
dec
mov
rolb
mov
xchg
jle
sub
roll
ret
mov
xchg
add
jl
inc
cmp
jle
jp
cmp
aam
jl
nop
mov
in
jl
ss
cmpsb
cli
add
jl
pop
lahf
jl
xor
gs
lods
les
rorb
fnsave
inc
and
popa
mov
ja
cltd
inc
ret
aaa
je
pop
add
or
jns
inc
dec
lds
xlat
cmpsl
and
out
dec
je
add
mov
pop
test
jecxz
adc
mov
int3
or
test
cmp
dec
filds
outsl
test
rcrl
test
dec
fildl
outsl
test
add
js
mov
adc
add
add
test
push
divl
xor
test
inc
jnp
add
mov
test
subb
xchg
scas
test
jbe
in
or
inc
push
or
push
inc
cmpsl
repnz
sbb
sub
push
mov
movl
orl
out
add
fsubl
mov
push
xor
push
sub
add
into
sahf
push
enter
inc
xchg
mov
rol
es
jbe
loopne
add
jl
push
jbe
dec
and
aam
adc
sahf
sub
cmp
ja
sub
or
add
std
mov
add
test
jmp
dec
and
mov
xor
cwtl
ja
mov
sub
inc
ret
cmpl
jb
cmpsb
cmp
jl
adc
sub
mov
mov
push
mov
pop
mov
push
or
inc
jo
ret
pop
imulb
cli
mov
and
in
mov
jg
push
clc
daa
jg
xchg
icebp
add
enter
inc
xchg
sbb
popa
or
xor
mov
jle
out
out
cli
hlt
add
scas
sub
push
mov
push
lret
push
mov
stos
icebp
pop
repz
and
aad
inc
xlat
mov
jl
bound
pop
add
xor
adc
cmp
lea
ror
ja
out
cmp
jl
mov
xchg
add
outsl
mov
fstpt
out
jl
aas
repz
rol
data16
or
fldl
adcb
xor
je
ja
add
mov
cmp
mov
lcall
jno
testl
stc
fisubs
xor
int
lea
clc
fxch
incl
jns
add
xor
cmp
inc
inc
inc
inc
inc
add
dec
dec
dec
dec
push
push
or
push
push
cli
push
pop
pop
pop
inc
mov
dec
dec
loopne
hlt
aad
rcrl
lea
adc
dec
fs
sbb
or
mov
dec
add
negl
sbb
jecxz
lods
inc
xchg
inc
pop
movsb
push
gs
adc
xor
mov
mov
or
and
or
insb
sbb
cmp
mov
inc
mov
xlat
adcl
push
out
mov
xchg
jg
cmp
jl
lret
sub
or
add
mov
mov
dec
clc
hlt
shr
shrb
fwait
test
cmp
orl
lret
jmp
inc
push
jne
mov
xchg
dec
mov
jb
roll
mov
sarb
mov
xor
dec
add
jne
inc
and
sbb
jne
repnz
and
out
dec
addl
jl
outsb
lea
aad
mov
jae
pop
dec
into
outsw
out
popa
mov
sub
xor
and
or
push
add
nop
lock
add
fstpt
jae
push
add
je
stos
add
dec
lea
push
xchg
call
push
enter
push
add
jae
in
push
push
sbb
sub
or
xor
test
pop
out
push
adcl
je
xor
ljmp
movsb
and
xor
cmp
rcrl
add
ret
repz
sbb
stos
cs
or
mov
push
inc
or
lds
push
push
xchg
push
mov
in
popa
jo
lods
rcrb
fmul
ljmp
clc
and
mul
sbb
pop
jae
inc
lahf
push
pushf
iret
or
push
pop
push
mov
dec
aaa
jne
inc
aaa
aas
movlps
stos
out
add
jge
rcr
mov
lods
mov
xor
jge
inc
in
cmovno
stos
movsb
mov
hlt
in
xchg
nop
dec
jge
lea
ja
xchg
dec
mov
push
mov
lock
sub
pop
pop
jge
jo
mov
add
adc
push
or
add
fcmovbe
pop
mov
jmp
pop
push
shlb
jge
pop
in
or
adc
sti
pop
cmp
out
lock
dec
inc
enter
push
cmp
mov
adc
repnz
push
enter
repz
pop
add
sbb
jb
dec
jmp
test
clc
nop
rcll
jmp
sub
sbb
xchg
pop
push
dec
lods
mov
inc
loopne
push
loopne
cmp
add
push
pop
xchg
sbb
mov
rclb
add
repz
cld
pop
lea
fdivl
dec
push
mov
lret
xor
push
sbb
mov
in
add
jae
nop
sbbl
lea
dec
jb
inc
out
iret
cmp
jbe
or
push
je
xchg
mov
xor
jns
sbb
out
sbb
test
push
fnstsw
xor
adc
comiss
add
inc
gs
mov
into
jmp
cmc
enter
roll
ret
jb
scas
dec
pop
hlt
fsts
or
je
cmp
and
sbb
pop
jmp
adc
and
dec
lds
xorl
nop
mov
sbb
push
inc
rorb
test
iret
add
or
into
lock
hlt
or
add
push
or
jg
jmp
mov
sbb
push
xchg
jmp
cmp
sub
lea
out
dec
inc
icebp
in
mov
and
add
cmp
es
pusha
movsb
sbb
jns
movsl
imul
push
cmp
je
dec
add
pop
ja
enter
or
shl
mov
mov
ja
nop
ffreep
lcall
or
or
not
xor
cwtl
xchg
pusha
clc
in
add
jae
lcall
xor
and
int
ds
roll
mov
dec
ljmp
lret
inc
inc
pusha
or
or
jne
push
dec
imul
xchg
mov
adc
test
test
jae
call
hlt
dec
mov
add
adc
pop
shl
lret
pop
adc
dec
mov
and
jp
out
daa
add
xor
adc
std
pusha
clc
sarl
pop
pop
adc
shll
inc
imul
cld
inc
fbld
mov
pop
or
push
adc
sub
imul
ljmp
lahf
iret
adc
cmp
pop
pop
sti
aas
inc
or
jbe
mov
and
or
in
mov
inc
mov
pop
add
iret
shlb
adc
sub
nop
adc
xlat
xchg
nop
jmp
call
dec
mov
sbb
push
nop
mov
lea
adc
sbb
test
and
mov
dec
mov
and
ficompl
mov
mov
dec
mov
adc
mov
mov
jge
test
xor
mov
dec
mov
stos
les
jb
or
cmpsb
mov
and
jno
add
test
mov
mov
xorb
ret
mov
imul
test
and
inc
sbb
mov
inc
imul
or
cmp
shlb
lods
data16
stc
mov
inc
int
cwtl
dec
shlb
xor
in
adc
or
repnz
mov
mov
test
ds
sub
jge
stc
push
hlt
in
mov
lds
mov
cwtl
dec
fidivrl
stos
push
push
inc
and
push
mov
lret
adc
cmp
push
mov
and
push
scas
mov
adc
mov
into
sbb
xorb
mov
dec
stos
jl
xor
or
sub
mov
ret
dec
push
push
rorb
fcmovb
movsb
mov
repnz
fcmovb
mov
xchg
mov
xor
fcmove
movsb
mov
test
sbb
cltd
mov
mov
iret
movsb
mov
das
lods
pop
push
or
adc
roll
mov
adc
and
popf
stos
roll
sub
pop
or
test
mov
xlat
push
test
mov
sbb
in
fsts
rorb
or
or
frstor
mov
leave
test
andl
scas
rorl
in
loopne
adcl
les
jb
or
loop
andl
lods
shll
in
in
adcl
iret
in
out
test
mov
call
adc
mov
movsb
test
movsl
push
out
jmp
or
adc
lock
push
add
sarl
sbb
in
jmp
cmpsb
add
pushf
or
es
cmpsl
push
lea
adc
bound
cmp
in
out
push
stos
inc
mov
pop
sub
adc
in
icebp
push
mov
adc
or
push
repz
lea
add
cmc
push
mov
and
shrl
mov
les
and
rclb
add
sbb
stos
std
mov
les
xor
mov
inc
mov
sbb
xchg
mov
mov
add
movsl
lea
in
dec
mov
fcmovb
repz
popa
nop
ds
pop
mov
stc
xor
mov
out
outsl
pop
pop
icebp
xor
and
dec
push
xchg
push
push
movsb
pop
mov
push
or
cmc
int3
enter
hlt
sbb
test
push
insb
lret
out
arpl
xorl
push
push
call
shlb
or
mov
aas
adc
adcl
xchg
call
inc
dec
jne
or
jp
push
sub
push
sub
int
stc
push
sub
mov
and
add
fisttpll
or
stos
je
mov
jl
sar
in
jae
xchg
mov
mov
xchg
or
adc
jmp
sub
xlat
leave
dec
mov
aad
mov
movsb
jne
cld
in
repnz
xchg
enter
cmp
enter
fs
mov
mov
or
sti
and
bound
push
mov
mov
lock
clc
mov
hlt
push
in
and
out
std
test
mov
or
push
adc
dec
or
adc
ja
ret
xchg
lret
cwtl
and
mov
push
dec
mov
push
inc
push
push
fcmove
and
add
inc
popa
add
xchg
mov
pop
or
adc
flds
cmpl
jne
scas
lahf
and
inc
movsl
xor
adc
or
test
test
shll
cli
adc
mov
sbb
lock
add
adc
add
dec
xor
sbb
addr16
fs
mov
jae
push
ret
cmp
dec
inc
dec
jne
das
mov
pop
loopne
xor
lea
jmp
adc
pusha
lods
push
sub
xchg
jle
sbb
push
lret
cmp
cmpsb
mov
dec
daa
inc
xor
mov
add
adc
inc
enter
pop
add
push
push
cli
or
or
push
int
test
and
xor
xchg
or
movsb
push
lahf
and
mov
pslld
or
push
and
or
lods
pop
stos
cmp
pusha
cmp
mov
cwtl
or
inc
and
sub
jp
and
jg
mov
push
call
sbb
adc
cmpsb
sub
xchg
mov
sbb
adc
adc
sub
test
push
and
inc
sub
arpl
gs
or
or
test
adc
inc
adc
push
jmp
xlat
mov
pop
jbe
push
inc
sub
jmp
xor
adc
adc
inc
push
jmp
mov
add
xchg
push
sub
pop
cmp
mov
mov
pop
loope
adc
pusha
aas
repz
xchg
and
imul
adc
test
test
sub
or
ficoml
rcr
push
lahf
push
movl
or
push
pop
movsb
or
add
mov
and
or
add
out
and
pushf
pop
popf
les
mov
push
push
mov
push
inc
add
movsl
sbb
call
or
jno
imul
inc
mov
inc
subb
mov
lcall
or
test
pop
call
outsb
adc
xlat
mov
mov
imul
cmc
fisubrl
push
ss
jns
jmp
dec
or
mov
xor
daa
je
leave
test
stos
leave
xchg
cmc
xorl
stos
pop
loopne
lahf
cltd
stc
xchg
cmp
inc
mov
in
push
mov
ret
or
jns
fisttps
in
fcoml
pop
dec
and
lret
push
out
loopne
xchg
or
test
daa
lret
test
mov
das
mov
pop
jecxz
xchg
rcll
cmc
mov
inc
add
and
or
and
pop
pushf
in
cmp
inc
rolb
jne
pop
ret
lea
dec
clc
sbb
xor
cmp
test
jne
jecxz
scas
test
sbb
jge
or
out
mov
jl
push
fdivl
loope
add
mov
sub
xlat
jbe
adc
adc
cmp
add
push
loop
xor
sub
fiaddl
and
or
sub
movsb
xor
fisttpll
in
push
push
pusha
mov
je
cltd
negl
inc
fs
pushf
cs
dec
push
stos
inc
test
push
sub
pop
adc
jno
push
push
push
pop
sarb
scas
push
add
lret
mov
cmp
dec
out
adc
and
pop
mov
add
inc
call
lds
cltd
push
in
or
js
adc
call
pop
fidivs
jmp
aaa
cltd
xor
inc
std
or
mov
or
ret
adc
mov
add
mov
mov
xor
cltd
mov
sub
popa
ja
pop
jp
sbb
filds
mov
adc
push
mov
aas
sbb
dec
lret
clc
push
pop
mov
jl
and
inc
fmulp
adc
pop
or
xlat
ljmp
je
loopne
stos
add
push
fisttpl
imul
jge
xchg
adc
shll
rclb
lret
ret
loope
jl
mov
bound
jge
push
decb
and
or
cmc
sbb
jo
incb
cs
arpl
jmp
mov
adcb
push
inc
pop
sarb
push
mov
dec
sub
sub
push
sarb
loope
inc
stc
push
sub
and
and
dec
add
mov
aam
cmp
pop
push
ror
or
mov
adc
push
or
add
cltd
stos
les
and
mulb
jg
lcall
outsl
ficoms
mov
mov
jb
jne
dec
int
or
rorl
scas
jb
push
jo
pop
xor
mov
jbe
adc
scas
mov
loop
adc
jns
and
jo
int
inc
or
xor
iret
xchg
and
xor
pop
xchg
or
ret
xor
xlat
xchg
push
sub
pop
add
push
pop
andl
in
call
insb
pop
fwait
hlt
add
rolb
jecxz
or
adc
fnstcw
mov
les
outsb
pop
and
loope
shll
adc
or
and
xlat
xchg
icebp
je
mov
sub
in
adc
mov
in
mov
mov
add
in
enter
push
scas
lret
push
adc
std
in
test
mov
arpl
add
push
mov
cmp
lcall
push
xchg
dec
dec
int
and
xor
call
jl
mov
fiaddl
mov
push
cltd
pop
pop
mov
adc
test
add
push
dec
and
push
stos
sub
call
lea
push
test
mov
pop
jmp
or
mov
mov
ret
cmp
cmp
outsb
adc
aas
in
xor
fdivl
fimull
inc
xchg
enter
mov
stc
and
out
sub
or
dec
out
inc
inc
fisttpl
inc
out
in
jbe
aas
xchg
xchg
movsb
enter
gs
fstpl
enter
push
rcll
faddl
aam
jg
loop
fsubrl
sub
and
push
pop
fidivl
fadds
sub
loopne
inc
and
in
pop
push
les
hlt
adc
mov
fdivl
dec
inc
mov
imul
add
icebp
sub
jmp
psubsb
pop
nop
mov
icebp
and
push
xor
cmc
ds
mov
mulb
sbb
add
addb
push
mov
sbb
stc
dec
add
adc
movb
sbb
xlat
mov
mov
add
jle
fcomps
inc
stc
mov
cwtl
or
aam
push
mov
pop
nop
orb
push
adc
push
adc
popf
in
scas
and
xchg
add
fidivrl
sbb
jns
aad
mov
xchg
and
sub
adcl
pop
inc
mov
enter
lea
loopne
test
es
push
dec
nop
dec
sti
xor
xchg
popa
lahf
ror
popa
adc
mov
push
daa
pusha
or
daa
repnz
inc
outsl
loop
xchg
jo
test
pop
inc
out
jbe
inc
add
add
inc
push
pop
xchg
jmp
jg
sbbb
shll
rorb
and
cli
mov
push
and
pop
push
jecxz
ja
mov
adc
mov
and
ds
add
mov
jmp
xor
rcll
dec
jo
ret
adc
add
enter
inc
pop
push
cmp
or
add
cmp
inc
and
aas
mov
mov
mov
xor
rorb
loopne
test
outsb
outsl
cmp
push
loop
out
rcrl
inc
out
mov
rolb
fiaddl
mov
or
mov
imul
or
ss
adc
jmp
in
mov
call
or
xchg
pop
pop
jmp
push
sbb
cmp
mov
aaa
fstl
sub
in
test
mov
sub
sbb
daa
iret
sub
dec
mov
sub
nop
cltd
push
pop
pop
mov
sub
push
jno
add
pop
dec
fcoms
or
mov
aaa
inc
std
jmp
mov
cwtl
lret
daa
jnp
mov
dec
push
insl
jo
jnp
mov
sub
clc
push
mov
push
push
dec
mov
cwtl
cmp
dec
in
fwait
je
mov
cmpb
push
lock
inc
inc
call
mov
ficoml
inc
or
les
mov
pop
in
repz
lret
push
inc
movsl
dec
iret
test
movl
in
in
mov
or
cmpsl
dec
xchg
inc
mov
adc
clc
jb
jo
jne
dec
aaa
adc
dec
or
fistl
pushf
fwait
or
inc
mov
pop
and
out
aad
sbb
or
mov
aad
fadds
or
push
lods
aaa
adc
adc
dec
xchg
sub
xchg
or
dec
jne
cltd
lahf
or
insb
scas
test
lods
cmp
sub
ja
cmp
mov
or
lret
pop
mov
mov
pop
jg
les
inc
lock
loope
fiadds
imul
sub
push
or
js
xor
mov
xchg
out
jns
mov
sbb
inc
sub
cmp
mov
fcoms
mov
sub
cltd
es
movsb
jbe
xor
pop
push
xor
add
nop
adc
add
stos
stos
cmp
adc
or
mov
rorb
lods
es
pop
add
dec
cltd
cld
popf
pop
es
outsl
add
adc
and
cmp
lahf
mov
ret
jne
int
lods
or
and
into
mov
or
sbbl
or
cmp
push
mov
push
sub
les
adc
ret
popa
cld
lock
adc
sub
sub
mov
addb
jge
and
xor
or
inc
into
cli
inc
add
popa
mov
je
push
push
inc
inc
fisttps
sub
mov
adc
or
mov
movl
pushf
add
sahf
jecxz
shrb
xor
add
xor
or
adc
push
cmp
pop
pop
out
dec
cmp
jo
ja
sbb
nop
andb
xor
mov
and
cwtl
dec
or
das
or
pop
movsl
adc
xorb
xor
mov
clc
push
mov
cld
and
into
pop
inc
or
adc
cmp
pop
ds
dec
lds
clc
lods
xchg
push
leave
push
shl
xchg
inc
adc
inc
les
add
xor
rorl
jmp
dec
xor
jge
pop
movsb
lock
add
inc
mov
cmp
inc
jmp
sbb
in
mov
sbb
inc
xor
inc
inc
xor
xchg
push
jbe
mov
clc
dec
clc
or
push
xlat
or
aaa
adc
mov
repnz
adc
mov
add
adc
cld
push
adc
xchg
aaa
xchg
adc
lret
adc
add
aaa
push
pop
adc
push
leave
or
je
sarl
cmp
loope
fsubs
je
pop
add
cld
lea
pop
or
xchg
and
mov
leave
jb
cmpsl
enter
push
into
in
push
xlat
dec
inc
jge
out
sbb
jmp
mov
popf
xchg
ret
jg
daa
aad
push
mov
and
daa
mov
xor
mov
or
xchg
pusha
imul
sub
lods
adc
add
cld
lds
dec
test
jl
inc
mov
test
jge
pop
push
sub
add
dec
jne
inc
mov
add
and
fidivrs
icebp
xor
pop
mov
rcrl
js
pop
je
or
and
call
in
cmp
repz
add
sub
add
cmp
jne
clc
insl
push
push
dec
xor
pop
cld
add
adc
add
xchg
sub
int3
pop
adc
enter
std
gs
sub
mov
jge
or
sub
jb
cmpsb
jge
mov
sub
sub
xor
push
push
pushl
nop
and
rcll
dec
fsub
dec
mov
jns
or
filds
je
push
dec
lds
adc
rcrl
xor
jmp
lahf
jl
xchg
jb
int3
push
lcall
inc
test
loopne
mov
or
adc
add
fdiv
stos
fwait
sbb
mov
mov
nop
xchg
jge
mov
mov
aas
dec
pop
push
shr
add
xor
push
push
aas
es
jmp
stos
xchg
pop
jg
cmpl
add
cmp
data16
inc
das
jmp
xchg
fiaddl
jne
mov
insl
xor
mov
js
pop
leave
push
test
xor
ja
pop
shll
popa
mov
xchg
push
and
mov
scas
push
inc
das
sbbb
mov
fldenv
lock
adc
inc
in
sbb
sbb
jge
dec
jl
test
je
repnz
mov
or
xorl
mov
push
pop
lods
xor
ja
jmp
sub
or
cmp
jae
mov
repnz
xchg
ds
add
enter
mov
xchg
push
xor
or
xor
and
or
inc
pop
lods
rolb
push
cltd
les
inc
in
pop
pop
cmp
pop
pop
dec
pusha
adc
test
jb
sbb
xor
nop
jl
add
test
scas
sbb
cmp
jl
sub
pop
cmp
push
jns
jge
fmuls
inc
dec
jne
push
inc
decl
lret
mov
adc
cmpsl
outsb
es
add
pushl
inc
scas
insl
sub
das
sub
pushl
or
push
mov
adc
cmp
mov
shrb
leave
in
je
fmuls
lods
jecxz
fiadds
loopne
lock
test
and
inc
xchg
push
invd
repz
inc
loope
gs
ds
xchg
jmp
test
add
call
test
iret
dec
xchg
push
loop
aam
sub
mov
jnp
insl
xor
mov
push
xchg
fildll
in
sahf
push
push
cmp
call
push
popf
adc
lea
aas
xor
enter
dec
sahf
push
push
pop
sub
pop
pop
adc
stos
jne
and
popf
push
jns
pop
xor
mov
or
adc
xchg
jg
pop
mov
call
jne
mov
nop
icebp
test
inc
icebp
popl
mov
pusha
cs
cmp
jg
daa
mov
test
push
sub
icebp
and
jmp
mov
shl
pop
repnz
push
and
cmpsl
sub
aaa
adc
cmp
pop
cmpsl
push
xchg
imul
rolb
and
mov
inc
out
sub
mov
decl
push
inc
mov
xchg
xchg
pop
dec
test
mov
imul
inc
jne
jecxz
and
jbe
ljmp
ret
jne
je
or
jns
lahf
fldt
cld
shrb
push
fadd
out
popa
or
mov
and
mov
adcb
and
sub
xchg
dec
int
lret
pop
xchg
xor
dec
repz
aam
sub
cs
cmp
imul
xchg
mov
hlt
xor
inc
sahf
xor
mov
cmpsl
push
xchg
subl
mov
and
rorl
sarb
loopne
pop
hlt
ljmp
add
jmp
jmp
scas
and
das
in
in
inc
jecxz
loop
xchg
int3
jl
mov
daa
outsb
arpl
test
mov
fs
imul
insb
gs
das
cmp
push
push
xchg
inc
ret
push
push
mov
sub
neg
mov
stos
lret
enter
popf
cmpl
inc
pop
or
mov
gs
or
cmp
jb
lods
push
cmp
sbb
ret
add
js
mov
pop
jb
fs
adc
mov
or
xchg
sarl
dec
jns
and
mov
mov
add
test
add
ret
call
adc
inc
loop
push
dec
adc
loopne
jmp
mov
pop
mov
jecxz
xchg
adc
push
das
xchg
pop
sar
jne
lea
lret
adc
jo
out
inc
insb
xor
or
and
arpl
adcb
sub
or
call
cmp
shll
jmp
cmp
jne
ja
loope
dec
xchg
cmpsl
push
fistps
add
sar
aas
ret
sub
sbb
xor
sbb
sbb
mov
outsb
and
sub
inc
add
add
test
or
xchg
mov
xor
je
dec
sub
add
pop
sbb
xor
or
jne
mov
and
pop
push
movsl
das
mov
pop
call
test
mov
fistpll
pop
test
fidivrs
jb
loop
ficomps
inc
jno
aas
pop
adc
jb
ja
fnsave
fnstsw
pop
mov
jl
xor
xor
jbe
xchg
xchg
inc
fnsave
fnstsw
pop
mov
jl
mov
divl
jns
stos
fimuls
enter
stos
fsubp
jp
and
repz
and
inc
jnp
and
icebp
mov
enter
pop
test
fistpll
and
jge
cmp
lea
jle
pop
xchg
inc
adc
mov
pop
xchg
cmp
mov
pop
mov
and
loopne
cmp
cmc
pop
pop
add
xlat
sbb
mov
mov
stc
add
and
and
cmp
rorl
cmp
ret
add
push
sbb
daa
ret
loope
out
test
and
adc
pushf
popf
cmp
or
adc
push
dec
out
mov
dec
jne
mov
int3
pushf
loop
movsl
test
or
adc
jb
daa
inc
clc
push
cltd
mov
mul
add
insb
lea
lock
jne
fdivl
xchg
cmp
test
cmp
inc
and
inc
mov
and
push
out
inc
cmc
mov
push
hlt
or
cmp
dec
add
sub
jb
or
jne
scas
xor
jge
scas
sbb
mov
in
dec
mov
inc
dec
mov
je
gs
mov
cmp
gs
loopne
js
and
mov
aam
movsb
or
stc
hlt
or
add
cmp
cmp
jae
inc
popa
push
cmp
repnz
loopne
das
cmp
jl
ljmp
sahf
or
push
xlat
sbb
or
cmp
fdivrs
sub
clc
adc
hlt
inc
xor
sbb
adc
mov
outsb
xchg
cli
lret
nop
jp
nop
mov
lock
cmp
xchg
push
jae
ja
in
pop
pop
xchg
pop
jb
pop
mov
adc
or
mov
jmp
inc
and
je
push
or
jmp
inc
xchg
xor
add
or
movsl
jae
jg
push
mov
adc
lahf
rorb
jne
out
lock
push
and
inc
les
iret
in
pop
mov
hlt
out
clc
jae
adc
aad
xor
cwtl
stc
ja
or
xchg
adc
push
sbb
cmpsb
sbb
pop
dec
add
and
add
adc
movsl
aas
cmpl
add
repz
lret
sbb
add
push
mov
push
mov
cmpl
mov
xor
and
orb
and
test
dec
mov
push
ror
cmpsb
xchg
mov
sub
adc
aad
popf
ljmp
jns
and
adc
and
movsb
pop
inc
frstor
dec
pop
dec
les
jne
sbb
inc
or
push
and
pop
and
mov
inc
push
je
pop
loop
arpl
loop
sub
leave
loop
jg
sub
es
sub
xchg
ja
dec
pop
stos
in
bound
fidivrl
inc
pop
push
mov
mov
inc
jo
hlt
push
sub
add
pop
aaa
jb
ss
or
jae
mov
and
add
js
and
daa
adc
xor
sub
or
unpckhps
andl
xchg
das
icebp
sub
dec
pop
shll
adc
push
add
sub
adc
fs
push
adc
xchg
popa
js
das
inc
lahf
push
mov
inc
in
push
mov
xchg
mov
lret
xor
call
cmpsb
sbb
xor
or
xchg
fisubl
loope
sbb
hlt
and
adc
or
or
and
mov
xor
adc
push
dec
bound
jo
fs
mov
xchg
mov
scas
dec
mov
inc
fsubp
mov
adc
or
inc
adc
sub
and
xor
cmp
inc
pop
push
jbe
jge
mov
and
leave
rorb
in
in
or
mov
adc
push
add
and
pop
loop
sbb
xor
dec
inc
xchg
inc
and
push
pop
mov
push
jno
js
jg
xchg
mov
inc
or
mov
pushf
mov
cltd
and
fistl
loop
or
inc
cmc
cld
mov
pop
xchg
dec
lret
sbb
mov
xchg
or
push
inc
pop
push
jbe
andb
lcall
mov
or
adc
and
dec
repnz
stc
dec
sub
dec
push
xchg
adc
sub
aas
dec
inc
xchg
dec
and
bound
ja
jle
test
mov
dec
mov
and
test
scas
mov
mov
dec
rclb
out
mov
adc
add
pop
loop
and
mov
adc
and
dec
push
xchg
bound
push
xor
pop
mov
xchg
sub
xchg
xchg
cwtl
and
xchg
dec
fs
mov
xor
into
sub
adc
ret
xchg
xchg
or
mov
xchg
pop
add
adc
out
push
mov
push
lods
fistps
pop
cli
dec
movhlps
add
sbb
xchg
daa
out
push
cltd
xor
pop
dec
xor
mov
sbb
std
dec
or
daa
popf
stos
sub
sub
sub
cmpsl
pop
stc
add
test
into
sub
loop
dec
push
mov
pushf
shl
add
cmp
mov
jg
je
fadd
nop
rcll
xchg
xchg
add
cmp
or
push
xchg
push
and
pop
bound
jge
adc
ljmp
nop
push
inc
or
jmp
and
inc
addl
sub
adc
and
dec
sub
push
sbb
push
dec
or
sti
add
shl
cmp
cli
xor
or
aaa
jecxz
sub
shlb
popf
gs
test
sbb
adc
dec
scas
sub
leave
shrl
fmul
mov
cmpb
scas
sar
popa
add
inc
push
cmpb
push
jo
inc
inc
dec
aaa
push
or
jae
mov
mov
loop
adc
push
xchg
lods
pop
push
orl
sbb
insb
gs
push
mov
jnp
mov
inc
cli
bound
jne
inc
jb
popa
imul
inc
jb
sbb
inc
jo
outsb
imul
jge
cmp
ja
stos
push
movsl
or
int
adc
cmpsb
jae
push
repz
sbbb
xor
xchg
xor
mov
sar
movsb
add
ret
pushf
sbb
xchg
pop
xor
rol
loopne
cmc
ret
sarb
xchg
adc
pop
pop
ds
sub
and
out
inc
jp
push
into
cmp
ficoms
inc
ret
or
adc
adc
inc
cmc
adc
inc
and
or
xchg
cmp
or
in
jg
and
add
mov
cmpsl
adc
or
push
adc
adc
sti
adc
lret
xchg
stos
ret
sub
dec
inc
rorb
xor
and
js
sarl
adc
aaa
test
add
stos
sub
test
sub
dec
fnsetpm(287
pop
xchg
xchg
lret
push
js
mov
hlt
test
push
cltd
fwait
sub
adc
cwtl
cmpb
cmc
mov
push
add
or
or
push
dec
and
nop
or
adc
and
adc
sbb
jno
adc
outsb
inc
push
imul
imul
inc
xchg
push
push
dec
out
pop
nop
dec
mov
cld
cltd
ret
dec
decl
push
push
add
adc
xor
or
or
push
cmpsl
push
aas
inc
and
out
jle
inc
sbb
sbb
pop
xor
or
cmp
test
xorl
adcb
hlt
out
mov
cs
pop
enter
and
cs
push
cmp
and
dec
cmpsb
add
aaa
das
xlat
adc
divl
in
sbb
pusha
pop
push
cmp
ret
dec
xchg
adc
mov
and
arpl
icebp
test
orb
cmc
enter
sub
xchg
and
std
xor
add
or
xchg
push
pusha
inc
cld
enter
adc
push
inc
js
clc
pop
enter
xchg
das
les
test
imul
sub
fidivs
outsl
mov
ss
loop
orb
int3
dec
or
cld
popa
push
sub
mov
pop
pop
mov
sub
call
pop
lret
je
sbb
jbe
inc
mov
sbb
sub
push
cmp
dec
mov
push
nop
clc
call
call
fists
inc
pop
and
adc
or
pop
push
scas
mov
hlt
pop
adc
and
or
mov
dec
shll
xchg
mov
scas
mov
mov
daa
fstl
movsl
mov
nop
inc
push
adc
pop
pop
stos
adc
sbb
and
lahf
aas
xchg
and
insb
add
in
sub
sub
push
lock
lds
dec
and
mov
mov
aad
ret
orl
xchg
add
adc
push
jne
inc
push
add
mov
mov
out
sbb
mov
xchg
and
sub
and
shll
jle
jp
cmc
or
fildll
jns
dec
push
and
xchg
in
push
ret
pushf
sub
daa
push
enter
ret
call
push
lret
jns
or
sahf
push
push
xchg
sub
movsl
sbb
push
jno
dec
and
xlat
push
out
xor
pop
xlat
add
sub
xchg
out
inc
pop
pop
pop
xor
pop
clc
in
sub
mov
add
cli
push
push
dec
call
or
mov
sbb
sbb
pop
xor
inc
scas
cmp
aaa
pushf
call
imul
inc
mov
dec
icebp
js
sub
and
and
sub
fsubs
push
push
push
inc
push
call
ljmp
push
or
dec
leave
or
movhps
pop
add
sub
dec
scas
mov
dec
lret
push
jmp
in
bnd
notb
inc
cmp
jb
cmp
xchg
mov
aad
push
mov
jmp
repnz
push
xor
adc
add
sub
mov
adc
sbb
or
fcoms
inc
fisubs
leave
stos
jmp
add
inc
jne
push
pushf
or
sarl
daa
pop
pop
out
iret
lods
or
daa
inc
pop
pop
es
call
and
dec
fwait
inc
repz
push
inc
add
inc
xchg
pop
sub
lcall
mov
cmp
movsb
xchg
and
inc
mov
call
add
add
add
and
jmp
push
mov
xor
or
cmp
inc
inc
nop
and
fs
sbb
jns
and
push
ljmp
mov
or
dec
sbb
dec
sub
cwtl
cmp
cmp
js
add
stos
sub
lock
out
jg
mov
enter
int3
data16
ret
pop
pop
outsb
pop
push
adc
xor
sbb
gs
or
lea
mov
clc
add
jb
mov
loopne
adc
movlps
or
movd
dec
das
mov
jmp
sbb
scas
shlb
out
add
mov
mov
dec
inc
sti
lods
cmpsb
jl
adcb
dec
out
cmp
xchg
jmp
mov
pushw
movb
or
mov
mov
mov
lret
mov
inc
push
inc
dec
pop
inc
cmp
mov
je
data16
jnp
in
pop
fimuls
inc
jbe
arpl
mov
outsl
daa
imul
sub
mov
dec
dec
cld
xchg
pop
xor
push
xor
add
fcomps
lret
or
mov
mov
mov
jbe
sub
and
adc
adc
leave
sbb
movzbl
jecxz
add
mov
mov
sbb
cld
imul
xchg
or
adc
mov
decl
ja
and
call
jae
jne
popa
daa
adcb
xor
aaa
mov
rol
add
popa
je
jmp
mov
int3
push
leave
push
inc
adc
mov
ss
out
dec
pop
jecxz
cmp
nop
pop
add
leave
mov
cmp
xchg
scas
sub
outsb
dec
sub
aaa
dec
in
mov
popf
and
inc
gs
lcall
das
pop
cmp
adcl
mov
popa
mov
outsb
frstor
push
cmp
test
sub
inc
pop
mov
or
mov
sub
mov
dec
sahf
dec
ficoms
sub
jae
jns
pop
cmp
call
inc
movsl
cmp
mov
dec
icebp
cmpsl
in
cmp
jecxz
sub
and
dec
icebp
adc
push
in
js
inc
lods
pop
hlt
dec
scas
or
and
dec
shll
sbb
mov
rorl
cmp
adc
jp
push
mov
and
jecxz
rcll
ljmp
pop
xorb
test
sub
cmp
and
adc
test
lea
pop
repnz
xor
or
xchg
push
fucom
insl
pop
pop
pop
inc
mov
out
cli
int
push
int3
fldl
fcompl
outsb
mov
outsl
fnstsw
xor
jl
inc
or
jmp
dec
xor
and
or
das
jno
sbb
das
mov
xchg
hlt
mov
mov
and
pop
xor
jns
push
sub
or
dec
mov
mov
and
inc
lods
dec
mov
out
popf
inc
loope
outsl
or
adc
xchg
int3
das
in
xor
pop
loopne
imul
pop
rorb
or
xchg
cmpsb
incl
xor
push
lds
dec
call
cmpsl
mov
inc
pop
push
fadd
clc
xor
jo
lea
fstpt
cli
fcom
ljmp
adc
mov
lods
insb
pop
cli
xor
push
sub
push
xchg
popf
repz
and
xor
enter
in
jo
jmp
mov
loopne
popf
push
es
jmp
inc
and
or
xchg
mov
inc
jge
aam
pop
sbb
fdivrs
hlt
incl
xchg
ficoms
and
scas
loopne
out
cmpsl
fcoml
imul
test
cmpsb
pop
and
mov
nop
loop
xor
xchg
jb
mov
shl
rcll
rorb
xchg
xor
or
fcompl
jge
push
mov
popf
or
fmull
sarl
or
test
add
sbb
cmp
jbe
stc
and
add
movzbl
xchg
inc
xor
jge
xor
mov
arpl
adc
dec
cld
add
push
or
or
push
jae,pt
mov
movl
lock
inc
mov
rolb
mov
decw
pop
inc
push
push
cmpsb
push
or
dec
push
scas
popf
icebp
push
mov
stos
push
mov
mov
and
fwait
pushl
cmpsb
add
adc
call
xchg
scas
mov
jmp
or
lods
push
mov
jnp
cmp
nop
in
je
inc
xor
stos
dec
sbb
pusha
daa
jne
adc
or
pop
lea
dec
stos
je
xchg
add
hlt
test
lock
test
adc
mov
ja
add
sbb
fistl
lret
pop
lcall
xor
call
xchg
pop
xchg
data16
jns
mov
and
push
xor
or
test
data16
test
popa
aaa
imul
or
std
push
xchg
and
mov
pop
dec
push
pop
faddp
int
daa
push
nop
xchg
arpl
cmpsb
sbb
and
fs
mov
cmp
leave
and
jmp
out
outsb
lods
sti
test
dec
adc
sbb
inc
add
jae
cmp
sbb
dec
add
shl
xchg
xchg
mov
mov
add
dec
add
sbb
jne
cmp
pop
pop
push
sub
adcl
push
lods
sub
and
aam
mov
sub
sub
fmul
cmp
push
subl
jecxz
in
push
pop
iret
lock
mov
call
popa
and
inc
mov
pop
xchg
or
cmp
jmp
push
and
push
test
pop
sub
mov
popa
adc
cs
stc
add
dec
je
sub
in
or
push
jns
mov
or
nop
iret
or
inc
push
and
call
and
add
pop
in
or
add
and
push
ds
arpl
pop
adc
xchg
mov
xor
inc
imul
pushf
cmp
sahf
sbb
and
inc
add
mov
mov
sbb
scas
sbb
sbb
xchg
inc
aaa
jnp
adc
sub
inc
xor
jp
call
adc
adc
sub
inc
data16
call
push
inc
cltd
and
jae
sub
mov
push
inc
adc
push
loope
inc
jle
pusha
in
adc
imul
orl
push
dec
inc
ja
lahf
jb
cld
jo
popa
jae
ja
push
fs
out
out
es
js
ja
dec
jo
sbb
push
push
dec
dec
dec
adc
dec
pushf
and
inc
push
lds
mov
xlat
or
inc
movl
inc
add
pop
adc
enter
mov
or
add
adc
dec
jg
fs
pop
push
sbb
sbb
pop
and
sub
jnp
movl
cmp
out
shll
mov
ljmp
test
sbb
mov
push
in
mulb
rolb
xchg
enter
daa
mov
loopne
mov
lret
ja
fwait
or
mov
or
mov
lcall
in
sub
adc
xlat
in
test
fs
jmp
scas
sysret
insb
dec
arpl
jmp
les
mov
ds
out
test
movsl
mov
or
leave
xchg
add
jecxz
xchg
pop
out
add
xchg
push
inc
imul
mov
push
sbb
push
lock
pushl
hlt
or
add
das
add
popf
out
ror
stos
pop
mov
sub
push
out
jmp
dec
sub
add
sub
inc
and
pop
xchg
push
push
aaa
xor
dec
push
inc
push
lahf
xchg
fs
bnd
sub
dec
mov
mov
push
sub
xor
aam
pop
movsl
fidivs
jmp
and
cmp
dec
bound
aas
push
jg
loop
je
fnstcw
sbb
sbb
leave
add
lock
test
jg
inc
call
push
lods
cs
jns
cli
dec
lock
out
sub
cmpsl
push
mov
xor
sbb
xor
push
and
xor
js
inc
lea
sub
gs
jae
lahf
test
lret
jns
pop
xor
pop
hlt
into
scas
or
and
lock
mov
xor
or
cmp
daa
jne
test
outsb
outsb
arpl
cs
je
pusha
jo
mov
aas
jge
scas
mov
fnstcw
jno
sbb
loopne
test
sahf
pop
js
inc
xchg
and
js
inc
test
add
pop
pop
dec
repnz
dec
pop
mov
inc
pusha
sub
sub
jnp
and
push
inc
or
push
pop
mov
inc
out
adc
mov
xor
nop
and
movsb
mov
mov
pushf
pop
mov
ret
xor
popf
lods
pop
fs
cmp
je
addr16
or
xchg
leave
rcrb
in
cmpsl
pop
adc
pop
adc
adc
call
jecxz
add
xchg
pop
shr
inc
sub
cmc
shrb
jge
pop
mov
add
dec
or
add
ret
cmp
cld
add
fmuls
adc
fadd
sbb
and
add
sarl
repnz
sbb
push
mov
clc
adc
or
pop
int
les
and
sbb
mov
test
orb
push
add
inc
or
pop
add
or
sbb
lea
cwtl
rorb
cmp
cmp
add
or
or
add
adc
adc
enter
push
jmp
ret
sub
inc
and
les
es
popf
adc
mov
inc
inc
inc
les
lods
inc
push
jne
push
arpl
les
cmc
inc
inc
pop
sub
pushf
test
inc
sub
sub
hlt
mov
jne
js
xor
xchg
and
and
push
sbb
add
add
sub
cmp
cmp
mov
inc
add
and
bound
push
cmp
test
and
push
jo
js
loope
inc
adc
inc
push
sub
fidivs
and
movsb
pop
lea
cmp
ds
or
cmp
lods
fwait
nop
jmp
loope
cmp
jns
or
int3
push
test
and
ja
outsb
shrl
fs
int3
addb
push
inc
jns
xchg
stos
gs
aaa
inc
add
cmp
inc
enter
or
mov
lock
jge
mov
sub
xor
lods
adc
xchg
and
jmp
decb
pop
xchg
jno
sbb
je
gs
dec
and
ret
dec
sub
mov
and
mov
aad
enter
xchg
imul
and
mov
push
adc
mov
inc
mov
testl
mov
adc
mov
dec
cli
pop
xchg
cs
ljmp
daa
ret
ret
cmp
push
inc
dec
push
cltd
inc
cs
mov
pop
jnp
rcl
cmpsl
rorb
fs
mov
insb
gs
lds
popa
outsb
out
jb
in
ja
push
push
std
push
or
cs
aas
or
xor
outsb
mov
cs
inc
sub
xchg
aad
icebp
and
and
push
cmp
dec
mov
inc
sub
cmp
mov
data16
inc
adc
jb
xchg
adc
adc
dec
imul
jo
adc
push
shrl
ds
xor
movsl
inc
aas
fidivs
in
cmp
or
insl
jmp
mov
fs
subb
sub
mov
mov
pop
ret
cmc
out
and
mov
jno
sbb
pop
push
popa
push
addr16
push
push
jo
xor
push
xor
rcr
sub
and
add
mov
test
sub
adc
sbb
xor
icebp
push
inc
sbb
cmp
mov
adc
and
cmp
xorb
je
lahf
mov
clc
je
add
dec
inc
and
or
loopne
fldl
lock
outsl
cmp
cmp
mov
mov
test
cmp
pop
adc
push
and
xor
inc
test
push
push
push
loopne
add
push
movsb
jmp
jbe
inc
or
in
or
or
inc
adc
adc
ror
fs
jae
or
xchg
adc
enter
sub
faddp
and
call
clc
push
and
xchg
cmp
test
lcall
xor
or
xchg
clc
enter
hlt
sbb
push
and
nop
dec
enter
xor
sbb
lock
push
mov
sarl
in
xchg
and
aam
add
xor
and
in
in
xchg
push
and
fs
in
push
test
loopne
jo
je
fdivl
aad
inc
fsubl
js
jl
fsubs
fadds
adc
enter
or
xchg
and
nop
fsub
rcrb
nop
or
mov
and
int3
xor
xchg
mov
mov
or
xchg
enter
fs
cltd
popa
movsb
ret
movsl
je
inc
xchg
leave
iret
xor
subb
pop
push
gs
movsb
or
movsl
aas
xlat
nop
jae
andb
adc
sar
jp
fisttpll
xchg
xchg
sbb
push
push
test
or
pop
in
pop
or
out
insl
add
aaa
aam
xchg
icebp
adc
sbb
xor
pushl
fildl
xor
and
std
push
cltd
outsl
jnp
mov
cltd
add
outsl
jle
and
test
mov
lret
adc
adc
mov
sub
fistpl
and
mov
xchg
les
push
test
xchg
movsb
lock
cmp
adc
out
xchg
testl
inc
getsec
test
dec
sbb
jp
sub
and
mov
sub
mov
xor
mov
enter
xor
xor
dec
ret
and
mov
pop
sbb
xor
leave
xorb
cmp
add
push
lock
dec
jae
xor
push
call
arpl
jne
movzwl
and
fs
push
adc
loopne
jmp
js
xchg
das
dec
mov
mov
fs
cmpsl
push
adcl
sbb
ss
mov
inc
cmpsb
push
inc
pop
xchg
mov
pusha
das
ret
in
adc
data16
pop
xor
pop
and
lcall
and
cmp
mov
xchg
fs
imul
push
push
jl
loopne
pop
push
or
mov
dec
mov
mov
in
into
fstl
jl
sbb
loopne
int
faddp
rorb
mov
adc
push
push
add
pop
ret
pushf
enter
dec
cmc
and
pushf
mov
cltd
cmp
push
mov
push
xor
dec
inc
mov
push
add
inc
or
inc
and
fs
mov
lret
inc
cmp
cmp
xchg
cmp
pop
mov
and
pop
xor
enter
or
or
sub
sub
xchg
sub
or
and
fbld
or
inc
cmp
adc
sbb
in
inc
sbb
test
xchg
test
ss
fnstenv
or
lea
xor
test
push
std
test
test
mov
add
pop
adc
pop
lods
repz
bound
mov
push
jne
push
or
pop
mov
int
or
clc
or
inc
or
enter
test
mov
cli
ljmp
into
mov
jle
pop
outsl
sub
mov
dec
pop
popf
xchg
sub
lds
xchg
push
adc
adc
mov
jno
outsl
call
in
or
dec
in
mov
xlat
sub
mov
or
and
jmp
cs
lods
pop
in
add
mov
cs
cmp
lahf
add
imul
adc
gs
mov
outsb
mov
enter
and
cld
aam
xor
scas
dec
and
and
push
cmp
push
and
inc
and
add
jo
outsl
dec
jne
mov
movsl
mov
cmp
dec
test
jo
arpl
pop
sbb
push
xchg
and
dec
popa
arpl
xchg
leave
jg
mov
roll
pop
rorb
adc
test
or
inc
cmp
aas
jb
mov
stos
xchg
and
inc
xor
mov
and
sahf
and
jbe
dec
inc
hlt
jb
push
arpl
pop
cwtl
std
imul
inc
test
push
inc
push
pop
xor
sub
cwtl
out
dec
inc
jb
jle
jle
lea
jle
cwtl
sarl
insb
xchg
cmp
shr
scas
jno
sahf
aam
cmp
xor
sub
pop
jnp
je
mov
imul
outsb
movsl
inc
ficomps
cmp
ret
add
jo
scas
cld
bound
dec
fdivrl
das
ficoms
imul
cmpsl
dec
movsl
pop
and
into
pop
pop
dec
dec
pop
mov
inc
adc
jne
cltd
pop
push
dec
stos
sub
or
gs
fcom
or
cmp
push
sub
add
ret
mov
jne
push
movsl
sub
add
stos
inc
fs
mov
aad
sub
popf
gs
and
sub
cs
and
mov
cmp
or
mov
mov
mov
xor
jae
and
jne
fnstcw
sub
mov
sub
push
in
push
push
cld
mov
hlt
cmpsb
and
add
sub
pmulhw
insb
arpl
shll
sub
and
movsb
mov
cmp
cmp
push
pop
lret
mov
push
inc
xor
imul
fs
je
or
push
adc
inc
mov
stc
xchg
clc
mov
das
push
idivb
pusha
out
popa
pushf
pop
add
imul
dec
sbb
or
add
daa
push
mov
or
xor
out
or
loopne
out
lahf
out
lods
jl
outsl
stos
fcoms
add
or
iret
mov
cmovno
jno
adc
sbb
movb
roll
xchg
mov
mov
sbb
popf
push
jne
add
jno
mov
lea
add
add
dec
jb
out
into
push
lret
mov
lods
pop
bound
jne
cmpsb
add
add
lea
rcrl
mov
mov
pop
sub
mov
and
out
stos
mov
aam
pushf
add
test
call
sbb
mov
shr
or
incb
cmc
add
sahf
ss
and
mov
adc
sbb
sbb
add
push
je
roll
sub
dec
les
mov
xor
cli
inc
mov
push
adc
mov
adc
cmpsb
add
add
testb
xor
ret
mov
lea
aad
mov
xchg
mov
mov
or
xchg
pop
adc
sub
jp
sub
call
or
cmovnp
inc
movsb
cmp
inc
adc
lock
sbb
scas
push
sbb
jns
cmp
inc
dec
cli
stos
push
or
sub
jl
lret
cmp
dec
imul
cmp
push
lea
push
adc
push
mov
jle
mov
inc
push
adc
xchg
sbb
and
sub
jecxz
stos
lret
or
push
lcall
dec
sbb
push
and
fbld
inc
adc
je
pop
xor
inc
jb
push
imul
mov
popa
inc
test
popa
or
push
jo
push
orb
jl
inc
and
into
ret
imul
xchg
std
add
push
mov
hlt
jmp
xlat
push
int3
scas
xor
or
inc
sbb
or
add
pop
arpl
add
push
leave
jb
pusha
jns
cli
lds
in
cmp
lea
and
les
popf
add
mov
mov
or
aam
jno
or
aaa
push
das
cltd
dec
movsl
push
repnz
pop
push
mov
jnp
push
call
xor
or
push
adc
adc
enter
lods
mov
xchg
fldenv
sub
sub
or
mov
push
ret
push
add
js
imul
es
inc
cwtl
push
out
pop
add
and
adc
call
push
cld
es
jmp
or
push
xor
sbb
in
into
mov
negl
mov
aas
sbb
and
jle
push
test
pop
bound
scas
inc
jb
pop
arpl
xor
jmp
adc
fwait
test
mov
fdivp
clc
push
pop
ud2
or
add
mov
or
sub
in
orb
fbld
mov
shrl
and
test
sbb
test
add
xorb
pop
cmpsb
dec
mov
mov
popa
mov
dec
and
cmp
xchg
lret
xor
inc
sbb
sbb
jg
mov
mov
push
fwait
scas
sbb
shrl
pop
mov
mov
sbb
and
mov
fs
or
push
push
adc
fiaddl
lock
xor
cmp
mov
jmp
nop
push
pop
cmpsb
adc
xlat
xchg
jecxz
aaa
xchg
test
mov
sub
mov
pop
fisttpl
and
mov
call
xchg
mov
ljmp
add
call
adc
mov
mov
jge
or
xor
vmread
jmp
cmp
sub
xchg
ret
pop
addr16
call
mov
push
test
pop
add
shll
daa
pop
mov
push
icebp
call
push
mov
sub
xchg
test
shl
addr16
or
movsl
sbb
add
jnp
xchg
clc
cmp
adc
sub
into
sbb
fidivrl
mov
xor
push
push
stos
jecxz
fildl
add
jne
mov
dec
aas
sbb
mov
xchg
pop
lods
cmp
push
inc
out
dec
in
ret
push
inc
ljmp
into
ret
lds
ljmp
test
xor
call
scas
inc
and
pop
loopne
stc
sbb
push
roll
popf
cmp
inc
adc
cmpsb
jle,pt
lods
xor
adcb
push
mov
rorl
and
call
xchg
adc
jbe
jo
movsl
sub
rol
movsl
ret
rolb
cmp
stos
movsl
cmp
mov
shll
cmp
xchg
hlt
loope
test
movsb
imul
call
inc
movb
mov
mov
or
and
dec
sub
mov
mov
sbb
inc
add
pop
out
les
push
test
les
imul
and
pushf
xor
imul
repz
xor
repz
xor
or
sub
cmp
test
pop
sbb
outsb
push
jo
sbb
lea
addr16
sbb
mov
mov
adc
cmc
ret
pop
enter
cmc
push
mov
mov
movb
add
pop
add
pop
inc
insl
jmp
and
push
dec
mov
sbb
jl
push
adc
jne
fs
mov
fists
int3
ss
add
mov
add
push
lcall
inc
inc
xor
jne
dec
add
lahf
cli
dec
add
popf
dec
lret
xchg
cmp
dec
pop
xchg
lea
fsubr
dec
adc
lods
xor
add
pop
addl
setbe
jle
and
pop
mov
fadds
or
fwait
lea
mov
aaa
sub
push
outsl
ss
les
je
push
pop
add
stc
repz
unpckhps
das
pop
pop
add
std
push
sub
xorb
add
mov
out
add
loopne
push
imul
push
mov
int
and
daa
mov
push
and
rorb
xor
add
cmp
adc
fnsave
pop
pop
dec
ja
pop
loopne
jbe
and
stos
push
and
test
xlat
cwtl
pop
subb
gs
cmpsl
cli
mov
stos
add
xchg
imul
sbb
mov
in
cli
dec
fistps
pop
outsl
pusha
dec
xor
aaa
into
lahf
sar
mov
stos
add
inc
popf
or
add
mov
add
mov
cmp
rorl
test
lcall
lock
inc
jp
mov
fs
loope
xchg
cmp
add
xchg
imul
mov
ljmp
mov
cmpsb
pop
pop
cmp
clc
xchg
lock
sbb
jg
and
in
mov
aaa
cltd
jle
push
cmc
add
flds
jbe
addb
add
push
out
cmpsl
xchg
xchg
cld
pop
add
pop
pop
and
shrl
or
add
xchg
popf
pop
movsl
adc
enter
xor
roll
push
out
mov
outsb
or
insb
adc
xchg
inc
add
and
and
mov
add
pushf
xorb
xchg
cmp
mov
loope
push
cs
sub
add
imul
fidivs
mull
add
out
in
add
adc
or
jmp
push
pop
xor
and
jge
scas
sbb
cmp
push
sahf
lret
jl
or
pop
lds
cli
arpl
dec
in
decb
add
rolb
sub
pop
mov
out
dec
or
pop
jp
jns
cli
pop
mov
ja
add
jge
stos
btc
fwait
rol
pop
aaa
adc
arpl
xorb
mov
jb
and
adc
call
cmp
das
fmull
jae
add
pop
adc
insl
pop
xchg
add
fdivs
sti
add
push
add
pop
sbb
das
mov
call
dec
mov
arpl
pop
mov
pop
inc
xchg
cmp
push
xor
mov
daa
in
mov
mull
rcll
add
add
sti
rcrb
testb
pushf
aam
stos
in
and
sbb
add
inc
pop
xchg
out
pop
xor
shll
nop
cmpsl
mov
jle
rcrb
std
ss
add
pusha
mov
add
jg
es
jmp
pop
addr16
je
cmpsb
add
ret
push
test
sti
scas
rcrb
dec
mov
pop
inc
xchg
out
pop
pop
mov
mov
int3
lea
fbstp
out
push
or
shrl
cs
inc
sub
mov
jmp
mov
xchg
ja
add
mov
ret
les
int3
add
adc
clc
imul
outsl
add
sbb
xchg
pop
add
xchg
shll
and
iret
add
adc
sbb
ret
scas
pop
ljmp
add
jne
loope
cmpsl
sub
aas
cmc
lret
push
lea
leave
pop
out
mov
pushf
sub
addr16
lods
sbb
sbb
xor
add
sub
push
mov
mov
int
testb
shrl
mov
cmp
add
rcrl
pop
testb
mov
pusha
adc
add
mov
or
and
lea
add
test
lds
jmp
cmp
cwtl
add
stos
les
pop
jp
imul
lahf
mov
jg
jl
movl
sbb
sbbb
adc
and
jg
adc
ret
cmp
mov
testb
dec
inc
and
int
add
xchg
pop
add
add
xor
cmp
push
add
xchg
repnz
sub
loop
mov
xchg
add
clc
leave
and
push
add
dec
add
iret
movsl
xor
add
sbb
iret
xor
and
outsb
adc
popl
xchg
test
add
push
xchg
repz
cmpsb
add
jb
cmp
ret
or
or
adc
adc
cmp
and
xchg
mov
addl
xor
inc
xchg
add
mov
lods
rdpmc
mov
push
and
add
inc
rorl
stos
mov
cmp
inc
jb
lds
or
loope
imul
mov
shlb
stos
add
xor
xor
dec
mov
test
test
push
cmpl
push
add
pusha
shlb
dec
rcrb
dec
ret
xchg
subb
loopne
insb
lahf
jae
push
cli
lods
xor
push
in
mov
test
or
cmovnp
repz
into
add
fdivl
mov
xchg
dec
sti
sub
sarb
or
pop
movl
hlt
jb
dec
cmp
jnp
add
out
push
divps
lds
inc
push
fdivrs
cmp
cmp
repz
enter
add
push
out
or
scas
pop
xor
xchg
in
fcomp
jno
test
pop
or
jae
das
jbe,pt
inc
call
inc
mov
sbb
neg
push
push
mov
insb
clc
repz
adc
scas
add
int
aaa
or
mov
sahf
push
pop
sarb
sbb
and
and
dec
sub
or
repnz
pop
mov
ljmp
add
insl
es
push
or
push
je
mov
sub
pop
push
inc
fadds
cmp
jns
test
jg
add
push
clc
fdivrl
dec
lahf
cmp
ret
and
mov
test
nop
push
sti
stos
icebp
mov
jmp
cmp
jne
sub
stc
in
mov
mov
mov
leave
insl
mov
add
int
add
popf
jnp
pop
in
xlat
into
subl
pop
add
sbbb
cmp
mov
mov
ret
mov
push
popf
clc
push
or
add
test
push
jle
dec
pop
add
push
xor
sbb
jns
sub
js
add
xchg
push
rolb
pop
lahf
mov
sets
addr16
mov
ds
mov
jl
pop
mov
jb
add
push
cmp
and
add
mov
sbb
aam
iret
xchg
sub
inc
sub
enter
mov
jne
jecxz
and
jmp
or
sub
push
add
lods
divb
sarb
js
loope
pusha
gs
push
and
hlt
inc
cmp
int3
ds
add
xchg
mov
cld
arpl
lock
inc
out
addb
dec
lods
xchg
cmp
cld
jno
xor
mov
push
jl
add
sub
mov
sbb
pop
nop
dec
add
push
aaa
les
nop
push
testb
adc
in
cli
out
ja
add
pusha
movsb
push
dec
add
roll
rolb
jg
adc
test
aas
mov
dec
adc
std
insl
mov
in
mov
cmp
pusha
cld
std
outsl
clc
add
xchg
js
add
xchg
insb
mov
xchg
les
xor
ror
add
pop
pushf
bound
rcr
sub
fbstp
push
lret
int3
xchg
cli
xchg
lahf
mov
nop
je
xor
add
fcoms
jae
add
out
fisubs
sahf
add
dec
inc
adc
fistpll
popf
add
push
in
jmp
cmp
add
js
out
fisttpl
popf
xchg
dec
add
mov
out
aad
sub
test
cld
mov
outsl
lods
add
adc
adc
add
and
fadds
add
das
ljmp
xor
push
popa
inc
cmc
push
shll
adc
xor
lds
cli
insb
inc
add
adc
push
jae
jmp
add
sub
add
into
add
add
loope
outsb
cmpb
add
mov
fnsave
jge
sti
adc
push
xchg
jne
jmp
jp
js
mov
ja
jno
rcpps
inc
add
jl
push
setl
in
hlt
add
add
insb
add
add
call
ret
dec
fidivrs
lcall
pop
jno
add
data16
jge
mov
cmpsl
cwtl
aam
mov
xor
mov
les
sub
aam
cs
int
jo
out
and
lcall
stos
pop
sbb
mov
add
or
test
jb
add
jo
lcall
insb
jbe
test
repnz
add
push
add
sbb
add
xchg
or
mov
ret
adc
or
adc
add
pop
cltd
pop
hlt
lret
div
dec
mov
push
je
mov
xchg
lock
adc
jl
dec
into
ja
or
push
imul
dec
fmull
sti
sub
das
and
cmp
scas
jmp
add
xor
sbb
ficoms
ljmp
pop
inc
fst
add
sub
pop
idivb
lret
out
add
and
jmp
aas
add
fcmovnbe
add
mov
mov
cld
dec
xchg
or
pusha
mulb
mov
add
pop
testl
shlb
push
jne
loop
repnz
add
arpl
xor
xor
dec
in
jge
adc
xor
add
push
cmp
add
cmp
inc
js
add
mov
add
cmp
aam
push
dec
pop
mov
add
pusha
add
int3
add
iret
adc
cmp
js
mov
test
push
cs
mov
inc
sar
and
scas
repnz
mov
ljmp
cmp
retw
test
add
imul
shr
add
cmc
gs
cmp
xorb
movsl
lcall
cmp
add
xrelease
dec
jmp
loopne
or
jbe
pop
add
clc
jb
dec
jp
pusha
popf
cwtl
add
inc
into
add
cmp
out
or
pop
sbb
aad
xor
add
jmp
fisubs
add
jae
fsubrl
in
pop
outsl
push
dec
stos
cltd
sub
xor
or
leave
cmc
int
jbe
sahf
lahf
cmpsl
movb
cmp
push
daa
mov
loope
movsl
xor
test
adc
pop
and
cltd
push
and
mov
js
and
push
in
ja
out
push
lds
imul
fadds
pop
mov
and
push
movb
pop
lods
cmp
mulb
push
js
adc
insb
ljmp
mov
movsb
mov
xchg
rcrb
loop
pop
pop
or
xchg
dec
cmp
or
and
sbb
repnz
xchg
sub
cs
add
mov
repz
test
scas
adc
add
xchg
test
fisubrl
in
mov
aaa
decl
adc
adc
inc
insb
outsb
sub
or
mov
scas
xchg
cmpsb
in
test
mov
fistpll
call
aam
fdivl
test
jns
out
ficoms
push
mov
mov
adc
adc
mov
fdivrl
mov
or
xor
enter
insb
mov
adc
shll
sbb
iret
inc
xor
in
xchg
mov
movsl
test
loopne
mov
and
dec
sub
in
jle
jno
xchg
fnstcw
and
sbb
in
sub
shrb
cmpsb
mov
cld
jo
adc
jge
sub
loop
xchg
inc
inc
jno
mov
jp
les
je
cmp
das
adc
jno
sub
clc
jb
loop
jb
mov
sub
ret
push
and
cmp
rorb
mov
jb
xchg
sti
sub
mov
frstor
add
jl
adc
xor
lret
lmsw
stos
inc
movb
mov
clc
pop
outsb
adc
or
push
fisubs
sbbb
jae
jae
pop
test
lds
xlat
push
fisubrs
jg
mov
pop
ficoms
sarl
in
push
notl
jg
or
pop
xchg
xor
test
mov
dec
inc
test
outsl
adc
in
mov
inc
sbb
rcrb
xchg
enter
repnz
dec
aad
xchg
aad
cmp
push
call
test
push
arpl
or
jnp
adc
insl
dec
jb
enter
pop
cmp
inc
inc
jne
pusha
mov
sbb
jne
roll
neg
sbb
clc
mov
pop
lret
and
lret
mov
lock
addb
je
mov
pop
test
inc
mov
jbe
and
andl
jbe
hlt
jbe
push
push
inc
dec
sub
lds
lret
clc
arpl
jg
out
sub
jae
test
ja
lret
pop
shll
add
ret
jbe
mov
orb
add
push
jo
adc
js
inc
and
aaa
pushl
inc
pop
mov
or
mov
cmp
and
adc
add
push
daa
pusha
ja
add
mov
inc
aam
add
cltd
xlat
mov
mov
mov
mov
jno
dec
mov
mov
mov
xchg
sub
cs
in
ret
aaa
dec
bound
pop
mov
jns
lock
arpl
or
mov
mov
enter
mov
mov
in
jl
mov
sar
sub
inc
test
test
shll
lods
cld
xor
sbb
mov
inc
jp
rolb
loop
mov
or
imul
adc
jnp
cmpsl
test
mov
xchg
mov
and
mov
and
mov
test
scas
dec
xor
mov
ss
cltd
and
imul
and
loop
jl
adc
push
add
call
adc
sbb
pushf
imul
sbb
lock
test
in
addr16
stos
shlb
sbb
mov
adc
inc
mov
mov
pop
mov
cmp
push
add
adc
xchg
fiadds
jmp
or
call
rorb
test
jge
or
mov
mulb
iret
jge
jg
xchg
test
sub
fadds
jle
pop
sub
ret
adc
inc
mov
pop
mov
clc
mov
jle
and
mov
dec
sub
aad
pop
adc
loopne
cmp
inc
mov
clc
mov
inc
jg
adc
ljmp
cmp
mov
pop
mov
inc
jg
jnp
sbb
test
idivb
les
mov
jg
rorl
push
adc
or
aas
mov
mov
mov
jge
icebp
adc
mov
adc
mov
dec
cmpb
movsl
xor
aas
or
fmuls
sbb
stos
subb
cs
adc
adc
xorb
or
adc
in
lock
mov
pop
call
mov
cmp
lea
sti
adc
orl
adc
lret
in
and
subb
inc
addb
bound
sub
inc
add
lea
jle
mov
test
cmp
adc
pop
pop
lods
faddl
iret
out
loope
mov
sahf
rorb
in
push
adc
mov
inc
xlat
popa
pop
push
lea
adc
les
cmp
mov
or
adcl
sbb
fs
ljmp
xchg
or
and
adc
sbb
das
fsubs
decl
adc
loope
test
adc
icebp
or
adc
into
ljmp
or
fadd
out
sub
or
mov
inc
cmp
icebp
xlat
or
mov
aaa
jle
mov
test
sub
ljmp
fsubs
test
jnp
xchg
rorb
xchg
out
mov
and
shlb
xchg
fadds
adc
clc
pop
inc
xchg
out
pop
lds
enter
lods
lods
fs
mov
xchg
adc
es
iret
pop
dec
or
and
xchg
ret
sbb
leave
xchg
out
fmuls
sbb
sbb
mov
xchg
pop
lock
xor
add
mov
fisubs
cmpsb
xchg
bound
mov
and
xchg
mov
and
xchg
xchg
mov
shrl
iret
adc
cmp
xchg
or
movsl
xor
ret
enter
insb
lahf
mov
shll
lds
les
mov
adc
mov
sub
add
jno
sub
adc
popa
inc
dec
jle
sub
out
cltd
inc
in
retw
or
mov
lods
and
dec
call
rorb
lea
xchg
sbb
je
fisubrs
jns
lret
mov
enter
test
dec
ss
and
mov
mov
ficoml
mov
lea
loope
enter
push
movsl
xchg
into
inc
and
aam
mov
mov
xchg
mov
lret
aad
lods
xchg
enter
sub
xchg
icebp
ficoml
loop
mov
movb
cld
ret
outsb
sub
mov
rorb
scas
lock
jae
int3
fstl
das
add
push
shll
xlat
mov
mov
les
cltd
cs
lods
rorl
fldenv
dec
fwait
mov
xchg
enter
lea
pop
inc
pop
lea
jg
test
lea
fcomps
cwtl
mov
loope
fabs
gs
int
mov
lea
clc
fsubl
adc
inc
adc
sub
push
and
int
sbb
dec
ja
test
adc
sbb
mov
cmp
cwtl
cs
cwtl
lret
push
loopne
and
xor
mov
ret
ds
cwtl
mov
jl
dec
sbb
mov
pop
inc
clc
jae
je
data16
adc
and
inc
fwait
push
push
out
fwait
fs
or
dec
rorb
and
decb
nop
ss
test
nop
xchg
fcompl
bound
test
loope
int3
loope
lods
jb
rclb
insl
repz
nop
push
mov
nop
fsubl
pop
xchg
inc
add
sbb
loop
fwait
push
and
rcrb
inc
dec
push
test
adc
sbb
xchg
or
fwait
adc
push
rorl
and
xor
or
test
fwait
jl
inc
fwait
adc
clc
cmp
xchg
iret
sbb
pop
push
mov
je
pop
or
int3
out
sub
add
scas
push
adc
cmpsl
sti
pop
and
jecxz
and
loop
lahf
pop
jns
subl
or
int3
adc
and
and
outsb
xchg
mov
cld
sub
inc
sahf
test
les
lahf
inc
mov
sub
pop
aad
adc
sahf
or
into
sbb
int
and
xchg
test
xchg
ret
adc
and
mov
xchg
fisubs
fistpl
and
sahf
mov
or
add
mov
xchg
xchg
out
and
adc
sub
adc
loope
sahf
or
xor
enter
insb
aam
sub
xchg
and
cli
sahf
vpmacsdd
xchg
pop
adc
xchg
push
adc
insl
aam
fdivrs
xchg
mov
and
adc
adc
mov
sub
dec
inc
clc
push
cmpsb
call
or
or
push
mov
adc
xchg
loop
xchg
xor
xchg
fdivs
xchg
jne
fisubs
xchg
xchg
bound
pop
cmp
pop
push
add
out
cwtl
pop
in
dec
mov
add
adc
and
inc
call
hlt
and
addr16
pop
pop
mov
jo
mov
and
cmpsl
or
pop
sbb
int
or
les
cwtl
outsb
adc
cwtl
mov
inc
mov
call
adc
mov
mov
dec
lret
call
xchg
sti
test
iret
or
shl
push
adc
mov
mov
cltd
push
and
xchg
bound
call
pop
inc
mov
push
cltd
je
dec
cmp
cmc
gs
roll
arpl
mov
xor
jne
mov
movsl
mov
and
in
xchg
or
and
data16
lds
inc
shl
mov
and
lcall
cmp
jecxz
mov
iret
adc
in
movsl
xor
mov
inc
clc
dec
divl
adc
mov
inc
movsl
inc
inc
fwait
icebp
fbld
fwait
sbb
out
ret
sub
fwait
testl
js
and
fsubs
xor
mov
jns
or
lea
fdivp
adc
movsl
notl
test
sub
jmp
lahf
cmp
adc
stos
mov
pushf
test
stos
adc
stos
test
pushf
jl
inc
test
sub
mov
inc
push
xchg
mov
pop
test
sub
inc
popf
mov
scas
in
cmp
int
loop
stos
push
and
popf
aam
dec
stos
and
lea
inc
dec
jno
adc
imul
mov
xchg
mov
push
repnz
cwtl
mov
shr
clc
dec
mov
mov
sub
insb
popa
test
sub
cs
jecxz
and
mov
inc
into
add
adc
ss
sbb
or
xor
cmp
push
cs
lock
push
adcl
sub
cmpsl
xlat
imul
jo
lahf
jae
pop
xor
add
jb
xchg
mov
push
enter
cmpsl
in
mov
popf
adc
jne
xor
add
xor
cmp
ja
xlat
outsb
mov
add
shrl
jae
dec
mov
shlb
nop
jno
add
subb
add
movl
xchg
mov
or
cmc
inc
loop
jb
inc
out
out
dec
mov
lods
cmp
ret
xor
inc
inc
shrl
sub
loop
out
adc
sub
inc
lods
test
mov
iret
pop
mov
inc
mov
ds
mov
dec
mov
pop
mov
loop
scas
jo
xchg
nop
test
mov
lods
or
mov
mov
lods
or
mov
adc
adc
dec
test
mov
adc
sub
xor
sbb
and
insb
sub
lods
jl
inc
lods
adc
mov
scas
scas
adc
insb
jecxz
cmpsb
jo
xchg
inc
int
sbb
sbb
cmp
ljmp
adc
test
inc
mov
ja
inc
mov
xchg
les
es
scas
sub
inc
mov
ret
movsb
loop
xchg
xor
movsb
outsb
call
loop
movsl
xor
sub
jl
xchg
ljmp
mov
add
push
daa
mov
pop
sub
dec
inc
sub
popf
rcll
aam
sub
xor
cmpsb
sbb
ds
or
and
xor
test
test
inc
add
jne
pop
arpl
divb
mov
dec
pop
sub
out
pop
sbb
addr16
jmp
add
xor
hlt
sbb
push
fs
popa
xor
sbb
mov
and
push
sub
xchg
pushf
lods
push
scas
aam
xchg
cmpl
add
inc
and
dec
push
testb
mov
dec
mov
inc
dec
push
mov
push
inc
out
or
ja
fistl
test
and
inc
je
lods
and
pop
scas
inc
inc
cmp
jg
aas
dec
mov
push
cmp
int3
push
dec
sub
outsl
dec
xor
push
xchg
push
dec
jp
in
xchg
dec
push
jl
add
insl
push
inc
dec
insl
push
mov
pop
out
out
push
cmp
gs
add
daa
pop
jle
pop
lods
push
inc
mov
mov
sub
and
mov
push
and
pusha
or
inc
dec
movsb
mov
cwtl
sbb
sub
sbb
mov
add
adc
mov
jo
xchg
lret
cltd
add
inc
push
lcall
mov
fdivl
mov
test
inc
push
lods
inc
in
mov
lds
or
adc
jb
aad
or
inc
mov
loope
mov
pop
mov
xor
hlt
mov
inc
out
and
adc
out
inc
xchg
inc
insb
hlt
and
or
orb
mov
inc
inc
in
inc
daa
mov
js
clc
sub
cs
adc
push
das
in
adc
rorb
mov
sbb
fs
adc
or
inc
nop
flds
xchg
pop
sub
or
pop
and
and
js
xchg
mov
mov
cli
fadd
mov
adc
mov
lea
imul
add
mov
fwait
call
push
pop
sbb
in
or
sub
int3
enter
call
fcomp
fxch
push
loopne
jecxz
imul
aad
dec
dec
mov
rclb
je
stos
ja
push
push
popa
je
xor
inc
shll
jle
dec
movsl
stos
cmpsb
mov
dec
xor
and
xchg
or
push
or
add
adc
jo
pop
int
cmp
loope
add
sub
sbb
ror
or
sbb
rcrb
mov
enter
mov
adc
add
adc
test
xchg
add
inc
adc
mov
adc
and
dec
cmp
adc
pusha
dec
push
inc
orb
mov
and
rclb
fsubs
dec
add
in
xor
add
add
and
hlt
push
inc
xor
movsb
mov
pop
push
adc
pusha
cmp
mov
adc
mov
in
jno
pop
psrad
push
pop
adc
ret
lods
adc
add
add
mov
dec
mov
inc
rcr
mov
adc
leave
in
nop
shl
or
rclb
jmp
shrb
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
or
dec
rclb
call
pop
and
shrb
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
or
gs
sbb
mov
inc
fsub
mov
lret
mov
xor
inc
push
in
dec
add
pop
test
dec
jne
insb
and
cmp
test
add
push
into
push
adc
push
pop
punpcklbw
or
or
or
push
mov
adc
adc
adc
sbb
sbb
add
xchg
movsl
adc
adc
aad
jmp
mov
aad
stos
cmpsb
add
xchg
xor
ja
popa
push
out
add
les
hlt
add
xor
inc
add
xor
pop
fdivrl
xorb
xchg
add
dec
mov
mov
pop
sub
mov
mov
repnz
mov
test
add
sbb
in
insl
push
mov
hlt
add
test
adcl
adc
shrb
std
add
leave
mov
add
fldcw
and
add
enter
pop
adc
imul
push
addr16
add
aam
dec
add
test
movsl
cmp
test
xor
leave
add
lods
jecxz
fdivs
add
filds
or
cmp
fldenv
jo
sbb
push
addb
mov
and
les
mov
mov
sub
mov
or
and
jo
mov
das
adc
stos
sbb
sub
add
jbe
jno
add
adc
out
mov
mov
push
movsl
in
lahf
add
aam
call
cmp
jle
cwtl
push
loope
mov
cmp
add
pop
arpl
hlt
push
jno
mov
and
sbb
xor
dec
xchg
cli
jnp
movsl
add
shl
adcb
pmaddwd
fnstenv
xchg
mov
mov
bound
sub
rorl
pop
popa
mov
into
inc
sub
add
inc
movsl
fisttps
xlat
xchg
fadd
les
shll
jmp
fldcw
inc
mov
lods
sarb
add
in
add
pop
dec
add
stos
leave
jl
fnstsw
cmp
push
xchg
daa
adc
or
leave
and
test
add
aam
mov
add
stc
ficomps
leave
fldcw
jne
add
mov
test
pop
cmp
or
mov
mov
in
add
loop
add
cmp
ljmp
add
add
push
fdivl
or
arpl
test
fs
ds
insl
or
loopne
push
in
decl
or
mov
pop
jge
inc
add
lock
add
push
inc
push
imul
xorb
insb
sbb
shrb
sbb
incb
loopne
rorl
add
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
add
fisttps
addr16
cmpsb
add
push
mov
dec
ss
add
sub
scas
pop
testb
pusha
jp
inc
ret
out
in
fbstp
cmp
orb
inc
add
mov
shrb
ss
push
add
inc
or
and
es
mov
mov
pop
add
cmpsl
incl
xlat
ret
shlb
sub
scas
ficomps
clc
fs
add
repnz
pushf
mov
xchg
insl
add
add
jmp
addr16
jb
push
loopne
add
jp
loop
scas
sub
or
fwait
mov
xchg
or
mov
fdivrl
fisttpl
jg
push
roll
clc
mov
push
pop
int
mov
mov
outsl
out
or
jle
push
incl
lret
pop
or
adc
sahf
add
imul
add
loop
mov
xlat
push
addl
mov
add
popa
cmpsl
notl
add
dec
inc
imul
dec
push
scas
fcompl
fldenv
filds
cmp
fdivs
push
cmpb
jg
mov
jmp
sbb
mov
lret
add
and
ss
testb
xlat
int
push
ficoms
add
and
jp
mov
dec
add
add
push
outsl
sub
mov
aas
or
sbb
pop
out
add
sbb
xchg
push
in
push
adcb
jnp
cli
fcomip
lods
das
out
and
xchg
jl
sub
fildl
les
mov
add
loopne
hlt
fistps
adc
sub
and
or
mov
or
out
mov
enter
inc
fcompl
clc
enter
jno
jbe
test
lcall
lea
mov
je
fists
xchg
mov
stos
sub
mov
add
adc
and
inc
sub
mov
push
sub
cmp
enter
xor
loopne
add
and
or
in
ret
inc
mov
mov
int3
sbb
repz
or
sbb
jns
cmp
iret
imul
dec
lea
daa
js
fnop
xchg
call
loop
cmp
int3
add
mov
xchg
or
jns
adc
adc
dec
sub
mov
dec
inc
enter
mov
xor
int3
nop
adc
test
and
xor
and
mov
cwtl
jo
cmp
xor
je
sar
push
dec
repz
insb
cmpsb
andb
cbtw
jns
or
lahf
sbb
cltd
adc
sbb
pop
arpl
and
xor
sbb
lds
sub
stc
xchg
xchg
hlt
and
enter
test
push
mov
dec
int3
sbb
loopne
mov
and
cltd
cmp
jmp
test
adc
rcrb
lock
cwtl
cltd
or
sub
andb
cmp
rcrb
inc
enter
icebp
ss
add
pop
ret
inc
add
mov
and
adc
sub
push
sbb
lods
stc
insb
adc
adc
ret
add
jl
mov
int3
push
and
insb
and
add
jb
mov
inc
in
hlt
pop
add
or
xchg
push
and
inc
inc
pop
mov
jle
mov
xchg
scas
and
inc
shl
mov
adc
push
add
and
dec
inc
xchg
dec
and
data16
sbb
sub
adc
add
sbb
or
adc
push
cmpsb
or
js
mov
push
mov
and
inc
in
mov
sbb
mov
sub
push
enter
je
addb
mov
mov
xchg
cld
adc
and
inc
sub
mov
bound
dec
mov
mov
sbb
add
adc
sbb
jno
and
xor
push
add
pop
or
sahf
and
dec
mov
inc
lock
adc
cmp
xchg
pusha
and
adcb
dec
aam
loop
add
adc
sbb
orl
push
and
enter
or
lock
sbb
and
dec
inc
xchg
push
and
jp
mov
into
xchg
loopne
repnz
inc
sbb
inc
adc
fs
jp
nop
and
xchg
ficoml
push
ljmp
or
cmp
xchg
pop
and
mov
mov
and
and
inc
sbb
mov
adc
pop
dec
push
andb
inc
stos
mov
and
inc
add
or
xchg
and
xor
mov
lret
or
mul
rorb
je
inc
jb
pop
inc
arpl
push
scas
mov
mov
dec
cmc
stc
jbe
pop
sar
mov
sbb
dec
fists
movsl
sbb
jne
loopne
push
inc
inc
add
cmp
sbb
sbb
gs
or
push
xchg
imul
push
idivb
or
arpl
cli
pop
xor
cmp
push
dec
push
push
sbb
push
adc
jne
lcall
jle
inc
sarl
push
inc
push
or
arpl
or
or
bound
jns
inc
js
mov
sub
sbb
mov
fcmove
xlat
dec
jmp
cs
dec
outsb
mov
movsl
push
inc
cmp
push
push
push
pop
push
dec
push
enter
jmp
mov
movsb
daa
dec
xchg
ljmp
divl
pop
aam
and
ds
jae
ds
js
lea
and
xchg
stos
jo
push
cli
fneni(8087
iret
push
push
mov
ja
or
icebp
stos
xchg
and
push
repnz
sbb
leave
cmp
xlat
icebp
out
xor
inc
cmp
mov
mov
repnz
popf
adc
jne
inc
outsl
dec
imul
je
sbb
xor
xchg
dec
mov
xchg
push
sbb
push
dec
jl
sub
outsb
rol
jbe
and
rorb
inc
inc
push
jns
and
push
jns
adc
lcall
push
push
dec
push
sti
dec
scas
sub
push
inc
inc
shll
adc
into
in
mov
int3
push
loopne
jne
cltd
xchg
push
and
lock
jbe
into
dec
xor
mov
stos
jb
dec
adc
addr16
arpl
push
sub
adc
push
imul
dec
push
jp
cmp
inc
decl
inc
test
out
jns
adc
mov
insl
je
mov
les
sbb
xchg
outsb
dec
addr16
nop
scas
push
adc
insl
pop
pop
dec
lods
jle
jg
mov
inc
jbe
jne
lds
in
inc
adc
jle
inc
inc
sbb
fdivs
inc
lods
movsl
insb
popa
push
dec
test
adc
xchg
sbb
outsl
in
inc
mov
ljmp
pop
push
fs
jae
sub
push
xchg
pop
xlat
xchg
arpl
or
sbb
inc
mov
push
cmp
push
pop
mov
popa
dec
sub
cwtl
fwait
mov
pop
sub
ss
mov
dec
arpl
push
push
dec
or
jns
jecxz
xchg
arpl
mov
xchg
inc
pop
insl
fldcw
jns
into
adc
jge
je
push
sbb
and
or
pop
and
pop
mov
or
stos
ja
stc
in
arpl
push
repnz
lea
jg
cmpl
dec
mov
or
test
mov
fcmovbe
daa
inc
in
xor
sub
xchg
mov
dec
add
test
pop
pushf
mov
adc
and
cmpsb
rol
stos
fs
popa
movsb
and
addr16
push
fidivrs
add
mov
jmp
push
inc
adc
in
shl
push
dec
out
xchg
lock
adc
inc
dec
loopne
ss
inc
addr16
ss
into
mov
mov
push
sahf
adc
es
dec
push
xlat
daa
enter
data16
push
push
sub
jmp
adc
lret
push
lods
pushf
or
fcomps
insb
adc
xchg
push
mov
lds
rorb
ret
mov
movsl
lea
movsl
dec
xchg
fisubl
mov
xchg
lret
mov
rcll
sub
mov
push
push
aam
push
cli
jp
and
xchg
mov
or
mov
or
inc
inc
repnz
jno
cli
repz
dec
js
jmp
lcall
push
test
sub
xchg
mov
xor
push
outsl
adc
ss
dec
push
inc
jbe
jae
mov
jno
push
push
cmpsl
ret
sbb
aam
xchg
jge
out
inc
push
inc
sub
lods
add
xor
add
int3
push
add
sub
sub
or
inc
adc
cmpsb
leave
movsb
or
cmc
outsb
add
xor
push
xor
in
cmp
sbb
and
inc
cmp
push
cmp
pop
cmp
fs
cld
adc
jp
xorb
xchg
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
xor
pushf
adc
pushf
xor
pushf
push
pushf
pop
pushf
bound
pushf
cmpsb
pushf
scas
pushf
mov
mov
pushf
pushf
fbld
jo
ja
mov
leave
lret
leave
fmulp
push
xor
jg
outsb
sbb
dec
movl
xchg
jp
test
mov
xchg
xchg
aad
call
clc
push
push
cmp
adc
es
xor
dec
dec
dec
push
dec
pusha
dec
dec
jae
jns
xchg
dec
lcall
dec
les
dec
loopne
out
out
dec
clc
inc
xchg
cmp
mov
call
push
cmp
lahf
cmp
xchg
fists
pop
cmp
and
sub
cmp
inc
in
in
in
in
cmp
cmp
jb
fidivrs
in
hlt
cmp
push
inc
aas
dec
dec
popa
dec
xchg
dec
fwait
dec
into
dec
clc
pop
daa
js
inc
loopne
adc
jb
jb
jb
jb
dec
arpl
cmp
js
jle
xchg
jb
jb
jb
jb
jb
sbb
xor
pushf
sub
xor
dec
push
adc
push
mov
sbb
aam
fcmove
or
insl
jno
leave
pop
leave
fs
insb
leave
ror
fmul
in
jmp
sti
enter
push
jb
mov
jl
test
jb
jb
jb
sbb
xor
pushf
pushf
fwait
pushf
mov
xor
dec
daa
ja
nop
daa
test
daa
fsubl
cld
and
leave
fmulp
xor
into
add
inc
or
and
push
into
cmp
pushf
push
pushf
addr16
jle
xchg
cwtl
int
ds
cmp
push
cmp
in
in
in
in
in
in
in
in
or
push
pushf
vmread
jb
jb
push
outsl
fsubrs
in
cmp
cmp
mov
inc
add
and
pop
xchg
pusha
xchg
imul
or
and
leave
fs
push
jo
jbe
jnp
or
lahf
leave
movsb
leave
test
leave
leave
icebp
leave
cli
xor
jb
jb
jb
jb
jb
jb
jb
jb
sbb
setl
pushf
push
pushf
pop
pushf
bound
pushf
lods
pushf
roll
daa
bound
popf
cmp
cmp
ds
test
inc
add
push
push
mov
mov
pushf
mov
iret
xchg
cmp
enter
leave
das
xor
push
in
in
in
cmp
mov
stos
cmp
cld
test
and
sub
leave
sbb
sbb
and
sub
sub
leave
pop
leave
gs
outsl
leave
xchg
leave
stos
leave
mov
sub
leave
fmulp
out
out
leave
test
cmp
dec
jb
jb
jb
dec
mov
mov
cmp
cmp
cmp
push
or
dec
xor
dec
push
dec
addr16
jae
orb
lahf
dec
stos
dec
mov
dec
fimull
dec
ljmp
or
and
cmp
xchg
dec
xchg
push
xchg
pop
xchg
bound
leave
or
lret
lcall
daa
mov
daa
shlb
fisubl
loop
ljmp
or
adc
sbb
and
sub
xor
cmp
inc
xchg
lods
jb
jb
jb
jb
jb
jb
jb
jb
dec
xchg
mov
cmp
jo
push
and
das
cmp
cmp
dec
sub
les
orb
nop
dec
cwtl
dec
mov
cmpsl
sahf
shlb
daa
shlb
fsubs
loopne
call
fildl
leave
sbb
sub
notl
dec
xchg
push
xchg
pop
xchg
pusha
xchg
push
xchg
adcb
xchg
mov
xchg
mov
daa
shlb
fsubs
loopne
call
arpl
cmp
daa
sbb
fmull
cmp
cmp
dec
cmp
pop
cmp
push
sbbb
mov
pushf
mov
rclb
out
push
sbb
jb
dec
inc
call
push
dec
push
pop
es
pop
pushf
fs
push
test
mov
mov
mov
dec
les
int3
leave
ror
in
add
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
insb
cmpb
cmp
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
jl
sbb
sbb
and
and
sub
sub
xor
xor
cmp
push
xor
js
jl
and
in
in
mov
pop
xchg
pushf
cmp
cmp
sub
insb
pushf
loopne
in
call
fildl
leave
sub
je
mov
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
dec
cmpsb
test
lock
cmp
cmp
push
or
sub
xor
stc
cmp
inc
cmp
cmp
cmp
cmp
xchg
cmp
cmp
mov
add
in
cmp
mov
xchg
clc
xchg
cld
xchg
add
add
adc
xor
cmp
inc
xchg
inc
xchg
dec
xchg
dec
xchg
push
xchg
push
xchg
pop
xchg
pop
xchg
insb
xchg
mov
pushf
xchg
mov
xchg
lods
xchg
mov
mov
enter
lret
hlt
cmp
cmp
jo
cmp
daa
and
inc
and
xchg
pop
xchg
pop
push
dec
pop
xor
insb
cmp
cmp
push
mov
enter
or
or
adc
adc
sbb
sbb
and
and
sub
cmp
pop
leave
pusha
leave
fs
push
leave
je
js
jl
or
leave
mov
mov
fs
in
in
in
in
in
lds
mov
sub
sub
test
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
cld
cmp
cmp
cmp
xor
xor
in
add
inc
dec
movsb
dec
dec
pusha
dec
orb
mov
dec
xchg
dec
cwtl
dec
pushf
dec
mov
sub
in
icebp
es
pop
cmp
popf
jl
xchg
cs
pop
inc
pushf
push
xchg
xor
daa
leave
daa
int
shll
aad
fldenv
frstor
loope
in
jmp
fprem1
leave
stc
leave
std
enter
add
lcall
xchg
popa
xchg
imul
and
sub
sub
xor
insl
push
cmp
cmp
imul
in
in
sbb
mov
adc
addr16
xor
aas
daa
bound
daa
xchg
daa
scas
daa
shll
add
daa
outsl
daa
mov
stos
daa
mov
and
xor
leave
push
leave
leavew
mov
mov
lock
and
and
xor
fs
mov
lahf
xor
pop
cmp
cmp
cmp
push
push
cltd
push
andb
pushf
mov
pushf
testb
hlt
daa
pop
daa
addr16
jne
mov
aad
scas
setae
xchg
jbe
jge
push
jmp
enter
inc
jb
jb
jb
sbb
cmp
mov
into
dec
aad
fisttps
dec
in
dec
testb
add
push
xchg
or
adc
and
sub
inc
and
xor
outsl
xchg
jne
jge
xchg
mov
test
dec
in
dec
cmc
dec
incb
aas
adc
xchg
pop
pop
push
jb
jb
jb
dec
stc
dec
mov
or
add
and
gs
jp
xor
xchg
imul
je
in
in
inc
std
in
cmp
and
cmp
push
cmp
xchg
cmp
sbb
inc
ret
data16
xchg
xchg
popf
jmp
leave
out
add
adc
dec
pushf
adcb
rcll
jb
jb
jb
jb
jb
jb
dec
lahf
and
nop
xchg
ss
ret
in
in
mov
adc
aaa
and
cmp
jl
pop
jle
pop
pushf
pop
xchg
pusha
dec
test
insb
dec
jo
je
js
jl
andb
mov
mov
mov
les
enter
shlb
aam
fcoms
and
adc
sbb
int3
cmp
mov
lods
mov
mov
pusha
and
xchg
js
jl
test
xchg
mov
sbb
pushf
rcrb
fcomps
ljmp
adc
sbb
leave
xor
cmp
cmp
into
dec
xchg
je
js
into
test
dec
nop
dec
cwtl
dec
pushf
inc
and
arpl
pop
aam
push
ror
dec
aam
fsubs
fsub
daa
repz
jmp
sub
sub
xchg
and
in
in
in
lcall
dec
cmpsl
dec
mov
rol
daa
shll
out
lock
cli
and
loopne
sbb
and
inc
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
cmp
pushf
sbb
sub
mov
fsubrs
xchg
pusha
dec
stos
xchg
push
push
bound
loope
ret
leave
ror
fcmove
loop
ljmp
ss
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
pop
push
sub
jb
jp
orb
push
ficomps
and
mov
rclb
ljmp
aaa
or
adc
sbb
and
sub
xor
cmp
inc
in
in
in
sahf
pop
sub
sbb
pushf
jp
sbbb
mov
pushf
mov
pushf
rcrb
xchg
cmp
and
xchg
mov
sarb
in
in
in
xchg
jb,pn
dec
daa
cmp
push
repnz
mov
adc
xor
or
push
out
repz
decl
cs
loop
xchg
and
adc
leave
mov
xor
mov
dec
add
pushf
jo
sahf
xchg
les
dec
fbld
clc
leave
dec
add
mov
leave
pop
leave
addr16
lcall
leave
out
lcall
inc
sahf
pop
inc
dec
push
inc
add
fdivs
pop
xor
je
xchg
insb
aas
xor
shlb
xor
in
cmp
pop
sub
cmp
sub
rolb
lods
shlb
jo
jb
jb
nop
jp
dec
jb
sbb
cmp
push
ret
imul
pop
cmp
or
cwtl
xor
das
jb
pushl
inc
in
in
in
lcall
cmp
add
cmpl
ret
sub
cmp
cmp
push
inc
cmp
dec
lcall
fmul
sbb
pop
dec
jl
fstps
xchg
daa
subl
xchg
push
xchg
imul
decl
xchg
fs
xchg
mov
push
loopne
push
add
dec
cmp
dec
movl
out
cmp
cmp
cmp
cmp
cmp
inc
cmp
insl
andl
xor
outsb
orb
js
pop
cld
push
pushw
dec
push
dec
outsb
dec
cwtl
dec
incb
xor
inc
push
lock
dec
pushf
and
jmp
add
leave
rclb
jb
jb
jb
dec
fsts
pop
test
cli
xchg
cmp
mov
xchg
je
ja
subl
xlat
lcall
xor
inc
push
fwait
aas
cmpsl
dec
mov
lods
inc
lock
lret
xlat
and
lock
daa
lret
cmp
inc
daa
dec
xchg
xchg
mov
mov
movsb
cmp
xor
dec
cmp
dec
jnp
adc
daa
and
lock
mov
dec
dec
or
enter
pop
aaa
es
lcall
movb
inc
pushf
push
xchg
jbe
hlt
adc
sbb
cmp
push
daa
pop
add
outsb
mov
and
pop
sbb
cmp
jge
mov
cli
sub
lods
mov
or
pop
andl
lahf
sub
bound
xchg
repz
call
xchg
divl
or
mov
scas
in
in
mov
call
into
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
pushf
or
xor
push
xchg
or
push
xchg
sbb
es
sub
jb
dec
ss
cmp
cmp
inc
cmp
dec
cmp
push
test
in
in
in
in
xchg
test
xchg
mov
or
sahf
ret
push
xchg
adc
test
popa
pushf
into
sub
sahf
movsb
push
fisubrs
out
sub
cmpsb
negb
dec
inc
stos
push
push
lods
adc
mov
push
xchg
test
es
mov
sub
mov
pop
mov
inc
push
mov
push
xchg
add
pop
lods
ret
inc
mov
sub
jbe
jp
jle
orb
les
jb
jb
dec
lcall
stos
mov
mov
test
mov
test
lret
and
leave
fmulp
loop
loop
ljmp
add
mov
push
in
in
in
in
in
in
in
in
in
in
in
add
les
ret
testl
test
leave
push
leave
pop
sub
sbb
loope
push
outsb
leave
jb
jbe
jp
jle
xorb
in
in
in
in
lcall
stos
jb
jb
jb
jb
jb
jb
jb
dec
lret
rorb
dec
fimull
dec
loop
out
stos
jb
jb
jb
jb
dec
incb
xchg
push
xchg
adc
add
and
jb
jb
jb
pop
ss
pop
mov
dec
dec
dec
dec
dec
push
daa
push
pop
daa
pop
daa
bound
and
sub
mov
jb
jb
dec
xchg
xchg
mov
lcall
xchg
add
add
adc
mov
push
outsb
cmp
cmp
or
cmp
cmpsl
data16
push
dec
push
pop
sub
or
or
add
ss
xor
inc
leave
pop
or
cmp
jecxz
out
mov
xchg
mov
jo,pn
dec
xchg
pop
outsb
ja
mov
xchg
testb
mov
pop
cmp
test
lock
pop
xchg
pop
pop
cmp
xchg
mov
fwait
daa
test
and
push
or
push
push
loopne
in
sahf
pop
adc
push
inc
xor
pop
loope
or
pusha
jle
pop
dec
cmp
cmp
lea
pushf
cmpsl
pushf
mov
mov
fsub
in
mul
add
in
in
in
in
sahf
and
xchg
iret
xor
rolb
std
test
cmp
sub
cmp
pushf
cmpsb
pushf
hlt
pushf
sti
xchg
add
push
jo
jb
jb
jb
jb
jb
jb
jb
mov
jb
jb
jb
jb
jb
jb
jb
jne
pop
fistpll
pop
adc
mov
xchg
pop
push
sub
jmp
testl
jno
jns
cmp
and
pop
out
sbb
and
dec
pushf
pop
xchg
addr16
sbb
xor
popa
xchg
xchg
xchg
int
fsts
out
imul
xchg
das
and
add
cwtl
add
loopne
test
xchg
mov
pusha
loopne
push
adc
mov
xchg
pop
dec
xchg
and
test
pop
xchg
cmp
daa
leave
pop
cwtl
jecxz
in
das
pop
xchg
call
mov
cld
xor
aas
xchg
pop
xchg
outsl
xchg
ja
bnd
jb
pop
test
call
cmp
xor
and
pushf
xchg
xchg
mov
push
pop
adc
xor
dec
cmp
popa
mov
leave
insl
sub
cmp
test
aam
int3
add
lret
add
lock
popf
mov
cmp
dec
fs
sbb
daa
inc
daa
dec
and
js
jb
inc
js
in
sahf
mov
or
mov
fs
in
in
cmp
xchg
aas
or
push
daa
and
xchg
lcall
dec
add
sbb
es
xor
popf
xchg
and
xchg
xchg
movsl
pop
dec
jb
jb
cwtl
cmp
ret
and
lods
sahf
outsl
xor
dec
ret
dec
iret
dec
ljmp
push
jb
sub
leave
cmp
dec
leave
arpl
imul
xchg
test
mov
cmp
fnstenv
in
in
cmp
imulb
sbb
xchg
inc
mov
pop
in
in
in
in
in
xchg
jo
lock
popf
add
and
dec
cmp
jl
mov
lret
leave
in
enter
and
push
cmp
imul
and
push
loopne
mov
mov
movsb
sub
call
jno
lret
cmp
cmp
cmp
cmp
push
add
jne
dec
fmuls
inc
adc
sbb
xchg
sub
pop
jo
push
jb
dec
int
loop
pop
dec
pop
xchg
xorb
adc
sub
mov
lret
pop
mov
mov
in
xchg
add
mov
into
xor
pop
inc
push
mov
jecxz,pt
lock
push
lock
dec
mov
cmp
sub
rcll
ss
imul
daa
mov
daa
fsubrl
xchg
sub
sbb
pushf
jg
mov
loopne
in
in
daa
aas
sub
jb
leave
jmp
std
and
xchg
xor
xchg
jb
jb
dec
mov
adc
pop
xor
fs
xchg
dec
mov
dec
out
hlt
inc
push
xor
push
push
dec
outsb
ret
push
sub
pop
int3
or
mov
repnz
jne
and
les
adc
and
das
or
fdivs
daa
ret
fsubs
fwait
dec
scas
dec
int
loope
clc
dec
or
popa
jmp
leave
lret
leave
jmp
or
in
in
xchg
or
das
cmp
leave
inc
leave
dec
cs
push
ja
lahf
dec
mov
lds
dec
jmp
adc
mov
in
in
cmp
and
cmp
jle
pop
xchg
add
mov
sti
and
in
in
in
mov
sbb
mov
fsubs
ds
popa
or
push
leave
je
mov
or
and
and
sub
gs
test
in
and
inc
inc
outsb
lret
and
cld
bndldx
push
cmp
daa
stos
pop
adc
and
xor
and
fsubl
and
xchg
fcoml
push
je
push
xchg
rcrb
call
sbb
xchg
inc
sbbb
push
loopne
mov
into
jb
pop
or
popa
cmp
inc
push
ror
xor
add
out
in
xchg
add
gs
xchg
test
in
and
sbb
xchg
rol
inc
cmp
data16
xchg
test
mov
cs
jb
jb
dec
pop
xor
xchg
mov
loopne
es
add
leave
pop
cs
dec
mov
dec
lds
popa
and
cmpsl
leave
fmulp
sub
adc
add
or
adc
jb,pt
push
push
mov
mov
adc
leave
out
inc
incb
cmp
adcl
or
arpl
ret
dec
mov
pop
lahf
cmp
and
and
xor
leave
es
aas
jae
sub
mov
orb
hlt
pushf
loopne
mov
ret
cs
cmp
daa
and
cmp
inc
xor
push
mov
jb
jb
jb
inc
lret
shl
xlat
in
in
in
xchg
adc
cli
xchg
std
and
aaa
cmp
or
pop
dec
jb
pop
xchg
push
mov
dec
dec
add
imul
cmp
cmp
or
cmp
push
cmpsb
jb
dec
sub
mov
pop
pop
out
dec
xor
leave
inc
nop
hlt
lret
dec
ja
es
cs
mov
mov
test
cmp
xchg
loop
inc
loop,pn
hlt
enter
sbb
dec
inc
mov
int3
xchg
sub
sub
cs
xor
imul
ds
xchg
jb
dec
rolb
pop
push
fcompl
pushf
cwtl
xchg
lahf
lock
mov
add
cmp
dec
leave
pusha
leave
movsb
leave
lods
push
shll
into
shrl
cmp
and
rolb
push
push
ja
push
xchg
rolb
dec
lret
cld
inc
adc
daa
jo
jb
jb
jb
dec
int
pop
aad
dec
loope
dec
push
or
loope
lea
and
mov
in
in
in
mov
mov
nop
pop
xor
xchg
test
cmp
and
test
and
ss
jg
pop
fwait
cmpsl
insb
mov
adc
sbb
or
push
shll
ja
jle
scas
sub
das
loopne
xchg
or
cmp
jns
xchg
sarb
or
cmc
xchg
stc
inc
mov
cmp
clc
mov
jb
pop
sbb
cmp
movsb
xorb
mov
and
outsl
xchg
mov
fldcw
pop
clc
and
jge
mov
cltd
popa
push
mov
adc
jb
dec
pop
cmpb
rcrb
in
nop
push
leave
pop
leave
imul
leave
xchg
leave
test
mov
push
push
or
push
add
js
pop
xchg
ret
xchg
outsb
xor
mov
stc
je
cmp
mov
xchg
mov
push
into
mov
xor
sub
ret
pop
movsb
or
and
push
mov
pop
dec
test
sub
mov
daa
sbb
pop
daa
and
call
mov
sbb
cmp
addr16
lret
stos
xchg
fistpl
dec
or
dec
cmp
cmp
or
jo
dec
push
sbbb
adc
in
fninit
cmp
adc
mov
fwait
rcrl
leave
out
ficompl
mov
imul
dec
test
dec
add
dec
pop
ret
sub
xchg
sbb
cld
adc
ficomps
addr16
jle
repnz
in
dec
rorl
call
xor
pop
in
xchg
xchg
xor
xor
and
je
mov
cmpsl
xorl
pop
mov
jb
jb
jb
jb
pop
cld
hlt
and
repnz
rol
lret
xchg
xchg
out
out
xchg
push
fcompl
adc
push
jnp
mov
mov
and
or
adc
or
xchg
cmp
and
call
pop
popa
fisubrl
ja
mov
mov
mov
and
js
and
outsb
pushf
or
imul
imul
xor
leave
fmul
fsubrl
dec
jb
call
into
hlt
dec
clc
dec
cld
pop
push
xor
dec
or
jno
lret
cmp
cmp
cmp
cmp
inc
loope,pn
pop
sub
cld
fs
mov
mov
nop
sub
adc
les
mov
or
mov
enter
mov
lock
out
cmp
jo
xor
sub
inc
adc
loopne
and
rolb
and
xor
insb
pop
cmp
add
imul
ljmp
je
or
jl
sbb
notb
cli
pop
movsb
cmp
fdivr
push
mov
add
add
int3
loope
aam
fdivs
loopne
in
call
lock
cmp
and
ss
pop
mov
je,pn
xchg
test
fdivrs
lods
jb
jb
dec
les
mov
dec
clc
jo
loopne
jb
jb
jb
jb
jb
pop
sbb
data16
sub
jb
jb
jb
pop
cmp
stos
inc
jns
jno
insb
mov
je
js
and
cmp
cmp
pop
pusha
push
mov
xor
scas
or
aas
jl
andb
and
rcrl
xchg
xchg
xchg
cwtl
xchg
pushf
xchg
mov
and
das
or
dec
pop
fs
dec
adc
les
fidivrs
pop
fcomip
and
mov
dec
mov
push
push
ret
jl
pop
fs
insb
pushf
ljmp
xchg
mov
cs
sbb
pushf
mov
mov
hlt
push
pop
int3
cmpsb
and
cmp
xor
or
or
pusha
adc
sti
unpckhps
and
dec
mov
and
inc
jmp
mov
pop
clc
insb
inc
add
or
mov
adc
push
push
fwait
cmp
loop
pop
nop
pusha
cld
jo
in
aas
and
mov
call
dec
push
sbb
add
in
adc
arpl
and
pop
cmp
imul
inc
mov
xchg
cmp
aaa
inc
sub
inc
or
insb
push
adc
mov
inc
rorl
roll
dec
mov
push
shll
shll
shll
sub
int3
pop
jne
into
imul
or
popf
sbb
insl
mov
arpl
mov
ror
outsb
adc
inc
outsl
xor
es
or
fldenv
imul
cmp
cli
lcall
jae
adc
dec
sub
or
pop
jb
adc
dec
bound
in
mov
ljmp
addr16
jo
xchg
or
dec
add
sub
cltd
pop
popa
popa
cltd
jno
or
into
xor
sub
xchg
add
pop
push
xchg
mov
pop
sbb
dec
jp
cmpsb
or
mov
jae
push
or
cld
jo
push
push
jbe
cmpsb
sahf
into
je
or
mov
push
push
sub
insb
mov
js
sub
xor
fsub
dec
cwtl
leave
je
lods
push
adc
leave
imul
mov
pop
out
sub
stc
and
sbb
outsl
movsb
jb,pt
adc
adc
inc
insl
add
stos
call
outsb
test
arpl
sub
inc
mov
sub
sbb
adc
xchg
enter
jo
dec
data16
into
outsb
adc
insl
jne
add
stos
inc
xor
sbb
xchg
insb
movsb
push
movsb
insb
jns
dec
xchg
push
cwtl
ss
inc
push
push
sub
sub
adc
lods
fiaddl
ret
scas
bound
push
jb
js
inc
and
cmp
dec
dec
jbe
mov
popa
sahf
mov
push
xor
popf
xchg
add
sub
mov
insl
mov
daa
mov
sbb
inc
fs
cli
loop
repnz
aaa
call
and
push
subb
into
movsb
or
sbb
push
jne
sahf
movsb
xchg
stos
sub
mov
popf
dec
nop
push
lods
arpl
mov
sbb
daa
pop
in
and
adc
push
push
and
imul
sub
lcall
dec
push
pop
push
pop
leave
jbe
fsubs
push
dec
hlt
fwait
push
adc
push
stos
rcrb
aad
xchg
mov
or
aad
or
adc
push
xor
dec
xor
shlb
inc
push
or
dec
gs
jmp
push
push
pop
push
cltd
pusha
jo
push
bound
cs
and
hlt
push
push
js
test
movsl
lcall
ficomps
add
push
adc
cld
cmp
sbb
add
dec
dec
push
dec
cli
mov
push
mov
pop
mov
and
sub
pop
jmp
mov
sub
jmp
or
das
stos
inc
xor
push
add
fnsave
sbb
gs
and
rolb
ret
lret
test
jns
into
repnz
cs
adc
push
push
fs
xchg
ror
adc
dec
and
cmp
pop
sub
cmpsb
or
or
mov
adc
and
sub
inc
jb
loopne
pushf
les
sub
loopne
into
js
jae
mov
cltd
les
xor
adc
fsubs
xor
push
and
adc
pop
addr16
and
dec
movsl
aaa
inc
movsl
adc
jbe
fs
inc
mov
mov
add
cmp
xorb
repz
add
fwait
cmp
sbb
or
sbbl
xor
xor
fstpl
mov
popa
popa
fwait
dec
jnp
add
inc
push
mov
sbb
in
daa
cwtl
daa
pop
inc
icebp
pushf
pop
push
int3
imul
inc
outsl
outsb
outsb
sbbb
add
pop
popf
aad
pop
arpl
push
dec
xor
mov
cmpsl
fists
cld
aam
imul
mov
cli
bound
dec
je
dec
mov
sbb
sbb
xor
data16
dec
sub
in
stc
hlt
jo
and
inc
js
sub
inc
xchg
jecxz
mov
jge
mov
sbb
aam
push
cmp
jmp
xor
popa
sub
and
je
stos
test
cmp
xor
cmp
xor
ret
inc
dec
push
and
and
xor
xor
xor
inc
idivl
clc
add
adc
inc
pop
mov
adc
inc
inc
push
insl
or
sti
mov
push
sbbb
cmpsb
cs
sbb
inc
imul
and
jo
jge
lods
ja
and
outsb
cmp
or
aaa
sbb
xor
movsl
jb
inc
bound
ret
pop
pop
jge
lds
sub
sbb
arpl
dec
inc
push
dec
push
pop
xchg
jns
leave
idivb
mov
jl
popf
inc
cmp
out
cltd
xchg
dec
sbb
cwtl
add
add
add
pop
sub
sub
and
sub
shl
bsf
mov
or
btc
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
xor
dec
dec
or
add
btr
bts
add
or
xor
bsf
call
lcall
mov
shl
ret
sahf
fsubl
leave
inc
sbb
test
sub
call
lcall
add
and
mov
bt
test
neg
test
sub
inc
call
lcall
add
cmp
shr
neg
or
bts
test
sub
call
lcall
mov
bts
adc
xor
btc
or
test
bt
call
lcall
mulb
xor
mov
bsf
adc
bsf
shl
mov
inc
call
lcall
pop
inc
out
btc
add
test
shl
btc
and
call
lcall
add
test
not
btr
not
and
sub
mov
call
lcall
jne
xchg
cmc
dec
dec
dec
dec
mov
int3
xchg
ret
mov
lret
movsl
es
mov
mov
mov
movsl
fldl2e
inc
std
test
dec
mov
ret
test
cwtl
lret
mov
lret
mov
lret
inc
pop
movsb
lret
into
sub
lret
jnp
lods
mov
test
outsl
dec
dec
dec
dec
adc
mov
int3
cwtl
sbb
sub
inc
icebp
mov
sub
lret
lods
bound
sub
add
ror
dec
hlt
mov
mov
enter
fimuls
enter
mov
inc
lock
sub
lods
push
test
iret
mov
mov
inc
icebp
mov
enter
dec
outsl
mov
pop
stos
sub
aaa
lret
xchg
mov
sub
lret
push
inc
clc
stos
ret
jmp
inc
dec
int3
mov
outsl
add
outsl
dec
enter
sbb
lret
xor
lods
lds
lret
call
lret
push
pop
sub
mov
mov
dec
outsl
sub
movsl
aas
push
sub
mov
out
sub
sub
inc
icebp
mov
cmc
dec
dec
dec
dec
mov
int3
xchg
ret
lret
fiadds
jb
loopne
cmc
in
gs
lret
test
lret
mov
lea
add
dec
ror
stos
dec
mov
ret
test
push
xor
jno
inc
icebp
mov
inc
lock
sub
xor
mov
mov
ror
dec
and
dec
dec
lret
dec
cmp
adc
mov
int3
cwtl
sbb
inc
cld
nop
sub
mov
sarb
iret
cmpsb
sub
mov
mov
mov
mov
inc
fimuls
enter
lock
sti
lret
pop
fwait
dec
rclb
inc
lock
addb
icebp
mov
mov
mov
dec
dec
mov
dec
xchg
movq
lret
repz
dec
dec
dec
jp
mov
mov
dec
mov
ret
mov
enter
mov
mov
jnp
dec
enter
mov
dec
shrl
les
dec
dec
dec
mov
sub
mov
dec
outsl
sub
lea
pop
jno
mov
xchg
sbb
mov
out
mov
push
adc
mov
jnp
dec
mov
sub
dec
dec
iret
sub
inc
icebp
mov
mov
push
sub
mov
dec
outsl
lret
test
inc
notl
sub
mov
lret
xor
add
dec
dec
dec
dec
ror
dec
and
movsb
xor
icebp
scas
fsubrs
jno
inc
icebp
stos
mov
mov
sbb
push
mov
dec
dec
ror
dec
and
sbb
dec
inc
std
mov
icebp
mov
lret
lock
lret
rorl
lcall
lret
outsl
and
jle
mov
dec
dec
mov
dec
xchg
movq
lret
repz
dec
dec
dec
jp
mov
mov
dec
mov
ret
mov
enter
mov
mov
jnp
dec
enter
mov
dec
shrl
les
dec
dec
dec
mov
sub
outsl
mov
lret
adcb
lret
mov
pop
sub
inc
icebp
stos
leave
dec
lahf
mov
ror
dec
and
dec
dec
sub
mov
xchg
inc
lock
mov
addr16
sub
sub
shll
jo
inc
clc
test
sub
jno
lret
movsb
scas
mov
mov
mov
push
ret
push
inc
rcrb
rolb
mov
mov
ds
mov
rolb
dec
inc
icebp
mov
sub
lret
and
inc
idivl
stos
imul
mov
mov
dec
dec
mov
dec
xchg
movq
lret
repz
dec
dec
dec
jp
mov
mov
dec
mov
ret
mov
enter
mov
mov
jnp
dec
enter
mov
dec
shrl
les
dec
dec
dec
mov
sub
mov
inc
inc
idivl
xchg
lret
jmp
xchg
sub
and
sbb
dec
js
inc
icebp
test
sub
inc
icebp
mov
mov
push
sub
icebp
mov
outsl
sub
lods
cmpb
dec
hlt
xchg
imul
loop
loopne
iret
pushf
inc
icebp
stos
stc
enter
inc
outsl
lret
sahf
add
fwait
and
sub
mov
sub
sub
sub
mov
mov
sub
dec
dec
mov
dec
xchg
movq
lret
repz
dec
dec
dec
jp
mov
mov
dec
mov
ret
mov
enter
mov
mov
jnp
dec
enter
mov
dec
shrl
les
dec
dec
dec
mov
sub
dec
dec
dec
mov
bound
movsl
mov
fadds
sub
sub
mov
ror
dec
mov
push
ret
ds
mov
inc
mov
shlb
jp
jp
enter
aas
jle
js
rclb
mov
aas
inc
lret
mov
aas
inc
sub
aas
inc
or
dec
enter
mov
pop
inc
dec
enter
mov
mov
dec
sub
aaa
outsl
outsl
sarb
arpl
or
cltd
ds
rcrl
cltd
cmp
pop
or
jp
dec
cltd
ds
rcrl
cltd
inc
enter
dec
dec
cltd
ds
rcrl
cltd
pop
mov
ds
rcrl
cltd
pop
mov
ds
rcrl
cltd
pop
mov
ds
rcrl
cltd
pop
mov
dec
sbb
mov
dec
adc
dec
or
jmp
dec
dec
dec
dec
dec
cltd
ds
rcrl
cltd
pop
mov
ds
rcrl
cltd
cmp
arpl
dec
dec
dec
dec
dec
cltd
ds
rcrl
cltd
pop
orb
dec
rcrl
cltd
cmp
movsl
mov
mov
mov
mov
ret
dec
dec
dec
dec
dec
cltd
ds
rcrl
cltd
pop
orb
dec
rcrl
cltd
cmp
dec
cmp
dec
dec
dec
dec
cmp
sbb
mov
mov
mov
mov
cmp
enter
ret
lea
mov
mov
dec
or
aas
pop
enter
mov
mov
mov
mov
mov
movq
movq
mov
shlb
dec
lret
movsb
jp
std
mov
lret
rorb
mov
movsb
sub
jg
enter
inc
testl
out
dec
sub
lret
mov
jl
mov
imul
inc
dec
mov
dec
xlat
repnz
pushf
sub
sub
outsl
inc
icebp
mov
dec
dec
ror
dec
dec
mov
sub
subl
mov
push
lcall
add
ror
dec
dec
dec
inc
dec
dec
inc
subl
pushf
jg
lret
test
mov
sub
sub
mov
ror
dec
repnz
dec
dec
sub
pop
xchg
sub
lret
lea
mov
cmpsl
filds
mov
pusha
scas
mov
ror
dec
icebp
cmp
sub
lret
es
icebp
mov
sub
inc
call
xchg
mov
ror
dec
jnp
sub
lret
imulb
inc
icebp
mov
sub
inc
icebp
mov
inc
icebp
lods
push
mov
ror
dec
or
mov
lret
test
lock
xchg
faddl
jb
dec
dec
dec
dec
ror
dec
add
loope
lcall
dec
xchg
sub
inc
std
lea
pop
inc
call
inc
std
xchg
mov
ror
dec
mov
gs
pop
pop
int3
jmp
shll
adc
xor
aaa
ds
lret
jmp
mov
cmp
cmp
mov
xlat
aas
mov
pop
xor
in
mov
mov
mov
loopne
lcall
clc
mov
int3
stc
fcoms
cmp
push
pop
rcrl
cmp
cmp
cmp
sarb
negb
mov
pop
aaa
mov
cmp
or
clc
mov
les
mov
pop
rclb
aas
pop
cmp
cmp
or
sarb
mov
cmp
cmp
sbb
cmp
cmp
sarb
cli
stos
arpl
cmp
cmp
pop
mov
subl
mov
push
mov
mov
mov
sarb
mov
or
std
lods
jmp
jmp
ror
clc
out
lret
mov
cmp
sti
mov
sbbb
xor
ret
sbb
cli
fnstsw
mov
mov
pop
mov
repnz
dec
xor
fldcw
mov
pop
pop
int3
std
movsb
adc
repnz
sbbl
cmp
mov
nopl
lret
stos
xor
mov
xor
ret
pop
mov
sbb
jecxz
and
cmp
push
pop
rcrl
cmp
cmp
cmp
sarb
negb
mov
pop
aaa
mov
cmp
or
clc
mov
les
mov
pop
rclb
aas
pop
cmp
cmp
or
sarb
mov
cmp
cmp
sbb
cmp
cmp
sarb
cli
stos
arpl
cmp
incl
pop
mov
or
jmp
add
and
mov
pop
int3
sti
inc
mov
cmp
sti
add
bound
sti
dec
sub
lds
in
xchg
xor
addr16
cmp
sbb
add
pop
cmpb
sbbl
insb
int
pop
cli
shrl
cli
fisttpl
das
pop
mov
mov
int3
pop
cli
fisttpl
pop
subb
nop
sarb
inc
pop
int3
sti
aad
jnp
mov
jns
stc
dec
sarb
int3
sti
mov
and
sti
or
mov
cmp
ret
sarl
cmp
mov
mov
addr16
vminsd
mov
sti
pop
int3
sti
mov
add
sarl
cmp
cmp
sarb
mov
pop
mov
int3
jmp
enter
adc
andl
jnp
add
mov
pop
pop
mov
mov
sti
addr16
xchg
jmp
repz
cld
pop
cli
shll
cmp
cmp
mov
xlat
aas
mov
pop
pop
mov
rorl
mov
sbb
push
movsb
pop
int3
sti
xchg
in
mov
cmp
push
pop
rcrl
cmp
cmp
cmp
sarb
negb
mov
pop
aaa
mov
cmp
or
clc
mov
les
mov
pop
rclb
aas
pop
cmp
cmp
or
sarb
mov
cmp
cmp
sbb
cmp
cmp
sarb
cli
stos
arpl
cmp
cli
sar
pop
int3
sti
test
xor
sti
inc
xor
dec
pop
mov
sti
in
cmp
cmp
mov
inc
aaa
xor
ret
pop
pop
int3
sti
xchg
insb
mov
pop
and
sub
xor
adcl
cmp
pop
mov
jmp
pop
cli
shrl
pop
mov
cmp
adc
pop
xor
cld
sarb
mov
shll
cwtl
mov
aam
cli
fisttpll
or
xor
clc
pop
mov
pop
pop
mov
xchg
pop
jge
mov
xor
aad
pop
mov
xchg
xor
fiadds
int
cmpsb
xor
cmp
mov
nopl
xchg
mov
xchg
sbb
cmp
add
mov
inc
jae
das
bound
stc
cmp
rol
xor
fldcw
add
sub
xlat
ret
sti
cmp
shlb
movsl
fldcw
aaa
pop
mov
pop
mov
xor
shll
adc
mov
cli
rorl
ret
ds
cmp
cmp
mov
out
les
cli
pop
add
fstps
mov
push
xor
shll
cli
fstpt
lret
jle
mov
cmp
cmp
cli
pop
pop
cmp
lock
cli
fildl
pusha
add
mov
jns
shll
mov
push
cmp
cmp
int3
stc
in
adc
inc
pop
mov
mov
sbb
outsb
pop
jae
mov
xlat
aas
mov
pop
mulb
fisubs
mov
mov
mov
lea
enter
xor
outsb
arpl
aas
pop
mov
pop
int3
sti
or
mov
or
and
adc
xchg
mov
fsts
jmp
pop
mov
cli
aam
vminpd
inc
pop
xchg
pop
int3
sti
std
loope
sahf
mov
pop
jno
repz
in
test
rol
sarl
cmp
cmp
xchg
pop
jae
mov
mov
push
repz
jg
shlb
clc
int3
sti
mov
fs
xor
ret
mov
int3
xor
ret
loopne
mov
icebp
mov
out
sti
cmp
xchg
int
sarl
cmp
cmp
enter
jno
mov
leave
mov
and
rorb
and
cmp
push
pop
rcrl
cmp
cmp
cmp
sarb
negb
mov
pop
aaa
mov
cmp
or
clc
mov
les
mov
pop
rclb
aas
pop
cmp
cmp
or
sarb
mov
cmp
cmp
sbb
cmp
cmp
sarb
cli
stos
arpl
cmp
jnp
xor
rcl
sti
mov
cmp
out
mov
fildl
lahf
inc
es
jne
movsb
add
xor
cld
add
xor
ret
int
mov
int3
jecxz
cli
rcll
pop
int3
ljmp
nop
sarl
cmp
cmp
sub
lcall
rcrb
sti
adc
mov
mov
add
pop
cli
shl
mov
aas
pop
mov
clc
add
mov
popa
mov
xor
mov
sbb
xor
in
cmp
cmp
filds
dec
adc
sti
orl
call
jp
fisttpl
repz
mov
enter
mov
cmp
mov
scas
sarl
cmp
cmp
cld
xor
mov
jp
xor
stc
xor
fcmovne
jecxz
addb
aas
pop
xor
sub
mov
out
and
pop
mov
xor
std
mov
pop
int3
sti
das
mov
pop
cli
fistpl
int
sarl
cmp
cmp
ret
mov
pop
mov
sarl
cmp
cmp
inc
mov
pop
xorb
cmp
ljmp
mov
les
pop
rcrl
cmp
cmp
cmp
sarb
negb
mov
pop
aaa
mov
cmp
or
clc
mov
les
mov
pop
rclb
aas
pop
cmp
cmp
or
sarb
mov
cmp
cmp
sbb
cmp
cmp
sarb
cli
stos
arpl
cmp
cmp
cmp
mov
ret
cmp
pop
mov
push
les
cmp
cmp
cmp
mov
daa
sub
mov
cli
sar
pop
mov
jmp
jecxz
sti
sbbl
mov
mov
pop
mov
xor
ret
pop
pop
int3
sti
pop
loop
rcll
cmpsl
sarb
push
jl
lret
pop
mov
les
pop
mov
pop
mov
shll
xor
lret
pop
mov
int3
jmp
xor
sti
xor
lret
cmp
mov
jnp,pt
cld
cmp
sti
push
xor
stc
pop
int3
sti
int
mov
add
sti
mov
pop
mov
rolb
jae
xor
sub
pop
xor
pushl
call
pop
cli
aam
pop
mov
sarb
push
jo
xor
pop
mov
xor
cmc
pop
mov
mov
test
xor
leave
fcomps
shrb
repnz
cmp
cmp
rcrl
cld
xchg
ret
hlt
or
sti
rcrb
xor
int3
hlt
pop
mov
lock
cwtl
xchg
pop
add
sarl
cmp
cmp
lods
cmp
adc
mov
or
xor
int3
ds
int3
loope
ret
mov
lret
mov
cli
aam
sarl
cmp
cmp
cmpsb
cmp
rcrl
call
mov
clc
and
pop
mov
outsl
jnp
xor
sarl
cmp
cmp
add
pop
pop
mov
mov
mov
mov
mov
or
in
sarl
cmp
cmp
sub
jecxz
loopne
aam
jp
push
xor
aam
xor
les
xor
fcomps
adc
cmp
cmp
cli
aam
mov
negb
cmp
mov
out
int3
clc
lock
sarl
cmp
cmp
dec
xchg
pop
mov
int3
cld
subl
int3
out
sti
jecxz
out
pop
int3
in
test
pop
mov
cmp
cmp
mov
aas
cmpsb
or
mov
les
mov
mov
divl
ret
loop
fs
or
ret
cmove
jno
mov
add
mov
mov
clc
fs
testb
or
ret
call
mov
out
cmp
push
or
ret
fs
ret
or
add
aaa
ljmp
std
jmp
inc
es
addl
add
pop
mov
arpl
sub
jmp
add
add
xor
jmp
xor
add
add
and
pop
add
add
jmp
arpl
add
jge
add
add
add
add
cwtl
add
add
add
jmp
stos
xor
add
ljmp
movb
inc
push
add
jmp
mov
or
ljmp
movb
cmp
add
aaa
ljmp
std
jmp
inc
es
addl
add
pop
mov
arpl
sub
jmp
add
add
xor
jmp
xor
add
add
and
pop
add
add
jmp
arpl
add
jge
add
add
es
pop
std
jne
pop
add
ljmp
movb
jg
add
add
decb
decb
ljmp
movb
or
es
add
add
add
cwtl
add
mov
es
jmp
scas
xor
add
push
mov
fs
rol
loop
add
int3
mov
lds
or
fs
add
or
mov
es
jmp
ljmp
std
jmp
inc
es
addl
add
pop
mov
arpl
sub
jmp
add
add
xor
jmp
xor
add
add
and
pop
add
add
jmp
arpl
add
and
std
std
mov
es
add
cwtl
add
jmp
cld
std
std
cmp
pop
and
mov
fs
mov
xchg
loope
cld
aaa
out
and
or
or
lds
fs
lds
or
shll
divb
push
sub
and
xor
add
sub
fs
lret
fs
or
lds
adc
xchg
jle
or
fs
mov
or
jmp
fs
iret
arpl
ljmp
movb
inc
add
fs
sub
scas
lock
dec
or
aad
testb
decl
popl
sub
in
in
mov
lahf
test
cmp
or
fs
pushf
cmc
rorb
aad
ret
fs
sbb
and
push
or
sub
jp
jmp
ljmp
std
jmp
inc
es
addl
add
pop
mov
arpl
sub
jmp
add
add
xor
jmp
xor
add
add
and
pop
add
add
jmp
arpl
add
add
add
cwtl
add
test
mov
or
out
cmp
or
xlat
sbbl
and
es
iret
fs
in
in
fs
inc
or
ds
fs
or
cmc
shrb
fs
ret
xchg
dec
adc
and
xlat
pop
cmp
jb
add
push
fs
adc
jmp
ret
in
icebp
or
or
add
inc
and
push
movsb
ret
in
cmp
mov
mov
or
add
add
cwtl
add
mov
es
push
adc
fs
andl
lret
or
add
aaa
ljmp
std
jmp
inc
es
addl
add
pop
mov
arpl
sub
jmp
add
add
xor
jmp
xor
add
add
and
pop
add
add
jmp
arpl
add
inc
ds
mov
or
aad
pop
lods
fs
pop
fs
test
mov
add
add
inc
add
fs
ret
mov
fidivs
cmp
xor
cmc
lds
sbb
out
es
adc
cmp
or
mov
jns
iret
mov
clc
fs
push
ljmp
movb
out
push
mov
es
xlat
cmc
lds
adc
xchg
mov
fs
mov
inc
jne
ret
jecxz
jmp
sub
and
imul
and
insl
jbe
popa
jbe
jo
je
sub
and
sub
add
sub
and
je
outsb
insl
jb
data16
and
imul
and
imul
add
sub
and
outsl
arpl
and
and
imul
jno
fs
outsl
arpl
sub
ja
sub
sub
sub
sub
jno
jbe
and
and
jbe
cmp
sub
insb
imul
sub
js
ja
insl
outsl
arpl
ja
and
sub
add
sub
and
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
add
add
add
add
add
dec
inc
into
into
into
into
into
into
adc
add
loope
add
or
ud2
cmp
or
push
push
add
or
push
jg
adc
sbb
mov
js
cmc
pop
fsts
stos
mov
repz
les
arpl
imul
adc
add
cmp
sub
adc
lods
cwtl
fmul
xlat
inc
loop
outsl
das
add
sub
mov
in
incl
add
xor
or
xor
lahf
push
jp
pop
pop
fildl
mov
pusha
into
or
xchg
std
loope
pop
adc
add
or
aam
leave
outsl
sbb
je
mov
inc
test
push
add
adc
clc
mov
or
adc
movsl
js
stos
inc
adc
jmp
sbb
loope
repz
aam
sbb
ret
test
jg
movsb
jns
adc
rclb
aaa
push
js
inc
aad
sbb
jae
lock
frstor
call
add
add
dec
sbb
in
sub
mov
sub
imul
mov
dec
add
inc
push
dec
push
dec
inc
push
xor
xor
push
cmp
inc
push
jecxz
inc
stc
push
fcoml
jne
lock
jae
test
je
sbb
dec
xor
jp
push
testb
push
inc
push
inc
pop
rcll
pop
push
stc
inc
jmp
repz
iret
daa
cmp
dec
inc
int3
push
xor
xor
aaa
xor
inc
push
dec
popa
inc
dec
dec
dec
ret
jl
inc
aaa
dec
push
pop
xor
inc
cmp
popf
push
push
mov
adc
inc
cmp
push
push
divb
xor
aaa
mov
fists
xchg
cmc
aaa
sub
push
dec
inc
inc
loopne
ss
xchg
pop
xor
dec
push
notl
lods
inc
or
inc
dec
pop
dec
sti
and
push
push
push
inc
outsb
xor
les
add
lods
shlb
add
movsl
sub
bound
cmp
inc
je
arpl
out
in
outsb
out
push
in
jo
jne
jb
rol
xchg
fisubs
jne
push
insb
imul
fisttpll
push
push
iret
xchg
gs
push
cld
data16
adc
dec
insb
les
xor
adc
aaa
inc
jb
es
enter
inc
insb
outsl
jae
and
fnclex
ret
ja
aam
in
loop
jae
mov
and
arpl
jo
jecxz
cltd
popa
insl
loopne
imul
dec
bound
loop,pn
inc
add
cmc
ret
hlt
dec
jnp
dec
mov
cmp
arpl
outsw
stos
outsb
dec
test
imul
movsb
pop
sti
lret
addr16
jns
xor
mov
imul
imull
pop
jnp
les
pop
stos
jb
movsb
jno
push
jns
popf
int
mov
push
cmpsb
cmc
xchg
std
test
jno
pop
jns
pop
add
movsl
ljmp
sbb
mov
mov
xchg
in
jnp
sti
pusha
jne
sbb
insb
jecxz
and
fs
les
aad
and
adc
push
popa
mov
jecxz
cmp
jecxz
idiv
sarl
push
cmpsb
loop
add
push
cld
pop
arpl
test
sub
adc
xchg
roll
nop
fisttpl
add
fstpt
addr16
notl
dec
je
jns
cmp
xchg
or
sub
mov
xor
dec
xchg
repz
or
jae
sbb
adc
clc
sarl
cld
movsb
xchg
xchg
add
jae
xchg
mov
not
hlt
mov
cltd
push
and
cmp
or
jo
sub
adc
iret
shlb
pop
sub
test
aas
in
insl
push
mov
or
mov
jg
lock
dec
outsb
stos
leave
movsl
pop
fmull
mov
xchg
mov
push
dec
inc
push
push
inc
push
es
pop
mov
xchg
xchg
jp
or
inc
xchg
add
insb
