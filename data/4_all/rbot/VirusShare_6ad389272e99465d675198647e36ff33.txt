aas
pusha
pop
fucomp
repnz
xor
xchg
jg
addr16
data16
xchg
jo
icebp
sbb
xchg
or
dec
adc
or
mov
jmp
mov
js
call
and
hlt
mov
xchg
stos
jb
loope
push
pushf
mov
xchg
sub
cmc
adc
xchg
push
push
sbb
or
jge
mov
add
dec
decl
add
cmp
movsl
loope
add
dec
insb
mov
mov
test
je
enter
jo
mov
fnsave
sub
and
cmp
xchg
lds
bound
pop
adc
push
and
inc
adc
lods
leave
push
add
bound
cmp
popf
adc
cwtl
ret
outsb
xor
xor
movsb
pop
mov
jae
cs
mov
pop
inc
shll
inc
sub
adc
test
pop
clc
aaa
cmp
jl
aam
add
test
mov
enter
cmp
mov
data16
hlt
or
xor
mov
adc
cltd
mov
cmp
aas
out
mov
test
or
loope
mov
hlt
daa
xlat
dec
inc
push
in
in
cmp
dec
sub
xchg
pop
aad
sub
dec
je
clc
jge
push
inc
js
stc
call
frstor
aaa
push
call
rcl
push
jp
push
inc
imul
jne
fidivrs
xor
xchg
pop
and
clc
or
adc
xchg
and
cmp
nop
data16
sbb
jl
mov
nop
mov
in
imul
mov
stc
adc
cmp
jg
and
and
cmpsb
add
in
adc
into
jmp
loopne,pt
add
inc
imul
sub
les
inc
push
lods
pop
mov
insb
pop
addr16
fisubrl
and
jne
mov
xchg
test
sar
push
mov
insb
mov
sub
pop
mov
sub
les
jns
fdiv
xor
cmp
je
subl
or
mov
mov
push
mov
ret
or
sub
shlb
mov
mov
pushf
lcall
lds
div
xor
jp
movsl
or
test
push
repnz
insb
movsl
stos
in
mov
inc
add
lock
mov
mov
cltd
jl
push
mov
fs
outsb
dec
adc
jecxz
mov
in
mov
jo
movsb
cmp
scas
mov
cltd
lret
jmp
adc
jnp
mov
pop
in
js
jg
xor
aas
loop
and
out
add
adc
loopne
mov
add
pop
cmp
std
movsb
gs
call
inc
pusha
push
scas
pop
xorl
xor
je
clc
icebp
mov
xchg
jo
jg
mov
mov
or
cmp
popa
add
jno
andb
int3
cmp
aaa
jecxz
ret
test
adc
cmc
loope
cli
jp
adc
jle
xor
pop
adc
adc
leave
js
fst
ljmp
cld
mov
test
push
scas
sbb
imul
push
pusha
push
adc
mov
mov
push
pop
jb
dec
cmp
cmpl
movsl
xchg
jp
icebp
je
adc
xor
pop
ret
add
popf
mov
adc
arpl
xor
hlt
sbbb
sti
pop
jge
mov
adc
push
int
clc
mov
mov
iret
push
or
out
gs
shr
sahf
inc
sbb
mov
jo
cmp
fnstcw
pusha
or
jns
xlat
dec
lcall
cmp
lock
pop
lock
fnstcw
ror
xor
cmpsb
outsb
dec
jl
gs
orb
movsl
and
stos
adc
leave
push
inc
sbb
push
xchg
jnp
imul
stos
popf
mov
ret
and
cmp
outsl
jne
test
jle
cmp
xchg
push
inc
sub
fcomip
mov
insl
mov
or
mov
mull
pushf
test
cmpxchg
mov
notb
rorb
dec
scas
or
test
jmp
popf
pop
in
adc
js
jo
fcmovne
testb
js
cmpl
mov
mov
dec
push
out
dec
cmp
aaa
mov
mov
push
adcb
gs
jne
pop
stos
out
dec
popf
test
or
xor
pop
inc
jmp
cmp
sub
xor
fdivs
pushf
xchg
mov
or
xchg
push
rorl
mov
mov
out
and
stos
mov
imul
push
sub
pop
add
adc
mov
and
fsts
out
fsubp
add
xor
das
pop
ja
fdivs
mov
pusha
sti
in
int
dec
insl
shlb
jnp
dec
sbbl
mov
std
ljmp
neg
aaa
insb
inc
sahf
or
loope
lds
pop
adc
loope
pop
or
out
lods
les
fstp
dec
mov
inc
gs
int
or
jne
xchg
ja
out
imul
shrb
jge
aad
mov
jmp
loope
mov
push
jp
sbb
mov
call
fadds
mov
adc
pop
xchg
mov
jae
movsb
int3
hlt
pusha
jns
loopne
imul
in
cli
pop
aam
push
sbb
pop
mov
sarl
sbb
push
lods
daa
data16
xchg
mov
push
leave
mov
and
int
cli
mov
ja
and
adc
xchg
orb
xor
add
pop
mov
cld
testb
inc
insl
dec
jo
lahf
xchg
mov
rcrb
addr16
sub
adc
jb
ret
xor
fwait
xor
stos
data16
call
cmp
aas
clc
shrl
pop
sahf
je
pop
or
or
add
and
insb
in
testl
sbb
jp
int3
shlb
adc
or
in
pop
cmp
aaa
cltd
pop
aad
ja
inc
push
mov
test
gs
inc
and
iret
pushf
or
pop
mov
js
repnz
scas
cltd
imul
xchg
xor
pushl
out
imul
sbb
lcall
xchg
jle
xor
and
push
xor
int3
outsb
bound
pop
idiv
out
adc
pushl
stos
hlt
jg
cmp
repnz
icebp
adc
xchg
fsubl
cld
das
cmc
iret
mov
mov
inc
stos
fs
incl
dec
or
push
add
jnp
out
popa
xor
xchg
jl
sub
inc
push
test
pop
or
mov
inc
pop
push
or
movsl
addr16
lahf
jle
mov
lcall
push
sbb
call
jge
int3
mov
loopne
xor
cmp
adc
sub
push
jl
imul
les
ret
dec
fidivrs
dec
jp
adc
imul
fistpll
push
add
in
pop
andl
pushf
movsl
xorl
scas
and
je
mov
push
cwtl
pop
cmp
dec
daa
test
xlat
cmp
popa
cs
or
cmp
imul
fisubs
bound
inc
int3
dec
iret
adc
mov
iret
xor
mov
or
es
rcrl
dec
adc
xor
jo
popa
jg
cmp
inc
push
fcoms
insl
sub
adc
push
lret
push
cld
push
test
shl
inc
pushaw
sub
inc
cmp
adc
xor
lcall
int3
leave
ss
bound
dec
cwtl
popa
xchg
insb
mov
lods
popa
mov
call
sbb
aaa
xchg
cmp
fisttpll
cmpsl
hlt
aaa
adc
ficoms
sub
pop
out
test
xchg
rcll
adc
pop
int3
stos
mov
pshufw
dec
arpl
cmc
mov
popf
pusha
jl
push
ss
bound
addr16
movsb
hlt
jb
and
nop
call
out
int3
xor
std
fsubrs
stc
icebp
pop
inc
inc
mov
pop
cmpb
stc
push
data16
stos
pop
push
or
mov
scas
xlat
lds
cmp
lds
sbb
ja
sub
or
test
lret
mov
cmc
rolb
test
and
int
out
hlt
testb
out
ret
shlb
js
aas
jnp
mov
jp
mov
cmp
and
decl
insb
ljmp
cli
sbb
cmp
xor
leave
jecxz
fisubl
jb
popa
mov
push
pop
xchg
mov
push
and
dec
adc
arpl
insb
mov
rcrl
mov
inc
fidivs
sbb
pusha
pop
aam
xor
aad
push
mov
cwtl
pop
inc
mov
sub
xchg
sub
pop
xor
shl
ret
jo
cmc
ror
sbb
insl
jno
fdivrs
mov
dec
iret
fsts
les
add
adc
sbb
insl
pop
addr16
push
sbb
imul
mov
jns
push
push
adc
fsubrl
fiaddl
ficompl
ficoml
dec
mov
sub
jno
out
cmp
push
mov
adc
aaa
lret
negb
push
pop
and
sbb
fadds
jmp
cmp
xchg
sub
cmp
insb
cld
loope
and
stos
mov
xchg
loope
arpl
cwtl
and
fnstcw
push
cld
or
test
lods
mov
cwtl
ss
add
mov
pop
cmc
adc
adc
inc
mov
shlb
ret
sbb
mov
cmp
mov
or
int
sub
or
fstps
aad
in
inc
lcall
adc
xor
je
add
dec
je
outsb
pop
cmpsl
repnz
pop
insb
cmp
dec
sub
stc
inc
ds
int
mov
xor
out
or
fwait
sub
dec
mov
data16
push
mov
scas
and
scas
push
jle
aam
push
sub
mov
sbb
cmp
jb
cwtl
getsec
lods
sub
cmp
jge,pn
mov
xor
fsubl
lea
pop
and
sub
jbe
pop
dec
test
xchg
mov
in
dec
pop
xor
call
sahf
popa
ret
inc
mov
push
xchg
push
shll
sub
subl
je
stc
inc
stos
pop
sub
sub
mov
mov
sub
mov
clc
test
adc
pop
lea
das
mov
cmp
test
mov
cmp
mov
jae
lcall
or
mov
push
pop
jbe
and
or
mov
loop
out
jg
mov
inc
pop
cltd
push
jle
loopne
js
xor
dec
bound
das
jle
cmp
dec
xor
rcrb
xlat
mov
mov
fimuls
pop
jns
and
sub
pop
in
sbb
aaa
sbb
iret
push
and
cmp
out
loop
sbb
les
jge
in
add
adc
jmp
cmp
adc
sar
push
movsl
push
iret
addl
ja
lods
jl
test
mov
arpl
xor
or
fisubl
ss
sub
or
mov
outsb
fsub
imul
mov
pop
jne
daa
jo
sub
fisubs
sbb
adc
insb
mov
mov
mov
stc
inc
mov
xor
cmp
push
pop
push
adc
in
fsubrs
notb
inc
pop
adc
mov
cld
scas
add
push
pop
loopne
sub
or
or
shl
fadds
sahf
cmc
xchg
orl
les
sbb
mov
push
dec
sub
lahf
jo
mov
aas
lea
imul
iret
out
jb
ficoms
shrb
mov
inc
and
push
jl
test
jbe,pt
or
mov
mov
in
cmc
sbb
jno
std
cmp
jns
movsb
sahf
and
inc
push
lret
xchg
adc
adc
js
mov
lcall
pop
ljmp
push
jns
sti
sarb
pushw
sub
cwtl
or
push
jnp
adc
inc
cmp
jecxz
cltd
and
call
sbbb
je
xchg
roll
lahf
fimull
ret
cmp
and
xlat
adc
iret
add
sarb
pop
out
fisttps
lret
pop
mov
inc
push
enter
lcall
cmp
fs
pop
or
stos
xor
in
push
xchg
std
inc
aam
test
adcl
xor
loop
jp
sub
sub
int
dec
push
cltd
js
pop
ret
jne
test
incl
aam
dec
mov
lock
into
int
lret
inc
sbb
cmpsl
add
iret
addr16
cs
test
setge
mov
in
inc
imul
mov
cmp
xchg
mov
mov
add
sub
adc
orb
adc
mov
rcrb
cli
clc
hlt
sbb
jg
inc
pop
adc
xchg
into
ljmp
gs
mov
sbb
add
stc
stos
sbb
or
push
sahf
insb
test
lods
mov
ret
xchg
jge
inc
lods
or
mov
repnz
fdivrl
sub
sub
cmp
addr16
jmp
xor
stc
fs
filds
insl
mov
push
push
push
jmp
adc
adc
adc
divl
sti
inc
xchg
lds
jo
mov
lcall
inc
jo
jge
pop
jb
push
add
push
inc
pop
mov
insl
stc
jo
cmp
xchg
test
push
dec
nop
jl
pop
bound
mov
mov
push
test
sub
jnp
iret
jecxz
jne
mov
aad
dec
jno
cmp
lods
std
push
inc
clc
outsb
sub
mov
jb
movsl
cmp
in
sahf
fidivrl
xchg
int3
and
enter
mov
pop
xor
mov
mov
mov
imul
int3
mov
ja
addr16
mov
aas
and
jbe
xchg
inc
adc
push
pop
sbb
pop
dec
arpl
movsl
push
je
xlat
jle
jne
popf
cs
stc
out
imul
and
cltd
fwait
jne
dec
pop
pop
std
jg
push
xor
jl
pop
inc
scas
out
das
lods
pop
mov
je
adc
cld
dec
dec
or
enter
nop
mov
shll
fistpll
pop
or
mov
dec
hlt
mov
cmp
dec
in
fdivp
adc
and
sub
rcll
mov
push
mov
jbe
arpl
xchg
mov
lret
data16
imul
sub
mul
imul
leave
clc
push
sbb
cmp
popf
outsb
or
aaa
adc
pop
dec
adc
cmp
mov
xor
adc
je
pop
mov
fistps
fisttpll
stos
fidivrl
ficomps
push
dec
pop
and
mov
outsl
adc
jns
and
rcrl
fimull
jbe
cwtl
cmp
or
icebp
mov
into
inc
sub
ja
mov
mov
iret
outsl
popf
and
cmp
jno
divb
pushf
stc
add
jne
jecxz
and
js
sbbb
adcl
es
push
ja
xor
add
adc
xchg
push
nop
dec
test
cld
add
idiv
adc
jmp
jl
out
stc
xor
out
cmp
int3
dec
orb
jne
pop
or
icebp
sbb
xlat
or
js
adc
lret
jmp
sbb
das
xchg
cmpb
push
sub
stos
mov
adc
test
xor
test
pop
mov
lahf
or
inc
pushl
lods
mov
cld
dec
ja,pt
aam
xchg
testb
fldt
imul
sbb
xchg
sbb
add
pop
std
insl
test
and
pop
test
cmp
into
or
mov
lock
jp
jecxz
cmp
fwait
cmp
ljmp
and
loop
jo
mov
cs
mov
cmp
mov
and
cli
ds
out
jbe
es
imul
pusha
lret
cmp
ret
mov
add
xchg
cmp
jne
mov
mov
mov
not
stc
adc
dec
jns
jno
icebp
fcmovne
xchg
je
scas
inc
mov
notb
decb
lds
pop
lret
shll
pop
mov
fdivrl
jl
inc
sarb
xlat
cld
ja
mov
subl
inc
cwtl
idivb
ds
pop
outsb
fwait
or
dec
call
adc
std
sub
mov
pop
popf
add
inc
in
inc
stc
or
xchg
cltd
xchg
ds
scas
xchg
ficoms
cmc
and
push
repnz
into
jg
pop
ja
js
cli
arpl
jns,pn
in
stos
xchg
push
arpl
mov
cmp
sub
iret
shll
rorb
mov
ja
push
cmp
xchg
xchg
iret
add
cmp
test
cmp
xchg
int
sub
pop
lcall
mov
loope
ficoml
repnz
pop
inc
je
cmp
dec
push
mov
add
js
fcmovnbe
push
mov
orb
leave
push
psubd
int3
jo
hlt
mov
sbb
mov
lret
or
mov
jne
xchg
popa
cmp
lret
dec
sbb
out
xor
and
faddp
pop
jb
loop
stc
jne
dec
sar
and
insb
push
mov
pusha
sbb
lock
addr16
mov
clc
or
push
sbb
addb
mov
pop
adcl
add
push
xchg
xchg
stos
cmpb
and
jge
pop
mov
gs
xchg
inc
insl
jns
int
cltd
lret
stc
and
push
lret
cmp
ret
dec
cs
imul
std
adc
loopne
jmp
fs
inc
or
and
mov
jo
aas
lds
jae
js
cmp
or
mov
inc
pop
loope
sbb
push
xor
stos
jp
pushw
adc
in
add
and
mov
dec
sbb
dec
push
pop
push
push
mov
xor
test
jl
sub
sarl
out
xor
cmpsl
and
insb
adc
xchg
and
das
cmp
into
imul
push
mov
fs
lahf
clc
or
adc
in
mov
inc
cwtl
mov
outsl
hlt
jne
dec
pop
pop
fisttpll
mov
lods
out
xor
subl
mov
sub
and
pop
mov
push
repz
leave
int3
loope
sbb
sub
pop
add
mov
pop
cwtl
jns
inc
movsb
ss
pop
jne
dec
jne
jbe
pop
das
in
dec
sbb
adc
inc
fnstenv
pop
aam
int
popf
ds
mov
jle
xchg
sub
jp
fdivs
pop
mov
pop
flds
jo
pop
adc
cli
ds
ja
mov
inc
outsl
xchg
push
pop
mov
dec
js
mov
inc
outsb
or
cmp
mov
and
pop
or
add
add
es
xorb
ja
in
jp
popf
mov
lods
ds
push
in
dec
fnsave
stc
dec
mov
or
inc
sahf
arpl
adc
mov
jl
xchg
xor
les
push
loope
shll
push
sub
mov
jae
cmp
jne
cwtl
inc
stc
inc
or
sbb
xorb
lods
out
sub
cmp
or
cmpl
inc
repz
es
xchg
adc
xor
push
aam
fcoms
lcall
push
xchg
jbe
test
das
cltd
sub
inc
jg
fldt
or
bound
clc
xchg
push
test
jno
mov
lcall
out
outsl
adc
out
push
lahf
sbb
aaa
mov
mov
sbb
enter
pop
add
jle
fmull
incl
hlt
negl
adc
xor
mov
lret
pop
es
jno
sahf
shlb
add
jle
cmp
sbb
les
jno
pop
arpl
jo
inc
push
inc
and
push
adc
mov
xlat
jle
aas
rep
scas
js
pop
jns
push
jne
pop
inc
mov
push
popa
ljmp
xchg
dec
into
jae
pop
notb
mov
jo
pop
sarb
ljmp
push
or
and
push
orl
jg
lret
sub
fwait
sbb
sbb
mov
xchg
xchg
pop
stc
push
aam
in
push
popl
mov
testl
xchg
push
xor
xor
add
ret
lahf
icebp
jo
jmp
leave
adc
add
repnz
or
push
push
and
out
cltd
push
ficoms
popf
cmp
push
pop
dec
dec
outsl
mov
mov
daa
xor
or
pop
loope
test
das
mov
in
mov
and
jge
jbe
aaa
xchg
or
lcall
push
push
movsb
sub
adc
pop
outsl
sub
inc
push
push
ficoml
mov
ja
shlb
cmp
jmp
cmp
jne
bound
cwtl
pop
add
xor
mov
addr16
loope
push
xor
cwtl
dec
into
dec
or
dec
leave
xchg
inc
mov
xchg
mov
repz
aam
pop
jmp
sbb
mov
cmp
mov
push
cmp
jecxz
xchg
inc
push
push
cli
xor
sahf
jnp
sub
fdivs
and
sbbb
mov
jmp
jp
or
mov
roll
sbb
pop
int
movsb
lret
insl
jnp
push
mov
mov
xchg
jmp
jge
in
sbb
cmp
push
push
jno
push
jmp
dec
pop
sub
adc
daa
mov
js
and
xchg
aaa
mov
lahf
mov
sbb
cs
cmc
iret
jge
or
lods
dec
in
sbb
inc
mov
sub
dec
jo
into
push
out
cmp
xor
jne
jmp
jbe
movsb
and
or
in
mov
cmp
jno
ret
adc
push
or
push
inc
stos
pop
test
mov
stos
data16
dec
mov
inc
imul
sbb
andl
sub
jmp
lcall
jns
inc
arpl
aaa
sub
xchg
int
or
outsb
data16
inc
or
pop
lret
aaa
and
pop
mov
sbb
dec
sub
adc
jl
aas
sbb
lods
cli
mov
sar
dec
jnp
icebp
mov
dec
nop
pop
jl
in
std
pop
leave
jnp
jle
fwait
push
mov
pop
xchg
mov
fldl
js
shll
adc
ffree
out
imul
inc
xchg
test
cmp
nopl
sub
add
push
lahf
pop
inc
mov
fsubr
dec
sti
lods
pop
pop
data16
xchg
hlt
add
sub
and
adc
pop
dec
sbb
jmp
pop
sbb
jg
mov
push
loop
repz
jo
push
mov
xchg
popa
mov
push
cs
jnp
ds
jmp
cmpsl
bnd
mov
out
sbb
push
mov
sbb
out
jg
repz
lods
jbe
mov
test
imul
sbb
xchg
lods
jne
insl
push
pop
add
rclb
xchg
mov
dec
loop
or
rolb
mov
fistps
jp
pop
xchg
ret
cwtl
imul
add
xchg
jnp
inc
je
rol
xor
push
mov
outsb
pop
adc
fistps
dec
push
lea
and
mov
imul
sahf
fsubrs
lret
shl
pop
pop
or
out
jmp
and
cmp
adc
jg
ljmp
dec
sub
aaa
or
out
or
es
sar
push
pop
cmp
les
rclb
cmpsb
xchg
xchg
push
hlt
inc
and
push
pop
and
inc
aad
das
jae
mov
lods
out
pushf
dec
gs
mov
inc
lea
cwtl
mov
int3
test
cmp
das
ljmp
arpl
cmp
push
cli
inc
ds
mov
loopne
rorl
pushf
push
daa
andb
je
pop
add
or
mov
inc
mov
repnz
cmp
add
test
aad
mov
loope
adc
xchg
cmp
mov
xchg
xor
imul
lea
xlat
mov
mov
pop
jge
mov
cltd
mov
pusha
mov
dec
pop
testb
cs
bound
jmp
sub
iret
in
jne
jae
addr16
dec
sbbb
in
inc
pop
xlat
cmp
out
mov
or
mov
push
mov
inc
mov
outsl
mov
fs
sub
add
jno
mov
mov
xor
push
xor
jp
pinsrw
lea
cmp
test
mov
pop
cmpl
jno
test
mov
or
pop
sbb
jnp
outsb
rcl
clc
mov
xchg
pop
adc
mov
pusha
imul
pop
das
into
insb
xchg
mov
add
into
in
dec
jnp
ret
mov
sub
outsb
push
je
subb
fnstcw
mov
sub
mov
and
mov
lahf
pop
ficoms
pop
rorb
and
sbb
fidivrl
test
push
push
iret
cmp
push
cmp
in
add
scas
sub
xor
push
sub
mov
enter
loopne
sub
lret
mov
push
sbb
ss
scas
aas
ljmp
inc
pop
insb
ljmp
cwtl
lcall
mov
push
movsl
subl
ret
mov
clc
xchg
int3
jp
ja
fidivrs
xor
mov
sub
jmp
icebp
push
packuswb
fimull
add
mov
gs
js
and
out
jb
into
xor
sbb
mov
push
sbb
xchg
imul
dec
int
js
mov
leave
mov
cvtps2pd
adc
divb
mov
fiadds
xchg
bound
imul
or
hlt
cmpl
sbbb
pop
sub
pop
jnp
pop
sbbl
sub
stc
push
add
stc
xchg
jne
xchg
fwait
mov
icebp
es
sub
push
jl
lock
inc
mov
or
sbb
push
dec
aam
xor
pop
push
push
cmp
xchg
lcall
xchg
mov
imul
in
or
add
scas
or
mov
inc
push
movsl
shlb
xor
in
add
outsb
adc
or
push
fisttps
cld
iret
sub
xchg
mov
mov
cmp
dec
ds
cmp
push
hlt
inc
sahf
ss
out
jne
and
push
xor
or
sbb
push
test
call
sti
jb
mov
arpl
pop
popf
mov
jp
scas
subb
out
fisttpll
sub
push
pop
icebp
push
push
mov
adc
xchg
adc
dec
and
pop
cld
sub
inc
fsts
arpl
mov
or
push
dec
test
fs
xchg
andb
mov
inc
xchg
inc
adc
adc
mov
inc
insl
adc
inc
lcall
inc
in
push
jne
push
pop
test
mov
dec
fwait
mov
inc
insb
and
fidivrl
ret
stc
hlt
mov
add
js
inc
je
pop
push
test
lahf
cmp
movsl
pusha
rcrb
mov
xor
sbb
inc
sbb
sub
mov
outsb
xor
cmp
fcmovbe
dec
popa
cmp
les
mov
int3
adc
sub
add
jno
inc
mov
insb
and
push
adc
cwtl
and
dec
fucomp
rcrb
xor
xchg
imul
sbb
xchg
or
addr16
call
arpl
adc
out
push
js
jle
mov
jne
into
mov
mov
in
pmullw
stc
mov
lahf
std
xchg
es
push
sbb
out
lahf
stos
fstl
test
add
sub
push
push
cmp
add
in
movsb
fimuls
ljmp
sbbl
lret
add
rclb
outsb
lea
or
xchg
aas
insl
jns
inc
add
jno
inc
int
mul
shr
cmpsl
jbe
mov
sub
xchg
sbb
pop
add
cmc
out
pop
in
test
lret
mov
jp
inc
jne
push
cmp
push
insb
push
dec
add
scas
adc
pop
mov
pop
push
popa
sub
loopne
xchg
lret
loop
and
lahf
push
sub
and
test
and
sahf
rorl
pop
cmpsl
mov
cmp
inc
mov
scas
cmp
adc
repnz
js
call
out
clc
jo
dec
getsec
popf
adc
sub
push
data16
mov
add
xchg
pop
sub
xchg
and
data16
pop
or
jno
sahf
dec
lods
das
int3
mov
and
fcmovb
mov
lea
xchg
push
mov
push
test
xchg
push
sbb
dec
push
iret
cmc
inc
push
cwtl
xchg
inc
xchg
xlat
push
imul
pop
pushf
push
dec
inc
cmp
cmp
mov
xor
push
jne
push
push
jb
adc
sbb
cs
adc
inc
cmp
gs
callw
stc
inc
jb
mov
adc
dec
push
mov
cmp
pusha
pop
adcl
and
xchg
xor
arpl
mov
xor
idivl
outsl
test
add
or
jbe
mov
jne
ss
lods
mov
mov
jp
add
inc
ds
imul
les
adc
je
ss
dec
xorl
jno
jmp
addb
loop
push
inc
xchg
add
pop
jns
jb
xchg
ss
loope
mov
xchg
frndint
fs
call
repz
push
push
lods
ss
clc
jno
adc
das
rol
pop
dec
push
push
out
mov
xor
inc
gs
rcl
fcmovnb
aad
inc
iret
and
xchg
sub
or
jno
imul
data16
mov
cmp
or
testb
cwtl
mov
push
sub
add
mov
sub
jno
and
into
or
push
pop
cmp
das
cs
in
dec
iret
mov
push
sbb
xor
or
sbb
ja
aad
jbe
push
mov
xor
push
mov
pop
inc
addr16
jnp
sbb
pop
loop
stos
je
and
popa
cmp
fcomip
mov
imul
test
mov
push
ss
mov
int
rol
jb
and
call
push
outsl
stos
xchg
mov
mov
mov
jne
xchg
ss
and
or
lods
fiaddl
fists
ret
sbb
test
fistpll
or
add
inc
nop
mov
shll
fcomps
push
pusha
and
pop
adc
sub
addb
inc
pop
test
pusha
iret
sbb
iret
sub
iret
outsl
sub
or
xor
sti
je
cmp
jle
and
and
push
ja
pop
sahf
inc
add
and
lahf
data16
mov
sbb
out
cli
icebp
xor
pusha
cmp
mov
or
aad
inc
mov
dec
sbb
and
fildll
aas
xor
adc
sub
cs
add
scas
pop
cmpsb
and
adcl
bound
imulb
cmp
cld
sub
sbb
adc
fidivrs
xchg
lods
push
mov
daa
jl
pushf
loop
leave
movsl
mov
dec
xor
xor
mov
push
cmp
add
lods
movsb
cmc
div
jp
fsubr
pop
add
sbbb
sbbl
cmpsl
repnz
fmuls
pop
cli
pop
in
das
dec
dec
into
call
test
aad
stos
or
jnp
pop
mov
or
cltd
and
push
cmp
das
sbb
out
es
xchg
fiadds
or
das
push
cltd
ret
andl
nop
loopne
push
mov
add
xchg
cmp
and
stc
lea
fistps
imul
fimull
mov
pop
push
out
je
fwait
out
sbb
into
inc
mov
add
int3
movsb
mov
sarb
mov
icebp
out
loopne
and
and
stos
inc
mov
jmp
pop
icebp
loop
jns
ja
dec
and
push
or
test
fcoml
icebp
mov
xchg
sbb
or
addb
addr16
jp
stos
lret
jae
sbbb
sub
xchg
cmpsl
push
jg
cs
pop
mov
jno
subl
enterw
divb
xchg
into
jno
push
insb
mov
popa
mov
add
insl
ss
mov
mov
inc
mov
shll
imul
sub
mov
ljmp
rclb
hlt
jg
pop
fidivrl
push
ficompl
adc
les
push
mov
mov
lcall
into
sbb
fsubl
pop
ljmp
xchg
push
inc
mov
movsb
dec
loopne
and
cmc
mov
enter
push
icebp
and
inc
and
mov
es
and
adc
cld
xchg
cltd
or
pop
mov
sbb
xor
nop
andl
insb
add
sahf
xor
mov
xchg
dec
test
and
dec
pop
sti
pop
pop
xor
xor
push
cmp
sub
imul
test
daa
add
stos
dec
or
push
mov
je
and
shll
jae
sub
in
mov
inc
fldl
pop
sub
cmp
js
ss
je
aam
dec
je
repz
vmwrite
aam
cwtl
aas
xchg
mov
adc
mov
test
enter
gs
leave
sub
scas
jno
test
inc
and
fstl
gs
hlt
outsb
jnp
cmpsl
and
xor
mov
mov
xor
aaa
imul
cmp
js
stos
es
cltd
imull
mov
ljmp
and
in
push
nop
mov
movsl
inc
dec
pop
loopne
mov
mov
std
mov
or
dec
popl
ret
mov
mov
ret
inc
push
pop
xor
add
pop
je
mov
ret
dec
push
jnp
mov
push
jmp
mov
cmpsl
jp
out
ljmp
addr16
lock
push
loopne
mov
fdiv
and
xchg
js
scas
or
icebp
jo
dec
mov
jo
mov
jg
jecxz
mov
je
mov
ds
movsb
in
lret
mov
mov
lods
jp
rcrb
out
mov
jmp
cld
loopne
push
leave
repz
jns
mov
mov
enter
jg
arpl
daa
cmp
adcl
xchg
xor
les
cmp
pop
imul
and
ret
arpl
jmp
xchg
dec
pop
test
dec
fcoml
repnz
xchg
popa
cmp
jo
mov
psubusw
sub
pop
arpl
jo
mov
push
or
mov
inc
pusha
lods
fnstcw
mov
xlat
lds
daa
push
mov
adc
jne
leave
and
es
sub
pop
push
cmp
cmp
push
mov
xor
add
xchg
fucomip
iret
or
and
test
jl
hlt
jns
decb
scas
dec
add
testb
inc
ficomps
shlb
fiaddl
out
dec
fisttps
ja
sub
jnp
pop
adc
cwtl
in
pop
jbe
ret
mov
add
fwait
or
hlt
test
sbb
mov
inc
dec
pop
int3
xor
inc
nop
jle
push
push
cmpsb
out
adc
mov
sbb
mov
pop
aam
cs
subb
fsubrs
loope
loope
push
imulb
arpl
or
lahf
rolb
pop
push
arpl
dec
orl
dec
xorl
xchg
sbb
cmp
hlt
jns
dec
jg
test
push
cmp
add
mov
inc
test
xchg
clc
mov
shl
xor
hlt
mov
mov
sub
dec
in
lods
cmp
add
jo
xchg
dec
aas
lock
jno
or
mov
jge
fcoms
shrl
mov
hlt
gs
sbb
xchg
je
mov
sbb
jo
cmp
mov
insb
fidivrs
lods
jns
or
sbbb
data16
jae
pusha
loope
jle
dec
fidivrl
cmpsl
push
leave
loopne
jle
mov
xchg
mov
inc
mov
jge
jo
adc
push
and
data16
sahf
lods
fsubl
ljmp
mov
into
jno
icebp
js
mov
jne
inc
add
jle
mov
add
sbb
sbb
lods
mov
push
jbe
cmp
fiadds
cmp
dec
dec
mov
scas
add
cmp
xor
insl
in
add
popf
negb
push
cmp
clc
add
push
mov
push
dec
mov
sub
mov
fisubl
cmc
adc
aad
push
es
pop
pop
ds
push
xchg
mov
cmp
dec
je
in
mov
fs
outsl
sbb
decl
and
pusha
or
cmp
cli
into
lds
xor
repnz
pop
or
stos
dec
push
sub
or
hlt
mov
mov
insb
add
ret
test
add
insl
xorb
in
enter
shr
inc
mov
mov
and
lea
repnz
dec
mov
push
cs
cwtl
cmp
xchg
insl
inc
lods
mov
in
stos
sbb
adc
xor
data16
or
push
jo
xchg
addr16
nop
mov
aas
int3
sbb
dec
mov
mov
jno
adc
test
and
jae
pop
push
xor
inc
or
inc
sbb
jno
sbb
jno
test
jno
mov
sbb
xor
mov
loop
in
dec
pop
mov
mov
sub
and
mov
cmp
mov
mov
test
popf
aad
mov
aas
mov
lods
or
dec
push
dec
and
jne
ljmp
int3
popf
loope
out
orb
repz
loop
jle
push
imul
inc
mov
jnp
fdivrl
testb
xor
mov
into
cmp
int
cmp
cmp
test
push
dec
push
frstor
mov
or
movsb
lods
jns
jo
mov
adc
push
rorb
push
data16
sbb
sahf
inc
or
mov
shrb
pop
sub
mov
insb
adc
outsb
inc
scas
mov
pop
test
sub
cld
xor
ret
outsb
addr16
outsb
sbb
mov
call
jl
and
test
dec
dec
mov
mov
xor
xchg
daa
in
cli
xchg
scas
nop
sarl
xorb
rorb
arpl
test
out
pop
mov
adc
into
pop
inc
add
fldenv
push
stos
dec
movsb
xchg
pop
leave
scas
gs
fs
cmp
data16
jb
xor
mov
add
cwtl
sbb
icebp
mov
inc
adc
insb
push
call
lea
mov
cmovle
add
cs
cwtl
jge
and
ds
frstor
gs
popf
xor
lea
adc
lret
repz
pop
lret
pop
aam
and
xor
jb
insb
lock
or
cmp
pop
enter
sbb
pop
loopne
pop
mov
cmp
pusha
scas
mov
into
jno
lds
pop
push
mov
loop
add
or
inc
mov
cmp
cmp
dec
lret
or
mov
mov
scas
push
or
sub
das
les
pop
pop
jns
mov
stc
jmp
stc
mov
jle
pop
mov
cltd
mov
adc
push
xchg
mov
mov
pop
cmpsb
gs
push
dec
and
lea
int3
push
ss
xchg
jne
sub
add
jbe
mov
or
cmp
mov
orb
sub
dec
xchg
mov
cmp
xchg
fisttps
adc
adc
xor
xchg
bound
xchg
cmp
mov
pusha
imul
jle
stc
into
sbb
test
into
push
adc
adc
jb
pop
adc
inc
cmp
loop
sahf
lods
dec
push
clc
ds
fs
out
je
icebp
xor
pusha
adc
adc
mov
scas
inc
scas
inc
pop
pop
nop
sbb
add
dec
push
pop
pop
jbe
or
cmc
inc
push
mov
and
loop
imul
inc
or
test
pop
neg
loopne
mov
aas
insb
dec
ds
inc
mov
push
decb
add
jo
xchg
adc
insb
push
dec
dec
lret
lock
mov
pop
pusha
or
and
push
sahf
cld
lahf
hlt
aas
rorb
aas
movsb
and
inc
push
sbb
in
mov
mov
lea
aam
adc
scas
mov
andl
out
frstor
jns
cmc
shll
mov
inc
jns
pop
adc
push
sub
jmp
and
cmp
push
outsb
pop
xlat
aam
lcall
xchg
sbb
nop
or
jae
dec
cltd
cld
xchg
adc
xchg
pop
scas
into
jecxz
bound
and
icebp
mov
push
call
fidivl
push
mov
dec
cli
dec
adcb
xlat
and
pop
in
sub
mov
push
ljmp
dec
cmp
loop
jb
int3
cmp
and
sbb
lret
xor
and
sbb
cmpsl
stc
cmp
push
jno
push
out
mov
unpcklps
and
aam
pop
pop
add
push
lret
cmpb
push
mov
or
sbb
mov
mov
int
push
scas
imul
push
clc
sbb
xor
lea
jmp
je
cmc
mov
lahf
andl
xchg
mov
insb
jmp
fisubrl
pop
add
cmpsb
push
dec
sti
xchg
jo
js
int3
dec
int
xor
gs
fisttpl
shll
push
call
adc
and
sarb
dec
cmp
int3
scas
mov
add
adc
push
mov
ja
cmp
jg
mov
mov
pop
leave
xlat
pop
pusha
pop
lds
hlt
leave
hlt
insl
add
sarb
adc
xor
dec
xchg
fstpt
fcoml
jb
scas
gs
and
mov
lods
pusha
push
sbb
scas
jmp
or
movsl
fdivs
lods
divl
insb
mov
lcall
and
mov
push
pop
push
iret
scas
scas
or
scas
ljmp
enter
or
out
dec
xchg
out
sbb
sub
push
bound
jp
sahf
orb
sub
outsl
imul
stos
or
sub
xchg
adc
outsb
pushf
mov
lods
mov
gs
or
mul
pop
idivb
arpl
addr16
and
outsb
pusha
leave
adc
xor
cmc
xchg
push
sbb
sub
dec
popa
lret
jae
sbbb
lods
and
push
jns
push
gs
add
fucomp
loop
icebp
clc
sti
pusha
jbe
pop
insb
xchg
pusha
rolb
xchg
pop
loop
mov
les
lods
sub
mov
in
adc
mov
aad
or
gs
mov
sub
js
fwait
mov
rolb
inc
fistpl
imulb
rcll
and
cli
mov
lea
inc
insb
test
jp
inc
sbb
imul
dec
stc
inc
sbb
cmp
icebp
test
icebp
and
cld
push
dec
sbb
jmp
int
and
mov
xchg
js
stos
sbb
loope
sub
push
xchg
sub
loope
fnsave
or
fcomp
and
xchg
xchg
xchg
xchg
xchg
mov
lahf
loopne
popf
cmp
xchg
mov
and
or
xor
in
push
sbb
dec
jb
ja
jne
mov
out
aas
xchg
pop
sbb
and
xor
stos
push
xor
loopne
cmpsb
jmp
aaa
mov
pusha
subl
xor
cli
and
and
mov
jno
push
addr16
xor
mov
lods
adc
movsl
sub
fcmovne
add
mov
push
inc
cld
jp
inc
inc
pop
mov
scas
pop
mov
daa
test
add
xchg
sbb
pop
cmp
outsl
add
data16
push
mov
fnstenv
xchg
pop
outsb
cmp
jp
mov
xchg
sub
out
stc
cmp
and
xchg
push
pop
fs
std
jg
add
cmc
test
adc
aam
push
and
icebp
mov
cmp
loope
mov
outsl
inc
adc
nop
and
push
xor
pop
fstpt
outsl
lcall
rolb
xchg
ret
dec
adc
lret
lret
or
sbb
popf
pop
pop
andl
pop
add
out
sub
out
add
push
mov
push
sub
lock
fsubs
jnp
stc
xchg
js
sub
call
stos
xchg
movl
in
mov
xor
imull
inc
pop
into
icebp
aam
nop
add
mov
adc
mov
or
data16
fwait
cli
nop
mov
outsl
hlt
sbb
mov
lret
leave
movsl
mov
std
pop
mov
mov
dec
test
outsl
test
aam
divl
lds
fnstsw
jae
cmpsb
xor
outsl
mov
cmp
outsl
hlt
ror
call
push
mov
xor
shll
mov
pcmpgtd
sarb
mov
stc
and
jge
das
jp
push
sub
bound
cmp
add
sub
mov
pop
and
sbb
lcall
out
stc
sub
mov
xchg
ficomps
mov
je
cmp
in
mov
push
mov
mov
mov
mov
xchg
lcall
jp
hlt
and
cmc
mov
inc
in
mov
jl
fwait
pop
shll
stc
nop
jo
cld
stos
fcmovbe
sbb
pop
cmp
js
insb
cmc
cmpsb
push
shll
inc
push
mov
jo
mov
mov
movsb
pop
push
cltd
jns
xchg
mov
sbb
cmp
ds
shll
divl
iret
fs
mov
shrl
fidivrs
cmpsl
push
lock
xlat
xor
dec
dec
aaa
imul
out
push
or
or
sbb
push
inc
dec
push
mov
cmp
stos
loopne
pusha
cmp
and
mov
bound
xor
imul
xor
inc
movsl
pop
push
dec
xor
or
inc
sahf
xor
lods
int
bswap
jnp
loope
fisubs
stos
mov
popf
sub
jge
psrld
xchg
xlat
movsb
adc
ja
lcall
cli
and
rcl
int3
inc
push
push
outsl
xchg
dec
mov
sub
add
into
or
and
ret
aas
xchg
outsb
insl
push
xor
das
xor
dec
and
test
mov
mov
cltd
call
or
push
jg
and
mov
fcoms
sub
sbb
jnp
add
xlat
adc
xlat
pop
fildll
lods
loopne
cmpb
adc
or
dec
notb
jno
rcl
pop
idiv
lea
scas
popa
cmpsl
push
xchg
outsl
iret
sbb
je
lock
jg
ja
iret
xor
ret
xchg
sub
cs
daa
push
cmp
cmp
xchg
cltd
mov
shlb
aam
push
mov
dec
cli
jb
in
pop
bound
mov
or
fsubrl
adc
mov
jp
inc
arpl
sub
enter
je
sbb
rolb
or
divb
out
jne
pop
mov
jp
repnz
sub
sbb
jne
and
mov
add
push
jp
jb
push
repnz
cmc
xchg
sub
xchg
adc
xor
add
jns
push
icebp
xchg
dec
in
int3
fdivrl
outsl
or
sbb
mov
jge
inc
cmp
pushf
and
xchg
inc
push
jbe
imul
imul
dec
push
js
pop
out
mov
sbb
lcall
cwtl
stos
sub
xchg
das
jns
es
pop
xor
fdivrp
jnp
aas
push
out
out
test
add
or
mov
ja
movsb
mov
mov
or
jo
sub
mov
mov
gs
insb
test
pop
gs
in
lds
lods
aaa
in
js
add
sbb
mov
pop
sub
mov
inc
pop
out
nop
ljmp
cmp
loop
sbb
jmp
repnz
sti
cmp
mov
subl
lds
push
jns
xor
sbb
insb
dec
sub
iret
inc
adc
cwtl
xlat
pop
addr16
sub
rcrl
push
xor
inc
jo
packsswb
lahf
insb
popa
dec
push
popa
mov
jns
or
pop
aas
xchg
mov
int
dec
sbb
je
repz
out
mov
add
daa
add
sub
jbe
pusha
add
cmpsb
mov
dec
cmp
push
out
mov
aam
clc
mov
in
sahf
jg
inc
arpl
fiadds
test
das
cmp
insl
ficoml
inc
fcompl
push
pushf
jne
add
adc
xchg
jb
adcl
dec
repnz
into
inc
cmp
and
das
mov
cmc
sbb
mov
ja
jp
idivl
jnp
shll
int
lock
sub
mov
inc
push
jmp
jb
add
pop
dec
xchg
inc
pushl
dec
ret
out
xchg
insl
lock
lods
mov
cmp
movsb
inc
xchg
pop
xor
push
jg
mov
and
push
daa
xchg
sbb
xchg
jecxz
sti
dec
jnp
std
pop
movsb
inc
xchg
xor
jne
fstl
mov
dec
flds
jo
cld
ds
mov
mov
cmp
fldenv
out
add
outsb
sbb
sub
fstpl
lods
xor
push
ds
fs
xor
cmpl
ja
xor
out
xor
mov
iret
xlat
push
or
rclb
mov
xor
pop
adc
repnz
fidivrl
xor
mov
pop
adc
jne
in
or
dec
add
jle
cld
jb
push
int3
cmp
adc
aam
cmp
cltd
mov
xchg
dec
dec
jmp
inc
out
mov
imull
shll
cmp
sub
int
jne
rcll
fdivr
mul
lahf
push
push
jo
into
imul
insb
mov
rcrl
cmp
js
push
shrb
xor
js
sti
test
inc
sbb
push
pusha
xchg
xchg
add
dec
in
push
add
sub
add
xor
pop
inc
sbb
and
and
ljmp
imul
pop
add
aam
jns
mov
add
xor
cmp
inc
test
jecxz
xchg
or
jbe
enter
ljmp
pop
in
cmpb
in
jne
inc
lods
dec
aad
jle
test
es
bound
adc
xchg
dec
and
xchg
pop
xchg
jle
pop
pushf
sub
roll
sbb
mov
xchg
jbe
lods
mov
hlt
rorl
test
inc
ds
pop
loope
push
test
scas
push
jecxz
rcrb
mov
sbb
lock
outsb
mov
call
out
sub
sti
mov
cmc
push
push
xor
xchg
xchg
adc
daa
xor
test
mov
inc
std
out
mov
pop
repnz
ljmp
fidivl
pop
andb
sub
and
outsb
mov
sbb
or
add
pop
dec
fs
xchg
mov
cwtl
xor
shlb
or
inc
mov
cltd
inc
fldt
and
and
int
lods
mov
insl
jge
cmpsb
shr
dec
cmp
into
cmp
push
decb
int
repnz
imul
jg
pop
push
adc
sub
mov
rol
cli
insb
mov
lcall
pop
out
pop
callw
xchg
jle
mov
arpl
pop
fdivs
mov
jnp
push
pop
dec
jbe
push
jecxz
div
pop
xchg
adc
cltd
inc
sub
or
jnp
add
stc
mov
loop
int3
outsb
stos
xor
or
arpl
aas
jle
push
aaa
dec
or
imul
mov
inc
push
out
imul
sub
fldenv
das
lods
xor
dec
fs
je
pop
lret
cs
jnp
dec
add
cwtl
jbe
sub
fistps
and
inc
xchg
out
sbb
sbb
adc
pop
mov
stc
xor
push
add
call
push
jmp
mov
arpl
sbb
lret
ret
sti
mov
adcb
adc
testb
push
int3
dec
add
and
adc
loop
fisttpll
movsb
add
ja
out
fst
or
es
orb
outsl
outsb
xchg
sahf
ljmp
into
or
jbe
push
inc
and
pusha
dec
mov
and
clc
rcl
cwtl
adc
nop
push
jg
mov
adc
pushf
add
add
xchg
mov
mov
pop
dec
scas
aaa
or
sbb
jb
lock
ret
mov
in
test
pop
add
inc
mov
sbb
jno
subl
pop
sbb
repz
arpl
cmp
stc
cmp
push
mov
scas
or
out
ret
or
loopne
out
int3
pop
jno
jnp
pop
lret
pop
jge
inc
sahf
int
jmp
and
lahf
cmp
ds
push
sub
movsl
add
lret
mov
aam
jb
cmc
insb
push
aam
push
arpl
in
ds
int3
cmc
jmp
mov
sbb
test
jne
popa
lds
mov
and
dec
sti
jle
dec
arpl
loop
cmp
dec
mov
adc
aas
mov
cs
xor
push
xchg
sahf
jne
xor
and
daa
loop
cli
fs
leave
jecxz
mov
and
xchg
sahf
push
xor
int
dec
add
xlat
cmp
hlt
fcomps
pop
js
and
adc
pop
pop
pop
lea
aam
popa
out
push
mov
sar
pop
push
jb
or
xor
xlat
mov
ret
jge
jp
jb
jge
out
add
jno
add
fnstsw
mov
outsb
add
mov
cmp
add
jbe
push
lds
mov
lods
ja
testb
add
push
jmp
scas
ffreep
mov
iret
je
lcall
pop
mov
add
mov
xor
into
call
mov
mov
test
adc
cmp
pop
cld
rcll
inc
jo
popa
xor
imul
stc
add
add
scas
cmpsl
call
xchg
add
ret
leave
mov
mov
jg
cwtl
outsb
stos
daa
call
xor
mov
jb
popa
cli
jns
mov
sub
xchg
push
jmp
push
mov
inc
out
shrl
int
stos
cs
fnstsw
jecxz
je
sub
inc
dec
or
fiadds
cld
sbb
cmc
sub
test
xchg
inc
cmpsb
jmp
insb
cmp
mov
imul
movsb
movsb
ficoml
xor
push
lret
jl
not
cmp
pusha
imul
jecxz
fldlg2
pop
dec
rorb
inc
sarb
movsl
xor
imul
inc
adc
xor
clc
je
cmc
roll
out
dec
pop
mov
inc
and
mov
fwait
es
mov
jmp
ds
and
mov
cmp
movsb
out
jp
sbb
and
push
sbb
lea
test
adc
out
cmpsb
xor
fdivl
popa
or
mov
dec
ljmp
out
flds
ret
movsl
std
xchg
jns
lahf
jmp
jb
fsubs
arpl
scas
into
pop
and
sbb
sti
xor
sub
mov
dec
in
cmp
push
outsl
fisttpl
dec
inc
inc
pop
pop
jo
jg
mov
push
mov
mov
out
loopne
aas
jmp
lock
xchg
outsb
clc
test
xorl
xchg
fcmovu
and
xchg
lret
cmc
mov
loopne
call
mov
xchg
adc
imul
orl
out
jge
sub
lcall
repnz
repz
ret
data16
adc
js
adc
jge
mov
fbstp
in
je
cmp
cmp
jnp
xchg
mov
xor
inc
and
mov
or
mov
add
movsl
lret
sub
mov
jns
fiaddl
mov
sbb
and
imul
adcl
mov
jge
adc
xchg
out
cmp
cmpsl
in
pop
out
inc
fsubs
push
fdivr
rcll
xlat
insl
jl
cmpsl
outsl
cs
jmp
adc
movsb
cmp
aaa
iret
mov
sub
pop
lret
call
fnstsw
add
push
dec
rcr
sbb
sti
push
lods
leave
jle
jp
loop
shrb
and
xchg
add
mov
pusha
idivb
fstps
jl
lods
aaa
das
jl
sti
movsl
insb
inc
sbb
sbb
test
stos
aad
cmp
pop
imul
sub
test
out
xchg
jecxz
pop
mov
iret
and
outsl
jl
fcmovbe
scas
into
mul
and
adc
clc
in
sub
sub
xchg
repnz
stc
iret
mov
or
mov
adc
mov
fsubs
sub
clc
fdivrp
jp
xchg
or
test
loopne
test
out
xchg
sbb
cmc
call
fisubl
je
dec
push
mov
jle
loopne
out
insb
movsb
repnz
cltd
fdivrs
xor
or
push
jge
mov
mov
jns
in
adc
sahf
lock
rcrb
mov
stos
hlt
dec
xlat
inc
rorl
stc
outsb
mov
dec
dec
and
sbb
pop
shll
cwtl
xor
xchg
mov
adc
add
scas
lds
idivb
pop
ljmp
movsl
outsl
or
js
cmp
imul
fdivrl
shrb
cmpsb
jo
aaa
scas
out
les
mov
push
pop
fdivrl
decb
lods
cmp
ret
int
inc
and
sti
push
hlt
cmp
mov
inc
xchg
subl
ds
cld
int
pop
jg
mov
jl
push
insb
xor
mov
mov
clc
sub
sub
jp
dec
pop
mov
mov
loop
and
cmc
xchg
les
push
and
imul
xchg
xchg
pop
cmpsb
dec
sbb
xor
pop
lahf
loopne
pop
insl
push
aam
xor
cmp
test
push
sbb
sbb
popa
or
xchg
negb
or
jg
dec
inc
rclb
mov
and
fwait
cltd
sarl
xchg
gs
jmp
lcall
repnz
fistpll
adc
movsl
shr
idivl
xchg
push
sbb
subb
shlb
lods
pop
mov
and
push
daa
push
inc
jb
sub
lds
cwtl
fsub
add
xchg
xlat
push
leave
jbe
in
fstpt
test
aas
aam
roll
gs
sub
dec
sub
jp
push
cmp
jbe
mov
lock
data16
push
test
sbb
push
addr16
leave
push
cwtl
cmp
data16
loope
xchg
outsb
shrb
push
fisttpl
and
das
xor
xchg
mov
inc
stc
test
arpl
adc
lods
mov
sub
in
roll
sbb
mov
fists
minps
mov
jl
dec
mov
mov
xchg
add
push
addb
lret
hlt
push
outsb
cltd
jp
cld
pop
fcmovnu
adc
enter
adc
dec
adc
into
popa
jae
insb
cmc
outsl
push
loop
cmp
outsl
xchg
dec
clc
cwtl
sub
mov
sub
lret
adc
jo
data16
mov
sub
sub
cmpb
mov
jmp
movsb
rcrl
imul
xchg
hlt
fnstcw
popa
push
push
jg
aaa
push
and
jp
push
movsl
outsl
push
pop
jnp
jb
dec
or
xchg
lret
adc
add
nop
cmp
dec
test
cmp
sbb
and
adc
enter
sub
adc
loope
jne
adc
and
push
jge
fs
sti
fdivs
dec
mov
jb
mov
cmp
mov
sbb
shll
mov
sub
idivl
pushf
in
and
daa
mov
sbb
into
dec
pop
in
xchg
pop
stc
js
addr16
or
addb
popa
subl
and
inc
jge
lea
xchg
jnp
ret
scas
aas
insb
pop
cmpsl
testb
push
cmp
aaa
test
adc
int
pop
mov
mov
loope
cmp
call
mov
pop
adc
test
pusha
mov
scas
mov
int
pop
sub
std
inc
add
xchg
jp
jns
push
push
cmp
add
xchg
fsub
testl
rcrb
mov
sbb
hlt
mov
mov
push
jae
cli
mov
push
mov
push
loope
rcll
fstl
xchg
push
clc
jmp
movsb
arpl
fdivrs
in
jae
insl
call
lret
movsl
adc
fimuls
mov
mov
and
pop
fsubs
shl
gs
rcll
in
cmpsb
shll
lods
loope
in
call
jae
out
aas
ret
cld
and
adc
xchg
xchg
inc
xchg
mov
pushf
cmp
mov
popa
jne
xchg
mov
daa
add
cmp
ljmp
mov
inc
mov
pop
iret
mov
bound
push
imul
out
fstl
jge
int3
jg
push
mov
mov
cmp
daa
std
movsl
xchg
mov
add
or
and
push
dec
and
cmc
adc
sub
pop
jmp
fidivrs
and
call
loope
xor
aaa
jne
mov
cmc
test
mov
xor
cmp
fstps
hlt
loope
aas
mov
lods
and
cwtl
adc
inc
inc
sub
xchg
push
sub
insb
fst
popa
dec
dec
lret
call
mov
add
push
mov
push
jb
shrb
xchg
add
sbb
mov
stos
js
stc
shrb
aam
jb
push
fsubl
in
scas
mov
inc
mov
dec
lods
leave
cmp
sub
dec
inc
enter
mov
or
dec
xchg
sub
pushf
jecxz
sahf
popa
mov
movsl
mov
rcrl
pusha
xor
pusha
in
pop
ret
jne
xor
mov
xor
ja
out
aaa
adc
imul
int
add
mov
push
sbb
pop
lods
dec
inc
jae
xor
sar
ds
pop
mov
imul
mov
adc
scas
inc
xchg
pushf
jbe
movsb
test
pop
jmp
cmp
mov
dec
or
into
test
mov
les
jp
mov
cmp
mov
mov
arpl
aad
call
cmp
jle
dec
popa
xor
mov
jle
mov
fidivrl
test
mov
popf
lcall
and
inc
sbb
adc
arpl
loopne
subl
xchg
cli
rcl
and
jle
mov
bound
test
mov
in
mov
mulb
pop
or
add
fs
mov
mov
dec
xchg
jae
mov
and
les
imul
leave
pop
imul
xchg
or
pop
lds
cmp
cmp
cmp
pop
bound
inc
insl
hlt
sub
adc
sbb
sahf
fcomps
andl
in
sbb
add
mov
add
mov
xchg
mov
loope
push
outsl
xor
mov
sub
aaa
dec
rcl
mov
push
aam
xchg
push
pop
cmp
mov
movsb
mov
and
insb
addr16
leave
mov
insb
or
jp
fwait
xchg
push
ret
push
xchg
out
jg
lea
sete
mov
push
sbb
addl
jmp
sbb
aam
outsb
je
int3
adc
xor
aad
gs
add
pop
stos
ja
outsl
les
mov
pop
ret
mov
lock
inc
mov
in
out
mov
in
push
js
es
cmp
bound
cmp
aam
inc
or
pop
adc
cs
loope
lock
std
cmp
pop
out
adc
loop
cmp
xor
fisubrl
push
lods
decl
push
outsl
jne
aam
push
aaa
push
push
mov
ja
stos
and
push
add
push
dec
call
dec
cmp
popl
testl
js
sub
cli
add
mov
push
stc
jne
xchg
cld
orl
sbb
clc
sub
pop
inc
xor
push
mov
es
jb
push
cmpsb
mov
dec
adc
cmp
pop
imul
ds
les
mov
inc
enter
cltd
nop
xor
lret
or
in
and
push
shrb
cmp
rcr
jae
inc
or
in
cwtl
mov
outsb
fs
adc
push
push
arpl
imul
pop
scas
fs
fs
dec
adc
pop
inc
mov
push
nop
js
dec
push
pusha
inc
fisubrl
xchg
dec
imul
insb
int3
mov
int
inc
in
mov
icebp
xor
insl
inc
decl
in
sub
jbe
and
ds
les
add
sbb
mov
inc
adc
mov
iret
ds
adc
fidivrs
push
xor
adc
push
jg
pop
call
xchg
cld
xor
imul
mov
mov
fwait
arpl
int3
push
out
int3
fisubrs
imul
ret
mov
loope
in
and
jge
xchg
outsb
fldcw
cmpsl
inc
or
movntq
push
mov
fcoms
add
sbb
mov
movsl
push
sbb
ljmp
push
jmp
pop
ja
dec
jg
mov
inc
xchg
add
leave
fidivl
dec
jnp
cmp
jo
xchg
add
aad
xor
adc
out
je
movsl
cmp
xchg
inc
push
inc
sbb
mov
push
lret
mov
in
mov
mov
mov
and
inc
mov
and
pop
nop
sub
mov
lcall
cmp
push
repnz
and
jg
adc
imulb
ficompl
popl
or
dec
aas
adc
lret
imul
adc
xchg
xor
lret
sub
imul
dec
je
mov
divb
dec
into
dec
and
mov
outsb
jp
and
lea
dec
int
cmpsb
int3
scas
xor
dec
lods
push
data16
push
sti
jle
mov
pop
push
xorb
inc
int
cmp
xchg
movsb
xor
mov
mov
cwtl
movsl
and
test
bound
subl
dec
xor
in
and
sahf
pop
pop
ss
into
sub
jle
jp
scas
cmp
lods
call
imul
push
jo
cwtl
mov
sbb
dec
popf
mov
sbb
jg
loop
pop
push
xchg
dec
cwtl
jg
nop
lods
ds
jp
fisubl
push
pusha
js
shrl
repz
push
lcall
cmpsb
pop
lret
jno
ret
repz
or
adc
push
or
pop
jnp
mov
and
push
in
adc
cmp
fwait
sahf
and
and
jb
out
inc
cmc
loope
shll
dec
jb
adc
push
pop
xor
scas
sub
sbb
js
xlat
mov
xor
sub
mov
inc
dec
dec
test
loope,pt
sub
aas
movsb
mov
push
inc
and
int
outsl
jo
pop
ss
sbb
mov
mov
cmp
xor
sub
or
inc
out
jp
addb
loopne
or
xchg
in
das
orl
mov
xchg
mov
imul
aaa
cmpsb
das
pop
pop
push
imul
movb
loope
pop
push
outsb
push
fnstenv
jp
shrl
cmpsl
push
lret
pop
jno
popa
mov
mov
push
fs
inc
push
std
inc
test
push
add
push
mov
pop
fcoms
and
loope
xchg
or
xchg
test
jge
shll
and
sbb
mov
pop
fidivl
mov
mov
jle
test
push
iret
dec
arpl
test
mov
lret
sub
push
outsb
lods
xor
mov
andb
jne
dec
fisubl
ja
bound
cli
xchg
mov
sbb
push
mov
rcl
dec
push
inc
fdivp
outsb
pop
adc
inc
shrb
jl
mov
jle
xor
lret
mov
push
js
cwtl
lahf
mov
in
mov
xor
mov
fldl
adc
outsb
ljmp
mov
sbb
bound
imul
lcall
gs
adc
add
xchg
mov
fcmove
mov
and
pop
outsb
clc
je
ljmp
push
xor
loop
dec
in
mov
data16
scas
pop
mov
jp
jle
pop
jle
fstps
out
dec
dec
xchg
and
push
mov
js
xor
jecxz
and
jg
ss
popf
imul
dec
add
stc
inc
sahf
inc
dec
rorl
sbb
sar
inc
cmpsb
adc
mov
mov
rcll
stos
les
inc
shrb
test
cmp
inc
and
mov
subl
cld
scas
aas
insb
shll
xor
cmp
mov
inc
push
sub
mov
sub
ja
xchg
cmc
add
push
cmp
shlb
xchg
sbb
push
jns
arpl
xchg
add
popa
cli
bound
mov
or
push
xchg
dec
or
add
test
lock
addr16
mov
cmp
jnp
sub
push
inc
mov
ds
test
sub
adc
hlt
mov
test
aam
test
inc
scas
cmpsb
jns
and
mov
pushf
loop
mov
int3
ss
sbb
insb
or
cltd
jmp
dec
push
mov
cmp
aad
fstpl
popf
add
outsb
push
les
loope
lret
sahf
mov
mov
cmpsl
adc
dec
nop
or
and
mov
sub
stos
adc
fstps
mov
and
cmp
adc
pop
sub
push
shl
pop
loop
sub
xchg
shr
aaa
sahf
sub
fwait
cmp
jmp
and
pusha
jge
les
and
cmp
jl
sbb
cli
inc
in
cwtl
movsb
bound
xchg
sub
add
jnp
mov
idiv
dec
mov
pop
std
pop
addr16
dec
jb
movsl
mov
pop
mov
outsb
cmp
pop
mov
and
fcoml
jge
jno
mov
mov
sub
pop
arpl
ljmp
sub
decl
lock
in
outsl
dec
cmp
loopne
ss
dec
mov
xchg
jns
cmc
mov
mov
dec
dec
mov
add
fs
jge
jo
repnz
and
and
push
jbe
jg
mov
idivl
or
xor
ficoms
sarl
fimuls
mov
fisttpl
call
xchg
mov
mov
test
mov
or
data16
push
arpl
jecxz
dec
xorb
cmp
mov
pop
mov
and
fdivrs
cmp
push
cmp
cwtl
dec
mov
xor
xor
stc
fs
ja
nop
outsb
cltd
data16
fprem1
push
movsb
fs
gs
cltd
pop
roll
xchg
pop
pop
xlat
add
dec
or
xchg
bound
pusha
test
les
mov
xchg
pusha
pop
ds
loopne
cmp
scas
imul
cmc
and
and
fdivrs
cmp
xor
rorb
add
lods
sbb
call
out
inc
pop
repnz
outsl
je
inc
sbbb
xchg
fisubrl
fnstsw
xchg
add
xor
aas
push
mov
sub
sarb
cmpb
lahf
adc
popa
add
es
mov
and
sbb
add
mov
or
fists
add
push
jbe
xchg
mov
inc
and
test
or
ss
aas
ja
int
sbb
pop
push
cwtl
das
fimuls
push
push
push
pushf
mov
inc
callw
in
sub
ret
rorb
jae
sbb
iret
ret
scas
push
or
push
testb
int3
insl
js
aas
std
insb
lds
shrb
jnp
fisttps
adc
pop
lahf
repz
push
mov
out
int
fldenv
data16
sub
mov
push
xchg
or
push
test
dec
mov
int3
push
sbb
ja
ds
call
mov
xor
xchg
stc
and
inc
jns
fcmovb
add
mov
ds
cmp
sbb
push
jbe
dec
mov
movb
lret
popa
imulb
push
sbbb
push
jbe
sarb
outsb
imul
mov
pop
addr16
jg
jp
xchg
insl
cmp
ds
leave
add
sahf
xchg
out
in
inc
mov
leave
mov
push
fwait
or
jns
add
jne
lret
imul
lea
dec
cmp
adc
test
mov
imul
jecxz
imul
mov
movsl
es
cmp
cmc
in
sbb
test
addl
scas
sahf
mov
aad
sub
mov
pop
mov
loopne
lret
cmp
xor
shrb
gs
sub
xchg
jecxz
mov
push
push
add
idivb
or
cld
std
enter
inc
lods
jp
ja
ja
jg
mov
insl
inc
stos
push
xchg
mov
sahf
cld
in
adc
cmpsl
sbb
xchg
jl
sbb
jle
loopne
repnz
adc
insb
insb
jecxz
pop
dec
iret
add
mov
jecxz
enter
cmp
mov
xor
add
ret
push
sub
push
sub
inc
adc
inc
dec
mov
insl
sub
pop
pop
mov
shlb
xor
mov
incl
mov
test
mov
sbb
cmp
push
sub
and
xchg
cs
stc
call
xor
sub
stc
in
push
insb
or
insl
adc
and
jg
mov
and
in
xchg
notl
dec
xor
aam
jmp
or
mov
movsl
mov
or
inc
or
mov
push
lahf
and
imul
push
push
mov
mov
pop
test
cmp
out
aas
rclb
jns
or
cli
fcmovu
dec
sub
dec
cwtl
cmp
add
sbb
gs
sbb
adc
or
xor
cmp
cmp
rcll
xchg
rcr
push
rolb
jle
mov
mov
insl
shlb
scas
ja
sub
push
insl
cli
dec
enter
mov
fcmovne
or
imul
mov
fadds
fnstenv
cmp
xor
sub
aam
sbb
idivl
sub
push
and
pop
shrb
cmp
fs
cmp
mov
sti
adc
mov
jp
clc
cmp
mov
lea
mov
popl
jbe
jmp
push
hlt
ds
sbb
jo
pushf
mov
jbe
fidivl
pop
inc
in
mov
adc
mov
lods
rorl
xchg
shll
mov
xor
xchg
mov
push
pop
mov
push
sbb
pop
mov
fwait
into
aas
push
fs
xchg
push
loope
cmp
insb
mov
shlb
dec
int3
jle
sbb
dec
mov
cmp
fsubrl
das
call
xchg
push
mov
lret
leave
push
mov
lret
std
pop
nop
sahf
out
mov
cmpl
in
cmp
loopne
jae
jle
mov
xlat
je
mov
mov
adc
lea
fstpl
les
lahf
ja
imul
add
sti
adc
jo
ljmp
daa
sbbb
adc
sti
idivb
sbb
movsb
xchg
cmp
fidivrs
xchg
sub
addr16
pushf
inc
movsb
data16
js
insb
and
dec
cwtl
jne
jp
and
adc
pop
xor
pop
jnp
loop
sbb
fdivrl
adcb
repz
out
scas
frstor
jne
popa
pop
popf
nop
outsb
hlt
or
ljmp
div
jl
cltd
lods
mov
inc
sti
stc
xchg
inc
popa
mov
jmp
movsb
mov
mov
out
fwait
jbe
in
ss
leave
pushf
push
mov
and
jbe
je
jge
test
pop
jmp
inc
mov
xchg
sarl
fisubrl
ret
xchg
mov
aaa
lahf
push
cli
push
nop
pushf
push
aad
push
xchg
mov
sub
aas
pop
xlat
fidivs
cmp
jmp
js
jg
test
mov
adc
push
js
loop
psraw
adc
xchg
nop
loopne
mov
test
sbb
imul
or
loop
mov
scas
or
ss
clc
sbb
xchg
outsl
lds
pop
adc
pop
jmp
or
call
fcmovb
clc
mov
pop
shlb
pop
enter
mov
data16
popa
pop
test
pop
cmpsl
xchg
out
or
mov
js
into
mov
ss
mov
fsubrp
dec
stos
sti
ret
arpl
sbb
rcrb
mov
push
pop
push
lods
xor
jne
mov
pop
or
mov
out
jle
add
lret
pop
add
inc
xlat
pusha
subb
mov
jecxz
jp
xchg
or
mov
xor
xchg
jmp
aas
orl
mov
mov
cmp
fildl
add
test
popa
fbld
call
mov
xchg
xor
rorb
cltd
adc
jmp
leave
ds
mov
out
addl
decb
aad
jg
test
incl
adc
scas
cltd
push
sti
hlt
leave
fsub
lock
insl
dec
jns
jnp
adc
jo
sbb
imul
cmp
and
cmp
scas
add
inc
xchg
shll
fchs
and
int3
out
in
inc
addr16
mov
jae
and
dec
cmpl
cltd
xchg
dec
cmc
dec
sub
jp
inc
idivb
push
push
jge
ret
mov
jns
leave
pushf
jge
adc
popa
les
xor
adc
inc
les
sbb
and
mov
push
repnz
cmp
outsl
inc
dec
cmp
repz
pop
and
add
mov
add
stos
stc
cmp
stc
add
ljmp
push
test
push
fldenv
adc
or
xchg
insb
or
mov
aas
gs
pushf
sub
sub
repz
inc
inc
jbe
je
add
add
and
stos
fldcw
flds
enter
inc
pusha
outsl
repnz
push
pop
or
inc
sbb
xchg
or
jle
pop
xchg
push
pop
jo
inc
sbb
jl
dec
adc
mov
jne
or
rorl
jp
push
push
add
jae
das
cmpsl
xchg
and
incl
xchg
or
sbb
inc
cmp
test
xbegin
push
insb
and
and
xor
sub
shlb
adc
xchg
mov
xor
adc
inc
insl
push
popf
sub
hlt
push
int3
imul
nop
mov
fcmovu
mov
lret
add
push
adc
dec
mov
popf
sahf
push
shl
inc
push
dec
add
aam
jecxz
mov
jmp
stos
jo
dec
pop
adc
push
popf
pop
dec
or
xchg
fidivrs
popf
adc
or
add
xchg
mov
mov
mov
push
les
lock
xchg
mov
clc
jno
xor
push
or
push
and
je
stos
dec
cmp
pop
or
xchg
xor
gs
popa
mov
dec
or
adc
sahf
and
xor
xchg
decb
das
ret
pop
xor
leave
jo
test
fcoms
cwtl
jne
push
xor
scas
test
pop
dec
xchg
push
ss
adc
fdivs
or
pop
jbe
gs
popf
repz
pop
fwait
mov
add
push
test
push
aas
xor
inc
fisttps
mov
pop
sub
mov
jge
and
mov
js
mov
sub
stos
push
js
scas
push
and
mov
popa
sbb
or
outsb
adc
cli
data16
mov
pop
mov
bndldx
ss
into
xor
shrb
push
es
push
sbb
jmp
nop
xor
or
mov
hlt
in
mov
push
cmpsl
js
mov
adc
sub
push
test
out
sbb
inc
inc
jo
xchg
addr16
mov
std
push
mov
cs
test
push
push
cmp
add
mov
cmp
loopne
nop
inc
mov
cmc
cmp
stc
pop
shlb
push
xchg
pop
out
popa
cld
and
cmpsb
in
push
inc
push
cmp
mov
fcmovb
sar
imull
or
xchg
sbb
jnp
push
ja
and
cmp
sti
fisttpl
repz
mov
jecxz
jge
pop
cmp
inc
jnp
add
add
std
repz
xor
movsb
mov
movsb
je
into
inc
fs
mov
mov
clc
sbb
push
sarb
out
adc
xor
pop
add
out
fwait
pop
mov
dec
cmp
jmp
popf
call
or
cmp
mov
jns
xchg
xchg
ret
jns
cmpsb
in
sub
dec
push
repnz
aas
mov
cmp
xchg
adc
adc
cs
jns
lea
dec
jp
jmp
pushf
aam
lret
data16
inc
cld
jo
mov
pop
out
ret
jmp
leave
dec
mov
enter
xchg
or
movsl
jne
iret
sub
dec
adc
daa
pushf
int3
sub
adc
xor
add
ljmp
jb
das
popf
pop
sub
inc
xchg
imul
push
jle
add
pop
sbb
stos
icebp
push
jecxz
sti
cmpl
out
adc
sub
lods
stos
xor
pop
dec
and
ljmp
and
iret
xchg
les
push
xor
push
cmpsb
insb
mov
or
mov
inc
xchg
mov
loop
jo
fcoms
arpl
mov
mov
dec
jmp
je
jbe
fcomps
sub
gs
repnz
sbb
xor
adc
inc
pop
push
and
popa
fisubl
push
jbe
cmp
sub
rorb
hlt
sbb
jne
lret
in
fs
loop
pusha
aad
cltd
push
jle
push
pop
jbe
inc
mov
lock
or
push
or
lret
rcll
jae
cmc
jl
inc
ret
lods
clc
fstps
leave
cmp
adc
xlat
insl
add
sbb
push
pop
outsb
hlt
stc
dec
mov
imul
xchg
ja
outsb
inc
sub
and
cmc
aad
pop
or
adc
sbb
stc
das
mov
sub
push
mov
mov
ljmp
sbb
jp
mov
sub
cmp
and
shll
mov
fcoml
xor
inc
cmpsb
mov
inc
in
xchg
cmp
dec
jo
dec
sub
add
mov
mov
jnp
arpl
icebp
push
jp
xor
add
or
cs
or
mov
imul
ss
push
ja
sub
sbb
sbb
cld
inc
xorb
inc
jg
insl
cwtl
jecxz
adc
js
xchg
sub
mov
test
insl
sbb
pushf
lret
mov
and
imul
and
jne
fdivl
outsb
push
or
popa
lock
lret
cmpsb
sti
js
pop
sub
pop
insb
das
jmp
loopne
outsb
sub
push
mov
adc
mul
pop
xchg
jnp
push
xchg
inc
adc
ljmp
cwtl
jg
lcall
cmp
fldcw
test
mov
cmpsl
ja
out
outsb
dec
in
shlb
lock
in
mov
xchg
mov
inc
lcall
xor
and
insl
add
push
jle
ret
mov
je
repz
loop
mov
adc
xchg
fs
imul
ja
adc
and
das
pop
add
jle
inc
lods
xlat
dec
jb
xchg
push
icebp
cmp
add
bound
add
loopne
sbb
stc
add
mov
sub
lret
fsubrs
mov
xor
cltd
js
fwait
mov
adc
pop
insb
cmpb
out
dec
je
insb
fnstenv
dec
stc
loopne
add
mov
pop
lods
sub
mov
sbb
jmp
or
or
xchg
jl
adc
fs
fsubrs
mov
scas
outsb
or
push
aaa
aaa
add
mov
mov
or
fistl
jl
cli
ljmp
mov
mov
lret
sbb
arpl
cli
xchg
xchg
jnp
bound
mov
pop
or
in
cwtl
sub
xor
xchg
sbb
xor
jb
enter
popa
mov
mov
les
mov
int
addr16
jmp
popa
out
sti
mov
mov
lock
cmp
in
js
clc
sub
ljmp
adc
or
xor
stos
dec
fnsave
add
movsb
xchg
cwtl
pop
loop
sub
es
push
movsl
repnz
jne
lret
jb
adc
and
in
stc
adc
push
pushf
adc
movsb
pop
repnz
xor
sbb
jne
add
xor
push
mov
mov
sbb
xchg
scas
mov
adc
data16
cltd
adc
fnsave
stos
in
sbb
ss
sub
aad
int3
adc
mov
pop
cmp
roll
jl
hlt
jge
dec
repz
outsb
dec
xchg
and
push
xchg
dec
or
cmp
fcompl
hlt
jbe
dec
pop
mov
xor
pusha
ret
xor
fucomi
jno
adc
xchg
dec
lock
jbe
mov
push
pushf
jne
arpl
icebp
in
push
outsl
icebp
jbe
addb
jmp
sarl
pop
in
fsubrl
xorb
inc
jb
sti
icebp
insb
bound
mov
push
mov
cmp
or
adc
inc
pushf
or
inc
enter
je
jo
cli
or
arpl
jne
out
adc
test
mov
stos
cli
inc
cld
insl
leave
imul
push
lods
and
in
test
cmpsb
les
push
lea
jo
in
xchg
fs
or
jno
push
arpl
gs
mov
jo
cli
add
pop
mov
and
lcall
cmp
and
sub
enter
fdivr
jb
jns
dec
mov
mov
popa
or
rorl
cmp
and
inc
mov
mov
loop
xor
xor
push
xlat
outsl
jo
jmp
adc
pusha
fnstsw
or
loopne
sbb
pop
add
in
lea
push
inc
pop
sub
in
jmp
and
or
or
cmpsl
orl
lock
popf
jle
je
cmc
in
jg
mov
je
cmp
and
or
in
xchg
stos
xlat
pop
imul
push
xor
inc
outsb
pop
xorl
jne
jbe,pt
push
lcall
push
xor
jno
add
xchg
xor
addr16
push
jb
jo
cwtl
out
jnp
repz
mov
push
cmp
dec
jge
sahf
scas
jle
cltd
cmp
int3
mov
mov
enter
pop
xchg
mov
cwtl
xor
jo
sbb
ret
mov
or
loopne
push
jmp
sbb
push
or
mov
adc
and
shll
push
sub
lret
adc
and
sarl
push
add
or
test
mov
pop
aaa
jo
pusha
lahf
aam
dec
pop
inc
cmp
call
pop
or
subl
and
repnz
add
hlt
adc
mov
sbb
mov
add
inc
inc
cmpsl
inc
pop
xchg
lea
clc
pop
inc
inc
addr16
in
xor
jg
das
nop
jnp
cmp
cmp
pop
pop
push
inc
push
out
cs
cmpl
pop
sbb
rol
pop
inc
dec
out
xor
outsb
mov
fwait
ja
inc
out
push
in
repnz
and
sbb
dec
cltd
int3
loopne
mov
sbb
jo
aam
and
mov
lcall
adc
pop
jbe
into
call
pusha
aad
or
movsb
xchg
push
cmp
mov
mov
mov
jo
test
mov
test
shlb
ror
and
xchg
ja
or
xor
xchg
or
arpl
jbe
dec
pop
in
xchg
inc
or
adc
pop
movsb
inc
adc
mov
std
mov
or
xor
ds
xor
lcall
leave
in
in
pop
imul
pushf
sbb
mov
cmpsb
inc
lods
jp
sbb
fstpt
cmp
add
pop
cmp
adc
xor
add
mov
out
hlt
or
dec
inc
aam
xchg
shrb
adc
loop
jae
mov
or
push
mov
jge
hlt
mov
jae
insl
pop
pop
mov
xor
xchg
popf
std
rorb
push
xor
push
scas
push
clc
push
sbb
cs
xchg
mov
inc
mov
and
and
mov
push
lahf
xlat
rcll
xor
sub
inc
fidivs
sub
data16
or
push
add
xchg
pop
pop
cld
xor
pop
mov
xor
sbb
dec
sti
or
scas
mov
outsl
lret
pop
adc
sbb
cmp
inc
xor
enter
stc
sbb
aaa
mov
shlb
fs
or
popf
mov
sbb
lcall
adc
dec
ret
cmp
mov
mov
xor
pop
jbe
mov
add
xchg
movsb
sub
jb
adc
dec
dec
inc
dec
shl
leave
inc
adcl
in
sub
sub
mov
mov
sub
cltd
push
and
dec
or
daa
lods
jno
sub
mov
sbb
dec
adc
cmp
sbb
or
and
ja
iret
bound
in
dec
adc
mov
xor
test
fwait
das
mov
mov
nop
xor
fwait
cld
aad
push
imul
xor
inc
sub
je
dec
push
pop
enter
jge
jle
inc
pminsw
and
mov
fs
sub
push
stc
cmpsb
scas
add
stc
cwtl
push
push
pop
xor
inc
fsubl
push
dec
add
sbb
jns
cmp
aaa
dec
or
je
leave
cmp
pop
lods
mov
dec
cs
mov
adc
mov
dec
xor
xor
or
loope
shrb
fiaddl
scas
xor
dec
int
push
fnstenv
stos
pop
stc
bound
push
pop
divl
call
xchg
inc
push
sti
ljmp
out
pop
pusha
xor
in
or
insl
pop
or
sub
jg
ss
sub
call
loope
jle
cli
sub
push
arpl
pop
je
fnstsw
pop
jle
cmp
dec
mov
lret
cmp
and
call
or
push
imul
sub
jne
outsb
test
lret
adc
xchg
mov
shl
fs
adc
sub
cmp
sub
stos
leave
daa
fs
sub
aaa
faddl
cmp
shll
or
push
imul
adc
push
rcrb
scas
sub
dec
aaa
es
adc
ljmp
mov
adc
dec
push
pop
sub
mov
dec
sub
int
and
divl
pop
cmp
jecxz
mov
mov
xchg
or
xchg
das
hlt
lds
dec
mov
xor
adc
and
mov
data16
mov
adc
pushf
mov
into
push
outsb
xor
or
cmp
push
loope
aad
out
dec
addr16
in
imul
cltd
aas
xor
sub
cmpsl
ss
shrb
popf
ja
push
test
sahf
mov
loopne
dec
xchg
leave
stos
insl
push
into
jmp
push
adc
xor
push
and
shrb
repnz
mov
shr
jno
fmull
fsubrs
loopne
jo
icebp
dec
xchg
call
mov
int3
jbe
in
add
scas
punpcklbw
mov
mov
and
jmp
push
fwait
subb
dec
fwait
jne
add
push
call
sbb
shl
rcl
jge
pop
jae
and
sbb
or
xchg
das
mov
insb
pop
imul
and
push
and
mov
or
lods
pushf
dec
sarb
push
shl
xchg
sbb
jb
push
push
outsb
shlb
shrl
jb
movsl
lods
rolb
mov
iret
sub
pop
sub
sub
mov
and
outsb
pop
das
push
enter
xorb
insb
inc
cltd
sub
jae
ljmp
sub
cs
imul
inc
loopne
mov
push
lcall
dec
shr
lret
outsb
sub
jbe
movsl
shll
adc
enter
cs
sub
push
xorb
xor
loop
and
or
mov
push
jbe
push
mov
dec
dec
cld
sbb
adc
pop
outsl
and
mov
sub
add
stc
push
mulb
imul
jbe
mov
hlt
insl
dec
mov
jl
sbb
sub
push
data16
call
pop
je
shrl
cmp
or
movsl
mov
lcall
adc
cmp
hlt
xchg
lret
xchg
pushf
cmp
ret
lret
jbe
or
xchg
push
in
push
push
or
popf
jl
push
and
arpl
push
cs
xor
xor
push
or
jmp
pop
xor
jne
and
dec
and
dec
inc
stc
call
stos
and
shlb
pop
dec
je
mov
sub
jmp
dec
cmp
repz
sbb
inc
test
jb
inc
sti
outsb
mov
sub
xor
repz
cmp
rcl
das
jbe
out
pop
mov
and
les
pop
cs
in
pusha
rdtsc
and
fnop
dec
inc
pop
jge
sbb
loope
stos
pop
mov
dec
or
sbb
and
mov
inc
xlat
push
mov
adc
pushf
popf
pop
push
mov
arpl
pop
lea
add
dec
sub
sahf
push
idivb
jge
mov
lods
push
cs
xor
cmc
mov
sbb
mov
or
add
xor
ud1
add
cmp
loop
jb
mov
dec
dec
mov
insl
movl
fdivrl
in
subl
mov
xor
adc
scas
inc
hlt
xchg
adc
sub
dec
jo
nop
inc
lahf
pop
dec
out
sbb
push
das
fistl
push
xchg
scas
mov
dec
shrl
xor
mov
ss
push
cwtl
shrb
pop
xor
call
adc
insl
outsb
pop
xchg
inc
mov
roll
cwtl
nop
ja
xchg
enter
sub
jp
add
and
lds
cld
into
mov
roll
popa
jae
push
scas
dec
dec
scas
mov
lock
jne
mov
pop
in
dec
stos
push
cs
mov
mov
push
or
mov
rcll
adc
jge
push
in
outsb
push
popa
in
push
divl
pop
jl
jbe
andl
stos
bound
mov
lret
ror
or
insb
lods
fists
push
bound
stos
and
test
mov
je
xor
jno
addr16
xor
pop
xchg
adc
add
orb
adc
adc
adc
sub
rclb
insb
push
xorl
xor
xchg
or
mov
push
outsl
insl
outsb
into
rorb
add
aam
sti
test
xorl
mov
add
xor
add
insl
pop
inc
mov
sub
mov
and
mov
sar
inc
outsb
push
lock
adc
sbbb
in
test
sbb
jb
fnstcw
dec
sub
jns
inc
dec
aas
mov
dec
dec
xchg
cmpsl
push
mov
xlat
loopne
xor
lret
mov
js
bound
insb
sub
mov
jecxz
xor
aam
or
jge
sub
addr16
int3
das
ret
rolb
aas
or
ss
adc
in
inc
mov
repnz
xlat
lret
fwait
dec
dec
or
dec
insl
xor
xor
int3
push
or
add
xor
fwait
push
test
fiadds
sub
cmpsl
cmp
inc
int
sub
repnz
pop
push
or
cmp
sbb
pop
adc
jns
fs
xor
or
mov
jae
and
sbbb
mov
xchg
fbld
push
daa
das
push
in
push
inc
out
lret
fadds
lahf
sbb
scas
mov
add
sub
sarl
pop
push
pop
das
adc
pop
imul
or
adc
cmp
nop
in
fwait
lret
rcrb
iret
shll
movsb
inc
aad
dec
test
xchg
popf
sub
jp
jbe
fcom
fdivp
lahf
into
inc
xor
dec
fs
and
rclb
push
dec
insb
mov
sub
js
outsb
cmp
cmp
lea
shl
fnsave
mov
add
das
jmp
pop
or
xor
gs
sbb
sub
gs
adc
ror
cmpl
push
aaa
loopne
inc
pop
sub
aaa
xor
nop
test
mov
xchg
pop
aas
mov
or
adcl
fs
xchg
outsb
in
jae
insl
cld
add
sub
adc
popa
outsb
sub
movsl
jecxz
scas
push
sub
out
stos
daa
xchg
into
inc
icebp
in
js
mov
sub
lock
push
fmull
or
into
cmpsl
xor
push
test
lcall
shlb
push
dec
xor
fiadds
dec
jecxz
loopne
or
std
xchg
inc
sub
int3
pop
push
cmp
add
shr
cmp
push
lods
in
dec
call
inc
mov
repz
sahf
jo
sub
int
gs
imul
fmuls
inc
cmc
stos
sub
fistpll
xor
ret
test
xor
and
ficoms
push
xchg
frstor
xor
add
adc
push
scas
jno
mov
mov
mov
jmp
pop
and
fwait
cltd
mov
clc
xchg
iret
push
mov
jge
adc
das
pushf
mov
xorl
movsb
push
cmp
cmp
mov
cmp
push
icebp
pop
or
inc
fldcw
push
and
xor
mov
add
xchg
xchg
adc
jl
pop
mov
jns
push
adc
pop
inc
xchg
insb
jbe,pn
adc
shrl
inc
push
sbb
pusha
incb
sub
mov
in
mov
sahf
add
adc
out
sbb
nop
adc
xchg
sub
pop
lods
mov
enter
lods
aad
cmp
jnp
lret
sub
adc
and
jb
stos
inc
push
and
xor
sahf
mov
mov
push
jmp
inc
aaa
xor
xor
or
test
cmp
inc
dec
lret
in
mov
and
call
pop
insl
xor
xchg
xor
int3
inc
stos
mov
dec
adc
xor
add
adc
pop
adc
inc
sub
jmp
dec
outsb
outsl
xchg
push
mov
sbb
xchg
roll
sub
jle
xor
xchg
push
xor
test
setbe
xlat
push
xchg
insb
push
xchg
inc
pop
dec
cltd
lret
sub
in
mov
lret
push
jmp
mov
pushf
push
xor
pop
and
popa
jl
inc
mov
push
subb
jl
in
dec
and
sbb
test
fsubs
push
mov
stos
jl
lock
out
cmp
stos
fildll
addb
adcb
jge
cltd
mov
repnz
add
sub
sbb
push
mov
loope
paddq
pop
hlt
jge
pusha
je
adc
inc
sbbb
cs
inc
int3
xor
aam
lret
mov
mov
push
jle
or
cmc
mov
xor
push
nop
call
push
pop
xchg
lret
mov
inc
dec
ficoml
push
xor
stos
scas
insb
out
push
sub
sbb
push
and
cmp
sbb
push
sub
mov
sar
push
pop
sbb
mov
sub
adc
push
rolb
sbb
inc
cmpb
test
adc
int3
cmp
aad
sub
lock
pop
ss
adc
xchg
out
add
aaa
dec
rcrb
add
movl
xor
jge
push
jo
sbb
inc
cmp
mov
dec
cmp
jb
push
subb
lcall
inc
mov
shlb
pop
mov
adcl
lods
xchg
push
les
iret
ror
mov
dec
int3
adc
and
jmp
pmaddwd
and
test
jb
leave
mov
pop
lea
cmp
xor
dec
mov
clc
out
stos
sub
or
fnsave
dec
stos
push
sub
movsl
cmovl
or
jge
out
andb
cmpsb
push
std
jnp
lcall
jecxz
or
pop
insl
cmp
dec
or
scas
aam
lods
inc
mov
mov
push
iret
imul
mov
push
out
nop
or
or
push
xor
mov
inc
rclb
add
inc
push
movsb
and
imul
sub
out
pop
ss
sbb
and
lods
sbb
lea
push
test
dec
mov
xchg
aam
test
jo
adc
data16
nop
sahf
lret
pop
jl
cs
pop
les
movsl
lcall
call
mov
push
out
enter
shlb
es
cmpsl
or
fdivrs
repnz
stos
outsb
inc
mov
repz
xchg
inc
xor
pusha
ljmp
test
push
das
std
cwtl
add
cmp
in
adc
fstpl
mov
jb
stos
popf
pushf
add
pop
push
imul
mov
jo
push
lea
dec
cmp
adc
enter
addr16
xor
movsb
dec
or
stos
insb
jp
addr16
add
ret
les
sbb
xchg
push
add
push
add
xchg
push
add
xchg
push
add
add
add
xchg
push
add
add
add
xchg
push
add
add
add
xchg
push
add
add
add
xchg
push
add
add
add
xchg
push
add
add
add
add
addb
add
push
xchg
push
add
xchg
push
add
nop
push
add
nop
push
add
xchg
push
add
push
add
nop
push
add
xchg
push
add
push
add
add
push
add
push
add
add
push
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
jbe
jb
cs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
je
insb
insb
add
pop
or
mov
pop
inc
bound
jo
mov
xchg
clc
pop
rcrb
in
add
js
jo
ret
inc
add
inc
push
or
push
cmpsl
sbb
mov
cmp
mov
inc
or
jns
jge
fistpl
jo
pusha
push
aaa
push
pop
xchg
dec
push
jbe
cltd
mov
push
push
sub
or
mov
jae
inc
aas
inc
lods
lods
mov
mov
inc
add
dec
and
or
jno
sbb
fbld
add
mov
les
in
add
loopne
adc
rcll
pusha
pop
ret
jne
xor
test
jmp
fwait
sbb
mov
xchg
pusha
xor
xor
in
add
add
addl
lret
shlb
scas
insl
mov
push
jne
xorl
test
or
sub
mov
pop
push
mov
add
push
sbb
push
or
pop
subb
cmpb
inc
push
mov
fld
pusha
enter
lock
sub
aam
rolb
sbb
insl
or
js
sub
xchg
jb
aaa
lret
pop
inc
xchg
xor
sub
repz
inc
jo
mov
add
insl
icebp
jnp
add
test
mov
jbe
pop
adc
call
mov
jl
inc
sbb
inc
sbb
aad
fsubs
jmp
and
int3
mov
setnp
pop
mov
idivb
cld
sbb
sbb
mov
enter
mov
mov
test
sbb
sbb
mov
inc
push
data16
mov
fs
xor
fsubl
insb
adc
mov
aas
inc
cmp
and
loop
sarl
push
jmp
xchg
xchg
mov
add
repnz
fistpll
cli
mov
daa
nop
and
xor
add
rclb
inc
push
pop
fdivs
xor
sub
loope
in
jg
pop
sti
mov
lds
sbb
jns
loopne
add
xchg
test
add
mov
sbb
dec
inc
push
stc
sbb
add
fsubrl
sub
andb
out
cmp
in
scas
pop
int3
jbe
sbb
sub
mov
or
sub
sub
test
xchg
inc
push
aas
xor
sbb
mov
ror
sub
sbb
and
sbb
out
enter
inc
mov
mov
adcl
xchg
jp
in
aam
sbbb
adc
cmp
sbb
mov
or
and
out
xor
or
sub
sub
loop
and
and
ds
es
inc
inc
hlt
inc
inc
jb
adcl
jo
or
sbb
int3
or
xchg
lret
sbb
les
test
cmp
push
inc
ss
mov
push
mov
loop
cmpsb
add
adc
push
insl
push
daa
add
inc
xor
in
push
aam
repz
and
ljmp
inc
sahf
push
cltd
jb
pop
fsts
fmul
and
jbe
movsb
xchg
inc
add
outsb
or
or
inc
jo
inc
sbbb
pusha
inc
xchg
gs
mov
andb
cmpl
or
subl
adc
jge
sbb
out
inc
mov
mov
mov
ficoms
sbb
sbb
xchg
fsts
adc
sbbb
or
insb
adc
or
adc
xchg
push
jne
mov
or
dec
fnstcw
mov
or
or
inc
cmp
adc
add
lahf
add
andl
fidivl
or
and
adc
pop
fwait
jecxz
xchg
in
enter
in
push
cltd
stos
and
and
sbb
out
daa
and
fs
jnp
or
scas
cltd
push
cmp
xchg
or
xchg
sub
je
sub
sbb
jnp
inc
cmpl
xor
pop
add
cmp
out
push
les
push
cmp
movsb
test
mov
xchg
scas
sti
fs
lea
nop
add
fwait
or
or
inc
pushf
lock
popf
sbbl
xor
pop
and
mov
mov
jge
popf
xchg
cmp
xchg
or
or
testl
cmp
mov
fisttpll
adc
add
dec
pusha
xor
sbb
or
adc
xlat
jl
sbb
fstp
dec
dec
mov
adc
in
shrl
mov
add
adc
and
push
pop
or
or
cwtl
push
pop
dec
test
sub
mov
hlt
push
popa
sub
or
add
scas
into
cmpsl
data16
aaa
cmp
push
add
fsubrl
pop
pop
das
daa
add
xchg
into
jecxz
mov
jb
or
test
mov
add
pop
add
out
arpl
sbb
fcomps
jns
push
nopl
mov
adc
push
xor
les
xor
mov
sub
shlb
and
inc
mov
adc
aad
icebp
jp
sbb
dec
or
adc
push
rcrb
cmc
mov
or
rol
sbb
inc
add
ret
xor
es
mov
mov
outsb
cmp
pop
inc
xor
addl
push
ds
add
in
fsts
mov
lret
pusha
add
loop
sub
enter
jp
and
or
add
adc
imul
inc
or
and
sahf
adc
cmc
mov
jbe
cltd
add
and
jle
jb
add
scas
pop
and
mov
xor
push
pusha
mov
xchg
mov
mov
sbb
je
orb
dec
and
cmp
js
inc
jp
or
cmc
xchg
and
push
mov
inc
enter
call
adc
orb
mov
cmp
aam
pop
pop
lret
mov
loopne
lret
je
cwtl
xchg
repz
nop
cltd
or
ljmp
int3
rcr
inc
scas
mov
add
adc
jo
int3
aas
aad
add
push
dec
hlt
push
dec
test
bound
orl
test
xchg
add
fiadds
mov
adc
sub
insb
dec
or
cmp
xor
xchg
enter
in
pop
lods
fistl
rcrl
cmp
mov
add
mov
xor
add
iret
pop
inc
dec
cwtl
cmp
add
push
sub
dec
mov
loope
xor
fistps
divps
xchg
or
arpl
pop
push
les
jle
add
scas
inc
push
push
fucomi
push
add
mov
mov
xor
add
inc
add
sub
test
jl
mov
mov
xorl
inc
aas
jno
cmp
leave
movb
add
jns
ret
pop
call
xchg
fdivrs
add
mov
xor
rorb
add
cmp
in
jb
imul
jae
add
add
inc
pop
hlt
mov
fidivs
adc
repnz
push
add
sub
ret
pop
mov
xor
neg
data16
sub
aad
pop
or
aaa
mov
add
testl
xchg
testb
sub
addl
jecxz
stos
inc
push
mov
and
ja
fdivp
inc
js
inc
jns
mov
jp
dec
adc
jnp
inc
movsb
repz
sub
lea
ds
dec
das
aaa
adcb
js
sub
icebp
aaa
add
sbb
xchg
mov
push
lods
inc
rolb
and
stc
movsb
inc
adc
int
push
add
pushf
jns
repnz
xchg
out
dec
sbb
mov
inc
lcall
aas
ret
jl
rolb
add
jb
mov
jbe
and
and
imul
test
add
call
fdivl
mov
mov
pop
add
popa
add
cwtl
mov
lahf
fcomps
jmp
sbb
aam
sub
jbe
fcmovb
dec
adc
push
and
pop
jl
mov
pop
xchg
outsl
and
pusha
cmp
mov
adcl
mov
in
inc
and
mov
and
popa
and
arpl
test
and
and
imul
or
imul
decb
or
jo
mov
insl
jae
je
or
ja
lret
jns
test
or
or
or
xchg
or
cltd
or
or
cmp
and
popa
jae
add
dec
xor
ret
or
push
shll
inc
add
add
push
stc
or
xor
sbb
enter
nop
jno
xchg
aaa
daa
and
mov
adc
jecxz
inc
cwtl
mov
xchg
push
adcb
addb
aad
add
sahf
cwtl
cmp
in
popa
sbb
add
cmpsl
add
rclb
cmp
xor
xchg
dec
add
add
mov
outsl
cwtl
lahf
add
fmull
out
sti
cmp
adc
inc
xorl
and
cmp
lods
inc
cwtl
push
inc
lcall
mov
movsb
movsl
add
cmpsl
add
test
adc
inc
push
push
add
lock
adc
xor
mov
and
sbb
mov
add
add
add
add
add
pop
add
pop
add
je
jno
cwtl
call
push
push
jmp
sbb
repz
mov
cwtl
scas
movsl
jno
pop
inc
pop
fisttpll
jb
repz
xchg
dec
cltd
and
dec
jge
orb
pop
or
pop
addr16
icebp
mov
inc
jbe
inc
jg
inc
mov
movb
dec
add
sti
push
mov
add
push
cmpsb
addr16
xor
inc
jns
fadds
add
jo
rolb
shl
hlt
add
adc
cli
push
call
les
nop
mov
sbb
dec
mov
push
pop
adc
cmp
not
jmp
movsb
adc
mov
mov
xchg
mov
cld
pop
bsf
test
out
sbb
repnz
lahf
out
push
lock
jle
add
cwtl
leave
inc
add
push
bound
sahf
cmp
or
push
fwait
cli
pusha
fstpl
pop
pop
or
and
add
lcall
test
pusha
or
enter
pop
pop
sti
into
sti
push
add
sbb
fnstcw
pop
pop
adc
inc
andb
sub
jp
call
cmc
aam
idivb
nop
aas
icebp
inc
rolb
or
mov
xchg
fldcw
int3
jmp
or
inc
ret
into
mov
xchg
xchg
addr16
frstor
loope
fstpt
stc
movsl
pop
pop
add
dec
jmp
add
pop
mov
jne
mov
jmp
stos
adc
add
or
orl
xor
add
btc
idivb
cwtl
ret
decl
fidivs
cmpsb
test
push
and
in
neg
xchg
sub
insb
or
inc
subb
lahf
not
mov
mov
sbb
push
ret
jp
push
pop
addb
iret
add
and
pop
out
add
and
inc
xor
pop
dec
xor
push
pop
or
lods
sub
inc
adcl
cmp
pop
ljmp
out
lret
push
and
add
ja
cmpsb
jne
push
inc
in
mov
add
jmp
lock
sbb
das
adc
arpl
add
inc
call
cli
into
xchg
pop
adcb
and
adc
pusha
pop
bound
add
cwtl
push
xor
leave
call
mov
idivl
adc
pop
out
mov
and
andl
jnp
movsb
jmp
push
pop
pop
adc
add
or
or
mov
inc
mov
and
add
lods
neg
btr
adc
cmp
insb
fcomps
test
mov
and
cmp
adc
ret
fmull
int3
and
lret
loop
mov
sti
adc
cltd
or
push
mov
aas
mov
adc
mov
pop
and
ljmp
push
into
data16
add
xchg
add
mov
cwtl
stos
notl
pop
pop
test
cwtl
mov
repz
stos
pop
bswap
mov
sub
pop
shll
and
xadd
add
or
inc
fwait
sub
mov
mov
add
outsb
cmpb
push
mov
imul
sub
mov
jge
shr
add
idivb
decb
xchg
or
std
mov
dec
notl
jne
push
outsl
adc
dec
adc
repnz
mov
pop
or
xor
and
arpl
pop
mov
adc
in
in
subb
or
and
es
test
cmpsl
movsb
call
leave
cmp
ret
inc
in
mov
push
dec
mov
shlb
enter
movsb
enter
inc
pop
inc
dec
ljmp
push
int3
or
push
add
push
or
cld
iret
sbb
sub
push
push
pusha
in
inc
pop
pop
xchg
add
test
xchg
sbb
and
loopne
dec
push
jecxz
dec
andb
jno
lods
inc
inc
pop
gs
jle
rolb
and
or
ret
sub
sub
out
dec
dec
hlt
shl
sbb
popf
sub
aaa
loope
mov
iret
imul
add
es
es
mov
jb
hlt
adc
ds
and
shlb
fildl
mov
ds
xor
loop
or
ljmp
pop
fcmovb
push
inc
or
lods
jnp
sub
push
mov
adc
xchg
into
pop
inc
add
lcall
mov
nop
ret
adcb
loope
cwtl
fsubrl
mov
rcrb
adc
inc
mov
nop
push
mov
mov
add
outsb
jmp
cmp
out
or
sub
pusha
sub
sbb
cmp
negl
push
mov
mov
inc
pop
andb
xor
fldenv
mov
test
xor
sbb
add
adc
and
xor
sub
repz
inc
leave
js
mov
inc
push
gs
cmp
sub
sub
pop
not
xchg
jne
sub
push
xchg
sub
dec
lds
test
xor
shll
mov
movsb
dec
push
cmp
or
xorl
fldcw
push
pushf
dec
fmuls
bts
sbb
mov
inc
dec
mov
clc
mov
int3
push
rolb
test
ret
sub
data16
nop
scas
cmp
add
call
mov
cmpsb
out
popa
cmpsl
gs
aam
out
add
inc
movsl
shr
sub
jbe
rcrl
sub
xor
add
sbb
mov
loope
cli
or
cmc
neg
adc
cmp
mov
xor
call
push
lret
nop
lret
test
or
mov
add
repz
setae
shll
outsb
lret
pop
dec
inc
pop
add
fwait
mov
mov
push
pop
jp
icebp
not
stc
pusha
adc
mov
cmp
aam
rol
faddl
pop
jecxz
dec
dec
xchg
push
ja
sub
mov
sub
rcll
sbb
inc
mov
lcall
add
jae
mov
xchg
xor
xchg
add
inc
mov
xchg
bound
mov
clc
loopne
subb
pop
and
xchg
cmp
mov
jbe
xchg
inc
imull
pop
push
jle
incb
ret
or
lcall
adc
adc
mov
dec
xor
movl
xor
nop
push
dec
ret
mov
sahf
addr16
cwtl
mov
jmp
loop
add
push
iret
cld
add
call
dec
xor
mov
in
cmp
or
and
pop
stos
data16
int
xchg
jcxz,pn
int
add
push
enter
push
test
dec
aad
sbb
fdivrs
aam
mov
repz
mov
push
mov
xchg
addl
rcrl
and
cli
cmpsl
pusha
push
jge
addl
inc
les
or
mov
mov
imul
lcall
mov
cmp
xor
pop
out
das
xor
pop
int
adc
mov
enter
push
test
push
stc
xchg
add
fcmovu
dec
mov
add
dec
adc
cmp
dec
leave
mov
jp
jns
lods
inc
cwtl
sub
pop
dec
cmp
add
popa
int3
add
cmp
add
pop
or
pop
lea
dec
repnz
add
mov
jmp
data16
aam
out
mov
mov
dec
ret
mul
push
adc
adc
inc
add
int3
add
ret
sti
push
adcb
test
shl
call
mov
inc
sub
cmpsb
addl
sbb
add
cmp
and
out
test
ss
imulb
hlt
rcl
xor
dec
and
ljmp
and
jns
fmulp
ret
aaa
add
int3
pop
dec
int
fadds
xchg
jns
or
ljmp
out
push
stos
dec
sbb
ret
negl
xorl
sbbl
sub
xor
dec
icebp
movsl
rcll
adc
xor
lds
fmuls
mov
sbb
jne
stc
mov
adc
es
cmpsb
arpl
jae
nop
add
sahf
sub
aam
das
daa
lods
push
sub
sub
jns
or
not
mov
imul
loopne
push
adc
enter
push
filds
stos
jne
cmp
jbe
sbb
push
pop
jb
addl
vmovhps
pushf
push
je
mov
cmp
dec
pop
sbb
push
pop
pop
cmp
into
jb
ret
push
popa
divb
add
mov
mov
lret
push
aad
dec
lods
ss
lret
mov
fildl
sbb
dec
or
bswap
push
adc
mov
int3
push
es
daa
add
dec
mov
adcl
rcrb
ljmp
fwait
sbb
adc
jle
xor
dec
cwtl
xchg
adc
dec
push
cmovae
xchg
inc
cmp
lahf
lcall
add
clc
lods
push
add
repz
push
sub
lret
pop
mov
and
out
xchg
pusha
mov
push
shlb
xchg
dec
ret
mov
js
push
gs
mov
shrb
neg
popf
test
jmp
xor
xlat
push
lret
ljmp
sbb
popf
insl
stos
pop
add
add
test
int3
cli
mov
cwtl
cmpsb
sub
dec
ret
fnstenv
int3
pop
es
ja
sbb
and
or
fisttps
mov
pop
inc
and
ljmp
and
mov
inc
rorb
mov
mov
add
sets
adc
bts
or
xchg
add
jecxz
subl
out
dec
pop
cmp
and
in
adc
mov
xchg
jmp
andl
mov
cmpsb
rolb
dec
cmc
xor
mov
pusha
push
sahf
add
arpl
adc
fcomi
sti
xchg
pusha
inc
and
xor
push
out
mov
or
adc
dec
inc
rclb
test
adc
test
fimuls
scas
inc
adc
inc
and
addl
out
mov
and
repz
add
in
test
stos
xor
sarb
bound
cmp
mov
imul
jl
scas
push
pop
jo
pop
mov
or
add
lock
pop
cmp
les
lea
mov
loope
out
ja
out
loope
repnz
lahf
out
pop
add
adcb
lods
inc
jge
inc
mov
mov
inc
mov
inc
xchg
les
push
jbe
jno
out
adc
stc
xchg
mov
sub
or
xorb
xlat
mov
outsl
sahf
cmp
lods
mov
fsubrl
scas
mov
movsl
jb
insl
not
push
xorb
add
push
xchg
sub
loope
fisttps
lock
cmc
and
dec
xchg
test
adc
jno
xchg
aam
mov
movsl
inc
inc
mov
inc
cld
stc
xchg
or
not
cmp
in
cld
rcr
dec
xchg
lods
and
inc
sahf
movsl
roll
sub
adc
sbb
mov
inc
push
dec
sbb
cmp
js
dec
bsf
ret
dec
mov
adc
mov
jmp
lock
lods
mov
jmp
and
adc
push
mov
or
jne
neg
dec
xchg
fildl
inc
sbb
imull
push
add
sti
iret
push
ret
or
add
dec
jae
push
pop
pop
add
push
mov
popa
inc
or
pusha
or
add
dec
xchg
andb
jne
inc
test
fistpll
or
cmpsb
cltd
and
mov
jge
jb
and
adc
in
and
pop
push
cmp
cs
inc
mov
sub
add
iret
mov
or
mov
roll
push
hlt
stos
adc
add
cltd
adc
pop
or
dec
leave
shll
sbb
cmp
sbb
xor
outsl
nop
shll
test
xor
push
and
nop
sub
and
test
xchg
hlt
and
mov
sub
sub
les
mov
jl
jno
insl
frstor
cmp
test
inc
inc
xor
push
in
arpl
fdivr
lcall
add
ret
mov
add
outsb
sarl
inc
sub
mov
jo
push
sub
pop
leave
pop
inc
inc
testl
xchg
push
adc
inc
js
fdivp
fildl
and
cwtl
push
and
xchg
lods
outsl
sub
add
nop
fsubl
adcb
add
fdivrl
test
std
pusha
rcr
push
mov
ljmp
and
sbb
repnz
lock
xchg
and
daa
sub
mov
pop
out
dec
or
mov
jns
orl
push
or
aas
stos
jo
pop
cmpsb
jg
sahf
add
push
mov
fidivrl
iret
or
out
das
dec
inc
push
add
xchg
push
aaa
imul
hlt
inc
test
fisttpl
xor
or
rolb
out
jo
icebp
les
dec
add
sub
jg
sub
inc
lret
shl
fstl
pop
pop
repnz
mov
mov
inc
nop
and
adc
test
sbb
pop
notl
push
mov
pop
xor
dec
int3
pushf
into
dec
pusha
mov
mov
mov
testl
outsl
xchg
push
jo
out
add
lods
inc
rorl
je
and
out
lret
mov
cmc
jae
jp
inc
mov
sub
dec
incb
pop
stos
adc
xchg
mov
dec
ds
push
push
sub
mov
push
pop
xor
and
lahf
mov
pusha
xchg
pop
inc
xor
cmpsb
shll
pop
push
dec
sub
pop
insb
add
inc
xor
and
int3
call
push
push
cmp
inc
or
xor
adc
xchg
dec
out
mov
pusha
add
fistps
sarl
add
int3
mov
pop
fwait
sbb
and
es
add
cmp
mov
shlb
das
sbb
mov
sub
xchg
sub
mov
arpl
sbb
adc
std
mov
imul
jno
stos
and
xor
add
add
add
lcall
cltd
jne
jge
dec
ret
mov
pop
sub
aaa
xchg
addr16
cmpsl
pop
out
dec
loop
movsl
pop
xchg
enter
push
pusha
or
sarl
or
rcll
stos
inc
xlat
xor
sub
adc
rcrl
bound
mov
xlat
mov
lock
dec
lcall
push
int3
enter
pop
jmp
push
jmp
push
add
pushf
or
jne
int
stc
pusha
sub
testl
movsl
test
mov
push
stos
add
push
rcrl
popf
mov
sub
lods
and
inc
xor
pop
stos
dec
sub
or
inc
jae
cmpsl
cmc
pusha
add
sub
bound
xchg
xchg
cmp
or
cmp
lcall
scas
xor
fdivr
or
cmp
icebp
push
int
mov
sub
sbb
test
pop
out
mov
lcall
pop
rorl
int
lds
and
jnp
sub
inc
xor
or
ficoms
scas
addl
sub
push
int3
incl
icebp
pop
push
xchg
lret
dec
rcll
enter
mov
inc
push
add
xchg
int3
xchg
dec
cmp
xor
xor
mov
cld
mov
pushf
add
lock
add
or
lahf
xor
inc
lds
jmp
repnz
push
adc
and
push
or
or
mov
xchg
adc
mov
push
mov
loop
cmpsb
fsubrl
add
add
out
pop
add
xor
addb
xor
pusha
xchg
xor
enter
not
mov
add
or
jo
repnz
or
adc
sahf
push
dec
mov
insb
push
and
pop
popa
mov
loop
push
rcll
sub
mov
mov
inc
test
jge
outsb
add
not
and
cltd
lcall
popf
pop
adc
nop
lds
inc
cmpsb
out
sbb
push
mov
sub
push
push
xor
mov
push
sbb
sub
aam
les
sub
jecxz
cs
fs
cld
add
xor
adc
out
sti
xchg
bound
fcmovnb
cmc
dec
test
cmpsl
mov
adc
or
lret
cmpsb
lea
dec
inc
mov
and
enter
addl
jg
ljmp
jns
aad
jne
add
lret
pminsw
mov
sbb
rcll
xchg
xor
imul
bound
int3
lea
fcompl
daa
or
push
stos
lcall
mov
dec
and
push
add
xchg
lea
mov
out
pop
mov
notb
imul
int
popf
aad
xor
addl
pop
pusha
loope
xchg
fsts
rolb
into
fdiv
sti
jnp
stos
dec
add
mov
dec
jnp
cwtl
addb
ljmp
shrb
fisubl
out
and
sub
push
pop
pop
cmp
xor
xor
stos
neg
jl
out
pop
add
repz
jb
add
and
cmpsb
mov
sarl
add
dec
loope
imul
push
xchg
add
fdivrp
mov
int
add
iret
xchg
aad
add
adc
sbbb
cmp
xchg
mov
notb
ja
iret
or
fucomip
lock
dec
loope
ror
stc
aas
mov
inc
xchg
and
add
fadds
adc
inc
insb
lret
dec
push
xchg
mov
or
adc
cmp
popa
mov
adc
mov
shlb
sub
sbb
lods
push
or
xorb
cld
xor
stc
scas
adc
stos
iret
insb
and
dec
addr16
xor
stos
mov
aad
roll
add
jmp
mov
cli
adc
hlt
push
es
xor
pop
loopne
jg
aad
les
shr
xor
out
inc
sub
lret
sahf
addr16
pop
sub
dec
fsubs
sub
mov
insl
push
lods
add
xor
fisttpl
sub
jp
cmp
sub
and
or
xchg
js
add
stos
out
out
or
es
push
mov
test
sbb
fs
sahf
add
leave
sub
lret
add
testb
inc
iret
cmp
into
cmpsb
sbb
and
add
cld
es
lds
add
cmp
sar
mov
fcompl
test
cmp
push
test
mov
xor
aam
cmp
sub
stos
leave
push
add
jbe
mov
and
out
outsl
xor
inc
xchg
and
stos
xorb
ja
cmp
adc
xchg
jle
push
pop
pop
fimuls
push
mov
pop
sbb
add
push
or
jge
mov
jmp
push
sub
arpl
rcll
nop
mov
adc
loopne
int3
lahf
xor
jae
push
pop
xor
xorb
out
iret
test
mov
lret
mov
pop
sbb
sub
cltd
mov
pop
jo
dec
sub
es
cmp
loop
jecxz
add
fidivrl
xorb
neg
cltd
push
xorb
fcomi
and
notb
or
sbb
mov
mov
into
dec
mov
add
fiaddl
repz
pop
jbe
fcompl
xor
andl
sbb
inc
jle
scas
rsqrtps
cmp
enter
add
dec
pop
ret
ret
pop
int3
cmc
add
cwtl
dec
in
sbb
ss
add
imul
out
iret
sete
xchg
xchg
shll
or
push
cmp
dec
clc
popf
les
inc
btr
mov
sub
repnz
jne
sti
adc
cld
scas
adc
imul
cmpb
mov
dec
fisubs
and
fbld
adc
push
pop
mov
inc
add
shll
fwait
add
ret
xchg
mov
sbb
test
cltd
dec
inc
in
lea
test
jno
add
rcrl
inc
xor
adc
xor
or
xor
or
dec
data16
mov
inc
mov
inc
sbb
cli
dec
loope
lds
push
dec
adc
mov
cwtl
hlt
aaa
les
shrl
jmp
xor
and
stc
ret
dec
hlt
or
mov
test
addr16
incl
popa
push
test
cmpsl
mov
pop
loop
push
lret
cs
sbb
ficoms
mov
jae
sbb
in
pop
xor
ss
dec
mov
xchg
sbb
je
jge
inc
jle
cltd
push
mov
enter
negl
pop
scas
jae
mov
lret
push
xor
jnp
or
inc
leave
and
mov
and
test
sahf
mov
jmp
dec
test
std
and
pop
leave
adc
xchg
bt
pop
daa
xchg
fsub
push
push
movsl
add
pusha
test
es
adc
mov
in
push
or
mov
dec
mov
xchg
bound
test
or
lret
or
dec
shl
sub
cmp
jge
push
inc
roll
sbb
inc
jmp
adc
cmp
jns
or
cmp
popa
dec
daa
movb
in
jecxz
punpcklwd
and
scas
or
add
mov
jg
mov
push
lds
ret
das
xor
jo
dec
dec
ret
cmp
jo
pop
and
add
cltd
push
ljmp
mov
aam
sub
in
mov
sub
mov
inc
mov
inc
push
and
xchg
jne
test
cmpsl
pop
or
cmp
test
shrb
out
sub
mov
push
mov
dec
rorb
mov
pusha
adc
cmp
and
add
gs
cmp
push
aaa
out
push
inc
xor
das
mov
add
cwtl
xor
sub
cltd
adc
ds
push
rolb
bsf
inc
jecxz
daa
inc
xchg
jle
imulb
dec
andb
add
push
femms
pop
push
or
mov
sbb
mov
push
je
out
push
sarl
adc
sbb
cmp
jg
jo
jle
aaa
pop
insl
xor
cmp
iret
cmpsl
add
leave
outsb
push
xor
pop
ds
dec
bound
push
imul
sbb
or
dec
ja
jl
mov
push
push
pop
cs
add
shll
sbb
sar
negl
push
push
pop
pop
push
cmp
push
jns
or
out
int
or
inc
loope
leave
and
loope
lods
cmp
dec
push
hlt
mov
adc
mov
and
insb
sub
jo
insb
inc
adc
pop
cmc
pop
inc
lods
dec
lods
icebp
sbb
xchg
jne
sub
adc
fcoms
cmp
or
xchg
lods
push
pop
or
cmp
mov
lock
inc
inc
movsb
sbb
add
cmc
les
push
cmp
das
xor
sub
adc
aam
and
and
outsl
dec
sub
inc
and
inc
loop
push
adc
imul
xchg
push
pusha
dec
cmp
xor
and
or
pop
shlb
outsb
pop
sub
jb
cmp
jo
sbb
sbb
icebp
push
and
dec
and
sbb
sbbb
popa
or
pop
push
js
jne
inc
mov
inc
fcoml
icebp
fisubrs
test
int3
ret
and
shlb
fs
pusha
rcll
or
add
cmp
adc
push
or
cwtl
loopne
frstor
adc
mov
pop
test
mov
xchg
aam
push
sbb
mov
fwait
xor
sub
jno
sbb
inc
pop
fists
pusha
jecxz
gs
xor
pop
jl
xchg
imul
mov
insl
add
mov
in
push
fisubrs
jns
cmp
pop
pushf
add
cwtl
jbe
xchg
and
mov
test
dec
push
arpl
int3
rclb
or
push
outsb
dec
fisubrs
scas
sub
jle
sub
scas
pop
sbb
imul
inc
pop
jle
or
pop
push
add
inc
movsb
outsb
add
push
loop
inc
dec
cmp
or
sbb
leave
push
scas
push
push
stos
bswap
pop
cmp
sbb
sbbb
xor
or
clc
cmp
mov
fs
lahf
je
sbb
adcb
fimuls
jl
add
or
imul
or
mov
mov
cmpsb
out
mov
lods
in
js
mov
adc
or
inc
push
js
mov
stos
mov
pushf
leave
push
cld
das
and
mov
mov
outsb
jns
jae
push
call
inc
test
rcll
les
and
mov
insb
ds
lahf
ss
xchg
and
outsb
pop
in
test
xchg
dec
daa
movsb
out
mov
int
sahf
cs
pusha
fsubrs
pop
out
push
mov
jne
insl
loopne
aaa
cmpsb
lods
jmp
leave
int
cld
xchg
and
push
and
or
pushf
lret
mov
pop
inc
test
fs
mov
ror
movsl
fsts
mov
adc
ja
or
dec
sbb
mov
mov
adc
test
fsub
jmp
cmp
push
or
add
outsl
ret
dec
adc
rcll
sub
int
stc
and
loopne
sbb
sbb
mov
ss
pop
mov
jne
pop
es
es
in
or
mov
sub
jns
imul
pop
jno
in
push
xlat
loope
add
mov
stos
sub
bound
int
je
cld
sbb
add
sbb
add
adc
imul
int
ret
fwait
adc
cwtl
icebp
jbe
and
movsb
xor
and
sbb
stos
push
fisubrl
jae
push
addl
adc
push
jb
push
xchg
cmp
adc
sub
cltd
stos
push
push
push
sub
sub
push
jnp
pop
push
aad
jns
js
out
inc
pop
xchg
or
sahf
ss
sbb
jno
sar
jl
and
mov
mov
xor
adc
cld
mov
push
fbld
fcomp
xchg
push
fidivrs
sub
pop
inc
cld
lea
nop
into
adc
dec
sub
lea
xchg
xor
push
xor
or
xchg
add
or
in
xor
inc
pop
inc
push
lea
in
push
int3
and
jno
shl
pop
mov
insb
dec
push
ss
dec
mov
push
ss
cmp
dec
sbb
jne
sahf
and
ret
cld
push
aas
dec
sbb
jnp
bound
push
jge
pop
addr16
cli
orl
or
mov
adc
mov
push
and
xchg
cmp
js
mov
mov
mov
in
pop
les
lock
int
addb
aad
repz
sbb
xchg
inc
inc
popf
jns
je
mov
mov
adc
rorl
xor
js
ljmp
cmp
js
stos
pop
lret
fnstsw
dec
das
test
stc
adc
mov
or
cwtl
mov
andl
repnz
and
push
les
orb
fmuls
or
xor
clc
lcall
scas
jb
jmp
mov
out
shlb
cmp
pop
inc
cmp
ds
cltd
js
mov
sbb
jle
and
dec
loop
or
jge
push
push
jo
mov
cmp
pop
pusha
push
in
mov
imul
inc
enter
fmul
pop
rcrb
sub
mov
xor
fwait
push
aam
repnz
enter
pop
adcb
sub
jns
pop
lcall
les
hlt
lods
arpl
sbb
cs
pop
in
rorb
inc
les
ret
add
mov
imull
inc
gs
test
pop
mov
mov
ret
pop
push
dec
mov
in
sbb
pop
sbb
ss
and
mov
push
dec
push
lahf
hlt
call
dec
add
jl
sbb
sbb
jnp
adc
std
dec
jae
push
loop
fcomps
test
mov
mov
inc
in
inc
xor
call
pop
mov
sub
mov
imul
rcll
and
inc
in
dec
pop
add
fidivrs
imul
shl
fnsave
pop
inc
or
pop
sub
aam
mov
or
shrl
roll
lock
inc
cmp
insb
or
sub
fcoms
xor
stos
cli
inc
inc
push
pop
call
repnz
pop
inc
inc
out
arpl
or
testb
inc
mov
or
daa
repz
pop
sbb
or
sahf
or
sbb
dec
scas
aaa
sub
dec
orb
push
mov
or
or
test
sbb
decb
xor
mov
cmc
push
sbb
lret
mov
jle
int3
lret
out
loopne
sahf
push
xchg
mov
fistpl
shrl
cli
inc
ljmp
add
xorl
test
xchg
and
inc
jno
mov
or
xchg
and
pop
pop
mov
xchg
mov
push
mov
fdivrs
inc
fidivrl
cmp
rclb
jg
fnstsw
addb
and
mov
add
sbb
xchg
and
push
mov
icebp
or
sarb
enter
repnz
sbb
jle
add
dec
adc
test
dec
jnp
pop
iret
jae
cmp
inc
jnp
testl
sub
and
gs
sarb
dec
aam
adc
fdivs
jl
jbe
hlt
pop
dec
add
pop
aad
daa
cld
push
jl
xchg
xchg
mov
orb
cmp
push
repnz
push
int
mov
in
popa
je
ja
lods
cmp
repnz
mov
push
add
cmp
ret
jns
or
pop
pop
fwait
pop
sub
fwait
jo
in
xlat
pop
sbb
je
inc
xchg
and
cmp
sbb
jmp
in
push
xchg
sbb
xor
sarb
dec
push
rcrl
adc
lods
in
inc
add
call
push
pop
or
xchg
xchg
fucomp
data16
fstpt
je
sub
ljmp
pop
das
jle
sub
jp
fists
fisubrs
pop
cmp
mov
ljmp
inc
xchg
push
pop
hlt
sbbl
mov
adc
ja
pop
clc
fistl
inc
xor
dec
sbb
xor
outsl
push
dec
add
flds
in
test
xchg
cltd
push
insb
in
in
and
xor
test
inc
bound
shlb
iret
and
pop
jo
pop
gs
and
xchg
sub
jne
xchg
dec
mov
ds
inc
jns
or
or
push
fcompl
or
pop
es
add
sahf
or
push
push
mov
sbb
mov
inc
push
push
cld
rclb
xchg
add
int3
dec
insb
pop
dec
push
inc
shrl
movsb
cmpsb
mov
mov
inc
addr16
ret
cli
loope
fmull
and
sahf
mov
sahf
jmp
dec
pop
or
sub
aam
jmp
leave
out
sbb
push
adc
adcl
pushf
roll
aam
fs
fisubrs
jo
dec
inc
insb
add
pop
mov
in
jp
and
push
push
xor
outsl
mov
xchg
inc
aas
fisttps
out
ds
repnz
pop
adc
mov
cmp
ds
xlat
cltd
ds
iret
loopne
pushf
or
xor
cmpsl
xchg
mov
enter
push
fstpt
je
inc
icebp
mov
jb
push
in
sbb
iret
pop
and
jns
adc
xor
inc
sahf
jne
mov
cmp
stc
subb
sub
pusha
fcmovnu
add
test
pop
in
cmp
jnp
aaa
mov
jo
pop
push
inc
sub
cmp
jnp
mov
add
adc
ret
ds
xchg
adc
pop
jmp
inc
test
stos
xchg
jnp
sub
cmpsl
or
lock
cmp
push
or
mov
sub
push
cmp
pusha
add
je
pop
iret
cmp
aad
inc
xchg
cld
insl
and
push
dec
or
sbb
ljmp
subb
or
cltd
into
cwtl
push
scas
dec
xchg
imul
mov
jo
xor
mov
repz
jg
shll
pop
arpl
imul
xchg
aad
adcl
dec
mov
in
xor
mov
push
push
or
cmp
sar
pop
dec
movsl
inc
pop
jecxz
pop
mov
in
ds
test
notb
push
scas
pop
dec
aam
imul
xchg
xchg
cmp
mov
add
cmpsl
jbe
movsb
add
pop
outsl
jns
cmp
pop
add
jne
dec
pushf
jp
cwtl
xor
and
mov
push
adc
jmp
pop
cli
cmp
out
push
push
cld
cwtl
jne
add
decb
jmp
jnp
dec
stos
mov
movb
lret
imul
mov
es
sub
or
cmp
and
jnp
mov
sbbl
fsubl
mov
adc
lods
push
loopne
js
hlt
xlat
jne
dec
dec
out
ljmp
sub
pop
xchg
arpl
scas
dec
and
aam
mov
subb
inc
sub
sarl
dec
lcall
sub
dec
cmc
fs
mov
fs
dec
lret
aam
pop
push
mov
xchg
lock
fcoml
adc
imul
cltd
dec
js
push
lock
fldenv
push
push
ss
pop
xor
pop
mov
nop
cmp
cmp
jno
mov
dec
push
mov
jmp
rcr
pop
clc
dec
repnz
xchg
jo
xor
out
fildll
sub
mov
gs
sti
cmp
mov
call
test
jp
inc
daa
das
jns
xchg
dec
xchg
sbb
or
mov
fidivs
xorl
in
stos
lock
or
xchg
data16
hlt
jo
pop
push
lds
add
aam
sbb
pop
jle
add
jnp
and
mov
scas
cmc
xchg
add
mov
in
pop
add
push
lock
sub
and
jns
icebp
inc
addr16
pop
xchg
pop
dec
mov
xor
pop
ret
xor
inc
jp
push
mov
and
cmp
adc
jo
sbb
sub
or
jg
and
pop
lret
push
lea
pop
mov
movsl
cmp
rcl
jo
xchg
jae
lret
or
popf
insb
add
adc
jmp
jl
fs
sbb
jae
xchg
cmpl
pop
mov
pop
or
shrl
mov
std
and
dec
test
pop
dec
dec
and
push
push
aas
stos
rcr
pop
insl
das
jg
add
dec
pop
and
dec
pusha
pusha
jns
scas
cmp
mov
inc
mov
and
imul
loopne
push
in
add
xchg
in
jge
scas
sub
popf
gs
inc
push
add
fwait
cmpsl
dec
jb
sbb
psubsb
insb
mov
inc
into
inc
out
or
ds
dec
aam
arpl
mov
ret
or
andl
add
dec
and
inc
push
dec
js
in
add
or
push
jnp
push
dec
je
je
or
or
jp
les
sub
lcall
add
fdivrs
pop
pop
sub
nop
add
imul
or
call
adc
test
rcrb
aam
sbb
inc
push
jns
cli
sbb
leave
push
and
mov
fs
jbe
sbb
fnstenv
sbb
les
adc
arpl
or
push
loope
lds
test
cmp
inc
arpl
into
fdivl
into
xchg
punpcklbw
mov
sbb
sub
add
xor
push
ja
fucomp
or
xchg
jmp
inc
decl
xchg
cmp
rcrb
sub
push
and
sub
jae
stc
insl
test
js
push
test
mov
arpl
adc
mov
cmpsl
sti
add
test
xchg
daa
xor
mov
dec
enter
loopne
pop
add
dec
push
pop
cmp
push
mov
clc
dec
dec
call
lea
adc
mov
sti
or
dec
push
push
adc
dec
out
jo
clc
insb
mov
es
shr
clc
jge
frstor
fsts
cmp
dec
push
xlat
add
dec
out
sbb
jb
cmp
pop
mov
pop
mov
loop
aad
les
cwtl
mov
call
sbb
mov
int
push
ds
in
pop
push
outsl
jle
hlt
sbb
mov
outsl
ret
mov
sbb
cmp
xchg
cmc
jno
in
pop
sub
lock
add
outsl
sub
fwait
cmpsb
push
std
aam
cwtl
movsl
push
adc
mov
xchg
cld
bswap
rcll
aaa
insb
adc
sar
fcoml
sbb
jl
clc
sub
or
adc
adc
xchg
jle
out
push
xchg
sbb
in
es
rorb
jae
push
leave
sbb
inc
sub
ja
xor
and
mov
lret
add
jmp
fisubrs
test
and
cmp
jg
sidtl
sub
pushf
push
je
in
lea
das
push
int
imul
dec
cli
nop
psllq
leave
cltd
stos
mov
in
jmp
cmp
sub
sub
ret
test
push
mov
arpl
push
dec
lcall
adc
push
pop
sbb
lds
ret
push
aaa
push
add
insb
into
cli
push
sti
push
cwtl
lods
jge
cmp
shll
insl
movsb
and
pop
or
nop
jp
xlat
scas
xchg
nop
mov
xor
ljmp
xchg
dec
jns
outsl
xor
pop
xor
repz
jg
cmp
lds
add
dec
imul
js
xchg
push
icebp
jp
mov
das
incb
int
pushf
add
insl
sub
fldcw
pusha
or
int3
inc
dec
push
push
fwait
xchg
sbb
add
cmp
cmp
sbb
pop
push
test
fs
loope
rcl
cmpb
push
jle
gs
jecxz
icebp
lret
jge
xchg
test
std
fstpt
xor
in
jecxz
push
nop
bound
dec
cs
or
dec
add
pop
jle
cmp
bound
push
sub
sub
add
add
adc
pop
or
andb
or
stos
mov
push
or
test
xlat
pop
sub
scas
hlt
dec
test
adc
pop
jl
in
popl
faddl
jl
push
add
mov
inc
inc
gs
ficoms
mov
aad
call
addr16
sbb
insl
pop
or
dec
adc
mov
or
pop
push
mov
int
fs
cs
or
mov
or
andl
inc
cmc
test
call
cwtl
push
push
mov
pop
mov
out
imul
cs
xor
sub
ja
fstps
dec
je
sub
out
mov
jmp
daa
icebp
decb
pop
fwait
pop
paddq
inc
jno
inc
add
lods
sbb
jb
clc
fmuls
lret
mov
mov
notl
push
lcall
add
or
sub
xchg
sti
ljmp
add
adc
xor
mov
adc
jno
push
dec
or
fwait
pop
rcll
icebp
call
or
fwait
inc
pop
or
mov
mov
mov
cmp
imul
or
push
inc
sbb
das
dec
imul
jle
subb
cmp
xor
jmp
fs
pop
call
push
add
aaa
dec
cmpb
popa
sbb
add
call
popf
das
imul
sbb
stos
cld
fs
push
xor
cmp
popf
xchg
loope
scas
dec
sbb
or
xchg
push
ja
or
push
push
call
push
or
sbb
bound
lret
dec
sub
or
imul
jle
cld
sub
push
call
int3
push
mov
pop
int3
mov
push
imul
jbe
pop
ss
hlt
push
or
inc
cmp
jge
jle
pop
mov
adc
fisttpl
mov
push
xchg
pop
fwait
sti
sbb
pop
in
pop
popf
stos
jmp
xchg
and
bound
fs
cmp
and
fldenv
mov
dec
mov
xchg
rcll
cmpsl
mov
orb
xor
sub
pop
push
and
andl
lahf
push
shrb
jno
and
push
adc
dec
pop
cmpl
push
cwtl
idivb
aaa
dec
inc
jno
imul
cld
shlb
add
push
jp
dec
dec
jae
inc
cli
loopne
jne
mov
add
out
inc
jo
fistps
inc
aad
outsl
xchg
in
pop
ds
pop
insb
std
xor
push
aad
mov
adc
mov
xchg
bound
aam
sub
pop
addl
dec
push
and
and
ficoml
lret
jb
pop
push
lods
add
ljmp
testl
jno
push
nop
out
or
pop
or
stc
dec
pop
jp
mov
cmp
mov
bound
mov
fildl
test
shrb
add
xor
lock
push
out
pusha
in
push
int3
out
inc
jg
cld
pop
dec
add
cmc
sbb
jns
inc
hlt
push
push
or
cmp
add
xchg
out
xor
out
sahf
rolb
xchg
adc
push
xchg
pop
stos
add
int3
jle
pop
push
pusha
ret
and
js
add
add
jo
fildll
xlat
pusha
and
or
mov
xchg
xor
mov
push
cmp
add
lcall
fs
jnp
pop
je
cmpsl
lods
out
add
ja
jbe
and
cwtl
das
sbb
mov
adc
fistpl
inc
das
ret
das
aam
pop
das
sbb
aad
push
sub
mov
pop
mov
xchg
inc
or
mov
lahf
pop
cld
dec
mov
adc
adc
and
fnstcw
movsl
push
push
scas
pop
dec
pusha
sub
dec
icebp
negl
fnstenv
adc
and
or
movsb
sub
gs
in
clc
xchg
or
decl
insb
les
call
bound
push
jno
sub
cmp
scas
imul
leave
pop
sub
mov
push
int
outsl
add
lea
jns
sahf
dec
test
inc
xlat
cmp
mov
add
or
popf
aam
or
ja
fiaddl
jp,pn
lods
arpl
pop
test
xchg
insb
orb
push
enter
cmp
jno
les
pop
push
je
clc
insb
push
icebp
push
sbbb
inc
je
jno
cmp
fwait
jb
dec
insb
xor
ja
int
js
loopne
pop
pop
out
pop
sbb
sub
inc
clc
fistps
or
sbb
inc
leave
repz
xchg
xchg
inc
sub
push
sbb
push
xchg
rcll
xchg
enter
pop
sbb
add
push
inc
jnp
fnstenv
enter
sbb
mov
dec
and
xor
or
mov
mov
jns
ficoms
add
dec
xor
push
jmp
jno
test
cmp
inc
imul
sbb
movsl
loope
sti
jmp
fwait
sahf
push
call
adc
and
mul
push
push
or
lcall
lock
push
pop
sbb
out
xor
inc
mov
les
add
jp
sub
or
xchg
loope
out
add
iret
adc
clc
ffree
cmpsl
xchg
push
fstl
jno
dec
push
inc
mov
stos
pushf
aam
sbb
lods
pop
icebp
inc
fsubl
adc
jg
divl
test
jp
repnz
add
aam
dec
and
adc
aas
jl
sub
je
jge
pop
xchg
fadd
xor
aas
mov
fadds
test
or
inc
dec
inc
push
sub
es
pop
in
jns
jbe
gs
leave
dec
add
cs
or
nop
ret
fs
inc
push
pusha
fs
xchg
lods
int3
jne
jns,pn
sbb
add
xor
or
movsl
inc
xchg
add
rcr
adc
enter
js
sbb
outsl
leave
lods
dec
aas
popa
or
mov
dec
jns
push
into
or
or
sbb
pop
adc
push
and
mov
aam
and
mov
sub
insl
decl
inc
sub
xchg
jb
inc
insl
push
push
mov
imul
sub
or
out
sbb
xor
sub
sbb
aad
js
xchg
mov
movsb
dec
inc
lcall
pop
jno
ss
pop
rcll
outsb
push
push
or
je
cmpsl
add
xchg
nop
cs
mov
js
icebp
jne
lret
sbb
inc
pop
test
jo
mov
cmp
rclb
xor
and
dec
mov
lret
pop
push
mov
and
xchg
dec
sbb
jb
mov
jnp
lahf
or
adc
jecxz
or
sub
mov
jl
add
sub
push
cs
es
mov
dec
pop
fidivs
test
or
lcall
add
fnstcw
lock
stos
nop
push
jne
sbb
mov
xor
movsl
enter
xchg
stos
ficoml
inc
lods
int
loopne
pop
inc
test
inc
and
les
or
add
pop
call
decb
cmc
add
fcoml
lock
push
hlt
shl
pop
add
mov
in
pop
roll
mov
pop
ds
pop
ret
add
in
jl
aas
pusha
sub
mov
scas
pushf
xchg
mov
sti
cld
xchg
mov
cmp
addl
lahf
sub
mov
pop
aam
mov
test
mov
outsw
sub
dec
adc
or
pop
lock
sbb
out
and
aas
sub
xor
ss
ss
sarl
bound
leave
pop
cld
add
fs
mov
push
stc
push
ret
ss
es
or
xlat
pop
sub
je
mov
mov
fs
test
insb
adc
and
cld
push
jecxz
mov
shrb
out
xchg
cmp
mul
xchg
cmp
push
xchg
xor
xor
int3
xchg
fs
pop
jns
ret
inc
test
aad
adc
adc
jo
imul
repnz
xchg
xor
push
insl
push
mov
inc
addb
movsl
or
lods
imul
scas
sahf
cmpsb
inc
mov
push
aaa
repz
push
jae
push
add
and
daa
hlt
test
dec
jge
lcall
je
and
aas
clc
pop
repz
stos
sbb
fs
pop
xchg
insb
push
nop
dec
mov
inc
insb
sbb
imul
sbb
lods
or
pop
mov
and
ret
xchg
jecxz
data16
jo
scas
dec
incb
sbb
insl
fsubl
jns
sbb
fs
jbe
cli
inc
cwtl
or
lahf
add
pop
mov
adc
mov
loop
fildl
and
lahf
add
xchg
sbbl
push
pop
cmpsb
jge
mov
add
cmp
mov
fdiv
mov
pop
sarb
and
sti
insl
jnp
lods
jno
push
pop
inc
pop
icebp
sub
adc
mov
push
sbb
push
push
test
jle
sarl
dec
or
insb
dec
or
pop
cld
test
jne
add
cld
fcomps
mov
fwait
enter
xchg
sar
stos
pop
xorb
inc
sahf
bound
test
inc
jnp
jne
xor
dec
aaa
outsl
je
adc
dec
or
fadd
inc
xor
jb
cmpsb
mov
icebp
and
pop
sub
xor
je
jbe
leave
dec
fiaddl
and
lds
push
ficoms
loope
sarl
mov
xor
pop
push
ja
cltd
or
push
adc
ja
jp
jnp
aas
jb
jns
sub
pop
push
xchg
or
xor
pop
xor
cmp
stos
xchg
sub
adc
and
fisubrs
test
in
inc
fcmovne
push
pop
test
push
xor
push
sti
mov
mov
pop
inc
out
pushf
pause
mull
sbb
add
xor
push
int
and
pop
in
or
push
fldenv
mov
fs
popf
test
mov
aad
push
add
scas
inc
xchg
cmp
fnstsw
adc
loop
and
icebp
sub
mov
and
or
or
adc
fwait
push
sub
add
fidivrl
mov
fsub
fisubrs
sub
mov
inc
pushf
popa
xor
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
dec
pop
aam
adc
push
in
push
adc
and
adc
lret
sbb
jl
push
cwtl
outsb
add
pop
dec
sbb
mov
insb
add
push
fcompl
push
test
imul
push
loop
gs
pusha
jne
mov
movsl
sti
inc
dec
mov
cmp
inc
fcomip
cld
mov
sub
scas
jge
push
xchg
fcom
mov
sbb
fisubrs
cmp
js
push
dec
or
loope
pop
or
xchg
adc
xor
fldl
std
or
push
adc
cmc
xchg
cmpl
and
pop
jns
mov
fiadds
push
sbb
bound
das
or
out
adc
mov
push
cmp
pop
inc
lret
cmp
addl
push
inc
pusha
pop
repnz
push
sbb
fwait
push
adc
push
dec
push
push
in
push
push
cmp
mov
cmp
jns
jb
jmp
cmp
push
popa
inc
testb
pop
call
test
jno
xor
dec
inc
rcrb
or
dec
cmp
loop
sbb
jnp
addr16
inc
and
or
lods
jl
and
arpl
dec
rolb
aas
jl
jp
cltd
in
loope
and
shlb
adc
popa
inc
jns
sub
add
xchg
pop
push
or
mov
aas
je
xor
cld
insl
cs
andb
pop
les
adc
sbb
jnp
inc
push
movsl
dec
arpl
xchg
movsb
push
inc
loop
stos
or
add
aam
insl
jl
clc
popf
dec
push
mov
add
adc
and
sbb
cmp
dec
inc
pop
cmp
xchg
add
jl
mov
pop
inc
jne
leave
pop
xchg
jnp
sbb
comiss
cmp
mov
cld
cmc
movsb
subb
push
test
js
pop
push
jmp
cli
insl
pop
pop
dec
inc
int3
outsl
push
jns
dec
mov
test
rolb
fsubl
test
call
fs
push
lcall
lods
mov
add
or
pop
mov
xlat
pop
cltd
jbe
addr16
jle
cltd
mov
push
inc
adc
jae
int3
and
fsubrs
adc
adc
push
fcmovbe
push
pop
cs
pop
pop
les
cwtl
jae
test
imul
push
lods
lret
insb
pop
dec
push
cmp
and
xor
testl
popa
mov
adc
sbb
mov
mov
pushf
dec
add
push
cwtl
aaa
pop
push
sbb
mov
mov
dec
adc
mov
mov
adc
xchg
cmp
sub
call
sahf
mov
lds
lods
fnsave
aad
inc
cltd
imul
ja
pushf
dec
inc
aam
xchg
outsb
cltd
cwtl
mov
mov
inc
mov
mov
jle
sub
in
dec
je
push
inc
das
xchg
scas
subps
in
aam
push
pop
int
inc
pop
lods
push
cmp
and
xchg
rcll
and
pop
and
imul
jg
mov
push
in
mov
pop
sub
mov
mov
aam
rorl
dec
xchg
or
dec
enter
add
outsb
jecxz
or
sub
leave
adc
inc
aas
test
fbld
sbb
jmp
xor
and
push
sub
add
sbb
and
add
mov
mov
ja
add
fsubr
sub
xor
mov
in
and
pop
mov
cmp
loop
or
dec
push
fsubrl
mov
sub
je
adc
popf
or
jns
adc
lret
into
mov
push
xchg
cmp
ss
mov
out
sbb
dec
fidivrl
pop
push
insb
mov
lock
sahf
in
mov
stc
movsl
jmp
add
mov
mov
enter
xor
dec
shrb
cmpsl
int
jb
lds
cmp
sti
fists
mov
and
dec
mov
jge
out
in
gs
push
sub
sahf
or
cmovne
pop
mov
call
sti
adc
lods
pop
dec
fmuls
or
test
rclb
cmp
inc
cmp
adc
lcall
dec
faddl
xchg
stos
push
pop
out
adc
or
aas
je
pop
adc
sbb
mov
jmp
loope
sahf
dec
js
mov
mov
push
push
into
sbb
add
pop
push
or
xchg
and
jecxz
or
sbb
push
lahf
pushf
aad
xchg
xlat
je
js
xacquire
imul
dec
pop
and
sub
adc
push
imul
xchg
xor
adc
xchg
mov
jns
fcoml
aaa
xchg
push
ss
xchg
sub
fs
mov
mov
mov
and
jno
push
inc
jno
call
popa
testl
in
push
scas
out
clc
in
xchg
fldcw
mov
xchg
mov
xor
sub
in
fldl
insb
sub
mov
jb
mov
adc
cmp
dec
daa
data16
push
push
mov
sbb
sahf
mov
adc
fisttpl
sub
lcall
xchg
jl
ret
xor
lahf
divps
mov
insl
or
js
test
add
pop
adc
and
orb
lahf
fmul
add
sbbb
les
ss
cmp
sbb
xor
cltd
gs
xor
pushw
test
pop
imulb
sbb
cmp
ss
cmp
or
pop
ds
cmpsl
cli
cs
mov
jnp
cmp
mov
cmp
icebp
sbb
imul
or
decb
ret
dec
push
inc
shrl
adc
sbb
es
arpl
or
addr16
js
adc
lds
popa
das
push
ljmp
push
push
sub
or
les
fstl
jle
dec
imul
and
out
xchg
inc
inc
mov
mov
push
bound
jb
adc
jo
test
cs
or
jns
xor
insl
lock
jns
int
pushf
lods
jge
push
lahf
push
lds
stc
sbb
sahf
pushf
lret
fld
inc
imul
pop
push
mov
jg
jne
jg
mov
push
mov
push
jp
jo
nop
dec
push
pop
dec
pop
sahf
leave
mov
inc
fcoms
or
mov
and
xor
add
pop
ret
xorb
lods
call
mov
add
cld
or
xor
mov
movl
pop
add
or
ds
sub
and
cvttps2pi
dec
push
fiaddl
dec
mov
rcll
gs
jo
inc
sti
or
hlt
sti
shr
sbb
imul
fwait
push
fs
ret
imul
test
mov
adc
test
shr
pop
mov
ja
fmull
add
insb
sub
pop
inc
loop
call
int3
in
xor
inc
push
cs
jne
mov
les
sub
andb
insb
jp
sub
mov
push
jg
jge
inc
iret
mov
mov
cld
pop
or
scas
mov
out
mov
push
xchg
add
lret
out
sahf
jp
xor
fisubrs
cwtl
dec
jg
insl
xorb
fistpll
sbb
add
cmp
icebp
lret
es
inc
xor
xchg
dec
dec
jb
lock
dec
jmp
repz
stos
sbb
imul
inc
sub
arpl
ret
mov
ret
inc
mov
arpl
xlat
inc
gs
jmp
jnp
in
dec
inc
sub
cwtl
fbld
push
ljmp
imul
xlat
je
lock
push
pop
push
inc
dec
ljmp
ja
jmp
pop
repz
sbb
rcll
dec
dec
popf
push
pop
mov
outsl
dec
int
xchg
cmp
xchg
push
mov
push
das
inc
jne
cmp
aam
inc
movsl
fimuls
xchg
jns
adc
or
movsb
loop
or
push
jl
xor
mov
into
mov
push
push
cwtl
cmp
adc
dec
pusha
dec
mov
dec
inc
clc
push
roll
imul
int3
les
std
jno
dec
sbbb
dec
sbb
nop
cltd
or
shl
ja
cld
mov
push
jae
popf
lds
inc
push
or
or
cmc
sub
pop
cmp
insl
cld
nop
hlt
inc
fisubrs
sbb
pop
rorb
ret
in
pusha
les
adc
in
adc
xchg
jb
cld
leave
push
inc
repz
adc
jl
inc
je
inc
jge
dec
jne,pn
xchg
and
push
push
pop
sbb
leave
ss
outsl
loopne
lahf
and
dec
lods
mov
pop
push
and
mov
fstps
jle
imul
sti
xchg
test
cmc
das
stos
push
testl
xchg
mov
jae
popf
mov
and
sbb
or
out
popa
addb
into
add
mov
mov
frstor
pop
mov
les
imul
rclb
xchg
push
into
inc
xchg
out
cltd
jae
popf
fwait
cwtl
scas
call
xchg
dec
mov
ror
mov
mov
rcll
fsubrl
call
rcl
in
sarb
imul
mov
out
stc
lods
adc
adc
push
sub
push
out
inc
mov
push
cmp
push
je
sbb
xchg
jl
dec
sbb
loopne
jp
jecxz
rolb
cmp
sbb
xor
xor
or
js
cmc
add
fs
jns
daa
nop
sub
mov
add
push
sub
adc
and
jne
sbb
or
cmpsl
sbb
rorl
adc
hlt
jle
call
add
jl
mov
js
sbb
insl
xor
enter
enter
mov
push
mov
push
cmpsb
xlat
call
lods
in
ss
xchg
sub
aam
jno
int3
push
adc
sub
jmp
arpl
test
push
jl
cmp
test
xor
imul
dec
and
mov
mov
add
pop
push
mov
sub
sbb
add
test
cltd
insb
add
mov
clc
in
add
insb
out
loop
fcoml
mov
es
xor
daa
push
sub
movsb
dec
xor
test
and
lahf
rcl
int
ret
cltd
loope
dec
xor
mov
movsb
in
add
or
cld
or
or
add
clc
pop
add
mov
nop
insb
rcl
cli
add
cmp
mov
xor
rcrl
mov
pop
aam
jmp
rcll
sbb
and
hlt
add
nop
sbb
dec
out
push
pop
sub
mov
pop
test
cmp
sarl
sbb
sbb
jle
insl
rcrl
aam
jmp
add
das
adc
mov
pop
xor
aad
out
push
adc
or
sarl
xor
add
add
sbb
roll
pusha
loope
add
add
cwtl
fldlg2
rcrb
pop
cmp
gs
add
push
pushf
jnp
cli
push
cwtl
inc
fs
xor
les
sub
mov
gs
jmp
pushf
cs
aad
int
xor
test
hlt
imul
push
push
cltd
fs
lock
stc
xor
add
cmp
mov
sarl
jae
pop
or
loop
push
xor
and
mulps
cmp
or
and
gs
jb
pop
xor
jns
mov
nop
sub
pushf
push
sbbb
filds
pop
pop
push
inc
pop
push
cmp
mov
les
mov
cmp
js
jp
mov
movsl
add
repz
push
mov
push
and
hlt
movsb
push
jns
fstps
negb
sbb
mov
adc
stos
mov
mov
aad
stos
mov
lock
or
sti
lods
lods
xchg
in
xchg
ss
push
fs
fdivrs
sub
push
pop
jns
sub
es
inc
sbb
pmullw
pop
and
pop
dec
cmpsl
sub
rcrb
popa
scas
sbb
pop
pusha
loope
stos
dec
dec
and
or
in
shlb
inc
sbb
test
sahf
push
and
push
lea
fcompl
push
mov
pushf
dec
fstps
sbb
ja
lea
sbb
and
add
rcll
pusha
jns
into
push
push
mov
xor
push
push
lret
adc
addb
dec
cmp
xlat
rorb
aaa
out
or
mov
xchg
cs
mov
adcb
int3
add
cld
lret
or
sub
test
dec
sub
test
sbb
icebp
aam
push
in
or
pop
inc
lock
pop
int3
add
add
std
or
jno
sbb
call
dec
icebp
inc
cmp
mov
jnp
lea
test
pop
popf
adc
jns
mov
jmp
mov
dec
push
push
pop
and
or
rep
push
push
pop
mov
add
aaa
jg
push
mov
push
push
lret
cld
and
mov
mov
insb
loope
push
leave
lret
jno
inc
add
mov
in
add
push
push
call
and
in
add
mov
sbb
xor
cltd
rcrb
cmp
mov
sub
sbb
clc
jmp
imul
xor
xchg
pop
jge
negl
adc
imul
in
dec
xor
dec
mov
xor
aas
add
add
std
add
jge
dec
dec
fimuls
lret
data16
adc
inc
leave
es
xchg
pop
aas
xor
lods
cmpsb
clc
shlb
sti
add
insl
push
lock
pop
rolb
or
imul
xchg
adc
andb
inc
push
push
fnstsw
clc
jg
and
mov
frstor
stos
cmp
call
roll
aaa
mov
arpl
aam
out
sub
dec
push
test
js
ljmp
pop
xchg
xchg
pop
cli
pop
aam
jp
push
sub
scas
jg
rclb
xor
pop
mov
ret
popf
pop
aad
lea
mov
in
xchg
add
scas
movsl
sub
add
test
into
call
push
stos
outsl
sub
cmp
xchg
and
stos
lds
stos
lret
add
or
or
ja
lahf
fucom
test
imul
sti
movsb
lods
stc
dec
ss
sahf
add
jg
popa
mov
push
stc
add
add
frstor
cmp
push
test
pop
push
aas
divb
aas
xchg
xor
insb
iret
xchg
inc
insl
mov
inc
dec
clc
dec
loopne
xor
popa
xor
or
jl
insl
sub
repz
xor
xchg
dec
subb
mov
cmp
cmp
enter
enter
lds
mov
mov
imul
lahf
sub
scas
lea
sub
mov
jge
dec
nop
dec
cmpsb
dec
push
mov
sbb
jb
sbb
daa
cs
les
cltd
xchg
xor
pop
xchg
insb
adc
inc
dec
push
cwtl
add
imulb
loope
loopne
inc
iret
add
pusha
or
lods
and
test
xchg
int
ja
push
add
pop
add
push
imul
xor
pop
or
pop
cs
movsb
lods
leave
or
repnz
in
gs
std
cmpsb
scas
mov
mov
pop
adc
arpl
das
mov
sbb
arpl
dec
jl
cli
jp
sub
cmpsb
in
or
pop
mov
xchg
xorb
pop
jns
jge
mov
xchg
xchg
rolb
lds
das
xchg
cld
pop
out
inc
mov
rclb
jl
mov
je
and
add
adc
push
pop
xlat
out
fists
adc
mov
jo
cmpsb
push
negb
sub
cmp
fimull
jecxz
ret
mov
push
es
cmpsb
data16
insl
out
xor
xor
inc
hlt
push
out
int3
pop
xchg
xchg
nop
mov
inc
pop
js
push
mov
das
jp
test
add
jbe
pop
sub
rcl
xchg
sarb
add
push
frstor
test
xchg
int3
ds
je
dec
cmp
xor
dec
push
ss
push
outsl
stc
mov
cmp
popa
ficoms
dec
je
or
lods
jge
cmpb
or
aam
jns
out
cmpsl
inc
ljmp
mov
cmpsl
jo
cltd
jae
push
fstps
shlb
stos
addb
lret
push
cwtl
cmp
mov
xchg
and
xor
fnstenv
adc
mov
ja
movsb
add
mov
push
or
aas
adc
gs
push
sti
jo
and
out
clc
or
cltd
dec
test
inc
push
icebp
push
jns
mov
je
imul
adc
popa
add
push
daa
sub
es
insb
aad
insb
loop
int3
push
imul
push
hlt
xor
mov
xor
shll
out
in
testl
jo
pop
pop
cltd
mov
push
cli
rclb
and
add
push
orl
sarb
xchg
add
adc
loop,pn
mov
dec
sti
adc
loop
out
push
rcrb
fs
push
sub
les
dec
xchg
inc
in
data16
jp
jg
rclb
insl
jmp
test
jns
push
inc
cmp
incl
clc
adc
push
push
cld
test
ds
push
xor
push
mov
dec
push
call
cltd
sahf
cmpsl
and
adc
sahf
push
jle
adc
or
push
push
cmpsb
jecxz
out
mov
repz
xchg
out
adc
add
lea
in
popf
pop
xlat
mov
push
jns
leave
dec
ja
fisttps
or
lods
mov
xchg
and
mov
jnp
addr16
adc
je
jae
js
push
sub
repnz
push
push
into
and
cmpl
dec
lret
xor
mov
psubusb
notl
int3
xor
iret
lock
out
scas
xor
jno
sti
mov
inc
sahf
cmpsb
push
scas
jnp
mov
push
adc
test
pusha
call
mov
mov
ds
out
pop
scas
nop
sbb
cmp
orl
fs
hlt
add
test
or
out
cld
cmpsb
mov
leave
dec
and
lods
or
js
lods
rol
add
xchg
clc
cmpsl
ret
pop
jle
xor
adc
sbb
push
test
enter
ja
jno
inc
push
pop
mov
sbbb
pop
or
popa
jg
nop
outsl
in
or
and
xor
sub
in
push
mov
jbe
and
mov
lea
push
sbb
push
push
pop
add
data16
push
out
aam
adc
lock
push
cmp
jae
push
scas
mov
dec
inc
mov
pop
and
sbb
push
dec
dec
cld
pusha
orps
cmp
shll
xchg
sbb
dec
jge
pop
and
fiadds
adc
push
pop
pop
push
inc
rcll
and
cmpsb
sub
jno
les
adcl
mov
dec
shlb
lock
popa
loopne
push
ss
dec
push
push
inc
dec
movsl
js
vmwrite
push
lock
ds
xchg
pop
and
rcrl
mov
lret
mov
sbb
fidivl
pop
mov
xorb
pop
dec
lods
push
notb
sbb
out
inc
lods
ja
xchg
sbb
adc
fldenv
decl
mov
shlb
js
sbb
cltd
pushf
cmp
in
pusha
sbb
add
add
dec
adc
xchg
stos
xchg
sub
inc
pusha
xchg
inc
mov
push
mov
push
in
jge
das
xor
fimull
aaa
or
inc
sub
frstor
mov
inc
jge
in
mov
arpl
adc
cmpsl
test
int3
push
mov
sbb
orl
sarb
jo
sbb
sbb
xlat
je
and
pop
addr16
ss
mov
pop
push
add
dec
arpl
je
sbb
fcomps
test
mov
push
sub
inc
jp
jmp
aas
orl
jmp
ds
mov
cs
ss
dec
pop
xor
sbb
fsubrl
std
adc
push
sub
cmp
xchg
inc
and
adc
gs
inc
and
lds
cmp
mov
lret
pop
add
in
aam
lret
mov
stos
not
jns
mov
js
jl
mov
pop
sbb
mov
nop
adc
lds
push
call
insl
enter
pop
cmpl
cli
loop
cs
jnp
and
addr16
mov
shll
data16
inc
in
pop
jmp
dec
pop
sbb
adc
dec
lret
mov
sub
dec
sarb
sub
scas
mov
dec
add
xchg
push
jne
adc
lods
lods
jg
push
or
mov
in
jg
pop
xchg
and
cmp
dec
dec
mov
insb
mov
push
aam
and
xchg
test
xorb
push
scas
and
js
add
dec
jp
and
jecxz
push
mov
push
int3
add
xor
add
mov
fmull
jns
ljmp
xchg
jae
jg
and
jl
in
mov
ret
jns
sbb
add
xchg
xlat
xor
add
jno
cmp
pop
frstor
pop
jns
lret
orb
ljmp
mov
mov
sbb
xchg
inc
mov
pop
mov
cmpsb
adc
lock
lret
xor
jae
mov
jecxz
cmp
cmp
push
pop
insl
push
enter
dec
int3
or
or
mov
jle
ret
jmp
pop
test
imul
sahf
out
sub
pop
arpl
repz
rcrl
and
xlat
adc
cld
jmp
cmp
rclb
cwtl
in
inc
orb
mov
stos
and
push
or
rolb
pop
ljmp
adc
and
repz
and
add
pop
xchg
cmpsb
arpl
mov
push
jno
sub
jge
sbb
push
add
cld
push
repnz
fsub
xchg
jl
push
adc
test
aam
mov
mov
push
scas
jnp
dec
loope
dec
movsb
sub
outsb
sahf
pop
jmp
jns
mov
inc
lret
cs
pop
fisubl
or
lock
mov
cmpsb
pop
xor
adc
mov
bound
lret
jns
push
dec
push
add
arpl
mov
jmp
mov
add
sub
add
mov
dec
xchg
int
adc
mov
dec
shlb
test
out
lds
js
mov
ret
subb
and
adc
shll
addr16
jmp
mov
sbbl
mov
pushf
dec
sub
or
fdivrp
in
stc
and
insb
stos
leavew
xchg
inc
ja
fbstp
jae
add
adc
jp
es
out
push
call
sarl
int
push
adc
jl
pop
add
sub
test
pusha
adcb
cmp
mov
pop
ljmp
sbb
cmp
sbb
call
sbb
test
or
sbb
vunpcklps
daa
dec
sbb
xor
sub
mov
leave
divb
stc
nop
add
or
dec
and
push
pop
cmp
push
push
xlat
inc
pop
push
cmp
adc
xor
adc
addr16
mov
les
mov
mov
add
dec
pusha
cltd
inc
jne
std
sbb
mov
push
sbb
icebp
xor
int3
or
es
loop
push
data16
jge
jnp
in
pop
subl
xor
les
mov
sub
pop
or
xchg
sbb
jg
insb
mov
adc
cmp
adc
adc
imul
sahf
divb
push
jecxz
inc
fists
test
or
arpl
rcll
mov
jne
adc
or
cltd
stc
dec
cld
pop
fdivrl
test
es
pop
frstor
or
ljmp
mov
rorb
loop
or
pusha
mov
cmc
mov
inc
mov
sbb
inc
enter
inc
sbb
add
add
int3
push
and
into
sub
mov
jecxz
jno
jno
fcompl
pop
cli
sti
negb
pop
outsl
js
xchg
xor
sbb
cmpsl
pop
or
ret
mov
xchg
adc
lods
xchg
and
stos
inc
and
js
cs
push
inc
jno
sub
mov
sbb
mov
push
push
loope
or
xchg
rorl
mov
addb
cmp
dec
fcoms
pusha
js
ljmp
mov
test
mov
insb
add
or
pop
pop
xor
arpl
leave
sub
sub
pop
pop
sbb
test
mov
inc
divl
jbe
or
mov
mov
jnp
aad
out
xor
mov
scas
loopne
and
lea
xor
mov
adc
lods
sbb
bound
xchg
jbe
pop
jae
dec
inc
scas
inc
jbe
and
js
sbb
cmp
pushf
je
inc
icebp
sahf
mov
xchg
inc
sub
mov
addb
icebp
cli
lods
sbb
mov
scas
pop
pop
lret
jle
push
pusha
cmp
mov
add
lock
jmp
orl
pop
flds
lods
ret
aas
fistps
jb
inc
push
sub
inc
push
adc
pop
stos
movzbl
xchg
push
test
pop
mov
js
push
sbb
scas
mov
imul
sub
insl
push
fisubs
jb
enter
loopne
push
fnstenv
cmpsl
sbb
sub
jne
mov
imul
jge
stos
jns
sbb
pop
fdivrs
mov
lea
lods
dec
pop
cmp
add
or
adc
loopne
mov
adc
dec
in
loop
push
jecxz
mov
in
adc
and
cld
out
cmp
inc
inc
sbb
js
movsl
mov
pop
push
cwtl
in
sub
or
cmp
pop
fmuls
mov
inc
pop
pop
inc
jmp
test
inc
xlat
or
xchg
fstps
test
jno
mov
ljmp
pop
xchg
cmp
shl
xchg
int
jle
into
rolb
mov
shll
je
sbb
clc
js
xchg
jge
inc
mov
fs
movsb
mov
xchg
jbe
push
inc
jo
mov
in
insl
test
test
cltd
fldcw
loopne
out
dec
xchg
jp
inc
push
add
shll
push
sub
or
jmp
jae
insb
mov
push
rcl
sbb
inc
mov
cli
cmp
js
or
push
daa
cmp
out
cmp
inc
sbb
push
sbb
sub
add
iret
xor
pop
sbb
ss
addr16
xchg
clc
mov
mov
das
pop
mov
cmp
fidivrl
and
inc
fs
jge
fs
jo
pushf
push
dec
lret
shl
frstor
dec
movsb
xlat
subl
jnp
dec
add
sbb
cmp
test
movsl
clc
jp
dec
das
sub
or
addl
push
add
cltd
and
inc
aas
mov
shll
pop
movsb
fisttps
insl
aam
push
out
mov
daa
or
mov
cmpsb
pusha
nop
mov
jmp
iret
xchg
vmovups
lahf
test
in
cmp
daa
fsubl
or
sub
push
add
and
orb
addr16
mov
sub
cmpsb
push
pop
add
test
adc
pop
xchg
hlt
xlat
scas
incb
pop
adcl
adc
pop
stc
les
std
in
jl
or
push
jge
les
jmp
sbb
pop
js
pop
rolb
and
insb
pop
daa
dec
les
fmuls
push
push
lods
sbb
test
xchg
fisttpl
out
sbb
bound
into
mov
in
and
fs
lret
or
ja
ja
lds
pop
sub
mov
mov
ja
push
in
in
mov
stos
sbb
pop
xchg
jno
movsb
lcall
push
mov
les
inc
call
jns
lahf
dec
mov
adc
sub
out
popa
inc
outsb
xor
call
push
hlt
pop
es
lock
mov
test
iret
popf
adc
sub
pusha
and
insl
mov
fldz
hlt
repnz
jns
aad
lods
xor
subl
imul
jne
in
jne
jle
jb
dec
movnti
jg
xor
or
outsb
sbb
jo
dec
push
pop
jmp
add
add
and
ret
iret
xor
push
lods
and
mov
aad
push
inc
loopne
sub
add
int
sbb
sub
sbb
aad
cmp
jno
test
and
out
rorb
pushf
inc
fiadds
loope
lods
cmp
add
add
in
xlat
mov
loopne
add
sti
scas
cmp
xchg
mov
xlat
mov
ror
lds
in
sarl
bound
je
std
cld
aaa
pop
jecxz
ja
push
dec
cltd
pop
icebp
es
jp
sbb
pushf
adc
pop
mov
cmp
xchg
push
test
cld
leave
inc
inc
fiaddl
push
or
lcall
clc
nop
xchg
lock
test
clc
pop
cwtl
push
push
jmp
test
sarb
leave
xor
jb
dec
loop
lret
xchg
push
cld
outsl
testl
inc
out
xchg
inc
jae
lods
stc
repz
mov
xor
inc
sbb
jno
dec
mov
lock
or
cmp
rol
fldl
mov
mov
adc
sarl
jno
pop
xor
cltd
xor
cmpsl
and
mov
jmp
bound
arpl
test
ss
daa
in
xchg
dec
xchg
add
repz
or
leave
call
push
mov
cmpsb
and
push
dec
and
out
clc
call
andb
and
push
and
or
mov
das
aam
cmp
pop
aam
dec
add
filds
inc
icebp
pusha
push
fwait
adc
pop
mov
inc
fidivrl
subb
sbb
sbb
aam
inc
or
or
adc
fadds
fidivrs
jmp
cmpsl
push
pop
cld
fisubrl
push
and
sbb
xchg
icebp
lret
adc
stc
movsb
add
or
sub
and
dec
mov
jle
addl
pop
pop
push
mov
jmp
pop
xchg
xor
xchg
adcl
push
cmp
fidivl
inc
push
sub
mov
and
push
push
pusha
jmp
sub
mov
cmpsb
sub
jne
push
and
pop
or
mov
push
inc
xchg
push
popa
xchg
jl
into
dec
adc
stos
leave
inc
mov
pop
push
ficompl
inc
xchg
outsl
pop
dec
call
in
inc
dec
bound
mov
lret
jle
xchg
and
adc
adcl
jb
pop
outsb
scas
jmp
sbb
and
fwait
sbb
arpl
dec
stc
xor
jae
cld
mov
pop
pushf
dec
sti
inc
mov
sub
xchg
fldenv
mov
ja
jnp
sub
nop
ss
and
add
dec
push
rclb
or
pop
mov
lret
jl
scas
outsl
sub
clc
fwait
cwtl
test
pop
hlt
mov
xchg
dec
into
adc
bnd
add
movsb
pop
dec
push
xor
loope
fmul
mov
adc
jge
sti
inc
inc
and
sbb
test
leave
xor
in
aas
sub
jns
daa
push
sahf
out
fisubrl
pop
xorl
das
dec
sub
jne
mov
in
loope
sub
int
push
dec
inc
jbe
and
mov
adc
push
stc
std
add
adc
and
xchg
sarb
and
push
pop
inc
push
dec
sbb
sbb
inc
imul
jne
lret
sub
ss
inc
mov
mov
push
addr16
insb
inc
test
pushf
mov
jno
and
leave
rcll
insl
pop
push
jne
iret
inc
jae
pop
cwtl
aas
inc
scas
outsl
enter
push
sbb
in
sub
push
scas
pop
iret
jp
call
inc
mov
pop
pop
std
iret
aad
loope
jnp
fs
popa
xor
int3
loopne
pop
adc
xor
adc
sbb
int
sbb
sarb
out
pop
dec
inc
ss
std
enter
fsubs
enter
jb
lock
mov
jnp
cli
cmp
adc
scas
inc
jnp
es
stc
in
pop
and
push
mov
je
test
cmp
cmc
push
repnz
outsl
fiaddl
inc
dec
int3
dec
dec
xor
and
sarb
insb
and
and
mov
add
std
inc
ja
aas
sub
mov
dec
fbstp
test
mov
add
and
je
in
and
jns
mov
dec
repnz
dec
in
inc
inc
mov
dec
loop
xlat
fcmove
mov
inc
mov
insb
jmp
pop
mov
bound
call
jb
jne
push
in
les
xorl
in
mov
pop
les
imul
inc
shl
inc
mov
xor
lea
jne
bound
call
outsl
hlt
sbb
pop
dec
pushf
rclb
inc
pushf
add
cwtl
nop
call
sarb
gs
sbb
inc
cwtl
inc
xchg
push
les
lods
add
addl
sub
nop
or
cs
test
loopne
mov
loop
imul
rorb
jae
jne
push
fdivrs
jmp
jge
mov
ret
mov
add
divb
test
outsb
add
jg
pop
cli
and
push
xor
hlt
in
mov
cld
add
and
inc
xor
fsubrl
jge
sub
call
dec
sub
sub
mov
dec
add
mov
dec
imul
ret
cmp
cld
xlat
pop
sahf
sub
gs
jno
in
adc
inc
adc
in
jae
xchg
aaa
push
mov
rcll
push
push
call
and
jl
push
dec
add
gs
jle
inc
cmp
orb
ds
xor
mov
sub
lea
mov
cmp
gs
add
push
in
leave
dec
dec
cmc
inc
adc
dec
lock
jl
icebp
movsb
dec
fdivrs
jns
and
sub
fsubl
dec
push
adc
xor
jns
and
dec
add
pushf
int3
popa
and
cmp
sub
fstps
or
inc
rorl
rclb
inc
mov
popa
pusha
xchg
sbb
cmp
and
jns
or
xchg
cmpb
nop
pushf
test
xor
cmp
inc
mov
add
mov
fcoml
pop
mov
cmc
pop
add
cwtl
dec
mov
das
aam
sub
fs
mov
in
cmp
push
in
cmp
loopne
cwtl
or
mov
out
sbb
lods
sbb
dec
nop
push
xchg
fs
je
aam
and
rcr
adc
inc
fsub
push
adc
test
fs
loopne
sub
fnstcw
sub
mov
sbb
aam
and
xor
mov
jns
loope
adc
popa
sbb
insb
aam
and
add
sbb
inc
adc
call
push
mov
add
into
jp
fcomps
dec
lret
popa
sbb
pop
outsb
or
ret
dec
daa
cwtl
push
daa
shlb
popf
psubsw
dec
js
dec
imul
and
in
xor
sarl
xor
xor
sbb
aad
inc
aaa
clc
push
aad
sbb
pop
and
fsubr
pop
fs
stc
and
lods
add
adc
leave
or
pop
jl
or
jno
sub
jne
push
in
test
mov
fucomp
add
jge
or
xchg
test
je
loope
dec
imul
pusha
or
das
outsl
out
and
mov
arpl
cs
into
add
jg
or
dec
inc
lock
lock
adc
pushf
xor
sbb
inc
pop
add
adc
fsubrs
shrb
ret
nop
mov
test
loop
mov
xchg
pop
pop
pop
adc
sbb
pop
loopne
adc
incl
daa
out
testb
adc
jmp
adcb
aam
lcall
mov
pop
inc
and
in
mov
xlat
xor
push
mov
jne
bound
leave
add
adc
sbb
leave
and
ret
jns
xchg
mov
frstor
pushf
mov
sub
movsb
pushl
ret
xchg
xlat
lea
sub
adc
pusha
sbb
xchg
mov
in
cli
mov
add
adc
imul
sti
dec
leave
mov
rcr
mov
enter
outsb
cld
dec
test
push
dec
shlb
cmp
jbe
push
ret
arpl
push
pop
aam
rcrl
xchg
in
loope
in
lods
and
out
int
cmpsl
test
cltd
cmp
sbbb
xlat
lcall
add
lds
mov
pushf
cwtl
test
xor
andb
add
sbb
int3
imul
outsl
xorb
mov
bswap
push
xchg
inc
aam
cwtl
cmpsb
inc
pop
push
cmp
cmp
and
sbbl
push
cli
mov
xchg
mov
dec
mov
ret
pop
pushf
mov
clc
fs
add
push
lock
aas
sbbb
dec
fmull
mov
or
mov
cld
enter
dec
fisubrs
lds
fcompl
test
inc
push
inc
jmp
push
insb
es
dec
insb
jecxz
arpl
insl
fldenv
jle
in
adc
jb
xor
dec
dec
mov
adc
adc
inc
adc
jle
dec
sub
jle
clc
sbb
adc
mov
push
cwtl
jo
jg
popa
or
inc
lock
fsubp
dec
sub
mov
jge
stos
cmp
and
in
cmp
movsb
or
adc
arpl
daa
inc
jb
mov
inc
push
divb
adcb
inc
in
cmpl
dec
mov
xchg
xchg
cpuid
fstl
call
in
dec
or
jbe
xlat
adc
or
sub
ja
push
and
jge
outsl
mov
jl
inc
push
sahf
cmp
data16
imul
push
arpl
dec
ja
and
das
std
mov
fcompl
sbb
fdivrl
jbe
sbb
sub
rcr
push
pop
push
es
sbb
and
test
or
add
add
pop
sbb
flds
dec
push
subb
pop
mov
jbe
xchg
jbe
push
fs
add
aaa
dec
and
jae
jg
faddl
popa
fnop
aas
cltd
sahf
test
int
xchg
movl
out
js
shll
fwait
inc
mov
pop
decl
sbb
inc
mov
push
test
or
or
mov
sub
out
push
imul
push
jbe
inc
fnstsw
mov
sub
push
pop
adc
dec
jbe
sbb
add
outsb
xor
sbb
xor
lds
outsb
dec
popa
outsl
mov
loope
pop
and
xchg
mov
or
sbb
and
mov
mov
add
xchg
push
je
jl
xchg
dec
aad
or
cwtl
dec
adc
or
xchg
cmp
sbb
dec
xchg
push
jge
xor
ret
lods
jb
mov
sub
jb
aam
shll
cli
inc
lret
jmp
inc
xchg
test
out
add
test
or
ror
cmpxchg
xor
mov
pop
lods
pop
lods
lods
imul
mov
add
fdivs
hlt
jge
mov
lcall
and
xchg
jp
bound
cmp
dec
in
insb
dec
pop
cmp
xchg
cmp
inc
mov
aam
jp
add
addb
sub
dec
cvttps2pi
cld
cmp
sbb
or
bound
sarb
dec
pop
push
xor
adc
enter
and
sbb
mov
inc
cmpb
or
push
dec
sbb
cmpsl
cmp
jns
insl
jle
insb
aad
mov
les
imul
pop
jle
stc
dec
xchg
push
push
sub
dec
out
dec
sbb
mov
mov
xchg
daa
push
call
xchg
clc
pop
mov
sbb
in
out
and
jne
rol
movsl
mov
nop
out
xchg
pop
adc
inc
mov
loope
adc
push
fsubs
and
sbb
xor
imul
dec
jle
stc
cmp
js
sub
fcmovbe
inc
cmc
and
xchg
aad
or
pop
sbb
movsb
push
or
lds
inc
nop
cmpsb
jne
xchg
mov
repz
inc
lock
mov
jne
xor
push
sub
push
jge
rorb
aaa
or
lahf
sbb
imul
stc
cmp
inc
xor
mov
inc
clc
or
sbb
push
pusha
jno
jmp
adc
les
add
inc
or
pop
lret
or
pop
test
leave
xchg
jb
sub
and
jge
dec
push
test
add
jo
outsb
mov
xor
jbe
adc
pop
fisttpl
inc
inc
shlb
pop
arpl
icebp
pop
lret
mov
jns
add
addr16
aas
pop
lret
jge
cmp
xor
frstor
outsl
fdivrl
add
iret
bound
aas
sbb
fnsave
nop
rol
or
inc
shlb
adc
inc
inc
shrl
jge
or
pushf
mov
sbb
sbb
fisubs
stos
adc
mov
int
test
es
add
imul
jmp
and
mov
call
dec
fisubrs
insl
add
outsb
dec
xor
push
push
add
adc
outsb
mov
sub
inc
mov
mov
inc
popa
or
mov
dec
pop
arpl
pop
adcb
mov
adc
sbb
cmpsb
stos
shrl
fadds
daa
in
cmp
jne
push
sbb
push
shr
sub
sub
push
push
les
int3
scas
sbb
jno
in
jno
popa
mov
cmp
pop
push
dec
xchg
aas
mov
aaa
ret
push
mov
sbb
mov
movsl
and
add
add
push
inc
push
mov
xor
xchg
cltd
or
pop
mov
insb
and
xchg
or
adcb
cmp
jmp
lods
pop
cli
pop
push
dec
inc
fsubrs
inc
xorb
ret
inc
cmc
sbb
and
pop
popf
pop
popa
add
xchg
in
jns
repnz
mov
pop
inc
jo
pusha
outsl
push
loopne
enter
push
mov
outsl
push
inc
pop
in
loopne
and
jns
hlt
jbe
andl
cwtl
in
nop
pusha
dec
adc
add
jl
sbb
dec
lret
nop
jae
in
sbb
push
push
jge
adc
fistpl
subl
jbe
sub
setae
idivl
cmp
pop
sub
ret
xor
cmp
dec
adc
rorl
mov
sub
cpuid
ret
inc
or
test
or
in
add
push
insb
ret
xlat
scas
jbe
pusha
adc
aaa
pop
rorl
pop
jp
add
fnstsw
imul
mov
mov
addr16
enter
std
adc
sbb
cltd
add
or
mov
out
lret
ja
fsubl
stos
sbb
inc
xchg
or
ret
jg
loope
pop
pop
push
pop
outsl
lock
sbb
push
push
inc
repz
xor
fmul
in
cs
daa
lods
mov
mov
pop
dec
xor
fs
mov
lock
cmc
cld
xor
lock
aaa
xorb
add
mov
arpl
dec
lds
push
enter
push
mov
lahf
pop
leave
sbb
inc
ficoml
cmpsb
push
sbb
aam
ljmp
cwtl
fs
cwtl
pusha
sbb
sub
push
pop
clc
jb
xchg
pop
out
push
aaa
mov
dec
jb
rcl
xchg
push
ret
add
jge
jp
in
pop
sti
std
aad
fsubs
ljmp
popa
inc
scas
xor
xchg
mov
add
inc
inc
jge
aad
jb
mov
dec
adc
hlt
jmp
int
arpl
sbb
imul
sti
in
in
sbb
test
dec
in
notl
hlt
sub
jno
out
fptan
jge
sbb
test
jo
data16
mov
pusha
adc
xor
cmp
and
pop
mov
xor
insb
in
aas
in
in
fidivl
inc
sbb
dec
mov
xchg
mov
sbb
push
sbb
dec
sub
cmp
arpl
setle
sub
xor
test
xchg
sahf
imul
aas
in
jae
mov
pusha
lods
dec
push
push
jbe,pt
das
orb
cwtl
fisttpll
pop
mov
insl
xchg
sub
pop
mov
jge
rcrb
mov
xchg
or
push
inc
insl
loop
pop
aad
out
xor
push
cwtl
mov
sub
stc
lods
dec
insl
cmpsl
xlat
jns
out
lret
push
je
dec
push
pop
movsb
push
dec
or
icebp
sarb
call
add
cmpsl
mov
push
fcmovbe
inc
or
or
or
xchg
jg
dec
pushf
sub
push
ret
sbb
insb
mov
push
sub
arpl
push
sub
jl
faddl
add
leave
aam
dec
jecxz
xor
stos
ljmp
sub
into
mov
cmp
out
pop
test
push
aam
push
add
lret
scas
jmp
add
push
jnp
rolb
fnstcw
scas
xchg
cs
pushf
mov
sub
add
and
add
in
aaa
fwait
les
aam
aam
jg
cwtl
xchg
fistpll
sbb
sub
push
xchg
test
mov
add
sti
pop
xlat
fldcw
push
test
pop
adc
sbb
mov
push
lock
xchg
stc
xchg
lahf
aad
jl
push
flds
inc
adcl
shl
dec
fs
lock
push
ljmp
cmpsb
sbb
arpl
ficomps
jg
or
adc
mov
jmp
and
test
sub
into
pop
stc
cmpsl
rclb
cmp
fidivrl
push
cmp
cs
push
and
mov
sub
pushf
daa
movsb
push
and
cmp
icebp
xorb
or
int
bound
and
sub
inc
jns
or
stos
or
addb
sub
dec
out
mov
daa
xchg
pop
mulb
sub
cmp
xor
adc
cwtl
cmpsl
mov
out
push
je,pn
fimuls
loope
mov
dec
add
xchg
pop
ja
rolb
jmp
pop
push
sub
mov
cmpsl
out
xchg
sub
cmp
push
jmp
in
mov
push
push
xor
or
fldcw
sahf
pop
adc
mov
aam
push
flds
shlb
mov
and
xor
sub
popf
xor
mov
add
sti
fldenv
push
pop
loopne
loopne
adc
fldcw
or
addl
aam
or
push
xor
icebp
rorl
fidivl
add
cmp
cltd
adc
hlt
ss
dec
out
iret
push
adc
adc
js
nop
mov
rclb
add
orl
push
pusha
add
and
stos
or
jbe
jae
int3
cli
mov
or
pushf
xchg
test
jp
mov
subps
xor
pop
repz
cmp
dec
lods
into
inc
fsubl
mov
loope
aam
pop
pop
jo
outsb
sbb
les
push
mov
cmp
scas
mov
lock
pop
pop
sbb
outsb
cmpsb
lock
in
xor
adc
inc
fst
adc
xlat
into
push
clc
add
sub
idivb
mov
xlat
mov
add
divl
adc
dec
xchg
adc
es
fsubl
sub
jl
or
test
jp
xchg
xor
cwtl
nop
dec
mov
xor
rcrl
repz
pop
or
in
sbb
adc
out
sbb
mov
out
scas
cmp
mov
ss
xor
call
mov
loope
push
fcomps
inc
notb
rolb
xchg
mov
inc
or
in
and
sbb
cvtdq2ps
push
jmp
lock
test
lea
xchg
rclb
nop
rcrb
pop
xchg
xchg
imul
mov
js
sub
sbb
xchg
inc
insb
jns
ljmp
jo
outsb
inc
shlb
push
fcomps
pop
fs
cmp
push
dec
pop
push
sub
push
das
inc
pop
sbb
adc
cmp
add
or
das
in
mov
pusha
jecxz
jg
je
pushl
xchg
adc
jecxz
sbb
and
mov
cmpsl
and
test
cmp
je
xchg
push
mov
dec
jbe
add
or
pusha
inc
and
mov
sbb
pusha
inc
jnp
push
mov
sub
dec
xchg
push
hlt
stos
or
add
xchg
mov
ret
inc
orl
js
leave
lcall
dec
ret
xchg
or
sbb
nop
dec
xchg
enter
pushf
shll
psrlq
push
and
xchg
add
pop
in
mov
out
jl
subl
mov
cld
inc
fcoml
jns
outsb
sbb
sub
je
fadd
xor
lods
add
xchg
and
jge
sub
mov
lahf
jo
jns
cli
xchg
aas
push
popa
cmp
inc
leave
mov
xchg
mov
fsts
jl
sub
scas
or
add
lock
jp
pop
jnp
or
lds
lahf
dec
add
sbb
pushf
mov
inc
inc
frstor
pop
mov
movsb
pop
dec
pop
sub
pop
and
aas
xchg
fcoml
sbb
fnstenv
imul
loopne
sbb
push
aaa
push
or
cld
sbb
fldt
jns
xor
imul
add
shlb
test
mov
arpl
push
push
fwait
pop
add
enter
vmovsd
lahf
sub
adc
mov
cmpsb
or
cld
mov
aaa
jmp
testl
fs
scas
push
scas
fsubrl
mov
pop
cs
jg
insl
pusha
pushf
cs
cmp
adc
ret
xor
xchg
push
push
daa
mov
test
push
sub
addr16
scas
sti
int3
or
scas
jns
orb
adc
adc
mov
es
push
mov
pop
shll
call
xchg
arpl
or
sub
pop
mov
mov
jmp
pop
leave
mov
movsl
test
stc
data16
out
or
dec
adc
adc
cmp
adc
xchg
adc
xor
out
ljmp
out
inc
push
mov
mov
mov
loopne
jle
inc
and
stos
fwait
jbe
add
nop
pushf
mov
push
or
fadd
xlat
fmull
js
jle
in
jne
sbb
adc
pop
dec
push
adc
ss
adc
out
sbb
dec
mov
mov
icebp
scas
notl
sub
cmp
je
dec
mov
test
xor
inc
jno
sub
ret
ljmp
pop
je
fimuls
adc
mov
xchg
push
nop
arpl
push
and
sahf
loope
dec
pop
mulb
add
hlt
xlat
jg
sti
repnz
subb
add
out
fiadds
mov
imul
add
xchg
int
iret
inc
push
inc
test
dec
adc
mov
inc
mov
test
pop
jle
loop
sbb
and
mov
mov
push
inc
stc
sbb
push
shrb
cwtl
and
aad
jp
jns
and
inc
sbb
cmp
cmpl
fcmovbe
pop
cs
push
rol
jbe
ret
pop
cwtl
outsb
lea
enter
mov
negb
or
inc
xlat
mov
sti
pop
cmc
dec
clc
js
xor
push
pop
jae
and
xorl
cld
push
scas
pop
or
iret
lcall
cld
addr16
aam
push
push
xor
sbb
popa
pop
xor
push
addr16
daa
jbe
inc
loope
dec
xchg
mov
dec
dec
or
sub
rcr
lret
pop
mov
mov
or
dec
mov
stos
jno
fmull
fwait
aam
xchg
lahf
insl
test
or
insl
sub
mov
pop
push
dec
jne
lcall
add
adc
stos
jmp
insb
test
int
shlb
cmp
and
mov
jmp
sbb
pop
jmp
sbb
les
call
enter
pop
sbb
pop
mov
sbbb
or
xchg
sbb
ja
and
jl
fs
test
push
lea
xchg
mov
in
je
cmp
xchg
int3
shrb
sbb
and
and
jb
push
push
inc
rcl
push
out
jae
cmp
aam
rcl
stos
arpl
fidivrs
cwtl
icebp
mov
dec
pushw
clc
dec
mov
orb
adcl
mov
idivl
xchg
pushf
mov
std
sub
es
cli
push
out
push
jle
mov
adc
arpl
outsl
inc
js,pn
sbb
cld
pop
jl
sub
dec
in
call
jns
es
in
inc
push
test
cwtl
inc
adc
repnz
rcll
xchg
sub
mov
cmp
inc
out
sub
mulb
dec
sarb
test
loope
mov
clc
in
xlat
pusha
insb
cmc
or
cmp
add
adc
cltd
test
jo
xchg
div
in
lea
push
pop
cmc
fsub
jmp
popa
int
cmpsb
sub
jno
jne
push
test
repnz
push
in
pop
push
pop
mov
xrelease
into
sbbb
cmc
mov
push
fsubl
xor
pop
lds
fisubl
clc
sbb
pushf
adc
or
gs
in
sbb
push
mov
adc
movsb
cmc
movsl
ljmp
in
cltd
stos
sbb
lds
mov
shlb
enter
adc
ljmp
adc
mov
pushf
shll
jnp
loop
jl
rcll
mov
jo
cmpsb
pushf
fsubrl
bound
or
loopne
rcl
stos
mov
pop
cmp
push
push
test
paddusb
movsb
dec
insb
loope
add
cs
leave
dec
hlt
lahf
inc
shll
paddusb
lret
test
clc
adc
sti
icebp
mov
push
insb
insb
in
cmp
call
sbb
pop
jnp
pusha
jnp
pop
mov
jnp
les
sbb
roll
mov
in
ror
inc
sub
sbb
mov
fnstcw
add
jl
lock
test
or
xchg
jb
das
js
xchg
in
sub
pop
mov
cs
cltd
cmp
push
psrlq
test
mov
inc
cmc
scas
inc
pop
mov
stc
shrl
fsubr
je
mov
sub
popf
xchg
ja
ljmp
push
inc
mov
add
sbb
dec
add
cli
orb
mov
mov
mov
in
std
repz
dec
push
jns
out
je
aaa
mov
fs
jle
xchg
imul
cmp
lds
imul
mov
mov
repz
pop
leave
repnz
or
std
leave
fsubrl
aam
stos
cmp
pop
mov
pop
pushf
jne
mov
dec
repz
pop
mov
push
popa
stos
lock
fcmovu
sub
dec
in
inc
roll
mov
popa
rcrb
div
fmull
fiaddl
jo
mov
cmp
push
jo
xchg
imull
js
and
sbbb
push
push
sbb
dec
and
jp
adcb
fcomps
push
pop
pop
fmul
cmp
pop
jns
loopne
push
mov
xchg
xchg
or
test
cwtl
cmpsl
scas
jns
ljmp
je
jns
outsb
xor
push
cmp
pop
jne
add
lds
fwait
inc
cmp
ljmp
cs
adc
int3
test
jb
les
push
push
pop
push
das
out
jg
sahf
imul
push
push
dec
push
and
lahf
and
pop
mov
xchg
test
js
adc
fsubrl
add
push
push
in
addb
cli
sbb
pand
cs
aad
push
push
imul
cwtl
mov
daa
mov
jp
mov
lahf
push
fstpt
rorl
insl
pop
mov
loopne
xchg
int3
jns
xchg
sahf
mov
push
xlat
adc
add
loope
pushf
lock
and
stos
pusha
mov
sub
mov
pop
js
ljmp
fdivrs
dec
jmp
add
cli
pop
cmp
flds
xchg
add
inc
pushf
xchg
mov
pop
nop
rolb
jae
pop
cmp
test
sbb
enter
push
stc
mov
and
sbbl
adc
into
sbb
push
dec
cltd
mov
push
fstpt
dec
mov
sub
jbe
clc
fcoml
rcr
lds
push
dec
sbb
sbb
aad
mov
and
fwait
dec
daa
cld
pushf
movsb
pop
mov
inc
jnp
lea
inc
pop
rolb
add
fs
cwtl
outsb
mov
fdivr
xor
stos
sbb
sub
negl
or
call
ret
mov
sbb
subb
lcall
rcrb
pop
arpl
mov
jmp
int3
dec
in
loopne
mov
push
lods
in
jo
mov
ljmp
rolb
lahf
in
push
jg
cli
sub
mov
push
dec
pop
xlat
movsb
popa
adc
pop
ss
pop
ds
or
xchg
or
push
aad
pushf
jmp
jp
pop
lock
adc
add
sub
push
pop
inc
mov
push
push
scas
mov
cmp
test
adc
jecxz
or
cmp
pop
inc
and
ja
js
jnp
outsl
dec
loop
add
dec
add
gs
sbb
loopne
inc
ljmp
xor
icebp
adc
and
fsubs
rorl
jle
dec
mov
int
pop
mov
lods
cwtl
sahf
add
xlat
inc
mov
inc
jl
and
pusha
sti
mov
push
cmp
dec
xchg
rcrb
mov
dec
pop
xchg
jl
in
jg
lds
dec
mov
icebp
lahf
sbb
stc
adc
scas
push
and
insb
out
adc
fcoml
jp
xchg
pop
pop
out
sub
hlt
addr16
fisubs
add
movntq
out
lcall
add
sbb
imul
lods
fists
nop
jae
lock
lods
int
inc
cmpb
mov
adc
fs
jno
gs
pop
sub
lahf
dec
fdivrl
inc
or
adc
mov
enter
and
mov
add
lret
repz
sbb
jl
out
sbb
popf
xor
leave
and
jg
push
ret
negb
inc
push
push
rorl
popa
iret
out
push
pop
int
cmp
jmp
sti
lret
sahf
test
ret
iret
iret
xchg
xchg
out
jns
adc
shlb
xchg
xor
fdivs
xchg
xchg
dec
data16
lods
and
cmp
clc
jmp
sub
stc
movsl
jge
leave
push
xchg
imul
ret
movsl
das
add
stc
pmulhuw
add
pop
adc
shll
shl
sarl
or
out
jmp
pop
push
inc
jns
xchg
iret
hlt
pop
popa
and
aas
outsb
imul
push
punpckhdq
bound
fstps
rclb
cmc
mov
push
out
cltd
les
xchg
jl
mov
pop
call
xor
icebp
push
call
jl
js
sub
xor
mov
pop
and
sub
dec
mov
hlt
inc
dec
xchg
loope
push
arpl
adc
pop
pushf
or
fiadds
push
lret
setns
push
cmp
push
aad
mov
stos
pop
xor
sbb
inc
pop
mov
aad
dec
dec
mov
test
sbb
cwtl
add
inc
inc
dec
xchg
popf
repnz
cmp
insl
push
and
mov
in
sbb
mov
add
lods
push
lret
sbb
dec
loope
cmc
leave
cmp
or
or
mov
xlat
fs
inc
addr16
jbe
jo
cltd
faddp
mov
pop
cmp
mov
dec
or
inc
scas
push
push
xchg
bound
inc
pusha
sub
mov
stos
jnp
pop
mov
xchg
loopne
jecxz
push
icebp
insl
in
jmp
xor
je
dec
sbb
sub
in
sbb
lahf
sbb
scas
inc
bound
cwtl
adc
mov
xorw
cmp
sub
fnop
lcall
push
sub
das
xchg
add
cmp
mov
sub
xor
mov
sbbl
in
call
in
lahf
cmp
mov
xchg
je
fisubrs
sti
inc
mov
mov
call
or
cli
cwtl
shrl
add
mov
call
or
out
inc
test
aas
lret
lds
mov
es
sar
and
and
jl
leave
je
mov
pop
sub
insb
pop
jmp
cmc
fdivs
adc
add
movsb
cmp
add
mov
aas
iret
jns
jo
divb
dec
ja
and
stos
movsb
bound
or
mov
jmp
jl
cs
or
and
pslld
and
xchg
jle
add
cmp
add
sbb
inc
aad
ljmp
cmpsb
in
jmp
loop
inc
add
inc
shlb
daa
lcall
nop
add
and
gs
daa
mov
test
mov
stc
sbb
in
sub
adc
into
ret
jne
inc
ds
into
mov
adc
stos
in
push
imul
addr16
mov
enter
xor
push
push
pushf
test
out
xor
lret
xchg
pushf
sbb
mov
add
in
inc
push
movsb
xchg
push
loope
pop
push
sahf
jge
or
incl
pushf
push
jbe
mov
adc
adc
xchg
loopne
sub
aas
out
insl
jg
inc
cwtl
and
jne
xor
mov
iret
jb
insb
jle
stos
push
cmp
mov
sub
push
sbb
call
imul
cld
mov
imul
fdivl
pop
sahf
repnz
cmpsb
mov
mov
test
sub
nop
es
lods
stos
test
addr16
sbb
mov
adc
and
rolb
aas
inc
push
iret
xchg
mov
rcr
pop
mov
xchg
fcoms
xchg
das
cmp
aad
mov
jne
pushf
mov
in
aaa
push
mov
adc
test
dec
xor
mov
xorl
jo
pop
pop
fisubs
mov
push
pop
movb
adc
sbb
and
mov
dec
loopne
pushf
pop
mov
call
cwtl
cmpsb
jns
nop
jl
in
mov
incb
inc
adc
out
push
xchg
lret
fdivr
xorl
dec
lcall
loopne
aas
xorl
jl
lods
xorb
aad
pop
dec
out
mov
sub
fsts
movsb
mov
pop
sbb
test
mov
lret
pop
dec
stc
jno
push
jno
pop
sbb
sti
sub
cli
or
int3
push
lds
or
xchg
lret
addr16
push
nop
sbb
lcall
jae
jp
cmp
aam
cltd
inc
arpl
leave
cli
and
sub
lods
push
jl
js
aad
sub
jg
jns
dec
mov
mov
call
xchg
pop
pushf
int3
insb
inc
push
outsl
push
fildl
dec
adc
jae
aad
cmp
push
inc
or
lods
add
jecxz
insb
pop
sbb
adc
and
mov
xchg
mov
or
shrb
pop
test
mov
insl
js
push
pop
jmp
enter
inc
mov
scas
scas
sbb
or
dec
xchg
pop
testb
cmpsl
cli
cs
imul
stc
out
lcall
leave
aad
xchg
sarl
in
xchg
lcall
xchg
scas
gs
jp
fstps
adc
cs
popa
add
push
adc
pop
xlat
push
loopne
sbb
dec
dec
pop
cltd
sub
push
jne
xchg
or
out
add
cmp
jns
jo
shrb
arpl
into
mov
push
or
dec
out
and
xor
in
dec
sbb
shl
sbb
aas
in
addr16
mov
in
pushf
and
adcb
pop
push
sbb
add
pop
fwait
movsb
jae
test
sbb
dec
cltd
adc
sub
inc
cmp
mov
out
out
sub
pop
dec
inc
dec
jo
or
xchg
mov
add
mov
pop
xchg
mov
push
test
loope
jne
leave
sti
add
push
inc
xor
outsl
fs
jecxz
out
mov
sbb
push
gs
add
fcmovnbe
imul
add
in
lods
inc
pop
mov
mov
sub
iret
mov
cmp
fisubrs
adc
cld
mov
in
push
adc
lret
mov
mov
stc
dec
in
push
cmp
or
shrl
sub
in
cltd
mov
xor
and
sbb
cli
pop
fdivs
sbb
pop
mov
add
fisttpll
mov
int
enter
stos
cmp
fidivrl
inc
roll
mov
mov
inc
jae
sbb
xchg
push
hlt
out
xchg
leave
inc
ja
neg
or
cmpsl
mov
xor
aam
lods
loopne
jle
notb
pop
in
in
fnstenv
sti
ds
inc
or
call
or
scas
sbb
jmp
add
mov
jne
dec
loop
scas
mov
fnsetpm(287
sub
shld
push
or
je
adc
xchg
adc
fdivrs
cli
jecxz
fnstcw
in
shl
sbb
pop
adc
pop
add
sub
add
mov
je,pt
int
ror
sub
jl
cmp
adc
lret
add
jmp
sahf
js
lahf
inc
xor
sub
mov
in
inc
hlt
add
or
mov
jmp
std
inc
xacquire
mov
xlat
push
push
push
dec
and
insb
dec
pop
mov
mov
pop
bound
rcll
mov
popa
xor
iret
adc
bound
sbb
dec
mov
addb
stos
notb
je
and
loope
gs
push
push
fwait
aad
sarl
jl
hlt
add
inc
jne
cmp
pop
push
lcall
shll
cmp
pop
push
loop
mov
add
daa
xlat
out
in
lods
in
inc
imul
pop
cs
mov
ja
xchg
cwtl
push
xchg
push
mov
cmpps
cmp
jg
mov
imul
mov
mov
aam
aam
mov
inc
cmp
outsb
scas
jecxz
xchg
pop
xchg
dec
vpunpckhwd
dec
or
aad
xor
test
pushf
jg
and
push
push
jmp
add
jmp
jmp
inc
pop
push
sub
xchg
dec
mov
pop
jnp
jbe
pop
inc
sbb
push
clc
push
pop
jl
out
das
or
pop
mov
in
loopne
outsb
dec
loopne
cmp
xchg
and
aam
subl
push
inc
pop
js
stc
mov
add
insb
cmp
mov
sub
add
aaa
int3
sub
inc
add
push
dec
sub
inc
mov
cli
dec
out
push
dec
add
test
cmp
xchg
inc
mov
sbb
popf
jl
sbb
push
jbe
movb
dec
inc
xor
jae
mov
pop
repz
jb
shll
sbb
inc
in
jno
mov
jecxz
xchg
inc
es
mov
lods
jnp
ja
pop
icebp
out
or
sub
sbb
mov
push
push
push
insb
in
imul
mov
dec
jge
jge
xchg
and
adc
insb
loop
sub
adc
dec
pop
xor
iret
add
add
mov
adc
jnp
cs
std
mov
cli
cmp
loope
out
loop
aas
faddl
xchg
into
adc
cmp
xchg
mov
fidivrs
jns
mov
push
jp
dec
sbb
hlt
nop
jnp
or
push
and
and
cmp
mov
jl
mov
sbb
sub
pop
jmp
sub
loop
jl
stos
push
fisubl
mov
jmp
and
mov
cmp
cmp
out
daa
pushw
xchg
jmp
xchg
adc
push
mov
je
fwait
les
test
mov
test
rcll
jp
sbb
mov
pop
inc
mov
pop
adc
add
add
adc
test
repz
cmp
repnz
xor
xor
jp
sub
sti
dec
repz
sub
or
mov
out
daa
inc
dec
pop
mov
sti
mov
fwait
pusha
mov
mov
jae
test
and
xchg
jl
push
jmp
mov
int
mov
sbb
xor
out
dec
jno
fmuls
lods
leave
dec
push
test
inc
test
xor
cmp
imul
imul
les
cmc
out
xor
mull
mov
out
test
fisubrl
jge
xchg
jbe
ds
outsb
sbb
push
in
dec
dec
add
push
gs
js
lods
pop
mov
aam
push
iret
imul
jb
add
add
sbb
les
adcl
cmp
push
jb
hlt
add
or
sub
lods
fs
and
xor
scas
and
ror
fistpll
dec
xchg
stos
push
outsb
adc
pop
in
add
jbe
push
and
imul
loopne
adcl
sbb
fwait
shlb
mov
mov
jb
in
mov
fldcw
cmpsb
rorl
cmp
sbb
scas
mov
cmp
inc
push
out
pop
scas
or
dec
or
lahf
adc
out
push
or
pop
shrb
je
imul
push
push
in
int
fcompl
fstpt
cmpb
adc
or
pop
cwtl
sub
push
mov
dec
aam
stc
push
clc
dec
mov
xor
adc
ret
inc
sbb
lods
xchg
aam
jmp
out
into
cmp
fdiv
int3
in
popf
les
mov
mov
sub
sbb
mov
adc
out
cmp
lcall
flds
jp
cmpsb
xchg
sub
jne
sub
push
sub
hlt
cmp
les
sub
push
xor
push
mov
test
push
rorb
sub
sbb
jl
and
xchg
sub
stc
adc
call
push
das
pop
cli
push
jo
jns
lret
jecxz
inc
mov
fadds
mov
sub
sub
cmp
jne
and
popa
dec
and
mov
or
das
xor
je
js
push
inc
mov
or
dec
mov
int3
jge
imul
xchg
push
push
mov
test
sub
test
jne
xchg
loop
dec
loopne
leave
xor
xchg
hlt
clc
test
mov
sbb
pop
mov
outsb
data16
pop
bound
and
mov
mov
repnz
add
fsubs
mov
push
in
adc
ret
std
push
mull
jl
push
addb
mov
xchg
sbb
ret
pop
push
inc
dec
adc
sub
repnz
inc
adc
xor
inc
pop
loopne
push
mov
dec
sub
pop
pop
pop
xchg
adc
dec
aam
stos
jl
imul
pusha
test
sbb
cmp
and
sbb
push
and
add
test
aam
mov
or
push
into
test
inc
inc
jns
xchg
mov
mov
pop
andl
add
pop
jp
pop
cmp
into
and
push
and
rcll
inc
push
or
or
clc
test
sub
jmp
xchg
fwait
cmp
push
dec
jne
aas
outsb
shrb
sub
andb
pop
xor
loopne
loope
cwtl
cmp
test
mov
pop
push
mov
inc
and
pop
dec
pop
insb
inc
mov
cmc
out
pop
stos
mov
jg
ftst
adc
sbb
adc
mov
inc
mov
cmp
inc
jno
call
adc
outsb
movsl
mov
inc
push
aaa
cltd
add
push
xor
push
dec
jnp
xor
cs
dec
xchg
cltd
inc
or
pop
dec
icebp
js
or
and
cli
dec
mov
jae
stos
fcoml
dec
jns
push
cltd
dec
add
lock
mov
lahf
pop
imul
dec
xchg
das
das
push
repz
pop
sbb
push
dec
dec
pop
dec
dec
pop
dec
inc
inc
or
jg
pop
push
and
fadds
or
mov
mov
adc
std
pop
or
dec
addb
imul
push
inc
add
jbe
fistpll
mov
insb
add
std
cmp
popa
dec
xchg
dec
fcmovu
inc
xchg
dec
pop
or
loopne
jns
mov
mov
xchg
xchg
cmp
pop
push
jns
dec
or
in
xor
cmp
stc
loopne
mov
xchg
adc
push
adc
es
jge
inc
push
cmp
sub
addl
jb
xchg
sbb
fiaddl
popf
adc
aam
mov
cld
jns
sbb
dec
inc
insl
jecxz
inc
popa
adc
and
int3
insb
cmp
pushf
jns
push
push
loope
dec
ds
jbe
rorl
aad
out
jb
dec
out
out
loope
inc
popf
loope
dec
mov
mov
loope
dec
scas
push
add
dec
inc
jb
jl
inc
popf
jb
pop
dec
pusha
adc
inc
dec
add
xor
imul
jns
fldpi
push
xlat
je
inc
vmaskmovdqu
shl
sti
adc
mov
lods
jecxz
add
xchg
bound
push
mov
cmp
clc
sbbl
add
inc
lea
test
popa
push
jns
and
dec
test
enter
shrb
cltd
bound
fadd
pop
mov
mov
dec
cs
mov
sub
scas
pop
arpl
jge
loope
dec
gs
xor
add
add
push
push
xor
es
aam
clc
fwait
aam
jge
in
movsb
sub
out
test
popf
mov
dec
mov
test
popa
dec
push
inc
loope
dec
jae
and
sbb
cmp
add
je
rolb
xchg
xlat
popa
cmp
xor
adc
call
jp
lret
inc
cmp
imul
es
mov
mov
add
int
cmpsl
in
test
lea
xor
xchg
sbbb
jecxz
fidivs
stos
sahf
or
xchg
dec
sub
mov
mov
dec
lahf
xor
add
inc
out
pop
inc
sarb
xor
lds
les
dec
mov
pshufw
out
loop
and
mov
clc
inc
push
aam
in
ja
repz
pop
rcll
jne
mov
or
addr16
jg
repz
gs
loope
or
or
xor
cmp
loope
dec
xor
and
pop
sub
sub
les
outsb
dec
mov
dec
sbb
or
jg
inc
shll
cmc
adc
in
cwtl
popa
ss
dec
sbb
test
dec
sub
jb
dec
jb
dec
push
pop
loope
dec
js
xchg
sub
fldenv
rclb
jne
stc
int3
repz
mov
lds
movsl
insb
sbb
mov
mov
adc
jno
stc
lahf
mov
push
je
cld
mov
xorb
test
dec
js
aad
sbb
xor
add
std
nop
add
pop
or
les
xchg
stos
jnp
mov
add
mov
xchg
sbb
or
adc
aam
cmp
dec
xor
sbb
jae
in
sbb
mov
xor
popf
sarb
push
aaa
push
push
dec
pop
fsubrl
outsb
pop
iret
inc
mov
or
mov
xchg
scas
gs
push
fimuls
xor
xchg
push
mov
or
dec
mov
mov
jns
cmpsb
mov
movsb
sub
orl
and
push
xlat
pop
xchg
loope
sub
sub
sbb
adc
add
add
dec
pop
pusha
fimuls
inc
ljmp
rcrl
jae
jb
jl
push
popf
dec
cwtl
and
dec
pop
cmp
push
addr16
inc
or
lods
mov
fs
dec
push
jne
aaa
jle
dec
pop
pushf
adc
jp
push
push
jbe
push
test
mov
xchg
inc
or
jno
xor
inc
jl
pop
mov
xchg
push
sbb
push
add
mov
test
xchg
dec
add
popf
push
adc
fistps
pushf
pop
pop
sub
icebp
sbb
fisubrl
dec
inc
sbb
pop
or
pusha
dec
dec
dec
outsb
popf
jge
ja
push
inc
jo
rcll
fidivs
dec
pop
je
and
adc
gs
repz
or
dec
adc
adc
gs
repz
lret
adc
pop
jmp
dec
repz
lret
inc
mov
jge
or
data16
sbb
xchg
pop
sbb
outsb
or
push
mov
sbb
aam
add
sbb
sbb
dec
cli
and
loop
jo
or
cmpsb
xchg
int3
mov
pop
stos
jle
add
sarl
push
fisubl
in
xor
jge
shlb
dec
and
inc
test
mov
dec
les
es
fcmovu
sub
lds
xor
xchg
lds
sbb
fwait
and
mov
aas
adc
outsb
jl
add
int
iret
setae
push
cmpsb
pop
sub
adc
and
add
dec
inc
add
mov
lock
insb
mov
lods
shrb
movsl
sub
pop
or
int3
adc
stos
sub
stos
fwait
scas
das
adc
lods
pop
jecxz
add
cmp
jmp
inc
and
adc
jmp
fsub
imul
addps
pop
push
mov
je
or
je
xchg
mov
sub
mov
inc
orl
sti
je
xchg
movsb
pop
mov
lock
cmc
cltd
xor
xchg
dec
std
cmp
or
jecxz
test
sbb
lock
fld
imul
push
push
mov
mov
dec
sub
int
in
jns
mov
adc
lcall
sub
dec
dec
sub
sbb
rorl
js
movl
jp
popa
mov
lods
mov
or
out
daa
xchg
aam
jecxz
push
sbb
fisubs
clc
cmp
cli
sahf
mov
insb
aaa
scas
and
push
or
movntq
adc
and
gs
jns
jbe
call
mov
addr16
imul
icebp
jb
test
pop
mov
fwait
popf
imul
pop
and
loop
pop
jp
rcrb
mov
sbb
cmp
push
movsl
xorb
add
fcoml
cmp
xchg
and
sbb
pusha
xor
xor
cmp
repz
add
lea
ficoms
fidivs
cmc
pop
cmpsl
punpcklwd
shll
dec
inc
push
bound
pop
icebp
sbb
push
mov
inc
push
add
xchg
insl
nop
out
jl
mov
jnp
mov
inc
cwtl
add
push
jnp
mov
outsl
lods
and
adc
mov
ss
outsl
rorb
addr16
push
mov
dec
or
ret
dec
mov
fcompl
pop
and
pop
iret
xor
and
addr16
addr16
xchg
add
adc
push
mov
add
add
clc
mov
aad
inc
pop
mov
pop
xor
push
and
mov
jns
sub
aaa
outsb
mov
hlt
out
jl
xlat
pop
jnp
shr
sbb
das
jno
sub
loop
jns
loopne
mov
pop
sub
mov
mov
ret
xlat
and
call
add
push
and
pop
repnz
test
push
pop
adc
jns
lock
lret
pop
les
stc
pop
addr16
xor
cmpsl
es
xchg
add
or
or
jns
inc
or
pop
xchg
add
jp
xor
add
mov
mov
adc
pop
cmp
je
or
and
push
cltd
mov
cmc
vfnmsub132sd
add
jecxz
adc
in
mov
xchg
inc
xchg
jnp
ds
jno
cs
cltd
mov
or
pop
fiadds
imul
sbb
sarb
fwait
sarb
clc
pop
ss
add
insb
into
rcl
insl
cmp
pop
add
xchg
hlt
rclb
dec
push
test
push
fldenv
test
mov
jnp
cmpsl
cmpsl
dec
fs
push
jg
pop
sbb
jne
out
pop
cmpb
outsb
adc
adc
in
outsb
pop
test
cltd
orl
addr16
rolb
cmpsb
lock
lahf
push
fs
sbb
mov
jecxz
and
sbb
or
mov
xchg
push
pop
push
icebp
and
icebp
pop
lods
mov
repz
imul
xchg
dec
lret
mov
sub
aad
xchg
adc
mov
xor
insb
sti
rorl
xor
xor
pop
or
xor
in
cmpsb
xor
cli
sbb
jne
push
cmpsl
mov
and
sbb
inc
pop
cli
pop
std
fs
jp
sub
ds
inc
jns
cli
mov
xor
and
ljmp
dec
out
pop
test
add
dec
daa
jbe,pt
ja
jbe
bound
dec
das
adc
sub
mov
popa
scas
in
jnp
jg
sub
ljmp
pop
or
pop
stos
xor
jb
sub
cmp
cld
push
and
rolb
adc
out
sbb
mov
and
int
sub
xchg
ss
mov
mov
sbb
jmp
dec
mov
sbb
add
es
hlt
adc
mov
int
push
xchg
xchg
cmp
cmp
in
dec
test
pop
sbb
inc
jno
push
or
out
loop
jecxz
je
or
inc
daa
imul
push
dec
cmp
sub
push
and
addr16
cvtps2pd
jmp
pushl
cmc
loope
test
xchg
lods
mov
jecxz
sbb
icebp
push
jbe
insl
int3
dec
in
mov
dec
jp
pop
iret
imul
push
xchg
outsl
sbb
icebp
test
rcrb
jg
jns
jb
testl
pop
adcl
mov
stos
or
xor
movsb
stos
rolb
add
lock
mov
add
xchg
xchg
pop
daa
cmp
cmpsl
sub
jbe
out
aad
int3
mov
mov
push
mov
add
test
fwait
mov
jl
push
sub
pop
cld
imul
mov
in
clc
mov
ss
mov
mov
mov
or
mov
push
sub
sbb
push
lock
insl
or
subb
dec
add
mov
loopne
jl
pop
sbb
mov
int
sbb
pop
stc
mov
cmp
fcmovbe
mov
dec
pushf
scas
push
jns
pop
sub
sub
push
out
add
push
mov
and
pop
insl
test
sub
inc
or
dec
dec
and
mov
xor
sub
scas
dec
push
mov
sbb
dec
jmp
push
push
out
or
mov
pop
push
cmp
aaa
ljmp
sbb
imulb
add
data16
push
adc
dec
jmp
fstps
insb
sbb
dec
addb
imul
leave
movsb
push
push
mov
stc
pop
jg
cld
mov
pop
jmp
js
xor
sub
outsl
adcl
jg
test
movsb
cwtl
mov
pop
dec
adc
inc
aaa
add
sub
shr
dec
lds
cltd
dec
push
inc
lods
adcl
in
data16
or
je
inc
cmp
nop
ret
aam
inc
mov
add
jp
push
pop
jmp
mov
test
out
fcomp
ljmp
movsl
or
push
stc
inc
imulb
pop
sti
movsb
add
es
pop
arpl
dec
sbb
xlat
jg
adc
push
jnp
test
rcrl
pop
je
insl
jecxz
in
mov
sti
sbb
popf
xor
inc
mov
sbb
cmp
and
adc
jne
adc
dec
pop
pop
mov
xchg
sbb
out
push
dec
inc
pop
sti
jb
sub
jl
cmc
jnp
push
pop
inc
out
jo
fimull
and
cmp
aas
push
loop
dec
sar
dec
leave
mov
aaa
or
cmc
pop
or
and
pop
ja
jp
enter
in
sbb
inc
sub
or
xor
add
adc
out
push
dec
dec
or
dec
out
xor
pop
scas
cmp
push
les
add
ljmp
out
push
dec
add
in
adc
add
push
push
pop
pop
bound
inc
sbb
mov
sub
fadd
mov
shlb
sub
pop
lcall
push
xchg
cmp
aad
ds
js
push
cwtl
inc
pop
sbb
hlt
ss
int3
insb
nop
sbb
js
loope
call
aam
jo
mov
and
inc
add
imul
adc
add
cmp
sbb
push
jmp
dec
std
xchg
dec
test
loopne
shrl
pusha
lods
push
sub
das
in
jl
mov
xor
sub
pop
in
xor
add
stc
sub
rorb
imul
dec
lds
dec
pop
cmp
je
mov
xchg
mov
pusha
and
insb
adc
pop
adc
mov
push
pop
or
daa
inc
dec
or
daa
pop
jle
and
add
adc
lods
pop
js
xor
dec
ds
sub
mov
sbb
insl
cmc
dec
sti
lcall
or
bound
lds
inc
jae
jns
jl
dec
das
int
mov
dec
pop
adc
jo
lret
std
jge
mov
inc
leave
and
adc
pop
cld
xchg
scas
or
fisubl
je
add
mov
jns
push
andb
repz
add
jo
xchg
dec
adc
dec
cmp
push
dec
js
sub
inc
hlt
fidivrl
loope
mov
cld
or
insl
cmp
pop
out
push
mov
in
inc
fs
fisubrl
fwait
cmp
int3
mov
and
push
cmc
jle
enter
jecxz
and
stc
les
and
mov
adcb
sbb
cmp
repnz
les
addr16
insb
cmc
jg
aaa
out
mov
daa
xchg
pop
and
lahf
jmp
insl
dec
push
xlat
inc
cwtl
sub
std
out
dec
nop
out
jno
xchg
mov
orl
lock
xchg
jmp
adc
or
scas
pop
push
adc
mov
ss
mov
rcll
cwtl
or
xchg
rolb
push
push
inc
xchg
es
std
test
lahf
sbb
ds
shlb
inc
je
mov
je
in
cmc
dec
xor
add
shrl
xchg
cltd
data16
push
pop
jge
dec
lcall
aam
add
mov
and
aaa
dec
xor
add
inc
je
gs
dec
mov
jp
adc
xchg
jmp
add
icebp
pushf
and
movsl
data16
push
in
adc
xor
jl
add
jae
adc
negl
adc
xor
mov
xchg
stc
mov
mov
push
outsl
jnp
adc
mov
enter
mov
ljmp
push
mov
fldt
int
outsl
adc
bound
jo
imul
jle
imul
and
push
sbb
adc
fmuls
inc
add
iret
out
push
inc
je
jg
fnstenv
stos
arpl
push
fsubl
in
sbb
cmp
fcomps
push
add
sub
aas
cmp
jne
std
jns
and
lret
and
out
add
mov
hlt
leave
mulb
add
jo
xor
dec
int3
xor
jge
push
xchg
lock
dec
imul
std
jle
sbb
test
lret
popa
lahf
insb
arpl
xchg
inc
inc
jb
sbbb
xchg
mov
loopne
sahf
push
enter
jl
mov
lods
xor
fnstenv
or
push
scas
imul
add
pop
es
arpl
dec
rorl
or
push
mov
pop
or
push
xchg
lret
dec
addl
push
gs
aam
nop
cmp
xchg
clc
int
jge
lds
enter
mov
sub
in
adc
and
pushf
ja
jl
movl
test
scas
lahf
aam
adc
push
bound
outsb
shrb
outsl
lahf
jne
push
or
push
xor
push
push
imul
mov
rorb
jae
adc
jne
cmp
mov
jbe
sub
dec
push
dec
sub
repnz
sub
sbb
cmp
jno
dec
xchg
jne
push
jmp
dec
sbb
sbb
xor
mov
dec
mov
pop
jb
fadd
test
sub
mov
push
sbb
inc
in
outsb
xor
ds
jb
xchg
cs
clc
push
jge
imul
mov
push
sub
mov
sub
mov
cmp
daa
xchg
jl
or
adc
add
sub
dec
sbb
adc
pusha
jbe
cmp
out
fsubl
out
cmp
pop
cmp
int
pop
outsb
sub
std
and
jne
leave
push
ss
repz
push
out
mov
sub
push
jl
cmp
or
adc
popa
out
sbb
sub
imul
out
fs
cmpsb
minps
pop
sbbl
cs
aad
cmp
add
enter
aaa
das
outsb
pop
sbb
cmp
ret
add
int
subb
cmp
jl
mov
mov
gs
stc
and
and
dec
and
call
mov
push
pusha
lret
orl
xchg
push
push
repz
lret
jo
dec
dec
cmp
pop
cmpsb
inc
ds
push
hlt
dec
mov
dec
jae
div
rcrl
bsf
scas
jecxz
hlt
pop
shlb
pop
xor
xchg
iret
sbb
push
fs
clc
repz
dec
aas
jae
inc
sbbl
test
jp
push
mov
or
sub
pop
pop
ja
inc
repz
out
lahf
mov
or
adc
pop
or
xor
sahf
xor
sbb
rcl
or
inc
jmp
outsl
mov
in
xchg
mov
inc
xchg
jl
icebp
pop
push
xor
std
inc
in
cs
jae
sub
sbb
rorl
int3
cmp
call
out
or
mov
sbb
sbb
lds
jbe
addr16
mov
jle
inc
add
pop
imul
lahf
nop
repz
inc
daa
pusha
fwait
jae
push
push
popa
mov
adc
jnp
in
and
call
aam
roll
mov
ret
jecxz
mov
fs
test
movsb
jge
out
leave
imul
test
pop
add
or
pop
std
mov
cs
jbe
pop
sub
jp
addr16
fnsave
repz
sbb
icebp
in
sahf
pushf
fsubrl
nop
loope
out
pop
icebp
dec
sub
inc
nop
or
lods
lock
cltd
and
dec
mov
int
mov
rcrl
leave
add
push
sbb
or
cmc
imul
push
adc
popf
fs
imul
add
ret
jmp
rcl
faddl
outsb
ret
dec
jo
sbb
popa
js
arpl
sarb
cltd
adc
les
sahf
or
aad
jae
xchg
es
and
out
mov
jb
jp
ss
sub
jl
stc
sbb
nop
or
outsl
dec
inc
jg
sub
je
sbb
cwtl
inc
push
dec
ficompl
xchg
jb
adc
jns
pop
imul
dec
rcll
push
adc
sub
aad
or
outsl
adc
clc
push
lahf
out
sbb
cwtl
and
xor
cld
int
mov
fldl
test
mov
jge
leave
bound
cs
cmp
sub
xor
call
mov
fdivrl
jns
out
sbb
cwtl
sbb
xor
int
mov
fiaddl
mov
ffree
in
test
sub
mov
fcoml
out
dec
leave
jno
pushf
test
hlt
sbbb
dec
cltd
cwtl
pop
lods
inc
hlt
jo
fistl
mov
cltd
xor
ds
bound
imul
ret
jnp
int
in
sub
pushf
adc
call
bound
pop
aam
and
xchg
in
repz
and
push
cmp
in
loopne
bnd
inc
fld
sbb
aad
fs
add
jne
adc
pop
dec
lds
mov
or
xchg
or
jb
cltd
fs
bound
xchg
cmp
test
mov
aas
stos
loop
dec
mov
test
neg
cld
insb
xchg
pop
mov
push
dec
jmp
xor
jne
pop
add
mov
sbb
xor
leave
jne
add
pop
fidivs
and
and
int3
jbe
adc
jecxz
sarl
push
or
ja
adc
jp
subb
sub
cld
test
mov
pop
shll
rcrl
sbb
stos
xlat
fmuls
sbb
pop
lock
int3
cmp
jbe
nop
and
pusha
test
push
push
dec
and
pushw
dec
mov
fldt
out
outsl
inc
sub
and
push
ljmp
mov
cmp
jae
and
xchg
jns
out
dec
mov
or
xor
roll
sub
lock
dec
jb
xchg
and
dec
repnz
pop
loopne
xor
push
or
inc
sub
mov
xor
lds
test
rorl
test
xor
gs
cltd
sub
je
into
imul
sahf
add
insb
sub
and
das
loope
push
lret
cld
cmp
out
out
xchg
push
or
sub
push
clc
push
push
stos
xor
xor
in
insl
xchg
jp
test
push
push
fmull
sbb
jno
aam
mov
push
sbb
adc
jne
mov
hlt
inc
aaa
les
prefetch
or
and
ds
push
sbb
sbb
jmp
dec
rcll
sub
jl
sub
xchg
or
rcll
xlat
js
loope
in
imul
subb
les
inc
outsb
jne
stc
and
in
sbb
in
popa
sbbb
dec
sub
jo
les
pop
js
bound
dec
inc
jno
push
inc
dec
lods
or
je
pop
jl
ss
inc
sub
adc
repnz
cmp
sub
gs
repz
es
sti
loop
lret
sahf
sbb
push
pop
mov
lock
add
mov
dec
js
das
or
jne
hlt
jo
pop
ljmp
cmp
add
fstl
int
jl
pop
sbb
test
cmc
int3
aad
push
cmpsb
and
aas
pusha
lock
aaa
clc
xchg
sbb
adc
mov
in
pop
out
xchg
rcrb
in
mov
or
enter
fcoml
jbe
or
jg
je
in
incb
ja
jnp
xchg
add
mov
jno
std
iret
mov
test
add
xchg
sub
dec
adc
daa
jae
xor
clc
push
xchg
fwait
jne
dec
push
call
ds
sbb
add
and
pop
push
push
rcll
loope
push
cs
sub
test
or
add
jbe
jno
lods
jg
add
and
fsubrs
add
addr16
inc
gs
mov
cmp
add
fidivrs
cmc
mov
xor
cmp
cmp
std
push
jbe
or
add
in
pop
das
xor
push
fcomps
cmp
push
sbb
scas
mov
mov
movsl
mov
dec
dec
cmp
outsb
dec
popa
pushf
inc
dec
in
test
jo
gs
sbb
sub
sbb
cmpsl
cmp
xor
mov
sub
aam
push
or
sub
mov
and
ljmp
movsb
add
paddd
cmp
mov
shll
mov
js
jmp
lds
call
jl
std
add
ss
mov
xorb
addr16
xor
jo
jnp
lock
outsl
and
mov
adcl
cmp
xor
gs
sbb
inc
clc
or
rolb
ja
or
and
addl
cltd
shl
mov
sti
mov
cmp
test
sbb
dec
aas
cli
push
je
inc
bound
rcrb
inc
insl
mov
cmp
rclb
lea
or
jge
mov
jecxz
inc
int
push
jns
inc
les
dec
or
pop
pop
mov
lock
pop
or
sbb
je
or
aas
jle
mov
mov
js
pop
mov
std
inc
leave
or
xor
jbe
cmp
add
add
jne
addr16
jns
pop
movl
cmc
pop
xor
pop
cli
pop
or
fs
cld
rcrb
cmp
adc
aam
shll
insl
bound
dec
jmp
test
call
fstpl
inc
xchg
pop
mov
and
mov
push
mov
mov
in
push
push
push
jecxz
adc
pop
pop
xchg
push
pop
data16
xor
imul
jl
xor
sbb
shl
push
and
push
inc
jns
inc
mov
mov
mov
cs
jne
xchg
popf
adc
sbb
add
push
cmovne
arpl
pop
mov
daa
sub
leave
jl
mov
jg
and
dec
vpperm
orl
jp
jae
pop
jmp
sahf
fucomp
jecxz
dec
push
jb
xorl
ficomps
mov
jmp
sub
push
jg
mov
xchg
mov
cmp
or
cmp
push
aaa
cmp
sbb
adc
mov
add
loope
sbb
scas
dec
das
test
or
pop
aad
jp
imul
arpl
push
push
cs
jge
filds
xchg
or
jb
and
add
stos
sbb
repz
ja
roll
fisttpll
imul
mov
nop
and
fdivrl
in
dec
leave
dec
push
sbb
mov
push
bound
and
jo
and
xchg
loopne
sar
popf
stc
inc
xlat
into
cli
hlt
jno
add
cmp
xor
xor
xor
sub
xor
out
xor
xchg
cs
pop
and
ss
jns
add
push
or
inc
jbe
jne
pusha
add
adc
fcoms
add
add
sbb
push
jl
push
insb
xor
push
pop
cld
jo
shrl
stc
fsubs
inc
je
js
inc
sub
pusha
inc
or
sbb
rcrb
sti
or
sbb
push
aad
fwait
repz
xchg
mov
jo
dec
imul
push
push
push
lea
cli
sahf
imul
insl
push
fsts
or
fldt
mov
ds
inc
popa
sbb
push
pop
enter
jb
sub
imul
aam
xor
push
sbb
insb
in
in
jle
lret
mov
pop
repz
pop
adc
and
test
addr16
adc
in
or
cmp
data16
inc
dec
ret
sti
jb
outsl
adc
test
lock
pop
data16
ja
enter
mov
mov
mov
push
jo
adc
inc
and
cmp
and
xor
jnp,pn
js
sub
inc
loope
xor
rcrb
in
test
mov
dec
sub
sub
xchg
aas
fildl
in
inc
push
insl
push
pushf
xor
pop
inc
out
das
mov
sub
cmpsb
inc
outsb
add
int
inc
fldenv
out
lret
cs
aad
lahf
add
inc
fwait
sub
xchg
push
xor
mov
subl
ss
xchg
or
daa
stos
inc
outsl
ds
mov
jecxz
add
into
dec
xorl
es
std
cmp
xchg
or
test
addl
pop
int3
and
shll
nop
orb
sub
dec
test
sbb
dec
push
sbb
add
pushf
mov
inc
aaa
cwtl
mov
mov
out
dec
popf
daa
add
fisubrl
dec
popa
pop
or
sub
push
pop
mov
jns
push
mov
das
ret
test
hlt
mov
add
inc
call
imul
push
ss
mov
inc
add
sub
xchg
and
xchg
insb
int3
out
in
xchg
in
jle
sub
sbbb
je
or
adcl
xchg
jno
inc
in
mov
add
mov
mov
lods
ljmp
inc
enter
xchg
sbb
sub
cwtl
cmovle
ret
leave
push
adc
lret
sub
cmp
imul
bound
sbb
push
xchg
push
sbb
fsubs
pop
shlb
pusha
and
push
push
enter
dec
not
jb
pushf
xchg
inc
incb
mov
mov
scas
iret
mov
pop
or
jg
js
test
mov
mov
xor
push
pop
and
jo
jne
lcall
push
dec
mov
push
sub
sub
push
ja
add
outsb
mov
xor
loopne
push
js
and
pop
les
mov
mov
xor
gs
add
dec
inc
repnz
push
dec
mov
cmpsl
cli
hlt
enter
das
fs
divl
mov
cs
out
stc
inc
adc
push
movaps
sub
inc
adcl
dec
andb
mov
adc
and
js
push
inc
mov
mov
adc
dec
add
dec
test
in
ds
addr16
sbb
dec
ja
push
popa
addl
dec
rcrb
push
out
or
movsb
push
hlt
add
in
pop
pop
jne
sbb
out
pop
push
mov
das
xchg
cmpl
inc
dec
sbb
cwtl
inc
mov
in
add
popf
roll
ror
pushf
or
pop
ja
cmp
add
mov
jne
mov
push
or
adc
sbb
xchg
scas
imul
xor
addr16
imul
imul
pushf
mov
outsb
movsl
push
xchg
jp
inc
xchg
ja
popa
lcall
iret
adc
sub
ja
sbbl
add
and
fisubrs
dec
adc
lds
sti
inc
cmp
jle
push
out
mov
int
adc
mov
mov
popa
scas
popa
xchg
out
scas
pop
xchg
sub
push
out
daa
inc
lods
popa
fisttpll
pop
push
pop
xor
fldcw
test
pusha
cmp
dec
js
mov
mov
sbb
inc
xchg
mov
int
sub
outsb
cmc
and
lahf
add
clc
add
dec
call
pop
inc
jg
dec
sub
mov
mov
xchg
movl
adc
mov
jl
enter
loop
or
sub
xchg
test
sub
cmp
fidivs
dec
adc
add
sbb
aas
jecxz
xchg
push
cmp
shl
xor
xor
xchg
push
mov
rcrl
lret
imul
cmp
adc
pop
int3
or
imul
mov
idivb
or
fbld
jg
sub
mov
ss
mov
call
outsl
dec
aam
sub
push
ja
repnz
or
test
pop
or
insb
arpl
jno
mov
pop
push
pop
in
adc
call
lahf
push
inc
lods
inc
inc
mov
xchg
enter
sbb
dec
cltd
or
sub
icebp
push
insl
push
jl
jns
movsl
test
out
cmp
in
in
mov
lds
push
xchg
fisttps
xchg
xchg
fisubrs
out
rcrl
push
mov
cmp
std
mov
sub
inc
jnp
int
dec
jmp
lock
push
dec
and
or
loop
mov
hlt
lret
and
in
imul
jo
arpl
jecxz,pt
cmp
fs
out
std
cmp
add
sbb
insl
cld
fmuls
jo
stos
pop
sub
sub
inc
icebp
je
sub
dec
jo
pmulhw
lahf
push
ret
and
leave
cs
dec
test
jbe
push
adc
mov
and
mov
lret
push
push
xchg
lea
fisubs
mov
je,pn
jne
or
cltd
inc
je
jle
jecxz
push
ds
sti
les
adc
stos
dec
scas
mov
insb
into
fcmovu
aad
pushf
push
fsubp
rolb
xchg
xchg
mov
jae
mov
push
adc
jnp
mov
sbb
mov
dec
and
lret
lret
stos
xor
dec
jno
test
pop
sbb
imul
xchg
cmpsb
push
cli
arpl
mov
je
cmpsl
add
cmp
gs
leave
clc
add
push
sbb
inc
mov
cmc
or
mov
dec
out
repnz
ficompl
jle
or
idivb
sbb
mov
insb
jge
ja
cli
out
push
in
sub
adc
xor
xchg
dec
iret
outsl
inc
add
and
daa
add
dec
inc
orb
ljmp
lock
dec
sbb
mov
push
fdivrs
pop
std
sbbb
cwtl
jae
xchg
inc
stos
stos
je
sub
mov
adc
xchg
jle
clc
mov
inc
bound
arpl
add
fstps
pop
jmp
data16
pusha
movsl
into
dec
add
mov
sub
push
in
es
or
pop
push
xchg
testl
fsubl
jns
sub
adc
or
and
mov
mov
adc
les
imul
cmp
push
fs
aad
gs
dec
fistl
aam
or
sbb
mov
push
stos
adc
mov
idivb
hlt
and
data16
jl
inc
dec
xchg
sub
cld
jbe
out
jne
sub
in
and
or
not
fcmovb
push
faddp
adc
jle
adc
movsl
jle
bound
cmp
in
stos
pop
arpl
adc
repz
shl
mov
sbb
push
and
pop
dec
mov
pop
push
xchg
push
xor
pop
lret
mov
sar
mov
sub
cli
pop
jle
lock
sar
inc
xchg
fdivl
xor
jnp
jge
push
leave
xorl
push
sub
sub
cmp
aas
loop
aas
leave
jge
test
insl
fwait
xor
or
outsl
les
fdivs
push
leave
xor
mov
adc
bound
shrl
mov
jnp
push
xor
pop
lods
sub
dec
stos
push
adc
jb
dec
jl
dec
ficoml
jge
cs
call
mov
mov
imul
mov
mov
test
popf
mov
adc
adc
mov
data16
xor
cmc
push
add
push
js
dec
push
loop
sbb
enter
xor
push
adc
jo
loop
mov
rorl
and
je
inc
imul
adcb
and
sub
rclb
cmc
inc
addr16
cs
push
push
icebp
icebp
arpl
adc
and
rcrl
negb
jle
ja
dec
jge
lcall
xor
cli
cmpl
sub
testl
mov
ss
int3
mov
insb
cmp
hlt
dec
loopne
imul
iret
add
mov
pop
es
mov
cmc
sbbl
cmp
enter
and
scas
cmp
pop
fs
add
sub
cs
or
adc
pop
mov
dec
dec
jb
inc
jl
pushf
out
rcl
popa
dec
clc
dec
adc
clc
inc
inc
hlt
int
dec
out
pusha
inc
out
inc
je
dec
dec
addl
es
lock
bound
leave
inc
pop
jo
test
mov
sub
jle
sub
xchg
int3
xor
inc
in
imul
les
test
mov
loope
fisttps
cmp
xor
jmp
cmp
ja
push
ljmp
outsb
dec
sbb
dec
inc
pusha
jno
loope
dec
inc
sbb
adc
inc
movsl
dec
call
mov
rclb
jge
inc
jno
dec
mov
pop
jl
sub
pop
notb
and
inc
inc
icebp
test
pop
mov
dec
push
inc
mov
mov
xchg
xor
xor
mov
and
jg
les
movb
pop
xchg
pop
mov
repz
xchg
pop
popf
call
shrb
ret
fadds
adc
stos
enter
pop
push
pop
in
mov
insb
cmpsl
testl
aaa
repnz
mov
sub
dec
in
cmpsl
sbb
ret
inc
out
fisttpl
pushf
sub
js
psraw
inc
inc
lret
pop
subb
inc
jnp
jmp
bnd
sbb
std
std
adc
and
mov
sbb
outsl
fcomp
jne
pop
or
pop
mov
out
nop
mov
fimuls
adc
ja
inc
and
lret
ret
add
cli
out
sub
push
cmc
pop
jge
push
push
and
in
outsb
jno
dec
je
dec
pusha
in
or
hlt
inc
rol
rcll
in
inc
inc
jmp
cmp
mov
inc
pop
and
push
das
inc
mov
popa
and
je
das
dec
and
les
inc
cld
fwait
add
and
dec
inc
aas
sbb
sbb
bndstx
shrb
push
inc
fdivs
ds
js
push
mov
fsts
out
fsts
mov
adcl
pop
loopne
pop
xchg
sub
push
jle
out
lds
push
imul
add
sbb
sbb
jae
inc
xlat
repnz
add
fstp
mov
clc
or
clc
or
daa
xor
movl
xor
mov
inc
ds
jge
jo
mov
add
pusha
inc
adc
fwait
jecxz
add
int
mov
xchg
push
push
dec
jb
shll
fsubr
and
lret
ficomps
mov
lret
mov
cmpsb
or
dec
xor
dec
adc
sbb
pop
inc
popf
imul
insb
lock
sbb
sub
jb
or
jecxz
xchg
idiv
pop
cld
adc
dec
xor
popa
cmpsb
add
jg
or
stos
leave
xor
or
fistl
in
call
sbb
or
sbb
mov
jp
pop
mov
pop
cmp
dec
and
add
lret
push
push
pusha
cld
pop
repz
add
insb
push
push
out
cld
cmp
push
int
int
pop
cwtl
rorb
xchg
mov
cmp
addb
sbb
call
push
gs
or
stc
mov
daa
jmp
mov
enter
pop
int3
inc
neg
push
push
dec
daa
dec
mov
ret
subb
pop
stc
and
arpl
sub
push
dec
adc
mov
mov
das
dec
ret
movsl
sub
addr16
push
xchg
mov
lods
movsl
dec
pushf
push
mov
stos
popf
push
inc
dec
adc
lock
inc
out
adc
adc
dec
out
in
fwait
stc
adc
sbb
and
stc
cld
cmp
pusha
sub
sbb
or
add
outsb
xchg
fisubrl
in
or
sbb
js
or
jl
prefetch
mov
scas
jno
dec
inc
xchg
pushl
fcom
decl
arpl
lods
rolb
mov
lcall
adc
add
jg
add
popa
jmp
mov
stc
add
mov
cmp
push
icebp
maxps
push
into
cltd
mov
cmp
sbb
ret
dec
push
aam
push
outsb
mov
and
or
mov
pop
add
mov
inc
adc
xor
add
pop
loope
sub
pusha
xchg
ss
pop
inc
in
adc
in
cltd
lret
das
jle
test
or
aam
sub
test
adc
mov
scas
ds
rorw
je
mov
ss
add
cmpsl
inc
cmp
repz
and
fldcw
orl
popa
jno
dec
cmp
scas
insl
inc
mov
inc
dec
mov
das
insl
sub
xor
dec
xor
outsl
sbb
aam
xor
add
push
mov
fildl
add
push
shl
pop
fcomp
xchg
outsb
mov
mov
mov
mov
jns
push
loopne
mov
pop
movsb
push
xorb
or
outsl
testb
and
cwtl
or
dec
aas
xchg
outsw
sbb
aas
and
dec
mov
je
nop
jmp
in
push
push
or
into
je
jl
js
pusha
idivb
fcoms
xorl
aas
xor
jl
or
xor
std
loop
inc
js
mov
sbb
or
and
aam
outsb
outsl
mov
mov
fsubrs
xor
arpl
outsb
aad
xor
push
xor
scas
xor
sbb
xchg
movsl
imul
in
xchg
out
test
push
stc
xchg
jg
jnp
scas
or
cld
adc
pop
bound
stos
enter
imul
in
fnstsw
insb
mov
dec
aad
push
psubsw
cld
dec
mov
jns
mov
sbb
repz
cmp
jns
imul
xor
push
aam
adc
jbe
fwait
pushf
stc
dec
sbb
push
fistpll
sbb
out
add
xor
cld
mov
repnz
outsb
cmp
or
dec
lret
mov
sarl
dec
adc
fcomps
adc
in
cmp
adcb
mov
fisubl
int
loopne
xor
or
xor
mov
xor
xchg
movsb
dec
sbb
aaa
ja
add
xor
cmp
xchg
in
xor
add
loop
cmp
adc
or
lcall
jge
repnz
lods
lret
aaa
test
push
lahf
adc
aad
scas
add
in
fs
out
adc
adc
and
arpl
lcall
or
fs
cmc
pop
sbb
mov
dec
jp
out
xchg
int3
das
fs
int3
add
push
push
jl
psubq
repnz
mov
cmp
fstpl
xor
lods
punpckldq
cmp
in
dec
add
rcll
adc
cltd
add
and
sub
mov
out
ja
fnstsw
lods
add
aad
or
dec
shrb
fadds
xor
leave
insb
lock
aam
push
cmp
sarb
xchg
insb
jb
js
idivl
inc
jl
or
dec
xor
push
outsl
sub
aad
add
add
enter
and
addl
pop
or
and
jae
pop
adc
ret
jbe
jl
jle
push
xchg
divb
pop
xchg
xor
sbb
lea
pop
dec
adc
loope
dec
mov
xor
sub
xor
ds
jecxz
inc
sub
in
adc
mov
ja
xor
jp
mov
pop
outsl
dec
xor
outsl
push
ficoms
loop
lods
mov
clc
add
mov
add
jae
outsl
aas
aas
push
pop
loop
xor
push
jno
jne
fnstenv
pop
jmp
push
dec
xor
mov
adc
and
popa
or
dec
aas
cwtl
or
hlt
jge
out
xlat
push
jo
pop
push
push
call
cld
jo
fwait
adc
fs
mov
push
fsubrs
addr16
ljmp
pop
and
rclb
or
scas
fcoms
jge
into
lock
mov
pop
push
inc
sub
pop
jle
adc
test
inc
subb
or
sub
cmp
sub
out
aad
push
pop
xor
inc
aas
inc
inc
jno
sub
or
push
xchg
sarl
sbb
scas
jae
add
scas
fdivs
jge
mov
adc
mov
fs
push
imul
sbb
mov
adc
in
or
arpl
leave
bound
jns
sbb
in
roll
sbb
cmp
rolb
mov
test
pop
pop
xchg
test
loop
sbbb
leave
repz
push
or
outsb
jg
sbb
popf
push
pop
addb
cmp
xchg
mov
pop
inc
sub
shlb
jno
js
sub
test
cmp
dec
xor
dec
pop
push
adc
loop
or
mov
sbb
es
loop
shlb
cmp
loop
sbb
mov
in
or
xor
lret
or
das
dec
xor
xchg
mov
dec
data16
adc
jl
sbb
add
adc
aas
xor
outsb
xlat
inc
repz
cmp
xor
cmp
mov
xchg
int
xchg
xchg
test
xchg
into
jg
add
jle
pop
xchg
fdivl
pop
xchg
sbb
and
jge
adc
jg
dec
dec
mov
adc
in
mov
xchg
lahf
addr16
jno
jnp
and
inc
mov
pop
pop
adc
stc
test
add
cwtl
fcompl
push
aad
pop
stc
jle
popa
in
cmp
stc
aad
pop
push
xchg
cmp
test
daa
push
icebp
mov
mov
shrb
pop
out
test
jae
fmul
dec
in
lahf
addr16
sbb
pop
imul
rcrb
mov
and
into
stc
lahf
or
pop
test
cmp
and
jge
xor
pop
arpl
xor
out
add
cmp
loopne
daa
fdivrs
daa
hlt
jp
dec
mov
inc
sbb
adc
or
loopne
fldcw
sbb
jnp
out
push
xchg
mov
cmp
idiv
jo,pt
sbb
lahf
ds
daa
xlat
pusha
shll
mov
xor
imul
pop
data16
pop
or
imul
xchg
or
dec
xor
sub
push
pop
inc
popa
shll
push
xorb
aas
cmp
adc
sub
jb
jb
jl
das
xor
arpl
push
out
sub
and
sbb
and
pushf
lahf
mov
mov
inc
dec
fisubrl
out
adc
adc
lock
add
jae
sbb
gs
jl
sbb
call
stos
inc
es
xor
jno
call
sbb
xorb
gs
data16
jge
pop
cmpsb
jge
ljmp
mov
sub
test
pop
outsl
xchg
fdivp
js
add
xchg
jno
or
fwait
adc
js
sbb
xchg
iret
pop
mov
xor
gs
pop
pop
popf
sub
jae
adc
add
subb
add
mov
push
negl
pop
jb
outsb
out
outsb
adc
xorl
arpl
and
add
xchg
out
xor
push
imul
and
loop
sbb
cltd
mov
pusha
adc
jnp
pop
inc
adc
dec
and
jb
daa
sbb
sbb
adc
add
cs
add
cld
outsl
repnz
adc
push
dec
outsb
cmp
jns
es
ja
ficomps
js
int
mov
or
adc
cwtl
add
cld
pop
sbb
mov
sub
cwtl
fildll
dec
sub
jge
cli
mov
in
fadds
fisttps
mov
lea
lea
inc
pop
mov
jl
pop
fstps
push
jbe
das
ljmp
sarb
sub
mov
ficomps
xchg
jge
jnp
imull
and
sub
fiaddl
or
and
mul
test
daa
cld
mov
call
lret
or
jne
xchg
sarb
jbe
test
insl
cmp
adc
sbb
enter
jbe
xor
jecxz
push
jl
pop
or
sbb
data16
mov
jne
std
fcmovbe
and
pop
add
push
and
sahf
cmp
jns
or
inc
insb
lcall
sbb
dec
add
mov
or
icebp
insl
pop
adc
loopne
scas
cmp
inc
sbb
mulb
test
decb
mov
scas
gs
xchg
lock
mov
jns
sbb
insb
cli
movsl
enter
pop
cs
imul
jge
inc
fdivr
jmp
sbb
inc
or
lock
leave
push
inc
mov
imul
adc
inc
dec
loop
in
xor
lret
lds
push
jecxz
mov
adc
ret
and
adc
aas
sbb
mov
lahf
xchg
xlat
mov
sub
xchg
in
xor
pop
push
mov
xchg
ret
je
in
mov
call
es
adcb
jbe
xor
sbb
rorb
adc
push
dec
dec
lock
mov
cli
aad
negl
add
inc
lret
test
or
dec
sub
mov
in
push
jl
in
cwtl
repnz
lret
adc
das
aas
xor
outsb
mov
out
in
xor
out
out
push
sub
das
and
daa
das
aad
loopne
aad
dec
jecxz
dec
mov
xchg
push
into
sub
dec
dec
andl
enter
fidivrl
sbb
ret
add
or
jg
xchg
dec
mov
movsb
test
loopne
mov
sub
test
fcomps
push
and
sub
clc
dec
dec
aam
push
jno
adc
js,pt
testb
pusha
ja
mov
and
ds
int3
dec
add
xchg
std
std
mov
cmp
aad
push
jmp
or
andl
or
jl
addl
add
and
jae,pt
in
fstps
pop
jae
aas
mov
hlt
sbb
and
jnp
lods
fmuls
fstl
pop
aam
js
add
pminsw
sahf
sub
push
ljmp
mov
insl
cmp
es
test
cmpsl
cld
xchg
dec
sub
fidivrl
test
xorl
push
inc
dec
jmp
push
push
jne
inc
sbb
adc
test
cwtl
lock
fsub
jns
push
push
sbb
mov
push
push
cwtl
lcall
sub
push
dec
sub
pop
push
popa
test
push
xor
cld
stc
lret
cmpsl
mov
pop
pusha
mov
shl
je
cmp
sbb
test
pop
dec
dec
in
enter
and
pop
mov
lock
cmp
sbbb
test
sbb
outsl
mov
inc
jnp
popa
dec
test
roll
int
or
inc
pusha
aad
jg
pop
jb
dec
adc
push
mov
in
int
in
sbb
aam
clc
pop
xor
add
sbb
imul
popa
mov
or
jg
pop
adc
dec
push
push
out
pop
pop
or
inc
and
add
loope
adc
dec
mov
fwait
movsb
les
cmpsb
xlat
test
mov
xorb
insb
test
pop
stos
insl
mov
out
jmp
cmp
repnz
and
push
insb
sti
add
bound
shrb
cmp
sbb
xchg
push
jnp
inc
mov
bound
pop
pop
lock
sub
fdivrs
in
dec
int3
mov
pop
movsb
push
inc
sarb
stc
sbb
xor
sahf
pop
gs
add
cmp
sub
mov
dec
pushf
adc
clc
sub
in
test
xchg
je
inc
test
mov
mov
lods
or
push
push
cmp
adc
and
pusha
jp
jae
dec
inc
sbb
xor
pop
and
adc
das
push
lahf
sub
dec
inc
test
pop
dec
in
aad
xor
int
cmpb
mov
inc
cmpsl
mov
sti
pop
dec
fs
inc
les
xchg
lods
pop
insl
mov
jle
xor
sub
pop
push
xor
test
and
int3
dec
fcoms
dec
cwtl
dec
fcoml
mov
jns
jno
mov
push
inc
jp
jns
and
pusha
dec
xor
inc
and
or
jb
dec
sub
fmuls
mov
lods
cmc
push
in
test
test
mov
mov
scas
cld
mov
mov
mov
test
jb
sbb
rcrl
or
rorb
jle
js
bound
xchg
cmp
jne
mov
inc
popa
dec
test
inc
popf
jg
mov
mov
push
push
pop
push
outsb
or
pop
arpl
push
pop
addr16
dec
inc
call
adc
inc
dec
ja
addb
sbb
and
push
int3
pop
pop
or
jl
insl
push
mov
jno
cltd
cmp
sbb
clc
xor
stos
dec
push
xchg
outsl
fdivs
shlb
test
aaa
fidivl
inc
jmp
aad
in
push
push
or
popf
inc
out
pushfw
cmp
int3
scas
jo
adc
mov
mov
mov
sub
sub
cmp
pushf
lret
fadds
push
push
mov
pop
xor
pop
inc
mov
pop
xor
push
stos
popf
or
pop
in
jge
push
push
pop
inc
add
adc
fldcw
pop
sbb
orl
pop
sbb
mov
cmc
adc
vcvtsi2ss
pop
cltd
rcl
sbb
stos
mov
outsl
and
ficompl
xor
mov
les
push
cmp
subb
movsb
fsubrl
or
std
mov
pop
int
fs
pusha
test
fimull
pop
scas
sub
pop
and
push
notb
insl
pushf
insl
inc
push
shrb
outsb
jge
push
aam
jge
lock
test
or
in
or
mov
or
arpl
sub
inc
pop
out
pop
jo
push
mov
or
cmp
and
pusha
fwait
pop
cmp
popf
pop
or
ljmp
test
imul
mov
adc
push
shrb
cltd
pop
popf
lret
or
xchg
mov
xchg
loopne
mov
push
and
xchg
fmull
test
ret
push
jl
push
aam
mov
cmc
outsb
rcll
xchg
aam
push
lods
stos
pushf
fimull
sahf
xchg
aad
fs
aaa
xor
dec
mov
push
and
negl
jbe
pop
add
dec
pop
ja
test
out
or
pop
mov
mov
push
test
mov
mov
or
pop
xchg
rolb
enter
jns
mov
xchg
jg
pusha
jecxz
lea
inc
aaa
add
push
int3
jge
rorb
pop
mov
pop
test
dec
mov
jge
jnp
insb
dec
mov
push
pop
pop
or
fldcw
cwtl
arpl
popa
push
clc
xor
mov
outsl
repz
ret
dec
mov
pop
insl
adc
fdivrp
pop
out
fs
mov
outsb
add
outsb
stos
fwait
punpckhwd
and
xor
in
ss
pop
mov
in
jbe
loope
daa
mov
xchg
sbb
jge
pop
xchg
dec
test
mov
aas
mov
lahf
mov
lods
jnp
push
push
pop
scas
daa
std
cmp
xchg
rorb
push
xor
data16
sbb
push
push
lcall
jbe
adc
pop
inc
aaa
ror
ds
jne
cmp
shl
or
inc
rorl
or
lock
fs
add
jnp
pushf
imul
shll
jnp
imul
ror
jne
aad
iret
push
xor
add
push
ret
in
or
mov
mov
mov
jnp
or
shl
or
pop
sti
popa
pop
stc
outsb
add
push
mov
jnp
or
mov
out
std
sbb
call
fnstenv
dec
fimuls
lret
out
iret
pop
fstps
subl
fcomp
sub
mov
lea
xor
mov
nop
inc
or
or
stos
mov
mov
ljmp
push
push
xchg
push
push
push
push
push
adc
xor
or
mov
push
push
std
mov
cmp
pop
push
stos
or
push
push
insl
jnp
iret
sti
pop
inc
or
adc
add
push
pop
bound
add
repz
mov
cwtl
add
pop
pop
popf
in
ror
jmp
shlb
lahf
fimull
mov
lcall
pusha
push
scas
jmp
adcb
or
mov
jae
push
mov
cltd
push
jae
add
push
mov
in
adc
pop
stos
int3
adcb
mov
xor
or
gs
jbe
leave
xor
aad
call
sub
xchg
cwtl
pop
or
push
je
add
adc
add
lcall
jg
test
shll
jb
fstpl
xor
jb
inc
cmp
aam
sub
aam
dec
aaa
aam
push
jbe
hlt
test
xor
xchg
in
sbb
sub
pop
call
dec
cmc
in
mov
es
outsb
xchg
add
push
sub
mov
add
aad
xlat
inc
mov
cmp
mov
sub
test
lods
ljmp
lods
inc
and
aam
movsl
adc
insl
xchg
and
sub
cld
lods
imul
mov
in
subl
cmp
call
mov
outsb
push
sti
sbb
addr16
add
js
dec
inc
in
inc
shlb
pushf
es
xchg
shrb
and
adc
cwtl
popf
inc
jp
mov
test
mov
sarb
test
repnz
lods
popa
and
xchg
jo
loope
or
cld
xor
cmp
jl
mov
push
mov
xor
dec
xor
adc
mov
dec
mov
jno
outsb
popa
jl
mov
adc
inc
jge
add
gs
ds
inc
sub
icebp
inc
jne
fsubs
in
push
hlt
mov
bnd
adc
ds
aas
jge
pop
pop
outsb
jno
jne
addr16
push
mov
rcl
dec
clc
sbb
mov
or
idivb
lock
mov
stc
mov
nop
addr16
sbb
test
jmp
mov
sub
and
xor
pop
movsb
inc
aam
mov
mov
lea
sbbb
mov
fcmovu
jns
adc
sbb
aam
loop
rclb
sub
mov
loopne
mov
enter
arpl
cmp
sbb
loope
dec
adc
push
stc
je
sub
out
push
xchg
je
inc
mov
dec
ljmp
sub
jb
dec
mul
into
dec
sahf
dec
in
or
lock
pop
and
shll
push
sub
dec
or
sti
inc
sub
leave
mulb
xchg
loope
int3
pop
mov
mov
sahf
adc
addb
insb
jb
sbb
scas
jg
add
pop
dec
out
adc
cmc
adc
loopne
jns
inc
outsb
jns
addr16
sub
sbbl
sub
decb
pcmpeqb
push
xchg
sarb
pusha
stos
shl
jp
popf
push
call
outsl
push
addb
inc
inc
shll
add
mov
jp
jns
and
int3
mov
cli
jge
orl
loope
dec
adc
xor
js
fisubrl
repz
or
jnp
popa
cmp
cltd
add
sbb
sub
sbb
popf
aad
decb
in
les
dec
in
int
lock
inc
fs
and
cmp
insb
jp
je
sub
dec
and
jns
and
sbb
loop
pop
pusha
jns
arpl
sbb
adc
push
fdivrp
xchg
jg
sub
xchg
jecxz
inc
and
int3
dec
inc
sbb
add
fldl
sub
sbb
popf
xchg
jb
dec
movsl
pop
add
lods
pop
dec
xchg
push
sub
sub
pop
enter
lods
dec
mov
push
dec
je
inc
shll
add
mov
enter
out
enter
in
into
repnz
inc
push
sub
sbb
jg
xor
sub
xchg
dec
movsb
adc
inc
cwtl
stos
push
iret
adc
or
pop
mov
stos
add
xchg
adc
inc
jp
or
jge
jns
push
adc
lcall
cmp
cmpsl
cwtl
lock
add
call
mov
clc
dec
cld
dec
bound
ss
or
cld
inc
cmp
inc
cmpsb
adc
lcall
sub
or
push
push
cmp
push
xor
adc
jle
sub
cmpsl
push
xor
sub
repz
mov
in
cwtl
pop
push
pop
or
rclb
fs
and
jne
adc
cmp
clc
mov
inc
add
fcoms
xchg
loop
push
cmpl
jmp
int
sbb
jl
ljmp
inc
push
cwtl
adc
mov
int3
sub
movb
push
cmpsl
sbb
push
or
cs
dec
and
or
fsubrs
adc
lret
rcl
fs
rol
xor
pop
cmp
and
lahf
out
xor
pop
push
add
xor
and
mov
sub
pop
and
sub
inc
sub
sbb
cmc
xchg
mov
faddl
add
sub
push
testb
into
fstp
sub
adc
insl
sub
dec
push
add
jg
ja
jne
inc
and
or
or
add
idivl
sbb
das
jb
dec
imul
mov
jb
add
testb
cld
push
sub
add
or
test
scas
in
rcrl
pop
insl
inc
sub
sbb
push
aam
mov
nop
aam
adc
lahf
xchg
mov
aas
sbb
mov
rolb
sub
push
xchg
daa
add
mov
inc
in
adc
lea
xchg
sub
int
adc
mov
iret
cli
dec
mov
add
push
pop
int
push
add
sahf
or
loop
mov
mov
mov
leave
and
jmp
cli
xchg
sub
jmp
sbb
jne
inc
mov
xor
test
or
add
in
les
jle
sub
into
and
iret
cmp
rorb
repnz
push
imul
in
push
or
adc
das
neg
call
lock
add
test
cmpsl
push
push
movl
dec
push
rclb
jno
sti
adc
lods
out
push
sbb
in
jns
loope
popa
cmp
dec
out
adcb
loop
inc
xchg
popa
cmp
frstor
add
jbe
adcl
inc
cmpb
sbb
sbb
ds
or
insl
lea
js
les
das
pusha
cmp
fdivrs
imul
jp
inc
xor
sub
adc
pop
mov
mov
cmp
shrl
movsl
out
xor
sti
imul
pop
sub
popa
cs
adc
xor
dec
call
aad
and
outsb
mov
jl
insl
and
pop
in
add
pop
cmc
arpl
daa
lcall
sbb
sub
sbb
inc
mov
mov
test
sbb
mov
or
cli
add
mov
leave
sbb
sub
inc
sti
or
or
jge
test
aad
sub
mov
fbstp
and
ljmp
pop
sbb
and
scas
pop
and
inc
dec
push
cs
mov
adc
es
data16
ds
ret
adc
or
cmp
inc
int
adc
push
pop
pop
and
aad
and
inc
mov
js
sbb
aas
xor
into
pop
negb
xor
aam
or
fs
or
int
jb
and
cltd
ja
out
mov
loop
iret
lcall
mov
pop
xor
imul
fldenv
push
das
mov
inc
xor
iret
sbb
aad
cli
dec
loopne
or
jge
pop
mov
loope
gs
xor
inc
push
cli
adc
cld
cli
int3
out
inc
or
cltd
faddp
jp
enter
and
and
sbb
cmp
jg
and
ficoml
movq
mov
jle
sbb
push
dec
data16
aas
insb
or
add
fstl
int
clc
and
in
imul
bound
movsl
adc
movsb
sub
mov
jae
pop
adc
pop
out
inc
movsl
jle
cmp
jnp
shll
push
adc
cs
pop
adc
je
dec
roll
pop
rorl
push
shll
push
shrl
mov
sahf
ror
scas
sar
mov
rcrl
out
sarl
push
insb
pop
dec
push
jp
dec
jp,pn
dec
jp,pt
dec
dec
jp
dec
pop
jp
dec
outsb
jp
dec
jle
into
dec
stos
jp
dec
mov
jp
dec
fidivrl
inc
mov
pop
dec
jl
daa
dec
mov
pop
jle
and
cmp
int3
mov
push
mov
into
xchg
clc
sbb
mov
sub
mov
xchg
mov
mov
mov
movsl
xchg
outsb
xor
jnp
pop
lahf
sbb
and
lahf
cmp
sbb
mov
rcrb
mov
ret
nop
pushf
push
push
call
das
mov
call
mov
inc
ljmp
into
scas
clc
or
mov
mov
push
dec
mov
xchg
mov
outsb
sysexit
xor
xor
test
outsl
and
push
out
inc
into
push
repz
xchg
push
nop
push
jp
ds
mov
insb
sbb
add
inc
xor
and
jle
and
jle
and
cmp
imul
data16
jno
mov
xor
xchg
sbb
xor
pusha
das
sbbl
out
stos
je
outsb
add
je
shrl
rcr
pushf
rol
lods
ficompl
pop
jge
fisttps
jp
dec
icebp
jl
pop
pop
xchg
jg
inc
xchg
daa
mov
mov
lahf
mov
mov
and
aas
insl
addr16
into
mov
loopne
pop
push
das
mov
cmp
adc
aad
ret
push
adc
dec
pop
jp
dec
jb
ret
dec
rcll
push
push
push
add
je
cmc
sbb
fs
fs
les
xchg
push
push
je
shrl
test
xor
jle
cmovb
adc
ds
arpl
mov
call
xchg
cmpsl
mov
les
and
aaa
and
jle
and
jle
and
jle
and
jle
and
jle
and
jle
and
cmp
int3
iret
nop
cltd
int3
cmpsb
nop
scas
int3
xchg
mov
sub
dec
sub
cmp
add
sub
ja
sub
ja
sub
cmp
xor
mov
dec
lcall
pop
or
in
adc
lret
sub
cwtl
lods
xor
xchg
and
xor
sbb
push
filds
sbb
call
xchg
inc
mov
cs
jns
and
mov
lcall
mov
rclb
mov
jle
and
cmp
int3
fs
push
fbld
lock
pop
push
adc
adc
es
adc
es
shlb
sahf
adc
cmpsl
adc
es
adc
es
mov
push
push
into
inc
sti
push
into
jb
es
cli
ss
inc
into
add
push
into
xor
data16
adc
fistps
repnz
ja
sub
ja
sub
ja
sub
stos
clc
push
bound
push
mov
jp
ds
cld
sbb
or
outsb
das
cmp
jle
sub
mov
fisubl
sahf
loope
lret
je
int3
rcll
shll
idivb
cmp
fs
bound
imul
imul
sahf
jl
lret
mov
shrb
sbb
dec
es
imul
xor
xor
imul
xor
cmc
imul
jle
and
or
fdivrl
sub
js
das
push
sbb
sbb
xchg
aad
clc
xor
cmc
imul
xor
test
in
cmp
ret
js
inc
ret
dec
lahf
jne
pop
lahf
gs
stos
ret
aas
and
jle
or
push
cmp
sub
ja
sub
mov
add
sub
roll
push
inc
sbb
jle
inc
or
cmp
cmpb
xchg
jp
dec
lods
mov
rcrb
ret
mov
cmp
call
pusha
nop
push
int3
js
jge
sub
or
int3
xor
cmp
sub
xchg
std
ja
sub
ja
sub
ja
sub
ja
sub
jle
cmp
pusha
sub
js
dec
ja
sub
dec
mov
ja
sub
ja
sub
ja
sub
ja
sub
ja
sub
ja
sub
ja
sub
ja
sub
jl
inc
ja
sub
dec
sub
push
sub
ja
sub
ja
sub
ja
sub
ja
sub
ja
sub
ja
sub
rorb
mov
je
and
jl
cmp
push
mov
xor
pusha
mov
sub
mov
int3
mov
mov
test
mov
rclb
jp
dec
sub
dec
and
mov
in
and
mov
mov
xchg
xchg
cld
mov
aam
mov
fs
in
lock
cld
out
movsb
clc
add
js
inc
mov
insb
lea
mov
mov
mov
enter
lock
mov
mov
in
test
lods
sahf
pushf
inc
movsl
push
xchg
push
push
imul
loopne
jp
dec
inc
jns
es
adc
es
adc
es
adc
xor
stc
cltd
rol
cltd
fadd
jmp
xorb
dec
push
or
pop
hlt
add
inc
hlt
sbb
dec
hlt
cmp
add
push
rorl
shll
sarl
lret
and
mov
cmp
aam
jmp
and
movsl
push
aad
dec
insl
jl
inc
ja
sub
pushf
repz
jl
ror
sbb
pop
into
or
sti
into
nop
sti
in
enter
pop
and
push
pusha
push
push
push
jbe
jecxz
loop
lret
into
cmp
push
sbb
mov
or
mov
cmp
mov
sub
mov
cmp
push
mov
mov
stos
addr16
sub
push
hlt
mov
popa
outsl
mov
jle
and
je
cmp
imul
das
jecxz
mov
mov
add
hlt
and
add
mov
and
lds
mov
hlt
xor
ss
jbe
sti
mov
push
mov
sub
lcall
inc
or
pop
inc
xlat
adc
fwait
imul
jle
and
or
cmpsl
inc
adc
in
sahf
mov
int3
or
rol
std
pop
ret
pop
repnz
mov
stc
push
addr16
pop
into
sar
or
xor
outsl
mov
push
xor
push
pop
inc
ficomps
int
mov
es
cmp
call
shll
call
repnz
mov
and
xor
mov
push
inc
or
int3
jg
jge
inc
sub
sbb
jns
mov
fnstenv
call
sub
and
jle
or
test
out
out
adc
mov
insb
dec
out
sbb
sub
jno
rcrb
adcl
data16
push
stos
inc
mov
mov
dec
fs
lahf
adc
or
mov
mov
sbb
jne
and
jle
and
jle
and
mov
and
jle
and
nop
inc
int3
inc
nop
sbb
aaa
iret
sub
ds
das
mov
cmp
sub
or
jp
sahf
push
sub
push
cmp
push
or
push
int3
inc
cmc
push
les
push
faddl
jne
int3
add
cld
out
push
sbb
das
lods
mov
push
cli
js
icebp
dec
or
adc
dec
into
sbb
inc
xchg
ds
add
ja
or
cmp
jo
xchg
push
mov
rcrl
mov
nop
mov
out
fadd
mov
mov
xchg
mov
test
jl
inc
jne
sahf
int
jb
rcll
xor
cmp
push
jl
and
jo
shl
pushf
roll
rcrb
inc
and
scas
fistps
int3
xor
pop
es
jp
sahf
jne
int
imul
sbb
fs
xor
subb
mov
lahf
xor
push
push
push
jp
dec
sub
inc
push
sbb
push
adc
push
inc
sub
mov
fisubs
xchg
push
repnz
xchg
jmp
repnz
into
mov
dec
scas
mov
adc
and
dec
in
leave
int3
lock
ror
nop
stc
int3
rclb
jb
pushf
pop
mov
cmp
int
je
push
hlt
test
iret
hlt
stos
shl
mov
xchg
hlt
mov
hlt
shll
neg
push
push
push
je
stos
push
jp
dec
es
cwtl
push
inc
xchg
sbb
or
cmp
fimull
sub
ja
sub
ja
sub
ja
sub
ja
sub
jne
lahf
jnp
sti
test
push
push
mov
jb
es
je
rcll
inc
roll
push
sahf
push
add
ffreep
loop
iret
mov
jle
and
jle
and
jle
and
push
fs
pushw
addr16
es
adc
inc
jp
iret
sub
cltd
aas
lds
cltd
stc
fwait
lds
dec
mov
ret
push
je
iret
sub
sbb
adc
jl
or
dec
std
pop
adc
push
jl
pop
push
ja
mov
xchg
mov
sub
popa
inc
or
imul
jns
push
lahf
es
mov
js
mov
jg
imul
jp
outsl
jbe
je
out
das
ja
or
xchg
mov
int3
adc
mov
adc
das
mov
les
jnp
sahf
cmp
ret
sbbl
push
push
pusha
lds
call
mov
xor
sbb
outsl
ds
mov
inc
lret
jne
test
aad
pop
jle
and
jle
sbb
mov
jno
je
into
addr16
mov
xchg
dec
je
shl
int
popf
call
fisubrs
xchg
jl
or
lea
int3
ja
test
push
inc
fs
ljmp
dec
cmpb
mov
add
mov
lcall
and
or
nop
inc
fildl
stos
sub
addr16
cli
sub
js
jae
aaa
jb
pop
mov
sbb
push
outsb
out
sahf
lds
loopne
xchg
cltd
pop
mov
mov
pop
dec
out
adc
mov
lret
jl
adc
or
sbb
push
xchg
inc
bound
push
lahf
sbb
dec
mov
cmp
xchg
stc
xchg
pop
xor
jecxz
std
jno
dec
and
ret
aad
pop
or
sbb
test
je
das
jb
lea
fcomps
sahf
das
int3
sbb
adc
cwtl
dec
pop
fs
jne
dec
and
scas
into
cli
cli
mov
mov
sbb
add
call
pop
mov
andb
mov
mov
dec
mov
add
das
push
sbb
dec
push
cmp
adc
jle
and
lahf
inc
rorl
into
out
iret
mov
xchg
push
insb
sub
int
into
mov
add
shll
add
pusha
mov
pushf
dec
arpl
call
divb
push
mov
sub
xlat
adcb
shrb
inc
loope
mov
or
hlt
add
into
call
lock
ljmp
ret
leave
les
incb
in
xor
mov
popf
aam
mov
xchg
mov
shll
stc
les
mov
and
idiv
jo
cmp
pusha
into
and
jl
and
jle
and
inc
int
clc
xchg
mov
xchg
mov
jle
and
outsb
pop
mov
and
sbb
xchg
jo
jo
mov
sahf
fstpl
pop
mov
push
sub
sbb
jnp
xchg
xchg
incl
aad
movsb
xor
imul
lods
js
mov
jne
and
xor
imull
mov
sti
mov
jle
and
push
into
pushf
pop
das
sbb
insb
sbb
repnz
cmp
fwait
or
push
and
adc
push
aam
test
clc
and
call
stc
adc
pop
popa
cmp
pop
sbb
inc
imul
idiv
mov
ror
clc
in
in
data16
jnp
inc
push
inc
inc
jo
pop
inc
pop
mov
inc
and
cwtl
popa
fildll
sub
scas
cwtl
jnp
inc
adc
rcrl
ss
push
gs
mov
mov
mov
in
add
nop
and
push
sbb
inc
daa
xor
jns
iret
call
in
lods
sub
inc
xor
push
cmpsb
push
xchg
pop
pop
push
push
clc
les
enter
sub
jmp
shlb
dec
cmc
loopne
jle
dec
push
xor
xor
xchg
es
mov
std
adc
sti
sub
or
jp
std
cmp
call
dec
adc
int3
pop
pusha
and
fisubs
js
xor
sbb
and
mov
adc
push
nop
ds
pop
nop
and
out
int3
int
lock
stos
mov
fs
mov
imul
mov
sub
lds
mov
call
pop
pop
cli
fistl
mov
cli
push
pop
pop
pop
into
or
mov
lcall
inc
ret
inc
lahf
retw
das
sahf
sub
push
xor
fs
push
mov
cltd
sub
imul
xor
in
in
mov
loope
sahf
lcall
and
cmp
pop
sbb
mov
push
fsubs
mov
sbb
pop
and
xor
iret
cld
ftst
cmp
jbe
xor
shlb
mov
jle
inc
inc
dec
or
pop
addb
daa
push
scas
js
or
das
mov
packsswb
aaa
filds
js
dec
sbb
mov
pop
push
xor
pop
xor
add
dec
push
jle
call
pushf
cltd
mov
sub
mov
xchg
faddl
aaa
jge
arpl
mov
call
icebp
mov
xchg
pop
jle
sub
imul
pop
adc
or
adc
sub
lahf
push
push
adc
and
cmp
sbb
loop
add
jle
dec
jmp
and
ret
dec
mov
mov
shll
and
fiaddl
inc
arpl
cs
push
sbb
sahf
and
and
mov
imul
in
xor
fs
mov
test
pop
lock
dec
sbb
das
adc
inc
add
jo
es
push
repz
je
shr
mov
fwait
addr16
pop
push
cli
cmp
push
or
mov
aam
into
sbbb
sub
jp
adc
mov
sbb
pop
es
push
int
mov
call
imul
gs
shll
dec
les
int3
fcoms
xchg
int3
mov
ss
push
daa
arpl
aaa
push
dec
loope
mov
fs
sub
dec
push
cltd
in
cli
jl
and
push
addr16
jle
and
jle
and
jle
and
sahf
iret
sbb
jns
nop
in
imul
iret
sbb
sub
ret
jmp
ja
movl
mov
packuswb
dec
jne
dec
pop
sub
lods
add
and
inc
leave
stos
mov
xchg
xor
loop
adc
stc
mov
pusha
imul
stc
and
mov
mov
das
pusha
add
sub
in
push
stos
fs
lret
or
adc
dec
das
sbb
icebp
sbb
fbstp
dec
lahf
lcall
js
stos
sbb
scas
bound
cmp
adc
or
and
push
hlt
lods
jge
or
push
mov
push
bndstx
add
mov
stos
xor
cmp
mov
sti
popa
cmp
and
mov
push
sub
stos
xor
les
sub
xchg
mov
pop
adc
ljmp
and
sbb
or
jo
insb
nop
aad
mov
pop
adc
loopne
sahf
insb
sub
pop
fs
dec
mov
mov
enter
dec
out
lahf
rol
std
lahf
cli
ret
ficompl
push
mov
call
jg
sbb
iret
decl
xor
stos
pop
imul
xor
xchg
cmp
mov
xchg
fsts
pop
xor
push
inc
sub
dec
popa
loope
push
xchg
fs
iret
mov
sub
inc
sbb
adc
inc
ljmp
xor
push
testb
repz
and
xlat
cwtl
mov
jnp
dec
and
inc
push
sbb
adc
mov
xor
inc
ja
aaa
js
shlb
outsl
in
cmpsl
sahf
stos
pop
adc
je
dec
push
jb
inc
rcll
add
mov
pop
cli
lret
push
inc
int3
sarl
dec
sbb
andl
jle
push
loopne
xchg
sti
int3
iret
test
sub
and
jle
and
pop
pop
outsb
dec
int3
dec
mov
push
hlt
jno
mov
adc
xor
das
xchg
sbb
mov
cltd
mov
aaa
push
push
add
nop
scas
int3
xchg
mov
pop
in
ja
dec
orl
or
dec
test
inc
inc
cmp
jle,pt
and
inc
rcl
ret
mov
add
mov
cmp
dec
push
fwait
sahf
adc
sub
or
add
mov
dec
int3
addr16
aaa
push
push
ror
popf
cmpsl
add
jae
xchg
nop
adc
push
nop
xor
pop
inc
adc
sub
pop
roll
or
enter
cmp
xor
sub
aaa
lea
push
push
sbbl
xchg
in
mov
repnz
insb
xor
inc
shll
mov
sbb
pop
or
dec
push
push
jns
leave
hlt
cmpsl
jg
or
mov
call
fnsave
dec
out
mov
cmp
pop
cmp
shll
adc
inc
lcall
jle
pop
pop
std
enter
xor
mov
cli
ficompl
adc
dec
push
movsl
cmp
jo
sub
cltd
jp
dec
cltd
jb
ficompl
roll
sbb
push
js
shlb
int3
cmpsb
sahf
mov
sbb
das
sub
mov
xorl
sahf
mov
push
fstpt
pop
data16
and
sub
andl
scas
pop
cli
and
or
data16
and
lods
push
repnz
inc
push
rolb
pop
add
push
je
movb
ds
jle
inc
out
aaa
xchg
jl
mov
movsl
and
pop
jns
adc
call
mov
mov
jp
jmp
dec
arpl
push
aad
jbe
push
lahf
iret
mov
scas
shl
sbb
mov
cmp
jmp
push
sbb
insl
pop
out
data16
insl
xor
cld
scas
push
pushl
mov
cltd
dec
icebp
loope
femms
and
sub
mov
cmpb
mov
bound
jno
pop
dec
xchg
pop
mov
push
movsb
sbb
dec
sbb
xor
mov
jmp
loope
cltd
sahf
mov
out
mov
je
sub
mov
aam
and
cwtl
cmp
dec
popa
mov
std
mov
les
pop
push
int3
jmp
or
je
xor
icebp
sahf
bsr
mov
imul
sbb
out
out
xor
out
xchg
addr16
sub
je
mov
bound
pop
inc
sbb
mov
add
and
lahf
insb
mov
aaa
cltd
push
je
jg
or
and
mov
sub
ja
sub
lock
sti
mov
jnp
add
pop
mov
mov
mov
stos
push
xchg
add
outsb
sub
sub
cmpb
pop
insb
xor
scas
and
adc
and
jo
dec
dec
into
or
mov
push
movsl
and
add
cmp
daa
push
push
jmp
mov
mov
jnp
jnp
sub
shlb
adc
cli
xchg
orl
notb
imul
mov
sti
dec
std
out
mov
daa
cld
dec
and
adc
test
push
xchg
cli
fmuls
inc
je
iret
mov
pop
sbb
adc
push
fisubrs
push
sahf
sahf
add
sbb
adc
xlat
rorl
call
ror
nop
mov
ja
sub
loopne
outsl
mov
xchg
dec
aad
mov
dec
mov
aam
popf
imul
lods
xor
into
cli
sbb
test
add
loope
mov
adc
lret
dec
int3
je
into
sti
cmpsb
lahf
data16
pop
jne
mov
add
inc
inc
lods
test
add
les
push
in
xor
popf
fs
mov
fsubrs
mov
sbb
sbb
js
in
into
xor
jp
push
pushf
in
je
or
into
pop
les
or
sub
push
icebp
xchg
bound
lods
pop
lods
fsubrs
movsb
test
sbb
imul
add
cmp
int3
sub
adc
cmp
add
xchg
sub
mov
dec
cwtl
jp
dec
test
cld
dec
mov
mov
cltd
xchg
arpl
rclb
jl
push
dec
fisttps
jo
mov
imul
jle
sbb
jnp
lods
push
xor
inc
inc
or
jge
mov
testl
shll
je
shl
test
les
in
int3
iret
xchg
mov
dec
pushf
sahf
dec
cltd
filds
push
nop
inc
mov
push
pusha
inc
push
adc
sbb
enter
and
sub
ja
dec
js
mov
sahf
or
sbb
xor
xchg
jb
iret
sub
mov
or
sub
sti
loop
aad
clc
mov
or
sub
cltd
add
jecxz
sahf
int
push
xchg
popf
or
push
xchg
lock
fsubr
xor
aam
mov
in
das
mov
in
call
jo
dec
ret
test
sub
fs
mov
sbb
insl
shrb
mov
call
ds
adc
fdivrs
imul
imul
inc
jge
inc
push
sbb
push
jge
push
notl
jge
mov
inc
fsubrs
mov
jb
cltd
mov
nop
push
sbb
push
cmpsb
inc
jne
or
pop
outsb
mov
pop
jo
push
add
lock
mov
inc
cmpb
pop
popf
adc
test
dec
and
aam
cld
push
jl
callw
xlat
pusha
shlb
in
lahf
fcoml
pop
sbb
jge
sub
or
sub
push
pop
gs
dec
shll
push
dec
sbb
jmp
daa
test
mov
in
cmp
sbb
sub
jge
enter
sub
or
push
or
cmp
add
rorb
xor
dec
xchg
inc
or
add
fcmovnu
xchg
ds
sbb
or
pop
or
push
dec
push
movsl
push
xor
xor
pop
notb
shrl
stos
sbb
sbb
pop
and
xor
les
sbb
push
into
outsb
clc
mov
sbb
popf
sbb
shrd
sbb
pop
mov
pop
mov
or
and
imul
or
enter
xchg
jp
roll
cwtl
cld
jo
pop
notb
pop
cmp
pusha
loope
push
aas
push
and
push
aam
inc
xor
jns
pop
sub
add
xor
mov
fdivr
jbe
imul
inc
xor
mov
and
pusha
push
sbb
and
fimull
cmp
push
jecxz
ds
testl
adc
iret
lds
add
sub
xor
push
jle
inc
int3
cmp
inc
fstpl
outsl
jae
popa
fbstp
adcb
jp
pop
xor
stos
xchg
sbb
cmp
inc
hlt
jl
repz
or
push
mov
cmp
dec
and
inc
cmp
or
loope,pt
jle
pop
jns
push
xchg
pop
sbb
sbb
lldt
idiv
cmpsb
adc
cmp
shll
es
pusha
imul
les
jo
add
decb
aas
pop
jns
xchg
adc
popf
jmp
call
pop
daa
and
inc
sub
push
test
loopne
mulb
xchg
push
sbb
mov
sbb
mov
in
push
jle
adc
sbb
imul
pop
and
mov
sub
cmc
aad
pop
xor
push
cmp
cmp
neg
or
inc
sub
sbb
test
pop
cwtl
jle
adc
sbb
ds
jp
insl
ret
ss
int3
adc
dec
xor
sbb
sub
sub
adc
xor
mov
xor
jl
push
cmp
mov
cmp
and
sbb
enter
sub
mov
jle
push
pop
sti
sbb
aaa
xor
mov
cmp
xor
addl
ds
cmp
xor
and
jb
dec
pop
dec
std
adc
movsb
rcrl
in
mov
nop
ljmp
inc
aaa
insb
or
inc
stc
lock
adc
jo
int3
push
addb
into
testb
out
inc
add
test
sub
xor
fadds
and
push
and
add
fiadds
leave
data16
int
nop
add
jg
dec
outsl
add
mov
ds
popf
inc
xchg
push
mov
xchg
ss
gs
in
int3
outsb
dec
mov
mov
add
insl
xchg
jge
sbb
inc
inc
push
xor
jp
and
cmp
xlat
aam
sub
push
xor
add
popa
cmp
inc
in
ss
sbb
mov
adc
mov
aas
int3
sbb
icebp
mov
sub
test
sub
cmp
je
and
lds
in
mov
xchg
js
fcmovnu
setp
faddp
adc
xchg
ja
sub
jg
xchg
fisubl
pusha
pop
push
into
fbld
or
je
cmovp
push
loope
jl
inc
addr16
add
and
xchg
mov
ds
push
test
pop
xchg
push
out
and
int
ss
test
jecxz
inc
arpl
mov
ja
je
sahf
ss
cmp
add
pop
jb
pop
adc
pop
ljmp
sbb
int
sbb
inc
jle
les
ss
hlt
cmp
inc
daa
repz
lods
clc
mov
xor
or
loop
ss
dec
out
mov
sbb
rolb
testb
rolb
in
cli
insb
addr16
or
dec
sub
dec
int
sbb
mov
ret
subl
sub
inc
push
jp
sbb
cmp
gs
movsb
jo
push
icebp
test
add
iret
inc
or
aad
add
std
push
jae
dec
jno
fnsave
adc
sub
jl
add
mov
mov
push
adc
dec
jns
gs
mov
addr16
adc
adc
push
ret
cli
cmp
shrb
pusha
cmc
sbb
std
cmp
ficoml
inc
aaa
dec
or
popa
pop
inc
dec
or
add
jo
xchg
adc
ja
lcall
adc
push
inc
pop
rolb
call
pop
sub
sub
mov
mov
or
btc
bts
adc
movzwl
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
shr
add
shl
dec
add
shr
test
movzbl
btr
jmp
lcall
ret
or
add
bswap
bt
btc
dec
sub
test
add
btc
jmp
lcall
xor
add
add
pop
xor
xchg
push
and
bt
xor
btr
shr
or
bsf
call
lcall
incl
ret
neg
sub
sub
sub
mov
mov
shl
shl
btc
jmp
lcall
mov
test
shr
add
xor
btc
add
mov
mov
xchg
push
push
xchg
dec
add
add
call
test
and
add
sub
shl
sub
dec
add
mov
adc
not
and
bt
test
adc
bts
xor
mov
shl
sub
xchg
mov
movzbl
not
shl
test
or
and
adc
jmp
lcall
ret
or
btr
btc
neg
test
test
bsf
and
btc
call
lcall
add
xorl
pop
xor
xchg
push
movzwl
cmp
bsf
test
add
bsf
or
jmp
lcall
stc
add
xchg
ret
neg
sub
mov
shl
not
cmp
mov
xor
mov
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
cmp
not
xor
inc
shl
or
mov
and
or
jmp
lcall
push
add
adc
clc
and
testl
dec
bts
btc
shl
add
add
mov
test
inc
test
shr
adc
not
mov
mov
dec
call
lcall
add
xor
cmp
bt
cmp
mov
or
sub
call
lcall
push
add
aam
mov
movzbl
xor
neg
adc
movzwl
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
bts
bsf
not
neg
mov
shl
test
bt
adc
call
lcall
push
adc
shl
add
sub
adc
mov
jmp
lcall
cld
outsb
cmp
sti
btr
bt
xor
bts
cmp
or
mov
btc
bt
xor
cmp
cmp
mov
bts
neg
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
bt
dec
cmp
and
sub
bts
test
or
push
not
bsf
and
btr
or
bts
bt
test
shr
add
adc
bt
cmp
movsbl
not
shl
dec
inc
not
bt
add
mov
xor
bts
and
shr
add
or
btc
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
inc
btc
or
btc
mov
mov
bt
and
mov
and
call
lcall
add
dec
mov
cmp
sub
cmp
shl
sub
neg
mov
add
bsf
bts
test
test
add
mov
neg
bt
sub
mov
btr
or
bt
shr
shr
xor
or
call
lcall
mov
bsf
xor
movswl
cmp
adc
not
dec
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
adc
mov
xor
cmp
not
add
add
shl
shr
neg
bsf
test
or
bt
neg
bsf
cmp
cmp
jmp
lcall
neg
inc
neg
mov
not
sub
test
and
mov
add
dec
xor
bsf
or
bsf
cmp
adc
test
call
lcall
add
shl
btr
test
btc
and
adc
not
cmp
add
not
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bsf
neg
adc
mov
add
btc
adc
btr
sub
mov
cmp
test
add
sub
sub
test
btr
movswl
bsf
not
mov
shr
or
cmp
add
cmp
cmp
mov
mov
add
test
shr
bt
bt
bt
inc
btc
bts
lea
inc
cmp
jne
btr
xor
xor
bts
shr
add
mov
add
xor
test
cmp
test
shr
cmp
test
call
lcall
je
movsbl
shl
adc
sub
add
bt
or
test
sub
mov
test
shr
shl
add
cmp
or
sub
dec
call
lcall
mov
adc
bts
cmp
shr
bt
cmp
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
test
btc
add
add
dec
bsf
bts
call
lcall
movsbl
cmp
xor
adc
bt
bts
shr
shl
add
mov
shr
dec
mov
btr
bt
neg
btr
cmp
jmp
lcall
aam
mov
shr
bt
add
shl
add
mov
add
bts
sub
sub
test
and
adc
add
dec
call
lcall
add
btc
test
bts
btc
neg
and
or
push
pop
inc
add
loop
xor
cmp
test
add
add
cmp
test
push
decl
mov
add
shr
bsf
btr
and
adc
neg
btr
shr
call
lcall
jmp
mov
sub
test
bsf
bt
cmp
add
shl
push
shll
bsf
add
bt
sub
sub
sub
add
push
and
neg
mov
cmp
cmp
and
bts
sub
mov
btc
shr
mov
dec
or
sub
and
push
push
pop
add
add
call
mov
shl
adc
shr
adc
dec
and
cmp
xchg
add
shr
btr
btr
test
sub
shr
mov
shr
not
adc
add
btr
shr
add
btr
cmp
call
lcall
mov
shlb
cmc
dec
and
bsf
bsf
bts
test
bsf
add
xor
mov
mov
cmp
bts
shr
btc
add
call
lcall
test
movzwl
and
cmp
bt
neg
neg
btc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
cmp
shl
mov
xor
shr
add
sub
not
xor
add
xor
shl
inc
test
xor
call
lcall
mov
bt
shl
bswap
or
bts
adc
bsf
mov
bsf
bswap
cmp
mov
and
test
and
cmp
je
dec
adc
adc
xor
or
xor
cmp
or
add
add
inc
add
test
cmp
or
sub
call
lcall
sub
shr
add
add
test
shl
btr
or
sub
adc
add
and
or
cmp
add
test
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
shl
xor
bsf
add
bt
adc
bsf
btc
push
decl
mov
add
and
and
test
mov
cmp
neg
dec
sub
sub
push
decl
mov
add
add
sub
btc
bsf
shr
bswap
bts
shr
and
add
sub
test
and
adc
xor
or
cmp
dec
jmp
test
mov
bt
adc
inc
movsbl
cmp
inc
add
add
mov
btc
adc
bt
cmp
or
cmp
adc
mov
bts
and
bsf
add
bt
cmp
or
cmp
add
add
add
test
neg
add
or
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
sub
sub
adc
or
shr
bt
mov
adc
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
bt
not
sub
add
cmp
shr
adc
push
push
adc
mov
add
cmp
inc
sub
test
test
cmp
push
sub
mov
btc
bts
and
btr
inc
shr
cmp
shl
mov
shr
shr
not
shl
neg
btc
mov
xor
neg
call
lcall
js
jmp
and
test
cmp
adc
and
bts
adc
lea
cmp
or
shl
movzbl
cmp
bsf
bt
mov
add
shr
sub
shl
shr
bts
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
adc
jmp
ret
adc
xlat
neg
cmp
mov
bsf
xor
sub
mov
or
xor
and
mov
btc
or
bts
not
push
and
and
shr
sub
mov
bt
shr
sub
push
xor
add
xor
sub
movswl
sub
or
bsf
push
btr
shl
shr
adc
test
bt
bt
add
call
lcall
mov
adc
add
inc
sub
and
movzwl
or
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bsf
or
shl
bt
or
shr
adc
inc
call
lcall
sub
mov
shr
bt
or
adc
test
adc
add
add
shr
xor
cmp
btr
cmp
btc
inc
and
call
lcall
mov
xor
movzbl
and
btc
adc
and
sub
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
addb
or
add
pushf
xor
add
xchg
push
or
xor
test
dec
jmp
dec
cmp
mov
mov
out
pop
or
xor
or
fmull
adc
rolb
lcall
mov
add
cmpb
adc
bound
inc
mov
add
dec
out
and
test
sbb
mov
rolb
js
clc
add
mov
jle
add
add
xor
enter
ret
cwtl
pop
std
scas
ljmp
test
inc
adc
int3
add
xor
xchg
pop
sbb
pop
adc
add
sar
mov
clc
pusha
sbb
mov
nop
jo
rclb
add
cs
orl
sbb
and
pop
or
add
dec
or
fsubl
sbb
sbb
xchg
mov
push
push
add
shlb
sbb
add
nop
inc
mov
subl
out
mov
aad
jp
call
add
mov
xor
inc
dec
inc
push
dec
push
mov
inc
aaa
cmp
pop
mov
push
shll
cmc
xor
mov
pop
iret
push
push
pop
add
xor
lock
inc
cmp
dec
push
inc
push
mov
cmp
push
rolb
cmp
mov
aaa
into
inc
cmpsl
xor
in
jle
dec
ljmp
push
push
inc
inc
incb
push
inc
inc
dec
inc
loope
add
dec
add
dec
inc
addl
push
xchg
inc
cwtl
push
aaa
xor
inc
dec
inc
inc
inc
dec
dec
push
cmp
push
hlt
ss
cmp
pop
out
dec
cltd
push
push
cs
movsl
dec
dec
or
inc
aad
cmp
pop
pop
inc
dec
loop
push
pop
inc
cmp
repnz
cmp
jns
je
out
dec
and
jb
fiadds
jle
ss
fstl
cmp
cli
mov
mov
das
sub
outsl
jae
and
jne
push
cmpsl
jb
mov
decb
je
jns
cs
std
cmp
push
ja
insb
cmp
sbb
scas
sbb
or
push
push
inc
cli
mov
outsl
adc
jo
add
push
push
push
imul
shlb
stc
push
gs
mov
inc
jo
mov
outsl
outsb
jae
es
mov
cs
jle
js
adc
pop
cmp
adc
pop
ss
dec
out
cs
sbb
divl
aam
inc
repnz
call
mov
imul
leave
pop
fnstenv
push
add
inc
dec
jmp
xchg
and
outsb
mov
call
sbb
adc
stos
mov
add
push
cld
mov
inc
push
push
je
or
xor
inc
pushf
call
js
sbb
add
adcb
gs
xchg
fs
xlat
mov
addr16
stc
test
push
and
dec
je
or
loope
fisubrs
das
or
les
leave
or
fs
je
cmpsl
aaa
data16
lahf
mov
leave
xchg
das
jne
jnp
hlt
js
jo
insb
fs
xor
stos
push
xchg
inc
push
or
dec
popa
jns
dec
mov
mov
shl
pushf
add
aam
add
sbbb
dec
add
push
inc
push
inc
pop
xor
fs
jne
pop
push
lret
or
dec
inc
sahf
add
pusha
