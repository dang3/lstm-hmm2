push
or
add
add
add
rclb
add
add
push
rclb
add
adc
add
add
add
push
add
add
add
adc
add
add
add
push
adc
add
add
add
jp
add
adc
outsl
rcll
add
rcll
add
rcll
add
add
add
add
jae
add
rcl
adc
xor
adc
pushf
rclb
add
adc
mov
add
add
adc
rcl
add
add
rclb
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
cs
dec
dec
add
xor
xor
inc
dec
dec
add
push
push
dec
dec
dec
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
dec
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
and
add
add
add
add
add
add
add
int3
sbb
add
inc
add
call
or
add
add
in
pop
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
inc
add
jns
add
rclb
add
mov
sub
and
sbb
lret
xchg
nop
xor
aas
or
scas
push
sahf
jmp
mov
int
cmpsb
in
les
dec
and
stos
jg
cltd
dec
rcll
nop
aaa
in
imul
adc
xchg
push
push
mov
jge
shll
dec
inc
sbb
jb
xor
adc
jp
sub
jmp
inc
gs
daa
pop
js
and
les
testl
dec
push
xor
xchg
jae
mov
mov
je
dec
dec
or
imul
adc
sbb
mov
shl
jns
mov
push
fimuls
rorl
test
pop
aad
loopne
scas
jl
arpl
mov
cmp
cmp
push
stos
fdivr
sti
arpl
rorb
mov
and
int
int
stc
jl
lret
and
xlat
cmpsb
fstp
shrb
inc
sub
add
loope
xchg
jo
jnp
popa
out
insb
sbb
aas
mov
mov
scas
rorl
xlat
cmpsb
sub
mov
pop
ja
fcomps
push
adc
cmp
dec
cmc
scas
lds
jns
js
adc
ret
inc
stos
xor
or
mov
push
jle
movsl
xchg
push
fwait
xor
or
adc
pop
mov
loopne
std
and
pushl
xchg
test
mov
arpl
lahf
jmp
sbb
dec
add
imul
jp
and
out
sub
scas
cmp
jl
xor
cmp
outsl
stos
cmp
iret
jo
push
and
jle
out
adc
or
dec
subb
push
adc
xchg
shlb
add
xor
shl
cmp
jae
xor
pop
jmp
adc
arpl
subb
insb
push
popf
xchg
das
cli
mov
pop
sbb
or
idivl
fs
inc
xlat
aaa
rcrb
dec
mov
jae
xor
and
in
mov
faddl
jb
scas
xor
hlt
and
aaa
add
mov
lea
cld
jmp
pop
dec
out
out
pusha
push
rcrl
jmp
sub
aam
lcall
adc
sbb
cmp
xchg
rolb
mov
adc
imulb
in
and
bound
lcall
xchg
inc
pop
roll
inc
pop
inc
aad
jbe
into
es
fs
push
dec
or
or
mov
in
stc
mov
popf
sbb
xchg
mov
xlat
std
insl
popa
push
pop
addr16
mov
pop
dec
ret
mov
cmpsl
jns
mov
imul
cmpsb
mov
mov
fistpll
roll
dec
add
ljmp
lahf
cmc
aaa
imul
jne
orb
jae
es
mov
imul
sar
lock
xor
add
push
out
test
xchg
fsts
hlt
insb
sahf
inc
cmp
mov
cmp
and
inc
int
call
mov
jno
jl
dec
nop
lahf
xorb
jnp
repz
xchg
push
push
int
inc
insb
pop
movsl
loope
imul
pusha
cmp
jle
and
mov
sub
dec
popa
arpl
adc
adc
fsubrl
std
sub
xor
mov
inc
jne
xchg
icebp
jbe
add
cmpsb
gs
out
jcxz
mov
pusha
ljmp
push
inc
inc
dec
xchg
push
loope,pn
call
stc
mov
jmp
js
in
add
int3
call
xor
shll
loopne
lcall
pop
rcll
fildll
fildll
aad
rcrb
mov
in
inc
dec
imul
and
ret
xor
mov
pop
jo
push
fcom
mov
cld
cmp
leave
xchg
lret
add
popf
fcmovu
sbb
jmp
mov
and
ds
push
cmovle
pop
ljmp
lea
sti
sbb
inc
js
push
outsb
arpl
inc
dec
mov
out
inc
mov
loope
xchg
imul
bound
xor
out
scas
lcall
cmp
fimull
dec
pop
fstpt
mov
dec
fstps
daa
adc
adc
or
ret
inc
adcb
loopne
test
mov
pushf
in
add
shrb
adc
mov
lods
xchg
ss
cld
test
mov
sub
leave
or
pop
jmp
and
loopne
pop
dec
jae
ret
test
sub
das
loopne
pop
push
push
dec
rcrl
mov
rolb
jnp
mov
jns
mov
popf
or
push
mov
push
or
xchg
adc
push
jmp
stos
inc
gs
or
popa
mov
mov
pop
inc
cmpsb
xor
mov
adc
daa
movsb
inc
mov
and
push
popa
pop
xor
jmp
js
addr16
movsb
adc
mov
loopne
push
cmp
mov
add
mov
sub
sbb
mov
addr16
and
test
xor
adc
into
push
inc
setb
or
mov
jl
inc
sbb
sbb
lods
addr16
add
adc
mov
add
inc
movsb
jp
xor
addr16
cltd
pop
jmp
jp
insl
lock
idivb
jno
cmc
sahf
int3
pop
stos
jae
xchg
mov
jo
inc
or
adc
sarb
out
lret
sbb
xor
fwait
or
lds
jecxz
jle
lahf
gs
mov
cmp
mov
cmpsb
fiaddl
jmp
call
popa
mov
loopne
push
pop
xlat
jge
fs
sahf
adc
push
loop
jno
loop
dec
aam
or
shll
popf
test
aad
inc
call
pop
cmc
push
jno
adc
mov
insl
adc
leave
outsl
hlt
mov
imul
movsb
sub
dec
or
push
outsl
mov
push
daa
nop
add
lret
pop
mov
and
subl
test
cmp
xchg
aaa
dec
and
pop
adc
jns
pop
inc
xchg
xor
cmovno
orb
cltd
pop
sahf
jl
inc
cmc
inc
xchg
leave
int
inc
jno
ds
das
mov
outsl
mov
nop
pop
jge
push
cmp
adc
ret
loope
pop
inc
jns
sub
into
repz
xchg
inc
shll
sbb
adc
fisubl
lret
jge
mov
cmp
stc
sbb
cmp
sbb
in
add
lahf
es
mov
cmpsb
arpl
xor
xchg
or
arpl
mov
or
inc
xchg
out
test
stc
adc
mov
fisttpl
jecxz
mov
sbb
cmp
xchg
in
mov
fbld
mov
mov
mov
pop
outsb
mov
mov
stos
outsl
daa
in
or
xlat
cld
in
push
call
into
hlt
fcompl
or
sbb
mov
adc
aaa
mov
inc
xor
je
popf
mov
dec
test
lcall
popf
out
outsl
imul
sbb
clc
mov
aad
cmpsl
cmp
jbe
js
or
mov
lret
and
loopne
jl
mov
inc
mov
nop
push
jmp
scas
xchg
or
cmpb
inc
imul
arpl
mov
out
jb
aas
sub
jns
mov
push
arpl
mov
ds
es
rcrb
push
adc
inc
test
rcl
cmp
repz
enter
popf
push
aaa
sub
iret
and
add
and
mov
sbb
mov
cs
mov
cmp
fwait
jg
push
clc
mov
push
push
push
nop
fiaddl
cmpsl
xor
rolb
add
push
out
insb
mov
enter
test
sarb
outsl
pop
xlat
rorb
loopne
pop
adc
fcmovnbe
loop
outsb
push
mov
lret
or
mov
xor
aam
repz
jae
push
fldcw
out
jnp
jne
movsb
sbb
pop
cmp
andl
add
xlat
sub
and
test
movsb
outsb
std
mov
push
dec
lods
mov
push
pop
lahf
insb
in
fidivrl
add
in
or
add
les
jl
movsb
paddw
jmp
jg
pop
cltd
push
ss
sbb
outsb
loopne
cltd
sarl
lgs
fmull
jge
test
popa
xchg
mov
adc
ret
mov
rorl
cmpl
pop
xorl
and
mov
andl
in
jae
dec
xor
ret
ja
or
mov
or
adc
shll
push
loopne
and
fidivrs
rclb
pop
scas
mov
mov
dec
test
das
lea
dec
push
ja
pop
repz
ljmp
aam
mov
push
stc
repnz
lds
inc
cmpl
add
dec
dec
push
jmp
cltd
xchg
es
sarl
xchg
mov
cmp
je
add
push
notb
aaa
jle
dec
movhlps
add
xchg
pop
or
add
cmp
mov
xlat
dec
mov
lods
mov
sahf
or
add
leave
dec
jnp
xlat
scas
or
xchg
xor
int
movsb
sbb
jbe
mov
inc
test
enter
jle
pop
jp
cmp
mov
jp
in
movsb
aas
in
sub
ljmp
xchg
sub
mov
ss
xlat
loopne
rcl
movsb
dec
ret
xor
js
sub
cld
push
and
mov
cmp
aad
insl
mov
adc
lods
mov
arpl
mov
push
rorb
push
push
cmp
or
sbb
imul
rcrl
clc
ljmp
pop
lahf
push
fidivrs
push
or
cmpl
pop
pop
data16
adc
mov
imul
out
jne
adc
or
in
std
mov
adc
lods
jns
in
into
sbb
daa
mov
mov
loope
sub
rcrl
xor
insl
push
push
mov
dec
cmpb
jae
xchg
inc
or
mov
outsl
adc
call
add
enter
shlb
inc
je
xchg
cli
iret
and
jae
push
insb
loopne
or
aam
xchg
and
pop
shl
add
xlat
int3
imul
repz
jge,pn
lret
lods
loope
fisttpll
repz
pop
popl
loope
dec
push
pop
pushf
loop
mov
loop
pop
adc
mov
test
jecxz
ja
and
les
or
add
xor
iret
aam
sub
lcall
mov
jle
test
or
dec
push
adc
popf
pop
push
sbb
lahf
xchg
adc
gs
test
mov
out
or
mov
test
in
repz
insb
inc
out
rcr
addl
cmp
ret
inc
adc
int
cmp
addr16
sahf
add
setl
std
jle
inc
out
and
std
cwtl
outsb
sbb
lods
shr
inc
cmp
inc
jmp
mov
push
clc
xchg
sub
inc
push
fstl
and
ljmp
loop
push
push
dec
arpl
mov
aam
aam
lods
pop
aas
out
cmp
sub
repnz
sbb
push
cld
push
jno
in
in
mov
fbstp
popf
adc
sarl
repnz
aaa
ret
fisttps
xchg
mov
or
or
or
pop
push
mov
mov
fcmove
and
test
pop
xor
call
cmpsl
push
mov
inc
inc
push
xchg
stos
aas
std
inc
lret
cmp
push
pop
sbb
xchg
xchg
cwtl
inc
pop
sub
add
adc
dec
or
sarb
push
ja
dec
mov
adc
in
or
das
imul
and
sbb
xor
lods
add
pop
pop
mov
fidivrs
imul
and
ljmp
or
in
cmp
mov
into
ret
xlat
mov
lret
mov
push
and
add
ds
push
pop
ror
in
mov
jg
mov
pop
aaa
out
jg
mov
insl
stc
jo
loopne
ja
lods
xor
lahf
cmp
lea
shll
rclb
cmpsb
scas
and
fs
jbe
pop
pop
push
leave
jns
mov
outsl
adc
fdivr
in
mov
jnp
enter
dec
pop
mov
xchg
enter
pop
add
mov
add
dec
mov
add
push
inc
inc
jge
shll
push
and
stc
fprem
lret
je
add
adc
sub
xchg
jbe
push
aas
mov
iret
pop
pop
xchg
push
in
inc
int3
pop
shrl
lock
lret
das
dec
daa
mov
push
sub
popf
inc
and
xor
fisubrl
loopne
xor
arpl
xchg
fsubs
outsb
xchg
push
mov
mov
mov
mov
fnsave
cmp
pusha
adc
outsb
int
mov
loop
loope
and
inc
xchg
jne
ret
pop
sub
out
daa
pop
pushf
dec
push
cs
shl
dec
icebp
and
fimull
lcall
lret
cwtl
jne
pop
test
in
mov
lfs
cmpsb
xchg
fidivrl
push
fidivrs
icebp
mov
jmp
add
mov
lret
lret
rcl
movsl
pop
cli
test
xor
dec
adc
rcr
mov
cld
jo
sbb
sti
adc
sbb
cli
cmc
adc
sbb
ficoml
sub
and
inc
lret
push
and
mov
fidivs
jmp
lods
fmuls
loop
dec
pop
push
cltd
std
cmp
shl
jno
mov
movsb
or
adc
inc
imul
int3
fnstsw
or
push
mov
sub
add
in
ja
int3
jns
jl
xor
into
scas
in
sbb
pop
push
xchg
dec
stos
lcall
mov
popa
aam
imul
sub
aam
nop
adc
bnd
das
je
dec
add
mov
mov
iret
outsl
dec
mov
fwait
push
pop
cli
out
mov
xchg
jnp
and
add
push
mov
dec
lods
sar
lret
call
loope
push
or
adc
ja
stos
imul
roll
mov
sahf
mov
xor
or
inc
fsubs
shlb
ret
addb
sbb
pop
lret
push
mov
cmp
sub
sub
movsl
jge
sarl
lods
add
in
inc
adc
sete
and
repz
popa
testb
pop
int
sub
pop
leave
mov
lcall
and
test
ja
jb
ror
lret
mov
lods
into
notl
cs
fcoml
lret
popf
pushf
or
mov
into
imul
jecxz
movsb
push
or
sbb
mov
lock
icebp
mov
or
xchg
cwtl
negl
js
mov
mov
rcr
arpl
ja
nop
jb
adc
negb
mov
xor
out
xor
mov
aam
aad
movsb
sbb
cmpb
push
jb
push
daa
add
xlat
daa
push
into
aaa
sub
sbb
movsb
sbb
dec
cmpsl
xchg
push
in
fcmovbe
jno
xchg
nop
inc
nop
lahf
subb
xchg
pusha
jg
aam
xor
or
xchg
scas
int3
pop
add
sbb
in
push
repz
cli
sbb
sbb
cmp
pop
movsl
hlt
gs
js
hlt
or
dec
pop
addr16
nop
scas
mov
mov
enter
lret
cs
aam
cmc
call
test
lahf
dec
cmp
jne
dec
xchg
push
push
pop
and
movsb
push
jecxz
movb
add
es
fwait
cmpsb
dec
int3
xor
dec
test
fwait
and
test
xor
aad
jp
cld
mov
push
sahf
sbb
pop
fstl
test
gs
fsubs
ret
loope
jg
les
stc
mov
mov
lock
gs
aam
cltd
jb
iret
adc
and
cmpsb
ds
outsl
mov
and
frstor
dec
cmp
pop
dec
mov
popa
jo
push
imul
popf
mov
addr16
sub
mov
into
mov
test
pop
and
and
adc
jne
mov
xor
fisubl
pop
and
mov
add
cmpsl
inc
mov
in
and
jns
ret
sahf
aad
sub
mov
and
data16
imul
imul
in
and
pop
fwait
pop
and
push
outsb
fnstenv
cmp
pop
ds
xchg
dec
fs
jb
push
lret
pop
fimuls
sti
lods
daa
xchg
nop
cli
hlt
and
sub
je
mov
lea
cmpsl
sbb
stos
mov
sub
int
enter
sbb
cli
lahf
mov
push
push
lahf
mov
inc
imul
fdivrs
stos
jmp
xor
sbb
fnstsw
push
push
xchg
mov
or
je
mov
mov
in
cmp
or
pop
or
pusha
fldcw
adc
daa
out
shll
and
inc
incl
xor
faddp
cs
xchg
or
mov
repz
loopne
lods
stos
out
or
mov
sbb
fmul
in
xor
ja
pop
enter
arpl
push
stos
jno
and
inc
fs
dec
std
xor
outsb
sub
popf
jp
sar
arpl
lods
sbb
adc
outsb
push
xchg
and
mov
sbb
add
mov
mov
jnp
lock
pop
xchg
jg
push
test
fs
jle
push
sbb
iret
adc
xchg
sub
loope
data16
fwait
jge
add
push
adc
inc
repnz
nop
sti
push
inc
outsb
inc
cld
mov
subl
adc
add
stos
inc
outsl
arpl
push
cmp
cmp
xchg
lret
fisttps
dec
out
mov
cltd
insb
mov
sub
js
adc
pop
mov
cltd
scas
cmp
in
fdivs
fisubs
insb
cmpsb
and
xchg
mov
ljmp
sub
cmp
bound
cmc
push
cmp
cmc
sar
int
hlt
jmp
imul
pop
push
cmp
pop
inc
xchg
call
int3
cmpsb
jge
js
or
inc
push
mov
or
mov
outsl
and
sbb
push
dec
call
je
dec
std
negb
pop
mov
leave
imul
pusha
pushf
clc
cmpl
aas
outsb
scas
aaa
cmpsl
mov
outsb
dec
sti
mov
aad
jne
cmp
ljmp
mov
lahf
in
xchg
jg
fistpll
push
xchg
xor
cmpsb
mov
cmc
lahf
cmp
mov
icebp
cmpsb
ss
mov
or
or
jmp
or
or
sbb
ja
or
add
jbe
jle
mov
xchg
leave
fs
or
cltd
cmp
inc
dec
pop
fisttps
ret
lea
dec
mov
out
loop
test
test
enter
sub
ret
push
xor
popf
jecxz
ja
sarb
in
mov
into
xor
filds
repz
shlb
push
ja
ret
jl
inc
jge
fisubrl
pop
push
loop
icebp
mov
adc
push
mov
xchg
xor
leave
fcoms
enterw
and
pop
pop
jl
fstps
push
pop
add
jge
dec
and
outsl
sahf
in
or
dec
push
ret
inc
imul
dec
mov
jne
popa
xchg
cwtl
xchg
lea
lods
push
xor
in
imul
xlat
and
scas
mov
jno
fidivs
dec
ror
adc
pop
andb
xor
adc
lds
bound
mov
mov
push
loope
push
rsqrtps
aaa
ret
push
outsb
push
jnp
and
adc
rep
scas
push
pop
add
jbe
arpl
or
push
je
inc
cmp
inc
mov
inc
pop
xor
sbb
xchg
insl
sbb
cmpl
arpl
loope
jns
add
shr
xchg
pop
mov
push
and
lcall
pop
xchg
les
and
mov
cmp
inc
arpl
and
xor
mov
int3
jge
cld
repnz
jge
pop
and
sbb
imull
ds
test
xchg
je
sub
pushf
test
mov
mov
xor
add
bound
jmp
or
ret
or
sbb
lret
out
std
frstor
cmpsb
sbb
or
leave
jp
negl
and
mov
ljmp
dec
xchg
or
pop
sti
sub
in
and
dec
sub
cwtl
in
dec
fbld
xor
hlt
jmp
dec
and
testl
lock
rclb
jns
cmp
nop
shlb
add
insb
lret
cmp
movsl
enter
fnstenv
fsubrl
int3
inc
clc
popf
cmp
out
xor
sbb
ljmp
jecxz
sbb
movsb
arpl
xor
cmpsl
rcrl
call
addr16
mov
loopne
out
cli
sub
mov
xor
mov
xchg
dec
es
xlat
sub
cld
cltd
cmpl
add
shlb
orb
lods
xchg
xor
repnz
leave
in
sub
mov
pop
testb
jg
repz
mov
push
pop
mov
xchg
lcall
in
xor
adc
xchg
jg
bound
lock
popa
shlb
rorb
dec
lret
mov
and
mov
imul
pushf
mov
pop
mov
fildl
xor
outsb
xchg
jo
int
jle
jg
push
dec
mov
pop
or
sub
or
stos
jo
mov
or
fcomps
mov
push
dec
popa
mov
adc
pushf
xchg
jmp
ljmp
pop
cli
test
das
out
xlat
subb
inc
or
mov
adc
test
stos
scas
stos
sbb
xchg
in
dec
mov
adc
sub
xlat
xor
add
in
clc
outsb
fcmovne
jnp
sub
std
ljmp
sbb
xor
pop
lret
clc
push
sbb
test
xchg
push
and
xchg
stc
fisttpll
ljmp
push
daa
push
sub
fadds
jb
pop
pop
rorl
jae
out
nop
inc
xchg
xor
enter
inc
divb
jl
cltd
jne
or
xchg
pop
lds
orb
xor
jle
mov
dec
int3
test
adc
push
pop
push
dec
fst
out
popf
add
addr16
rol
cmp
ja
or
inc
decl
xor
jae
jg
nopl
popf
decl
and
jecxz
add
addl
repz
cwtl
inc
pop
push
jmp
push
aad
sub
xchg
stos
fdivrl
dec
adcl
ret
shlb
imul
mov
jg
and
cld
insl
mov
xor
cmp
bound
stc
lcall
imul
scas
sbb
repnz
pop
int3
xor
jnp
test
sbb
lahf
pop
push
mov
xor
imul
push
inc
jmp
out
gs
test
jg
inc
inc
fmull
or
mov
xchg
ret
jl
push
les
mov
mov
add
cmpsl
mov
jno
xchg
and
mov
mov
pushf
jmp
ljmp
pushf
mov
sub
nop
cmpsb
out
cmp
loop,pn
xchg
sbb
rclb
movsl
cmp
int3
lret
psubusw
out
imul
neg
adc
jmp
mov
xchg
das
push
push
mov
test
stos
xlat
addr16
lea
loop
loop
rsm
hlt
daa
lods
sahf
and
pop
leave
imul
xlat
repz
xor
pop
push
pop
nop
je
bnd
out
inc
ret
mov
dec
add
pop
mov
insb
sub
ljmp
add
addr16
arpl
inc
lret
dec
addr16
pop
movsl
jno
adc
push
mov
fwait
or
test
jg
lock
movsl
out
xchg
mov
mov
pop
shlb
pop
mov
inc
push
sub
filds
pop
mov
fwait
and
fs
addr16
mov
stos
mov
fisubrl
sbb
add
xlat
pop
xorb
inc
add
xor
and
add
push
cmpsb
pop
and
jmp
cmp
mov
stos
bound
daa
movsl
daa
adc
sti
pop
cmc
add
scas
cmp
adc
mov
popa
jg
inc
stos
mov
movsb
lret
outsl
jne
xchg
mov
ss
cltd
data16
cwtl
lret
xchg
mov
xchg
loopne
dec
sub
loopne
lret
or
nop
sbb
inc
pop
mov
or
push
lcall
cmc
outsb
dec
out
jl
ret
stos
imul
aaa
call
cmp
pop
rcl
popf
dec
mov
dec
test
enter
nop
iret
pop
mov
dec
ljmp
jge
lahf
movsb
adc
icebp
jl
xchg
mov
sbb
insb
adc
sub
and
xor
sti
mov
test
dec
lret
sub
adc
cmp
mov
jo
or
test
testb
filds
mov
xor
clc
dec
xor
xor
add
mov
push
push
sbb
cmp
mov
jo
repnz
outsb
into
daa
jbe
scas
adc
inc
cmpsb
leave
mov
push
sub
mov
insb
call
xor
xlat
cmpsl
insb
cltd
call
stc
mov
jecxz
ds
daa
xlat
into
fwait
notb
lock
int
cmp
fcoms
sti
push
scas
mov
popa
pop
push
out
in
mov
mov
inc
jnp
jmp
xor
push
xor
xchg
mov
test
insl
inc
push
or
popa
aam
xor
ss
mov
xchg
fldt
mov
add
fimull
cmp
and
sarb
stos
stos
adcl
mov
out
negb
xor
cmp
stos
lcall
jmp
jns
fdiv
cmp
push
movsl
bound
js
popa
jp
xchg
xchg
int3
aaa
adc
cmp
pop
mov
clc
push
sub
push
cli
and
pop
mov
frstor
pop
lods
jp
push
addr16
cltd
push
mov
cmp
xor
lret
mov
test
lret
scas
mov
push
xor
sti
push
mov
js
jne
xor
xor
push
pushf
push
pop
js
inc
xchg
push
dec
xchg
xor
int3
mov
mov
divb
loop
ror
mov
push
test
push
mov
sbbb
push
push
xor
sbb
fldt
mov
cmpb
data16
int
fnstsw
imul
jnp
adc
fwait
enter
inc
inc
mov
std
cltd
gs
loop
adc
push
xchg
xchg
rcrl
xorb
push
mov
xor
test
pop
xor
jnp
inc
inc
dec
jbe
daa
dec
rol
mov
nop
ljmp
sbb
push
xor
pop
mov
push
fldcw
mov
adcl
mov
jno
xor
lahf
lods
xchg
out
xor
cmp
xlat
sub
cmpsl
inc
nop
mov
sbb
mov
cmp
lret
xor
cmp
push
shlb
push
movsb
arpl
xlat
es
cmp
cmp
iret
add
daa
stos
pop
mov
jle
js
and
or
movsb
sbb
fstpt
imul
pop
jg
rcrl
in
lods
cmp
adc
push
lahf
cmpsl
loop
pushf
push
jbe
out
xor
jp
lea
test
xlat
mov
leave
std
xor
xchg
clc
das
repz
pop
negl
call
mov
test
or
inc
cmpb
or
outsb
cld
movsl
mov
xor
andb
repz
repz
addl
test
ret
scas
xor
inc
int
xchg
jne
leave
iret
pop
push
xor
fidivl
mov
jno
push
fisubl
stos
jle
sarl
xor
xchg
sahf
inc
bound
inc
je
sbb
loope
push
out
je
sahf
leave
movsl
mov
mov
ret
popa
or
popf
cmpsb
insb
cmpsl
ja
or
cmpsl
int3
dec
mov
fistpl
and
lahf
sbb
xor
imul
jnp
xor
inc
sahf
cmp
iret
pop
pop
rcr
iret
shrb
sarl
mov
outsb
hlt
das
scas
add
addr16
js
sti
int
push
push
sub
jbe
mov
ret
ja
daa
repnz
jb
sub
inc
sub
dec
mov
mov
push
xchg
mov
lods
roll
fdivs
push
cld
out
lods
mov
fadd
and
inc
cld
inc
out
mov
stos
cli
or
jg
fcom
mov
test
fs
data16
aas
adc
jnp
stc
mov
and
rclb
add
inc
mov
mov
pop
jnp
adc
std
rcrl
push
inc
std
pop
sub
add
call
les
loopne
xchg
cltd
aaa
jnp
mov
cltd
mov
jp
imul
xor
sub
in
loopne
in
xchg
or
mov
push
xor
pop
cmp
enter
xchg
loop
and
shrb
adc
fdivs
xchg
jp
pop
out
into
and
pop
fdivs
movl
in
stc
mov
cmpl
mov
lret
mov
push
nop
pop
sub
xor
inc
incl
jl
xor
loop
in
movsb
lret
or
pmaddwd
xor
stos
mov
mov
out
stc
roll
aam
dec
xor
inc
xor
and
jp
pop
popa
mov
inc
out
and
idivb
fcompl
pop
sbb
xor
and
dec
jae
iret
cmp
cmp
out
add
sbb
push
scas
mov
je
jl
movsb
mov
repz
loope
fstpl
rorl
push
jnp
aas
jnp
in
cld
das
push
cli
sub
lods
popa
subl
xchg
insb
out
push
add
testl
cmc
mov
or
inc
iret
xor
icebp
push
xchg
push
jle
fsubrs
mov
sbb
adc
inc
xchg
js
xor
mov
aas
pop
sbb
jne
dec
in
arpl
inc
and
add
xor
or
sti
cwtl
fdivrp
into
sbb
xlat
and
xchg
cmp
add
jo
add
pop
mov
cmp
outsb
in
cmp
ret
jg
pop
aaa
mov
mov
push
dec
sbbl
mov
sub
xor
pop
leave
nop
sub
mov
aam
out
in
jne
and
or
inc
xchg
pop
mov
lret
mov
outsb
dec
int3
iret
int3
cmp
vcmpsd
mov
push
dec
jle
cmpsb
sub
in
clc
pushf
xchg
xchg
stos
aaa
in
jno
insb
out
mov
js
sub
push
pushl
mov
filds
add
cmpl
fisubrl
xor
xchg
jns
add
clc
nop
aam
jl
adc
or
jl
rcl
arpl
add
dec
xchg
mov
jl
inc
adcl
fstl
mov
push
arpl
ds
fldcw
jl
jne
inc
adc
pop
pop
xchg
dec
push
or
lret
popf
mov
bound
stos
or
sbb
xor
lods
ja
pop
xchg
push
mov
jo
pop
arpl
push
cmp
xor
inc
and
lahf
push
ret
test
hlt
inc
push
mov
int3
daa
stos
and
lret
icebp
daa
jecxz
inc
dec
das
fsubrs
jbe
and
adc
and
dec
out
imul
push
fldl
cmp
or
test
and
notb
dec
outsl
push
inc
sbb
sbb
mov
add
lock
sbb
scas
xor
imul
pop
jae
jl
jno
add
push
mov
cwtl
adc
je
popf
pop
js
mov
inc
inc
or
cmp
jo
dec
and
popa
lds
and
repnz
in
dec
ds
addb
dec
xor
cld
fwait
out
imul
inc
sub
mov
xor
jo
push
sar
and
dec
mov
out
repnz
rorb
or
scas
inc
ja
push
lcall
xor
mov
pop
call
xchg
andb
mov
pop
cwtl
cwtl
add
mov
fmuls
cltd
adc
test
mov
sbb
test
test
push
add
xchg
fs
and
xlat
jno
mov
or
jbe
jnp
cmp
das
and
jmp
ret
scas
fdivp
xchg
mov
out
icebp
cmpsb
ja
push
xchg
xchg
jge
jns
xor
sbb
arpl
lcall
paddusw
popf
scas
fdivs
popl
pop
call
lods
mov
out
mov
std
aas
xor
mov
icebp
out
not
sbb
xlat
pushf
dec
dec
roll
pusha
cmp
sub
add
cmpsl
fwait
dec
jae
mov
mov
pop
sub
enter
nopl
xchg
xchg
fistpll
mov
fbstp
cmp
lea
outsl
inc
cltd
push
sarl
jns
mov
outsb
and
push
pop
in
repz
mov
cmpsb
jbe
ja
insb
push
stos
popf
test
xor
mov
or
or
cli
mov
das
ljmp
sub
cmp
pop
dec
psubq
sbb
lcall
jo
pushf
inc
push
test
adc
rcrb
notb
jb
dec
int3
xchg
test
mov
test
pop
mov
jne
scas
or
xchg
mov
loopne
mov
lock
mov
or
jle
or
fsubrp
sub
and
rol
std
mov
jne
fbstp
or
leave
push
jo
ficoml
or
js
stos
xchg
mov
lods
cmpl
std
div
aaa
testl
mov
pop
push
jbe
test
jo
imul
fistps
xor
mov
xor
and
dec
popf
add
stos
leave
jp
sub
movsl
lea
pop
roll
lock
imul
fiaddl
loope
jbe
xor
add
outsb
dec
dec
mov
dec
in
lods
jmp
nop
or
mov
insb
jle
inc
and
lret
and
pop
rolb
fstl
jle
and
inc
fiadds
cmpsl
lods
sbb
mov
and
faddp
mov
repz
daa
movsl
sbb
cmp
pop
mov
popa
xchg
divb
jno
jns
and
dec
push
sub
pop
std
loopne
aas
arpl
adc
mov
fstpl
cmp
lcall
dec
push
add
std
adc
or
cld
inc
push
mov
xchg
cld
sub
aam
pop
cli
xchg
lret
adcb
orb
divb
and
ja
nop
inc
mov
movsl
mov
movsl
mov
jns
pop
shrl
mov
pop
leave
ljmp
and
pop
lock
mov
mov
jecxz
mov
cmp
jo
or
int
adcb
sbb
mov
test
aam
mov
xchg
aad
repnz
fsubrs
dec
dec
repnz
and
dec
add
loop
out
jp
decl
dec
pextrw
test
mov
lret
cs
outsb
hlt
lock
repnz
in
fs
inc
iret
pop
test
nop
xor
hlt
fadds
dec
push
lcall
jb
cld
jae
pop
mov
dec
jnp
leave
push
cmc
mov
push
mov
sub
or
sub
pop
arpl
ljmp
icebp
ret
pop
divl
jecxz
insl
je
mov
arpl
test
int3
pop
loope
enter
pop
rcll
dec
adc
or
add
dec
sbb
outsl
inc
fistpl
jl
inc
clc
inc
jno
ficoms
icebp
jecxz
in
into
bnd
inc
xor
sbb
in
and
pop
dec
xor
ret
push
jmp
inc
aam
lods
jge
cmpsl
sbb
imul
xchg
movsl
sbb
faddl
mov
mov
outsl
pop
loop
lcall
bound
dec
aaa
es
hlt
in
sbb
shlb
pop
push
or
xor
xor
mov
cmp
imul
push
xchg
inc
je
push
jb
cmpsl
shll
lods
cmp
aaa
jge
loope
mov
mov
scas
mov
in
mov
inc
pop
xchg
fnsave
scas
cmp
cmc
cmpsb
out
mov
jae
hlt
xchg
dec
dec
sbb
sbb
bound
add
das
test
add
inc
or
orl
push
xor
jle
push
stc
out
push
xlat
lea
addr16
cmc
test
stos
or
jne
test
xor
test
rcrb
jecxz
stos
fdiv
sahf
cmp
sarl
mov
and
inc
std
sub
mov
repz
mov
loop
test
and
ja
push
dec
inc
test
std
sar
rcrl
mov
pop
orb
dec
cmp
inc
cs
add
push
ret
ret
aaa
dec
cmp
out
sub
xchg
stc
inc
inc
stos
cld
arpl
pop
int
iret
sarl
jle
dec
inc
or
xchg
mov
arpl
mov
mov
pop
fists
sbb
jmp
test
test
lea
movsl
pop
jno
in
out
sub
dec
rclb
or
xor
jbe
pop
pop
mov
add
arpl
faddl
adc
lahf
pop
or
and
jmp
ret
xchg
mov
inc
push
pop
icebp
push
leave
mov
and
test
imul
dec
mov
sub
out
iret
add
loop
stos
jl
mov
xchg
jno
dec
jmp
aas
ficomps
ret
jge
or
fs
out
xchg
fmulp
jo
imul
jne
sahf
das
xchg
lock
mov
addr16
adc
push
dec
out
mov
add
in
mov
addr16
jmp
andb
jb
xorb
sti
push
fs
push
inc
out
cli
fs
imull
call
test
adc
push
pusha
in
jge
bt
enter
shlb
xor
pop
int3
lret
xchg
rcrl
jmp
push
push
pusha
test
out
pop
test
jne
add
xlat
mov
fnsave
andb
add
scas
cwtl
add
or
adc
jns
leave
ja
movsb
pop
jmp
sub
pop
xor
mov
jb
mov
or
movsl
xchg
in
mov
sub
dec
mov
mov
inc
leave
xchg
shl
mov
adc
jo
pop
mov
xor
out
push
lret
adc
xor
mov
adc
xchg
lods
inc
addr16
aad
dec
pusha
ss
or
pop
add
and
mov
mov
push
sbb
pop
inc
hlt
lods
lahf
sbb
das
mov
mov
mov
mov
fimull
jl
enter
mov
cmp
push
dec
in
mov
inc
xchg
adcb
mov
cmp
mov
repnz
jns
cwtl
cmp
les
fs
push
lcall
cld
jo
dec
push
jle
cmp
mov
dec
mov
inc
test
mov
popf
pop
xchg
ss
cmp
out
pop
sub
push
mov
sbb
outsb
push
xchg
loopne
sub
nop
sbb
push
jbe
jbe
pop
iret
icebp
cmpsl
sahf
pushf
in
cmp
dec
jo
mov
or
sub
jl
outsl
cmp
test
xchg
mov
loope
test
and
mov
ret
imul
aas
fucomi
fiadds
jns
addr16
iret
cpuid
js
aad
bound
bound
mov
push
jp
ret
aaa
push
sbb
out
out
mov
xor
and
test
sub
scas
nop
lods
jae
int
jecxz
aam
ret
mov
lods
mov
scas
jmp
jno
xchg
enter
rcr
outsb
xchg
aas
out
and
std
mov
mov
test
shlb
sub
and
xor
lds
xor
psrlw
dec
mov
pop
pop
in
xchg
cmp
movsb
inc
iret
dec
push
cmpsl
or
jno
out
mov
popf
fs
jl
mov
fwait
mov
mov
jne
inc
je
cmp
pop
repz
imul
xchg
jae
sarb
adc
mov
mov
out
or
sub
cltd
adc
sbb
cmp
jmp
loop
jbe
std
push
mov
jne
or
or
out
in
jmp
xchg
fnstcw
int
imul
jg
push
in
mov
lret
jns
negl
mov
leave
adc
nop
pop
cmp
mov
arpl
popf
sarb
leave
mov
xor
push
push
jnp
sbb
lahf
ss
xchg
sub
adc
adc
ret
enter
cmp
jg
leave
push
daa
cmp
jecxz
pop
in
push
jbe
push
cmp
test
dec
sub
push
cs
jmp
mov
cltd
cmp
sbb
add
out
fnsave
mov
jbe
xchg
fcmovbe
xor
dec
mov
mov
push
ja
out
mov
sub
push
test
cmp
fldcw
or
fs
mov
pushfw
mov
clc
jae
test
repnz
sub
inc
add
mov
out
aam
mov
push
jo
mov
outsl
shr
ret
pop
cmp
call
sti
xor
clc
xorb
jnp
pop
dec
xchg
or
notb
or
jne
mov
add
je
add
in
fnstsw
dec
insl
jl
inc
mov
pop
cmovnp
lods
and
pushw
icebp
sub
add
pop
adc
cmp
fcomp
add
out
xchg
clc
dec
cmp
jle
ret
dec
sub
push
and
dec
jns
or
sbb
inc
push
setg
inc
stos
pop
push
ja
iret
dec
andl
fadds
cmpb
cwtl
fnstsw
stc
out
stos
jg
rorb
call
mov
lahf
dec
int
and
addr16
iret
add
mov
fldenv
or
mov
mov
mov
push
mov
loop
int3
inc
fdivr
mov
or
mov
popf
leave
pop
je
mov
mov
out
pusha
sbb
cmp
jo
inc
test
add
cmp
sbb
arpl
sbb
adc
ret
push
xchg
sbb
mov
pop
add
out
andl
lock
je
mov
jno
daa
gs
dec
xor
inc
out
inc
jmp
xor
push
mov
xchg
lods
and
in
in
icebp
and
dec
scas
lret
or
push
hlt
popf
arpl
push
dec
outsb
enter
mov
mov
or
pusha
out
mov
push
push
ucomiss
cwtl
or
and
cmp
xor
test
popa
push
pusha
xchg
mov
je
and
scas
insl
ljmp
fisttpll
cmp
out
or
insl
xlat
push
jecxz
push
cmp
xor
repz
xchg
inc
out
push
dec
jb
popa
xorl
jbe
mov
xlat
push
gs
adc
pop
negb
dec
mov
std
mov
push
mov
add
or
test
mov
sbb
mov
mov
les
add
into
push
pop
lret
add
pusha
sbb
adcb
loope
add
stc
scas
and
dec
ds
rclb
or
sbb
mov
jbe
xor
jp
pop
add
stc
aaa
cmp
movsb
cmp
cmp
cld
jecxz
rcll
or
pop
jp
jns
loop
jle
cmp
lea
movsb
jbe
cmpsl
or
mov
js
ds
int
leave
fnstenv
push
mov
jns
push
mov
sarb
mov
push
inc
adc
and
cld
gs
and
out
add
daa
int3
pop
orl
inc
mov
xlat
xor
mov
push
cs
dec
fildl
mov
shrb
lea
mov
scas
mov
jp
test
sub
out
cltd
jnp
fcmovu
cmc
insl
test
es
sbb
pop
repz
pop
cli
mov
xor
inc
xchg
inc
sub
mov
sub
cmpsb
lahf
outsl
icebp
test
mov
vpsubq
push
adc
jp
in
push
jo
push
call
and
push
adc
fs
add
sub
add
cmp
mov
jae
lcall
mov
ss
lret
subl
cmpsb
xchg
jl
iret
jecxz
push
mov
pop
gs
mov
rorb
arpl
jle
jo
lea
mov
mov
hlt
cli
push
push
xchg
jns
sub
movsl
cli
or
mov
dec
jl
dec
add
test
add
dec
or
scas
sbb
shlb
pop
repz
sti
test
shll
iret
repz
jp
pop
shlb
into
jl
pop
and
inc
xchg
bound
inc
and
insl
mov
mov
sbb
cld
or
mov
stc
mov
arpl
dec
jmp
mov
pop
add
xor
iret
xchg
imul
lcall
cmpl
repnz
xor
lods
es
loopne
lods
push
call
mov
xor
sbb
imul
cmpsl
add
adc
scas
push
sbb
push
popf
rorb
xor
loop
sbb
xlat
inc
or
and
dec
cld
pop
mov
loop
mov
adc
dec
and
cmpsb
push
mov
or
inc
xor
sub
jno
aas
cmc
loope
and
mov
mov
dec
mov
adc
in
xchg
mov
xor
lds
bound
pop
mov
jne
ljmp
insb
jo
push
pop
fisttps
in
xor
psubsb
mov
pop
insl
pushf
out
jne
and
mov
sbb
jmp
mov
ret
movsl
das
jp
mov
test
out
pop
dec
mov
aas
xchg
push
scas
cmp
add
cmpsl
xchg
jae
popf
ljmp
jae
mov
sub
pop
out
xor
nop
mov
lock
cmpsb
inc
mov
call
sbb
xor
mov
aad
stos
mov
mov
jo
cli
icebp
insl
bound
repnz
xor
mull
sub
jge
cwtl
lret
imul
cltd
xor
or
pop
in
fldt
pop
test
dec
cmpb
jno
test
add
repz
icebp
jl
xlat
daa
pop
lods
xchg
xchg
out
mov
mov
and
inc
repnz
wbinvd
lods
mov
in
lock
mov
xor
rcrl
add
ror
adc
sub
adc
pop
fldt
jmp
scas
push
mov
ja
int
lea
sub
xchg
rcrb
cmp
ret
cmpsb
xor
fcmovnb
adcb
test
fcoml
js
pop
push
add
cmp
pop
xchg
jmp
jp
repnz
in
stc
pop
dec
fcomps
mov
repz
push
pop
dec
mov
addr16
xor
push
mov
push
test
mov
loopne
mov
leave
xor
sbb
rol
addr16
leave
ficoms
ret
rcr
enter
test
lods
or
cwtl
mov
test
pop
cmpsb
mov
loopne
scas
cs
subl
fsubs
out
inc
pop
jbe
cwtd
xor
ljmp
fnstsw
test
lret
jge
jl
add
jns
sub
dec
push
ret
data16
out
cmp
jns
inc
or
add
subb
fisubrs
imul
push
mov
mov
and
or
sbb
aas
ret
jnp
adc
xorl
push
pop
and
aas
daa
and
mov
dec
mov
scas
inc
movsl
lahf
in
mov
sahf
daa
xor
sbb
sub
sub
pop
mov
std
dec
es
push
xchg
xor
in
jbe
faddl
popf
rorl
jmp
sub
jl,pt
stos
sbb
hlt
fs
jecxz
fs
sbb
adc
adc
bound
movsb
push
mov
stos
mov
and
lea
mov
shl
sbb
jns
pop
repnz
mov
xchg
jne
ret
pop
jp
mov
fisttpl
arpl
pop
outsl
mov
scas
jg
add
stos
add
adc
xor
ficoml
xchg
sub
sub
sbb
fs
and
pop
jbe
shlb
jne
pop
loop
push
sbb
xchg
mov
cmp
popf
push
mov
addr16
push
xchg
mov
inc
incl
mov
ja
xchg
std
cmpsb
test
or
hlt
movsb
scas
jecxz
cmp
movsl
inc
xor
out
xchg
dec
hlt
sti
iret
xchg
sub
sbb
jo
cmp
ret
mov
mov
sbb
pop
addr16
test
js
add
or
das
mov
jmp
jbe
iret
sbb
push
xchg
out
and
jo
cmpsb
pusha
out
mov
fldenv
push
fnstenv
mov
pop
addr16
mov
enter
xchg
dec
int
mov
jbe
cwtl
fnstenv
fisttps
sub
jmp
mov
or
jbe
outsl
dec
aaa
es
lret
repz
ds
pop
test
lock
pop
cmpsw
dec
lock
jge
sbb
cwtl
mov
jle
push
mov
stos
dec
inc
mov
sbb
mov
sub
into
je
ficoms
clc
lods
je
sbb
cmc
mov
dec
dec
push
call
and
pop
mov
jp
std
fcomps
hlt
or
pushf
shlb
paddsw
xchg
cmp
orb
out
push
or
jmp
cmp
sbb
int
scas
shr
test
scas
and
fwait
ret
call
inc
scas
mov
pop
inc
fnsave
shlb
test
aas
sbb
xlat
xchg
push
shrl
mov
dec
into
jo
leave
dec
mov
popa
bswap
jae
pop
or
lahf
popa
cmc
mov
push
mov
les
add
or
dec
call
loop
fucom
sub
addr16
sbb
insb
mov
cmp
into
mov
enter
cmp
dec
jae
pushf
fdivrl
xor
jns
mov
mov
test
sub
inc
mov
popa
inc
dec
gs
les
dec
jmp
and
add
add
jno
adc
cwtl
std
stc
mov
dec
ljmp
mov
sbb
sbbb
mov
mov
cs
int3
cmc
xlat
jp
into
repz
and
pop
xchg
mov
pop
cmp
rcrb
leave
or
mov
adc
sahf
pop
ja
cmp
dec
add
pop
rorb
rol
xchg
mov
repz
cmp
rcrb
mov
jb
es
pop
sub
xchg
push
pushf
repnz
in
sbb
jb
push
adc
xchg
aad
inc
inc
sti
jp
jnp
cld
sbb
pop
or
imul
push
lock
cmp
mov
push
mov
nop
ljmp
repz
sub
nop
pop
mov
xor
xor
fucom
repnz
add
das
push
call
cmp
cmp
sub
iret
mov
mov
push
in
push
cmpsl
shll
ret
fildll
inc
add
and
push
cmp
xor
cmpsb
lods
inc
fcomps
sub
aad
in
mov
out
jl
popa
nop
js
stos
scas
dec
and
mov
lds
inc
pop
subb
out
fs
mov
fisubs
sbbl
mov
aaa
push
inc
pop
testb
dec
adc
cwtl
sub
std
add
es
and
lcall
cmpb
ljmp
in
shr
pop
and
jno
mov
les
xchg
in
sub
dec
inc
mov
xor
ja
jmp
mov
lock
test
push
jb
jno
adc
mov
mov
sub
add
mov
pushf
outsl
test
and
and
push
ljmp
test
shrl
dec
jno
xor
jecxz
add
push
inc
xchg
adc
xchg
int3
rcrb
or
mov
push
push
pushf
push
rorb
aas
xchg
adc
rcl
and
je
xchg
mov
and
bswap
adc
call
out
sahf
cwtl
shlb
cmp
lea
rclb
divl
push
pushf
lret
loopne
mov
add
xchg
add
lods
pusha
jmp
aad
nop
in
lahf
push
xor
mov
stc
lahf
jge
mov
out
xchg
xchg
out
out
daa
mov
out
fwait
lcall
xchg
xchg
pushl
inc
adc
sub
pop
fsubrl
and
mov
mov
andl
pusha
mov
xor
out
or
xchg
inc
sub
fisubs
fldenv
out
ljmp
xchg
mov
cmp
rcrl
aas
ds
jae
pop
in
jnp
dec
pop
int
or
int3
mov
mov
shl
jne
popf
cmc
lahf
cmp
cmp
testl
lock
cmp
inc
lret
sti
jb
cmp
xchg
push
mov
xchg
adc
int3
pop
out
pop
fisubs
cmp
iret
cmpb
nop
sbb
and
mov
sbb
std
lods
sarl
fistpl
mov
jns
jge
cmp
insl
outsl
rcrl
cli
mov
dec
push
jl
dec
sub
push
push
sub
sub
push
ret
mov
ficompl
cld
lret
icebp
mov
push
cmp
dec
sbb
sub
mov
xchg
mov
mov
out
mov
sub
ljmp
mov
adc
xor
pop
and
add
push
shlb
daa
out
mov
dec
stc
inc
dec
mov
pop
fwait
aad
cwtl
pusha
pop
sarl
cmp
out
xlat
add
cmpsl
or
out
dec
aam
in
cmp
fs
mov
push
int3
or
cltd
jae
cli
arpl
sbb
mov
and
cwtl
insl
xor
and
sub
and
sahf
add
cmpsl
lret
push
adc
and
cmp
xchg
clc
fdiv
adc
movsl
cmpb
xchg
xchg
sub
les
jmp
cmp
test
jo
fimull
fimuls
or
aam
lods
imul
push
mov
or
cmpsl
vcvtsd2ss
repz
and
inc
fwait
sbb
in
test
fldl
inc
push
ds
sub
mov
rorl
sub
lcall
cmpl
dec
in
xchg
mov
ss
stos
inc
mov
rorl
push
out
into
sub
mov
loop
sbb
push
faddl
in
push
stos
push
fsubl
sbb
adc
imul
xchg
gs
dec
jns
sub
repnz
pop
add
mov
nop
xchg
sahf
mov
hlt
in
and
sbb
sub
in
dec
and
or
adc
pop
cltd
jmp
add
push
imul
or
cmpsb
dec
ret
dec
xchg
test
sti
mov
inc
dec
adc
gs
negb
ljmp
imul
nop
push
mov
inc
cmp
int
sbb
leave
cli
sahf
push
fcompl
mov
cli
xor
push
mov
mov
cli
push
or
adc
jl
xchg
out
ds
adc
inc
xor
clc
cld
data16
jp
cmp
push
push
icebp
testb
fptan
adc
mov
adc
and
das
cli
mov
mov
cmp
inc
or
jmp
and
sub
cld
push
cltd
pop
jno
data16
and
test
sbb
dec
hlt
in
lret
lahf
sahf
push
lods
jl
icebp
push
insb
popf
and
cli
shlb
ss
popa
add
fidivrs
mov
jle
sbb
es
push
leave
sbb
add
addr16
rcl
adc
inc
lods
or
and
push
pop
push
xchg
repnz
hlt
call
inc
in
jmp
fs
test
pop
scas
fistpl
lret
dec
xchg
mov
fsubrl
ds
mov
mov
adc
lret
push
fcmovu
sti
mov
sub
dec
sub
fucom
popf
dec
shll
inc
ss
lret
push
fwait
push
das
cltd
std
dec
mov
scas
jle
dec
xor
cmp
rcl
pop
sbb
idivb
clc
dec
inc
xchg
fnstenv
mov
popa
mov
mov
pusha
mov
test
adc
pop
mov
pushf
cld
jnp
push
and
sub
aaa
stc
sub
cwtl
adc
mov
rclb
mov
lock
jo
ret
icebp
adc
xlat
or
adcb
ljmp
dec
jmp
je
cmc
into
pop
adc
iret
or
pop
out
xchg
add
fnsave
add
xchg
ds
cmc
movsb
insb
rcl
sti
addb
add
cmpsb
xchg
ljmp
dec
arpl
repnz
cltd
mov
adcl
mov
cmp
sub
cmpb
xchg
int3
int3
lahf
fmuls
scas
adc
repz
xor
sbb
push
or
push
int
jle
xor
inc
ss
scas
adc
sub
adc
xor
das
xor
out
ror
mov
add
faddl
das
jae
data16
mov
pusha
or
nop
jp
inc
mov
lods
xchg
out
into
fidivs
push
mov
push
adc
mov
cmp
push
outsl
push
into
cld
ret
cmpsl
out
insb
pop
xor
sahf
inc
dec
push
pop
popf
pop
mul
sahf
mov
mov
je
sarl
cs
ficomps
sbb
adc
repnz
cmpsb
mov
dec
cmp
fstpt
cmp
setb
inc
mov
negb
fnstcw
das
mov
hlt
dec
jl
movsb
sahf
lods
sub
or
adc
cmpsb
jmp
notl
jno
push
je
sbb
or
push
fisubrs
adc
test
lock
sahf
xor
ja
adc
fcomi
jmp
adc
es
scas
pushf
int
mov
mov
popl
or
xor
mov
repnz
call
fistpl
xchg
test
test
rorb
rorb
sti
or
testb
xor
lret
jnp
and
inc
adc
lea
in
bound
push
test
stos
in
push
pop
sub
or
pop
jbe
push
mov
ror
jmp
mov
mov
mov
and
inc
rclb
pushl
xchg
mov
test
std
push
movsl
xor
add
loope
xor
mov
dec
xchg
add
mov
add
dec
in
ljmp
clc
push
lods
adc
enter
pop
jb
test
data16
sbb
cli
cmpsb
mov
mov
scas
lcall
pushf
pop
mov
mov
or
iret
fidivl
mov
aad
push
xchg
xchg
mov
rorl
pop
lds
and
jbe
mov
lcall
cltd
gs
lds
shr
daa
xchg
sub
sub
fmull
mov
pop
loop
mov
pop
pop
stos
bound
ret
pop
mov
and
movsb
adc
out
cmpsb
clc
aam
push
adc
cwtl
mov
mov
or
scas
mov
mov
aad
inc
jo
inc
mov
xchg
xor
xchg
daa
push
sbb
cmpsb
xchg
cmp
xor
fisttpll
lods
mov
popa
mov
and
mov
or
popa
sub
pop
mov
out
movsl
push
lret
movsb
mov
pop
lret
imul
pop
xchg
fdivl
outsb
int3
pop
outsl
or
pusha
cmp
test
xorb
stos
mov
xchg
in
rclb
mov
in
movsb
xor
icebp
inc
gs
adc
sub
shl
mov
or
mov
add
loopne
jp
fs
xchg
icebp
cmp
jnp
and
mov
rcrl
dec
jge
fcmovnbe
or
ror
fmull
mov
stos
mov
adc
pop
dec
cmp
int
aad
inc
daa
mov
test
mov
cli
dec
mov
push
xchg
jge
or
pusha
and
mov
outsl
fildl
cmpsl
shll
popa
mov
adc
mov
imul
jns
pop
filds
lret
dec
insb
fcomps
jecxz
xor
popa
push
sub
cwtl
inc
out
mov
fiaddl
nop
jns
imul
mov
ss
clc
xor
fnsave
cmc
sti
cmp
pop
into
lods
sbb
scas
imul
sub
clc
imul
xchg
fidivl
xor
sbb
daa
pop
test
and
shlb
push
sbb
sub
xchg
or
add
sub
fwait
push
mov
decb
stos
add
mov
and
mov
jo
mov
out
cs
xor
push
push
addb
inc
add
mov
xor
mov
or
dec
insb
into
and
inc
inc
add
sar
sarb
and
pusha
sbb
lcall
push
rclb
xor
outsl
pop
add
inc
rcl
mov
call
xchg
push
jl
faddl
scas
lret
repnz
pop
lock
out
push
insl
lods
insl
add
call
xchg
push
mov
arpl
sbb
out
dec
lea
or
adc
or
cwtl
pop
or
ja
insb
pushf
pop
push
cld
cmpsb
insl
push
mov
ja
pop
jmp
call
jle
dec
and
or
lods
mov
imul
fsubs
iret
ret
pop
loop
inc
inc
push
ss
les
sbb
push
mov
lcall
cmp
mov
add
xorl
and
sub
rclb
scas
push
std
cmp
dec
mov
mov
ret
or
addl
mov
fcoml
lock
sbb
mov
cmpsl
mov
loopne
pop
shrl
inc
mov
mov
push
add
aaa
mov
in
push
add
ljmp
icebp
idivb
int3
mov
sahf
sub
inc
aas
movsl
dec
xchg
loop
inc
dec
pop
mov
les
fldt
negl
ss
cmpsb
push
mov
ja
pushf
mov
in
push
mov
pop
jo
lea
cmp
cs
test
je
call
inc
fs
push
fwait
or
mov
arpl
adc
cmp
mov
dec
push
fwait
icebp
or
xor
lods
clc
fadd
lock
pop
nop
outsl
jbe
mov
stos
dec
mov
dec
inc
cmp
cwtl
xor
fnstenv
mov
das
jbe
or
and
push
sub
mov
xchg
jo
out
lea
xlat
push
adc
inc
int3
jg
addr16
mov
out
and
test
cwtl
loope
incl
enter
or
ja
test
movsb
lret
mov
add
dec
repz
sub
daa
sti
fdivrs
dec
xchg
mov
cmp
inc
and
xor
dec
add
inc
pusha
xor
and
rcrl
dec
and
xchg
cmc
mov
das
jmp
sahf
mov
mov
ds
jns
adc
in
sti
ss
add
rcrb
loope
loopne
ds
in
mov
add
pop
repz
mov
in
cmp
out
xchg
inc
push
aaa
ficomps
bound
mov
push
ret
mov
mov
sbb
mov
in
cmp
xchg
push
int
das
insb
dec
jg
jp
inc
test
dec
out
pop
out
push
movsl
dec
cmp
mov
test
test
pop
ds
sub
mov
movsl
dec
jo
ljmp
cs
pop
stos
in
mov
sub
add
xor
and
out
popf
mov
cmp
sti
out
and
push
lea
push
movsb
enter
xchg
cs
mov
in
stc
cwtl
fmull
mov
adc
mov
cmp
mov
push
cltd
and
xor
enter
insl
loopne
mov
mov
xor
out
lea
notb
pusha
mov
out
das
xlat
inc
repz
aas
lds
inc
jmp
add
sbbb
xchg
adc
scas
popl
xor
xor
xor
rcrb
mov
ret
and
lock
out
dec
shll
fmul
mov
out
insl
adc
push
popa
xchg
arpl
inc
add
out
jb
mov
mov
xor
sbb
inc
add
loopne
sbbb
xchg
xor
das
xor
xor
sbb
pop
test
out
cmc
pop
shlb
fbstp
addr16
jae
inc
rorb
rclb
cmp
cmc
inc
sub
mov
sbb
stc
mov
mov
stos
lods
pop
lret
add
xchg
push
dec
sub
icebp
xchg
push
mov
jle
das
aaa
push
aaa
movsl
xchg
xor
pop
xchg
push
inc
dec
mov
add
ss
test
xchg
dec
testl
aas
cmp
mov
push
test
out
movsb
pop
sub
popa
mov
xchg
push
mov
notb
mov
dec
inc
xchg
pusha
add
sbb
inc
aam
pushf
je
and
lret
test
dec
pop
jae
int3
loopne
data16
dec
cmp
mov
jge
mov
in
mov
or
rcl
xor
pop
pop
dec
lahf
shl
add
pop
push
cmpsl
insl
sbb
test
loop
and
test
std
xchg
sub
jg
loope
into
ljmp
or
aad
pop
cs
mov
dec
xor
aad
lcall
outsl
pop
mov
rolb
fs
push
test
and
gs
lods
jmp
test
leave
dec
in
adc
jmp
jno
mov
xchg
cmpsb
mov
insb
popa
dec
das
cmp
jl
fistpl
arpl
jmp
mov
adc
pop
or
fiadds
fimuls
mov
lods
mov
fmull
push
rorb
push
call
dec
ja
dec
cmp
daa
mov
cmpsl
cmpsb
mov
or
mov
test
push
dec
pop
mov
ret
jnp
mov
ljmp
pop
pop
jecxz
and
mov
sbbb
in
cmp
shr
sbb
inc
xchg
xlat
xor
push
inc
pop
mov
cmp
jmp
mov
je
push
and
jg
popa
pop
fadd
movsl
sbb
fsubr
data16
aad
lret
adc
lods
jp
cmp
sahf
push
call
aas
nop
inc
jmp
lret
mov
sbb
ja
loopne
adc
or
mov
add
roll
and
jecxz
push
aam
pop
push
scas
xchg
xchg
mov
jb
test
shll
repz
mov
sub
mov
cmp
push
dec
add
inc
mov
pop
xchg
pop
sbb
and
jnp
xchg
inc
mov
out
cmc
or
fdivrp
sbb
add
pop
movsb
std
mov
mov
pop
stos
int3
int
sbb
daa
xchg
popf
mov
mov
mov
xlat
add
test
jns
stos
aas
inc
inc
adc
jp
sub
add
inc
data16
bound
stos
pop
punpcklbw
cmpsl
mov
or
pop
sub
loop
loopne
fnstcw
std
psubusb
insl
cli
mov
aas
ret
fwait
pop
ret
mull
je
add
lods
mov
test
mov
jne
dec
dec
stos
cmp
sub
lea
mov
pop
enter
dec
sbb
jle
inc
dec
sbb
popf
imul
sarl
add
xchg
lock
stc
leave
lret
adc
rcr
je
test
mov
or
sub
cmpsb
loop
shl
test
xor
repz
dec
mov
mov
push
cltd
fmulp
sbb
jg
mov
mov
inc
and
jae
mov
push
xchg
adc
lds
int
sbb
les
add
bound
mov
in
popf
adc
aas
data16
enter
fldenv
pop
arpl
adcl
lods
add
es
or
lds
push
push
cmpps
mov
sarl
addr16
in
imul
add
inc
fwait
addr16
adc
daa
cld
jo
dec
push
pop
sub
or
fs
xlat
lds
sub
aas
mov
cmc
sub
stc
imul
push
stos
jnp
mov
cmp
pushf
inc
mov
int3
cmp
ljmp
in
xlat
push
repnz
or
ret
push
xor
scas
leave
inc
xchg
xor
push
insb
push
loope
nop
and
add
cmpsl
xor
testl
inc
and
sub
add
add
cwtl
inc
gs
cld
push
adc
lods
fbld
xchg
push
ret
ja
pop
cld
repz
mov
sub
or
xor
and
adc
in
repnz
fsubrp
cmp
in
lahf
out
les
mov
clc
xchg
or
repnz
mov
imul
pop
cmp
ret
xorl
xchg
and
sarl
neg
mov
stos
or
or
and
test
ja
push
jae
pop
push
pop
shl
lret
dec
inc
sub
test
dec
or
pushf
cltd
in
aam
std
lret
sbb
mov
or
cld
pop
xchg
adc
fwait
push
jl
lahf
shlb
mov
js
in
out
bound
pop
lea
lods
lcall
fsubp
sahf
cs
pop
leave
mov
pop
fsubs
sub
out
nop
mov
out
sub
xchg
sbb
mov
int
push
shll
mov
ja
lahf
xchg
lods
ret
cmpsl
adc
mov
pop
jp
fwait
mov
sarl
sbb
dec
lods
dec
fidivl
push
sahf
xchg
shl
xchg
lock
push
pop
fnstcw
mov
xor
ret
lock
mov
dec
jle
or
or
mov
das
inc
fidivrs
xchg
add
and
lods
incl
int3
iret
rorl
sbb
xchg
cwtl
test
adc
clc
stos
mov
leave
push
adc
xorb
cmp
pop
loope
mov
je
shll
repz
jo
xor
jge
aad
xor
sti
dec
imul
sub
dec
push
jl
ljmp
clc
mov
pusha
pop
cmp
icebp
mov
cmp
and
sub
dec
push
adc
xchg
mov
aas
sub
mov
jo
jl
in
es
jbe
lcall
movsb
xor
adc
lahf
xchg
sub
pushf
jl
aas
call
jo
or
inc
loop
call
sbb
lret
inc
daa
stc
xchg
xchg
mov
or
ficoms
mov
add
std
mov
mov
movsb
call
lods
sar
pop
lods
pop
mov
mov
adc
jns
fildll
std
sbb
movl
mov
mov
jnp
dec
mov
and
mov
idiv
call
sbb
imul
ja
idiv
or
xor
ss
cmp
xor
or
and
roll
ljmp
jmp
xchg
or
les
mov
xlat
pop
pop
test
inc
sub
or
out
pop
mov
test
mov
jne
gs
mov
jp
push
cmp
test
movsl
orb
or
jmp
push
pop
arpl
test
rcl
pop
mov
xchg
rcrb
dec
xchg
clc
inc
mov
ds
lahf
mov
adc
jae
jge
xor
sarb
in
add
pop
out
out
fstp
enter
cld
mov
mov
scas
xchg
cmp
inc
jnp
and
into
js
repz
xchg
sbb
dec
xchg
jno
mov
fsubs
add
outsb
lret
inc
repz
add
push
pop
fs
adc
fisubrs
or
add
lds
add
jb
jmp
lds
cmp
cmp
jnp
out
aas
lret
mov
xchg
mov
call
adc
aad
xchg
icebp
cmp
sub
sub
pop
adc
stos
in
sbb
sub
xlat
aam
ret
jge
ficoml
cmp
or
aam
ret
cmp
jmp
jnp
jo
pop
mov
or
popf
lret
dec
bound
fs
outsb
pop
popa
jmp
xchg
push
popa
mov
adc
in
push
xor
in
add
sbb
lea
mov
mov
jb
lods
jl
pop
orl
cmp
xchg
pop
xchg
sub
sub
dec
push
cmp
xchg
add
push
cmp
xchg
pop
out
jg
fimull
lods
jmp
rclb
jnp
add
pop
xlat
sbb
jecxz
dec
push
fldcw
cmp
dec
ljmp
jecxz
jp
push
mov
xlat
test
rcrl
mov
movsl
mov
pop
inc
cmp
adc
hlt
or
mov
inc
hlt
iret
xchg
mov
fildl
les
mov
pmaxsw
leave
push
xor
push
fsubl
stos
xchg
movsl
push
ljmp
dec
dec
mov
jl
fidivrs
aam
add
sub
inc
cmp
loope
mov
popf
mov
insb
mov
push
sbb
out
aam
mov
rcrl
cmp
imul
sub
cmpsl
sub
jge
loopne
es
inc
gs
imul
mov
mov
jecxz
pop
sar
sbb
push
xchg
or
out
andb
insb
movl
stos
jo
sbb
mov
push
arpl
cld
rol
cld
jae
inc
sahf
push
lcall
ret
xchg
add
cli
xchg
inc
test
out
sub
xor
push
mov
shl
cmc
and
sub
jle
pop
lods
sub
pusha
cmpsl
and
lods
je
jle
and
iret
test
dec
les
push
xor
ret
hlt
or
aas
and
or
adc
add
adc
xor
lea
jne
mov
xor
sbb
subb
or
rcrl
das
notl
sahf
cltd
sahf
popf
in
cmp
test
push
xadd
fs
inc
push
adc
in
xchg
fcomp
ficoml
mov
cmp
cmp
pop
jle
bound
shlb
outsl
nop
shlb
push
jl
andl
lret
pop
int3
addr16
mov
fcom
jb
popf
inc
jle
adc
psraw
imul
xchg
pop
incl
hlt
fwait
inc
icebp
jle
inc
mov
aas
incb
jne
std
fdivrl
pusha
jg
out
sbb
sub
mov
xor
adc
xchg
push
inc
leave
stos
push
jecxz
mov
ljmp
sahf
movsb
mov
out
je
leave
popf
push
jl
inc
test
sbb
subb
mov
mov
pop
mov
icebp
outsb
jmp
inc
shufps
jmp
and
shll
mov
jge
imul
scas
add
xor
out
std
call
push
jle
das
jge
xchg
or
sub
pop
cli
fld
mov
sbb
sub
out
mov
pop
ljmp
in
jp
icebp
and
jmp
or
xchg
or
push
hlt
sbb
sub
push
or
roll
out
jnp
loopne
mov
inc
fsubrs
sub
mul
mov
stc
adc
repz
cmp
loop
shl
adc
mov
adc
call
xchg
jno
or
cmpsl
inc
mov
es
jno
shll
mov
inc
sbb
lods
jo
outsb
jmp
mov
dec
repz
addb
mov
dec
mov
das
sbb
sbb
xchg
cmp
mov
lods
scas
loop
cmp
pop
in
sbb
out
std
pop
sub
je
dec
cmpsb
sbb
frstor
sahf
jb
xchg
fistpll
adc
test
mov
lods
mov
mov
sub
je
xchg
cli
repnz
sti
lret
inc
adc
shrl
or
stos
lods
adc
test
push
mov
cmpsb
push
daa
pop
add
rcrl
cmc
adc
rolb
adc
xorl
popf
mov
out
xor
and
into
jne
dec
test
stos
mov
out
mov
jb
fisttps
dec
sub
pop
hlt
sub
xchg
sbb
sub
lds
add
fiadds
sub
cmc
movl
xor
test
cmp
add
mov
test
in
sar
adc
and
jae
mov
les
dec
sub
inc
cmp
push
lahf
pop
dec
jl
mov
aam
aaa
mov
xor
in
sarb
int3
pop
ret
xor
or
xlat
or
imul
cmp
xchg
push
pop
mov
xchg
notl
ja
or
jns
sub
test
add
das
xchg
hlt
xchg
inc
sbb
jne
mov
in
adc
scas
movsb
mov
sbb
lret
out
xchg
loope
lds
popl
mov
out
jp
int3
roll
mov
outsl
es
in
mov
int
push
dec
push
enter
xlat
insl
incb
sub
inc
xchg
jno
xchg
fnstcw
mov
notb
int
cmpsb
xchg
pop
les
lea
mov
mov
or
mov
sbb
jge
jns
pop
les
inc
jns
adcl
mov
fimuls
popf
xor
enter
clc
ljmp
inc
sti
xchg
add
jle
xchg
lea
mov
mov
sbb
push
bound
insb
ret
mov
pop
sbb
push
shrb
add
push
inc
inc
sbbl
jae
int3
lods
cltd
pop
out
push
rolb
xor
inc
jge
push
test
jae
decl
xchg
mov
pop
in
cmp
pop
mov
sub
inc
call
stos
das
pop
mov
dec
imul
cmp
cmp
or
adc
ds
cmp
mov
or
mov
push
loope
mov
cmp
push
inc
xchg
xor
push
scas
mov
scas
jmp
mov
cwtl
enter
pop
push
mov
ja
cmpsl
sbb
cmp
xchg
addr16
cmp
xchg
in
mov
into
dec
sqrtps
cmp
clc
mov
lds
lock
dec
or
outsl
dec
stc
push
fdivr
stc
mov
subb
popa
js
mov
inc
fcompl
adc
arpl
or
leave
dec
xchg
push
rolb
loope
into
movsb
iret
fidivrl
cmpsb
test
cmpsl
push
inc
jo
pop
mov
bound
enter
xchg
push
xchg
push
stos
sti
mov
lret
lds
inc
std
mov
cmc
cltd
fld
aas
xchg
push
jo
lcall
cmp
xchg
inc
ja
jmp
fistl
stos
push
sahf
pop
xchg
sub
mov
and
xor
movsb
out
xchg
xor
hlt
mov
fs
hlt
pop
xlat
stc
fsubl
adc
adc
fcmovnbe
jb
pop
jnp
movsl
ret
addl
fistpl
shlb
imul
jmp
mov
mov
bound
mov
les
bound
pop
jg
lods
sub
movsb
jbe
insb
mov
or
out
push
or
mov
enter
jae,pn
mov
mov
repnz
or
enter
repz
fwait
shr
and
shrb
inc
clc
or
xor
iret
loop
js
rolb
fwait
ljmp
xorb
inc
stc
push
pushf
dec
test
mov
add
loop
jl
push
clc
lods
jmp
stc
loopne
and
and
push
mov
add
jle
scas
movsb
push
jno
decb
mov
push
bound
jne
mov
in
pop
pop
jnp
test
ja
shll
and
sbb
dec
das
sarb
xor
xor
rorb
add
xor
aad
xchg
push
shrb
or
pop
xor
imul
rcl
hlt
int3
push
xchg
aaa
mov
jbe
pop
fsubrs
int3
xor
pop
dec
enter
dec
clc
ds
movsl
add
dec
cmc
push
mov
or
out
mov
ljmp
push
sbb
aam
jbe
cmp
push
les
fstl
jp
xchg
push
or
out
or
pop
mov
subb
mov
clc
mov
mov
jmp
ds
jo
cli
cmp
aad
cmp
bound
push
fdivs
sub
shlb
add
inc
dec
push
mov
rorb
lahf
fisttpl
rclb
lret
loopne
cmp
inc
adc
sbb
sbb
hlt
mov
cmp
mov
dec
fistpl
cmp
add
push
les
pop
out
mov
mov
imul
xor
lods
fwait
sub
fnstsw
dec
fsubl
jo
or
jae
inc
push
cld
xchg
dec
dec
iret
jnp
jp
mov
xor
jb
in
fsubrl
push
into
dec
shl
inc
out
xchg
mov
and
adc
cltd
in
cld
int
icebp
lcall
int3
rol
or
ds
sbb
mov
mov
test
cs
mov
into
fidivl
loop
inc
mov
or
dec
or
mov
sbb
adc
dec
sbb
xor
sub
pop
cmp
ss
pop
cltd
aas
shll
mov
adc
pop
test
fs
sbb
gs
adc
cmp
or
loop
pop
ret
sbb
imul
mov
mov
ret
outsb
dec
mul
in
pop
pop
push
ljmp
testb
repz
sahf
cmp
sbb
frstor
fnstcw
sub
dec
sbb
lcall
cmp
ds
lock
inc
or
xor
cltd
insb
mov
lea
sbb
mov
pushf
inc
in
push
into
dec
aad
movsb
lret
xor
out
xchg
jne
sub
in
enter
sbb
test
into
dec
ret
mov
cmpsl
stos
ret
lods
mov
and
adc
mov
fwait
sbb
push
test
dec
daa
mov
test
ja
cmpsl
sti
and
addb
or
adc
shlb
fcoml
fistpl
out
inc
push
popf
mov
fmull
leave
push
jne
mov
add
gs
shlb
push
mov
loope
mov
fwait
fs
mov
mov
sub
sahf
lahf
je
mov
xor
mov
lret
xchg
ror
cltd
xlat
arpl
subl
sub
in
dec
in
xchg
movsl
outsl
mov
pop
stos
icebp
fisubs
test
mov
in
fldl
pop
mov
adc
mov
outsl
dec
mov
test
add
in
pop
mov
test
adc
ljmp
add
inc
mov
pop
mov
pop
jge
lcall
add
cmc
out
shl
sbb
insl
dec
push
das
jo
ret
or
adc
ljmp
inc
test
loopne
divb
outsl
dec
push
dec
aaa
gs
andl
push
xchg
movsb
adc
or
test
pushf
mov
or
cli
lods
pop
shr
and
gs
pop
scas
int
fisubrs
movl
sub
loope
call
push
xchg
dec
cmp
aad
cmp
subb
lock
inc
push
ffreep
jne
cmp
loopne
and
inc
sub
cmp
sti
push
jmp
nop
clc
and
jnp
cmp
in
sbb
mov
pop
rolb
mov
push
sti
xchg
xlat
xchg
stos
test
jmp
in
sbb
lea
fmuls
loop
fimuls
fnstsw
mov
rcrb
pop
out
dec
or
lret
mov
fimull
sbb
xchg
push
xchg
pop
pop
and
jns
stos
call
xchg
loop
jb
adc
jp
in
mov
in
add
pop
js
push
xor
cmpsb
mov
dec
jo
mov
mov
sbb
aas
xor
sub
into
nop
push
aad
mov
movsb
iret
sub
push
in
outsb
ja
adc
or
lcall
shrl
push
imulb
rcrb
pop
pop
push
pop
jmp
pop
sbb
ss
popf
lret
cmp
sbb
out
lcall
movl
xor
xlat
jl
std
and
fstps
nop
negb
shrb
cmp
enter
fiaddl
sub
rorb
pop
or
insl
outsl
out
jmp
push
aam
xchg
mov
jge
adc
pop
out
mov
test
movsl
es
xchg
cmpsl
dec
stos
pop
ficoms
fisubrs
sbb
ds
pusha
rclb
jb
dec
int3
movsb
in
pop
mov
push
mov
push
mov
fbld
mov
inc
outsb
and
adc
push
inc
aaa
cmc
dec
fistpl
mov
xchg
fildll
addr16
int3
push
test
popf
sahf
loop
cs
ret
movsl
inc
cmp
pusha
fldenv
cmp
and
test
sub
repz
repnz
inc
ret
mov
jo
mov
adc
pushf
mov
xchg
sub
stos
add
rol
dec
pop
push
jg
test
mov
xchg
add
sbb
loop
jmp
mov
pop
adc
frstor
mov
mov
loope
dec
jecxz
pop
push
push
aad
lea
out
add
lock
jne
jb,pt
jmp
adc
fs
xchg
loope
cmpsl
mov
xchg
sarb
cmp
mov
jmp
int
div
clc
movsl
repnz
cmp
adc
fistpl
cld
addl
popf
pop
cmpsl
call
xor
and
dec
das
cmpsb
or
jle
dec
clc
fwait
lock
lock
cmc
popf
and
sub
jbe
out
arpl
loope
fiadds
movsb
cmp
lock
mov
and
mov
mov
test
in
test
cmp
cs
stos
inc
out
push
cmp
repz
push
mov
lods
and
mov
orb
mov
pusha
rcr
dec
loopne
mov
movsl
imul
fsubp
bound
mov
inc
mov
xor
cltd
jp
jns
pop
test
add
jp
ret
xor
push
arpl
arpl
loopne
sbb
lods
test
and
popa
stos
sti
jg
jl
mov
loopne
clc
adc
das
pop
lods
lds
adc
clc
int
adc
imul
pushf
or
movsl
lock
loope
push
jl
xchg
in
cmpsl
cmp
jo
rcll
subb
jle
std
push
popa
out
lcall
lahf
mov
cmp
pop
and
ret
test
aad
mov
xchg
hlt
push
sub
mov
movsl
jge
push
loopne
adc
insl
lea
rol
and
mov
adc
jne
push
arpl
and
call
jne
mov
sbb
ss
ret
sarl
mov
fs
push
shl
or
into
fildl
dec
add
inc
lret
sub
ljmp
das
aad
lods
ficoms
mov
push
lcall
pop
xchg
push
incl
rcr
outsl
adc
sbb
ret
lock
clc
sub
movb
add
or
jns
dec
add
stc
fnstsw
push
jne
push
ror
test
add
sub
xor
test
fwait
inc
addr16
add
add
pop
add
int
movsl
addl
stos
out
stc
rcr
mulb
xor
add
jbe
inc
jbe
std
mov
pop
jmp
pop
movsb
jle
repz
sbb
movsb
push
decb
push
jo
loopne
movb
sbb
mov
fwait
and
inc
pusha
pushf
mov
push
test
mov
push
fisubrs
lds
sub
mov
xchg
jecxz
xor
push
cmc
lcall
popf
mov
push
test
insb
insl
movsb
mov
repnz
mov
ret
in
into
xchg
outsl
dec
lods
arpl
jle,pn
xchg
das
cmpsl
cmp
insb
add
cmp
in
xchg
dec
jne
inc
cltd
xchg
cmpsb
ror
das
lds
xor
push
adc
ret
xchg
mov
inc
in
or
add
outsl
adc
fsubrl
out
cld
mov
mov
sbb
sbb
out
adc
mov
lret
sbb
mov
fnsave
sbb
les
addb
push
sbb
sub
stc
inc
rcrb
in
and
jno
mov
or
loopne
insl
in
inc
cmp
pushf
adc
mov
or
dec
cmp
pushf
inc
ss
movsb
jae
addb
cmp
add
adc
and
jbe
mov
je
add
lret
pop
adc
clc
mov
or
mov
ja
loope
int
add
setp
aad
push
fstps
in
insb
pop
outsl
js
out
pushf
mov
cwtl
add
ret
jg
add
jb
and
test
sbb
fidivrs
popa
std
adc
nop
dec
lods
jge
xchg
mov
les
out
mov
pop
sbb
repz
movsl
mov
jl
sbb
into
stos
cmpsl
divl
push
popf
scas
xchg
ret
mov
mov
mov
mov
jno
repnz
jle
push
in
mov
bound
test
push
arpl
jecxz
sub
repz
adc
loope
mov
cmpsl
dec
pop
cltd
stos
mov
inc
sbb
daa
nop
mov
xchg
push
add
vcvtss2si
ss
popa
xor
jne
loop
popa
sub
repnz
loope
adc
sbb
aam
or
push
std
daa
pop
leave
daa
xorl
mov
in
stc
mov
aaa
cmpsb
sub
insb
add
les
cmpsl
fmull
pop
cmc
xchg
outsl
cmp
sbb
sub
cmpsb
bound
lods
fmulp
sbb
icebp
xor
jp
adc
mov
mov
cmpsb
jecxz
ror
dec
popf
stos
nop
add
mov
xchg
push
imul
xchg
test
push
pusha
dec
insl
sbb
daa
sbb
dec
xor
icebp
adc
loop
test
adc
inc
mov
gs
aam
pop
idivl
test
mov
jmp
sbb
jb
call
sub
inc
sbb
push
out
pop
mov
sub
test
push
lock
cmp
adc
dec
inc
les
enter
jnp
int
icebp
mov
das
into
rolb
repnz
lahf
pop
sahf
lcall
icebp
push
int
mov
bound
cmp
scas
lahf
sub
push
adc
or
fstl
fidivs
mov
cs
aaa
leave
adc
inc
sub
jecxz
mov
xchg
leave
sub
in
cmp
jo
pop
data16
in
mov
lock
sbb
cltd
pop
add
or
test
mov
or
lret
mov
pop
imul
fsts
sub
mov
jl
popf
jne
mov
jecxz
xchg
cmp
mov
jmp
dec
xor
es
fsubrp
push
adc
wrmsr
sub
mov
adc
adc
std
jle
fcoms
mov
dec
test
shll
sub
push
add
mov
jmp
mov
sbb
adc
bnd
push
call
xor
and
lret
clc
mov
jb,pt
push
popf
fadds
rorl
nop
lahf
pusha
pop
mov
adc
cmc
loop
push
and
dec
xlat
cmp
jne
cli
sti
pop
push
pop
jl
inc
and
inc
stos
cmpsl
xchg
cltd
gs
sbb
cmp
mov
push
call
add
cmc
xor
cmp
les
test
in
testb
int
call
jp
clc
arpl
sub
adc
push
cmp
dec
sub
lock
std
mov
push
adc
test
out
fildl
xor
jnp
push
pop
cs
daa
test
and
cli
clc
pusha
lock
aad
dec
aaa
popf
arpl
divb
add
or
lods
sbb
addl
leave
jnp
sub
mov
lods
sti
gs
flds
fwait
cmpsl
mov
mov
jbe
loope
sahf
cmp
dec
cwtl
lret
testb
mov
cmp
dec
ljmp
sbb
sbb
in
bound
push
jbe
ja
data16
cmp
push
ljmp
js
xor
xchg
addb
jae
into
loop
stos
sub
xchg
jns
xchg
mov
rclb
sbb
rcl
mov
jmp
mov
push
jne
add
ds
pop
leave
mov
imulb
nop
test
mov
test
jbe
movsb
cwtl
shl
mov
loope
inc
test
mov
mov
mov
outsl
fwait
shlb
dec
aaa
add
xchg
into
xor
loope
push
mov
popf
lret
out
in
sbb
pop
cmpsl
cs
inc
filds
adc
mov
xchg
inc
test
dec
shrb
lcall
aaa
inc
and
inc
mov
das
add
dec
int
push
mov
sbb
and
cmpsl
jp
xor
popf
sahf
aam
inc
mov
inc
and
aam
jo
sarb
inc
cmp
push
les
push
repnz
fmuls
inc
xchg
data16
and
lods
fstps
js
es
sbb
aas
inc
out
pushf
js
or
mov
jne
jnp,pn
fwait
add
out
nop
push
ja
test
pop
fucomip
inc
add
adc
jl
or
js
xchg
xor
xchg
cmp
xlat
jl
jge
call
popa
iret
dec
and
mov
mov
pop
adc
cmp
cmpsl
shll
mov
mov
ffree
jbe
sti
cmp
pop
xor
out
inc
add
addl
mov
pop
adc
mov
pop
mov
fstp
es
push
add
adc
lahf
inc
pop
rcr
lret
cli
cmp
add
rol
loope
scas
pusha
xor
sub
and
pop
xchg
dec
fistpll
mov
dec
dec
mov
popa
jnp
adc
lret
iret
mov
les
insl
dec
repz
push
xchg
notl
fsubp
inc
sub
fwait
test
imul
imul
adc
adc
mov
or
add
aas
fdivrl
mov
jmp
cmp
adcl
mov
lock
dec
loopne
ret
test
mov
dec
jp
mov
sahf
div
in
into
and
inc
loopne
mov
pusha
lcall
and
push
test
mov
mov
cmp
leave
cmp
icebp
cmpb
in
in
push
push
int3
mov
addr16
pop
sub
call
frstor
addr16
add
pop
cld
jecxz
loopne
aas
aas
jnp
sarb
negl
xchg
mov
push
inc
repz
mov
jle
ljmp
pop
xor
push
sub
scas
repz
arpl
sbb
popf
popf
aad
xor
in
idivb
pusha
inc
lret
subl
jbe
inc
add
xor
lahf
xchg
mov
bound
jg
decb
and
inc
test
test
gs
xchg
test
push
xor
push
add
cmpb
movsb
cmp
in
inc
call
cmp
push
jbe
push
insb
xor
xor
push
cltd
push
push
ret
jno
adc
jp
or
xor
jne
daa
xor
cltd
cmp
dec
fbstp
pop
push
push
and
jge
dec
push
push
sbb
mov
stc
addr16
push
mov
jecxz
sbb
jge
mov
pmullw
shll
inc
dec
xor
adc
mov
or
scas
je
repz
sub
jle
mov
test
popf
dec
pop
sub
pop
dec
dec
inc
xor
inc
and
inc
jae
sub
or
jl
test
ljmp
pop
add
or
orb
fs
mov
pop
lret
and
mov
xchg
sub
lahf
jae
push
in
lods
stos
lea
xchg
cmp
into
aad
cs
mov
addb
in
cld
cmp
stos
sub
loope
rorb
enter
sahf
mov
add
jne
add
push
cmp
cltd
mov
xor
cli
ret
pop
xchg
lcall
push
lds
inc
insb
jg
and
cmpsl
repnz
cltd
dec
js
adc
pop
sbb
cmp
inc
out
cmp
mov
cmp
xor
pop
pop
mov
sub
or
dec
mov
jge
jmp
jle
jp
hlt
and
mov
das
aam
mov
pop
jecxz
clc
xchg
and
out
cmpl
idivb
sub
enter
int
push
std
mov
sbb
jecxz
ret
cmp
loop
jp
add
xor
add
push
lods
lock
aam
mov
and
scas
mov
inc
iret
js
nop
sar
cmpsl
test
es
push
es
sub
or
daa
sub
add
push
in
dec
cli
leave
push
dec
pcmpeqd
subl
lcall
or
loope
movsb
inc
dec
into
les
xchg
int
dec
int3
scas
or
sbb
inc
cmpsl
jmp
rcrb
push
call
scas
call
sbb
xor
fisubrl
dec
fdivrl
jae
fimull
scas
mov
pop
pop
outsl
jp
enter
xor
lds
cmpsb
pop
jo
jmp
rcr
inc
xchg
scas
push
mov
ja
lods
stc
or
in
jl
sar
sub
and
or
adc
lds
pop
push
incb
cmp
movsb
cmp
scas
dec
sub
cmpsl
inc
adc
je
jecxz
imul
fwait
jp
insb
repz
sbb
cs
popa
or
loopne
lods
pop
out
jl
mov
push
outsb
shl
testl
xchg
mov
and
adc
pop
inc
jns
sbb
loopne
xor
je
fucomp
popl
scas
dec
ret
adc
imulb
lock
fildll
mov
outsl
or
jecxz
add
inc
cs
mov
mov
mov
dec
mov
ret
mov
imul
daa
sbb
fwait
je
xor
or
jno
lds
lods
mov
daa
movsb
pushf
cmp
jmp
dec
inc
xor
test
and
insw
ss
cmp
cli
addr16
pushl
jge
jno
fisttps
pop
sahf
mov
mov
jns
int3
add
enter
jp
jne
out
stc
lods
and
in
ret
int3
stc
lock
popa
pop
mov
jns
mov
pusha
imul
imul
and
int3
inc
mov
or
int
inc
sbb
sbb
gs
sbb
mov
jo
loopne
xor
jge
test
and
jmp
jnp
loope
mov
dec
fcomip
pusha
test
mov
xor
and
ror
dec
mov
ja
arpl
dec
insb
pushf
adc
add
mov
dec
sub
dec
mov
icebp
je
repnz
mov
or
add
mov
jp
mov
and
imul
jae
loop,pn
call
pop
test
mov
sub
cld
jle
imul
and
sub
loope
xchg
test
push
mov
sub
add
add
ja
jae
mov
add
xor
inc
pop
pop
loope
clc
orl
idivl
xchg
or
and
popa
pop
pusha
adc
push
xchg
pop
and
imul
ljmp
dec
enter
mov
xchg
push
nop
dec
add
add
and
mov
cld
lea
xor
xchg
push
xchg
sti
aam
sbb
jge
xor
mov
test
push
cmp
sub
mulb
cmp
mov
mov
add
out
fs
jge
cmc
ja
mov
in
imul
aam
fbld
rolb
into
jns
je
push
xchg
mov
adc
repz
scas
repnz
push
fwait
push
add
fldl
loopne
test
jae
push
mov
mov
stos
sbb
cmp
pop
sub
pop
bnd
addl
sub
testl
gs
mov
sbb
jae
mov
push
pop
mov
lds
inc
lock
jb
jg
ret
push
push
mov
mov
sahf
outsl
mov
mov
ret
pop
mov
aam
xlat
dec
mov
jbe
cld
ret
add
lods
insl
xchg
ret
test
hlt
andl
mov
ret
pop
jg
test
loope
cmc
stc
stc
push
fwait
mov
add
push
and
fmuls
sbb
sbb
adc
aaa
push
enter
dec
fmull
cmp
stc
xor
mov
cwtl
sti
fs
les
xchg
mov
aas
fadds
fcoml
mov
enter
or
cmp
test
lcall
pop
xor
int3
fisttpll
push
scas
outsl
jb
xchg
pshufw
inc
js
xchg
mov
fdivr
movsl
and
lods
adc
aaa
cwtl
jmp
ss
sub
jnp
jae
lcall
movsb
fisubrs
xchg
jnp
in
nop
movsb
inc
loop
arpl
mov
mov
jmp
push
dec
dec
imul
pushf
xorl
test
cltd
push
fs
mov
mov
ja
push
xchg
sbb
xchg
shr
dec
mov
sub
jmp
aam
je
mull
dec
mov
sbb
jb
push
sbb
mov
xor
inc
xchg
fists
mov
xor
cmp
lcall
push
aam
call
aad
and
nop
les
sub
mov
out
mov
sarb
movsl
pop
xor
test
nop
dec
fsubrs
sub
mov
ret
push
and
scas
add
pop
adc
cwtl
xchg
jmp
insb
lret
xlat
inc
leave
sahf
xchg
ret
dec
fldt
icebp
jp
jmp
xchg
outsb
fcmove
mov
or
cmpsb
add
movsb
jl
and
hlt
pusha
jo
push
pop
fwait
mov
mov
xchg
mov
and
add
test
inc
call
leave
xor
test
inc
in
xor
push
sub
cmp
cmp
pop
mov
std
nop
jne
pop
mov
sti
out
sub
mov
sub
enter
stos
jmp
lcall
fsubp
mov
fiadds
jno
jno
or
cmpl
push
or
ficoml
adc
mov
jnp
lds
sbb
cmp
dec
stos
cmp
ss
jb
xchg
mov
dec
into
pop
xchg
mov
repz
sub
fistl
lahf
movsl
inc
stos
jne
nop
mov
and
mov
lret
fstl
sbb
lret
aaa
xor
sub
push
mov
cmp
sti
and
add
push
pop
xlat
leave
ss
aam
stos
stos
dec
gs
out
int
push
addr16
xor
xor
sbb
in
scas
adc
popf
mov
dec
arpl
outsb
sub
iret
out
imul
push
cmp
jle
mov
dec
inc
in
cld
jne
mov
mov
cmp
dec
int3
movsl
inc
fsubrl
push
mov
movsb
push
lea
std
push
pop
dec
dec
cmp
fistl
mul
pop
lret
pop
push
sti
pop
sub
inc
mov
or
inc
in
adcb
inc
fsubr
cmp
jmp
pop
das
or
fnsave
adc
insl
fldt
les
sub
or
adc
or
mov
in
xchg
sub
or
jno
xchg
cmp
and
leave
push
and
cmp
test
push
jmp
pushf
in
leave
mov
mov
out
in
jg
js
push
mov
pop
cwtl
push
ds
mov
pop
orps
pop
mov
rclb
fisubrl
sub
std
fistpl
addl
add
fprem
inc
repnz
ja
xchg
out
popa
test
cmp
pandn
xchg
das
inc
sbb
loope
test
mov
fadd
adc
andb
adc
inc
and
outsb
jb
pop
or
popa
sbb
inc
cmp
pusha
lahf
inc
sub
sbb
popa
filds
test
mov
sbb
ret
sub
jmp
bswap
loopne
mov
mov
inc
add
loopne
mov
and
xchg
and
cmp
pop
testb
call
aam
pop
push
inc
jns
jle
cmp
jmp
scas
cltd
js
fnstcw
or
sub
stc
push
adc
cmp
cltd
mov
jecxz
mov
outsl
pushf
push
iret
pop
or
dec
dec
cwtl
inc
insl
sbb
mov
or
xor
or
cld
pop
sub
pop
cmp
xchg
mov
pop
or
pop
popf
scas
es
push
jae
fisttpll
jns
sbb
std
stos
test
ja
push
enter
sbb
data16
in
outsb
mov
adc
jle
push
inc
movsb
and
aad
jns
or
lock
aam
xor
mov
xor
rclb
and
std
in
mov
stos
push
mov
leave
jno
dec
out
push
sbb
mov
mov
fucomp
cwtl
xchg
adc
outsb
mov
adc
push
es
push
lcall
mov
sbb
ffreep
adc
add
pop
aad
cmp
lds
add
xchg
sahf
adc
jmp
mov
sub
jp
adc
jmp
sbb
jle
adc
push
cmp
and
ljmp
movsb
inc
sub
adc
jp
int3
or
xlat
fidivrl
sub
fnstenv
rorl
pushf
xchg
add
repz
outsl
mov
mov
int3
scas
sub
add
jg
call
pop
pop
test
adc
and
stos
imul
and
fists
adc
lcall
push
lret
mov
pop
or
mov
ljmp
xchg
mov
pop
loop
js
push
shll
aam
hlt
test
hlt
inc
mov
pop
xchg
xchg
insl
add
cmp
sbb
pop
push
subb
lcall
out
dec
inc
sub
push
mov
fimull
push
sub
imul
idivb
jo
mov
out
push
fisubl
mov
pop
in
ja
or
imul
adc
jae
xorl
ds
scas
lret
sar
mov
scas
loope
lcall
xor
mov
jg
mov
das
inc
aas
jmp
aas
jo
dec
jmp
gs
xor
xor
mov
push
rclb
in
and
in
ss
or
repz
test
and
or
xchg
lea
inc
inc
sahf
sti
icebp
stos
jge
repz
lods
pop
xor
sbb
data16
test
mov
jge
lds
loope
scas
fwait
cmpl
mov
push
mov
cmp
in
push
jne
mov
push
lcall
scas
clc
jl
popa
xchg
push
mov
daa
mov
test
gs
mov
mov
pop
sub
mov
rcl
mov
gs
add
in
stos
xchg
out
addb
mov
call
and
mov
and
adc
push
dec
cmp
cwtl
nop
cmpsb
test
jecxz
jmp
pop
and
fucomip
sub
mov
and
mov
mov
xlat
lods
cmpsl
subb
in
push
pop
popf
add
xchg
ret
ret
scas
inc
push
aas
adc
call
xchg
sbb
xchg
inc
and
stos
movsb
xor
rcll
rcrl
sbb
das
and
mov
xor
mov
or
push
pop
push
sbb
fcompl
ret
add
dec
jge
push
repnz
jnp,pt
pop
push
sbb
push
add
jle
les
int
mov
loope
cmpsl
xor
or
xor
lods
insb
jo
xchg
sub
fidivs
in
pop
fs
mov
sbb
hlt
gs
add
movsl
add
lret
xchg
lods
cmc
mov
cltd
leave
xchg
lret
cmp
pusha
or
sub
js
mov
xchg
dec
mov
out
push
dec
popa
sbb
icebp
xchg
test
sub
imul
push
mov
jb
cmp
xchg
adcb
rcll
sar
mov
pop
xchg
movsl
xchg
test
sbb
xchg
sub
sub
sub
out
fsub
cmp
or
js
imul
sub
stos
sbb
filds
inc
push
jnp
pop
enter
pop
lcall
shl
negb
sbb
adc
pop
outsb
loopne
pop
adc
das
rcrb
loop
mov
outsl
pop
jo
or
dec
outsl
push
lea
jo
jae
andl
cwtl
or
sbb
push
pop
xchg
jg
mov
mov
jecxz
bswap
jle
subl
add
enter
scas
dec
push
mov
push
cmpsl
andl
out
mov
leave
cmp
cwtl
pusha
mov
shrl
add
fs
sub
jo,pn
xchg
rolb
cwtl
xchg
outsl
xchg
lods
pop
leave
pop
push
insl
xchg
lods
mov
shrl
push
mov
mov
sbb
outsl
jl
cmpsb
xchg
lea
sbb
cs
aad
add
mov
mov
roll
and
jp
hlt
les
inc
dec
xchg
loopne
xchg
push
pop
pop
gs
mov
sbb
jmp
and
cmpsb
sub
imul
sbb
xor
daa
sbb
jno
test
cld
sbb
ret
jbe
xor
lds
rcr
xchg
sbb
lret
ss
cmp
cmp
xor
cmp
xor
mov
lahf
lods
call
shll
ret
push
ljmp
inc
pop
and
push
mov
adc
insl
test
mov
stc
dec
jne
jae
lret
and
shrb
add
pop
lods
outsb
adc
xlat
xchg
int
add
lds
inc
xor
cmp
xchg
leave
dec
pop
dec
aad
mov
xchg
sti
pusha
cli
adc
addr16
mov
and
out
or
jle
mov
and
jmp
jae
mov
cmp
inc
int3
in
add
and
dec
and
ds
xor
lcall
inc
lret
xchg
jle
stos
and
mov
ja
inc
mov
cs
lea
xor
lock
adc
push
xor
push
jecxz
and
fdivp
adc
mov
ljmp
push
fwait
or
cmp
xchg
mov
jne
mov
les
cmp
out
jp
inc
into
jp
pop
cmp
pop
mov
and
out
or
pop
push
or
jno
and
sbb
xor
daa
or
nopl
fistpl
stos
neg
mov
xor
scas
and
sbb
lret
jbe
out
and
stc
push
jl
out
pop
or
popf
loop,pt
call
or
jg
subl
fadd
and
jge
fldenv
test
push
inc
push
sarb
enter
xlat
repnz
sahf
jnp
cmp
cmpsb
addb
push
add
sar
dec
push
and
adc
inc
shrl
mov
xchg
xor
fwait
push
or
cmp
add
loop
loope
dec
aaa
nop
mov
jae
mov
int
add
mov
inc
sbb
mov
rorb
sbb
les
hlt
mov
test
adc
adc
inc
xlat
push
orl
dec
in
addb
dec
insl
sahf
stos
fmull
adc
xchg
cmp
mulb
iret
xchg
lea
adcl
mov
pop
or
mov
outsl
mov
mov
sub
mov
sahf
ficoml
js
or
dec
sub
jne
les
push
push
or
add
mov
xor
and
cmpl
jno
lods
pop
loopne
xor
shl
shr
and
shlb
dec
push
push
push
mov
dec
loope
loope
push
jb
sti
xchg
xchg
push
mov
inc
mov
mov
rcrl
sarl
dec
mov
ds
or
decl
and
or
sbb
cmpsl
dec
loopne
add
icebp
aad
int3
into
cmc
iret
sarb
or
jp
outsl
cmpsl
adcl
mov
std
sub
daa
fs
sub
adc
mov
sub
mov
int
shrl
sub
dec
pop
ret
addb
test
jecxz
push
cwtl
test
adc
and
cmp
pop
addr16
cmc
jo
out
xchg
push
ljmp
cltd
adc
jmp
int3
and
dec
xchg
data16
fwait
cmp
into
pop
sahf
stc
pop
inc
xor
fwait
pop
das
rorl
cli
gs
inc
cs
mov
std
cwtl
add
sbb
shll
cmp
shll
cmp
xor
pop
mov
das
xchg
insl
add
inc
pop
mov
mov
frstor
or
aas
mov
jo
inc
in
pop
test
icebp
mov
das
or
mov
dec
into
jle
pop
sub
mov
inc
mov
dec
scas
cltd
mov
mov
popa
pop
cmp
jge
mov
dec
sbb
aam
out
sbb
lods
jnp
or
mov
sub
pop
xor
xor
jmp
and
and
fcmove
cmp
xor
push
inc
and
and
mov
nop
pcmpeqd
fnstenv
cmp
jecxz
adc
lret
mov
push
jg
je
xor
or
lea
loop
imul
loopne
mov
in
sahf
or
add
push
in
cltd
lret
movsl
mov
lret
lcall
jae
or
adc
cmpsb
dec
xor
scas
jle
sub
out
jp
ret
xchg
or
aam
movl
js
imul
add
and
loope
nop
add
loopne
mov
push
clc
std
inc
sub
repz
outsb
cmp
out
xor
adc
pushf
pop
sub
xchg
lahf
sub
enter
sub
fwait
stc
or
hlt
pop
in
push
pop
pop
pop
pop
inc
mov
lcall
loope
xchg
pop
inc
lock
mov
faddp
sbb
out
cmp
mov
xor
mov
stos
dec
ret
aam
push
add
imul
rcrb
and
fldt
lret
pop
movsb
push
dec
test
out
outsl
loope
dec
push
mov
cmpl
sub
int3
push
in
or
iret
cmp
push
dec
pop
jo
pop
sbb
inc
lods
cwtl
mov
movsb
repz
cltd
lret
fiaddl
xlat
adc
shl
mov
dec
xchg
mov
les
cmp
adc
xchg
pop
push
inc
lret
lds
mov
inc
xor
add
iret
stos
mov
stos
jnp
xor
mov
xchg
jle
push
xor
ja
sbb
stos
jmp
mov
pusha
lret
xlat
int3
adcl
push
sub
sub
arpl
xor
or
cmp
mov
cmp
pop
jnp
mov
pop
xchg
mov
cmp
imulb
sbb
pop
cmp
rcll
inc
inc
sub
pop
mov
sti
jle
push
ds
push
jae
ret
ret
and
cmp
dec
mov
dec
adc
cmp
and
push
mov
lods
jecxz
adc
push
mov
cli
test
roll
xchg
lret
jb
pop
mov
pushf
lret
or
outsl
push
lods
aad
nop
stos
scas
and
pop
inc
push
in
add
in
push
lcall
mov
repnz
cmp
lods
or
pop
push
in
dec
imul
ljmp
and
aaa
mov
in
jnp
inc
dec
shl
pop
mov
mov
insl
xchg
es
popf
push
cli
cmpsl
mov
pushf
adc
inc
mov
cmp
sub
scas
addb
fwait
cs
mov
pop
loopne
push
dec
or
inc
test
das
fldt
or
mov
movsb
mov
psraw
fisubs
mov
stos
out
push
test
mov
push
jne
mov
xlat
mov
std
in
mov
mov
lods
stos
adc
cld
push
cmc
addr16
mov
mov
ds
jne
pop
mov
push
push
negb
xor
xor
adc
jb
xchg
pushf
les
xchg
pop
test
mov
decl
cmp
scas
dec
jecxz
out
jno
lret
movsb
int3
sarl
and
inc
xor
cwtl
nop
sarl
push
scas
or
popa
mov
sbb
lcall
iret
mov
aam
dec
add
mov
ret
inc
cmp
adc
ret
fstp
xor
and
and
sbb
mov
jnp
pop
push
stos
dec
jb
or
das
xor
stos
das
jecxz
stos
mov
or
aaa
jno
stos
mov
jnp
addr16
adc
lock
adc
mov
jns
xor
jle
push
cmpsl
pop
lcall
iret
mov
sbb
and
sbb
mov
push
int3
testb
mov
lret
add
or
in
popf
sub
nop
jmp
cwtl
jl
xchg
inc
xchg
daa
push
xchg
call
jle
cmp
popa
sbb
int3
bound
and
pop
gs
aas
bound
leave
enter
fs
clc
inc
jl
test
mov
es
incb
outsb
mov
lods
xor
adc
stc
or
and
and
xchg
movsb
dec
cwtl
pusha
pop
dec
cwtl
adc
pusha
dec
data16
xchg
inc
es
mov
cwtl
stos
pop
mov
movsb
xorb
in
xor
sub
jno
and
fsubrs
orb
xchg
rorl
pusha
push
xchg
jge
xchg
hlt
mov
std
loopne
cs
push
dec
in
imul
or
scas
movsb
mov
jge
pop
hlt
out
xchg
loop
sub
cli
les
dec
xchg
rcrb
popf
lahf
data16
xchg
js
cmp
outsb
fidivrs
outsb
lds
push
in
pop
push
xlat
pop
fdivrs
mov
bound
enter
cltd
inc
add
mov
cmp
sub
fucomip
leave
popf
adc
movsb
in
sbb
lea
scas
cmp
cmp
push
test
dec
sbb
pop
imul
pusha
lcall
rcll
mov
ret
cmp
scas
inc
lret
inc
daa
sbb
std
sub
push
fnsave
aam
test
jle
arpl
mov
inc
cli
nop
inc
gs
inc
test
fcmovnu
cmp
rcrl
dec
aam
xchg
fs
xor
mov
dec
or
repnz
cltd
popf
pushf
adc
fstps
cmp
xor
jb
inc
ficompl
cmpsl
push
sub
leave
insb
or
nop
xor
pop
sbb
xor
jl
and
add
scas
mov
add
cmp
stc
or
push
ja
push
jae
cli
nop
and
lock
cmp
jb
mov
sti
xchg
out
in
adc
rol
push
fcomi
jl
pop
xchg
xor
outsl
iret
jo
xchg
jne
sub
ret
mov
stos
mov
movsb
inc
loopne
jecxz
jo
mov
cmp
imul
insl
pop
ret
outsb
icebp
loope
cmpsb
push
inc
daa
pop
xchg
ds
test
rcr
xor
hlt
dec
mov
mov
push
int3
mov
mov
push
imul
ss
cmp
xor
add
test
sbb
movsl
sub
bound
dec
data16
dec
inc
notl
sub
std
dec
dec
imul
xor
mov
cltd
test
pop
push
pop
fimull
stos
ret
test
dec
push
adc
enter
jb
icebp
fidivs
frstors
outsl
sub
mov
push
fists
sub
insl
movsb
sti
lea
xor
fxch
into
sub
push
lcall
mov
xchg
test
cmp
scas
imulb
ficompl
cmp
push
xchg
lcall
adc
dec
mov
push
xor
lret
lretw
push
sub
fsubl
daa
adc
dec
nop
mov
add
add
push
std
or
jp
gs
int
adc
or
mov
dec
lods
dec
push
mov
loopne
xor
xor
mov
fs
int3
jb
insl
or
push
adc
jb
jl
pusha
fisttpll
adc
sbb
cmp
or
lods
test
push
andb
movsb
dec
xchg
pop
pop
mov
loopne
pop
shrl
adc
push
adc
popf
divl
xor
adc
or
xchg
sti
xor
xchg
loop
test
pop
ret
add
arpl
incl
sbbl
push
push
scas
mov
xor
dec
sbb
pminsw
ret
test
cmp
mov
pushf
out
xchg
xchg
mov
adc
dec
mov
push
ret
fstpt
cmp
lret
addb
pop
push
leave
fstpl
inc
jo
or
add
clc
jno
mov
or
xchg
mov
scas
lds
pop
jb
sub
test
icebp
xchg
jae
xor
sahf
js
jg
loope
xor
xchg
cmp
lods
xchg
enter
and
int3
dec
fdivl
jbe
mov
loope
jmp
into
idivb
pop
push
inc
test
sub
mov
stos
js
pushf
insb
cmp
call
movl
pop
hlt
rorl
inc
test
dec
jno
aam
inc
jae
push
in
mov
and
add
sbb
adc
inc
adc
pop
add
sub
sti
cmc
inc
dec
popf
hlt
lock
jle
push
xchg
sub
addr16
stc
ja
test
out
mov
sbb
das
xchg
call
lods
mov
loope
adc
out
jo
inc
push
lcall
shr
add
fs
xchg
imul
lods
adc
cltd
stos
fsubrl
es
es
add
aaa
out
pop
mov
ja
xor
ja
xchg
mov
stos
movsl
inc
adcb
cmp
lret
xchg
push
sub
syscall
add
mov
out
lret
js
xchg
clc
cmpsb
out
shl
idivb
jne
push
sub
fstl
mov
insb
inc
fildl
call
and
mov
icebp
movsb
xchg
cltd
pop
outsl
aad
mov
dec
push
pusha
out
mov
dec
divb
adc
iret
aam
jp
pop
mov
adc
repz
out
mov
sahf
clc
neg
jle
mov
adc
cld
dec
fldenv
xchg
and
and
inc
out
js
xor
fisubs
js
sahf
dec
test
xor
int3
sub
scas
sub
xchg
adc
or
dec
cld
mov
ret
or
ja
in
adc
jae
mov
jmp
jne
ret
stos
hlt
and
adcb
mov
icebp
sub
sahf
scas
xchg
cld
or
jmp
data16
mov
mov
in
sbbb
daa
lahf
mov
jno
adc
jne
popa
push
fcoml
xlat
mov
daa
insb
cmpl
aad
cmp
mov
fdivs
jmp
lea
popf
mov
fdivl
movsb
enter
or
and
push
push
mov
xor
mov
or
pop
xor
outsb
fs
pop
jo
sbb
scas
addr16
or
jno
push
sbb
cli
pop
inc
inc
add
xor
stos
cli
jp
mov
ds
or
mov
pop
ss
sarb
xor
jo
and
push
mov
out
inc
arpl
movsl
dec
test
lds
cmc
daa
dec
jo
push
loopne
stos
cmpsl
add
mov
mov
lds
dec
nop
je
loopne
repnz
std
lret
xor
cmp
adc
inc
xor
lcall
mov
sub
xchg
dec
mov
ljmp
aad
jl
and
inc
dec
sahf
add
inc
jae
iret
cltd
sbb
stos
jb
push
test
and
lock
push
adc
mov
jle
pop
insl
jle
lret
dec
andb
jbe
mov
dec
iret
mov
push
pop
mov
jne
xchg
movsl
cld
fadd
icebp
adc
aas
push
movb
fnstcw
pop
imul
out
aad
xlat
inc
std
pop
std
xchg
mov
out
cmp
bound
dec
test
jb
sbb
popa
cmp
inc
cmc
je
daa
cwtl
sbb
dec
mov
inc
fdivr
mov
mov
daa
roll
mov
xchg
adc
add
xorb
mov
or
mov
pop
ret
add
add
stos
mulb
pop
jg
movsb
dec
mov
out
mov
xchg
sbb
fnsave
add
mov
lcall
fcom
and
fwait
add
movsb
jne
sbb
aad
in
pop
push
xchg
movsl
and
xor
mov
test
aam
xor
pushf
enter
lods
pushf
jnp
les
pop
pop
jo
popf
and
in
leave
cs
jp
fwait
mov
repz
ficomps
inc
jbe
dec
mov
cmp
rolb
pop
ror
mov
out
pop
xor
insl
aam
xchg
xchg
pushf
hlt
fwait
sbb
xchg
jno
lock
dec
inc
aas
outsb
mov
add
push
popa
jb
lret
or
xchg
cmp
xor
jno
dec
xchg
sbb
test
adc
popf
imul
mov
dec
push
xchg
inc
mov
repnz
xchg
xor
or
pop
xchg
fwait
adc
mov
cmpsb
test
iret
int3
xchg
jae
push
addl
ds
mov
inc
pushf
mov
and
shrb
out
mov
sub
hlt
fstpt
lock
xchg
dec
je
mov
push
sbbl
in
mov
movb
mov
shll
xorb
jbe
cmp
pop
stos
push
lret
insb
cmpsb
push
pop
or
mov
and
pop
sarl
insb
dec
in
addr16
clc
je
mov
jae
lock
sbb
sub
pop
xor
sub
std
xor
test
data16
mov
insb
pushf
hlt
sub
or
mov
jns
push
add
popf
dec
mov
daa
clc
dec
fisubs
cmp
xor
add
mov
mov
xchg
mov
lret
and
in
cmpsb
pushf
mov
shll
test
cmp
shrl
loope
aaa
test
stos
fildll
pushf
jl
int
pushf
jae
mov
mov
push
and
pop
inc
mov
pop
pop
lea
loope
mov
je
or
and
fwait
pop
sbb
or
mov
sbb
add
sbb
mov
iret
rcrb
std
or
cmp
pop
and
addr16
xor
cmpsb
sbb
imul
mov
adc
inc
inc
push
and
iret
mov
mov
lock
data16
mov
enter
xchg
dec
xchg
test
aam
sub
mov
in
cmovbe
pop
add
test
pop
jge
jbe
sbb
aam
mov
and
adc
add
adc
lcall
insb
xlat
xchg
loopne
sub
cmp
adc
ljmp
adc
mov
push
and
lret
repz
push
dec
push
mov
jae
pop
cmp
das
pop
loop
pop
cmp
cmp
xchg
rcrb
cmp
cs
jns
daa
jp
loop
in
inc
cwtl
xchg
add
push
xchg
fldcw
mov
cmp
test
std
adc
es
sbb
adc
bnd
xchg
jp
rcrw
adc
push
cli
pop
fildll
outsb
inc
mov
cmc
cmp
aaa
or
push
jecxz
scas
iret
cli
xchg
rol
sbb
push
ret
pop
mov
add
add
outsl
stc
outsb
sub
cmpsb
cmpsl
movsb
xchg
scas
insl
ret
jmp
fisubs
dec
lret
adc
fidivrs
pop
sub
in
aad
or
xor
cli
sbb
dec
orb
xor
in
repz
lahf
push
inc
mov
cmpsl
aaa
cmp
xchg
mov
ds
mov
frstor
movsl
int
imul
inc
in
enter
sbb
dec
adc
ja
scas
in
jne
imul
int3
out
adc
repz
push
rorl
xchg
aam
dec
xor
js
rolb
dec
loope
and
lods
rol
xchg
push
cli
lret
and
pop
scas
push
addl
mov
mov
sub
adc
outsb
jmp
aam
int
int3
xor
mov
cmpsb
mov
push
es
push
or
mov
movsl
std
mov
and
mov
cltd
negl
add
pusha
adc
add
xchg
or
and
enter
push
movsl
cmp
xchg
lahf
repnz
loopne
inc
aas
insl
stos
fcom
mov
adc
xor
iret
out
and
fwait
in
out
inc
int3
sub
or
stos
add
dec
xor
xchg
mov
xchg
adc
jno
ficompl
scas
pop
inc
mov
jle
sahf
mov
mov
jge
inc
lods
push
fldt
lcall
jl
add
add
cmovnp
repz
fiaddl
stc
hlt
cmp
mov
iret
cld
into
int3
xor
scas
push
imul
xchg
dec
mov
and
fwait
push
adc
mov
aad
pop
cmc
gs
data16
shl
sub
arpl
ret
jge
xchg
xchg
mov
loop
lahf
test
int
mov
mov
push
std
ficoms
sbb
sub
and
scas
and
rcll
add
in
xor
mov
out
aaa
out
jl
xchg
sbb
and
sub
add
inc
sbb
adc
mov
shll
cmp
xor
and
add
inc
dec
xchg
aam
xchg
mov
bsf
mov
pop
adc
subb
pop
mov
mov
sahf
push
adc
add
in
and
stc
inc
push
jp
add
or
in
mov
insl
sub
adc
mov
add
mov
xor
inc
xlat
mov
jno
ss
nop
aam
enter
mov
inc
and
xor
fstpl
sti
jmp
mov
adc
add
jae
es
cmp
and
test
pop
outsl
lret
mov
les
into
lret
scas
jecxz
xchg
push
ds
mov
int
ds
notl
pop
sub
xchg
lock
and
and
data16
jge
repz
pusha
insb
pop
popf
das
push
popa
cmp
jae
dec
xchg
movsl
leave
inc
jae
popf
cmp
mov
scas
inc
pop
mov
mov
sub
pop
dec
test
fdivl
xchg
add
push
inc
out
mov
inc
dec
jmp
sbb
push
lret
int3
add
test
push
les
push
cmp
in
mov
xor
sbb
mov
push
adc
seta
mov
das
sbbb
push
mov
fildll
and
repz
lret
les
xchg
push
ss
les
jbe
rcll
sarb
imul
sub
outsb
int
test
pusha
dec
mov
faddl
test
lods
andb
jns
xchg
lcall
lret
fidivs
xchg
icebp
jle
jns
sub
or
leave
in
inc
pop
clc
addr16
pop
adc
outsl
inc
sbb
inc
and
inc
pop
jno
push
mov
push
popa
cmp
inc
into
pop
mov
and
aad
adc
or
mov
sub
ret
jae
popa
fisubrs
das
cmp
sbb
mov
sub
xchg
clc
sbb
push
jnp
add
aad
or
nop
bound
shr
and
loopne
mov
fninit
idiv
sub
aaa
cmp
mov
popl
mov
mov
shr
inc
jle
or
xchg
dec
dec
mov
pop
mov
mov
fstpl
xchg
jns
push
jg
fcmove
or
mov
ss
mov
add
loopne
arpl
sbb
add
lods
test
fmulp
cmc
in
insl
pop
mov
inc
dec
push
test
ds
or
imul
xor
fnstcw
mov
jecxz
xchg
shlb
xchg
sbb
pop
ljmp
mov
ret
push
xchg
adc
out
xor
adc
cmc
inc
fprem
xor
insl
xor
cmpsl
pop
push
sub
xchg
dec
shrb
data16
sti
xor
loope
mov
insb
jno
adc
xchg
push
dec
sbb
xchg
adc
rol
sahf
outsl
lods
and
inc
stos
mov
jg
aas
xchg
mov
sbb
hlt
jo
lcall
test
xchg
xchg
enter
mov
ss
jg
dec
lods
sub
into
inc
push
mov
lods
mov
stos
rol
stos
js
xchg
call
test
out
inc
dec
andl
aad
dec
mov
or
into
sbb
mov
jmp
xor
xor
dec
push
mov
cwtl
add
shrl
daa
cmp
js
add
pop
enter
and
mov
xor
sub
js
or
dec
adc
and
mov
je
mov
nop
loopne
pop
sbb
repnz
ss
aad
movsb
jmp
sub
xor
inc
dec
test
xchg
lea
or
sbb
cmp
mov
push
or
sub
cmpsl
jle
in
push
xlat
je
mov
fildl
and
out
dec
dec
int
pop
pop
adc
mov
rorb
mov
cmp
ret
xchg
mov
mov
sahf
fcom
das
sub
rep
cmp
jg
fisubrs
and
das
daa
lret
add
dec
and
dec
rcll
popa
push
pop
nop
insb
inc
inc
out
jp
fists
xchg
lods
lret
inc
xchg
or
push
mov
mov
and
and
cmp
jae
das
inc
bound
insb
loope
arpl
sub
hlt
inc
inc
and
add
adc
dec
lods
mov
xchg
or
fisubl
nop
repz
xchg
shll
jp
mov
or
push
addr16
es
lret
enter
js
inc
mov
and
negb
jl
cmpsb
xchg
pop
cmpsb
jo
adc
insl
dec
shlb
dec
inc
mov
mov
xor
icebp
in
dec
dec
pop
or
add
adc
pop
mov
nop
sub
add
nop
sbb
jp
add
scas
shlb
mov
insb
hlt
or
fcompl
dec
jbe
dec
int3
mov
xor
dec
scas
xchg
pop
stc
dec
imul
sub
sbb
sbb
loope
mov
outsb
push
push
lock
test
jno
adcl
cmp
cld
xor
xor
inc
mov
cmp
in
ds
movsl
imull
outsb
xlat
jbe
cmp
and
lock
das
pop
add
les
and
jns
lret
outsb
dec
cmp
stos
mov
xchg
cwtl
jb
ds
icebp
test
pop
push
nop
repz
ds
dec
and
popf
flds
out
dec
ror
or
in
jnp
lods
xchg
ja
pop
leave
test
ja
loop
sbb
sahf
sbb
sub
sbb
mov
inc
daa
add
clc
inc
repnz
cmpsb
and
sub
push
cmp
push
sbbl
out
lock
cmp
xor
popf
sbb
xchg
movsb
jno
xchg
leave
test
mov
shl
insl
add
xchg
push
cmp
inc
lea
enter
int3
push
cld
aad
lahf
cmc
inc
and
repnz
mul
mov
xor
push
ljmp
or
jae,pn
and
pop
enter
mov
lret
xchg
xor
cwtl
or
cld
sub
aam
sarb
jecxz
aas
push
and
and
push
and
andl
cmpsb
jnp
ret
pmaxsw
pop
and
iret
xlat
adc
lock
mov
and
and
dec
rorb
adc
loop
shr
out
mov
xchg
stos
mov
imul
out
dec
adc
and
pusha
mov
insl
inc
xchg
int3
ljmp
dec
push
lret
sub
xchg
jbe,pn
outsl
cld
mov
imul
jmp
clc
movsb
add
mov
or
push
jge
jne
push
sub
out
sub
push
ja
xor
sub
or
jae
and
mov
loop
rcrb
clc
mov
lods
clc
or
and
rclw
add
inc
daa
das
dec
jnp
mov
jo
test
hlt
call
cltd
lock
fdivrs
ss
adc
jne
rorl
fwait
jp
insl
cmp
stc
or
cmc
int
mov
xor
test
xchg
sub
adc
jb
fnstcw
sub
test
xlat
arpl
iret
add
pop
or
add
movsb
jg
hlt
inc
rorl
fsubp
adc
ja
es
xor
movsb
inc
cmp
or
ret
cmpsl
ja
stos
les
andb
jnp
add
loopne
jg
inc
mov
cmpl
sub
in
int3
outsl
int
test
pop
ds
int
insl
sub
pusha
decl
out
dec
and
mov
lret
stos
push
mov
xchg
mov
jmp
adc
scas
xlat
lock
xchg
jnp
or
jo
outsl
addb
pop
inc
push
push
enter
lea
xor
std
stos
push
jnp
fisubl
adc
sbb
stc
mov
push
cwtl
or
andl
lock
fnsave
inc
int
jns
psllw
mov
sbb
out
ljmp
hlt
push
dec
test
push
jns
int
bound
sbb
push
add
jno
imul
add
mov
sbb
pop
lahf
int
xor
push
or
cmp
cld
in
into
shll
lods
sub
mov
sti
adc
jb
or
cmp
rcrl
mov
fisubrs
mov
aam
es
cs
mov
sub
nop
out
adc
enter
mov
cwtl
xchg
jbe
push
clc
dec
cmp
unpckhps
mov
push
and
xchg
sbb
push
andl
inc
pop
jmp
mov
pop
push
imul
xchg
ljmp
adc
data16
shll
add
pop
jmp
ss
xlat
xchg
imul
addr16
mov
data16
add
pop
popf
nop
jmp
in
fsubrs
jmp
sub
arpl
sahf
hlt
push
cld
in
push
pop
das
sbb
cmp
in
push
lcall
xlat
iret
cmp
stc
sbb
arpl
fs
gs
sub
or
in
jp
scas
and
fisttpl
inc
fdivs
jns
adc
dec
pop
ficomps
mov
fcompl
jle
mov
outsb
jl
and
icebp
rcrl
lods
inc
mov
push
fmuls
sbb
jb
ss
outsb
test
cmpsl
sbb
mov
mov
pusha
sahf
dec
push
ss
or
or
int3
xchg
sub
jle
loopne
rcrb
fisttps
aad
test
or
pop
mov
shlb
call
popf
inc
and
xchg
fld
push
add
or
pushf
or
sti
pop
ret
insb
test
xchg
or
rorb
pop
outsb
iret
pushf
xchg
xor
stc
pop
inc
popa
cltd
jae
lea
cmp
push
inc
jns
mov
scas
out
jnp
push
mov
xchg
dec
mov
xor
inc
in
jb
mov
lret
sbbb
pop
fst
mov
outsl
popa
mov
lret
mov
cmc
arpl
sub
pop
jmp
inc
cmp
dec
popf
pop
add
fbld
xchg
push
loop
fs
lcall
pop
ja
mov
clc
jg
jmp
je
gs
pop
sbb
mov
xchg
lcall
dec
rcr
lods
rcrl
pop
iret
pop
pop
add
push
push
pop
xchg
lock
pop
sub
enter
inc
cmpsb
sarl
cmp
lahf
mov
mov
mov
test
mov
out
jne
aam
enter
or
sub
inc
insl
or
loop
loop
xchg
mov
out
sub
push
pop
mov
mov
fimull
jle
in
test
aas
lea
sub
mov
push
add
mov
mov
or
or
and
int3
cmp
jl
add
inc
ja
loopne
std
xor
je
fidivs
push
cmp
sub
shlb
aam
mov
dec
jp
sub
movsl
repz
icebp
js
and
or
shrl
mov
icebp
jle
rclb
loopne
jl
aam
subl
dec
mov
fadd
mov
and
xchg
ret
sbbl
scas
inc
xchg
pop
enter
mov
jnp
pop
mov
movl
mov
pop
sbb
cmp
jl
jbe
jb
dec
jnp
lock
jnp
stc
add
js
js
cmc
lock
cwtl
xchg
mov
jno
xchg
jo
rolb
imull
or
sbb
jb
jno
jns
icebp
ret
popf
jp
cmp
mov
sbb
and
jl
in
fwait
subb
xchg
and
aas
jmp
int
adc
xor
pop
ds
mov
lahf
pop
adc
cs
jns
mov
and
or
out
and
or
repz
outsl
pop
in
aaa
mov
aaa
ja
sahf
into
mov
pop
mov
out
push
ljmp
xlat
jbe
out
pop
aad
jbe
movsb
push
jle
out
push
pop
sbb
push
jl
xchg
stc
fs
push
adc
dec
data16
sub
movsl
cmpsl
pop
xchg
mov
jb
and
aaa
mov
mov
jle
sbb
test
pop
aaa
add
push
out
shll
dec
or
cmp
faddp
js
das
cmp
fisttpl
dec
pusha
lock
arpl
jmp
shlb
outsl
jbe
sti
push
addr16
xlat
movsl
inc
ret
insl
dec
enter
mov
loope
movsl
or
xchg
sbb
adc
adcl
push
sub
cmp
dec
mov
aas
mov
adc
push
cmpsl
mov
shll
into
divb
xor
and
xchg
mov
bound
scas
xchg
sbb
sub
lods
and
fidivs
add
inc
mov
shll
inc
shl
in
cmpl
xor
in
mov
imul
cltd
and
iret
in
movsb
cwtl
test
shll
lea
rcrb
fisubl
stos
ljmp
xor
push
xchg
orl
roll
push
adc
dec
jge
cmp
iret
pop
ret
stc
mov
inc
das
lret
mov
in
enter
mov
arpl
aad
insb
add
cwtl
push
adc
ss
jle
cmp
aas
xchg
out
popa
mov
mov
das
hlt
push
mov
roll
adc
call
nop
xchg
cs
out
inc
fstpl
jecxz
or
mov
fidivl
or
cmp
push
push
and
mov
stc
jo
dec
in
xchg
jg
mov
insb
test
aad
imul
mov
mov
int3
ljmp
loop
jmp
sub
jmp
ljmp
mov
push
mov
adc
icebp
or
jne
mov
fldenv
mov
outsb
xor
and
rcll
pop
bound
into
loop
sub
test
rcll
jl
cmp
adc
adc
loop
pop
repz
outsb
add
mov
es
sub
xchg
add
push
mov
mov
push
sbb
inc
es
dec
jbe
cmp
cmp
movsb
cmp
jno
mov
sbb
stc
das
lea
push
insb
push
in
jl
sub
inc
in
aam
sub
dec
mov
out
add
mov
push
mov
je
xor
mov
repz
cmp
out
scas
push
dec
xor
add
aas
mov
xchg
out
jno
inc
mov
dec
stos
sti
add
xchg
push
jae
jl
je
push
push
push
daa
int3
out
jge
pushf
pop
and
sub
add
xchg
fstpt
lock
roll
icebp
push
lods
lods
push
jmp
xor
stos
inc
jae
rorb
mov
mov
mov
jmp
out
addr16
push
inc
push
cltd
int3
xchg
lock
addb
les
mov
or
add
mov
sub
mov
add
jp
loope
sub
jae
xlat
cmp
ret
mov
mov
gs
add
imul
movb
and
jne
add
sub
pop
movsl
pop
push
adc
aas
sti
xchg
je
test
shr
mov
pop
int
sub
sbbb
add
add
mov
push
sub
aad
cmp
cltd
pop
jnp
xchg
in
fidivl
int
sahf
push
shrb
mov
dec
inc
pusha
movsb
pop
xchg
je,pt
dec
daa
test
jle
loop
pusha
das
movsl
hlt
xchg
or
rorl
in
xchg
popa
mov
lods
leave
sahf
decb
subb
test
jmp
and
mov
clc
hlt
aaa
out
push
movaps
xor
mov
push
insl
push
aas
xchg
fsubrs
out
dec
jae
test
jg
xor
bound
inc
fnsave
add
fsts
dec
repnz
mov
fnsave
push
jmp
xor
push
push
pushl
sysexit
sbb
rcr
fs
sub
mov
push
inc
sti
dec
jae
scas
in
push
sti
mov
test
fisubl
cwtl
std
lods
cltd
ja
xchg
sub
xchg
aad
mov
push
mov
sahf
xor
sbb
inc
test
popf
enter
jl
adc
inc
les
subl
jae
mov
lock
xchg
xchg
aam
push
fcmovu
mov
sbbl
xor
ja
mov
pop
add
daa
sub
sub
pushf
add
pop
sub
add
icebp
popa
mov
xchg
lods
je
jo
cmp
pop
add
push
cmp
outsb
pop
ds
xchg
push
scas
insl
jnp
stos
or
mov
cmc
sarl
ret
cmc
lret
mov
movsb
xchg
xor
in
jecxz
clc
lcall
xchg
sub
insl
cmp
nop
aam
repnz
test
je
and
sub
mov
in
push
sbbl
mov
push
jae
push
or
dec
ret
push
jo
mov
pop
xchg
mov
pop
rcl
fwait
jbe
iret
adcl
or
ret
test
jb
xchg
imul
adcb
popf
xor
or
jg
mov
call
ficoms
insl
sbb
fcom
mov
sbb
xor
dec
adc
jo
add
fbstp
mov
dec
mov
lret
inc
sub
stc
inc
ja
mov
ret
jo
insb
or
orl
div
push
xor
lret
xchg
jo
mov
and
jp
subb
jns
push
mov
lret
in
push
jecxz
jbe
inc
xchg
pop
jae
fst
xor
in
sbb
cwtl
jns
xchg
fdivrs
jne
xchg
bound
stos
inc
sub
inc
xchg
inc
push
arpl
ficoml
in
dec
xor
sti
mov
or
test
sub
xchg
enter
mov
stos
cmp
jecxz
or
jecxz
adc
cmpsb
ds
stos
adc
das
inc
inc
mov
rcrb
or
in
scas
xor
jb
std
sub
cmc
cmp
lods
movl
aaa
std
pop
cmp
inc
aam
jbe
sub
cmp
add
rcrl
fmuls
andb
mov
push
stos
pop
mov
inc
mov
lret
mov
xor
ljmp
sub
fstpl
inc
fdivl
xor
jge
mov
mov
xchg
gs
insb
fidivrl
outsb
cmp
fisubl
arpl
sbb
mov
es
mov
out
lods
je
ss
dec
sub
ficoms
andl
fwait
dec
xchg
adc
fwait
add
arpl
adcb
mov
inc
xor
das
push
push
push
jg
sub
cmp
pop
adc
enter
xchg
push
add
push
sub
dec
jb
aaa
stos
inc
push
xchg
add
rolb
ficoml
addb
mov
mov
shll
push
inc
jecxz
movsbl
test
out
pop
sti
jne
pop
jne
mov
arpl
outsl
sub
clc
xor
insl
repnz
inc
mov
aad
adc
arpl
mov
mov
fwait
jle
call
in
push
cwtl
pop
push
mov
jae
cltd
lahf
add
call
enter
stos
data16
adc
stos
xchg
adc
cwtl
sub
cld
js
popf
push
jle
xchg
out
pop
mov
sbbl
pop
xchg
push
repz
pop
add
and
outsb
andb
dec
fstpl
cmc
fwait
sbb
jbe
push
aaa
arpl
incl
pusha
cwtl
xchg
outsl
rorb
cmpl
rcr
add
dec
cmp
cli
sub
lret
xchg
mov
pusha
insb
mov
inc
es
sbb
mov
nop
aaa
call
in
lret
enter
clc
pmulhw
aas
jo
cs
mov
jne
sub
xor
cmpsb
hlt
fst
jmp
fbld
out
enter
push
ljmp
mov
inc
aam
inc
xlat
or
scas
mov
or
jnp
gs
daa
and
lcall
push
or
jmp
mov
cwtl
push
sbb
imul
push
mov
pop
arpl
in
pop
xchg
adc
fwait
fwait
add
xchg
imul
add
ds
insl
or
push
sub
inc
pop
adc
lret
test
repnz
cld
loopne
xor
xchg
mov
or
fucom
mov
dec
icebp
jb
jno
jbe
mov
add
or
and
dec
cmpl
shr
popa
fisubl
fcomps
gs
aas
mov
inc
testl
out
pop
mov
out
incb
mov
xchg
inc
rcll
inc
scas
mov
js
jmp
sub
fdivrs
dec
add
in
shlb
push
or
pop
vmwrite
sarb
adc
in
sbb
add
imul
lods
dec
mov
cld
outsb
xchg
or
cs
iret
enter
scas
adc
dec
into
push
xor
ficoms
mov
mov
lcall
sbb
mov
mov
hlt
aam
xor
inc
in
jle
dec
dec
leave
xlat
andl
mov
iret
das
outsl
pop
sahf
dec
sbb
stos
or
imul
inc
pop
imull
sub
nopl
adc
add
test
lea
pop
add
or
bnd
mov
je
icebp
dec
dec
pop
add
leave
jg
jnp
aam
test
sub
mov
mov
cmpsl
mov
sub
xchg
stc
cmp
push
nop
mov
pop
add
sti
fs
in
pop
jne
pop
in
jnp
jle
mov
sti
add
imulb
xchg
cmc
lods
loope
xor
push
icebp
outsb
dec
dec
rorb
jp
jnp
pop
data16
sub
and
dec
mov
ret
xchg
mov
pop
jno
xor
cld
mov
loope
xchg
fincstp
popa
xorl
lods
lods
sqrtps
sti
repnz
lea
pushf
xor
clc
into
push
ja
pop
or
lea
dec
cmp
popa
fisttpll
nop
cmp
loop
icebp
adc
xchg
data16
hlt
adc
mov
sub
pop
dec
or
jb
cmp
jmp
push
dec
mov
js
sub
insl
in
bound
mov
jl
pop
scas
pop
imul
push
lock
mov
mov
mov
jmp
mov
test
xchg
cvtps2pi
lods
jae
xor
insb
inc
loope
push
jp
out
fnsave
or
xlat
aas
lea
or
addr16
sub
mov
jl
dec
mov
xchg
xchg
lcall
daa
inc
fsubl
lock
fsubs
pop
nop
aad
add
out
in
mov
cmp
and
push
loopne
mov
pop
inc
stos
add
and
aaa
jmp
xorb
push
or
sbb
cmp
inc
dec
mov
pop
xor
and
cmp
sbb
sarl
lods
jle
jbe
inc
out
dec
jge
pop
cwtl
mov
adc
pop
dec
push
cmp
pop
ljmp
pushf
or
testb
inc
inc
stos
dec
sbb
mov
dec
int
ret
outsb
sti
movsl
or
xchg
sub
jecxz
mov
mov
gs
and
jae
outsl
movsl
jns
xchg
push
xor
xchg
sahf
sub
pop
icebp
out
cmp
call
fbld
icebp
mov
ret
clc
mov
push
add
sub
adc
or
mov
jle
jb
inc
cli
jge
adc
xchg
in
sahf
and
xorl
xor
xchg
and
pop
mov
loopne
aad
aam
ficompl
or
and
out
shll
push
mov
in
nop
xor
int3
jg
lahf
pop
stc
stc
popf
stos
cwtl
sub
stc
xor
fimull
dec
inc
push
cmp
into
mov
or
lahf
push
out
lods
jge
out
les
and
repz
stos
lock
sbb
cmp
loopne
shl
fs
fsubrp
cmp
scas
jns
lock
adc
push
popf
mov
shl
pop
inc
nop
cmp
pushw
adc
dec
jae
stos
jmp
mov
or
mov
sbb
or
dec
in
cld
dec
xlat
js
mov
mov
xor
test
pop
int3
call
xlat
pop
ret
int3
jbe
and
test
adc
xlat
mov
cmp
or
add
add
add
add
sbb
popf
lretw
je
aas
jo
js
xor
daa
pop
adc
mov
push
mov
imul
fcmovnbe
clc
in
vmovups
lcall
mov
add
push
sahf
sbbb
pushf
push
outsl
data16
mov
jo
cmp
inc
sub
adc
jmp
and
jno
cmpsb
rcl
mov
dec
filds
fldt
cli
gs
mov
inc
sub
pop
movsb
mov
jmp
lods
clc
imul
adc
shrb
and
jle
lods
clc
mov
mov
scas
call
bound
pop
inc
jo
andl
xlat
push
jne
or
mov
clc
pop
or
mov
cmc
push
int
stc
xor
test
test
jnp
mov
xorl
and
sub
cmp
test
mov
dec
lret
ss
les
mov
pop
sbb
in
sbb
ljmp
out
adc
imul
add
lret
or
dec
addb
dec
jl
call
test
xchg
mov
adc
adc
popa
imul
fsubl
inc
push
inc
inc
stc
subl
pop
inc
in
mov
push
fisubl
divl
lods
stc
xlat
ret
mov
std
test
ss
movsl
outsl
cli
or
mov
fucom
cmp
add
and
or
scas
insl
xchg
aaa
adc
xchg
jbe
mov
sbb
xor
outsb
aam
cmc
fbld
xchg
or
mov
out
inc
sbb
rorl
inc
mov
roll
cltd
cmp
bound
dec
cmp
ljmp
int3
xchg
cmpb
jl
push
or
pushf
jmp
xchg
add
leave
mov
mov
inc
int3
sarl
cwtl
dec
xor
fimull
ja
xchg
mov
push
fnstenv
call
pusha
fisubs
outsb
rolb
inc
lea
scas
sbb
dec
push
paddq
sub
stc
movsl
fs
xchg
scas
rsm
in
dec
add
aas
dec
fsave
push
mov
cld
imulb
daa
cmpsl
out
and
dec
orb
add
adc
sub
pop
xchg
dec
lds
inc
mov
in
lcall
mov
pop
fcmovbe
cmp
out
sub
sbb
inc
xor
dec
mov
icebp
clc
std
icebp
and
loopne
and
paddsw
pop
repz
xor
jle
insb
pop
jp
pop
fs
jmp
pop
cmp
adcl
or
xchg
and
sbb
jl
mov
aam
sbb
popa
outsb
adc
stc
sbb
xchg
jg
mov
add
in
pop
aam
and
xchg
movl
and
rorb
jl
mov
ret
loope
jno
cs
pop
xor
jl
inc
mov
stos
ljmp
hlt
stos
cmpsl
jns,pn
pop
add
mov
and
inc
sub
pop
jo
outsl
jbe
inc
insb
xchg
xchg
sub
jne
pop
cs
daa
lret
lahf
pop
int3
sbb
xchg
jecxz
and
popa
mov
ret
jmp
xor
inc
sub
pusha
lock
out
lahf
adc
pop
out
in
mov
cmp
mov
pop
movsb
push
sti
adc
aas
xchg
push
fists
and
scas
mov
repnz
fwait
aas
pop
outsl
scas
adc
sub
cmp
sub
add
call
bnd
sti
je
or
loopne
dec
cltd
int3
mov
fs
ss
outsl
push
mov
aaa
popf
push
push
aaa
dec
es
and
jnp
and
pop
shlb
shll
sub
popf
sbb
mov
into
sbb
xlat
fs
sbb
addr16
and
fidivl
add
pop
das
movsb
adc
lea
cvtdq2ps
sbb
push
fists
pusha
out
fwait
sub
pop
xor
jne
jp
lea
popf
sbb
fwait
or
outsl
aaa
xlat
mov
push
enter
lods
lock
xchg
imul
adcb
out
fs
std
xchg
roll
xchg
lret
mov
jb
scas
lahf
ror
loope
dec
scas
fldln2
xor
add
xor
cmovne
jo
sub
mov
rcll
popa
cmp
movsb
out
sub
sub
add
fmull
jl
jns,pt
orb
iret
cmc
or
ret
xor
push
lock
xchg
mov
scas
xchg
push
mov
xchg
andb
pop
out
xchg
movsl
enter
dec
ret
es
jle
fstps
push
sub
fildl
outsb
mov
or
in
mov
push
cmp
add
iret
and
in
inc
jbe
mov
movsb
or
testb
and
pop
test
dec
push
leave
jno
add
pop
add
dec
hlt
pop
in
hlt
in
nop
in
into
or
inc
ss
dec
pop
insb
or
es
js
dec
dec
lahf
cs
mov
je
ret
mov
fldl
pop
mov
jmp
repz
shll
negb
cmp
add
in
lret
mov
lret
stc
into
inc
aam
mov
test
loop
sub
mov
popf
push
dec
and
push
and
in
cmc
rolb
ret
lcall
adc
mov
pop
mov
mov
scas
cltd
shll
insl
add
mov
cmp
mov
fists
shr
add
xorb
push
gs
rol
ret
repnz
adc
xchg
jle
ror
fcmovnb
lret
pop
fidivl
mov
dec
jne
outsb
add
sub
test
fadd
and
mov
ljmp
sbb
push
cltd
push
imull
mov
out
jmp
in
je
pusha
add
mov
adc
mov
dec
mov
roll
ljmp
push
push
push
push
rcr
in
inc
fdivs
jle
or
xchg
cmp
into
push
xchg
dec
or
push
mov
mov
pop
dec
stos
mov
test
pop
fsubrp
cmc
mov
jae
and
sbb
sarl
sub
loop
xchg
outsb
xchg
pop
add
les
dec
cli
loopne
test
cmpsb
add
clc
out
or
cld
fbstp
setne
rcrl
push
stos
jecxz
jle
and
cld
adc
push
push
add
call
mov
mov
sahf
test
cmp
adc
adc
jg
pop
lea
add
test
dec
inc
call
jp
xlat
cmp
fisttps
clc
mov
push
movsl
xor
xchg
ret
adc
jnp
xchg
dec
adc
scas
pop
mov
and
mov
mov
jecxz
cmpsb
fidivrl
std
pop
test
test
pop
ror
dec
in
out
dec
push
jmp
or
insb
cmpsl
dec
imul
mov
xor
add
mov
cvtpi2ps
fnstsw
xor
into
or
jo
mov
lock
mov
add
daa
mov
xchg
loope
add
dec
lea
call
mov
int3
fdivr
mov
add
inc
into
lds
fnstsw
jmp
inc
in
std
sub
fcoml
loope
stc
les
xor
push
call
sub
mov
in
out
sub
ret
pop
xor
loopne
mov
lea
and
sub
aam
add
dec
lret
ud1
xor
aaa
hlt
cld
mov
sbb
mov
daa
dec
in
test
lods
or
in
stos
fucompp
inc
ljmp
ja
imul
cmp
add
pop
hlt
cmc
pop
bound
jo
xlat
sub
xchg
pop
ret
xchg
jb
xchg
lret
mov
int3
push
fisubl
xchg
sarb
pop
jns
add
sbb
jp
stos
dec
dec
or
mov
add
outsb
push
xor
popa
sbb
push
cmp
aas
dec
mov
push
xchg
rcl
inc
fadds
adc
nop
sbb
adc
adc
test
xchg
pop
lods
mov
xchg
in
mov
popl
sub
stos
mov
jecxz
mov
pop
gs
outsl
adc
and
adc
mov
sub
out
repz
rcr
push
pop
es
or
pop
pop
sub
and
cmp
ret
dec
iret
xor
scas
test
inc
xchg
out
adc
sar
jle
mov
daa
fsubrl
or
mov
lret
jno
aam
call
mov
iret
insb
cwtl
jg
push
test
adc
pop
sbb
pop
test
ja
jle
aam
xor
test
fbstp
int3
dec
sbb
fdivl
jno
and
jge
inc
dec
sub
mov
sub
in
loope
or
lret
clc
jmp
dec
sarb
lods
loope
pop
test
lds
loop
cmp
shlb
nop
test
fwait
mov
xor
cmpsb
sbb
mov
xorl
pop
mov
xchg
jle
add
inc
subb
lret
sbb
test
js
push
sbb
fcompl
jb
xchg
or
mov
and
js
scas
push
lds
mov
mov
cli
imul
cmp
push
out
stc
stos
mov
imul
push
jae
imul
inc
js
pop
push
sbb
sbb
push
mov
and
and
sub
dec
xor
test
sbb
lea
pop
sti
je
ret
lret
adc
je
xor
ja
lea
lret
in
mov
and
push
call
cmp
outsl
in
ret
lahf
int3
vphadddq
pusha
jecxz
jbe
in
sbb
mov
inc
fwait
inc
dec
ljmp
outsb
dec
sub
sbbb
mov
pop
add
mov
sti
cld
fbld
fstps
mov
les
das
mov
int3
es
mov
imul
int
into
xor
rolb
cmp
mov
pop
add
jne
out
popa
or
adc
push
lods
sbb
mov
push
inc
xchg
dec
add
adc
add
cmpsl
cs
in
icebp
not
dec
sbb
pop
dec
ficoms
jnp
cmpsl
daa
push
adc
add
clc
xor
jnp
push
stos
sub
leave
popf
cmpsl
and
xor
inc
inc
push
mov
mov
xor
out
mov
mov
jnp
scas
add
cwtl
mov
stos
sub
cmp
inc
dec
sti
mov
sbb
gs
insb
jo
inc
aam
dec
pop
mov
mov
mov
cltd
dec
sub
pushf
pop
ja
sub
mov
imul
push
sub
push
hlt
lahf
pushf
mov
aad
testb
icebp
in
dec
mov
push
mov
gs
mov
pop
or
les
aas
mov
lods
loop
jle
pop
push
imul
jecxz
jae
sub
cltd
fwait
sbb
pop
sbb
xchg
sub
stos
xchg
leave
nop
inc
inc
push
nop
call
push
pop
and
mov
cmp
lcall
xor
cmp
xchg
ffreep
mov
fildll
lret
loop
dec
out
or
push
popl
fiaddl
popf
jmp
incl
sbb
mov
ret
addr16
inc
adc
and
xor
cltd
pop
lahf
cmpsl
and
mov
js
or
pop
mov
mov
into
xchg
adc
gs
inc
xor
addl
dec
lret
fucomip
movsb
fisubrs
or
xor
jle
pop
mov
rcrl
out
jns
mov
pop
mov
mov
xchg
lret
dec
push
jbe
push
adc
daa
stos
loop
jge
out
aam
fdivr
test
scas
scas
xchg
ficomps
add
pop
inc
outsb
and
push
ret
cmp
xor
adc
cmp
int3
pop
in
dec
sub
inc
mov
sbb
outsb
fcom
xor
insb
mov
sub
mov
jno
dec
mov
dec
and
xchg
fwait
sub
and
int3
xchg
sub
ficoms
fcoml
mov
cmpb
sahf
ljmp
pop
fwait
mov
jne
cmpsb
mov
movsb
jns
inc
xor
stos
xor
adc
pop
mov
sarl
push
mov
xchg
adc
add
jae
jnp
scas
xor
and
push
cltd
xor
or
jg
jle
xor
dec
push
push
cs
add
or
jae
repz
add
ror
mov
out
add
dec
ficoms
repz
sti
xor
adc
sahf
outsb
or
gs
fnsave
jae
jmp
or
mov
push
mov
jg
stos
mov
xor
popf
stos
mov
dec
repz
sbb
mov
inc
dec
in
ret
idivl
mov
xor
int3
lret
arpl
pusha
das
dec
pop
in
pop
outsl
dec
cmp
cmpsb
xchg
add
jb
in
in
fsub
or
push
cmp
js
jp
dec
mov
stos
jnp
pusha
jle
jno
cmpsl
xlat
mov
je
pushf
sub
push
add
test
xlat
push
dec
std
pop
sub
fcoms
sbb
lock
cs
pop
bound
xlat
xchg
or
insl
mov
mov
push
sahf
repnz
scas
or
mov
jp
inc
rclb
sbbb
imul
mov
dec
jb
shll
xchg
js
rcr
out
or
jecxz
mov
adc
jmp
inc
daa
or
ljmp
or
sbb
push
sub
or
sbb
scas
and
dec
fcmove
pop
dec
dec
lcall
cwtl
lahf
bound
shl
push
ficompl
int3
jns
pop
mov
bound
dec
dec
jb
dec
mov
pushf
sbb
fisubs
mov
mov
mov
pop
aam
sub
add
or
pop
enter
or
pop
cmp
out
sub
emms
rol
icebp
leave
outsb
inc
in
pop
scas
push
popf
add
loope
mov
ror
jg
adc
stos
inc
mov
pop
pop
stos
mov
push
mov
xchg
data16
stos
sbb
sahf
adc
pop
dec
dec
pop
fcomp
aas
push
nop
gs
in
insl
inc
dec
dec
aas
cmp
mov
dec
push
push
xor
ror
jnp
repz
adcl
rcll
jnp
mov
loopne
scas
lds
cld
sub
add
sub
cmpsl
push
and
out
fs
xlat
cmp
xor
icebp
test
push
popa
mov
xchg
faddl
lahf
and
adc
flds
jno
jae
push
jns
mov
std
lret
iret
pop
insl
push
jne
mov
or
addr16
sbb
sbb
imul
add
jnp
dec
mov
xor
cwtl
cwtl
sar
add
in
cltd
jmp
into
stos
push
flds
or
jmp
xchg
hlt
lea
addr16
dec
pusha
xor
cmp
adc
lcall
jge
andb
mov
fidivs
je
test
sub
or
jno
sti
mov
cwtl
sar
in
mov
repz
out
jne
mov
arpl
das
and
xrelease
adc
push
lods
gs
sub
ss
fisubrl
fidivrs
xchg
pop
aam
or
add
cmpb
fadds
cmc
cmc
add
push
inc
scas
sub
popa
dec
and
adc
js
ret
dec
ja
ret
cmp
stc
mov
repz
insl
lock
dec
sti
leave
jle
jge
hlt
push
sahf
pop
pop
lds
or
sbb
int
gs
lods
add
push
adc
popf
orb
mov
jns
xchg
jne
andl
mov
push
push
fildll
test
or
scas
adc
movsb
mov
push
fbstp
and
icebp
xor
outsl
dec
push
mov
orl
mov
in
mov
scas
mov
or
sbb
in
aad
xchg
popa
add
sub
push
outsb
cltd
sub
xchg
int
negl
jle
sbb
push
pop
push
cld
lods
xor
jle
jnp
push
sbb
sub
test
cmp
jmp
push
and
lahf
push
fisttps
mov
dec
mov
mov
dec
cmpsb
dec
or
out
sti
lea
int
push
and
fs
iret
pop
cmp
lods
sbb
xchg
insb
adc
in
pop
test
inc
push
clc
sbb
out
pop
jb
dec
dec
xor
dec
icebp
jle
rorl
lret
subl
test
xor
mov
add
out
and
lods
outsl
jp
inc
inc
mov
outsl
movsb
lret
ret
jp
mov
jns
cmpsl
and
mov
mov
cmp
jle
inc
mov
cmp
mov
mov
xor
es
sub
cwtl
imul
and
xlat
and
push
test
into
data16
ret
push
adc
adc
addr16
xor
js
pusha
pop
inc
outsb
cld
gs
and
or
loopne
inc
leave
jge
sbb
sbb
hlt
inc
aas
sbb
js
addr16
jge
enter
inc
sub
inc
and
bound
mov
mov
std
cmp
jl
fidivrs
and
ljmp
adc
pop
or
cmp
cmpsb
jae
dec
inc
push
push
mov
dec
adc
aam
popa
popf
pop
pop
cmpsb
cmp
pushf
cmp
cwtl
or
adc
push
mov
lods
pop
inc
or
push
mov
fs
and
popf
cmp
divl
scas
hlt
sub
icebp
add
repnz
cwtl
jno
adc
aaa
call
push
aas
adc
std
into
jle
adc
sbb
repz
mov
sbb
adc
inc
aaa
xchg
out
xchg
fcmovne
jbe
push
pop
test
mov
sarl
and
out
mov
mov
lods
lds
cmpsb
mov
inc
fdivrl
push
imul
in
dec
xchg
cmpsl
fmuls
mov
pop
sahf
lock
jno
vmulpd
adc
bound
add
repnz
sbb
and
cmp
xor
gs
mov
push
sbb
js
movsb
and
sbb
repz
mov
cmpsb
out
test
lock
gs
jo
xchg
sti
es
and
sbb
fldcw
sub
repnz
pop
pusha
and
and
notb
in
mov
mov
icebp
add
leave
xrelease
imul
pop
mov
cmp
xchg
into
fucomi
mov
pop
ret
inc
mov
sub
xor
cli
fadds
or
cmp
stos
aad
mov
popf
inc
fnstenv
mov
cmpsl
push
std
xchg
imul
nop
and
jae
jecxz
and
push
mov
out
jmp
mov
xor
aam
inc
out
mov
xchg
mov
ljmp
lds
pop
and
fisttps
push
or
xlat
pop
adc
mov
test
mov
push
scas
fistl
imulb
repz
orl
out
pop
ja
pop
push
jmp
loope
jns
sub
popl
ret
mov
sub
out
bound
hlt
out
inc
daa
imul
mov
jmp
cmp
pop
pop
leave
mov
jmp
subb
jge
cmp
sti
and
aam
inc
mov
adc
add
xor
add
pusha
inc
sbbb
push
lea
xchg
aaa
test
int3
xchg
add
mov
jge
mov
mov
pop
xor
out
mov
cmp
enter
lock
mov
push
mov
out
stos
sbb
cmp
pop
mov
cmpl
add
test
mov
xor
lcall
es
mov
cs
testb
add
pushf
arpl
push
mov
daa
enter
jo
lods
bound
fidivl
cmp
mov
mov
mov
icebp
mov
pop
xchg
fcmovne
mov
sbb
jnp
jbe
scas
sub
or
fwait
cld
cmc
call
std
jnp
inc
lahf
dec
mov
cmpsb
addl
dec
and
sarb
aaa
and
paddq
lds
test
add
out
inc
and
inc
mov
mov
aas
test
das
pop
sbb
sahf
enter
mov
inc
mov
xchg
sub
xchg
test
jae
mov
or
sti
adc
je
cmc
std
cmp
cld
out
loope
fsubl
pop
icebp
aaa
pop
cmp
into
mov
imul
mov
xor
notb
push
pop
xor
aaa
xor
std
ret
popf
and
popa
mov
jecxz
mov
add
cld
mov
jbe
pop
pop
sbb
add
loopne
pop
test
loopne
dec
incb
adc
pop
pop
fiadds
xchg
mov
jmp
inc
push
rcrl
stc
inc
je
pop
sbb
divl
and
push
sbb
jo
inc
ror
xchg
gs
js
daa
rolb
xchg
or
push
mov
roll
cmp
xor
mov
lods
pop
aas
adc
sbb
imul
cmpsb
sti
pop
dec
ret
std
mov
add
jle
andl
out
es
mov
ljmp
mov
cld
or
fcmovnb
les
mov
jmp
in
stos
xlat
cltd
pop
mov
ret
dec
push
mov
add
sbb
lret
imul
nop
testb
daa
adc
mov
mov
into
lcall
jbe
sbbl
mov
dec
dec
jmp
adc
negl
adc
mov
jb
mov
es
movsl
sbb
cwtl
xchg
sub
pop
in
jge
call
inc
fstps
sbb
cld
cmc
int3
xor
jecxz
adc
cltd
cwtl
gs
ja
std
mov
loopne
dec
repz
dec
dec
mov
adc
mov
sahf
js
mov
mov
sahf
es
shlb
sbb
out
lret
pop
into
inc
mov
inc
addr16
dec
hlt
inc
sbb
adc
jecxz
mov
jnp
repnz
popa
inc
dec
fldenv
mov
loope
cmp
jl
adc
insb
gs
scas
aad
dec
sti
out
loope
push
xor
cmp
or
inc
fildl
bound
or
xchg
adc
rclb
lahf
mov
inc
pop
fdivrs
cmc
cmp
and
ret
dec
sub
mov
dec
and
or
cmpsl
dec
xor
lahf
mov
xchg
or
hlt
add
mov
into
sbb
iret
imull
adc
cmp
jb
cmp
aad
mov
cmp
cli
or
cmpsl
push
push
aas
mov
arpl
inc
and
sahf
sbb
cli
leave
aad
or
stc
scas
mov
xchg
aam
in
in
dec
hlt
push
xor
out
mov
mov
loop
es
stos
jmp
inc
xchg
mov
aas
jno
sub
push
dec
or
fistpll
cmp
lods
mov
jno
cmp
cwtl
xchg
outsl
pop
popf
sbb
mov
jl
jb
nop
sti
flds
lret
aam
frstor
mov
jno
jae
sbb
insl
mov
pop
sbb
mov
jl
push
fisubrl
add
enter
loopne
sub
jae
das
adc
mov
mov
xor
jmp
jbe
add
stc
subb
lods
dec
mov
shll
sub
sti
cmp
into
icebp
xor
divl
xchg
mov
mov
inc
lds
add
inc
out
cmp
jg
mov
imul
sub
sbb
mov
loop
int3
jp
nop
ret
stc
std
xchg
inc
push
xor
les
iret
mov
xchg
inc
jno
stos
movaps
sub
shrl
or
add
lods
mov
insl
data16
jle
enter
cltd
push
jle
addr16
dec
sbb
mov
aam
adc
adc
test
out
out
push
and
mov
fidivs
xchg
mov
jb
add
outsl
mov
mov
ja
test
movsb
fsubl
int3
repz
jmp
leave
aam
push
cmp
aad
xor
dec
stos
arpl
adc
xorb
push
jmp
je
cmc
mov
dec
push
adc
leave
pop
fimuls
cmp
or
dec
rol
inc
lods
push
imull
dec
jb
loop
push
mov
icebp
aam
loopne
aam
scas
cld
fiaddl
xchg
into
incl
mov
loopne
or
test
test
add
out
and
sub
adc
or
mov
mov
jmp
or
and
and
xchg
repnz
xchg
movsb
lea
lods
mov
and
addb
or
mov
mov
icebp
loopne
nop
sub
xor
dec
jle
and
sub
or
mov
jno
and
arpl
imul
adc
enter
xchg
mov
loope
add
adc
xor
mov
mov
sbb
jge
xchg
xchg
pop
fnstcw
mov
pop
xor
fadds
pop
in
push
jne
add
jmp
pop
loope
xchg
popl
mov
cltd
mov
sub
test
outsb
ja
in
add
scas
sbb
dec
fcompl
and
push
bound
lret
filds
add
sarb
int3
pop
sub
int
in
pop
popa
jno
mov
mov
mov
movsl
pop
cmp
pop
nop
pop
xor
xchg
lods
into
mov
and
inc
push
rcrb
repnz
daa
lret
out
lret
or
pusha
push
xorb
repz
or
pop
idivb
into
add
call
fwait
and
lea
jmp
pushf
xor
mov
pop
fldt
dec
mov
call
aaa
popa
and
js
sub
and
cmp
or
mov
dec
xor
das
das
mov
xchg
pop
xor
fmull
imul
jg
jne
cli
xchg
cmp
mov
sbb
jmp
test
cmovb
arpl
pop
xchg
pushf
cs
jmp
mov
outsb
xorl
mov
push
ret
sbb
in
fs
aad
jne
xchg
ljmp
cmp
xchg
xor
cltd
mov
test
fisubrs
fmul
pop
push
iret
sbb
sub
cld
fildll
inc
cmpsb
fcmovb
std
ja
pop
icebp
add
fcmovb
sub
aaa
nop
jmp
or
fistpll
aad
les
mov
outsb
push
fbstp
sub
mov
mov
lea
bswap
add
cmp
ss
andb
je
pop
stc
pop
dec
movsl
fwait
mov
dec
xchg
int
xor
incl
test
mov
cmp
aaa
in
icebp
cli
sbb
stos
aad
and
jmp
fldpi
js
in
movl
jp
jle
cmpl
mov
lock
pushf
cmpsb
lcall
sahf
lcall
and
imul
mov
packuswb
lret
mov
rcl
sub
imul
mov
test
xlat
sbb
lea
sbb
scas
xor
fidivrl
xchg
sahf
bound
sahf
and
xchg
jmp
out
fldl
cmp
and
stos
cmp
dec
subl
mov
sahf
test
mov
push
scas
sbb
or
mov
test
fdivs
cmpsl
xchg
ret
cmp
cmp
in
in
mov
sahf
fildl
xor
pop
js
lods
xchg
mov
mov
fcompl
inc
jl
aas
push
stos
imul
lret
addr16
xchg
mov
dec
xor
jg
dec
sub
xchg
xor
in
add
test
push
mov
test
jo
xor
lahf
ljmp
insb
pop
out
jle
cmpsl
jge
popa
shlb
imul
scas
cli
lock
pop
cli
mov
bound
loop
mov
subl
dec
sub
orl
enter
or
lea
imul
fsts
and
adcb
xor
jle
or
mov
push
movsb
push
fwait
in
das
sub
mov
mov
in
pop
jecxz
cmc
sbb
or
push
mov
int
inc
push
mov
pop
cwtl
or
mov
fucomp
and
fmuls
dec
out
dec
sbb
push
adc
popa
mov
adc
lahf
pmulhw
int
pop
outsb
shrb
mov
arpl
xchg
subb
cmp
xor
pop
cmp
in
lret
push
scas
shll
mov
push
movsl
mov
xchg
inc
in
loop
mov
cmpsb
lret
jbe
xlat
jl,pn
mov
imull
push
mov
pop
loopne
dec
test
clc
loope
sub
xchg
in
loop
lock
test
pusha
aam
push
inc
in
js
or
mull
repz
xor
lock
clc
movsb
or
xchg
shrb
sbb
fwait
lret
bound
mov
cmp
jno
and
or
xchg
dec
in
idivl
imul
inc
in
mov
push
fiadds
fmul
ljmp
pusha
sbb
jp
or
aas
aas
pop
test
sub
popf
inc
pop
xor
cmpsl
xor
mov
andl
ds
fnsave
mov
rcrl
imul
pop
enter
jmp
je
je
inc
lock
push
push
inc
fs
mov
jge
xchg
jns
shll
loop
or
mov
insb
dec
sub
aas
imul
pop
inc
adc
adc
filds
cmp
sahf
sbb
shlb
ljmp
movsb
or
popa
jg
adc
and
js
sub
fiadds
negb
mov
sarb
out
andb
int3
mov
icebp
loopne
cmpsb
adc
jae
pop
enter
icebp
iret
sbb
cmp
fimuls
mov
cli
sbb
push
mov
push
cmp
dec
out
fidivs
clc
inc
insl
lahf
adc
jmp
jl
stos
inc
xor
aas
in
push
std
lods
adc
ds
lods
adcb
mov
ss
out
test
hlt
loope
outsb
cmp
insb
mov
adc
or
inc
mov
cltd
push
push
ficompl
adc
pop
dec
mov
or
dec
lret
out
shlb
cmp
mov
test
cmpsl
mov
int
push
mov
ret
out
das
rcl
hlt
fnsave
mov
dec
mov
push
xchg
ret
jbe
add
icebp
dec
xor
adc
scas
std
jle
mov
xlat
inc
xor
sti
cmp
and
fdivs
icebp
mov
inc
dec
sub
inc
xor
movl
mov
lret
lret
xchg
pushf
enter
push
add
outsb
loopne
shlb
in
push
xchg
repz
pop
jnp
loope
or
sbb
jmp
inc
icebp
add
and
inc
mov
adc
adc
sbb
aam
pop
inc
pop
and
subl
insl
push
into
push
repnz
lcall
out
aam
in
jbe
adc
les
mov
sub
xchg
stos
out
in
std
mov
dec
jl
inc
lods
adc
ret
adc
add
insl
cli
cmp
mov
mov
pop
pushf
add
ljmp
xlat
fstl
and
rcrl
mov
sub
mov
and
shl
sahf
jo
mov
and
sbb
jecxz
movsb
movsl
loopne
enter
scas
mov
adc
jp
imul
sbb
xchg
cwtl
ficompl
enter
mov
jmp
push
frstor
outsl
das
leave
dec
cmp
bound
sti
fnstenv
jg
ret
fsubp
les
scas
addr16
inc
pusha
int3
ds
xorb
sbb
das
aad
jae
dec
inc
mov
add
test
xchg
add
jg
repnz
xor
pop
mov
mov
mov
mov
jle
popa
out
in
inc
push
roll
stos
cmc
xor
ja
cmp
cli
jo
popf
lods
and
jecxz
pop
cs
imull
pop
jae
mov
mov
pop
or
mov
repnz
shrl
in
or
sub
gs
addr16
bound
cmpsb
inc
mov
and
jg
push
mov
dec
rclb
enter
int
push
stos
movsb
ret
mov
out
mov
xchg
loopne
fcoms
mov
mov
rclb
hlt
adc
xor
mov
mov
xlat
repnz
jle
sti
push
mov
xchg
ret
stos
and
outsb
lock
mov
mul
xlat
cs
mov
adc
lret
pushf
inc
daa
sub
push
aaa
mov
iret
sub
add
xor
pop
sub
push
repz
push
add
dec
mov
jb
ss
add
pop
jg
pop
pop
pusha
arpl
aam
xor
push
outsl
shl
pop
aad
scas
repnz
or
add
stc
bound
push
jno
shl
outsb
dec
jnp
mov
mov
or
scas
stc
xor
test
int3
js
pop
daa
je
and
lods
push
mull
ss
and
out
push
lret
mov
sbb
movsl
bnd
and
nop
sub
lds
cwtl
enter
and
jno
and
es
or
push
rol
push
mov
shlb
jo
xchg
xchg
stos
adc
lods
das
push
fucomip
cmpsb
xchg
mulb
ja
hlt
cwtl
inc
add
pop
out
in
or
scas
out
add
stos
or
inc
stc
sub
xchg
cmp
jge
mov
or
js
pop
out
or
ret
xchg
sbb
aas
pop
cmp
sub
or
mov
cmp
mull
je
pusha
mov
lahf
xchg
mov
mov
iret
mov
and
inc
inc
sbb
out
xchg
or
push
mov
and
xchg
and
mov
ffree
lds
push
data16
clc
xor
xor
es
sbb
out
xor
ud1
enter
pusha
sbb
jmp
std
std
aas
push
jb
rcrl
fs
pop
enter
or
arpl
push
jle
in
mov
push
mov
mov
insb
fwait
dec
sbb
sbb
mov
fsub
pop
aas
lahf
or
adc
lods
and
incl
xor
lods
lcall
mov
pop
das
les
push
mov
rolb
add
enter
jno
mov
cmpsb
ss
or
lret
dec
ja
sub
fldt
cmp
lret
push
fsubr
xchg
pusha
or
scas
push
mov
xor
cwtl
ret
add
xchg
aad
aad
sarl
cmp
stos
loope
or
cwtl
adc
outsb
loop
push
pop
cmpsb
cmp
shrb
and
lea
pop
test
vxorps
mov
and
lods
mov
test
das
lock
mov
xchg
punpcklbw
mov
or
movb
push
call
sbb
jecxz
lahf
insl
pop
call
jnp
cwtl
dec
aad
pop
mov
lea
shll
fisubs
push
push
adc
xchg
int
xor
fcoms
repnz
repnz
dec
jle
dec
mov
pop
idivb
push
add
out
outsb
lret
les
mov
bnd
negb
pop
push
push
sbb
sarb
xlat
loopne
and
jo
xor
pop
cs
ret
decb
insb
inc
fwait
add
and
cmp
pop
mov
sub
mov
inc
lret
sub
or
lods
or
jmp
inc
mov
loope
dec
cmpb
xor
lods
stc
dec
or
out
sbb
xchg
ror
push
sub
sahf
addb
into
dec
lret
ud2
jle
mov
inc
pop
into
add
adc
dec
xchg
sbb
jns
and
jne
shrl
xchg
push
pop
sti
inc
dec
icebp
out
pushl
xchg
cmp
movsb
out
pusha
cli
stos
xchg
mov
mov
inc
jp
or
jle
adc
xchg
mov
push
dec
sahf
mov
jl
adc
enter
into
push
iret
add
dec
mov
adc
outsl
ljmp
stc
jae
sti
daa
lea
fidivs
sbb
pop
add
mov
sahf
icebp
sub
mov
sbb
les
imul
jb
shrb
fstp
loope
jae
inc
mov
lcall
pop
cmpb
sub
jecxz
and
adc
test
loope
cltd
jae
xchg
fstpl
jp
movsl
inc
cmpl
ja
add
sarl
dec
rcrl
into
add
or
fs
sbb
or
sub
movsb
adc
arpl
jnp
cmp
pop
mulb
and
test
scas
dec
add
lods
mov
mov
pop
and
push
push
lock
sub
cli
xchg
repnz
out
inc
adc
add
sbb
mov
inc
mov
fisubl
and
sbb
xor
or
mov
sub
data16
inc
pop
rdrand
int3
rcr
cmc
pop
sti
cs
sbb
lods
pop
mov
clc
loope
jmp
lds
enter
xchg
in
bound
sbb
iret
int
cmp
push
jp
inc
fldenv
arpl
pushf
mov
aad
cmp
rclb
sub
sbb
xchg
icebp
lret
mov
cmp
dec
jge
sub
lret
pop
ds
sub
clc
mov
pxor
movsb
mov
adc
mov
dec
paddb
cwtl
adc
adc
gs
jo
cwtl
or
pushf
andl
inc
aas
test
xor
stos
mov
push
sbb
xchg
xchg
sub
or
call
sub
sub
dec
loop
pop
push
jae
mov
cmp
jbe
lock
push
enter
add
cmpsl
sbb
mov
pusha
or
movsb
dec
repnz
sahf
nop
adc
xchg
int3
push
movsl
sar
cmc
ljmp
mov
mov
sar
jo
jo
mov
dec
shlb
jecxz
lret
push
jmp
ret
clc
mov
adc
daa
pop
jg
pop
rcrl
jb
out
jmp
cmp
aaa
xchg
enter
xchg
add
mov
adc
hlt
imul
cmp
dec
jl
adc
fisubrs
jbe
adc
mov
sub
lds
xor
rclb
xor
xchg
out
pop
or
in
rol
sub
jmp
pop
sar
int3
push
mov
aaa
sbb
jae
jl
cmp
pop
and
cmp
scas
dec
out
dec
cltd
add
xchg
dec
sbb
xor
aam
scas
sub
fildl
sub
inc
aad
rcrl
in
mov
dec
inc
cmp
jg
adc
sbb
cs
repnz
jnp
mov
xor
test
arpl
pop
dec
lahf
or
pop
inc
mov
rcrl
addr16
push
fisttps
aam
add
std
negb
daa
mov
ret
aad
jle
dec
mov
rcr
cltd
xchg
mov
mov
movsb
mov
aaa
pop
pusha
and
jae
add
sub
xchg
dec
push
xchg
adc
lret
pop
add
cmp
sbb
dec
push
cltd
lss
pushf
pushf
push
mov
dec
pop
sahf
mull
jg
mov
push
adcb
mov
xchg
gs
shrb
cmpl
into
or
call
outsl
test
scas
or
sti
sbb
out
mov
lcall
inc
pop
stc
aam
stos
xchg
pop
add
dec
cmp
push
out
pop
cli
lds
mov
add
stc
jecxz
test
ret
jecxz
ret
shrl
gs
push
push
and
adc
xor
dec
fbld
mov
imul
je
xor
ss
cs
add
cmp
inc
sbb
lods
test
xchg
pop
ljmp
mov
loop
into
enter
cld
icebp
jle
add
fs
ret
lods
test
leave
push
pop
data16
mov
xor
into
jo
imul
sti
xor
mov
popf
mov
push
movsl
fsubl
mov
dec
xor
or
stos
xor
cmp
mov
lea
outsl
dec
mov
out
push
and
scas
push
cmpsl
push
lret
inc
test
inc
pop
shrb
ds
adcl
bound
adc
movsl
jb
mov
jae
or
lea
mov
sbb
stos
xlat
stos
xchg
icebp
test
xor
sub
and
sahf
mov
sbb
pop
int3
mov
and
jnp
in
jne
push
xor
jne
bound
inc
fwait
ljmp
daa
leave
repnz
jmp
icebp
pop
iret
movsl
shl
hlt
mov
fs
int
dec
mov
dec
int
xchg
mov
cld
inc
and
pushf
cmp
lea
push
mov
ficoml
jl
push
sub
ret
mov
test
push
sbb
cli
jno
jnp
je
sbb
mov
lods
popa
enter
jnp
out
inc
inc
shl
lods
lret
popa
test
jg
adc
cmp
xchg
or
mov
pushf
leave
pop
fimull
fisubrl
gs
dec
xchg
imull
in
insb
inc
push
push
movsl
in
jo
sbb
xchg
or
cmc
pushf
inc
jge
dec
mov
mov
repnz
fistl
andl
mov
mov
pop
sub
xchg
daa
xor
pop
push
mov
fsubrs
rsqrtps
mov
sub
jbe
in
pop
mov
aaa
int
mov
jns
test
test
push
and
jp
aad
mov
test
fnsave
insb
lret
or
leave
cld
ret
sub
gs
pop
push
ja
in
stos
or
jl
pop
int
mov
movsl
cmpsb
sarb
je
neg
imul
rcrb
into
xor
hlt
mov
pop
inc
ret
mov
cs
cmc
xor
cltd
mov
mov
adc
push
pop
leave
push
cmpsb
pop
aad
outsb
es
scas
dec
sarb
mov
dec
jmp
ds
push
fldt
push
or
movsl
repz
cld
outsl
jnp
or
sbb
call
repz
ja
negb
push
and
cmp
repnz
inc
xor
pop
inc
mov
mov
fisubrs
lret
or
inc
mov
adc
inc
xchg
nop
pushf
pusha
js
add
pop
inc
mov
mov
push
imul
jge
and
jns
mov
push
inc
lock
dec
notb
or
cltd
adc
movsl
ret
fwait
imul
out
je
jp
ret
adc
and
xor
fcomp
cltd
cmpsb
ljmp
pop
scas
pop
loopne
dec
mov
jl
mov
mov
jns
xchg
xor
imul
xchg
pusha
notb
and
jmp
jns
or
jns
inc
and
or
add
ljmp
and
pop
adc
sbb
test
or
roll
lret
rol
push
lret
mov
les
cmovae
or
lods
fwait
add
xchg
mov
sahf
adc
repz
sbb
pop
out
dec
movsb
xchg
jge
xchg
and
mov
loope
cmc
scas
xlat
lock
mov
mov
addr16
or
xor
sti
xor
mov
and
inc
repnz
rol
aas
xlat
les
jnp
sub
jecxz
xor
aam
sbb
daa
stc
mov
stos
cmp
loope
aas
jno
sbb
dec
insb
push
das
mov
mov
negb
lods
inc
stos
loopne
frstor
adc
cwtl
out
adc
mov
pop
lahf
hlt
dec
sub
mov
cmp
push
es
ja
adc
lock
adc
add
sub
adcb
and
repz
sti
imul
jg
out
and
rcr
and
in
cmp
cwtl
mov
mov
in
insb
stc
mov
testb
jns
pushl
pushf
lret
push
pop
cwtl
repnz
std
xor
in
xlat
mov
fldcw
movl
xor
pop
sbb
in
jg
jp
lea
jno
int
or
mov
es
xchg
cs
sub
test
jmp
sub
mov
mov
add
sub
ljmp
xlat
xchg
jg
mov
and
pop
iret
mov
push
mov
insb
mov
add
xor
mov
outsl
js
sbb
inc
in
pushf
and
jle
out
aad
jge
fdiv
xchg
imul
cmp
jns
movsl
sbb
sbb
mov
cli
lcall
lods
popf
inc
sbb
add
imulb
xchg
dec
add
repz
andb
dec
xchg
idivl
mov
mov
mov
or
aad
inc
inc
test
in
stos
in
jl
or
gs
out
in
sub
xchg
push
out
inc
or
ret
negl
js
ficomps
cmp
xor
sbb
lret
push
ror
pop
scas
clc
add
fnsave
xor
std
imul
and
pop
ret
les
xor
sub
lea
pop
sbb
outsl
fistl
mov
add
cli
pop
shlb
cmp
mov
jle
loope
sub
sub
loope
lock
lock
js
sarb
popf
ret
inc
pop
lds
jp
rclb
shll
lret
pop
adc
adc
push
repnz
ja
mov
dec
mov
jb
lret
fwait
xor
int
or
cmp
adc
fucomp
cmp
dec
add
aaa
sbb
jecxz
lcall
jnp
insb
xchg
push
or
mov
pusha
pop
push
pop
mov
sub
repnz
ret
out
das
push
jbe
push
enter
cmpsb
mov
sahf
push
insl
test
mov
sub
arpl
add
fmuls
stos
mov
sub
mov
in
jecxz
pop
stc
push
je
sbbb
pop
cmpsb
incb
test
sbb
cwtl
push
xchg
jnp
inc
js
xchg
vandnpd
jae
insl
sbb
push
xchg
push
sub
int
call
mov
out
fs
inc
lcall
xchg
push
jmp
fmulp
mov
push
dec
or
shll
or
into
repz
sub
hlt
or
sub
mov
out
test
repz
xor
std
mov
mov
repz
sub
hlt
sub
sbb
pop
scas
in
or
add
pop
outsb
sbbl
mov
xchg
mov
adc
push
pop
cmp
sub
rcrl
dec
mov
out
mov
shrl
sub
mov
or
and
and
out
or
in
movsb
mov
int
movsl
enter
jnp
icebp
lds
subb
push
push
rorb
sbb
mov
movzwl
int3
mov
movsb
insb
sbb
lods
jl
sub
insb
or
fs
mov
sbb
push
jo
or
add
std
mov
jne
sbb
scas
cmp
push
int3
jne
test
int
cwtl
das
push
inc
inc
adc
mov
test
lock
push
hlt
push
cmp
xchg
jne
adc
mov
cmp
fistpll
je
int3
cmp
sub
dec
xchg
pop
adc
imul
or
aam
pop
push
jp
fwait
inc
inc
pop
add
cmpsb
mov
push
arpl
das
xor
or
cmp
loop
popf
outsb
xchg
push
lods
adc
lahf
cmp
fisubs
leave
mov
adc
sti
mov
push
mov
xor
push
lds
ljmp
xor
in
mov
push
invd
fsubrs
test
jl
cmpsl
jp
sbb
loope
and
in
mov
mov
sti
sbbl
mov
cmpsl
cmp
add
lcall
adcl
repz
test
sbb
pop
rorl
sbb
cmp
jecxz
rorl
mov
mov
daa
jmp
aas
sbb
cltd
cmp
mov
clc
or
jnp
or
imul
aaa
inc
jmp
fnstsw
nop
cmp
addr16
push
pushf
add
in
jae
pop
lahf
cmp
jmp
mov
ja
mov
andb
push
sbbl
or
mov
adc
popa
call
dec
jae
hlt
mov
stos
xlat
pop
jnp
out
sbb
mov
mov
imul
pop
xorl
cmp
adc
cwtl
xchg
arpl
or
ret
popf
loopne
sbb
push
out
add
sub
sbb
fcoml
iret
lahf
or
fisubs
xor
push
mov
jne
mov
xchg
pop
outsb
js
in
jge
sub
mov
mov
in
xchg
scas
jo
cmp
xchg
add
das
leave
insl
sti
out
jno
xor
mov
inc
adc
iret
pushf
and
in
adc
icebp
push
push
fldenv
imul
inc
cltd
push
xor
outsb
mov
int
cltd
insb
icebp
xor
xchg
subl
xbegin
inc
ds
inc
sub
test
xchg
sub
mov
pushaw
add
stc
mov
inc
adc
mov
sub
mov
es
int3
sbbb
mov
lahf
loop
enter
sti
sub
sub
sbb
sbbb
sub
lds
js
pop
add
int
pop
add
fisttps
inc
mov
mov
out
jmp
sahf
add
push
loopne
cmp
inc
mov
mov
imul
in
mov
mov
dec
fucomip
inc
xchg
pop
push
xchg
nop
jg
adc
imul
add
mov
cmp
inc
add
sbb
int
lds
iret
aam
decl
ljmp
push
and
mov
dec
in
test
notl
jmp
mov
test
bound
fdivr
test
insb
cmp
sbb
jb
sub
xchg
iret
adc
fstps
rcl
enter
int3
add
dec
xchg
xor
mov
sbb
cltd
clc
mov
pop
jp
jo
dec
ffreep
sti
aam
dec
sbb
jbe
add
mov
cwtl
out
add
lock
add
cltd
mov
jb
push
push
mov
or
int
fistpll
loope
cmp
push
add
or
popl
outsl
clc
cmp
push
mov
sub
dec
popa
or
mov
adc
jo
cmp
sub
xor
loop
or
jne
rorb
push
rcl
jbe
xor
cwtl
or
cmc
add
popl
call
sub
iret
mov
loopne
fcomps
shl
jmp
ror
xorb
and
pop
lcall
lea
insb
insl
add
mov
aad
loope
xchg
int3
ljmp
repnz
push
push
imul
cld
lods
and
mov
pop
pop
loop
leave
xchg
ja
loope
sbb
pop
xchg
movsb
lods
jmp
mov
and
fists
mov
into
repnz
pop
push
add
rorl
xchg
sbb
aad
lock
aam
push
inc
adc
test
cmp
sub
lahf
and
pop
adc
jnp
into
jo
shl
add
push
mov
sbb
sub
das
dec
jae
jns
and
lods
mov
or
sbb
repnz
cmp
incl
pop
testb
daa
add
pop
xchg
push
push
xchg
and
aad
stos
mov
in
mov
std
sub
jle
sbb
shll
scas
jg
mov
clc
aam
cmp
cmp
movsl
pop
cmp
cli
sti
ret
mov
jle
jg
rep
adc
dec
xor
leave
imul
popa
jns
cli
cmpsb
lods
mov
loopne
cmp
pop
cmp
es
pop
movsl
mov
xchg
scas
leave
sysexit
shrb
sbb
fs
xor
ja
pusha
push
lods
decb
lahf
fwait
lahf
out
fstl
adc
addr16
test
mov
imul
fwait
mov
fdiv
fcompl
bound
imul
jmp
and
test
icebp
int
push
sub
pop
or
loope
dec
and
mov
cmp
inc
pop
inc
aad
mov
aad
outsb
cs
push
andb
mov
pusha
cmp
in
test
jae
js
fdivr
sbb
mov
stos
cli
and
mov
pop
pop
xor
xchg
cmpsb
xor
push
test
sahf
ss
test
stc
popf
cwtl
lret
jbe
push
ret
adc
sbb
xlat
jnp
in
push
das
mov
bound
data16
fdivrs
inc
pop
jl
dec
sub
sbbb
xchg
xchg
arpl
shll
int3
insb
cmp
shl
add
sbb
push
mov
test
xchg
test
mov
push
xlat
dec
dec
xor
jne
push
bound
add
xlat
xchg
push
in
ds
mov
je
push
or
pop
and
inc
push
repnz
mov
pusha
jbe
dec
addr16
subl
outsl
movsb
jmp
mov
add
sub
or
fidivs
aad
sub
jbe
push
lcall
stos
ja
jb
push
movsb
dec
or
das
dec
or
pusha
loop
mov
sbb
mov
mov
jle
lock
adc
clc
sahf
pop
mov
out
push
pop
lret
repnz
pop
sahf
sbb
xor
stos
test
jg
fisubrs
add
sub
pop
lcall
sub
test
repz
xor
test
add
xchg
insb
loope
scas
add
jge
cs
push
popl
cmc
cmp
xchg
mov
xor
ret
sub
test
add
push
or
fldcw
cld
outsb
pop
out
ss
mov
rep
inc
dec
cmp
movsb
adc
testb
push
ret
scas
xor
xchg
in
arpl
mov
xchg
divl
mov
jnp
shl
sbb
pop
or
out
inc
out
xchg
xor
xor
repz
lahf
sbb
decl
sub
adc
jg
mov
xchg
sti
int3
push
imul
nop
jnp
rcl
lret
call
shrb
ret
call
xchg
int3
xlat
lock
push
out
mov
imul
adc
dec
test
aad
adc
bound
xchg
pop
push
scas
adc
mov
stos
loopne
xor
mov
pop
shll
movsl
stos
mov
repnz
and
pop
pop
faddl
mov
imul
addl
loop
lret
push
sar
dec
cmp
pop
inc
pop
and
xchg
imul
cmpsw
popa
testl
into
aaa
cmp
mov
and
mov
mov
sub
sti
stos
push
mov
and
sbb
test
aas
je
out
add
fmuls
sbb
pushf
and
xor
dec
lods
mov
mov
cmpsl
ret
xor
dec
fcmovne
cmpsb
dec
cmp
inc
xchg
mov
js
hlt
shrl
int
jecxz
outsb
clc
pop
imul
jne
jnp
sbb
mov
and
cmpsl
cmp
dec
lcall
fisubrs
mov
std
push
mov
subb
aaa
fsubrl
sub
jp
mov
sarb
pop
jecxz
or
jo
pop
outsl
and
test
ljmp
fstpt
cli
cltd
clc
and
jnp
cli
rcrb
je
jb
sub
inc
dec
mov
or
xor
mov
pushf
arpl
clc
add
jnp
cmp
aad
xchg
mov
aam
sbb
and
arpl
mov
in
mov
in
cmp
adc
mov
bswap
add
xchg
jns
leave
jmp
rclb
loop
clc
out
xchg
mov
sub
lock
fldenv
dec
out
jae
or
out
aas
xlat
push
adc
orl
loop
outsb
mov
xchg
cmp
push
je
sub
mov
fnsetpm(287
and
pop
test
push
adcl
push
decb
inc
inc
in
psubd
lods
inc
es
outsb
sbb
aaa
mov
dec
jge
xor
test
or
outsb
jl
out
add
repnz
aad
or
lds
push
sbb
mov
dec
stos
add
aaa
pop
pop
ds
mov
pop
mov
and
cmp
sbb
popf
fsubrl
ja
sbb
and
xchg
inc
cmp
add
ja
andb
scas
cli
test
jmp
sub
in
push
xchg
cmp
xchg
cmc
fidivl
aaa
add
jg
mov
js
mov
sub
add
mov
je
sub
cmp
aas
lds
cwtl
and
mov
xor
test
std
cmp
mov
push
into
mov
adc
aad
mov
cmp
lret
and
cmpsl
addr16
shll
add
ret
cwtl
xlat
push
mulb
xchg
pop
pop
insb
movsb
in
mov
jp
pop
test
or
popf
sahf
rcl
sub
add
and
imul
mov
add
cli
cmp
pusha
mov
sub
cmp
pushf
rcrb
pusha
cmpb
std
sahf
cmp
decb
dec
mov
cli
ret
leave
xor
and
jmp
arpl
or
jnp
xchg
mov
pop
adc
inc
cmpsl
push
mov
jecxz
sub
ret
imul
xor
js
data16
daa
aaa
into
das
stc
adc
mov
mov
inc
std
int3
std
pop
dec
sub
jbe
das
mov
fmull
pop
xor
data16
mov
sub
clc
push
mov
dec
cmp
pop
mov
push
push
fldt
pop
sbb
inc
mov
inc
iret
mov
pop
loope
aam
cmpsl
cld
jae
jno
cld
sub
jl
xchg
inc
imul
xchg
std
in
lods
pusha
sbbb
es
mov
stos
aaa
xor
clc
lahf
add
adc
xchg
arpl
mov
and
es
fldenv
dec
nop
sahf
and
pop
jp
mov
bound
or
decb
ljmp
and
fsub
mov
lods
jmp
hlt
pushw
add
cmp
loop
or
adc
and
stc
jbe
ljmp
or
adc
leave
add
ret
and
jp
jne
add
out
adc
xchg
cmpb
mov
inc
add
adc
sahf
arpl
cmp
call
divl
mov
es
adc
cmp
rcrb
ljmp
sub
fdiv
inc
les
jl
call
inc
clc
addr16
arpl
xchg
add
dec
cmp
cmp
mov
inc
ret
stos
mov
push
test
push
cmp
pop
cmp
xor
mov
lea
mov
imul
push
in
or
cmpsl
or
aad
shrl
xor
leave
in
aaa
cmp
inc
loop
mov
movsb
addr16
jns
je
adc
push
add
xor
dec
pop
ja
ret
outsl
ret
cmp
lods
sub
push
lret
aad
mov
leave
xor
add
pusha
out
add
jp
mov
mov
fcoms
sti
xchg
bound
jmp
xchg
icebp
sub
xchg
pop
xchg
jo
mov
xor
cmp
cmp
pop
mov
inc
pop
xor
xor
lock
shrb
mov
cld
hlt
push
inc
push
popf
lea
xor
sub
cmpl
inc
or
adc
inc
pop
fildl
popa
pop
or
cmp
insl
leave
negb
jb
fmul
sbb
and
lahf
stos
or
and
xchg
out
les
js
enter
fists
mov
xchg
push
push
dec
jbe
std
pop
sbb
imul
push
pop
mov
push
pop
dec
cmp
xor
dec
jp
adc
jl
push
add
ljmp
or
jl
jl
hlt
lahf
call
or
fs
in
and
xchg
jo
pushl
repnz
out
mov
cmc
pop
ljmp
scas
hlt
movl
jl
push
and
aam
adc
aaa
loope
daa
test
pop
push
xor
sub
in
pop
loopne
mov
std
add
inc
into
xchg
fsub
sbb
rorb
movsl
push
or
lods
dec
je
test
mov
lea
lret
push
insb
adc
xchg
add
out
jecxz
data16
mov
push
mov
aaa
sub
rcrl
sub
push
push
ret
aad
sub
loop
cltd
lods
cld
push
lret
rolb
inc
push
lods
push
sbbb
jp
fisttps
dec
cld
xor
mov
leave
dec
add
push
lcall
inc
jle
decb
pop
fidivrs
xchg
mulb
mov
sub
fldcw
jle
lods
cli
imul
mov
in
and
jl
jo
divl
iret
stos
cwtl
push
pop
mull
test
dec
lcall
frstor
imul
mov
fwait
xor
push
les
cmp
outsb
lods
fdivrs
in
stc
jbe
prefetch
inc
movsb
xchg
pusha
mov
scas
rclb
push
mov
xor
aaa
dec
call
mov
adc
jl
bound
adc
mov
xchg
push
leave
jp
notl
stos
pop
int3
xchg
fildl
dec
imul
jo
add
fs
pop
movsl
push
jecxz
movsb
or
mov
gs
pop
sbb
dec
add
cmc
decb
adcl
gs
std
es
imul
ret
add
and
inc
xorl
test
mov
mov
aas
repnz
pop
push
push
popa
adc
scas
arpl
xchg
pusha
sub
or
xor
pop
outsl
mov
dec
stc
adc
xor
pop
xlat
mov
xchg
add
xor
ljmp
xchg
add
movsl
das
add
fldt
out
fisubrl
mov
subb
sarb
add
gs
jl
repnz
inc
in
neg
jno
pop
notl
daa
lds
cmp
test
adc
rcl
les
mov
inc
shlb
mov
repnz
push
adc
cwtl
mov
cli
scas
add
and
jl
dec
mov
pushf
push
push
das
jbe
sub
push
push
xchg
std
xor
pushf
loopne
jmp
daa
sbb
xlat
int3
and
popf
push
ljmp
lcall
push
pop
out
fcoms
inc
xchg
js
mov
mov
test
mov
repnz
rcll
andps
dec
pusha
loop
cmp
test
cmp
or
cld
pop
gs
jle
daa
pop
jns
sbb
data16
outsb
push
cltd
mov
mov
pop
mov
xchg
pushf
and
bnd
push
xchg
in
into
ss
jp
sbb
nop
jle
in
jnp
mov
mov
inc
pop
scas
jae
mov
cmp
or
inc
jecxz
push
cmp
das
repz
push
mov
das
repnz
cmp
mov
mov
push
mov
outsl
cwtl
in
and
int
sahf
add
pusha
les
xchg
and
les
jge
out
aaa
dec
fwait
nop
sahf
mov
sub
js
stc
scas
ss
pop
insb
xchg
cmpsb
xor
pop
sub
push
sbb
sti
mov
jb
xchg
repnz
pusha
ss
inc
movsl
sbb
jo
xchg
push
fcoms
hlt
fdivl
xchg
dec
or
xchg
adc
xor
scas
jno
push
inc
ss
imul
incb
je
mov
sarb
jmp
push
adc
mov
push
scas
daa
add
dec
orb
ljmp
pop
les
and
cli
lcall
stc
sti
and
test
push
pop
inc
push
es
push
jmp
mov
pop
iret
je
xchg
fdivl
gs
test
mov
dec
sarb
pusha
fmull
in
jns
arpl
lods
dec
mov
aaa
gs
sub
or
mov
outsb
rcll
add
xor
ror
clc
xchg
jmp
dec
sbb
mov
ficoml
dec
push
or
icebp
adc
cmpsl
sub
add
mov
cmc
insb
mov
xchg
jno
push
movsl
jne
or
hlt
addr16
andl
sub
or
popf
and
jns
rolb
pop
ret
pop
cmpsl
clc
aas
ds
insb
test
popf
cmp
xchg
in
or
dec
cli
xor
repnz
jmp
sar
pop
lret
pop
xor
inc
mov
cmp
mov
cmp
pop
xor
lcall
lds
mov
cwtl
cmp
aad
lds
mov
insl
cmpsl
loope
cmp
and
add
ret
mov
add
adcl
push
lahf
outsb
and
int3
xchg
xchg
sub
loope
xchg
fcompl
outsb
jecxz
and
mov
xchg
aas
sub
jmp
jge
mov
in
cltd
mov
cmp
cli
jnp
or
push
psubw
xchg
mov
dec
sub
jbe
pop
mov
lahf
and
add
mov
sbb
xchg
shl
mov
xor
pushf
and
rcl
pop
jge
cwtl
xchg
cmp
adc
js
inc
add
inc
inc
xchg
sbb
fsubrs
add
pop
dec
popa
ret
orl
inc
std
or
cltd
aad
xchg
dec
mov
and
mov
inc
repz
inc
sbb
xlat
je
adc
shl
es
pop
add
mov
mov
dec
js
or
insb
sbb
ljmp
cmpl
mov
mov
xchg
cmc
and
pop
pushf
push
jg
xchg
dec
into
enter
jecxz
xchg
xchg
cmp
jp
leave
in
mov
loope
mov
test
outsb
cli
pop
sbb
clc
stos
pusha
mov
scas
mov
jno
sar
push
jo
je
pop
outsb
jbe
out
mov
push
outsb
aas
stos
or
sub
jno
adc
sbb
mov
gs
or
stc
pushf
es
in
inc
dec
out
adc
sbbb
in
push
adc
ret
je
sbb
sbb
test
xchg
psllw
jbe
xchg
ret
ljmp
orl
cmpsl
cmp
mov
or
repz
or
xchg
cmp
test
add
lods
sbb
adc
inc
sbb
and
enter
iret
cltd
scas
loope
mov
mov
arpl
cwtl
mov
mov
data16
lret
xchg
aam
xor
lds
lods
cmp
add
in
pusha
push
sbb
mov
xchg
pop
inc
insb
jbe
push
stc
testl
dec
dec
mov
xor
fistpl
cmp
pop
xlat
jecxz
scas
xchg
cli
int
cli
loop
push
sti
push
gs
dec
cld
dec
adcb
or
xor
jae
adc
push
test
pop
fists
pusha
mov
outsb
jb
push
lret
cs
popf
add
cs
push
pop
add
cmp
and
ret
roll
sub
sbbl
mov
mov
imul
es
rcrl
sub
push
popf
sub
mov
add
movsb
popa
mov
out
arpl
mov
scas
ret
add
inc
pop
mov
inc
push
pushf
and
and
mov
sbb
subl
xor
mov
xor
xchg
es
add
mov
cmpsb
dec
lcall
test
xchg
sbb
in
jmp
in
jbe
and
inc
stos
pop
arpl
pop
push
mov
mov
and
stos
ss
and
push
push
xchg
gs
sbb
mov
push
test
test
cmp
mov
imul
stos
or
scas
out
cmpl
jne
pop
shll
add
inc
jno
push
push
cmpsb
pop
cmp
xor
or
cwtl
not
sbb
or
fnstsw
jmp
jb
xchg
mov
test
xor
xchg
mov
mov
sbb
xor
sbb
ja
scas
cmc
jbe
dec
test
ds
add
pop
pop
and
loopne
daa
push
or
ret
and
mov
and
jne
in
push
pop
fwait
pop
xchg
dec
and
push
nop
mov
jb
add
jbe
pushf
lea
fsubrs
push
lock
leave
pop
in
mov
out
cmp
push
jo
lock
lea
dec
jmp
iret
sub
and
leave
push
test
sbb
sub
mov
mov
mov
push
pusha
mov
hlt
or
das
dec
xchg
repz
mov
int
call
ja
add
inc
pop
repz
aaa
jle
imul
in
cmpps
loop
cli
addr16
mov
xor
mov
sub
xchg
push
jecxz
xorb
rorl
nop
dec
pop
mov
push
dec
push
popa
pop
mov
hlt
stos
movsb
stc
test
cmc
into
int3
push
cwtl
jo
das
push
test
loop
pusha
das
inc
xchg
testb
lods
pop
sub
dec
fs
dec
rcr
dec
les
fstl
mov
inc
or
sar
test
fistl
or
cmp
add
subb
cmp
jb
push
or
subb
leave
leave
sbb
dec
xchg
xchg
clc
pop
mov
je
and
hlt
and
push
lea
cld
cmp
inc
loopne
xchg
lock
cmpsb
push
adc
loop
fiadds
sti
cmp
insl
pop
and
rcl
out
sub
inc
inc
not
shlb
add
adc
aas
jge
stos
mov
jmp
lods
xor
ljmp
idivl
mov
shll
imul
adc
cmp
insl
hlt
push
xchg
xor
popf
ljmp
aad
add
out
dec
or
and
stos
aad
pop
sbb
notl
sub
repz
or
in
inc
out
icebp
mov
xor
inc
dec
sbb
adc
aas
lock
dec
rcll
push
in
sub
lods
scas
cmpsb
xchg
inc
jg
dec
test
cld
aas
jg
bound
fisubrl
shlb
or
push
mov
jg
cmp
pop
js
mov
add
add
jp
pop
in
ds
mov
xchg
or
outsb
iret
inc
cld
mov
cmp
loop
adc
nop
aam
icebp
lods
ret
sbb
pop
mov
ret
push
mov
inc
or
pop
add
adc
out
push
nop
aaa
push
mov
add
or
fcompl
sbb
sbb
loop
xchg
lea
stos
mov
lods
xor
leave
popa
testl
push
imul
outsb
dec
mov
mov
lea
jns
lret
enter
or
sub
mov
cmp
stos
out
and
mov
mov
inc
sub
imulb
mov
push
loop
call
ss
sbb
xchg
addl
call
and
in
mov
or
push
sub
pop
out
test
pop
cmp
repz
xlat
imul
xor
subl
cmpsb
addr16
mov
pop
adc
pop
dec
and
adc
jb
ror
dec
sbb
dec
push
loop
and
jnp
pop
jg
lock
add
fucomi
in
pop
imul
pop
add
adc
jne
aas
mov
in
lock
pop
mov
movsl
push
sahf
in
cs
add
pop
cmc
out
lret
cltd
mov
mov
mov
popf
ficoms
jbe
sub
in
outsl
mov
sub
aaa
in
cs
mov
loop
aaa
insl
mov
push
xlat
sbb
mov
nop
test
push
fsubs
push
aaa
bound
or
jno
int3
and
add
pushf
pop
dec
rolb
sahf
xchg
mov
xor
lcall
add
jp
jle,pt
sbb
pop
and
sbb
ds
pop
les
sub
loopne
jp
push
and
jle
or
addr16
inc
mov
imul
or
mov
xor
mov
xchg
push
xchg
sbb
stos
nop
lock
rorl
leave
adc
mov
pop
ds
cmp
and
ret
cmpsl
sti
ficoml
dec
ljmp
mov
fs
fisubrl
in
xor
aad
ljmp
push
jb
daa
mov
add
cld
jle
mov
dec
and
fimuls
jo
sub
lock
add
loop
xor
inc
outsl
enter
rclb
or
notb
ret
or
inc
test
mov
loop
mov
or
in
bound
cmpsb
and
es
outsl
push
std
jbe
and
pop
cmpsl
gs
add
adc
jmp
pop
dec
mov
mov
out
inc
fwait
clc
dec
sbb
cmp
rcll
repz
add
jge
jge
cld
inc
test
subl
pop
subl
sub
ja
cwtl
int
push
stos
loopne
mov
pusha
jle
into
jle
fistl
in
gs
sub
fists
leave
jp
std
and
gs
fisubrs
push
push
lods
jnp
jbe
mov
pop
push
xor
and
or
sbb
push
roll
xchg
cmp
aam
mov
pop
lods
or
addr16
xlat
cmp
aam
scas
addb
mov
rdmsr
or
jp
mov
insl
jmp
push
aas
jecxz
test
dec
dec
loopne
jl
unpckhps
sub
inc
insb
jno
call
or
iret
dec
add
xor
sub
into
idiv
inc
push
lret
repnz
call
xor
test
and
and
nop
loope
outsl
outsb
out
sub
sub
pop
dec
arpl
das
and
jp
rcll
pop
jbe
insb
or
sub
lret
dec
push
arpl
jno
push
xchg
dec
sub
ds
mov
cmp
mov
sub
mov
shr
mov
std
mov
jecxz
int3
xor
jg
jle
repz
mov
and
jae
mov
cmpsl
add
adcb
pushf
xchg
adc
mov
bound
jb
das
mov
call
sub
data16
movsb
and
cwtl
lods
and
adcl
push
xchg
add
mov
sub
push
fbstp
fsubrs
push
pusha
test
int
ret
push
insl
push
xchg
sub
xchg
insl
jmp
lods
inc
or
out
jbe
sbb
jl
fimull
ljmp
inc
int
jno
cmp
sbb
test
aaa
sub
imul
adc
scas
cmpsb
mov
push
cli
dec
cltd
add
xlat
sub
sti
push
outsb
mov
rcrl
in
ja
adc
test
sahf
in
jo
adc
pushf
arpl
cmp
fimull
or
iret
cmp
pop
std
andl
pusha
cmp
push
rcrl
cmp
test
inc
jecxz
mov
in
fldcw
cs
outsb
in
bswap
adc
push
jnp
push
mov
dec
xchg
ss
fistl
stc
jne
jno
movsb
scas
jno
mov
pusha
dec
jle
jb
vpxor
ret
repnz
mov
xchg
mov
mov
push
push
ljmp
out
enter
cwtl
fidivs
dec
push
aas
pop
lods
and
out
ffreep
popf
rorl
dec
xchg
push
aam
dec
out
jmp
sub
inc
jae
and
imulb
mov
clc
inc
jbe
dec
lret
pop
dec
adc
iret
push
sub
and
leave
and
push
pop
cltd
out
push
jmp
sbb
lahf
xchg
xchg
xchg
sbb
fcoms
sub
dec
pushf
jle
add
sub
scas
movsl
dec
jns
adc
scas
jbe
in
pop
or
je
shlb
ss
mov
mov
hlt
pop
aad
xorb
adc
jmp
xchg
enter
aaa
xchg
scas
pop
ret
cmp
stos
out
or
jb
aaa
pop
add
mov
imul
in
sub
xchg
popl
enter
push
lahf
xchg
std
xchg
dec
imul
dec
cmp
test
fcoms
gs
mov
cwtl
or
into
enter
jle
insl
pop
inc
btl
cmc
jl
popa
xchg
fs
dec
pushf
or
call
std
dec
xlat
pop
lcall
xor
fistl
add
movsb
repz
aas
outsb
or
sti
mov
mov
lods
pop
push
sbb
add
push
jle
enter
test
jne
iret
mov
mov
bound
xchg
lret
std
xchg
push
add
add
movsl
xor
mov
or
and
and
fistps
sbb
stos
dec
and
add
imul
out
mov
cmpsl
xor
aam
sbb
cmp
mov
test
imull
cld
call
ja
mov
fadds
aam
cs
jo
add
mov
inc
andb
mov
insb
pop
xor
xchg
dec
mov
in
test
dec
or
push
mov
mov
test
es
xor
mov
popa
xchg
pop
adc
xor
xor
xor
fsubs
addr16
inc
push
inc
add
ror
das
std
out
iret
jl
mov
pop
insb
cmp
andb
or
push
lods
es
push
adc
pop
add
insl
mov
mull
jo
mov
stos
and
cmp
jae
xchg
adc
out
push
out
inc
xchg
cmp
iret
lcall
rorl
imul
or
xchg
int
loop
or
mov
cltd
mov
xchg
add
rorl
mov
or
inc
jge
bound
popa
cs
rcrl
call
push
cmp
dec
aaa
sbb
dec
pop
jbe
cmp
loope
add
mov
test
mov
jne
cmp
pop
push
orl
jecxz
imul
xchg
adc
jns
dec
lret
ljmp
aas
mov
cmp
add
mov
add
shrl
xchg
pop
xchg
push
es
mov
jne
scas
mov
sbb
pusha
dec
jno
cld
fwait
or
ss
adc
sbb
fldl
ss
popf
push
sbb
aaa
dec
pop
jo
inc
xchg
inc
rcr
mov
push
push
scas
fistps
lock
imul
sbb
or
push
jl
push
je
mov
ret
xchg
pusha
or
xchg
decl
adc
jl
dec
sub
idivb
lock
cwtl
mov
cmp
fwait
push
ret
mov
jecxz
scas
test
lret
mov
xchg
test
xchg
nop
push
mov
lret
lods
ss
into
loopne
add
adc
sub
imul
rcrl
jl
and
call
data16
add
testl
jbe
outsb
int
adc
mov
rcrl
inc
iret
push
pusha
sub
sbb
lods
add
adc
test
xlat
push
ja
dec
mov
lea
or
push
dec
shlb
outsb
sbb
testb
sti
in
leave
sahf
pop
jecxz
push
insb
lret
cmp
push
sub
sub
arpl
imul
mov
adc
out
xchg
pusha
mov
mov
in
or
fs
dec
pop
rcl
mov
mov
jg
jns
or
xorl
pusha
pop
xchg
and
or
dec
sub
fs
push
imul
sub
out
sub
mov
movsb
push
jne
xchg
mov
mov
fwait
stc
mov
ja
mov
pop
xor
mov
and
cmp
mov
and
mov
fwait
in
adc
dec
rorl
sahf
dec
adc
pop
push
adc
out
cmpsb
lahf
lock
fisubrs
mov
sub
mov
and
pushf
bound
mull
cmpsl
int
rcrl
orb
scas
out
dec
inc
sbb
inc
insb
mov
fwait
inc
add
outsl
andl
xchg
int
fildll
jl
inc
pop
ss
and
fnsave
stos
cmpsb
jno
inc
mov
pop
mov
inc
iret
push
and
mov
jl
pop
mov
fsubrl
int3
mov
pop
punpckhdq
xor
lods
repnz
aad
test
leave
and
jge
pop
xchg
push
daa
imul
inc
mov
xchg
imul
jle
sbb
xor
jecxz
adc
adcl
hlt
push
shll
pop
sub
fnsave
test
jge
mov
or
cmp
xor
repnz
cmp
lret
xor
shll
shr
dec
stos
adc
mov
enter
lods
or
mov
xchg
shrl
jl
sub
pop
jmp
jg
imul
add
loop
push
test
lock
cmpsl
xchg
lret
aad
popa
out
orb
gs
mov
test
stos
sbb
add
pop
fcomps
out
icebp
jmp
std
addr16
dec
dec
out
adc
sub
lret
xchg
inc
push
or
dec
decl
xchg
stos
sub
and
fwait
push
or
sub
lret
lock
inc
loope
stos
popa
and
aas
inc
inc
lea
es
movsl
scas
call
and
out
aaa
pushf
fistl
mov
ss
or
inc
and
fld
fsts
pop
pop
pop
add
fstl
inc
jecxz
mov
push
or
cmp
fisttpll
push
xchg
jge
fisubrs
lret
loope
push
loopne
aaa
adc
aad
mov
cmpsl
ds
jo
popa
fisubrl
mov
es
push
data16
pusha
cmp
stc
in
ljmp
lahf
fdivrs
imul
dec
out
movsl
add
ret
jno
out
xchg
test
lods
and
push
xchg
lods
shlb
dec
stc
push
and
xchg
hlt
fdivrl
repz
ja
sti
or
mov
mov
dec
xor
lret
out
mov
push
jno
fisubl
arpl
in
bound
xor
xor
fists
call
mov
jl
add
inc
jnp
jns
xor
ret
adc
fisttps
mov
insb
mov
push
insb
or
repz
mov
cmp
jg
int
inc
es
xchg
sbbl
sub
movsl
int
cmpsl
lock
cwtl
imul
sbb
loopne
push
dec
movsb
arpl
shrb
ja
lds
fstl
cld
jmp
cmpsl
mov
subb
push
mov
int3
shrl
rorl
jnp
sbb
pop
out
imul
cwtl
in
cmp
loopne
push
add
rolb
or
dec
sub
and
mov
add
push
sbb
ljmp
lcall
mov
aam
fists
adc
jl
scas
jge
sbb
test
mov
or
scas
sahf
push
ljmp
push
inc
pop
mov
dec
imul
xchg
adcl
cmp
and
pop
pusha
or
push
rol
push
add
xor
rcll
lret
jl
mov
pop
stos
or
mov
bound
fstps
inc
insl
mov
mov
icebp
andb
inc
sbb
jns
dec
cs
loopne
jecxz
jge
ja
in
sbb
xor
cmp
jecxz
scas
jmp
dec
push
leave
sub
cli
cmp
and
movsb
out
or
pop
inc
imul
sub
int3
loopne
cmp
inc
icebp
les
xor
sub
cli
outsl
mov
xchg
pop
jae
lret
jmp
inc
pop
xchg
lock
lods
fwait
push
out
idivb
cltd
xchg
insb
jg
cmovp
mov
movsl
mov
add
pop
mov
jnp
ret
jo
xor
or
inc
push
pop
sub
mov
mov
lds
mov
scas
dec
fbstp
divl
dec
xor
leave
ds
xor
in
adc
and
jp
pop
dec
inc
mov
scas
cmp
pop
test
add
movsb
xor
jne
enter
mov
dec
pop
adcb
sahf
jecxz
jl
int3
or
outsb
mov
xchg
aam
loopne,pn
adc
jg
mov
repnz
data16
pop
adc
pop
cmpsb
jge
mov
or
cmp
sbb
jnp
mov
xchg
jnp
test
mov
lahf
cwtl
and
push
test
cld
add
or
imul
push
jns,pn
inc
pop
scas
pop
sti
jae
cs
dec
and
and
dec
pop
in
pop
inc
jae
jmp
add
jne
popa
loop
mov
stos
push
nop
lods
dec
jp
inc
in
mov
shrl
mov
jmp
pop
out
std
pop
shll
dec
jb
je
jno
xchg
mov
inc
pop
in
dec
scas
fldz
add
hlt
mov
jge
fst
mov
imul
inc
adc
movsl
cmp
mov
and
push
cmp
les
adc
rorl
or
test
hlt
fiadds
add
int
lahf
sub
ret
sub
sub
fld1
mov
add
jnp
xchg
sub
sbbb
lcall
jno
test
cli
lret
xor
sbb
sbb
inc
push
fstpt
jns
push
lods
push
pusha
mov
aam
jle
jb
pop
cli
int3
in
into
test
xor
enter
movsb
push
cmp
jmp
pop
dec
pop
sti
fcomp
stc
mov
imul
ds
enter
test
jae
in
mov
sbb
inc
dec
add
mov
fnsave
mov
pop
test
xchg
out
cmpsb
or
mov
jl
mov
aaa
mov
push
inc
xchg
subl
das
cs
add
movsb
call
jnp
inc
outsl
iret
lods
dec
jno,pn
in
dec
push
sbb
push
insl
in
mov
mov
pop
dec
jmp
xchg
and
add
xor
loope
in
inc
xchg
xchg
mov
mov
sbb
lods
push
push
outsl
rol
std
xor
stc
push
or
push
bound
stos
andl
push
popa
dec
aad
mov
divb
sahf
sub
sbb
ret
xor
cmp
cmc
roll
repz
mov
cs
je
mov
push
icebp
xor
adc
stc
and
pop
in
xchg
mov
call
out
cld
push
or
xchg
popf
fidivs
lods
jo
decl
movsb
sub
jge
mov
sbb
hlt
imul
adc
arpl
fwait
jb
dec
sub
jne
ss
mov
sub
sub
cwtl
or
cltd
and
push
inc
or
sarb
xchg
outsb
negl
mov
mov
fs
dec
sbb
jno
push
push
and
dec
or
or
fiaddl
sbb
lds
push
shll
jno
pop
jae
pop
jnp
cmp
imul
jbe
es
in
aaa
cltd
mov
gs
dec
and
mov
imul
jecxz
pop
lods
pop
xchg
or
ficompl
fisubs
mov
mov
mov
mov
inc
mov
or
mov
adc
sub
mov
je
mov
out
repz
xlat
in
xor
orb
icebp
pop
out
add
cmp
mov
int
ja
jmp
adc
fbld
leave
rolb
dec
stos
pusha
rorl
push
cmc
outsb
movsl
insl
mov
rorl
pop
dec
test
dec
rol
jbe
pusha
loopne
push
fs
jg
push
sbb
cltd
mov
in
fsubr
mov
xchg
test
pop
xchg
roll
imul
adc
popf
or
mov
ret
jle
add
cmp
inc
mov
xor
and
push
imul
mov
decb
fsubp
push
stos
dec
adc
lods
mov
and
jnp
mov
ss
cltd
in
loope
dec
jbe
stc
or
and
pavgw
aad
and
inc
out
jge
in
add
out
pop
dec
adc
mov
fbstp
outsb
pop
es
pop
stos
sbb
jbe
jbe
jne
mov
jb
push
seta
bound
gs
lds
inc
stc
adc
dec
lmsw
or
sbb
in
push
cmp
jb
scas
stos
inc
gs
pop
fs
pop
cltd
and
iret
mov
ja
sbb
adc
arpl
movsl
dec
insl
outsl
adc
xlat
test
ljmp
movsl
insl
addb
insl
imul
inc
xorl
int3
dec
ret
int3
sub
mov
repz
or
mov
cmpb
loope
fisubrl
aas
xor
sbb
repz
fistl
cmp
xchg
data16
pop
add
popf
push
and
shlb
xchg
cmp
mov
and
ret
mov
aam
and
pop
pop
inc
dec
xor
push
test
pop
mov
mov
lret
mov
jne
scas
ficompl
and
add
test
out
mov
sub
js
inc
dec
cmp
adc
aas
out
orps
mov
mov
in
ret
dec
push
jae
rorl
iret
loopne
call
daa
pop
lock
std
fimull
lods
inc
xchg
dec
sahf
gs
sub
data16
sub
cmpsb
push
xor
gs
and
outsb
in
loope
xchg
inc
and
leave
lret
cmpsb
fsubs
outsl
lods
jae
sub
push
shll
sbbl
add
dec
outsl
dec
jmp
popf
out
adc
aad
add
je
lods
or
sbb
aad
fbld
add
daa
sahf
jp
aam
pop
sub
fdivl
or
mov
shl
cltd
sti
dec
nop
push
push
push
in
pop
cpuid
fdivrl
out
mov
xchg
aas
lahf
sahf
pop
mov
das
dec
lock
push
mov
mov
mov
cvttps2pi
inc
into
jb
leave
add
mov
movsl
mov
lock
testl
and
mov
test
clc
cmp
fs
sbb
adc
loop
cmpxchg
mov
add
add
popf
fcmovne
pop
mov
push
sub
pop
and
jle
ret
imul
test
sbb
in
xor
sub
cmp
inc
pusha
in
int3
mov
sub
adc
lea
movsl
dec
bound
xor
mov
int
mov
addl
xor
dec
in
pop
push
lcall
push
or
add
test
mov
test
dec
lds
aad
pop
fists
pmaddwd
adc
mov
and
cmp
push
dec
lea
movsl
cld
xor
sbb
fwait
loope
inc
push
adc
sbb
inc
jle
fists
or
and
and
mov
add
jne
dec
mov
xor
and
push
cltd
mov
inc
xchg
lods
cmpsl
jnp
pop
repnz
xor
cltd
aam
mov
jb
and
sbb
pop
mov
jne
lods
jno
jge
dec
mov
sub
in
cmp
mov
outsl
push
bound
mov
data16
inc
add
lods
sbb
push
mov
or
push
push
inc
fwait
xchg
add
lahf
push
popf
dec
lds
cmp
repnz
inc
pop
test
js
lret
or
jnp
cltd
pop
pop
roll
cs
in
je
inc
cwtl
stos
xchg
mov
pop
push
mov
push
xlat
call
lods
add
out
rcr
mov
enter
xchg
pop
cld
jge
jno
mov
fistpl
jl
fisubs
gs
daa
mov
scas
adc
ja
fdecstp
sbb
lret
and
jg
orl
aas
xchg
jb
pop
push
rorl
jg
add
mov
jmp
pushw
in
xchg
repnz
vprotd
ljmp
jmp
jnp
push
xchg
xor
sti
push
pop
inc
mov
jno
cmp
and
cwtl
or
lret
sub
cmpsb
or
jecxz
mov
mov
scas
fisubrl
imul
shll
dec
sub
mov
jmp
jae
les
cltd
movsb
popa
mov
repz
jge
lahf
cmp
fistpll
arpl
mov
dec
out
jne
cs
dec
fisttpll
clc
cmp
insb
pop
jge
mov
cmpsb
sub
pop
mov
leave
popf
sbb
adc
jle
shrb
scas
xor
mov
test
fs
movsl
sub
ds
pop
jnp
jg
mov
ss
jg
cwtl
jl
pop
scas
push
loopne
adcb
ss
fnstenv
dec
daa
xor
dec
frstor
and
mov
push
or
mov
jo
jecxz
jp
gs
mov
inc
scas
jo
dec
push
cwtl
add
push
int3
push
movsl
gs
cmp
stc
cltd
cmp
cmp
mov
bound
stos
lods
lock
xor
lds
mov
cli
jp
clc
mov
push
fs
cmp
sarl
mov
in
iret
or
imul
jnp
test
or
jecxz
sub
push
adc
nop
add
ja
push
stos
nop
sbb
xchg
and
jo
jns
sbb
xchg
bound
push
jmp
and
insl
mov
imul
daa
sbb
fwait
jmp
popf
loop
inc
lret
out
clc
call
daa
add
xor
clc
je
push
jb
push
fadd
mov
stos
pop
rcll
jmp
ficoms
or
sub
aas
sbb
shlb
int3
mov
int3
mov
bound
mov
aas
pop
jle
xor
adc
push
xlat
mov
push
clc
je
les
test
lock
push
inc
cmp
test
aam
data16
or
or
mov
adc
sub
mov
and
or
xor
sbb
pop
jmp
pop
mov
push
fdivrl
mov
rcr
stos
arpl
mov
sub
cmp
je
cmpsb
lcall
es
loop
cltd
mov
in
xchg
jo
nop
nop
fwait
and
pop
cmp
xor
push
adc
or
cmp
testb
adc
xor
cmp
mov
lock
adc
cs
test
cmp
and
push
ljmp
leave
pop
arpl
push
lods
fstpl
into
addr16
cld
jae
je
lret
lahf
shlb
js
xor
aad
push
sub
mov
mov
cs
cmpb
dec
movsb
mov
movsl
jmp
cltd
pop
and
mov
inc
hlt
sarb
mov
scas
xor
adc
rorb
dec
inc
mov
mov
and
aam
outsl
mov
jae
imul
movsb
push
sub
arpl
cs
scas
mov
stos
or
xchg
jp
jo
mov
dec
and
mov
jno
dec
dec
push
lret
mov
adc
xor
jbe
aam
scas
jne
or
and
sbb
outsb
pop
movsb
cwtl
ss
mov
and
mov
and
jne,pt
fldcw
pop
fs
push
push
out
imul
jnp
imul
dec
xor
cmp
enter
sbb
mov
in
push
daa
sbb
mov
or
stos
or
hlt
call
insl
dec
sarl
mulb
push
roll
inc
xchg
repnz
mov
rcrl
jecxz
lods
rcrl
dec
clc
rorl
imul
or
cmpsb
push
dec
mov
push
call
test
mov
push
lahf
test
push
mov
mov
mov
loopne
inc
sbb
ror
sub
test
pop
jo
shll
dec
leave
daa
cmp
and
fildl
mov
mov
ret
sub
test
pusha
mov
push
fwait
or
insb
clc
jb
mov
fstl
cld
mov
mov
push
dec
shll
lcall
sbb
cs
pop
or
enter
xor
push
cld
dec
jmp
add
cmp
ljmp
or
jnp
sub
and
push
pusha
insb
popa
int
cmp
adc
ret
shll
idivl
ja
mov
fistpl
xchg
fcoms
lods
dec
cmp
lret
in
in
cmp
clc
repnz
orl
fiaddl
mov
repnz
inc
imul
iret
mov
or
add
shlb
loop
int3
xchg
and
xor
mov
xchg
lods
pop
dec
fnstenv
sti
repnz
or
cmp
and
in
mov
xor
xor
mov
es
jbe
or
hlt
dec
sbb
inc
push
jl
pop
pop
mov
cli
sarb
jmp
testb
ljmp
xor
jecxz
add
push
aam
outsl
xchg
push
push
mov
xchg
jecxz
pushf
jbe
cli
push
xor
cld
test
push
or
jge
rorl
xor
push
mov
jno
ret
icebp
out
mov
fistpll
popa
pop
mov
mov
adc
ja
ss
jno
sub
mov
js
stc
mov
and
push
test
lods
cmp
inc
into
jecxz
test
dec
pop
cld
into
enter
daa
pop
pop
loopne
dec
mov
dec
fisttpl
aam
gs
ret
ficompl
inc
ds
mov
fnstsw
inc
jbe
ret
cmp
dec
pusha
mov
daa
inc
fbld
dec
adc
mov
adc
and
mov
pop
xchg
jne
ret
sar
push
add
lods
jnp
ret
jg
insl
adc
xlat
push
cmp
aaa
aas
mov
or
or
push
sbb
out
sub
adc
push
push
js
out
jae
xor
fucomp
push
jnp
sbb
in
ret
inc
mov
push
rcrb
ret
add
sti
mov
pop
push
sbb
ljmp
cmp
mov
xchg
push
and
sbb
aaa
js
pop
mov
sub
clc
sahf
ret
sub
sbb
out
fsub
or
mov
aad
cli
mov
xchg
xchg
or
enter
xchg
push
or
leave
sub
in
fidivl
push
inc
stc
hlt
clc
in
out
pop
js
jns
fstpl
pop
iret
push
dec
cmp
sbb
push
in
sbb
out
popa
xchg
pusha
dec
jp
cmpsl
inc
lfs
into
jbe
imul
stos
sbb
ljmp
je
mov
dec
pop
mov
mov
inc
lahf
xchg
add
pop
mov
adc
repz
addr16
out
rcrl
xchg
jge
sub
stc
adc
leave
mov
fsubr
shlb
ljmp
out
sub
lods
repnz
mov
lock
sub
mov
cmpsb
mov
inc
nop
push
fildl
jnp
push
loope
into
jg
lahf
mov
fldl
int3
ret
jl
nop
sahf
test
inc
sub
loopne
mov
xlat
push
xchg
mov
inc
lods
mov
pop
mov
lret
sbb
sahf
push
sub
bound
mov
or
or
adc
ret
xchg
sbb
mov
mov
enter
jb
push
mov
dec
rolb
mov
lods
and
mov
or
sub
arpl
stos
mov
mov
stos
mov
insl
popa
or
adc
dec
clc
cmp
gs
xor
jbe
adc
sub
xchg
pop
and
jle
aas
sti
push
sbb
lahf
mov
sahf
add
jnp
sahf
inc
test
jne
inc
mov
dec
sarl
icebp
rcr
insb
lods
fs
test
stos
jecxz
or
jnp
xchg
out
repz
xor
test
ljmp
mov
les
mov
mov
nop
lods
pop
push
push
loope
cmp
add
in
mov
jo
xor
add
scas
cmpsl
mov
cld
mov
adc
push
cld
xor
xchg
inc
repz
leave
mov
insl
popf
adc
jo
dec
fwait
inc
inc
push
imul
insb
icebp
and
in
mov
inc
inc
insb
es
pop
jl
repnz
rorl
fcom
imul
mov
xor
scas
cmpsb
xlat
inc
popa
iret
mov
and
in
mov
pop
mov
cmp
push
and
sarl
inc
or
push
icebp
ficomps
repz
test
pop
fcompl
jmp
jge
shrl
add
mov
ret
mov
xor
addb
enter
cmpsl
aad
cld
lahf
out
xor
cmp
lods
icebp
fcmovnu
fists
stos
nop
shrb
cmp
sub
clc
push
or
fcompl
fiadds
cmp
mov
jmp
pop
inc
das
pop
lret
jmp
mov
call
popf
stc
js
xor
push
loopne
shrb
push
cmpsl
mov
push
out
add
je
pop
loop
notb
mov
push
and
es
xchg
in
nop
pop
xor
repz
shr
and
push
sbb
mov
js
sbb
jp
pop
sbb
inc
mov
xor
lret
mov
push
test
loope
xor
addl
shld
imull
test
outsl
xor
jmp
mov
inc
fstl
xor
lods
nop
imul
pop
cmp
jge
fdiv
loopne
cli
loopne
pop
mov
mov
push
and
dec
dec
in
scas
or
push
loopne
arpl
js
movsb
test
push
jnp
xlat
add
scas
push
push
je
loope
mov
in
test
inc
mov
adc
call
dec
or
cmp
push
xchg
and
jle
ljmp
insb
repnz
out
dec
dec
sub
cmc
shl
push
mov
sub
mov
and
mov
in
rolb
or
pop
sub
mov
shlb
pop
xchg
lahf
int
loop
gs
mov
lret
xchg
add
in
addr16
mov
data16
fsubr
push
push
sub
rcrb
cs
pusha
sub
rcrb
cmp
inc
xorl
cmp
pop
repnz
dec
dec
das
loope
loopne
loopne
cwtl
mov
push
adc
inc
out
dec
inc
push
fwait
hlt
xchg
jg
cmpsl
push
call
sahf
xchg
imul
call
addr16
cmp
fcomps
adc
mov
int
and
cwtl
adcb
add
or
dec
stos
pop
push
xchg
cmpb
or
stos
inc
or
pop
dec
rcrb
fndisi(8087
stc
inc
les
outsb
dec
bound
les
lods
cmp
sbb
adc
mov
xor
inc
cmpsb
mov
addr16
fs
or
adc
dec
pop
mov
cltd
and
jecxz
add
add
sub
adc
cld
gs
imul
cmp
lcall
dec
idiv
dec
adc
lret
call
lea
push
cmp
and
loopne
in
sub
andb
push
mov
xchg
std
adc
and
push
lods
sub
ds
icebp
data16
xchg
cli
push
out
mov
jl
jbe
xor
jns
mov
imul
sbb
repnz
ret
aaa
jmp
mov
pushl
pop
test
inc
xlat
test
xor
lret
int
lock
movsl
movsb
xor
cli
or
adc
sti
cmpsb
jmp
shll
sahf
sub
adc
xor
sti
gs
jo
lock
mov
dec
inc
push
in
outsl
mov
pop
or
mov
or
lret
push
pop
push
fistps
and
and
mov
mov
imul
cmp
roll
lods
mov
data16
sti
movsl
add
adc
sub
inc
lods
and
jae
mov
enter
jp
push
adc
lds
rclb
inc
repnz
mov
dec
push
sarb
cmc
das
push
pushf
or
or
adc
in
jnp
mov
dec
insb
add
loope
adc
aam
mov
inc
and
cmp
lret
icebp
in
dec
xor
cwtl
divb
sub
enter
cmp
bound
inc
scas
imul
out
add
outsl
fmuls
stos
jp
mov
pop
dec
pop
iret
inc
jmp
imul
jbe
dec
xor
mov
out
pop
dec
dec
repnz
lods
inc
lock
add
inc
in
cwtl
pop
mov
pop
movsl
in
popa
adc
sub
push
call
aaa
mov
pop
mov
inc
adc
jle
cmp
in
xchg
mov
ret
or
sub
aad
cwtl
adc
mov
cld
cmp
cli
enter
inc
scas
test
shrl
stos
inc
xchg
mov
jl
xor
popf
es
xor
adc
or
push
shll
xchg
mov
fnsave
pushf
sahf
outsl
outsl
nop
aam
cmp
dec
loopne
imul
lea
adc
negb
pop
fadds
test
or
and
cmp
xchg
fsubrl
sub
xchg
cmp
mov
adc
mov
xchg
jb
xlat
shll
pop
repnz
in
cwtl
je
jae
push
cld
adc
pop
and
ss
pop
out
fdivrs
mov
mov
add
sbb
and
sbb
sti
ljmp
jle
jle
sub
cmp
and
cmpsb
mov
cltd
mov
inc
dec
cmpsl
xorb
std
scas
push
and
jno
fdivrs
stc
into
inc
leave
cmp
jns
fisubrl
xchg
scas
imul
mov
adcb
or
popf
cmc
inc
push
fdivrp
call
rol
pushf
mov
cltd
dec
or
pop
orb
mov
dec
dec
addr16
mov
or
fs
lods
mov
push
xchg
out
out
in
shlb
or
mov
xchg
negb
lahf
in
fildl
xlat
std
add
jae
mov
mov
orb
xchg
inc
cmp
shrl
and
outsb
cld
int
and
dec
stc
push
nop
mov
xor
xor
ret
or
xchg
sbb
mov
mov
shl
out
int
les
and
repz
lods
pop
rcll
scas
mov
or
pop
stos
jg
adc
push
lods
leave
mov
cli
jp
addr16
push
inc
ficomps
daa
in
adc
fisttpll
ret
out
cwtl
pushf
and
and
rcll
jno
lock
jmp
mov
pop
insl
into
push
inc
fs
outsb
shlb
les
jmp
jbe
mov
sbb
sub
sub
lcall
pop
aaa
mov
pop
xchg
dec
frstor
inc
popa
cli
pusha
adc
stos
pop
sbb
fcompl
je
cmp
pop
push
cmp
iret
ja
fmuls
lret
pusha
shlb
lret
xor
mov
push
jno
push
sub
scas
data16
dec
jecxz
stos
pop
lods
jmp
enter
xchg
hlt
out
cmp
cmpsl
cmp
cwtl
insb
pop
jbe
cld
pop
push
adc
ja
jmp
pop
mov
testl
mov
pop
cmpsb
call
mov
sbb
addr16
xor
out
negl
aas
sbb
push
lea
push
add
jg
mov
ret
inc
ret
out
push
push
xlat
sub
pop
and
pushl
inc
xchg
mov
mov
inc
int
arpl
jae
xchg
adc
dec
das
pusha
xchg
dec
bound
fadds
cmp
pop
xchg
jl
add
repnz
std
mov
rcr
fdivrl
xor
push
clc
push
pop
inc
lock
sbb
pop
lcall
rol
push
xchg
shlb
pop
push
rclb
xor
dec
stos
nop
push
movb
mov
ds
xor
aaa
addr16
mov
jno
cli
jno
pop
shrb
mov
pushl
fildll
jl
movl
mov
and
jg
jp
push
xchg
jno
dec
shll
dec
pop
in
pusha
loope
mov
fstpt
mov
pushl
jnp
push
jnp,pn
mov
jns
inc
pop
cmc
xchg
sub
cli
xor
fisttpl
out
sub
and
flds
dec
call
jbe
inc
lcall
inc
pop
mov
pop
out
ja
fiadds
arpl
mov
data16
roll
jns
scas
ss
outsb
je
loopne
lds
orb
mov
lds
stc
mov
cmp
fsub
push
iret
mov
mov
xchg
dec
dec
jnp
nop
cwtl
push
icebp
push
mov
ror
je
lahf
pop
repz
mov
roll
into
shrl
sub
pusha
or
fs
cmp
sahf
push
push
ss
mov
cmp
jo
cmp
push
adc
insb
inc
lea
dec
ljmp
pop
add
dec
or
inc
inc
scas
sbb
lcall
push
and
jae
lahf
addr16
dec
int
xchg
fdiv
xchg
ljmp
ret
mov
cmp
dec
repnz
xchg
xor
leave
lcall
movl
lret
fs
mov
je
int3
pop
loopne
push
mov
ljmp
cmp
lret
jbe
outsb
hlt
sbb
dec
fs
pop
loop
aam
sbb
out
inc
leave
in
add
cwtl
jecxz
out
jbe
movsb
out
push
and
xor
aaa
pop
mov
call
mov
aas
pusha
jb
push
mov
jne
imul
je
testl
rcrb
or
xor
je
arpl
lret
xor
ret
mov
dec
and
std
jecxz
into
loopne
cwtl
jp
pusha
insl
adc
mov
mov
xchg
mov
mov
pop
call
mov
lock
sub
lahf
ds
lods
pop
push
movsb
cmp
adc
inc
leave
loopne
and
cmp
mov
adc
pusha
call
out
icebp
pop
pop
mov
pop
ss
push
pop
jge
mov
dec
inc
rcll
imull
aas
int
dec
outsb
aas
inc
stos
mov
gs
pop
adc
jae
call
fs
xchg
mov
cmp
lock
cmc
in
dec
jl
repnz
adc
out
adc
and
mov
loope
rcl
test
leave
xchg
cmp
xchg
fisttps
scas
inc
data16
aas
add
sti
mov
sub
sti
fsubrp
xor
cld
xlat
ss
clc
dec
cmp
jo
loopne
xchg
adc
xor
dec
clc
xor
pop
sahf
cmp
aas
call
gs
mov
dec
xor
filds
jl
jg
xor
gs
lods
aas
mov
push
out
jns
jno
fstl
lea
out
jmp
mov
out
dec
shrb
in
xor
sahf
and
jns
shrb
lods
pushf
inc
fiadds
push
xor
pop
roll
sbb
and
mov
mov
mov
in
out
into
jae
push
mov
je
pop
adc
int3
mov
sbb
lods
ret
jmp
cli
cs
sbb
xchg
aas
sub
das
int3
fwait
in
sar
xchg
inc
roll
daa
push
xchg
ljmp
popa
lock
adc
pop
loope,pt
clc
imul
scas
push
mov
outsb
push
mov
xor
lahf
adcl
arpl
push
sbb
insb
inc
adc
pop
xchg
arpl
shl
out
pop
push
mov
pop
sub
fnstcw
cmpsl
pop
xor
inc
sub
and
cmp
dec
xchg
sar
ss
rcl
hlt
cmc
loope
enter
repz
bswap
lds
xorb
out
hlt
dec
dec
ljmp
pop
push
leave
loopne
dec
rolb
and
in
shl
daa
lahf
mov
adc
jge
ljmp
sub
mov
nop
cmp
lcall
dec
lods
mov
lret
mov
iret
jg
xlat
scas
ds
fprem1
sti
pop
adc
xchg
adc
jecxz
sub
test
xor
ja
cli
je
push
popf
cmpb
dec
pusha
lods
popf
cmp
into
dec
ret
clc
lea
mov
cltd
faddl
lods
fistps
es
add
fadds
idivb
push
daa
fidivrl
repnz
mov
ficomps
stos
sub
ss
add
mov
sbb
icebp
insb
out
jp
bound
pop
dec
xlat
push
pushf
out
push
loope
lods
mov
dec
scas
outsl
and
inc
mov
xchg
inc
cmpsl
cmp
inc
push
pop
fldl
jmp
cmp
dec
cld
push
clc
call
jmp
push
cwtl
inc
push
testl
cltd
mov
mov
cmpsl
mov
jo
pop
fsubrl
push
inc
and
movsb
cmp
clc
fimull
cld
xchg
and
mov
movb
lret
dec
push
mov
ds
scas
mov
out
lea
jl
in
push
xchg
pop
hlt
adc
out
int
pop
lahf
sbb
xor
scas
dec
and
xor
js
ficomps
push
ret
mov
cs
adc
cmpsl
sbb
fisubl
mov
cmp
jle
sbb
pop
push
mov
out
fmuls
jnp
xor
pop
pop
sbb
jmp
leave
sub
out
scas
jo
add
enter
xchg
mov
xchg
pop
xor
fimuls
or
incl
hlt
and
sbb
dec
insb
add
jb
dec
jl
mov
std
fcomps
adc
cmp
test
out
dec
idiv
iret
cli
int
jmp
jns
daa
ljmp
mov
add
pop
and
sub
mov
pop
jbe
push
xchg
out
sbb
mov
jge
or
xchg
iret
scas
mov
push
adc
jo
cmp
ljmp
les
sbb
pop
sub
cs
insl
rcl
rcrb
add
nop
push
scas
sbb
xchg
aam
mov
mov
pushf
lods
ror
sub
mov
dec
mov
sbb
xchg
push
dec
and
popa
mov
and
div
stos
mov
adc
and
push
jbe
xor
imul
mov
into
test
add
je
mov
sbb
aaa
out
add
jbe
cmp
mov
loop
aas
pop
jno
iret
dec
sbb
daa
iret
jge
and
sar
mov
inc
push
cld
or
mov
push
stos
dec
addr16
sub
jno
lret
lcall
cmp
push
loope
lret
sbb
repnz
out
aaa
mov
mov
dec
stc
xchg
rcll
mov
dec
xchg
and
sub
test
xchg
jmp
inc
xchg
lcall
or
or
lock
cs
fidivs
adc
out
fdivrl
push
dec
cmc
mov
out
mov
mov
add
jmp
gs
xchg
sbb
and
and
add
or
popf
cmp
sbb
je
mov
idivb
push
and
clc
lret
call
adc
xchg
mov
jnp
in
mov
cmp
fildl
gs
xchg
enter
orl
xchg
mov
jl
pushl
sar
pop
inc
xchg
sbb
lea
shr
adc
fsubrl
jb
inc
enter
out
mov
fildll
mov
dec
adc
xchg
inc
mov
mov
xorl
adc
fldl
sub
cmp
xor
mov
cltd
or
sbb
lcall
sbb
pop
mov
loope
xchg
repz
push
sbb
adc
jge
inc
sub
jns
or
or
dec
or
jo
movsl
movsl
cli
cwtl
js
cmp
out
jmp
jae
push
add
scas
adc
fs
repz
daa
gs
pop
in
int
pop
dec
aam
jmp
fwait
lods
daa
jg
repz
or
clc
stos
push
pop
push
adc
ret
xor
sbb
je
jle
push
xchg
out
sbb
jbe
and
mov
daa
mov
cwtl
push
adc
scas
popf
sub
push
xchg
xchg
pop
xchg
test
imul
xchg
out
out
lea
lock
out
lret
inc
cmp
not
mov
test
in
inc
out
sbb
adc
popa
inc
sbb
adc
xchg
mov
pusha
sbb
jo
scas
adcl
push
xlat
mov
ficomps
push
fwait
xchg
sti
inc
imul
lea
notl
adc
std
pushf
sbb
mov
fdivrp
push
xor
cli
push
or
pop
jp
inc
sub
rol
and
shrl
adcb
jbe
push
lock
xchg
xchg
sub
push
mov
sub
mov
pop
sbb
iret
jo
or
dec
cmp
out
sbb
lock
clc
adc
out
sbb
clc
test
ficoml
push
aad
cmp
push
adc
add
cmp
push
jo
xchg
inc
sti
xor
mov
adc
pop
mov
cmpsb
shr
cltd
jge
sbb
sbb
in
aas
and
enter
xchg
pop
shr
and
fisttpl
movsb
push
xor
leave
xchg
jge
out
dec
cmp
mov
dec
inc
xor
mov
sahf
xor
inc
mov
fpatan
hlt
or
shlb
xchg
gs
xchg
and
shll
mov
adc
pop
icebp
aam
or
mov
cmp
push
jmp
xor
pop
popf
mov
in
ret
xor
mov
imull
cmp
lods
fsubs
or
sub
dec
pop
sti
repnz
dec
jg
mov
adcl
movsl
shl
nop
cmp
xchg
and
popf
rclb
jb
sbb
sti
inc
call
arpl
mov
cmpsl
adc
and
dec
push
xchg
movsl
nop
cli
rolb
pxor
sbbb
hlt
rorl
cmp
mov
dec
add
cmp
xchg
cmp
loopne
subl
jns
adc
mov
dec
jle
jae
inc
jae
ds
mov
sub
mov
bound
sub
dec
inc
jbe
pop
cmp
adc
sbb
inc
mov
jge
dec
mov
subb
mov
jp,pt
popf
in
dec
loope
lods
inc
xor
mov
iret
sbb
fmuls
or
and
lcall
and
cmpsb
sbb
mov
sbb
or
scas
push
adc
imul
mov
mov
nop
pop
add
mov
pop
in
in
cmp
sub
push
and
mov
mov
outsb
or
pop
das
push
jbe
mov
aad
clc
jecxz
pop
pop
lds
pop
test
cli
das
xor
mov
jg
or
and
add
loopne
cmp
sahf
call
push
mov
decl
in
fsubl
stos
aas
cltd
icebp
xlat
outsb
adc
lock
test
test
test
and
jg
popf
xor
pushf
xchg
mov
pop
shl
cli
cmp
adc
aad
imul
cmpsl
call
arpl
push
in
cld
sub
stos
movsb
movsb
mov
sub
out
cmc
inc
inc
or
xchg
push
stos
cmp
and
mov
pop
sbb
xchg
push
fcomp
mov
cmp
mov
pushf
enter
mov
adc
fcompl
sbb
sbb
pop
cmc
pop
mov
pop
mov
xchg
into
and
ss
adc
addr16
les
and
xchg
push
dec
sbb
lahf
outsb
dec
rcrl
scas
divl
stc
out
pop
in
pushf
rclb
lret
insb
aaa
fs
scas
cmpl
clc
repnz
mov
dec
add
in
stos
mov
mov
push
jne
sbb
and
jmp
jns
pusha
jmp
pop
push
stc
and
mov
lock
ret
inc
cmp
lahf
mov
mov
aas
cmp
jo
xor
sbb
push
sub
mov
movb
int
mov
arpl
mov
aad
orb
outsb
ret
mov
imul
iret
lret
inc
sbb
cltd
in
xchg
push
adc
push
cld
loope
cmp
xor
sbb
test
adc
std
ja
xor
sub
mov
cmp
add
push
in
cmp
push
aas
pop
and
in
cmpsb
pop
push
cmpsb
jp
cmp
jle
push
ja
ljmp
lds
lds
in
inc
cmc
lea
xchg
data16
push
lret
lret
add
jnp
xchg
loope
loopne
jp
shl
and
adc
int
push
fidivrl
cli
jne
cmc
xor
add
mov
sbbb
jno
dec
sarl
lea
mov
adc
xchg
add
or
es
mov
jne
xor
mov
ret
test
shl
and
test
sbb
clc
xor
aaa
movsb
icebp
in
bound
aam
pop
gs
add
xor
jb
shll
pop
dec
jo
xchg
jae
xor
mov
xor
add
je
bound
add
xchg
repnz
cmp
sub
push
std
dec
xor
pop
out
push
adc
push
repz
cmp
roll
ljmp
in
es
sahf
out
xchg
jae
sbb
hlt
xor
cmp
dec
inc
and
fldt
mov
cmc
dec
scas
out
cmpsl
adc
push
or
jg
ret
mov
mov
jp
rcrl
scas
dec
xorb
orb
sbb
iret
subl
add
nop
je
shll
int3
lcall
cmp
mov
sub
mov
jp
ljmp
movsb
icebp
mov
lahf
sarl
dec
dec
iret
dec
inc
xchg
int
clc
sbb
mov
mov
jmp
cmpb
lahf
push
les
std
mov
xchg
in
jecxz
cli
sub
leave
add
jne
outsl
push
fwait
xchg
sub
mov
push
imul
int
sbb
jne
pop
push
repnz
jl
leave
mov
sbb
sbb
sbb
adc
fnstcw
pop
dec
or
jle
xchg
sub
sahf
inc
mov
cmp
jle
fld
xor
cmp
cmp
cmp
pop
push
scas
divb
and
sbb
pop
lret
outsl
inc
jle
inc
aam
popf
cmp
in
add
insl
or
popf
sbb
bound
mov
mov
adc
push
push
fwait
outsl
push
mov
movsl
xor
fnstenv
pop
push
push
push
fs
sbb
das
cmp
aaa
xor
lea
push
pusha
repnz
xor
aad
lcall
and
popa
out
pop
jbe
std
mov
sbb
cld
popw
xchg
dec
fwait
push
cmp
and
and
jge
xorl
cmp
dec
mov
insb
jae
push
repz
scas
testb
and
jmp
cld
das
pop
mov
cld
in
xor
sbb
jne
icebp
addb
movsl
nop
lret
lea
cld
dec
jmp
lcall
lods
adc
cmp
mov
idiv
daa
daa
adc
testl
mov
jb
jle
sbb
mov
rcr
mov
push
jae
popa
mov
pop
sahf
icebp
aas
imul
pmulhuw
sub
imul
pop
mov
movsb
push
sbb
out
adc
pop
aas
scas
xchg
loope
hlt
cmp
cmpsb
xor
out
mov
es
fistl
mov
jb
jmp
dec
and
cmp
rcrl
mov
lret
divb
lods
out
jmp
sbb
xchg
and
sbb
pusha
iret
insl
outsb
jno
mov
clc
gs
xchg
out
jp
xchg
xor
jo
or
cmpsb
xchg
xor
aam
cs
addr16
loopne
mov
xchg
push
loope
jp
inc
mov
popa
dec
push
cmpsl
jno
dec
imul
adc
sub
xchg
adc
or
adcb
xchg
fs
lds
xchg
popa
add
addr16
mov
aas
mov
lcall
pop
inc
shll
xchg
iret
lock
cmp
arpl
mov
testb
adc
mov
dec
jg
pop
in
sub
sbb
sbb
and
leave
fwait
dec
adc
repnz
sub
scas
je
or
lods
sbb
add
mov
push
loopne
mov
sti
dec
jmp
dec
insb
pop
push
mov
cmp
and
stos
mov
add
dec
scas
xor
cmp
mov
rcrl
and
popf
jno
sbb
jne
mov
pop
push
dec
into
addr16
or
sub
sbb
pop
or
inc
jns
cwtl
cmp
loop
std
out
test
es
cmp
enter
gs
xchg
lods
aad
add
fidivrl
mov
icebp
mov
jns
adc
mov
in
jmp
fcomps
dec
adc
jp
in
and
in
outsb
data16
das
sub
shll
jno
jns
sbb
xor
es
adc
loopne
or
xor
jecxz
cmovge
adc
mov
mov
ds
mov
in
dec
push
lahf
xor
test
fdivrl
adc
mov
jmp
sub
lods
aam
stc
add
mov
lds
dec
xor
push
aas
sub
subl
pusha
popa
ret
clc
mov
out
clc
scas
scas
jle
pop
xor
push
xor
xchg
mov
push
mov
les
mov
cmpsb
inc
inc
mov
shrb
sbb
inc
pop
addr16
cmp
pop
push
add
call
ret
fadds
sbb
pop
or
dec
icebp
je
and
je
scas
jne
xchg
addr16
mov
pop
movl
xlat
or
mov
sbb
xchg
aaa
rcll
cmp
cmc
add
mov
mov
loope
ljmp
shrb
jecxz
dec
pop
sub
int
mov
mov
fld
ss
outsl
mov
mov
pop
add
xchg
xor
hlt
pop
mov
cmc
ss
cmp
call
loopew
push
xor
clc
dec
push
inc
and
in
xchg
or
fdivr
jl
daa
jmp
or
inc
jmp
test
jae
inc
inc
or
pop
mov
add
rolb
jl
inc
jl
das
fwait
adc
pop
cs
iret
push
dec
movsb
xchg
into
xchg
jbe,pt
xchg
arpl
lret
mov
jne
jp
scas
pop
test
mov
hlt
push
pop
sub
jae
stc
xlat
jbe
adc
add
fdivrs
lods
and
repnz
xor
xor
inc
dec
enter
jne
xor
xor
push
inc
testb
rcll
mov
mov
or
push
ds
cmp
lock
adc
jmp
jne
inc
or
lcall
imul
test
dec
dec
push
stos
xchg
inc
clc
cmp
inc
in
loop
ficomps
shlb
fisubs
pop
std
xchg
gs
sub
loop
sbb
sbb
mov
and
mov
popa
subl
adc
sub
or
je
cwtl
xchg
rorl
or
and
and
push
loope
jl
hlt
test
mov
xor
jb
jae
push
jg
dec
outsb
jp
loop
fs
fs
shrb
lahf
test
mov
addr16
lods
icebp
pop
jb
xor
popf
shlb
fistl
jge
cmpsb
sbb
fcmovne
nop
fdivl
into
dec
sbb
xchg
test
lea
add
shlb
inc
das
mov
lods
les
cmp
scas
xor
xchg
loope
mov
xchg
cmpsb
lods
aas
dec
rolb
fsts
xor
sub
xor
fwait
mov
mov
lods
mov
jne
cmp
and
data16
pop
outsl
and
pop
push
aad
dec
loop
xor
sub
imul
mov
pusha
dec
and
dec
or
scas
dec
loop
outsl
pop
popa
clc
test
cld
mov
insb
bound
fisttpll
movsl
or
mov
in
aad
lcall
inc
loope
leave
cmpsl
adc
mov
js
out
shll
pop
push
jmp
push
test
mov
xor
sbb
push
call
adc
out
shl
int3
rcll
dec
es
inc
test
imul
sub
mov
mov
repnz
cli
pop
fs
mov
xor
jb
les
xchg
repnz
mov
outsl
outsl
fdivs
mov
pop
jp
ds
xchg
nop
fcomps
sbb
vorps
stc
pop
cltd
xor
push
cwtl
and
inc
xor
mov
cltd
mov
fs
jp
imul
roll
pop
cmp
mov
sbb
mov
push
fadds
pop
sahf
test
lods
sahf
push
mov
dec
std
aaa
mov
daa
shld
test
mov
into
mov
xchg
dec
bound
in
jb
pop
cmp
sub
adc
inc
mov
cwtl
sahf
jecxz
inc
cmc
movl
or
lods
fisubrs
out
pop
adc
pop
mov
fimull
aas
cmp
adcl
cmp
dec
inc
leave
or
cmpsl
dec
pop
mov
mov
cld
cwtl
pop
rolb
xor
sub
xchg
rcll
xchg
mov
mov
xchg
dec
insb
pop
push
cmp
pop
adc
mov
loope
loope
xchg
mov
sub
in
cmpl
and
ret
int3
cmc
int
or
data16
scas
test
mov
notl
cmpsl
sbb
pushw
scas
push
aam
mov
cltd
stos
mov
jecxz
fstps
push
out
cmp
mov
pop
loopne
out
push
test
sbb
adc
xchg
call
ss
and
cmpsb
xchg
jle
sbb
pop
aas
out
rolb
je
outsl
sub
lahf
adc
aam
mov
and
lahf
mov
cli
ja
push
mov
movsb
ds
fwait
dec
xlat
or
insb
lcall
push
add
inc
test
jns
inc
aas
call
aam
aas
mov
movsl
pop
mov
cmp
mov
pop
arpl
fstpl
push
pop
mov
mov
add
divl
or
fs
inc
mov
shlb
or
dec
in
jns
fidivrs
fstps
jnp
out
push
pop
in
popf
sub
inc
add
dec
ret
cmp
fidivrs
pop
pop
outsb
pusha
adc
push
cwtl
xor
call
insl
xor
sbb
push
dec
fcomps
clc
int3
adc
mov
xchg
jecxz
cli
add
stos
movsl
movsl
lret
orb
popf
rcl
jb
mov
test
mov
and
and
mov
or
dec
jae
mov
jmp
decl
lds
std
mov
gs
in
inc
fsubr
cmc
daa
aas
mov
mov
repz
jmp
mov
cmc
cs
cltd
pop
cmpb
sti
orb
stos
cltd
or
and
das
adc
xor
mov
lds
jae
and
add
pop
lds
out
test
mov
lcall
mov
pop
leave
mov
push
jne
pop
loope
push
push
mov
adc
mov
mov
test
sti
pushf
pop
call
aam
jb
fs
adc
pop
add
lahf
sbb
push
sbb
or
fisttpll
sub
cwtl
or
ret
movsl
push
inc
inc
scas
mov
xor
pushf
gs
mov
sbb
sti
push
push
lret
or
add
pop
scas
mov
fs
pusha
int
inc
movsb
mov
gs
pop
jbe
daa
insb
or
xchg
sbb
xchg
pop
dec
movsb
sbb
lds
mov
call
jmp
jns
test
and
pop
xor
cs
lcall
and
nop
adc
jp
roll
add
andb
dec
pminsw
test
ljmp
jb
inc
out
sbb
adc
ds
popf
pop
cmp
push
das
test
test
xlat
pop
mov
lock
jge
lret
stc
fistpll
sbb
xor
jp
test
cmp
jnp
xchg
jl
addl
test
sbb
lahf
pop
insb
mov
or
xor
ret
ss
adc
add
cmp
inc
fistpl
scas
fwait
or
xchg
jecxz
push
dec
jmp
fmulp
pop
fdivs
inc
jp
or
push
int3
mov
inc
dec
inc
imul
cmc
jg
stos
out
adc
lret
int3
into
sahf
aaa
js
dec
sbb
ret
and
lea
lcall
push
and
sahf
bound
pop
movsb
cmp
xor
mov
test
daa
scas
faddl
xlat
pop
jns
js
jge
push
gs
cmp
insb
add
stc
out
pop
and
and
loope
dec
in
flds
mov
push
std
lahf
dec
repz
cs
lret
cmp
clc
push
cmp
jge
mov
imul
popa
shl
xor
out
sbb
fcoml
dec
cmp
mov
cmp
leave
push
jl
fisubrl
inc
fcoms
dec
jbe
add
cmc
xor
adc
mov
push
shrb
rcl
rolb
adc
ficomps
inc
fs
mov
dec
inc
xlat
test
in
mov
filds
adc
pop
mov
int3
sub
sub
push
add
ss
sti
mov
mov
mov
pop
pushf
cmpsb
mov
mov
bound
xchg
jp
mov
push
mov
cmp
fcmovb
int3
xor
test
xor
icebp
inc
pop
cmc
jne
inc
adc
mov
in
testl
je
sub
mov
movsb
fistpll
sahf
jbe
imul
movsl
or
cmpsl
mov
std
daa
pop
mov
adc
ficompl
mov
pushl
cmpb
pusha
jg
aam
sbb
test
sbb
sub
pop
js
or
push
fwait
jg
rcr
aad
jbe
jmp
fwait
adc
sub
mov
aas
sarl
das
xor
test
outsl
mov
or
push
jmp
mov
xchg
fsubl
lea
mov
adc
add
inc
ss
mov
pop
rolb
cmp
mov
sbb
shll
cs
dec
insl
xor
ds
pop
push
jle
jmp
sbb
mov
and
in
lods
push
jp
cmp
ficoms
or
jge
mov
mov
sub
lret
fstl
mov
sbb
xchg
out
inc
add
lods
cmpsb
inc
or
mov
call
aas
shlb
addr16
mov
cwtl
or
ret
in
xor
lret
pop
push
sub
loopne
int
mov
pop
repz
and
mov
adc
pusha
pop
push
and
pop
test
int3
fwait
test
adc
dec
lret
mov
ss
addr16
js
fldt
addl
test
jmp
mov
out
xlat
clc
outsl
leave
test
jmp
jbe
faddl
mov
and
cwtl
jns
and
jp
or
push
pusha
int
out
mov
mov
fildll
jns
sti
out
mull
sbb
es
cmp
or
push
mov
orl
xchg
adcb
pusha
mov
push
stos
jne
xor
jbe
test
xchg
cli
xor
fstl
lods
mov
sbbb
cmp
cmp
enter
call
aam
ret
sub
sub
stos
dec
inc
jae
inc
mov
int
daa
sbb
aam
inc
shll
jle
cmp
jno
inc
push
mov
mov
push
sbb
push
sahf
vmread
sbb
mov
mov
insb
inc
ss
xchg
adc
popf
repnz
xor
cltd
push
push
shrb
sub
lret
jne
jmp
dec
jae
sub
xchg
insl
les
clc
pop
movsb
stos
popa
lods
les
ret
and
movb
dec
inc
mov
mov
mov
ja
idivb
js
dec
mov
dec
shrb
outsl
ja
or
aaa
mov
out
stos
stos
lcall
mov
daa
mov
cmp
sbb
jo
cld
mov
and
je
insl
out
xor
outsb
xchg
mov
mov
inc
sbb
jmp
jne
push
fnstcw
xchg
push
xor
cmpsl
cltd
sub
daa
jbe
popa
push
scas
into
negl
test
adc
loopw
xchg
dec
sbb
mov
jle
jle
push
dec
mov
mov
idivl
leave
aam
dec
fsincos
inc
sub
push
mov
dec
movl
fbld
adc
lods
pop
cmp
xchg
pop
sub
inc
mov
repz
data16
in
das
sahf
mov
fcomp
or
dec
jecxz
fstl
aas
imul
sbb
sbb
cmp
das
roll
jb
adc
out
outsl
xchg
or
pop
jmp
movsl
in
cmp
pushf
jecxz
stc
dec
cld
test
lahf
sbb
pusha
jbe
in
mov
inc
fisubl
cwtl
sub
xchg
xlat
xchg
push
push
push
mov
into
ret
scas
mov
mov
sub
mov
sti
lock
fidivs
lock
pusha
mov
xchg
sbb
lea
nop
xchg
insb
mov
pop
xor
aam
mov
lcall
xchg
mov
hlt
mov
mov
test
and
push
or
mov
int3
imul
stc
sbb
mov
jge
pop
push
dec
cmpsl
subl
setle
loop
sub
movsb
int3
xlat
jl
add
jmp
sub
or
xchg
pop
gs
dec
fistl
lds
shl
mov
mov
push
test
in
add
dec
xchg
test
scas
or
sbb
iret
inc
arpl
jmp
xor
dec
insl
jb
pop
mov
adc
fimuls
lods
mov
or
sbb
test
ror
fxch
pop
test
lahf
cmp
arpl
cs
hlt
in
cmp
fsubl
add
fmuls
inc
xchg
and
cmp
sub
fcoms
cmp
mov
les
sub
add
fisubrs
gs
push
pop
sub
cmpsb
and
xchg
adc
jne
sahf
aam
xchg
lcall
pop
xchg
into
dec
mov
or
push
test
cmp
faddl
out
repz
fcmovne
pop
xchg
cmp
ret
fwait
mov
lea
pushf
sub
adc
ljmp
test
mov
jl
cld
cld
outsb
mov
mov
insb
adcl
daa
int3
push
pushf
sbb
int3
and
rolb
lret
mov
xchg
push
hlt
pop
sbb
pop
push
shll
dec
in
sbb
imul
insl
cmpsl
push
add
leave
icebp
in
mov
cmpsb
mov
cmp
ja
mov
sbb
and
or
jo
jp
add
mov
or
inc
push
mov
lock
fs
xchg
mov
pushf
xchg
or
and
pop
lock
mov
nop
decl
ja
cmovne
push
jne
jp
stc
sub
add
add
cmpsl
icebp
cs
dec
loop
scas
dec
pop
and
shrl
shrl
aaa
push
insb
jne
ja
out
mov
sbb
pop
enter
add
out
mov
lods
pop
add
inc
stos
add
mov
or
test
pusha
jae
adc
cli
pop
cmp
mov
jb
xor
sub
daa
xchg
sub
mov
pop
xchg
add
andb
dec
daa
js
pop
cmp
sub
ss
std
mov
cmpl
aaa
cmpsl
test
data16
dec
pop
aaa
or
testb
push
js
insb
scas
movsl
pop
stos
dec
pusha
push
jno
jb
push
stos
fadd
stc
xlat
adc
pop
dec
jbe
sbb
xchg
call
adc
lods
in
dec
and
arpl
xorl
mov
std
xchg
sbb
add
shl
dec
fnstcw
and
and
shlb
insl
jb
mov
xchg
imul
into
jnp
shll
mov
fsubl
imul
cmpsb
fsubrs
repnz
popa
sub
xor
loope
pop
xchg
lds
das
cmp
aaa
imul
lcall
fcomps
xor
dec
test
mov
fcompl
adc
jmp
or
push
mov
or
and
push
aaa
cmp
dec
filds
in
dec
lahf
jecxz
inc
icebp
mov
cld
cmp
xor
xchg
and
adc
repnz
xchg
jne
jl
pop
sub
or
jbe
mov
dec
fldenv
pushl
pop
cmpsl
cmp
mov
inc
mov
pop
es
mov
and
lods
dec
add
mov
das
push
movsb
out
fs
add
sahf
movsl
fs
push
into
sub
xchg
addr16
inc
and
and
sti
xchg
jle
fimuls
inc
idivl
pusha
sbb
sbb
ficompl
pop
push
mov
add
mov
jo
add
or
add
sub
js
mov
cli
jne
shrb
xor
push
pop
shlb
fnstsw
stos
orl
jp
or
clc
xchg
and
aad
xlat
or
pop
rcll
das
xchg
and
sbb
push
mov
es
cmc
in
xlat
xor
in
cmp
adc
mov
add
repnz
cmpsb
sub
xchg
mov
data16
fisubrl
hlt
push
cmp
dec
aaa
xor
fnstenv
adc
stos
push
fimull
mov
xor
test
adc
je
xchg
bnd
sahf
leave
push
dec
shrb
and
push
and
xchg
loope
out
dec
fsubs
les
xor
aas
sti
push
rcll
fstpt
dec
jne
je
or
pop
mov
mov
mov
incb
fs
insb
adc
fcoms
pop
ljmp
data16
jecxz
lcall
sub
xchg
inc
lods
mov
popl
ret
cs
shlb
hlt
add
aaa
leave
popa
gs
sbb
pop
adc
push
mov
xchg
xchg
jbe
cwtl
fs
in
pop
inc
or
loop
inc
jno
sub
inc
aam
cmc
jmp
lock
test
push
add
pop
sar
sub
or
sub
out
js
in
adc
int
pop
inc
adc
cmpsb
lahf
and
pop
in
inc
sbb
movsb
cmpsl
cmpsl
push
je
repnz
mov
mov
sti
mov
ds
mov
inc
or
sbb
add
cmp
sbb
sbb
scas
mov
fmull
pop
cwtl
xchg
fstps
or
dec
popa
into
cwtl
sbbl
incl
jne
int3
in
imul
and
subb
xor
pushf
out
cmp
test
pop
shlb
mov
inc
orl
xchg
pop
scas
jb
lea
push
addr16
scas
rcrl
fs
or
rcll
fiadds
xchg
sbb
or
or
inc
aaa
leave
jle
mov
sbb
xchg
shrb
mov
jb
xchg
iret
inc
xor
stos
cmpsl
arpl
push
jae
dec
scas
shl
data16
scas
mov
adc
cli
movzwl
or
lcall
lret
cmp
xchg
sahf
bound
popa
fstl
cmc
scas
addr16
pop
fsubr
mov
ja
dec
loopne
rcrb
add
cmp
sbb
xor
sub
pop
push
popf
out
scas
mov
and
test
dec
leave
dec
mov
pop
sarl
sub
stc
xchg
int3
in
cmp
rcll
sub
or
xor
sahf
out
sahf
dec
ljmp
cmpb
pop
sbb
ret
mov
subl
push
xor
pushf
mov
mov
or
mov
mov
dec
inc
push
bound
out
fstps
leave
faddl
or
xor
mov
lock
hlt
cmp
pop
mov
pop
bound
popa
jbe
fmuls
or
inc
mov
popf
imul
inc
cmp
xor
mov
enter
stc
lods
mull
clc
cmp
ja
mov
dec
mov
int
popf
mov
or
cld
inc
rcrl
xchg
ret
std
cs
fwait
jge
bswap
mov
call
sbb
sar
stos
insl
clc
insb
mov
inc
push
sbb
aad
xchg
int
pop
adcb
or
cmp
cli
pop
inc
cmc
mov
or
mov
sbb
ret
xchg
mov
jg
js
mov
or
and
fisubs
pop
sbb
rcll
ficoml
subl
push
int3
les
inc
jbe
in
push
dec
xchg
xor
pusha
mov
push
movsl
rcrl
repz
idivl
jge
jb
lds
in
fprem1
repz
test
jo
aam
push
jle
js
leave
mov
scas
add
jae
fs
mov
lds
inc
sbb
addr16
negl
inc
rcrb
and
sbb
stos
inc
sbb
cmp
repnz
shlb
xchg
fidivrl
cmp
lret
adc
mov
gs
in
inc
movsl
mov
scas
pop
adc
inc
cmp
push
inc
test
clc
aam
mov
jmp
dec
adcl
loopne
dec
cld
jmp
fsts
test
jl
lcall
sbb
or
adc
daa
iret
jl
jae
cmp
dec
imul
jp
daa
ss
pop
pop
lcall
fistps
repz
int
lret
decl
mov
mov
sbb
nop
les
mov
mov
mull
sbb
mov
sbb
adc
neg
call
adc
sub
xor
pusha
in
mov
negl
adc
push
sub
or
ja
cmpsl
fistpl
mov
mov
cmpsl
cmpsl
ficoml
push
pop
aam
fidivrs
mov
sahf
das
arpl
mov
mov
nop
inc
testb
inc
mov
sbb
mov
sub
add
shlb
mov
mov
sahf
cmp
add
add
push
dec
pusha
cmpsb
imul
xchg
iret
pop
mov
sahf
in
loope
xchg
xchg
js
fs
adc
xorb
inc
xchg
mov
fdivs
jae
outsl
aad
fistl
loopne
push
xor
cmc
pushf
int3
lahf
xor
xchg
rcrl
test
sbb
mov
sub
lea
pop
dec
in
arpl
ficompl
lahf
shlb
pop
cmpsl
les
add
mov
and
outsl
test
rcll
xchg
fldcw
lret
dec
ds
push
push
into
popa
or
sbb
and
cmp
pop
pop
jo
mov
test
repnz
mov
mov
icebp
pop
pop
jns
sub
jo
jg
scas
xorl
inc
mov
cmp
je
sub
pushf
xchg
cmpsb
mov
push
dec
push
pusha
jnp
sbb
inc
mov
ds
ret
jg
ds
loop
xchg
rcl
sbb
punpckhbw
testl
aam
aas
push
aaa
inc
dec
sbb
roll
inc
es
out
pusha
pop
loop
sub
push
sbb
lret
jae
inc
adc
idivb
pop
in
xchg
aad
mov
dec
sbb
xchg
inc
cli
mov
es
jecxz
mov
or
mov
loop
jp
pop
xchg
orl
pop
hlt
cmp
jb
loope
in
inc
mov
clc
clc
and
push
movsb
inc
mov
lds
fdivs
iret
gs
mov
mov
iret
xchg
pushf
fistps
imul
mov
add
out
add
push
push
imul
jle
adc
pop
or
inc
push
cmp
cmpl
jg
xor
mov
jle
lahf
mov
mov
push
or
dec
jg
inc
inc
inc
and
mov
jmp
sbb
in
jmp
cmp
xor
idivl
in
dec
bound
int
inc
pushf
jbe
insb
sub
fisttpl
adcb
dec
les
in
jo
icebp
imul
jae
js
cli
dec
inc
add
jp
or
mov
or
fucomp
dec
data16
cmp
bound
fsubs
addl
loopne
push
lahf
addl
cmc
std
mov
les
lds
sub
xor
mov
in
lcall
mov
sar
add
mov
cmp
out
popf
in
nop
movsb
fchs
cmp
test
jnp
cmpsb
iret
js
pop
jo
stc
jns
xor
stos
aas
enter
dec
cmp
or
dec
and
jl
push
xor
out
out
or
mov
repz
push
shlb
pop
xchg
and
fildl
mov
sub
fcoms
jb
dec
mov
int
popa
test
gs
inc
faddp
sti
sub
and
mov
ljmp
xor
mov
call
mov
movsb
jbe
aaa
aam
dec
jno
jb
cmp
mov
add
xchg
cmp
jmp
mov
mov
in
push
sub
cmp
pop
and
cmp
ss
inc
jnp
mov
mov
pop
hlt
xchg
sbb
jno
repnz
mov
in
jnp
scas
xor
arpl
fidivl
push
or
pop
xchg
js
imul
bswap
jno
adcb
push
ss
stc
add
mov
sbb
or
xchg
xchg
into
or
ljmp
fnstcw
mov
loop
clc
sbb
int3
fiadds
mov
push
add
sar
arpl
inc
in
push
xchg
in
cs
fwait
xor
mov
mov
jb
or
dec
ficomps
xor
ljmp
psadbw
mov
jmp
inc
lock
sub
mov
sbb
push
fucom
inc
and
cmpsl
or
repz
cld
adc
aad
adc
mov
in
enter
push
mov
push
shufps
add
bound
mov
gs
xchg
mov
inc
sub
ss
dec
and
int3
leave
jmp
inc
mov
scas
inc
scas
xchg
aaa
idiv
mov
jge,pn
adc
out
mov
dec
pop
dec
out
iret
push
in
dec
jp
ljmp
cltd
aad
pop
cwtl
repnz
push
cmp
cmp
mov
sub
pusha
cmp
mov
mov
stos
mov
xor
lods
out
dec
mov
ret
pop
mov
loop
and
hlt
mov
je
imul
push
and
xor
insb
mov
mov
lret
or
inc
das
adc
popf
or
popf
push
imul
adc
lahf
pop
push
jecxz
or
pop
fstpt
ss
jmp
gs
outsb
mov
add
lock
pusha
lahf
xor
inc
jne
mov
add
insl
imulb
push
inc
mov
sti
out
jmp
inc
lods
cmp
xchg
pop
es
fistpl
inc
xor
stos
adc
je
push
push
jns
adc
cmc
or
aad
scas
dec
sub
fs
gs
in
add
adc
aas
popl
pop
test
rclb
mov
lea
or
lcall
and
movl
mov
aaa
sub
fs
mov
jno
lock
mov
ffree
test
mov
icebp
push
jmp
inc
std
inc
lahf
mov
inc
dec
inc
rcr
jbe
lcall
out
mov
pop
ja
push
jno
cmp
test
pop
add
leave
add
nop
dec
sbb
inc
out
jnp
lds
xchg
cmp
push
xor
mov
cltd
js
jp
mov
mov
mov
xorb
lahf
push
fscale
mov
les
xor
mov
dec
mov
int3
mov
xchg
push
in
sahf
dec
push
fs
jecxz
xor
sti
add
movsb
mov
jbe
pusha
pop
push
sbb
push
int3
sarl
test
sbb
mov
cmp
outsb
jmp
cmc
xchg
clc
xchg
gs
mov
sbb
lds
dec
mov
popa
mov
push
cmp
pop
leave
aas
mov
pusha
dec
push
loop
scas
adcb
stos
je
ret
das
cmpsb
pop
sub
int
ljmp
movsb
sahf
dec
push
repnz
xchg
sbb
ret
xchg
imul
inc
loope
neg
subb
ja
and
pop
ficoml
sub
cmpl
mov
jge
cli
aam
and
jmp
das
sarb
popa
iret
and
clc
fistl
or
ds
xor
cwtl
popf
sbb
cmp
in
int
je
sbb
dec
pushf
loop
mov
lahf
pushf
lea
pop
mov
dec
cmc
sbb
cmpsl
int3
and
cwtl
xor
rorl
shll
mov
add
lcall
clc
sub
xchg
cwtl
push
mov
cmp
push
add
push
xlat
mov
add
inc
adc
and
popa
arpl
test
jmp
int3
xchg
pop
pushf
ret
fistl
lds
mov
mov
mov
inc
fnstsw
and
xchg
inc
add
sbb
and
int3
pop
fsubrl
adcl
outsb
jg
daa
or
shrb
divps
enter
mov
jge
inc
rclb
jns
xor
xor
je
lcall
adc
add
sbb
push
sarl
fcmovne
clc
rep
and
pop
movsb
mov
pop
mov
mov
and
push
stc
jno
add
es
in
repnz
add
dec
mov
inc
adc
imul
jnp
adc
loop
inc
and
pushf
dec
pushf
mov
add
inc
xor
shlb
mov
xor
out
xchg
dec
push
and
fwait
push
jnp
fistl
dec
rcl
je
mov
dec
lds
movsl
loopne
push
jle
mov
fmul
lods
in
test
pop
fimuls
fs
jb
pop
imul
xor
mov
adc
addl
pop
xor
inc
add
fstps
sbb
add
cmp
imul
mov
int
insb
dec
xchg
insb
cmp
test
scas
dec
js
imul
testl
xchg
adc
sub
lahf
mulb
cwtl
ds
faddp
and
xor
xchg
add
jo
pop
mov
in
jne
mov
pop
xor
popf
test
jno
aas
cld
call
adc
cwtl
xor
or
add
pop
sbb
out
cmp
jns
dec
jl
pop
lods
int
and
out
inc
dec
mov
ja
push
lock
mov
jecxz
in
in
data16
andl
call
pop
in
pop
insb
daa
cwtl
sahf
push
add
pop
rcrl
sbb
je
or
sbb
xor
push
jbe
mov
repz
loop
cmp
xor
ret
dec
sub
sbb
add
std
ret
push
pop
dec
adc
dec
decl
xchg
rcll
rcrl
push
inc
mov
jecxz
popa
stc
outsb
push
lds
and
ds
pop
pop
xor
and
pop
inc
push
iret
cli
jnp
fsubl
xchg
mov
inc
push
sub
addr16
fisubrs
push
mov
mov
fwait
mov
jbe
sbb
ds
xchg
xchg
dec
lahf
movsb
mov
sbb
sub
sub
xchg
loopne
xchg
jbe
cmc
in
adc
fsubrl
aad
cs
xchg
in
sbb
mov
xchg
xor
imul
pop
mov
jnp
cs
sbb
ds
daa
rcl
add
xchg
orl
aad
sub
int3
push
es
inc
stos
loope
in
add
jo
pop
cmc
loop
adc
mov
mov
xor
js
negl
gs
int3
outsb
sub
cld
inc
fsubrl
sarb
dec
or
or
lcall
push
stos
fstpl
ljmp
lret
xor
or
mov
cld
fwait
sub
push
cltd
mov
ret
xor
in
and
pop
inc
test
pop
cmpsb
jo
aam
pop
icebp
fdivs
imul
add
push
pop
mov
jbe
js
push
xchg
stos
imulb
mov
out
sub
pop
arpl
mov
pushf
stos
pop
dec
mov
call
sub
mov
mov
gs
andl
push
mov
or
das
fsubrl
cmp
xor
jp
sbb
and
sub
cmp
mov
mov
test
fidivrs
js
lcall
mov
mov
and
int3
scas
and
iret
sbb
test
stos
sbb
add
mov
push
xor
mov
in
ret
lock
pop
cmp
cmpsl
stos
pusha
add
dec
cltd
int
std
xchg
or
insl
adc
cmp
cmp
cmp
fs
lock
pop
rcll
cli
negb
jns
jmp
cmp
pop
pop
add
pop
lret
adc
mov
xchg
lods
jbe
into
and
ret
mov
sahf
push
psubsb
pop
xchg
dec
rorb
push
xor
rcrb
and
cmp
fcoml
outsl
or
dec
jmp
and
add
push
mov
or
data16
iret
in
cmp
dec
shll
shlb
pushf
mov
popa
pushf
and
or
lret
mov
ret
movsb
loopne
cwtl
stos
mov
pop
sbb
xchg
call
or
fstl
test
adc
mov
pop
ss
mov
and
imul
pop
in
push
jns,pt
mov
pushf
and
xchg
xor
push
ja
scas
adcb
mov
jnp
xchg
je
adc
ret
jno
adc
mov
mov
mov
sbb
xor
push
mov
dec
lahf
sub
and
jg
repz
pop
or
sti
mov
js
adc
nop
xor
hlt
sbb
or
scas
jp
ljmp
pop
xchg
fisttpl
cwtl
xor
jl
xor
pop
shrl
lahf
loope
jp,pn
out
test
sbb
jmp
jo
loop
mov
mov
jecxz
lods
and
lods
mov
imul
inc
cli
pop
loope
lret
cmp
dec
jae
sbb
nop
push
xor
mov
and
mov
push
lcall
clc
pop
mov
pop
loope
jno
xchg
sbb
lret
or
jb
daa
addr16
sub
popf
mov
sahf
push
sbb
fisubrl
mov
test
push
xor
add
neg
mov
fildll
fsubs
repz
aad
mov
dec
cld
popa
lods
ja
fmull
ljmp
mov
add
pop
pop
in
dec
mov
mov
in
orb
sub
insb
insb
dec
jl
test
xor
push
sarb
scas
or
mov
scas
dec
jo
mov
dec
cs
hlt
sahf
jb
sti
add
jnp
jmp
cs
add
cwtl
ds
inc
ss
mov
movl
test
hlt
jecxz
cmp
out
sub
sub
push
mov
je
mov
push
cli
mov
pop
test
cld
dec
mov
orb
insl
sbb
subl
add
loop
sub
stos
xchg
and
push
sub
call
sub
mov
mov
inc
lock
mov
aaa
fistpl
add
cmpsl
cmp
pop
hlt
popf
ret
fcomps
xor
pop
fiaddl
ljmp
and
mov
jge
mov
add
mov
sti
shll
mov
mov
sub
jmp
cmp
idiv
imul
push
or
lcall
ficoml
or
aaa
jmp
mov
mov
out
addr16
pop
aad
push
inc
mov
push
pop
or
xchg
dec
mov
xor
int3
push
add
fcoml
mov
insb
mov
ret
cmp
scas
pop
mov
add
jecxz
mov
fmuls
jge
jbe
mov
mov
pop
inc
adc
xchg
std
sbb
push
jnp
push
push
es
insl
sahf
enter
imul
jno
sub
daa
mov
lods
movsb
dec
jmp
enter
xchg
enter
dec
pop
mov
mov
or
jae
dec
lret
xlat
xor
pop
arpl
ficompl
lds
dec
test
in
or
ljmp
xchg
mov
mov
lea
sub
pop
dec
and
test
out
pop
jecxz
lods
cmp
es
arpl
subb
std
or
insb
rcll
les
aad
aas
cwtl
fstp
lds
push
fiadds
push
mov
aas
rcll
stc
data16
mov
xor
dec
pop
sbb
ficompl
pop
or
inc
and
mov
xor
push
add
aaa
popf
cmp
sahf
push
das
hlt
cmpsb
dec
sbb
nop
xchg
dec
insl
in
sbb
push
idivl
fidivrs
in
aaa
xchg
sbb
mov
test
ds
mov
outsb
pop
lock
shlb
mov
js
ljmp
leave
lea
push
lahf
enter
or
mov
xchg
lret
fidivrs
sub
insl
movsb
push
ja
popa
fmuls
aam
repz
in
push
clc
repnz
add
fs
mov
inc
cld
lahf
xchg
test
setb
andb
adc
mov
fiaddl
cld
in
sbb
jle
sub
jno
jge
aas
jo
imul
test
in
or
pop
dec
dec
cwtl
outsl
clc
xor
pop
ljmp
pop
pushf
pusha
addl
jge
mov
or
dec
leave
push
and
xchg
orb
jo
aad
xchg
adc
aad
pop
call
xlat
mov
popf
mov
mov
popf
pusha
incl
xchg
outsl
sbb
es
xchg
add
sarb
fwait
inc
fwait
insb
pop
fsubp
xchg
cmp
dec
inc
inc
ss
bound
or
push
sbb
addb
sbb
jmp
cmp
les
aad
mov
incb
test
mov
sub
das
inc
sbb
and
sarb
in
xlat
aaa
test
das
and
call
sbbl
dec
jno
inc
mov
andl
call
pusha
push
inc
sarl
mov
sbb
xor
sarl
je
pop
cld
je
mov
xlat
popf
cmp
js
xchg
ret
push
rcrl
loop
push
cli
outsb
test
into
fstl
jbe
sbb
ret
fstps
xor
mov
pop
stos
sbb
pop
repz
mov
lock
loop
sbb
fisttpll
inc
mov
and
sbb
push
mov
and
leave
imul
shlb
mov
pop
push
jmp
nop
pop
mov
push
sbb
mov
jo
dec
rcl
pop
imul
and
xor
sub
or
repnz
or
and
fcoms
jns
fdivp
add
aad
pop
add
ljmp
push
fmull
lret
fdivrs
mov
adc
and
add
mov
adc
pop
push
ja
adc
fistpll
lods
pop
inc
push
popf
mov
in
jae
pop
cmp
lcall
cwtl
stos
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
das
out
xor
mov
and
or
xchg
mov
dec
and
sub
stos
test
sbb
stc
pop
pop
and
out
xchg
popa
cli
push
cmp
add
push
jg
cmp
xchg
fdivrl
adc
push
xchg
xchg
pop
adcl
adc
add
pop
out
xor
sbb
push
mov
fstps
std
dec
aam
or
jns
arpl
sub
jmp
or
mov
test
inc
xlat
push
cmp
cmp
or
jle
sbb
fs
xor
and
mov
inc
imul
dec
icebp
adc
hlt
movsl
xlat
lods
scas
adc
add
jnp
ljmp
insl
add
out
cmp
inc
adc
sub
jb
sub
stos
call
stc
mov
pop
xchg
fisubrs
pop
outsl
addr16
mov
fsts
stos
sbb
sbb
iret
sub
pop
inc
negb
hlt
and
shlb
mov
add
mov
les
and
and
pop
xchg
xchg
push
mov
jle
mov
xor
nop
outsb
lcall
xor
and
dec
shl
test
movsl
inc
cmp
loope
cmp
sub
je
in
jecxz
test
sti
pop
mov
adc
stc
inc
cld
sbb
fisubl
fisubrl
xor
aam
pop
sbb
aad
test
stos
or
mov
clc
int
pop
xor
int3
jmp
push
scas
mov
jmp
idivl
stc
in
adc
mov
mov
xchg
pop
test
int
cli
cmpsb
pop
cli
dec
sbb
push
fnstcw
dec
cli
mov
stos
xor
stos
cmc
loope
aad
pop
stc
ja
jge
leave
xor
jge
out
mov
xor
add
and
arpl
add
push
add
hlt
dec
cmpsl
insb
mov
xor
add
test
jg
lcall
mov
adc
jl
pop
or
push
jle
add
or
call
test
int3
mov
vmwrite
out
aam
in
inc
mov
dec
lret
jns
int3
and
idiv
push
in
xchg
push
mov
lret
int
sbb
std
cli
push
dec
jne
insl
sti
fs
in
push
pop
pop
push
mov
fists
nop
jnp
lcall
fcompl
test
mov
shll
adc
in
cltd
xchg
mov
and
lock
pop
jae
or
test
fcoml
adc
sti
jp
cmp
enter
xchg
cmpsl
andl
cmc
inc
scas
movsb
sti
enter
jnp
mov
xor
jl
mov
fisttpll
mov
mov
fisubrl
sub
ljmp
jge
inc
imul
xchg
in
popa
dec
loope
out
or
dec
ss
sbb
push
jae
mov
rcrb
sbb
shrb
or
mov
or
andl
mov
out
ds
bound
lcall
mov
add
inc
and
push
push
cmpsb
in
.byte
stc
pop
.byte
