aaa
mov
cvtpi2ps
or
sbb
pop
movsb
pop
push
loop
jl
mov
pusha
sbb
not
popf
mov
fwait
aas
adc
sbb
dec
outsl
inc
daa
sub
mov
mov
xchg
lret
add
pop
stos
push
cmp
and
mov
in
icebp
mov
outsl
dec
out
cmp
lods
fsubrs
cmpsb
mov
outsl
jbe
xor
and
xor
and
fcom
mov
cwtl
dec
data16
das
outsb
pop
shrb
and
arpl
jp
das
and
inc
arpl
mov
pusha
cmp
cmp
xchg
mov
sub
std
xchg
ja
mov
mov
mov
test
push
xor
cmc
dec
pop
add
xor
mov
iret
pop
pop
jl
sahf
mov
fcomi
jecxz
fisubl
loopne
fidivs
in
jecxz
mov
sub
jo
dec
xchg
sub
and
adc
pusha
iret
loopne
shll
daa
push
sub
jne
mov
repnz
test
out
pushf
sti
addr16
add
jl
inc
popa
and
xchg
mov
std
and
andb
cli
lods
shl
lods
mov
sbb
andw
add
pop
xchg
mov
stos
push
xchg
xchg
iret
fistpll
cmp
adc
xor
lods
cs
mov
and
fwait
pop
inc
repz
sbb
movl
sbb
mov
or
adc
lret
aas
sti
sbbb
cmpsb
xchg
pop
fidivrl
mov
cmp
or
jg
sub
fidivl
inc
in
loope
xor
rcrl
adc
fidivs
mov
popa
mov
lcall
mov
out
out
fucomp
cmc
push
or
scas
test
push
and
jnp
push
push
in
out
test
rcl
push
add
add
push
icebp
xor
sbb
daa
fisttps
std
or
push
pop
or
jp
rclb
icebp
pusha
add
xor
xor
pop
negb
sahf
lods
outsl
lods
sub
cltd
test
mov
cmp
dec
mov
lahf
stos
pop
pop
inc
loop
lret
mov
orb
leave
and
cli
sbb
lock
xchg
es
mov
push
xorb
fstps
cmp
das
shr
sub
pop
ja
cmp
fld
and
xchg
loop
je
jmp
dec
int
jmp
lahf
mov
call
add
mov
jmp
push
std
ret
into
ret
xchg
aaa
test
inc
sub
xor
cmp
aaa
xchg
shlb
es
popa
add
push
pop
shrl
mov
inc
in
in
jecxz
das
pop
repnz
pushl
loope
jbe
gs
xor
dec
dec
cmp
shlb
cmc
hlt
sbb
aas
stos
cmpsb
mov
push
xchg
dec
dec
test
stos
pushf
cs
lods
lcall
sub
fldenv
cmp
aad
sbb
jl
in
jg
lds
mov
jge
cmp
or
adc
add
enter
pop
fildl
mov
sbbb
and
lods
repz
pusha
pop
jg
cli
or
imul
movsl
loope
mov
push
enter
or
aas
jp
push
into
and
sbb
add
xchg
dec
ja
xor
mov
in
aaa
rcrl
mov
inc
xor
jecxz
mov
fistl
sub
sub
fwait
inc
lods
adc
add
jg
add
call
sar
xor
mov
xchg
jnp
call
xlat
dec
call
pop
ret
in
push
cmp
inc
decl
and
and
xchg
cwtl
lods
xchg
xlat
jne
push
xor
cmp
dec
cmp
jb
loop
add
sti
add
add
push
jmp
or
mov
push
and
ja
or
in
adc
pop
std
cmp
mov
and
jmp
nop
sbbl
jns
sbb
or
cmp
or
cmp
call
adc
outsb
cltd
jnp
ret
popf
sbb
or
or
faddl
jle
pop
add
dec
sarb
add
leave
xor
mov
add
aas
mov
mov
sbb
ret
inc
xor
into
mov
dec
mov
call
fs
jp
xchg
rolb
mov
jecxz
mov
sbb
lea
or
mov
sbb
es
adc
bnd
cmpsl
inc
mov
sub
add
sub
inc
and
cmp
dec
jne
testb
clc
testl
xchg
jae
mov
mov
inc
daa
pusha
jns
outsb
pop
cmp
xor
ret
fs
mov
mov
icebp
fucom
xchg
popa
mov
aam
popa
xor
je
out
ss
xlat
scas
inc
mov
aaa
cmp
lods
insl
outsl
lahf
pop
imul
mov
loope
imul
lret
fisttpll
subl
xchg
mov
sbb
repz
hlt
xor
mov
ret
sbb
mov
pop
xor
jecxz
add
dec
out
jns
in
scas
jae
inc
cmp
loope
mov
aam
test
add
sub
into
cmp
popf
inc
jb
xchg
pop
mull
cld
dec
lds
xor
xor
xor
leave
enter
pop
sbb
idivb
ds
fs
add
test
add
pop
repz
repnz
mov
shrl
jns
aaa
lock
mov
data16
inc
sahf
test
sbb
lock
and
mov
push
stc
adc
jmp
inc
sti
jg
mov
sbb
adc
cli
stos
or
cmpsb
jo
imul
loope
push
insb
xor
call
and
cli
inc
lcall
ret
xor
cli
jno
adc
js
jno
jo
dec
mov
cmp
xor
aam
lcall
xchg
adc
lret
lods
shll
mov
data16
ds
mov
in
add
lds
stos
aam
and
aad
mov
imul
loopne
dec
push
dec
hlt
jp
cmpsb
mov
push
and
add
push
jecxz
jg
or
xchg
fwait
jae
ds
jmp
imul
shll
popa
aad
int3
and
popa
inc
and
outsb
in
push
scas
push
jge
xchg
data16
or
loopne
xorl
jecxz
in
lretw
imul
and
add
stos
mov
push
dec
lret
addr16
jmp
cmp
cmc
push
lret
cmp
repz
cmp
pop
js
adc
lock
mov
out
popf
cmpsl
pushw
stos
mov
cmc
fcmovb
pop
sub
jmp
xchg
push
repnz
xor
outsb
cmp
xor
dec
xor
test
sub
jmp
mov
and
or
aad
sbb
sti
cmpsb
fcoms
dec
jl
push
jmp
sbbl
into
jecxz
or
movsl
fistl
jge
sub
ljmp
out
aas
mov
jl
in
scas
jne
loopne
cs
push
xor
sbb
addb
inc
ja
sbb
fwait
jo
jbe
add
fistl
cli
es
and
push
cmp
push
mov
insb
div
cmp
in
aam
aaa
lods
pop
adc
ja
pop
jp
or
sub
sti
pop
and
jbe
jae
inc
je
sbb
sub
cltd
pop
inc
jp
dec
cmp
fmuls
das
mov
add
and
in
aas
dec
sbb
fstl
pusha
mulb
sbb
test
sbb
out
fisubrs
sub
jecxz
stos
andl
cltd
push
inc
push
iret
mov
inc
sbb
cmp
jl
pop
es
and
test
stos
or
es
mov
aas
fistps
inc
sbb
dec
adc
pop
insb
pusha
dec
call
mov
lahf
or
in
sbb
adc
mov
mov
cmp
popaw
jp
bound
mov
add
inc
adc
stos
clc
mov
repnz
dec
repnz
das
jg
mov
popf
xchg
jnp
pcmpeqb
inc
and
shll
adc
dec
je
fucomp
int
adc
scas
xor
inc
add
cmp
inc
inc
enter
jb
into
mov
cs
jle
and
movsb
mov
movsb
pop
xlat
enter
rcrl
push
mov
adc
mov
pusha
loop
pop
sub
mov
or
jne
fwait
dec
dec
test
in
ret
es
out
push
stos
pusha
sub
jbe
dec
inc
vmwrite
xchg
imulb
mov
loopne
cmp
xchg
mov
mov
in
inc
sbb
mov
adc
stc
mov
test
daa
xor
or
lock
jmp
sub
xor
pop
and
test
out
stos
cld
daa
xor
jmp
out
adc
push
out
sub
gs
shlb
sub
inc
movsl
loope
jns
pop
pop
leave
cmp
subl
adc
test
mov
fstps
rcl
pop
xor
jbe
stos
pop
jp
sbb
cmp
sbb
test
jmp
adcl
inc
lfs
jle
loop
shlb
dec
lods
jo
mov
sar
push
imul
jno
mov
jo
adc
or
ljmp
adc
sub
in
lods
addr16
frstor
das
mov
lds
xlat
adc
in
sub
arpl
loop
hlt
or
negl
sti
mov
ret
outsl
adc
das
stos
and
jg
sbb
sub
call
sbbb
mov
fs
pop
push
mov
jne
insl
sbb
dec
jns
fcompl
cmp
shrb
imul
fistl
inc
aaa
out
pop
scas
lahf
fwait
mov
out
jle
movsb
mov
fdivr
lods
add
and
adcl
loopne
adc
push
jge
scas
dec
and
xchg
inc
lcall
adc
xor
scas
and
jne
pop
outsb
xchg
addr16
data16
inc
das
sbb
pusha
and
pushf
shlb
jl
adc
mov
push
adc
mov
int
cli
pop
sbb
cmp
dec
jbe
mov
xor
or
adc
jl
imul
les
jp
inc
mov
pop
xor
in
pop
sub
loop
shrl
cwtl
popa
jmp
mov
fcmovnbe
pop
out
movsl
loope
sub
mov
mov
jge
mov
cmc
in
daa
xchg
into
pop
dec
pop
mov
xlat
inc
adc
sbb
cwtl
pushf
pop
jp
std
adc
pop
adc
sub
xor
push
pusha
xor
pop
inc
push
or
xor
jmp
mov
push
sub
arpl
xor
and
jb
cwtl
fdivs
xor
gs
jbe
mov
lret
jg
outsb
sbb
pop
dec
sbbl
add
imul
mov
in
pop
mov
inc
arpl
mov
pop
jmp
push
xchg
insb
xor
sub
ja
movsl
cmp
fidivl
pop
push
scas
sbb
out
into
xor
push
fwait
sbb
repz
cmp
sbb
push
cmp
fcmove
ljmp
jle
decl
inc
test
cli
jecxz
inc
jecxz
lret
fistl
or
and
lds
xchg
or
pop
sbb
push
daa
mov
loop
cmp
dec
sbbl
jg
dec
pop
pop
mov
cmp
mov
out
inc
xchg
outsl
out
out
bound
in
jg
push
push
ds
mov
push
sbb
test
fdivs
adc
or
lahf
jo
pusha
mov
inc
add
leave
and
fs
imul
fildll
mov
hlt
cmp
lods
dec
rol
add
jae
aad
jp
cwtl
mov
adc
xchg
push
mov
jbe
inc
sub
pop
xor
inc
jnp
movsb
cmp
rol
imul
outsl
fstps
daa
mov
adc
push
daa
push
mov
and
sub
out
in
mov
mov
hlt
cmpb
das
imul
arpl
dec
adc
xorb
add
push
xchg
add
pop
lock
xor
jecxz
push
in
mov
dec
push
sbb
cli
add
test
and
idiv
daa
shr
leave
cmp
sbb
and
inc
movsb
iret
inc
outsl
mov
jg
ds
inc
inc
mov
movbe
cmp
loope
addb
dec
sbb
clc
mov
in
fsts
adc
add
sbb
ja
les
adc
mov
push
fs
loope
jmp
ljmp
pop
jno
adc
es
add
dec
jmp
xor
out
jl
sbb
jp
add
mov
push
cmpb
testl
jb
add
push
out
icebp
ffreep
clc
aaa
inc
mov
add
test
jae
loope,pt
inc
or
sub
push
iret
loope
es
or
out
inc
pusha
mov
add
mov
ficompl
pop
daa
std
xor
dec
lds
jg
xchg
dec
rcll
mov
cs
lret
add
loope
mov
cmpl
jmp
mov
das
cli
outsl
lahf
jo
iret
call
out
arpl
jo
pop
mov
mov
shrl
dec
inc
cmp
mov
push
pop
scas
mov
data16
adc
xchg
cwtl
icebp
popf
mov
lds
mov
in
outsl
pop
shrb
mov
clc
scas
mov
adc
gs
push
jno
xchg
pop
subl
jae
lcall
pop
cs
cmp
in
les
or
push
xor
dec
inc
mov
repz
xorb
stos
sarl
insl
shll
out
loop
sbb
pushf
mov
cmp
fsubl
std
out
add
repz
cli
push
arpl
mov
xchg
mov
sub
cltd
adc
adc
add
and
xchg
bound
dec
sarl
sbb
mov
sahf
dec
insb
lods
push
jmp
sub
lock
push
fisttpll
stos
sub
jl
jmp
scas
outsl
shlb
push
outsl
loop
add
int
lcall
or
pop
insl
addr16
sbb
jb
mov
cmpsb
jne
popf
js
scas
es
stc
xor
mov
out
lea
jns
sub
sbb
add
push
jge
sti
popa
pop
in
hlt
lods
xchg
call
or
jbe
xor
xlat
stc
adc
daa
test
or
jo
fwait
xor
leave
outsb
add
lret
pop
sbb
out
inc
sti
xchg
cmp
bound
adc
fisttpl
jmp
mov
ret
fisttpl
xchg
or
dec
es
or
fbstp
push
stos
pop
push
fisubrl
lcall
inc
jne
lahf
adc
std
or
rcrl
xor
out
pop
and
cmp
add
arpl
stos
in
push
inc
loopne
push
pop
clc
out
fisubl
jno
lret
mov
fistpl
mov
xor
fisubrl
pushf
das
push
fldl
idiv
inc
dec
dec
dec
cwtl
inc
add
jne
and
movsl
cmp
mov
dec
inc
sbb
mov
mov
jne
dec
dec
fldt
pusha
insb
ror
cs
inc
inc
andb
jle
out
mov
lahf
add
outsl
inc
das
jecxz
fwait
or
sub
xor
js
and
pop
pop
fimull
imul
subl
dec
fdivl
fistl
in
inc
movsb
xor
rorl
test
cld
xchg
mov
jb
pop
xchg
xor
out
mov
xchg
shlb
out
sbb
bound
pusha
pop
xor
rclb
pop
sub
cli
in
imul
shr
int3
pop
pushf
std
test
mov
popl
pop
xchg
arpl
icebp
push
push
push
stc
lahf
insl
adc
shrl
add
add
adc
push
loope
and
cmp
mov
and
jge
mov
mov
stos
xchg
inc
xchg
roll
mov
fmul
loop
bound
popf
and
lret
mov
leave
scas
lcall
xlat
or
jbe
pop
scas
xchg
or
rolb
push
xchg
movsb
out
imul
inc
insb
in
ja
lcall
aam
adc
mov
push
jns
das
jg
movsb
jle
xchg
rol
ret
test
jb
jmp
cmpsb
and
xchg
ret
pop
ljmp
test
inc
iret
push
daa
sbb
mov
decl
lea
stos
or
sbbb
insl
test
insb
dec
cmp
xor
jb
xchg
pop
mov
jecxz
and
lods
imul
push
cmp
jle
in
inc
lcall
jnp
in
aas
shlb
add
mov
inc
fiadds
or
lahf
mov
bound
jmp
mov
inc
jg
iret
negl
xor
dec
push
data16
jmp
jo
jl
aaa
and
fnstcw
addr16
out
and
jmp
clc
fistl
jmp
sti
jns
iret
imul
les
shll
xchg
sarb
sarl
pushf
shll
lock
and
call
xor
xor
inc
jecxz
das
dec
pop
pop
dec
xchg
lods
sbb
pop
test
inc
push
or
add
in
xor
jbe
xor
dec
movsb
adcl
arpl
push
mov
ljmp
fldenv
xlat
jg
in
fbstp
push
out
add
cmp
mov
out
or
pusha
repz
dec
in
mov
loop
es
sahf
dec
push
push
movsl
mov
push
mull
dec
cwtl
iret
es
negl
pusha
lahf
hlt
xor
and
inc
pop
lahf
fstpl
or
xchg
jb
push
stos
pop
dec
add
fcmovnu
sbb
mov
adc
xchg
push
adc
pop
and
cltd
sub
add
cs
dec
and
and
sub
daa
cmpsl
push
mov
cmp
pushf
push
sbb
jno
xor
dec
inc
pop
cli
cmc
mov
mov
aam
inc
jg
arpl
nop
cwtl
xor
test
jnp
ss
call
sbb
lcall
arpl
fisttpll
rolb
inc
cld
sarb
mov
mov
jl
sub
or
enter
add
outsl
jne
mov
xlat
xor
inc
mov
and
cltd
adc
sbb
lret
dec
imul
push
arpl
lret
scas
outsb
iret
daa
mov
dec
sarb
mov
mov
or
lret
shl
mov
xor
and
mov
push
ds
push
fs
in
inc
cmp
jns
rcl
xor
outsb
jl
mov
jo
sti
mov
jae
dec
stos
xor
mov
mov
xor
test
sbb
insl
dec
hlt
mov
stos
inc
gs
xchg
cmpsb
sbb
out
mov
add
jns
paddusb
dec
pop
mov
jmp
lods
cwtl
and
xchg
add
inc
repz
mov
cmp
out
mov
scas
lock
sub
and
sbb
in
adc
add
push
into
jb
stos
je
adc
dec
push
mov
loope
psubsb
sub
add
sub
dec
lods
xor
lea
shrb
rorb
or
pop
mov
iret
subb
mov
push
jnp
jle
jo
cld
xor
pop
test
imul
or
in
mov
inc
hlt
xor
push
clc
mov
mov
push
aas
adc
imul
leave
cltd
std
pop
stc
adc
or
pop
push
push
dec
icebp
jbe
add
cmp
jae
data16
cmpsb
jae
jmp
outsb
aas
jle
lahf
or
out
sbb
push
push
push
jns
loop
roll
ja
shld
into
lods
mov
leave
sbb
xchg
push
es
bound
and
es
mov
jg
imul
les
mov
loopne
and
jns
pushf
pop
sbb
or
jg
sahf
dec
mov
rol
add
cmp
test
sub
fiadds
and
hlt
and
pop
nop
add
pop
stos
add
pusha
fbstp
nop
pusha
adc
mov
pop
and
enter
scas
lcall
pop
or
int3
push
lods
data16
aaa
push
cmp
and
lcall
xor
adc
cmpsb
enter
fildll
sti
icebp
dec
and
add
push
das
cmpsl
cmp
arpl
scas
mov
lods
jbe
out
dec
arpl
xor
jecxz
xor
mov
dec
sbb
mov
fdivl
rolb
imul
inc
inc
dec
sub
pop
jg,pn
mov
mov
dec
push
xchg
jo
fisubs
push
imul
repnz
cwtl
es
dec
in
cmpsb
or
sub
mov
and
mov
ret
or
lods
fucomip
mov
mov
mov
jecxz
pusha
jp
in
roll
mov
jns
movsb
xchg
sub
imul
mov
pop
divl
iret
xorb
xchg
sub
push
sub
jl
lods
sub
cmc
sub
xchg
pop
pop
iret
mov
jmp
push
shll
dec
adc
pop
or
es
imul
mov
inc
sub
sub
fwait
mov
das
mov
jb
pop
mov
rcl
xor
jmp
out
aaa
add
mov
je
or
jbe
pop
in
jo
push
adc
jae
inc
push
mov
roll
testl
xor
dec
xorb
shll
jbe
jo
std
aas
or
push
mov
xor
test
lcall
rorb
arpl
pop
mov
xchg
cmp
lods
inc
pop
cmp
aas
jge
jo
movl
sub
mov
rcrl
shll
loopne
jge,pn
fiadds
call
insl
adc
lcall
scas
push
imul
scas
mov
sbb
xchg
jmp
pop
mov
shrb
lods
ja
xchg
cmpsl
add
sarb
pushf
sarl
lods
adc
dec
adc
cmp
imul
clc
sbb
adc
pushf
adc
movsl
mov
dec
and
jno
mov
lret
cmpsl
int3
cmp
dec
add
jns
lock
and
jl
data16
lcall
cmp
cmpsb
push
out
xchg
mov
fildll
popa
cmovnp
jns
pop
ljmp
es
out
arpl
mov
pusha
pop
jecxz
add
ret
fnstsw
or
inc
xchg
addb
push
pop
lret
and
add
rcrb
push
out
or
cmp
xchg
cmpsl
dec
mov
outsl
in
sub
dec
out
in
add
out
ljmp
rcr
addl
popa
mov
mov
cmp
imul
addr16
out
mov
out
in
dec
scas
insl
inc
cmpsl
xorb
dec
pop
push
pop
loop
dec
ret
and
xor
rcll
add
lcall
jg
lret
jg
shrb
or
push
popf
mov
jg
inc
mov
out
addl
cli
xchg
sbb
ljmp
pop
jg
push
xor
imul
movsl
cmpsb
jecxz
inc
ret
rcrl
inc
jno
mov
addr16
jge
adc
mov
imul
shlb
xchg
clc
add
and
pusha
cmc
ja
adc
jecxz
std
sub
mov
stos
push
stc
pop
mov
add
jo
and
shl
jle
push
leave
cmpl
int
and
add
call
cmpsb
aaa
pop
pop
mov
dec
xchg
cli
addl
pop
in
lahf
or
int3
inc
and
mov
outsl
xor
addr16
rorb
fistps
loop
and
loop
mov
testl
sbb
mov
jb
sti
or
fbld
ret
arpl
push
les
cltd
adc
aas
ljmp
jmp
stc
dec
cs
in
push
scas
cmc
cmp
insl
push
adc
lahf
incb
nop
outsl
movsl
sarb
daa
dec
pop
mov
sbb
pop
shl
pop
pop
fnstcw
xor
data16
add
dec
je
jnp
cmpsl
cmp
dec
xchg
fwait
test
mov
mov
sbb
xor
mov
imul
cmpsb
icebp
xor
or
push
adc
lcall
sub
mov
pop
jae
dec
mov
clc
pop
cli
dec
insb
mov
lcall
das
xor
bound
jle
sbb
jmp
mov
repz
sub
and
outsb
xor
inc
push
cmp
int
clc
and
inc
movsl
loopne
rcrb
dec
jecxz
mov
mov
cmc
shlb
push
jo
mov
rcl
sub
sbb
cltd
xor
adc
aas
ja
test
add
mov
stos
icebp
aad
and
ficoml
repnz
lods
pop
jo
and
outsl
or
fimuls
test
lret
arpl
repz
inc
xlat
dec
push
repnz
push
repnz
and
imul
shl
outsb
cmp
iret
js
popa
push
fwait
je
clc
cmp
fsubs
ss
insb
insb
sbb
in
push
imull
adc
hlt
or
or
test
clc
insb
xchg
dec
ret
dec
in
jl
jl
sti
inc
flds
adc
add
adc
fists
aad
adc
dec
cs
popf
sub
pop
data16
mov
mov
das
inc
mov
out
inc
dec
and
push
push
outsl
cmpb
shll
pop
cmp
mov
xchg
jo
pushf
mov
sbb
push
stos
mov
or
out
shrb
dec
lods
nop
pop
frstor
mov
fidivrl
outsb
inc
xchg
je
mov
int3
add
jae
xlat
sahf
out
lcall
daa
mov
mov
addr16
pop
xor
cmpsb
outsl
pop
push
xor
fdivr
test
xlat
imul
dec
cs
addb
or
dec
lea
ret
and
test
pop
and
insl
xor
sti
mov
aas
test
push
out
jecxz
inc
lret
mov
repnz
inc
jp
mov
lahf
sbb
pop
bound
sbb
add
dec
sub
pop
stos
aas
roll
mov
xchg
jl
repnz
xor
out
mov
vpmacswd
dec
jnp
xor
push
divb
out
rol
sub
xchg
mov
sub
lds
fstpt
mov
aaa
imul
out
add
loope
cld
movsb
pop
mov
jo
mov
scas
xor
test
movsb
push
test
in
mov
xor
gs
nop
or
cmp
repz
and
or
sub
jbe
pusha
pusha
mov
mov
inc
inc
retw
loope
push
leave
jle
and
mov
test
out
inc
cmpsl
pop
dec
cld
and
and
mov
sbb
stos
clc
jb
cli
in
dec
scas
inc
movsl
lea
inc
push
mov
xchg
out
pop
sbb
and
lahf
mov
outsl
xor
mov
inc
lcall
push
out
cmpsb
pop
scas
cmp
sub
rolb
jb
cmp
mov
jne
mov
dec
or
dec
and
ljmp
sbb
inc
sahf
add
jle
or
mov
dec
dec
jnp
fwait
orb
inc
cmp
jl
jae
dec
jne
sub
fwait
pop
sti
cmp
outsl
xchg
fnstsw
push
jp
repz
cmp
outsl
jl
push
mov
outsl
push
loope
xor
pop
sub
sti
pop
insl
inc
in
stos
and
daa
sub
scas
in
adc
addr16
lahf
cmp
in
cmp
into
jp
lock
mov
pop
push
mov
fsts
or
pop
cmp
ret
and
inc
dec
push
add
aas
jb
aaa
xchg
jge
push
std
push
and
jo
popf
cwtl
and
pmaxub
mov
jb
xchg
and
inc
aaa
sub
jnp
aad
cmp
addr16
fdivrl
scas
add
jb
mov
cmp
jae
xor
xchg
jne
push
je
pop
jnp
adc
sub
lds
push
movb
loop
js
push
imul
jge
cmp
jp
cmc
ficompl
repz
enter
imul
mulb
push
imul
or
xor
insb
fldcw
push
sbb
pop
mov
cmp
shll
xchg
out
pop
or
jnp
mov
cmpl
mov
sti
pop
mov
sub
jcxz
popa
shrl
cmp
jb
insl
mov
cmpsb
mov
push
ljmp
push
pop
sub
in
add
das
into
pop
shrl
rorl
std
push
jnp
adc
push
and
pop
mov
pop
xor
sub
push
push
imul
in
cmpsl
imul
jb
lahf
aad
xchg
xor
ret
push
xlat
push
subb
addr16
sub
inc
inc
dec
jp
aam
andb
cmpb
pop
jno
push
int
scas
jecxz
inc
xchg
into
imul
ret
inc
mov
daa
fnstsw
test
mulb
push
mov
aaa
out
push
ljmp
lods
fsubp
pushl
inc
add
mov
pop
dec
mov
repnz
sbb
dec
fbld
stos
scas
ret
scas
and
jno
inc
loopne
or
xor
loope
mov
and
outsb
fwait
rcrl
jno
push
cmp
jnp
and
pop
imul
and
mov
add
arpl
addr16
sbb
jb
pop
test
sarb
test
xchg
adc
imul
cmp
aam
lahf
popa
js
repnz
mov
jp
repz
rorl
jns
cmp
mov
xchg
xor
sarb
xchg
push
sub
test
lret
fsts
dec
push
mov
and
js
fldenv
repz
cmpl
sub
ret
mov
mov
out
cs
add
fnstenv
sub
xor
shll
pop
pop
dec
pop
outsl
in
rorl
push
popf
scas
sarb
loope
popa
sbb
push
jp
and
jb
add
cmpsl
pushf
sub
pop
dec
mov
push
std
cmpsb
jnp
popa
scas
lahf
scas
and
jp
ljmp
mov
loop
mov
loop
aas
push
sub
xchg
jge
inc
cmpsl
sub
sbbb
mov
aad
push
mov
sub
jae
lods
push
cmpsl
cmp
test
jae
and
leave
cmp
leave
hlt
repz
lds
adc
pop
cmp
addr16
pop
xchg
pop
push
push
int3
jg
lret
inc
xlat
jne
dec
stos
adc
sub
clc
jnp
ja
xor
jbe
or
mov
jecxz
aas
lea
and
jge
cmp
in
push
lods
out
xchg
lods
cmp
dec
outsb
ror
and
loope
mov
out
sbb
sbb
fists
sub
outsl
sbb
ljmp
scas
int
pop
push
adc
popa
scas
lcall
adc
call
sub
mov
insl
popf
xchg
out
dec
adc
jle
dec
and
jnp
inc
push
inc
push
push
jo
mov
pop
pop
das
into
mov
in
call
dec
repnz
xor
mov
or
es
cmp
and
in
inc
mov
mov
out
xor
or
notb
lea
movsb
dec
xor
xor
add
loope
andl
insl
jns
push
xchg
cmp
xor
fistl
popa
dec
lock
lods
fwait
pop
mov
mov
ss
sub
inc
sub
clc
mov
loope
dec
sub
stos
sub
mov
fwait
sub
mov
and
pop
cmpsb
repz
pop
push
push
xchg
mov
mov
xchg
add
sub
jnp
daa
les
js
gs
das
daa
jecxz
scas
or
jmp
sbb
mov
daa
cmc
sbb
push
cmp
xlat
dec
test
xchg
pop
or
out
cwtl
subl
add
daa
cmpsb
test
out
fildl
jecxz
inc
jp
jl
adc
push
aas
fldt
sbb
mov
pop
push
and
ljmp
mov
push
test
push
sbb
and
addb
cmp
sub
bound
cmpl
pusha
repz
shll
sub
ds
mov
xor
push
addl
xor
xchg
jge
inc
jl
jbe
data16
jg
mov
imul
popa
bound
push
sahf
push
lods
imull
sub
dec
out
mov
rcl
jl
ljmp
pop
cmpsl
jmp
sub
fst
mov
sahf
lods
rcrl
jg
es
lcall
dec
jns
inc
mov
cmp
sbbl
ss
pop
imul
mov
inc
pop
inc
xlat
mov
inc
fistpll
xchg
dec
movsl
les
adc
aaa
sub
cmc
adc
fidivrs
adc
xchg
movsl
sub
dec
out
xchg
xor
repz
xor
ds
lret
sub
lods
cwtl
sbb
sbb
xor
push
push
xor
push
mov
inc
lods
insl
push
pop
push
out
mov
xor
and
jle
pop
js
cltd
push
pop
xchg
mov
mov
mov
repnz
add
pop
push
sub
int3
mov
lods
mov
mov
stos
xor
xchg
test
dec
and
rclb
js
and
mov
sub
out
sbb
mov
daa
mov
iret
shlb
cmpsb
inc
or
shl
inc
push
rcrl
leavew
pop
outsl
testl
push
dec
movsb
pop
sub
bound
push
lret
lods
dec
push
scas
scas
cs
mov
mov
subb
push
add
aam
mov
scas
pushf
jae
repnz
xchg
stos
jmp
test
shlb
scas
outsb
pop
xor
inc
mov
insl
dec
sub
mov
movsl
mov
or
sub
dec
jge
dec
sub
cmp
sub
xlat
pop
inc
jecxz
jle
mov
testb
and
pop
mov
xrelease
cmp
mov
xchg
mov
sub
decb
jb
cmp
jp
test
rcrb
ds
addl
icebp
in
inc
test
cmp
imul
pop
cs
mov
jle
or
fwait
pop
cld
arpl
push
into
push
or
repz
mov
add
repnz
ljmp
push
add
xlat
rcrl
and
test
repnz
test
fwait
and
andw
or
ja
hlt
cmpsl
cli
cmp
insl
and
fstp
iret
andb
imul
push
sti
leave
pop
lods
stos
xlat
pop
mov
mov
jmp
enter
dec
sbbl
into
push
lahf
hlt
push
push
fistl
push
adc
push
fadds
test
or
frstor
cmp
mov
xchg
arpl
aaa
push
sar
inc
and
pop
in
pop
pop
inc
mov
pop
arpl
out
and
inc
stc
icebp
jmp
dec
test
loope
addl
ljmp
mov
or
or
xor
or
mov
inc
gs
movsl
mov
xchg
loop
outsl
sub
cmp
out
dec
cmp
add
sarl
jmp
push
adc
mov
mov
insb
sub
test
ss
movsl
daa
mov
mov
jl
xlat
inc
repnz
ljmp
arpl
and
cmp
ret
lea
aas
xchg
push
pop
das
push
push
mov
dec
dec
scas
shrb
or
push
mov
jmp
and
xchg
and
insb
dec
push
push
loopne
inc
inc
ds
adc
xor
xor
ret
jle
pusha
out
xchg
fsubrl
adc
sub
aad
repz
fcoms
inc
mov
pushf
sti
inc
jle
mov
lods
pop
in
adc
mov
xor
pop
mov
fidivrs
push
pop
test
pop
and
shrb
stc
ss
cmc
push
loop
xchg
ss
inc
fiadds
adc
xchg
pop
in
push
das
stos
push
outsb
xchg
daa
xchg
outsb
jae
es
ljmp
mul
punpcklwd
out
in
jle
gs
mov
adc
testl
pop
sub
mov
push
lods
pop
xchg
pop
cs
scas
mov
int
xchg
mov
and
pop
lds
push
movnti
pop
or
enter
mov
jmp
stos
test
bound
iretw
stos
lods
data16
inc
push
xchg
or
xchg
stos
sbb
inc
push
mov
dec
decb
add
scas
cli
ds
out
rcll
lret
xchg
js
push
cld
sar
sbbl
leave
bound
xlat
add
adc
xor
dec
dec
and
or
shrb
xchg
sub
push
jns
inc
cmp
xchg
dec
loop
mov
xchg
ljmp
xor
push
jle
jb
mov
imul
popa
ficoms
scas
je
popa
in
cmp
jns
fwait
push
xchg
es
lods
pop
pop
out
and
or
mov
dec
xor
imul
lret
mov
movsl
insl
rcl
inc
jnp
xchg
lock
xor
aaa
loope
jo
sbb
pop
sub
adc
mov
push
in
mov
cmpsb
push
pop
cmp
adc
mov
adc
mov
sbb
and
imul
jae
js
jb
fbld
adc
popf
sub
pop
ljmp
fiaddl
mov
ret
jg
mov
xchg
inc
lahf
shr
outsb
cwtl
lcall
pop
xor
fisttps
shll
cwtl
xchg
cmp
fmul
cltd
mov
mov
cmp
mov
repz
das
dec
jae
out
lea
add
out
sti
or
pop
jnp
aas
dec
jp,pt
xchg
or
aaa
das
push
inc
xor
mov
cltd
jge
push
sti
jg
ret
inc
dec
sub
in
mov
dec
mov
push
cwtl
push
add
fbld
gs
lods
ja
out
shlb
pop
divl
rcrl
push
jbe
jae
and
push
fldl
cltd
jmp
jmp
cld
imul
scas
push
or
insb
les
lret
aaa
out
jo
jae
iret
lds
lock
push
pop
stc
sub
add
or
dec
xchg
mov
lcall
arpl
mov
imul
cmp
cmc
popw
cmp
iret
shll
lret
push
into
mov
xor
sbb
shl
outsb
lret
imul
xor
jnp
pop
rorl
popf
push
pop
mov
cwtl
jecxz
xchg
inc
in
push
or
mov
pop
push
adc
inc
mov
adcl
mov
dec
push
mov
dec
or
or
call
adc
push
inc
or
fiaddl
inc
inc
les
inc
push
es
sub
out
fcompl
push
insl
filds
dec
jns
mov
cmp
jb
or
adc
cmc
cltd
xchg
and
mov
jmp
dec
hlt
mov
lcall
xchg
je
mov
es
mov
mov
imul
or
imul
lock
cli
dec
rol
ret
or
push
jb
cli
mov
pop
ja
inc
shll
push
icebp
pop
mov
xor
cmp
aaa
sbb
sbb
fistl
mov
mov
loope
mov
cli
pop
adc
test
out
subl
mov
or
adc
aaa
xchg
push
outsb
into
mov
repnz
pusha
sub
and
loope
dec
mov
mov
pop
inc
sbb
daa
andl
addr16
jns
jae
push
fcmovnu
inc
fildll
aaa
cmp
dec
sbb
negb
mov
popa
ja
rcrb
dec
cmp
js
push
pusha
rcrl
inc
cmp
fistpl
jg
jb
imul
dec
js
mov
nop
imul
add
xchg
out
or
cmp
dec
pop
int3
sub
xchg
pop
dec
sbb
sahf
xor
cmp
mov
push
cmp
lret
mul
pop
ljmp
scas
adc
addb
jle
xor
xor
dec
pop
inc
cmp
jl
or
cmc
addr16
inc
mov
std
adc
faddl
mov
mov
cltd
leave
push
fcomp
adc
les
mov
cmp
jnp
jns
add
add
repnz
test
cmp
mov
inc
mov
js
pop
in
rcll
repz
cs
repnz
jmp
xchg
inc
pop
xor
out
mov
insb
arpl
push
loope
subb
jo
or
pop
lock
sbb
hlt
adc
mov
mov
add
cmp
and
fisubl
stc
add
mov
sub
mov
push
invd
aas
ja
and
aaa
cmp
roll
sub
mov
movsl
inc
pusha
out
push
mov
mov
xchg
lcall
xor
or
jle
out
mov
mov
roll
lods
pusha
sbb
jae
adc
cmpsl
mov
pop
xchg
dec
leave
sub
ret
iret
fildl
add
call
push
inc
sub
dec
add
popa
push
je
movb
push
push
lds
jns
push
push
mov
shll
flds
xchg
fs
dec
dec
and
cwtl
mov
push
mov
mov
repnz
sti
stc
pop
sahf
arpl
add
mov
repz
insb
cmp
in
add
sarl
pop
adc
insl
cmc
jne
test
or
add
cmpl
or
outsl
inc
mov
add
inc
jg
sub
mov
add
mov
jo
sbbl
repnz
int3
or
cs
shlb
jo
movsl
push
mov
jg
adc
sub
scas
xchg
or
sub
adc
out
xor
mov
clc
pop
aad
mov
rcrb
pop
hlt
loope
arpl
push
insl
jg
mov
jb
mov
add
xchg
hlt
cmc
lret
push
sarb
fbstp
loope
frstor
icebp
xor
out
fwait
push
lock
lret
sbb
in
aad
push
xchg
adc
out
add
add
out
repz
add
push
cwtl
xchg
inc
mov
test
inc
push
jne
mov
cmp
lret
jg
je
push
add
jg
cld
xchg
add
pop
repnz
pop
adc
lret
sub
sbb
xchg
stos
pop
sbb
stos
dec
mov
jg
dec
sub
cwtl
jp
xchg
aaa
jo
mov
dec
xchg
mov
fwait
mov
xor
es
nop
cli
jmp
inc
adc
into
std
and
rclb
cs
lcall
mov
cwtl
jmp
out
repz
icebp
push
loop
nop
mov
leave
xchg
adc
movb
pop
xor
ja
push
pop
lcall
and
jl
loop
sub
jnp
jg
xor
push
or
outsb
lods
jo
int3
cmpsl
mov
pop
rorl
push
jl
mov
cmp
in
jmp
js
lea
clc
jnp
xchg
and
and
dec
dec
xchg
lods
jb
mov
or
fwait
out
sub
sahf
sahf
stc
mov
mov
mov
xchg
popf
mov
arpl
push
js
outsb
pushf
cmp
loop
fdivl
sbb
jmp
fildll
pop
xor
xchg
pop
ficomps
arpl
rorb
or
sbb
dec
cmpsl
call
cwtl
ja
dec
ss
and
push
push
jp
xchg
aas
daa
bndldx
push
lret
arpl
sbb
ss
dec
insl
sub
sbb
in
mov
mov
pushf
mov
jecxz
ja
mov
mov
sub
rolb
jmp
mov
add
jno
sti
xor
sub
mov
mov
enter
out
shlb
fbld
push
ret
mov
pop
addr16
inc
imulb
xor
dec
mov
hlt
shlb
ljmp
fcompl
lret
mov
add
jp
and
jp
ret
sbb
xor
sub
popa
pop
or
cmp
inc
sarb
mov
sub
outsb
xchg
dec
stos
inc
adcb
xchg
add
lcall
mov
jbe
jecxz
shll
std
cmc
mov
push
mov
iret
cmpsl
sub
aaa
pushf
pusha
shrb
pop
and
xchg
sub
popf
lcall
jmp
sbb
notb
gs
add
push
mov
pop
popf
clc
stos
and
shll
lahf
arpl
movsb
sbb
frstor
ret
jl
xor
pop
cmp
arpl
sub
dec
xchg
jecxz
pop
out
dec
pop
leave
clc
rcr
dec
out
pushf
movsb
add
cld
cmp
mov
jg
dec
adc
insl
or
xchg
je
inc
pushf
mov
and
add
and
leave
mov
bnd
ret
adc
data16
cmpsl
pop
out
inc
cli
fstpt
mov
and
mov
or
dec
cmp
cmp
dec
fistpl
nop
or
add
idivl
push
and
out
aas
pusha
and
bound
insl
cmp
mov
mov
jo
pop
out
and
lock
push
jns
and
mov
lods
mov
aaa
or
test
jb
pop
xchg
popa
mov
push
push
or
outsl
fs
nopl
xor
movsl
notb
push
jmp
popa
adc
jno
popf
pop
in
movsb
mov
lea
xor
mov
jns
loop
cmpsb
fcoms
lret
dec
cmp
cmp
sbb
loop
adc
in
stos
jns
jle
ficoml
jl
into
outsl
lahf
fwait
stc
fbld
cmpsb
filds
mov
mov
cmp
push
add
cltd
mov
arpl
dec
xor
mov
jp
imul
push
pop
cmp
jg
and
mov
add
dec
stc
imul
stc
push
sahf
ss
mov
xorb
add
arpl
sar
movsb
out
lret
inc
dec
das
insl
mov
pop
jns
jnp
lock
je
movsl
lahf
sub
sub
and
clc
repz
cmpw
add
ret
cmc
lahf
jns
orl
imul
mov
xchg
subb
ja
sub
add
pusha
iret
clc
jmp
loopne
mov
test
push
fwait
jg
push
dec
pop
jecxz
inc
cmpsl
and
std
and
dec
leave
and
rcl
adc
push
adc
dec
lret
adc
sub
cltd
call
pop
fstps
idivl
gs
faddp
movsl
addr16
or
push
inc
pop
mov
push
mov
inc
pop
cmp
mov
out
dec
and
jnp
adcl
mov
frstor
add
subl
jmp
push
xorl
icebp
out
aam
add
mov
inc
xchg
ja
out
mov
in
xchg
push
cmc
stos
aas
mov
incl
push
jno
push
jmp
or
pop
jmp
pusha
aaa
lret
std
stos
sub
add
test
test
cli
lea
pop
negl
out
jmp
pop
in
pop
sbb
cli
test
mov
imul
ljmp
or
iret
scas
popf
mov
stos
jge
push
lcall
xchg
mov
or
adc
stos
je
jno
repnz
jmp
ds
leave
fdivrl
ljmp
and
pop
test
dec
das
or
mov
cmp
adc
sbb
mov
mov
aaa
mov
shll
pop
rclb
lret
iret
jbe
jb
rorb
pop
fcoms
mov
stos
xchg
xor
add
cmc
ss
xor
jno
sbb
xor
sub
test
mov
inc
and
in
leave
testb
or
out
jno
inc
inc
push
movsb
mov
push
cmp
loope
or
pop
xlat
rorl
xor
shll
and
nop
fcmovu
adc
cmp
test
cld
popf
mov
or
ficoml
mov
xorl
and
mov
adc
iret
iret
push
ficoms
leave
lds
out
ret
faddl
ljmp
andl
repnz
cmp
aas
iret
xorb
cmpb
dec
in
mov
fldenv
shl
sarl
and
jo
aaa
mov
mov
xchg
fsubl
loopne
inc
dec
mov
pop
out
push
mov
adc
jae
test
inc
mov
and
xchg
mov
aas
stc
repnz
push
roll
mov
test
push
movsl
pusha
ljmp
out
push
imul
mov
mov
addr16
sbb
or
shlb
adc
aam
xchg
sub
mov
popa
fwait
bound
in
push
inc
add
mov
movsl
mov
cmpsb
xor
loope
push
xlat
or
bswap
sub
jecxz
sarb
jl
das
mov
add
inc
in
cmp
push
pop
sub
inc
out
pop
push
lock
push
cmp
adcl
pop
js
mov
int3
mov
pop
fisubl
mov
jno
rep
pop
orl
sbb
fdivrl
push
push
js
leave
out
and
and
data16
sbb
outsl
ss
add
aad
lods
imul
push
add
enter
mov
sbb
cmp
or
mov
or
pop
fldenv
fwait
leave
cmp
xorl
xchg
out
addr16
scas
arpl
mov
test
cmpsb
inc
cmc
xchg
xchg
jo
mov
mov
fildll
cmpsb
shll
or
notb
arpl
jecxz
inc
data16
xor
sub
xor
xchg
xor
imul
inc
leave
test
cmp
xchg
ds
in
mov
daa
clc
fwait
mov
clc
mov
xchg
jge
dec
and
in
and
loopne
or
xchg
icebp
stos
lret
out
lds
and
stos
add
push
cltd
out
adc
dec
scas
xor
loopne
jns
scas
mov
ja
cmp
xchg
jnp
test
shll
ffree
jmp
in
pusha
mov
and
pop
ja
mov
mov
lret
loop
sahf
or
mov
cmp
sbb
or
movsl
sar
shrb
sahf
arpl
les
mov
jecxz
stos
hlt
dec
js
mov
inc
cmp
fs
pop
shl
jo
jl
mov
jl
cwtl
stos
xor
add
mov
mov
jle
and
out
cld
sarl
ljmp
push
push
dec
cs
inc
sub
dec
sub
addr16
js
mov
mov
ret
inc
mov
rorb
or
subl
cmp
xor
or
call
cmpsl
es
stos
jmp
lret
aaa
ljmp
movsl
aas
adc
jle
das
push
mov
stc
scas
push
popa
dec
push
and
out
push
shrl
popa
insl
rorb
popf
rorb
fcmovb
inc
sahf
stc
pop
mov
or
pop
adc
mov
xor
mov
test
repz
and
lahf
cs
lahf
push
xchg
sbbl
and
sbb
xchg
jnp
xor
jae
out
sbb
sti
in
inc
dec
pop
and
aam
dec
cmp
mov
mov
outsb
pop
rorb
insl
pop
or
jmp
cltd
lahf
jle
xor
mov
les
cld
jae
jb
stc
sbb
jmp
push
mov
ljmp
andl
stos
stc
pop
sub
push
adc
in
fwait
andb
cmp
cmp
inc
roll
pop
addr16
call
test
call
daa
shlb
in
ljmp
jo
roll
xor
cld
arpl
imul
jnp
push
cmpsb
push
push
and
jle
jo
mov
xlat
lcall
inc
dec
jne
test
adc
lock
pop
sub
leave
pop
std
jno
cld
or
adc
movsb
or
pusha
mov
nop
jns
inc
int
mov
outsl
pop
cmp
lret
xchg
mov
pop
xchg
test
sub
ljmp
lods
mov
cmc
je
int3
cltd
and
adc
xchg
pop
adc
mov
rolb
adc
jecxz
sub
sbb
cmp
inc
inc
divl
addr16
add
jno
xlat
inc
jge
rol
sbb
scas
inc
fnstsw
loope
outsb
pop
cmpxchg
xor
into
or
or
push
pop
jno
cli
mov
lahf
mov
sub
mov
insb
or
test
push
bound
mov
orb
and
dec
jmp
mov
cmp
mov
clc
pop
divb
mov
fidivs
ljmp
adc
mov
lret
push
cltd
xor
fucomp
mov
pop
push
add
and
xchg
gs
jle
out
lret
loop
inc
ss
sbb
push
jg
mov
popa
sbb
inc
lret
jle
adc
inc
xchg
push
lea
add
popa
ret
sub
dec
negb
dec
pop
pop
xor
daa
in
jnp
mov
bound
cmpsl
inc
jb
jl
es
stos
pop
push
vucomisd
rolb
loopne
das
imul
or
jg
push
mov
xor
lock
mov
dec
insb
mov
push
daa
xor
aas
int
mov
jns
fs
push
xchg
pushf
dec
cmp
mov
or
mov
mov
test
mov
loop
push
fwait
sub
leave
dec
adc
mov
jno
jge
nop
xchg
push
and
or
mov
fists
in
std
cmp
xchg
jmp
rcrb
xor
out
insb
inc
mov
popf
adc
xor
dec
call
push
aaa
popa
jge
push
inc
or
cwtl
inc
mov
stos
jo
out
cmpsb
jnp
sbb
lret
out
sbb
sahf
xchg
lea
jle
jnp
mov
addb
mov
subb
jmp
mov
dec
decl
ja
popa
pusha
sarb
nop/reserved
cmp
mov
sarb
cmp
mov
iret
popa
cld
jns
push
test
dec
add
out
adc
mov
mov
and
and
pop
mov
divl
jns
lahf
scas
pop
test
or
xchg
call
ja
push
shll
vpsubd
dec
rcrb
pop
pusha
xor
push
jbe
sahf
ror
mov
scas
push
push
call
stos
lret
repz
mov
aam
jle
pushf
sub
mov
stos
mov
adc
mov
ljmp
pop
xchg
daa
cmc
adc
js
movsb
aad
cmp
incl
add
pop
push
mov
sti
cmp
push
insb
lods
inc
add
or
pop
out
adc
mov
icebp
popl
xchg
sbb
and
cmp
sbb
popa
jbe
pop
jle
outsb
jbe
addr16
or
sti
push
insl
cmp
mov
push
xlat
mov
sub
mov
sti
icebp
lahf
push
divl
jnp
or
fs
and
ja
or
or
lahf
xlat
jle
push
adc
pop
jbe
jp
in
dec
jmp
ffreep
sarb
pop
push
push
filds
and
sub
push
lock
adc
push
adc
lcall
fdivr
mov
jp
cmpsl
fsts
popf
lock
imul
into
pop
pop
pop
xchg
add
rcr
xchg
decb
xor
push
push
xor
xor
jb
fucomip
mov
stc
or
ja
jae
gs
sbb
jae
cmpsl
mov
xchg
outsb
int3
cwtl
and
xor
xchg
divb
mov
sbb
popf
out
mov
mov
js
test
and
repz
movl
cwtl
lea
cmp
cwtl
sub
aas
in
jae
fistl
dec
das
add
pop
mov
arpl
inc
cmp
sbb
or
fsubp
movsl
pop
arpl
dec
stos
cltd
popa
jo
in
fdivrl
pop
xlat
pop
fmuls
xor
jmp
dec
push
xchg
pop
fistl
sbb
cmpl
sub
mov
mov
push
out
cmpb
xchg
inc
ret
jl
cmp
ret
out
sbb
xor
xchg
repnz
clc
push
aaa
xor
mov
jl
pop
jae,pn
inc
sbb
dec
fwait
stos
mov
sub
mov
sbb
std
out
dec
and
in
insl
test
imul
mov
addr16
xchg
mov
adc
insl
aad
aaa
or
mov
test
iret
dec
inc
xor
shlb
movsl
dec
popa
push
lret
or
jno
mov
sbb
rcll
sub
das
pop
icebp
jp
loope
mov
adc
dec
mov
and
shll
jne
xchg
push
dec
jmp
out
add
sub
scas
movsl
push
inc
mov
loop
je
push
shrb
nop
xor
mov
enter
sub
dec
ds
inc
xor
cmp
repz
cmp
jg,pn
aad
shrb
jb
fdivrp
mov
pop
je
dec
lea
mov
bound
or
xor
scas
stc
and
imul
aad
push
and
test
popa
fscale
dec
cmpsb
aas
dec
cmpsl
sub
leave
push
inc
rcll
insb
hlt
and
jnp
xchg
test
das
and
or
xchg
or
pop
and
in
add
mov
mov
mov
lods
dec
scas
mov
roll
or
sub
xor
lea
flds
incb
push
pop
cld
cmp
enter
arpl
movsb
push
orl
ret
mov
dec
mov
loop
cmp
test
mov
xchg
sbb
xor
jb
pop
and
push
pushf
stos
arpl
inc
inc
out
in
orb
xlat
mov
out
or
cld
mov
sbb
subb
repnz
neg
or
mov
jge
lcall
mov
shlb
add
sbb
es
dec
dec
lret
mov
cmp
jb
add
mov
out
jno
mov
rcll
sub
popl
mov
addr16
pushf
mov
ret
std
xchg
pop
mov
pop
sub
das
outsb
js
mov
loop,pn
pop
mov
push
cmpsb
xlat
clc
frstor
aaa
jo
dec
cmpsl
test
test
out
adc
sbb
mov
in
in
repnz
jmp
adc
jmp
in
daa
imul
or
jecxz
cmp
xor
call
jmp
adc
sbb
and
hlt
imul
add
sbb
push
ds
jnp
pop
sub
repnz
inc
in
call
push
or
int3
cmp
outsl
jnp
outsb
arpl
movsb
dec
push
mov
mov
jns
int3
or
std
loope
test
xchg
sbb
int3
mov
adc
add
xor
xorl
jmp
lcall
loopne
pop
lods
ret
adc
inc
add
repz
add
adc
mov
or
jge
xor
in
mov
lret
test
out
adc
jno
xor
sub
test
call
mov
adcl
dec
rcll
sub
and
or
arpl
jbe
add
pop
bound
mov
sub
sub
or
push
cwtl
cli
add
pop
arpl
popf
mov
mov
mov
enter
add
leave
rcll
in
inc
popf
ss
mov
aaa
inc
push
xor
mov
imul
addl
xor
repz
aad
xlat
addr16
jle
adc
push
cmp
outsb
pop
test
popf
lret
cmpsb
sbb
push
jg
jl
sbb
mov
cmp
push
mov
enter
jb
push
dec
ret
sahf
xor
push
aaa
std
sub
dec
sub
xchg
aam
mov
mov
pop
sbb
stc
mov
popf
hlt
pop
je
mull
xor
mov
xchg
xor
and
jno
in
into
inc
mov
or
jnp
pop
sub
in
xchg
int3
cld
sub
and
push
aas
into
add
push
leave
pop
jecxz
push
rol
jo
jo
nop
lea
shr
dec
cltd
jnp
dec
cmpsb
add
sub
mov
movsb
sbbl
mov
mov
mov
imul
and
sub
adc
das
jne
pop
dec
mov
fwait
inc
jmp
sbb
sub
stos
xor
out
lret
mov
xor
lret
negl
lock
int3
cmp
sub
lock
jecxz
pop
jle
ret
pop
jae
lret
insb
imul
jnp
jbe
shrb
dec
arpl
data16
pushf
push
dec
repz
dec
jle
es
jp
daa
das
outsl
lcall
inc
sub
out
popl
and
mov
mov
xchg
dec
cwtl
stc
pop
test
xchg
jmp
movsl
inc
push
and
outsb
pop
repz
sub
mov
xor
adc
ret
lret
and
mov
xor
dec
or
outsb
mov
in
mov
hlt
jp
xor
inc
jns
dec
cmp
jmp
push
fsubr
popa
sbb
mov
stos
fistps
or
sub
scas
cmpl
add
xchg
mov
in
mov
loope
jae
push
sub
outsl
js
pusha
mov
add
sbb
adc
jnp
shrl
inc
imul
lret
dec
addr16
mov
orl
dec
mov
jno
into
fnstsw
mov
pop
jp
or
or
icebp
mov
and
add
popf
add
dec
push
sub
push
mov
inc
lods
xor
dec
mov
xor
lret
sarb
pop
xor
movsl
sbb
jne
mov
aaa
ljmp
cmp
imul
add
mov
push
or
hlt
jno
or
sbb
xchg
cmpsb
xchg
jp
mov
xchg
push
push
lahf
fidivl
inc
mov
cmp
fisttpl
in
fsts
js
cmpsb
int
push
pop
xorb
jae
mov
or
lret
jae
adc
jb
inc
mov
push
sub
inc
stos
adc
inc
mov
inc
and
ljmp
jmp
addr16
dec
cld
cmp
out
in
mov
call
in
out
jo
pop
inc
xchg
test
jecxz
add
mov
ret
rclb
sub
aas
daa
xor
cmp
and
lret
mov
mov
imul
mov
popa
aas
inc
arpl
stos
xlat
aam
leave
sbb
adcl
lcall
mov
and
and
ja
in
lret
or
minps
inc
pop
push
xchg
mov
push
mov
or
sub
repz
xorb
or
loopne
mov
jne
outsb
pushw
xchg
popa
jl
cmp
dec
hlt
jbe
lods
mov
insb
ja
lahf
mov
sub
popf
lret
mov
xlat
sti
xor
scas
shlb
cmc
inc
scas
lahf
or
xor
lods
push
lahf
xchg
mov
inc
sbb
daa
popf
xchg
xchg
push
inc
adc
push
adc
push
pop
das
dec
cmp
sti
clc
xor
out
mov
mov
orb
dec
pop
jecxz
mov
mov
push
pop
mov
nop
cmc
mov
clc
adc
jbe
mov
cli
leave
iret
repnz
outsl
jp
lods
and
sahf
mov
sbb
jb
and
dec
inc
xchg
and
sbb
mov
sub
leave
jge
mov
jl
out
adc
fcmovne
inc
xor
inc
stos
mov
or
mov
pop
jge
aaa
cs
lahf
push
jns
imul
cld
ja
dec
aas
rorb
leave
mov
ret
push
jbe
leave
jle
aam
rorb
or
and
cmp
jae
pop
jnp
inc
or
out
inc
mov
push
mov
sub
mov
jns
shrb
addr16
subb
and
dec
movsl
sbb
test
inc
repz
andb
xchg
outsl
adc
jb
xchg
xor
stos
and
cmpsl
and
andb
popa
xor
int
xchg
xor
out
orl
leave
std
and
mov
jl
addr16
xchg
sbbb
cltd
jl
addr16
mov
iret
fsubs
lds
mov
mov
data16
adc
jno
mov
pusha
test
ja
imul
jb
es
and
dec
mulb
pushf
sub
mov
rcl
push
test
cmp
data16
es
jns
js
test
dec
xchg
mov
cmp
mov
daa
inc
sbbl
cmc
dec
mov
push
mov
push
inc
mov
enter
add
pop
aad
mov
sub
cmpsb
or
push
fwait
xchg
cmpsl
jno
jnp
ljmp
insb
jo
fldt
or
andb
das
adc
add
int3
mov
pop
xchg
ret
cmp
jge
mov
pop
or
adc
xchg
adc
out
or
pop
aad
and
idivl
mov
enter
sarb
fildl
arpl
test
inc
mov
aas
scas
pop
pop
inc
jb
xorl
stc
or
pop
mov
cmp
jmp
loope
sub
pop
mov
add
xchg
mov
outsb
jle
cmp
jno
mov
or
dec
xor
mov
inc
inc
jl
movsl
ja
mov
sti
jno
outsb
sbb
sub
not
or
fwait
add
icebp
imul
pop
jp
clc
insl
testl
lret
lahf
jle
xchg
push
jo
je
xchg
push
or
gs
push
jl
movsl
insb
in
cltd
fistl
call
mov
push
xchg
inc
mov
pop
xor
mov
gs
inc
inc
or
lods
xchg
ljmp
and
fisubrs
lds
arpl
loope
sub
and
xchg
push
dec
test
push
sub
and
adc
xchg
xchg
out
xchg
or
sub
arpl
and
jb
out
adcl
mov
repz
cmp
mov
xchg
xchg
inc
mov
psubsw
arpl
jmp
into
iret
addl
mov
hlt
mov
adc
mov
xor
movsl
mov
lahf
inc
stc
ljmp
jg
inc
sbb
repz
push
push
inc
adc
sub
pop
into
push
test
jno
repz
sbb
jo
call
and
xchg
imul
sub
sub
cwtl
pop
in
ljmp
xchg
inc
mov
repz
out
lret
jp
test
jns
or
xor
dec
xorl
mov
pushf
daa
xchg
aam
jle
xor
movsl
rclb
lods
sbb
ret
popa
push
cmp
inc
sbb
aaa
mov
lret
inc
popa
inc
jmp
or
mov
and
mov
test
jae
daa
cmp
subb
push
call
xor
mov
int3
testl
sub
mov
loop
je
daa
loop
hlt
les
push
cwtl
jne
aam
insl
push
mov
in
popf
test
lcall
cmp
adc
ret
or
pop
test
pop
add
adc
dec
daa
xchg
aam
jb
push
sub
outsl
icebp
jp
mov
popf
ret
mov
mov
cmpl
push
pop
cmp
inc
cmpsl
xor
inc
cli
jb
jns
lret
dec
xor
pop
adc
jmp
aas
clc
mov
je
mov
mov
pushf
adc
jb
xor
int
sti
cwtl
cld
adc
and
cmpsl
stc
aas
out
mov
mov
adc
psubb
sub
nopl
mov
push
mov
push
push
test
dec
test
mov
mov
popf
mov
and
mov
call
jmp
push
cmc
lods
clc
or
roll
ror
jbe
sbb
dec
jbe,pn
and
addr16
fcomi
mov
inc
adc
pop
xor
dec
fwait
mov
and
jo
xchg
sete
cmp
inc
xchg
scas
xchg
stc
pop
insb
lret
mov
inc
inc
push
call
jbe
push
xchg
sbb
dec
xor
xchg
rcrl
dec
xchg
mov
jo
out
xchg
mov
adc
pop
stos
popf
cltd
jnp
je
mov
mov
push
xchg
xlat
sbb
mov
lods
mov
mov
out
mul
adc
mov
xchg
jo
stc
data16
and
rcl
jns
cmp
dec
scas
mov
cs
outsl
jnp
and
jb
imul
pop
push
sbb
lea
mov
lret
in
scas
xor
ror
jne
sbb
dec
aas
repnz
ja
jbe
in
cwtl
ss
fwait
jae
cltd
and
add
jns
cmpsb
popa
mov
cwtl
imul
sub
adc
mov
roll
adc
jb
cli
sbb
packssdw
jge
adc
nop
in
push
dec
cli
ret
iret
xchg
mov
mov
or
dec
push
and
aam
and
or
lcall
movsl
mov
xchg
repz
daa
cmp
add
pusha
das
jp
cmp
loope,pn
cmc
push
aad
sub
ficompl
cmp
mov
inc
out
cli
jg
xchg
sbb
add
add
xchg
or
inc
stos
dec
dec
inc
stos
dec
fsubrl
in
push
popf
xor
pop
enter
xchg
dec
outsl
cmp
imul
hlt
add
mov
or
mov
insl
daa
stos
in
push
out
jl
sub
mov
xchg
mull
insl
adc
outsb
sub
pop
lret
xor
push
xor
in
jbe
jbe
pop
push
cli
pop
mov
je
fidivs
fwait
dec
and
mov
cmp
stc
leave
test
cltd
icebp
test
dec
xchg
mov
mov
mov
inc
pop
mov
add
mov
adc
cltd
and
cwtl
pushf
cmp
stos
fdivrs
cli
push
cs
adc
loop
imul
add
xor
das
insl
jg
je
pop
jp
jmp
lret
sbb
cmp
rolb
and
and
mov
xchg
jmp
out
test
or
aam
push
dec
xor
mov
jns
fbld
test
mov
das
add
or
inc
stos
or
jbe
sbb
ljmp
xchg
lahf
jae
aam
loope
jecxz
xor
mov
imul
repnz
sti
push
repnz
add
inc
in
or
adc
mov
mov
inc
cmc
cmpsb
addr16
xchg
cltd
scas
mov
sub
xor
mov
imul
mov
and
incb
imul
out
sahf
cmp
or
inc
mov
and
es
push
mov
dec
shrl
cmp
mov
push
mov
lcall
mov
mov
rolb
lahf
pop
jne
or
test
jo
cwtl
cmp
sbb
and
int3
push
stos
sti
loopne
and
or
mov
loopne
cli
icebp
ficoms
or
push
or
cmp
mov
mov
sahf
mov
add
pop
push
shlb
or
daa
dec
or
loope
test
add
xchg
or
push
push
or
ljmp
imul
cmp
mov
sbbl
push
aad
xchg
sbb
aas
xchg
fists
lret
or
pushf
dec
bound
aad
adc
hlt
and
or
imul
stos
and
mov
push
add
push
lea
std
push
push
pushf
stos
leave
dec
testl
fsubl
int
push
sti
xlat
mov
cmp
xlat
cld
nop
dec
adc
and
inc
or
out
dec
xlat
std
xchg
jle
xchg
inc
ret
movsl
mov
pop
les
push
adc
mov
daa
adc
jg
pop
dec
or
cltd
pop
dec
cmpsl
mov
push
sub
outsb
or
test
or
mov
mov
add
into
nop
mov
dec
xchg
leave
dec
push
jne
and
sub
push
dec
ljmp
push
jns
aas
add
cld
push
mov
daa
pop
loopne
sbb
stos
and
aad
sbb
sbb
xor
out
mov
mov
sub
jg
mov
jb
aaa
dec
mov
pop
inc
or
xor
pop
sbb
adc
test
push
xor
cmp
cmp
nop
ljmp
cltd
ret
test
xor
jle
dec
and
insb
xor
jb
sbb
adc
mov
jle
add
or
test
jae
lea
cmp
fcoms
cmc
dec
mov
aaa
das
pusha
xor
fdivrl
cvtpi2ps
mov
lods
in
adcb
and
adc
leave
push
pop
fsubrp
mov
xchg
and
popa
loope
inc
enter
mov
dec
ret
enter
xor
adc
mov
testb
sahf
adc
and
ret
nop
je
adc
sbb
jae
fnstcw
mov
push
add
out
add
test
inc
addr16
inc
roll
or
movsl
xchg
inc
or
pop
repz
pop
lods
push
or
cli
mov
fldl
push
xor
ret
sbb
cmp
push
shll
dec
or
fstp
in
sbb
fwait
adc
push
push
stos
or
cmp
jp
stos
jg
in
in
xor
jbe
or
loope
push
sbb
lahf
int3
mov
arpl
repz
test
das
aas
inc
test
in
inc
jle
inc
rcrb
cwtl
decb
data16
inc
test
sahf
cmp
inc
inc
movsb
or
mov
pop
pop
shrl
outsb
mov
sbbl
adc
jl
les
sbb
repz
or
cli
lret
adc
inc
jne
mov
mov
xchg
or
imul
movsb
mov
mov
outsb
pop
mov
jg
imul
ljmp
sub
hlt
mov
pop
pop
insl
or
push
xchg
push
data16
jb
in
xchg
xor
add
push
outsl
and
in
sub
sub
hlt
xchg
push
jg
push
ja
and
pop
cmp
push
jae
push
hlt
xchg
fdivrp
xchg
sbb
mov
loopne,pn
dec
lret
push
mov
gs
adc
pop
jbe
les
rorl
fistps
and
es
in
xor
mov
pushl
pop
mov
repnz
cmp
in
jle
xchg
out
jecxz
les
movsb
and
cltd
xchg
mov
push
pop
sub
xchg
pusha
push
fstpt
mov
cmc
and
xchg
fadds
fs
push
xchg
inc
arpl
outsb
cmp
es
sarl
popa
cmc
shrb
and
inc
mov
leave
pop
jle
pop
dec
sbb
in
ret
nop
jecxz
xchg
or
dec
mull
in
mov
cmp
xor
sub
loop
dec
subb
hlt
fdivr
fsub
adc
xchg
ja
sbb
iret
jbe
add
ja
push
mov
pop
out
dec
es
mov
pop
ret
loope
daa
loop
mov
jae
cmpsl
add
sbb
jmp
lods
mov
decb
int
pop
mov
xor
adc
adc
pop
push
out
push
test
inc
mov
sahf
push
xor
movsb
and
mov
lcall
aas
stos
xor
out
out
push
jo
cmp
repz
or
jne
and
cmp
das
add
xor
out
or
movsb
sbb
add
sub
rcrl
mov
mov
sub
pusha
aas
xor
push
es
or
fwait
sti
fimull
es
fadds
xor
aam
aaa
lea
imul
cmp
arpl
inc
dec
cs
push
sub
pushl
adcb
pop
jle
pop
inc
pop
add
out
sub
dec
xor
outsb
cmp
aaa
mov
cmc
rcrb
lcall
test
je
std
fldt
and
jecxz
mov
jae
rcrb
ja
pop
mov
outsb
test
mov
jmp
subb
test
xchg
xchg
shrb
std
inc
push
sub
add
out
decb
andb
in
lock
mov
jp
dec
test
jg
jle
and
mov
adc
inc
mov
inc
cmp
outsl
ds
pop
outsb
pop
cwtl
pop
and
fsubp
ljmp
inc
lahf
lds
cmp
xchg
scas
lea
rorb
jne
or
inc
cmpsb
cmp
or
cli
bound
aad
push
aaa
stos
pop
movsb
push
mov
and
ljmp
pop
nop
icebp
repnz
inc
daa
inc
sti
xchg
sbb
arpl
jl
insb
insl
cmpsb
into
or
in
rcll
stos
daa
mov
pop
jns
lret
jno
stos
fsubl
or
jle
sarb
les
jbe
dec
imul
js
and
or
inc
scas
mov
mov
mov
fldcw
imul
aas
outsl
jae
pop
mov
rorb
insl
fwait
imul
repz
push
xor
cmpsl
cmp
or
mov
in
mov
mov
lret
adc
pusha
jmp
xor
rcrl
add
push
adc
push
lahf
or
xchg
shlb
adc
pop
out
cmpsb
rclb
mov
call
outsb
mov
inc
jne
jp
jo
pop
jge
movsl
jnp
jno
mov
mov
xchg
inc
int3
push
test
jl
shr
xlat
fcoms
add
add
mov
dec
pop
data16
movsb
shrl
and
clc
js
iret
xor
sahf
sbb
imul
test
xor
mov
cmp
inc
mov
jl
shll
mov
jnp
jns
and
mov
dec
imul
xchg
xlat
jae
pusha
jge
and
inc
inc
mov
jb
mov
push
sbb
dec
inc
jae
push
imul
pop
pop
out
mov
ja
mov
or
xchg
lret
inc
add
cmp
push
jg
jae
jle
and
test
mov
ss
mov
and
dec
sbb
inc
inc
inc
inc
and
cmp
add
push
loopne
shlb
push
push
loope
dec
sbb
out
ror
imul
test
mov
cmp
mov
and
loope
fcmovnbe
dec
or
push
clc
push
sub
xor
add
mov
in
adc
shlb
out
cmpsl
stos
ret
sahf
out
xor
outsl
and
mov
jno
jb
stos
and
es
pop
sbb
xchg
push
push
sahf
cmp
push
jno
push
sti
fistl
xlat
jae
pop
fs
and
push
shll
loop
mov
add
stos
popa
sbb
jbe
dec
sub
cltd
jle
sub
sub
inc
adc
pop
inc
gs
fnsave
mov
andl
mov
icebp
push
fmull
jmp
add
mov
inc
pop
popa
into
mov
pusha
and
cld
iret
scas
mov
in
pop
movsb
insb
rcrb
lahf
mov
stos
int
mov
push
jge
inc
jne
lds
lods
jmp
cli
add
dec
xchg
mov
shll
dec
dec
aaa
cmp
sbb
jmp
jnp
mov
add
dec
scas
sub
stos
popa
push
test
fwait
inc
pop
or
xor
jg
adc
popa
add
pop
cmp
cmp
mov
cmp
pop
sub
repnz
pop
repz
mov
pop
das
fisttpl
ljmp
sub
addr16
inc
pop
cmpsb
xlat
sub
and
outsb
pop
xchg
adc
inc
cmp
and
rorl
and
mov
adc
xchg
xchg
mov
cltd
lods
xchg
stos
dec
xchg
pop
outsb
fs
pop
adc
fnsave
imul
jle
loope
je
subl
dec
xorl
fucomp
fcmovnu
pop
and
pop
notb
sub
imul
and
and
jg
mov
xchg
cmp
fistpll
sub
push
loopne
imul
fnop
arpl
mov
lock
mov
pusha
pop
pop
sar
xor
mov
jecxz
inc
push
sub
or
fs
int3
sub
orl
dec
fsubrl
pop
mov
push
out
pop
pop
sub
stos
sbb
outsb
fisubs
mov
mov
fwait
mov
pop
dec
xor
xchg
out
and
fadd
cwtl
test
and
inc
mov
mov
pushf
aas
mov
push
mov
dec
stos
js
mov
shll
subb
pop
xchg
popf
popf
movsl
jmp
in
adc
jae
sub
xor
and
adc
mov
in
into
xor
inc
aas
pop
mov
push
mov
in
inc
sar
in
jo
cmp
int
or
xchg
stos
cmp
xor
popa
repz
das
adc
cmpsl
sub
popa
mov
push
push
push
aas
leave
imul
movsl
xchg
mov
dec
pop
jb
enter
imul
dec
push
jae
adc
aas
fisttpl
dec
scas
cmpsb
int
pop
stos
dec
stos
mov
das
sub
dec
xbegin
pop
push
aaa
outsb
xchg
add
pushf
and
push
mov
xchg
repnz
xchg
cmp
jmp
xchg
push
dec
mov
jno
les
push
pop
das
ja
repnz
jae
fdivl
mull
into
mov
call
cmp
xchg
inc
xchg
adc
lock
push
xor
mov
dec
shlb
mov
data16
leave
push
cli
test
adc
push
mov
das
xchg
aaa
adc
adc
fidivl
mov
jmp
dec
mov
dec
test
outsb
arpl
out
inc
or
jmp
imul
pop
jno
pushf
sbb
push
xchg
ds
test
add
ds
mov
mov
dec
or
xlat
orb
imul
mov
cs
and
mov
xor
dec
mov
mov
mov
xchg
pop
lods
xchg
bound
mov
arpl
jle
mov
sbbl
movsl
cmp
mov
mov
mov
mov
cltd
pop
xchg
mov
dec
push
mov
hlt
jb
pop
ret
sbb
jecxz
jo
mov
pop
dec
outsb
sahf
call
popa
out
mov
pop
ds
lods
add
test
insb
adc
dec
inc
xchg
stos
push
push
mov
jl
cwtl
adc
push
repnz
andb
je
adc
push
sub
lret
or
sbb
lods
xchg
leave
fsts
push
push
mov
rorl
xchg
cld
push
pop
and
or
pusha
jnp
jbe
push
xchg
mov
mov
shll
xchg
mov
test
dec
sbb
inc
jecxz
dec
test
out
addr16
cmp
outsb
addr16
aaa
push
fildl
out
add
stos
push
movsl
ljmp
out
dec
add
cmp
pusha
jge
fisubl
insl
add
push
js
outsl
push
notl
pop
movsl
inc
test
xchg
scas
movsl
pop
inc
inc
push
or
and
sbb
lcall
leave
push
and
sti
jg
rclb
idiv
and
int
in
add
test
pop
mov
and
add
gs
dec
enter
outsl
push
and
aaa
in
and
rorb
sbb
push
sub
cmp
dec
das
jae
mov
fwait
sbb
dec
pop
xchg
pop
mov
repz
sub
sbb
fwait
cmc
insb
jbe
loopne
adc
pxor
mov
adc
mov
push
out
cmp
mov
cmpsb
cmp
js
dec
shrb
add
loopne
mov
cs
mov
jb
lret
sbb
orl
lods
add
adc
and
mov
or
add
aad
push
xchg
por
lds
outsl
pop
mov
inc
scas
dec
sbb
andb
dec
ret
aas
sub
mov
xchg
mov
or
cmp
idivb
pop
xchg
js
cltd
das
stc
jmp
jmp
montmul
cmpsb
add
es
cmp
dec
push
and
movsl
sbb
sub
insb
or
fstpt
mov
insb
fs
andl
adc
leave
xor
lret
in
in
or
mov
pop
jbe
cmp
push
pop
xchg
fcom
sbb
pop
es
mov
movsb
arpl
or
cmpsb
pusha
popa
push
and
fildll
cmp
sbb
mov
fucomi
das
mov
mov
adc
sub
notb
popa
stc
sub
push
in
push
pusha
ja
jg
inc
jle
sbb
div
loope
inc
mov
cli
jo
mov
shl
es
push
sbb
and
pop
xchg
testb
inc
and
jl
xor
movsl
inc
push
fcmovu
outsb
outsl
or
mov
mov
cli
ljmp
sub
popf
ret
inc
adc
popa
xchg
arpl
inc
pop
push
pop
loop
push
fisttps
call
in
mov
movsb
rorl
dec
test
cmpsl
xor
mov
rcll
icebp
sub
fs
in
std
and
dec
inc
bound
iret
or
mov
leave
movsb
jns
repz
std
stc
scas
cmc
mov
xchg
aas
out
stos
or
sbb
and
and
int
jo
xchg
icebp
xlat
inc
es
ljmp
cmpsb
sub
inc
lret
divb
xchg
ljmp
mov
add
jb
imul
lahf
cmp
lret
sub
repz
out
push
sarl
repz
and
sbb
std
lods
xlat
or
pop
push
push
sub
cmp
xchg
jg
inc
push
fldenv
test
and
push
insl
scas
inc
shl
xorb
daa
push
sbb
out
stos
sti
mov
adc
fadds
mov
mov
aaa
leave
add
xor
mov
and
lods
jmp
scas
test
jge
lret
addl
cmp
or
xor
push
into
leave
mov
mov
dec
jb
lcall
mov
and
push
movsl
adc
dec
fmuls
dec
pushf
je
pop
test
jge
fwait
cmp
cmp
data16
sub
mov
or
pop
shlb
push
mov
in
sahf
adc
cmpsb
push
fiaddl
pusha
mov
adc
loop
push
ljmp
outsl
stos
xor
mov
sub
add
cmp
shl
dec
mov
push
cli
mov
setg
outsb
ss
lds
ja
pop
call
sbb
enter
stc
out
nop
lea
test
fsubl
fs
pop
cmp
js
cmpsl
jns
push
sub
inc
inc
outsb
imul
cmpb
popa
push
pop
out
cltd
lods
jle
daa
fildl
xor
or
mov
lds
and
scas
xchg
pop
xor
test
xchg
and
sahf
sub
je
imul
dec
fcomi
pop
dec
sarl
mov
test
sbb
pusha
or
test
add
cli
in
mov
add
push
clc
jbe
cltd
popf
and
mov
rcrb
in
and
push
je
mov
dec
in
addr16
pop
das
push
mov
fwait
xor
lret
test
subb
shll
jb
dec
jns
or
test
arpl
mov
jnp
cmp
aas
xchg
aaa
mov
sub
push
enter
pop
popf
aaa
lods
insl
jb
push
sub
movsl
pop
cmp
outsl
and
aas
repz
mov
adc
pop
stos
pop
arpl
cmpsb
adc
xor
add
das
frstor
imul
push
add
mov
fisttpll
clc
mov
sub
into
jo
push
add
movsl
mov
push
pop
out
jno
je
lods
mov
jg
in
out
inc
test
std
imul
and
push
push
fs
cmp
shlb
pop
pop
or
sub
arpl
sbb
jno
push
dec
sbb
mov
out
les
adc
test
or
stos
loop
pop
out
jne
fsts
sbb
mov
pop
push
sti
js
repnz
adc
jae
shl
or
addr16
sub
push
stos
pusha
into
xchg
shll
shrb
cmpsl
mov
insl
or
xor
lcall
xor
cmp
aam
mov
cld
imul
pop
jp
mov
rolb
sbb
pop
push
inc
cmp
cmpl
xorb
rcll
lahf
fistpl
fmull
dec
push
pop
pop
pop
test
sub
lret
dec
jg
push
dec
dec
pushf
loop
cmp
mov
mov
loopne
fwait
push
pop
repz
sub
cmp
inc
mov
loop
orb
adc
sub
sbb
mov
sub
shlb
insl
gs
push
pop
sbb
test
dec
mov
jge
rol
iret
stos
subl
pop
mov
out
aas
shr
in
sub
xchg
stos
lahf
es
pop
mov
jne
fcomps
xor
dec
cmpsl
test
push
cltd
dec
mov
addr16
cltd
arpl
dec
in
popa
movd
dec
or
inc
test
cmp
jnp
jo
xchg
subb
mov
into
fists
mov
clc
pop
inc
sbb
jp
pop
mov
mov
xchg
cmp
dec
jnp
addl
mov
test
xchg
sbb
out
std
outsb
xor
in
xorl
dec
and
popl
outsb
test
fldln2
jae
sub
add
and
mov
push
mov
stos
xchg
std
lds
and
fisubrl
cli
jg
dec
cmp
out
out
es
jne
dec
mov
test
sbb
jbe
lods
pop
mov
pop
notl
dec
push
into
roll
inc
pop
call
std
je
js
stos
inc
mov
jle
pop
insl
repz
xchg
outsl
and
mov
sahf
dec
adc
out
pop
dec
push
jl
mov
fstps
jp
pop
enter
das
pop
repz
sbb
mov
sbb
pusha
xchg
pop
dec
sub
in
bnd
int
movsl
mov
pop
jns
jb
aas
aaa
loope
push
mov
xchg
xchg
dec
fucom
xchg
cmc
dec
mov
pop
xchg
aam
ret
sub
testl
mov
jno
jnp
in
pop
daa
aaa
cmp
or
mov
cltd
and
lcall
test
pop
inc
icebp
movsb
jp
jmp
lods
push
rcll
mov
jmp
jge
shll
ret
xchg
mov
mov
xchg
out
sub
mov
mov
push
dec
stos
testb
adc
sub
jp
push
pusha
jno
ss
cmp
nop
jle
das
jl
inc
jecxz
shr
lcall
gs
sarl
imul
hlt
inc
pop
das
or
mov
mov
sub
push
addl
pop
cmpsb
lcall
inc
sbb
scas
jnp
push
es
add
inc
and
sub
cmp
adc
outsb
inc
dec
lods
mov
push
out
stos
iret
adc
icebp
popa
lret
xor
roll
or
out
fimuls
xor
mov
outsb
jg
jnp
test
jmp
movsl
xchg
inc
jnp
mov
xchg
ss
lret
cs
pop
inc
insb
mov
mov
sahf
imul
sti
out
mov
jne
xchg
das
push
sub
mov
testl
xorb
cmp
lods
mov
xor
mov
push
cwtl
pop
add
push
cmp
ror
addr16
test
sti
pushf
shrl
outsl
popf
push
popa
adc
fwait
adc
pop
sahf
sbb
scas
dec
jle
push
call
out
imul
xlat
push
cmp
movsb
sbb
adc
lahf
outsb
fwait
cmp
out
jbe
xchg
cmp
je
push
lods
pop
insb
adc
mov
push
sub
mov
jge
out
push
mov
bound
xor
mov
sbb
jecxz
inc
mov
push
sbb
outsb
add
in
and
mov
gs
mov
sub
lea
mov
jno
dec
add
xor
outsb
cmp
clc
out
jmp
pop
dec
mov
dec
pop
outsl
test
xor
test
xchg
das
push
lock
or
mov
adc
jb
mov
pop
mov
dec
pop
inc
xchg
iret
ja
inc
and
ficomps
jp
pop
mov
mov
add
mov
pop
fnstenv
inc
mov
pop
or
inc
or
add
insb
dec
cmp
inc
mov
pop
in
pop
sub
imull
stc
sqrtps
andb
lret
es
and
dec
fisubl
mov
lea
les
es
incb
jb
pop
or
sbb
in
fisubrl
sbb
aam
xchg
push
std
fbstp
push
dec
mov
jbe
dec
lods
cmp
mov
mov
out
pop
imul
inc
test
pusha
push
cmpsb
jg
cwtl
push
outsl
movsl
rol
pusha
inc
dec
and
outsl
add
movsb
or
lock
mov
add
sub
adc
push
xchg
dec
jmp
mov
dec
out
push
pop
mov
pop
pop
xchg
roll
cmp
push
mov
insb
add
jne
add
sbb
lods
movb
jbe
movsl
inc
dec
test
push
adc
inc
call
je
cmp
fs
das
mov
fcoms
sbb
or
or
fbld
shll
mov
movsl
enter
cmp
aam
loop
fwait
or
cmpsb
add
mov
lcall
leave
sahf
adc
push
xor
ret
dec
cmp
lods
in
sub
push
pop
arpl
xorl
mov
push
jno
inc
loop
xchg
jno
lods
test
jbe
out
out
cmpsl
lea
lock
popa
mov
lahf
ficompl
les
sub
xchg
inc
das
in
out
mov
push
add
je
mov
xchg
shlb
movsb
nopl
or
es
xchg
or
lcall
js
push
dec
enter
insl
addr16
inc
pop
jp
adc
shrl
ja
dec
movsl
in
shrl
or
fsts
add
inc
lcall
inc
fcomip
inc
xlat
pop
faddl
mov
subl
cmc
adc
inc
add
adc
or
sbbl
arpl
pusha
push
fsubr
in
pop
pop
stos
cmpsl
lods
popf
lret
pop
out
mov
js
frstor
adc
arpl
popa
mov
sub
adc
mov
pop
clc
out
and
mov
pop
decb
adc
adc
xchg
or
mov
dec
cmp
push
mov
lcall
loopne
sub
xchg
clc
sbb
bound
sub
mov
mov
jle
push
xchg
loopne
sub
bound
mov
std
jecxz
fdiv
bound
sbb
adc
pop
repz
pop
xchg
out
dec
hlt
cs
pop
inc
xchg
inc
arpl
int3
loopne
test
add
jb
push
data16
dec
and
cltd
xor
ljmp
addr16
mov
pop
icebp
imul
adc
daa
mov
mov
push
adc
call
or
decb
sbb
dec
push
jae
lcall
bound
inc
rorl
add
dec
cmp
andl
dec
cli
mov
imul
xchg
test
leave
mov
dec
cmp
push
pop
arpl
mov
sahf
mov
xchg
or
lcall
mov
mov
cmp
jb
pop
fisubrs
std
dec
cmc
push
jp
imul
fsubrp
adc
pop
lods
or
jmp
xor
imul
sub
nop
xor
xor
cmc
dec
repz
sub
mov
popa
jne
test
jno
push
pop
sahf
int
push
das
mov
faddl
faddl
mov
mov
pop
leave
inc
cld
cmp
add
cmpsb
in
jmp
mov
inc
hlt
mov
mov
cmc
mov
lret
outsb
movsl
pusha
inc
scas
ret
ret
mov
pop
das
popf
jae
add
mov
cmp
mov
adc
lods
cltd
cmp
data16
and
xchg
or
cld
rcl
mov
adc
push
lret
cmp
repnz
movsb
insl
and
jge
dec
popaw
btc
and
mov
sub
dec
imul
cmp
shlb
cmp
dec
pop
aam
jecxz
pop
std
jb
push
ss
add
and
stos
jb
repz
push
jmp
fcoml
jp
lock
scas
add
fwait
div
ret
cli
jbe
push
pop
in
in
clc
mov
fistl
cltd
xor
mov
sub
sub
dec
fidivrs
add
icebp
mov
add
pop
stc
int3
xchg
sti
mov
mov
loopne
sbb
and
test
pop
call
outsb
pop
imul
adc
sbb
pop
cmc
push
out
and
dec
add
dec
sub
mov
sti
jmp
fcoms
cs
add
push
and
inc
test
mov
cwtl
mov
jb
orb
gs
mov
add
mov
stos
inc
lock
addl
outsl
jbe
dec
lret
inc
cmp
sub
cmpsb
std
cmp
sbbb
pop
jmp
int3
loop
fidivrs
pop
dec
cmp
xor
push
sahf
cmc
mov
loope
cmp
cmp
adc
push
mov
sub
popa
xor
in
loope
xlat
dec
mov
mov
push
mov
ja
das
das
mov
cmp
mov
call
rcrb
fcomps
xchg
push
jle
cs
shlb
loop
lahf
push
out
mov
adc
jno
mov
mov
lock
dec
xchg
inc
movsl
inc
std
mov
movsl
jns
movsb
cmpsb
movsl
and
mov
mov
jl
sbbl
ficompl
inc
cmpsb
cld
or
inc
pop
adc
xchg
mov
shlb
dec
mov
mov
mov
std
lods
xchg
imul
imul
sbb
es
jp
jnp
adc
sub
out
pop
cli
xchg
ljmp
mov
jae
or
ds
test
scas
xchg
and
out
push
shrb
jo
sub
pop
dec
mov
gs
fists
sar
inc
popa
mov
cmp
pop
cmc
xchg
mov
enter
cmp
sbb
in
pop
and
mov
stos
or
adc
xor
adc
mov
mov
into
dec
mov
mov
push
xchg
aaa
mov
loop
addb
xorb
cmp
leave
in
es
cmpsb
add
cs
sti
mov
or
push
int3
pop
xchg
add
xor
outsl
addr16
and
clc
cmp
sub
stc
jo,pn
push
xchg
lods
imul
mov
cmp
xchg
orps
pop
sbb
fistl
xchg
cmc
jno
push
pop
jno
add
sub
push
inc
pop
daa
mov
mov
sub
lahf
mov
fistps
dec
repz
and
jbe
mov
clc
addr16
lock
lds
push
jo
js
pop
aad
sti
add
pop
lods
fisubl
push
or
inc
sub
das
pop
insl
dec
push
popa
or
jmp
xchg
dec
rcll
fdivl
pusha
aas
cld
inc
das
pop
insb
sub
gs
test
jns
cs
rorb
rolb
sub
lea
pop
arpl
jmp
es
push
pop
dec
dec
lods
adc
popa
and
jp
adcl
sub
mov
push
mull
pop
mov
xchg
mov
push
data16
fsubs
repz
insl
xchg
fimuls
xor
mov
mov
aad
test
in
lods
pop
leave
mov
rcll
mov
mov
pop
mov
adc
mov
dec
and
mov
iret
inc
fdiv
fldenv
fisttpll
movsl
and
out
jmp
dec
or
cmp
addr16
adc
lods
int
aaa
mov
mov
pop
cs
jnp
ljmp
pop
jl
fistl
push
xchg
sub
shlb
lods
jo
imul
fwait
pushf
mov
dec
shrl
test
cld
aaa
fists
sub
push
fstps
inc
sub
mov
push
adc
jae
sub
sub
mov
ror
lods
pop
sbb
scas
std
test
and
jnp
push
pop
inc
enter
jl
xchg
popa
imul
cmp
popa
and
and
cwtl
inc
dec
dec
pop
dec
jb
sub
ret
cmp
push
cmp
orl
xor
and
inc
pop
in
in
jb
nop
mov
repnz
jbe
cmp
xchg
xchg
jp
and
xchg
pusha
sub
sbbb
or
aaa
and
mov
jb
push
push
je
jns
dec
dec
movsb
lock
adc
cmpsb
mov
cmp
ljmp
popf
jo
std
mov
mov
push
xlat
add
fbstp
push
sbb
ret
jecxz
mov
loop
push
pop
jnp
adc
or
jno
adc
out
arpl
jbe
push
out
nop
sub
jae
inc
push
jmp
orb
in
iret
push
push
add
sub
dec
int3
sbb
out
pop
mov
add
push
xchg
mov
insb
bound
lods
mov
dec
pusha
push
jb
pop
jge
or
imul
cmpsl
ljmp
testb
jne
das
lret
in
cmp
adc
push
xchg
xor
xacquire
js
sahf
les
fsubp
pop
sub
ds
pop
inc
mov
scas
rcrb
das
rolb
cmpsb
test
nop
movsb
pop
aas
incl
mov
ret
out
xchg
pop
outsl
xchg
cmp
inc
and
sub
movsl
mov
push
mull
test
mov
test
push
inc
pop
add
and
mov
jp
pop
mov
mul
push
adc
ds
xchg
dec
js
ljmp
pop
pop
leave
or
arpl
cmp
mov
inc
mov
push
mov
loope
dec
inc
sub
mov
int
dec
adc
and
xor
xor
push
push
xchg
scas
outsb
add
xchg
dec
jb
jns
je
add
mov
fadds
add
imul
push
int
mov
dec
ret
sub
in
scas
imul
fwait
daa
pop
insl
xchg
in
mov
in
jmp
add
popf
nop
cs
jb
outsl
arpl
loop
insb
out
mov
pop
mov
dec
mov
mov
aaa
sbb
push
movsb
dec
loope
and
xchg
pop
and
sub
push
inc
cmp
out
and
mov
insl
sub
jle
cli
lcall
aam
inc
cmp
sbb
sbb
or
pop
cmp
mov
sub
dec
adc
xorl
les
mov
and
in
rorl
lcall
add
fmuls
mov
sbb
cli
mov
and
sarl
sbb
fwait
gs
scas
and
jae
pop
imul
fstps
and
fwait
pusha
sub
into
andb
loop
xlat
rorb
mov
pop
outsb
cwtl
inc
rcll
jmp
call
xchg
xchg
sahf
mov
stos
pusha
and
inc
lcall
roll
sarb
mov
push
xor
addr16
popa
or
sub
push
arpl
dec
stc
xor
aas
sbb
out
xchg
into
sub
lods
mov
inc
sub
and
inc
jo
stos
sbb
inc
out
push
dec
jle
cmp
cmp
mov
sub
jne
or
and
repz
orb
shlb
ljmp
cwtl
push
lea
pop
adc
adc
movsl
push
cmpsl
cmp
pop
push
sub
adc
pop
ds
aad
and
jno
shlb
inc
mov
ss
adc
fs
sarb
mov
sub
stos
ds
sbb
mov
out
clc
mov
pushf
or
or
scas
mov
into
imulb
inc
cmp
and
and
jp
push
mov
ds
jno
jp
mov
sbb
dec
lods
dec
arpl
mov
mulb
loope
dec
fmuls
imul
sbb
loopne
pop
arpl
testb
push
push
loope
add
mov
xchg
jo
rolb
jnp
push
add
adc
dec
sub
pop
sbb
shll
icebp
add
lods
imul
xor
gs
inc
xor
dec
sbb
cmp
inc
xchg
fld
out
xlat
pop
insb
sbb
imul
dec
and
stos
sub
fcmovu
scas
in
mov
sub
push
sub
sub
mov
cwtl
inc
imul
mov
icebp
adc
xor
in
outsb
cwtl
lods
inc
adc
lcall
cmp
jbe
lock
add
adc
adc
cs
aad
cwtl
mov
pop
mov
stc
and
pop
ja
or
xlat
in
add
and
push
mov
pop
and
sub
mov
xchg
outsl
push
add
jg
jg
in
mov
add
and
mov
cmp
test
cmp
mov
dec
in
and
das
dec
in
test
dec
pop
int3
cmovp
cwtl
mov
cmpsl
and
jp
mov
push
lods
add
cmp
jge
pop
sbb
sbb
pushf
addr16
jmp
filds
daa
jp
sbbb
or
cmp
jmp
int
xor
insl
xlat
dec
or
pop
out
mov
fwait
je
in
mov
popa
mov
or
imulb
mov
mov
cmp
sbb
lret
push
add
adc
inc
popf
movsl
mov
andl
mov
hlt
pop
outsl
call
cmp
lret
daa
popf
cmc
xor
imul
cmp
push
adc
push
xor
notb
sub
mov
dec
pop
mov
pop
cltd
push
lret
ret
lds
adc
xchg
xchg
fidivs
xlat
jno
push
xchg
cmp
pop
and
jo
imul
xchg
or
dec
mov
add
lds
jnp
ss
xchg
rolb
fsubrl
pop
cs
mov
mov
pop
push
mov
xor
stos
sub
mov
mov
das
pop
push
xlat
jne
or
jnp
push
mov
sub
out
or
fldt
js
mov
dec
insl
sbb
in
js
xchg
jge
and
xor
pop
mov
insl
out
lods
cmpb
xchg
push
and
lods
shll
mov
xor
out
cmpsl
lcall
push
xor
cwtl
mov
inc
cmp
xor
lret
cmp
inc
sti
rcll
jecxz
xor
out
pop
sub
push
lock
sub
fsts
adc
add
add
into
enter
and
and
add
adc
mov
imul
fwait
dec
imul
and
ljmp
out
iret
jmp
movl
movsl
mov
mov
mov
sub
cwtl
mov
leave
sub
mov
lock
jecxz
dec
xchg
das
lret
mov
cs
sbb
test
mov
add
std
in
dec
cli
rcll
fstp
roll
sub
xor
jle
pop
sub
nop
shlb
add
dec
push
push
test
mov
es
mov
jae
mov
sbb
mov
dec
sub
mov
jle
ret
jle
fimull
les
mov
mov
xor
cli
and
sbb
xchg
dec
push
jnp
leave
inc
je
movsb
mov
repz
mov
xchg
call
cmp
and
or
mov
lods
xchg
mov
lods
push
das
or
inc
push
adc
mov
fildl
dec
inc
fmulp
or
out
cld
or
add
fmulp
or
add
lds
outsb
xlat
or
adc
cmpsb
xchg
or
jb
es
shl
stos
in
aam
jl
mov
imul
ljmp
pop
dec
dec
lods
lahf
jecxz
fsubrs
jle
pop
stos
movhps
add
jb
das
je
mov
sub
pusha
sub
or
stos
jno
mov
mov
xchg
pop
imul
imul
lods
and
push
ret
dec
daa
sub
ljmp
leave
cmp
notl
dec
sub
ret
gs
push
adcb
call
out
mov
scas
in
fidivrl
mov
dec
sbb
inc
push
push
jne
mov
rorb
outsl
inc
push
pop
mov
movsl
mov
and
loope
push
cmp
cmp
pushf
jno
mov
pop
mov
ja
mov
out
dec
cld
jne
push
xor
inc
movb
and
push
arpl
and
movsl
jp
mov
cwtl
sbb
pop
adc
bound
fstpl
aas
ja
rcr
and
mov
js
pop
inc
les
stc
sub
icebp
imul
sbb
lret
je
push
cwtl
scas
mov
pmaxsw
mov
add
dec
or
jp
lock
mov
fldl
push
dec
es
jne
daa
xchg
cmp
push
ret
push
mov
in
inc
aas
das
stc
ds
imulb
dec
mov
jge
push
sahf
aaa
aam
lcall
push
xor
shl
imul
mov
ja
mov
inc
push
pop
jnp
add
mov
cmp
push
fmull
mov
insl
int3
xchg
rcrl
sbb
push
push
incl
dec
cmp
jb
inc
test
dec
add
data16
jae
lcall
xchg
dec
and
xor
jno
and
inc
out
mov
in
jne
jmp
xchg
jo
mov
xchg
mov
gs
addl
popa
pop
push
call
and
jns
or
cmovns
nop
push
pushf
push
fwait
xor
mov
std
loope
gs
lock
stos
test
cmp
jmp
lret
jne
and
int
or
add
scas
sbbb
leave
lods
push
or
add
shll
inc
or
jge
push
cmpb
fs
and
cmp
lret
dec
mov
imul
inc
test
movsl
jns
pop
mov
imul
sbb
stos
inc
mov
scas
mov
cwtl
mov
xchg
cmp
dec
scas
or
ljmp
mov
sbb
xor
dec
icebp
push
stos
push
imul
pop
jb
lods
inc
test
push
fisttpll
push
cmpsb
popa
arpl
out
jg
dec
lods
dec
cmp
mov
push
fwait
or
mov
sub
stos
jg
xor
adc
js
test
inc
pop
and
imul
inc
dec
xchg
fdiv
inc
pop
mov
clc
xchg
lds
mov
push
and
mov
jno
pop
aam
daa
jno
scas
stos
movsl
dec
mov
adc
out
rorl
dec
fsubs
scas
dec
andl
aam
push
pop
je
jno
test
cmp
jmp
push
inc
stos
lcall
sbb
stos
adc
and
push
into
adc
std
and
repnz
flds
fildll
sub
popf
jns
push
mov
sbb
scas
xchg
xor
and
das
mov
jae
lods
test
sub
inc
inc
push
pushf
repnz
lds
jmp
ja
push
clc
iret
jle
inc
hlt
push
test
jno
pop
inc
jns
lret
xor
xchg
pop
call
xchg
lcall
jl
dec
arpl
loop
add
mov
mov
and
mov
jno
repz
out
out
mov
ds
fs
mov
arpl
inc
sub
push
push
sbb
xchg
mov
pop
or
mov
push
lahf
or
mov
mov
mov
ret
adc
test
and
xor
imul
cmp
mov
fwait
bound
add
daa
push
mov
lods
or
mov
lods
sarb
into
jb
sub
cmovno
jmp
adc
mov
addr16
xchg
mov
lds
orl
jnp
xchg
sbb
mov
rolb
outsl
jno
das
mov
add
sti
ret
xchg
stos
filds
pop
mov
jns
sti
mov
pop
lock
push
frstor
call
xlat
arpl
sub
add
sarl
jecxz
aaa
imul
pop
inc
andl
mov
fs
inc
test
mov
sbbl
shl
int3
jp
mov
pop
push
xchg
mov
aam
push
dec
and
stos
dec
out
sub
ss
pop
adc
mov
shr
imul
jecxz
sahf
jno
sub
inc
add
popf
fisubrs
fidivrs
pop
sub
inc
mov
mov
pushf
mov
inc
ret
cmp
xchg
xor
dec
push
cmpsb
mov
fisubl
jne
sub
cmp
popw
mov
or
mov
aam
scas
notl
ja
mov
jae
and
jle
xlat
and
pop
sbb
iret
leave
nop
int
or
dec
pop
stc
dec
pushf
mov
es
and
pop
add
add
xchg
jnp
stos
xor
das
cmp
out
push
sbb
pusha
jmp
loopne
lret
test
sub
push
inc
xchg
ficoms
adc
es
les
iret
pusha
enter
push
fsubs
lea
insb
dec
dec
stos
jnp
pushf
in
mov
cmp
pop
mov
mov
out
adc
mov
not
outsb
out
push
sbb
movsl
jle
movsl
data16
push
call
sub
movsl
add
lret
mov
inc
mov
cmp
or
into
xchg
lcall
cmc
mov
push
lds
mov
xchg
jle
or
jo
sub
sub
mov
or
sbb
xchg
lret
js
dec
adc
sbbb
push
stos
pop
mov
or
push
sbb
sub
inc
cmp
xor
and
sub
and
arpl
mov
pushf
imul
ja
inc
lods
add
cmp
dec
jl
je
sarb
popf
jb
mov
push
xchg
xchg
xchg
movl
sbb
std
pop
cmpsb
stc
add
ja
insb
inc
repnz
jne
push
or
lret
mov
sub
js
test
mov
xor
adc
rcll
jb
cmpl
shll
hlt
sub
jne
and
jnp
xor
daa
dec
ret
fisubl
ret
dec
bound
dec
mov
xchg
push
pop
jne
jnp
icebp
lods
pop
imul
push
inc
loope
jg
aad
out
pop
inc
fnstsw
mov
cmp
pop
or
movsb
add
lret
xor
cmp
xlat
dec
into
jp
xor
movsl
cltd
sub
sub
movsb
sbb
ja
or
arpl
test
jne
rolb
aaa
sbbl
or
mov
push
outsl
xchg
dec
test
mov
ja
cmp
xor
ja
ret
and
push
adc
and
sub
xor
insl
dec
jno
loope
fcmovnbe
pop
outsl
and
or
or
lods
fwait
imul
push
cmp
and
fnsave
mov
fildll
mov
shrb
push
dec
inc
cmpsb
mov
out
dec
test
inc
mov
sahf
rcl
push
pop
mov
lret
arpl
sub
sbb
push
sbb
jo
xchg
test
movsl
xlat
jl
popa
mov
push
cs
pop
repnz
cmp
js
mov
adc
add
pop
stos
mov
mov
adc
pop
call
jecxz
repz
push
cmp
mov
and
push
add
sub
mov
or
das
and
cs
gs
and
jbe
jbe
push
les
push
pop
je
icebp
cmp
adc
adc
mull
loope
push
push
push
jbe
jp
inc
test
sahf
and
add
fidivrs
xor
daa
mov
pop
jp
fidivs
je
in
inc
inc
cli
not
addr16
jb
inc
scas
aaa
and
or
lods
cmp
push
mov
insb
sbb
and
add
in
dec
sbb
push
and
mov
bound
mov
in
sub
sub
pop
push
pop
gs
das
out
ficomps
fisubrs
cmp
or
cmp
pop
push
lcall
jo
mov
in
ret
jo
inc
adc
and
push
es
dec
fstpt
stos
pusha
push
mov
jbe
or
dec
push
push
ret
add
es
shl
pop
mov
clc
adc
xchg
ljmp
jmp
cmp
cmc
test
push
mov
sub
sub
jbe
shl
push
inc
cmpl
mov
pop
hlt
mov
movsl
jp
pop
xchg
cs
mov
cmp
cwtl
mov
loopne
leave
mov
cmpsb
adc
or
popf
cmp
pop
dec
test
out
push
adc
int
popf
shlb
pop
mov
outsl
push
scas
cmp
pusha
push
dec
pop
mov
ror
fisttps
test
int3
xchg
mov
rolb
mov
sub
jg
mov
jne
pop
jge
cmc
jno
sbb
mov
fwait
or
push
popl
data16
sub
mov
ret
and
mov
sub
sub
lret
xor
cmp
push
mov
or
test
shrb
adcb
sbb
sub
fldt
inc
xchg
pop
inc
adc
jg
data16
pop
mov
dec
or
jp
pop
or
pop
pop
add
dec
or
test
adc
inc
sbb
push
dec
push
xor
sbb
fmull
cwtl
test
lods
ficoms
arpl
or
js
mov
jno
stos
jns
jge
xor
cli
mov
out
in
mov
or
xchg
popf
fwait
xor
or
xor
mov
and
mov
mov
xor
cmp
sbb
sahf
mov
jle
cmp
pusha
add
shl
jmp
aad
popa
arpl
and
cmpsl
icebp
pop
aaa
sub
aad
sbb
lods
mov
push
aad
shrb
cmc
scas
add
mov
and
dec
lock
mov
rcrb
popf
and
cld
mov
fneni(8087
mov
movsb
fdivl
cltd
ret
mov
aaa
imul
mov
add
sub
cmp
lock
xchg
jmp
repnz
divb
mov
adc
and
cmp
mov
or
filds
push
inc
shrl
out
add
pop
push
push
xor
mov
xchg
push
lods
mov
push
and
cwtl
push
sbb
in
dec
stos
jnp
jmp
push
xor
and
push
xchg
mov
mov
and
mov
hlt
inc
dec
dec
repnz
pusha
gs
ret
cmp
and
and
push
call
loop
popl
popa
pop
fadd
mov
pop
xchg
xchg
movsl
pop
hlt
in
pop
arpl
mov
repz
push
and
xchg
mov
pop
ret
nop
aas
leave
jg
mov
es
push
xor
jle
xchg
dec
pop
arpl
mov
stos
inc
mov
xchg
hlt
pop
aaa
jne
es
adc
outsb
into
ret
jecxz
jns
es
lret
int
pshufw
xchg
inc
pushf
mov
dec
mov
cmpl
mov
mov
pop
insb
sbb
les
aas
pop
outsl
or
dec
pop
roll
pop
popa
popa
sub
insl
cmp
lret
out
mov
sub
shl
int3
pusha
inc
mov
dec
mov
lock
cmp
inc
push
mov
push
sub
imul
scas
or
jb
adc
push
mov
dec
movsb
or
cmp
mov
outsl
jle
nop
insb
jnp
mov
mov
mov
aaa
div
push
and
scas
dec
out
inc
mov
push
xchg
cmp
or
cmpsl
jbe
imul
les
lahf
xchg
inc
decb
mov
in
jbe
push
loopne
sub
ret
sbb
mov
add
inc
sbb
sbb
dec
xchg
insb
lock
insl
pop
sbb
cmp
shl
scas
subb
and
pushf
pop
daa
jne
fcoms
lahf
jp
cmc
mov
mov
cmpsl
cmovs
mov
das
daa
mov
into
sbb
adc
xor
les
inc
jno
mov
test
dec
andb
imul
dec
imul
mov
das
cmp
int3
inc
filds
jbe
or
jl
call
mov
aaa
xlat
imul
or
stc
bound
mov
add
test
and
inc
jnp
push
adc
jmp
xchg
xor
add
fsubl
xchg
push
sub
cs
pop
shr
fisubrs
outsl
xor
ret
pop
call
das
push
xor
outsl
xorb
into
jns
data16
adc
jb
cwtl
mov
in
push
pusha
push
cmpsl
lock
ds
outsb
stos
arpl
js
push
push
addr16
jae
icebp
adc
mov
sub
out
xor
mov
mov
adc
jb
or
dec
roll
mov
push
and
add
hlt
pop
loopne
jo
bound
pop
out
out
daa
jne
subl
andl
adc
mov
push
js
les
jo
push
dec
fcmovnb
adc
xorps
stc
popf
jae
aad
iret
push
add
ja
fwait
dec
sbb
pop
iret
or
cmp
jmp
rorl
lahf
mov
and
add
fyl2xp1
mov
cmc
or
cli
sbb
cmp
push
mov
arpl
sub
mov
mov
push
or
sti
pop
push
jo
or
and
lock
in
or
popf
and
pop
rcll
sarb
push
sub
sub
aaa
dec
insl
lret
adc
dec
pop
pusha
jb
ret
mov
outsb
inc
rcrl
aad
cwtl
add
rorl
jns
cmpsb
rorl
fwait
sbb
inc
in
cs
rclb
imul
cs
mov
jb
dec
jg
fcoms
pusha
dec
out
xchg
fs
mov
push
or
or
stos
hlt
or
hlt
xchg
clc
sbb
pop
mov
mov
scas
dec
cmpsb
cmc
call
out
mov
and
and
outsl
jp
jecxz
mov
push
sub
in
call
aaa
and
sub
popa
sub
sbb
jb
test
sub
inc
das
dec
scas
sti
call
jg
rolb
and
fldt
xlat
jnp
notb
int3
jae
mov
cmp
mov
gs
movsl
and
es
jg
gs
shlb
ret
push
mov
aaa
jle
and
mov
test
and
ja
lcall
xchg
sbb
mov
or
xchg
cmc
and
hlt
lods
inc
sti
fstpt
scas
mov
outsl
out
pop
dec
idivb
lods
dec
inc
lock
dec
test
mov
mov
cmp
and
scas
adc
outsb
inc
mov
out
jnp
test
insb
jae
mov
shlb
scas
pop
fs
fdivp
fisubrs
adc
sub
loopne
sub
gs
cmp
push
add
and
iret
notl
movsb
or
cs
insb
xlat
stos
dec
mov
pop
add
movsb
mov
andb
mov
enter
pop
mov
pop
push
aas
or
lret
fstpl
repz
push
adc
push
mov
or
movsl
add
js
data16
out
cmp
mov
mov
dec
sub
lods
popf
pop
cltd
push
data16
imul
pop
mov
mov
dec
loopne
ficompl
pop
jae
dec
mov
scas
jecxz
imul
xlat
or
fldln2
push
mov
mov
nop
push
push
sbb
sahf
fwait
sub
imul
cmp
mov
pop
loop
pop
imul
fucom
test
dec
ret
stos
jb
push
sub
rorb
stos
aas
test
in
leave
sbb
add
lret
addl
out
gs
imul
bound
dec
cmp
ret
jmp
and
repz
mov
cs
push
xlat
popf
mov
or
repz
dec
dec
sbb
fnsetpm(287
jge
hlt
std
sbbl
xchg
leave
mov
inc
mov
fnstsw
out
orb
cmp
repz
mov
int
mov
loopne
jg
aad
pop
lds
addb
enter
out
sbb
loopne
test
cmpsl
push
mov
insb
mov
adc
popf
das
pop
xchg
and
mov
pop
addr16
inc
dec
dec
mov
or
mov
add
mov
jmp
ror
ror
lea
pop
sbb
insb
or
int3
test
sub
insl
sbb
je
sub
icebp
popf
rcrl
dec
xchg
push
pop
mov
test
dec
mov
adc
mov
fstl
fisubs
push
jbe
dec
or
mov
cmp
adc
add
xorb
xchg
xchg
adc
cmp
pop
rcl
mov
mov
ret
cwtl
sub
jg
sub
add
scas
push
ljmp
mov
ljmp
push
idivb
mov
xchg
insl
bound
fsubs
dec
dec
insb
jno
pop
cltd
xchg
aad
daa
mov
popl
pushl
test
mov
movsb
xor
mov
jecxz
pop
pusha
or
or
ja
adc
jmp
out
and
sub
lret
in
mov
adc
lea
jmp
ret
gs
std
imul
outsb
cmpsb
cmc
cld
or
inc
pop
mov
inc
popa
jbe
jnp
jbe
ss
sbb
sbb
mov
pop
enter
and
cmp
mov
pop
sbb
stos
subl
inc
mov
movsb
sbb
je
cli
mov
pop
insl
stos
sub
mov
mov
ret
sub
lods
mov
xor
sub
jmp
daa
test
add
cmp
xlat
push
push
jmp
stc
imul
das
cwtl
call
cs
sbb
ret
xchg
push
icebp
imul
stos
adc
out
nop
push
xchg
js
jne
xlat
cs
and
cmp
je
jmp
dec
sbb
mov
pop
inc
pusha
push
jecxz
jae
arpl
or
movl
mov
pmulhuw
adc
shlb
fdivs
shrl
mov
pop
pop
lods
mov
lcall
adc
jae
pop
popf
loopne
fmuls
mov
pop
sub
mov
in
ret
mov
mov
sbb
ret
ret
pushf
jo
dec
push
adc
mov
or
xchg
int3
cs
sbb
xor
bound
imul
jnp
ret
push
cmp
sbb
sti
pop
inc
cmp
cmp
or
adc
push
int
xchg
cmp
cmp
mov
cmp
push
fwait
push
xlat
fs
shl
adc
test
pop
pushf
lcall
xlat
repz
and
inc
xchg
sub
jl
jmp
movsb
ja
inc
stc
mov
push
fwait
pop
popa
push
test
lahf
mov
dec
dec
outsb
or
cmp
out
sahf
inc
add
outsl
mov
test
inc
fwait
cmc
xor
movsl
fcmovu
sti
add
in
push
add
cs
adc
divb
add
jp
scas
mov
xor
cmp
cmp
iret
mov
xchg
fimuls
pop
loope
sub
out
push
lods
xor
lcall
dec
pop
add
fs
jle
jno
jb
lods
mov
dec
fwait
negl
int
mov
jb
inc
pop
xchg
loope
es
test
jnp
popa
test
repz
mov
jmp
push
call
cmpsb
pusha
or
or
dec
data16
lock
add
loope
das
inc
xor
xlat
jno
pusha
mov
neg
jmp
mov
mov
mov
rorb
jmp
dec
insl
sub
pusha
jb
add
push
add
aaa
jmp
imul
xchg
jg
arpl
adc
push
jge
xchg
xor
lret
push
cmc
add
scas
xor
mov
icebp
dec
loope
mov
imul
shr
mov
cmpsl
ljmp
cmpsl
lods
push
xor
push
cmpsl
fs
pop
adc
pusha
ret
daa
test
shrl
frstor
outsl
xchg
pop
and
popa
dec
mov
mov
mov
jl
dec
cli
leave
icebp
xchg
rclb
ss
adc
ss
and
fstl
push
aas
leave
fimuls
pop
pop
or
cltd
out
xor
mov
mov
pusha
mov
xchg
enter
jmp
and
sbb
or
test
mov
je
aas
les
add
lahf
mov
imul
ret
fwait
mov
inc
fcoms
fimuls
dec
or
jg
dec
jg
data16
sub
dec
jecxz
push
ficomps
movsl
inc
outsl
push
pop
ja
js
lea
mov
or
mov
ret
or
pop
push
mov
nop
outsl
jns
push
adc
and
push
stos
or
xchg
cmp
sbb
jp
inc
sarb
cltd
sbb
cwtl
pushf
pop
insb
pop
ret
mov
mov
xlat
enter
pop
testb
stc
mov
gs
scas
paddq
test
imul
push
movsb
and
daa
jno
pop
cltd
sub
arpl
sub
rorl
cmp
addr16
insl
and
sub
loopne
xor
push
lcall
cmp
imul
lcall
xor
rorb
jbe
push
sub
mov
or
dec
push
sub
out
lds
xor
push
mov
inc
lea
cmp
xor
imul
loopne
cs
add
or
fists
push
sbb
loop
fnstenv
sub
pop
cld
lods
adc
cwtl
or
mov
mov
xor
pop
mov
push
shl
and
pop
aas
rcr
inc
mov
imul
or
popa
into
sbb
mov
negb
loope
pop
pusha
movsb
or
xchg
stos
je
leave
lcall
xchg
mov
push
jne
jo
cmc
je
ja
loop
xchg
pop
roll
into
sti
add
pop
aas
popf
out
dec
aad
xchg
frstor
fs
insb
lcall
and
jno
stos
fptan
cli
sbb
stos
cltd
cltd
inc
bound
xchg
jg
xchg
jno
push
or
or
jp
lods
jnp
rcr
mov
scas
aad
push
es
jb
roll
jmp
ljmp
pop
pop
test
mov
inc
pop
shrl
std
ja
mov
mov
movsb
jp
mov
aad
insl
shrl
pop
mov
stos
daa
imul
jae
ficoml
adc
data16
stos
out
push
inc
mov
ds
sub
sarb
outsl
ss
jne
mov
jbe
clc
push
pop
iret
pop
xchg
aad
popa
inc
mov
jnp
loop
shlb
and
cmpsb
mov
pop
movsb
adc
or
pop
cmc
dec
inc
jnp
or
add
addr16
xlat
pop
cmp
arpl
mov
cld
mov
das
fldl
add
mov
mov
adc
insl
fbstp
nop
jg
stos
xor
mov
xchg
jns
or
lret
sub
movsb
in
pop
adc
lcall
movsb
add
or
jle
mov
mov
xor
data16
mov
ss
std
pop
sbb
lret
pop
xchg
stos
dec
bound
jne
pusha
test
jnp
mov
inc
xchg
dec
pop
cmc
fsubrs
ljmp
dec
popf
stos
fisubrl
sub
xchg
mov
fidivrs
lods
push
sbb
xor
jno
movb
dec
insb
xchg
shll
test
dec
add
inc
mov
fstl
mov
ljmp
call
les
les
adc
xchg
ficompl
orb
cmpsl
adc
cmp
and
push
jns
ds
mov
add
loope
pop
adc
in
pop
add
dec
out
popa
cmp
jne
daa
fisubrs
sbb
stc
pop
loop
or
dec
mov
subl
pop
xor
sarl
and
call
cmp
pop
loope
es
dec
jg
adc
and
sub
in
xor
adc
daa
lcall
mov
inc
movsb
jg
and
outsl
or
loope
and
mov
cwtl
repz
add
dec
pop
xlat
inc
adc
cltd
push
jb
repz
arpl
mov
leave
sub
and
and
dec
xchg
add
add
imul
jns
pusha
cmovle
ret
mov
adc
test
in
jo
clc
inc
add
loopne
mov
mov
mov
mov
and
pop
pop
stos
mov
pop
pop
jnp
jecxz
xchg
imul
xchg
xor
add
and
xor
mov
push
adc
push
sub
lods
in
add
pusha
cmp
outsb
sbb
add
jg
test
inc
movsb
xchg
fidivl
jne
xchg
xorl
sub
out
je
addr16
jae
add
call
test
pop
pop
jg
pop
pop
std
into
push
ficomps
data16
inc
mov
stos
pop
push
out
dec
rcr
push
inc
stc
imul
xor
mov
jle
jg
scas
rclb
cmpsl
in
movsb
dec
fbld
scas
fmuls
jecxz
and
popa
daa
lds
mov
bound
pop
pushf
stc
jp
and
xchg
shrb
pop
movsb
pusha
aam
lods
mov
test
in
dec
jmp
loop
mov
dec
es
xor
nop
clc
fsts
pop
sti
aad
mov
adc
mov
pop
cmp
xlat
ret
mov
ja
fdivrl
notb
jg
mov
inc
or
pop
cmpsl
gs
xor
inc
clc
mov
and
mov
ds
add
mov
mov
jnp
mov
outsl
mov
fbld
daa
subl
pop
xor
or
mov
rcll
fsts
sahf
push
and
inc
fadds
bound
test
inc
sub
add
jl
arpl
sub
cmp
adc
sub
jo
sub
mov
das
dec
adc
pusha
jnp
leave
pop
jno
push
iret
fs
icebp
inc
jg
orl
sub
push
push
and
cmpsl
cmp
insl
rcrb
div
int
jg
fistl
aam
loop
dec
stos
push
addr16
push
repz
and
fwait
xlat
fwait
sub
leave
in
dec
sub
mov
cmpsb
and
test
xlat
mov
stos
mov
cmp
fistpll
sbbl
loope
cld
stos
jecxz
mov
mov
dec
or
out
pop
ds
pop
dec
adc
cmc
jmp
fisubl
arpl
psrlw
xor
mov
popf
fs
pusha
fidivl
xchg
inc
add
hlt
or
cltd
arpl
subl
mov
sbb
push
lods
repnz
faddp
aaa
pop
aad
mov
shr
inc
dec
mov
imul
push
push
imul
mov
mov
fwait
xchg
fsts
sub
pop
test
aas
xchg
inc
in
das
push
push
pop
dec
xchg
dec
pop
test
ret
cmp
sub
xchg
mov
xor
inc
ss
push
add
pop
cmpsb
add
jmp
pop
and
mov
xor
aam
pop
ret
push
fnsave
cs
dec
push
mov
dec
dec
cld
add
aas
iret
mov
cmp
mov
sbb
adc
pushf
wbinvd
inc
push
sub
adc
into
mov
ret
add
movsb
cs
mov
mov
pop
dec
adc
push
je
or
repnz
push
xchg
cmp
or
sub
movsl
decb
imul
in
js
stos
xchg
gs
pop
pusha
mov
mov
jmp
jecxz
divl
stc
push
mov
adcl
fisubl
arpl
les
pop
dec
push
incb
dec
sarl
hlt
jno
pop
mov
stos
in
xor
jmp
rcr
jmp
lock
test
or
mov
icebp
leave
shll
pop
nop
pop
dec
sub
inc
arpl
fstpl
aas
rcll
xor
and
sbb
test
mov
mov
in
cmp
test
popa
jns
add
cmp
adc
imul
add
mov
add
fcoms
sub
jle
daa
ja
dec
add
jno
lret
icebp
adc
sbbl
mov
cltd
sub
dec
in
cmp
jg
jle
dec
and
imul
aam
fwait
popa
xor
movsl
aaa
push
cmp
and
or
ja
cmpsl
pop
insl
sbb
mov
push
sbb
xor
lods
and
jmp
jle
pop
pop
and
dec
je
repz
cmpsl
jae
jg
jl
or
xlat
jmp
hlt
or
hlt
enter
and
test
sbb
xchg
push
loope
pop
daa
mov
dec
mov
xchg
sub
fcmovnbe
fldenv
inc
daa
sub
jl
ret
outsl
popf
fists
mov
inc
out
dec
loop
or
mov
dec
test
or
nop
call
jae
add
cwtl
mov
and
leave
jg
inc
prefetch
incb
xchg
add
aad
mov
xchg
arpl
lods
sub
jae
lods
pop
je
mov
sub
mov
push
mov
pop
jb
jnp
fisttpl
lret
inc
pop
mov
jg
sub
mov
xorb
loope
bound
mov
inc
ljmp
and
in
xchg
adc
sub
mov
push
sub
ds
dec
fsubl
cli
pop
aam
bound
jae
insl
dec
pop
or
daa
repnz
or
dec
int3
incl
or
das
sub
sub
shll
xchg
and
das
cmp
in
sbb
mov
xor
cmp
jb
sub
jge
add
push
adc
aam
dec
out
ja
cmc
pop
jmp
pushf
jb
dec
or
pop
andb
xor
adc
cld
aam
out
js
cmp
and
dec
push
xchg
jge
mov
arpl
jns
push
cli
cld
outsb
in
cli
popf
or
rcll
sti
stc
imul
xor
push
sub
fidivs
jno
push
adcl
gs
arpl
lods
mov
pop
int3
mov
xchg
fadd
adc
fistpll
aas
sahf
lret
mov
adc
xor
movsb
insl
sbb
inc
sahf
aam
in
dec
cmp
shll
cmpsb
sub
jmp
xor
mov
test
ja
push
lret
pop
jle
testb
mov
jbe
dec
imul
adc
jae
dec
adc
and
loope
pop
lock
hlt
fwait
and
pop
lods
dec
pop
xchg
cs
push
jno
stos
repz
mov
sub
call
pop
cmp
mov
cs
inc
push
pop
int3
lds
into
mov
and
jge
and
ret
scas
fidivrl
push
jl
xor
mov
jmp
dec
add
andb
cmp
or
shr
leave
mov
popa
ljmp
sbb
xor
cmp
ret
jno
and
orb
into
lods
sbb
sbb
jge
dec
adc
hlt
popa
adc
cwtl
lret
pushf
iret
or
or
mov
icebp
and
and
arpl
mov
xchg
je
cmp
je
adc
xor
scas
cmpsb
push
out
inc
xchg
sbb
xchg
out
sbb
add
mov
mov
rcll
fstl
xchg
lret
pusha
cmc
into
lock
jge
pop
xchg
ret
out
adc
mov
and
je
mov
imul
cmc
insl
push
add
dec
popa
inc
adc
arpl
insl
clc
xchg
stos
jb
pop
in
inc
jmp
ficoms
rorb
in
popa
xchg
mov
arpl
out
jns
xchg
jge
repnz
add
add
fcomps
pop
arpl
mov
cmp
mov
imul
push
mov
out
loop
ret
dec
sub
mov
sbb
jp
jp
scas
addl
pop
outsl
pop
imul
xchg
shr
adc
inc
xor
mov
mov
xchg
jno
mov
dec
inc
and
mov
subl
call
enter
loope
cmc
adc
push
leave
lods
orl
dec
imul
mov
insl
aaa
cltd
icebp
outsb
jb
ds
lods
sbb
jmp
pop
jne
in
push
ret
inc
push
test
or
stos
loop
stos
and
sub
cltd
mov
jnp
mov
mov
lods
lret
mov
mov
dec
std
dec
add
jnp
mov
mov
in
jo
or
into
test
rol
add
push
lcall
arpl
sbb
jnp
add
cli
add
int
lret
xchg
pusha
mov
cltd
dec
jnp
test
lret
sub
lret
lods
cmp
lds
sub
jp
mov
add
mov
das
jp
push
mov
popf
je
pop
lret
mov
sbb
nop
xchg
add
test
loopne
mulb
cwtl
hlt
ds
jns
movl
imul
mov
stos
cwtl
or
lock
std
cmp
pop
ret
movsl
mov
xchg
pop
subl
fwait
rcl
mov
cmpsb
cmpsl
ret
loopne
popf
int
fdiv
fbld
movsb
je
std
dec
clc
add
and
cli
std
mov
xor
xchg
clc
sbb
jnp
cmc
lret
mov
mov
insl
mov
xchg
insl
adc
lods
dec
mov
sub
jmp
lcall
je
push
push
jp
inc
movsb
or
cmpsl
or
mov
push
insl
in
faddl
test
scas
and
neg
inc
pop
sbb
stos
pop
lods
dec
js
dec
mov
add
pop
sbb
push
jb
and
adc
popa
pop
mov
shl
jmp
shr
inc
les
pop
imull
cmpsb
ja
sbb
mov
fcoml
mov
scas
jo
jp
out
mov
inc
cmp
or
sbb
int
cwtl
fsts
pusha
popa
sub
push
or
sub
shlb
xor
test
mov
sarl
mov
out
test
aad
xor
mov
dec
xchg
mov
pushf
stos
sbb
jle
inc
out
push
push
adc
xor
lds
lcall
sub
lds
loop
jb
mov
out
sti
pop
xor
dec
sbbl
mov
lahf
sub
inc
jb
pop
test
das
and
dec
mov
ret
ds
xchg
or
xchg
in
icebp
cmp
fstl
lock
sub
or
loopne
and
mov
and
lds
jp
inc
ret
inc
push
pop
push
dec
sbb
mov
add
sub
out
adc
loopne
sub
jge
fists
pop
sub
sbb
sbb
ret
jp,pt
xor
dec
lods
fdivr
cs
sub
imul
popa
mov
mov
xchg
inc
data16
dec
cmc
ror
or
leave
inc
lcall
xor
jno
clc
pushf
xor
fwait
pop
inc
jno
addb
fld
sbb
shrl
cltd
pusha
nop
rolb
mov
daa
xchg
pop
test
leave
and
subb
or
push
xchg
cmp
std
mov
pop
insl
jbe
fistl
mov
dec
popf
sbb
push
fiaddl
pusha
incb
sub
fldt
cli
adc
outsb
mov
out
out
fnstcw
pop
fcomi
mov
lea
push
dec
lret
mov
fstpl
cmc
cmc
cmc
loop
cmp
mov
notb
push
push
fidivs
sbb
addb
lds
mov
nop
inc
xchg
rclb
or
lcall
arpl
inc
xchg
sbb
aaa
xor
pop
inc
jb
nop
cmp
or
lods
xchg
push
adc
jg
jg
mov
push
adc
test
jb
push
mov
in
es
jg
fisttps
sbb
popa
jb
repz
lret
sbb
mov
push
lret
movsl
cltd
mov
pop
push
sub
outsl
movsb
lods
xchg
outsb
fstpt
cmp
mov
jae
fcmovne
mov
and
or
inc
cli
dec
ljmp
push
jmp
sbb
in
test
imul
cwtl
xchg
mov
xchg
ljmp
push
out
and
or
cmp
repnz
imul
add
mov
mov
rorb
aas
rcrb
dec
stos
pop
jge
xor
mov
push
add
inc
stos
sti
out
push
cltd
pop
mov
es
fcomps
pop
outsl
int
jle
scas
mov
cmc
std
mov
mov
xor
push
mov
jne
cmp
int
mov
pop
addr16
dec
loopne
pop
xor
sbb
imul
lret
fidivrs
xlat
or
add
in
add
or
cwtl
ja
pop
nop
loope
ja
scas
jbe
rcll
mov
shl
fiadds
sbb
xor
cmp
adc
cltd
scas
lcall
dec
xchg
fstps
mull
dec
imul
loopne
test
leave
pop
js
push
dec
inc
xor
arpl
arpl
pop
arpl
push
pop
push
jmp
jle
dec
xchg
scas
sbb
fwait
xchg
xor
jo
negl
call
pop
stos
iret
sub
insb
in
fdiv
push
icebp
dec
inc
enter
mov
pushl
movsb
mov
stos
inc
dec
jge
outsl
jno
repz
nop
cmp
adc
pop
add
fisttpll
mov
push
aaa
cmp
imul
es
popa
and
cmp
xor
call
icebp
enter
jle
fidivrl
ret
sub
sub
adcl
mov
fidivl
or
adc
or
jl
popf
inc
inc
mov
xchg
imul
lods
pop
int
adc
out
adc
jb
iret
mov
dec
ret
dec
aam
push
or
push
jb
fistl
pop
in
adc
mov
test
push
add
test
stos
jnp
pushf
fcmovnb
pop
cwtl
adcl
jo
jp
and
sbb
mull
call
nop
aam
mov
push
shlb
add
jp
and
inc
sub
fwait
xlat
dec
sub
stc
shrb
dec
dec
xchg
fdivrl
popa
push
jg
push
outsb
call
sbb
adc
inc
rcll
cmp
xchg
inc
and
pop
sbb
lea
lcall
and
mov
sbb
xor
and
pop
mov
dec
xchg
add
dec
jne
pusha
aaa
inc
mov
daa
inc
add
ds
push
in
xchg
ja
xor
xchg
andl
xlat
sub
cwtl
in
jge
jge
mov
fdivp
jl
or
mov
lret
icebp
adc
in
and
sbb
pusha
dec
sarb
std
mov
bound
scas
in
push
cmpsl
push
adc
inc
and
pop
loope
jo,pt
out
cld
mov
add
incb
sub
push
scas
xor
movsb
add
mov
cmpsl
dec
push
fcmovnb
push
rorl
mov
mov
sbb
lcall
pop
pop
les
insb
pop
jg
xchg
jo
icebp
dec
mov
fs
gs
cltd
inc
xchg
sub
dec
or
xor
pop
cmp
ljmp
add
cmp
jle
add
sbb
adc
in
mov
jp
mov
cwtl
pop
jo
mov
cmp
cmp
mov
cmp
scas
enter
push
fdivl
fsubl
nop
out
mov
cs
cs
cmp
movsl
sbb
test
mov
push
sahf
and
adc
dec
push
movsl
test
scas
mov
daa
out
add
pop
mov
and
jecxz
mov
imul
je,pt
push
mov
out
jns
mov
ljmp
xchg
inc
arpl
iret
inc
test
adc
fistpll
out
fisubrl
xchg
dec
inc
push
jg
fs
out
push
popa
stc
push
xchg
add
data16
inc
cmpsb
and
or
mov
nop
mov
loop
xor
ljmp
cmp
inc
popa
repnz
pusha
pop
call
stos
mov
jnp
mov
xchg
stos
pop
icebp
imul
jecxz
sbb
jmp
enter
lcall
dec
add
icebp
dec
sub
xlat
and
add
dec
loope
adc
pop
jns
fwait
aaa
insl
cwtl
sahf
outsl
jo
lcall
add
add
dec
mov
and
jmp
repz
inc
pop
sbb
xchg
mov
push
mov
or
fldcw
lea
addr16
inc
lret
dec
ret
lahf
mov
jecxz
cmp
imul
dec
push
push
push
roll
test
popf
mov
push
mov
pop
cs
imul
push
leave
loop
cli
cmpsb
sti
jmp
adc
filds
xchg
and
nop
xor
xchg
and
add
mov
push
dec
mov
inc
or
je
daa
xchg
xor
xchg
cmp
insl
inc
stos
push
sub
cmp
stc
add
and
ljmp
pop
outsl
mov
cld
adc
mov
popa
or
out
or
in
add
or
cltd
nop
negb
inc
xor
jle
mov
out
arpl
sbb
loop
sbb
or
push
cmp
dec
iret
decb
xor
divl
bound
pop
xor
repz
cmp
lock
sub
adc
pusha
mov
adc
in
insb
scas
rorl
add
jno
push
mov
loope
fidivl
dec
jle
mov
sbb
dec
jns
mov
cmp
out
cmpsb
rcr
testb
jae
mov
inc
lret
ret
mov
jae
add
inc
dec
cmp
mov
ret
jno
xor
jle
or
dec
xchg
cmp
sbb
or
push
add
and
pop
jno
mov
sahf
lret
gs
push
rep
sub
push
adc
lods
call
subb
push
and
xor
xchg
daa
filds
test
add
mov
in
jbe
pop
xor
lret
fstps
fsts
pop
lods
push
fbld
inc
dec
mov
bound
scas
out
mov
dec
mov
lahf
out
shll
cmpsb
jg
mov
add
xchg
adc
adc
and
mov
daa
lods
addr16
das
adc
or
pop
or
lcall
xlat
out
popa
or
mov
std
mov
aaa
mov
pop
add
and
rorb
ficompl
adc
daa
cltd
cwtl
adc
cltd
das
cld
mov
aaa
into
mov
fadd
ja
jle
jmp
scas
dec
imul
out
lahf
test
adc
scas
push
fs
jecxz
xchg
jo
inc
cmp
mov
push
push
daa
push
dec
sbb
jnp
scas
jno
lahf
fsub
dec
arpl
movsb
pop
aaa
divb
aas
test
jp
xor
mov
scas
mov
outsl
cmpsb
fwait
jne
dec
adc
jns
stc
lds
dec
jle
xor
aad
jl
xchg
sub
add
add
cmp
pop
xor
lods
push
mov
scas
pop
std
or
sbbl
jmp
aad
adc
lds
pop
mov
xchg
das
cs
fstpl
adc
mov
sbb
out
cli
jecxz
push
lret
imul
daa
push
jnp
cmc
and
inc
dec
adc
and
or
clc
orl
mov
rcrl
mov
mov
lock
shl
jbe
cmp
fisubl
jae
lods
xor
test
mov
rcll
dec
out
cmp
insl
push
cltd
cli
add
adc
test
mov
xor
cs
or
stos
mov
loopne
fmuls
daa
mov
jbe
pop
jg
push
mov
jbe
rcl
xchg
sbb
das
push
mov
daa
push
push
pop
lcall
cwtl
cmp
inc
mov
lea
gs
jnp
sbb
inc
and
stos
hlt
fldl
sbb
dec
pop
cmpsb
addr16
ja
ljmp
test
dec
jg
jle
jp
adcl
shrl
mov
mov
jg
int
pushf
jns
xchg
dec
shrb
lret
push
sub
sub
cmp
sub
jnp
sbb
push
test
stos
mov
addr16
jmp
add
mov
call
push
and
mov
daa
rcll
iret
leave
xor
cmp
cmc
aaa
mov
jns,pt
stos
aas
xchg
add
or
outsl
or
lods
fmull
xchg
arpl
pop
std
addr16
ljmp
ret
xlat
xchg
mov
jno
sub
xchg
stc
shll
leave
pop
cld
cmpsb
dec
cmp
pop
pop
dec
shl
xchg
mov
mov
inc
stos
je
push
mov
pop
xor
mov
out
xor
inc
popa
jle
jle
jae
mov
inc
push
xchg
dec
je
sahf
adc
xchg
test
push
inc
in
in
dec
stos
sahf
ret
clc
inc
mov
or
jle
adc
rcr
jl
enter
daa
pop
decl
icebp
dec
testb
dec
stc
pop
stos
or
xor
pop
popf
push
push
out
daa
mov
mov
dec
xor
mov
dec
popf
and
push
sbb
xchg
sbb
ret
pop
mov
inc
clc
sub
cwtl
in
loope
scas
lahf
jl
fwait
ss
sub
lcall
mov
add
insl
pop
jns
sti
adc
sbb
dec
out
mov
sub
fiadds
pop
cwtl
loope
mov
pop
mov
xlat
sbb
mov
clc
je
jle
lret
cmp
sub
add
cli
mov
pop
sub
xchg
adc
mov
xor
ljmp
jb
lods
test
shll
xchg
lret
repz
popa
mov
in
and
xor
ret
scas
leave
sbb
movsb
mov
or
test
sub
sbb
imul
fldl
jle
stos
and
movsb
jbe
xchg
fwait
shrl
dec
inc
test
jbe
das
cmpsb
lcall
daa
jbe
xchg
sub
std
cmp
aaa
ret
cmp
data16
sbb
dec
jno
lods
cwtl
jns
pusha
test
and
pop
mov
push
mov
cmp
faddl
sbb
xor
mov
outsb
mov
mov
fsub
testb
mov
adc
mov
mov
inc
out
push
mov
and
ja
aad
xor
pop
pop
lods
lret
pushf
jecxz
loop
jb
movsb
mov
imul
cmp
push
dec
inc
movsl
add
pop
fsub
popf
stos
lods
popa
pop
testb
push
fcomi
mov
dec
pusha
pop
pop
adc
ss
je
rcl
pusha
fdivp
push
dec
pop
jns
xchg
dec
inc
dec
adc
aas
mov
sbb
incb
sbb
clc
push
stos
cmpb
cmp
out
push
sbb
outsb
push
add
sbb
xchg
jmp
sub
out
ffreep
pop
pop
std
or
mov
popf
pushf
test
js
add
lret
and
repz
push
out
imul
clc
cltd
adc
mov
shll
js
xchg
add
int
push
cmp
mov
sub
push
xor
test
jns
push
and
dec
inc
lds
inc
add
arpl
inc
dec
add
aam
jns
xor
fisubs
jge
xchg
push
sahf
and
inc
or
and
jmp
mul
and
adc
xlat
cmp
pushf
nop
sbb
rol
jbe
jmp
das
jecxz
jecxz
pushw
and
jnp
xchg
js
xchg
ret
inc
divl
mov
add
jo,pt
ret
cmpsl
jns
ja
jno
aaa
daa
mov
fmull
into
out
insl
or
xchg
mov
aam
and
incl
mov
inc
xchg
dec
daa
push
jp
sub
pop
mov
shr
jns
fisttpl
inc
and
push
enter
movsb
loop
mov
out
pop
xor
inc
sbb
lods
imul
sbb
cs
adc
sub
mov
or
sbb
mov
push
add
dec
in
jmp
and
rcrb
gs
sub
out
sub
cmp
push
xchg
sbb
xchg
insb
int
cmp
shlb
dec
movsb
and
stos
pop
popf
icebp
imul
mov
inc
jb
jp
cs
clc
repnz
xchg
sub
fs
cwtl
ficomps
push
cwtl
dec
dec
ss
mov
hlt
shlb
sbb
xorb
cmp
out
mov
jno
push
and
inc
inc
ja
xchg
push
out
rcrb
int3
or
cmp
jle
and
in
or
sub
mov
jp
bound
adc
or
xor
mov
inc
rcrl
adc
in
cmc
es
dec
shl
and
lods
in
lret
lahf
jp
movsl
scas
inc
pop
enter
adc
test
mov
insb
pop
cmpl
test
shr
add
rcrl
mov
clc
shl
dec
dec
sti
sahf
movsb
cmp
dec
sahf
dec
filds
ja
sub
and
add
daa
pop
ljmp
dec
jnp
mov
jne
add
sub
flds
ljmp
mov
loope
cvttps2pi
ficompl
idiv
jge
jge
pop
shrl
fcompl
in
or
arpl
mov
and
pop
jmp
ret
xor
shl
aaa
addr16
ja
imul
arpl
sub
dec
jo
push
scas
mov
and
in
in
sbb
mov
add
scas
push
adcb
xchg
fistps
or
dec
test
pop
push
ds
add
popa
sbb
icebp
pop
push
sub
push
push
jo
cmp
cli
sub
cmp
movsl
repnz
sub
cmp
mov
cmp
out
roll
shlw
aam
lcall
addr16
xchg
mov
xchg
and
aaa
sbbb
jae
mov
xchg
loope
pop
or
inc
adc
ret
popf
jae
clc
xlat
jbe
jg
pop
outsl
dec
mov
jmp
ja
xor
lret
pusha
fildl
aas
add
mov
xor
cmp
decb
clc
xor
ret
adc
inc
das
pop
mov
das
shrb
imul
xor
push
mov
lcall
outsb
shrl
in
dec
jo
xlat
fistl
fildl
dec
mov
and
push
scas
inc
fcoml
inc
sti
adc
push
call
das
add
xchg
adc
ds
inc
mov
lods
fsubs
pop
and
out
inc
gs
push
and
sbb
sub
mov
testb
xor
push
push
loope
mov
je
fwait
in
out
mov
iret
push
sbb
repnz
push
rorl
arpl
sub
mov
movsl
jnp
arpl
jp
adc
lret
cmp
fsubp
sub
sahf
pop
xlat
xchg
xor
bound
jge
std
dec
scas
cmp
push
push
test
shl
outsl
push
cwtl
ljmp
into
bound
pop
adc
ja
in
gs
scas
divl
jo
jle
jmp
and
loope
test
xchg
or
add
testb
sub
movsl
out
mov
shr
loop
add
scas
and
mov
xor
pop
xor
rclb
out
pop
inc
arpl
and
xor
ja
aas
xor
and
mov
das
cmc
cli
pop
das
clc
loop
mov
jae
aam
xor
push
xor
mov
or
sti
pop
mov
dec
lret
repnz
pop
out
inc
test
dec
pop
loope
fnstcw
mov
fcmovb
fsubp
xor
xor
inc
inc
pop
into
mov
dec
ret
stos
stos
mov
mov
jle
pop
push
push
mov
sti
xchg
and
push
push
outsb
adc
mov
cs
lretw
inc
orb
mov
push
sub
pop
sbb
lds
daa
push
push
loop
pushf
jns
add
es
and
inc
fildl
ret
int3
loopne
and
aaa
pop
sarl
jnp
inc
xor
inc
es
les
mov
adc
int
xor
cmp
ror
or
out
movsl
fisubl
subl
mov
out
shll
sbb
dec
push
and
rcrb
and
insb
pop
xor
das
fs
pop
jno
scas
bound
fnsave
xchg
rolb
arpl
vandps
and
and
inc
fsubrl
sub
repnz
das
call
push
fwait
pop
sbb
call
mov
mov
fidivrs
push
pop
movsl
mov
arpl
outsl
jle
xor
jecxz
mov
mov
test
out
add
inc
insl
or
nop
pop
xchg
jg
add
mov
gs
jo
incb
dec
arpl
xchg
push
and
cmp
insl
mov
mov
dec
push
scas
inc
imul
push
mov
dec
mov
loop
outsb
movsb
sub
lcall
mov
ret
push
and
lds
dec
adc
imul
pop
dec
loop
inc
sub
add
mov
inc
clc
subb
call
mov
pop
bound
iret
stos
stos
mov
jg
imul
adc
inc
icebp
add
or
jp
add
push
jo
mov
idivb
jno
test
mov
sub
test
imul
je
xor
jmp
pop
inc
jle
and
pop
adc
push
pop
xchg
xor
add
pusha
shlb
jnp
imul
ja
mov
shll
jle
pop
lret
out
dec
shll
mov
stos
das
std
pcmpeqw
inc
add
jmp
enter
and
movsl
pop
push
jl
dec
imul
or
cltd
and
inc
add
daa
pop
sub
or
lods
push
in
mov
sub
dec
in
push
or
adcb
add
cmp
or
cmpsb
bound
push
les
dec
mov
push
sbb
dec
and
pop
pop
pop
sti
jns
fld
mov
mov
arpl
pushl
mov
dec
mov
int3
popf
cmpsb
xor
cli
cmpsb
rcrl
repz
sub
add
mov
pop
insl
fnstenv
pop
sbb
mov
adc
add
iret
test
xchg
imul
jp
lahf
cld
xlat
les
aas
cmp
sbb
pop
loope
mov
xor
cmp
sbb
mov
pusha
mov
out
cmp
lret
sub
roll
mov
sbb
stos
or
sbb
mov
pusha
test
mov
aaa
in
cmp
jmp
jmp
pop
push
rorl
outsb
in
adc
jo
es
cli
or
pop
std
mov
cltd
inc
sbb
sahf
sbb
outsb
and
gs
xor
xor
popf
dec
and
dec
push
xchg
repnz
add
cmp
ja
repnz
in
inc
mov
mov
push
pop
js
mov
push
fisttpll
xchg
mov
or
jecxz
stos
sub
cwtl
rcrl
mov
xor
pop
dec
sbb
push
sub
lcall
sbb
bound
call
adc
mov
push
in
cmpsb
cmp
xor
dec
andb
jl
push
mov
cmp
in
cmp
pop
push
outsb
cmpsb
jge
inc
xchg
mov
popa
popf
enter
mov
cs
add
or
inc
or
fs
ret
xchg
outsb
or
and
cs
pop
jne
inc
push
mov
call
lods
inc
js
cltd
dec
mov
test
mov
jmp
sbb
jle
jbe
fucomi
sub
ja
push
push
xor
mov
bound
push
sbb
in
jl
subl
shl
push
jg
xchg
mov
lret
sbb
mov
sub
stc
icebp
or
js
insl
sub
inc
daa
addr16
pop
mov
sbb
mov
jne
pushf
addb
jle
xchg
leave
and
mov
and
mov
xorps
jmp
mov
push
out
shrl
push
lea
push
addr16
scas
mov
lock
insl
fidivrs
ror
loop
pop
movsl
stos
aas
or
sbb
mov
sub
cmp
push
xchg
push
sub
loopne
lahf
push
jae
cwtl
push
jb
cs
adc
inc
loop
jle
and
sub
mov
push
out
and
add
jl
outsb
aam
test
xorl
fstpt
sahf
stos
fdivrl
push
das
jecxz
cwtl
cmp
mulb
dec
xchg
outsb
pop
bsf
jne
jae
dec
movsl
pushl
xor
adc
add
iret
sbb
daa
movsl
xlat
adc
xchg
andl
stos
mov
gs
shrl
pushf
xor
gs
loope
pop
enter
idivl
cmpsl
mov
mov
inc
hlt
insb
or
pop
sbb
push
imul
rclb
insl
repz
sub
and
cli
add
jns
push
stos
pop
repz
les
mov
test
mov
add
sub
stos
cmc
mov
dec
inc
cwtl
pop
cld
jno
cwtl
lret
mov
bound
mov
jae
pusha
xor
push
jae
addr16
imul
sbb
adc
push
ret
or
mov
repnz
lahf
es
addb
outsl
cmp
fnsave
fisubl
cmp
dec
inc
lret
jbe
mov
insl
ret
pop
testb
or
lods
or
lret
cmp
gs
and
outsb
and
dec
lcall
pop
loop
push
and
adc
fucom
jb
cs
js
cmc
stc
sub
sub
sbbl
call
jno
inc
cmp
cmpsl
sbb
adc
sbb
xchg
decb
mov
inc
and
mov
add
push
inc
mov
dec
negb
jb
dec
inc
cmp
daa
imul
mov
aas
sti
push
mov
aam
push
dec
xor
aas
jmp
pusha
repnz
inc
fcmovne
xchg
test
jne
add
into
int
lret
push
ljmp
orb
mov
arpl
movsb
in
imul
xlat
jbe
xor
jb
xchg
inc
adc
testl
sub
int3
xchg
cmpsb
mov
pusha
mov
std
xorb
pushf
jle
mov
xchg
hlt
push
ljmp
mov
fcom
hlt
xchg
inc
xor
jnp
xor
sbb
mov
mov
or
and
or
sarl
mov
pop
cmp
fidivs
shl
adc
mov
push
pop
jmp
pop
xor
lahf
pop
dec
mov
mov
xor
xor
loope
jl
pop
and
sbb
lahf
xchg
ret
enter
sbb
or
push
sub
add
mov
sbb
jae
sahf
xchg
xchg
popf
push
pop
fld
and
mov
out
int3
stc
ret
dec
subl
loope
push
cltd
loope
shrb
xlat
mov
int
or
outsb
adc
pop
dec
xchg
or
fsubrs
call
cs
xorb
and
cmp
push
xchg
ficoml
hlt
jbe
lret
jb
cmp
push
les
rolb
dec
outsl
fwait
shrl
xchg
xchg
fildll
dec
mov
dec
je
add
cmpsb
addr16
or
jae
pop
test
dec
cmovns
ljmp
jmp
negl
xor
popf
ret
mov
jne
shl
divb
or
sub
das
pop
das
sbb
mov
mov
loop
sub
cld
notl
adc
push
test
fbstp
negb
ret
xor
lea
xchg
mov
xorl
mov
push
arpl
adc
out
pop
jae
mov
inc
jae
jl
push
les
movsb
and
in
and
adc
aas
mov
lock
xchg
cmp
in
mov
scas
mov
and
or
push
or
shl
pop
jbe
pop
sbb
sahf
cmc
push
nop
call
pushf
or
pop
jns
addr16
mov
xchg
mov
jo
cmp
mov
add
cmp
or
mov
jmp
fdivs
adc
jmp
aaa
ja
es
outsl
das
fstl
pop
sub
lods
sub
jae
aaa
or
pop
shrl
xchg
pop
xchg
xlat
dec
mov
xchg
popa
pop
mov
cmp
repz
cmp
or
in
icebp
mov
sahf
jnp
lea
add
and
jmp
out
mov
movsl
pop
dec
push
add
mov
and
out
xor
xor
call
ret
inc
inc
xchg
mov
shlb
push
mov
jmp
xchg
out
mov
push
leave
jmp
lods
mov
clc
inc
pop
sti
int3
dec
sbb
cwtl
ja
mov
loopne
mov
and
xchg
jp
xlat
sbb
mov
in
xchg
in
rolb
pop
in
shl
pop
cld
insb
cld
and
inc
call
in
shlb
push
ss
daa
das
in
dec
add
mov
mov
pop
jb
add
mov
mov
rcrl
popf
out
sarl
mov
je
int3
int
arpl
stos
fwait
xchg
adc
fistpl
mov
xchg
shll
and
inc
pop
mov
sub
pop
dec
mov
push
sbb
pop
pop
sub
xchg
and
mov
cmp
sbbb
popf
ljmp
xor
pop
add
pushf
ja
adc
fs
icebp
mov
and
adc
jae
mov
gs
sbb
ljmp
cs
jae
arpl
pop
pop
imul
add
sub
mov
loop
inc
xchg
gs
addr16
push
inc
hlt
lret
sub
push
in
pop
sbb
lret
imul
addr16
mov
dec
loop
loopne
loopne
in
arpl
cmp
in
stos
sub
outsb
sahf
and
sub
fucomip
adc
push
scas
stos
ja
or
stc
and
sbb
in
shlb
dec
dec
jno
inc
out
add
inc
cmp
jns
push
dec
mov
and
test
push
jp
jae
and
dec
sub
call
mov
add
jmp
add
out
fnstsw
push
mov
push
cmpsb
cmpsl
xlat
in
aaa
or
sub
orb
iret
sbb
int
jge
insl
xchg
in
push
pop
pop
mov
es
adc
cmp
xor
mov
push
mov
mov
sbb
mov
jge
test
lea
push
inc
cmp
xor
and
dec
iret
and
jmp
xchg
jp
pop
stos
and
mov
push
jbe
push
adc
adc
cmp
adc
xchg
shlb
mov
and
mov
cmp
dec
inc
lea
das
and
xlat
xor
fcoms
sub
cld
std
sub
push
add
jb
pop
and
mov
inc
xlat
xor
sub
inc
pushf
cmp
cmp
ja
xchg
insl
icebp
sbb
jp
fs
loope
adc
add
arpl
test
aaa
pop
dec
das
in
and
push
aas
iret
pop
hlt
add
inc
loopne
or
subl
mov
mov
push
dec
ficoms
jmp
cmp
lcall
fwait
or
and
push
inc
ror
push
push
and
insb
ss
push
dec
rolb
xor
mov
cld
decb
ds
push
dec
je
lret
xor
sahf
dec
fmull
pop
or
xor
push
mov
ja
push
xor
insl
out
push
dec
pop
mov
fistps
push
rorb
loope
out
insb
pusha
sar
mov
push
int3
data16
rcrb
out
pop
fmuls
push
push
mov
adcb
je
les
xor
fwait
ljmp
dec
mull
repz
pop
dec
pop
fwait
jbe
xchg
shrb
lods
and
sub
ror
inc
dec
shl
jnp
iret
testl
add
xor
dec
das
repz
adc
and
mov
lods
inc
pop
jne
adc
jae
add
or
xlat
xor
movsb
pusha
call
orb
inc
jns
sbb
ss
jp
adc
jne
push
sub
xchg
mov
push
xor
pop
fadd
xchg
dec
dec
or
fs
xchg
xlat
fwait
sbb
mov
lahf
sbb
pusha
push
mov
in
inc
ror
std
pop
lcall
fdivs
xchg
and
cmp
and
dec
into
negb
push
into
movsb
out
pop
adc
negb
aad
or
jbe
popf
add
jge
xchg
cltd
jecxz
cld
inc
out
push
sub
test
maskmovq
adc
mov
cmp
fs
dec
mov
sub
stos
xchg
push
fadds
xchg
jae
cwtl
int
arpl
je
jp
int
mov
gs
imul
gs
and
fiaddl
dec
loopew
je
data16
insb
sub
adc
or
adc
popf
insl
test
lahf
xchg
rclb
nop
or
insb
lea
rorl
fidivl
sub
out
sub
nop
in
push
mov
pop
jbe
add
dec
adc
and
mov
pop
insb
xchg
ret
inc
or
push
jmp
in
outsl
inc
xor
add
sbb
cmpb
fsub
aaa
data16
fwait
jo
and
jbe
cltd
das
es
in
dec
mov
jo
adc
mov
pop
inc
ljmp
pop
jo
mov
jp
add
xor
push
jne
adc
sbb
and
dec
xchg
repnz
xor
out
dec
dec
loope
cmp
sbb
xor
addr16
insb
in
add
adc
enter
push
fldcw
xor
mov
pop
push
clc
outsl
sbb
inc
into
jo
dec
inc
sbb
sub
pop
bound
dec
mov
orl
sbb
cli
dec
and
out
and
testb
loop
int3
jb
cmp
push
push
out
jge
lahf
pop
mov
shlb
mov
xlat
jns
es
cmpb
sahf
hlt
les
shlb
int
js
pop
gs
xchg
jb
adc
scas
pusha
add
xor
sbb
pusha
arpl
pop
lcall
mov
dec
and
decl
dec
or
mulb
sbbb
cmp
mov
mov
cmp
mov
push
sbb
in
fisubrs
ret
pop
int
dec
pop
lods
sbb
andl
pop
movsl
fcom
out
jge
add
stc
push
out
cs
xorl
or
outsl
dec
xchg
out
adc
lods
xor
in
lahf
add
iret
or
outsb
mov
popf
insl
das
loope
stc
into
push
ljmp
xlat
mov
add
jge
ret
mov
push
xlat
sbb
rcl
jnp
lea
mov
mov
aaa
ror
cltd
in
cmc
fs
aaa
int
xchg
stc
mov
jns
adcb
popa
cwtl
stos
stos
and
mov
push
popf
mov
adc
pop
pop
in
pop
les
sbbl
mov
mov
hlt
jmp
or
mov
pop
nop
aam
and
pushf
inc
mov
std
aas
leave
fiaddl
cmpl
add
in
push
lcall
mov
mov
popa
js
push
cltd
jge
sbbb
std
mov
lcall
test
mov
sub
jp
mov
push
pusha
cmp
movsl
js
aad
test
fdivrl
cli
icebp
adc
cwtl
cmp
mov
dec
std
mov
adc
push
pop
js
pop
mov
call
mov
lods
cmp
mov
and
mov
sub
repnz
mov
mov
jg
mov
xor
fst
mov
leave
xor
fiadds
mov
cmp
push
cmpsl
and
xchg
ret
call
mov
test
cmp
adc
push
jo
adc
sbb
dec
lock
test
mov
mov
xor
pop
rolb
and
sub
in
cld
xchg
jo
inc
jae
std
fsubrs
push
xor
mov
fistl
xor
xlat
aas
fs
add
adc
bound
test
movsb
fadds
or
adc
xor
mov
fnstenv
pop
lcall
pop
enter
pop
and
fwait
mov
fnstsw
pop
rcll
shl
les
jb
lods
test
iret
sub
in
fadd
loopne
cmc
int3
push
aad
cmpsb
mov
jns
ret
xchg
pop
vmovaps
fisttpl
nop
sarb
outsb
xchg
shll
mov
mov
mov
mov
xchg
and
lea
cwtl
mov
mov
scas
and
clc
mov
mov
imull
mov
fistl
flds
mov
mov
out
sahf
xchg
jecxz
out
lahf
cmp
loop
mov
popf
insb
cmpsb
hlt
xchg
les
clc
adc
rorb
pop
xchg
dec
xor
push
push
mov
xlat
cwtl
add
dec
push
mov
dec
lods
xchg
push
jae
popf
stc
mov
xchg
lcall
aad
test
rcll
divl
fdiv
cld
mov
ret
test
lods
lret
push
add
xlat
xchg
test
xchg
icebp
or
jl
imul
mov
jbe
mov
cmp
xchg
mov
fwait
cmp
sbb
popf
xor
in
imul
jg
push
aas
loopne
dec
dec
and
mov
mov
bound
rcll
bnd
fnstcw
outsb
add
je
into
mov
xor
pop
rcll
movsb
cmp
test
xor
sbb
repnz
add
cmp
hlt
mov
test
xor
aam
mov
adc
cmp
xlat
mov
bound
repz
imul
push
shr
xchg
push
mov
cmp
pop
mov
add
mov
push
rcll
jp
arpl
inc
jg
xchg
loope,pt
lahf
push
shrb
mov
pushl
lahf
xchg
lods
pushf
leave
mov
sbb
xlat
mov
xchg
fdivs
nop
mov
adc
call
jp
mov
jg
orl
adc
mov
add
test
clc
sbb
inc
mov
movsb
jns
insl
int
mov
out
addl
imul
dec
sbb
test
out
clc
mov
jns
imul
adcl
mov
cmp
shll
mov
leave
sbb
sbb
ror
clc
xchg
mov
shlb
jle
lods
adc
dec
jp
orb
cmp
jecxz
shr
fistpl
aam
aam
jne
cmp
je
pushf
shrb
mov
mov
popf
mov
aad
stc
mov
fisubrs
push
mov
jge
push
dec
xchg
push
xchg
shll
mov
rorb
in
out
or
xor
sbb
pushf
mov
std
push
xchg
cmpl
push
pop
pop
dec
cmp
lock
fidivl
ds
adc
xchg
enter
lock
shrl
lret
lret
jp
xor
xor
imul
test
shrb
stos
ljmp
and
movsb
mov
lock
das
aaa
pop
xorb
add
lock
pusha
mov
inc
movsbl
scas
call
arpl
in
aas
in
mov
dec
loope
pusha
or
out
or
push
pusha
mov
inc
mov
pushf
mov
fsubs
pop
push
addl
stos
es
jg
popa
gs
cli
repnz
add
std
jo
in
pop
lret
dec
pushf
sarl
fcompl
sti
lret
push
imul
jg
mov
mov
add
test
mov
loopne
cmp
xchg
pop
pop
cmp
pop
mov
hlt
cmp
push
add
mov
aaa
xchg
jb
les
mov
adc
adc
xchg
xchg
jno,pt
and
test
cmp
and
lock
xor
jnp
or
aad
or
repz
stos
in
test
or
mov
adc
pushf
mov
mov
inc
out
sbb
mov
out
jle
movsb
mov
lea
mov
mov
fcmovne
shll
or
fld
xchg
test
filds
andb
pop
jns
and
ret
shl
aam
mov
shl
dec
pushl
aam
cmc
jbe
jecxz
pop
es
stos
repnz
test
mov
adc
lret
lock
repnz
test
adc
adc
mov
sti
out
cmc
test
jo
mov
mov
fsubrs
sarl
jae
mov
cmc
roll
les
mov
xlat
in
push
xchg
jle
sahf
pop
repnz
enter
loop
ret
mov
enter
mov
in
idivl
mov
mov
cmp
stc
lods
xchg
mov
lcall
fists
in
mov
mov
xchg
movsb
or
pop
mov
outsl
add
aaa
shll
jmp
push
xchg
xor
sub
jno
mov
mov
aam
lret
fmul
jle
test
leave
mov
inc
and
mov
roll
xchg
sbb
mov
or
cmp
push
cwtl
clc
or
push
dec
in
pop
mov
insl
loope
mov
aad
cmpsb
mov
jb
pushf
push
pop
add
jno
movsb
enter
test
negl
test
pop
ss
test
out
call
andl
loop
fchs
xchg
subb
rol
jl
hlt
cmc
inc
test
aam
scas
cld
jmp
movsl
jecxz
mov
and
pushf
jl
and
adc
mov
roll
popf
cmc
js
out
les
pushf
shrb
jg
out
sahf
lcall
cmp
xor
jmp
lock
mov
hlt
pop
mov
in
notl
jnp
push
fstpl
icebp
mov
decb
movsb
mov
stc
adc
lods
test
movsb
cwtl
aam
inc
lock
pop
out
pushf
orl
fistpl
mov
lcall
jp
insl
int3
pushf
xchg
mov
loopne
adc
mov
ret
adc
out
lock
adc
movl
and
data16
stc
mov
loop
jne
or
xchg
hlt
lock
cld
xchg
cli
inc
popa
sbb
fwait
pusha
sahf
icebp
mov
mov
fwait
sahf
test
mov
mov
rolb
clc
mov
add
fst
inc
and
inc
and
fildll
std
add
and
jbe
mov
xchg
xchg
mov
mov
clc
mov
add
shll
adc
aas
push
adc
push
jns
test
dec
lret
push
mov
outsb
rcll
out
std
and
mov
ret
sbb
mov
mov
and
jge
loop
inc
outsl
test
nop
jmp
mov
ficoml
add
sub
mov
fcomps
and
icebp
fmull
bound
in
mov
push
hlt
inc
lcall
icebp
xchg
insb
jns
cli
ret
fldl
xchg
ds
mov
inc
adc
pop
scas
jns
jl
cld
jecxz
cmp
mov
cmp
jbe
gs
pushf
bnd
out
cmp
adc
mov
pop
dec
inc
pop
dec
dec
scas
dec
imul
cmpsl
mov
mov
testl
pop
test
ljmp
add
lods
inc
xor
js
jecxz
xchg
out
mov
xchg
loope
aad
mov
jge
mov
test
lds
sub
dec
sbb
int3
in
daa
add
jne
mov
push
int3
lret
lods
sbb
popf
xchg
mov
inc
xlat
mov
imull
mov
shlb
mov
sub
fcoms
js
pop
cmp
les
fldl
movsl
popa
mov
xor
mov
addb
mov
rcrl
mov
test
push
test
xor
dec
shlb
into
xchg
call
dec
in
cmc
out
setge
jmp
rclb
fdivl
pop
mov
cmp
mov
rorb
add
cmp
sbb
mov
mov
or
xchg
cmp
rcl
aam
aam
xchg
pop
cli
lahf
repz
in
pop
fidivl
push
mov
mov
jmp
mov
ja
lahf
xor
cltd
ret
leave
sbb
hlt
mov
fdivrl
lahf
fbld
and
fyl2xp1
fidivs
push
lea
jno
push
mov
mov
movsb
stos
dec
xchg
push
jecxz
rcrl
pop
outsl
mov
les
lds
movsb
les
outsl
mov
xchg
lods
or
aaa
movsb
jmp
pmuludq
shlb
je
cld
mov
inc
popf
loop
shll
in
xorl
roll
sarb
mov
or
fstp
data16
or
sub
call
sub
mov
xchg
mov
fstps
xor
adc
shl
ds
std
mov
out
push
jnp
pop
mov
sbb
mov
fsts
fldenv
shr
cltd
adc
stos
cwtl
loopne
pushf
xorl
xchg
hlt
mov
stc
scas
bound
push
xchg
gs
xchg
mov
leave
movsb
xchg
mov
sub
pop
adc
xchg
sti
mov
daa
loopne
xchg
flds
shll
mov
stc
mov
imul
pop
test
mov
fcomps
adc
test
mov
jl
add
mov
enter
pop
sbbl
cmpsb
xor
icebp
and
cld
pop
cmp
call
inc
insb
cmpsb
aam
insb
push
call
and
jmp
mov
aas
xor
les
mov
mov
data16
jno
sub
adc
fisubl
push
daa
fistps
sub
sub
in
out
dec
cmp
fistps
imul
rcrl
adc
and
ret
loope
jecxz
in
adc
icebp
push
lahf
pop
addl
xchg
rclb
shlb
loope
xchg
int3
mov
negb
rol
jmp
cli
call
xchg
xchg
pop
adc
jmp
std
add
aaa
in
sbbl
pushf
movsl
fbstp
jg
mov
xor
lock
lahf
xchg
or
mov
cmp
add
push
gs
jge
mov
mov
sti
shlb
cmp
cmpsl
adc
out
andb
roll
fistpll
testb
inc
mov
mov
push
lds
sbb
push
aas
push
ds
sbb
les
xlat
and
cltd
or
adc
push
xchg
sbb
sbbl
gs
idiv
sub
lcall
sbb
ja
adc
bnd
mov
ds
cwtl
jne
xchg
cli
inc
sbbb
and
jmp
jmp
ljmp
fiadds
mov
sub
push
jbe
faddl
fs
xchg
push
test
std
fwait
out
cmpb
jmp
add
out
mov
pop
add
lahf
test
insb
xchg
shlb
js
xchg
into
in
test
subl
mov
fidivl
orl
cmp
add
mov
in
jmp
cmc
pop
fmull
divl
cmp
stc
mov
call
mov
push
fcomps
lea
push
cmpb
in
clc
mov
hlt
mov
mov
jno
mov
cltd
mov
mov
fcoml
enter
pop
in
and
add
cmp
fnstenv
mov
loopne
cs
or
inc
sbb
cwtl
insl
repnz
clc
lcall
aaa
mov
lret
xlat
call
leave
test
jo
std
push
lahf
in
ror
cltd
fwait
in
and
stos
push
fdivrl
rcl
adc
or
sbb
fwait
lahf
jnp
lods
gs
pop
imul
dec
ret
lret
adc
lods
cli
nop
push
lret
sub
iret
cld
les
lock
ret
adc
in
loopne
cwtl
out
push
cmc
fmull
xchg
mov
add
lea
out
cltd
enter
sbb
xlat
cltd
roll
rcr
std
sbb
fstpt
pushf
and
mov
call
mov
inc
rclb
jmp
xchg
cmp
add
adc
loop
mov
xchg
mov
out
jmp
test
lret
inc
mov
jecxz
xor
mov
fnstenv
sti
mov
xchg
xchg
mov
mov
or
dec
or
sbb
adc
sar
and
fwait
popf
pop
mov
inc
faddp
xlat
push
test
add
pop
inc
push
and
ss
dec
inc
push
ret
inc
xchg
push
loope
and
mov
add
lret
lret
pusha
shrl
pushf
in
jle
inc
mov
xchg
lret
pop
xor
jns
pop
mov
inc
push
push
stc
mov
cmp
mov
sub
pop
jp
sbb
and
mov
stc
or
or
push
lock
loop
pop
mov
lock
and
lods
push
adc
lock
cltd
push
inc
push
adcb
mov
ret
rcr
insl
fildll
in
inc
cmpb
add
arpl
mov
mov
and
arpl
sbb
jnp
scas
das
out
and
sahf
stc
cld
xchg
aad
mov
cmc
out
sti
and
fwait
adc
clc
mov
movsb
xchg
stos
fsubr
mov
cmpsb
out
mov
sarl
fistl
xchg
neg
jns
out
add
test
cltd
incl
fdivrl
repz
jno
or
adc
test
mov
xchg
popf
sub
lods
pushf
das
add
sbb
mov
addr16
cmpsb
mov
pop
ret
in
jnp
push
int3
fidivl
cmovg
aas
aaa
shr
mov
fstl
std
int3
push
pop
lret
repnz
sti
out
add
fisttpl
stos
cli
sbb
sbb
sub
push
out
lahf
jp
inc
cltd
fimuls
xlat
movsl
or
movsb
jne
sahf
mov
sbb
sub
out
das
mov
aam
fistpl
dec
pop
fcoml
adc
pop
sub
pop
mov
lds
shrb
lret
call
xchg
fdivrl
mov
mov
mov
mov
jl
inc
push
mov
arpl
movsb
sarb
mov
testb
push
dec
or
sahf
icebp
pushf
jae
jl
cld
push
inc
lcall
and
mov
fs
fbld
sub
mov
insl
add
mov
cwtl
mov
xchg
xor
fadd
nop
sub
inc
dec
sub
add
lahf
mov
jp
std
mov
sahf
in
loopne
fstps
out
xor
pop
xchg
fldt
stos
addb
imul
push
push
int
cli
shlb
movsl
pusha
jbe
cli
pop
pop
mov
out
and
icebp
stc
call
loope
lock
jb
jl
or
xchg
loop
insl
pop
pop
cmp
sub
and
lcall
aad
aam
daa
nop
adc
sub
sub
lds
pop
mov
addr16
mov
mov
inc
add
stos
mov
fcoms
call
arpl
cmpsb
and
cltd
lahf
xchg
test
iret
sub
mov
and
loop
pop
clc
xlat
mov
fucomp
and
xchg
jge
imul
cltd
jecxz
xor
mov
xor
in
hlt
jmp
jmp
out
mov
mov
adc
mov
lea
out
arpl
mov
cli
add
cld
mov
aaa
in
mov
mov
mov
xchg
js
cmc
pop
mov
add
sbb
ljmp
dec
pushf
daa
xor
push
mov
into
mov
and
cmpsb
xchg
mov
xchg
mov
pop
mov
mov
fnstsw
jmp
adc
loope
andl
and
cli
xlat
xor
mov
enter
pop
lahf
fidivl
inc
dec
jg
sbbb
scas
sbb
call
mov
lods
push
xlat
jp
mov
lods
xchg
call
mov
add
jle
cmpsb
iret
mov
les
andl
mov
mov
faddl
xor
cld
mov
movl
cltd
jge
mov
adc
mov
out
mov
xor
pusha
jg
sbb
jl
lock
pop
gs
mul
add
dec
movsl
xor
mov
rdtsc
jnp
fwait
test
loop
and
mov
hlt
sbb
lods
out
int
inc
cmp
out
in
loop
sbb
pop
mov
adc
sahf
add
and
or
push
dec
xchg
sub
idivl
loop
mov
pusha
pop
mov
imul
jns
xor
push
cmp
xchg
int
dec
cli
cmp
xor
cmp
scas
popf
loop
xchg
mov
lahf
mov
popf
fistl
icebp
not
cmp
mov
imul
je
xchg
out
mov
lods
mov
cmp
jns
xor
test
test
das
xor
mov
pushf
in
lea
push
rcr
dec
arpl
rcr
pushf
mov
cld
add
mov
lock
clc
jnp
mov
push
cld
pop
mov
mov
cld
pushf
pop
fidivs
incl
in
movsl
xor
or
xor
xor
fnstenv
leave
dec
dec
mov
fnsave
lock
sub
fwait
or
dec
gs
cltd
pop
xchg
loope
xor
add
rcl
sti
addr16
add
out
pop
lods
xchg
mov
mov
cmp
add
push
and
sbb
fnstcw
es
shl
fwait
sub
fisttpll
mov
mov
jno
xchg
imul
imull
aad
inc
xchg
gs
inc
add
scas
or
mov
mov
out
push
aas
popf
loop
jne
fdivrp
add
js
ret
jb
rcl
xor
dec
addb
icebp
mov
test
fldpi
xchg
adc
ficomps
into
je
sub
jmp
adc
xchg
fsubrs
sbb
fcomps
int
adc
mov
loop
dec
push
pop
fldl
aaa
fucomp
mov
cld
int3
lods
xchg
sub
mov
clc
or
les
mov
clc
js
adc
addr16
mov
test
or
jl
repz
mov
icebp
adc
add
movl
sbb
mov
xchg
lods
adc
cmc
or
add
shll
cmp
insl
push
mov
dec
and
mov
lahf
loope
push
lods
jo
cmpsl
in
daa
jnp
sub
inc
mov
pushf
jnp
aam
ret
mov
in
fs
sahf
out
test
stos
ret
mov
fisttpll
cwtl
sbb
mov
fcoml
hlt
mov
jbe
cmp
jecxz
push
mov
sbb
jl
or
fnstsw
stos
jle
add
stos
or
jecxz
add
filds
cltd
rol
paddd
lahf
lcall
pop
fwait
lock
cmp
test
mov
lret
call
arpl
in
scas
dec
dec
ficomps
mov
lcall
sub
lret
hlt
das
ds
bound
icebp
rorl
std
fmuls
mov
fprem
iret
inc
adc
cli
jo
mov
xor
fwait
iret
test
jne
daa
mov
mov
xchg
popa
pop
fidivrs
fwait
icebp
add
sbb
inc
ds
sbb
cmp
cltd
repz
in
jmp
xchg
aas
mov
pop
mov
test
sbb
jecxz
mov
inc
dec
cmp
sub
gs
jb
xchg
mov
cmpsl
and
leave
ret
push
xor
cwtl
lahf
sti
push
test
mov
fdivr
sub
or
scas
cltd
or
cmpsl
mov
add
aas
clc
xor
inc
adc
pop
ss
dec
stos
mov
ss
lret
aam
pop
mov
or
ljmp
jbe
sub
add
sub
cld
and
rorb
mov
mov
stc
movsl
ffreep
aaa
sbb
movsl
push
inc
mov
aaa
jo
ret
mov
mov
jp
mov
xchg
cmp
mov
adc
ret
fwait
xchg
push
or
fldenv
pop
adc
iret
mov
mov
cltd
in
stc
fwait
loope
cmp
pop
add
clc
test
in
icebp
shrb
out
shll
xlat
xchg
fldenv
std
shlb
cmpsb
repz
push
inc
xchg
ret
push
roll
test
dec
sbb
mov
xchg
das
out
addl
fdivs
rclb
jno
shl
mov
and
mov
adc
aam
stos
int3
test
sbb
xchg
das
jnp
pop
mov
cmp
pop
in
loop
or
fxam
mov
push
xorl
shlb
inc
mov
bound
jmp
mov
add
pop
xor
mov
or
add
and
imul
mov
std
flds
jae
xor
fs
shrl
insl
hlt
hlt
ljmp
xchg
out
aad
mov
aam
popf
mov
mov
fidivrl
xor
cmp
lret
xchg
pop
fld
and
cmc
hlt
push
popf
pop
sub
lcall
rorb
test
clc
call
aad
cmpsl
jns
xchg
aam
popf
xchg
popa
mov
popf
mov
loope
shrl
movsb
pop
addl
sbb
mov
hlt
lret
rolb
inc
jp
aam
jecxz
xchg
mov
cwtl
clc
mov
clc
das
xor
mov
mov
popf
jno
sbb
movsb
jno
addr16
jnp
shll
xchg
repnz
jns
xorb
mov
test
mov
sarl
je
push
leave
adc
jae
fnstenv
or
jno
xor
into
jo
jge
xor
jge
mov
cld
lock
add
xchg
and
sbb
adc
stos
icebp
add
mov
pop
out
jo
test
xchg
ret
push
in
stos
mov
adc
lods
jmp
aad
mov
jg
inc
mov
int3
add
daa
jo
jae
fsubrs
cld
ja
std
nop
xchg
mov
mov
shrb
jno
xchg
pop
add
aaa
loope
psllw
sbb
lods
je
mov
cmpl
loope
test
xchg
mov
sub
sbb
push
pop
xor
mov
and
mov
dec
out
icebp
loope
inc
push
fwait
icebp
das
push
and
cltd
push
xchg
jne
sub
movsb
dec
cmpsl
sti
cwtl
xchg
cmpsl
and
ss
ficoms
imul
mov
movsl
cmp
popa
and
in
xchg
je
shl
shrl
mov
clc
add
jb
fcomps
sbb
xor
pusha
fs
mov
mov
mov
mov
inc
push
popa
mov
xchg
addl
out
inc
and
cltd
sbb
loopne
pushf
inc
mov
cwtl
jno
cld
or
push
imul
and
shll
jmp
les
loop
shll
in
lds
jne
ret
loope
mov
ret
fxch
test
fisttpll
movsl
movsl
cmp
push
pop
push
cmp
jno
inc
xor
pop
push
push
je
popf
and
mov
je
pusha
xor
bound
push
ret
roll
test
test
test
test
mov
adc
test
popf
sub
leave
test
sahf
pop
xchg
add
sarl
mov
xchg
dec
mov
mov
pop
into
les
sbb
xor
push
shlb
mov
loope
sbb
dec
inc
aad
or
fmulp
mov
adc
shll
repz
xchg
fidivrl
or
jne
sbb
pop
push
or
jmp
stc
mov
push
jl
cmp
cmp
outsl
and
aad
jne
adcb
jno
bnd
pop
outsb
or
loope
xor
mov
jb
inc
fnstcw
xchg
cwtl
loopne
jg
pop
jnp
scas
xor
add
inc
xor
lock
jg
hlt
sbb
xchg
fistl
pop
xor
push
push
xlat
test
testl
cwtl
mov
shll
pop
arpl
addr16
mov
lods
adc
and
dec
and
popa
je
xor
jo
repz
mov
or
mov
mov
push
sub
adc
xor
xor
push
cmc
cmp
ret
mov
fnstenv
mov
nop
cs
loopne
mov
cmc
imul
fsubp
adc
dec
xor
aaa
call
add
xchg
stos
cmp
aad
push
daa
mov
or
ret
lods
imul
fs
push
sub
xor
out
sbb
cli
cld
stos
xchg
xor
xor
inc
and
add
rorb
adc
jp
imulb
fs
sbb
adc
imul
mov
in
push
stos
mov
ret
dec
into
xor
cmp
in
xchg
insb
mov
mov
scas
lcall
mov
mov
add
lret
negb
xchg
movsb
out
dec
popa
adc
push
or
lock
int3
mov
popa
enter
addr16
dec
daa
stos
or
test
aam
inc
jns
ss
xchg
and
repnz
dec
aam
lret
lods
and
pushf
and
push
sub
mov
and
push
cwtl
xchg
addr16
dec
hlt
test
mov
push
frstor
jnp
fwait
and
hlt
xor
test
sbb
mov
jbe
ljmp
push
xchg
call
jmp
shll
push
sbb
xchg
or
fiadds
ljmp
inc
or
test
std
cmp
adc
lods
mov
xchg
in
ljmp
mov
ja
or
stos
in
sbb
and
xchg
ret
in
xor
mov
push
add
roll
add
roll
add
roll
add
add
add
roll
add
add
add
roll
add
add
add
add
add
add
add
rolb
add
add
add
rolb
add
add
add
add
dec
rolb
add
push
add
rolb
add
roll
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
add
add
add
push
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
jb
fs
insb
add
xor
xor
fs
insb
add
jb
imul
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
or
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
inc
aam
insl
mov
and
dec
pushf
xchg
enter
out
jge
fcmovbe
push
dec
int3
fadds
push
stos
insl
or
or
jg
push
daa
sub
cmp
pop
add
clc
ror
add
dec
xor
shr
addl
jno
fs
or
shll
pop
loope
mov
xchg
sub
xor
scas
orb
sbb
ret
xor
jb
filds
cmp
pop
shll
or
and
sub
push
aaa
or
ja
cmp
add
or
mov
int3
dec
sub
xor
lds
cmp
sbb
xorb
or
xor
pop
or
repnz
and
dec
pop
lret
mov
mov
push
bound
test
cmp
xchg
in
xor
pusha
mov
shlb
cli
sbb
divl
pusha
or
push
push
paddb
pop
aam
add
mov
add
xchg
ss
jmp
push
in
inc
mov
and
add
lahf
mov
add
xor
scas
stos
enter
cmpl
dec
js
pop
pop
mov
pop
cmpsb
lock
pop
ja
int
ret
or
sbb
in
jmp
and
adc
fistpl
add
pop
jp
sbb
dec
sub
test
pop
add
push
pop
xor
adc
pop
ror
mov
pushf
mov
sub
ds
push
es
mov
add
into
inc
stc
fs
sbb
sbb
push
loop
xor
or
or
cli
xor
inc
gs
adc
out
in
and
sbb
mov
push
clc
scas
pusha
subb
xor
lret
cmp
adc
nop
mov
dec
xorl
inc
xchg
ds
push
sub
add
sbb
int
xchg
lods
xrelease
subl
das
sbbb
stos
out
mov
fisubs
lods
sub
xchg
les
or
inc
cld
xor
das
mov
or
inc
nop
mov
addb
dec
imul
inc
adc
pop
sub
xchg
stc
cmp
add
out
pop
and
or
mov
testb
fildll
xor
cmc
iret
add
jo
test
lods
es
or
mov
lret
daa
add
adc
lods
cmp
push
in
loopne
add
xchg
aas
in
arpl
jecxz
add
sbb
push
xchg
jbe
lods
ret
push
sbb
cmp
daa
jo
or
sbb
mov
push
std
iret
scas
add
xor
fs
pop
movsb
flds
aad
pop
lret
jg
daa
mov
adc
scas
in
mov
add
mov
mov
test
xor
mov
popa
add
leave
cmp
xor
ret
shll
inc
xor
add
imul
or
pop
jmp
xor
das
and
and
lds
mov
pop
adc
fadds
mov
inc
sub
mov
push
push
and
adc
push
fcmove
sbb
fs
add
icebp
pop
shr
fstl
add
andl
add
or
push
adc
and
pop
pushfw
dec
hlt
or
xchg
dec
inc
fs
dec
mov
lahf
adc
xor
add
inc
cmpsl
push
mov
test
outsb
mov
or
je
and
cmp
inc
cmp
inc
aas
out
inc
inc
ret
inc
inc
mov
inc
stc
mov
pusha
or
mov
and
and
jle
xchg
inc
adcb
flds
jne
test
cltd
roll
push
inc
mov
sbb
stos
mov
test
xlat
gs
add
mov
ja
or
sub
push
lods
out
rorb
or
sub
pop
test
int3
lods
mov
inc
or
sub
scas
push
and
cld
or
pop
enter
inc
push
test
jno
or
mov
cwtl
mov
aad
and
ret
push
orb
in
jl
es
or
or
adc
add
or
mov
les
cs
dec
push
mov
adc
out
cmc
or
mov
in
cltd
mov
fldcw
mov
lahf
add
jmp
jne
push
imul
and
add
pop
xorb
adc
pop
imul
test
out
ret
mov
push
lods
add
cmpsb
inc
inc
aas
inc
add
js
and
cmp
aas
add
inc
add
movsb
in
add
dec
add
dec
add
dec
add
dec
add
push
or
or
mov
jl
and
scas
inc
xor
jge,pt
dec
cltd
add
lcall
add
scas
add
mov
mov
rorl
es
adc
or
stos
adc
or
stos
sub
add
call
mov
xor
mov
add
dec
xchg
les
fisttps
mov
aaa
and
std
inc
pop
mov
insl
inc
inc
jl
aad
ss
xchg
cmp
mov
jg
and
mov
fdivrs
add
cmp
jnp
inc
add
nop
addr16
push
inc
mov
or
sub
mov
aad
mov
cmp
hlt
sbb
dec
adc
and
xchg
subb
in
inc
lods
xor
add
mov
sub
xor
push
xchg
jbe
add
pop
arpl
shr
popa
xchg
add
pusha
or
push
adc
pop
pusha
mov
in
jmp
dec
ret
call
sbb
testl
sbbb
inc
add
js
mov
mov
pop
sbb
jg
adc
add
xlat
inc
or
lret
xchg
rol
adc
push
xchg
jnp
mov
sub
iret
and
xor
sbb
mov
adc
inc
in
push
mov
mov
add
dec
push
jp
movsl
shrl
ds
adc
test
rol
add
lea
xor
jno
fs
scas
or
push
cmp
xchg
push
test
cwtl
jmp
fcoms
jno
xor
cs
dec
and
pop
jbe
push
inc
into
mov
insb
out
add
aas
ret
loopne
lret
popw
bound
addb
add
xchg
pop
int3
cmpsb
sets
add
aas
dec
jl
inc
xor
negb
cmp
and
orb
dec
mov
add
push
fldenv
jg
sub
mov
popa
iret
add
fs
cmp
ds
movsl
pushf
add
or
cwtl
mov
xchg
sub
sub
adc
lret
add
ss
fdivs
add
std
rcl
shlb
adc
jle
mov
adc
jnp
mov
rcrl
lcall
pop
clc
jbe
decl
xchg
lahf
push
and
push
sub
hlt
xchg
pusha
cmp
and
jns
add
insb
add
insl
add
jle
push
mov
add
xlat
mov
sbb
sbb
xor
ja
aaa
inc
mov
or
vprotq
dec
lock
xchg
enter
add
adc
and
xor
dec
mov
andb
testl
incl
or
and
js
shrb
xor
mov
xchg
dec
add
add
fidivl
test
subb
xor
or
std
enter
adc
scas
pop
or
or
mov
scas
mov
push
pop
ret
adc
dec
add
cmp
std
pushf
in
arpl
sub
adc
pushf
add
cmpsb
bound
shl
adc
inc
jl
or
or
add
cltd
push
mov
cmp
or
and
pushf
insb
and
outsb
and
jnp
dec
sbb
lret
xchg
and
push
mov
in
xchg
jmp
jne
sub
and
dec
adc
pop
add
fdivrs
xor
or
in
mov
ret
test
mov
add
ds
movntq
jne
add
push
xor
mov
insl
test
rcrb
xor
mov
cmp
leave
inc
jnp
pop
cmc
jl
dec
adc
xchg
xchg
lea
shrb
push
and
js
mov
xchg
movsb
popf
xchg
insl
add
adc
cmp
cmc
add
jbe
push
push
mov
cltd
fwait
ret
movb
add
jmp
mov
int
inc
cmp
pop
inc
dec
std
and
fmull
pop
cltd
inc
dec
ret
adc
out
sbb
and
or
sub
es
je
or
in
lock
adc
orb
in
cli
push
push
mov
sbb
and
in
sub
icebp
mov
jae
hlt
jge
fimuls
insl
push
push
adc
shlb
mov
add
mov
mov
adc
push
mov
inc
inc
add
jle
out
add
insl
jge
bound
and
int
cmp
jo
fchs
popf
das
pop
les
call
cmp
push
aaa
mov
add
adc
xor
add
pop
sub
daa
gs
test
add
dec
addr16
jmp
orb
cmpsl
mov
xchg
in
cmp
xchg
jo
and
cmc
xchg
movl
shl
push
mov
es
in
inc
or
jo
loope
in
add
lret
ficoml
lock
js
ret
inc
fsub
sahf
adc
mov
ret
jmp
mov
jbe
xor
jge
push
addl
jle
add
sub
pop
push
add
jl
xor
adc
pop
loop
sub
fstpt
add
sbb
test
notl
add
inc
inc
mov
and
shlb
shlb
inc
mov
stos
les
add
cmp
or
inc
xor
test
insl
cmp
xlat
xor
testb
push
inc
dec
bound
or
enter
adc
cmpb
adc
xor
push
push
push
test
push
insl
pop
fldl
sub
mov
or
add
arpl
incl
rolb
sbb
call
mov
insb
inc
push
pop
mov
shl
sbb
jmp
add
xor
hlt
call
leave
js
mov
pop
pop
sub
aaa
jmp
shl
jle
lret
push
pusha
or
fsubrp
add
xchg
fdivl
iret
inc
inc
pop
stos
mov
shr
mov
enter
pop
shl
jmp
pop
ret
xchg
adc
sub
jmp
dec
rolb
lret
rorb
add
fiaddl
popf
cmp
jmp
add
sub
loope
sbbb
inc
testl
xor
jno
mov
ljmp
dec
sub
jns
shl
loop
icebp
push
and
daa
dec
push
mov
fucomip
add
imul
in
add
pop
setb
inc
test
or
mov
push
adc
inc
call
xor
inc
sub
add
xor
sub
inc
inc
cmc
jmp
mov
add
ja
pusha
mov
sbb
shrl
add
adc
cwtl
add
add
lret
pop
jmp
test
sub
push
and
loopne
neg
mulb
fdivr
xor
aas
roll
pop
or
lea
cvtpi2ps
pop
imul
rcrb
shlb
in
adc
jns
out
jl
mov
inc
push
pop
pop
or
mov
mov
jo
les
enter
das
add
pop
dec
xor
mov
movsb
push
add
pop
push
sti
mov
mov
cmp
xorb
and
nopl
imul
dec
addb
push
mov
add
leave
test
xchg
adc
xchg
sti
add
data16
mov
mov
cs
clc
loope
cltd
cmp
insb
std
sbb
xchg
out
and
pop
pop
add
cmp
shll
add
mov
push
in
push
cmp
inc
dec
mov
fistl
mov
mov
sbb
push
adc
mov
xor
shrb
push
ljmp
shll
sti
sbb
cmp
and
imulb
or
leave
or
xorb
cmp
cmpsb
scas
adc
or
shll
test
icebp
popa
outsl
in
pusha
cmp
ret
aad
rcrb
xchg
lcall
mov
mov
or
out
mov
je
fisubs
popf
nop
dec
inc
movb
cmpsl
xchg
cmpsb
mov
mov
cli
dec
or
imul
mov
xchg
in
orb
repnz
dec
mov
shll
add
xchg
lahf
cs
into
in
adc
aam
rcrl
and
add
lods
inc
lcall
out
xor
or
fnsave
cmc
sbb
outsb
test
sub
inc
push
push
or
jne
lea
not
inc
sub
or
lock
test
and
push
sbb
mov
test
xor
out
mov
pushf
neg
loopne
sbb
pop
pop
add
dec
adc
sbb
repnz
stos
pop
sub
and
cs
lret
shr
ret
inc
push
or
shl
push
mov
cwtl
sbb
dec
scas
adc
clc
ret
addb
xchg
sub
jmp
inc
cmp
jg
pop
cmp
jae
add
jno
or
add
int
movsb
dec
testb
adc
push
and
pop
out
adc
xorb
rcr
push
cwtl
sbb
mov
scas
addr16
cld
jecxz
adc
stos
inc
popf
dec
push
pop
jb
sub
stos
push
dec
xchg
add
inc
inc
jbe
arpl
jp
lahf
xor
ret
xchg
fnsave
stos
outsb
bound
data16
mov
push
sahf
and
or
and
add
mov
outsb
shr
das
test
pop
push
rorb
test
popf
inc
adc
mov
or
pop
add
jmp
not
test
mov
lret
and
mov
xchg
sbb
adc
int3
cmp
insl
adc
add
jnp
not
mov
std
sub
insb
mov
andl
sbb
loopne
cmp
push
push
test
jecxz
stos
adcb
add
jnp
add
push
pop
pop
test
fcmovnb
cmp
pop
mulb
out
xchg
cmp
orl
pusha
mov
cmp
cltd
sub
fisubrs
movsb
jmp
jbe
pop
pop
stc
nop
mov
daa
inc
test
xor
cmpsl
or
out
mov
mov
sbb
mov
adc
dec
xchg
pop
mov
xor
mov
gs
pusha
icebp
ret
nop
fdiv
addl
sub
cmp
incb
aas
int
and
push
repz
push
mov
not
push
inc
mov
out
mov
or
mov
outsl
xchg
jne
lock
or
or
test
negl
dec
push
sti
inc
dec
push
addr16
jmp
cs
mov
add
adc
addr16
add
pop
jo
fildll
jae
add
sub
movl
aaa
cmpb
add
xchg
movsl
leave
dec
xchg
pop
lea
dec
mov
enter
or
dec
dec
cmp
icebp
sub
dec
xor
add
loop
iret
xchg
push
adc
push
sbb
mov
inc
add
pushf
push
adc
mov
repz
sub
aam
add
test
xor
rcrl
loope
or
in
neg
mov
sub
sub
int
add
inc
and
inc
cmp
int3
push
stos
and
flds
dec
cltd
inc
pop
test
and
xchg
xchg
dec
sub
clc
xor
js
nop
out
cmp
pop
loopne
out
pusha
cmp
sub
loope
adc
mov
test
inc
pop
es
hlt
outsl
jns
nop
xlat
xchg
mov
sbb
shrb
gs
add
sbb
int
dec
mov
jge
loope
setb
and
inc
mov
test
mov
cmp
add
push
bswap
andb
and
pop
cmp
test
data16
popf
sub
int3
xor
and
fadds
cmp
mov
mov
gs
or
sar
popa
cmpsb
mov
hlt
bound
cmpsb
nop
sub
ret
pop
add
sub
lods
sbb
icebp
sub
lret
adc
adc
hlt
lods
add
ret
xor
pusha
out
roll
movsl
inc
ss
std
lds
dec
mov
cwtl
xchg
nop
dec
loopne
add
in
or
icebp
not
test
mov
add
fidivrs
lret
addl
dec
xlat
cmpsb
rclb
push
sti
out
add
repnz
movsb
and
inc
dec
xorb
mov
aam
inc
mov
leave
sbb
inc
add
push
pop
push
pop
pop
incb
rolb
dec
cmp
mov
ret
pop
orb
int
cltd
and
or
adc
sbb
out
inc
xchg
cld
adc
cld
xor
ret
pop
add
adc
sbb
addb
pusha
inc
adc
inc
mov
xchg
jb
jo,pt
push
pop
testb
jmp
mov
xor
das
xchg
adc
mov
idivl
inc
pop
sub
xor
mov
mov
test
xor
add
xor
mov
adc
sub
imulb
cltd
shlb
aas
loop
dec
mov
rcrl
inc
sub
test
xchg
jae
adc
pop
xchg
xchg
mov
pop
sbb
adc
in
xchg
adcb
sub
ffree
push
xchg
and
push
cmp
mulb
call
aad
out
xor
adcl
cmp
adc
rorb
add
and
enter
add
loope
push
arpl
cwtl
add
pop
dec
and
add
pop
sar
out
adc
sub
mov
cmpsb
lods
nop
mull
loopne
imul
rcrb
into
adc
loop
xor
clc
sbb
jae
xor
loop
inc
jb
adcb
test
inc
mov
xchg
iret
xor
push
roll
dec
mov
lock
sbb
push
adc
or
daa
mov
dec
mov
andb
push
sbb
mov
sub
pop
pusha
cmp
in
lods
lock
out
add
sub
add
cwtl
shll
sbb
pop
pop
add
sbb
dec
out
push
add
add
jnp
xor
ret
xchg
or
repnz
mov
inc
adc
fstpt
inc
adc
leave
je
mov
sbb
rolb
pop
adc
sub
ljmp
add
inc
jne
add
jle
out
push
dec
push
test
or
aas
xor
nop
imul
fadds
popa
stc
or
jae
outsl
push
add
loop
add
cmpsb
mov
and
out
add
aaa
mov
sub
mov
int3
adc
xor
jp
roll
test
and
mov
hlt
pusha
push
rol
adc
mov
xor
stos
scas
out
or
add
push
pop
pop
jno
cmp
sub
push
js
mov
inc
shl
mov
xchg
add
xor
outsl
lret
dec
jl
pop
sub
xchg
push
push
pop
adc
add
sbb
leave
mov
mov
test
push
pop
pop
dec
cwtl
test
pop
xchg
cli
leave
cltd
hlt
push
mov
neg
data16
pop
shlb
aaa
dec
neg
xchg
mov
add
sub
dec
push
scas
movsb
in
lds
push
jnp
addb
in
push
adc
pusha
and
xchg
std
pop
outsb
xor
clc
iret
cmpl
mov
pop
adc
xchg
pop
cmp
and
popf
or
mov
dec
mov
bts
stos
data16
in
les
adc
fnstcw
jo,pn
popl
push
aas
xor
jo
jb
mov
dec
sbb
imul
and
push
dec
lcall
pop
rcll
gs
xchg
inc
jae
lret
cmp
cmc
rolb
dec
mov
sbb
pop
xchg
add
fs
or
push
out
out
or
mov
clc
xor
xchg
and
sbb
lock
or
xor
jns
fiaddl
pop
mov
out
mov
or
pushl
add
push
fcomi
sub
lds
adc
mov
xor
mov
pusha
cmp
cltd
test
test
xchg
cmp
and
push
fiaddl
push
test
push
xchg
xchg
push
sub
xchg
popa
inc
stc
lahf
lcall
inc
mov
inc
push
add
sbb
movsl
xor
mov
inc
pop
cli
mov
mov
mov
xor
mov
add
dec
inc
xlat
sub
sub
and
in
push
aas
popf
mov
mov
xchg
mov
mov
xchg
es
mov
rolb
add
out
cmpsb
mov
hlt
add
mov
pusha
xlat
fsubrp
jo
dec
adc
add
es
jg
push
xchg
cmp
hlt
and
xor
pop
xchg
sub
mov
cmp
outsl
mov
mov
mov
aam
jns
xchg
fsubs
nop
and
sar
mov
inc
test
imul
push
rol
push
pop
cmp
les
pusha
subb
leave
jbe
notb
rcrl
cmpsb
repz
lret
test
cmc
divl
add
jbe
sbb
daa
cmp
mov
insb
add
cmpsl
inc
jno
sbb
add
iret
test
scas
adc
mov
es
into
outsb
adc
add
cmp
add
aad
or
jmp
pop
jle
pop
test
aas
add
inc
ret
out
mov
adc
in
daa
push
imul
pusha
add
mov
sti
push
and
and
test
outsb
pusha
dec
std
mov
xor
jns
jle
lods
bound
jbe
rorl
sub
sbb
int3
hlt
popf
inc
inc
mov
xor
test
sub
lcall
inc
and
pop
mov
bound
sub
std
xor
add
mov
xor
push
jmp
cli
loope
neg
int3
in
dec
and
int
fbld
and
jns
mov
mov
adc
sahf
ret
dec
push
xchg
adc
shll
sub
fadd
jb
movsl
addr16
adc
xor
sbb
mov
or
int3
test
push
jg
jl
test
mov
ljmp
push
orl
addl
and
gs
scas
pop
mov
inc
insl
mov
and
or
test
sub
adc
scas
adc
fmul
fidivs
mov
aas
dec
push
add
in
push
add
dec
push
xchg
rcll
sbb
cmp
sbb
inc
loope
aam
push
and
scas
loopne
and
aam
dec
dec
lret
sarb
ret
test
sub
inc
jmp
clc
inc
test
repnz
xor
adc
fsubr
inc
ud0
mov
push
fiadds
jge
lret
dec
fs
or
jo
ljmp
je
mov
and
dec
ret
pusha
add
pop
adc
pop
jl
jbe
dec
fistpll
sbb
iret
adc
and
outsl
adc
gs
cmpb
loop
inc
mov
out
jae
dec
ret
cwtl
xchg
jnp
adc
jmp
xchg
adc
movl
add
mov
loopne
jp
sub
das
mov
loope
sub
xchg
sub
pop
rolb
push
push
std
inc
mov
daa
or
orl
faddp
push
jno
lods
daa
or
test
std
decl
push
xchg
sub
int3
das
xchg
add
pop
popa
das
dec
mov
mov
icebp
hlt
loopne
rcrb
adc
pop
jne
out
addl
dec
ret
and
push
lahf
inc
push
pop
and
fmull
cmp
out
nop
xchg
xor
ret
loope
movsl
gs
or
rcl
or
inc
mov
dec
call
and
jl
mov
imul
push
cmpsb
jnp
cli
jno
push
mov
sub
jle
inc
mov
cwtl
movsl
push
jl
xor
pusha
sub
jl
push
cmc
btc
adc
and
adc
lret
or
add
adc
cmp
fimull
mov
cwtl
mov
ds
scas
ds
cmp
cmp
mov
xchg
xchg
test
mov
or
lds
push
jbe
not
cltd
add
cmp
movl
inc
push
mov
adc
xchg
or
sbb
mov
mov
or
inc
cmp
negb
inc
add
test
xchg
jns
adc
dec
and
add
sub
rcrb
or
sub
dec
repz
add
dec
jge
mov
adc
inc
in
pop
shll
sahf
and
fldcw
inc
sbb
rcrl
jmp
arpl
out
xor
xchg
jmp
int
xor
test
xchg
push
cltd
or
mov
or
adc
mov
add
push
bswap
mov
xchg
addl
or
sub
cs
or
cwtl
or
and
sub
pop
lea
jg
or
or
push
or
jl
cmp
sti
xlat
adc
es
xor
cmp
sbbl
mov
xor
and
xlat
xor
dec
and
cwtl
aam
push
sub
leave
xchg
dec
subb
sub
sarb
lods
xchg
add
push
mov
mov
test
hlt
clc
sub
mov
ljmp
test
pop
decl
add
dec
imull
push
ss
ret
pop
and
push
outsl
notl
dec
and
inc
fcoms
jle
inc
xchg
pop
jns
push
cmpsb
mov
cltd
add
sub
test
pop
push
out
imul
hlt
or
rclb
shll
cmpsb
rclb
arpl
adc
dec
int
dec
cmp
sbb
repnz
and
inc
push
or
sbb
jae
xor
popl
push
adc
pushf
push
dec
movsb
push
mov
imul
enter
xchg
mov
shl
enter
sub
sub
fldt
aas
push
dec
ret
mov
mov
cmpsb
in
or
mov
test
sbbb
dec
cmp
inc
sti
call
dec
inc
ret
aam
outsb
cli
ja
imul
pop
jle
or
in
cmpb
push
cmp
jecxz
add
cwtl
nop
stos
xchg
add
pop
fdivs
and
nop
mov
dec
xor
and
daa
sete
adc
shll
mov
push
sbb
push
pop
pop
inc
aam
inc
ja
jnp
aaa
inc
push
push
out
fxrstor
push
stc
sbb
sahf
dec
cmp
enter
jnp
cmp
mov
sbb
pop
test
ss
lret
rcrb
daa
inc
or
adc
mov
inc
and
rcll
pop
add
push
jle
inc
jp
fsts
xor
or
xor
inc
jge
test
int3
lock
movsb
push
add
adc
fs
adc
push
cmp
aaa
jae
sub
leave
test
inc
mov
fs
add
mov
dec
cltd
sbb
cmp
lods
fldl
stc
inc
adc
push
cmc
sub
rolb
int
mov
jmp
ljmp
sub
mov
std
pop
inc
mov
push
pusha
movsb
out
mov
jae
push
aaa
push
dec
std
in
add
std
mov
gs
call
out
sar
dec
lds
lahf
or
std
dec
cmp
popa
xchg
pop
pop
mov
movsb
jae
sbb
sub
mov
outsb
pop
jo
test
mov
cli
btr
inc
xchg
lcall
xchg
add
mov
not
int3
adc
sub
sbb
jae
add
push
add
sbb
ja
xor
scas
dec
mov
mov
or
leave
inc
subb
fistps
push
sarl
dec
adc
add
push
inc
push
inc
hlt
sbb
push
pop
jb
int
je
pushf
sbb
and
add
dec
xlat
icebp
and
or
icebp
cwtl
gs
fldenv
lahf
test
jl
xchg
daa
push
pop
pop
and
inc
sahf
pusha
adc
xchg
jl
or
into
xor
push
xchg
fwait
aaa
mov
lret
add
jmp
inc
imul
mov
adc
jp
in
fdivp
sarl
insb
shl
jp
or
aam
stos
cmp
js
scas
push
aad
mov
and
stos
icebp
pusha
aad
pop
sub
movsl
imul
pop
xor
fisttpll
xchg
jecxz
mov
and
xchg
and
sub
pop
inc
cwtl
loope
cmp
adc
int3
jns
cmp
je
pop
into
sub
sahf
in
adc
mov
fists
shlb
cli
in
repnz
push
inc
test
es
aas
pusha
and
xchg
or
cmpsl
fcmovnbe
aas
mov
repnz
test
push
or
adc
orb
inc
in
inc
cmpsb
test
insb
xor
or
movsl
imul
test
ljmp
mov
rol
enter
pop
decb
int3
sbb
or
movsb
popl
leave
fmull
test
jp
cmp
xor
fldt
test
call
ret
test
fidivl
pop
mov
lfs
pusha
push
mov
or
push
inc
or
dec
adc
add
int3
divb
sahf
jb
or
shr
test
xchg
add
add
cmpsl
inc
xchg
pop
xchg
sbb
outsb
daa
add
ljmp
xor
or
fldcw
cmp
ss
push
add
cmp
cwtl
fisttps
rorb
ljmp
push
dec
test
in
cli
stos
test
cmpsl
cmp
in
scas
add
and
xchg
jg
int3
sub
inc
imul
sub
sbb
ljmp
pop
or
xor
bnd
xchg
sub
add
mov
and
push
nop
jno
scas
iret
lds
or
pop
lods
fnstenv
int3
push
int
cmpsl
or
mov
pop
sub
imul
lret
lea
test
sbb
jno
stos
cwtl
inc
mov
into
test
mov
pusha
push
add
iret
sub
sbb
lock
mov
insb
rcll
jae
mulb
iret
out
ja
inc
jne
push
mov
push
cmp
in
imul
xlat
or
sbb
pop
or
subl
adc
ja
outsb
jp
xchg
xor
cs
dec
dec
js
jbe
inc
fidivrs
push
cmpsl
cmp
mov
and
pop
scas
push
fdivrs
jle
jo
ss
sub
aas
loope
aad
imul
repz
das
jge
dec
insb
fisubrs
pop
lcall
and
in
dec
loope
insb
fmul
out
dec
sbb
mov
cmp
and
js
stc
xlat
jp
imul
in
fs
out
mov
mov
jns
sub
loope
test
adc
cld
adc
and
xor
cmpsl
push
nop
in
push
shlb
pop
imull
pop
xchg
adc
push
jne
pop
cmp
pushf
pop
cld
pop
aaa
push
sti
test
adc
and
idivb
mov
add
jge
mov
insb
jns
divb
test
jo
pop
xchg
pusha
jp
std
jp
add
fs
xor
xor
in
out
xor
cmp
sub
xor
push
movsl
gs
jne
and
pop
or
xchg
scas
gs
enter
cmp
push
imul
fs
xchg
jae
add
sti
mov
pop
sub
mov
adc
or
dec
and
aas
hlt
popf
cmc
test
jns
in
mov
in
call
sub
xor
ret
dec
sub
jne
cmp
testb
imul
and
dec
or
xchg
aaa
jno
jns
mov
mov
movsb
sub
test
imul
jl
dec
lahf
cmp
pusha
xor
aas
cld
mov
test
aas
lock
jno
jge
scas
bnd
jg
clc
mov
jge
jmp
jp
testb
pop
xor
add
sub
dec
into
mov
pop
stos
out
lock
xor
stc
push
and
sti
or
in
sbb
hlt
divb
out
sub
jge
jbe
and
jb
in
inc
fidivl
lock
sub
push
test
and
test
in
dec
dec
push
das
jno
adc
mov
or
std
xchg
es
lret
fistl
jge
loop
dec
jg
pop
or
stos
pusha
bound
mov
mov
fists
ljmp
es
jg
xor
filds
mov
inc
mov
xchg
adc
insl
cmp
sbb
xorb
dec
cli
push
fisttpll
mov
fidivs
clc
sbb
and
cmp
inc
addr16
push
dec
enter
std
stc
lock
xor
inc
add
mov
jmp
cli
je
pop
mov
popa
je
inc
addr16
mov
std
mov
scas
out
mov
scas
mov
mov
ret
mov
movsl
lahf
jae
mov
adc
das
pop
das
mov
lea
cld
mov
or
and
popf
pop
mov
xor
xchg
ja
jp
pop
shrl
in
repnz
mov
xchg
sarl
and
movsb
mov
mov
fs
gs
inc
push
add
jecxz
cmpsl
mov
mov
and
sub
jno
jno
jbe
fwait
push
gs
popa
jge
sbb
jmp
test
push
xor
dec
sbb
or
jo
je
loop
jp
mov
jbe
mov
fxtract
pop
pop
call
subb
faddp
xchg
js
cwtl
out
add
sti
clc
call
insb
in
xlat
out
cmp
shr
push
sar
lods
gs
jbe
insl
test
jp
pusha
mov
fwait
repnz
lock
mov
cmp
inc
mov
ss
pop
jns
xchg
addl
fistpll
inc
pop
imul
cs
or
xchg
mov
dec
sbb
jg
jo
push
cld
or
xchg
mov
sti
xchg
jno
dec
jmp
cmp
enter
cmovle
mov
cld
aaa
iret
mov
aam
push
xchg
cmpsl
lock
daa
negb
std
ds
in
clc
cmp
clc
mov
cmp
add
pusha
xor
dec
mov
and
les
mov
mov
popf
clc
or
int3
xorb
pop
cmp
inc
push
inc
lock
ss
xchg
mov
pop
mov
push
or
and
into
aas
or
test
and
jns
xchg
jge,pn
and
imul
fs
jl
mov
imul
jecxz
out
hlt
and
push
aad
mov
push
into
fnsave
dec
inc
sti
xor
sbb
arpl
scas
sub
xlat
rclb
in
push
fnstcw
in
xchg
jbe
jb
xchg
mov
pop
loope
in
or
shll
fistpll
je
inc
fstp
insl
lahf
xor
cs
jnp
aas
insl
mov
pop
decb
adc
clc
outsl
in
gs
scas
jle
hlt
mov
xchg
divb
stos
test
xchg
and
fidivrl
xor
mov
and
sub
or
adc
inc
cld
xor
lret
sarb
push
sahf
push
sbb
add
bnd
push
std
xchg
xor
adc
dec
xor
into
orl
pop
lods
mov
insb
into
jo
cld
inc
xor
mov
std
outsl
cmp
push
and
jl
test
cmp
imul
clc
std
pop
dec
jg
lret
loop
ja
ds
mov
dec
imulb
rcl
repnz
or
insb
imul
scas
dec
cmc
jg
adc
loop
sti
sub
mov
fcoml
push
mov
pop
outsl
clc
clc
mov
scas
jnp
jb
mov
fs
aam
in
sub
ret
and
test
ret
lcall
inc
or
lds
insl
xchg
and
adcb
ss
leave
pop
jg
loopne
pop
sub
cltd
movsb
inc
jl
ljmp
jle
outsl
mov
xchg
pop
pop
push
dec
div
outsb
lock
andb
lods
cmpsl
addr16
sbbl
sub
push
inc
sbbl
test
imull
pop
sahf
xor
mov
lret
push
addr16
fldcw
xchg
push
and
stc
cmp
mov
push
aam
out
jmp
stc
out
jbe
hlt
into
sbb
imull
aad
push
jge
sti
ds
inc
jle,pt
cld
pushl
jl
jbe
repnz
je
jge
rcrl
outsb
je
cs
test
mov
pop
jns
jb
mov
xchg
clc
mov
pop
push
xor
std
cld
jp
je
xchg
call
mov
clc
jg
push
push
pop
jno
cmpsb
insl
and
dec
push
and
mov
cmpsb
pop
aas
xor
ljmp
jae
xchg
jle
hlt
mov
sub
or
aad
ja
lods
xchg
and
cmc
or
add
mov
jge
jnp
push
or
mov
jl
lahf
jp
mov
lds
out
and
stos
aaa
and
cmpsl
hlt
hlt
popf
rclb
or
mov
xor
or
jmp
and
stc
push
mov
sbb
cs
dec
add
mov
push
fwait
negl
sbb
mov
push
xor
dec
fnstenv
jl
push
decl
jg
push
xchg
inc
xorb
xor
jle
fs
repz
jne
mov
jns
cld
test
popf
in
insb
jbe
mov
rcr
lock
xchg
adc
sbb
add
lods
gs
lock
outsl
and
addr16
dec
sahf
xchg
jecxz
outsl
mov
pop
mov
and
jae
out
jne
fsubs
dec
fs
jg
dec
push
jecxz
pop
fdivr
pop
jo
mov
xchg
push
aam
push
insb
insl
cmp
lock
dec
adc
cmp
push
pop
and
pop
sahf
add
rcr
add
or
jge
pop
iret
mov
push
jns
test
int3
movsb
dec
jg
imul
fidivrs
push
jbe
sub
sarl
xchg
pop
jo
outsb
mov
rcl
xor
or
mov
jmp
testb
nop
and
jae
mov
mov
hlt
xlat
cmc
jle
das
scas
pop
pop
outsb
and
mov
inc
iret
into
inc
ficomps
xlat
dec
cmp
pop
cmc
inc
jle
mov
add
div
stos
add
das
packsswb
outsl
lret
push
enter
jge
loopne
jno
repnz
mov
mov
add
cld
in
scas
mov
loopne
cmp
or
loope
je
jle
imul
or
mov
lock
aas
dec
aaa
inc
dec
xchg
xor
pop
in
cli
or
push
xor
fs
in
push
jecxz
push
mov
aad
add
sbb
cmp
outsb
sub
mov
cld
bound
and
scas
sub
mov
repnz
mov
stc
xor
and
jle
jl
pop
jne
inc
or
or
andl
sbb
test
movsl
xlat
fdivrs
inc
lcall
imul
mov
dec
std
jecxz
push
cli
fs
xchg
xor
cld
movsl
addl
mov
cmc
cmp
or
mov
pop
jns
mov
lea
dec
or
idivb
xor
stc
and
cmp
sar
int
stos
andb
xlat
xchg
cmp
xchg
mov
mov
mov
or
ss
jge
and
js
and
inc
adc
jecxz
jno
stos
and
dec
in
daa
imul
lret
and
jl
jmp
sub
inc
xor
mov
loopne
arpl
loopne
in
jge
stos
or
lock
add
in
add
adc
lds
mov
ss
insl
nop
cmp
xchg
hlt
xor
popf
inc
jl
daa
mov
repnz
imul
je
repnz
nop
xor
cmp
mov
mov
push
pop
fistpl
inc
jo
int3
inc
imul
fscale
movsl
mov
dec
icebp
filds
pop
imull
xor
in
stos
js
xlat
cld
insb
dec
test
js
fdivp
mov
jle
add
loope
jne
shrl
push
push
stos
std
inc
push
jecxz
lret
std
mov
bound
or
xor
ret
jl
pop
jno
add
mov
mov
leave
mov
push
mov
xor
push
mov
hlt
imul
and
addr16
out
stc
jae
cmp
push
push
sbb
mov
xor
push
and
dec
cmpsb
aam
pop
shrb
mull
lret
cmc
nop
dec
cltd
je
inc
push
inc
jmp
pusha
jae
push
adc
das
mov
insb
adc
pusha
add
mov
dec
sbb
sub
je
adc
jmp
cld
subb
cmp
sub
imul
mov
icebp
inc
mov
pop
sahf
mov
sahf
fistpl
rclb
pop
fbld
shlb
xchg
xor
inc
pop
sahf
xor
jbe
pop
out
jo
and
mov
lock
or
xorl
push
cmp
mov
enter
idiv
push
add
add
pusha
test
loopne
pop
jae
cli
arpl
lock
xchg
dec
sbb
les
arpl
dec
add
iret
xchg
pop
push
out
aas
mov
in
mov
sub
cld
mov
mov
orb
mov
imul
jnp
xchg
loope
sbb
add
cmp
and
or
int3
cwtl
jno
sub
jno
ds
or
and
lret
lock
xorl
pushf
roll
inc
adcb
gs
lods
sub
addr16
jno
pop
xchg
addb
or
cmp
xchg
jno
icebp
pop
sub
mov
xchg
jp
outsb
subb
or
xor
loope
cmpsb
stc
jae
stos
xchg
lret
fs
pop
xor
pusha
in
xchg
push
pop
sub
and
inc
cli
int
mov
insl
mov
xchg
cmc
sub
sbb
ja
imul
xor
inc
cmp
add
mov
stos
lahf
dec
repz
adcw
arpl
push
xorb
jg
sar
adc
test
inc
push
insb
fisubrs
outsl
pop
jae
jae
dec
cmp
xchg
inc
jl
adc
sub
outsb
and
pop
push
sub
jecxz
adc
pusha
pusha
scas
adc
or
xchg
jo
data16
jg
insb
sbb
cmp
pushf
jbe
fwait
std
cmpsb
cli
xlat
js
pop
fcmovnu
and
xchg
cmp
mov
xchg
mov
xorl
ljmp
jns
jb
or
lods
sbb
pop
mov
inc
cld
or
adc
push
fists
mov
in
nop
int3
mov
pusha
sbb
pop
push
inc
mov
into
cmp
int
pop
fadds
ljmp
popa
je
add
das
gs
pop
push
cld
cmp
pop
repnz
mov
xchg
addr16
xor
inc
xchg
jae
jge
sbb
push
mov
jno
xchg
out
jne
es
inc
js
shlb
sub
movsl
inc
sub
xor
loopne
jl
cltd
pop
cmp
mov
mov
gs
and
xor
cmp
jmp
pop
or
pop
sbb
mov
es
add
lods
popa
and
fstl
mov
cmp
je
or
dec
push
decb
pop
dec
into
test
jp
push
je
pop
mov
xchg
or
sub
jae
jl
or
xor
cmpb
imul
xchg
push
sbb
arpl
xorl
add
fidivrl
sahf
repz
xor
lods
jnp
insl
and
dec
imul
xorl
add
loopne
push
nop
xchg
jmp
imul
xor
xchg
out
dec
sbb
add
std
jle
xor
pushf
jmp
pop
das
loop
fisubs
cmpsl
mov
xchg
outsb
in
push
jp
jo
insl
es
popa
pop
fucomp
sbb
fsubrl
and
cmp
push
jge
in
ja
inc
test
sub
mov
mov
push
sti
cmp
cmpsb
xchg
mov
xchg
xor
xchg
aas
lds
jmp
pop
ja
hlt
mov
cmpsl
xchg
sbb
jns,pt
sub
jp
pop
lea
cld
push
push
dec
ret
fildll
fwait
jmp
jl
bound
mov
cmp
aam
imul
test
in
fmulp
ja
lea
leave
push
icebp
cmc
fmull
test
dec
gs
jno
in
repnz
xor
aad
dec
xchg
xorl
jne
cwtl
pop
push
xor
inc
std
xchg
sarb
sbb
aam
idiv
add
pop
imul
jno
cmp
enter
mov
jnp
outsb
xor
clc
insl
movsl
xchg
sub
jle
push
gs
and
jbe
add
cli
cmp
and
jae
in
lock
dec
jbe
fsts
and
aam
fsubl
mov
je
pop
hlt
mov
add
jne
leave
or
sarl
push
mov
cmp
add
ret
neg
insl
out
xor
notl
nop
push
pop
jae
iret
fs
fnstsw
lcall
in
adc
sarb
clc
add
or
dec
mov
hlt
lahf
xchg
movsl
negb
call
pop
sub
jp
out
sbbb
lods
setbe
inc
mov
clc
push
cmp
sub
pop
shrl
test
lahf
mov
jmp
dec
testb
add
mov
xchg
or
jne
mov
aas
mov
in
ja
pop
fsubl
push
mov
sti
or
repz
or
shlb
inc
dec
into
xchg
jb
cltd
and
xor
imul
fcoms
sub
stc
rolb
mov
cmc
subb
ret
fstpt
insb
jmp
jne
jle
adc
enter
xchg
insl
dec
fstpt
pop
add
das
fwait
in
mov
mov
jge
lock
imulb
jne
jne
sbb
pop
iret
hlt
enter
pop
push
jmp
push
inc
jns
pop
jle
cmp
popf
cli
adc
push
cmp
repnz
fsubl
and
orl
pop
mov
test
movsl
sub
les
xor
repnz
je
dec
adc
push
fisttpl
inc
push
dec
xchg
int3
xchg
adc
or
xor
xchg
jl
sbbl
idivl
jl
jbe
cmp
cmp
sub
sbb
sbb
xchg
test
idivl
sub
mov
xchg
adc
scas
adc
fistps
int3
stos
jns
and
stc
cmp
lock
clc
cli
insb
call
push
jecxz
cmp
jmp
cmp
or
testb
pop
out
jae
mov
repnz
inc
sti
sbb
scas
out
add
push
sub
pop
jle
mov
subb
push
adc
mov
jns
das
dec
mov
dec
popf
pop
sub
loope
movsl
adc
push
cmpsb
mov
sub
jno
addr16
cwtl
into
test
push
xchg
mov
jge
icebp
jp
popa
jle
jle
in
pusha
xor
int3
ficomps
mov
dec
pushf
xchg
sub
orps
jle
cmp
jp
das
js
add
push
add
out
shlb
mov
int3
js
fstpt
repnz
mov
cmc
mov
fidivl
mov
mov
mov
add
and
daa
aas
jne
mov
inc
in
add
fcomps
ja
cmp
xchg
js
xor
dec
mov
mov
outsb
push
mov
push
sub
pop
xor
scas
adc
jb
and
adc
jne
daa
cmpsb
das
jp
mov
and
notl
jl
lock
out
jge
jge
cmp
testl
std
daa
stc
movsl
push
cmpsl
pop
ret
dec
cmp
mov
or
hlt
cmpsl
pop
daa
sub
nop
pop
cmc
adc
mov
jno
sbb
mov
mov
mov
adc
or
popf
xor
mov
xchg
std
sbb
outsb
and
cmc
inc
popf
lock
nop
jae
scas
adc
and
gs
jecxz
aas
jge
scas
jge
and
scas
call
repnz
cld
inc
pushf
cs
mov
jp
add
jnp
jge
jmp
rcll
daa
xchg
jb
and
in
pop
push
adc
and
gs
iret
cmp
mov
mov
clc
stc
push
or
inc
stos
xor
repnz
sbbl
mov
pop
push
ret
imul
push
mov
mov
mov
repnz
pop
add
sbb
pusha
rclb
decb
push
dec
fmuls
mov
mov
mull
or
mov
mov
sti
xchg
dec
jle
inc
in
bound
loop
inc
inc
cmp
cli
orl
pop
jle
lds
addr16
pop
sub
cwtl
sub
jnp
test
fs
sbbl
aad
js
mov
leave
popf
es
sti
loope
fmulp
mov
push
scas
data16
std
sar
push
xor
xchg
xor
js
in
or
mov
arpl
pop
lret
dec
pop
mov
push
xor
push
test
sub
mov
inc
jbe
lods
jl
xchg
cs
repz
sub
and
sar
cmp
push
xchg
shr
mov
into
and
das
repz
lock
jne,pt
xchg
js
mov
es
cmp
fcoms
aam
pop
je
inc
loope
addr16
add
jp
xor
int
and
xchg
dec
add
and
mov
adc
jle
add
cmp
mov
or
xor
sub
hlt
cs
repnz
pop
add
xchg
dec
test
cmp
jl
ja
inc
negb
xchg
or
add
movsl
sub
pop
out
inc
pop
fs
pop
mov
mov
pop
cmpsl
arpl
out
sar
push
lds
cmp
xor
cmp
addr16
in
cmp
xor
cmp
xor
cmp
mov
jb
sti
cwtl
loopne
stos
mov
lock
call
dec
pop
mov
sub
dec
scas
cmp
xor
sbb
sub
and
mov
popa
add
in
mov
lds
movsb
sbb
or
rorb
jno
push
cmp
cs
loop
jecxz
std
sbb
hlt
mov
xor
xor
lea
adc
pop
mov
fiaddl
arpl
push
cmpsb
fnsave
xor
mov
ss
cli
and
lea
testb
or
cmpb
lock
loope
dec
xlat
sub
jno
mov
or
loop
popa
scas
sub
mov
test
cmp
inc
daa
pop
push
fwait
into
adc
cmp
icebp
mov
ret
dec
and
xor
sbb
inc
cmc
mov
cwtl
dec
fldcw
add
dec
dec
xor
popl
push
ljmp
dec
shl
mov
adc
dec
dec
imul
daa
push
mov
js
jl
jo
cmp
push
xor
popa
xor
push
clc
out
loop
push
jp
mov
dec
mov
icebp
jle
jge
faddl
xor
jg
jae
fdivl
lcall
and
mov
imul
mov
std
sub
aaa
lods
push
out
bound
pop
inc
or
incl
mov
dec
icebp
in
mov
xor
add
pop
rorl
mov
cld
jns
jl
popa
clc
sbbl
arpl
xchg
stos
dec
push
sbb
sahf
test
push
lret
popa
in
in
xor
sbb
add
sbb
dec
cmpsl
adc
in
add
cltd
hlt
ss
popa
icebp
push
ret
mov
push
inc
pusha
fdivs
push
test
out
imul
movsl
clc
and
mov
cli
push
adc
jne
mov
jl
mov
xor
inc
jo
popa
inc
cwtl
push
jg
arpl
lock
es
pop
sub
repz
sbb
sub
std
xor
inc
pop
mov
inc
jb
sbb
jg
jno
dec
inc
and
ret
mov
mov
cmc
je
or
xor
mov
mov
sub
pop
inc
imull
and
sub
sub
iretw
cmp
outsl
cld
dec
push
fisttps
outsl
test
fldenv
jle
cmp
cltd
icebp
xor
lcall
xchg
sub
add
fistpll
dec
ja
jbe
fcompl
pushf
pushf
cld
mov
jne
das
push
js
mov
aas
imul
adc
xchg
into
lds
int3
int3
lock
std
push
jg
inc
mov
dec
add
push
insl
cmc
jb
or
inc
je
shll
mov
jle
jae
gs
push
imul
je
mov
or
sbb
xchg
mov
pop
push
mov
popf
andb
xor
aaa
jl
test
xor
xor
sub
sub
clc
mov
pop
or
out
stos
repnz
mov
adc
sbb
aad
test
sarl
add
fcoml
push
scas
pop
popa
cmp
inc
xchg
jge
adc
jg
push
jae
mov
push
mov
ljmp
xchg
or
pop
mov
jle
out
mov
test
sarb
in
jl
mov
outsl
pusha
and
mov
xor
stc
push
lock
enter
arpl
and
cmpsb
outsb
fdivrs
dec
into
mov
frstor
jne
test
outsb
inc
cmp
xor
sahf
test
pop
je
push
test
mov
int3
ret
sub
dec
xchg
repnz
dec
dec
mov
jmp
push
sbb
mov
or
es
jle
and
mov
jle
loope
mov
gs
cwtl
sub
ficomps
loope
stos
in
ret
cmp
jnp
daa
int
bound
inc
jae
push
ja
jbe
push
cli
into
notl
lock
lods
sbb
and
push
dec
push
daa
xchg
inc
mov
xlat
jbe
loopne,pn
sbb
stc
call
jno
adc
shl
xlat
inc
arpl
inc
sti
std
ds
pop
jle
jmp
xor
idivb
sbb
xchg
mov
test
mov
jbe
dec
orl
clc
cs
mov
hlt
fdiv
cmp
pop
push
jp
xor
jb
movsl
cs
icebp
adc
ds
sub
repnz
xchg
js
sbb
jns
pushf
sbb
stos
jle
stos
cmp
or
test
in
repnz
out
mov
jp
aam
and
xlat
arpl
int3
push
pop
or
cmp
jb
pop
mov
dec
xchg
or
dec
in
test
ss
ja
js
mov
jg
outsl
into
mov
push
xchg
rcl
ret
fldcw
dec
cmp
or
dec
das
orl
aaa
push
sahf
out
leave
jmp
idivl
xchg
ljmp
jnp
or
rorb
or
out
xor
jp
in
mov
push
inc
cmp
sbb
mulb
int3
mov
jle
mov
pop
mov
test
or
aas
add
cwtl
repz
adc
aaa
enter
mov
push
sahf
xchg
jae
push
push
andl
inc
fcompl
pop
iret
jle
jb
or
jbe
rorl
divps
mov
int3
imul
pop
sbb
jo
pushf
sub
mov
cmpsl
call
cmp
data16
scas
ja
mov
or
pop
iret
lcall
cmp
xchg
loopne
sub
and
addr16
jnp
xor
cmc
test
pop
jnp
lret
and
flds
addr16
scas
mov
pop
and
repz
into
jb
out
mov
lcall
adc
int
stos
jnp
cmc
mov
in
in
sbb
jae
rorb
lea
mov
outsb
add
imulb
pop
push
fimuls
lds
testb
sbb
lods
push
mov
sbbl
mov
xor
mov
mov
xchg
fwait
in
mov
jl
ss
sahf
pop
mov
mov
pop
cmp
in
lds
imul
push
add
mov
stc
lock
cli
cs
ds
inc
sbb
xor
mov
mov
lret
xlat
cmp
mov
leave
or
adc
leave
enter
sub
mov
mov
push
aaa
das
repz
mov
xor
mov
cmp
imul
adc
push
xchg
test
jno
jnp
stos
inc
fidivl
pop
push
or
sahf
notb
dec
xchg
popa
pop
push
sti
popa
pop
push
stc
popa
xor
clc
rorb
cmc
pop
cmpsl
or
test
ds
jp
insb
sti
pop
imul
js
mov
jg
lods
cmc
sbb
imul
xchg
jmp
shlb
xor
out
xor
stos
stc
pop
xor
icebp
lds
xor
push
call
or
jl
int3
mov
testb
cwtl
xor
sub
xchg
mov
inc
cmp
jae
lahf
insb
insb
adc
push
add
and
mov
mov
xchg
scas
jo
push
ss
push
mov
cltd
push
xor
xor
call
jne
lds
pop
and
jbe
pop
mov
jge
js
dec
imul
dec
push
push
xchg
jb
mov
ja
icebp
jle
insl
popa
repz
arpl
movsb
jl
xchg
aaa
idivb
jl
icebp
add
mov
mov
lea
mov
mov
adc
jae
loopne
jnp
std
cld
xorb
fnstsw
inc
jg
pop
xor
std
jno
and
jmp
sub
jg
call
jae
jecxz
dec
shrb
push
push
inc
fists
cmp
out
dec
push
out
and
test
jl
fs
push
xor
dec
sub
ss
jnp
jle
xor
dec
pop
aad
inc
aam
cmp
push
outsl
pop
stos
rcr
jno
push
jnp
clc
stc
insl
mov
std
outsl
sti
insl
divb
xor
gs
jecxz
jbe
scas
aas
jno
jae
sbb
call
daa
movsb
push
cmp
ss
mov
das
dec
out
dec
test
pop
mov
cltd
push
or
xchg
lahf
jmp
mov
inc
ja
popa
js
incl
jp
call
stc
and
mov
mov
or
xchg
jle
pop
ror
dec
sub
fcomps
jg
push
cltd
rcl
fldl
push
leave
fs
cmp
icebp
or
lock
pop
notl
jno
js
push
cmpsb
fidivrl
lock
dec
or
jecxz
push
sub
mov
in
adc
jae
cli
mov
pop
sbb
push
icebp
addr16
test
lock
arpl
add
repz
imul
xor
dec
cs
xchg
mov
daa
push
xchg
les
jg
adc
push
repz
mov
sub
sub
inc
xchg
inc
dec
fucomip
imul
icebp
add
jl
cmpsl
cwtl
mov
xor
idivb
pop
jno
repnz
testb
cld
stos
pushf
rorb
mov
dec
xchg
pop
pusha
pop
sbb
mov
dec
jge
cmp
push
mov
jbe
dec
jne
cmp
push
sub
mov
and
popf
das
mov
test
xchg
std
push
repz
pop
mov
xchg
inc
ds
daa
in
mov
cltd
cmpsl
push
cld
movsl
in
sbb
in
push
add
clc
cmp
xor
je
lock
popf
inc
jb
repnz
sub
lock
or
jb
scas
hlt
mov
xorl
jge
aaa
ss
add
cltd
pusha
dec
push
inc
mov
jmp
cld
cmp
mov
add
outsb
mov
out
and
and
mov
mov
or
test
xor
mov
cmp
xchg
lret
push
xor
out
sahf
notb
mov
insl
insl
test
and
inc
out
pop
jnp
rcll
arpl
sub
jg
pop
lahf
or
test
popa
fcoml
pushf
mov
jb
sub
lea
int
push
mov
push
dec
xchg
sbb
jne
je
pop
sgdtl
call
push
nop
jbe
jge
jns
loop
mov
adc
outsb
inc
xchg
xchg
and
insb
cltd
das
bnd
stos
or
lds
jmp
popa
mov
cmp
loopne
bound
and
aam
mov
fldcw
les
out
stos
cmp
insb
popw
outsl
stc
adc
imul
adc
jge
mov
jno
daa
loop
xchg
or
xchg
cld
inc
pop
test
cmp
sub
cwtl
ror
or
jle
stos
fdivrl
sub
cs
dec
sub
jge
hlt
scas
cmp
movsl
xchg
jns
repz
mov
sub
les
pop
ret
ret
mov
xor
push
pop
lret
sahf
leave
in
push
outsb
es
inc
mov
or
dec
and
inc
xor
xchg
arpl
mov
mov
mov
cmpsb
cmp
mov
mov
movsl
jb
out
rcrl
out
push
out
je
pop
sbb
cltd
mov
inc
ljmp
cli
mov
or
dec
cmpsl
sbb
adc
mov
xor
xor
clc
adc
push
pop
xor
cmp
insb
pop
mov
andb
scas
es
popf
push
lahf
call
imul
loopne
xor
push
fcmovne
data16
xchg
add
int
pop
mov
cmp
sbb
in
aam
cmp
rclb
test
xor
mov
and
xor
stos
lret
xorb
sub
sbb
xor
cmpsb
fcomi
sahf
enter
stos
xor
mov
enter
and
jo
jg
xchg
mov
and
inc
fs
and
daa
stc
xor
je
jge
cmc
int3
push
sbb
mov
sub
aas
mov
push
or
daa
push
jbe
jge
test
ja
sub
loope
add
in
dec
push
popl
jb
and
addl
mov
push
ja
or
adc
sbb
push
sub
gs
add
push
push
cltd
outsl
xchg
adc
pop
aam
add
push
push
cmp
add
cmp
stos
test
ljmp
out
pop
cmp
pmullw
mov
mov
mov
lahf
popa
ret
insb
icebp
cmp
ror
aaa
jb
loope
mov
mov
insl
dec
repnz
imul
mov
and
arpl
cmc
mov
repnz
jne
mov
bnd
mov
lahf
int3
mov
cmc
cmp
and
pop
xchg
add
ja
popa
pop
jno
mov
cli
icebp
mov
je
lcall
push
or
fnstenv
jg
inc
mov
pop
or
adc
in
mov
movsb
fdivs
outsl
fsubs
aas
xor
aam
sub
inc
leave
outsb
cmp
test
pop
sub
out
xor
lock
jle
pop
mov
sbb
push
mov
shlb
ret
imull
or
mov
movsb
jbe
movsl
outsl
aad
stos
pop
inc
mov
arpl
pop
loop
cmp
shl
inc
rcll
and
movsb
aad
rcrl
cmp
popa
mov
iret
movsb
cmp
jno
jmp
scas
sbb
push
xor
jge
xchg
xor
mov
jo
jmp
jle
scas
and
aam
xchg
push
dec
xor
dec
jno
dec
pushf
push
cmp
hlt
sub
xchg
adc
xor
insl
inc
sahf
popf
out
adc
inc
filds
push
nopl
inc
pop
rcrb
mov
jns
add
insl
cmc
mov
sbb
vmread
jns
daa
rcl
imul
leave
sub
pusha
sbb
jbe
sub
sub
aad
ja
cmp
les
insl
mov
iret
hlt
mov
xchg
or
lret
fadds
xor
mov
xchg
mov
adc
xor
adc
pop
fisubl
data16
fsubrs
sahf
gs
adc
cmpb
adc
loop
pop
pop
fnsave
insb
sbb
in
sub
sub
out
and
pop
adc
lret
adc
mov
jo
fisttpll
insl
mov
jg
inc
xor
mov
jge
pop
inc
jmp
jo
and
jno
xchg
mov
stc
jo
arpl
jnp
in
orl
rol
cmp
pop
adc
dec
add
jge
pusha
insl
cmc
cmp
loope
cmpsb
adc
inc
add
les
or
push
xor
sbb
adc
and
sub
cmp
jmp
aas
xchg
xchg
sub
xchg
mov
adc
gs
das
leave
mov
arpl
mov
pop
divl
jmp
insl
and
lea
push
les
lds
sarl
fsubr
in
aas
in
popf
cmp
mov
mov
hlt
addb
sub
inc
pop
test
push
inc
cmp
cmp
shlb
mov
cltd
cmp
mov
mov
push
lock
jo
gs
imul
xor
pop
pop
pop
addl
xor
dec
sbb
cmp
inc
mov
hlt
icebp
mov
pop
and
out
mov
hlt
jge
sub
andl
pop
ds
decl
cmpl
mov
or
repnz
add
aam
call
xchg
test
divl
adc
mov
nop
mov
xor
xor
pop
xchg
in
mov
xchg
daa
push
test
and
test
mov
adc
scas
jns
movsl
push
sub
cmpsl
mov
ss
mov
mov
mov
popf
mov
jmp
divl
cmp
in
mov
xchg
inc
push
enter
lret
enter
mov
mov
adc
or
into
shlb
cmp
push
dec
in
fnstcw
aaa
mov
hlt
jge
das
sub
es
push
std
xchg
mov
push
icebp
sub
repnz
jb
enter
lret
xchg
jo
jl
adc
and
and
nop
xchg
aaa
xlat
insb
pop
frstor
gs
cmp
adc
in
shrl
les
inc
pop
lods
aaa
jo
cmp
xor
cwtl
push
add
imul
dec
test
pop
sbb
xor
or
dec
adc
sub
jnp
jo
repz
int
outsb
sbb
std
movsb
mov
dec
xlat
aas
mov
iret
adc
mov
adc
decl
cmp
jb
int
and
mov
loopne
jg
cmp
jg
add
dec
jns
in
pop
and
cmp
xchg
adc
adc
push
and
cmp
sti
in
jno
mov
adc
add
mov
xchg
xlat
push
pop
fnstsw
js
cmp
xor
loop
cltd
sub
lret
sti
xchg
jge
push
std
roll
jae
addr16
and
push
and
cmp
lods
mov
and
addr16
pop
lds
cmc
adc
loope
lock
sub
scas
xchg
jno
jp
mov
cltd
sbb
sub
in
cs
lcall
jb
jbe
xchg
sub
sbb
cld
jmp
mov
shl
xchg
and
out
xchg
subl
out
repnz
js
cmp
sbb
leave
ljmp
insl
sub
mov
jbe
cmp
xchg
or
push
adc
adc
sti
mov
nop
int
cmpsb
test
cmp
mov
adc
jns
shll
aaa
sti
daa
inc
std
fcomi
and
js
add
imul
lock
hlt
ja
decb
leave
jo
arpl
aas
int
cli
clc
outsb
das
adc
jno
popa
push
pop
sub
cmp
inc
inc
jmp
mov
jo
mov
sbb
mov
mov
or
cmp
dec
stc
std
sbb
push
jmp
in
and
inc
arpl
outsl
adc
and
fs
and
add
xchg
cmc
dec
xchg
jp
rorb
mov
je
or
sbb
fwait
and
pop
dec
lret
jbe
out
push
cmp
mov
adc
lret
mov
cs
pusha
lods
pop
mov
mov
sbb
sbb
outsb
std
mov
adc
mov
push
imul
push
daa
xchg
jg
mov
mov
jl
jg
fisttpl
jle
test
push
dec
js
mov
jno
pop
imul
add
pop
adc
mov
jo
icebp
mov
cli
and
scas
mov
xchg
hlt
jo
jb
push
add
xchg
and
fimuls
js
es
dec
jne
xchg
jp
repz
arpl
addb
dec
add
xorl
dec
or
jne
cmc
cltd
sub
cli
and
rclb
jbe
cli
ja
mov
xor
mov
xchg
sub
cltd
fisttps
ja
pop
hlt
sti
xchg
mov
addr16
insl
popf
push
out
cmp
rcrb
clc
adc
adc
jmp
fisubl
jns
mov
inc
sahf
cmc
inc
push
inc
repz
stos
sub
in
pop
dec
dec
jo
jnp
inc
fs
das
scas
jnp
sub
jae
js
test
inc
mov
sub
call
mov
cmp
icebp
pop
mulps
movhps
jle
fisttpll
scas
lds
mov
xchg
and
push
in
pop
sub
fdivs
cmpsb
test
push
and
add
mov
cwtl
popf
into
in
xchg
gs
push
dec
pusha
dec
pop
icebp
xchg
fdivrs
fdivrl
clc
push
bound
mov
push
sahf
pop
cs
rcll
movsb
cmp
cmc
add
stos
inc
xchg
idivb
popf
movsb
sub
cmp
xchg
addr16
dec
add
inc
jnp
icebp
xor
mov
inc
stc
test
lret
cmc
and
outsb
filds
out
sbb
jl
rcll
xchg
ljmp
add
mov
add
fildll
std
xor
inc
fidivrs
sub
lahf
sbb
push
int3
cld
lods
aad
rorb
in
mov
jg
pop
stos
inc
jae
xchg
xchg
loope
fcmovu
xorb
arpl
mov
add
push
pop
sbb
xchg
sub
xor
mov
jne
jecxz
xchg
cmpsl
push
outsl
push
negb
imulb
push
mov
push
fiadds
fwait
imul
mov
pop
mov
add
cmpsl
xor
jns
mov
clc
in
js
sarb
inc
in
inc
mov
jne
aad
xchg
imul
jp
mov
data16
push
getsec
test
jp
mov
mov
nop
mov
add
mov
pop
push
push
xchg
push
sbb
jae
xchg
in
cmp
jnp
insb
cmc
ret
mov
mov
jae
packsswb
cmp
sarl
mov
jbe
mov
xor
cmpsb
call
xchg
addr16
jmp
pop
ret
dec
icebp
lods
mov
clc
mov
aad
lods
adc
sub
xor
out
int
mov
inc
fiadds
or
int
outsl
push
mov
pop
jnp
outsb
or
and
push
pop
js
test
push
push
scas
sbb
jge
mov
or
rorl
and
mov
das
or
mov
lock
and
mov
leave
push
adc
movsl
and
push
arpl
push
and
inc
push
imul
lret
cli
ret
popa
pop
pop
xchg
add
push
jg
lea
ja
pop
sbb
out
jge
and
out
xchg
pop
jae
das
cmp
outsl
add
jl
push
sti
shlb
push
xor
je
mul
jg
mov
cmp
xor
lods
fldl
das
loope
jmp
or
cmp
rcll
sarb
fs
fwait
mov
es
xchg
daa
das
jne
js
stos
lret
cltd
daa
es
and
fimuls
push
mov
and
mov
bnd
fldenv
push
sti
push
fs
js
mov
movb
out
jne
or
dec
mov
loope
das
xchg
dec
jno
aad
mov
lahf
add
add
stc
ja
pop
pop
dec
clc
jl
or
insb
or
lret
pop
or
pop
outsb
xor
add
mov
and
pusha
mov
psraw
jo
mov
sarl
mov
pop
dec
xchg
xchg
jecxz
popf
dec
addr16
adc
rcl
mov
test
movsl
mov
inc
pop
xlat
cmp
cmc
dec
mov
jecxz
repz
repz
cmp
jo,pn
sarl
dec
insl
testb
int
adc
cs
mull
push
fs
data16
push
flds
jb
pop
lret
add
adc
cmpl
cmpl
cwtl
and
inc
stc
rorl
xorb
mov
sub
mov
pop
cmpsb
std
les
push
cmpsl
mov
xchg
addr16
inc
sub
jns
shr
cmp
and
mov
xchg
gs
enter
pusha
pop
lock
sub
adc
pop
and
cmp
push
adcb
ljmp
loop
lods
jns
or
push
sub
xlat
or
pop
fidivrs
push
mov
icebp
mov
pop
add
sbb
imul
xchg
lret
push
mov
icebp
ror
popa
inc
add
nop
scas
arpl
repz
add
inc
js
xor
jbe
mov
cli
dec
testb
pop
sbb
adc
in
jl
sbb
xor
icebp
xor
push
imul
insl
mov
lret
and
mov
jo
movsb
cld
jp
or
add
adc
mov
lea
push
jo
rcrl
int3
xor
jns
and
pushf
insl
es
xor
fyl2xp1
xlat
push
lcall
push
mov
xlat
cmp
mov
mov
xchg
ja
notb
lret
cmp
add
cmp
cmp
pop
mov
xchg
testb
repz
mov
dec
xor
mov
cmp
lods
outsb
sti
push
sub
and
lret
lods
inc
insl
sarl
sub
xchg
lock
cmp
jp
mov
dec
xchg
push
les
mov
lods
lret
aad
fistpll
dec
push
jmp
xchg
fs
fisttps
cmp
cltd
push
outsb
jge
mov
je
stos
xchg
lcall
xchg
jecxz
dec
repnz
call
into
lods
xchg
pop
mov
leave
mov
mov
lods
mov
into
lods
in
mov
push
cmpsb
add
inc
jae
movsb
movups
or
cld
scas
sbb
add
mov
xor
out
testb
mov
dec
push
jne
mov
xchg
cld
cs
test
outsb
fbstp
movsb
out
push
xchg
jnp
jmp
call
xchg
test
dec
inc
in
sarl
outsl
insl
mov
push
jae
testl
mov
lds
icebp
xchg
pop
out
sub
adc
dec
addb
xchg
psllw
daa
xor
xchg
stc
mov
clc
jg
dec
adc
subl
fmull
pop
sarl
fnstsw
subl
test
jno
xor
shr
punpckhdq
daa
fcoms
roll
popf
dec
mov
cmp
add
mov
aaa
add
jecxz
or
out
js
and
mov
sbb
push
dec
jge
or
jnp
lret
stos
out
dec
inc
xor
xchg
int3
xchg
inc
rcl
xchg
push
push
stos
jl
stos
insb
clc
sbb
or
jle
or
dec
push
sbb
add
jae
gs
lret
addr16
scas
xor
or
insb
push
lock
jnp
push
pop
lcall
xor
inc
cmp
je
jle
int3
dec
mov
jo
mov
fcmovbe
sub
xchg
lret
mov
mov
push
out
xor
shl
leave
ss
dec
jge
inc
in
add
arpl
adc
imul
hlt
mov
jns
push
cmp
push
imul
jmp
ja
adc
jb
or
push
dec
jecxz
movsb
jge
pushf
mov
xor
fstps
mov
dec
decb
inc
cmpl
jl
imul
arpl
xchg
cmp
jle
xor
jg
cmp
ja
or
cmpl
xorb
or
imul
push
mov
or
xorb
addl
out
add
inc
mov
ljmp
out
ficoml
pop
sbb
jge
inc
addl
push
insl
jg
jne
popf
out
push
or
dec
lcall
mov
cld
repnz
fidivrl
inc
lret
or
pop
push
xor
es
shlb
push
call
in
or
popf
xor
pop
ret
jo
push
inc
pop
int
inc
ret
in
push
repnz
les
and
dec
into
ficompl
mov
pop
andb
aam
mov
xchg
fwait
adc
xchg
sub
popa
out
jbe
adc
std
imul
pop
dec
cld
cmpsl
scas
inc
aad
or
xchg
mov
jae
subl
mov
popa
dec
hlt
cmp
outsl
int3
mov
repnz
push
into
mov
adc
test
sbbl
cmpsl
gs
mov
sub
stc
mov
adcl
xor
test
out
mov
daa
jne
or
jl
pop
loop
mov
sahf
in
mov
pushf
popf
jp
jns
inc
outsl
push
jmp
mov
testb
lock
pushf
add
inc
dec
xchg
divps
mov
mov
outsl
jno
fs
inc
add
xchg
insl
push
mov
popa
movsl
ret
out
rclb
jecxz
or
jge
clc
mov
sbb
imul
xor
xor
push
cmp
sbb
dec
jae
js
aad
jne
jp
lret
push
in
and
icebp
xchg
lahf
in
mov
cmp
jno
or
cmovne
divl
mov
fnstsw
clc
scas
inc
lret
cli
jnp
cmpsl
sar
pop
cmp
divb
dec
push
push
jno
jbe
push
enter
adc
movsb
test
rclb
jne
fdivrp
adc
clc
or
mov
sbb
push
jle
sbb
dec
dec
xor
xor
fidivs
and
dec
cmpsb
push
ss
icebp
sub
cld
jnp
xchg
lods
push
xor
insl
test
mov
sarl
sub
mov
popf
aam
ret
lret
dec
arpl
jg
jns
loopne
pop
lock
fdivrs
stos
lds
mov
ja
lcall
push
jecxz
mov
les
xchg
jmp
jno
xlat
mov
ret
fwait
sub
call
push
sub
pop
das
sbb
or
jge
jno
mov
adc
add
push
inc
adc
arpl
xchg
je
sti
xchg
jp
les
xor
add
add
pop
jl
jbe
xor
mov
jl
loopne
outsb
xchg
dec
jl
xchg
mov
fmull
mov
std
sub
sub
push
fnstsw
insl
insb
cmp
je
je
in
mov
push
sbb
sbb
add
sbb
push
std
jo
jbe
lea
loop
cld
or
repz
and
ja
xchg
iret
jge
loope
cmc
xor
leave
movsb
shrb
sti
je
add
jp
call
push
popa
cmp
and
sahf
lds
mov
test
jg
insb
sub
jnp
aaa
sbbl
jbe
test
dec
cmc
incl
jmp
insb
dec
inc
adc
data16
icebp
test
in
xchg
loop
ljmp
outsb
xorl
lret
inc
pop
xchg
pop
inc
cmp
fnstsw
and
loopne
cs
cmp
pop
mov
and
dec
daa
add
adc
out
ret
mov
fwait
ja
imul
mov
pusha
jns
std
js
add
xor
movsb
mov
les
and
out
mov
cld
daa
sub
loop
shll
adc
in
dec
aad
mov
xor
jg
ret
xor
cmp
lea
out
xchg
sub
mov
cmp
rcr
adc
arpl
rcrb
icebp
arpl
out
pop
pop
addr16
lea
pop
jp
insb
xlat
sub
loopne
fldcw
push
jmp
es
in
sub
jnp
jle
rclb
outsl
jl
mov
es
in
add
test
insb
or
dec
mov
cmp
pop
mov
aam
shll
movsb
adc
mov
cmpsb
jge
repnz
cmc
imul
push
cmpsl
and
dec
pop
jnp
push
push
stos
cmp
jne
and
lds
lea
sbb
scas
mov
adc
mov
push
push
mov
cmp
pushf
test
or
push
sbb
enter
rolb
subb
je
mov
jl
aaa
cltd
dec
or
data16
add
jne
pushf
cmpsl
mov
jno
imul
imul
adc
inc
gs
ds
pop
xor
push
dec
xchg
jae
jnp
push
ljmp
scas
mov
int3
mov
lret
push
loopne
lea
xor
scas
insb
xor
push
inc
xor
mov
ffree
mov
sbb
jge
call
pop
sub
out
int3
bound
mov
mov
mov
jns
je
pop
dec
and
push
dec
data16
movsb
jecxz
pop
addr16
or
lret
push
jge
mov
sub
les
iret
outsb
rcrl
in
jno
jbe
sbbl
xchg
mov
sbb
out
mov
std
ret
add
stos
or
mov
out
mov
mov
setns
xchg
or
pop
mov
fdivs
lds
add
daa
bound
idivb
xor
push
or
std
xor
cmp
orb
xchg
iret
xor
jb
xor
mov
pop
jae
jo
fdivrp
push
sbb
dec
pushf
push
jno
push
jecxz
fsubs
test
mov
adc
pop
jae
test
int
iret
or
dec
idiv
xchg
pop
leave
jecxz
pop
mov
out
gs
mov
popa
cmpl
and
ja
rorb
jg
jp
stc
sbb
jo
ret
mov
iret
repz
mov
cmp
enter
jbe
inc
sbb
cli
cmp
jbe
push
push
dec
fisubrl
repnz
jg
in
pop
jno
mov
xchg
or
popf
pusha
hlt
lock
rcrb
mov
ss
enter
pop
loope
gs
mov
jne
out
mov
push
add
pusha
mov
outsb
popa
ret
popf
insb
mov
pop
push
and
stos
xchg
dec
mov
jg
mov
out
das
push
jecxz
jl
xor
data16
test
call
out
inc
mov
mov
hlt
lods
movsb
lret
sbb
fldcw
mov
xchg
mov
fistps
lods
pop
jp
lea
xchg
mov
push
push
js
jo
adc
mov
js
shr
mov
mov
pushl
dec
jns
call
jle
enter
mov
cmpsl
push
cmc
outsl
jno
sar
test
pop
adc
pushf
push
fnstsw
pop
js
leave
mov
pop
xor
push
insb
and
test
das
bound
imul
push
pop
adc
aas
xor
dec
jb
pop
and
nop
orb
test
pop
aas
pop
vpmacssdqh
repnz
xor
in
fisttpll
jbe
xlat
or
jge
xor
fs
push
cli
inc
leave
aam
je
xchg
popa
add
testb
outsl
mov
xor
loope
adc
psubw
rcr
and
pop
pusha
cmp
add
xchg
jne
cltd
xor
jge
pop
fidivs
xor
dec
xchg
fiaddl
inc
mov
sti
mov
daa
lret
cs
mov
scas
sub
push
and
push
aad
pop
mov
mov
test
ja
bound
ret
loope
ja
xchg
sahf
dec
push
jb
and
xor
movsl
sbb
jge
cmp
jb
sub
ds
jae
sahf
idivb
cltd
mov
add
in
movsb
xorl
insb
sti
addb
mov
xchg
fs
ret
push
aam
jg
test
jno
shll
aad
cmc
or
xor
push
cmp
outsb
roll
std
lds
gs
outsl
movsl
or
xor
outsl
pop
in
push
adc
lret
dec
push
arpl
push
jg
hlt
jl
mov
xor
lea
xchg
jb
aas
pop
jl
in
mov
or
and
jg
dec
adc
les
lock
pop
cmpsb
fildll
sbb
fsts
loop
lds
or
adcb
xor
mov
in
sbb
in
fdivl
test
addr16
push
mov
xchg
lds
out
jne
inc
xchg
cmp
jnp
dec
push
enter
jno
adc
aad
mov
mov
mov
adc
insl
ss
icebp
dec
loopne
sub
insl
sub
mov
xchg
pop
repnz
sahf
dec
xchg
rcrb
pop
ljmp
pop
xor
jmp
popa
mov
or
jp
jb
je
jl
std
jne
cli
js
jnp
pop
jmp
add
xchg
aad
test
hlt
jmp
popa
jb
sbb
insb
inc
jne
outsl
aad
imul
inc
and
testb
std
outsl
cs
aaa
test
addr16
mov
jo
sub
cmc
add
lahf
shll
mov
clc
mov
pop
inc
mov
ficoml
xchg
add
jo
adc
jp
movsb
loope
push
dec
int3
test
or
lds
pop
cld
jmp
pop
aaa
inc
cmp
dec
fnsave
shlb
sub
xor
xor
xor
cld
out
mov
lods
sbb
sbb
out
in
mov
aas
stos
in
in
push
mov
in
jns
std
jmp
mov
xchg
sbb
pop
in
notb
iret
hlt
call
lods
cmp
xor
xor
dec
or
xchg
adc
or
pop
test
add
inc
and
jecxz
sbb
imul
aad
sub
mov
fdivs
add
sbb
lea
xlat
mov
imul
cli
lcall
push
scas
pop
inc
ret
lret
std
and
xor
push
stc
adc
mov
subl
or
lods
add
sar
inc
cmp
pop
cld
andb
xor
int
stos
push
cld
cmc
xchg
xlat
cli
rcr
mov
lret
jae
push
je
mov
jo
fdivr
mov
jmp
test
sub
adc
imul
shll
xor
pop
jge
mov
xor
push
jecxz
rcrb
or
jl
call
push
pop
xchg
or
mov
addr16
jo
ljmp
popa
je
insb
mov
xor
fildll
gs
ja
test
add
jecxz
stc
orb
xchg
push
mov
es
lea
sbb
dec
imul
cmp
cld
mov
jle
add
add
or
divb
std
cwtl
push
mov
pop
pop
push
repnz
xor
mov
je
cld
add
xor
xchg
jne
js
ja
outsl
ud0
repnz
int
and
ja
cmc
lret
cmp
xor
mov
sub
dec
mov
xor
popa
dec
and
lock
insb
call
fisttps
pop
xor
daa
cmp
xchg
and
jne
imulb
xchg
jp
insb
fiadds
push
add
in
inc
scas
fcomi
dec
xchg
or
adc
mov
shl
mov
lods
dec
sbb
outsl
mov
roll
sub
push
js
loop
pop
jno
cmp
add
arpl
aas
xchg
add
test
out
insl
fcmovbe
add
cmp
xchg
sahf
push
test
shlb
xor
pusha
or
subb
inc
in
inc
jbe
add
mov
jae
and
pop
in
aas
icebp
xor
imul
int
pop
cli
mov
jmp
sub
mov
push
add
adc
data16
in
mov
aaa
pop
add
mov
repnz
jl
xor
in
pop
popf
xor
mov
fistps
xchg
imul
hlt
jae
neg
imul
mov
add
loopne
or
outsb
jl
faddl
jle
pop
jb
xor
pop
in
sbb
xchg
mov
mov
shlb
fisttpl
loope
inc
push
iret
mov
enter
gs
jmp
pop
push
or
and
dec
jb
in
std
imul
ja
ds
fildll
fsts
movsl
in
or
sub
das
cmp
mov
incl
outsl
call
sub
pop
inc
in
cltd
push
outsl
push
rcrb
sahf
imul
push
pop
icebp
mov
mov
je
or
pusha
pushf
mov
cmp
pop
andb
push
sbb
jecxz
xchg
push
fdivrs
arpl
xor
ja
imul
mov
or
insl
xchg
sub
mov
mov
jbe
outsb
rcrb
mov
out
outsb
popa
pop
stos
pop
push
nop
push
xlat
sbb
add
or
pusha
stos
int
aaa
nop
push
shlb
ds
jp
mulb
jge
sti
repz
ret
jnp
call
aas
adc
pop
insb
jp
popf
xlat
jae
enter
faddl
stc
mov
out
icebp
push
mov
push
sbb
jg
lods
jno
pop
pop
inc
xchg
test
lods
cmpb
dec
faddp
sbb
movsl
repz
jmp
call
xorl
cmp
loope
push
test
mov
lahf
mov
call
ret
xor
inc
sbb
outsl
xor
push
es
xor
mov
dec
cmp
daa
adc
xchg
jae
adcb
insb
lea
loopne
call
pop
popa
pop
jge
insl
fld
test
fidivl
into
test
mov
ret
lahf
mov
loope
mov
ja
fcomps
sub
xchg
sbb
pop
adc
loopne
jmp
lcall
sbb
jnp
jl
jmp
xor
dec
cs
mov
into
insb
rorb
movsb
push
ret
shrl
addr16
xchg
sub
pop
pop
ret
sub
outsl
xchg
mov
mov
jns
das
xchg
pop
test
es
dec
sub
xor
push
or
push
pushf
cmp
mov
das
or
xchg
cmp
inc
xchg
jo
xor
push
push
das
aas
negl
shrb
repz
mov
shll
adc
sbb
lds
cmp
in
pop
fs
xchg
call
push
mov
outsb
sub
in
dec
cmp
cmp
xchg
outsb
lods
push
scas
xor
in
xor
adc
cmp
add
jle
imul
push
xor
pop
push
cltd
ja
imul
insb
xor
je
xor
lahf
dec
mov
dec
js
jg
mov
lret
xchg
cwtl
dec
roll
test
das
cmc
test
adc
dec
jne
rolb
int
xor
pop
jae
pop
jns
jo
push
sub
int
sub
jns
pop
dec
pop
inc
push
in
and
shr
jge
mov
in
mov
fnstenv
jnp
in
xor
in
push
pusha
in
cld
mov
jmp
stc
jle
xor
cmp
jo
cld
inc
xor
jle
xor
cmp
dec
or
imul
sbb
xor
cmp
sbb
dec
mov
xor
insl
mov
popf
pop
lret
pop
gs
sti
xchg
sbb
imul
int
jne
popf
jo
pop
lcall
pop
pop
gs
shlb
imul
and
daa
dec
jnp
pusha
fildll
inc
jle
insl
out
push
popa
push
lock
jg
dec
sbb
clc
imul
mov
pop
lods
ret
mov
mov
cmpl
sub
mov
mov
scas
lock
jg
add
std
xor
dec
inc
sarb
int3
fdivrs
stc
and
jno
fidivrl
hlt
mov
cwtl
cmc
mov
int3
cli
stc
dec
stos
popf
lds
lahf
aaa
adc
push
out
xor
mov
add
mov
icebp
cmp
in
inc
jl
sar
jl
mov
sub
mov
jne
xor
es
fsubrs
add
les
aaa
cmpsb
jp
mov
xchg
xorb
xor
or
enter
xlat
movsb
xor
rorb
lods
mov
mov
out
nop
rclb
push
mov
lret
bound
aaa
or
sahf
cmp
jo
cmpl
pop
mov
leave
mov
aad
or
cs
jmp
je
mov
or
xorl
mov
shll
xor
cmp
xlat
or
pusha
insb
mov
push
add
xchg
cmpsl
jnp
add
out
push
int3
mov
mov
sbb
shr
fst
lret
or
jnp
lret
jmp
repnz
mov
jge
pop
movsl
pushf
into
push
scas
or
test
or
mov
push
adc
push
aad
mov
mov
addr16
inc
leave
xor
outsb
test
repz
mov
mov
sbb
leave
ds
das
add
cs
push
test
mov
mov
repz
mov
fsubl
repz
stc
test
sbb
pop
repz
je
mov
or
shl
push
inc
and
and
out
icebp
xchg
cld
jl
shrl
mov
out
rorl
hlt
xchg
fsubrs
orb
xchg
jmp
jns
inc
mov
scas
adc
sbbb
lods
sub
xor
ljmp
jno
jecxz
adc
movsb
sub
cmp
imul
sub
xor
jno
lods
jae
lahf
cld
call
aas
testb
jno
adc
mov
xor
jl
xor
jb
ja
outsb
adc
xor
icebp
ljmp
arpl
inc
imul
mov
add
je
sti
mov
icebp
imul
in
insl
xchg
xlat
insl
insl
jns
aam
popf
pop
push
push
push
and
jp
push
test
jns
cmp
and
cmp
xor
xchg
push
xchg
xchg
mov
push
paddd
push
adc
inc
cltd
ja
pmulhuw
sahf
lods
push
arpl
adc
xchg
pusha
subb
cltd
insl
loope
aas
stos
fsubrl
sub
jne
cmpb
inc
push
inc
dec
push
fs
xor
cmp
mov
pushl
pop
imul
push
iret
fisubl
mov
mov
mov
push
stos
push
and
pop
gs
jb
add
call
jnp
outsb
icebp
jnp
add
jge
imul
or
jnp
add
adcl
sub
and
cmp
xor
movsl
fs
mov
mov
dec
sbbl
jae
mov
lods
jo
add
xor
add
jo
andb
inc
gs
push
mov
subb
cwtl
jmp
cmc
xchg
mov
push
mov
cs
mov
cli
mov
loope
adc
xlat
test
or
xchg
sbb
js
hlt
xchg
hlt
sbb
sbb
fidivrs
mov
bnd
ja
jne
loope
bound
jp
jg
sub
scas
imul
fs
bound
cmc
pop
ja
in
inc
scas
xor
bound
fs
jnp
push
or
dec
push
aaa
and
enter
cld
and
fsubrl
sbb
xor
xor
and
scas
push
pop
xchg
insl
bound
sbb
bound
jg
push
xchg
dec
jae
in
sahf
adc
xchg
jno,pn
jmp
and
popf
mov
in
push
mov
mov
mov
out
xor
dec
in
cmp
and
cli
je
imul
loope
int
stos
mov
ja
sbb
gs
pop
int
test
mov
clc
test
jmp
test
adc
fwait
and
loopne
cli
adc
sub
jmp
fnstsw
dec
in
decl
popa
pusha
clc
sbb
xchg
mov
mov
aaa
push
mov
xor
jg
jno
loope
xor
adc
sub
add
jbe
add
inc
sti
jle
sbb
das
mov
subl
dec
push
sub
cmc
adc
lcall
sbb
addr16
insl
cmp
fstps
popa
ja
mov
adc
sbb
jns
sub
in
cmp
filds
imul
nop
dec
mov
repnz
aam
call
mov
pop
lcall
mov
aaa
xchg
pop
add
mov
sbb
popf
mov
or
out
pop
leave
mov
mul
cs
test
jg
pop
or
mov
adc
sub
jns
cmp
in
dec
mov
jge
fldl
xchg
out
mov
jne
es
shll
shlb
jecxz
xchg
ja
test
xchg
das
xlat
inc
lret
pop
pop
daa
sub
inc
mov
dec
and
sbb
push
mov
or
and
in
dec
add
daa
push
push
pop
push
push
inc
rclb
cs
cmp
mov
pop
cli
mov
sub
and
and
stos
inc
aaa
insb
sbb
jbe
lods
xchg
push
jg
loope
dec
cmp
in
pusha
hlt
nop
jne
cmp
out
es
fs
inc
sub
inc
bound
jnp
add
iret
js
in
cmp
les
fdivr
ja
mov
mov
addl
and
xchg
sub
inc
adc
or
and
sbb
leave
push
inc
jnp
add
popa
xlat
fistl
sbb
sub
fsts
cmc
aam
in
addr16
add
ror
clc
clc
icebp
loop
sub
or
jmp
ficoml
leave
imul
sbb
jne
push
insl
xor
add
dec
hlt
test
push
movsl
lock
xor
movsb
loopne
hlt
fisttpl
outsb
mov
pushf
mov
dec
icebp
or
or
pop
inc
or
hlt
inc
je
mov
addl
ljmp
cmp
push
out
jl
pop
inc
xchg
in
pop
sub
lret
sub
dec
idivl
xchg
xlat
jmp
stos
dec
jbe
mov
mov
xor
xor
adc
movsb
add
or
jg
call
imul
sub
xchg
dec
in
push
shlb
sbb
clc
add
mov
cmpsl
xlat
mov
push
dec
pop
and
xchg
jbe
pop
nop
fnstcw
and
sub
sbb
push
cmp
daa
js
xchg
jbe
test
mov
insl
icebp
lcall
ds
sbb
jnp
jg
ret
xchg
loop
pop
cld
jno
and
cmc
pushf
adc
sti
jl
cmc
jge
aas
imul
jl
loope
imul
cli
jne
mulb
push
pop
int
insl
mov
jae
push
add
enter
testb
sbb
push
das
int3
xlat
hlt
mov
mov
xchg
sbbl
decb
jge
into
lock
dec
in
out
add
in
mov
jo
push
mov
add
push
es
imul
inc
es
dec
in
and
mov
or
pusha
pop
daa
xor
cmp
sbb
cli
aas
out
iret
lods
insl
ljmp
ss
sbb
lds
mov
cmp
add
sbb
mov
sbb
insb
cmp
clc
bnd
decl
bound
and
sbb
mov
sbb
jg
sahf
sti
ret
adc
push
mov
loope
adc
or
out
add
call
imul
insb
arpl
add
mov
jge
stc
insl
mov
leave
imul
dec
sub
cli
jnp
and
jb
inc
xor
mov
push
out
jnp
nop
push
mov
push
test
xor
cmpsl
pop
push
aad
pop
inc
aaa
ret
fsubrl
stos
xchg
mov
cmc
test
push
call
inc
pop
daa
fs
cld
cmpsl
push
pop
cmpsb
dec
ja
bound
sarb
inc
into
lea
adc
ss
loop
aam
fmuls
repnz
xor
in
imul
aas
je
sti
loop
or
fimull
outsb
lcall
mov
ret
pop
push
xchg
cmpsl
sbbb
mov
push
sbb
imul
pop
jmp
xlat
lret
jb
dec
in
inc
arpl
test
xchg
std
fisubrs
movsl
jp
insb
loope
push
std
out
fistpl
push
pushl
insb
xchg
sbbb
add
mov
mov
push
ret
pop
push
imul
pop
nop
adcl
add
mov
icebp
push
imul
and
aam
sbb
sbb
insb
test
xchg
aaa
dec
xlat
addl
das
scas
lcall
js
ja
lock
add
push
insl
mov
pop
shlb
and
div
or
gs
fs
dec
lahf
pusha
cli
mov
mov
jp
cmp
repnz
pop
and
jmp
sarb
aam
dec
aam
aas
mov
add
mov
cmc
test
lock
jo
inc
or
push
xchg
rol
stc
xor
jns
mov
loope
mov
mov
jns
jp
cmp
jo
ds
sti
fdivrp
inc
cmc
pusha
jl
mov
roll
pop
jl
bound
test
sbb
outsl
cld
adc
adc
add
es
jl
lods
cmpl
and
lock
pop
dec
jl
out
jmp
jge
or
arpl
movsb
jl
mov
push
icebp
idivb
push
dec
xor
pop
mov
jbe
pop
orl
icebp
mov
mov
in
inc
cmp
std
mov
imul
dec
mov
adc
fadd
ja
popf
fwait
cmp
push
pop
mov
pushf
fmull
xlat
icebp
lods
cmp
sub
push
push
mov
movsb
push
inc
mov
fwait
jl
adc
mov
jbe
xchg
icebp
mov
popf
pop
sbb
adc
jnp
xorb
sub
xor
sbbl
adc
cmp
sbb
aam
cmp
add
jae
out
xor
sbb
icebp
and
or
mov
out
or
dec
or
add
stc
aam
and
jns
jae
repz
push
cmp
jnp
sti
inc
pushf
adc
imul
and
repz
ret
mov
jo
mov
ds
add
repnz
cmp
rol
mov
jmp
out
filds
adcl
xchg
add
in
jbe
inc
sbb
fwait
push
or
push
lods
lods
mov
push
scas
adc
cmp
jecxz
fldt
orl
xor
leave
mov
lods
pop
jle
or
pop
cld
lret
jae
cmp
pusha
xorl
jae
testl
add
jnp
aam
ror
clc
xchg
std
inc
jb
pop
add
push
push
out
jae
loop
scas
adc
and
xchg
sar
pushf
negl
icebp
int3
mov
lea
mulb
test
jae
and
and
mov
jae,pn
js
pop
lcall
xchg
mov
xchg
jecxz
js
push
clc
lea
mov
lahf
sti
or
sbb
inc
cs
cmpsl
mov
ret
stos
push
icebp
lea
in
push
lcall
testb
push
cmp
jge
mov
shrb
gs
mov
stos
js
push
jge
push
mov
ja
jle
sarb
sub
loope
jmp
sub
push
add
jno
test
fisubs
fmuls
mov
mov
pcmpgtb
dec
jp
mov
jae
dec
xchg
cld
xor
push
test
pop
jle
xchg
jae,pt
sub
xor
shrb
pop
push
jp
pop
sub
push
test
in
je
pcmpeqw
in
and
lods
inc
mov
mov
xor
roll
and
movsb
fsub
out
pop
jno
imul
mov
jecxz
cmp
jl
fldpi
pop
cmp
pop
mov
sarl
icebp
xor
lea
adc
cmp
repz
dec
mov
addl
xor
idivb
test
xchg
mov
jp
xchg
daa
cmpsb
mov
arpl
jp
dec
xchg
scas
ret
mov
daa
fs
xlat
jecxz
movsb
mov
mov
push
repnz
or
in
test
addr16
pop
negb
arpl
mov
clc
jecxz
jmp
pop
pop
inc
xchg
mov
enter
jbe
xchg
mov
ret
mov
sub
xchg
or
inc
mov
jno
mov
lods
add
stc
pushf
call
popa
and
test
and
jg
std
pop
cmp
mov
push
add
les
and
test
outsl
dec
sbbl
add
aaa
clc
rcll
inc
and
cmp
jne
dec
dec
inc
iret
inc
cmp
idivl
cmp
aas
mov
sub
daa
movsb
sub
and
cmp
jno
cmc
ret
call
jp
loop
adc
sbb
js
negl
nop
jle
jge
add
rclb
jnp
lods
jecxz
cmc
adc
cmp
mov
or
leavew
pop
push
sub
lock
das
je
or
push
std
in
mov
xchg
imul
jg
jp
mov
repnz
bound
xor
inc
sub
jge
shl
or
ljmp
outsl
int3
aaa
pop
out
and
mov
jne
daa
je
loopne
sub
cmpsb
mov
out
mov
loopne
aas
or
and
or
pop
push
test
inc
mov
xor
jbe
gs
pop
cli
push
xlat
cmpsb
mov
in
cmp
notb
pop
mov
pop
pop
xchg
pop
add
push
mov
add
sbb
repz
push
push
mov
sbb
sub
jmp
cltd
lret
outsb
adc
push
and
and
cmp
pop
testl
xor
jne
ja
pop
pop
rol
mov
gs
cmp
data16
outsb
pop
pop
ss
add
push
fucom
sbb
inc
xor
repnz
imull
call
roll
dec
or
xchg
ja
inc
push
in
push
lret
jp
aam
jg
mov
stc
xchg
hlt
cmp
js
das
sub
shll
adc
cmc
test
call
jge
ret
push
nop
ljmp
fbld
jmp
mov
hlt
mov
lea
lahf
js
test
or
mov
or
lret
push
iret
ljmp
xchg
cs
cmpl
inc
dec
mov
push
add
sbb
sbb
xor
xchg
out
sub
push
inc
mov
cmpsl
jae
xchg
loop
mov
fwait
loope
xor
shlb
push
push
das
sti
rorl
xor
bound
fisubrs
lcall
mov
xchg
and
jae
and
mov
aam
hlt
stos
jnp
mov
add
data16
aas
gs
cmp
xchg
daa
dec
dec
fcompl
out
and
ds
incb
inc
or
xor
hlt
sub
movsb
in
and
xchg
int3
mov
jo
jp
lock
int
popa
jno
pop
push
mov
pop
xchg
or
jmp
xor
ljmp
xchg
and
iret
lock
cmp
ret
push
punpckldq
loope
roll
out
jmp
std
pusha
jmp
ds
lahf
fwait
push
fwait
out
aaa
ja
jnp
jns
leave
outsl
pop
mov
xor
adc
jo
test
xor
xchg
fsubrl
je
cli
stos
imul
pop
inc
insb
inc
mov
outsl
jbe
ss
out
jle
push
jecxz
in
loop
xor
push
mov
jae
mov
dec
jl
rcll
cli
jg
push
outsl
dec
xlat
jle
clc
lret
or
out
fs
outsb
ja
bound
jg
mov
mov
xlat
xor
in
insl
adc
jb
stc
cmp
jns
aad
or
aas
jp
nop
adc
jp
js
scas
xor
mul
insl
and
push
mov
cld
pop
dec
orb
or
adc
inc
sub
xor
stos
adc
xchg
arpl
cltd
xor
pop
inc
pop
jns
push
sbb
insl
pop
jae
cld
push
or
sbb
adc
xor
popa
mov
mov
pop
dec
bnd
bound
cmc
mov
ss
jnp
call
pop
cmpsb
rep
xor
jb
sbb
mov
jno
mov
ret
gs
hlt
jmp
sub
setno
test
jo
lea
cld
and
popa
sarb
out
mov
cmp
sbb
xlat
xchg
imul
pop
or
aas
std
adc
dec
pop
push
das
dec
inc
imul
dec
push
outsl
leave
sub
decl
je
pop
int
sub
in
jge
jecxz
int3
cmpsl
xor
push
pop
in
jne
jmp
and
xor
nop
mov
out
dec
jle
cmpl
or
xorl
mov
xor
add
or
jae
cmpsb
decb
jne
fldt
mov
scas
hlt
imul
xchg
cmp
inc
xor
mov
xchg
inc
rclb
xchg
pop
insb
jne
and
jmp
adc
xor
shl
rcll
lahf
std
add
dec
hlt
test
imul
call
insl
inc
ljmp
pop
xor
fdivrl
and
xchg
loope
jnp
mov
aas
push
testl
pop
jge
imul
fs
enter
pop
testl
aam
pop
repz
fldenv
jnp
and
inc
sub
imul
lock
jmp
sbb
stos
cmp
cmc
std
push
dec
in
push
lock
jnp
pushf
test
jbe
dec
push
roll
nop
add
xchg
aad
and
jbe
fdiv
lock
pop
out
jne
fistl
aaa
loopne
xor
add
aad
and
sub
inc
jnp
jnp
inc
dec
adc
or
xor
sbb
fdivrl
push
sti
xor
cmp
iret
jno
xor
jecxz
dec
stc
imul
movsl
data16
loope
ret
sub
jl
cltd
mov
or
push
ja
dec
loopne
in
pop
cmp
jge
cmpsl
jmp
push
pop
ja
cmp
mov
push
popf
shr
xchg
ljmp
fldcw
stc
xor
rcrl
cmp
push
xlat
loope
mov
cmp
dec
xlat
dec
jge
push
hlt
cs
jb
inc
mov
test
mov
mov
js
mov
lock
aaa
outsb
pop
xorl
jnp
dec
jecxz
mov
cmp
popa
int
in
mov
js
int3
subb
sarb
rep
pusha
push
and
cld
outsl
insb
dec
faddl
movsb
jg
shr
iret
leave
imul
iret
inc
sub
jecxz
push
pop
bound
test
imul
clc
in
imul
push
aas
out
xor
pop
fbstp
scas
push
clc
pop
and
lods
dec
jno
mov
loopne
lahf
sbb
daa
je
jmp
sti
js
xchg
cmpsl
dec
cli
out
fldt
cmpsb
fwait
shll
shll
xchg
push
decl
mov
jae
fwait
push
pop
js
inc
insb
adc
dec
pop
jno
pop
xchg
std
aaa
scas
in
fists
loope
pushf
mov
dec
mov
pop
out
gs
insl
pop
into
aas
pusha
pop
pop
sbb
fildll
jno
or
push
mov
lcall
out
out
push
push
popf
xchg
fists
jb
out
pusha
ja
and
push
mov
jnp
mov
jno
dec
jmp
pop
jnp
cmp
xor
pop
repz
adcb
bnd
pop
inc
test
stc
out
xlat
les
gs
jne
sbb
pop
or
cmpsb
fs
or
cmc
std
pop
or
in
or
push
or
aad
xor
inc
imul
pop
push
ljmp
lods
xor
inc
sub
insl
ss
in
test
dec
mov
add
fidivrs
add
push
idivb
cmp
sub
add
xor
jae
and
mov
dec
mov
scas
lea
inc
out
outsb
fwait
pop
lahf
xchg
test
inc
xor
fdiv
cmc
stc
stos
add
pushl
call
mov
or
gs
cli
lock
orb
sub
das
sbb
std
lods
roll
data16
idivb
jno
repz
cmp
push
jl
lahf
jecxz
xchg
js
jg
inc
aas
mov
push
mov
push
sahf
in
xchg
fstpl
xor
inc
scas
push
push
aad
inc
test
sahf
lods
hlt
cmc
scas
mov
or
pop
sub
jge
and
ret
xor
sub
leave
fmuls
push
lods
or
cld
call
repnz
repnz
insb
mov
cmova
add
lods
push
mov
sahf
add
das
std
incl
icebp
movsl
xorb
mov
mov
ja
aam
test
js
sub
lahf
jb
outsb
pop
setns
mov
cmpsb
sbb
mov
aaa
jnp
push
xchg
push
inc
mov
mov
pop
icebp
pop
in
xchg
loopne
jne
mov
mov
stc
testb
mov
jnp
push
jg
mov
test
pop
hlt
lock
pushf
or
mov
outsb
xlat
test
mov
xor
and
mov
xchg
jae
test
jne
jo,pn
fstpt
jp
stos
test
imul
lds
cmp
add
enter
jecxz
inc
lods
mov
mov
cmp
ljmp
pushl
jmp
push
out
ss
faddl
aas
aam
cmp
pop
fwait
and
ja
popf
outsb
std
mull
inc
sbb
inc
fxch
inc
fs
lcall
pop
sbb
adc
inc
pop
cli
mov
jg
push
dec
shlb
in
popf
adc
jb
xchg
mov
jne
pop
clc
and
and
sub
and
pop
repz
loop
jne
stos
leave
or
mov
imul
pop
jo
aas
jne
lea
jnp
push
aam
test
jnp
mov
insb
push
and
imull
and
shlb
lods
imul
stc
insb
push
fsubr
sbb
jo
je
or
jo
add
insb
repz
movsl
xchg
gs
cld
stc
push
cwtl
sahf
cltd
daa
int3
arpl
das
outsl
fnstenv
or
cmc
imul
sbb
or
es
push
les
in
in
mov
dec
jno
loop
pusha
push
out
pop
mov
push
inc
mov
out
xor
sub
jge
sub
aas
xor
int
imul
mov
arpl
mov
inc
shll
popf
pop
mov
jb
and
stc
repz
xor
mov
out
mov
mov
rclb
lock
adc
sub
in
xchg
decl
ror
fnstsw
jl
into
fincstp
icebp
adc
pop
pop
in
arpl
in
push
cmc
push
mov
xor
jg
xchg
or
sub
adc
pop
gs
dec
mov
sub
mov
jge
mov
ret
ljmp
xchg
mov
call
jns
arpl
sub
xchg
int
out
icebp
mov
fdivs
pop
ss
sub
jnp
gs
dec
fidivrs
cltd
ss
and
inc
fistpl
adc
mov
filds
pop
fucomip
adcb
loopne
arpl
fwait
push
xor
icebp
std
xor
add
mov
repz
pop
adc
ljmp
jge
stos
inc
pop
dec
add
frstor
mov
test
scas
insb
push
adc
mov
inc
jno
sub
or
outsl
cs
pop
sti
inc
lds
shrb
xor
cld
mov
lods
xor
xor
inc
into
inc
mov
test
xchg
dec
adc
jb
dec
int
jb
add
cmpsb
inc
inc
lcall
mov
cmp
push
or
push
pop
insb
cmp
in
inc
dec
inc
movsl
outsl
jo
jmp
pop
inc
push
push
cmp
js
pop
fistpll
decl
repz
dec
xor
je
daa
test
inc
ss
inc
cli
jp
in
aam
sbb
xorb
sbb
pushf
fadd
jl
out
mov
mov
mov
das
xor
xchg
cs
inc
cmc
aaa
sbb
push
push
xchg
test
lock
popf
mov
sub
or
in
xchg
cmp
mov
mov
test
ret
adc
in
xchg
lods
sarl
pusha
ds
xor
adc
aas
mov
or
mov
cmp
je
mov
pop
cmc
sub
sti
stos
jae
rol
loope
out
fstpt
jns
out
dec
push
data16
es
pop
add
testl
in
xor
mov
in
cmp
sub
in
pop
adc
fwait
adc
fsqrt
fwait
imul
out
test
cmp
adc
mov
imul
adc
add
or
mov
push
push
jo
shll
ret
adc
ret
insb
sbb
vmovapd
cmc
ja
aad
mov
jmp
rorl
stc
gs
mov
icebp
cmp
popf
push
addl
lds
dec
cwtl
or
or
push
je
popf
into
lcall
addr16
pop
sbb
lea
repz
push
inc
fldl
pop
sbb
jp
rorb
mov
dec
lods
dec
push
int3
add
mov
jbe
ret
mov
rorl
jb
shrb
mov
mov
push
mov
cmp
sbb
pop
pushf
cmpsb
xor
xchg
ds
jmp
cmp
sbb
mov
push
iret
adc
out
orb
shll
fidivrl
and
in
fdivrs
pop
lahf
dec
adc
mov
loop
xor
shl
shll
push
loop
pop
push
dec
ja
jne
cmp
lock
push
mov
pop
jge
xor
inc
or
ret
nop
fstl
outsb
mov
cmpl
mov
je
out
test
push
dec
imul
xchg
xchg
icebp
jge
sbb
idivb
fnsave
pop
cmp
and
xchg
dec
jp
repz
push
xchg
repz
adc
xor
sub
inc
lods
pop
add
stc
aaa
es
bnd
jle
leave
loopne
es
stos
jg
or
stc
pop
adc
cld
jle
add
out
in
je
dec
jns
pop
in
push
lret
inc
push
aaa
movsl
dec
out
nop
sbb
mov
xlat
jae
xchg
add
insl
mov
dec
sub
lods
jge
imul
out
adc
push
mov
sub
cmp
xchg
pop
jnp
test
xor
mov
test
call
jno
fidivs
xor
mov
push
insl
cmp
out
xor
test
clc
jecxz
les
out
mov
push
test
ljmp
jg
sub
mov
cwtl
jb
aad
inc
push
in
mov
inc
adc
xchg
push
and
cmp
add
scas
jl
and
hlt
sbb
xchg
sbb
mov
sub
adc
sbb
push
xor
inc
sub
mov
cmp
jno
add
inc
mov
fcoml
cld
mov
mov
xchg
in
popf
icebp
cmp
sub
mov
fwait
js
ficomps
popf
icebp
sub
mov
jno
mov
push
mov
aas
mov
mov
or
jae
lcall
std
arpl
add
xor
cmp
push
adc
jnp
or
xlat
pop
gs
xor
pop
fstps
mov
and
adc
cmpsb
mov
mov
std
aaa
or
mov
xchg
shlb
jae
push
pop
adc
sarb
ja
fisubrl
push
bound
add
mov
xor
mov
mov
lods
cmp
pusha
sbb
mov
std
int
inc
popf
aaa
and
sarl
jle
inc
repz
repz
jns
gs
jecxz
mov
orl
test
jnp
sbb
jl
pop
or
lret
dec
push
cmp
ss
outsl
xlat
push
das
nop
cwtl
push
xor
je
scas
fdivs
inc
jo
shrl
jge
std
movsl
orb
incl
xor
jle
fiaddl
out
xchg
dec
ds
cmp
ret
loop
das
add
pop
adc
int3
les
pop
addb
rcll
int3
pop
cltd
mov
mov
cmp
dec
or
icebp
cli
cld
idiv
out
cmp
pushf
adc
jg
or
jnp
push
hlt
dec
xor
lea
mulb
scas
jge
and
and
shrb
testb
pop
pusha
fsubs
jae
mov
xlat
inc
jge
add
xchg
clc
xchg
inc
or
inc
pop
cmp
ja
insb
dec
sub
imul
jle
jg
or
mov
rcrl
jecxz
cmc
mov
xchg
daa
mov
mov
pop
xchg
outsb
jo
clc
jecxz
xor
sub
js
loop
pop
adc
pop
xor
or
xchg
push
pop
and
iret
cmp
jbe
sub
xor
mov
sub
rorl
inc
sbb
inc
outsb
out
jbe
mov
xor
enter
lret
stos
repnz
sahf
or
jge
pop
jbe
jl
push
insb
mov
xor
and
bnd
stc
fldcw
mov
inc
out
lret
add
sbb
jns
jl
mov
aas
adc
out
lock
mov
mov
shr
lock
jns
and
stos
sbb
lock
nop
inc
cmpsl
sbb
xor
push
imulb
pop
dec
lods
cwtl
and
lret
mov
jno
mov
push
enter
inc
cmc
sub
jg
or
mov
lret
push
jge
push
repz
ljmp
iret
sahf
repz
fdivr
xor
and
mov
fistpll
xchg
das
cmp
test
or
add
lds
add
sub
jnp
cld
push
lds
lods
inc
jo
sahf
shll
popf
rcl
cmp
dec
mov
or
jl
adc
mov
cmp
ret
xchg
lret
add
and
push
mov
out
lods
xchg
cmpsl
pop
mov
idivl
icebp
fistpll
outsb
dec
ja
gs
sti
adc
addr16
stos
pop
xor
cltd
pusha
nop
in
mov
adc
add
nop
or
dec
mov
push
add
jb
sub
out
outsb
push
pop
ljmp
stos
dec
idiv
lahf
pushf
inc
push
ret
lods
aad
out
cltd
pushf
in
fcmovnb
pushf
jne
testb
xorb
push
js
aaa
sbb
into
out
cmpsb
jl
lds
mov
filds
push
dec
xchg
repz
dec
ljmp
jnp
mov
out
stos
push
pop
fimuls
xchg
shrl
lea
ds
push
adc
lock
std
pop
dec
push
loopne
push
cmp
insb
rorb
popa
ja
mov
sub
jl
adc
lret
aaa
push
xchg
add
pop
inc
insb
fxch
sti
push
push
jg
inc
sub
in
mov
in
jg
inc
lret
jo
add
daa
gs
in
idiv
adc
imul
jge
sahf
loop
jl
rorl
ds
mov
and
push
dec
addr16
fcmovne
aas
subl
arpl
sbb
ljmp
xor
ds
dec
leave
jl
jp
incl
jbe
mov
js
jmp
pusha
adc
bound
bound
jo
or
inc
sub
hlt
pop
inc
bound
jae
stos
sub
clc
xchg
pop
popa
jp
enter
mov
jae
testb
es
clc
insb
inc
shrl
sbb
push
xchg
mov
incb
pushf
jbe
mov
sbb
sub
cmp
mov
out
cmp
hlt
pop
jo
ret
orb
fs
jmp
or
or
mov
out
xchg
imul
dec
xchg
mov
in
dec
sbb
mov
icebp
push
pop
xchg
movsb
sub
clc
xchg
icebp
mov
add
jmp
fwait
and
cmp
jb
dec
lods
xor
jnp
js
mov
scas
jb
xchg
sbb
imul
xchg
lock
in
mov
aaa
inc
cmpsb
js
xchg
mov
gs
dec
inc
pop
mov
ja
movsl
inc
enter
pop
push
aas
push
push
out
dec
mov
ja
inc
push
fwait
lret
test
cmp
jb
xlat
and
scas
dec
and
and
pop
pop
imul
jmp
push
mov
pop
xor
lcall
push
subl
loope
mov
mov
mov
jnp
scas
cmpl
cmp
jnp
jno
xchg
packuswb
cmpsb
jp
inc
inc
adc
fwait
push
fwait
xadd
repnz
lods
out
rcll
jnp
roll
cmp
andw
and
cmp
adc
add
hlt
mov
inc
nop
clc
push
ret
and
jmp
mov
sahf
adc
cmp
mov
inc
push
push
ds
je
jae
sbb
xor
popf
lea
sbb
pop
xchg
cmp
and
les
mov
call
or
pop
pop
mov
scas
addr16
iret
jnp
ret
sub
shr
aad
sub
mov
sbb
pop
fwait
arpl
mov
hlt
push
fnstsw
jg
popa
jno
and
inc
cmp
call
iret
dec
dec
jg
mov
fldl
inc
add
mov
add
scas
inc
movsb
imul
ret
sbb
leave
push
jae
dec
pop
cmp
inc
adc
fnstenv
adc
fistpl
mov
movb
pop
jo
adcb
sub
cmpxchg
xchg
xchg
in
xchg
in
push
lcall
pop
add
jo
popa
stos
andl
je
dec
jae
push
adc
daa
js
test
clc
insl
lret
dec
cmp
xchg
hlt
xchg
sub
pop
xor
popa
ja
clc
jo
out
idivl
int
jb
addr16
push
popa
je
xchg
scas
jle
pop
jno
mov
fnsave
add
repz
mov
cld
add
sbb
ret
dec
pop
xor
mov
jg
pop
dec
pop
out
xchg
and
mov
pop
aas
out
sbb
mov
inc
xchg
cmc
negl
scas
aaa
ja
cli
pop
xor
gs
xchg
cmc
push
test
test
xchg
fnstcw
sbb
and
inc
or
stos
push
mov
in
cmp
std
in
sbb
shr
test
inc
mov
adcl
add
or
pop
ret
mov
cmpsb
jo
adc
fldcw
movsb
mov
imul
ss
jp
test
popa
sub
jno
cmp
mov
icebp
jecxz
push
push
cwtl
mov
gs
orl
mov
mov
xor
inc
mov
test
adc
cmp
les
enter
int
cltd
push
jl
cli
out
icebp
ljmp
jbe
cld
addr16
push
jnp
out
pop
xchg
cli
or
insl
sbb
mov
push
bound
pop
pop
mov
sbb
es
loopne
icebp
sbbl
data16
inc
movsb
xchg
sbb
test
pusha
add
inc
xor
adc
jge
cmp
dec
test
mov
inc
scas
and
inc
jnp
stc
mov
addr16
ja
xchg
aas
out
hlt
fwait
loope
fadds
sub
mov
jbe
cld
mov
cmpl
mov
add
lods
mov
xlat
cld
in
scas
ret
decb
pop
cmp
jg
sti
pop
push
inc
cwtl
cmp
push
lcall
xor
push
lock
jne
adc
popa
sbb
fscale
dec
and
add
add
test
jl
add
inc
push
pop
in
out
aaa
jae
dec
loop
fstpt
popa
jae
fists
enter
rol
mov
outsl
lret
mov
jno
or
adcb
inc
push
jno
mov
arpl
mov
push
jecxz
or
xor
aad
incl
push
push
add
xchg
push
outsb
lahf
push
sahf
aaa
fstl
cmpsl
ficoml
hlt
xor
cmp
repz
imul
fsubl
lods
inc
xchg
add
sub
cmp
pusha
cmpsl
insb
repz
xor
inc
cwtl
jp
inc
sarl
std
ret
sbb
insl
je
dec
inc
jge
hlt
insl
cmpsl
inc
in
adc
in
add
mov
cld
mov
adc
mov
mov
jo
aaa
or
in
bound
js
mov
clc
mov
and
cmp
insb
push
cmp
xor
dec
movsl
xlat
push
outsb
jle
mov
dec
popf
jle
jbe
cmp
and
jns
lea
mov
inc
push
mov
push
xchg
xchg
push
pop
std
push
pop
repz
ds
jge
psrad
arpl
shlb
xor
jb
pop
enter
jl
es
mov
xlat
push
ljmp
jge
aas
scas
cmp
pop
pop
icebp
out
jl
repnz
cmp
pop
sub
push
jg
in
or
add
std
or
loop
jge
test
repnz
cmp
incb
aad
pop
cwtl
addr16
push
imul
movsb
jg
pop
out
or
cs
sub
jmp
cmp
xor
hlt
insl
push
jmp
inc
mov
adc
dec
jae
adc
call
mov
rcll
jne
cmp
add
pushf
stc
xchg
xchg
sbb
jl
bound
imul
sub
sub
adc
add
pusha
sti
aad
jecxz
push
into
lock
mov
mov
cld
adc
push
add
xchg
jns
inc
out
fs
fidivs
in
sub
cmp
jl
cmc
sbb
pop
add
jbe
sbb
out
aad
cmp
imul
pop
fwait
xor
pop
cmc
mov
inc
jo
aaa
jo
in
pop
push
mov
dec
cmp
movsl
pop
and
cltd
cmp
jle
imul
in
xor
data16
shll
insl
test
mov
pop
in
lds
jl
pop
dec
inc
mov
lea
aad
ja
loop
xchg
mov
cld
mov
xor
in
pop
icebp
xor
lock
les
or
in
jmp
pop
je
sbb
xchg
ja
addr16
cmp
addr16
cmp
cmpsb
cmp
sub
imul
or
push
data16
pop
cld
mov
out
cld
imul
fsin
iret
lock
in
pop
mov
aad
cmp
cmp
lock
jnp
cmc
gs
push
cmp
mov
adc
out
push
and
fbld
fidivrl
dec
fnstenv
sub
outsb
mov
inc
pop
movsl
icebp
popf
mov
xchg
add
push
ss
inc
jle
jb
inc
inc
icebp
sub
add
std
add
inc
stos
sbb
xor
push
jle
mov
addr16
cmpb
push
scas
jns
pop
jo
scas
jecxz
arpl
das
push
dec
clc
popa
cmp
fucomip
push
sub
push
xchg
daa
sti
ret
sbb
roll
bound
mov
sub
mov
stos
ficompl
and
fwait
lret
les
fucomp
xor
pop
jg
mov
or
or
stos
sub
jg
lock
cli
fdivrs
push
jb
leave
push
sbb
mov
pop
cmp
arpl
or
add
xor
jb
jp
sahf
cmpsb
pop
imul
mov
xchg
dec
aas
jne
in
pop
dec
xor
push
lock
in
pop
imul
cmp
fistpll
mov
xchg
inc
inc
sbb
icebp
pop
mov
add
les
jle
daa
mov
push
inc
sarl
js
lret
shrb
pop
mov
stc
adc
mov
lahf
adc
pop
pop
call
sub
int3
adc
loop
insb
mov
test
add
or
sbb
ss
pop
inc
mov
mov
or
mov
mov
xor
cmp
mov
negl
mov
outsb
incb
fidivl
jno
jge
mov
dec
jle
sbb
sti
call
jmp
push
leave
dec
mov
sub
push
jp
ret
imul
pushf
inc
fdivl
jns
popa
adc
sub
xor
aas
aam
int3
inc
std
stos
scas
jne
das
lret
jge
adc
leave
fidivrs
icebp
jmp
je
fstl
daa
mov
pop
pop
mov
jne
movsb
icebp
ds
lret
out
lahf
and
xor
pop
sbb
push
bound
gs
xor
shlb
stos
push
adc
inc
ret
dec
cmp
sti
lods
call
mov
std
scas
outsb
cmp
xchg
inc
lods
xchg
xchg
mov
push
jle
lea
ds
jno
push
push
or
mov
xchg
jge
inc
cwtl
dec
cmc
push
lds
and
dec
scas
jl
jo
add
loopne
icebp
add
idivl
mov
xor
jge
pop
gs
dec
cmc
iret
inc
mov
mov
je
gs
jp
push
jmp
jns
fs
mov
stos
pop
inc
pop
cs
jmp
sub
inc
jmp
pop
addr16
mov
adc
out
loop
push
addr16
mov
adc
out
loop
push
mov
into
dec
cmp
cmp
mov
addr16
jb
xor
das
xor
push
jge
hlt
movsb
pop
xor
add
xchg
mov
jp
fsubr
out
push
and
add
out
add
mov
or
out
fdivrs
inc
cmpsb
push
pushf
inc
scas
dec
and
push
mov
and
push
je
add
xorb
outsb
cmpsl
and
lea
leave
pop
fs
mov
in
test
mov
fstpl
mov
or
push
pop
out
xchg
add
cmp
cwtl
xor
in
ljmp
adc
mov
cld
loopne
les
xchg
jg
lea
testb
fsubs
popa
mov
fiaddl
mov
fdivs
testl
jbe
xor
cmp
imul
jo
into
int3
cs
daa
pushl
ja
mov
fidivrl
xor
fstpt
jo
mov
arpl
cmpsb
inc
push
pop
pusha
or
add
sti
xchg
pop
stos
movsb
mov
xorb
sub
xchg
xchg
imul
push
mov
mov
add
mov
iret
cmpb
ret
lret
in
cmp
mov
ret
pusha
sbb
xor
xor
push
insb
xor
pop
cmp
mov
mov
scas
push
or
jle
mov
xlat
mov
add
jmp
jle
push
popf
sub
push
mov
lock
xchg
lea
push
jmp
imul
inc
lcall
mov
bnd
idiv
popa
test
jo
push
inc
lds
sbb
sbb
pop
clc
mov
into
add
push
mov
xor
mov
and
mov
stos
addb
lods
movsb
gs
imul
add
mov
sub
ss
repnz
bound
popa
inc
hlt
xor
and
out
ss
jl
cmp
mov
add
mov
pop
fsubrl
jns
fbld
mov
push
adc
movsw
push
mov
dec
popa
out
lock
sub
in
pop
out
es
adc
mov
xor
iret
cmpsl
push
fisttpll
jecxz
jbe
dec
int3
shrl
adc
mov
and
mov
jmp
xchg
lock
addr16
jb
fnstcw
mov
testl
aam
sbb
out
mov
cli
or
adc
dec
in
js
loope
jnp
cmpsl
je
cmp
test
bound
movsl
andl
and
pop
dec
mov
push
jb
sbb
mov
add
lea
pop
pop
leave
movsb
xor
dec
push
push
clc
dec
or
testb
jae
shll
push
loop
sub
std
cmp
jle
jae
lcall
mov
cmpsb
ret
push
out
pop
cld
pusha
into
hlt
ljmp
lock
aaa
push
das
or
and
jnp
mov
bound
push
rorb
push
sbb
jge
in
jb
sti
test
test
and
stos
aas
or
out
pop
add
aam
mov
pushl
out
aad
jbe
sub
pop
cwtl
xchg
add
jno
pusha
js
sub
and
xor
mov
in
xchg
mov
xchg
mov
mov
cmp
adc
jg
imul
out
fmull
pop
pop
xchg
loop
movl
jns
clc
lret
adc
mov
adc
jmp
push
les
cmp
dec
sar
and
cli
mov
cmpsl
sbb
ja
sbb
add
fdivs
les
idivl
xorl
push
push
add
or
clc
or
jno
cli
jb
fmull
stos
test
rcll
pop
ds
aas
and
push
sbb
mov
jo
mov
adcl
lods
and
pop
xor
in
mov
lret
dec
pusha
fildl
sbb
in
idiv
and
cmp
sbb
mov
cmc
cmp
add
cmc
xchg
jecxz
cwtl
int3
pop
aam
xor
out
mov
xchg
fnstsw
jge
pushf
inc
call
dec
clc
in
jno
xchg
mov
aam
xor
xchg
sub
add
push
loop
mov
lret
push
cs
jmp
jb
jle
dec
mov
adc
inc
jnp
rcll
iret
lahf
orl
fwait
jb
loopne
xor
xor
shll
pop
jbe
dec
rcrb
mov
ds
cltd
push
push
cmp
cmp
lods
pop
cwtl
fbstp
int3
jae
cmp
ret
insl
aam
inc
sub
mov
nop
pop
mov
lahf
test
jno
inc
insl
aam
jns
imul
inc
mov
ret
ds
stos
test
gs
pop
jge
test
adc
inc
mov
mov
jno
inc
add
loope
adc
dec
sub
andl
xor
das
adc
dec
pop
fstp
call
sub
mov
and
inc
mov
aam
fbstp
bswap
jne
push
mov
ja
xorl
lock
gs
std
std
scas
orl
stos
andb
mov
mov
dec
fists
push
in
push
fyl2x
bound
inc
imul
int
stos
xchg
hlt
jmp
cmp
cmpsl
jle
pop
enter
pop
push
fiaddl
ficoms
fdivrl
aam
call
fdivs
gs
andb
add
stc
jo
cmp
sub
sub
and
inc
add
sbb
sub
push
loopne
mov
aaa
subb
jmp
or
add
cmp
rcrb
cmp
lds
fimuls
xlat
or
sbb
xchg
cmp
mov
lahf
pushl
sub
scas
ret
pop
push
test
mov
lea
xchg
mov
jo
push
inc
xchg
and
test
push
jp
jge
jl
xlat
mov
push
cmp
pop
out
outsl
loop
in
into
lret
sti
popa
xlat
testl
adc
xchg
es
sub
js
and
dec
mov
stos
push
mov
ljmp
add
test
testb
jp
jno,pn
mov
jbe
push
dec
sbb
loop
in
in
lods
popa
jmp
bound
add
jl
sub
mov
or
jns
jno
testl
aas
jge
aaa
sub
mov
jb
jae
sub
pop
dec
jne
aas
fiadds
fdivs
iret
aaa
addl
cmp
ds
sti
adc
movsb
jle
mov
jmp
sub
mov
or
lods
jno
js
icebp
out
xchg
xor
jecxz
imul
loope
jbe
jl
mov
inc
jno
mov
fadd
mov
cld
jmp
cmp
aas
xor
add
int
jge
jnp
jge
call
imul
dec
mov
js
cltd
loope
jne
popa
mov
jb
ljmp
mov
jle
xlat
gs
xchg
jp
fcmovu
sub
pop
push
dec
mov
sub
gs
cld
cli
push
stc
pop
dec
xor
xor
jge
dec
std
in
push
fnsave
lock
sbb
or
add
aaa
fimuls
dec
mov
dec
push
mov
out
cmp
call
andl
fsubr
lock
fs
and
je
pop
push
clc
add
iret
inc
cmpsl
cld
pop
pop
or
cmpsb
loop
mov
adc
xor
pop
popa
aas
cmp
jp
ja
scas
inc
repnz
loop
rcll
ss
cwtd
add
fisttpll
es
outsl
and
mov
into
clc
cmp
addb
mov
sbb
jnp
xchg
pop
movsl
out
ffree
fstl
insb
std
push
push
dec
jg
popa
jge
in
arpl
xchg
mov
pop
clc
insb
jnp
push
pop
lods
rorl
jmp
scas
jne
sbb
xchg
cli
adc
cmp
and
jb
test
mov
dec
inc
and
mov
in
lock
lret
and
mov
mov
pop
push
or
negb
insb
pushf
jno
inc
mov
jne
xchg
insb
aad
mov
jbe
leave
xor
imul
aas
lock
sub
in
mov
pushf
pop
mov
std
mov
aad
push
sub
fadd
call
outsl
movb
aas
push
sub
aas
adc
inc
jg
js
xor
leave
lahf
cld
std
ss
mov
dec
test
insl
cmpsl
xor
jbe
jae
arpl
xchg
xor
or
imul
and
xor
push
cld
roll
cmp
jle
xchg
inc
hlt
mov
orb
xchg
movsl
ja
adc
pop
clc
sub
or
dec
jg
pop
out
sub
ljmp
jo
aas
lds
and
mov
xor
push
adc
sub
popf
xor
sub
bound
aaa
cmpsl
jmp
or
adcb
adc
xor
add
insb
leave
sbb
out
sub
push
mov
roll
pop
mov
js
jge
lock
in
stc
cmpb
bound
jo
arpl
push
mov
inc
call
gs
xlat
xchg
mov
movsl
out
push
pop
mov
jb
xor
mov
dec
mov
lods
mov
push
notl
call
mov
jae
fcomip
call
pop
or
imul
test
aam
mov
mov
fmull
jns
popf
dec
out
ret
into
sbb
in
ficoml
inc
arpl
push
push
loopne
jb
lret
lret
ds
rolb
xchg
sahf
fstl
cmp
nop
imul
sub
int3
jmp
int3
adc
js
push
sbb
lcall
push
ret
call
push
in
add
inc
dec
int
jmp
mov
and
mov
pop
sbb
loope
call
in
jg
call
add
mov
fnstenv
jge
xor
push
rep
stc
add
fisubrs
mov
aam
clc
enter
adc
add
icebp
jecxz
jmp
mov
mov
test
mov
push
jae
jno
sbb
ss
pop
jmp
or
in
mov
jp
test
pop
pop
cmp
std
jno
out
jno
push
mov
add
mov
add
cltd
cmp
xchg
adc
loopne
sbb
mov
push
cmp
push
dec
jmp
dec
ficoms
nop
mov
bnd
loope
pop
or
mov
jnp
mov
inc
fsubl
loopne
pop
fwait
mov
in
mov
mov
jae
movsl
iret
sbb
repnz
inc
mov
pop
in
xor
sbb
sbbl
jne
push
repnz
and
arpl
push
push
adc
out
inc
xor
icebp
adc
fisttps
inc
scas
push
jnp
xor
xchg
fwait
mov
sub
mov
dec
ja
mov
cmp
cwtl
sub
loop
cmpsb
lahf
pop
out
or
xchg
mov
iret
ret
adc
xchg
sub
pop
xchg
push
fldl
pop
sti
and
lock
xor
xor
inc
in
scas
sbb
les
cmc
clc
fimuls
mov
popa
jbe
icebp
lods
jne
inc
aad
insb
jecxz
xchg
stos
cld
sarb
sahf
sti
hlt
test
movsb
sbb
lods
insb
or
and
xlat
jle
call
jge
jge
jp
mov
sub
push
lods
push
ja
dec
jecxz
mov
and
inc
into
js
call
mov
jecxz
xchg
ja
lock
cld
mov
shrb
or
bound
push
sarb
popa
addb
sub
daa
mov
mov
jno
lds
sbb
mov
pop
jnp
jge
mov
inc
daa
cmc
inc
sbb
test
pushf
jg
jo
jo
les
loop
cld
add
cmp
sub
ss
ja
xor
pusha
lock
pop
gs
sub
adc
or
cmp
popa
inc
ds
or
xor
or
sbb
adc
cmp
aad
data16
fs
adc
sbb
adc
lock
shr
insl
dec
ja
mov
push
out
in
and
jg
hlt
sbb
jle
add
insl
shrl
ret
fs
scas
push
mov
sti
fs
push
add
pop
sub
or
movsb
fs
bound
push
dec
jmp
dec
jmp
dec
dec
popa
scas
aad
xor
push
outsb
inc
inc
ret
pop
out
ss
ret
and
in
out
fdivrs
lahf
add
push
add
jge
int3
stos
xor
rorl
shll
cli
dec
mov
and
push
push
scas
push
popa
je
cmp
xchg
cmp
and
decb
imul
insb
in
xchg
sbb
push
scas
lods
and
xor
std
xchg
xlat
or
mov
fstpl
cltd
jle
dec
insb
xchg
cmp
xchg
push
add
jecxz
mov
gs
mov
lahf
pop
in
mov
sub
mov
push
imul
ja
xchg
ja
adc
repnz
mov
arpl
push
out
imul
dec
pop
sbb
mov
leave
mov
push
pop
jp
dec
das
pop
xchg
push
xchg
dec
mov
sub
push
jmp
add
add
pop
adc
xchg
mov
pusha
into
por
xchg
aad
add
sbb
aad
adcb
sbb
arpl
loop
ds
in
fxam
sub
sbbl
cmp
pop
pushf
lods
out
mov
dec
mov
mov
fmuls
int
dec
push
int
pop
into
nop
sbb
cmp
bound
shll
adc
pop
jecxz
add
push
outsl
movsb
scas
and
out
sub
mov
in
pop
push
push
dec
cmp
sbb
adc
push
push
inc
push
xchg
icebp
sbb
flds
push
mov
jno
ljmp
lods
mov
rcll
repnz
loope
cmp
xlat
data16
mov
sub
cld
jmp
xchg
pop
mov
outsb
iret
dec
jae
test
xor
xchg
inc
jnp
push
test
cmp
nop
cmpsl
jmp
xchg
push
dec
jbe
jae
pop
pop
loop
jg
or
lret
push
loop
stc
lds
ret
dec
xor
fxch
ret
and
imul
push
cmp
xchg
and
mov
dec
in
js
jecxz
adc
jmp
ljmp
jb
ss
xor
outsl
dec
fildll
push
inc
push
dec
mov
pop
mov
pusha
mov
jb
push
adc
jge
addl
bound
cld
aad
btr
aas
movsl
push
out
insl
std
aaa
sbb
jmp
or
shrl
mov
shll
mov
rclb
push
mov
pop
inc
mov
test
or
mov
out
inc
popa
lea
mov
nop/reserved
inc
mov
lea
sti
imul
stc
pop
mov
cmpsl
mov
mov
dec
test
mov
pop
sub
sbb
loope
scas
pop
rolb
sbb
in
negb
xchg
out
adc
sbb
cltd
push
and
imul
stc
pop
movsl
in
mov
mov
dec
scas
imul
inc
mov
jnp
test
jns
cli
aas
loope
mov
lods
adc
loopne
ss
pop
mov
insb
push
fs
mov
aam
fld
sbb
dec
dec
push
mov
in
push
adc
adc
cmp
mov
jbe
inc
push
mov
push
incw
push
push
aaa
or
inc
jae
loopne
popa
add
jle
outsl
bnd
adc
dec
adc
js
and
sti
dec
cmp
bound
std
icebp
lods
in
lcall
mov
dec
pop
das
xor
xchg
lods
sbb
or
mov
dec
addl
mov
adc
xor
js
jbe
pop
and
xor
out
rclb
ret
out
adc
inc
sub
aam
sarb
inc
mov
jle
push
push
xor
fadds
mov
in
add
negl
jp
arpl
arpl
cmp
xorl
cmp
aam
fadd
pop
inc
push
stc
sti
in
fucomip
mov
pop
fwait
xor
sti
in
xor
dec
pop
add
push
mov
mov
sub
lods
jle
jg
xor
dec
mov
stc
aaa
jl
inc
cmc
rcll
loope
std
mov
hlt
mov
push
adc
hlt
cmp
cs
pop
mov
fmull
inc
dec
cmp
xor
jo
xchg
jbe
jne
jns
xchg
je
or
pop
pop
xchg
cld
int
inc
decl
jp
xchg
pop
insl
xchg
adc
dec
xchg
iret
xchg
imul
sub
jmp
sbb
and
add
pusha
and
into
and
jmp
mov
pop
dec
xchg
pop
leave
mov
sub
adc
inc
sub
shl
jno
inc
adc
je
frstor
shl
add
sbb
rolb
jns
push
mov
fsubrl
jnp
movl
pop
push
pop
pop
shrb
mov
movnti
stos
in
xor
jecxz
loope
push
inc
in
int3
or
push
outsl
sub
imul
mov
std
cmp
outsl
outsl
cmp
xor
xchg
cmp
scas
cmp
push
inc
pusha
inc
aad
jo
inc
leave
lock
inc
dec
and
mov
add
ja
jge
push
sbb
in
push
flds
imul
pop
pop
sub
data16
xchg
mov
cmc
clc
aas
imul
mov
divb
fisttpl
mov
aas
insl
cmp
cmp
sbb
push
mov
icebp
cmc
jb
mov
imul
fbstp
and
fisttpl
and
add
xchg
test
ret
pushf
inc
std
sub
fldcw
push
sti
add
pop
je
lods
pushl
in
fwait
daa
mov
sub
lea
push
pop
pop
subl
inc
push
sub
int3
outsb
scas
mov
dec
jl,pn
jl
add
and
sbb
lds
cmp
outsl
push
mov
xor
xor
mov
sbb
je
divb
test
ljmp
pop
bound
shl
sub
hlt
pop
sbb
dec
dec
inc
stos
je
sub
add
adc
ds
fs
jecxz
pop
nop
or
lret
fcoml
pop
cmp
movsb
adc
fcoms
adc
lods
add
movsl
imul
jg
xor
fdivr
push
xchg
adc
adcb
pop
xor
xchg
sub
repz
jmp
ret
sbb
cmp
cmp
int
lods
jno
sub
ss
imul
add
ds
adc
popa
mov
inc
add
adc
mov
adc
xor
or
arpl
rclb
jge
ss
sbb
or
cmp
sbb
and
lds
lods
adc
fwait
xor
cmp
add
pop
adc
ljmp
pushf
and
sti
nop
scas
xor
enter
dec
dec
lods
inc
lods
rcll
dec
adc
aad
pop
adc
push
mov
shlb
mov
js
rclb
or
push
xor
xchg
mov
dec
rcrl
or
mov
xchg
aas
adc
mov
pop
ss
and
lock
adcb
sub
dec
xor
pop
les
adc
or
pop
pop
inc
add
jecxz
aaa
and
ss
sbb
aad
push
sbb
clc
pop
mov
or
adc
xor
push
daa
push
movsb
push
mov
bound
xlat
xlat
into
inc
aaa
cld
lahf
push
fcomps
dec
jl
mov
push
bswap
subb
pop
adc
sub
pop
push
mov
pop
dec
sub
sub
js
pop
mov
inc
add
ret
dec
mov
repz
dec
pop
lds
and
mov
loopne
fadd
inc
mov
dec
dec
and
mov
inc
lds
gs
dec
icebp
rol
cld
fdivrs
out
das
xchg
pushf
inc
pop
xchg
mov
movsl
push
add
push
clc
stc
and
div
jg
addl
popf
decb
jle
jb
sbb
jge
popa
mov
popa
mov
cmc
neg
pop
imul
push
inc
push
mov
iret
les
repnz
or
in
movsb
mov
cmp
pop
fst
xchg
loop
mov
push
inc
std
adc
dec
jae
pushl
cmpb
loope
pop
pop
fdivrs
push
sub
fwait
popf
sub
push
push
mov
jo
jbe
cmc
dec
testl
pop
jns
imul
mov
jle
fmuls
data16
xor
das
mov
jno
inc
adc
xchg
movsb
pop
cld
sub
cmpsb
decl
cmpsl
mov
mov
jns
rcrl
jl
mov
arpl
orl
int3
mov
mov
sbb
or
lret
xor
sbb
push
pop
mov
fnsave
jns
xchg
jnp
orb
pusha
cli
jg
xor
stos
ret
fwait
sarl
iret
xor
in
fnstsw
jle
mov
bound
repnz
push
test
xor
jecxz
mov
add
shl
ret
mov
sub
or
adc
jle
jbe
mov
xchg
sbb
cwtl
lock
int
push
sbb
mov
mov
cmp
fisubs
jbe
inc
jge
jecxz
sbb
and
jo
mov
push
xchg
jg
call
pop
cmp
int
lock
sbb
mov
jl
add
sti
into
xor
je
and
mov
dec
sub
push
mov
mov
shl
push
xor
add
mov
cmp
mov
xor
jg
mov
inc
arpl
into
loop
mov
jle
js
call
lods
fisubl
bnd
jge
jne
and
jo
es
fs
xor
xor
jge
push
repnz
jo
cli
and
cmove
xor
js
jo
xchg
ds
push
pop
popf
or
fldt
cltd
mov
rolb
jo
inc
jne
xchg
jae
ss
nop
stos
sub
flds
sub
xor
jecxz
add
push
aas
jmp
out
pop
dec
xchg
jnp
jno
mov
test
xlat
xor
dec
das
or
dec
jle
popa
outsl
aas
cmp
sub
cld
ljmp
xor
hlt
inc
dec
in
js
test
fcoml
inc
popf
or
call
aam
push
xor
lods
ret
mov
push
fs
jmp
ja
add
add
pop
jl
sub
jle
es
testb
push
lods
insl
add
sub
rcrl
mov
jp
aas
push
xor
add
push
loop
push
pop
lock
roll
mov
aad
testl
jl
sbb
mov
stc
fdivs
sbb
iret
push
and
dec
add
and
mov
mov
fidivrl
stos
adc
pusha
push
and
pop
cs
mov
rcll
push
sub
data16
sub
jne
fstl
sbb
xlat
push
stos
jle
jo
test
push
adc
adc
ret
outsb
cmp
adcb
notl
scas
test
xor
ljmp
hlt
add
int
popf
sbb
xchg
xlat
inc
xor
shll
fsubrl
outsb
xchg
mov
rolb
jnp
push
add
and
in
push
jno
mov
sti
pop
mov
divb
mov
fisubrl
lret
fcoms
push
lret
cmp
cmp
and
mov
cmp
xchg
xor
xchg
sub
sub
int
mov
push
test
and
fcomp
and
outsl
jecxz
test
or
aas
sbb
dec
popa
xlat
mov
and
mov
mov
movsl
adc
push
xlat
jns
cmp
or
xor
imul
std
les
es
std
sbb
pop
cmp
jmp
aaa
mov
sbb
adc
sbb
xchg
jle
push
cs
aad
loopne
add
push
xor
sar
or
push
aam
jmp
sbb
das
xor
xor
into
popa
add
cmc
jle
cmp
jo
subl
andb
lods
andl
mov
pushf
push
mov
and
cmp
ret
sub
inc
cmp
add
and
ret
arpl
adc
mov
jge
lret
xchg
outsl
mov
cmp
xchg
jae
pop
popa
add
push
hlt
jle
and
arpl
dec
mov
or
les
xor
mov
or
cwtl
andl
mov
loop
mov
pop
fisttpll
daa
dec
xor
jae
and
and
jecxz
jne
das
xorb
and
ljmp
pop
loopne
and
push
add
fsubl
clc
sub
rolb
and
loope
push
or
push
cmp
les
leave
std
test
jo
pop
ss
je
push
icebp
movsb
fisubs
mov
cs
adc
test
add
sar
sti
pusha
test
jecxz
insl
cmp
sub
push
into
xlat
mov
xchg
mov
adc
loopne
nop
pop
into
pop
icebp
sbb
mov
lds
sbb
jg
outsb
jle
and
pop
mov
iret
and
popa
mov
pop
lahf
xchg
sub
mov
lock
rclb
cmp
mov
sbb
xor
es
movsb
pop
in
add
fcomps
leave
jne
dec
xor
cmp
mov
jnp
adcb
jp
bound
cmp
jae
sbb
test
pop
push
push
jle
insl
lods
and
add
adc
push
pusha
mov
sub
scas
std
mov
mov
push
in
sti
adc
or
xor
push
sub
lea
lods
pop
mov
push
or
cmp
mov
sbb
mov
jne
cmp
mov
scas
mov
mov
mov
lret
loopne
ficomps
push
add
daa
cmp
mov
sbb
rol
jmp
push
in
imulb
mov
sub
jmp
xchg
xor
cs
lret
jge
jl
dec
cmp
shrb
xor
jo
int
mov
mov
pushf
push
lea
scas
adcl
dec
sub
sarl
js
and
ds
xchg
xlat
inc
and
mov
push
jnp
cld
dec
xchg
lahf
int
add
mulb
or
cmp
out
dec
lret
ja
pop
push
test
mov
repnz
outsb
and
lcall
mov
jecxz
mov
add
mov
cmp
mov
test
in
inc
lock
fdivl
push
sahf
or
jge
sbb
or
scas
or
jne
sbb
insl
clc
lret
jns
ss
jne
or
and
cld
mov
hlt
adc
dec
inc
sub
cld
js
aas
insl
outsb
fsubl
je
decl
popa
test
mov
add
fcoms
push
fiadds
rclb
jle
mov
or
cltd
testl
pop
cmp
outsl
imul
sub
jl
stc
fs
cmp
dec
popa
push
mov
test
movsl
pusha
xlat
sub
ret
imul
cmc
xlat
push
pop
rcr
popa
loope
push
cmp
shll
arpl
in
ss
lahf
bound
xchg
mov
insl
hlt
insl
in
es
lret
add
push
int
cmp
dec
sarb
fwait
mov
shll
idiv
ds
xor
shll
pusha
mov
jmp
fisubrl
mov
lret
in
out
test
xchg
mov
sub
mov
inc
dec
cmc
jnp
lret
mov
loopw
out
icebp
fadd
or
xor
stc
in
das
insl
jecxz
popa
and
xchg
jbe
gs
int3
fstpl
or
xchg
xchg
rcrb
mov
adc
pop
ja
mov
sbb
test
pusha
lds
iret
jge
mov
shlb
mov
mov
mov
out
aas
lods
or
dec
out
repnz
jb
dec
push
insl
adc
sbbl
sub
ret
mov
jmp
xchg
adc
std
dec
cmp
and
addr16
rcrb
test
shld
jcxz
cmp
push
add
jmp
inc
outsb
xchg
fcoms
push
mov
pop
scas
sbb
dec
mov
mov
pusha
mov
outsl
lahf
insl
cmp
ss
rcrb
je
jo
push
pop
mov
les
sub
insb
lods
aaa
clc
std
mov
ffree
mov
addr16
out
sub
xchg
push
scas
mov
js
jecxz
inc
hlt
cli
dec
out
jnp
jmp
outsl
cmp
add
xor
xor
jge
sbb
into
cmpsb
pushf
jle
fdivp
jo
loope
in
adc
jae
jge
ja
xchg
popf
in
fistpll
popa
lods
aaa
jae
lock
loop
mov
iret
int
dec
pop
jmp
in
outsl
call
addr16
and
sub
dec
popa
xchg
add
out
inc
test
push
xchg
pop
test
fs
cmp
jae
mov
jns
gs
aas
push
cmp
insb
rclb
jbe
cwtl
pushf
call
push
popf
cmp
and
notb
in
fwait
cmp
fisttpll
or
add
jne
imul
adc
fbld
mov
rcrb
pusha
out
sub
in
sub
pop
insl
and
test
push
cmpsb
imul
jns
sub
or
sub
call
loope
dec
fstpl
inc
adc
mov
lods
push
repnz
out
lahf
cmpsb
cmp
bound
mov
lahf
divb
cwtl
mov
jne
dec
jae
cmpsb
popa
sbbl
ljmp
dec
jmp
into
out
and
xchg
push
xor
inc
into
pop
inc
jae
mov
push
xchg
nop
fnstsw
mov
sub
dec
ret
pop
push
shll
pop
outsl
cmp
fwait
cmp
cwtl
adc
inc
jne
mov
mul
xor
sbb
popa
pop
or
xlat
push
xchg
aas
adc
fdivr
xor
push
mov
pop
xchg
jb
xchg
pop
lods
push
pop
stos
cmp
shrb
xchg
mov
fisttps
add
mov
aaa
imul
stos
cld
push
dec
loope
and
popa
ficoml
mov
or
sub
es
lds
xor
and
mov
fbld
fnstenv
dec
lods
shrb
sbb
inc
lret
sub
in
hlt
imul
inc
cmpsb
scas
pop
cwtl
push
das
andl
xor
pop
popf
stos
lahf
cli
mov
xchg
mov
js
or
adc
jb
sub
ja
xor
js
pop
push
cmp
ljmp
aaa
adc
push
aaa
push
pop
mov
dec
ljmp
imul
adc
pop
cmp
out
sub
mov
rol
xor
cmp
les
cmpsl
push
cmpsl
aas
adc
fadds
push
xchg
mov
frstor
movsl
inc
jbe
cmpsb
push
cmc
icebp
imull
stos
cld
sbb
xor
cmp
ds
subl
lahf
xor
cmp
adc
pop
ss
sbb
xor
in
sub
jg
cmp
xlat
xor
mov
sub
jne
mov
iret
cmp
cmp
xor
push
lahf
inc
add
jp
movsb
sub
out
sahf
sbb
adc
push
pop
add
in
add
test
mov
out
sub
push
out
mov
out
sub
cmp
jmp
xchg
cwtl
cs
fs
cmp
leave
mov
sub
mov
daa
lret
mov
test
jae
pop
mov
imulb
leave
pop
ret
ljmp
xor
lcall
pop
daa
ds
insb
in
inc
pop
xor
fildll
test
mov
xor
and
push
fcmovbe
pop
imul
mov
icebp
sbb
loopne
or
daa
jno
rolb
lret
sti
push
hlt
in
hlt
movsb
das
cs
icebp
into
movsl
test
daa
jns
jle
push
arpl
insl
xchg
mov
jbe
out
lcall
adc
frstor
xor
sbb
pop
add
je
and
aad
dec
push
ss
dec
cs
mov
stc
ss
xchg
mov
jb
ss
pop
je
cmp
ret
arpl
xor
cmp
jbe
dec
ss
fs
imul
mov
xor
pop
inc
mov
add
push
bnd
int
dec
mov
jmp
inc
insb
lods
sbb
cmp
gs
and
xchg
sbb
xor
dec
xchg
iret
mov
push
into
push
jbe
cmpsl
and
mov
xor
clc
and
imul
out
xchg
outsb
test
imul
cmp
push
sbb
hlt
mov
adc
mov
dec
repnz
push
push
dec
sahf
xchg
imul
jo
xor
sub
cmp
cmc
mov
es
pop
pushf
jbe
sub
rolb
mov
cmpsb
repz
xor
dec
pop
add
jl
mov
push
xchg
mov
mov
jge
jae
xchg
and
mov
adc
adc
jo
add
addr16
imul
jne
push
fsubp
xchg
xor
cwtl
out
cmp
int
cld
and
in
insb
adc
stos
or
addr16
jg
sbb
dec
bound
sti
sub
xchg
cmp
xor
xor
aaa
rolb
dec
daa
jl
je
aaa
push
data16
ror
sbb
repnz
aam
push
pop
iret
fdivr
in
aaa
aas
aam
add
cmp
add
adc
aad
nop
jne
dec
mov
mov
add
xor
and
and
outsl
out
jmp
fdivs
fistpll
and
xor
mov
shrl
ljmp
pop
aas
cmpsl
mov
mov
push
popf
in
push
sbb
pop
jmp
imul
fldenv
shrb
xor
jmp
cwtl
add
gs
in
outsb
dec
add
jmp
xor
iret
sar
out
shll
mov
mov
imul
cmpsb
xlat
jbe
jno
sbb
lret
mov
xor
ds
stos
das
leave
pop
pop
pop
cmp
xor
pop
mov
and
ja
test
lds
sbb
icebp
jb
jmp
arpl
sub
cmpsl
aam
push
jne
cmp
dec
in
jo
aad
outsl
popf
out
das
push
ss
sbb
outsb
enter
add
inc
clc
mov
std
subb
cmp
jae
daa
inc
adc
push
mov
pusha
cmp
movsb
jbe
jae
addr16
push
mov
insl
mov
out
sub
mov
sub
lcall
in
loop
fwait
pop
push
out
aad
mov
rol
cmp
cld
mov
and
mov
mov
mov
loop
add
add
daa
mov
and
dec
mov
mov
adc
out
gs
push
cwtl
or
int
adc
pushf
cmp
mov
dec
mov
sbb
fnstenv
push
sbb
sbb
xchg
push
push
and
dec
faddl
cmp
mov
sti
jno
mov
adc
jle
ja
das
lock
sbb
adc
in
fwait
outsb
insl
lea
ret
mov
test
xchg
pop
and
sub
or
push
xorl
clc
in
and
cmpb
xor
xor
push
cltd
ljmp
pop
cmp
mov
mov
icebp
mov
push
xchg
je
pop
jg
and
xchg
and
push
adc
loopne
sbb
pusha
jmp
lea
scas
lret
push
add
jae
sbb
call
mov
inc
into
lods
inc
jmp
ret
xchg
dec
aam
sbb
mov
add
cli
or
mov
sub
mov
push
push
mov
xchg
loop
mov
pop
jge
in
out
inc
outsl
xchg
xchg
bound
mov
push
lods
clc
test
lret
popf
andb
daa
dec
xor
aam
cwtl
mov
enter
xchg
lods
les
adc
jmp
inc
and
xlat
adc
insl
inc
cs
leave
sbb
sub
push
cmp
shrl
mov
pop
imul
popa
sti
jno
xchg
and
xchg
call
addr16
pop
sbb
push
push
xchg
arpl
mov
jns
pusha
sub
dec
and
cmp
adc
test
mov
mov
jge
cmp
sbb
pop
imul
add
popf
xor
pop
imul
imul
shll
aad
sti
out
xchg
pop
sub
adc
and
insb
mov
stc
stos
imul
mov
and
and
cmp
sbb
xchg
clc
adc
add
pushl
mov
in
dec
out
leave
enter
inc
sbb
xchg
mov
loop
adc
in
pop
pcmpgtw
mov
mov
adc
popa
test
out
fsubp
out
adc
jmp
xchg
leave
insl
sbb
fcoms
test
imul
lcall
jnp
aad
xchg
xor
pop
add
loopne
inc
fwait
pop
jmp
iret
js
insb
sbb
leave
sbb
popa
addr16
lock
inc
jo
fstpl
fdivr
shlb
int
sbb
pop
out
sbb
fists
xor
sub
movsl
js
ds
jb
jbe
insb
adc
mov
adc
push
ja
ret
jnp
pop
or
hlt
std
cmc
mov
mov
xchg
push
out
xchg
or
sbb
jl
pop
clc
push
lret
cmp
rcrl
loope
and
jg
push
sbb
pop
pop
push
xor
out
dec
xchg
stc
data16
loope
xchg
xchg
daa
or
outsb
sub
xchg
out
inc
loop
and
aam
jo
cmp
xor
xor
sbb
cwtl
adc
and
sbb
sbb
std
xchg
jp
cmp
gs
adc
sbb
lds
sti
dec
lods
cli
aas
pop
aas
sbb
xchg
mov
adc
sarb
addr16
jbe
dec
mov
adc
ja
insl
popf
inc
push
stos
pop
sti
xor
idivb
sbb
jg
or
xchg
out
sbb
jg
or
lock
xchg
fsts
outsb
popl
or
jbe
pop
pop
add
repnz
sbb
loope
aaa
imul
push
pop
lock
icebp
pop
clc
xor
or
push
cmovl
dec
sbb
xchg
or
xchg
or
adc
jo
mov
cmp
mov
mov
cwtl
and
dec
adc
lds
or
mov
lock
and
mov
xchg
jbe
push
cmpsl
insl
shrl
mov
push
in
jns
dec
repnz
test
xlat
dec
rcrb
cs
imul
outsb
out
jl
outsb
sbb
or
mov
xchg
negl
lahf
icebp
out
push
adc
add
or
push
sahf
sub
cmpsl
arpl
pop
xchg
lods
scas
adc
hlt
mov
or
xchg
push
addr16
fstps
or
mov
adcl
xchg
xchg
sub
or
aam
gs
repnz
scas
pop
adc
dec
pop
jge
or
sub
mov
pop
pop
xchg
ds
loope
xchg
jge
or
rcrl
shr
pop
mul
outsl
xchg
andb
push
stos
or
hlt
xchg
or
xor
jl
pop
cs
in
cmp
gs
call
in
add
jno
pushf
movsl
cltd
mov
pop
and
xor
sbb
icebp
pusha
fwait
sub
cmpsl
arpl
pop
mov
xchg
hlt
mov
or
mov
jne
aam
lret
mov
leave
or
mov
adcb
xchg
xchg
aaa
jae
sbb
or
aam
mov
addr16
imul
jge
or
fisttps
repnz
mov
cs
popa
or
mov
stos
or
fcompl
xor
push
rcll
sbb
or
test
hlt
insl
movq
pop
rcpps
arpl
mov
dec
lea
insb
enter
por
fcoml
cli
and
sub
xchg
push
jmp
jno
cltd
movsb
mov
sbb
pop
sbbl
jg
cmp
cli
push
adc
into
repnz
bound
jne
addr16
pop
pop
or
dec
xor
xor
addr16
js
mov
cwtl
pop
popf
pop
mov
add
or
and
add
mov
ds
jno
das
xchg
pop
or
jmp
jmp
cwtl
cli
sahf
xor
loope
scas
add
dec
add
sub
push
push
jne
aam
imul
fisttps
cmp
push
out
xor
sbb
xor
jno
push
js
adc
adc
mov
sub
dec
jns
pusha
xchg
cmpsb
and
mov
aas
mov
cwtl
dec
sbb
cmpsb
add
pop
cwtl
sbb
mov
outsb
js
call
pop
pop
mov
xchg
out
mov
out
push
push
mov
xor
jg
fsubrs
cmpsb
push
lret
push
add
mov
sub
push
add
jp
repz
sbb
mov
test
shrb
pop
xor
or
repnz
and
push
cld
push
fs
in
xchg
lret
push
mov
unpckhps
mov
push
lcall
or
repz
xchg
into
or
mov
jno
mov
pop
sub
or
mov
push
in
inc
insl
jno
mov
repnz
aaa
mov
aas
jae
sub
or
aam
enter
push
add
clc
in
test
and
imul
push
mov
std
rcl
bswap
add
xchg
jle
cltd
or
out
sti
fisttpl
gs
mov
xorl
add
mov
insb
idivb
jg
xor
lahf
pop
loopne
push
add
sbb
mov
push
xor
lock
xchg
sbb
dec
sub
jae
fists
and
pop
add
xor
dec
pop
push
rclb
push
xchg
inc
fwait
aad
cmc
adcb
nop
imul
in
lock
out
pop
pop
mov
push
imul
cld
jmp
mov
sub
std
jae
hlt
movsb
jmp
fsubl
jl
jecxz
out
cmpsl
or
test
push
pop
mov
xchg
pop
and
push
jns
mov
cld
or
ficoml
in
pmaxub
dec
call
jno
mov
push
insl
mov
movsb
fiadds
push
inc
pop
mov
pop
push
out
push
imul
insb
mov
rcll
push
test
je
sbb
add
mov
pop
jecxz
mov
mov
mov
inc
xchg
xor
rcrl
inc
cmp
add
xor
fcomi
outsl
add
mov
dec
xor
ret
cld
dec
scas
aas
add
xor
inc
cmpsb
or
push
paddw
mov
iret
mov
int3
rcrl
push
mov
push
pop
pop
sbb
lock
jo
cmp
cmp
enter
imul
cmp
fnstenv
loop
pop
icebp
gs
xchg
mov
arpl
and
fcmovb
faddp
imul
xchg
loope
cmp
or
pop
jle
mov
bound
pop
std
xchg
cs
or
xor
mov
sub
imul
testb
faddl
xchg
outsb
jge
fsubs
shrl
mov
loop
mov
imul
insb
pop
cld
pop
pop
ds
out
add
mov
dec
push
xchg
loop
adc
jo
add
sub
or
jbe
xor
mov
fwait
mov
xor
inc
cltd
loope
and
xor
outsl
push
fdivs
addr16
jle
xor
push
jo
jns
cmpsl
pop
pop
ljmp
push
or
xchg
mov
aad
cmpsl
das
cld
movsl
insb
and
jno
lahf
push
inc
mov
dec
nop
inc
idiv
mov
mov
mov
sbb
das
shll
js
dec
and
aaa
pop
jle
call
inc
push
ljmp
repnz
nop
out
out
mov
dec
inc
aaa
popa
pop
mov
inc
fcomip
and
in
xor
sti
sbb
lea
in
in
pushf
sub
inc
insl
fldenv
cmc
or
cltd
jnp
adc
jno
cmp
fidivrs
stc
cmp
jl
cmp
popf
icebp
ds
pop
pushl
xlat
repz
xchg
pop
in
mov
mov
das
shll
inc
fldl
jl
ret
push
lods
decb
xchg
mov
xchg
xorl
gs
or
jp
loope
cmc
ja
aam
jl
js
fucom
insb
jl
pop
insl
xor
jne
xorl
push
imul
sbb
loope
mov
ret
imul
add
popf
icebp
stc
mov
push
jae
lea
xchg
int
and
pop
cmp
pop
jge
pop
jl
aad
sub
shll
mov
cmp
test
ja
sbb
inc
in
subl
sub
out
cwtl
pop
jge
sbb
pop
cmp
mov
int
mov
cmp
mov
sub
lcall
dec
stos
std
or
leave
add
js
and
dec
cmpl
dec
sbb
je
aam
cmp
jo
out
repz
data16
add
jbe
push
std
in
add
jg
jo
cmpsb
pop
mov
cmp
jae
ja
mov
mov
mov
dec
xchg
xor
and
aad
cmp
addr16
jmp
push
pop
cmp
int
mov
xor
cmc
mov
cmpl
pop
insl
mov
push
cld
outsb
inc
pop
cmpsb
pop
xor
cmpsl
and
adc
test
jo
cmp
mov
sub
insb
and
xor
and
in
xchg
int
pop
outsb
jno
adc
das
sbb
sar
pop
adc
out
mov
mov
sub
and
push
ret
and
jmp
inc
inc
insb
pminsw
sarb
in
int3
loopne
dec
jne
addr16
pop
test
jl
mov
pop
outsl
movsl
adc
popa
push
xlat
xor
in
pop
inc
nop
in
pop
and
aad
cmp
addr16
jmp
fnstsw
imul
mov
je
ret
mov
pop
in
push
imul
mov
push
in
neg
sub
xchg
outsb
cmp
data16
shrl
cmp
fldln2
or
mov
out
pushf
imul
push
call
mov
add
jne
jle
jno
jp
xchg
je
jl
ja
js
jae
gs
imul
insb
arpl
fs
outsl
lock
and
out
iret
or
js
data16
shlb
mov
add
jl
jnp
sub
inc
mov
cld
testb
jl
sub
out
jg
jle
push
les
pop
jge
stos
jne
push
xor
testl
call
adc
lret
mov
cmp
sub
lods
scas
in
xchg
popf
test
sub
mov
in
fwait
jl
mov
pop
sbb
mov
mov
mov
movsl
adc
jp
mov
push
mov
cltd
inc
daa
jne
adc
lods
pop
clc
or
jp
mov
jge
mov
pop
int3
jg
flds
in
inc
ds
jne
mov
xchg
or
and
jne
and
dec
lods
iret
pop
inc
jnp
sub
outsl
adc
jl
rolb
pop
push
xor
jns
outsb
jmp
les
jns
fbstp
test
jns
sti
mov
lock
adc
mov
popa
sbb
jl
test
test
push
and
xchg
lock
jb
jns
inc
lret
adc
jns
les
jo
clc
repnz
fs
push
jns
popf
add
je
jne
sbb
je
pop
lahf
or
mov
sbb
mov
jmp
fdivl
lea
jl
mov
mov
and
dec
ret
mov
rorb
xor
test
je
xchg
adc
xor
add
rcr
mov
cmpsb
aas
and
mov
rorl
scas
cmpsb
popf
jl
aaa
cmp
jns
nop
shrl
jne
js
nop
ljmp
fistpll
add
bound
jo
aas
cmp
insb
icebp
jle
cli
jns
sti
mov
rcrb
jns
and
shr
sbb
cmpsl
sub
mov
movsl
inc
enter
imul
and
inc
sub
into
fcomps
les
inc
iret
out
sti
sahf
mov
je
inc
mov
push
jns
sub
cli
arpl
packssdw
pop
lcall
push
adc
pop
es
mov
xchg
push
xchg
xlat
jne
int
jb
add
sti
adc
jge
mov
sub
cmpb
cmc
xchg
sbb
fwait
cltd
push
cltd
or
testl
imul
stc
xchg
sti
mov
into
bound
int3
leave
adc
das
add
movsb
push
mov
sub
dec
xchg
test
leave
inc
ds
cmp
mov
mov
jbe
sbb
jno
mov
sub
nop
aam
sti
cltd
dec
add
sahf
jl
stc
inc
sbb
jns
push
scas
push
push
rcrl
jns
jg
jle
mov
push
bnd
lret
int3
mov
out
es
repz
lret
jl
mov
inc
idivl
cs
fldt
daa
leave
mov
pop
xchg
jmp
std
out
adc
pop
jp
or
dec
jnp
stc
push
jb
outsl
or
idivl
aas
dec
jmp
fcmovnu
int
dec
in
lret
insb
repnz
out
ret
adc
xchg
test
enter
and
cmp
sub
je
mov
jns
lods
pop
rolb
js
ret
and
testl
push
sbb
push
andl
sahf
jae
sbb
and
cli
jno
mov
sbb
fisttpl
cmp
or
dec
mov
jl
mov
mov
jbe
das
dec
sub
dec
jl
or
into
ds
add
ja
jmp
les
mov
ljmp
jns
inc
daa
xchg
and
jne
movsl
pop
pop
lea
lret
sbb
arpl
fisttpll
jle
frstor
sti
mov
hlt
lcall
hlt
in
mov
sbb
pop
inc
fldl
adc
xor
into
mov
mov
sbb
js
mov
inc
mov
jno
cmp
gs
push
nop
cltd
movsl
jbe
imul
dec
test
dec
and
cmpsl
aad
aaa
adc
jae
pop
sbb
jae
cmp
jae
and
imul
sbb
sbb
cwtl
dec
mov
addb
cld
call
fldl
sti
clc
addl
mov
stc
popf
cmc
jne
je
das
mov
xor
je
adc
adc
pop
xor
inc
fadd
mov
insb
fldcw
push
cld
mov
add
xchg
cmovne
xor
imul
dec
loope
adc
inc
adc
dec
inc
adc
scas
cmpsb
stc
inc
repz
imul
int
dec
fs
xor
or
in
sub
xor
mov
ja
xor
ret
mov
call
sbb
jne
cltd
push
les
dec
les
push
mov
add
leave
sbb
aam
pop
push
adc
test
mov
out
rorl
cmp
inc
cmpsl
jge
std
cmp
popa
pop
xor
inc
out
imul
test
push
out
dec
dec
ficoms
dec
in
cmp
ss
outsl
int3
adc
movsb
lock
jl
sub
pusha
dec
and
mov
push
xchg
dec
sub
push
add
shlb
sbb
mov
out
in
push
cltd
outsb
sbb
dec
movsl
rcrb
insl
rcll
jge
dec
push
das
insl
mov
lcall
das
arpl
ljmp
aas
add
pop
jbe
in
out
insl
movsl
xchg
push
leave
sbb
pop
cltd
jecxz
lods
push
add
and
jae
xchg
jge
test
inc
pop
cmp
xchg
pop
test
hlt
outsl
arpl
je
into
dec
mov
or
cmc
dec
addr16
aaa
cmp
jno
in
jle
imul
pop
lahf
xor
pop
lock
in
pop
adc
aad
cmp
cmp
and
dec
test
adc
and
scas
jne
shl
cmp
loope
jo
int
cmc
lods
in
mov
gs
in
inc
dec
lret
dec
xor
and
push
xor
cli
pop
out
loope
frstor
dec
cwtl
enter
imul
cwtl
dec
add
xchg
imul
insl
and
test
cmp
icebp
jl
loope
cltd
je
call
cmp
dec
mov
inc
cmc
xchg
jno
rcll
ss
sub
outsb
fists
xor
in
pop
push
std
xchg
cmp
addr16
sub
push
jge
loope
jge
js
lds
add
lea
xlat
dec
lock
and
pop
mov
ljmp
and
push
push
test
out
xor
cld
lret
outsb
xor
dec
test
push
push
xor
in
pop
cltd
xor
jp
fwait
out
idiv
je
insl
sub
pop
and
popf
add
push
pop
cmp
mov
aad
xchg
jno
xor
in
pop
xor
lods
adc
cmc
in
pop
fnstsw
sahf
cmp
test
pop
repz
push
add
fsubr
aad
cmp
repz
rcrl
dec
ss
sub
outsb
fists
xor
in
jb
and
rolb
add
or
push
es
outsl
pop
sarl
out
fistpll
add
sbb
enter
sbb
scas
mov
cmp
punpckldq
and
mov
rcrl
ja
push
cld
push
push
dec
xor
jnp
pusha
pusha
shr
call
in
push
or
sbb
out
lcall
mov
dec
cltd
pop
cmpsb
cwtl
mov
dec
and
or
lods
jnp
adc
inc
sbb
add
push
sub
sbb
or
mov
ss
dec
mov
jns
pop
or
shll
pop
test
popa
mov
cmp
push
sub
shrb
push
imul
lods
mov
and
xchg
dec
mov
dec
xor
dec
ss
cmp
lret
ret
outsl
daa
lods
sub
aas
push
sub
sbb
repz
rcr
pop
aas
popa
xchg
ja
fistpl
sub
or
push
mov
pushw
push
inc
cmp
and
das
cld
lods
test
inc
sub
subb
cli
jo
sbb
arpl
pop
mov
mov
adc
gs
aaa
or
cmp
inc
ds
sbb
xor
mov
nop
xor
cmp
sbb
mov
ret
out
inc
xor
arpl
cmp
jnp
das
in
scas
ja
mov
cmp
mov
inc
adc
stos
jbe
sbb
xorl
jl
add
add
out
daa
and
outsl
hlt
cmp
jg
mov
or
aad
ds
insb
loop
pusha
cmp
push
int3
mov
sub
out
mov
mov
clc
xor
push
mov
gs
les
clc
cmpsb
ja
adc
insl
lea
mov
adc
cld
outsl
push
fistl
insl
mov
mov
movl
mov
stc
mov
insb
cltd
and
and
outsl
jo
and
out
cmp
xor
cli
push
and
mov
cmpsb
xor
jnp
fldcw
jnp
fldpi
and
sbb
test
dec
stos
sub
add
icebp
outsb
xor
cmp
fwait
out
repz
mov
add
mov
outsb
jae
sahf
adc
mov
xchg
nop
enter
push
ljmp
and
fisttpl
mov
adc
out
out
es
push
or
inc
jbe
and
mov
cwtl
pop
push
lret
popf
sbb
cmp
cmp
pop
lods
mov
push
lcall
aam
fsubrs
mov
ret
cmpsb
xor
inc
ja
xor
stc
or
inc
leave
mov
fwait
adc
arpl
sub
cmc
test
xlat
pop
sub
inc
mov
cmp
sbb
mov
or
push
cltd
cmp
and
out
out
lret
push
mov
scas
push
pop
sub
faddl
push
sbb
fsubrs
xor
frstor
xor
lea
movl
das
push
stc
mov
sbb
fiaddl
aaa
out
cmp
jae
pusha
stos
xchg
or
sbb
out
cld
push
daa
mov
jne
sub
xor
jae
pop
jne
pop
or
and
xor
cmpsl
ljmp
cmp
repnz
daa
mov
push
ret
out
xor
cld
pop
sbb
call
scas
cli
fsub
mov
shrb
and
ficompl
pop
mov
push
popf
and
add
pop
divl
inc
scas
data16
sub
and
pop
adc
lahf
cmp
mov
mov
dec
popa
scas
mov
push
mov
enter
add
inc
sub
jmp
fstps
mov
xor
add
push
arpl
insb
aas
xor
sub
imul
xchg
sub
and
mov
cli
aaa
fxtract
pop
push
xor
fwait
cmpsb
mov
mov
cmp
scas
in
repz
cwtl
pop
pop
test
cs
xor
pop
pop
jle
daa
pop
adc
xchg
fldt
shll
hlt
loopne
fisubrs
xor
mov
mov
xchg
xchg
sub
xor
shlb
cli
ss
ljmp
fwait
inc
imul
mov
adc
adc
sbb
lret
iret
push
outsb
or
mov
sub
leave
out
gs
add
mov
stc
sbb
fdivrl
xchg
lds
lahf
add
and
mov
pop
decb
cltd
addr16
mov
daa
ja
push
rclb
jb,pn
test
add
testb
gs
dec
pop
cwtl
jmp
popa
jmp
cmpsl
loopne
jmp
xchg
loopne
jmp
loopne
jmp
insl
loopne
jmp
dec
loopne
jmp
sub
loopne
jmp
std
pop
imul
pop
push
fstpl
push
int
cmp
pop
sub
pop
sbb
pop
or
pop
fists
pop
iret
push
dec
pop
mov
push
sub
adc
pop
or
pop
movb
or
test
dec
in
imul
out
in
outsl
dec
movsl
cwtl
push
xchg
lea
out
xchg
push
cwtl
rclb
and
inc
lea
inc
jns
push
ljmp
sbb
adc
or
out
ljmp
ljmp
lcall
int
popf
dec
adc
popf
pop
adc
popf
out
scas
popf
popf
hlt
push
lahf
dec
mov
iret
aad
sub
pushf
out
in
jle
out
bound
int
cmp
xor
inc
sbb
push
inc
stos
into
cwtl
inc
or
aaa
aaa
adc
sti
aaa
out
out
mov
das
sub
xchg
aaa
outsb
dec
pop
lret
push
cmp
mov
push
inc
push
into
add
or
in
or
test
or
jmp
dec
push
imul
gs
sub
jb
cmp
gs
cmpsb
mov
lds
dec
scas
test
daa
pop
xchg
push
adc
pop
adc
xchg
pop
or
jge
mov
pusha
psubsw
loopne
jmp
mov
pop
loop
push
pop
test
jb
fdivs
jmp
mov
or
mov
sarb
push
out
xchg
in
inc
pop
xchg
ret
cwtl
sub
jb
mov
cli
inc
fs
les
push
nop
pop
pop
push
fs
mov
into
inc
mov
inc
ja
shll
orb
dec
insl
inc
fisttps
mov
in
icebp
loopne
jp
pusha
dec
jmp
into
roll
into
stos
ja
sbb
push
mov
dec
xchg
fs
jmp
sub
pop
mov
mov
sbb
pop
test
add
testb
test
or
test
or
test
or
sahf
pusha
dec
sbb
imul
mov
mov
xchg
jb
jae
pusha
rcrb
dec
shrb
pop
sub
push
pop
hlt
sar
pop
rcl
pop
mov
pop
dec
pop
sub
jb
inc
jmp
insb
pop
out
dec
push
dec
js
mov
add
pop
mov
aas
mov
outsl
dec
test
push
insl
into
sub
into
adc
aaa
fidivrs
mov
mov
pop
popf
hlt
sbb
mov
jmp
pop
mov
mov
sub
mov
mov
xor
cmpsl
mov
add
push
test
or
dec
inc
mov
dec
sbb
jnp
inc
pusha
cmp
xor
mov
xor
cmp
jmp
push
xor
cmp
xor
out
out
arpl
aad
push
out
out
inc
push
mov
out
and
xchg
out
adc
push
mov
divb
xlat
rcl
pop
rol
pop
mov
mov
cmpsl
shlb
ljmp
cwtl
imul
cwtl
dec
xchg
int
cmp
pop
push
sub
lods
push
sbb
popf
push
or
lea
sti
pop
jge
jmp
into
fiadds
ror
mov
jmp
adc
out
adcl
jo
ret
dec
jbe
inc
push
rcll
dec
into
inc
inc
daa
into
lret
inc
mov
lods
mov
call
pop
pusha
imul
test
inc
dec
into
cmp
cmp
into
sbb
sbb
into
cld
inc
std
into
in
inc
in
into
faddl
into
int3
push
int
fisttpl
mov
test
lea
imul
iret
push
cmp
mov
push
sbb
xchg
inc
or
into
in
inc
in
into
faddl
into
int3
inc
int
mov
inc
lods
into
pushf
jp
inc
fimuls
inc
jg
jge
insb
ljmp
dec
ljmp
sub
pop
test
add
aam
rcl
pop
movsl
shrb
pop
xchg
rcrb
dec
add
adc
aaa
dec
mov
cmp
jnp
xor
and
fwait
pop
cmc
push
arpl
push
imul
jg
ljmp
mov
mov
fisttps
sub
jno
je
jns
insb
in
imul
pop
repnz
sbb
fcomps
rcl
pop
pop
int
rcrb
movsb
pop
fnstcw
jno
je
jns
insb
pop
popa
shlb
rcrb
shrb
sub
rcrb
pop
sbb
rorb
pop
or
ror
pop
rcl
pop
leave
sarb
mov
fnstcw
jge
jo
shrb
insl
shlb
push
rcrb
pop
rolb
sub
sbb
rclb
pop
add
rolb
pop
cmc
sar
pop
loope
enter
mov
pop
mov
shlb
dec
jecxz
popa
xchg
jmp
pop
xchg
rcrl
dec
in
cwtl
cmp
xchg
xchg
add
xchg
jg
cmc
xchg
imul
xchg
cmp
mov
xchg
adc
gs
xlat
pop
pop
push
fistps
push
scas
push
dec
gs
nop
inc
xchg
stc
mov
jnp
jmp
mov
and
and
xchg
sbb
mov
add
jno
xor
lret
cltd
sbb
mov
xor
lahf
cwtl
icebp
xchg
addr16
in
xchg
outsl
cwtl
in
push
cwtl
fstl
inc
cwtl
mov
jnp
faddl
cmp
and
jge
hlt
inc
push
mov
xor
xor
cmp
xor
cmp
mov
ds
fnstcw
int3
mov
les
jmp
jmp
jge
jmp
jne
out
insl
jmp
cmpsl
loopne
jmp
xchg
loopne
jmp
xorl
adc
lret
roll
or
lock
push
pop
push
push
mov
out
out
sub
stos
out
adc
out
out
cltd
loopne
dec
sbb
jae
js
inc
daa
jnp
dec
xchg
ss
dec
mov
inc
mov
xor
mov
cwtl
sbb
lcall
xchg
mov
inc
xor
iret
lods
popf
lods
adc
fisttps
cmp
pop
fnsave
inc
push
dec
enter
test
pushw
leave
push
add
lcall
inc
popa
or
pop
inc
push
movb
pusha
jbe
jecxz
push
jmp
test
mov
sbb
inc
fucom
inc
jmp
pop
ljmp
ret
cmp
in
mov
shlb
pop
mov
adc
pushl
stos
or
shlb
sub
sahf
and
mov
cmp
clc
jmp
loopne
xor
in
imul
sti
gs
cmpsb
cmp
xor
ja
mul
push
xchg
orl
cwtl
adcb
insl
inc
push
mov
sarl
imul
popf
and
and
add
pop
popf
hlt
adc
popf
stc
adc
popf
loop
loop
rcll
aad
ficoml
enter
mov
inc
lcall
imul
imul
push
pop
dec
jo
adc
icebp
adc
popf
aad
fstps
add
test
icebp
imul
xchg
mov
lcall
adc
push
add
jne
idivb
push
jb
lret
mov
mov
ljmp
mov
mov
test
dec
test
or
test
or
test
rcrl
or
shll
imul
and
sub
add
xor
mov
outsb
divl
mov
sbb
aad
fdivs
fnstsw
enter
xor
notl
mov
pushf
inc
sub
pop
insb
cwtl
push
pop
xchg
out
xor
sub
rcrb
jl
fwait
out
add
or
dec
dec
inc
cwtl
lds
jg
pushl
sbb
test
jnp
shrb
imul
data16
xor
or
gs
or
add
stc
and
loope
popa
ljmp
lods
or
mov
mov
imul
fldpi
inc
ds
cmp
aam
ror
cmovo
shl
push
dec
into
aad
into
ret
into
scas
inc
test
fwait
inc
cwtl
rorl
imul
pop
push
push
jnp
imul
aaa
out
lea
std
cmp
loope
push
pop
out
fs
out
out
mov
or
pop
imul
imul
jmp
imul
fldcw
out
rcl
jmp
inc
and
inc
in
pusha
imul
loopne
jmp
xor
loopne
jmp
add
inc
jae
lock
push
out
inc
xor
lods
inc
sbb
or
stos
pop
call
out
pop
out
rcr
pop
into
pop
iret
sarb
pop
scas
rcrb
and
inc
jae
in
arpl
popf
pusha
inc
jmp
movsl
out
and
fs
ljmp
push
or
test
or
test
or
scas
cmpsb
daa
dec
sbb
jb
dec
std
xor
les
pop
xchg
pop
inc
cmp
sub
call
jp,pt
mov
cwtl
push
jmp
pusha
push
out
xor
mov
inc
mov
or
jne
cmp
jp
dec
bound
jnp
adc
pop
adc
push
jge
int3
pushf
fldenv
inc
sub
jmp
ljmp
out
mov
popf
hlt
aam
inc
into
dec
inc
dec
mov
es
pushf
jnp
call
in
fwait
pop
rol
jge
xor
mov
xor
popf
pop
adc
outsl
jp
lahf
pusha
ljmp
jle
daa
or
rclb
popf
mov
cmovo
push
cmc
xor
enter
dec
push
mov
std
xchg
dec
or
test
or
mov
sti
aam
or
imul
pusha
out
repz
or
xchg
repnz
addr16
in
ret
out
pusha
fldl2t
push
loopne
jmp
or
or
scas
jae
dec
sub
jmp
arpl
lods
imul
push
inc
lahf
dec
add
jae
pop
notl
push
shl
dec
sub
mov
sbb
ficoml
mov
push
dec
lods
cmp
popa
iret
aaa
push
or
jb
out
out
pop
pushf
adc
mov
ds
rorl
jmp
inc
out
jmp
mov
dec
lret
jnp
inc
push
imul
ds
pop
lcall
lods
mov
insl
jb
lahf
mov
inc
cmp
lods
fisubrs
cmc
xchg
dec
mov
addr16
bswap
lea
cmpl
inc
inc
mov
pop
push
add
std
testb
mov
movsl
mov
aas
pusha
dec
pop
aad
clc
pop
jg
jmp
imul
pop
inc
push
cmp
mov
jno
pop
add
jmp
out
and
out
out
lret
pushf
dec
cmpsl
mov
mov
ret
sub
jb
mov
xchg
xor
cs
or
movsl
lahf
insl
mov
pop
cwtl
jo
sub
dec
pop
mov
push
subb
dec
out
hlt
icebp
cmp
in
test
test
ljmp
out
mov
adc
jl
inc
mov
sti
sti
inc
adc
fsubr
mov
ja
lods
cmp
lds
fld
ret
sub
ficoms
mov
pop
repnz
ljmp
jo
pusha
inc
imul
out
lods
mov
out
shll
aas
loopne
int3
imul
lahf
xlat
imul
adc
pop
push
add
xchg
clc
mov
lret
xor
rorl
mov
shlb
and
popf
std
aad
adc
push
push
cmp
push
mov
push
jmp
adc
or
test
or
test
ss
in
loope
gs
cmpl
mov
not
dec
pop
into
lea
pop
add
cmc
mov
cmp
xor
push
xor
mov
ja
dec
std
lret
mov
in
call
fsts
scas
push
fldenv
add
into
pushf
inc
xchg
hlt
xchg
jne
leave
mov
andl
or
je
jns
mov
pop
ret
push
inc
pop
lret
push
cmp
mov
xchg
mov
mov
mov
lahf
push
sti
dec
xchg
jae
add
jge
xor
push
out
les
clc
jne
pop
cli
push
push
push
rclb
fistps
iret
pop
aam
mov
and
xchg
in
dec
jb
jle
outsl
aaa
insl
mov
dec
xor
push
shlb
dec
aas
jne
inc
cli
cmp
inc
imul
ds
jnp
pop
adc
mov
mov
in
ja
sub
nop
xchg
inc
inc
jbe
aaa
ss
jnp
adc
setbe
jmp
gs
mov
mov
nop
jle
rolb
inc
sarl
and
jb
jle
jg
shl
inc
pop
loopne
loopne
sahf
inc
add
incl
sarb
or
popa
and
xchg
xor
mov
cmp
aas
jo
loopne
pop
out
out
inc
and
fcomps
addr16
mov
testb
dec
sbb
jmp
pop
stos
mov
or
dec
gs
lds
push
imul
or
in
imul
fsubrs
std
sbb
or
jns
in
pop
loop
jmp
mov
cmpsb
mov
add
xchg
adc
pop
dec
mov
aas
stc
out
scas
cmp
xor
out
out
sub
mov
ljmp
test
dec
addr16
inc
dec
mov
push
dec
pop
inc
rclb
ja
or
cmp
pop
inc
inc
sar
cwtl
mov
fidivrs
cltd
popf
mov
jp
dec
stc
sub
das
mov
int3
push
pop
sub
insl
pop
cmpl
mov
pop
int
adc
sarl
cmp
mov
into
push
push
pop
jge
mov
inc
ficoml
sbb
dec
fsubr
inc
mul
es
cmc
inc
lret
push
cwtl
lahf
xchg
cli
inc
inc
pop
into
dec
inc
inc
into
cmp
pop
push
fyl2x
popf
loopne
in
aaa
mov
mov
jl
cmpsb
pop
dec
push
xor
cmp
out
inc
push
fwait
ja
adc
dec
adc
popf
fsts
int
jb
mov
scas
sarl
xor
pusha
pop
pop
xchg
push
ds
stc
add
cmp
add
aas
mov
ljmp
and
imul
adc
sti
imul
rorl
in
stc
or
daa
jg
cmpsl
stc
popf
inc
inc
jle
outsb
repnz
ret
mov
and
or
jecxz
pop
cwtl
les
into
stos
pop
lahf
jmp
mov
xchg
call
dec
adc
aas
jle
pop
std
in
pop
in
push
pop
pop
mov
xor
cmpsb
fs
push
fcos
jae
icebp
pusha
lret
jmp
cmp
pop
add
inc
adc
inc
jle
sub
xchg
push
sbb
pop
outsb
test
scas
popf
aaa
xchg
mov
jmp
push
rclb
es
scas
inc
mov
adc
inc
or
xor
addr16
mov
arpl
dec
imul
int
shl
imul
mov
jo
and
sbb
pinsrw
jnp
cmc
xor
ret
insb
xor
in
sbb
mov
fisttpl
fs
iret
jnp
test
or
test
or
test
or
rcrl
mov
test
sub
pop
pop
xlat
sti
loopne
out
int
scas
mov
jb
cmpsb
sbb
pop
movsb
jbe
jp
fnsave
cli
jno
vmovapd
cmp
ret
jle
fstp
mov
pop
mov
and
inc
in
inc
adc
lret
jge
gs
xchg
roll
cwtl
jecxz
push
in
pop
pop
dec
add
mov
int
inc
fisttps
mov
lcall
aas
pop
cltd
push
add
push
push
xlat
pop
dec
aaa
not
lods
cmp
testl
adc
jbe
sarb
mov
add
fcom
js
incl
or
int
addl
gs
and
mov
xor
mov
popf
xor
sub
sub
pop
jno
loop
mov
fcomps
or
fsubp
jb
int
mov
rclb
dec
out
adc
sub
pop
jmp
dec
test
xor
lods
inc
adc
js
std
and
dec
cmp
test
aaa
int3
jo
icebp
stos
addr16
cwtl
shrl
cmpsb
in
sti
ljmp
into
ljmp
pop
popf
inc
adc
push
lods
or
out
popf
lods
mov
repnz
cmpsl
into
cwtl
inc
cmp
dec
pop
push
lods
call
xchg
and
xchg
fdivs
daa
push
mov
dec
stc
cmp
dec
dec
inc
stos
fstps
pop
inc
xchg
pop
adc
xchg
inc
jecxz
inc
pop
mov
mov
push
mov
fbstp
ret
cmp
sbb
push
sbb
push
ret
jo
push
faddl
or
pop
mov
iret
rolb
fs
push
mov
mov
push
push
jno
adc
shll
cmp
shll
cmp
or
sbb
stc
out
mov
jmp
stc
jp
fs
push
or
mov
out
mov
jae
ss
mov
std
mov
leave
test
sub
mov
sbb
fcomps
adc
push
mov
cmpsb
ds
mov
ds
jnp
adc
or
in
imul
xchg
sarb
cmp
push
push
cmp
ja
push
dec
dec
scas
sub
sub
mov
push
rclb
addr16
sbb
popf
push
adc
or
lods
loope
inc
xor
cmp
dec
mov
lds
pop
roll
sbb
cmp
mov
sub
cli
push
adc
dec
in
sub
movsl
sbb
xor
cltd
jne
lock
sub
xchg
pop
or
shl
lret
push
mov
xchg
xorb
outsl
std
idivl
popf
inc
jl
inc
and
fmuls
std
jb
ja
jp
outsl
popf
cmc
adc
popf
shlb
cmp
jl
cmp
fmull
movsb
loopne
jmp
icebp
jmp
mov
dec
cmpb
dec
cli
aad
out
shrl
adc
repnz
dec
gs
lret
pop
and
pop
or
mov
outsb
mov
ds
jecxz,pt
jnp
aaa
mov
stos
repnz
push
inc
and
aam
pop
jno
in
imul
sub
mov
std
pop
es
lods
mulb
jmp
pop
ds
cs
dec
das
rorl
or
repnz
loopne
ss
cld
out
push
sub
scas
push
adc
xchg
fdivrs
add
test
sub
sub
pop
je
aaa
out
sub
mov
inc
push
cld
js
xor
fidivs
sar
insl
inc
cmp
inc
rclb
icebp
pop
lret
push
dec
jle
dec
lret
std
ljmp
out
out
ljmp
loopne
jmp
fistpl
adc
ret
popf
mov
fwait
pushf
mov
jge
inc
iret
subps
sti
adc
jns
cs
mov
sbb
pop
test
test
pop
repz
shl
gs
out
xchg
insl
cwtl
jle
lds
pop
mov
cmp
push
mov
in
push
outsb
pop
jmp
push
stc
cmp
add
fs
jmp
mov
dec
push
scas
imul
xor
jae,pt
push
cmpb
dec
sub
jne
inc
das
pop
and
adc
push
adc
dec
jl
shrl
test
or
notl
in
dec
test
ja
add
jmp
push
out
adc
leave
or
or
into
xchg
flds
inc
push
jmp
jmp
leave
shrl
in
dec
das
mov
xor
ss
push
mov
xchg
jb
dec
jmp
popf
xchg
pop
add
imul
js
out
inc
pop
or
sub
pop
or
pop
repz
pop
mov
fsubl
out
pushf
or
push
jmp
out
cmpl
ja
ret
in
loop
daa
push
cmc
js
pop
inc
clc
fisttpl
pop
lcall
test
xor
cmp
scas
out
lret
test
cmc
jmp
cltd
sub
mov
and
mov
out
in
add
jnp
outsl
dec
push
mov
mov
pmuludq
stos
sub
inc
cltd
mov
mov
mov
mov
addr16
leave
out
aas
aad
and
cld
int
sub
pop
pop
push
loope
int3
fdivrl
out
lods
and
pusha
cwtl
out
into
pop
jle
dec
imul
shlb
testb
outsb
mov
mov
mov
aad
or
gs
jo
dec
dec
sarb
xchg
fs
pop
xor
push
pop
pop
js
fstpl
jno
rclb
jo
gs
fldcw
xor
and
jo
test
jb
rcrl
mov
and
or
fadds
imul
sub
cwtl
jo
repz
sub
leave
ja
arpl
xor
mov
loop
int3
fsubrs
mov
rorl
inc
add
mov
stc
mov
test
cmp
add
lock
jmp
xor
push
test
mov
stos
mull
mov
sub
bnd
int3
dec
mov
imul
cmp
out
sub
push
add
pop
std
push
jnp
in
push
imul
pop
pop
int
insl
pop
mov
lea
adcb
pushl
jg
push
cld
jnp
shrb
popf
imul
insl
dec
xor
outsl
sub
imul
mov
cwtl
or
mov
fcomip
stos
push
outsl
stc
pop
push
in
jecxz
pusha
in
push
ljmp
or
mov
arpl
mov
cmpl
je
jns
and
mov
stc
fcompl
fbstp
jnp
shlb
mov
adc
fs
and
outsb
and
sbb
xor
add
mov
sarl
sbb
pop
divb
lret
xchg
cld
stos
popf
pop
adc
adc
loope
lock
add
dec
loope
stos
stos
imul
push
mov
pop
adc
dec
dec
dec
mov
and
pushf
popa
gs
gs
push
pop
movnti
xor
push
rcrl
jns
add
dec
inc
or
cld
std
xor
addr16
in
xor
loopne
lock
jge
jb
inc
inc
lcall
jnp
icebp
jno
push
dec
push
jae
lock
push
xchg
inc
cmpb
adc
mov
int3
pop
mov
pushf
in
pushf
scas
test
xor
iret
cld
sbb
pop
pop
sbb
je
jp
cs
fs
push
or
cmc
jo
jmp
or
pusha
dec
lock
jmp
push
pop
inc
or
sar
jbe
je
dec
jmp
cwtl
mov
inc
jle
decl
inc
push
cmp
cmp
cmp
sub
xor
inc
cmp
mov
xor
std
pop
das
cltd
adc
or
adc
imul
add
push
jg
xchg
jno
out
or
sbb
pop
imul
test
cltd
inc
push
and
sbb
fnsave
gs
adc
gs
and
out
loope
push
inc
aad
or
inc
cmp
movsb
punpckhwd
in
sbb
into
jno
scas
push
and
rcrb
mov
std
mov
adc
xor
sbb
cmp
gs
mov
cmpl
or
hlt
push
xor
push
jbe
in
jl
fnsave
sub
xchg
mov
jno
push
sub
std
push
adc
jge
push
nop
jl
shll
add
js
ficoms
add
jg
ljmp
lock
in
inc
jne
xor
movsl
push
or
sbb
push
pop
loope
andl
jecxz
nopl
sub
fildll
add
out
adc
sbbb
inc
or
in
dec
aaa
out
imul
adc
xchg
fmuls
and
sbb
pop
fistpll
mov
loopne
xor
repnz
and
data16
arpl
xchg
sub
xchg
adc
xor
push
leave
dec
or
repz
cmpsl
inc
adc
in
insb
enter
sub
pop
fbstp
loop
xor
rclb
pop
push
dec
ja
push
repz
mov
call
dec
lret
je
add
adc
hlt
add
mov
dec
or
shll
cmc
cmpsb
mov
lock
sub
mov
jg
popl
dec
mov
adc
popa
fnsave
sbb
fstl
repz
hlt
adc
loop
and
pop
add
sub
das
cmp
mov
outsb
gs
and
gs
ja
movsb
push
push
add
aas
pop
cmp
sub
cs
xor
cltd
fldt
adc
dec
aad
add
sub
adcb
xor
mov
mov
pop
dec
xchg
sbb
adc
push
pop
xchg
pop
dec
cmpsb
iret
mov
jno
mov
xchg
fstpl
shlb
sub
and
jmp
pop
jmp
bound
jmp
das
leave
movsb
clc
lret
push
cmpsb
inc
sub
inc
setbe
js
daa
out
test
repnz
in
xchg
xor
fiaddl
lahf
mov
inc
sub
loope
lods
sub
cmp
lret
rorl
in
test
fsubrs
out
push
dec
jb
xor
sbb
xor
test
aaa
dec
fcomps
pushw
mov
sub
add
push
cmp
xchg
sbb
push
aas
sahf
sbb
fs
inc
sub
mov
jne
xor
lock
xchg
arpl
fmuls
pushf
stos
pop
imul
push
pushf
cmp
subl
insl
push
daa
das
out
push
in
fists
xchg
cmp
lret
repz
out
movsl
inc
cmpb
mov
repz
add
sbb
mov
into
push
je
jl
dec
mov
les
sarl
jp
insb
inc
cli
leave
test
cmc
insl
rclb
xlat
push
or
xor
dec
mov
icebp
sub
in
and
dec
xor
mov
sub
out
imull
les
mov
cmp
sub
sahf
adc
aad
sub
ret
jg
mov
outsb
pop
push
outsb
in
stos
adc
ret
push
dec
mov
adcl
sbb
nop
in
mov
loopne
xchg
jae
and
pop
lcall
gs
call
lds
mov
xchg
push
xor
scas
pop
pop
jp
pop
mov
cmp
test
mov
cmp
es
xor
movsb
cmp
xor
hlt
outsb
sbb
mov
adc
ret
pop
movsl
inc
test
movsb
pop
adc
in
jge
xchg
adc
aad
addr16
ds
mov
pop
xor
adc
xchg
cs
xorl
ficoms
sbbb
bound
cltd
push
ret
add
fs
dec
mov
xor
ret
push
push
xchg
pop
das
cmp
mov
sbb
push
cmp
loope
and
and
popa
adc
out
mov
std
int
push
cs
push
rolb
call
pop
sub
sub
and
and
bt
and
btr
test
btc
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
cmp
neg
sub
cmp
adc
adc
test
test
jmp
lcall
ret
or
add
mov
test
bsf
bt
mov
sub
bt
jmp
lcall
xor
add
add
pop
xor
xchg
push
mov
cmp
add
add
xor
adc
test
call
lcall
incl
ret
neg
sub
mov
or
adc
adc
not
bsf
or
jmp
lcall
sub
btc
add
dec
shl
test
xor
dec
mov
mov
xchg
push
push
xchg
dec
add
add
call
or
btr
test
test
bsf
shl
cmp
add
mov
and
test
btr
shl
add
and
inc
add
mov
shl
sub
xchg
mov
cmp
adc
cmp
cmp
not
mov
jmp
lcall
ret
or
cmp
not
cmp
test
sub
dec
bsf
call
lcall
add
xorl
pop
xor
xchg
push
xor
sub
bsf
or
btr
or
inc
jmp
lcall
stc
add
xchg
ret
neg
sub
bsf
cmp
btc
xor
btc
cmp
and
btc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
cmp
inc
sub
dec
or
mov
neg
btc
jmp
lcall
push
add
adc
mov
loope
loopne
sub
cltd
sahf
fistpll
adc
bts
movswl
add
mov
btc
btr
and
test
test
add
mov
or
bts
call
lcall
add
test
adc
sub
xor
test
sub
call
lcall
push
add
sub
xor
in
dec
rolb
and
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
cmp
add
btr
test
bsf
xor
adc
test
call
lcall
jl
test
add
and
adc
btc
mov
mov
dec
jmp
lcall
shr
or
add
mov
and
sub
inc
mov
bswap
mov
add
adc
btr
or
add
or
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
xor
sub
not
dec
or
add
adc
bsf
shl
push
sub
xor
add
bswap
btc
add
dec
add
inc
bsf
add
add
xor
bt
bswap
shl
add
mov
test
movzbl
not
bt
and
btc
btc
adc
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
bswap
btc
movzwl
bts
btc
and
adc
btr
call
lcall
add
mov
mov
btr
mov
cmp
mov
bt
mov
add
mov
shr
btr
adc
sub
btr
sub
adc
and
sub
mov
add
xor
sub
dec
and
add
cmp
call
lcall
mov
test
bts
cmp
or
bt
add
test
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
movsbl
adc
or
test
shl
adc
xor
test
shr
test
not
test
adc
adc
and
bt
jmp
lcall
shl
cmp
shl
mov
and
bts
xor
mov
add
add
add
shr
adc
and
xor
bt
call
lcall
add
test
xor
cmp
neg
bt
adc
mov
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
movsbl
bts
test
xor
bt
test
bt
cmp
xor
sub
mov
or
neg
add
cmp
movzwl
sub
btr
and
shr
movswl
not
shl
cmp
movzbl
and
btc
mov
bts
mov
add
sub
and
btr
mov
test
sub
bt
xor
lea
inc
cmp
jne
dec
cmp
shl
xor
not
adc
add
movzbl
adc
add
sub
add
btr
not
test
not
not
bsf
mov
call
lcall
je
bts
cmp
test
cmp
and
test
shl
sub
mov
and
and
sub
movzwl
bts
add
mov
or
call
lcall
mov
add
shl
neg
cmp
sub
neg
cmp
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
btc
mov
xor
test
mov
mov
xor
call
lcall
adc
test
sub
or
bswap
and
cmp
test
add
xor
sub
add
dec
btr
add
adc
adc
inc
jmp
lcall
or
test
cmp
bts
xor
bt
mov
add
test
or
mov
neg
test
adc
inc
call
lcall
add
test
movzbl
movsbl
movzwl
mov
sub
shr
shr
push
pop
inc
add
loop
add
bswap
dec
xor
shl
cmp
sub
mov
and
push
decl
mov
add
mov
add
bts
sub
shr
shr
adc
cmp
call
lcall
incl
jne
mov
es
or
test
btr
inc
push
shll
add
test
and
or
cmp
not
push
adc
test
add
xor
not
bt
movzbl
shl
sub
mov
adc
cmp
and
bts
and
add
adc
dec
push
push
pop
add
add
call
and
or
add
sub
not
btc
bsf
xchg
cmp
not
mov
cmp
test
test
test
btc
or
mov
and
test
or
bsf
cmp
adc
bts
xor
call
lcall
mov
cld
shl
shr
xor
not
mov
btr
test
bswap
add
bt
movzwl
sub
movsbl
bsf
test
not
cmp
bswap
call
lcall
mov
and
bts
xor
shr
btc
shl
not
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
neg
cmp
or
inc
inc
or
neg
bt
bsf
neg
and
not
bsf
cmp
btr
and
inc
call
lcall
call
xor
test
shl
shl
dec
bts
mov
test
add
xor
add
not
bt
adc
cmp
je
xor
cmp
adc
cmp
adc
btc
or
add
cmp
bts
btr
cmp
cmp
neg
or
inc
call
lcall
shl
adc
btr
bsf
or
bt
shl
shl
or
sub
cmp
and
bt
cmp
and
shr
mov
xor
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
mov
test
btr
shr
movzbl
not
or
btc
push
decl
mov
add
test
btc
sub
bsf
bts
adc
xor
sub
push
decl
mov
add
not
mov
dec
neg
test
and
mov
sub
mov
add
and
or
add
shl
and
bt
jmp
inc
bsf
sub
shl
shl
test
adc
mov
add
bsf
inc
and
or
sub
add
or
mov
sub
mov
test
mov
btr
cmp
mov
add
add
bt
cmp
sub
cmp
dec
sub
mov
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
or
or
btr
adc
sub
mov
and
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
or
bts
sub
and
test
shr
and
push
push
shl
btc
or
cmp
adc
bt
btc
bt
push
sub
mov
dec
test
adc
bsf
btc
or
mov
mov
cmp
or
or
bts
adc
bts
xor
test
call
lcall
js
jecxz
mov
sub
not
adc
test
and
add
lea
cmp
cmp
test
movswl
bt
neg
cmp
inc
mov
bsf
add
bt
shr
sub
cmp
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
neg
bt
mov
xor
shr
dec
or
movswl
sub
mov
btr
test
btr
mov
neg
not
bts
bts
mov
push
mov
bsf
shr
not
add
test
bts
bt
test
push
or
btr
adc
not
shl
mov
bts
btr
and
push
cmp
or
or
test
mov
cmp
mov
dec
call
lcall
mov
add
add
adc
and
neg
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
and
mov
mov
cmp
cmp
test
sub
call
lcall
sub
movsb
test
cmp
adc
shr
inc
test
dec
add
add
test
btr
inc
shr
cmp
bts
call
lcall
mov
cmp
movsbl
mov
xor
shr
or
test
test
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
call
add
add
mov
cmpsl
int3
add
xchg
push
adc
sub
imul
outsl
mov
aam
mov
xor
or
popa
imul
add
inc
push
loopne
enter
fwait
pop
xor
andl
fbstp
add
cmp
xor
dec
adc
aad
jae
and
fld
int3
fsubrs
add
insl
gs
cmp
dec
cmp
pushf
jae
cmp
pushf
ror
jo
xor
pop
adc
fwait
push
jnp
add
and
lret
sub
sub
pop
cmp
push
inc
call
xchg
or
test
or
push
push
sbb
ds
or
and
loope
fcoml
fiadds
inc
fsubl
sbb
mov
inc
inc
push
push
add
shlb
sbb
add
nop
inc
mov
subl
out
mov
aad
jp
call
add
mov
xor
push
inc
push
dec
push
loopne
inc
pop
inc
aaa
push
cmp
pop
dec
push
dec
into
inc
inc
inc
xor
xor
jnp
cmp
push
dec
pop
inc
xor
rclb
pop
hlt
push
push
dec
push
inc
push
fmulp
cmp
push
inc
inc
xor
adc
inc
aaa
cmp
xor
mov
xchg
dec
test
dec
dec
ss
push
push
aas
inc
inc
stc
sbb
dec
inc
test
add
gs
dec
dec
cmc
adc
add
test
push
aaa
xor
dec
jns
add
dec
push
cmp
push
shll
shlb
pop
repz
ds
fs
cmp
sub
sbb
xor
inc
cmp
cmp
pop
pop
mov
push
inc
in
rcrl
inc
push
lret
jns
cli
ss
jbe
nop
inc
loope
add
das
cmpb
insb
outsl
jae
and
jne
push
cmpsl
jb
mov
decb
je
jns
cs
std
cmp
push
ja
insb
cmp
sbb
scas
sbb
or
push
push
inc
cli
mov
outsl
adc
jo
add
dec
push
push
imul
shlb
stc
push
gs
mov
inc
jo
mov
outsl
outsb
jae
es
mov
cs
jle
js
adc
cmp
sub
pop
adc
or
ja
sub
dec
addr16
cli
mov
inc
push
jb
nop
lds
and
push
outsl
fs
pop
cmp
push
ret
dec
jmp
shlb
outsb
pushw
test
aaa
push
xorl
adc
inc
cs
push
dec
or
lods
pop
add
xchg
sub
stos
addb
inc
cmc
inc
clc
dec
je
rcrb
in
cmpsb
add
inc
mov
dec
out
test
add
mov
push
gs
insl
int3
fs
xlat
inc
jae
popa
lods
fiadds
decl
test
add
and
leave
je
or
insb
sti
int
gs
clc
add
and
je
daa
out
out
mulb
xor
mov
scas
sub
js
pop
insb
fs
jmp
ljmp
mov
dec
jecxz
or
rclb
mov
push
dec
inc
push
push
inc
push
es
pop
mov
xchg
dec
ret
mov
dec
inc
xchg
add
insb
