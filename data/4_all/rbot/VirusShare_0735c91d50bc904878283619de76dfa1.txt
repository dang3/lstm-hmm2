push
mov
call
scas
push
mov
sti
scas
mov
and
pop
addb
cli
cmc
xchg
test
imul
add
fsubrp
mov
inc
jg
jecxz
icebp
sub
jb
outsl
jp
daa
mov
es
xor
rorb
inc
cmpb
xchg
fwait
sub
js
mov
adc
test
jne
aas
xor
icebp
sbb
cld
pop
xchg
test
adc
and
mov
pop
xchg
leave
xor
fdivs
mov
add
pop
xor
faddl
xor
sub
sub
int3
lods
pushf
pop
or
cwtl
clts
mov
ret
pusha
test
sqrtps
xchg
sarb
nop
push
out
fimuls
mov
in
xchg
push
lock
movsl
push
mov
xchg
fs
push
jp
loope
enter
cmp
leave
mov
lret
test
shrl
out
std
mov
pop
insb
jnp
sub
cltd
mov
dec
sub
xor
cltd
adc
outsl
daa
mov
or
mov
adc
ret
or
rorl
sti
std
into
cltd
xchg
test
xchg
jecxz
scas
xchg
mov
lea
push
lcall
ret
iret
enter
stc
leave
dec
pop
sbb
jne
in
or
outsl
out
xchg
dec
mov
insl
std
pop
mov
sbb
xchg
mov
push
int
mov
data16
test
mov
ret
push
fisttps
test
cmp
push
add
test
mov
jl
adc
push
pop
push
pop
push
mov
icebp
mov
popa
dec
mov
test
nop
adc
mov
xchg
add
lds
out
scas
mov
dec
shrb
cwtl
aam
popf
shlb
loopne
inc
aad
jnp
push
or
mov
outsb
scas
aaa
ss
hlt
cmp
je
fwait
hlt
fdivl
lock
cmc
pop
xor
mov
aaa
mov
ss
push
cmp
inc
in
adc
jbe
add
stos
stos
rcrl
fwait
data16
inc
xchg
cmc
mov
xor
lock
sub
push
rclb
mov
inc
fdivs
lds
nop
std
test
js
daa
imul
mov
push
jge
pop
xchg
inc
adc
movsb
pop
fwait
data16
rcr
movsl
pop
pop
and
fstps
cs
addr16
outsb
movsl
fwait
cmpl
mov
std
jo
mov
popa
push
js
inc
jge
and
and
push
or
lds
mov
push
in
cltd
mov
ret
xchg
enter
lods
outsl
cmpsb
dec
enter
scas
cmpsl
mov
dec
pop
dec
mov
pushf
cld
divl
xlat
stos
inc
mov
shll
add
lret
lcall
mov
jge
leave
mov
cmp
pop
js
xchg
mov
sbb
ds
jmp
sub
call
into
repnz
aas
push
and
rorb
hlt
rcl
dec
cmpsl
jp
ss
mov
add
and
imul
addr16
fists
testl
mov
jle
or
ror
adc
xchg
xchg
cmpsb
dec
inc
popa
xor
or
and
ljmp
mov
std
sti
push
pop
sub
jnp
les
pop
inc
cwtl
mov
pminub
push
loop
shlb
pop
inc
gs
adc
jecxz
cmc
in
or
outsl
push
cli
mov
push
inc
add
mov
outsl
adc
fists
add
subl
add
jecxz
fbstp
mov
mov
shl
lcall
xor
jno
xorl
or
adc
inc
lret
sahf
pop
aaa
dec
sub
stc
xchg
lahf
push
jecxz
adc
jle
or
and
je
inc
push
ret
lods
sub
in
pop
pop
ja
push
lret
popf
stc
sbb
test
dec
out
out
mov
adc
mov
add
inc
pop
jbe
pop
mov
das
dec
pop
insl
in
lret
add
dec
aad
fistpll
add
dec
pop
scas
idivl
test
xchg
jp
xor
xlat
sub
inc
xor
jo
xor
sbb
int
addr16
pop
push
mov
cmpsb
inc
iret
pushf
les
jle
cmpsl
test
cmp
int3
and
mov
push
xchg
out
test
add
inc
xchg
aad
popa
aam
rcll
mov
push
sbb
cltd
stos
ljmp
insb
lods
fwait
inc
enter
push
jg
dec
add
pop
sub
sti
icebp
and
scas
sub
dec
stos
cmp
jb
call
push
xchg
fs
mov
stos
push
into
call
ret
outsb
imul
in
or
test
rorl
out
pop
and
jo
xchg
mov
outsb
mulb
loopne
jbe
popf
pushf
insl
loope
insl
cltd
scas
daa
jecxz
dec
push
jnp
cli
inc
mov
sub
inc
cltd
add
pop
sub
jecxz
int3
mov
dec
fs
scas
stc
aaa
out
js
xor
ja
adc
dec
lahf
xchg
scas
mov
xchg
jno
sbb
fmull
cmpsl
dec
inc
or
cmp
iretw
mov
mov
ss
lcall
les
imul
test
adc
cmp
pushf
sti
insb
adc
cmp
test
and
std
adc
insl
push
test
shl
cwtl
dec
xor
test
dec
outsl
lahf
int3
dec
mov
adc
mov
into
arpl
sbb
aaa
dec
shr
mov
dec
xchg
or
push
jge
xlat
mov
in
nop
mov
ret
xchg
mov
rorl
adc
mov
insb
cltd
and
sbb
sarl
mov
push
les
xchg
arpl
insl
push
cltd
dec
or
stos
jmp
dec
sub
mov
and
adc
inc
shll
loopne
and
and
xor
mov
mov
into
xor
subl
add
fucomip
mulb
push
lock
mov
xor
mov
xchg
xadd
out
addr16
out
jecxz
pop
test
lock
and
fldpi
cltd
xor
inc
scas
out
pop
and
dec
dec
adc
shll
dec
sbb
ljmp
cli
inc
mov
ja
loope
sti
repnz
mov
xor
and
shrb
stc
scas
rcr
inc
jl
mov
dec
cmc
jnp
mov
sub
test
lock
shrl
dec
pushf
popf
adc
icebp
inc
bound
push
jecxz
cmp
addr16
aad
and
cmp
jg
push
fsubrl
in
hlt
pop
repnz
sbb
les
pop
dec
or
loop
mov
mov
inc
jg
pop
mov
int3
lcall
and
in
jle
mov
mov
xor
cli
inc
pop
cwtl
cmp
popf
test
mov
pop
push
cmp
pop
int
xchg
int
repz
and
popa
xor
ljmp
fsubs
jno
scas
push
cmp
adc
ret
push
sbb
mov
repnz
lahf
je
and
pop
push
repnz
inc
ds
and
leave
jg
mov
cmpsb
pushf
in
ficomps
imul
sub
mov
pop
clc
aad
cs
mov
cmp
js
jne
inc
nop
xchg
sub
adc
and
clc
and
add
mov
shll
adc
iret
repz
or
adc
jg
ret
add
sub
inc
push
insl
mov
call
sar
jnp
and
sbb
sbb
adc
das
popf
outsl
jmp
fadds
cmp
daa
outsb
fadds
imul
sbb
lret
fists
pop
nop
mov
shl
cmp
inc
cmp
stc
cmc
in
jle
test
or
xor
mov
sbb
sub
adc
dec
ja
cmpsl
roll
fucom
orl
mov
dec
mov
fnstenv
jns
pop
pushf
pop
fwait
mov
xchg
jbe
mov
xchg
shl
push
pusha
subb
stc
stos
add
cmp
add
fisttps
mov
dec
dec
or
mov
add
cmp
xchg
ss
mov
pop
repz
inc
jmp
sbb
movsl
or
aam
gs
dec
iret
mov
cwtl
inc
in
or
fistpll
sub
fwait
sbb
repz
and
xchg
sbb
stos
dec
pusha
movsb
test
cwtl
adc
jmp
dec
cmp
jge
or
fs
and
dec
subb
jecxz
les
mov
lret
int
bound
mov
stos
inc
add
arpl
fstps
mov
mov
pop
pusha
inc
or
xor
xchg
test
aaa
xchg
sbb
scas
repz
cmp
cld
mov
mov
sub
jnp
pop
sti
cmp
pop
in
repnz
inc
push
ja
add
pop
add
shrb
or
mov
lds
sbb
insb
ror
push
lret
or
xchg
in
cmp
xchg
arpl
fs
ret
in
fistl
cmc
mov
js
and
enter
out
arpl
adc
sahf
ds
lcall
ja
das
aam
jbe
pop
jge
out
mov
iret
xchg
mov
xor
fistl
push
int
mov
outsb
iret
mov
jmp
cmpb
jbe
adc
addr16
jnp
popf
test
les
icebp
cli
pop
jns
inc
cmc
movsb
jae
push
test
aas
xchg
ljmp
mov
jne
rorb
ret
repz
imul
mov
shlb
lret
fs
int3
pop
test
in
in
xchg
leave
adc
mov
scas
outsl
sti
sub
jns
std
sub
cmp
and
repnz
repnz
mov
adc
jge
adc
xor
lods
adc
ret
cmp
pop
mov
rclb
mov
test
insb
mov
lahf
jnp
cld
or
jnp
pop
mov
cli
add
xchg
jo
movsb
sub
ret
xchg
sbb
mov
leave
ss
std
daa
add
jmp
enter
cld
std
cld
cmpsb
cmpsl
jg
sub
jp
fcompl
inc
add
aas
je
data16
pop
fdivrs
outsb
adc
inc
outsb
rol
test
fsts
jle
push
fisubrl
test
push
add
fsubrl
inc
or
inc
movsl
xchg
push
xchg
mov
xchg
dec
mov
jmp
pop
add
in
cmpsb
cld
add
lret
pop
aaa
push
test
mov
outsl
sub
cmp
or
dec
xor
addr16
std
adc
cld
mov
fs
fisubl
adc
mov
dec
push
mov
dec
ss
mov
mov
pop
data16
xlat
or
sub
ja
mov
or
inc
mov
mov
mov
lahf
sarb
xchg
mov
scas
lods
popa
nop
repnz
pop
xor
jge
sbb
mov
ljmp
stos
pop
sahf
pop
push
xor
in
adc
inc
push
sub
loopne
test
inc
pop
xor
fadd
push
int
sub
popa
or
arpl
nop
xchg
inc
in
push
mov
jns
dec
or
cld
out
shrb
pop
lds
pop
push
or
pop
add
cmp
inc
stos
mov
add
cmp
inc
push
mov
cld
sbb
lods
push
sbb
sub
push
sbb
popf
mov
leave
pop
pop
aad
das
fildl
pop
xchg
mov
repnz
add
jno
loope
xchg
adc
xchg
ret
fists
mov
mov
sub
and
mov
sub
pop
jo
push
cmpsl
xlat
call
addr16
push
les
adc
fld
out
lds
pop
xor
xchg
pop
push
loopne
in
jbe
insl
push
in
in
test
push
xor
and
add
stc
fisubl
or
xchg
fmull
inc
loopne
fdivr
lcall
outsl
out
push
inc
inc
xchg
sarl
mov
push
stos
iret
add
jmp
stos
or
push
loop
cmp
and
es
jmp
inc
fwait
rcl
xchg
aam
sbb
lods
add
xchg
icebp
in
jp
xor
dec
ficomps
and
jo
mov
sarl
shlb
xchg
fyl2x
cmp
lret
push
push
jecxz
xchg
jbe
inc
es
mov
mov
jmp
or
dec
loopne
push
inc
pop
pop
dec
mov
aam
ret
sub
push
js
mov
cli
or
push
outsl
out
sub
inc
pop
sbb
or
cmp
cmc
add
std
ja
test
jle
mov
pop
test
push
and
add
or
ss
push
and
jecxz
sti
dec
in
adc
jo
xor
psrlw
rcr
mov
mov
cltd
cs
inc
out
ja
push
xchg
call
loop
mov
clc
xchg
popa
xchg
popa
out
pop
sbb
insl
jno
outsb
cmp
mov
xor
push
vmovlps
mov
xlat
call
inc
pop
jae
shl
arpl
push
xor
push
dec
fwait
xchg
outsl
test
rorl
lahf
test
push
push
push
je
xchg
add
pop
fwait
movsb
fistpl
imul
cmp
cmp
test
or
aaa
loop
lahf
or
repz
or
pop
push
adc
test
jno
outsb
cmovb
or
aaa
aam
push
mov
bound
enter
mov
push
movsb
jns
mov
sbb
xchg
sarb
flds
cmc
jge
lods
sub
ret
addr16
ds
mov
pop
mov
pushf
int
jmp
mov
data16
adc
pushf
add
mov
adc
leave
mov
dec
pop
cmpsl
inc
mov
jo
mov
daa
add
and
scas
ret
pop
push
repnz
call
sarb
dec
mov
mov
cli
leave
mov
cmpsl
mov
mov
lods
cmpsb
mov
sbb
and
jo
aaa
adc
imul
jnp
gs
and
in
in
imul
mov
shrl
movsb
in
out
repz
flds
rcr
sbb
push
push
fistpll
cmc
shlb
add
jp
sub
push
pop
add
sub
push
pop
int3
cmp
push
ss
sub
psllq
call
jbe
jb
test
xor
pop
mov
pop
cmp
mov
in
and
std
in
jle
push
es
mov
pop
flds
loopne
outsb
cli
xor
cmp
pop
sbb
pusha
xchg
shl
mov
ljmp
sub
add
bound
sbb
imul
arpl
sub
movsb
imul
add
movsb
add
inc
mov
fcomip
mov
ljmp
mov
jne
aaa
lret
sbb
push
pop
jecxz
pop
sti
cmp
xor
mov
pusha
jne
dec
int3
push
and
pop
cli
outsb
xlat
out
xor
jbe
mov
mov
inc
shrl
test
jp
rclb
cwtl
dec
in
orb
sub
push
jg,pt
insb
dec
dec
imul
test
scas
shlb
imul
jge
mov
jae
lods
scas
inc
shlb
sbb
adc
pop
ret
inc
fcompl
pop
add
inc
mov
pop
clc
sub
push
ss
jns
mov
loope
dec
jb
or
loop,pn
or
dec
sub
dec
std
cmp
loope
add
push
pop
dec
cmc
jmp
cmp
fcoms
roll
aas
xchg
orl
lock
mov
aas
sbb
inc
xchg
mov
cmc
cmp
inc
inc
lret
dec
sbb
push
inc
push
ja
lods
or
out
dec
inc
cmpsl
out
mov
dec
stc
xor
aas
in
cmp
xor
sbb
call
and
mov
pop
pushf
push
fistpl
mov
in
aaa
loopne
shlb
daa
mov
or
out
mov
sbb
push
pop
out
sbb
sub
mov
repz
push
mov
je
cmp
mov
jbe
iret
popa
sti
xor
adc
pop
leave
arpl
dec
outsb
and
lea
ret
pusha
jae
push
lret
call
inc
sahf
test
insb
dec
dec
push
aaa
xor
add
mov
int
lcall
adc
pusha
inc
cld
in
xorl
inc
or
or
mov
lret
fcomip
ss
xor
xchg
jmp
dec
and
in
iret
mov
jp
add
push
jns
sbb
add
call
sbb
icebp
xor
cmp
sbb
mov
sbb
pop
push
test
fsubr
shrb
insb
pop
pop
int
cltd
jle
lea
inc
test
xchg
ja
pop
and
mov
dec
jmp
mov
mov
sti
dec
xor
ljmp
mov
sbb
dec
inc
cs
rclb
cmpsl
imul
xchg
xor
adc
das
cmp
or
sub
int3
aaa
inc
xchg
out
cmp
pop
sti
and
mov
test
jb
mov
popf
cltd
or
mov
imul
icebp
fiadds
jnp
xchg
push
aaa
or
mov
into
inc
xor
mov
mov
out
dec
imul
or
das
loopne
xchg
push
test
mov
xchg
and
and
add
adc
xchg
loopne
aad
xor
pusha
iret
jecxz
mov
mov
andb
cmpl
or
add
aaa
sahf
stos
push
out
xchg
fcmovb
je
mov
pop
fistpl
dec
dec
icebp
sbb
push
xor
lret
aam
test
push
ret
dec
sahf
insl
or
pop
pop
repz
outsl
pushf
shrb
call
jae
inc
fs
mov
stc
pop
mov
inc
pop
or
and
je
jle
sub
mov
dec
cmp
shrb
insb
push
pop
mov
lahf
xor
divb
mov
movsb
das
das
jp
jns
setns
mov
sub
push
cli
add
push
pop
jnp
fwait
dec
jge
adc
call
mov
cmc
xchg
stos
xchg
or
inc
sbb
jp
xor
jns
xchg
jg
shr
data16
adc
aas
jne
or
push
lret
jb
pushf
xlat
push
lods
std
hlt
icebp
in
repnz
daa
sahf
frstor
enter
ret
dec
cmp
ror
jg
mov
leave
dec
icebp
repnz
pusha
sbb
test
jo
xor
dec
xchg
insb
insb
or
ljmp
stos
scas
xor
notb
xchg
sbb
inc
or
xchg
shrl
xor
je
bnd
ss
mov
inc
rcll
and
add
test
inc
int3
xor
loope
mov
jge
scas
sbb
mov
cmpsl
or
int
jl
push
and
cmp
xlat
std
fistpl
mov
xchg
jbe
and
xchg
cmp
sti
ja
mov
insb
rcrb
xorl
je
fnstsw
lahf
int3
xor
movsl
inc
push
push
inc
ret
popl
jbe
hlt
add
insl
mov
nop
mov
pop
xchg
in
cmp
andb
loopne
jae
push
push
xchg
adc
add
sub
hlt
jno
push
fiaddl
rorb
insl
test
ss
pop
mov
mov
lods
xor
and
cmpsb
mov
push
xor
stc
lahf
inc
sbb
frstor
cmpsb
insb
adc
movsl
mov
mov
jns
push
mov
cli
mov
jnp
arpl
les
pop
inc
notl
shl
clc
sti
jbe
int
shll
lods
sbb
adc
ret
loope
dec
mov
fisttpl
testl
add
jo
int
mov
ds
mov
clc
mov
es
iret
sub
ds
mov
jae
push
dec
cld
imul
xor
into
xor
aaa
pop
xlat
mov
sub
dec
jns
fsubrl
sub
shll
and
add
mov
test
add
push
sbb
fs
jae
clc
lods
loopne
mov
mov
mov
loopne
mov
cmp
rcrl
mov
les
int
aas
pusha
cltd
push
push
mov
mov
shlb
or
aad
xor
cli
cltd
adc
gs
mov
cmp
dec
push
add
inc
adcb
and
shlb
inc
js
xchg
xorl
dec
xor
add
rclb
ret
or
jne
xor
jge
xchg
je
bound
xchg
nop
adc
insb
dec
mov
mov
dec
adc
ds
inc
xchg
inc
insl
jno
sub
test
sbb
push
hlt
and
sub
int3
cmp
cltd
jbe
insl
lds
lods
xor
pop
insl
lahf
sub
xor
movsb
cli
movups
bound
clc
mov
push
adc
lret
aas
pop
dec
inc
push
insl
adcl
hlt
pop
fucomp
add
aas
sahf
or
inc
pop
enter
ja
push
das
xchg
sti
rcrb
push
push
fadds
mov
xor
ja
sahf
push
dec
jmp
cmp
or
xor
fwait
or
les
cld
inc
pop
xchg
adc
inc
int
inc
push
into
mov
dec
push
xor
cmpsl
mov
xchg
popf
add
in
sub
dec
cmp
aaa
push
xchg
pop
ret
push
popf
lods
data16
das
mov
jge
cmpb
sti
lds
sarl
testl
push
fwait
push
xor
sbb
fsts
repnz
sbb
in
cmpsb
les
loopne
lret
stos
popa
stos
inc
into
mov
sub
jno
ret
shrb
jl
lds
adc
fstpt
addr16
outsb
int3
outsl
dec
es
push
xchg
imull
andb
outsb
or
arpl
data16
xchg
cmp
out
push
sbb
out
movsl
idivb
cld
fstp
mov
fwait
sbb
ja
fwait
jp
into
inc
ficoms
cwtl
jnp
jae
push
test
mov
in
je
in
loop
daa
pop
jge
or
rol
test
popa
jp
pop
xor
cmp
lea
int3
ret
cmp
push
pop
jne
mov
sub
sbb
aam
test
fbstp
lea
std
lahf
cmp
and
jnp
xor
dec
adcl
or
outsl
ret
pop
add
js
mov
sbb
and
pushf
das
mov
lret
repz
arpl
andb
stos
mov
sub
shll
push
je
movsl
jg
inc
mov
inc
xor
push
mov
and
js
mov
test
push
mov
loop
lret
in
xlat
cmp
dec
aam
jno
xchg
lock
lods
out
sahf
outsl
adc
scas
xor
lods
sbb
xchg
movl
orl
adc
inc
stos
movsb
fstpt
and
in
ja
or
lods
pop
add
out
sti
mov
je
push
divl
jl
cmp
jmp
mov
jle
pop
lds
xorl
stos
inc
push
jl
mov
pop
pop
fldenv
xor
jp
xchg
xchg
lahf
dec
mov
lahf
mov
shlb
dec
mov
test
pusha
push
jno
dec
imul
in
stos
int3
mov
jg
xor
or
xor
fimuls
es
push
dec
mov
in
adc
test
sbb
iret
cld
xchg
xchg
icebp
stos
sbb
and
test
add
cmp
xor
mov
test
pop
pop
sbb
test
push
inc
call
sub
push
scas
in
inc
adc
movsl
nop
addr16
popf
mov
inc
xchg
xchg
push
cld
in
leave
es
push
test
ja
mov
xadd
or
jmp
pop
mov
xchg
cmp
sbbl
test
adc
lea
movsl
push
sbbl
mov
pop
pop
xor
fisttps
xchg
or
pop
test
lds
inc
inc
push
mov
mov
imul
lods
mov
inc
leave
adc
push
repnz
mov
push
xor
mov
fstp
scas
fcmovbe
dec
pop
inc
dec
out
gs
xor
xor
mov
aad
jge
inc
lahf
stc
sub
xor
mov
in
and
das
icebp
outsb
loope
jbe
inc
xchg
out
cmp
or
or
mov
mov
pop
je
jle
pop
gs
fdivrs
xchg
mov
cmp
cld
cmp
insl
mov
jbe
mov
fwait
or
daa
cmc
cli
xchg
mov
inc
xchg
cs
out
and
xchg
xchg
jnp
lods
adc
mov
test
loope
pop
lock
pop
inc
mov
mov
push
jo
or
mov
dec
cmp
jle
subb
loope
enter
sbb
cmpsb
push
sahf
aaa
psubd
jns
shll
cltd
push
pop
push
adc
xor
je
mov
xor
sub
pop
adcl
mov
cwtl
sbb
aad
cmp
xchg
mov
mov
xchg
jmp
test
fbstp
inc
xchg
aas
arpl
lahf
popf
xchg
pop
mov
dec
xchg
mov
adc
push
ja
das
cmpsb
jns
add
push
dec
fisttpll
mov
pop
shr
inc
inc
in
cli
pop
les
push
arpl
push
mov
inc
scas
sub
cmp
add
stc
stos
jl
pop
xchg
inc
cmp
lret
jge
in
loopne
jns
mov
or
sub
rorl
scas
xchg
add
aas
push
or
jns
cmc
cmpsl
ljmp
inc
xchg
lcall
test
hlt
push
cltd
repnz
sti
jnp
fsubp
push
push
stos
and
pop
loope
push
add
mov
in
and
repnz
sbb
mov
jle
ds
out
popa
lock
mov
jno
xchg
aam
ljmp
bound
pop
mov
pusha
inc
ds
or
sbb
push
adc
repz
xchg
cmpsl
outsb
dec
cltd
xchg
out
lock
fsubrl
mov
push
cmp
mov
sub
jb
pusha
in
pop
sbb
cmpb
aad
cmp
dec
adc
enter
push
lahf
testb
dec
xchg
or
push
ss
xor
sbb
ret
mov
leave
inc
cmc
dec
and
repz
iret
call
inc
out
imul
mov
push
sub
push
dec
xchg
leave
in
lock
daa
aad
shlb
fsubs
stc
aas
inc
fistpll
mov
sti
mov
call
les
shr
jmp
pop
mov
push
and
out
rcll
pop
inc
mov
jno
out
push
ss
outsl
mov
or
enter
jp
lods
shlb
adc
ret
sub
lock
in
adc
testl
sbb
in
and
fldcw
add
mov
stc
dec
imul
out
test
dec
jl
sub
adc
stos
dec
push
inc
xchg
addr16
dec
es
and
fsubl
fyl2x
stc
das
adc
sbb
jne
imul
scas
or
mov
flds
or
dec
pop
mov
fwait
push
mull
sub
and
xor
sahf
mov
leave
mov
and
or
inc
adc
xor
pusha
dec
ret
pop
inc
in
cmc
mov
lahf
test
mov
fiadds
fdivl
add
lret
push
cmp
test
cmc
out
or
mov
mov
in
sub
cs
add
add
enter
frstor
inc
aam
mov
pushl
das
lds
out
inc
mov
hlt
pop
cmpsl
mov
pop
pop
cmp
xchg
push
aas
je
sti
mov
xchg
add
jae
popa
adc
mov
pop
and
sub
inc
pop
cld
add
push
test
lahf
repnz
pop
repnz
or
inc
js
mov
mov
pop
loop
nop
inc
jbe
sbb
in
push
leave
lret
sub
notb
push
daa
mov
gs
fwait
lds
push
call
das
add
and
inc
addr16
jae
shlb
or
imul
dec
jecxz
and
adc
xor
pushl
out
adc
rcl
dec
cmp
cmp
rol
loopne
jg
pop
or
sbb
jo
leave
movsb
sbbl
dec
mov
ret
aad
lods
das
xchg
in
jl
xchg
push
leave
mov
mov
lret
pop
and
xor
dec
cmc
dec
sub
in
shll
stos
movsl
jno
sub
push
test
pop
add
jle
imul
xor
xlat
test
push
inc
sbb
sbb
xor
sbb
imul
fs
lock
mov
inc
mov
cmp
pop
lret
mov
aaa
dec
lods
in
and
cmp
sub
or
jl
push
outsb
and
adc
sbb
mov
xor
in
push
mov
inc
cmp
dec
rcrl
fsubrs
sub
sbb
lods
test
jo
jne
sub
dec
nop
jno
jbe
icebp
push
lret
fdivr
cmp
dec
cmc
repnz
fiaddl
outsl
inc
std
imul
mov
lock
testl
scas
add
gs
addr16
dec
call
mov
jg
cmp
outsb
std
cmc
mov
or
scas
xchg
pop
xchg
add
mov
or
flds
mov
mov
sub
lea
and
fimull
push
imul
test
lods
or
mov
jmp
imul
and
or
ljmp
and
out
and
or
fstl
rcrb
inc
push
cmpsl
ja
fmuls
jge
sbb
push
cld
cmp
sahf
leave
jl
arpl
pop
insb
mov
lret
sub
cltd
fdivrl
js
jmp
sub
cmp
clc
pop
fiaddl
fnstsw
test
xor
cmp
mov
idivb
and
pop
jnp
mov
push
adc
cmp
xor
loop
aas
cmc
sbb
xlat
mov
dec
cs
push
sub
and
mov
add
ja
mov
cmp
gs
les
ret
push
pop
repz
arpl
mov
mov
sub
and
jle
add
sub
mov
sub
cli
jne
out
mov
adc
aas
lret
js
add
xchg
fildll
xchg
outsl
xor
jnp
xchg
and
xor
inc
xchg
mov
lret
aas
rclb
inc
xchg
pop
sbb
scas
dec
add
test
dec
jne
stos
add
push
mov
mov
mov
icebp
mov
inc
stos
mov
cmpsl
jnp
aam
sarl
out
mov
cld
mov
mov
mov
sti
mov
xlat
insb
mov
fwait
xchg
jbe
or
mov
stos
aam
repnz
inc
adc
or
cmp
mov
or
and
iret
cld
xchg
adc
pop
aam
sbb
mov
cs
mov
push
repz
cmpsb
loopne
lret
mov
pushf
xor
std
inc
mov
push
lods
xor
cmp
loop
adc
lahf
movsl
push
mull
sahf
or
test
dec
mulb
xor
xor
xlat
push
jns
xchg
ja
xor
push
adc
pop
inc
pop
jo
adc
mov
pusha
inc
xor
cmp
sbb
movsb
push
sahf
out
mov
xor
clc
fcmovnu
call
push
pop
and
sbb
shr
xchg
jnp
divb
shll
cmp
mov
or
cwtl
dec
and
in
xor
leave
sub
fnstcw
repz
xor
mov
div
sub
mov
in
cltd
add
negb
std
or
dec
popa
imul
and
nop
dec
js
iret
inc
jnp
in
aad
aad
stc
jnp
les
inc
rorb
popf
fsubs
jmp
fcomps
pop
xchg
gs
dec
xor
sbb
or
sbb
or
fdivrp
neg
movsl
lds
out
xor
insl
sbb
scas
lret
cmp
jmp
and
mov
scas
popa
push
jo
std
cltd
enter
inc
inc
push
outsl
mov
shll
or
daa
push
xchg
call
push
xor
sarl
jmp
std
and
jmp
pop
cmp
aad
das
enter
jno
mul
fwait
pop
push
mov
jle
outsl
sub
push
sbb
adc
insb
xlat
movsb
mov
mov
push
lcall
sbbb
in
test
mov
adc
or
add
mov
dec
outsl
lock
cltd
out
lret
icebp
mov
xchg
mov
xlat
and
mov
data16
inc
incb
xchg
data16
mov
popf
std
mov
aaa
fsts
addr16
dec
pop
jnp
ret
add
push
xchg
in
jnp
pop
repz
xchg
fwait
push
xor
fwait
imul
faddl
inc
cli
mov
and
aaa
push
and
outsl
jle
inc
lods
jl
add
in
and
scas
leave
fstps
shll
jp
sbb
movl
repnz
adc
out
loopne
outsl
lret
mov
cli
std
sub
loop
pop
inc
mov
lock
stos
pusha
shlb
cwtl
into
sbb
imul
inc
lods
scas
orb
aaa
orb
aas
dec
jne
cs
pop
lock
mov
ss
xchg
insl
je
inc
cld
mov
leave
es
push
lahf
push
clc
scas
jmp
data16
into
stos
jl
xor
inc
mov
daa
jnp
in
in
fsubr
lock
xchg
adc
fsubl
push
cmpsl
out
adc
mov
mov
xor
adc
add
sbb
repz
lahf
mov
sti
sub
testb
fimull
pop
gs
sub
push
popf
xorb
je
lea
inc
adc
loop
jnp
and
jne
int3
rcl
out
outsb
out
gs
inc
daa
xlat
and
inc
jge
jge
push
insb
int
push
mov
aaa
je
push
inc
pop
mov
pop
push
dec
push
insl
add
mov
xchg
mov
jecxz
nop
mov
cmp
lock
or
sub
pop
rorb
outsb
cmp
or
dec
in
sub
leave
arpl
mov
or
jmp
and
js
jecxz
mov
mov
sahf
xor
mov
push
push
insl
dec
dec
mov
or
cld
mov
add
je
lock
add
lahf
inc
mov
sbb
mov
dec
sub
insl
jge
movsl
mov
sub
frstor
rcr
fsub
jne
or
inc
push
jne
inc
sub
clc
fs
stos
shr
mov
pop
add
ret
inc
addr16
imul
addr16
pop
add
call
xchg
push
sbb
adc
movsb
lahf
xchg
mov
mov
cmp
adc
add
xchg
xchg
and
sub
pop
out
cmpsb
adc
ljmp
sbb
enter
insl
xchg
fnstsw
mov
ror
outsb
or
dec
jne
in
mov
lods
mov
mov
sub
call
aad
mov
adc
insb
cmp
shrb
mov
and
mov
dec
sub
test
ret
sub
xchg
mov
fisttps
inc
sti
sbb
adcl
cmp
jne
in
jg
push
lret
call
push
jne
mov
mov
sbb
test
pop
sti
add
add
mov
movsl
lcall
xor
mov
sbb
add
push
sti
repz
cld
out
jmp
lods
in
sahf
addl
pop
sbb
mov
idiv
mov
sbb
lods
shlb
or
mov
push
test
sbb
dec
xchg
push
enter
js
cmpsb
add
xchg
push
dec
call
jnp
push
push
andb
inc
rclb
mov
fcom
out
push
sbb
cmp
divb
adc
mov
adc
loopne
push
ret
pop
ret
rorl
pusha
cmp
adc
arpl
mov
xlat
pop
bound
iret
and
and
lret
pushl
sub
cmp
stc
sbbb
xor
pop
mov
push
mov
push
mov
and
loopne
jge
cmc
xor
push
push
test
in
dec
movsl
adc
jo
sub
mov
cld
insl
adc
mov
lcall
clc
cmp
mov
and
in
jno
mov
dec
cli
mov
push
ds
testb
sbb
lahf
inc
loop
popf
xchg
dec
ds
jns
push
inc
add
dec
lea
mov
cmc
sbb
roll
stos
stos
xor
notl
mov
shl
pop
sti
rcrb
call
adc
in
inc
adc
cmp
lret
out
mov
fisttpll
adc
and
notb
mov
xchg
das
cmp
icebp
cmp
or
xor
jno
cmp
lods
rolb
sub
addr16
mov
outsl
fcoms
sub
repz
fdiv
rorl
repnz
or
lahf
gs
xor
pop
cmp
dec
in
adc
data16
jb
jge
jb
cmp
gs
mov
repz
lds
push
aas
xchg
dec
loop
and
outsb
or
xor
pop
pop
dec
loopne
mov
sub
cs
xor
cmp
mov
push
pop
mov
stc
and
data16
call
jmp
lcall
lret
pop
push
movsl
pop
mov
leave
fsts
stos
bound
jmp
push
cmp
pushf
push
push
jnp
int
mov
dec
mov
push
cmp
arpl
imull
out
call
xor
mov
push
pop
add
mov
sub
insb
and
int3
ffreep
ret
pop
jns
and
pop
xor
bnd
ret
push
mov
jae
jl
push
lea
mov
repz
fildll
shrb
js
lcall
idivb
ss
jp
mov
sub
mov
sub
mov
jecxz
repnz
sub
jmp
mov
cmc
pop
push
and
jl
or
inc
lds
mov
push
adc
stc
pop
or
adc
jmp
fistl
mov
daa
lods
ljmp
xchg
mov
cmpsl
mov
jecxz
daa
mov
rol
push
das
sub
cmp
sbbb
xor
mov
or
outsb
sub
xchg
repz
fmull
pop
xchg
pop
mull
imul
aaa
push
and
sub
cli
mov
iret
xor
dec
shl
cs
push
cmc
push
dec
xchg
add
xchg
ja
push
popa
sahf
in
or
mov
gs
ret
jmp
push
ss
sbb
mov
jo
fs
mov
loopne
mov
cs
push
xlat
xor
popf
mov
mov
mov
fldt
and
pop
sub
movsb
mov
lahf
pop
or
rol
pop
jne
add
xchg
jne
in
pop
andl
mov
movsb
add
jle
add
aad
inc
jecxz
and
sti
neg
lahf
aad
lret
push
sub
xchg
mov
dec
push
xchg
jl
xor
push
cli
pop
pop
mov
subb
ja
pushf
aaa
andb
lds
popa
mov
xchg
sbb
mov
ljmp
mov
in
cli
in
jl
cmc
sub
in
cmp
pushf
rol
test
notb
insb
xchg
out
hlt
mov
hlt
inc
sbb
cmc
jl
mov
shr
and
inc
adc
cmp
ret
daa
sti
imul
es
ja
mov
adcl
cmpsl
jecxz
cmp
cltd
push
in
mov
push
and
insb
push
fcmovbe
cld
cmp
mov
pop
inc
xchg
cld
add
jmp
dec
mov
cli
dec
daa
loop
fmull
imul
stos
adc
mov
fdivl
add
and
lods
decl
jge
mov
movsb
xchg
cmp
sub
cmp
dec
insb
mov
aam
jo
movsl
pop
shr
mov
in
js
inc
jbe
mov
mov
cs
jle
fwait
mov
cmpl
xchg
les
mov
jae
cmpsb
sbb
mov
jo
fsubl
inc
decl
inc
xchg
cld
sbb
mov
cs
push
xlat
sub
pop
mov
mov
imul
sub
mov
repz
mov
das
sar
sub
add
add
jmp
adc
stos
out
mov
leave
add
lret
sbb
inc
sbb
shll
icebp
in
jmp
les
rcrl
xchg
xor
push
lret
inc
test
gs
sti
data16
jne
insb
loop
jae
insl
and
or
lods
pop
xchg
test
mov
jnp
jp
xor
and
in
lock
mov
jmp
inc
xor
lret
dec
mov
sbb
mov
insb
mov
mov
fisttpll
xchg
outsb
cwtl
push
fdiv
daa
push
mov
mov
pop
insb
lret
and
sub
push
push
dec
ljmp
subps
cmc
mov
sbb
addr16
mov
xchg
dec
test
cwtl
std
add
enter
outsl
jge
xlat
std
sbb
aam
cmpb
sbb
int
add
sub
icebp
fidivrs
in
ds
negb
adc
push
push
cli
lock
mov
xor
sti
test
adc
xor
sub
lcall
popa
mov
pop
fucom
iret
test
sbb
mov
pop
dec
add
pop
rcll
lods
outsl
sub
cmp
outsb
popf
dec
and
fidivl
jno
test
cmp
lahf
sbb
jns
jb
cwtl
add
jae
popa
sub
lea
js
add
lret
inc
or
imul
fstpt
push
mov
idiv
jmp
sbb
pop
cmpsb
andb
xchg
out
adc
lods
pop
aad
or
and
sbb
mov
mov
call
push
mov
push
jg
adc
pop
push
cwtl
mov
inc
lods
repnz
into
cltd
scas
out
clc
out
clc
mov
dec
lahf
or
jae
lods
pop
jecxz
xchg
test
mov
or
push
mov
loopne
adc
adcl
daa
cmp
das
mov
mov
jnp
push
adc
outsb
jo
push
ret
clc
jno
divb
sbb
nop
out
das
push
pop
xchg
outsb
jl
xchg
scas
cmp
mov
mov
sub
rcrb
or
adc
pop
pop
cmp
ret
cltd
daa
clc
dec
xchg
mov
mov
bnd
icebp
loope
scas
enter
sbb
aam
mov
insl
dec
mov
in
add
fs
adc
push
stos
push
out
js
fdivs
cmp
adc
xchg
lret
imul
mov
xlat
push
jne
dec
pop
jbe
es
ja
popa
mov
fcomps
lock
loopne
xchg
call
fwait
iret
dec
pop
xchg
sbb
enter
adc
xchg
ja
std
int3
and
bound
fadd
lret
stc
push
add
test
std
insb
rcr
outsl
loopne
movsl
pushf
cmpsl
xor
push
dec
pop
aaa
ret
mov
adc
pop
mov
dec
pop
roll
fs
ret
or
pcmpeqw
jb
jb
xor
ds
loopne
push
sarl
xor
add
rolb
iret
cmp
pop
sub
mov
jle
dec
sub
pop
adc
mov
or
ljmp
mov
xor
mov
xchg
mov
hlt
xorb
push
xchg
scas
call
lahf
arpl
dec
inc
xor
loopne
push
pushf
loopne
movsb
ljmp
pop
mov
sub
stos
push
fcoms
cltd
mov
rcrb
sahf
daa
subl
mov
iret
adc
pop
arpl
pop
les
sbb
fildl
xchg
cltd
rolb
fbld
add
call
or
cmp
test
and
cli
movsb
cmpsb
add
pop
lds
mov
sarl
std
pushf
mov
jno
mov
xor
rcll
faddl
jecxz
frstor
dec
stc
mul
cmpsb
rcrb
jecxz
cmp
pop
lahf
lret
out
les
add
lock
testl
mov
inc
push
inc
sbb
loop
negl
and
jle
jmp
xchg
jge
stos
outsl
jl
sub
cld
jo
rcll
cmp
and
pop
dec
adc
aaa
adc
and
bound
xlat
sub
hlt
test
fsubs
xor
aad
insb
adc
iret
mov
gs
in
out
mov
leave
js
in
pusha
lret
loop
add
aam
inc
adc
jae
fsub
dec
dec
cmp
sub
pop
insb
sub
pop
loopne
mov
dec
add
daa
dec
imul
mov
clc
imul
pop
cmp
sbb
pop
mov
std
mov
mov
fbld
sarb
add
outsb
iret
jns,pt
aam
test
cmc
add
xchg
cmp
jnp
push
adc
sbb
inc
and
inc
dec
enter
mov
jb
sti
sub
jo
jns
cmp
xorb
aam
seta
lret
pop
mov
mov
aad
mov
xlat
fisttps
dec
pop
mov
jb
lcall
mov
xchg
scas
ss
mov
add
jge
loope
sub
scas
sete
adc
mov
inc
mov
sbb
push
shll
adc
sub
add
push
jmp
gs
arpl
sub
mov
sbb
insb
int3
mov
xchg
scas
int3
cmp
repz
and
mov
shrb
data16
cltd
jae
ljmp
and
je
outsl
jbe
jne
cmpsl
xor
adcl
jnp
daa
aaa
setae
aaa
nop
daa
test
sbb
std
repz
outsl
push
mov
lds
cli
jmp
jecxz
imul
mov
das
push
jge
insb
cmp
addr16
mov
ficoms
or
loopne
xchg
jmp
pop
xchg
mov
push
add
adc
addr16
jge
pusha
rolb
inc
mov
negl
mov
addr16
adc
pop
push
add
arpl
outsb
sub
xlat
movsl
push
iret
or
adc
cmp
icebp
in
inc
cwtl
test
popa
push
mov
sub
repz
imul
cmp
in
xor
fwait
xor
sti
jnp
push
les
shrb
jo
inc
push
lds
add
cmp
js
mov
mov
pop
pop
pop
je
xchg
fnstcw
mov
sti
sbb
xchg
cmc
or
mov
pop
test
cwtl
pop
outsl
add
rolb
mov
daa
inc
xor
les
mov
in
push
or
and
and
mov
xchg
std
cmp
int
push
sbb
inc
push
jge
or
mov
push
xor
pop
mov
mov
xchg
push
sbb
mov
ja
mov
dec
push
sbbl
mov
rorl
mov
mov
mul
jbe
pop
gs
adc
xor
sub
and
inc
aad
loope
scas
fisttpl
iret
shlb
insl
add
ljmp
cltd
inc
mov
lcall
stos
cmp
and
dec
jge
rolb
xlat
out
jmp
cmp
fldt
sub
xchg
stc
push
iret
jbe
push
int3
jp
sub
or
arpl
jle
nop
in
mov
mov
mov
cmp
mov
hlt
dec
lcall
sub
jae
inc
lcall
xchg
popa
cmp
jg
aas
iret
fnstenv
clc
sti
inc
push
repnz
pop
lahf
pop
adc
rorb
inc
mov
ret
xor
jbe
push
xchg
es
mov
jg
je
add
cmp
dec
xlat
int
cmp
pop
iret
and
addb
sbb
sbb
bound
aaa
bound
loop
test
push
jb
lods
sarl
sti
sub
cmp
stos
jns
cmp
lret
out
adc
jp
mov
testb
sbb
faddl
cmpsl
scas
push
mov
push
or
ss
jae
add
fldt
sub
xchg
mov
pop
mov
adc
jl
mov
scas
ficoml
mov
leave
aam
push
dec
sbb
mov
sarb
arpl
inc
outsl
rcrl
insb
es
fs
sbbl
pop
mov
mov
xchg
shrd
mov
adc
cmp
pop
or
lock
fistpl
mov
data16
xlat
add
in
fimull
xchg
push
fsubr
cwtl
adc
scas
sbb
shlb
sbb
push
adc
aaa
mov
mov
sub
in
push
je
push
ds
fidivs
xchg
inc
lods
push
and
inc
cmpsb
ss
mov
imul
or
xor
into
push
pop
mov
dec
xchg
inc
loopne
adc
mov
jae
mov
sahf
fadd
sub
mov
ret
push
inc
adc
imul
lock
mov
bound
dec
inc
xor
hlt
jno
dec
push
mov
pop
in
stc
pop
imul
and
pop
inc
cmpsl
mov
cmc
fstpl
aam
sub
cld
sbb
sbb
inc
ljmp
jl
pop
mov
lods
mov
enter
pop
mov
daa
dec
notl
jge
test
mov
xchg
xchg
je
ljmp
in
dec
mov
in
jl
jns
xchg
gs
scas
and
dec
out
notl
fimull
sbb
or
out
and
add
push
and
jbe
jg
xor
sub
aam
sbb
sbb
or
lret
pop
mov
mov
out
aam
scas
cs
sbb
inc
pushf
mov
pop
push
sbb
mov
aaa
adc
sub
push
arpl
xchg
xchg
mov
jmp
and
sub
xor
push
dec
push
adc
mov
push
int3
sbb
jecxz
addr16
nop
subl
mov
in
arpl
es
les
dec
or
pop
rorl
scas
xor
adc
lods
pop
int
adc
jp
cs
mov
ja
push
xor
and
cmp
in
pop
mov
mov
push
sti
ficompl
xor
jmp
arpl
addb
js
daa
bound
xor
cmp
and
das
pop
orb
pop
inc
rcrl
iret
and
dec
in
cli
sub
mov
shr
mov
xchg
sub
int3
mov
push
push
dec
icebp
loopne
dec
sarl
push
js
inc
pop
testl
xchg
lods
test
subb
mov
insb
out
imull
repnz
lods
jl
mov
add
xchg
das
and
push
xchg
pusha
pop
push
mov
dec
xchg
or
out
mov
or
jp
iret
push
in
sarl
pusha
push
std
in
call
pusha
pusha
andl
andl
jbe
shrl
xor
lds
add
sub
test
inc
cli
mov
ror
inc
jmp
xchg
loop
xor
scas
sub
cmp
jmp
cltd
dec
jmp
xor
movsl
cs
hlt
xor
add
aas
add
ja
dec
push
cmp
pop
js
pop
push
mov
pop
ret
fidivrl
pop
addr16
into
daa
in
cmpsl
out
cmp
push
out
mov
dec
adc
xchg
jg
movsl
lds
scas
push
mov
dec
aam
daa
roll
in
mov
mov
movsb
cmp
fucomi
pop
push
mov
hlt
mov
adc
int
mov
ficoml
jo
jae
mov
das
add
jp
adc
addr16
cmp
push
jmp
ljmp
cld
jb
repz
cs
jg
or
fwait
outsl
mov
push
lret
push
inc
movsl
mov
xchg
push
xorl
cmc
sbb
push
and
fimull
push
pop
leave
fstp
fnstenv
gs
ljmp
clc
xchg
adc
insb
mov
gs
mov
and
inc
mov
cli
push
rcl
xchg
pop
jns
pop
jmp
jmp
data16
pop
enter
out
and
sub
dec
jo
and
sub
sbb
pop
sbb
dec
pop
sbb
fimull
cltd
xchg
xor
repz
shl
sbb
ret
cmp
ja
hlt
sub
inc
push
ret
and
or
out
dec
pop
lret
xchg
adc
in
cmp
pop
and
cmp
pop
in
daa
fs
les
addr16
cmp
pushf
inc
xorl
pop
cmp
push
dec
jb
scas
mov
push
xchg
ja
and
push
push
mov
stc
stc
into
xchg
ljmp
push
jns
push
fcoms
inc
test
inc
push
dec
xchg
popf
xchg
push
sbb
stc
out
xchg
aad
xchg
mov
cmp
adc
push
jg
mov
clc
movsb
iret
mov
movsl
sti
iret
jns
mov
std
sub
nop
cmpsl
xor
cmp
lahf
lods
les
mov
mov
and
adc
cmpsl
sbb
or
jge
mov
fisubrs
pop
push
mov
adc
outsb
movsb
lea
inc
test
daa
je
cmp
enter
pushf
ljmp
jge
loop
push
jecxz
aaa
push
mov
or
pop
xorl
xchg
jns
insl
movsb
dec
les
lea
push
add
je
mov
sarb
cmp
and
out
shlb
and
les
mov
mov
outsl
std
mov
ret
repz
adc
xor
xchg
xor
js
imul
adc
repz
pop
add
std
movsl
fstps
mov
pop
xor
neg
xchg
repz
pop
in
inc
mov
adc
push
stos
into
sub
mov
test
cmp
jo
xor
aaa
int
and
add
scas
push
xor
in
pop
out
sub
and
ret
and
dec
les
incl
lock
push
testl
cmpsb
movsb
out
mov
in
sub
imull
imul
iret
push
mov
jnp
cmp
push
pop
mov
mov
mov
adc
ss
cli
mov
sub
dec
push
inc
jb
pusha
and
sbb
into
add
xchg
outsl
cld
mov
mov
cmp
fcomps
test
pop
jmp
lods
mov
js
add
in
lcall
lods
pop
sub
popf
push
pop
mov
mov
xor
bound
push
fistpl
repnz
ds
neg
jnp
or
lea
push
out
cwtl
jmp
push
ss
push
pop
mov
xor
dec
mov
mov
dec
outsl
lods
xor
test
sysexit
rcrb
pop
xchg
fs
adc
imul
jnp
add
mov
loopne
repnz
pushf
add
pop
inc
pop
mov
xchg
jg
jge
push
cld
inc
stc
jne
inc
mov
outsl
insb
sub
bound
pop
lods
add
push
sarl
cmpl
add
mov
ljmp
movsl
dec
aam
jl
add
idiv
stc
pop
and
stc
sbb
jg
jg
mov
ja
andl
xor
fidivl
cmp
bnd
pop
sub
rol
movsl
xchg
aaa
mov
pop
in
ljmp
in
cmpl
shl
mov
jg
push
movsl
in
inc
lcall
subb
inc
or
sbb
push
push
test
and
in
in
mull
divl
shlb
cmpsl
add
mov
jmp
scas
mov
dec
dec
pop
dec
adc
pop
mov
imul
adc
pushf
stos
imul
pop
aam
adc
jbe
inc
mov
add
call
mov
sub
popf
mov
xchg
pop
icebp
orb
fcmovne
push
pop
mov
xchg
and
imul
lret
test
jecxz
inc
not
inc
inc
xor
das
imul
or
popa
sub
fnsave
stos
dec
add
icebp
or
rcrb
test
push
sbb
es
enter
adcl
test
inc
ficompl
cwtl
addr16
cwtl
aad
and
dec
push
xchg
mov
fisubrl
mov
nop
push
in
sbb
push
shll
push
loopne
and
mov
add
in
imul
lea
jmp
shlb
sbbb
push
fs
test
ret
push
sub
fdivl
sbb
loopne
ja
xchg
iret
mov
cmp
mov
repnz
pushf
mov
mov
dec
out
xor
adc
nop
fisubl
xor
insl
sahf
test
mov
jg
pop
sub
mov
mov
mov
jo
rcll
sub
add
mov
jno
je
mov
mov
xchg
push
icebp
xchg
rorb
push
fldl
xchg
or
xor
mul
in
xchg
mov
aad
xor
push
mov
inc
js
sub
pop
stos
mov
nop
mov
push
outsl
or
pushf
fwait
int3
outsl
add
stos
jmp
pusha
xor
fstpt
jnp
sub
sbb
dec
cmpsl
daa
mov
push
outsl
insb
rclb
push
fcmovnb
repz
inc
xchg
mov
adc
aas
push
pop
jno
loope
in
iret
jbe
arpl
in
xchg
or
mull
gs
sub
repz
sub
stc
stos
cltd
je
loope
xor
int3
jmp
sub
decb
je
sahf
cli
jns
jmp
xlat
outsl
dec
cmp
jo
out
add
dec
push
inc
decb
jnp
mov
jmp
xchg
ror
insb
cmp
mov
push
push
adc
leave
mov
negl
dec
and
and
outsb
mov
scas
lock
cli
jp
xchg
sub
int3
clc
mov
shr
sub
mov
fistpl
cld
test
daa
mov
in
mov
push
xchg
sbb
xor
pop
int
sar
jne
stos
inc
cmpsl
cmc
cltd
adc
out
and
push
ss
cmp
inc
jns
loope
mov
in
push
dec
inc
mov
and
fnsave
mov
mov
cmp
stos
pop
and
jp
add
out
dec
xor
shlb
addr16
inc
into
nop
in
aaa
xchg
mov
mov
sbb
jmp
inc
mul
mov
dec
sub
mov
outsl
ja
cltd
enter
in
movsl
das
daa
fs
mov
cli
xchg
cmp
sub
lea
inc
imul
push
add
jno
cmp
scas
ret
fcompl
lods
pop
out
cmpsb
loope
mov
shrb
and
add
sbb
jnp
pop
test
rcrb
pop
imul
sub
fisubs
js
jg
mov
aas
mov
imul
push
inc
test
cmp
mov
mov
loop
inc
add
js
push
push
dec
jl
xor
xor
pusha
lcall
pop
movsl
shll
xor
sub
addr16
stos
xor
adc
out
cmp
adc
push
cmpsb
inc
jp
fistpl
adc
addr16
jmp
int
cmpsb
dec
cs
mov
shl
push
mov
dec
mov
xlat
std
push
pop
sbb
push
cwtl
mov
sbb
xchg
adc
mov
mov
inc
mov
outsb
push
jmp
adc
or
leave
aad
out
or
fmull
pop
shrl
fucomi
mov
add
jp
out
pop
popa
out
f2xm1
fldenv
mov
mov
ja
popf
loopne
mov
not
out
cmc
clc
sbb
sti
pop
push
aaa
mov
hlt
xchg
stos
std
mov
sub
and
pop
push
push
lds
jl
fs
sbb
xor
sti
dec
pop
lods
adc
xor
cmp
fstpt
push
test
jb
ljmp
xchg
es
mov
insl
dec
dec
out
pushf
fimuls
inc
mov
ljmp
and
xor
jmp
fwait
stc
pop
ljmp
add
sahf
imul
or
je
adc
jl
cmpsb
pushf
in
sarl
xor
fisttpl
dec
cmpsl
push
pop
and
out
out
aaa
bound
dec
xchg
mov
cmp
faddl
addl
lods
stos
dec
inc
push
jl
mov
sub
rclb
xor
jne
dec
ljmp
push
mov
andl
popa
mov
inc
jb
inc
jnp
testb
mov
out
jnp
cli
xor
adc
mov
jno
mov
or
arpl
jne
cwtl
jnp
adc
inc
sbb
daa
mov
sub
scas
and
lea
push
bound
or
xor
fldt
mov
ljmp
dec
jp
jbe
idiv
jns
in
push
mov
mov
mov
outsl
and
clc
mov
inc
add
pop
cld
and
mov
inc
dec
xchg
call
push
add
arpl
sub
aam
out
test
bound
or
cs
movsb
add
testl
ljmp
inc
outsb
fisubl
sbb
jmp
dec
rorb
jg
mov
sub
or
adc
cwtl
dec
dec
inc
rcrb
mov
or
mov
cwtl
sbb
ds
jne
jne
lea
loopne
pushf
pusha
push
loop
scas
mov
mov
add
cmpb
into
bnd
xor
and
mov
js
adc
js
xor
mov
xor
mov
xor
in
fisubs
gs
rcl
out
aam
fnstsw
sahf
data16
push
add
and
loop
sbb
or
bnd
pop
test
ljmp
push
dec
pop
mov
rcll
push
outsl
sub
outsb
lods
xor
out
lret
pop
ljmp
sbb
jb
pop
cmpsb
scas
jg
sub
outsl
mov
jno
dec
mov
in
fistps
dec
add
aam
push
bound
push
cwtl
cmpsl
jg
sahf
jmp
pop
or
push
dec
mov
xor
mov
in
lahf
les
lock
pop
lods
out
ret
mov
inc
push
iret
cmp
jns
cmp
pop
inc
xor
mov
out
jne
int3
popa
mov
jle
sbb
jp
add
cmc
add
jmp
mov
cltd
xor
add
adc
mov
and
xchg
jl
xor
inc
aaa
add
sahf
or
push
dec
mov
sub
mov
push
push
mov
push
inc
sbb
xchg
push
xor
out
fistl
aas
int
in
mov
xchg
fnstsw
fisubrl
inc
xchg
cmpsl
fsubl
xor
in
imul
sti
pop
and
mov
dec
or
ret
xor
sbb
mov
jmp
ss
and
lahf
xor
sti
xchg
jb
movb
push
inc
fcomps
mov
rcrb
push
insb
push
arpl
mov
lahf
mov
stos
cmp
jns
dec
mov
call
sbb
dec
inc
cmp
add
dec
xor
add
mov
hlt
or
pop
inc
in
xor
and
ljmp
pop
cmc
and
cmc
leave
andl
popf
xchg
xchg
fdivs
lret
jo
and
mov
mov
sbb
cmc
xlat
inc
ret
mov
jge
dec
leave
and
mov
sbb
ja
adc
jnp
mov
sub
negl
das
xchg
mov
or
sbb
fucom
add
push
dec
or
mov
lds
pushf
cs
arpl
jae
mov
jecxz
aad
lds
mov
inc
pop
xchg
scas
push
push
jno
sbb
cltd
mov
es
fidivl
icebp
fldcw
adc
push
jle
push
not
push
mov
dec
fwait
dec
add
sarb
and
pop
movsl
push
movsl
stc
aad
loopne
ret
jno
in
add
and
xchg
and
sub
pop
fs
loop
xchg
test
test
jecxz
cmp
sti
popa
out
mov
and
dec
aas
cmp
add
arpl
xchg
or
mov
sbb
mov
adc
cmp
pop
mov
cmp
cmp
or
movsl
mov
sarb
arpl
xchg
cltd
inc
enter
pusha
repz
mov
mov
add
xchg
inc
pop
mov
mov
mov
mov
addr16
ljmp
dec
out
inc
mov
lock
lods
mov
outsl
dec
and
jns
push
sub
mov
aad
or
ljmp
xchg
ljmp
ss
mov
gs
loop
xor
fiaddl
je
loop
push
push
lcall
rclb
xchg
aam
loop
cld
movsl
ret
mov
push
add
rorb
ret
stos
cmpb
or
fs
cmp
enter
xor
adc
xchg
jnp
dec
push
cli
inc
pushf
insb
pusha
mov
and
add
mov
ficoms
cmc
lock
imul
in
out
leave
jbe
pop
sub
cmp
andb
and
adc
xchg
lcall
mov
fsubr
movsb
icebp
out
jge
fstl
call
mov
loopne
idivl
aad
enter
ss
insb
out
cmp
inc
pop
mov
pusha
add
dec
inc
xor
xchg
dec
add
cmp
pusha
jl
jb
aas
addl
mov
dec
emms
xor
js
fldcw
popf
cli
je
test
push
mov
les
cmp
cmp
pop
cmp
negl
mov
push
scas
jbe
mov
xchg
sbb
add
cmp
sahf
and
inc
and
fwait
movsl
js
mov
test
daa
daa
sbb
jle
jbe
and
dec
and
add
lock
dec
out
jno
cmpb
leave
adc
sub
cmp
mov
add
js
or
aad
je
or
cltd
and
ss
lods
mov
sub
mov
aaa
pusha
xor
scas
and
jge
lds
ret
lcall
out
roll
pop
or
shlb
adc
push
mov
sti
lods
xchg
and
fcoml
sub
inc
and
scas
jl
mov
inc
idiv
adc
daa
mov
mov
outsl
loop
adc
push
outsl
xchg
xor
xor
pop
jge
sub
adc
stos
adc
add
scas
pop
add
sub
repz
lcall
lcall
arpl
or
rclb
pop
mov
add
jecxz
imul
out
ret
cmp
das
pushf
mov
ret
call
cmc
in
jp
out
cmp
xchg
sub
adc
mov
and
aad
mov
ja
jnp
scas
cmpsb
xchg
mov
or
mull
or
test
jae
xchg
rorl
ret
ret
andb
fisubs
mull
push
dec
or
sbb
mov
fwait
sbb
or
xorb
jbe
ss
je
loope
mov
inc
mov
cmp
fprem1
sub
cltd
mov
outsb
lahf
mov
gs
push
hlt
mov
and
out
sub
lock
out
cmpsl
pop
gs
cmpsl
sbb
or
ljmp
aad
adc
roll
xor
xor
hlt
add
dec
cmp
lds
sti
and
adc
adc
mov
gs
and
push
sbb
cmp
pop
mov
mov
pop
inc
vpunpckhqdq
jae
push
pop
pop
mov
lods
movsl
inc
mov
jp
sbbl
and
negl
mov
jle
mov
lock
pop
int
les
lock
dec
jle
mov
push
jl
cmpsl
js
cmpsl
lcall
mov
shlb
adc
movsl
cmp
push
repz
dec
rorl
scas
inc
outsl
call
int3
push
iret
adcl
lock
xchg
sub
in
loop
dec
cs
sti
inc
mov
arpl
jecxz
lea
dec
xchg
sub
loopne
cmp
push
or
mov
adc
mov
das
jnp
or
out
xlat
ss
cmp
mov
pop
and
mov
fcompl
push
repz
inc
jmp
iret
in
jle
mov
shlb
fistl
imul
adc
dec
jns
adc
xor
add
in
les
dec
mov
xor
cmovo
js
xorl
and
ror
and
cmc
pop
repz
dec
nop
xor
imul
jno
test
and
sub
cli
xchg
loope
mov
iret
dec
mov
sub
pop
loope
or
stos
pop
jns
xor
mov
cs
mov
xor
repz
fs
sub
inc
jo
mov
rcl
fsubs
imul
fisubs
adc
cmp
cld
pop
inc
gs
jle
outsl
pop
pushf
es
daa
inc
jl
pop
loopne
and
or
xchg
fistpll
stos
jmp
pop
sbb
mov
jg
rcrb
mov
jp
sarb
push
mov
mov
ficomps
jnp
je
and
cmpl
mov
xchg
mov
and
fnstsw
bound
sub
ja
cwtl
mov
je
ds
xchg
test
jns
leave
ss
dec
jl
icebp
hlt
xlat
cmp
stos
jmp
movsl
pop
or
push
push
add
pushf
addr16
ror
or
lods
and
hlt
hlt
lods
or
jmp
dec
popa
psllw
push
adc
popf
pop
inc
inc
cmpsb
jp
lea
jne
pop
iret
jecxz
dec
jnp
lea
xor
test
mov
xchg
or
push
inc
sub
sub
jp
into
xchg
outsb
cs
inc
jno
and
xchg
mov
inc
js
jle
addr16
lret
sub
cmp
icebp
arpl
inc
shl
pop
mov
scas
xchg
int3
mov
or
fistpl
cltd
cmp
cmp
imul
add
pop
or
sbb
mov
sub
cmp
or
pop
xchg
enter
mov
addb
xchg
mov
sarl
inc
je
orb
or
xchg
notl
in
lock
ss
mov
mov
adc
sub
push
loop
nop
ss
call
mov
xchg
fs
push
mov
push
jnp
push
mov
test
fldcw
js
sub
imul
pop
lea
popf
imul
fs
dec
movsb
xchg
cmp
or
test
iret
xchg
aas
inc
mov
push
mov
lds
lods
into
push
xor
btr
pop
jae
test
sub
lret
mov
loope
fwait
mov
pusha
arpl
mull
in
pop
dec
mov
into
stos
xchg
adc
test
out
outsl
cwtl
insb
push
test
les
in
ss
subl
mov
cwtl
mov
mov
adc
aad
je
or
pop
imul
rorb
in
rol
dec
xor
test
jae
hlt
subb
out
into
bound
iret
mov
mov
nop
or
shll
mov
rcl
jmp
popa
test
scas
in
lock
and
mov
xchg
ficomps
and
xchg
sub
mov
xor
xor
cmp
pop
push
iret
lret
shl
test
cmp
sbb
enter
push
std
mov
jae
jne
pop
out
xchg
xor
and
cmp
dec
test
addr16
stc
call
mov
sbb
mov
xchg
popa
mov
jno
notb
leave
pop
sbb
iret
xor
and
cmp
lea
cmp
scas
xor
inc
in
popf
or
cld
int3
cmpsl
in
fidivrl
mov
rclb
inc
mov
add
xchg
cmc
pop
lds
lret
push
cwtl
adc
popa
cmpsb
xchg
enter
add
imul
mov
mov
stc
in
mov
rclb
in
mov
popf
aad
sarb
cmp
sub
in
aas
adc
push
sbb
shrl
dec
xlat
subps
ljmp
sbb
in
ja
mov
cs
sub
enter
xor
cmp
mov
aam
scas
mov
jge
or
test
dec
and
cmp
dec
pop
add
sub
shl
cli
sub
push
inc
xor
xor
or
jmp
mov
pop
fsubrp
lcall
jae
or
sbb
shrl
sub
adc
or
mov
test
hlt
imul
adc
sbb
jae
cwtl
inc
adc
dec
or
ljmp
or
es
mov
stos
enter
lods
nop
cmpsb
int
fbstp
fidivs
inc
push
ret
push
jmp
out
out
lock
jnp
add
cltd
add
add
shrl
dec
fstp
stc
xor
pop
popa
pop
hlt
repnz
cmp
inc
pop
cmp
cs
out
shlb
sub
dec
mov
fsubr
out
pop
sub
xchg
iret
xor
sbb
mov
int3
fidivs
and
leave
sbb
insl
stos
lods
adcl
xchg
in
pop
xlat
lahf
cs
sbb
les
mov
mov
xchg
cmp
rorb
pop
ja
mov
gs
aam
jne
add
pop
lret
aam
xor
or
shll
sbb
lret
lcall
push
pusha
aad
outsl
jnp
iret
lahf
cltd
popa
insl
xor
orb
mov
je
adc
mov
repnz
mov
or
pop
sbb
daa
addr16
xchg
cmp
dec
and
sbb
cmp
add
pop
jo
sbb
and
lods
adc
jecxz
lcall
dec
maxps
repnz
movsl
or
ss
fbstp
push
mov
or
mov
push
jno
stc
sbb
lret
insl
popf
cmp
in
movsl
xlat
xchg
add
stos
pop
out
ret
inc
sbb
mov
sbb
adc
mov
xlat
das
and
cmpsb
sbb
push
jb
fldcw
push
xor
mov
hlt
insl
sahf
ss
in
scas
mov
stos
mov
fsubp
mov
shll
cmc
test
das
mov
jno
and
jo
lret
stos
jecxz
shlb
mov
fisubs
cmp
or
mov
mov
mov
enter
inc
nop
xchg
lods
sbb
addb
out
push
or
das
adc
mov
xor
in
sbb
popa
mov
mov
xor
dec
ss
cmp
mov
cli
mov
hlt
stos
xchg
fstps
js
and
xlat
push
jb
xorl
movsb
call
cmp
mov
dec
jae
push
jo
sarl
jae
ret
cmp
sbb
jo
ljmp
jne
sahf
dec
icebp
loopne
lock
mov
neg
jl
out
shl
pop
dec
lods
pop
mov
rcrl
and
bound
call
pop
push
cmpb
pop
out
std
cmp
shrl
jbe
call
xchg
pop
test
imul
js
push
cmp
mov
iret
dec
test
imul
enter
mov
popl
sbb
out
cld
cli
add
xchg
inc
cmp
das
add
sahf
fcompl
sbb
ja
repz
scas
sub
adc
std
jmp
pop
push
andb
call
enter
in
sbb
dec
or
mov
scas
paddw
add
pop
and
mov
jo
add
aam
scas
jge
stc
out
add
push
ret
xchg
xor
ret
vldmxcsr
add
mov
pop
add
call
shll
and
jge
mov
adc
xchg
xchg
dec
mov
push
dec
inc
add
popf
push
xchg
or
push
popa
jne
add
sub
clc
mov
aas
mov
jmp
mov
std
xchg
sub
sub
adc
mov
push
lcall
cmc
adcb
push
cmpsl
out
jle
pop
mulb
jbe
popa
out
lahf
jno
lahf
loop
jecxz
and
dec
rcll
push
test
rcll
shll
pop
adc
mov
ret
out
sub
aam
ss
std
lea
test
xor
loopne
jmp
xchg
mov
aad
mov
push
add
and
cld
sbb
push
inc
insl
adc
out
out
mov
mov
es
xor
loopne
int3
jg
mov
push
pusha
gs
push
cwtl
pop
data16
lret
mov
call
sub
test
mov
sub
gs
push
dec
movsl
xchg
xchg
loop
leave
jecxz
int
pushf
inc
clc
flds
ja
mov
stos
aaa
mov
cmp
mov
or
ret
pop
repnz
imul
lds
xor
mov
or
call
mov
inc
gs
stos
dec
mov
out
mov
fisubrs
mov
movsb
pop
mov
imul
and
push
or
scas
les
daa
push
fmul
mov
cmpsl
out
in
push
mov
dec
cwtl
mov
bound
sub
shrl
push
repnz
test
ret
out
jl
lret
cmpsb
movsl
repnz
jecxz
nop
addr16
mov
gs
mov
outsb
mov
pop
mov
add
jmp
pop
mov
push
ja
xchg
imul
or
add
pop
xor
int3
add
add
imul
pop
in
enter
loope
jl
ljmp
je
sub
sub
stos
mov
and
and
or
push
cmp
mov
mov
ljmp
fldt
jge
mov
repz
idivl
xchg
sbb
ds
out
jnp
in
jle
int3
sbb
xchg
loope
rolb
cli
jle
inc
in
sbb
or
je
cmp
mov
cmp
popf
les
sbb
sub
in
adc
and
out
into
shll
and
ret
and
cmp
sbb
pop
mov
mov
push
add
std
mov
ja
cwtl
push
inc
andb
lods
fists
repz
push
cwtl
pop
dec
xchg
dec
repnz
leave
in
and
addr16
stc
test
jnp
ljmp
adc
rorb
push
arpl
leave
cmc
and
out
pop
cltd
mov
hlt
dec
mov
mov
xor
cwtl
jo
jbe
or
sbb
std
mov
movsb
pop
ret
push
pop
and
pmulhuw
hlt
mov
push
mov
arpl
call
push
push
loop
std
push
push
aad
lods
enter
mov
mov
dec
ss
and
sub
adc
cmpsl
fs
xchg
loopne
les
push
pop
daa
dec
mov
popf
stos
mov
int
sbb
xchg
in
movsb
lcall
add
mov
addr16
mov
fldenv
and
pop
out
xor
sbb
in
and
jle
sub
aas
pop
aaa
cltd
mov
in
jo
mov
pop
dec
iret
mov
fsubrs
lock
or
jbe
outsb
add
mov
repnz
loop
out
xchg
push
or
pushf
enter
popf
stos
nop
cmp
lods
icebp
out
pusha
push
ret
imul
loopne
cld
fisubl
jle
pop
mov
mov
fidivrl
inc
lds
stc
add
mov
mov
ret
stc
jge
test
push
flds
and
dec
into
ror
or
mov
pop
push
add
and
dec
aas
out
adc
cld
xlat
xchg
xlat
cltd
out
and
jecxz
popa
mov
test
cmp
mov
jb
cmp
cmpsb
mov
insl
xlat
xchg
add
and
push
lret
mov
arpl
mov
aaa
lds
jecxz
mov
cmp
cmp
popf
rolb
stos
inc
in
fcomps
xor
lods
jmp
divl
xchg
movsl
gs
mov
icebp
sbb
mov
stos
in
js
cmp
pop
sbb
jp
pushf
xchg
sub
ficoms
push
lods
cmp
fldenv
mov
lods
jge
imul
inc
or
cli
and
gs
pop
test
mov
cs
inc
arpl
inc
enter
jle
js
nop
xor
push
jmp
bound
push
adc
test
popa
add
mov
roll
add
fsubs
scas
bound
movsl
arpl
int
sub
xchg
leave
add
sub
xchg
dec
popa
adc
mov
mov
inc
out
jle
pop
leave
pop
xchg
mov
dec
and
sbb
sub
jp
or
repz
and
movd
daa
push
pop
in
aas
mov
push
inc
das
jo
dec
orl
push
jnp
push
loope
mov
scas
ss
jmp
mov
lea
fstps
xor
adc
cmp
imul
lret
fwait
xchg
jmp
cmp
aam
cmc
shl
mov
rcll
add
lds
sub
mov
mov
repz
subps
bound
test
mov
xchg
scas
or
pop
xchg
and
sub
and
or
cmp
daa
lahf
scas
aas
repz
aam
push
add
mov
js
inc
inc
mov
fnstcw
xor
roll
test
pop
inc
lods
in
icebp
stc
aaa
pop
jle
popf
sahf
into
mov
push
loopne
fcmovu
dec
movsb
movsl
into
push
scas
ds
inc
pop
jmp
adc
les
pop
jnp
xor
mov
hlt
xor
rcll
lret
mov
addr16
sbb
out
pop
shll
mov
sbb
cmpsb
fidivrl
test
outsl
cld
sbb
mov
fs
lods
xor
jmp
or
test
add
loope
pop
pusha
jmp
loop
daa
addr16
inc
and
mov
push
sub
lahf
add
mov
lcall
ja
jo
fildll
int
mov
mov
mov
aaa
cld
cmp
cltd
lds
mov
fwait
stc
mov
dec
jg
sub
scas
jnp
cld
mov
push
cwtl
js
pop
cmc
repnz
stc
xchg
stc
mov
mov
cmp
cltd
cs
lret
mov
jno
sti
dec
push
in
mov
jle
pusha
add
lret
rorb
push
out
jnp
imul
cwtl
add
js
arpl
fs
addr16
jb
xchg
add
fldenv
lds
popa
dec
xchg
mov
inc
xlat
push
jmp
and
out
in
jl
push
lock
lret
pop
roll
adc
rcrl
jl
pop
in
push
sti
inc
xchg
push
xor
inc
frstor
adc
cmp
stos
imul
fdivs
push
iret
loop
mov
add
int
ficomps
mov
xorl
aas
int3
aam
jo
pop
jl
test
int
ja
out
push
sbb
push
sahf
push
pop
or
sbb
jecxz
and
ja
dec
enter
jge
xor
movsb
jle
ret
repnz
dec
pop
cmpl
and
mov
pushf
xor
sub
xchg
std
pop
jg
or
mov
jo
sub
arpl
push
ds
add
cld
cmp
out
sahf
imull
jg
xchg
daa
loop
mov
shlb
add
push
cmp
pop
fisubl
in
mov
mov
stos
arpl
or
test
pop
sbb
jecxz
sbb
in
xchg
cli
insl
mov
push
cltd
xchg
jns
xchg
aam
clc
outsb
ja
or
xchg
int
adcl
dec
das
out
imul
pop
imul
rorb
test
out
fisubl
imul
repnz
sbb
frstor
pop
jl
xchg
cmpsl
int3
adc
icebp
sbbb
movsb
adc
mov
dec
inc
into
hlt
jno
movsb
cmpsl
jl
jnp
sbb
pop
sub
or
stos
sti
ljmp
inc
adc
or
inc
fbld
mov
aam
jl
cmpsb
xchg
push
xor
pushf
shll
sbb
cmp
lods
mov
stc
push
pop
sub
jnp
cli
movsl
subb
out
xrelease
bnd
rorl
aas
push
and
in
sbb
pusha
test
push
adc
add
xor
call
pop
das
jnp
or
mulb
mov
rcrl
mov
pop
ret
aaa
push
cmp
and
cmpsb
xchg
fisttps
xchg
or
sbb
popa
add
and
pusha
dec
lret
adc
sub
jmp
out
or
repz
jne
and
aas
aam
ret
daa
aaa
adc
ret
mov
mov
mov
jmp
cmp
fdivrl
test
notl
push
sub
ljmp
push
pop
xlat
movsb
sbbb
int
add
sbb
cwtl
stc
add
repz
loopne
movsb
into
xor
cltd
iret
std
sbb
imul
mov
fcmovnbe
push
or
sub
test
decb
daa
cltd
mov
cmp
mov
push
pop
add
mov
ret
es
cmpl
inc
in
arpl
testb
aas
jmp
cmpsl
mov
rolb
add
clc
pop
sbb
enter
outsb
xorb
lahf
cmp
int3
cld
or
movsb
pusha
mov
adc
cmp
in
arpl
subb
outsb
lret
lcall
mov
adc
lods
pop
stos
cltd
cmp
push
out
cmp
out
lret
pop
xchg
mov
enter
pop
repz
enter
clc
xchg
xlat
jae
sbb
dec
adc
movsb
or
mov
and
xor
push
lahf
mov
mov
cs
js
inc
push
mov
sbb
ss
pop
or
and
sub
jne
repz
sub
cmpsl
push
pop
or
sbb
sbb
es
vcvttss2si
int
pop
addr16
int3
lret
mov
cli
mov
pop
pop
or
cmpsb
ret
scas
loopne
js
notb
mov
call
pop
cltd
xchg
popl
cmp
or
lods
jnp
lahf
lret
jecxz
inc
xchg
cmp
jne
bswap
mov
jbe
popf
cltd
sbb
push
shll
cmpb
fldl2e
mov
mov
icebp
pop
jbe
mov
mov
sub
push
add
outsb
sar
scas
mov
daa
les
add
sub
stos
jecxz
sub
xchg
mov
push
icebp
movsb
add
push
mov
xchg
aaa
mov
js
cltd
shl
and
outsl
jle
insb
push
cmp
pop
imul
push
push
jb
mov
shrl
shlb
add
sub
jns
or
roll
xchg
dec
ret
sub
movsl
xlat
jmp
mov
je
iret
xor
in
shll
les
rol
push
dec
push
pop
mov
fnsave
pop
clc
enter
icebp
pusha
notl
push
mov
stos
inc
aaa
sbb
cmpb
sbb
mov
cmp
stos
sbb
fisttpl
stc
xchg
mov
fcompl
push
mov
or
xor
mov
aad
sub
dec
std
xchg
pop
cld
pop
mov
pop
sub
dec
fstpl
push
sub
sbb
pushf
imul
sbb
sbb
mov
inc
cmc
imul
imull
xor
and
xor
mov
cmc
inc
popa
test
pop
jae
cmp
sahf
pop
enter
arpl
jl
movb
cmc
aaa
fistpl
xlat
icebp
or
arpl
neg
arpl
xchg
cwtl
jno
icebp
mov
fisubrs
andb
les
ja
cmp
lahf
out
int
imull
jge
and
mov
sub
xchg
les
mov
inc
adc
scas
lods
fcomps
sbb
push
or
push
fwait
xchg
pop
jle
dec
sub
movsb
xchg
mov
fisttps
repz
fs
xor
mov
fidivrs
mov
sti
iret
xchg
mov
ficoml
int
out
cmc
mov
xchg
dec
subl
iret
int
jne
aaa
das
mov
int3
daa
jge
lea
scas
mov
and
xchg
shrl
and
mov
inc
mov
xchg
add
mov
adc
pusha
inc
icebp
cmp
cwtl
test
pop
jl
mov
je
pop
sbb
sbb
and
cmpsl
loope
and
aam
inc
dec
andb
sbb
sbb
jmp
lds
lods
inc
movsl
mov
out
or
andb
fcoms
js
inc
xchg
call
add
push
ja
cmp
iret
mov
xchg
std
inc
callw
jns
inc
push
dec
stos
cltd
mov
in
aad
lea
or
fimull
adc
and
push
mov
cmc
jp
push
cmp
dec
outsl
adc
icebp
adc
inc
insb
lods
push
xor
add
push
pop
xchg
adc
mov
lret
fcoms
add
sbb
inc
jne
or
test
pop
lret
inc
dec
fstps
scas
cmc
sarl
rcrl
cltd
aas
ljmp
xor
scas
jp
mov
rol
adc
into
adc
subl
imul
cmp
sbb
add
cmp
inc
into
lods
jecxz
mov
push
mov
push
gs
adcl
push
out
imul
cmp
cmp
fildl
add
jo
inc
stc
ret
adc
insl
pop
xor
dec
sub
cltd
cmp
sarl
lret
repz
mov
sub
dec
add
enter
sbb
jecxz
lahf
push
sbb
hlt
and
mov
push
and
pop
adc
dec
hlt
push
enter
push
fwait
sahf
int3
mov
imul
push
sub
movsl
xor
aad
and
mov
jbe
in
arpl
jmp
sti
xor
sub
inc
sbb
bound
jge
xor
cltd
sbb
mov
mov
cld
pushf
in
lret
ja
lret
push
inc
fyl2xp1
inc
cs
rolb
movsb
push
mov
mov
jl
mov
xchg
stc
mov
ret
dec
dec
jle
xor
popl
and
mov
leave
sub
xchg
rcrb
jecxz
push
cld
repnz
repz
in
push
lock
addl
or
cmpsb
xor
push
add
cmpsl
jb
inc
popa
inc
rcll
bound
cmpsb
stc
lds
jns
test
sarl
push
iret
inc
jns
out
inc
stos
xchg
pop
gs
shl
psubq
mov
push
mov
jmp
xor
pop
xor
mov
push
mov
gs
pop
or
js
sub
xchg
xchg
pop
pop
mov
cmp
cld
jb
movsl
push
std
and
mov
lcall
add
mov
pop
mov
dec
jo
sbb
bound
pop
cmp
decl
pushf
jns
or
leave
xor
cltd
mov
aad
loope
mov
push
js
cmp
call
daa
jo
pusha
mov
pop
xor
dec
nop
xor
int
mov
mov
movsb
sti
push
push
cmpsb
adc
sbb
stos
sub
sub
lcall
mov
mov
into
mov
mov
lret
fistl
sbb
insl
dec
inc
jns
adc
xor
sti
mov
cmp
sarb
mov
push
mov
push
rcl
mov
dec
jecxz
or
pop
mov
xchg
ja
stos
inc
ror
jns
xor
mov
std
pop
xor
outsb
xchg
adc
cmpsb
inc
scas
push
icebp
xchg
nop
rcrl
push
sarb
insb
jp
lds
jns
push
add
xor
mov
or
inc
test
scas
in
into
xor
sbb
jmp
test
cmp
jle
xchg
daa
push
push
cmpsb
mov
xor
sub
jnp
push
inc
push
lcall
push
and
adc
add
lahf
mov
mov
sbb
or
test
push
pop
repnz
insl
pop
in
xor
and
lahf
pushf
jg
cmpl
dec
rcrb
int
jmp
cmc
das
sbb
das
cmpl
negl
mov
pop
and
ret
cmpsb
jge
sub
add
sar
ficomps
rclb
idivl
loop
mov
or
out
cmc
push
ss
call
enter
mov
sbb
adc
cmp
inc
sub
rcrb
mov
hlt
scas
cmpsl
jle
fcoml
fcoml
andl
push
jns
mov
dec
add
sbb
sub
pop
into
les
sarl
and
insl
mov
stos
cli
loope
addr16
ficompl
mov
and
xchg
mov
xchg
sbb
rcrb
je
sub
popa
or
popf
hlt
pop
or
or
lcall
out
inc
mov
mov
insl
mov
add
mov
push
iret
jp
push
pop
out
les
adc
mov
dec
dec
jge
xor
out
mov
jno
or
or
sub
inc
pusha
fisubrl
in
cmc
xchg
lds
mov
aam
js
dec
ja
cmp
inc
leave
popa
mov
out
iret
jbe
cmp
fldcw
mov
mov
inc
ret
mov
lret
test
sbb
push
xchg
movsb
push
ss
inc
int3
iret
mov
sbb
sub
fcompl
imul
xor
repnz
test
ficoms
pop
or
xchg
shll
lahf
outsl
jg
add
addb
mov
mov
inc
push
in
pop
jns
xor
push
xor
lds
loopne
rcr
push
ljmp
fisttpl
dec
out
bound
das
popf
inc
jmp
mov
mov
push
or
push
xchg
add
push
xchg
fimull
xchg
fdivrl
push
out
inc
pop
test
loop
popa
test
or
call
cmp
cmp
inc
xchg
and
cld
mov
aas
call
outsl
rolb
aam
pop
jecxz
mov
fiaddl
cmpsb
sbb
dec
popf
leave
add
test
pop
addr16
jmp
xlat
sub
cmp
movsb
pushf
dec
cmp
aas
adc
test
orb
popf
adc
ss
dec
dec
sarl
jl
or
fisttpll
repz
fisttpll
pop
sub
fcmovu
push
add
pop
iret
pop
in
pusha
mov
ret
data16
lods
cld
inc
mov
add
aas
ja
pop
xchg
add
fcoml
pop
and
and
or
int
scas
xchg
rcll
in
test
loop
jecxz
les
cli
lret
stos
cwtl
in
jbe
jecxz
push
add
and
inc
int3
xor
mov
out
mov
xchg
bound
aad
jae
sbbl
fs
nop
adc
lcall
push
add
adc
movsb
adc
xor
sbb
inc
jne
cwtl
mov
mov
test
cmp
xchg
arpl
push
add
insl
inc
iret
push
sarl
mov
stos
cmp
cld
mov
ret
push
enter
dec
test
cmp
loope
pop
mov
mov
cwtl
lods
sbb
xor
xorl
jge
mov
fcmove
and
es
aas
fdivr
movsl
scas
jo
test
movb
scas
iret
or
stc
pop
push
push
mov
xor
lret
fcomps
adc
pop
cli
inc
test
pop
enter
sub
sti
sub
adc
xchg
push
loope
je
jo
int
fsubrl
movl
jp
lcall
stos
out
enter
mov
mov
xchg
ror
lods
mov
mov
xor
jns
xlat
out
imul
mov
jno
pushf
fiadds
loopne
mov
sub
es
mov
lock
push
inc
mov
and
lret
xchg
rorb
mov
and
cli
pop
pop
cmpl
sbb
push
arpl
fsubrs
xorb
lea
aad
aaa
jecxz
sbb
insb
insl
enter
jns,pt
pop
jne
outsb
add
add
sbb
ds
pop
push
outsb
icebp
fildl
add
dec
lret
xor
push
movsl
xchg
mulb
inc
cmp
xchg
bswap
inc
mov
nop
xor
push
imul
lcall
inc
cltd
lahf
or
hlt
mov
inc
mov
mov
mov
mov
stos
int3
fwait
mov
cmp
cmp
inc
ja
push
int
sti
repz
push
jno
sub
mov
repz
je
push
adc
mov
or
dec
arpl
mov
sub
inc
jne
daa
insl
sub
call
test
xchg
xlat
call
sbb
test
inc
mov
cs
fnstsw
dec
mov
jecxz
push
mov
xlat
out
pop
dec
shl
cmp
dec
jmp
xor
push
adc
mov
sub
and
sbb
ss
adcb
cmp
imul
mov
cmp
ret
ss
push
add
dec
or
jecxz
outsb
lods
fmul
inc
je
enter
fnstcw
adc
jns
xchg
ret
sbb
push
inc
aaa
sub
movsl
jae
scas
push
mov
mov
add
enter
and
ret
mov
lret
imul
dec
fwait
cmp
mov
dec
cmpsb
test
xlat
mov
dec
clc
mov
inc
repnz
in
push
dec
adc
add
idivb
cmp
in
cld
xor
into
adc
sbb
adc
pavgw
jns
mov
cmp
add
mov
jmp
int3
add
sbb
lea
mov
pop
push
ficomps
daa
sub
xor
jle
lock
arpl
xlat
adc
sub
arpl
shl
out
imul
dec
mov
rcl
in
test
cmp
mov
cmp
cmpb
daa
sbb
cmp
or
ss
cmp
popa
jle
int3
cmp
aas
pop
pop
ljmp
fsts
sub
mov
negb
out
insb
das
cmp
mov
push
jp
add
in
lods
adc
mov
mov
scas
adc
outsb
jecxz,pt
dec
adc
mov
pushf
out
dec
dec
lahf
mov
scas
hlt
test
aam
and
ficompl
adc
sbb
in
mov
inc
stc
insl
fwait
xchg
add
enter
inc
xor
mov
nop
xchg
add
sbb
iret
jge
mov
inc
loopne
push
aas
jp
mov
jl
cmp
bnd
popa
pop
test
in
dec
mov
lret
testb
xor
and
out
cltd
mov
enter
pop
xor
lods
adc
enter
mov
jmp
lods
dec
repnz
push
ret
push
pop
pop
push
push
mov
pop
into
mov
xor
test
jns
inc
mov
pushf
fildl
out
jnp
add
stos
in
shll
addb
push
mov
movsb
fs
mov
addr16
das
insb
sbb
jae
lods
clc
mov
enter
jne
ja
fidivs
jecxz
inc
push
ss
je
loopne
mov
roll
jns
jae
lcall
xlat
jmp
out
and
ljmp
and
mov
roll
xor
fldz
subl
xor
xor
popa
jmp
lock
sub
cmp
call
jne
inc
mov
lods
cmp
inc
inc
cmp
insb
fs
mov
push
js
mov
and
or
mov
sub
mov
mov
in
inc
lock
shll
mov
arpl
sahf
adc
sbb
mov
mov
mov
pop
clc
pop
add
fcoml
lock
std
fdiv
sub
inc
add
aaa
sarb
jae
data16
shl
rorl
loop
sbb
dec
rol
insl
lea
filds
in
fs
out
inc
cmp
popa
push
inc
jmp
and
xor
gs
jno
lret
pop
and
emms
cli
pusha
fs
pop
mov
shrb
fdivr
fs
dec
add
push
pop
mov
mov
loope
sub
xchg
into
je
fwait
test
scas
divb
cmc
enter
adc
cmpl
pop
aad
ret
inc
aad
add
mov
dec
xchg
cmpl
mov
jl
nop
mov
push
push
call
call
mov
gs
pop
pop
ret
mov
jno
dec
sbb
rclb
jp
hlt
lock
pushf
or
int3
mov
sub
push
sbb
sti
cmpsb
hlt
popa
add
push
xor
stc
negb
and
roll
xor
clc
adc
and
xor
shlb
loopne
std
fwait
test
mov
mov
xor
fs
dec
mov
pop
push
leave
sti
sbb
mov
pop
das
cli
je
mov
adc
mov
iret
mov
mov
and
xor
mov
scas
fnstcw
xchg
mov
test
fimull
mov
xorb
mov
fwait
jl
and
jo
mov
adc
addr16
notb
mov
test
lea
sub
mov
icebp
pop
ljmp
add
daa
xchg
xor
push
imul
xor
pushf
aas
insb
into
repnz
cmp
mov
test
cmp
ds
addl
mov
cltd
push
xor
dec
pop
test
ficoms
sub
sub
movsl
pop
fists
push
rolb
outsb
add
or
mov
scas
cmp
in
adc
outsl
xchg
xor
pop
adc
cmpsl
clc
in
dec
pop
leave
arpl
and
xor
cld
add
cmp
xchg
sbb
rorb
add
add
adc
test
and
out
jl
ljmp
repz
and
shl
nop
cmp
pop
inc
ret
cwtl
lahf
lret
stos
lahf
and
lods
pop
rcl
andb
sbb
out
pop
add
xor
and
add
xchg
stos
mov
xchg
mov
fs
and
lds
iret
es
les
repz
test
mov
cmp
jecxz
fistps
or
adc
jbe
add
pop
add
push
addr16
addr16
cmp
jae
in
pusha
xchg
lds
scas
xor
pop
shrl
mov
inc
ret
notl
ret
shrb
push
and
mov
fcoms
and
fsubl
adc
xchg
mov
xlat
pop
dec
mov
sarb
mov
rorl
rolb
push
les
out
lcall
dec
shl
rcrb
mov
mov
dec
push
addl
lock
add
mov
jp
or
arpl
dec
mov
dec
popf
sub
outsl
scas
fdivp
mov
xchg
dec
fucom
lcall
sbb
scas
push
test
repz
in
push
cmpsl
xchg
jae
or
jmp
dec
push
repnz
adc
mov
add
sub
dec
pop
les
addr16
imul
lea
add
pusha
adc
push
call
into
ss
add
add
dec
repnz
gs
xchg
mov
jecxz
push
sub
and
clc
outsl
xchg
movsl
fs
fsts
idivl
out
sbbb
cld
mov
mov
sub
add
negl
mov
test
imul
arpl
mov
sbb
and
arpl
stos
mov
scas
or
addr16
int
mov
les
cwtl
xchg
enter
test
jmp
inc
das
jge
or
jne
mov
stos
stos
mov
movsl
movsb
testb
popf
lret
icebp
enter
gs
and
call
divb
pop
lods
data16
pop
lods
dec
dec
inc
mov
test
xchg
popf
cmp
lds
push
push
add
shlb
fnsave
sub
out
sbb
pusha
xchg
stos
push
fcomps
xchg
mov
and
fcoml
repz
jmp
pop
in
scas
arpl
pop
gs
mov
xchg
jo
inc
fists
movsl
jne
adc
cmovg
mov
imul
std
jecxz
inc
mov
push
ds
insb
lcall
push
xchg
mov
xor
std
out
jns
xor
stos
repnz
lods
sti
xchg
push
add
in
bound
mov
dec
cmpsb
adc
and
sbb
jecxz
cmp
hlt
das
push
sub
mov
xchg
divl
adc
push
jl
cmpl
shrb
jg
dec
pop
sub
cmp
jb
pop
add
cmpsb
mov
cwtl
mov
xor
test
dec
test
jns
sub
jns
or
iret
mov
test
xor
or
test
inc
inc
fsubrs
call
jge
stc
sub
rclb
push
ret
lret
leave
mov
xor
test
inc
shll
mov
ljmp
fcompl
mov
adc
cmp
xchg
cmpsb
bound
icebp
mov
dec
or
nop
lock
addr16
daa
lret
sbb
sub
rcrl
dec
rclb
sti
xchg
fsubrs
sub
cmpl
loop
movsb
test
outsb
test
jg
inc
sti
cmpsl
mov
mov
add
leave
inc
lahf
mov
mov
xchg
call
sbb
jno
leave
adc
mov
mov
mov
out
add
add
scas
mov
iret
jb
dec
testl
fs
push
outsb
incl
in
push
xchg
mov
sub
mov
repnz
aas
jae
gs
fwait
pop
dec
lds
outsb
mov
xchg
and
daa
in
jl
rcrl
and
push
pop
xchg
jl
sub
xchg
pop
in
cmp
fs
fadds
jb
in
fidivl
out
jbe
pop
cmpsb
jge
add
mov
dec
in
fldenv
mov
les
add
mov
jle
stos
ljmp
icebp
adcb
push
setge
imull
hlt
test
or
jbe
lock
ficoml
cmpb
sti
jno
mov
shrl
sbb
push
fistpl
icebp
loope
cmp
push
pop
mov
fdivs
insb
movsb
repnz
addr16
sbb
mov
in
shll
push
fists
jae
sub
xchg
rcl
mov
mov
imul
fcmovu
lret
icebp
imul
mov
shrl
ja
xchg
add
sub
mov
xor
lods
das
lods
sti
mov
adc
test
or
cli
sbb
inc
mov
mov
mov
jmp
pop
cmpsl
repnz
add
jnp
cli
cs
insb
add
dec
mov
ljmp
loopne
fcoms
dec
sub
popf
push
inc
push
es
mov
scas
loop
enter
sbbl
in
outsl
cmp
inc
jns
sub
hlt
jg
cmp
sahf
test
popf
push
push
call
aaa
enter
dec
dec
xchg
xchg
mov
cmp
jl
popl
jae
jbe
loop
loop
out
adc
pusha
cltd
cmp
insb
jp
or
push
aaa
pop
dec
idivb
imul
outsl
push
fidivrs
imul
pop
iret
and
mov
and
pop
mov
pop
lods
jecxz
add
cmpsb
iret
test
ficomps
inc
pop
mov
mov
lock
sub
sub
cmp
jecxz
inc
xchg
cmpsb
js
cwtl
aaa
mov
inc
pop
les
fists
push
sbb
shll
push
idivb
and
loop
cmp
rcrl
cmpsb
mov
fists
cmp
data16
mov
mov
xor
jp
mov
mov
lock
pop
sti
cltd
inc
je
or
inc
lret
jge
cmp
xor
repz
cmp
pop
ret
test
dec
mov
cld
xor
xor
mov
sbb
pop
pop
outsb
jge
and
ret
aaa
inc
inc
xchg
pop
rol
pop
pop
ret
out
insl
aaa
sub
fsubp
push
mov
or
adc
ss
mov
loopne
sahf
mov
xchg
xor
imul
je
and
fldl
sub
push
lds
fwait
cmc
or
or
pop
cmpsb
movsl
aaa
jle
add
adc
insl
and
ds
sbb
push
cmc
add
add
add
adc
mov
out
jecxz
clc
push
int3
jp
test
mov
aaa
lods
test
stos
add
xor
sbb
idivb
pop
cld
bound
out
inc
int
movsb
dec
in
cmc
outsb
add
je
pop
out
les
push
shlb
hlt
cmp
out
js
inc
ficomps
add
mov
mov
fstpt
mov
lahf
movsb
mov
add
scas
adc
js
xchg
xchg
scas
data16
add
gs
aam
jmp
mov
xor
es
js
inc
dec
outsb
loop
xor
popf
dec
and
adc
or
jecxz
push
mov
pop
mov
js
cmp
mov
mov
and
cmp
jp
in
scas
lea
rcll
pop
jl
fs
xchg
mov
lcall
sahf
jmp
cs
or
popa
mov
imul
arpl
enter
iret
inc
out
rol
loop
push
popa
sbbb
fnsave
sub
push
mov
and
sti
insl
mov
inc
add
mov
pop
push
xchg
test
jp
xor
out
fadds
adc
add
or
jbe
pop
std
lock
adc
mov
and
lahf
pushf
iret
inc
aaa
jae
jle
ret
add
xchg
int
dec
sub
sbb
dec
test
or
inc
mov
inc
rorl
or
repnz
mov
test
adc
int3
inc
ficoml
leave
inc
and
icebp
in
aaa
lods
sbb
mov
inc
sti
cmp
pop
mov
rclb
jb
pop
mov
ja
shl
lds
adc
sub
aas
ljmp
filds
sahf
rclb
fs
fsubp
jecxz
imul
hlt
xor
aas
inc
dec
lea
call
pop
pop
xchg
leave
cmp
mov
add
push
jge,pn
mov
xor
sub
jns
push
insl
sbb
xchg
mov
mov
mov
pop
push
push
stos
mov
and
cmp
jmp
arpl
sbb
out
inc
xor
adc
pop
add
push
shll
pop
and
jg
roll
test
dec
inc
mov
es
mov
mov
jmp
mov
inc
popa
pushf
sbb
mov
rolb
inc
mov
adc
jnp
lea
test
pop
aaa
push
xchg
cmp
addb
add
addr16
js
inc
adc
jns
xchg
test
fdivs
rclb
sub
ja
test
mov
call
orl
and
sbb
fcomip
and
sub
adc
and
in
dec
stos
adcl
and
xor
inc
out
mov
pusha
fs
outsb
dec
or
hlt
dec
xor
mov
mov
lahf
je
sbb
mov
ja
mulb
leave
out
and
or
add
push
hlt
cmp
ja
jo
rcl
fistps
mov
jecxz
cltd
mov
push
push
push
dec
mov
lcall
and
jno
inc
dec
and
mov
lock
ret
mov
hlt
fsubs
xor
dec
inc
and
push
arpl
aaa
mov
scas
cltd
nop
gs
aad
mov
push
ret
dec
imul
xchg
xchg
xor
pop
or
jne
sbb
sub
push
xchg
mov
aad
ret
pop
push
icebp
inc
data16
jp
pop
ret
and
mov
dec
shlb
xor
xor
sbb
add
je
cmp
out
xor
nop
add
or
sbb
lea
test
adc
mov
filds
mov
add
cmp
mov
xchg
or
mov
mov
cmp
imul
add
movsl
mov
sti
fsubs
scas
add
test
bound
pop
jle
sub
scas
sbb
mov
jecxz
loopne
wrmsr
hlt
xchg
mov
push
insl
add
gs
into
ds
das
jmp
xchg
push
loopne
add
xchg
cmpsl
imul
fadds
xchg
xchg
sbb
add
xor
popf
scas
or
je
clc
sub
lods
adc
or
stos
xor
add
xor
test
outsb
loop
clc
cmc
or
and
stos
jecxz
jbe
pop
jns
ret
pop
push
imul
sbb
sbb
lods
inc
fldl
dec
mov
movsb
fstps
push
or
addl
int
cmc
sub
add
aam
mov
nop
pop
std
sbb
scas
sbb
mov
cltd
add
repnz
xor
test
out
test
pop
add
lcall
inc
stos
lea
loop
mov
shlb
cmpsb
inc
clc
gs
add
mov
mov
mov
mov
jmp
or
xor
sub
stos
or
fistps
jle
sahf
rcll
pop
int3
inc
aad
and
in
xchg
mov
sub
sub
ljmp
mov
leave
dec
cltd
dec
inc
dec
dec
fstpt
out
push
in
lahf
push
jmp
dec
mov
ja
lret
jae
lret
inc
dec
add
aaa
or
pop
cwtl
lcall
xchg
lea
decl
lret
out
pop
or
push
add
dec
jmp
adc
enter
xor
insl
xchg
add
das
pop
imul
jmp
imul
inc
inc
sti
mov
push
fbld
inc
mov
xchg
cmpsb
push
push
dec
sub
or
fstpt
clc
ja
iret
inc
lret
inc
sub
cmp
fsubrl
les
scas
andl
dec
mov
jl
fbstp
cltd
fwait
add
jp
xlat
xchg
fs
outsb
and
test
dec
imul
sub
push
fs
sub
xchg
mov
sub
add
roll
dec
sbb
inc
test
and
es
mov
negb
in
int
jo
fwait
cwtl
push
pop
xchg
lahf
enter
lock
xor
mov
push
mov
stc
cltd
pop
hlt
jle
dec
sbb
and
inc
loopne
mov
fstps
mov
push
and
jg
into
aas
pop
xorl
add
sbb
loopne
xor
test
push
mov
push
into
add
sbb
lret
icebp
pop
insb
jae
xchg
pop
push
stos
jmp
cmp
jmp
jmp
rcll
cmpsb
mov
mov
inc
dec
mov
and
xor
gs
mov
dec
int3
jecxz
iret
xchg
mov
add
test
fldl
dec
mov
xchg
pop
pop
flds
insl
push
inc
dec
jmp
xor
dec
jmp
int3
sub
out
mov
test
mov
jne
int3
sti
scas
cmp
cmp
cmpsb
inc
inc
in
mov
cmp
xchg
movsb
push
out
jle
add
mov
sbb
enter
aam
xor
stos
dec
jg
mov
sbb
hlt
xchg
arpl
pop
addl
aaa
dec
adc
jge
dec
popf
cs
mov
pop
enter
lds
add
cmp
sub
lcall
fnstcw
cs
imul
arpl
adc
dec
jl
jbe
adc
mov
sahf
cwtl
pop
mov
and
ret
mov
arpl
ljmp
xchg
into
pop
jns
add
shlb
ret
sbb
add
dec
test
test
inc
repz
mov
jno
and
jle
and
sub
lea
cmp
out
jb
movsb
and
cli
add
in
mov
and
stos
and
and
movsw
stc
repz
cmpsb
mov
jb
ds
push
insl
loope
sarl
daa
rcr
fstpl
mov
inc
es
lcall
add
push
loop
mov
fistl
int3
scas
pop
fistl
xor
push
pop
addr16
sbb
cmpsb
mov
jb
divb
int3
in
mov
lock
push
xor
ljmp
aad
inc
in
xchg
sub
mov
mov
out
cmpb
cmp
mov
fldcw
fbld
push
pushf
call
sarb
sub
addr16
fistpl
sub
dec
arpl
push
jmp
out
int
jle
cwtl
pop
mov
xchg
aam
notl
mov
jae
jp
stc
fidivs
fnstsw
scas
mov
mov
jmp
out
and
pop
add
mov
dec
pop
mov
push
xor
xchg
aas
mov
mov
sub
leave
hlt
fstp
push
repz
push
nop
dec
xor
jmp
fcoms
into
lcall
cmp
testl
mov
fisttpll
out
xor
fdivrs
pop
sub
cmp
bound
inc
lahf
jle
adcl
stc
mov
sub
xchg
ds
popa
loop
xor
scas
pop
mov
out
inc
ficoml
cmp
psubd
sbb
push
sbb
xor
ret
shl
or
dec
outsb
push
cmpsl
sub
and
cs
mov
xor
sbb
xchg
aaa
ss
mov
cmpb
xor
or
in
add
das
enter
adcb
xchg
int3
dec
push
cmc
lret
or
loope
and
stc
push
push
add
pop
push
push
add
inc
push
js
stos
pusha
nop
clc
or
mov
cmp
int3
popf
adc
mov
jb
add
xor
jns
dec
hlt
shll
fwait
xor
sbb
push
adc
mov
test
jae
add
fistpl
adc
les
stos
jbe
add
xor
shl
push
lret
sbb
mov
xchg
mov
aam
cmp
lds
or
xor
jns
push
or
dec
or
pop
insl
xor
mov
in
add
loop
je
cltd
jecxz
cli
inc
sbb
fwait
or
push
sti
mov
jbe
push
loop
popf
adc
xchg
push
es
push
lods
xor
inc
fs
shrl
dec
push
inc
cmpl
mov
xchg
and
xor
or
mov
outsb
push
das
leave
in
push
rcll
gs
sahf
mov
in
aam
inc
mov
xor
cmpsl
jmp
mov
mov
or
jge
ja
fdivl
jge
insb
outsb
bound
push
lahf
inc
or
shll
popf
inc
and
daa
xlat
pop
mov
jae
fwait
push
mov
popa
and
js
mov
mov
loope
out
xchg
pop
stc
inc
mov
fcoml
add
test
mov
jle
pop
jo
pop
out
pusha
movsb
mov
fsubl
pop
mov
orl
add
xor
xchg
mul
push
mov
push
out
cmp
mov
mov
sbb
jno
jmp
cmp
shlb
dec
xchg
add
fisubl
mov
cmp
sbb
lret
std
nop
push
mov
in
xchg
loope
rorb
aaa
pushf
dec
jbe
out
sub
dec
pop
add
inc
lcall
and
sub
lea
jle
sbb
ja
jne
xor
lods
in
in
bound
loop
xlat
arpl
and
sahf
push
sub
loop
sar
jmp
sbb
sub
imul
popf
ja
sbb
movsb
and
lcall
add
pushf
mov
mov
ljmp
inc
push
adc
scas
dec
mov
dec
testb
cmp
daa
sbb
mov
lret
shr
test
push
aas
test
mov
cmp
leave
inc
jbe
cmp
fildl
loop
lods
insb
cwtl
test
xor
ficomps
jo
push
repnz
inc
sub
pop
sub
inc
mov
dec
andl
cmp
les
mov
outsb
inc
pop
pop
adc
jae
xorb
jle
sub
pop
mov
inc
into
inc
pop
call
movsb
mov
pushf
ja
jno
pop
add
fstps
stc
xor
ror
cmp
jb
stos
adc
push
xchg
mov
divb
in
cmp
mov
or
arpl
add
mov
jo
test
mov
add
cmp
dec
cmpb
mov
jmp
int3
xor
mov
addr16
push
push
fidivrs
push
jmp
lods
call
jmp
sbb
cmp
xor
and
int3
fs
das
pop
mov
lods
pusha
adc
push
decb
push
imul
xor
mov
mov
lods
pop
sub
add
inc
lds
sub
lea
jp
pushf
scas
lock
aam
nop
and
jp
mov
mov
lds
es
mov
cmp
lret
sbb
jno
insl
int3
mov
push
push
sub
adcl
or
js
fs
mov
jae
dec
sarb
dec
inc
repz
push
and
dec
cld
or
push
add
lods
cltd
mov
sub
pop
and
xlat
push
pop
es
push
icebp
imul
andb
xchg
pushf
adc
test
pop
cmpsl
sub
inc
test
ret
out
out
test
aad
ret
sbb
add
aam
aaa
ljmp
cmp
test
inc
les
aad
adc
cmp
and
vucomiss
fisubrs
jle
mov
in
xchg
gs
push
mov
jb
push
or
dec
jmp
out
dec
adc
cli
jnp
push
inc
daa
pop
jle
adc
cs
push
and
or
ss
inc
push
pop
test
adc
insl
ret
jbe
or
loop
and
xchg
adc
jl
cld
mov
mov
fldl
xchg
xchg
fxch
mov
filds
adc
inc
xchg
loop
sbb
lahf
sbb
ret
jl
pop
cltd
out
gs
lds
pop
int
push
scas
rorl
stos
xor
inc
xchg
sub
jae
mov
pop
pushf
dec
pop
cmp
jmp
push
lock
push
stc
repnz
fildll
sbb
lea
push
push
push
nop
pop
lea
test
xor
popf
sbb
fmul
dec
cld
fstpt
xchg
fists
cmpsl
iret
push
xchg
fwait
push
or
das
xchg
sub
inc
ljmp
js
sbb
xchg
jecxz
mov
int
lret
stos
xor
clc
dec
aam
inc
and
in
ret
cmp
sbb
imul
aaa
dec
mov
cmp
and
hlt
popf
jns
ss
or
in
pop
repnz
lcall
mov
pop
cmp
xor
testb
mov
pop
and
adc
cmc
ljmp
pop
jne
or
lods
add
jo
cmp
sbb
or
dec
cmp
lahf
aaa
mov
scas
mov
mov
jb
and
adc
pushf
mov
fs
jb
jnp
fisubrs
mov
mov
data16
push
sbb
jae
dec
mov
jae
push
push
ret
out
inc
mov
je
rcr
fdivr
xchg
mov
add
dec
inc
test
push
xor
ret
jle
add
inc
mov
aad
mov
movsl
or
into
add
es
xchg
idiv
mov
rcrl
and
dec
mov
mull
xorl
inc
loop
pushf
hlt
mov
jecxz
add
loope
clflush
adc
imul
imul
mov
movsb
jbe
add
or
push
rorb
sub
mov
ljmp
out
or
mov
adc
mov
sbb
push
push
mov
mov
int3
cltd
dec
pop
iret
and
dec
add
in
push
jno
leave
cmpl
cmpsl
dec
and
hlt
and
xor
test
push
cmpb
and
je
setb
loopne
fimuls
jmp
ja
jle
cmpsb
leave
xchg
std
or
out
iret
jge
popa
rol
xchg
int
jno
pop
adc
repz
mov
pushf
push
divl
ljmp
and
ja
jbe
jp
cmpsb
lods
sub
lea
aas
mov
rcll
adc
mov
mov
cmp
cmp
sarl
arpl
mov
lahf
sub
test
sub
inc
and
sbb
push
scas
fwait
scas
xorl
iret
test
mov
outsl
dec
inc
sub
inc
xlat
imul
in
cmpsl
ret
aad
cltd
sbb
dec
or
push
cwtl
dec
inc
pop
sbb
lret
mov
xchg
add
push
add
xchg
ja
xchg
dec
repz
cmp
dec
fsubrl
pop
fwait
dec
inc
sarb
unpckhps
mov
dec
mov
rcrl
mov
mov
movsl
mov
outsl
lea
cmp
int
jmp
shll
jp
sub
jo
fbld
out
inc
shlb
lea
jp
inc
pop
sub
rolb
mov
adc
andl
mov
mov
xor
jno
fdiv
iret
icebp
int
ret
push
xorb
mov
add
adc
inc
jl
cmp
aam
inc
out
cli
or
bound
adc
jl
daa
shll
mov
imul
dec
mov
fisttps
sub
sti
adc
jge
loop
outsb
into
fnstsw
pop
test
pop
mov
divl
mov
jno
insl
repnz
loop
xor
inc
push
cld
jmp
adc
imul
sbb
insl
mov
inc
inc
dec
mov
push
sbb
or
orb
lods
cmpsl
mov
inc
and
inc
lret
sarb
shlb
lahf
das
stos
mov
iret
cmp
or
into
out
repnz
xor
mov
lods
popf
xchg
mov
in
cli
fidivl
mov
push
pop
cmc
dec
iret
sbb
sub
pop
push
out
sbb
xchg
mov
sbb
fdivs
mov
jo
mov
xlat
adc
nop
movsb
pop
mov
dec
ret
stos
xchg
jb
fcompl
outsl
jno
mov
push
xchg
repnz
pop
jnp
enter
cmpl
in
test
les
xchg
xchg
pusha
outsl
gs
mov
arpl
push
jns
arpl
mov
adc
out
cmpsl
push
jbe
out
jne
movsl
xchg
lods
call
mov
loopne
jne
adc
pop
adc
fists
mov
stos
movsb
pop
loop
sarl
shlb
fnstsw
add
push
out
lahf
cmp
xchg
lds
jne
jg
fistpll
fstpt
lods
js
and
cmp
lods
mov
sbb
jb
inc
das
rorb
cmpsl
test
adc
inc
cmp
jle
lods
jmp
cmpsb
pop
xchg
repnz
pop
mov
mov
test
mov
outsl
push
and
fisubrl
jbe
or
and
clc
inc
push
xorw
mov
idiv
leave
fstps
push
lods
gs
xor
lret
mov
cmpsb
loop
lret
and
xchg
fimull
cli
test
jbe
sub
jg
inc
sub
out
cmp
out
xchg
jb
movb
xchg
std
sub
popa
or
incb
inc
addb
outsb
push
add
movsb
xchg
sbb
repz
je
bound
pusha
sbb
dec
movsl
jns
dec
xor
and
or
insw
xchg
inc
cmp
and
clc
dec
dec
aam
cmp
je
adc
pushw
xor
and
dec
rorb
xchg
or
sub
xor
ds
pop
mov
lcall
lcall
sbb
add
in
mov
xor
sub
inc
dec
xlat
jle
lods
xchg
adc
leave
push
mov
jg
addr16
cwtl
inc
sbb
leave
mov
mov
sahf
cmp
stos
jp
aaa
inc
sub
add
mov
negl
call
lods
add
jle
or
push
fwait
roll
mov
jo
or
xor
ss
pop
or
test
inc
loopne
outsb
pop
fsubrs
push
lss
repnz
push
les
movsb
in
in
xchg
and
out
stos
fwait
mov
jmp
cli
xor
and
add
add
aad
lods
arpl
loop
xchg
int
sahf
sti
xor
xor
shrb
jbe
xchg
subb
dec
xchg
mov
mov
mov
inc
shlb
fst
sub
push
popf
ret
jb
jp
or
rcl
mov
data16
inc
dec
faddp
arpl
or
mov
xlat
cld
or
jo
dec
push
es
lods
es
scas
adc
mov
cltd
sarb
sub
jbe
xor
std
jns
pop
stos
or
cltd
loope
jmp
or
js
adc
add
fs
je
orb
xchg
cmp
jmp
lcall
push
or
adc
sahf
int
movsl
mov
cld
cmp
mov
xchg
dec
stc
mov
repz
mov
das
jno
pop
jl
rolb
movsl
ja
repnz
sbb
dec
and
jecxz
mov
lock
pop
dec
popf
pop
xchg
xor
fmul
mov
imul
imul
scas
pop
xchg
add
pop
lea
adc
dec
sahf
mov
pop
ret
in
add
test
iret
test
rcll
pop
imul
mov
add
in
ds
dec
setge
jno
fwait
or
jp
adc
pusha
ja
call
and
jne
aad
nop
add
sub
je
pusha
ret
inc
mov
pop
adc
stos
cmp
xchg
cmp
test
mov
imul
pop
xchg
push
hlt
jl
out
add
push
add
lret
mov
jmp
inc
mov
jp
test
mov
notb
loopne
iret
int
shlb
push
dec
mov
push
mov
push
cmp
nop
pop
jecxz
dec
dec
scas
jae
int
or
cmpsb
cmp
mov
or
sub
inc
jecxz
dec
int3
aas
rcr
in
mov
jmp
out
mov
mov
sarb
movsl
inc
in
shr
jl
ret
or
mov
sub
add
int
test
out
sahf
mov
roll
cmc
shl
jne
jnp
or
pop
imull
rolb
push
inc
jae
sub
or
jnp
sub
lods
shlb
fildll
cmp
test
scas
mov
or
das
or
cltd
push
test
es
lods
xchg
xchg
aaa
clc
dec
inc
mov
fdivrp
adc
outsb
mov
mov
mov
and
inc
mov
outsl
mov
sar
lods
inc
cmp
sarl
cmpsl
jb
xorl
popf
sbb
outsl
daa
fnsave
xchg
mov
fwait
jno
pop
push
in
sarl
dec
jl
outsb
arpl
in
xchg
in
push
jo
push
arpl
pop
cmpsl
fisttpll
repz
sub
xchg
sahf
or
add
push
imul
adc
mov
mov
pop
or
pop
pop
mov
jmp
stos
mov
bound
dec
dec
in
lods
push
jno
mov
mov
ret
orl
out
cmpsb
add
xchg
stos
fstpl
jecxz
popa
push
leave
into
aam
jno
xor
mov
push
loopne
sbb
sbb
mov
mov
add
mov
inc
scas
les
call
sub
popf
add
int3
cmp
or
sbb
lods
mov
and
push
xor
outsl
adc
es
mov
bound
mov
popa
xor
cwtl
xor
adcl
pop
sub
sub
loope
mov
enter
push
scas
or
xchg
movsl
xor
rcl
test
jo
xchg
sbb
out
pushf
add
xchg
fmul
frstor
cmc
popa
dec
jp
xchg
outsl
cs
scas
std
mov
mov
mov
adc
insl
dec
pop
dec
or
js
test
sti
cli
xor
inc
ret
sbb
jl
pusha
lods
jns
insl
jge
sbb
cmpsl
scas
lret
jo
lret
stc
pushf
lods
mov
cs
lcall
xchg
in
xchg
repnz
jbe
jl
jp
out
or
and
xor
mov
mov
daa
loope
push
sbb
inc
sub
or
sbb
shlb
adc
sarl
sbb
cmp
inc
mov
xor
loope
js
fwait
xchg
daa
sbb
lds
cld
xchg
aas
inc
mulb
cs
xor
mov
stc
mov
push
mov
xacquire
xor
into
cwtl
push
and
push
pop
push
mov
ret
jg
dec
pusha
sarb
iret
xor
mov
in
mov
shrb
inc
movsb
sarb
call
cs
dec
jb
out
lcall
scas
loopne
out
idivb
repz
flds
jp
je
jmp
add
addr16
cld
out
stos
int3
push
mov
dec
cli
call
push
jnp
inc
mov
jno
lret
movsb
mov
adc
and
nop
andl
lods
lods
int
into
pop
adc
dec
out
sbb
rcl
mov
cmova
jmp
cmc
mov
cwtl
fstpt
imul
push
adc
mov
jo
rcrb
mov
dec
mov
push
cwtl
lods
and
jns
push
divb
sbb
pop
xor
and
jg
add
scas
aam
stos
addr16
lret
loope
jbe
mov
lods
ret
daa
rcll
mov
mov
and
lret
sti
enter
int3
movsl
loope
std
jne
push
fldl
dec
jecxz
dec
push
add
int3
js
test
mov
mov
jge
xor
jne
push
outsl
pop
pop
mov
sub
add
cmpsl
ds
mov
add
outsl
rorl
xor
xor
in
cli
daa
std
mov
js
in
pop
push
sti
arpl
les
mov
imul
cmp
into
xchg
pop
jmp
repz
adc
adcb
popa
in
mov
mov
adc
cli
scas
push
cltd
ja
xchg
jecxz
mov
movsb
fwait
inc
arpl
push
inc
dec
gs
lods
dec
dec
mov
in
out
movsl
andb
push
fwait
cmove
clc
je
ljmp
clc
in
fistl
out
insb
adc
xor
inc
ret
mov
pop
xchg
leave
icebp
xor
jo
xor
mov
jle
std
ret
inc
cmc
roll
sbb
push
cs
je
xchg
pushf
gs
xor
notb
lea
ret
adc
push
add
popf
dec
sub
pop
mov
sub
leave
aam
pop
je
sbb
out
cmc
pop
test
or
cmp
out
into
insl
mov
or
or
aam
leave
mov
repz
jp
cmpsl
aad
leave
loope
cltd
ljmp
icebp
movsb
cmp
ret
popf
in
nop
imull
xchg
jne
push
data16
insb
in
bound
shl
sub
repz
and
jp
nop
push
xchg
mov
mov
pop
fbld
imul
xorb
dec
lahf
mov
test
fsubrl
xor
testl
out
jnp
je
fst
cmpsb
cmp
xor
xchg
mov
push
das
lds
add
dec
sti
inc
into
lods
imul
push
and
data16
call
sbb
cmp
pop
loope
cmp
push
dec
test
push
and
loope
jbe
mov
cltd
adc
mov
inc
in
bound
sbb
xchg
test
adc
jnp
int
push
in
jae
xor
cmp
sub
es
dec
das
sbb
daa
xchg
in
mov
sbb
ret
cltd
test
sti
mov
inc
and
in
cmp
call
inc
jo
dec
jle
mov
cmp
jle
and
mov
add
into
subb
dec
ljmp
rorb
sbb
sub
out
cs
aas
das
pop
jp
pop
xchg
xor
mov
ja
ds
inc
in
cmp
in
clc
stos
cmpsl
xchg
adc
rorb
cmpps
fcoml
lock
inc
xchg
js
ret
cmp
or
push
stos
stos
inc
subb
jbe
test
loopne
jo
inc
jmp
int
frstor
sahf
mov
mov
outsl
mov
test
mov
js
je
sub
add
jno
aas
pushf
cld
enter
ds
aas
movsl
jle
add
and
push
cmp
cmp
insl
jae
inc
stos
sub
mov
pop
inc
jnp
xor
gs
daa
stos
jbe
push
je
push
push
stc
in
cmp
mov
enter
xchg
inc
or
enter
pop
pop
inc
mov
cwtl
xor
push
mov
mov
adc
push
pandn
fsubl
sub
test
xchg
mov
or
xor
repnz
add
pop
adc
call
push
data16
sub
in
xor
faddl
dec
out
test
mov
sub
inc
in
repz
cmp
stos
mov
push
insl
pop
xor
xchg
pop
test
in
pushf
mov
pop
pop
scas
sub
add
jp
bound
outsb
dec
xor
xor
dec
inc
mov
inc
push
pop
push
cmc
xchg
mov
xchg
loope
das
out
cmp
dec
pusha
dec
lahf
fwait
sbb
mov
aam
cmp
pop
dec
inc
cmp
xchg
hlt
out
nop
mov
xchg
fs
sub
mov
outsb
loopne
mov
aad
xor
pushf
add
jo
lds
jnp
pop
outsl
or
fldt
dec
int
jae
out
xor
in
invd
xchg
xchg
fdivrs
jno
jecxz
stos
sub
dec
lods
jb
iret
mov
stc
lods
push
in
lret
in
in
ds
push
mov
imul
xchg
and
push
sub
dec
xorl
jne
ds
lret
hlt
xchg
jp,pt
lret
cwtl
or
inc
aad
cmp
mov
out
outsb
mov
jb
ljmp
sub
xor
mov
pop
mov
sti
fisubrs
jbe
jg
mov
cli
roll
cmpb
lods
movsb
movsb
test
insb
sub
xchg
xbegin
xchg
movsb
ja
cmpsb
push
push
push
cmp
fwait
adc
lock
movsl
jb
push
xor
mov
sbbb
adc
lods
jae
cwtl
arpl
or
icebp
push
lret
jo
fs
or
lret
mov
jb
pop
jmp
mov
pushf
cmp
mov
insb
imul
dec
inc
movsb
pop
in
fcoml
push
lret
and
fldl
xor
lret
jnp
xchg
fildll
ficompl
pop
jp
sub
dec
or
jne
insl
mov
cli
daa
sbbb
sbbb
lahf
mov
mov
lods
cmpsl
fidivl
icebp
jle
sbb
das
fwait
add
ss
pop
inc
pop
xchg
rclb
les
mov
and
dec
orb
xor
mov
pusha
fsub
repnz
jno
inc
lods
cs
and
inc
add
or
lret
sub
push
in
mov
pop
lea
sahf
mov
frstor
xorl
imul
mov
mov
push
mov
out
out
cld
pop
lds
fmull
mov
pop
xor
or
lret
cli
rcll
popa
stos
aaa
push
mov
xchg
jb
and
leave
jnp
rep
mov
nop
jnp
in
dec
xchg
cmc
push
fcompl
orl
adc
adc
cmp
dec
icebp
ja
lcall
add
pop
psrld
enter
gs
sub
xchg
movsl
add
push
push
mov
jle
push
and
cmpsl
add
leave
aas
sub
sar
pop
or
sar
adc
sub
mov
or
cmp
lods
jge
mov
sub
mov
push
ret
push
dec
loope
dec
les
neg
pusha
mov
fcoml
and
jecxz
ja
daa
cmp
addr16
mov
outsl
sbb
lock
out
shll
cmc
rcr
dec
sub
add
push
cld
push
jp
mov
inc
ss
bound
rcrl
frstor
mov
jecxz
push
aaa
mov
in
add
sub
movsb
rcrl
int
mov
scas
push
int
pushf
insl
lock
pop
rorb
fwait
jns
sub
adc
inc
jecxz
fimull
fadd
dec
and
aaa
sub
push
ret
mov
cld
loope
sbb
clc
loopne
repnz
out
pop
or
mov
mov
hlt
xor
ja
xchg
push
adc
xorl
mov
jl
insb
repz
push
fbstp
xchg
fdivl
mov
mov
add
jne
xor
loopne
sbb
push
jle
xchg
sbb
hlt
lcall
cmp
adc
cmp
call
dec
xor
sub
jno
push
add
cmp
mov
push
push
push
leave
mov
xchg
push
ss
imul
inc
cmpb
stos
jge
and
sub
movsl
push
icebp
cmp
in
in
lods
repnz
dec
inc
jle
je
pushl
mov
mov
and
outsl
dec
incl
outsl
jle
mov
dec
aaa
inc
popf
dec
pop
mov
lahf
out
pop
xchg
notl
xor
lock
push
sub
fwait
push
sub
imul
push
dec
das
addr16
dec
push
mov
mov
shlb
sbb
sub
mov
sub
fildl
dec
in
push
dec
iret
cmp
fcomi
jp
daa
shl
adc
cli
imul
mov
mov
dec
sub
mov
leave
test
cli
test
mov
aad
inc
daa
mov
push
xor
cmp
cmp
push
addr16
jl
mov
mov
add
xchg
xor
and
xor
jo
cli
push
ss
lret
bound
repnz
rol
pop
in
jb
lds
inc
loope
dec
in
adc
dec
or
scas
push
pop
cmpsb
mov
cli
dec
fbstp
cld
sbb
mov
in
sub
push
sbb
xor
inc
sub
push
push
push
frstor
sub
cld
push
or
dec
mov
ja
popf
fcmovu
xchg
subb
push
mov
cmp
pop
jmp
add
sarb
je
adc
mov
fsts
scas
out
call
pop
sub
inc
enter
mov
shrl
push
or
pop
pop
jb
mov
inc
out
in
ffree
stos
addr16
jmp
push
addr16
fldl
call
mov
iret
jno
fwait
jns
push
sti
inc
gs
insl
add
data16
into
aad
and
or
fnstenv
mov
les
xor
push
arpl
sub
jbe
or
dec
loope
sbb
dec
jmp
jno
fsts
sub
and
out
fwait
imul
mov
and
aaa
jo
jg
dec
mov
xchg
mov
ss
and
sti
stos
jg
pop
dec
xor
mov
lods
pop
out
jne
lock
stos
cmp
popf
pop
sti
addr16
add
dec
int
xor
jp
mov
icebp
imul
iret
push
dec
mov
pop
jmp
pop
cmp
lods
ret
lret
cmp
jle
enter
xchg
insl
sbbb
les
popf
adc
cmp
mov
mov
mov
repz
jo
sub
sbb
push
test
push
insl
shll
fcmove
jg
sbb
pop
jmp
arpl
xchg
and
imull
mov
aas
mov
ja
mov
gs
jge
sub
adc
cmp
adc
jno
out
fnstcw
mov
push
pop
pushf
fisttpll
or
and
inc
inc
addr16
stos
lret
das
jecxz,pn
inc
push
bnd
push
pop
cmp
and
mov
ret
add
aas
pop
pop
mov
mov
cmp
lcall
cwtl
sub
pop
dec
ljmp
jnp
push
repz
scas
mov
out
cmp
mov
xor
xor
int3
outsl
mov
sbb
enter
mov
cmc
add
cmp
rol
out
cmp
sti
mov
imul
fildll
js
popf
adc
stos
ficoms
xor
pop
pop
push
jb
jmp
movsl
jge
loop
ret
jp
cwtl
mov
mov
cmp
mov
in
jns
lock
push
xchg
mov
aas
mul
or
inc
testb
dec
mov
or
in
mov
sahf
bswap
sahf
cmp
inc
and
insl
jae
mov
adcb
mov
cs
inc
xchg
int
mov
mov
pusha
testl
push
cli
adc
pushf
jp
mov
xchg
test
fdivs
dec
scas
mov
pushf
gs
adc
inc
outsl
pushf
mov
add
repnz
test
lea
jmp
sub
dec
cmp
scas
xor
mov
fnstsw
pop
in
je
push
xchg
sub
in
js
jmp
dec
inc
mov
ficomps
loop
or
cmp
aas
fs
jl
je
mov
xchg
inc
test
call
mov
outsl
push
sub
pop
je
out
mov
push
fs
pushf
jnp
pop
sub
incb
sbb
jl
addr16
jno
sbb
mov
ficomps
mov
pop
jg
test
cmp
cmp
arpl
jge
push
mov
push
lret
lret
sub
adc
repnz
repnz
mov
mov
and
and
mov
jnp
outsb
stc
out
mov
and
mov
fdivl
aas
jecxz
scas
add
xor
lock
fsubrl
roll
ficoms
arpl
dec
pusha
out
xchg
mov
aas
ret
cs
dec
loopne
mov
imul
mov
mov
dec
jo
push
loop
jp
ficoml
in
aam
or
out
sbb
xor
enter
lods
xor
aam
mov
mov
nop
xchg
ss
mov
push
mov
xorb
and
inc
rcll
pop
push
cld
arpl
popf
xor
bound
insb
mov
xchg
xor
xchg
stc
mov
fnsave
mov
popl
mov
mov
sarl
inc
or
loop
call
lea
mov
fcompl
loopne
adc
or
inc
push
pop
rcrb
mov
movsb
daa
popf
insb
dec
in
ss
sub
test
lahf
mov
push
add
les
adc
fldenv
adc
in
jns
mov
scas
mov
iret
and
sar
sub
jns
xchg
jo
sbb
dec
mov
lock
jno
lahf
mov
test
cmpsl
test
adc
jecxz
mov
and
push
or
fbstp
rcrl
fbstp
stos
sbb
lcall
aam
outsl
push
fstl
cmpsb
push
ret
ljmp
mov
sub
inc
and
pop
mov
cmpsb
enter
ja
popa
jmp
mov
popa
sub
and
call
add
xor
clc
lcall
cmp
daa
sbbb
cltd
mov
imul
cmp
fcomps
in
push
lock
out
add
pop
mov
dec
fsubr
sub
adc
pop
and
outsl
jbe
cli
sub
dec
ja
cmp
out
fldl
sti
jmp
inc
je
les
int3
fwait
mov
mov
push
mov
cmp
cmpsl
iret
xchg
into
nop
pop
in
sub
or
es
mov
into
out
sbbb
sub
out
fsubl
mov
xchg
shrl
imul
mov
cmc
cld
dec
jb
cs
mov
cli
mov
sub
pop
test
ja
movsl
repnz
gs
dec
testl
add
or
adc
fdiv
aas
leave
jo
lods
movb
sbb
jecxz
test
aam
pop
mov
les
cmp
mov
fimuls
pushf
fsubl
ret
fs
les
xchg
push
add
cmp
sub
test
mov
add
gs
xchg
and
movsl
sbbl
xor
fwait
push
arpl
or
sub
or
jb
push
mov
cmp
mov
mov
push
lock
adc
pushf
fisttpll
or
lea
adc
std
or
mov
test
and
mov
mov
lret
loopne
adc
ja
les
push
adc
ret
pusha
jbe
inc
xchg
xor
leave
or
sti
sar
shrl
adc
pop
dec
cmp
mov
xor
jecxz
int
stos
and
xchg
jl
jo
fisubrl
pop
ss
sbb
ss
mov
mov
popf
mov
or
mov
cmc
jge
pop
cs
je
rsm
dec
xor
jbe
cli
pop
push
xchg
inc
out
mov
addl
xchg
xor
fldt
mov
mov
insb
repz
xor
outsb
fsubp
xchg
pop
fistpl
mov
addl
jl
pusha
add
cmpsb
std
adc
sbb
pushf
pop
rol
faddl
sbb
sbb
add
clc
stos
cli
sahf
in
mov
testl
arpl
sub
cwtl
inc
jp
lods
dec
fwait
push
jo
cltd
mov
push
pop
outsb
xchg
jge
mov
dec
adc
pop
lahf
fwait
into
adc
ds
pop
cmc
push
xchg
adc
int3
int3
pop
jecxz
out
xchg
nop
daa
mov
pop
xlat
jno
ds
std
and
test
xchg
repnz
insb
out
pop
xchg
adc
jo
js
inc
adc
iret
pop
sbb
jno
dec
mov
or
jge
mov
shrb
add
inc
iret
fcoml
add
inc
rol
dec
fsubp
add
repz
mov
mov
jo
roll
cmc
mov
ret
dec
ret
adc
aad
inc
in
cmp
jp
mov
icebp
push
adc
sahf
cld
jns,pn
push
loope
rcll
jo
je
subl
cli
pop
pop
mov
push
loop
inc
and
cmp
clc
push
scas
arpl
xor
adc
popa
xchg
jo
cmp
insl
jnp
testb
pusha
fs
dec
mov
mov
jno
scas
add
ja
sbb
mov
jmp
add
cli
loop
dec
cmpsb
jp
mov
ret
mov
fxch
loope
out
cmp
push
mov
cli
lock
pop
stc
popa
push
cltd
pop
pop
fwait
pop
subl
icebp
popa
xlat
push
lcall
test
fucomip
add
lea
inc
leave
das
inc
mov
mov
lret
sub
adc
fidivrs
push
rcrl
or
inc
pop
fwait
arpl
mov
mov
outsb
pop
ret
sbb
xor
clc
mov
lea
repnz
sbb
imul
lods
repnz
xchg
push
or
shld
mov
inc
mov
lock
fs
mov
pop
test
and
iret
std
das
adc
out
dec
jmp
int
out
mov
lods
or
push
fistl
sahf
das
cmpb
push
aas
test
cmp
and
add
mov
pusha
pusha
mov
xchg
es
ja
xor
xchg
test
push
aaa
xchg
cmp
xchg
in
push
push
mov
mov
cmp
mov
int
stc
push
addr16
mov
jbe
lods
inc
dec
push
repz
iret
fcmovne
iret
rcrl
adc
insl
add
daa
jle
scas
ss
jb
mov
stos
jmp
add
jle
pushf
cs
push
pop
movsb
lods
mov
lds
shlb
fstl
sahf
aas
push
or
imul
adc
fwait
repz
clc
aaa
pop
pop
movsb
movsb
mov
dec
sub
lret
inc
and
lock
inc
rcrb
pop
adc
fs
push
int3
and
shr
cmp
add
insb
push
les
and
in
shl
adc
pop
je
mov
pop
mov
push
test
popf
push
add
push
add
sbb
mov
xlat
mov
scas
cld
inc
jo
jne
cmpsb
jmp
mov
test
cmpsl
sub
test
adc
std
pop
ret
iret
push
testl
adc
mov
test
xor
and
testl
pop
add
adc
subl
jns
cs
stos
stc
cmp
jbe
pop
ja
mov
dec
inc
adc
adc
or
lret
or
pop
jnp
mov
dec
sbb
jp
mov
mov
icebp
lods
in
imul
ficoms
mov
sbb
in
lahf
inc
jl
fistpl
cmp
decl
pusha
jmp
sbb
nop
adc
pushl
aam
cwtl
out
push
mov
adc
in
std
lahf
mov
mov
fimull
pop
mov
shll
push
out
lcall
shrb
cmp
mov
fdiv
cmpsl
xchg
scas
inc
cmp
mov
lods
cld
pop
arpl
push
and
xor
cld
or
hlt
push
push
cs
cmp
nop
inc
xor
inc
cmp
pop
dec
sahf
test
rcrb
aad
fcomps
xchg
add
mov
mov
scas
jl
popa
pop
xchg
insb
cmp
push
mov
mov
mov
mov
insl
in
cli
adc
push
mov
aam
dec
push
mov
pushf
aaa
or
cmp
xchg
mov
out
mov
or
ss
push
andb
pop
push
push
xorl
pusha
sti
cli
sub
xor
inc
mov
sahf
jge
pop
or
pop
sarb
movsl
and
icebp
sub
adc
mov
stos
cmpsl
test
arpl
cwtl
add
sbb
mov
pop
shlb
decl
loope
sbb
mov
sub
or
shr
aaa
adc
lods
loop
mov
lea
rol
test
fcompl
cmpsl
sub
scas
lret
jmp
push
out
and
sbb
push
cmp
dec
cmp
clc
pop
pop
mov
xchg
aad
ds
das
jne
out
and
xor
inc
in
sub
nop
in
lret
add
xor
test
movsl
int
push
in
xchg
sbb
inc
sub
xchg
sbb
mov
push
pop
adc
adc
outsl
fmul
das
or
aas
adc
imull
es
jns
lahf
mov
mov
imul
mov
mov
mov
pop
hlt
icebp
das
nop
or
dec
inc
in
cmpsb
jecxz
sub
data16
xor
scas
pusha
pop
xor
mov
inc
add
mov
mov
aaa
test
and
adc
sbb
repz
adc
mov
pop
or
lcall
lds
sub
mov
int3
dec
adc
popa
loopne
mov
test
or
add
dec
iret
pusha
lret
jmp
loop
sbb
lret
rolb
xor
sbb
sub
mov
jno
xchg
push
add
stos
push
sbb
iret
scas
movsb
lcall
inc
icebp
push
dec
out
cmpsb
inc
stos
mov
lds
fsubrs
xor
ljmp
mov
ffreep
sbb
ficomps
xor
ds
or
dec
inc
xor
pop
imul
gs
shll
adc
out
xlat
loopne
sbb
jl
in
jg
add
pop
pop
repnz
aaa
jno
sti
stc
movsl
int
sbb
or
sub
xchg
jne
or
jp
mov
pushf
test
sbb
out
cmp
ret
cmpsb
cmpsl
out
mov
mov
je
mov
insl
popf
std
pop
mov
add
cmpb
test
cli
mov
mov
xor
lret
popf
xchg
push
es
add
movsb
jg
testb
daa
aaa
and
adc
inc
push
jo
pop
fwait
xor
or
lods
lea
mov
rcl
stc
mov
or
jp
kmovb
sahf
cmp
jp
push
adc
insl
xchg
mov
pop
mov
scas
jbe
aam
shlb
pop
cmpsb
lahf
sbb
pop
pop
pusha
shl
mov
pop
insl
dec
jmp
test
mov
das
shll
lock
push
lds
cmp
mov
lcall
stc
call
cmp
rcr
xchg
mov
bound
mov
pop
lock
je
pop
xchg
jae
mov
nop
js
lret
aad
test
lock
cmp
rol
faddl
cmpsl
fnsave
sub
xchg
mov
test
fldl
dec
enter
jbe
mov
inc
sub
mov
cmp
pop
imull
cld
lret
add
mov
cmp
pop
icebp
mov
inc
jl
push
cmp
icebp
call
mov
mov
cmc
imul
out
dec
xchg
aad
ss
sbb
aad
sete
cltd
pop
xchg
lret
in
cmp
aaa
add
mov
call
and
int
or
mov
pop
in
es
pop
xor
mov
movsb
addr16
inc
ret
adc
add
ficoml
cmp
enter
push
out
negl
xlat
leave
xor
jns
leave
jbe
les
repz
ds
cmp
lcall
fistl
out
cwtl
mov
push
adc
and
or
dec
dec
bound
dec
adc
outsb
movsl
jmp
jnp
pop
jno
aad
in
pop
xchg
dec
mov
adc
inc
fisttps
sub
adc
pop
ljmp
mov
mov
les
xchg
mov
pushf
cmpsl
xchg
setno
pusha
loopne
cmp
mov
adcl
pop
pop
sbb
mov
sar
dec
movsb
test
and
cmp
add
cmp
fcoms
jno
mov
cmpsb
jle
cmovp
and
mov
or
or
inc
les
push
pop
pop
add
into
cmp
push
ret
mov
jp
push
jo
jno
out
int
xchg
pop
ja
mov
rclb
jle
jae
aaa
adc
fmull
mov
or
jge
mov
pusha
mov
movsb
xchg
lock
rorl
dec
rcrb
or
push
mov
jbe
jns
in
mov
and
jns
sbb
jnp
xchg
adc
cmp
outsl
mov
clc
inc
fidivrs
mov
jae
daa
fmuls
stos
out
pusha
test
sbb
movb
mov
scas
pop
sahf
sbb
adc
dec
mov
cmp
jnp
pushf
add
dec
daa
sub
shl
and
div
les
sbb
out
push
xor
cld
mov
sbb
cmpsb
and
push
fnstenv
out
mov
dec
xor
jae
adc
fmul
je
jp
stos
sub
pop
rcrl
dec
aas
test
inc
xchg
mov
jge
and
inc
sub
scas
pushf
pop
shrb
mov
cltd
mov
negb
fwait
jnp
xor
repnz
loopne
push
push
in
scas
lcall
scas
lea
fdivl
mov
xlat
mov
and
lods
pop
iret
loopne
push
adc
fidivrs
cwtl
outsb
push
dec
pop
ljmp
sahf
mov
or
pushf
xor
xor
sbb
sbb
or
cmpsb
ficoms
mov
mov
dec
dec
and
xchg
jb
clc
ss
xor
sbb
mov
sbb
xchg
les
dec
scas
push
test
outsb
mov
add
xchg
rclb
shrb
faddp
movsb
and
lahf
fdivrs
andl
scas
add
and
out
xor
popf
push
movsl
inc
sub
dec
push
lret
mov
cmp
push
xchg
mov
mov
in
xlat
imull
jno
sbb
je
ret
cmpl
push
xchg
js
adc
dec
mov
xlat
pop
cmp
movsl
pop
dec
aad
cmp
mov
mov
adc
mov
daa
call
insb
loopne
cld
scas
inc
and
aaa
shll
push
call
repnz
mov
stos
int3
es
loop
scas
adc
sti
fcmovnu
mov
mov
cmp
fcmovu
push
loop
xor
pusha
sub
and
ficompl
inc
pop
jnp
mov
and
scas
pop
loope
pop
inc
xchg
ljmp
xchg
rolb
lds
mov
outsl
or
fistpl
insb
jp
xor
rol
les
into
xor
xor
cmpsl
push
fistl
jle
ss
dec
mov
or
clc
out
mov
int3
xor
shll
aam
or
mov
jle
xor
add
sbb
leave
xor
dec
push
xor
rorb
xchg
cltd
fwait
cmpsl
rorb
xchg
mov
lahf
frstor
popl
mov
fnstcw
ds
insb
fsubl
xlat
sbb
mov
adc
sbb
mov
cltd
mov
push
xor
pop
xchg
ja
aas
jl
push
dec
jecxz
xchg
mov
mov
or
loope
hlt
pop
test
jmp
dec
shrb
aad
jno
and
std
out
sub
outsb
xchg
enter
lahf
sti
ja
jg
mov
inc
rcrb
pop
jns
arpl
mov
imul
jb
lock
adc
sub
jg
xchg
fsub
mov
ret
repz
stc
push
fprem
cmp
jbe
or
or
xchg
inc
out
inc
xchg
pop
jb
dec
aas
lock
shrl
jnp
pop
xchg
jge
lret
dec
loop
test
cltd
insb
out
mov
rcr
xlat
mov
mov
js
mov
lods
mov
int
pop
test
mov
jmp
or
mov
or
loopne
scas
sub
pop
add
fistps
mov
wbinvd
pop
xchg
jo
or
adc
es
cmpsl
mov
bnd
xchg
loopne
leave
jl
cli
jle
pop
movb
and
add
sarb
jg
sbb
stc
or
mov
sbb
bound
mov
movsb
xchg
pop
test
dec
sbb
inc
push
inc
fcomps
mov
insl
scas
dec
popa
or
mov
insl
aaa
mov
sub
aas
test
cmc
pop
jecxz
filds
ret
jmp
out
xor
subl
push
push
xchg
mov
divl
aas
and
adc
rcll
push
mov
shrl
mov
test
add
jno
xchg
loope
dec
test
mov
pop
jns
data16
adc
dec
mov
add
roll
jno
jmp
mov
ja
sub
sub
out
pop
jbe
mov
add
push
jae
inc
adc
enter
cmp
jnp
inc
insb
dec
sarb
int3
in
adcb
das
pop
xlat
dec
cwtl
les
ss
cmp
aas
jg
mov
cmp
fwait
mov
pop
sub
mov
push
mov
push
mov
push
ret
xor
lock
add
das
push
fisttpll
cs
rol
pop
pop
mull
sbb
adc
mov
jnp
or
lret
xchg
les
cmp
cmc
rcrb
add
sbb
and
stos
js
lods
and
mov
and
loop
cmp
fcoms
gs
stos
rcr
bound
dec
or
in
mov
xchg
sub
enter
xchg
mov
cmp
jnp
and
dec
inc
xor
inc
jns
inc
fadd
loope
push
dec
insl
int3
add
pop
jecxz
pop
ret
jns
fistpl
mov
jg
or
lea
inc
cmp
movsl
ret
xchg
mov
pop
out
lcall
call
xchg
cmp
mov
ljmp
cmp
rcr
add
and
xchg
pop
sbb
push
cld
in
sbb
fbstp
lret
ror
jne
ljmp
pop
push
sub
ret
mov
xor
shr
popw
pop
inc
stc
orb
lock
clc
mov
and
aad
lock
pushf
push
fnsave
jg
mov
loop
inc
scas
outsl
in
rclb
jo,pt
pmulhw
iret
int
in
push
jno
push
fnstsw
popa
xor
mov
mov
cmp
or
and
mov
jle
aaa
add
testb
sub
out
fisubrl
insb
fidivrl
mov
xchg
repnz
and
loop
add
push
xor
test
adc
dec
int
push
jbe
jb
mov
cmp
add
xor
sarl
jge
stos
pop
cmpsl
adcl
xchg
push
sbb
jbe
mov
jmp
jl
insb
rcll
test
clc
clc
ss
lds
push
ficoms
or
dec
test
jnp
sub
hlt
lods
test
roll
in
repz
push
cmc
pop
jne
cmp
mov
mov
lods
mov
repnz
sbb
into
inc
adc
mov
push
cltd
das
mov
cmp
fdivs
push
loope
in
mov
aam
mov
nop
jno
cmp
push
xor
sbb
aas
and
xlat
loopne
je
jnp
xor
cmpsb
popf
ja
push
repnz
stos
sub
loop
adc
push
ret
mov
sub
es
mov
adc
data16
idivl
in
xor
dec
lds
lea
es
adc
push
and
mov
dec
cmp
stos
lds
arpl
pop
cs
rolb
test
mov
in
mov
les
mov
loope
add
and
notb
pop
loope
lret
push
popa
sbb
rorb
clc
insb
xor
lcall
add
xchg
push
mov
jl
repz
int3
das
xor
hlt
mov
out
add
sahf
dec
and
js
addr16
lcall
sbb
or
aam
pop
sbb
into
jno
jb
repz
addb
pop
bound
movsb
iret
xlat
sti
pop
adc
add
lods
sbb
out
cmc
xchg
hlt
scas
jne
pushf
repz
fdivr
shlb
sbb
push
sub
out
ret
ljmp
adc
lret
inc
rcll
xchg
xchg
dec
xchg
loop
fxch
mov
jbe
sbb
movups
aad
iret
sbb
pop
rorb
leave
enter
inc
iret
sbb
and
xor
rorb
sub
pop
push
stos
pop
imul
test
inc
fmull
mov
xor
mov
inc
test
sub
jle
xor
insl
lahf
fiaddl
or
sbbl
inc
dec
insl
fwait
mov
or
push
int3
jbe
arpl
jp
and
mov
mov
imul
daa
int
rolb
cmc
mov
pusha
xor
aam
lcall
int3
or
push
iret
stos
dec
push
cmp
xchg
mov
sti
mov
leave
or
xor
sbb
inc
mov
scas
repz
push
mov
incl
push
lret
sbb
jae
jecxz
repnz
inc
sub
repnz
iret
out
cmp
jge
add
adc
outsl
mov
filds
iret
xor
push
movsl
pop
outsb
repnz
aam
shlb
lret
xor
movsb
or
xchg
xor
fildll
xor
and
xor
out
loope
fdivs
push
dec
pop
or
mov
mov
jno
jp
fstp
dec
fwait
mov
sbb
xchg
pop
aaa
inc
xor
jl
add
xor
adc
push
pop
ja
subl
imul
sub
cld
adc
pop
pop
pusha
sbb
nop
push
dec
sbb
or
and
in
xor
test
aam
addb
mov
mov
xor
dec
mov
and
mov
xchg
cmp
mov
cmp
or
cld
aaa
mov
adc
je
rorb
cmpl
xorb
icebp
lock
mov
add
ds
cli
loopne
push
and
dec
sahf
dec
lea
mov
sub
dec
scas
cmp
lret
or
fwait
pop
mov
shl
push
cmp
and
lods
sub
sub
stos
subl
pop
ss
ljmp
inc
mov
xchg
dec
xor
insb
pop
cmp
js
mov
mov
or
enter
pusha
xor
mov
sbb
std
cmp
ja
in
mov
repz
add
ss
sub
sub
xchg
push
and
cwtl
xchg
ret
mov
orb
pushw
mov
jecxz
mov
and
data16
out
xor
cmc
jmp
bound
stos
jae
movsb
outsl
lds
dec
out
pop
into
add
stos
movsb
xchg
int3
inc
cmp
stos
pop
lods
movsb
out
mov
sub
hlt
decb
jnp
or
pusha
mov
mov
inc
mov
push
in
xor
das
jnp
repz
fmull
shlb
out
jb
ja
jecxz
cmpsb
add
lret
andw
or
xlat
pop
mov
xchg
call
xchg
add
inc
lock
pushf
dec
sti
push
jae
ret
imulb
inc
jmp
sub
mov
jno
push
mov
nop
add
mov
dec
lcall
outsl
out
movsl
mov
add
push
jp
sbb
add
pop
rolb
xlat
arpl
lret
dec
mov
add
gs
fiadds
shrb
xchg
gs
mov
jp
jno
int3
ja
hlt
pop
add
adc
add
daa
dec
push
pop
inc
cmp
mov
mov
ja
xor
add
mov
pop
data16
js
stos
in
xchg
sub
push
sahf
mov
sub
lret
push
sub
push
and
sahf
pop
data16
mov
mov
lods
xor
lods
ljmp
fidivrl
xor
in
mov
mov
sbb
or
fidivs
dec
cld
dec
sub
mov
sub
mov
and
or
adc
push
fstpt
mov
popa
in
or
daa
mov
into
or
add
mov
mul
clc
mov
sub
out
sbb
adc
fldl
notl
jmp
pop
dec
cwtl
cltd
sub
aaa
cli
xor
fsub
repnz
mov
mov
mov
mov
xchg
dec
int3
fbld
or
outsl
les
andb
hlt
sbb
sbb
sub
scas
outsl
popf
push
lds
int
loopne
lahf
push
fdivp
in
fdivrs
dec
icebp
sbb
cmc
das
in
lock
xchg
imul
mov
jns
and
jne
jnp
push
clc
pushw
je
jo
mov
rolb
xchg
mov
mov
cwtl
mov
in
mov
shll
jbe
ret
es
out
push
iret
pop
inc
scas
adc
mov
in
lahf
gs
cli
js
adc
mov
sub
iret
movsl
test
adc
movsb
add
fadds
dec
push
fcom
ds
mov
cmpsl
mov
adc
les
fildll
inc
push
lods
mov
sub
ret
inc
daa
ljmp
xor
cmpl
cmp
and
sub
and
and
pop
clc
loopne
test
inc
pop
and
cld
cmpsb
xchg
jle
push
dec
sub
pop
xorb
sub
add
mov
jl
jle
fdivrp
inc
mov
cli
mov
in
test
push
dec
movl
mov
sbb
pop
call
insl
xchg
lock
scas
dec
insl
push
fmull
and
stos
ficoms
outsb
sbb
sbb
outsb
cltd
push
decb
repz
adc
outsl
outsb
clc
inc
sbb
adc
in
outsl
sub
lock
lods
and
jge
xchg
ret
divl
xchg
lret
scas
cmpl
xor
scas
lahf
mov
adc
testl
lcall
lock
pusha
std
popl
out
test
dec
stos
enter
sbb
es
cmp
push
rorl
cmp
repz
inc
dec
popf
inc
scas
xor
or
es
pop
enter
and
data16
lahf
or
hlt
xor
push
push
mov
std
fcomps
xchg
xchg
and
in
pop
shlb
fstl
rol
push
lret
fisubrs
xor
mov
add
mov
adc
mov
sbb
ja
imul
cli
into
and
arpl
cli
call
ljmp
rclb
and
push
clc
cli
aas
sbb
test
and
adc
ja
call
out
push
adc
and
mov
mov
stos
xor
adc
mov
imul
and
imul
xchg
stos
jns
xor
fmul
lcall
cmp
adc
or
lret
jb,pn
mov
pop
dec
mov
pushf
fsubs
add
movsb
adc
insl
pop
sub
call
lea
dec
sbb
lods
cmpsl
nop
in
adc
push
jbe
cmp
out
notl
cmpsb
imul
jecxz
push
popf
arpl
rcl
xor
adc
and
cmp
fcomps
jnp
sti
and
popa
add
inc
rcll
dec
add
adc
rolb
divl
ficoml
cwtl
xchg
lds
fmulp
inc
aad
lods
cmp
out
sub
imul
mov
pusha
lret
loopne
lods
clc
inc
sub
div
aam
jp
repz
sbb
pop
movsb
sbb
pop
jns
xchg
in
int
and
xlat
xchg
or
push
wrmsr
les
movl
psubusw
mov
or
arpl
lods
push
sub
jb
stos
nop
lods
pop
js
fdivr
leave
je
cmp
add
inc
pop
loop
pop
orl
rol
mov
or
aas
lcall
scas
mov
cmpsb
mov
and
xor
inc
in
mov
ficoml
inc
imul
push
mul
xchg
pop
gs
and
add
int3
dec
orl
adc
fs
pop
xchg
mov
mov
clc
push
inc
subb
inc
pop
out
adc
test
out
mov
inc
cli
and
pusha
int
xchg
data16
cmp
scas
loopne
out
stos
jb
test
iret
cmp
and
rorb
lods
int3
cmpb
addr16
mov
outsb
add
js
cmp
test
loopne
sub
sahf
imul
cli
jmp
into
js
hlt
lds
test
pop
gs
fcoms
sub
decl
leave
stos
jmp
sbb
push
and
stc
lds
scas
dec
xorl
vshufps
adc
je
cmpsl
ds
sti
jbe
les
cmc
shl
fcoms
xchg
call
adc
push
jle
in
mov
stos
xchg
mov
xchg
or
mov
mov
xchg
shll
insb
hlt
sbb
jbe
lea
dec
pop
enter
aas
push
sub
lods
sti
ja
stc
inc
inc
insb
sub
and
inc
lret
push
push
out
clc
pop
loop
jmp
sub
cmp
add
sahf
xchg
xchg
mov
and
outsl
pop
or
adc
das
pop
lods
andb
push
sub
jnp
ficoms
arpl
inc
ss
into
sarl
shlb
or
inc
lcall
addb
mov
test
ret
jae
cmp
test
into
adc
movsl
sahf
sub
stos
leave
ds
repz
or
adc
inc
jl
mov
pop
loop
loope
stos
test
jnp
dec
sbb
fistpll
add
subb
insl
arpl
jno
jg
scas
mov
cmpsl
adc
mov
push
shll
loop
out
or
repnz
inc
cmp
adc
das
sub
push
inc
mov
mov
int
mov
cmpb
inc
xor
iret
add
mov
aam
add
test
or
add
test
test
cmp
mov
int3
in
and
repnz
outsl
into
leave
push
sub
inc
mov
mov
add
pop
lahf
js
jg
or
adc
data16
jnp
enter
or
xchg
push
fisubs
jge
jae
sub
xchg
pop
mov
imul
ret
push
or
pop
and
cmp
dec
lds
ret
and
jb
rorl
test
out
xor
xor
repz
pop
cmpsb
bound
in
mov
push
inc
and
pop
scas
daa
or
sbb
ljmp
repz
lea
sbb
dec
mov
or
fnstenv
frstor
repz
add
add
adc
les
insb
loopew
sub
xchg
loopne
bound
mov
in
cmpsb
cmpsl
test
ds
sbb
pop
mov
cmpsl
add
cmpsb
outsl
mov
jl
movsb
mov
insl
dec
inc
xor
cltd
movsb
inc
cmp
cwtl
dec
cmpsb
aad
or
cmpsl
mov
ret
leave
adc
mov
lret
xchg
insl
sbb
dec
addb
and
sub
cmpsl
pop
push
or
sub
mov
es
imul
inc
jns
in
jne
adc
int
sbb
jle
add
or
out
cli
push
or
and
loopne
inc
in
xor
and
imul
stos
mov
scas
sub
pusha
or
ja
daa
cmpsl
mov
cli
sub
rolb
lods
orb
daa
add
icebp
mov
jg
mov
or
lock
enterw
and
push
push
faddl
xor
inc
cmp
jb
lcall
mov
xchg
insb
push
sarb
jnp
outsl
pop
aad
cmp
in
push
pushf
out
hlt
sbb
insb
and
shlb
cmp
loope,pn
sub
xchg
mov
clc
xor
xchg
insb
push
je
leave
outsl
gs
xchg
inc
push
orl
lret
dec
sub
inc
push
pop
pop
shll
cmp
xchg
aas
jl
or
jo
mov
fidivrl
es
pop
in
jmp
scas
test
pop
jl
pop
adc
data16
and
cld
cmp
mov
fnsave
push
xor
push
stc
mov
jl
mov
and
daa
push
cmp
fcompl
fisubrl
movsb
cltd
and
inc
ficoms
adc
xor
sbb
cltd
ret
inc
ja
push
add
add
and
shlb
sub
or
out
int
push
fwait
adc
pop
and
std
xor
add
outsl
fists
mov
loopne
fldl
pop
pop
adc
pop
in
jle
adc
loope
add
mov
mov
xor
adc
popa
daa
mov
rolb
les
nop
out
jb
mov
fcmovne
and
and
push
pop
adc
xchg
push
lahf
push
mov
mov
insl
mov
jp
decb
mov
mov
dec
jns
aad
sbb
mov
jecxz
pusha
addr16
pop
aam
mov
inc
ret
iret
nop
jge
je
xchg
scas
jae
cmp
add
shlb
xchg
out
jbe
xchg
jnp
out
inc
inc
aas
sti
cltd
stos
dec
sahf
push
fdivl
pop
xor
movsb
lcall
add
xchg
mov
scas
mov
mov
ret
sbb
mov
testb
sub
jge
out
sbb
inc
push
xor
adcl
test
ret
fs
xchg
test
pop
outsb
cmpsb
jo
aas
jo
pop
cli
rcrl
ss
and
and
cmp
push
hlt
lahf
and
fwait
repnz
xlat
movsb
pop
nop
rclb
push
push
jle
sbb
mov
push
popf
mov
mov
jg
mov
mov
outsl
pop
iret
mulb
jmp
xchg
jnp
repz
and
mov
jae
mov
ds
cli
pop
addl
testl
leave
adcb
mov
scas
push
insb
imul
ficoms
ret
inc
fldcw
sbb
push
sub
lret
lods
push
mov
inc
test
inc
push
push
lret
cmp
adc
mov
xchg
mov
cmpsl
insl
das
xlat
cmp
jg
pusha
mov
stc
sub
or
les
in
pop
xchg
lret
jb
imul
and
aaa
pop
mov
enter
mov
add
or
imul
insb
nop
fadds
mov
xchg
sti
mov
sub
mov
add
les
mov
in
inc
stos
movsb
imul
and
mov
iret
mov
mov
les
or
inc
sub
and
ret
nop
pop
out
push
arpl
shlb
cmpsl
leave
insl
ds
out
sti
sbb
les
cmp
aaa
pop
jbe
adc
insb
lret
mov
hlt
sub
pop
or
push
or
jae
mov
and
sub
lahf
push
jmp
call
jnp
arpl
add
sbb
popf
cld
fwait
sbb
scas
movsl
adc
repz
std
sarl
cmpsb
scas
add
xor
or
cmp
mov
cmp
mov
push
leave
iret
enter
mov
iret
sarl
pop
int3
mov
mov
sbb
mov
add
sbb
adc
sbb
mov
ret
pop
xchg
loopne
int
fwait
cli
inc
adc
mov
rclb
loop
nop
imul
xchg
mov
clc
fucomp
xchg
pop
mov
loop
lock
rcrb
xor
sbb
push
in
lret
lahf
das
xchg
mov
jmp
cmc
pop
push
xor
push
inc
pushf
cmp
inc
jnp
adc
in
sbb
jecxz
cmpsb
rcr
pusha
aaa
lret
mov
mov
or
fs
push
popa
xchg
lods
adc
sbb
pop
call
mov
mov
rcl
push
mov
adc
cmpsl
cmpsl
mov
daa
call
and
mov
inc
and
xchg
aam
jae
fwait
inc
mov
pop
cmp
aad
out
push
mov
sti
in
rol
sub
xor
add
ret
test
mov
std
mov
cmp
jmp
andl
aad
test
or
int
jle
out
sbb
lock
pop
push
pop
ret
mov
lea
leave
cs
loope
add
stc
les
flds
mov
stc
js
mov
mov
dec
jb
pop
xorb
jo
cld
cmp
rolb
ret
pop
mov
sub
mov
sub
outsl
leave
add
rolb
xchg
pop
pop
adc
sbb
lock
adc
in
lret
dec
mov
shrb
rorl
dec
mov
fstpl
loop
add
inc
insb
movzbl
add
dec
push
jp
lock
test
hlt
mov
fisubrs
test
hlt
cmp
fmuls
ret
cltd
sub
jecxz
cmp
fidivrl
add
pop
jb
movsb
pop
mov
xchg
jmp
hlt
scas
adc
push
jecxz
insl
xor
sbb
mov
inc
xlat
stos
adc
gs
mov
xor
mov
insl
imulb
das
mov
and
mov
and
jb
push
imull
out
int3
pop
pop
xor
test
xlat
dec
mov
jbe
ror
cli
into
shll
mov
jl
leave
int
sub
fmuls
int3
sti
sbb
cmp
scas
xchg
adc
mov
pop
dec
or
rcrl
jl
insb
sahf
sbb
loop
daa
inc
ret
inc
inc
jo
cmp
ret
jp
xchg
mov
inc
mov
inc
sub
or
insl
mov
loope
or
ficompl
cmp
adc
pop
jne
lods
aam
or
adc
cmp
ror
cmp
mov
or
loopne
xor
hlt
push
ljmp
push
xchg
cmc
push
aaa
fmuls
mov
push
pushf
shrb
and
lea
jg
mov
xor
cmp
outsb
mov
stos
adc
sar
adc
push
cli
inc
in
aaa
mov
xchg
sahf
data16
cwtl
pop
daa
lds
mov
das
push
push
mov
test
dec
cmp
xor
aas
adc
aam
or
out
and
mov
ud2
testl
inc
xchg
jne
pop
xchg
loope
and
sbb
cmpsl
pop
repnz
call
pop
add
pop
mov
push
pushf
mov
xchg
iret
push
scas
jge
sub
int3
cmp
push
cmp
lea
orb
clc
and
or
sti
adc
in
add
pop
xchg
shlb
adcl
mov
lcall
rclb
enter
das
jae
pop
cmp
add
mov
movsl
mov
mov
mov
call
adc
dec
inc
sbbb
pop
pop
adc
jle
sub
lret
push
fsubp
or
pop
ret
mov
out
mov
pop
test
aas
mov
jns
push
cmp
stc
leave
popa
and
jl
mov
add
jmp
dec
fs
addr16
fs
cltd
shr
pushf
fwait
mov
f2xm1
inc
dec
mov
sti
xor
loope
clc
divl
lods
enter
xor
ficompl
fstl
ret
jmp
je
sahf
test
shll
pop
xchg
popl
js
lock
div
xchg
mov
mov
rorb
push
inc
xor
mov
ljmp
lods
fstpt
in
in
in
jo
push
fadd
fwait
or
imull
pop
cmc
scas
fcmove
ret
mov
xchg
cld
jns
je
rclw
jle
push
xchg
popf
jge
bound
lods
repz
mov
hlt
adc
jae
pop
pop
mov
insb
push
int
sbbl
mov
push
mov
add
mov
fwait
add
push
dec
pop
cmp
sub
nop
cmp
mov
pop
xor
lahf
repnz
jmp
jb
repz
push
push
je
rcrb
mov
jp
dec
sub
das
test
lods
cmpsb
add
jecxz
mov
add
jno
repz
rcll
xor
stos
sahf
mov
ljmp
push
cmp
fmul
mov
or
ds
mov
stc
mov
pop
lods
shlb
sbb
out
pop
rcll
lds
sub
out
shrb
adc
aas
sub
jle
jno
cmp
lret
cli
xchg
fistl
divl
hlt
sbb
test
dec
or
jns
jg
adc
and
je
add
mov
cmpb
dec
insb
or
cltd
dec
stos
cli
and
mov
out
xor
mov
icebp
adc
xlat
jge
adc
mov
jmp
dec
mov
sbb
leave
stos
in
xlat
outsb
fdivrp
mov
mov
dec
sub
dec
cli
mov
jp
mov
pop
adc
xchg
nop
add
jecxz
add
lods
cmp
int
dec
clc
and
scas
sbb
cmp
out
mov
rcrl
popa
stos
and
mov
pop
adc
out
pop
sahf
enter
mov
mov
xchg
mov
cmpsl
ret
psubq
aad
cmp
adc
shlb
jle
inc
mov
sbb
push
lcall
out
out
sar
pop
jmp
call
add
ds
cmp
dec
mov
hlt
adc
and
push
cmpsl
sub
sub
mov
push
mov
mov
mov
jbe
mov
ds
icebp
push
rolb
cmp
dec
out
mov
cmp
sbb
sahf
ret
mov
jno
inc
push
stc
jecxz
fistl
push
cltd
hlt
lds
mov
mov
out
cli
mov
and
push
aad
in
mov
cs
stos
sbb
jae
push
or
fcoml
cmp
mov
fldcw
aaa
ret
mov
mov
adc
out
enter
inc
mov
sbb
mov
js
repz
fisttpll
inc
xchg
test
mov
insl
sub
out
push
mov
cmp
xor
shrl
adc
mov
inc
inc
lods
jno
push
jo
jp
incb
shlb
test
xor
das
loop
cmp
mov
inc
in
pop
inc
pop
cmp
in
je
push
pop
js
inc
lret
mov
jo
imul
cs
enter
stc
pop
sub
xchg
push
inc
roll
mov
in
gs
push
mov
add
sub
inc
mov
pop
mov
and
cmpsb
std
data16
cmp
mov
int3
mov
outsl
mov
imul
dec
aaa
push
cmc
xlat
push
fdivr
imul
sarb
push
push
xchg
lods
test
cmc
lea
iret
add
shlb
cmpsb
std
mov
fmulp
enter
xchg
adc
bound
imul
mov
shrb
test
aas
mov
imul
push
pop
es
xchg
test
add
mov
inc
sbb
pop
and
add
adc
push
mov
ss
out
mov
gs
and
cld
clc
xchg
sub
cmp
cmp
mov
mov
aaa
lret
out
insb
andb
xlat
or
dec
mov
leave
mov
je
mov
add
leave
push
adc
inc
lods
mulb
aaa
mov
mov
lea
mov
scas
in
sti
rolb
mov
jae
std
fdivl
sub
adc
pop
jg
adc
xor
clc
aas
in
jg
add
xor
mov
cmp
int3
add
repz
in
lds
inc
cmc
sbb
dec
pop
fbstp
jns
mov
jno
pushl
lret
loopne
call
mov
sti
loopne
adcb
inc
pop
pusha
test
jg
or
pop
pop
and
xor
push
pop
js
test
jno
ljmp
repnz
jle
mov
aam
add
add
sbb
lods
nop
stc
sbb
mov
gs
movsl
cltd
sub
or
mov
mov
scas
xchg
es
cltd
add
cmpsb
clc
xchg
fcoms
outsl
fmuls
dec
xor
stc
sub
cltd
inc
or
xchg
push
xor
jnp
lsl
and
in
inc
aas
pop
in
lock
test
mov
cmp
jnp
inc
jecxz
and
roll
mov
and
stos
mov
sub
cmp
xor
aam
stos
leave
mov
mov
fldl
jae
jnp
lret
iret
inc
cltd
lea
outsl
les
rcll
adcl
popa
aaa
mov
push
andl
in
xor
imul
inc
xchg
das
std
jne
mov
xchg
cmp
mov
jecxz
sbb
imul
bnd
mov
out
aas
enter
fucomi
imul
pop
ss
cmpsl
cwtl
loopne
sub
stos
sarb
add
dec
cmp
cmc
mov
sbbb
sub
mov
std
shlb
in
and
pop
outsl
lret
sub
scas
and
xchg
and
jns
adc
sub
mov
or
arpl
lret
test
mov
xchg
jge
push
popf
xor
jg
pushf
lock
push
sbb
mov
mov
je
pop
movsl
int3
cs
adc
in
mov
jmp
divb
and
inc
loopne
xchg
inc
mov
mov
pop
pop
and
cmpsl
test
jnp
loope
or
sti
add
pop
adc
or
out
inc
lock
mov
mov
adc
mov
xor
lcall
repnz
lds
sbb
lods
dec
fistpl
imul
adc
cmpsb
insb
cmp
popf
aaa
fdivs
fbld
cmp
pop
int
aaa
add
pop
mov
mov
pop
nop
stos
jle
sbb
out
bsf
sub
dec
mov
imul
stc
mov
ljmp
ret
dec
popf
mov
into
fistps
stos
or
arpl
or
ljmp
mov
or
xor
ja
pop
lock
cmp
mov
cwtl
pushf
mov
mov
add
dec
jnp
sbb
fwait
icebp
dec
jbe
arpl
andb
pusha
jnp
pop
lcall
pusha
sbb
inc
cmp
cmpb
jp
sbbl
xor
popf
in
push
pop
mov
je
inc
xor
std
inc
cld
or
std
shr
dec
cmp
inc
popa
inc
fistpl
loop
mov
add
fisttps
call
jo
lock
add
shrl
and
mov
jns
push
in
test
and
jecxz
xchg
mov
rcrl
mov
dec
adc
cmp
or
inc
adc
sub
xchg
jbe
xchg
push
mov
in
mov
lea
test
vsubpd
repz
inc
pop
pop
insl
test
pop
sbb
mov
jp
scas
push
pop
enter
fsubp
int
mov
jo
lahf
add
pop
sti
iret
cli
icebp
je
sub
loopne
inc
sahf
and
addr16
pop
xchg
xchg
jle
xor
add
and
mov
jo
loop
shl
jl
jl
mov
push
and
mov
lods
push
mov
xchg
adc
add
out
sub
ret
dec
or
add
aas
ret
jne
mov
push
adc
jbe
ja
je
adc
into
adc
xchg
movb
or
sahf
mov
jge
in
in
insb
imul
sub
or
incb
push
stos
pop
arpl
dec
push
push
sub
mov
roll
in
psubb
mov
jbe
push
fs
mov
adc
sti
cmp
or
jge
cmp
ret
leave
xor
sub
add
mov
mov
icebp
enter
out
sbb
fldl2t
xor
sub
test
xchg
fidivl
repnz
add
ds
mov
adc
push
stos
jmp
repz
insb
subb
mov
or
shlb
ret
cmpsl
adc
or
fs
sahf
dec
fisttpl
les
stos
dec
mov
pop
mov
dec
jb
js
test
xor
mov
xchg
jmp
pusha
cmpsb
repnz
xchg
dec
ret
shlb
xchg
push
cmp
lea
hlt
cltd
fs
int
and
sbb
dec
sub
out
jg
inc
test
cmp
cmp
lods
xchg
shll
dec
movsb
mov
lods
mov
add
jno
pushl
xor
imull
push
ljmp
cmpb
stos
gs
dec
inc
or
xor
in
and
lret
test
mov
push
aad
cmp
cmp
hlt
rcrl
outsb
stos
cmp
jg
dec
ret
xchg
mov
lcall
ja
movsl
aam
leave
fildl
push
mov
xor
mov
nop
in
adc
iret
xor
in
outsb
xlat
add
xchg
addl
lcall
pslld
out
pop
inc
add
fldt
sbb
lock
cmp
into
lret
or
xor
jb
bound
pushf
lods
sbb
std
out
mov
loope
iret
xchg
adc
mov
loopne
and
inc
movsl
mov
hlt
add
inc
cltd
subl
push
and
xchg
xchg
cld
mov
in
jb
ljmp
jge
call
data16
push
iret
shl
lods
push
lahf
stos
nop
mov
pop
daa
fs
stos
div
mov
ja
xchg
negl
idivl
out
cli
int
push
inc
adc
sahf
into
mov
xchg
cmp
sub
imul
lods
movsl
and
test
repnz
adc
icebp
aad
and
push
jbe
or
imul
in
mov
sbbl
adc
sub
push
ret
xchg
jg
mov
cmp
push
cmc
xor
repnz
fwait
test
test
mov
out
pop
xchg
js
fwait
cmpl
lret
xor
xchg
sbb
mov
addr16
cwtl
lret
jg
pop
pop
push
scas
mov
sub
and
in
push
jle
das
mov
idivb
push
jl
mov
clc
dec
cmp
jecxz
fldpi
push
jae
and
es
xchg
dec
add
in
mov
sti
sbb
iret
mov
xor
das
cmp
sub
sub
test
es
dec
push
int
mov
loope
mov
cmpsb
jno
cmp
insb
dec
test
das
jae
int3
in
ret
aaa
push
cmpsl
popa
jg
lods
iret
mov
sbb
imul
ja
popf
or
lods
insl
iret
push
test
sub
fistpll
int
jne
outsb
dec
je
xchg
fstps
push
jb
xchg
xchg
adc
or
mov
sbb
and
test
pusha
leave
out
pop
add
jge
fadds
mov
test
popf
and
xor
inc
mov
idiv
or
push
xchg
rorl
cmpsb
mov
dec
je
hlt
adc
rcll
dec
fiadds
jg
aaa
dec
daa
aas
je
xor
jbe
cld
rcrl
jmp
movsb
add
jnp
pusha
ljmp
inc
mov
adc
and
and
add
cmp
or
adc
sub
test
sbb
iret
cld
in
cmpsb
test
idivl
inc
shrl
push
scas
lahf
and
repnz
es
and
sub
std
mov
sub
jp
inc
cltd
and
mov
inc
sbb
mov
cmp
insb
pusha
test
mov
iret
cmp
mov
fistpll
lods
push
xchg
sbb
push
int
dec
stc
in
pop
mov
imul
or
push
lea
xlat
ret
daa
mov
in
fsubrs
sub
das
xchg
jno
into
aad
cmp
xchg
inc
cld
or
sbbb
and
mov
dec
or
xor
hlt
mov
cmc
xchg
hlt
push
stos
in
mov
inc
inc
lock
dec
push
pop
icebp
mov
adc
xor
push
push
addl
dec
popa
popf
inc
xor
pop
lods
dec
scas
pop
jle
adc
lods
inc
xchg
xchg
adc
push
mov
xchg
mov
mov
xchg
ja
js
add
out
sarb
fwait
jne
mov
jecxz
pop
add
repz
scas
mov
loopne
cmp
lahf
lods
jecxz
jae
sbb
xorb
jl
cmpsl
dec
inc
mov
out
xchg
cltd
fbstp
mov
mov
fucomp
fildl
aam
pop
out
dec
mov
stc
and
dec
and
aad
mov
in
add
movsb
dec
sbb
and
lahf
inc
fidivs
je
xchg
inc
rcrl
nop
lahf
jmp
pop
mov
ja
inc
aad
push
ja
cmp
pop
xor
mov
scas
xor
jle
jmp
imul
dec
add
iret
mov
and
out
xchg
jbe
pop
inc
or
pop
lock
mov
in
xor
mov
bound
orl
xor
in
stc
xlat
jmp
jb
out
lret
rcrl
pop
xchg
dec
pop
mov
jle
mov
inc
push
jb
pop
sub
fists
mov
push
ljmp
jle
mov
mov
insb
out
ljmp
xchg
dec
aas
test
out
out
push
push
adc
int3
and
inc
imul
popf
mov
jbe
mov
hlt
insl
sub
test
repnz
jae
inc
je
negb
cld
outsb
jo
je
sub
fidivrl
gs
jg
in
and
add
andb
adc
cmp
roll
sahf
stos
mov
call
mov
push
int
or
fisubrs
jae
mul
jle
pop
and
mov
fidivrl
or
daa
sbb
sub
xor
js
xor
and
sub
jae
sarb
mov
test
pop
das
sahf
imull
popf
or
sahf
movsb
cs
add
addr16
arpl
xor
into
push
mov
mov
movsl
push
mov
cmp
scas
ret
cmp
rcrl
push
dec
xlat
cmp
dec
stos
cmp
outsb
sub
cmp
add
adc
enter
shll
mov
repnz
push
add
or
push
sbb
in
mov
sbb
or
adc
adc
scas
mov
andl
sub
imul
ss
leave
sar
or
jae
jnp
push
outsl
mov
test
sbb
adc
int3
stc
roll
and
xchg
push
mov
ds
add
mul
dec
mov
rcll
jle
les
and
inc
jp
xchg
mov
cmc
aad
mov
mov
inc
inc
jns
dec
push
add
pop
mov
gs
add
xchg
xchg
or
sub
in
or
jb
push
push
mov
int3
int
insb
jle
call
enter
in
jmp
ljmp
inc
sub
jb
subb
shl
out
inc
add
mov
icebp
xchg
in
es
test
loop
test
or
pop
pop
fidivs
xorl
std
sti
push
int3
mov
and
aas
push
repnz
shll
mov
imul
ljmp
sti
or
fcoms
or
inc
insb
test
aaa
clc
sub
pushf
ret
lret
mov
out
movsl
add
jl
cmp
mov
stc
fwait
lods
scas
sbb
add
orl
mov
iret
cmc
jmp
je
jp
mov
pushf
cmpsl
stos
bnd
in
decl
and
mov
adc
je
aaa
xchg
loope
cmpb
outsb
sbb
ja
xchg
int3
add
mov
or
ds
push
test
push
jbe
leave
sub
sub
popa
push
out
push
dec
push
in
sub
imul
xchg
test
or
cli
jmp
push
sbb
lock
fistpll
push
das
mov
shlb
packsswb
push
sub
dec
fildl
pop
cs
fs
lods
les
mov
jnp
or
ret
mov
lods
cmp
xchg
xchg
stc
push
fistpl
jnp
jns
mov
pop
cmp
xor
mov
in
aad
dec
cmp
aad
das
inc
push
test
loopne
adc
push
dec
cmp
aaa
push
bnd
add
fdivrp
movsl
xor
es
sub
lds
xor
pop
std
adc
mov
push
or
mov
adc
dec
inc
mov
jno
icebp
push
jae
fsubs
or
aaa
inc
or
xchg
sti
movl
fsubrs
inc
aad
push
sti
inc
rorb
fisubl
inc
mov
sbb
cmp
add
lock
lods
add
add
mov
xchg
iret
pop
inc
enter
repz
int
sub
mull
and
andl
xchg
scas
xchg
mov
sub
ss
cmc
cld
js
jo
or
test
mov
sbb
leave
les
push
addr16
push
je
fwait
adc
mov
sub
pop
adc
repnz
fldenv
sarb
sub
ret
push
out
jo
dec
dec
mov
xchg
adc
xor
insb
push
cld
gs
bound
sbbb
add
sub
cmp
rorb
imul
inc
mov
jbe
rcrb
outsb
jae
sahf
push
into
jno
mov
iret
outsb
sub
shll
sahf
jmp
test
add
sbb
loope
xorl
dec
inc
jp
fnstenv
cltd
nop
lods
adcl
xchg
sti
out
and
movsl
stc
xchg
push
rcr
stos
inc
mov
mov
jmp
scas
mov
pop
pop
adc
mov
jae
je
lock
jmp
sub
sbb
rolb
movsl
xor
push
movb
jl
mov
ret
rol
movb
in
in
mov
cmp
jg
jg
mov
mov
mov
cwtl
rcll
repz
jmp
aas
fistpl
pop
mov
loop
loop
push
jae
xor
mov
xlat
cmp
fadd
repnz
pusha
jbe,pt
xchg
in
pop
sbb
adc
test
ja
and
jns
inc
inc
add
fistpl
add
mov
mov
lret
mov
add
gs
cmp
cmc
mov
lahf
add
lds
dec
push
lods
mov
out
jge
mov
inc
and
filds
and
jae
test
shlb
xchg
jb
loop
nop
es
xor
jge
sbb
repz
fcmovnbe
stos
mov
xchg
pop
stos
data16
mov
cmp
dec
dec
mov
dec
xlat
inc
repz
jge
add
stos
fwait
sbb
cmp
jns
inc
jne
inc
sbb
lds
mov
sub
gs
push
inc
xchg
xchg
in
and
in
jl
and
fwait
mov
into
bound
push
push
xlat
pusha
inc
or
mov
mov
sbb
jne
rorl
dec
clc
cmp
or
xchg
pop
inc
or
notl
ljmp
mov
mov
sbb
addb
out
inc
call
icebp
jno
out
testb
in
andl
mov
pop
cmp
insb
lock
pop
or
inc
jle
loope
lret
mov
icebp
push
mov
dec
push
and
sti
mov
cmc
lods
adc
xchg
popf
sub
das
ja
jns
and
sahf
xchg
xchg
cld
cli
cmp
xchg
jbe
lret
add
sub
fidivs
rorl
sbb
shrb
push
int3
push
jnp
jmp
push
andb
outsb
add
cmpsl
sub
mov
insb
cli
jb
xor
pop
pop
dec
xor
cli
popf
sarl
es
fs
scas
and
xchg
popa
adc
push
lret
pop
jg
pop
shr
push
pop
dec
jnp
stos
push
sbb
inc
xchg
or
rorl
lret
bound
sub
sub
cmpsl
shlb
out
cmp
mov
jge
inc
adc
fwait
jno
and
mov
push
sub
or
or
rcll
test
pusha
sub
fwait
cmp
pusha
and
xor
jmp
pusha
movsl
negb
loopne
sub
jb
xchg
shrb
adc
adc
xor
mov
mov
aad
add
add
cmp
jge
imul
popf
push
mov
shlb
fsubrl
dec
xchg
dec
inc
adc
jmp
mov
mov
divb
cmp
gs
enter
mov
and
ds
lret
pusha
inc
xchg
fidivs
icebp
fs
stc
rclb
stos
jle
lea
adc
or
shlb
jp
pop
cli
sub
mov
fdiv
adc
and
jp
mov
mov
enter
test
cmpsl
mov
leave
sub
pusha
or
es
cmpsb
testl
xor
push
dec
jae
or
push
in
and
movsb
dec
nopl
adc
lea
xchg
int3
in
pop
mov
lds
fsub
lds
lock
mov
pop
in
addr16
subl
or
sbb
pop
mov
sbb
mov
mov
dec
jle
jne
xor
or
xchg
addb
in
ja
test
stc
sub
test
sahf
clc
lods
movsb
sbb
mov
imul
enter
outsl
call
add
shr
ds
js
adc
add
stos
mov
mov
rorl
enter
add
popf
icebp
mov
mov
inc
into
add
inc
repz
addl
addb
push
cmp
xchg
pop
inc
ss
sti
out
roll
mov
in
test
jge
push
cmp
cmpl
pusha
mov
lock
sub
gs
sbb
daa
cs
es
imul
mov
adc
shlb
xchg
or
xor
aad
mov
stc
or
rcll
xchg
xorl
adc
fldt
fstl
and
pop
pop
sub
in
in
mov
int3
mov
sets
adc
fstpt
icebp
mov
mov
imul
insb
pop
xorb
aam
mov
test
xchg
sti
lret
inc
cmp
das
shll
adc
sahf
mov
mov
dec
jnp
les
add
mov
pop
inc
dec
inc
mov
ljmp
popa
arpl
decb
inc
jbe
movsb
imul
stc
mov
insb
into
loope
addr16
and
fsub
adc
push
insl
pop
out
fcoms
mov
and
mov
bound
andl
cmp
dec
and
cs
cmc
fcoms
jp
mov
fwait
sub
and
mov
loope
iret
fdivs
or
js
enter
rorb
mov
imul
into
push
sub
subb
push
aad
jl
xchg
dec
dec
xor
pop
loop
push
cmp
jae
fidivl
mov
inc
loope
out
mov
sbbb
mov
mov
popf
int
mov
adc
adc
out
xchg
pop
adc
rcrl
mov
and
rorl
ret
dec
mov
pop
aas
jns
cmp
push
or
rorl
outsl
aad
cmc
dec
push
inc
bound
dec
xor
mov
lods
test
sub
fcmovne
loop
int3
and
mov
mov
or
jno
popf
lea
pushf
lea
lahf
outsl
dec
or
jg
push
mov
pop
push
int3
inc
xor
leave
sbb
addr16
lcall
add
sahf
adc
shrb
inc
in
pop
fsubr
outsl
jne
sub
sub
jno
iret
xchg
dec
loopne
adcb
adc
or
addr16
push
scas
sub
xcrypt-ofb
cmpsl
insl
test
cli
add
dec
ss
sub
mov
les
mov
fisubl
rclb
loop
ret
ret
inc
and
mov
jne
mov
aam
xchg
aad
addl
push
dec
shll
cmp
pop
pushf
lcall
dec
mov
push
and
mov
sti
mov
inc
push
rcll
pop
add
jecxz
sub
lods
mov
lahf
jne
push
mov
fstps
inc
pop
outsl
xlat
or
cmp
mov
insb
pop
push
sbb
lea
cld
push
mov
dec
pop
xchg
adc
sti
out
xchg
push
shl
clc
mov
aam
ret
mov
sbb
jg
ljmp
pop
rol
jp
adc
dec
cwtl
int3
cmp
cmp
jbe
out
cld
mul
mov
hlt
xchg
inc
mov
mov
dec
and
push
dec
fimull
shl
mov
xchg
mov
mov
push
adc
or
fstps
add
bound
jno
mov
lea
ljmp
pop
jg
nop
fcoms
dec
push
dec
sbbl
fmuls
xorl
mov
xchg
mov
in
mov
inc
scas
out
outsl
ret
mov
xchg
test
repz
les
inc
add
rcr
jg
adc
testl
fxch
popa
in
in
cmpsb
fwait
gs
rol
sbb
out
enter
inc
lods
pusha
mov
nop
push
dec
fimuls
scas
push
loopne
add
insb
mov
inc
and
fdivp
mov
rclb
mov
frstor
repnz
sbb
sbb
mov
inc
push
repz
fcoml
das
in
lret
xchg
pop
sbb
xchg
push
jo
xor
nop
jnp
push
push
sbb
inc
dec
ja
cmp
pop
or
fstpt
aaa
mov
lcall
es
and
add
push
in
push
xchg
inc
shr
lret
ljmp
in
mov
das
pop
dec
jno
xchg
in
lea
sub
mov
xor
jmp
fbstp
sti
lret
cmpsb
outsl
cmp
push
mov
repz
dec
xor
arpl
jg
jmp
xor
in
push
pop
rcll
push
imul
adc
pop
fnstenv
pop
nop
dec
sahf
in
mov
popl
push
adc
xchg
push
rcrl
stc
sub
xor
mov
xor
movsl
xchg
popf
mov
mov
jle
shr
mov
or
in
xchg
mov
test
mov
in
jecxz
dec
lods
mov
cmp
xor
adc
popl
mov
addr16
mov
les
icebp
inc
and
cwtl
dec
adc
movsl
lock
shrl
out
leave
mov
push
cld
out
jge
shlb
sub
outsl
xor
dec
fs
loop
data16
sub
aaa
sbbl
scas
loope
pop
jne
divb
adc
mov
pop
mov
jmp
in
movsl
lods
sub
iret
test
sub
out
adc
and
mov
daa
stc
je
jnp,pt
sbb
push
push
out
sahf
push
cmp
ja
and
mov
dec
add
addr16
cmp
pop
pop
movsb
xor
ss
fwait
stc
push
in
pop
adc
movsl
mov
add
or
insb
mov
out
lcall
fdivl
ss
mov
imulb
mov
sbb
enter
sub
das
mov
dec
mov
hlt
int3
std
jne
mov
fists
int3
in
out
decl
add
pop
xchg
insl
xor
push
pusha
ret
inc
xchg
test
iret
mov
lcall
test
mov
inc
mov
push
add
xor
xor
add
popa
stos
and
cs
jae
outsb
adc
xchg
outsb
adc
pop
sub
adc
push
mov
pop
xchg
repz
mov
xor
lea
adc
sub
outsl
ja
push
xor
sub
test
cltd
xor
xchg
pop
pushf
cwtl
aas
movd
sbb
int
testl
sub
adc
dec
inc
jg
cld
cs
adcb
lcall
fistl
rol
cmp
add
cmc
aad
test
push
inc
and
addl
scas
cmp
sbb
les
sbb
dec
cmpsl
jl
mov
cltd
and
mov
xrelease
cmp
mov
mov
pop
cmp
xor
test
push
jmp
cmp
pop
mov
lcall
sbbb
faddl
or
xlat
or
mov
jb
int
push
fstpl
inc
movsb
xchg
test
int3
in
add
or
hlt
cmp
push
aad
cld
pop
cltd
sti
ja
cmp
out
cmpsb
aam
test
push
out
dec
sarb
sbb
fmuls
or
mov
out
xchg
adc
cs
in
cwtl
stos
cwtl
jns
testb
inc
rcrl
gs
mov
cmpsb
push
xchg
mul
dec
loope
dec
repz
pushl
dec
stos
sbb
fcmovbe
pushf
nop
aaa
scas
xor
xorb
xlat
ret
pusha
push
lcall
xor
xchg
test
push
cmp
push
rcrb
int
push
dec
mov
add
js
lock
mov
into
sub
ficompl
and
sarb
fcoms
xor
jecxz
shll
push
sub
cmp
jle
mov
stos
js
stos
push
and
adc
aad
ds
cmp
pop
test
aas
adc
stos
xchg
pop
push
sub
cmp
sahf
inc
insb
cmpsb
and
push
xor
cmp
push
and
aas
clc
test
out
lock
sarb
ret
push
jg
push
and
imul
add
rolb
shlb
sarl
xor
push
push
call
outsl
in
ljmp
mov
out
nop
jge
push
adc
mov
test
nop
adc
inc
pop
loop
cmpsb
aaa
and
push
sbb
cmpsb
insl
pop
push
mov
jle
xchg
out
subl
pushf
cmp
or
clc
cmp
xor
sbb
pop
jo
ljmp
xchg
xor
mov
mov
sub
lahf
or
inc
add
cmp
cmp
push
sbb
or
adc
fidivrs
and
mov
dec
push
xchg
sbbb
lods
in
cmp
add
cltd
jmp
mov
sahf
mov
push
mov
call
hlt
cmp
mov
push
sub
push
inc
repnz
or
dec
cmp
inc
or
mov
mov
mov
mov
insb
or
xor
hlt
idiv
or
in
jno
aas
adc
dec
data16
nop
repnz
popa
fnsave
push
movsb
add
decl
cmpsl
call
std
lret
iret
mov
ror
movsb
dec
mov
pop
repz
imul
ret
xor
or
sub
into
ficompl
adcb
in
ret
ds
aad
mov
roll
pop
push
sub
add
sub
push
mov
iret
xchg
arpl
add
inc
fucomip
inc
faddp
lret
mov
lret
dec
push
call
jnp
shll
jo
mov
mov
dec
pusha
enter
mov
push
lods
push
pushf
push
jge
lds
xorl
mov
mov
loop
mov
inc
cvtdq2ps
out
icebp
je
cmp
push
mov
in
push
pop
test
int3
dec
shl
push
mov
cmc
shlb
flds
add
xchg
into
out
mov
fcomi
out
daa
sub
xorb
lods
xor
sbb
mov
sub
cmp
in
and
movsb
dec
les
stc
jmp
cmpsl
dec
scas
cmp
mov
cwtl
fsubrl
mov
xchg
xlat
aaa
mov
lret
sub
fcmove
loope
rcrl
aam
or
fucom
pop
cmpl
mov
push
lret
mov
fdivrs
cli
iret
inc
xchg
insb
xor
cmpsl
xlat
mov
pop
lods
sbb
jo
dec
popf
mov
decb
sbb
stc
or
push
out
inc
xor
pop
push
inc
or
pop
loop
cmp
mov
push
test
or
xor
dec
lret
loope
push
xchg
mov
bound
les
lret
sbb
jp
sub
add
and
dec
mov
mov
cmpsb
mov
and
imul
mov
pushf
add
outsb
xchg
or
clc
sbb
js
sub
cs
push
jge
stc
xchg
adc
pop
js
repz
cmpsb
test
aad
pop
imul
and
insl
add
cmpsb
in
aam
mov
push
pop
mov
cwtl
xchg
pop
gs
repz
adc
jle
cmp
jne
sub
jmp
test
push
sbb
cld
imul
decl
jp
popa
out
inc
ret
and
out
popaw
shlb
mov
dec
stos
mov
inc
lret
mov
cli
imul
mov
pop
mov
repnz
dec
cld
push
ret
out
icebp
sub
idivl
add
mov
xchg
jle
sub
xor
pop
pusha
ds
in
bound
out
mov
pop
pop
xor
add
in
fisubrs
popf
xchg
lret
movl
pop
cmp
cmove
jb
cmp
test
ja
pop
shll
and
arpl
sbb
jp
aaa
fcoms
ds
dec
sbb
mov
push
jmp
push
push
inc
hlt
jecxz
stos
popf
iret
dec
movb
mov
ret
sbbb
cltd
pop
sbb
loope
jns
xor
jne
sti
cltd
or
push
arpl
popa
mov
mov
or
add
pop
andb
and
jmp
in
jmp
dec
and
cli
and
movsb
or
fmulp
mov
hlt
fbld
loop
ljmp
sbb
xlat
call
adc
or
push
dec
push
push
xor
das
jg
adc
xor
lods
in
cmpb
add
dec
push
or
xchg
xchg
repnz
jp
call
stos
das
and
aam
ror
cmp
mov
fldt
cmp
mov
cmp
stc
xorl
push
jne
rcrl
adc
fprem
mov
adc
aas
mov
fisttpll
inc
dec
dec
jmp
push
add
pop
cwtl
dec
pop
ds
out
mov
popa
movsb
movsl
outsb
popa
repnz
push
clc
stos
or
es
mov
stos
jbe
and
cmc
iret
aam
sub
inc
inc
xchg
xchg
mov
xchg
in
ja
mov
vpcmpgtb
adc
nop
scas
jmp
int
mov
enter
in
ss
rorl
mov
push
sub
ror
sbb
adc
gs
xchg
ret
xor
outsl
repz
mov
out
pop
inc
movsb
sub
jae
fldt
sub
sbb
and
mov
xlat
icebp
clc
jl
add
push
add
push
add
xor
xor
inc
loope
imull
adc
into
ror
lcall
aam
das
out
stos
jae
pop
pop
fadd
pop
mov
sub
adc
ljmp
add
jmp
add
push
ljmp
mov
jge
out
or
mov
adc
mov
sub
sbbl
push
rcrl
aad
sti
push
cmp
mov
jp
outsl
mov
dec
data16
enter
in
add
dec
push
push
repz
or
mov
jno
pop
mov
xchg
adc
mov
aam
jne
and
lds
popf
sub
in
mov
sub
in
jmp
in
dec
sbb
mov
iret
or
push
mov
xchg
fbld
xchg
aam
jae
xchg
push
dec
ret
mov
pop
and
jg
sarb
sbb
or
mov
pop
test
cmpsb
inc
sub
mov
in
and
sbb
jo
dec
sub
inc
lcall
mov
insb
sub
mov
scas
or
daa
inc
mov
or
mov
sbb
dec
in
or
imul
push
inc
ljmp
icebp
dec
ffreep
fs
out
lds
push
sbb
pushf
sbb
adc
mov
jmp
jo
iret
insl
jne
xchg
mov
in
cli
popa
daa
cmpsb
adc
aas
pop
xchg
fisttps
std
out
mov
xchg
in
fnstcw
and
inc
leave
sbb
mov
je
movsl
arpl
movsb
dec
les
call
ja
aad
nop
leave
cmp
lcall
push
or
and
enter
lahf
xchg
mov
rcrl
mov
xchg
pop
cmp
test
mov
mov
ret
xchg
pushl
mov
jae
dec
inc
lods
mov
sbbb
repz
repnz
cld
push
insl
mov
pop
mov
in
pop
xor
dec
movsb
mov
addl
sub
sbb
pusha
test
add
push
mov
fdivrl
lret
inc
loop
ljmp
lods
clc
pop
xor
pop
pop
in
cld
pop
add
sahf
jle
mov
push
iret
jle
test
imul
cld
clc
inc
outsl
popa
cwtl
jmp
and
cmp
hlt
xchg
scas
xchg
clc
pushf
mov
dec
inc
sbbl
push
bound
repnz
popf
sbb
les
sub
push
pop
mov
fistl
xchg
fwait
pop
outsl
jmp
cmp
pop
je
sub
bound
out
add
cmpsb
loope
aad
leave
push
outsl
sbb
adc
mov
cmp
or
sub
pop
into
arpl
mov
bound
cli
in
dec
push
push
mov
fwait
leave
sarb
dec
adcb
or
aam
in
fcmovbe
mov
dec
enter
cmp
bound
pop
push
rcr
cmp
sbb
adc
mov
lahf
loope
jmp
mov
sub
mov
mov
adc
push
xor
sbb
jno
out
repz
jo
and
pop
hlt
pop
hlt
cmpsb
popf
or
mov
lock
mov
out
inc
push
int3
sub
incl
push
push
inc
in
sti
cmpsb
lret
cmp
sbb
xchg
fsubl
leave
inc
dec
adc
movsl
xchg
loopne
cmp
inc
inc
mov
add
lret
insl
pusha
rorb
push
or
pushf
jne
rcr
pushf
in
shlb
and
mov
test
sbb
pop
es
jmp
or
fistl
loop
xchg
and
movsl
add
sbb
cltd
jnp
push
push
stos
sbb
pop
pop
hlt
cld
enter
xor
jp
jge
xor
roll
jecxz
sahf
in
mov
pop
ret
and
bound
mov
jo
jae
stos
mov
ljmp
sub
leave
insb
and
push
dec
inc
fists
mov
dec
addr16
fimull
push
mov
sbb
sbb
es
iret
inc
sbb
jbe
test
xor
aas
push
test
mov
xchg
divb
nop
push
push
and
sti
stos
or
ja
push
xor
loope
push
jb
sti
fldl
push
or
loopne
mov
mov
mov
dec
fstpl
sub
dec
shll
mov
icebp
xor
pop
adc
dec
and
cmpsl
cltd
jle
xor
inc
or
inc
sahf
sbb
imul
inc
cwtl
jae
push
in
into
out
jmp
faddl
mov
loop
sub
push
sbb
fwait
ljmp
movsb
adc
mov
addr16
mov
mov
pop
movb
in
push
arpl
popa
and
ret
pop
pop
mov
mov
pop
andl
aas
add
ds
nop
js
pop
or
jmp
jno
xlat
test
ja
xchg
lret
mov
sbb
shlb
push
loope
mov
iret
test
lret
inc
xchg
scas
or
mov
add
pop
imul
push
stc
xor
xchg
rcl
popf
add
out
or
jmp
rclb
mov
int3
add
and
jb
fadd
push
sbb
cld
jae
mov
imul
jle
inc
sbb
adcl
sub
enter
xchg
adc
mov
adc
jb
lret
mov
call
jb
shll
and
jns
add
xor
iret
test
stos
inc
imul
popf
in
cmp
aad
dec
sub
fdiv
or
and
cmc
cmpl
xor
jl
cli
lret
add
mov
pop
pcmpgtw
loop
xchg
rolb
movsl
repnz
rcrl
mov
pop
aas
andb
pop
das
dec
push
frstor
fsubrs
add
jle
push
push
dec
sub
fwait
out
je
jg
push
or
xchg
push
xchg
mov
jno
fsubl
inc
pop
test
pop
outsl
rcll
fidivrl
pop
or
xlat
aam
mov
add
sub
dec
hlt
sbbb
pop
xor
sbb
inc
mov
icebp
pop
and
insb
xor
rcl
shlb
jle
pop
xchg
sub
sbb
xchg
lock
push
lods
test
in
sbb
jl
ja
jae
xchg
lea
pop
in
cmc
mov
fists
call
flds
dec
cmpsl
lret
icebp
ljmp
dec
mov
push
ss
sahf
or
dec
mov
roll
push
nop
testb
adc
inc
es
push
fidivrs
mov
mov
cmp
sahf
out
mov
cmc
jne
sub
sbbl
fwait
sbb
movsb
pop
adc
xchg
mov
mov
iret
push
pop
jne
test
xchg
push
inc
shrb
adc
stos
mov
xchg
add
or
ss
std
mov
push
mov
stos
orb
sti
mov
jecxz
sbb
pop
inc
inc
test
cmovne
sub
sbb
xor
das
push
movsl
cmpsl
lret
les
mov
pop
xlat
or
cmpsb
push
cmp
lea
fisubs
and
xchg
aam
cmp
mov
xlat
in
jmp
jb
negl
push
bound
cmpsl
sub
ja
add
aad
sbb
xchg
out
test
xchg
add
aad
hlt
lods
xchg
sub
pop
stc
lods
jo
mov
mov
mov
insl
jl
adc
idivl
rorl
inc
inc
in
bnd
inc
aas
cmp
repz
and
adc
cld
je
lods
jae
or
pop
out
fnstcw
outsl
sub
orb
xor
pop
xchg
and
aad
mov
pop
sbb
mov
push
jecxz
addr16
add
mov
mov
inc
aaa
mov
je
mov
xor
es
outsb
cmpsb
mov
push
gs
push
pop
push
mov
enter
dec
xor
pop
in
cmp
sarb
repz
adc
adc
push
inc
mov
adc
out
xor
mov
xchg
jns
icebp
xchg
repz
xlat
mov
enter
fildll
call
mov
sbb
cmpsb
cmpsb
ljmp
sahf
aad
push
mov
inc
mov
inc
or
adc
sub
ret
addr16
cld
push
jecxz
cs
xor
push
aas
jae
in
dec
cmp
ret
pop
cmc
ds
lods
pop
leave
or
shr
mov
in
sub
int3
dec
jo
cmp
aas
hlt
push
lods
cmp
popa
xorl
test
sbb
or
fldenv
cltd
adcl
mov
push
mov
mov
add
sbb
shll
jbe
push
cmpb
mov
out
mov
cmc
in
jo
jge
aaa
and
adc
cmc
inc
and
inc
loop
daa
stos
fstps
and
jg
outsb
adc
test
cmpsl
push
sarb
jge
lcall
cltd
xchg
insl
sub
pop
incb
xchg
pop
jecxz
and
sbb
icebp
sti
shl
ljmp
mov
pop
mov
mov
xchg
mov
and
fists
adc
mov
int3
das
or
adc
sub
fcoms
jge
fwait
or
mov
lret
lods
loopne
out
insl
aas
push
xchg
jg
out
shll
movsb
es
imul
xchg
rcll
jo
jge
mov
xchg
fdivr
mov
pop
jle
mov
cmpsl
daa
sbb
or
in
fcmovb
mov
mov
mov
add
cwtl
pop
les
or
enter
aam
mov
popa
sub
or
mov
jl
call
mov
in
movsl
in
lret
dec
imul
mov
test
and
pop
orl
pop
je
push
fdivl
mov
jl
pop
icebp
pop
mov
fldcw
xchg
push
std
je
add
sub
insb
mov
into
sub
je
mov
push
fdiv
sub
adc
mov
fidivrs
out
lds
movsl
adc
aaa
mov
pop
call
inc
stos
stos
addr16
mov
adc
fucomp
adc
push
xor
mov
lods
mov
out
push
repnz
inc
add
xchg
fsub
adc
jbe
fistps
aad
add
out
push
js
ds
incl
imul
push
jmp
fwait
push
and
xchg
cmpsl
adc
enter
adc
out
aad
cld
ja
mov
fildl
clc
sbb
adc
inc
popa
push
xor
jno
mov
or
sahf
mov
sbb
subl
mov
test
and
or
inc
ret
movsb
sub
ficomps
lods
pusha
lock
sti
shl
aaa
pop
jmp
lds
arpl
cltd
add
pop
sbb
xor
pusha
das
fcmovnu
jp
mov
pop
lret
pop
aas
mov
mov
enter
dec
pop
mov
push
mov
mov
xchg
jge
fbld
push
or
push
dec
and
pop
mov
xchg
fildll
or
idiv
mov
sub
xor
loopne
sub
sbb
sub
mov
movsl
add
dec
sub
xchg
and
int
shlb
add
out
add
ret
fs
add
mov
push
jecxz
push
aas
stc
std
int3
cmpsb
push
andl
xchg
xor
outsl
sti
jg
xchg
cmp
mov
sub
jmp
je
pop
ret
jmp
mov
jnp
lods
xor
iret
repnz
jecxz
sarb
popa
or
int3
add
nop
jge
dec
pop
mov
push
and
aam
add
mov
push
ja
xchg
rorl
hlt
jp
push
movsb
pop
enter
push
mov
lahf
mov
ret
aad
cmp
or
mov
sarb
jl
test
mov
test
in
clc
jb
mov
mov
mov
cwtl
dec
adc
add
dec
cmp
inc
mov
movsb
ja
push
insb
callw
cmp
jae
cmpsl
inc
pop
in
and
sahf
sbb
dec
sbb
outsb
cmp
xor
jp
fcmovne
sbb
subl
imul
mov
sub
imul
loope
add
stos
sbb
jae
aaa
in
ret
shrb
shlb
outsl
aaa
bts
addb
dec
pop
pop
popf
add
mov
push
or
out
das
mov
jge
dec
mov
lock
icebp
inc
push
scas
jmp
and
dec
ljmp
and
and
fdivrl
mov
icebp
popf
ljmp
cmp
xchg
dec
push
cli
pop
mov
xchg
outsb
sbb
mov
sub
cld
sbb
repz
and
cli
inc
sti
fbld
daa
testb
int
faddl
pop
loope
sbb
and
adc
push
pop
push
inc
add
pushf
jne
mov
cmc
xchg
adc
movsb
inc
push
cmpsl
in
push
jle
test
and
dec
jb
mov
fnstsw
imul
stc
sub
adc
sbb
lock
dec
push
pop
clc
fdivr
add
xchg
or
xor
sbb
dec
pop
adc
xchg
cmpsl
cli
xchg
popl
cmp
aad
mov
movsl
data16
sub
jnp
lods
push
adc
push
dec
sub
and
mov
aas
cmp
jecxz
ja
xchg
test
test
andl
cmp
lea
into
pop
xchg
mov
add
or
movb
mov
xchg
jne
cwtl
add
cmpsb
push
mov
mov
or
ljmp
xor
nop
scas
outsb
dec
rorb
addr16
adc
fcmovu
push
push
xor
xor
outsb
lods
cmp
or
xor
pushf
lods
ss
fwait
bound
jge
jnp
mov
push
cmpsl
pop
sbbb
sub
pushf
sub
xchg
jne
and
mov
nop
test
pop
and
and
jae
mov
sbbb
lcall
adc
add
sub
adcl
fsts
mov
mov
sub
sbb
jp
mov
sbb
cmc
xchg
sbb
lret
cmp
stc
cmpsl
inc
paddw
psubusw
cmpsb
mov
pop
dec
insb
adc
mov
sbb
pop
inc
aad
int3
arpl
or
dec
mov
xchg
popa
add
dec
dec
pop
jb
jecxz
mov
cmp
mov
mov
xchg
sarl
int3
push
lds
dec
mov
out
fldz
imul
sahf
lcall
xor
insb
insl
xor
bound
adc
and
mov
jbe
mov
icebp
push
shll
lods
fmuls
sub
xchg
push
cmp
je
stos
orl
rol
shlb
sbb
out
test
cmpsb
xor
jge
ja
jae
aas
cmp
jle
dec
add
pop
scas
jp
pop
xchg
das
outsl
ret
or
ljmp
xlat
jl
xchg
adc
add
dec
fcmovnb
cmpsl
push
insl
call
add
sub
jge
scas
push
pop
cmpsb
test
jae
iret
sbbb
aam
jae
push
popf
push
xchg
pushf
inc
push
addr16
stc
divl
stc
lret
test
fdivrp
pop
and
or
adc
xchg
pop
fmul
fstpl
xlat
inc
daa
mov
ja
int3
pop
mov
xor
pop
dec
mov
pusha
int3
and
mov
xchg
lcall
loope
pop
sbb
cmp
decl
adc
pop
push
fildll
aad
decl
push
add
pop
sbb
fidivl
js
out
test
mov
xchg
in
arpl
fnstenv
imul
icebp
xor
pop
leave
mov
nop
inc
mov
sbb
mov
ds
inc
adc
insl
idivb
dec
ret
sbb
icebp
insl
mov
data16
in
pop
fs
sbbb
mov
mov
neg
int3
lret
das
mov
movsb
jb
stos
or
fidivrs
push
cmpsl
push
aas
jp
inc
js
mov
mov
fbld
xor
cmp
fistpll
jmp
mov
inc
inc
inc
sub
push
and
dec
jmp
cmp
mov
and
lcall
adc
inc
xlat
xchg
popl
xchg
mov
scas
sti
sbb
aaa
jo
int
sbb
loope
gs
mov
push
jae
pusha
lods
inc
jg
jle
jl
mov
pop
ja
movsl
xlat
mov
pop
xor
scas
mov
aas
xorb
cmp
mov
cmp
fs
xchg
test
sbb
or
int3
cld
dec
pop
loope
orb
jne
sbb
popf
cmp
xlat
in
mov
mov
adc
sub
in
xchg
sub
xor
xchg
test
sbb
fcomi
shr
loopne
fcompl
icebp
aas
test
movsb
adc
lea
das
or
or
pop
xchg
mov
inc
sahf
push
push
in
mov
enter
ss
and
jae
xchg
add
aaa
or
pop
popf
and
sbb
orb
xchg
adc
gs
xchg
popa
imul
or
cmpsb
out
pushf
addr16
stos
jp
test
pop
rcll
bnd
mov
popa
mov
mov
or
and
jae
sub
shrl
lret
loope
jo
cmpl
movsb
and
ljmp
mov
dec
fisubs
cltd
fwait
sbb
imul
aaa
test
test
fisubs
int
leave
pop
outsb
loopne
mov
ret
xchg
jmp
xchg
mov
stos
pop
sbb
mov
aad
outsl
mov
aad
pop
out
jecxz
icebp
test
outsb
cmpsb
xor
push
rcll
mov
sub
mov
jl
jmp
ss
jecxz
jl
lahf
in
push
add
sbb
pop
or
sub
push
stc
xor
jb
imul
jge
lods
nop
push
iret
hlt
dec
std
in
and
std
gs
xor
lds
lods
js
and
xchg
pop
pop
inc
mov
lcall
mov
and
xor
fildl
inc
imul
dec
and
sub
ds
daa
test
inc
sub
popa
or
dec
mov
push
xor
addr16
jge
pop
sahf
dec
dec
jmp
sbb
andnps
sbb
loope
adc
add
jl
mov
push
push
sub
push
inc
pusha
inc
and
rclb
mov
je
test
dec
out
adcb
fistps
inc
inc
mul
mov
push
pop
pop
lods
add
lret
imul
push
cmpsb
dec
cld
mov
hlt
fnstcw
cli
mov
loop
sub
arpl
jb
mov
or
mov
xor
test
and
inc
xchg
mov
fsubl
mov
fisttpll
sbb
outsl
sub
aam
jge
jnp
out
mov
sarl
jmp
in
mov
rcll
sub
roll
imul
fidivrl
scas
fwait
jno
xor
dec
aas
lods
jno
mov
push
cltd
inc
out
daa
cmp
lret
out
lods
outsl
stos
in
mov
jnp
dec
test
stos
jl
fstpt
mov
paddusw
lahf
in
std
mov
jl
mov
sub
mov
and
adc
or
mulb
mov
pop
lods
iret
mov
sub
adc
imul
mov
nop
pop
aas
data16
jns
sbb
mov
shlb
lods
mov
in
jo
aas
mov
cltd
frstor
pop
mov
sub
dec
adc
inc
pop
cmc
nop
call
mov
adc
inc
sti
push
je
in
push
xchg
cmp
daa
js
mov
push
sub
popa
jno
popf
aam
dec
adc
add
ss
leave
aaa
pop
xchg
and
and
lds
fdivl
add
xchg
fs
mov
sahf
ret
in
cltd
inc
cmpsb
xchg
pop
pop
mov
fstp
lahf
ss
and
xchg
pop
xor
enter
shll
cmp
lods
cmp
ret
fimull
enter
xor
sub
add
pop
pop
xor
mov
mov
ljmp
pop
jmp
cmpb
dec
or
push
and
aam
cmp
insb
mov
push
popa
xchg
sbb
push
xor
mov
adc
adc
push
sbb
in
sub
decb
insb
pop
or
adc
and
adc
scas
pop
cmp
loop
lahf
mov
int3
enter
xlat
loop
lcall
sub
sti
cmpsb
orb
xchg
inc
xchg
mov
fistpl
inc
pop
aaa
push
iret
int3
ljmp
sub
mov
fsts
cld
xorl
enter
popa
out
cli
pop
movsl
arpl
jne
pop
mov
lret
shrl
mov
add
cmp
xchg
mov
push
outsb
in
inc
stos
xchg
iret
cmp
add
or
push
jge
mov
lahf
lock
js
fwait
adc
add
push
popa
mov
les
xor
cli
inc
pop
jecxz
cmp
aas
ret
pop
cmpsb
pop
outsl
push
sub
push
out
cmp
pop
adc
sbb
adc
cltd
iret
outsl
jecxz
lods
pop
add
jno
in
xchg
imul
lds
mov
ja
in
dec
cmp
sbb
lods
dec
xlat
out
pusha
push
sub
ret
sub
push
loope
aaa
das
mov
idivb
stos
add
sbb
jmp
in
sbb
push
xchg
inc
mov
inc
jmp
sbb
xchg
lods
inc
in
cmp
hlt
jne
jns
sahf
cmp
std
mov
pushf
mov
ja
lret
inc
addr16
cmp
fs
arpl
fsubs
fadds
in
jne
aad
test
add
jmp
in
leave
push
xchg
hlt
xchg
xchg
jge
push
pop
push
push
and
clc
stos
add
roll
lods
imul
cmpps
pcmpeqb
scas
cmpsb
add
push
cmp
dec
sbb
jbe
add
push
enter
jbe
inc
or
into
rcll
lds
aaa
mov
mov
decl
inc
inc
push
sub
das
mov
out
lock
push
jge
dec
xor
push
xor
push
add
mov
stos
sub
fs
lret
pop
inc
jno
inc
or
notb
sbb
jae
inc
jnp
shll
out
inc
es
sub
into
or
mov
rcrb
add
push
fmull
xchg
and
push
jp
mov
pop
in
dec
sub
mov
jmp
mov
dec
adc
inc
cmp
pop
jle
xchg
dec
outsb
stos
loope
repz
inc
jl
xchg
mov
jp
cmc
mov
mov
ret
pop
xor
sbb
andb
add
ljmp
and
fadd
jo
or
or
mov
negl
sub
pop
shlb
aad
shl
mov
mov
cmpsl
jge
mov
aad
jne
xor
lds
cmp
je
mov
push
mov
bound
or
sahf
shrb
cmpb
popf
sub
pop
mov
cmp
mov
push
dec
addr16
sahf
dec
mov
pop
scas
mov
push
and
mov
xchg
adc
sti
ljmp
mov
mov
loop
test
push
jno
pop
pushf
jae
mov
jbe
cmc
add
push
dec
enter
jle
aaa
cmp
cli
out
out
movsb
mov
or
cmp
popf
and
and
fldlg2
jnp
jo
movsl
ja
shr
dec
xchg
mov
push
and
inc
pusha
mov
insb
lcall
push
pop
dec
mov
jge
adc
pop
and
jg
sahf
fwait
mov
cs
mov
mov
inc
dec
pusha
jle
mov
adc
imul
addr16
pop
in
and
mov
sbb
inc
and
pop
jp
imulb
std
push
push
leave
xor
addr16
push
fmull
jbe
nop
into
mov
dec
sbb
jnp
push
sub
rol
mov
iret
and
xchg
sub
bound
xor
sbbb
mov
xor
push
arpl
mov
scas
pop
jns
in
sahf
pop
enter
arpl
push
inc
adc
mov
rol
lahf
lcall
add
mov
or
loopne
adc
loope
pop
or
in
jp
jle
stc
mov
sbbb
push
rcrl
icebp
or
hlt
mov
loope
popa
iret
pop
and
test
es
sbbb
jb
gs
stos
cmpsl
dec
push
pop
dec
pop
xchg
lahf
ret
mov
gs
dec
xchg
aas
mov
push
scas
popa
mov
iret
pop
add
fcom
jp
in
scas
xor
sub
sub
aad
push
or
in
adc
hlt
mov
lret
xchg
dec
inc
test
int
and
sahf
mov
add
xor
fbstp
mov
scas
clc
lcall
jo
push
add
sub
rcl
mov
call
dec
out
ret
adc
pop
loope
fistpl
push
jg
add
lcall
out
aam
and
test
insb
js
cmpsl
add
cmp
test
loop
insl
mov
cmp
int
xchg
jecxz
pushf
or
push
jb
xchg
xchg
mov
push
out
jnp
mov
lds
int
xchg
hlt
enter
nop
loopne
or
pusha
pop
xchg
pushf
rcr
mov
add
andl
aaa
lods
mov
jg
push
lea
out
popa
xchg
adc
aaa
inc
adc
repz
daa
push
dec
in
ss
subl
xor
push
pop
sbb
es
cmpl
dec
push
in
push
push
mov
jnp
push
sub
shrl
xchg
fistps
push
adcb
scas
lcall
aad
stc
stc
call
cmp
fnstcw
pop
js
and
add
pop
xor
inc
lods
jl
popa
add
inc
jo
xchg
jge
dec
test
fbld
rorb
dec
inc
out
sub
lds
mov
mov
out
jbe
loope
and
lds
xchg
dec
adc
cmp
and
pop
pop
mov
add
inc
shr
repnz
out
sub
mov
in
out
xor
mov
push
adc
test
aad
cltd
ficomps
mov
adcl
addr16
cs
cmc
xchg
daa
in
sti
popa
fisttps
sbb
fcmovnb
pop
adc
pop
test
xchg
xchg
pop
loop
call
push
push
divl
sbb
dec
mov
jl
sahf
test
mov
std
mov
leave
mov
mov
pop
xchg
mov
les
mov
jbe
in
xchg
mov
lods
mov
sbb
fadd
insb
xlat
lods
fucomip
syscall
mov
dec
push
ja
lahf
cltd
int3
fists
fisttpl
pmaxub
clc
dec
jp
ds
rclb
mov
mov
pop
push
ljmp
sub
cmp
mov
xchg
mov
pusha
jle
jns
xlat
cmc
dec
cmovge
ss
enter
dec
dec
xchg
lock
ds
dec
fwait
dec
push
jo
test
in
mov
pop
jbe
fisubrl
cmc
ret
and
mov
out
cmpl
pop
mov
jmp
in
test
sar
stos
sbb
adc
sbb
pop
nop
sub
enter
fwait
aad
pushf
dec
pop
mov
sbb
mov
xor
pop
inc
aam
mov
or
ss
push
mov
sti
mov
cltd
cmp
mov
add
or
jp
fnsave
inc
inc
out
add
push
xchg
cs
pop
mov
divb
mov
fdivrs
pop
mov
jbe
jge
vshufps
lea
in
sbb
jnp
stc
pop
push
ja
or
outsl
ret
jmp
dec
test
xor
dec
stc
push
in
movsb
stos
jp
outsl
jge
cmp
and
inc
out
xor
push
push
pop
dec
into
mov
or
add
and
jae
insl
repz
jne
cli
cmp
and
or
mov
mov
mov
adc
ret
pop
imul
cmp
test
mov
in
fcmove
dec
mov
in
xchg
mov
push
sbb
insb
cmp
test
add
dec
cmpsb
pop
sub
or
andl
das
xlat
pop
daa
cwtl
lahf
fwait
out
cmp
push
sub
lret
pop
jnp
aad
pop
jo
outsb
jae
imulb
jge
ret
dec
push
or
jl
mov
and
repnz
dec
fnstenv
lods
push
cmp
xchg
orl
in
repz
pop
cmp
or
cmp
jmp
cmp
and
inc
hlt
sbb
int
stos
xchg
test
mov
out
pop
mov
jmp
arpl
sub
pop
sti
jge
xor
in
out
push
pop
jge
ret
cmpsl
adc
push
cli
pop
fcomp
push
mov
inc
cltd
fisttpll
mov
push
add
cwtl
dec
push
xorl
jp
add
fiadds
insb
mov
xchg
xchg
sahf
fstpl
push
push
in
aad
stos
jecxz
bound
enter
aaa
jne
std
cmpsl
sub
out
mov
ret
out
stos
cmp
push
loop
cltd
jecxz
imul
adc
mov
rolb
dec
adc
hlt
ds
pop
cmpsb
push
or
ljmp
ja
imul
sub
popa
mov
pop
lahf
shll
xchg
addr16
jns
adc
imul
dec
icebp
out
std
mov
fistl
test
mov
insb
aad
add
jle
mov
mov
popf
pusha
push
pop
add
cmp
cmc
xchg
sub
sbb
fld
add
orl
inc
pop
out
or
xor
jl
mov
cmp
int
pop
xchg
push
out
dec
dec
popa
insb
push
ds
loope
stos
mov
test
in
les
adc
jg
fcoms
push
leave
push
lret
stos
push
jae
jmp
rolb
mov
mov
mov
mov
fs
aad
jmp
jae
movl
test
cmp
lahf
shr
cmp
and
pop
xor
mov
das
adc
ss
push
addr16
inc
rclb
cmp
adc
sub
dec
mov
sbb
fcomps
dec
lods
arpl
and
mov
push
mov
fbstp
add
ja
add
xor
shl
fisttpl
aad
cmpsl
push
xor
lret
aam
sub
clc
mov
pop
lahf
pushf
sbb
pop
jno
adc
xor
popa
and
cmp
sbb
adc
push
add
mov
fcomps
mov
cmp
pop
addr16
shlb
xor
testl
testl
mov
jo
lds
mov
subl
sahf
adc
stc
fs
cmp
pop
add
xchg
sbb
ret
push
mov
mov
xor
jns
cltd
push
and
cld
xor
sbb
jno
add
inc
push
xchg
jb
push
inc
sbb
add
bound
gs
cmp
aad
fcomps
adc
int
or
mov
insl
or
mov
jno
mov
imul
jl
push
faddp
sub
push
add
add
add
push
outsb
inc
insb
xor
cs
insb
add
adc
add
push
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
in
push
push
push
pusha
call
pop
sub
mov
sub
mov
add
lea
mov
xor
jmp
nop
jmp
ret
imul
jmp
roll
add
stc
ror
stc
xor
clc
add
jmp
ret
jb
add
clc
jmp
call
rclb
fs
icebp
lret
dec
xchg
mov
mov
adc
lahf
xchg
notb
xlat
movsb
xchg
lahf
cwtl
push
dec
iret
lcall
rcrl
pusha
sub
fimuls
adc
push
and
in
das
mov
push
fs
movsl
test
jge
or
aad
push
adc
jg
in
nop
into
push
pop
adc
dec
sbb
rcrl
stc
fnsave
mov
xchg
dec
sbb
adc
loope
cmp
cltd
shlb
dec
xchg
aam
arpl
shlb
pop
subl
mov
rclb
push
sbb
mov
and
shl
fs
fidivs
in
push
cmpsb
push
es
out
and
push
mov
in
nop
into
push
pop
inc
fldt
mov
adc
mov
mov
movsl
push
rolb
aam
test
jge
jmp
aam
push
daa
and
std
fildll
out
add
cwtl
into
push
lahf
mov
push
pop
bound
cmp
mov
xchg
sbb
ds
adc
and
sti
and
push
arpl
and
aad
adc
xchg
addr16
and
xchg
test
call
xlat
setp
xlat
push
xchg
rcrl
rorb
and
or
xchg
ljmp
xchg
rcll
out
movsb
mov
es
pop
es
inc
nop
xlat
pop
push
sub
call
dec
push
jns
iret
mov
pop
adc
adc
bound
cmp
xchg
dec
xchg
movsl
aam
out
mov
cmpsl
push
ret
xchg
aam
mov
mov
out
daa
and
cmp
adc
xchg
adc
out
mov
sub
pop
and
insb
rorb
fcmovbe
dec
xchg
rclb
lret
sbb
cwtl
and
dec
mov
or
daa
int
pop
mov
push
pop
xchg
xlat
movsb
dec
push
into
cltd
mov
cwtl
shrb
ljmp
adc
xchg
pushf
adc
fcmovne
push
xchg
int
push
and
in
xor
xchg
mov
adc
out
dec
cmpsl
mov
mov
push
xor
and
add
lea
dec
test
cltd
movsb
pusha
jns
out
mov
sub
and
stc
sub
adc
xchg
shlb
pop
rcll
push
xchg
push
hlt
push
xchg
gs
and
xchg
daa
int3
jno
cmpsl
mov
nop
into
or
adc
nop
rclb
adc
jb
adc
shll
mov
adc
arpl
pop
ljmp
push
xchg
gs
adc
jg
int
push
sbb
test
mov
xlat
paddsb
add
dec
sbb
loop
sub
push
lcall
loopne
pop
rcll
es
imul
in
jg
fs
int
push
sbb
pop
test
xor
add
jecxz
enter
adc
push
hlt
mov
in
mov
popf
push
aad
and
mov
push
and
data16
incb
sbb
xor
add
fildll
popaw
es
jp
repnz
rcrl
or
insb
iret
dec
xchg
loope
rcll
push
adcl
imul
dec
sbb
movsb
xor
cmp
movsb
aaa
aas
sar
gs
add
std
mov
es
inc
addr16
fnop
popa
push
je
jge
fsub
jae
add
add
pop
cmpsb
jl
cld
jnp
inc
jle
call
daa
out
jg
into
push
dec
orl
xchg
mov
sub
sbbl
adc
aaa
cwtl
sub
inc
rcll
push
shlb
lret
imul
lret
xchg
jno
adc
push
es
scas
push
xchg
push
xor
adc
mov
in
repnz
nop
into
mov
sub
push
push
and
adc
xchg
and
mov
push
push
in
adc
ljmp
fxtract
aaa
push
call
test
pop
pop
cmpsb
fs
out
xchg
mov
cltd
fstps
scas
mov
pop
adc
adc
mov
xor
push
ja
cs
mov
mov
cmpsl
or
and
mov
mov
loop
cltd
xchg
aam
pop
bound
cmp
pop
xchg
sbb
and
push
jecxz
mov
adc
push
jne
aam
loopne
push
xchg
aad
fcoml
scas
push
lahf
push
push
xchg
xlat
test
subb
xchg
iret
lcall
and
stc
testl
mov
or
push
xchg
arpl
js
dec
xchg
and
in
mov
push
xchg
aad
adc
pop
es
mov
dec
cwtl
sub
cwtl
or
xchg
insl
rcrl
rcrl
and
fisubrl
insb
push
loop
rorl
aam
cmp
ljmp
and
xchg
adc
testl
push
mov
push
push
sbb
adc
xchg
and
xchg
push
lods
inc
ret
xor
fs
jbe
dec
xchg
je
in
ret
xchg
aam
mov
mov
push
jno
cltd
inc
std
movl
jno
ss
pop
mov
in
mov
pop
dec
and
je
or
push
xchg
lea
testb
pop
push
push
adc
xchg
push
xlat
call
int
pop
test
rcrb
dec
nop
jae
xchg
sbb
or
bound
xchg
xchg
sbb
xchg
repz
loop
xor
push
in
push
mov
ss
xor
aam
arpl
adc
out
callw
xor
sub
push
push
nop
jo
repz
xchg
pop
test
adc
mov
and
pop
mov
xchg
fcmove
cmc
jnp
xor
push
mov
clc
sbb
cmpsl
mov
mov
inc
push
push
push
leave
call
lods
xlat
setp
cltd
popa
gs
push
xchg
scas
aad
push
outsb
adc
mov
rcll
inc
xchg
jbe
cmpsb
bound
jmp
in
xchg
in
imul
int3
dec
xchg
out
dec
cwtl
into
push
mov
popa
pop
addr16
into
pop
xchg
pusha
lock
pop
dec
loop
xchg
rcll
push
push
shl
fstps
adc
pop
and
inc
xor
cmpsl
lahf
fs
hlt
int
push
xlat
push
les
leave
movsl
fsts
adc
push
jne
and
pop
je
sbb
sti
xchg
and
sti
sbb
mov
xchg
adc
fs
or
xlat
pop
push
adc
subl
fimull
xor
mov
jns
cmpsb
bound
pop
mov
fs
xor
dec
xchg
movsb
loope
mov
adc
inc
add
pop
and
out
sub
scas
loope
leave
movsl
xor
lods
cmpsb
xor
pop
fwait
movsb
pusha
jnp
dec
mov
pop
adc
fisubl
bound
mov
int3
adc
jge
mov
sahf
cld
cmp
jl
movsl
es
repnz
push
call
gs
and
cmp
jbe
es
fwait
cltd
mov
dec
xchg
fcomps
pop
jae
cld
pop
inc
icebp
mov
and
rolb
push
sub
fwait
mov
inc
loopne
daa
enter
cmp
aad
lahf
lods
scas
inc
push
sbbb
fmuls
push
inc
fldl
push
subb
imul
dec
flds
jl
stc
push
pushf
add
inc
push
fistpll
dec
dec
jno
pop
and
cmp
adc
adc
int
scas
push
mov
cs
pop
dec
inc
add
test
push
jecxz
xor
pop
sub
in
stos
and
inc
fdivr
mov
xor
xchg
mov
xor
push
imul
cs
out
adc
mov
mov
jb
xor
dec
cmp
mov
push
outsb
popa
jmp
mov
pop
cmp
fnstsw
push
jne
popa
push
dec
mov
push
push
and
mov
mov
xor
sub
je
mov
push
mov
dec
xchg
xor
fcomip
xorw
outsl
dec
into
push
pminub
leave
adc
add
jecxz
add
adc
fildl
dec
xchg
rcll
aad
aam
inc
xchg
aad
push
mov
inc
xor
daa
mov
cltd
popa
pop
sbbl
inc
adc
add
xchg
rclb
xchg
pushf
ret
jle
xchg
rclb
push
xchg
roll
push
xchg
aam
imul
repnz
not
xchg
push
xchg
push
push
xchg
xlat
pop
push
cwtl
into
push
dec
iret
iret
jmp
roll
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
cwtl
into
push
dec
iret
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
cwtl
into
push
dec
iret
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
cwtl
into
push
dec
iret
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
cwtl
into
push
dec
iret
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
cwtl
into
push
dec
iret
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
cwtl
into
mov
push
adc
dec
int3
adc
rclb
push
pop
je
movaps
iret
adc
in
push
xchg
rcll
push
xlat
mov
shl
mov
dec
push
repnz
mov
push
adc
jo
push
jo
adc
xchg
mov
lods
ja
imul
stos
sbb
lods
mov
imul
push
xchg
shrb
shll
push
xchg
jae
aad
push
xchg
aam
shll
xchg
je
xchg
xlat
pop
push
cwtl
xchg
je
adc
hlt
cmc
rclb
push
xchg
shll
lods
pop
or
xlat
out
jne
sbb
rclb
push
xchg
shrl
dec
outsl
adc
push
xchg
aad
repz
bnd
nop
xchg
je
repnz
add
add
add
