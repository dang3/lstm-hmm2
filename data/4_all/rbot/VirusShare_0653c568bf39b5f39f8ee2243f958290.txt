or
rep
xor
pop
rclb
push
mov
negb
out
outsb
jge
inc
add
cld
rcrb
jg
mov
aas
sub
aas
mov
push
shll
sub
test
pusha
dec
push
and
dec
inc
inc
rcpps
jge
rclb
mov
insl
add
imul
and
inc
int3
add
fwait
mov
out
imul
sub
cld
inc
mov
push
aaa
jbe
pushf
rorl
inc
jo
jno
xchg
add
int
push
cmp
repz
out
cmp
push
inc
xchg
inc
mov
ds
cmpsb
repz
mov
outsl
hlt
enter
pop
xchg
dec
lods
nop
mov
dec
push
jne
outsb
add
repnz
addr16
push
pop
jne
es
popf
sar
mov
cmc
jb
and
incb
lret
cld
inc
sbb
mov
cmpsl
xor
stos
rcrb
add
inc
std
dec
cld
xchg
adc
add
out
sub
cmp
inc
push
shll
imul
lret
cmp
dec
add
sub
mov
outsl
and
dec
popa
mov
fwait
subb
aam
popa
cmpsb
cld
cmp
mov
pop
jnp
std
lret
push
stos
push
lods
adc
push
push
lcall
mov
xchg
xchg
xor
clc
ljmp
push
out
xchg
adc
les
push
gs
insl
pop
jnp
scas
jne
xchg
cltd
or
push
adc
push
imul
ljmp
cmpsb
movsl
aaa
adc
sti
addr16
aad
push
adc
push
repnz
fidivrs
aas
loop
repz
cltd
fistpll
xchg
rcll
jae
pusha
adc
clc
jecxz
dec
scas
mov
movsl
mov
test
shll
repnz
mov
sub
or
jae
mov
lret
cmp
adcb
fstl
xlat
xor
in
test
or
xlat
jl
xchg
mov
dec
add
movsb
in
jle
jecxz
call
mov
test
jle
popf
sub
pop
in
cwtl
in
fadd
sbb
jo
arpl
pop
xor
sbb
xor
fisttpl
aas
cmp
pushf
rcll
and
jl
in
cmpsl
loope
jmp
cld
add
ret
xchg
xchg
sub
jns
sahf
test
mov
stc
fbstp
clc
mov
in
sub
sbb
push
mov
arpl
loope
jne
mov
mov
xchg
pop
mov
and
sbb
in
add
push
jb
jg
sbb
out
mov
arpl
in
xchg
stc
push
add
notl
lock
aaa
jp
in
cmovl
pushl
cmp
mov
mul
popf
add
push
pop
mov
cwtl
mov
xor
sti
pop
push
es
jae
xor
mov
je
dec
push
mov
cld
pop
aam
push
xor
pop
jmp
mov
nop
test
ljmp
ficoml
pusha
cmp
pop
lret
or
xchg
pushf
push
mov
orl
mov
pop
pop
mov
out
or
xchg
or
adc
cmp
loope
and
cmp
mov
getsec
int3
lea
sbb
fdivs
push
into
mov
fbstp
shr
sub
add
test
ret
insl
ss
jno
in
movsb
or
repz
js
xchg
in
mov
sahf
dec
xchg
movsl
jnp
mov
mov
and
jae
idiv
repz
jecxz
sub
push
pushf
pop
cmp
fisttpl
jecxz
and
xorb
aaa
and
fidivl
rcr
dec
daa
cmp
movsb
mov
cmp
pop
or
mov
pop
xchg
push
in
add
in
sti
pop
dec
jecxz
stos
add
pop
subb
inc
dec
inc
int3
je
jle
inc
push
testl
jp
aad
into
mov
out
stc
jg
push
sbb
lahf
mov
in
stos
jnp
das
mull
loop
js
lcall
jae
lret
mov
sub
mov
pop
add
cmp
std
inc
mov
pop
sbb
rcrb
in
fs
sbb
dec
clc
iret
lahf
mov
test
adc
mov
adc
pop
loopne
shrl
pushf
fistpll
jo
add
jmp
xchg
sbb
shrb
inc
dec
inc
xorl
ja
xchg
test
iret
mov
push
imul
dec
xchg
fdivp
dec
xchg
and
ret
and
dec
jl
fisubrl
xor
jbe
lret
notl
lods
popf
jbe
add
xor
xchg
lahf
adc
cmc
ljmp
in
das
fs
or
stc
and
fists
mov
inc
scas
inc
fcmovu
bound
or
aaa
shll
xchg
aad
iret
mov
dec
inc
xchg
lock
add
xchg
in
mov
cmp
pop
or
mov
imulb
enter
or
aam
aas
jle
push
shr
mov
push
mov
bound
add
movsb
jg
imul
sbb
cli
sbb
imul
mov
gs
imul
add
fs
and
fstpl
push
inc
lds
xchg
adc
xchg
mov
adcb
iret
pop
mov
subb
adc
jne
inc
xchg
mov
enter
std
xchg
push
jns
outsb
stos
repz
leave
adc
insl
jno
adc
or
xchg
pop
cmp
cltd
cmc
add
stc
aas
daa
ja
mov
pushf
pushf
mov
xor
sbb
shl
daa
cmp
pop
divl
jne
test
sub
sbb
fistpl
push
int3
or
mov
jo
mov
std
inc
lea
mull
xlat
data16
jno
icebp
pushf
lods
sbb
cltd
cli
lods
jecxz
mov
test
stos
pop
mov
sbb
cvtpi2pd
sub
mov
sahf
inc
ret
mov
fs
or
imul
movsl
fsubr
mov
or
dec
or
call
mov
les
imul
dec
test
lods
pop
xlat
xor
ficoms
mov
je
addb
fdiv
add
sbb
nop
and
hlt
cli
gs
fistpl
aad
mov
mov
mov
lock
inc
or
jl
mov
sbb
sti
adc
mov
inc
outsb
cltd
imul
sar
or
and
dec
sbb
mul
sarb
mov
lods
imul
dec
daa
push
enter
mov
ret
and
cltd
iret
ljmp
aad
and
add
ds
pop
pusha
inc
into
clc
jle
xor
roll
pop
addb
add
dec
pop
sub
mov
repnz
or
in
push
fwait
das
dec
jnp
insb
sub
push
ror
mov
imul
jno
adc
mov
shrl
daa
mov
popf
andb
jo
ficompl
imul
sbb
push
pop
dec
fnstsw
cmovbe
jp
mov
repz
outsb
ja
loope
fbstp
or
mov
cli
xor
fs
mov
mov
xchg
and
pop
repz
jno
in
ficomps
xor
lods
sar
jbe,pt
inc
pop
mov
mov
sbb
loopne
decb
sub
decl
sahf
xchg
mov
push
fnstsw
cwtl
fs
ss
sub
sbb
push
cmp
pusha
mov
fdivl
push
jb
sub
popf
sbb
sub
dec
xchg
nop
push
in
in
push
out
cmp
movsl
popf
test
mov
out
dec
movsb
in
fnstcw
push
mov
int
ret
push
addr16
xchg
scas
dec
add
pop
and
pop
dec
adc
xor
cltd
or
jo
sub
lret
adc
test
push
mov
mov
adc
lock
jecxz
pop
xor
jns
lds
jmp
stos
cmpl
adc
into
push
mov
fistpll
pop
xchg
xchg
jle
jno
cmp
jbe
xor
mov
ss
add
cmp
fidivs
xchg
fiaddl
pop
jne
pop
paddb
lcall
xlat
shll
push
push
push
stos
mov
xchg
xchg
xchg
mov
xor
leave
mov
adc
inc
jb
push
or
stos
and
daa
jnp
lahf
adc
mov
aam
orl
aas
jl
adc
lret
data16
cs
shlb
bnd
adc
les
enter
push
inc
pop
mov
xchg
scas
sbb
sbb
mov
add
and
mov
pop
pop
adc
les
into
rclb
das
push
mov
adc
or
pop
addr16
mov
adc
arpl
mov
sbb
stos
pop
mov
aaa
xchg
test
gs
dec
xor
fst
pushf
xchg
cmp
or
jmp
sbb
sub
cmp
adc
ja
test
pop
sub
lret
shl
xchg
inc
insb
out
sbb
cmp
outsl
jns
mov
leave
jnp
fisttps
pusha
xchg
lods
mov
xor
inc
jae
xchg
fs
cmc
js
xor
loope
cli
cmp
das
lock
inc
mov
xorl
jae
pop
jle
stc
enter
mov
jno
dec
jb
ss
sub
in
icebp
cmp
push
xor
push
repz
cmp
enter
jmp
mov
in
test
cld
sub
mov
dec
push
pop
push
push
jno
cmp
push
std
cltd
lock
jecxz
shrb
mul
pop
dec
pop
cli
add
add
neg
popa
ljmp
cltd
out
je
pop
cmpsl
jb
jmp
addr16
lods
lods
mov
jne
int3
mov
jg
inc
in
push
fsubp
xor
lods
sub
andl
or
jbe
xchg
sub
idivl
lock
aaa
push
lret
insl
out
sub
xchg
lret
lret
push
push
dec
mov
push
sahf
mov
and
addr16
in
cli
or
xor
outsb
lds
out
mov
or
das
imul
dec
fdivrp
xorl
add
aad
je
adc
cmpsb
xchg
scas
fstps
gs
cwtl
xchg
xor
ret
gs
cmp
mov
data16
out
jge
jge
dec
popf
inc
inc
hlt
xor
adc
or
fisttpll
lret
adc
pop
xchg
pop
fidivs
arpl
pop
popl
out
inc
pop
je
and
or
inc
sub
cmp
jne
lods
or
jbe
mov
mov
push
adc
mov
roll
shr
pop
test
lret
scas
sub
xchg
imul
mov
test
push
mov
sub
inc
shll
pop
in
mov
mov
push
cmp
lret
adc
sbb
pop
in
out
imul
or
aaa
ljmp
outsl
stos
inc
dec
sub
dec
pop
dec
xor
scas
mov
dec
test
and
scas
mov
mov
cwtl
cld
mov
inc
ficomps
ficompl
aas
fmuls
sub
aaa
mov
mov
fadds
pop
mov
test
fisubrs
add
stc
icebp
add
jmp
dec
adc
push
mov
xor
pop
xchg
pop
orb
add
jb
icebp
shll
out
je
fstpt
dec
fadds
aam
add
aaa
cmc
push
and
pop
popa
dec
push
out
sub
pop
xor
cmpl
mov
repz
scas
lds
mov
mov
add
pop
add
aad
or
jbe
fbld
xchg
pop
push
adc
cmpsl
lea
enter
mov
outsl
push
xlat
xor
xor
cltd
dec
jno
jl
mov
pop
ss
mov
dec
cmp
xor
aas
jle
inc
add
ljmp
sbb
cld
jmp
incl
push
test
gs
shrb
sub
ja
or
out
fcmovb
cmp
cmp
mov
fisubrl
and
sbb
adc
mov
lret
in
sub
les
dec
mov
icebp
int
jle
xchg
cs
int
rolb
push
inc
push
pop
dec
push
sbbb
lcall
insl
clc
or
add
or
sti
testb
and
push
ljmp
adc
movsb
mov
jg
js
inc
test
sub
ljmp
adcl
fs
imul
ss
sahf
decl
jp
sub
sub
push
jae
ficoms
dec
es
inc
sarb
and
dec
ss
movl
dec
rorb
jbe
ja
mov
add
mov
mov
adc
addr16
popa
xor
jecxz
mov
push
rcrb
mov
push
dec
orl
cmp
mov
dec
push
pop
or
iret
mov
stos
cmpsb
pop
push
pop
aas
ja
loope
push
and
mov
sub
jno
add
scas
sub
fstpl
pushf
scas
stc
mov
in
sub
lods
lahf
in
dec
xchg
cli
rcll
cmp
pushf
es
dec
inc
icebp
stos
out
clc
jno
mov
mov
and
lock
dec
inc
pop
aaa
arpl
clc
or
mov
sarl
scas
mov
das
dec
mov
xor
aas
hlt
sbb
xrelease
insb
aaa
jae
xor
in
adc
cltd
fmuls
ss
inc
cmp
sbbl
mov
into
scas
jae
xchg
xchg
fdivrp
int3
pop
sbb
or
stc
outsb
in
xchg
jmpw
mov
lea
push
ss
insl
xchg
lret
mov
test
jle
jne
cmp
sbb
push
shlb
mov
mov
jns
call
out
orl
adc
ja
adc
lret
data16
add
sahf
pop
push
push
ja
in
cld
lahf
or
subl
push
cmp
xor
push
sub
push
mov
and
push
and
pop
or
jne
or
push
and
inc
sarb
fs
xchg
popf
lret
daa
cmp
ss
daa
add
push
mov
and
loopne
shll
push
dec
inc
jno
les
les
push
pop
mov
in
int
cmovle
xlat
push
daa
mov
jo
out
sub
enter
repz
out
in
inc
jp
scas
fsubrl
and
icebp
mov
imul
or
or
xchg
mov
and
leave
pop
xchg
dec
in
mov
lock
inc
sti
xchg
mov
or
cmpsb
push
mov
pop
loopne
jns
sub
out
adc
sub
fidivs
stos
jl
mov
inc
in
repnz
addr16
sti
adc
data16
jno
into
xchg
add
shrb
inc
sbb
in
jg
decb
neg
mov
popf
push
pop
pop
pushf
xchg
xchg
adc
xchg
dec
mov
out
mov
mov
pop
rcrl
outsb
push
arpl
mov
mov
jmp
push
enter
inc
repz
nop
xchg
pop
loope
lods
and
mov
je
mov
fisttps
mov
sti
jp
ljmp
adc
mov
xchg
xchg
pop
mov
sub
ss
pusha
and
shlb
outsb
pop
adc
pop
lock
or
sub
in
aad
gs
jg
stos
loopne
fimull
fsubl
fldl
jle
xor
int
hlt
cmpsb
jno
in
in
out
rcl
lods
dec
loope
add
xchg
sbb
mov
add
inc
xchg
sbbb
push
dec
ljmp
and
jge
and
push
adc
jg
jno
xchg
movsl
repnz
sti
mov
xchg
and
decl
xlat
jmp
cmp
ficoml
lret
mov
or
mov
add
and
fidivrl
ret
pushf
mov
sub
scas
cmpsb
sahf
js
jnp
subl
jmp
out
rcll
test
xchg
in
scas
ret
test
lods
fsubl
les
cmp
rcll
pushf
sbbb
or
cmpb
cmp
jl
faddp
je
add
add
imul
adc
xor
mov
or
dec
jmp
enter
iret
mov
or
xlat
jmp
xor
cmp
xlat
push
sub
push
pushf
pushf
cltd
cmpsl
inc
in
out
jbe
pop
cmp
push
in
push
leave
fstpt
gs
sub
das
mov
fiadds
and
out
cltd
xchg
pop
stos
add
adc
add
imul
mov
imul
sahf
add
xor
pushf
movsb
jne
into
inc
pop
and
sbb
inc
nop
dec
jl
sbb
outsl
lret
sarb
jp
mov
push
inc
lock
jle
ljmp
lahf
loop
push
lea
int3
sbb
addr16
dec
sbb
mov
cmp
jno
repnz
addl
cli
lahf
lock
movsl
pop
insl
and
lds
fcmovnu
sarl
push
out
add
add
dec
shll
div
lahf
pop
xor
push
mov
orl
stc
clc
xchg
out
jnp
mov
xorl
into
push
icebp
cmc
cs
jns
or
int
push
and
xor
dec
push
enter
rclb
fildl
int3
sub
mov
aaa
add
sub
test
es
or
stc
xchg
or
push
jnp
and
and
icebp
pop
gs
gs
push
flds
or
imul
cmp
push
or
and
mov
xchg
mov
or
cmpsl
xlat
push
xor
push
push
cmpsb
cmc
fldl
inc
movsl
call
push
or
dec
dec
jb
and
inc
jnp
int3
jmp
test
nop
and
xor
aaa
pushf
and
xor
mov
cmp
mov
cmpsb
ja
subl
cmp
cli
mov
imul
sub
ss
inc
leave
mov
adc
xor
sbb
lret
ss
push
cmp
cltd
pop
adc
jge
pand
ljmp
adc
enter
and
mov
movb
lret
loope
mov
and
mov
fnstsw
lret
sbb
add
sub
cltd
mov
cmpsl
cmpsb
ja
cmpsb
stos
add
adc
pop
mov
out
arpl
pop
xrelease
adc
add
fstpl
insb
aaa
nop
inc
gs
or
jbe
mov
pusha
mov
rclb
pop
std
or
xor
mov
loop
cmp
lock
xchg
enter
data16
or
sub
in
notb
xchg
imul
mov
sbb
or
out
jo
jg
pop
xor
ljmp
cmp
leave
scas
or
push
xor
sub
xlat
pop
jb
sbb
mov
add
mov
add
icebp
mov
pop
stos
inc
pop
dec
mov
sbb
movsb
sub
add
adc
mov
mov
pop
pop
pop
sub
mov
stos
int
das
push
stos
jge
mov
out
add
lods
cmpsl
pop
ret
cmp
add
ja
pop
aam
add
sbb
cmc
jmp
inc
addb
jno
dec
xchg
adc
inc
cmp
orb
mov
movsl
cmpsl
or
mov
pop
mov
push
insl
sub
mov
xor
stos
aaa
bound
sbb
repnz
jnp
xor
push
inc
mov
call
bound
jmp
ss
and
sub
mov
repz
mov
dec
mov
bswap
mov
add
sti
int3
dec
in
mov
mov
out
inc
cwtl
or
pop
and
cmp
cltd
cmp
or
je
mov
je
mov
subl
xchg
ss
test
addr16
cld
jmp
outsl
cmpsl
ret
std
pusha
xchg
sbb
je
into
pop
into
into
iret
pop
xchg
stos
pop
adc
jg
add
in
pop
imul
inc
addr16
pusha
push
sbb
in
inc
insb
leave
or
push
push
repz
sbb
or
inc
out
add
mov
sbb
ljmp
jle
push
add
icebp
mov
mov
idivb
insb
test
aas
push
gs
fidivl
pop
repnz
inc
dec
into
mov
xchg
sbbb
pop
fiaddl
sarb
and
rcll
jnp
jo
jge
dec
mov
xor
ret
movsb
stc
xchg
mov
push
ljmp
clc
les
movsl
ret
mov
xor
mov
stc
aas
xorb
mov
xor
aad
adc
pop
imul
mov
xor
cmp
lcallw
das
nop
mov
lcall
mov
mov
test
ficoms
jne
pop
sub
pushw
mov
inc
sti
loopne
fbld
fstpl
and
push
push
jns
push
loop
or
inc
jmp
rcr
andl
xchg
push
ja
loop
adc
std
in
sbb
fs
sbb
and
popl
mov
rorb
sbb
loope
repnz
punpckhbw
dec
jge
or
inc
mov
add
mov
sbb
faddp
xchg
lods
jbe
or
mov
jmp
insl
lahf
dec
dec
sbb
dec
ljmp
ss
not
fcom
ficoml
iret
lret
pop
pop
or
divb
loope
int
inc
inc
sub
mov
insb
add
bound
mov
sti
or
insb
sub
pop
lea
sub
mov
loop,pn
bts
ret
scas
or
cmpsl
mull
sbb
cmp
aaa
aad
adc
inc
test
add
loop
in
test
mov
call
or
fstps
jecxz
loopne
ret
mov
pop
xor
cmp
pop
shll
cwtl
dec
repz
or
push
sbb
mov
fdivr
les
in
sbb
into
or
lods
mov
cmp
mov
les
mov
insl
imul
aas
xor
test
rcrl
xchg
cmpsb
movsl
stos
and
mov
lret
push
push
or
xchg
insb
ret
fs
push
sbb
jl
xorl
cltd
xor
mov
fnstsw
jle
pusha
jecxz
je
ret
adc
hlt
mov
test
pop
sub
push
add
sub
sbbb
xor
fidivs
or
mov
rorl
cmp
push
and
imul
jle
jo
fmul
out
mov
pop
outsl
jnp
sub
clc
test
loopne
filds
push
std
push
scas
xchg
push
push
xchg
in
lahf
mov
mov
shl
jmp
xchg
add
pop
mov
sbb
mov
push
rolb
add
in
ja
in
in
and
lock
jns
adc
leave
fs
repz
dec
mov
push
cmp
dec
cs
cwtl
mov
ja
out
mov
out
xlat
adc
sub
imul
pop
ljmp
out
sarb
das
add
mov
sbb
dec
mov
xchg
add
sbb
insb
sahf
insb
and
cli
push
xor
mov
fisubrl
sub
jae
ss
cmp
xor
cmp
mov
push
pop
sarl
mov
add
imulb
jbe
cld
jmp
push
or
jbe,pt
fisubrl
out
jb
pop
sub
fsubs
int
in
ds
mov
xor
pushf
insl
jmp
bt
xchg
pop
icebp
sub
fmuls
jle
push
call
insl
jle
clc
xor
add
dec
mov
testl
sbb
mov
xchg
lea
or
stos
lret
jecxz
test
mov
mov
and
pop
push
push
fistps
inc
mov
pop
and
mov
push
lods
cltd
mov
add
add
dec
push
call
mov
lock
dec
pop
cmpsl
fiadds
or
lea
mov
out
lds
inc
pop
insb
andl
inc
lret
in
es
push
shll
lock
xor
popf
pop
jb
test
jnp
lds
pushf
mov
lds
ss
rcl
push
jnp
or
rcl
lock
scas
mov
lock
subb
add
fxch
popf
ja
jns
lcall
push
mov
enter
xor
cld
test
xchg
xchg
rolb
pop
in
add
cld
pushf
mov
int3
push
iretw
pusha
cmp
mov
pop
fimuls
hlt
in
cld
inc
das
sub
add
xor
and
pop
stos
or
insl
std
and
mov
gs
sti
test
pop
jo
fnstcw
dec
arpl
mov
inc
je
repnz
outsb
dec
stc
cmc
xchg
lock
push
hlt
les
out
inc
adc
mov
ja
mov
inc
push
in
cmp
adc
jo
xchg
or
test
loop
les
or
loope
pop
and
es
shrb
cld
xchg
sbb
xchg
xor
mov
lret
jecxz
jbe
imul
loopne
jp
pop
mov
xchg
mov
fcompl
jmp
push
push
pop
cld
test
or
pop
sbb
int3
ret
insb
nop
stos
mov
les
jp
inc
out
pop
mov
insl
shl
ja
adcb
insb
cmp
fs
nop
iret
in
enter
lea
push
push
push
and
lea
cmp
add
loopne
sub
inc
andl
mov
lret
dec
lret
cltd
or
in
push
scas
clc
clc
push
mov
pop
call
sbb
and
ss
insb
adc
rcll
dec
dec
ja
daa
std
mov
test
rorl
daa
sub
pusha
jnp
dec
mov
testl
or
out
popa
sti
add
shr
repz
or
inc
add
adc
pop
das
mov
add
pushf
adc
test
shrl
mov
push
mov
outsl
mov
lds
je
dec
out
fisubrl
call
push
jae
xor
leave
pop
add
xorb
xchg
nop
xchg
inc
pop
jne
mov
movsl
inc
fstps
repnz
rcrb
in
cli
fimull
mov
call
sbb
int3
rcll
pop
push
in
scas
sbb
adc
adc
clc
cmp
add
shrl
jns
push
iret
mov
cli
movsb
hlt
xchg
sahf
jp
mov
outsl
adc
daa
dec
mov
push
jmp
add
sub
jle
push
rcll
lods
mov
scas
push
int
jmp
sbb
jge
hlt
int
loopne
jp
movsb
dec
popa
push
dec
push
fildll
jnp
jbe
nop
cwtl
sub
int3
push
loop
mov
and
pop
sbb
mov
sbb
shlb
or
mov
icebp
fcoml
mov
pop
ret
mov
loope
mov
into
sub
cs
mov
xlat
sbb
fs
xorb
mov
cmp
sbb
or
adc
cld
ret
bound
xchg
out
cmpb
loope
sbb
ds
loopne
mov
jl
cmc
push
mov
icebp
push
loopne
push
int3
insb
mov
aam
mov
hlt
pop
test
ss
rcrb
adc
push
jmp
sub
mov
dec
mov
stos
pushw
into
out
pop
rcrb
xor
les
jnp
add
inc
push
dec
adc
movsb
pop
cmp
test
lahf
inc
sub
fadds
dec
adc
aam
test
xchg
mov
jg
xchg
xchg
data16
movsl
xchg
mov
jge
scas
out
mov
cmp
adc
inc
pop
mov
js
or
lds
jmp
lcall
lods
cmpsl
adc
cwtl
jae
xor
xchg
push
cmp
inc
hlt
lods
sbb
cld
and
mov
pop
inc
inc
ja
frstor
lea
ret
orb
fs
or
jecxz
xchg
cmp
aam
incl
jge
ret
xlat
pop
sbb
and
das
sbbb
adcl
insl
dec
jnp
mov
sbb
aad
lcall
pop
out
xchg
sarl
sti
inc
or
mov
mov
out
xchg
push
int3
std
pop
arpl
jle
lea
rcr
ret
push
sbb
xor
cld
into
mov
in
rcrb
rolb
enter
fcoml
fs
xchg
add
xchg
cmpsb
insb
movsl
cmpsl
cmp
push
cmpsb
int
sub
stos
xor
jmp
cs
mov
test
mov
push
add
loop,pt
push
mov
inc
jge
ret
and
mov
and
jns
xchg
aad
movsb
push
xchg
jb
outsl
cmc
jmp
outsb
fstp
mov
mov
adc
pushf
fisubrs
sbb
aad
and
lahf
icebp
xchg
and
dec
pushf
dec
lds
lods
movsl
mov
sbb
clc
dec
in
inc
inc
xchg
jo
hlt
push
int
das
and
imul
mov
xchg
gs
and
icebp
ret
mov
imul
mov
push
mov
clc
in
xchg
xor
bound
adc
and
fwait
inc
sbb
or
jbe
jb
arpl
cmpsl
mov
ds
mov
cmp
call
inc
add
test
test
cltd
pop
in
test
fcompl
inc
and
xor
dec
pop
mov
pop
fnstcw
mov
rorb
xchg
xchg
icebp
mov
inc
aad
out
jmp
pop
cmpsl
stc
adc
push
xchg
or
and
sbb
lahf
dec
fs
dec
mov
dec
fistpll
dec
jmp
lea
xorl
and
mov
outsl
jge
mov
inc
sahf
imul
ret
dec
fsubs
addr16
inc
adc
cmp
mov
cs
divb
rcrl
jecxz
sub
mov
mull
shr
mov
sub
adc
fsubrs
add
bound
stc
repnz
mov
sub
sbb
add
stos
jge
mov
jl
mov
sub
adc
or
cli
mov
or
mov
mov
xor
leave
test
fcoms
mov
mov
xchg
pop
adc
jp
cltd
inc
loope
mov
mov
adc
out
and
mov
in
pop
sbb
es
jno
push
mul
fstps
cmc
mov
mov
xor
sub
sub
xor
push
lock
or
std
and
push
mov
push
mov
lods
ja
or
dec
dec
mov
xchg
clc
push
mov
and
jnp
jecxz
test
cmp
or
cmp
sub
movsl
dec
cmp
fidivrs
cmp
xor
cs
sbb
stos
test
in
aaa
cwtl
es
sub
fucom
dec
mov
push
or
fistpl
xlat
lea
jl
inc
loope
mov
dec
add
fdivrl
jno
ret
push
mov
out
sbb
xchg
lret
push
or
mov
and
add
jg
dec
mov
mov
mov
movsl
inc
repz
xlat
dec
and
lea
repz
push
movsl
jl
mov
mov
repnz
divb
mov
orps
cs
pop
mov
cld
movsb
into
repz
push
sbb
mov
sbb
das
sub
lds
sub
sub
pop
outsb
cmpsl
adc
mov
jmp
lea
pop
xchg
add
adc
es
sbb
push
mov
je
pop
lahf
arpl
leave
xchg
mov
js
jmp
mov
lcall
sub
mov
cltd
movsb
add
std
mov
addr16
sbb
fstps
sub
mov
add
xchg
dec
int3
dec
push
cli
cmc
xchg
test
fmul
pop
and
test
pusha
add
test
rclb
and
decl
fists
sbb
mov
jl
das
mov
out
cmp
add
jmp
cli
push
xchg
je
icebp
jnp
addl
mov
and
cli
aam
and
sub
mov
into
cmc
js
pop
mov
mov
scas
inc
test
call
push
lock
loope
out
jo
cli
xor
scas
out
fwait
pushf
inc
rcrb
pop
inc
fdivrs
es
jl
jecxz
inc
jns
cmp
dec
push
and
fs
mov
add
in
test
mov
cs
stc
sahf
fidivs
aaa
pop
mov
jp
fldenv
lods
movd
xor
sub
add
push
sahf
push
or
adc
imul
cmp
sbb
pop
prefetch
or
cmpsb
xor
ret
push
xor
call
mov
in
mov
ret
popf
xchg
dec
or
je
aas
mov
outsl
fldenv
rcrb
or
icebp
or
mov
push
sti
push
pop
and
repnz
rorl
ret
sbb
into
jno
adc
lcall
ror
neg
ret
push
cmp
jge
add
iret
inc
iret
xor
cmp
jg
scas
jnp
jne
aas
or
in
jae
push
xchg
mov
dec
mov
pop
sahf
out
jns
cmpsl
cli
test
int3
je
sbb
adc
ja
cmp
xchg
xor
mov
mov
mov
and
pop
in
jecxz
fmul
loop
cmp
mov
push
hlt
xchg
adc
adc
leave
dec
cmp
nop
adc
mov
add
lds
mov
and
fs
add
push
fsubrs
xor
lret
popa
ficomps
jo
sub
inc
nop
push
cmpsb
sbb
pop
dec
out
mov
jne
arpl
out
pop
sbb
jno
popf
pop
or
imul
push
sbb
cmp
dec
in
ds
dec
xor
add
fimuls
test
lahf
mov
and
and
sbb
pusha
leave
push
xor
mov
xchg
gs
xchg
lret
rcl
xchg
sbbb
mov
cmp
sbb
push
popf
inc
jo
add
and
and
in
mov
nop
je
test
xchg
jl
push
pop
lahf
test
push
fists
sbb
out
incb
cmp
lret
cmp
push
fildll
xchg
in
movsl
sub
stos
pop
xor
fsubl
inc
in
les
dec
mov
xchg
call
add
inc
xchg
xor
clc
je
sub
add
adc
iret
xchg
movb
pop
add
cltd
mov
mov
jo
int3
pusha
add
fldt
imul
stos
push
pushf
mov
xchg
out
cs
lahf
add
and
pop
xlat
jmp
lea
jb
xor
or
into
call
mov
ds
pop
dec
les
outsl
je
rorl
rclb
mov
xchg
lcall
fs
dec
dec
sbb
jnp
scas
fbstp
stc
inc
jg
test
andl
ret
xor
sub
xor
add
aam
push
jb
pop
flds
mov
shlb
jbe
xor
and
ljmp
cmpsl
js
ret
js
mov
cmc
lret
pop
mov
stos
mov
sub
add
mov
or
mov
nop
inc
inc
dec
mov
call
shrb
push
or
pop
sbb
push
mov
push
cld
push
and
or
jl
add
outsb
fs
push
pop
ret
pop
sbb
or
dec
shlb
push
cmpb
sbb
notl
jge
out
jl,pn
inc
nop
cmpsl
pop
in
ljmp
lods
inc
or
call
and
mov
sbb
loop
orb
scas
stos
pop
push
jl
adc
xlat
xchg
sub
mov
jecxz
fidivs
jle
ret
cmc
pop
aad
xor
inc
test
aas
xchg
popf
out
pop
js
xchg
xadd
push
push
mov
sbb
lcall
push
imul
adc
pusha
stos
sbb
mov
dec
rolb
cmp
cld
mov
int3
mov
out
fs
sbb
arpl
lds
adc
or
imull
lods
dec
inc
pop
pop
dec
inc
and
dec
lret
sbb
dec
subl
movsb
jle
cmpsl
jo
js
sahf
xor
pop
ret
aas
test
insb
mov
sub
sub
std
or
cmpsb
add
jns
sbb
rol
pop
inc
xchg
mov
and
ficomps
inc
cmp
bound
cmp
xor
enter
imul
pusha
stos
mov
mov
test
mov
mov
aam
in
mov
or
mov
pop
jge
push
int3
push
xchg
and
daa
pusha
rolb
sub
dec
inc
mov
xor
divb
inc
clc
add
fdiv
and
pushf
dec
or
addr16
pop
push
clc
insl
mov
decb
add
mov
scas
ss
mov
orl
clc
and
cli
lods
iret
pushf
sub
push
frstor
mov
and
mov
imul
inc
and
rcll
test
jmp
aas
mov
inc
out
sub
and
add
and
xchg
adc
stos
ds
shlb
xchg
lret
movsb
inc
arpl
aas
bound
movl
and
mov
and
jl
fdiv
cwtl
cltd
dec
sub
stos
lcall
mov
lea
mov
outsb
test
push
imul
push
movsb
and
sbb
jl
pop
js
jmp
subl
test
lahf
xchg
into
fildl
mov
inc
lret
js
cmp
repz
cmp
xorl
inc
or
stos
lock
mov
popf
mov
je
cld
mov
incb
mov
lahf
mov
sbb
jg
push
xchg
cmp
lret
cmp
mov
or
out
pop
mov
cmpsb
pop
mov
dec
dec
lock
cld
cmp
mov
mov
repnz
fsubl
dec
lret
jecxz
shl
loope
ja
sahf
cmpsb
std
fistl
ss
jb
inc
xchg
push
adc
push
cmpl
sub
sub
jnp
mov
cmc
xchg
sub
push
js
mov
xchg
pop
sub
mov
push
test
jecxz
insl
mov
mov
add
xor
popa
and
push
movsb
scas
push
mov
sub
cmpsb
pop
jecxz
in
leave
push
fmulp
aaa
ffree
jno
in
add
jmp
pop
inc
js
xor
dec
push
pcmpgtw
out
loop
mov
mov
iret
ret
fs
cltd
dec
and
subb
xchg
shll
push
pop
push
sbb
or
xor
jmp
in
ljmp
inc
pop
pop
push
stos
ret
and
hlt
xlat
movsl
js
aad
and
pop
jns
lods
dec
xchg
les
sahf
push
xchg
and
clc
fisttpll
jne
mov
push
jbe
mov
dec
std
mov
push
push
shl
push
paddsw
dec
mov
mov
std
or
push
mov
js
sbb
push
and
icebp
out
icebp
lods
jecxz
jmp
sub
insb
call
leave
mov
push
out
xchg
mov
ss
cwtl
mov
into
lds
push
aas
int3
mov
jb
jb
shlb
xchg
loop
fucomi
push
cmpsb
les
pushf
jbe
sub
lret
jp
fcmovnbe
outsl
aas
add
adc
bound
xchg
pop
mov
inc
cmp
dec
stos
lret
scas
adcl
mov
pop
loopne
dec
movsb
fdivl
sti
insl
addr16
inc
ret
pop
movsb
push
mov
movsl
setne
xorl
shrl
nop
pushf
lret
fcmovb
mov
mov
js
scas
add
jmp
push
adc
push
dec
and
cmp
insb
lret
mov
pop
ja
lods
sbb
pop
lahf
push
push
mov
push
jns
mov
push
les
loopne
ds
outsb
dec
inc
orb
fwait
pop
adc
jle
out
mov
shl
mov
jns
int3
cmc
push
and
das
dec
sbb
loopne
push
and
mov
xor
popf
sub
into
icebp
mov
jns
dec
jge
int3
movb
loope
sub
and
jnp
xchg
xor
test
sub
xchg
outsb
inc
dec
mov
outsb
pop
cmp
or
push
add
lcall
pop
jle
inc
sbb
mov
ds
in
pop
loope
rcrb
fsts
sub
cwtl
mov
jmp
fadds
xor
das
jb
jno
push
test
xchg
psubsw
sub
js
push
push
jno
fistpll
mov
stc
dec
es
stos
outsb
jns
add
or
ljmp
cltd
jae
add
movsb
inc
jno
cmpsb
jecxz
enter
fs
xor
and
mov
or
cli
push
cltd
popf
ljmp
and
cmc
in
and
insb
lcall
xchg
enter
outsb
stc
inc
jo
push
pop
fisubrs
out
pop
hlt
daa
jmp
sub
jp
out
add
out
push
fadd
xor
push
rclb
insb
fucomi
ret
push
out
mov
test
incl
rcl
mov
jmp
adc
lods
mov
fisubs
pop
and
xchg
pop
in
dec
les
rolb
sbb
stos
js
dec
add
xor
incb
pop
aas
mov
mov
jp
neg
or
mov
jno
jns
mov
lret
aam
and
pushf
cmp
inc
shl
and
add
adc
inc
mov
hlt
mov
ljmp
mov
enter
enter
xchg
push
hlt
das
sbb
sbb
scas
cwtl
jns
icebp
fldz
push
test
arpl
in
loop
sahf
shl
push
jmp
pop
addr16
in
stos
push
xor
pop
stos
dec
xchg
ja
popf
ret
xchg
lea
stos
mov
dec
and
mov
xor
ret
in
xchg
dec
repz
push
mov
es
aaa
sbb
test
lea
inc
movd
push
push
jecxz
xor
dec
inc
stc
sbb
jecxz
mulb
lods
cmpsb
es
stos
je
sbb
lret
push
out
mov
jge
pop
rorl
mov
xor
pop
push
fildll
inc
movsb
nop
mov
mov
call
inc
fistpl
int
movsl
addr16
cld
ret
flds
push
test
fs
ss
inc
mov
rcrl
lret
leave
adc
push
stos
mov
cld
addr16
aad
icebp
jb
sbb
sbb
push
aam
in
sbb
fimuls
jmp
jno
pop
pop
aam
ljmp
aad
push
pop
xor
mov
mov
lret
and
in
pop
mov
daa
jge
push
out
sahf
dec
sub
push
mov
jae
adcb
and
inc
imul
push
out
aam
and
mov
push
xchg
dec
pop
roll
push
lods
pop
lret
je
fst
cmpxchg
sti
mov
jmp
enter
and
cmpsl
xor
iret
push
test
mov
jo
test
mov
rolb
push
jle
mov
loopne
or
mov
push
xor
pop
adc
in
scas
fwait
pop
dec
mov
pop
ljmp
popf
imul
pop
mov
jb
pop
push
add
jns
shrb
adc
jp
mov
cmpsb
lcall
mov
jl
and
aam
or
test
pusha
pop
sbb
fisubl
out
aad
hlt
ds
inc
mov
bound
ror
cltd
nop
pop
add
pop
sahf
mov
mov
xor
inc
cmp
mov
jne
xor
push
repz
jle
pop
jb
dec
les
sarb
mov
cmp
std
iret
push
adc
jns
popa
dec
sti
in
push
sbb
shll
sub
or
dec
cmp
imul
mov
push
daa
mov
adc
sub
mov
inc
dec
and
inc
xor
lret
pop
push
mov
push
mov
cltd
dec
inc
int3
stos
cmp
das
cltd
popa
mov
nop
test
sbb
mov
jp
stos
std
push
push
ficompl
jmp
fistl
push
dec
je
push
or
loopne
sub
imul
mulb
movb
jl
xchg
push
addr16
scas
xchg
jbe
sarb
dec
out
and
call
xorl
xor
icebp
mov
pop
and
sti
test
mov
jmp
popa
rcl
leave
sbb
pusha
hlt
inc
shrb
adc
aad
lock
jo
clc
mov
xor
mov
inc
andb
loop
movsl
andl
dec
mov
fisubs
sti
add
sub
aam
adc
into
dec
movzbl
cltd
stos
call
mov
sar
fistpll
cmp
fimuls
arpl
jg
loope
lods
mov
mov
aaa
int
sub
orb
sbb
mov
cwtl
movsl
sub
shl
ljmp
mov
jecxz
adc
daa
mov
inc
imul
add
add
xor
or
insb
cltd
inc
adc
sbb
jg
pop
adc
inc
xor
fcomps
popf
dec
scas
fs
mov
or
mov
shrb
nop
aam
xlat
and
fsubs
aad
sub
imul
mov
inc
pop
jle
cltd
add
and
test
add
pop
lods
pusha
xor
push
dec
jo
or
add
mov
push
lea
pushf
xor
dec
das
dec
movsl
lock
in
push
stos
jge
pop
popf
in
out
inc
sahf
mov
mov
sub
cmpsl
or
jno
or
mov
and
sbb
cwtl
call
movsl
cltd
out
clc
jno
add
inc
leave
and
sbb
push
cld
jbe
xor
or
cli
into
cltd
daa
inc
test
nopl
cmp
sbb
movsb
cli
fdivrl
cmp
int3
fwait
orl
cmpsb
or
inc
out
aaa
sub
test
inc
and
xchg
mov
sahf
pop
sbb
popa
fmull
push
inc
jecxz
imul
clc
dec
mov
sbb
mov
or
imul
aam
adc
stc
mov
clc
fisttpl
dec
jae
rorl
xchg
fisubl
ret
adc
push
scas
push
es
xchg
ficomps
jbe
sub
leave
sub
inc
lret
loop
js
or
fisubrs
inc
dec
fsubrs
js
mov
pop
hlt
iret
loope,pt
pop
xchg
sbb
insb
adc
push
pushf
add
lods
adcl
in
aas
call
mov
dec
lret
or
ja
add
ret
push
mov
and
jns
arpl
iret
push
xchg
or
push
cs
mov
mov
pusha
jp,pt
push
mov
in
jnp
stc
mov
jbe
jg
jb
addr16
sbbb
cwtl
jae
cmpb
jl
add
out
cwtl
cmp
inc
scas
pop
cmp
out
fwait
xchg
mov
dec
and
repnz
leave
xor
mov
sub
mov
xchg
lods
rep
xchg
test
arpl
das
or
inc
pop
fisttpl
ret
and
dec
xor
mov
xor
imul
sbb
add
push
loope
jl
mov
fs
into
and
push
dec
jo
in
std
adc
les
mov
cmp
test
push
ljmp
sbb
stos
push
cmp
and
sub
inc
pop
pop
sbb
xorl
mov
gs
int3
xchg
jmp
cmp
mov
cmp
repz
jnp
jae
sub
outsb
inc
aam
mov
sbb
out
sub
xor
shrl
popa
and
aas
mov
int3
xlat
hlt
pop
xchg
fnsave
std
or
sti
mov
jmp
ljmp
mov
xchg
scas
mov
jle
sub
mov
int
in
loop
rcl
jns
or
sti
add
aas
sbb
cs
fistpll
loop
repz
push
aam
repz
pop
dec
int3
addr16
shl
add
cld
jge
inc
jno
cmp
call
cmpsb
enter
in
jne
repz
xor
cmp
int
fs
js
sbb
es
cmpsb
xchg
leave
jne
and
inc
mov
aad
loope
insb
test
leave
subb
inc
outsl
xor
leave
push
aas
xchg
cltd
std
xor
flds
jnp
jae
push
scas
loop
mov
inc
icebp
mov
mov
lods
xor
int3
popa
jne
jns
or
cld
dec
dec
cmp
pop
popa
push
cwtl
push
dec
cli
or
out
repz
bound
add
pop
icebp
in
mov
mov
inc
ret
movsb
jl
orl
jnp
adc
inc
inc
movsl
sub
jl
push
testl
cltd
adc
scas
dec
mov
jne
adc
adc
test
fsubrl
stos
add
and
adc
cmp
imul
shlb
insb
roll
sbb
lahf
add
inc
gs
mov
xchg
fists
add
cmpsl
xor
jno
andl
shll
mov
cwtl
sti
xchg
in
inc
add
sti
dec
add
enter
out
dec
pop
push
ljmp
inc
push
add
pop
xchg
xchg
fidivrl
jo
jl
aad
cli
xchg
inc
mov
aam
xlat
stos
out
loope
mov
and
adc
imul
sub
add
sbb
xchg
lahf
fisubs
rcrb
nopl
stos
pop
adc
mov
and
mov
mov
cmp
aad
sti
mov
sarl
addb
sub
test
aam
add
xchg
mov
inc
xchg
test
add
push
mov
clts
inc
jmp
sahf
aad
jge
or
lock
hlt
and
jecxz
packsswb
add
fbld
arpl
movsb
adc
in
gs
and
pushl
lcall
sbb
dec
push
mov
aad
adcb
and
test
nop
insb
mov
fisubs
mov
inc
std
popf
aas
fmuls
push
jne
stc
imul
xor
fldl
push
inc
popa
jge
or
push
pop
sub
adc
enter
push
and
pop
jmp
xchg
jge
inc
out
movsb
inc
je
int
bound
test
lret
cmp
shll
mov
adc
cli
rorl
xlat
leave
mov
bound
mov
fcomi
ds
in
mov
mov
popf
rorl
add
idivb
jb
xchg
push
sahf
test
and
pushf
push
sub
pop
jmp
pop
enter
add
in
popf
fisubrs
jg
and
add
dec
je
scas
cltd
jge
shlb
push
inc
jns
jnp
dec
sbb
pop
mov
xchg
lcall
mov
outsl
ror
dec
push
out
push
mov
mov
lea
arpl
adc
mov
loope
jge
out
dec
test
loop
sub
pop
fsubr
fnstcw
mov
jge
out
decb
xor
xor
add
push
cmp
movsl
or
mov
xchg
das
pop
je
xor
inc
nop
cmp
mov
loope
fadds
or
mov
mov
dec
pop
fistpl
dec
cmp
fs
mov
insl
inc
push
test
rcrl
mov
ret
sarb
mov
mov
scas
mov
jmp
stos
adc
sahf
cmp
ret
mov
inc
ret
cmp
mov
mov
cltd
sub
decb
popf
pop
jmp
xor
mov
pop
push
push
inc
mov
into
sbb
out
fldcw
addl
pop
stc
add
dec
adc
scas
popf
jae
cmpsl
pushf
out
pop
pop
test
push
inc
pop
sahf
out
dec
mov
out
sub
into
pop
jmp
fldcw
jl,pt
sbb
jge
xlat
jecxz
aad
nop
sbb
cmp
iret
mov
inc
aam
cmp
dec
jle
cmpb
cltd
push
add
frstor
adc
stc
clc
bt
mov
dec
xorb
pop
xchg
cltd
das
cs
and
stos
daa
lods
cmpsb
iret
sti
push
jmp
dec
icebp
mov
mov
push
pop
adc
fimull
inc
sub
push
jns
mov
mov
enter
lods
jl
xchg
xlat
adc
xor
adc
les
push
insb
or
xchg
inc
and
lret
and
push
cmc
test
pusha
andb
mov
add
imul
pop
mov
fmull
jnp
pop
push
popa
cmovl
std
fs
pop
mov
testb
test
cld
and
dec
mov
imul
mov
and
jmp
push
aaa
aas
xchg
pop
cmp
mov
sbb
pop
in
lcall
xor
sbb
push
jmp
out
mov
sbb
cs
decb
push
mov
popf
enter
mov
int3
add
sub
rcrl
insb
aam
cli
mov
stos
popa
xchg
mov
movsb
jl
lea
dec
mov
out
jno
push
and
add
outsl
mov
mov
shll
mov
cmp
mov
mov
shlb
outsb
icebp
scas
sahf
callw
arpl
lret
aad
test
lock
ret
inc
test
mov
pop
andb
sahf
clc
jg
push
repnz
popa
in
jnp
icebp
xchg
dec
jmp
ficoml
pop
jns
mov
jp
hlt
xor
aas
push
jp
lods
ljmp
popl
icebp
adc
mov
push
cmc
add
pop
in
popf
daa
jbe
int
or
jbe
mov
jge
lea
shll
sub
decb
jne
add
fistps
add
sbb
repz
inc
pop
jl
adc
pop
push
bound
addr16
push
sub
cmpsl
and
sub
in
arpl
lahf
adc
dec
sub
negl
es
outsl
ret
fs
std
inc
or
push
ds
mov
cmp
jbe
ficoml
and
sbb
push
mov
pop
test
dec
jg
shll
mov
les
inc
fwait
jp
call
fwait
test
bound
lahf
pop
loopne
xchg
push
std
pop
mov
mov
icebp
mov
sbb
loope
daa
jmp
pop
adc
pop
push
pop
sub
fsts
xchg
orl
push
subl
sarl
clc
and
mov
jnp
stos
cmpsl
xor
outsb
fildl
pop
mov
rcr
and
sbb
add
xor
inc
xor
roll
push
xchg
std
out
mov
mov
push
subb
lods
les
nop
push
mov
sub
mov
mov
cs
scas
mov
std
aam
cmp
lds
adc
inc
rcrl
sbb
addr16
xor
pop
shll
jnp
insb
fildl
jbe
ret
pop
inc
push
inc
cmp
sbb
out
dec
divl
jbe
ds
loop
jl
mov
pop
cmpsl
fdivrl
aam
dec
fsts
les
and
repnz
sub
cmpsb
push
or
and
popf
aam
or
add
add
lea
dec
imul
popf
inc
cmpsl
mov
push
xchg
jno
mov
and
dec
std
das
out
enter
pushf
imul
fimuls
bnd
xor
jae
xchg
cmp
je
loop
loop
xchg
inc
mov
or
arpl
inc
mov
mov
jne
std
sbb
fildl
cmc
int3
mov
cli
sti
enter
fwait
jo
cmpsb
lcall
mov
pop
jle
mov
add
adc
mov
and
outsl
in
nop
sahf
mov
mov
daa
adc
mov
sub
pop
shrl
xchg
popf
push
inc
cmpsb
in
in
sbb
mov
leave
jno
mov
lahf
xor
adc
mov
rclb
je
cld
std
scas
test
adc
mov
divb
mov
data16
mov
and
sbb
cmp
and
xor
mov
xlat
jl
and
mov
inc
adc
jle
stc
aad
lea
mov
outsb
mov
and
lods
scas
dec
or
cmp
movsb
andl
ss
add
ds
imul
test
ja
call
fistpl
mov
stc
outsb
pop
in
js
mov
adc
iret
ja
or
dec
arpl
dec
or
test
sti
adc
sahf
adc
movsb
cmpl
into
inc
popf
and
notl
push
popf
push
aad
pop
adc
gs
shll
lret
bound
fidivl
xchg
enter
mov
pop
insb
out
daa
hlt
cmpsb
inc
mov
jl
icebp
mov
jnp
sete
sbb
inc
das
divl
test
adc
movsb
loope
test
xor
and
sar
lds
cmp
js
mov
sar
mov
cwtl
loope
jno
jbe
sti
repnz
pop
pop
cmpsb
popa
sub
imul
out
fnstsw
xor
mov
mov
sub
int
inc
ljmp
push
adc
mov
iret
cwtl
push
shrb
jae
jmp
mov
js
sahf
ficoml
and
adc
sub
test
mov
or
popa
or
andb
rcrb
in
sub
popa
mov
jnp
out
dec
jp
xchg
sub
test
dec
dec
hlt
push
jae
std
jecxz
pushf
cltd
or
xlat
pushf
xchg
out
xchg
cld
pushf
add
and
nopl
push
iret
sub
and
shlb
or
repz
pop
inc
pop
rcll
jg
adc
es
cwtl
xor
mov
xchg
sub
pop
popf
fcmovb
sub
sahf
stos
inc
test
pop
fisubl
dec
dec
out
jp
shlb
pop
ja
ds
js
call
xchg
mov
ss
cmpsl
mov
aas
icebp
loop
pop
aaa
into
pop
sbb
mov
adc
stos
xchg
in
mov
mov
cmpsl
sti
xchg
and
popf
adc
jno
pop
rorl
pop
imul
and
es
adcl
lods
cld
jnp
xchg
xor
inc
clc
add
or
xchg
pop
add
add
xchg
std
stos
stos
jne
jecxz
jne
stc
push
fcomip
pushf
mov
mov
jmp
lahf
fimull
repz
and
lds
sbb
ja
sbb
mov
xchg
inc
xchg
adc
mov
push
pop
and
jle
jnp
scas
js
adc
push
lea
push
jg
sbb
push
mov
popf
repz
pusha
and
and
pop
add
stos
stos
inc
adc
sahf
add
imul
pusha
mov
xorl
adc
mov
enter
idivl
or
push
mov
mov
lock
stos
lret
data16
mov
mov
jle
sub
sbb
xchg
js
invd
arpl
cs
cltd
loopne
adc
leave
lods
push
push
mov
lds
xchg
ficoml
push
int
aas
sbbl
cmc
rcrl
cmp
or
lea
fstl
jo
or
les
cwtl
pop
xchg
jg
inc
int3
fwait
sti
andl
cs
mov
inc
cmpsl
xchg
xor
mov
inc
lods
in
cmp
xchg
call
pop
pop
mov
sbb
sti
pop
sbb
jns
push
sub
cld
test
inc
xlat
adc
adc
iret
insb
test
pop
mov
sub
out
mov
jmp
shl
sub
cmp
push
mov
lret
sbb
push
cmp
and
adcb
mov
xor
enter
cmc
cmp
call
or
dec
out
aas
add
mov
add
push
pop
or
data16
mov
sbb
repz
js
data16
lea
lea
fcoml
mov
ja,pt
pop
or
fadd
and
add
out
xchg
adc
xchg
jmp
call
es
icebp
call
scas
mov
inc
inc
add
sbb
orb
insb
and
outsb
jnp
and
lods
cmp
or
mov
test
hlt
adc
adc
stos
dec
push
rcr
rolb
xor
cmovle
mov
sbb
jmpw
xor
leave
xlat
scas
pop
scas
push
sbb
jge
imul
arpl
lock
lods
adc
pusha
outsb
adc
cli
add
movsl
out
ds
dec
sub
pop
pop
in
sti
outsl
sub
jge
inc
jle
push
sbb
push
dec
popf
sub
popl
inc
inc
dec
or
cltd
mov
jno
ja
dec
inc
sahf
mov
cli
xor
btc
add
inc
lds
and
rcrb
sbb
imul
pop
outsb
andb
mov
iret
stos
adc
push
outsb
or
mov
push
and
or
mov
imul
and
ds
ffree
popa
push
icebp
push
leave
mov
xchg
dec
mov
cmp
push
and
mov
push
inc
add
jno
or
loope
lea
and
iret
mov
lret
sbb
sti
mov
repz
fiadds
mov
sbb
lea
lds
lea
xchg
js
mov
aam
jl
mov
adc
cmc
insl
inc
pop
mov
mov
xor
and
inc
stos
and
inc
dec
push
xchg
jns
xor
or
mov
sarb
pushf
aam
mov
add
pop
push
jge
lds
repz
mov
jmp
add
mov
fldl
fmull
fcompl
push
or
jp
lds
repnz
push
mov
fists
or
lods
cmp
cwtl
loope
pop
imul
ret
adc
pop
mov
push
psubw
in
scas
dec
sbb
push
and
addr16
mov
mov
lcall
in
sbb
lds
xorl
and
add
adc
pop
pop
mov
and
xor
ja
shlb
and
adc
jmp
mov
lcall
gs
in
push
cltd
jbe
cmp
lahf
mov
pop
and
adc
jge
sub
divb
push
ljmp
mov
out
jl
pop
cmpsl
stc
out
dec
xor
std
in
cmp
xchg
in
mov
or
push
jge
mov
sahf
push
fcmovu
or
in
inc
in
loopne
xlat
push
jne
push
popa
jb
sbb
adc
jg
push
push
inc
mov
xchg
pop
jecxz
repz
test
js
jb
push
dec
aaa
cltd
pminub
lret
mov
mov
int
pop
arpl
testl
mov
inc
dec
frstor
fists
jbe
and
repz
shll
sbb
pop
insl
shrl
pop
inc
pop
cmp
pop
inc
mov
ja
sub
mov
xorl
lock
fisttpl
repz
sub
mov
subl
sbb
add
mul
loope
push
and
fistpl
jns
out
mov
xor
stc
sbb
jbe
pop
fucomp
cli
xlat
inc
fisttps
addr16
inc
push
add
mov
clc
jge
or
adc
movsb
adcb
inc
shll
dec
mov
inc
lods
mov
aaa
std
xchg
imul
popf
cld
movsb
lahf
adc
gs
mov
dec
scas
xor
push
fs
dec
xchg
scas
dec
xor
cmp
dec
nop
dec
fs
cmp
mov
push
mov
mov
idivl
cmpb
jmp
loope
xor
in
fstpl
sarl
mov
cmp
js
jne
dec
ficoml
adc
enter
cmp
movsl
cmpsb
push
mov
push
ret
lods
iret
repnz
xchg
ja
nop
enter
mov
pop
insl
stc
xchg
cmpl
pop
scas
add
pop
aam
bound
jo
pushf
outsb
or
js
add
dec
int3
inc
pop
xchg
rclb
lods
cld
sti
test
jo
inc
daa
loopw
rcl
movsb
mov
sbb
add
jbe
jmp
daa
imul
aad
lcall
lret
pop
icebp
dec
inc
or
jge
jne
fs
dec
arpl
out
loop
shll
mov
jbe
enter
cwtl
outsb
rcll
adc
xor
lcall
loop
jle
testl
sahf
mov
fldt
add
adc
push
rorb
mov
shlb
pushl
lds
pop
sarb
aad
inc
ret
out
loope
daa
xor
fmull
repnz
fs
xor
push
cmpsl
push
xchg
inc
fldl2e
jno
sbb
aad
jp
out
arpl
mov
in
js
enter
dec
daa
jge
xor
imul
sub
add
mov
test
mov
and
jb
jmp
fnstsw
cwtl
inc
sarl
sub
dec
lods
shl
les
jg
push
dec
sub
push
cmpb
jb
jne
out
sbb
test
push
stos
inc
lock
mov
fs
sbb
pop
loop
cmp
scas
ja
iret
add
outsb
inc
dec
lock
sbb
pop
mov
pop
xor
dec
pop
dec
sub
jmp
and
movntq
ret
and
in
aaa
popa
mov
mov
test
xchg
rolb
call
sbb
mov
out
xor
inc
jp
lahf
pop
push
dec
int3
sub
and
lods
and
sbb
daa
jmp
cmp
stc
jp
les
inc
iret
and
pop
sub
outsb
sbb
fidivs
inc
not
sub
or
jg
jmp
mov
mov
dec
ret
out
andb
mov
sar
cmp
jl
push
ret
js
mov
inc
cmp
jle
nop
push
pop
cli
inc
cmpsl
sbb
call
sbb
bound
addr16
adc
sbb
push
lods
cmp
dec
scas
lahf
mov
lahf
sub
cmp
ljmp
sarb
loopne
aam
ret
rclb
jl
xchg
add
sub
xchg
push
stos
push
popf
fcoms
test
mov
dec
jb
lahf
jmp
or
jns
stos
inc
test
fwait
lret
dec
ret
mov
jecxz,pn
cmp
test
pop
dec
out
in
add
lds
push
test
jmp
imul
xchg
xor
dec
fnsave
in
repz
aam
push
stc
xchg
mov
mov
out
pop
pop
xchg
aas
adc
and
push
dec
adc
mulb
pop
sub
add
out
push
rorb
ret
mov
add
lds
sub
stos
push
and
jle
lds
add
cmpb
or
and
lret
incl
imul
rolb
sbb
sbb
test
mov
jbe
cltd
sbb
aas
out
inc
mov
mov
test
lds
lret
or
js
xchg
xor
ljmp
movsb
std
pop
fsubr
and
out
mov
incl
testl
pop
sqrtps
sbb
mov
inc
fsubl
adc
fs
xchg
xchg
pop
es
jecxz
push
pop
aam
call
xchg
ss
int3
into
mov
repz
test
fs
leave
outsb
add
adc
add
xchg
and
repz
dec
jnp
fistpll
inc
or
push
mov
cmp
dec
negl
xchg
out
push
in
or
test
mov
nop
in
add
lock
idivb
pop
adc
mov
push
mov
xchg
filds
stos
repnz
clc
xchg
push
imul
pusha
push
mov
ret
lods
dec
jne
stos
idivb
pusha
cwtl
push
cmp
dec
sub
xchg
inc
cli
outsb
fisubl
fdivrs
repnz
mov
cld
mov
add
adc
aad
inc
aas
jnp
les
and
iret
add
icebp
jge
sbb
inc
cmpsb
fs
mov
add
int3
mulb
xor
and
shlb
icebp
fildl
xor
or
dec
loope
test
sbb
insl
jg
sub
pop
fcoml
sbb
dec
out
pop
mov
add
add
std
rolb
add
pop
ja
pusha
ds
data16
rcr
outsb
push
cmp
xor
push
test
data16
ret
dec
int
mov
testb
stc
in
cwtl
xor
jmp
ret
jg
iret
leave
aaa
lea
popa
cmp
outsb
adc
add
or
mov
fs
fbld
or
inc
add
shlb
lods
rcr
fsubp
int3
sbbl
push
pusha
adc
xchg
enter
loopne
adc
push
mov
xchg
sbb
mov
mov
cmp
cmp
mov
imul
out
cltd
jae
dec
jne
inc
push
sub
sbb
or
call
stos
xor
in
mov
hlt
rcl
xor
shlb
lret
adcl
imul
pop
mov
fimuls
cmp
stc
gs
in
lahf
cwtl
out
ss
mov
cmp
mov
mov
fwait
lret
cltd
cmp
dec
sub
loop
fistpl
jno
mov
sbb
or
imull
out
push
pop
xchg
mov
pushf
repz
xchg
cmc
inc
sub
jmp
mov
iret
jns
std
pop
jae
shr
mov
and
sub
add
jge
outsb
ds
fiaddl
enter
jns
ret
shlb
gs
jle
cmp
ret
cmpsl
xchg
pop
mov
sbb
inc
popa
jmp
push
push
mov
into
pusha
dec
jmp
das
dec
add
sbb
sub
add
jae
xchg
in
adc
into
call
enter
out
xchg
xor
aas
xchg
xchg
pusha
addr16
jg
stc
js
in
pop
iret
pop
add
mov
xor
sub
dec
pop
xchg
popa
sti
push
xor
adc
sbb
push
and
and
add
aas
popf
dec
std
and
sti
nop
aad
sub
cmpsb
scas
jmp
insb
sub
aaa
adc
int3
insb
jb
and
pop
mov
add
jae
mov
adcb
mov
pop
aas
je
mov
into
in
jp
xchg
xor
cld
aas
cs
jge
ficoms
mov
jbe
imul
jge
ds
negl
es
mov
imul
pand
loopne
xchg
sbb
cmp
je
fiaddl
push
bound
sti
or
add
sub
mov
fdivr
jmp
and
insb
adc
pop
jp
or
jne
out
insb
aad
pop
jl
imul
inc
jb
sub
xorb
or
jecxz
lods
jb
movsb
jle
and
mov
or
mov
movsb
fisttpl
xchg
sub
sbb
jo
mov
adc
mov
shlb
mov
lock
aas
and
xchg
into
cmp
dec
ljmp
xorl
cli
add
shrl
rcrl
aam
cmpsl
sbb
insl
or
mov
les
out
sbb
lahf
mov
adc
loop
ljmp
lret
pusha
inc
adc
testl
adc
mov
aam
dec
mov
movsl
push
loop
scas
cmp
add
fmul
repnz
rcll
out
fbstp
icebp
mov
fistps
fistps
loop
imul
push
jae
adc
jl
subb
cmp
call
fs
adc
mov
jp
out
cltd
and
jbe
mov
ret
mov
fnsave
call
xchg
ret
scas
in
adc
xlat
aas
test
or
push
sub
jl
add
adc
or
in
xor
sbb
jecxz
add
jp
fldenv
jno
jmp
enter
sbb
mov
out
add
loop
xor
cwtl
jp
pop
data16
imul
fwait
mov
and
and
movsb
jge
push
je
cmp
insl
adc
fs
cld
xor
mov
mov
xor
addr16
adc
xchg
rclb
or
cli
or
test
insl
data16
jae
push
xor
cmp
insl
sub
dec
jmp
jne
test
in
jbe
sti
push
std
inc
cmp
movsl
je
les
lods
fstp
xor
mov
pop
loopne
pop
or
decb
jo
popa
shrl
cmc
jb
push
cmp
rcl
pusha
out
and
gs
out
dec
jo
mov
adc
jge
arpl
add
movl
mov
aam
scas
ds
aam
in
fidivs
mov
repz
jo
push
cld
pop
pop
sbb
xor
movsb
stos
jne
jbe
push
pop
cmp
pop
pop
inc
int3
es
xchg
adc
inc
jbe
int3
cmp
movsb
dec
nop
int
jnp
push
sub
fisttpll
xchg
add
pop
mov
lods
xor
icebp
xor
xchg
mov
test
loop
call
mov
test
cmp
lods
popf
dec
jb
lret
stc
add
jge
lahf
push
stos
ljmp
cwtl
outsl
out
mull
cmc
pop
xchg
push
sti
and
mov
es
es
leave
sub
xor
js
inc
int
and
push
or
popa
jmp
scas
sti
jmp
cmpb
popf
fsubrs
loope
pop
dec
xchg
inc
popa
loope
fstps
push
push
xor
fmulp
rclb
je
int
repz
ret
cmp
jle
jecxz
adc
ficoml
in
mov
pushf
imul
push
test
mov
pusha
and
and
push
mov
xchg
xchg
or
les
cmpl
ljmp
push
inc
mov
mov
lcall
shlb
jecxz
mov
mov
ret
push
cvtps2pi
lea
ret
add
fldcw
or
bound
addr16
imul
or
xlat
call
push
outsl
jns
and
add
negl
pop
repnz
and
and
lret
aad
out
out
or
mov
cmp
cli
xor
add
add
es
int3
pop
sub
or
std
mov
mov
adc
sub
test
pop
daa
inc
sbb
mov
stos
xor
add
pop
sbb
iret
testb
jno
dec
and
popf
xchg
cmpsb
xlat
xor
sub
cmc
clc
lahf
dec
arpl
repnz
idivb
je
sub
jmp
movsl
xchg
jb
or
leave
out
mov
xlat
push
ja
sbb
enter
fbld
sub
decb
xor
imul
cltd
pop
mov
jg
mov
add
ret
xchg
sbb
pop
sbb
rcll
mov
in
dec
mov
fwait
sbb
cmp
sbb
add
outsb
push
sbb
in
sbb
sbb
sub
psubw
push
lret
popf
dec
mov
fstpt
push
sbb
ljmp
or
mull
rcr
sbb
inc
insl
inc
sbb
stc
jne
or
cmp
outsl
mov
or
and
popf
roll
mov
cwtl
mov
cmp
pavgb
lret
in
add
popa
pop
mov
add
jae
std
into
jl
out
mov
inc
movsl
mov
adc
or
punpckhbw
lcall
adc
mov
xlat
lea
shl
dec
ljmp
data16
mull
dec
mov
push
in
jl
mov
idivl
icebp
mov
push
std
mov
aad
les
lret
push
xlat
dec
lahf
mov
dec
daa
pushf
xchg
out
xor
pop
jmp
push
int
je
test
cmc
mulb
loop
cwtl
out
push
push
loop
sbb
scas
cmpsb
dec
or
test
aad
mov
loope
jns
cmp
outsl
xor
sti
jecxz
and
xchg
dec
outsl
scas
mov
push
and
and
es
psrlw
sbb
jmp
push
add
push
inc
pop
sub
arpl
lcall
test
mov
push
rolb
and
rorb
addr16
icebp
sbb
push
push
andl
add
sub
pop
sub
je
outsl
aas
in
mov
jae
push
stos
pushf
pusha
dec
xor
clc
xlat
nop
std
lock
ds
fidivrl
js
jge
mov
inc
xor
cwtl
leave
fbstp
out
push
cmp
push
jbe,pn
jno
and
inc
mov
push
daa
enter
jns
decl
sti
xlat
cld
pusha
rorb
nop
mov
pop
sbb
lods
decb
dec
mov
xchg
pop
pop
lcall
mov
cwtl
ds
dec
cmp
cmc
sbb
loopne
and
or
dec
mov
adc
ljmp
xchg
or
testb
movsb
push
hlt
cmp
mov
adc
or
xor
xchg
sub
ljmp
shrb
cmp
mov
xchg
test
pop
pop
aas
push
xchg
loopne
push
dec
inc
jne
jno
mov
sbb
pop
call
sub
mov
sub
or
adc
ljmp
dec
push
in
ret
cmp
push
xor
cwtl
pop
je
lahf
and
std
stos
mov
arpl
add
add
dec
or
push
cmp
lret
fcomps
inc
inc
daa
icebp
jg
adc
loop
cmc
loope
sub
rolb
inc
fcmovnbe
ret
repz
mov
pop
loop
lods
hlt
mov
xchg
mov
dec
and
jp
inc
sbb
leave
out
fistpll
aad
pushf
aaa
dec
add
rolb
out
dec
btr
mov
pop
cmp
out
or
xor
inc
fstpl
dec
push
pop
mov
cs
ss
shlb
cmpb
add
add
jbe
pop
adc
mov
mov
in
mov
jecxz
pushf
addr16
ret
rclb
clc
xchg
pusha
push
fcoml
jb
bnd
clc
ret
or
scas
cmpsb
mov
jecxz
ds
cmp
lahf
jo
sbb
mov
negl
inc
fldt
or
push
js
into
jno
push
mov
mov
cli
sub
push
fs
pop
fcompl
dec
cltd
out
sub
jp
jp
inc
lret
mov
pushf
cmpsb
inc
jnp
push
aam
or
xlat
xchg
sbb
pop
inc
jl
lcall
mov
dec
xchg
dec
lcall
aas
clc
pop
nop
jo
xor
andb
lea
mov
test
bound
mov
lcall
pop
jae
push
or
bnd
enter
test
adc
inc
jmp
sub
and
sbb
mov
xchg
fdivs
inc
mov
enter
dec
pop
or
mov
popa
xchg
adc
cltd
in
fistpl
inc
mov
fsubrs
imulb
pop
ret
add
sub
jge
mov
push
js
sbb
pop
cmpsl
ret
jae
clc
or
xchg
das
pop
mov
or
idivb
call
imul
orl
mov
or
inc
pop
lock
and
xchg
clc
daa
mov
add
push
push
daa
cmp
enter
sub
or
jp
push
and
shlb
mov
pop
xchg
pop
or
sarb
ret
xchg
scas
or
lods
ljmp
fimuls
stos
test
imul
out
lds
xor
orl
pop
call
jmp
cmpsb
xor
sbbb
shll
adc
mov
sbb
cmpsb
stos
and
leave
cmp
into
loopne
insb
or
lods
lret
push
mov
aas
orb
aas
jne
outsl
push
adc
xchg
sbb
xchg
push
push
jl
sar
cmp
xor
jno
addr16
stos
sub
cwtl
imul
mov
out
mov
cltd
out
or
jne
pop
imul
pop
fsubs
xchg
sub
or
shrb
jnp
mov
loope
movsl
inc
jb
cmpl
mov
arpl
jno
xchg
lret
sub
das
test
inc
xlat
jns
ds
xorb
rorb
pop
lea
xchg
xchg
xor
adc
pop
xchg
inc
mov
lea
jnp
sti
negb
loop
or
idiv
mov
mov
mov
iret
adc
and
aam
cmpsl
leave
xor
cli
sub
cmp
mov
jo
pmuludq
or
cmp
cmp
pop
xlat
add
jle
push
pop
fcomi
cmp
sbb
and
dec
scas
repz
mov
and
arpl
andl
xchg
jl
scas
loope
and
into
pop
test
add
rcrb
add
jnp
addr16
lret
shlb
jge
shll
daa
sbb
fidivrs
mov
icebp
fs
ret
out
mov
mov
add
pop
jmp
mov
rcll
aaa
roll
and
and
jge
mov
lods
mov
js
fisubrs
das
ljmp
add
leave
pop
cmpsl
int3
ljmp
clc
jns
cs
mov
and
push
pop
arpl
cmp
push
mov
icebp
push
fimull
fistps
aas
dec
test
iret
imul
jle
fiaddl
cwtl
mov
movsl
aam
shlb
imul
int
push
xor
fistpl
aaa
test
add
cmpsb
in
jl
xor
fisubs
push
sti
xchg
cmc
insl
add
mov
fsts
sbb
cmp
into
ja
popf
jmp
cmpsb
push
lock
ja
stos
outsb
pushf
loopne,pn
cmp
sub
je
movsb
movsb
test
sub
mov
add
int
ficompl
pop
pop
cmp
push
sub
ds
ret
jo
cmc
or
inc
out
ret
jle
pop
popf
dec
mov
lods
addr16
loop
jg
dec
pop
sbb
and
cwtl
rclb
rcll
lods
in
faddl
cmc
in
iret
add
push
lahf
out
inc
in
cmc
and
jnp
aad
imul
sarb
fistpl
adc
mov
mov
pop
into
push
ljmp
les
sarb
inc
fwait
lea
ficoms
scas
xor
js
mov
fdivrs
testb
test
test
pop
inc
outsl
mov
loope,pn
pop
sbb
push
sbbl
punpckhbw
mov
fsub
jg
insl
mov
rol
add
outsl
pushf
stos
stos
adc
dec
inc
js
into
push
cmp
jl
js
movsb
sub
fistpll
mov
in
jl
into
or
mov
je
sbb
add
jns
xchg
xchg
call
or
jne
xorb
mov
iret
cmpb
sub
test
ds
mov
mov
shlb
and
lret
mov
add
sti
data16
mov
fucomip
jle
js
xchg
scas
loopne
arpl
inc
sub
pop
cmp
xchg
pop
sub
int3
push
out
loope
cmp
and
imul
enter
hlt
hlt
jae
hlt
popf
sbb
pop
add
idivb
cmp
rcl
cwtl
negb
adc
mov
pop
pusha
ret
push
outsb
cli
inc
imul
scas
cmp
fnsave
push
sub
jbe
inc
and
sub
fsub
and
fucompp
idivl
addr16
mov
cmp
mov
xor
push
loop
pop
lds
pop
sbb
cwtl
arpl
xor
insb
test
pop
and
rcr
push
sub
repnz
jg
xchg
mov
ss
xor
push
arpl
and
xor
xchg
fdivs
lods
or
mov
stos
or
aaa
lahf
and
add
dec
setno
xor
cwtl
add
xlat
ret
jg
out
test
dec
mov
adc
out
ret
mov
add
mov
aad
jne
fmuls
jne
jo
and
and
daa
loop
test
sbb
add
dec
mov
cmp
xchg
lods
shlb
out
mov
push
ror
dec
mov
mov
inc
jg
push
inc
mov
test
mov
sub
xlat
jmp
test
push
lret
xchg
jnp
es
jbe
mov
popf
sbb
es
mulb
sub
mov
xchg
das
pushf
test
loopne
push
cmpsl
dec
gs
push
pushf
xchg
scas
sbb
cli
dec
in
sbb
gs
xchg
mov
push
hlt
inc
inc
pop
pop
dec
loope
test
mov
nop
lahf
dec
pop
pushf
lcall
inc
ret
mov
gs
cltd
mov
arpl
adc
fbld
leave
and
incb
add
dec
adc
sbb
cmc
push
lcall
lret
pushf
jae
sub
jnp
xor
insb
xchg
mov
ror
cli
push
je
dec
in
inc
stos
lods
pop
sbb
aam
xchg
int3
mov
cwtl
lea
adcb
loop
ss
gs
xor
xor
jo
mov
and
addr16
mov
lret
add
movsb
pop
pop
inc
lahf
inc
inc
inc
fsubr
jns
rclb
xor
jb
jno
jl
pop
mov
dec
xchg
jl
inc
push
xchg
repnz
sbb
insb
mov
imul
jbe
and
dec
flds
dec
jmp
pop
mov
in
dec
push
sbb
in
fstl
adc
xor
mov
push
xchg
pop
insl
ja
leave
push
cmpsb
cmp
and
adc
cli
adc
xchg
fwait
in
jle
or
adc
xchg
xchg
les
mov
push
cwtl
jne
movsl
cmp
shr
pop
push
loope
fnsave
into
dec
scas
test
addr16
mov
add
adc
cmc
loopne
dec
cmp
inc
sub
mov
imul
aad
enter
xor
jae
lock
xchg
adc
push
dec
data16
test
xor
mov
arpl
mov
imul
xor
sbb
mov
loop
enter
imull
push
xchg
ss
std
fildl
fs
xchg
outsb
sub
adc
and
mov
loop
out
outsb
rcl
cmpsl
push
scas
fnstenv
cld
sub
mov
gs
pushf
ficomps
sub
enter
push
mov
inc
popa
push
xlat
dec
jbe
and
mov
pop
jp
icebp
add
mov
or
in
inc
mov
movsl
sbb
dec
pusha
adc
dec
orb
jns
dec
arpl
mov
inc
xchg
imul
jmp
sbb
imul
fcoml
jo
inc
std
sti
jg
lahf
pop
ffree
aas
mov
test
sti
mov
ret
cmp
icebp
add
xchg
nop
pop
pop
xor
xchg
sub
xor
test
dec
imul
xor
dec
jns
bound
aaa
incl
adc
imul
mov
fistl
fisttpl
cld
jecxz
pop
xor
xor
and
dec
test
je
jbe
dec
test
out
mov
mov
add
loopne
jg
clc
pushf
sbb
jg
dec
int3
dec
sti
lret
xchg
imul
inc
push
addr16
repnz
fcompl
out
lret
mov
int3
test
addr16
test
mov
push
pop
dec
loopne
or
bound
mov
mov
in
and
add
test
push
mov
arpl
fcmovnb
mov
fwait
je
lock
loope
xlat
sbb
xchg
xchg
movsb
pop
in
dec
fildl
xchg
adc
dec
push
cs
inc
les
mov
dec
jg
int3
pushl
lcall
rcrb
loope
jecxz
adc
into
das
push
mov
jnp
inc
addl
imul
stc
int3
scas
inc
jb
cmp
dec
jne
cmpsl
mov
daa
mov
mov
mov
mov
inc
cli
aam
inc
mov
mov
add
fdivrl
aas
mov
or
jecxz
or
push
imul
dec
add
loope
stos
enter
cld
mov
xchg
pop
stos
lret
inc
es
adc
es
and
xor
inc
mov
cmp
add
push
lcall
leave
cltd
bound
daa
leave
mov
lahf
mov
or
pop
add
movsb
sbbl
lds
dec
pop
adc
push
pop
push
mov
sahf
dec
mov
xchg
in
mov
daa
and
scas
in
rorb
es
out
push
pusha
mov
xchg
mov
push
ljmp
mov
mov
inc
or
jle
push
and
inc
cmp
ret
lock
sbb
stos
add
push
cmp
aad
pop
xor
sbb
jecxz
insb
js
xchg
or
lret
pusha
rcrl
mov
shl
cmp
jle
xchg
in
xchg
mov
insl
sbb
shl
stc
mov
out
fcomip
add
mov
inc
scas
xchg
jecxz
mov
push
out
mov
test
test
xchg
lret
imull
inc
mov
add
lahf
xor
repz
lds
mov
jnp
push
xor
xchg
push
mov
or
sahf
cmp
cmp
mov
dec
xor
cmc
mov
mov
xchg
jg
jbe
sub
repz
lea
idivl
daa
in
xchg
bound
push
xchg
aad
xor
mov
fisttpl
idivl
push
inc
outsl
fwait
jo
lahf
jnp
push
sub
sbb
gs
cli
das
dec
test
lret
lret
mov
xchg
pop
jmp
lret
aaa
and
loopne
cli
and
mov
hlt
icebp
jae
mov
pushf
in
jl
cltd
jne
push
bound
les
push
jb
in
sbb
mov
les
mov
or
dec
stos
sub
and
inc
repz
jne
lret
jl
lods
mov
cmpb
xchg
into
out
pop
clc
test
rol
xchg
movsb
cs
add
cmp
pop
aas
aam
inc
sub
notb
scas
das
xchg
xchg
mov
adc
add
out
push
jmp
outsl
je
in
fldt
les
mov
and
adc
test
lea
mov
and
jns,pn
fcmovu
push
or
push
mov
jge
mov
inc
dec
stos
mov
in
outsl
jbe
and
xor
fistps
xchg
mov
cli
psrld
mov
lret
es
rcrl
jge
push
cmc
inc
and
jo
mov
and
and
xchg
lock
pop
rcl
push
mov
mov
dec
dec
sub
in
lret
subl
imul
je
test
aam
cs
add
scas
jl
and
mov
ds
mov
pop
stos
inc
mov
aas
jge
xchg
out
pop
call
dec
nop
mov
xor
push
inc
int3
fsubl
sbb
mov
mov
push
xor
xchg
lds
and
sbb
ret
int
jecxz
push
add
add
adc
jbe
lahf
popf
mov
mov
negb
mov
js
xchg
xor
dec
cli
js
lret
push
test
sti
and
jne
xor
lock
add
out
xor
in
dec
int3
mov
sbb
inc
sahf
fwait
xchg
and
fisttpl
pop
pop
rcrl
mov
inc
out
xor
mov
dec
repz
lcall
sahf
add
xchg
mov
inc
jns
testb
sbb
js
add
insb
push
and
push
mov
ja
sbb
arpl
sub
rcl
lea
xchg
sub
dec
jge
inc
out
and
inc
jecxz
std
cmc
fidivl
dec
pop
jg
or
imul
cltd
jg
inc
lret
and
je
fnsave
jg
jb
loope
lret
lock
aad
ret
enter
mov
arpl
xor
movsl
jecxz
out
and
sbb
mov
in
ss
addr16
add
mov
xchg
notl
or
mov
fisttps
mov
repz
xor
mov
gs
pusha
mov
jno
outsb
xor
mov
xchg
bound
loopne
sbbb
add
jne
ret
add
xchg
mov
pop
dec
mov
ret
mov
sub
pop
hlt
es
das
adc
ret
adc
sub
xor
cmpsb
dec
movsl
enter
clc
mull
out
xchg
mov
jno
or
mov
sub
jecxz
inc
push
call
mov
sti
push
push
pop
cmpl
sbb
cmp
arpl
rolb
sbb
jns
push
sete
adcb
fistpll
xor
clc
xchg
pop
ret
pop
fwait
pop
mov
popl
mov
dec
inc
cmp
jge
push
inc
pop
jno
or
fdivr
sub
rol
push
incb
aad
out
push
xchg
pop
test
mov
mov
pop
cmpsb
int3
push
lahf
xorb
or
js
xor
icebp
adc
cwtl
sbb
orl
sbb
xor
and
push
in
dec
lock
add
push
cmpb
push
in
xchg
xchg
out
test
dec
clc
lret
sbb
ror
das
adc
xor
add
icebp
xchg
out
cmp
js
adc
add
gs
int3
lcall
add
or
xchg
and
mov
fstl
out
or
pop
jno
and
jl
aas
mov
test
out
daa
inc
cmp
add
and
dec
stos
stos
scas
xor
sub
push
repnz
or
loope
add
lret
mov
cmpsl
pop
cltd
cmp
sub
cli
fistpll
ds
shr
pop
inc
ljmp
arpl
push
push
xor
stc
or
pmuludq
data16
xchg
incl
mov
aas
jb
daa
vphadduwq
inc
or
shrl
inc
push
in
adc
test
pop
leave
xor
movb
mov
push
adc
jl
cmp
lds
cmp
adc
addr16
pop
inc
ss
adc
daa
cmp
sub
out
fwait
sbb
push
int3
adc
lds
rclb
xor
and
loopne
push
daa
fists
sahf
rcrb
mov
roll
scas
and
mov
xchg
repz
mov
ljmp
adc
cmp
mov
sbb
fs
jmp
mov
enter
mov
test
lret
sahf
mov
mov
cli
shlb
xchg
test
add
notb
sub
pop
mov
dec
adc
jle
push
inc
xor
dec
pop
jne
ja
pop
fstpt
mov
xchg
and
stos
xchg
or
ror
jo
sbb
lcall
jecxz
xchg
pop
xor
loope
outsb
cld
cmp
mov
jl
pop
aad
sbb
mov
push
mov
push
push
dec
sbb
inc
push
mov
leave
pushf
sti
lock
mov
xchg
idivb
pop
and
xor
xor
andl
jne
cmpsl
fxam
out
fsubr
pop
iret
lods
mov
push
pop
jnp
ds
gs
add
add
inc
lcall
push
mov
ljmp
lock
and
lret
rol
test
insb
dec
incb
popf
stos
adcl
aas
sbb
pop
or
aaa
mov
imul
pushf
in
icebp
dec
pop
imul
mov
out
xchg
fwait
imul
fwait
or
cmp
call
adc
push
mov
mov
xor
test
addr16
inc
leave
test
jne
sub
in
stos
dec
out
in
sbb
cmpsb
xor
push
mov
loope
pop
aad
aam
das
jo
jae
cmp
jge
sub
imul
js
and
int3
and
fwait
pop
cld
stos
outsb
xchg
xchg
popa
sub
fistps
and
push
or
jmp
xlat
cmpsb
jecxz
add
mov
or
imul
cwtd
cmovae
push
popf
insl
idivb
sbb
dec
movsl
orb
dec
jmp
adc
pop
sbb
cmp
or
jo
fmuls
enter
enter
ss
jg
test
orl
je
cs
js
dec
add
jnp
and
cs
xchg
lret
repnz
rcll
nop
lret
imul
sbb
sbb
jbe
outsl
imul
jecxz
pop
loopne
pusha
out
aad
dec
mov
scas
mov
lahf
inc
xchg
lret
adc
clc
outsb
mov
jge
jge
daa
sub
mov
sti
jp
loop
in
mul
sub
jno
cwtl
or
and
inc
cmp
fcmove
xchg
pop
sbb
js
loopne
and
lods
sub
clc
cmp
lret
in
add
adc
mov
inc
incl
mov
loopne
inc
bound
push
stc
mov
aad
fldln2
pop
push
les
popa
dec
lods
add
push
bnd
or
jl
push
sbbl
sbb
cmp
in
xor
lret
icebp
mov
rcll
mov
inc
push
jbe
xor
inc
sub
mov
jp
addl
icebp
cli
lods
jnp
xor
lea
mov
test
cmp
and
ljmp
outsl
or
or
push
popa
popf
push
dec
cmp
lret
or
cmp
pop
jg
xchg
lods
mov
adc
aam
test
repz
mov
movsl
mov
adc
clc
test
fneni(8087
data16
ds
iret
int
push
add
mov
out
push
movsl
iret
repnz
xchg
imul
cmp
xor
ret
mov
cli
test
adc
mov
mov
imul
cmp
popa
add
stos
jecxz
fdivl
mov
pop
ficoml
push
and
mov
pop
and
xchg
inc
fldenv
inc
jns
neg
adcl
xchg
clc
mov
xor
mov
sbb
mov
das
test
int3
clc
xchg
and
mov
sub
leave
push
pop
pop
or
stos
sahf
ss
cwtl
xchg
mov
js
pop
js
and
sbb
inc
pop
out
es
fbstp
push
add
or
and
jo
cmp
popa
push
leave
out
insl
xor
push
cmp
mov
lods
or
add
pop
mov
cmp
push
cld
and
lods
stos
iret
pop
lret
xor
add
lahf
xchg
addl
mov
jnp
and
test
mov
pop
movsb
jne
loopne
ficompl
adc
sbb
cmpsl
out
sbb
jae
adc
daa
ret
xchg
inc
arpl
adc
daa
cwtl
add
dec
adc
sub
std
jg
stc
les
ds
ja
roll
rorb
mov
aaa
mov
xor
dec
arpl
out
ljmp
out
sti
adc
jmp
xchg
in
lret
inc
jno
xor
pusha
push
aas
int3
stos
dec
push
lret
pusha
add
hlt
out
sub
sbb
out
push
push
mov
inc
add
out
push
rolb
jne
inc
in
rcll
ret
das
or
sbb
or
adc
inc
push
add
sbbl
mov
shrb
imul
sbb
cltd
lahf
lret
lods
or
and
xor
ds
cmpsl
lods
repz
in
xchg
pop
enter
jp
pop
jbe
mov
pop
test
add
mov
inc
inc
adc
cltd
pop
call
or
ljmp
cwtl
cltd
inc
xor
test
lahf
js
lods
loope
cltd
rcrb
and
xor
dec
hlt
std
cli
imul
testl
sbb
les
out
das
je
leave
adc
or
mov
outsb
in
int
pop
in
xchg
dec
mov
test
jle
push
xchg
shrl
or
in
aam
pop
xor
ficoms
data16
loop
cmp
es
or
fstps
dec
sbb
push
mov
inc
push
xchg
out
dec
or
mov
xchg
jmp
jl
fprem1
or
in
daa
ret
mov
pusha
lret
push
testb
dec
mov
in
sub
mov
pop
mov
repz
and
and
mov
and
pop
add
das
xor
shlb
aam
push
stc
push
fadd
je
lcall
push
add
xor
sub
add
mov
rcr
xchg
and
mov
je
andl
sub
cmp
xchg
jp
push
xor
stos
cmp
scas
and
mov
push
mov
aaa
stos
jbe
mov
iret
xorb
lds
push
pop
push
lret
fists
popf
add
cmpsl
mov
in
inc
adc
out
ja
xchg
dec
and
xor
popf
outsb
fidivl
sub
jno
mov
repz
in
fdivl
ljmp
aad
ficoml
xchg
cltd
call
add
xor
xchg
or
push
push
fwait
xor
cmc
xchg
mov
jge
add
popa
lea
outsb
jmp
adc
xchg
ret
push
mov
lret
and
inc
sub
mov
and
and
push
into
mov
lock
xchg
push
data16
divb
pop
jo
or
daa
mov
sub
nop
push
out
fwait
and
sahf
mov
les
mov
pop
adc
xor
ss
push
int3
test
repnz
pop
pop
push
dec
das
repnz
xor
inc
xor
add
cmpsb
movsl
fimuls
cmp
xor
cmp
or
fcomps
mov
scas
mulb
fistpll
adc
sbb
scas
arpl
and
sub
daa
add
ss
adc
jns
mov
shll
xor
inc
lcall
or
add
dec
jg
enter
mov
ret
inc
andl
jnp
adc
adc
ret
loop
in
mov
cmpsb
pop
test
dec
out
adc
std
pop
addr16
data16
ds
inc
mov
lods
arpl
iret
mov
push
jmp
jb
nop
xchg
scas
or
push
mov
jecxz
add
jge
pushf
or
pop
into
stos
mov
and
enter
jno
dec
and
jno
dec
mov
mov
pop
fiadds
das
hlt
lods
mov
lret
fnstcw
jmp
jp
call
add
jae
xchg
add
pop
repz
mov
adc
imul
roll
jl
and
lods
aad
mov
shll
or
add
lods
enter
jecxz
pop
stos
mov
test
cmp
mov
and
cmp
pop
jnp
inc
push
ljmp
xor
xor
push
vpslld
pop
out
movl
fs
mov
jl
into
mov
insl
jg
dec
aad
xchg
sub
sbb
cmpsl
stc
popa
dec
shr
push
mov
jmp
mov
popf
cmpsl
sbb
lahf
insb
pop
test
pop
push
xchg
loopne
xor
jge
jp
lock
cmpsb
push
aam
outsl
test
out
nop
bound
xchg
or
dec
insl
andl
nop
jno
fcom
inc
sbb
inc
or
les
mov
nop
sbb
and
and
mov
pop
mov
push
xor
jbe
add
inc
adc
outsl
push
mov
in
or
out
clc
xchg
dec
sbb
stc
mov
pop
jne
add
out
and
push
cmp
cmpsl
pop
stc
mov
cmp
dec
mov
adc
aam
mov
adc
dec
and
mov
in
test
pop
xchg
shr
add
clc
add
cli
scas
mov
into
jp
imul
mov
pushf
movsl
imulb
pop
and
cmpsb
jge
and
pop
arpl
jl
scas
arpl
sbb
inc
xlat
insb
and
sbb
sbb
push
sarl
dec
iret
xor
lock
xor
mov
push
sbb
dec
adc
inc
test
jae
mov
movsl
push
loop
mov
loope
int3
lahf
cwtl
pop
lret
call
dec
inc
xlat
mov
mov
gs
out
mov
imul
mov
insl
jb
xor
add
mov
cmpsl
adc
or
mov
sub
sbb
push
pop
push
pop
push
aad
or
ret
in
es
loop
and
or
loop
xchg
fstl
in
es
pop
or
xchg
jno
aaa
loop
xor
fcom
fs
adc
push
fucomp
cmp
daa
pusha
dec
add
jmp
lods
fisubrs
out
or
and
sti
rcr
fs
push
xchg
imul
and
cmp
mov
ja
ljmp
cltd
mov
std
adc
movsl
js
addr16
ror
mov
or
sarl
inc
gs
js
out
cltd
push
dec
shrb
cld
cmp
add
call
push
and
jge
cmp
int
mov
xor
mov
pushf
movsl
test
xchg
aas
push
jne
jl
cmp
push
push
out
and
sub
mov
add
mov
push
xchg
addr16
sbb
repnz
push
cmpsl
loopne
push
fists
cmpl
and
icebp
call
sahf
mov
push
int
sbb
mov
into
dec
into
jge
or
push
or
adc
push
xchg
sbb
aaa
and
outsl
inc
cmc
fcom
push
bnd
ss
mov
cwtl
push
cmc
or
insl
adc
inc
movsb
fldl
stos
lds
aam
mov
jp
addr16
xor
jb
mov
mov
insl
jns
sti
dec
sub
ss
jp
insb
gs
mull
mov
pop
popa
push
in
test
inc
test
dec
dec
push
test
mov
pop
loop
push
lods
pop
loopne
insb
sti
pop
addb
and
fidivs
out
mov
out
sahf
inc
xchg
into
pop
pop
std
xchg
sub
jle
cmc
imul
add
xor
or
mov
roll
testb
insb
es
sbb
out
xchg
cwtl
mov
cmp
pop
push
cmpsb
sub
lds
fnstenv
bound
push
stc
dec
jecxz
fcompl
inc
dec
push
int3
push
shrl
xchg
dec
test
mov
sbbb
lret
cwtl
or
jg
lea
mov
cmpsb
xor
mov
mov
mov
scas
scas
mov
xchg
idivb
jnp
or
cli
or
stos
add
popl
jb
add
mov
jp
and
xor
and
out
lahf
in
push
cld
xchg
loop
loop
test
popa
ja
xchg
call
lock
cmpsb
pop
mov
mov
loope
lock
adc
cmp
push
lahf
pop
mov
adc
testb
cmpsb
jo
sahf
dec
mov
ss
lcall
sahf
cmp
push
addr16
jge
or
nop
dec
pusha
cwtl
and
mov
rcr
xchg
stos
jno
jp
xchg
cmc
cmpsb
or
cmp
xchg
xchg
mov
out
jb
je
xchg
dec
pop
loope
push
mov
xchg
hlt
xchg
pop
bndstx
xchg
xchg
sbb
sarl
push
lret
ficompl
outsb
lret
pop
mov
mov
dec
mulb
xchg
jecxz
and
rcll
pop
mov
popa
int
jl
pop
adc
push
stos
jp
lret
jecxz
push
movsb
int3
pusha
xchg
out
out
add
mov
push
xlat
xchg
sarb
cld
ss
inc
aas
cltd
or
gs
push
pop
popf
adc
mov
or
int
xor
xor
mulb
lcall
pop
fsts
push
repnz
sar
mov
or
adc
test
cwtl
iret
push
test
push
stos
test
mov
int
xlat
mov
cmp
outsl
or
xchg
cmp
cld
inc
mov
stc
cmp
fnsave
lods
mov
adc
adc
sbb
sub
pusha
push
jne
mov
adc
inc
daa
sbb
pusha
dec
enter
sbb
rep
popf
shll
sahf
pop
push
andb
sub
mov
push
pop
pop
cmp
sbb
xor
mov
shrl
pop
cmpl
dec
pop
pop
jg
sahf
frstor
or
sbb
push
cmp
mull
jne
or
or
std
je
adc
jp
rorb
jns
stc
sub
or
ret
mov
int
mov
inc
fbstp
xor
jecxz
mov
shrb
out
push
cmp
int3
fisubl
iret
mov
out
xor
and
xor
daa
pop
lds
hlt
faddl
push
mov
dec
addb
pop
cmc
data16
push
pop
sbb
xor
lret
js
outsb
repnz
testl
popf
rcrl
pmaxsw
mov
xchg
test
dec
mov
and
jecxz
jp
pop
aas
and
cmp
subl
sub
call
in
js
je
sti
out
inc
inc
repnz
jns
test
xor
pop
push
addr16
inc
inc
fwait
outsb
push
sub
add
test
push
jbe
jne
test
sub
popf
daa
xor
les
gs
fisubl
sub
jno
adc
and
push
jle
popf
adc
or
inc
dec
sti
std
dec
sti
xchg
cmp
jne
or
xor
pop
xchg
adc
gs
jb
int
into
mov
test
aam
push
ss
arpl
xchg
mov
cmp
inc
bound
cwtl
mov
push
imulb
pusha
push
fstpl
jmp
cmp
or
scas
gs
push
push
in
fs
sti
imull
shlb
popa
insl
and
add
mov
test
cmovl
ljmp
or
addr16
xchg
mov
call
iret
lret
cmpsl
xlat
test
sub
xor
divb
add
push
movsl
fcoml
add
loop
repz
loope
fisttpll
xchg
mov
call
xchg
mov
push
jge
sbbl
inc
adc
pop
fistl
loop
stos
xchg
push
add
xor
scas
mov
inc
stc
cmp
daa
ret
sub
pop
leave
add
test
stc
stc
push
out
sbb
push
call
xchg
jnp
ret
fists
add
shrl
cmp
dec
push
aam
mov
ja
ss
frstor
mov
mov
mov
pop
dec
gs
mov
sub
cmp
cwtl
mov
dec
cmc
jbe
push
add
out
lret
jbe
and
sub
push
popa
adc
xchg
add
adcl
sub
ljmp
bound
mov
out
icebp
sub
addr16
popf
dec
sbb
scas
inc
fwait
push
cs
add
jbe
sub
subb
lods
bound
std
sbb
mov
cmpsl
jp
jne
xchg
std
fstps
cmp
jb
add
lret
pop
inc
mov
sub
fnstenv
xlat
jl
pushf
test
sarl
outsb
xor
ljmp
pop
adc
fldenv
out
dec
mov
mov
and
js
adc
sub
insb
insl
loope
psraw
jg
sahf
lds
fidivrl
negb
xor
adc
in
mov
test
fsubrs
jp
test
pushf
push
fsubs
hlt
les
push
push
int
out
imul
daa
sti
insb
in
lods
add
pop
sub
gs
in
dec
sarb
ret
rorl
mov
bound
jo
sbb
adc
and
xchg
test
xor
pop
add
repz
fstpl
mov
mov
outsl
cwtl
push
mov
xchg
xchg
xchg
inc
cmpsb
aad
jnp
and
arpl
add
lret
mov
or
aam
cmc
je
lock
push
xchg
push
popa
jg
sbb
fwait
je
int
insl
cmc
idivb
ret
dec
xor
lret
jo
jo
sbb
mov
mov
fwait
stc
nop
movsl
pop
jbe
xchg
imul
xchg
int3
pop
adc
scas
inc
addr16
stos
mov
out
outsb
or
mov
mov
mov
push
xchg
push
std
into
cli
xchg
jp
cmp
sbb
dec
ficompl
jae
hlt
and
rcl
and
cmc
mov
outsl
adc
sahf
aad
jg
in
xlat
in
loopne
lods
jge
inc
and
xor
fwait
pop
sbb
lret
popf
js
sub
sbb
imul
dec
xor
mov
dec
adc
mov
jmp
ljmp
sub
ror
shll
jbe
sub
pop
outsl
mull
gs
lock
out
cmp
mov
gs
fs
cmp
pop
or
incb
mov
jge
scas
in
inc
xor
xchg
or
es
imul
movsl
jmp
popa
push
testl
mov
stc
mov
test
sbb
popa
or
cltd
pop
adc
mov
mov
inc
test
fidivs
xor
adc
dec
inc
and
pop
gs
mov
mov
pop
fiadds
addr16
loopne
call
jmp
iret
lods
out
adc
scas
dec
int3
leave
jle
xor
jno
out
shl
xchg
fs
mov
pop
mov
repnz
call
imul
inc
mov
call
fs
shld
mov
sbb
push
sarl
stos
sub
adcl
enter
mov
pushf
mov
xchg
in
jge
jo
loope
pop
fstl
jge
popa
push
xchg
cmc
adc
lock
push
aad
aam
decb
sub
dec
mov
cwtl
sarb
lods
push
xor
mov
popa
xchg
dec
jno
sbb
fst
mov
std
loopne
insl
bound
sbb
xchg
movsl
nop
popa
repnz
jl
xchg
cmp
stc
mov
fiaddl
sub
fs
iret
jnp
subl
movl
fwait
je
jg
pop
aaa
mov
movsb
jo
xchg
insb
mov
mov
jne
movsl
inc
sub
sub
stos
dec
push
into
sbb
xchg
push
sub
lods
adc
loope
outsl
data16
add
and
or
repnz
out
jecxz
aaa
add
add
pop
je
and
bound
fldcw
jmp
pop
adc
or
dec
cs
jno
jns
lods
decl
push
mov
xchg
adc
mov
mov
in
std
lds
sub
sbb
stc
popf
aad
sbb
daa
in
scas
push
cli
out
xchg
clc
inc
aam
loop
cmp
push
dec
and
popf
icebp
loopne
inc
gs
mov
jne
xchg
subl
subl
rcl
mov
fcoml
das
addr16
push
ja
cli
xorb
xchg
repz
jl
or
xor
and
sub
mov
xor
ss
cld
and
pop
adc
jl
mov
jmp
cld
fwait
push
mov
inc
pop
push
pop
cmp
mov
sbb
rcll
dec
dec
or
mov
in
out
mul
gs
mov
pop
pop
add
xchg
into
jp
scas
dec
or
test
shlb
je
pop
inc
shlb
xchg
push
sub
clc
shlb
fmuls
in
arpl
insb
dec
lods
and
outsl
stos
push
or
push
inc
dec
sbb
push
inc
insb
adc
fistpl
jl
inc
and
cmpsb
hlt
add
pop
test
aam
popf
mov
mov
mov
test
frstor
cmp
sub
hlt
pop
add
lods
pop
sbb
fwait
xor
sub
sbb
iret
inc
js
xchg
das
psubq
add
mov
mov
lret
and
push
fs
pushf
test
mov
insl
adc
ss
push
mov
and
call
sub
bound
cmpl
adcl
inc
test
cld
jo
mov
lret
sarl
ljmp
xlat
int
ss
cmp
pop
mov
test
pop
mov
mov
in
mov
out
lcall
orl
adc
sub
scas
test
popf
popf
adc
mov
xor
imul
outsb
add
cmp
jae
je
outsb
imul
pushf
adc
jle
icebp
xor
mov
scas
sbb
push
sbb
rcl
test
cmp
cmpsl
cmp
loop
cmpsl
adc
outsb
jge
inc
mov
sbb
xor
scas
shl
adc
leave
aad
xchg
inc
scas
out
ret
jge
mov
insb
sub
mov
dec
fstl
iret
add
sar
aaa
add
sub
mov
hlt
sbbb
push
push
mov
or
mov
cmpsb
inc
jnp
mov
in
adc
xor
lock
cmp
pop
lods
subb
loopne
popa
cwtl
mov
es
pop
pop
inc
inc
or
movsl
lods
std
mov
pop
arpl
xor
jns
add
mov
dec
add
idivb
sbb
inc
fs
fwait
dec
scas
repz
test
and
ficoms
jnp
cmp
dec
mov
and
dec
lods
enter
andl
mov
std
sub
lret
les
shll
dec
mov
cmovl
jo
mov
mov
and
sahf
or
leave
cld
outsb
cmp
mov
jo
mov
and
test
push
adc
stos
or
xchg
shlb
push
or
mov
adc
push
and
mov
jle
mov
mov
push
dec
addr16
mov
inc
jle
aad
int3
dec
push
data16
insb
pushf
pop
mov
dec
shrb
fnstenv
dec
lcall
sahf
inc
mulb
lahf
mov
jo
mov
mov
pop
ss
dec
mov
hlt
mov
inc
mov
loope
mov
pop
movsl
sbb
cmpsb
pop
movsl
repz
sub
vprotb
mov
mov
push
cld
loope
sub
es
pop
mov
popa
dec
addb
pop
int
aas
fwait
popa
lcall
jle
jmp
sbb
leave
out
push
adc
xchg
stos
clc
xor
dec
cmp
cmc
test
clc
or
mov
sbb
mov
cmp
pop
notl
les
movsb
mov
imul
push
sub
out
adc
xchg
mov
xorb
stos
cmp
mov
ljmp
sahf
cmp
enter
aaa
dec
pop
mov
and
xchg
push
pusha
cli
mov
xor
sti
sbb
xor
adc
pop
sub
push
cmp
jp
out
sbb
loopne
push
pop
call
addr16
js
cmp
andb
mov
jp
mov
inc
dec
jl
punpcklwd
push
pop
xorl
stos
mov
fidivrl
and
addb
pmulhw
aaa
pushf
adc
push
into
mov
aas
popw
je
mov
sbb
jae
pushf
jnp
sub
insl
pop
mov
jns
jecxz
pop
aaa
hlt
mov
popf
sbb
xor
nop
add
out
repz
mov
mov
mov
dec
or
push
jne
icebp
insl
inc
sbb
test
mov
aam
cmpl
mov
movsb
pop
and
push
ja
stos
and
jle
loopnew,pn
leave
xchg
push
test
ret
sahf
inc
jle
sbb
cmc
loopne
jno
in
cwtl
cmpsb
xchg
adc
sahf
and
ljmp
xor
les
pop
sbb
inc
sbb
loopne
sub
maxps
push
or
mov
inc
int
stc
dec
jle
pushf
dec
movsb
fs
scas
es
mov
jb
test
and
adc
pop
jle
sub
dec
jns
aam
dec
icebp
jno
inc
xchg
and
and
stos
cli
mov
movsl
das
mov
xchg
je
cmc
repnz
add
sub
mov
movsl
fcomps
add
xchg
out
pop
xor
inc
shlb
aaa
pop
out
sbb
lock
push
xchg
jo
in
rclb
push
scas
mov
roll
mov
loope
jbe
dec
dec
add
dec
arpl
or
nop
pop
ret
mov
pop
imulb
and
push
inc
faddl
fldt
outsb
lret
imul
dec
add
shll
sbb
dec
adc
add
mov
push
jmp
mov
add
sub
mov
insb
cld
pop
pop
outsb
pop
in
addl
cmpxchg
add
testl
lods
insb
xchg
xor
or
lret
jecxz
xor
and
xor
pop
push
xor
push
xor
insb
call
cmpsl
in
and
mov
fldt
push
or
add
mov
fstpl
inc
pop
mov
and
shrb
repz
xor
hlt
sbb
or
and
xchg
in
jo
sbb
or
jle
not
in
imul
sub
xchg
lds
into
aas
stos
stc
or
or
ljmp
or
aam
and
enter
out
fs
jmp
mulb
jg
sti
and
mov
push
mov
cltd
loopne
loope
push
push
pop
out
pop
jge
add
jge
call
hlt
cmp
loopne
cld
ja
sbb
jp
xchg
pop
out
mov
push
pusha
jb
lahf
pop
jge
popf
int3
subb
cs
pop
push
xchg
sub
repz
ja
out
sti
mov
bound
xchg
das
pop
lods
cli
inc
dec
push
add
dec
int
div
ss
out
loop
sbb
leave
insb
idivl
test
push
xor
xor
aaa
or
loop
hlt
push
aas
ja
mov
imul
adc
jmp
mov
pop
test
push
test
jg
mov
push
jg
cmp
inc
das
outsl
orb
test
cld
or
faddl
imul
movsl
std
imul
mov
sti
into
cli
ja
in
xchg
adc
sub
and
imul
out
ljmp
and
sub
mov
aas
shlb
pushf
mov
inc
in
sar
fnstcw
xlat
loopne
jns
mov
movsl
lods
push
mov
cmpsb
mov
mov
mov
adc
sub
loope
lret
and
test
inc
imul
pop
push
cs
dec
cmp
jg
sub
scas
cmp
add
xor
ret
mov
inc
cmc
es
mov
inc
addr16
mov
lds
in
ds
imul
fwait
or
fsubs
mov
in
mov
mov
push
add
inc
sbb
sbb
mov
xor
mull
iret
sahf
sahf
imul
subl
ja
imul
xlat
fldt
adc
jns
je
lock
add
sbb
mov
test
leave
mov
mov
inc
dec
pop
jle
pop
imul
nop
inc
loope
lret
push
adc
cmp
addr16
mov
cmpsl
sub
sub
lea
push
out
pop
push
mov
sub
mov
inc
fpatan
aaa
xor
lret
cs
mov
cli
mov
or
mull
jp
ljmp
lds
lds
push
dec
pushf
fs
dec
int
jl
outsl
ss
inc
or
mov
fnstenv
clc
test
and
xor
cmp
pop
or
mov
mov
cmp
lea
test
mov
mov
xchg
inc
gs
inc
leave
mov
mov
sub
rorl
cmc
ja
and
xchg
mov
sub
lahf
inc
push
inc
dec
movsl
test
lret
dec
aaa
push
pop
dec
and
jmp
xorb
imul
cmp
adc
jae
xchg
mov
sub
scas
test
mov
sbb
aaa
pop
aad
nop
mov
sub
or
pop
dec
into
fdivl
aaa
adc
aad
push
mov
iret
mov
xchg
insb
mov
xor
mov
xchg
aad
outsb
push
push
insb
pop
scas
xchg
push
cmpsb
xchg
aam
ret
or
inc
outsb
sub
lahf
cmovp
rolb
mov
pop
and
jns
leave
add
xlat
sahf
cmp
sbb
sub
pop
fcomps
and
pop
xchg
cmp
mov
jae
test
sub
dec
fsubr
pop
out
dec
out
adc
pop
insb
mov
inc
jno
outsl
push
xor
jne
xchg
jge
cltd
dec
shrb
xor
xor
ret
fdivs
xchg
pusha
push
ror
push
and
fwait
lds
mov
and
js
dec
xlat
xor
ret
add
imul
pop
jle
xor
jae
hlt
pop
jne
push
add
ljmp
cmpsb
jno
lcall
icebp
dec
jae
sub
bound
cli
out
xchg
dec
fs
iret
adc
and
lret
fwait
scas
rorl
jnp
xchg
cs
xlat
into
push
ret
cmp
cmp
fs
daa
idiv
rcrl
push
rcll
pop
insl
sub
mov
aam
jg
ja
cli
sub
sub
fldl
mov
leave
lock
shl
jl
rcr
and
stos
imul
xchg
pusha
lcall
dec
cmp
scas
add
outsl
push
outsl
lret
call
sbb
push
lret
js
cmp
ljmp
mov
sbb
imul
lahf
adc
and
popf
adc
adc
ficompl
lret
pop
into
cmc
push
adc
sub
gs
mov
adc
sbb
mov
pop
sbb
ss
ss
fcomps
sub
in
mov
sahf
jae
orl
mov
loope
aad
sub
stos
and
clc
ficomps
rcrl
sub
scas
xchg
push
pop
mov
hlt
stos
fstp
xchg
dec
repnz
popf
add
mov
and
or
push
jecxz
adc
jb
inc
pushf
adc
cmpsb
stos
lret
loopne
inc
pop
sub
ljmp
cmp
out
movsl
cmp
push
adc
sbb
fs
fs
dec
jge
ret
repnz
xor
lds
xor
imul
xchg
insb
lods
adc
push
add
cmp
push
add
mov
lret
xchg
jmp
insb
mov
ret
mov
insl
push
jnp
mov
leave
movsb
cmpsl
fimuls
adc
cli
lret
mov
xor
push
cwtl
jae
sub
gs
movsl
movsl
test
xor
mov
cmp
add
nop
stos
xor
push
xor
jae
and
xchg
mov
jg
sbb
insb
shrb
mov
jnp
pop
adc
push
jo
insl
fmul
fisubrs
andl
cld
mov
xor
fdivrl
push
cmpsb
sub
jmp
shlb
fucomip
imul
cmc
rcrb
sbb
aam
or
mov
pop
add
jae
mov
jno
sbb
inc
or
inc
xchg
adc
add
icebp
mov
lret
mov
scas
hlt
sbb
push
fwait
pushf
xchg
in
fidivrs
pop
stos
push
inc
lea
mov
cmp
xchg
add
shll
adc
out
int
pop
in
or
pop
ret
xor
clc
pushf
xor
mov
xor
sarl
cmpsb
xor
xor
inc
push
push
lds
inc
xchg
add
xor
fs
add
cmp
lds
ds
dec
lea
dec
repnz
mov
mov
pop
cmpsb
ficoms
add
pop
xor
sbb
pop
mov
xchg
push
call
push
sahf
andl
mov
out
imul
sub
mov
outsl
pop
or
pop
or
pop
add
inc
popf
mov
xchg
daa
repnz
cmp
add
ja
imul
push
mov
adc
and
xor
mov
inc
mov
jmp
add
jge
and
xchg
rorb
out
pop
rorl
test
cli
cld
pop
sub
jnp
mov
pop
icebp
imul
in
mov
popa
mov
mov
mov
pop
mov
popa
aas
rorl
mov
dec
mov
jecxz
cmp
xchg
fimuls
cmp
sub
xchg
insb
ret
mov
push
mov
cmpsl
mov
jnp
aad
dec
sub
cmpsb
cwtl
xchg
ror
sub
roll
jg
adc
out
cmc
xchg
fs
and
xorb
lret
cmp
test
inc
sub
push
loopne
adc
dec
testl
push
stos
addl
shll
enter
hlt
mov
pop
jns
cmp
fstl
pushl
mov
sbb
pop
cmpsl
stos
jg
pop
mov
xor
xor
fwait
jge
fiadds
add
xor
popl
enter
dec
dec
pcmpeqw
adc
push
sub
arpl
cmp
enter
adc
out
lea
cmp
pop
out
jnp
jne
fnstenv
stc
cld
arpl
and
into
insl
cwtl
shl
fists
fdivrl
add
xchg
pop
jnp
push
pushf
imul
ss
loopne
fwait
testl
rclb
icebp
cmp
in
pushf
pcmpgtb
pop
jle
xlat
cmp
pop
and
and
mov
dec
xchg
int3
mov
push
mov
or
ret
xchg
aad
in
adc
push
cmp
insb
mov
jb
rcrl
je
mov
or
scas
je
fistl
ds
sub
pop
fmuls
lcall
push
jne
inc
sbb
cltd
fidivrl
call
repz
xchg
sbb
es
mov
and
ret
or
jl
cld
ds
adc
fisttps
dec
out
test
call
and
dec
push
cmpsl
or
out
ljmp
pop
sbb
push
stos
stos
xor
nop
cld
sbb
fwait
sbb
or
mov
or
jecxz
sti
in
lock
adc
push
xchg
and
pop
lods
jo
xchg
test
sub
imul
sub
shl
add
scas
jne
dec
adc
dec
unpckhps
mov
ret
repz
mov
sub
jo
cmp
rcrl
int3
push
aas
scas
pop
or
jno
mov
std
scas
call
inc
imul
clc
rcll
dec
jbe
xor
aad
sbb
fisubrl
jns
pop
popf
aad
bound
sbb
mov
mov
ds
insl
lret
sbb
sbb
popl
mov
cwtl
int
or
mov
cmp
jmp
jns
pop
shrl
fwait
imul
pop
mov
add
inc
jns
insb
gs
in
or
sub
push
outsb
inc
push
xchg
dec
pop
xor
xor
xor
lret
push
std
daa
nop
jns
xchg
mov
pop
dec
mov
sahf
sbb
stos
adcl
pop
aaa
popf
repnz
sub
mov
jne
jmp
cmp
rcll
push
cs
fwait
test
outsl
in
mov
lea
mov
push
jle
ljmp
pushf
cmp
xchg
mov
mov
mov
sub
js
or
ficompl
cmp
and
lret
jne
dec
pop
test
mov
cmc
pop
add
fwait
ss
dec
sahf
sub
xchg
popf
jmp
lock
movsl
xchg
test
inc
mov
push
xchg
add
in
test
scas
dec
mov
xchg
jae
loope
mov
outsl
add
inc
inc
outsl
push
cmp
mov
hlt
hlt
jmp
lods
pop
jno
cwtl
loopne
outsl
jo
push
adc
or
inc
lahf
orl
adc
test
mov
pushf
push
xor
int3
sub
and
lea
mov
mov
adc
push
insb
push
imul
stos
ds
xchg
push
enter
pushf
cmp
enter
ljmp
pop
jg
mov
sub
mov
inc
std
sahf
frstor
fidivl
sbb
fldenv
jnp
scas
hlt
or
pop
outsb
aaa
addr16
dec
dec
fcoml
or
sbb
pushf
or
adc
movsl
fnsave
push
xchg
or
out
inc
ja
insb
mov
inc
enter
inc
adc
dec
mov
dec
and
xor
bound
ljmp
xor
jnp
sbb
or
clc
fdivrl
xor
mov
das
push
adc
push
outsb
pop
test
sbb
outsl
into
sub
sar
mov
arpl
clc
jl
push
pop
das
jns
ds
sub
sbb
jg
lret
mov
sub
cmpsb
jb
jecxz
push
imul
dec
cmp
mov
xchg
mov
rolb
pop
call
adc
inc
lcall
fiadds
jecxz
and
xor
pop
stos
repz
pushf
ja
lret
cld
bound
jae
xchg
ja
sub
cwtl
xchg
dec
and
shlb
xchg
mov
cmpb
mov
push
lods
mov
out
mov
sbb
or
addr16
shlb
adc
test
jns
sbb
mov
push
push
or
push
adc
pop
push
jne
inc
test
stos
pop
jle
mov
enter
mov
dec
es
mov
pushf
cs
js
add
fsub
push
adc
cmp
in
aaa
dec
ja
lds
xchg
stc
aas
or
sbb
jnp
push
aaa
pop
adc
inc
mov
xchg
les
add
cmpsl
lods
pop
cli
jecxz
adc
fwait
repnz
push
daa
loop
movsl
test
jo
push
pop
jl
adc
push
inc
dec
ja
xor
repz
jo
adc
addb
jmp
shr
inc
mov
repz
mov
inc
add
in
xor
mov
ja
push
rcl
test
xorb
call
mov
and
mov
repz
dec
addr16
stc
sub
jno
xor
cmp
mov
cmp
sub
out
popa
xor
jp
mov
jb
sbb
leave
and
mov
imul
push
push
mov
fists
sbb
lea
pop
inc
cmpsl
mov
sti
sarb
jl
adc
and
sub
push
jp
nopl
jne
enter
fsubrl
stc
call
les
adc
pop
stc
fstl
dec
imull
xchg
fldt
movsb
mov
push
sub
jmp
or
cmp
iret
cwtl
iret
push
into
push
pop
cmp
imul
xchg
out
fcoms
jae
sti
cmovno
inc
push
incl
sbb
cmpsl
out
shll
mov
mov
test
pop
fsts
in
outsb
cmp
cmc
test
sub
push
push
push
adc
push
sti
fsubr
lods
stc
push
in
pusha
cld
pushf
push
and
testl
loopne
call
insb
dec
aaa
add
imul
inc
imul
push
pop
xor
hlt
mov
fdiv
in
mov
imul
mov
mov
cmc
jl
outsb
int3
sarb
xchg
adc
jge
ja
sub
fidivrs
mov
movsl
punpckhbw
mov
pop
dec
jp
lea
pushf
scas
mov
jbe
mov
push
in
out
fsubl
mov
sbb
sub
xor
imul
push
add
adc
imul
mov
jns
cmc
ss
fimull
ret
clc
pushf
rol
pop
stc
enter
lcall
mov
lret
je
xor
xchg
iret
sti
pop
and
jl
inc
mov
data16
notl
pop
idivl
pop
dec
pushf
fcmovnbe
xlat
mov
mov
add
dec
jecxz
or
fisubrs
sub
or
xchg
xchg
clc
in
pusha
jno
cwtl
cmp
push
leave
scas
mov
inc
pop
jecxz
clc
or
adc
test
inc
repz
adc
repnz
jge
cmp
mov
adc
out
and
fisttpl
fidivrs
jp
push
jge
iret
mov
cmp
cmp
push
popa
pusha
stos
dec
mov
daa
xor
pop
xchg
xor
xchg
add
xchg
sahf
mov
out
fidivs
or
inc
mov
stc
mov
sbb
add
pop
mov
sub
scas
push
lock
pop
jno
adc
in
cmc
mov
enter
sbb
mov
in
je
lcall
addr16
shll
les
fadd
mov
mov
out
popa
roll
or
xor
xor
dec
dec
mov
andl
push
int3
cmp
adc
out
pop
imul
inc
mov
dec
negb
leave
push
in
lret
add
jle
push
mov
push
sahf
mov
xor
lret
jno
std
add
test
push
sbb
mov
faddl
push
loopne
sbb
adc
rorb
rdtsc
leave
xor
and
xchg
repz
inc
mov
sbb
jo
lods
adc
sbb
sbb
into
outsb
insb
push
push
ret
ja
xchg
add
inc
mov
scas
xor
cwtl
shl
push
pushf
lcall
fnstcw
pop
ret
test
movsb
sbbl
test
cmp
cmpsl
mov
in
lret
lods
popa
mov
aas
ss
jbe
add
jle
imul
inc
int
xor
mov
rorb
insl
addr16
fprem
hlt
sub
push
subl
je
hlt
xor
push
cmp
jo
mov
lods
aad
ret
inc
aad
pushf
frstor
repz
sti
insb
mov
mov
hlt
and
push
mov
xchg
cmpsl
xchg
mov
ja
enter
outsb
addr16
jge
ds
jmp
add
cli
mov
popa
and
xchg
adc
imul
shrl
scas
inc
lcall
leave
clc
add
out
andl
xchg
fiaddl
jle
mov
pop
push
outsb
xor
dec
fnstcw
ljmp
mov
lds
call
lcall
lea
outsb
bound
or
in
jge
cli
inc
mov
pop
in
jb
pop
test
inc
jo
jbe
mov
sub
push
pop
test
pop
cmp
rcrb
add
out
lahf
adc
lahf
sub
mov
loop
jp
aad
insb
clc
pop
inc
xchg
and
mov
xor
xor
mov
xor
loop
cmc
int
fiaddl
or
dec
inc
mov
sbb
sub
jne
repz
cmp
mov
addl
xor
jo
ljmp
push
and
inc
test
das
and
lahf
int3
jmp
int
test
cmp
dec
lods
xchg
cmp
movsb
pusha
xchg
dec
shlb
mov
jmp
out
lret
scas
mov
xor
pop
dec
fimuls
jge
mov
inc
inc
cs
inc
sbb
jb
pop
scas
pop
shll
mov
int3
jo
push
jmp
adc
jnp
cs
popa
jge
fcompl
es
pop
xlat
pushf
or
lods
enter
sbb
fsubl
jns
mov
sbb
pusha
imul
jl
xor
notl
into
movsb
ja
jle
pop
xchg
cmp
test
cmp
or
sub
fisubl
sahf
insb
mov
mov
inc
in
cld
mov
cmp
addr16
test
in
dec
push
out
out
mov
xchg
out
mov
mov
jns
or
inc
sub
cmp
mov
and
adc
ret
imul
jmp
dec
out
in
pusha
pop
cmpl
imul
and
ds
data16
mov
xchg
push
mov
mov
push
mov
pmulhuw
ja
call
push
js
pop
mov
test
out
cmp
sbb
cmp
dec
add
lret
add
and
scas
sub
push
jo
clc
fbstp
sbb
push
pop
pusha
mov
or
mov
enter
pop
pushf
mov
or
mov
ss
test
mov
les
xor
pop
inc
sti
lea
sbb
in
sahf
sub
add
je
scas
xchg
add
mov
scas
xchg
fnstcw
inc
pusha
add
add
cmp
movb
lahf
dec
inc
add
xchg
faddl
jecxz
add
imul
pop
xor
orl
jae
aam
popf
out
loop
dec
cltd
sub
lock
flds
adc
fwait
add
incb
inc
sbb
jmp
jmp
in
jecxz
cmpsl
into
jnp
jmp
in
imul
adc
not
test
add
in
mov
pop
sahf
lret
ljmp
or
and
adc
orl
out
mov
cmp
movsl
call
push
dec
es
inc
lret
inc
test
sub
test
inc
adcb
xlat
pop
into
sti
adc
dec
imul
pushf
cmc
jno
call
mov
mov
rcrb
mov
sub
in
cmp
test
test
addr16
imul
repnz
adc
scas
mov
add
fldt
popf
and
mov
mov
in
iret
lahf
sti
cli
cmp
xor
sub
mov
into
add
test
dec
xor
cmp
sub
clc
je
jb
xor
daa
stc
jae
and
sbb
xchg
jae
lock
inc
out
jg
ss
pop
inc
incl
or
sarb
cld
pop
outsl
lcall
enter
stos
xlat
jno
test
test
cmp
jg
dec
or
push
scas
adcl
ja
fcmove
test
jno
sub
pop
movsl
ret
add
sub
mov
mov
push
loopne
push
or
xlat
adc
outsl
add
and
jno
aad
jl
lods
xchg
cwtl
jo
ljmp
jl
fucom
xor
mov
push
das
es
mov
loope
xchg
push
sahf
sbb
movsb
arpl
jp
out
mov
and
pop
inc
sub
mov
sbb
sbb
inc
test
gs
pop
pop
sub
jns
inc
adc
ds
movsl
mov
pop
jo
repnz
cmpsl
fisubrl
movsl
stc
mov
xor
push
inc
push
mov
pop
jo
lock
out
loope
cmpsb
mov
adc
repnz
mov
jbe
bound
in
push
xor
cltd
popa
add
clc
arpl
std
lock
adc
sub
pop
popf
ja
test
loop
jno
sub
dec
test
les
cmp
cld
repnz
push
adc
rclb
xor
popa
pop
mov
stc
inc
xor
cltd
sti
or
mov
xchg
push
add
sbb
call
adc
xor
push
pop
das
mov
sub
inc
inc
dec
mov
fiadds
ja
add
cmp
sbb
scas
rol
call
inc
or
cmp
mov
cld
je
xlat
addl
or
fbld
lods
jae
sub
ds
mov
int3
add
pop
cmp
es
mov
inc
cld
repz
and
jae
inc
sti
dec
sbb
pop
movsl
push
mov
popf
mov
les
xchg
sub
jnp
lret
mov
popa
test
std
mov
cli
adc
jns
leave
in
aam
je
sti
arpl
sbb
orl
sti
and
loopne
lret
push
lahf
lods
pop
in
cmc
mov
add
xor
repnz
fisubl
and
test
in
cmpsl
jnp
cmp
mov
mov
xchg
test
mov
push
ret
pop
outsl
xchg
fildl
fs
xchg
xor
imul
mov
xor
jmp
int3
movsl
lock
mov
jmp
mov
cmpsb
cld
xchg
aad
add
push
cmpsb
popa
sahf
pushf
lods
lret
inc
mov
push
in
cmp
xchg
adc
scas
into
mov
dec
stos
sbb
adc
xor
mov
rolb
aaa
ljmp
inc
jg
mov
xchg
call
cmp
or
pop
xor
mov
cmp
xchg
inc
sbb
push
out
and
mov
shll
jae
mov
pushf
add
lret
cmp
xor
mov
pop
ficompl
leave
into
out
cmp
cwtl
sbb
jmp
jae
push
shlb
inc
jmp
stos
in
cmp
and
adc
fldl
xor
clc
sub
gs
xchg
cmpsl
mov
ret
pop
sub
mov
inc
jno
push
mov
push
inc
nop
fidivl
and
cmp
repz
test
dec
inc
pop
cwtl
repz
roll
mov
pop
mov
idiv
or
jmp
jg
mov
jg
cltd
call
jg
into
push
xchg
js
into
test
jns
jmp
and
cmovle
or
out
adc
mov
jge
repnz
shlb
xchg
jg
xchg
jg
pop
aaa
adc
dec
enter
inc
push
mov
or
movsl
adc
add
lcall
adc
flds
cli
aam
sbb
nop
inc
jge
testl
sarl
xor
xchg
dec
cmp
scas
mov
dec
aam
ja
mov
bsr
mov
insb
xchg
fimuls
stos
push
gs
xchg
enter
in
sbb
shrb
push
int
aad
idivl
lea
sbb
xchg
jg
outsb
inc
adc
scas
sbb
shlb
mov
xchg
adc
les
or
or
jp
push
imul
hlt
sbb
dec
imul
es
call
popf
adc
push
lock
adc
fucomip
arpl
cmp
add
lcall
pop
hlt
mov
sbb
xorl
ds
ja
cmp
inc
mov
inc
pop
outsl
ljmp
mov
cmp
sub
ljmp
pop
sbb
negl
add
ljmp
test
cwtl
ret
push
xchg
test
push
cmpsb
nop
arpl
mov
mov
pop
xor
cli
sbb
sub
lret
int3
je
popf
cwtl
bound
enter
jnp
mov
nop
dec
sbb
scas
sub
and
xchg
and
fwait
inc
adc
sub
inc
adc
jge
fwait
mov
xchg
ss
les
xchg
outsb
xor
stos
mov
pop
or
imull
imul
mov
imul
inc
cmp
pop
sub
xchg
dec
xchg
adc
jle
xor
fbstp
mov
or
dec
add
xor
mov
xchg
int
mov
pop
mov
test
and
mov
mov
mov
push
dec
int
jle
xchg
ds
xchg
jns
push
fstpl
or
jns
mov
mov
clc
es
sub
dec
mov
adc
sahf
and
mov
dec
mov
xchg
cmpsb
and
xchg
mov
and
popf
popa
stc
pop
in
and
add
pushf
xlat
lods
out
push
push
mov
mov
push
ds
mov
sbb
mov
orl
xor
shrb
fdivrp
xor
xchg
adc
xor
iret
and
lods
jno
lds
stos
stos
add
or
sbb
or
lods
sub
adc
inc
in
fisttps
cmp
ret
fwait
enter
and
bound
and
repnz
nop
and
jg
xchg
inc
sbb
shll
dec
mov
dec
jae
xchg
mov
xchg
or
inc
js
adc
mov
pop
adc
roll
fbstp
mov
xchg
or
xchg
cmpsb
fcmovne
and
scas
push
mov
imul
jl
add
cmp
cmpsb
cmp
fs
daa
addl
mov
fldcw
ljmp
ljmp
std
cmp
push
dec
dec
or
xchg
pusha
add
lock
lds
push
push
movsl
push
ss
pop
pop
or
js
daa
or
mov
popa
aam
cmp
lcall
inc
mov
ja
push
jns
pop
jecxz
adc
sub
movq
stos
push
mov
jmp
mov
inc
nop
fwait
xchg
mov
jno
inc
fmull
addr16
adc
decl
jg
push
rcll
test
cli
mov
mov
stc
sub
pop
push
push
sti
inc
rcrb
gs
mov
enter
pop
xchg
jmp
imul
inc
aas
push
inc
sbb
lret
xchg
mov
cmpxchg
jl
popa
sub
pop
mov
in
stos
jle
lcall
xchg
add
and
sbb
push
jge
jno
int3
aaa
lods
jl
dec
add
sahf
jne
adc
sub
test
lahf
in
xor
ret
dec
jno
mov
fistps
in
movsl
jmp
add
hlt
loope
loopne
movsb
push
add
outsb
xor
jns
add
pop
push
and
xor
in
inc
ret
xchg
inc
movsl
jbe
or
pop
lock
mov
dec
scas
int3
roll
std
pcmpgtd
pop
sahf
out
cmpl
cmc
jmp
fisubs
test
shrb
push
add
cwtl
in
jge
lds
lret
xor
imul
js
xorb
sbb
adc
pop
hlt
ds
jne
or
xchg
xchg
add
dec
inc
cmc
jp
xor
call
push
lret
lret
sar
sahf
stos
add
push
js
js
xor
adc
inc
sbb
xor
inc
adc
je
in
push
jl
in
sub
lods
lahf
pop
or
inc
fdiv
test
xchg
dec
das
shrl
sub
and
dec
roll
mov
jo
rclb
inc
push
xor
or
adc
je
mov
inc
sbb
inc
loop
sti
inc
or
sbb
push
aad
dec
mov
sub
pop
or
sbb
scas
fbld
sbb
or
mov
pop
mov
aaa
gs
sub
jns
dec
or
dec
loope
jg
fistpll
dec
push
ljmp
xorb
adc
xchg
and
mov
lret
mov
inc
jl
mov
sub
out
jmp
gs
adc
cmp
dec
hlt
and
jecxz
inc
rol
dec
stos
mov
cmpsb
jne
mov
ret
jmp
scas
enter
or
sbb
sub
jmp
mov
sbb
pand
mov
jl
fdivs
jne
cmpsb
xor
cmp
mov
lock
jnp
arpl
popa
jb
mov
jns
ds
les
mov
dec
pcmpgtw
mov
inc
inc
ljmp
cwtl
mov
inc
sub
add
mov
rcr
sbb
pop
into
pusha
movl
inc
add
dec
cmp
sti
mov
dec
add
mov
jmp
or
or
jno
push
add
xchg
cmp
in
add
cmpl
jnp
into
add
cmp
adc
int3
std
sub
xor
push
popf
ljmp
iret
mov
push
imul
inc
or
je
mov
pop
nop/reserved
repnz
adc
cmpsl
push
out
xor
and
push
adc
arpl
add
push
movsl
jg
cmc
or
mov
in
jg
popf
mov
pop
es
cmpsl
pop
enter
mov
adc
jge
into
sub
icebp
mov
xlat
cmp
jnp
xlat
stos
mov
cmpsb
dec
ret
xor
jp
ljmp
daa
sbb
scas
popa
lahf
add
int3
pop
pop
dec
push
addr16
pop
rorl
mov
and
stos
xchg
add
lea
sub
mov
insl
aad
addb
fnstenv
outsl
lahf
in
fstpt
push
xchg
mov
xlat
cli
push
fdivrl
dec
inc
adc
out
xchg
xchg
pop
cld
xchg
ds
lahf
in
adc
cwtl
pop
mov
sub
dec
insl
das
cmpsb
mov
mov
sbb
sub
push
test
sti
jne
cmpsl
scas
into
adc
sbb
xor
jo
stos
push
jo
imul
inc
out
lret
cltd
std
add
repz
lods
xcrypt-ofb
cmpsl
outsb
mov
xchg
call
add
in
xchg
pop
aas
lahf
sub
in
mov
mov
test
fsubrl
or
inc
pop
xor
or
inc
leave
jge
cmp
and
jbe
push
jmp
mov
and
mov
lcall
xchg
into
sahf
jl
test
insb
ja
int3
jecxz
fnstenv
cmp
sbb
insl
mov
stc
mov
jno
cmpsl
fdivs
adc
dec
jg
loope
je
test
cmp
mov
loop
xlat
jmp
push
cmpsb
dec
jbe
xchg
fs
std
mov
dec
loop
jge
in
jo
outsb
and
jecxz
hlt
push
mov
stc
shll
adc
dec
push
movhps
cs
mov
pop
ss
mov
inc
dec
xchg
dec
inc
inc
movsb
data16
cs
in
roll
jnp
aam
jp
pop
add
fucom
in
mov
cmc
xor
notb
and
push
mov
leave
fwait
or
xchg
stos
mov
mov
das
inc
dec
mov
push
jmp
adc
test
or
imul
inc
add
or
or
sti
rcll
mov
outsb
dec
sub
or
ljmp
mov
adc
in
loopne
jge
sar
popa
mov
lret
test
adc
mov
add
jo
xchg
std
dec
jo
add
jne
push
xchg
icebp
or
inc
shufps
in
cmp
insl
subl
adc
add
push
cmpl
sub
cwtl
mov
xchg
xor
lds
dec
in
cmpsb
repz
pop
clc
push
sub
out
movsb
or
aam
lods
sub
xchg
sbb
aaa
add
stos
inc
ja,pt
dec
push
addr16
sarl
imul
addr16
cwtl
dec
lds
adc
clc
jp
dec
cmpsb
push
inc
stos
repz
jg
in
pusha
cmp
aad
pop
mov
movsb
test
inc
rorl
add
push
mull
aad
jmp
je
lcall
cli
in
subl
xor
ja
cmp
dec
fdivrs
mov
addr16
jecxz
lret
sti
pop
mov
adc
fldt
adc
enter
out
lock
push
cltd
pop
mov
add
xor
and
push
stos
mov
mov
or
lock
hlt
test
add
sub
inc
ret
pusha
jne
cmp
cld
jp
or
sbb
mov
daa
in
lds
and
call
popf
xchg
gs
inc
shll
dec
push
or
pop
lret
decl
sub
lcall
into
test
mov
leave
add
sub
add
outsl
sub
lret
mov
fbld
addr16
jbe
xchg
jecxz
std
add
bound
les
push
pop
pop
arpl
add
es
pop
push
pop
dec
test
lods
xorl
cmpsb
jae
jbe
lahf
movsb
push
stos
repnz
pop
out
sti
and
into
jge
push
mov
outsb
pop
scas
addr16
std
cmp
push
xchg
pop
add
loop
sar
lret
pop
mov
cwtl
bound
jo
xorb
mov
testb
imul
mov
adc
or
jns
movb
inc
jmp
in
or
cvtpi2ps
jmp
dec
outsb
mov
sbb
call
ds
ficomps
lret
jecxz
ss
mov
ljmp
xchg
popa
jae
xor
movsl
pop
arpl
cmp
xor
jl
hlt
out
jmp
in
dec
dec
jmp
fisubl
push
in
popa
aas
fiadds
popf
popa
push
or
cwtl
ret
out
mov
pop
jp
xlat
dec
cwtl
and
and
mov
imul
mov
xchg
jae
jmp
jae
xchg
nop
mov
mov
in
stc
scas
or
dec
xor
mov
fwait
dec
sbbb
jmp
das
mov
mov
loopne
jns
or
repnz
sbb
icebp
imul
aaa
aad
push
cmp
or
in
iret
cmp
xchg
shl
movl
lretw
add
cmp
daa
and
inc
cwtl
dec
xor
aam
cmp
jae
test
nop
aad
das
loopne
out
adc
lret
cmpsb
and
nop
inc
adc
hlt
dec
mov
aaa
push
in
data16
stc
cwtl
jp
xchg
imul
push
inc
xchg
sbb
and
push
pop
insl
dec
jmp
push
xor
jb
andb
or
in
rclb
adc
adc
pop
lahf
fs
fwait
jns
imul
inc
cmpsb
cs
jle
add
lds
jns
or
fnsave
add
mov
outsb
out
shl
push
bound
in
or
xor
int
jl
add
dec
dec
mov
cld
mov
cli
xor
xchg
pop
inc
lret
inc
adc
pop
push
mov
mov
xchg
cmpsb
cli
sahf
mov
js
cmp
enter
jecxz
nop
icebp
ds
out
mov
sbbl
add
jg
ds
dec
mov
inc
shrl
pushf
cmp
stos
loopne,pn
inc
sbb
shlb
push
out
add
or
adc
rcll
jo
push
stos
out
sbb
mov
jne
scas
cli
push
sub
outsl
jo
xchg
js
repnz
jge
das
pop
and
jo
loopne
jo
aas
jp
push
imul
ljmp
sub
leave
scas
xlat
pop
xor
jns
loopne
mov
sub
pusha
data16
jo
push
pop
icebp
lds
scas
mov
loop
clc
repz
gs
addb
clc
imul
pop
add
sub
add
mov
add
imul
mov
mov
rcrl
add
lea
adc
bnd
xor
and
xor
js
aaa
scas
jp
mov
push
out
push
arpl
jge
movsb
xor
ljmp
mov
testl
sbb
loopne
cltd
mov
aam
fidivs
jo
ds
mov
or
test
shrb
xchg
mov
in
clc
inc
add
xchg
pop
and
dec
addr16
adc
aaa
mov
das
xchg
rcrl
adc
mov
mov
pop
in
outsl
push
mov
cmp
mov
push
push
mov
jno
aam
lea
mov
inc
sub
pop
in
je
mov
dec
popa
jmp
push
inc
xor
ds
imul
cmpsl
mov
mov
inc
fs
push
int3
fisubrs
xchg
std
fnstenv
xor
cli
mov
cmp
enter
daa
hlt
fstl
cltd
adc
mov
jg
movsb
xchg
out
mov
add
repz
sbb
jmp
adc
push
push
sub
and
xor
lcall
shrl
mov
sbb
sbb
sbb
cmpsb
adc
scas
imul
std
roll
pop
ss
adc
xchg
or
sub
cwtl
add
pop
outsl
pmaxsw
mov
mov
adc
stos
push
fwait
les
jg
jecxz
icebp
int
mov
fsubr
or
aaa
test
test
mov
jl
sbb
push
jne
push
pop
dec
cmpsb
mov
ja
repnz
popf
cltd
iret
or
daa
push
int
out
loop
mov
aas
push
mov
or
xlat
insb
adc
xor
jl
into
sarb
push
dec
jo
mov
cwtl
imul
cmp
dec
xchg
stos
std
dec
js
pop
cmp
mov
sub
lock
push
jl
xchg
mov
pop
out
or
adc
jmp
jg
mov
adc
nop
pop
add
pop
mov
push
test
test
sti
fidivrl
dec
xchg
lret
js
push
push
sahf
sub
loopne
call
mov
jno
popa
jnp
pop
fisubrl
mov
add
sbb
in
dec
insb
rol
sub
xor
loop
ds
sub
push
pop
lret
movsb
sbb
rcrl
pop
scas
push
mov
adc
push
sub
mov
sbb
shl
push
add
sub
test
out
fs
add
lret
mov
hlt
cli
fstl
shrl
repnz
mov
push
cmc
xor
adc
int3
push
jne
mov
int
inc
nop
pop
xor
mov
push
ljmp
pop
sbbb
cmp
jg
or
loope
scas
push
jg
bound
add
stos
mov
dec
mov
jae
mov
loope
dec
mov
mov
out
mov
cmpsl
aam
sahf
cmp
mov
insb
outsb
sbbb
test
sub
sub
repnz
lods
jne
pushf
push
add
enter
fmulp
es
ljmp
fdivs
jns
insl
pushf
negb
xor
in
lcall
add
stos
cmpsl
xor
mov
mov
pop
adcl
iret
cli
gs
cmpsb
inc
cltd
pusha
cwtl
push
lods
mov
inc
lcall
jnp
ficoms
pop
outsb
pop
orb
jno
int3
mov
lods
aad
mov
aas
mov
adc
mov
jae
push
or
sub
jg
jl
aas
lods
pushf
and
or
xchg
jmp
fbld
pop
cmp
jmp
shrb
daa
bound
ds
jl
lods
push
dec
ja
mov
in
cmpsl
loop
jmp
fildl
push
add
movsl
push
lds
inc
bound
and
mov
push
add
movsl
dec
loopne
mov
add
jne
cmpb
and
loopne
mov
test
cwtl
inc
outsb
push
xchg
or
inc
in
mov
cmc
push
cs
mov
lds
xchg
fsts
sbb
aas
ret
jae
push
push
shl
dec
or
sub
push
fimuls
movsb
sbb
data16
shll
cltd
negb
in
or
or
jecxz
xor
je
sbb
mov
xchg
loopne
xchg
inc
jo
sub
enter
and
xchg
lret
hlt
and
add
xchg
jae
adc
les
cmpsb
sub
push
shlb
fwait
pop
cmpsb
shrb
std
sub
xlat
xchg
adc
ret
dec
scas
dec
je
push
push
sti
gs
xchg
lcall
push
lret
test
xchg
cs
mov
xchg
fsubl
sbb
pop
sbb
sbb
shll
push
and
jl
adc
movsl
in
ljmp
jns
push
stos
xchg
mov
xchg
sub
xor
icebp
sbb
cmc
stc
daa
adc
xlat
mov
insl
adc
xor
xchg
xchg
add
cmova
jl
mov
inc
lea
inc
or
roll
pop
adc
fcos
pushf
ret
sbb
lods
push
cmpsl
addl
push
lcall
xchg
aas
jae
inc
arpl
loope
int3
out
mov
cmp
cmc
mov
push
pop
movsb
nop
pop
xor
fsubs
filds
jecxz
mov
dec
movsl
push
sub
cli
mov
in
inc
mov
cmpsl
out
sbb
fildl
adc
es
ss
loop
into
and
test
mov
call
push
lret
dec
scas
in
and
xchg
inc
sbb
jle
xchg
scas
pop
xor
mov
lcall
lcall
xor
subb
push
xchg
vfrczpd
imul
sbb
in
push
sahf
dec
enter
cmp
loope
insl
cli
jno
xor
cltd
xchg
cmp
push
mov
jo
mov
xchg
clc
and
testb
pop
das
aas
pop
pop
lcall
cld
push
pop
int3
rcrb
jge
jp
sbb
xchg
popa
lret
inc
jbe
sbb
inc
arpl
movsb
mov
mov
xchg
inc
push
xor
or
insl
iret
sbb
sahf
and
fisttpl
pop
arpl
cmp
daa
jle
in
dec
mov
rcrb
jl
aaa
fdiv
in
sub
mov
inc
iret
push
mov
mov
jnp
shlb
divl
jno
jge
rolb
push
jb
loopne
ficompl
sbb
in
mov
outsl
pop
ljmp
mov
inc
xor
pushf
cld
xor
add
ja
jp
add
mov
movsb
mov
pop
push
hlt
dec
outsb
cmp
xchg
mov
inc
pushf
xchg
push
shll
adc
push
int3
cmpsl
dec
gs
push
mov
shr
mov
rcr
dec
je
xlat
shrb
mov
jo
sbb
aas
jae
stos
sarb
push
lret
repz
xlat
push
shl
sbb
ss
xchg
xor
cmpsl
decb
cmpsb
stc
sahf
and
fwait
and
ret
aaa
inc
ja
add
fcmovnb
mov
movsl
cwtl
cs
jns
pop
and
mov
sbb
cli
lods
or
test
xchg
mov
fdivs
push
inc
inc
dec
aas
jg
lds
movsl
mov
fadd
push
push
inc
add
ss
jns
sbb
cmpl
inc
shl
xor
loop
or
xchg
and
ljmp
ret
ficomps
push
cmpsl
pop
js
icebp
scas
arpl
and
or
imul
add
mov
cmp
or
notl
jo
jns
pushf
pop
sub
ja
add
add
push
into
inc
js
push
out
inc
mov
inc
or
dec
adc
rol
mov
xor
loop
xchg
in
aaa
mov
inc
sarb
fnsave
fsubs
mov
cli
adc
jo
popf
movsb
jge
sub
mov
fldl
lds
cltd
sbb
out
or
and
fmul
fldenv
out
int3
movsl
sub
je
cwtl
or
movsb
fwait
scas
nop
inc
lahf
movsb
shll
push
pop
mov
jecxz
fsubrl
insb
push
sub
aam
xor
pop
pop
nop
and
wbinvd
in
xor
imul
cmp
mov
stc
stos
cltd
dec
sbb
adc
nop
outsb
dec
jg
ja,pt
xchg
jle
js
jno
fs
shlb
mov
daa
pusha
pop
ror
imul
push
push
push
sti
inc
ret
and
mov
xchg
fimull
inc
and
arpl
jle
addb
stc
in
mov
mov
aas
es
subb
mov
iret
sbb
mov
lea
mov
mov
mov
dec
jl
jmp
nop
aad
cmpsl
stos
jbe
hlt
outsb
insl
stos
enter
sbb
in
fs
xor
test
dec
push
mov
fs
xchg
fimuls
or
add
scas
ja
xor
sti
mov
sahf
add
aaa
jno
pop
mov
inc
ja
add
sbb
cld
aad
faddl
mov
shrb
pop
xlat
push
outsl
iret
jg
xchg
adc
fs
push
push
or
das
shlb
add
stc
mov
bound
sbb
push
push
fisubrs
mov
push
mov
jge
subb
stos
jno
sbb
mov
pop
out
and
sbb
repnz
mov
mov
push
push
xor
addr16
xchg
les
fsubrs
inc
loopne
mov
aas
pop
sarl
sub
mov
gs
or
insb
ds
test
mull
int
clc
addr16
rcrb
mov
pop
shl
xchg
sbb
dec
lcall
mov
inc
arpl
fdiv
cmpl
scas
jo
adc
cltd
popa
jno
mov
fadds
mov
lahf
or
insb
mov
outsl
shlb
xor
xor
daa
mov
stc
push
lods
and
pusha
sahf
in
cmp
mov
shlb
mov
test
js
mov
jne
dec
inc
mov
lods
ret
xor
jae
fbld
sti
push
jo
jbe
std
pop
mov
or
and
rcl
cmc
pop
xchg
xchg
test
outsb
clc
sub
inc
cwtl
mov
push
or
mov
call
les
push
mov
pop
sbb
mov
cmp
das
sub
scas
xor
icebp
in
push
push
pusha
dec
xchg
cmp
je
mull
int
xor
xchg
jne
int3
jo
arpl
mov
pop
push
insb
pop
das
movl
rcr
jl
ja
int
mov
push
test
mov
mov
insb
sub
aas
je
add
shlb
test
out
mov
mov
xor
xor
stos
add
mov
and
xor
stc
in
cmp
loop
mov
adc
xchg
cmp
loop
dec
cmp
test
inc
mov
js
fldenv
xorl
icebp
cmp
lret
push
sbb
or
inc
es
mov
pop
xchg
insl
into
add
cltd
arpl
in
stos
sbb
and
shr
inc
int
mov
in
and
mov
in
lahf
jb
mov
xor
add
and
pop
adcb
inc
mov
testl
lahf
shlb
fldcw
mov
push
cmp
jnp
jmp
add
repnz
pop
jno
aad
push
pop
negl
pop
sbb
xor
mov
jbe
pop
test
xchg
cmp
in
jg
scas
bound
sarl
and
insl
rorb
xchg
lods
dec
cmpsb
fwait
sbb
insb
ret
pop
shrb
nop
mov
jnp
test
aad
or
mov
mov
jg
cmc
bound
stos
jb
mov
hlt
aad
sub
daa
in
popf
or
and
jmp
stos
lcall
lea
dec
sahf
lahf
sbb
pop
jmp
mov
dec
lods
push
push
in
dec
dec
outsl
inc
sbb
in
and
xchg
pop
push
push
jne
push
fiadds
sub
jecxz
icebp
jae
push
and
notb
mov
int3
pushf
inc
jmpw
sub
sti
pushf
nop
fs
adc
cmp
pop
fildl
mov
push
add
filds
cmp
pushf
mov
stos
out
jb
stc
sbb
jns
add
cmpb
out
mov
notl
push
push
push
mov
lcall
sub
mov
inc
dec
les
dec
fwait
jmp
fisubrs
out
cmp
mov
in
adc
roll
xchg
sarb
add
sbb
cmp
and
mov
popa
xor
mov
subl
pop
test
stos
cmp
xor
inc
stos
mov
repz
ret
popf
aad
mov
daa
add
imul
xchg
dec
mov
stos
and
mov
rcll
frstpm(287
test
in
ss
inc
jge
mov
test
insb
lret
sbb
ret
pop
test
jmp
frstor
dec
inc
pop
jae
clc
add
pusha
stc
mov
sbb
jbe
jno
idivb
arpl
stos
dec
cmp
data16
inc
push
pop
scas
push
aad
fbld
leave
out
mov
clc
hlt
shrl
fcmovne
xor
and
test
inc
mov
mov
sarb
aas
shrl
mov
repz
xlat
into
mov
inc
dec
push
xor
jne
stos
mov
addr16
push
or
addr16
jbe
lcall
mul
push
mov
fmull
fistpll
pop
xor
cmp
pop
jbe
dec
cmp
xor
enter
push
sub
mov
loopne
and
and
add
arpl
icebp
jb
cmp
lds
ss
xchg
jmp
push
adc
cli
mov
cmp
push
ja
dec
lods
pop
divb
into
xor
cli
mov
das
jmp
sbbb
stc
mov
inc
imul
jne
cmpsb
sbb
mov
loope
jle
sbb
pop
clc
pop
adc
sti
loope
fldenv
push
icebp
pop
sbb
inc
iret
sbb
js
sbb
mov
pushf
mov
das
cs
lods
aaa
inc
xchg
xchg
enter
pop
and
cmp
adc
sbb
scas
outsl
jns
in
lcall
pop
push
lock
pop
mov
jl
sub
cmp
lock
xor
movsl
aas
in
popa
pop
xor
cli
mov
out
mov
sub
cmpsb
lock
adc
add
out
aas
mov
jno
push
sub
filds
mov
aas
jno
mov
jb
mov
cmp
es
jae
pop
ret
mov
mov
and
and
aad
and
push
scas
mov
outsb
cmp
out
in
dec
adcl
sbb
nop
jns
pop
xchg
movsl
inc
mov
inc
dec
push
pop
add
lahf
or
mov
add
jle
testl
pop
addl
xchg
sub
jae
cwtl
shlb
fs
sarl
inc
subl
rcrb
std
pop
xchg
pop
loope
shrb
sbb
and
sub
rcll
jp
xchg
xadd
stos
inc
pop
lock
test
sub
mov
lea
bound
loop
mov
notl
mov
mov
fisubrs
jbe
sub
test
nop
pop
dec
jae
cmc
addl
aad
cwtl
mov
shrb
push
aam
lds
popf
sub
ftst
push
xor
xor
xchg
xchg
mov
and
add
sbb
pushf
movsl
or
sbb
clc
push
pop
ja
jle
jl
push
and
sbb
hlt
xchg
testb
xor
insl
stos
in
movsb
push
shlb
mov
dec
mov
call
imul
mov
jle
sbb
mov
int3
test
out
test
ljmp
and
repz
icebp
fwait
dec
mov
cltd
push
cmpsb
push
repnz
scas
push
jmp
addr16
stc
jg
mov
cmpl
push
push
pop
sub
adc
fbld
dec
fildll
fsubs
adc
sub
cltd
pop
test
testb
roll
cmp
xchg
fwait
lods
jnp
dec
or
ja
lahf
lea
arpl
imul
fwait
jb
and
jmp
out
fdivs
rep
xorl
scas
shrb
outsl
cmp
frstor
inc
xchg
popa
xor
aam
stc
mov
dec
or
pop
pusha
jne
scas
xchg
das
mov
xlat
sbb
fcomp
jmp
sub
bound
jmp
int
pop
icebp
gs
and
notb
pop
inc
lret
cmp
or
aas
fistl
or
and
scas
mov
fisubl
pop
add
xchg
mov
cmp
jecxz
ret
das
addr16
jae
cmp
pop
outsb
xchg
xor
mov
aam
hlt
popf
jno
push
adc
mov
and
mov
popa
stos
or
add
imul
inc
xor
int
xchg
andb
ds
adc
push
lock
dec
test
and
test
fbld
mov
std
sbb
nop
clc
cmp
int
jmp
or
push
pop
jmp
jmp
scas
inc
ja
dec
flds
jmp
jmp
jns
andl
in
and
insb
icebp
add
jne
xorl
xchg
jo
mov
add
fpatan
add
adc
icebp
fisubs
pop
test
test
mov
mov
shrb
push
inc
sarl
adc
and
outsb
xchg
lods
xor
mov
ss
lret
mov
movb
adc
aam
lret
cmp
testl
adc
call
cmp
imul
shlb
sbb
loopne
mov
stos
cmp
ds
sbb
cmc
xorb
inc
dec
or
pop
imul
sbb
mov
loopne
jo
out
shrb
out
sbb
cmp
aam
fiadds
sbb
jno,pt
fs
das
rol
loopne
outsb
mov
dec
out
mov
add
cmp
xor
fiaddl
outsl
push
sub
dec
sbb
mov
cmp
mov
xchg
pop
daa
xor
pop
inc
imul
pop
std
mov
scas
sbb
and
pop
adcb
in
push
mov
daa
cmp
arpl
ds
pop
icebp
dec
arpl
push
fidivrs
icebp
rorl
outsb
loop
cltd
lcall
dec
into
xor
repnz
mov
daa
decb
addr16
inc
cmp
mov
fldl
push
stc
inc
fsubr
sbb
nop
jg
cmc
lcall
adc
or
pop
pushf
adc
imul
sarb
or
stos
mov
mov
sub
std
nop
popa
mov
xchg
dec
adc
insb
sub
push
jns
jge
jecxz
sbb
or
mov
insb
nop
lds
sahf
fisubl
jno
adc
dec
cmpsb
cmp
sub
imull
cmc
std
cmpsl
or
push
dec
mov
adc
jb
out
ficomps
jo
mov
pop
inc
mov
loop
out
inc
cmpsl
fldl
inc
movsl
mov
loopne
out
call
mov
pop
or
pop
mov
movsl
push
or
or
add
aad
sub
jns
xchg
cmp
notl
inc
leave
dec
insl
pop
or
and
adc
push
pop
xchg
xchg
loope
lret
nop
dec
dec
clc
jne
test
jbe
cld
out
pop
cmpsb
insb
and
stos
leave
loope
outsb
and
pop
dec
jae
test
sub
push
cmp
jmp
mov
shlb
lcall
arpl
rolb
mov
inc
push
mov
imul
push
xorb
cltd
subb
pushf
outsb
das
jmp
nop
push
mov
daa
sub
bound
sbb
jae
in
inc
or
jmp
xor
jp
out
jle
sti
and
sub
mov
mov
fildl
js
jns
push
dec
push
dec
xchg
adc
xchg
xchg
cmp
push
push
inc
stos
push
rolb
sub
sbb
outsb
ss
xor
sub
cmp
push
aam
popf
fidivs
cmpsl
adc
xchg
ret
pop
jge
fdivp
popf
iret
aad
pop
add
les
cld
cwtl
xchg
fwait
leave
xor
lea
test
popf
xor
js
inc
jae
repnz
sbb
aad
fimuls
sub
xorl
jl
dec
xchg
add
dec
sbbl
negl
dec
pop
addb
mov
lods
lret
inc
push
mov
fcoms
mov
or
aad
and
lods
arpl
fbstp
cmpxchg
movl
notb
test
mov
pop
xchg
daa
nop
lahf
das
out
jbe
fstpl
xchg
push
inc
ret
fisubrs
in
push
mov
inc
cmp
inc
push
xchg
shll
stos
mov
sub
cmp
pop
dec
out
bound
sub
in
fs
push
jmp
mov
fsubrs
add
cmc
mov
mov
gs
out
insb
in
and
lret
fs
jnp
mov
aaa
subl
add
jne
push
mov
fidivl
fwait
je
adc
aaa
pop
in
jo
pop
jae
adc
inc
cmp
icebp
test
cmp
lcall
jno
mov
mov
subb
lret
xlat
sub
dec
decl
mov
orb
fsubl
insb
fbstp
dec
add
lcall
sub
ficoms
fwait
mov
sti
adc
lods
ret
inc
add
scas
xor
sti
xchg
mul
pop
mov
rolb
sti
mov
add
loopne
mov
mov
push
out
sub
add
stos
xchg
pop
adc
pop
lods
gs
aam
imul
push
inc
cmp
xchg
xchg
fwait
xor
pop
push
sbb
dec
or
aaa
pop
xor
inc
inc
ret
hlt
lea
out
mov
lea
sbb
jae
and
xchg
jge
repnz
mov
fcmovnu
push
pushf
xor
cmpsb
jle
rclb
ret
gs
js
xchg
movsb
push
pop
mov
nop
push
pop
pushf
or
inc
bnd
dec
push
decb
adc
scas
mov
and
push
xor
in
mov
mov
out
inc
xor
sti
inc
repz
pop
cmpsb
outsl
push
jb
add
sub
inc
sub
roll
into
in
les
out
adc
rorl
pop
jg
pop
adc
into
js
mov
xor
int3
stos
xor
pop
fdivrs
sub
sbb
cmpb
mov
cmp
mov
lret
or
pop
idiv
cmp
das
dec
ss
dec
adc
or
dec
xor
add
xor
mov
jl
pop
dec
and
dec
adc
xor
int3
mov
cmp
jecxz
add
cmpsb
in
mov
into
in
mov
je
add
vrsqrtss
lea
lret
movsb
inc
int3
stos
push
pop
popf
pop
loope
mov
push
mov
sahf
into
outsb
fcoml
pop
cmp
mov
fnstsw
imul
into
xor
cmp
in
and
loope
mov
dec
xor
out
pop
shr
jno
xor
pop
daa
pop
clc
icebp
lods
dec
cltd
push
icebp
mov
xchg
ds
push
stos
cmpsl
rolb
adcb
xor
je
insl
adc
cmp
aas
jo
aaa
pop
push
sub
adc
jb
sub
dec
enter
fsubl
lock
xor
xchg
sbb
cwtl
dec
push
cmc
jno
out
ss
push
repnz
mov
sbb
pop
lea
sbb
lcall
je
int
fcoms
sub
jp
imul
and
stos
or
adc
dec
jne
sub
les
jo
jns
xchg
out
fwait
mov
sarb
ds
xor
and
cmp
in
push
daa
decb
in
push
lret
cmc
ffree
jae
cmp
sub
sub
push
sbb
or
mov
mov
cwtl
fsqrt
mov
mov
fildll
imul
dec
movsl
adc
ret
mov
and
add
outsl
push
nop
imulb
mov
mov
add
lods
sti
rorb
addr16
aaa
jecxz
jae
lods
xorl
les
imul
cmc
lahf
mov
inc
push
jge
pop
arpl
add
fwait
movsl
push
mov
or
inc
inc
test
jmp
rcl
in
shlb
jo
mov
scas
test
jb
out
dec
inc
sub
and
out
ret
jo
sub
cltd
sbb
cli
pusha
xchg
and
pop
xchg
nop
push
lock
stos
negl
dec
pop
jle
pop
add
xorb
mov
jl
xchg
imul
dec
pop
mov
mov
push
aaa
adc
mov
sarl
repnz
or
xchg
enterw
lock
out
dec
add
xchg
pop
cmpsl
pop
pop
andb
mov
sahf
and
sub
fcmovbe
mov
cltd
pop
scas
hlt
std
jnp
sub
leave
cs
mov
enter
aad
jg
jb
mov
jge
insl
sub
sbb
sbb
in
pop
cmp
cmp
and
stc
ds
jmp
jnp
cmpsb
mov
lea
add
xchg
ja
push
shlb
inc
pminsw
or
fs
and
pop
cmpb
xor
popa
test
rolb
ja
lods
xchg
repz
fadds
push
out
mov
mov
pop
cmp
pop
cmp
sarb
leave
push
fbld
xchg
ljmp
jb
mov
ss
and
mov
leave
xchg
mov
or
mov
rol
jmp
mov
divl
xor
cmp
dec
jg
cmc
pop
cmp
xchg
mov
fbld
test
ffreep
and
jge
adc
in
not
leave
inc
dec
in
and
jne
rol
enter
mov
jmp
pop
popa
add
repnz
inc
ror
mov
ljmp
jl
and
mov
imul
mov
outsl
xor
outsb
dec
sahf
aaa
ret
pop
andl
mov
dec
inc
sbb
sti
rcl
int3
push
imul
sub
mov
mov
ficomps
sbb
jl
adc
lods
imul
push
mov
icebp
adc
mov
add
sahf
adc
pop
ret
pop
mov
xchg
jp
icebp
popf
jae
or
les
nop
mov
movsl
cld
repnz
xchg
frstpm(287
push
cmp
or
mov
std
fcmovu
insb
adc
cmp
cmp
ds
mov
inc
mov
jp
sbb
fsubr
sbb
xchg
pop
lock
sub
mov
cmpsb
insb
aad
into
xchg
psllq
fcompl
add
andl
jecxz
xchg
add
mov
cmp
sbb
arpl
aad
sub
ljmp
hlt
ds
int
sahf
orl
es
push
adc
add
push
and
or
cwtl
and
jb
push
lea
mov
jge
arpl
sub
in
cli
roll
add
mov
dec
sub
hlt
sub
and
test
dec
imul
or
fistl
dec
imul
mov
inc
xor
sbb
ret
ljmp
sub
xor
fmuls
mov
lcall
fimuls
pop
sub
push
xchg
sbb
xchg
clc
mov
pop
xor
lea
jne
xchg
mov
sbb
mov
add
lret
iret
or
mov
mov
adc
int3
int
or
imul
cmp
jmp
in
dec
je
in
cli
adc
mov
movsb
mov
icebp
xchg
push
out
push
mov
test
pushf
push
aam
jns
add
test
sub
in
shll
xchg
sbb
in
adc
pop
data16
mov
mov
dec
rcrl
in
insb
int
mov
dec
add
movsl
jmp
sub
mov
bound
lcall
jo
sbb
cltd
js
mov
mov
dec
shl
push
pop
pop
jnp
inc
xor
add
cmp
jl
mov
push
scas
dec
mov
pop
xchg
sarl
nop
roll
jl
cwtl
mov
inc
sbb
aaa
add
xchg
and
push
jmp
xchg
pushf
lods
repz
sbb
cwtl
mov
call
f2xm1
lcall
and
clc
cmpsl
aad
jnp
or
dec
ja
fs
jl
stc
dec
mov
subb
test
daa
mov
sub
fistpl
into
aad
mov
jnp
cli
aad
cmpsl
xchg
inc
out
and
mov
or
dec
inc
fidivrl
push
lods
inc
mov
or
in
repnz
std
testb
inc
adc
int
adc
in
sbb
test
js
stos
jecxz
adc
add
loop
gs
das
and
xor
adc
aam
mov
jns
xchg
cmc
adc
xor
test
loopne
cli
in
xor
mov
jl
push
lds
jne
jo
pop
dec
mov
mov
lahf
lret
cmc
lahf
adc
jnp
mov
in
mov
mov
adc
ror
xor
nop
orl
cmpsl
mov
jae
dec
push
push
push
sbb
movsb
inc
xchg
add
sbb
inc
mov
popf
cmp
popa
loope
or
lret
cmpsb
mov
mov
dec
xchg
dec
mov
mov
aad
outsl
add
inc
lock
sbb
or
lret
mov
dec
cmpsl
movd
out
xor
add
jl
sub
in
push
xchg
push
xchg
repnz
xchg
jnp
ficoml
xchg
loope
sbb
xchg
in
mov
push
fcomp
mov
jae
jp
push
fisubs
jae
cmpsb
inc
mov
std
push
dec
pop
fcomip
sub
fsub
fiadds
mov
xor
jb
pop
cmpsb
pop
cld
cmp
push
inc
mov
xchg
clc
bound
xor
adc
aaa
cmp
jne
jo
cli
sbb
lahf
xchg
popl
aas
cmc
mov
push
iret
in
fdivrl
bound
cmp
pop
inc
ds
or
mov
ror
stos
dec
loop
sub
out
into
mul
dec
mov
les
mov
xor
sbb
cmp
sbb
pop
xchg
xchg
popa
inc
inc
pop
push
sbb
sahf
lret
in
test
add
clc
add
mov
das
fbstp
sbb
and
cs
int
fiaddl
rorb
leave
add
out
notl
test
push
mov
int3
popf
insb
or
hlt
cltd
movsl
es
lahf
call
aas
jg
xor
lds
repz
cmp
popa
loopne
mov
cmp
popf
in
sub
mov
and
push
lods
push
or
fsts
mov
insl
lods
cmp
insb
add
xchg
int3
pop
out
cmp
mov
int
stos
loope
lock
sbb
hlt
sti
sbb
sbb
imul
ljmp
push
pop
jl
fldt
sub
push
lds
nop
testb
jne
jmp
call
fnstsw
iret
aaa
xor
int
test
cli
cmpsl
popf
das
mov
mov
int
mov
scas
pop
add
test
jb
xlat
push
and
pusha
int
repz
mov
arpl
int3
aad
pop
jae
je
cltd
xchg
lret
inc
sbb
xchg
shlb
out
mov
in
jno
test
lods
loope
repz
jbe
sbb
imul
sbb
stos
push
xor
sbb
and
add
outsb
jp
rcll
mov
stos
pop
aas
sbb
and
shl
loopne
jbe
dec
mov
push
add
mov
xchg
pop
ret
mov
sahf
cmpsb
inc
dec
into
rcr
sbb
fbstp
mov
mov
sbb
xor
cmp
rcrl
insl
mov
aam
pop
jno
jns
nop
mov
shrl
aam
sbb
ds
xor
popf
adc
dec
or
es
stos
mov
jnp
xchg
jno
pop
mov
into
out
inc
jg
mov
xchg
xor
in
sub
outsb
in
jnp,pn
jmp
jge
pop
cli
jp
add
lock
clc
fs
inc
je
inc
inc
pop
dec
mov
fistpl
or
sub
push
adc
and
dec
fsubs
pop
cmp
sub
and
jns
fistl
jo
test
push
push
scas
xor
outsb
cmp
or
jns
popa
or
pop
mov
cmpsb
in
int
jmp
cltd
mov
test
test
add
scas
pop
cmc
dec
addr16
xchg
sub
push
sub
fldenv
shrl
jno
out
cmpl
aam
nop
arpl
and
adc
popa
bound
mov
sbb
outsl
xchg
pop
daa
push
or
fsts
cmp
movb
and
sub
stos
dec
cltd
mov
or
push
xor
cmc
mov
dec
cmc
movsl
nop
shrl
dec
aam
jo
adc
std
inc
mov
flds
repnz
gs
or
mov
or
push
or
out
mov
lods
stos
fchs
ret
mov
cltd
sub
call
insb
push
andb
sub
out
and
sar
and
jg
or
push
push
xchg
cmp
data16
mov
mov
xor
cli
inc
gs
dec
ss
mov
incb
push
push
sub
aas
push
add
xor
jae
push
or
pop
cmc
add
cwtl
push
adc
shll
mov
movsb
sub
out
and
inc
add
cmpl
addr16
ds
sahf
inc
mov
xor
flds
popa
jbe,pn
mov
and
and
add
add
inc
shrb
in
adc
xor
sbb
mov
shll
fstl
test
cmp
jb
and
int
pusha
fcomps
jb
sahf
adc
rorb
mov
and
fisttps
pxor
decb
push
mov
test
leave
mov
dec
dec
or
cld
push
sub
xchg
test
addr16
subl
pop
xor
rorb
jp
xor
mov
inc
pop
mov
aas
cs
xorb
popf
xlat
cmc
cmp
das
aad
lock
gs
cmp
add
stos
add
rdpmc
dec
adc
ljmp
cmc
adc
aad
jnp
sbb
adc
xchg
repz
ret
cli
mov
push
imul
pop
cld
push
push
stc
leave
insl
and
ret
xchg
repnz
aaa
mov
push
sbb
out
sbb
sbb
dec
lods
mov
jno
jl
sbb
sbb
inc
adc
cs
mov
fs
mov
jg
mov
inc
xor
out
insb
mov
or
xor
sub
js
cld
dec
rcr
xchg
inc
xor
repz
dec
arpl
sub
or
out
lea
xchg
pushf
subb
mov
or
mov
ret
xchg
jne
adc
add
add
mov
mov
fistl
bound
pop
xor
inc
jmp
dec
fisttpll
jne
shrb
aad
xchg
sub
fwait
lret
shlb
dec
mov
imul
cmp
mov
arpl
dec
add
jp
leave
jbe
xchg
lock
popf
aas
xchg
repz
and
adc
out
inc
mov
or
shlb
idivb
ja
ret
lock
jmp
push
or
sbb
sbb
mov
cmp
out
inc
mov
fisttpll
ret
fs
fnstcw
mov
shlb
inc
jle
lea
xchg
mov
xorl
add
adc
loop
andb
lds
ljmp
int
xor
push
bound
std
cmp
lods
rolb
aam
and
iret
in
and
mov
fwait
mov
and
js
sti
std
or
dec
pop
lds
addr16
or
shr
mov
sub
test
xor
xchg
test
dec
inc
pusha
repnz
mov
lods
out
nop
dec
push
xchg
and
and
pop
repnz
les
pop
cwtl
mov
xlat
js
and
nop
mov
add
roll
jne
add
add
sbb
mov
cmp
popa
insb
lret
mov
cli
shll
fnstsw
outsl
pop
int
outsl
fwait
decl
hlt
jno
test
mov
dec
mov
aad
and
dec
xorl
xchg
push
or
pop
cmpsb
mov
imul
test
es
inc
cwtl
mull
es
push
int
xchg
or
test
inc
cmpsl
vcvtdq2pd
orb
xchg
pop
stos
mov
fnstcw
repz
scas
movb
or
fstl
out
sub
xor
outsb
push
adc
add
loopne
jo
mov
outsl
in
add
jmp
hlt
push
sub
jno
xchg
stos
shl
mov
out
jne
xchg
cmpsb
jle
mov
testl
aas
mov
enter
and
in
adc
dec
shr
sub
xchg
loope
add
cmpsb
lods
sub
sbb
pop
dec
lods
mov
push
sub
mov
sub
mov
daa
int
into
fadd
add
mov
and
mov
fdiv
jo
fists
flds
orl
cmp
push
mov
sti
adc
fcmovnb
inc
cmp
cltd
data16
inc
in
adc
daa
nop
imul
mov
jmp
stos
ret
ljmp
pop
push
mov
imul
pop
shrb
sub
sbb
dec
cmp
pop
jg
rcl
lods
and
shrl
push
jl
inc
jecxz
push
mov
lds
dec
inc
inc
fidivrs
test
adc
mov
xor
scas
lods
xor
cmp
out
lea
loop
rclb
inc
dec
inc
mov
cltd
das
pop
push
dec
daa
lock
xchg
xorb
int
aas
adc
scas
jp
popf
xlat
pop
adc
or
or
fld
jp
lods
add
push
dec
or
pop
xor
loope
xchg
mov
jbe
pop
mov
xor
inc
fisttps
adc
loope
or
pushl
push
sbb
adc
imul
je
jnp
lcall
cmp
xor
mov
and
je
out
cmp
lds
push
jecxz
iret
and
inc
mov
mov
cmp
jecxz
enter
sahf
fnstsw
pop
int
ret
lahf
sbb
mov
adc
mov
outsb
xchg
sbb
and
lahf
pusha
xor
cld
xchg
jnp
push
adc
pop
imul
mov
je
sub
int
push
mov
jno
sbb
xor
in
das
cmpsl
xchg
inc
dec
pop
mov
insl
call
cmp
in
sbb
xlat
and
xchg
mov
cmpsl
call
push
lea
int3
mov
pop
scas
scas
push
jne
dec
lods
lahf
frstor
add
cld
pop
dec
sahf
push
pop
mov
mov
push
leave
ljmp
imul
insl
sub
sub
mov
jmp
ljmp
add
mov
adc
adc
mov
fwait
popa
sub
mov
inc
dec
sti
xchg
sub
xchg
mov
test
mov
sub
lock
mov
dec
cwtl
sbb
xor
or
pusha
stos
popa
shrb
mov
mov
fnsave
mov
mov
insl
sub
xchg
sahf
sub
cmp
xchg
aaa
pushf
in
in
cmpsb
pop
mov
xor
loopne
loope
xlat
shrl
sub
notb
xchg
cmp
idivl
pop
push
imul
leave
test
push
xor
adc
leave
add
mov
das
xchg
pop
aaa
data16
rorb
push
popf
sbb
sbb
dec
mov
out
int3
xor
xchg
jmp
or
movsl
push
aas
mov
pop
cmp
cltd
clc
pop
push
orb
fucomp
mov
dec
xor
jp
push
xor
xor
iret
and
sub
scas
inc
les
stos
jne
repnz
aas
mov
pop
cwtl
stc
xchg
cmp
into
aaa
gs
add
or
repnz
xchg
fdivrl
outsl
jbe
ljmp
into
and
or
sbb
daa
sahf
js
aaa
sub
out
dec
clc
or
dec
dec
cmp
inc
scas
inc
xor
xchg
xor
orl
sbb
in
dec
and
jne
pop
gs
xlat
cmpsl
rorl
nop
es
xor
jg
shl
xor
test
xchg
inc
outsb
test
in
bound
into
ret
or
imul
sahf
or
push
push
jge
dec
test
enter
push
idiv
rcl
sub
cmp
lea
fbld
lret
jae
shr
push
loopne
cmp
push
ret
out
pop
cs
sub
clc
les
sbbl
jo
pop
sub
inc
and
je
jmp
xor
xor
ss
inc
pop
xchg
aas
cmp
mov
and
sbbl
call
aam
jb
lret
cmp
mov
inc
enter
jmp
sti
sahf
pop
aas
jmp
mov
jne
mov
inc
mov
mov
in
cmc
pusha
fbld
cmp
inc
scas
inc
lock
cmpsb
shl
out
addr16
repz
orb
fstps
cld
cmp
xor
imul
inc
mov
leave
pushf
cwtl
jnp
sub
cmp
andb
push
sbb
pop
repz
cmp
jle
sbb
stc
out
in
jp
cmpsb
xchg
daa
mov
pop
pop
loop
roll
add
es
mov
mov
fsubrs
push
dec
add
or
inc
fnstenv
sar
lds
xchg
movsb
xorb
aaa
add
push
push
push
filds
sub
lret
pop
adc
int3
sar
and
xchg
arpl
jg
mov
ds
into
aad
scas
test
pop
mov
cmpsb
es
leave
mov
test
inc
jecxz
sub
adc
loope
and
fs
pop
push
sti
sbb
sbb
push
mov
and
int3
test
mov
outsb
cmc
mov
aad
in
sbb
pop
push
test
iret
sub
sbb
pushl
xchg
add
jecxz
dec
adc
jns
jb
push
int3
fstpt
pop
jnp
loopne
fsub
push
xchg
js
mov
movb
jne
mov
jb
xchg
xchg
outsb
lahf
repz
xorl
ret
stmxcsr
mov
arpl
xor
mov
jo
imul
jecxz
mov
jmp
je
push
lods
cmpb
daa
push
enter
mov
jmp
lret
push
adc
pop
push
cmp
mov
inc
pusha
sub
orl
inc
jne
pop
xor
adc
add
scas
mov
mov
fistl
ret
mov
or
dec
shll
and
test
dec
into
ljmp
and
and
mov
jb
adc
mov
lea
test
roll
cmpsb
sbb
jb
loop
add
push
in
xor
inc
out
lret
aad
scas
repnz
jb
outsl
push
lcall
test
jle
mov
mov
mov
mov
es
gs
in
outsb
lock
mov
rcr
pop
shrb
adc
inc
loope
xor
cltd
sbb
pop
xchg
fistpl
stos
test
add
filds
cld
xchg
aaa
aad
shll
dec
jl
cmp
jecxz
inc
inc
dec
xchg
push
cmp
mov
cli
adc
mov
rcr
xchg
mov
andb
icebp
std
scas
loop
popf
inc
fnstsw
test
jno
jo
push
daa
jge
stc
mov
sub
pop
push
sbb
mov
idiv
test
aad
ret
cmp
addr16
xor
push
pusha
xor
push
jle
mov
pop
add
fs
lret
mov
dec
es
lret
lret
mov
sub
repnz
or
mov
mov
dec
je
enter
add
lret
xlat
mov
outsb
sarb
push
push
pusha
loop,pn
or
fldl
ret
out
cwtl
xchg
subl
dec
mov
test
out
leave
add
and
push
push
int3
mov
mov
hlt
inc
pushf
lock
scas
aam
mov
scas
ljmp
out
push
lcall
xchg
sbb
jg
dec
ja
cmp
imul
xor
jno
push
addb
add
or
pop
mov
push
je
stos
int3
flds
ss
cwtl
cli
jbe
les
mov
sbb
scas
inc
xor
mov
xor
mov
jl
bnd
mov
push
loopne
mov
sahf
fstl
xchg
sub
or
or
addr16
loopne
fprem1
jecxz
and
jge
jmp
push
lret
in
push
fdivrs
les
das
roll
hlt
insb
pop
js
out
cmpsb
dec
mov
mov
add
xor
push
or
or
mov
push
test
mov
sbb
dec
and
mov
stc
loope
adc
jbe
jge
sub
pop
mov
dec
sbb
xor
sti
hlt
sub
push
mov
mov
fdivrl
sub
and
scas
test
jge
mov
inc
iret
ds
aad
or
jl
jg
mov
xchg
and
les
popa
gs
arpl
adc
addb
inc
loopne
int3
xor
fldcw
mov
inc
and
mov
test
lcall
jnp
dec
in
cmp
adc
cltd
push
sub
in
mov
mov
in
mov
imul
or
push
push
mov
and
xor
popf
xchg
pop
jecxz
jmp
pusha
or
mov
jmp
mov
mov
stos
add
pop
push
sub
test
inc
shll
dec
dec
inc
mov
mov
cld
sti
pop
sbb
decb
adc
jo
fsubrl
mov
fsub
push
test
sub
std
xchg
xor
xchg
js
and
mov
mov
call
cmp
push
inc
and
dec
fiadds
inc
mov
lods
push
sub
dec
push
sub
repz
js
testl
movsl
jne
loopne
test
shll
jp
pop
adc
mov
jl
lea
push
cmpsl
push
lret
inc
and
jecxz
push
mov
out
addr16
mov
dec
stos
mov
daa
adc
roll
stos
pop
jne
and
test
fstl
iret
repz
push
ds
out
pop
insb
gs
movsb
jae
pop
ss
dec
jl
mov
xor
orl
xor
and
mov
shl
push
insb
in
sub
fisubl
addr16
xor
cmp
pop
popf
int3
bound
divl
pop
inc
mov
repnz
cmp
jle
sahf
and
cli
clc
aaa
xchg
sbb
pop
add
or
or
addr16
test
mov
mov
lock
call
sbb
pop
sub
je
in
cmp
mov
fsubrl
lahf
dec
mov
repz
xchg
lret
push
mov
pop
fucomi
mov
inc
repz
cmpsb
mov
sbb
jo
ss
or
in
lret
jp
xchg
sub
popf
mov
adc
fisttps
pcmpeqb
inc
out
xor
jbe
cltd
mov
xor
mov
repz
neg
cmp
mov
push
leave
ljmp
ret
or
insb
imul
enter
call
sbb
fcmovnbe
sub
and
test
insb
pop
push
pushf
test
imul
lods
loop
pop
dec
sub
jo
lods
ss
ljmp
sbb
or
pop
xorb
xchg
gs
pushf
cvtdq2ps
sbb
pop
add
sbb
out
bound
inc
das
pop
mov
mov
push
lret
sub
cmp
ja
adcb
scas
repnz
loopne
scas
xchg
push
inc
fimuls
push
in
mov
inc
out
cwtl
xchg
vpcmpgtb
mov
inc
mov
iret
or
mov
mov
enter
fbld
xchg
push
xlat
fldenv
mov
dec
mov
negb
cmp
lcall
push
adc
cmp
cmp
pop
xor
testl
push
das
mov
mov
ljmp
mov
adc
and
sub
cmc
or
push
into
sub
xor
dec
jge
mov
sub
movl
leave
mov
mov
sub
adc
pop
sub
xor
jno
out
gs
inc
out
mov
mov
mov
das
int
mov
or
xor
lahf
add
add
jae
enter
xchg
out
call
js
mov
mov
or
stos
adc
push
xorb
mov
insb
popa
adc
outsb
add
push
mov
jbe
mov
stc
pop
or
push
mov
add
dec
std
jae
mov
dec
and
sahf
sar
nop
fistpll
inc
push
or
or
pop
mov
movsb
icebp
jbe
cmpsl
jb
xchg
inc
pop
inc
rorl
in
sbb
xor
jge
faddl
mov
std
jp
mov
adc
ljmp
cli
inc
jne
lods
gs
clc
mov
data16
loope
xchg
andb
fnsave
add
fdivrl
loop
int3
dec
mov
push
mov
or
test
jo
dec
add
and
push
sub
stc
mov
imull
or
add
daa
xor
out
mov
jnp
xchg
sbb
test
cmpb
or
and
mov
mov
cmc
ror
mov
mov
push
iret
lds
call
leave
je
xor
call
in
cli
xchg
dec
outsl
imul
adc
fldl
inc
ds
les
sbb
and
into
int3
fidivs
loopne
data16
outsb
inc
xchg
pop
sub
jmp
push
and
push
iret
pop
test
lods
xor
mov
jmp
pop
mov
mov
add
xchg
je
sub
repz
lret
xchg
and
out
xor
mov
fst
cmp
cmp
pop
sbb
xchg
push
mov
repnz
out
add
in
jnp
leave
roll
or
clc
or
mov
pop
ret
or
or
mov
jle
mov
cmpl
imul
verr
inc
jecxz
subl
popf
lods
jg
mov
mov
pop
push
out
ret
sbb
sbb
push
mov
sub
js
outsl
cli
out
inc
sub
or
mov
pushf
xchg
sub
inc
das
movsl
mov
push
call
mov
movb
cwtl
ret
popf
out
shrl
dec
sahf
push
mov
xor
lock
cld
dec
xchg
cmc
push
jecxz
pop
dec
bound
repnz
lcall
dec
add
xchg
jg
cmpsl
out
in
divl
xor
ljmp
nop
repz
test
mov
fsubs
dec
out
popf
push
aas
xchg
inc
bound
shlb
mov
mov
je
push
lds
lea
vmovups
test
enter
jne
mov
insb
arpl
xchg
and
movq
xchg
mov
add
mov
push
jb
mov
movsl
loop
lahf
in
inc
sub
addr16
mov
jbe
pushf
mov
hlt
mov
inc
cltd
fiadds
iret
push
sahf
fisttpl
xchg
rorb
mov
insb
leave
and
out
int
pop
pop
in
rcrl
cli
cmp
xchg
jmp
sbb
ret
jb
enter
pop
jno
mov
pop
mov
sub
push
jp
jb
pop
rcrb
cmp
inc
pop
inc
jae
enter
repz
dec
adc
push
add
jnp
out
lds
or
inc
xchg
ja
nop
stc
outsl
cmp
sub
popf
cmp
xor
mov
test
leave
into
icebp
mov
arpl
out
sub
push
clc
adc
mov
pop
daa
lea
mov
sbb
cmc
out
loopne
lea
dec
negb
int3
dec
push
mov
push
cmpsb
jo
ret
xlat
leave
data16
push
std
sbb
insb
push
ljmp
xchg
out
in
arpl
lcallw
jbe
pop
mov
inc
mov
das
loop
out
popa
pop
xor
inc
outsb
mov
or
sub
and
inc
gs
fsubs
mull
sub
popa
mov
movsb
mov
mov
orb
fildl
aad
shlb
mov
dec
pop
cltd
das
dec
fwait
mov
cmpsb
sub
jg
je
mov
hlt
add
bound
add
jns
in
jo
pop
xchg
mov
fwait
and
xchg
dec
aaa
mov
movsb
stos
add
test
cmpsl
push
or
stc
lods
fisubl
xchg
cs
int
add
sub
cmp
push
fs
cmp
cmp
and
pop
lahf
or
xor
xlat
imul
sub
fs
push
lcall
push
push
mov
cmpsl
jno
jecxz
adc
mov
mov
lods
xchg
les
fdivl
fwait
add
mov
imul
enter
movl
stos
mov
fists
call
xor
push
jecxz
outsb
add
push
dec
pop
push
pop
pop
movsl
jae
fmuls
bound
xchg
stos
cs
scas
sbb
fstpt
outsl
add
aas
dec
or
xchg
dec
iret
pop
je
aam
js
out
lret
outsl
out
std
es
cltd
mov
stos
andb
dec
lods
nop
adc
pop
ja
mov
shll
mov
fs
daa
add
push
in
add
rorb
sbb
xchg
rcl
pop
data16
pop
pop
in
mov
jge
and
nop
aas
dec
dec
jp
shrl
fimull
jl
push
cmp
push
js
or
jp
fwait
das
cmp
int
mov
loopne
and
and
pushf
pusha
xchg
adc
jnp
dec
pop
mov
mov
pop
roll
imul
lds
rorb
lods
inc
adc
cmpsl
push
mov
ret
fistl
adc
lret
mov
xor
aas
gs
ds
repnz
jno
out
cmpsl
stos
sub
lahf
sbb
jnp
or
adc
or
lods
inc
in
lret
jo
jmp
dec
in
add
xchg
jbe
inc
xchg
ja
dec
addr16
dec
cltd
jg,pn
sub
adc
lds
fildll
xchg
fwait
jle
lods
push
sub
popf
and
out
shlb
pop
fcomp
imul
shll
rcll
mov
jns
pop
les
jae
mov
mov
mov
add
jle
xlat
fistps
xor
filds
pmulhuw
cld
je
xchg
xchg
mov
cmp
xor
sub
adc
outsl
dec
pop
adc
mov
mov
addr16
subl
repnz
push
push
lds
add
jb
or
sbb
add
sahf
fs
inc
cmp
repnz
or
dec
test
fstps
stos
ss
pop
test
mov
jno
stos
jmp
xor
ja
sahf
push
xor
lods
lock
out
add
and
xor
out
mov
and
mov
cmpsb
sahf
mov
xor
andl
cmp
add
mov
ror
sub
or
sbbl
mov
or
out
jnp
dec
fadds
pop
mov
cmp
cmp
mov
das
outsl
inc
ja
faddl
pop
lods
mov
fiaddl
push
jge
mov
out
sbb
and
add
fcoml
fwait
mov
push
mov
fwait
out
iret
push
sub
popa
add
pop
dec
jne
and
push
xchg
push
or
in
mov
sbb
out
hlt
cmp
sub
mov
dec
popa
ja
sahf
mov
dec
and
and
push
cmp
jo
ret
sti
pop
xor
arpl
dec
cmp
mov
adc
push
imul
xor
cltd
and
loopne
mov
mov
fs
push
mov
jb
lret
sbbl
rdtsc
imul
scas
push
int3
push
or
adc
int3
adc
cmpsl
or
in
stc
fcmove
cmp
mov
dec
rclb
in
imul
xor
test
or
inc
lcall
push
int3
push
in
sbb
xor
mov
int3
push
insb
icebp
ds
fisubs
mov
jecxz
test
iret
mov
xchg
jb
enter
mov
push
jno
inc
std
mov
inc
pop
cmp
fsts
decb
inc
cbtw
mov
iret
fldenv
add
negl
cmpsl
andl
inc
ror
inc
push
pop
or
cltd
sub
mov
push
dec
push
rcl
test
push
pusha
aaa
inc
adc
xor
mov
push
ja
mov
xor
neg
dec
dec
jmp
add
add
inc
push
loopne
cmp
pop
jp
mov
inc
in
ja
fwait
sbb
sub
scas
mov
js
adc
in
sbb
push
das
bound
inc
out
out
clc
push
call
mov
in
ret
stos
mov
imul
xchg
out
pop
adc
mov
mov
and
adc
inc
lds
mov
in
pop
adc
pop
mov
cmp
mov
lcall
xchg
loopne
out
dec
mov
jle
test
pop
sarl
loop
movsl
pop
jp
jno
cmc
cmc
mov
insl
popa
sub
and
div
pushw
out
lret
push
in
outsb
xor
insl
imul
xchg
cltd
in
addr16
or
xchg
sub
sbb
daa
mov
mov
enter
cli
loop
shll
test
mov
mov
jne
das
pop
imul
imul
and
xchg
lea
call
jb
push
je
mov
mov
mov
or
adc
fidivs
clc
pop
ret
jl
mov
mov
cmp
popa
jp
in
scas
mov
adc
outsl
mov
cltd
dec
insl
jle
stos
subl
inc
cltd
jl
pop
movsb
sub
daa
ds
sarl
jl
je
mov
addr16
dec
mov
jae
xor
lret
sarl
into
sub
icebp
adc
rclb
mov
mov
daa
shlb
pop
sbb
mov
cmp
mov
pop
pusha
adc
adcb
jge
int
ret
cmp
les
cmp
stos
dec
inc
inc
mov
into
rclb
outsl
in
aas
sbb
dec
out
jbe
push
pushf
ficoml
add
imul
pop
popf
pop
iret
cmp
adc
xchg
mov
mov
fidivl
movsb
or
cmp
test
add
fmul
xor
xchg
inc
jnp
mov
mov
jno
pop
aaa
popa
mov
jbe
idivb
sbb
inc
sbb
stos
adc
cmpsb
outsl
movsb
dec
push
nop
lds
loope
xor
or
add
inc
pusha
clc
jle
gs
lret
or
jns
cmp
stc
subl
pop
mov
pop
pop
pop
xchg
xor
sub
jle
imul
xchg
or
add
arpl
mov
hlt
jb
js
adc
jg,pn
sbb
pop
jnp
sbbl
jne
mov
mov
mov
push
mov
fsubrl
mov
das
push
stos
inc
dec
jae
lds
xchg
pop
jmp
test
add
dec
popa
add
mov
mov
inc
mov
mov
rolb
sbb
xchg
push
cltd
jb
xor
mov
jae
out
pop
xor
sbb
sbb
mov
cmp
es
pop
insb
or
pusha
jo
xchg
cmp
pop
outsb
jl
sbb
stc
arpl
sbb
cmpl
loopne
cld
mov
mov
inc
xor
add
sub
and
adc
mov
xchg
jae
adc
and
xchg
xchg
jo
hlt
out
pop
popf
jmp
loopne
xlat
push
int3
pop
inc
cmp
rdmsr
and
and
mov
adc
das
sub
icebp
fcom
push
inc
cli
add
pop
lahf
aam
push
movsb
shr
aam
sti
mov
mov
add
mov
cmp
cmp
insb
sarl
dec
jmp
addr16
test
test
outsb
in
sbb
addl
xlat
adc
adc
pop
and
cmp
dec
pop
push
and
mov
aaa
lods
cmp
inc
mov
mov
xor
rclb
xchg
fiaddl
dec
mov
xor
fdivrs
out
stos
sbb
push
push
pushf
push
mov
inc
pop
mov
cltd
int
repz
imul
and
mov
add
sub
loopne
jb,pt
pop
push
repnz
lcall
cs
dec
jbe
mov
jnp
pop
push
pop
jl
mov
push
test
mov
mov
jo
std
xchg
jmp
fbld
add
in
hlt
insb
test
push
mov
sbb
or
pusha
fwait
jmp
movsb
fidivs
adc
sub
shlb
lcall
jne
adc
lcall
ret
xchg
add
inc
shrb
push
in
sbb
jne
xchg
testl
push
cmp
bound
mov
cmp
aas
xchg
movsb
dec
nop
lret
das
pop
pop
cs
movsl
pop
aad
or
std
shll
mov
insl
popf
mov
int3
xor
xchg
xchg
arpl
sub
int
das
mov
cmp
insl
mov
push
dec
push
out
out
mov
pop
cld
sbb
jmp
test
jl
rol
and
jno
mov
adcb
rolb
fs
adc
pop
xor
loop
jl
sub
cwtl
mov
jl
mov
mov
pop
test
xchg
mov
mov
loopne
push
mov
cmp
add
sbb
out
into
mov
adc
pusha
and
and
jge
push
int
jmp
inc
bound
mov
aas
imul
jge
jp
xchg
mov
adc
aad
int3
pop
dec
shl
call
xor
sub
movsb
add
jecxz
jle
not
mov
arpl
popa
cs
sarb
shll
push
cmp
ds
or
push
sub
jp
std
outsl
add
sbb
les
dec
popa
pusha
popa
mov
imul
stos
and
pop
test
sarl
imul
mov
inc
push
push
dec
lret
mov
mov
fildll
dec
enter
pop
sub
cli
cltd
inc
loop
pop
mov
ret
pop
inc
push
xchg
std
pop
push
push
cwtl
lds
adc
xor
mov
and
push
cltd
ja
loope
lahf
in
sub
adc
int3
dec
jle
inc
sbb
pop
xchg
pop
pop
mov
and
adc
jge
iret
imul
stos
mov
dec
cmpb
cmp
or
dec
in
sbb
dec
out
inc
pusha
xchg
incl
push
mov
lds
push
in
adc
xchg
sbb
cmp
hlt
cmp
lea
jne
out
dec
repz
popa
mov
inc
ret
sbb
rclb
arpl
mov
mov
mov
gs
mov
cmpsl
andl
push
mov
lods
in
xor
lods
loopne
into
aad
rclb
add
adc
or
sti
mov
or
or
pop
out
adc
mov
or
mov
mov
jge
sar
mov
daa
mov
lock
daa
sub
or
jbe
cmovle
inc
lds
out
mov
xor
mov
scas
jmp
iret
pop
inc
pushf
jns
lea
bound
inc
out
rcrb
in
add
pop
sub
daa
in
movsb
xchg
xchg
or
addr16
aam
into
jb
jo
repz
out
jl
or
mov
mov
les
gs
push
sbb
sbb
arpl
xchg
push
or
and
mov
pop
ficompl
mov
pop
aam
dec
es
rcll
jae
and
lcall
pop
mov
adc
lds
add
inc
sarb
jecxz
mov
inc
add
adc
cmpsl
sub
cs
std
dec
mov
sub
jg
push
lods
add
jne
mov
ja,pt
rorb
mov
shll
push
lea
out
jne
add
scas
repnz
outsb
or
sbb
dec
int3
pop
sbb
shll
mov
cltd
int3
push
mov
jns
int
push
xchg
pusha
mov
xchg
xlat
cwtl
lds
arpl
cmpsb
adc
xor
inc
jnp
insb
popl
orb
inc
movsb
pop
or
or
mov
cmp
sub
adc
push
jl,pn
inc
movsb
pusha
ret
mov
aad
stos
out
or
call
push
jne
call
push
dec
stos
sbb
das
cmp
rcrb
decl
lds
lds
pop
pop
clc
repz
mov
and
sbb
add
mov
cmp
inc
xor
mov
pop
push
xorb
mov
iret
loopne
mov
roll
or
lea
into
mov
xor
push
mov
mov
xchg
mov
lret
clc
in
fsubl
mov
ret
or
add
sbb
dec
inc
popf
leave
popf
mov
xchg
iret
push
and
add
inc
mov
adc
mov
push
xchg
push
out
cs
mov
sub
fldcw
mov
fiaddl
add
xchg
popl
sub
icebp
push
aam
sbb
ret
sbb
stos
mov
aam
xor
mov
aaa
xor
dec
lret
jo
lret
mov
pop
mov
jecxz
pop
shrl
add
enter
sbb
add
ljmp
xchg
jae
jb
fldenv
push
clc
jae
adc
lcall
inc
int3
popa
loope
dec
popa
cmp
adc
xor
xchg
push
test
sbb
test
stc
outsb
push
or
xchg
hlt
in
fistps
xor
movsb
gs
test
test
jg
xor
iret
cmp
lret
popa
repz
xor
and
cmp
cmp
mov
sahf
inc
mov
lock
dec
aam
mov
out
cmpsl
cmpsl
les
test
mov
popa
std
stc
sbb
scas
mov
mov
mov
push
cmp
mov
mov
pop
inc
aad
in
adc
sub
lods
jmp
xchg
jns
int
movsb
cli
jg
testl
and
movsl
imul
cmp
push
xor
int
mov
dec
xchg
mov
inc
xchg
bound
adc
cmp
or
fists
mov
lods
popf
xor
jmp
xlat
aam
fldenv
in
sbb
nop
incl
repnz
add
add
insb
aaa
xchg
daa
dec
aaa
lock
test
cmp
daa
loop
pop
aaa
lods
xor
pop
rolb
and
ljmp
lods
xchg
arpl
shrb
into
pop
aas
pusha
inc
pop
lods
cmp
jmp
push
inc
repnz
xor
adc
mov
call
push
bound
inc
adc
pop
and
aad
mov
adc
shll
add
imul
jb
or
cmpsl
rolb
shlb
dec
int3
insb
and
lahf
cli
and
pop
mov
aam
pop
cmp
stos
fs
loopne
call
push
outsl
mov
int3
test
insl
test
frstor
lods
data16
je
xor
jge
aaa
jne
mov
mov
cmp
dec
xor
xor
mov
jns
out
push
jp
ss
mov
jns
lret
ja
test
jecxz
inc
clc
push
mov
xchg
call
and
imul
mov
aad
and
push
lods
inc
lods
push
fimull
cld
lret
mov
test
sbb
cmpsl
sub
insb
mov
gs
sbb
sahf
fadds
adc
stos
outsb
ret
or
cmpsl
sub
lea
mov
jo
jnp
cmp
mov
cwtl
cmpsl
mov
pushf
fldcw
cs
mov
call
push
push
cmpsb
inc
mov
sbb
dec
inc
jb
mov
iret
loopne
and
add
cmp
pop
imul
adc
or
in
lods
dec
popa
lahf
jo
jae
dec
push
lcall
mov
icebp
mov
imul
arpl
aaa
mov
rorl
push
stos
sbb
int
xor
sub
out
pop
dec
inc
test
adc
add
aam
ljmp
xorb
cli
cwtl
lds
nop
stc
adc
fstps
pushf
fsubrs
fistpl
sbb
scas
dec
dec
inc
ret
sub
push
not
jb
lea
js
jecxz
out
dec
inc
jg
add
sub
add
pushf
adc
sub
or
mov
daa
sbb
enter
mov
inc
sahf
inc
mov
xor
and
loope
mov
out
jae
jg
jl
dec
das
adc
arpl
push
inc
push
repnz
or
stos
inc
nop
sub
and
cli
sub
inc
mov
push
mov
push
xchg
imull
in
es
and
pop
mov
xchg
and
xchg
jp
pop
add
pop
movsb
jmp
or
rcrb
ds
dec
or
shl
pop
xorl
mov
iret
fldenv
int3
aaa
xor
mov
aaa
pop
dec
pop
lahf
shrb
aaa
inc
repnz
jle
insb
call
xchg
mov
popf
pop
dec
mov
mov
loope
xchg
repz
ret
or
and
lods
sub
or
leave
xchg
je
popa
and
dec
sbb
mov
mov
rclb
xchg
mov
jge
test
sub
xchg
push
insl
mov
rorb
cmp
push
push
leave
loope
mov
test
and
pushf
push
mov
add
cmp
arpl
sbb
cmp
xor
push
fisubl
imul
sub
fldt
lods
stos
jbe
ret
aam
outsl
jmp
outsl
xchg
fadds
add
lods
flds
into
sub
lods
testb
mov
cmpsb
hlt
pop
pushf
repz
xor
ja
imulb
shll
push
push
clc
or
pusha
jge
imul
push
jge
rcl
xchg
pop
lahf
dec
leave
je
iret
cltd
iret
pop
in
xor
test
fs
dec
dec
xchg
dec
dec
cli
dec
xchg
sbb
aam
insl
dec
aaa
out
push
push
xor
loopne
cmp
in
imul
lret
mov
shl
nop
jo
or
scas
fcmovne
cmp
fildll
mov
xchg
int3
ja
shlb
in
lret
sub
adc
mov
jnp
pop
insl
push
ret
cltd
es
cli
icebp
stos
test
inc
push
lret
inc
test
mov
aam
inc
mul
pop
aaa
mov
clc
je
shrl
sbb
or
enter
daa
mov
push
xchg
aam
jecxz
jp
cmp
lea
sub
fstl
js
and
dec
mov
out
lret
and
fwait
mov
xchg
outsb
pushf
int
sub
test
ljmp
addr16
bound
jmp
pusha
dec
xchg
xor
loope
dec
int
and
es
pop
outsb
mov
inc
cmp
jmp
cmp
ja
jne
inc
imul
dec
aaa
jbe
lcall
clc
lods
add
inc
mov
lea
xchg
and
mov
adc
sub
jne
pop
add
add
nop
adc
cmc
lods
lods
in
int
popf
sbb
xchg
push
pop
aaa
dec
loopne
push
mov
cmpsl
sbb
imul
loopne
sub
bound
mov
pop
dec
inc
fs
mov
inc
out
jp
or
and
jo
mov
fs
mov
les
lock
push
ss
push
test
cmc
jo
jmp
incb
cld
dec
test
insb
mov
inc
or
dec
xchg
dec
addl
stc
mov
push
stos
mov
lock
adc
rcll
xchg
stos
mov
jl
xchg
jbe
and
and
pop
pop
xchg
stos
outsb
cmc
xlat
cs
mov
inc
lret
jmp
push
insl
jmp
out
addb
ret
scas
iret
mov
lret
inc
jle
movsb
ret
cld
loopne
jae
shll
inc
adcb
out
dec
arpl
pop
lds
add
mov
lret
pop
hlt
stos
xchg
daa
aad
pop
test
mov
or
dec
mov
mov
into
lods
enter
push
call
cwtl
adc
popa
aaa
xchg
dec
sbb
test
mov
and
loope
js
cs
sahf
outsl
xor
pushl
pop
leave
sahf
testl
ficoms
icebp
data16
imul
test
jmp
addr16
mov
push
in
adc
mov
out
jb
or
mov
into
sbb
jne
inc
aam
xor
repz
rcl
sub
dec
or
outsb
pop
outsl
fstps
sarl
pop
adc
icebp
into
mov
cmp
xor
sbb
test
movl
mov
loop,pt
push
dec
pop
loope
movl
adc
adc
in
jge
sahf
pop
ss
loope
xchg
adc
imul
dec
cmp
pop
popf
pop
and
js
xchg
scas
test
stos
add
push
cmp
jmp
pusha
mov
sbb
iret
iret
cmpsl
adc
arpl
jmp
xrelease
xchg
ja
je
ficoms
xchg
mov
lods
jecxz
jns
add
xchg
xor
fs
nop
xchg
lods
sub
mov
insb
xchg
loop
sub
pop
xor
test
jb
xchg
lahf
aad
pop
leave
mov
sub
push
jno
sar
and
sahf
sub
mov
sbb
xor
jns
movsb
jbe
aad
sub
shrl
js
mov
add
push
and
cmp
jge
cmp
cmp
xor
jns
aad
inc
js
mov
dec
cmp
out
or
jmp
lods
jnp
push
mov
sub
mov
inc
test
in
pushf
lods
pop
imul
nop
add
and
fisttpll
pop
xor
ret
and
or
push
jmp
mov
int3
adc
xchg
arpl
repz
push
mulb
test
xchg
mov
sbb
repz
pop
lods
pop
push
ljmp
lods
add
enter
test
push
lods
clc
hlt
es
test
mov
aam
shll
dec
inc
adc
cmc
pop
int3
sub
add
mov
cmpb
ljmp
dec
xchg
cmp
pop
push
es
mov
inc
cli
jbe
and
mov
fisubs
push
stos
subl
lret
mov
lret
add
jne
push
xor
cld
mov
sub
xor
pusha
pop
add
pop
movsb
cltd
xor
cld
das
adc
cmpsl
sub
mov
mov
leave
jl
adc
push
cmp
jecxz
lea
jb
dec
adc
push
add
aaa
lods
pop
je
pop
inc
je
mov
or
inc
imul
in
cli
movsl
mov
and
arpl
xchg
push
cmpb
jg
mov
adc
xor
int
repnz
sub
out
jg
into
and
mov
add
xchg
ss
jmp
insl
adc
aad
add
fisubrs
fmul
jge
in
cmc
loope
lods
setne
fisubrs
adc
repz
xchg
add
pop
cltd
stos
xor
ljmp
pusha
dec
lret
xchg
aaa
pop
jno
dec
inc
mov
add
mov
xchg
popf
mov
pop
mov
cwtl
out
leave
into
mov
mov
pusha
out
dec
insb
pop
je
jl
mov
pusha
add
test
push
xlat
stos
or
adc
mov
or
mov
sub
jge
xlat
sub
fisttps
test
push
testb
mov
mov
out
xchg
add
fs
sti
fwait
stc
out
pop
mov
rol
rcr
sti
rclb
icebp
jmp
dec
dec
add
dec
or
mov
stc
jo
shlb
sub
iret
sbb
rcr
pop
push
stos
data16
cmp
sbb
mov
dec
pushf
mov
sbb
mov
pavgb
mov
repz
push
fsubrs
les
pop
insl
cs
xchg
jb
and
clc
mov
leave
fs
mulb
lock
lahf
stc
dec
jns
lock
js
mov
add
pop
std
jb
xchg
loop
es
push
mov
out
mov
push
lods
cltd
cmpsb
ret
lcall
pop
stos
ret
orb
sti
out
pop
ret
loopne
and
mov
stos
jl
sub
into
pusha
push
inc
dec
fwait
dec
xor
cmp
mov
pop
out
mov
cmp
mov
shl
xor
and
mov
rolb
xlat
xchg
mov
dec
jp
pusha
mov
loope
cld
xchg
dec
ret
fisubs
fidivl
movsb
ss
push
lret
xor
jnp
dec
rcrl
mov
sarl
call
aam
push
cld
sbb
cmp
in
xchg
cmpsb
push
popa
sbb
cmp
or
or
bound
aam
movsb
pop
cmp
jg
mov
imul
adc
dec
int
xor
fdivl
sbb
rorb
test
inc
and
mov
shrl
dec
pop
out
push
es
icebp
add
xor
in
dec
inc
add
sahf
data16
imul
pop
pop
popf
push
cwtl
sub
and
stos
outsb
cmp
mov
mov
fwait
push
cmp
fldcw
adc
and
inc
shr
mov
lea
jg
dec
fdivs
stos
andb
ret
pop
stc
rcrb
mov
fcomi
adc
adc
in
push
and
mov
int3
cmpsb
stos
push
addr16
mov
fwait
add
lock
mov
pusha
push
test
aam
je
cwtl
sub
and
mov
xor
loopne
pop
stos
lret
cmp
scas
in
aad
mov
xor
jmp
sub
loope
pop
push
push
pop
jecxz
mov
push
sbb
in
push
inc
pop
xor
ret
in
xor
leave
aas
shrl
mov
lret
mov
jmp
fcoms
mov
pop
sub
loop
sub
std
sti
nop
push
and
lds
sub
or
cmp
les
sbbb
dec
out
ss
mov
shr
mov
adc
cmp
es
shl
jbe
nop
cmp
xor
push
loope
test
in
jmp
adc
mov
mov
lods
test
and
dec
repz
insb
inc
dec
push
adc
fisttps
jmp
scas
mov
xor
mov
mov
or
pop
inc
pop
mov
into
icebp
inc
push
shrd
sahf
add
sbb
lock
push
push
mov
pop
das
or
cmp
add
xlat
pusha
push
ficompl
push
dec
adc
xchg
jmp
imul
mov
push
mov
pop
sub
jp
xchg
jle
cmpsl
cld
pusha
insl
jae
fdivs
xchg
lock
push
clc
shll
in
out
adc
mov
mov
pushf
mov
imul
adc
sub
shlb
cltd
xchg
jmp
mov
add
std
push
mov
mov
mov
fcoml
insl
sbb
loop
sbb
add
ja
mov
cli
fdivrl
cli
rcll
scas
jmp
enter
sbb
jg
cmpsl
push
mov
loop
lcall
sahf
inc
lds
ret
lock
cmp
loope
lcall
xchg
and
mov
les
mov
sarl
or
test
aad
adc
pop
dec
sbb
movsb
xlat
mov
loopne
imul
adc
orl
jl
xchg
sbb
mov
inc
ret
stos
fcmovne
add
inc
cmpb
ret
mov
movl
fucomi
mov
pop
icebp
push
ja
inc
xchg
jae
decl
enter
sub
out
pop
pop
lods
jl
dec
pop
fdivl
repnz
push
pusha
lods
jp
into
sbbl
fmulp
pop
lcall
inc
sbb
cmp
cmp
sub
jp
cld
rcr
das
and
rorl
dec
data16
in
add
decl
and
push
xor
lret
adc
mov
lahf
mov
dec
loop
gs
clc
test
out
popf
lock
mov
mov
or
mov
adc
arpl
xchg
dec
imul
lret
loopne
inc
adc
or
cmp
adc
stos
or
push
insb
add
notb
dec
scas
dec
lods
lock
and
into
lahf
sub
push
lock
getsec
adc
std
das
out
cmpsl
xor
mov
cmp
out
les
inc
and
pop
lds
dec
mov
cs
loop
or
nop
test
out
mov
pop
adc
adc
cld
lret
das
mov
fwait
clc
jo
fs
and
dec
sti
punpckhwd
popa
data16
xchg
subb
ret
loop
mov
js
inc
lea
cmp
je
adc
push
jno
inc
xor
or
ds
or
rcll
sbb
and
loopne
push
mov
mov
pop
jmp
inc
inc
push
stos
dec
jmp
pushf
sbb
jne
sbb
outsl
pop
adc
aam
fmulp
jne
out
cmp
repnz
push
and
cltd
pop
loop
scas
dec
ret
repnz
dec
adcl
mov
pop
mov
inc
bnd
xor
adc
shlb
inc
mov
cmp
sarb
jl
inc
sbb
enter
icebp
mov
push
push
ficoml
fnstenv
nop
cmp
or
ss
mov
cmpsb
xrelease
stos
inc
or
cmp
loop
xchg
lret
into
data16
add
cs
loope
inc
mov
aam
or
add
jne
xchg
testb
jl
icebp
adc
int3
cld
and
cmp
push
out
jb
mov
rcrb
add
repnz
loop
pop
pushf
add
stos
sub
xor
test
jb
fildl
cli
mov
sbb
and
cmp
iret
push
push
lods
test
mov
xor
ret
clc
outsl
out
test
cmp
outsl
add
clc
and
adc
in
push
push
xchg
ret
test
inc
scas
repnz
ljmp
add
add
mov
rol
scas
es
mov
idivb
xor
jns
xlat
cwtl
add
xchg
ret
sbb
inc
or
leave
scas
fimull
push
xchg
push
in
dec
cltd
push
dec
push
xchg
jg
addr16
jb
loope
cmp
pop
lea
mov
jb
sbb
cmp
dec
push
sub
loop
push
movl
jb
add
mov
pop
xchg
xchg
leave
scas
aaa
adc
ret
repnz
xor
repnz
int
js
mov
sbb
aam
adc
leave
cltd
shrl
jmp
into
mov
test
mov
xorl
dec
jo
sub
repnz
rcrb
hlt
cmpsb
mov
aas
cld
sbbl
adc
fwait
push
pop
adcl
or
push
jecxz
js
mov
mov
fadds
cwtl
insb
mov
mov
fisubrl
lahf
mov
cltd
push
xchg
test
fs
pop
xor
mov
cltd
xor
jae
pop
stos
gs
incl
rcr
add
mov
xor
pusha
in
lods
and
push
sbbl
pop
or
lods
mov
je
and
ret
movsl
imul
rorl
mov
sbb
mov
jbe
lods
or
stos
stos
cmpsl
repz
outsl
lret
test
mov
push
sub
addr16
in
mov
add
jecxz
jmp
pop
mov
xorb
adc
cmp
sbb
mov
dec
xor
xchg
ja
inc
push
out
lahf
andb
adc
push
insl
sbb
clc
add
stc
inc
push
loop
into
xor
push
scas
pushl
cmp
loop
test
and
dec
add
stc
loope
dec
call
or
incb
shr
mov
adc
jne
mov
std
ret
icebp
jns
mov
jns
das
popa
std
int
push
jle
and
iret
xlat
imulb
orl
jae
push
icebp
jg
repz
and
imul
mov
dec
ret
mov
mov
cli
add
inc
gs
adc
push
cmpsl
lds
fistpl
lods
cmp
testl
xor
and
add
mov
pusha
pop
cmp
and
adcb
shrl
lcall
movsl
shlb
inc
lods
bound
jns
mov
sar
cmp
add
sub
lea
lret
in
xchg
js
repnz
pop
decb
mov
sti
xchg
in
ret
pop
clc
dec
jecxz
popa
popa
fcompl
insl
and
and
jg
jbe
test
enter
stos
je
popf
push
mov
cwtl
xor
pop
xor
and
test
fs
es
das
jge
and
xchg
fdivl
and
test
or
or
jge
jecxz
fdivr
push
gs
cltd
dec
or
push
pop
and
jg
rol
popf
jl
loop
mov
fiadds
cmp
addr16
movsb
push
jl
test
mov
movsb
lock
in
loope
adc
inc
gs
sti
push
nop
pop
mov
leave
pushf
cmp
gs
aaa
negb
faddp
call
fnstsw
inc
or
pusha
xchg
mov
vmwrite
loop
or
xor
in
test
aaa
pop
sub
cld
xor
lcall
shrl
push
cwtl
pop
test
or
adc
sub
push
cltd
sub
jno
rcl
into
out
rorl
dec
xchg
lea
dec
push
fchs
xchg
cmp
add
push
push
mov
fwait
ja
shl
inc
pop
mov
arpl
loope
inc
sarb
push
lock
dec
push
jge
in
loopne
mov
and
ret
lea
mov
loopne
and
jne
cmp
clc
in
or
cltd
add
jmp
add
pop
bound
ficompl
mov
cs
or
test
gs
sbb
icebp
jmp
ret
addr16
xchg
pop
jp
jnp
xor
clc
xchg
push
jg
movsl
jle
and
bnd
mov
mov
jo
dec
insl
cmp
in
mov
fs
ret
test
test
sub
inc
int
imul
adc
or
jmp
push
cli
jo
lods
std
loope
ret
ffreep
cld
push
cltd
cmp
leave
mov
pop
mov
add
es
jmp
stos
fs
nop
sub
cld
loop
movl
sbb
cwtl
sbb
fwait
dec
xor
insb
adc
and
mov
pushf
xor
pop
pop
outsb
ljmp
mov
or
or
movsb
cltd
jmp
ja
in
rcrl
xor
fsts
push
add
push
lret
lret
lahf
push
scas
mov
stos
gs
cwtl
sub
sbb
jo
into
pop
mov
data16
pop
mov
push
push
mov
mov
out
xchg
push
xor
mov
jns
cltd
fidivrl
sti
add
fdivrl
fwait
imul
cli
xchg
push
adc
ds
jecxz
cli
push
and
sub
cmpsl
out
fcomip
decl
and
dec
int3
in
lock
je
sub
lea
mov
adc
aam
pop
pop
ljmp
shrl
fsubrs
cmp
jae
pop
test
out
or
cld
jns
das
and
pop
mov
in
sbb
cmpb
lock
mov
mov
inc
mov
mov
pop
fbld
inc
sti
jb
popa
into
adc
out
mov
test
inc
shld
xchg
test
mov
pop
call
and
fimull
lahf
pop
jmp
xchg
cmp
xor
adc
inc
ljmp
repz
xor
lret
movsb
push
jmp
lods
xor
imul
sahf
xorb
push
mov
or
adc
xchg
pop
insl
iret
lahf
mov
jns
popa
adc
mov
loop
aaa
jne
stc
cltd
fisubrs
cmp
lods
cmp
and
movsb
and
xor
insb
mov
mov
lods
fs
dec
inc
enter
es
and
loopne
pop
shl
ss
popf
cmp
pop
movsl
cld
dec
loop
scas
stos
xor
inc
insb
or
loop
push
mov
add
pop
mov
movsb
sbb
xor
rcr
mov
jl
aad
addl
or
mov
jo
adc
and
sub
hlt
cmp
adc
jle
sbb
orl
jp
jae
addr16
iret
hlt
dec
jb
insb
jb
cmp
jbe
inc
sbb
lods
mov
pop
inc
sbb
jmp
imul
mov
push
add
and
adc
and
mov
jmp
mov
aas
loope
or
jne
cmp
lock
push
mov
aas
rcr
sbb
pop
sub
andb
out
bound
std
dec
cltd
mov
add
sbb
in
jg
sar
loop
jno
and
shlb
jle
in
xchg
inc
cmpsl
jmp
inc
sub
lock
lcall
jg
insb
cld
push
mov
hlt
pop
and
and
out
jg
andl
cmp
or
idivl
sub
vpshaq
push
and
add
mov
adc
inc
mov
mov
lds
add
and
in
cs
roll
cmpsb
inc
xor
cmp
mov
into
or
pop
loope
pop
dec
jmp
mov
dec
rcr
cmp
out
test
add
adc
push
sbb
mov
mov
stos
std
insb
in
dec
pop
pop
rcrb
in
int
and
push
add
adc
outsb
add
xchg
or
mov
jecxz
hlt
adc
outsl
movsb
cli
pop
dec
add
mov
rolb
mov
aas
pop
dec
xchg
mov
jp
outsb
out
jmp
pop
pmaxsw
sahf
mov
push
push
in
push
iret
xchg
lret
gs
scas
int3
pop
and
dec
add
and
in
jnp
and
xchg
xor
cld
or
iret
or
xor
push
xchg
cld
fildl
jnp
mov
inc
mov
inc
inc
shl
mov
out
sahf
inc
lods
ljmp
add
gs
adc
cmp
loop
pop
or
pop
addr16
cld
xchg
test
shrb
mov
xchg
xchg
rcrl
mov
pop
xchg
stos
imul
cltd
xchg
push
mov
lds
sub
and
das
lahf
push
sub
mulb
leave
clc
push
notb
push
or
movsb
pop
push
mov
cmc
cmp
xor
jge
mov
jne
es
dec
mov
cmc
fdivrl
mov
lods
in
mov
aam
mov
adc
pop
rorb
nop
add
sbb
adc
cwtl
mov
leave
jne
pop
es
jne
xchg
loop
inc
or
lcall
xor
fisubrs
pushf
adc
adcb
lahf
and
jecxz
cmpb
sahf
xchg
mov
jnp
pop
mov
push
mov
sbb
jnp
jb
stc
ret
cwtl
xor
jecxz
jnp
dec
push
sbb
sti
inc
out
mov
test
xchg
jmp
es
pop
xchg
push
lods
mov
and
scas
sbb
leave
cmpsl
inc
inc
mov
pop
lret
loop
mov
add
aas
aad
fdivs
iret
enter
repz
cmp
pop
xor
daa
mov
add
jb
frndint
fwait
mov
roll
xor
dec
mov
cmp
push
pop
loop
cmp
out
mov
sub
push
jns
mov
repz
sub
ffreep
pop
mov
jl
je
lahf
ss
pop
fisubrs
jae
mov
jecxz
jbe
mov
mov
sti
dec
add
stc
je
jecxz
dec
xchg
rcll
icebp
cli
sahf
fimuls
mov
pop
ficoml
repz
ret
or
loope
push
dec
mov
jnp
lea
std
out
cmpsl
cmp
dec
mov
pminsw
inc
dec
mov
pop
repnz
mov
pop
mov
inc
mov
push
popa
in
arpl
test
inc
mull
mov
sbb
push
flds
out
imul
xchg
popf
scas
jp
aas
mov
xchg
mov
add
sub
sbb
aas
or
push
adc
das
sbb
pop
push
sub
fiadds
xchg
ss
gs
mov
hlt
rcll
mov
cmp
ds
jle
test
dec
jnp
sbb
sbb
insl
sub
in
cmp
add
mov
daa
or
dec
add
in
xchg
xor
jnp
adc
xor
jmp
cmp
push
pop
mov
pop
leave
mov
int3
insl
adc
leave
outsb
adc
adc
xchg
push
mov
cmp
jecxz
ret
aaa
cmpsl
int3
iret
mov
stos
pop
dec
pop
rcl
dec
in
pushf
mov
jb
out
mov
sbb
lcall
xchg
lcall
mov
push
int
negb
mov
adc
mov
sbb
jle
call
mov
mov
aaa
mov
mov
pop
movsb
cmpb
add
or
pop
inc
or
movb
and
lds
xchg
jmp
dec
in
jo
aad
dec
inc
sbb
dec
jmp
dec
fimuls
jns
mov
push
mov
mov
call
test
sarl
sub
cmp
out
aad
fstpl
fdiv
cld
data16
push
mov
aad
mov
outsl
push
int
dec
fildl
rep
pop
scas
and
xabort
in
jbe
jae
mov
sbb
jb,pt
out
add
xchg
popf
rcr
std
add
pop
mov
xor
loope
dec
mov
jb
scas
lea
dec
arpl
push
jge
fadds
loope
pop
sub
xchg
imull
in
in
btc
cmp
push
lea
test
mov
jp
sbb
repz
mov
loopne
xlat
mov
push
ljmp
fbld
and
cmp
and
ljmp
xchg
push
pop
xchg
cmp
inc
das
fcoms
pop
xor
and
pusha
mov
out
xor
mov
aas
in
fisttps
fbld
inc
ja
lds
mov
vcvttss2si
mov
out
pop
stc
xlat
aas
mov
rclb
in
fbld
cmp
insb
cmp
cld
adc
pop
addr16
ret
adc
sub
or
lea
jb
mov
in
push
ficompl
psubd
or
jno
or
jmp
xor
sarb
in
popf
xchg
cmc
fwait
data16
fwait
outsb
int
push
lcall
add
lahf
leave
xor
jle
lret
dec
sub
jge
cmp
cmpsb
imul
jns
jge
add
adc
dec
nop
out
cs
ret
and
and
scas
dec
pop
insl
imul
ret
xor
outsb
push
inc
lret
sbb
jmp
icebp
push
mov
xchg
inc
mov
ss
nop
inc
cmp
ret
sbb
push
lret
repz
pop
sbbb
scas
jle
or
fbstp
sarl
jne
test
fstps
dec
testb
rorb
int3
mov
sub
jno
or
sbb
sbb
out
mov
mov
cmp
mov
das
mov
int3
jnp
icebp
xorb
mov
jmp
pop
push
into
fisttps
movsb
pop
arpl
mov
dec
sti
jecxz
xor
mov
lock
ds
jecxz
mov
leave
pop
xor
hlt
inc
add
xlat
xor
andb
mov
pop
xlat
loop
xchg
adc
cmpsb
or
add
test
xchg
inc
pop
push
outsl
sti
cmpsb
jb
repnz
cmp
enter
mov
xlat
and
es
mov
lret
dec
push
sbb
mov
dec
cmp
loop
mov
add
jg
xchg
hlt
in
pop
adc
sub
bound
repnz
xchg
pusha
cmp
fldl
push
aad
xor
int
mov
or
dec
inc
fistps
push
sbb
icebp
into
cmpsb
or
mov
insl
jnp
stc
das
cmp
loopne
pop
push
imul
pop
mov
mov
leave
call
jmp
es
mov
fsts
dec
dec
mov
lock
cmc
ret
outsb
jbe
ret
xor
aaa
movsb
push
cmp
xchg
xorb
lea
xlat
ds
call
lods
sub
xor
cmp
cmpsl
lahf
xchg
lcall
ret
aam
aas
repnz
xchg
xor
jne
jmp
inc
stos
out
sbb
rolb
imul
incb
ljmp
xor
xchg
adc
iret
pop
out
shrb
das
sbb
lods
adc
andb
mov
pushf
iret
icebp
loop
ljmp
cld
clc
push
int3
movsl
mov
pop
jno
jae
push
adc
lahf
jge
jmp
aam
fstl
and
or
vpmadcswd
mov
cli
xchg
loop
dec
inc
mov
pop
or
mov
and
test
xchg
mov
aas
enter
push
in
mov
inc
test
leave
cmc
dec
fnstcw
cmc
lds
inc
fidivl
push
jecxz
cs
inc
or
scas
ds
lea
out
ret
adc
insb
into
fldz
sbb
cmp
dec
clc
hlt
fbstp
add
xor
jno
xor
ficoms
insb
clc
pop
sub
inc
jmp
ficoml
push
repz
mov
and
ret
mov
shlb
pop
mov
lods
cmp
mov
jp
imul
call
fs
mov
add
hlt
cltd
shlb
mov
sub
mov
add
or
jle
push
addr16
icebp
cwtl
cmp
pop
cmp
xchg
fwait
push
daa
lea
fstl
cli
test
test
mov
enter
shll
mov
adc
aaa
inc
sub
lods
ljmp
out
xor
push
xchg
stos
xor
int
mov
lea
rorl
and
cmp
clc
rcll
ja
aad
mov
or
jp
aaa
clc
outsb
mov
sub
in
fsubl
hlt
cmpsl
repnz
jne
mov
stc
out
add
mov
cmovne
ljmp
idivb
mov
jae
in
mov
call
js
cmpsb
lcall
sbb
and
test
sub
pop
mov
mov
mov
mov
push
and
pop
jae
cwtl
scas
add
jge
pop
inc
push
ljmp
cld
inc
gs
cmp
into
mov
loope
fbld
fdivrp
sbb
jnp
nop
popl
call
inc
ret
pushf
push
fists
mov
or
js
xchg
dec
testl
popf
roll
mov
fbld
ljmp
cmpsb
out
adc
cmp
mov
dec
nop
mov
loope
adc
mov
jb
xor
cmpsl
jns
lea
and
into
cwtl
sbb
jg
adc
test
sub
movl
lahf
sahf
leave
scas
cmp
sbb
push
ss
outsb
push
push
jb
dec
sbb
cmp
jle
mov
jno
xor
std
cmp
sub
rcrb
dec
les
rcl
add
lret
ja
sbb
fiaddl
andl
jno
out
mov
pop
dec
or
add
sarl
out
int3
mov
or
shrl
push
enter
fildl
repnz
shlb
mov
xchg
push
push
and
in
dec
sti
jg
ret
lods
mov
fimull
insl
xchg
bound
and
dec
movsb
mov
push
fldcw
and
jg
imul
sbb
inc
popf
cs
ret
adc
jle
and
fcmovne
fdivrs
in
push
scas
and
add
mov
fstpl
aam
vshufps
and
or
mov
out
cmpsl
adc
mov
cmpb
xor
push
cmp
xchg
adc
imul
leave
jnp
rcll
stc
xor
xchg
es
insl
in
aas
aas
fadds
jnp
cs
movsb
ds
adc
lods
insb
dec
add
repnz
mov
imul
pop
mov
push
xchg
xchg
mov
xor
cmp
fs
out
repnz
ljmp
mov
ret
mov
sub
testl
sahf
mov
call
push
or
inc
mov
mov
cmp
lret
push
das
lds
mov
lods
add
mov
mov
bound
mulps
sbb
test
xlat
mov
pop
test
adc
mov
jb
int3
push
xor
aad
mov
xchg
imul
inc
pop
sub
leave
cld
dec
loopne
jl
push
jo
sbb
xor
xchg
in
jl
pop
jb
mov
pop
mov
ljmp
test
or
jge
sti
and
arpl
cmpsl
mov
add
aam
repz
mov
jmp
sbb
inc
loop
loope
lock
daa
mov
push
jecxz
xchg
ljmp
mulb
iret
jg
loopne
xchg
int
outsb
pop
pop
mov
lds
sub
les
mov
mov
xchg
push
xlat
mov
rcl
stc
push
fbld
cwtl
cmp
std
ljmp
pushf
jno
aad
sbbl
xchg
rorb
cld
dec
adc
insl
sti
inc
repz
sbb
fcmovu
into
clc
stos
push
mov
push
push
fucomip
push
dec
inc
mov
popf
icebp
pop
pop
sub
cmpsl
shlb
adc
mov
mov
outsl
add
sub
cmp
mov
xchg
xchg
push
hlt
jle
in
sub
push
jg
rol
xor
das
add
lahf
cmp
rclb
shl
int3
mov
push
mov
mov
icebp
int3
adc
jae
cmp
pushf
xor
jnp
repnz
aaa
scas
cmp
jmp
inc
sbbb
scas
into
aas
repnz
or
xchg
mov
movsl
and
push
bound
out
hlt
jge
push
cmp
dec
cltd
or
xchg
js
xchg
jno
stos
and
cltd
sti
movsb
sub
jae
pop
popa
sarb
sbb
data16
mov
jne
dec
stos
mov
fsub
dec
leave
cmpl
mov
jbe
repnz
cld
into
jns
mov
enter
insb
mov
iret
subb
out
ja
movsl
mov
cmpsb
mov
sarl
nop
pop
dec
cli
jne
rcrb
mov
stc
mov
sbb
loope
rcrb
sub
aam
and
rolb
add
lcall
pop
das
stos
xor
jg
push
sub
lret
push
dec
push
ret
insb
or
xchg
jge
inc
das
or
jb
mov
int3
imul
jle
pop
fs
or
aas
pop
pop
cmp
inc
pop
push
or
out
jb
hlt
mov
rcll
mov
jecxz
aas
sub
es
movsb
jb
pop
gs
mov
push
mov
dec
hlt
test
out
add
mov
mov
mov
icebp
mov
lret
push
int3
add
mov
jmp
ficoml
jae
cmp
and
imul
mov
aam
insl
out
jge
clc
adc
cmp
in
lahf
sarl
adc
cmp
sbb
and
push
cmp
scas
and
xchg
and
sbb
addb
pop
cmp
jmp
pushf
push
pop
hlt
sti
inc
mov
test
push
jle
inc
pushf
sbb
mov
sub
mov
aaa
sbb
inc
movsl
or
sub
out
inc
xor
jmp
jp
fwait
xchg
aas
jno
out
outsb
push
sbbl
mov
outsb
test
push
push
jmp
sub
nop
and
add
xor
xor
mov
cmp
loop
sar
jb
mov
or
jmp
push
pop
fcompl
shlb
out
dec
outsl
cmp
test
sub
clc
stos
sub
adc
in
cmpl
jge
xor
or
and
sub
fisubrl
mov
fdivs
dec
adc
test
and
inc
pop
and
in
cmp
into
push
lcall
sub
push
xchg
loope
dec
shl
pop
bound
mov
and
popf
test
scas
jb
add
dec
mov
mov
push
jne
nopl
push
cmp
outsl
ds
xchg
jns
xor
push
movsl
dec
lods
push
in
movb
dec
jo
int
sbb
loopne
fnop
cmovbe
pop
mov
ljmp
or
cmp
sbb
sar
push
pop
lret
mov
ret
pop
xchg
mov
shll
and
outsl
outsb
das
jb
sub
xchg
dec
lahf
push
dec
std
xchg
cmp
inc
adc
mov
rolb
movsb
adc
imul
inc
addb
mov
or
jp
and
loope
lock
pop
sub
pop
lods
nop
popf
stos
xor
jns
cmp
mov
and
push
aas
mov
int
jecxz
fs
iret
xchg
stc
mov
out
sahf
mov
sahf
mov
out
jno
repz
fwait
add
flds
pop
das
mov
loopne
fcompl
xchg
and
stc
mov
xlat
cli
lea
dec
pusha
loop
fs
popf
mov
daa
in
addr16
cmp
fbstp
mov
and
xchg
jge
stos
xchg
into
ffreep
dec
ret
jge
fists
lret
sti
pop
push
ret
cmc
shl
jg
xchg
jno
ds
push
clc
xor
jbe
aaa
jmp
add
sbb
mov
jae
push
out
popa
push
pushf
loopne
jns
aam
inc
fdivrl
lcall
ret
ret
gs
and
push
adc
popf
daa
popf
in
jae
imul
in
in
mov
shlb
loop
mov
ds
inc
xchg
and
lcall
mov
scas
inc
scas
sub
das
or
stos
sub
fxtract
pop
cmc
dec
cltd
mov
and
icebp
lahf
mov
jmp
daa
xor
fcmovb
lret
arpl
pop
lret
mov
mov
mov
iret
ja
jbe
test
stc
leave
psraw
cli
rcll
aad
sbb
dec
gs
jp
notb
aad
push
in
mov
xor
push
push
sbb
fs
dec
imul
inc
jmp
xchg
push
jne
sbb
adc
cli
mov
push
inc
and
xchg
in
cmp
addr16
pop
push
add
ss
ds
les
mov
jne
jns
or
xor
jmp
or
pushf
movsl
inc
or
cli
xor
mov
ljmp
and
xchg
push
sub
mov
fsubrl
sub
sub
jns
cmp
iret
mov
or
inc
xor
xchg
test
sub
stos
xor
loope
cmp
xlat
xorb
pop
out
lock
das
and
fcoml
inc
dec
subb
jbe
xor
mov
dec
sub
fcoms
fldenv
or
les
mov
and
adc
push
inc
pushf
jae
es
mov
push
cwtl
mov
dec
daa
stos
jnp
movsb
sbb
out
js
jns
pop
lods
add
push
xor
sub
push
fdivrp
les
es
mov
test
add
aas
and
dec
push
dec
mov
push
jp
loope
mov
cmp
sti
scas
inc
jmp
cmp
call
mov
dec
outsl
push
cmp
mov
movsl
mov
and
and
jb
mov
bnd
push
cs
mov
jbe
add
cli
inc
pop
orl
les
shll
jo
mov
movsl
popa
test
fstpt
movl
int
mov
fnsave
adc
loop
imul
cltd
aad
mov
int3
fsub
popa
iret
push
cmpsl
mov
push
ret
ljmp
das
pop
inc
mov
add
aas
jl
popf
test
dec
or
popf
xchg
xor
push
pop
sub
js
movsl
pop
mov
lds
cmp
frstor
jb
pusha
xor
dec
loop
adc
adc
and
dec
mov
cmpsl
push
add
mov
mov
mov
fildl
lock
add
dec
les
out
or
decb
dec
in
notl
ds
cwtl
out
push
in
cmp
ret
push
push
push
and
pop
cmp
in
xchg
jbe
jns
stos
jmp
jbe
cli
idivb
sti
adc
pushf
mov
adc
dec
fnsave
dec
mov
aad
jne
sti
jno
pop
xor
pop
loop
loope
sahf
test
lcall
mov
dec
sti
jae
dec
cmp
jns
dec
in
and
ret
out
mov
mov
or
cmp
jb
push
outsl
pop
int3
lods
xchg
popf
adc
cmp
adc
mov
popa
cli
icebp
scas
ljmp
aaa
int
lods
push
inc
sub
mov
sub
adc
pop
push
add
add
insb
arpl
fidivs
adc
or
pop
fiadds
into
cmp
add
or
push
xlat
mov
cltd
les
nop
and
ss
mov
cmovb
push
cwtl
jl
mov
and
pop
dec
add
popa
inc
push
cs
push
aad
je
insb
arpl
xor
mov
mov
cld
sub
stos
xor
push
clc
test
jne
xchg
call
les
enter
jmp
adc
pop
push
leave
sub
push
movsl
sahf
data16
xlat
insl
pop
mov
rorb
push
xchg
xchg
clc
sbb
fisubs
jp
stc
jle
sbb
dec
or
mov
stos
pop
pushf
cmc
xor
sub
mov
idiv
imul
cli
mov
jmp
into
shlb
and
fiaddl
dec
test
fsubr
popf
lods
shr
jo
and
aaa
test
pusha
dec
leave
or
out
xchg
add
mov
add
js
push
rcll
sub
fisttpll
pop
loop
lods
push
sahf
mov
add
int3
insl
pop
imul
mov
scas
inc
add
mov
cmp
mov
cmp
xchg
ja
mov
sahf
sub
mov
movsl
pop
jo
mov
iret
xor
push
imul
popf
jp
adc
jle
xchg
xor
sub
rcrb
in
inc
das
xchg
add
push
jns
aaa
push
pop
incl
cmpsb
or
adc
push
add
or
lods
pop
js
adc
scas
mov
or
mov
xchg
push
push
lds
dec
sarb
xor
mov
shl
push
dec
outsl
or
xchg
and
mov
mov
and
adc
jle
lcall
xor
je
cmp
mov
xchg
loop
jno
idivb
pop
inc
stos
mov
rorl
add
mov
or
stc
push
mov
mov
mov
push
hlt
pushf
inc
xor
push
scas
sub
punpckhbw
push
pop
pop
push
es
xchg
push
mov
sub
pop
adc
andl
cmc
pusha
xor
and
pop
pop
lahf
ds
fnstenv
mov
mov
int3
push
and
fimuls
icebp
fcompl
fidivrs
pushf
inc
fcompl
sti
je
or
nop
call
adc
xor
xor
ret
and
int3
pop
pop
dec
shl
xchg
stos
cmp
sbb
movsb
mov
cwtl
xor
pop
jne
lock
fldcw
mov
mov
popa
sbb
sahf
cmpsl
inc
movsl
xchg
inc
shl
cmpsb
inc
sti
cld
cld
lea
push
sub
es
pop
cmp
xor
dec
jnp
mov
cmp
es
into
push
rcl
and
aad
push
mov
xchg
pop
push
dec
aam
push
call
stc
sarl
add
ljmp
push
mov
xchg
outsb
push
pusha
scas
pop
daa
xor
sarl
adc
popaw
lock
out
call
call
mov
out
movl
xor
cmc
or
lock
in
xor
or
pop
and
sbbl
mov
imul
sub
jecxz
sti
mov
and
scas
xor
dec
sbb
or
imul
ja
mov
sub
xchg
xchg
xor
aam
sbb
clc
dec
push
insb
sbbb
faddl
gs
repnz
sbb
sahf
hlt
xchg
xchg
filds
outsl
mov
xchg
fsubrl
jl
test
sahf
mov
pop
test
fdivrp
sub
inc
dec
dec
in
jmp
or
scas
pop
xchg
lods
out
mov
and
sbbl
movsl
dec
scas
lret
xchg
popf
inc
cmp
jecxz
mov
das
nop
shlb
xor
enter
arpl
aam
std
ljmp
mov
cmp
ret
js
scas
add
rolb
jae
mov
jno
xor
out
pop
cs
aam
pop
into
or
jmp
scas
cs
int3
data16
fldl
jp
mov
pop
cmp
outsb
xor
xchg
cmc
cltd
or
rcrl
sbb
inc
inc
addr16
aas
xlat
movsl
xorb
test
mov
sub
jge
mov
sbb
jge
stos
outsl
lret
cmp
sub
movsb
dec
adc
jmp
mov
aas
das
nop
jnp
and
push
dec
jl
stos
add
xor
cli
repz
or
aam
xlat
mov
js
inc
cmpl
add
dec
repnz
outsl
jno
sti
shr
or
pusha
mov
pop
dec
pop
push
movsl
add
insl
mov
ss
pop
popa
mov
xchg
cwtl
add
jl
xchg
lea
and
pop
test
lods
cld
xchg
pop
mov
enter
sarb
roll
jae
gs
into
loopne
pop
mov
inc
pop
repz
adc
inc
jbe
push
xchg
hlt
icebp
xlat
testb
sbb
movsl
shlb
or
jne
push
in
jne
push
lea
test
fstps
mov
rcll
dec
fdivrl
rcrl
xchg
cmpsl
xchg
jp
mov
jno
xchg
lods
push
imul
nop
add
es
aam
bound
dec
enter
test
ljmp
fwait
rcr
cli
xor
fiadds
ja
arpl
jo
aaa
dec
fstpl
jle
cltd
xor
pop
int3
pop
pop
cmp
ss
sub
mov
stos
mov
xchg
aas
sub
jmp
call
push
xchg
mov
leave
push
pop
xchg
sub
cltd
cltd
jbe
jb
std
inc
inc
mov
iret
mov
fmuls
inc
shl
movsl
inc
jg
outsl
lea
sub
inc
or
jne
mov
mov
sahf
mov
gs
pushf
mov
pop
sarl
test
mov
popa
pop
repnz
cmp
lahf
xchg
push
mov
sub
iret
ljmp
fneni(8087
hlt
push
shll
call
scas
arpl
fdivrs
mov
fistps
ljmp
jp
cmp
out
mov
lret
xchg
daa
jbe
in
inc
pop
fistps
jmp
sbbb
stos
pop
xor
mov
mov
cmpsl
pop
hlt
mov
in
pop
popa
sbb
mov
xchg
add
adc
stos
fnstenv
dec
jno
inc
fstpl
dec
mov
jge
inc
hlt
test
leave
xchg
lcall
sbb
mov
mov
push
sub
fisttpll
popa
js
hlt
mov
rolb
adc
sub
cmp
or
push
push
mov
aaa
xor
ficomps
lret
cwtl
adc
xchg
mov
repz
xor
dec
jns
nop
lcall
or
nop
push
fs
mov
cs
pop
mov
rorl
push
mov
jae
ds
cmp
and
jge
sbb
fiaddl
push
std
fwait
mov
mov
mov
cld
push
leave
mov
popa
push
call
pop
inc
mov
out
inc
push
mov
incl
out
adc
pop
jmp
mov
lret
hlt
loopne
lcall
xchg
in
add
xor
xchg
loopne
loop
aad
sub
mov
or
es
jl
insl
add
rol
shrw
jnp
inc
les
ss
loop
int3
jmp
pop
and
xchg
xchg
adc
test
or
std
or
movsb
lret
in
jo
add
xor
shlb
push
jae
pop
sbb
xor
sub
unpcklps
icebp
in
icebp
sub
cmp
add
xchg
and
cmp
xchg
push
hlt
push
pop
andb
jl
push
inc
ret
ja
repnz
sub
pop
add
addr16
push
cwtl
xor
loopne
ja
pop
insb
mov
sahf
xor
pop
je
imul
hlt
or
sub
jno
fxch
insl
lods
fistpll
xchg
pusha
cmp
inc
loopne
push
cli
cmp
test
sub
test
sub
aad
outsb
inc
adc
mov
add
add
hlt
jge
pop
popf
jo
std
jae
push
divl
or
ja
dec
sbb
int
or
mov
pushf
incl
sub
push
adc
hlt
dec
mov
orl
decb
les
sahf
add
or
mov
mov
push
add
push
aaa
in
repz
xchg
test
xor
xor
ljmp
jnp
pop
repnz
idivl
inc
adc
push
jnp
fnstsw
mov
xchg
aas
popf
testl
mov
test
push
aaa
mov
call
or
adc
shlb
mov
jg
movsb
pop
ss
pusha
mov
bound
push
sub
cmp
shl
mov
leave
int3
test
lds
mov
adc
mov
outsl
int3
jle
push
jmp
out
icebp
fidivrl
aam
push
test
aas
aas
cmpsb
outsl
and
mov
mov
lcall
mov
dec
inc
xor
sbb
mov
lods
lds
mov
mov
mov
repnz
imul
fucom
iret
shrl
clc
popf
or
fwait
jmp
inc
mov
xchg
rcr
and
shlb
or
pop
cmp
xor
fisttpll
fwait
xor
ja
sbb
jb
lods
stos
in
movsb
cmp
xchg
dec
xchg
cmp
cli
daa
add
push
xchg
in
and
nop
in
sbb
mov
mov
xchg
clc
push
jl
or
in
sbb
mov
pop
cmpl
jg
xchg
mov
fmuls
add
mov
cmp
ret
addr16
sar
mov
dec
xor
dec
mov
cmp
fistps
inc
and
push
outsl
xor
push
stc
cmp
adc
sarl
add
fucom
inc
roll
mov
mov
lahf
xor
add
push
nop
lods
scas
xchg
daa
movaps
in
or
cmpsl
push
idivl
mov
test
subl
imul
enter
mov
inc
adc
push
add
int
std
cmp
in
add
enter
jbe
sub
pop
add
sti
mov
loop
push
mov
jno
clc
push
ret
sub
cmpl
cmpsb
iret
cmp
dec
out
je
adc
inc
fwait
sub
adc
jge
push
inc
call
adc
jae
xchg
dec
movsb
fwait
cmpsb
pop
dec
imul
lahf
jge
sub
adc
mov
and
lock
jecxz
and
test
mov
pop
stos
or
dec
sub
and
or
mov
mov
stos
mov
and
fdivr
jle
fistps
sbb
sub
aad
or
nop
pop
push
movsb
mov
dec
sbb
xor
xchg
xor
push
arpl
enter
pop
aam
sub
add
jmp
mov
mov
pushf
pop
or
aaa
add
fisttps
xchg
dec
outsl
xchg
or
je
jge
cmp
fnsave
mov
adc
call
in
insl
fs
pop
xor
adc
cli
mov
sub
sub
int
inc
ss
jne,pt
mov
xor
lock
xchg
fwait
xchg
push
pop
lret
sub
inc
mov
cmpsl
clc
rcll
pop
pop
sbb
sbb
inc
pop
scas
bound
jbe
dec
add
jg
mov
popf
outsb
sub
cmp
jle
sbb
xor
ss
orl
imul
aaa
push
insl
std
clc
sbb
push
mov
cmp
data16
mov
or
insl
les
call
bound
iret
pop
sbb
rcrb
sbb
mov
jle
pop
pop
icebp
adc
jb
insb
flds
pusha
iret
fcoml
aaa
pop
xchg
adc
inc
lret
add
test
xchg
je
push
adc
push
outsb
xor
add
pop
and
inc
pop
jno
sbb
mov
push
sahf
xor
pop
sti
or
je
in
push
icebp
sub
adc
mov
mov
push
into
pop
ljmp
shll
cmp
adcb
and
imul
cmp
dec
fsubrl
das
jl
cmp
jo
bound
adc
cmova
push
push
enter
push
movb
mov
push
frstor
push
jmp
mov
xor
fwait
dec
test
dec
cmpsb
das
adc
sahf
adc
scas
in
mov
and
push
in
aas
movsb
jmp
std
jns
imul
enter
int3
mov
ja
or
mov
ja
sbb
add
imul
and
lods
dec
test
aas
rolb
push
and
pop
push
cmp
rcll
sub
fwait
inc
mov
xchg
sarl
mov
xor
imul
jg
out
ss
push
ja
sub
or
arpl
aam
addb
cmp
repnz
or
js
mov
fcomip
iret
frstor
push
icebp
xlat
jl
or
dec
mul
std
jns
iret
sbb
jns
cmp
inc
not
fsubr
stos
pop
fs
sub
movsl
idivl
xchg
rorl
cmp
mov
push
fdivs
xor
sub
jg
stos
sarb
pop
adc
dec
int3
dec
dec
xlat
jl
decl
dec
pop
cwtl
xorb
ret
fimuls
test
out
fs
xor
dec
cwtl
inc
out
rolb
ds
movsl
mov
cmp
mov
jbe
jo
cwtl
imul
aam
movsb
icebp
jbe
insl
push
imul
xor
push
mov
mov
inc
pop
inc
dec
or
or
repnz
pushl
sub
mov
sub
or
cli
mov
sub
ret
jl
xor
xor
ds
jbe
adc
and
cwtl
mov
mov
leave
jl
dec
out
ds
adc
xchg
mov
inc
jb
repnz
popf
aas
outsl
jae
xor
cmp
mov
mov
pushf
sub
sbb
into
dec
pop
jns
imul
jns
sub
leave
int
cmp
in
aam
push
fwait
stos
sub
mov
stos
repz
pushf
inc
aad
es
xchg
inc
lock
cmp
pusha
sub
adc
push
pop
xor
or
ljmp
xchg
jb
xchg
faddp
call
cmpsb
sub
jp
or
dec
jl
stos
shrb
jns
std
aam
pop
pop
icebp
jl
in
mov
scas
lret
xchg
cmp
mov
xchg
cs
xchg
xchg
leave
xchg
lods
gs
pop
hlt
adc
jmp
test
pop
in
jmp
daa
cmp
popf
aaa
into
shlb
adc
addl
movsb
sti
jns
xchg
mov
jmp
add
mov
mov
jne
sarb
leave
lds
mov
cli
xchg
adc
or
mov
mov
imul
sbb
stos
inc
xchg
dec
in
push
xchg
cltd
xchg
cwtl
jge
inc
add
mov
iret
xchg
adc
xor
mov
inc
imul
popa
xor
lock
dec
jno
push
mov
fwait
pop
push
push
push
aaa
xor
lods
add
stc
loopne
mov
in
and
sbb
xor
and
out
pop
xchg
clc
xchg
insb
xchg
mov
push
test
js
mov
xchg
shrl
lret
clc
sbb
xchg
fcmovne
adc
cltd
mov
sub
jge
loopne
int
shll
inc
push
xchg
inc
lods
mov
or
icebp
notl
cmpb
or
scas
hlt
pop
jbe
repz
cmp
sbb
sbb
push
call
ljmp
rcll
idivb
into
inc
out
inc
dec
or
xchg
in
xchg
insl
sbb
mov
xor
shrl
and
imul
insb
aam
mov
xor
xchg
fs
pop
jbe
nop
jge
mov
dec
test
add
or
cwtl
movsl
mov
adc
dec
cld
and
adc
push
pop
iret
negl
shr
push
shlb
push
adc
outsl
inc
les
insb
out
ja
xor
xor
out
repnz
pop
mov
out
jecxz
pop
jmp
out
nop
popf
sbb
mov
into
orb
mov
ret
pop
pop
cmp
sub
push
adc
lret
mov
popf
orl
inc
cli
ss
daa
or
and
dec
lods
pop
pop
xorl
nop
insl
lret
cmp
mov
bound
push
inc
loopne
fistps
ljmp
or
xor
mov
add
clc
pop
lar
xchg
inc
popa
lcall
stos
pop
xchg
stc
adc
inc
cltd
and
cld
push
push
lcall
in
jmp
sbb
inc
call
mov
push
lret
inc
rcr
cmp
mov
dec
nop
pop
shll
pop
xlat
cmpsb
or
adc
pop
ljmp
ss
lock
ds
rcr
mov
test
pop
push
cmp
scas
cltd
cltd
and
lods
cltd
jb
clc
mov
or
cmp
inc
cmp
sbb
hlt
sbb
bound
cli
pop
sub
mov
inc
add
mov
mov
jno
cmp
jo
lds
jae
inc
xchg
lea
push
aaa
testl
mov
cld
pop
dec
add
xchg
xchg
cmp
jo
imul
scas
add
mov
jg
or
aaa
jne
mov
fs
loop
xor
jne
mov
mov
mov
dec
inc
dec
mov
clc
jbe
scas
lea
fwait
movsl
mov
loopne
aad
dec
xchg
jno
xchg
std
sub
stc
xchg
imul
sbb
std
lods
mov
mov
inc
pusha
dec
push
addl
xchg
push
sbb
xor
jns
aaa
fmull
jg
aad
call
aaa
dec
push
shrl
sbb
fisubl
iret
pusha
or
testb
inc
cmp
adc
push
pop
jnp
pusha
inc
push
xchg
fsts
mov
dec
push
and
mov
push
loope
test
sti
mov
or
sub
aaa
sbb
mov
pop
xchg
push
jo
sbb
or
mov
jp
pop
aad
pop
sbb
pop
pop
cmp
adc
leave
push
adc
inc
xlat
xchg
and
int3
sub
pop
inc
sbb
int
inc
dec
insb
dec
jns
adc
xor
aas
xchg
das
and
pop
dec
or
lcall
jne
test
imul
aad
mov
imul
ret
ss
pop
push
jae
stos
in
xchg
dec
imul
stos
lods
mov
scas
dec
addr16
lret
add
cmp
jbe
cs
in
sub
and
xchg
jnp
sub
out
shrb
inc
add
cmpsl
nop
jbe
xchg
dec
sbb
mov
push
jecxz
pop
and
aad
jmp
lahf
shrb
fwait
test
inc
mov
xor
ret
bound
insl
scas
pop
out
outsl
popa
sbb
hlt
movsl
sub
fs
sbb
mov
or
dec
into
aas
sti
mov
fdivl
jb
dec
jmp
fwait
dec
push
test
inc
ss
rolb
push
cmc
lahf
scas
mov
in
lock
pop
push
push
lahf
mov
jmp
or
xchg
imul
adc
add
cmp
cmp
mov
adc
jo
push
and
mov
pop
insl
xchg
sub
and
adc
dec
jne
iret
dec
mov
loope
pop
jecxz
xchg
bound
mov
add
adc
xorl
add
cmp
mov
or
lock
das
repz
cmc
adc
lds
xchg
rorb
jb
ret
or
stos
scas
inc
idiv
sar
es
outsl
imul
mov
addr16
test
add
ror
or
sub
repnz
mov
inc
xor
aam
in
add
mov
notl
push
mov
mov
jp
add
enter
daa
into
dec
orl
add
mov
dec
pushf
inc
imul
pop
je
shl
lods
les
enter
insl
pop
enter
mov
push
sti
lret
idivb
jmp
loopne
das
sbb
ds
push
pop
inc
shlb
xchg
mov
aad
jmp
sbb
inc
and
or
test
sub
ficompl
jle
inc
movsl
mov
nop
mov
adc
pop
outsb
adc
sahf
lods
cld
dec
pusha
js
or
lea
mov
repnz
idiv
mov
mov
ds
lods
push
sti
lret
mov
in
mov
insl
rdtsc
neg
mov
sbb
and
push
jbe
std
inc
inc
movsb
jg
stos
jbe
jbe
out
lcall
int
ror
ljmp
push
cs
mov
xchg
nop
mov
mov
fstpl
and
sub
jg
mov
test
in
inc
fdecstp
out
add
je
sbb
mov
sbbl
sar
lods
xchg
mov
add
mov
xchg
cld
dec
out
xor
ljmp
or
das
xchg
mov
pop
add
imul
adc
push
stos
mov
aad
lock
aaa
dec
xor
add
scas
dec
int
mov
mov
and
ss
cmp
pop
push
inc
inc
adcw
sub
movl
pop
int3
std
xlat
out
imul
clc
sub
stos
std
xlat
xchg
addr16
lock
dec
aaa
test
lcall
subl
mov
mov
pusha
aad
inc
sub
iret
testb
dec
jp
call
in
jl
pop
movups
les
push
add
popa
and
add
add
inc
pop
pushf
movsl
sbb
adc
mov
mov
ds
jns
mov
pop
popa
sub
dec
xchg
jae
push
iret
mov
aam
roll
cld
push
fmul
mov
inc
stos
or
repnz
xchg
xrelease
gs
mov
push
mov
mov
push
jg
in
mov
dec
test
into
call
roll
mov
lahf
or
pop
repnz
fwait
std
inc
jmp
sbb
aaa
xchg
cmp
movsl
push
mov
aad
lahf
pop
ficoml
jns
cwtl
or
fadd
sub
inc
sub
push
pop
lods
jmp
stos
mov
and
mov
loopne
pop
push
adc
mov
outsl
fdivp
push
or
mov
movb
dec
xor
sbb
sub
xor
fistps
out
std
adc
adc
insb
xor
sub
arpl
push
fmul
ds
sti
cmp
xor
add
testl
xchg
add
inc
stos
sbb
mov
aaa
sbb
jae
and
cld
lods
mov
iret
ljmp
adc
mov
movsl
clc
imul
xor
ljmp
mov
mov
ljmp
push
xchg
ss
fstpl
sub
nop
inc
mov
sbb
bound
rolb
ss
inc
sbb
daa
xchg
addr16
mov
inc
sbb
sbb
sub
cmpsb
loope
dec
mov
inc
mov
pop
lods
fdivrl
xchg
stc
mov
into
jo
aam
add
pusha
bound
adc
sbb
sahf
and
cmpsl
adcb
jg
dec
rorl
dec
sub
and
and
rclb
lock
les
js
loop
lea
fildl
sahf
push
and
mov
cmc
lods
xor
shrl
inc
mov
jecxz
sub
cmpl
out
push
mov
aad
dec
ss
cld
xor
imul
inc
testb
call
in
sbb
mov
add
sbb
and
mov
mov
cwtl
jae
in
adc
ljmp
dec
lea
repz
mov
pop
xchg
mov
jbe
cmpsl
mov
stos
aam
or
mov
jle
scas
xor
adc
dec
jp
movsb
addl
sub
sbb
jecxz
xchg
or
push
mov
xchg
mov
in
lock
cli
popf
and
ret
cld
in
loopne
lea
lea
xor
pop
jo
push
sub
or
lcall
fstps
sbb
mov
fwait
inc
mov
jg
or
push
jnp
jo
pavgw
cmp
push
xchg
adc
mov
xor
mov
xchg
lods
push
pushf
ds
nop
push
daa
or
popf
subb
inc
push
mov
add
pop
popa
push
dec
sbb
fidivs
loopne
sub
jge
pop
mov
mov
js
shl
daa
sbb
test
in
outsb
insb
fwait
adc
jne
mov
sbb
inc
in
push
push
sti
in
andl
mov
xlat
mov
sub
jae
mov
in
arpl
push
push
jmp
dec
xor
faddp
mov
lods
mov
mov
adcb
test
add
aad
or
stc
xchg
cmp
inc
ljmp
and
dec
aam
or
pop
add
call
and
xor
cmp
cld
push
test
aas
jo
test
pop
xchg
cmpsl
mov
mov
inc
fsubl
pop
bound
pop
fst
cmc
outsl
aam
cmp
cmc
fdivl
je
fs
dec
imul
cmp
add
loope
sbb
mov
movsb
adcb
lea
sbb
dec
add
sub
movsl
gs
inc
clc
shl
popf
sbb
mov
pop
test
daa
mov
outsb
pushf
push
punpcklbw
lea
fsubp
mov
clc
pop
dec
mov
cltd
xchg
cmp
out
and
outsb
push
loop
es
popf
inc
gs
movsl
inc
sbb
aad
mov
cwtl
in
imul
out
push
xor
pusha
leave
and
in
cs
in
mov
pop
mov
mov
inc
pop
add
xor
idivb
movsb
add
and
or
cmpsb
arpl
xlat
andb
sbb
push
cmp
ret
in
inc
inc
rcl
andb
js
cld
testl
push
aam
fs
out
cmp
or
push
dec
idiv
lahf
in
xchg
xlat
rclb
popf
filds
inc
cmpb
pop
pop
lcall
rep
or
adc
in
pop
mov
sbb
mov
rclb
aaa
pop
sbb
es
ds
out
pop
dec
in
mov
add
ja
cltd
xor
movsl
mov
xor
repnz
aaa
push
mov
rolb
push
cli
lods
mov
decb
lods
daa
lret
seta
adc
sub
pop
aam
das
adc
push
jecxz
movsl
dec
sbb
dec
mov
std
mov
addr16
jecxz
jecxz
insl
cld
icebp
adc
mov
jg
xchg
or
sub
mov
iret
pop
in
daa
pushf
push
test
ljmp
jbe
lret
repz
stos
pop
mov
mov
das
xchg
sub
cmp
xchg
jnp
enter
mov
iret
icebp
stos
call
outsl
and
fldt
arpl
dec
push
dec
xor
lock
dec
dec
imul
mov
test
stos
and
shl
in
pop
cmp
sub
mov
sbb
arpl
cmpsb
adc
and
out
xchg
xor
xor
push
inc
xchg
sub
add
push
push
stc
push
cmp
xchg
in
aaa
orl
das
sub
xchg
fsubl
jns
cmp
js
lret
mov
dec
jbe
jnp
mov
inc
loope
rclb
push
cmp
mov
or
icebp
inc
cmp
lock
call
sbb
fcoml
in
fidivl
rorl
mov
inc
jg
adc
fnstcw
lods
fwait
das
out
and
sbb
popa
lods
sbb
xchg
mov
js
das
xchg
popf
add
add
imul
and
lret
scas
jmp
pop
stc
mov
cmp
clc
hlt
lahf
adc
movsb
xlat
push
inc
div
es
loope
cmp
mov
sbb
mov
xchg
lret
sub
push
or
xchg
rorl
push
push
push
stos
jge
inc
les
insb
stos
jp
mov
mov
gs
jns
fisttpll
js
daa
mov
pop
daa
xchg
jae
xchg
jmp
out
nop
out
mov
and
sub
add
incb
fs
mov
sbb
push
mov
sub
jl
out
mov
aas
test
xor
add
adc
cmpb
pushl
in
mov
mov
int
cmpl
sub
fisubrs
xchg
cmc
pop
dec
addl
push
test
sub
or
or
test
sub
cmpsb
addr16
xchg
test
movsb
imul
dec
loop
aam
push
jmp
das
subl
add
lods
mov
or
or
outsl
adc
jecxz
push
mov
fcomp
jecxz
jo
lds
icebp
in
dec
cmc
push
lret
xchg
mov
xchg
push
pop
inc
sbb
jg
or
testl
and
loop
fwait
jnp
or
scas
aam
mov
mov
xor
sub
xlat
fnsave
xlat
pop
popa
rcr
xlat
cld
push
push
popf
xchg
loopne
std
mov
ss
pushf
cmp
inc
push
jns
nop
in
sub
or
scas
rcr
ret
sub
loop
out
loop
in
adc
jecxz
ret
movsb
andl
mov
ret
cmpsl
mov
dec
daa
lret
pop
cmpsl
sbb
mov
jecxz
ja
loop
cmc
mov
sub
mov
ja
sbb
cmp
mov
jne
mov
fstl
aas
mov
mov
sbb
xor
rcrl
out
bnd
pop
bnd
cwtl
inc
mov
fnstsw
int
aad
dec
mov
lret
out
fs
es
lds
add
cmp
or
pop
sbb
ja
pop
adc
pop
nop
clc
sub
mov
out
cmp
popf
clc
xor
fsubs
pop
adc
sbb
jle
lret
jp
adc
mov
mov
mov
adc
sub
and
dec
fisttpll
dec
jmp
mov
je
outsl
xchg
adc
jnp
add
add
fs
adc
ljmp
mov
test
sbb
out
inc
pop
cmp
fldl
mov
lcall
imul
adc
loop
mov
mov
outsl
mov
mov
flds
out
adc
mov
pop
jmp
sahf
mov
xlat
push
sbb
lods
xchg
add
and
pushf
and
in
xor
lret
add
fidivs
stos
inc
sub
xlat
and
inc
insl
lock
xor
aam
insb
mov
push
jg
das
icebp
and
lds
cmpsl
dec
jl
negl
fsub
shlb
cltd
cld
xor
jne
sub
stos
pop
in
insb
cmp
mov
and
popa
cld
push
clc
scas
fsubrp
aas
daa
lds
outsb
cmp
mov
jb
xchg
xor
xchg
mov
aam
and
sbb
loopne
xchg
mov
repnz
mov
or
adc
sub
push
sbb
xchg
loopne
pop
fidivs
xor
mov
dec
xor
outsl
int3
push
pop
sub
inc
std
xchg
fwait
imul
push
mov
out
xlat
and
das
fsubp
mov
jbe
test
xor
xor
shrb
test
and
pop
cmp
mov
rcrb
add
or
inc
jl
cltd
rcrb
test
notb
push
sub
popf
insb
lea
popa
lcall
aam
fdecstp
leave
incb
divl
pop
push
xor
aas
sbb
shrb
fs
loope
mov
jae
enter
inc
mov
inc
test
push
imul
adc
in
cmp
sub
inc
xor
xor
out
int
or
mov
ss
cmp
add
mov
jmp
pop
sub
mov
clc
sub
dec
fbstp
andl
or
cmp
cltd
repz
xor
adc
inc
in
mov
div
dec
pop
or
fists
cs
push
test
xor
xchg
sub
jne
mov
dec
add
or
pop
sbb
sub
xchg
es
sub
mov
inc
mov
jo
nop
test
outsl
enter
mov
stc
mov
pop
sub
fwait
sub
jb
jae
mov
sub
and
cwtl
fcoms
mov
xor
aaa
pushf
jne
andb
ficoml
fnstcw
mov
jnp
hlt
mulb
fstps
test
xor
ret
addl
and
int3
cwtl
mov
insb
clc
push
or
inc
inc
lods
int
imul
fwait
hlt
push
jo
cli
pop
dec
push
sbb
xchg
pop
dec
cli
mov
jmp
mov
aam
adc
call
sbb
xor
ret
dec
push
push
mov
inc
rcrl
jns
xor
mov
pushf
movsb
mov
adc
push
lea
jmp
inc
mov
inc
enter
mov
loopne
sbb
hlt
jb
repz
jmp
jo
dec
dec
rcll
je
inc
add
jno
fs
pop
xchg
mov
out
jle
xchg
mov
test
push
xchg
outsb
out
cmpsl
in
loop
pop
scas
mov
or
es
andb
es
inc
lock
mov
fisttps
jae
out
cmp
addr16
mov
arpl
fsubs
lret
fwait
pusha
sbb
dec
sbb
shll
mov
daa
int3
icebp
xchg
data16
dec
xchg
pop
out
xchg
repnz
mov
or
nop
jecxz
cs
push
call
xchg
pop
pushf
test
add
and
adc
mov
arpl
sub
or
mov
inc
sbb
ror
or
das
fiaddl
testb
jecxz
bound
mov
test
push
xor
push
ret
adc
cltd
je
mov
mov
sbb
sub
test
dec
outsb
mov
dec
mov
mov
jnp
sti
fadds
test
mov
inc
xchg
fldl
mov
cmpsl
cld
lods
jbe
dec
aam
vmovdqu
jle
inc
sbb
pushf
shlb
pop
inc
dec
js
imul
rcrl
cltd
inc
push
and
xor
sbb
cmpl
pushf
pop
pop
test
mov
js
xchg
cmp
push
movsl
sbb
cmp
or
stos
insb
mov
jno
sub
gs
into
add
xlat
je
pop
pusha
jmp
call
inc
cmp
cmpsl
cmp
xchg
lods
sahf
push
lret
outsl
addr16
pop
xor
push
push
ficomps
mov
repz
xor
stos
and
xor
mov
mov
outsb
rcrl
imul
inc
stos
jns
adc
sbb
fsubl
mov
adc
xchg
jae
xor
push
jl
mov
fdiv
dec
aam
pop
call
pop
pushw
cmp
roll
sbb
imul
mov
mov
dec
js,pn
jmp
ret
add
cmpsl
js
sbb
push
sub
jbe
lock
push
or
les
popa
dec
cmp
pop
jle
push
jmp
popl
mull
aad
and
ljmp
xchg
movsl
fisttpl
push
mov
sbb
fs
sar
addl
dec
icebp
les
add
fcmovnu
mul
push
mov
jp
mov
add
push
in
mov
das
pop
inc
mov
or
inc
loopne
cmpsl
cmpl
pop
mov
or
and
repnz
test
or
cmc
or
sub
dec
and
sbb
push
jp
xchg
jge
fisttps
popf
imul
and
or
out
push
lcall
dec
mov
ja
push
shlb
test
pusha
jbe
xor
mov
mov
lods
shr
jmp
inc
loopne
dec
pushf
mov
cwtl
dec
sub
jb
mov
sub
mov
es
mov
push
mov
sub
les
je
pop
push
pushf
imul
sbb
jo
in
or
xor
sarb
cld
std
imul
shlb
xlat
adc
cmp
int
aas
popa
insb
mov
cwtl
dec
aas
cmpsb
push
arpl
mov
aad
xlat
push
les
rol
cmc
aad
lods
into
inc
in
add
xchg
aad
hlt
fs
pusha
rolb
stc
cmpb
scas
pop
rcll
hlt
movsl
jne
lds
dec
les
js
mov
in
sti
xlat
sahf
mov
cmp
xchg
push
andl
mov
sbbb
movsl
inc
xor
inc
add
and
sahf
jae
clc
insl
outsl
shrl
ss
push
outsb
mov
mov
xor
enter
arpl
cmpb
xchg
in
sbb
jno
push
mov
jae
iret
push
outsl
loopne
adc
sub
les
bound
cmpl
jno
xchg
ja
mov
push
jl
xchg
inc
insb
js
rcrl
adc
adc
pcmpgtb
mov
test
sbb
dec
lret
fsts
and
pslld
or
or
cmp
cmp
rcll
mov
xor
insb
inc
cmp
cwtl
frstor
xor
xchg
xor
sub
mov
outsb
lock
pop
xor
inc
and
fmuls
in
mov
mov
inc
iret
test
out
cmpsl
push
popa
or
sahf
out
push
in
push
into
es
push
imul
pushf
and
repnz
ds
jmp
pop
push
scas
push
push
in
pop
sub
ljmp
xchg
dec
xorl
mov
mov
xor
lret
mov
cwtl
push
out
fisttpl
roll
jb
sub
adc
adc
out
mov
call
test
cmpsl
inc
fists
or
frstor
loop
xor
mov
int
fidivrl
mov
enter
xor
mov
jmp
dec
imul
sahf
dec
or
cmp
xor
jbe
gs
cmp
daa
addr16
pop
jg
orl
in
mov
iret
nop
dec
sub
cmp
or
data16
dec
jle
fidivs
and
in
sbbb
insb
std
arpl
mov
sub
inc
add
lea
sbb
cld
pop
subb
fucomp
pusha
or
ljmp
es
in
add
xchg
or
adc
mov
test
pop
dec
pop
imul
mov
fisttpl
mov
cmp
sbb
fcomp
xchg
addr16
xlat
movsb
mov
fcoml
or
add
mov
sub
push
js
fsqrt
lahf
mov
ret
or
mov
inc
cmpsb
or
sub
pop
sub
lret
dec
push
je
jns
cmp
or
pop
gs
jo
and
out
mov
xchg
mov
out
aas
adc
shlb
add
pop
xorl
jns
fnstcw
xchg
push
xorl
dec
mov
mov
inc
push
es
pop
popf
xor
inc
xor
pop
cmpsl
cmpsl
andb
roll
lea
mov
hlt
mov
or
pop
sub
mov
xchg
xor
sbb
lret
lcall
insl
adc
sbb
cwtl
push
cmpsl
rcr
lods
das
lock
adc
dec
dec
mov
xchg
cmp
pop
cmp
mov
scas
xor
sahf
lcall
adc
mov
adc
test
clc
mov
fcoml
mov
jmp
lock
fcmovu
orb
mov
cmp
mov
jmp
mov
arpl
cmp
hlt
push
mov
lea
push
bnd
and
sbbl
das
test
xor
mov
xor
arpl
inc
xor
jp
jns
add
jecxz
jbe
jl
add
xor
mov
ljmp
xor
jmp
pop
inc
adc
sbb
mov
addb
and
int3
adc
xchg
and
pop
or
dec
into
into
mov
inc
mov
ljmp
mov
or
mov
mov
mov
cmp
testb
adc
out
xlat
icebp
and
sar
test
lds
mov
mov
dec
cmpsb
pop
test
in
outsl
in
clc
in
insb
rclb
mov
jecxz
lret
lds
add
in
pop
dec
adc
or
sub
sbb
pop
jge
jo
pop
jno
add
dec
cmp
cltd
dec
insb
shrl
inc
leave
shll
and
inc
pop
or
or
lret
mov
sbb
out
ss
or
jns
sub
imul
ret
cmp
mov
ret
inc
push
xor
mov
dec
orb
pop
inc
insb
mov
pop
adc
mov
xor
ja
idivl
addr16
ljmp
insb
push
xor
pop
jne
aad
out
aad
add
ja
mov
pop
cmp
xchg
add
in
in
ljmp
add
orb
aam
fnsetpm(287
stos
js
dec
aam
xchg
inc
push
iret
or
insb
jg
loopne
int
mov
and
in
bound
dec
ret
roll
scas
pop
mov
es
mov
dec
sbb
adc
sbb
aam
cmp
je
xor
popa
push
jecxz
mov
fnstsw
sbb
jbe
sbb
pop
xchg
out
ss
loopne
mov
mov
pop
subb
fs
or
sub
hlt
into
add
test
mov
testl
fwait
ss
rep
cmpsb
icebp
cmpsl
push
inc
mov
xchg
add
xor
mov
icebp
mov
pusha
pop
mov
and
test
jecxz
arpl
or
push
mov
mov
jg
dec
xchg
dec
loopne
jbe
jle
aam
jno
std
hlt
cld
pop
push
sahf
pop
dec
jge
mov
cmpsb
pop
mov
ficoms
sub
fbld
out
out
push
aaa
xchg
lods
mov
ss
push
pop
sub
inc
sbb
fildll
inc
jge
adc
adc
shrb
ficomps
out
mov
add
jne
adc
sbb
mov
mov
into
sub
inc
xchg
in
insb
mov
cli
dec
ret
cmp
adc
lret
sub
rcrl
je
jle
sbb
lahf
lods
or
sub
imul
aaa
pop
stos
jnp
cltd
loop
cmp
mov
mov
jmp
outsb
std
sub
sahf
or
sbb
sbb
ret
aas
bound
lock
sub
in
and
dec
test
mov
ret
test
popa
mov
fisubl
data16
cmp
dec
iret
call
jmp
jmp
mov
dec
clc
xor
xor
mov
scas
adc
mov
dec
rcll
sbb
repnz
mov
xchg
sbb
jle
addb
push
aas
rcll
and
dec
subl
and
sti
pop
pop
test
js
push
xchg
stc
test
mov
add
or
jnp
pop
jns
je
fs
in
pop
adc
dec
jae
ret
pop
push
pop
xor
inc
xchg
push
dec
aad
call
pop
sti
icebp
js
iret
xor
jo
sahf
cli
es
ds
loope
iret
daa
jecxz
jge
aam
sub
incl
out
sbb
cmp
and
cmpsl
mov
in
cmp
sub
dec
lock
jge
mov
je
jae
testb
movsl
sbb
sub
push
adc
jge
loopne
jmp
outsb
sahf
or
loope
push
shl
daa
and
js
lds
xor
repnz
mov
fcom
push
roll
inc
inc
adc
push
icebp
mov
int
jae
lock
sbb
cmp
sbb
leave
repnz
ds
inc
push
pop
std
dec
cmp
es
lret
jle
lahf
in
add
popf
or
adc
lea
jp
lods
dec
test
jnp
and
fimuls
add
aaa
test
and
js
mov
fcomps
fsts
dec
and
in
pushf
push
push
cmp
cmpsl
lcall
mov
cmpsb
outsb
das
mov
insb
into
loop
push
hlt
loopne
fcompl
adc
sbb
push
mov
pop
mov
aas
or
in
add
out
push
jmp
mov
fsub
mov
cli
cmpsl
insl
jb
adc
fisttpl
cmc
push
fwait
push
jp
cmp
lea
popa
filds
xlat
fs
mov
and
movsl
insl
repnz
add
out
jecxz
adc
or
xor
xchg
in
xchg
push
lahf
fmuls
cltd
jne
loope
cli
pusha
mov
stc
mov
stos
pop
adc
fwait
addl
cs
mov
adc
aas
lods
adc
daa
fnstsw
push
popf
adc
rorb
cmpb
jbe
mov
fcoml
scas
das
in
and
adc
lret
orl
add
or
fcompl
pop
pusha
cmp
imul
xor
loop
test
and
in
push
cmp
jecxz
mov
subb
stos
negb
pusha
push
cli
sub
cmp
mov
in
mov
imul
ret
insb
clc
cli
pusha
push
andl
aas
jmp
shll
pop
or
or
aam
mov
stos
inc
lds
stc
or
xchg
mov
fsts
jno
scas
and
push
cmp
ljmp
sub
add
mov
dec
jo
repz
sbb
and
push
pusha
pusha
sub
int
rolb
xchg
push
dec
pop
adc
in
adc
jmp
mov
pusha
push
add
sub
add
scas
add
add
aam
cli
in
frstor
loopne
imul
imul
movsb
pop
dec
inc
add
mov
jl
outsb
data16
mov
arpl
adc
inc
and
nop
adc
sbb
repnz
pushf
fwait
fwait
cs
js
mov
sbb
scas
jne
lods
sub
or
fs
sub
dec
jp
cmc
mov
sahf
fs
add
pop
test
dec
pop
sar
movsl
into
pop
push
sbb
cmpsl
imul
jle
sbb
dec
das
add
xor
sbb
dec
call
out
push
mov
mov
imul
stos
leave
roll
insb
add
mov
xchg
stos
mov
cmp
test
push
cmc
inc
cmovo
subl
movl
add
pusha
addr16
sub
cli
and
js
inc
outsb
int
call
adc
pinsrw
lock
jle
adc
test
or
inc
xor
fcmovnb
out
push
les
das
push
sub
mov
cmc
or
xchg
and
loope,pn
or
aam
xchg
push
xor
mov
sub
sarl
cmpsb
out
xor
imul
xchg
fidivrl
and
and
add
loope
add
jne
adc
cmp
scas
out
mov
lds
mov
out
iret
cmp
inc
sahf
adc
pusha
jns
stos
movsb
cmp
mov
cmp
arpl
aas
js
rorb
in
outsl
mov
push
or
xchg
adc
and
call
mov
mov
mov
xchg
or
mov
rdpmc
adc
cmp
ret
dec
cmc
jp
mov
or
test
push
fisttpl
lea
and
sub
mov
lahf
xor
xchg
testb
jbe
sub
sbb
xor
ficompl
dec
dec
int3
rcrb
les
scas
rep
sub
int
cmp
xorb
hlt
insb
xchg
sbb
int
mov
jae
xor
out
leave
repz
pop
outsb
mov
mov
test
push
out
sub
aam
in
xchg
mov
adc
mov
dec
ficompl
scas
jb
cs
les
les
xor
icebp
notl
jle
sub
fiadds
mov
adc
jl
xor
fists
jne
cld
mov
in
in
push
out
jge
sub
mov
sbb
inc
das
je
xor
xor
push
jp
mov
pop
lock
jno
popf
movsl
shrb
dec
cmpl
push
add
cmc
gs
push
lcall
mov
mov
sbb
leave
inc
or
test
inc
add
pop
or
add
jecxz
push
adc
mov
sub
ds
enter
adc
xor
jne
mov
or
call
bound
out
daa
test
icebp
into
push
mov
inc
aad
sbb
jg
or
repz
rcll
mov
or
xchg
int3
fildl
add
repz
xchg
loop
inc
negl
test
outsb
ret
push
test
sub
fcmovne
fdivrl
xchg
ret
mov
push
test
jp
ss
std
ret
pop
mov
xchg
std
cmp
push
jno
je
imul
push
outsb
jecxz
adc
jge
gs
call
aad
pushf
scas
cld
leave
jge
mov
xchg
fistpl
sub
inc
popf
cli
test
icebp
push
inc
xor
dec
in
pop
fsubr
fs
mov
mov
pop
mov
inc
call
insl
jp
hlt
push
popa
push
and
xchg
mov
mov
jbe
out
xor
push
nop
sbb
loopne
bound
xchg
pop
cs
mov
push
loope
clc
cmp
xchg
or
nop
add
xchg
dec
loopne
sarb
shrb
icebp
fildl
aaa
cld
fnstenv
xor
jae
test
mov
subb
fwait
sub
enter
mov
jnp
pop
jp
jle
loopne
movsb
xlat
jne
dec
mov
adc
je
and
sbbl
mov
push
xlat
inc
sub
sbb
hlt
mov
idivl
mov
adc
hlt
mov
push
jo
jge
adc
out
test
dec
stc
aam
mov
test
cmp
fldenv
lods
insl
faddl
adc
setne
dec
dec
push
pop
dec
pop
push
push
fsubrl
dec
std
xor
sahf
mov
std
add
xchg
pop
nop
loope
leave
dec
out
lods
mov
pop
pop
inc
jle
cli
in
xchg
cli
ficompl
lods
xlat
mov
sti
pop
xchg
sub
sarb
sbb
add
scas
xchg
stc
pop
xchg
pop
sub
or
shll
rclb
loopne
xor
adc
inc
jb
ficoml
xor
lods
imul
addr16
mov
dec
xchg
jo
mov
insb
lret
adc
rcr
sub
mov
loopnew
inc
cmp
inc
pushf
subb
jbe
leave
add
cmp
mov
mov
ja
rcll
loop
ret
dec
imul
cmp
mov
jg
mov
fs
mov
push
xchg
push
cmc
sub
mov
sub
fistl
mov
jge
dec
div
push
mov
lds
cltd
jae
fwait
shll
cmpsl
fists
fwait
popa
test
sbb
movl
mov
je
rcrb
test
push
movb
test
pop
outsb
fcoms
stos
std
adc
xchg
sbb
sbb
mov
xchg
pop
add
and
stc
fimull
pushf
dec
add
mov
hlt
lock
test
fdivrs
push
or
adc
popa
pop
add
out
or
testl
mov
test
inc
or
gs
mov
push
jbe
pushf
in
popa
or
insb
pop
sub
mov
sub
adc
dec
add
shll
sbb
es
jb
inc
maskmovq
divl
shll
fistps
lcall
scas
insl
scas
cmpsb
inc
xchg
in
xor
jp
fdivs
jl
push
mov
or
jno
add
shrb
dec
add
sbb
adc
push
inc
imul
mov
shl
xor
es
mov
xor
sbb
psubsb
jbe
lcall
pop
ficoml
ret
mov
jb
bound
xor
fcoms
pop
imul
cs
outsb
popa
jge
push
or
lods
push
push
add
inc
mov
hlt
test
cmp
adc
aas
inc
sahf
scas
add
xchg
lret
add
mov
sub
popa
mov
push
fs
mov
push
lods
push
pop
cmp
cmpsb
cmp
popf
add
lock
or
repnz
or
inc
xchg
aas
mov
pop
inc
adc
dec
scas
cmc
pop
int
in
xchg
rorl
xchg
push
dec
inc
cmc
dec
adc
call
inc
adc
jl
cld
lret
das
cmp
dec
and
sbb
movsb
push
lret
pushf
idiv
adc
pop
shl
lahf
adc
xchg
pop
sub
adc
xor
push
into
pop
ljmp
mov
jl
xor
sti
stos
jecxz
int
arpl
xchg
or
out
cld
in
call
adc
jge
or
jne
add
mov
aad
pop
sbb
mov
xor
sahf
out
push
pop
sub
add
lds
dec
mov
lods
xor
dec
mov
adcb
stos
shrl
stos
fs
mov
dec
imul
dec
jo
mov
ret
fnsave
adcb
arpl
test
insl
test
aad
shll
mov
pushf
xchg
mov
in
dec
rclb
fadds
data16
repnz
push
arpl
cmp
cmp
sbb
ds
xchg
daa
push
sbb
data16
pop
pop
dec
cmpsb
mov
mov
test
leave
pop
mov
ljmp
aad
loope
jp
mov
movsb
loop
aas
sbb
mov
imul
cs
mov
push
aam
pop
mov
test
inc
dec
inc
inc
scas
hlt
movsb
push
cmpsl
aam
jo
jbe
icebp
lcall
cmpsl
sbb
cmp
inc
imul
jne
add
mov
daa
cmpsl
xchg
push
aaa
xchg
and
sbb
lcall
ret
loope
adc
adc
xor
xchg
inc
add
test
or
dec
fcmovnb
cs
mov
pushl
pop
mov
sub
push
adc
sub
hlt
shrl
dec
mov
or
push
and
mov
cmp
mov
cmp
jp
orl
dec
xor
je
scas
mov
test
dec
fisubs
in
cmp
sarb
std
and
jecxz
jne
inc
movsb
aam
ds
aaa
dec
mov
loopne
jb
test
stos
xor
mov
loopne
rcrb
iret
pop
pop
push
out
mov
inc
lods
in
clc
into
sbb
xchg
lret
adc
jns
jl
das
movsb
ds
inc
nop
stc
scas
hlt
push
xchg
movsb
mov
push
inc
loop
add
fucomp
mov
add
add
shlb
lds
mov
out
xor
js
push
int3
pop
jecxz
inc
push
aas
add
sahf
insb
aam
aaa
aam
stos
das
pop
cmpsb
shlb
jbe
shll
rcll
push
pushf
data16
aam
mov
ret
dec
lret
push
push
and
inc
lea
int3
pop
mov
aas
pop
and
inc
pop
out
lds
shrb
add
inc
cmpsb
adc
or
pop
xchg
push
lock
or
clc
movsb
dec
mov
jg
cmp
leave
push
popf
xor
pop
sub
addr16
or
push
mov
mov
and
out
sub
popf
add
int3
adcl
sub
aas
adc
mov
push
cmp
loopne
out
dec
sbb
or
subl
lret
stc
xor
jae
cmc
pop
mov
push
push
scas
addr16
loope
in
mov
push
sbb
out
loopne
xchg
mov
inc
xorl
shll
pop
aas
lret
loop
lcall
xchg
mov
pop
bnd
cmp
jp
or
adc
daa
cld
push
sbb
inc
ljmp
int
xchg
cmp
dec
inc
fcoml
and
test
pop
lock
xchg
enter
lods
jns
daa
xor
sbb
loopne
sti
or
mov
std
add
mov
push
ja
aas
and
loope
lock
dec
add
mov
cmp
sub
sub
jl
outsb
fstps
mov
jl
add
mov
dec
jns
test
inc
out
and
and
sbb
jle
xchg
sbb
aad
xchg
xchg
cmpsb
call
add
cmp
leave
jo
or
lret
ss
cmpsb
mov
mov
cmp
push
jg
or
aas
mov
push
push
fnsave
lcall
imul
rcrl
aas
xor
les
in
xlat
imul
jbe
scas
mov
les
xor
scas
or
nop
and
push
mov
mov
mov
jp
xor
mov
test
mov
and
dec
mov
into
mov
mov
rcrl
sub
mov
pop
inc
daa
jno
sarl
jb
mov
pusha
xchg
inc
xchg
daa
push
sbb
ljmp
cwtl
add
or
jnp
xchg
cld
or
imul
int3
adc
sub
insb
mov
test
jnp
lret
xchg
mov
add
mov
cld
nop
jmp
fcmovu
ret
ss
xlat
js
orl
aam
movsl
popf
xlat
inc
js
inc
xlat
inc
lahf
xchg
jns
adc
mov
in
hlt
stos
idivb
leave
mov
das
and
adc
test
test
stos
and
ret
pop
cs
cmp
lret
sub
and
jecxz
mov
fisubs
outsl
imul
or
fisubs
jnp
das
movsb
inc
cmc
xchg
or
test
or
repnz
mov
jne
mov
rol
stc
push
sub
push
adc
xchg
enter
insl
aam
test
sub
sti
dec
mov
pusha
rcrb
sahf
dec
push
sub
lock
fwait
xor
push
fimull
jnp
fbld
jle
movsb
mov
xchg
inc
mov
mov
sbbb
sbb
dec
test
arpl
xchg
dec
dec
and
in
fbld
xchg
nop
ds
and
sahf
dec
pop
mov
inc
mov
pop
push
mov
out
rcll
in
hlt
mov
rorl
lock
shlb
dec
xlat
ret
sub
aam
sbb
loop
mov
xchg
out
jo
mov
xchg
mov
cmpsb
add
insl
std
mov
in
push
sbb
gs
mov
imul
jbe
sbbb
sub
push
fidivs
xchg
mov
scas
daa
pop
in
in
jnp
int3
lds
fwait
arpl
fs
sub
pusha
ret
es
mov
mov
fldt
imul
inc
shll
shr
mov
inc
mov
sarl
loope
and
popl
or
push
ret
push
sbb
add
ss
push
outsb
and
dec
gs
ret
xorb
mov
pop
xlat
inc
mov
ror
or
xchg
es
and
mov
jo
cmc
mov
and
mov
mov
mov
push
push
xchg
scas
sub
pop
inc
xor
lods
movsb
daa
data16
daa
mov
pop
xchg
fiadds
sub
cmp
mov
popf
out
xchg
inc
pop
xor
pop
add
sub
jo
mov
jae
enter
ljmp
jb
andb
outsl
addl
push
std
imul
enter
ljmp
cmpsl
pop
add
arpl
fnstsw
mov
ror
xchg
loope
daa
cmp
test
and
mov
push
repz
stos
adc
adc
icebp
daa
addr16
andb
jge
pcmpeqb
popa
add
pop
movsb
xor
add
inc
add
test
jb
mov
out
imul
adc
push
addr16
xlat
fdivrs
jb
sbb
push
push
lea
mov
loop
add
and
inc
and
or
ljmp
mov
xchg
aad
sbb
dec
test
frstor
pop
pop
mov
mov
jle
push
gs
into
dec
and
jg
movsb
sti
cltd
mov
sbb
sbb
xchg
repz
push
cmpsl
out
in
push
xchg
mov
jnp
inc
adc
ljmp
out
inc
or
ficoml
lock
dec
sti
mov
mov
cmp
dec
cmp
pop
sbb
mov
outsl
jnp
and
mov
or
push
ret
sbb
orb
enter
or
xor
lods
fidivrl
int3
jmp
and
outsl
nop
ficoms
sbb
push
jmp
sub
out
mov
pop
cmp
push
out
fcomps
shrb
cmc
cli
mov
xor
mov
test
pop
pop
ret
xlat
aas
in
push
shrl
je
add
inc
fdivrl
sub
pop
lods
add
adc
mov
test
lret
subl
jb
mull
pop
add
shll
xchg
inc
pop
fstps
and
pop
adc
or
xchg
xchg
sahf
iret
movsl
push
push
push
and
mov
insl
inc
add
push
pop
dec
mov
pop
mov
xlat
test
clc
in
negb
cmp
loop
test
repz
and
sub
dec
inc
xchg
mov
scas
rorb
add
fidivrs
scas
daa
popa
and
scas
insb
rcr
fmulp
cwtl
movsb
sbb
pop
add
aaa
leave
jl
mov
fcomps
out
cmp
cmp
icebp
mov
sub
jecxz
ljmp
data16
and
adc
imul
icebp
xor
xor
ret
bound
add
imul
loopne
and
push
mov
sbb
dec
push
in
push
sbb
pop
clc
aas
xlat
fwait
mov
push
add
xor
jo
sbb
mov
cmp
mov
hlt
ret
sbb
repz
jno
mov
sub
in
lock
test
mov
int3
inc
mulb
mov
das
adc
cmp
and
cmp
sbb
insb
add
xchg
mov
mov
stos
popf
jecxz
pop
xchg
xor
dec
jmp
cld
push
add
fistl
ja
cld
or
adc
jp
aam
sbb
pop
shrl
dec
sti
mov
scas
loopne
pushl
enter
adc
popa
addb
ds
mov
fildll
loopne
jg
rolb
xchg
jle
aaa
xor
jge
cltd
mov
subb
dec
outsl
add
into
xlat
add
mov
inc
jp
stc
mov
roll
push
jmp
lds
icebp
xchg
aam
push
iret
les
inc
aam
int
pusha
setg
jnp
mov
sub
push
ja
daa
lods
pop
outsl
or
repz
dec
pop
mov
push
push
imul
mov
or
fcoms
loopne
mov
iret
in
jge
rcrl
dec
pop
and
jbe
fcmovbe
push
sbb
lods
mov
stc
mov
cs
ss
and
gs
mov
out
push
pop
gs
adc
leave
mov
push
mov
inc
push
pusha
fadd
pop
inc
je
lock
iret
sbb
jnp
iret
add
cmp
ret
or
pop
sarl
ret
mov
popa
iretw
mov
leave
fs
mov
ljmp
jnp
arpl
das
fstpt
sbbb
sbb
test
dec
add
stc
int
enter
push
das
mov
push
add
addr16
dec
mov
test
sbb
cmc
lock
fcoml
sub
lods
push
or
push
aaa
xchg
pop
pop
pop
dec
testl
push
sbb
outsb
cmp
xor
push
fcompl
jg
fcoms
sub
and
dec
pop
repz
outsb
xor
fwait
dec
inc
add
push
add
or
test
ror
and
pushf
adc
lret
std
decl
sub
push
and
frstor
mov
xor
pop
pusha
mov
aaa
and
pop
or
mov
je
sti
lock
adc
ret
jns
xor
mov
lret
sub
imul
fcmovne
sub
push
mov
aas
xchg
jg
pusha
fsubs
cld
flds
add
mov
pop
mov
push
in
jno
fcmovnbe
dec
mov
mov
addr16
adc
lcall
adc
adc
inc
ja
xchg
xlat
dec
sahf
add
and
sbb
rcll
mov
jno
fcomps
cmp
jp
sbb
out
jne
cld
fcompp
pop
rorb
sub
adc
sub
xchg
fiadds
push
mov
dec
inc
jae
mov
arpl
push
or
daa
push
and
xchg
imul
push
roll
add
cs
call
sbb
add
xor
std
jae
mov
daa
add
push
sub
cmc
xor
outsl
enter
call
repnz
ret
dec
jmp
lods
int
xchg
jge
push
sahf
addr16
sub
and
negl
pop
psubsb
in
sub
xchg
andb
ljmp
fwait
insb
or
pop
cmp
pop
outsl
lds
and
out
xor
jmp
sub
adc
sbb
stos
xor
xor
jl
ds
ds
lock
cmp
les
xor
mov
loope
dec
jb
inc
mov
pop
dec
adc
adc
adc
xchg
xchg
lret
mov
mov
inc
out
sbb
stc
aam
sub
jge
js
jle
push
sub
mov
sub
lock
inc
jne
not
jne
and
jg
adc
idivl
cli
je
outsl
jp
push
xor
clc
mov
mov
cmp
add
sbb
outsl
push
xchg
push
adc
daa
stos
stc
xorb
ja
jbe
addr16
jae
pop
hlt
fstps
push
lahf
je
dec
frstor
sub
adc
out
ficompl
adc
cld
test
mov
mov
rorb
dec
inc
loop
or
sbb
out
insb
repz
repnz
inc
jnp
lret
dec
popa
dec
or
roll
je
pop
je
test
sub
xor
lock
sub
sub
inc
pop
fists
mov
xor
jmp
shlb
add
dec
jnp
in
jbe
aam
rcll
and
test
out
daa
pop
movsl
push
mov
and
xor
mov
cmp
int3
sub
xor
ficompl
sbb
xor
scas
arpl
fimuls
cmp
pop
stc
xor
lock
mov
xchg
or
mov
aad
and
into
xor
mov
loope
into
pusha
loopne
mov
outsl
gs
cmp
fnsave
push
jbe
in
mov
shr
sbb
daa
cmp
popf
ds
mov
aaa
ja
push
scas
loope
mov
sub
rcll
cmp
xlat
add
mov
cmp
lret
mov
mov
push
lret
repz
je
insb
add
shlb
push
sub
adc
cmp
xor
movsl
fs
pop
dec
adc
rol
sahf
fs
inc
inc
push
rcll
shlb
outsl
dec
pop
push
loope
out
pop
sub
jp
pop
vmread
mov
stc
rcrb
je
adc
lea
xchg
mov
es
std
or
cmp
inc
fwait
gs
pushf
mov
cwtl
arpl
or
lcall
out
cmovl
sbb
lcall
aas
push
enter
pop
loope
pop
cmpsb
mov
sti
xchg
pop
leave
and
into
cvtpi2ps
sahf
fdivrl
xchg
adc
adc
out
cli
out
mov
cmp
sbb
dec
and
fisubs
xor
jl
mov
cltd
scas
mov
xchg
imull
and
out
jo
xchg
jge
rcrl
je
push
je
sbb
jmp
ret
xor
mov
fnclex
test
xchg
mov
imul
xor
mov
es
cmpsb
popf
jg
xlat
push
mov
dec
call
fdivrl
enter
pop
push
sbb
scas
test
scas
test
ds
jl
lods
xor
pop
roll
dec
mov
subl
ss
or
mov
shll
mov
xchg
outsl
sarb
xchg
and
dec
add
jae
sbb
idivb
loopne
arpl
enter
pop
int
rorb
jmp
sbb
or
popa
lahf
pop
cli
ja
scas
es
mov
aad
pushf
shl
mov
repz
push
jb
jecxz
cwtl
fstl
fbld
xchg
movsb
sub
mov
test
mov
minps
cmp
sub
adc
pushf
arpl
sbb
adc
mov
and
and
dec
loope
add
in
fldcw
push
mov
dec
or
fildll
or
push
push
pop
out
cmp
push
mov
subl
movsl
sbb
stos
fisttpll
push
stos
dec
jge
test
sbb
test
cld
addr16
adc
pop
lret
or
aas
das
stc
int3
jp
insb
les
enter
pusha
xchg
or
pop
cli
icebp
add
js
pop
push
out
xchg
leave
jecxz
mov
inc
jge
je
cmp
push
enter
jns
push
jg
xor
push
push
pop
dec
xchg
xorb
aam
xor
addr16
jno
sbb
add
jmp
mov
and
sub
adc
shll
xor
dec
fwait
ret
cmp
iret
out
cwtl
jnp
in
faddp
iret
gs
jae
popa
addl
shll
stc
sub
cld
mov
push
lds
push
rorl
jbe
aaa
cmp
jge
lret
test
mov
out
push
mov
mov
pop
into
enter
enter
jle
xchg
insl
ficompl
mov
xchg
jle
adc
cmpl
mov
xor
dec
mov
adc
xchg
loop
fs
ds
cmp
ja
dec
cli
aad
xor
inc
xor
push
jmp
rorl
xchg
das
mov
mov
in
fs
xlat
stos
outsb
jo
clc
mov
jae
cmp
daa
xor
pop
ret
adcl
dec
leave
popa
sahf
das
mov
neg
orb
dec
in
cmpb
pop
mov
aas
aam
mov
addr16
in
xor
outsl
cmp
mov
mov
inc
cmp
getsec
mov
sub
xchg
adc
cmpsl
loope
repnz
leave
cli
inc
add
jno
xor
outsl
pop
fcoms
sub
push
arpl
or
mov
daa
xor
adc
enter
mov
fcoml
stc
int
loop
adc
dec
push
mov
sub
sbb
inc
out
push
into
pop
orb
ret
sbb
in
lret
shlb
sbb
pop
push
std
ret
jecxz
out
or
mov
lahf
mov
or
lods
sarl
xor
jmp
pop
dec
cmp
xchg
je
or
mov
dec
in
jns
loopne
jnp
mov
mov
mov
sbb
notl
or
lods
inc
sub
pop
cmc
cmp
popf
loop
and
fistl
nop
mov
loopne
push
mul
xchg
pop
pop
mov
mov
shr
pop
ss
out
leave
pop
nop
cmp
and
cmc
xchg
adc
or
cli
jno
and
mov
lret
jno
push
mov
int3
ffreep
scas
scas
or
std
loop
into
sbb
sub
xor
stos
std
cmp
push
add
fdivr
lret
pop
sbb
dec
mov
mov
stos
in
mov
push
imul
push
enter
and
jae
adc
sub
roll
sbb
pushf
mov
mov
cmp
push
pop
cmp
mov
mov
pop
push
mov
sub
out
and
mov
arpl
int3
adc
sbb
out
pop
add
adc
fnsave
in
push
lods
adc
adc
das
decl
sahf
imul
loop
pop
movsb
sub
pop
push
loopne
subb
jecxz
sbb
mov
std
repz
shll
xchg
mov
in
mov
fidivs
sub
xor
movsl
jno
mov
inc
out
mov
loopne
or
cmc
clc
out
add
aad
mulb
cltd
jmp
mov
adc
jb
jbe
out
mov
ja
mov
in
pop
xor
or
adc
out
xorb
call
and
xchg
or
aaa
aas
jmp
daa
xlat
and
imul
and
neg
pushl
sahf
adc
push
lods
loop
lret
inc
sbb
lds
sbb
fdivrs
sbb
adc
sbbl
mov
pop
push
dec
or
repnz
into
mov
sbb
out
repnz
roll
sbb
xlat
jge
mov
shl
inc
les
sub
and
ret
jl
pop
test
xchg
lods
add
inc
push
push
or
xchg
or
pop
cs
jnp
ror
jnp
push
sbb
lret
push
jnp
and
dec
and
mov
jmp
or
inc
lds
sbb
cmp
lcall
out
adcl
sahf
pop
jl
imul
or
mov
jbe
pop
mov
lods
pop
ficoml
call
hlt
pop
iret
test
jge
sahf
fcompl
jp
in
sub
jmp
push
add
inc
int
test
adc
nop
pushf
dec
out
fcmovnbe
je
ljmp
shrb
dec
xor
inc
push
dec
mov
lods
cmp
mov
jno
sub
aad
popa
adc
enter
repnz
cltd
loope
sahf
out
enter
push
inc
jle
mov
cs
jmp
push
insl
clc
lock
and
je
divl
daa
je
lcall
mov
scas
imul
arpl
sbb
stc
stos
mov
daa
aaa
push
xor
push
mov
sbb
incb
mov
clc
scas
xchg
mov
sub
jmp
loopne
sbb
add
lds
or
mov
daa
push
mov
inc
pop
aad
je
jo
inc
leave
gs
mov
jp
pop
or
xor
xchg
rorl
add
xlat
fstps
call
cmpsb
cmpsb
pusha
je
shrl
cmp
cmc
decb
xor
dec
fcoms
fbstp
jle
ret
aad
cmpsb
ret
or
sbb
push
mov
shlb
xor
mov
push
xor
test
outsb
push
test
jp
icebp
pop
sbb
lods
rcr
pop
sbb
jbe
mov
mov
pop
sbbb
lret
sbb
xor
mov
icebp
mov
and
cltd
shrl
fnsave
mov
cmp
jp
cmp
mov
mov
repnz
sub
mov
cmp
or
and
cmp
lret
lret
add
mov
roll
cmp
pop
lret
cmp
sbb
and
fildll
or
icebp
aas
mov
push
push
jnp
lock
sub
xor
pop
sbb
repnz
cmp
mov
scas
int
sbb
repnz
jge
arpl
lret
sbb
push
adc
in
in
rol
gs
in
cwtl
jae
rcrl
cmp
sbb
rolb
adc
les
je
or
and
andb
mov
mov
pop
dec
addr16
push
popa
pop
jb
data16
xor
or
adc
notb
inc
test
test
cmp
rolb
push
fstpt
jns
push
cmp
and
jecxz
mov
cmp
ficompl
int
sbb
push
and
fwait
addr16
sbb
xorl
xor
mov
mov
xchg
jno
xor
inc
std
inc
mov
xlat
jl
idivl
jp
cltd
xor
sti
leave
mov
mov
movsl
mov
jecxz
dec
xchg
lods
mov
dec
aas
xor
cltd
xor
ljmp
daa
mov
ret
jb
mov
xor
out
xor
mov
xchg
sub
jp
jne
jp
xchg
cmp
xlat
pop
andl
xchg
sub
mov
push
adc
mov
jg
and
lods
cwtl
add
jno
push
mov
add
popa
popa
addb
pop
pop
cli
push
testb
imul
and
int3
les
or
xor
std
out
cwtl
mov
and
int
nop
and
cltd
add
aaa
cmpsb
popa
mov
clc
in
pop
inc
fwait
mov
cmpb
cmp
call
scas
push
cltd
mov
out
pop
dec
fs
outsl
ret
outsl
rep
xchg
or
xlat
jecxz
or
push
and
call
test
es
das
cmp
icebp
xchg
inc
fisttpl
cmp
sti
jnp
pop
test
mov
inc
lret
add
es
or
mov
dec
or
push
rcrb
and
jnp
pop
xchg
rcr
mov
mov
sbb
clc
xorb
jl
mov
add
lea
cld
mov
fimuls
std
fisttps
mov
pop
icebp
int3
pop
test
call
push
push
rcll
outsl
aad
push
outsl
out
add
inc
mov
mov
data16
ret
in
test
jns
stos
sub
inc
or
in
loop
and
mov
xchg
jb
or
mov
sbb
lods
push
inc
mov
lea
adc
and
aaa
jle
add
ds
cmp
sub
jmp
dec
movsl
adc
rcl
inc
inc
pop
repz
push
jg
jg
inc
dec
or
fiadds
push
lock
mov
jmp
ja
lds
mov
push
jl
mov
xchg
mov
push
inc
and
ljmp
aam
sub
stos
enter
jl
mov
cmp
jne
sub
inc
jle
cmp
clc
sahf
mov
lret
mov
loope
clc
int
push
repz
mov
xchg
jp
ret
add
in
test
shrl
stc
or
xchg
fnstsw
xchg
in
pop
test
stos
repnz
or
or
lods
popf
push
xlat
adc
mov
stos
push
sahf
sahf
or
pop
sbb
xlat
mov
pop
sub
inc
pop
mov
filds
push
inc
cmp
dec
mov
push
jg
lods
movsb
dec
or
fsubrl
inc
or
or
js
sarl
or
dec
imul
cmpsl
leave
mov
cmp
push
pop
jo
lds
inc
push
fists
lret
push
sub
cwtl
shl
jmp
push
stc
push
dec
xchg
arpl
ljmp
rcrl
jecxz
jge
sbb
mov
ficoms
sbbl
fisubl
iret
push
loope
ljmp
pop
jl
add
adc
inc
ljmp
fmuls
push
jo
lgs
stos
push
jb
pop
inc
gs
or
xchg
mov
imul
movsb
or
sbb
scas
mov
dec
push
subl
dec
dec
outsb
shr
mov
or
aad
enter
insl
sti
mov
and
shll
cmc
push
ds
scas
fidivrl
popa
dec
lea
aaa
loope
push
dec
jl
push
ret
daa
cmpsl
aam
pop
fadd
stos
sbb
push
das
mov
dec
test
pop
cli
fstpt
repnz
mov
adc
cmp
fs
lcall
rclb
mov
pushf
xchg
shl
push
fwait
lcall
push
clc
pop
and
xor
aas
sbb
and
fisttpl
addr16
pop
cli
and
int
adc
pop
sub
pop
fcoml
mov
adc
out
push
out
icebp
dec
rcll
and
add
ret
jp
lods
inc
lds
sahf
add
imul
jl
pop
xchg
mov
dec
xor
inc
mov
jb
popf
inc
dec
fwait
pop
jae
addr16
arpl
lea
orb
test
xor
push
cmp
and
xor
pop
nop
mov
mov
std
test
dec
mov
insb
sbb
mov
jbe
push
add
dec
cs
fmuls
xor
or
outsl
jns
iret
je
push
repnz
mov
fistps
push
dec
lods
push
jecxz
bnd
xchg
mov
jecxz
mov
mov
mov
leave
repz
xchg
xchg
dec
insb
shll
sub
lods
inc
push
mov
cmpb
jge
ret
out
dec
jge
fisttpl
sbb
cld
sub
aas
xchg
dec
lods
popf
jne
stc
imull
out
int
cltd
pop
adc
into
mov
mov
popa
xor
fbld
scas
lock
cli
lcall
test
cmp
loope
lea
inc
daa
cs
scas
jo
mov
xor
scas
xor
imul
aas
add
sub
int3
inc
fsubr
push
iret
pop
fcmovb
sti
movsl
add
pop
xchg
dec
lea
insb
leave
ja
mov
movsb
gs
aaa
inc
push
mov
xchg
mov
and
mov
jle
cmp
pmuludq
inc
sub
pcmpgtw
and
orl
je
gs
test
sub
adc
mov
imul
pop
out
test
fildl
inc
arpl
popf
sub
in
aaa
aas
sub
inc
jnp
test
pop
dec
cwtl
stos
scas
xchg
xchg
out
pusha
adc
in
or
push
xor
hlt
rorb
mov
vpmacsdqh
gs
mov
cmp
sub
data16
data16
add
add
jns
lcall
xchg
pushf
ret
jns
pushf
lods
mov
loope
cmp
mov
int3
mov
inc
mov
outsl
cmp
jl
cmpsl
mov
scas
enter
cli
sbb
repz
sti
dec
add
outsb
and
repz
mov
add
pop
aas
push
shrb
insl
scas
arpl
test
daa
cmovnp
dec
nop
pop
enter
sub
mov
test
inc
push
xorl
shrl
push
test
pop
push
lock
icebp
lods
sub
add
jns
push
push
loopne
cmp
int
call
lock
scas
loop
dec
dec
ja
push
mov
jle
ljmp
pop
xor
test
push
dec
mov
in
fmuls
xchg
loope
out
mov
jle
inc
adc
adcl
aam
sbb
sbb
xor
fbld
rclb
mov
in
mov
cmp
sbb
add
int
adc
lret
cmc
push
xchg
ja
and
loope
test
xchg
and
xchg
push
pop
mov
sub
mov
push
movsl
cmc
or
cmp
mov
cld
and
out
popf
mov
lock
sbb
addl
sbb
mov
loopne
test
sub
dec
int
adc
mov
lods
ret
scas
mov
loop
stos
sub
xchg
jnp
jo
insl
inc
fsubrp
adc
xchg
add
movsb
cpuid
inc
mov
outsl
xchg
add
psrad
dec
fidivl
xchg
inc
outsl
dec
push
xor
fisubrs
xlat
sub
push
je
jb
ficompl
push
cmpl
mov
cmp
inc
notl
cmp
loop
pop
xor
sub
lret
adc
call
popa
mov
jge
sbb
lahf
pop
xor
inc
test
shll
jns
out
xchg
test
sub
sbb
in
inc
push
add
inc
rep
lods
test
cs
clc
es
fisttps
pop
and
fwait
sbb
and
shll
out
cmp
cmpsb
stos
icebp
mov
test
ja
pop
push
aad
mov
aad
push
xchg
insl
jne
mov
mov
test
into
stos
add
inc
adc
sub
dec
xchg
test
or
cmp
xchg
mov
hlt
mov
cmp
fcomps
add
test
or
out
fistpll
adc
and
sbb
cmp
push
scas
adc
mov
inc
jae
clc
popf
inc
stos
sub
inc
addr16
jae
pop
nop
pop
clc
jne
scas
lcall
mov
pop
dec
shrl
cltd
cli
mov
inc
sbb
outsb
sarl
out
fldl
scas
push
in
shll
test
cmpsl
jmp
xor
xchg
mov
mov
fisttps
xor
cmp
mov
cli
movsb
mov
or
out
repnz
inc
daa
stc
mov
lahf
mov
adc
pop
mov
add
jle
cmp
int
sbb
pushf
cmc
dec
in
sbb
das
pushf
xor
push
cmpsb
mov
jecxz
xor
sub
xor
imul
push
decl
xchg
mov
mov
iret
shll
mov
pop
jg
int
out
jp
sub
fidivrs
jns
mov
call
int
leave
pushf
jae
pop
xor
and
frstor
or
cmp
mov
addr16
mov
add
cmp
scas
in
scas
fdivr
fldenv
aad
ret
lret
and
aad
call
mull
adc
and
rclb
imull
js
faddl
push
loop
sub
pop
ret
pop
imul
pop
jbe
pushf
pop
outsb
cmp
sub
fcmovb
jecxz
roll
ljmp
sbb
or
ret
in
idiv
imul
outsb
push
addr16
xor
jne
insb
adc
aad
ret
insl
and
lea
pusha
xchg
enter
mov
addr16
pop
pop
lret
adc
sahf
or
sti
pop
ja
mov
and
jb
hlt
icebp
mov
jns
imul
add
imul
rorb
repz
lods
in
icebp
roll
aad
mov
stc
test
clc
hlt
inc
out
push
pop
inc
and
adc
arpl
cld
hlt
stos
inc
outsb
cmp
or
push
dec
and
fs
imul
std
dec
xchg
arpl
je
rorl
xchg
adc
pop
push
mov
mov
adc
mov
popf
in
testl
out
mov
pop
ffreep
mov
jmp
mov
pop
lret
cmp
cmp
mov
pop
scas
or
and
enter
cmpsl
sub
push
xchg
das
repnz
mov
xchg
mov
fwait
and
ret
cli
sahf
ljmp
mov
xchg
fldl
ja
je
jo
idiv
pusha
loope
push
fwait
scas
scas
add
and
adc
push
sbb
adc
mov
adc
ljmp
inc
mov
sub
inc
inc
mov
xor
fsubs
lods
clc
movsb
mov
xor
pushf
and
and
pop
inc
mov
xor
jecxz
idivb
mov
sbb
lret
jmp
inc
xor
into
dec
jns
inc
cmp
inc
inc
mov
inc
adc
in
clc
pop
and
loop
mov
add
outsb
mov
lods
mov
push
mov
sti
dec
loop
adc
sbb
mov
jge
sti
ret
outsl
fwait
jae
stc
fwait
int
inc
mov
add
xchg
jp
mov
addl
jnp
addl
fsts
insb
and
faddl
xlat
mov
push
lret
sahf
and
arpl
lds
cmp
mov
clc
mov
outsl
mov
and
push
xor
xor
insb
idivb
add
pop
repnz
jns
xchg
lds
sub
rol
in
sbb
jae
jge
inc
movsb
pop
cmp
rclb
repz
mov
addr16
pop
inc
pop
das
ret
push
les
push
fnstsw
jle
pop
jge
lcall
aad
bound
stos
inc
popf
mov
mov
movb
stos
sub
xlat
dec
imul
popa
cmp
lds
add
loope
xchg
addr16
aam
adc
mov
xlat
leave
cwtl
sbb
xchg
ret
pusha
aaa
loop
mov
out
in
cli
push
movsb
xchg
xchg
mov
popa
inc
mov
enter
sub
ja
cltd
jg
lret
pop
push
mov
orl
jp
fstpl
cmc
int3
mov
iret
or
mov
sbb
push
xchg
lret
xlat
scas
les
cli
push
data16
xor
mov
xor
mov
jns
out
pop
mov
movsb
jmp
into
add
adc
dec
addr16
xchg
scas
cmpsb
in
fs
sub
pop
cmpsb
and
xorl
lea
movsl
outsb
mov
or
adc
les
call
outsb
mov
sub
dec
ljmp
fidivrl
test
jp
outsb
xchg
lods
inc
test
sbb
push
and
shll
dec
fsubrl
add
mov
push
mov
divl
cwtl
jp
nop
ja
inc
push
fsubs
add
out
cmp
cmc
test
jmp
and
add
mov
dec
and
mov
pop
xor
pushf
xchg
inc
jmp
cmpsl
lret
es
sub
adc
cmpsb
cmpb
test
movsl
mov
sbb
fldenv
jmp
dec
xchg
setg
dec
enter
jp
mov
call
sbb
out
das
and
dec
xchg
add
adc
lods
push
sub
fwait
fwait
ja
out
fcomi
in
and
mov
and
in
and
xor
inc
outsl
pop
and
xchg
sub
test
scas
test
das
xor
fisttpll
jo
xor
and
outsb
shll
xchg
sbb
sub
sbb
movsl
mov
inc
ss
mov
or
das
jmp
stos
sahf
inc
or
add
xor
call
mov
mov
sbb
shll
xor
jae
jmp
mov
push
test
imul
push
pop
lock
cmp
lret
rcrl
das
xor
mov
inc
inc
sbb
sub
mov
xchg
push
jp
inc
lock
ret
sbb
out
lahf
jl
or
or
fwait
aas
outsl
gs
jge
add
pop
enter
xlat
in
popf
loopne
mov
mov
xchg
sbb
add
lcall
push
sbb
ja
cmpsl
aam
xor
push
xchg
icebp
sti
bound
mov
push
ds
repz
leave
cmp
sbb
sbb
cmpb
and
aam
mov
xor
stos
push
rdpmc
or
pop
and
fmul
add
sti
or
fcomps
call
inc
shl
pop
movaps
mov
int
pop
xchg
movsl
in
pop
gs
push
es
insl
adc
out
pop
add
roll
cmp
fsubl
shll
lea
aaa
xlat
jne
pop
mov
clc
adcb
fdivr
dec
jb
adc
subl
int3
mov
mov
cld
imul
clc
push
sbb
push
rorb
mov
ss
jb
mov
lock
cmpsb
mov
sbb
cmpsl
ja,pn
js
push
fcompl
rolb
out
and
into
mov
aam
ja
in
mov
inc
int
addr16
jl
out
in
insl
xor
shlb
out
jl
into
sbb
or
push
sub
jne
imul
push
lock
aam
and
ljmp
pop
call
and
shl
ljmp
mov
pop
jp
cli
push
xchg
mov
mov
sbb
in
and
cltd
imul
push
sbb
outsb
pop
push
sub
add
roll
inc
in
dec
cmp
cmp
outsl
popa
out
xchg
daa
or
test
movsb
xchg
lods
pop
sti
das
mov
pop
cmp
or
inc
imul
push
cmp
int
nop
push
jl
scas
or
mov
movsb
fisttpl
cmp
sub
sti
imul
fsubr
lods
xorl
inc
pop
icebp
fistpll
aad
sbb
push
cwtl
cmp
call
loopne
cltd
jle
cmpsl
jg
dec
or
jnp
jmp
stos
cmc
inc
ret
dec
in
test
sub
inc
mov
dec
rclb
stc
sar
push
icebp
pop
jnp
icebp
adc
jns
insb
mov
mov
fwait
add
jo
and
mov
outsb
mov
leave
inc
mov
dec
inc
xchg
mov
lock
mov
mov
and
dec
sarl
js
cli
mov
or
int3
push
test
lret
dec
sarl
ljmp
aas
pop
cs
aad
in
and
push
rorb
sub
test
pop
dec
adc
mov
pop
inc
test
push
in
mov
add
and
cli
cli
mov
push
mov
pop
test
lock
push
mov
xor
pop
mov
outsb
mov
mov
adc
in
adc
push
insb
mov
stc
adc
xchg
addl
push
daa
pop
adc
inc
stos
imul
repz
push
sub
mov
icebp
loop
fsubrs
divb
stos
iret
adc
cld
aas
fwait
aaa
dec
lds
pop
cmp
fs
add
add
mov
cwtl
fs
sbb
add
or
add
xchg
mov
jecxz
xchg
daa
movsb
les
dec
gs
xor
andl
lods
push
fiadds
push
mov
sub
dec
adc
scas
xchg
mov
loope
popa
in
imul
adcl
jmp
mov
adc
mov
push
mov
lahf
in
cltd
loope
js
test
push
push
dec
dec
mov
pop
jmp
hlt
cmp
insb
mov
fldcw
cmp
mov
and
int3
jnp
mul
cli
cwtl
mov
adc
mov
adc
data16
lea
outsl
dec
mov
rorl
mov
sbb
xchg
popa
pop
sub
lret
jmp
sbb
js
jmp
dec
dec
mov
insb
dec
or
mov
cmpsb
xchg
xchg
sbbl
cwtl
xchg
jae
repnz
loopne
fildl
fwait
arpl
addb
pop
data16
call
push
pop
pop
out
inc
sahf
lcall
pushf
cwtl
inc
sarb
push
test
sar
sarb
jp
and
sbb
mov
or
and
push
scas
bound
xor
sbb
inc
pop
push
push
xor
fwait
sub
mov
fmuls
sbb
fsubrs
insb
push
jo
orb
pop
cmp
lods
adc
cmp
arpl
cs
pop
fwait
adc
cmpsl
jo
sub
jle
mov
push
pop
xchg
or
fbld
push
shll
pop
push
cmp
and
lret
push
or
mov
inc
fdivs
mov
in
stc
call
xchg
push
daa
inc
xchg
sub
cmpsb
jmp
jno
icebp
add
repnz
sub
std
pop
int3
jb
push
loope
enter
sbb
sbb
pusha
xchg
scas
hlt
push
add
push
mov
loope
arpl
push
sbb
dec
sbb
shll
movhps
add
mov
je
mov
imul
rcrl
je
mov
icebp
jne
sbb
sbb
lds
push
int
pusha
ds
xchg
xchg
mov
xchg
pop
mov
add
sub
cmc
rcll
dec
aad
cs
aas
sbb
push
mov
pop
mov
cmp
dec
imul
xchg
and
repnz
loop
sbb
jne
fisubrl
lret
xchg
ja
insb
or
push
adc
ret
cwtl
pop
xchg
mov
push
or
cltd
push
movntq
jg
js
xchg
sub
in
ja
mov
addb
add
aaa
sbb
or
clc
cld
push
andl
movsb
xchg
jmp
in
aaa
sahf
inc
xor
test
push
xlat
add
call
adc
es
inc
mov
repnz
sub
push
in
fcoml
mov
mov
xor
test
int3
out
mov
hlt
clc
push
jns
push
pop
cmp
addr16
enter
test
sbb
dec
fmull
jge
add
sub
push
fld
pop
lds
fdivl
fadd
pop
fcompl
into
adc
or
dec
pop
imul
std
pop
std
mov
int3
in
cmpsl
mov
pop
inc
cli
adc
pop
or
jmp
fisttpl
push
add
ret
aad
rcl
imul
mov
cmp
dec
ja
shlb
test
test
fcoml
and
or
cltd
push
out
adc
stos
pop
gs
and
jle
xor
dec
in
movsl
jg
mov
mov
adc
negb
jbe
xchg
xchg
inc
fistpl
dec
stos
or
dec
ret
jmp
sub
stos
jns
dec
jp
ror
enter
outsl
popf
xchg
in
out
stos
loop
lds
out
out
sbb
add
push
dec
mov
out
xor
push
sahf
inc
inc
mov
lods
cwtl
mov
popa
daa
xchg
lret
jmp
push
fsubrp
push
add
adc
and
add
cwtl
clc
mov
xor
pop
into
push
pushl
insb
push
push
pop
mov
out
nop
jl
cmp
cmp
jbe
dec
sub
xchg
ljmp
in
inc
xchg
les
dec
fwait
sarb
inc
rcrb
lret
int3
xchg
push
pop
dec
push
mov
mov
mov
test
fcoml
lcall
jbe
test
imul
ja
test
sti
nop
xchg
cmpsl
adc
adc
pop
scas
xchg
adc
or
adc
std
mov
lcall
addb
or
mov
push
call
lds
mov
cmpsb
in
xchg
popf
rcrb
rclb
test
and
xchg
imul
inc
frstor
sub
push
dec
mov
jmp
inc
mov
lret
pop
mov
dec
push
sti
jp
ljmp
cltd
arpl
bound
dec
pop
pop
mov
mov
push
arpl
fistpl
xor
jp
push
adc
test
fnstcw
pop
repnz
and
and
add
lcall
mov
or
push
xor
iret
mov
mov
push
jnp
mov
xchg
dec
mov
stos
mul
scas
out
out
jbe
scas
mov
dec
push
test
cmp
repnz
xlat
out
adc
jb
sbb
and
sbb
and
loope
repz
mov
nop
icebp
inc
int3
dec
arpl
idivl
push
xchg
push
stos
push
pop
inc
xchg
pushf
mov
lock
popf
divl
out
xchg
js
mov
cmp
repnz
xor
cmp
adcl
in
sbb
fucom
dec
xchg
int3
cs
xor
xchg
call
jb
sti
inc
sub
ja
dec
ret
cld
stc
movb
mov
sbb
jo
jecxz
mov
ret
mov
push
adc
andl
push
lret
xor
mov
ret
xchg
mov
rorl
jb
jne
out
inc
aad
jle
scas
testl
bound
or
inc
lea
loopne
mov
lahf
daa
sti
loopne
aas
sbb
pusha
push
dec
fisttpl
jge
aad
ret
lcall
scas
xchg
xor
push
inc
pop
mov
push
fidivl
xchg
inc
adc
dec
push
ja
in
cmpb
add
mov
jge
repz
loop
int3
jecxz
out
in
sbb
pop
add
cmp
xchg
addl
lods
sub
into
mov
pop
lcall
push
fiaddl
mov
aam
leave
aad
push
mov
int3
inc
mov
out
jne
xorl
cmp
clc
push
aas
jmp
out
mov
jne
inc
or
jmp
clc
mov
sub
dec
je
mov
das
stos
sbb
xor
aam
push
cmpsl
mov
sti
cmp
out
pusha
xchg
ja
scas
ret
adc
aam
pop
mov
jge
fbld
hlt
dec
dec
mov
cmp
inc
ja
add
inc
add
pop
popf
or
inc
add
sahf
mov
push
cmpsl
pop
add
in
test
dec
lds
jp
rcr
negl
pusha
add
loopne
lahf
mov
sbbb
test
test
das
xchg
iret
fists
xchg
dec
test
jg
ret
inc
sbbl
inc
in
inc
out
and
xor
lock
popa
push
inc
cmpsb
xor
cmp
fs
cmpsl
cmp
les
pusha
mov
scas
push
push
fadds
push
pxor
push
and
dec
loop
ljmp
sahf
mov
jmp
fisubs
xchg
int
aaa
xchg
xchg
test
roll
jbe,pn
loope
jbe
sbb
dec
or
pop
lahf
jae
popf
int3
add
pop
inc
enter
adc
fistpll
lds
rsqrtps
pop
dec
fidivrs
xchg
or
jno
or
test
or
out
dec
xchg
outsb
mov
dec
mov
mov
cmp
xor
push
imul
pop
jb
and
jae
jg
xchg
jne
mov
push
lahf
std
dec
mov
fdivrs
sub
mov
and
and
inc
nop
rclb
scas
lods
pushf
inc
popa
dec
test
jl
aam
adc
lods
fbld
out
out
and
push
mov
loopne
clc
fcomps
insl
xorb
sub
sarl
xor
loopne
mov
popf
push
or
js
cmpsl
popf
adc
jmp
inc
dec
push
lret
mov
pop
pushf
sub
inc
insl
mov
sbb
push
addr16
jns
inc
push
pop
shll
and
in
lods
inc
add
pop
xor
mov
lret
adc
test
shl
popa
adc
push
fcmove
or
mov
pop
add
adc
mov
into
pushf
inc
jecxz
rclb
xor
sub
mov
testb
pushf
xchg
jecxz
inc
jge
enter
xchg
arpl
dec
push
icebp
scas
xchg
cmc
fnsave
lcall
ds
cmp
cmp
loop
xchg
and
flds
push
jmp
xlat
jno
jbe
xchg
lods
hlt
jge
fistl
sbb
xor
call
jecxz
loope
mov
hlt
xchg
adcl
sub
ret
sub
inc
inc
inc
outsb
shl
xchg
jne
aaa
push
push
jg
jecxz
mov
jnp
nopl
lcall
in
insl
push
jae
mov
ret
xlat
mov
mov
dec
jge
outsb
mov
pop
dec
push
jae
das
dec
jnp
jmp
dec
sbb
push
xchg
std
testb
xchg
xchg
pop
and
adc
das
push
push
repnz
test
scas
xchg
aam
or
scas
enter
lea
fldcw
fstpt
sbb
repz
fldenv
scas
xor
imul
sub
jl
fistl
f2xm1
insb
push
fsubrs
inc
mov
cmp
push
jl
jg
into
push
and
fisttpll
mov
adc
xchg
inc
ss
notl
hlt
adc
dec
jnp
mov
daa
repnz
repz
lds
mov
lret
mov
sbb
jns
lret
xchg
or
mov
push
jb
push
xlat
pop
frstor
jae
xchg
jo
jmp
push
jp
lea
jb
add
rcrl
outsl
xor
nop
and
sahf
ss
leave
push
push
adc
dec
sub
xor
loop
xchg
xor
pop
lds
sahf
inc
out
pusha
pop
push
add
mov
fstpl
xchg
std
bound
or
cmpsb
inc
inc
sbb
pushl
push
xor
adc
repnz
xchg
dec
je
mov
testl
inc
jl
fldcw
sbb
inc
or
mov
movsl
ret
lahf
fs
out
rcl
and
lods
stos
dec
jle
pushf
outsb
push
sbbb
mov
fadds
aad
cli
scas
test
push
test
sub
cmpl
rcrl
lret
jno
push
daa
pushf
lods
mov
inc
sbb
ret
mov
dec
arpl
icebp
mulb
push
pop
icebp
test
or
ljmp
in
cmpb
neg
or
fnstsw
rorb
pop
push
inc
jge
int
mov
lods
sti
in
pop
imul
jecxz
xchg
jle
out
jo
mov
ret
xchg
aam
pop
dec
xor
int
pop
xchg
xor
je
in
or
xor
push
icebp
jl
fcoms
in
xor
scas
sbb
popa
int3
mov
add
inc
xor
jmp
das
mov
nop
sub
pop
xchg
fistpll
lea
jae
in
lods
popa
jle
mov
out
movsl
lahf
cwtl
and
into
xchg
and
xor
cli
hlt
sub
icebp
pop
adc
mov
mov
iret
lahf
and
js
pop
mov
lods
test
aaa
stos
add
rorb
cwtl
jge
repnz
fs
divb
push
shll
adc
sbb
fwait
or
loope
and
lods
out
fmull
xchg
dec
xchg
and
cli
add
js
pop
loopne
jge
in
sahf
enter
dec
in
push
das
jo
es
pop
aam
xlat
test
push
fiadds
ljmp
scas
jbe
enter
cwtl
cmc
fcoms
cmp
cmp
out
mov
add
cmp
xchg
ss
push
jp
lods
out
mov
adc
cmp
imul
add
pop
lret
lods
xlat
and
add
fwait
insl
not
pop
sub
out
sbb
or
xor
fucomi
stc
xchg
rcrb
scas
out
loop
hlt
cwtl
cmc
jl
test
add
aaa
lock
sub
stc
mov
sub
push
inc
jp
movl
mov
movsb
fbld
inc
jo
push
pop
ja
lahf
xor
cmp
xor
js
bound
loope
fsubl
cmp
testb
nop
pop
insl
mov
jmp
mov
stos
imul
popf
loopne
lcall
xchg
popa
dec
push
mov
cltd
dec
xor
fcompl
adcb
std
xchg
sbb
ret
iret
mov
sub
push
repnz
filds
sub
mov
xor
sbb
in
mov
cwtl
pop
sahf
push
mov
sub
mov
cmpsl
mov
lret
cs
notl
xor
mov
fistpll
stc
bound
cmpsb
xor
cmp
aam
in
cmpb
xchg
adc
lods
sbb
mov
pop
add
adc
mov
inc
mov
lds
mov
ds
or
mov
inc
fidivrl
rcll
insl
sbb
sti
pop
lods
and
mov
sub
sti
adc
pop
adc
in
inc
push
std
loopne
enter
dec
lea
pop
inc
dec
and
dec
pop
std
cli
sarl
and
sbb
mulb
mov
mov
sti
sub
or
pop
sub
cwtl
pop
mov
jno
push
jb
das
icebp
dec
movsl
pop
nop
stos
lahf
mov
push
mov
jl
sbb
push
mov
or
sbb
mov
fwait
sub
adc
push
or
insb
adc
mov
and
jbe
js
lds
std
sbb
adc
jmp
sahf
aam
inc
lret
out
push
leave
out
pop
subl
js
fimuls
fs
cwtl
ja
pop
out
pop
inc
sbb
lock
stos
inc
clc
sbb
add
push
faddl
movsb
pop
imulb
adc
push
pop
shr
adc
jl
lea
mov
imul
xchg
stos
xchg
or
or
xchg
lock
ficoms
in
incb
gs
les
or
sbb
lods
dec
mov
push
jl
jb
and
mov
ss
inc
leave
insb
inc
push
js
std
lcall
movsb
shrb
dec
adc
pusha
das
leave
jmp
shll
sahf
dec
inc
gs
loopne
add
scas
pusha
xor
pop
lret
xchg
add
sub
xchg
mov
mov
sub
ljmp
lret
mov
cmp
loope
sbb
je
xchg
movsl
into
push
dec
mov
xchg
outsb
ret
push
into
add
pusha
std
imul
gs
fs
jmp
int
xchg
sbb
or
js
and
call
in
dec
push
push
or
sub
stc
test
dec
cmpsl
ja
div
repz
mov
mov
and
or
pushf
or
push
je
ja
lcall
mov
add
lcall
movsl
js
stos
rol
mov
pop
push
jecxz
inc
cmpsb
call
or
in
int
iret
cmp
sti
pop
mov
insl
pusha
mov
pop
loopne
push
cltd
pop
inc
pop
push
arpl
add
repnz
or
cli
outsb
icebp
fstl
cwtl
test
mov
lret
movsb
imul
sti
push
mov
dec
insl
lea
out
ja
arpl
xchg
and
jle
push
popa
inc
lock
mov
mov
xchg
sub
outsb
cmp
popf
insl
outsl
js
push
mov
repnz
call
mov
mov
fstps
jg
mov
cmpsb
fwait
and
push
fcmovbe
jl
int
rcrb
andb
jno
test
jo
sbb
aam
loope
push
ljmp
mov
push
or
js
or
loopne
add
call
bnd
and
ror
xor
mov
dec
lahf
inc
push
ficomps
cmp
fistpll
cmp
es
add
fsubl
cld
les
xchg
cwtl
xor
outsb
daa
xchg
sub
inc
aad
push
and
pop
cmpsl
mov
subl
mov
and
popa
push
inc
js
mov
mov
nop
loope
fidivs
dec
push
lock
dec
cltd
data16
jle
sbb
push
add
fisttpl
push
out
and
cmp
rcll
pop
loope
inc
cmc
mov
movsl
es
imul
test
or
pushw
imul
aam
xchg
adc
cltd
inc
int3
lea
xor
shrl
cmc
push
repnz
xchg
mov
inc
push
mov
mov
out
and
cs
mov
aad
pushw
dec
push
inc
xor
sbb
scas
sarl
test
lods
cmp
pop
orb
mov
sbb
inc
mov
addb
icebp
pop
ds
mov
and
push
mov
iret
cwtl
and
pop
jo
xor
mov
push
mov
cs
fstpt
or
and
stc
or
mov
jecxz
and
leave
ljmp
inc
pop
pop
xor
iret
mov
shrb
orl
push
add
push
add
cmpsl
in
in
cmp
dec
in
sub
mov
clc
mov
mov
cmp
lods
je
dec
scas
imul
push
icebp
ret
mov
cli
in
or
pop
fdivl
mov
pushf
push
cs
data16
lods
fbld
cwtl
gs
aas
sahf
mov
xor
and
xchg
nop
hlt
ss
inc
mov
add
test
fwait
and
insb
cwtl
clc
pmaddwd
and
dec
pop
mov
loop
dec
add
jbe
lods
push
sti
push
popl
mov
stos
xchg
pop
mov
adc
cwtl
mov
push
xchg
incb
jg
mov
call
aam
add
fisubrs
xor
iret
int
cmc
lahf
bound
jo
incb
dec
je
and
mov
xlat
xchg
mov
sti
sbb
pop
stos
xchg
mov
mov
aas
mov
shrl
fildl
and
jecxz
add
cltd
push
mov
aad
pop
bound
das
in
xor
cmc
adcb
cmp
adc
out
mov
and
fstpt
in
cmpsb
rdtsc
push
push
jb
inc
ficompl
cmp
gs
add
cmpsl
xchg
mov
xchg
dec
in
push
cmpsb
test
inc
rcrb
insb
aas
mov
push
and
push
inc
lret
mov
xchg
pop
mov
pop
xchg
sbb
cmpsl
loope
jp
push
pusha
stos
jp
aad
jbe
movsb
or
mov
aaa
cmpsb
and
push
adc
pop
imul
nop
fs
into
loope
mov
out
sti
adc
scas
fcmovbe
das
scas
mov
or
mov
shlb
sarb
es
bound
aaa
insl
pop
gs
mov
cs
sbb
jl
sahf
ret
mov
sub
lcall
mov
lret
dec
adc
pop
sub
pop
push
les
pop
in
aad
and
push
mov
jl
shl
xchg
or
jg
repz
dec
mov
shrb
mov
xor
jb
jecxz
fcomi
fldcw
sub
cs
adc
hlt
sar
cmp
mov
sub
and
or
subb
inc
outsl
test
inc
leave
inc
pop
pop
adc
add
stc
ds
sub
lods
inc
push
dec
repz
dec
xor
lods
lock
repnz
and
push
jl
test
nop
scas
icebp
push
jb
mov
ficoms
aam
mov
cmc
cltd
into
xorl
je
pop
ret
mov
or
mov
hlt
pop
repz
inc
ljmp
lahf
cltd
mov
jg
repnz
xor
push
dec
or
mov
push
cmp
ret
je
sbb
hlt
dec
and
es
or
jnp
icebp
cmp
sbb
xchg
outsb
dec
ss
int
push
sbb
lret
sub
pop
pop
add
cli
in
xchg
xchg
outsl
adc
or
inc
pop
cmp
ret
cld
loope
lds
les
lea
hlt
lret
das
lock
mov
daa
push
xchg
lahf
push
rorw
mov
test
or
sbbb
hlt
cmpsb
icebp
xor
inc
inc
bound
in
fsubl
scas
hlt
aas
xchg
lds
jg
outsb
pop
aad
loope
test
xchg
xor
push
pop
aam
ds
push
fcoml
jnp
test
rorb
mov
lret
cmc
int
inc
lods
adc
or
xor
in
fucomip
or
in
sbb
iret
push
mov
jmp
lret
dec
inc
dec
or
cmp
sbb
ljmp
push
lods
lcall
cmp
cmp
lods
sbb
pushf
jecxz
fcompl
jne
mov
push
push
and
iret
rorl
mov
xor
orb
cmp
adc
fimuls
loop
call
dec
mov
fldt
ljmp
pop
out
inc
cmpb
ret
in
inc
xor
aaa
jo
and
push
jmp
pop
cmp
push
lods
outsl
mov
mov
cmp
sub
imul
inc
dec
cmp
xor
or
pop
arpl
int3
mov
or
pop
xlat
sahf
rcrb
push
or
pop
xor
push
pushf
and
mov
and
push
xchg
sub
mov
das
outsl
mov
fcoml
xchg
lahf
inc
add
jmp
repnz
gs
mov
dec
xchg
outsl
adc
pop
repz
outsl
inc
test
addr16
ss
in
dec
pop
add
mov
sahf
jmp
ret
xchg
jmp
cmp
fsub
insl
orb
dec
mov
dec
ret
bnd
xchg
mov
dec
movlps
lock
lods
ror
iret
addr16
mov
mov
sbb
or
or
out
addl
sbb
push
fmul
adc
or
outsb
add
pushf
mov
xor
shll
cltd
jae
daa
std
dec
cmp
sar
data16
mov
xchg
xchg
push
mov
and
sarl
push
out
cmp
dec
jb
stc
jns
repnz
pusha
sub
stos
cmp
xchg
lds
sbb
adc
mov
cmp
sbbl
gs
pop
shrb
cmp
mov
sub
sbb
xchg
push
and
mov
mov
popaw
aaa
in
adc
lods
pop
popl
jo
mov
cmp
das
xchg
icebp
lods
lahf
jbe
lds
bound
ljmp
insb
movsl
xchg
les
int
xchg
and
mov
push
ret
or
divl
adc
int3
out
and
lahf
std
mov
adc
cmp
xor
rcr
mov
mov
pop
xchg
jmp
xchg
out
mov
sbb
shr
les
popf
mov
sub
shrb
sub
out
daa
loope
push
mov
dec
das
pop
push
and
stos
cltd
scas
push
xchg
add
cwtl
add
push
insb
push
ror
cvtdq2ps
es
add
mov
sbb
leave
pop
xchg
jo
or
clc
sti
mov
fidivrl
cltd
loope
pop
movq
rolb
imul
dec
ljmp
data16
mov
imul
mov
aam
out
push
xor
jb
lods
ret
enter
ds
shrb
inc
pop
div
arpl
mov
stos
je
in
fnsave
xchg
rcrb
push
rolb
dec
lods
fwait
adc
fidivs
sbb
scas
test
cmpsl
mov
aad
xor
add
roll
lahf
in
out
movl
sahf
pop
clc
push
push
sbb
and
or
hlt
in
add
and
or
pushf
daa
jecxz
fsubrp
push
popa
adc
sub
std
stc
add
mov
add
jl
mov
jnp
dec
outsl
fs
es
inc
sbb
addr16
push
je
stc
xchg
mov
and
jl
pusha
sub
pop
les
scas
fbstp
xor
in
lahf
sbb
ja
jno
adc
cmp
ret
push
xchg
orl
mov
idivl
mov
and
pop
dec
mov
sbb
dec
outsl
cmp
aas
hlt
inc
mov
push
mov
movsb
les
rcrb
rsqrtps
inc
cmp
test
mov
ds
cmp
sbb
mulb
cmp
sbb
push
outsb
mull
xchg
into
push
cmovo
add
dec
inc
xchg
xchg
mov
jno
mov
cltd
repz
imul
mov
lsl
push
jp
ss
add
in
loop
pop
sbb
add
int
test
add
jmp
into
push
hlt
push
xor
lret
xchg
fistl
jmp
push
cmp
sbb
cmpsb
mov
inc
bound
mov
jp
pop
outsb
mov
dec
ds
stos
lcall
push
mov
les
push
cli
out
icebp
and
in
mov
loopne
mov
mov
mov
inc
aas
mov
jno
xchg
mov
mov
or
shrb
xchg
jo
jg
push
add
push
or
or
xor
add
hlt
mov
lods
sub
push
and
cs
xchg
pop
sti
pop
push
pushf
cld
dec
fnsave
dec
push
lods
test
ret
fildll
inc
out
mov
mov
adc
mov
mov
jae
adc
jmp
push
or
ret
inc
js
cmp
pop
clc
std
mov
mov
fcmovne
scas
or
aaa
iret
into
add
push
out
or
jl
dec
jmp
pop
xchg
mov
repz
mov
divl
loopne
push
dec
pop
ret
fs
dec
shll
outsb
mov
fs
fwait
lcall
and
cmp
jnp
fmuls
inc
push
faddl
std
out
test
cmp
sub
jnp
rol
mov
leave
shlb
xorl
ds
push
or
jnp
add
pop
mov
mov
jbe
insl
test
leave
inc
push
cmc
int
xchg
xor
lea
into
hlt
sbb
shl
mov
pop
enter
mov
mov
cmp
shr
ljmp
scas
sbbb
mov
inc
sbb
orb
je
jecxz
gs
cli
jp
inc
mov
sub
hlt
sub
and
rol
xchg
dec
ljmp
add
movsl
out
sbb
lds
stos
ja
adc
fs
xchg
lcall
rcr
mov
es
push
adc
pop
mov
add
pusha
lds
cmp
ss
shll
jae
and
incb
cwtl
jae
and
mov
stos
sahf
int3
shrl
push
inc
mov
cmp
les
call
jecxz
lea
sbb
cmpsl
outsb
push
dec
ss
in
test
movsb
mov
sbb
popf
fs
in
testb
mov
stos
add
inc
push
push
das
xchg
pcmpgtd
xchg
push
popf
rorl
and
mov
cs
cmp
pop
aaa
orl
outsl
and
push
sbbb
fcmovb
jmp
imul
push
pop
dec
jp
in
out
push
repz
mov
xcrypt-cfb
cmpsl
pusha
andl
gs
cmc
sub
jae
hlt
mov
sub
test
cmp
add
mov
and
xchg
ficompl
push
pop
jne
sbb
leave
xchg
add
out
xchg
add
cmpb
and
ljmp
in
dec
cltd
fcmovnb
ja
jnp
inc
mov
or
adc
xchg
pop
cmp
cmc
mov
test
dec
cmpb
shrb
imul
rorl
cmp
inc
cmp
fucomi
mov
es
cmp
lcall
or
jo
xor
jno
iret
dec
add
pop
inc
neg
push
call
inc
subb
divl
mov
into
aaa
xchg
xchg
adc
jl
xor
pop
repnz
pop
fs
jl
rcrl
sub
mov
lock
notb
fst
jle
popa
mov
xchg
sbb
test
sbb
bound
test
and
sbbb
pop
je
les
pop
mov
mov
xor
xor
shrl
and
ja
pop
sub
mov
mov
nop
pop
imul
jg
or
lods
jecxz
dec
icebp
sbb
xchg
mov
dec
mov
pop
mov
out
push
and
clc
jmp
das
cwtl
jae
int3
cmp
pop
dec
or
xor
je
or
inc
call
jl
cmp
mov
xlat
stos
mov
jnp
and
add
ss
pop
cs
inc
add
xor
orl
shrb
and
adc
into
push
dec
shl
enter
sbb
sub
rdtsc
jge
sub
aam
pop
xor
xlat
les
and
xchg
lock
cmp
or
out
clc
dec
movsb
ja
push
mov
stos
pop
xor
fnstenv
movsb
jo
xchg
push
push
movsl
ret
dec
test
fidivrs
add
dec
pushaw
push
adc
aad
ss
mov
jmp
inc
mov
xchg
hlt
lock
outsl
cli
jne
cmp
dec
mov
push
mov
mov
shlb
add
mov
xchg
ret
test
dec
lea
pop
outsl
aad
lock
sub
mov
rcll
shr
dec
in
out
daa
pushf
in
add
cmp
xchg
stos
or
push
out
out
sub
xchg
dec
mov
hlt
sahf
pop
cld
pushf
loope
pop
mov
insl
adc
xchg
roll
clc
mov
inc
cmp
out
jb
mov
fldcw
cmp
mov
inc
cmp
loope
cmpsl
js
sbb
push
or
sub
xchg
sub
out
push
cmp
cmpsl
mov
jp
filds
fcmove
push
sti
sub
scas
jnp
pop
sub
mov
outsl
jg
pop
scas
sub
lock
adc
push
cmp
or
out
pop
out
lods
into
and
aaa
jecxz
movsl
adcb
sub
inc
and
pop
ja
hlt
icebp
clc
pop
pop
lret
scas
xchg
int
inc
push
adc
jge
inc
movsb
or
fdivrl
hlt
jecxz
xchg
mov
cwtl
xchg
pushf
dec
push
jno
sahf
dec
shl
stos
xchg
fsubr
sbb
xchg
movsl
outsl
and
ja
mov
push
repnz
dec
push
sbb
jo
loopne
push
ljmp
insb
rorb
rcrb
sarl
inc
movsl
dec
add
push
icebp
clc
sbbl
sub
mov
push
push
or
loopne
icebp
jns
sbb
mov
push
in
mov
je
aad
sahf
jae
push
push
in
inc
sti
in
fnstsw
ret
sub
leave
pop
or
inc
mov
xor
jbe
and
xchg
cmp
insb
xor
cli
jecxz
loop
gs
xchg
or
mov
xchg
bound
scas
sti
mov
sbb
push
pop
cmp
je
xor
ret
mov
push
jp
mov
cs
push
add
out
xor
jno
push
mov
and
div
movsl
and
mov
dec
mov
sar
in
div
test
cltd
in
in
cmc
sbb
in
or
adc
cmp
xlat
or
add
cs
scas
and
xlat
pop
inc
fsubl
pop
out
sub
lea
mov
xchg
fisttps
rolb
add
sti
scas
pop
stos
xchg
mov
rcrl
cs
fiadds
cs
mov
fmul
cld
icebp
jl
mov
and
repnz
in
jb
mov
and
push
and
pop
into
mov
cmpsb
jmp
imul
or
xor
xor
mov
sarb
pop
jmp
stc
mov
mov
cld
xchg
aaa
movsl
xchg
scas
inc
cs
mov
ret
in
push
sti
inc
mov
repnz
out
dec
fisttpll
stos
ljmp
fnstcw
icebp
pop
andl
mov
cld
xor
cwtl
cld
insb
mov
addr16
pusha
sub
dec
cmovg
fs
push
adc
jecxz
sbb
aaa
rclb
adc
movsl
sbb
lcall
mov
mov
mov
enter
stos
test
xor
jo
sbb
jge
add
adc
in
sbb
or
xchg
lds
icebp
out
mov
dec
cli
push
push
jmp
pop
jle
cmp
fisttpll
cmpsb
and
jmp
mov
imul
push
jmp
pop
mov
inc
xor
cli
out
mov
adc
xor
js
out
jg
sbb
sbb
mov
je
and
lds
push
in
insb
inc
add
out
outsl
xor
iret
add
adcl
cwtl
inc
push
pop
push
cwtl
jbe
arpl
jo
jecxz
xor
les
ss
outsb
xor
xchg
jmp
mov
rcrl
add
xchg
pop
xchg
pop
mov
push
out
aam
and
inc
sub
jmp
adc
aad
adc
adc
push
mov
popa
lods
jg,pt
lret
mov
mov
in
lock
push
push
decb
aam
out
mov
nop
fld1
dec
sub
inc
ficomps
jae,pn
addr16
adc
int3
cmpsl
lret
dec
rclb
sub
imul
lea
fidivrs
test
js
cmp
lds
mov
mov
push
push
shr
rolb
int3
mov
popa
inc
call
pop
pminsw
xor
cmp
ds
imul
cld
lahf
or
dec
push
fbstp
cmp
dec
psrlq
loop
pop
xchg
sti
and
and
lret
cltd
cwtl
jecxz
repz
pop
loopne
aam
jns
mov
pushl
mov
call
xor
inc
add
jo
lea
addb
pop
inc
inc
je
cld
push
sub
push
std
inc
mov
mov
push
or
insl
jge
pop
and
adc
inc
subl
jl
lods
or
imul
hlt
and
imul
int3
pop
cmpsl
lret
int
out
cmp
adc
dec
lods
jno
pop
cmp
mov
subb
sub
push
fisttpll
fnstenv
sti
cmp
and
aas
jmp
mov
xchg
xchg
lods
cmp
cmp
or
sbb
jmp
add
lock
loop
leave
add
sbb
mov
psubusb
repnz
mov
iret
mov
jge
pop
clc
shrb
jbe
xchg
cmp
fsts
push
arpl
pop
mov
adcb
dec
andb
and
pop
les
fs
mov
popa
and
popf
dec
xchg
adc
aad
outsb
jmp
jno
outsl
call
stc
icebp
sub
xor
ljmp
clc
xor
xor
adc
mov
mov
in
sub
pop
mov
or
mov
push
sbbl
push
pop
ljmp
shrl
push
pop
push
lahf
div
adc
bound
adc
js
nop
jo
jl
popf
aam
das
inc
in
push
xor
pop
fadds
icebp
aaa
sbb
enter
push
mov
addr16
inc
jns
jle,pn
pop
mov
fsubrs
rorb
mov
sub
mov
mov
inc
cmpsb
cmp
mov
sti
in
into
sarl
dec
leave
out
frstor
sub
mov
imul
loope
xor
cmpsl
xor
push
xor
xchg
add
nop
pop
xchg
mov
enter
dec
or
imul
sbb
inc
adc
mov
lret
add
pop
js
test
lahf
movsl
mov
xor
ljmp
in
popf
adc
test
fldt
arpl
arpl
pop
xor
xchg
in
adc
xchg
or
icebp
sbb
mov
aam
add
cmc
xchg
add
mov
popf
jb
and
pop
or
insl
fcom
subl
inc
out
lods
sahf
ljmp
mov
sbb
or
jp
repnz
add
test
mov
outsl
jmp
or
and
sub
repz
and
add
ret
xor
in
mov
xchg
leave
cld
dec
ja
xchg
jl
insb
shl
in
fwait
add
add
or
sub
xchg
or
cmp
rorb
inc
ficompl
mov
leave
ret
lcall
pop
xchg
push
xor
push
test
push
adc
fcmovnu
dec
or
add
ds
add
dec
pop
mov
rcr
rcr
mov
test
xchg
movsb
negl
outsl
into
mov
inc
inc
push
cli
pop
mov
pusha
js
out
push
fcmovne
push
push
xchg
add
fdiv
cli
push
dec
jp
mov
insl
mov
or
mull
int
xchg
xorl
das
cmp
or
in
dec
mov
mov
push
pop
scas
call
pop
je
push
test
inc
sub
aam
inc
arpl
leave
push
push
xchg
inc
pusha
adc
push
shrl
push
lret
into
xor
arpl
cli
push
cwtl
shrb
mov
and
pop
enter
out
or
and
push
int3
jnp
sbb
xchg
mov
and
and
push
test
and
roll
lret
adc
mov
mov
dec
imul
faddl
pop
sub
icebp
inc
jl
fistpll
fistpl
cwtl
ja
lret
and
into
rclw
clc
pusha
mov
push
cmpsb
mov
xchg
into
andl
mov
push
xchg
cltd
xorb
jle
jno
cs
add
push
cmc
bnd
xchg
or
ret
fstps
mov
iret
movsl
and
mov
pop
add
rclb
push
push
lret
and
nop
dec
cmp
in
dec
jbe
push
rcll
mov
mov
dec
hlt
out
int3
adc
pop
and
addb
imul
add
and
orl
adc
sub
fs
xchg
inc
fsubs
enter
icebp
dec
add
and
xchg
add
aaa
test
pop
loopne
jne
pop
push
test
jno
in
fadd
dec
adc
adc
outsl
hlt
hlt
dec
dec
call
arpl
out
popa
stos
pop
insl
jl
repz
lahf
jns
andl
movsb
lret
cli
rcr
sbb
adcl
fdiv
movsb
iret
lea
or
and
and
jmp
ret
mov
shlb
or
sbb
jl
cwtl
pop
inc
xchg
pop
arpl
subl
jne
sub
stos
mov
je
mov
inc
jp
call
jnp
les
aaa
sub
sub
or
mov
inc
push
daa
push
mov
fistpl
popl
cs
clc
pop
or
jp
out
mov
ljmp
rcrl
push
in
outsl
push
xlat
out
mov
loopne
fmul
jle
into
sbb
adc
mov
xchg
pop
addl
xor
and
sub
ljmp
sbb
ss
jns
adc
mov
out
jge
pop
cli
inc
pop
mov
lret
mov
inc
mov
test
fstp
sbb
jnp
jl
mov
push
mov
push
xchg
arpl
sbb
mov
aad
jo
pop
lock
sub
xor
and
add
sti
mov
inc
fiadds
mov
lds
cmp
pop
cmp
sbb
xchg
pop
mov
mov
daa
xchg
rcr
inc
add
out
mov
dec
clc
jmp
mov
cmpsb
inc
inc
lock
roll
mov
imul
movsb
ret
sbb
mov
bound
or
ror
push
xor
shr
lods
iret
ret
cmpsl
xor
add
push
and
pop
xor
adc
or
push
insl
mov
scas
rcr
int3
push
dec
test
lahf
add
lds
sbbb
mov
and
adc
sti
pop
rolb
fnsave
inc
test
in
lret
jae
jne
inc
fildl
daa
pop
or
push
pop
stos
sti
dec
into
cmp
clc
dec
mov
push
mov
xchg
sbb
inc
sti
jmp
rcrb
das
sti
sub
mov
push
dec
fs
imul
stc
icebp
mov
dec
push
shlb
inc
hlt
jle
xchg
and
leave
mov
testb
lea
cmp
jns
sti
xor
loopne
mov
leave
pop
mov
ret
xchg
shrb
sarl
push
fimuls
iret
mov
mov
bound
fdivl
lahf
pop
and
mov
jge
cli
ret
sti
mov
cmp
fcmove
dec
push
in
pop
xchg
mov
and
loope
dec
adc
shl
sub
hlt
push
test
pop
pop
lods
fisttps
repz
xlat
xchg
and
push
mov
xchg
and
mov
rcll
jnp
stos
or
cmpsl
cld
mov
mov
and
push
ret
mov
xchg
pop
xor
vmovhpd
or
push
stc
ret
movsb
mov
or
mov
xchg
pop
ljmp
push
mov
aaa
xor
in
negl
test
mov
lahf
fnsave
and
addr16
xor
mov
fidivl
das
xor
int
mov
inc
lret
jmp
sub
adc
sbb
xor
fcomip
stos
xor
jl
pop
movsl
ja
mov
cltd
sti
std
mov
pushf
scas
jl
idivl
loope
and
add
xor
adc
sbb
xchg
xchg
sub
jg
stos
mov
jl
dec
sub
sub
add
mov
mov
add
add
pop
fdivs
arpl
cmp
push
jl
inc
fnsave
mov
lahf
jg
negl
ja
mov
push
enter
adc
mov
rorl
scas
push
adc
mov
adc
ficomps
shll
and
mov
es
aad
stos
loop
jo
movl
pop
lds
pushf
adc
les
loopne
test
pop
test
dec
or
pop
std
rcrb
mov
pop
imul
outsb
lods
ret
push
lret
fdivrs
push
loop
mov
nop
imul
add
adc
sub
in
lods
test
stc
dec
loop
mov
lcall
fidivl
xchg
and
xor
bound
test
cmp
or
cltd
add
mov
mov
sub
in
sti
cmp
jbe
mov
loope
dec
lods
out
dec
mov
push
rclb
cmp
lcall
and
or
loope
outsl
test
or
lods
xor
icebp
rep
dec
adc
js
xchg
fidivs
adc
hlt
pop
aas
pop
push
inc
add
stos
sahf
and
pushf
mov
xor
inc
mov
ret
mov
ret
shll
dec
mov
fidivrs
clc
mov
mov
dec
daa
mov
sub
xchg
addr16
push
push
or
sub
cmp
jg
enter
out
inc
mov
mov
enter
cmp
loop
lahf
aaa
scas
push
gs
repz
loope
inc
call
jno
fsubr
xor
lods
xchg
in
sbb
shlb
mov
xorl
loop
aaa
cltd
sub
leave
dec
lds
shrb
mov
xor
int
add
iret
rclb
dec
rcrl
lahf
mov
incb
movsl
and
test
mov
push
and
dec
jne
sbb
stos
bound
adc
pop
aad
cmp
cmp
xchg
lahf
jb
jns
test
mov
fs
mov
ficoms
cwtl
jbe
push
mov
ljmp
dec
ja
aas
int
pop
jmp
test
andl
dec
in
sbb
add
movsl
hlt
xchg
movsb
ret
jae
inc
in
mov
ficomps
hlt
cmpl
subl
inc
mov
out
mov
bound
outsb
jo
gs
sub
sub
shrb
fistl
dec
xchg
subl
pusha
and
push
sarl
jle
enter
mov
dec
xor
shr
xchg
dec
push
jno
jle
lahf
and
jae
mov
pop
mov
or
lods
test
repnz
sbb
ljmp
pop
int
xor
dec
push
lods
jno
jo
scas
xchg
sbb
sbb
and
test
mov
lcall
cld
xor
dec
push
ja
pop
int3
mov
mov
jp
ljmp
repnz
mov
testl
adc
jg
add
ss
ret
mov
cmc
insl
xor
ret
insb
inc
xor
or
stc
lods
dec
dec
xor
cmpl
fidivs
pop
insl
pop
cmpsb
xor
xor
into
inc
test
xchg
lods
cmpsl
pop
or
add
call
xor
lret
popa
divb
loope
aas
daa
adc
xor
into
leave
inc
sbbb
les
mov
arpl
jbe
and
adc
rorb
xor
lret
adc
jne
jecxz
lods
jns
xlat
cmp
bound
jmp
inc
loop
pushf
aam
and
xchg
jecxz
fidivrs
jns
adc
aaa
mov
hlt
mov
xlat
iret
inc
jo
lods
and
aaa
xlat
subb
dec
leave
pop
inc
pop
pop
adc
testb
lea
lcall
pop
mov
mov
rcrl
out
das
outsb
xor
loop
dec
pop
in
xchg
ror
or
fstps
mov
pop
hlt
cmp
das
dec
cs
sti
adc
dec
xor
mov
testl
imul
sbb
adc
enter
scas
mov
out
inc
popl
in
int3
xchg
and
jp
jns
push
adc
int
in
push
push
repz
loop
rol
pop
pushf
cmp
jns
lret
dec
ja
ja
xchg
and
and
adc
inc
rcrl
decl
xchg
inc
mov
xchg
sub
fcmovb
addr16
cmp
adc
test
sbb
inc
add
push
movsb
jecxz
in
adc
sbb
and
mov
lods
sub
sub
mov
sbb
xor
lock
decb
add
fnstsw
pop
cmp
dec
inc
fldcw
inc
cltd
or
push
add
pop
lcall
stc
subl
mov
pop
or
add
data16
xlat
or
push
jbe
fwait
movsb
stos
fstl
and
mov
and
inc
js
push
sbb
call
pop
push
jmp
xchg
mov
and
lock
sub
cli
fstps
and
push
loopne
shlb
mov
rolb
sbb
pop
push
rcll
jne
pop
mov
jmp
xor
and
or
xchg
testl
out
stos
lret
cmp
shl
cmp
jnp
movb
cmp
imul
pop
and
add
or
outsb
sbb
xchg
ljmp
sub
xchg
xchg
lcall
dec
adc
pop
cmp
dec
and
mull
xor
adc
sbb
mov
add
adc
enter
fisttps
mov
clc
cli
or
mov
and
push
das
mov
jle
push
hlt
push
jno
pop
idivl
mov
scas
sbb
mov
out
and
mov
out
shlb
add
push
aad
adc
frstor
iret
mov
out
mov
mov
adc
jne
pop
pop
jae
or
sub
mov
push
cmpb
push
ficomps
sbb
fdiv
xchg
mov
out
and
or
aam
or
into
cld
mov
mov
popf
mov
or
sbb
jbe
mov
xchg
scas
es
cmp
pop
insb
sti
in
adc
clc
dec
push
or
lods
scas
test
outsb
daa
inc
out
aaa
fcomi
fwait
inc
addb
mov
stc
imul
or
push
pop
pushw
dec
pop
xorl
and
les
flds
mov
mov
mov
add
mov
fstl
xchg
int3
jbe
inc
lret
sbb
lcall
jb
push
imul
outsl
inc
xor
push
xchg
pop
popf
xchg
nop
aad
std
repnz
xchg
jge
xchg
mov
jg
xor
push
imul
adc
xchg
ret
jp
movsl
xchg
add
mov
test
aad
daa
int3
jnp
imul
lock
test
std
mov
lea
fs
sub
cmp
das
inc
sub
in
jle
sub
sub
pop
sub
or
cli
xor
insl
fidivrs
dec
js
xor
int
mov
mov
fwait
mov
mov
lret
pushf
pop
pushf
dec
mov
mov
xchg
rcrl
icebp
stos
fidivs
and
and
pushl
push
clc
adc
aad
mov
jg
sbb
dec
mov
jnp
dec
call
pop
push
mov
mov
popa
mov
adc
jecxz
mov
pop
sub
cmp
movsl
cwtl
ss
int3
push
mov
mov
int
cmp
cmpb
add
dec
sbbb
mov
push
dec
mov
jnp
mov
mov
jg
mov
sbb
mov
ljmp
sub
out
add
jge
lods
and
imul
cld
aam
add
test
adc
int3
idiv
movl
fstpl
outsl
int
and
adc
push
mov
in
mulb
adc
and
pop
add
push
jbe
inc
notb
mov
or
and
cmp
mov
mov
mov
test
test
loop
inc
inc
mov
jge
test
int3
jl
mov
mov
sub
xchg
jl
jno
movsl
jecxz
cmp
std
insl
mov
mov
icebp
mov
xchg
mov
rcrl
movsl
sub
mov
data16
xchg
fbld
rcrb
sbb
dec
pop
mov
test
or
flds
push
xchg
mov
adc
in
hlt
dec
push
mov
std
dec
ret
mov
and
dec
xchg
push
fstps
in
xchg
mov
push
pop
fwait
nop
and
dec
sahf
pop
arpl
insl
je
xchg
mov
add
dec
dec
sbb
ljmp
mov
mov
imul
pop
sub
insb
mov
cmp
aaa
stos
mov
rol
jmp
jmp
js
push
push
jbe
cld
add
stos
aad
mov
cmp
or
pop
jo
cmpsl
inc
push
mov
sbb
nop
dec
xchg
push
movsl
dec
xlat
or
jo
sti
lcall
mov
cmc
std
rcrl
in
hlt
jns
mov
idivl
imul
dec
cs
inc
push
jecxz
inc
and
test
scas
mov
testl
in
gs
outsb
js
out
cmp
mov
jno
xchg
dec
cmpl
test
sub
mov
xchg
stos
lcall
push
imul
xor
mov
ret
jno
mov
aas
stos
add
xchg
aaa
xor
pop
and
push
or
je
mov
out
cmp
pusha
push
jne
and
adc
test
xchg
xchg
inc
loopne
cmpsb
call
cmp
pop
shrb
hlt
idivl
out
ret
fnstcw
idiv
lea
inc
subb
movsl
in
inc
mov
sub
adc
loop
mov
in
xchg
xchg
push
je
push
xlat
dec
mov
cmp
dec
xchg
jmp
sub
dec
add
fidivrl
sub
add
popf
cltd
mov
popa
xor
mov
shrb
pop
fwait
outsb
inc
addr16
fisubrl
or
jge
pop
imul
or
lock
lret
inc
in
adc
into
pop
pushf
xchg
insb
adc
clc
ret
inc
dec
adc
enter
pusha
fldcw
jne
cmp
sub
sbb
testb
dec
scas
mov
dec
call
pop
pushf
lods
ss
enter
adc
std
sub
add
fmull
jb
insb
push
das
int3
inc
clc
push
lahf
lods
push
xchg
jecxz
jmp
gs
xchg
cltd
lahf
inc
fisubrs
out
fwait
mov
inc
inc
jp
cmpsl
mov
lea
mov
bound
pop
mov
loopne
or
in
cmc
lds
sub
sahf
xor
xor
aam
lret
je
or
inc
add
sbb
mov
fldcw
mov
sub
popf
sub
popa
or
xor
mov
xchg
pop
pop
loope
sbb
sub
inc
fwait
jnp
push
mov
mov
and
int
pop
or
test
pop
mov
ror
ds
dec
pop
push
cmp
stc
inc
das
sbb
sbb
popa
mov
out
in
sub
imul
mov
enter
lock
test
rcll
jae
movsb
loopne
sbbl
inc
ds
or
loop
dec
ret
or
or
xchg
lret
fsubrs
std
mov
icebp
pop
pop
shr
jnp
adc
imul
xor
insb
or
xchg
mov
push
jecxz
xor
jnp
mov
cmp
dec
inc
mov
fwait
mov
rclb
js
mov
cmc
or
adc
jns
and
dec
inc
and
inc
test
iret
shll
jle
in
push
subl
mov
jbe
mov
cmp
enter
and
cmpsb
test
das
imul
jne
inc
ret
cmp
clc
les
lcall
mov
into
xchg
mov
mov
mov
stos
or
lods
cmp
jnp
fistpl
icebp
outsl
ror
xchg
sub
mov
xchg
fisttpl
enter
dec
fidivs
leave
xchg
mov
rcrb
push
push
rcl
incl
dec
inc
lds
jg
and
jmp
test
or
fisttpl
imul
cmpsb
lods
addl
es
and
loop
jl
jmp
jne
xchg
sub
cmc
clc
in
fcmovnu
loop
add
lods
or
mov
mov
xchg
jns
jns
out
push
xor
pop
lcall
arpl
dec
mov
nop
xor
cmp
push
mov
xor
test
shrl
out
int3
cmp
in
mov
jg
xchg
cmp
ret
mov
es
push
mov
int
pop
sub
mov
push
pop
inc
add
mov
push
ret
sbb
adc
scas
dec
loopne
cmpsb
adc
popf
js
imul
dec
xchg
cmp
mov
mov
out
mov
xchg
xchg
pusha
lahf
in
shll
mov
lods
std
push
push
push
mov
movsl
sar
cmp
mov
scas
pop
aam
jge
bound
fldt
inc
lret
xchg
scas
push
xchg
dec
scas
imul
dec
lds
cmp
add
popa
sbb
mov
xchg
push
cvtpi2ps
push
rcrb
pop
push
hlt
stos
mov
mov
mov
stos
loop
push
and
push
sbbb
ja
jmp
ljmp
nop
cld
aad
in
and
mov
add
shl
mov
int
mov
xchg
nop
les
pop
lea
in
dec
mov
fucomp
ss
out
push
xchg
fadds
sti
mov
pusha
call
mov
cmpsl
pushf
scas
xor
mov
pusha
jo
or
popf
cwtl
aad
pop
cli
sar
sbb
adc
lock
aaa
cmp
aad
cmp
add
push
in
mov
loope
and
jmp
iret
pop
inc
test
ret
mov
jmp
fsubr
std
scas
adc
daa
pop
mov
lret
rdpmc
test
jnp
adc
inc
pop
cld
lods
adc
into
mov
pop
testb
scas
popf
daa
jnp
sub
sbbl
rcll
or
adc
pop
insl
sub
ja
iret
scas
aas
or
cmp
lods
mov
dec
adc
int3
xor
into
sub
adc
test
leave
mov
sbb
rolb
imul
or
sbb
in
xchg
rorl
pop
clc
lds
cvttps2pi
xlat
int3
pop
adcl
push
sub
cld
jno
push
js
mov
inc
dec
andl
push
sarl
lods
cld
aas
ja
fxch
mov
inc
test
shll
fadd
nop
mov
xchg
cmp
mov
sub
call
imul
push
xchg
lock
out
mov
sub
sub
stc
jecxz
pop
dec
cld
cwtl
movsb
cmp
xor
inc
inc
add
xchg
xor
pop
out
clc
adc
or
ficompl
int
leave
xchg
cmc
cmpsb
jno
cmp
and
leave
xchg
sub
lret
sub
leave
inc
in
loopne
loopne
or
popf
cmpsl
inc
fiaddl
nop
and
adc
fisubrs
fmuls
int
sub
push
adc
sbb
cli
hlt
mov
mov
insl
icebp
jno
xor
movsl
je
push
cmp
pop
lcall
repz
pop
ljmp
pop
lods
mov
and
sub
repz
scas
mov
sbb
or
scas
fs
das
fmul
ss
arpl
imul
icebp
sub
adc
push
jb
cmp
jb
push
xchg
add
test
jnp
fucomip
jmp
jle
movsl
fcomip
jbe
inc
mov
ss
cmp
pop
ljmp
push
mov
cld
pop
sarl
sbb
mov
adc
cmp
xchg
inc
push
fldenv
std
imul
outsl
and
mov
dec
cmp
xchg
mov
lock
or
daa
gs
xor
les
xchg
aam
or
inc
lret
in
push
dec
jle
shlb
mov
jne
or
imul
push
mov
mov
pop
ret
dec
pop
jae
ljmp
sub
adc
pop
and
nop
lds
sub
cltd
popa
jl
aad
sarl
addl
out
pop
iret
mov
mov
pop
push
xchg
xchg
cmp
rolb
push
xor
inc
cmpb
cmp
lods
sbb
into
jl
inc
mov
addr16
inc
mov
in
in
cmc
cmp
cmp
out
call
pop
cwtl
cmpsl
stos
ret
jo
repnz
aas
or
sarl
push
mov
xor
cmp
sbb
fsubr
push
movsl
or
jno
cmp
outsb
roll
add
or
xorb
cltd
sbb
fsubrs
and
loope
xchg
daa
fdivs
fmulp
movsb
insb
cmp
lret
out
dec
and
xchg
das
add
cltd
add
jae
adc
push
not
pushf
and
sbbl
pop
movsl
dec
lock
or
aas
xor
mov
rcrb
jg
js
ds
and
in
test
daa
das
dec
andb
push
negl
lock
mov
std
sub
jl
arpl
imul
stos
lods
scas
call
idivl
jno
loopne
mov
or
test
and
cmc
cltd
mov
ss
adc
xor
pop
push
out
ret
adc
repnz
popa
mov
pop
pop
filds
sub
sbb
out
fcoms
push
arpl
add
push
sub
sbb
sbb
and
jae
shl
adc
jl
roll
rcrl
inc
pop
mov
xor
push
aad
and
sahf
cmp
push
mov
dec
hlt
les
js
or
xor
adc
cmp
pop
rcrl
aas
test
adc
adc
mov
shr
sub
push
into
xlat
in
xlat
dec
and
lcall
xchg
fwait
roll
sub
mov
sbb
iret
lahf
dec
ret
jnp
sbb
xor
inc
cmp
test
mov
inc
rcrl
in
push
cltd
pusha
add
imul
nop
jb
movsb
aam
xchg
push
jno
adc
mov
jno
push
pusha
cli
scas
imul
xchg
sti
inc
xchg
pusha
cmp
jne
or
xor
mov
lret
outsl
inc
jle
mov
push
cmpsb
leave
push
ljmp
add
inc
decb
fisttpll
inc
xchg
pop
pop
jmp
ss
test
sbb
cmp
mov
fisttpll
lods
aas
popf
rclb
daa
push
push
push
adc
out
xchg
cmp
jae
mov
pop
fcmovne
jecxz
daa
out
mov
mov
aam
sbb
sub
jmp
in
cs
mov
loope
nop
xor
inc
pop
pop
decl
mov
mov
and
or
out
adc
aas
and
popf
jg
fwait
aam
xchg
movsl
in
roll
jle
test
loopne
dec
mov
pop
xor
fisubl
hlt
sbb
inc
enter
lret
pusha
stos
pushf
jg
inc
lods
test
out
pop
and
sub
cmpsl
gs
arpl
push
or
xchg
fiadds
inc
xor
add
sbb
popa
or
mov
xor
gs
cltd
xor
fucomi
cld
cwtl
int3
and
js
add
nop
xor
lods
js
mov
insl
jp
cmp
lcall
roll
loope
xorb
mov
loope
jmp
das
nop
pop
out
lods
or
dec
sti
and
movb
adc
sti
sahf
mov
das
mov
repnz
mov
bound
test
inc
mov
call
imull
xor
ljmp
push
test
in
sub
sub
mov
imul
inc
dec
into
rol
adc
movaps
xlat
cli
inc
cmp
cltd
lret
or
outsl
scas
push
cmc
sbb
cltd
and
aaa
and
pushf
mov
aaa
popa
xor
fwait
adcl
out
jp
popa
fisttpl
mov
mov
cli
fdivrs
andb
daa
je
sub
lods
in
lds
mov
pop
mov
sub
adc
hlt
sub
mov
cli
mov
sub
addr16
loop
pop
mov
mov
dec
jmp
pushf
pop
call
fistl
addr16
leave
je
je
in
ljmp
cmpsl
cmp
adc
lds
in
cmp
dec
ljmp
mov
in
fsubr
and
outsl
jns
inc
movsb
fistps
lods
mulb
loope
ljmp
daa
mov
in
pusha
sub
das
jge
cmp
adc
cli
int3
fmull
fstpt
fs
xchg
roll
mov
dec
clc
lcall
stos
push
loopne
cmp
adc
mov
mov
icebp
sbb
adc
mov
xchg
loopne
or
sub
xchg
pop
pop
sub
mov
mov
mov
mov
nop
mov
call
ret
dec
mov
dec
pop
sbb
cwtl
fldcw
mov
stos
cmp
lcall
pop
inc
pop
fwait
int
sbb
push
sbb
movsl
jecxz
rorl
sbb
aaa
ficomps
pusha
or
jecxz
push
je
or
sub
jno
ret
popa
adc
sub
or
and
dec
mov
and
sub
xor
sub
mov
aaa
and
xor
subl
daa
sbb
push
cmp
mov
mov
pop
cs
je
mov
lock
mov
pop
outsb
daa
jecxz
xchg
sub
cltd
cmp
cmc
movsl
pop
sahf
imul
push
popf
std
xchg
mov
jns
xor
sub
hlt
loop
stos
cmp
jecxz
js
shrl
movsb
add
mov
mov
mov
pusha
out
insb
sbb
mov
aaa
push
push
sub
push
add
fidivrs
dec
mov
adc
mov
std
mov
in
out
mov
ja
adc
repz
stc
lahf
mov
mov
shr
aam
es
dec
mov
mov
repz
lcall
mov
cs
mov
xor
aaa
ret
mov
jecxz
jno
or
sub
push
stos
jne
das
in
cwtl
loope
dec
jg
popf
mov
test
jne
popl
cmp
test
adcb
shrl
jle
mov
fwait
inc
cmc
into
push
and
test
dec
ret
mov
cmp
sbb
loop
stos
inc
and
sbb
mov
inc
imul
and
repnz
sbb
cmc
inc
shl
andb
sbb
mov
inc
dec
mov
bswap
sub
repnz
jecxz
or
idivw
leave
mov
stos
jno
push
adc
out
sbb
data16
fisttpl
lods
out
mov
enter
scas
sbbl
xchg
ds
xchg
jb
jo
push
add
loop
fwait
rolw
push
sub
inc
or
aaa
mov
in
and
jae
jg
ss
mov
sub
into
sub
push
sbb
dec
sub
cmp
outsb
subl
xchg
adc
push
pop
lret
in
xor
add
jg
lea
out
xchg
nop
jbe
rcll
rol
push
push
cld
mov
fwait
jmp
or
outsl
and
test
lret
inc
add
pop
xor
xchg
loope
pop
and
stc
lds
pusha
sbb
mov
enter
xchg
lods
insb
mov
add
sub
xlat
in
pop
int3
rorl
mov
mov
ljmp
xor
aas
dec
addr16
mov
jnp
fs
push
mov
andl
inc
iret
mov
push
test
out
jo
mov
mov
insl
leave
les
and
or
xor
adc
frstor
mov
leave
in
das
clc
cmpsl
int3
fists
daa
jnp
aas
aaa
ljmp
lahf
adc
cmp
push
rol
xor
rcrb
in
jo
cwtl
das
lea
jae
lret
adc
push
adc
bound
lods
clc
lods
dec
jg
push
addr16
sahf
or
cltd
aam
lods
mov
adc
sbb
movsb
scas
dec
inc
repz
inc
xlat
xchg
xchg
xchg
push
pop
mov
jnp
xchg
les
in
inc
stos
cmpsl
push
lahf
mul
les
jbe
repnz
xlat
add
ja
dec
adc
inc
cmpl
fldt
adc
push
add
adc
add
mov
in
mov
mov
add
rcl
adc
insb
jmp
push
add
sbb
xchg
push
icebp
inc
mov
xchg
aaa
push
enter
cld
sub
fstp
imul
and
push
inc
mov
ret
jo
sub
jle
adc
nop
dec
add
incb
cmp
jge
and
enter
je
fmuls
stc
xchg
cmc
dec
push
mulb
pop
lret
xchg
rcrl
mov
ret
xor
sarb
inc
sbb
nopl
ss
ja
pop
xchg
jecxz
cmp
push
fucomi
aaa
jge
adc
das
rcr
test
dec
dec
add
clts
xchg
inc
les
fstps
sbb
popf
rorb
pop
test
mov
and
das
scas
jg
inc
call
xor
imul
adc
push
shrb
nop
sbb
cld
mov
xlat
adc
push
test
shlb
popl
sbb
lret
test
nop
out
out
push
xchg
mov
sbb
jle
mov
les
cmc
test
push
shll
test
aas
mov
test
dec
mov
dec
xor
fdivp
into
pop
dec
jge,pt
test
cmp
pop
scas
popa
pop
arpl
inc
iret
lock
js
cs
mov
enter
fwait
xchg
mov
dec
add
cmp
cmp
repnz
cmp
fisubrs
and
int3
cmc
loop
xchg
jp
jnp
mov
mov
dec
ljmp
jns
xor
pop
add
or
add
out
out
aam
xchg
jb
mov
test
xchg
jmp
cmpsl
aas
in
xchg
arpl
mov
insl
pop
ja
add
sbb
sbb
dec
push
xchg
lcall
pop
mov
scas
cmp
mov
inc
or
rorl
std
insl
test
sub
pop
insl
mov
adc
mov
and
subb
and
inc
cli
arpl
dec
je
rolb
xchg
sbb
mov
popa
jmp
mov
mov
xor
pop
mov
dec
jge
lods
movsl
fistps
das
add
mov
dec
pop
in
jne
sbb
push
dec
stos
orl
aaa
mov
mov
or
mov
rcl
push
inc
leave
sbb
rcll
adc
push
jnp
xor
pop
and
pop
shrl
pop
jge
mov
cmp
xlat
cmc
out
leave
adc
push
mov
dec
mov
and
pushf
dec
and
push
and
movb
mov
in
mov
out
or
xchg
arpl
cs
jns
dec
sbb
xlat
jg
jg
aam
daa
fidivl
shrl
test
leave
stos
repnz
imul
or
sub
in
cmp
pusha
dec
push
xlat
jge
xchg
jbe
ret
loop
outsl
cmp
int
dec
int3
sbb
jmp
and
imul
movsl
mov
sahf
sar
sbb
pop
or
test
mov
sti
dec
jno
test
pop
popf
cltd
mov
inc
xor
lea
jne
adc
push
loope
in
mov
mov
lods
lock
dec
icebp
hlt
inc
sub
fwait
jl
jne
jo
mov
test
jecxz
mov
xlat
rdmsr
loopne
mov
adc
push
std
inc
in
cmpsb
jp
movsl
inc
inc
inc
pop
jge
imul
xchg
jns
iret
mov
inc
mov
mov
push
ja
iret
in
mov
ds
mov
loopne
in
xlat
fdivrs
cmp
mov
mov
add
mov
mov
jecxz
adcl
jecxz
test
adc
dec
stc
inc
xlat
and
dec
mov
cmp
fdivrp
sub
mov
xor
xchg
add
es
fdivl
hlt
or
mov
fistl
rcll
ficomps
pop
dec
das
sarb
xor
in
sub
arpl
pushf
jbe
pop
mov
dec
movsb
mov
add
or
push
cmpb
cmpsl
cmpsl
mov
in
inc
cwtl
mov
mov
call
fxtract
jmp
xor
mov
fwait
lret
jge
out
mov
push
push
loopne
push
mov
sbb
or
in
push
push
mov
add
out
stc
or
xchg
das
not
jle
push
adc
jae
es
mov
inc
scas
daa
lret
push
mov
ret
pop
pop
movsb
mul
sub
adc
xchg
jae
add
add
mov
and
imul
xchg
adc
mov
in
jnp
sub
sahf
inc
in
stos
cld
aaa
sub
mov
iret
jle
fwait
notb
mov
mull
pop
sahf
jne
cmp
in
scas
xchg
test
fcmovne
icebp
add
xor
inc
out
ret
cli
cs
jne
jl
jnp
push
dec
scas
adc
mov
inc
mov
push
scas
scas
or
loopne
ljmp
pop
push
jb
adc
inc
out
dec
lret
out
jns
adc
mov
stc
ret
cld
mov
push
dec
sbb
pop
dec
clc
scas
add
ja
push
mov
ljmp
jae
das
dec
lret
pop
repnz
insl
pop
sahf
mov
je
fadd
pusha
push
movsl
or
xchg
jp
mov
push
jg
inc
jp
cmc
lcall
sub
iret
mov
aam
popf
lock
mov
or
hlt
mov
enter
jp
rorl
test
mov
mov
es
out
mov
jne
push
mov
dec
push
loop
dec
cmp
jle
xor
pop
sub
cmp
push
jl
loope
pop
out
or
fstl
loopne
mov
sub
gs
pusha
mov
jge
mov
int3
lahf
ljmp
mov
cwtl
cmp
lods
fisttps
rcrb
popf
jo
loope
insl
inc
push
movsl
sbb
dec
push
mov
rcll
jmp
les
aad
shr
scas
lcall
inc
inc
mov
out
mov
jmp
sbb
fucomp
mov
in
mov
dec
scas
jl
pop
push
fmulp
adc
cmp
or
inc
das
sahf
out
mov
xchg
add
insl
ficomps
mov
outsb
sbb
xor
clc
sti
jge
cmp
sahf
call
push
sarb
mov
fld
inc
lahf
inc
out
orl
stc
ror
cmc
mov
inc
cs
adc
scas
aas
jne
lods
sbb
nop
clc
and
sbb
mov
fistpll
jnp
pop
test
jle
aaa
adc
push
cld
mov
xchg
jle
inc
lret
ds
xchg
xchg
in
fcompl
cmp
or
mov
sub
jmp
fwait
in
in
dec
shlb
lcall
movsl
sbb
and
push
xchg
add
test
adc
inc
push
xor
xchg
and
xor
push
arpl
sub
stos
mov
negl
sub
das
sidtl
pushw
aas
xchg
faddp
add
add
lret
lret
xor
cmp
testb
repz
mov
jl
adc
push
fcmovbe
and
repnz
xchg
lock
daa
fstps
xchg
test
dec
dec
leave
push
fnsave
imul
xor
cmp
jle
fs
xor
adc
dec
mov
add
xlat
fdivp
mov
push
cwtl
sub
mov
mov
fistl
into
jne
inc
adc
out
xchg
mov
fists
sbb
in
xchg
test
into
push
sbb
fmull
out
pop
adc
cmp
sbb
hlt
jecxz
lret
fs
or
enter
adc
sub
xor
mov
fistps
pop
mov
sbb
xor
fidivs
jp
xchg
mov
or
mov
jmp
into
add
popa
imul
mov
pop
xor
push
jb
dec
inc
aaa
xchg
sti
lock
jae
push
sub
leave
adc
mov
push
xor
and
mov
pop
mov
lock
dec
xor
fistpl
push
and
or
jp
mov
fstl
call
cmp
dec
dec
jne
xor
stc
test
xchg
mov
xchg
pop
stos
xor
adc
pop
imulb
std
sbb
addr16
jecxz
sub
cwtl
add
xchg
jo
fmull
dec
push
push
sbb
das
fcomp
pop
push
push
jg
gs
ficompl
cli
imul
or
sub
cmpsb
sti
fadds
pop
jns,pn
aas
cwtl
test
lret
xchg
into
cltd
lea
scas
jmp
ret
stos
and
sub
iret
mov
mov
lods
jnp
pop
js
rol
aam
subb
mov
rorb
pop
lahf
sub
test
push
push
dec
lret
xor
sub
aam
icebp
mov
cmpsl
cmp
push
push
mov
xor
in
add
inc
mov
jle
mov
jb
sahf
push
lret
rorb
out
test
mov
sub
xchg
lcall
push
mul
and
mov
inc
loopne
lahf
jb
movsl
jns
fs
jl
mov
adc
rorl
fdivr
push
outsb
and
push
out
pop
insb
cld
jnp
mov
sbb
cmpsb
movsb
inc
xchg
dec
xor
xchg
lock
xor
or
pop
sti
dec
or
movsl
jb
jae
jb
movb
aaa
jmp
mov
adc
mov
push
jo
mov
cwtl
jle
and
dec
icebp
leave
int3
imul
shlb
out
clc
mov
fstp
mov
and
adc
mov
sbb
data16
pop
adc
repnz
rcl
pop
mov
aas
insb
dec
pop
lds
aam
out
sbbb
ret
outsb
ja
xchg
nop
imul
test
adc
inc
cmp
fldcw
xchg
dec
pop
push
gs
mov
mov
jmp
pop
stos
xchg
and
call
add
xor
adc
mov
mov
repz
outsb
pop
dec
cld
mov
cltd
lea
loop
xchg
leave
push
out
mov
cmp
add
jge
mov
lock
data16
daa
fsts
shll
into
adc
add
pop
sbb
ds
pop
push
int3
jp
in
xor
sahf
cmpsl
gs
push
push
jmp
sub
lcall
pop
pop
loope
out
out
insl
jecxz
mov
push
pop
inc
or
mov
jle
fs
loop
add
rorl
lcall
dec
jne
mov
mov
pop
push
inc
stc
cs
jae
inc
lret
push
mov
pushf
shlb
call
dec
mov
hlt
push
mov
shrb
xor
fisttpll
add
out
or
shll
call
cmpl
imul
clc
scas
or
push
and
popf
dec
add
and
jmp
push
into
fdivs
into
push
shl
xchg
jns
aaa
xor
aaa
pop
fsts
adc
sti
lods
or
inc
pop
ja
loope
jge
out
pop
cli
arpl
dec
fdivs
leave
push
popf
loop
and
popa
adc
inc
pop
mov
test
push
icebp
in
jae
add
pop
jno
push
lds
jmp
xchg
insl
mov
mov
jge
iret
cmp
xor
push
mov
cmp
ret
out
les
out
dec
cli
cwtl
adcb
and
jns
lret
je
data16
jns
add
les
and
mov
imul
in
xlat
mov
pop
jp
mov
scas
xchg
repnz
or
jmp
cmpsb
sbb
scas
scas
xchg
test
lock
jmp
bswap
mov
fucomi
add
arpl
lods
mov
loopne
mov
hlt
scas
adc
cmc
lods
push
out
pop
push
mov
test
push
mov
nop
ja
fistps
test
dec
mul
xchg
adc
jecxz
push
fidivl
sub
push
mov
scas
hlt
push
or
pop
int
push
xchg
fwait
cmp
in
adc
dec
out
pop
and
sub
adc
outsb
pop
stc
or
cmp
mov
fidivl
stos
jnp
ds
shll
dec
cwtl
mov
jmp
xor
push
cmpsb
mov
scas
repz
pop
icebp
push
fcoml
pop
mov
mov
ds
cmp
sub
mull
pop
fs
xchg
and
dec
push
xlat
cmp
sbb
ret
pop
xchg
mov
mov
jge
clc
cld
pusha
repnz
hlt
insl
jb
add
lret
lock
xchg
pop
ja
add
dec
ja
add
jg
test
jno
stc
call
hlt
hlt
jecxz
stos
mov
dec
add
cmpsb
adc
ret
loopne
cmp
and
out
ret
jg
mov
test
mov
push
xor
jge
mov
adc
sbb
mov
aam
jbe
in
pop
mov
dec
push
lods
into
sbb
insl
mov
js
outsl
xchg
push
iret
sahf
in
inc
loopne
test
push
shlb
mov
mov
in
das
dec
sub
lcall
jg
pop
or
adc
dec
mov
xchg
movsl
lret
popa
dec
imul
dec
push
or
xchg
or
fs
cmpsb
sbb
aad
mov
inc
jmp
xlat
mov
aam
sub
cmp
and
mov
aam
cs
std
pop
lods
push
inc
pop
jb
mov
ja
into
xchg
or
daa
xchg
adc
fistps
orl
mov
xor
pop
shll
push
pop
popa
stc
aam
fcmovu
push
push
jp
or
ret
std
push
add
push
jnp
test
mov
out
or
popa
in
adc
cmp
sbb
mov
mov
cmp
aas
inc
test
lock
lds
sbb
jne
inc
rol
mov
jns
cs
popa
jne
es
test
int
fcoml
sbb
jnp
std
jge
pop
dec
ds
xchg
iret
add
pop
scas
and
dec
sub
push
ret
inc
xchg
addr16
ja
scas
add
adc
inc
enter
jo
rcll
xchg
add
pop
fistps
push
mov
pop
pop
lret
xor
pop
jle
mov
xor
jbe
imul
jo
sub
push
rcrl
lds
jle
es
in
js
cld
lea
rcrl
inc
into
addl
pop
dec
xchg
sub
jae
call
pop
mov
cmp
pcmpeqb
jge
add
int3
mov
icebp
sbb
mov
mov
push
imulb
out
jg
add
into
mov
mov
xchg
mov
aaa
mov
mov
repnz
out
add
into
jl
add
nop
mov
mov
push
push
aam
ret
sbb
shlb
test
mov
cwtl
mov
push
jne
inc
loop,pn
mov
cmpsb
inc
aam
mov
jnp
dec
and
incb
xchg
add
fnstcw
inc
jne
imul
mov
test
jle
mov
std
xchg
jp
dec
int3
dec
outsl
push
stos
shll
je
mov
inc
inc
in
test
dec
shlb
adc
lret
adc
xchg
and
xor
fwait
scas
mov
rorb
xchg
mov
in
movsb
stos
sub
jmp
or
and
mov
mov
movsl
push
imul
shll
dec
inc
xchg
push
jl
sub
ret
jnp
dec
or
push
xor
dec
push
mov
ffree
inc
adcb
jne
fdivp
into
loopne
xchg
dec
jge
je
and
dec
xor
push
sarb
aam
stc
rolb
fisubl
test
pop
lock
add
jecxz
out
xor
aad
stos
fcmove
push
or
add
test
mov
or
stos
xchg
xor
out
repnz
cld
popa
xchg
cmp
mov
xor
push
cmp
mov
push
mov
and
mov
pop
test
xchg
mov
xchg
wbinvd
add
imul
scas
jp
pop
gs
lea
in
inc
mov
mov
ja
cmpsw
xchg
mov
cmpl
js
jmp
shl
and
int3
jb
test
cmp
mov
loopne
mov
dec
cmp
jb
mov
mov
jl
inc
iret
xchg
out
push
adc
int
fsubl
add
mov
or
mov
stc
jl
leave
hlt
mov
xor
test
out
cmpsb
mov
icebp
iret
cmp
sbb
shr
cmc
loop
aam
add
fcoms
lea
loopne
insl
lret
lcall
les
adc
aad
push
icebp
movsb
cmpsl
push
test
inc
push
pop
fwait
pop
dec
fnsave
iret
dec
jb
repz
mov
xchg
xor
loope
dec
mov
cwtl
addb
fildl
in
and
push
sbb
jecxz
sub
sti
call
mov
cwtl
xchg
and
mov
jg
pusha
repnz
adc
sub
and
dec
sub
and
sti
movsb
fmuls
stc
adc
mov
xor
cwtl
loop
jp
movsl
push
popf
scas
push
sbb
mov
xlat
movzwl
sub
pop
mov
addl
ss
fdivrs
mov
jae
std
jecxz
out
jmp
adc
pop
mov
jne
inc
test
xor
inc
icebp
push
or
adc
sbb
loopne
daa
rcr
rcl
xchg
mov
add
out
sbb
add
sbb
outsl
push
imul
pop
adc
pop
inc
dec
out
mov
stc
rclb
out
push
xor
mov
and
fiaddl
xor
movd
addr16
arpl
xchg
push
and
sarb
aam
mov
orl
dec
int3
les
js
inc
mov
fs
mov
mov
pop
mov
xchg
lds
dec
jae
nop
xchg
cmp
pop
fadd
divb
pop
call
popf
sbb
dec
mov
or
sub
rclb
lock
pop
pop
stos
ficompl
jb
mov
nop
lods
lods
stos
pushf
movsb
daa
jo
mov
les
mov
scas
inc
inc
popa
mov
or
or
ljmp
xchg
xchg
into
pop
dec
sbb
and
sub
mov
push
push
mov
xchg
data16
jnp
inc
sbb
or
pop
nop
out
call
and
les
stos
xlat
pop
or
push
jnp
loopne
into
cmc
cmp
mov
or
mov
adc
cmp
cmp
aam
testb
or
inc
push
push
sub
cwtl
inc
ljmp
pop
mov
sub
test
xchg
pop
xchg
cmc
pop
dec
repnz
adc
out
out
lahf
pop
dec
lock
mov
adc
mov
mov
cmc
jecxz
test
out
js
add
xchg
xchg
fwait
adcl
pushl
jmp
push
arpl
cwtl
jbe
or
adc
fisubrs
stos
or
cmc
pop
xlat
sti
int3
ss
or
fidivrl
fwait
add
pop
mov
aam
sub
sub
scas
scas
es
or
movsb
cwtl
or
cli
pop
rcrb
mov
mov
add
lahf
inc
cld
mov
cli
shl
cmp
in
mov
inc
mov
mov
mov
and
lea
rcrl
and
xchg
lods
ret
fs
js
testl
mov
popf
loopne
test
out
mov
push
ss
mov
add
fiaddl
sbb
out
jg
cmp
cwtl
fcomps
xor
adc
arpl
mov
roll
mov
in
pop
push
lods
shrl
mov
js
dec
or
lods
xor
push
sahf
fldenv
mov
jmp
sub
iret
push
push
push
xor
or
or
or
fldcw
fcomps
je
cmp
adc
or
or
fimull
fistps
cmp
aad
mov
inc
mov
movsb
call
sar
xor
sub
fisubrl
shr
insb
mov
jb
mov
loop
aam
or
movsl
xor
dec
lock
inc
cmp
lock
add
ret
call
and
jo
dec
inc
jg
cmp
negb
rorl
and
sahf
popa
lcall
xor
pop
pop
out
xchg
inc
sub
rol
cmpsb
xor
and
pop
add
js
movsl
dec
pushf
mov
movsb
add
movsl
std
adc
std
jae
stos
jge
movsb
cltd
jne
inc
stos
nop
add
adc
mov
ja
fisubrs
or
cwtl
mov
test
pop
mov
out
inc
shl
leave
repnz
add
sbb
mov
stc
lods
inc
cs
dec
sub
xor
mov
sub
arpl
mov
mov
or
test
loop
jl
fsubl
pop
add
stc
imul
jg
adc
daa
sub
mov
insb
cwtl
sbbl
loopne
sub
add
adc
pop
push
mov
in
pop
sbb
adc
xor
jne
rcrl
adcb
and
jo
insl
pop
push
jbe
fimuls
jmp
and
fwait
pop
xor
or
push
int
add
mov
es
lahf
mov
scas
movlps
std
shrb
inc
dec
repnz
push
into
mov
movsb
popa
mov
push
and
pushf
xor
sbb
mov
shlb
stos
pusha
sahf
aam
dec
and
cmp
cmp
cmpsl
adc
adc
roll
cmp
xor
push
adcl
pop
insl
fisubrl
xor
pop
lret
scas
ljmp
movsb
inc
and
in
cmpsl
sbb
sub
aad
inc
enter
and
sahf
ds
mov
push
jecxz
insb
test
jecxz
pop
fs
fwait
repz
sti
std
xchg
jns
cmc
inc
push
lret
rcrb
pop
pop
jp
inc
imul
cmp
movsb
dec
xor
and
nop
cmp
stos
pop
pop
decl
add
lcall
inc
scas
adc
shlb
xor
inc
cmp
mov
push
iret
popf
scas
movsl
push
add
inc
orl
popf
adc
call
mov
pop
jg
jno
mov
clc
jae
add
add
aad
pop
pop
and
pop
mov
add
lock
xchg
frstor
push
es
push
xchg
std
jge
rorb
sbb
sub
push
mov
push
jne
push
fidivs
faddp
popa
inc
push
push
xor
dec
sub
ds
js
orl
iret
add
cld
test
lret
out
inc
push
fimull
adc
xlat
lret
hlt
leave
xor
js
movsl
and
add
mov
xlat
imul
and
add
lds
sti
dec
clc
addr16
xchg
inc
addr16
pop
call
cmp
xor
jae
sbb
mov
daa
pop
mov
mov
fisubl
enter
push
adc
data16
pop
pop
inc
stos
sbb
pop
push
bound
lds
and
fsubr
adc
adc
pop
rcr
dec
jae
int3
mov
mov
jbe
inc
mov
adc
sbb
mov
push
pop
iret
inc
jno
lods
in
call
inc
es
repnz
dec
jmp
lret
shlb
jp
test
fistpl
movsb
in
or
adcb
call
arpl
adc
sbb
push
push
sbb
testl
les
add
inc
sahf
ds
jae
fdivl
aad
push
imul
mov
in
lret
lcall
outsb
fbstp
in
es
lret
jae
mov
sub
clc
mov
push
pop
push
mov
fidivs
sbb
jmp
pusha
fldt
push
in
sbb
neg
pop
dec
jecxz
leave
popf
push
sub
inc
xchg
ss
jae
mov
or
push
xor
xchg
movsl
js
lcall
mov
cmp
loop
sti
mov
mov
mov
data16
shr
push
lahf
jle
inc
dec
fdivrs
test
sub
stos
fidivrl
shrb
shrb
xchg
popf
mov
sub
mov
pop
lea
xchg
dec
mov
pop
xchg
push
and
inc
push
pop
adc
incl
mov
xchg
mov
arpl
jno
in
or
sub
lds
add
call
sar
xchg
popf
lds
popf
mov
jo
mov
cltd
push
mov
jae
and
out
scas
loopne
or
mov
mov
or
movaps
mov
xor
les
loopne
lret
fcomps
inc
leave
jecxz
popl
pop
out
lret
subl
jle
sub
push
jge
xor
pop
das
xor
test
stos
inc
cmp
jl
xor
outsb
nop
xchg
aaa
add
out
mov
xchg
std
jo
data16
cmpsl
push
cmp
cld
ljmp
pop
or
pop
lds
lret
jae
or
rcrb
jo
scas
lret
movsb
jo
mov
adc
gs
stos
dec
in
push
xchg
dec
mov
add
mov
dec
xchg
sbb
mov
pop
mov
aad
xchg
repz
push
push
jae
sbb
clc
cmp
lahf
andl
andb
adc
inc
pop
test
push
es
mov
ja
xchg
icebp
jbe,pt
sub
xorl
in
and
mov
fdivp
repnz
filds
into
dec
inc
test
push
dec
ret
mov
aam
mov
in
popf
gs
mov
scas
fs
xchg
mov
jg
pop
dec
adc
push
and
hlt
imul
enter
inc
stc
add
aad
divb
xor
mov
jbe
test
sub
mov
insb
pop
ret
pop
inc
test
jb
mov
pop
push
cmc
sahf
andps
pusha
xchg
lea
mov
lahf
jo
mov
push
pop
fidivl
push
push
aad
nop
hlt
fadds
ficompl
dec
insb
push
mov
ljmp
jge
outsl
scas
push
xchg
adc
popf
into
popa
sub
sub
pushf
sarb
inc
lds
cltd
lods
mov
iret
std
mov
or
pop
mov
jbe
jg
pop
dec
inc
lret
stos
stos
mov
adc
or
pop
cmc
aad
push
ficoml
inc
jo
loopne
jo
dec
popf
pop
cltd
inc
rol
testl
push
xchg
movsl
push
xor
adc
cmp
push
insb
je
pop
fiadds
call
pop
fwait
lods
mov
inc
inc
loop
rorb
mov
mov
scas
xor
add
loopne
sbb
arpl
jge
imul
insl
fnstenv
shrl
test
or
pop
push
sub
cmp
and
add
xlat
stos
push
les
add
and
and
mov
sub
jle
pop
adc
mov
jb
pop
xorb
xchg
xlat
and
fsubrl
and
ds
cltd
lea
xlat
jnp
or
int3
xchg
arpl
add
jp
xchg
mov
and
sbb
and
jp
fs
repz
or
pop
pop
and
idivl
imul
add
xchg
mov
pop
adc
push
push
add
mov
push
jmp
xor
or
xchg
mov
or
mov
popa
adc
js
push
xchg
or
testb
fadd
fisttps
ljmp
xlat
or
cmpb
cltd
or
pop
mov
gs
push
ljmp
rol
popf
in
iret
arpl
inc
sbb
jne
jmp
into
mov
cmp
je
push
test
cs
outsl
stos
add
test
iret
mov
mov
mov
mov
daa
push
cmp
ret
rol
jp
jbe
mov
mov
das
icebp
notb
imul
cmp
sti
push
add
sbb
jp
inc
fcomp
test
stos
mov
mov
fisubrs
adc
push
daa
loopne
mov
je
sti
cmpsl
inc
ret
mov
dec
mov
inc
fisubrl
cmp
imul
jb
call
xchg
cmp
lea
aam
push
out
mov
test
imul
out
jo
jge
push
xor
mov
mov
push
fbld
out
dec
cmpsb
nop
cmpsb
test
sub
push
cmpsb
mov
xchg
mov
sub
and
sub
cmpsl
pop
rcrb
or
cmpsb
push
jae
mov
enter
lock
test
pop
xor
leave
and
arpl
rep
cltd
cmpb
icebp
lret
and
mov
and
or
pop
mov
inc
or
mov
cld
les
in
xchg
icebp
es
adc
pop
mov
xchg
int
fdivl
add
test
jno
pusha
scas
xor
jge
aad
fcmovnb
jne
lret
adc
dec
jae
sti
add
sub
outsl
cmc
push
test
out
rcll
test
lcall
sub
sbb
pop
fiadds
jg
gs
out
popa
iret
cs
adc
mov
lcall
or
xchg
int3
repnz
ja
push
xchg
jmp
call
adc
and
sbb
lds
and
cmpsb
lret
or
stos
push
jno
jge
add
sbbb
add
insl
int
clc
pop
sub
loope
call
ret
mov
rorb
loope
pushf
or
xchg
adc
mov
lret
xor
flds
xor
loopne
and
and
pop
mov
pushf
das
mull
pop
pop
adc
out
jp
scas
pop
pop
pmaddwd
jns
mov
scas
neg
jmp
or
pop
mov
mov
sub
or
push
cmpsb
xor
insl
ret
leave
divl
and
and
adc
jl
mov
adc
ss
xorl
adc
pop
data16
inc
xchg
add
sbbl
lcall
mov
shrl
pop
out
imul
sub
mov
xlat
repz
xor
rolb
lock
sbb
jb
mov
sbb
fidivrs
mov
or
idivb
sub
int3
xor
add
adc
movsl
test
adc
loopew
mov
frstor
insl
ret
jge
test
addr16
pand
mov
inc
or
mov
pushf
mov
int3
mov
in
jb
cmp
rcrl
or
mov
mov
aaa
cmp
sub
ror
ss
ds
mov
push
sti
cmp
pop
sbb
xlat
adcl
outsl
rorl
push
pop
jg
aad
cmp
xor
pop
fsubrs
es
adc
fdivs
test
into
rcll
imul
imul
test
ret
sbb
pushf
adc
ljmp
push
mov
sub
dec
lret
lahf
add
cmp
out
fldenv
sarl
stc
jecxz
xor
loop
cmp
aam
shlb
inc
ds
rorl
mov
loope
dec
adc
in
out
fabs
aam
mov
pop
and
inc
inc
leave
in
dec
cmp
scas
out
insb
outsl
inc
adc
in
mov
and
and
xor
loopne
jns
lods
andps
test
dec
sub
test
xlat
jae
jb
fistl
push
into
jl
xor
ret
add
testl
push
inc
xchg
movsb
mov
pop
aaa
pop
cmp
mov
mov
sbb
test
scas
dec
ud1
push
outsb
in
fimuls
push
push
into
lahf
and
divl
add
dec
jbe
or
adc
push
test
cmp
or
mov
cmc
and
and
cmp
movl
push
sub
xchg
rcll
sbb
call
and
add
pop
mov
stc
adc
cmc
dec
cwtl
sbb
lahf
xor
ds
pushf
ljmp
rcr
pop
sub
and
push
inc
fcmove
minps
scas
js
mov
adc
imul
mov
in
sbb
or
cmp
nop
sub
push
mov
jo
mov
icebp
pop
sub
mov
adc
into
movsl
jg
add
jbe
push
xlat
lahf
out
cltd
push
push
pusha
adc
xor
push
dec
cmpsb
lods
dec
adc
mov
mov
ret
xchg
into
cmp
shr
ljmp
mov
pop
mov
rcrb
dec
ljmp
inc
add
push
sbb
pop
and
pop
dec
fstpl
inc
pop
scas
rolb
in
leave
mov
fs
push
aam
cmp
xchg
cmp
subw
sti
loop
cld
push
mov
inc
and
sbb
adc
dec
jge
mov
lret
in
mov
dec
int3
xchg
pop
pmulhuw
in
faddl
pop
jb
sub
fsubs
and
ljmp
dec
mul
pop
dec
xor
pop
add
adc
mov
jg
sbb
test
pop
lock
adc
or
xor
dec
dec
or
outsb
addr16
and
std
sbb
mov
jmp
jg
imul
cmp
push
jae
xor
jp
scas
jbe
movsl
xlat
add
stos
mov
inc
leave
jle
inc
test
jl
mov
mov
rclb
mov
mov
lahf
sbb
mov
addr16
xor
cmp
adc
push
push
sub
aas
sbb
mov
inc
imul
fwait
and
imul
into
xchg
mov
lahf
lret
sub
dec
ss
ljmp
fidivrl
daa
pop
mov
fistpl
jmp
mov
inc
and
loopne
push
cmpsl
in
xor
nop
sbb
sub
pop
inc
fs
cmp
xchg
pop
xchg
dec
adc
ret
ja
mov
jnp
in
pop
test
lea
cmp
mov
inc
lahf
xorb
dec
inc
jne
fwait
add
pop
mov
das
push
push
or
xchg
xlat
ffree
jge
popa
inc
lock
sbb
lods
in
xchg
addb
sub
push
or
sti
jbe
mov
cmpsl
pop
adc
sti
loope
fisubrs
or
and
jbe
pop
mov
or
rcl
sub
mov
inc
mov
mov
inc
cmp
loope
or
adcb
or
jnp
sbb
orb
or
cmp
test
or
inc
bound
xchg
push
lret
test
cmpl
out
cmpsl
dec
leave
mov
mov
push
sahf
and
mov
and
push
cli
daa
cs
repz
cmpl
sub
sub
stos
push
add
ret
stc
addl
lock
movsb
add
cli
sbb
or
jmp
in
inc
je
mov
xchg
add
aaa
sahf
push
jo
in
or
or
mov
sub
or
pop
cltd
int3
sub
xor
push
adc
or
mov
xchg
fbld
xor
and
add
mov
je
icebp
xchg
sbb
imul
imul
lret
mov
jbe
mov
fcomp
sahf
nop
adc
push
lcall
jns
loope
lahf
mov
lret
in
mov
or
inc
jle
outsb
int
pusha
sub
push
pop
lret
pop
inc
std
in
in
std
mov
lea
add
outsb
addr16
dec
cmove
mov
std
pushf
pop
lcall
in
imul
jnp
xchg
jmp
xchg
movsl
xchg
add
jb
imul
and
and
jecxz
inc
int
lret
js
ret
cwtl
and
inc
jp
pop
inc
ficoml
in
addr16
pop
pushf
mov
xor
and
jnp
mov
jno
pop
dec
push
shrl
add
dec
lea
popa
loope
sarl
enter
ret
mov
cmp
sub
rorb
sub
or
lds
clc
addr16
aad
pop
inc
jg
aas
sti
sub
push
xchg
xor
jecxz
clc
ljmp
test
push
shlb
jb
sti
jg
mov
subl
fwait
jg
mov
push
scas
sub
xchg
cmp
jae
mov
fnsave
or
sub
lods
mov
mov
inc
repnz
sbb
mov
jl
mov
xchg
dec
or
insl
enter
jne
pop
sub
mov
mov
gs
mov
sbb
lock
mov
test
hlt
scas
loope
arpl
jbe
mov
or
int3
and
sub
call
xor
out
fsubrl
xchg
rorl
in
test
cmp
movsb
fidivrs
je
pop
adc
push
lret
adc
sahf
into
pushf
sub
das
aas
in
xchg
stc
pop
imul
sbb
dec
push
inc
mov
cltd
pop
pop
xchg
adc
pop
call
mov
in
in
push
and
mov
rcl
ljmp
jns
xchg
jmp
and
add
inc
push
cli
inc
cli
aam
imul
pop
xchg
aad
mov
pop
adc
pop
push
or
mov
popf
adc
xchg
mov
fs
pop
in
sub
rcrb
les
inc
pop
ret
dec
jae
leave
imul
cmp
mov
aad
add
adc
sbb
sbb
xor
xchg
ja
scas
cld
mov
or
push
insb
addb
andb
fxch
cwtl
nop
orl
aaa
insb
call
mov
adcb
xchg
divb
je
push
lahf
sub
leave
pop
mov
dec
jno
adc
fidivrl
jno
cli
dec
mov
lods
adc
add
imul
xor
sub
sbb
out
cmpsb
ja
cmpsb
sub
ja
int3
xchg
insl
adcl
outsl
out
es
imul
call
hlt
jp
pusha
not
mov
sbb
ljmp
js
inc
and
das
jbe
inc
adc
push
popa
test
add
mov
mov
popa
adc
cltd
sub
lods
inc
pop
push
mov
mov
das
push
inc
xor
popa
sub
sbb
jo
mov
popa
pop
and
pop
or
add
lret
xchg
in
pop
in
loop
testl
sahf
push
dec
aam
jno
mov
cmp
movsl
dec
cmp
ret
mov
dec
mov
nop
jle
add
imul
xor
dec
and
loopne
cmp
test
jmp
cmp
mov
fwait
cmc
push
pop
cli
jecxz
dec
jmp
iret
dec
jg
sbb
in
mov
aas
shll
icebp
cs
inc
mov
cmp
push
pop
sti
push
iret
ret
mov
lret
lods
xchg
pop
and
loope
sarl
stc
clc
pop
jno
mov
cmp
scas
sti
pushf
xor
outsb
lods
lret
mov
clc
pop
shll
loope
xor
fidivl
shll
adc
sub
ret
ljmp
jg
out
sbb
test
mov
lock
sahf
pop
xor
nop
xlat
leave
test
jle
les
xchg
or
sub
sub
fs
push
pop
adc
xchg
dec
adc
mov
ficoml
outsb
add
pop
jbe
daa
jl
out
mov
mov
push
jns
loop
mov
stc
lahf
test
gs
fadds
xlat
cs
lahf
in
filds
lock
adc
xchg
int
or
test
mov
inc
sbb
lahf
and
push
cld
xlat
mov
subb
dec
mov
out
shl
sub
loope
and
jns
dec
dec
pop
push
ret
and
bound
jg
test
or
fsubrs
cli
and
gs
mov
fimull
imul
aam
fwait
push
jg
inc
rol
pop
jge
add
dec
mov
dec
es
sub
das
in
scas
jmp
sbb
jg
mov
imul
sahf
out
jnp
sbb
sbb
hlt
stos
mov
test
addr16
dec
mov
jg
insb
scas
inc
mov
mov
inc
into
or
mov
cmp
mov
mov
push
fimull
jl
pop
ja
xchg
lods
xorl
lcall
inc
mov
adc
aaa
test
ja
ds
adc
cmpsb
aad
aaa
xchg
lahf
pushl
xchg
xchg
jl
cld
add
or
inc
mov
inc
addr16
ja
jmp
jb
sub
push
sub
adc
out
jb
imul
js
cmp
insl
fmull
and
ret
movsl
dec
cmp
notl
mov
pop
jne
outsb
fnstcw
adcl
cmp
and
int3
adc
in
or
jb
fs
mov
xor
adc
stos
inc
sbb
push
pop
xchg
icebp
movsb
aad
or
jp
cmp
call
cmp
sub
lret
xor
push
sbb
fmuls
int3
xchg
inc
cwtl
dec
xchg
std
test
inc
test
pop
mov
popf
jb
push
dec
movsb
std
mov
xchg
jle
xchg
and
cmc
push
push
add
and
test
rcrb
fistl
je
fwait
rcrl
stos
enter
mov
mov
lock
and
leave
stos
enter
inc
fincstp
mov
into
or
lahf
sbb
add
xchg
nop
ljmp
and
or
pop
sbb
jl
push
insb
in
aam
es
lret
movsl
inc
ss
or
hlt
adcl
mov
dec
fstl
int
push
in
arpl
repz
jno
dec
or
jecxz
cltd
out
aad
and
dec
data16
cwtl
cmp
pushf
ficompl
xchg
cmovae
jno
xchg
jbe
arpl
or
or
lahf
cs
xor
jl
lods
push
push
xor
xchg
roll
hlt
aas
inc
js
mov
jae
cmpxchg
out
call
xlat
imul
pop
jle
dec
jmp
fstpl
push
and
fcomps
cs
pop
icebp
add
jl
aam
cmp
cli
out
call
jl
repz
jno
pushf
pop
je
jb
adc
or
mov
adc
repz
sarl
ss
ljmp
jns
xor
lds
dec
sbb
bound
push
testb
cmp
fisttps
lahf
pop
enter
icebp
xchg
leave
aad
sarb
mov
cmp
movsb
mov
dec
loop
sbb
push
jns
dec
pop
ret
or
and
movsl
enter
mov
lods
and
cmpsb
push
mov
popa
fistpl
push
xchg
hlt
cmp
inc
jmp
or
jo
or
mov
cmp
icebp
out
in
push
mov
shlb
aaa
cmp
and
fmull
pop
sbb
in
cmp
inc
pop
fs
jo
push
add
push
cli
xlat
or
xchg
movsb
mov
sti
cs
test
lcall
cltd
pop
out
push
push
sbb
cwtl
jg
into
mov
add
push
insl
enter
lods
arpl
ja
adc
mov
aas
or
sub
dec
jp
shll
mov
mov
pop
mov
push
movl
push
push
mov
jns
jp
push
inc
shl
dec
call
cmp
and
adcb
and
inc
jns
hlt
push
fistpll
pop
sub
jge
leave
dec
xor
pop
dec
mov
ljmp
jp
lods
sti
rorb
add
mov
cmp
add
push
jge
andl
sbb
mov
inc
jno
cmp
cmp
dec
or
jns
stos
stos
or
and
inc
popa
sub
xor
inc
fdivl
outsb
in
xchg
mov
push
xchg
dec
inc
pop
addr16
add
loopne
daa
pop
push
fidivrs
cmc
sbb
mov
fstpt
sbb
and
cwtl
or
jg
sub
sbb
clc
mov
dec
inc
sbb
xchg
lcall
imul
fidivrs
sar
mov
push
pop
movsl
jge
arpl
test
sub
dec
adc
adc
push
jae,pt
movsl
lods
sbb
daa
xor
decb
sbb
inc
jb
shll
add
clc
mov
lea
mov
fwait
ss
jb
fcomp
xchg
call
pop
xchg
and
imulb
jecxz
or
hlt
adc
pop
cmp
push
jmp
lret
sub
inc
dec
gs
aaa
push
aam
add
jbe
mov
stc
out
dec
mov
cmp
test
ss
mov
push
fwait
aas
cmc
sub
rcr
iretw
jl
mov
in
push
scas
insl
imul
and
icebp
mov
outsb
push
mov
hlt
roll
dec
sbb
sbb
mov
jne
ja
xlat
mov
add
dec
icebp
mov
adc
and
mov
outsl
adc
pop
mov
mov
out
daa
mov
cmp
jl
xor
decl
jle
sti
mov
leave
pop
rcl
pop
fnstenv
cmp
scas
loope
pop
rcl
es
push
xchg
jo
xor
outsl
jno
inc
lea
xchg
xchg
adc
mov
cmpsb
out
fidivrs
lds
repnz
push
jns
incl
fstl
jmp
xchg
or
daa
fildl
sbb
push
inc
leave
adc
int
inc
out
imul
mov
pop
mov
pushf
mov
cli
push
adcl
in
aas
out
bound
lret
repnz
daa
aas
jbe
add
sub
mov
jae
dec
jbe
out
sti
mov
jge
mov
icebp
xchg
or
mov
push
push
or
fldenv
mov
inc
inc
pop
gs
inc
ret
jbe
lcall
or
inc
add
add
dec
xchg
or
fistpl
mov
cmp
push
and
mov
pop
cli
test
and
or
fbstp
mov
in
mov
add
sahf
inc
ret
xlat
cmp
xchg
mov
sarb
mov
adc
out
or
rep
sub
push
lahf
rolb
stos
add
pop
inc
lods
jns
shl
inc
test
fildll
fldt
jnp
inc
fsubr
in
out
mov
cltd
mov
lods
and
cmp
icebp
mov
pop
xchg
sub
inc
push
sbb
adc
gs
xacquire
mov
cwtl
push
push
les
cwtl
sbb
jno
dec
xlat
popa
push
inc
cmp
out
aas
aas
lcall
insl
lcall
es
into
cmpl
push
lret
bound
cmp
cmp
push
rclb
nop
pushf
jl
popf
mov
pop
aas
inc
xor
lret
jge
lcall
rcrl
mov
outsb
stc
mov
clc
mov
imul
arpl
aaa
daa
lcall
outsl
sub
jg
adcl
mov
or
loope
outsb
std
adc
xor
pop
pop
or
das
rorb
mov
scas
or
nop
or
enter
decl
into
imulb
mov
push
aad
out
sub
ficompl
sub
xchg
adc
push
pop
ja
and
sti
push
faddl
sbb
and
or
mov
mov
adcb
jbe
sbb
jp
rcrl
daa
shrb
sbb
dec
out
movsb
mov
pop
cmp
dec
xchg
insb
cmp
push
ds
jae
daa
pop
sbb
insl
mov
into
insl
mov
mov
adc
xchg
lret
sarl
sbb
dec
xor
sti
push
and
cmp
or
jmp
cmp
adc
mov
mov
cs
ss
lds
jl
int3
lods
jmp
or
inc
jle
cli
punpckldq
icebp
jo
out
mov
inc
inc
es
pop
fsubl
pusha
ret
stos
pop
cmp
fimull
xor
dec
pop
mov
mov
cmpsb
sbb
cmp
jl
les
adc
mov
mov
jecxz
or
ret
and
lods
pushl
enter
sti
cmpsb
fmulp
imul
mov
mov
inc
or
push
push
sahf
int
arpl
push
lods
lret
xchg
inc
push
adcb
xchg
pop
mov
mov
mov
push
pop
aas
iret
out
adc
out
mov
cwtl
sbb
lret
or
cmp
cwtl
jge
outsl
and
mov
loop
jecxz
mov
mov
dec
daa
popf
mov
test
jae
pop
movsb
je
pop
push
lea
and
xchg
push
or
mov
adc
outsl
stos
movl
xchg
movsb
loope
lcall
popa
mov
fisubrs
pop
mov
push
mov
cmp
test
jp
xchg
sarb
cmp
pop
in
shlb
sub
outsb
scas
jns
sarl
sub
cli
orb
adc
cli
inc
push
dec
ja
sbb
mov
cmp
pushf
mov
sahf
insl
ret
testl
dec
mov
jne
repz
dec
stos
xor
mov
lret
dec
mov
je
or
pop
sub
inc
mov
push
aam
call
add
repz
adc
xchg
add
jle
out
pavgw
aas
pop
lods
das
mov
bound
add
lahf
test
rcll
pop
dec
sarb
pop
stc
inc
cmpsl
enter
cmp
adc
xchg
fcomi
in
sbb
pushf
xor
push
mov
mov
jle
add
pop
push
in
dec
pop
ljmp
movsb
pop
into
into
clc
imul
aam
adcb
xor
mov
jl
jb
leave
pop
imul
lahf
pop
jo
sub
mov
out
or
push
sahf
sbb
push
lock
dec
cltd
aaa
jge
leave
arpl
xor
mov
and
popa
ret
std
push
jo
inc
cmp
fildll
inc
inc
cs
xor
rorl
adc
jbe
lcall
mov
jmp
sub
mov
aas
jo
add
aad
mov
pop
neg
rcpps
fmuls
jp
leave
jge
loopne
sbb
sub
jp
add
aaa
cmp
pop
jmp
mov
or
fmul
test
mov
jnp
mov
inc
dec
jno
das
ja
jl
pop
loop
xor
adcb
push
in
inc
dec
pop
sahf
popf
adc
test
jb
jecxz
cmp
add
mov
daa
and
lock
mov
mov
pop
mov
jo
add
mov
jg
pop
sbb
ja
mov
fcompl
cmp
addr16
je
in
cmc
dec
arpl
rcrb
movsb
push
adc
add
lods
add
fildll
jge
aad
in
enter
loope
mov
pusha
hlt
aaa
push
pop
jb
jl
test
std
jns
out
je
call
mov
inc
push
das
bound
xor
or
mov
aad
pop
pop
pop
pop
dec
cltd
sarb
xor
add
and
inc
xor
adc
mov
leave
mov
pop
or
gs
push
nop
add
lcall
xchg
jg
insb
mov
call
pop
push
outsb
enter
cmp
outsl
and
or
stos
loope
jno
dec
mov
jp
mov
xor
add
vmread
dec
inc
outsb
mov
aam
sbb
fwait
sub
mov
and
pop
cli
outsb
jecxz
sbb
shl
outsl
adcb
sub
sbb
xchg
jns
inc
mov
mov
jge
jnp
adc
mull
xor
sbb
test
pushf
fbstp
jmp
push
jg
iret
xor
dec
insb
pop
adc
fdivr
fdivp
jbe
subl
jmp
xor
cld
inc
or
cmpsl
pop
adc
xlat
call
adc
dec
test
inc
test
mov
scas
vpminsw
pop
rcrl
push
mov
jns
mov
out
ds
inc
out
adc
mov
call
dec
xor
xlat
sub
enter
pop
sub
dec
sahf
call
sbb
push
out
std
lods
xchg
insb
js
ret
dec
pushf
loope
cs
clc
fmull
negl
movsl
icebp
aad
fdivrl
idivb
sbb
clc
out
aaa
or
in
out
lods
stc
adc
jne
cmp
fdivl
xchg
push
jae
sbb
sarl
cmp
push
jmp
xor
inc
movhlps
scas
insb
ja
insl
ss
push
mov
scas
ja
inc
mov
add
jae
out
std
scas
adc
adcl
inc
enter
test
adc
sbbb
in
xor
fcomps
xlat
stc
scas
ret
cmpsb
sarb
stos
push
adc
sbb
sub
je
mov
fisttpl
push
daa
or
xlat
mov
xchg
popa
in
sbbb
pop
and
jb
sbb
and
cmp
mov
push
push
scas
sahf
shlb
sub
mul
hlt
cmp
dec
mov
push
faddl
lods
mov
stos
jecxz
fs
std
inc
loope
icebp
movsl
jno
lods
cmp
test
pop
lret
fldl
jp
adc
push
dec
imul
cmp
xor
sbb
jmp
dec
mov
jae
test
cmp
call
and
pop
mov
lock
jb
pop
lds
pop
ljmp
xchg
jne
in
sbb
shlb
fldl2e
add
pop
add
lcall
and
ds
jne
pop
push
mov
dec
pusha
std
nop
imul
cmp
xchg
ret
pusha
test
pop
test
aaa
push
outsb
sub
fcompl
daa
fmul
push
mov
mov
xor
btr
push
cwtl
sub
inc
aaa
movsl
pop
iret
cmp
jmp
jle
cmpsb
mov
or
mov
nop
jbe
lea
inc
push
test
pop
cs
pop
pusha
inc
or
out
insl
lock
hlt
jae
js
int3
or
mov
push
cld
js
shr
push
push
cs
mov
adc
mov
sbb
or
mov
leave
lock
fwait
or
lock
jmp
incb
xchg
cmp
and
sbb
mov
cmp
jl
mov
pushl
sbb
fbld
cmpsl
or
mov
push
add
ret
shlb
add
push
xlat
iret
fidivs
stos
negl
xchg
loope
cmp
jb
mov
mov
mov
and
sbb
fst
xor
mov
movsb
sub
ficompl
adc
jge
lods
lret
flds
pop
out
loopne
rorb
mov
pop
das
lea
je
push
scas
das
std
xchg
pop
fisttps
mov
cmc
xchg
scas
xchg
rol
xor
out
push
lret
je
cmc
add
mov
pop
mov
inc
out
mov
pop
hlt
ja
push
int3
jl
dec
in
cli
inc
jb
xchg
lret
push
pop
fisubrl
cs
sbb
xchg
pop
cmpb
lret
sub
sarl
jmp
mov
pushf
ficoms
add
jo
push
bnd
stos
or
xor
jmp
sbb
aam
fimull
mov
imul
and
or
clc
lods
outsl
stos
xor
imul
out
jle
out
iret
cmp
push
lcall
xor
xchg
in
lock
xchg
and
push
repz
les
adc
pop
lret
jp
lods
cmc
arpl
inc
add
into
sub
mov
adc
push
shlb
push
cmp
mov
cltd
int3
adc
outsb
mov
movsb
les
xchg
mov
in
hlt
out
mov
mov
jnp
data16
or
pop
aam
xchg
inc
mov
add
movsl
pminub
adcb
jbe
int
lods
pop
jmp
iret
dec
pop
jle
inc
mov
pop
rcl
push
cmp
lret
jb
aas
stc
add
jecxz
push
out
lretw
movsb
out
mov
add
push
andl
sub
cltd
enter
out
and
xor
adc
fldcw
stc
cmp
mov
sub
outsb
jecxz
mov
dec
insb
push
mov
loop
repnz
xchg
and
aad
cmpsb
test
ret
xchg
adc
loop
popa
popf
sub
cmp
inc
js
cmp
int3
cmp
mov
insb
sub
leave
inc
push
popa
xchg
mov
pop
pop
xor
mov
loop
movsb
in
jne
jl
xchg
int3
cmp
cmp
adc
int
rolb
adc
movsl
mov
andl
or
cmp
xor
movsl
xor
or
xor
jle
ret
xchg
or
cmp
adc
test
shll
mov
sahf
jge
into
mov
outsl
mov
leave
filds
repz
sbb
int
jae
jb
lcall
dec
std
add
pop
iret
adc
xor
pusha
add
pusha
xlat
jle
shr
adc
mov
adc
mov
xchg
lds
jecxz
roll
lret
dec
jns
into
shll
in
jl
push
jb
hlt
movsb
scas
mov
imulb
cmpsb
xchg
adc
jmp
push
je
inc
insb
add
sbb
xor
or
inc
lods
mov
nop
sbb
out
sar
test
ss
adc
cs
arpl
inc
xchg
xchg
jo
stc
scas
and
ss
fcmovu
jg
mov
adc
jmp
cld
popf
jg
xchg
add
int3
push
or
jno
or
dec
xor
lcall
cmp
xlat
pop
cmp
repnz
jle
imul
sub
lret
loop
cld
and
pop
push
or
jne
jns
out
incl
sarb
inc
and
es
les
cmc
sbb
pop
or
xor
into
fstpl
jne
mov
push
mov
adc
pop
push
mov
imul
js
lret
adc
adc
jae
mov
mov
cmp
fnsave
cmc
mov
fisubrl
lock
aas
fdivl
add
int3
repnz
lds
adc
inc
sbb
lret
in
add
test
xor
stos
inc
test
mov
mov
jo
sti
xchg
mov
xlat
mov
add
jae
xor
js
andl
in
lock
pop
pop
cmpsb
inc
fadds
push
and
in
cmc
cmc
lea
and
jbe
jg
cmp
mov
push
daa
loopne
push
icebp
push
out
cmp
int
rcrl
inc
into
inc
in
dec
adc
fidivl
and
idivl
ffreep
addr16
mov
rol
jle
mov
cmpsl
aas
push
int
pop
stos
lds
insb
fdivs
lods
sahf
es
fs
xchg
push
popf
sahf
mov
or
sti
jne
cmp
push
fnstcw
jmp
faddl
scas
popf
pop
lea
push
sarl
mov
mov
movsb
das
cwtl
mov
sub
jle
mov
jae
adc
rolb
inc
loopne
push
push
in
out
cwtl
stos
stc
aad
push
push
ss
adc
sbb
mov
fisttpl
hlt
ret
jne
jne
faddl
cmp
jns
lds
fcomps
mov
pushf
aaa
xchg
cwtl
neg
jae
mov
or
std
sbb
aaa
testl
dec
aas
lcall
ds
xchg
push
xor
mov
mov
jbe
sbb
and
inc
cmp
cmp
mov
mov
sbb
scas
lret
mov
data16
dec
lock
cmc
sbb
add
xor
popf
xor
inc
int
testl
lahf
add
iret
mov
rcrb
push
fcomip
mov
add
jmp
mov
inc
sbb
mov
jnp
aas
rcll
in
out
fbstp
imul
adc
aas
mov
ds
push
ja
xor
inc
sti
popf
in
imul
xchg
inc
xlat
leave
mov
popa
fwait
outsb
lea
pop
call
sub
pushl
movsb
pop
jb
cmpsb
push
in
aad
bound
sbb
mov
push
aad
mov
mov
mov
scas
stos
fwait
cmp
cs
mov
addl
scas
sub
pusha
inc
test
mov
out
mov
cmp
leave
fists
jno
ret
std
adc
ljmp
and
lods
test
call
loopne
sbb
addr16
fcmovnbe
bound
je
add
adc
push
push
sub
stos
xor
xor
outsb
or
lret
imul
adc
fimull
pop
add
cmp
cmp
mov
scas
fldcw
dec
lock
cmp
roll
test
lods
stos
jae
xchg
sbb
jmp
push
dec
mov
rcl
push
jb
jns
and
and
or
mov
mov
pop
out
arpl
sub
lea
mov
sahf
xchg
loopne
and
fiadds
lret
decl
jae
xchg
lsl
jb
cld
shrb
pop
inc
add
test
dec
out
imul
sahf
fisubl
outsb
mov
or
add
sub
enter
sbb
pop
sarb
test
xchg
mov
mov
adcl
ret
dec
das
cmc
gs
and
rorb
int3
jecxz
clc
fcmovu
inc
jmp
lcall
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
cmpsb
sub
mov
sbb
stos
jb
in
rol
test
lods
cmp
adc
mov
mov
cmpsl
push
faddl
cmpsb
aad
mov
or
pop
cwtl
movsb
mov
add
in
xor
dec
lds
fldlg2
ds
and
fcmove
push
outsb
or
jno
or
xor
xchg
rcrb
mov
pop
pusha
push
cmpsl
inc
mov
pop
mov
mov
scas
inc
scas
sbb
and
and
push
stc
jae
filds
pusha
or
mov
ss
or
mov
daa
sbb
mov
mov
call
xor
stos
lods
sub
jmp
pop
inc
push
xchg
push
xor
hlt
jbe
movsl
push
and
dec
rcrb
or
pop
in
inc
push
mov
mov
gs
mov
adc
inc
ljmp
cmc
mov
gs
fisubs
push
mov
sarl
dec
imul
push
add
hlt
pop
pop
inc
repz
lcall
inc
sahf
mov
mov
push
ds
rcr
sub
mov
and
pop
inc
xor
dec
mov
jp
dec
xchg
pop
sarb
stos
clc
dec
inc
insl
jge
jle
mov
mov
fwait
movsb
test
mov
xor
adc
in
cli
sub
push
sbb
or
and
lahf
mov
ja
movd
mov
js
push
nop
sbb
pop
pop
mov
call
mov
stos
rep
jno
aad
scas
jl
insb
enter
fwait
mov
lods
aas
sbb
or
jle
mov
mov
cli
aas
sub
cmpsl
test
xor
xchg
mov
mov
ds
rcl
imul
or
adc
adc
leave
iret
and
inc
icebp
adc
jecxz
jp
mov
int3
imul
cli
or
adc
mov
xor
cmova
jae
fisubl
mov
out
fdivrp
mov
sbb
iret
push
xor
ljmp
pop
stos
jle
pop
pop
lods
cmp
xor
add
adc
popf
push
cmp
dec
mov
stc
loope
ljmp
dec
lret
push
pop
xchg
or
daa
or
mov
cmp
es
addr16
add
pop
cmp
aam
pusha
mov
ja
in
jb
jae
jbe
adc
lret
and
jge
pop
imul
jl
ljmp
jg
into
xor
or
loope
das
mov
scas
rclb
jbe
in
sub
into
popa
dec
mov
add
jge
shl
arpl
mov
sbb
sub
mov
mov
inc
sahf
push
adc
shr
loop
jecxz
and
sub
sub
inc
jecxz
movsb
add
push
andb
xor
leave
sbbl
in
pop
inc
aas
rcrb
jb
loop
das
sub
faddl
ds
loope
lcall
or
cmpsb
inc
push
fcompl
lock
aam
ret
push
and
or
adc
mov
mov
out
imul
xchg
jae
pop
sbb
es
cli
cmpsl
repz
add
jo
mov
sbb
jbe
adc
stos
mov
add
insb
mov
insb
dec
cli
mov
lcall
push
mov
cli
lods
int3
dec
fldenv
into
pop
pop
mov
rcl
loop
outsb
lret
pop
add
std
mov
lods
mov
mov
ret
es
pusha
pop
movsl
mov
and
xchg
inc
adcb
pop
and
clc
cmp
daa
add
jecxz
and
adc
shll
testb
adc
lret
fwait
pusha
xchg
sub
mov
fsts
dec
in
mov
push
inc
int3
imul
sarb
cmp
xor
dec
stos
xor
xchg
dec
ljmp
shrl
repnz
mov
inc
stos
mov
nop
mov
cmp
and
lret
ret
nop
pop
fstps
adc
outsb
xorb
inc
push
out
das
aam
adc
xor
jb
jae
lret
out
aad
faddl
ds
aam
scas
push
ja
imul
jb
mov
jnp
out
cwtl
aam
aad
sbbb
lods
pop
xor
lods
les
jb,pn
lock
adc
nop
lahf
dec
push
inc
mov
cmc
shll
mov
jnp
dec
or
add
cmp
xchg
mov
and
add
add
cmp
jmp
lcall
sbb
inc
mov
sbb
rcrb
orb
jl
sbb
bound
adc
ret
push
adc
or
push
pop
jp
adc
push
xor
ss
dec
ja
xchg
mov
xor
lret
into
or
mov
xor
repz
addb
unpcklps
cwtl
mov
and
adc
call
sbb
rolb
andb
mov
mov
push
fwait
adc
and
jp
faddl
xchg
and
pop
vpmaxub
xchg
sub
jmp
pop
fcoml
test
add
push
aaa
jmp
leave
lds
or
cltd
call
xor
xchg
cld
pop
push
mov
cmp
adc
mov
adc
sbb
lods
dec
push
and
rcrb
pop
in
js
fldenv
push
sarb
sub
mov
jbe
orb
add
mov
sub
lret
and
jo
adc
pop
adcb
test
outsl
out
xor
ds
icebp
in
fsubrl
push
cmp
lret
inc
stos
and
in
subl
xchg
xchg
xchg
pop
adc
jns
scas
in
xlat
xor
fidivrl
inc
in
lds
addr16
gs
enter
cwtl
sbb
adc
sbb
je
pop
outsl
int
pushf
pop
stc
cli
loope
cmp
jge
push
fsincos
add
and
cs
jbe
and
jl
add
bnd
iret
or
scas
fstp
add
push
jnp
roll
push
shl
jb
pop
adc
nop
mov
pop
imul
mov
rclb
sub
mov
cmc
mov
jmp
scas
rcl
push
lcall
ljmp
jno
cmp
add
lods
pop
negl
mov
sub
mov
cmpl
pop
jb
js
hlt
inc
dec
int3
push
ja
sahf
mov
cmp
push
xchg
stos
adc
enter
lock
popf
pusha
je
sbb
pop
dec
dec
lock
leave
repnz
xor
or
sbb
xchg
leave
sbb
pop
jb
mov
sbb
les
inc
je
idiv
std
stos
xchg
bound
loopne
movsl
in
cmpsb
or
lods
jbe
pop
mov
inc
lcall
mov
nop
cli
jecxz
push
loope
push
cmp
dec
cmp
pop
inc
push
les
sahf
sbb
and
std
cltd
add
mov
pusha
pop
movsb
cmp
mov
pop
xchg
imul
push
dec
mov
das
add
or
sub
in
cmp
cmp
int3
xchg
cld
mov
cmpsb
in
test
add
pop
int3
cwtl
pusha
add
xchg
xor
aam
insl
mov
aam
shr
cmp
int
push
fsubrl
or
jp
mov
mov
sub
rclb
punpcklbw
in
imul
push
mov
insl
ds
xor
cli
sahf
push
test
push
bound
pop
daa
cmpsb
or
sbb
inc
sub
xchg
inc
and
xchg
pushf
or
sahf
fistps
test
popa
fcoms
jno
jno
mov
outsb
and
bound
ficoms
stos
sub
negb
jb
or
insb
add
sub
sub
mov
aam
test
cltd
into
mov
mov
mov
fstps
popa
add
sbb
sbb
adc
aad
in
mov
push
jbe
mov
mulb
pop
popa
add
in
push
jmp
mov
jge
shl
xor
imul
outsb
sub
imul
sahf
fsubp
stos
pop
sub
push
or
sarb
cmp
inc
ss
adcl
push
mov
lret
pop
add
sbb
push
sub
adc
fld
ret
adcb
xchg
xchg
fcomi
jne
orb
out
shrb
and
in
push
jo,pn
cmp
adc
dec
sbb
leave
xchg
pop
test
dec
lock
cwtl
pop
cmpsb
mov
imul
xchg
dec
and
xor
jbe
orl
nop
adc
push
inc
sarl
sbb
adcb
cmp
and
mov
rcrl
adc
cmp
cs
xchg
mov
hlt
movsb
mov
xchg
out
fs
xor
outsb
inc
cmpsb
xor
xchg
fcompl
jl
fistl
jnp
xor
sbb
loopne
int3
push
and
xchg
mov
aam
sbb
or
shl
div
mov
aas
outsl
and
add
mov
add
and
divl
push
divl
es
lahf
xchg
push
rcll
inc
mov
push
scas
jp
test
xchg
add
stos
gs
andb
je
mov
cwtl
ficoml
insb
jae
dec
jnp
mov
sub
scas
dec
adc
gs
mov
dec
clc
je
dec
in
add
or
mov
adc
jo
out
mov
mov
add
bound
inc
cmc
inc
push
cmpsl
test
mov
into
push
pop
sti
leave
mov
stos
cmc
insl
add
inc
xchg
andb
ret
mov
cmp
out
and
pop
testl
pusha
or
mov
cmp
inc
adcl
xchg
adc
jg
imul
test
fs
nop
int3
out
cld
ljmp
jne
arpl
inc
fistps
sbbb
pop
jnp
out
push
sbb
pusha
cmp
jo
mov
inc
mov
push
xchg
cmp
ja
ja
stos
dec
adc
iret
sub
or
enter
sahf
shll
into
rorl
inc
and
jo
iret
pop
jge
idivb
pop
jge
and
xchg
fiaddl
orps
enter
nop
lods
dec
andb
and
ret
mov
les
dec
ss
adc
andl
sbb
je
xchg
test
lret
imul
dec
pop
repz
mov
inc
cmp
xchg
pushf
inc
adc
int3
xchg
mov
fists
mov
xlat
aas
js
push
repz
cmpsl
jecxz
push
rcll
mov
adc
sbbb
outsb
cmp
mov
arpl
lods
sub
cli
stos
inc
aaa
insl
cmp
arpl
sub
orb
hlt
mull
test
jo
ja
mov
icebp
flds
dec
mov
scas
jge
les
push
sbb
mov
ds
adc
arpl
push
push
pop
xchg
or
ss
cwtl
adc
pop
loopne
sbbb
dec
imul
xor
movsb
or
cmp
clc
fistps
xchg
push
mov
cmp
aas
push
outsl
xor
jns
push
or
jnp
and
andl
out
rcrl
data16
push
mov
mov
inc
jbe
pop
mov
dec
sub
fwait
mov
pop
cmpsb
fiadds
mov
in
sub
sbb
mov
dec
xchg
jno
lock
mov
cs
mov
sbb
cmp
mov
push
xchg
inc
lsl
popa
pusha
inc
repnz
fs
mov
pushf
xlat
lods
andb
and
cmpl
subb
lahf
jae
paddusw
js
aas
cmpb
mov
add
or
fnstenv
pop
fcoml
das
shl
movsl
insl
fisubrs
push
js
sbb
inc
adc
mov
sub
pusha
gs
sbb
in
xchg
sub
dec
int
inc
dec
fists
xlat
test
leave
test
cmp
mov
or
dec
ret
mov
addr16
sub
jl
test
xchg
cmp
cltd
add
cmp
fwait
xchg
not
ss
mov
pusha
gs
test
inc
mov
mov
out
dec
pop
sbb
cmp
sub
push
loopne
push
lods
out
pop
xchg
dec
sbb
pop
add
pop
pop
rol
in
fsubrl
ds
sbb
inc
add
out
jl
lret
jno
daa
scas
sub
lods
imul
lahf
xchg
push
sbb
xchg
mov
sub
dec
pusha
xor
setae
jle
jp
and
scas
push
into
mov
sbb
xor
das
movsl
sub
jns
mov
jecxz
test
xor
jle
mov
cmp
in
sbb
pop
xchg
jg
shrb
pop
gs
repnz
or
roll
or
jle
jg
imul
lock
jp
aas
insl
mov
and
add
inc
outsb
jbe
fnstcw
pop
pop
add
fadds
mov
lds
loopne
repnz
dec
cs
pop
mov
jecxz
mov
xchg
mov
out
pop
add
push
mov
inc
and
mov
lods
into
adc
in
sbb
loop
mov
test
jg
dec
notl
pop
sub
push
dec
dec
inc
pop
cmp
movq
xchg
and
loopne
cwtl
or
adc
out
or
inc
loopne
iret
adc
int
adc
in
mov
stos
dec
and
addl
gs
fstp
pop
subl
pop
cltd
mov
outsb
adc
mov
pop
cmp
test
in
cmpsb
xorl
ret
rcr
pop
xor
in
pop
inc
sahf
ror
inc
push
xchg
gs
ret
push
sarb
mov
bound
xchg
subb
dec
xchg
mov
adc
add
xchg
jg
add
call
stos
mov
or
xor
fs
push
xchg
inc
adc
fstpt
add
mov
loop
cmp
and
testb
rorb
mov
cmpsb
push
inc
jmp
cwtl
nop
fsubr
add
in
xor
test
pushf
xchg
mov
push
in
xchg
rclb
add
jp
nop
int
leave
std
mov
push
inc
cs
and
mov
push
lock
out
pop
mov
sbb
ret
int
jmp
jb
fstps
test
mov
mov
ljmp
jno
cwtl
cmpsl
cwtl
mov
push
cmp
cmp
leave
imul
or
les
push
push
stc
das
push
mov
mov
inc
pop
std
pop
outsl
or
lock
or
lret
push
mov
test
popa
testl
add
scas
jg
cmp
push
pop
mov
lahf
adc
aam
adc
test
enter
lcall
jno
arpl
add
out
or
dec
mov
cs
addr16
cmp
mov
mov
testl
daa
ror
cmp
xor
sahf
aad
popf
clc
outsl
mov
cmp
add
inc
add
std
cwtl
push
mov
jp
lret
inc
inc
dec
xchg
or
adc
sub
xorl
jle
sub
cmp
lods
jp
jp
sbb
push
mov
in
mov
or
xor
jge
xchg
mov
out
data16
cmp
add
lea
repnz
sahf
mull
mov
loop
xor
dec
cmpsl
in
cli
loope
rorb
sbb
fimull
jno
pop
sbb
out
adc
sarl
dec
insl
mov
pop
repz
jge
or
rcrl
mov
cmp
repnz
shlb
inc
popa
mov
and
or
jmp
push
scas
je
out
sub
lods
jne
aas
jg
scas
lret
push
lret
xchg
daa
mov
pop
cmc
adc
or
push
sbbb
outsb
clc
mov
lahf
repnz
ret
xlat
pop
lret
sbb
xchg
xchg
sbb
sbb
addl
out
add
sarl
popf
push
jle
shlb
popf
fcmovne
fbld
fxch
lods
xor
bnd
aaa
ljmp
mov
pusha
dec
shr
mov
adc
std
pop
add
mov
lcall
ds
sub
nop
push
dec
mov
push
mov
das
cltd
shrl
fnsetpm(287
push
sbb
daa
pop
lds
aas
popl
cltd
insb
rcll
lock
es
mov
stos
xor
and
mov
push
cmp
pop
imul
test
mov
mov
pop
lods
int3
pop
movb
sti
add
ret
xlat
cmp
insb
adc
sti
mov
mov
sbb
dec
jae
mov
fwait
dec
push
cs
cmpsl
sbb
shrl
in
sub
inc
jbe
pop
out
cltd
in
xchg
mov
test
jmp
dec
cs
mov
in
orl
dec
das
sbb
add
mov
and
cwtl
sti
push
ja
pop
jle
scas
in
daa
stc
lret
mov
into
inc
mov
push
ffree
inc
add
jmp
imul
cmp
jbe
push
pop
pop
lret
adc
or
and
ds
jle
add
ljmp
clc
jmp
rcrl
shll
mov
xchg
out
les
fisttpll
lock
adc
cmpl
xchg
jmp
cmc
mov
int
xchg
testl
test
add
sbb
and
je
movb
jno
jp
adc
outsb
jg
es
shlb
test
adc
repz
jge
daa
xchg
push
movsl
clc
sbb
movsb
cmc
imul
pop
pop
lahf
mov
xor
inc
jbe
and
mov
sub
decl
jp
push
aaa
pop
sahf
xorb
dec
popa
and
pop
add
mov
xor
and
pop
xor
loopne
xor
adc
mov
gs
stos
test
xchg
test
leave
pop
dec
aam
hlt
daa
and
jae
and
inc
mov
ljmp
repnz
daa
mul
mov
sbb
jp
jp
aad
mov
dec
jle
push
or
pop
xor
cmpsb
xor
cmp
or
movsl
adc
pop
and
pop
sbb
lea
inc
pop
call
pop
jp
popa
orb
mov
insb
xor
cmp
rorl
dec
add
iret
aaa
inc
mov
es
out
dec
xchg
inc
push
pop
inc
mull
lods
push
or
jb
test
dec
add
imul
xor
push
xor
cltd
adc
enter
xor
daa
xchg
mov
push
stos
jecxz
lret
mov
movups
xchg
dec
inc
sub
jne
je
nop
gs
lcall
repz
and
jnp
sarb
adc
push
pusha
xchg
inc
ficompl
sbb
jbe
sar
arpl
aaa
arpl
mov
dec
jge
dec
dec
jbe
dec
cmc
push
xor
jmp
aaa
sbb
pop
or
popa
lret
scas
adc
fiadds
faddl
sbb
lods
leave
cmp
cmp
inc
push
fldenv
loope
or
ds
sbb
std
or
iret
jbe
fistpl
pop
repnz
gs
mov
adcl
sbb
sbbb
aas
subb
sbb
inc
adc
and
ss
push
cmpsl
and
test
sub
push
outsb
call
imul
rorl
dec
jae
lret
and
xchg
movl
cwtl
shrl
sbb
ficomps
ds
pop
pop
cmpsb
sbb
or
dec
dec
xor
push
in
jns
mov
mov
pop
xor
jg
adcb
cld
scas
addr16
pop
lea
sbb
push
shrb
sti
mov
add
scas
add
in
mov
pop
or
cmc
mov
xlat
jne
xor
shrl
jmp
jl
pop
and
aam
cmp
cmp
clc
das
jge
cmp
sbb
inc
mov
jge
pop
out
sti
add
adc
jns
sub
sub
faddl
mov
ds
push
and
test
test
dec
dec
dec
popa
sbb
jne
mov
mov
mov
lahf
lock
lret
ret
in
jle
xor
fs
or
decb
loop
jb
or
gs
mov
cs
popl
inc
into
loope
mov
or
push
out
outsl
sub
mov
xchg
pop
xchg
test
cltd
aas
jnp
in
in
sbbb
or
push
add
and
fimuls
js
mov
mov
test
mov
loope,pn
jno
push
lret
mov
orb
idivl
dec
jbe
push
jp
lods
adc
lcall
cld
es
js
std
jne
movsb
add
mov
pushf
iret
and
adc
mov
mov
pop
rorl
ret
je
pop
mov
mov
mov
fsubr
pop
hlt
loope
repz
adc
test
imul
pop
jg
mov
arpl
and
ds
in
arpl
fcomps
iret
inc
cmp
xchg
ss
ja
mov
or
jl
mov
add
pop
mov
jnp
xor
lock
xchg
es
or
add
inc
into
mov
insl
scas
jns
sbb
notl
and
pop
insb
mov
cmp
push
es
mov
movsb
inc
insl
lds
cmpl
pop
add
test
int
xor
dec
fidivs
pop
sbb
outsb
scas
or
pusha
pop
push
xchg
or
xor
xor
repnz
cld
jno
push
mov
or
in
cmp
add
adc
into
and
sub
stos
lahf
xor
out
xor
nop
nop
shrb
ficoms
dec
and
jno
adc
pop
shrl
lds
xchg
mov
sub
dec
or
dec
xchg
in
insl
stos
ret
inc
inc
data16
cltd
pop
xlat
push
cmp
jno
push
pop
lret
test
adc
into
setbe
das
push
sti
pop
push
lahf
outsl
insb
cmpsl
ja
enter
es
push
add
cmc
popa
push
js
mov
fstps
sarb
mov
pop
mov
pushf
add
in
pop
dec
scas
mov
daa
rorb
lahf
enter
mov
dec
or
addr16
dec
test
pop
stc
lret
fimuls
mov
jnp
push
inc
xorb
sub
add
adc
cmpb
xchg
movsl
xchg
mov
sub
mov
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
mov
sbb
inc
ror
cmp
push
fimuls
jo
fwait
data16
cmp
mov
test
cli
repz
insb
dec
scas
in
sub
mov
cmp
loop
adc
adcb
adc
outsl
in
dec
cmc
xchg
shlb
fwait
push
sarl
jno
ja
popa
mov
out
xor
je
stc
xchg
sbb
xor
pop
jo
sbb
pop
add
aad
jne
push
and
jg
and
sahf
icebp
sbb
jbe
lods
mov
jno
out
stos
lds
xor
das
sub
fs
leave
jle
dec
xor
iret
lret
push
pop
xchg
push
xor
sbb
adc
lock
add
test
pop
or
ret
sbbl
movl
xchg
outsl
ja
movsb
sub
xor
or
aas
cld
ret
sahf
cmp
insl
or
sbbl
jecxz
lcall
push
imull
xor
loopne
cwtd
es
xor
cmp
fsts
or
scas
inc
scas
and
dec
adc
movsl
inc
daa
dec
daa
jnp
in
push
rclb
or
dec
lods
aaa
out
sti
mov
fimull
push
push
sbb
mov
pushf
popf
test
mov
fwait
or
push
jnp
into
out
int3
and
pop
mov
mov
and
test
push
and
sub
fwait
test
lock
cmp
push
inc
sbb
mov
sahf
out
and
fwait
mulb
and
sbb
jb
mov
jmp
sbb
popf
int3
sbb
xor
daa
jecxz
add
push
add
sub
call
push
ret
add
sahf
stos
jne
addr16
sbb
mov
lock
push
shl
pop
scas
or
or
mov
xlat
imul
fs
sub
sub
pop
sahf
adcb
gs
push
inc
and
mov
lods
rcrl
push
pop
fwait
add
dec
cmp
ja
test
stos
lcall
lret
jo
adc
shrb
cld
out
sbb
sbb
sub
adc
shl
les
xchg
int3
in
mov
bnd
add
insl
adc
std
and
leave
outsb
fnsave
add
jmp
pop
sub
aas
xor
mov
and
adc
test
mov
enter
xchg
lcall
push
test
stc
or
sub
int3
adc
dec
xor
ja
xchg
mov
sahf
push
aam
fcmovne
mov
jne
shrl
xchg
mov
adc
adcb
xor
or
out
mov
adc
out
idivb
xchg
push
popa
idivb
jnp
int
adc
cmpsl
aam
mov
mov
lds
mov
inc
or
sbb
ja
jns
dec
dec
andl
ja
cwtl
and
pusha
mov
adc
dec
cmpsl
test
inc
fwait
subl
add
adcl
xlat
scas
es
mov
xor
mov
xchg
cmc
xchg
les
push
out
jp
cmpsl
leave
lea
les
out
mov
ds
inc
and
orb
call
repnz
paddw
xor
shrb
sahf
pop
fildll
jbe
inc
jl
xor
push
fs
mov
mov
mov
fistpl
test
mov
imul
push
sub
pop
and
cmc
dec
lahf
scas
mov
pop
jno
push
cld
orl
loopne
iret
loop
scas
dec
mov
cld
mov
je
cmp
fdivrs
xor
popa
js
push
lods
or
int
mov
pop
lcall
mov
xchg
mov
loope
and
sbb
das
insl
rorb
mov
sub
pop
xor
mov
repz
call
cmpsl
mov
xchg
or
adc
sbb
inc
push
push
pop
nop
fcmovu
ds
pop
jl
and
mov
and
jp
test
jb
shlb
xor
out
aaa
sub
adc
lds
mov
lock
fidivl
cmp
pusha
pop
lods
inc
int3
mov
lods
inc
and
hlt
xchg
add
cmc
inc
fstl
mov
mov
inc
mov
pushf
cmp
lahf
fwait
gs
repnz
jb
mov
pop
outsl
xrelease
push
push
je
aas
test
gs
repz
xor
push
pop
push
adc
popf
divb
inc
lret
sub
mov
lods
stos
jno
inc
push
scas
out
or
jecxz
call
lods
iret
ja
mov
jg
rcrl
xor
lret
cmp
jne
ja
lods
inc
lds
lods
stos
jp
cltd
jecxz
ds
add
or
sti
mov
mov
mov
test
mov
andb
lret
icebp
jge
sbb
pop
fcoms
in
sbb
dec
and
scas
test
jg
cmp
sbb
pop
pushf
ds
jp
ljmp
fnstsw
sub
inc
cmp
ret
mov
faddp
pop
insb
push
rolb
pop
pop
clc
jmp
movsl
push
or
xchg
fmuls
add
jp
in
loope
xchg
pop
jno
lock
mov
xor
cmc
aad
jo
repz
xor
cld
adc
out
mov
jge
cmp
pop
adc
gs
lret
inc
das
or
sub
pop
pop
jmp
pushf
decl
jmp
xor
stc
rorb
popa
outsb
data16
gs
push
inc
inc
in
sub
insl
nop
sahf
test
das
mov
std
xchg
loopne
ja
adc
out
scas
cmp
cmp
pop
test
call
es
xchg
adc
scas
inc
xor
cmp
jge
stc
test
xor
out
mov
adc
pop
loope
jp
xor
dec
cmc
pop
dec
jne
sub
andl
scas
sub
insl
in
mov
cmpsb
mov
fmuls
push
mov
xor
add
dec
sub
xchg
adc
jecxz
cmp
or
fwait
scas
cmp
add
fistpll
sbb
dec
std
or
inc
dec
gs
popa
ret
cmp
lret
or
xlat
xchg
sub
mov
std
jb
into
jno
pop
xchg
pop
xor
jmp
ss
lods
cmpsl
sub
push
sti
icebp
int
mov
adc
ljmp
pop
jp
ljmp
das
push
lret
outsl
push
addr16
jge
loope
inc
loopne
loopne
jl
mov
dec
dec
mov
xchg
jb
add
or
mov
fcomi
xchg
scas
loop
dec
imul
mov
fisttpll
scas
mov
or
movsl
imul
sahf
and
or
xor
sub
ljmp
arpl
fisubs
adc
icebp
pop
lret
hlt
loop
mov
mov
xor
jl
pop
push
inc
push
sbb
mov
popf
sub
jne
and
xchg
push
adc
cmc
cmp
push
cli
mov
adc
cwtl
ja
clc
or
sbb
xor
mov
push
ret
xor
jge
xchg
pop
sbbl
inc
mov
push
bound
in
adc
mov
mov
and
in
dec
jnp
cmc
inc
lods
jmp
xchg
adc
js
pop
imul
dec
xchg
aaa
lret
mov
mov
adc
adc
or
mov
movsl
test
push
jbe
ficoms
xor
and
xor
mov
in
repnz
roll
jno
push
jno
dec
inc
daa
in
mov
fsubr
subl
inc
nop
movsl
cld
shl
xchg
test
mov
add
dec
andb
pop
repz
data16
std
xlat
pop
sarb
addr16
mov
xor
mov
jle
inc
xchg
icebp
fidivl
sti
inc
cmp
xchg
stc
out
mul
add
push
pushf
push
sar
jno,pt
data16
mov
push
mov
mov
hlt
fwait
xor
lea
inc
mov
jae
into
push
cld
pop
pop
std
enter
movd
mov
fdivp
inc
mov
sub
mov
mov
loope
cmp
aaa
lock
inc
sub
xor
mov
push
dec
rcl
shlb
fcoml
std
jnp
xor
inc
sbb
add
xchg
push
push
dec
popa
fcompl
dec
in
stos
int3
sub
and
fwait
or
dec
xchg
xlat
shrl
inc
jo
dec
sub
push
mov
xchg
cmpsl
ret
outsb
jno
in
pop
nop
iret
mov
int3
int3
js
aad
lea
mov
lahf
cmp
imul
sub
popf
lcall
jl
jns
repnz
je
rorb
jp,pn
rcrb
sub
push
out
icebp
pop
and
pavgb
push
lret
leave
lea
jae
and
pop
and
sub
push
adc
mov
into
addr16
imul
rorb
popa
pop
outsl
xchg
add
and
jb
mov
repz
cwtl
xchg
enter
leave
or
scas
lods
popf
dec
loop
outsb
insl
out
push
iret
arpl
inc
call
dec
mov
test
insb
sahf
adc
push
sbb
icebp
cmp
call
xchg
fmul
push
mov
sbbb
xchg
sbb
xchg
aas
push
in
sbb
ret
add
mulb
mov
aad
ret
or
int3
scas
scas
push
out
cmc
out
js
fwait
sub
jmp
out
push
sbb
dec
loopne
jb
pop
xlat
jo
jg
pusha
add
adc
sub
dec
xor
adc
fnstcw
mov
test
scas
shrl
pop
roll
in
lds
int
push
fbld
test
xchg
xchg
cs
stc
or
pop
sbb
int3
add
and
mov
dec
addr16
pop
xchg
mov
ja
cmp
clc
out
mov
ss
mov
add
incb
inc
test
pushl
inc
mov
mov
push
mov
outsb
cli
push
jnp
xchg
ljmp
repnz
jl
push
stc
jnp
xchg
and
jl
or
mov
jecxz
jmp
jne
dec
fcmovbe
outsl
testl
mov
divl
stc
cltd
xchg
fldt
cmp
cmp
xor
je
dec
mov
mov
mov
ljmp
packssdw
insl
and
xchg
add
and
mov
pop
lods
xor
mov
push
sbb
adc
sub
stos
adc
and
rolb
aaa
sub
sub
inc
jmp
ljmp
stos
shll
mov
das
shr
into
xor
mov
mov
add
pushf
push
lret
dec
xchg
pusha
movsb
mov
xchg
imul
rorb
sahf
insb
hlt
in
inc
cmp
popf
es
dec
popf
mov
popa
xchg
outsb
add
cmp
repnz
rcl
data16
dec
jno
cmp
insb
cltd
mov
pop
cmpsb
cld
cmp
dec
loopne
push
jg
xchg
outsb
push
movsl
mov
jbe
mov
cmp
push
bound
pusha
mov
test
ljmp
cmp
in
pop
cmp
inc
ja
xor
ds
add
das
fwait
xchg
out
jb
sub
dec
mov
stos
sub
mov
mov
icebp
cmp
sbb
into
mov
cli
pop
and
sahf
inc
adc
pop
pusha
dec
lret
hlt
stc
ret
sbb
arpl
mov
pop
pop
insb
mov
xchg
dec
sbb
out
pop
cwtl
cmp
imul
test
adc
cmp
enter
cli
push
or
stos
mov
ljmp
mov
out
mov
sbb
mov
xchg
cmp
sbb
mov
insb
adc
psubb
sbb
lock
shrl
xchg
mov
sti
xor
sbb
add
and
sbb
mov
std
cltd
mov
cmp
add
jp
shll
addr16
imul
clc
cmpl
cmpsl
xchg
xlat
sbb
xor
icebp
jmp
imul
xchg
out
lcall
push
mov
pop
mov
mov
jge
and
dec
jb
sub
pop
ss
hlt
mov
outsl
push
push
cld
xchg
push
inc
jns
js
jns
inc
push
sbbb
sub
out
mov
pop
mov
cmpl
fsubrl
mov
xor
pop
pushf
dec
xor
rcll
xchg
jp
sbb
mov
aas
in
loopne
ret
pop
rolb
xor
cltd
push
push
cmpsb
inc
test
mov
mov
cmp
cmc
mov
popa
clc
ja
sbb
add
cmp
fisttpl
xchg
cmpl
cld
cmp
rorb
mov
lret
aaa
fdivrs
clc
jae
sbb
jecxz
jge
stc
fisubl
mov
mov
repz
pop
cli
pusha
dec
mov
sbb
sti
ja
lahf
adc
lahf
adc
pop
imul
push
sub
inc
add
mov
ret
aam
xor
xchg
and
and
inc
jmp
daa
imul
xchg
cld
insb
adc
xor
or
push
xor
leave
aad
fidivl
sub
ret
push
pop
int
in
mov
inc
jne
and
or
cwtl
loop
mov
ja
add
imull
sarl
std
cs
sbb
std
daa
test
jle
add
imul
js
movsb
and
cmc
xor
adc
add
sti
adc
pop
xor
inc
ds
cmp
clc
mov
fcompl
push
xchg
adc
xchg
jle
shrb
rcll
inc
imul
shll
xchg
fiadds
push
mov
mov
sbb
pop
imul
xchg
sub
mov
lcall
mov
cmp
pop
out
jbe
ret
sub
and
adc
jp
pop
pop
mov
pop
popa
cmp
jo
cmpsb
or
cltd
in
dec
xchg
into
shll
mov
push
fcomps
cs
in
rolb
mov
mov
mov
lahf
xlat
stos
add
inc
gs
xlat
push
add
sarb
sbb
sbb
sbb
cmpsl
sti
lods
shll
xchg
cmp
pop
push
sbb
hlt
mov
dec
test
pop
ficomps
and
dec
ljmp
aam
mov
test
stos
jmp
cmp
inc
mov
lahf
fisubs
gs
popa
add
mov
or
dec
add
jns
cld
adc
fs
imul
sub
sub
iret
pop
call
stos
adc
dec
dec
test
lahf
jle
push
push
and
xlat
into
insl
cli
aam
mov
rorb
addl
xchg
ljmp
pop
dec
imul
jle
pop
cmp
cmc
xchg
outsl
push
insl
nop
inc
jbe
lret
popa
sub
addr16
add
push
add
dec
int3
mov
js
ss
cltd
out
cwtl
cmp
aad
jns
fcmove
dec
jp
or
push
inc
xor
out
and
xor
repz
lods
xchg
push
das
sub
xchg
inc
cli
test
mov
add
cltd
lcall
dec
and
outsb
imul
sub
scas
pop
sub
xor
inc
rcr
sahf
mov
cmpsl
mov
outsb
lds
jno
jno
push
jo
pop
and
dec
jo
hlt
cmp
lahf
fldcw
scas
aam
mov
jne
inc
pop
jo
in
dec
mov
fldcw
pop
js
mov
or
bound
stos
jle
cmc
pushw
xor
mov
push
aad
sbb
mov
int3
sarb
sahf
cmc
aaa
test
out
ljmp
fimull
cmpsl
xor
enter
out
es
xor
sbb
int3
adc
mov
iret
and
cmp
and
adc
push
lock
repnz
pop
mov
dec
in
mov
sub
movsb
xor
outsl
in
sub
lock
in
sti
xchg
add
sub
mov
cld
imul
mov
stos
sub
jno
add
fnstenv
ss
pop
jb
push
ljmp
sbb
jg
jl
inc
pop
insl
jecxz
scas
je
or
cmp
paddsw
out
insl
xlat
faddl
imul
pop
mov
or
jg
popa
adc
lock
dec
shl
out
add
xor
pop
adc
fstpt
imul
repz
push
cmp
scas
jl
cmp
mov
popf
loope
scas
xchg
out
mov
nop
dec
pop
fcompl
cwtl
call
cmp
jl
imul
aam
jno
inc
popa
add
mov
pop
flds
lods
stos
cmp
mov
xor
in
adc
mov
cmc
in
bound
bound
inc
les
sub
and
mov
mul
pop
fs
gs
insl
loopne
add
push
mull
std
push
test
shll
pop
pop
xchg
std
inc
mov
mov
adc
popf
jge
test
pop
stc
addr16
test
xchg
xor
xchg
outsb
js
pop
inc
test
pop
cmp
out
or
inc
or
in
std
or
je
cld
dec
insb
add
js
jl
add
aaa
test
cwtl
pop
sbb
jo
enter
fdivl
add
push
cs
mov
mov
sub
xchg
scas
xor
jae
shlb
fwait
xchg
mov
push
add
dec
sub
jb
rclb
call
ss
mov
xchg
push
sub
jae
adcb
cld
jmp
inc
mov
push
cmp
cs
dec
addr16
rcr
int
and
jecxz
insb
push
dec
push
into
pop
mov
js
lods
ss
clc
pop
popa
cs
xor
scas
jle
xchg
jle
bound
sub
sbb
test
cmp
lock
ljmp
push
inc
xchg
out
das
out
and
ja
int3
inc
movsb
jl
dec
xchg
lahf
sbb
mov
xchg
sbb
and
dec
int
insb
orl
stos
fbld
jg
xor
in
js
push
xorb
pop
jno
jbe
add
jbe
cmc
push
repnz
jno
push
cmp
sbb
mov
add
imul
add
push
inc
pop
stos
jns
scas
je
into
rorb
cmp
pushf
xchg
aas
jb
push
sub
in
popa
cmpsl
les
mov
fstpt
loop
push
sarb
mov
out
jbe
scas
push
pop
cmp
ljmp
cld
fidivrs
call
aas
mov
xor
mov
popa
lret
addr16
out
adc
sbb
or
or
pop
inc
loop
mov
rcr
out
mov
xchg
mov
dec
cmp
mov
stc
pop
sbb
fdivs
xor
xor
ljmp
and
ficompl
mov
cmp
int
js
jle
iret
cltd
mov
dec
mov
insl
jno
je
inc
out
mov
jb
xchg
mov
inc
das
add
call
xchg
jg
out
movsb
shl
jbe
jl
mov
cmc
enter
sub
fstpl
mov
push
adc
insl
sub
and
mov
movsl
jo
dec
int
stc
lock
mov
and
loopne
es
in
sub
push
mov
mov
xchg
mov
sub
lds
mov
in
cmpsb
and
push
xchg
dec
aam
arpl
push
mov
mov
xchg
mov
sahf
lods
fcmove
xchg
cmc
mov
dec
addb
mov
clc
popa
lods
sahf
and
movsl
lods
cmp
shll
popf
jbe
dec
jne
fcoml
cmp
gs
enter
inc
fs
sub
lahf
rcrl
mov
popa
outsb
inc
inc
add
pop
mov
mov
add
jns
icebp
idivb
or
sti
movsb
xor
xchg
ja
and
xchg
ds
test
mov
pop
ret
cmpsb
push
push
jae
pop
mov
fsubp
sub
inc
or
in
pop
lret
or
dec
mov
jle
push
out
movsb
push
push
push
lock
out
push
dec
scas
dec
jg
pushf
sub
and
or
sub
loopne
addl
les
call
insb
sbb
pop
add
jmp
mov
pop
mov
mov
loopne
bsf
mov
mov
xchg
jo
fsubr
shlb
push
inc
sbb
arpl
mov
push
cli
call
insb
stc
in
cwtl
xor
fwait
js
xchg
push
sub
sarb
xchg
sbb
dec
inc
aad
cmp
dec
lds
orb
out
out
cmpsl
sub
imul
sbb
je
out
iret
std
aad
aaa
jp
sbb
or
jbe
or
dec
int3
mov
cmpsl
mov
mov
dec
mov
and
jmp
movsl
int3
cmp
xor
xor
and
inc
dec
add
scas
movsl
sahf
mov
dec
dec
jo
and
add
dec
mov
jb
jge
insl
mov
sub
push
sub
push
std
inc
loope
stos
pop
leave
xchg
pop
scas
pop
out
sar
xlat
mov
inc
xchg
push
dec
inc
jg
lahf
jge
js
hlt
pop
xor
add
mov
xlat
inc
pop
fst
in
xchg
sbb
test
mull
mov
stos
mov
imul
lcall
scas
filds
push
sahf
mov
xchg
dec
enter
sbb
pop
add
ss
sub
push
test
dec
icebp
adc
xor
jl
sahf
addr16
js
das
sub
mull
lahf
cmp
xor
lea
in
pop
aaa
push
push
dec
and
aam
push
mov
mov
aas
push
cld
mov
sub
jg
in
mov
pop
fisttpll
sti
cmp
push
mov
hlt
mov
pop
add
sahf
inc
cmp
xor
inc
addr16
stc
out
loop
xchg
loope
arpl
mov
and
mov
xchg
iret
mov
cmp
mov
iret
aam
addl
and
sub
adc
and
mov
jo
pushw
lret
mull
lds
add
mov
imull
cmc
push
lods
pshufw
pop
ljmp
adc
sti
mov
mov
mov
insl
xor
or
cmpsl
leave
mov
rolb
xchg
faddl
xchg
jns
mov
jecxz
cs
jge
nop
outsb
inc
mov
or
push
pop
xor
fwait
gs
jmp
mov
stc
testl
sub
imul
sti
call
imul
adc
dec
fiadds
divb
test
js
lds
sub
inc
insb
pop
and
jae
in
mov
add
mov
and
pop
fucomi
jae
cmp
dec
mov
in
in
jmp
xchg
inc
sub
jmp
vaddsubpd
sub
dec
stc
xchg
push
in
mov
xor
pop
stc
push
aam
andb
xchg
inc
mov
jle
xor
jno
cmp
mov
jnp
subl
mov
lcall
stos
les
mov
shr
jl
fsubs
ficompl
mov
int3
cmc
mov
cmc
sahf
jns
pop
mov
jno
jns
data16
push
cld
mov
xchg
adc
mov
mov
in
xchg
andl
mov
and
imul
pop
cmp
movsl
pop
adc
stos
fisttpll
jbe
ss
nop
sub
push
sbb
mov
movb
js
cmp
xor
mul
into
lcall
xlat
int
shlb
xor
dec
hlt
and
add
rcrb
mov
or
add
stos
enter
or
lods
lret
in
cmc
sub
add
pop
mov
mov
jne
fnstenv
push
push
lret
adc
lcall
sti
aam
xor
push
cltd
xchg
out
in
mov
movl
lods
fisttpll
into
pop
mov
fwait
in
mov
jae
pop
jae
popf
outsb
pop
icebp
aad
lret
sub
lahf
cmpsb
notl
mov
sbb
aam
jno
xchg
push
mov
dec
gs
test
rcll
ret
inc
jo
inc
lea
sbb
fsts
and
imul
jmp
insb
xchg
imul
cmp
cmp
mov
cmp
addl
push
shl
xchg
cli
lret
pop
adc
dec
imul
sub
xlat
ja
sub
cmp
jl
mov
subl
cmp
lcall
pop
js
xlat
jmp
test
add
loope
jecxz
mov
add
inc
stc
daa
aaa
lret
shlb
cltd
into
jmp
sbb
mul
enter
aam
popf
push
fsubs
rorl
mov
daa
mov
xchg
arpl
test
aam
mov
xchg
imul
in
push
shll
and
lahf
pop
fs
in
jle
jmp
mov
scas
xchg
push
jle
sub
dec
mov
cltd
xor
inc
or
lret
mov
cmp
imul
mov
mov
sbb
cmp
repz
sbbl
push
pop
adc
xorl
cmp
vunpckhps
push
push
inc
mov
leave
sbb
aaa
mov
xor
ds
aam
mov
pop
mov
jmp
and
mov
dec
cltd
icebp
cmp
ret
mov
test
xor
mov
test
enter
jmp
out
rorl
push
xchg
mov
scas
sub
sahf
cmpsl
jmp
push
xchg
loop
xchg
sub
and
pop
lcall
dec
gs
sbb
lods
lods
mov
pop
popf
mov
mov
imul
outsb
jp
scas
sub
mov
sub
mov
ret
fidivl
in
or
xlat
std
int3
xchg
sub
sbb
lods
adc
dec
pop
lret
je
mov
mov
arpl
std
enter
nop
push
xor
xchg
dec
xchg
push
imul
dec
mov
ljmp
lea
jl
push
jmp
jp
movsl
push
shll
nop
bound
aas
in
movsl
jno
aam
xchg
dec
lods
mov
stos
fdivr
jg
outsb
scas
das
cmpsl
push
iret
nop
clc
cld
push
ss
mov
sbb
sub
xor
or
xchg
push
lods
clc
mov
mov
sub
pushf
jns
les
ss
jmp
inc
test
push
xor
stc
shlb
movsl
pop
pusha
stc
mov
loop
loope
sub
add
xor
mov
lcall
adc
mov
xchg
adc
insb
mov
repz
jnp
popa
cli
pop
loopne
sbb
dec
mov
sub
or
mov
scas
mov
rol
setge
push
adc
out
lret
fimuls
je
add
loop
jl
leave
sahf
mov
lock
fmulp
insb
aad
and
dec
and
mov
rclb
mov
mov
pusha
pop
dec
das
cmp
test
pop
test
lret
sbbb
dec
shll
arpl
add
das
or
cmp
push
pop
fisttps
jae
icebp
sub
mov
xchg
lcall
jbe
rolb
scas
push
stos
mov
sbb
loopne
popf
clc
inc
loop
outsb
iret
cs
push
lods
mov
dec
mov
fists
lods
hlt
mov
cmp
cmp
repnz
push
mov
pushf
add
stc
push
sahf
repnz
je
lret
mov
fsubrp
cmpsl
nop
add
cmc
scas
xor
jle
addr16
inc
push
outsl
cmc
and
inc
iret
loop
out
mov
jg
pop
into
mov
mov
insb
shlb
and
jg
add
jo
call
mov
cmpsl
in
mov
mov
in
mov
cs
pop
test
sti
jb
adc
pop
mov
ss
add
andb
out
ds
add
and
ret
pop
data16
xchg
dec
iret
sub
pop
dec
push
sub
shrb
inc
inc
jp
cmp
push
movq
jle
lret
dec
or
cmp
cmpsl
rcll
sbb
adc
icebp
jnp
add
fcmovnb
mov
rcrb
push
xchg
push
push
xchg
popa
add
pushf
inc
clc
mov
push
and
xchg
jp
aas
call
shlb
xchg
xor
in
push
jle
int
shlb
adc
jae
ds
int3
mov
pop
or
sub
mov
mov
notl
ret
and
lret
popa
sbb
cmp
out
ret
xor
mov
xchg
xor
into
xchg
ja
cmp
cmp
aad
cmp
ret
pushf
in
loopne
push
outsb
loope
xor
lret
filds
lods
dec
mov
pusha
outsl
fwait
int3
lret
xchg
repnz
add
xor
lret
daa
test
movsl
sti
es
or
movl
enter
lret
jae
adc
pop
cld
test
mov
mov
imul
jbe
iret
mov
or
imul
inc
xor
sbb
fsub
pusha
call
or
clc
ljmp
fisubl
mov
lods
jnp
xchg
lea
and
hlt
mov
xchg
test
lea
or
fcmove
clc
mov
hlt
sub
int
test
aaa
addb
sub
and
xchg
test
lods
scas
cmpsl
or
enter
sub
cmc
cmc
mov
sbbb
push
movsl
push
mov
sbb
addb
jne
xchg
pop
mov
adc
mov
pop
cmp
jmp
dec
jo
test
inc
mov
adc
or
and
iret
mov
and
pop
sbb
fwait
xor
shlb
sbb
hlt
fidivs
loopne
insb
cmp
popa
xbegin
imul
and
nop
shl
out
xor
mov
mov
add
ret
arpl
push
cltd
addr16
scas
jl
sbb
xchg
cmp
call
repnz
adc
fs
cli
insl
test
xor
loopne
vunpckhps
jmp
push
sti
mov
lret
lret
popf
sarl
push
outsl
cli
adc
mov
mov
mov
dec
lcall
push
push
std
or
addr16
inc
dec
stos
fs
sub
shlb
dec
jno
cmp
pop
iret
inc
inc
loope
movsl
mov
lds
sbb
call
or
jnp
sahf
sahf
xor
pop
pusha
jp
mov
pop
dec
mov
out
stos
mov
imul
fisubrl
test
iret
fidivrs
lds
push
dec
daa
lret
or
cmpsl
push
xchg
push
clc
push
push
pop
aaa
push
mov
pop
inc
pop
repz
cmp
lods
adcb
shll
les
addr16
cmc
icebp
xchg
jecxz
mov
xor
pop
js
orb
lret
mov
inc
or
mov
add
sbb
or
dec
pop
popf
jg
call
pop
lods
aam
xorb
out
ret
cmpsl
dec
out
push
pop
cmp
mov
jecxz
rcrl
lret
sub
push
das
mov
or
stos
rcrb
push
cmp
inc
push
hlt
pop
mov
les
xchg
xchg
adc
subb
popf
and
cmp
aaa
pop
fildll
xor
mov
test
inc
jle
jle
mov
sub
sbbb
test
adc
daa
mov
call
dec
xor
int3
xchg
sarl
loop
mov
inc
outsl
in
dec
iret
inc
dec
pusha
jg
stos
pop
jb
xchg
add
imul
mov
mov
dec
and
lods
mov
or
loopne
stc
arpl
add
mov
ja
loopne
or
sbb
rorb
jmp
es
cmp
call
ret
push
cwtl
sbb
jne
mov
mov
out
pop
les
jg
pop
pop
jns
cmp
test
bound
xchg
ret
cmp
mov
test
sbb
gs
inc
push
and
xor
out
adc
adc
jmp
inc
movsb
lods
aas
das
dec
nop
sub
movsl
movsl
mov
jno
pop
pop
mov
lock
mov
xchg
mov
fwait
pushf
fldl
cmp
add
dec
cmp
add
test
pop
jne
dec
inc
and
dec
jmp
pop
je
mov
lds
push
test
sub
adc
ffree
fcomp
ja
push
cmp
push
cs
insl
pop
jp
dec
cmpsl
dec
cwtl
loope
xor
cmp
sarl
loope
rcrl
sbb
xor
mov
sub
or
xchg
mov
sub
xor
popf
fstpt
pushf
push
add
scas
push
movsb
add
push
sti
mov
dec
jge
int3
jns
xchg
into
push
test
and
mov
jne
mov
fwait
out
test
and
mov
aaa
das
and
pop
aam
fcmovnb
lret
aaa
and
lcall
sbb
pop
mov
and
push
jmp
popa
xor
outsb
je
aad
mov
add
jno
xlat
int
xchg
push
fstl
sbb
out
cld
test
in
adc
xchg
lea
lahf
sbb
dec
je
sbb
jmp
jle
outsl
mov
mov
push
push
rcrl
aas
mov
callw
mov
sbb
ret
adc
add
adc
pop
add
stc
jmp
add
js
adc
test
loop
sbb
adc
lods
and
adc
dec
gs
mov
pop
push
pop
cmpsl
xchg
out
xchg
movsl
gs
movsb
scas
movsl
loopne
mov
and
mov
jno
outsl
add
ret
roll
sbb
or
mov
sub
frstor
das
popa
and
mov
pop
or
xchg
iret
inc
sbb
ds
push
jl
mov
jmp
cmp
subb
sub
cmp
pop
insl
ret
jnp
adc
out
pop
scas
jne
sub
xchg
mov
add
xchg
popa
scas
push
cmc
push
xchg
lods
mov
rsm
or
aam
shl
ficomps
pop
xchg
lret
or
xor
stos
scas
ret
push
lret
add
jne
xchg
imul
decl
arpl
push
inc
std
push
push
scas
fmuls
and
xor
cs
lret
jo
mov
jmp
xlat
mov
leave
cmp
int3
or
cmove
push
scas
mov
and
iret
jno
sub
subb
and
rcr
repnz
fadds
es
sub
sub
outsb
movsb
test
test
add
push
mov
popl
outsl
inc
cmp
xchg
inc
hlt
mov
in
loope
adcl
adc
out
mov
fmull
arpl
fistpl
testb
xchg
fsubs
pop
lcall
mov
testb
mov
fnstcw
mov
sub
movsb
pop
ds
cmc
jb
adc
xchg
push
addb
sqrtps
jno
outsl
xchg
dec
mov
xchg
mov
adc
jae
and
cmpl
dec
push
mov
jne
inc
gs
into
lret
insb
mov
cmpsl
test
clc
clc
adc
jbe
cmp
scas
mov
xchg
cmp
pop
and
les
or
mov
mov
aaa
xchg
movsb
and
pushf
pop
aad
and
add
int
cmc
mov
in
inc
mov
cmc
sub
pop
faddl
jg
mov
leave
loopne
or
incb
ficompl
dec
test
jp
push
xchg
mov
xchg
gs
aas
outsl
push
dec
lcall
xchg
decl
jno
scas
fdivrl
pop
sub
int3
movsl
ficoms
clc
mov
jno
sahf
imul
add
xor
dec
hlt
call
lods
pop
sub
lahf
pop
into
mov
subl
jbe
shll
pop
xchg
test
mov
jge
enter
sub
out
inc
movsb
data16
neg
mov
dec
test
cmp
dec
fstps
jecxz
mov
mov
lock
es
scas
or
xchg
or
lahf
popa
push
jbe
jno
dec
jle
lahf
lods
mov
jg,pn
cmpsb
mov
dec
pop
call
dec
sub
out
or
fdivr
push
sub
out
add
xorl
and
cmp
add
push
pop
cmp
xor
cs
out
pop
std
loope
add
sti
lock
ljmp
xor
ja
cltd
testl
pusha
fisubs
or
or
cmp
adc
movsl
shll
icebp
sti
sahf
and
sarb
hlt
push
mov
dec
xor
cwtl
ja
inc
xor
mov
test
or
test
cmc
int
xor
xchg
scas
stos
das
mov
or
cmp
cld
jle
test
ret
dec
adc
push
loopne
jno
mov
dec
stc
inc
push
dec
sahf
es
out
imul
dec
xor
in
leave
push
cltd
pop
lcall
inc
loopne
push
xchg
je
mov
repz
xor
pop
cmpsb
xchg
sub
fisttpl
mov
daa
adc
mov
leave
adc
fnstenv
call
xchg
cmpb
add
pop
mov
dec
cwtl
push
leave
shll
sub
add
loope
inc
int
pop
mov
aaa
xor
cmp
xor
imul
push
fnstcw
sbb
stc
jecxz
ss
inc
leave
adc
cmc
fiaddl
iret
pop
mov
pop
sbb
mov
loop
lods
or
xor
call
jl
cmpl
pop
mov
call
xchg
mov
inc
cmp
lds
or
mov
sbb
push
lahf
mov
xchg
pop
push
jo
sbb
xor
jecxz
movsl
cmp
sahf
cmp
movsl
aad
call
cli
pop
mov
dec
adc
sbb
push
jmp
mov
loopne
xchg
rorb
xchg
adcb
mov
pop
cmpsb
jg
xchg
add
ret
mov
pusha
stc
adc
pop
add
icebp
inc
mov
mov
arpl
or
mov
xor
imul
push
inc
repz
fwait
pushf
ret
push
pop
in
cli
ss
leave
xchg
xor
popf
fneni(8087
jbe
nop
adc
xchg
push
sbb
adc
pusha
and
in
mov
xchg
in
insb
xchg
enter
and
fdivl
sub
mov
fsubr
mov
or
sarl
ds
lods
push
scas
inc
stos
out
stos
mov
mov
pushf
jbe
push
jno
mov
fldcw
jmp
dec
fwait
adc
push
push
push
xor
xor
enter
mov
js
int3
test
test
xchg
dec
fs
adc
and
inc
shrb
repz
cld
push
sub
dec
outsl
or
nop
les
scas
cs
sahf
sbb
test
push
sub
flds
inc
adc
stos
jbe
andps
loop
std
xchg
sarb
xchg
mov
or
out
jb
jo
cld
lods
push
mov
aas
add
mov
inc
sbbl
pushf
rorl
rcll
push
adc
fmull
aam
mov
jle
adc
cmp
cmpsl
mov
sti
xchg
gs
ljmp
int
cld
xor
and
in
inc
push
ss
shl
pop
repnz
ret
cmpsl
stc
cmp
lds
insl
aad
mov
cmp
outsl
sbb
je
inc
fcoms
outsl
or
fcoml
add
or
mov
scas
cmp
lock
pop
sahf
jbe
lret
jmp
test
movsl
rclb
mov
mov
cmp
je
inc
pop
cmp
add
aaa
add
jg
mov
or
incl
sahf
jge
fiaddl
dec
fwait
popf
jle
idivb
pop
jmp
fmul
xchg
inc
sarl
adc
stos
dec
mov
rclb
jge
movsl
das
aaa
sbb
sti
jbe,pn
jb
mov
push
sbb
sub
and
jae
pop
movsl
cmpsl
push
lods
lcall
in
pop
hlt
iret
test
adc
rcr
ret
jg
retw
call
pusha
inc
and
or
inc
shr
test
loopne
jb
pop
inc
mov
mov
or
push
mov
cmp
xor
jnp
adcb
xchg
ja
lretw
ljmp
in
xchg
popa
inc
data16
aad
jnp
subl
fdivr
adc
jle
aam
cmpsl
dec
test
inc
dec
pop
daa
inc
and
insl
jl
pop
dec
cmp
xchg
cmpl
dec
mov
sub
in
push
push
mov
cmp
mov
or
mov
pop
mov
xchg
xchg
and
gs
inc
cmpsl
mov
xchg
xlat
and
pop
cltd
push
cmp
inc
mov
mov
cbtw
mov
outsb
adc
insl
int3
popf
mov
sub
mulb
push
fsubs
sub
and
xchg
xor
mov
mov
rorl
out
rcrl
in
cmp
xor
add
lea
daa
fdiv
repnz
es
adc
in
mov
ret
mov
dec
imul
sbb
dec
lret
orl
cmp
push
add
ficompl
jge
mov
cmp
lcall
ja
sub
xchg
icebp
sub
push
jnp
inc
mov
in
rorl
and
push
lods
dec
dec
cmp
sbb
jo
int3
mov
imul
mov
ffreep
jb
xchg
mov
xor
mov
into
data16
pop
cmp
push
dec
int3
daa
je
das
fidivrs
jle
pusha
int
and
andb
aad
fucomp
push
repnz
xchg
jo
or
mov
movsl
jo
shll
repnz
dec
add
mov
imul
into
repz
xchg
jmp
popf
pushf
jb
mov
dec
cs
push
stc
int3
mov
adc
test
jecxz
aam
dec
pop
push
inc
fwait
push
mov
mov
and
inc
sbb
jbe
mov
mov
xchg
push
xchg
xchg
sbb
jg
ljmp
std
xchg
jp
dec
js
xor
xchg
aas
add
xlat
int
sbb
push
xchg
mov
daa
sbb
faddp
mov
mov
pop
xlat
rcrl
ret
insl
mov
lret
pop
movsb
mov
push
cli
shll
scas
loope
xor
out
ret
jp
cmpl
xchg
btcl
fs
hlt
or
or
lods
in
loope
push
sub
mov
stos
ds
fdivp
repz
mov
sub
popf
std
out
movb
cs
iret
addl
sbb
xchg
pop
cs
mov
loopne
push
insb
pop
xor
in
aad
es
mov
stos
jno
ja
cmp
insl
loopne
fidivs
add
mov
mov
ljmp
inc
and
shlb
ret
cli
out
fwait
sub
xchg
leave
mov
movsl
xchg
arpl
ss
inc
lds
sbb
push
ss
cmc
dec
xchg
inc
cmp
lods
push
mov
add
std
push
xor
push
adc
push
arpl
fdivrs
push
jno
scas
inc
sbb
jo
out
xchg
adc
inc
test
repz
jecxz
dec
jb
xlat
xchg
ret
in
outsl
add
adcl
jnp
fidivrl
mov
and
dec
mov
pop
scas
xchg
fucom
cmp
stos
cmp
lret
cwtl
or
inc
sub
ret
rorl
imul
movsb
les
and
dec
inc
sbb
daa
or
push
pop
adc
mov
mov
out
repz
sbb
dec
loop
scas
cmpsb
inc
fsubr
lea
fdivl
sbb
pop
stos
mov
dec
dec
addl
jle
push
mov
jo
hlt
dec
inc
push
lcall
push
jge
nop
in
jno
xchg
cmpsb
xchg
sub
out
int3
std
fistpll
add
cs
or
ja
push
xchg
jbe
ja
aas
lret
dec
fisubl
jbe
push
imul
daa
test
cmp
push
dec
in
jno
popa
pushf
fcmovbe
pushf
sbb
jecxz
ljmp
pop
jnp
rorl
dec
cli
push
gs
scas
mov
outsb
rclb
or
lds
gs
jmp
loope
gs
and
cwtl
sar
push
in
fcmovnbe
mov
or
icebp
cwtl
jne
and
pop
outsl
inc
lock
jo
test
cmp
call
pop
or
or
fstps
ss
fbstp
sub
imul
stos
mov
dec
push
stos
call
sbbl
imul
xchg
xchg
das
rolb
cmp
clc
int
repnz
dec
test
test
cmc
insl
clc
sahf
cltd
jnp
mov
mov
inc
cmp
ret
and
call
push
xchg
or
pop
repz
adc
mov
mov
cmp
dec
push
xor
pop
lock
add
jle
lock
add
je
mov
out
mov
cli
in
push
in
fcomi
mov
cmp
cmpsb
mov
xor
and
stos
imul
mov
dec
cmpsl
ret
test
cmp
mov
cmc
out
movsb
fidivrl
test
mov
repz
xchg
mov
scas
push
jo
mull
gs
or
jne
movsb
lret
xchg
mov
stos
fdivrl
jg
testb
call
or
jno
rcl
dec
xchg
movl
in
hlt
shlb
sub
mov
ret
or
cmpsl
fcmovnbe
push
pop
nop
add
decl
xor
cmp
or
or
push
jb
fimuls
mov
repz
ret
stc
sbb
mov
mov
imul
mov
popf
xchg
pop
cli
imulb
xor
jbe
stos
mov
sbb
lcall
xchg
rol
cmp
sahf
sub
dec
pop
cmp
out
xchg
cli
mov
dec
jmp
shrl
xchg
lret
add
lods
cmp
and
aaa
add
loop
dec
sub
add
xlat
inc
cmp
sbb
xor
loop
rcll
cs
adc
addr16
repz
pop
je
adc
sub
popf
xchg
fs
push
iret
push
leave
mov
insl
out
iret
mov
ds
xor
xchg
incb
or
enter
mov
lret
add
mov
sub
sbb
cmp
or
pop
fsts
and
daa
pop
xchg
movsl
mov
mov
popa
pop
cs
cltd
call
inc
cmpsl
dec
and
ret
sti
std
flds
adc
lods
adc
fdiv
andl
cmp
push
in
insl
ror
stos
jns
into
rorl
ret
add
pop
mov
fs
mov
insl
xchg
lahf
add
inc
xchg
mov
hlt
adc
cmp
movsl
testb
add
sbb
lcall
lret
sbb
ja
ja
lea
sbb
daa
lods
cs
add
aas
cmc
movsl
jg
sub
or
dec
ret
test
roll
xor
xchg
xchg
xor
or
mov
xchg
int
loope
pop
mov
cs
cmp
push
gs
jl
shl
cmpsl
enter
repz
les
lret
mov
mov
push
clc
or
pop
mov
jge
aam
fidivs
inc
negb
mov
add
cmc
fsubr
lods
and
aas
xchg
mov
xchg
or
pushf
sub
cmp
loop
dec
xchg
xor
aam
push
adc
bound
movsb
push
data16
loope
stos
jae
pusha
das
adc
cmp
and
stos
pushf
sbb
or
aaa
xor
fsubl
xor
cwtl
cld
cmpsb
mov
ret
jbe
push
cmp
ljmp
aad
sbb
cmp
fnstsw
test
lock
push
shl
sub
jbe
jecxz
inc
xchg
and
popa
jmp
xlat
and
outsb
push
or
add
and
fiaddl
push
adc
jno
pusha
xchg
mov
lods
sbb
inc
loopne
adc
adc
in
push
jb
xor
adc
movsb
cmp
stc
push
js
sub
dec
fisubrl
pop
outsb
xchg
fnstenv
frstor
std
out
sub
call
add
cmpsl
xchg
mov
out
orl
push
mov
rclb
push
sub
adc
adc
push
push
loopne
repnz
movsl
ss
int3
xchg
stos
add
mov
sbb
sbb
xchg
sbb
cld
push
sbb
out
je
or
mov
ljmp
mov
mul
bound
mov
dec
loopne
stos
movd
addr16
jmp
mov
and
popa
jmp
cwtl
data16
out
pop
test
mov
lcall
fs
fnstenv
mov
xor
cmp
outsb
push
jne
jmp
inc
dec
cld
aam
ret
push
test
mov
popa
call
push
and
cmp
aaa
fwait
leave
cmpsb
jecxz
mov
or
push
push
and
daa
cli
imul
js
push
dec
and
mov
in
dec
inc
and
push
jo
sbb
inc
add
push
fists
xor
sti
movsl
pop
dec
rorl
pop
movsb
lea
push
scas
and
mov
test
repnz
dec
push
int
es
sahf
fcmovnbe
mov
lea
lea
dec
jmp
dec
xchg
les
das
imul
push
and
cli
cwtl
or
push
xlat
dec
aad
add
cmpsl
xchg
sbb
pop
jg
cmp
push
mov
outsb
test
sahf
add
in
andb
xor
clc
into
sbb
xchg
sti
rcrl
sbb
mov
js
push
imul
into
dec
xchg
stos
jo
inc
adc
sub
cmp
sub
xchg
dec
jno
mov
add
add
stc
fsts
mov
lods
jle
adc
sbb
pusha
lea
mov
xchg
push
fwait
lock
sub
gs
cmpsb
jl
vmaxsd
and
xor
js
push
das
test
xchg
push
loop
test
pop
out
rcl
adc
and
cltd
push
push
cmpb
test
sub
fistl
cmc
and
daa
mov
gs
cmc
push
jb
into
dec
fdivs
adc
add
daa
push
add
fcoms
pushf
and
call
repnz
and
and
ret
test
or
sub
fdivrs
addr16
adc
jbe
mov
insb
rcrl
and
add
cmpsl
int3
pop
mov
cli
std
shl
xor
stc
hlt
mov
xor
mov
hlt
in
mov
xchg
pop
jecxz
cmp
xchg
out
movsb
fbld
sbb
adc
sub
mov
ja
stos
gs
leave
dec
cs
or
or
pop
or
push
hlt
icebp
pusha
cmp
out
jecxz
jno
int
jge
cmp
adc
mov
dec
sbb
xchg
mov
lret
inc
jle
sub
out
cmp
popa
push
bound
add
daa
xchg
jnp
mov
repnz
fiadds
clc
mov
std
insb
mov
sub
cmp
xor
adc
mov
inc
cs
or
lods
mov
push
mov
icebp
ret
and
sub
cmc
cmp
mov
ja
mov
xor
mov
pop
loope
push
mov
dec
xlat
out
jae
into
fisttpll
lret
jmp
pop
int
push
fsubrl
xor
mov
insl
inc
rolb
cmp
mov
sarl
roll
test
pop
ss
pop
sbb
push
sbb
stos
inc
cmp
push
imul
ja
mov
xchg
jp
ret
je
jecxz
cwtl
std
push
lahf
fwait
outsb
mov
in
leave
push
loope
outsl
in
pop
scas
iret
loope
insl
inc
fadd
xchg
inc
cmp
mov
mov
dec
dec
int
icebp
call
adc
mov
xchg
js
daa
cmc
sub
sub
dec
shll
mov
inc
inc
fstpl
test
fwait
push
pop
iret
push
xor
mov
jle
stos
mov
test
stos
mov
pop
out
sbbl
dec
sbb
fs
mov
outsl
pop
jmp
int
dec
mov
pusha
pop
in
sub
out
or
enter
xor
pop
frstor
bt
in
andl
aaa
fwait
and
and
shlb
lds
mov
test
or
adc
jo
cltd
outsb
test
xor
jmp
popa
mov
xchg
xor
mov
adc
pop
push
dec
mov
jnp
sbb
or
push
push
rorl
jne
roll
test
jecxz
les
cs
and
mov
scas
pminub
into
stos
ret
mov
popa
dec
repnz
and
jae
mov
inc
mov
popf
sub
roll
lret
jge
pop
jnp
pusha
mov
dec
xor
xor
shrb
adc
or
dec
imul
sbb
scas
pop
sti
or
mov
orb
xor
xchg
imul
movsl
int
test
lods
sbb
iret
stos
push
mov
sti
mov
rol
push
lahf
lods
xlat
mov
fwait
sub
pop
cwtl
sti
and
loop
in
gs
addl
xchg
dec
mov
mov
or
shll
jae
add
aaa
loop
ljmp
sbb
inc
and
pop
out
test
lret
pop
testb
or
sub
mov
sub
inc
sub
mov
in
xlat
jecxz
cld
mov
ret
clc
jo
inc
out
mov
mov
popa
sub
nop
fstp
add
inc
or
jne
mov
ret
mov
repz
mov
mov
call
sar
fs
dec
lret
and
mov
mov
inc
jle
pop
pop
xchg
xchg
rorl
sub
rolb
inc
rep
adc
scas
inc
test
shlb
les
in
or
push
in
jno
dec
push
mov
or
cmp
xchg
movb
jns
call
push
adc
sbb
inc
out
pop
sti
push
jb
ds
push
fldenv
push
cs
xor
das
sub
lods
mov
in
ss
ret
inc
clc
sub
mov
push
jg
mov
mov
adc
shrb
mov
xchg
or
jg
loope
cmp
dec
mov
rcl
pop
add
incl
push
pop
sbb
adc
lods
outsl
movsl
fldt
inc
sbb
gs
aad
popa
scas
pop
fistps
icebp
xor
jno
xor
insb
mov
mov
jge
sbb
lods
fucom
cmp
cmpb
xor
insb
dec
test
push
jno
pop
xor
mov
popa
aam
addb
shlb
push
cmp
fcom
ficomps
cmpl
mov
cmc
push
jp
push
xor
jp
and
sub
pop
jno
or
sub
lock
mov
stos
insl
push
std
fldcw
mov
cld
cli
mov
xchg
lods
out
enter
testl
dec
and
aam
dec
jne
clc
rcrb
jle
aam
cmc
cmpb
jmp
sbb
sahf
dec
jne
testl
fcompl
add
ljmp
es
fistl
stos
dec
dec
cwtl
cmp
test
dec
xchg
adc
lock
fwait
xchg
xor
rcll
pop
mov
ret
mov
mov
push
xchg
cmp
out
mov
nop
rorb
popf
rcr
cmp
inc
mov
or
in
pop
sbb
or
and
repnz
jb
jg
xor
mov
sbb
hlt
aaa
cli
mov
negb
arpl
dec
lods
adc
push
mov
sbb
mov
xchg
and
jecxz
leave
add
xchg
sbb
inc
movsl
bound
fdivl
incb
pushf
push
cmpsb
pop
pop
jp
cmc
not
insl
sbb
int3
mov
mul
out
lds
xchg
jb
pop
mulb
aam
lods
mov
dec
gs
sbb
lret
or
icebp
movsl
out
mov
sbb
test
std
hlt
sbb
xor
cmp
data16
aas
out
popf
sahf
scas
insb
mov
nop
int3
and
push
pusha
lret
shlb
inc
loop
mov
jmp
sbb
jl
ja
mov
mov
sar
pop
outsl
pop
jmp
jb
in
lock
sub
push
pop
mov
fisubrl
sub
repz
push
xor
scas
jne
fidivrl
in
and
inc
adc
stc
jns
nop
lahf
mov
pop
cmp
inc
lods
and
add
ja
inc
mov
add
stos
ret
push
add
cmc
adc
sahf
pop
pop
int3
mov
mov
pop
movsl
in
lock
nop
nop
fmull
andb
inc
pusha
rcl
movsb
ret
lahf
mov
shl
fcompl
push
dec
lahf
push
fnsave
int
idiv
loope
test
test
jo
mov
mov
push
dec
mov
mov
xor
xchg
sti
popa
mov
and
lods
stos
mov
fldenv
push
and
call
cmp
sub
cld
dec
pop
dec
add
test
stos
outsb
inc
mov
mov
cmpsb
add
sbb
ret
stos
cli
add
cli
jge
pop
ss
enter
jns
fldt
dec
xor
sbb
mov
lea
sbb
pushf
cmp
or
stc
sub
xchg
inc
cmp
aas
sbb
mov
pop
cmp
pop
mulb
or
pop
add
pop
popw
mov
idivb
in
pushl
add
test
fadd
sahf
pop
fstps
stc
rcrl
ljmp
pop
sub
rclb
push
ljmp
insl
into
mov
push
or
pop
sub
jmp
out
mov
add
dec
push
fcompl
loop
jae
jmp
xor
out
scas
dec
orl
pusha
stos
cmova
pop
sarl
out
int
mov
add
add
pop
leave
inc
adc
mov
jge
adc
add
sarl
in
mov
es
cmc
arpl
rcrb
jmp
aaa
push
lds
adcb
cli
cmp
mov
xorl
sub
jae
pmaxsw
or
jmp
add
shl
dec
sbb
outsl
outsl
ret
or
mov
rcrb
push
lods
adc
pop
inc
out
ljmp
jp
xor
scas
cmp
lds
int
and
mov
nop
add
cld
outsl
sub
imul
dec
dec
int3
add
les
mov
je
call
je,pn
es
les
add
test
xlat
jp
dec
lds
shr
sub
push
mov
or
or
pushw
fidivl
ss
adc
sbb
adc
or
push
sbb
lcall
fmull
into
addr16
push
mov
test
sub
jb
mov
pop
icebp
mov
fidivs
add
mov
incl
scas
xor
mov
fldcw
insb
inc
jno
mov
push
mull
xor
push
mov
or
ss
pop
inc
and
leave
adc
jnp
call
pusha
es
mov
ss
mov
xor
jmp
scas
pop
inc
hlt
fildl
and
jne
push
enter
adc
movsl
add
add
sub
push
fistpll
xlat
mov
dec
lods
ds
sbb
into
call
ret
mov
mov
mov
xor
test
or
push
dec
push
push
cmp
or
aas
xor
in
dec
lods
or
push
call
dec
adc
mov
pop
mov
push
lea
mov
inc
sub
or
iret
out
fcmovne
cld
jne
xchg
fiaddl
stos
sbb
sub
je
or
inc
loop
mov
mov
rcr
jns
xor
mov
xor
sub
cld
out
aaa
push
insl
test
in
les
idivb
pop
sub
insl
faddl
cmp
mov
mov
sub
sarl
or
ficompl
push
orl
sarl
jnp
mov
out
jbe
mov
push
jmp
in
lock
movsb
sub
das
dec
out
aad
xchg
inc
and
push
inc
sub
cltd
adc
icebp
inc
cmp
or
out
jl
and
gs
xorl
ret
xor
lock
clc
inc
scas
addr16
mov
inc
jmp
jmp
or
test
sub
call
scas
sbb
mov
rcl
stc
or
mov
dec
pushl
jne
or
repnz
sahf
mov
testl
adc
or
bound
push
add
rcr
lret
inc
sahf
imul
cmp
ljmp
idivl
sbb
inc
or
mov
mov
or
mov
dec
in
jae
pop
xor
sbb
stc
lahf
sub
sbb
sahf
out
push
cmp
sub
xchg
xchg
cmp
jae
adc
mov
mov
notb
push
and
xor
iret
push
lret
ficoml
fld
xchg
lock
in
mov
inc
in
pop
ds
jp
sub
fcomip
loope
sbb
push
mov
sbb
repnz
pop
or
or
fistpl
push
movsb
mov
mov
dec
out
adcl
lock
fildl
into
and
cmpl
imulb
adc
pushf
out
iret
shrb
cld
push
fidivs
dec
insl
adc
cmp
mov
ret
push
loope
inc
test
loope
das
jnp
lock
out
lcall
or
mov
and
push
dec
es
jmp
push
cmp
sarb
jg
lods
test
cmp
in
mov
shl
add
inc
test
inc
xor
orl
mov
xchg
sbb
lds
test
xor
push
in
fdivl
lds
lret
or
int3
cmpsl
jno
cmp
ja
repnz
fdivrs
jle
mov
out
pop
adc
cs
aad
int
jge
or
int
mov
add
mov
sub
xchg
or
xchg
aaa
jmp
clc
push
push
lods
adc
mov
andb
sub
pop
mov
mov
sbb
xor
std
and
movsb
int
jecxz
es
ds
test
aad
and
xchg
add
and
xchg
sbb
push
and
int3
test
clc
mov
in
sbb
pop
sbb
daa
cmpsb
je
in
int3
test
mov
and
mov
and
fsubs
mov
push
mov
jg
mov
mov
xchg
and
in
and
push
jns
xor
lcall
jmp
or
mov
ret
sub
mov
sbb
xchg
push
ss
mov
movb
je
out
sub
pop
mov
popa
add
cltd
subl
cwtl
lock
outsl
pop
daa
ret
cmc
mov
cmp
das
sbb
les
dec
inc
loopne
push
popf
lahf
pcmpeqw
xor
movsl
cmpsl
adc
fcompl
fstpl
xor
rorl
call
mov
xchg
inc
mov
aas
bound
push
sar
ds
jmp
cmpsl
scas
mov
popa
mov
mov
or
push
scas
aam
rorb
sbb
jecxz
push
cmp
and
fldt
xor
popf
notb
xchg
dec
sub
divb
out
adc
int
jge
idivl
add
xor
cmp
sub
adc
xor
pop
mov
and
leave
int3
xchg
mov
sub
pop
xchg
outsl
xchg
cmp
out
aaa
dec
add
fstpl
xlat
andb
inc
push
jg
daa
ror
and
repnz
jge
in
negl
data16
jo
mov
and
fisttpll
fistpl
xchg
pop
lret
mov
xor
cmp
sbb
inc
jl
fstpl
ds
push
icebp
loopne
fsubr
fisubrl
xchg
out
dec
dec
mov
mov
pop
or
mov
outsb
inc
mov
xchg
outsb
daa
jg
cmp
lahf
sub
loope
sbb
test
enter
clc
mov
or
pushf
enter
add
mov
pop
pusha
jp
sub
sbb
jne
js
mov
jns
es
dec
add
or
in
sbb
and
test
mov
dec
call
addr16
jl
jmp
loope
cmp
movsb
insl
out
test
aad
dec
push
xor
fisubrl
lds
cmp
icebp
test
test
mov
fwait
cmp
insl
ret
movsl
or
ljmp
xchg
scas
loopne
pop
mov
cwtl
mov
ja
ret
inc
int
pop
out
cld
lret
pop
sub
xor
das
dec
loopne
out
repz
rcr
scas
push
repz
sub
sub
or
std
data16
mov
add
jbe
shll
mov
and
cltd
maskmovq
testl
adc
imul
and
jmp
mov
dec
popa
pop
cmp
sub
push
int
mov
push
shl
das
and
mov
push
xlat
xor
out
sub
loopne
xlat
cmpsl
adc
jmp
inc
xchg
in
aas
hlt
sub
inc
dec
xor
jg
adc
decl
mov
dec
dec
cld
cmp
int
push
and
sub
insb
lock
mov
inc
jecxz
push
jmp
repz
bound
test
mov
out
popa
xchg
jmp
mov
ret
test
icebp
icebp
dec
js
inc
adc
inc
xchg
addb
sahf
in
mov
jb
gs
xchg
lahf
scas
loop
jnp
adc
jns
rcr
ror
push
int3
pop
popa
and
loope
pop
push
sub
pop
stc
or
lret
scas
mov
jle
pop
inc
or
test
orb
testb
popa
lods
rorb
add
incl
pop
push
and
xchg
cmp
push
sub
sahf
jg
cmp
mov
cmp
mov
out
xor
dec
mov
call
mov
push
inc
jbe
and
fwait
andl
stos
adc
push
mov
xor
cmpsb
xchg
sbb
movsl
fildll
jo
jns
add
loope
out
loopne
mov
adc
cmp
mov
ret
push
mov
jae
jb
push
dec
fstpt
jns
in
outsl
lret
dec
stos
adc
popa
and
mov
push
pop
xlat
adc
cmpsb
cmpsb
or
jg
int
dec
push
mov
nop
adc
xchg
scas
popa
adc
cmp
pop
mov
mov
int
testl
cmp
sbb
add
xchg
popa
insl
jmp
out
dec
dec
es
je
mov
in
sbb
in
xor
mov
jae
cmp
xor
inc
inc
or
outsl
sbb
lds
pop
repz
pop
push
cmp
inc
fsubrs
xlat
jns
xchg
ja
mov
mov
dec
mov
pop
pextrw
xchg
lret
ret
xchg
into
push
test
int3
mov
push
popa
fwait
inc
push
sarb
push
scas
insl
repz
push
mov
sub
in
add
mov
outsb
outsb
and
loop
cmpl
xchg
mov
fstpl
test
push
lods
dec
cltd
fisubl
mov
mov
movsl
lods
fsubl
sbb
push
pop
shrb
cmc
pop
out
mov
mov
xchg
cld
cmpsl
out
mov
in
cmp
stos
sbb
add
mov
dec
loope
fidivl
cmp
aas
dec
xor
cmp
mov
push
mov
or
cmpsl
adc
xchg
mov
mov
and
test
dec
xor
in
scas
fsubrl
mov
sub
popa
push
cmp
insb
push
fnstenv
popa
pop
inc
hlt
and
out
inc
mov
jp
popf
das
cmp
dec
enter
loop
std
adc
xorb
inc
xchg
push
mov
xchg
leave
adc
into
push
fisttpl
sub
jne
mov
sub
sbb
fidivs
mov
mov
out
pop
lods
setle
sub
subb
das
inc
xor
mov
or
movsb
aam
test
mov
flds
vmread
repnz
pop
in
outsl
iret
gs
mov
es
testl
push
subb
clc
mov
sbb
adc
sbb
jno
push
mov
ljmp
dec
push
das
pusha
lods
adc
mov
jne
push
dec
xor
cmc
pushf
push
mov
and
jns
adc
dec
mov
mov
mov
aam
cmp
and
ds
lret
lds
jmp
push
dec
andw
paddusb
leave
mov
cld
jecxz
fcompp
std
insl
pop
mov
mov
push
fwait
adc
xchg
add
or
sub
insb
sub
mov
sbb
mov
ret
lods
test
in
in
xor
xchg
mov
std
or
xlat
lock
outsl
mov
inc
lock
divl
leave
add
mov
adc
sub
xor
xchg
push
mov
addr16
mov
mov
pop
mov
or
scas
sub
mov
ja
cmpsb
cmp
aad
mov
sbb
cltd
sbb
mov
dec
testb
mov
test
cs
aam
xorl
scas
xor
xchg
rcrl
in
ficoms
pop
adc
sbbb
or
je
out
push
test
dec
mov
clc
lahf
ja
jp
inc
popl
xchg
jecxz
cwtl
mov
inc
adc
sbb
sub
xchg
adc
jge
mov
pop
mov
out
repz
popf
mov
xacquire
mov
sub
xor
stos
jnp
fucomip
sarb
lds
xor
shl
or
in
mov
jbe
repnz
xor
ds
xchg
lret
pop
iret
sbb
daa
pusha
andl
and
dec
ret
shlb
mov
cltd
lea
mov
fcmovb
jge
cmp
sub
pop
pop
repnz
pusha
jbe
in
inc
xor
fisubs
mov
xor
ret
in
xor
repz
pop
imulb
add
je
scas
test
lods
mov
sbbb
sbb
shr
cld
call
outsb
dec
dec
jg
dec
jmp
pop
mov
jmp
flds
mov
push
das
ss
mov
leave
jnp
sub
mov
and
pop
inc
fidivl
dec
push
mov
sub
lret
xor
sbb
jl
or
or
push
sbb
lret
stos
mov
pop
pop
out
fsts
das
cmp
xor
popa
mov
xor
lock
add
fdivs
pop
sub
sub
enter
inc
cmc
daa
pop
dec
outsb
or
pop
push
mov
push
mov
inc
in
cltd
sub
jne
dec
inc
inc
mov
lea
in
fs
mov
add
sbb
sub
leave
mov
mov
pop
mov
inc
push
bound
fsqrt
xor
mov
pop
les
push
sub
jns
repz
daa
in
rolb
idivb
cmp
test
inc
fs
push
popf
mov
inc
adc
pop
ja
mov
loop
pushf
frstor
jae
notb
out
test
mov
scas
pop
sub
mov
pop
mov
ss
mov
mov
dec
and
jns
mov
and
ljmpw
iret
popa
scas
sarl
fadds
push
xchg
jb
push
data16
xor
stos
sahf
bound
daa
xchg
icebp
or
push
mov
mov
mov
pop
mov
push
cltd
adc
mov
pop
mov
daa
pop
sbb
sbb
xchg
dec
pop
inc
pop
inc
push
insl
pop
jge
push
lcall
push
xchg
pop
es
mov
mov
xorb
sbb
sub
sbb
or
inc
jns
xorl
adc
test
xchg
jmp
sbb
jne
inc
fldt
cmp
dec
jo
push
xor
xlat
outsb
adc
aad
pushf
mov
jbe
pop
test
int
adc
sti
in
mov
lret
mov
push
mov
jcxz
shr
mov
fwait
inc
ret
adc
movsl
sbb
xchg
inc
daa
and
sub
fnstcw
mov
into
orb
aaa
jg
cmpsl
xor
push
das
lock
jne
adc
push
xor
mov
mov
clc
out
mull
dec
cmovb
ds
mov
jmp
mov
xlat
sub
cmpl
hlt
loop
and
ja
stc
fs
ljmp
xor
stc
sub
pop
test
cmc
lods
mov
ljmp
hlt
pusha
push
leave
dec
les
sbb
pop
das
xor
dec
jns
add
mov
push
ds
das
mov
push
lret
push
cwtl
dec
pop
dec
add
stos
out
mov
mov
or
inc
arpl
push
mov
mov
or
stos
lods
sbb
jge
enter
push
jl
and
lods
sub
ficompl
mov
sub
ud0
or
cmpsl
in
jns
mov
loopne
call
dec
mov
dec
dec
adcl
push
xchg
movsl
mov
ret
mov
add
loopne
repz
or
pop
xchg
mov
sbb
shl
mov
cmc
mov
cmp
cmp
mov
ret
jo
pop
js
and
mov
imul
dec
sbb
into
nop
sbb
das
imulb
or
cwtl
stc
pop
adc
push
in
pop
je
les
out
xor
pop
ret
and
xor
movsl
into
stos
adc
cmp
inc
mov
cmpsb
sub
fbld
ds
lods
std
sbb
incb
inc
mov
andl
xor
hlt
add
push
movsb
fists
imul
push
pop
arpl
popf
addb
inc
in
out
cmpl
add
mov
push
mov
sbb
pushf
in
out
mov
mov
push
jle
fstps
sbbl
sti
pop
cmp
push
mov
xorl
sahf
sbb
jle
das
rolb
fbstp
inc
dec
stos
inc
adc
cmp
lahf
mov
icebp
sbb
mov
xor
fcompl
into
test
jle
xchg
mov
loop
dec
sbb
push
fidivs
int3
adc
fisttps
stc
mov
sbb
mov
daa
mov
roll
xchg
jle
dec
or
inc
push
sbbl
jne
adc
mov
add
xor
or
in
out
jmp
and
mov
mov
push
dec
mov
dec
es
rcll
aad
fwait
jno
leave
arpl
test
call
mov
jne
jge
arpl
add
in
movsb
push
cmc
jb
push
std
sub
aaa
cmp
mov
sub
xchg
pop
cmc
xchg
shll
jnp
inc
sub
out
insb
mov
in
fsub
lods
mov
insl
inc
jns
jae
into
dec
pop
pop
aaa
mov
lahf
or
mov
sarb
push
cmp
add
jp
scas
dec
dec
sti
icebp
call
shl
push
jmp
inc
ds
adc
mov
add
and
mov
icebp
movsl
xchg
mov
push
loopne
fs
adc
out
leave
fimull
loop
xchg
mov
jg
popf
sbb
lret
sub
js
test
cmp
sarl
fcomps
subb
sub
sbb
in
fsubrl
add
ret
popf
mov
insb
jl
pop
xchg
pop
and
mulb
add
cwtl
into
mov
add
js
fnstenv
cli
jmp
dec
and
mov
and
jmp
outsl
mov
repnz
imul
jno
sbb
jns
repnz
mov
aad
sbb
mov
or
dec
mov
inc
push
dec
push
mov
mov
inc
rorb
movsb
popf
add
jbe
out
outsb
mov
pushl
mov
test
bound
fsubr
into
lahf
push
test
mov
cmc
dec
rclb
xor
arpl
cmc
lret
stc
negl
out
hlt
bound
inc
dec
mov
lret
pop
cmp
rorl
sub
and
sahf
pop
adc
xchg
mov
push
out
je
test
stc
aad
fisubrs
push
cmp
cmp
in
mov
cwtl
cmp
mov
ja
shrb
push
jmp
fsubs
ja
jge
arpl
jno
and
ret
adc
aad
sub
out
call
adc
xor
adc
stos
cmp
push
inc
and
mov
push
inc
stos
mov
xor
push
stos
fadds
sub
dec
xchg
shll
imulb
add
sahf
out
sti
and
xchg
or
loop
inc
mov
int3
subl
test
xor
pop
pop
int
add
mov
cmc
lea
adc
int
cld
enter
aam
adc
pop
or
push
imul
lods
mov
or
imul
hlt
js
movsb
mov
mov
lea
test
jmp
or
out
jle
std
data16
adc
push
ja
bound
loop
jp
testl
sub
in
xchg
mov
mov
ja
xor
mov
dec
cmpl
repnz
xor
ret
negb
in
push
xchg
out
dec
call
push
add
push
and
jp
mov
jge
cmp
and
push
out
push
push
sub
in
mov
sub
jbe
push
and
ret
dec
and
dec
push
aaa
mov
cmpl
dec
sbb
mov
dec
pop
imul
sbb
shlb
sub
cmp
push
mov
push
rcrl
aad
lea
mov
xchg
clc
xor
jp
in
inc
adcb
or
and
xlat
lods
add
jg
cmpsb
sbb
sarb
push
testb
lock
fmul
sbb
sub
jb
sbb
push
iret
cli
adc
xchg
jp
adc
and
xchg
daa
pop
mov
mov
jmp
mov
sbb
mov
add
push
xchg
pushf
sbb
insb
inc
push
jns
add
xor
pop
into
popf
jg
aaa
pop
in
adc
push
xchg
sbb
loopne
cs
push
push
ret
mov
sbb
notb
pop
push
movsb
sti
cmc
xor
movsb
mov
es
cmpsl
mov
adc
pushl
in
add
int
xchg
in
addr16
inc
jmp
arpl
hlt
inc
adc
and
adc
mov
lcall
mov
std
ret
jl
sahf
loope
or
push
in
dec
cli
leave
jnp
cs
sbb
jp
sbbl
roll
xchg
dec
pop
mov
mov
push
jnp
popf
aam
xchg
pusha
xor
push
pop
adc
sub
add
jle
mov
dec
pop
in
sbb
movsl
lods
lcall
mov
sahf
das
aas
pop
enter
imul
xor
dec
cmp
sti
out
xchg
adc
cmp
mov
and
sub
bound
shlb
icebp
movsb
pop
lock
inc
cmp
jmp
mov
or
int
sub
pop
jns
popf
add
in
mov
testl
push
out
pop
cltd
pushf
cwtl
movsb
insl
lcall
movsbl
jne
sbb
fwait
std
outsb
rcrl
std
push
mov
scas
stos
sub
shl
std
xor
pop
iret
mov
xor
movsb
call
or
mov
shrb
pop
dec
mov
movsb
dec
subb
movsb
pop
std
pop
ss
mov
sbb
push
xor
add
aas
lfs
pop
xchg
xchg
cltd
jp
ret
jns
nop
jb
or
mov
inc
or
mov
pop
cmp
lods
test
stc
cld
insb
cltd
sub
push
pop
popa
out
cmpsb
sbb
mov
push
fdivrs
orb
pop
inc
and
into
insb
cmp
xchg
scas
daa
sub
add
arpl
fmull
mov
jp
push
jae
loopne
xorl
js
mov
pop
inc
adc
dec
xlat
xchg
pusha
mov
gs
loope
leave
jmp
dec
pushf
pushf
ror
sub
fnstsw
cli
jl
out
ja
cmc
pop
add
xor
adc
loope
ds
fisttps
hlt
jae
pop
fimuls
xor
fnsave
fs
call
xor
clc
sbb
rcr
push
imul
mov
add
or
xorb
stc
aas
bound
daa
adc
or
mov
sub
nop
cmp
and
and
testl
out
xor
adc
mov
pop
fildll
int3
or
mov
ret
mov
add
loop
lret
fwait
popa
cmp
gs
lret
mov
decb
mov
std
loope
leave
add
inc
xchg
dec
xchg
jb
push
add
ljmp
dec
dec
dec
clc
fucomp
fadds
jmp
or
adc
xlat
and
imul
or
lds
pop
testb
outsl
pusha
mov
sbb
movsl
fisttpl
daa
mov
negl
lods
pop
pop
mov
pop
jns
adc
pop
jb
mov
sbb
mov
js
cld
and
jae
cmp
dec
add
push
repnz
mov
xchg
pop
or
loopne
shrl
mov
aaa
bound
mov
mov
adc
stos
jb
lahf
pop
fadds
xchg
subb
sub
dec
xor
jg
fsubr
add
pop
dec
pop
cwtl
mov
and
scas
mov
dec
and
int
mov
pop
sbb
or
dec
movsl
push
xor
subb
dec
xor
shr
inc
add
mov
push
pop
mov
inc
mov
inc
in
pop
outsl
lock
loope
and
rolb
imul
cmp
pop
jge
pusha
outsb
push
loopne
cld
data16
ljmp
movsl
movsb
inc
sbb
in
ljmp
movsb
inc
es
pop
push
out
mov
cltd
imul
das
jge
jg
xchg
xchg
das
bound
or
fstl
cmpsb
push
cmp
pop
nop
push
inc
sahf
cmp
mov
pop
mov
popa
jns
ja
and
xor
jae
sbb
bound
shll
sub
inc
mov
movsb
rclb
pop
filds
jl
rolb
insl
and
cmpsl
sub
fs
jle
std
jmp
pop
sub
mov
shll
xorb
and
pop
ret
inc
xchg
test
mov
mov
outsl
inc
repnz
or
cmpsb
fnop
xor
pop
push
xchg
inc
dec
lret
loop
dec
stos
repz
pop
cmp
inc
mov
gs
mov
mov
inc
sarb
rorb
pop
ret
pusha
fistpll
pop
scas
push
test
xor
inc
sarl
push
test
pop
sbb
sbb
xorl
cs
arpl
pop
push
or
les
test
cli
gs
mov
andb
cmpsb
lret
jmp
dec
cmc
dec
push
stc
or
nop
int
mov
in
ljmp
sub
lock
stos
jg
cwtl
sub
fs
sbb
int
in
dec
outsl
and
jecxz
mov
xchg
sub
mov
int
mov
fildll
fistl
push
jmp
push
lea
int3
shlb
test
push
cmpsb
daa
das
mov
jae
test
lret
fistpll
icebp
pop
sub
ds
lock
sahf
inc
mov
sarb
rcll
jne
or
js
filds
inc
pop
pop
cmp
add
out
jno
fisttpll
test
push
mov
inc
aas
pop
add
xor
push
sbbl
push
bound
push
inc
push
add
inc
bound
xor
push
or
mov
or
bnd
inc
fldenv
dec
adc
cmpsb
sub
loop
or
fsubrp
pushf
cmp
fidivrl
jno
ret
or
jns
cmc
and
popa
adc
fsubrs
jne
imul
scas
xorb
and
sbb
cmc
sub
in
pop
inc
jne
leave
push
ljmp
and
mov
push
xorb
in
cld
add
mov
jge
dec
jb
jb
add
sub
push
xchg
cmp
sub
std
push
cmp
inc
gs
sti
inc
in
fdivs
dec
call
xor
add
dec
jle
cmp
mov
inc
jnp
in
lds
push
mov
imul
sub
loope
jb
int
popf
push
or
dec
mov
cltd
push
and
insl
push
adc
cmp
lock
push
xchg
xor
add
js
and
out
xchg
add
jbe,pt
aaa
push
mov
leave
ret
addr16
subb
or
jo
xchg
out
mov
inc
add
sub
stc
fs
jecxz
mov
pop
jno
adc
insb
dec
xchg
ds
mov
fnstenv
pop
mov
pop
dec
inc
xor
sbbb
pop
cli
jl
xorl
in
ror
push
popf
mov
mov
aad
pop
lods
mov
mov
int3
mov
fwait
pop
sub
cmpsl
xor
mov
jle
rcll
mov
pop
mov
fdivl
aad
sbb
mov
add
stos
sub
test
pop
xor
jp
cmp
jle
popf
andl
iret
cli
xchg
or
push
xor
fstpl
test
push
jge
cmp
jg
jp
iret
dec
dec
rcr
insb
mov
out
mov
jp
aam
pop
jnp
adc
cli
or
ret
or
loope
scas
mov
sbb
scas
rolb
arpl
add
into
loop
mov
xchg
es
jp
and
pop
adc
sti
pop
das
clc
inc
push
in
pop
into
add
aam
icebp
xor
xchg
ss
push
push
out
rcll
mov
mov
loopne
jnp
pop
cli
mov
imul
scas
outsl
lock
xchg
leave
ss
sub
shrb
scas
nop
pop
loope
xchg
pushf
xchg
xor
push
jecxz
stos
outsl
ror
insb
dec
dec
add
int3
jg
inc
xchg
test
mov
jmp
lods
xlat
es
inc
lret
inc
lods
jb
outsb
xchg
scas
xchg
ljmp
lret
inc
jmp
es
push
inc
and
cmp
notb
jmp
push
xor
pop
push
pop
sub
add
mov
and
sbb
sub
xor
xor
and
jl
lods
and
rcr
addr16
hlt
mov
test
adc
shrb
push
out
xchg
push
pop
pushf
dec
xor
leave
incl
jno
test
mov
or
mov
add
das
aad
cmp
xor
add
adc
clc
idiv
test
sbb
mov
inc
inc
out
jecxz
cmp
les
fs
loopne
xor
cli
push
pushf
pop
lods
scas
lahf
ja
cmp
jno
mov
or
jge
je
std
or
pop
out
mov
fmuls
lea
stos
imul
dec
or
jno
and
xchg
repnz
shll
out
out
mov
cmp
fildl
ret
jmp
mov
jbe
enter
xlat
xchg
leave
xchg
inc
pop
push
xchg
les
pop
iret
xchg
nop
es
push
pop
cmp
andb
rcrl
lock
in
notl
leave
fisubrl
sub
inc
jg
push
test
pushf
andl
fiadds
insb
faddl
lods
icebp
add
xchg
rorl
cli
rol
mov
mov
cmpsl
xor
mov
inc
inc
mov
test
clc
xchg
std
mov
mov
jno,pn
mov
sbb
movsb
call
mov
pusha
ret
icebp
mov
xor
push
fldcw
xchg
sbb
outsb
popf
fmull
stc
pop
add
jp,pt
jecxz
jnp
sbbl
add
xor
jg
data16
pop
lahf
mov
adc
jo
inc
sbb
popf
pop
adc
cmc
lods
inc
add
daa
mov
jge
ret
inc
or
inc
lds
hlt
add
and
sub
pop
pop
adcl
movsb
les
jno
lods
mov
dec
adc
pop
xchg
das
int3
ss
int
ja
sbb
mov
repz
fisttpl
and
xchg
int3
fstps
mov
adc
xchg
sub
std
sahf
cmp
cmp
test
je
dec
in
jns
scas
pop
sbb
lods
jg
inc
cwtd
mov
add
in
sbb
sbb
and
fcmovnb
push
cwtl
mov
imul
mov
push
push
push
and
or
mov
scas
ffree
cmp
lret
sbb
jbe
in
or
pop
out
xor
mov
icebp
scas
mov
or
sub
jmp
push
pop
hlt
push
mov
xchg
daa
jae
xchg
lods
add
outsl
aaa
xchg
push
adc
adc
iret
inc
jge
repz
or
mov
into
jecxz
fsubrs
sbb
in
sarl
jl
popa
dec
mov
test
shlb
lea
cltd
lahf
sbb
or
hlt
mov
mov
lods
adc
aaa
movsl
imul
or
jl
sub
outsl
push
cwtl
mov
jo
push
jmp
push
cli
xchg
in
fdivp
in
fisubrs
out
mov
or
mov
aam
and
adc
and
leave
inc
fstpt
cmp
push
test
icebp
shl
imul
xchg
movsb
pop
cmp
cltd
pop
sbb
jmp
ret
adc
adc
mov
cmp
into
pop
cmpsl
in
icebp
mov
fwait
repnz
push
cmpb
popa
stos
jno
jno
notl
hlt
or
loop
mov
andb
outsl
add
rcrb
lock
lods
aaa
dec
jl
mov
cli
pop
push
jb
inc
mov
insl
or
ret
cmpb
push
pop
pop
fwait
cmp
inc
icebp
in
jp
std
or
test
mov
popf
push
pop
xchg
insl
nop
stos
cmp
and
sub
addr16
push
js
dec
rcrb
clc
jno
arpl
inc
imul
or
lret
jbe
sbb
shlb
adc
inc
mov
leave
clc
pop
or
adcl
idivl
mov
ror
out
mov
and
sbb
sbb
sarb
jle
cltd
outsl
scas
dec
aaa
adc
sub
inc
imul
fnsave
fxch
add
jb
push
mov
or
cmp
cmc
in
add
inc
mov
daa
popf
dec
cmp
xchg
rclb
es
adc
xchg
mov
bound
inc
xlat
imul
int
cwtl
mov
out
in
rcll
andl
mov
mov
mov
jno
mov
adc
fsts
mov
cli
enter
xchg
nop
stc
mov
enter
or
movsl
mov
pop
out
repnz
mov
sub
test
dec
inc
sub
loop
fadds
sbb
mov
jl
mov
cs
push
pop
enter
or
neg
ljmp
loop
xor
pop
xor
pushw
push
push
adc
jb
sti
sbb
jo
shll
sub
mov
or
push
dec
mov
dec
imul
popa
cltd
mov
dec
lcall
addl
mov
loope
cmpsl
aas
and
mov
movsb
sub
lock
nop
pop
mov
dec
mov
and
in
cmpsl
pop
cmpsl
cmpsb
roll
divps
int3
inc
dec
fucom
mov
mov
aas
jl
push
pushf
mov
lock
mov
inc
ficomps
cmc
enter
repz
jge
lret
out
hlt
inc
rorb
pop
pop
or
ret
mov
push
jge
or
leave
in
pop
mov
inc
cmpsb
inc
std
add
jp
add
aas
xor
mov
cmp
jg
addl
mov
js,pt
aaa
ret
push
mov
mov
fsubs
xchg
inc
jae
mov
mov
scas
lahf
sbb
imul
loope
call
sub
out
pop
into
or
mov
dec
mov
ret
inc
in
jns
jno
scas
and
mov
mov
xor
cmp
lods
iret
pop
sub
addb
add
push
incl
mov
pop
jg
adc
xor
add
xchg
dec
cmpsb
cmp
inc
fwait
sbb
push
cli
push
ds
add
ds
push
mov
sub
movsb
jmp
sbb
xor
movsb
xchg
or
stos
stc
and
inc
and
jle
fld
mov
les
hlt
dec
xchg
dec
xchg
lock
jbe
sub
aam
cs
das
mov
mov
test
mov
sub
jp
add
mov
flds
inc
push
fs
inc
dec
jns
mov
add
sub
in
test
roll
inc
mov
pop
cmp
sbb
pop
out
sarl
cmc
pop
cli
fcoml
dec
push
mov
pop
adc
xor
mov
pop
dec
aad
adc
and
sahf
popf
ja
push
dec
pop
incl
ret
mov
cltd
mov
adc
pop
shrl
out
push
bound
outsl
mov
enter
cmc
arpl
popf
dec
cli
sar
aas
addl
dec
inc
add
lock
fnstcw
orb
pop
stos
test
jo
call
mov
sbb
pop
mov
pop
xor
ja
fxch
jae
fildll
dec
es
icebp
in
push
sahf
dec
fstl
sbb
das
in
out
ret
cmp
dec
mov
pop
ret
stos
dec
and
loop
inc
inc
loope
repnz
adc
mov
cmp
outsb
xor
push
sti
test
lahf
xor
out
scas
xchg
and
popa
pop
jecxz
scas
mov
add
sti
mov
jb
sub
lods
lea
sahf
lods
sbb
cmpsb
add
push
add
icebp
ror
lods
clc
and
daa
cmp
jo
loopne
lods
inc
mov
xchg
adc
in
dec
repnz
hlt
andl
inc
les
nop
fnstenv
inc
stc
or
mov
stc
pop
push
xchg
shlb
sbb
jl
aad
pushf
outsl
mov
enter
lahf
sub
or
out
loop
xor
add
stc
xchg
lds
pop
sub
xchg
lods
mov
xor
cmpsl
fdivs
xchg
fldenv
inc
push
fimull
call
cld
mov
push
aas
test
test
popf
fidivrl
notb
enter
rcr
jbe
andl
xchg
sbbb
out
jae
js
rorl
rol
pop
xchg
or
xchg
mov
mov
out
fnstsw
lds
ljmp
neg
xchg
push
cmp
pop
or
mov
dec
insb
into
inc
sbb
data16
jmp
sarl
mov
sub
lcall
mov
and
addb
test
sbb
pop
pop
cmp
jmp
das
sub
popa
jmp
jb
mov
sub
push
popa
gs
cmpb
push
push
push
fcomps
out
stc
pop
mov
jns
inc
aam
mov
pop
cltd
out
ljmp
out
xchg
adc
ljmp
in
fadds
arpl
xor
cltd
jae
mov
popf
test
cmpsb
testb
and
jae
into
repz
cmp
pop
mov
fnstenv
push
mov
inc
mov
push
xchg
outsl
push
inc
flds
lcall
sbb
jmp
scas
jns
push
pushf
pop
test
cmp
ss
mov
je
bnd
shlb
fs
mov
data16
or
push
aam
pop
cmc
jnp
jne
pushf
adcl
js
sbb
and
mov
and
lock
and
leave
inc
ss
ja
push
jmp
cs
add
mov
sbb
stos
lahf
jno
insb
inc
add
inc
cmpsb
sahf
add
mov
cmp
mov
and
push
in
sub
jae
in
mov
sub
mov
mov
decb
loopne
fidivl
xchg
js
lahf
sbb
or
push
mov
loopne
mov
loopne
loope
lea
adc
inc
pop
insl
sahf
or
ljmp
or
not
mov
loop
filds
rcrl
sbb
icebp
jg
mov
mov
movsb
adc
out
pop
adc
fcoms
fistps
inc
icebp
roll
subl
loope
lret
xchg
add
mov
ret
lods
fisttpl
lret
outsl
dec
dec
xchg
mov
sub
mov
inc
movsl
bound
or
cmp
mov
int
adc
mov
rorb
adc
xor
shll
pop
rcl
jns
nop
xchg
ss
aaa
in
ljmp
adc
xor
and
jbe
dec
push
or
mov
xchg
icebp
sub
lcall
mov
add
pop
sub
mov
mov
ret
fsub
outsl
frstor
out
ffree
pusha
xchg
mov
fistpll
leave
test
jns
lods
negl
lahf
sub
mov
and
dec
sbb
adc
inc
mov
cwtl
xchg
add
icebp
xor
int
rolb
cmpsl
xor
fists
dec
push
xor
push
pop
mov
test
mov
stos
xor
xchg
sub
pop
jne
mov
rol
leave
xchg
movb
movsb
xlat
cwtl
sub
mov
sub
rcrb
jge
xor
pop
inc
cmp
lea
test
lods
xor
cs
jno
push
xchg
pop
xor
in
insb
xorl
sar
and
enter
loop
sbb
daa
pushw
mov
push
in
and
push
adc
xchg
push
dec
aaa
ret
loopne
shll
push
std
lea
or
ds
xor
fistpl
push
cmpl
xchg
daa
ficoml
lods
mov
dec
jbe
cmp
leave
push
cmpsl
adc
jne
inc
cmpsl
in
adc
jl
xor
pop
pushf
jg
xchg
outsb
mov
in
bound
mov
lcall
pop
iret
imul
dec
mov
pop
das
xor
data16
pop
mov
cmp
popa
cld
lods
push
lods
pop
repz
cmpsl
cmpsb
mov
and
cmp
push
out
push
mov
mov
sarb
insl
das
add
jp
push
mov
clc
movsl
hlt
stos
shll
xchg
clc
mov
mov
imul
jecxz
int3
out
mov
andl
xchg
popw
iret
inc
dec
mov
mov
mov
cmp
mov
push
bnd
mov
fdivrp
aad
cld
inc
sub
add
mov
stc
idiv
inc
je
lahf
dec
ja
mov
jbe
lock
adc
hlt
xor
adc
or
mov
sbbb
inc
pusha
into
xor
in
scas
data16
fldt
fdivrs
push
in
mov
repz
add
shlb
orb
rcll
popa
imul
jnp
mov
loopne
sahf
lds
jl
xchg
arpl
enter
push
adc
or
inc
sub
cmc
mov
loope
lea
call
shrb
out
mov
sbbb
cs
add
popa
sbb
xor
xchg
nop
insl
enter
aad
inc
daa
push
inc
or
pop
adc
stos
cli
push
in
mov
test
out
push
mov
rcrl
cmpb
filds
nop
mov
addl
cld
inc
adc
inc
fdivl
popa
mov
loop
mov
stos
adc
mov
xchg
stos
repz
inc
cmp
popf
mov
lds
jp
loope
mov
bound
sarb
mov
mov
cmp
clc
pop
xor
and
lea
mov
inc
xchg
es
inc
outsl
test
jne
add
inc
xor
ret
xor
arpl
pop
fisubrs
jno
xchg
dec
xchg
leave
imul
push
out
dec
sbb
rolb
push
rcr
push
rorl
ds
jne
mov
fiaddl
into
pop
xor
mov
add
aaa
rclb
stc
lock
lret
dec
sti
sbb
das
mov
cwtl
push
and
cmp
pop
arpl
loopne
and
mov
int
pop
sub
adc
adc
pop
cmp
push
push
mov
sbb
outsl
add
xor
or
jne
add
mov
std
and
mov
cmpb
ret
mov
in
pushf
outsb
jg
xchg
vpsadbw
mov
iret
enter
enter
into
lds
jno
mov
xor
pop
push
loop
and
xor
mov
cmp
or
int3
clc
xchg
push
inc
mov
adc
scas
fistpll
notl
fsubl
dec
je
cmc
mov
ret
sub
cltd
jecxz
xchg
sbb
gs
out
jp
push
rcrb
mov
hlt
dec
fcom
mov
inc
or
mov
mov
cwtl
int3
sbb
aad
jecxz
pop
cmp
cmpsl
outsl
mov
cmpsl
fsub
push
push
cmpsb
mov
jge
lret
fwait
xchg
jecxz
pop
inc
outsl
or
or
test
xchg
or
lea
pop
je
mov
mov
fsubr
aam
insb
rolb
loopne
push
sub
loope
mov
pusha
repnz
fsubrs
cmp
mov
push
shl
xchg
push
loopne
js
insl
lahf
and
dec
sahf
popf
xor
sbb
inc
pop
lods
adc
in
inc
sarb
arpl
lods
insb
mov
or
andb
inc
repz
fs
test
cmp
hlt
pushf
adc
cmc
int
xor
push
lret
inc
push
fistpl
in
mov
mov
pusha
lcall
push
pop
fmull
addr16
in
mov
ficomps
and
repnz
arpl
out
ss
lahf
mov
or
push
push
mov
enter
inc
lock
push
arpl
notb
cmp
and
jge,pt
out
int3
psadbw
arpl
dec
lret
pop
aas
je
out
mov
jle
or
xchg
add
dec
std
sub
or
dec
aam
enter
lds
aas
inc
movsb
in
push
cmp
jecxz
test
jge
imulb
mov
inc
cmp
ja
nop
insl
ljmp
das
rolb
repz
insl
rcrb
jo
fsubs
scas
cmpsl
lods
mov
shrb
subl
cmp
or
loop
sub
jmp
mov
inc
addb
popa
shrl
lcall
xchg
add
jmp
adc
in
je
aad
jnp
mov
cmc
mov
push
stos
inc
cmp
fs
stos
xor
loop
cmpsb
and
dec
inc
cmp
test
lret
iret
out
dec
jb
pop
adc
adc
insl
roll
out
cmp
dec
rorl
mov
jb
sub
mov
xor
sahf
loope
mov
aad
or
imul
out
mov
aad
popa
xchg
leave
jge
imul
mov
in
add
mov
das
clc
push
mov
testb
popf
fisttpll
mov
mov
cwtl
repz
out
fs
lea
fwait
stos
int3
jmp
add
int
mov
insb
es
sub
mov
dec
popa
xlat
std
xchg
mov
jns
ja
add
and
and
pop
xchg
adc
lea
adc
xor
mul
cmc
nop
mov
jle,pt
leave
sbb
mov
cmp
inc
mov
movsb
xchg
inc
loopne
cli
xlat
xor
mov
icebp
ret
imul
cmp
xor
sbbb
add
adcb
ret
aad
jp
fwait
cltd
andl
add
mov
jmp
rolb
xor
movl
stc
xor
mov
cwtl
xchg
test
mov
jbe
in
push
mov
and
jmp
rcrl
call
movsl
call
test
jb
mov
cltd
lcall
ret
mov
repz
dec
mov
dec
push
add
and
or
daa
insb
push
orl
add
or
fldt
adc
pushf
cltd
shlb
cltd
jno
push
and
imul
fldenv
xor
cwtl
pushf
rcrb
clc
sub
out
pop
jle
push
xchg
dec
insl
push
cmp
sbb
xor
addr16
push
sbb
or
mov
pop
cwtl
push
lahf
xor
in
inc
push
arpl
adc
gs
scas
xor
pop
push
inc
inc
ljmp
cmp
inc
sbb
cmp
cmp
jmp
out
pop
aas
nop
mov
sub
adc
jno
jnp
scas
mov
jns
das
rolb
jmp
in
js
lds
mov
andl
sbb
xlat
jl
cmp
lea
pop
inc
leave
pusha
sbb
pop
roll
jp
addr16
xor
mov
insb
dec
fwait
add
aad
or
pop
mov
std
in
xchg
pop
mov
sbb
push
sub
inc
xchg
movsl
mov
xchg
jecxz
movsl
mov
repnz
mov
leave
movsb
mov
mov
cs
insb
cmp
dec
aas
xchg
jb
test
mov
add
pop
add
hlt
jge
jge
inc
mov
ja
jnp
ret
push
lcall
movb
mov
popa
daa
test
adc
xor
lock
ret
addr16
icebp
xchg
mov
and
cmp
xor
xor
push
fwait
lret
xchg
popf
dec
push
push
add
ljmp
fcmovnb
or
mov
imul
cmpsb
add
ja
aaa
and
mov
incl
push
xchg
adc
lret
pop
push
mov
or
sub
jecxz
sub
out
jne
mov
jecxz
ret
aam
push
dec
jb
das
in
mov
dec
sub
es
ds
xchg
jno
outsl
in
cs
and
cs
ljmp
out
rcll
movsl
xor
xchg
dec
mov
test
rcrb
mov
and
jb
cmp
or
sbb
dec
jg
lret
shrb
and
push
push
dec
cmp
call
data16
xchg
adc
out
push
std
cltd
cltd
dec
mov
dec
mov
add
and
int3
imul
sub
mov
mov
popa
loope
dec
pop
leave
push
in
dec
daa
notl
adc
rclb
mov
cmp
pushl
rolb
in
daa
and
movsb
push
addr16
mov
loopne
cltd
push
push
mov
out
inc
or
add
outsb
sub
inc
sbb
aaa
ret
rcll
aaa
xchg
push
fnstcw
jp
cmpsb
out
or
lds
or
xchg
adc
cld
adc
addr16
push
mov
loop
inc
inc
jbe
xor
mov
push
mov
jmp
add
data16
mulb
aam
mov
push
adc
and
inc
aam
shlb
sti
sbb
add
xor
lret
cmpl
lret
xor
les
fwait
aaa
push
idivb
mov
mov
mov
inc
sarl
pusha
mov
popf
push
add
mov
xor
jo
pop
clc
xchg
fists
in
icebp
loopne
inc
insb
mov
stc
scas
pop
xlat
rclb
imul
add
pushf
push
stos
add
fs
add
sbb
and
mov
add
adc
inc
and
sbb
cmp
xchg
cli
sub
gs
push
pop
xor
mov
data16
gs
mov
test
or
aam
fmul
pop
mov
and
loope
pop
js
push
sub
push
dec
push
fmull
negl
inc
xchg
js
leave
outsl
inc
add
sbbl
mov
popl
repz
xor
int3
fdivrs
enter
push
pop
or
inc
cwtl
sub
stos
dec
adc
xchg
loope
add
pop
repnz
push
dec
aad
jp
rcrl
int3
mov
xchg
jbe
or
xor
sbb
push
jns
in
xchg
outsb
xchg
sub
xchg
subl
idivb
adc
enter
inc
test
in
inc
out
es
aam
mov
mov
sti
popa
shl
sbb
and
mov
push
mov
push
add
jmp
mov
scas
outsb
and
and
addl
fnstsw
subl
mov
add
movsl
cli
mov
mov
testl
mov
push
cld
fwait
lret
lea
push
pop
inc
int3
lcall
dec
jo
xchg
mov
sbb
outsb
scas
shlb
jmp
dec
loop
stc
aaa
pop
xchg
inc
fyl2x
inc
into
xorb
fisttpl
xchg
ret
lcall
leave
xor
mov
cwtl
clc
ljmp
hlt
jmp
mov
lret
pop
aaa
popa
inc
sub
repz
stos
repnz
sub
jbe
leave
xchg
fwait
cmp
cmp
xchg
pusha
repz
fistpl
mov
mov
sbb
lret
or
push
fadds
lods
or
jmp
test
call
adc
dec
pminub
xchg
repnz
jns
push
rcrl
fdivrs
xchg
cmp
push
xchg
mov
and
sbb
sbb
movsb
pop
fildl
mov
and
and
mov
fiadds
inc
jnp
call
lock
and
jo
xor
negb
sub
shrb
test
sarl
outsl
and
jl
insl
cmp
pushf
push
xchg
push
lret
cmp
faddl
jl
and
rcl
outsl
roll
mov
std
jp
cmp
push
mov
mov
push
add
lret
in
sbb
sahf
sub
mov
nop
push
xor
imul
data16
in
mov
pushf
jae
add
xlat
icebp
xchg
cmp
push
add
fdivs
adc
adc
rorb
scas
cmp
sub
fsts
push
in
cmpsl
cmpsb
test
stos
rcr
xchg
scas
sub
pop
loopne
stos
insb
andl
adc
push
adcl
push
sub
dec
subb
push
cmp
into
sahf
push
test
iret
inc
repnz
dec
fidivrl
xchg
jle
inc
sbb
outsl
xchg
sbb
xor
pop
mov
xchg
sbbl
jae
ret
cli
repz
push
xchg
aaa
out
movsb
push
shlb
icebp
pop
push
pop
sub
mov
fstl
enter
or
xor
lcall
xchg
push
pop
lds
loop
dec
lahf
fistl
and
mov
jle
pop
cmp
bound
hlt
and
out
addr16
mov
mov
dec
jae
dec
cmpsb
fisubrs
scas
sbb
sbb
mov
xchg
sub
div
arpl
jl
lock
xchg
xor
dec
pop
ja
repnz
out
cmp
mov
mov
mov
shll
mov
icebp
and
pop
xlat
inc
mov
mov
lock
shlb
dec
sub
lret
pop
inc
mov
insl
out
dec
mov
mov
mov
mov
jnp
loope
cmp
sahf
aad
scas
lahf
jb
out
jg
neg
xor
mov
outsb
ljmp
aaa
repz
xchg
inc
sbb
stc
jns
mov
cli
pop
push
jecxz
inc
push
lods
cmp
aam
add
sub
int
out
mov
sub
lds
cli
dec
adcb
xor
lret
gs
mov
xor
lock
divl
les
call
out
cmc
cmc
pop
pop
xchg
out
sbbl
mov
cmp
ljmp
out
xor
jl
mov
dec
or
ss
mov
and
xor
iret
push
dec
jecxz
nop
xchg
in
xchg
jbe
jg
push
jge
hlt
cmpsl
aas
sbb
scas
inc
loopne
push
bound
fsubrs
scas
inc
popf
or
cmp
cs
scas
out
stc
mov
dec
dec
push
sbb
loop
pop
or
fcmovnb
inc
pop
add
fisttpll
ret
dec
mov
lds
jge
xchg
sahf
inc
mov
or
sub
or
push
sti
nop
xor
xchg
popa
jg
sub
pop
fidivrs
repnz
jae
into
rorl
xchg
ja
mov
add
cmpsb
inc
sbb
xchg
add
and
xchg
add
mov
out
loope
nop
or
mov
out
insb
xor
and
fcoms
imul
cmp
or
loop
cld
rcll
cs
pushf
test
pop
ret
adc
adc
mov
out
mov
mov
mov
fcmovbe
inc
insl
and
jl,pn
stos
jp
push
out
jb
movsb
sbb
sbb
adc
call
inc
cmpsl
mov
loope
mov
mov
mov
lret
push
mov
loop
lock
and
dec
out
int
icebp
movsb
arpl
out
dec
xchg
jns
mov
cmp
pop
test
xchg
lcall
les
hlt
ljmp
push
mov
mov
adc
movsb
xor
fmulp
imul
cmpsb
dec
jno
sbb
ljmp
jo
jmp
pop
out
roll
xchg
sub
daa
das
dec
jmp
jne
mov
nop
outsb
cwtl
stc
int3
in
lods
rorl
adc
ss
mov
mov
xchg
insb
loope
ljmp
wrmsr
push
sub
jle
scas
jns
inc
mov
inc
fisubl
fisubs
fsubs
add
sbb
xchg
mov
outsl
test
sbb
fwait
or
repz
xchg
movsl
ret
data16
dec
adc
xor
add
mov
daa
and
mov
xor
jno
stc
aas
mov
push
ljmp
das
push
ljmp
xor
ret
daa
inc
rcrl
add
adc
call
outsl
xor
push
xchg
shl
sub
and
mov
es
cmp
lcall
jo
pop
mov
popl
push
lods
mov
push
rclb
loopne
das
push
xor
clc
or
pop
int
sbb
mov
test
ljmp
jmp
or
mov
fsubs
mov
into
inc
mov
div
cmp
cmp
ret
cltd
cld
sbb
outsl
movsb
int3
cmp
or
jg
insl
push
ds
pop
jmp
mov
lods
jnp
loope
cli
sbb
pop
pushaw
mov
clc
xchg
push
clc
push
in
add
xchg
shlb
std
and
xor
sbb
andb
mov
push
loop
jmp
ret
and
out
and
movsl
mov
popw
push
cltd
sbb
xor
sub
jge
mov
pop
sub
xor
or
jecxz
int3
imul
leave
ds
or
jb
xchg
cmp
rcll
fidivrl
testb
aas
inc
xchg
add
cli
jp
cmp
adc
ret
adc
push
dec
jecxz
mov
jecxz
mov
mov
addr16
loopne
mov
loope
sbb
xchg
mov
inc
add
or
loop
nop
aad
mov
and
aad
sbb
pop
popf
pushl
ror
cmp
cli
fldcw
inc
add
mov
out
cmpsl
clc
add
mov
stc
insb
adc
ljmp
fsubl
pusha
iret
add
pop
mov
push
mov
test
daa
ja
cmp
pushf
iret
fsubl
push
push
and
in
ret
push
test
loop
sub
sub
data16
mov
pop
and
mov
xor
aad
inc
mov
fs
adc
xchg
sbb
add
aad
gs
fcomi
lock
cwtl
ljmp
ss
test
clc
dec
lods
mov
mov
rcll
xchg
enter
mov
cmp
mov
pop
xchg
lea
mov
iret
push
push
ret
dec
lods
xchg
mov
stc
inc
xchg
jnp
ds
and
in
push
push
dec
fldt
loope
or
and
lock
xchg
loopne
pop
or
push
xchg
ret
inc
mov
sbb
fisttps
adc
jl
bound
inc
dec
sbb
inc
pop
cli
mov
adc
lret
cmc
cwtl
lods
jle
mov
scas
gs
push
mov
inc
xor
push
test
nop
je
xchg
pushf
int
mov
or
dec
roll
mov
pop
or
mov
or
sub
pop
jbe
sahf
adc
jle
cwtl
dec
sub
bound
or
js
add
pop
cmpsb
arpl
jmp
mov
outsb
mov
fcompl
es
adc
mov
mov
xchg
xor
xor
and
in
pop
lock
roll
rcl
push
sub
jp
or
in
add
scas
movsb
divb
in
push
nop
mov
push
insb
ret
and
pushf
movsb
mov
es
add
xor
pop
imul
gs
mov
cmpsb
sbb
lret
or
movsl
fildl
push
xchg
dec
fnsave
xchg
loop
push
ret
cmc
movsb
arpl
lret
xor
aaa
sarb
repz
in
jge
mov
adc
xor
pop
loop
push
sub
enter
jno
inc
mov
outsl
mov
rorl
and
push
xchg
jecxz
mov
adc
jbe
call
rcll
sbb
fwait
dec
test
xchg
fistpll
fadds
pop
loopne
inc
push
add
sub
test
or
mov
and
sbb
outsb
jecxz
cmp
clc
sub
cwtl
push
movsl
ja
mov
jg
dec
xor
xchg
sbb
cld
sbb
fs
fwait
xchg
inc
cld
pop
cmc
push
movsl
dec
arpl
insb
call
pop
or
loopne
and
jbe
fcomps
pop
lods
pop
scas
pop
cmc
aas
push
lods
stc
daa
or
or
sbb
cmpsl
jg
dec
sub
cltd
or
nop
dec
fisubl
or
and
sub
xchg
lods
push
stos
lods
movsl
lock
dec
mov
xor
pop
testb
popa
sarb
cs
jmp
stos
mov
mov
pop
js
pop
sar
mov
cmp
pop
jo
and
testb
out
xor
out
pop
push
cmc
int3
into
pushf
mov
pop
jp
inc
add
cmp
inc
cmp
add
lret
pop
push
cmp
push
inc
lock
insl
jae
cld
lcall
dec
sub
jl
mov
adc
lods
movsb
jae
in
lods
inc
leave
stos
sbb
mov
push
xchg
xor
add
push
mov
std
and
lret
dec
int3
shlb
jmp
xlat
in
push
mov
sahf
movsb
jmp
and
pop
or
fimuls
pop
xor
loope
popf
fnsave
pusha
cmpb
pop
push
rolb
cli
aaa
fwait
clc
daa
hlt
test
aas
mov
aad
push
test
arpl
mov
leave
and
mov
fldt
movsl
in
xor
gs
in
sub
fs
add
out
jnp
xchg
in
ja
addr16
es
out
lds
into
imul
mov
stc
int
jnp
imul
mov
adc
push
cmc
lock
scas
daa
ss
add
aam
paddq
repnz
cltd
sub
loop
pop
nop
or
mov
clc
mov
lock
mov
add
jecxz
dec
pushf
gs
xchg
lods
xchg
lret
fstl
rorb
ja
cmpb
pop
pop
xlat
dec
fnsave
inc
xor
xchg
cmp
add
fucomp
dec
or
pop
jo
mov
sbb
cmc
mov
outsb
sbb
xchg
lret
xchg
insl
dec
xchg
pop
push
add
push
icebp
xchg
dec
aam
push
scas
cmp
loopne
mov
shr
pop
mov
push
pop
adc
loope
xchg
orl
xchg
pop
xorb
push
int3
loopne
cmc
fwait
int
and
add
fcompl
or
or
xchg
and
js
mov
insb
push
xchg
sahf
jmp
add
add
and
xlat
dec
xchg
in
xor
daa
es
fwait
push
enter
insl
sub
jae
sbb
inc
stos
pop
movsl
jl
shl
jb
inc
mov
push
xchg
rcl
jecxz
loop
xor
mov
xor
out
dec
subb
sbb
stc
aaa
inc
or
xchg
rclb
fbld
or
or
jns
mov
notl
shll
dec
mov
sti
push
mov
xor
fisubl
jnp
or
rol
lcall
lods
xor
addr16
xchg
jg
fldl
and
mov
or
jecxz
inc
mov
stos
mov
arpl
fists
or
loope
je
lods
dec
mov
xchg
jnp
addl
cs
cmp
pop
rcrb
xchg
test
ja
sahf
call
and
or
adc
sbb
fidivl
fwait
jp
cmp
stos
jl
fwait
lret
bound
aad
xchg
cmp
out
ljmp
pop
sbb
add
cmpsb
in
mov
lds
sub
dec
test
and
inc
adc
fucomi
ret
xor
sahf
pop
fcomps
test
adc
fmulp
inc
adc
int3
shll
movsb
aas
aam
shr
adcl
jb
std
cmpsl
inc
ja
inc
jmp
sbb
pop
inc
addl
notl
jnp
push
fnsave
out
inc
and
mov
aam
xorl
cmpsl
smsw
test
pusha
push
push
sbb
mov
test
sbb
popf
xlat
push
andb
popf
call
mov
jbe
xchg
cs
decl
imul
sbb
and
repz
push
cmpsb
outsb
inc
lret
repnz
add
dec
jno
or
mov
xchg
mov
insb
xchg
cmp
in
adc
adc
loopne
imul
xchg
push
loope
dec
shr
inc
pusha
aad
adc
adc
das
xor
int
sub
js
pop
rcrl
sub
orb
or
jecxz
xor
add
xchg
xchg
inc
inc
inc
xchg
adcb
push
pop
xchg
and
mov
pushf
and
loope
xchg
sbb
sub
insb
cmp
jge
lods
mov
mov
fildll
pop
rorl
ja
xchg
pop
fadd
jmp
push
cwtl
mov
fsubrp
test
jmp
pop
lcall
or
jl
ja
enter
add
int
int
add
or
jne
dec
lret
movsb
or
push
xchg
test
iret
je
xor
lret
mov
cmp
mov
cld
enter
jl
jp
and
fincstp
xchg
mov
lods
lods
movsl
adc
pop
mov
xorb
xchg
testb
or
out
repnz
mov
mov
adc
push
aam
jp
pop
mov
cmpsb
mov
xor
push
and
add
mov
adc
push
pushf
aaa
pop
js
adc
cld
loopne
lods
jge
out
jle
jg
mov
and
xor
data16
xchg
dec
movsb
cmp
scas
pushf
enter
aas
aas
mov
lea
not
mov
das
scas
ja
push
movsl
movsl
pop
inc
pushw
jnp
pop
cmp
loop
xchg
pop
xchg
lods
fcmovnu
jg
rcrl
mov
push
adc
cmpsl
daa
js
ds
or
add
inc
mov
inc
jmp
imul
cmp
movsl
xchg
mulb
add
stos
adc
repnz
shrb
test
call
rdmsr
sub
out
sub
into
sub
faddl
xor
enter
adc
clc
jae
xor
adc
mov
call
jb
sti
jo
inc
or
addr16
stos
xor
inc
dec
call
pop
pop
in
dec
sbb
leave
ret
pop
mov
and
out
scas
pop
and
shll
inc
push
adc
push
testl
xor
add
xchg
cmp
mov
into
adc
mov
sub
out
adc
cmp
push
stos
int
rolb
iret
mov
stc
loopne
shrb
pop
mov
gs
cmp
ficompl
loopne
bnd
xchg
idiv
cmp
jmp
or
cmp
sub
imul
dec
pop
dec
mull
inc
cld
lret
imul
lret
test
frstor
outsb
push
cwtl
dec
inc
push
loopne
inc
mov
roll
rcrb
inc
sbb
adc
sbb
inc
cs
push
add
xchg
pop
int
enter
lock
shlb
add
xchg
cmc
pop
adc
mov
ss
mov
aaa
mov
xchg
gs
mov
aaa
add
imul
pop
in
sbb
jmp
notl
xchg
inc
out
pop
lcall
popw
das
out
aaa
pop
lahf
std
incb
fptan
in
jp
push
in
jbe
jae
dec
mov
in
jmp
mov
loop
mov
popa
mov
mov
xor
mov
fildll
popf
call
mov
pop
cltd
bound
lcall
add
mov
jbe
pop
xchg
or
addr16
sbb
cltd
ss
lcall
clc
dec
movsl
outsb
jg
ja
inc
sub
ljmp
pop
cmp
ret
negb
cwtl
das
test
push
cmp
ret
data16
lret
lret
dec
ret
mov
sub
outsb
sub
cld
outsl
into
inc
cmp
xor
jl
cmp
ret
bound
lcall
dec
sub
cmc
add
sbb
xchg
lds
test
out
push
pushf
mov
push
outsl
or
jp
push
neg
sbb
ljmp
insl
cmp
mov
inc
pushf
leave
xchg
aas
outsl
imul
mov
sbb
adc
mov
scas
pop
cmpsl
addl
sti
inc
push
lahf
inc
mov
adc
roll
lods
shl
push
aas
loop
out
int
in
aas
jb
fmulp
pushf
rclb
sbb
add
std
sub
enter
arpl
test
jnp
es
jbe
xchg
add
leave
lret
push
push
push
cmpsl
adc
fiadds
jnp
adc
out
sti
mov
cmp
lcall
push
stc
add
mov
aas
jl
test
jne
and
movsb
push
sub
stos
jbe
test
sbb
imul
int
jae
and
std
jl
mov
mov
jbe
add
xchg
test
ret
pop
std
or
sbb
xchg
fwait
dec
sarl
dec
mov
add
cmp
cmp
or
xor
add
sbb
fldt
cmpsb
stc
pop
popa
push
mov
out
sbb
lahf
add
cwtl
mov
xchg
je
nop
adc
das
mov
inc
or
lret
rorb
xchg
or
mov
xor
es
push
mov
xchg
mov
movsb
movsb
mov
pop
stc
or
adc
jno
dec
imul
cwtl
add
pushf
lcall
int
ljmp
mov
cmp
jecxz
mov
push
jmp
jno
push
xlat
push
add
ljmp
xchg
data16
je
lea
mov
mov
xor
add
dec
xor
jl
inc
pop
jg
popa
dec
js
les
inc
jge
adc
fbstp
mov
or
xor
mov
xchg
ljmp
scas
aam
lods
dec
std
loop
xor
out
adc
jecxz
xor
xor
xor
add
push
xor
push
addr16
je
das
push
andb
pop
cmp
sahf
fisubs
icebp
rorb
sbb
sti
int3
pop
inc
stc
pushf
adc
mov
aaa
clc
xor
call
pop
mov
mov
popf
push
sahf
shl
inc
stos
das
and
lahf
sahf
inc
inc
int
ds
clc
enter
jo
sbb
icebp
stos
movsl
add
or
adc
int
and
fstps
stos
dec
movups
repnz
cwtl
lahf
call
std
xchg
jb
cmc
add
pop
or
and
insb
cmp
jge
dec
pop
inc
icebp
pop
insb
push
icebp
cmpsl
push
roll
or
adc
ds
movsl
mov
or
repz
in
and
push
mov
movsb
aas
mov
mov
mov
ljmp
mov
mov
ds
sarl
push
push
das
sub
in
xor
mov
xchg
add
popa
test
movsb
scas
xor
pop
lahf
mov
dec
mov
in
push
shlb
fcmovb
dec
orl
sti
cwtl
mov
test
sub
imul
or
imul
push
add
pop
insb
cmp
outsl
xchg
mov
add
int
lret
push
cltd
clc
and
in
mov
pop
inc
insl
mov
mov
cmp
push
mov
scas
mov
lcall
gs
sbb
lret
decl
fcoms
int3
in
clc
lret
mov
int
push
test
insb
bound
jb
inc
pop
sub
xchg
les
mulb
jg
xor
push
les
js
pop
sbb
lods
clc
add
xor
int3
lahf
mov
pop
push
push
add
lahf
jle
pushf
shlb
xchg
lods
cwtl
jne
shrl
adc
lds
cmp
mov
movsl
loopne
mov
out
jle
sub
int3
push
inc
mov
scas
pop
nop
fsts
repnz
or
movsl
push
orl
cmp
and
push
sbb
addr16
test
xor
es
jge
in
orb
push
push
dec
outsb
sub
shlb
cmpsb
jno
mov
int
or
mov
aas
adc
xchg
sbb
mov
bound
in
fsubrl
pop
cs
ss
mov
lcall
mov
xchg
or
lds
out
mov
mov
mov
and
js
xchg
pop
int3
sti
mov
icebp
and
stos
cmp
aaa
fstps
cmp
mov
sarb
pop
repz
add
cmp
mov
gs
xchg
pop
pop
lock
pop
icebp
mov
fs
dec
mov
jp
imulb
cmp
inc
jl
sub
fsub
sub
mov
fisttpl
rorb
sti
cmpsl
dec
scas
mov
mov
jbe
mov
dec
inc
and
fists
lahf
adc
cltd
mov
fiadds
or
arpl
sbb
stc
std
mov
inc
andb
inc
rcrb
leave
push
push
mov
std
adc
push
cwtl
push
xor
jmp
push
sub
dec
leave
cmp
data16
cld
and
dec
cmpsl
jns
sbb
call
adc
sbb
int3
cmpsb
cmc
cli
xchg
adc
mov
aaa
loope
add
lret
inc
js
cs
mov
fdivrs
pushf
icebp
cs
out
bound
and
add
cmpsl
mov
setns
decl
push
clc
sub
cwtl
adc
push
pushf
addr16
inc
sbb
nop
popa
adc
movsb
adc
mov
ficompl
or
xlat
out
cwtl
mov
fdivs
ret
icebp
repz
mov
das
or
ret
push
inc
push
push
push
in
or
outsl
xchg
test
lea
dec
cltd
xor
sbbl
mov
test
stos
xchg
out
mov
ljmp
cmp
ficoms
sub
mov
leave
lods
loop
out
fcoml
add
mov
mov
stos
leave
xorl
aaa
scas
add
pop
outsl
sahf
mov
mul
aad
adc
out
add
leave
scas
out
and
add
scas
mov
leave
mov
xchg
and
mov
or
fsub
shrl
or
push
lcall
fistl
aaa
pop
fistl
stos
out
adc
push
mov
out
out
out
andl
icebp
pop
aad
enter
adc
sarl
sub
in
pusha
ret
out
in
push
dec
add
or
scas
inc
mov
mov
and
fcomps
xlat
int
int
lods
jp
stos
out
mov
and
adc
and
outsl
int3
xor
sbb
jne
mov
push
cmpsb
xchg
dec
movsb
ss
mov
test
std
and
push
or
lahf
idiv
pop
xchg
dec
out
lea
xchg
lea
adc
mov
fcmovnu
dec
lea
xchg
pop
icebp
adc
stos
or
mov
xchg
arpl
dec
and
inc
aas
leave
sbb
out
shll
dec
push
sbb
mov
test
jnp
push
mov
jmp
inc
sbb
lea
insb
roll
lds
loopne
pop
ss
rcrl
jb
dec
addr16
in
jb
mov
test
push
jb
ret
sub
push
dec
sbb
fbld
sub
dec
xchg
cmp
das
cmp
dec
mov
sbb
stos
xchg
pop
das
jp
push
pushf
repz
xchg
dec
stos
imull
jae
ja
and
xchg
jle
push
data16
idivb
xchg
pop
inc
mov
in
jmp
mov
aaa
js
dec
inc
decb
std
adc
test
enter
lea
leave
fcomps
negb
lds
cmpsl
pop
pushf
mov
inc
movsb
xchg
xchg
push
ja
dec
inc
xchg
add
mov
repnz
or
insb
jle
cs
fwait
pop
xlat
cmp
fsubrs
push
ret
push
dec
sub
fwait
jl
in
mov
jle
cwtl
mov
scas
dec
xor
into
jmp
out
dec
mov
icebp
loop
sti
rcrl
pop
std
ret
fldenv
jmp
inc
pop
das
cmp
mov
push
dec
pop
mov
and
lock
sbb
sub
add
in
xchg
add
loope
mov
mov
xchg
xchg
add
aas
dec
leave
je
push
ds
sub
mov
pop
js
cmp
xchg
mov
popf
xor
pop
mov
jg
cmpsb
jnp
and
daa
push
frstor
in
popa
add
pop
fldcw
enter
add
or
xor
jbe
lods
push
dec
add
lock
daa
xor
jp
xlat
loop
push
mov
and
mov
inc
mov
mov
push
nop
inc
xchg
push
ret
fs
pop
shl
add
or
sbb
std
pop
sbb
pop
pop
das
mov
mov
xor
bnd
gs
add
pusha
je
jg
jge
iret
mov
repnz
mov
out
add
loop
sar
jmp
adc
mov
out
pusha
jmp
shll
mov
add
jae
mov
jbe
pushf
rep
cmpsb
xchg
in
imul
lahf
lea
dec
and
sbb
sbb
lea
jo
cmp
shll
fdivl
cmc
dec
pop
cld
insb
test
bound
cmp
dec
das
mov
cwtl
dec
shl
add
mov
popl
fstps
and
or
jne
dec
jne
arpl
xor
mov
in
mov
test
dec
jae
push
mov
adc
cmp
fisubrs
sub
push
and
pushf
jl
jmp
mov
stc
xchg
and
loop
clc
jg
xor
pusha
xchg
movb
pop
mov
mov
les
je
and
mov
aam
in
fwait
push
in
add
cwtl
push
xchg
cmpsl
dec
dec
and
das
loopne
dec
mov
ficompl
xchg
or
aaa
push
mov
mov
cvtps2pi
sbb
jp
xchg
cmpsl
int
adc
or
xchg
pop
mov
fdivp
mov
fdivl
adc
lret
mov
in
mov
test
sub
mov
and
or
out
inc
mov
mov
xor
int
les
adc
mov
xor
outsb
mov
push
fld
jo
ja
ret
addr16
idivl
push
xor
fidivs
je
ss
dec
push
cwtl
insl
sar
cmp
int
inc
data16
int3
cmpsb
nop
cmp
int
push
push
int
in
emms
pop
push
xor
sub
mov
mov
inc
sub
in
and
mov
daa
push
outsb
pop
dec
jno
sti
lods
xchg
lcall
fs
push
mov
cmp
movsl
add
add
iret
bound
mov
popa
mov
jne
inc
sub
mov
inc
pop
lods
subl
inc
cmp
in
fistpll
dec
ret
fs
ret
pusha
jno
inc
in
dec
arpl
data16
sbb
mov
pop
aad
pop
push
cmp
push
decl
repnz
xchg
lods
ja
test
or
rclb
outsb
and
mov
add
push
sub
xor
ja
mov
push
loope
mov
js
mov
jb
ret
scas
icebp
bound
inc
data16
pop
cmc
inc
les
popa
loope
idivb
mov
xchg
sub
mov
imul
push
and
cmp
jg
adc
mov
aas
sbb
cmovp
jg
pop
xlat
movsl
hlt
push
jle
dec
aas
push
jo
mov
and
mov
in
in
dec
fcmovb
xchg
rcl
negl
leave
xchg
cmp
jle
sarb
pop
repz
xor
stos
and
loope
cltd
cld
int
pusha
loop
ret
lods
xor
icebp
inc
sbb
adcb
dec
inc
idivb
mov
iret
sbb
dec
mov
mov
or
sbb
dec
rclb
outsb
bound
das
in
es
popa
imul
push
cld
test
mov
dec
dec
sub
nop
lds
dec
jb
pop
roll
sbb
dec
pop
in
popf
pop
xchg
incl
out
dec
adc
mov
les
fbstp
and
or
mov
ret
jb
aas
mov
inc
push
inc
or
insl
xchg
dec
shrb
pop
fisubl
lock
scas
stos
shr
and
fwait
and
push
notb
mov
icebp
lcall
in
pop
fstpt
mov
in
divb
icebp
mov
ljmp
jo
in
ss
sti
jns
dec
push
add
jb
jmp
fisubl
es
lahf
dec
lret
xchg
jl
mov
add
mov
pop
mov
sub
cli
test
sub
ret
push
add
sbb
test
loop
sbb
fisttpl
pop
mov
or
push
out
aaa
dec
xchg
and
xor
pushf
mov
clc
push
mov
lret
insb
jbe
daa
popf
xor
test
pusha
subl
hlt
dec
pop
nop
pop
gs
stos
mov
icebp
xor
dec
or
mov
add
in
lret
pusha
jge
cwtl
cmp
or
addr16
jns
and
push
leave
repnz
jecxz
mov
fdivs
sbb
mov
xor
cltd
pop
lret
cltd
mov
fidivrl
clc
loopne
or
push
call
inc
jmp
aaa
lods
pop
xchg
out
andl
sbb
stos
test
push
test
xchg
icebp
xor
in
pop
lcall
aas
sbb
fisubl
js
bnd
insb
inc
dec
dec
cltd
movsl
inc
lods
pushf
adc
xchg
mov
notb
xor
pop
sub
adc
xchg
arpl
xchg
mov
lcall
or
cmp
loop
pop
jns
pop
xchg
repz
inc
aaa
hlt
jl
scas
jp
pushf
cs
cmp
jns
lods
pop
in
push
cmp
fcoml
jmp
push
loopne
data16
insb
in
ja
sub
aas
cltd
ss
push
and
xchg
pop
arpl
push
popf
xlat
loope
test
push
sbb
jecxz
push
and
push
shrb
cltd
mov
rolb
adc
fidivrs
adc
into
out
ficomps
pop
and
lcallw
fldcw
push
xchg
jp
ss
or
sbb
sub
cli
push
add
xlat
std
dec
fwait
mov
fincstp
inc
xchg
or
icebp
and
mov
hlt
sarl
icebp
push
jno
adc
inc
scas
jecxz
lock
and
movb
or
imul
sti
dec
mov
cmp
jnp
data16
sub
mov
leave
xchg
mov
loope
mov
in
and
sbb
jbe
pop
push
sbb
xchg
pop
xchg
mov
pop
mov
mov
push
popf
arpl
pop
sbb
mov
pusha
ds
mov
lds
cmc
in
mov
inc
in
ds
insl
inc
jae
or
aam
outsb
mov
mov
adc
aam
mov
testl
rorl
imul
ljmp
push
mov
lods
ret
xchg
fwait
xchg
mov
mov
push
jl
fcompl
push
ds
inc
imul
or
cmp
das
jle
jl
movsb
mov
mov
xor
dec
dec
in
bound
add
fmul
xchg
or
jae
jl
rcr
je
jno
adc
cltd
call
mov
push
pop
push
jnp
pop
leave
popf
leave
and
pop
and
dec
pop
test
jp
xchg
jp
insl
outsl
popf
scas
lcall
insb
pop
lods
inc
lret
sti
repz
aam
lret
sbb
out
xor
or
test
push
adc
loope
jle
bound
pop
fs
loop
ds
fwait
pop
cmp
js
push
mov
mov
xchg
jecxz
bound
orl
push
push
lock
iret
cmp
pusha
add
or
scas
pop
dec
cmpsl
push
dec
xchg
int
stc
pop
xor
iret
fists
cltd
test
je
add
and
mov
lods
loopne
mov
push
pushf
dec
sub
sub
cmp
jl
xor
iret
lret
std
stos
cmp
popa
sub
add
loopne
push
or
hlt
loop
cli
mov
push
cmp
mov
mov
or
jp
test
rorl
pop
xchg
sti
adc
in
out
ja
and
xor
setno
lahf
mov
jno
ds
xchg
fidivrs
or
insl
in
std
out
cli
scas
inc
jne
sub
loopne
inc
imul
and
bound
in
and
sub
push
mov
push
cmpsb
sti
push
xor
mov
mov
xor
mov
icebp
icebp
cltd
inc
or
enter
push
dec
popl
icebp
mov
enter
cld
fimuls
jl
stos
jl
sbb
push
bound
inc
ljmp
add
lock
push
leave
dec
lahf
insl
dec
push
add
js
or
pusha
insb
add
pop
sbb
adc
imul
xchg
xor
fsts
jge
sub
xlat
int3
test
mov
sub
jmp
outsl
pop
adc
sarl
mov
orl
jmp
and
aaa
pop
ficomps
aas
inc
mov
sahf
xor
mov
call
scas
sbbb
sarb
movsl
add
cmp
mov
sbb
push
inc
push
out
rclb
sbbb
cmp
ret
adc
mov
mov
pop
pop
mov
push
stc
adc
lock
jecxz
loope,pt
repz
loop
and
hlt
mov
add
test
mov
hlt
sbb
add
test
xlat
mov
or
frstor
xor
cltd
dec
jmp
cltd
add
sbb
test
push
repz
dec
pop
sub
and
shl
shrb
loopne
mov
sbb
lcall
and
loop
outsb
hlt
lahf
and
mov
or
mov
idivb
sbb
cs
popf
mov
adc
push
xchg
and
lock
dec
push
cmp
xor
xchg
fimuls
adc
and
lahf
loope
mov
push
movl
daa
inc
inc
jp
leave
push
mov
int
les
or
pop
inc
cmc
and
loopne
xchg
outsb
mov
ret
negl
mov
xchg
push
and
cmp
iret
mov
mov
loopne
mov
fnstcw
leave
scas
stos
push
mov
jle
cltd
lock
arpl
cmpsl
sbb
addr16
arpl
in
lahf
out
cltd
add
jmp
push
mov
fcomp
sbbb
dec
mulb
push
push
adc
cmp
fisubl
mov
sub
cmp
pop
jo
ret
out
pop
fdivr
cltd
das
std
cmp
push
stos
adc
out
adc
js
out
pop
movsb
lahf
xor
sbb
dec
outsl
adc
outsb
xchg
jecxz
xchg
fs
pop
inc
sahf
xlat
and
icebp
push
mov
push
mov
adc
adc
stos
movsb
mov
stos
sbb
lods
out
jg
mov
hlt
orl
xchg
jne
test
inc
push
hlt
leave
pop
xchg
loop
mov
std
les
inc
test
sub
push
jge
jae
shrb
imul
test
xor
jle
and
jb
sub
sub
pusha
jecxz
out
pop
sbb
pop
jno
fidivl
mov
cli
clc
es
out
xchg
dec
mov
and
cmp
cmp
shl
mov
cmp
xchg
mov
movsb
dec
lods
out
aaa
out
push
bound
into
imul
scas
popl
sub
insb
mov
xchg
daa
int
ljmp
xchg
rolb
jb
mov
pop
out
imul
sbb
sbb
mov
add
xchg
imul
fimuls
jnp
dec
les
pop
mov
xor
cli
ja
inc
shll
and
mov
sub
mov
out
cmp
add
lret
repz
cmp
jecxz
pusha
pop
fisttpl
xchg
bound
jno
cmc
cmp
ss
xchg
mov
clc
nop
out
addl
mov
mov
xchg
cmp
add
mov
int3
mov
out
cmc
imul
int
mov
push
push
mov
int3
bnd
dec
aaa
or
dec
rol
clc
or
mov
into
flds
movb
shrl
adc
push
pushf
push
mov
ja
enter
dec
bound
xchg
adc
mov
in
or
sbb
jle
test
mov
sub
negl
or
lods
pusha
jns
es
mov
jmp
pushf
cltd
mov
push
out
dec
mov
imul
out
xor
in
in
rcl
cmp
icebp
mov
and
or
pop
mov
aad
sub
inc
mov
adc
hlt
ljmp
jbe
push
outsl
sbb
jge
ficoml
sbbl
aas
pop
enter
jbe
cmp
fdivrp
push
sar
sub
or
sbb
push
xor
int3
sbb
xchg
push
inc
push
push
inc
out
xchg
lea
or
adc
add
pop
int
jns
sbb
mov
ret
lods
repz
lahf
scas
adc
pop
mov
push
imul
xor
icebp
daa
jb
adc
mov
fbstp
dec
push
pusha
ljmp
mov
dec
mov
xor
adc
cmp
mov
jg
cld
pop
lea
fs
dec
outsb
xor
push
es
pop
mov
jbe
push
cmp
lret
sahf
leave
sbb
sbb
in
lods
cmp
mov
jecxz
pop
sbb
notb
sarl
es
pop
dec
pop
fldenv
add
std
inc
jae
lods
pop
cmp
loop
sub
movsl
or
jbe
inc
popf
std
dec
pop
sti
sahf
add
mov
xor
dec
inc
sub
jns
sahf
sahf
int3
loope
jmp
fldenv
add
mov
cli
lcall
push
xor
into
aad
out
lods
out
or
mov
stos
imul
mov
xchg
roll
xchg
rorb
ficompl
adc
or
push
and
lret
inc
in
xchg
das
sub
adc
out
and
sarl
add
cmp
push
sbb
mov
mov
mov
pop
cltd
mov
sbb
std
xchg
pop
mov
es
outsl
imul
das
stos
cld
sub
xchg
xor
jne
or
jae
into
aas
cmc
dec
add
stc
jl
insl
cmp
sub
dec
mov
fs
xor
pop
nop
cmpb
insl
pop
std
testl
ss
and
fcmovu
orl
scas
add
xchg
pusha
push
loopne
sbb
enter
mov
aas
sub
jbe
test
sti
mov
iret
lods
ja
pop
fdivrs
sub
jecxz
frstpm(287
cmp
push
and
push
loop
jno
adc
fisttps
jg
or
sbb
xchg
int3
fmuls
je
mov
and
adc
or
dec
xacquire
sbb
push
or
and
mov
nop
xor
mov
out
sub
inc
aaa
mov
inc
jge
inc
xlat
sub
pop
pop
adc
leave
lcall
mov
shl
xor
filds
xchg
shlb
pop
arpl
pop
fcoms
xor
shrl
imul
pop
sbb
in
pop
jbe
mov
lock
adc
jmp
dec
sbb
stos
fisttpll
leavew
push
test
cmp
or
cmp
and
or
loope
cmp
cs
jb
mov
sbb
add
xchg
mov
mov
jae
dec
shlb
stc
ds
loop
loope
sbb
xchg
aam
daa
test
lret
mov
dec
mov
or
sbbl
imul
cwtl
mov
addr16
stos
aaa
lahf
cli
nop
mov
cmpsb
repnz
mov
cmpsl
rcrl
or
cmp
jns
or
adc
push
push
out
rcrb
add
mov
mov
mov
or
orl
aad
push
xchg
out
inc
inc
mov
popa
call
es
sub
es
ret
out
xchg
pop
and
lahf
pop
mov
lock
dec
lods
iret
mov
jae
mov
mov
or
js
pop
stc
shll
jge
push
mov
and
stos
sub
cmp
test
adc
jbe
jmp
mov
inc
and
and
scas
inc
xchg
aam
pusha
pop
in
cwtl
repnz
fwait
inc
xchg
push
mov
fiaddl
daa
lret
stc
arpl
mov
sub
cli
loop
cmp
call
lahf
push
jb
xchg
cmpsl
loopew
mov
pop
aas
mov
mull
jns
mov
xchg
xor
or
bnd
sbb
mov
ret
dec
jmp
andb
push
cmpb
fimuls
jmp
jo
shl
or
outsl
jae
insb
shl
mov
ljmp
mov
mov
pushf
cmp
xchg
bound
cld
dec
arpl
cmp
adcb
iret
jnp
jg
dec
and
fistpll
in
add
adc
aad
aaa
roll
mov
iret
pop
add
je
fisubl
int
xchg
rclb
xchg
xor
jo
jp
push
push
ljmp
imul
push
movsb
jmp
imulb
jno
mov
mov
sub
xor
scas
jno
sbb
popf
stos
mov
lret
insl
pusha
push
inc
pop
pushf
adc
addl
std
mov
mov
mov
jle
xor
xor
gs
gs
popf
xchg
repz
andb
fisttpl
out
jl
ret
jecxz
inc
or
roll
add
mov
xchg
add
aad
xchg
push
pop
leave
mov
das
xchg
stc
lret
fimull
lahf
dec
movsl
imul
out
sbb
sub
fildl
test
cwtl
jl
movnti
mov
lds
mov
imul
and
sub
jp
loop
addr16
pop
icebp
xchg
fwait
lds
inc
push
mov
xor
cmp
mov
adc
adc
hlt
int
ret
pop
xor
fistps
mov
arpl
dec
testb
inc
cmp
mov
mov
push
lock
mov
xlat
mov
nop
stos
xlat
cmp
testl
ret
mov
mov
and
xchg
dec
lds
lahf
fwait
add
loope
adc
loopne
xlat
xchg
jo
mov
sarb
dec
lea
inc
mov
push
pop
pop
sub
add
mov
sbb
and
inc
out
mov
lea
in
int
icebp
scas
ja
mov
out
popa
push
in
or
outsl
and
inc
test
push
lods
orb
int
add
sub
cltd
sbb
sub
outsl
xor
and
cltd
divl
sbb
loopne
xor
adc
frstor
pop
out
cmp
outsb
lcall
lahf
mov
cs
sbb
or
outsb
cmc
je
mov
test
out
bound
cmpsl
sbb
outsl
dec
push
xor
pop
imul
ror
ret
pop
pushf
nop
xadd
into
push
jmp
push
cmp
je
push
cmp
frndint
sub
cmp
sub
xchg
add
subb
icebp
xchg
movsl
lret
aam
pop
and
stos
jb
mov
jecxz
out
cmpsb
mov
sbbb
mov
jg
sbb
pushf
inc
es
add
pop
adc
lds
xorb
adcl
and
fs
std
jp
xorb
mov
mov
mov
push
mov
movsb
adc
adcb
lahf
roll
sbb
jg
mov
or
push
mov
inc
push
mov
or
and
fistps
jmp
in
stos
rcrb
sub
out
mov
test
sub
mov
jle
imul
lahf
bswap
xchg
ffree
aas
adc
push
or
out
mov
fwait
test
nop
mov
in
in
and
push
xchg
or
scas
jl
add
push
orl
xchg
mov
je
jbe
into
out
repnz
pop
xchg
pop
mov
outsl
sahf
bound
out
into
dec
jge
mov
lahf
xchg
xor
outsl
adc
lret
push
ret
xchg
sti
mov
sahf
outsl
enter
dec
mov
imul
add
pop
out
push
sbb
adc
inc
cmp
sub
mov
aaa
movsb
jp
mov
pop
bnd
sbb
adc
in
mov
jne
das
in
hlt
in
shrb
shrl
pusha
rolb
inc
push
push
fdiv
mov
sbb
xlat
mov
ss
push
sub
out
add
inc
xlat
cmp
pusha
notl
xchg
xor
pop
dec
mov
test
scas
out
stc
clc
sbb
and
data16
mov
mov
ljmp
adcl
or
bnd
pop
mov
test
imul
add
call
xchg
and
inc
xchg
rorl
sub
add
sbb
mov
inc
call
repnz
out
push
pop
or
nop
xlat
jnp
subb
xor
pop
dec
dec
lcall
and
push
pop
divb
shlb
pop
clc
sbb
jb
out
orl
xchg
daa
push
jae
hlt
cs
inc
sbb
fwait
lahf
and
popf
sarl
rcll
xor
sahf
mull
mov
push
scas
movsb
imul
jno
repnz
std
add
cmpsl
outsb
cmp
push
jge
sub
cmp
push
xchg
lahf
arpl
loopne
lret
leave
dec
cmp
popf
dec
packuswb
movsb
cli
and
das
mov
sahf
jae
mov
idivl
mov
dec
xor
pop
xor
in
adcb
aaa
dec
inc
incb
push
push
push
negb
dec
fildll
or
popf
pop
mov
push
jae
nop
orl
es
mov
dec
ret
dec
mov
stos
repnz
subb
mov
sub
xchg
pop
xchg
daa
xchg
fmul
imul
pusha
mov
dec
add
inc
mov
les
dec
sbb
sub
loop
rcrb
inc
scas
jb
mov
cmp
mov
pop
or
and
mov
pop
add
lcall
test
xchg
push
inc
sbb
stc
int
xchg
mov
dec
shrb
xor
iret
jb
jbe
ret
ret
in
stc
into
mov
and
jg
lods
adc
in
scas
cmp
lret
fcoml
in
sahf
test
dec
push
jnp
or
dec
dec
popa
out
insl
add
or
jno
mov
aam
gs
xor
xor
shrb
push
jl
jno
push
test
cmp
inc
mov
mov
adc
dec
hlt
aad
pop
sti
jp
lods
xlat
test
cmp
test
lds
jbe
or
fisubrs
xor
mov
and
dec
test
fcompl
fstps
ret
mov
dec
xor
dec
sub
mov
add
sbb
xchg
cltd
or
cld
and
addr16
sbb
inc
push
lds
xor
fildll
call
iret
out
ror
mov
negl
scas
push
in
iret
idivb
enter
jnp
cmpsb
in
rolb
xor
movsb
notb
pusha
call
or
mov
jae
pop
sbb
test
push
ss
gs
je
mov
cs
enter
loop
jo
notb
mov
stc
stos
loopne
es
jne
mov
jmp
xor
sub
inc
push
jne
jno
faddl
and
sbb
dec
xchg
insb
fstl
mov
ret
out
inc
stc
mov
dec
dec
inc
loop
and
data16
jg
insl
and
mov
dec
dec
daa
jbe
nop
dec
cwtl
sub
adc
popa
jo
pushf
mov
scas
fdivs
add
cld
lret
cmp
xor
mov
aam
cld
jge
push
xchg
int3
movsl
lcall
out
and
shl
loopne
adc
incb
negl
mov
stos
mov
cltd
leave
hlt
add
test
add
or
stc
sahf
inc
or
movsb
xchg
mov
mov
jbe
cmpb
test
sub
push
push
sub
or
or
add
fisubl
or
sbb
push
jecxz
sahf
clc
jp
sbb
mov
roll
xorb
pop
and
clc
jge
dec
ret
inc
sub
lock
shlb
sbb
cmpsl
jg
xchg
sbbl
test
inc
fstpt
jl
call
mov
movsl
pop
dec
stos
push
inc
fs
inc
xchg
push
jns
scas
jo
ret
adc
dec
aaa
sbb
fsts
xchg
stos
or
lret
mov
daa
loope
xlat
jbe
ret
incl
not
sbb
dec
je
pushl
div
and
inc
push
push
xchg
jae
std
sub
mov
mov
fdivrl
xor
lock
xor
add
stos
ret
loope
mov
ret
sbb
xchg
lret
pop
cmp
lds
cmpsl
fadds
mov
push
add
out
jnp
fidivs
sub
movsl
pushl
or
push
mov
mov
mov
mov
ljmp
inc
test
cmpsl
push
push
mov
pushf
fisttpll
xchg
call
jo
movb
mov
sub
sbb
pop
add
insb
idiv
pop
mov
pop
arpl
inc
mov
aas
push
dec
push
or
sahf
test
xlat
push
mov
push
movl
fistps
adc
stos
cmp
pop
movsb
cmpsl
mov
xor
cld
add
mov
push
push
movsb
icebp
daa
inc
fiaddl
add
int3
dec
adc
dec
sub
inc
dec
sbb
je
add
fwait
test
mov
in
out
cmc
bound
dec
sbb
inc
jmp
pop
out
lods
mov
repnz
xor
push
in
mov
outsl
and
dec
mov
fcmovnb
lock
cltd
mov
call
inc
roll
sti
jae
rcll
std
and
push
and
ss
inc
push
push
loop
mov
mov
mov
pop
pop
push
hlt
mov
push
mov
push
pusha
insl
push
push
push
mov
xchg
and
adc
aam
pusha
xchg
sbb
mov
in
mov
push
inc
dec
lock
adc
mov
mov
out
jecxz
rorb
sub
sub
push
push
xchg
testl
pop
mov
aas
lahf
orl
mov
sub
inc
and
or
jb
push
mov
add
sub
dec
inc
jb
aam
imul
cmpb
repnz
fsubr
ret
xchg
outsb
push
or
into
ja
in
mov
xchg
mov
cmp
mov
outsl
lret
jecxz
cmc
push
int3
xor
push
dec
sub
xor
in
rcrl
mov
adc
xchg
flds
cs
sub
in
mov
adcb
or
adc
das
loope
std
cltd
icebp
mov
push
jno
shrl
push
inc
mov
xchg
push
stc
adc
add
dec
gs
aad
jg
add
sbb
leave
cmp
mov
out
adc
push
or
sub
cmpsb
mov
mov
loop
cmp
daa
pusha
ficoms
arpl
add
xor
mov
cmp
and
adc
sbb
adc
cmp
inc
in
push
adc
push
jge
mov
inc
lds
sbb
add
scas
mov
enter
cmp
ss
and
add
adc
cwtl
xor
and
add
jmp
jmp
xor
ret
pop
inc
insb
neg
dec
mov
or
jnp
push
dec
mulb
dec
lods
stos
shrb
and
sub
rcrb
ficoml
pop
mov
pop
lods
push
mov
stc
shlb
les
fsubrl
enter
insl
imul
xchg
mov
aaa
sbb
and
pusha
and
mov
mov
mov
notl
test
enter
sub
mov
gs
pop
cmp
cmpsb
cmp
mov
add
mov
aad
push
cmp
lods
mov
adc
rcr
adc
mov
divb
pop
mov
pop
ljmp
daa
bound
jle
int3
arpl
push
jl
and
mov
je
stos
imul
push
mov
xchg
lahf
subb
jp
lods
or
aas
or
repz
push
leave
inc
mov
and
add
xor
push
jge
pop
nop
or
inc
mov
and
adc
test
lds
xchg
arpl
fidivl
or
stos
stos
sub
mov
push
pop
add
adc
stos
sti
pop
xlat
sbb
fmull
in
inc
jno
mov
mov
es
js
rol
fistpl
jno
in
in
mov
scas
testl
jo
test
jb
adc
mov
int3
bnd
dec
stos
movsb
push
xchg
xchg
inc
gs
lahf
call
xchg
cmc
shlb
sbb
dec
push
jne
adc
lret
addb
hlt
fistps
jle
in
lods
cmpsl
clc
jbe
repnz
comiss
call
dec
inc
aad
sub
sbb
or
insb
out
ret
fists
and
cwtl
movsl
xlat
or
mov
adc
test
and
pop
lahf
cmp
test
aas
push
repnz
loope
xchg
push
xchg
pop
out
not
inc
pop
in
movb
daa
or
xor
mov
out
in
testb
cli
jp
pushf
xchg
xchg
sbbl
inc
mov
jg
inc
nop
push
pop
push
adc
xor
fsubrl
ss
stc
xor
mov
mov
mov
bnd
cs
stos
jp
inc
cmp
cwtl
add
mov
xor
shl
jb
leave
mov
outsl
push
xchg
inc
ficomps
adc
mov
jecxz
les
pop
fwait
in
xchg
pop
int
xchg
lahf
scas
test
loope
aad
mov
fists
mov
inc
scas
add
sbb
lret
ss
test
xor
imul
stc
cmp
mov
mov
push
push
mov
jg
stc
mov
cmp
aad
test
popf
xor
xor
xlat
imul
push
int3
mov
out
ss
lods
cmpsb
jo
unpckhps
xchg
or
hlt
and
push
out
lods
adc
das
scas
add
mov
inc
jge
push
inc
sbb
repz
cwtl
xchg
jb
push
cmp
loop
dec
xchg
leave
cmp
lods
repnz
jge
push
jns
fbstp
push
dec
aas
cmp
adc
cmp
scas
iret
cs
mov
push
lods
std
pop
adc
sub
nop
sbb
mov
or
bound
lock
and
pop
adc
lods
test
fwait
cmp
lret
dec
cli
rcrb
and
hlt
sbb
pop
inc
lret
sub
adcl
in
add
pop
mov
rorb
pusha
or
inc
bound
inc
js
adc
inc
dec
sbb
outsb
push
xchg
aaa
inc
cwtl
lret
pop
cmp
sub
lock
pushf
mov
fstps
pop
pop
repnz
sub
test
test
daa
mov
pusha
clc
ret
adc
xchg
pop
test
bound
add
jae
pusha
aas
and
mov
mov
pop
xchg
fistpll
popa
mov
lcall
jl
sub
out
push
jge
add
sub
xlat
in
ficompl
xor
mov
inc
or
fdivrs
xchg
mov
js
mov
mov
cs
and
mov
pop
lret
fldt
xor
pop
leave
imul
popa
repz
xchg
inc
sahf
out
sbb
adc
push
daa
inc
in
sbb
clc
inc
loopne
movsl
mov
test
dec
mov
push
in
jge
inc
dec
push
or
xchg
mov
mov
mov
inc
lahf
add
jmp
pop
mov
sbbl
mov
sub
sub
cmp
dec
inc
rclb
add
arpl
dec
mov
push
cmp
stc
cltd
shrl
pop
test
adc
iret
dec
lds
jp
cwtl
psubd
aaa
int
iret
decb
sub
movsl
cmp
out
lret
cltd
fidivl
pusha
movsl
out
push
lds
xchg
inc
je
sub
mov
out
and
add
inc
pop
int
lahf
insl
sbb
mul
mov
xor
ret
lret
sti
lcall
shll
mov
pop
ret
xor
push
cmpl
cmp
lcall
repnz
loopne
scas
stc
xor
mov
mov
fsts
pop
cmpsb
negl
stos
popf
daa
movups
push
inc
dec
xchg
sub
dec
pusha
jo
aas
jg
push
mov
out
jmp
ret
mov
cmp
or
ljmp
xor
push
or
jmp
hlt
aad
xchg
xchg
and
lret
and
out
outsb
sbb
pop
adc
jmp
fistpll
add
mov
cli
ficoms
pusha
sbbl
fwait
ret
imull
ds
cmp
loopne
rcll
mov
lds
addr16
dec
sub
sub
adc
or
cmp
mov
popf
mov
out
ljmp
lcall
lods
je
push
data16
dec
imul
sub
xchg
jp
pushl
and
jmp
out
or
rol
fsts
cmp
loope
sbb
das
jo
add
ljmp
sbb
add
shl
inc
jo
pusha
je
cmp
inc
rclb
add
cmp
ret
add
inc
xor
push
std
xor
dec
and
pop
scas
setg
jo
mov
icebp
lds
mov
call
rcrl
sbb
popl
mov
ret
and
cwtl
cwtl
push
cs
and
loop
jge
ds
cld
sub
xchg
idivb
dec
hlt
cmp
add
sub
loop
test
push
insb
sbb
outsb
pop
mov
xchg
inc
cld
out
jbe
fmuls
les
or
int
es
lock
jae
mov
mov
aaa
mov
pop
scas
jecxz
pop
push
repz
fisttps
cli
add
into
scas
packuswb
icebp
in
ficomps
fcmovne
mov
repz
sub
pop
pop
call
add
enter
ja
mov
nop
jae
lea
loopne
adc
dec
sub
add
scas
pop
mov
lods
lret
cmp
icebp
pop
arpl
dec
sbb
inc
leave
test
loopne
ficoms
aad
cltd
in
xor
fdivrs
dec
test
mov
faddp
ror
pop
cmp
push
inc
or
ljmp
pusha
js
repnz
pop
xchg
gs
lahf
mov
jecxz
or
jb
pop
pusha
out
xor
ret
inc
test
fucomp
sbb
jae
mov
or
stc
daa
movsl
cld
scas
fcompl
jo
or
push
jns,pn
ljmp
shlb
int3
xchg
std
out
xchg
sbb
fidivrs
mov
inc
pop
stos
mov
ret
orps
adc
inc
cwtl
jl
jae
jle
sbb
out
adc
push
clc
imul
or
mov
popf
pushf
rorl
aad
jo
test
xchg
xlat
ffree
fimull
jns
notb
jp
sub
stc
stc
xor
lcall
cmp
sarb
xchg
jle
imul
sbb
push
and
fs
movsb
outsl
xchg
inc
jae
repnz
sahf
cmp
out
mov
es
ja
and
or
nop
aam
jo
std
mov
xchg
stc
shl
stos
mov
in
push
xacquire
test
shlb
cld
mov
enter
popa
mov
mov
pop
xchg
pop
add
test
rorl
xor
xchg
cmp
call
aaa
loopne
testl
lods
mov
imul
loop
push
leave
xchg
loop
push
pop
divb
and
rorb
insl
cltd
vmovq
add
mov
test
mov
mov
lahf
xchg
pop
or
jmp
fstpt
popf
add
aas
into
pusha
insl
sbb
adc
add
xor
dec
mov
bnd
mov
insl
daa
repnz
in
xchg
pop
sbb
mov
or
or
sub
or
push
rol
xlat
lea
ror
movsb
fwait
push
inc
outsl
pop
rcrb
push
xchg
ret
pop
iret
in
adc
add
dec
je
ficompl
int3
test
or
mov
mov
test
sbb
ds
cmp
sarb
popf
rcrl
mov
int3
mov
xorb
loope
xor
cltd
int
les
movsl
sarl
sub
sbb
cmp
push
mov
xchg
mov
bound
lea
in
pushf
mov
jb
push
sbb
xchg
push
jl
sbb
pop
dec
add
xchg
movsl
dec
gs
lret
fcoml
shrl
repz
fcompl
int
stos
sbb
pop
arpl
into
aaa
in
sub
mov
dec
sbb
mov
jo
insb
inc
into
notl
std
mov
fisubrs
mov
adc
sub
jns
add
and
mov
pop
scas
and
inc
dec
jne
and
mov
stc
notl
shrb
popa
xor
inc
dec
add
inc
lret
sub
cmc
jge
enter
jmp
sub
pop
movsb
pop
sbb
loopne
mov
dec
repz
outsl
in
xchg
mov
div
inc
fxch
out
inc
sbb
or
xchg
sub
mov
push
or
jecxz
mov
inc
rorb
lods
dec
sbbl
xor
xor
xchg
aam
xchg
dec
xor
jl
adc
inc
loope
dec
nop
iret
insb
adc
scas
xor
jp
or
and
les
pop
es
cmp
testb
clc
ficoml
add
fnstsw
jecxz
sbb
es
bound
pop
lret
cmp
mov
and
inc
push
mov
inc
cmpsl
stos
dec
push
pop
push
xor
sbb
iret
out
push
ja
mov
insl
jg
ret
scas
push
in
sbb
insl
stc
mov
sti
mov
movsb
xchg
mov
cmp
pop
xchg
mov
xchg
fdivrl
pop
mov
jmp
aas
data16
imul
std
sbb
fsubp
xchg
push
add
pop
fs
push
jl
sbb
and
js
mov
shll
xor
popa
jp
jecxz
loope
aaa
push
sar
gs
dec
jo
pusha
and
jb
in
out
arpl
xchg
xor
mov
int3
orb
cmp
mov
mov
sbb
cwtl
mov
int3
ljmp
insb
je
mov
pop
adcb
add
inc
pop
sub
hlt
fsub
rclb
and
push
pusha
rcr
int
or
sub
cwtl
addr16
cli
lods
aad
jmp
or
mov
lcall
fiaddl
xor
ss
mov
lcall
cltd
dec
mov
or
dec
jecxz
cltd
popa
sbb
mov
dec
in
dec
inc
imul
mov
mov
pop
mov
loope
and
inc
into
addb
push
pop
lret
inc
adc
sub
ja
negl
push
mov
les
mov
outsl
sbb
pop
xchg
les
push
xchg
sbb
mov
jmp
mov
push
test
cltd
mov
push
adcl
cmpsl
adc
and
sti
lds
call
dec
mov
push
loopne
jnp
loope
mov
mulb
fldl2t
jg
mov
push
inc
xchg
jb,pt
adc
mov
ds
loop
push
mov
out
rcll
jns
dec
xor
pop
enter
mov
xlat
mov
sub
aaa
jecxz
pop
dec
adc
sti
mov
jbe
xchg
leave
ret
sub
int
ss
gs
mov
xor
in
sbb
imul
dec
jmp
mov
push
dec
mov
stos
data16
add
stos
mov
push
int3
mov
pop
repz
mov
push
out
sub
ret
stos
mov
fsubp
adc
das
jae
ss
lret
div
imul
arpl
out
shll
or
push
push
or
xchg
pop
push
sub
jp
add
fimuls
test
push
test
push
dec
cmpsl
popf
ret
xor
sar
and
iret
cmc
icebp
sub
pop
jb
jae
loopne
sbb
cmp
cs
sbb
nop
mov
and
mov
scas
xchg
pop
mov
popf
push
sbb
stc
xchg
jl
jo
jmp
xor
cmpsb
push
or
mov
lea
and
sbb
jne
or
xchg
imul
jp
in
cmpsl
jne
mov
repz
out
ficoms
dec
cmp
or
in
repz
shlb
outsl
jp
push
lret
xlat
xor
mov
fbld
ret
mov
pop
pop
adc
lahf
mov
sarl
mov
ljmp
fisubrl
fsubl
adc
sbb
ljmp
mov
inc
pop
jge
pop
sbb
test
push
mov
fistl
mov
dec
repz
jbe
mov
filds
pusha
enter
sbb
push
push
stos
hlt
fs
mov
and
jno
pop
loopne
aam
es
sbb
sub
cmpsb
pop
int
movsl
test
nop
push
pop
call
dec
xor
fst
cmp
cltd
pop
bound
adc
jmp
pushf
inc
arpl
out
xor
adc
dec
scas
sar
sub
aaa
mov
cmp
sbb
out
jnp
gs
lcall
shrb
jmp
icebp
cmp
ret
inc
lea
dec
movsb
aad
out
pop
shlb
outsb
idiv
and
adc
js
lock
aas
and
fwait
inc
iret
insl
shlb
je
loop
xor
dec
or
xor
push
loopne
dec
addr16
mov
mov
sub
outsb
fdiv
cmp
jnp
inc
fdivrl
adc
and
imul
jle
outsb
pop
call
lock
mov
push
mov
lds
xor
pop
pushf
cmc
jp
das
sub
add
icebp
and
loope
sahf
cmp
sti
cmc
dec
insl
push
popf
dec
sbb
add
push
insl
sahf
repz
or
and
cmp
push
sbb
adc
int
das
movsl
cs
inc
mov
stc
loope
aam
insb
jo
pop
jnp
jp
or
dec
xor
cmpsb
lods
sbb
std
jbe
mov
popf
std
pop
pop
inc
jb
sti
movsl
das
jmp
daa
sbb
sub
in
sbbb
sub
push
xchg
inc
addr16
roll
iret
orl
data16
push
movsb
sbb
cmpsb
shrl
cmp
or
jnp
sbbl
cmp
out
mov
in
sbb
pusha
mov
jno
mov
ret
pop
data16
dec
jbe
fstpt
imul
imull
rclb
or
push
fnstsw
cli
ss
fmul
mov
lea
js
jl
addr16
lds
pop
hlt
jnp
fsincos
in
stos
sarl
fdivrp
leave
dec
in
dec
movsl
stos
mov
or
faddp
scas
mov
jecxz
into
mov
jne
mov
jl
or
js
inc
add
scas
jmp
push
xchg
inc
into
out
fs
fnsave
cli
xchg
adc
jmp
enter
lahf
movsl
les
leave
negl
dec
pop
mov
loopne
sbb
xor
pop
xchg
lret
sub
test
cmc
lods
mov
jecxz
subl
lret
test
lods
jb
cmc
xchg
gs
and
fsubr
fcom
jne
sub
sub
dec
cmp
xchg
aam
xlat
scas
out
push
xchg
mov
pop
dec
repnz
shll
aaa
int3
das
mov
adc
cld
insl
adc
sub
cs
sarl
mov
push
iret
jecxz
adc
cld
in
sub
ret
insl
push
mov
stc
pop
sti
icebp
or
jecxz
jnp
test
ljmp
push
sti
lods
into
rep
ss
adc
stos
mov
add
pminsw
addr16
sbb
out
fisubs
leave
sub
scas
out
shll
sub
xor
out
mov
hlt
mov
sbb
in
out
rolb
jns
adc
pushf
push
hlt
fs
mov
and
lods
push
into
push
jmp
pop
int3
mov
sub
mov
sub
or
mov
and
sub
pushf
inc
cltd
pop
cmp
movsb
or
xor
popf
sub
push
loopne
stos
filds
int
lcall
cli
jae
push
cmpsl
mov
jnp
and
pop
sti
push
inc
jge
inc
xchg
inc
sub
xchg
push
push
push
fdivr
mov
es
sti
mov
cmp
mov
sbb
dec
mov
add
mov
test
aas
scas
hlt
and
cli
cmp
xchg
dec
imul
jg
sbb
xchg
push
dec
jg
cmp
sahf
cmpsb
mov
and
imul
mov
xchg
jno
in
scas
in
add
dec
add
and
sti
mov
aad
ja
and
cmp
gs
shll
sub
cli
mov
adc
mov
cltd
jo
cmpsw
es
push
out
call
js
inc
push
movsb
cmp
movsb
push
movsl
xorb
jb
cmp
fwait
cmc
pop
in
jns
rolb
inc
jmp
or
sub
mov
test
or
aad
mov
sub
lcall
mov
mov
push
lods
or
xchg
sub
mov
mov
lods
adc
cmp
push
cmc
mov
pop
fwait
fwait
xchg
jne
mov
jl
push
fsubs
jo
stc
xlat
sub
adc
aaa
mov
and
popa
sub
test
mulb
inc
sbb
mov
aam
lods
jno
xlat
in
or
ds
mov
jecxz
je
cmpsb
in
mov
sbb
dec
test
lcall
and
or
imul
mov
mov
mov
push
lret
pinsrw
mov
and
xor
push
fcompl
lds
cmp
add
sahf
popf
sbb
pop
add
add
pop
out
mov
mov
cwtl
xor
std
jecxz
lods
inc
out
ret
inc
xor
insb
stos
fs
lock
lret
push
xor
pop
jno
mov
outsl
rcl
shll
sub
cmp
hlt
or
xor
adc
test
add
push
xorl
lret
mov
faddl
stos
xchg
mov
add
jb
ret
fmull
adc
inc
inc
lahf
jmp
repnz
ds
data16
push
popf
xor
imul
test
inc
sub
pusha
xchg
std
fwait
sbb
mov
or
test
xlat
fnsave
divl
fisubrl
or
xchg
fs
cmp
push
aas
sub
lret
aas
pop
jnp
addr16
push
dec
and
ss
dec
pop
mov
adc
jae
fwait
push
in
rolb
jb
push
push
adc
mov
mov
mov
sbbl
pop
xchg
jb
lret
or
popa
mov
xor
nop
add
xchg
data16
xchg
lret
movsb
mov
or
in
push
push
testb
fwait
xchg
mov
repnz
arpl
rcll
bound
popf
push
pop
sbb
adcl
xlat
fmuls
push
into
aad
sub
negb
mov
cmp
ds
pop
add
scas
call
pop
adc
loope
loopne
adc
lret
pushf
enter
rep
movsl
xor
sbb
orb
cmp
stos
js
xchg
adcb
xchg
es
addr16
xor
adc
pop
lahf
imul
sub
std
mov
mov
mov
in
xchg
stc
insb
cmp
ja
jmp
sbb
iret
in
sahf
sbbb
cmp
nop
das
scas
fildll
mov
lods
vmovaps
jge
pop
xor
jno
sub
mov
enter
mov
mov
mov
or
daa
jno
aam
rcrl
add
es
jns
push
inc
pop
cmp
sbb
pop
psubusw
jno
sbb
adc
push
jnp
pop
add
popf
in
and
mov
xorb
andl
xchg
bound
sbb
icebp
fdivrs
je
repz
shlb
in
add
fisubrs
orb
loopne
jne
addr16
lods
xchg
and
loop
das
push
mov
cmp
std
in
call
orl
push
das
cmc
outsb
mov
mov
loopne
dec
fstpl
ds
or
sbb
xor
popf
pop
aam
dec
stos
call
adc
inc
lock
shr
lea
out
repz
push
lret
sahf
push
push
das
mov
imul
dec
cmp
pop
rolb
dec
sbb
lods
lods
test
sbb
les
jg
imul
mov
aaa
pushf
je
out
push
xlat
dec
addl
mov
lcall
lods
and
bound
xchg
xchg
jg
sbb
pusha
mov
cmp
mov
loopne
jp
add
mov
xchg
js
cli
xor
test
mov
aaa
add
adcb
dec
xchg
lds
push
repz
xchg
cmp
mov
xlat
in
aas
into
and
shl
pushf
mov
or
cmp
loope
in
adc
arpl
jl
out
jae
out
negl
inc
pop
imul
inc
sahf
ret
pop
ss
jbe
dec
and
push
stos
inc
ret
int3
movb
sahf
mov
cmp
into
add
xor
test
cmp
std
sbb
jecxz
xchg
xor
add
jmp
adc
mov
insb
pop
xor
cmp
xchg
or
pop
test
mov
cmp
prefetch
or
pop
cwtl
cmp
jp
xchg
jle
fists
jp
roll
scas
in
stos
imul
mov
sbb
add
cmp
fs
nop
dec
mov
ds
mov
pop
fcmovne
lods
aam
aaa
pop
adc
lods
daa
fwait
shl
sbb
lcall
mov
add
inc
sub
lods
int
and
loopne
jb
mov
mov
pop
pushf
icebp
iret
mov
imul
jne
insb
push
add
sub
sahf
icebp
sub
les
ror
addr16
scas
dec
pop
push
shlb
pop
inc
sub
xor
pop
jl
inc
push
fwait
ljmp
sub
fnstcw
fs
stc
lret
mov
aam
or
xor
mov
mov
xor
loopne
xchg
add
cli
push
scas
cmpsl
mov
inc
sbb
cld
mov
jl
sbb
call
push
inc
sbbl
gs
pop
dec
mov
lret
xor
call
and
mov
cwtl
shll
ror
or
inc
sub
adc
mov
cwtl
add
cmp
subb
in
lods
and
nop
sbb
fldenv
jnp
add
pop
mov
mov
mov
popf
jg
cld
scas
sub
sti
fsubr
pop
mov
lret
jno
jne
push
jmp
sub
mov
xchg
in
mov
push
jns
mov
cli
and
cmp
pop
mov
enter
inc
and
sti
aad
push
pop
jecxz
xor
ljmp
jl
pop
pop
ret
cltd
jns
icebp
pop
sbb
aaa
jns
cmp
push
push
jb
aas
fwait
bound
cmp
fimuls
loop
std
fisubs
test
in
mov
add
sub
cmc
mov
jae
cmp
out
cmpsb
jl
jp
fimull
sub
fisubs
rcr
daa
js
scas
insl
cmp
sub
and
loopne
push
dec
call
cmc
leave
pop
lea
push
mov
imul
fisttpll
pop
pop
xor
mov
lea
lret
pop
xchg
lahf
mov
dec
cmpsl
mov
and
mov
int
icebp
jg
cltd
loopne
fwait
adc
dec
pop
fiadds
pop
shll
mov
add
and
adc
and
or
xlat
imul
jmp
clc
or
jo
mov
sub
mov
test
test
mov
add
mov
dec
pop
fwait
scas
cmpsb
cmp
jo
ror
sbbl
jle
decl
mov
adc
mov
mul
nop
cmp
sti
in
lcallw
lret
in
scas
inc
divl
mov
cli
jg
or
insb
add
mov
xchg
and
cmp
pop
sbb
mov
out
popf
push
xchg
popa
arpl
cmp
pop
std
xor
ret
test
adc
mov
fistpl
adc
ret
and
lcall
das
cli
mulb
mov
cmp
imul
loop
xchg
stos
das
out
outsl
sub
push
rcl
inc
test
cmpsb
or
pop
ja
test
fdivr
add
push
push
ss
and
mov
sahf
imul
mov
mov
loop
push
push
mov
jg
inc
aas
cmp
mov
push
mov
sbb
stos
pushf
add
fmul
jno
fnsave
push
out
imul
xchg
movsl
jle
mov
push
add
and
pop
in
scas
jb
fsubs
pop
loop
xchg
int
daa
mov
push
test
cwtl
mov
clc
push
cmp
mov
adc
sahf
inc
add
jnp
js
lds
jns
les
and
add
rcll
xchg
dec
idivb
jge,pt
mov
insb
xlat
dec
outsl
or
fwait
push
scas
jo
inc
sub
or
pop
les
push
mov
and
negb
mov
movsl
fdivrp
inc
or
add
clc
or
ror
xchg
pop
hlt
stos
inc
xor
lods
push
popf
insb
roll
mov
fcmove
mov
out
push
mov
clc
mov
add
gs
outsb
loop
and
aas
mov
lds
mov
fcmovu
lea
or
mov
insl
inc
push
jge
mov
gs
cmp
push
insl
mov
inc
push
and
repz
pop
sahf
pop
test
inc
call
shr
call
inc
ret
jb
adc
loope
pop
fmull
mov
rcl
shlb
lock
dec
adc
and
push
adcb
jecxz
hlt
subb
enter
cmpsl
in
leave
jmp
mov
movsb
cmpsl
and
ret
xchg
imulb
insb
test
inc
xchg
push
inc
ss
xchg
push
dec
fmull
pop
push
inc
ret
test
int3
dec
ret
movsb
fwait
xlat
bnd
jbe
rcl
mov
mov
mov
xlat
xlat
insl
notl
frstor
cmp
mov
sub
or
or
push
orb
mov
push
push
mov
xchg
aas
dec
scas
adc
pop
xchg
cmpsb
sbb
inc
subb
cwtl
enter
and
dec
mov
add
sub
fsubs
mov
mov
dec
fdivl
or
mov
dec
mov
xchg
je
insb
cmpsl
push
and
add
and
sti
mov
lds
rcr
or
imul
es
adc
loopne
xor
ret
std
push
or
sub
cmpsl
sarl
sub
jb,pt
mov
orb
fnsave
icebp
scas
repz
pop
sub
filds
mov
cld
push
push
aas
pop
jg
pop
jne
push
inc
les
aas
mov
sbbb
push
jo
pop
xlat
iret
js
lock
dec
outsb
shl
jp,pt
stos
outsb
add
out
sti
cmp
enter
out
cmp
jl
push
mov
insb
ja
adc
mov
mov
mov
push
xchg
xchg
popa
repnz
mov
sarl
mov
iret
sub
cmc
and
test
repnz
dec
stos
cmp
jge
mov
add
mull
sbb
cwtl
lods
js
mov
mov
xchg
test
mov
int3
loopne
xor
adc
pop
adc
scas
sub
mov
test
pop
push
push
jae
imul
lods
lods
inc
adc
nop
and
bound
push
mov
mov
test
sub
clc
push
jno
into
jne
xchg
lret
cmp
and
push
shl
and
sti
cmove
rcrb
sub
pop
sbb
push
jl
dec
shrl
pop
xchg
test
int
jmp
outsl
xchg
jb
lret
insb
mov
imul
dec
adc
fdivl
movsl
cmpsl
ljmp
mov
fwait
test
mov
xlat
jnp
cmp
rcrb
in
inc
jl
mov
mov
lret
fisttps
es
add
push
inc
xor
pop
or
lcallw
addr16
add
pop
xchg
pop
dec
jb
ds
aad
fnstsw
pushf
adc
mov
mov
xchg
dec
cmp
scas
add
xchg
add
add
lock
push
or
cmp
subl
sub
loopne
xor
pop
inc
repz
in
jno
fstl
sub
fdivrp
pop
mov
xor
icebp
ret
sub
andl
loopne
inc
cmp
sbb
popf
or
into
xchg
nop
leave
fadds
sbb
int3
dec
push
jmp
aad
sbb
pop
adc
inc
cmp
push
insb
repnz
lret
inc
aam
fucomp
sub
cmp
sbb
ljmp
xor
fildll
push
idivl
mov
mov
mov
imul
sbb
aaa
or
aad
sbb
xlat
pushf
pop
sub
loop
lods
adc
popf
mov
xchg
test
fwait
ficomps
or
dec
mov
push
fwait
add
push
mov
int
or
notb
dec
lea
push
lea
cmp
dec
call
fnsetpm(287
cmp
add
lcall
into
dec
ret
lods
sti
js
lahf
xor
cmp
cmp
pushf
test
mull
lea
fdivrl
cwtl
pop
das
int
jnp
rorl
mov
and
adc
stos
fs
test
jnp
shll
xchg
or
aad
fs
or
and
mov
out
adc
jbe
jg
aam
add
adc
lea
dec
push
rorl
ja
push
and
pop
xchg
pop
xor
lahf
hlt
xor
fwait
rcl
test
adc
push
or
aam
xor
mov
das
call
ja
test
pop
xor
cmp
test
sub
imul
sbb
sub
sub
jge
xor
or
inc
or
jae
mov
bound
sbb
cli
adc
pop
pop
push
aaa
ret
add
inc
stc
shll
out
pop
adc
pop
adc
xor
cmp
cltd
sahf
stos
jp
mov
adc
push
or
jns
loope
mov
in
push
outsl
sbb
and
mov
mov
enter
sub
sarl
lods
pop
out
cld
xchg
jbe
pop
jb
mov
xchg
ljmp
imull
or
mov
jnp
xchg
int
mov
int3
add
lock
fldl
sbb
lret
mov
movsb
arpl
std
test
inc
mov
mov
mov
xchg
imul
cmp
jg
inc
mov
sub
dec
rorb
and
mov
movl
sbb
jns
sbb
push
mov
test
sub
mov
jg
aaa
mov
add
imul
xor
mov
mov
cmp
das
sahf
xchg
mov
dec
push
push
lret
cltd
fdivrp
test
inc
jmp
mov
sahf
mov
cmp
test
add
mov
xor
fwait
movsl
rcl
lock
lock
adc
rclb
cmp
roll
cmpsl
add
dec
sub
loopne
fldcw
mov
and
sbb
mov
popf
call
sbb
cmpl
cmp
idivl
push
sti
cmpl
lea
xchg
mov
xchg
loop
test
sub
btc
xchg
das
fs
shlb
call
out
adc
sbb
test
xchg
loop
out
std
in
cmp
xor
jg
mov
popf
aaa
test
out
push
xchg
pop
adc
jae
adc
test
insl
orl
mov
movsl
lea
jl
push
int
rorb
pop
push
sub
adc
in
into
test
mov
repz
rorl
or
rol
loopne
das
adc
mov
push
or
gs
pop
out
sbb
fstpt
sbb
inc
or
mov
or
repz
jp
test
test
xchg
jb
stos
jo
roll
add
pop
call
xchg
xor
rorb
repnz
testl
pop
test
sti
pop
jg
leave
or
pop
arpl
sub
add
sbb
arpl
imul
jmp
scas
push
dec
andl
pop
lret
aam
mov
shll
jo
repnz
test
xchg
mov
call
jbe
loope
xchg
mov
mov
mov
and
jl
test
lret
rorl
dec
out
add
stos
das
cwtl
xchg
cmp
cld
inc
jmp
sbb
loop
lods
out
sti
push
lahf
sub
sahf
mov
push
test
pop
out
inc
lods
add
jno
sahf
out
dec
jmp
mov
fisttps
sub
iret
cld
arpl
cld
shll
stos
outsl
jmp
fnstsw
xchg
pop
ret
shr
pop
sbb
lods
add
xor
push
imul
aam
into
push
lods
xchg
and
inc
stos
cs
add
sarb
out
mov
pop
xorl
jno
rcrb
dec
cli
sub
mov
mov
sbb
dec
mov
mov
mov
sbb
test
test
mov
cmp
jo
in
ss
push
and
test
icebp
mov
mov
test
cli
dec
cmp
xlat
xorl
jge
lea
push
xchg
les
insb
xor
leave
popf
fldpi
jo
fnstcw
mov
je
rolb
dec
push
popa
adc
fst
add
aad
cmp
mov
out
and
lds
sub
dec
mov
xlat
into
sub
out
hlt
pop
lds
imul
push
xor
aaa
mov
dec
push
and
and
mov
adcl
pop
into
or
rcr
mov
inc
push
dec
es
daa
xchg
sbb
mov
pop
cld
pop
outsl
mov
pop
inc
add
mov
jl
fsub
mov
mov
fsubrl
xchg
or
inc
inc
push
ljmp
fs
icebp
mulb
xor
sub
adc
ds
xor
cltd
push
inc
loope
sub
lret
fsubrp
dec
test
sti
cmp
push
mov
in
lret
testb
ret
and
fstl
scas
dec
xchg
jne
sbb
test
xchg
xchg
push
push
push
xlat
fldt
pop
mov
rcll
mov
pop
sbb
push
imul
fsubrl
jecxz
in
jp
ljmp
test
pop
pushf
lock
aam
orl
and
mov
pop
call
push
outsl
lock
xlat
or
aam
xchg
pop
jmp
lcall
outsb
sbb
adc
fsubrp
fimuls
xchg
jle
push
and
enter
aaa
pop
shrb
push
push
ror
enter
push
insb
add
fcoml
rcrb
sbb
and
sbb
xor
scas
pop
bound
or
outsb
mov
and
stos
fs
jb,pt
repz
sbb
lock
sub
push
test
incl
cli
lret
sti
mov
leave
mov
cmp
jns
fucomp
push
sbb
cli
push
xchg
ss
ja
sarb
insb
sub
cmp
mov
adc
cmp
sub
jns
xchg
sbb
cmp
sbbl
push
icebp
pop
cltd
xchg
leave
cld
mov
sbbb
shrb
sub
aas
loop
jb
dec
sub
xlat
orl
rorb
outsl
les
cwtl
mov
add
pop
pop
call
mov
fldenv
sbb
lret
mov
pushf
sub
and
test
js
jmp
es
out
sub
xlat
xor
stos
out
stc
test
loope
outsl
push
xchg
push
scas
repz
xchg
imul
out
or
lods
cmp
ss
fldenv
sbb
lcall
ja
rcrb
adcb
inc
fwait
sub
negl
push
pusha
in
xchg
add
push
mov
mov
cltd
add
push
repnz
scas
cwtl
cltd
insb
in
cmp
sarl
ror
pop
inc
push
mov
into
mov
cmp
cwtl
bound
xchg
out
sub
dec
cmp
inc
bound
mov
rorb
imul
divl
mov
sbbl
xchg
cmp
insb
adc
dec
hlt
in
cmpsb
dec
and
mov
xor
lods
je
and
cs
mov
pop
test
cmp
setne
jg
cmp
nop
in
push
sub
sarb
stc
sbb
ss
xlat
xchg
stc
daa
lret
mov
js
movsl
mov
lret
stc
ret
or
xchg
xlat
out
pop
pop
and
jae
jne
inc
or
inc
mov
xchg
jge
and
mov
mov
mov
cmp
arpl
in
or
sbb
icebp
cmpsb
adc
and
mov
cmpsb
cmpsl
dec
push
xlat
lods
lret
lcall
outsl
hlt
fisubrl
repnz
test
scas
add
stc
lods
arpl
dec
jle
dec
sbb
cmp
cwtl
stc
mov
mov
and
cmp
les
push
repnz
push
sbb
sub
and
add
adc
sbbb
jp
cwtl
sub
mov
out
or
push
mov
rcrb
nop
lds
and
pop
test
cmp
adc
mov
mov
jg
adc
lods
or
dec
gs
fs
lea
jmp
mov
imul
pop
xchg
mov
fnstcw
stos
mov
adc
mov
add
jle
out
ret
insb
inc
dec
and
dec
dec
mov
or
mov
mov
clc
xchg
outsb
push
cs
fbstp
mov
sbb
sbb
xchg
sbb
add
fsubr
xor
or
push
and
or
test
push
lea
add
repnz
jecxz
sahf
call
cmpsl
int
mov
mov
sub
adcb
in
roll
xlat
mov
movsb
icebp
out
pop
mov
lods
push
pop
xor
xchg
mov
mov
push
and
nop
sub
dec
in
dec
insl
shl
fwait
sbb
or
aas
push
dec
imulb
adc
fwait
xor
stc
pop
jecxz
push
stos
pop
mov
mov
adc
cmpsb
mov
movsl
dec
jecxz
les
jno
sbb
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
xor
sub
mov
cmc
idivb
ret
loope
.byte
xchg
lret
push
leave
.byte
add
add
add
add
and
add
inc
add
addb
add
add
add
pop
add
addb
add
jo
add
add
add
rolb
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
rorb
add
add
dec
or
test
add
lock
add
add
add
add
push
add
dec
add
dec
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pusha
pop
add
inc
add
add
add
add
add
addb
add
roll
addl
add
loopne
add
clc
push
add
inc
add
sub
add
and
add
inc
add
add
add
add
rol
lock
js
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
clc
ud0
rolb
filds
add
filds
add
add
aas
in
add
pop
call
add
add
add
push
add
add
add
add
add
psubb
rorb
add
pop
cld
add
pop
incb
add
incl
add
addb
inc
add
clc
pxor
push
out
cld
pop
incl
add
add
add
adc
add
add
add
add
add
and
incl
add
or
test
add
add
add
add
mov
add
lcall
lods
mov
jae
leave
pop
lret
add
ds
cmpsb
enter
cmpsb
test
jns,pn
int
shll
fsubs
repz
outsb
ret
call
adc
xorl
dec
scas
inc
shlb
push
adc
in
sbb
jnp
xchg
repnz
ret
jge
movsb
inc
cli
pop
nopl
sbb
add
xchg
push
push
adc
xchg
push
out
pop
arpl
push
xchg
xchg
lret
xchg
hlt
das
xchg
sub
push
sbb
jg
or
push
hlt
test
jae
decl
mov
lret
xor
push
xor
jb
xchg
dec
insl
and
test
dec
ror
mov
test
sub
lock
xchg
mov
std
and
xchg
out
in
or
addb
pop
adc
les
push
inc
ret
xchg
mov
xchg
jecxz
xor
mov
std
mov
mov
mov
std
push
mov
test
jle
or
mov
push
push
adcb
fildl
sbb
adc
mov
sbb
jbe
data16
cmc
mov
ret
mov
mov
push
jnp
lahf
fstl
or
stc
adc
out
mov
cmpsb
lea
sbbb
daa
shlb
push
ror
jne
mov
cmpsl
inc
cli
jae
popa
or
test
mov
imul
inc
in
ror
push
int
idivl
jmp
icebp
shl
cli
icebp
stos
sbb
mov
mov
lods
mov
and
push
repnz
mov
cmc
cmp
mov
dec
sahf
dec
mov
mov
ljmp
pop
shlb
and
and
xchg
jno
and
jo
lds
ja
jp
repz
fisttpl
imul
adc
xor
push
push
mov
mov
jle
cmpsb
out
jno
popa
popf
jmp
xor
dec
fnstenv
sbb
xor
xor
iret
add
sub
out
mov
adc
addb
test
je
sar
scas
sbb
mov
mov
push
int
dec
pop
add
arpl
dec
lea
out
jo
dec
addr16
xchg
sbb
fs
xor
sbb
mov
sbb
imul
testb
loopne
loopne
push
mov
jg
enter
xchg
stc
jo
sub
fwait
xchg
jae
sub
das
pop
aas
push
ss
adc
js
aam
sub
xor
xor
stc
add
cmp
cld
cmp
and
movsb
jl
leave
mov
cmp
lret
mov
out
mov
mov
xchg
mov
shrl
cs
xchg
loop
sub
cltd
xchg
jns
cmp
sub
ja
lahf
jp
cmp
pusha
ljmp
push
dec
pop
pusha
mov
dec
test
sbb
dec
mov
or
in
stos
insb
popa
jno
in
xchg
mov
out
test
inc
sub
pusha
mov
fsubr
or
mov
jnp
in
loope
in
aam
pop
cmp
jmp
and
mulb
xchg
scas
test
aas
adc
adc
in
cmp
imul
pop
cltd
gs
adcl
lds
xchg
cmpb
aad
mov
test
mov
outsb
add
pop
add
mov
fwait
cmc
mov
push
popf
mov
sub
xor
jl
xchg
ljmp
mov
adcb
gs
jl
popa
mov
adc
cmp
dec
popf
add
cmp
out
das
push
jecxz
mov
lcall
insl
inc
loope
popf
pushf
lret
xor
fisttpll
mov
test
rcr
pop
aad
scas
les
jno
add
inc
lds
mov
inc
or
cltd
jbe
test
and
sub
cmc
or
decl
sbb
mov
subl
mov
sub
inc
jmp
xor
ljmp
and
outsb
cltd
stc
push
and
loopne
adc
mov
sbb
loope
mov
sbbb
cmp
push
loope
andl
mov
xlat
push
or
adc
pop
jle
cmp
xchg
mov
sub
les
mov
mov
sub
ljmp
mov
sti
mov
dec
aas
sbb
pushf
jns
les
adc
pop
imul
cli
inc
pusha
jecxz
adc
pop
shrb
cmp
test
mov
push
fs
fsubrl
rcr
ja
fstps
sub
sti
pushf
das
loopne
jp
xor
or
or
enter
repnz
sbb
cmpxchg
test
rcrl
je
dec
test
je
adc
push
stos
fldt
mov
inc
push
dec
jmp
fs
xchg
mov
jl
mov
mov
mov
xor
jns
mov
shl
jle
imul
aam
lods
mov
xchg
jno
cmp
mov
sub
mov
sub
pop
push
mov
xchg
jnp
add
inc
xchg
gs
fwait
xor
add
sbb
jbe
das
inc
shl
ds
mov
sbb
out
scas
mov
out
cli
cmp
repz
push
sbb
sbb
outsl
or
data16
mov
popa
lcall
and
add
arpl
jns
pop
mov
mov
jp
sub
outsb
sti
xchg
cmpsb
mov
jp
sbb
ljmp
js
push
mov
xor
lods
xchg
cmc
and
popf
stos
jb
outsb
stos
xchg
or
ja
sbb
lds
std
push
sub
xchg
cmpsb
andb
leave
jp
jb
repnz
xchg
jl
sti
sbb
fildl
xchg
hlt
sub
subb
ds
jb
fisttpl
jno
xchg
add
outsl
int3
push
jnp
adc
push
fs
rcll
sub
cmp
andl
mov
test
push
mov
jmp
loop
cltd
jecxz
scas
jl
push
test
lahf
loop
xlat
cmp
popl
jns
test
mov
dec
dec
push
ret
or
mov
pop
sub
loop
in
xor
jmp
adc
fisttpl
push
sbb
add
xchg
mov
jp
movsl
and
fs
xlat
cwtl
sub
negb
mov
sbb
fucomip
adc
xchg
sbb
loope
scas
mov
test
movsb
mov
dec
lahf
lahf
test
sti
xor
cmp
icebp
jg
fcompl
push
add
jg
adc
imul
insb
xchg
add
outsl
aam
mov
inc
mov
adc
int
out
dec
jns
add
add
cmp
data16
aaa
jo
pushf
mov
addr16
call
mov
call
cmp
sbb
mov
imul
fnstenv
dec
jno
fsubr
adc
mov
lcall
cmp
and
pop
pop
mov
adc
faddl
imul
push
and
mov
xlat
pusha
test
mov
mov
push
test
fdivl
sub
cmp
mov
sbb
sbb
cmpsb
leave
outsl
mov
dec
je
fsubrs
out
adcl
stos
out
cltd
testb
imul
dec
mov
ret
les
test
jp
pushf
jbe
dec
sub
push
xchg
pop
inc
jmp
or
pop
sub
cmp
fistpll
fdivrl
sub
in
xor
repnz
mov
sub
mov
and
cmp
fnstcw
aaa
inc
jne
inc
inc
stc
push
mov
xchg
mov
push
dec
cmp
imul
dec
test
js,pn
pop
popf
bound
sub
sbb
mov
stos
add
xchg
adc
lahf
lret
jmp
aaa
enter
jmp
add
sbb
jl
jle
mov
and
out
enter
pop
or
stos
mov
xor
loope
nop
shl
and
mov
and
popf
ret
call
fldcw
das
pop
sub
adc
lea
fnstsw
inc
xchg
popa
push
dec
inc
xchg
pop
shrb
mov
ret
mov
push
ret
fstps
push
int
and
das
and
test
sahf
out
xor
xlat
xchg
aam
sahf
daa
jp
js
adc
mov
repnz
mov
lahf
mov
loopne
adc
cmp
inc
fcoml
out
ja
add
mov
push
add
fs
or
xchg
xlat
adc
nop
notb
or
xchg
xchg
jb
add
fsubrp
sar
jmp
cmpsl
jmp
push
jg
call
out
popa
mov
popa
stos
push
cmpsl
das
xchg
insb
push
cmc
loop
xor
pop
sti
mov
xor
mov
pop
in
ljmp
repnz
lods
mov
and
rcl
call
sub
xchg
xchg
fsubrs
sub
lcall
pop
int3
loopne
test
insb
out
cmp
insb
ficoml
mov
inc
lds
mov
pop
mov
aaa
dec
add
jle
xchg
mov
dec
cld
repz
mov
mov
scas
mov
leave
mov
daa
xlat
call
cmp
lret
out
cmp
out
out
aad
pop
test
sbb
xchg
cwtl
aam
adc
push
or
pop
mov
ja
and
imulb
testl
mov
mov
popa
adc
std
mov
jmp
and
movsl
es
scas
cmp
iret
or
sub
adc
dec
lods
pushf
jno
mov
push
int3
fsubp
inc
loop
popf
in
cmp
mov
dec
xor
imul
push
stc
int
scas
clc
xlat
and
and
mov
dec
jge
ret
aam
push
pop
in
jae
pop
dec
jge
and
inc
ds
mov
or
call
jb
sbb
enter
xchg
cltd
rolb
xor
and
mov
adc
in
dec
xor
insb
cmp
jecxz
pop
inc
iret
fistl
hlt
test
je
xchg
ja
int3
mov
sbb
jo
sbb
mov
dec
and
fistpll
je
popa
fwait
gs
imul
mov
jae
xor
sbb
shlb
lods
add
in
subb
lahf
xchg
mov
push
inc
jno
pusha
xor
mov
pop
dec
popf
xchg
test
mov
repnz
data16
xchg
xor
test
cmp
test
mov
mov
ficoml
add
xchg
xchg
mov
das
mov
lea
pop
cli
mov
inc
cmpsl
in
insl
cmp
push
jae
in
jno
dec
shrl
dec
xlat
pop
push
fiaddl
in
das
push
in
xchg
test
gs
leave
xchg
pop
pop
pop
cmp
sbbb
insl
xor
repz
in
pop
xor
pop
and
jp
mov
iret
rolb
push
pusha
fsubr
inc
inc
loopne
xchg
push
add
pop
fucomp
pop
in
in
or
push
xchg
int
pop
subl
jne
or
je
aaa
adc
in
fiaddl
fbstp
mov
out
movsl
mov
adc
mov
js
jb
cmp
sub
cmpsl
fdiv
fwait
xor
into
add
popfw
cld
mov
icebp
dec
pop
pop
loope
sbb
jb
sub
out
repz
out
jb
movsb
enter
lock
xor
pushf
cmp
int3
dec
xchg
jg
inc
pop
sbb
inc
jge
fldt
cmp
enter
xor
mov
inc
gs
mov
pop
pop
cmp
das
lcall
adc
dec
imul
adc
jl
jne
movnti
or
xor
pop
les
mov
lods
ljmp
xchg
ss
push
aaa
loope
jle
leave
dec
push
cmp
cwtl
inc
pop
roll
cld
xchg
adc
mov
ficomps
mov
sbb
subl
pop
aaa
jl
hlt
sub
jne
stos
insl
adc
popf
adc
mov
cld
bound
popf
push
push
dec
ja
inc
push
sbb
add
gs
dec
sbbl
mov
cmp
xchg
dec
xor
cmpl
cmp
xchg
cmpb
mov
ret
imul
shlb
inc
int
xchg
sti
adc
repnz
push
lret
pushf
xor
mov
inc
not
xchg
add
xor
cwtl
ret
xchg
push
inc
arpl
mov
addr16
stos
icebp
das
xchg
jg
dec
out
sub
sbb
sub
mov
data16
mov
arpl
ss
xchg
out
sbb
loop
mov
sub
aas
repnz
fmuls
imul
out
js
inc
stc
fstpt
cmp
int3
dec
jmp
cmc
or
cwtl
bound
mov
fcomps
adc
outsb
int
pop
sub
inc
or
and
divl
cltd
js
arpl
mov
dec
sbb
imul
pop
jg
loop
jge
add
or
pop
xchg
lods
dec
std
daa
jbe
movsb
pop
sti
push
mov
stos
in
nop
xor
sbb
or
adc
call
movsl
int
fsts
mov
jl
sarb
adc
nop
jecxz
call
mov
xlat
pushl
movsb
lcall
cli
cld
jle
xorb
ljmp
mov
cmp
aaa
aam
roll
pusha
pop
mov
adc
pushf
loope
pusha
cmc
movl
pop
in
cmp
xchg
push
jge,pn
dec
pop
je
arpl
mov
cld
dec
je
xchg
pop
in
lea
xor
clc
test
rcrl
pop
adc
xchg
push
rorl
js
fidivrl
cwtl
fs
mov
cmp
xchg
aad
pop
ficomps
mov
jmp
cmp
repz
or
jb
jb
insl
adc
or
shr
pop
sarl
add
ds
lock
sub
jb
daa
pusha
jp
xchg
xlat
xor
pop
lret
lods
gs
and
ljmp
scas
jns
xor
cmp
test
addl
sbb
sbb
daa
sub
aam
fidivrl
outsb
lea
push
pmuludq
or
std
rorl
and
push
lds
bound
inc
sarb
dec
inc
ret
out
in
shlb
out
in
jo
jecxz
and
sub
jg
adc
xchg
loop
push
test
push
sub
jp
pop
cmpsb
orl
sbb
mov
cmp
std
add
mov
jge
subb
ficomps
adc
and
aaa
push
mov
stos
dec
sub
cli
push
mov
mov
test
mov
dec
sbb
push
sbb
adc
dec
jp
add
iret
sub
push
jne
jge
mov
xchg
aaa
repz
stc
xor
mov
sti
fsubrl
jo
mov
inc
stos
pop
popa
les
movsb
jl
mov
xchg
les
aam
mov
jge
add
les
mov
ret
and
adc
leave
xchg
jnp
inc
mov
adc
sar
daa
pop
mov
dec
fldenv
push
fcomps
jne
fists
push
data16
lock
dec
pop
jp
lret
insl
jmp
sbb
lea
jle
or
pushf
or
cmc
xor
xor
cmp
dec
xchg
sarb
lret
jno
push
into
cmp
push
in
sbb
cmp
xor
sbb
data16
cmpsb
cmp
xchg
stos
decl
cmp
dec
fs
push
push
mov
clc
cmpsb
mov
sub
scas
mov
stos
mov
enter
fnstcw
pusha
mov
inc
into
jg
popa
adc
out
jecxz
call
pop
pusha
insl
mov
sub
or
lret
shrb
sub
add
mov
lret
mov
dec
jmp
and
add
dec
loopne
xchg
pop
mov
mov
sub
xchg
jl
test
cmp
xor
insl
adc
in
rorl
mov
sti
movsb
test
and
pop
inc
cld
pop
adc
jbe
push
les
popa
loop
popf
cltd
es
sahf
cld
inc
movsb
lret
sbb
mov
sbb
mov
inc
sub
sub
in
xor
jle
std
cmp
fst
fimull
loop
adc
jnp
fstpl
icebp
jnp
repz
adc
dec
aaa
in
or
insb
cmpsb
mov
sub
imul
shlb
ds
push
test
xor
int
push
pop
js
mov
or
loope
sub
adc
lods
mov
and
les
push
xor
outsb
sub
in
aas
adc
int
cmp
adcl
xor
xchg
or
sub
push
add
mov
es
bound
test
pop
icebp
fiadds
mov
dec
sbb
lds
repz
in
jl
cmc
push
pop
popf
cltd
cltd
xorl
push
xor
adc
fsubl
out
vpmacsswd
xorl
dec
cmp
arpl
jmp
int3
mov
mov
ret
push
sahf
lret
das
jno
fcmovb
insl
lds
or
xchg
push
negl
ret
fsubl
pop
xor
jecxz
inc
stos
sub
cmpsl
add
mov
stc
test
and
cmp
mov
pop
pop
push
lret
xor
std
dec
push
pop
mov
sbb
add
mov
jp
rolw
daa
sub
rorl
cmp
dec
loope
adcb
push
fnsave
in
clc
cmpsl
jo
je
outsl
call
dec
std
mov
andl
out
mov
les
js
test
push
incb
mov
fldl
pop
mov
andl
inc
add
cmp
push
icebp
push
or
cld
insl
lods
fbld
jbe
and
lret
int
mov
and
jno
iret
minps
sub
push
and
ret
out
xor
shr
fbld
enter
mov
lods
mov
jg
or
js
xchg
cvtps2pd
pop
or
sbb
ret
pop
insl
fisubrl
adc
xor
xchg
sub
jecxz
sbb
xchg
repnz
test
orl
fmull
ss
pop
cltd
jns
sbb
xor
or
jo
pop
call
ds
pop
sub
sub
icebp
fcmovnbe
outsb
pop
call
repz
imul
xor
int3
adc
or
popa
stos
das
or
or
pop
insb
lret
ljmp
cmp
test
sbb
jns
or
inc
sbb
pop
stos
int3
ficompl
cmpsb
fstpl
xor
jmp
rcr
mov
scas
xchg
mov
dec
cmpsl
nop
lods
addr16
adc
shll
cs
rclb
mov
fcoms
stos
test
icebp
mov
xchg
lcall
mov
pop
mov
cmp
cmp
xchg
xchg
ret
rolb
jl
xchg
adcl
addr16
mov
insl
mov
pop
adc
and
out
iret
insb
or
push
idivb
insl
push
int3
cmc
mov
add
orl
sub
pop
fstps
out
cmpsb
cld
push
daa
scas
sbb
mov
adc
jnp
xchg
mov
or
insl
movsl
or
sbb
imul
je
sbb
and
clc
push
aad
mov
outsl
adc
repnz
loopne
or
out
test
pop
inc
sbb
pusha
adc
test
jo
paddusb
aaa
pushl
cmp
push
sbb
inc
inc
pushf
inc
sbb
cmp
jge
pushf
and
ret
xor
pusha
int3
movsb
xor
mov
shrl
iret
pop
cmp
daa
cmp
xor
int
sahf
testl
jl
mov
shrl
mov
push
fildl
jnp
mov
in
out
dec
outsb
out
jmp
sub
dec
ficoml
mulb
add
sti
inc
adc
cmp
inc
fstps
shll
fwait
add
mov
inc
shlb
mov
xchg
movsl
sbb
loopne
and
cmp
test
int3
jno
bound
adc
aas
cmp
push
imul
test
pop
pop
es
scas
dec
std
sbb
pop
dec
clc
xchg
insl
lods
ljmp
sub
jle
les
push
or
push
inc
je
ret
das
cmp
test
movsl
test
mov
jl
sub
jne
and
lret
ljmp
and
sti
fstpt
cs
adc
add
scas
or
inc
addr16
popa
mov
mov
bound
lret
dec
movsb
pop
divl
in
xchg
lret
jae
shrl
and
shlb
lret
ficomps
sbb
sbb
add
push
dec
je
fcmovb
int3
push
xchg
jmp
es
xchg
and
mov
std
ret
xor
js
jb
push
add
ret
push
jmp
sub
add
jl
enter
stos
xor
or
sub
xchg
rcr
dec
or
or
lcall
and
sarl
xor
mov
xorb
jns
mov
push
mov
call
xor
jge
arpl
pop
push
jns
and
pop
fwait
repnz
push
mov
xchg
pushf
cltd
jmp
sub
out
inc
arpl
ds
std
lods
add
out
sbb
into
leave
insl
ja
add
ljmp
push
sbb
enter
pop
ljmp
in
jl
push
loop
fldcw
jb
enter
ret
cmpsb
ss
stc
popa
repz
adc
movsb
sarl
dec
stc
add
out
push
sbb
adc
pop
dec
icebp
sahf
dec
in
loop
jl
and
jo
mov
mov
mov
lea
ss
inc
sub
rorb
sub
gs
pop
test
nop
mov
fwait
ja
dec
out
jnp
std
sub
add
push
aam
push
xlat
add
xor
and
pop
mov
xchg
fldenv
bound
xchg
mulb
cmp
xor
out
data16
movsb
iret
scas
lds
mov
ljmpw
jmp
jle
ja
das
subl
xchg
dec
dec
sub
mov
push
cmp
mov
bound
mov
push
add
xlat
fs
mov
fnstsw
enter
out
stos
cmp
push
loop
or
jp
add
mov
mov
xchg
div
mov
or
out
pop
push
jp
sub
int
lret
pop
das
cwtl
or
add
ss
adc
hlt
fildll
mov
mov
xchg
push
push
std
jl
push
mov
sub
testb
xchg
add
xchg
sub
jno,pn
sub
push
mov
ja
pop
insb
dec
dec
push
pop
je
ja
mov
shr
and
jmp
mov
loopne
imul
icebp
xchg
testl
xor
leave
adc
pop
xor
xor
push
ljmp
in
andl
mov
xor
cs
sahf
stos
mov
inc
sarl
cmpb
or
dec
hlt
adcl
sub
je
roll
bound
adc
xchg
jmp
shrb
pop
jno
shlb
and
ficoml
cld
int
xchg
cmp
and
xor
push
add
pushf
fs
fnsave
dec
mov
call
mov
sbb
inc
sbb
jns
inc
imulb
and
push
adc
dec
mov
inc
out
mov
dec
jge
pushf
push
xor
mov
cmc
enter
jecxz
and
cmp
aaa
push
fistpl
ss
jae
jno
xchg
mov
sub
repz
rcrl
insl
pop
leave
cltd
add
xor
mov
dec
push
mov
lret
inc
aaa
push
cltd
jae
call
mov
push
inc
xlat
lock
xchg
or
xchg
popa
aas
mov
scas
loopne
repnz
insb
mov
bound
jle
je
shlb
lock
aas
push
cmp
insl
ret
xchg
lock
cmp
mov
push
mov
pop
inc
mov
gs
shll
push
iret
shl
int
jl
dec
daa
add
inc
out
jmp
mov
or
cmp
dec
testl
add
mov
mov
and
rorb
and
icebp
inc
jge
xchg
outsl
std
cmp
pop
popf
cs
cmp
or
test
test
in
outsb
ss
in
mov
cmpsl
aas
ss
out
cli
bound
mov
inc
mov
movsl
and
loop
jne
xchg
jg
jns
loope
lret
stc
jmp
inc
sub
push
leave
test
jo
sbb
shll
std
inc
push
mov
dec
or
sub
or
into
fs
sub
or
and
cmpsb
and
xor
pusha
in
ss
sub
sbb
push
ja
mov
imulb
leave
popa
sbb
mov
sub
fwait
fstps
mov
mov
jp
inc
andb
or
loopne
ljmp
push
jmp
jne
sub
mov
cwtl
dec
push
push
ret
pop
dec
mov
shlb
inc
adc
mov
cwtl
mov
ljmp
inc
mov
leave
movsl
inc
mov
rorl
mov
orb
ljmp
sti
jle
test
inc
or
and
inc
push
xor
pop
mov
repz
lret
loope
sbb
aaa
pop
movsl
pop
push
insl
shll
mov
mov
pop
xchg
sub
notl
test
mov
lock
pushf
sbb
pusha
inc
xchg
mov
push
cmpsl
ret
inc
or
lret
cmp
iret
addr16
xchg
cli
add
and
pop
ftst
scas
addr16
mov
sub
imul
fs
dec
sub
fucomip
inc
lcall
ja
xchg
scas
pushf
push
pop
in
sbb
cmp
push
jmp
in
in
flds
adc
repz
dec
das
ss
pushf
cmp
push
pop
mov
sbb
test
call
fdivrl
and
addr16
mov
push
pop
cmp
in
xor
mov
mov
call
and
lods
cmp
inc
xchg
push
sbb
jl,pt
std
and
test
cwtl
xchg
cmpsb
mov
push
lods
jge
stos
pop
je
push
xor
notl
mov
push
lds
lods
jp
fistl
mov
popf
jns
inc
mov
cmp
mov
push
jnp
int
mov
ja
jl
fistl
mov
push
push
jp
es
xor
sbb
aam
lods
sbb
mov
dec
sub
lcall
scas
gs
nop
pop
mov
sub
pop
add
xchg
les
dec
sahf
jno
pop
jnp
sbb
enter
nop
sub
pop
fiaddl
arpl
inc
and
add
push
mov
loopne
xchg
push
call
mov
pusha
dec
and
add
push
jecxz
inc
stc
xchg
add
loopne
gs
adc
lods
xchg
mov
mov
mov
xchg
sbb
sub
mov
xchg
ror
cmpb
scas
mov
insb
sbb
xchg
call
cmp
xor
push
sti
mov
dec
pop
leave
jp
popf
movsl
es
dec
adc
imul
push
lahf
addl
xchg
shlb
inc
cld
stos
xor
into
clc
cmp
jecxz
movsl
pusha
lret
and
cmp
dec
into
cwtl
hlt
inc
mov
pop
and
sub
mov
sub
sahf
fldl
mov
daa
jecxz
xor
pop
repz
xchg
cwtl
sub
mov
and
cmpl
inc
mov
std
fadds
int3
inc
pop
loope
cld
and
aam
movsb
sbb
cmpsb
lret
mov
mov
push
sub
jbe
xor
test
std
pop
out
mov
lret
cmp
arpl
stos
rorb
mov
sub
pop
pop
enter
out
out
not
aaa
sbb
pop
std
cmp
sub
addr16
xchg
data16
jne
cmp
popf
les
aad
idivb
pop
inc
add
shl
fldcw
push
push
cs
jp
pushf
mov
pusha
add
aad
addb
lret
test
stc
sub
pop
add
shrl
push
fcmovb
dec
add
pop
mov
sti
sbb
loopne
xchg
std
mov
and
push
pusha
jae
aaa
ficoml
xor
pop
pop
push
pop
test
xchg
xchg
ret
jp
out
test
pop
test
sbb
repnz
xchg
jbe
xchg
adcb
dec
int
or
xchg
mov
mov
pop
jb
pop
std
jmp
popa
inc
push
test
adc
cmp
loopne
xlat
sbb
int
dec
int
sahf
jle
sub
cmp
push
ror
jb
jecxz
mov
stos
cmpb
sub
std
xor
mov
add
and
adc
lret
xor
test
mov
or
pop
icebp
insl
aaa
lods
sub
aad
jecxz
sbb
push
pop
cmp
mov
jl
out
aam
imulb
mov
ja
mov
rcrl
jb
mov
leave
mov
imul
or
stos
cmp
insb
xchg
dec
sbb
xchg
sub
shll
pop
jecxz
mov
aad
adc
jne
lock
jne
or
pushl
loope
jns
mov
ljmp
mov
pop
push
xchg
dec
fimuls
add
pushf
push
call
sbb
aad
sub
adc
mov
inc
add
insb
lahf
je
test
call
xor
inc
imul
je
sbb
in
or
js
mov
les
xor
int3
or
or
out
aad
pop
mov
pop
pusha
lods
sub
dec
fdiv
jmp
ja
nop
test
fiaddl
dec
and
lock
in
adcb
mov
jmp
mov
adc
fs
movb
dec
pop
xchg
jmp
clc
stos
jp
cmp
scas
xor
mov
mov
lods
mov
cld
jo
push
push
mov
mov
les
pop
xorl
test
in
sub
pop
adc
xchg
and
xor
push
push
or
xchg
cmp
dec
jae
adc
ja
adc
scas
int
cwtl
pop
pusha
pop
loope
mov
adc
jno
xchg
test
xchg
jnp
or
xchg
and
xor
push
mov
xchg
ror
je
out
or
outsl
not
fs
adc
pop
sbb
mov
imul
jecxz
and
inc
dec
and
out
enter
or
cmc
xor
dec
cmp
push
lods
dec
add
jns
cmc
leave
incl
sub
rolb
xchg
push
fldt
pop
outsb
jp
jne
jno
cmp
aam
popa
sbb
aas
sbb
popl
decb
add
xchg
mov
adc
sub
push
mov
adc
test
lret
push
sbb
incb
dec
popf
pop
xchg
lcall
and
inc
jnp
and
rol
mov
dec
and
adc
inc
mov
sbb
das
loope
es
cmpsb
inc
inc
add
andl
mov
jle
out
movsb
lods
jnp
out
inc
and
add
xor
adc
loope
mov
icebp
cmp
mov
and
mov
pushf
aas
mov
or
das
test
adc
sbb
outsb
test
push
mov
imul
pusha
xchg
nop
jno
push
xchg
pop
cmpb
loop
add
or
and
cld
jno
lret
xor
or
and
and
and
sub
and
mov
xor
in
call
popf
lods
mov
lods
rcll
xor
leave
aam
call
jg
inc
cltd
add
and
into
sahf
in
jae
ret
icebp
popa
test
ljmp
ja
bound
pop
test
pop
insl
lods
add
daa
cmp
call
daa
push
pop
and
fsubl
lods
incl
add
inc
scas
mov
stos
jg
cmp
lea
jmp
mov
or
cmc
sbb
sbb
sbb
sti
pop
or
inc
pop
addr16
fstps
cmp
and
and
mov
fsubr
dec
adc
jg
jl
lcall
movl
int
push
push
adc
rep
jne
adc
orb
movsb
mov
lcall
jle
jl
iret
mov
clc
xor
mov
jmp
jge
js
xor
push
fmul
mov
repz
ficoml
push
jb
xorb
insl
xchg
add
cltd
jns
cmp
imull
fiadds
xor
std
pop
jg
jae
stc
leave
mov
jmp
imul
jae
and
and
xlat
into
imul
push
lea
pusha
lret
dec
add
pop
jecxz
test
lods
mov
mov
mov
sub
and
test
push
out
adc
jle
pop
enter
dec
pop
jp
jg
repnz
inc
rcrl
lods
int
incl
sar
mov
iret
mov
cmp
stos
mov
pop
movsl
inc
sbb
xchg
iret
leave
xchg
std
loope
pushf
lret
hlt
jmp
je
das
or
int
faddl
mov
mov
jp
leave
aas
dec
mov
pop
pop
repz
mov
inc
push
sub
addr16
mov
jg,pt
mov
sub
push
dec
and
mov
test
add
loopne
xor
imul
xchg
imul
mov
jns
add
xchg
xchg
xor
mov
xor
sub
mov
mov
ss
lahf
das
movsl
testb
pop
pop
push
add
inc
dec
aad
cmp
testb
sub
stos
push
push
sbb
add
fisttpll
inc
mov
subb
sbb
mov
mov
subl
insl
nop
pop
in
jnp
lret
jo
mov
mov
ret
push
dec
hlt
xchg
xor
ja
bound
aad
arpl
cltd
repnz
mov
dec
jle
lods
loop
int3
enter
rorl
push
outsl
xor
je
mov
adc
insl
loope
das
out
idivl
fwait
adc
adc
popf
pusha
shrb
jne
cmp
mov
add
pop
fistps
subb
in
pusha
cli
out
xor
icebp
je
imul
and
loope
out
int3
pop
push
lods
or
push
pop
xchg
orl
push
ret
xor
mov
int
sub
push
das
shufps
cli
cmpsb
loope
pop
aaa
pop
test
sbb
push
repz
mov
sub
adc
or
add
add
insl
mov
scas
divl
and
xchg
mov
cmp
pop
shlb
test
cmpl
add
aaa
xchg
lds
adc
test
ret
js
jns
adc
sub
outsl
sub
sub
mov
mov
sub
out
xor
andb
in
jo
or
cmc
and
bts
lret
insl
shrb
iret
ljmp
bound
cmp
outsl
shll
aad
test
jno
lods
or
pop
popa
imul
xor
mov
popf
cmp
pop
push
pop
ja
je
in
bound
sti
fidivrl
xor
push
fisttps
jle
pop
or
xor
and
scas
aaa
repz
notl
inc
repz
es
jge
pop
out
imul
adc
xchg
movsb
fldl2e
jb
clc
mov
cmpsb
call
sub
outsb
xor
jl
in
and
dec
mov
xorl
lea
add
push
cwtl
and
rcll
outsl
mov
inc
jge
xchg
inc
inc
bound
xorb
sbb
mov
mov
inc
sub
pop
add
ljmp
add
movsl
jne
sbb
clc
cld
pop
mov
loope
jg
insl
and
or
pop
xchg
and
jno
mov
or
dec
outsb
adc
push
and
ret
repz
ret
xor
dec
lock
pop
sub
icebp
cmpl
shll
shl
mov
sbb
or
jns
jns
cltd
sbb
adc
adc
adc
push
cmp
test
movsl
xchg
push
jmp
jne
and
lahf
js
test
push
int
push
inc
pushf
cltd
add
nop
cltd
aad
mov
ret
pop
jg
pusha
sub
fnstenv
loope
mov
add
and
les
into
pop
cmc
sbb
inc
popf
pop
sbb
sbb
inc
mov
rcl
mov
sbb
into
pop
sti
cmpsl
mov
push
push
push
daa
lret
or
scas
xchg
xor
fldenv
mov
shr
mov
jmp
or
or
xor
scas
xchg
sbb
sahf
loop
popa
repnz
loopne
push
lcall
push
inc
and
ja
test
insb
lds
sahf
push
dec
or
xchg
dec
rolb
mull
fwait
or
mov
addr16
adc
rolb
xchg
int3
dec
mov
xchg
xchg
sub
testl
lret
in
in
push
add
cmpsb
dec
loope
lret
lret
sbb
repz
aaa
or
add
adc
dec
xor
rcrl
xchg
fmull
or
out
push
inc
repnz
clc
pop
jae
lods
xchg
shlb
mov
iret
mov
arpl
lods
hlt
xor
aad
into
mov
dec
popf
daa
ret
jmp
inc
mov
dec
pop
pusha
add
cmpb
test
sbb
outsl
faddl
std
pop
xor
xchg
insb
and
mov
sahf
pop
aam
lock
inc
pop
stos
cltd
fiadds
jl
dec
inc
popf
push
repnz
pusha
xlat
add
jae
insb
enter
mov
jge
xor
jbe
scas
xchg
jp
in
cwtl
outsb
pop
mov
fiadds
mov
pop
icebp
repnz
push
frstor
dec
lods
jne
inc
js
test
pop
sahf
cld
in
enter
cmp
aam
push
push
inc
shr
push
pop
inc
lock
push
popf
push
popf
xchg
add
into
jne
mov
callw
rolb
lea
daa
mov
mov
push
movsl
jg
loop
jb
shll
add
sti
imul
push
sbb
fstpt
scas
test
fs
push
lea
add
dec
shrb
push
xor
mov
repz
daa
push
aaa
lds
aam
add
in
mov
jecxz
and
clc
repz
loope
sbb
cwtl
jae
jle
pop
jns
lds
mov
jbe
adc
pop
out
sub
adc
das
xchg
stos
jmp
adc
adc
jp
mov
cmp
add
pushf
aaa
xchg
pop
mov
ret
aas
shlb
xchg
sahf
repz
or
mov
push
pop
fadd
adc
xor
pop
cmc
mov
repnz
mov
xlat
inc
push
int
pusha
and
and
cmpsb
inc
mov
sbb
sub
mov
roll
imul
jnp
and
adc
out
jb
or
dec
repnz
decl
test
mov
fsubr
push
pusha
dec
mov
or
push
scas
add
adc
sbb
sti
push
pusha
jle
jle
and
pop
das
sbb
andl
outsb
fiadds
xor
xchg
xor
push
aas
adc
loope
stos
insb
push
jl
mov
mov
lret
sub
xor
fwait
adc
jmp
out
daa
mov
pop
fucomi
std
push
lahf
sti
jo
imul
dec
clc
in
in
jae
pop
int3
push
mov
and
cmp
aas
dec
xchg
bound
jns
pop
mov
xor
in
out
decb
ficomps
add
les
mov
xor
jb
jmp
push
lea
jg
js
lea
jno
pop
out
sub
addb
sub
pop
mov
xchg
pusha
pusha
pop
insb
dec
test
xlat
in
xchg
stos
mov
movsl
cmc
dec
test
in
aaa
push
loop
mull
pusha
sbb
cltd
scas
test
xlat
add
fdivp
lret
pop
cld
xchg
fcomps
mov
push
fcmovnu
in
pop
daa
inc
lods
sbb
mov
and
out
test
xor
push
sbb
mov
pop
xor
jo
cmp
inc
pusha
lods
fs
nop
add
ljmp
dec
insl
loope
repnz
pop
and
pusha
lock
inc
aas
pop
pop
jmp
mov
mov
fldl
add
inc
inc
or
xchg
mov
xchg
add
sbb
add
cmp
scas
xchg
xchg
jo
cmpsb
dec
lods
sub
add
push
xchg
push
mov
push
sbbb
cmp
lahf
cmpsb
lret
cmp
jbe
and
inc
insb
dec
cwtl
notb
pushf
adc
sbb
mov
mov
in
lds
dec
mov
sbb
push
movl
pop
mov
or
mov
out
pusha
cmp
mov
push
icebp
push
ret
jno
xchg
xor
push
daa
mov
xor
xor
ja
bound
std
mov
mov
pop
inc
sahf
mov
sbb
sbb
mulb
aad
dec
xchg
push
dec
xor
ret
movsb
xchg
sahf
test
loop
pusha
fisubrs
jmp
sahf
jge
sbbl
ret
or
cmpb
sub
mov
rorl
cvtps2pd
int3
and
out
mov
ds
sbb
loopne
std
into
push
aam
add
jae
mov
rorb
mov
or
cld
lds
stc
dec
or
inc
icebp
js
std
dec
ret
pop
cwtl
push
mov
imul
pop
loope
xchg
xchg
ret
mov
mov
call
xor
lcall
jl
rcrl
mov
lret
test
cmp
fwait
sub
jle
lahf
ljmp
mov
test
pushf
push
mov
aas
inc
out
push
push
jle
add
jne
jmp
js
adc
cmp
call
inc
pop
adc
pop
lds
fwait
dec
cmp
dec
push
xchg
mov
cmpb
and
or
clc
shll
xchg
mov
enter
adc
test
cwtl
jbe
or
mov
add
jo
sbb
int3
and
adc
popf
xor
ret
pushf
jns
inc
ficompl
or
daa
aas
sbb
shr
xor
imul
movb
or
or
fmuls
jmp
and
xchg
jge
sub
pop
mov
rolb
sub
int
mov
xchg
xor
push
lea
sbb
jb
sbb
cltd
cli
xchg
cltd
xchg
or
iret
mov
aas
push
cwtl
xchg
lret
sbb
or
sbb
mov
add
jns
into
dec
pushf
or
pop
lods
xchg
pop
jg
gs
xchg
jno
cmp
dec
pop
mov
cmp
dec
clc
movsl
add
in
sbb
push
out
adc
and
pop
sub
xor
mov
add
enter
mov
ljmp
ret
loope
mov
fcompl
sahf
sti
jnp
loop
mov
mov
mov
jne
push
leave
jnp
pop
mov
jns
xchg
sbb
mov
out
out
dec
fstpt
or
lods
pop
xor
outsb
ret
cmpsb
inc
fwait
ljmp
add
inc
aam
rorl
aad
sbbb
mov
sub
mov
sbb
lock
or
push
repnz
xor
repnz
pop
bound
fwait
test
and
dec
es
lock
or
cmc
sbb
decl
int
sub
lcall
jo
lret
test
out
add
jns
adc
aam
jne
and
aaa
das
mov
sarl
add
imul
dec
fistl
imul
inc
inc
mov
dec
mov
lcall
xchg
aad
inc
in
sub
jnp
out
mov
pop
jns
push
push
xor
fmuls
fnsave
mov
add
mov
or
xchg
xchg
fcomi
push
jmp
test
in
ffreep
mov
xchg
dec
jae
jb
and
push
sub
sti
jns
and
in
out
mov
movsl
mov
in
roll
int3
cmp
mov
movsb
insl
mov
lods
mov
jl
lock
icebp
jl
nop
fmull
inc
mov
jp
xorb
cmp
jle
sub
es
mov
sbb
iret
ret
rolb
fadd
push
jne
adc
or
bound
aad
ret
shll
pop
pushf
jle
pushf
fst
adc
and
movsl
cmp
fs
xor
mov
push
mov
arpl
rorl
xchg
mov
xor
int3
in
jbe
jno
cs
stos
xchg
ss
xchg
cmp
add
inc
jne
dec
add
cld
mov
cltd
xchg
sbb
stc
cltd
hlt
adc
adc
aam
into
aad
xchg
mov
in
es
movsl
or
notl
fcmovu
aaa
leave
inc
and
dec
mov
mov
int3
cmp
dec
arpl
mov
push
aam
dec
aaa
cld
lock
add
cld
mov
and
mov
movsb
dec
jno
loop
xchg
cmp
addb
cltd
inc
imul
andl
and
shrb
push
cmp
jbe
dec
test
into
fwait
les
rcrb
mov
or
insb
xor
cmp
add
out
xchg
divl
mov
js
and
add
inc
adc
or
ficoml
in
rolb
sbb
aaa
push
lods
notb
repz
ds
notl
mov
add
imul
int
jae
orb
iret
sub
cmp
cltd
aas
mov
ja
mov
cli
loopne
outsb
push
jmp
cmp
xchg
shr
rcrb
mov
loop
xchg
jg
test
negb
dec
cld
sahf
and
test
fcomps
push
mov
loop
in
clc
cld
mov
inc
or
nop
push
add
inc
sbb
into
and
arpl
in
test
or
movsl
shlb
mov
iret
push
loope
xor
lock
dec
dec
sub
lds
xchg
add
das
cmp
mov
mov
sbb
scas
cltd
arpl
add
lods
dec
lods
xchg
fimull
xor
jno
bound
pop
mov
pop
xchg
mov
stos
idiv
fld
aaa
adc
ljmp
jns
or
lea
xchg
mov
notb
push
sbb
testl
cmpb
sahf
scas
dec
movsl
insb
jp
dec
mov
mov
int3
or
sub
mov
test
push
mov
pop
dec
in
aam
insb
shl
outsl
lods
mov
mov
pop
xor
dec
jae
cmp
xchg
dec
aaa
sar
adc
stc
loopne
mov
cwtl
popf
fs
fstl
push
jns
scas
sbb
jne
jno
loop
imul
pop
jmp
andb
imul
ret
mov
xlat
add
dec
imull
ljmp
sub
adc
mov
test
sti
lods
jl
and
xchg
and
jne
adc
fsubr
shr
sub
popf
adc
sub
fdivrs
dec
add
outsb
adc
pop
lahf
bound
rolb
pop
xchg
push
xchg
aad
adc
fsts
mov
or
sub
shrb
mov
pop
insl
in
mov
inc
mov
dec
popa
test
jl
ret
orl
xor
and
adc
cmp
rorl
cwtl
fwait
mov
rorb
arpl
sub
testl
pusha
ret
adc
and
out
sub
inc
ret
pusha
dec
paddsb
xchg
outsb
xor
or
leave
movsb
mov
pop
les
hlt
adc
add
dec
lret
ret
or
or
aas
dec
mov
mov
stc
pop
jg
sub
cmp
or
sbb
lds
pusha
jecxz
or
mov
push
dec
lcall
subl
cmpb
push
dec
pop
inc
sub
out
mov
push
pop
pop
mov
or
movsl
sbb
into
dec
xchg
mov
pop
or
add
inc
jle
rol
add
jecxz
adc
mov
enter
fldenv
loop
clc
push
mov
aas
xchg
sub
std
loope
or
mov
loope
add
fcompl
and
push
fldenv
dec
fdivrp
adc
mov
xchg
xchg
push
movsl
in
push
add
adc
dec
sar
mov
xchg
jne
sarb
rcrb
pushw
mov
mov
sbb
sbb
jp
sbb
out
mov
xlat
es
xor
fst
jae
sub
addr16
or
xor
inc
sub
inc
rorl
mov
dec
pop
fimull
icebp
cmpsl
pop
jae
adc
nop
test
daa
rol
dec
cmp
adc
xor
xor
int
int3
adc
subl
movsb
popa
or
ds
sbb
gs
push
push
mov
cld
jno
xchg
fcoml
cmp
or
repnz
xlat
in
data16
sub
mov
fcoml
xchg
pop
das
jae
dec
std
mov
sti
jg
test
repnz
adcl
aaa
addl
xlat
lock
stc
inc
lahf
cmp
movsb
sub
fldt
mov
loop
fsubl
pop
sub
inc
and
sbb
lcall
xchg
add
jne
fnstcw
dec
lcall
call
imul
daa
jb
ljmp
pop
clc
outsl
lcall
mov
outsl
and
lock
in
js
icebp
mov
and
icebp
insb
sbb
pop
fnstcw
mov
mov
jp
cmp
cmp
dec
idivl
imul
push
shrb
in
and
aas
aaa
and
stos
scas
subl
cmc
scas
xchg
filds
xor
inc
jbe
lock
gs
pop
xor
pop
mov
xchg
jl
repz
in
std
xchg
dec
sub
or
inc
incb
inc
jo
jne
mov
lock
jnp
pop
ljmp
cmc
mov
or
movsb
mov
dec
xchg
out
xor
xchg
xchg
in
pushf
push
aam
repz
mov
fidivl
arpl
data16
dec
stos
dec
les
pusha
add
aaa
sbb
fs
test
and
je
jge
ds
shlb
mov
xchg
mov
push
add
pusha
xchg
inc
xor
add
add
push
mov
pop
sbb
rcrb
icebp
popf
in
lods
out
addr16
inc
sub
pop
sub
ja
pushf
or
push
add
cwtl
adc
lahf
int
xor
mov
mov
rcl
mov
pop
mov
leave
pusha
out
mov
aam
cld
and
ljmp
cli
fnstenv
outsl
daa
sahf
add
lret
inc
enter
out
test
push
dec
mov
hlt
repz
pop
stos
sti
sub
jb
push
pop
jl
xor
cmp
lret
xor
ds
sar
hlt
cld
fsub
dec
dec
add
sbb
xchg
out
dec
jnp
fwait
aam
popf
sbb
mov
push
xor
inc
popa
in
mov
add
or
mov
push
xor
inc
test
loopne
in
mov
orl
mov
or
xor
jnp
out
out
sub
cwtl
pop
mov
subl
xor
shll
pop
mov
insb
push
loope
cmpsl
mov
sbb
pop
sub
mov
je
fwait
orb
into
fcmovbe
addb
pop
int
inc
or
sbb
or
clc
scas
lock
adc
add
mov
mov
popa
push
sbbl
es
push
call
mov
data16
popl
jb
out
sbb
cld
xchg
shl
stc
xchg
jp
push
fidivrs
xor
call
test
dec
cmp
jae
push
push
jecxz
xchg
std
hlt
xor
push
inc
xorl
in
ror
push
inc
cld
sbb
lods
ret
or
lods
mov
cmpb
fcompl
and
seto
dec
lret
jno
xor
cmpsb
add
xchg
dec
and
mov
sti
and
in
push
xchg
aad
out
dec
pop
out
sub
rorl
inc
jo
mov
insl
cmp
sti
jle
cwtl
mov
jo
pop
push
mov
dec
and
dec
jg
lret
cmp
sti
lcall
mov
jb
sub
test
jno
push
jo
pushf
inc
mov
outsb
jae
adc
loop
sub
pop
jge
data16
ret
fsubs
adc
add
add
jnp
test
or
addb
mov
cmp
or
mov
add
jnp
push
inc
add
push
mov
jecxz
and
mov
rcr
cmpsl
and
jg
call
cmp
mov
push
mov
sbbb
loop
xchg
push
pop
mov
jbe
insb
jae
jmp
fs
cmp
les
xchg
movsb
pop
pop
scas
pop
out
mov
inc
ljmp
dec
outsl
mov
fstl
adc
mov
mov
xor
jp
bound
std
fdiv
data16
int3
fildll
sub
push
in
icebp
push
inc
xorb
dec
jo
xor
arpl
les
or
insb
jmp
jnp
xchg
mov
fmuls
imul
sahf
in
sub
outsb
jae
fldl
jmp
push
shr
and
test
les
or
insb
jmp
jnp
xchg
mov
fmuls
imul
sahf
in
sub
outsb
jae
fldl
jmp
push
shr
and
test
les
or
insb
jmp
jnp
xchg
mov
fmuls
imul
sahf
in
sub
outsb
jae
fldl
jmp
push
shr
and
test
les
or
insb
jmp
jnp
xchg
mov
fmuls
imul
sahf
in
sub
outsb
jae
fldl
jmp
push
shr
and
test
les
or
insb
jmp
jnp
xchg
mov
fmuls
imul
sahf
in
sub
outsb
js
int
and
repz
dec
push
rcrb
icebp
lock
cs
outsl
cwtl
mov
mov
test
les
or
insb
jmp
jnp
xchg
mov
fmuls
imul
sahf
in
sub
outsb
jae
fldl
jmp
push
shr
and
test
les
or
insb
jmp
jnp
xchg
mov
fmuls
imul
sahf
in
sub
outsb
jae
fldl
jmp
push
shr
and
test
les
or
insb
jmp
jnp
xchg
mov
fmuls
imul
sahf
in
sub
outsb
jae
fldl
jmp
push
shr
and
test
les
or
insb
jmp
jnp
xchg
mov
fmuls
imul
sahf
in
sub
outsb
jae
fldl
jmp
push
shr
and
test
les
or
insb
jmp
jnp
xchg
mov
inc
lods
fbld
gs
test
sub
mov
clc
incl
in
mov
bnd
xchg
test
movsb
or
add
sti
jge
iret
push
imul
xchg
mov
jo
pop
or
stos
rol
pop
shl
or
sbb
and
insb
ret
mov
push
adc
and
idivb
ljmp
mov
adc
out
jo
shrl
and
pop
mov
mov
or
idiv
mov
mov
popa
xor
movsl
bound
cmp
mov
testl
and
jo
mov
push
sbb
out
sub
imul
cwtl
in
fimuls
clc
xchg
mov
sbb
pusha
mov
cmp
faddl
cltd
test
inc
pop
xor
inc
les
push
cmp
cli
loope
adc
pop
xor
lods
mov
mov
xor
sbb
or
xlat
scas
mov
repz
pop
lret
call
lahf
xor
imul
xchg
cltd
sub
in
sub
lret
cmpsb
in
imul
mov
insb
das
cmp
fnsave
in
cs
sbb
fbld
pop
push
test
les
mov
into
outsl
bound
adc
push
jmp
dec
add
add
leave
cli
daa
mov
bound
sbb
inc
xchg
jo
bound
jno
fwait
bound
jbe
jno
inc
xchg
icebp
aad
scas
inc
fiaddl
bts
sbb
jns
repnz
sub
ret
sub
push
outsb
aad
sub
mov
pop
sti
inc
fwait
cli
cmp
mov
leave
pop
push
rcl
xchg
pop
pushf
sbb
imul
add
mov
fisttpll
xchg
in
and
xor
mov
ss
fisttpl
dec
jp
push
sub
outsb
dec
mov
pop
adc
aam
in
mov
test
aad
push
mov
pop
cs
xor
or
adc
in
int3
sbb
add
sbb
push
adc
addr16
mov
inc
jbe
push
es
dec
and
lock
inc
repz
sub
pop
xchg
nop
cmpsl
cmc
and
gs
push
shl
dec
mov
mov
scas
aam
inc
mov
call
mov
and
pop
fadds
cmp
push
mov
mov
dec
arpl
inc
aaa
push
pop
outsl
cli
push
iret
flds
jnp
or
adc
cwtl
or
sbb
mov
sbb
or
fwait
rorl
mov
insl
adc
push
push
cmp
and
add
add
int3
sbb
add
push
and
mov
push
rcr
lcall
dec
je
rclb
or
in
fcompl
xchg
cmpsl
lods
and
test
jbe
hlt
ljmp
cmc
push
addr16
dec
pop
cmp
sbb
sub
add
sbbb
mov
xchg
mov
add
mov
stos
sub
test
add
test
mov
mov
xor
loope
cmpb
repz
insl
stc
pop
sub
dec
inc
iret
mov
ficompl
lods
iret
pop
mov
lea
cmp
or
push
imul
xchg
cmpsl
push
or
aaa
cwtl
mov
jge
add
insl
sahf
pushl
es
push
xchg
stos
in
outsb
sub
pop
adc
mov
mov
xor
aad
xor
cmp
movl
ss
fisubl
in
inc
mov
fnstcw
ret
or
sbb
loope
popa
std
and
rorl
test
mov
push
jecxz
jmp
outsb
stos
daa
dec
icebp
sub
daa
test
in
dec
xchg
shlb
ret
jb
xor
repz
pop
xchg
mov
mov
xchg
and
push
cmp
push
add
cld
aas
mov
cmp
xchg
addr16
movl
push
xor
dec
sub
xchg
out
bound
pop
push
mov
mov
arpl
bound
negb
ret
mov
mov
cmpsb
jecxz,pn
sub
xor
dec
xchg
push
repz
jne
adc
scas
dec
test
fsubr
xor
add
outsl
sbb
sbb
aaa
in
stos
sub
je
addr16
add
sarb
push
push
mov
mov
in
insb
sti
push
pop
icebp
outsb
popf
sub
xor
in
mov
or
cmpsb
sarl
jle
jmp
mov
cmp
xor
add
cmp
scas
sub
into
mov
mov
out
dec
fwait
icebp
cmp
aam
fnstcw
dec
cmp
and
aaa
mov
pop
loop
int3
fwait
mov
pushf
cmp
push
mov
sub
mov
push
mov
insb
jmp
xor
pop
sbbl
push
push
cmp
dec
cmp
lret
push
lahf
mov
int3
dec
mov
dec
lcall
sub
inc
sbb
inc
xchg
sbb
mov
xor
outsl
mov
hlt
out
pop
mov
ret
addr16
push
sub
sub
test
aas
aas
daa
inc
out
dec
loopne
mov
xchg
cmp
aad
fldcw
or
inc
mov
mov
dec
dec
xlat
aas
push
in
aam
cmpsb
shlb
pop
cmp
les
xchg
jns
sub
test
mov
outsb
cwtl
push
arpl
ja
fidivrl
sub
sbb
stos
fmul
or
sbb
sub
test
scas
sbb
insl
ja
arpl
mov
imul
mov
xchg
insl
or
stos
stos
pushf
add
clc
adc
lret
lea
repz
jle
fwait
dec
adc
inc
cmp
jne
inc
or
adc
xor
jo
ljmp
push
mov
shr
es
xchg
leave
inc
js
aaa
push
xor
fcoms
jg
clc
inc
sbbl
jg
fisubrl
mov
sub
data16
sub
cwtl
xchg
fwait
jmp
fcomi
lret
xchg
mov
sub
push
fwait
dec
iret
mov
push
rep
mov
pop
sbb
xchg
xchg
jbe,pn
pop
dec
test
test
mov
pop
sbb
addb
jmp
sbb
pop
ja,pt
cmpsl
cld
addr16
mov
add
pop
loop
jg
imul
lcall
jmp
hlt
popa
or
add
mov
loope
clc
andl
adc
xor
dec
insl
shll
xor
jmp
push
inc
or
in
pop
push
and
pop
mov
sbb
fsub
pushf
xchg
dec
inc
mov
lar
xor
sbb
or
movsb
and
add
std
addr16
pusha
fldt
cmp
jp
jmp
xchg
cmp
stc
mov
dec
fistpll
add
or
add
xor
jg
jmp
push
pop
cs
push
sbb
jne
ljmp
loop
addr16
addl
int3
pminub
mov
test
jp
inc
stos
or
repnz
pop
daa
dec
add
js
fwait
lods
daa
test
add
aaa
cld
subb
cmp
sub
jne
inc
or
inc
mov
add
in
dec
pop
mov
cmp
pop
in
dec
adc
dec
stos
jbe
das
outsb
test
daa
mov
jp
out
mov
aam
int
test
mov
push
in
mov
lret
jo
pushl
mov
inc
inc
and
imul
lods
jecxz
jb
fwait
push
jmp
rcll
loope
xor
fidivs
xchg
fisubl
xor
movsb
in
mov
aas
test
adc
jb
push
xor
call
je
cmp
mov
sbb
push
xor
adcb
sbb
push
cli
jns
xor
dec
mov
xchg
push
add
xchg
mov
pop
xor
shll
and
mov
pop
repz
xchg
xor
dec
aad
sti
leave
cmpsl
cld
or
lea
xchg
stos
dec
dec
iret
and
push
stos
and
leave
push
xorb
push
in
jle
packsswb
and
pop
outsb
nop
icebp
dec
movsl
push
inc
test
adc
xchg
int
jno
push
aad
or
cwtl
or
and
lret
cmovns
fwait
pop
ds
mov
add
push
imulb
int3
das
pop
dec
std
mov
adc
scas
popf
push
adc
add
mov
jnp
lea
add
sbb
inc
cmpsl
pop
jnp
data16
mov
mov
and
or
clc
decb
xor
test
mov
mov
jns
call
lods
xchg
mov
gs
xchg
into
or
lock
cmp
xor
arpl
jge
pop
subl
xor
loop
lods
flds
sti
push
and
aaa
mov
int3
ss
popa
arpl
sub
jnp
push
into
push
addr16
pop
xchg
lds
out
pop
xor
mov
jne
sbb
xchg
cmc
ss
xchg
ret
push
pop
pop
cmp
int
mov
and
cld
ret
inc
test
pop
xchg
and
arpl
and
pop
push
dec
fdivs
dec
out
leave
inc
add
push
mov
dec
clc
loop
xchg
shlb
and
pop
sbb
cmpsb
push
xchg
mov
mov
and
xor
leave
lahf
jno
rorb
push
xchg
movl
movsl
js
pop
sbb
xor
mov
inc
cmp
stos
jecxz
arpl
mull
cli
sbb
adc
repnz
or
xchg
aaa
xchg
call
jnp
repz
cmp
lds
in
outsl
adc
ret
inc
out
iret
or
jl
scas
ret
dec
push
dec
xchg
or
or
orb
sub
enter
sbb
push
mov
in
cmc
ds
mov
jns
sub
pop
push
xorl
cmp
push
cmp
xchg
je
or
push
mov
scas
aaa
lret
ds
fbld
out
xchg
lds
rcrl
pop
bound
jmp
mov
ret
dec
or
or
int
pop
inc
nop
movsb
jmp
cmpb
and
sbb
and
fstpt
adc
dec
roll
call
jne
dec
leave
xor
sub
fdivl
xlat
scas
sarl
jl
sbbb
inc
imull
int3
repz
jns
shr
into
push
jmp
sarl
inc
loop
cmp
pop
add
mov
pop
add
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
data16
psubsw
out
repz
sub
jecxz
xor
out
sarb
jne
ljmp
lods
fcompl
cltd
cmp
add
add
dec
inc
fsub
sub
mov
add
pushf
pop
add
jmp
call
stos
into
add
pop
jl
add
dec
lsl
mov
pop
mov
mov
push
lds
mov
or
push
inc
inc
sbb
adc
cmp
and
hlt
lret
fs
loopne
rcr
test
sub
mov
cltd
mov
xor
jns
jno
adc
add
jb
fnsave
sub
jo
sub
pop
sahf
in
jb
leave
js
stc
sub
push
jl
adc
sbb
fldl
mov
pop
pop
in
mov
sbbl
and
lret
dec
dec
stos
mov
mov
pop
inc
mov
dec
hlt
mov
lret
mov
pop
pop
sti
mov
aas
clc
mov
test
fcoms
push
push
sub
rclb
mov
in
shrb
shrl
fwait
and
sub
int3
aad
mov
or
stos
dec
insb
or
jge
xchg
mov
jl
dec
testb
rolb
xchg
jl
pop
inc
fmull
movsb
repz
gs
xchg
fbld
je
leave
and
ret
mov
pop
cmp
cmc
lods
mov
jg
mov
sub
push
jne
jae
fistpl
mov
inc
adc
xor
adc
dec
xor
pop
cmp
xchg
inc
dec
adc
sub
push
xchg
mov
inc
sbb
rorl
popf
popa
dec
jge
pop
adc
pop
mov
insb
pop
push
fists
mov
imul
sub
xchg
sbb
xchg
aaa
sahf
loope
bound
pushf
aad
mov
and
adc
lods
pushf
jecxz
loopne
hlt
jae
testl
fisubs
cs
aad
divl
xchg
leave
push
ret
mov
in
mov
mov
fadds
shrl
arpl
jp
je
stc
xchg
mov
jbe
scas
fistps
hlt
or
lcall
daa
xchg
out
scas
add
loope
clc
mov
int
jae
gs
pop
lret
xor
cmp
sub
cltd
jecxz
or
sub
sarl
xchg
mov
insl
stos
mov
jo
ja
lahf
mov
xor
insb
stc
adc
cltd
cmpb
push
inc
rclb
cmp
sbb
xor
push
enter
dec
out
call
cmp
lret
or
push
mov
add
mov
push
lret
sub
lahf
daa
xchg
bound
sbbb
cmc
pop
clc
inc
lcall
fidivl
mov
test
jnp
jnp
filds
imul
arpl
cmp
add
nop
stc
sti
jbe
xor
rol
mov
fld
aas
dec
dec
in
int3
popa
mov
outsl
movl
out
cs
pop
jle
cltd
sarl
inc
mov
and
sub
mov
dec
call
in
fldln2
xor
divl
sub
jns
ret
stos
cld
fwait
mov
add
pop
aam
sub
jbe
fldcw
xlat
sub
sub
mov
cmp
mov
add
nop
scas
in
sahf
dec
sbb
jp
cmpsb
cmp
fsub
call
rorl
mov
inc
jmp
pop
int
or
push
xor
cmp
stos
out
and
sbb
dec
push
in
push
push
out
fwait
adc
sar
dec
out
xchg
int3
arpl
jg
or
daa
loope
adc
dec
outsl
pusha
adc
fistpll
das
mov
adc
jae
das
ljmp
inc
into
push
xor
dec
les
xor
xchg
lods
mov
mov
jmp
add
jecxz
cmp
outsb
jns
push
clc
enter
icebp
inc
jg
mov
cltd
aad
cld
addr16
sbb
cmpsl
fiaddl
cmp
push
incb
mov
cmp
push
fwait
adc
lock
lahf
cmp
lcall
inc
sbb
dec
cmpsl
aad
dec
fisttpll
xor
test
jg,pt
stc
pop
or
and
test
dec
out
mulb
fnstenv
gs
mov
xchg
ja
jp
xor
ret
sub
gs
enter
pop
inc
jbe
rclb
jmp
fsubrs
mov
jb
adc
add
lret
add
mov
mov
arpl
xchg
inc
lock
mov
ljmp
add
mov
and
mov
pop
and
cmp
or
mov
mov
xchg
push
cmpl
rorl
sub
fidivrs
rcl
push
loopne
aam
mov
mov
xor
dec
movsb
andl
inc
adc
mov
lret
fdiv
pop
cld
or
and
pop
popf
inc
xchg
xchg
cwtl
jne
mov
sbb
jnp
imul
add
push
lcall
or
or
sub
lcall
lea
rol
mov
xchg
sub
nop
leave
cmpl
fsts
xchg
jg
mov
movsl
js
les
divl
ret
sbb
mov
push
lods
adc
test
xchg
in
sbb
fucomip
and
and
orl
scas
fs
pushf
bound
popf
ficoml
daa
xchg
sbb
fdivrl
lods
and
iret
push
xlat
lret
jp
mov
mov
ss
sbb
jmp
std
lret
push
ret
cs
in
inc
fcmovu
movsb
loop
pop
out
aam
pop
xor
sti
dec
mov
rcr
sbb
mov
int3
pop
xchg
pop
stos
dec
imul
fwait
mov
fcmovb
pop
mov
push
add
das
push
loope
cmpsb
xor
adc
subl
pop
dec
push
pop
mov
cmpsb
cs
dec
and
cmp
dec
rorl
cmc
cmp
enter
dec
aas
xor
jmp
scas
je
mov
mov
imul
jno
test
mov
lea
sti
repnz
push
aam
aas
xor
ret
ror
out
xor
sub
out
dec
ds
adc
add
pop
and
shl
shll
dec
jge
pop
adc
xchg
push
test
lods
mov
pop
lret
cmp
pop
scas
add
xor
or
pop
scas
out
in
out
push
in
fistps
testl
das
sub
add
xchg
loop
inc
cmp
testl
cmp
test
imul
mov
mov
push
pop
mov
mov
pop
lahf
shr
cmovo
test
mov
or
and
lahf
push
inc
repz
dec
xchg
mov
popa
lcall
and
ror
cmp
aaa
push
mov
and
sbb
cli
lods
xchg
push
cmp
xor
mov
mov
mov
test
or
and
lods
push
and
fbstp
imul
iret
adc
jne
cmpsl
xchg
inc
cmc
push
pusha
add
shll
inc
jecxz
adc
test
shrl
sub
cmpsb
jmp
mov
jno
jle
xor
mov
aas
fnstenv
neg
pop
lret
ficompl
push
xchg
pop
test
mov
or
sub
pop
fiadds
clc
dec
test
test
fldcw
ret
push
pop
lea
shlb
int3
popf
ret
push
jns,pn
ss
adc
add
insb
iret
pop
jns
test
push
out
cmp
test
mov
stos
ficoms
loope
pop
insb
aad
bnd
loopne
inc
pop
out
adc
loope
out
lock
xor
mov
adc
mov
mov
cmpsl
jnp
and
cltd
jno
cs
sti
stos
xchg
add
mov
mov
cmp
push
stc
sahf
mov
and
push
push
mov
inc
sub
jae
fimuls
mov
jge
jno
mov
cmp
inc
mov
jns
add
loope
mov
inc
pushf
popf
pusha
in
pop
xor
inc
ja
int
jae
jno
daa
jl
test
inc
dec
sub
setbe
mov
push
xchg
jbe
test
mov
pop
pop
out
push
sub
loope
or
out
mov
hlt
orl
and
stos
and
aas
dec
out
pusha
loop
inc
aad
in
xor
shrl
inc
xchg
insl
adc
pop
daa
mov
push
mov
in
nop
mov
insb
scas
movsl
sbb
dec
mov
mov
adc
aas
stc
inc
out
mov
test
xchg
js
cli
pushf
aam
xor
or
enter
lahf
fbstp
pop
sub
js
mov
push
and
mov
inc
lret
cmpsl
push
adc
outsl
pop
rcrl
xchg
sti
ss
dec
inc
ret
or
sub
leave
in
dec
lock
dec
inc
scas
inc
idivb
sahf
dec
test
cmc
dec
icebp
negb
sbb
addr16
add
cmpsl
aam
test
pop
shrb
and
dec
subb
shll
add
ret
mov
or
scas
cmp
fcompp
dec
or
std
push
cwtl
loopne
adc
xchg
call
push
sbb
call
shrl
adc
jge
cld
ret
xchg
dec
xlat
sub
mov
rcrl
rclb
and
push
and
popf
mov
lcall
push
test
xchg
mov
and
repnz
xchg
ret
cmpsl
or
orb
jno
or
pusha
ss
div
movsb
add
sti
mov
add
dec
jae
test
loopne
push
mov
mov
mov
mov
mov
fstps
xor
sbb
pop
nop
adc
or
imul
xchg
imul
sbbl
mov
push
jno
inc
aam
out
jecxz
push
scas
cmpl
sbb
mov
jl
cmc
aad
out
sub
in
test
and
cmp
xor
insb
int
pushl
mov
push
mov
das
out
jmp
xchg
jne
push
lods
repz
cli
loop
lock
add
xchg
pop
rcrl
cmp
xor
subl
jecxz
mov
subl
stos
and
jp
mov
jae
jbe
aas
rol
es
outsb
jecxz
sbb
dec
sbb
mov
nop
sub
int
inc
mul
test
dec
lret
cmpsl
or
sahf
rcll
jg
dec
and
andb
mov
cld
addr16
xchg
push
sbb
fs
js
sub
inc
bound
inc
popa
std
jnp
ss
mov
inc
mov
mov
imul
pusha
fldcw
fisubs
or
mov
testl
mov
dec
sarb
icebp
or
loope
rorl
cmp
test
cmpsl
aaa
mov
aad
enter
or
jbe
fcmovnbe
mov
movsl
cmp
repnz
dec
pushf
cld
loope
nop
push
mov
add
shl
out
imul
adc
mov
lahf
leave
popl
negb
sub
jp
pop
inc
push
int
fwait
xor
pop
xchg
in
pop
ljmp
scas
jmp
test
xchg
sbb
hlt
jl
pop
lcall
lods
popa
add
nop
inc
js
es
push
dec
aaa
mov
adc
or
xlat
xchg
xor
shl
addb
scas
pop
outsl
decl
jns
add
pop
push
adcl
int
xor
push
into
jge
jle
sbb
xchg
inc
push
gs
lea
xor
popf
mov
sbb
jge
mov
fdivrl
sbb
jbe
in
mov
aam
aad
pop
pop
stc
nop
adc
gs
cmp
adc
pushf
test
xchg
inc
sub
data16
push
mov
outsb
loopne
leave
lret
mov
pop
sbb
in
jg
das
fisttps
outsb
hlt
add
ret
pop
xor
sub
dec
add
jmp
call
ficoml
cmp
jo
pusha
mov
jge
push
js
fld
add
sub
xchg
cltd
push
xchg
data16
xchg
arpl
fists
pop
jle
jb
rclb
pop
imul
out
mov
mov
rcr
jnp
imul
fdivrl
inc
push
mov
xchg
dec
loopne
sbb
add
shll
dec
ret
test
and
loopne
es
jg
xchg
fs
mov
add
and
pop
xchg
pop
ret
cmp
mov
lock
notb
jb
sub
stc
push
aaa
bound
push
lcall
and
or
insb
ss
inc
add
popf
stos
cmpps
or
pop
clc
test
or
dec
pop
ja
aas
divb
call
dec
mov
sbbb
and
or
xchg
lret
sub
pushf
pop
cmp
or
fmuls
loope
sti
mov
out
cmp
mov
and
jl
mov
xor
add
mov
inc
xchg
stos
aam
fcmovb
test
leave
test
xlat
mov
and
push
mov
sbb
mov
xchg
cmp
insb
test
pop
jnp
inc
mov
add
push
jmp
adc
mov
mulb
xor
pop
je
out
mov
pop
popa
and
rclb
lods
pusha
fcoms
xor
hlt
jl
jne
rorl
push
or
insb
add
lea
scas
mov
cli
push
xchg
pop
sub
leave
mov
jae
sub
jne
cmp
sti
int
cwtl
xor
fnsave
mov
mov
and
jl
data16
xor
stos
and
ficompl
and
fsts
movb
fimull
xchg
pop
pushl
xor
mov
lret
jge
sbb
in
inc
outsb
stos
je
sbb
ret
lock
jae
subb
popf
daa
cwtl
pushf
lds
cmp
pop
push
or
jae
fsubrl
cmp
mov
and
and
addr16
aaa
int
dec
lret
push
adc
mov
add
into
test
mov
cli
xchg
sahf
loopne
push
dec
adc
or
pop
rorl
test
jb
enter
xchg
mov
and
lahf
mov
cmp
mov
and
ds
ja
push
mov
out
dec
mov
adc
insb
xlat
adc
out
imul
or
nop
outsb
call
repnz
rcrl
push
xor
outsb
inc
cli
push
lahf
into
fcompl
imull
jns
pop
sub
mov
dec
scas
or
out
in
pop
loope
add
in
inc
divb
jne
dec
scas
cmp
hlt
add
sar
jnp
dec
sbb
mov
push
orb
decl
fst
push
loope
sbb
test
mov
sbb
in
dec
in
pop
sub
mov
adc
out
jmp
or
dec
mov
mov
inc
xorb
scas
in
cmp
or
add
or
and
enter
xlat
mov
and
and
jb
dec
movl
scas
cmp
xchg
push
in
cli
lods
sbb
mov
mov
fcmovnb
mov
cmpb
mov
jo
stos
sbb
pop
pop
cmovae
aam
pop
adc
cmp
push
dec
arpl
mov
mov
sti
es
sti
loope
out
xchg
int3
sub
xchg
fbstp
aas
add
fidivs
popa
jns
cmpxchg
sbb
test
and
dec
les
add
push
jb
jne
shrl
stc
or
dec
dec
cmp
aas
pop
nop
add
xor
out
je
jbe
mov
dec
sbb
push
dec
pop
jb
out
sub
mov
xchg
adc
xchg
xorb
or
push
ja,pn
stos
mov
arpl
std
cmpsl
testl
insl
dec
and
das
jno
bound
nopl
mov
xchg
or
mov
mov
cmpb
push
or
mov
nop
and
jnp
mov
repz
inc
jmp
clc
push
adc
inc
lahf
xchg
gs
je
lea
sub
cli
lods
bound
xor
mov
lock
pop
cmp
nop
test
mov
inc
inc
xlat
js
cmc
movsb
bound
aas
mov
gs
dec
in
rclb
xlat
inc
fsub
jmp
jmp
jne
push
adc
pop
neg
idiv
jb
xchg
jmp
stos
jl
adc
jnp
mov
cmp
neg
dec
rcr
lods
and
add
sub
push
or
outsb
mov
rorb
rorl
cmc
xor
insl
mov
icebp
inc
cmp
push
push
in
outsl
out
sub
cmp
fsubrl
sub
xor
cmp
shr
mov
mov
mov
jl
shlb
mov
mov
fs
push
loopne
fucomi
mov
popf
dec
xchg
lcall
ret
aad
mov
inc
push
repz
mov
ja
mov
dec
mov
data16
add
lahf
push
out
mov
jecxz
in
aad
and
pop
sub
icebp
and
aam
repnz
stos
fsubr
push
shl
iret
and
mov
ljmp
loopne
pop
cwtl
les
adc
arpl
in
xchg
cmpsb
jno
mov
adc
lock
outsl
fwait
in
jno
out
fimuls
insb
dec
pop
incl
hlt
leave
sub
sbb
or
cmp
jg
js
shlb
insb
iret
push
inc
ret
lcall
clts
leave
xchg
xchg
mov
rclb
mov
icebp
sub
test
stc
testl
xchg
lcall
sub
lock
ret
xchg
popf
jmp
xor
dec
xor
and
jecxz
ror
inc
xchg
lods
cmpsl
into
mov
dec
cmp
push
imul
test
test
mov
mov
xor
xchg
add
shll
cld
sbb
gs
and
aas
push
stc
mov
push
popf
pop
xor
cmpsl
ja
pop
aad
test
call
cmp
inc
leave
in
xchg
sti
dec
jmp
xchg
inc
repnz
fidivrs
xor
mov
jno
out
pop
mov
jae
aam
int3
and
xchg
out
jl
stos
bnd
mov
sbb
and
jge
dec
scas
xorb
loop
js
outsl
and
push
push
imul
adc
and
cmp
dec
add
int3
fdivrl
pop
popf
les
mov
daa
jle
inc
das
mov
jmp
jne
lea
mov
jl
adc
ss
mov
cmpsl
sbb
jmp
or
fwait
and
sub
mov
mov
cmp
fmulp
scas
cmp
pop
mov
mov
cmp
add
dec
push
repz
jecxz
pop
clc
push
and
mov
gs
jns
loopne
jg
fldenv
mov
out
inc
pop
scas
mov
lret
push
inc
faddp
lea
push
xchg
test
cwtl
add
mov
push
jge
cmp
sbb
and
adc
mov
or
lret
push
xchg
ret
push
leave
fwait
lret
ss
push
add
xchg
cs
xor
aad
testb
jp
icebp
out
mov
mov
dec
mov
cmc
mov
aaa
fimull
dec
movsb
fs
sbb
not
xchg
xchg
pop
popf
outsl
cld
pop
jno
add
sarb
pop
scas
mov
and
in
scas
xor
fcomps
push
jb
pop
jns
add
imul
jg
ds
clc
aaa
data16
cmp
pop
insl
and
mov
jnp
and
frstor
xor
xchg
xchg
sub
xchg
repz
lock
pop
sub
nop
movsb
leave
pop
imul
ret
fidivrs
rcrb
mov
mov
push
jmp
add
mov
inc
mov
dec
jno
mov
fmul
fnstsw
dec
jle
lods
fnstsw
cmpb
les
out
fistl
inc
sub
push
loop
pop
mov
add
pop
mov
push
add
ret
scas
lcall
sub
int
bound
fildl
out
stos
pop
es
subb
pop
adc
in
jle
mov
adc
mov
cmc
push
push
icebp
add
pushf
aad
test
jns
xchg
ljmp
test
dec
rcl
cmp
pop
push
push
jno
push
std
rcrb
mov
inc
sbb
loope
outsb
sub
lods
data16
cltd
neg
insl
pushf
mov
xchg
dec
int3
mov
dec
mov
popa
movups
sbb
dec
nop
or
mov
aam
and
aaa
stos
scas
jmp
ret
push
orb
ds
push
pop
shl
cmp
addr16
push
pop
pop
lds
push
lea
push
push
cmpsb
push
pop
enter
andl
xchg
hlt
nop
add
inc
pop
and
bound
ret
testb
addr16
or
ror
mov
fwait
hlt
sti
in
add
cltd
inc
sub
inc
ficomps
outsl
repnz
push
mov
leave
mov
and
imul
pop
sbb
popf
testl
das
mov
test
jl
cli
xchg
arpl
cmp
jae
call
xor
push
leave
mov
adc
movsl
pop
ficompl
xor
xchg
xchg
sub
xor
das
faddl
cmp
in
movsl
mov
sti
dec
imul
fucomi
jbe
lods
stos
ret
mov
inc
cmpsb
das
loopne
fwait
out
repnz
adc
daa
pop
mov
or
xchg
sub
scas
ret
movsl
lcall
out
aas
frstor
dec
add
fwait
into
push
clc
pop
sbb
fistl
xchg
aam
test
fisubrs
add
int3
mov
xor
aaa
and
inc
xchg
pop
cld
mov
push
scas
cmc
in
mov
mov
mov
pop
xchg
xchg
adc
or
dec
mov
push
add
addb
xchg
push
in
jmp
les
pop
subb
sbb
mov
or
mov
cwtl
cmp
js
arpl
fisubrl
outsl
inc
aad
mov
repz
jp
xor
sbb
in
push
imul
push
rcrl
dec
or
mov
add
mov
in
out
leave
mull
sbb
shrb
bound
mov
outsb
fistpll
mov
pop
insl
scas
add
call
sub
in
jb
push
lcall
and
sahf
movsl
clc
mov
notb
cwtl
cmpb
aas
and
in
aas
cmpsb
fisttps
jecxz
test
fs
push
scas
clc
sub
enter
fsubrl
push
push
xor
push
enter
ret
lcall
enter
enter
add
cltd
call
enter
inc
push
cmc
or
jnp
or
int
sbb
cmp
pop
pop
rcll
mov
mov
add
je
sarb
xchg
out
rorl
lret
fimull
popa
loopne
pushf
aaa
fldt
mov
fcmovnb
mov
ss
aaa
mov
rcll
jb
into
inc
push
inc
stos
xor
add
cmp
mov
rclb
out
mov
xchg
bound
xor
dec
cmpsb
inc
dec
xor
dec
stos
movsb
push
sbb
loop
movl
ss
cli
dec
movsb
arpl
and
jecxz
in
cs
into
data16
lret
mov
and
and
negb
outsb
call
rcr
sub
or
xchg
cmp
jns
andb
mov
pushf
lock
add
dec
cmpsb
mov
hlt
scas
iret
push
push
cltd
and
and
lahf
dec
mov
out
not
int
loope
mov
xor
into
xor
or
mov
rol
pop
and
xchg
mov
and
sti
pop
mov
outsb
mov
cmp
dec
scas
cmp
push
inc
icebp
fs
push
mov
arpl
pop
idivb
cmp
mov
inc
ja
incb
enter
out
or
dec
mov
lods
or
mov
mov
mov
or
sar
pop
cmp
fistl
pop
and
repz
mov
shrb
mov
gs
xchg
xchg
in
jb
adc
xor
cli
jbe
hlt
ds
or
push
mov
das
sbb
mov
mov
out
mov
pop
inc
pusha
popf
out
jmp
jne
fisubs
or
mov
xor
jno
repz
and
mov
pop
fs
sbb
popf
mov
lods
add
lcall
or
shrl
lcall
jb
mov
jno
dec
or
rclb
rcl
iret
lret
sbbl
push
jg
clc
xlat
inc
daa
in
sarb
les
mov
push
xor
inc
stos
fidivl
xchg
cmpsb
test
test
adc
xchg
and
stos
dec
push
cmc
inc
lahf
out
inc
pop
sbb
imull
mov
xor
sbb
cmp
rcr
cli
insb
mov
call
lods
fimuls
imul
dec
cmpsl
jns
or
aam
sbb
jb
xchg
fiadds
stos
fnstcw
pop
mov
dec
mov
test
pop
imul
inc
push
inc
aas
jge
push
push
ret
fisttpll
lock
cli
push
data16
into
fldl
neg
pop
out
stc
add
jne
or
lret
mov
test
jge
push
test
or
pop
push
lret
mov
stc
out
push
hlt
fildll
pop
add
push
insl
stc
cmp
icebp
fs
pop
clc
out
sub
fsubrs
lods
pop
xor
push
mov
rclb
lods
jl
add
test
mov
ret
and
shll
jle
test
jns
push
je
cmpl
add
mov
mov
cli
mov
rcr
pop
shll
dec
mov
cs
xchg
ret
idivb
jle
sti
jmp
enter
and
movsl
cmc
mov
aam
mov
cmp
xchg
sbb
fcmove
mov
mov
mov
jl
fnstcw
sub
inc
mov
adc
adc
mov
xor
insb
cmp
mov
pop
pop
test
ds
mov
pop
sub
push
sahf
inc
inc
sub
sub
mov
out
cmp
fcoml
add
ret
lret
jg
lods
lods
in
jl
cmp
xchg
stc
push
lods
filds
stc
fisubs
adc
push
dec
lock
ljmp
cmp
lcall
jbe
cld
or
pop
iret
daa
pop
inc
xchg
addl
fs
or
fstl
sbb
test
into
add
lahf
js
push
shlb
sbb
cltd
inc
xchg
xor
fs
sti
cmp
push
adc
dec
iret
fistpl
je
in
jl
movsl
push
fildl
ss
cmovs
inc
stos
pop
js
fcoml
adc
lods
inc
cwtl
jo
out
push
xchg
push
inc
lahf
ja
mov
push
inc
xor
xchg
das
rorl
dec
sub
sub
pop
jecxz
test
dec
gs
popa
cmovbe
rclb
cmp
dec
mov
mov
mov
lret
imul
pand
movsl
sub
out
cmp
push
jp
mov
lods
icebp
sbb
jae
sub
cmpsl
mov
and
or
mov
or
repnz
jne
add
enter
jmp
fsubrs
push
adc
fcoms
testl
bound
mov
hlt
loope
or
sub
and
mov
adc
aad
fs
xchg
jo
xchg
fildll
rcrb
cwtl
mov
and
imul
push
cmpb
aaa
jns
ja
jp
movsl
inc
mov
jecxz
ds
js
in
in
mov
xchg
stos
jmp
xor
sbb
aam
pop
pop
lods
mov
adc
mull
adc
div
cs
shr
xchg
hlt
clc
popa
inc
pop
outsb
cmp
jecxz
fwait
jnp
stc
out
in
mov
cmc
fsubrs
insl
ja
inc
lret
cwtl
push
push
imul
xor
pushf
sbb
not
xorb
pop
jecxz
ds
and
xor
inc
cmpl
hlt
out
imul
jge
fcmovu
or
cmp
icebp
sub
test
cmp
in
pop
pop
inc
push
mov
in
sbb
mov
daa
out
and
in
ss
pop
in
sbb
addr16
stos
xchg
push
sub
daa
imulb
cmc
or
sahf
or
movsb
jnp
and
mov
xlat
test
inc
xchg
mov
xor
sub
ss
rorb
cld
divl
xor
stos
jmp
jmp
popf
xchg
mov
lret
dec
scas
mov
fcoml
push
cltd
ss
data16
mov
hlt
pop
jne
es
int
test
outsb
cld
pushf
dec
jle
frndint
and
inc
sbb
ret
outsb
inc
jbe
and
int3
cmp
push
sarb
fiadds
xchg
cmp
cmp
mov
dec
or
push
rcr
aaa
cs
cmp
test
adc
adc
cmp
pushf
pop
mov
xor
lea
leave
add
mov
decb
test
inc
leave
test
inc
ljmp
in
loop
push
aad
mov
loope
and
pop
shl
stc
inc
testl
sbb
lock
fiadds
in
jmp
aam
jge
test
add
adc
dec
sbb
xor
xor
inc
sub
push
push
sbb
cli
mov
pop
jnp
shrb
xor
inc
aas
cmp
insb
and
leave
mov
je
popf
xor
and
mov
lock
xchg
inc
nop
notl
pop
rol
mul
popa
add
sbb
cmp
pusha
mov
fwait
jns
cltd
mov
sbbb
sbb
adc
ss
or
fwait
push
sarl
adc
xchg
xor
mov
mov
in
and
fwait
jne
ficoms
shrl
push
inc
push
lods
adcl
roll
xlat
push
push
es
xor
adc
inc
sbb
mov
lahf
jmp
in
fisubrl
mov
movsb
cmp
in
cmp
push
push
dec
outsl
inc
cld
lahf
out
cltd
out
mov
sbb
xchg
loopne
mov
subb
ficoml
in
sahf
out
dec
out
mov
iret
into
loope
lcall
repz
and
inc
or
rolb
xchg
inc
mov
test
mov
adc
iret
cmp
scas
out
pushf
and
cld
adc
or
fsubr
push
mov
dec
and
fadd
ja
mov
jo
push
and
jl
leave
aad
fcomi
jne
int
pop
daa
rcrl
imul
and
and
push
adc
dec
xor
or
xchg
repnz
push
sbb
and
test
dec
aad
frndint
fisubrl
mov
scas
or
enter
test
sbb
xchg
xchg
dec
pusha
and
rol
pop
mov
fstl
pop
mov
jne
dec
stos
int3
popf
or
adc
test
mov
repz
addr16
test
ljmp
mov
dec
roll
lds
cwtl
aad
dec
cmp
pushf
dec
mov
rcrl
lcall
lcall
outsb
mov
push
lahf
or
out
xchg
cmc
cmp
ja
adc
cmpsb
cltd
jl
mov
pushf
fs
mov
lret
add
lods
jbe
inc
div
mov
xchg
or
notl
mov
and
push
scas
stc
xchg
stc
push
repnz
mov
mov
add
push
sbb
sar
imul
xor
cmp
movsb
jns
pop
jl
rcrb
and
gs
pop
cmpsl
cld
mov
loop
lret
jl
xor
es
jmp
push
bound
lds
jo
xor
inc
or
cli
addr16
rorb
push
fisttpl
mov
nop
call
xchg
cld
pop
int
sub
subb
dec
sbb
pusha
push
lods
lahf
fcompl
xor
xchg
addr16
and
std
ss
xor
mov
xchg
mov
or
pop
je
test
scas
push
jno
jp
lahf
mov
movsl
gs
dec
mov
xor
push
xor
jno
enter
incb
cmpsl
mov
jo
adc
mov
adc
jecxz
xchg
pop
sub
push
scas
imul
rcrl
inc
mov
repz
jge
je
aad
xchg
insb
push
push
jbe
popa
or
sub
ja
sahf
movsl
roll
rclb
mov
mov
cmp
fadds
mov
loopne
mov
cmp
adc
inc
mov
mov
repz
cwtl
fcoms
in
xchg
je
outsb
popf
sbb
sub
arpl
push
rolb
inc
adc
out
sub
std
mov
inc
cli
cmpsl
mov
ja
in
mov
dec
or
lret
inc
imul
shlb
jg
and
sahf
sbb
add
mov
dec
addr16
clc
add
inc
push
iret
sub
or
popa
es
mov
scas
dec
and
clc
es
sub
cltd
add
pop
xor
mov
xchg
rol
xor
push
xor
sub
dec
lcall
les
addr16
mov
in
les
in
cmp
mov
sarb
jno
loop
test
sarl
jne
shll
cmp
les
fsubr
divb
outsl
mov
cmp
das
mov
lcall
xor
fcoml
mov
rorl
adc
jg
xlat
jno
les
repz
test
dec
pop
repnz
ja
adc
insl
arpl
adc
jp
icebp
aad
ljmp
jns
pop
fs
or
pop
xor
inc
xor
pop
cmp
lret
mov
aaa
adc
es
sti
fdivs
pushf
mov
loopne
ftst
push
dec
dec
cmp
dec
xor
inc
xor
lret
pcmpeqw
mov
fmuls
xor
xor
mov
ljmp
push
shrl
imul
movsl
pop
adc
xchg
pop
jne
lods
cmc
scas
push
inc
les
mov
push
sbb
add
and
stos
orps
testb
add
sbb
dec
pop
lret
mov
xchg
out
mov
and
jns
inc
movsl
les
inc
adc
mov
cltd
fisubs
mov
push
mov
repz
xchg
sub
hlt
lods
mov
sbb
inc
aam
pop
inc
xor
sbb
test
inc
pushf
test
or
jg
cli
fiadds
xchg
xchg
xchg
xor
pushf
xor
enter
pop
mov
test
insb
cli
pop
adc
pop
popf
dec
cmp
movsb
lea
int
jns
test
pop
xor
add
mov
shll
int3
int
pop
add
repz
dec
daa
jmp
inc
int
insl
dec
pop
xor
iret
in
xchg
repz
and
push
aad
sbb
add
js
stos
cmc
hlt
mov
mov
cmp
leave
dec
sbb
ja
mov
xchg
mov
call
dec
leave
push
push
jo
sbb
pop
stos
xchg
scas
and
mov
pushf
xchg
jmp
xchg
repnz
loopne
rorb
mov
adc
xor
cs
or
loopne
mov
cmc
testb
inc
pop
mov
cld
leave
test
mov
int3
add
fwait
xor
jo
dec
dec
sub
jecxz
jbe,pn
or
lcall
nop
clc
and
ret
mov
leave
adc
push
cmp
fwait
enter
stos
sahf
daa
mov
das
xor
inc
add
ret
inc
sbb
and
mov
test
movsb
xor
loope
inc
sbb
aas
or
pusha
nop
iret
std
enter
loop
xor
xor
sbb
dec
aaa
stos
cmpb
ss
mov
mov
sbbl
pop
xor
jle
xor
or
xchg
stos
dec
cmp
or
test
sar
cmp
cmp
pusha
cmc
xor
inc
mov
jno
ja
sub
sti
out
arpl
sysret
sub
ret
flds
repz
pop
jnp
mov
leave
push
cmp
sbb
pushf
push
and
add
cltd
jne
fcompl
inc
dec
cmpsb
stos
rorb
in
push
mov
aaa
and
lret
flds
jno
pop
in
xchg
or
lret
out
nop
jle
push
lret
mov
inc
aas
xor
or
insb
lret
pop
lock
jg
add
cmpl
mov
xor
pop
xchg
mov
mov
scas
jno
pop
out
fs
pop
fsts
addl
or
mov
mov
mov
inc
pop
add
out
inc
flds
ds
mov
xor
scas
mov
imul
ja
sbb
push
xchg
and
inc
add
js
push
add
xchg
dec
adc
push
fnstsw
cmp
mov
popa
and
movsb
ficoml
sub
jb
mov
sub
fstp
inc
scas
xor
dec
inc
seta
loop
ret
sub
out
mov
dec
jmp
outsb
mov
jae
sub
dec
ret
mov
xchg
pop
les
ret
int
sbb
sub
sarl
loope
in
call
stc
les
lods
mov
lcall
rcl
add
lret
push
xchg
sbb
daa
rcl
mov
pop
xlat
add
shr
and
cmp
pop
ret
addr16
sub
jecxz
decb
scas
cmp
mov
mov
outsb
lock
push
imulb
mov
inc
sub
xchg
sub
lods
ret
adc
mov
cmp
mov
xor
jmp
add
pop
push
out
dec
push
sbb
cltd
mov
push
mov
std
repnz
sti
cmp
xchg
jne
mov
ljmp
mov
test
icebp
sbb
inc
in
insl
xchg
subb
imul
shl
xchg
out
add
mov
test
mov
xchg
push
mov
ret
xchg
dec
mov
push
or
mov
popf
mov
pop
or
inc
cwtl
sub
mov
aam
in
ret
sbb
daa
hlt
pop
cmc
add
sbb
jg
xchg
test
mov
or
ret
adc
mov
push
xor
pop
mov
shrl
and
movhps
cltd
out
xor
mov
xchg
cmovbe
test
scas
xchg
shlb
add
inc
mov
xor
popa
movsl
jle
je
jns
test
sub
add
in
mov
pop
pop
and
pop
fimull
inc
aas
and
cmpsb
arpl
je
inc
mov
adc
leave
loopne
ret
sub
in
jmp
mov
mov
mulb
in
adc
push
mov
imul
shl
push
xor
repz
int3
dec
outsb
or
mov
sbb
je
mov
stos
xor
jbe
pop
jle
loopne
shrb
aad
shl
adc
sbb
test
js
in
dec
mov
add
cmp
lcall
mov
insl
fldenv
int
jae
xor
and
jae
fisubrs
adc
stos
cmp
push
mov
imul
cmc
mov
rorb
addr16
dec
enter
pop
cmpsl
jno
scas
dec
mov
xor
insb
sbb
pusha
je
push
fwait
mov
add
push
dec
jp
push
add
data16
ret
xchg
outsl
es
or
lcall
ljmp
and
sti
repz
xor
dec
sahf
add
inc
mov
jns
lods
add
xchg
out
xor
and
push
stos
addr16
into
mov
xchg
mov
lods
and
mov
and
test
dec
and
mov
fldenv
push
adc
cmpsb
cmpsl
or
enter
fyl2x
fsts
cmp
pop
dec
movsl
cltd
bound
imul
test
insl
out
icebp
outsb
push
incb
jne
lds
fdiv
insl
inc
push
test
add
lods
popa
repz
cli
mov
pop
subl
stos
imul
cwtl
fisubrl
bound
push
xchg
add
test
jo
pop
mov
repz
mov
mov
mov
outsl
jl
dec
or
out
adc
mov
sbb
jb
test
div
mov
or
fmuls
mov
jmp
aad
loopne
inc
xor
es
sbb
aad
adcl
das
mov
decl
cs
sbb
cmpsb
cmp
sahf
lcall
add
mov
dec
shll
addl
mov
mov
adc
ret
scas
test
mov
adc
bound
lods
stos
mov
mov
jg
lret
addr16
sub
push
jns
pop
iret
jg
mov
adc
inc
jbe
repnz
test
cmp
je
out
jnp
mov
and
mov
mov
add
rclb
dec
scas
fs
fistps
test
inc
dec
inc
push
sbbl
mov
mov
sub
push
in
lcall
add
cmpb
dec
jmp
out
mov
or
imul
sbb
xchg
mov
push
pop
or
xchg
pop
adc
xor
sub
push
jnp
cmp
rcl
mov
jnp
insl
mov
sarb
dec
shlb
mov
insl
xor
sbb
mov
fstl
lret
push
mov
add
jge
mov
xor
cltd
movb
gs
dec
sbb
push
cmpsl
aam
popf
dec
loopne
add
sbb
push
push
mov
scas
or
daa
cmp
pusha
xchg
test
vaddps
push
fwait
push
mov
lcall
push
inc
ret
rorb
stc
out
xor
mov
cmc
mov
enter
stos
test
mov
out
enter
aad
pusha
sub
add
inc
cmp
dec
movsb
push
push
xor
xor
xchg
clc
leave
stc
lret
cs
roll
dec
sub
push
nop
ljmp
lret
and
or
stc
pop
inc
repz
out
shrb
mov
ss
xchg
shlb
nop
repnz
push
xchg
cs
jns
pop
push
adc
xchg
sub
pusha
out
into
push
sbb
mov
imul
xor
test
mov
xchg
fld
cmc
inc
xor
xbegin
addr16
pusha
aam
cmpsl
dec
mov
movsb
stos
sub
pusha
addb
stos
xor
and
sahf
xor
repz
pop
es
cmp
dec
cld
push
mov
xchg
stos
out
ret
int
cli
xchg
scas
sahf
or
xor
sub
test
lods
mov
mov
fcoms
imul
inc
fwait
dec
fs
sti
pop
pop
pop
popf
mov
push
repnz
inc
cwtl
ret
dec
pop
fisubrs
stc
pop
sbb
mov
mov
mov
arpl
repnz
ljmp
jle
inc
push
and
int3
jno
mov
cs
stos
push
dec
andb
jl
jecxz
jmp
outsl
out
bound
or
or
xchg
cmpsb
mov
cmc
and
ss
push
jae
mov
loope
loop
pandn
cmp
or
jnp
dec
mov
stos
sub
aam
sbb
pop
repz
sbb
xor
in
stc
mov
dec
cmp
fimuls
push
mov
mov
push
test
xchg
out
add
sbb
cltd
pushf
sub
mov
mov
add
call
jae
cs
fidivs
and
mov
lock
xchg
sbb
sub
mov
sbb
jnp
popa
jle
adc
and
hlt
shll
xchg
bswap
sbb
push
stos
test
ret
shll
mov
pushf
sub
or
jg
dec
jge
imul
rorl
mov
sub
pushf
popf
lea
fcmovbe
cltd
mov
jl
add
mov
clc
xor
pop
or
aad
test
dec
rol
jb
in
sub
pop
xlat
lret
mov
into
xchg
and
cmc
std
test
pusha
sbb
jb
fdivl
and
mov
aas
xor
mov
aad
push
mov
xor
jg
mov
push
nop
lret
pop
lret
and
js
nop
xchg
dec
fdivs
jle
xor
pop
mov
dec
xorb
sbb
popa
ffreep
filds
fdivrs
xor
fidivrl
push
and
cwtl
inc
scas
lahf
push
xlat
jge
push
cmpsb
or
ja
fidivrl
lods
jmp
adcl
sbb
in
bound
xor
pop
mov
mov
mov
push
jecxz
insb
repz
and
push
mov
xchg
les
mov
movsb
test
push
mov
sub
fildl
popl
shl
aam
add
pop
movsl
jmp
sarb
das
xchg
inc
loop
jg
cmp
test
pcmpeqd
and
popa
add
xchg
xchg
add
pusha
das
imul
xchg
mov
sbb
testl
or
jmp
pxor
sbb
es
fwait
xor
imul
pushf
call
jecxz
inc
cmp
cmp
lahf
jp
daa
mov
xchg
mov
pop
mov
sbbl
sbb
mov
cmp
inc
push
xor
mov
dec
lods
pop
andb
mov
ss
xor
fsubl
xchg
jl
sti
push
lods
cs
sahf
mov
insb
repnz
sar
std
loopne
imul
xchg
fnstsw
cmpsl
xchg
cmpsl
sbb
add
adc
clc
lods
jb
cmc
push
mov
inc
dec
push
or
mov
mov
idiv
nop
inc
and
stos
dec
lahf
ss
cvtps2pd
popa
shl
add
inc
arpl
stos
xor
outsl
gs
lods
into
gs
pop
inc
mov
xchg
jns
dec
aad
lret
jae
inc
mov
xchg
xchg
fs
outsl
push
scas
cmp
in
jae
adcb
cs
ficoml
cmp
xor
inc
cmp
lods
std
mov
gs
xchg
xor
imulb
mov
jnp
movsb
jle
test
dec
pop
roll
jbe
out
test
jne
aam
cs
pusha
outsb
leave
addb
filds
pop
xor
cmp
les
adc
or
or
inc
dec
iret
adc
sub
push
adc
clc
sub
fsubrl
xor
stos
test
rcll
repz
into
inc
popa
iret
xor
jno
loopne
xlat
lret
movsb
adc
add
or
sqrtps
push
out
mov
or
jg
or
sub
inc
xchg
insb
dec
in
and
es
int3
mov
sub
sub
lret
int
jb
xor
push
movsb
out
mov
icebp
mov
mov
cmp
xor
das
mov
add
fidivs
and
ret
out
push
lret
jnp
call
adc
in
xchg
push
rcrl
rol
cmp
or
inc
test
inc
or
cwtl
data16
xor
xchg
cmp
or
sbb
stc
mov
jmp
jge
movsl
ret
dec
mov
mov
xchg
lds
jmp
cmp
mov
jle
mov
popa
jbe
lods
sub
test
cwtl
sahf
dec
imul
filds
sub
aad
push
in
sahf
js
out
jle
fs
mov
mov
mov
daa
xor
sbb
adc
int3
dec
jnp
push
push
xchg
repz
arpl
fwait
xchg
xchg
movsl
sbb
std
pop
dec
enter
push
test
pop
sub
xor
ficoms
pop
subb
xchg
popa
or
and
popf
je
or
stos
jno
outsb
sti
xchg
repz
and
add
dec
aad
xchg
cli
pop
ds
pop
sbb
and
xchg
mov
push
dec
ja
and
popf
mov
js
adc
lods
loop
call
fbstp
sbb
scas
mov
inc
out
inc
xorl
fwait
pushf
cmc
in
lds
movsb
adc
and
dec
sub
mov
in
sti
pop
push
mov
std
push
pop
rcrb
and
pop
outsb
movsl
lock
addl
cmpl
jmp
repz
dec
imul
ret
mulb
call
mov
nop
or
push
mov
jecxz
fnstenv
icebp
scas
cltd
shlb
xor
fbld
inc
loope
outsl
and
sbb
ss
testb
negb
add
pop
mov
popf
call
jne
test
test
out
lds
pop
out
push
in
jl
xchg
movsb
jecxz
movsl
ret
xor
push
stos
mov
hlt
subb
test
sbb
sbb
push
cltd
jle
emms
add
mov
adc
xchg
xor
inc
mov
out
test
jae
rcrb
push
pushf
shlb
pushf
in
out
mov
xchg
xor
pop
pop
enter
mov
loopne
aaa
or
cmp
jmp
sbb
insl
xchg
xor
das
dec
fimull
push
push
loope
xchg
mov
cmp
mov
jnp
mov
jb
jp
fisubrl
mov
jnp
mov
pop
repz
out
mov
inc
pop
jmp
stos
pusha
pop
into
hlt
nop
sahf
shrb
push
dec
xchg
icebp
call
inc
out
in
cwtl
jmp
loop
into
test
fsubrs
movsb
int3
and
xchg
loopne
cli
push
popf
add
scas
xchg
clc
out
testb
jge
push
dec
divl
test
fisubrs
sub
fbstp
adcl
pop
movsb
leave
or
das
mov
stos
fdiv
or
mov
aas
clc
mov
xchg
aas
and
xor
into
sbb
hlt
jns
imul
push
or
outsb
out
mov
mov
pop
cmp
in
dec
out
pop
js
sarl
sub
or
lea
lods
mov
sbb
sub
mov
imul
sub
mov
mov
shrl
mov
jecxz
mov
push
mov
jns
add
jp
mov
and
shl
in
lcall
orb
mov
mov
sub
mov
cmp
scas
mov
mov
pop
loope
xor
mov
enter
cmp
mov
shll
jnp
mov
push
jo
shll
cmpsl
and
loope
insl
sqrtps
sub
jge
and
add
mov
stc
cmp
add
adc
into
xorb
jno
out
mov
cmp
xor
jmp
or
or
mov
cmp
stos
shlb
mov
xchg
sub
lahf
mov
lds
stos
imul
xchg
add
mov
cmp
mov
adc
sahf
out
arpl
arpl
mov
xchg
dec
loope
enter
cmp
ljmp
clc
dec
leave
sbb
les
ret
fistl
mov
mov
inc
push
lods
push
mov
mov
roll
scas
nop
mov
mov
push
test
sarl
repnz
popa
inc
add
dec
and
ss
fs
fs
jle
push
or
push
mov
add
pop
pop
popa
xchg
int
pop
or
inc
mulb
jle
inc
andl
inc
mov
xor
dec
shr
mov
lahf
mov
pop
sub
adc
sarb
jle
sbb
lea
ret
ja
clc
cmpsl
inc
scas
cmp
sub
xor
jns
call
scas
movsl
ja
or
xor
mov
xchg
sub
cmc
sub
ret
pop
gs
in
shl
fsubrl
push
seto
movsb
lcall
dec
mov
pop
shll
fbld
cmp
insb
mov
lret
add
sbb
cmpsb
inc
mov
outsb
or
pop
arpl
inc
jge
xchg
es
aam
adc
pop
fdivl
mov
stc
jge
dec
out
pop
cmp
dec
mov
ret
cltd
lcall
outsl
lock
shr
fdivs
inc
inc
ret
or
cld
lock
das
mov
call
enter
leave
repnz
outsl
xchg
rcr
sbb
or
sbb
sbb
loope
cs
addb
and
cmp
arpl
pop
data16
push
sbb
dec
sbb
and
jecxz
filds
mov
sbb
lret
scas
ja
push
xchg
push
stc
lods
or
jg
inc
das
cmp
in
lahf
clc
xchg
xor
sub
cmp
ret
cwtl
sub
mov
scas
cmpsb
cwtl
cmp
ret
loop
fldenv
mov
add
and
dec
adc
fldenv
mov
inc
jl
jb
push
dec
inc
scas
mov
push
fnstenv
mov
fstps
les
pop
mov
inc
out
or
enter
dec
ret
fs
mov
scas
inc
fsubs
test
add
fdiv
mov
insl
ja
cli
jle
pusha
add
test
sub
in
xchg
sti
fistpll
bound
jae
and
inc
scas
dec
adc
and
out
cmp
jnp
inc
xchg
lods
mov
sbb
ja
int
rorb
lcall
lock
icebp
pop
inc
sbb
roll
and
adc
jne
fwait
cmp
dec
mov
adc
mov
dec
dec
cmc
sbb
add
or
push
pop
int3
fwait
test
jo
out
push
fistpl
mov
and
xor
out
mov
fwait
mov
xor
or
mov
mov
mov
xor
pop
popa
cmp
shrb
push
or
xor
insl
xchg
ss
shll
pop
aad
mov
insb
xchg
es
cs
addb
imul
bound
inc
mov
xor
xorl
sbb
push
dec
test
jecxz
pop
adc
sub
inc
call
lods
push
sub
outsb
add
icebp
dec
jle
mov
rcll
add
hlt
mov
fcompl
lds
dec
orb
mov
fwait
movsl
pop
inc
mov
movsb
jmp
pop
aad
addl
push
lahf
cltd
jmp
repz
sub
mov
mov
sub
jle
out
in
outsb
pop
daa
out
xlat
mov
or
jnp
add
shr
push
pop
mull
or
mov
imul
push
mov
mov
or
loop
fwait
jno
and
repz
inc
in
sahf
jno
rcl
lret
mov
fs
sbb
addr16
pop
fiadds
lret
mov
and
sbb
lods
popa
and
adc
jl
xchg
out
mov
test
dec
mov
data16
mov
xchg
inc
xor
jmp
jae
cli
jge
popa
cld
mov
pop
sub
cltd
dec
outsl
mov
dec
mov
js
into
cmp
ljmp
fnstsw
fiaddl
mov
cmp
cmp
sti
pop
jg
push
sub
lahf
dec
pushl
xor
jbe
sub
out
mov
aas
sbb
cmp
lret
or
xchg
out
pop
mov
call
jno
fidivrs
pop
sbb
aas
clc
xor
in
push
and
xor
lods
jl
cmp
and
add
sbb
dec
pop
ds
or
mov
and
dec
negl
insl
push
fucomp
sahf
inc
mov
enter
out
cli
or
popa
insb
out
lret
adc
cmp
mov
xchg
dec
adc
idivb
mov
add
lods
cmp
mov
aaa
mov
or
xor
mov
and
mov
lods
push
or
repnz
and
pushf
repz
stos
cmpsb
cmp
xor
push
pop
pop
arpl
cmp
cmpb
sub
mov
sub
sub
and
xabort
lret
cltd
push
cmc
mov
daa
sbb
faddl
outsb
xlat
cli
and
cmc
shll
inc
pop
dec
jb
mov
push
bound
jno
xchg
or
bound
inc
adc
pop
push
aaa
xchg
adc
xor
insl
mov
push
jns
xor
test
add
mov
jg
andl
aaa
add
sub
mov
adc
inc
insl
test
push
pop
mov
sbb
mov
mov
or
mov
adcl
lds
inc
xchg
lar
dec
mov
or
push
lds
and
or
sysret
cmp
lcall
aas
fidivs
pop
sbb
dec
mov
js
idiv
adc
and
test
mov
pop
popa
jbe
test
mov
sbb
movl
inc
cmp
push
mov
adc
mov
popf
repz
add
add
enter
stc
push
add
fsubrs
and
jp
and
mov
and
jno
xchg
addr16
pusha
jns
mov
fldenv
repz
iret
test
push
iret
mov
jle
das
pop
sarb
std
insl
or
cs
repnz
in
sub
movsl
jnp
mov
popa
mov
or
imul
mov
xor
in
test
cmpsb
mov
scas
movsl
imul
pop
adc
jecxz
xchg
mov
lock
jecxz
xor
lock
js
insb
stos
mov
pop
pop
sub
in
movsl
xchg
dec
hlt
sub
jne
mov
push
lea
adc
or
adcb
mov
or
push
mov
std
cwtl
add
and
inc
pop
sbb
cmp
loopne
mov
imul
jecxz
test
cld
inc
mov
bound
icebp
jge
xchg
cmp
iret
sahf
mov
ret
ljmp
loopne
negb
insb
insl
gs
inc
push
jecxz
xchg
cmp
orl
mov
test
arpl
and
cmpsb
cmp
push
sub
ja
dec
out
insl
adc
ret
loope
adc
xor
fadds
cs
daa
test
fdivp
in
fstpl
cmp
mov
imul
adc
mov
mov
jno
ja
popa
lods
outsb
fcoml
pop
push
xchg
in
xchg
pop
jmp
pop
xlat
mov
rcr
xor
shll
sahf
ret
mov
ja
adc
xor
ja
jg
push
in
mov
cmp
cmp
dec
push
aad
in
inc
pushf
pop
xchg
jne
jmp
jnp
add
lcall
inc
mov
push
dec
and
xchg
sbb
cmp
push
mov
cwtl
es
out
push
and
rol
cli
out
mov
cs
sbb
sub
inc
sub
addr16
mov
je
bound
xor
inc
in
popa
addr16
lret
jle
jbe
fcoml
mov
daa
das
mov
xor
lahf
pop
jecxz
jp
fwait
sbb
xor
sarb
adc
push
mov
rorl
pop
jns
xchg
xchg
jb
test
outsl
inc
jmp
loop
pushf
push
cmp
jno
push
in
pop
push
cld
push
mov
mov
xchg
scas
jmp
push
fstps
je
xor
rcr
arpl
sbb
in
iret
xor
bound
loop
das
fsubs
cmp
cmpsb
mov
outsl
xchg
insb
dec
popf
add
pop
mov
jmp
ficoml
loopne
lods
addl
loop
and
jno
out
scas
adc
movsl
inc
enter
mov
mov
pop
add
pop
dec
push
cmpl
sbb
pop
pusha
push
aam
repnz
loopne
push
flds
dec
xor
test
stos
pop
sti
xor
in
xor
testb
std
push
lock
cli
xchg
lock
push
mov
scas
inc
and
mov
mov
aas
pop
or
inc
es
add
sti
xor
pop
xchg
lahf
sub
and
lods
pusha
mov
fsts
pop
int
stos
add
pop
push
enter
movsb
push
lds
insb
mov
pop
mov
push
inc
xor
arpl
into
sbbb
imul
add
cwtl
out
jae
das
jmp
stc
mov
out
addr16
push
sbb
out
das
in
mov
stc
imul
rcrb
adc
roll
dec
clc
out
int
xor
push
jmp
pop
mov
mov
add
inc
shrl
stos
xchg
movsl
das
xor
mov
push
sbbl
add
mov
cmc
sub
cs
stc
lea
push
cmc
cmpsb
xor
jecxz
aad
mov
jl
clc
or
enter
push
fldl
sbb
lds
sbb
test
mov
lds
popa
mov
iret
adc
fs
adcb
sbb
nop
cmpb
cmp
scas
rcrl
push
aaa
shlb
mov
repnz
pusha
or
loopne
dec
jmp
push
stc
cwtl
std
mov
jns
es
jmp
pop
data16
sbb
cld
enter
xor
lcall
insl
mov
lods
lahf
adc
xor
xor
mov
push
mov
adc
inc
call
les
push
cld
test
mov
fwait
mov
pop
lods
out
xchg
xor
loopne
jle
adc
cmpsl
mov
out
adc
xor
cmc
pop
mov
fstl
mov
sbb
idivb
pop
xor
test
xor
pushf
pop
or
add
pop
add
jbe
mov
in
outsl
popf
jge
cmp
sub
dec
inc
js
cmpl
ljmp
fmull
xor
js
xchg
sbb
repnz
xor
movsb
imul
inc
and
ret
push
sarl
pop
fbstp
mov
push
pop
add
push
push
jp
push
xchg
rcll
dec
push
in
loope
es
mov
ljmp
int
in
jae
mov
jbe
push
insb
iret
stos
stos
insb
sbb
js
push
iret
mov
pop
sbb
insb
jae
shrl
or
sbb
sbb
mov
lret
test
fisubs
jns
mulb
pop
dec
adc
jmp
inc
mov
sbb
ret
jo
xor
lcall
inc
fiadds
mov
dec
mov
mov
and
movsl
mov
movsl
fidivrl
dec
mov
or
sbbb
bound
pop
xor
popf
out
in
sti
jae
loopne
dec
enter
jne
sahf
sub
xchg
scas
std
fwait
insl
pop
pop
into
jns
or
lret
mov
enter
push
outsb
adc
adc
shl
cli
push
in
stos
lahf
in
popf
pushf
aam
das
xchg
push
pop
iret
and
ss
jne
xchg
outsb
and
or
push
mov
mov
fimuls
sbb
cmc
pop
mov
add
ds
inc
mov
cmpsl
fimuls
mov
rorb
lcall
sub
cld
sub
add
cs
cmpsl
add
xor
jp
jmp
lock
je
test
dec
jp
stos
ror
int3
in
mov
or
xor
jmp
add
dec
shlb
jmp
ds
xor
ja
cmpsb
push
jge
push
add
clc
lods
or
mov
pop
sbb
loopne
xchg
in
sbb
iret
jo
test
pop
testl
cmp
pop
lods
adcl
inc
cwtl
int3
fidivrs
bound
and
fwait
nop
mov
loope
sbb
mov
mov
cmpsl
sarl
lahf
and
movsb
ret
mov
popf
add
add
pop
cwtl
add
lret
sbb
mov
mov
ja
sti
inc
mov
mov
cwtl
fistl
das
cmp
xor
push
add
scas
lea
push
lcall
pusha
add
pop
data16
dec
mov
rolb
nop
lds
lods
xor
imul
in
stos
rorl
call
cmp
mov
xor
mov
mov
aaa
dec
ret
dec
or
daa
xor
sub
lcall
ret
rcrl
scas
les
mov
rorl
mov
test
outsb
cmc
cmp
cltd
mov
sbb
es
push
jb
cli
fwait
int
add
xchg
movsl
pop
outsl
inc
and
arpl
cmp
pushf
ss
movsb
hlt
test
mov
sub
imul
jo
sub
cmpsb
fsubrp
cmpsl
or
fcmove
testb
push
mov
add
add
sti
outsl
test
add
imul
ret
movb
sub
and
jne
sub
pusha
gs
pop
sub
scas
add
add
mov
adc
push
stc
lods
pop
or
mov
mov
into
mov
cmp
xor
push
sahf
sarb
sbb
mov
dec
mov
scas
cli
aam
sbb
hlt
inc
inc
insl
lock
aas
movsb
mull
jo
negb
rcll
sbb
sub
xor
push
jns
mov
jbe
fbld
fidivs
or
sarb
movsb
mov
ljmp
dec
xchg
incl
cmpsb
pop
int3
pop
xchg
loope
or
sub
xor
aam
out
ljmp
imul
outsl
xor
mov
pop
mov
stos
sbb
mov
ljmp
pushf
push
in
ljmp
cmp
or
out
movswl
int3
leave
nop
das
lret
cmp
ds
cmpsl
mov
insb
fidivs
arpl
cmp
push
dec
pop
mov
jl
in
add
cli
mov
inc
loopne
add
mov
mov
clc
out
aas
dec
mov
out
icebp
pop
add
ja
fcmovb
pop
mov
shll
or
or
loop
imul
mov
add
jp
jae
inc
push
out
and
lret
mov
cmc
and
jecxz
enter
xchg
test
insb
ljmp
xchg
popa
out
sbb
mov
inc
cmp
xor
xchg
lret
push
ror
daa
mov
sbb
fcoml
mov
mov
xchg
aam
mov
cs
fsubl
xor
mov
out
push
popa
stc
sbb
mov
nop
cmp
and
cmc
or
sub
in
xlat
adc
lcall
xor
pop
sub
mov
dec
push
dec
sahf
cltd
adc
and
fidivrl
sub
loope
mov
out
ljmp
loop
lret
mov
cmp
cmp
cmpsl
mov
push
cmp
and
daa
pop
pop
mov
cli
aaa
mov
mov
dec
pop
pop
mov
push
scas
jle
add
xchg
and
push
data16
adc
in
inc
das
push
inc
sub
jbe
pushf
outsl
dec
rcrl
xor
ss
data16
lcall
pop
mov
fsubl
mov
in
loope
movsb
out
insl
hlt
aad
pop
xor
std
lret
and
mov
mov
and
out
dec
std
std
repnz
outsb
mov
dec
scas
xchg
xchg
xchg
cmp
lods
dec
testl
xchg
fwait
jp
rclb
sahf
push
mov
xor
pop
lds
loope
lahf
aam
jge
shlb
gs
setp
mov
push
pop
push
cs
pop
movsl
adc
lea
push
ljmp
push
popa
jp
mov
pop
in
xchg
clc
stc
inc
inc
mov
arpl
xor
or
xor
pop
sbbb
xor
mov
mov
cmpsl
mov
insl
push
fistl
in
insl
cmp
data16
shrl
and
jl
pop
cmp
mov
das
xchg
push
xor
hlt
fstpt
cmpsb
xlat
inc
lea
fs
push
xor
cld
xor
xchg
pop
bound
add
dec
push
in
movsb
xchg
and
mov
fdivrs
outsl
movsb
jo
je
inc
ljmp
sbb
ror
push
jne,pn
adc
sarb
dec
adc
or
das
and
cmpsl
notl
aaa
mov
xlat
lret
test
pop
orl
adc
xchg
adc
dec
and
in
leave
xchg
imul
sbb
xlat
pop
cmp
aad
int
xchg
sbb
pop
loop
xchg
gs
sub
cmc
lret
cmc
mov
sub
sub
lods
mov
jmp
dec
cmpsb
mov
adc
add
jo
iret
mov
jg
jnp
lret
inc
fdivrl
jb
jo
xchg
push
aaa
push
jnp
cld
dec
lock
inc
out
ds
cmp
dec
fildl
and
dec
cmp
sub
shl
dec
pop
xchg
lods
jbe
xchg
jb
jae
mov
aad
jae
adc
push
xchg
pop
and
cmp
inc
xchg
inc
add
pop
cmp
stos
cltd
cmp
or
push
std
push
pop
push
out
and
pop
mov
xor
add
add
in
xchg
mov
int
mov
hlt
inc
add
jns
mov
mov
add
loopne
scas
dec
out
insb
fistps
mov
sbb
std
inc
xchg
data16
xchg
push
xor
xor
sub
out
adc
sub
cwtl
call
sub
addl
sub
mov
ror
pop
je
mov
rolb
dec
pop
cmpsb
fdivrs
outsb
or
mov
js
out
pushf
sub
xor
insb
divl
arpl
ds
mov
ret
icebp
rol
dec
pusha
repnz
dec
out
and
insl
jne
mov
lahf
das
loopne
icebp
xchg
ja
jg
mov
repnz
mov
sub
mov
inc
push
mov
jns
pop
lea
add
dec
jnp
add
scas
jl
mov
and
dec
jmp
jl
and
out
inc
test
xchg
inc
xchg
data16
mov
mov
aas
sbb
mov
bound
js
add
xor
shll
or
hlt
push
inc
test
pop
pop
push
xor
sti
call
std
mov
stos
push
jmp
in
ss
int3
jle
cmpsb
dec
sahf
mov
iret
pop
cmp
push
int3
rcrl
pop
xchg
push
arpl
stc
into
adc
or
sub
rorb
sub
imul
adc
xor
pop
xor
and
aaa
or
scas
lret
add
lods
add
inc
setnp
insb
add
fs
stc
sub
pop
jl
mov
pop
and
icebp
out
dec
addr16
add
addr16
mov
jp
xchg
pop
movsb
xchg
cmpsl
xchg
cmpsl
mov
outsl
sbb
movsb
cmp
sub
mov
mov
repz
aas
cmp
int3
enter
push
inc
add
lods
hlt
mov
icebp
mov
xchg
clc
lret
repnz
iret
movsb
and
mov
mov
int3
xchg
mul
and
jnp
add
pop
mov
or
xchg
leave
cmp
scas
int3
scas
sbb
arpl
mov
pop
cltd
rcl
jecxz
xchg
loope
sub
sbb
imul
mov
push
inc
sub
mov
ja
sbb
lods
adc
int
stos
mov
dec
cltd
lods
sahf
add
scas
test
xor
sti
push
out
imul
insl
into
cwtl
loopne
mov
push
cmp
pusha
fwait
push
out
inc
mov
lods
mov
in
pop
pushf
pop
pop
mov
mov
test
xchg
jmp
in
ja
loop
xchg
adcl
jno
dec
push
pop
pop
and
cmpb
add
cmp
in
shll
aas
push
lods
aaa
iret
inc
adc
icebp
inc
gs
jne
jle
add
outsb
and
dec
xor
ret
cmp
faddl
cmp
mov
push
data16
in
scas
dec
and
inc
mov
jno
test
xor
cmp
sub
dec
add
addr16
jg
mov
test
mov
ret
mov
pop
pusha
adc
sti
xor
cs
xor
add
aad
pop
add
fs
stos
leave
adc
inc
xchg
xchg
lret
cmp
dec
jmp
xchg
jnp
jo
decl
cli
pop
dec
pop
xlat
sbb
and
xor
sarb
nop
lods
in
adc
clc
incb
cld
fsubp
out
mov
lock
jmp
cltd
and
sbb
pushf
arpl
enter
xchg
fs
sbb
popa
jb
mov
mov
jecxz
inc
stos
pop
icebp
lock
dec
xlat
popa
pop
jg
xlat
xor
stc
xchg
mov
mov
cli
pop
shl
push
xor
push
ficoml
push
cmp
jle
mov
stc
popf
icebp
sub
pop
jb
cmp
push
cmp
stc
bt
cwtl
push
pop
and
fstp
push
xchg
and
jnp
test
ds
xchg
mov
mov
and
popl
mov
outsb
xor
jg
or
in
bound
std
enter
jmp
add
out
aaa
loop
std
jne
stos
and
or
mov
js
ja
adc
or
sbb
icebp
mov
push
notl
mov
in
push
divb
arpl
xchg
aas
xor
mov
out
imul
cli
mov
sub
mov
adc
aad
add
sbb
addr16
stc
mov
jno
aam
mov
les
jo
lds
shl
dec
rep
push
aas
stos
in
inc
fnstsw
popa
outsb
ret
insl
daa
icebp
push
add
sbb
jbe
push
pusha
mov
push
push
in
pop
sahf
mov
stos
lock
mov
or
test
arpl
and
inc
mov
in
iret
sbb
fildll
mov
cld
jp
lret
mov
dec
fisttpl
fldenv
mov
push
add
ss
arpl
cwtl
insl
les
mov
into
jmp
xchg
loope
test
popa
jl
dec
loop
outsb
push
nop
ret
add
xacquire
or
hlt
dec
lret
xchg
gs
pusha
je
sti
xchg
add
sub
inc
cmp
and
lret
das
pop
js
cmp
xchg
jns
sahf
in
fidivl
or
imul
and
incb
cmp
rcrb
push
into
or
shr
sub
xor
jns
mov
pop
nop
sub
mov
movsb
xchg
lds
add
jge
ret
shlb
xchg
mov
adc
pop
jae
hlt
jge
pop
or
push
mov
fstpl
dec
ljmp
ss
mov
mov
push
popf
mov
mov
rol
mov
push
push
out
sub
ror
jno
ret
adc
xlat
das
sahf
nop
lahf
dec
test
jl
pop
jge
jbe
mov
negl
insb
out
mov
shr
dec
punpcklwd
and
lahf
and
js
xor
mov
aas
jecxz
or
es
xchg
cmp
inc
ret
mov
mov
out
loope
mov
push
adc
push
adc
lret
and
loope
pop
jp
insl
jne
sub
add
dec
inc
cmp
fstpl
mov
dec
stos
mov
add
adc
sub
addr16
jo
nop
jmp
pop
push
imul
inc
imul
sub
mov
sarl
inc
push
push
fnstsw
test
sbb
popf
sub
xlat
jns
push
js
inc
push
daa
or
ja
pop
jae
loope,pt
ljmp
adc
push
and
sbb
mov
xchg
push
jne
popf
pop
xor
push
jnp
add
rcrb
pop
jecxz
ja
jmp
mov
gs
jnp
movsl
push
cltd
cmp
ljmp
cmpsl
mov
cmpsb
out
cs
push
or
das
xchg
enter
sub
inc
or
pop
stos
dec
adc
and
loopne
inc
mov
test
xchg
sub
inc
pop
adc
xchg
fs
push
lds
into
and
insl
pop
sub
pop
loop
fdivrs
sbb
jp
fwait
inc
fstl
fistpll
inc
mov
outsb
adc
xchg
ret
ja
mov
cli
test
pop
xor
sarl
ss
push
adc
in
and
xchg
into
pop
jno
aam
pop
faddl
dec
out
xchg
lret
mov
in
enterw
push
imull
or
test
sub
into
movsl
loop
add
and
aaa
dec
mov
mov
push
cmp
cmp
std
insl
mov
ljmp
pop
or
xchg
dec
sub
push
jl
aad
popf
test
adc
xchg
cmp
loope
jne
popf
sbb
sbb
in
jle
stc
fs
pop
lea
jmp
push
mul
iret
stc
xor
add
cltd
mov
cmp
fmull
lock
add
std
fildll
je
sbb
inc
sbb
jno
roll
or
in
fwait
notb
xchg
call
out
std
push
xor
pop
jbe
jp
lods
aam
mov
iret
outsb
je
sub
push
sub
dec
mov
bound
scas
cmpsl
shrl
shlb
les
cmp
ljmp
mov
jbe
jecxz
rorl
in
orb
repz
std
out
cwtl
leave
push
into
gs
xchg
pusha
shr
cmp
xor
mov
sub
loop
rcrb
sbb
dec
es
mov
push
bound
sub
iret
shll
xlat
stc
loop
cld
xchg
and
call
call
fwait
shrl
adc
int3
cltd
imul
insl
mov
jo
xor
jb
xchg
xchg
movsb
movsl
add
jle
jno
jnp
mov
test
inc
jbe
lods
out
cmp
push
dec
int
nop
fstpt
sti
adc
imul
jno
adc
ds
das
enter
fiadds
aas
lret
xchg
mov
push
push
popf
sahf
stos
es
mov
adc
loopne
movsl
jmp
xchg
mov
dec
sar
adc
mov
and
dec
inc
push
jo
data16
and
and
in
fsubl
cmp
in
dec
push
rorb
cmp
mov
out
mov
movswl
cmc
enter
out
mov
pushf
inc
out
jno
std
aas
pop
inc
lret
inc
insl
addr16
fdivs
out
sti
cmp
sti
imul
pop
push
inc
iret
bound
mov
insl
sub
stos
cmpsl
inc
adcb
out
xor
rcr
test
data16
xchg
pushf
jo
inc
or
sarl
cli
cmc
and
ret
fstl
inc
adc
mov
iret
inc
dec
mov
xor
mov
dec
xchg
mov
loop
sbb
gs
mov
adc
add
fnstcw
mov
sti
lods
test
imul
xlat
mov
test
adc
sarl
lea
jo
repnz
inc
das
rcll
or
sbb
push
icebp
sbb
fnstenv
pop
jl
mov
push
fstl
scas
outsl
mov
pop
push
icebp
push
pop
in
jmp
lahf
insl
das
adc
mov
int
xchg
das
pop
mov
in
sub
or
jmp
popf
sub
sbb
inc
loope
imul
das
pop
dec
dec
fnstsw
inc
lret
sbb
sbb
sahf
xchg
mov
xchg
out
xor
out
mov
mov
adc
sbb
int3
mov
push
rep
ret
pop
cld
clc
lcall
aad
jns
faddl
jns
sub
fisubrl
dec
mov
sub
ffreep
leave
adc
fsubrl
or
adc
shll
subl
mov
pop
fmull
aas
adc
sub
arpl
push
outsb
add
push
imul
cwtl
and
and
inc
in
lret
xchg
outsl
mov
mov
push
adc
lock
dec
popa
add
mov
mov
cli
inc
std
imul
cmp
lds
mov
add
fnstsw
jle
inc
xchg
into
aam
pop
ss
shlb
jl
sub
push
cmp
aas
scas
xchg
aaa
not
push
push
lods
fs
dec
or
or
xchg
shrl
loopne
adc
loope
inc
aaa
or
lcall
jmp
xchg
push
out
jecxz
add
mov
adc
dec
fdivrl
repz
mov
and
fsubrs
cltd
or
gs
arpl
jno
mov
test
pop
xor
addr16
insl
pusha
cmp
push
movd
pop
jne
cmpsb
add
das
jns
and
dec
dec
ds
jecxz
jnp
sub
pop
cmpsb
mov
in
repnz
push
outsb
xchg
or
and
dec
mov
add
pcmpeqb
mov
sub
jecxz
je
sub
leave
and
gs
pop
ja
cs
mov
orb
scas
cwtl
jg
call
mov
lods
in
xchg
pop
jns
push
xor
xchg
out
lock
shrb
pop
pop
ss
fwait
loopne
mov
xchg
jp
inc
jno
imul
bound
pop
add
in
popf
mov
mov
ds
enter
dec
outsl
testl
mov
dec
ret
in
imul
or
les
push
popf
mov
xorb
push
js
jno
pop
mov
leave
out
xor
dec
imul
and
jecxz
mov
push
xlat
mov
mov
scas
das
daa
lcall
and
and
pop
clc
repz
fildll
adc
sti
push
push
test
cld
sub
inc
push
jae
dec
call
sahf
jb
adc
mov
in
jmp
into
orb
lret
rorb
push
adc
push
call
mov
gs
repz
cmpsl
and
lods
dec
pop
mov
sti
jecxz
cltd
out
mov
nop
fmulp
jle
lahf
out
xchg
scas
cmp
dec
mov
pushf
ljmp
fcomip
es
imul
xchg
inc
aas
ss
add
inc
push
jl
inc
cmpsb
movsb
lods
ret
addr16
pinsrw
shr
test
xor
pop
mov
jno
mull
test
cmpsl
mov
orb
mulb
stos
push
and
mov
jge
dec
inc
adc
aaa
cmp
add
js
mov
clc
filds
pop
inc
dec
mov
aaa
ljmp
sub
in
les
aas
and
sub
adc
xlat
es
jge
cmp
dec
subb
add
clc
int3
nop
sub
movsl
sbb
ror
xor
not
cli
out
sub
mov
adc
pop
fxam
test
imull
mov
xorb
sub
not
aaa
xchg
popa
cwtl
dec
push
pop
sbb
outsb
lcall
inc
loope
xor
or
es
xchg
fs
cmc
dec
lret
push
mov
xor
or
into
fdivrs
add
insb
pop
aaa
mov
ss
mov
mov
daa
aaa
add
je
test
iret
pop
mov
fstpl
sbb
or
orl
test
cld
sub
add
push
dec
aam
shrl
flds
fmuls
outsl
or
scas
xchg
shll
loopne
cmp
std
xor
sti
jle
or
sub
jge
imul
lret
push
cmpsl
test
into
jl
movsb
lcall
jle
push
xor
in
inc
push
das
xchg
ja
add
push
sub
xchg
stc
push
jne
jl
dec
add
sub
movsb
minps
and
imul
mov
fldcw
mov
add
or
mov
push
sahf
dec
jle
mov
mov
iret
pop
dec
or
mov
xlat
or
push
ja
rcrb
xor
scas
popf
mov
stos
movsl
loopne
xchg
dec
lret
imul
push
cmp
cmp
ds
fprem1
xlat
sarl
negl
mov
scas
push
cmp
lret
xor
xor
mov
xchg
push
hlt
call
int3
jbe
jb
out
lret
js
std
pusha
fsubrs
ret
pushf
xor
push
andb
pop
cmp
ljmp
adc
lds
lea
movsl
repz
add
mov
test
pop
jbe
sbb
lahf
into
inc
enter
jo
mov
push
fwait
dec
in
clc
cmc
sub
add
adc
int3
mov
popa
repz
push
sbb
lock
pop
mov
add
les
pop
aad
dec
sub
test
test
pushf
jl
or
and
lods
stos
sbb
jns
sub
dec
push
loop
int
dec
push
repnz
lods
pushf
dec
pop
add
sub
sbb
mov
sub
mov
mov
xchg
pop
cmp
mov
adc
pop
xor
jle
sbb
jb
cmovne
cwtl
repz
adc
sub
pop
mov
in
fwait
subb
subl
inc
aas
sbb
das
es
pop
adc
inc
or
pop
ret
pop
push
lea
mov
adc
fst
insb
clc
adc
inc
mov
sti
sub
sbb
jno
dec
adc
addr16
loop
jb
sbb
out
data16
pop
test
std
clc
test
out
loop
and
in
aaa
ljmp
imul
outsb
shlb
xorl
sbb
xchg
lds
xchg
mov
sahf
jle
insl
add
mov
and
and
mov
sub
clc
out
mov
xchg
test
mov
jg
adc
lcall
rorb
outsb
sbb
lock
ret
fld
add
test
xchg
mov
stos
std
gs
std
out
ss
fstps
push
in
in
pop
adc
rorl
cmp
sbb
fimull
sahf
fidivl
insl
sbb
dec
add
mov
cmpsl
add
sarl
push
popf
and
mov
div
sti
stos
pop
jg
sbb
jmp
xchg
enter
pop
aas
lods
pop
sbb
xor
aas
aam
out
sahf
adc
in
rol
push
add
xchg
aas
mov
cmp
movsl
je
ja
inc
push
in
enter
pop
xchg
mov
push
fimull
test
adc
pop
ds
xlat
sub
mov
lods
add
push
jle
sub
mov
sbbl
lea
pop
sub
pop
sbb
adc
mov
sub
jl
fadds
jle
push
das
inc
dec
pop
in
mov
adc
inc
movsb
jmp
and
jno
lret
loope
xlat
mov
in
and
jns
test
mov
sahf
and
movsb
cmp
cmpsl
out
scas
fadd
xchg
pop
sbb
sub
stos
push
xchg
pop
xchg
adc
adc
cmp
das
jne
std
xchg
sbb
cmp
loope
addl
aad
push
xlat
decl
in
lock
jecxz
sbb
xlat
inc
lcall
adcl
loopne
out
insb
dec
pop
push
js
sbb
stos
push
lahf
jmp
je
jnp
inc
imul
shll
lret
adc
lea
arpl
daa
ret
sub
jg
or
jne
mov
fdivrs
fidivs
mov
fwait
mov
pop
cmpsl
ffreep
icebp
or
mov
adc
mov
fmull
rcrl
inc
dec
out
and
jecxz
sahf
or
dec
jns
pop
cmp
fwait
and
dec
mov
cmp
mov
and
push
cltd
xchg
aaa
jo
push
das
repz
dec
adc
xor
or
dec
xorb
mov
xchg
jo
pusha
adc
adcb
xor
out
xchg
std
add
imul
sbb
jg
arpl
or
cmp
dec
inc
cli
mov
xchg
adc
ficompl
pop
mov
repnz
and
fsubs
ds
mov
pop
mov
jg
cmc
jle
adc
cmpsb
dec
jno
cmp
push
sub
push
arpl
pop
popf
push
xadd
add
mov
pop
add
add
push
sbb
dec
mov
test
xchg
mov
sbb
sbb
into
fwait
or
push
and
adc
jg
or
enter
dec
cmp
add
and
xor
dec
push
jno
or
xchg
sub
outsb
daa
iret
js
je
xchg
sbb
mov
ret
mov
xchg
testb
mov
adc
cmp
mov
in
leave
mov
dec
jno
sub
arpl
mov
jle
gs
push
mov
fs
sub
pushf
dec
push
inc
or
jae
fbld
xlat
cld
mov
pop
notb
test
imul
scas
insb
std
fdivs
orb
scas
mov
jp
sbb
scas
nop
negb
sub
dec
mov
pop
call
je
xor
lea
jns
mov
pushf
lret
subl
cmc
ljmp
test
jmp
mov
loope
sti
xlat
mov
xchg
mov
leave
mov
mov
sub
inc
mov
jnp
rorl
popa
fistpll
dec
mov
or
jb
jg
imul
fsubl
xchg
or
icebp
push
imul
and
xor
ljmp
movsl
out
pusha
mov
test
cmp
mov
iret
xchg
jl
out
push
ja
or
lds
push
xor
shll
mov
fildl
pop
mov
lcall
pop
mov
stos
cmpsb
pop
push
into
movsl
fwait
push
pop
push
mov
inc
mov
out
cmp
loope
dec
orl
sub
mov
sub
stos
test
xchg
in
mov
cmc
cld
ljmp
xchg
mov
jbe
sti
es
add
hlt
dec
pop
lcall
mov
mov
movsb
mov
out
mov
test
cmpsl
adc
or
xchg
ds
out
mov
mov
loopne
fisubrs
rorl
in
mov
push
std
and
push
icebp
mov
pop
cltd
sahf
ds
mov
inc
pushaw
lahf
data16
push
jns
pop
pop
jl
cmp
movsl
add
xor
sub
fisttps
rep
icebp
mov
shrb
cmc
lcall
scas
adc
inc
xchg
mov
jg
shlb
mov
add
inc
push
xlat
jnp
aaa
loopne
je
push
jne
mov
or
dec
cmpsl
loop
dec
or
lcall
scas
xchg
push
repz
icebp
out
pop
mov
aaa
lret
mov
fwait
mov
pusha
mov
in
push
loope
out
nop
inc
dec
cmp
jl
enter
arpl
add
gs
inc
fcoml
les
fidivs
dec
mov
test
inc
pushw
adc
hlt
inc
push
iret
lcall
cmc
out
mov
pop
or
and
cltd
pop
mov
enter
dec
push
cmp
cs
cmp
stos
inc
add
mov
xchg
lret
lret
loop
mov
cld
aad
insl
mov
dec
aaa
sbb
test
cs
popa
inc
cmp
xor
push
push
in
sub
adcl
cmp
popf
jmp
fstl
shl
mov
mov
bound
lret
push
xor
andnps
jo
out
sub
test
push
pop
or
fs
push
xchg
fidivl
cwtl
inc
imulb
pop
lea
loop
movsl
jno
das
push
cmc
dec
add
dec
dec
add
push
add
push
inc
add
pop
mov
addr16
dec
and
and
aad
add
add
xchg
test
sahf
push
fwait
out
pop
imul
xchg
jne
iret
enter
pop
sbb
inc
aaa
add
pop
imul
mov
not
mov
mov
fwait
pop
jge
xor
dec
sub
push
inc
add
stc
add
clc
mov
push
psrad
dec
pop
into
pop
mov
jl
sahf
jns
jl
int
js
std
or
movsl
dec
fcmovb
das
add
sbb
inc
test
sub
fdivl
lret
xlat
aaa
stc
add
lock
mov
push
loope
jmp
push
cmp
ja
xchg
xor
push
movsb
ror
std
movsl
xor
cltd
push
addr16
mov
outsb
push
ret
xor
enter
mov
insb
repz
jae
or
pop
pop
loop
mov
aas
cs
xor
and
dec
shl
jno
sbb
mov
xchg
mov
pusha
scas
inc
nop
in
test
ds
fldt
cltd
push
shrl
dec
cmp
rorb
jge
imul
in
imul
mov
cmpsb
and
mov
icebp
lcall
gs
dec
mov
repz
push
jb
sbb
and
add
rolb
seta
ljmpw
les
das
xchg
in
fcomps
inc
sbb
aas
out
testb
push
shrb
jns
leave
je
and
stc
into
adc
pop
bound
cmp
jns
pop
pop
pop
aaa
int3
add
mov
pusha
xor
les
cmp
and
jle
lea
xor
enter
decl
dec
clc
rclb
adc
es
test
jne
pop
fsqrt
xchg
das
rolb
popl
gs
adc
repnz
enter
divb
add
mov
xlat
cwtl
repz
jo
pop
fsubrl
sbb
xor
push
inc
mov
xchg
pop
cmp
daa
out
sub
xor
xor
loope
gs
xchg
sub
adc
fimuls
and
and
mov
mov
leave
in
pop
into
xlat
mov
sub
adc
adc
in
sbb
pop
add
orl
dec
pop
push
es
pop
jae
fisubrs
insl
inc
mov
outsl
orb
jg
pop
adc
xchg
lods
enter
inc
pop
mov
push
mov
rcll
push
imul
test
mov
pusha
push
aaa
add
xchg
dec
adc
xorl
data16
mov
outsl
inc
mov
push
int
int3
mov
scas
cmp
mov
imul
sub
test
mov
cmp
jp
imul
xor
fildll
fwait
pusha
mov
data16
sub
test
ret
fs
and
ljmp
sarb
popa
or
test
jp
dec
sub
mov
pop
cwtl
sbb
push
push
clc
adc
push
rcll
adc
inc
test
sbb
sub
sub
dec
jbe
lcall
and
sbbl
jns
xor
xor
push
add
and
or
push
xchg
push
test
push
ds
ret
pop
in
ret
pop
popa
cmp
jae
shll
pop
fcoms
jns
sub
mov
cmp
aad
or
in
loope,pt
push
mov
add
jo
ja
loopne
pop
cmp
mov
gs
push
push
jns
jl
in
call
pop
pop
xchg
mov
fsubs
sti
xchg
outsb
loop
cmpsl
insl
xchg
cmp
xor
loope
cmpsl
jl
adc
les
inc
cld
enter
mov
push
in
arpl
mov
rcrl
ret
mov
orl
cmp
icebp
in
inc
lea
push
sub
inc
jmp
lahf
fsubrs
mov
icebp
mov
jns
adc
push
rcll
mov
bound
fldcw
int
leave
rcll
sbb
push
cltd
jl
push
pop
mov
cmp
cld
loope
adc
out
push
or
cmp
mov
push
and
pop
enter
pop
lds
repz
inc
sub
mov
fistps
mov
test
xchg
nop
dec
and
sar
fs
pop
fistps
dec
ljmp
icebp
fs
jb
dec
stos
and
push
adc
adc
pop
pextrw
ja
push
mov
orl
cmp
fnsave
xorl
cli
dec
inc
loope
push
or
out
js
mov
pop
jnp
mov
int
shll
xor
or
testb
mov
xor
cmp
ljmp
shrl
sbb
js
mov
lahf
xchg
cmp
mov
cmp
pop
sub
fwait
xchg
filds
pop
cmp
repnz
stos
push
adc
push
scas
int3
mov
imull
ss
scas
daa
xchg
jmpw
inc
sub
mov
push
les
xlat
pop
cmc
pop
js
pop
dec
mov
mov
xchg
shrb
das
cwtl
cmp
pop
daa
inc
sbb
scas
inc
loopne
push
sbb
loope
lcall
cmp
and
arpl
in
add
push
and
xchg
ljmp
fucomip
adc
push
mov
sbb
rclb
push
lods
sbb
shlb
inc
enter
jo
adc
pcmpgtb
xorb
out
mov
or
fwait
sbb
ret
icebp
dec
test
out
xchg
ror
sbb
out
and
mov
add
push
nop
adc
push
pop
outsb
mov
sbbb
stc
mov
scas
scas
cld
inc
pop
lret
iret
mov
outsl
or
stos
cmp
aad
xchg
sbb
sbb
adc
adc
ljmp
shll
xchg
rclb
repz
jecxz
test
ss
bound
dec
ljmp
push
outsl
sub
mov
adc
sub
jae
inc
out
in
jmp
dec
adc
lahf
out
add
lahf
or
outsl
dec
pop
in
pop
jle
and
or
dec
xchg
cmp
or
jecxz
push
xchg
int
xor
mov
mov
sbb
pop
sbb
lahf
leave
sub
mov
xor
aas
mov
test
aad
std
and
aad
push
mul
jl
or
dec
jecxz
xor
cs
xchg
rorb
test
jns
std
notb
scas
mov
out
push
in
fsubl
jmp
mov
pop
orl
hlt
mov
jmp
sbb
mov
fsts
stos
cmp
addr16
lods
pop
inc
sbb
lcall
test
cmc
ficomps
outsb
push
pop
popf
shll
or
lahf
les
and
sub
sub
daa
jl
aam
pop
lods
es
push
fwait
jmp
fisttpll
jb
fsubrs
ss
jae
dec
pop
lea
roll
sbb
icebp
inc
popf
aaa
nop
push
cmc
aaa
mov
pop
mov
lods
push
mov
dec
cli
add
lods
addb
loopne
cmp
cltd
push
mov
stos
lret
dec
lret
add
mov
scas
xor
stos
mov
subl
flds
mov
ret
push
xor
cltd
jle
cmp
pop
and
push
scas
inc
mov
movsb
out
add
cmc
aad
add
and
add
cli
or
rorb
push
dec
cmpsl
sub
mov
dec
cmc
sub
out
xchg
mov
icebp
push
ficompl
xor
adc
xchg
pushf
xchg
in
sbb
sub
fdivr
lods
fstpl
out
or
add
rcll
arpl
out
inc
test
loopne
mov
push
push
mov
arpl
insb
insb
push
insl
shlb
or
cmpsb
add
pusha
fidivs
lcall
mov
mov
push
iret
jo
adc
and
mov
jle
add
jmp
out
fwait
mov
arpl
test
fimull
push
and
test
pop
call
xchg
and
cld
pop
inc
xchg
in
icebp
push
push
jle
adc
add
inc
jmp
add
push
xchg
sarb
inc
insl
enter
dec
test
fnstsw
dec
jbe
pop
fsubp
add
jns
bound
pop
sub
xor
inc
jno
cmp
daa
sub
xchg
insb
adc
int
mov
and
or
arpl
mov
out
lods
adc
sti
jne
in
ss
sbb
jb
mov
jp
nop
data16
shll
add
ljmp
ja
lea
in
daa
test
xor
sbb
xchg
je
add
loope
out
or
mov
pop
adc
add
inc
adc
mov
mov
dec
dec
jecxz
cltd
pushf
jle
cli
lret
mov
mov
fnstsw
sahf
out
arpl
dec
in
test
fcom
xor
sti
test
in
fwait
cmpsb
daa
push
stos
inc
fs
pop
int3
xchg
pop
jno
cmpsb
cmp
lcall
jmp
and
xchg
xchg
jbe,pn
ljmp
mov
aaa
xchg
pop
lods
xchg
outsb
sub
push
insb
jnp
pop
pop
and
push
data16
sbb
les
ss
cmc
div
out
mov
std
out
ljmp
push
fcmovu
insb
add
or
icebp
push
cltd
ds
test
loopne
push
jge
lock
jmp
adc
mov
test
sarl
sub
jecxz
test
jge
push
pop
and
cmp
clc
sbb
xor
int
fstpt
push
jle
push
cmpb
inc
fisubs
mov
nop
dec
ret
sahf
mov
pop
xchg
sbb
cmp
sti
out
jmp
popa
inc
bound
clc
mov
out
sbbl
push
aam
jle
sahf
push
pcmpeqd
xlat
mov
xchg
push
add
cltd
pop
or
out
push
dec
gs
pushf
fldt
dec
mov
or
in
enter
pusha
add
and
dec
sbb
push
int
ret
adc
and
or
bound
test
cltd
mov
push
mov
scas
icebp
ret
push
xorl
xchg
iret
cld
inc
cmp
fucomip
xor
inc
and
jmp
mov
jecxz
mov
outsb
enter
or
pushf
or
leave
outsl
cli
add
test
pop
mov
cwtl
out
push
inc
lods
divb
pop
loop
mulb
sbb
mov
and
pushf
mov
inc
xor
or
jno
and
cli
in
pop
daa
aas
xor
repz
pop
clc
jns
mov
inc
pop
add
out
jb
push
cld
fld
dec
repnz
mov
and
mov
cmpsb
mov
xchg
mov
xchg
mov
stos
inc
and
lret
data16
ljmp
jmp
adc
vfrczsd
and
roll
push
idivl
dec
jle
cmp
std
add
lock
fdivrs
cli
push
cmp
sbb
cmp
iret
push
pop
pushf
mov
or
test
out
int
test
xchg
outsb
cmp
lock
pcmpeqw
sub
arpl
gs
aas
dec
inc
loopne
sub
pop
arpl
in
test
push
push
jmp
jne
imul
sbb
addb
sub
ds
and
mov
lea
add
stos
out
sbb
hlt
addr16
insl
fsubrs
ja
aaa
rcll
cmp
sbb
dec
pop
arpl
out
mov
mul
ret
insb
pop
sub
leave
arpl
inc
imul
test
pushf
mov
cmp
pusha
add
mov
lahf
inc
in
push
out
inc
enter
mov
lcall
and
cmp
dec
dec
ds
jo
sub
imul
out
cmp
inc
adc
pushf
or
xchg
sahf
in
xchg
stc
sti
pop
movsl
insl
test
adc
xor
dec
jle
in
ficoms
lret
jno
mov
sahf
dec
sbb
out
dec
adc
aaa
call
divb
sub
push
cmp
lahf
mov
hlt
arpl
adc
jnp
lret
aaa
les
xchg
xchg
push
ja,pn
aam
lret
or
vcvtsi2sd
jns
cmp
lret
js
or
mov
inc
scas
icebp
aas
pop
aam
push
adc
inc
fnsave
sbb
ljmp
popf
call
sbb
xor
dec
ret
mov
xchg
pusha
push
cmp
inc
cwtl
stos
ja
dec
dec
pop
rcrb
jae
sbb
xchg
mov
je
sbb
cmp
ret
test
aaa
lret
and
repnz
push
dec
not
sub
mov
sbb
pop
scas
sub
test
pop
lods
sub
aaa
outsl
and
sub
stos
ljmp
adc
clc
and
inc
jecxz
out
es
ja
test
pop
sbb
addl
cwtl
xchg
pop
hlt
in
scas
test
add
and
push
xor
mov
jnp
xor
pop
sub
mov
adc
push
out
jbe
jo
leave
cltd
jmp
jnp
sbb
cmp
sub
pusha
jne
push
pop
loop
cmp
jl
push
and
into
pop
inc
mov
adc
dec
mov
jmp
int
jl
mov
inc
insb
sbb
mov
lret
inc
mov
in
rolb
gs
aam
mov
sbb
push
sbb
pop
adc
push
pop
pop
sti
inc
mov
aas
xchg
dec
xchg
sub
lret
int3
shlb
adc
outsb
dec
shr
sbb
popa
arpl
jge
lods
add
sti
dec
out
add
sbb
xor
in
or
cmp
in
popf
test
ret
mov
push
sqrtps
jne
add
jbe
outsl
mov
ljmp
fildll
pusha
xchg
outsb
add
cmc
and
roll
addr16
mov
fidivl
cmpsb
lock
xchg
shl
jge
sti
insl
cmp
pop
and
fs
int
pushf
outsb
cwtl
pop
dec
push
int
sbb
vunpckhps
dec
dec
das
mov
fs
cmpl
out
daa
sbb
js
xor
cmpsb
sbb
xchg
pop
jmp
int3
or
ja
mov
inc
fucomip
imul
in
cmc
cs
and
cs
outsb
sub
hlt
dec
jo
lret
ret
or
rorb
add
jo
lahf
cmp
repz
dec
mov
jne
mov
cwtl
stc
pop
cmpsl
xor
loopne
xor
imul
shlb
dec
jo
pop
mov
xlat
fistps
sbb
call
jnp
inc
jg
lods
mov
xor
xlat
adc
cli
xlat
mov
aad
jmp
add
dec
incl
dec
stos
mov
or
inc
orb
inc
and
mov
ret
loopne
rclb
add
lea
stos
adc
or
stc
push
lret
cmp
out
scas
dec
jl
sbb
data16
shr
jne
inc
adc
das
jl
imul
je
roll
.byte
.byte
jae
gs
mov
mov
add
mov
add
mov
add
mov
add
or
sub
or
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
rorb
add
add
incl
add
add
rorl
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
fimull
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
in
dec
add
add
add
incl
add
add
dec
add
add
add
cld
dec
add
incl
add
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
or
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
adc
dec
adc
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
sbb
and
dec
add
lcall
dec
add
dec
add
incl
add
add
and
add
add
add
and
sbb
dec
add
incl
add
add
add
incl
daa
dec
add
stos
dec
add
jmp
dec
add
xor
add
add
add
incl
add
add
xor
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
cmp
add
add
incl
add
add
cmp
add
add
incl
add
add
add
add
incl
add
add
cmp
add
add
sti
ds
add
ds
add
add
add
incl
dec
add
dec
add
inc
inc
dec
add
inc
dec
add
movsl
dec
add
add
mov
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
inc
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
dec
add
add
add
jmp
dec
dec
add
dec
dec
add
jmp
dec
dec
add
in
dec
dec
add
dec
dec
add
incl
push
dec
add
dec
add
jmp
push
dec
add
pushl
push
dec
add
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
pop
dec
add
ljmp
cmpsb
dec
add
add
add
add
push
mov
add
orb
mov
mov
add
mov
add
mov
add
mov
add
or
sub
or
push
mov
add
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
movsl
imul
cs
inc
out
inc
out
insl
push
pusha
lods
fs
out
push
jnp
cmpsl
sub
bound
mov
xlat
cli
dec
les
add
lahf
pop
mov
dec
jo
iret
gs
jp
sbbl
push
sbb
jbe
ret
push
imul
xor
push
pop
divl
cmpsl
push
fsub
aam
or
jae
arpl
and
stc
repnz
xor
fs
addr16
jnp
push
cmp
out
push
fidivrl
or
mov
in
or
sbb
in
stc
sbb
dec
testb
int
rcrb
and
cli
in
insl
dec
dec
bnd
ds
in
repz
loopne
cmpsb
imul
mov
pop
sti
sub
pop
fstpl
mov
dec
sbb
in
ret
lret
push
jmp
add
ret
in
mov
xor
nop
ja
push
sub
test
insb
movsb
jmp
aad
mov
fists
into
mov
imul
or
movsb
or
xchg
cli
xchg
sbb
adc
mul
icebp
pusha
outsb
push
add
imulb
iret
adc
fildl
scas
pop
push
mov
xchg
call
cmp
and
movsb
ret
es
arpl
add
rcr
cld
test
dec
scas
loopne
imull
sub
sub
cmp
adc
lret
lock
sub
dec
in
ss
xor
and
xor
pop
mov
mov
push
push
or
xor
push
mulb
shrb
pop
lds
adc
stos
dec
and
push
lods
pop
loop
add
mov
mov
scas
fxch
sub
sahf
enter
and
and
pop
sbb
mov
daa
xchg
xchg
pop
mov
sbb
test
push
and
xlat
push
push
insl
jmp
rcrl
aad
mov
imul
insb
in
jp
popa
cltd
cmc
lods
and
inc
outsb
lret
lret
and
mov
sub
jge
jmp
movsb
test
addr16
test
sahf
jo
sbb
scas
mov
int
ret
les
shll
cs
xchg
insb
fsts
mov
fs
sbbb
stos
pushf
jmp
sbb
cld
inc
cmp
fcoms
outsb
inc
pop
idiv
dec
inc
sub
rcll
rorl
cltd
mov
push
inc
sbb
out
adc
push
dec
fiaddl
cmp
xor
aas
cwtl
jno
divl
jecxz
pop
xchg
jbe
or
js
mov
or
cmpsb
jl
loope
pop
test
cltd
divl
jge
push
cmovbe
repz
jmp
sbb
ss
mov
loope
gs
xchg
inc
jmp
sbb
enter
stos
inc
movsb
mov
cld
xor
adc
jmp
test
addb
fsubrl
or
dec
pop
iret
aad
cld
mov
mov
stos
xchg
sbb
pusha
pop
daa
pushf
pop
cmp
cmp
adc
sbb
mov
add
mov
sub
nop
xchg
cmp
xor
cltd
or
in
pop
movb
cwtl
les
ret
cmp
in
dec
jp
sbb
mov
in
imulb
int3
cmp
lea
cmp
sbb
and
cld
pushf
sub
in
es
std
pop
leave
mov
jecxz
push
in
popa
fdivl
inc
xchg
fs
aas
addr16
mov
orl
adcb
sti
and
into
or
pop
mov
push
into
push
adcl
mov
in
jno
mov
sbb
rorb
mov
inc
daa
xchg
xor
jmp
xor
pop
add
cltd
ds
mov
push
adc
dec
aad
jmp
push
imul
aaa
mov
push
mov
ja
cmc
rcrb
jg
jno
add
or
mov
jl
aaa
adc
jo
popl
dec
scas
dec
sbb
push
rol
mov
or
dec
ja
int3
mov
and
sub
leave
push
dec
in
dec
sbbb
sbb
pop
adc
iret
nop
insb
inc
fimull
addl
dec
cli
adc
aaa
dec
mov
add
pop
adc
push
dec
dec
stos
pop
sbb
ljmp
mov
aam
or
inc
sub
dec
fdivrl
das
jbe
stos
jo
sub
out
pop
test
loop
movsl
cmc
enter
subl
pop
scas
scas
je
loop
outsl
and
mov
leave
and
push
inc
adc
out
out
ret
shr
cmpsb
leave
bound
icebp
ss
fsubl
mov
cld
sub
iret
imulb
pop
mov
mov
and
into
xchg
mov
inc
insl
rclb
xchg
xor
fisttps
pusha
xchg
add
or
push
test
leavew
ds
dec
sub
inc
inc
push
stos
xchg
mov
adc
mov
out
sbb
mov
imul
into
int
dec
mov
sbb
dec
cwtl
push
adc
stc
daa
jae
jecxz
cwtl
pop
xorb
out
add
mov
mov
in
xchg
jl
xlat
push
lods
hlt
xchg
mov
inc
out
gs
ret
scas
lock
and
int3
ljmp
cmpsb
mov
mov
fnstcw
insb
mov
flds
das
push
rolb
lret
fnstenv
les
scas
mov
mov
test
push
xor
sti
xchg
jne
push
enter
add
sahf
std
lcall
sbb
gs
adc
cmp
fwait
xor
iret
jb
adc
rcl
xchg
adc
es
jmp
clc
xchg
cmp
das
or
lods
shr
cs
jle
dec
stos
xchg
nop
stc
dec
jno
stos
sub
aam
mov
sarl
inc
fstl
mov
fistl
cmp
inc
push
mov
add
cli
sub
mov
xor
jbe
inc
sahf
mov
aad
add
fwait
cmp
pushf
leave
into
sarl
lods
dec
int3
fdivs
jo
xorl
pop
imul
scas
sahf
xor
icebp
in
addr16
dec
mov
or
pop
xchg
pop
rcrb
lret
push
xchg
adc
imul
pop
pop
cld
shll
add
in
sahf
aam
or
mov
push
outsl
movsl
xorb
add
jne
mov
and
pop
or
addr16
int
or
cmp
push
pop
js
popa
inc
jae
mov
cmpsl
or
push
cmp
je
mov
les
jno
adc
xchg
xchg
mov
jg
push
ljmp
mov
mov
lods
push
jg
cmp
adc
test
push
test
adcl
nop
out
stc
xchg
lock
cmc
or
cmpsl
jnp
addr16
jae
mov
adc
shr
leave
pop
pop
dec
xor
or
adc
out
inc
out
rclb
je
inc
sbb
in
testl
fcmovb
fsubrs
push
fcoms
jg
arpl
gs
ss
popa
mov
jnp
add
bnd
movsl
or
xchg
jb
daa
iret
fadd
insb
sahf
adc
pop
filds
in
ja
pusha
and
jns
xchg
lcall
adc
and
sub
into
dec
es
add
dec
adc
adc
cld
repnz
push
and
pop
xor
andps
stos
aas
jnp
sbb
sbb
je
scas
add
rcrb
shrb
inc
push
shl
in
mov
add
leave
inc
aam
sbb
and
bound
ds
fs
inc
pusha
pop
mov
int3
pop
xlat
scas
mov
stos
in
mov
push
mov
nop
mov
mov
popa
popa
sbb
lock
movsl
pop
icebp
pop
jb
das
pop
js
movsb
fcoml
sbb
mov
popa
push
mov
inc
leave
xor
insb
and
pusha
push
lret
inc
loopne
and
test
push
jl
mov
sbb
rorb
dec
in
lahf
add
or
jbe
js
sbb
lds
imull
sub
test
roll
aas
aas
stc
xlat
sbb
and
jle
fisubrl
xchg
inc
int
test
push
push
mov
xchg
sub
lret
das
fmull
adc
loopne
pop
je
push
xchg
scas
lock
fimull
out
popa
int3
int3
jae
pop
jmp
mov
mov
divl
hlt
test
mov
xor
mov
arpl
mov
sbb
sbb
push
pushf
cli
xchg
sti
sahf
and
pop
add
int
shll
inc
ror
fwait
lret
shll
dec
pop
cmp
mov
pop
add
jno
stc
ficompl
dec
dec
in
dec
xlat
ja
xor
jns
mov
fistps
les
pop
dec
xchg
fwait
sub
jmp
jne
sub
sub
stos
dec
in
jns
push
ficompl
lahf
nop
mov
jne
nop
and
por
cmp
or
push
mov
xchg
stos
mov
pop
mov
lret
cmpb
mov
adc
cmp
pop
xor
and
shlb
cli
xor
fmuls
mov
mov
pusha
stos
fs
int3
mov
frstor
stos
imul
mov
xor
mov
int3
ljmp
enter
pop
push
aas
mov
sahf
ror
mov
arpl
jae
shrl
mov
adc
xor
out
xchg
arpl
call
bound
rolb
dec
fildl
mov
and
push
arpl
lret
mov
jg
and
pop
and
scas
daa
pop
hlt
dec
xchg
jns
dec
pop
nop
fidivrs
sub
jp
loop
ret
mov
aas
push
inc
out
mov
filds
mov
add
scas
cmp
ror
sbb
add
imul
jle
sub
pop
out
dec
or
pop
adc
ljmp
test
sbb
jg
cmp
fsubs
inc
mov
clc
jne
or
orl
and
push
ficoml
adc
and
dec
imul
push
adc
not
ss
cs
cmp
dec
mov
jnp
iret
cs
dec
jno
aad
pop
xlat
sub
cmp
xchg
mov
sbb
lock
sbb
cmc
dec
popf
xchg
movsl
js
nop
dec
or
addl
mov
pop
pop
xchg
pushl
jp
mov
push
cli
lret
pop
jne
cmp
add
inc
and
test
fcomp
mov
ret
fs
push
push
mov
scas
mov
icebp
inc
pushf
je
in
jae
loope
jmp
cmp
push
in
jne
lods
sub
es
adc
lds
jbe
icebp
mov
cmp
scas
cwtl
ja
adc
or
lcall
ficoms
daa
aad
inc
test
mov
mov
jg
cmp
mov
movsb
shlb
addr16
and
pusha
xchg
pop
adc
adc
and
push
icebp
ja
shlb
dec
pop
fs
add
cld
add
fucompp
mulb
gs
in
dec
xor
enter
shll
std
in
or
imulb
mov
xor
mov
push
sub
or
imul
call
jmp
lods
pusha
loope
xor
xchg
push
mov
sbb
pop
add
daa
mov
repz
push
add
pop
mov
adc
pop
test
les
adc
iret
test
inc
jbe
push
into
lret
ds
mov
xchg
repz
fldenv
scas
pop
aam
rolb
add
dec
jg
imul
lahf
out
xor
orb
outsl
xor
test
mov
rorl
xor
test
pop
dec
out
dec
cmpsb
inc
sbb
adc
push
push
xchg
pop
cmc
nop
icebp
add
sub
mov
jns
fnstcw
pushf
pop
aam
les
test
mov
or
pop
and
push
xchg
cmp
mov
dec
and
pop
repz
loopne
les
sbb
movsl
pusha
sub
sti
icebp
ja
mov
cmp
pop
repnz
dec
adc
push
mov
and
loop
dec
ja
jecxz
adc
push
mov
ret
jnp
push
xlat
loope
sub
xchg
lds
adc
outsb
xchg
ljmp
ret
sub
sbb
or
sbb
lds
push
pop
xlat
xchg
rcl
pusha
mov
leave
push
dec
fidivl
mov
mov
push
in
xchg
add
test
or
xchg
mov
mov
fstpl
jcxz
hlt
cld
leave
bound
xchg
stc
gs
jae
outsl
adc
mov
mov
daa
add
jns
adc
call
mov
dec
mov
fcmovnu
mov
dec
cmp
js
inc
pop
jmp
test
mov
push
scas
aaa
outsb
imul
and
in
cmp
shl
fadds
mov
cltd
xchg
inc
iret
ret
xor
jbe
cmp
sub
das
sub
in
jnp
lock
sbb
cmc
xchg
pop
sbb
cmp
in
sti
xchg
sub
xchg
in
push
cmc
xor
sbb
lds
xchg
add
inc
sub
das
push
movl
popa
scas
sbb
int
or
mov
repz
xchg
dec
mov
sub
xor
sti
scas
ss
test
xchg
mov
add
add
ret
mov
aaa
lea
sbb
fisubl
popf
sbbl
popa
or
or
and
inc
mov
test
stos
cmp
or
xchg
notl
hlt
cmp
in
je
int
dec
das
mov
or
pushf
sbb
mov
nop
scas
loope
cmc
cmp
std
outsb
jo
ss
add
cmpb
dec
or
mov
jbe
pop
insb
daa
aad
xor
push
sub
imul
pop
jge
std
fucom
push
ja
into
push
mov
lcall
sbb
xchg
iret
out
fstps
inc
cmc
xchg
mov
repz
xor
mov
xlat
xchg
and
jbe
or
sti
pop
dec
lods
outsb
or
insl
xor
stc
jmp
scas
rcll
cmp
fadds
xchg
jns
jnp
fcmovb
fldl2e
lds
pop
enter
jg
nop
es
lret
icebp
dec
fstps
jecxz
pop
mov
push
mov
pop
shlb
add
mov
xchg
push
mov
cmp
adc
add
pop
out
sub
cmp
dec
jle
or
cmp
aaa
fdivl
ret
ficompl
dec
sub
mov
incl
fs
sbb
daa
loope
int
add
sub
lret
cmp
push
xadd
popf
sub
arpl
xchg
ljmp
adc
arpl
and
pop
sahf
inc
int3
jno
push
ror
sub
daa
fscale
icebp
push
push
ror
push
fstpl
leave
inc
inc
pop
jo
jl
mov
jecxz
in
adc
sub
sub
jle
pop
adc
pop
adcb
addb
pop
ljmp
fcoml
xchg
and
jge
dec
ja
sbb
push
scas
cld
cmp
add
or
decl
jmp
jbe
out
mov
and
fs
test
insb
fs
pushf
sub
lret
or
outsb
movsl
sbb
fmuls
jge
push
push
loope
lods
int
insb
fpatan
lcall
sahf
dec
or
adc
popf
dec
cs
jecxz
leave
mov
out
addr16
fildll
bound
lret
sub
or
mov
dec
je
call
imul
push
fisubrl
push
insb
loopne
xor
fs
ds
ficoms
pop
xchg
and
ss
mov
aad
ljmpw
jnp
inc
les
inc
inc
pop
clc
push
sbb
push
repz
stc
inc
and
ret
mov
ja
dec
jecxz
sub
push
lods
lds
xor
fwait
js
mov
push
cli
sbb
dec
lods
xchg
add
cmpsl
xor
lret
cmp
xor
cmova
loop
hlt
mov
daa
js
stos
xchg
xchg
scas
mov
fidivrl
iret
jecxz
gs
jp
adcl
lret
out
jns
imul
xchg
adc
jmp
cmpsl
aad
xlat
fs
jecxz
jns
enter
add
inc
in
xchg
int3
jb
add
and
and
adc
int3
dec
dec
imul
jb
adc
xor
shll
dec
pop
add
lock
mov
pop
add
mov
push
inc
fistpl
out
ljmp
ret
shll
pop
call
push
xchg
lods
cmp
sbb
lea
sub
mov
push
in
jmp
mov
outsl
test
mov
das
dec
sahf
loop
xor
or
nop
sbb
mov
pushf
push
xchg
loope
jle
test
sub
and
jecxz
mov
mov
jne
and
daa
pop
int
mov
adc
adc
pop
push
adc
mov
adc
xorb
pop
xor
jbe
mov
movb
jmp
fld
or
gs
aad
cwtl
fucomp
ja
fsubrl
insl
push
inc
mov
das
negb
sub
fstpt
sbb
imul
ja
lds
jg
cmp
or
roll
shrl
adc
inc
mov
xchg
jne
dec
dec
test
sbb
in
ja
mov
pop
xor
negb
xor
cs
xchg
nop
rclb
ret
mov
jge
cmp
inc
fimull
adc
scas
aad
inc
cmp
pop
or
test
push
or
pop
push
fcomps
sbb
jne
push
mov
xor
xor
enter
jae
sub
in
push
addl
add
ret
pop
push
hlt
aad
fmull
pop
frstor
repnz
leave
bnd
adc
jns
imul
addr16
mov
sbb
shll
shlb
rcrl
icebp
ret
mov
into
and
lret
mov
mulb
pushf
xor
adc
pop
mov
or
decl
test
xchg
hlt
xchg
mov
cmp
sbb
je
lods
in
inc
sbb
pushf
cmpb
cli
in
popf
int3
or
in
mov
xchg
jmp
test
xchg
sub
push
aas
or
push
movsb
add
and
mov
sbb
fwait
xor
and
push
jg
orb
mov
xchg
loope
xchg
cmp
mov
in
dec
adc
adc
sbb
push
adc
push
int
mov
into
mov
jb
add
push
movsb
es
push
adc
pop
stc
rol
out
pop
mov
lret
mov
dec
ret
andl
pop
add
ss
sahf
and
lods
cmpsl
xchg
out
adc
and
ret
jp
dec
hlt
inc
addr16
adc
push
aad
test
dec
mov
roll
loop
rorb
int3
shrb
fnsave
dec
lea
inc
add
jns
mov
adc
xor
jnp
fwait
imul
mov
cmp
inc
cmp
lods
jg
sub
ja
lods
rcll
pop
sbb
fidivs
xchg
lret
ret
mov
jo
aam
push
bound
or
lods
dec
jne
sbb
rcrb
repnz
and
cltd
sbb
mov
bound
inc
sub
cmpsl
hlt
push
cmp
sub
push
iretw
inc
std
int
repnz
xchg
ret
aas
sub
sbb
pop
pop
loop
jl
imul
dec
pop
aas
das
dec
sahf
ljmp
lret
add
pop
sbb
call
rcrb
jns
loopne
out
jmp
and
push
and
sbb
inc
mov
aaa
push
addr16
cmp
out
cltd
and
mov
pop
pop
aad
mov
fcoml
push
pop
insb
enter
dec
dec
out
test
xchg
adc
test
sbb
aad
mov
xchg
push
lahf
in
ds
sarb
cmp
xor
dec
ret
movsl
in
js
add
roll
outsb
and
int3
insl
xchg
mov
sahf
inc
xchg
loop
stos
imul
pop
or
add
ds
shrl
or
xor
rolb
adc
imul
shrl
jg
add
jecxz
out
jbe
mov
in
cmpsb
mov
sti
xchg
pop
xchg
pop
push
fwait
mov
sahf
aaa
pop
fwait
mov
sub
push
jbe
xor
clc
xor
imul
sbb
insb
cmp
pop
or
lods
data16
and
push
test
sub
or
mov
jns
jl
xchg
jb
inc
and
cmp
jecxz
and
xchg
sahf
cmp
sbb
mov
dec
lods
pop
push
mov
add
dec
test
imulb
ficoms
lods
dec
mov
loopne
jno
jno
add
in
pop
mov
outsb
mov
ret
mov
push
adc
jl
and
inc
add
inc
cmpsl
stc
scas
mov
sbb
sahf
in
inc
cmp
dec
sbb
clc
mov
scas
xchg
or
cwtl
mov
and
call
test
idivl
xchg
and
pop
fstps
out
and
mov
decl
scas
jns
cmpb
lret
mov
fwait
xchg
in
adc
pop
push
jg
enter
xchg
movsl
mov
xor
aad
add
sarb
out
adc
add
add
fnstsw
sar
roll
andl
mov
ds
mov
loop
mov
adc
insb
ds
cmp
or
std
jl
in
add
xchg
xchg
sbb
mov
notl
aad
addr16
mov
pop
mov
std
imul
gs
pop
leave
inc
ret
test
imul
mov
das
out
call
in
pusha
vpaddw
out
loop
or
leave
divb
lret
jle
push
xor
dec
and
jle
lods
and
jbe
sahf
xchg
test
mov
jecxz
cli
stos
test
cmp
sub
mov
mov
orb
mov
sar
sub
pop
pop
sub
and
sti
pop
insl
dec
inc
jns
xor
icebp
dec
lock
inc
push
push
std
add
xchg
in
nop
.byte
.byte
