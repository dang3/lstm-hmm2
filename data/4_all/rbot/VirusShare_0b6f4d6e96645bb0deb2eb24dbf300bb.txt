jl
or
xchg
mov
orb
icebp
push
rcll
fstps
lahf
mov
add
xorl
xor
mov
outsl
cli
jmp
mov
xor
adc
mov
into
into
inc
int
call
fcomps
dec
or
imul
sub
fistpll
cmp
mov
pop
sub
add
pop
push
rorl
rorl
sbb
push
add
mov
jg
push
sbbl
jne
add
sti
insl
push
xchg
jo
pop
decb
pop
xchg
and
pop
jge
out
sub
bound
jl
cmp
ret
scas
jmp
call
push
xor
and
mov
inc
flds
jnp
arpl
insl
cmp
push
js
aas
iret
jbe
shlb
fadds
outsl
jg
mov
jne
jns
enter
int
xchg
mov
mov
negl
aad
std
adc
dec
mov
mov
clc
addr16
fdivrs
jecxz
add
sbb
dec
xchg
mov
stos
cmp
and
mov
shlb
lds
bound
aad
pusha
jmp
lods
mov
jmp
aaa
shrl
sbb
lods
lods
dec
mov
push
mov
dec
sbb
js
ret
test
mov
int3
shll
inc
mov
negb
or
clc
adc
jl
push
push
mov
jmp
loopne
xor
sbb
pusha
inc
pop
movsb
inc
and
mov
push
mov
mov
jge
cmp
jle
test
popa
movsb
mov
add
lcall
aam
mov
rorb
add
cmp
test
leave
add
das
bnd
add
das
mov
hlt
vpmacssdqh
jbe
mov
popf
xor
xchg
stos
and
pop
adc
movsl
fisttpll
mov
push
mov
push
jp
mov
mov
jl
mov
and
adc
mov
aaa
int
jo
lret
movsl
fwait
push
xchg
decb
stos
sti
dec
scas
in
jae
cmp
ljmp
cmp
adc
add
dec
add
lds
and
cli
mov
xor
inc
dec
add
xor
aad
loopne
jge
or
popl
aas
jmp
aam
cmp
cmpl
rclb
sub
sahf
inc
inc
fwait
lahf
mov
xchg
les
test
aaa
xchg
imul
lret
sub
addr16
xchg
mov
out
cs
pop
pop
out
lods
out
repz
and
sub
add
orb
push
sbb
pushf
in
mov
mov
inc
les
sahf
fcomip
dec
and
fwait
in
cmp
test
jecxz
imul
add
flds
lahf
fists
incb
movsb
into
push
inc
addr16
add
lret
xchg
ret
enter
nop
inc
divl
insl
in
dec
fdiv
ffreep
xchg
dec
sbb
mov
lcall
decb
push
enter
xor
mov
cmp
insl
mov
or
push
pusha
add
mov
push
rorl
lods
lds
add
loop
push
sbb
scas
sub
push
testb
and
mov
pushf
sahf
call
adc
xlat
xor
aas
pop
leave
out
jle
mov
aaa
incl
lods
in
mov
lods
iret
mov
aaa
xchg
test
pop
in
imul
add
std
jp
xor
adc
insb
xchg
sub
out
push
jp
or
data16
out
fdivr
in
js
and
push
decb
ftst
lcall
test
hlt
mov
xchg
mov
inc
cld
xchg
xchg
ds
add
fisttpll
add
add
fisubrl
push
sbb
push
jb
in
scas
cwtl
push
push
pop
sbb
add
pushf
dec
add
jp
push
in
stos
add
cmp
jbe
mov
das
sbb
pusha
xchg
add
or
mov
ds
cs
cmpsb
fcompl
imul
and
cli
nop
inc
addr16
fld
xor
fs
sub
xchg
cmp
cs
sbb
mov
stc
mov
cli
pop
fsubl
adc
inc
sbb
dec
xor
mull
xchg
pop
xacquire
cltd
in
loope
jmp
dec
add
push
addb
shll
inc
mov
dec
sbb
stc
and
add
mov
and
sub
add
fisubl
push
or
pusha
inc
sti
xchg
jecxz
and
pop
pop
mov
pop
in
mov
test
syscall
inc
lods
inc
push
add
mov
dec
movsb
mov
stos
cmp
enter
mov
jb
ja
pusha
sbb
stc
mov
rclb
repz
xchg
out
sbb
repz
and
jne
ret
sub
fsubr
lods
sub
sbb
xchg
lcall
decb
adc
rcrl
mov
push
test
in
sub
sub
sub
dec
shlb
outsl
dec
cmp
pop
imul
push
xor
sbb
imul
push
int3
mov
iret
test
push
jns
fdivl
or
test
adc
mov
andb
sbb
mov
out
xchg
pop
mov
add
adcl
mov
pop
push
mov
mov
ja
sub
sbb
jne
mov
cmc
xor
out
or
xor
cli
popf
fwait
enter
test
ss
das
in
mov
sbb
rolb
movsl
cmpsb
imul
and
popl
scas
and
repnz
push
outsb
fstps
add
ret
inc
sbb
pop
data16
and
ds
adc
sub
adc
push
xor
cwtl
ds
cmp
xchg
lahf
sub
inc
mov
mov
inc
aam
pop
mov
mov
pop
mov
ror
std
ds
ficomps
fs
shlb
cs
mov
or
sub
cmp
add
inc
xchg
out
pop
mov
dec
test
sbb
lcall
icebp
push
or
movsb
jp
sbb
icebp
pop
lcall
enter
cli
add
mov
mov
lock
add
icebp
aad
test
leave
repz
and
mov
and
aaa
jg
mov
xchg
sbb
xor
mov
nop
nop
sti
repz
cmp
push
xor
sbb
es
pop
pop
fsubrl
out
and
js
mov
call
and
inc
call
sub
fldenv
xlat
and
xchg
jb
ret
mov
sbb
jae
jmp
sbb
pop
daa
daa
mov
negb
jo
shll
imul
call
test
and
mov
iret
add
sub
push
fdivs
out
out
mov
in
inc
mov
movsb
push
inc
mov
js
aaa
fdivrs
fisubrs
gs
fucomip
push
shrl
and
rcr
fnsave
or
jb
and
add
jbe
cwtl
sub
xchg
adc
sub
leave
sub
nop
xchg
xchg
lret
xor
lret
pop
mov
enter
add
xor
adc
or
testl
mov
cwtl
in
xchg
or
fwait
outsl
sub
mov
xchg
loope
jl
pop
pop
cli
xchg
xchg
push
adc
shlb
mov
mov
sub
pushf
insl
and
test
in
aaa
adc
mov
mov
pop
test
sub
sub
movsb
push
pop
inc
pop
fdiv
dec
dec
push
rcll
iret
shl
fs
sbb
jne
push
ja
loop
xchg
in
stos
bound
shrb
cmp
and
mov
stc
lods
mov
mov
add
or
xor
dec
ja
jg
or
es
rorl
iret
sbb
push
add
fistps
xchg
push
or
and
out
push
into
mov
xchg
cltd
outsl
jb
arpl
dec
sbb
das
xchg
mov
imul
mov
lea
push
xorb
into
xor
aaa
jle
jecxz
movsl
out
mov
pop
or
shl
nop
and
and
outsb
xor
pusha
mov
inc
dec
cmp
addb
aaa
fsts
or
scas
sub
cmp
in
bound
pop
loope
lcall
mov
add
inc
sahf
sub
xchg
add
mov
add
inc
push
sbb
movsb
xor
shl
or
lret
fcomps
cltd
sbb
mov
stos
fsubr
int3
std
cmpsl
int
loope
repz
fbld
fildll
int3
shlb
pop
xchg
cltd
insb
push
push
fdivrl
mov
into
movsl
sti
jg
ret
mov
testb
popf
addr16
loope
ror
adc
leave
dec
lahf
adc
jae
iret
test
fstpt
push
psrad
fidivrs
push
adc
pushf
cld
shl
cld
push
jge
lods
add
jb
cmp
xchg
jl
xor
mov
ss
rep
add
nop
or
pop
imul
jno
insb
and
add
popf
pop
pop
xchg
xchg
lock
loope
xor
xor
xchg
mov
dec
push
xor
stos
push
jg
dec
push
adc
scas
push
add
sti
xchg
subb
jmp
mov
cmpl
arpl
jle
sti
mov
scas
imul
pop
jp
xchg
stos
insl
jl
les
jb
stos
loopne
fstpt
daa
mov
cmp
hlt
mov
outsb
cld
xor
mov
inc
jge
outsl
imul
pop
hlt
cmp
push
dec
ret
call
push
roll
push
sbb
andl
hlt
jae
movsl
outsl
addl
pop
aad
and
stos
sahf
and
mov
dec
pop
mov
mov
sub
test
leave
cmp
scas
stos
sbb
mov
int3
xor
andl
outsl
xchg
rcll
pop
rcrb
mov
mov
scas
add
out
xchg
imul
js
testb
xor
add
pop
testl
pop
push
jp
inc
adc
jg
lret
mov
inc
adc
inc
int
sub
insb
daa
mov
cs
xchg
cmpsl
int
mov
mov
lods
pop
xchg
ja
hlt
pop
mov
mov
inc
subb
jnp
aam
leave
jge
fyl2x
xchg
aas
fcomi
push
xchg
leave
pusha
rorl
dec
fldenv
sub
in
sbb
ret
repz
sub
inc
cmp
aad
mov
jns
jl
cwtl
xor
in
loopne
rep
ret
xor
movsb
sarl
inc
test
mov
outsl
jp
dec
mov
jb
daa
fs
movsb
mov
mov
add
sbb
inc
lea
and
clc
and
imul
leave
jge
push
pop
fiadds
ret
pop
jne
pop
nop
subl
mov
lret
adc
dec
repnz
test
mov
dec
and
pop
pop
test
dec
ja
imul
mov
xor
mov
hlt
mov
iret
inc
pop
xchg
mov
mov
add
xchg
out
shld
ljmp
mov
xchg
push
sbb
mov
mov
inc
mov
cmp
loopne
int
adc
rolb
add
int3
dec
and
lret
repnz
push
xchg
sbb
xchg
push
ret
xor
call
xor
inc
icebp
test
mov
pop
dec
popf
leave
or
hlt
inc
mov
mov
pop
push
sahf
stc
loope
les
cmp
sbb
mov
push
int3
push
fnstenv
loopne
std
inc
xor
aaa
arpl
jns
mov
leave
ret
mov
xor
insl
sbb
pop
sub
fbld
xchg
sbbb
cmp
and
addr16
stc
cmpsl
movsl
inc
push
arpl
pop
mov
imul
mov
or
cmp
sbb
add
fbstp
mov
movsl
and
or
push
icebp
out
stos
ja
jge
pop
das
lret
jge
out
xchg
scas
xchg
mov
outsl
jmp
cmpsb
xchg
jnp
or
fcomps
jae
stos
lret
lret
aad
or
lods
add
mov
aas
aas
xchg
lret
push
mov
dec
loop,pn
ret
shll
push
adc
xlat
enter
sub
insl
out
sub
inc
mov
dec
inc
cmp
lret
mov
lds
sahf
ljmp
std
or
lods
mov
xor
sub
cmp
and
loope
push
les
and
ljmp
and
outsb
dec
mov
sub
cmpsb
xchg
add
lahf
cmpsb
adc
cs
xchg
stc
scas
imulb
push
aaa
cmpsb
outsl
xor
nop
jge
iret
movsb
aam
insl
inc
adc
cmp
cmpsl
cltd
dec
mov
test
mov
mov
dec
and
int
and
xchg
pop
std
xchg
xchg
sub
dec
gs
clc
cmp
cld
cmc
std
dec
decb
sarb
jmp
clc
or
pop
jge
sarl
ror
cmpsl
mov
addb
and
sbb
adc
out
mov
pop
jecxz
jno
fnsave
enter
pop
add
in
mov
sub
inc
lret
adc
push
loopne
xor
loope
inc
xchg
fldenv
loop
xchg
pushw
or
lret
cmpsl
xor
sub
or
inc
push
mov
xorl
adc
inc
dec
inc
push
mov
popf
cmp
mov
js
pop
in
jnp
ljmp
or
stos
out
jbe
je
push
mov
stos
leave
imul
scas
xchg
fcmovb
repnz
and
test
add
push
jmp
lahf
cmc
pushf
mov
add
cmp
cmpsb
cwtl
daa
push
repnz
scas
mov
mov
mov
gs
add
push
leave
outsl
popf
test
mov
leave
sub
pushf
inc
sbb
mov
je
jg
xchg
mov
xchg
in
stos
fcomps
call
sar
dec
sub
jne
mov
stos
stc
push
mov
adcb
mov
xor
sub
loope
jo
sbb
xchg
hlt
sbb
sbb
or
sub
adc
dec
jg
in
mov
clc
and
push
pop
ds
dec
fwait
mov
xchg
inc
fstl
ja
add
subb
mov
test
push
mov
imul
jecxz
fadds
cmp
scas
pop
cmp
cltd
adc
mov
xor
jb
cmc
and
xorb
or
aad
mov
add
push
pop
aas
add
ljmp
int
div
cli
pop
mov
movsl
mov
sbb
imul
das
mov
lret
xchg
clc
mov
fstpt
dec
sbb
mov
mov
test
xchg
pop
pushf
push
adc
arpl
mov
xchg
hlt
fs
cld
xor
shrb
jno
inc
or
and
adc
fs
cmp
imul
mov
fistl
xor
xchg
sub
sub
jno
mov
cmp
mov
mov
scas
ja
sbbb
jne
sbb
jbe
mov
clc
pop
pop
scas
pop
inc
call
ja
push
and
inc
loop
mov
das
aad
sbb
testb
std
cltd
mov
mov
movsl
mov
pop
dec
fcmovb
cmc
or
js
test
ret
lret
in
cmpb
push
sbb
add
cltd
inc
or
sub
add
hlt
in
fbstp
fisttpl
dec
mov
aas
repz
ja
cmp
mov
out
jnp
jecxz
enter
jmp
nop
xchg
rcl
sbb
icebp
mov
sub
cltd
scas
in
mov
xchg
lcall
xor
adc
repnz
not
shrl
jg
ret
lods
xchg
sbb
daa
pop
or
dec
sub
and
inc
std
pop
push
mov
push
push
mov
push
ljmp
fwait
out
xchg
ffreep
jge
testl
mov
leave
add
in
shr
mov
std
jg
cmc
out
cmp
mov
add
addb
pusha
inc
lds
lods
pop
stc
shl
cwtl
or
pushf
mov
je
mov
test
mov
push
cmp
mov
and
out
adc
xchg
and
and
sarl
ret
add
fbstp
ljmp
inc
and
scas
mov
inc
out
mov
mov
scas
adc
das
test
adc
mov
mov
push
bound
fcmovnbe
push
mov
popf
push
sarl
loopne
call
jp
dec
lods
imul
xchg
clc
mov
popa
fidivl
mov
mov
mov
aaa
mov
inc
pop
sub
mov
jl
mov
ljmp
xchg
jae
pop
outsl
jp
cld
and
fidivs
stc
mov
pminsw
icebp
mov
jg
mov
add
mov
lds
mov
xchg
xor
mov
xor
jecxz
imul
imul
jnp
hlt
test
push
mov
rcrl
cmp
mov
sub
push
leave
sub
mov
scas
cwtl
loop
test
and
mov
sub
jmp
arpl
mov
mov
dec
mov
int3
mov
fscale
mov
xchg
sbb
imul
imul
mov
mov
daa
jne
push
addr16
mov
les
cmp
data16
cltd
cld
arpl
xchg
jmp
in
stos
cmp
mov
inc
lret
jg
dec
lret
inc
scas
jmp
pop
rcrl
adc
mov
add
in
fidivs
rcr
in
xchg
xchg
fstpt
pop
sbb
or
adc
inc
jmp
mov
ds
cmp
notl
sbb
enter
pop
in
hlt
lcall
sub
rcrb
aas
sbb
add
in
lcall
xor
sub
rol
xchg
mov
xor
fsubs
call
fldcw
inc
mov
add
mov
or
popa
pop
insb
imul
cmpsb
imul
mov
aam
test
fs
fdivrl
pop
mov
jns
iret
push
ss
mov
int3
cmp
xchg
mov
cmpsb
xor
idivl
ficoml
test
jecxz
pop
icebp
add
mov
sbb
movsl
pop
fldt
adc
push
mov
pop
inc
test
sbb
lea
jl
fildl
nop
mov
sub
in
loopne
loope
push
cmpsl
fucomip
mov
xor
jge
pop
icebp
mov
fstpt
pop
icebp
jne
icebp
test
fsubrs
or
or
mov
sub
pop
adc
scas
lods
push
xor
es
fdivl
sarl
dec
fsubs
add
cmp
in
and
xchg
xchg
adc
pop
lahf
rcr
popa
rorl
push
lods
movsl
shll
adc
pop
pushf
outsb
dec
sti
enter
mov
fidivrl
pop
jmp
jae
pop
loop
push
pop
inc
push
je
mov
and
sbb
xlat
ds
popf
pop
movsl
and
test
push
pop
imul
pop
cs
or
aas
dec
scas
push
adc
or
xchg
add
or
andb
pop
iret
mov
arpl
lret
mov
or
out
pop
shl
fs
lea
lret
sub
mov
xor
loope
shr
push
lods
jp
xchg
es
push
roll
adc
outsl
in
sbb
enter
roll
add
sub
lods
rcrl
cmpsl
mov
leave
push
aas
test
cmp
cli
das
pop
jno
rcr
test
fsubrl
flds
daa
ret
insb
les
xchg
push
xchg
xor
int
imul
or
fldln2
jns
out
out
stos
mov
cli
and
sub
xorb
cmp
pop
xor
sub
fimull
dec
xchg
fdivrl
das
rol
scas
pop
xchg
stc
repnz
in
dec
popf
call
cwtl
in
imul
push
jbe
pop
stos
clc
shrl
mov
bound
xchg
mov
icebp
sub
mov
adc
cmpsb
stos
aas
scas
pop
jae
orl
xchg
mov
test
or
mov
and
lea
je
cmp
sub
or
sahf
lock
sbb
call
and
mov
and
push
lock
or
iret
sarl
hlt
xchg
pop
pop
and
scas
fistps
repnz
fyl2x
or
add
in
add
inc
dec
test
add
out
xchg
add
mov
and
popa
outsl
leave
mov
dec
sbb
push
imulb
sbb
pusha
in
jg
adc
or
lods
stos
jp
sbb
fsubrs
cmp
adc
pop
or
dec
inc
loopne
adcl
pushf
mov
dec
lahf
jl
jae
cmp
and
dec
jno
mov
jmp
mov
mov
ret
mulb
and
sahf
jecxz
or
bound
xor
pop
shrb
cmpsl
adc
mov
mov
mov
push
rcrl
in
push
push
lret
fnstsw
mov
in
lea
push
or
mov
imul
out
shlb
in
jmp
xchg
mov
cmp
ret
adc
jle
or
cmpsl
outsl
jne
dec
dec
sarb
and
xchg
in
add
xor
mov
bsf
add
inc
das
pop
xor
inc
rorl
jno,pt
sbb
add
pop
sub
push
cs
mov
xor
dec
push
cmp
mov
push
ja
mov
pop
lret
xor
mov
jecxz
fistl
and
repz
lds
sbb
mov
inc
call
jl
shlb
mov
sub
nop
mov
push
fcoms
add
cld
test
push
leave
pop
cli
xchg
test
rorl
jmp
ljmp
movsb
cli
mov
add
mov
mov
scas
fisubs
push
pop
cwtl
lret
cwtl
pushf
mov
mov
push
loopne
and
pushf
cmp
sub
sarb
jge
movsl
adc
inc
ds
and
rorb
in
je
je
je
iret
sbb
pop
movsb
add
xchg
adc
rcr
dec
nopl
pop
hlt
jb
jb
or
pop
dec
and
in
xchg
jae
stos
inc
cmp
rolb
aam
in
jecxz
std
and
and
insl
cltd
xor
sub
hlt
divl
aas
imul
inc
or
aad
sbb
sub
notl
mov
rol
aad
arpl
dec
mov
jo
popf
outsb
cmp
jecxz
arpl
aad
mov
ret
sub
mov
int
pop
and
fcompl
mov
es
jne
fidivs
fwait
inc
or
jecxz
xchg
cmpsb
mov
cmp
call
jmp
scas
sub
sbb
adc
jns
and
xchg
jne
lods
aas
inc
ss
inc
icebp
aaa
cmc
push
clc
fwait
into
jmp
jl
lcall
data16
adc
into
push
imul
test
pop
push
xor
gs
xchg
push
out
xchg
inc
mov
add
pop
cmp
mov
push
cld
je
adc
and
pusha
pop
mov
notl
push
dec
data16
jb
cmp
inc
popa
mov
sbb
out
push
iret
push
mov
pop
push
loop
inc
push
xchg
loop
stos
jne
insb
or
cmp
jmp
cmp
pop
pushf
xchg
fs
dec
flds
cmpsb
cmp
cmp
inc
sarl
das
mov
hlt
loope
xor
mov
fistpll
jge
jp
jmp
and
or
pushf
out
call
adc
jmp
ljmpw
add
xorl
pop
pop
cmp
lret
add
into
arpl
pop
push
pop
push
xchg
or
cmp
dec
rep
push
jb
cmp
xor
ljmp
sti
lds
cmpsl
adc
shll
mov
xchg
pop
mov
add
xchg
outsb
arpl
pop
pop
pop
pushf
insl
jmp
int3
mov
hlt
scas
mov
idiv
jp
pop
nop
or
pop
xchg
lods
xchg
or
jge
mov
mov
shl
mov
mov
mov
out
test
dec
mov
push
xchg
fdivrl
lea
cltd
and
xchg
in
inc
xchg
je
out
out
test
mov
aas
dec
push
mov
jecxz
add
pop
movsb
mov
push
cld
addl
int
sub
dec
movsb
std
mov
jle
imul
mov
loopne
repz
int3
fwait
xchg
cmc
leavew
pop
hlt
lret
and
loop
adc
inc
dec
jo
jmp
pop
aas
push
xor
outsl
dec
sti
imul
sti
push
pop
bound
fisttpl
dec
xor
jecxz
jno
jmp
cmp
fists
sbb
leave
stos
sbb
mov
lahf
fldt
add
jl
dec
test
insl
add
enter
sbb
addr16
movsl
mov
inc
adc
jno
or
push
movsb
fsubrs
movsl
xchg
mov
cld
push
xor
or
xor
jne
push
push
imul
push
mov
scas
and
or
add
imull
insb
test
jle
pop
in
xchg
xchg
mov
mov
lahf
lcall
xchg
bt
popa
inc
cmpsl
orb
dec
xchg
xchg
in
lods
mov
in
testb
stos
inc
rol
rclb
test
mov
jns
mov
mov
sub
aad
jge
adc
and
xchg
add
insl
jecxz
fwait
cmpsb
in
pushf
fs
pop
testl
out
jp
add
pop
in
mov
inc
mov
push
xchg
fisubl
push
pop
lcall
mov
bound
dec
stos
cmp
lea
outsb
lods
mov
ret
cmp
inc
sbb
sub
push
inc
lcall
add
push
iret
loope
pop
mov
sub
dec
xchg
jmp
aaa
pusha
pop
xchg
mov
adc
sub
ds
jno
test
add
in
adc
out
aaa
mov
jnp
pop
lea
iret
xorl
sub
sahf
cwtl
dec
popf
mov
adc
pop
aam
xchg
js
cmc
jns
shrl
dec
dec
addr16
mov
and
cmpsb
fcomip
loopne
test
loopne
dec
fnstenv
loope
inc
sub
stos
mov
rcrl
divl
imul
inc
pop
lods
stc
pop
dec
sahf
push
push
jb
pop
insb
lods
dec
push
cli
pop
push
dec
enter
out
in
pop
pushf
push
cld
cli
mov
add
sbb
and
xchg
jl
xchg
and
mov
das
bound
inc
push
js
test
insl
jg
inc
adc
inc
incl
pushf
cltd
mov
cmpsl
inc
inc
aam
mov
fadds
test
cli
scas
add
gs
inc
js
pop
std
sti
arpl
or
ficompl
es
hlt
pop
fdivl
jbe
or
mov
adc
jnp
ds
ljmp
xchg
mov
xchg
sub
movsl
pop
fcmovnu
fisubrl
iret
jbe
lock
cld
cmpsb
adc
out
popf
adc
fprem1
mov
int
fstsw
cld
mov
pop
jmp
jp
pushf
insl
mov
fdivr
mov
insl
adc
jno
cmpsl
orb
popa
pop
adc
adc
int3
mov
lea
outsb
mov
mov
jae
cmp
ret
cmc
sbb
push
mov
clc
pop
in
sub
jl
pop
jnp
shlb
in
dec
jno
std
or
xorb
adc
mov
or
add
pop
jns
xor
imul
adc
std
pusha
aad
xchg
pushl
out
lea
lods
mov
ss
fimull
jnp
popa
cmp
mov
rcl
outsb
xchg
push
mov
mov
pushf
push
xchg
incb
sbb
push
mov
mov
fwait
in
clc
lods
xchg
dec
adc
xchg
leave
mov
fwait
arpl
sub
popf
stos
mov
sti
int
cmc
rorb
jg
fsubs
jmp
lods
adc
push
xor
shll
push
out
icebp
addr16
in
insb
or
push
test
xchg
sahf
or
cmp
scas
adc
inc
push
ret
cmc
int
sbb
adc
sbb
nop
xor
pop
and
faddl
push
ss
mov
addb
push
and
mov
adc
leave
push
mov
push
adc
repnz
fcompl
sbb
xchg
xor
dec
push
sahf
enter
push
jnp
inc
loope
jb
xor
mov
cmp
std
sub
push
inc
push
mov
fstpt
pop
add
fcoml
mov
arpl
test
div
mov
pop
push
fnstsw
hlt
add
xor
sbb
push
sub
xchg
stc
sub
adc
jb
mov
sbb
shll
cmc
jecxz
xchg
fldt
test
bound
aas
mov
incb
xor
aas
cmp
in
mov
loope
cmpsl
movb
sbb
jg
xor
movsl
ljmp
sub
loope
aad
scas
sbb
aas
out
add
xor
dec
add
and
aas
outsb
inc
sbb
pop
jl
test
dec
sahf
inc
jbe
push
loop
add
mov
stos
jg
scas
hlt
push
stos
sub
fs
and
sub
add
dec
scas
out
mov
cmc
int
mov
lcall
pop
test
nop
cmp
cmp
mov
inc
popf
mov
clc
aad
aaa
lahf
adc
lods
loopne
rcrb
in
imul
insb
xlat
shlb
or
and
inc
jbe
adc
imul
in
pop
jo
xchg
fldl
sbb
xchg
fildl
xorb
lods
push
inc
xor
repnz
jmp
push
inc
fs
add
push
cli
inc
pop
add
mov
mov
lock
push
xorl
xor
popa
fneni(8087
rclb
cmc
jl
ja
push
call
dec
or
imul
lock
mov
jmp
cmpsl
test
mov
out
mov
mov
sbbb
dec
ds
ret
insb
addl
mov
adc
das
mov
fdivs
dec
mov
push
jle
inc
mov
cltd
popa
mov
jmp
int
fiadds
movsl
in
adc
add
jp
xor
lcall
inc
imul
out
sub
cwtl
pop
js
jns
xchg
shl
fsubrl
xchg
jl
mov
add
test
jmp
bound
inc
or
add
lahf
xchg
inc
mov
fwait
adc
shll
push
rolb
rorl
jl
or
cmp
fiaddl
fadd
and
nop
mov
mov
fucom
orb
or
pusha
jp
into
mov
cmpsl
xchg
ds
jae
inc
add
and
mov
and
xor
test
outsl
mov
or
mov
ja
addr16
stc
mov
xchg
stos
push
mov
push
push
pop
and
roll
insb
loope
daa
mov
pop
lods
jecxz
pop
or
xor
fwait
in
enter
inc
ljmp
pop
je
push
jg
dec
mov
cmpb
mov
lcall
pop
jbe
ss
mov
push
jae
xor
sub
and
sti
mov
push
icebp
nop
test
xchg
out
stc
out
stc
cmp
cmpsb
cmpsb
aaa
jo
xor
mov
add
cltd
adc
pop
inc
xchg
in
or
add
cmp
and
aam
and
test
das
sbb
inc
mov
xchg
or
test
inc
bound
add
clc
inc
repnz
fs
cmp
inc
notl
mov
lahf
mov
shl
mov
pop
bound
dec
test
negl
imul
cmpsb
push
mov
xchg
xchg
mov
orb
jne
out
fistl
mov
cwtl
jns
cltd
ja
mov
xchg
mov
nop
mov
test
daa
adc
mov
test
pop
repz
das
mov
push
adc
push
push
mov
cltd
int
inc
cld
sub
test
loopne
insb
sbb
cmpb
rorb
sbb
icebp
rol
scas
and
sti
leave
insb
sub
adc
mov
or
mov
pop
jg
inc
cli
jne
int3
pusha
or
mov
fidivs
or
push
and
jns
mov
leave
pop
cltd
imul
pop
sbb
fisttpl
push
or
incl
fwait
ja
daa
cmpl
stos
dec
xor
mov
test
mov
xor
add
leave
aad
xchg
sub
push
mov
add
xlat
sub
sar
inc
jae
push
insb
fistpl
inc
lods
xchg
mov
pusha
out
lret
les
fidivrl
and
xchg
add
into
aas
arpl
das
imulb
pop
jge
in
xchg
mov
lods
pop
outsb
fcoms
sbb
fsubl
cwtl
out
fxch
sub
sub
xchg
sarb
das
cmp
iret
sbb
int3
shr
fcomps
inc
mov
pop
cs
insl
jne
inc
dec
inc
jp
scas
or
mov
xchg
sub
jae
mov
jne
adc
mov
enter
adc
ljmp
push
jl
cmpsb
hlt
inc
jmp
pop
add
nop
inc
cmp
pusha
dec
lahf
fldt
or
cmp
mov
sbb
pop
inc
icebp
mov
push
pcmpeqd
push
daa
cmc
pop
in
clc
popa
add
add
js
rol
pop
stos
out
cmp
sbb
mov
jge
push
mov
movsl
xchg
push
rcrb
int
and
jbe
pop
pop
add
rcrl
je
or
lods
cmp
mov
mov
sbb
push
andl
add
xorb
xor
pop
adc
push
lea
testl
ljmp
scas
mov
loope
xlat
fisttpll
clc
aaa
mov
xor
icebp
pop
shrb
repnz
stos
frstor
mov
stc
mov
sub
icebp
out
mov
and
sub
sbb
popa
sbb
and
test
sub
js
xchg
mov
and
out
jecxz
dec
pop
dec
inc
mov
in
imul
test
mov
mov
jo
cltd
movsl
popl
adc
or
imul
mov
cmc
popa
mov
jne
cmpsl
jecxz
repnz
mov
outsl
and
xchg
imul
mov
inc
xchg
addr16
cmp
mov
add
pop
dec
jecxz
les
cld
or
into
pushf
and
mov
xor
pusha
push
insl
lock
imul
cli
ja
ret
dec
mov
sub
rorl
js
lret
and
int3
cwtl
jae
xchg
mov
std
cmpb
ret
add
movsl
cltd
jo
push
fmul
out
xchg
test
mov
outsb
sbb
mov
adc
cmp
fcmovne
cmp
adc
sub
xor
and
xor
sub
pop
hlt
xor
push
testb
pop
dec
outsl
pop
pop
jnp
sbb
mov
sbb
ja
lahf
lds
push
push
mov
mov
arpl
addr16
stc
mov
mov
lahf
mov
lret
sbb
cmpsb
pop
and
imull
lds
test
ds
test
enter
aas
in
movsl
jbe
out
sahf
xchg
and
lahf
cmp
je
pop
lret
test
jmp
jo
mov
loop
sub
cmp
sub
inc
imul
mov
pop
cmp
inc
pop
dec
jno
adc
cmpsb
jmp
adc
cmp
sbb
lahf
loope
cmp
push
mov
mov
inc
xor
ja
je
jae
lock
mov
adc
mov
inc
movsl
or
mulb
dec
pushf
imul
jge
cld
aam
xchg
cli
loopne
std
and
arpl
sub
push
js
add
mov
sbb
test
insl
stos
aas
cmp
das
adc
mov
cmp
or
unpckhps
mov
xor
push
jae
adc
enter
jae
inc
pop
dec
xor
mov
outsb
divl
hlt
mov
adc
pop
add
outsb
fs
and
imul
jecxz
lea
cmp
cli
mov
gs
cmc
jns
cltd
or
inc
mov
and
or
sub
sub
xor
cmpsb
xor
sbb
mov
jo
xor
pop
andb
pop
fcompl
pop
mov
loop
mov
lods
cmpb
sub
pop
stos
loopne
mov
dec
fimuls
popl
pop
sarl
sub
lret
and
pop
adc
push
sbb
fdivrl
inc
add
fiadds
pop
out
outsb
imul
repnz
cmp
test
jnp
mov
inc
dec
add
xor
mov
call
xchg
int
out
inc
stos
inc
cmpl
ljmp
mov
xor
stos
mov
out
shl
sbb
lds
mov
push
std
sar
imul
xchg
mov
push
push
xchg
add
dec
shr
pusha
lods
cmpsl
add
int3
jne
ja
mov
scas
mov
pop
sub
pop
mov
scas
cwtl
lds
outsl
mov
ss
dec
ljmp
popf
cmc
pop
rol
fs
dec
cmp
jne
cmp
jno
cltd
mov
cmpsl
cmpsl
jae
cmp
add
jecxz
sahf
in
xchg
push
mov
gs
dec
jp
inc
push
pop
push
stos
mov
bound
loope
jmp
push
jae
jge
mov
adc
sbb
xchg
aaa
inc
xor
mov
sbb
sub
cmp
push
and
popl
jns
fbld
aam
pop
jecxz
pop
or
pop
xchg
fstpl
mov
into
les
jg
fmuls
pop
cmp
outsb
mov
cmpsl
fs
test
sbb
enter
ficompl
mov
sbb
mov
mov
xlat
mov
sbb
cmp
ficomps
nop
sub
test
mov
filds
int3
subl
cmp
mov
stc
in
jg
mov
cmp
in
hlt
test
fisubrs
movsb
and
add
lret
xchg
mov
cmc
clc
repnz
add
inc
roll
or
int
jbe
inc
mov
ja
fnstenv
loope
test
xor
jmp
lock
hlt
das
dec
clc
outsl
cmp
loopne
aas
pushf
add
adc
xchg
or
cmovne
sbb
sbb
mov
dec
daa
and
adc
insb
sub
data16
jl
xor
pop
aaa
mov
fcomps
pop
inc
rep
dec
mov
push
pushf
pop
push
test
pop
lods
push
pop
ret
cmp
arpl
jg
push
jle
roll
fdivs
data16
inc
add
push
loopne
dec
dec
mov
cmp
into
mov
stos
adc
mov
repz
out
sub
sub
pop
mov
fistpll
std
notl
aas
repnz
mov
cmp
mov
rcrl
add
mov
aad
addr16
lret
icebp
pop
out
call
out
pop
pop
outsb
in
nop
mov
test
mov
ljmp
jg
push
in
push
pop
cmp
adcb
cmp
pop
xorps
sbb
lods
aas
test
pop
cwtl
daa
and
inc
mov
aaa
call
pushf
cmp
xchg
xor
dec
cmpb
cmp
xchg
mov
fidivrl
fmuls
inc
add
in
les
pop
pop
pop
sub
pop
lock
dec
mov
or
repnz
xchg
pop
sub
xor
fisubs
call
repz
daa
fldenv
cmp
mov
push
mov
mull
jae
jb
mov
xchg
iret
scas
dec
adc
cmp
mov
xor
ljmp
repnz
jns
daa
push
ret
in
icebp
pushf
adc
cmpsl
inc
insl
dec
lock
mov
adcb
sbb
ljmp
xor
repz
and
and
xor
scas
cmp
push
movsl
push
test
add
mov
sub
aaa
outsb
mov
sub
add
inc
test
push
or
test
or
mov
xor
loop
ret
adc
fs
jbe
out
jnp
rcll
dec
imul
fldl
jbe
xchg
aad
xor
jge
pop
add
cmp
and
ret
rcrb
imull
bound
push
cmp
repnz
fnstcw
add
dec
sbb
inc
add
imul
pop
adc
negl
ret
add
mov
lahf
cmp
lcall
mov
push
sub
bswap
ss
int3
fstl
push
sbb
test
aad
jbe
push
fidivrs
jnp
aas
fidivrl
dec
jb
mov
push
mov
jbe
scas
out
int
add
out
leave
xchg
xchg
gs
fstpt
call
or
inc
outsb
push
dec
dec
movsl
mov
cwtl
stos
mov
adc
pop
pusha
cltd
mov
xor
mov
xchg
es
push
jl
and
fsubs
mull
outsb
sub
mov
sbb
push
xor
cmp
ss
push
jmp
fildl
mov
cwtl
shrl
xchg
dec
icebp
clc
nop
push
mov
jnp
lods
movsb
ret
mov
push
fldt
sahf
push
std
movsl
and
pushf
lods
push
psrad
into
cmp
out
cmpsb
out
sbb
sub
cmp
pop
sbb
jge
cmp
jle
and
aas
cmp
xchg
dec
call
in
pop
popf
imul
xor
sub
adc
push
movsb
adc
imul
and
stos
dec
sub
lock
mov
xchg
pusha
mov
shlb
adc
jmp
lret
roll
inc
out
or
les
test
dec
sub
mov
mov
mov
sbb
js
push
sbbl
pop
pop
xchg
ljmp
and
stos
les
arpl
add
push
xchg
and
sub
lods
mov
mov
add
int
xchg
cli
rclb
add
out
push
iret
push
adc
stos
or
fnstsw
xchg
jne
andb
pusha
jge
jnp
dec
arpl
adc
fadds
ret
mov
popf
iret
shrb
pop
ds
insl
lods
out
test
dec
or
sub
jmp
jge,pn
je
sti
mov
fsubl
pushf
bnd
xchg
push
xchg
sub
xchg
es
int
das
jb
mov
cmp
shr
push
imul
clc
inc
mov
mov
frstor
mov
ds
xor
fcomps
xor
push
xchg
jge
cmp
lea
jne
and
enter
imul
and
mov
inc
hlt
stc
scas
cmp
push
and
pushf
stos
scas
sbb
xor
sbb
cmpsl
scas
fdiv
mov
test
stos
lret
ret
pushf
mov
jno
nop
fnstenv
or
repnz
lock
mov
dec
jmp
xchg
leave
xchg
jp
cmovl
push
cmp
mov
pop
and
jmp
rorb
imul
cmp
adc
ljmp
mov
outsb
test
jbe
xchg
cltd
int
or
pop
push
dec
and
cmp
fsts
aad
mov
push
cmp
dec
sbb
xor
out
sbb
shll
and
dec
pop
mov
in
int3
and
dec
pop
pushf
mov
push
mov
ja
inc
insl
lret
outsl
mov
hlt
inc
js
ja
inc
jb
push
sahf
ret
testb
dec
fldcw
pop
loope
in
mov
mov
adc
add
fistpl
fstps
fildll
adc
scas
fwait
xor
in
mov
jl
imul
jge
leave
push
aad
mov
addl
inc
fidivrs
push
xor
and
xchg
inc
xchg
scas
cli
xlat
adc
bound
scas
lahf
dec
mull
jecxz
adcl
push
sbb
popa
add
insb
and
mov
rolb
jne
or
or
jl
dec
es
mov
fs
push
aaa
mov
sbb
dec
xor
stos
ss
mov
mov
movsl
incl
xchg
mov
mov
inc
mov
pop
inc
dec
mov
xor
push
fxch
push
fdivp
pop
xor
call
cli
imul
ja
adc
xchg
lret
das
jecxz
xchg
fisubs
add
mov
int3
jge
cld
es
inc
xchg
or
out
mov
pop
fbld
into
lods
adc
xchg
xchg
or
push
mov
add
and
mov
sbb
sbb
pop
lock
push
stos
add
lret
adc
mov
xchg
jb
or
adc
add
jns
lret
jb
sbb
ret
jle
out
out
mov
cmpb
outsl
dec
dec
cwtl
mov
loope
sub
testl
xchg
rclb
ficoms
pop
andl
xor
lods
xchg
loop
and
xchg
jle
mov
aas
dec
pop
mov
ret
loopne
xor
bound
push
rol
scas
les
ds
and
sbb
xor
mov
ja
pop
inc
mov
pop
push
jl
popa
pop
ljmp
into
lea
aam
sahf
icebp
dec
in
popa
pop
js
dec
or
das
addb
test
arpl
repz
pop
lods
das
sahf
testb
mov
mov
adc
pop
mov
ret
and
mov
sbb
rcl
push
or
or
loope
das
enter
stos
lret
iret
xchg
std
popa
jle
xchg
push
out
daa
movsbl
push
dec
xlat
mov
outsb
jp
pop
dec
jnp
inc
mov
jmp
pop
es
push
mov
and
lea
lcall
pop
sub
push
xchg
sbbb
inc
add
addr16
xor
add
cmp
xlat
bound
mov
hlt
pushf
test
rolb
bound
movsb
pop
and
adc
mov
dec
repnz
pop
iret
scas
add
push
push
test
int3
stos
repnz
je
rol
xchg
loopne
cs
andb
xchg
push
int
add
mov
inc
jp
xchg
jae
xchg
or
paddd
jb
repnz
sbb
test
xlat
or
mov
jbe
push
stc
xorb
repz
roll
cltd
xchg
sbb
mov
out
enter
sub
or
mov
or
aaa
add
cmp
rcrb
and
pop
sub
out
cld
insb
cmpsl
cld
sbb
sti
cs
pop
repz
add
add
jecxz
inc
outsl
lret
std
push
mov
lock
xor
bswap
jmp
push
push
test
cmp
jne
mov
mov
ljmp
test
cmpsl
adc
popa
mov
int3
push
test
push
cwtl
push
fs
rol
fucomi
jae
pop
sbbl
data16
sub
outsb
jg
in
lcall
push
cltd
jl
test
test
pop
fucomp
mov
add
lret
jg
jbe
dec
icebp
push
cmpsl
jl
stos
fcmove
es
lods
sub
mov
mov
sbb
outsl
test
and
jecxz
inc
sbb
xlat
aas
popf
je
rcr
adc
pop
push
mov
xlat
test
sub
push
inc
fwait
outsl
outsb
mov
jecxz
fnstsw
gs
jbe
jnp
jmp
mov
jmp
into
xor
xchg
pop
gs
in
enter
shll
fs
fcom
xor
sbb
outsl
mov
mov
xchg
lea
mov
xorb
jl
cltd
inc
rcl
movsb
pop
pop
outsl
jne
mov
pop
and
adc
lock
adc
pop
xorb
cmc
add
push
test
xchg
test
mov
mov
add
mov
out
hlt
pop
std
movsb
cmp
mov
ror
andl
fwait
jcxz
outsb
fldenv
cltd
mov
inc
sub
lahf
sti
sbb
in
and
fwait
ljmp
mov
and
or
mov
adc
and
dec
cwtl
inc
cmp
jnp
pop
cli
movsl
sahf
shlb
dec
stos
mov
pop
mov
imul
mov
adc
push
das
cmp
pop
mov
fwait
inc
daa
xor
mov
std
sub
daa
mov
xor
dec
into
push
pop
adc
aaa
addr16
inc
cmpsl
hlt
mov
lea
push
insl
mov
nop
scas
adc
jnp
popa
jp
fsubrl
lcall
int
das
leave
mov
jnp
rcll
std
loop
mov
enter
and
cmpb
pushf
jmp
xchg
shll
imul
mov
imul
mov
mov
sub
icebp
fucomip
jbe
icebp
push
dec
sub
push
mov
mov
inc
cmp
out
out
or
shll
cld
cltd
add
fs
mov
hlt
stc
cmc
pop
mov
add
or
sahf
sub
mov
pusha
jge
adc
jg
or
jge
push
fildl
insb
mov
cmp
ds
and
xor
adc
pop
mov
ja
in
and
cli
mov
jp
cli
fs
sbb
pop
adcl
insl
popa
loope
xor
ret
scas
fs
jo
mov
popa
mov
xchg
imul
lret
nop
call
push
lods
jp
cmc
scas
mov
xor
mov
mov
cmpsl
sbb
sbb
nop
aad
sahf
fidivrs
xchg
mov
out
xchg
jno
repnz
jo
mov
sub
mov
ret
mov
insb
push
repz
inc
xor
outsb
sub
xor
cld
jae
jge
aad
fmuls
mov
pop
aaa
mov
dec
dec
mov
ja
fisubrs
popa
lcall
adc
iret
add
xor
pop
push
add
push
inc
mov
lock
lods
adcb
lds
add
jbe
fs
mov
push
imul
movhps
daa
outsl
add
sub
lock
ljmp
mov
daa
push
cmp
cmpsb
push
inc
loope
push
add
push
or
xchg
cltd
pop
adc
fildl
lcall
repz
jbe
gs
clc
or
pop
sbbb
aas
lods
mov
icebp
push
cwtl
lock
aaa
fildll
pop
iret
add
mov
and
jnp
pop
or
out
loopne
sbb
daa
int
push
cld
dec
test
out
stc
shrl
int
jns
mov
movsl
mov
js
repz
xlat
jnp
mov
and
xor
xchg
mov
and
xorb
pop
adc
in
movsb
idivl
mov
repz
lods
jle
es
push
lret
or
mov
mov
add
rclb
cli
aad
cmp
int
or
lods
and
mov
or
fisttps
push
or
out
pop
outsl
popf
aam
lods
sub
jle
inc
or
sbb
jbe
jl
jmp
int
in
adc
into
out
xchg
shll
xchg
jl,pn
std
ret
dec
test
sbb
mov
ss
aaa
test
test
in
ret
dec
pop
mov
hlt
cmp
aas
cltd
push
fists
ret
js
mov
cld
mov
call
add
bt
dec
cmpl
mov
push
dec
sub
or
test
flds
enter
mov
daa
into
lods
out
cmp
and
shrl
mov
scas
xor
gs
mov
sbb
sbb
and
xchg
gs
pop
shlb
sbb
sahf
clc
sub
stc
jge
loope
mov
cmp
into
jne
pop
fdivrs
jnp
sub
dec
push
add
xor
push
in
xor
ret
cmp
fwait
cmp
pop
add
jnp
and
stos
mov
aad
push
pop
ds
fwait
adc
test
cmpsb
test
sbb
das
lods
inc
movsb
add
sub
aam
cmc
dec
cld
push
lcall
ret
xchg
mov
sub
xor
dec
les
insb
add
fdivp
rolb
pop
mov
and
mov
lea
jne
add
push
mov
sub
jo
ror
xchg
ja
into
lods
roll
jmp
getsec
and
pop
pusha
nop
xor
iret
in
sbb
push
lret
add
lock
inc
push
shl
fisubrs
and
gs
pop
pop
pop
iret
pop
jno
movsb
pop
and
aam
or
icebp
cmp
mov
stos
in
jle
pop
sbb
test
xor
cltd
mov
and
inc
pop
dec
aad
out
dec
and
mov
in
adc
jnp
dec
xchg
testl
inc
and
or
aas
inc
pusha
cmp
push
test
and
das
enter
iret
xchg
mov
push
popf
inc
bound
inc
xchg
lret
xchg
mov
inc
inc
mov
pop
repz
jno
arpl
adc
jl
mov
dec
in
mov
notl
stos
iret
outsl
jp
pop
hlt
mov
notb
sbb
push
gs
push
mov
lods
loope
pop
loopne
mul
inc
sub
pop
lods
call
enter
cwtl
adc
int3
xor
popf
ficompl
in
sbb
outsl
cltd
popf
and
cmc
or
sub
add
cmp
and
sbb
incb
push
icebp
xor
shrl
fwait
xor
out
sahf
push
in
mov
mov
sahf
adc
scas
ds
xor
mov
fidivs
daa
mov
loope
mov
in
xchg
stc
sbb
mov
push
push
xorl
cmp
pop
outsl
test
cmp
jnp
mov
fimull
movl
mov
mov
mov
rcll
fbld
stos
jbe
xor
pop
es
cmp
adc
cmp
xor
pop
mov
dec
rorb
nop
roll
xchg
add
aad
jb
lds
std
rorb
add
and
mov
mov
push
mov
cmpsb
loope
inc
pop
xchg
inc
out
in
adc
sbb
xchg
lock
jb
and
mulb
js
or
push
mov
push
incl
sbb
sbbb
adcl
pushf
and
xchg
pop
push
rol
jo
out
fidivrs
sub
fs
adc
mov
cmp
pop
or
inc
cmpsb
out
inc
jo
mov
popa
pop
mov
mov
fmuls
push
pusha
ret
shll
xchg
ret
imul
or
inc
rorb
xchg
xlat
loopne
subb
ficoms
std
cmp
dec
pusha
and
das
adcl
stc
sub
jne
mov
cmpsl
dec
popf
pop
in
ret
xor
sbb
in
add
fcoml
adcb
jge
cld
bound
dec
fldenv
cmpsl
sub
adc
mov
xor
mov
popf
lods
lods
in
dec
lret
sahf
sub
mov
clc
ss
jae
add
inc
add
xchg
jg
or
and
fldt
mov
add
xor
repnz
cmp
stos
xor
sahf
ss
push
sub
pop
repnz
inc
xchg
fcmovu
push
jne
repz
mov
aaa
sbb
jl
lods
je
mov
mov
dec
or
add
insl
sub
or
leave
aam
mov
push
push
int3
inc
fbstp
mov
cmpl
test
dec
or
enter
adcl
leave
mov
mov
ret
mov
aam
sub
mov
ss
in
cmp
stos
cltd
dec
inc
movsb
dec
sbb
and
adc
mov
call
and
fs
daa
es
dec
or
adc
jb
movsl
mov
push
push
iret
out
inc
mov
mov
pop
nop
enter
xor
mov
loopne
ja
add
ss
pop
sbb
lock
and
out
lcall
cmc
sbb
push
or
adc
push
jp
fldl
lock
test
cmp
fs
jno
ss
xor
sbb
insl
fsubrl
js
pop
adc
cmp
jbe
loope
and
outsl
bnd
jnp
jge
jg
cmpb
fbld
popf
or
icebp
call
ja
xlat
fisubl
roll
into
in
cmpl
popf
xor
sub
lds
lcall
mov
mov
mov
adc
mov
cmc
sub
inc
jne
or
inc
leave
cmp
cmpl
dec
dec
shrb
stos
mov
fildl
sbbl
aam
xchg
or
mov
insl
cmp
imul
add
xchg
mov
adc
mov
push
and
inc
pop
leave
les
add
shrl
xchg
cs
push
popf
mov
hlt
adc
cmp
sbb
pop
pop
inc
mov
pushf
pop
xor
mov
push
mov
outsl
add
js
popa
outsl
iret
push
into
xchg
addl
ja
sub
add
xorb
or
xchg
lret
or
xor
cmpsb
int
sti
xchg
mov
test
out
shlb
out
daa
movsl
adc
mov
mov
leave
mov
push
adc
aas
pop
lcall
roll
mov
add
mov
stos
pop
lods
mov
add
mov
add
outsl
and
stc
leave
add
aam
pop
cmc
out
inc
pusha
call
out
jl
je
repz
mov
icebp
mov
sub
imul
cli
cmpsl
push
orl
insl
gs
cmp
orb
call
push
sarb
xchg
jbe
jns
sub
pop
loop
pop
jp
aaa
push
fwait
int
int3
xor
or
jg
dec
mov
jp
xor
push
or
dec
push
test
xchg
push
and
fdivrp
push
push
adc
add
mov
movsl
or
sarl
leave
stos
fidivrl
cmc
shlb
in
addr16
mov
cmp
xchg
dec
jae
mov
adc
inc
xchg
out
repnz
loope
out
push
add
loop
or
push
scas
jecxz
lahf
movsl
push
mov
stos
push
cmp
insl
jb
shlb
sub
push
adc
mov
jl
daa
jg
mov
jecxz
cs
and
sub
cwtl
inc
mov
jmp
stos
xchg
adc
icebp
or
pop
jmp
push
enter
leave
mov
pusha
jbe
jnp
jp,pt
les
mov
pusha
xchg
pop
cltd
push
lcall
mov
adc
pop
stos
xor
inc
lods
shlb
cmp
adc
cs
inc
sub
cmp
cwtl
inc
cmp
push
mov
push
mov
stc
jbe
repz
push
mov
mov
push
stos
or
push
leave
cwtl
dec
add
xor
sub
arpl
sub
fstp
pop
mov
xor
dec
popa
loope
popa
add
je
lret
sub
fists
jl
fnstcw
daa
inc
test
push
and
aas
aaa
rcrl
push
mov
mov
icebp
test
cmpsl
enter
or
or
sbb
lods
push
jg
sbb
xor
mov
sub
jp
ret
rcll
jno
cmp
xchg
pop
into
pop
mov
test
push
or
xchg
xor
inc
inc
jge
adc
cmpsb
hlt
xor
mov
xchg
xchg
ret
ret
add
or
sub
prefetchwt1
or
xlat
xor
adc
fisttps
int3
enter
and
out
sub
loop
jne
sbb
loope
out
sub
stos
lds
popa
sbb
iret
xor
addr16
or
sub
dec
mov
sbb
stos
push
cs
test
aad
stc
lods
sbb
xchg
popa
nop
mov
das
sar
mov
fwait
shr
dec
pop
cmp
jle
push
or
test
les
insl
int3
icebp
xorb
shr
xor
cwtl
pop
inc
xchg
aad
das
popa
push
lods
cmp
int
inc
cltd
loop
mov
in
mov
clc
movsl
jmp
fidivrs
adc
mov
int
aad
sarb
out
dec
vcvtsi2sd
or
or
and
pop
jecxz
and
dec
ret
fisttpll
cwtl
push
insb
lret
arpl
jb
pop
das
in
xchg
jnp
jnp
mov
subl
push
scas
inc
ret
aas
test
jmp
sub
sbb
outsl
sbb
pop
aaa
and
fsubrs
sahf
inc
fcmovb
or
mov
stc
repz
inc
cmp
adc
pop
sbb
push
adc
aam
dec
dec
imul
push
mov
and
loop
inc
lret
and
sbb
mov
enter
fsubs
add
mov
lods
jmp
aaa
scas
int3
pop
mov
pop
adc
xchg
dec
xor
test
jge
scas
sub
mov
icebp
inc
movsb
xor
ss
lods
jecxz
ss
inc
cmp
mov
lods
sub
and
cltd
sti
into
stc
loopne
out
xor
repnz
lock
ret
pop
inc
sbb
push
data16
roll
les
adc
jl
popf
int
lds
xchg
mov
push
in
sub
mov
mov
rclb
adc
jbe
or
es
test
pop
sahf
and
xchg
test
enter
aam
pop
ja
mov
dec
mov
pop
pop
pusha
mov
mov
ret
js
sbb
inc
cmp
xchg
jecxz
icebp
and
mov
push
jb
ljmp
das
jne
pop
imul
int3
xchg
jno
xchg
sbb
dec
push
mov
imul
push
insl
hlt
sbb
pusha
nop
test
xor
lahf
ds
les
movsb
cmc
subl
mov
rcl
inc
pop
fwait
daa
sbb
push
in
lret
movsl
cli
data16
and
int3
ljmp
adc
mov
pop
sbb
or
ret
loope
sti
push
aad
int
jl
adc
das
mov
cmp
mov
cmp
add
fstps
decb
adc
scas
daa
fimull
pusha
mov
dec
mov
fldenv
inc
jle
lds
dec
push
push
inc
xor
sbb
jns
adc
pop
jge
daa
xor
aam
pop
daa
sub
pop
cmp
adc
inc
inc
jge
pop
sub
stos
cmp
addr16
out
int3
xchg
cltd
hlt
cmp
adc
mov
icebp
pusha
es
sub
xchg
loop
int3
xchg
mov
jno
aam
jns
push
popf
xchg
stos
push
and
scas
sub
pusha
xchg
insb
cmpsl
adc
imul
cmpsb
enter
push
add
inc
push
popf
mov
xor
sbb
mov
add
pop
push
xor
das
stos
pusha
pop
fxch
cbtw
out
cmc
mov
push
nop
outsl
inc
jl
icebp
dec
cwtl
mov
sbb
dec
cmc
imul
lahf
or
fstpl
push
push
pop
in
das
xchg
lock
iret
test
hlt
jp
mov
or
sbbl
inc
repnz
movsl
push
out
scas
xor
sbb
mov
inc
daa
pop
inc
cli
push
sub
sbb
adc
fdiv
push
push
ja
push
arpl
in
pop
outsb
push
popa
into
inc
xlat
aas
mov
mov
mov
xlat
dec
xchg
add
xor
push
nop
xchg
jns
cs
test
lcall
inc
mov
cli
stos
mov
or
cmpsl
add
popa
dec
cld
dec
cld
in
or
push
cmpsl
cmp
xlat
mov
push
ret
sub
movsb
movb
sbb
sbb
xchg
sub
mov
cli
clc
push
call
nop
loopne
rcrl
cld
push
xor
insb
fucomip
incl
adc
and
icebp
clc
dec
or
fmull
cli
push
inc
movswl
testl
or
inc
mov
lret
sbb
lcall
in
adc
xor
xor
dec
jmp
or
insl
outsb
and
add
test
negb
mov
frstor
push
cmpsb
imul
mov
cmp
inc
sbb
jno
dec
sub
inc
jl
stos
popf
imul
mov
mov
subb
mov
push
ret
test
call
sbb
aad
scas
stc
push
lods
pop
cmpsb
fmull
push
xchg
mov
mov
xchg
mov
adc
push
orl
and
out
dec
ja
sub
sub
inc
adc
outsl
test
mov
dec
mov
pop
std
inc
mov
mov
push
jo
pop
cmp
jmp
cld
addr16
push
dec
adc
adc
inc
dec
ds
ds
xor
sbbw
mov
stos
addr16
ja
call
sbb
pop
cmp
in
pop
add
dec
ret
test
stos
enter
rcrl
fisubl
dec
push
jns
cmp
je
or
mov
jns
bnd
xor
fmul
cmpsl
pop
stc
jmp
into
fistps
jae
mov
in
and
mov
subb
cli
mov
pop
add
cwtl
mov
notl
mov
push
fs
aas
out
and
repz
dec
adc
and
loope
sub
cmp
cmc
inc
dec
popa
aam
xchg
push
push
stc
push
mov
jmp
jmp
mov
pop
out
or
imul
es
js
sbb
adc
or
adc
mov
inc
sub
data16
out
and
add
pop
xchg
aaa
nop
sbb
xchg
xor
shrb
mov
mov
xchg
cmp
mov
stos
aaa
adc
or
sub
dec
jge
push
mov
andl
or
les
xchg
je
jno
aaa
lret
int3
popa
enter
fsts
xor
lods
xchg
arpl
sbb
gs
sbb
mov
fsubrs
loope
lock
mov
or
mov
sub
fmuls
lret
xchg
fdivrs
ficoml
mov
enter
push
rclb
inc
inc
jno
in
sub
jle
cmp
add
inc
sar
jae
cld
iret
addr16
xor
mov
mov
push
cli
lods
stc
mov
inc
xchg
jmp
arpl
push
inc
jb
jae
sbb
dec
lea
jnp
inc
push
fisubrs
xor
out
fs
lods
xor
sub
pusha
xchg
sahf
and
repz
xor
imul
test
dec
jno
repz
and
jb
sub
mov
cmp
mov
mov
lret
cltd
xchg
fwait
jmp
xchg
out
arpl
sbb
mov
insb
int3
adc
mov
cmpb
dec
test
out
sbb
sbb
in
xchg
or
jecxz
addr16
mov
pop
ffree
dec
mov
mov
xor
fisttps
mov
mov
ss
mov
jo
leave
add
testl
mov
les
loop
mov
xchg
lcall
xor
lret
xchg
sbb
das
jae
inc
mov
sbb
arpl
leave
mov
mov
mov
xor
cli
and
fs
xor
cmpsb
add
or
ss
dec
fsubr
sbb
push
rol
and
adc
pop
mov
shll
sub
cmp
lret
daa
es
and
test
mov
dec
xchg
loope
xor
les
cmp
pop
sbb
dec
add
test
lods
jns
jno
imul
pop
cltd
jge
inc
outsl
mov
adc
aas
repnz
loop
popf
dec
add
stos
clc
adc
xor
insb
leave
outsb
insb
inc
in
xor
sub
jmp
aas
cmc
fbld
add
mov
xchg
loope
push
jle
and
inc
inc
cmpsb
ljmp
xor
pop
fsubl
lods
in
cmc
loope
jmp
and
xor
clc
fdivl
mov
int
push
testl
push
icebp
cmp
insb
imul
xchg
pop
arpl
fwait
lret
jl
mov
mov
push
sbbl
pop
mov
cmp
mov
daa
add
inc
dec
into
inc
lcall
add
push
xchg
push
dec
mov
add
xor
in
int
jae
and
mov
jae
ljmp
outsl
xor
scas
shlb
lock
mov
cmpl
nop
leave
imul
mov
pop
or
mov
sbb
sahf
movsl
sub
imul
add
lret
popf
mov
aad
inc
rcrl
cwtl
dec
cwtl
mov
xchg
fbstp
xchg
fbld
adc
shrl
lock
mov
in
popf
out
outsb
sbb
add
jmp
mulb
sti
push
xchg
jecxz
or
mov
adc
fists
jb
xlat
aas
repz
push
out
push
subl
push
lcall
and
insl
popl
xor
sbb
mov
test
pop
ljmp
xor
repz
cld
fldt
mov
mov
lret
push
mov
and
out
xchg
cmp
or
cli
sub
sbbb
xor
cld
cmp
jg
sub
out
mov
and
mov
cmp
jge
push
adc
loope
pop
mov
addr16
leave
or
sbb
cmp
pop
adc
popl
es
add
adc
dec
xchg
pop
loop
lods
pop
rcrb
mov
mov
sbb
jnp
fimuls
or
dec
xor
mov
jmp
out
add
jg
and
shl
push
sbb
ret
adc
mov
data16
outsb
cmpsl
jl
daa
dec
mov
pop
repnz
fldenv
fs
dec
mov
xchg
mov
arpl
cltd
loope
movsl
xchg
xchg
aad
in
and
int
lods
sbb
mov
cmp
ficomps
idivl
and
loop
rcr
inc
pop
mov
cmp
lret
outsb
addl
out
pop
stos
int
lret
mov
adc
call
jbe
lods
mov
add
test
dec
es
cmpsb
sub
mov
testl
shl
sbb
xchg
mov
stos
mov
xchg
movsl
ljmp
xor
sub
or
mov
cld
rol
insl
fiadds
lret
and
adc
fldl
je
xchg
mov
out
clc
sbb
cli
or
jge
cmp
stos
sub
pop
jb
xchg
popf
xchg
test
in
jbe
lret
push
jne
in
push
test
push
andb
stos
jle
cs
je
add
sub
jae
xor
mov
xchg
dec
mov
test
fs
cwtl
imul
jno
jecxz
mov
dec
inc
flds
jmp
lds
jp
roll
push
in
out
ja
push
out
loop
xorb
neg
es
and
pop
sbb
movsl
test
mov
and
scas
adc
data16
or
xor
iret
and
push
call
andl
les
bound
mov
mov
out
fsts
pop
sub
sbb
xchg
xor
push
jp
jp
loope
nop
or
insb
std
insl
stos
out
pop
loop
xor
in
fsubrl
nop
jae
xor
push
cmp
mov
sbb
pushf
pop
cmpsb
ss
and
sub
fists
scas
sub
pop
xchg
sub
xchg
test
mov
cmc
cmc
inc
dec
xor
pop
ret
add
dec
cld
sbb
sub
adc
aaa
fisttps
fwait
pusha
call
jne
ret
dec
sar
fisttps
inc
scas
xor
add
jecxz
cmpb
push
push
adcb
mov
xchg
xchg
notl
in
add
fsubrp
int3
outsb
jecxz
cmp
push
mov
pop
mov
xor
jbe
xchg
mov
sbb
push
and
inc
movsb
inc
mov
mov
jnp
xor
cmp
iret
sbb
fldenv
dec
sbb
mov
test
mov
and
mov
rcll
sti
sti
fidivrs
jb
stc
insl
lret
sub
xchg
pop
aam
inc
jg
dec
push
imul
rolb
cmp
and
xchg
inc
sbb
jne
adc
jne
inc
daa
cli
insl
push
and
jb
adc
mov
pop
inc
fildll
dec
jmp
data16
aam
push
sbb
dec
dec
mov
std
mov
imul
or
loop
cmpl
xor
adc
rcl
aad
push
fnstsw
aaa
mov
loope
popa
or
gs
xchg
adc
push
add
arpl
rclb
lods
in
ret
fs
shll
movsl
sub
jl
stos
fwait
rorb
cmc
gs
int3
xchg
xchg
mov
fcoml
add
xor
popf
cwtl
aaa
and
popf
out
sbb
mov
rorl
in
testl
icebp
es
test
push
mov
jb
cmp
aaa
sbb
add
pop
xor
pop
or
and
push
cmpsb
xor
aas
iret
sbb
sub
pop
cmp
loopne
jge
push
inc
xor
jns
dec
push
hlt
sub
xor
imul
cmpsl
jne
ja
mov
sub
movsb
test
jg
cmp
ret
push
xlat
jo
xchg
pop
jno
int3
xlat
jne
dec
enter
or
sub
xchg
fs
leave
das
nop
popf
aam
push
cli
int
setns
mov
push
mov
jae
icebp
push
test
cli
sub
lods
stc
or
pop
xor
imul
mov
and
xchg
mov
jno
push
add
shll
sub
sahf
sub
or
xor
stos
and
int
cmp
inc
jnp
sahf
jmp
pop
inc
lock
push
jg
sub
dec
inc
jg
lahf
int
sti
dec
inc
mov
out
mov
icebp
add
or
adc
xchg
ljmp
stos
je
jg
sbb
fcmovnb
imul
in
fwait
lods
add
mov
cmp
out
xchg
xchg
lret
cwtl
in
fs
sub
pop
inc
clc
push
dec
dec
mov
push
popa
lret
add
pop
mov
mov
pusha
adc
bnd
fnstcw
data16
pop
cmc
adc
lahf
cmpsb
mov
xor
fwait
and
and
dec
sbb
fildll
fmul
call
inc
popf
mov
addr16
mov
cmp
mov
and
fistpl
enter
lock
or
leave
and
loope
and
test
out
repz
movsb
mov
shrb
rorb
and
es
sub
cs
cwtl
jnp
jg
mov
push
inc
fs
mov
push
cwtl
adc
subl
mov
mov
and
outsl
pop
cli
sub
ret
mov
es
push
loop
insl
fwait
inc
pop
ja
aaa
cmpsl
in
sub
fucom
mov
dec
jmp
and
in
cmpsb
repz
xchg
mov
sub
sarb
sub
mov
rcrl
mov
enter
xor
sbb
dec
pop
test
incb
int
insb
out
or
and
nop
std
mov
cmp
dec
add
and
jp
les
icebp
leave
mov
ja
adcl
scas
popf
movsl
adc
cmp
scas
mov
or
fsubs
or
testb
xchg
xor
sub
sbb
lret
xlat
push
imul
jp
cmp
push
das
popf
loopne
sbb
dec
enter
out
mov
sbb
adc
lcall
int
adc
sbb
jmp
push
jge
and
lret
cmp
add
add
std
jno
adc
jns
jbe
pushf
mov
fcomi
inc
sbb
and
jbe
scas
int3
push
mov
cld
insl
cli
and
or
mov
out
push
xor
xchg
adc
jge
dec
ret
lds
push
jae
pop
sbb
repz
movb
jg
iret
inc
inc
sub
or
dec
xchg
movsl
shlb
jb
fs
adc
shl
pop
in
xchg
dec
lods
mov
pop
mov
push
inc
fcoml
add
sbb
xchg
cwtl
shrb
push
sub
push
repnz
push
adc
dec
aas
bound
pop
pop
popa
aad
inc
push
xchg
daa
int3
pop
outsl
jecxz
pop
sbb
jmp
sbb
pop
aad
sbb
and
je
adc
mov
int3
outsb
out
cmp
lea
sbb
daa
xor
and
mov
hlt
mov
into
push
mov
inc
xor
push
mov
scas
sbb
inc
adc
scas
inc
lds
icebp
push
dec
in
pop
add
pop
jp
nop
add
push
fists
mov
mov
arpl
pop
aaa
mov
in
gs
cli
and
fldt
test
mov
les
push
add
mov
push
sbbl
dec
imul
test
out
sub
or
cwtl
lahf
fwait
dec
sbb
xorb
das
push
cltd
shrb
fdivs
mulb
imul
mov
sar
scas
stc
lea
int
sahf
or
or
aas
test
out
notb
push
inc
add
dec
xchg
sbb
jp
add
getsec
cmp
xchg
andb
cmp
inc
push
push
mov
inc
push
pop
jle
repz
mov
cli
dec
iret
pop
lock
jbe
jge
mov
rclb
dec
cmp
insb
aad
mov
bound
sub
adc
inc
pop
loop
push
std
jge
scas
inc
iret
test
aad
cmpl
add
pop
inc
aaa
fistpll
cmp
pop
lods
and
imul
outsl
test
insl
jno
and
cltd
imul
add
je
and
jno
push
mov
adc
xchg
jo
std
mov
test
test
loope
jl
fiaddl
push
push
ret
pop
adc
in
fdivr
das
addr16
jl
sahf
pop
inc
loope
cmp
mov
sti
mov
jl
and
flds
pop
dec
outsb
jge
jge
lods
stc
push
pop
fildl
xchg
movsl
test
and
sbb
pop
push
mov
mov
nop
dec
ss
mov
jno
push
cwtl
outsb
mov
dec
mov
adc
nop
sub
xchg
lret
iret
inc
add
push
movsb
nop
adc
imul
rcl
push
stos
push
jg
in
clc
fidivl
cli
pop
decb
dec
pop
adcb
jb
imul
sub
ret
jg
shlb
hlt
push
roll
out
xor
jo
or
sbbb
repnz
in
inc
and
icebp
movsl
lcall
sub
in
or
push
fwait
lock
stos
sbb
mov
sub
adc
clc
mov
pusha
and
cmp
push
dec
jae,pn
enter
aam
mov
push
sbb
inc
shll
jg
das
dec
int
sub
mov
dec
sub
sbb
das
mov
inc
pop
in
fucomi
push
stos
or
push
arpl
clc
xchg
out
pop
jecxz
adc
std
orb
adc
inc
dec
lock
sub
sbb
lcall
dec
testl
push
dec
and
xchg
in
mov
or
mov
lods
sarl
pop
and
test
out
ret
cmp
and
dec
lret
xchg
adc
mov
cmc
mov
cmp
les
outsl
fsub
lcall
into
inc
mov
pusha
mov
mov
dec
xchg
sti
fidivrs
xor
scas
bound
call
adc
in
aaa
mov
jae
out
xchg
and
or
movsl
aaa
mov
sbb
push
or
divl
mov
inc
dec
out
ds
out
adc
into
or
inc
push
popl
sub
test
shlb
jecxz
mov
dec
stos
sbb
out
mov
xchg
pop
xor
shlb
jnp
repnz
jb
cmp
dec
dec
addl
inc
sub
dec
sahf
mov
ret
adc
rclb
mov
les
cmpsb
and
lods
and
jb
filds
cmpsl
out
add
cmp
scas
jno
call
pop
push
jae
fs
xchg
mov
jmp
test
fldcw
int3
je
jmp
daa
sti
ljmp
push
jg
xorps
jmp
fdivs
or
push
je
or
cmc
push
int
clc
ficoml
or
or
xchg
lcall
sub
sarb
add
lock
fadds
sahf
out
sbb
mov
pushf
cmpsl
ss
in
sub
pop
fildll
dec
push
je
adc
lods
sub
jecxz
das
mov
sahf
loop
sub
sar
jae
push
jle
xor
push
enter
mov
push
fs
test
ss
adc
in
das
pop
loope
mov
sub
movq
or
xlat
xchg
mov
sub
pop
mov
jo
push
mov
loop
loopne
jmp
mov
dec
adc
andl
jle
icebp
cmp
jae
fstpl
add
and
sub
dec
jae
or
ficoms
je
vmovups
stos
xchg
inc
xchg
outsb
clc
sub
sbb
mov
outsl
xchg
in
inc
push
mov
mov
push
fisubrl
stc
mov
rcll
sbb
sti
aas
int
pop
cld
and
js
xchg
mov
adcb
sahf
cmp
push
insl
pop
pop
psadbw
xchg
add
outsl
mov
popl
mov
or
mov
in
mull
pusha
roll
mov
push
mov
mov
ret
fs
insb
push
or
pop
mov
test
stos
xchg
je
push
add
pop
cmpsl
push
cs
icebp
repnz
push
in
lret
sbb
jae
ds
dec
test
es
bound
leave
orb
cmp
mov
mov
xchg
lods
movsl
inc
ja
lcall
mov
fldl
mov
xchg
cmc
call
nop
nop
scas
imul
addl
mov
lds
sbb
fwait
lret
sub
iret
mov
add
sub
sub
gs
repz
push
shl
ret
les
jp
test
dec
sbb
popf
jo
xor
dec
sbb
lahf
les
lea
push
ja
cmpsl
dec
adc
das
pop
fimull
cmpsb
add
loope
sub
cld
fildll
aas
push
aas
popa
pop
dec
push
test
arpl
ss
cwtl
std
xchg
inc
fs
scas
sub
stos
stos
add
sub
inc
loopne
out
jecxz
mov
stc
stos
scas
int3
mov
fisttpl
jecxz
cli
inc
imul
roll
push
fldt
insb
mov
sub
rorb
jnp
and
mov
enter
clc
dec
loopne
xchg
xchg
xchg
cwtl
lock
push
xchg
mov
fisttpl
xchg
inc
add
mov
jbe
sbb
jmp
jbe
sbb
movsl
in
movsb
or
adc
mov
ljmp
xor
mov
adc
mov
mov
aam
aam
aas
in
das
dec
dec
dec
xchg
add
sub
mov
or
pop
mov
adc
jno
sbb
inc
repnz
test
enter
xor
pop
outsl
cld
jmp
jg
dec
loop
cld
mov
daa
int3
pop
les
dec
hlt
pop
mov
sub
int3
pop
aas
loopne
cmp
adcl
jns
inc
test
or
cmp
icebp
insb
cmp
fistl
shlb
lahf
dec
hlt
push
pop
aam
fsts
push
xchg
mov
fs
sarb
cmc
adc
into
es
sbb
popl
aad
sub
clc
das
mov
add
clc
xchg
lds
mov
inc
push
dec
dec
clc
icebp
in
mov
mov
xchg
insl
mov
sbbl
sub
dec
hlt
add
sub
mov
sbb
imul
pushf
or
jle
je
call
add
icebp
sub
sub
loopne
and
arpl
into
jg
dec
jmp
icebp
outsb
mov
hlt
xlat
mov
jns
fwait
das
into
xor
dec
cmp
or
or
adc
push
aaa
ficoml
add
das
inc
ret
add
xor
ss
xor
ss
mov
and
test
sub
clc
outsb
xlat
icebp
pop
mov
pop
out
cmc
test
mov
adc
dec
adc
jo
aad
jge
dec
int
pop
jns
test
mov
jge
repz
inc
inc
cli
push
outsl
cld
adc
mov
call
fnstsw
jmp
inc
hlt
xor
out
mov
call
cmpsb
rcl
inc
mov
inc
lret
jp
inc
mov
fimuls
mov
push
cmp
stos
popa
in
pop
xor
push
int
and
inc
jmp
lds
cmc
repnz
xor
adc
loopne
orb
imul
lahf
insb
xchg
and
inc
sub
andl
and
push
xor
xchg
mov
add
andl
dec
mov
mov
scas
inc
push
adc
sub
sub
icebp
pop
mov
mov
mov
xor
stos
fs
pop
jl
lahf
push
fsubl
imul
sbb
jle
cmp
mov
in
pop
mov
std
jns
nop
add
mov
inc
fdivr
push
and
loope
lock
leave
pop
in
mov
orl
inc
nop
daa
fs
add
mov
out
lret
cmp
mov
sbb
cmp
stos
cli
mov
addl
idivb
repnz
cmpsb
fcoml
dec
int
rorb
repz
and
in
inc
test
xchg
popa
mov
inc
fwait
mov
sbb
push
dec
push
and
pop
pop
inc
es
lcall
flds
sub
mov
sub
pushf
xchg
popa
cmpsb
xor
jge
cmp
subl
pop
xchg
adc
cmp
push
cmpb
inc
pushf
xchg
lret
push
cs
dec
sbb
pop
movsb
into
mov
mov
lods
es
ror
mov
add
cmpsl
popf
rolb
cmp
out
es
or
xchg
fildll
test
sub
or
in
xchg
arpl
movsb
shrb
adc
sbbb
xor
aam
popf
leave
xchg
aam
add
ds
insl
les
sarl
cmc
adc
lret
inc
sahf
sub
or
int3
fsubl
push
add
fistpl
stc
add
cmp
arpl
adc
shrl
mov
cmp
add
jge
aaa
inc
in
jnp
jge
mov
sbb
or
popf
cmp
mov
popa
inc
cmp
sbb
lcall
pop
mov
cmpsb
aas
stc
adc
int3
sbb
mov
jne
mov
pop
lock
add
iret
mov
stos
data16
mull
sti
mov
xchg
or
or
iret
fcoms
pop
scas
mov
outsb
mov
js
icebp
wrmsr
dec
lods
loopne
ret
leave
jl
mov
dec
dec
xlat
pop
insl
idivl
div
stos
std
xchg
xchg
mov
xchg
dec
cmpsl
mov
pop
add
mov
lds
fcmove
pushf
lea
testb
jnp
mov
iret
mov
int
fxch
std
popa
push
lahf
mov
sti
xor
into
sbb
shrb
testb
in
push
mov
mov
mov
mov
or
mov
cmpsb
inc
adc
xchg
jae
sarl
lock
and
addr16
sub
das
ja
jnp
adc
adc
cmpsb
repz
push
imul
testl
cltd
push
popa
ds
push
mov
add
scas
pop
pushf
out
sbb
mov
arpl
popf
lret
adc
fs
imul
xor
cld
push
mov
enter
andb
pop
lret
cmp
cwtl
xor
in
add
cmc
xor
sbb
std
and
lea
das
cmpsb
fneni(8087
sub
nop
lods
std
icebp
dec
je
xchg
inc
sbb
out
inc
aam
int
push
test
and
aas
outsb
xchg
call
aaa
daa
sarl
enter
in
nop
and
hlt
hlt
push
in
negl
push
mov
shl
repz
mov
into
xlat
or
fcmovbe
jmp
das
ds
xor
cld
das
mov
xor
cld
sbb
mov
push
repnz
xchg
sbb
sub
xchg
lcall
jns
cmp
pop
mov
pop
dec
mov
inc
decl
sub
push
pop
fdivs
fists
adc
pop
into
popa
test
pop
js
jo
push
inc
dec
jecxz
inc
imul
xor
mov
sub
cmpsl
adc
jecxz
pop
in
cmp
mov
cmpsl
mov
push
jno
enter
xchg
fdivs
pop
mov
jbe
mov
ret
scas
lods
dec
loope
mov
lea
jne
sbb
sbb
xchg
int
and
lahf
mov
sbb
out
loopne
add
lods
inc
rcr
jl
ljmp
mov
out
inc
aad
addr16
adc
xor
cmp
push
mov
fwait
dec
clc
xchg
ja
movsl
pop
loop
std
mov
dec
nop
mov
xchg
rcrb
fdivr
and
loope
dec
imul
pushf
bound
in
xor
int3
xor
sub
cmp
sti
mov
imul
lret
cmp
inc
dec
pop
push
xchg
and
jae
xor
mov
or
push
in
int3
push
jecxz
jne
jle
mov
inc
jg
push
and
int
shrb
stos
test
lret
xor
aam
adc
mov
inc
jl
xor
mov
ret
pop
inc
lcall
mov
cmp
popf
lahf
mov
sarb
mov
push
xchg
sbb
cltd
lret
outsb
or
lret
int3
int
shl
rolb
fidivs
in
pushf
sbb
icebp
shl
dec
xchg
sub
xor
sub
not
addr16
lret
mov
scas
cwtl
mov
pop
inc
mov
rcrb
out
push
pop
sub
xchg
xlat
enter
mov
lock
cmp
xlat
outsb
jmp
repz
adc
sbb
xchg
xor
mov
jnp
sahf
test
lcall
jae
cwtl
imul
dec
or
loope
adc
adc
push
sbb
add
and
loop
fsubrl
lret
sar
cmp
jmp
push
bound
mov
mov
pop
dec
adc
inc
ds
sbb
or
lods
mov
leave
loope
and
shll
cmp
cmp
cmc
mov
in
cld
mov
dec
dec
inc
loop
dec
push
inc
ljmp
dec
pop
popa
cli
fcomps
or
inc
jge
cld
push
xlat
pop
sub
jp
je
add
mov
jge
jo
inc
sub
xchg
jl
lret
mov
test
sbb
mov
xchg
nop
sub
sub
nop
lahf
mov
add
inc
hlt
cmp
jnp
lods
cmpsl
adc
mov
test
shlb
pop
dec
inc
ret
mov
add
mov
ror
addr16
pop
fs
pop
push
scas
jo
jno
je
jae
dec
xchg
jnp
mov
ja
movsb
xor
sahf
aam
fidivrl
div
xchg
sarl
mov
fstpl
mov
sbb
rorb
pop
movsb
fldcw
aaa
dec
xor
sub
push
push
jge
add
lret
cmpsl
dec
cmc
mov
ret
int3
stos
xrelease
adc
sub
and
sub
pop
fidivl
fiadds
pop
sysret
mov
dec
lahf
shrl
stc
mov
dec
ds
dec
mov
cmp
sbb
sahf
mov
mov
pop
mov
inc
mov
push
pushf
jp
mov
popf
outsl
add
jge
in
cmp
dec
xor
shlb
loop
push
clc
cmovg
adc
int3
xor
and
jecxz
sub
insb
jb
cmp
xor
lea
arpl
jmp
push
bound
xchg
ja
dec
shlb
and
inc
fisubrl
xrelease
mov
jnp
mov
add
test
insb
xchg
mov
subb
jmp
jnp
test
insl
ficoml
and
in
and
call
and
push
pop
xchg
adc
out
mov
cltd
out
loope
inc
mov
add
not
popa
gs
pop
dec
jbe
mov
push
pop
aas
cmpsl
sbb
xor
fcoml
lock
icebp
xor
dec
inc
adc
jmp
ja
add
pop
pop
sub
mov
adc
hlt
popa
mov
jo
out
pushf
decl
dec
in
dec
daa
icebp
xchg
test
sbb
les
negl
cli
shll
and
mov
enter
xor
xchg
int
das
mov
mov
stos
mov
lret
gs
jp
mov
out
mov
mov
xchg
jle
scas
jbe
dec
and
mov
test
out
cmpsb
lods
push
out
mov
sbb
mov
mov
stos
fwait
scas
mov
push
jmp
adc
fidivl
aad
out
xchg
xor
into
mov
icebp
aas
sbb
inc
roll
push
jno
lods
or
maxps
rolb
jmp
and
aas
xlat
jl
ficoms
fwait
pop
mov
xor
fcomps
aas
bnd
sbb
dec
adc
jne
adc
adc
add
lret
dec
leave
fs
jne
xchg
add
adc
xchg
adc
hlt
mov
roll
es
lock
inc
mov
xor
mov
arpl
mov
iret
lret
sub
addr16
push
jp
sbb
mov
cli
ljmp
daa
incb
mov
mov
out
adc
ja
pop
inc
adc
outsb
xchg
repnz
mov
sbb
dec
dec
das
hlt
rol
addb
movsl
cmpsb
cmpsl
test
stos
cmpsl
sub
mov
lds
jecxz
int3
jb
sub
fstpl
mov
shl
ljmp
dec
mov
mov
sar
adc
mov
lret
lret
sub
dec
lret
mov
mov
out
mov
lret
fisubs
lret
ret
arpl
mov
fbld
loope
pushf
xchg
jle
mov
push
insb
filds
xchg
mov
jb
push
mov
mov
pop
lcall
shll
into
lret
lret
outsb
fbstp
jg
lret
mov
lock
ds
dec
orl
addr16
lret
test
fsubr
mov
mov
leave
imul
mov
add
mov
jmp
mov
xor
jb
cmp
fnstcw
pop
xor
lret
ds
pushf
int3
mov
push
jp
repz
mov
fistpll
ljmp
inc
test
fsubrl
xchg
fstpt
sarl
enter
test
push
push
adcl
jns
lds
xor
loopne
test
int
fwait
pushf
stc
sub
fbstp
push
addr16
rcr
loope
jecxz
shl
rcl
shl
shl
loop
repnz
loope
out
int
fcomip
mov
std
in
loope
in
imul
push
mov
fcomp
mov
shl
aam
cld
outsl
aaa
out
loop
xchg
hlt
andb
shr
xlat
xchg
cmp
in
loop
adc
mov
shl
adc
loop
shr
loop
sbb
jge
mov
dec
fnstsw
aam
imul
sub
jns
jp
outsl
imul
jge
dec
into
dec
js
outsl
popa
clc
sub
push
dec
insb
outsb
insb
pushf
into
jne
ja
imul
sbb
fildll
push
sbb
adc
js
cmp
outsl
out
push
cmp
outsb
fldz
imul
fdivrs
ficoms
jge
repz
jb
test
gs
imul
idivl
aaa
out
rol
imul
iret
fsubrl
iret
push
neg
cs
and
xchg
jnp
cmp
outsl
js
jge
outsl
sub
cs
lret
sbb
repz
mov
adc
daa
test
cmp
push
jge
push
outsl
jno
outsl
lds
gs
lods
jns
js
fidivl
sub
xor
mov
test
push
popa
xor
ret
and
or
pop
and
mov
mov
push
js
pop
or
and
stos
mov
push
jge
lock
aas
fidivrs
and
push
jns
jnp
imul
popa
pusha
jne
jns
outsl
outsb
arpl
imul
xchg
push
push
jnp
lahf
push
push
adc
outsl
test
jg
gs
sbb
sub
pop
pop
popa
and
hlt
es
pop
ja
imul
and
data16
push
lret
std
add
push
adcb
loopne
sbb
shll
js
fldt
add
jns
ret
jge
jns
fdivrl
repnz
jne
add
and
xchg
pop
outsl
jne
outsl
outsl
push
cmp
jo
out
lret
adc
sbb
add
mov
mov
mov
push
xchg
lds
jg
push
push
push
popa
ret
jnp
inc
into
jo
divb
mov
pop
ja
loopne
outsl
push
cmpsl
push
sub
sub
pusha
mov
xor
aaa
imul
ret
add
sub
sub
jp
jns
jbe
jge
insb
lcall
outsb
addr16
rorl
shrl
sub
pop
jae
daa
pop
push
xchg
push
jge
fs
outsb
push
dec
cs
push
adc
xchg
xor
dec
and
pushf
daa
cmp
dec
daa
hlt
gs
mov
sbb
ret
mov
fwait
mov
outsb
dec
xchg
sub
mov
add
jne
popa
in
dec
nop
lods
xchg
in
rclb
and
or
cmp
xchg
sub
or
in
or
cmp
pop
or
std
imul
pusha
pop
fdivrl
push
arpl
xor
out
call
stos
and
mov
cmp
sarl
add
loope
imul
repz
mov
or
es
ljmp
inc
xchg
popa
ja
mov
loop
orb
or
adc
push
and
mov
jnp
je
fistpl
or
jne
sbb
pop
sub
cmp
das
cmp
jae
js
pop
add
push
fildll
or
sbb
sub
push
or
jge
sub
lcall
stos
nop
pusha
outsb
push
push
ret
pop
js
xor
jne
aaa
xchg
sub
or
scas
cmp
shlb
sbbl
sub
sub
jge
and
or
lcall
aam
insb
push
pusha
xor
push
outsl
imul
repz
cmpl
lods
gs
dec
xchg
push
cltd
pop
fs
jbe
add
outsb
js
inc
xchg
cs
cmp
cmp
loope
daa
ss
sub
aam
add
ss
push
jns
cs
lret
pushf
popfw
int3
jnp
mov
stos
dec
cmp
add
pop
or
ficompl
shll
inc
or
xchg
lret
loopne
and
pop
and
xor
arpl
loopne
and
pop
cs
xor
icebp
loopne
jge
addr16
test
fsubs
xor
imul
push
jns
xor
sbb
mov
out
cmp
push
xchg
mov
hlt
imul
cltd
mov
std
outsl
setp
jo
cmp
xor
imul
xchg
pusha
jns
push
lahf
push
imul
das
sbb
cmp
ret
pop
subl
cmp
push
cltd
ret
pusha
push
je
cmp
sbb
outsb
mov
pop
pop
push
sub
or
outsb
arpl
pop
xchg
dec
cli
jns
jns
jmp
push
jns
jmp
mov
mov
pop
add
sub
or
js
dec
push
daa
loopne
push
loopne
das
or
movsb
pop
pusha
jns
and
add
push
hlt
push
orps
in
and
outsl
cmp
cld
insb
jge
jae
cmc
add
pusha
push
jns
sbb
ret
insb
and
cmp
pusha
das
jo
sub
sub
gs
fs
push
jle
jns
push
cmp
pop
pop
sub
jbe
ret
push
mov
dec
addr16
pop
daa
bound
fs
ss
movl
xchg
xor
mov
cmp
ret
pusha
out
sbb
cmp
stos
cmp
adc
rcr
ud2
add
mov
lret
dec
jge
jnp
into
and
pop
cmp
mov
mov
pop
idivb
test
ret
jb
jnp
add
sbb
arpl
adc
or
sub
jae
or
add
jno
stos
mov
jne
jp
sbb
xor
mov
add
adc
xor
cmp
fs
lods
jp
in
leave
mov
xlat
lcall
cs
or
pop
push
jp
lcall
nop
lock
aas
test
scas
sbb
push
and
aaa
pushf
sbb
jae
or
add
repz
pusha
daa
rcll
loopne
cmp
adc
mov
mov
cmpsb
imul
enter
lds
popa
lds
outsl
fsts
pop
popa
push
divb
cmp
pop
inc
fdivr
cmp
mov
cmp
sahf
rcrb
std
jnp
lock
inc
and
and
mov
jp
cld
jnp
subl
pop
push
ja
xor
jae
je,pn
cmpsl
iret
xchg
and
cmpb
sahf
cs
lcall
lods
mov
mov
add
adc
dec
popa
pop
dec
test
xor
jns
lahf
or
sub
les
into
imul
das
enter
leave
jecxz
loope
arpl
add
push
push
fnstsw
loopne
ret
enter
insl
gs
mov
loop
test
cmpsb
pushf
push
insl
cmp
cmp
cmp
les
lcall
ljmp
mov
gs
jnp
jge
mov
push
loopne
enter
jmp
lahf
xchg
addr16
outsb
ret
sub
sti
insb
repz
xchg
adc
insb
mov
mull
aas
or
cmp
fnstcw
iret
hlt
jo
lods
subl
popa
cmp
pop
xor
and
xor
pop
push
and
rol
jno
insb
shr
icebp
adc
repz
sbb
sbb
fdiv
jae
js
dec
ret
add
lods
fidivrs
xchg
and
pushf
push
popa
sub
mov
fdivs
cmc
lcall
pop
sub
or
es
push
fcmovnbe
sbb
jle
fucomi
mov
jns
repz
jns
fistpl
pop
cld
xor
cltd
adc
sbb
sbb
pop
das
xchg
fsub
ficoml
pop
in
das
ss
jnp
popa
js
jge
test
xor
imul
cwtl
fdivl
sub
or
mov
js
popf
fcompl
pop
iret
shlb
insl
fdivrl
xchg
pop
lret
int3
flds
dec
out
sbb
fisttpl
stos
sti
sbb
or
sbb
add
or
je
cmc
adc
scas
xorb
imul
shrb
pushf
jl
popf
or
or
stos
flds
jb
xlat
fadd
xchg
sub
subb
fadds
xor
cmp
adc
cmp
mov
dec
or
lds
fdivrs
pop
cmp
pop
js
aaa
stos
push
cs
dec
adc
iret
das
adc
xor
int
jno
fcomps
cmpsl
mov
js
sub
rcr
pop
pushf
sarl
rcll
out
fimull
outsb
sbb
push
mov
cmc
cmp
ret
pop
lds
in
and
cmp
push
mov
add
ret
pop
xchg
xor
and
jg
int3
xor
mov
pop
mov
ret
pusha
faddl
aaa
fimuls
add
lret
or
int
ja
cmp
add
aaa
aaa
inc
stos
pop
jl
stos
int3
hlt
and
jg
ret
ret
into
iret
faddl
loopne
sbb
iret
cmc
lret
cmc
aas
inc
lods
je
and
ja
pushf
and
add
xchg
je
xchg
and
xchg
fildl
sbb
xchg
icebp
push
or
sub
jno
mov
fistl
mov
pop
pop
sbb
addr16
push
ja
leave
jle
pop
in
popa
xchg
aam
ret
nop
out
push
stos
cmp
push
dec
push
popa
xor
push
jbe
into
faddl
leave
mov
cmp
add
lods
outsl
cmpsl
sbb
xor
jns
iret
aaa
add
enter
mov
xlat
lods
sbb
lret
ret
cmc
sbb
fwait
insl
jno
or
lds
roll
iret
fisttpl
iret
sub
xchg
and
gs
das
xchg
xchg
push
movaps
or
lret
cli
js
jnp
outsb
insb
fs
jnp
jns
mov
iret
jbe
test
push
iret
pop
and
push
jne
mulb
out
pusha
add
mov
ja
fdivl
cs
jge
and
mov
push
iret
or
insb
or
xor
test
jnp
add
repz
out
insb
sahf
push
clc
push
xchg
int3
pop
cmp
fistps
cwtl
pop
insb
or
push
jbe
test
and
test
push
jg
aas
enter
outsb
mov
lcall
data16
push
or
or
cmp
repz
pop
xor
iret
lret
sbb
dec
fdiv
rcrb
push
or
sbb
sbb
loopne
lret
pop
or
and
add
push
je
pop
mov
lods
iret
aaa
jl
ret
and
sbb
xor
outsl
pop
push
jg
jge
sub
sbb
fnstsw
or
inc
or
sarl
jns
mov
inc
or
jo
pop
lret
inc
out
lret
lds
in
flds
mov
jne
aad
pop
jns
add
stos
insb
ja,pt
and
lret
push
add
fstpt
cmc
pop
jbe
daa
sbb
xor
inc
adc
ss
loope
pop
adc
xlat
rcrl
arpl
xor
pushl
leave
pop
add
popa
sahf
jns
fs
xor
js
add
cltd
xor
fwait
and
ret
xor
jl
movsl
and
jle
das
fdivs
inc
xchg
xor
pop
xchg
pop
gs
mov
ret
inc
negl
outsl
dec
decb
mov
fs
pusha
pop
xlat
iret
mov
jg
and
jno
jge
negl
fsubs
fstps
mov
or
outsb
imul
lds
iret
add
jg
roll
add
xchg
sbb
lods
or
or
pop
or
sub
pop
sub
je
and
cld
sbb
inc
sbb
insb
lock
orl
push
mov
push
push
lret
sub
fs
or
mov
adc
test
adc
daa
mov
dec
adc
mov
mov
cmp
movsl
push
sbb
add
inc
inc
jno
loop
xor
jp
jge
mov
sbb
ss
out
sub
inc
and
xor
adc
add
and
jno
add
mov
faddl
inc
fisttpll
call
push
dec
notl
xor
insb
pop
mov
aad
imul
arpl
movl
loopne
and
cmp
popf
enter
add
dec
test
and
cmp
xchg
sti
adc
sbb
push
mov
push
push
pop
sbb
sti
xor
mov
cmc
fadd
scas
lret
iret
cwtl
mov
sbb
jb
enter
imul
dec
ss
lret
xchg
das
outsl
arpl
imul
loop
test
imul
into
add
loope
mulb
outsl
repz
mov
xchg
mov
mov
sbb
divl
add
jo
jmp
add
and
je
bound
out
mov
cld
pop
inc
ficoms
leave
cmp
mov
pop
and
aaa
ds
sbb
inc
lret
int3
mov
adc
jg
into
adc
push
jg
imul
ss
iret
mov
jge
push
lcall
je
cmp
dec
jnp
jbe
imul
int
and
stos
call
js
fcompl
clc
int3
jge
jae
gs
pushf
imul
push
cmpsb
idivb
loopne
js
ss
xor
pushf
cmp
mov
push
inc
inc
test
rorw
sbb
fxch
loope
aad
jmp
frstor
jo
xor
xor
mov
fldt
popa
jle
adc
sbb
jnp
xor
dec
sbb
fwait
ss
dec
lods
aas
popa
sbb
mov
sbb
fsubl
pop
ss
jae
imul
dec
arpl
outsb
mov
jnp
mov
adc
popa
sti
push
lods
movsb
jb
cmp
lods
push
iret
mov
les
rcrb
inc
mov
cwtl
insb
mov
dec
pop
pop
sbb
jns
loopne
or
pop
arpl
sub
lret
mov
add
rcr
or
pushf
jge,pn
loopne
imul
jge
sub
sub
lea
dec
inc
lcall
adc
insb
push
xor
mov
pushf
fdivl
sub
cmp
lret
xlat
push
cmp
lods
jl
sbb
adc
fdivr
ja
imul
ja
cmp
test
sahf
sbb
jecxz
testb
mov
fsubrs
sbb
mov
pushf
jne
xor
movsl
jnp
and
sbb
bound
popa
outsb
jae
insl
xor
aam
push
push
push
push
mov
sub
sub
ret
scas
pop
insb
lret
arpl
cmp
cmp
fmull
js
sub
ds
sbb
aaa
bound
or
jnp
ret
sti
fcmovnu
orb
enter
cltd
test
or
out
inc
ja
mov
imul
xor
jmp
mov
cbtw
and
jnp
push
js
out
in
imul
insl
lock
fcmovnbe
inc
mov
lea
aad
jecxz
and
faddl
std
lret
xor
cmp
fmuls
ret
repz
cmpsb
mov
imul
fdivl
cld
pop
cld
sbb
add
ffree
clc
pop
daa
sbb
jl
pop
jge
xor
pop
jbe
or
add
das
stos
ss
fnstcw
or
in
or
xchg
xchg
jnp
fcompl
sub
daa
aaa
out
pop
ret
in
sub
sub
push
and
outsb
sub
mov
sbb
popf
add
lock
paddusw
add
or
fistpl
jne
aaa
mov
iret
sbb
and
push
sbb
cmp
sbb
or
xchg
pop
push
add
add
stc
sbb
jg
push
invd
inc
lret
and
add
lods
push
lret
loopne
add
mov
xlat
add
add
les
pushf
repz
jb
fstl
add
iret
popa
roll
or
mov
push
or
push
sbb
or
add
add
aaa
add
add
push
or
lret
ja
cltd
lret
xchg
les
sbb
ror
adc
jl
xchg
xchg
and
lcall
mov
adc
jl
movsl
add
rclb
xchg
pop
jne
filds
rolb
jb
dec
xor
mov
cmp
or
sub
sbb
mov
lahf
mov
pop
or
push
aam
inc
test
loopne
xchg
fadd
pop
and
jo
xchg
mov
xor
int3
mov
jle
add
mov
inc
cmc
lods
mov
xchg
mov
push
pop
out
notb
loop
aam
xchg
shll
or
mov
mov
gs
mov
movsl
mov
xchg
inc
negl
xlat
sbb
fcom
jg
add
xor
aad
in
jns
popf
das
jb
mov
test
enter
mov
iret
dec
stos
aas
ffreep
iret
mov
push
xor
add
lea
iret
rol
or
adc
ds
add
fcmovu
pop
pop
push
jnp
insb
and
mov
sub
xchg
mov
shr
filds
and
mov
pop
mov
mov
jg
fisttps
out
mov
adc
and
mov
inc
inc
and
or
fcompl
fimull
cltd
cmp
xchg
add
ret
fcoml
jp
jbe
shlb
add
xor
iret
cmp
cmc
dec
sub
aam
add
in
ficompl
sub
mov
sbb
or
sbb
xor
add
orb
ja
jbe
jae
test
or
push
add
out
fcmovnu
call
jl
sbb
pop
sbb
jo
mov
pop
fstl
push
xchg
or
sbb
push
sub
or
pop
sub
pop
push
jnp
rorl
fldl
bound
pop
and
cld
mov
loopne
pop
and
xchg
fcompl
push
push
push
or
ja
ljmp
mov
movsl
cmp
cmp
enter
sarl
fimull
jnp
sbb
aam
outsl
out
mulb
ret
and
shrl
les
push
outsb
jb
lock
inc
or
bound
mov
pop
and
cmp
les
aas
ret
jp
lcall
aaa
inc
rorb
mov
jp
nop
aaa
fcoml
jb
outsl
push
lret
imul
dec
fs
xor
testb
inc
mov
xor
fnstcw
or
xor
outsb
fs
cs
sub
in
or
and
adc
imul
inc
enter
lcall
lods
pop
js
imul
lods
cli
jnp
dec
sub
add
sub
add
push
add
pusha
push
add
pusha
push
add
push
add
add
add
fs
imul
add
push
imul
insb
insb
outsl
arpl
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sub
add
clc
jae
clc
repz
stc
jb
iret
clc
jae
fdiv
push
repz
clc
jae
test
pop
repnz
clc
jae
mov
add
and
rol
repz
repnz
shr
call
and
add
sbb
add
movzbl
repnz
stc
jb
jbe
add
and
jae
fld1
add
add
xor
add
in
add
and
add
repz
jmp
je
rol
call
xor
pop
jmp
mov
shl
movsbl
sub
add
jmp
int
jmp
int
jmp
int
jmp
int
sub
jmp
push
push
repnz
repnz
xor
add
add
jmp
enter
dec
xor
neg
repnz
jmp
adc
repnz
repnz
jmp
mov
jmp
int
not
sub
repnz
clc
jae
push
clc
jae
inc
call
mov
ret
add
repnz
repnz
stc
jb
xorl
cmp
movzbl
inc
stc
jb
lods
sub
stc
jb
out
jmp
pop
or
add
and
inc
repz
repnz
jmp
int
sub
jmp
lahf
jmp
xor
add
add
add
and
shll
iret
dec
jmp
int
stc
jb
or
xlat
repz
jmp
int
stc
jb
into
jmp
fldpi
mov
xor
jmp
int
jmp
cli
and
add
add
pop
sbbl
repnz
repnz
clc
jae
lret
int
dec
clc
jae
xchg
clc
jae
shr
add
or
movsbl
repz
jmp
adc
mov
repz
jmp
sbb
add
add
shlb
movsbl
jne
repz
jmp
stos
jmp
int
clc
jae
movsl
cld
xor
aas
lahf
sbb
cwtl
cmp
xchg
nop
add
jl
cld
mov
adc
divb
sti
hlt
push
repz
js
jmp
sub
out
in
dec
sbb
sbb
jne
inc
cmpb
xchg
rclb
repz
je
pusha
insb
cmp
pop
stc
mov
mov
mov
mov
in
inc
shll
inc
movsl
sub
mov
push
pop
dec
or
popa
push
push
aaa
punpckldq
or
sbb
add
jnp
sub
jo
and
jb
jo
imul
inc
jae
sarl
shrl
iret
mov
rorb
or
xchg
inc
dec
push
int3
dec
dec
pop
roll
orl
outsb
fimull
xor
fs
arpl
add
shrb
ficoms
ret
adc
out
xchg
outsb
cmp
and
rclb
mov
enter
push
lea
mov
mov
test
sbb
pop
out
mov
loope
ljmp
cmp
push
jg
inc
xor
fistps
inc
outsb
lret
rorb
dec
jle
leave
movsb
movb
add
movsb
mov
in
xchg
mov
stos
and
mov
mov
push
data16
insl
sbb
inc
aaa
and
add
sbb
push
push
xor
adc
adc
imulb
lcall
jo
inc
mov
in
pushf
sub
xor
outsl
imul
mov
pop
mov
in
pop
test
pop
push
or
popa
push
pop
jbe
adc
jle
add
and
xor
xor
std
and
sub
push
xchg
cwtl
sbb
xor
call
mov
mov
mov
test
cmpsl
xchg
mov
cli
decl
aam
cld
cld
icebp
repnz
outsb
sbb
test
jmp
sbb
loopne
in
aam
xor
aad
xor
shlb
ja
inc
sub
rorl
inc
cmp
xchg
mov
mov
pop
mov
popf
mov
test
mov
inc
mov
dec
pushf
pop
xchg
sbb
push
pusha
imul
pushf
pop
sbb
push
cmp
rclb
xchg
jns
cmp
or
sahf
dec
jp
jg
lea
ret
dec
jmp
std
cmpsl
stos
fstpl
scas
and
data16
int
fstps
pop
push
inc
sub
dec
rorl
push
rolb
les
rcll
add
adc
cmp
and
shrb
shll
in
sub
xor
daa
mov
sbb
sub
fmul
mov
jae
dec
hlt
loopne
out
mov
xchg
mov
roll
jbe
sbb
inc
negb
ret
pop
sub
cmpsb
and
cmc
call
out
adc
add
pop
and
roll
sbb
jno
dec
rcl
xlat
aas
in
fiadds
push
mov
cld
int
mov
imulb
popf
push
mov
mov
subb
mov
mov
cmp
sbb
jne
push
dec
pushw
inc
xor
enter
stos
adc
or
or
pop
mov
clc
sub
inc
in
dec
sbb
jl
aaa
xlat
jge
and
inc
inc
loope
gs
push
dec
jp
pusha
sbb
movsl
rcll
adc
mov
leave
xchg
dec
mov
dec
mov
inc
decl
inc
stc
xchg
jnp
cmp
add
sub
aaa
xor
xor
adc
sub
adc
and
lea
pop
out
xchg
mov
add
and
jmp
push
std
pop
aas
inc
clc
jo
pop
push
pop
xchg
fnstsw
xchg
icebp
xlat
sub
mov
mov
int
hlt
mov
pop
jbe
ret
mov
mov
sbb
pop
loopne
clc
sub
or
sbb
movsl
mov
aad
jb
xchg
inc
loope
and
add
sub
out
inc
sbb
andl
data16
jmp
adc
push
lret
xlat
adc
ret
loop
lock
insl
data16
and
addr16
add
ss
repnz
movsb
aas
repz
leave
mov
int
jle
lods
sbb
iret
arpl
push
dec
push
jnp
icebp
cs
mov
or
es
test
mov
xor
sub
test
hlt
int3
pop
inc
out
dec
inc
scas
sub
loope
enter
pop
cli
dec
std
dec
shrl
add
daa
sub
fcmovnb
xchg
mov
addl
sbb
adc
decb
mov
ja
lods
fs
mov
sbb
cltd
xchg
xor
inc
inc
in
mov
push
ljmp
scas
arpl
mov
dec
icebp
mov
ljmp
mov
inc
negb
mov
xlat
enter
dec
dec
pusha
shrb
jnp
lret
mov
push
fimull
mov
push
ds
pushf
jecxz
daa
jmp
xor
sub
gs
into
mov
xlat
jns
dec
daa
pop
jmp
shl
lcall
jge
jmp
pusha
insb
bound
pop
lds
push
dec
mov
scas
enter
cmpsl
push
in
add
aam
sti
cwtl
rcll
or
sub
cs
inc
xor
ljmp
add
test
sub
jp
push
mov
add
sub
testb
xlat
test
ljmp
sahf
or
and
add
lret
test
or
das
xor
lods
pushf
mov
ret
pusha
lock
pop
loop
out
jbe
inc
or
loop
add
mov
sbb
cld
adcb
out
pop
scas
icebp
sub
jb
fcmovbe
insl
jo
ret
mov
xor
test
in
jae
mov
adc
ficompl
push
xor
les
and
fisubs
into
shrb
pop
outsb
aad
cmp
and
jbe
push
inc
inc
fldl
outsb
dec
mov
and
inc
jb
fimull
imul
rorb
push
mov
mov
push
push
or
xchg
xor
sbb
ds
jnp
jl
inc
jno
call
addb
cmp
push
mov
fidivs
lock
cmp
pop
or
ljmp
dec
mov
cmp
push
icebp
mov
lret
or
int
inc
dec
sub
push
mov
fnsave
popa
push
sub
les
movsl
pushf
jle
sbb
and
pop
mov
aad
adcb
add
mov
pop
es
jne
inc
insb
and
cmp
fistl
cmp
das
xchg
aad
mov
outsl
call
adc
cs
into
jg
jns
scas
ja
xor
jecxz
cmpsl
push
and
add
mov
sub
sub
xchg
sub
into
std
scas
cld
enter
adc
in
jbe
jae
bound
rcrl
sub
out
push
mov
mov
es
inc
mov
xchg
shll
movsb
loope
fldl
call
lods
xor
gs
sub
mov
jg
fwait
cltd
lds
les
aas
or
cld
push
jmp
jb
mov
xchg
xor
in
divb
xor
jle
jecxz
add
and
and
rolb
jecxz
xchg
push
fsts
mov
in
dec
xchg
ret
iret
out
lret
push
imul
cmp
arpl
jae
mov
rcrb
lahf
xchg
mov
std
aaa
sbb
dec
fst
fcoms
inc
pop
dec
push
test
enter
lahf
imul
or
cmpl
mov
aad
in
sbb
mov
sub
loopne
movsb
lods
xor
divb
popa
pop
push
pushf
xchg
cmp
xor
sub
push
sbb
int
test
test
aas
pop
mov
orb
jmp
pop
or
cwtl
cltd
mov
hlt
cs
fsubs
int
inc
imul
inc
pop
cwtl
lods
lret
or
out
push
pop
aaa
push
push
xchg
jne
call
adc
pop
push
stos
bound
subb
in
lock
add
in
cli
int
xchg
mov
imull
inc
pop
fwait
jns
mov
es
dec
das
lds
adc
pop
mov
sbb
mov
xchg
test
mov
cmp
and
lret
mull
lods
call
fs
xlat
mov
ljmp
mov
out
outsl
addb
or
lods
out
sbb
movsb
fwait
xchg
push
lret
outsl
add
cmpsl
xlat
sahf
cmp
int3
fcomi
push
test
inc
add
push
pop
jbe
pop
mov
mov
ja
scas
mov
push
inc
imul
or
ret
fs
and
loop
shll
outsb
or
addr16
ficoml
jno,pn
push
out
and
sub
mul
sbb
sahf
dec
xlat
test
sub
out
pusha
addr16
mov
mov
in
iret
into
inc
push
xlat
xorb
inc
xchg
mov
or
pop
xor
fdivs
mov
xor
inc
mov
xchg
lahf
push
insb
loopne
sub
movsb
mov
xor
nop
dec
inc
add
jno
out
imul
add
xchg
mov
sub
addr16
cmc
lock
mov
daa
pop
shr
push
lock
mov
int3
fs
cmp
xor
inc
scas
pop
aad
xor
sub
call
push
rcr
jo
arpl
cwtl
or
inc
sbb
das
loope
daa
pop
fs
mov
mov
xchg
sbb
xor
cmp
inc
xchg
mov
or
push
sbb
sub
scas
nop
adc
mov
xlat
inc
or
push
out
aaa
outsb
out
hlt
mov
xchg
inc
lock
add
stc
mov
cmp
pop
pop
ret
xor
repz
mov
addr16
ljmp
inc
cld
add
xchg
xor
imul
adc
leave
inc
xor
and
iret
outsb
jb
rol
js
and
inc
mov
std
cmp
das
js
mov
div
iret
pop
dec
outsb
hlt
mov
enter
icebp
jp
loop
cmpsb
pushf
rorl
mov
stc
xor
movsl
shll
mov
insb
in
xorb
and
out
fisubrl
cmp
jmp
out
out
out
ljmp
lea
add
mov
dec
icebp
cmp
mov
sub
lods
push
add
sub
ret
inc
jne
mov
into
mov
cmp
int
loop
clc
cltd
lea
aaa
out
mov
stos
pushw
idivb
and
pop
mov
cmc
jge
pop
mov
xlat
adc
push
mov
inc
test
dec
mov
test
imul
dec
jbe
jge
rclb
adc
dec
push
pop
mov
and
mov
loopne
jns
xchg
mov
pop
test
mov
jne
dec
mov
data16
jae
mov
jle
enter
sahf
xchg
loop
and
mov
insb
add
jge
ljmp
out
notb
iret
in
popf
andb
lds
cmp
mov
js
clc
and
cmp
mov
adc
mov
pushf
sbb
jnp
add
xor
xor
cmp
and
xchg
xchg
shlb
push
out
sbb
dec
adc
mov
mov
sbb
cld
inc
or
add
push
into
divl
fbstp
jns
stc
push
cmc
adc
andb
or
dec
adc
out
stos
cmp
ret
or
fwait
mov
jge
cmp
fs
xchg
sbbb
mov
mov
fldenv
ss
sbb
push
adc
mov
fimull
mov
icebp
mov
addr16
cld
loop
leave
add
bound
test
cs
leave
cmpsb
int3
sub
popf
negb
xchg
pop
icebp
sbb
fs
ret
and
incb
insl
add
dec
les
stos
out
cmpsb
sub
pop
mov
inc
dec
xchg
add
push
out
cmp
pop
mov
push
movsl
pop
and
inc
xor
fimuls
mov
push
cli
ja
in
pusha
jl
aaa
inc
mov
es
inc
jnp
jle
cvtdq2ps
lcall
cmp
jg
popa
in
push
xor
gs
ds
notb
das
cmp
cmp
bnd
arpl
sbb
imul
std
lret
inc
sub
jnp
mov
mov
and
sub
por
ss
lea
sti
inc
addr16
scas
sub
aaa
imul
push
leave
stos
jns
cmpb
in
out
lock
das
popf
enter
or
mov
push
sub
cli
xchg
mov
out
in
fimull
and
mov
mov
icebp
pop
lahf
xchg
jae
jp
imul
adc
pop
inc
sbb
jl
sub
mov
push
add
mov
adc
hlt
xchg
fldenv
push
sbb
sub
mov
pop
xchg
adc
pop
inc
lret
scas
cmp
sbb
ret
scas
repnz
xor
jo
cmp
mov
fiadds
insb
jo
leave
fcompl
add
stos
pop
xchg
icebp
jp
fiadds
daa
data16
jmp
test
filds
or
pop
cli
into
inc
rcrl
shlb
mov
out
fistps
test
and
subb
sbb
sub
xor
add
push
out
arpl
mov
aam
xor
dec
mov
inc
push
sahf
daa
cld
out
aaa
leave
movsb
je
insb
lock
xchg
icebp
iret
gs
sub
mov
shll
mov
setl
jb
push
sbb
jl
stc
xchg
jb
ret
sahf
xchg
sub
jecxz
bound
push
inc
stc
ljmp
scas
repz
bound
rcrl
and
lahf
mov
fiadds
pop
rcl
jb
jb
jl
lods
pop
push
xor
sbb
jl
sbb
xchg
in
mov
dec
pop
and
test
mov
ljmp
or
xor
shrb
dec
jmp
negb
shll
movsl
testb
test
xchg
push
insl
cli
bound
adc
sub
lcall
and
xor
aas
mov
inc
rcrb
fcmove
mov
xchg
call
push
mov
insb
xor
pop
cmp
sahf
in
jp
fldcw
dec
icebp
unpcklps
push
xlat
sarb
ds
leave
out
add
stos
shlb
sub
addl
mov
mov
inc
imul
loop
mov
mov
mov
ja
add
add
mov
or
sub
xchg
xchg
test
mov
out
mov
xchg
mov
lret
sbb
cmp
call
inc
daa
aaa
or
fistpll
and
bnd
push
arpl
les
insl
jns
imul
pop
pusha
daa
cli
incl
or
nop
mov
mov
cmp
lods
scas
stos
pushf
push
dec
pushfw
addr16
sub
xchg
push
in
push
cmp
jl
shl
and
int
mov
jns
sbb
xchg
xor
loope
cmp
add
pop
cmp
fmuls
sub
cmp
xchg
dec
fldcw
cli
ljmp
and
nop
test
stos
aaa
fwait
jmp
popf
or
fwait
xchg
test
shrl
jmp
cmp
xor
pop
fs
sub
xchg
xchg
xchg
cltd
xor
popf
pop
inc
xchg
lret
iret
jb
jg
jg
add
out
and
test
popl
mov
cmpsl
leave
jmp
push
push
adcl
sbb
nop
adc
sbb
mov
gs
mov
mov
inc
lret
out
fisttpll
fsubrs
lock
mov
pop
sahf
xchg
out
inc
jecxz
outsl
xchg
outsb
fnsave
lcall
int
test
add
add
sti
jmp
push
jmp
xchg
in
aas
jbe
xchg
push
or
xor
fisubrl
sbb
fidivs
outsb
xor
and
sub
push
ret
inc
pop
testl
mov
loope
fucomi
adc
cmp
and
incl
cld
jp
pop
fsubs
iret
push
addr16
xchg
push
pop
bnd
lret
sbb
scas
aaa
cli
pop
mov
rcl
mov
ljmp
push
and
push
inc
inc
xchg
and
insl
sub
cmpsl
adc
pop
loopne
pop
imul
int
popf
cmpsl
cltd
jns
cmpsl
aam
dec
jnp
ds
fs
cs
adc
add
mov
sub
sbbb
loopne
dec
call
dec
fsubr
sub
adc
arpl
add
aaa
dec
out
jnp
clc
or
movsl
pop
pcmpgtw
fcoms
and
xorl
jge
xchg
xorb
cltd
dec
xchg
mov
incb
lcall
inc
mov
mov
les
insb
scas
pop
mov
clc
inc
push
xchg
add
xor
movsl
sub
loopne
ret
mov
lret
pop
bound
jo
in
outsb
cs
pop
xchg
aad
test
add
mov
ret
scas
pop
fsubl
push
sub
ss
loopne
adc
xor
or
testb
sbb
aas
jbe
mov
xchg
jle
mov
adc
push
loop
jbe
in
mov
nop
inc
les
jl
mov
xchg
pop
or
cli
dec
daa
or
xchg
mov
pop
mov
ret
enter
sub
dec
and
pop
mov
data16
xor
or
dec
leave
and
adc
loopne
daa
sub
xchg
and
daa
nop
fstpl
lcall
sbb
pusha
leave
sbb
sbb
testl
add
repnz
rcl
jae
jge
jno
filds
jmp
or
lret
cld
daa
shll
adc
mov
aad
jns
out
popf
jecxz
js
in
ud2
out
mov
dec
insb
call
imul
rorb
mov
xchg
mov
jns
sbb
stos
pusha
in
inc
jle
test
jmp
cmovnp
lret
das
and
pop
mov
and
cltd
xchg
add
pop
out
rol
shll
lcall
insb
lret
repz
test
ljmp
js
xor
popf
loope
mov
add
shl
jno
sbb
jg
test
push
adc
emms
push
or
xchg
and
das
push
inc
xchg
popf
add
add
in
dec
dec
or
ja
test
inc
xchg
xchg
ljmp
mov
xchg
push
repnz
jecxz
and
fdiv
xor
jb
leave
icebp
inc
scas
mov
arpl
rorb
add
push
mov
sbb
dec
jmp
sbb
sbb
cmpsl
les
add
ret
cwtl
dec
div
andb
cli
std
fistpll
jns
inc
sahf
jns
test
fbld
push
aam
mov
pop
mov
cmpsl
dec
add
and
lret
inc
hlt
mov
cs
push
scas
aas
cmpsl
jl
sub
sub
add
pushf
cmp
dec
push
movsb
sarb
push
cmp
cltd
pop
rorl
xchg
stos
dec
and
dec
outsb
dec
test
shrl
iret
fisttps
in
cmpsl
fldcw
cli
test
cltd
fisttps
loopne
jne
fildl
popa
loop
xlat
test
stc
adc
dec
or
das
mov
pop
enter
leave
clc
outsb
jb
lods
lock
dec
xor
mov
jns
faddl
sahf
cmp
ret
sahf
xchg
and
inc
mov
cmp
pop
aas
dec
andb
add
dec
sub
jp
int
mov
add
int
or
aad
iret
lahf
sbb
into
orb
sub
mov
shlb
or
xchg
or
in
inc
movsl
inc
xchg
mov
jmp
dec
add
mov
popf
shl
pop
sub
mov
cs
mov
push
gs
cld
out
sbb
shll
or
ror
or
sub
add
jge
js
fidivrl
and
push
jae
mov
nop
jg
ja
or
and
lds
bound
imul
into
ljmp
ss
in
stos
dec
pop
pop
push
paddusw
mov
mov
rcl
cwtl
pop
pop
lods
ret
jno
adc
xchg
in
cwtl
sub
sbb
int
push
mov
sub
ret
push
fwait
xor
mov
lea
lahf
adc
push
mov
in
sbbb
cld
mov
jp
adc
hlt
mov
rorb
sub
jo
jb
fwait
repnz
adc
xchg
icebp
outsl
cmp
mov
int3
jne
push
push
mov
insb
addr16
fs
rcrl
push
mov
cltd
rorb
ret
inc
fs
push
inc
cmp
ds
pop
sarl
push
popf
mov
loopne
sub
arpl
in
in
sub
or
xchg
mov
repnz
sbb
mov
sub
ret
sbbb
mov
hlt
mull
mov
cmpsb
cmp
pop
inc
push
int3
cmovge
test
and
aaa
repz
adc
mov
cltd
xor
sub
test
mov
test
mov
push
lret
sub
inc
scas
dec
sub
adc
bnd
dec
xor
and
pop
inc
mov
sti
out
pop
mov
scas
std
jp
cld
xchg
inc
stos
mov
cwtl
cwtl
sarb
sub
push
cltd
mov
push
lcall
leave
dec
insb
sarl
loope
leave
lock
jb
lods
arpl
jns
or
movsl
stos
int
push
sbb
jnp
push
cld
xchg
dec
and
xor
scas
mov
rcr
filds
sub
cld
repz
or
cmp
push
cmc
sbb
pop
jo
sub
push
imul
into
mov
jg
and
ficoml
fsts
lahf
add
push
add
cmp
sbb
rcrl
sub
daa
pop
pop
sbb
xrstors
push
sub
adc
xchg
mov
imul
inc
movsl
inc
daa
cltd
dec
scas
mov
les
notb
mov
sbb
xchg
cli
xchg
mov
pop
in
fiaddl
inc
push
fsubp
repnz
aaa
and
lcall
ror
fiaddl
dec
push
sti
mov
shl
xchg
inc
and
xor
insb
ret
mov
out
dec
xlat
mov
arpl
call
or
icebp
cmc
xchg
adc
or
adc
pop
aam
ss
popf
bts
repnz
sub
rcrl
lock
ljmp
jbe
mov
enter
or
lahf
daa
jge
ficomps
mov
inc
in
adc
xlat
sbb
mov
orb
xor
in
dec
add
fdivs
imulb
popf
adc
push
push
movsb
insb
and
clc
mov
in
out
clc
in
negb
xchg
out
js
and
jecxz
lods
lock
in
xor
jecxz
xor
ret
inc
lahf
push
int3
mov
add
and
lret
outsl
jne
push
cmpsl
pushf
mov
sbb
sahf
xor
push
mov
lahf
insb
mov
in
pop
sub
jmp
outsb
rcrl
popa
add
cmpsl
lods
fmulp
das
loopne
or
jp
insb
inc
cmpsl
outsl
jmp
rolb
pop
ret
add
mov
in
sbb
inc
or
jp
mov
add
dec
push
mov
sahf
jbe
das
loope
mov
or
aas
dec
repnz
insl
dec
nop
sub
clc
fs
cmp
jmp
cmpb
mov
sub
mov
xor
bound
xor
adc
mov
stos
scas
jae
stos
insb
inc
sbb
sub
pop
mov
mov
push
pusha
loop
push
jg
incb
jnp
or
in
subl
push
push
lret
shll
cmp
jno
imul
int3
sub
data16
jecxz
push
inc
or
inc
pop
xchg
fs
sub
add
xorb
test
cmp
mov
pop
adc
lahf
fdivs
xchg
push
mov
jecxz
into
add
add
mov
jmp
outsb
fisubrs
xor
xlat
out
push
or
mov
mov
lahf
jmp
jno
adcl
ret
clc
pusha
mov
incl
jg
in
in
ret
fwait
rcrb
stos
xchg
dec
repnz
fldcw
repnz
inc
out
movsl
push
js
aas
push
dec
bnd
add
cwtl
pop
or
lods
scas
jno
adc
mov
adc
push
pushf
enter
mov
push
mov
rorb
scas
dec
mov
adc
push
dec
xchg
jl
cltd
adc
pop
in
sbb
fwait
clc
inc
xchg
sbb
mov
adc
cmp
jns
xchg
ljmp
addr16
insb
pop
mov
negb
sahf
sub
fbld
stos
aam
push
push
sbb
outsb
or
pop
scas
sahf
xor
mov
adc
out
mov
vpsubsw
or
ja
movsb
je
insb
outsl
ss
ss
dec
push
dec
mov
inc
adc
inc
movsb
jns
inc
lock
jmp
xor
ljmp
std
andb
jmp
out
xor
repnz
imul
ret
pop
pop
adc
mov
xor
sbb
loop
push
xor
push
out
adc
cwtl
inc
nop
mov
sub
mov
scas
adc
jne
lds
pusha
cli
fldcw
aam
cltd
out
fadds
adc
rcrb
add
jo
out
mov
jmp
outsl
ret
iret
xlat
mov
pop
test
aas
lea
es
fmull
cwtl
nop
mov
sub
imul
loopne
sti
fdivp
mov
popf
add
insb
lahf
jne
xchg
sub
jno
rorb
rcll
pop
or
ss
dec
adc
mov
pop
push
sbb
jbe
lds
add
rcl
rorb
ret
mov
xchg
mov
mov
sahf
fcmovnu
ljmp
xchg
insl
je
or
out
xchg
inc
cmc
jo
push
dec
and
mov
mov
aad
lret
xor
push
shll
lret
faddl
popf
sti
test
sbb
mov
inc
cld
iret
pushf
imul
xor
iret
sbb
jmp
repnz
mov
sbb
loop
push
push
sub
gs
xor
adc
cli
lods
xor
fld1
push
lret
rcrb
push
sub
adc
mov
aaa
shlb
cmp
jge
in
inc
sbb
rclb
std
fmull
pop
xchg
or
in
adc
mov
jbe
sub
inc
xor
push
mov
sbb
idivb
jns
test
lahf
aad
ret
sub
adc
sub
cld
in
out
xchg
adc
sub
mov
icebp
mov
fwait
push
adc
insl
nop
mov
push
add
lret
dec
arpl
sbb
icebp
pop
lret
lea
aam
lods
cmpsl
mov
fildl
ja
leave
cmp
stc
lret
sbb
mov
adc
ja
jo
nop
imul
into
inc
insb
test
inc
add
mov
dec
fsubr
dec
dec
xchg
popa
mov
aaa
fstp
pop
or
pop
pop
dec
sbb
adc
int3
mov
xor
sub
cwtl
jno
xchg
push
xchg
pop
fmul
pop
roll
push
jle
jecxz
subl
cmp
adc
fidivrl
sbb
sub
cmpsl
jle
int
fsubr
outsb
push
ljmp
inc
jo
xchg
iret
mov
jge
lods
cmp
fdivs
mov
movsb
cmpxchg
int3
repz
mov
mov
pusha
mov
nop
in
adc
repnz
push
cmpsb
test
rcrb
fnstcw
xchg
xchg
sbb
jle
addr16
fisubrl
xchg
test
adc
pop
cmpsl
jl
das
mov
adc
sbb
mov
insb
subb
clc
jle
test
test
jle
in
popl
push
inc
sbb
daa
jo
not
mov
insb
mov
loopne
add
xchg
arpl
test
jbe
iret
lea
popl
sti
pop
xor
push
in
adc
jl
xor
ljmp
inc
pop
xor
dec
notb
push
inc
mov
dec
jg
xor
sub
int3
push
cmpsb
ret
jne
mov
push
push
or
mov
cmpsb
add
and
lcall
jge
mov
push
inc
frstor
add
pop
test
xchg
jo
xor
jns
test
arpl
push
xchg
mov
dec
imull
sub
add
cli
add
mov
add
sti
xor
add
mov
insb
notb
mov
dec
imulb
dec
cmp
sub
sahf
sahf
pushf
fwait
xchg
mov
push
mov
jno
scas
sbb
mov
dec
shrb
sbb
sarb
out
arpl
pop
xchg
jbe
rcll
mov
dec
adc
test
pop
fbstp
add
lret
arpl
mov
out
insb
arpl
lods
xchg
push
add
in
stos
ss
call
out
jb
mov
sbb
test
jmp
cmp
lahf
push
sbb
rcll
push
mov
cltd
cmp
mov
pop
add
push
in
js
aam
mov
pop
push
xor
mov
inc
gs
pop
orb
sarb
loopne
push
push
mov
sub
dec
mov
cmp
lret
int3
in
fdiv
mov
repnz
fimuls
js
inc
pop
pop
pop
mov
adc
out
jg
rolb
xor
rcr
ret
and
fisubl
and
xor
mov
xchg
pop
mov
testb
out
jo
xor
or
mov
jl
repnz
in
subb
dec
mov
in
mov
shlb
dec
push
stc
inc
mov
lea
push
jo
mov
cmpl
mov
mov
ds
adc
push
lods
sub
cmpps
adc
mov
stc
leave
add
pop
lods
repz
or
dec
mov
push
sub
ds
cmp
ja
jae
insb
dec
insb
out
adc
sbb
push
sbb
pop
pop
ja
jb
push
cli
push
ss
cmp
std
call
pop
adc
jmp
jbe
lret
in
mov
sbb
push
inc
shll
push
jno
xor
mov
cmp
loop
xchg
mov
push
xchg
inc
outsb
insl
pop
mov
push
pop
cmp
movsb
fcmovnu
call
inc
lret
push
adc
leave
sbb
sub
cs
out
in
jecxz
clc
imul
lods
ss
cmpps
xor
jo
pop
jle
fs
int
jg
push
ja
push
sub
out
mov
mov
jnp
pusha
out
das
add
loopne
fwait
push
hlt
and
cli
rcrb
inc
int3
push
into
cmpsb
or
out
out
cmc
inc
gs
lds
xchg
movsb
lret
fwait
gs
xchg
mov
je
mov
lds
jns
push
push
stos
xchg
insl
xor
xor
imul
sub
jmp
out
ds
xor
mov
adc
sub
movsl
into
les
mov
lods
mov
push
test
push
loope
fwait
into
test
add
test
jle
out
hlt
jmp
lcall
xor
aad
lret
sbb
mov
pushf
sub
bound
arpl
in
inc
and
push
push
add
aad
jb
xchg
adc
lahf
fdivrl
cs
jge
insl
mov
nop
mov
push
jle
xchg
addr16
imulb
mov
and
mov
jle
lea
pop
push
sub
mov
out
sahf
cmc
dec
xchg
pusha
pop
lods
loopne
movsb
jnp
out
mov
jo
imul
jo
xor
dec
push
cmpsl
lcall
and
inc
cmp
xchg
lahf
testl
int3
sub
mov
inc
add
and
xor
mov
inc
and
mov
dec
in
push
sbb
inc
lods
js
xor
sub
das
cmp
iret
pop
fdivp
js
sbb
push
sbb
or
or
inc
pop
fldl
outsl
or
das
pushl
add
out
and
mov
sti
xchg
add
and
xor
jge
into
jbe
iret
mov
adc
pop
int3
popf
mov
out
sub
adc
dec
test
shrl
nop
mulb
or
cmp
std
cmc
push
inc
inc
and
mov
jno
push
dec
nop
mov
push
mov
repz
fpatan
cmp
or
push
vcvtdq2ps
bound
inc
jae
and
mov
call
cltd
pop
mov
repnz
or
aaa
add
push
push
pop
mov
and
cs
dec
dec
dec
sub
mov
push
mul
or
and
pop
pop
shl
cmc
adcl
shr
decb
or
sbb
adc
aaa
sub
into
or
cld
cs
lock
into
scas
push
sub
outsb
mov
jbe
popf
aas
and
and
mov
ss
stc
xor
xor
sub
xchg
mov
xchg
loop
fndisi(8087
xchg
dec
and
sub
adc
lcall
ret
pop
ss
inc
lcall
sbb
lds
inc
pop
idiv
adc
cmp
lcall
loopne
clc
fs
pop
jae
mov
inc
cmp
mov
push
loop
jae
outsb
inc
mov
mov
or
ret
ret
movsl
mov
inc
ret
jl
inc
ret
lcall
out
xchg
sub
je
jecxz
adc
ss
mov
push
and
shl
cmp
pop
out
mov
sbbb
subl
js
dec
mov
out
rclb
add
jo
cmpb
and
mov
dec
pop
and
pop
mov
xor
xor
xor
xchg
fidivs
cs
pop
push
xor
xlat
push
mov
and
decl
cmp
adc
mov
add
mov
lea
outsb
ss
cmc
sbb
push
aad
jae
inc
ret
shlb
xor
sbb
ret
dec
and
fisubs
fisubl
lods
dec
stc
jl
fstpt
mov
lock
notl
imul
lea
jg
repz
and
in
adc
mov
mov
lret
cmp
aad
xor
mov
dec
mov
push
in
es
jl
xor
mov
jne
sbb
mov
ret
dec
aaa
pop
test
xor
xor
or
std
and
mov
add
dec
add
notb
mov
addb
pop
jp
sar
dec
rcll
orb
pop
stc
mov
scas
imul
xor
jo
ret
or
loop
bound
iret
xor
sbb
mov
in
cs
loope
in
mov
mov
inc
rcr
jge
cmp
jbe
lahf
xchg
dec
arpl
lods
add
bound
push
aad
enter
xor
das
mov
xchg
cs
aaa
or
jmp
gs
divl
xchg
and
pop
xchg
mov
ja
xchg
fnstcw
das
arpl
inc
into
repnz
mov
and
xchg
jl
out
lret
nop
push
mov
jp
outsb
cs
xor
imul
stc
out
ds
jmp
mov
js
adc
xchg
sbb
loopne
push
test
xor
ret
inc
dec
mov
rcrb
sahf
popf
mov
data16
sti
clc
js
xchg
mov
cmp
xchg
cltd
das
and
xor
ror
inc
sbb
imul
mov
cmpl
out
notb
push
lcall
testl
lock
mov
inc
xchg
cmpsb
adcb
dec
outsb
mov
or
insl
cwtl
xor
mulb
add
lret
outsl
ja
idivb
push
push
rcrb
add
sahf
sub
mov
lahf
lahf
scas
imul
ja
adc
jmp
and
insl
mov
insl
and
xchg
js
pop
dec
jbe
sahf
ds
dec
cs
clc
pusha
pop
adc
testb
sub
leave
fwait
lcall
xor
ljmp
add
mov
out
cmp
or
mul
cmp
dec
popa
xchg
negb
pop
push
addr16
xor
xor
movl
xor
xor
pop
jns
sub
xor
fdivrl
arpl
and
inc
faddp
sbb
add
lods
xchg
mov
jmp
repnz
adc
xchg
add
nop
xchg
es
out
fs
dec
pusha
shl
push
jo
scas
xchg
imul
add
rcrl
mov
addb
mov
pop
jno
lahf
movsl
out
add
jae,pn
test
mov
xchg
mov
in
es
and
cs
stc
pop
mov
arpl
add
jns
cmp
out
adc
push
mov
inc
push
push
inc
lret
imul
and
enter
les
lds
mov
bound
or
sbb
push
push
or
mov
insl
cmp
or
xchg
es
jl
sbb
dec
xchg
lret
into
xchg
fldlg2
push
aam
and
mov
shll
sbb
or
add
ljmp
mov
xchg
jp
xchg
les
dec
push
nop
fdivl
pushf
ret
mov
fs
jbe
jl
jp
pusha
add
js
in
leave
mov
in
sub
movb
pop
push
jle
push
add
inc
or
ret
rolb
push
movsl
inc
adc
es
push
lret
inc
shrb
fnstsw
bound
jg,pt
fucompp
insl
adc
mov
mov
imul
xor
pop
loop
and
enter
lcall
dec
dec
ds
sbb
cmpsb
push
dec
dec
fstpl
xlat
loope
cwtl
lret
add
xchg
shll
ret
dec
jg
int
pusha
mov
pop
leave
aaa
cmpl
cld
xor
in
cs
stos
mov
push
xchg
outsb
jne
popf
stos
jmp
insl
mov
jle
dec
bound
lds
adc
loop
pop
cmp
push
xor
mov
outsb
pop
lods
jnp
sti
push
dec
mov
jge
push
lods
sub
adcb
scas
jp
ja,pt
xchg
out
mov
sub
imul
push
inc
push
add
xchg
clc
int3
loop
mov
ja
xlat
add
jnp
ja
push
xchg
mov
ret
push
rcrl
insb
insl
mov
lret
xchg
cmc
lret
mov
aam
push
daa
jo
inc
fnstsw
test
inc
pop
push
cmp
repz
mov
ljmp
pushf
mov
fcoms
adc
add
cld
dec
jg
adc
ret
mov
shr
xchg
push
sbb
xchg
adc
add
clc
arpl
call
jp
and
inc
xchg
pusha
inc
div
mov
adcb
cmpl
cmpsl
out
mov
int
inc
sti
aad
ja
sub
incb
lock
lcall
push
jg
fwait
adc
insl
bound
xchg
test
mov
mov
pop
test
testb
inc
cmp
outsl
adcb
loopne
inc
jno
shl
subl
into
scas
sub
mov
movsl
fwait
movsl
into
scas
rcrl
testl
test
outsb
mov
jo
loope
mov
gs
cltd
es
loope
rcrb
push
out
pop
add
mov
test
xor
push
cmp
mov
inc
pop
mov
ss
pop
cltd
cmc
rolb
xor
rorl
repz
fsub
inc
adc
mov
out
mov
lods
scas
test
adc
sub
mov
dec
inc
in
hlt
and
mov
pusha
push
add
add
rcrl
out
and
cmpb
xchg
dec
or
into
pop
jo
jno
in
fnstenv
dec
push
add
mov
scas
cmpsl
xor
fmull
stos
hlt
pop
jbe
jo
lret
cmp
js
ret
jecxz
add
lea
aaa
decb
ucomiss
pop
xchg
addb
xchg
mov
stc
or
dec
sub
or
cmp
mov
ficompl
mov
pop
out
dec
outsb
mov
pop
mov
mov
mov
xchg
or
ljmp
mov
push
push
or
add
scas
xor
mov
out
out
and
test
add
xchg
lahf
fwait
add
xchg
xchg
and
add
fcmove
decl
ss
and
xchg
push
imul
cmp
push
cmp
adc
xorb
stos
pop
cs
popf
cltd
shrl
inc
sti
aam
insb
sub
xchg
pop
inc
out
xchg
addr16
push
adc
push
cmp
sbb
cmp
cmp
xchg
inc
and
js
std
jecxz
sub
adc
push
sub
pop
aaa
add
mov
xor
mov
mov
mov
dec
into
cmpsl
lahf
mov
or
inc
mov
test
std
mov
clc
rcrl
cmp
out
out
fisubrl
data16
jb
jns
sbb
imulb
add
sbb
adc
mov
or
lahf
clc
add
adc
xchg
cli
sti
gs
call
imul
push
mov
addl
shll
int3
sbb
test
sbb
ret
scas
xchg
stc
decl
es
mov
pop
pop
pop
cmp
sub
loope
xchg
xchg
dec
nop
data16
mov
dec
push
sbb
rcrb
inc
fiaddl
push
addr16
or
cmp
sti
add
or
cmpsl
cmpsb
jg
jl
mov
mov
orb
and
and
sbb
or
lcall
mov
cmp
xor
stc
push
mov
push
scas
adc
inc
pop
pop
testb
jbe
shrb
xchg
es
out
mov
push
mov
and
sbb
inc
pushf
cmpsl
sub
mov
jns
mov
movsb
stos
xlat
outsl
push
add
cmc
jbe
xchg
mov
adc
fwait
jnp
dec
jge
push
xchg
shl
loope
mov
inc
mov
test
ret
pop
lds
out
das
mov
cwtl
xchg
jbe
pushf
lods
mov
mov
andb
mov
add
mov
jne
jne
mov
mov
push
jns
aam
ss
cmpsb
das
cmp
add
insb
cli
jbe
mov
ror
push
pusha
mov
add
xchg
inc
mulb
fisubs
scas
jb
pushf
and
pop
out
sub
jo
imul
push
and
mov
fdivrl
mov
dec
cmpsl
insl
addl
dec
sub
mov
fisubl
dec
test
jno
loopne
adc
loop
in
sbb
test
out
mov
cmc
repz
fsubs
mov
aaa
ficoml
loopne
loopne
insl
iret
lods
jbe
mov
out
cmpsl
ds
mov
add
movsl
push
mov
shll
push
push
roll
xchg
fwait
pop
sbb
mov
movsl
mov
push
adc
out
sub
clc
jl
and
clc
mov
js
in
ss
pusha
fistl
jmp
adc
adc
out
fldl
push
test
inc
mov
loopne
popa
sub
mov
cltd
mov
out
adc
out
xchg
loop
push
pop
adc
mov
sbb
push
jbe
into
inc
jbe
add
aaa
pop
rol
add
push
mov
les
mov
push
jge
jns
lahf
stos
cmpsl
inc
pop
cmpsb
mov
mov
out
xchg
push
jo
mov
jno
mov
icebp
xchg
xchg
lock
sbb
lret
pop
loop
or
mov
mov
mov
lock
imul
addl
xchg
and
mov
xchg
loop
cmp
mov
push
movsb
and
repnz
movsb
lret
push
jne
data16
movsl
sub
lret
in
cmpsb
das
fnstenv
cmpsb
jne
loop
inc
lcall
call
loope
gs
cld
push
mov
hlt
shlb
cmpsl
icebp
mov
or
pop
in
jl
sbb
filds
jnp
cmp
push
or
mov
dec
mov
push
and
outsb
cmpsl
inc
fstps
in
loopne
jle
pop
out
push
or
ja
and
dec
xor
add
xor
add
lods
sub
mov
push
or
jns
jbe
repz
mov
xor
push
xor
and
xor
arpl
inc
pop
test
lods
xchg
xchg
adc
jns
dec
cld
loop
jl
loope
push
push
add
ljmp
jae
cltd
std
mov
arpl
pop
inc
or
jnp
loopne
pop
sarl
jb
rcl
push
fildll
rcrb
xor
loope
or
ret
ret
mov
fwait
cltd
ret
pop
mov
or
je
xchg
cmc
pop
inc
or
xchg
cmpl
dec
daa
cld
mov
mov
in
mov
cmc
and
fstpl
mov
aas
pop
xchg
fnstcw
shll
mov
inc
push
xchg
jne
mov
imul
push
out
push
xor
lock
or
mov
adcl
call
fs
cmp
mov
xchg
inc
out
scas
mov
mov
push
stc
test
mov
in
inc
lds
mov
xchg
imul
int
push
outsl
and
aaa
ja
pop
cmp
ljmpw
adc
inc
stos
in
cmp
xlat
push
ss
jmp
iret
pop
xor
daa
cmp
mov
cmp
inc
lret
call
push
jl
sbb
jbe
dec
mov
in
jnp
adc
mov
jb
data16
or
mov
cld
aas
imul
cli
inc
dec
push
iret
push
iret
bound
mov
mov
pop
arpl
das
push
and
jo
das
push
bound
push
jns
out
daa
mov
sub
sub
cwtl
out
loope
aaa
es
mov
push
mov
mov
and
add
pop
lret
rclb
movsl
jmp
add
inc
lcall
popf
addr16
cmp
dec
push
lock
jle
dec
push
push
out
inc
arpl
je
lock
jge
aad
out
xchg
push
mov
mov
cltd
mov
adc
push
xchg
bound
popf
rcll
fcmove
push
push
mov
out
mov
pop
mov
dec
add
js
int
movsl
outsb
mov
ds
pushf
popf
jle
add
add
pop
cmpsl
jo
rorl
aad
out
test
insb
inc
adc
hlt
add
adc
and
frstor
or
dec
jmp
xor
xchg
and
jo
je
roll
addr16
xlat
aad
add
add
stos
insb
xchg
pop
lret
sti
pop
sub
sub
es
mov
mov
dec
ss
lock
ds
cmpsb
mov
jp
fstl
mov
push
jae
fs
mov
testl
insl
xor
sub
sub
xor
adc
mov
mov
jecxz
decb
xchg
and
jno
xchg
lock
scas
xchg
xchg
mov
mov
mov
mov
loop
std
in
cli
ljmp
mov
repnz
push
mov
stos
xorl
ja
push
mov
fcompl
movsl
dec
jns
cmpsl
loop
loopne
fptan
shlb
rol
jae
jae
es
jg
cmp
rcrb
test
push
cmp
cmpsb
push
mov
imul
push
addr16
sbb
daa
jl
lret
enter
sub
out
sti
dec
xor
mov
ja
sbb
cld
xchg
jno
insb
cmp
lock
jbe
push
sbb
mov
imul
gs
ret
ja
sub
repnz
leave
popa
dec
push
out
cmc
inc
fdivrp
insl
mov
xor
xor
popa
or
mul
dec
repnz
jb
mov
and
xor
or
sub
fisubrl
outsb
sti
ss
xchg
jbe
cltd
pop
adc
stc
cltd
ucomiss
mov
jbe
adc
mov
xchg
incl
sbb
std
fdivs
scas
mov
mov
out
stc
je
fisubrs
mov
mov
icebp
xchg
pop
pop
out
dec
mov
mov
scas
cs
xor
pop
lret
cld
mov
xchg
pop
and
ja
push
mov
mov
out
pmullw
daa
and
test
pop
cmpsl
adc
movsb
adc
outsb
adc
and
test
into
loopne
int3
mov
inc
bound
and
test
push
in
aaa
jl
mov
daa
int3
bound
pusha
dec
sbb
out
into
dec
pusha
push
cmp
mov
orl
mov
adc
xchg
ljmp
mov
jns
pop
and
adc
mov
icebp
addr16
sub
mov
jmp
xlat
xchg
dec
cli
mov
stos
push
mov
sti
lcall
inc
xlat
xlat
subl
cmpl
xchg
xchg
iret
cmp
push
scas
inc
mov
dec
jae
sub
push
jmp
mov
jbe
sbb
jg
jl
jbe
cli
push
lea
pop
lea
jno
js
js
popf
pop
scas
xrelease
test
mov
push
adcb
jp
je
std
jae
mov
or
mov
and
cld
std
int
fldpi
mov
adc
and
insb
sbb
clc
cmpb
sbb
in
out
pop
sbb
pop
jbe
xchg
inc
mov
mov
mov
sbb
std
fnsave
xlat
icebp
in
icebp
cmp
or
or
push
push
in
and
push
sbb
ss
adc
pop
imul
xor
pop
repz
cmp
mov
outsb
mov
or
lods
js
dec
push
push
dec
push
inc
andl
cmp
jae
xlat
shll
loope
and
es
jecxz
das
into
xor
inc
xchg
in
and
sub
or
and
push
rorl
scas
push
pop
sub
fs
jnp
test
outsb
inc
in
repnz
xchg
out
xor
sbb
ss
xchg
mov
outsl
sub
dec
ret
jmp
aaa
cmp
sub
loopw
lods
fs
outsb
mov
fistps
mov
mov
sbb
mov
inc
addb
std
push
jo
ret
push
cwtl
mov
outsl
inc
aad
inc
mov
push
xor
xchg
mov
outsb
push
jp
dec
lods
in
add
stc
cwtl
cmpsb
nop
testb
ds
jb
enter
inc
stc
xorb
jno
fdivrl
mov
xor
jbe
orb
fistpl
scas
testb
mov
fldcw
mov
push
adc
push
xchg
sarl
push
ret
pop
jbe
add
inc
gs
imul
or
xchg
pushw
mov
mov
sbb
pop
pop
and
and
inc
xchg
mov
sbb
push
xchg
ss
sub
or
or
push
pop
push
jns
sti
ds
mov
mov
cmp
jmp
dec
pusha
rcrl
aam
lret
leave
cli
xchg
and
pusha
in
pop
pop
mov
loop
mov
push
xor
dec
jmp
into
lods
or
insl
inc
bound
in
or
lock
loope
cs
lcall
sahf
icebp
mov
jg
cmp
sub
xor
mov
dec
icebp
inc
inc
cltd
mov
dec
lahf
ss
out
aad
out
sbbb
fildll
sbb
add
decb
sahf
cli
jno
jo
pop
inc
scas
xor
daa
cld
mov
or
jp
fs
dec
ret
dec
dec
mov
xchg
jbe
enter
imul
stos
and
sub
cmp
lods
dec
and
add
jecxz
roll
sahf
cmp
mov
ja
div
pop
ss
xchg
or
pop
add
add
cmp
jmp
incb
sbb
dec
fs
gs
push
pop
subl
mov
ret
cmp
cmpsl
bound
mov
dec
xorb
xorl
lret
iret
popf
fimull
mov
mov
push
sub
into
mov
adc
or
test
cmp
inc
pushf
sti
add
out
sbb
aad
push
mov
clc
out
nop
rorl
lods
sub
jmp
ret
ljmp
into
bndstx
pop
adc
mov
push
aam
stc
push
jge
decb
adc
fisubrl
inc
ss
xchg
stos
pop
adcb
leave
cli
inc
pushf
lods
add
xchg
dec
push
in
jb
imul
cmpsb
loop
add
data16
lods
mov
xor
jmp
mov
insl
call
sub
ss
cltd
add
das
xorl
testb
lret
or
dec
lea
mov
jno
das
outsb
jmp
ficoms
daa
and
pop
fists
ds
dec
push
pop
sub
fidivl
loop
xchg
ljmp
das
dec
pushf
xlat
scas
ss
mov
movb
sub
outsb
sbb
jecxz
lock
in
jb
inc
into
fdivs
ret
xchg
loope
inc
out
jb
fiadds
repz
inc
inc
insb
cmpsb
mov
enter
mov
movsb
or
in
or
test
add
sbb
xchg
inc
xchg
sbb
sbb
add
clc
cmp
inc
scas
fwait
aaa
addr16
push
mulb
imull
aaa
sub
pop
js
cs
dec
mov
add
sbb
scas
push
pop
repz
testb
popa
pop
jnp
loopne
add
adc
notb
mov
ds
sahf
decb
mov
pop
dec
cwtl
jle
mov
fs
lock
jle
mov
push
push
mov
push
push
xor
mov
inc
out
lods
rcrl
mov
jns
xchg
sti
pop
dec
sbb
dec
and
popa
ss
xor
and
mov
loop
push
or
xor
sub
or
push
inc
xchg
and
add
push
ljmp
xchg
dec
jecxz
mov
dec
clc
mov
lcall
cmc
pop
jle
pop
cmc
adc
iret
test
rorb
sub
xor
fwait
xchg
jns
mov
mov
jo
insl
cltd
push
inc
mov
xor
sar
sahf
push
jns
add
dec
push
jnp
or
and
push
dec
leave
push
fwait
imul
iret
mov
dec
inc
test
xor
cmovl
push
iret
xchg
inc
add
insl
inc
push
cld
pop
out
inc
mov
ljmp
cld
or
jns
push
mov
popa
push
popa
clc
nop
es
push
jmp
fstpt
test
xchg
add
imul
push
xlat
roll
fwait
stos
scas
cs
stos
xchg
fst
jae
dec
cli
pusha
add
mov
add
ds
test
push
push
or
das
ret
xor
leave
mov
xchg
and
fisttpll
cli
stc
sbb
cli
repnz
sub
in
and
sti
adc
xchg
sub
xor
bound
lret
cld
test
xchg
mov
inc
stos
cwtl
mov
mov
pusha
inc
dec
sbb
imul
stos
loopne
fwait
mov
cmpb
adc
aaa
sub
mov
sahf
add
insb
cmp
mov
test
and
inc
dec
mov
sub
adc
arpl
pop
test
scas
mov
ja
js
jbe
jb
sub
cs
bnd
sub
xor
push
jg
sbb
and
inc
out
and
and
mov
lods
sahf
mov
fdivl
inc
lea
inc
pop
cli
subb
push
mov
and
dec
xchg
popf
jp
fucomi
das
xchg
loopne
aaa
test
pop
mov
fcmovnu
mov
mov
mov
mov
sub
jle
fidivrl
es
lods
outsb
add
inc
arpl
lock
push
xchg
stos
not
jmp
popf
js
mov
adc
jp
rcrl
push
xchg
pop
divb
mov
mov
in
rclb
xor
jmp
jp
push
into
std
cmp
aam
adc
jmp
jne
aas
fucom
push
mov
or
lret
jno
lods
lcall
xchg
xor
daa
test
sbb
jmp
mov
aas
dec
jne
fstl
mov
rcrl
inc
sbb
xchg
inc
add
lods
out
push
lcallw
pushw
nop
dec
out
into
cwtl
negb
stos
add
cmpsb
stos
ds
out
movntps
sub
sub
lahf
mov
push
sbb
mov
shr
cmp
sub
or
fwait
addr16
push
and
jp
add
push
sub
or
loope
xchg
bt
lcall
out
cmp
push
aaa
clc
lds
inc
sbb
xchg
push
push
or
hlt
stos
in
call
xor
or
pop
xor
xchg
xchg
xor
addr16
loopne
loopne
lret
xor
or
daa
pop
std
mov
or
pop
sbb
mov
mov
xchg
sbb
adc
nop
ss
fmull
fidivl
pop
pusha
dec
xor
out
out
cmp
inc
push
stos
push
pop
jnp
cmp
out
xor
sbb
ss
mov
insb
and
cmp
cmp
jg
xchg
outsb
hlt
cmp
ljmp
lret
das
imul
cmp
jecxz
lahf
pop
fsubrl
call
jg
enter
mov
out
sub
push
outsb
cmpsl
lcall
aaa
sbb
add
dec
cmp
mov
cmp
dec
inc
cwtl
movl
ljmp
insl
data16
xchg
sub
movsb
scas
les
std
dec
test
shll
test
and
in
or
mov
addr16
add
dec
sbb
rorb
loop
sbb
imul
push
push
imul
cmp
mov
insb
xchg
fdivp
adc
xor
jb
jo
push
jmp
outsl
pop
add
ret
lret
mov
enter
cmp
inc
popa
mov
mov
pop
test
sub
mov
mov
push
mov
sbb
bound
aam
addr16
pop
push
push
dec
rcr
subl
or
test
js
or
push
cmpsl
and
add
popa
in
outsl
shll
clc
notb
pop
mov
xchg
and
lcall
scas
cs
insb
or
out
push
std
push
testb
les
mov
lahf
addr16
dec
nop
daa
lods
outsb
sub
addr16
dec
sbb
scas
aaa
pop
inc
std
fldl
mov
jp
inc
movsl
push
scas
out
cmp
jle
pop
popf
testb
inc
inc
test
sub
shl
mov
or
fdivl
xchg
pop
or
stos
out
push
xchg
xor
mov
add
movsl
idiv
sub
xorb
adc
pop
pop
jbe
movsb
mov
loope
jbe
daa
ror
jecxz
and
je
mov
lahf
cmp
aaa
cmpb
inc
dec
and
cmp
cmp
pop
push
sub
and
aaa
rcl
xor
jnp
test
xchg
jl
jp
mov
inc
dec
mov
jl
icebp
push
cmp
in
out
leave
mov
sub
in
movsl
cmp
repz
stc
dec
or
inc
cmp
mov
dec
mov
popaw
aas
cmovle
mov
mov
sub
dec
jp
or
pop
imul
in
addr16
subb
xchg
sub
cltd
cwtl
icebp
ds
xchg
jae
dec
xor
inc
int
fsubrl
cmp
je
lcall
lea
ja
sub
fnstsw
out
push
test
inc
out
xor
sbb
mov
leave
xchg
cmp
xchg
cs
out
dec
dec
and
add
pop
faddl
push
gs
aad
mov
or
dec
sbb
cmp
cli
push
into
ret
sbb
daa
roll
sub
popa
dec
sub
jbe
xchg
fsts
sub
je
imul
lret
rcrb
pop
fsubr
dec
mov
stos
test
mov
xchg
scas
fildl
iret
push
aad
mov
sub
push
in
sub
stc
iret
int3
add
sahf
sub
rcl
in
xor
adc
xchg
icebp
xchg
out
jmp
dec
bound
nop
xor
mull
jbe
int
pop
inc
out
cmp
xchg
notb
in
divl
ret
and
bound
pop
shll
cmp
sti
out
movsl
iret
loopne
data16
sahf
sbb
sbb
cmp
jns
in
sbb
mov
add
mov
aas
inc
inc
pop
inc
in
cli
xchg
or
jbe
jge
es
insb
mov
xchg
inc
roll
dec
lret
mov
sub
or
mov
jae
call
mov
faddl
cmp
std
jo
xor
out
ljmp
mov
dec
pop
cmp
mov
sub
rolb
xchg
cs
ret
data16
or
xor
div
sub
movsl
push
inc
xchg
inc
add
int
ds
in
test
and
pop
lods
jmp
push
mov
cmp
jl
outsl
cmp
xor
fiaddl
fwait
mov
popf
into
sub
add
push
jg
rorb
dec
fimuls
mov
sub
xchg
stc
ja
mov
xor
ss
sbb
add
fcompl
mov
lret
fdivrs
arpl
out
ds
or
jge
xchg
inc
dec
sarb
push
cltd
aam
daa
mov
mov
and
xchg
mov
push
dec
sub
scas
in
inc
movsl
xor
andl
loop
sti
sub
sub
imul
push
lods
sbb
pop
fsubs
ficomps
and
inc
mov
sub
int
bound
outsb
mov
cltd
add
sbb
fs
cmp
out
outsb
mov
cmc
shrb
addr16
enter
cs
lret
or
lock
adc
jo
add
cwtl
inc
inc
pushf
mov
loope
jbe
mov
fmull
loopne
test
jbe
fisttpl
mov
xchg
mov
movsl
xchg
pop
les
or
movsb
out
cmc
pop
cmp
dec
pop
nop
adc
stc
lret
jbe
int3
jne
lock
shll
add
test
add
inc
xor
pushf
sub
sub
or
adc
popf
cmp
cmp
mov
lods
dec
dec
lock
lea
lcall
cmp
rorl
fcomi
jg
jp
adc
lcall
inc
sub
mov
or
imul
scas
inc
push
or
iret
cmp
mov
lea
fisubrl
in
jae
push
or
clc
bound
imul
cmp
push
aas
add
adc
jb
jnp
outsb
mov
nop
mov
test
xor
dec
scas
cwtl
push
fs
je
arpl
sti
pop
fcmovnb
mov
mov
push
sub
adc
jl
cmp
ficomps
popa
cmp
or
enter
mov
int3
fidivl
mov
inc
cld
mov
sub
test
jmp
mov
es
and
jge
nop
lods
adc
fbld
ljmp
xor
xchg
sbb
fdivp
clc
mov
ror
sbb
dec
push
lds
xchg
test
stc
sahf
jp
or
pop
or
sub
mov
outsl
sti
test
fmull
adc
push
add
test
jb
ficoml
std
or
inc
sahf
cli
scas
push
sub
loope
sbb
pop
stos
adc
pusha
adc
mov
pop
and
scas
sub
int
inc
or
call
jae
mov
pusha
push
mov
add
scas
jno
fldcw
es
xor
into
lds
loop
cmp
adc
cltd
fcoms
push
pop
shrl
push
jns
xor
and
push
iret
adc
cmpsl
pop
ljmp
xchg
xor
sub
popa
stos
mov
mov
call
and
aam
icebp
lahf
int
mov
add
lock
cmc
cwtl
sub
or
pop
push
pusha
cwtl
xchg
and
sbb
and
mov
ret
xchg
jp
inc
push
aaa
repnz
jmp
push
sub
and
pop
cs
jo
mov
idivb
call
lahf
clc
inc
loop
pop
dec
or
adc
inc
and
xchg
fcomps
into
jge
mov
sub
jl
jno
icebp
scas
push
mov
icebp
shl
mov
pusha
xor
cltd
xchg
dec
mov
jnp
data16
out
or
sbb
jbe
xchg
lahf
add
jne
mov
mov
pop
mov
xchg
cmp
fcoms
in
push
or
push
pop
decb
insb
mov
jbe
dec
xchg
test
imulb
jo
and
hlt
fiadds
ds
mov
hlt
nop
lods
not
testl
and
jp
adc
mov
shrb
jb
loope
fs
mov
pop
pop
icebp
test
sbb
mov
push
rcr
ret
cltd
mov
test
andb
add
jbe
imul
adc
lock
mov
arpl
push
sar
out
dec
test
mov
push
int
jns
add
xchg
inc
loope
adc
scas
jge
js
and
mov
adc
push
sti
cmc
sbb
fnsave
push
jno
mov
imul
insb
loope
mov
movlps
xor
bound
mov
cs
mov
add
ret
cs
out
idivb
shrb
mov
inc
movsb
dec
test
lret
add
push
pop
xorb
pop
mov
into
xor
xchg
mov
and
cmp
push
shl
loope
add
inc
lock
add
add
jbe
pushf
cld
mov
sbb
mov
mov
test
test
jbe
pop
out
in
out
xchg
sbb
and
in
test
addr16
adc
xchg
mov
test
dec
in
adc
push
hlt
pcmpeqb
add
push
fs
into
xchg
stc
mov
mov
adc
test
ret
dec
fstl
pop
pop
aam
std
cmpb
dec
js
cmp
in
ret
repnz
movsb
cmc
xchg
subl
xor
mov
adcb
and
js
xchg
dec
fdivs
and
push
test
lret
xor
jbe
jl
std
mov
in
inc
stos
cmp
jbe
ss
push
jo
in
subl
ficomps
mov
rcll
imul
mov
cmc
outsb
push
mull
add
add
add
lods
mov
mov
imul
sub
test
sub
je
or
pop
cmp
sub
lea
dec
mov
push
push
mov
xor
daa
daa
test
pop
hlt
mov
sub
test
cmp
jle
xlat
test
movb
jle
mov
xchg
mov
fdivr
push
mov
jo
adc
inc
xchg
push
idivb
and
pop
dec
mov
add
xchg
mov
xchg
jne
inc
add
ds
or
sti
int3
cmpsb
into
mov
and
mov
stos
or
add
test
add
mov
inc
xor
js
push
ret
sbb
fsubrs
inc
das
cmpsb
xchg
inc
cwtl
ror
sbb
ss
dec
paddsb
mov
inc
xchg
add
lds
fwait
out
xchg
prefetcht0
inc
jp
lret
sbb
adc
out
cs
leave
jle
xchg
cmp
mov
cli
std
inc
push
bound
mov
sbb
jmp
je
ret
les
outsl
sub
test
adc
ret
ja
jg
out
fs
ret
cmp
adc
jge
pop
mov
enter
out
jmp
or
shrb
push
in
cmp
xchg
test
cmpb
mov
sub
rcrb
popa
jp
scas
loopne
in
jle
loopne
test
js
mov
cld
aas
push
mov
es
loope
sbb
adc
mov
fs
or
test
fs
ds
mov
mov
dec
ss
mov
cmp
mov
lret
add
sub
inc
fcmovbe
out
and
jecxz
ljmp
cwtl
nop
in
add
push
out
inc
inc
test
lods
loopne
idivl
ret
fcoms
imul
mov
and
adc
lret
add
in
mulb
cmpsb
ds
sbb
push
mov
inc
js
pusha
fisubrl
push
orb
sbb
add
aam
dec
dec
loope
mov
xor
icebp
aas
cmpsb
int
aam
jp
test
test
loope
add
mov
or
das
ret
daa
push
leave
lret
es
push
ret
mov
sti
out
test
mov
sbb
jb
loop
xchg
into
xor
mov
sub
adc
rcrb
bnd
lock
outsb
out
cmp
xor
xor
addr16
data16
sbb
xchg
and
sbb
fsubl
gs
test
push
data16
jmp
jb
movsb
ret
add
cli
andb
cmp
cwtl
dec
jg
test
shrd
or
jbe
push
or
sarw
xor
mov
add
addb
inc
mov
lock
sub
jae
sbb
jne
xchg
xchg
popa
leave
loope
pop
mov
stos
push
mov
popl
and
mov
daa
adc
mov
cld
idiv
pop
dec
fs
loop
aad
data16
jp
das
scas
xchg
mov
out
push
adc
adc
mov
call
dec
out
nop
add
jae
es
adc
mov
inc
add
pop
adc
leave
mov
inc
jbe
ret
sbbb
loopne
mov
test
jbe
or
out
cmp
ds
push
push
pusha
ficoml
out
sahf
jb
xchg
fldt
and
test
pop
add
rcl
xchg
inc
mov
or
movsl
rolb
push
adc
data16
jnp
dec
shll
mov
jbe
enter
push
and
ds
or
lods
jmp
stc
inc
lds
or
and
cli
shr
adcb
add
cmpl
mov
mov
fidivrl
xorb
rcrb
or
mov
ret
insl
add
ret
sbbb
push
pop
aas
jne
cmpsb
and
mov
adcb
push
or
jbe
pop
ds
leave
xor
loop
mov
push
cmpb
hlt
popl
enter
fidivrs
add
pop
and
push
mov
icebp
mov
push
inc
enter
ds
cwtl
xchg
bound
inc
inc
jae
push
dec
outsb
adc
mov
loopne
or
pop
fcoms
daa
and
jmp
push
fsubs
leave
jnp
mov
jnp
sbbb
repnz
psubw
push
bound
movsl
lea
inc
stos
sbb
push
shrl
xor
adc
mov
js
xchg
add
cmp
xlat
inc
in
into
testl
data16
lcall
nop
outsb
fnclex
xlat
sub
outsl
jg
cmp
xchg
dec
lock
sub
xchg
dec
push
add
pop
push
push
inc
fcmovb
xor
into
cwtl
cmpb
push
test
jmp
sahf
lahf
movsb
mov
andb
lods
decl
xchg
cmp
pop
xor
add
daa
cli
sbb
fpatan
fscale
movsl
push
push
aas
jg
jmp
outsb
mov
pop
push
stos
push
orl
repz
add
ss
cmp
aaa
dec
sbb
js
pop
jbe
insb
std
mov
jecxz
dec
call
mov
push
out
outsl
stc
mov
icebp
xor
xchg
fiaddl
fwait
pusha
cmc
mov
push
dec
fwait
ret
mov
scas
enterw
mov
cmc
pop
mul
inc
xlat
push
leave
mov
jge
out
in
nop
in
jl
sbb
rclb
xchg
push
test
mov
je
add
in
lods
pop
push
icebp
cmc
in
xchg
call
add
aaa
pop
xor
cltd
lahf
es
ffree
jp
or
jb
loop
fcmovb
sub
inc
daa
dec
lods
mov
inc
xrelease
ficompl
push
les
stc
mov
add
lock
pop
xor
lods
into
lods
mov
push
ljmp
pop
lret
mov
popf
sbb
mov
and
mov
inc
gs
xor
nop
mov
mov
or
mov
push
mov
push
pusha
rorb
scas
inc
push
push
out
aaa
cmpsb
inc
imul
leave
add
sbb
dec
xlat
cmp
es
int
aam
sbb
cs
scas
mov
in
das
cmp
sbbb
mov
pushf
push
xchg
ret
out
push
or
inc
test
sbb
fucompp
das
sub
adc
in
cmp
pop
inc
fsts
pusha
xor
cmp
js
into
outsl
xlat
hlt
pop
add
rolb
lret
pop
iret
lds
fldenv
inc
adc
xor
xchg
push
pop
aaa
or
ret
jmp
xchg
data16
pop
test
sub
inc
mov
loope
xorb
inc
fldcw
push
add
add
mov
push
jne
cs
scas
sub
cmpsb
and
andb
mov
pop
inc
or
jle
jbe
enter
inc
ret
ss
mov
out
push
mov
cmp
fwait
jecxz
es
pop
out
pop
mov
sbb
mov
addr16
cmp
mov
sbb
jle
lea
stc
mov
mov
andl
jmp
push
inc
push
movsb
mov
insl
data16
testl
jno
mov
int
loope
cld
push
ret
mov
add
dec
sbb
mov
adc
push
sbb
stc
mov
mov
enter
push
cmp
sub
mov
loope
notl
pop
or
sbb
inc
test
sub
inc
push
es
in
loop
push
mov
dec
adcb
lret
pop
mov
mov
and
popf
faddl
outsb
mov
inc
xchg
stos
mov
in
jecxz
adcb
fcompl
fs
or
pop
testb
mov
inc
les
repnz
insb
call
cmp
leave
mov
push
cli
mov
dec
jbe
cltd
sub
mull
sbb
data16
adc
mov
cmpsb
mov
int
into
repz
out
sbb
pop
push
mov
dec
jne
je
loop
xchg
add
adc
repz
bound
xchg
leave
adc
inc
popa
rcll
movzbl
jbe
xchg
mov
mov
repnz
add
js
je
mov
jo
inc
cmp
push
lcall
jp
xchg
scas
int3
jno
and
stos
lds
sub
std
test
pop
push
popa
sub
subb
gs
lods
xchg
or
adc
cmp
pop
outsb
dec
inc
lds
fisubrl
jge
stc
sub
mov
cmp
dec
aad
in
cli
pusha
insb
movsb
inc
std
cmp
bound
jle
and
and
cmpsb
jecxz
sbb
clc
dec
repz
or
push
push
or
fstps
mov
shlb
sbbb
add
rcrb
mov
mov
jmp
pop
out
aaa
stos
pop
add
cs
push
nop
jns
sub
bound
mov
mov
push
pop
fnstcw
arpl
jae
add
xchg
jo
ds
push
or
xchg
inc
test
add
push
and
cltd
out
inc
jle
out
mov
adc
mov
and
dec
lock
dec
repz
push
cmp
dec
pop
stos
outsl
int
adc
dec
data16
and
int3
jno
push
sbb
popf
test
enter
push
push
ss
std
push
std
aam
push
in
cmpsb
jge
or
push
sub
test
inc
push
mov
push
add
ret
or
call
push
in
add
xor
mov
pop
inc
test
ror
xchg
lods
and
sub
cli
aad
pushf
sbb
mov
adc
pop
es
xchg
lcall
dec
in
ja
scas
inc
jnp
inc
jbe
mov
out
dec
cmp
shll
clc
jmp
push
adc
sbbb
fwait
lcall
call
add
jle
mov
push
pop
out
jle
imul
mov
fcmovbe
ds
or
adc
fwait
sarl
movb
or
orb
push
lods
mov
and
mov
push
sub
mov
insl
pop
lahf
cmp
aaa
ss
sti
aaa
gs
jne
push
fadd
cmpb
sahf
ret
das
or
sub
ds
insb
mov
jbe
je
int3
push
cmpsb
test
and
nop
push
xorb
insb
repnz
mov
jne
push
repz
cmp
inc
and
mov
mov
test
mov
fidivrs
lods
push
das
cmp
inc
scas
loope
clc
jle
imul
adc
mov
mov
xchg
inc
cltd
iret
xchg
dec
or
dec
enter
inc
add
fnstcw
jb
adc
nop
and
out
cmpsl
seto
xchg
aaa
call
insl
movsb
movb
jbe
les
movsl
and
out
add
adc
push
ja
outsb
repz
add
js
loop
cmc
je
ret
xchg
mov
adc
xchg
cs
jp
cmp
loop
cld
push
mov
inc
mov
pop
pushf
iret
ret
jb
mov
push
mov
add
gs
into
sahf
mov
frstor
aad
push
push
cmpsb
and
xorb
mov
sub
jno
ficompl
fs
jnp
lret
outsb
cwtl
adc
jno
fadd
ds
shll
ja
jle
mov
cmp
add
mov
ret
sub
inc
ljmp
jg
ret
and
push
mov
jbe
jne
shrl
jbe
insb
out
fs
mulb
sbb
inc
xor
into
cmp
out
adc
fbld
push
mov
mov
push
dec
shl
lods
imul
push
mov
mov
push
rcrb
jae
in
mov
inc
cmp
call
lret
mov
inc
adc
xor
push
pop
dec
sbb
jg
neg
imul
sub
ret
push
jg
sub
push
stos
jbe
jb
scas
mov
out
fisttpll
scas
insl
aaa
dec
enter
scas
pop
add
iret
push
mov
pop
mov
mov
mov
cmp
push
rolb
xor
xchg
fnstenv
out
andb
dec
lds
dec
adc
jo
jbe
arpl
fiadds
pop
aam
add
and
add
das
xor
sbb
loop
sahf
cmpsb
sub
out
mov
ret
icebp
xchg
cwtl
push
pop
lret
sahf
bound
mov
scas
in
mov
int
mov
jl
scas
insb
repnz
and
imul
xchg
movsb
jae
inc
mov
mov
les
mov
into
int3
jo
xor
mov
sbb
fld
add
and
add
mov
repz
push
out
lret
into
jae
push
movsb
cmp
iret
shrb
xor
lea
shll
addb
inc
iret
mov
adc
push
mov
push
cmp
arpl
and
out
mov
insb
mov
ss
adc
inc
bound
adc
movsl
ja,pt
add
js
lret
and
adc
bound
int3
and
pusha
pop
aam
scas
mov
inc
add
pop
enter
cmpsl
insl
inc
jbe
leave
mov
xchg
mov
notl
daa
fisubrl
cs
cmpl
adc
jns
sub
data16
mov
ret
pop
cmpsl
push
insb
movsb
mov
lahf
into
inc
cmp
cmovb
ljmp
jle
les
mov
clc
mov
dec
enter
inc
pop
push
cmp
gs
dec
imul
inc
mov
jnp
xor
enter
inc
aam
push
push
inc
jle
out
pop
pop
call
inc
sbb
scas
lods
xor
inc
jbe
sub
push
mov
mov
addr16
mov
ror
cmpsl
sbb
lods
aam
inc
ret
inc
jg
movsb
adc
lret
xorl
adc
inc
dec
ds
jns
and
ret
add
inc
imul
mov
mov
mov
in
push
imul
lods
imul
adc
push
and
pop
cmpsl
adc
mov
mov
and
outsb
sbb
xchg
insl
and
sbb
xchg
push
cs
dec
ret
cwtl
inc
shlb
and
ret
push
es
mov
mov
cmpsb
inc
jmp
in
mov
add
out
mov
sub
gs
mov
in
idivb
mov
mov
push
lea
pop
push
adc
cli
mov
mov
add
push
mov
sub
mov
lds
and
loop
inc
xor
out
pop
test
shll
lea
sar
xchg
adc
orl
push
jbe
ds
push
pop
out
insb
dec
jbe
push
int3
mov
aas
cs
notrack
jns
jge
aam
inc
out
cmp
pop
lret
es
out
mov
lods
push
mov
ja
roll
out
xorb
dec
push
out
add
in
lods
xlat
enter
push
or
test
push
xor
inc
es
mov
jle
sahf
mov
jg,pn
dec
dec
or
jge
and
out
call
mov
push
outsb
mov
ja
cmp
cli
shl
rcrl
out
or
add
push
inc
jp
xchg
test
neg
push
cmp
adc
ss
movsb
arpl
inc
pop
jbe
cwtl
bound
cld
xor
sbb
inc
repnz
shrl
or
pop
and
sbb
test
pop
or
imul
inc
sarl
dec
je
ret
mov
sahf
ds
out
push
int
push
push
jg
adc
sbb
jge
push
add
mov
ficoml
jo
inc
lahf
sbb
jno
outsl
dec
repz
pop
and
mov
xchg
mov
sbb
inc
icebp
js
jns
adc
adc
repnz
test
dec
or
cmpsb
mov
push
inc
dec
pusha
lcall
push
aas
out
add
xchg
aas
imul
lds
mov
popa
stc
add
rcrb
xchg
pop
cs
cmc
pop
outsl
repnz
push
push
sbb
ljmp
lahf
mov
in
sub
sub
shll
sbb
sar
pop
lret
jle
push
sub
cmp
cmp
test
test
in
sub
in
pop
lea
add
daa
in
cs
pop
adc
cltd
popa
inc
call
aam
push
pop
out
out
inc
movsb
push
cmc
out
outsl
or
call
cmpsb
std
or
fdivs
xchg
ret
mov
mov
xchg
enter
pushl
pushf
cmpsb
add
shll
leave
jne
popa
or
xor
jb
xor
stc
xchg
push
testl
mov
jl
mov
sbb
and
sti
mov
push
daa
mov
cli
stos
dec
xchg
insb
xor
or
ljmp
leave
xor
cmc
pusha
add
and
out
aas
pop
mov
add
inc
adc
adc
jbe
xor
xchg
adc
sbb
imul
repnz
stos
in
jno
push
cmpsl
pcmpeqw
pop
pop
cltd
sbb
into
mov
cmpsl
cmpsl
pop
fwait
enter
punpckhdq
jle
sub
pop
sub
dec
ret
adc
xor
xchg
insl
dec
daa
xchg
add
jo
dec
xor
xchg
movsb
push
mov
nop
jno
ficompl
lods
add
xor
pop
mov
pop
pop
sbb
pop
pushf
sub
das
inc
or
mov
bound
sub
push
je
adc
pop
test
pop
jnp
arpl
jle
cwtl
fwait
xchg
mov
inc
mov
sub
daa
cmp
fs
lahf
addr16
cli
push
xlat
pop
push
ljmp
ret
adc
es
inc
fdiv
mov
lret
insb
lahf
in
or
mov
push
add
xor
scas
bound
push
cmp
push
push
data16
bound
push
mov
in
in
fiaddl
mov
sbb
mov
cld
push
rolb
rclb
cwtl
lcall
out
add
roll
movsl
outsb
jbe
shlb
ds
in
xor
inc
push
jle
adc
test
cltd
mov
push
aaa
ficoml
pop
inc
mov
mov
pop
push
lret
inc
inc
insl
sbb
sahf
aad
into
movsb
adc
cmpsl
xchg
lret
inc
shrl
icebp
mov
dec
jbe
test
ss
cmp
repnz
scas
inc
fsubrl
cmp
cli
sti
insl
or
push
xchg
popf
sbb
test
xchg
hlt
repnz
and
and
xchg
mov
push
movsb
pop
icebp
insb
xchg
loop
cmp
repz
incl
or
in
bound
out
xorl
ret
hlt
loop
fildll
clc
int3
fninit
mov
ja
sbb
add
cmp
int
test
mov
inc
sbb
jp
xchg
mov
movsb
mov
cltd
jno
iret
test
ja
shlb
push
dec
cld
gs
xchg
scas
mov
and
mov
popf
pop
and
les
mov
cmpl
arpl
xor
lods
xlat
hlt
pop
mov
orl
or
das
ficompl
dec
inc
dec
add
test
lds
mov
xchg
js
adc
adcb
out
les
movb
pushf
push
fistpl
pop
xchg
cltd
jp
es
fstpt
xor
push
rcrl
into
std
pop
inc
push
call
xor
outsb
cmp
inc
fistps
dec
fsubrs
dec
ss
js
adc
mov
push
cld
xchg
les
xor
mov
push
cmp
out
xchg
popa
add
push
cmp
pushf
cmpsb
mov
rolb
dec
inc
imul
mov
lahf
push
mov
insl
movb
pop
es
add
sub
mov
mov
jp
bound
add
addb
xor
add
sbbb
mov
xchg
cmc
fistps
xchg
jle
mov
jp
mulb
iret
popf
xchg
int
push
inc
shll
jbe
inc
fdiv
addl
jmp
xlat
push
loopne
push
jp
pushf
icebp
push
fdivrp
inc
cld
push
in
xchg
movsb
out
mov
inc
cmp
jecxz
mov
data16
mov
xor
out
and
cs
test
lds
add
ret
push
add
xchg
mov
sbb
mov
pushf
xchg
ss
sbb
mov
leave
add
push
ret
movsl
sub
mov
lahf
inc
and
push
mov
jmp
inc
mov
inc
mov
sbb
mov
push
cli
scas
mov
shll
add
pop
popf
adc
test
sub
mov
adc
push
dec
mov
mov
sti
jae
mov
repz
sbb
jmp
std
shl
mov
xchg
ret
in
iret
repnz
inc
xchg
adc
sub
aad
lcall
xor
push
cltd
faddl
dec
sbb
ret
fdivrl
pop
push
sti
mov
mov
pslld
jbe,pn
inc
sbb
cmp
adc
xchg
ret
mov
mov
dec
pop
add
mov
inc
mov
fists
out
sahf
pop
cmpsb
mov
xorb
inc
pushf
aas
out
dec
fwait
data16
fimull
xchg
aaa
aad
add
xor
aaa
cmpsb
inc
jnp
addr16
int3
daa
testb
inc
sub
xchg
and
sbb
push
out
adc
dec
jno
dec
pop
pop
ds
inc
xor
out
mov
jg
pop
lock
lds
test
or
mov
addr16
fwait
iret
cmp
xchg
outsb
jbe
mov
mov
cmp
push
mov
xchg
in
xor
sbb
jne
addr16
loop
mov
pop
dec
lods
pop
out
sub
cli
push
xor
add
jle
cmp
mov
sbb
mov
dec
aas
pushf
pusha
leave
and
push
pop
pop
xchg
push
fdivp
push
cmp
in
jecxz
enter
insb
dec
popa
sahf
push
fimull
lock
stos
inc
mov
cmpsl
aaa
mov
cmp
cmp
pop
cmpsb
movsl
pop
rolb
push
stos
pop
inc
inc
add
jne
sarb
sbb
shlb
mov
jnp
mov
mov
in
dec
adc
inc
ja
ret
repnz
add
xor
lret
shrb
adc
and
push
or
and
xchg
xor
adc
sbb
mov
ret
daa
push
in
mov
add
cwtl
sarl
dec
mov
sti
aas
jmp
mov
fs
mov
and
cmp
cmpsl
mov
icebp
sub
inc
in
inc
adc
push
das
mov
shll
mov
into
xchg
out
ds
js
pop
mulb
mov
sbb
xchg
rcll
adc
sub
mov
sbb
aad
inc
mov
mov
jg
and
ljmp
movsl
fsts
in
push
xor
adc
mov
adc
pop
rolb
out
sbb
lock
pop
loope
adc
or
fldt
inc
pop
jmp
xchg
inc
ret
nop
sarb
negl
sub
xor
sbb
fwait
insb
add
pop
jg
repnz
inc
add
pop
lods
pop
sub
inc
jp
arpl
data16
xor
sub
aad
push
stos
cwtl
cmc
inc
jae
mov
xchg
xor
push
lahf
out
sahf
lret
xchg
sbb
aad
mov
cli
das
into
movsl
jbe
mov
adc
aaa
push
cmpsb
leave
das
pop
in
repz
fwait
adc
mov
scas
and
xchg
mov
int3
add
cld
push
xchg
pop
push
fstpt
dec
loop
xchg
sub
cmc
fdivrs
cmp
aam
sub
fcmovnu
test
sbb
sub
add
je
outsl
fcoms
xlat
test
out
into
xlat
shlb
dec
mov
sbb
inc
mov
dec
dec
insb
ret
jno
mov
xchg
cmp
int3
fnsave
pop
xorb
data16
xor
shlb
popa
loopne
insb
jg
pop
jb
pop
pop
cmpsl
pop
sbb
cmp
cmpsl
adc
jecxz
mov
test
lret
push
sub
fwait
das
rcrl
dec
xchg
push
push
mov
mov
pop
js
sar
dec
insb
adc
clc
inc
add
inc
movsl
imul
xchg
dec
lcall
and
movsl
cs
loop
out
outsb
dec
or
stc
ficompl
rcll
mov
scas
xchg
or
arpl
ja
mov
into
push
xchg
jo
sub
popf
adc
lock
push
inc
cmpsl
xor
lds
xchg
cmp
mov
iret
mov
fwait
popa
cwtl
negl
adc
das
push
daa
xchg
test
icebp
pop
leave
cmc
repz
ja
cli
nop
mov
or
jnp
push
cmp
adc
stos
frstor
add
and
call
shll
arpl
adc
cmp
mov
pop
xchg
lock
sti
ljmp
inc
and
repnz
or
ret
sub
add
int3
jg
inc
jno
cmp
sbb
orl
push
pusha
sbb
jp
lret
mov
cwtl
dec
int3
and
pop
push
imul
adc
mov
xor
out
jns
out
mov
std
sbb
fs
sar
and
xchg
pop
push
orb
mov
mov
cmpsb
aam
or
gs
xchg
hlt
fmuls
stos
test
or
stos
sub
stos
inc
mov
xchg
sub
push
pusha
xchg
clc
inc
movlps
rcr
push
enter
lods
jp
add
lds
inc
push
iret
jno
fists
xor
or
and
add
add
js
gs
lahf
add
in
and
out
and
sbb
lea
add
inc
push
add
mov
xchg
lcall
adc
pop
xchg
fiaddl
repnz
repnz
xor
mov
sbb
xchg
mov
fsubrs
cmp
mov
mov
adc
jo
jnp
add
fisubs
adc
or
in
mov
pop
adc
mov
jg
mov
fsub
sti
mov
rolb
dec
or
stc
push
dec
and
mov
js
xchg
cmpl
in
or
inc
loop
stos
je
pop
in
call
pop
dec
push
stc
push
cmp
mov
inc
shll
in
or
pop
scas
cwtl
mov
mov
push
test
sub
jbe
imul
or
ret
mov
shrl
mov
xor
push
data16
pusha
dec
and
mov
dec
test
push
into
int
push
pop
dec
rcrb
adcb
and
push
pushf
popa
divb
inc
lcall
and
mov
unpckhps
pop
mov
lahf
mov
out
xchg
add
jae
ret
out
inc
idivl
popa
lahf
iret
pop
push
sub
enter
call
add
in
lock
fiaddl
mov
mov
scas
popf
dec
int3
sarl
nop
notl
loopne
lahf
xchg
divb
sub
mov
popf
adcl
adc
and
sub
mov
rorl
xchg
mov
and
fsubl
nop
icebp
mov
or
jmp
adc
shlb
push
xlat
sahf
sub
push
adc
sarl
test
aaa
mov
shll
idivl
sbb
shlb
js
fwait
fs
ljmp
mov
in
sbb
xor
subb
push
pop
lret
inc
cmp
cmp
xor
call
inc
xchg
lods
repz
icebp
fwait
inc
and
xorb
dec
xor
int
xchg
push
testb
xor
cmpsb
jne
test
push
pop
jns
dec
and
jg
leave
cmpb
xchg
rcl
lahf
adc
leave
movb
cmp
fadds
pop
xor
inc
push
mov
das
mov
inc
push
jb
in
jne
lock
iret
cld
dec
addr16
xlat
adc
lahf
inc
sub
xor
pop
mov
aas
lret
pop
mov
in
pop
inc
pop
lock
push
outsl
push
jecxz
mov
dec
jle
and
mov
push
mov
sub
insb
mov
inc
sub
cltd
mov
enter
adc
push
fsubrs
cld
xor
scas
xchg
repnz
xchg
cmpsl
dec
xor
jnp
add
aaa
add
out
ror
lods
ljmp
call
jo
inc
cmp
pop
test
aas
sub
idivl
inc
test
push
sbb
xlat
cli
ret
cmp
and
or
cwtl
push
pop
pop
xchg
outsl
mov
rcll
cltd
xchg
mov
outsb
iret
add
test
cmp
mov
arpl
cmpsl
dec
pop
inc
or
int
sub
aas
ret
inc
lcall
push
ret
daa
out
add
addb
and
mov
out
push
jmp
iret
jge
mov
pop
repz
mov
dec
scas
outsb
movsb
lea
cmp
shl
daa
dec
adc
adc
pop
push
scas
xchg
and
jecxz
mov
mov
roll
cmp
xor
inc
or
mov
or
mov
pop
pop
mov
xor
sbb
add
sbb
in
xor
stos
cmp
mov
gs
add
and
rcrl
add
testl
je
in
xchg
in
call
lds
out
outsb
outsl
fwait
mov
push
rorl
lock
and
push
fwait
mov
mov
rcrb
scas
in
mov
inc
dec
loope
mov
popa
sti
loopne
push
mov
or
mov
push
inc
mov
popa
outsb
daa
loop
xlat
dec
push
in
call
mov
cmp
addb
xor
das
adc
jns
cmp
and
xor
lods
int
out
jbe
mov
stc
in
call
loopne
clc
shrl
cmp
movsl
das
xor
mov
icebp
sbb
shl
gs
mov
mov
cmp
dec
lahf
loope
fadd
adc
js
bnd
das
sub
dec
arpl
sub
fnstenv
jnp
repz
adc
xor
jno
cmpb
xchg
pop
mov
xchg
and
insl
cmc
std
xchg
pop
pop
jne
sahf
fisubl
xchg
data16
mov
mov
into
ja
adc
gs
clc
mov
xor
cwtl
les
call
in
mov
cli
sub
mov
cmp
aas
sbb
lahf
bound
mov
xor
pop
cmpsb
data16
and
mov
push
pop
inc
lahf
pop
mov
cmp
pop
jg
int3
push
fisubrl
cmp
test
ljmp
xlat
mov
adc
dec
ja
pusha
int
lret
inc
lods
test
cs
lock
aam
leave
testl
test
mov
inc
jnp
xor
ja
sub
fcompl
outsb
pop
loop
test
jg
mov
xchg
test
inc
sbb
icebp
orl
insb
add
mov
out
lds
sbb
fbld
test
sub
in
pop
ds
test
in
mov
mov
ficomps
ret
or
or
or
ljmp
bound
jmp
mov
xor
xor
fmul
inc
mov
cli
mov
repz
cld
out
rorl
ret
pop
test
dec
lret
addr16
cmc
ficoml
push
jmp
das
push
xchg
adc
or
cmp
cmp
adc
fcomps
mov
xchg
daa
pop
outsl
dec
mov
cltd
mov
xchg
ret
out
mov
ret
and
cmc
int3
mov
and
arpl
fsubrl
inc
into
sub
push
scas
or
pop
int3
sbb
scas
jp
sbb
lgdtl
int
icebp
enter
int3
jne
inc
cmc
pop
cmp
mov
xor
cmc
adc
xor
fstl
fisttpll
jmp
adc
cmpsl
std
test
lods
pop
push
cmp
sbb
sub
in
adc
pop
dec
shll
jns
inc
shr
add
lcall
out
mov
aaa
test
inc
call
aas
jmp
sti
lock
das
adc
push
sub
pop
aas
cmp
inc
dec
pop
jle
adc
imul
jae
push
and
nop
jmp
and
jmp
cli
test
shl
cmp
mov
repz
pop
mov
mov
int
jmp
insb
repz
fsubl
mov
xchg
lret
jg
mov
scas
or
leave
mov
sbb
sbb
cli
cs
jg
pop
adc
jmp
lds
call
int3
xchg
leave
cmpsb
add
aad
fsubr
mov
push
sub
pop
es
or
cmp
pop
push
jmp
pop
xchg
out
out
sub
test
mov
out
sub
cli
mov
mov
loope
mov
cs
inc
ss
mov
negl
loop
pushf
xchg
js
popl
mov
sbb
inc
scas
jecxz
jmp
push
testl
adc
aas
adc
aad
sub
xchg
call
cmp
nop
stc
push
mov
scas
ret
xchg
dec
sbb
jg
jne
stc
cmpsl
inc
xchg
daa
cmp
filds
std
and
js
push
xor
dec
inc
rolb
push
imul
or
push
cli
rclb
lea
mov
out
movsb
dec
fsubrp
shll
pop
and
push
into
shll
orl
jp
fnstenv
es
ret
xchg
or
fwait
xchg
sub
jle
mov
movsl
psubsb
mov
jae
jmp
push
jmp
mov
aaa
sbb
adc
push
adc
idivl
cld
into
push
sub
mov
jg
jb
in
imul
fisubrl
arpl
inc
mov
pop
roll
out
mov
xor
jmp
enter
and
inc
adc
xor
into
mov
inc
stc
pop
ds
mov
cltd
repnz
mov
add
push
mov
or
std
jo
dec
push
push
inc
frndint
cmpsl
push
and
add
out
adc
mov
jo
mov
clc
mov
add
jnp
cmpsl
inc
cmp
lock
mov
xchg
xor
cmp
arpl
stos
dec
enter
jecxz
loop
mov
mov
fsubr
jecxz
inc
mov
lret
sbb
lahf
add
jp
cmp
inc
jecxz
mov
and
push
pop
add
jp
stos
sbb
addr16
repnz
lods
cmpsb
es
pop
pop
mov
andl
xchg
ss
mov
xor
sub
testl
mov
xchg
cwtl
bswap
dec
jns
sbb
xorb
mov
icebp
test
lret
jl
inc
fs
pop
add
loopne
insl
mov
sub
test
xor
fcmovbe
mov
pop
sub
dec
insb
push
mov
xor
test
out
mov
sub
mov
lcall
rol
sahf
mov
or
cmp
cltd
jb
and
dec
test
rcrb
push
enter
in
inc
push
mov
mov
sbb
inc
popa
push
pop
lock
sbb
jp
dec
insl
cs
jns
or
dec
fcompl
sarb
push
xorl
loop
lcall
stos
cmp
sarb
push
sar
mull
mov
loop
cwtl
and
mov
mov
fcompl
cmc
cwtl
test
in
jp
dec
jo
dec
jg
push
mov
sti
mov
and
pop
jmp
sbb
mov
out
and
loope
daa
add
movsl
std
mov
inc
ficompl
das
jae
push
push
pop
inc
std
je
cmpsl
js
int3
jp
decl
in
or
out
insl
dec
inc
rcll
pminsw
ljmp
jp,pn
pop
pop
mov
adc
addr16
xchg
push
imul
xchg
mov
and
mov
inc
daa
adc
gs
mov
push
pop
jp
imull
inc
fistpl
add
adc
ss
cs
mov
push
fdivp
cmp
fisubrl
adc
push
xor
dec
iret
add
mov
pop
pop
scas
ss
fwait
scas
mov
arpl
dec
push
fs
daa
inc
inc
arpl
xchg
aas
jmp
mov
into
jmp
ds
jns
cwtl
inc
mov
scas
mov
out
sbb
sbb
dec
adc
jnp,pt
cmp
es
and
daa
xor
sbb
xchg
cmp
das
pop
inc
test
sub
imul
dec
mov
lcall
sub
fcom
pushf
adc
xor
pop
pop
jne
daa
sub
imul
mov
cmc
pop
and
add
loop
leave
enter
inc
push
popa
ficoms
xchg
mov
jg
imul
cmp
fisubs
lret
adc
int3
push
aam
sbb
mov
aad
mov
repnz
pop
push
mov
int3
rcrb
jne
mov
pop
or
int3
lock
or
roll
or
daa
mov
pop
inc
or
rcrb
loope
xor
mov
push
push
xor
nop
pop
xchg
add
dec
fists
mov
xor
push
repz
and
xchg
pop
push
js
mov
pop
and
fisttps
lock
or
ljmp
push
dec
lods
inc
ficoml
out
mov
cmpsb
lock
shl
pop
inc
xchg
test
mov
xor
stos
xor
add
int
add
or
mov
insl
cli
addr16
push
aas
adc
xchg
jecxz
xchg
dec
jae
cwtl
cmc
pop
imul
dec
sbb
rorl
jnp
add
xor
sbb
mov
in
dec
pushf
ds
mov
js
cmpsl
mov
outsb
pop
and
gs
pop
inc
cltd
push
xchg
cmp
ret
and
push
pop
and
or
pushf
push
sbb
sbb
mov
xchg
enter
data16
cmc
inc
push
xchg
push
cmp
sbb
movsb
cs
dec
dec
mov
negb
mov
adc
mov
in
insl
ret
aas
leave
and
push
daa
and
and
clc
lret
ds
notb
fisubs
cmp
xlat
mov
adc
lods
mov
pop
mov
cmp
jbe
repz
fs
mov
inc
stos
push
addl
inc
in
jecxz
int
dec
push
mov
in
inc
sbb
pop
mov
dec
jecxz
stos
jne
push
sbb
pusha
jp
aam
mov
jns
pop
dec
fbstp
sub
mov
or
adc
movsb
ljmp
lea
sbbb
sub
iret
pop
aas
addr16
and
mov
pop
jnp
mov
lret
cmpsl
mov
xchg
cmp
xor
les
repz
mov
push
xchg
pusha
sub
fsubs
pop
loope
mov
popf
pop
in
imul
jg
mov
adc
fs
mov
jnp
fdiv
setne
push
shl
push
ljmp
sbb
inc
inc
inc
out
xorb
push
xchg
or
dec
daa
js
shll
out
dec
daa
aas
cs
fwait
inc
mov
push
pop
adc
cmp
movsl
sbb
mov
xchg
xchg
xchg
and
bound
out
or
jp
leave
inc
sub
and
mov
jbe
jp
jno
clc
add
mov
sbb
dec
xchg
inc
ret
fiadds
imul
inc
iret
adc
cmc
dec
aam
popa
mov
cmp
call
out
out
sbb
shr
pop
dec
cmpsl
mov
dec
jo
das
fdivrs
aas
jg
push
push
movsl
popa
xchg
dec
loop
mov
sub
cli
imul
fmull
outsl
out
sysret
dec
das
dec
out
test
mov
and
mov
adc
push
loope
into
divl
jns
sti
arpl
repz
stos
or
sub
aad
pop
adc
jmp
push
aaa
loopne
pop
xchg
fldt
xchg
sub
cmpsl
xor
cld
mov
mov
jns
ljmp
negb
xor
push
cmc
fisubrl
inc
mov
aaa
hlt
or
daa
mov
enter
stc
jl
mov
arpl
and
sbb
dec
fs
mov
cmc
arpl
pop
jae
ss
fcmovu
mov
imull
dec
lods
sub
mov
and
adc
icebp
cmp
popa
dec
mov
sbb
inc
jmp
ss
xchg
xor
xchg
dec
sub
add
dec
aas
hlt
cmp
imul
test
cmp
or
lods
add
lock
fcomps
sahf
dec
dec
pop
push
mov
adc
xchg
scas
add
push
sub
push
add
inc
xchg
out
rcrb
add
adc
cmp
and
mov
pop
push
xchg
aad
push
pushf
aaa
adc
lea
sti
mov
cmp
in
pcmpgtd
jle
inc
ret
mov
and
mov
js
gs
pop
jge
daa
sbb
in
cli
mov
xchg
xor
es
add
adc
popa
int3
pushf
jl
incb
in
les
aas
xor
out
repz
inc
scas
push
cmovns
cmp
push
xor
jmp
and
rcrb
daa
andb
adc
xchg
ljmp
cmp
mov
sbbl
das
cmovge
mov
push
cwtl
std
and
xor
mov
dec
cwtl
add
call
or
fsubs
adcb
jns
loop
jne
inc
push
or
jp
jg
jecxz
or
sahf
stos
or
cmpsl
shlb
dec
sbb
push
push
rcrl
jbe
push
test
cwtl
fisttpl
jecxz
mov
je
pop
cpuid
aas
xor
shll
mov
xor
js
push
fmuls
mov
mov
xchg
shll
sbb
mov
jmp
repz
or
aam
pushf
jge
pop
jl
fs
stos
xchg
cli
sbb
push
push
mov
daa
lea
inc
adc
rcl
adc
cmp
int
and
dec
ljmp
je
cwtl
mov
push
jecxz
cli
fs
inc
rcrb
rcrl
sub
jo
nop
pop
aam
fisubrl
ds
stos
jnp
mov
dec
push
mov
inc
aam
xchg
lods
adc
jne
sahf
adc
out
xor
sbbb
ret
xor
inc
adcl
leave
pop
lret
push
mov
mov
jb
dec
aaa
in
pop
fbstp
jns
jg
cld
xor
lcall
mov
aad
cmp
cmp
jg
rcr
repz
adc
inc
ret
into
insb
ds
xchg
outsb
jecxz
stos
pop
push
mov
testb
adc
daa
xchg
xor
inc
pop
cmpsb
mov
and
jecxz
jae
inc
loope
and
int3
out
leave
add
rcll
cwtl
adc
mov
in
into
imul
arpl
cmpsl
push
mov
rcll
repz
in
popf
or
not
stos
jae
mov
and
add
adc
fiadds
in
ss
dec
pop
aam
dec
mov
stc
in
dec
enter
xlat
xor
lret
clc
add
dec
add
cmp
pop
adc
test
dec
data16
cmpsl
adc
popa
arpl
es
sbb
lds
add
push
jbe
fmull
jb
xor
jbe
sahf
adc
or
nop
lcall
test
jo
add
movsb
mov
push
pop
adc
mov
jns
cwtl
mov
cmp
cltd
adc
and
iret
xor
sub
arpl
je
pop
setae
push
rcr
or
and
or
adc
out
add
jp
adc
scas
lds
in
mov
dec
pop
and
or
ret
or
mov
or
mov
mov
ret
out
div
popf
data16
popa
insb
sar
xchg
mov
mov
xchg
scas
pop
ss
mov
insb
js
daa
push
push
cmp
out
in
sbb
add
in
xchg
pop
shlb
sbb
add
insb
andl
xchg
cld
sti
or
xchg
cmp
mov
sbb
mov
xchg
scas
lahf
sub
inc
sbb
xor
cmpsb
test
imul
into
mov
test
mov
xchg
clc
ss
in
xchg
sub
ds
lea
mov
loop
js
jg
sbb
cmp
inc
push
mov
dec
push
sbb
cmp
repz
lods
mov
pop
pop
aas
push
cmp
add
xchg
mov
jo
dec
jb
arpl
mov
lods
mov
out
and
jno
incl
lock
or
xor
in
pop
mov
push
mov
int3
cwtl
loope
ror
cmpsl
lret
push
std
sub
jne
mov
negb
cmpsl
mov
dec
xor
mov
jo
push
xor
add
cmp
push
mov
lret
fisubs
scas
jle
pop
cmpsb
in
lock
aas
pop
sbb
rcr
and
jb
insl
mov
xchg
out
cmpsl
orl
lea
or
adc
aaa
dec
lock
inc
dec
cmp
and
icebp
inc
push
xor
sbb
rcl
popa
and
bound
add
pop
push
fwait
lods
dec
push
ss
sub
aas
or
ret
arpl
cmp
mov
cmc
dec
into
ds
push
mov
test
mov
jmp
mov
push
mov
in
es
popa
hlt
and
dec
xchg
pusha
add
or
and
add
ss
mov
lds
jmp
sub
add
push
test
addr16
insl
sbb
dec
mov
mov
out
jl
push
mov
sbb
inc
cltd
xchg
incl
xchg
in
shll
xchg
inc
xor
xchg
imul
sbb
stos
popa
ret
das
mov
mov
jl
movsl
test
or
dec
outsb
pop
mov
adc
repnz
or
les
adc
xor
inc
xor
xor
lods
mov
cmp
mov
in
test
cmp
shrb
insb
adc
push
pop
leave
imul
mov
adc
data16
lods
in
push
mov
ds
imul
and
fldenv
sub
repnz
push
and
call
out
mov
push
push
gs
out
xchg
sbb
xchg
data16
mov
das
push
xchg
cmp
repnz
out
outsb
push
or
les
loop
and
dec
ljmpw
sub
sbb
jne
repz
inc
ficompl
fs
add
in
pop
mov
jbe
add
je
jbe
xor
into
xorb
mov
push
sub
imul
jbe
addr16
movb
loope
jle
loopne
pusha
and
scas
std
in
pop
dec
rclb
test
fcomps
mov
mov
rorl
mov
scas
add
push
adc
ret
cmp
je
sbb
pop
push
xorl
mov
scas
lock
push
sbb
rcl
pushf
cltd
subl
or
jae
mov
jmp
mov
test
push
and
mov
cmp
lock
cmp
jno
xchg
imul
and
test
sub
jne
sub
inc
out
cmp
inc
push
repnz
jne
or
mov
iret
cs
fbstp
mov
mov
out
mov
dec
mov
lock
scas
sub
pop
and
mov
aaa
xlat
test
scas
jge
pop
inc
mov
sub
push
lods
loopne
add
std
lods
stos
fnstenv
dec
mov
lock
push
scas
dec
in
push
and
vpsubusb
sarb
add
cmpsl
andb
jnp
outsb
std
mov
and
fwait
daa
mov
les
dec
shll
dec
test
loope
iret
sbb
jle
pop
stc
dec
scas
dec
ror
xor
sub
testb
jge
ret
cmp
movsb
or
test
fisttps
xor
and
popa
jae
pop
pop
rcr
mov
pop
mov
cwtl
call
dec
and
enter
jne
push
jne
clc
sub
lea
into
inc
cmp
xor
add
stc
sub
loop
loop
sbb
cld
xchg
nop
xchg
jns
adc
dec
mov
fsubrs
lds
shrb
mov
test
gs
andb
push
sarl
test
push
sbb
fs
shlb
mov
xor
negb
int3
xor
pop
push
sub
lods
mov
sub
jb
push
test
adc
call
mov
out
and
cli
stc
lods
adc
push
out
and
cmpsl
lods
lock
lcall
inc
xlat
enter
scas
testb
xlat
cs
dec
nop
mov
faddp
es
sti
inc
mov
push
insl
cwtl
xorb
or
lret
push
push
add
fwait
xchg
fiadds
ret
idivb
jo
sub
pop
push
dec
or
jl
jae
push
sub
sub
inc
add
ja
sub
loopne
orb
pop
repz
jmp
mov
mov
rolb
les
or
aas
daa
fstpt
lds
jns
inc
push
adc
popf
and
stc
mov
in
fsubp
pop
stc
test
jmp
mov
sub
dec
and
hlt
test
imul
not
rorl
je
outsb
mov
jno
sub
inc
out
test
loopne
mov
and
loopne
ljmp
outsb
adc
push
and
pop
push
sbb
ss
lahf
xor
cmc
into
lretw
xor
imul
lcall
mov
nop
ret
adc
inc
leave
ds
and
sub
adc
sub
mov
dec
dec
pop
or
ret
jnp
push
cli
cmpsl
pop
in
xchg
imul
pop
sti
jb
enter
inc
test
mov
sar
inc
in
shr
sbb
test
dec
adc
xchg
mov
push
sub
pusha
loope
test
and
adcb
scas
mov
into
add
mov
mov
enter
in
pushf
xchg
stc
sbb
pop
popa
test
icebp
outsb
fidivs
or
push
mov
dec
dec
mov
clc
cltd
iret
and
pop
mov
in
jmp
and
add
lods
fmul
and
je
lahf
add
scas
scas
in
push
dec
sbb
out
inc
test
mov
mov
outsb
fimull
xor
imul
cld
adc
mov
sar
ljmp
push
hlt
push
xchg
inc
jne
inc
push
pop
mov
jo
testb
nop
xor
fcoms
lods
xchg
cmpsb
test
cltd
fcomi
out
jp
and
sbb
dec
sti
inc
aas
xor
mov
mov
push
xchg
cmovae
pushf
inc
or
add
inc
in
xchg
into
ss
xchg
sahf
daa
adc
pushf
mov
sarb
in
sbb
aas
roll
repnz
mov
jae
out
jne
in
outsl
xchg
aad
jmp
mov
int
xchg
jmp
xchg
push
lcall
and
lea
cs
pop
ss
das
out
add
push
aam
and
test
sahf
imulb
jle
insl
shrb
outsb
shlb
sbb
lods
jbe
cs
jg
or
loope
iret
push
addb
pop
cli
sub
sbb
dec
rcrb
sbb
fwait
inc
ds
push
jns
dec
pop
cmp
mov
repnz
js
mov
sahf
pop
gs
cs
ret
popf
call
cs
shll
popa
xor
dec
rcrb
aas
mov
cmp
pop
cmp
sub
adc
xchg
cli
push
xor
stos
xchg
loope
pop
mov
nop
sbb
ret
dec
andb
push
jns
pop
sti
ret
ja
imul
xchg
int3
cmp
cmpsl
add
mov
inc
leave
jge
inc
std
je
inc
add
test
into
adc
mov
imulb
out
mov
pop
mov
cmp
aas
outsl
fisubrs
in
sub
cmp
lods
imul
mov
pop
inc
jno
or
or
sbb
cmc
mov
sbb
mov
push
dec
add
data16
sbb
sub
add
test
and
adc
pushf
xor
mov
rorb
mov
cltd
or
jle
inc
jg
pop
repz
gs
mov
lods
dec
aaa
mov
in
add
xor
jbe
or
add
sub
and
xor
popa
mov
negl
pop
xchg
mov
ds
shll
cmp
in
popf
mov
cli
mov
test
iret
loop
mov
xchg
test
or
insl
aaa
aam
or
popaw
pop
push
cltd
sbb
cmp
xor
jle
ret
inc
outsb
out
test
and
jecxz
fnstcw
xchg
dec
or
ds
out
xchg
cs
lret
xchg
ficoml
loop
adc
pop
push
cmpb
insb
mov
lods
sub
in
cs
lahf
stos
jecxz
repz
out
out
xor
jb
xchg
cwtl
add
xchg
add
inc
mov
mov
jbe
cmp
bnd
jno
cmp
out
mov
daa
cmpsb
iret
in
cld
lcall
xor
idivb
nop
fwait
hlt
cld
cmp
data16
cli
jmp
out
adc
in
xchg
in
add
add
shlb
mov
pop
push
sbb
out
ret
loop
rcll
cmpsl
mov
sub
xchg
out
loopne
cmpsb
ret
addr16
lock
sbb
outsl
call
jmp
jbe
cmp
cs
xor
ds
out
xchg
in
popa
jl
cs
push
sub
or
lock
sahf
inc
mov
jecxz
iret
andb
inc
std
cmp
mov
xchg
std
jns
dec
fwait
rcrb
xchg
repnz
repnz
mov
into
fwait
inc
mov
hlt
mov
push
sub
adc
icebp
adc
sti
mov
xor
push
and
scas
lock
xor
out
or
sbb
xchg
outsb
in
sbb
push
mov
push
call
adc
shll
cld
pop
cltd
push
jge
sarb
out
bound
and
rorb
mov
cmpsb
sbb
sub
sbb
es
add
fldcw
in
cmc
jge
sbb
dec
jae
andl
mov
adc
out
sub
push
out
in
push
xlat
dec
icebp
fmull
inc
cs
push
xchg
ret
add
and
test
mov
xchg
xchg
mov
nop
in
adc
add
in
push
call
pop
shlb
pop
cmp
je
bound
xlat
outsl
orl
and
lret
and
subl
jmp
and
mov
cmpsl
fs
inc
int3
xchg
mov
fiaddl
xchg
adcb
pop
mov
push
and
and
pop
repnz
or
sbb
std
cmc
shll
adc
sub
adc
sbb
jbe
sarl
frstor
cmpsl
push
adc
ja
outsb
adc
and
rcl
fcoml
fs
jbe
push
xchg
push
loopne
mov
cli
cmp
jecxz
aad
mov
pop
jmp
mov
cmpsb
imul
lret
mov
fcmovb
adc
lock
sub
out
movsl
mov
shr
imul
sub
pop
xchg
and
xor
sti
and
cs
and
dec
push
in
sub
add
cmp
jbe
inc
cmc
out
bnd
es
cmp
xchg
shll
mov
negb
cmp
xchg
push
push
cmp
xchg
pusha
mov
push
inc
test
loope
scas
mov
cltd
stos
fists
fwait
dec
adc
movsb
cld
xor
dec
lret
dec
popa
and
pop
in
inc
inc
cltd
scas
leave
mov
arpl
fldl
pop
and
sbb
push
scas
arpl
out
loop
add
push
jp
add
jbe
rolb
mov
aas
jno
stos
dec
mov
cmp
cmpsb
inc
into
mov
bound
dec
xchg
arpl
ret
sbb
andb
adc
mov
popa
ret
shr
cmp
push
jecxz
data16
inc
scas
rorl
add
lahf
mov
fisttps
out
stos
dec
dec
pop
mov
pop
sbb
cmp
push
es
cwtl
xchg
cmp
mov
add
lahf
call
or
push
fidivl
mov
insl
mov
xor
and
jmp
rorl
cmp
addb
jns
sbb
test
add
inc
add
jns
jo
fsts
push
ja
add
fidivrs
pop
push
addb
loopne
adc
mov
negb
loop
rcr
and
nop
push
adc
in
inc
call
ljmp
das
testb
jmp
push
or
jno
leave
mov
decb
and
mov
outsb
addb
fistpl
xchg
xchg
pop
sbb
push
insb
push
cld
sub
push
stos
nop
add
stc
pushf
jge
sub
leave
cmp
push
lcall
xor
in
jbe
xor
mov
bound
jnp
mov
inc
xchg
mov
sbbb
imul
in
dec
push
stc
push
pop
loopne
push
repnz
fistpl
sti
sub
xlat
jb
inc
mov
add
loopne
xchg
cmp
iret
xchg
xchg
sti
mov
lds
lret
sahf
fbld
int
xchg
jnp
testl
in
add
push
mov
jge
adc
cmp
adc
popw
add
push
and
inc
add
not
pop
sarl
sbb
jmp
inc
mull
scas
mov
push
sbb
fldenv
test
jle
out
stos
stos
test
adc
out
jecxz
in
ret
push
gs
push
aaa
lret
ret
stos
in
and
mov
into
cli
insb
dec
test
pop
mov
jp
fildl
jae
mov
mov
andb
iret
test
stos
movsl
push
andl
mov
sub
cmp
es
xchg
inc
das
mov
pop
scas
add
inc
in
repz
stos
out
sub
xchg
adc
out
jnp
and
mov
mov
andl
rorl
dec
adc
push
mov
mov
out
pop
lods
pop
or
pop
jmp
sbb
or
les
cld
pop
incb
aaa
xchg
out
jno
das
jp
mov
cs
orb
jmp
mov
sahf
test
adc
lds
sbb
lret
enter
insb
jle
ret
mov
ss
dec
pop
pop
dec
sbb
xchg
pop
cs
nop
lea
cmp
bound
cmp
outsb
cmp
jo
out
inc
cmc
add
pop
shrl
out
mov
aam
nop
or
mov
stc
inc
scas
dec
addr16
xchg
push
mov
ja
out
jo
hlt
push
mov
or
inc
testb
hlt
adc
adc
clc
pop
out
jns
mov
sbb
fs
xor
mov
les
rcr
out
and
out
clc
sub
mov
pop
in
cld
xlat
and
out
test
dec
shrl
push
hlt
or
out
outsl
mov
xor
rcrl
test
fldcw
loopne
lds
ret
cmp
lcall
add
push
loopne
pop
cld
insl
push
outsb
add
mov
test
ljmp
jbe
push
subb
xchg
stc
out
jmp
cmp
fmulp
in
mov
fwait
addl
xor
mov
xchg
cmpsb
imul
xacquire
and
movsb
mov
jl
pop
xchg
out
in
mov
out
cmp
add
icebp
jge
lods
xor
sub
dec
idiv
xor
mov
push
scas
mov
mov
pusha
loope
les
cmp
icebp
cld
imul
imul
push
mov
out
iret
rcrb
roll
push
cmpsl
fwait
aaa
or
mov
sub
pop
pop
popa
xchg
sub
mov
insl
fists
pop
pop
fbstp
out
inc
and
aad
loope
and
dec
dec
inc
in
das
dec
inc
sbb
out
stos
arpl
add
mov
scas
cmp
ret
sub
mov
adc
popa
adc
push
cmp
mov
mov
xor
dec
mov
roll
push
ret
lret
and
jg
ds
cs
pop
xchg
scas
cmp
int3
daa
pop
sbb
mov
dec
sahf
dec
test
inc
pushf
sbb
xchg
pop
mov
mov
pushf
jl
jo
add
arpl
inc
mov
loope
dec
outsl
sub
scas
pop
shlb
std
xchg
filds
mov
adc
movsl
outsb
sbb
fildll
mov
lods
push
lods
iret
jl
lods
and
ljmp
or
sbb
lds
cmp
aam
jnp
mov
lods
scas
mov
ret
lcall
jecxz
adc
inc
jno
cmp
push
inc
jmp
imul
add
inc
cs
inc
sbb
data16
and
out
add
inc
inc
mov
movl
push
xor
push
inc
sub
out
dec
sbb
cmpsb
stos
das
pop
mov
mov
jns
add
out
and
inc
push
mov
imul
push
adc
lcall
jns
lahf
or
inc
mov
jg
arpl
lret
iret
mov
outsb
jmp
dec
addr16
or
outsb
movswl
ss
test
shl
popa
neg
gs
js
inc
sbb
xchg
sbb
pusha
xor
mov
popa
repz
and
aaa
je
cltd
ja
lods
xor
cmpsb
ja
pop
or
fxch
rorl
repnz
out
repz
mov
mov
fmulp
ret
fdivp
pop
jae
sub
test
inc
mov
fbstp
xor
push
adc
imul
ret
sbb
lahf
mov
adc
pop
sbb
jp
daa
and
push
and
sub
jecxz
fidivl
std
les
scas
hlt
enter
insb
xor
shll
in
je
mov
dec
sbb
push
lods
aas
xchg
out
adc
testl
adc
pop
dec
sbb
out
xchg
push
jge
loop
inc
insb
iret
aam
mov
lret
pop
mov
aad
sub
adc
shll
pop
xchg
in
sahf
cmpsb
push
vpsrlw
hlt
xchg
in
dec
jmp
insb
shr
fs
aam
xor
mov
push
jo
inc
sub
push
add
xchg
jbe
fdivl
jl
test
sahf
hlt
test
inc
or
sbb
rorb
loop
adcb
dec
pop
stos
adc
out
jnp
inc
aaa
mov
pop
xchg
add
and
in
push
dec
lods
mov
fisttpll
int
pop
jo
add
jmp
xchg
out
out
jecxz
imul
push
xor
pop
jb
leave
rcrb
test
hlt
lret
icebp
rcrb
xor
sti
in
adc
cwtl
shl
sbb
lret
cmp
ret
xor
gs
sbb
jnp
not
dec
mov
in
xchg
bound
test
sbb
js
test
or
ljmp
push
stos
stos
dec
push
xor
je
jne
jbe
imulb
arpl
xor
mov
iret
loope
or
inc
decb
aad
inc
dec
loop
mov
push
std
dec
xchg
jmp
or
aam
push
ja
mov
push
fwait
mov
call
imulb
jecxz
xor
fidivrl
push
cmp
inc
addr16
fsubp
inc
das
cwtl
adc
popa
outsl
push
or
cmpsl
inc
iret
orb
push
mov
mov
aas
xchg
mov
jp
xchg
daa
out
cmp
jne
xchg
sbbl
test
mov
test
sbb
cs
mov
in
adc
jp
inc
xchg
xchg
addb
cmpsl
cmp
cmp
ret
gs
adc
jae
sub
jns
outsl
cs
adc
inc
sahf
repnz
add
add
cld
sub
mov
loop,pt
imul
mov
pop
sahf
xor
jle
fdivrl
mov
sbb
test
mov
dec
enter
push
mov
adc
and
xchg
and
cs
cmp
sbb
mov
int3
push
stc
clc
xchg
add
out
add
inc
or
orb
xchg
push
or
aas
arpl
inc
testb
inc
adc
add
fidivrl
push
in
imul
lods
push
xchg
jbe
pop
lods
aas
adc
mov
lds
lds
push
jbe
rcrb
or
es
inc
push
xchg
push
add
bound
aad
pop
loope
cmp
push
xchg
push
fcoml
aad
stos
ja
vaddpd
sbb
inc
decl
sbb
ja
arpl
jp
stos
push
dec
xor
rorl
push
fistpll
xor
pushf
scas
push
pushf
push
sub
les
and
jmp
push
mov
scas
imul
gs
ja
push
stos
test
loope
fsub
fsubp
xor
aad
inc
sbb
das
cmp
sbb
inc
and
lds
push
aaa
mov
push
xchg
inc
cmpsl
push
xor
addr16
mov
inc
push
mull
call
inc
ljmp
movsl
ljmp
xchg
rcrl
fxch
lods
mov
ja
inc
push
les
lods
dec
ss
xchg
sbb
inc
loop
mov
mov
push
in
out
pop
adc
inc
pop
fadds
imul
clc
fdivrl
push
dec
in
pushf
push
pop
mov
mov
fisubrs
sub
scas
mov
test
insb
shlb
dec
jg
inc
push
jp
xchg
mov
inc
sbb
fnstenv
les
scas
jb
dec
bound
mov
sub
push
cmp
inc
jnp
jecxz
notl
dec
cltd
push
push
push
pop
leave
imul
and
cmp
fistpll
mov
and
dec
xor
mov
jnp
dec
sub
dec
dec
jnp
push
aas
pop
shrl
aaa
fists
pop
std
and
imul
out
inc
rolb
and
stos
add
adc
cmp
ret
pushf
xor
ss
sbb
dec
dec
xor
js
lret
adc
xor
shll
shll
and
jo
lods
iret
cltd
aad
dec
daa
jns
sub
aaa
mov
fisttpll
arpl
lret
sbb
daa
add
or
inc
jmp
leave
pop
pop
adc
cmp
mov
jns
mov
cmp
adc
cli
add
stc
int
pushf
xorl
mov
xchg
mov
sub
jnp
cmp
inc
ja
push
xor
lret
sahf
icebp
negb
xor
jg
pop
xor
imul
add
js
bound
sbb
jmp
cmp
lret
cmpsb
lret
scas
or
pop
mov
mov
push
mov
fstps
sbb
cld
push
push
in
jae
mov
jae
inc
test
jecxz
clc
adc
lds
arpl
mov
cmp
or
xlat
sub
aad
in
sahf
push
stos
scas
jae
idivb
or
into
cmp
or
orl
sub
cmp
sub
sti
cmp
sub
mov
cmp
loopne
push
pop
mov
subb
test
leave
cmpsl
ret
mov
fbstp
shrd
scas
pop
jnp
sbb
or
call
push
ja
dec
push
mov
or
test
sub
dec
dec
push
dec
lock
in
pop
pop
aad
jl
dec
sti
imul
hlt
ss
add
push
cmpb
mull
lcall
sbb
iret
cmpsb
jae
jbe
mov
int3
cmp
aam
dec
fldenv
nop
xor
xor
in
push
mov
cmp
leave
xchg
repnz
mov
mov
mov
jns
cmp
mov
repz
pusha
test
stos
xchg
call
cmc
aas
lea
loopne
mov
fistl
mov
ret
adc
and
jmp
and
lcall
push
fisttps
shrl
out
mov
adc
pushf
pop
adc
arpl
jo
and
or
leave
out
cmpsb
mov
repz
mov
stos
cmp
mov
inc
loopne
pop
push
mov
sub
dec
cld
out
mov
lods
xor
mov
xchg
inc
ret
test
mov
outsb
sarb
jl
or
dec
fdivr
pop
aas
lea
mov
scas
xor
dec
daa
dec
roll
stos
jbe
inc
sbb
adc
pop
scas
mov
insl
ja
aad
add
sar
arpl
inc
jl
or
dec
xchg
fistps
fstpt
jg
addb
push
fucomip
pop
mov
mov
and
xchg
leave
sub
sti
sbb
pop
aaa
fcom
imul
in
stos
enter
jb
sbb
and
mov
mov
and
lods
mov
dec
cmpsl
xchg
dec
ds
adc
or
sub
add
fucomi
repnz
in
sbb
jmp
add
lahf
and
mov
popf
add
dec
cmp
mov
cmp
mov
icebp
xchg
adc
push
inc
sahf
jnp
in
nop
dec
add
sub
lret
xor
shrb
xchg
push
imul
movsb
or
pop
add
mov
test
mov
int3
fidivrs
lock
dec
mov
xor
push
fcompl
stc
mov
rcr
negb
sub
negb
jno
adc
xchg
iret
cld
jno
or
sub
es
push
mov
test
sub
in
cli
pop
sarl
mov
or
mov
dec
int3
mov
xor
or
imul
mov
rcrl
pslld
pop
stos
or
mov
mov
inc
inc
movsl
dec
js
repz
push
iret
push
leave
popa
ret
fwait
jne
jecxz
les
push
sbbl
into
xor
sbb
xor
mov
dec
sub
in
shll
andl
iret
fcmovnbe
and
jge
cmp
jecxz
sarl
or
mov
mov
add
insl
mov
jno
pop
enter
add
mov
ss
add
jne
jno
repnz
cmp
shll
mov
sbb
pop
mov
xchg
adc
rclb
push
jmp
adc
push
dec
jno
es
rclb
pop
mov
xchg
je
and
cmpsl
insb
mov
lods
push
xchg
orl
movsl
movups
das
xor
cmp
lahf
cmp
sbb
and
sbb
fs
push
xchg
ss
js
push
stos
sbb
cmp
test
out
fsubs
mov
or
inc
leave
mov
cmp
arpl
shl
push
cli
or
push
cli
or
dec
sbb
lods
jb
and
out
push
cli
sub
loope
push
add
adc
std
roll
stc
jl
pusha
add
mov
arpl
pop
inc
jecxz
cmp
cmp
push
inc
mov
cld
inc
sub
and
cmp
and
sahf
or
cld
test
rcll
test
jae
in
pop
push
mov
and
add
fs
and
jl
sub
adc
loope
dec
insl
jmp
clc
and
jbe
movsb
push
dec
add
and
xchg
fidivl
faddl
inc
fisttpll
or
in
mov
pusha
pop
add
stos
mov
dec
jae
push
inc
orl
lcall
adc
test
xchg
xlat
mov
shrl
sbb
sarl
scas
lds
stos
clc
mov
out
push
scas
add
push
ret
push
pop
inc
insb
or
cmp
cmpsl
xchg
fisubrl
lods
adc
sub
adc
bound
xchg
imul
mov
sbb
test
or
daa
xchg
mov
pop
xchg
xor
enter
pop
ja
xor
cmp
mov
cmp
inc
xchg
jecxz
mov
and
test
push
adc
pop
testb
sub
mov
sbb
inc
adc
sarb
dec
cwtl
xchg
jns
and
negl
sbb
loope
ljmp
mov
cltd
jb
mov
add
mov
sbb
mov
fstps
pop
and
xor
data16
cmp
adc
cmp
fnstsw
xor
es
dec
outsb
xor
mov
xlat
inc
cltd
mov
je
jle
pop
or
enter
dec
xchg
mov
loop
repnz
mov
sahf
xorb
pop
inc
mov
or
xchg
in
fxch
idivl
js
and
or
mov
adc
iret
push
rol
push
dec
out
jnp
int3
movsl
cmp
jbe
xor
dec
popa
cmp
loop
popf
pop
pop
sub
icebp
data16
xchg
jnp
cmp
inc
pop
and
aad
and
mov
outsb
xor
sub
dec
and
in
scas
jl
sbb
or
stos
jo
dec
addr16
xchg
push
jl
std
sbb
xchg
inc
out
lea
repnz
mov
lahf
bound
lret
stos
add
sbb
mov
xchg
sbb
push
roll
pop
imul
lcall
ret
cmp
shlb
sbb
insl
pop
xor
aad
push
inc
and
loopne
arpl
in
pop
pop
aaa
scas
outsb
inc
mov
adc
inc
bound
lods
lret
push
insl
aam
clc
push
in
sarb
arpl
xor
xor
dec
jnp
mov
stos
inc
dec
lret
mov
pushl
push
mov
in
pop
pop
jmp
int3
stc
mov
jo
fs
js
add
imul
imul
repz
and
insb
scas
popf
xchg
bound
ja
add
push
cmpsb
movsb
mov
push
lahf
jp
pushf
rcr
adc
adc
mov
pop
lahf
jnp
pusha
sbb
lods
rclb
ja
push
adc
sbb
cmp
sbb
enter
inc
mov
aad
sbb
inc
movsb
push
loopne
stos
sbb
jo
sbb
xlat
sbb
leave
mov
sub
cwtl
cmpl
fbld
xor
push
mov
neg
mov
mov
lea
fs
sbb
pop
push
in
icebp
gs
cmpsb
and
int
ds
inc
add
stos
cmp
out
jge
pop
push
xor
andb
add
adc
mov
sbb
add
and
inc
adc
jbe
jno
mov
mov
adc
cmpsl
jl
rcrb
xor
jnp
clc
aaa
insb
and
fmull
xchg
out
dec
pop
lods
mov
movsb
shlb
mov
lret
jmp
into
in
aam
pop
sbb
divl
sahf
xabort
dec
hlt
insb
jne
add
push
pop
cmp
int3
and
jecxz
add
xlat
fdivrl
mov
scas
push
jb
in
pop
xor
adc
cwtl
add
add
adc
push
push
fsubl
out
pop
pop
or
int3
in
dec
repz
sbb
aad
push
add
sbb
gs
and
cmp
pop
stc
rorb
jge
push
cmp
sarb
test
add
and
daa
popa
fldl
in
mov
lcall
ret
bound
inc
xor
in
jb
sbb
pop
clc
fistps
ret
movsb
push
mov
loop
sbb
aaa
mov
mov
je
outsb
in
fsubl
mov
cmp
push
pop
xchg
xlat
jle
bound
sub
jae
js
out
inc
aam
stc
leave
jmp
stos
push
adc
pop
pusha
pop
imul
inc
xor
xor
ds
sbb
in
cmp
iret
cmpsb
js
loopne
lret
and
jmp
xor
sub
popf
lds
pop
fistpll
mov
in
and
mov
pushf
lret
stc
rep
lret
cmp
or
mov
lahf
inc
pushf
pop
cmp
pop
cmp
cmp
pop
mov
fstpt
nop
mov
mov
mov
inc
cwtl
pop
cmc
dec
jo
jae
mov
int
loopne
lea
xlat
or
cmp
call
dec
int3
or
in
lea
test
inc
in
inc
xlat
ja
mov
aam
sbb
jge
dec
cld
in
popa
sub
mov
scas
les
or
outsb
ret
arpl
orl
add
add
imul
lods
add
push
and
imul
movsb
mov
jge
mov
mov
mov
jno
push
xchg
dec
xchg
mov
xchg
or
fimuls
test
jbe
pushf
rolb
inc
arpl
cmpsb
and
loop
insl
pop
sub
movsb
sbb
jb
mov
mov
cmp
repz
push
jns
push
pop
add
cmp
ja
mov
add
popf
movsl
or
sbb
adc
js
add
leave
clc
fcomip
sbb
sub
inc
fsub
pop
in
dec
pop
inc
inc
repz
inc
les
jmp
std
mov
mov
out
xlat
mov
add
je
xchg
test
pop
movsl
push
mov
fldenv
fisubrl
sub
mov
inc
daa
repz
mov
or
fsubl
popa
ficoml
stos
mov
cld
stos
stos
jae
push
lret
bound
or
in
test
test
jecxz
inc
mov
aam
xor
out
mov
aaa
xchg
aam
cmp
xchg
div
sbb
mull
std
dec
jae
aas
jecxz
pop
cmp
cmpsb
int3
sbb
add
or
dec
xchg
mov
dec
out
test
scas
or
call
imul
xor
out
movsl
mov
scas
cli
rolb
and
sarb
sub
sub
lret
js
adc
push
xchg
adc
add
xchg
push
xor
xchg
adc
push
adc
mov
lds
cmp
jl
mov
sahf
mov
fs
inc
xchg
mov
adcb
data16
sbb
cmp
ljmp
mov
lds
into
dec
repnz
inc
or
repnz
lea
and
icebp
nop
into
ret
stos
lods
clc
xor
pop
xchg
lods
jo
cli
test
adc
jo
rcrl
call
mov
pop
mov
push
in
jno
popa
mov
cmc
cmp
inc
sbb
sub
or
cwtl
setle
clc
mov
pop
push
mov
and
mull
ret
faddp
pop
xor
mov
pushf
in
push
push
out
jge
cli
test
cmpsl
push
xor
cmp
xor
testb
jle
ljmp
lds
incb
divb
push
and
int3
scas
loope
jae
andl
push
jne
in
mov
lods
mov
and
jb
dec
test
cmp
adc
lcall
aaa
mov
cltd
pusha
aas
mov
and
nop
leave
push
dec
add
sti
fstpl
imul
sbb
fidivl
aaa
and
push
and
daa
push
inc
jg
mov
xor
fists
xor
push
ss
xchg
sub
push
cmp
std
test
es
insb
jp
fcmovbe
jo
rcr
inc
ret
int3
aam
popa
pushf
pop
fs
scas
into
scas
fstpl
pushf
fcompl
jg
jle
xchg
mov
int
cmpsb
xor
jmp
das
inc
shll
mov
adc
and
in
dec
pop
dec
cmp
inc
sub
push
add
mov
stc
add
testb
inc
into
sbb
dec
mov
test
push
scas
lock
cli
ret
loopne
icebp
sarl
jnp
adc
mov
pusha
push
fcoml
pop
mov
sub
push
mov
loop
testl
mov
bound
mov
dec
mov
out
aaa
ss
mov
mov
and
jmp
push
or
cmp
add
push
jbe
lods
mov
mov
insl
sub
inc
mov
or
sbb
fisubrl
mov
repz
adc
xor
fisubl
xor
es
and
or
push
roll
jns
das
jg
mov
rcrb
ret
shlb
les
sub
mov
or
mov
or
sub
sub
adc
xlat
mov
icebp
sbb
lock
inc
adc
je
inc
out
data16
push
sbb
jl
call
xor
mov
into
out
ljmp
in
mov
pusha
push
int
adc
es
stc
fistpl
out
and
jns
sahf
daa
mov
les
or
subb
popa
cmp
loop
pop
mov
jge
rorb
lcall
sbb
add
ds
sub
loopne
mov
adc
and
ficompl
out
in
cmp
inc
sbb
mov
cli
test
enter
mov
fwait
pop
data16
out
mov
adc
jb
sub
mov
fidivrs
lea
test
cld
outsl
sbb
enter
jae
loop
dec
jg
hlt
and
lds
sbb
adc
mov
mov
mov
inc
dec
mov
scas
lahf
inc
dec
movsb
xor
outsl
mov
xchg
iret
popa
cmp
xchg
mov
out
add
fldenv
icebp
xor
mov
insb
repz
push
push
out
cmp
and
jecxz
sbb
and
xor
fiadds
pop
js,pn
add
imul
mov
pop
add
xlat
sbb
dec
or
ret
push
and
mov
pop
rorl
xor
add
or
add
popf
push
or
daa
or
dec
cmovs
mov
rcr
pusha
add
sbb
jl
outsb
dec
mov
pop
push
sbb
xor
ficomps
inc
mov
or
das
xchg
xor
adc
leave
cmp
xchg
lahf
lds
xchg
inc
lds
out
mov
add
pop
mov
data16
xchg
mov
dec
xchg
adcb
dec
adc
or
xor
xchg
mov
aaa
rorl
mov
sbb
cmpsb
cs
ja
les
popf
xchg
pop
aam
out
mov
cmp
aas
push
scas
cmp
popa
push
inc
add
mov
loop
ss
dec
jmp
lods
push
xchg
add
dec
and
mov
mov
call
cmp
test
stc
fimuls
fists
scas
inc
cmc
adc
cmp
lahf
movsb
mov
int
jae
adc
mov
mov
fisttpl
cmpsl
inc
cmpsb
inc
xor
scas
aad
sub
andb
jp
jle
mov
or
xor
push
adc
ret
and
dec
sbb
mov
mov
pop
mov
fldenv
and
cli
les
inc
lock
ret
push
popa
sub
out
xchg
xor
jbe
out
sub
pop
or
pusha
dec
fbstp
mov
jl
and
jge
movsb
lods
jo
cwtl
icebp
lret
fsubs
jns
push
rolb
xor
loopne
mov
sub
addr16
push
cli
mov
imul
mov
in
mov
adc
out
mov
jl
push
hlt
push
cmp
push
in
aas
daa
subb
ds
outsb
or
adc
shlb
clc
pop
popa
or
fdivs
add
inc
or
out
sti
lods
xor
pop
cmp
subb
lods
push
push
ret
inc
addr16
pop
inc
cltd
push
cmpsl
call
iret
nop
inc
lock
cmpsb
imul
dec
add
rolb
sub
scas
adcl
mov
daa
mov
daa
xchg
pop
mov
mov
mov
inc
mov
cmpb
ret
xchg
sbb
fists
dec
loope
sbb
out
mov
or
out
stos
es
fistps
shrb
xchg
lret
cld
decb
clc
leave
pop
dec
push
pop
sub
nop
fbstp
jae
adc
dec
rorl
dec
cmpsl
mov
div
jne
push
xor
divl
ljmp
xor
faddl
das
leave
push
aaa
jo
popa
inc
mov
cld
dec
or
push
js
lods
and
fdivs
xlat
jg
xchg
push
adc
les
cmp
imull
mov
leave
in
fists
inc
fwait
sbb
push
add
out
or
enter
sbb
jae
jg
sti
dec
mov
cmp
je
or
sbb
pop
outsb
dec
mov
inc
dec
inc
dec
loopne
mov
ss
pushf
imul
leave
ret
push
stos
xchg
mov
sarl
sahf
scas
mov
adc
lds
add
push
dec
cmpsl
aam
push
out
enter
neg
jecxz
xchg
repz
push
xchg
mov
mov
test
scas
adc
jp
filds
lahf
pushf
iret
fiadds
xlat
cmp
jbe
je
pop
rcll
js
repz
push
scas
push
pushf
popa
mov
jne
add
push
cwtl
mov
jmp
clc
sahf
mov
aas
nop
inc
mov
inc
adc
xchg
adc
je
and
gs
cmp
xor
inc
into
sub
xor
cwtl
das
xchg
push
fidivs
adc
push
sbb
rorl
repz
mov
shrb
mov
lock
jg
jp
rcrl
outsl
and
adcl
add
and
mov
out
js
mov
jmp
jb
inc
sbb
call
cli
jmp
das
mov
sub
pop
cli
xchg
rclb
sbb
icebp
mov
aas
fcoml
pop
dec
rcrl
push
xchg
andl
imul
adc
sbb
inc
idivl
mov
movsl
cmp
fbstp
sbb
jl
ret
jae
or
fimuls
jp
push
adc
jnp
filds
out
clc
jle
cmc
inc
or
mov
vcvtsd2ss
mov
cmpsl
push
sbb
inc
stc
shlb
sbb
or
mov
repnz
or
ret
and
pop
pop
loopne
xor
xor
mov
or
stos
roll
mov
sbb
inc
sarb
push
into
inc
jo
mov
jns
lahf
ror
out
add
lods
xor
and
mov
out
dec
and
mov
idivb
push
fld
xchg
lret
outsb
push
jo
lea
sbb
pop
mov
shll
mov
pushw
mov
push
mov
pop
cmp
in
fisubrs
mov
xchg
sti
into
hlt
leave
or
les
jns
mov
or
sub
add
lea
push
bound
inc
xor
fwait
mov
int
loopne
in
test
add
lret
sub
scas
enter
sbb
into
push
inc
repnz
out
jg
add
mov
xchg
sbb
jmp
push
mov
outsl
mov
push
call
mov
inc
addb
sahf
sahf
fmul
cmpsl
dec
cmp
out
cli
test
adc
sbb
dec
mov
pop
sub
repnz
xor
scas
data16
jecxz
vxorps
fistps
jg
mov
xor
xor
fists
lret
jbe
bound
push
aad
mov
nop
gs
adc
pop
iret
lret
cwtl
pop
lret
loopne
mov
test
pop
ja
jns
in
nop
test
and
jno
std
enter
repz
jg
iret
out
aam
fsubs
lret
jns
inc
inc
or
jp
iret
xchg
xchg
iret
and
lret
insb
mov
movsl
int
xor
pop
in
sbb
std
pop
mov
xor
nop
shr
xchg
xchg
inc
mov
dec
push
addr16
hlt
repz
repnz
hlt
xchg
push
iret
outsl
mov
jnp
push
sub
inc
xchg
jnp
fwait
repz
cltd
xchg
sti
cs
sub
scas
xor
sub
xchg
cmp
mov
adc
jae
jo
xchg
decb
out
dec
test
xchg
or
pop
pop
outsb
push
into
mov
push
fstpl
hlt
inc
cmp
jno
xor
outsl
lods
push
push
into
leave
mov
cmpsb
sbb
xchg
xlat
outsl
cwtl
nop
scas
test
decl
sbb
out
ljmp
mov
movsb
pop
jge
mov
and
out
xor
and
jmp
pop
xor
xor
add
insl
shrl
leave
in
cwtl
and
out
jmp
push
iret
mov
fs
sub
dec
sarl
jge
ficomps
xchg
fucomi
or
adc
or
call
cmpsl
cwtl
push
xchg
adc
hlt
mov
pop
orb
mov
sar
cmpsl
push
rcr
pop
adc
cmc
push
jns
sbb
jo
in
dec
jnp
xchg
nop
pop
fwait
out
xor
mov
out
jne
popa
or
loope
cmpsb
mov
bound
mov
jno
mov
pop
data16
ret
bound
aad
sub
inc
mov
mov
stos
aaa
fistl
mov
pop
rolb
mov
lods
sub
pop
shl
cmpsl
mov
bound
sub
ljmp
xor
jo
or
arpl
imul
lret
pop
js
pop
dec
mov
jle
mov
push
arpl
cmp
mov
dec
dec
xor
bnd
scas
insb
lret
pop
call
xor
cmp
and
add
nop
popf
ret
xchg
jno
ret
or
mov
push
cmc
jecxz
std
dec
out
mov
int
fldl
inc
cmpsb
xor
xor
addl
repnz
xchg
push
inc
iret
les
sub
mulb
addr16
es
push
xchg
test
jge
jne
ret
hlt
movsb
pop
cmp
daa
cmpsb
jge
lds
mov
jae
aad
lock
adcl
fwait
inc
mov
xchg
mov
test
rorb
inc
inc
jle
les
pop
sbb
bound
sub
dec
jne
xor
jecxz
sarb
insl
mov
test
add
shlb
fcmovnu
xchg
icebp
cmp
ret
sub
and
and
icebp
inc
push
inc
dec
push
stos
or
pop
or
or
jb
pushf
push
cmp
insb
sbb
fwait
sbb
negb
imull
and
mov
and
aam
push
cli
add
iret
pop
js
test
aaa
cld
and
call
gs
gs
xchg
jae
in
mov
xchg
pop
das
in
xchg
pop
je
xchg
mov
add
aaa
xchg
lock
insb
imul
xor
pop
mov
outsb
push
sub
pop
jae
fmull
or
mov
adc
mov
and
addr16
mov
cmp
and
arpl
sbb
enter
in
adc
adc
jnp
push
dec
mov
mov
in
vmwrite
dec
push
aas
in
mov
pop
push
and
push
sub
sarl
sub
dec
dec
jp
mov
mov
out
fsin
daa
mov
add
ret
hlt
adc
pop
fildll
mov
add
aas
sbb
fs
dec
in
cltd
cld
ss
mov
mov
mov
adc
mov
xlat
xchg
push
add
jmp
in
jmp
aad
jl
lret
aaa
jne
xchg
xor
xor
xchg
js
lods
ja
aad
xlat
sub
push
ss
mov
insl
push
sub
popa
das
dec
jne
add
orl
jge
mov
dec
cwtl
lahf
cmp
jg
inc
jae
pop
ret
pop
inc
test
js
in
lret
int3
hlt
in
adc
lock
mov
push
mov
push
insl
pop
xchg
and
jb
and
loope
cltd
sbbb
xchg
jmp
and
sbb
dec
jne
jne
out
jno
ss
mov
pusha
lret
lret
mov
jg
std
sub
hlt
add
mov
std
jl
out
sbb
lock
maskmovq
testl
push
repz
xchg
sub
inc
dec
fs
push
adc
sahf
shlb
xchg
push
pop
aas
xor
xorb
mov
push
cwtl
xchg
sbb
push
xor
adc
lret
and
out
leave
sbb
push
inc
fbstp
int3
pushf
daa
mov
sbb
fnstsw
jmp
dec
ret
adc
sub
fnsave
jl
popa
xchg
bound
mov
fldl
ret
add
cli
dec
sub
icebp
shlb
add
aaa
cmp
fs
shlb
cmp
cwtl
add
mov
cltd
roll
mov
movzwl
int
mov
or
fsubrl
and
add
es
adc
test
xchg
sbb
rcrl
outsb
pop
popf
rclb
call
ss
adc
leave
sti
inc
sti
jbe
jp
jg
and
mov
loope
inc
sub
scas
sub
fs
gs
jle
imul
popf
sbb
jne
in
xor
push
jae
pusha
fs
push
pop
xchg
lods
or
stc
fcoml
xor
add
mov
stos
sarl
adc
dec
adc
push
sti
xchg
push
aad
push
in
jbe
data16
lcall
sahf
sbb
inc
sbb
hlt
sti
stos
mov
pop
and
push
aaa
paddusw
cmpsl
insl
dec
out
or
outsb
test
ficoms
repz
insl
dec
dec
push
mov
jno
or
mov
test
insb
bound
push
je
adc
mov
aas
cmpsl
loopne
mov
mov
insb
fldl
ret
xchg
insb
cmp
inc
sub
gs
cmpsl
push
jmp
mov
or
sub
iret
ja
jbe
cld
dec
add
xchg
fdivrl
push
les
mov
outsl
outsl
cld
arpl
je
and
stc
cwtl
mov
push
jns
lret
ljmp
sub
lea
sbb
xor
lret
dec
xchg
out
cmp
xchg
iret
insb
sub
out
push
cld
rol
addr16
negb
or
imul
call
out
cmp
dec
gs
sbb
push
sahf
xor
imul
ss
or
cmp
data16
add
loop
je
stos
cmovne
aas
or
fildll
add
and
pop
or
ret
rcl
xor
fistl
lret
mov
fnstsw
pop
out
test
xchg
dec
cmpsl
stos
fs
daa
xchg
mov
mov
lret
loope
and
pop
and
mov
add
mov
loopne
xchg
fcompl
into
ljmp
sbb
xchg
jle
xchg
stos
repz
outsl
sub
dec
mov
or
push
sub
jb
mov
into
test
inc
sbb
cmc
sbb
sub
mov
xchg
xlat
repnz
or
inc
iret
sti
xchg
mov
dec
btc
out
fsubrs
mov
adc
sbb
ja
fstpt
stos
aad
pop
mov
xchg
cmp
push
and
xor
pop
fnstenv
jmp
adc
dec
inc
mov
sub
push
or
xor
neg
cmp
xchg
test
es
mov
mov
iret
daa
jb
lds
xchg
das
push
or
pop
cli
das
push
sbb
cmp
pop
pop
add
jb
imul
cmp
aaa
sbb
out
in
jne
cli
lock
jmp
imul
add
sub
sbbb
xchg
lret
adc
dec
pop
pusha
sub
fwait
loope
xlat
xchg
xchg
ds
xlat
out
ljmp
rep
xor
inc
dec
ds
daa
adc
pop
dec
out
sahf
sbb
subb
cmp
add
push
icebp
fxsave
mov
sub
sub
mov
lds
sbb
hlt
pusha
testb
movsl
mov
lods
aas
rolb
pop
mov
sub
cld
rorl
pushf
cmp
lahf
inc
dec
lret
jmp
int
jg
jl
mov
inc
in
fcoms
cli
popa
insb
lea
mov
fxch
rcl
cmp
jmp
loop
sbb
pop
cwtl
jae
push
fadds
lahf
push
stos
add
test
add
adc
or
adc
cmp
xor
enter
jo
test
push
mov
aaa
ret
jne
fimull
jb
test
jne
arpl
out
fisubrl
or
mov
sub
adc
inc
mov
and
pop
jbe
mov
or
jo
sbb
adc
test
mov
jl
jecxz
mov
call
xor
aaa
mov
mov
out
insb
repnz
fwait
in
xor
ljmp
sub
xchg
daa
insl
int3
hlt
and
xlat
pushf
mov
mov
adc
in
sahf
inc
cwtl
addb
jmp
pop
xchg
in
or
hlt
je,pn
lret
push
imul
sti
push
jl
lods
cmpsl
std
loopne
fimull
mov
hlt
pushf
addl
div
xor
mov
sti
inc
mov
xchg
xchg
adc
pop
test
push
mov
lds
stos
pushf
xchg
xchg
mov
shll
cmp
out
jne
jae
xor
es
inc
adc
mov
lcall
stos
aad
adcl
mov
ljmp
repz
mov
cltd
sti
adc
push
add
mov
inc
pushf
inc
pop
pop
xchg
and
or
data16
pop
mov
xlat
scas
adc
add
xor
cmp
test
daa
movsb
gs
out
push
rep
shlb
xchg
sub
and
jmp
lock
jno
jge
test
mov
adc
movsl
test
mov
test
lret
push
push
cmpsb
repnz
mov
cli
icebp
cmc
xlat
jns
scas
cmp
sub
adc
add
dec
cmpsb
popf
or
xor
and
push
sti
mov
dec
push
dec
dec
pop
mov
push
pop
in
mov
or
shl
ret
sahf
sbb
inc
test
sub
push
lock
hlt
loopne
mov
sub
int3
nop
and
inc
xchg
insb
pusha
and
push
lret
fld
addr16
sbb
inc
scas
das
inc
pop
stos
in
das
je
dec
inc
mov
jae
sub
out
cltd
lods
add
mov
add
or
iret
mov
mov
lds
lock
cmp
or
outsl
mov
jns
jnp
insl
jl
inc
jnp
adc
dec
lods
push
inc
mov
jge,pn
hlt
notb
and
xor
sub
ss
jae
push
cld
jecxz
and
mov
push
pushf
aam
push
ucomiss
in
dec
test
lock
loopne
lods
repnz
jle
adc
add
lret
and
jno
jge
xor
jbe
ret
aad
mov
mov
lock
leave
imulb
bound
pop
inc
adc
out
ljmp
mov
test
sub
xor
add
insl
mov
xor
pop
ds
mov
mov
push
xor
inc
pop
push
push
inc
stos
inc
imul
fwait
dec
pop
dec
in
pop
pusha
addr16
in
add
cmpsl
imul
mov
rcll
repnz
daa
sbb
sbb
mov
mov
push
in
push
pop
mov
dec
cmp
addr16
dec
out
outsl
sub
cmp
popa
inc
push
lea
pop
ret
les
xor
adc
dec
xor
xchg
imul
repnz
cmp
push
iret
xor
daa
iret
pop
out
xor
cli
xchg
adc
sbb
pop
xchg
xchg
xchg
fidivl
call
lods
daa
cmp
push
rolb
xorb
into
arpl
cmp
adc
inc
test
ds
in
call
or
push
add
ds
push
push
jo
daa
or
into
xor
xchg
jecxz
cs
pop
mov
pop
sbb
sub
enter
scas
sbb
shll
xchg
out
daa
xlat
jecxz
pop
and
