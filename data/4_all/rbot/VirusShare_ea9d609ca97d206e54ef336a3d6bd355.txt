cmp
jo
pop
xor
jno
push
fiaddl
addr16
add
outsb
fdivr
and
push
addr16
push
ret
adc
les
dec
jae
sub
inc
leave
xchg
pop
nop
out
add
clc
push
es
push
add
sub
xor
dec
mov
cltd
xchg
inc
cmpsl
ret
test
popa
add
xlat
pop
adc
enter
jg
jl
xorb
add
imul
sahf
pop
mov
xor
adc
jge
popa
ret
call
stc
out
std
mov
dec
jnp
negl
sub
sar
rolb
iret
cmpsl
dec
popf
cmp
xor
imulb
dec
stc
arpl
mov
jns
push
fildll
jecxz
mov
test
and
addl
pop
xchg
lods
pop
ret
ficoml
add
popf
addps
or
test
popf
xchg
fsubrl
jo
inc
pusha
leave
mov
int3
pushf
push
xchg
jl
jae
je
icebp
sbb
adc
arpl
inc
cwtl
or
mov
dec
es
or
fwait
jge
sbb
cmp
clc
jb
sub
movsl
xchg
fistps
loopne
mov
sub
cmp
xchg
les
lods
cmp
and
dec
inc
mov
adc
jae
push
bndstx
movsb
lea
add
decb
les
fcomp
mov
cmpsb
in
jmp
xchg
xor
push
gs
cmp
test
data16
and
cwtl
lret
jo
aam
lahf
fisubrs
jle
jbe
jo
inc
out
dec
mov
movsb
aam
test
mov
ret
in
jmp
lods
test
adc
sub
xchg
dec
scas
fsubrl
push
add
jb
jo
adc
cmp
lds
dec
rcr
mov
fistps
enter
adc
jmp
dec
xchg
jb
mov
or
pusha
shlb
sub
fs
sarl
push
push
addr16
movsl
xor
pop
xchg
pop
jae
adc
jl
push
and
xor
out
cmovno
or
lahf
pop
sahf
pop
fdivs
add
pop
jb
sbb
sbb
loope
aam
sbb
dec
pop
addb
add
aam
fwait
aas
jmp
popa
popf
pop
jo
xor
mov
jo
repnz
nop
jb
pop
leave
pop
sbb
aaa
icebp
mov
insb
int
shl
test
inc
out
movsb
mov
pop
shrl
mov
std
rcrl
inc
add
pop
shll
push
mov
xchg
popa
add
shlb
lcall
xchg
lahf
push
mov
jnp
xor
sbb
jle
sub
mov
sbb
sti
cmp
cmp
or
or
sbbb
in
fstpl
add
or
xchg
mov
cmp
fistpll
mov
sahf
and
stos
sbb
fsubr
and
int3
mov
lea
aas
pop
jl
std
mov
inc
lcall
cmc
test
and
xor
push
popf
negl
dec
andl
push
jae
fucomi
pop
jo
js
pop
dec
add
jecxz
hlt
in
icebp
enter
lret
inc
decl
or
subb
ret
fnstenv
mov
mov
push
xchg
fldcw
mov
test
std
fxch
xor
xor
jbe
arpl
push
jl
mov
xchg
push
adc
lods
test
ret
pushf
lods
out
jl
lcall
outsb
sub
fs
imul
lods
xchg
out
jnp
xchg
mov
inc
cmp
add
in
jge
xchg
mov
sub
sarb
je
loop
fmuls
cwtl
xor
cmp
jle
repz
fs
int3
test
movsl
fs
adcl
lahf
xchg
ret
loopne
int3
add
mov
pop
mov
sbb
and
mov
loopne
in
xchg
mov
jae
test
jle
add
cld
dec
add
fwait
pop
cmc
call
jl
lret
in
inc
cmc
lcall
push
add
dec
rclb
xorb
data16
lret
jns
lds
nop
lds
mov
dec
maskmovq
notl
and
mov
test
test
repnz
icebp
add
push
sbb
ret
or
or
test
pop
mov
movsl
or
sbb
fistl
xchg
push
jecxz
mov
fldenv
pop
leave
sbb
js
ds
inc
fwait
leave
cmc
cmp
and
lahf
or
es
mov
inc
nop
sbb
sarb
cmp
xchg
mov
lahf
sub
xchg
imul
popf
jmp
cmp
loopne
fdivrl
jne
shl
stos
int3
add
push
and
mov
add
loopne
fildl
lret
sbb
inc
sub
outsb
int3
sbb
lods
add
jb
mov
cmp
ljmp
stc
jge
rol
pop
repz
xlat
lds
pop
stos
dec
aaa
loopne
pushf
jnp
mov
pushf
mov
lcall
jno
mov
push
push
cld
sub
aaa
mov
sub
sar
pusha
cmc
movsl
dec
sbb
xchg
xor
or
pop
sbb
imul
mov
fiaddl
movsb
ss
mov
xchg
pop
or
mov
add
jmp
imul
inc
sarb
loope
jecxz
dec
xor
out
push
dec
sarb
js
dec
jmp
or
ljmp
mov
pop
sub
popf
xor
in
cmovs
mov
xchg
pop
out
mov
decl
add
sbb
in
sub
and
dec
sbb
in
sbb
xor
sub
test
ss
and
xchg
movsl
dec
sbb
aas
push
cmc
sbb
mov
pop
adc
rorl
test
or
mov
jl
cltd
inc
or
lods
jno
mov
int
fists
mov
jne
pop
sub
cmp
sub
cmc
sbb
mov
cld
sub
idivl
loopne
mov
mov
add
inc
sbb
sbb
outsb
jno
cs
adc
and
mov
sbb
sub
xchg
adc
cmp
pop
mov
adc
xchg
lahf
and
pushf
jne
pop
jns
or
test
inc
insb
orl
xlat
dec
leave
call
mov
and
shrl
ss
pop
mov
xchg
inc
jecxz
mov
sub
mov
loop
lods
mov
cmp
imul
arpl
lock
xchg
mov
jbe
xchg
push
repnz
pop
mov
or
sub
jg
repnz
aas
xor
ss
js
popa
mov
inc
mov
stc
mov
fstpt
jae
mov
arpl
movsl
jno
inc
rorb
fmuls
jp
or
adc
mov
inc
lcall
jle
mov
fidivs
test
scas
rcrb
ss
xlat
fdiv
sbb
sbb
js
or
inc
add
sbb
mov
dec
aam
inc
fbstp
adc
mov
or
or
into
clc
xor
cmpsl
pop
push
sub
or
jno
sbb
push
sbb
mov
cmc
clc
sub
jmp
gs
pop
adcl
dec
xchg
pop
hlt
lret
lcall
mov
mov
cmp
jbe
mov
jp
mov
add
adc
insl
movsl
dec
outsb
and
iret
icebp
scas
dec
int
and
mov
test
fisttpl
lret
stc
mov
scas
movl
fisttpll
test
or
push
into
add
lcall
lds
ljmp
cmp
lods
xchg
add
movsb
loop
mov
in
mov
leave
loop
in
nop
xchg
sbb
mov
inc
std
test
nop
and
dec
mov
xchg
lock
mov
cltd
xor
call
mov
mov
cltd
inc
push
push
sbb
ret
adc
sbb
mov
cmpb
sbb
iret
leave
sbb
push
insb
sti
mov
cmc
clc
dec
mov
jmp
loop
pop
push
mov
shr
xor
pop
repnz
sbb
mov
lock
cmp
pushf
adcl
loopne
add
testb
iret
call
xor
shll
lret
jb
mov
inc
jp
mov
add
cli
je
cmpsl
mov
clc
mov
fidivl
mov
jae
lds
cmp
and
or
cld
xor
and
jp
rorl
xchg
out
jl
add
sbb
pop
pusha
ja
lods
mov
rcll
mov
into
pushl
mov
andl
sbb
dec
cltd
push
xchg
adc
pop
imul
add
scas
enter
ljmp
cmp
cmp
loop
push
add
mov
push
or
lea
lret
sbb
add
fs
shrb
movsl
dec
call
fucomip
hlt
cmp
fists
iret
int3
inc
hlt
mov
sub
or
and
mov
sbb
int
inc
sbb
jbe
mov
sahf
sbb
rolb
pop
xor
rcll
fs
sbb
in
or
sbb
pop
or
xchg
lcall
std
mov
add
inc
mov
loope
dec
adc
dec
loop
repnz
fstps
dec
js
aas
enter
add
sbb
out
mov
cmpsl
mov
xor
ror
xor
dec
push
mov
dec
popf
adc
shlb
cmpsb
inc
test
inc
mov
add
sbbl
add
mov
push
dec
mov
ret
jecxz
mov
push
jne
pop
jmp
cmp
push
inc
mov
adc
jp
aas
in
mov
jnp
mov
adc
sub
shrl
ljmp
notl
sbb
sub
push
lahf
push
sub
adc
jns
sti
mov
mov
sub
adc
subb
jne
inc
dec
lret
stos
xchg
fimull
cli
outsl
sub
pop
loopne
pop
mov
push
insb
jnp
scas
popa
jecxz
ret
lahf
test
jecxz
loop
inc
mov
pop
jb
sbb
pop
inc
rcrl
pop
and
pop
pusha
out
data16
mov
test
in
xchg
jmp
ret
push
mov
cmp
fsubl
and
mov
out
mov
pop
mov
adc
enter
mov
add
insl
sub
ret
sahf
add
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
lahf
mul
rcrl
mov
cli
pop
and
iret
aas
mov
sbb
mov
pop
stos
push
insb
aad
sbb
dec
mov
mov
lcall
mov
fbstp
add
jmp
loop
mov
add
lret
stos
xchg
fimull
sbb
pop
jb
lods
xchg
in
das
mov
ja
lods
loopne
and
jmp
popf
test
jge
js
lods
das
fbstp
add
addb
inc
sbb
mov
dec
mov
xchg
sub
and
push
mov
xchg
push
fisubl
and
std
bound
pop
es
out
cmp
mov
jmp
adc
dec
adcb
imul
fsubp
mov
aad
pop
int
mov
dec
call
dec
mov
push
fists
int3
mov
repnz
mov
sbb
sub
mov
mov
lods
inc
test
or
sbb
mov
pop
repz
xchg
jmp
daa
aaa
push
in
dec
in
mov
pop
sub
les
xchg
rcll
ret
testl
nop
test
add
sbb
icebp
or
popf
adc
loopne
sbb
bnd
lods
scas
fbstp
inc
rclb
xchg
andl
jns
dec
xchg
lock
mov
cltd
xor
mov
mov
mov
cltd
inc
fs
in
int
inc
bound
cmpb
mov
sbb
push
pushf
std
mov
cmc
clc
pop
mov
cmc
hlt
imul
cmp
into
inc
mov
icebp
into
dec
xchg
stc
cmp
mov
clc
sti
pop
es
rcr
repz
mov
add
sbb
insl
movsl
jns
pop
and
mov
inc
stos
cwtl
adc
mov
xor
stos
inc
out
inc
mov
test
into
xchg
stc
cli
in
test
adc
and
mov
cmp
add
xchg
lcall
xchg
or
lds
pop
jno
push
arpl
rclb
lods
lahf
scas
std
fabs
cmp
andl
and
movsb
adc
inc
mov
fdivs
sub
testl
jbe
mov
rcl
xor
adc
push
inc
movsb
inc
add
ljmp
cmp
jmp
and
mov
inc
inc
mov
ret
add
xchg
push
hlt
dec
addr16
fnstenv
out
negl
dec
adc
fdiv
xor
ja
iret
ret
clc
jmp
pop
mov
repz
pop
and
addb
mov
mov
add
rcrl
and
imul
les
ljmp
lret
push
dec
push
dec
cwtl
lcall
jmp
inc
push
jl
sbb
add
inc
sbb
or
stos
arpl
mov
or
mov
pop
jno
lds
push
fildll
sbb
in
mov
leave
loop
in
nop
xchg
sbb
and
xor
mov
rol
adc
les
inc
jecxz
add
push
fsubs
shrb
mov
xchg
mov
daa
sti
mov
ret
cmp
inc
inc
mov
cmp
dec
push
int3
sub
mov
fsubr
push
and
mov
pop
mov
push
aaa
in
mov
imul
inc
arpl
clc
cmp
in
mov
ret
mov
adc
lret
inc
sbb
mov
sbbl
sub
pop
dec
sbb
mov
test
leave
test
cld
mov
push
cld
bswap
cmpsl
iret
pop
lret
into
xchg
je
mov
sub
adc
or
lret
adc
outsb
les
add
sbb
mov
bound
jmp
popf
test
insl
bnd
lods
scas
fbstp
jecxz
cwtl
test
sub
dec
pop
adc
dec
shrl
fwait
jmp
mov
testl
xchg
adc
in
cmpsb
call
rcr
call
push
ret
lret
sub
loop
leave
sbb
ror
jecxz
and
mov
shr
jo
out
out
jmp
loop
mov
int
pop
enter
add
mov
jecxz
sbb
cld
add
mov
or
jns
adc
ljmp
stc
mov
fsubrl
loop
clc
cli
push
lcall
sbb
inc
and
inc
pop
rcrb
pop
lret
pop
imul
inc
les
aad
cmc
add
and
outsb
les
push
mov
xor
add
add
mov
xlat
scas
mov
lahf
jecxz
enter
adcl
dec
pop
sub
mov
adcb
adc
dec
mov
xchg
xchg
inc
push
mov
xchg
sbb
gs
xchg
push
pop
and
insl
push
inc
push
dec
fstps
fwait
psubw
call
cld
or
and
addl
mov
ljmp
lock
pop
loopne
mov
aam
sti
jmp
inc
daa
jmp
jnp
mov
jecxz
inc
inc
sbb
mov
test
mov
mov
cmpb
mov
inc
stos
pushf
adc
mov
mov
xchg
sahf
mov
fcmovne
pop
dec
mov
cmpsl
mov
sub
push
fldl
test
or
adc
or
lods
nop
xor
imul
pop
sbbb
sbb
add
cltd
lods
jle
leave
shll
xlat
and
adc
pusha
loopne
add
inc
fimull
rorb
mov
dec
aam
fsts
add
out
ror
notb
push
fisubs
xchg
imul
cmp
sub
jmp
lret
and
loopne
fstps
mov
enter
dec
push
push
xchg
dec
inc
mov
loop
movsb
inc
jne
loopne
jmp
loop
mov
fisttpll
pop
div
mov
dec
call
rcr
xor
mov
cmp
jp
add
xchg
push
lock
pop
jo
or
sub
nop
jg
adc
adcb
aam
adc
mov
addb
ret
push
lret
mov
xchg
stc
mov
cld
mov
or
test
loop
xchg
ret
add
jno
inc
outsb
cmpsb
sub
dec
movsl
or
pop
movsb
mov
or
mov
jecxz
ret
pushf
sahf
xchg
fwait
push
jmp
sbbl
data16
ljmp
mov
pop
repnz
out
mov
or
pushf
cwtl
mov
insl
xchg
adc
stos
cmp
jb
pop
mov
mov
and
mov
enter
int3
push
push
xchg
stos
jmp
dec
adc
inc
xor
pop
push
mov
les
out
mov
arpl
inc
add
xor
in
enter
add
std
cwtl
dec
add
sub
xor
test
jecxz
cli
push
xor
jb
mov
inc
adc
mov
add
cli
jnp
shlb
cmp
xor
nop
cwtl
nop
sbb
sbb
mov
or
stos
adc
pop
sub
jp
add
sbb
cmp
rcrl
or
cltd
gs
out
push
xchg
sbb
cld
lea
adc
sbb
cmp
loopne
and
push
mov
xchg
or
xchg
pop
int
pop
adc
popa
jge
pop
out
mov
mov
popa
pop
xchg
enter
aam
sub
lret
sub
gs
jne
jnp
xchg
repz
cmp
shrl
mov
push
dec
addr16
xlat
xor
cld
leave
add
add
mov
xor
add
nop
or
mov
mov
xor
into
inc
jle
jg
cli
shll
cmc
jb
mov
inc
out
mov
add
lahf
popf
lds
pop
xchg
fucom
jmp
or
or
cmp
adc
lcall
adc
loopne
cmp
or
or
dec
push
dec
scas
test
enter
mov
rclb
andl
inc
aam
pop
and
loope
fwait
cmp
les
push
mov
xchg
sub
test
cmpsb
jnp
clc
jno
jecxz
addr16
orb
loopne
add
xchg
int3
fidivs
sbb
add
stc
mov
shrb
and
imul
inc
bound
mov
sbb
lock
sbb
and
enter
ljmp
xchg
jo
mov
cmp
jne
les
mov
test
pop
movsb
leave
test
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
orl
or
mov
push
stos
fnsave
fwait
loopne
pop
cld
ret
or
inc
sbb
scas
popa
arpl
repz
loop
inc
mov
pop
jb
or
cmp
rol
mov
aam
stc
xor
loop
xor
xchg
adc
adc
xor
cmpsl
ret
mov
jmp
popa
xchg
sbb
sbb
daa
loopne
hlt
mov
xorb
pop
jp
xchg
mov
jmp
gs
filds
aam
sti
fistl
dec
mov
mov
jnp
mov
repz
sbb
jl
mov
adcb
pmuludq
sbb
lahf
inc
data16
push
test
cwtl
xor
test
sub
jnp
mov
cmc
dec
popf
ljmp
pop
sbb
stos
mov
sbb
test
jno
dec
sahf
xchg
fistl
mov
jmp
add
icebp
xchg
jp
loop
mov
scas
inc
fdivl
jo
arpl
rcll
rclb
rorl
mov
fs
inc
mov
xchg
push
pop
and
xchg
insl
cmovae
fldenv
fwait
psubw
call
aam
add
out
rcll
int3
dec
sub
sub
mov
fsubr
push
and
lea
dec
fisttpll
clc
icebp
repz
dec
call
mov
mov
jae
cmpsl
sbbb
test
aad
cmp
xchg
jo
jecxz
dec
sbbb
jne
clc
push
mov
test
and
fnstenv
negb
in
or
cli
adcb
insl
addb
test
dec
sahf
push
fistl
cmp
shrl
and
jmp
popf
in
bound
lods
fbstp
shlb
or
sbb
xchg
ficoms
mov
shl
mov
lret
in
mov
mov
xchg
cltd
cmp
and
jmp
pop
fldenv
mov
jecxz
xchg
enter
aam
sub
fidivl
mov
dec
sahf
inc
sub
xor
mov
call
xor
mov
and
mov
mov
inc
sbb
loope
jmp
pop
mov
sbb
leave
sbb
cld
insb
test
rcl
sub
sbb
mov
lcall
mov
fbstp
add
pushf
mov
aam
cmp
adc
sbb
cmp
les
mov
pop
cld
ret
add
xor
scas
mov
lahf
jecxz
enter
adc
dec
cwtl
sub
mov
adcb
and
or
in
mov
jnp
inc
push
mov
push
or
dec
xchg
xchg
cltd
inc
jbe
xchg
outsl
movnti
imul
out
leave
cmpb
sbb
es
push
mov
adc
mov
popf
out
mov
mov
lcall
jle
fnop
lods
sti
and
pop
lock
in
rol
dec
add
add
push
pop
adc
enter
mov
xchg
jo
mov
cmp
jne
les
arpl
test
mov
xchg
mov
lods
lahf
popf
stos
mov
jae
cli
jo
mov
out
xchg
jmp
pop
mov
or
dec
push
mov
push
stos
inc
xchg
fsts
mov
dec
inc
sbb
scas
jg
leave
icebp
mov
cld
repnz
and
sbb
mov
fwait
push
dec
mov
xor
xchg
xchg
adc
sbb
or
push
jns
enter
ljmp
sbb
mov
mov
cwtl
push
cmpb
arpl
shrb
mov
xchg
out
aad
sub
sub
push
mov
les
cmpsl
mov
arpl
inc
fistl
sbb
mov
cltd
xor
rcrl
mov
cli
dec
and
iret
inc
sbb
nop
sbbl
sbb
stos
mov
mov
test
lahf
fisttpll
test
or
adc
loope
pusha
xor
fnsave
sbb
xchg
sbb
add
mov
out
popa
stos
inc
loopne
sbb
xchg
loop
inc
mov
pop
jb
add
mov
fwait
push
dec
mov
out
dec
aam
inc
fbstp
adc
mov
fs
jae
loopne
and
cmpsl
ret
mov
jmp
lret
cs
mov
enter
dec
push
push
xchg
stos
out
sub
adc
xor
mov
pop
push
mov
ret
mov
pop
test
cmp
mov
or
insl
cmp
lcall
stc
popf
ret
mov
mov
sbbb
mov
inc
stos
pushf
adc
mov
sub
stos
inc
out
inc
mov
test
jp
pop
pop
jo
mov
or
mov
push
sbb
sbb
shrb
mov
xor
add
test
scas
mov
lahf
fists
mulb
add
mov
fwait
push
dec
mov
push
fsubrl
push
push
jp
imul
xchg
mov
push
jns
enter
ljmp
sbb
mov
mov
cwtl
push
addb
pushf
test
aad
mov
cmpl
jle
addl
call
imull
mov
repz
cmp
out
repnz
sbb
cmp
push
pop
adc
dec
cmp
xchg
jo
loopne
dec
sbbb
jne
clc
mov
push
cld
mov
pop
jae
mov
xchg
jmp
pop
aaa
push
repz
ret
pop
add
test
roll
in
dec
adc
dec
jp
mov
leave
xchg
fwait
adc
loopne
fistpl
stc
shrb
test
fidivs
test
loop
xchg
loop
iret
adc
fwait
imul
mov
andl
add
dec
mov
pop
repnz
out
dec
shlb
adc
mov
out
xor
cmpsl
ret
mov
xlat
pop
fnstcw
hlt
lods
or
movsl
movsl
inc
mov
mov
cltd
sahf
ret
dec
mov
ret
bound
mov
push
jne
pop
jmp
pop
ret
cmc
mov
loopne
jmp
add
jmp
jnp
mov
adc
ss
fs
mov
fwait
repz
leave
rcrb
cli
fnsave
jne
testl
pop
sub
cli
fisttpl
mov
arpl
lds
popa
and
sub
test
push
stos
xchg
rorl
xchg
out
leave
sbb
inc
sti
test
popf
adc
adc
sbb
movsl
bnd
lods
scas
fbstp
add
ret
or
andl
rolb
adc
dec
and
inc
or
inc
pop
repz
std
bound
pop
pop
in
out
cmp
test
pop
sub
dec
push
push
ret
mov
fsubr
push
and
push
mov
mov
sbb
inc
mov
test
fwait
lahf
aas
fistps
in
int
sbb
mov
fwait
ret
mov
mov
push
and
iret
xor
adc
add
rorl
lret
mov
xchg
sub
jae
roll
lret
les
sbb
test
lret
add
and
fnsave
sbb
xchg
sbb
add
lods
jle
mov
lea
leave
push
nop
cmp
scas
inc
xchg
repnz
and
je
pop
xchg
add
cwtl
inc
mov
insb
xor
sbb
popf
inc
jns
xor
inc
sbb
cmpsb
jnp
enter
rcrl
jb
fs
adc
clc
mov
add
or
fidivl
mov
dec
sahf
inc
sub
xor
mov
loopne
orl
sti
fstl
dec
mov
daa
in
into
mov
xor
mov
jp
add
cmp
mov
pushf
call
int
sbb
iret
and
aad
push
sub
movsb
leave
test
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
stos
push
cmp
sbb
sbb
or
stos
arpl
shrb
jecxz
mov
pop
jno
push
xchg
xchg
xor
adc
push
insb
out
js
mov
adc
rorb
pop
dec
aam
aam
mov
sbb
pop
xor
imul
cmp
scas
enter
cmpsb
nop
int
fldl
fsubl
mov
pusha
outsl
xchg
enter
aam
sub
fisubs
cltd
push
inc
mov
jge
pop
mov
repz
mov
imul
sbb
pop
mov
repz
cmp
icebp
repnz
popf
sbb
ret
mov
adc
lret
cmp
mov
pop
pushf
dec
and
ror
sbb
mov
cli
mov
pop
repz
mov
xchg
jmp
push
aaa
ss
ljmp
inc
cmp
stos
dec
or
push
stos
rcrb
xor
mov
add
jle
mov
and
lods
inc
pop
lcall
fwait
out
pop
xchg
sub
and
xor
cmc
xor
sbb
mov
fwait
push
dec
mov
pop
jne
push
xchg
adc
xor
push
sub
movsl
fidivl
test
xor
mov
cmpsb
jnp
clc
jno
jecxz
sti
je
or
and
jb
dec
add
xchg
dec
dec
mov
mov
cs
pop
fnstenv
shl
pop
and
cmp
mov
or
mov
jno
mov
hlt
mov
mov
inc
fsubrl
adc
mov
mov
jno
mov
xchg
jo
data16
sbbb
jne
clc
mov
xchg
cmp
inc
and
inc
outsl
rcrb
push
lret
pop
imul
inc
xchg
push
in
inc
cmp
adc
sbb
push
outsl
les
pop
sahf
mov
aad
mov
add
inc
pushf
rclb
shlb
xchg
cld
loop
mov
out
loope
out
js
mov
adc
rolb
outsb
mov
or
in
mov
jnp
inc
push
mov
sub
addb
pop
jae
and
std
bound
sbb
movsb
and
mov
ror
mov
aad
dec
lea
shrb
in
dec
fyl2x
mov
push
adc
sbb
jne
popa
or
mov
jno
mov
hlt
movsl
ret
aaa
lods
inc
and
adc
mov
mov
jno
testb
add
mov
sbbb
jne
clc
fimull
repnz
in
std
test
and
inc
pop
rcr
dec
sbb
punpckhwd
mov
prefetchnta
out
in
dec
sub
inc
stos
imul
fistl
cltd
xchg
xchg
shrb
test
fidivs
test
ficoms
mov
stc
icebp
xor
jb
mov
jp
mov
mov
outsb
shrl
push
fisttpll
aas
fwait
lret
in
mov
mov
xchg
cltd
cmp
test
pusha
xchg
pop
fldenv
pop
gs
adc
pop
jecxz
enter
or
fidivl
mov
dec
sahf
inc
sub
xor
mov
imul
xor
aas
into
sbb
mov
lock
cmp
push
subl
imul
mov
testb
iret
call
xor
shll
push
insb
dec
add
jne
sahf
out
inc
mov
test
mov
fidivl
jns
cmpsl
jae
inc
push
cmp
and
or
cld
xor
and
jp
rorl
xchg
fistl
lea
pop
xor
lods
arpl
pusha
mov
cld
loop
mov
outsb
pushl
shlb
and
adc
dec
mov
xor
fsub
xor
out
push
sub
movsl
fidivl
test
xor
test
cmpsb
jnp
clc
jno
jecxz
jnp
push
add
xchg
pushf
push
or
lea
shrb
mov
shl
pop
and
arpl
sbb
fdivrs
imul
daa
loope
out
mov
lock
loop
cmp
mov
cmpsl
push
sarb
imul
clc
mov
xlat
mov
inc
and
inc
mov
repz
rcrl
test
roll
fsts
pop
packuswb
jo
pop
sahf
xchg
fistl
fimull
jae
xor
shrl
cmpsl
pop
push
fucomi
cmc
mov
enter
inc
mov
or
sbb
or
lret
stc
adc
outsb
test
mov
popf
inc
jns
xor
sub
fisubs
mov
in
int
clc
bound
cmpb
je
inc
sub
pop
mov
shr
and
jle
push
dec
mov
push
mov
call
xlat
arpl
test
mov
ds
cmc
lret
daa
add
in
mov
lock
loop
cmp
out
inc
and
mov
cmpb
xor
ret
sbb
rcrb
adc
mov
mov
dec
cli
push
in
mov
jae
mov
arpl
cmpsb
jno
inc
rorb
fmuls
jp
or
ret
dec
addr16
dec
movsb
testl
pop
jb
lods
ret
sbb
lret
jns
xchg
rorb
mov
leave
push
nop
bound
inc
xchg
cli
stc
and
idivl
fldl
fdivs
rcr
or
in
mov
jnp
inc
push
mov
xchg
sbb
pusha
cs
push
pop
and
lea
cmp
cmpsl
jbe
dec
add
lcall
or
sub
mov
rol
mov
sahf
dec
movsb
adc
fsts
jmp
ljmp
lcall
setae
jecxz
cli
daa
cmp
sbb
popa
mov
inc
cmp
add
rcrl
dec
mov
pop
sbbb
inc
sbb
push
jmp
lds
push
cld
mov
mov
ret
cs
sbb
mov
sub
pop
fisttpll
test
or
push
into
loope
xor
shrb
ljmp
cmp
loope
inc
pushf
shlb
lret
sbb
jnp
jg
scas
pushl
mov
or
sbb
mov
fwait
push
dec
mov
and
dec
enter
cmc
mov
adc
ret
mov
mov
fsubs
add
or
xor
push
sbb
mov
cmc
clc
sub
int
mov
mov
mov
pop
add
xorb
into
lea
mov
cmpl
mov
adc
repnz
dec
subl
mov
add
testb
gs
sbb
add
pushf
shrb
inc
in
xlat
xor
repnz
stos
jecxz
jp
mov
sar
xor
sti
movsb
into
xchg
mov
shrb
mov
sbb
sub
add
lret
stos
xchg
fimull
fisubrl
pop
jb
lods
xchg
adc
sbb
xor
or
scas
aaa
mov
cli
jnp
inc
mov
cld
xor
or
push
sbb
nop
lock
mov
cltd
xor
mov
xchg
sbb
inc
mov
cltd
inc
push
push
cltd
pop
inc
sti
mov
ret
mov
int3
inc
cmp
fmull
xchg
jmp
cmpsb
inc
xchg
imul
fsubp
mov
jbe
mov
adc
jecxz
pop
mov
in
ljmp
jecxz
movsl
mov
mov
sti
sub
int
cmp
and
popa
cmpsl
clc
loopne
and
ja
inc
in
xlat
in
ficoml
xor
rcll
scas
mov
sbb
in
or
test
inc
scas
ja
les
xchg
or
insb
xlat
sbb
adc
pushf
ret
sbb
dec
push
icebp
leave
dec
mov
std
cli
jnp
inc
mov
add
cmp
mov
dec
mov
jmp
aam
xor
adc
and
mov
xchg
in
cmovae
cltd
mov
mov
mov
cwtl
push
add
sub
xchg
sti
nop
jmp
add
pop
ret
inc
mov
ret
loopne
mov
push
jne
les
clc
test
movsl
sti
and
imul
lahf
lret
in
rol
dec
paddsw
mov
in
sbb
dec
cmpsl
mov
cli
sub
aas
xchg
out
xor
test
dec
pop
stos
push
insb
aad
sbb
dec
cmp
pop
popf
scas
mov
jae
mov
mov
pop
cmp
stos
add
or
inc
mov
fistl
fimull
jae
xor
lods
jge
shrl
dec
sub
icebp
pop
sahf
adc
insl
aaa
mov
cli
jnp
inc
mov
sub
pop
mov
or
lret
sbb
mov
test
mov
loopne
jge
sbb
inc
mov
cltd
inc
push
push
cwtl
outsl
push
ret
sbb
aaa
out
leave
cmpb
sbb
je
insb
dec
arpl
out
imul
fsubp
stos
mov
int
cwtl
out
repz
dec
call
cmp
test
xor
lahf
lds
add
mov
dec
add
subb
sub
add
lret
lds
dec
cmpb
sub
mov
and
cmpsl
cmp
lret
mov
mov
arpl
jge
pushf
arpl
jo
inc
dec
xchg
xchg
fsts
pop
inc
push
jl
xchg
stos
std
cld
pop
mov
jecxz
loopne
fistl
mov
push
xor
ficoms
fwait
lods
and
mov
stc
icebp
xor
js
subl
ljmp
mov
pop
repnz
out
mov
or
pushf
xchg
mov
insl
xchg
imul
popa
add
pop
cltd
xabort
xor
sti
sti
and
mov
push
rorl
stos
in
adc
enter
mov
add
insl
sub
ret
fwait
pop
loop
jl
mov
shlb
push
lds
roll
in
rol
dec
nop
mov
in
pushf
pop
dec
rcrb
sub
aas
push
out
movsb
mov
pop
stos
push
insb
aad
sbb
dec
sahf
xchg
cmpsb
ljmp
int3
pop
lods
mov
mov
or
mov
push
sbb
push
mov
inc
outsb
shrb
mov
xor
jecxz
fwait
or
pop
inc
sub
sbb
mov
xor
stos
leave
loop
in
nop
xchg
sbb
or
mov
rorl
mov
sbb
push
xchg
lahf
mov
stos
icebp
lea
sub
in
xchg
mov
popa
jne
pop
xchg
stc
popa
jl
dec
mov
inc
popa
cmp
aam
sub
fidivl
lret
sub
imul
adc
push
insb
lods
pop
adc
lea
push
mov
repz
cmp
mov
hlt
leave
add
sbb
test
lcall
jg
enter
dec
pushf
inc
stos
cwtl
adc
mov
aaa
mov
dec
test
push
mov
divl
lret
and
cmp
sbb
data16
scas
ja
les
xchg
lcall
enter
add
add
jnp
mov
mov
mov
js
mov
push
fdiv
and
sub
rcrb
add
shlb
mov
test
sbb
and
mov
xor
fwait
pop
fs
cmp
pop
fisubs
cmp
fnsave
xchg
push
adc
clc
lret
jecxz
enter
or
fimull
lods
lea
out
and
push
xchg
mov
std
xorb
into
popf
sub
cmpl
repz
hlt
mov
inc
sub
or
mov
sbb
leave
fstps
insb
test
sahf
sbb
test
push
in
xor
jmp
or
icebp
add
or
mov
mov
das
sub
stos
adc
pop
sub
jp
add
sbb
mov
pop
and
jmp
popf
test
in
js
lods
scas
fbstp
rclb
addl
and
dec
xchg
lock
mov
cltd
xor
mov
movsl
push
pop
jae
and
std
bound
pop
pop
sti
xor
fadds
jae
int3
inc
cmp
mov
jmp
cmpsb
dec
imul
fsubp
mov
hlt
pop
adc
aad
cwtl
jmp
mov
dec
call
dec
jmp
adc
ret
fdivp
lods
es
sub
sbb
test
lcall
mov
sbbl
dec
sbb
xlat
or
push
jge
leave
test
insb
cli
sti
cmpl
ljmp
orb
jecxz
addb
sub
dec
data16
jl
add
or
pop
cmpsl
pop
js
enter
cmpsl
push
out
jmp
push
enter
inc
shlb
or
sbb
or
lret
stc
sbb
outsb
test
push
fisubs
sub
push
ret
push
jge
mov
jmp
std
mov
sti
and
xor
mov
adc
enter
mov
add
insl
sub
ret
scas
add
ret
mov
pop
test
cmp
mov
xchg
lock
push
iret
sbb
mov
cltd
addb
mov
xchg
cmp
jmp
outsb
out
push
lock
fcomi
daa
nop
xlat
dec
sub
ret
sbb
lahf
sub
mov
popf
int3
stc
mov
imul
loope
sub
inc
shrb
sub
lods
mov
fisubrl
pushf
scas
testl
gs
sbb
pop
mov
add
popa
mov
iret
js
mov
cmc
and
push
sub
mov
test
or
ja
or
in
mov
jnp
inc
push
mov
int
mov
movsl
inc
pop
jae
and
std
bound
outsl
movnti
imul
out
leave
sbbb
sbb
es
push
mov
mov
aad
dec
lea
inc
sahf
dec
mov
lcall
adc
loope
mov
jns
into
or
mov
mov
add
cmp
mov
popf
pushf
push
pop
int
sbb
sarb
das
test
push
aas
mov
mov
dec
rclb
cmp
cmp
arpl
movsb
jno
inc
fmuls
fmuls
jp
or
xchg
out
xchg
fistps
mov
inc
sub
lods
jle
mov
lcall
shr
sbb
fisubrl
jnp
inc
mov
call
js
mov
inc
mov
inc
test
lret
jmp
inc
cwtl
dec
je
xchg
imul
ljmp
mov
or
fwait
rolb
jne
rcll
lea
push
adc
aad
add
mov
ret
xchg
pop
push
test
fwait
cwtl
test
sbb
int
jg
pop
hlt
cmp
mov
fistl
sbb
dec
or
lock
dec
cmc
mov
imul
mov
fildl
nop
pmuludq
jne
pop
sub
cmp
sub
cmc
sbb
mov
std
test
nop
fldl
cmp
or
stos
div
stos
mov
lds
lahf
xlat
push
adc
arpl
popf
sahf
xchg
fwait
pop
test
lods
jp
in
test
mov
dec
xchg
xchg
push
cmp
vmread
rcll
jecxz
aam
xchg
mov
mov
lea
cmp
xchg
cwtl
ds
cwtl
mov
jae
push
je
cmp
popf
mov
dec
sahf
in
pop
push
or
push
lea
ss
cmp
mov
icebp
ds
mov
mov
inc
sbb
shrb
sbb
xchg
mov
sub
test
sub
adc
push
cmc
xor
sbb
stc
and
popa
in
inc
mov
or
cmp
adc
lcall
mov
jp
add
jno
aad
xchg
les
jno
roll
mov
mov
in
mov
xor
loope
xchg
and
inc
xor
sub
push
cmp
fwait
xor
cmpsl
lret
in
mov
mov
xchg
cltd
jl
cmp
lret
gs
adc
xchg
shl
inc
rol
sub
add
loope
rclb
sbb
add
cmp
pop
aas
shl
repz
sub
push
dec
add
mov
cmp
jp
add
rorb
imul
push
lods
xchg
sub
adc
push
test
test
lods
js
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
push
or
lret
dec
movsl
push
or
xor
mov
cmpsb
xor
jb
fcoml
dec
scas
iret
dec
movsb
ljmp
mov
scas
aaa
mov
cli
jnp
inc
mov
rorl
js
ret
dec
add
add
mov
or
in
mov
jnp
inc
push
mov
jp
mov
mov
add
jae
inc
rcr
cmpsl
ret
popw
std
xchg
xor
popa
shl
mov
int3
loope
movsl
sbb
add
pop
dec
mov
fisttps
in
pop
sahf
dec
mov
nop
mov
dec
and
mov
mov
test
fwait
lahf
jg
clc
sti
mov
in
inc
inc
sbb
lods
adc
les
jmp
pop
push
adc
mov
sahf
sbb
test
inc
pusha
pop
clc
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
push
dec
pop
cmpsl
lret
dec
push
or
or
xor
jb
fcoml
mov
push
lret
ret
mov
mov
mov
scas
aaa
mov
cli
jnp
inc
mov
rorl
mov
dec
add
add
mov
or
in
mov
jnp
inc
push
mov
into
inc
pop
dec
sub
mov
jne
mov
or
mov
add
je
bound
cltd
add
aaa
jl
pop
push
mov
dec
test
imul
aad
sbb
or
and
and
pop
jb
loope
call
punpcklbw
loopne
xor
push
and
xchg
cli
mov
inc
xchg
enter
lock
and
iret
imul
inc
xorl
cmp
sbb
in
jmp
test
aaa
jns
pop
push
popf
and
cli
mov
sti
stc
cli
in
test
or
test
fwait
pushl
outsb
cmpsb
sub
mov
inc
fimull
jmp
in
int3
mov
adc
mov
sbb
xchg
int3
pusha
xor
rorl
mulb
cwtl
nop
out
ud0
lock
outsl
xor
ljmp
lea
mov
aas
pop
adc
popa
sahf
scas
and
movsl
add
jno
lea
sbb
enter
stos
outsb
add
lock
ja
adc
cld
shlb
iret
cli
mov
add
arpl
daa
mov
cmp
shr
lods
ret
add
hlt
test
popa
shrl
push
cmp
lea
or
loope
aam
sub
insb
push
sub
push
mov
dec
push
in
int3
inc
push
cltd
push
pop
lods
push
fcoms
adc
and
ror
mov
in
shl
fwait
aad
lahf
in
loope
ret
insl
dec
mov
jne
xor
mov
jnp
push
xchg
jle
jmp
cmp
jb
lods
xchg
mov
es
inc
rol
mov
lret
js
popf
scas
test
lret
aas
ja
xor
js
sahf
add
and
es
fidivrs
jo
rorl
push
fsubrs
test
movsb
fidivl
pop
push
sub
inc
fdivrl
stos
cmpsb
lea
pop
mov
xor
add
test
cltd
inc
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
pop
lock
xchg
xor
leave
add
mov
in
jg
cmpsl
xlat
cmc
push
mov
mov
outsb
xor
push
inc
push
push
or
and
das
push
jno
xlat
jbe
sbb
lock
iret
push
nop
sub
add
push
xchg
ja
in
addl
xchg
and
sub
dec
stos
inc
in
pop
lods
mov
mov
fwait
mov
popa
shr
pop
sub
cmpxchg
out
jno
insb
out
pop
mov
out
or
cld
icebp
mov
or
enter
cmp
mov
ret
dec
fcoms
outsl
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
mov
dec
adc
je
mov
jo
xor
je
jo
xorl
lds
fldt
iret
ret
adc
or
push
dec
push
push
std
sbb
insb
jne
inc
xor
jmp
lret
inc
ret
add
jnp
mov
es
test
sahf
mov
in
mov
cli
fwait
lret
repz
jp
ss
push
out
mov
inc
pop
push
addb
mov
mov
add
push
xor
stos
add
pop
or
mov
iret
js
jle
cmp
leave
test
addr16
rcl
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
lods
stos
mov
mov
inc
int
jns
mov
mov
or
lahf
cltd
pop
adc
ds
xor
cmpb
je
test
jle
jl
out
mov
icebp
push
mov
stos
xchg
lahf
mov
adc
rolb
xor
pusha
or
pusha
push
sub
push
xor
divl
scas
pusha
mov
adc
andb
lods
pop
sbb
mov
rcrb
push
mov
insl
aad
insl
ficomps
fldenv
stos
lods
fldt
ljmp
push
bound
push
push
bound
sbb
nop
mov
imul
mov
fisubl
stos
pop
xchg
outsl
cmp
lds
push
fdivrl
jmp
mov
mov
mov
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
adc
and
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
dec
cmpsb
enter
mov
cmp
dec
lea
repnz
into
lds
movsb
mov
or
ret
nop
and
push
or
mov
les
sbb
cmp
je
clc
jb
mov
xchg
jns
lret
or
stos
jbe
lret
test
xchg
inc
dec
shrb
pop
pop
sbb
adc
gs
ret
gs
cltd
fs
hlt
sub
sub
stos
lds
jge
sub
cmc
sbb
std
fistpll
xchg
mov
mov
test
jp
jge
scas
xchg
iret
jmp
stos
xchg
shrl
popa
or
xchg
repz
ret
cmpsl
inc
mov
movswl
insb
jno
mov
ja
inc
fcoml
jg
inc
dec
inc
sub
lret
lock
jge
cmp
outsb
cmp
scas
mov
dec
mov
ja
stos
repz
fwait
cld
sub
mov
fucomip
loop
pop
xchg
push
std
mov
int
mov
or
lds
inc
iret
mov
dec
inc
leave
pushf
push
test
stos
sbb
cmpsb
ja
test
shlb
cli
scas
ja
mov
iret
push
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
mov
test
pop
and
gs
sub
adc
inc
in
xlat
mov
mov
push
sahf
aaa
push
testl
loope
lret
movb
sub
xor
imul
xchg
push
pop
push
jnp
xchg
and
stc
xchg
and
cltd
push
inc
dec
push
aaa
lods
adc
mov
scas
jmp
sub
cs
mov
pop
jb
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
jp
and
daa
jbe
jg
sti
std
mov
sti
and
test
sbb
ja
xchg
push
hlt
mov
movsl
pop
das
idivl
mov
adc
cmp
push
sbb
push
mov
push
xor
adc
loop
inc
sbb
daa
adc
cmpb
jmp
jle
sbb
enter
aad
in
pop
outsb
xor
ret
scas
popa
adc
rcrb
sub
int
jno
lea
scas
fsub
jbe
lods
push
outsl
sbb
dec
pushf
mov
dec
sbb
xchg
stos
xchg
mov
scas
push
adc
mov
test
dec
cwtl
loop
cs
fucomi
das
jns
jno,pn
insb
repnz
mov
mov
int3
pop
push
mov
sbb
insb
pusha
pop
orl
mov
les
jg
xchg
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
popf
out
mov
push
shlb
mov
lods
movsl
pop
mov
and
imul
ret
add
sti
mov
mov
mov
adc
outsl
mov
xor
pop
leave
pushf
push
xchg
das
mov
aad
aad
xchg
jmp
jnp
inc
das
inc
or
inc
lcall
lds
in
ds
lret
ljmp
push
stc
and
pop
mov
and
test
test
sarl
and
pushf
xchg
cld
xchg
enter
jne
sbb
sbb
sbb
add
pushf
sbb
loop
nop
xchg
mov
jle
dec
std
loope
sub
enter
mov
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
mov
rcrb
dec
arpl
call
dec
scas
jno
adc
jp
xor
divl
cmp
push
inc
dec
and
push
adc
xor
popf
sbb
inc
addr16
mov
mov
andl
adc
and
xor
dec
movsl
arpl
test
lods
mov
movsl
int
mov
and
mov
fsubs
js
push
outsl
sbb
ja
in
subl
dec
jle
inc
push
mov
test
or
lret
lds
mov
lahf
mov
inc
call
pop
aad
bound
lds
inc
repz
cmp
jl
fadd
xor
hlt
ja
jge
dec
push
lret
scas
out
xor
outsl
add
jb
jmp
data16
enter
push
movsl
int3
adc
jp
gs
lret
cltd
dec
sub
and
ljmp
mov
ficoms
sub
xchg
lcall
cmp
stc
clc
jp
add
add
mov
sbb
testl
mov
in
arpl
mov
jg
sbb
push
push
mov
sub
jne
adc
call
orl
hlt
cwtl
rolb
push
sbb
jg
out
sub
sub
out
sub
dec
mov
stos
push
dec
pop
mov
fsubp
sbb
adc
add
test
xor
in
cmc
and
adc
jmp
and
jnp
cmp
stc
inc
push
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
mov
pop
mov
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
and
test
pop
shrb
int
push
fisttpl
pop
add
cmp
or
mov
xorl
xlat
insl
aad
insl
ficomps
fists
in
dec
pusha
lods
fldenv
mov
jmp
sub
cmc
test
lret
or
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
push
jnp
xchg
add
movsb
fisttps
mov
mov
jnp
push
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
dec
push
jbe
xor
inc
pop
inc
iret
movsb
sbb
test
sbb
rcrb
int3
lcall
mov
push
jl
inc
and
add
loope
jl
mov
mov
jae
or
test
inc
into
push
mov
insl
cmc
imul
shll
dec
mull
push
push
and
aam
filds
push
les
and
rolb
adc
adc
xchg
jnp
imul
addr16
mov
rol
lret
jb
pop
push
aam
int3
imul
into
mov
iret
lods
in
mov
es
test
inc
das
sub
sub
js
or
add
mov
fistl
cwtl
test
sbbb
fists
enter
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
mov
push
shlb
mov
lods
insl
int
jg
ret
call
add
repz
sti
push
mov
lahf
lret
or
inc
xchg
dec
cmc
inc
daa
xchg
lret
add
jl
pop
test
addr16
xor
fsubrl
inc
push
push
lds
insl
lods
into
mov
pop
push
ljmp
cltd
dec
clc
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
adc
xchg
xchg
fisttpl
add
jp
add
cmp
push
inc
mulb
jecxz
sahf
sahf
xchg
sbb
js
adc
cmp
mov
popa
or
dec
mov
addr16
stos
dec
xchg
scas
out
js
scas
out
mov
out
lock
xor
push
iret
hlt
test
mov
das
shrl
xor
shrl
lahf
cli
cwtl
add
loope
outsb
add
jle
scas
pop
fwait
out
enter
jbe
and
and
mov
in
pop
repz
xchg
test
xchg
fimuls
jnp
cmpb
push
adc
int
mov
sbb
xchg
xor
pop
mov
lods
xchg
sub
adc
inc
in
xlat
mov
mov
push
sahf
aaa
push
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
lods
mov
mov
arpl
movsl
sub
sbb
sbb
sbb
ret
xchg
mov
leave
lock
mov
test
mov
inc
cwtl
dec
and
sbb
sub
jnp
mov
js
call
iret
adc
ret
and
jo
not
fisttpll
imul
je
das
mov
cmp
call
movsb
lea
push
pop
pop
push
test
xchg
repz
and
lds
add
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
clc
ljmp
push
imul
dec
and
push
mov
in
lret
cmp
subb
pop
imul
push
xchg
ja
push
mov
mov
sub
aam
xor
dec
popa
push
in
int3
fs
roll
popa
inc
outsl
mov
pop
mov
popf
int
xor
add
dec
rorl
push
cmp
inc
jmp
push
js
int
movsb
jp
cwtl
hlt
stos
insl
fcomp
movswl
jmp
std
mov
sti
and
aas
lahf
es
jns
jle
orl
xor
imul
inc
fdivrs
inc
icebp
dec
mov
and
test
lods
nop
aas
jo
pusha
or
adc
jno
decl
out
mov
fs
adc
ret
jb
dec
push
pop
repnz
jle
or
movsl
mov
pop
ficoml
imul
xchg
shlb
push
cmc
mov
sbb
mov
or
or
or
cmp
adc
mov
push
add
mov
pushf
xchg
pushf
xchg
lcall
scas
jmp
sub
mov
int
mov
sbb
adc
sbb
std
cmp
mov
mov
out
aas
pop
dec
iret
pop
call
add
jbe
out
out
cmpl
outsb
mov
mov
mov
pop
out
inc
sub
mov
cmp
call
movsb
lea
push
pop
pop
push
test
xchg
repz
and
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
lods
push
outsl
sbb
dec
pushf
mov
jecxz
imul
mov
scas
push
mov
das
mov
push
xchg
and
in
jo
sub
repz
aad
jecxz
xchg
xor
xchg
xor
mull
mov
fxtract
cmc
out
les
out
dec
mov
fcoml
xor
mov
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
dec
jl
mov
cmp
inc
and
xor
les
mov
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
xchg
ja
ja
icebp
ret
sbb
fs
sarb
fstpl
mov
sti
sbb
cli
sbb
sub
js
ret
pop
roll
arpl
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
adc
dec
movsb
aad
xor
xor
mov
mov
pop
aas
push
jo
mov
pop
jb
add
xchg
cmpsl
or
mov
ficomps
xchg
out
test
jge
sahf
jp
popa
lret
mov
pop
push
leave
jne
sbb
out
mov
push
loope
cs
mov
outsb
out
lahf
stc
cmpsl
leave
jns
fcoms
add
mov
mov
sbb
mov
in
or
mov
ja
cmp
push
arpl
call
int
push
pop
jmp
popa
shrl
push
cmp
or
push
les
xlat
mov
adc
jbe
xchg
push
stos
mov
ja
mov
in
imul
dec
and
loopne
and
jae
mov
xor
dec
inc
sub
sub
or
push
sbb
addb
mov
sub
mov
sti
mov
dec
stos
inc
in
lret
das
mov
in
cmpsb
aas
stos
jmp
sub
pusha
aam
fstl
mov
add
movsb
out
inc
mov
push
dec
mov
sbb
xor
pusha
adc
push
test
daa
dec
fidivrs
js
cs
xchg
aas
movsl
dec
fistl
ficomps
xchg
fistpl
push
movsl
fsubrs
clc
mov
sub
fs
fs
fsub
mov
mov
mov
lods
and
push
mov
inc
cmpsl
lcall
mov
jnp
pop
jno
xlat
xlat
faddp
ret
ret
xor
loop
mov
aas
pop
dec
dec
pop
or
ja
leave
fstpt
xchg
push
xchg
mov
add
sbb
inc
mov
rcrl
mov
aad
lahf
jp
cltd
inc
cmpsl
mov
andb
add
push
shlb
pushf
test
inc
cmp
cmp
push
ret
sahf
sahf
xchg
sbb
js
xchg
xor
test
xor
hlt
das
pusha
enter
bsr
adc
cmc
jmp
cmpsl
ds
int
incb
mov
addr16
imul
xlat
xor
imulb
mov
sub
adc
sbb
sbb
cwtl
cs
mov
jecxz
test
je
test
cmpb
pop
mov
mov
jns
sub
inc
pop
inc
mov
mov
pop
mov
test
add
in
mov
dec
cli
mov
cltd
jo
lock
jge
cmc
cld
or
lret
fcompl
rep
xchg
imul
aad
or
stos
popf
pop
dec
or
out
sub
mov
sub
in
inc
aas
adc
pop
daa
sub
out
dec
and
ret
mov
inc
push
insl
imul
push
mov
pop
outsl
sub
test
jecxz
xchg
push
shrl
fstpt
loopne
adc
dec
mov
lds
adc
pop
dec
decb
std
mov
mov
jnp
inc
push
mov
or
in
jg
fsubs
and
pop
jae
lcall
std
cwtl
shlb
sbb
add
jmp
lret
push
sub
or
inc
pop
cmp
shll
fmuls
fstps
adc
sbb
mov
adc
inc
ret
sbb
xor
and
punpckhdq
leave
jb
cld
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
xchg
mov
mov
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
outsb
fwait
es
test
mov
push
or
push
pop
xor
je
add
pop
sub
ret
mov
dec
repz
ljmp
push
mov
cmc
fdivrs
push
test
fidivl
addr16
inc
fisttpl
jo
gs
pop
cmp
mov
xor
dec
mov
sbb
arpl
shll
popf
loopne
inc
xor
movsl
mov
cmp
pop
ds
hlt
xchg
repz
jne
les
cmpl
sbb
imul
ret
adc
mov
jg
aad
pushf
ret
pop
mov
mov
sbb
xlat
nop
push
lcall
scas
cmp
inc
cmpl
in
ds
imul
rorb
enter
sub
pusha
mov
push
mov
jns
jne
xor
imul
fsub
inc
and
inc
cld
ja
adc
fadd
push
bound
mov
xor
sbb
or
push
lock
cmp
orb
xchg
mov
adc
cmpsb
sub
lret
lret
rcrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
sahf
testl
adc
mov
xchg
cmp
or
aas
out
lods
imull
aaa
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
pop
inc
roll
pop
test
push
stos
lea
push
mov
mov
cmp
sub
push
fwait
mov
rclb
inc
jno
inc
in
jg,pn
shl
mov
cmpsb
dec
fsubrl
mov
adc
pop
mov
xchg
mov
cmp
ss
arpl
sbb
jge
addr16
rol
sub
push
cmp
mov
in
aaa
sbb
mov
pop
xchg
lahf
pop
cmpsb
sub
and
inc
pop
clc
jecxz
mov
jmp
std
mov
sti
and
test
pop
std
ja
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rcr
push
cmp
or
outsb
push
fs
dec
mov
mov
sbb
popa
mov
xchg
and
shrb
mov
mov
and
adc
cmp
xor
dec
inc
sub
mov
dec
push
mov
or
xchg
addb
mov
fsubrl
rorl
test
xchg
push
pop
push
push
fdivrs
decl
lret
lock
ret
jge
or
ret
adc
sbb
rolb
inc
clc
or
fwait
push
dec
mov
and
adc
mov
and
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
push
pop
pop
xor
pop
sbb
xchg
inc
push
fwait
jp
mov
or
repnz
add
addb
je
sti
jae
fildll
jmp
decb
aad
push
pop
push
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
xor
leave
jecxz
arpl
aaa
jl
dec
mov
mov
loopne
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
add
adc
testb
mov
pop
repnz
dec
cwtl
dec
and
adc
test
sbb
mov
xlat
jbe
iret
sti
enter
mov
jae
jo
incb
jl
outsb
xorl
push
cmpsl
test
push
xchg
insl
cmp
in
into
cld
pop
mov
push
fidivrs
imul
xor
mov
inc
in
lods
es
sub
sbb
test
lcall
inc
mov
lret
jno
and
mov
test
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
add
adcl
out
fnstenv
sub
rcll
test
mov
cmc
push
leave
mov
inc
pop
leave
push
dec
add
sbb
or
std
shl
mov
data16
imul
xchg
incl
clc
hlt
lcall
or
or
push
test
in
xchg
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
ds
xor
cmpb
je
test
push
or
int
imul
jmp
mov
daa
push
imul
inc
mov
das
mov
jo
push
jl
std
roll
ret
imul
sub
xchg
dec
xchg
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
fwait
pushl
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
adc
test
movsb
aaa
xchg
popa
cmp
xlat
lahf
data16
push
jl
inc
dec
imul
pop
out
fdivr
push
gs
fadds
mov
fs
jge
xchg
or
test
mov
adc
enter
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
mov
push
shlb
mov
lods
insl
lret
mov
mov
ret
push
jmp
iret
lahf
jmp
mov
fwait
jl
jo
jecxz
adc
sbb
outsl
aam
sub
mov
mov
cltd
mov
insl
aad
popa
ficomps
sbb
pop
or
in
inc
push
mov
jle
jmp
movb
mov
pop
cmpsl
fxch
push
lret
pop
cmpsl
cltd
adc
or
and
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
dec
xchg
testb
mov
pop
repnz
inc
fmuls
sti
adc
test
pop
xchg
mov
jbe
iret
sti
enter
mov
jae
jo
incb
jl
outsb
xorl
int
imul
mov
ret
popf
addr16
rcll
mov
movsl
test
movl
int3
call
popa
pushf
rcrl
sub
addl
push
adc
mov
sbb
pop
xchg
sbb
cmp
sbb
cltd
lret
lcall
sbb
std
fistpll
xchg
mov
mov
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
lods
sub
mov
aas
test
sub
cmpxchg
out
jno
sub
cld
mov
scas
pxor
cld
repz
lcall
loopne
dec
iret
ror
inc
scas
fsubl
adc
scas
loope
stc
lods
push
jae
add
fisttpll
iret
jae
mov
push
xchg
hlt
and
andl
jp
mov
int
shlb
mov
fwait
jge
lret
arpl
pop
ja
dec
daa
jp
or
xor
or
insl
sbb
xchg
mov
hlt
std
std
inc
dec
lds
jecxz
mov
cli
add
mov
xchg
inc
cltd
or
xchg
shll
mov
dec
fwait
clc
pop
cmpsl
test
cwtl
xor
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
cmp
jbe
outsb
cmpsb
sub
mov
adc
mov
leave
ljmp
jae
in
mov
scas
shrb
mov
mov
test
mov
pop
xchg
mulb
fldcw
push
fisubrl
xchg
and
ror
ret
adc
pop
call
sbb
lock
call
lods
cmp
or
and
mov
pop
rcr
aaa
adc
sbb
test
cmpl
icebp
imul
pop
add
mov
dec
pop
ret
fs
fwait
aaa
ja
xchg
jbe
mov
ret
call
sti
arpl
adc
out
in
jecxz
icebp
out
mov
aaa
pop
dec
inc
ret
pop
ficomps
adc
and
push
push
adc
mov
xchg
mov
stos
fwait
push
into
push
daa
jae
xchg
jmp
pop
rorb
enter
test
mov
faddl
mov
vfrczss
adc
pop
add
push
and
xchg
fdivl
adcb
lahf
orl
mov
dec
sarb
rorb
cmpsl
or
repnz
in
inc
add
stos
mov
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
cmp
jns
mov
and
sub
popf
out
mov
push
shlb
mov
lods
sub
ret
ret
sahf
imul
test
aas
jl
xor
fwait
mov
pushf
ja
push
dec
inc
and
add
sbb
loop
mov
dec
movsb
mov
cmp
dec
xor
lods
pop
movsb
hlt
xor
adc
ret
sub
jae
pop
imul
inc
inc
loop
pop
clc
cmpb
cmpsb
mov
sbb
push
mov
sti
jg
mov
jmp
mov
cmp
add
pop
test
mov
xor
cmc
xor
sahf
or
and
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
popa
inc
mov
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
aam
pop
adc
lods
leave
push
adc
test
pop
pop
xchg
mov
mov
jmp
dec
and
shlb
fsts
inc
pop
jb
mulb
ficoml
imul
xchg
shlb
mov
xchg
mov
in
bound
test
fwait
pushl
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
dec
movsb
lea
aaa
xchg
mov
mov
fsubrs
lahf
callw
cmp
das
push
roll
scas
inc
or
adc
jne
jge
inc
iret
shl
ja
std
outsl
addr16
call
xchg
sbb
pop
jg
stos
mov
jbe
mov
mov
cltd
enter
repz
enter
dec
mov
xchg
cmp
cli
dec
int3
xor
fs
sbb
xor
je
jo
xorl
lds
fldt
iret
ret
adc
or
push
dec
push
push
std
lahf
cs
test
data16
call
xor
subl
int3
repnz
stos
scas
arpl
xchg
pop
cmp
jge
shlb
aam
adc
jmp
pop
rorb
enter
test
mov
faddl
mov
vfrczss
adc
pop
add
push
and
xchg
cmp
ficoms
add
add
pop
push
mov
stos
and
jns
clc
pop
sub
dec
stc
arpl
dec
test
add
or
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
adc
mov
fcmovu
sti
sti
and
test
pop
std
ja
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
and
mov
jo
xor
mov
inc
mov
and
insb
jne
inc
xor
cmp
je
imul
call
sub
imull
jge
sbb
movsb
xchg
dec
lret
arpl
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
mov
stos
or
push
cli
cmp
stos
xor
xor
mov
mov
fidivrl
push
jo
mov
pop
jb
add
mov
out
push
out
popa
add
fisttpl
mov
shrl
fadd
adc
ret
adc
and
jg
lret
pop
jae
lods
fidivrs
jae
pushf
sbb
and
sbb
inc
or
jle
scas
or
and
xchg
addr16
imul
imul
loopne
int3
inc
pop
insb
adc
add
iret
ret
xlat
or
cmp
scas
mov
jl
xor
inc
daa
jne
xchg
test
enter
xor
or
push
xorl
fnstcw
hlt
xchg
push
das
jno
xchg
add
sub
jne
fs
arpl
add
jae
sub
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
push
ja
nop
test
add
cmp
lds
fidivrl
pusha
jle
das
pop
icebp
or
cmp
andl
mov
push
test
pop
jle
inc
sbb
pop
shrb
or
idivb
pushf
ljmp
out
jno
sbb
scas
lahf
push
int
xchg
mov
xor
inc
pop
outsb
stos
insb
icebp
in
jns
popf
outsl
inc
into
add
les
outsb
add
jnp
sbb
inc
mov
les
andl
mov
inc
push
pop
push
test
sbb
xchg
xchg
xor
negl
xor
daa
and
aam
sub
dec
sub
je
in
lock
popf
inc
std
dec
adc
xor
test
jnp
and
out
lods
jmp
into
and
movb
cmpsl
je
or
or
or
cmp
adc
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
inc
jb
jp
cmpsb
gs
pop
cld
lock
jle
pop
xchg
adc
mov
loop
mov
fidivs
ja
pop
arpl
xchg
movsb
mov
outsl
jae
cmp
jecxz
mov
jge
outsl
pop
or
cltd
lret
imul
inc
inc
mov
fwait
mov
loop
cmc
mov
lea
mov
xor
and
arpl
out
les
cmp
mov
popf
cmp
xor
leave
add
mov
or
mov
mov
xor
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
push
jne
movsb
pop
repnz
cmpsl
sub
sub
pop
mov
cs
stos
dec
repnz
mov
sub
and
inc
pop
mov
shlb
dec
arpl
or
pop
mov
xchg
cld
sbb
cmp
add
mov
hlt
inc
fidivrs
inc
mov
addr16
rcll
test
xor
cmp
jne
mov
mov
or
lahf
cltd
pop
adc
ds
xor
cmpb
je
test
push
movsb
mov
aad
push
inc
inc
or
ss
inc
dec
sahf
and
sub
test
arpl
sbb
mov
and
jo
and
rclb
pop
inc
shrl
fs
mov
data16
test
pop
test
mov
lods
xor
pop
cmp
mov
call
imul
fsub
jbe
in
mov
in
push
addl
or
push
sbb
lcall
mov
movsl
add
clc
aam
mov
inc
lahf
scas
cmc
int
push
iret
cmp
bnd
inc
cwtl
inc
and
push
out
mov
sbb
je
jge
cli
out
push
sbb
outsl
addr16
call
xchg
sahf
fisttpll
hlt
mov
jbe
mov
lock
dec
inc
pop
shrl
xchg
test
loope
and
arpl
cmp
stos
mov
mov
add
jo
ljmp
cld
xchg
adc
xor
bswap
xor
jmp
enter
adc
sbb
outsb
mov
xor
ret
cltd
jmp
loop
fsubrl
push
dec
dec
pop
dec
push
fcompl
push
cmp
fwait
inc
cs
mov
mov
and
cmp
imul
in
xor
test
mov
cmp
add
cmc
adc
jp
sbb
xchg
adc
mov
rcll
loope
lret
clc
aaa
jge
push
dec
mov
and
adc
adc
and
insl
out
sbb
mov
out
inc
test
jns
outsb
negl
cmp
and
into
adc
movsb
ret
or
ret
add
stos
dec
pop
sub
add
adc
and
mov
mov
test
xchg
int
fildll
cwtl
cmp
or
add
lock
add
mov
cmc
sub
mov
cli
jp
adc
repnz
jns
lds
nop
lds
mov
mov
push
sahf
aaa
push
testl
shll
in
nop
or
mov
bound
inc
inc
shlb
cmp
pop
sub
outsb
add
dec
rolb
mov
outsl
xor
push
inc
dec
leave
les
sarl
push
push
data16
xchg
arpl
mov
rcll
inc
sbb
bound
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
jle
ja
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
insl
or
in
sub
mov
xchg
push
insl
aad
leave
mov
and
lods
fldt
xor
inc
mov
sub
mov
fisttps
in
mov
mov
adc
pop
cmpsl
lret
dec
movsl
push
leave
or
daa
inc
pop
xor
mov
mov
enter
jp
sbb
jnp
mov
mov
ficoms
in
loope
xchg
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
adc
and
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
push
add
push
aad
or
and
lock
jbe,pt
fs
sub
xlat
jmp
call
pop
addb
fcomps
das
fildl
jl
mov
add
dec
lds
push
cmpb
xor
das
orb
push
aad
les
lcall
sbb
std
fistpll
xchg
mov
mov
test
jp
jge
scas
xchg
iret
jmp
aam
jne
insl
jbe
lahf
mull
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
cmp
insb
aas
xchg
and
mov
fsubrs
data16
xor
jne
xchg
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
sarl
shl
xor
xchg
sub
popf
out
mov
push
shlb
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
imul
in
insl
ficomps
adc
and
lods
fldt
sahf
xchg
mov
mov
inc
cmpb
mov
sahf
jns
jecxz
sub
add
rol
mov
dec
lret
push
xor
outsb
movsl
cmpl
sbb
add
sti
mov
ss
push
out
adc
or
cmp
mov
add
jmp
jl
mov
les
stos
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
pop
mov
gs
sbb
mov
xchg
int3
push
sub
cmp
pop
push
lds
imul
mov
add
and
pop
push
adc
inc
dec
daa
jp
or
xor
or
in
test
icebp
scas
xor
sbb
rolb
out
inc
mov
and
div
push
add
pop
icebp
cmpsl
dec
inc
orb
and
dec
movl
dec
mov
dec
push
dec
inc
add
pop
mov
in
popf
lea
adc
sub
les
jl
or
add
pop
xchg
cwtl
loopne
or
fildl
aad
cmp
stos
xor
xor
mov
mov
lcall
pop
jb
add
mov
out
push
scas
sar
xor
jbe
mov
pusha
or
dec
aaa
xor
lods
inc
mov
lret
xchg
jae
sbb
aam
and
push
lds
dec
test
outsl
mov
rcr
push
rcl
hlt
cmp
or
lret
rcll
sub
or
dec
adc
lds
pop
mov
mov
pushf
sti
add
sbb
aas
mov
je
and
iret
rorl
in
movsl
cmp
rcrb
adc
test
push
sti
push
push
inc
clc
arpl
mov
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
test
sbb
jbe
outsb
cmpsb
sub
mov
mov
dec
loopne
subl
mov
adc
cltd
dec
bound
sub
outsl
jno
sbb
sbb
ret
xchg
jg
sbb
cmpb
cs
mov
mov
mov
pop
xor
lret
push
into
ds
pop
iret
rorl
jnp
sub
fwait
inc
pop
add
and
pop
rcll
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
cltd
sub
aam
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
pop
lock
xchg
xor
leave
add
mov
or
mov
pushf
xchg
lods
data16
dec
cmpsb
loop
mov
and
push
fstpt
adc
lret
lds
imull
sahf
jnp
popa
jbe
lods
push
xchg
mov
sub
and
clc
mov
movsl
sarl
and
add
sti
mov
ss
push
out
adc
or
cmp
mov
add
jmp
jl
mov
lret
or
lahf
xor
aam
mov
jnp
inc
push
mov
or
in
jg
fsubs
lret
sbb
syscall
cmp
lea
into
add
or
push
or
or
subb
imul
stos
xchg
mov
add
sub
mov
call
xlat
mov
or
xchg
std
lds
dec
adc
mov
inc
push
inc
pop
sti
add
gs
rcl
sub
jl
repnz
and
inc
and
movsl
ret
aaa
lahf
lret
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
xchg
mov
mov
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
sahf
pop
and
jle
test
cld
mov
pop
xor
addr16
dec
push
cmp
leave
lock
jl
das
dec
iret
shl
divl
adc
stc
jp
scas
scas
loope
sti
jnp
out
scas
mov
dec
scas
insb
lock
mov
mov
mov
xchg
adc
lret
or
and
nop
cs
bound
xchg
inc
cmpsb
jg
stos
les
fbstp
dec
daa
jp
or
xor
or
cmp
jns
fistpll
testl
cld
or
add
orb
sub
loop
imul
inc
daa
leave
sbb
inc
pop
mov
pop
cli
test
mov
negl
roll
fwait
and
popf
ljmp
sbb
test
mov
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
lods
xchg
pop
test
lret
cmp
clc
add
rorl
scas
jbe
cltd
imul
test
scas
testb
call
aas
xor
push
jae
fidivrs
sahf
sub
adc
jnp
lahf
lods
xlat
xor
into
add
and
lock
xchg
mov
or
andb
sub
xchg
stos
roll
mov
push
add
push
inc
sub
pop
push
test
or
fucomip
repz
xor
or
inc
xchg
mov
jbe
sub
pop
inc
xchg
mov
adc
shr
xchg
sub
xor
leave
push
adc
sub
scas
push
cmc
mov
mov
mov
lret
xor
mov
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
int3
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
push
lds
xchg
dec
enter
ss
repnz
pop
shrl
loop
je
test
sbb
and
adc
aad
add
sahf
pop
fcom
test
shll
out
and
pop
jae
jns
sub
pop
test
push
pop
add
rcr
xor
mov
cmp
jp
add
add
mov
sbb
cld
testl
mov
lds
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
lods
push
outsl
sbb
dec
pushf
mov
jecxz
imul
mov
scas
push
mov
das
mov
push
xchg
and
in
jo
sub
repz
aad
jecxz
xchg
xor
xchg
xor
mull
mov
fxtract
cmc
out
les
out
dec
mov
insl
out
daa
movsb
sbbb
inc
into
pop
xor
scas
adc
sbb
jo
repnz
leave
jne
lret
jg
jg
pop
mov
sbb
sub
mov
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
movsl
add
cltd
sub
adc
jecxz
add
inc
mov
cmpsb
ljmp
ret
mov
in
imul
dec
and
mov
scas
das
cmpsb
in
enter
sub
sub
pop
mov
mov
je
mov
repz
xchg
aaa
jp
add
dec
and
adc
out
push
enter
jnp
xor
xor
repnz
jg
mov
mov
in
sbb
add
or
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
jle
and
daa
pop
repz
out
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
inc
ret
int
dec
adc
cld
mov
or
xchg
cmc
rcrl
adc
mov
sti
add
imul
sub
and
push
and
movsl
ret
daa
xor
jns
sub
cmp
sub
cmc
sbb
out
push
cld
mov
inc
xor
test
std
add
mov
lock
out
cltd
insl
jle
or
xor
es
sahf
pop
and
sub
mov
jecxz
test
jne
lahf
adc
arpl
subb
mov
mov
repnz
push
test
and
adc
lods
fidivl
imul
push
adc
inc
fwait
stc
mov
dec
fwait
mov
pop
add
push
pop
icebp
mov
dec
sbb
mov
lea
mov
cmp
and
mov
test
add
test
pop
lock
xchg
xor
leave
add
mov
or
mov
push
push
mov
mov
stos
mov
stos
test
fimull
aam
add
jbe
push
movsb
jmp
mov
push
mov
adc
insl
faddl
mov
testl
ret
mov
es
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
mov
int3
adcl
push
dec
mov
pushf
xchg
sub
pop
push
imul
xor
inc
and
aas
int
fs
mul
jle
dec
cltd
enter
mov
int3
es
movl
subb
or
cmp
inc
sub
mov
push
jae
and
test
rorl
push
scas
mov
movsb
in
xor
jb
call
test
dec
cmp
adc
lahf
inc
cld
leave
inc
pop
jp
mulb
ficoml
imul
xchg
shlb
mov
xchg
inc
in
in
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
mov
and
out
jno
insb
pop
mov
scas
pop
out
lds
and
jmp
xchg
fs
shl
aaa
jge
outsl
outsl
call
push
rcll
popf
pusha
pop
in
hlt
movsl
call
repz
data16
jecxz
fwait
jne
mov
or
sub
or
int
push
hlt
int
in
mov
add
test
bound
jns
ss
dec
pop
ret
cmp
in
push
dec
daa
cmp
jp
add
add
mov
sbb
testl
mov
lds
incl
or
push
sub
mov
push
ret
mov
mov
aam
insb
cltd
insl
addr16
inc
sub
sub
inc
dec
fsubs
pushf
mov
in
pop
fmulp
xchg
cmpsb
dec
sub
cltd
enter
lods
mov
mov
in
scas
ret
mov
into
cmpxchg
out
jno
insb
out
pop
mov
out
or
js
inc
int3
out
lsl
mov
fwait
jns
or
pop
int3
inc
outsb
test
push
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
es
mov
mov
add
xchg
and
mov
xchg
cmp
or
aas
test
fildl
dec
repnz
arpl
lds
push
sarl
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
outsl
cmc
insl
push
imul
push
fistl
xor
mov
jnp
loopne
fucomp
jae
mov
loopne
ss
mov
mov
orb
mov
cmpsb
int3
sub
in
mov
jae
data16
pop
test
mov
and
mov
push
test
jp
sahf
xchg
rorl
mov
sbb
je
jge
lds
out
push
les
stos
mov
adc
cmpsb
sub
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
mov
or
push
add
add
sbb
mov
mov
push
shlb
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
int3
mov
pushf
lock
mov
fcmovnb
inc
sahf
mov
adc
das
movsl
xor
lret
scas
addr16
imul
ljmp
adc
movsb
lret
xor
dec
ret
jno
mulb
push
ret
insb
mov
xor
xchg
dec
pushl
lds
sti
lret
xchg
xchg
nop
pop
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
sahf
dec
dec
aam
je
mov
adc
sbb
adc
mov
sub
ljmp
stc
icebp
cld
add
push
xchg
sub
dec
pop
mov
dec
cmpsl
mov
mov
sbb
pop
orl
movsb
popf
divb
les
jg
push
add
clc
and
je
jge
mov
sub
pushf
ret
pop
pushf
daa
popf
adc
fdiv
jbe
push
outsl
sub
cmp
jae
fcomps
adc
and
adc
inc
cmp
xor
dec
inc
sub
sub
or
je
sbb
mov
sub
hlt
mov
scas
push
and
sub
es
sahf
pop
and
iret
mov
sti
out
test
out
jl
jne
mov
jbe
dec
js
or
aad
adc
xchg
and
out
or
sub
xchg
and
cmp
sbb
adc
jmp
dec
gs
or
cmp
xchg
sub
popf
out
mov
push
shlb
mov
lods
insl
lret
inc
pop
mov
or
aas
iret
fucomip
test
add
jb
jae,pn
lock
sub
imul
mov
inc
dec
jo
iret
cmpsl
mov
adc
xchg
scas
mov
shll
dec
cli
lret
adc
out
test
mov
mov
pop
xchg
shll
cmp
xchg
mov
mov
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
fidivrl
pusha
jle
das
pop
icebp
or
cmp
and
inc
xchg
lods
mov
pop
sub
mov
andl
in
or
hlt
ss
pop
outsl
jae
fsubrp
cmp
and
dec
dec
outsb
test
lret
scas
in
aaa
call
push
push
dec
mov
rcrl
or
fs
sub
adc
test
fdivl
mov
ret
and
push
xchg
sub
pop
push
cmp
xor
ret
aad
shlb
add
mov
cmp
sbb
fs
inc
mov
test
repnz
cmc
sbb
std
fistpll
xchg
mov
mov
test
in
andb
cmpsb
cli
imul
rolb
jb
dec
ss
repz
inc
mov
iret
test
repz
cmp
push
sub
das
inc
out
adc
and
mov
and
add
mov
xlat
gs
out
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
cmpb
and
cmpb
xchg
sub
popf
out
mov
push
shlb
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
mov
push
dec
cmpsl
push
insb
xor
sub
dec
jns
mov
mov
add
scas
bound
mov
addr16
mov
pop
mov
mov
pop
insl
adcl
jecxz
fsubl
add
xor
and
mov
add
inc
pop
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
imul
adc
in
cmp
mov
and
adc
mov
and
insl
out
popf
mov
sbb
mov
mov
xor
into
test
and
outsb
push
dec
jb
xor
mov
int
sub
mov
daa
pop
in
bound
repz
ds
mov
cwtl
add
fwait
jo
push
mov
sub
ja
adc
jmp
add
sbb
mov
dec
les
sbb
les
pop
in
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
sarl
mov
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
sbb
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
stos
pushf
out
es
jae
pushf
lret
mov
dec
popa
scas
mov
pop
pop
adc
jg
sahf
subl
stc
cwtl
shll
or
add
movd
nop
lds
dec
dec
adc
dec
add
inc
shll
mov
sub
movsl
inc
mov
fldl
jmp
push
movsb
sbb
daa
sub
sahf
jbe
push
push
mov
fisubrl
dec
out
mov
mov
adc
push
imul
dec
and
cmp
dec
stc
dec
add
mov
lcall
lret
sbb
daa
sub
lcall
pop
mov
sub
stos
aad
xor
xor
mov
mov
jp
push
jo
mov
pop
jb
add
mov
out
push
out
xor
test
inc
mov
ror
jmp
jno
lds
jnp
out
cmpsl
mov
sub
ljmp
xchg
bound
out
data16
cltd
test
es
and
push
push
lret
popf
sti
add
stos
testl
ret
xchg
jnp
adc
jno
or
js
sbb
mov
dec
inc
cmp
roll
fcomps
je
cmp
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
sub
or
stos
fs
inc
fisubrl
xchg
xchg
movsl
xchg
jp
xchg
mov
inc
mov
aaa
popf
jo
stos
cmp
ljmp
inc
mov
dec
stc
arpl
or
shll
das
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
adc
mov
fcmovu
sti
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
out
test
push
push
xor
and
mov
jmp
aad
mov
or
cmp
rol
int
mov
xchg
rolb
inc
out
mov
pop
aas
jle
lahf
dec
and
push
in
shl
mov
or
fisubl
cmp
inc
push
ret
call
ds
movsb
mov
push
gs
arpl
aaa
jl
mov
or
xchg
adcb
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
cwtl
add
loope
sub
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fisttpll
icebp
cwtl
ret
leave
shlb
rclb
add
andb
xor
mov
jmp
jecxz
dec
ja
repz
in
inc
inc
xchg
and
ja
in
pushl
inc
inc
add
sub
fists
addb
rcrb
hlt
das
lock
mov
outsb
fsubl
push
fcompl
jne
jns
lds
nop
lds
mov
mov
push
sahf
aaa
push
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
sub
lods
dec
fisubrl
jo
fisttps
xchg
xchg
dec
xchg
stc
pop
mov
or
pop
pop
cmpsl
icebp
imul
cs
xchg
mov
fists
xor
sub
ja
popf
lods
push
push
loope
sti
jb
xor
or
shrb
sbbl
sub
dec
es
test
insl
inc
xor
bound
mov
subb
xor
dec
arpl
insl
mov
pusha
mov
add
loop
inc
sbb
daa
add
test
push
leave
cmpsl
inc
icebp
xchg
add
and
lds
lds
and
jb
mov
out
inc
test
std
pusha
and
fsubr
cmpsl
bound
sub
shrl
mov
push
out
insl
lret
inc
sub
xchg
call
rol
pop
adc
dec
rorb
fucom
inc
and
inc
clc
mov
cltd
call
fcoml
jg
test
jl
jge
mov
stos
rol
int
pop
and
cli
pop
test
mov
pop
mov
push
int3
xor
or
rcr
pop
fidivrs
jnp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
fwait
cwtl
hlt
int
js
subl
adc
js
test
or
aas
out
lods
imull
aaa
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
jecxz
sbb
sbb
ja
push
mov
adc
adc
lock
or
fisttps
mov
pop
repnz
mov
mov
inc
out
out
cmpl
fistl
test
add
or
lea
pop
lds
pop
jnp
pusha
jle
das
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
dec
dec
rcrb
test
add
data16
nop
lds
pop
pop
xor
sbb
cli
orb
pop
mov
sub
adc
pop
hlt
mov
sbb
mov
adc
cmpb
test
fcomp
xlat
ret
pop
cmp
les
pushf
dec
xor
stos
aas
loop
mov
jge
xor
adc
mov
adc
popf
ljmp
adc
pop
sti
out
mov
adc
es
shlb
jns
inc
dec
xchg
aam
mov
xorl
popa
mov
push
jnp
rep
ljmp
push
js
adc
mov
das
sbb
push
scas
pxor
cld
repz
or
insl
bswap
jg
cmpsb
push
sbb
jbe
mov
fs
lcall
mov
xlat
imull
rcrl
test
mov
fistps
les
loopne
hlt
jbe
movsb
mov
inc
xorb
cmpb
fwait
mov
in
and
xor
mov
push
push
pop
add
add
cltd
sub
adc
jecxz
add
inc
mov
jns
pop
lock
push
mov
call
imul
dec
and
outsb
and
bound
and
adc
ljmp
sbb
or
dec
std
jae
lds
adc
lcall
push
js
jbe
xor
fldl
faddl
cmp
std
cli
jnp
inc
mov
mov
jne
idiv
add
push
pop
push
pushf
jmp
jno
sbb
ss
les
mov
dec
cwtl
pop
dec
cltd
addr16
inc
push
movsl
int3
adc
adc
mov
insl
xchg
leave
push
sub
push
dec
mov
lcall
and
adc
push
orl
sti
dec
cmpsb
push
pop
add
add
add
mov
sbb
cld
testl
mov
push
mov
enter
lods
push
shrl
sub
mov
aad
ja
pop
imul
adc
mov
stc
add
aam
adc
aam
stc
insl
pop
fwait
enter
lods
xchg
mov
inc
mov
aaa
popf
jo
stos
cmp
ljmp
inc
mov
dec
stc
arpl
enter
xor
movsb
shll
das
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
adc
mov
fcmovu
sti
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsb
push
fs
dec
mov
mov
sbb
and
pop
push
fistl
addb
dec
ljmp
xlat
lods
adc
inc
aas
in
lret
popf
lret
sub
sub
add
xchg
xor
fcmove
adc
mov
pop
dec
mov
popa
pop
gs
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
mov
cmp
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
mov
out
inc
and
jg
cwtl
mov
mulb
adc
mov
add
cmp
decb
push
lods
call
in
push
xchg
nop
dec
cmp
mov
lcall
hlt
test
sbb
jecxz
sbb
add
je
pop
adc
stc
jecxz
add
std
mov
xchg
sub
adc
call
clc
mov
loop
imul
int3
stc
inc
push
cld
test
or
test
std
xor
or
adc
mov
imul
faddp
and
loope
test
pop
pop
cmc
test
shr
pop
fisttps
xchg
dec
addb
fcompl
unpckhps
mov
das
dec
sbb
push
pop
hlt
idivl
outsl
outsl
int
adc
loop
jae
mov
das
pop
and
clc
shlb
and
dec
cmpsl
dec
dec
test
inc
addr16
xor
seto
imull
fsubr
jbe
enter
aaa
cs
lods
jo
push
inc
push
push
push
lds
faddl
and
inc
les
inc
xchg
cmc
hlt
add
movsl
jg
addr16
into
and
rorl
imulb
lret
insl
lret
pop
xchg
outsb
xor
and
xor
add
xlat
and
call
repnz
popf
xchg
push
leave
inc
sub
dec
push
or
leave
rorb
nop
adc
fimull
out
rol
fwait
movsl
pop
jno
lds
jge
inc
cmpb
fsts
mov
dec
mov
sbbl
xchg
pop
adc
cli
testb
mov
xor
add
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
jle
and
daa
pop
repz
out
sarl
out
mov
andl
sub
push
inc
inc
loope
pop
pop
out
xchg
jnp
test
loopne
int3
inc
pop
insb
adc
add
iret
ret
xlat
or
cmp
mov
js
cmp
xor
ret
aad
shlb
add
mov
cmp
sbb
fs
inc
mov
test
repnz
cmc
sbb
mov
push
adc
jo
arpl
lds
sbb
inc
sbb
xchg
loopne
jne
pop
pop
aam
add
push
out
xchg
inc
push
fadds
in
mov
scas
shrb
sub
movzbl
loop
mov
mov
lea
ret
lret
or
arpl
rcll
push
cmc
gs
fwait
cmp
mov
aam
fdivrs
inc
out
fistpl
mov
sti
sti
and
sbb
lret
dec
sbb
loop
inc
lea
cmp
inc
fstpt
mov
inc
pop
sbb
xchg
pop
adc
out
xchg
fisttpl
int
pop
xchg
loop
mov
sar
fcoml
add
jmp
decb
xlat
ret
aad
xchg
mov
sub
mov
aaa
sub
shrl
pop
iret
mov
cmpl
dec
inc
add
cld
sub
cmc
sbb
pop
or
rclb
push
cld
imul
ficoml
outsl
shlb
cmp
cmpsl
pop
insb
jbe
pop
jp
mov
fisttps
mov
bound
jbe
loop
in
nop
xchg
lahf
push
cwtl
lock
aas
xchg
dec
in
rcl
cmpsl
mov
sbb
or
test
push
mov
out
loopne
inc
dec
rorl
dec
out
les
inc
dec
mov
rcrl
or
fs
sub
adc
pop
sbb
subb
mov
arpl
sbb
and
push
xchg
sub
inc
enter
sahf
rcrb
fs
pop
loop
jno
or
icebp
aaa
mov
sbb
jge
les
mov
dec
sub
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
mul
add
xchg
lcall
cmp
dec
in
mov
sahf
mull
push
sub
and
scas
es
fwait
jmp
repz
bnd
in
pop
addl
idivb
in
sbb
std
cmp
jl
das
inc
iret
shl
aaa
jge
pushf
jecxz
nop
loop
jp
scas
mov
jp
scas
fcomi
xlat
repz
mov
mov
xchg
aam
cltd
add
dec
cs
or
out
es
mov
push
loop
xchg
ds
push
dec
mov
stos
negl
mov
cmp
sub
mov
iret
add
test
pop
lock
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
inc
push
addb
adc
dec
xor
movsb
shll
lock
jbe
lods
push
outsl
orl
out
fldcw
out
mov
enter
lods
mov
test
push
sbb
mov
xchg
xchg
test
xor
addr16
mov
imul
out
ud0
lock
cmp
mov
shrb
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
stc
ja
xchg
js
cld
or
lea
cmp
aas
out
lods
imull
aaa
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
or
cmp
or
mov
into
push
fcmovu
test
xor
and
test
push
stos
leave
pop
imul
adc
mov
lods
push
outsl
sbb
scas
movsb
mov
xchg
xchg
and
pop
adc
pop
cltd
enter
lods
mov
pop
arpl
out
in
jae
inc
stos
int
and
push
stc
and
data16
sbb
ss
or
stc
xor
or
cmp
jmp
jmp
add
testb
fucomi
hlt
std
mov
sti
and
test
jg
ja
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsl
aam
dec
sbb
sub
push
mov
insl
aad
mov
outsb
xor
scas
popa
xchg
rcl
movsl
push
test
push
sub
jb
fcoml
movsb
rcrl
mov
xchg
mov
mov
cs
cmp
mov
sub
in
pop
dec
adc
popf
jnp
popl
mov
pusha
fldt
ficoms
inc
ds
push
sub
pop
std
arpl
lcall
stc
js
xchg
jns
fimull
push
mov
or
xchg
and
popa
inc
mov
push
xabort
xor
scas
inc
cltd
enter
mov
mov
pop
add
or
nop
pop
popf
pop
jnp
sbb
xchg
mov
xchg
pop
xchg
outsb
and
pop
add
and
adc
inc
lahf
adc
in
push
cmp
int
fisttpl
mov
mov
cwtl
fadds
push
in
lock
jno
cltd
and
push
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
xor
cli
into
xchg
stc
cli
in
test
or
test
jnp
jbe
outsb
cmpsb
sub
mov
mov
dec
loopne
subl
push
sahf
pop
jg
sub
repz
mov
shll
xor
sub
pop
sub
out
jns,pt
outsl
adc
out
adc
add
rorb
stc
lock
enter
stc
arpl
or
and
out
cmp
cmp
mov
ret
test
imul
int3
dec
push
add
add
sbb
mov
mov
push
shlb
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
je
sbbl
inc
icebp
xchg
jle
inc
scas
leave
sub
push
mov
insl
cmc
imul
notl
and
jle
sbb
inc
mov
rcrl
fsubs
lahf
jp
cltd
inc
cmpsl
mov
andb
add
push
shlb
push
or
pushf
test
inc
cmp
cmp
jle
jbe
lods
inc
in
mov
mov
iret
js
jle
mov
inc
lret
loop
xchg
jnp
sub
or
mov
repz
push
shrl
jo
inc
int
pop
and
imulb
movsl
into
imul
int3
cmpsb
add
iret
daa
adc
imul
xchg
sub
or
inc
es
jns
inc
and
stc
les
fwait
dec
sub
enter
das
lea
mov
and
cmp
adc
cmp
lea
jg
or
and
jl
pop
adc
cmp
pop
lods
inc
fs
push
cmp
sub
cmc
sbb
std
fistpll
xchg
mov
mov
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
dec
sub
cmc
inc
dec
push
cmpl
pop
sub
pop
test
jecxz
pop
mov
push
roll
fcompl
sahf
xchg
mov
inc
outsl
outsl
call
push
rcl
shlb
xor
iret
jae
mov
push
xchg
inc
cwtl
or
dec
push
or
and
sti
mov
cmpsb
mov
adc
and
push
dec
push
adc
inc
sbb
stos
ret
loopne
int
aas
xchg
arpl
mov
ret
pop
push
push
outsb
je
add
mov
push
dec
xchg
jg
inc
push
mov
cld
and
adc
inc
xlat
test
push
jp
dec
mov
mov
pop
sub
mov
fildll
mov
or
out
test
dec
fsubl
mov
pop
rol
fdivrl
mov
push
out
cmpsl
fistpll
pushf
lds
rcr
xchg
pop
pop
into
jecxz
lahf
cmpsl
jns
out
js
int3
xor
repz
or
rcll
jae
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
ds
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
or
cmpl
or
push
sub
push
xor
std
cmp
out
inc
mov
sub
insb
push
pop
xchg
mov
push
xchg
rcl
and
lods
fldt
ljmp
cltd
fldl2e
jae
fwait
xlat
push
movsb
shll
loopne
inc
sub
sub
inc
insb
xchg
mov
push
je
lret
outsb
movsl
cwtl
pop
push
adc
jae
xor
pop
cmc
adc
pusha
ret
std
push
or
sbb
js
adc
jno
js,pt
out
push
mov
gs
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
jle
and
daa
pop
repz
out
icebp
mov
xchg
or
rolb
push
push
shll
dec
stos
icebp
and
sbb
cmpsb
ja
test
shlb
inc
lods
jb
mov
dec
mov
cmp
and
mov
leave
jo
mov
add
mov
outsl
movsb
jmp
inc
bound
add
jg
fmull
xchg
xchg
ret
push
int3
inc
push
fwait
xchg
inc
test
cmp
inc
xchg
pop
mov
mov
jne
jmp
enter
cmc
movsl
testb
in
aam
pop
or
add
adc
xchg
jnp
push
or
push
mov
fbld
out
adc
adc
mov
imul
loope
lds
mov
ss
mov
xorl
mov
fwait
push
dec
mov
and
adc
adc
and
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
lds
fs
out
pop
sbb
push
inc
push
pop
cltd
test
or
push
sub
push
xor
iret
push
cmp
or
outsl
aam
sub
dec
aam
dec
into
pop
mov
repnz
pop
repz
jecxz
or
adc
stos
adc
inc
mov
xor
xchg
outsb
mov
pop
sub
testl
test
bound
stos
jbe
sti
test
mov
xchg
pop
xor
adc
inc
fdivrl
jecxz
fistps
test
and
repz
lret
pop
xchg
in
cmp
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
stos
ret
sub
jb
mov
aam
and
scas
xchg
sub
dec
fmuls
xor
jbe
std
cmpl
pop
sahf
imul
ljmp
inc
mov
jbe
mov
xor
leave
ss
mov
and
inc
mov
inc
adc
inc
xorl
dec
add
pushf
or
lds
push
cld
sub
mov
mov
adc
mov
mov
rorl
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
inc
cli
and
out
jno
insb
out
pop
mov
leave
inc
out
cld
jb
mov
lock
aas
rclb
jge
pushf
mull
out
jo
pop
push
cmpl
jp
mov
sti
fucomip
andl
jo
push
test
pop
mov
push
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
stc
pop
daa
call
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
jg
mov
imul
push
adc
mov
pop
push
mov
shrl
fistpll
shrl
dec
sub
sub
xlat
in
out
ss
outsl
dec
dec
push
test
es
rcrb
out
mov
popf
enter
mov
out
sbb
mov
lret
or
stc
xor
or
cmp
jmp
jmp
add
testb
fucomi
hlt
std
mov
sti
and
test
jle
ja
xchg
push
hlt
mov
popa
dec
mov
or
mov
arpl
std
add
mov
push
xor
push
shll
xchg
sbb
mov
cmp
insb
push
fsubrs
data16
sbb
xchg
xchg
shll
popa
lods
fldt
ljmp
push
sub
pushf
imul
jno
loope
fmuls
adc
ret
push
leave
ret
sbb
imul
scas
aam
je
insl
push
pop
xchg
shlb
je
insl
jb
sahf
fsubl
jbe
lods
adc
fsubs
ja
lods
xor
loopne
stc
mov
inc
mov
jae
in
jo
cwtl
ret
jg
ja
jecxz
sti
or
test
and
xchg
imul
push
lret
lret
sub
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
cli
jl
mov
cmp
inc
and
xor
les
sbb
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
fmull
cwtl
dec
xlat
mov
and
enter
scas
arpl
mov
jne
adc
inc
ds
lret
mov
ret
or
and
mov
ret
cmp
add
xor
mov
xchg
int3
xchg
aas
pop
push
push
pop
jecxz
adc
mov
lds
xchg
or
inc
fdivs
mov
push
rcrb
in
cmp
mov
mov
shlb
xchg
cmc
mov
cmp
movsb
ret
xor
cmpsl
mov
jae
mov
dec
bound
jecxz
fcoms
mov
nop
fcoms
add
invd
xor
push
sbb
pop
adc
push
push
push
adc
out
push
ret
mov
inc
mov
imul
les
rol
pop
xor
sbb
cmc
in
pushf
cmp
sub
outsl
pop
cltd
and
movsb
fisubrl
mov
movl
bound
data16
sub
mov
push
push
inc
addl
mov
mov
test
jb
das
pushf
mov
repz
cmp
pop
gs
add
jae
jle
scas
pxor
and
mov
sub
mov
scas
pop
push
mov
dec
xlat
add
rcll
xor
sub
adc
ds
std
js
mov
pushl
xor
push
test
mov
or
dec
pop
or
push
out
pop
adc
lea
ss
xor
mov
iret
push
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
push
repnz
ret
test
pop
pop
push
fcompl
jne
jns
lds
nop
lds
push
push
or
arpl
mov
stc
inc
repnz
inc
ljmp
sub
dec
mov
sub
mov
imul
rol
fs
xchg
repz
dec
popf
aas
stos
shrb
clc
into
bound
insb
ret
xchg
xor
out
jnp
andl
inc
testb
les
dec
cmp
adc
or
cmp
mov
ret
mov
fcmovu
sti
sti
and
test
jg
ja
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
mov
out
inc
mov
and
mov
dec
dec
xchg
jle
add
mov
dec
lods
jg
leave
gs
aaa
imul
ret
stos
out
mov
push
imul
in
movsb
mov
bound
push
xchg
xchg
mov
repnz
mov
push
jns
dec
int3
std
push
cmp
icebp
jnp
movl
xchg
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
ds
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
mov
cs
add
and
push
inc
push
adc
inc
mov
sbb
cmpsb
and
add
push
mov
mov
push
aam
ss
mov
cmpl
mov
insl
cmc
imul
test
movsl
je
push
les
push
int
inc
mov
and
lahf
jp
add
repnz
inc
jno
jno
dec
movsb
mov
jecxz
xor
xchg
dec
xchg
jae
lds
pop
lret
xchg
xchg
nop
pop
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
and
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
lods
xchg
popf
sub
xchg
inc
gs
imul
push
inc
push
xorl
inc
mov
mov
repnz
in
mov
in
mov
imul
jle
sbb
mov
sbb
loop
and
lahf
xchg
rorb
sahf
mov
ja
lds
negl
addr16
dec
imul
sar
sbb
insl
cwtl
and
adc
or
mov
pusha
mov
fcom
ss
mov
gs
iret
test
btr
or
or
jns
dec
sti
mov
scas
inc
or
adc
jge
inc
das
inc
jbe
test
inc
cwtl
mov
nop
loopne
jp
pop
adc
pop
out
cmp
mov
inc
jl
xchg
add
fadd
pop
loop
fcomip
ss
add
lods
xchg
mov
stos
pop
or
les
rcrb
int
pop
add
imul
aam
mov
imul
test
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
cli
cwtl
cwtl
or
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
xchg
mov
mov
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
hlt
and
outsl
ljmp
cmp
enter
mov
inc
scas
outsb
or
mov
imul
dec
add
and
adc
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
sarb
and
cmpb
xchg
sub
rol
dec
sbb
xchg
mov
pop
adc
adc
mov
jle
pop
inc
jl
and
mov
lret
repz
pusha
test
fimull
inc
sub
icebp
xchg
add
ror
stos
sbb
mov
mov
test
lds
inc
in
mov
pop
pop
sub
sbb
and
or
nop
rorl
fsts
std
dec
jge
fnstcw
mov
mov
jp
add
cmp
lds
cli
jg
pusha
jle
das
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
mull
lods
mov
fs
lcall
movsb
xchg
jbe
pop
jns
push
sub
dec
xlat
popa
stos
mov
xchg
sbb
test
addr16
fdivp
es
push
lock
rcll
addl
lret
mov
pushf
fwait
inc
ja
pop
iret
mov
cmp
sub
test
cmc
xor
movsb
sbb
pop
add
mov
and
std
imul
xor
mov
cmp
jp
add
add
mov
sbb
cld
testl
mov
in
arpl
mov
jg
lret
push
repz
cmp
inc
xchg
pop
mov
mov
jne
call
mov
shlb
or
adc
aad
push
mov
mov
mov
aam
out
cmp
mov
into
or
das
mov
dec
jb
sahf
fisubl
mul
int
inc
xlat
pop
mov
xlat
fmull
sti
add
or
cs
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
imul
xchg
imul
jle
ds
jmp
std
mov
sti
and
test
aas
std
ja
xchg
push
hlt
mov
fimuls
imul
in
int
or
xchg
pop
adc
out
xchg
fcmovnbe
out
jno
pop
in
xchg
fistl
sbb
lock
push
out
dec
mov
or
repnz
dec
cmpb
lret
movsl
shl
xchg
and
outsl
jno
dec
sub
inc
lahf
mov
add
lret
frstor
jmp
xchg
enter
loopne
sbb
lcall
ds
movsl
ja
mov
cmpsb
dec
mov
and
int3
scas
dec
pop
lods
mov
mov
push
jb
loopne
pushf
jo
sub
cmpxchg
out
jno
insb
out
jecxz
mov
out
sar
jg
out
das
dec
lock
jl
addr16
sub
jo
inc
int
dec
and
xchg
add
xor
cltd
aad
xchg
cmpsb
enter
pop
cmp
call
inc
negb
in
lcall
cli
pusha
and
xchg
lds
and
or
ret
outsb
dec
adc
inc
adc
adc
lds
call
call
pop
jo
pusha
mov
and
jo
mov
popf
scas
xchg
cmp
rol
sub
mov
cltd
mov
fsts
inc
pop
add
mulb
ficoml
imul
xchg
shlb
mov
xchg
rcrl
shll
test
mov
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
test
pop
mov
mov
enter
in
xchg
incb
jmp
xchg
xchg
mov
scas
mov
out
dec
cld
lods
xlat
xchg
test
mov
mov
lds
jg
lahf
lods
xlat
lret
cwtl
shll
sub
mov
nop
lds
cmpsb
dec
pop
or
mov
pop
xor
xor
mov
popf
movsl
dec
sbb
jmp
popa
mov
cmp
rol
pop
add
rcrb
xlat
fs
orb
lds
xchg
movsl
aam
fadds
nop
aas
roll
shll
push
int
add
decl
orb
je
inc
fcomps
lds
sbb
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
dec
xchg
jno
insb
jecxz
test
enter
lds
scas
push
imul
cs
push
push
lock
or
call
psrld
ss
dec
pop
mov
js
cs
icebp
in
mov
sbb
mov
cwtl
shll
or
add
jle
adc
pop
inc
popa
sub
adc
and
in
inc
inc
xchg
adc
inc
mov
fstps
mov
lds
add
mov
adc
inc
ret
sbb
xor
stos
add
push
pop
leave
jae
pop
jbe
mov
add
out
in
xlat
mov
mov
push
sahf
aaa
push
testl
roll
arpl
jge
les
in
mov
push
addb
shll
or
jno
inc
test
pop
cmc
sub
mov
iret
dec
lret
je
rcrl
ret
or
js
jle
mov
jge
addr16
rcl
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
lods
stos
mov
mov
inc
int
jns
mov
mov
or
pop
fsubl
fidivl
sbb
es
imul
jg
clc
pop
push
aas
es
mov
lahf
aam
inc
pushf
pop
mov
call
fnsave
outsl
and
add
mov
and
daa
add
test
loopne
int
jmp
popf
pop
push
scas
arpl
jle
add
mov
dec
test
repz
clc
sub
jne
fs
arpl
add
jae
sub
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
add
sar
cmp
add
cmp
lds
jnp
ss
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
mov
jae
pushf
sub
call
lret
pop
jmp
fisttpll
jg
lahf
dec
xchg
clc
lahf
stc
cwtl
shll
or
add
push
rcll
mov
push
andl
inc
xchg
sbb
push
inc
mov
xchg
jns
lret
add
adc
ss
xchg
xor
push
push
ja
popa
stos
int
sub
mov
enter
mov
sbb
pop
mov
mov
jne
in
mov
lcall
add
rclb
sbb
leave
or
pop
push
outsb
shlb
leave
jns
or
push
clc
aam
pop
lods
jle
cltd
je
dec
enter
fisubrl
jnp
inc
mov
add
adc
testb
mov
pop
repnz
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
pushf
test
inc
addr16
inc
stos
jae
nop
and
push
jb
xor
ja
mov
dec
pop
inc
dec
movsb
les
pop
inc
cmpsl
lcall
mov
pop
or
jnp
pop
clc
lods
jbe
lret
inc
adc
lock
adc
inc
inc
sbb
gs
ret
sub
lea
pop
sub
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
xchg
mov
mov
test
in
andb
out
adc
xchg
stos
aam
and
xor
roll
lea
scas
scas
data16
ljmp
xchg
cs
int3
push
lret
and
inc
mov
fdivs
fistl
roll
mov
jge
xchg
sub
clc
aam
cmp
loope
pop
xchg
pop
sbb
test
fdiv
addl
and
sub
popf
out
mov
push
shlb
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
mov
subb
push
decb
push
insb
jne
jmp
lret
inc
ret
or
pop
test
push
stos
test
imul
movsl
mov
ja
cs
xor
div
pop
addr16
dec
push
sub
add
inc
ss
cld
or
mov
jno
mov
or
shl
sbb
cmp
mov
in
jnp
cli
jnp
inc
mov
add
adc
testb
mov
pop
repnz
dec
cwtl
dec
and
adc
test
sbb
mov
xlat
jbe
iret
test
jecxz
inc
cltd
enter
in
inc
inc
and
aas
ja
dec
push
push
push
imul
mov
sub
in
into
cld
pop
mov
push
fidivrs
imul
xor
mov
inc
in
lods
es
sub
sbb
test
lcall
inc
mov
mov
and
mov
test
cli
add
movsl
imul
lods
add
mov
lret
sbb
sbb
pop
subb
adc
mov
mov
or
cmp
jb
pop
add
call
in
cmpb
shrb
mov
in
jge
adc
push
inc
sub
aas
js
fnstenv
dec
test
add
jg
or
les
rcll
inc
mov
push
fidivrs
jp
pop
repnz
sbb
lret
and
testb
fucomi
hlt
std
mov
sti
and
test
cmp
ja
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
insl
or
in
sub
mov
xchg
push
insl
aad
push
fistl
addb
ljmp
and
adc
popf
fwait
lods
mov
cltd
insl
pop
dec
inc
sub
sub
xor
insb
xchg
mov
push
cmpb
testl
ret
mov
es
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
aas
or
push
rcrl
repnz
fwait
push
dec
mov
mov
lds
and
sahf
xchg
sarb
out
ret
xor
cmpsl
mov
jae
cwtl
rclb
jecxz
fcoms
outsb
or
cmpsl
inc
sysexit
xchg
call
jmp
jecxz
dec
ja
push
pop
jnp
rclb
test
xor
cmp
iret
fistl
push
pushf
add
jmp
imul
lcall
jnp
out
popl
jg
adc
shr
xchg
sub
xor
leave
push
adc
sub
scas
push
cmc
mov
mov
mov
lret
xor
mov
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
ret
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
xor
cmp
jle
mov
clc
mov
out
mov
ss
mov
lds
xchg
mov
pop
cmpb
pop
mov
mov
jns
sub
inc
pop
ret
mov
mov
inc
mov
test
add
inc
sbb
jb
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
jae
popf
pop
ljmp
xlat
mov
ffree
push
in
loopne
inc
mov
in
xchg
mov
sub
aam
or
dec
dec
into
mov
dec
ret
push
enter
mov
popf
mov
xchg
faddp
ss
push
out
adc
or
cmp
mov
add
jmp
jl
ds
or
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
xchg
and
popa
inc
mov
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
imul
push
push
push
push
adc
test
pop
sub
fucomip
repz
sahf
in
cmc
mov
push
rcrl
enter
sbb
loopne
mov
cmpsl
mov
data16
sbb
ljmp
jnp
stos
inc
js
gs
stc
or
xchg
adc
mov
cmc
mov
out
pop
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
mov
mov
cwtl
mov
dec
movsb
aad
xor
xor
mov
mov
jp
push
jo
mov
pop
jb
add
mov
out
push
out
xor
test
inc
mov
ror
jmp
jno
lds
jnp
lcall
loop
cmp
inc
outsb
out
fucomi
xchg
cld
pushf
rolb
add
mov
push
scas
or
and
or
call
xlat
test
add
je
js
shlb
mov
testl
rclb
out
mov
lea
mov
adc
mov
adc
inc
xorl
dec
mov
out
pushf
or
lds
push
cld
sub
mov
mov
adc
mov
mov
rorl
cmp
or
cmp
adc
mov
les
in
mov
pop
nop
jbe
mov
jbe
pusha
mov
pop
repz
cmp
pop
mov
ss
or
repnz
xchg
leave
add
mov
lcall
add
dec
loopne
iret
rclb
jp
scas
push
rcrl
shrl
js
cs
xchg
aas
movsl
dec
fistl
cmpsl
sbb
and
rolb
ss
xchg
test
push
subb
or
xchg
xchg
gs
mov
adc
mov
xchg
inc
pop
sbb
mov
out
iret
xchg
jp
call
mov
mov
pop
test
xor
ret
add
lcall
leave
xchg
xlat
stos
mov
xchg
cmpsl
loope
mov
int3
jmp
cmp
inc
push
stc
inc
repnz
popf
lret
push
or
dec
gs
jno
push
mov
xchg
sub
sub
jge
dec
pop
fwait
mull
into
add
bound
sbb
ret
sub
sub
adc
int3
pop
jno
mov
sub
int3
pop
dec
sarb
sbb
pushf
lcall
setp
jmp
cmc
fdivrs
xchg
imul
cli
or
adc
movsl
imul
jge
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
ret
mov
add
ret
cmp
and
mov
test
add
test
pop
lock
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
jmp
add
addr16
incb
pop
stc
push
mov
sbb
insb
scas
stc
ret
xchg
dec
in
jmp
std
mov
hlt
inc
jmp
out
xchg
mov
mov
mov
fucompp
xchg
outsl
or
std
dec
aam
cltd
fmull
cmp
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
mov
mov
fwait
inc
push
rol
xchg
mov
inc
pop
and
xchg
inc
fstpl
cmp
xchg
mov
test
inc
orl
mov
pop
pop
pushf
xchg
ss
sub
shll
popf
cmpb
dec
aam
js
xlat
add
push
jne
nop
dec
cmp
mov
lcall
hlt
test
sbb
jecxz
sbb
add
je
pop
adc
jecxz
add
std
mov
xchg
sub
adc
fldenv
lock
mov
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
push
nop
dec
and
pop
lret
test
lods
scas
das
test
add
sahf
pop
and
mov
lret
in
inc
lret
mov
push
add
les
mov
out
xchg
call
adc
add
stos
mov
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
cmp
je
pop
adc
test
sbb
mov
mov
push
shlb
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
icebp
nop
jle
sbb
outsb
and
cmpsb
shlb
push
pop
or
push
lea
push
lret
int
pop
sti
adc
xor
jbe
lods
push
fmuls
xchg
test
push
jne
mov
in
pop
gs
nop
push
loope
leave
pop
shll
xlat
int
sahf
pop
xchg
mov
lods
xor
fiaddl
scas
mov
pop
jno
insb
negb
mov
scas
aaa
out
iret
cld
jb
mov
lock
cmp
mov
loopne
testw
jno
jp
fmulp
xchg
mov
and
testb
test
and
andl
test
imul
push
mov
adc
and
and
je
rorb
lret
push
sbb
mov
push
imul
cmp
or
push
xchg
xchg
push
add
cld
pop
add
add
dec
icebp
aam
ja
xor
lret
pop
xor
dec
mov
sbb
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
mov
mov
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
mov
dec
iret
cld
inc
cs
test
dec
xlat
inc
call
scas
loope
sti
jnp
out
scas
mov
fisubs
aas
jns
outsb
out
lahf
stc
cwtl
shll
pop
xor
adc
cmpsl
fs
sub
stos
lds
shlb
mov
push
pop
push
test
fwait
inc
test
cltd
mov
cmp
hlt
xor
stos
jns
sub
jecxz
cmp
orb
scas
data16
insl
ljmp
lahf
mov
cmpsl
cltd
fxam
push
push
lahf
stos
sub
lds
imul
xchg
in
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jnp
or
cli
lret
and
imul
cmp
stos
xor
xor
mov
mov
jp
push
jo
mov
pop
jb
add
xchg
cmpsl
or
mov
ficomps
xchg
out
test
jge
sahf
jp
popa
lret
mov
pop
push
leave
jne
sbb
out
mov
push
loope
cs
mov
outsb
out
lahf
stc
cmpsl
leave
jns
fcoms
add
mov
mov
sbb
mov
in
or
mov
ja
cmp
push
arpl
call
int
push
pop
jmp
popa
shrl
push
cmp
or
push
les
xlat
mov
adc
jbe
xchg
push
stos
mov
ja
mov
in
imul
dec
and
loopne
and
jae
mov
xor
dec
inc
sub
sub
or
push
sbb
addb
mov
sub
mov
sti
mov
dec
stos
inc
in
stos
pop
push
fcoms
inc
jb
sahf
pop
and
sub
outsl
mov
mov
adc
sub
mov
shrb
mov
mov
adc
fimull
arpl
pop
mov
fs
ficoml
jle
filds
aaa
jae
int3
xchg
sub
push
roll
sub
fs
fs
fsub
mov
mov
mov
lods
and
push
mov
inc
cmpsl
lcall
mov
jnp
pop
jno
xlat
xlat
faddp
ret
ret
xor
loop
mov
aas
pop
dec
dec
pop
or
ja
leave
fstpt
xchg
push
xchg
mov
add
sbb
inc
mov
rcrl
pop
movsb
xchg
jp
cltd
inc
cmpsl
mov
andb
add
push
shlb
push
or
pushf
test
inc
cmp
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fcmovne
loop
add
sub
addl
mull
lret
stc
dec
movsb
dec
push
test
push
cmp
lock
lds
out
cmpsb
enter
inc
ret
fldl2e
scas
cmp
jns,pt
outsb
repz
cwtl
add
inc
and
xorl
test
inc
xor
mov
popf
mov
clc
test
mov
and
pop
ret
xchg
jnp
adc
jno
or
js
sbb
mov
dec
inc
cmp
roll
fcomps
je
cmp
pop
mov
mov
sbb
xor
in
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
pop
dec
push
add
shl
je
sub
out
fldcw
out
dec
push
mov
mov
cltd
jb
sahf
pop
mov
cmpxchg
out
test
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
jmp
inc
mov
xlat
repz
mov
jge
and
fisubs
pusha
and
rorb
jmp
dec
mov
adc
jnp
jle
stos
mov
xor
fiadds
sbb
cli
mov
int3
mov
iret
push
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
bound
cmpsl
ret
test
pop
and
gs
sub
adc
inc
in
xlat
mov
mov
push
sahf
aaa
push
testl
loope
lret
movb
vplzcntd
push
dec
movsl
sbb
inc
stos
xchg
stos
xor
mov
out
scas
push
and
sub
fs
mov
adc
sti
xchg
inc
xlat
pop
mov
dec
mov
xor
pop
sub
out
jns,pt
outsb
or
add
aaa
pop
dec
add
xchg
jecxz
fldl
cmp
ja
popf
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
stc
ja
xchg
js
cld
or
lea
cmp
aas
out
lods
imull
aaa
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
mov
ja
mov
pop
add
out
pop
fstl
wbinvd
imul
push
adc
call
daa
stos
imul
sub
mov
adc
jns
loope
fdivrs
rolb
mov
cs
stos
push
repnz
xchg
sub
stos
aam
xor
adc
fs
mov
push
popa
outsl
xchg
iret
aad
adc
pop
rcll
movsl
sbb
js
dec
std
rorb
mov
int
cs
dec
les
or
adc
push
iret
xor
imul
pop
jns
mov
adc
cmp
es
ud1
and
cmp
or
cmp
xchg
sub
cs
js
ds
xor
xchg
sub
cmp
pop
or
mov
sub
test
popa
xchg
push
shrb
stos
sbb
pop
jnp
es
int3
je
fadd
cmp
mov
stos
ret
movsb
repz
sti
dec
xchg
or
mov
cmp
jge
xlat
xchg
in
stc
dec
ss
jge
hlt
sahf
xchg
fmuls
cmp
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
cmp
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
shlb
adc
ret
das
adc
sbb
pushf
lcall
hlt
jbe
scas
out
mov
ds
pop
push
jo
jp
cmp
sbb
and
in
repnz
inc
lods
iret
xor
into
orb
or
mov
test
xorb
sahf
or
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
sub
and
jnp
hlt
leave
add
sbb
test
lcall
daa
and
iret
mov
sbb
mov
xor
in
scas
jge
mov
mov
ds
add
fstps
cmp
std
bound
sub
int3
xor
call
xchg
xchg
jno
mov
je
loop
pop
cltd
enter
fistl
xchg
push
mov
aas
test
sub
cmpxchg
out
dec
aam
pop
mov
scas
pxor
cld
repz
out
das
in
rorl
mov
fsubl
cmc
loop
xchg
mov
into
out
in
xor
and
int3
sub
or
rcr
pop
fidivrs
jnp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
mov
hlt
int
js
subl
adc
js
test
or
aas
out
lods
imull
aaa
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
sub
push
mov
movsl
cmpsl
mov
sub
jae
sbb
int3
imul
mov
into
sub
outsl
pop
mov
xor
lods
shll
ja
fistpl
cmp
ret
adc
sbb
mov
push
xchg
fcompl
push
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
loope
sub
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fnstsw
outsb
iret
lahf
icebp
cwtl
ret
data16
rcrl
adc
add
invd
andl
nop
and
andl
das
ljmp
jmp
inc
jecxz
iret
xchg
mov
xchg
fists
add
call
sbb
flds
je
mov
xor
dec
sbb
sub
stos
add
dec
or
sbb
std
fistpll
xchg
mov
mov
test
sbb
subb
imul
cmp
movsb
push
sub
jns
push
inc
int3
mov
mov
in
ja
push
repnz
aam
jl
ljmp
gs
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
jp
and
daa
jbe
jg
sti
std
mov
sti
and
test
sahf
std
ja
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
pop
and
or
inc
ret
pop
mov
sbb
xlat
push
cmp
shl
adc
push
mov
sub
mov
mov
mov
test
movsl
push
int
rcr
mov
hlt
xor
shrl
shrl
aas
adc
mov
jae
orb
xchg
mov
jg,pn
shl
push
fsubs
cmpsl
mov
or
cli
mov
ja
shrb
jnp
leave
mov
lahf
mov
test
jg
outsb
jno
insb
negb
mov
scas
pop
pop
or
imul
fadd
cmp
outsb
cmp
scas
mov
out
jb
fsubrl
mov
adc
incl
dec
mov
popa
and
cmpsb
stc
adc
enter
pop
dec
sbb
or
andb
nop
and
or
inc
orl
and
test
clc
xor
out
and
mov
icebp
add
cmp
inc
or
or
rol
dec
gs
jns
rolb
or
mov
mov
std
dec
add
stos
aam
lahf
stos
sub
mov
push
movsb
jmp
push
ja
fs
movsl
mov
xchg
mov
mov
sub
jl
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
dec
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
push
lds
xchg
dec
enter
ss
repnz
leave
mov
fwait
gs
jne
or
and
in
cmc
xor
push
adc
pop
test
lcall
repz
add
adc
mov
mov
cmp
jp
add
add
mov
sbb
testl
mov
in
arpl
mov
jg
lret
push
repz
cmp
inc
xchg
pop
mov
mov
jne
call
mov
shlb
or
adc
aad
push
mov
rcrb
cmp
or
mov
dec
mov
add
fsubl
adc
flds
mov
and
iret
mov
les
mov
or
jns
xor
mov
icebp
jbe
in
ret
fadds
mov
pop
repnz
in
inc
add
stos
mov
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
xchg
xor
cmpb
add
cmpb
xchg
sub
popf
out
mov
push
shlb
mov
lods
insl
lret
dec
pop
mov
or
scas
iret
fucomip
test
add
jb
jae,pn
lock
or
dec
sbb
mov
arpl
ret
inc
inc
xchg
mov
sbb
insl
pop
dec
aam
aaa
mov
adc
lret
jle
fs
movsl
dec
out
pop
rcrl
mov
xor
daa
dec
sbb
mov
cmpsb
xor
jb
fisttpll
cmp
lds
sbb
pusha
jle
das
pop
icebp
or
cmp
andl
mov
push
test
pop
jle
inc
sbb
pop
shrb
cmp
idivb
pushf
ljmp
out
jno
sbb
scas
lahf
push
int
xchg
mov
or
fidivrs
sahf
lret
xchg
lock
call
test
aas
add
and
sub
mov
lock
divb
push
lret
shrl
pop
sbb
test
arpl
call
int
push
sub
jae
pop
inc
test
mov
and
lock
and
iret
imul
inc
xorl
cmp
sbb
in
jmp
test
aaa
jns
pop
push
andl
fucom
cli
mov
cmp
in
test
or
pop
sbb
outsb
or
int
lcall
push
xchg
cmp
dec
sub
lods
pop
out
mov
pop
movsb
lret
pop
mov
adc
jno
and
pop
mov
scas
adc
cld
xor
sbb
sbb
call
push
mov
pushl
cmc
loope
int3
mov
out
out
mov
js
cs
jae
cltd
lods
sti
jae
jecxz
aaa
fnstenv
pushf
sbb
and
cmp
dec
es
test
insl
lea
popf
xchg
push
sbb
jno
iret
imul
int3
cltd
mov
ljmp
test
sbbb
mov
jp
add
insl
push
sub
pushf
ret
pop
mov
pop
adc
mov
test
cli
add
movsl
imul
jmp
mov
rcrl
lods
and
fsubl
ja
in
and
out
sub
aaa
add
xor
repnz
test
mov
or
movl
mov
jl
pusha
test
ficoms
jg
xor
mov
inc
or
es
or
clc
or
fwait
push
dec
mov
and
adc
mov
and
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
sub
adc
insb
pop
sbb
add
and
test
mov
push
sbb
xchg
rcl
push
xor
jecxz
xor
outsb
push
jecxz
or
fiadds
dec
inc
add
faddl
sbb
sarb
ljmp
test
roll
push
fbstp
je
pop
iret
sbb
rcr
loopne
mov
mov
xchg
mov
push
sbb
mov
push
push
ja
mov
xchg
pushf
xchg
sbb
test
mov
fcmovbe
in
jo
jp
rcpps
rorl
mulb
cwtl
js
xor
shl
jl
les
push
mov
dec
and
aaa
sbb
push
or
pop
iret
rorl
dec
or
insb
cmp
repz
cwtl
add
test
add
or
dec
xchg
dec
fistpl
hlt
inc
or
push
jmp
cmpsl
pop
or
fldcw
leave
inc
rcl
iret
les
jmp
stc
aas
roll
popf
fs
mov
sbbb
mov
je
and
iret
rorl
in
movsl
cmp
rcrb
adc
test
push
sti
push
push
add
arpl
mov
in
je
sahf
das
xchg
stc
cli
in
test
or
test
jnp
jbe
outsb
cmpsb
sub
mov
mov
push
iret
sbb
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
das
push
sub
push
clc
mov
fsubrl
cmc
jl
fmul
adc
outsl
cmp
fld1
stc
jp
scas
scas
loope
sti
mov
cltd
mov
pop
cs
icebp
in
jns
outsb
out
lahf
stc
sbb
pop
inc
loope
lea
pushf
shrl
loope
inc
push
push
adc
dec
dec
movsl
shl
add
and
dec
push
nop
push
mov
sahf
inc
movsb
jle
ljmp
mov
lret
roll
adc
aas
mov
je
and
iret
rorl
in
movsl
cmp
rcrb
adc
test
push
sti
push
push
xchg
arpl
mov
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
fs
data16
xchg
xchg
fisttpl
outsb
les
push
mov
mov
jbe
repz
test
fsubl
ja
sub
insb
xchg
and
lods
test
mov
inc
cwtl
mov
filds
jno
popl
sub
sarl
outsl
push
and
xchg
mov
stos
bound
hlt
mov
enter
pop
lods
iret
xor
into
xchg
les
aam
add
jle
nop
add
add
mov
mov
std
aaa
fxtract
xchg
repz
jne
les
cmpl
sbb
imul
ret
adc
mov
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
mov
push
sahf
aaa
push
testl
loope
lret
movb
xor
xchg
adc
adc
xchg
jnp
imul
data16
rol
lret
jb
pop
push
aam
int3
push
cmp
sbb
test
in
mov
daa
dec
test
xor
loop
clc
das
push
mov
mov
mov
es
sbb
mov
dec
dec
xor
mov
push
pop
pop
imul
add
mov
xchg
ds
jmp
imul
adc
cmp
or
cmp
xchg
sub
rol
dec
sbb
mov
mov
pop
xlat
mov
in
mov
bound
adc
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
leave
arpl
cltd
pop
jmp
incb
xlat
ret
aad
xchg
mov
sub
mov
aaa
sub
shrl
pop
iret
mov
cmpl
dec
inc
add
iret
push
add
incb
lcall
dec
dec
jmp
js
scas
mov
xchg
sub
add
dec
fidivs
lods
mov
adc
jp
fisttps
mov
mov
cmp
push
jo
mov
pop
jb
add
mov
out
push
scas
shll
ret
mov
out
jo
jp
scas
xchg
push
enter
dec
data16
fidivrs
xchg
inc
jl
xchg
add
fadd
pop
xlat
mov
rolb
xchg
subb
or
and
or
dec
mov
ljmp
or
jmp
call
mov
xor
mov
mov
xlat
lea
fsts
inc
pop
cli
add
inc
mov
add
mov
fidivs
fs
sub
cmc
sbb
std
fistpll
xchg
mov
mov
test
add
pop
inc
xchg
stos
xchg
into
jns
lahf
cli
rolb
mov
xchg
push
mov
ret
lea
and
in
das
adc
dec
sbb
pop
mov
ficoms
jmp
cltd
scas
push
repz
cmpb
pop
das
dec
xor
lea
fwait
scas
mov
pusha
adc
lds
mov
fsubrp
scas
mov
pop
pop
ljmp
outsb
out
lahf
stc
cwtl
shll
or
add
lds
mov
stos
ror
jecxz
addl
mov
inc
lds
loopne
mov
ret
loopne
push
icebp
iret
fucomip
sbb
jl
inc
jb
in
ret
jno
push
jl
adc
sub
bound
js
imul
pop
add
sub
xchg
xor
cmp
jb
pop
adc
dec
push
sahf
jnp
stos
subl
jecxz
enter
movb
xchg
das
fcomp
push
jne
sahf
repnz
scas
rclb
jno
mov
jae
mov
jecxz
lahf
cmpsl
jns
out
js
int3
xor
rep
lds
xchg
or
rcll
jae
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
ds
xor
cmpb
je
test
push
or
int
imul
jmp
mov
daa
push
imul
inc
movsb
fnstsw
pop
xchg
push
jl
std
roll
ret
imul
sub
xchg
dec
xchg
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
pop
pushl
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
out
movsl
fbstp
repz
and
iret
cmp
repz
adcb
jo
cmp
out
test
xchg
mov
mov
faddl
jp
mov
mov
ret
dec
sbb
jnp
mov
jbe
ficoms
mov
mov
test
add
mov
repz
mov
sbb
stc
pop
int
rcrl
or
lret
xchg
dec
xchg
test
cmpsb
aam
les
or
stos
popf
push
dec
rcll
mov
mov
pop
arpl
pop
mov
cmc
mov
mov
in
fxch
pop
or
movsl
mov
sbb
loope
jae
lds
xchg
lret
xchg
xchg
nop
dec
pop
pop
rorl
movsl
lods
adcl
jmp
fidivs
aad
rorl
xchg
mov
lods
cs
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
stos
ret
sub
jb
mov
fdivl
sbb
les
cmp
mov
lock
or
dec
pop
xchg
inc
gs
push
pop
roll
cli
int3
mov
test
out
or
and
mov
loop
inc
sbb
rorb
out
dec
mov
and
bound
dec
inc
add
mov
imul
cmp
mov
sub
pop
inc
aam
dec
sbb
xor
pop
jp
pushf
movsl
mov
lcall
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jecxz
xchg
subl
inc
sbb
lret
lock
jge
dec
lret
inc
pushf
pusha
test
xor
sub
jbe
out
cmpsl
inc
lret
adc
pop
mov
dec
mov
mov
jo
jbe
sub
out
hlt
add
pop
ror
arpl
pop
sub
mov
negl
lds
sub
fs
fwait
aaa
ja
xchg
jbe
mov
ret
call
sti
arpl
adc
out
in
jecxz
icebp
out
mov
aaa
pop
dec
inc
ret
push
adcl
mov
jnp
imul
lret
sub
jb
pop
adc
ljmp
dec
subb
add
adc
xchg
jnp
push
mov
mov
add
push
xor
stos
add
pop
or
and
fcmovne
js
jle
mov
jge
addr16
rcl
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
lods
stos
mov
mov
inc
int
jns
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
push
or
dec
dec
mov
outsb
jmp
cmc
shlb
and
cs
jp
xor
mov
cmpb
mov
das
cmc
outsb
movsb
stos
xor
imul
mov
jmp
incb
push
insb
movsl
shl
data16
push
cwtl
icebp
cmp
and
jne
xchg
sbb
ljmp
and
adc
lcall
jns
outsb
or
mov
mov
cli
test
xchg
fcmovne
aad
adc
sub
inc
shr
rcrl
inc
xor
mov
mov
fstpt
push
jo
mov
pop
jb
add
inc
pop
or
mov
addr16
sub
jo
mov
xchg
insl
mov
aaa
fisttpl
imul
shlb
mov
xchg
in
loopne
aas
fisttpll
into
pop
or
and
adc
pushf
shll
or
add
dec
pop
jmp
pusha
and
xchg
ret
je
bound
mov
movsl
subl
and
repz
jmp
loope
xor
adc
push
or
push
decb
fiadds
data16
sbb
inc
push
fldcw
and
cmp
mov
fildll
push
sahf
jns
jmp
outsl
sbb
jg,pn
shl
je
sub
cmpsl
push
pop
loop
pop
xchg
imul
in
rcll
fadds
mov
out
test
mov
mov
fcoml
and
jl
rcrb
pop
mov
lret
inc
push
stc
or
or
loope
jnp
in
lret
jg
scas
or
fucomi
jns
int3
push
push
lds
add
mov
ret
jno
jb
cld
lods
jnp
outsb
repz
data16
lret
push
ficompl
cs
push
shrb
or
shll
sar
sub
popa
push
test
sahf
fadd
aaa
loopne
cld
xor
or
push
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
xchg
mov
leave
sarb
push
fcompl
jne
jns
lds
nop
lds
stos
push
ljmp
lret
jge
pop
push
push
repz
test
pop
fsub
fsts
inc
mov
xor
fidivs
inc
lds
cmp
xor
int
jae
cmp
sbb
sbb
jns
inc
add
mov
into
adc
jmp
cmp
es
cld
dec
cmc
sbbl
and
adc
adc
and
jne
mov
mov
or
lahf
cltd
pop
adc
ds
xor
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
mov
les
xor
push
cmp
roll
xorb
out
push
push
inc
int
test
or
and
mov
test
popa
in
jg
push
dec
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
mov
mov
gs
sub
addr16
sahf
out
ss
outsl
dec
dec
push
adc
sbb
scas
cmpsl
bound
mov
loop
push
xor
data16
rcr
pusha
inc
dec
je
jge
leave
xchg
mov
mov
push
jno
dec
cli
inc
test
push
mov
lods
inc
mov
inc
cs
ss
in
cltd
xor
mov
repz
popf
ljmp
add
test
xlat
loop
xor
rcll
add
xor
mov
stc
aas
roll
popf
scas
xchg
cmp
rol
sub
mov
cltd
mov
fsts
inc
pop
jb
mulb
ficoml
imul
xchg
shlb
mov
xchg
rcrl
shll
test
mov
sbb
mov
les
in
mov
pop
nop
jbe
mov
into
jbe
pusha
mov
aaa
clc
xchg
push
insb
mul
lahf
xchg
mov
pop
sub
scas
inc
cltd
bound
movb
adc
jge
cs
cmp
scas
jne
fucomi
jns
jl
push
pop
mov
leave
jae
mov
inc
aam
pop
pusha
jns
iret
mov
jne
dec
dec
mov
xchg
daa
loopne
hlt
jbe
movsb
mov
inc
xorb
cmpb
fwait
mov
in
and
xor
subl
jp
push
sub
divl
cwtl
roll
add
sub
adc
jecxz
add
inc
mov
cmpsb
ljmp
inc
incb
push
xchg
adc
dec
fmuls
scas
mov
mov
pop
and
divb
rclb
jbe
pop
subb
sub
mov
xor
lcall
or
sub
pop
aad
leave
cltd
and
inc
fdivrl
jecxz
fistps
test
and
repz
rcrb
in
cmp
mov
mov
add
and
sahf
xchg
sarb
out
ret
xor
lahf
cmpsl
mov
jae
mov
int
jno
ret
cmp
push
adc
jno
pop
adc
add
sub
sub
sbb
pop
add
and
push
loop
sub
ret
jecxz
out
hlt
aas
cltd
addr16
add
push
jns
sahf
rcrb
fs
pop
loop
jno
or
icebp
aaa
mov
sbb
jge
les
mov
cltd
dec
sub
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
cli
pushl
outsb
cmpsb
sub
mov
nop
cli
cmpsl
pop
scas
mov
leave
cli
sarl
xchg
push
es
popa
jmp
or
xchg
pop
test
xor
popa
cmp
das
rorl
scas
jbe
flds
lock
jl
leave
call
lret
jmp
scas
mov
out
jae
pushf
sub
ja
sahf
mov
push
loope
cli
xor
jg
jns
outsb
out
arpl
outsb
or
les
daa
outsb
add
mov
or
dec
adc
mov
repnz
pop
inc
loopne
int
filds
test
pop
pop
cmpsl
pop
pusha
mov
cmp
imul
push
cmp
xor
ret
aad
shlb
add
mov
cmp
sbb
fs
push
mov
test
repnz
cmc
sbb
std
fistpll
xchg
mov
mov
test
in
andb
cmpsb
cli
imul
rolb
jb
dec
ss
repz
inc
mov
iret
test
repz
cmp
push
sub
das
inc
out
adc
and
mov
rclb
mov
fbstp
loopne
outsb
imul
sbb
push
adc
mov
adc
inc
fcmovne
xchg
aas
movsl
dec
fistl
cmpsl
sbb
cwtl
stc
add
mov
mov
mov
mov
xchg
mov
ffree
push
pop
push
xchg
sti
mov
fildl
inc
cli
arpl
sahf
je
popf
mov
cmp
jp
add
add
mov
sbb
cld
testl
mov
in
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
lock
mov
data16
mov
in
in
xchg
xor
pusha
cmp
movzbl
jno,pn
insb
repnz
mov
out
and
mov
das
je
or
mov
js
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
orl
test
js
sbb
mov
mov
push
shlb
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
int3
mov
xor
mov
fcoml
mov
pop
out
jmp
dec
mov
mov
scas
mov
sub
jb
pop
adc
inc
lret
jp
and
lods
add
fwait
shll
adc
adc
xchg
jnp
loope
add
xchg
adc
adc
out
push
enter
jnp
xor
xor
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
jle
and
daa
pop
repz
out
icebp
mov
xchg
mov
rorb
add
inc
mov
or
inc
and
or
loopne
cmp
adc
and
push
dec
push
adc
inc
mov
sbb
inc
and
add
loope
jecxz
mov
subb
push
decb
push
insb
jne
inc
xor
sbb
cmpsb
ret
adc
sub
push
inc
pop
xor
gs
scas
jmp
and
xlat
cmp
addr16
cmp
cmp
or
mov
xor
add
sbb
call
jecxz
pop
lcall
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
testb
mov
pop
repnz
xchg
jne
pop
ret
inc
lods
xlat
xchg
mov
jle
pop
sbb
fcoms
jmp
add
arpl
data16
out
jno
jae
pop
xor
jmp
int
mov
xorl
shlb
bound
mov
sub
push
test
jl
fbstp
hlt
sbb
push
ret
popa
shrl
push
cmp
sub
mov
decb
aad
push
sub
push
xor
push
lds
or
movsl
dec
and
and
mov
sbb
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
shlb
mov
fcompl
aad
xor
xor
mov
int3
scas
inc
fs
mov
mov
push
cwtl
lock
sarb
add
mov
out
movsl
pop
popa
mov
xor
xchg
dec
pushf
inc
and
jnp
imul
jp
js
fldl
jle
fisttps
dec
cld
mov
xor
lods
scas
sbb
shrb
ret
jne
push
pop
add
inc
rorb
xor
scas
testl
shrb
fistpll
loope
push
or
xchg
in
dec
or
repnz
jle
xor
mov
mov
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
mov
push
sahf
aaa
push
testl
loope
lret
movb
bound
jge
fsubl
mov
shlb
cmp
imul
mov
cmp
lods
xchg
mov
in
cmpsb
aas
stos
shrb
sub
btc
outsl
jno
insb
out
mov
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jge
inc
iret
shl
ja
std
outsl
addr16
call
xchg
out
cmpsl
mov
jg
inc
dec
pop
pusha
jns
iret
stos
pop
lds
cmpl
je
inc
jl
outsb
xorl
push
cmpsl
test
push
xchg
insl
cmp
in
into
cld
pop
mov
push
fidivrs
imul
xor
mov
inc
in
lods
es
sub
sbb
test
lcall
daa
and
iret
mov
sbb
nop
push
lcall
scas
cmp
mov
out
stos
mov
lods
imul
adc
pushf
xor
imul
mov
scas
stos
rcr
cmpsl
mov
stc
insl
mov
into
add
push
lahf
pop
test
es
rcrb
adc
pop
and
repnz
fmull
sti
add
or
pop
cs
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
fwait
sub
imul
jle
ds
jmp
std
mov
sti
and
test
mov
xchg
push
hlt
mov
xchg
test
push
lds
pop
repz
fwait
pusha
or
scas
adc
adc
sbb
cld
loop
inc
sbb
ljmp
outsl
aam
sub
jae
pop
push
mov
cmpsb
shlb
push
stos
lea
aad
lea
pop
mov
jne
cmc
fwait
inc
shrl
push
sahf
jns
loope
pop
fisubrl
inc
dec
fsub
ja
in
jg,pn
shl
je
sub
loope
leave
and
jmp
fimull
push
jecxz
iret
push
sbb
lahf
scas
jg
or
jg
pop
rcll
sbb
aas
cmpsl
sub
sub
push
stos
cmp
repz
push
xchg
lods
out
cmp
cwtl
push
scas
xor
and
cld
xor
stos
fldt
shrl
jle
fildll
or
and
sub
inc
test
out
insb
adc
ja
inc
push
and
or
clc
and
xchg
adc
sub
pop
adc
pop
inc
mov
mov
jp
iret
or
push
jl
outsb
scas
sbb
sbb
int3
cwtl
stos
add
leave
dec
and
add
jbe
lea
jmp
lret
inc
ret
add
jnp
mov
es
test
sahf
mov
in
mov
cli
fwait
lret
repz
or
adc
aad
sbb
bound
mov
and
sub
outsl
push
inc
fmuls
and
test
dec
mov
sarl
sbb
mov
add
inc
cli
sti
lret
popf
cmpsb
fbstp
addr16
rol
add
push
cmp
mov
in
aaa
sbb
mov
pop
xchg
jg
cmpsb
sub
and
inc
pop
clc
jecxz
mov
jmp
std
mov
sti
and
test
std
ja
xchg
push
hlt
mov
popa
dec
mov
into
cmpsl
stos
shll
inc
xchg
in
mov
sub
test
mov
mov
outsb
xor
xchg
aaa
or
mov
cmp
mov
sub
jb
sbb
inc
lret
push
ficomps
sbb
stos
subl
pusha
and
xchg
adc
mov
cmc
or
out
pop
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
mov
mov
jle
fcoml
aad
xor
xor
fwait
movsb
pop
das
jle
scas
jb
aad
jae
ret
xchg
mov
mov
cmpsl
push
shrl
pop
iret
aad
imulb
push
xchg
fidivrl
leave
jne
jb
testb
loope
je
sbb
sub
das
mov
or
and
rorb
ss
mov
jae
inc
pop
and
lret
cmp
outsb
mov
and
test
mov
push
sbb
mov
xor
mov
mov
xlat
lods
push
jbe
adc
mov
aas
cli
add
out
sbb
loop
adc
mov
pop
das
xchg
xchg
sbb
std
fistpll
xchg
mov
mov
test
jp
jge
scas
xchg
iret
jmp
stos
xchg
shrl
fs
dec
inc
jne
dec
inc
cltd
ret
mov
mov
lock
dec
fnstsw
sub
divl
sub
mov
jo
mov
xchg
sub
adc
enter
test
leave
push
fidivrl
jp
pop
inc
push
sbb
or
ret
jo
xor
popf
and
inc
cmp
jo
cmp
xchg
sub
popf
out
mov
push
shlb
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
imul
in
insl
ficomps
adc
and
lods
fldt
add
ret
pop
cmp
mov
call
imul
cmpsl
mov
xor
fsub
push
pop
bound
insl
xchg
sub
xor
push
mov
mov
int
or
movl
loope
into
add
sbb
sbb
enter
int
and
fcmovbe
cmp
sbb
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
out
mov
push
sbb
and
sbb
inc
rcrl
mov
jb
sub
push
push
push
lds
jecxz
sub
xchg
aas
movlps
sub
test
cmp
sbb
mov
testl
lret
mov
and
push
leave
pop
add
sub
das
or
jns
xchg
aaa
in
je
sahf
das
xchg
stc
cli
in
test
or
test
pop
pushl
outsb
cmpsb
sub
mov
mov
dec
loopne
subl
mov
adc
cltd
dec
bound
clc
dec
sbb
jne
add
cs
mov
loopne
xor
hlt
ja
jge
dec
add
xchg
stos
js
scas
xchg
push
adc
js
lret
push
repz
lahf
scas
les
dec
in
cmp
mov
mov
inc
iret
fs
insb
or
mov
out
mov
imul
push
xchg
push
pushf
in
call
int3
mov
cmp
and
xor
repz
adc
and
jns
pushf
rcrb
decl
sbb
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
mov
push
sahf
aaa
push
testl
loope
lret
movb
sub
xor
imul
xchg
push
pop
push
jnp
xchg
and
stc
xchg
and
pop
push
aam
int3
imul
into
mov
pusha
mov
in
mov
es
test
inc
das
sub
mull
nop
cmp
testb
les
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
std
ja
xchg
push
hlt
mov
xchg
test
push
int
sub
repz
lods
out
inc
pop
popf
repz
jl
mov
roll
addb
je
sti
jae
ffreep
and
and
insb
jne
inc
into
push
mov
insl
cmc
imul
test
push
pop
add
leave
mov
mov
leave
xchg
mov
ficompl
xchg
pop
pop
sbb
jl
inc
jge
mov
imul
mov
test
bound
stos
pop
xchg
outsl
cmp
lds
push
fdivrl
jmp
mov
mov
mov
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
and
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
pop
sub
or
pop
cmpsb
dec
xor
idivb
test
ret
inc
sarl
add
adc
loopne
std
into
lcall
and
mov
inc
cmovge
mov
or
add
lcall
inc
mov
or
and
mov
test
cli
add
movsl
imul
lods
add
mov
lret
sbb
sbb
lods
add
in
mov
movsl
mov
gs
pop
mov
sti
push
dec
ja
enter
lods
subb
int3
sub
in
mov
iret
iret
mov
les
pop
mov
xor
mov
inc
sarb
clc
jo
and
dec
inc
xorl
mov
aam
mov
fdivrl
cli
xor
fists
out
cmp
hlt
or
and
sbb
lret
dec
sbb
repz
inc
lea
cmp
inc
fstpt
fdiv
mov
inc
pop
sbb
xchg
pop
add
ret
mov
aad
jno
sbb
xchg
mov
sub
mov
and
leave
fsubl
repz
xor
je
rcr
mov
ja
inc
frstor
mov
xchg
jp
jmp
dec
mov
nop
fstps
lock
sbb
mov
xchg
mov
sub
mov
out
in
ret
das
loope
mov
outsb
or
leave
loop
arpl
jne
cld
jae
cld
out
daa
dec
sub
das
inc
iret
ror
jmp
scas
mov
out
jb
fsubrl
data16
out
cmpsl
inc
lret
adc
pop
mov
dec
mov
imul
lea
loop
repz
lret
dec
dec
fnstenv
out
and
or
adc
popf
je
xor
sti
dec
mov
stc
clc
jp
add
cltd
sub
adc
jecxz
add
inc
mov
leave
pushf
dec
push
xchg
xlat
stos
mov
rcll
pushf
pop
pop
pop
loope
fbstp
stc
jnp
sahf
pop
xlat
iret
sahf
jno
jecxz
fadds
mov
inc
adc
inc
scas
push
repnz
push
and
ret
push
enter
mov
popf
sar
mov
ss
push
out
adc
or
cmp
mov
add
jmp
jl
mov
les
pop
stos
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
jle
and
daa
pop
repz
out
icebp
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
xor
rcrb
dec
arpl
call
dec
scas
jno
adc
jp
xor
divl
cmp
push
inc
dec
and
stos
stc
sbb
mov
or
sub
loop
imul
inc
daa
leave
sbb
inc
pop
mov
pop
cli
test
mov
negl
roll
lahf
and
popf
ljmp
sbb
test
mov
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
xchg
shll
out
mov
shlb
cld
xor
pop
mov
mov
fwait
jmp
popf
ljmp
lret
mov
mov
cli
mov
push
int3
mov
or
rcr
pop
fidivrs
jnp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
mov
hlt
int
js
subl
adc
js
test
or
aas
out
lods
imull
aaa
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
xchg
ja
ja
std
shlb
arpl
xor
dec
and
inc
inc
movsl
in
mov
jecxz
in
dec
push
inc
inc
add
pop
add
popf
lea
adc
sub
les
jl
or
add
pop
xchg
cwtl
mov
mov
int3
aad
cmp
stos
xor
xor
mov
mov
cltd
aas
push
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
out
and
xchg
mov
xchg
rorl
gs
inc
pushf
mov
jg
repz
jns
popf
addr16
into
add
xor
xchg
inc
jno
sub
add
or
cmpsb
jge
fsubr
mov
sbb
das
or
jae
jae
inc
jbe
mov
sub
jl
in
loopne
faddl
push
add
mov
hlt
pop
lret
cmp
mov
pop
inc
xchg
hlt
je
or
int
inc
mov
insb
dec
mov
nop
xlat
arpl
decl
in
push
mov
hlt
and
ror
mov
inc
jns
ds
fs
xchg
int3
add
xchg
or
testl
imul
es
or
test
sbb
xchg
and
sarb
fwait
mov
jne
sahf
fidivrs
sub
js
or
rcll
out
test
movsb
pop
adc
enter
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
mov
push
shlb
mov
lods
in
mov
mov
pop
stc
mov
in
xor
pushl
pop
rcl
loop
mov
mov
arpl
cwtl
pop
push
paddsb
rcrl
fldcw
lcall
sti
popf
ficoms
scas
scas
imul
and
adc
inc
cmp
jmp
adcl
cmpsl
xchg
test
inc
lea
dec
cmpsb
push
and
cltd
pop
add
dec
loop
cwtl
push
mov
fcoml
dec
cltd
lods
je
int3
test
iret
mov
out
mov
lock
jle
dec
mov
loopne
push
repz
cmpb
int3
mov
idivl
outsl
outsl
and
lahf
xor
sub
in
sti
jnp
lcall
loop
cmp
lods
xlat
xor
into
add
popf
ljmp
sub
xchg
xchg
sub
xchg
shrl
pop
sbb
in
int
or
pop
ret
ret
mov
std
div
xor
rol
adc
xor
loope
cwtl
add
ret
mov
mov
mov
dec
xchg
adc
clc
loop
mov
nop
inc
sbb
insb
movsl
mov
in
call
paddq
push
dec
ret
cmp
jae
adc
movsb
ret
les
jp
sub
shll
jecxz
push
scas
xchg
je
mov
jne
jb
pop
mov
shlb
dec
arpl
sub
jbe
rcrl
ret
adc
mov
cltd
data16
testl
mov
jp
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
or
popa
inc
mov
negb
aas
sti
sti
and
test
jg
ja
xchg
push
hlt
mov
fimuls
cmp
lods
into
pop
stos
movsb
xchg
mov
push
pop
push
outsl
xlat
jnp
out
mov
lds
mov
xchg
dec
or
js
push
mov
xor
sti
ret
inc
inc
xchg
mov
push
pop
push
into
push
mov
insl
inc
push
mov
out
mov
sti
dec
lods
into
add
adc
hlt
add
imul
cs
or
push
stos
sti
loop
arpl
pop
and
add
pop
sbb
arpl
jmp
mov
call
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
sbb
mov
add
jmp
push
aas
fwait
lret
in
mov
mov
or
cmp
sbb
push
and
mov
or
rcrb
pop
mov
gs
insb
pop
push
mov
push
and
cs
js
jle
lahf
adc
scas
in
xor
leave
mov
sbb
loop
mov
adc
data16
fnstenv
insb
hlt
cwtl
iret
movsl
mov
stos
ja
push
jo
insl
ds
mov
sub
lods
imul
xchg
mov
fwait
lcall
fwait
push
daa
push
sarb
pop
fsubl
ja
pusha
or
shlb
negb
jge
ret
mov
es
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
cmp
mov
adc
clc
aaa
jge
push
dec
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
lds
fs
out
pop
sbb
push
inc
push
pop
cltd
test
or
push
sub
push
xor
iret
push
cmp
or
outsl
aam
sub
dec
aam
dec
into
pop
mov
repnz
pop
movl
andl
insb
pushf
cmp
mov
or
sbbl
icebp
or
rcrl
rorb
jb
fisttpll
cmp
lds
cmp
pusha
jle
das
pop
icebp
or
cmp
sti
and
in
ret
paddb
mov
lock
cmp
popl
cmp
xchg
stos
pop
pop
pop
jbe
jp
fisubl
inc
xor
jns
iret
stos
pop
lds
cmpl
je
cmp
mov
dec
dec
mov
and
dec
and
pop
mov
xor
dec
arpl
jl
dec
cmpsl
int3
mov
and
je
and
daa
add
test
push
leave
inc
inc
cmp
ja
fs
scas
arpl
ret
inc
inc
xchg
xchg
mov
out
inc
in
scas
cmp
inc
cmpl
popa
les
push
mov
push
outsb
mov
sbb
arpl
push
mov
mov
sbb
stos
pop
lcall
sub
and
jecxz
ljmp
jo
cmc
cwtl
mov
leave
stc
and
data16
sbb
scas
jns
or
stc
xor
or
cmp
jmp
jmp
add
testb
fucomi
hlt
std
mov
sti
and
sbb
lret
dec
sbb
repz
inc
lea
cmp
inc
fstpt
fwait
idivl
inc
pop
sbb
xchg
pop
adc
out
xchg
fcmovnbe
out
jno
pop
in
popa
push
push
rcll
daa
push
rcll
cmpsl
adc
mov
in
fsubrl
fwait
scas
cmc
stc
mov
inc
fistpl
pop
mov
movsb
pop
adc
xor
ret
mov
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
aas
xorb
jo
cmp
cmp
push
inc
mulb
jecxz
sahf
sahf
xchg
sbb
js
adc
cmp
mov
popa
or
dec
mov
addr16
stos
dec
xchg
scas
out
js
scas
out
mov
out
lock
xor
push
iret
hlt
test
mov
das
shrl
xor
shrl
lahf
cli
cwtl
add
loope
outsb
add
jle
scas
pop
fwait
out
enter
jbe
and
and
mov
rcr
jne
into
jmp
pop
or
js
sbb
ds
lock
mov
aad
dec
popf
aas
mov
cmp
adc
popa
push
sub
lods
xchg
sub
adc
fldenv
lock
mov
stc
inc
repnz
movsb
jmp
xchg
aam
push
dec
popf
push
aad
push
fdivs
push
mov
cmp
ret
ficoms
mov
scas
mull
or
xchg
mov
cmp
sub
adc
fimull
push
lret
stc
and
data16
sbb
xor
lret
or
stc
xor
or
cmp
jmp
jmp
add
fcomp
movswl
jmp
std
mov
sti
and
test
std
ja
xchg
push
hlt
mov
popa
dec
mov
into
push
stos
shll
cld
xchg
adc
jl
mov
xor
aaa
cmp
daa
sub
sti
add
jbe
lea
push
mov
outsb
xor
ret
scas
arpl
mov
testl
scas
dec
inc
or
push
leave
inc
sub
rcrb
dec
in
mov
mov
mov
clc
dec
add
ret
cmp
pop
dec
out
cmp
xchg
inc
lea
fmull
mov
jb
cmc
pushf
fdivs
add
push
test
xchg
adc
data16
mov
inc
push
stos
icebp
mov
cli
ss
lds
mov
or
mov
add
je
bound
cltd
add
mov
mov
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
test
call
iret
push
and
adc
sbb
xchg
arpl
out
pop
sub
mov
add
sbbl
mov
push
mov
out
sbb
sarb
ljmp
test
roll
push
fbstp
je
pop
iret
sbb
rcr
loopne
mov
mov
xchg
mov
cmp
adc
mov
push
test
mov
xchg
pushf
xchg
lcall
inc
int3
xor
mov
adc
pop
rcll
aam
adc
das
scas
add
loop
mov
std
cmp
mov
lock
cmpsl
push
mov
lret
cmc
jp
scas
adcl
test
mov
out
pop
hlt
mov
outsb
int3
xchg
add
addr16
into
xchg
and
push
xchg
loopne
dec
lock
mov
jecxz
mov
loop
mov
in
dec
ret
mov
mov
lahf
int
fildll
cwtl
cmp
or
add
lock
add
mov
cmc
sub
cmp
jge
push
sub
adc
call
clc
mov
rcrb
fidivs
jb
pop
adc
inc
repnz
sahf
jge
les
and
adc
lcall
pop
inc
shl
je
mov
xor
insb
mov
sub
mov
sahf
pop
or
mov
jb
scas
je
jnp
or
fistl
rolb
subl
adc
mov
mov
dec
daa
addl
mov
mov
or
mov
add
je
bound
cltd
add
mov
mov
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
mov
adc
arpl
jge
shrl
in
push
cmp
out
daa
and
mov
popa
jmp
add
xlat
aad
mov
subl
lret
test
insl
pop
dec
adc
aaa
mov
adc
lret
jle
fs
movsl
dec
out
pop
rcrl
mov
xor
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
jnp
ss
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
stos
pushf
out
ss
dec
pushf
lods
fists
dec
push
enter
std
mov
mov
xor
into
add
xchg
ss
push
andl
nop
nop
and
or
andl
js
mov
xchg
inc
push
adc
aam
push
inc
movsb
jle
ljmp
lahf
ret
jecxz
mov
adc
dec
mov
adc
inc
pop
pop
dec
inc
add
mov
mov
inc
cmp
push
ja
inc
movsl
in
dec
sti
dec
test
aad
fisttps
or
in
dec
and
or
sti
jbe
outsb
cmpsb
sub
decb
fwait
int
xor
jb
fisttpll
cmp
lds
sbb
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
shlb
das
adc
sbb
pushf
lcall
lret
jle
inc
outsl
ja
filds
push
int
lea
mov
mov
lods
sti
jae
jecxz
or
and
rolb
xchg
loope
or
aaa
xorl
sbb
sub
imulb
lods
pop
repnz
shrl
movsl
lea
add
pop
shrl
or
xlat
int
add
in
and
lahf
add
roll
sub
pushf
ret
pop
mov
mov
sbb
mov
xor
in
scas
jge
inc
sbb
inc
aaa
lret
fucomp
add
fldt
mov
mov
xchg
mov
push
cmpsb
jge
push
ja
cmp
dec
or
stos
inc
lcall
dec
inc
cmpsb
fs
fistps
inc
leave
scas
dec
xchg
jp
and
or
xchg
jne
jns
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
movsb
mov
rorb
cmp
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
ds
xor
cmpb
je
test
pop
or
int
imul
jmp
mov
daa
push
imul
inc
cmpsb
push
imul
aad
rcrb
test
enter
inc
movsl
cltd
lret
add
scas
arpl
mov
icebp
sahf
jle
xchg
sub
push
pop
adc
mov
push
fidivs
dec
or
mov
inc
jns
loope
lret
aam
mov
xchg
fs
mov
inc
xor
dec
add
mov
ficompl
fdivrs
decl
jge
inc
xchg
push
shrl
fstpt
loopne
adc
dec
mov
lds
adc
in
ja
or
in
mov
jnp
inc
push
mov
or
xchg
and
popa
inc
mov
push
xabort
mov
fdivl
jmp
fnsave
sbb
fidivl
or
test
jle
imul
mov
ljmp
repz
xchg
fstl
add
push
sbb
sar
sbb
jbe
add
jo,pn
fnstenv
out
sbb
mov
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
mov
push
sahf
aaa
push
testl
loope
lret
movb
vplzcntd
push
stos
fs
xchg
fimull
pop
sub
mov
jecxz
mov
das
mov
sbb
mov
xchg
shll
jecxz
pop
std
and
add
cmove
xchg
mov
lds
jnp
sbb
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
or
call
xlat
sbb
and
sbb
lret
dec
sbb
loop
inc
lea
cmp
inc
fistl
mov
inc
pop
sbb
xchg
pop
adc
jg
lahf
loope
add
pop
in
xchg
pop
xchg
into
popa
mov
repz
fcoml
sbb
push
mov
mull
xchg
mov
insl
push
imul
test
vunpckhps
lods
shrl
imull
bound
xchg
cmp
jns
outsb
or
mov
mov
cli
test
xchg
fcmovne
aad
adc
sub
inc
shr
rcrl
pop
xor
mov
mov
cmp
push
jo
mov
pop
jb
add
xchg
js
std
decl
mov
mov
cltd
mov
out
jno
sbb
adc
sbb
mov
cs
icebp
fcomi
data16
hlt
icebp
jo
and
rolb
and
movsb
pop
sbb
vcvtdq2ps
xchg
shrl
pop
sbb
test
arpl
call
int
push
pusha
lods
in
xor
leave
pop
ret
push
sub
push
dec
xchg
mov
or
shrl
sub
add
mov
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
jns
ret
or
test
inc
mov
or
cmp
adc
mov
push
test
mov
xchg
pushf
xchg
lcall
scas
jmp
sub
mov
int
mov
sbb
adc
sbb
std
cmp
mov
mov
out
aas
pop
dec
iret
pop
call
subl
out
xlat
fdivrp
xor
loope
xor
into
icebp
sbb
dec
cs
mov
jecxz
test
je
test
cmpb
pop
mov
mov
jns
sub
inc
pop
add
xchg
mov
pop
mov
test
add
test
pop
lock
xchg
xor
leave
add
mov
or
mov
pushf
xchg
lods
data16
dec
imul
push
je
push
test
push
iret
lods
pop
inc
push
push
cmpsl
jne
adc
inc
ds
movsb
ret
xor
dec
inc
sub
int3
add
imul
inc
pushf
mov
xor
mov
scas
mov
dec
leave
inc
sub
push
enter
insb
rcl
popa
and
mov
ja
pop
xchg
popf
addl
xchg
ret
mov
out
cli
dec
test
shll
lods
inc
jae
inc
fs
dec
ljmp
sti
lahf
movsl
call
add
xor
repnz
hlt
add
pop
shrl
push
push
rcl
hlt
cmp
or
movb
cs
push
lds
orb
dec
jmp
insl
andl
outsb
and
xchg
adc
mov
or
push
xorl
mov
cmp
jne
dec
jle
dec
mov
in
cmp
enter
and
xrelease
mov
inc
out
add
xor
mov
pop
push
fimull
outsl
sub
test
jecxz
xchg
push
shrl
fstpt
loopne
adc
dec
mov
lds
adc
in
ja
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
jle
and
daa
pop
repz
out
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
mov
popf
movsl
dec
sbb
jmp
popa
mov
mov
and
push
dec
xchg
mov
dec
mull
stc
cmpl
ss
cli
mov
adc
push
imul
enter
mov
outsb
movb
insl
int3
imul
mov
repz
inc
cmp
int
pop
daa
inc
pop
inc
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fidivl
or
jmp
fistps
jno
jnp
inc
mov
cwtl
add
loope
sub
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
lea
sbb
xlat
shr
lock
fisttpll
into
pop
or
hlt
push
pop
outsb
or
jle
cs
cli
pop
dec
cmpl
sbb
lret
push
into
cmp
jle
mov
popf
movsl
dec
sbb
jmp
popa
mov
mov
and
push
dec
xchg
mov
dec
mull
stc
cmpl
ss
cli
mov
adc
push
jmp
dec
dec
fcompl
pop
mov
add
jae
lret
fnsave
dec
mov
jnp
mov
jecxz
dec
inc
leave
or
pop
push
outsb
shlb
leave
jns
or
push
clc
mov
cmp
outsl
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
testb
mov
pop
repnz
mov
negb
mov
je
pop
adc
test
and
std
lods
xor
lods
fistl
outsb
out
sti
cwtl
inc
data16
add
add
push
int3
fmull
cmp
insb
xchg
jno
dec
adc
lret
les
pop
mov
orb
mov
jbe
mov
sbb
ds
add
sar
pop
sti
or
or
mov
test
popa
dec
rorb
adc
mov
movsl
test
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
hlt
sahf
xchg
fmuls
cmp
add
or
xor
jb
fisttpll
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fs
loop
out
in
loopne
roll
sub
movl
scas
push
sbb
dec
lret
mov
test
push
imul
xchg
xchg
jle
push
jo
ljmp
xor
xchg
mov
mov
faddl
jp
mov
mov
ret
dec
sbb
jnp
mov
jbe
ficoms
mov
mov
test
add
test
pop
lock
xchg
xor
leave
add
mov
or
mov
push
xchg
movsb
data16
inc
xorb
int
pop
push
inc
push
xchg
cmc
inc
insl
inc
arpl
iret
xor
in
cmp
push
bnd
fwait
mov
shlb
sub
subl
xchg
das
fcomp
aad
test
sbb
cmp
flds
mov
scas
sbb
push
lret
lds
xchg
mov
rcll
jae
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
ds
xor
cmpb
je
test
loope
and
arpl
insl
add
and
push
or
inc
xorb
add
les
push
adc
ss
xor
mov
adc
inc
rcrb
fucomi
xor
jmp
xor
ret
in
xor
adc
sahf
cli
test
sbb
mov
jne
fs
fisttpl
lds
lahf
lcall
pop
sbb
loopne
ret
int
sarb
xor
mov
jp
add
cmp
lds
cmp
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
in
and
jae
scas
inc
repz
and
das
inc
xor
mov
fcmovnb
outsl
addr16
mov
ret
iret
test
dec
jnp
sbb
pop
jnp
or
ret
and
jo
push
test
pop
loop
fidivs
jp
push
mov
and
pop
lcall
scas
inc
lahf
clc
pop
daa
call
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
jg
cmp
push
int
inc
mov
adcl
cmp
push
cmpsb
ja
xor
xor
mov
mov
popa
jle
push
addb
sub
mov
aam
je
sub
es
insl
jb
sahf
fsubl
jbe
lods
adc
enter
popf
sbb
xchg
arpl
jmp
mov
mul
in
mov
les
jg
xchg
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
popf
out
mov
push
shlb
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
insl
cmc
imul
test
movsl
je
push
les
outsb
js
xorl
inc
int3
in
js
push
lods
cli
fwait
adc
aaa
jl
mov
mov
cmc
add
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
cwtl
add
loope
sub
xchg
xchg
pop
inc
mov
jno
pop
icebp
fs
lcall
cmp
out
mov
out
loopne
js
rorl
xor
mov
xchg
scas
jb
rorb
dec
xchg
icebp
test
jmp
aas
jecxz
js
sbb
pushf
insl
sub
clc
sub
mov
repz
xchg
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
xor
mov
enter
sub
lods
xchg
sub
adc
fldenv
lock
mov
stc
inc
repnz
movsb
jmp
insl
int3
imul
mov
fdivrs
mov
int
popa
push
pop
xchg
push
xlat
adc
dec
adc
jnp
inc
call
pop
and
aaa
popf
aad
mov
or
inc
lret
and
data16
sbb
xor
lret
or
stc
xor
or
cmp
jmp
jmp
add
fcomp
movswl
jmp
std
mov
sti
and
test
lahf
std
ja
xchg
push
hlt
mov
movsl
pop
das
idivl
mov
adc
cmp
push
sbb
push
mov
push
xor
sbb
sbb
xor
mov
xor
inc
inc
push
inc
decb
aad
push
int3
mov
xchg
scas
sbb
outsb
xor
push
inc
ficoml
lea
mov
int
jns
adc
mov
mov
cs
cmp
mov
lret
outsb
movsl
cwtl
pop
inc
sbb
pop
out
push
mov
fcoml
dec
cltd
lods
je
les
cmp
push
sub
and
in
jge
xchg
mov
jnp
or
add
das
inc
iret
shl
ja
std
outsl
addr16
xchg
adc
and
mov
jnp
mov
lock
int3
add
popf
iret
out
aam
fwait
xchg
pushf
ret
addr16
sub
or
dec
cmp
or
inc
jge
je
aas
ja
inc
in
pusha
into
gs
xchg
movsb
mov
loope
inc
jg
pop
in
stc
xchg
ja
iret
push
lret
mov
sub
mov
cltd
mov
push
pop
ljmp
cmpsb
sub
cmp
insb
push
hlt
sub
decb
in
pop
push
fistpll
xor
imul
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
scas
and
test
inc
sub
pop
mov
out
sar
jg
out
das
dec
lock
jge
mov
aaa
jge
outsl
outsl
call
push
shrl
scas
inc
leave
push
xor
icebp
in
jns
popf
iret
jle
add
sahf
pop
sub
mov
or
cmp
mov
pop
adc
lret
int3
ret
xchg
test
xor
mov
icebp
push
pushf
add
jmp
sbb
daa
push
into
mov
dec
orl
mov
push
add
pop
mov
mov
xor
out
dec
cli
lret
mov
push
push
mov
mov
xchg
flds
xchg
shll
cmp
xchg
dec
bound
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
sbb
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
shrb
das
jo
sbb
je
jge
leave
cmpsl
js
fcomip
jbe
mov
jo
pop
sub
adc
cli
mov
mov
sub
ljmp
outsb
mull
xlat
mov
rolb
dec
xchg
icebp
loopnew
mov
loop
enter
mov
jecxz
mov
pop
daa
fwait
jge
lret
cmp
movsl
into
jmp
and
add
loop
dec
cmp
hlt
movsl
mov
jg
add
mov
cli
iret
inc
sub
sub
mov
add
out
in
xlat
mov
mov
push
sahf
aaa
push
testl
loope
lret
movb
mov
shll
adc
adc
xchg
jnp
imul
data16
rol
lret
jb
pop
push
imul
inc
pop
cmpsl
test
xor
ret
cmp
testl
xor
scas
add
ret
lret
in
imul
xchg
lods
push
cmp
or
pushw
push
out
push
mov
test
lcall
push
cmp
movsl
cmp
push
leave
jno
popf
push
sbb
ret
gs
lret
dec
inc
dec
dec
mov
sbb
pop
shrl
loopne
jne
dec
mov
mov
add
push
stc
adc
fwait
jne
or
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
cld
testl
mov
push
mov
enter
lods
push
shrl
sub
mov
aad
ja
pop
imul
adc
mov
stc
add
aam
adc
aam
stc
insl
pop
fwait
enter
lods
xchg
mov
inc
mov
aaa
popf
jo
stos
cmp
ljmp
inc
mov
cld
inc
ret
lret
or
arpl
rcll
push
cmc
gs
fwait
cmp
mov
aam
fdivrs
inc
out
rcrl
test
xor
sti
sti
and
test
std
ja
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
test
out
inc
mov
and
mov
sbb
bound
add
imulb
push
inc
dec
movsl
inc
push
sbb
sbb
out
mov
push
arpl
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
mov
stos
or
push
cli
cmp
stos
xor
xor
mov
bound
jbe
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
or
push
push
mov
push
xchg
dec
mov
push
lods
shrb
fisttpl
jg
lahf
adc
out
stc
in
jns
outsb
iret
gs
loop
repz
xchg
enter
jmp
inc
dec
mov
push
dec
mov
popf
sbb
clc
xor
mov
and
pop
ret
xchg
jnp
adc
jno
or
js
sbb
lahf
mov
enter
add
test
jp
lcall
jne
inc
lea
lcall
sub
push
cmp
inc
mov
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
pop
fildll
loopne
fldt
arpl
pop
sub
cmp
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
into
lods
mov
mov
xchg
test
dec
mov
nop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
adc
xor
sbb
test
fucomi
jge
shll
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xor
stos
inc
movsb
pop
sbb
jno
xchg
cltd
push
adc
ret
outsb
pop
dec
sub
js
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
subl
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
outsb
popf
scas
inc
movsl
fcompl
xchg
mov
adc
sub
add
push
aas
in
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
jnp
push
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
aad
mov
sub
jns
and
call
cmp
inc
popl
lea
adc
add
mov
fucomip
mov
cmc
mov
and
jle
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
out
cmpsl
mov
fwait
lea
mov
inc
adc
sub
adc
or
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
cmpsb
inc
cmpsl
fstp
aad
mov
mov
test
enter
sbb
sbb
inc
adc
fmuls
in
popf
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
push
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
fucomip
jl
and
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
call
cmp
ret
loopne
dec
pop
inc
dec
jmp
clc
sbb
and
gs
or
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
cs
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sub
ficomps
mov
xor
ret
mov
add
fisubrl
cwtl
sub
das
mov
jne
mov
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
test
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
inc
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
pop
test
test
inc
mov
sbb
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
movsl
mov
jns
sahf
popf
enter
mov
stos
in
fsincos
cltd
jbe
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
inc
push
xchg
adc
data16
push
fidivrl
fsubrl
call
or
and
cmpsb
fcomi
sti
jne
loope
enter
out
pop
lret
fdivp
dec
inc
sbb
xor
cmp
das
in
cmc
hlt
or
pop
pop
mov
xor
cwtl
aam
imull
mov
iret
cmpl
mov
lds
add
jo,pn
fsts
inc
inc
or
add
lcall
jne
inc
mov
pop
lcall
sub
shrl
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
stc
fildll
mov
fldt
arpl
aad
xchg
dec
inc
shlb
or
imul
nop
ds
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
ljmp
adc
stos
fimuls
xchg
push
adc
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
icebp
jmp
xor
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
and
xchg
dec
dec
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
pop
mov
jnp
inc
mov
mov
adc
out
mov
sbb
loopne
aad
inc
add
dec
test
dec
movsb
lea
lfs
xchg
dec
cmc
call
push
ficoms
push
mov
fwait
pop
out
xor
push
sti
call
jo
or
or
cltd
dec
or
xor
sbbb
xchg
sarl
sbb
push
repnz
movsb
fnstenv
dec
adc
mov
rcr
mov
mov
test
pop
jecxz
mulb
ret
int
lcall
lods
mov
mov
and
or
pop
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
dec
mov
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
ret
inc
movsl
fcompl
xchg
orl
sbbl
jbe
dec
push
push
aas
sub
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
inc
es
mov
sbb
std
and
xchg
jp
dec
mov
fdivrs
sbb
mov
jge
pop
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pop
xchg
mov
sub
and
and
call
cmp
enter
pop
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jo
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
lock
or
int
imul
push
sub
icebp
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
sub
out
mov
enter
sbb
push
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
dec
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
rol
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
mov
mov
pop
adc
add
inc
stos
int
test
inc
add
dec
jle
lods
jle
mov
sbb
cs
jnp
in
movsb
pushf
dec
leave
cmc
je
scas
ss
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
mov
adc
sbb
mov
ds
pop
mov
sti
mov
in
and
sbb
call
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
fucomip
jl
subl
enter
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
aad
repz
ret
loopne
dec
pop
inc
jbe
repz
sbb
and
gs
cmp
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
cltd
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sbb
mov
in
mov
mov
ret
mov
add
mov
hlt
das
rcrb
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
or
ljmp
popf
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
or
pop
lcall
sub
shrl
inc
mov
leave
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
dec
fildll
jbe
fldt
arpl
insb
sub
lds
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
loop
mov
mov
xchg
test
dec
mov
cmp
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
test
xor
sbb
or
fucomi
jge
shrl
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmp
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
pushf
jmp
xor
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
cmp
jo
jb
dec
bound
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
cli
popf
scas
inc
movsl
fcompl
xchg
xlat
or
push
add
jbe
dec
icebp
push
aas
out
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
andl
mov
mov
and
xchg
jp
dec
inc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
ficoms
sub
push
ds
and
call
cmp
cltd
enter
sbb
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jno
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
adc
imul
fwait
lea
mov
inc
adc
sub
mov
dec
mov
popf
xchg
lock
adc
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
ljmp
push
out
mov
enter
sbb
popf
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
shlb
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
andl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
sub
mov
ret
loopne
dec
pop
inc
jo
repz
sbb
and
gs
out
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
dec
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
leavew
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sub
pop
jl
mov
decb
cmp
or
sbb
push
cwtl
sub
das
inc
pushf
dec
and
xchg
cmpsl
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
shll
add
imul
sbb
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
xchg
jno
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
or
lcall
sub
push
cmp
inc
mov
and
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
inc
fildll
fdivrl
mov
bound
dec
push
xchg
dec
inc
shlb
or
imul
nop
ds
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
mov
mov
xchg
test
dec
mov
loop
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
xchg
test
xor
sbb
rol
fucomi
jge
shr
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
add
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
fs
xchg
dec
adc
adc
pusha
sarb
sub
push
mov
rclb
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
scas
inc
movsl
fcompl
xchg
or
adc
add
push
aas
lcall
in
pop
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rol
andl
mov
mov
and
xchg
jp
dec
dec
test
sub
cmp
sbb
inc
ret
fld1
std
jge
ret
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
sub
xchg
mov
mov
and
call
cmp
cltd
enter
repnz
pop
sub
push
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
jp
cmpsl
mov
fwait
lea
mov
inc
adc
sub
ds
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
fimull
fisttpl
out
mov
enter
sbb
or
inc
sub
in
dec
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
dec
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
jl
cmp
imul
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
rol
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
mov
mov
pop
adc
add
inc
stos
int
test
inc
add
dec
jle
lods
jle
mov
sbb
cs
jnp
in
movsb
pushf
dec
leave
cmc
je
scas
ss
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
mov
adc
sbb
mov
ds
pop
mov
sti
mov
in
and
sbb
or
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
adc
mov
call
cmp
pop
inc
ja
repz
sbb
and
gs
fcmovne
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
stos
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sbb
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
out
mov
jp
mov
in
ret
mov
add
gs
cwtl
sub
das
push
pushf
dec
and
xchg
bswap
pop
stos
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
mov
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cmc
movsl
mov
mov
stos
mov
ja
pusha
test
test
inc
mov
inc
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
scas
fildll
scas
mov
mov
bound
dec
adc
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xor
mov
mov
xchg
test
dec
mov
sub
dec
pop
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
mov
mov
adc
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
sti
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
fadds
testl
mov
aam
mov
ljmp
cmp
add
mov
int3
mov
in
xchg
sub
adc
jnp
mov
jns
outsl
inc
sbb
add
mov
punpckhdq
or
mov
adc
test
push
adc
cmc
sbb
pusha
xchg
lods
mov
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
push
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
xchg
jmp
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jbe
jo
jb
dec
adc
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
clc
popf
scas
inc
movsl
fcompl
xchg
add
addl
add
push
aas
jg
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
mov
mov
mov
and
xchg
jp
dec
fs
sub
cmp
sbb
in
fld1
std
jge
cltd
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jns
mov
sub
repz
and
call
cmp
cltd
enter
cmpsb
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repz
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
fistpl
or
int
imul
push
sub
jno
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
loop
cmpsb
inc
cmpsl
fstp
in
out
mov
enter
sbb
and
inc
fwait
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
ds
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
adcl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
xlat
idivl
xor
repz
ret
loopne
dec
pop
inc
sti
jmp
clc
sbb
and
gs
movsb
enter
int
pop
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
repz
mov
xchg
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
out
mov
mov
jbe
orl
pop
add
mov
hlt
das
int3
pushf
dec
and
xchg
push
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
daa
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
clc
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
roll
fwait
lods
mov
jbe
xor
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
or
movsl
jp
mov
pop
in
scas
fsubr
pop
fisubs
movb
lods
cwtl
dec
enter
lahf
imul
dec
xorl
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
in
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
in
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
roll
fwait
lods
mov
jbe
xor
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
or
movsl
jp
mov
pop
in
scas
fsubr
pop
fisubs
movb
lods
cwtl
dec
enter
lahf
imul
dec
xorl
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
inc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
pop
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
and
lcall
sub
shrl
inc
mov
fldl2e
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
neg
scas
mov
imull
mov
mov
bound
dec
outsb
sub
pop
sbb
addb
imul
nop
ds
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
push
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
xor
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
push
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jo
jo
jb
dec
stos
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
pop
mov
jnp
inc
mov
mov
adc
out
mov
sbb
loopne
aad
inc
add
dec
test
dec
movsb
lea
lfs
xchg
dec
cmc
call
push
ficoms
push
mov
fwait
pop
out
xor
push
sti
call
jo
or
or
cltd
dec
or
xor
sbbb
xchg
sarl
sbb
push
repnz
movsb
fnstenv
dec
adc
mov
rcr
mov
mov
test
pop
jecxz
mulb
ret
int
lcall
lods
mov
mov
and
or
pop
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
and
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lcall
mov
jb
sti
or
out
add
push
aas
sbb
mov
ret
push
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
push
popl
sbb
inc
and
xchg
jp
dec
fisubrs
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
jae
in
xchg
mov
outsb
inc
and
call
cmp
inc
adc
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
icebp
pop
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
and
imul
lea
mov
inc
adc
sub
cld
push
or
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
sbb
fisttpl
mov
mov
test
enter
sbb
lcall
lret
fmuls
in
jge
dec
mov
into
pop
stos
pop
lods
mov
mov
and
iret
loope
add
sti
mov
pusha
sbb
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
or
fucomip
jl
adcl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
jne
fld1
repz
ret
loopne
dec
pop
inc
ss
clc
sbb
and
lret
jecxz
gs
out
enter
int
ds
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
pop
mov
xor
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
jbe
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
daa
mov
pop
fld
mov
adc
cmp
sbb
push
cwtl
sub
das
mov
jne
and
pop
stos
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
inc
addb
xchg
pop
lock
je
dec
mov
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
cld
mov
push
or
pop
sbb
inc
sbb
push
xchg
lahf
aam
jg
das
mov
inc
cwtl
imul
pop
fdivrl
repz
mov
hlt
sbb
cmp
decb
fdiv
int
cmp
mov
inc
sub
xor
and
pop
aam
jae
add
cmp
and
mov
pop
addr16
mov
movsl
mov
mov
add
out
push
cwtl
sub
das
push
pushf
dec
and
xchg
push
lret
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
shlb
and
cmpsl
mov
imul
aaa
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
int3
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
add
lcall
sub
shrl
inc
mov
sbb
jae
cmp
sub
arpl
scas
xchg
les
sbb
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
imull
mov
mov
bound
dec
shrb
dec
inc
shlb
or
imul
nop
aas
fwait
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
insb
lods
mov
mov
xchg
test
dec
mov
flds
dec
jle
mov
dec
les
cmp
cmpsl
mov
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
inc
movsb
pop
sbb
jno
iret
push
cmp
ret
outsb
pop
dec
sbb
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
jb
enter
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
into
mov
in
lcall
inc
inc
fcmovnu
loopne
and
mov
mov
sbb
push
outsb
sbb
into
decl
sbb
xor
fs
icebp
testb
sbb
pushl
xlat
mov
ds
sar
cmpl
ljmp
ficoml
xchg
add
sbb
fdivs
cmpb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
or
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
shrb
or
cmp
sub
push
mov
rcrb
mov
das
xchg
mov
pop
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
push
fcompl
xchg
enter
pop
adc
je
add
push
aas
inc
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
sbb
mov
sbb
arpl
adc
test
sub
cmp
sbb
mov
loope
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
and
xchg
sbb
sbb
in
aam
pop
mov
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
les
adc
pop
and
inc
or
test
insb
mulb
add
xlat
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
ret
rcr
add
or
sbb
xor
jo
and
add
pop
mov
scas
sbb
fcomps
stc
leave
push
lea
xor
sbb
cwtl
cmp
xchg
test
jnp
inc
mov
cwtl
sarb
andl
mov
mov
and
xchg
jp
dec
subb
sbb
cmp
fld1
std
jge
mov
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
outsl
xchg
mov
sub
xor
lahf
jle
dec
inc
call
cmp
cltd
enter
std
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
pop
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
push
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
fistps
or
int
imul
push
sub
jge
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lods
lea
adc
mov
mov
test
enter
sbb
insb
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
inc
sbb
fwait
push
jo
cmp
add
rcrl
jo
iret
cmpsl
mov
adc
push
hlt
sub
push
push
and
testl
push
in
dec
scas
fistl
or
mov
rcrl
fcoms
mov
out
cmpl
pop
or
push
popa
xchg
fsub
lcall
ret
pop
pushf
pop
addr16
std
cmpsb
popf
enter
jne
cmp
push
push
sti
fstps
pusha
das
popa
or
inc
mov
inc
inc
sbb
test
or
test
xchg
cmc
mov
push
mov
cli
ss
lds
mov
or
icebp
lea
std
out
mov
enter
sbb
in
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
int
mov
cld
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
addl
imul
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
rol
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
mov
mov
pop
adc
add
inc
stos
int
test
inc
add
dec
jle
lods
jle
mov
sbb
cs
jnp
in
movsb
pushf
dec
leave
cmc
je
scas
ss
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
mov
adc
sbb
mov
ds
pop
mov
sti
mov
in
and
sbb
cmp
cmp
mov
fsubr
mov
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
jl
cmpl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
idivl
xchg
call
cmp
pop
inc
push
jmp
clc
sbb
and
lahf
lret
jecxz
gs
iret
enter
int
mov
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
mov
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
ds
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
xchg
mov
pop
pusha
mov
data16
mov
add
xchg
push
cwtl
sub
das
inc
pushf
dec
and
xchg
scas
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pusha
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
jnp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
dec
movsl
mov
mov
stos
mov
ja
shrb
cmp
pop
inc
mov
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
jmp
scas
mov
imull
mov
mov
bound
dec
fwait
sub
pop
sbb
addb
imul
nop
cmp
mov
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
imul
sub
xchg
test
dec
mov
cld
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
mov
xor
sbb
pop
fucomi
jge
shll
mov
andl
addl
call
mov
mov
adc
xchg
mov
clc
push
fdivrs
aam
inc
and
lret
gs
repz
or
xor
fcoml
mov
rcll
adc
xchg
cltd
pop
inc
stos
dec
decl
test
ds
mov
cmp
pop
sub
out
ds
jp
movsb
fnstenv
or
aad
or
and
nop
addr16
sbb
xchg
mov
rcrb
mov
inc
mov
sbb
scas
xchg
sbb
in
bound
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
cmp
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
add
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
pop
dec
das
jmp
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
fnclex
jo
jb
dec
mov
adc
pusha
sarb
sub
push
mov
rclb
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
sbb
pop
cmp
stos
xor
addl
add
push
aas
ficompl
mov
ret
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
sbb
mov
sbb
adc
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jle
mov
sub
cld
inc
and
call
cmp
cltd
enter
ss
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
sbbl
sarb
fwait
lea
mov
inc
adc
sub
dec
push
or
int
imul
push
sub
jo
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
je
cmpsb
inc
cmpsl
fstp
add
mov
mov
test
enter
sbb
xor
inc
pop
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cmp
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
cmp
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
jne
xchg
repz
ret
loopne
dec
pop
inc
lahf
jmp
clc
sbb
and
lahf
lret
jecxz
gs
or
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
sub
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
pop
add
mov
int
ret
mov
add
xchg
push
cwtl
sub
das
jmp
jne
in
lret
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
cltd
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
jmp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
out
movsl
mov
mov
stos
mov
ja
push
test
test
inc
mov
fucomp
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
imull
mov
mov
bound
dec
enter
inc
shlb
or
imul
nop
xor
mov
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
mov
mov
xchg
test
dec
mov
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
popa
sub
inc
sarb
inc
add
jp
pop
repnz
jo
dec
and
imul
dec
add
mov
shll
inc
call
xchg
push
enter
mov
cmp
mov
mov
imul
pop
cwtl
shlb
mov
xchg
icebp
scas
int3
sbb
scas
jns
repz
inc
fwait
call
xor
jp
aas
in
and
cmc
mov
insl
xchg
sti
aaa
negb
adc
mov
sbb
ss
out
cld
leave
cmpb
cwtl
adc
inc
stos
xchg
adc
sub
pop
push
dec
push
dec
or
sbb
pusha
dec
lods
mov
mov
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
imul
ret
mov
jge
shll
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adc
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
inc
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
loop
jo
jb
dec
cmpsb
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jae
scas
inc
movsl
fcompl
xchg
or
cmp
add
push
aas
fstps
mov
ret
inc
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
sbb
mov
sbb
and
xchg
jp
dec
mov
fdivrs
mov
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
gs
mov
sub
inc
inc
and
call
cmp
inc
popl
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
negb
mov
aaa
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
fcomps
imul
mov
inc
adc
sub
pop
push
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jl
cmpsb
inc
cmpsl
fstp
out
mov
enter
sbb
jo
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
inc
sbb
fwait
push
jo
cmp
add
rcrl
jo
iret
cmpsl
mov
adc
push
hlt
sub
push
push
and
testl
push
in
dec
scas
fistl
or
mov
rcrl
fcoms
mov
out
cmpl
pop
or
push
popa
xchg
fsub
lcall
ret
pop
pushf
pop
addr16
std
cmpsb
popf
enter
jne
cmp
push
push
sti
fstps
pusha
das
popa
or
inc
mov
inc
inc
sbb
test
or
test
xchg
cmc
mov
push
mov
cli
ss
lds
mov
or
sahf
lea
shl
mov
enter
sbb
jmp
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
mov
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
sub
cmp
loopne
dec
pop
inc
mov
repz
sbb
and
lahf
out
enter
int
fdivl
inc
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
mov
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
outsb
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
add
pop
add
mov
jbe
sub
cmp
add
jbe
xor
pushf
dec
and
xchg
add
in
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
xchg
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
aad
mov
mov
stos
mov
ja
das
test
test
inc
mov
adc
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
or
imull
mov
mov
bound
dec
or
xchg
dec
inc
shlb
or
imul
nop
xor
mov
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
fwait
lods
mov
mov
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
popf
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
ja
ret
pop
mov
cmp
cmp
aad
aas
out
xor
lahf
cmpsl
mov
pop
fdivrl
ficoml
xor
dec
xchg
test
mov
xchg
test
lea
rcl
push
xor
mov
lcall
repz
xchg
mov
hlt
xor
jns
add
xor
add
lcall
or
add
xchg
xchg
sbb
fs
xchg
push
stc
adc
lret
lea
lods
sbb
xor
cwtl
nop
mov
test
add
or
jbe
xorb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
sub
js
int3
xor
and
sub
inc
sbb
mov
ja
ret
pop
mov
cmp
cmp
aad
aas
out
xor
lahf
cmpsl
mov
pop
fdivrl
ficoml
xor
dec
xchg
test
mov
xchg
test
lea
rcl
push
xor
mov
lcall
repz
xchg
mov
hlt
xor
jns
add
xor
add
lcall
or
add
xchg
xchg
sbb
fs
xchg
push
stc
adc
lret
lea
lods
sbb
xor
cwtl
nop
mov
test
add
or
jbe
adcb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
nop
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
data16
xchg
dec
xlat
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
int
scas
inc
movsl
fcompl
xchg
push
or
loope
add
push
aas
jmp
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
mov
jg
xchg
sbb
call
or
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
test
mov
sub
mov
cmovge
call
cmp
cltd
enter
std
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repz
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
sub
or
int
imul
push
sub
lock
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
cmpsb
inc
cmpsl
fstp
out
out
mov
enter
sbb
repnz
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jle
mov
jne
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
xorl
mov
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
rol
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
mov
mov
pop
adc
add
inc
stos
int
test
inc
add
dec
jle
lods
jle
mov
sbb
cs
jnp
in
movsb
pushf
dec
leave
cmc
je
scas
ss
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
mov
adc
sbb
mov
ds
pop
mov
sti
mov
in
and
sbb
xorl
pop
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
or
fucomip
jl
sbbl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
mov
call
cmp
inc
fs
clc
sbb
and
gs
jbe
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
cmpb
push
jb
mov
lds
cmp
xor
adc
stc
push
push
xchg
cmpsl
outsb
xchg
pop
lock
enter
add
push
xchg
pop
stos
xchg
push
fcmovbe
sbb
fistpl
xchg
std
cmpsl
movsb
jecxz
cmpb
jg
lret
jno
fsub
fwait
out
js
inc
shlb
lds
stos
fwait
lret
or
data16
xchg
adc
aas
imul
in
mov
lret
das
shrb
sub
lea
in
aaa
mov
mov
cwtl
mov
mov
xchg
sub
add
mov
dec
mov
mov
or
sbb
faddp
loopne
dec
pop
inc
jmp
in
and
lret
jecxz
gs
xchg
enter
int
pop
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
test
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
out
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sub
ficomps
mov
mov
cmp
add
fldcw
cwtl
sub
das
xchg
pushf
dec
and
xchg
pop
lret
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
inc
addb
xchg
pop
lock
je
dec
mov
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
cld
mov
push
or
pop
sbb
inc
sbb
push
xchg
lahf
aam
jg
das
mov
inc
cwtl
imul
pop
fdivrl
repz
mov
hlt
sbb
cmp
decb
fdiv
int
cmp
mov
inc
sub
xor
and
pop
aam
jae
add
cmp
and
mov
pop
in
mov
inc
mov
mov
add
js
xor
pushf
dec
and
xchg
leave
lret
fsubr
test
xchg
leave
pusha
fsubrs
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jno
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
roll
fwait
lods
mov
jbe
xor
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
or
movsl
jp
mov
pop
in
scas
fsubr
pop
fisubs
movb
lods
cwtl
dec
enter
lahf
imul
dec
xorl
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
fbld
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
ds
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
les
lcall
sub
push
cmp
pop
inc
pop
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
imull
mov
mov
bound
dec
mov
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
test
mov
mov
xchg
test
dec
mov
jmp
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
int3
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
sbb
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
lea
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
das
loop
xchg
dec
adc
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
pop
popf
scas
inc
movsl
fcompl
xchg
rorl
addl
add
push
aas
hlt
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
roll
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
jl
mov
and
iret
inc
sbb
pop
sbb
idivb
aad
mov
cs
sti
dec
inc
lcall
pop
in
mov
testl
xchg
mov
xor
in
xchg
test
mov
jae
xor
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
mov
pop
scas
xchg
hlt
or
enter
jbe
dec
fisubrl
sbb
aas
mov
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
sbb
mov
sbb
lods
and
xchg
jp
dec
push
test
sub
cmp
sbb
xor
fld1
std
jge
inc
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
rcll
cld
sub
xor
lahf
jle
dec
inc
call
cmp
inc
sbb
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jbe
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
jp
or
int
imul
push
sub
idivl
and
repz
les
jl
ss
sbb
imul
xchg
lock
pop
mov
imul
xor
sbb
aas
xchg
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
cmp
inc
pop
mov
jmp
cmpsl
pop
insb
ja
ss
jno
pusha
jmp
stos
in
jno
cmc
mov
mov
in
out
rolb
or
mov
add
cmp
repnz
xor
xchg
xchg
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
rcrl
addl
mov
fisubrs
popf
xchg
fnstsw
adc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fstp
fsub
mov
mov
test
enter
sbb
out
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
lods
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
fucomip
jl
andl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
push
idivl
in
call
cmp
ret
loopne
dec
pop
inc
je
repz
sbb
and
lahf
lret
jecxz
gs
gs
int
mov
inc
int
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
sbb
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
xchg
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
lds
pop
adc
mov
adc
cmp
sbb
push
cwtl
sub
das
cmp
jb
pop
stos
fsubr
test
xchg
leave
pusha
aad
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jmp
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
arpl
lcall
sub
push
cmp
pop
inc
sbb
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
sbb
fldt
arpl
into
sub
sbb
addb
imul
nop
cmp
mov
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
mov
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
call
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
dec
jmp
xor
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
lret
xchg
dec
xchg
sub
or
cmp
sub
push
mov
rcrb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jmp
scas
inc
movsl
fcompl
xchg
lret
or
xchg
add
jbe
dec
inc
push
aas
iret
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
sbb
mov
sbb
loope
adc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
insb
xchg
mov
sub
scas
inc
and
call
cmp
testl
sbb
cltd
call
or
out
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
add
rorb
fisttps
inc
inc
ficompl
adc
mov
idiv
je
mov
adc
out
inc
sbb
cmp
pop
outsl
les
std
lock
fistpl
lcall
cmp
lock
xchg
scas
mov
inc
sarb
js
fistl
xchg
push
cmp
pminub
shrb
fwait
pop
xchg
mov
sub
mov
lahf
jle
dec
pushf
call
cmp
cltd
enter
jmp
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jae
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
dec
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
jg
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jecxz
cmpsb
inc
cmpsl
fstp
fucom
mov
mov
test
enter
sbb
leave
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xlat
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
sub
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
mov
pop
call
cmp
ret
loopne
dec
pop
inc
jge
repz
sbb
and
jecxz
gs
mov
int
push
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
push
mov
lods
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmp
mov
scas
mov
adc
cmp
sbb
push
cwtl
sub
das
mov
adc
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
fmulp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
add
xchg
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
shrb
or
xchg
adc
dec
mov
in
mov
les
xchg
imul
xor
movsb
fidivl
push
gs
fwait
pop
call
pop
mov
jmp
cmpb
sbb
daa
loopne
hlt
je
and
xor
je
mov
out
mov
ficomps
aam
into
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
lcall
lcall
pop
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
pushf
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
push
pop
lcall
sub
shrl
inc
mov
xor
cld
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
rcr
scas
mov
imull
mov
mov
bound
dec
and
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xchg
lods
mov
mov
xchg
test
dec
mov
add
dec
leave
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
jbe
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sub
jo
jb
dec
mov
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
out
scas
inc
movsl
fcompl
xchg
xchg
or
int
add
push
aas
cmc
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
roll
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
jl
mov
and
iret
inc
sbb
pop
sbb
idivb
aad
mov
cs
sti
dec
inc
lcall
pop
in
mov
testl
xchg
mov
xor
in
xchg
test
mov
jae
xor
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
aas
popf
scas
inc
movsl
fcompl
xchg
xlat
or
out
add
jbe
dec
push
push
aas
rcrl
mov
ret
sbb
popf
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
or
adc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
mov
sub
call
cmovge
fdivrl
mov
inc
popl
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jne
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
inc
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
add
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
ret
inc
cmpsl
fstp
fsubp
mov
mov
test
enter
sbb
mov
inc
push
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
inc
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
jbe
repz
ret
loopne
dec
pop
inc
jmp
clc
sbb
and
lret
jecxz
gs
bswap
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
push
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmp
ficomps
mov
pop
mov
mov
add
cmp
hlt
das
or
daa
lret
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
lea
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
daa
movsl
mov
mov
stos
mov
ja
mov
cmp
mov
mov
jae
cmp
sub
arpl
scas
sbb
pop
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
imull
mov
mov
bound
dec
imull
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
jbe
mov
mov
xchg
test
dec
mov
imul
pop
dec
les
cmc
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
sbb
xor
sbb
out
fucomi
jge
sarl
mov
andl
addl
loopne
sub
dec
aam
fcoms
and
xchg
jbe
pop
jae
inc
insl
icebp
out
xchg
jae
mov
arpl
or
add
mov
repz
repz
sub
sbb
sub
out
jne
cmp
fmull
negl
inc
fwait
clc
lock
mov
movsl
stc
stos
into
sbb
xlat
mov
shl
dec
ret
fcmovne
inc
cltd
cmp
lcall
dec
mov
ss
xor
iret
mov
sbb
inc
cli
lret
dec
test
aaa
mov
mov
jae
sbb
dec
or
bound
sbb
and
cmp
ljmp
mov
push
dec
push
test
xor
sbb
jg
fucomi
jge
rcrl
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
and
mov
rcll
sbb
leave
rclb
fninit
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
and
jnp
cmpsl
add
nop
xor
ss
adc
repz
and
int
inc
sub
push
fs
iret
mov
push
and
lret
into
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
pop
dec
add
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
jmp
repz
lock
cmpl
jbe
lret
lock
fiadds
dec
inc
push
orb
add
int
movsl
add
push
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
dec
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
pop
loop
xchg
dec
xor
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
movsl
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
inc
dec
add
mov
iret
or
int
inc
sbb
pop
inc
test
dec
jno
and
aad
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
shll
test
leave
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
adc
pop
ljmp
mov
adc
addl
jbe
dec
out
xor
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
data16
int
mov
add
test
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
dec
xor
mov
sbb
insb
push
push
xchg
arpl
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
sbb
mov
sbb
mov
or
sub
cmp
sbb
xchg
fld1
std
jge
aam
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
pop
jne
jge
push
dec
test
sbb
mov
pop
cmp
call
ret
loopne
inc
adcb
in
xchg
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
xor
xor
in
sbb
ss
sbb
mov
mov
mov
xor
rcll
push
pop
jne
mov
sbb
pop
sub
mov
lds
sbb
sbb
jecxz
sahf
sahf
xchg
cmp
js
jp
mov
mov
gs
pop
aaa
cwtl
rorb
andl
mov
mov
and
xchg
jp
dec
adc
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
in
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
fwait
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
into
mov
mov
jmp
dec
jo
arpl
movsl
idivb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jo
mov
sub
dec
inc
and
call
cmp
inc
scas
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
jbe
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
loopne
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
scas
pushf
dec
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
pop
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
adc
or
int
imul
push
sub
jle
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
ja
les
jl
jnp
hlt
stos
jge
or
add
sub
cwtl
inc
ja
mov
or
jb
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
loop
fwait
lret
or
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
je
cmpsb
inc
cmpsl
fstp
sub
mov
mov
test
enter
sbb
xor
inc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
ss
lds
lds
lock
sbb
flds
sahf
inc
mulb
jmp
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
out
lcall
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
dec
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmp
fucomip
jl
orl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
loop
test
movb
inc
pop
mov
scas
jg
mov
sub
pop
push
inc
jbe
loop
test
mov
mov
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
mov
push
mov
lret
repnz
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
mov
mov
sbb
loop
loopne
dec
pop
inc
popa
jmp
clc
sbb
and
lahf
lret
jecxz
gs
and
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
xor
sbb
in
jnp
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
cmc
loope
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
jb
xchg
out
cmpsb
cwtl
dec
enter
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
jge
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
movsb
inc
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
out
rolb
jns
or
dec
jmp
inc
test
or
nop
inc
jne
and
mov
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
mov
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
adc
pop
or
mov
testb
add
ljmp
sub
lret
fsubr
test
xchg
leave
pusha
fldt
cmpb
ljmp
push
sbb
cld
xor
mov
es
stos
lds
mov
or
test
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
out
les
test
cmp
mov
pop
icebp
imul
inc
hlt
popa
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
jbe
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
in
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
out
test
xchg
fwait
outsl
ljmp
in
cmpsl
jnp
mov
stc
insl
lsl
call
inc
je
bound
lea
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
mov
shll
fidivrl
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
and
pop
lcall
sub
push
cmp
mov
call
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
les
sbbl
jge
subl
adc
sub
push
inc
or
outsb
mov
push
fidivrs
and
cmpl
sbb
xchg
imul
test
movsl
jp
enter
push
adc
add
mov
loop
dec
in
shrb
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
out
fildll
push
mov
mov
bound
dec
ljmp
fstpl
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
push
andl
jmp
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
xchg
in
add
mov
push
test
jle
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubrs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
ret
adc
leave
ret
iret
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
jno
xchg
test
dec
mov
adc
dec
push
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
jecxz
hlt
int
ds
in
sarb
popf
xchg
pop
adc
sub
push
mov
imul
test
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
dec
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
cltd
sbb
leave
or
lcall
gs
adc
xchg
mov
push
cmp
mov
pusha
mov
push
or
inc
fwait
leave
cmc
cmc
jmp
pop
aas
sub
or
imul
jo
fwait
rclb
mov
sbb
push
imul
mov
add
pop
iret
mov
lea
icebp
mov
dec
out
mov
fsubrl
xor
dec
push
mov
add
and
bound
jnp
aam
mov
sub
or
icebp
dec
loopne
stos
jno
mov
adc
pusha
jecxz
push
xchg
mov
jo
call
xchg
cmc
cld
xor
ret
popf
int3
or
repnz
sbb
outsl
sub
adc
test
sub
add
cli
jne
sub
lcall
mov
dec
mov
rorl
cmpsl
xchg
jecxz
mov
mov
mov
jnp
mov
subl
xchg
mov
sbb
jmp
mov
sub
cld
xor
and
ds
mov
out
xcrypt-cbc
cmpsl
xlat
adc
popf
andb
add
leave
cmp
mov
fucomp
mov
push
lods
test
sbb
mov
ret
cmc
jmp
mov
lret
movsl
lahf
int3
inc
xor
mov
mov
add
mov
dec
inc
cmc
xor
dec
daa
adc
xor
ret
sub
dec
fdivrs
lea
lock
fcoms
add
push
mov
or
add
or
js
sbb
add
stos
pop
mov
mov
mov
iret
inc
sub
shlb
nop
dec
pop
xchg
xlat
stos
lahf
inc
loopne
push
test
cwtl
mov
xor
mov
add
loope
adc
cmp
jmp
and
pop
xor
imul
pop
inc
jge
pop
or
in
pop
lods
into
ja
cmp
fucomi
es
clc
xchg
mov
cwtl
bound
or
shll
jo
test
movsb
inc
sbb
lock
lock
xchg
imul
pusha
jo
sbb
sbb
sti
xor
push
loope
adc
xor
dec
lds
dec
mov
cs
and
cmp
movsl
push
fiaddl
les
and
or
add
cmpsb
lea
mov
sbb
dec
jo
jns
jg
cmpsl
cmp
fs
push
pushf
jmp
xchg
xlat
stos
les
adc
mov
sbb
push
adc
rcr
in
mov
icebp
fsubl
jl
dec
imul
or
fmull
imul
or
mov
movsb
push
jbe
sbb
inc
pop
lcall
and
mov
cmc
cmc
jmp
sub
addl
sbb
daa
dec
sub
cmc
jp
stc
xor
fucomi
push
pop
lods
xlat
adc
xchg
pushf
xor
enter
out
mov
icebp
push
mov
jecxz
enter
mov
dec
inc
cmc
xor
dec
daa
adc
xor
ret
sub
inc
gs
pop
add
adc
repz
inc
popf
jb
add
int3
xlat
jmp
test
and
lahf
lds
add
stos
pop
mov
insl
or
mov
ficomps
cmc
mov
xchg
sub
adc
push
test
mov
enter
push
mov
fcmovne
scas
sbb
aad
rcrb
push
lea
xchg
lds
push
mov
sti
repz
inc
and
mov
repz
insl
aas
cmpsl
jecxz
adc
repnz
sbbb
nop
scas
adc
mov
mov
or
sbb
mov
fwait
push
dec
mov
test
dec
aam
jns
or
gs
add
test
inc
add
mov
adc
call
cmpsl
push
fmuls
mov
and
adc
or
push
je
movsb
popf
xchg
push
mov
sahf
sahf
mov
xchg
fwait
mov
call
shrb
jne
in
std
pop
pop
adc
repz
sahf
shr
add
jl
mov
rclb
inc
stos
enter
cmp
cmp
xchg
xlat
cwtl
sub
cmp
sub
cmc
sbb
push
push
cld
sub
mov
dec
sub
xor
mov
jae
mov
in
xchg
inc
sub
movsl
or
pop
push
fistl
mov
push
pusha
ja
lods
jno
lds
mov
mov
scas
inc
fwait
leave
in
addl
or
adc
in
jge
dec
pushl
push
sbb
fsubs
insb
mov
pop
fisubrs
mov
inc
loope
sub
popf
mov
lea
test
shr
arpl
popf
push
orb
je
and
les
jns
pop
mov
test
add
imul
mov
dec
mov
pusha
movsl
lods
nop
dec
add
or
insl
cltd
ret
push
sbb
mov
divb
js
call
mov
push
pop
sbb
sbb
cli
test
std
mov
pop
dec
cmp
scas
fcoms
data16
jo
xchg
or
mov
add
sbb
xchg
jbe
lods
ficoms
jg
pop
push
fcomp
jae
scas
pushl
cmp
sbb
mov
fwait
push
dec
mov
test
dec
aam
jns
or
gs
mov
xlat
xchg
imul
sbb
gs
in
outsl
out
ret
aad
xchg
mov
cltd
add
mov
mov
cmpb
pop
lret
dec
sahf
dec
movsb
lods
repz
lret
call
jg
aam
sbbl
dec
lds
roll
in
roll
add
out
and
adc
mov
sbb
sbbb
insl
cwtl
ret
dec
lret
lahf
loop
les
cli
or
movsb
shrl
dec
addr16
mov
fucomp
std
and
push
cli
out
mov
rclb
lock
or
xor
jb
fisttpll
sbb
lods
loopne
sub
into
test
or
inc
xlat
fcompl
sti
and
jb
popa
jg
add
and
or
mov
enter
pop
xchg
mov
lock
mov
mov
xchg
push
clc
pop
hlt
or
and
sbb
jecxz
int3
dec
cmpl
mov
cmp
cmc
mov
fbstp
add
xor
mov
lcall
or
mov
icebp
dec
mov
or
add
lods
int
jle
sbb
mov
cld
xchg
addl
leave
xchg
add
cwtl
lret
lret
mov
dec
dec
repnz
shrl
pop
jp
mov
push
mov
sbb
xchg
dec
popf
es
in
jmp
je
push
fdivl
cli
test
test
xchg
xor
dec
pop
inc
stc
aas
loop
adc
push
fsubl
xor
mov
mov
fwait
leave
stc
cmp
pop
sub
inc
out
mov
rorl
imul
or
enter
repnz
fildl
inc
aam
mov
lahf
mov
sbb
pop
insb
mov
in
lahf
mov
fs
xor
push
sbb
sbb
lods
gs
mov
aad
or
cmp
jmp
mov
add
mov
push
jge
sarl
pop
je
fdivs
test
mov
jmp
pop
lock
sub
ss
ret
mov
stos
sarb
fs
dec
arpl
inc
add
stos
les
fucomi
xchg
sbb
scas
mov
ret
mov
adc
mov
fisubl
xchg
stos
aad
pop
sub
lcall
jbe
test
lods
inc
pop
lcall
sub
sub
add
imul
lds
and
cmpl
pushf
loope
mov
sub
in
inc
aam
mov
inc
add
cmp
and
std
jecxz
fs
enter
out
int3
sbb
mov
dec
push
or
dec
gs
arpl
push
mov
rcr
inc
pop
add
inc
roll
stos
push
inc
mov
stc
ret
loopne
movsl
mov
mov
xchg
xlat
popf
dec
sbb
les
sub
test
arpl
cwtl
jecxz
mov
and
aad
lods
fcmovu
or
shrl
mov
sbb
scas
jae
jmp
movsb
in
popf
in
jmp
dec
add
or
xchg
fisttpl
add
inc
push
mov
out
pop
or
imul
ret
xchg
mov
fldt
scas
push
pop
adc
xchg
pop
xchg
cmp
cwtl
pop
mov
sti
adc
test
call
xlat
adc
test
sub
ja
mov
fcomps
movl
ret
push
addl
and
sub
mov
xor
test
int
int3
lcall
mov
lock
pop
adc
jae
mov
jecxz
dec
mov
outsl
pop
add
test
sub
pushf
ret
pop
jl
mov
leave
push
mov
adc
xor
and
dec
gs
les
popf
push
jns
cmpsl
xor
mov
test
mov
lock
add
xchg
push
xchg
mov
testl
sub
inc
rorb
ja
xor
into
pusha
push
fcmovnbe
popf
mov
xchg
dec
sbb
mov
push
xor
add
push
pop
adc
add
adc
test
sahf
inc
push
xlat
sbb
push
gs
sub
sub
stos
out
call
ret
push
mov
pop
aaa
or
in
lea
imul
push
andb
mov
or
mov
pop
jne
in
push
xchg
mov
xor
int3
cwtl
cltd
adc
or
add
or
pusha
xor
push
and
inc
mov
pop
mov
push
addl
ljmp
mov
or
lods
dec
pop
jnp
arpl
pop
sub
adc
imul
mov
stos
xchg
cmpsl
inc
popa
dec
mov
ror
shl
adc
ret
outsb
pop
mov
jmp
xor
icebp
sub
and
sti
out
mov
in
inc
out
mov
addr16
xor
test
adc
xchg
movsl
ret
subb
mov
stos
scas
jo
fld
clc
les
enter
pop
test
xor
test
sub
jle
movsb
mov
mov
shl
mov
mov
test
mov
loopne
out
test
xchg
sti
inc
sbb
sbb
jecxz
mov
cltd
sub
mov
mov
xlat
xorb
mov
fstl
dec
and
pop
stos
push
and
test
notb
or
add
mov
xor
xchg
les
sub
mov
or
mov
stos
mov
inc
lcall
movb
dec
cmp
jbe
loopne
add
cmp
test
jnp
inc
mov
adc
push
mov
mov
dec
cmp
ja
pop
stc
hlt
sbb
out
push
test
mov
out
cmp
arpl
inc
mov
xlat
sbb
das
popf
iret
sbb
xchg
inc
inc
mov
sbb
and
inc
xor
imul
mov
sbb
dec
jbe
fsts
sbbl
jp
inc
xor
mov
test
and
or
push
sub
loop
ret
repz
cld
sarb
fs
mov
adc
or
dec
jno
cmpsb
pop
and
inc
gs
jno
sbb
mov
divb
data16
xchg
xchg
cmpsb
mov
insl
test
outsb
fistpl
sub
adc
jbe
xor
sbb
jnp
jns
dec
mov
loop
mov
addr16
push
or
jge
pop
push
pop
cmp
cmp
imul
mov
jle
loopne
je
out
jl
sub
mov
cmpsl
ret
lcall
dec
inc
aaa
popf
pusha
xchg
cmc
inc
fcompl
sbb
and
sbb
inc
dec
sbb
pop
xorb
popa
pop
sbb
mov
sub
fildl
mov
out
mov
pop
add
inc
push
std
mov
lock
rcrl
and
mov
mov
or
sbb
xor
mov
and
in
iret
add
aam
sbb
push
adc
push
inc
in
mov
leave
sahf
sti
push
lcall
mov
outsb
test
sbb
hlt
cmp
aad
jge
jns
pop
xchg
xor
pop
lahf
xor
sbb
sbb
sub
sub
push
fwait
imul
rcrb
clc
jle
inc
sub
cwtl
clc
daa
js
inc
pop
xorl
inc
hlt
push
ret
jmp
add
int3
scas
dec
lret
lods
out
pop
cmp
dec
cmp
ud1
jecxz
movsl
push
mov
xor
mov
adc
ficoml
out
aam
or
add
lret
xchg
fadds
pop
fildl
les
fisubs
clc
sti
cmpsl
xor
dec
lret
clc
jge
fisttpll
mov
pop
sbb
cmc
cli
ds
and
in
std
dec
scas
fs
psubusw
and
loop
mov
lret
out
int3
stc
inc
sbb
xor
mov
or
fstpl
dec
mov
shl
idivb
insb
sub
cmp
lods
push
pop
sbb
pusha
mov
push
fdiv
repnz
jno
cmpl
mov
dec
mov
rcrl
sub
sbb
aas
fisubs
xor
cmp
scas
mov
stos
cmp
sub
fwait
ja
sti
repz
ror
mov
cwtl
and
dec
inc
hlt
mov
jo
adc
mov
sbb
inc
mov
pop
mov
mov
mov
sbb
mov
stc
sti
test
xor
mov
mov
dec
mov
out
sbb
subb
mov
and
repz
movsl
add
out
fstp
leave
adc
lcall
fs
inc
mov
pop
add
jns
mov
sbb
mov
les
repnz
aad
jge
imul
push
rorl
nop
mov
push
ret
sbb
mov
push
pop
adc
ret
pusha
mov
and
pop
or
mov
in
sbb
push
push
mov
sbb
int
and
cmpsb
into
dec
dec
repz
in
je
jp
cmp
adc
ret
fwait
decb
mov
add
sbb
test
adc
dec
inc
pop
rorl
mov
and
mov
mov
loopne
and
jae
cmpl
loope
pop
push
adcl
clc
xor
dec
lret
test
xor
ffree
xor
add
lods
xchg
leave
pop
lret
lock
lret
movsl
ret
sbb
orl
test
inc
fbld
sbb
ss
sbb
cmp
lret
fistps
dec
mov
call
mov
stc
pop
mov
mov
or
test
pop
sahf
jo
sub
push
ret
add
mov
scas
aaa
mov
cli
jnp
inc
mov
popa
sub
pop
mov
add
ja
or
in
mov
jnp
inc
push
mov
xchg
cmp
inc
gs
fnstsw
mov
mov
mov
sti
and
test
pop
jae
icebp
mov
xchg
cmp
xorb
fwait
jae
push
mov
shl
mov
xor
mov
cmp
jp
add
mov
mov
add
ret
push
lods
xchg
sub
adc
leave
push
push
clc
stos
ss
lcall
popf
scas
mov
jae
fisubl
xchg
rcll
mov
lret
push
add
lret
add
inc
mov
push
push
pop
mov
pusha
mov
jle
mov
std
cli
jnp
inc
mov
add
inc
sbb
adc
sarl
and
sub
dec
and
mov
mov
pop
mov
or
pop
fdivrl
sti
fldz
clc
int3
and
es
jecxz
and
push
push
lret
mov
sbb
inc
sbb
ret
das
xchg
dec
movsb
adc
pop
add
inc
cwtl
dec
and
mov
mov
test
add
in
mov
lock
roll
add
add
adcl
xor
data16
pop
jg
jecxz
push
stos
push
insb
ror
sbb
inc
lahf
mov
jns
xchg
fnstenv
shr
loope
sbb
pop
daa
sbb
les
inc
scas
xchg
ficoml
lret
mov
jp
add
xor
sub
fsubrs
fildl
scas
aaa
mov
cli
jnp
inc
mov
add
rclb
jge
sti
sbb
mov
jnp
inc
push
mov
or
mov
shlb
sub
push
pop
xlat
stc
into
clc
les
mov
cmp
mov
in
pop
adcb
pushf
test
out
mov
cmpl
js
test
or
pop
lea
ss
pop
sbb
ljmp
sti
pop
movnti
mov
sbb
test
lcall
cltd
and
mov
mov
mov
movsb
lds
nop
lds
test
push
test
movl
idivl
jo
xchg
xchg
test
ret
or
jns
das
xchg
fisttpl
outsb
in
add
adc
cmpsb
loope
gs
dec
xchg
or
cmp
mov
inc
out
in
ret
mov
out
adc
push
shll
int
sub
fbld
leave
jge
jnp
inc
push
mov
jp
mov
and
inc
pop
movsl
jnp
daa
loopne
inc
jbe
sbb
jg
sti
sti
and
xchg
inc
loope
cmp
mov
adc
xchg
cmp
subb
adc
pop
mov
test
into
mov
and
and
mov
lods
mov
ffreep
inc
mov
lcall
dec
je
dec
jnp
pushf
cmpb
adc
lcall
les
repnz
ljmp
sub
mov
dec
sub
xchg
popf
or
dec
mov
pop
stos
xchg
int3
dec
aad
cmpsb
push
mov
add
inc
scas
ret
movsb
je
in
lds
and
sarl
repz
lahf
jb
mov
or
pop
mov
cli
sbb
add
ror
push
mov
xchg
inc
outsl
mov
scas
dec
and
dec
pop
xchg
mov
xor
test
pusha
popa
xchg
outsl
sbb
and
jl
or
cs
imul
mov
add
xchg
call
xor
mov
and
jnp
mov
sbb
mov
inc
cmp
add
rcrb
xchg
mov
aam
xor
lret
aas
xchg
push
js
aad
call
pop
inc
push
sub
xor
out
mov
frstor
repnz
xchg
in
mov
fimuls
or
xlat
add
or
xor
or
add
cmp
gs
enter
jne
stos
in
mov
add
sub
push
lods
shrb
outsb
inc
pop
dec
jnp
popf
scas
scas
imul
inc
cwtl
mov
adc
or
xchg
xchg
pop
inc
dec
mov
or
fwait
cltd
pop
push
jg
jmp
and
and
popf
xchg
rcrl
inc
jmp
iret
add
dec
mov
push
inc
or
mov
push
fidivs
out
movsb
cmpsl
filds
clc
cmp
jle
fwait
pop
lds
add
scas
aaa
hlt
mov
sbb
push
cmc
orb
push
icebp
loope
sbb
lea
cli
lret
or
aaa
dec
adc
js
jae
fistpl
push
test
pop
xor
test
pop
sti
cmpb
cmc
add
or
sub
mov
or
inc
shrb
pop
fstl
aas
jb
pusha
jnp
cmp
inc
xacquire
mov
inc
shlb
add
push
cmp
pop
ds
xchg
sub
adc
fldl
adc
fidivrl
cli
mov
lods
pop
xchg
imul
cli
inc
pop
lahf
jne
sti
xor
dec
sahf
jl
mov
mov
hlt
mov
xchg
mov
xchg
hlt
test
jne
fsubs
clc
js
test
or
pop
sub
lea
fadds
pop
cld
sti
mov
jns
add
lods
jo
leave
adc
pop
inc
aas
ljmp
dec
test
shll
mov
insl
mov
dec
xor
sub
mov
dec
sbb
xor
pop
sbb
loop
arpl
mov
xor
in
ror
loopne
mov
xchg
add
push
mov
push
or
jle
push
sub
push
pushf
add
mov
jmp
mov
ror
loop
in
adc
repz
dec
repz
cmp
rcr
or
in
mov
jnp
inc
push
mov
or
lods
push
sub
adc
sbb
cmp
divl
fwait
lea
and
or
data16
sbb
cs
fwait
lcall
loopne
out
mov
into
inc
mov
lea
ffree
loopne
jl
lcall
pop
movsb
mov
in
inc
pusha
add
push
sub
add
push
xor
mov
testb
lret
leave
sarb
pop
leave
pop
test
stos
les
lods
leave
test
int3
sub
adc
xchg
dec
pop
imul
mov
cltd
xchg
fsubrl
cld
mov
jg
push
cmc
sbb
xchg
dec
shrl
jne
outsl
sub
pop
mov
push
or
jbe
loope
lahf
scas
xlat
fcmovne
fsts
jmp
lds
mov
add
jge
fwait
xor
test
ret
mov
insb
jbe
adc
cmp
adc
std
test
js
mov
call
inc
dec
push
or
sub
test
and
dec
sbbb
idiv
mov
push
or
mov
decb
mov
or
clc
cmp
popw
sbb
sbb
pop
push
cmp
pop
rcl
fistl
and
push
sbb
push
cmpsb
jno
scas
push
sub
push
mov
and
scas
pushf
insb
push
cmc
ror
sbb
les
or
dec
test
jne
rol
inc
push
fdivrs
nop
and
mov
inc
jg
scas
dec
xchg
cmp
push
mov
aas
lahf
inc
std
sbb
repz
jno
mov
imul
add
push
xor
ljmp
insb
and
addr16
test
cltd
xor
push
lods
cli
xchg
cmp
test
sub
mov
insl
lahf
insl
incb
aad
jb
and
mov
mov
lock
aad
lret
addr16
xchg
dec
inc
aad
imul
shlb
pop
in
push
imul
sbb
push
dec
ret
pop
pop
xor
sbb
test
lcall
jno
addr16
inc
sbb
shrb
stos
dec
pop
dec
inc
mov
lds
ficompl
inc
mov
sbb
dec
mov
in
stc
dec
inc
fsubl
and
testb
cmp
and
mov
sub
add
sti
fwait
lods
movb
and
fldcw
aas
lahf
fisttps
jle
mov
icebp
sbb
and
sbb
inc
stc
aad
inc
loopne
add
cwtl
fs
loopne
shlb
fs
adc
mov
mov
out
and
cmp
sti
push
mov
mov
ret
adc
enter
adc
add
rolb
hlt
test
aad
inc
ret
fcoms
inc
sbb
idivl
add
ss
and
mov
aam
mov
or
cltd
mov
adc
add
or
mov
jae
sbb
mov
mov
aad
inc
sbb
cli
xlat
dec
pop
inc
iret
test
movsb
sti
dec
sbb
jb
push
movl
pop
in
leave
mov
xor
addl
jl
adc
stc
call
xlat
adc
test
and
sub
enter
sbbl
ret
xorb
jmp
cmp
jmp
cmp
and
std
fldcw
lods
enter
js
mov
adc
jecxz
pop
pop
push
cmp
and
lds
xor
test
daa
pop
cltd
pop
std
cwtl
sbbb
cmp
push
sub
mov
inc
test
mov
lret
loope
dec
sbb
shll
rcrl
or
jbe
cwtl
jae
sti
test
dec
add
into
sbb
int
sub
call
xchg
icebp
mov
insl
add
sbbl
cltd
xchg
adc
cwtl
jecxz
fsubrl
lcall
xlat
test
nop
scas
mov
ss
jae
ficoml
repz
cmp
ret
icebp
add
add
repz
inc
cmp
lret
add
dec
sbb
pop
mov
fnstcw
mov
loop
adc
popl
mov
mov
cmp
xlat
cld
cmp
jl
inc
dec
lcall
insl
fwait
xor
sbb
xchg
rcrl
pop
push
sti
lahf
xchg
pop
cmc
mov
repz
in
push
daa
or
xchg
movsl
ljmp
sarl
dec
xorl
mov
rcll
ret
xchg
aaa
adc
pop
mov
popa
mov
cwtl
std
push
inc
or
mov
ror
ljmp
add
adc
and
daa
pop
xchg
mov
test
xlat
jmp
bound
daa
mov
adc
fistpll
loopne
and
movsb
mov
sbb
lahf
jb
sbb
push
pop
mov
in
sbb
lock
movsl
cld
pop
mov
fwait
pop
addr16
sub
dec
inc
fwait
adc
xchg
pop
rcrb
adc
test
je
loop
lret
les
jb
mov
cwtl
fcomp
push
cmpb
pop
outsl
shll
lahf
scas
orb
sbb
jo
mov
scas
and
pop
je
mov
push
loope
mov
ficoms
jl
std
outsb
dec
daa
inc
lret
bound
cwtl
jl
pop
jmp
jb
ret
xor
dec
mov
iret
jae
lds
out
jmp
fistl
push
push
mov
jo
imul
xchg
rol
pop
stos
les
xchg
movsl
imul
pop
dec
pop
jecxz
mov
in
mov
adc
push
repnz
shlb
adc
mov
mov
dec
hlt
scas
shll
gs
sti
xchg
fwait
mov
hlt
hlt
mov
and
or
movsb
mov
xor
adc
daa
lret
add
mov
inc
lret
mov
movsl
or
or
mov
enter
cltd
jo
add
inc
pop
lcall
lcall
adc
pop
rcrb
jmp
mov
pusha
jp
stc
test
or
outsl
cwtl
mov
loope
xchg
mov
jno
test
test
loopne
adc
cli
pop
xchg
in
mov
std
andl
inc
loope
lea
sbb
leave
cwtl
pop
and
stos
int
imul
xchg
test
push
add
mov
and
xchg
cmpsl
out
sbb
lea
shl
imul
cmpl
into
cli
add
iret
mov
int
mov
jmp
mov
and
pushf
mov
inc
rcrl
roll
dec
sbb
ss
pop
mov
inc
scas
ja
les
enter
out
cmp
mov
mov
insl
movl
loop
cld
sbb
iret
cmp
inc
fwait
imul
mov
cmp
sti
les
or
iret
test
and
mov
and
push
fdivrs
jge
cmp
sbb
fld
clc
xchg
or
push
inc
pop
cltd
je
cltd
nop
sub
mov
dec
mov
test
fsubr
mov
or
dec
adc
call
xor
push
mov
int3
sbb
sbb
test
sbb
pusha
addr16
jmp
push
sbb
sbb
dec
popf
sbb
xor
sub
adc
call
mov
ss
push
lret
incl
mov
aaa
dec
je
fstl
add
cmp
ret
add
das
sub
imul
ret
or
mov
add
and
mov
push
push
pop
mov
mov
ljmp
xchg
imul
aas
cmpsl
xlat
add
sldt
and
test
xchg
sub
add
jmp
jg
inc
insl
jmp
mov
fwait
insl
sbb
fucomi
hlt
std
mov
sti
and
sbb
daa
loopne
hlt
je
test
cmpb
repz
mov
sbb
stos
int3
ja
mov
lods
mov
dec
pop
mov
imul
ficoms
or
mov
imulb
clc
idivb
sbb
int3
inc
sbb
popa
lcall
adc
test
ja
inc
in
stos
dec
sbb
scas
push
fidivs
inc
call
cmp
lods
dec
invd
mov
jl
leave
push
addb
mov
push
pop
adc
pop
mov
popa
pop
jno
int3
fists
pop
nop
outsl
fs
jno
loope
sarl
or
pop
repnz
sub
xlat
adc
arpl
mov
enter
cmpsl
xchg
inc
in
or
or
stos
es
push
mov
fidivrl
xchg
sahf
insl
push
dec
aad
lea
fwait
lea
pop
out
inc
xchg
push
test
cmp
movsb
je
pop
imul
sbbb
loope
ficompl
pop
ja
xchg
cltd
pop
adc
adc
roll
cmc
jp
sbb
popf
xchg
std
xor
pop
add
addl
xor
inc
inc
inc
or
inc
movsl
xchg
sub
pushf
ret
pop
std
jne
pusha
lret
movsl
mov
cmpb
ficoml
imul
dec
sbb
add
nop
pop
cmp
xorl
lods
fsub
cmp
mov
jo
xchg
push
cs
jo
movsl
sbb
cmpb
cmpsl
loopne
movsb
std
sar
mov
cmp
xchg
cld
sbb
add
call
lock
sub
testl
dec
adc
leave
fiadds
int
pop
adc
stos
add
jae
inc
sbb
call
cmpsb
inc
cltd
enter
push
stc
sahf
pop
sub
cwtl
jns
mov
int
repnz
sbb
out
inc
lahf
cld
jmp
and
sbb
xchg
imul
filds
repz
sti
mov
and
pop
mov
dec
or
outsb
shl
mov
cli
sub
jp,pt
lods
sarb
pop
dec
sbb
stos
pop
cli
das
repnz
out
jge
mov
ret
push
add
sbb
sub
xchg
test
inc
cmp
adc
mov
cltd
pop
xor
stos
mov
into
test
jmp
fstl
pushf
cmpsl
pop
test
ficoms
jg
mov
mov
in
test
or
pop
mov
or
sub
int
or
xchg
xchg
inc
push
mov
or
xchg
and
cmp
jae
push
insl
in
insl
or
cmp
out
shlb
cmpsb
int3
pop
sub
inc
inc
push
push
into
test
sub
loopne
jge
lret
mov
mov
add
sahf
cmp
xlat
mov
lcall
and
int
loopne
xchg
lahf
lret
jecxz
xor
rcrb
nop
mov
repnz
mov
adc
mov
lcall
rcrb
aad
test
jnp
push
vphadduwd
movl
sar
mov
jo
test
inc
push
push
inc
pop
mov
or
cld
jp
add
sbb
adc
mov
sarl
jnp
bound
lcall
repz
cwtl
aam
adc
inc
je
jecxz
pop
xchg
lock
clc
add
jmp
xchg
stos
jae
xchg
xchg
push
cmpsb
push
pop
jae
gs
insl
mov
mov
pop
or
movsb
je
seto
insl
imul
cmc
mov
push
ds
hlt
xchg
rep
inc
pop
lcall
rorl
call
mov
push
roll
dec
insl
dec
or
or
enter
les
ja
push
shlb
sbb
xor
ret
pop
inc
add
arpl
push
fwait
dec
mov
aam
jge
or
push
iret
jae
lds
mov
ret
sbb
push
jno
mov
movsb
push
jb
jns
mov
lcall
and
es
popf
push
push
mov
loop
das
cmpsl
xlat
adc
mov
ja
adc
lret
cwtl
dec
cmp
cwtl
lret
movsl
ret
mov
into
out
ja
jb
lret
or
popa
mov
test
jmp
sbb
fisubrs
inc
inc
push
or
int
in
dec
dec
mov
sbb
outsb
cli
sub
xor
repz
jae
bound
add
inc
xchg
add
clc
cmp
mov
pop
test
mov
add
orl
xchg
xor
std
dec
and
fistl
push
sti
mov
inc
into
mov
xchg
cld
repnz
and
nop
fwait
xor
or
lcall
cmpsl
je
and
xor
pop
xlat
jg
mov
mov
cmp
sub
jmp
mov
repz
nop
cwtl
std
shr
notl
jg
sbb
or
mov
iret
out
shr
inc
lret
popa
xor
cmp
ficoml
movsb
cli
xor
fwait
pop
xchg
cmp
int
inc
cltd
outsl
fidivs
sbb
cltd
enter
or
rcrl
daa
sub
outsl
mov
cs
dec
pop
repnz
call
jnp
mov
enter
mov
clc
cmp
xor
cwtl
mov
jle
sbb
mov
push
or
push
repnz
movb
jnp
fadd
mov
movsb
fisubl
jne
addr16
out
jae
fistl
repz
dec
pop
jae
aam
jg
mov
outsb
fcomps
neg
inc
cmpsl
push
andl
cmp
lods
jle
mov
push
cmp
stc
enter
inc
fs
shl
mov
sbb
fwait
mov
inc
testb
les
stc
addl
nop
dec
and
cmpsb
loope
cmp
sbb
aas
pop
lahf
lods
pop
leave
push
pop
lea
int
inc
lret
mov
aam
cwtl
fldenv
enter
test
inc
jb
inc
daa
adc
ficompl
dec
ja
xor
xchg
push
mov
std
pushf
dec
add
pusha
push
cmp
xor
pusha
xor
test
rolb
mov
in
fnstenv
add
test
test
adc
arpl
stos
push
dec
dec
jge
push
test
lret
loop
loope
fists
add
jae
mov
insl
fidivs
faddp
insl
mov
repnz
int
jge
lcall
pop
sahf
xchg
out
gs
cmpsl
push
aaa
test
xchg
dec
int
pop
jg
ss
jge
add
push
popf
outsb
inc
fwait
leave
sbb
rcr
mov
mov
in
call
les
sub
push
jno
dec
cmc
add
xchg
out
jbe
addr16
repnz
mov
fld1
jb
test
pop
inc
dec
out
sbb
xchg
sti
popa
xchg
lret
add
dec
in
fisubrs
aad
push
cmc
dec
pop
jg
inc
lret
xor
imul
iret
adc
insl
xor
mov
mov
jne
sbb
aaa
fiadds
push
dec
jecxz
push
adc
cmpsl
add
movsb
jl
lcall
xor
ljmp
rcl
sbb
shlb
mov
fstl
mov
mov
nop
dec
pop
jae
inc
xchg
insl
dec
cltd
sbb
or
cltd
xchg
cmp
mov
inc
pop
fwait
test
fstpl
mov
mov
inc
mov
jecxz
stc
inc
inc
bound
movsl
fbld
rcrb
popf
sarl
sub
xor
add
adc
mov
xchg
mov
fstpt
movsl
xor
xor
data16
enter
sbbb
inc
mov
sbb
fstl
jnp
fsubrs
jp
das
xor
lds
or
xchg
pop
xchg
dec
sbb
inc
inc
xor
inc
inc
pop
or
in
ss
mov
jg
cs
fwait
lahf
dec
mov
ffreep
rorl
dec
aam
mov
and
push
adc
mov
lret
mov
jns
pop
inc
dec
into
push
shll
ljmp
mov
in
daa
xchg
add
mov
mov
ss
loop,pt
mov
xchg
mov
ret
push
sbb
sbb
and
test
and
addr16
add
inc
mov
push
inc
pop
aad
out
fisubl
repz
fldl
fiadds
pop
repz
mov
jno
xchg
dec
mov
adc
aaa
lcall
mov
mov
add
int3
test
sub
push
or
in
inc
xchg
add
rolb
fdivl
hlt
push
inc
fdiv
mov
jge
lea
cmpsl
enter
adc
mov
cmpsl
mov
xor
ret
mov
add
jecxz
or
and
loop
shl
mov
mov
adc
xor
rcll
add
dec
adc
add
pop
mov
mov
jae
test
repz
inc
int3
sub
cmp
xchg
cwtl
and
or
sub
test
lods
jle
mov
scas
fildl
adc
leave
in
test
rcrl
sub
dec
adc
dec
add
and
push
jb
xlat
insb
mov
int3
out
push
movsl
stc
xor
mov
mov
jnp
fdivs
fcompl
sbb
and
and
in
mov
or
or
dec
sbbb
xor
or
aaa
mov
mov
pop
clc
sti
mov
push
mov
inc
push
ret
adc
dec
or
iret
jns
int3
and
jb
jbe
ret
adc
mov
outsl
adc
stos
mov
sahf
push
test
test
push
in
mov
push
inc
mov
aam
ja
stc
cli
in
test
pop
ljmp
insb
ret
jbe
push
shlb
or
call
mov
mov
jno
call
jecxz
push
pop
rcrb
jg
mov
add
js
fimuls
icebp
jmp
add
bound
fwait
push
dec
mov
int
push
cmp
push
mov
or
lods
push
sub
adc
sbb
cmp
call
cmpsb
mov
out
adc
fisubs
fldenv
xchg
loop
dec
dec
mov
mov
cmpb
fdivrs
push
inc
xchg
mov
xchg
cmpsl
push
test
pop
fmul
test
movl
jbe
pop
cli
out
sbb
add
mov
and
movsl
scas
aas
add
stos
test
push
lods
and
stc
dec
pop
fbld
mov
pop
lcall
and
sub
daa
sbb
ss
jo
in
fildl
fiaddl
add
cld
jp
add
mov
push
mov
lcall
fildl
adc
leave
inc
or
pop
xchg
in
cmp
mov
xor
pop
lea
out
test
ret
rcll
jbe
lret
popf
popa
inc
mov
fld1
lcall
out
call
int3
test
xchg
enter
sbb
sbb
mov
fcomps
insl
sub
in
fdivp
mov
aad
push
repz
pop
pop
stos
mov
out
in
cmpsl
std
rorl
xor
js
cmp
adc
mov
xor
jg
imul
ds
pop
pushf
dec
and
push
push
inc
push
stos
push
test
xor
or
gs
inc
repnz
test
bound
mov
inc
cmp
mov
das
xchg
fisttpl
aas
and
dec
mov
cmp
or
inc
xor
sbb
mov
ja
ror
loop
in
lods
rcrl
bound
idiv
push
mov
and
sbb
mov
add
inc
inc
rclb
cmp
aaa
or
sbb
xchg
jne
mov
or
mov
lcall
rcll
andl
enter
xor
add
mov
sbb
ljmp
ret
into
cltd
jb
xor
push
add
mov
cmp
push
andb
pusha
cli
mov
mov
scas
lock
cmpsl
push
sarb
dec
inc
sbb
sahf
xor
icebp
push
pop
mov
leave
pop
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
sbb
leave
or
sub
sti
repz
fcoml
sbb
sub
inc
inc
fdivrl
xor
js
xchg
bound
mov
and
cmpsb
jmp
jbe
dec
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
or
xchg
mov
mov
pop
xabort
pop
fdivrl
sti
repz
fwait
push
adc
inc
dec
pop
mov
shr
lret
je
sbb
test
adc
fsts
add
and
repnz
mov
sbb
aas
push
cmc
or
mov
and
pop
xchg
lret
hlt
movsl
mov
jg
add
jl
sbb
add
imul
lods
das
mov
cli
stos
repnz
mov
sbb
fcmovnu
dec
sbb
xor
pop
pop
push
in
mov
xchg
fcoms
popf
daa
adc
ret
mov
dec
xchg
mov
lret
push
ss
fldt
jmp
sbb
cwtl
mov
fcmovnb
push
fcomip
sub
and
sbb
add
pusha
push
sbb
mov
adc
cmp
pop
jmp
js
push
xchg
dec
push
sbbb
or
mov
xorb
push
jne
inc
sub
dec
add
mov
inc
mov
into
imul
mov
sub
ljmp
repz
sub
cmp
mov
mov
rcr
adc
sub
inc
bound
adc
fildl
test
repnz
jno
mov
sarb
aaa
stos
test
lcall
dec
sbb
lahf
notl
or
xor
pop
popf
lret
in
jl
ret
add
or
test
sub
movsb
inc
out
jb
mov
pop
mov
add
mov
jge
dec
loop
icebp
adc
insl
jo
jl
adc
es
or
mov
mov
mov
fmuls
jge
jbe
lret
movsl
ret
mov
pop
fisubs
cmpsl
ret
fld
call
fcomi
sub
push
hlt
cwtl
test
stos
cld
jl
lea
movsb
popf
xchg
push
push
cwtl
cmpb
xor
rcll
jns
scas
jmp
inc
mov
pop
clc
jnp
mov
push
icebp
sbb
enter
add
outsl
out
sbb
test
es
lcall
repnz
jnp
subl
ds
mov
testl
fmulp
and
lock
and
inc
push
sbb
xchg
std
inc
sub
ljmp
sbb
mov
xor
push
mov
push
jge
leave
in
and
adc
xorl
dec
adc
add
insb
scas
clc
or
sbb
outsb
mov
push
fidivrl
push
jo
sub
imul
bound
rcrb
lds
out
hlt
dec
xor
and
cwtl
dec
add
xchg
inc
test
mov
popa
in
mov
idivl
pop
cmp
mov
pop
xor
iret
jg
cwtl
dec
cmp
iret
mov
or
and
mov
ja
pop
int
inc
pop
repnz
inc
mov
adc
fwait
arpl
jge
push
and
andb
mov
cmp
lret
fists
lahf
sbb
cmp
aas
adc
push
cmp
lret
add
and
fldt
jge
pop
in
jle
lods
js
mov
test
inc
lods
inc
inc
pushf
xor
sbb
lods
in
rorl
dec
mov
loop
in
nop
xchg
incl
cwtl
lock
sarb
add
mov
sbb
dec
enter
xor
subb
pop
mov
adc
cmp
cmpsl
fldl
bound
and
cmpsb
push
je
inc
xor
das
mov
sub
fwait
int
js
pop
mov
mov
stos
idivl
jns
fisubl
adc
lret
and
mov
lock
mov
add
mov
push
add
lods
movsl
add
ja
mov
dec
mov
nop
and
xchg
lret
stc
push
pop
cld
and
cmp
and
lcall
lret
mov
mov
subl
xchg
push
adc
or
test
or
pop
add
test
lods
jge
fldcw
decb
scas
xchg
add
js
jg
enter
sbb
repz
rolb
push
sbb
mov
dec
mov
xor
jl
sbb
test
inc
cwtl
dec
icebp
rclb
inc
jge
xchg
mov
gs
fwait
mov
mov
xor
in
xor
push
sub
dec
push
and
cs
pop
insb
inc
fsubrs
loopne
push
negl
dec
jae
cmp
adc
sub
mov
loopne
mov
add
xchg
mov
xchg
and
jnp
mov
mov
nop
mov
sbb
sbb
mov
cwtl
lret
pop
mov
lds
stos
inc
in
cmpl
pop
jbe
cld
mov
int
arpl
popf
invd
call
adc
or
mov
mov
push
sub
adc
call
lods
enter
pusha
jle
scas
dec
arpl
or
jg
cmp
add
adc
sub
sbb
pop
mov
cmpsb
mov
xor
lods
addr16
clc
or
pop
lods
repz
add
pop
fidivrs
cmp
std
xchg
mov
test
insb
cwtl
es
imul
and
sub
cmc
mov
add
lret
inc
shll
sahf
fdivr
pop
lods
pop
or
ljmp
mov
mov
jae
mov
fcom
mov
cmp
pop
pushf
inc
mov
jno
lret
adc
mov
dec
scas
inc
std
xlat
push
jmp
in
dec
push
inc
movsl
adc
mov
je
mov
jge
mov
add
lock
push
pop
jae
fbstp
dec
cmpl
stos
fistl
mov
fcoml
mov
mov
push
or
in
repnz
sbb
rclb
push
add
fsubl
nop
jge
sbb
mov
sarl
inc
sub
mov
lahf
mov
or
lea
pushfw
add
std
adc
sbb
sub
or
inc
nop
mov
jecxz
sbb
push
daa
or
ja
push
jne
les
pop
stos
push
mov
loop
aas
sti
mov
clc
sti
pop
mov
lock
mov
adc
jmp
dec
dec
sbb
jmp
push
popf
rorl
icebp
scas
pop
imul
jae
imul
pop
fcmovnu
ljmp
popf
insl
adc
mov
push
cmp
mov
loope
pop
stos
jne
inc
mov
xchg
sbb
es
sub
scas
add
ficoms
jl
mov
cwtl
mov
or
add
daa
pop
rcr
out
mov
mov
dec
inc
or
push
mov
cmpsl
ret
inc
fdivrp
test
adcb
testb
mov
dec
push
add
out
dec
jne
test
popf
mov
pusha
aad
mov
or
mov
popa
dec
xchg
xor
lret
jne
lods
push
mov
and
cwtl
xlat
mov
in
std
lahf
pop
push
les
add
xchg
xchg
jle
aaa
popf
lret
xor
mov
dec
dec
push
in
lea
cmp
sub
mov
into
mov
and
adc
sbb
arpl
icebp
fwait
insl
pop
mov
cmpsb
lds
xchg
int3
mov
lahf
fs
mov
rclb
mov
mov
rorb
cmp
mov
popf
out
mov
dec
sbb
xor
inc
sbb
in
or
add
test
fwait
std
or
add
test
es
js
les
adc
sahf
into
jb
fwait
outsl
mov
ret
gs
sbb
sub
and
add
jne
dec
xchg
ja
mov
call
lods
je
les
sub
cmp
pop
jmp
add
sub
sbb
mov
add
mov
jg
enter
pusha
dec
dec
cmp
movsl
mov
cmpsl
test
stos
stc
pop
loop
jp
loop
jge
arpl
repnz
jp
js
cmpsl
lock
xchg
add
mov
cwtl
mov
addb
push
fisubl
stos
inc
lcall
movb
mov
push
sbb
cmp
repnz
cmp
out
enter
movsl
loop
stos
or
xorl
roll
push
or
les
xchg
push
lods
movsb
sub
jbe
les
mov
pop
test
cmpsb
inc
sbb
out
lret
mov
mov
movsl
inc
sbb
sbb
mov
jo
leave
fdivp
inc
sbb
or
sbb
stos
rcrl
push
loopne
inc
sbb
lret
sbbb
lock
fwait
xchg
jg
fildll
lahf
loope
dec
push
pop
and
aam
xor
jno
push
add
pop
jnp
adc
and
test
fbstp
lret
pop
mov
lods
jecxz
stc
dec
cltd
cmp
mov
xchg
test
cmp
and
lret
adc
or
cld
mov
in
negb
dec
fisubs
out
mov
ret
inc
adc
scas
js
xchg
xchg
bound
inc
jl
rcrb
ljmp
loope
jmp
dec
add
or
insl
les
aam
pop
lods
movsb
sub
stc
xchg
lock
mov
inc
mov
pop
insb
cli
adc
repnz
stc
jo
outsl
mov
cmc
not
int
jmp
shlb
cmc
idivl
shr
idiv
mov
cmp
sub
jle
in
jo
dec
scas
dec
lahf
lret
inc
cmovge
sbb
adc
sub
xchg
mov
jne
xor
lret
pop
adc
or
mov
pop
stos
mov
in
or
jno
xor
jp
ret
adc
daa
arpl
push
rclb
sbb
or
mov
and
mov
ret
mov
lods
ja
ret
dec
fs
mov
and
jo
icebp
fsts
popf
adc
pop
pop
mov
imul
mov
addl
pop
sbb
repz
sbb
dec
mov
std
sti
outsb
mov
test
push
adc
inc
hlt
cmc
adc
cmpb
add
ffree
faddl
or
jb,pt
bnd
stos
or
mov
xchg
cld
fdivl
iret
sahf
inc
out
lret
fwait
lods
out
jecxz
dec
clc
hlt
add
imul
mov
sub
or
subb
xor
das
rcrb
adc
xor
add
jne
aaa
fsts
xlat
dec
pop
inc
xchg
repz
xor
xchg
pop
in
push
arpl
sub
orl
push
adc
outsb
enter
push
mov
std
jno
and
sbb
sbbb
filds
inc
inc
into
es
pushf
push
fwait
leave
loop
jl
inc
leave
push
mull
aam
or
cmpl
mov
stc
mov
and
mov
cmpsb
add
or
xchg
sbb
cld
imul
mov
or
cwtl
arpl
mov
push
aaa
in
xchg
out
push
mov
loope
mov
loopne
mov
dec
cmpb
mov
cld
mov
js
mov
sbb
out
mov
ret
jecxz
sbb
icebp
lock
cmp
inc
out
sbb
inc
scas
mov
inc
dec
jnp
movsl
and
out
fdivs
mov
fisttps
rcrl
out
test
and
mov
fiaddl
shlb
push
sbb
mov
fcmovb
mov
push
enter
pop
jbe
lahf
dec
push
xchg
jnp
es
push
pushf
rclb
add
pop
xchg
push
push
jnp
push
jo
mov
add
aad
gs
inc
mov
adc
jge
cltd
xchg
imul
push
pop
mov
pop
fdivrp
shlb
cltd
iret
sbb
or
sub
sbb
outsl
mov
aas
push
mov
lcall
movsl
ret
lea
lds
push
ficoml
mov
popl
sbb
mov
call
gs
mov
add
jecxz
xlat
xorb
and
punpckhdq
pop
jno
hlt
inc
ret
sarl
sbb
xlat
pushf
js
sub
fidivs
xor
scas
xchg
and
ss
add
sti
mov
mov
idivb
push
stos
loopne
xor
vpsllw
inc
int
sub
push
mov
lock
and
repnz
jg
or
ss
rolb
bound
or
or
in
mov
jnp
inc
push
mov
or
mov
adc
sbb
cmp
call
fnstcw
imulb
aad
sub
inc
inc
stos
cwtl
dec
mov
pop
cwtl
inc
push
dec
inc
push
lret
lcall
cmp
sbb
xor
rolb
jo
sbb
add
mov
sbb
mov
inc
sub
dec
mov
scas
inc
push
xchg
int3
sbb
mov
and
push
dec
add
cmp
mov
pop
out
fs
cmpsl
popa
pextrw
mov
ljmp
lds
sbb
cmp
mov
or
fistpl
stos
repz
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
shlb
ret
or
cmp
fs
testl
xor
subb
ret
inc
ret
cmpsl
ret
shl
rcrb
fwait
or
aaa
cmp
bound
xchg
mov
sbb
pop
jne
jp
cmp
test
xchg
loope
lret
sbb
add
pop
out
add
inc
jbe
lret
aam
cmc
jg
rorb
call
ret
sti
repz
lahf
fwait
jo
or
mov
sbb
xor
cmp
pusha
lret
movsl
ret
insb
test
push
ja
inc
in
dec
push
test
sub
fisttps
ret
imul
xchg
fadd
xchg
mov
aaa
pop
cli
das
test
push
sub
xchg
pop
dec
ss
outsb
test
frstor
pushf
push
mov
xor
jecxz
movsb
fstl
pop
scas
jmp
fwait
test
mov
ffreep
adc
mov
ljmp
jle
fwait
push
dec
mov
cmp
or
iret
cmp
movsb
clc
cld
movsb
movsb
sub
dec
popf
cmp
ret
aam
xchg
mov
out
pop
es
pmulhw
lret
jnp
push
cmp
jg
fiaddl
cmp
icebp
xchg
test
mov
lds
int
stos
mov
stos
inc
insl
xchg
in
rclb
into
ret
sbb
jns
inc
pop
dec
lahf
int3
xor
add
test
xchg
mov
stos
bound
loopne
insl
jmp
stos
das
mov
and
push
mov
je
dec
test
mov
hlt
xchg
xor
push
subb
mov
gs
or
hlt
dec
dec
in
mov
mov
dec
stos
shlb
push
push
lret
icebp
lahf
fisttpl
add
or
lret
mov
pop
data16
leave
inc
icebp
sahf
sbb
cli
or
scas
xchg
adc
jae
loope
inc
sbb
daa
or
mov
repnz
cmp
fs
dec
push
dec
mulb
sbb
call
neg
daa
gs
sbb
movsb
test
dec
or
mulb
das
jge
xchg
pop
cld
push
mov
sub
fistpll
add
clc
sti
mov
pusha
pop
sub
fstpl
in
mov
inc
sub
push
pop
ljmp
xchg
call
mov
lret
imul
rcll
mov
roll
xor
sbb
mov
jmp
popf
ljmp
ljmp
movsl
dec
pushf
mov
in
xchg
push
xlat
xchg
add
push
inc
lahf
xchg
aam
cmp
inc
fcomps
adc
and
jp
xchg
stc
jne
fisubrl
popf
lods
sub
out
lcall
andl
mov
add
pop
sti
fwait
xor
movsb
sub
jmp
fidivl
sub
adc
addr16
leave
es
push
mov
mov
loopne
fiaddl
jnp
jae
int3
cmp
ret
inc
in
cmp
mov
je
inc
push
xchg
fs
jmp
clc
add
push
sti
mov
adc
mov
and
push
fsubr
push
pop
jno
iret
sbb
xchg
int
add
fwait
push
loop
inc
fstps
test
dec
mov
aaa
mov
arpl
push
sbb
lret
inc
rcrl
mov
add
sbb
xor
sub
push
sub
pop
mov
sahf
mov
repz
lds
fs
cmpsl
xlat
in
andl
rcll
insb
xchg
repz
addr16
xchg
xchg
inc
push
mov
or
repz
mov
fdivl
mov
mov
pop
jne
cltd
outsl
add
andl
inc
sbb
sbb
xchg
pop
pop
push
inc
mov
ret
jnp
pop
das
mov
call
jne
popa
or
clc
sti
jae
mov
clc
lahf
in
dec
sbb
repnz
sbb
cmp
sub
inc
ds
xorl
sbb
loop
jge
jae
and
aad
or
inc
cltd
lret
lcall
sbb
ret
mov
adc
das
sbb
fsubrl
pop
sbb
mov
hlt
dec
cmp
negb
data16
lods
pop
sbb
aaa
ljmp
jae
roll
mov
mov
jo
loopne
das
cmpsl
xlat
mov
xor
mov
paddq
loop
or
fucomip
push
loop
sub
pop
inc
lret
js
clc
ret
fld1
lea
mov
lock
mov
and
mov
iret
mov
or
jne
aad
pop
les
movsl
idivl
sub
fildl
lret
mov
mov
mov
repz
fdiv
loope
movl
popf
fldl
scas
or
and
sarl
xor
jl
outsb
sub
dec
pop
lods
sub
jno
pop
sbb
stos
and
adc
add
push
pushf
cmp
jbe
movsl
daa
inc
dec
addr16
xchg
xchg
push
out
mov
or
mov
jb
movsb
cmpsl
test
out
scas
ret
subl
mov
mov
mov
adc
inc
aam
enter
in
mov
pop
repnz
in
dec
ds
mov
push
lods
xlat
mov
mov
cltd
jle
mov
pop
fsubrs
in
aaa
dec
pusha
scas
sub
outsb
aaa
sbb
or
hlt
jl
sub
pop
test
xchg
dec
inc
pop
popa
pop
pop
inc
lret
into
or
sub
fistpl
ret
mov
movsl
mov
clc
sti
mov
jecxz
repz
adc
jo
ret
pop
stc
outsl
fcoml
mov
mov
fisubrs
xor
test
jmp
mov
mov
jae
jns
mov
popf
lret
lret
sub
cmp
mov
dec
mov
xor
and
pop
sahf
xchg
sbb
lahf
fs
iret
inc
shr
roll
das
sahf
ja
aas
lahf
inc
lret
push
xchg
jg
push
js
clc
mov
or
xchg
and
aad
rol
mov
jge
je
mov
fucomp
push
mov
inc
and
shl
jnp
fdivrl
rcrl
push
addl
and
sub
inc
data16
mov
adc
cwtl
dec
and
mov
mov
test
jae
mov
ret
outsl
test
repz
popa
nop
dec
sbb
sub
push
sub
lods
xchg
sub
adc
push
inc
pop
lods
xchg
dec
adc
sbb
fbld
push
imull
vpsubsw
into
in
imul
and
xchg
or
pop
and
sahf
xchg
cmpsl
dec
or
mov
jno
xchg
fwait
pushw
pop
pusha
ret
das
loopne
xchg
loop
inc
fsubrs
dec
xchg
adc
addl
jmp
les
inc
sub
fisubs
xchg
ljmp
push
fdivrs
insl
loope
or
lret
xchg
dec
andl
mov
jecxz
mov
rcrb
lods
fstp
imul
shll
shl
fistl
push
scas
shr
je
sub
mov
cmc
lea
iret
inc
mov
fcomps
fwait
test
lock
sbb
mov
mov
cld
xchg
lahf
ret
cld
leave
ljmp
dec
pushf
dec
and
nop
mov
pop
stos
test
sbb
push
add
lods
push
xchg
lret
mov
xor
dec
sbb
push
pop
dec
lret
or
gs
pop
outsb
nop
lcall
fwait
lods
movb
or
xor
cmpsl
ljmp
pop
bnd
incb
leave
sbb
pusha
xchg
in
imull
arpl
push
mov
rolb
xchg
sbb
ret
sbb
xchg
xchg
mov
ljmp
jecxz
sti
cltd
leave
ret
cmp
xchg
addr16
jno
icebp
inc
out
mov
mov
inc
dec
imul
or
insb
add
push
sarl
sbb
jo
dec
adc
mov
addr16
xor
inc
mov
pop
jmp
jne
test
pusha
mov
outsl
adc
sbb
add
add
ljmp
sbb
xlat
nop
push
fwait
aad
pop
or
les
and
xor
push
ljmp
sub
test
jbe
dec
mov
xchg
test
sbb
push
cmp
divb
mov
fldenv
cmp
cltd
add
dec
les
mov
push
in
aad
push
mov
cmp
or
je
pop
clc
mov
add
in
imul
fiaddl
push
movsl
test
pop
test
xor
aad
mov
fcmovnbe
xchg
mov
cltd
pop
adc
adcb
xor
leave
adc
add
add
xchg
cmp
xor
or
pop
stc
ss
fidivl
mov
daa
clc
iret
mov
call
outsl
pop
adc
enter
mov
call
sbb
pushf
push
push
lods
xchg
sub
adc
inc
in
lods
dec
sbb
repnz
sub
scas
cmpsl
scas
push
clc
mov
bound
mov
ret
push
lock
cmp
adc
cmp
pop
jnp
pop
loop
test
fsts
jl
cmpl
lret
jmp
rclb
pushf
and
add
or
push
in
or
fildll
mov
sub
push
mov
fwait
xor
mov
fcoml
cmp
mov
test
cmp
push
jns
cwtl
dec
inc
push
xor
adc
inc
sbb
push
imul
ret
fildll
stos
shll
andb
test
pusha
xor
xlat
mov
cmp
hlt
jge
sbb
aaa
inc
sub
outsl
mov
and
insb
push
pop
xchg
push
jbe
in
or
mov
cli
xlat
xor
rcl
lret
sbb
add
mov
ds
mov
push
in
inc
or
rclb
movsl
dec
and
icebp
fcoms
test
xchg
add
dec
out
xchg
pop
gs
arpl
clc
and
pusha
dec
fdivrl
mov
nop
mov
inc
out
decl
setb
mov
popf
push
lea
data16
push
icebp
jns
xchg
sbb
sbb
pop
scas
dec
sub
push
mov
fwait
dec
adc
aam
fs
jb
stos
ja
outsb
sbb
mov
jle
aaa
int3
add
dec
sbb
inc
inc
pop
lock
stos
inc
cli
or
jecxz
in
cmp
pop
jae,pt
cmpsl
add
scas
loope
mov
fwait
inc
test
adc
loop
iret
fadds
js
xchg
sahf
mov
add
sub
pushf
es
mov
loop
mov
jmp
xlat
stos
mov
fbld
dec
sbb
scas
or
add
jns
rclb
rcr
add
mov
sbb
ljmp
push
pushf
push
xchg
je
and
bswap
jecxz
ljmp
sbb
stos
stos
mov
ss
jnp
mov
aas
out
js
int3
mov
fs
or
mov
es
out
test
pop
xchg
sahf
sub
test
push
stos
clc
jns
nop
xchg
pop
scas
stos
or
pop
je
cmpsb
iret
lock
roll
add
inc
cld
adc
pusha
fisttpll
xchg
sti
mov
f2xm1
lds
fisubl
sub
mov
repnz
or
or
xchg
dec
or
jl
mov
cmp
add
inc
sahf
lcall
jg
fbstp
test
pop
mov
mov
out
ja
and
fsubrs
push
dec
xorl
ja
fs
insb
xor
jb
sub
arpl
xor
mov
pop
lock
mov
lock
mov
dec
adc
popf
mov
rclb
sbb
mov
or
pop
enter
inc
dec
mov
out
std
add
loope
dec
fimuls
adc
or
add
in
stos
mov
imul
ja
jp
jmp
xor
shll
inc
rcll
scas
fcoms
fs
sti
insl
leave
out
sti
push
lcall
jnp
jae
adcl
sub
mov
pop
add
or
add
xchg
leave
push
cmpsl
test
push
xchg
dec
cmpsl
shl
cmpsb
pop
mov
repz
mov
sbb
or
fld
je
pop
hlt
ret
ds
lahf
fadds
decl
xchg
push
sti
js
inc
lret
out
fwait
mov
cli
cmpsl
dec
cwtl
pop
sub
cwtl
push
loopne
jo
dec
inc
test
incb
cmp
test
inc
fcmovnu
sti
push
push
bound
sbb
mov
inc
or
mov
xor
pop
in
lea
lds
jnp
push
pop
pop
pop
mov
cltd
dec
xchg
mov
pop
roll
sub
add
xchg
insb
leave
push
repnz
lcall
add
pop
data16
sbb
mov
lret
or
decl
xchg
rorb
pop
mov
sti
adc
dec
sbb
cmp
imul
ret
mov
adc
or
push
adc
mov
add
fdiv
cmp
inc
pop
push
arpl
push
inc
inc
inc
xchg
xchg
clc
cmp
sbbl
xchg
mov
outsb
pop
mov
add
and
jg
test
outsb
fsubl
shr
adc
sbb
sbb
bound
mov
inc
mov
xchg
mov
arpl
enter
lds
repnz
inc
pop
test
mov
pop
lds
imul
fwait
sbb
pop
and
add
add
arpl
mov
bound
adc
repz
divb
pop
fstl
pushf
sar
cmpsl
sub
dec
negl
adc
into
dec
pop
loope
fwait
adc
mov
xchg
inc
push
push
cmc
movsl
dec
repz
pop
add
fsub
fstl
inc
aad
ret
ss
inc
dec
jo
pop
ja
les
test
jp
adcb
adc
add
xchg
mov
xor
negl
test
mov
pop
jmp
hlt
inc
pop
adc
mov
sub
and
mov
jnp
push
rol
test
movsb
jmp
leave
lcall
adc
dec
cs
int
sbb
roll
sbb
xchg
mov
sbb
xchg
cmp
test
pop
sub
mov
flds
repz
roll
ss
sbb
hlt
add
in
lcall
sti
dec
push
pop
or
js
inc
int3
cmpsl
dec
add
shll
mov
adc
ja
fldl
je
xchg
jns
cmpsb
sub
jp,pt
fildl
sbb
mov
cmp
pop
dec
enter
int3
inc
xor
pop
xor
push
or
test
cmp
lock
mov
pop
das
or
sub
pop
pop
push
shl
cmp
add
and
or
and
repz
jecxz
movb
cmp
aas
mov
cmp
cmc
orb
subb
xor
lock
outsl
sub
inc
sub
inc
mov
dec
xor
mov
adc
push
pushf
dec
sarb
dec
stc
jne
inc
sbbl
xchg
jge
inc
pop
xor
aaa
jl
dec
mov
aad
ret
lods
lds
pop
ret
inc
inc
lahf
or
sti
push
fmul
jae
scas
push
or
jl
or
sbbl
or
test
cltd
pop
mov
into
and
push
in
xchg
ljmp
stos
stos
fbld
pop
mov
loope
loope
dec
mov
movsb
sub
arpl
jo
aaa
xchg
jae
push
test
repz
in
or
mov
int
xor
orl
jae
mov
cld
xor
scas
push
inc
xor
xor
enter
daa
leave
test
test
cmpsl
mov
lret
push
adc
rcl
lds
jmp
lds
mov
sbb
sti
push
ljmp
lcall
les
push
inc
jmp
push
flds
and
jp
shrl
jbe
gs
cld
movsl
and
sub
cwtl
lret
ret
lahf
scas
fs
in
call
fisttpll
clc
jle
add
inc
push
mov
mov
test
sub
mov
adc
mov
jmp
xchg
sub
sub
stc
into
jns
call
stos
scas
iret
sbb
cld
test
inc
enter
ret
add
repnz
adc
or
test
mov
jns
addr16
dec
xchg
jns
dec
lret
loopne
inc
jecxz
pop
in
sbb
jle
xchg
sarl
lock
xchg
xor
imul
inc
sub
cld
and
mov
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
cmp
dec
dec
and
cmp
lahf
dec
fadd
push
ds
in
leave
mov
pusha
push
fucomi
repnz
cmp
sbb
jl
sbb
cltd
in
notl
shl
movnti
out
push
daa
xchg
enter
xor
jecxz
push
lret
mov
jmp
sbbb
jle
xchg
add
cmp
enter
mov
add
lret
pop
mov
or
movsb
mov
cmpl
mov
cmp
repz
insb
sub
repz
or
subl
test
dec
lahf
lret
jecxz
inc
inc
add
aad
or
stc
cld
jg
les
push
and
fisttpll
jnp
add
push
jmp
xor
loop
mov
add
adc
fidivl
cmpsl
xchg
test
mov
jae
leave
add
addb
xchg
movsl
int
stos
push
mov
mov
sub
push
push
push
popa
xor
adc
sub
mov
mov
inc
frstor
les
dec
xchg
outsl
sti
and
push
cltd
sub
push
mov
shrl
mov
mov
test
gs
pop
das
gs
rcrl
psubd
xchg
mov
or
mov
lahf
test
repz
inc
fldlg2
mov
sbbl
repz
das
mov
loopne
jae
cwtl
iret
inc
fsts
bound
add
xor
lods
out
sub
lock
mov
aam
and
lods
ret
inc
out
in
jecxz
test
fisubrl
lds
lret
imul
lea
push
rcl
mov
jns
cs
xchg
or
out
test
cmpsb
test
mov
cmpsl
push
pop
xchg
out
icebp
or
lods
sbb
cmp
iret
jns
dec
sbb
popf
and
or
push
sbb
pop
testb
out
cs
xchg
xchg
out
cwtl
mov
cwtl
outsb
test
mov
xchg
in
jbe
push
out
stos
mov
xchg
fcoml
pop
enter
enter
push
test
jg
pop
fidivs
mov
sub
mov
add
jne
dec
out
mov
xchg
adc
mov
pop
add
inc
sahf
jnp
pop
clc
stos
scas
imul
cmp
inc
adc
adc
cld
jg
popf
xchg
neg
push
pop
int
adc
sbb
or
shrl
mov
inc
gs
sbb
xor
mov
gs
xchg
push
data16
add
data16
movsb
sub
lea
sub
stc
in
adc
scas
pop
ja
pop
xchg
inc
fs
fwait
loope
adcl
repz
enter
inc
sbb
test
out
shr
inc
lret
dec
notb
lret
call
cmp
fwait
mov
pop
out
mov
push
dec
xor
push
lock
mov
mov
aas
xchg
push
test
mov
das
jge
scas
imul
repz
sub
call
dec
out
jecxz
clc
into
mov
sbb
out
cltd
cwtl
out
sub
lds
rcrl
lds
dec
imul
dec
iret
dec
cmp
iret
or
dec
shrl
cs
into
scas
mov
dec
dec
ss
js
xchg
lods
push
cmp
mov
scas
pop
outsb
fmuls
cmp
and
mov
sti
stos
pop
scas
sbbl
jo
push
push
dec
mov
imul
sbb
lods
xchg
and
scas
shll
or
lcall
addr16
xor
jp
dec
sbb
and
call
lock
sbb
ret
push
sbb
mov
cmp
xlat
push
sahf
xorl
enter
inc
int
nop
inc
cltd
enter
jge
and
stc
mov
cmp
leave
cs
or
mov
lcall
or
fidivl
jecxz
dec
mov
outsl
pop
add
adc
adc
xchg
repz
push
arpl
pop
fbstp
fwait
add
shll
lock
lahf
sbbl
hlt
aam
push
repz
test
cmc
in
insb
jns
sahf
mov
jnp
mov
iret
es
insl
cmpsl
add
loop,pt
clc
std
pushf
or
movsl
and
fwait
mov
lds
fmul
cmp
fdiv
nop
jo
arpl
inc
push
ljmp
xchg
imull
call
jo
xor
mov
rcrl
or
fists
scas
xlat
insb
imul
aaa
mov
cmp
imul
outsl
push
sbb
mov
pop
outsb
inc
mov
mov
aad
ja
int
bound
jge
dec
mov
icebp
das
mov
imul
ret
loopne
stos
inc
ret
inc
mov
lcall
xor
xlat
push
ljmp
les
mov
pop
mov
mov
push
aam
ret
loope
jnp
push
push
in
lds
icebp
mov
push
aaa
insb
scas
mov
fdivr
jl
aaa
mov
cmc
or
cmpsl
jno
loope
ljmp
sbb
test
out
stos
shlb
dec
cs
test
xchg
js
es
sub
pop
sub
repnz
ffree
inc
fs
mov
xchg
mov
loop
lret
mov
std
mov
sbb
shll
test
push
stos
clc
jns
nop
xchg
pop
scas
stos
or
pop
je
cmpsb
iret
lock
roll
add
inc
cld
adc
pusha
fisttpll
xchg
sti
mov
f2xm1
lds
fisubl
sub
mov
repnz
or
or
xchg
or
jmp
inc
lahf
adc
sub
cmp
decb
jo
sub
daa
bound
das
sbb
xchg
sbb
stos
stos
clc
mov
cld
mov
jnp
xchg
sti
sub
notl
jnp
xchg
mov
mov
sbb
or
faddp
xchg
int
push
cmp
or
popf
fdivrl
lret
inc
push
jo
xchg
add
fld
inc
in
xor
lahf
mov
xchg
xor
dec
xor
fcoml
pop
loope
jno
jle
inc
shrl
lock
fsubs
ljmp
addr16
mov
or
adc
loope
inc
das
ljmp
mov
les
jns
addr16
jne
or
lds
call
sbb
jne
fnstsw
pop
adc
mov
lods
adc
pusha
test
xor
popa
mov
and
and
sbb
or
jo
push
jmp
cmp
test
mov
icebp
hlt
add
push
mov
imul
leave
fmuls
js
mov
xor
or
mov
enter
pop
push
pop
mov
lcall
push
inc
test
rcrb
loop
pop
gs
jne
adc
cmp
jno
fucomi
adc
pop
rcll
fcompl
adc
lret
not
in
andl
testb
out
sahf
daa
xchg
sub
or
pop
mov
aad
gs
js
pop
pop
movsb
pop
mov
dec
jbe
lea
pop
in
inc
cltd
lea
mov
fmul
dec
mov
call
dec
mov
inc
fstpt
or
dec
xor
add
dec
rcl
pop
loop
vcmpss
cmp
inc
cmp
mov
mov
or
enter
mov
cmc
cld
or
scas
adcb
mov
sub
dec
and
pop
sub
sbb
ret
xor
int3
lods
inc
imul
sahf
arpl
and
mov
test
jl
addb
sbb
scas
xchg
mov
push
dec
int3
push
sub
sahf
aaa
stos
daa
lahf
inc
mov
pop
pop
in
js
leave
bound
loopne
adcl
and
adc
addl
push
je
mov
xchg
std
ljmp
push
int
mov
sub
test
inc
cmc
push
lahf
jne
dec
xchg
add
push
sbb
jle
aaa
jecxz
xor
mov
pop
fcoml
ja
subb
cmpsl
enter
pop
lret
mov
fsubrs
inc
inc
mov
lcall
orl
ret
jge
fdivrp
lahf
idiv
ja
mov
hlt
ja
imul
add
add
movsb
adcb
les
data16
dec
xor
mov
mov
sub
int3
lods
inc
dec
mov
mov
cmc
sbb
mov
pop
cltd
push
jmp
popa
xor
pop
test
gs
xchg
sar
and
call
in
int3
mov
pop
test
pop
out
divl
decl
or
and
add
sarl
cli
repz
lods
jae
fldl
jmp
jge
int
or
adc
push
fists
outsl
je
ret
mov
in
or
pop
ljmp
xchg
out
push
mov
aaa
popf
mov
mov
mov
xchg
push
cmp
inc
xor
dec
fistps
pop
cmpl
or
push
or
pop
xchg
jle
xor
mov
fwait
clc
pushf
sahf
aas
insb
pusha
push
mov
dec
mov
daa
icebp
and
inc
add
iret
jp
fwait
and
test
cmp
lea
pusha
in
mov
cmp
xchg
mov
fmul
push
jg
mov
adc
jp
das
jne
iret
jne
dec
push
lock
imul
push
cmp
jae
lods
rolb
lods
mov
lahf
leave
test
sub
add
ss
in
mov
je
dec
popf
shl
sbb
or
lahf
insb
add
daa
scas
xor
lods
and
pop
lcall
je
ficomps
mov
push
dec
ss
popf
mov
repz
fs
xchg
enter
dec
mov
imul
shll
pushf
pop
insb
dec
rolb
mov
cmp
clc
mov
lahf
pop
sbb
addb
jb
test
cmova
sub
arpl
in
scas
sub
pop
aad
or
or
cltd
push
out
jns
dec
fldlg2
loop
les
push
add
push
or
sub
xchg
xor
push
sub
sbb
outsb
or
jb
sahf
xchg
fstps
fidivrs
sub
mov
imul
mov
out
push
cmp
shl
outsl
sahf
lods
inc
sbb
jmp
imul
aad
in
jmp
push
mov
inc
shlb
sub
sbb
adc
std
decl
add
mov
sbb
push
ficoml
lret
xchg
mov
mov
dec
xstore-rng
cmpsl
ret
test
xor
fs
xchg
ffreep
xchg
xor
lret
in
pop
sub
mov
sbb
mov
push
xor
outsb
aam
fisubrl
out
repz
les
subl
cmp
or
xor
jno
bound
ret
scas
insb
rolb
inc
scas
cmp
or
movsl
aam
mov
add
xlat
dec
add
repnz
lods
sub
push
dec
jmp
movsl
xor
mov
pushf
andl
xchg
fcomps
ljmp
inc
sbb
insl
mov
imulb
andb
aaa
sub
xchg
dec
int
dec
lret
mov
jecxz
pushf
dec
lods
pop
call
stc
stos
mov
cltd
loopne
jl
shl
push
in
dec
pop
mov
jp
dec
add
inc
xorl
inc
cmp
cmc
dec
lret
in
jb
pop
lods
jnp
out
cmp
jp
gs
inc
fiadds
sbb
add
mov
or
xchg
and
jge
dec
mov
mov
mov
fistpl
mov
jns
pop
cltd
out
clc
sbb
aas
jg
sbb
mov
in
add
repz
xchg
xchg
mov
fsubrl
stos
stos
clc
repnz
cli
or
xchg
test
xchg
jne
mov
xor
ret
rcrb
pushf
pop
inc
pop
insb
jecxz
fbld
or
jle
mov
testb
addb
rcrb
jmp
dec
pushfw
push
leave
ret
cli
cmp
and
push
ja
pusha
xchg
inc
and
xchg
sbb
xchg
push
xchg
movsl
in
in
dec
fcmovbe
mov
jl
fs
jle
flds
cwtl
out
test
dec
xchg
mov
outsl
xchg
add
orb
fwait
repz
jne
mov
and
mov
or
cwtl
js
dec
inc
fadds
mov
insl
sbb
mov
mov
jp
out
fisubrl
popa
loopne
rcrb
sub
in
lahf
jge
dec
xchg
inc
sti
repz
mov
jg
or
cmp
jg
dec
mov
jnp
add
lds
repz
cwtl
add
scas
mov
shlb
xor
pop
pushf
shll
test
jae
pop
imul
jmp
insb
xchg
mov
and
and
out
mov
loope
jle
lods
xchg
jae
shrb
in
fsub
pop
sahf
scas
pop
cmc
or
fdivl
sti
dec
scas
pop
aas
cmpsl
push
xchg
adc
mov
out
lea
fsubrs
sbb
add
andb
add
test
daa
enter
ret
repnz
insb
mov
sbb
and
int3
pop
add
inc
hlt
xchg
fwait
nop
push
mov
jge
sub
fistps
pop
cmpl
or
push
or
pop
xchg
jle
xor
mov
fwait
clc
pushf
sahf
aas
insb
pusha
push
mov
dec
mov
daa
icebp
and
inc
add
iret
jp
fwait
and
test
cmp
lea
pusha
in
mov
cmp
xchg
mov
fmul
push
jg
mov
adc
jp
das
jne
cmovge
shrb
dec
mov
loope
push
cmp
jae
lods
rolb
lods
mov
lahf
leave
test
sub
add
ss
in
mov
je
dec
popf
shl
sbb
or
insb
add
daa
scas
xor
lods
and
pop
lcall
je
ficomps
mov
push
mov
aaa
popf
mov
repz
fs
enter
dec
mov
imul
shll
pushf
pop
insb
dec
rolb
mov
cmp
clc
mov
lahf
pop
sbb
addb
jb
test
cmova
sub
arpl
in
scas
sub
pop
aad
or
mov
and
push
out
jns
dec
fldlg2
loop
les
push
add
push
or
sub
test
xor
push
sub
sbb
outsb
or
jb
sahf
xchg
fstps
ret
sub
mov
imul
mov
loope
push
cmp
shl
outsl
sahf
lods
inc
sbb
jmp
imul
aad
in
in
and
neg
xchg
shlb
sub
sbb
adc
std
decl
add
mov
sbb
test
jl
stos
mov
mov
cwtl
rcrl
xor
and
pop
cmp
insb
aaa
jecxz
sub
sub
adc
mov
shl
and
pop
or
pusha
push
inc
fstpl
loope
jmp
js
cld
divl
sub
pushf
add
in
sub
adc
pushf
cltd
xchg
mov
push
mov
xlat
nop
adc
fwait
int
mov
and
hlt
divb
fwait
repz
iret
sub
mov
jnp
repnz
jge
or
cmp
xchg
push
fcmovb
bound
mul
xchg
les
inc
lods
sahf
cmp
jmp
mov
cmp
and
xor
cld
out
loop
xchg
test
fstl
inc
les
test
sub
mov
lea
sbb
imul
cmpsb
fadd
inc
mov
xor
xcrypt-cbc
cmpsl
rcr
test
lods
je
mov
mov
add
add
mov
dec
roll
popf
adc
xchg
lods
sbb
in
dec
and
or
add
sbb
dec
sarl
mov
xor
push
xlat
bound
adc
divl
inc
mov
dec
add
or
jno
mov
fsubs
inc
popf
mov
jmp
mov
dec
add
mov
mov
fucomp
insl
push
jno
push
in
pop
mov
xchg
cmpsl
mov
and
xlat
cli
aad
mov
push
push
mov
mov
dec
fs
jp
fxch
les
ja
sub
adc
ja
sub
sbb
mov
jecxz
and
stos
iret
pushl
fisttps
jle
sbb
imul
push
in
mov
out
out
pop
test
cmp
test
cmpsb
fwait
cmc
push
iret
sbb
movsb
outsl
xchg
sub
dec
push
pop
subl
xchg
dec
mov
mov
sbb
add
add
cmp
pop
sub
sbb
mov
fnstcw
xlat
clc
out
std
mov
ds
mov
pop
add
dec
or
mov
je
and
iret
imul
inc
xorl
or
or
push
xor
je
shll
add
mov
jb
out
rcrb
fadds
std
mov
or
inc
cmp
int
cmp
inc
pop
xor
cmp
fstl
std
cmp
mov
ss
fidivl
decb
jmp
push
mov
xchg
mov
rcll
add
or
pop
jns
imul
add
and
adc
dec
rcrb
movsb
fidivl
lahf
fbld
add
or
scas
aam
cltd
add
cwtl
cs
mov
jecxz
or
imul
hlt
int
jg
dec
mov
sbb
outsb
cli
and
insl
filds
inc
mov
mov
fstps
cwtl
movsl
pop
clc
es
lret
test
cmpsl
inc
dec
adc
data16
rcrl
inc
testl
fwait
inc
std
dec
rcrb
jle
push
addl
sbb
xor
inc
and
pop
inc
add
arpl
pop
in
xor
test
jbe
pop
mov
inc
xorb
lcall
pop
negl
seta
jg
mov
inc
std
fwait
jmp
popf
enter
push
jo
loop
cmpsl
xlat
add
inc
cmpl
adc
es
sbb
mov
popf
lods
xor
add
mov
adc
mov
push
lret
or
adc
cmpsl
imul
ficomps
dec
lea
popa
mov
jmp
mov
idivb
mov
jmp
mov
imul
mov
lcall
repz
popf
arpl
push
cmp
xor
ret
insl
adc
jecxz
or
in
cmp
mulb
xlat
nop
dec
ljmp
xchg
adc
inc
mov
rcrl
js
xchg
dec
lret
loope
push
cmp
jge
fistpl
inc
jbe
sarb
int
cs
mov
ss
lods
sahf
pop
xchg
fcomi
aaa
cltd
lods
push
arpl
mov
mov
cmp
repz
divb
pop
fstl
pushf
sar
cmpsl
sub
dec
negl
adc
into
dec
pop
loope
fwait
adc
mov
xchg
inc
push
push
cmc
movsl
dec
repz
cltd
enter
mov
int3
add
sbb
pop
mov
fstpt
popf
inc
lret
int
aas
cmp
push
mov
imul
mov
shrb
inc
mov
mov
mov
fsub
add
jg
fbstp
test
pop
mov
mov
sub
sarl
jecxz
inc
mov
jo
jne
out
push
mov
mov
adc
mov
int
mov
sahf
push
loop
cmpsb
imul
push
sahf
xchg
cmpsb
movsb
inc
cmp
xchg
cmp
inc
push
xchg
test
inc
lock
fcoml
jge
and
jbe
sub
mov
fsubrl
sti
iret
fstp
or
mov
cmp
jle
cmp
test
pushl
mov
xchg
dec
jg
addr16
mov
sub
push
push
xchg
xchg
pop
mov
pop
test
es
pop
or
jb
sti
mov
push
out
int3
add
enter
cwtl
hlt
cwtl
dec
inc
jae
je
hlt
pushf
dec
inc
dec
sahf
dec
mov
xor
inc
pop
divb
pop
out
xchg
mov
into
xchg
mov
pusha
shll
xchg
push
push
scas
cli
mov
mov
lahf
cld
test
xlat
cmc
xchg
fiaddl
mov
sub
les
fldt
dec
dec
fisubl
cmpsl
outsb
cmc
xor
jge,pn
mov
addb
sub
dec
jg
push
ja
pop
in
mov
jno
movsb
sbb
inc
subb
cmp
inc
scas
in
mov
cmp
push
mull
xchg
mov
xchg
out
in
scas
addr16
popf
cmc
xor
adc
push
movsb
cli
mov
lahf
fbld
daa
lcall
popa
or
enter
rorl
shrb
inc
and
and
inc
push
jle
rcr
push
mov
rol
sbb
int3
mov
stos
aad
repz
cmp
pop
mov
js
xchg
popl
dec
lahf
lds
add
cmpsb
mov
sbb
inc
cmp
data16
or
sub
inc
in
xchg
jecxz
mov
cmpsb
es
rcl
mov
dec
mov
jle
movsb
mov
loop
xchg
inc
stos
gs
jns
addb
imul
cli
push
inc
pop
and
inc
push
mov
adc
test
pop
test
push
inc
insb
jbe
jecxz
fistps
xchg
sub
pop
loope
add
xlat
in
addl
mov
clc
js
jb
pop
xor
test
decl
adc
and
push
inc
and
fidivl
cli
mov
gs
lahf
inc
add
or
outsl
push
add
aaa
popf
mov
test
test
or
push
cmp
xor
gs
das
cmp
popa
mov
inc
in
inc
xor
mov
mov
pop
add
mov
fistpll
ret
fisttpll
les
mov
jo
fidivrs
inc
xor
pop
lds
arpl
dec
xor
rorb
or
mov
xchg
jl
mov
out
sub
mov
push
jg
cmpsb
pop
outsb
into
in
pop
ret
push
mov
stos
push
sarb
jp
sub
inc
add
jge
jb
and
ljmp
ss
test
adc
insl
ds
mov
addr16
pop
int3
sbb
loope
lods
sahf
lahf
subl
dec
or
jb
add
jge
or
fdivrl
mov
sar
loop
pop
mov
cmp
pop
shlb
in
and
popa
mov
jbe
mov
pop
or
or
sub
mov
adc
in
cld
lret
jno
sbb
xchg
pop
dec
sbb
xchg
loop
outsl
insb
out
loopne
inc
cmpsl
pushf
pop
jg
in
cmp
xor
iret
loop
and
lock
icebp
ret
lret
dec
pop
xor
shl
ds
mov
push
pop
rolb
push
push
lahf
cmp
out
ljmp
push
stos
divl
fcomps
and
push
test
xor
mov
jmp
dec
lret
pop
add
in
mov
in
fistl
lds
inc
dec
icebp
xorl
enter
repz
lret
push
jge
insb
push
pop
xchg
ret
jge
daa
incl
xchg
bnd
xlat
adc
lahf
aaa
shll
pushl
sti
cmc
or
dec
int3
mov
jecxz
enter
mov
cwtl
dec
inc
lret
mov
imul
mov
rolb
inc
inc
dec
pop
repnz
loopne
pop
daa
psraw
adcl
inc
sahf
dec
xchg
lret
clc
jge
pop
dec
aaa
add
cwtl
mov
dec
insl
jecxz
mov
repnz
mov
shlb
dec
ret
out
loopne
push
push
stc
adc
inc
fcmovnbe
les
pop
bound
ror
jle
xchg
inc
mov
gs
push
jmp
sbb
pop
and
iret
adc
mov
dec
gs
mov
andb
mov
cmpsb
enter
lahf
jle
cs
testl
sbb
rcrb
stc
inc
in
scas
out
adc
ds
inc
cmp
cld
jp
stc
clc
pop
rcl
stos
mov
inc
mov
jns
out
dec
sub
jo
ret
fld1
jb
push
jnp
data16
movsl
out
int3
adc
leave
xchg
jle
jl
jb
cmp
and
mov
icebp
add
xchg
pop
push
cmp
je
imul
inc
inc
idivl
mov
in
ja
les
cmpsb
jecxz
jne
mov
xchg
jno
mov
stos
pop
rcrb
sub
add
xchg
std
xor
fstpt
ja
push
push
rolb
stos
xchg
mov
sbb
outsb
or
push
pop
jbe
bound
aam
outsb
lock
stos
gs
push
jge
in
jno
xchg
les
mov
and
cmp
popf
test
jl
mov
adc
mov
shlb
jmp
fbld
test
dec
push
xchg
and
pop
dec
lret
push
mov
loope
mov
outsl
mov
in
sub
fnsave
sbb
fidivl
push
or
xchg
dec
push
in
aam
insl
inc
dec
mov
icebp
add
add
shll
inc
inc
xlat
shlb
shlb
or
sub
mov
mov
adc
cmpb
pop
push
mov
mov
sbb
test
es
dec
pop
inc
fcompl
dec
and
jae
push
inc
and
xchg
sbb
pushf
dec
bound
xchg
mov
jno
test
lret
push
dec
cmpsl
push
mov
mov
lret
lret
add
adc
pusha
ficoml
mov
roll
mov
rcl
sbb
fwait
inc
jne
iret
pop
in
addl
mov
cmpsl
inc
int3
roll
insb
insl
adc
adc
cwtl
xlat
insb
imul
call
sub
dec
aaa
popf
popa
pusha
roll
hlt
xor
jmp
mov
add
or
mov
inc
lcall
cld
stos
add
scas
inc
pop
aad
lods
xor
mov
xor
adcb
xor
mov
mov
ss
mov
testb
adc
test
popa
push
shlb
sbb
test
movsb
push
dec
mov
adc
int3
pop
dec
cs
dec
dec
and
test
lcall
push
pop
xchg
xchg
std
push
gs
enter
sti
sbb
out
jnp
movb
cmc
inc
cli
mov
push
insb
leave
ja
pusha
xchg
mov
push
inc
and
icebp
pop
fstp
divl
xchg
xchg
mov
daa
mov
and
xchg
jg
test
and
and
icebp
sub
loop
push
fistps
les
stos
push
mov
aas
adc
dec
daa
inc
dec
sbb
sbb
adc
add
add
xchg
in
jmp
jns
icebp
das
adc
or
sti
jecxz
or
fs
sub
lahf
movsl
sti
push
xor
dec
push
in
push
push
lds
jo
pop
iret
rcrb
sub
cmp
push
dec
bnd
xchg
pop
and
push
sub
test
ljmp
mov
pop
mov
out
test
sbb
sahf
shll
cmp
mov
sti
lret
cld
dec
fs
out
lods
rolb
inc
fbld
fs
cmp
sub
dec
lret
pop
add
in
mov
in
fistl
lds
inc
dec
icebp
xorl
enter
repz
lret
push
jge
insb
push
pop
xchg
ret
jge
daa
incl
xchg
bnd
xlat
adc
lahf
aaa
shll
pushl
pop
pop
lcall
lahf
jns
enter
adc
hlt
xchg
xchg
jmp
mov
mov
shl
pop
and
sbb
pop
mov
mov
jae
sbb
add
stc
sysenter
lcall
hlt
test
jns
decl
mov
xchg
sbb
ret
push
xchg
ljmp
jp
rorl
pop
add
fcmovu
dec
push
shlb
xor
cld
arpl
jbe
jns
pop
adc
inc
scas
xchg
ficompl
push
or
inc
or
cltd
dec
out
cmpsl
mov
add
cltd
mov
fs
inc
in
push
aad
andl
push
jne
rolb
arpl
add
push
fsubs
stc
mov
fdivp
fidivrs
stos
lds
push
movsb
int
ja
repz
mov
iret
cmpsl
pop
add
jb
pop
out
mov
data16
gs
jo
cmp
sub
repnz
cmp
leave
lret
mov
repnz
rcrb
cmp
inc
int3
push
incl
pop
xor
cld
pop
pop
cmpsl
adc
lcall
xchg
std
lcall
push
sbb
add
mov
mov
bound
loopne
insl
jmp
stos
das
mov
and
push
mov
je
dec
test
mov
hlt
xchg
xor
push
subb
mov
gs
or
hlt
dec
dec
in
mov
inc
pop
stos
stos
push
push
movsl
aad
outsl
push
mov
dec
fs
jle
cltd
jb
xor
cmpsl
loopne
inc
fidivl
std
jecxz
push
mov
inc
icebp
das
inc
inc
ficoms
jl
mov
sbb
pop
in
jae,pt
je
filds
mov
aam
cltd
pop
lods
xlat
mov
mov
xchg
sbb
pop
call
fmuls
cmp
mov
add
fisubrs
pop
mov
inc
mov
stos
mov
jne
adc
pop
stos
les
les
add
out
cmp
xlat
sahf
in
fistpl
std
je
mov
xchg
adc
mov
testl
dec
mov
pushf
sbbl
xchg
dec
mov
sub
dec
fildll
push
pop
into
lret
pop
cmp
pop
lahf
mov
inc
repz
addb
mov
push
xchg
push
adc
pop
scas
dec
cmp
orl
lahf
fwait
xchg
inc
pusha
out
shr
in
jecxz
roll
ljmp
sub
sub
mov
out
adc
nop
pop
sub
sbb
mov
addr16
pop
popf
fistps
sahf
ljmp
or
push
inc
or
xchg
outsb
into
mov
iret
insl
mov
pop
std
call
cmpsb
inc
xchg
inc
cmp
insb
xchg
in
dec
sahf
dec
inc
xlat
leave
jnp
sahf
sbb
add
dec
or
inc
je
loopne
mov
clc
call
cltd
iret
lock
pop
dec
aaa
add
orb
out
sbb
gs
test
xchg
arpl
mov
jne
je
shll
xchg
xchg
lds
jns
adc
mov
xor
or
inc
les
ficoms
adcl
fsubl
popf
icebp
popf
test
lcall
rorl
aad
jmp
sub
jbe
add
jns
or
fdivrs
mov
add
jns
int3
sti
jecxz
addr16
test
jmp
jmp
and
inc
cwtl
or
mov
movsb
inc
xchg
mov
xlat
ja
pop
into
sbb
mov
scas
lahf
jle
mov
rorb
test
inc
ss
adcl
mov
xlat
aaa
push
adc
or
jne
fcmovnb
cld
pusha
mov
push
sbb
or
jae
in
mov
imul
mov
dec
dec
inc
adc
push
mov
xchg
aad
push
pop
int
adc
sbb
or
shrl
inc
dec
and
inc
gs
jae
sbb
dec
pop
jno
add
pop
outsb
fcomps
scas
push
cmp
shrb
xor
mov
fcompl
mov
jnp
dec
add
mov
stos
push
js
repnz
fs
lds
or
movsl
dec
inc
test
inc
xor
adc
cmc
and
cmpsb
cmp
ret
adc
dec
mov
test
jge
cmpsb
mov
jo
popa
bound
xor
cs
mov
jb
push
aas
adc
lret
addr16
fsubrs
xor
subb
push
sub
xor
sub
and
mov
or
rolb
in
ret
mov
sbb
pop
int
dec
or
add
pop
leave
cmp
xor
ret
insb
sub
push
dec
jb
sbb
pop
xor
stos
nop
sbb
stos
movsl
and
dec
mov
mov
xchg
mov
repz
sub
lods
ja
and
divb
sub
jne
inc
mov
pop
call
cmpsl
jno
sti
add
test
roll
movl
nop
xchg
xchg
jl
pop
ljmp
fstpt
sahf
jg
mov
test
jno
add
pop
dec
mov
fistpll
movsb
les
mov
pop
ljmp
pop
mov
mov
mov
outsl
aaa
aaa
imul
mov
pop
mov
pop
scas
mov
push
inc
cmpsl
dec
loopne
popa
je
jne
or
and
or
xor
sbb
adc
rcll
ret
loop
sti
pop
sti
divb
add
mov
pop
cmp
add
stos
inc
add
mov
sbb
test
xor
rcrl
xorb
mov
icebp
pop
cwtl
inc
and
xchg
sbb
test
push
aas
repz
cmp
mov
lds
aad
std
mov
dec
jns
inc
flds
push
xchg
cltd
data16
xor
dec
sbb
popf
push
push
mov
sbb
cmpsl
aaa
cwtl
hlt
cld
jle
mov
sub
imul
ljmp
mov
cli
adc
out
ja
fildll
jl
es
in
pop
mov
out
inc
popf
cmp
enter
jl
or
sbb
dec
int
xchg
cmc
dec
mov
inc
inc
lds
dec
sbb
fistpl
mov
mov
xchg
xor
lahf
in
lods
es
sub
sbb
test
lcall
xor
lds
and
push
shl
ficoms
cmp
lret
daa
outsl
cmp
cmp
push
shll
push
imul
aam
adc
sub
push
xchg
repz
sbb
iret
push
dec
push
inc
cmc
pop
jl
adc
sub
outsb
add
push
xchg
fisttpl
or
addr16
cli
dec
or
inc
add
mov
add
movl
fsubrs
out
jecxz
mov
jo
inc
inc
sub
push
cld
cltd
outsl
inc
rcrl
xchg
mov
icebp
push
movsl
sub
mov
in
add
repnz
movsb
es
rcrb
popa
sub
adc
rcrl
or
ficomps
xor
int
rcrl
pop
xor
add
pop
push
pusha
lods
push
setae
rorb
add
shl
mov
cmp
fwait
sbbl
pop
divl
add
movsl
mul
lods
sub
sub
test
and
sbb
xchg
outsl
dec
ficoms
aad
dec
cmpsl
xchg
test
dec
push
xchg
cltd
nop
std
cmpsb
cmpsb
lret
add
dec
sbb
pushf
pop
mov
leave
jns
dec
sbbb
cmpsb
inc
fdivrl
jmp
push
pop
inc
jo
and
mov
push
inc
and
push
adc
mov
shlb
jmp
fbld
test
dec
push
xchg
and
pop
dec
lret
push
mov
loope
mov
outsl
mov
in
sub
imul
shrb
movsb
jle
pop
mov
jmp
or
mov
out
add
add
xchg
in
jmp
jns
icebp
das
adc
or
sti
jecxz
or
fs
sub
lahf
movsl
sti
push
add
jo
sbb
insl
adc
sti
iret
mov
sbb
lds
mov
or
jne
cmpsl
mov
fimull
or
xor
push
mov
orl
jp
sbb
mul
lds
fildl
outsl
lret
stos
pusha
int
test
cmp
jbe
mov
and
jecxz
hlt
xchg
cmp
add
inc
fcoml
jg
sbb
sbb
add
add
push
pop
adc
mov
lret
mov
push
sarl
inc
sbb
sahf
jne
jge
jmp
and
cld
mov
loopne
xchg
imulb
popa
rcr
lds
loop
pusha
jbe
xchg
cmp
adc
jnp
sub
cmp
inc
xchg
sti
or
in
andb
mov
inc
pop
shl
ja
fnsave
rcll
fsts
nop
shr
stos
sahf
xor
icebp
add
rorb
rcr
jmp
stos
outsb
test
lods
jo
popf
mov
push
dec
sbb
jns
xchg
aam
xchg
daa
jno
cltd
mov
adc
cmpsb
mov
ljmp
xchg
sti
xchg
out
mov
add
mov
cmp
outsb
pop
mov
jmp
xor
leave
loop
add
pop
fstp
divl
xchg
xchg
mov
daa
mov
and
xchg
jg
test
and
and
icebp
sub
loop
push
fistps
les
stos
push
mov
sub
xor
popf
xchg
mov
adc
pop
adc
aad
stc
pop
jb
mov
cmc
sti
fcomi
iret
pop
xor
negl
dec
xor
scas
mov
cmp
pop
mov
add
add
push
subl
ja
sbb
call
mov
fnsave
hlt
mov
cmp
movsl
leave
pushf
imul
xchg
stos
les
sbb
add
or
add
das
inc
pop
fwait
pop
mov
mov
mov
mov
mov
imul
lahf
adcb
and
dec
add
jae
rol
adcl
clc
jb
mov
rol
sub
shlb
inc
shlb
vmulss
mov
jne
cli
or
cmp
icebp
mov
movb
xchg
test
arpl
fs
sbb
or
in
jge
add
mov
js
mov
xchg
inc
pop
sbb
adc
or
cwtl
pop
add
mov
inc
pop
rorl
add
out
pop
adc
repnz
push
incl
mov
test
imul
dec
pop
push
fistl
addb
std
sbb
push
dec
xor
insb
sarb
cmc
mov
cmpsl
jae
test
mov
mov
dec
pushf
mov
mov
sbb
stc
mov
mov
in
pusha
hlt
adcl
add
xchg
test
adcl
sbb
mov
stc
divl
xor
call
cmpsl
dec
icebp
pop
xchg
jmp
add
and
pop
rcrl
jae
cld
orb
and
rcrl
cmp
pop
mov
ret
jp
pop
daa
je
mov
push
imul
jne
sbb
or
add
rcl
jns
cs
jg
mov
xor
popa
mov
and
and
sbb
or
jo
push
jmp
cmp
test
mov
icebp
hlt
add
push
mov
imul
leave
fmuls
js
mov
xor
imul
rclb
push
dec
fistpll
sub
fisttps
leave
push
mov
fwait
xor
insl
and
add
add
clc
jae
adc
pop
jp
add
addr16
xchg
mull
test
pop
std
test
imul
rclb
mov
sarb
sar
jns
push
fwait
push
push
xchg
imul
xchg
out
xchg
in
loope
jb
daa
int3
out
jnp
sub
aas
mov
sub
inc
pop
and
push
mov
or
jmp
stos
fidivl
jmp
movsl
sarl
push
pushf
lds
loopne
mov
enter
pop
popf
jge
dec
ret
incl
jp
rorb
mov
add
mov
push
mov
lret
imul
cli
xchg
fisttpl
lcall
fnsave
dec
jae
mulb
cmp
subl
fsts
shlb
pop
out
xorl
mov
or
adc
hlt
xchg
cmp
xchg
mov
ficomps
sbb
fwait
add
xchg
hlt
repnz
pop
cmpsl
xlat
jmp
dec
sbb
lret
cmp
insb
incl
out
inc
and
inc
fsub
and
pop
orl
inc
test
dec
les
dec
outsb
aaa
sbb
cwtl
mov
push
test
add
xchg
cmp
or
pop
test
adc
lds
sbb
sti
inc
mov
leave
sub
jge
rorb
xor
pop
movb
inc
imul
test
shl
mov
jmp
arpl
mov
loope
lahf
fucom
dec
fs
test
test
int3
ljmp
lods
and
cwtl
pop
xchg
jmp
lcall
mov
add
cltd
mov
fs
inc
in
push
aad
andl
push
jne
rolb
arpl
add
push
fsubs
stc
mov
fdivp
fidivrs
stos
lds
push
movsb
int
ja
repz
inc
test
daa
dec
enter
pop
mov
decl
test
jb
lea
int3
add
mov
adc
ss
pushf
aam
iret
mov
repz
movsb
testl
pushf
mov
lret
sub
inc
add
outsb
add
inc
adc
mov
shll
enter
xchg
dec
push
fs
push
xchg
mov
push
leave
dec
xlat
dec
push
push
xchg
subb
icebp
sbb
dec
out
push
fwait
jmp
jno
mov
push
lret
idivb
lret
sti
imul
jmp
es
lds
xor
mov
mov
push
jbe
xchg
jns
push
icebp
dec
jbe
mov
lods
inc
sbb
ficoms
pop
in
js
ftst
mov
xchg
mov
sarl
aas
sahf
ljmp
imul
js
les
seto
pop
push
ret
or
inc
inc
mov
push
pop
push
cmp
mov
sbb
dec
jb
jns
pop
jmp
cmpsb
dec
cmp
fcomp
jns
sbb
mov
dec
mov
mov
pop
jne
nop
pop
jl
and
push
and
mov
mov
enter
add
sar
sbb
adc
mov
xchg
les
dec
sbb
or
nop
adc
jne
cmpsl
mov
fimull
or
xor
push
mov
orl
jp
sbb
mul
lds
fildl
outsl
lret
stos
pusha
int
test
cmp
es
mov
adc
iret
jns
dec
sbb
xor
insl
loopne
sub
cmp
fsub
mov
shlb
in
lcall
arpl
pop
mov
adc
leave
sub
push
mov
push
jmp
ret
sbb
lahf
inc
pop
dec
inc
add
sbb
mov
sbb
add
mov
and
stos
fisubrs
lret
jmp
lret
popf
js
push
rcrb
sub
push
aam
cmc
pop
push
into
inc
mov
fmuls
jns
fdivrp
lahf
iret
inc
pop
scas
pusha
test
sub
call
insb
movsl
cmp
pop
lea
dec
mov
hlt
sub
ret
ds
jmp
jge
test
jne
inc
add
push
and
sahf
lret
inc
les
mov
scas
jne
add
dec
push
sarl
xchg
rclb
fdivr
push
dec
fsts
cmp
xchg
jp
in
pop
dec
push
aad
fwait
data16
enter
mov
jg
add
orl
lcall
decl
adcb
xchg
cmp
in
inc
dec
xchg
push
adc
inc
fwait
inc
push
or
and
gs
imul
sub
jo
jl
pop
push
mov
dec
test
cwtl
lds
xor
mov
outsb
ljmp
ss
and
fwait
shlb
out
cmc
adc
xor
shrb
ret
inc
adc
leave
rol
jmp
mov
pop
push
mov
icebp
push
aad
or
sbb
jo
mov
push
loop
and
pushf
add
es
int3
pop
push
repnz
add
mov
and
popf
sbbl
push
jae
mov
dec
out
xor
imul
jle
xchg
mov
inc
aaa
ret
jp
mov
fucomi
bnd
int3
xor
mov
andl
out
into
inc
cld
mov
sub
fwait
bound
movsb
mov
fiadds
add
sub
cli
jecxz
inc
cmc
lret
ljmp
and
ja
std
cvtpi2ps
shll
or
sbb
es
out
inc
or
inc
fcomps
gs
outsb
cmp
sbb
roll
dec
mov
roll
jg
iret
sbb
jnp
cmp
jecxz
imull
lahf
dec
test
arpl
push
leave
iret
cmp
mov
in
out
lods
shlb
movsl
popf
fnstcw
mov
pop
cmp
inc
mov
test
push
xor
scas
rcrl
cmp
mov
aaa
movsl
and
test
add
lcall
nop
fldl
dec
scas
mov
mov
pop
jp
ret
sub
jno
lds
test
mov
add
fistl
jb
sti
sub
mov
icebp
push
lcall
mov
int3
out
mov
and
clc
pop
push
das
test
ljmp
cwtl
das
call
insb
lock
stc
xlat
push
xor
enter
add
es
push
mov
mov
fsubs
dec
mov
mov
xor
lock
fwait
scas
inc
push
aad
add
adc
xchg
and
mov
std
dec
add
mov
ss
test
mov
or
out
mov
lds
loopne
add
mov
cli
xchg
insb
sbb
xchg
lcall
cmp
cmpsl
shrl
mov
push
cmp
test
xchg
shrl
mov
fbld
fdivs
pop
in
mov
add
icebp
sbb
js
ds
xchg
mov
mov
xchg
ljmp
add
clc
dec
cwtl
in
mov
cmp
mov
mov
dec
pop
push
jne
dec
jp
movsl
rcrl
pop
fadd
xchg
xor
mov
push
xor
push
sti
sub
repnz
in
push
mov
or
lahf
sub
adc
roll
fs
mov
loopne
sahf
aas
jmp
negl
inc
test
mov
rcll
lds
mov
je
data16
ds
sub
push
cmp
das
mov
hlt
test
mov
lahf
cld
repnz
xlat
lcall
mov
push
inc
and
je,pt
or
test
int3
dec
xor
inc
inc
push
mov
fwait
inc
lret
arpl
xchg
inc
fisubrl
xchg
js
loope
sahf
add
shl
sbb
inc
jmp
andb
add
popl
dec
pop
lret
pop
mov
test
or
adc
xchg
ret
push
cmp
and
movsl
fcmovb
push
out
cmp
addr16
inc
adc
jecxz
inc
cmc
adc
or
xor
inc
std
andl
mov
daa
pop
pop
adc
add
lret
popa
pop
lea
in
mov
push
push
add
iret
sbb
in
pop
inc
jge
jo
sub
frstor
fldt
insl
xchg
sbbb
icebp
xor
ss
aad
dec
mov
aaa
mov
test
and
int3
stc
js
scas
pop
ficompl
cmp
add
stc
mov
inc
out
stos
sub
shlb
jne
dec
mov
bnd
xchg
mov
mov
mov
mov
je
push
rcll
jg
add
xchg
or
clc
jbe
lahf
mov
js
rcrl
xchg
or
or
pop
cli
jg
inc
jge
imul
popf
jmp
xor
mov
mov
push
test
jl
iret
dec
sbb
mov
sbb
ja
out
andl
rclb
lds
nop
jp
add
xor
xchg
push
mov
xor
enter
ret
enter
lret
sub
xchg
add
mov
or
adc
movsl
addr16
nop
pop
adc
dec
mov
lret
imul
les
sbb
ja
repnz
dec
push
dec
cmpl
push
mov
push
mov
sub
retw
adc
cmc
add
test
sbb
lcall
pop
test
lods
inc
inc
mov
mov
jp
bound
pop
and
cmc
out
enter
or
scas
pop
mov
shlb
dec
ficompl
jle
popf
jns
inc
lret
lret
fnstcw
pop
out
xor
xchg
lret
fwait
jge
and
outsb
dec
fldt
dec
pop
aas
orl
sbb
xor
or
dec
push
or
iret
or
enter
mov
in
aaa
push
push
xor
jge
filds
popf
je
mov
mov
adc
or
mov
inc
jmp
aaa
shrl
pusha
cmp
sti
jp
inc
mov
xor
fstpl
or
xchg
add
mov
stos
push
and
mov
fcmovnu
dec
xchg
out
and
push
inc
testb
sbb
sbb
in
adc
movsl
xor
ljmp
fldenv
mov
daa
out
nop
out
push
or
cmp
std
cli
jnp
inc
mov
cwtl
add
or
push
les
ror
addr16
sti
adc
or
cs
add
ret
testb
fucomi
hlt
std
mov
sti
and
sbb
jecxz
mov
mov
sbbb
dec
mov
sti
push
test
jmp
xchg
adc
sbbl
ds
cmc
jnp
sahf
rol
or
jo
and
pushf
mov
pop
ret
xchg
jo
jnp
sahf
aad
test
fiaddl
dec
sbb
les
push
or
int
mov
inc
imul
add
xchg
sbb
adc
or
and
add
jp
add
fwait
add
jecxz
fwait
cmpsb
enter
lahf
jle
scas
pop
icebp
sbb
add
xchg
int
jo
sarb
inc
iret
inc
mov
adc
rcll
or
xor
adc
pop
lods
push
sub
test
sbb
xchg
or
cltd
lea
mov
sbb
stc
or
nop
test
test
mov
xchg
xchg
jbe
dec
ja
mov
rorl
sub
mov
imul
xor
cmc
push
aaa
inc
cmp
sub
pop
cli
inc
mov
cltd
and
mov
fisttpll
pop
rclb
sub
imul
cmp
scas
mov
sti
fisubl
dec
popf
ljmp
lcall
nop
daa
sub
jne
or
testl
adc
pop
xchg
jbe
mov
rorb
dec
hlt
add
push
or
sbb
mov
fwait
push
dec
mov
xor
pusha
mov
out
push
mov
push
push
in
mov
xlat
inc
mov
xchg
jp
pop
fdivrl
fdivrs
cltd
mov
inc
imul
cmpsb
std
add
imul
imulb
stc
sbb
mov
mov
in
and
sub
cmp
ds
push
roll
sub
pushf
addl
bound
cwtl
sbb
test
jne
jns
cmp
sbb
dec
mov
cmpsb
pop
or
mov
popf
lret
and
leave
jp
mov
push
out
movsl
mov
or
xor
sub
pop
pop
pop
xchg
mov
out
ret
js
mov
fcomip
je
fs
inc
push
lret
cmp
jae
or
repz
adc
add
push
xchg
stc
xchg
mov
push
fdivs
dec
mov
not
push
pop
push
ficomps
dec
daa
sahf
add
pusha
jo
ret
shr
mov
sti
shl
std
xor
lock
mov
or
adc
sub
test
ret
add
xchg
popf
fcompl
pop
jecxz
or
xor
sub
aaa
loopne
inc
movsl
aas
cltd
mov
std
or
lcall
dec
outsl
mov
add
rorb
cwtl
movsl
or
cmp
andb
leave
test
fsubr
or
xchg
jno
popf
dec
cmp
xchg
sbb
repnz
xor
adc
mov
push
lds
stos
std
adc
pop
inc
sarl
inc
lahf
pop
lea
fidivrs
add
fstpl
jmp
adc
jne
lock
mov
mov
rcpps
pop
jns
shrl
dec
cmp
lods
lcall
push
loopne
fidivrs
mov
imul
xorl
mov
mov
cmp
pop
push
lds
les
jmp
ljmp
fucomip
les
loopne
mov
bound
shlb
rcrb
adc
adc
ffreep
push
add
and
leave
into
enter
bound
in
jns
ror
pop
lret
inc
push
push
out
rcll
pop
push
bound
sub
imul
test
mov
sbb
sbb
mov
jnp
pop
loop
test
fsts
xchg
cmp
cmp
mov
cmp
mov
dec
cmp
repz
sbb
rorb
in
sbb
inc
pop
adc
jo
adc
lahf
cmp
dec
notb
push
call
lock
inc
add
test
cmp
in
jb
fwait
out
adc
jbe
popf
bound
loop
je
cmp
aaa
imul
or
xor
insl
roll
xor
and
xor
cmpsb
inc
repz
pop
mov
test
add
push
sbb
mov
cltd
adc
mov
cmp
imulb
add
xor
and
mov
xor
push
push
mov
sar
jg
sahf
mov
popf
lret
iret
xchg
test
mov
dec
jbe
imul
std
xor
mov
dec
dec
mov
leave
push
xchg
clc
jmp
push
lock
adc
cld
push
dec
push
push
pop
in
jp
pushl
rorl
sbb
call
out
imull
and
sbb
push
je
cmpsb
push
jmp
add
xor
fcomp
ja
lea
enter
mov
in
add
mov
pop
sbb
add
andb
js
sbb
push
lret
mov
sbb
or
xor
and
mov
rcrl
mov
movsl
subl
mov
test
push
sbb
sub
mov
lock
jg
movsl
loope
fmull
sub
sub
arpl
lahf
xor
rorl
lahf
add
popf
push
mov
fs
movsl
dec
pop
lret
shr
je
fnstenv
add
and
sbb
add
xchg
xchg
dec
cmpsl
imul
jo
add
fldlg2
mov
lods
jae
cmpsl
test
hlt
add
dec
push
push
sbb
dec
inc
inc
sub
or
nop
jne
sub
rcr
mov
inc
cwtl
jle
nop
mov
out
cmpsb
sub
mov
sti
leave
xchg
mov
cmpsl
jnp
add
popa
aaa
rol
fwait
jb
jns
cmpsl
sub
jno
enter
incl
jns
cli
scas
pop
cmp
mov
mov
pop
mov
shr
rep
xor
mov
repz
mov
dec
sbb
push
mov
inc
cmp
add
or
leave
mov
xor
jmp
mov
adc
push
test
cwtl
mov
test
mov
sar
bound
sti
stc
cli
in
test
sub
dec
dec
xor
or
scas
xchg
stos
lds
cmp
call
das
lret
jne
leave
sub
sbb
ficoms
jle
das
cmp
sbbl
sub
or
imull
mov
je
filds
les
fwait
xchg
imul
xchg
jle
xchg
sbb
cmpsl
sti
dec
cmc
mov
mov
push
stc
shll
and
and
mov
inc
adc
sub
movsl
mov
mov
mov
pop
dec
and
cmp
and
mov
test
fwait
mov
mov
inc
jnp
mov
add
pop
mov
sub
iret
cmpsl
mov
ret
push
lods
xchg
sub
adc
mov
cmp
fildll
cmp
popf
lret
sti
shrl
dec
es
add
cwtl
lds
xchg
stos
std
cld
dec
mov
test
js
pop
push
sti
cmp
pop
test
fcompl
mov
pusha
mov
in
and
xchg
test
jnp
inc
mov
mov
rcll
add
sub
push
mov
call
addr16
movsb
cli
xor
cmpsl
test
cmp
cmp
enter
jg
push
mov
dec
sahf
or
stos
cmp
hlt
stc
mov
out
mov
or
mov
xor
loop
push
mov
repz
lret
fidivs
or
js
shrb
mov
add
movsb
lahf
mov
cltd
xor
sahf
inc
lods
aad
jmp
lret
pop
adc
test
pop
jo
das
lret
jmp
pop
or
lea
jb
xchg
lret
pusha
mov
inc
jae
addr16
xchg
sbb
push
std
xor
dec
inc
inc
push
jp
pop
test
push
fimuls
inc
movl
inc
push
movsl
aam
jo
andl
addl
mov
inc
test
imul
icebp
xchg
data16
jg
out
add
aad
repz
jne
mov
xchg
jns
gs
fldpi
inc
lret
aas
shlb
test
push
or
icebp
je
push
popf
mov
sbb
dec
mov
int3
pop
jp
arpl
pop
movsl
pop
movsl
jmp
aas
sub
test
inc
cmp
cwtl
mov
sbb
jbe
ret
mov
jmp
ss
jbe
lret
movsl
ret
popf
fcoml
mov
stos
mov
add
inc
sub
mov
leave
test
mov
jae
jge
dec
pop
fmul
arpl
inc
rcr
sbb
fsts
pop
push
add
inc
stos
cmpsl
adc
cli
push
mov
xchg
int3
scas
adc
sub
mov
cmc
add
xchg
jns
or
pop
fmuls
clc
sub
fisubs
sar
jo
jge
inc
dec
inc
les
rclb
push
aam
ret
push
push
popf
or
fdivl
fbld
jcxz
call
cmpsb
in
out
cmp
and
dec
mov
or
cs
ret
dec
inc
sarl
mov
jbe
dec
shrb
imul
sbb
mov
imul
ss
mov
mov
movsb
bound
imulb
mov
cwtl
or
xchg
test
cmp
leave
mov
fsts
imul
or
jae
fisttpl
iret
add
cmc
fcomi
mov
ret
or
or
mov
movsl
sbb
add
push
mov
lods
mov
ja
cmpsb
loopne
cmpsl
dec
cwtl
jp
sub
xchg
push
jmp
cmp
add
jecxz
mov
sbb
mov
dec
and
xchg
fdivs
and
repz
inc
push
adc
cli
xor
push
cltd
notb
mov
movnti
and
cltd
or
mov
shr
mov
and
aad
sub
dec
ja
xor
mov
call
pop
movsl
popa
enter
dec
and
sbb
jns
add
cs
or
lods
or
inc
aas
daa
ret
dec
cmpsl
xchg
push
hlt
lods
jno
mov
in
dec
sbb
inc
dec
and
fiaddl
jae
or
lods
sbb
sub
wrmsr
push
data16
scas
ja
test
lcall
lock
mov
std
push
lods
aad
lds
inc
fdivl
jmp
fcmovnb
js
jle
cmp
fwait
leave
xor
push
popa
or
and
or
or
push
push
and
popl
mov
stc
repnz
xor
lret
push
mov
cltd
stos
sarb
sahf
jbe
cmp
pop
fdiv
dec
push
and
cmp
inc
inc
mov
sbb
adc
xor
mov
int
sahf
mov
cltd
fiadds
int3
mull
rcrl
cmp
ret
mov
push
pop
add
orl
mov
mov
dec
inc
aas
sbb
or
mov
into
stos
xchg
jo
cs
sbbb
jno
test
fsubl
jns
sub
sahf
cmp
negl
cs
adc
sub
sbb
xchg
adc
cmpl
xchg
lret
jl
fistpl
cltd
jb
adc
rclb
lock
scas
std
fxam
cmp
xlat
call
rclb
sarb
clc
xchg
enter
pop
rclb
dec
sarb
inc
mov
lods
mov
imul
pop
inc
mov
imul
mov
shll
cmpsb
je
seto
ret
loope
mov
pop
pop
pop
push
test
lret
pop
test
sbb
int
clc
movsl
push
sarb
out
mov
stc
cli
jno
div
cmp
pop
adc
add
rcrl
mov
xor
and
arpl
sbb
sarb
jge
rcr
cmp
fsts
mov
inc
lahf
stos
sbb
fs
shr
cmp
mov
push
cld
imul
push
xchg
jge
mov
stos
pop
mov
ficomps
xchg
sbb
pop
ret
pop
fstl
pop
xchg
jl
sub
mov
cmc
add
pushf
repnz
lret
jl
popf
test
sub
push
or
cmpsb
dec
xor
xchg
mov
push
mov
jl
and
fld1
jb
cmp
out
enter
es
jnp
enter
cwtl
stc
and
mov
xchg
xchg
push
xchg
int3
sahf
mov
inc
ljmp
adc
inc
stos
repz
adc
not
div
cmp
pop
adc
shl
jmp
mov
adc
and
inc
or
mov
jbe
xchg
jo
cs
sbbb
jne
mov
test
cwtl
xor
sbb
add
jns
mov
popf
lret
mov
cmp
lret
lahf
xchg
test
dec
jmp
mov
fisubrl
rorl
outsl
or
lock
sub
sbb
in
pushl
fchs
pop
mov
cmp
repz
out
idivl
jmp
or
mov
lds
or
in
imul
lret
mov
movsl
or
xchg
cltd
out
xor
out
cmp
mov
pop
sub
inc
jb,pt
inc
test
cwtl
mov
mov
cltd
insl
xor
fwait
mov
rcrb
cmp
imul
fistpl
aas
jl
push
hlt
jb
xchg
dec
add
loop
add
test
cli
and
in
xchg
std
dec
sarb
pop
mov
movsb
sbb
sbb
push
and
sahf
clc
lret
sbb
push
pop
in
mov
pop
sub
xchg
add
xchg
lods
outsb
lods
sub
xor
sub
ja
lds
cwtl
fstl
cmp
sub
sahf
inc
pusha
push
pop
inc
in
js
into
scas
call
mov
or
leave
or
mov
push
jo
xor
data16
sbb
fsub
stc
mov
and
sub
push
sub
cmpsb
fsubrs
pop
lret
or
popa
imul
mov
je
or
inc
ds
dec
lea
shlb
jo
idivl
dec
loopne
mov
inc
sarb
mov
lods
std
fists
sti
mov
adc
inc
dec
push
add
fs
sub
xor
test
or
sbb
mov
pop
out
mov
xchg
inc
outsl
cmp
cmp
ret
add
or
push
xor
or
add
rorl
fwait
lods
mov
mov
leave
push
mov
push
mov
pushf
addb
cmc
xor
mov
andl
xchg
mov
rol
sbb
add
imul
sub
cmpsb
enter
mov
cmp
xorl
out
mov
push
or
cmc
adc
push
adc
or
idivl
pop
loopne
cmpsl
mov
lods
orl
pop
bound
jecxz
push
inc
sbb
ret
sbb
jl
mov
mov
fisttpl
xor
adc
xlat
leave
lahf
dec
cwtl
inc
lods
push
sub
pop
pop
sbb
iret
mov
mov
ffree
xchg
mov
mov
jl
or
mov
or
mov
inc
insl
mov
outsb
stos
jge
pop
mov
or
or
pop
fcoml
dec
lahf
scas
movl
leave
cld
hlt
imul
aas
gs
sbb
into
pop
mov
sbb
push
loope
or
jns
stos
sub
cmpsb
call
push
call
cmpsb
add
cwtl
fsub
out
cli
je
or
inc
jp,pt
dec
mov
aad
pop
push
mov
cmp
out
divb
push
orl
inc
jge
sti
daa
mov
or
cltd
sbb
pop
sub
lret
inc
pop
mov
pop
or
ret
inc
mov
das
mov
stos
les
adc
and
jne
out
cmp
mov
jae
cli
je
mov
sub
adc
jbe
scas
lret
lock
test
mov
jnp
ficompl
arpl
sbb
in
bnd
movsb
pushl
jmp
mov
hlt
sub
add
inc
test
cmp
sbb
in
aas
mov
ret
push
in
xchg
imul
mov
cwtl
and
xabort
js
movsl
mov
inc
mov
rolb
enter
hlt
xor
xchg
sub
shrb
out
cmc
adc
mov
repz
xchg
sbb
int
mov
in
mov
lods
std
fucom
mov
lret
jecxz
mov
cltd
addb
xor
mov
inc
cltd
mov
popa
xor
imul
lahf
jb
mov
dec
sahf
or
mov
pop
cmp
jecxz
loopne
push
fucom
out
arpl
ss
mov
xchg
cmp
sbb
xchg
or
lcall
push
sbb
fistl
not
push
jno
aad
mov
cld
loop
xchg
sahf
fists
inc
adc
inc
xchg
adcl
inc
js
test
dec
shlb
push
xchg
imul
cltd
cmpsb
enter
and
push
mov
push
ret
vcvtpd2psx
push
add
cmp
xchg
jmp
xchg
or
jle
push
iret
mov
push
xor
push
repnz
test
mov
mov
pop
mov
fistpll
out
test
mov
or
lock
add
mov
stc
jl
mov
shr
inc
lds
nop
in
sub
inc
xor
push
sub
insb
popf
ljmp
fistpll
fcoms
or
in
lret
xchg
ficoml
push
sub
add
pop
mov
decb
sub
sbb
jnp
jle
scas
decl
subl
add
add
dec
mov
inc
dec
inc
mov
jns
push
popl
inc
inc
xor
test
cmpsb
sarb
mov
xchg
cmc
push
and
addl
xchg
hlt
mov
xchg
cmp
lret
xchg
adc
sub
xchg
stc
mov
push
imul
mov
add
sbb
mov
aas
sub
mov
adc
inc
inc
sbb
jne
movsb
and
mov
sarb
jg
test
cvtpi2ps
es
mov
rcrb
push
lret
shr
loope
test
enter
movsl
repz
push
cld
imul
mov
mov
aad
inc
pop
mov
adc
sub
popf
ret
neg
xchg
jl
js
jg
jecxz
cld
or
das
mov
js
or
adc
dec
mov
jns
mov
loop
xor
aam
sbb
or
out
add
jle
lock
out
je
push
adc
ret
lcall
test
push
adc
jmp
inc
mov
idivl
les
pop
je
sarb
ds
cmc
sbb
mov
pop
adc
rorl
rorl
sti
xchg
push
bnd
ljmp
rolb
sbb
xlat
divb
aaa
mov
inc
dec
mov
cltd
dec
sbb
loop
mov
rol
popa
xlat
xchg
adc
jae
or
loop
fisttpl
cmp
fisubl
push
outsb
shlb
jns
dec
pop
in
mov
pop
imul
cli
ljmp
mov
and
mov
andl
rol
stc
dec
sarl
pop
and
sbbl
fbld
mov
mov
loope
inc
and
es
or
out
out
inc
shr
mov
push
daa
adc
mov
xor
pop
sub
out
xchg
ds
mov
fldcw
arpl
int
mov
or
ja
cmp
mov
jge
divl
es
add
cli
lea
aas
ljmp
inc
cltd
insb
or
xor
lods
leave
cmpsl
or
xchg
test
mov
sub
dec
gs
outsl
in
in
inc
fmuls
push
cmp
ret
xchg
xchg
leave
mov
and
shrb
xchg
mov
pop
xchg
jbe
and
cmp
aas
xor
push
inc
xchg
cmpsl
xchg
outsb
fwait
leave
in
andl
arpl
insl
sub
and
sbb
dec
mov
or
les
ret
into
push
push
pusha
icebp
pop
movsb
cli
jae
push
mov
test
lret
dec
stc
add
push
and
test
push
or
dec
cmp
add
adc
stos
negl
dec
adc
cmp
mov
ret
loopne
pop
adc
clc
sti
mov
insb
mov
mov
mov
sbb
add
movsl
dec
in
push
bound
cwtl
lret
inc
sbb
mov
stos
mov
aaa
mov
jmp
sbb
xchg
movl
rcr
cmp
int
mov
xchg
fsts
pop
daa
push
dec
outsb
lods
or
lcall
xchg
xchg
ret
cltd
out
arpl
sub
xor
add
sbb
js
pop
enter
loopne
xchg
inc
inc
int
or
rcrb
and
inc
test
or
das
stc
xor
push
movsl
imul
cli
jae
push
jno
dec
or
mov
les
loopne
je
mov
call
dec
dec
mov
dec
std
sub
loopne,pn
aad
cli
mov
repz
adc
adc
int3
jmp
cmp
mov
lods
jge
or
decb
sbb
xchg
mov
mov
cltd
mov
mov
jnp
cmp
icebp
imulb
js
popa
mov
inc
mov
lds
pop
movsb
rol
sbb
fs
bound
add
xchg
xor
or
das
xchg
stos
jge
dec
movsl
adc
ret
or
fistl
scas
add
cltd
lods
cmc
xchg
inc
sbb
adc
jmp
scas
cmc
and
adc
repz
jo
dec
sbb
add
mov
inc
test
dec
xchg
repz
xchg
xor
movsb
inc
add
xchg
cltd
loop
pop
pop
sub
xor
jne
iret
mov
or
push
adc
inc
dec
test
inc
push
mov
das
xor
mov
xchg
jnp
adc
imul
lret
pop
adc
jl
sbb
lret
jecxz
outsl
mov
mov
sbb
mov
adc
lret
inc
cli
popl
lock
insb
rcrb
mov
movsb
fidivrl
mov
push
loop
int
mov
cmp
xor
xchg
fcoms
pop
xchg
test
lds
ret
adc
fcmovnu
adc
mov
dec
subl
xor
inc
xor
cmp
add
sub
push
xchg
xchg
sub
dec
mov
popf
fistpl
xor
rcll
xchg
daa
jp
mov
movsl
mov
repnz
fnstsw
and
call
pop
adc
out
les
mov
loop
mov
hlt
je
xchg
xchg
std
push
adc
mov
xchg
and
rcrl
push
stos
shll
xchg
mov
jg
add
jns
ds
mov
lock
add
mov
cltd
mov
idivl
outsl
sbb
ja
les
inc
clc
sub
ja
push
loope
dec
sbb
xor
lahf
fucom
rorl
addl
add
movsl
and
outsb
xchg
fwait
xchg
sbb
into
xor
add
xor
xor
adc
fucomi
repnz
push
stc
punpcklwd
push
inc
mov
andl
or
mov
mov
and
ret
sti
popf
popf
cltd
xchg
xchg
sahf
xchg
rclb
in
xor
insl
jecxz
std
movsl
test
dec
inc
fstpl
ret
pop
push
push
inc
mov
cmp
push
dec
shr
mov
push
dec
mov
mov
cmp
rcrl
test
sub
push
orb
ds
or
xor
mov
enter
or
shrl
inc
mov
pop
sarb
pop
aas
test
pop
stos
push
sub
movsb
leave
test
mov
fs
decl
fwait
mov
jecxz
pop
or
lds
or
inc
movsl
adc
sbb
fistl
xchg
pop
and
adc
push
add
into
scas
jg
sub
add
mov
cmp
rcll
mov
dec
loopw
pop
pop
and
push
cmp
inc
int
jns
cli
jle
push
gs
insl
scas
adcl
rcll
adc
inc
mov
cwtl
mov
in
cmp
movsb
pop
dec
dec
mov
fdivr
sbb
in
aad
pop
mov
repz
xchg
cmovae
call
clc
lret
sti
pop
popf
ljmp
xchg
shll
push
xchg
xor
or
lret
sbb
or
stc
jno
pop
xchg
jo
mov
sbbb
jno
fildl
stos
and
test
mov
xlat
sahf
cmp
stc
mov
mov
je
or
jl
daa
dec
push
sbb
addb
stos
fstpl
fdivrs
jbe
jl
add
sbb
cmp
lods
pop
enter
mov
sbb
js
pop
enter
call
inc
inc
leave
lret
rcrb
sub
insb
dec
shlb
inc
mov
lods
mov
imul
mov
cltd
bound
add
xchg
flds
and
mov
test
push
xchg
dec
inc
push
xchg
dec
lret
mov
mov
cmc
hlt
imul
mov
int
ficoms
aam
andl
bswap
lds
ds
hlt
mov
outsl
add
in
lock
xor
repnz
ret
inc
mov
pop
hlt
lods
icebp
imulb
rol
call
xchg
mov
lock
stos
inc
sbb
cmp
jge
pushf
repz
ljmp
inc
cmp
push
fsubs
sub
or
pop
stos
xchg
fistl
fisubl
or
int
xor
cmp
inc
mov
arpl
cmp
sub
sub
loop
and
adc
mov
or
sub
sbb
shlb
sbb
push
adc
xchg
mov
push
fimuls
movsl
cli
or
outsl
mov
mov
stos
fs
cltd
push
jne
popf
sub
bound
sbbb
hlt
add
jnp
gs
int
gs
pop
mov
mov
mov
loopne
jae
addr16
lret
push
cmp
pop
iret
lods
in
ljmp
jg
or
or
orb
push
je
mov
dec
pushf
xchg
insl
pop
mov
inc
es
lds
mov
scas
mov
or
adc
inc
dec
lret
shll
dec
push
jl
cs
dec
push
or
jge
lret
scas
or
or
mov
add
jle
cltd
adc
mov
mov
js
mov
cmc
cmp
add
lret
xchg
rcll
shlb
push
cmpsl
dec
stos
loopne
mov
xchg
sbb
hlt
mov
cmp
out
cmp
cmpsl
fcmovne
test
mov
inc
sub
inc
dec
mov
call
sub
mov
xchg
ret
inc
out
mov
mov
lds
dec
add
aaa
into
cmova
mov
jns
aas
test
hlt
mov
add
imul
sub
js
hlt
mov
jbe
and
stc
insl
cli
mov
jg
sbb
jns
aaa
dec
lahf
and
cmp
pop
pop
movsb
loopne
cld
mov
push
sbb
xor
fistpll
jno
inc
push
and
lret
xlat
rcr
nop
pop
das
add
push
stos
std
or
mov
imul
sub
mov
push
lods
lds
inc
or
and
xchg
adc
out
jb
inc
shlb
or
xchg
dec
aam
jns
stc
push
ror
xchg
pop
mov
or
mov
fwait
movl
xor
mov
cmp
ret
je
or
cltd
lds
int3
push
dec
add
mov
mov
push
inc
mov
xor
sbb
lods
negl
scas
mov
imul
out
mov
clc
enter
lahf
lret
hlt
mov
in
sub
add
rol
push
add
cld
inc
and
iret
inc
add
dec
and
mov
les
fsubrs
inc
inc
and
arpl
push
mov
sbbl
test
test
inc
pop
xchg
imul
rorl
xchg
fcmovne
adc
jle
mov
sbb
pop
or
xchg
jmp
inc
xchg
sub
xor
add
push
inc
sbb
rcll
aas
push
mov
insb
pop
imul
mov
mov
dec
pop
xchg
call
cmpsb
sti
xor
jne
jecxz
lock
or
cltd
es
imul
dec
fisubs
enter
cmc
xor
mov
mov
sahf
ret
arpl
mov
arpl
inc
mov
bound
mov
in
cmp
sbb
add
stos
xor
ret
inc
mov
jns
sbb
frstor
sub
shrl
pop
movsb
pop
mov
xor
pop
mov
jno
lret
cmp
stos
shlb
test
pop
mov
inc
cmp
pop
jb
xchg
push
xchg
jb
sub
mov
aad
jle
lods
jo
xchg
mov
jecxz
arpl
inc
mov
cwtl
add
mov
andl
mov
inc
push
rorl
xor
mov
cld
push
fsubl
insl
fwait
dec
popl
xor
call
je
or
add
xchg
dec
lret
mov
mov
loopne,pn
fmulp
fimull
xor
mov
add
stc
mov
imul
fcmovbe
xchg
push
js
push
sbbl
sub
test
clc
lret
push
pop
mov
imul
mov
fimuls
std
mov
cwtl
push
stos
push
test
push
cmc
test
jecxz
xor
lahf
cli
stc
pop
loop
mov
inc
retw
cwtl
enter
xchg
stos
lds
movsl
sbb
pop
or
adc
jo
mov
fstl
pop
cmpsl
push
or
int3
xor
leave
in
mov
faddl
sti
and
mov
or
xor
add
vpshld
inc
test
or
mov
out
push
fidivrl
sub
mov
mov
jnp
pop
adc
fimuls
jne
lahf
push
loope
adc
inc
inc
dec
sub
int3
outsl
lds
shl
xchg
dec
mov
rorb
dec
add
in
mov
mov
pop
pop
add
call
iret
fwait
clc
pop
inc
jp
inc
sbb
inc
sub
add
rcrl
test
cwtl
lret
inc
sbb
jno
les
rorb
inc
add
sahf
pop
es
fisubs
mov
cmpsl
jno
or
nop
rorl
fsts
jge
adc
stos
jne
lret
mov
add
pop
fidivrl
mov
add
pop
mov
jmp
mov
jg
dec
xchg
loopne
and
in
addb
mov
add
outsl
xor
incl
int
scas
push
mov
sahf
inc
shrl
sbb
fcom
pop
cmp
jne
xchg
jg
fs
add
cwtl
aam
enter
jnp
gs
xchg
lods
rcll
orb
push
or
cmp
bound
adc
add
into
sbb
jb
jnp
movsb
sbb
in
sbb
rcll
fnsave
and
jo
xlat
xchg
push
mov
and
mov
mov
int3
cmpsb
mov
add
push
cmpsl
xchg
cwtl
imul
sub
out
jae
dec
lahf
xchg
addr16
aam
sub
mov
sbb
ds
add
cmp
roll
fistl
jl
sub
xor
push
mov
adc
mov
dec
icebp
or
xor
iret
repz
inc
cmp
insl
sub
sub
shlb
jns
pop
inc
pop
sti
sbb
stc
repnz
popl
sti
sub
sbb
out
push
jne
insl
cmovge
loope
dec
sbb
int
shlb
jecxz
xchg
or
mov
and
pop
dec
mov
popf
out
aad
mov
ja
sbb
out
add
inc
jbe
fwait
aam
sti
fcomip
or
out
repz
inc
dec
cwtl
dec
or
pop
xchg
mov
insb
sub
add
ror
or
test
lock
faddl
or
aas
jns
fwait
xor
rorl
dec
add
shll
idivl
push
sub
mov
lahf
popf
xrelease
out
ffree
add
not
sbb
inc
inc
cmp
lret
pop
xchg
xchg
lcall
std
mov
jns
inc
pop
cld
ret
or
jp
pop
push
xchg
add
jg
out
xor
cmc
xor
insl
push
and
cltd
into
mov
inc
mov
fxch
mov
inc
add
sahf
aad
pop
xchg
js
cmpsl
ret
lds
ss
cltd
enter
push
adc
jae
dec
scas
sub
xchg
dec
lret
scas
ficomps
sbb
shrb
and
mov
sub
sahf
ret
imul
mov
idivb
ljmp
lcall
add
mov
push
dec
add
movl
or
ret
inc
fsubrs
cwtl
dec
mov
and
sti
imul
add
inc
and
es
pop
shll
mov
clc
mov
stos
addr16
xchg
fcoms
and
das
or
or
xchg
ficoml
ss
cmpsb
push
mov
add
pop
in
sbb
adc
push
inc
std
add
repz
sbb
pushf
inc
mov
loopne
arpl
rolb
dec
mov
lcall
xor
pop
xor
jmp
xchg
orb
call
mov
lahf
outsl
xchg
lret
bound
fiadds
stos
sub
outsl
push
adc
insl
or
mov
cmc
xor
outsl
push
cmp
push
cmc
push
inc
dec
pop
mov
rorb
in
jmp
pop
lret
mov
lock
cmp
fcomps
fs
dec
dec
sbb
gs
mov
mov
punpckhdq
adc
sub
push
and
sbb
ljmp
fldt
jae
lcall
ret
or
addb
dec
neg
inc
mov
ret
or
sbb
push
fldt
jp
mov
jno
ds
stc
aas
mov
xor
call
rcl
pop
les
rcr
sbb
dec
aam
stc
repnz
clc
rolb
xchg
shr
fstl
mov
loop
pop
mul
sti
xor
jno
fists
dec
add
pop
dec
add
leave
sbb
pop
movsb
sub
mov
xchg
xchg
push
mov
repz
test
sbbb
inc
stos
or
mov
inc
jb
mov
jns
push
idivl
jo
or
fsub
inc
sbb
inc
dec
orl
movsl
ret
cmpsb
mov
push
movsb
cwtl
shll
dec
pop
dec
add
lds
in
dec
push
inc
out
int3
imul
clc
mov
lret
je
mov
sbb
cs
and
push
cmp
lret
add
arpl
stos
fstl
jnp
rcrl
ds
push
xor
scas
fcmovnb
push
addr16
leave
loop
sub
es
or
mov
jge
xchg
fwait
mov
mov
sbb
mov
bound
xchg
int
icebp
cmpsl
ret
flds
mov
xlat
xchg
ret
out
jmp
es
pop
pop
or
int3
cmpb
push
dec
mov
leave
mov
out
mov
faddl
inc
inc
jbe
fwait
aam
sti
pop
popf
testl
cmpsb
shll
ret
jecxz
xor
cltd
addb
mov
or
inc
xchg
cld
push
hlt
mov
fimuls
movsb
lahf
sbb
sub
dec
out
insl
ljmp
popf
in
mov
pop
sub
int
or
test
icebp
mov
xchg
aaa
jns
inc
pop
jmp
jle
cltd
fstl
mov
leave
ds
aas
aas
inc
fwait
leave
jne,pn
adc
pop
cs
addl
mov
and
and
or
dec
and
sbb
scas
inc
sbb
sti
xor
jb
mov
movnti
test
clc
es
jl
pop
nop
test
or
dec
ret
pop
push
mov
inc
mov
lea
int3
pop
fucomip
hlt
cmp
pop
pop
iret
ret
sahf
repz
mov
mov
fs
xor
dec
and
stc
inc
mov
pop
xor
repnz
sahf
sbb
rcll
jmp
lret
shrl
mov
daa
xchg
test
inc
inc
add
or
xor
shrb
mov
movsb
add
shl
sbb
or
fwait
out
sbb
leave
loop
and
cwtl
add
cmpsb
call
and
inc
and
xor
xchg
movsl
ret
pop
pusha
xchg
mov
xchg
pop
cmpsb
popa
mov
cmpsl
jnp
enter
or
mov
push
add
mov
test
aad
inc
outsb
imul
popa
dec
mov
test
mov
mov
imul
shll
jmp
clc
ds
idivb
mov
jbe
add
mov
dec
add
aad
adc
movsl
push
add
clc
mov
push
sub
shrl
mov
fbstp
fs
dec
sbb
test
lret
cmp
cmpsb
aam
fs
dec
mov
pop
js
lods
push
cmp
pop
inc
sub
shrb
popf
fcoml
std
in
lds
fisttpl
ficoms
jle
and
sbb
mov
idivl
add
mov
mov
or
shlb
xchg
inc
insl
xchg
imul
iret
roll
sti
sti
and
jnp
es
je
jnp
mov
cltd
xor
xchg
mov
out
xor
int3
fwait
pop
mov
loopne
mov
shll
fistpll
in
lcall
mov
ret
stos
gs
lcall
divb
adc
ret
insl
cmp
repnz
jbe
mov
jnp
xor
bnd
mov
jae
lret
aad
cmp
sar
xor
lcall
pop
outsb
aad
inc
pop
xchg
lret
mov
pop
dec
outsb
stos
push
sbb
fistl
in
add
cmp
jge
push
pop
push
fdiv
scas
mov
mov
push
mov
pusha
shll
inc
sbb
add
out
rcr
xchg
test
xor
xor
pop
add
enter
icebp
stc
arpl
inc
std
adc
adcl
outsl
add
cmp
out
clc
inc
test
cmp
enter
int
imul
lahf
dec
dec
les
out
mov
cltd
dec
mov
inc
enter
iret
sbb
jnp
mov
sbb
in
clc
and
xor
loop
cmp
enter
pushf
pushf
xchg
xchg
mov
imulb
rcr
dec
pop
dec
inc
inc
imul
jne
dec
ds
mov
cmp
dec
pop
cmp
jno
inc
push
and
inc
sbb
test
xchg
inc
testl
fistl
lods
shrb
jns
xchg
into
jecxz
pushf
dec
and
push
test
ss
test
lds
aam
clc
or
dec
mov
stos
rorb
or
xor
xchg
and
aas
outsl
cmpsb
ret
inc
ret
dec
ret
dec
xabort
mov
mov
hlt
loope
adc
stos
inc
ret
sbb
adc
cs
movsb
out
and
push
xchg
mov
sub
hlt
pop
adc
popf
sub
add
cmp
jb
sbb
iret
add
lock
movhps
jmp
cld
add
inc
ljmp
dec
lret
adcl
ficoml
xlat
dec
sbb
aad
subl
fsubrs
cltd
mov
or
push
mov
les
cmp
ljmp
fisubrl
push
cmp
stos
dec
mov
sarl
movsb
fcoml
sub
scas
movl
leave
cmc
and
pop
std
add
sub
add
pop
inc
test
dec
shll
jns
dec
xor
addb
aam
adc
cmpsb
jnp
enter
fsubl
lock
add
cmp
or
test
push
das
mov
imul
rorb
movsb
sub
cmpsb
mov
stos
std
dec
mov
imul
fistpl
lcall
ret
ret
out
adc
pop
sub
adc
mov
jbe
adc
roll
ror
cmp
stos
cmpsl
ret
popf
fsubl
dec
cmp
mov
adc
dec
sbb
rclb
je
test
sub
inc
sbb
sub
pop
sub
stos
ja
lds
cltd
fcoml
mov
fstl
jnp
push
jg
stc
cmc
xchg
cmp
xlat
loopne
sti
and
es
or
mov
inc
mov
repnz
inc
adc
fsubs
xchg
ja
aam
sbb
aad
stc
cmpsb
shlb
cmpsb
repz
inc
dec
cmpsb
inc
cltd
pop
xorl
in
inc
mov
dec
dec
mov
fstps
pop
andb
inc
fwait
pop
xlat
mov
add
mov
les
out
fiadds
lock
jecxz
fldenv
pop
sub
and
pop
or
ret
fs
pushf
lret
clc
mov
mov
lock
aad
mov
aaa
lcall
inc
orl
out
pop
popf
int3
icebp
mov
daa
jno
inc
push
sub
ret
or
xchg
dec
dec
out
test
jo
movsl
sbb
jl
fstpt
jnp
pop
mov
add
cmpsl
mov
js
jp
cs
xor
cmc
xor
pop
sub
iret
inc
pop
adc
rolb
adc
and
xor
push
xchg
imul
xor
cmp
fsubl
mov
std
lcall
push
adc
stos
inc
dec
mov
sbb
xchg
test
push
inc
mov
imul
mov
xchg
icebp
mov
xor
and
mov
iret
sbb
in
hlt
push
fsts
ret
sbb
inc
sub
add
out
pushf
pushf
dec
cmpsl
nop
push
hlt
mov
fidivrs
xor
rorl
stc
lret
xorb
stos
lds
xchg
sub
fidivrs
cld
mov
ffree
loopne
test
or
sbb
subl
adc
add
cmpb
pop
out
sub
mov
fcoml
jbe
lods
xchg
cltd
lds
xchg
test
repz
addr16
shlb
inc
xchg
addl
imul
mov
adc
data16
or
cltd
movsb
jp
mov
push
cmp
pop
fsubl
jge
outsl
out
ret
aad
add
mov
mov
push
or
int
inc
sub
loope,pn
xor
pop
adc
dec
mov
stos
aam
icebp
dec
testl
pusha
insb
lods
repnz
mov
add
cmc
rcrl
mov
fcompl
inc
sub
imul
aaa
ss
dec
push
dec
subl
mov
cmpsb
xchg
test
cmp
push
sbb
ret
adc
cmp
lcall
jle
mov
sub
cmpsl
pop
push
xchg
lret
cwtl
test
pusha
cmp
and
or
sbbb
and
cmp
adc
test
adc
movsb
jp
fcomp
sub
fstl
mov
xabort
outsl
mov
inc
cltd
out
cmp
loop
je
or
inc
push
xchg
dec
mov
sbb
add
mov
repz
adc
add
mov
mov
test
movsl
pop
call
int
in
lcall
ja
iret
hlt
movsl
ret
shl
jbe
add
int
nop
fcomps
add
movsl
ret
outsb
cld
push
nop
push
hlt
lods
xlat
rorb
nop
adc
xor
ja
inc
in
dec
sahf
or
and
jge
xchg
std
jmp
jae
into
je
mov
sbb
ret
or
xchg
jae
xor
movsl
adc
imul
jecxz
jns
push
inc
pushf
shr
mov
push
inc
xchg
inc
fwait
out
js
popf
and
repz
push
sbb
adc
dec
test
ror
nop
mov
push
imul
cltd
mulb
fisubs
mov
add
lret
or
int3
inc
sub
cwtl
sahf
inc
mov
mov
lret
cltd
fisubrs
pop
pop
mov
shl
repz
les
cmp
adc
sahf
sti
jns
popf
rcrb
nop
lock
adc
int
sbb
dec
and
sub
ret
sbb
insb
mov
adc
mov
pop
fiaddl
dec
hlt
jns
mov
xlat
out
fbld
jae
xchg
in
mov
push
pop
cmp
adc
adc
adc
stos
jge
sbb
lds
fnsave
pop
gs
fstl
in
loopne
xchg
inc
mov
jns
js
or
sbbb
add
xchg
in
jp
clc
stos
fucomip
push
push
mov
xchg
pop
je
push
lahf
or
dec
fwait
add
inc
out
hlt
mov
jecxz
cmc
cmp
mov
mov
jmp
aaa
cmp
outsb
adc
pop
pop
adc
push
sahf
cmp
mov
imul
cmp
hlt
movsl
ret
inc
stc
or
pop
cld
outsl
mov
cmc
rorb
cmpsl
mov
mov
xchg
adc
clc
out
xchg
jmp
lds
dec
stc
mov
and
push
lret
mov
xchg
dec
popf
lret
mov
sub
addl
or
jge
dec
movsl
adc
dec
mov
mov
lods
sarl
pushf
cmp
sbb
repz
inc
sti
and
xchg
sbb
mov
add
inc
test
mov
gs
xchg
add
imul
stos
cmp
call
pop
mov
out
enter
xor
and
sbb
and
cmp
jmp
adc
ret
pop
xlat
mov
les
push
ficomps
arpl
mov
pop
add
andl
jecxz
mov
ljmp
and
test
hlt
lods
icebp
aaa
fnstenv
in
out
sbb
sbb
rol
or
out
loop
mov
fcmovu
popa
out
pushf
test
stc
dec
sbb
mov
shlb
int3
add
cmp
lret
scas
xchg
jne
jns
pop
stos
pop
add
pop
inc
fistl
movsb
fstp
push
int3
xor
shll
icebp
leave
in
lds
pushl
jmp
cltd
js
or
dec
xchg
rolb
mov
inc
test
rcll
push
fidivrs
push
jmp
sub
fdivrl
fbld
pusha
jnp
enter
out
bswap
lds
mov
dec
mov
add
push
adc
jle
push
lret
cltd
fisubs
and
out
aas
jbe
mov
mov
pop
mov
rcrl
mov
mov
mov
inc
mov
add
rcrl
notl
xchg
int3
addr16
sbb
adc
aaa
out
sbb
test
dec
sub
testl
jae
cmp
movl
adc
jae
les
lret
or
dec
lods
ficompl
mov
jle
mov
sbb
scas
jg
jnp
xchg
repnz
and
push
cwtl
add
shlb
jae
and
mov
xchg
xor
mov
rcll
cmp
stc
push
fsubl
loopne
in
lsl
das
test
mov
add
jne
mov
rolb
mov
add
mov
rclb
mov
inc
xchg
insl
sub
xor
cmp
leave
xor
bound
je
loopne
pop
push
dec
rorl
icebp
fsubl
add
and
divb
dec
inc
ret
sbb
cmpsb
add
push
pop
pop
pop
mov
pushf
fs
jb
mov
rclb
fists
jge
mov
push
aaa
js
loopne
cmp
xchg
dec
mov
scas
xchg
lret
movsl
divb
mov
imul
std
mov
movsl
nop
aaa
stc
add
pop
fidivrl
mov
xor
scas
fcmovnb
push
cmp
imul
add
adc
mov
aam
repnz
inc
adc
mov
and
xchg
imul
cltd
call
and
pop
fisubl
clc
sbb
push
add
inc
mov
mov
sbb
mov
fwait
sahf
or
sub
cmp
fadds
push
dec
mov
rcll
int3
fwait
pop
lods
push
loopne
mov
ret
rcrl
fsubrp
jnp
std
fwait
jmp
dec
loopne
sbb
cmc
lret
mov
adc
mov
sbb
mov
xchg
sub
adc
push
cmc
xor
lds
gs
dec
cmp
mov
sbbl
stc
adc
inc
inc
cmp
inc
lret
cmc
add
outsb
les
inc
fwait
push
mov
xor
jecxz
jnp
xchg
lahf
fisttps
jnp
inc
mov
cwtl
add
jle
inc
sbb
mov
dec
aam
fstl
jp
inc
aam
rcll
or
sub
mov
and
jbe
fwait
in
or
pushf
bound
pop
mov
cltd
fimuls
inc
sbb
push
adc
xchg
jle
push
dec
mov
cltd
cmp
shlb
and
daa
cltd
sahf
jmp
jg
inc
push
pop
push
add
enter
pop
adc
xchg
rcrb
rcrl
cwtl
ret
mov
hlt
lods
icebp
idivb
inc
xchg
push
jb
pop
push
push
clc
sub
ja
inc
in
mov
mov
jnp
lcall
or
jl
dec
or
or
cli
inc
cli
inc
sbb
sub
xor
dec
lds
xchg
popf
aad
rcrl
icebp
sbb
xor
xlat
cld
adc
sub
and
andl
sti
mov
dec
cwtl
loopne
aam
jb
bound
repnz
mov
aam
fdivrs
gs
push
add
imul
jne
push
adc
push
push
inc
movl
sbb
and
mov
sbb
or
out
mov
and
js
xor
ljmp
test
push
rol
sti
ret
scas
add
mov
aas
repnz
sbb
push
xchg
jecxz
cld
fs
push
mov
cld
sub
mov
push
in
arpl
in
movsl
insl
mov
aaa
cmp
push
add
push
cmp
ret
add
dec
sahf
lret
or
jl
rorl
outsl
cmp
pop
adcl
lret
pop
scas
pop
pushf
jp
mov
jno
loope
jg
xchg
adc
jmp
rcrl
sarb
ficomps
fdivrs
dec
lea
jmp
push
mov
clc
and
cmp
jecxz
xchg
std
xorl
out
clc
les
in
daa
int3
cmc
push
loop
xchg
hlt
add
lret
mov
jb
lea
dec
mov
inc
adc
adc
adc
jecxz
pop
or
xor
mov
cmp
jp
add
adc
popa
mov
add
imul
mov
mov
xor
insl
pop
test
mov
sbb
iret
xor
fucomp
fs
fistps
sub
test
cmp
xchg
test
jo
xchg
sarl
mov
inc
lcall
inc
push
cltd
lods
inc
sbb
cmp
mov
out
mov
adc
dec
or
add
and
cmp
or
decl
movsl
ret
inc
mov
adc
cmp
shr
jb
xchg
outsl
jl
add
call
enter
xor
add
mov
pop
cmpb
mov
mov
jns
pop
sub
in
jbe
pop
les
dec
mov
loopne
mov
jns
sti
mov
hlt
mov
inc
test
or
rcrb
or
mov
loop
es
into
movsl
mov
pushf
in
sbb
jns
pop
cwtl
pop
test
jmp
int3
and
ljmp
mov
mov
xchg
test
inc
inc
mov
and
scas
xchg
ficoml
lcall
inc
lcall
xchg
pop
sbb
test
mov
pusha
jecxz
scas
fildl
test
scas
aam
sbb
jo
inc
jo
pop
sub
subl
xchg
adc
dec
sarb
mov
stc
mov
out
fwait
shll
inc
loop
fsubl
ss
xchg
cltd
and
pop
pop
scas
mov
cltd
enter
mov
int3
add
inc
ret
sbb
daa
aam
mov
jne
dec
movsb
nop
loope
sbbb
mov
sarb
inc
mov
fwait
stos
das
pop
mov
sti
pop
adc
jae
mov
sti
loopne
repnz
push
jp
dec
inc
inc
sbb
push
and
or
pop
and
adc
in
pushf
dec
and
pop
test
jnp
dec
sbb
adc
scas
mov
ja
cmp
lcall
jl
or
inc
inc
loope
or
xchg
dec
stos
xchg
shrb
pop
mov
jb
mov
arpl
jnp
sub
scas
jg
leave
in
loope
scas
inc
cmp
sti
sub
jo
or
dec
adc
xchg
cwtl
and
pop
xchg
test
cmc
cmp
jp
cmpsb
mov
jo
cmp
mov
xchg
cmpsl
ret
cmp
mov
popl
xor
inc
int3
pop
sub
push
and
movsb
jne
mov
cmpsb
cmc
hlt
imul
xchg
jg
pop
xor
cmp
call
mov
sbb
fldcw
adc
mov
add
out
rcrl
adcl
and
roll
rcrb
ljmp
test
int
sub
dec
pop
dec
or
dec
cmp
shrb
and
les
stos
lret
add
xchg
mov
outsb
les
push
and
jne
jbe
lods
and
mov
xchg
fwait
test
icebp
cmp
and
mov
xor
es
or
pop
mov
lods
addb
sbb
push
dec
push
cmp
pop
pop
adc
or
mov
mov
clc
int3
and
mov
enter
sub
inc
push
mov
adc
mov
jmp
adc
ret
jmp
pop
xchg
into
and
mov
xor
and
mov
pop
adc
ret
in
mov
mov
add
push
andl
stos
inc
sbb
dec
es
movsl
mov
mov
inc
pop
in
movsb
shr
push
sub
push
mov
sbb
aas
mov
ja
fs
jae
adcl
inc
add
cld
xor
in
pushf
jne
into
push
mov
push
xchg
fistl
fisubl
pop
jb
lods
jle
stc
ret
fs
test
jecxz
xchg
fwait
iret
data16
jle
mov
fs
inc
shlb
or
in
and
or
adc
roll
mov
fwait
cmpsb
addr16
enter
movsl
dec
inc
popf
push
test
flds
or
xlat
xchg
sbb
xchg
xor
enter
cmpb
jno
and
mov
outsb
imul
mov
scas
ds
arpl
xchg
cmp
mov
clc
sti
pop
adc
or
mov
cltd
addb
and
inc
dec
inc
sbb
inc
pop
mov
movsl
ret
jbe
int
stos
mov
ja
push
test
test
inc
mov
pop
popf
push
jo
shrb
arpl
dec
sub
cld
xor
stos
lds
adc
pop
adc
jle
mov
loope
mov
inc
sbb
arpl
sub
js
std
repnz
and
push
cwtl
add
and
mov
mov
sub
mov
jp
push
sub
popf
push
stos
mov
repnz
mov
popa
in
push
loope
add
addl
leave
sbb
inc
aas
adc
ror
mov
ficompl
loop
xor
xchg
jle
pop
movsl
imul
fucomip
in
fidivs
sbb
imul
pop
sub
mov
repnz
or
add
fsubrl
jp
hlt
mov
shrb
xlat
stos
jns
or
inc
lods
mov
jge
movb
jae
pop
sub
aaa
ljmp
ret
sub
stos
and
inc
push
sbb
stc
cmpsl
xchg
stos
lds
xchg
in
aas
adc
pop
test
scas
stos
enter
iret
jge
inc
xchg
inc
fwait
xchg
sti
and
ljmp
inc
pop
adc
and
and
daa
les
push
xchg
mov
sub
movsl
cli
or
in
sbbb
xlat
cmp
loope
and
mov
out
subl
out
mov
push
sahf
inc
sbb
cs
mov
std
cltd
cmp
add
int3
push
pop
movsl
imul
cmc
push
mov
loopne
mov
aas
mov
inc
jmp
mov
lds
adc
ret
popa
cmp
and
decl
test
rolb
sub
rcll
les
mov
in
mov
pop
sub
and
jecxz
scas
xchg
addr16
inc
sub
negl
fistpl
icebp
shrb
enter
test
scas
movl
imul
mov
addl
sbb
leave
pop
outsb
rcl
pinsrw
fildll
mov
xor
add
xchg
mov
fcmovu
and
push
loopne
xor
fsubl
xor
push
and
mov
dec
push
dec
xchg
xchg
jmp
cmpsb
stos
imul
ficomps
fcomi
mov
jno
inc
jns
dec
add
cmc
inc
mov
mov
xlat
mov
hlt
mov
inc
mov
or
and
je
repnz
enter
lret
inc
stos
jmp
jne
les
lcall
pop
fisubrl
lahf
pop
in
mov
imull
jo
fnsave
lds
lcall
cld
lcall
sub
adc
add
or
xchg
lea
mov
jmp
mov
stc
inc
cmp
in
xchg
adc
sub
and
dec
xor
mov
add
aam
sbb
xor
sbb
cmpsb
movsl
test
push
pop
out
cmp
shrl
inc
inc
mov
popa
sub
mov
aad
xchg
mov
jmp
adc
ret
pop
push
mov
sti
jmp
xchg
fcmovnb
and
pop
dec
xchg
stos
mov
rolb
mov
mov
add
movl
or
mov
test
jno
dec
xor
ror
mov
sub
movsb
leave
test
stos
mov
fldl
or
lods
mov
dec
in
mov
ljmp
insb
mov
les
rorl
xchg
fwait
dec
aas
adc
xchg
sti
cmpsl
push
push
enter
pop
out
pusha
mov
leave
repz
insb
inc
fwait
push
hlt
mov
shlb
push
addl
mov
xchg
push
out
or
dec
and
cmp
ret
push
xchg
imul
mov
fdivrl
lahf
xlat
mov
lea
faddp
bound
out
mov
lea
or
pop
and
loopne,pn
jne
pop
mov
test
dec
add
sbb
xchg
jle
pop
les
imul
ja
sub
clc
sti
and
jecxz
sahf
repz
add
cmpsl
test
insl
mov
inc
sub
iret
cmpsl
adc
push
cwtl
push
lock
mov
decl
jno
test
mov
mov
sub
cmpsl
xchg
xchg
pop
sbb
cmp
add
adc
jl
rorl
or
or
jle
cmp
jno
mov
mov
cmp
js
jg
jp
out
js
loope
lret
call
adc
mov
aam
sbb
rcll
cmp
aam
stc
cmpsb
xlat
sub
fsubs
and
enter
mov
je
and
mov
fsubp
mov
sbb
xchg
mov
xchg
out
xlat
mov
cs
mov
loop
loop
lods
negl
dec
inc
mov
arpl
call
jp
jg
dec
or
mov
sbb
sub
pop
adc
scas
xchg
in
dec
pushf
dec
sbbl
test
push
test
cwtl
xor
dec
in
rorb
sar
cmp
mov
std
in
mov
pop
sub
xchg
add
xchg
lods
outsb
lods
das
mov
scas
testl
fistl
pushf
cmp
sbb
push
insb
jnp
mov
icebp
dec
or
adc
out
lea
adc
jp
add
adc
mov
sbb
mov
sti
test
cmp
loope
push
int
cmc
push
gs
insl
push
int3
inc
mov
push
outsb
cmp
jne
xchg
rcll
inc
add
addl
cmp
push
shrl
mov
fsubr
push
adc
ret
idivl
dec
add
lcall
push
mov
imulb
sar
mov
inc
sbb
outsl
xor
mov
cwtl
and
mov
or
xchg
or
inc
fnstcw
hlt
xchg
jb
or
lret
sbb
inc
mov
lret
pushl
repz
ljmp
inc
sub
pop
pop
pop
addb
stos
jge
dec
lcall
sbb
fscale
sti
daa
jbe
test
add
inc
mov
arpl
jle
scas
ja
cmp
scas
xchg
add
mov
sbb
add
inc
xchg
sub
mov
lret
fdivrs
jp
jnp
call
or
xor
pop
fsubl
xor
leave
push
xor
push
adc
push
dec
mov
mov
lds
loop
pop
insl
sub
stc
int3
sbb
add
aaa
ljmp
hlt
pop
adc
or
pop
pop
iret
adc
mov
movsb
add
sbbl
fsubrl
aad
inc
sbb
rolb
xlat
stos
les
sbb
mov
cmovne
lret
ffree
jmp
or
jno
inc
push
imul
mov
cmp
adc
stos
loopne
cmp
test
pop
mov
repz
int3
pop
int3
lods
decb
mov
mov
xchg
loop
jnp
sub
fwait
out
js
and
sbbl
or
push
pop
add
mov
nop
lods
andb
cmp
clc
push
sub
movsl
cli
pop
mov
or
mov
das
sub
cltd
enter
push
adc
sub
loope
leave
cwtl
jns
sub
jbe
ja
jg
mov
cs
cmc
xor
outsl
pop
cmc
sbb
lcall
in
popf
fcmovnb
loopne
ljmp
mov
lret
xchg
cmp
rcrb
mov
loope
sahf
pop
add
push
inc
mov
jp
pusha
xor
inc
std
mov
lahf
push
mov
pop
mov
sub
aaa
or
pop
js
xchg
ret
add
nop
xchg
add
mov
adc
movlps
fcoml
ja
xor
adc
add
js
popf
fimuls
sti
out
js
lods
test
pop
sub
pop
inc
mov
cwtl
or
sub
or
rcl
mov
push
sbb
movsb
cli
xor
xchg
inc
sub
sub
cltd
enter
daa
enter
inc
or
mov
jmp
orl
loopne
push
orl
in
pop
add
test
call
cmp
dec
sti
mov
cltd
cwtl
sub
cltd
mov
repnz
jp
dec
sbb
xchg
dec
and
jne
les
lcall
mov
fisttps
inc
cmp
mov
in
pop
mov
push
cmp
adc
fwait
lret
stos
lds
or
push
into
movsl
das
sub
jns
dec
pop
pushf
ret
stc
cmpsl
negb
mov
and
xchg
shl
adc
lret
loopne
inc
mov
cmp
sbb
add
or
cmp
test
pop
xchg
inc
ljmp
lods
repnz
mov
push
fisubs
xchg
xchg
pop
dec
mov
mov
inc
dec
sub
and
mov
aad
fcoms
push
ret
pop
push
mov
pop
adc
imul
fsubs
test
popl
in
das
jnp
xchg
popf
fwait
add
addb
mov
or
aad
out
inc
pop
or
sbb
sarb
jno
shl
or
repz
fisubl
mov
scas
shl
leave
mov
test
mov
inc
sbb
lret
or
stos
adcl
add
fwait
lods
jle
dec
sarl
or
and
and
in
mov
add
fcompl
stc
lds
sub
sub
jl
fildl
repnz
and
stc
xor
push
xchg
jmp
dec
mov
push
popf
mov
cltd
idivb
fdivrl
sti
repz
jne
jecxz
icebp
dec
adc
cmp
mov
pop
pop
and
movsb
mov
mov
inc
sbb
dec
mov
jbe
or
sub
adc
out
inc
cmp
lcall
cs
ds
lock
mov
add
or
mov
test
adc
jle
mov
dec
sbb
mov
adc
in
sahf
idivb
jbe
sbb
sbb
mov
jo
xchg
aam
or
fimull
mov
mov
lock
addb
cwtl
sub
pusha
jns
jecxz
fistps
nop
es
out
mov
mov
leave
add
or
inc
pop
mov
jns
lret
xchg
lods
mov
push
inc
icebp
adc
jl
xchg
rclb
and
fcmovb
adc
cmpsl
movsl
vpshuflw
push
jno
inc
mov
sbb
mov
dec
inc
pop
and
inc
xorb
or
stc
mov
out
es
call
int
adc
shlb
notb
clc
sti
pop
pop
roll
rcrb
mov
test
test
push
in
movsl
cmp
rcrb
sub
add
shlb
fisubrs
push
movsl
push
xor
push
mov
cmpsl
fcoms
test
test
or
enter
jge
pop
sub
movsl
mov
pop
cld
add
adc
movsl
pop
scas
test
mov
int3
int
and
jb
add
or
fcoms
push
shrl
inc
mov
daa
aam
mov
jp
or
xchg
adc
mov
push
xlat
fcom
pop
fsubl
push
bound
test
dec
fistl
fstp
inc
sub
loopne,pn
sub
pop
aaa
in
mov
aam
repnz
add
loopne
pop
adc
and
mov
fists
rol
hlt
movsl
mov
in
fcoms
jg
or
mov
cmp
inc
sbbb
mov
lcall
inc
pop
repnz
mov
mov
dec
stos
fistl
xchg
push
fucom
push
lea
les
cmp
ret
add
lock
xchg
dec
or
sbbl
xchg
sub
inc
mov
mov
push
js
jle
mov
sub
cmc
inc
inc
inc
push
lods
add
add
sbb
mov
xor
sbb
mov
fwait
cmp
scas
push
mov
adc
pop
cmp
dec
cli
fs
sti
mov
in
and
pop
cmovno
jp
out
mov
jae
inc
cmp
test
lods
mov
or
sahf
bound
inc
inc
dec
pop
movsl
imul
jb
mov
add
mov
popa
xchg
rcrb
add
scas
cmp
inc
sub
sub
fsubrl
jae
inc
sbb
dec
and
jne
les
sti
inc
leave
movsb
insb
cld
lds
mov
fnstsw
mov
cltd
pushf
sbb
mov
fsubl
or
inc
cmp
pushf
imul
jge
pop
push
rorl
mov
sbb
jbe
lea
ljmp
inc
stc
ret
scas
scas
jg
mov
lahf
pop
iret
data16
cs
cli
or
repnz
lret
pop
inc
shlb
add
outsb
mov
mov
xor
movsl
ret
fisubl
and
cld
jae
fwait
lea
pop
mov
int3
inc
cmp
pusha
pop
daa
add
push
adc
enter
dec
lret
push
sub
mov
les
push
mov
fisttps
faddp
pop
add
out
addr16
pop
lock
mov
lret
sbb
cmp
dec
sbb
cmpsb
hlt
into
pop
repz
inc
mov
lcall
dec
xchg
in
stos
push
and
ja
push
and
decl
push
sarl
test
insl
mov
shrb
push
nop
xchg
or
jl
pop
stos
xchg
stos
cmp
fwait
push
xchg
fdivrl
add
sbb
sbb
jmp
scas
inc
fwait
out
pusha
inc
shlb
cmpsb
cmp
push
jl
pop
adc
or
add
sti
xor
pinsrw
cmp
lods
push
sub
mov
insl
in
insl
or
mov
das
data16
push
sbb
dec
mov
sbb
mov
cltd
sbb
adc
gs
pop
add
mov
scas
or
ret
xchg
and
pop
in
jmp
xchg
sbb
lock
fldenv
cmc
mov
ds
inc
aas
fidivrl
cmpb
adc
jle
clc
or
lcall
inc
std
movsl
dec
sbb
lods
pop
xor
sub
arpl
push
leave
and
popf
lret
rcr
nop
sbb
test
inc
jmp
inc
xchg
outsb
icebp
mov
rcl
fcmovnu
xchg
sbb
sar
sbb
mov
shl
mov
push
fdiv
push
inc
cmpsl
ss
pop
sub
inc
sbb
cwtl
in
dec
aam
stc
xor
or
int3
dec
and
je
mov
ret
subb
rcr
push
xchg
jle
mov
call
mov
fneni(8087
inc
adc
add
cmpsb
or
or
xor
push
daa
jne
fldt
pop
dec
repz
fsubs
sub
sbb
sahf
sti
jno
jecxz
enter
jl
lock
mov
adc
xchg
and
cmp
rcrl
and
testl
leave
test
fnstsw
cltd
sub
fcmovne
mov
xchg
fsub
sbb
cmp
add
xchg
add
outsb
mov
add
sub
jmp
push
inc
jmp
popf
ficoms
lcall
cmc
cmp
jge
andl
xchg
adc
mov
and
push
cmp
dec
add
jmp
push
jne
insl
testl
jne
jecxz
stos
xchg
sub
mov
mov
lret
inc
mov
jo
gs
les
rorl
pop
adc
popa
cmpsl
cmp
jae
nop
jl
lahf
imul
push
clc
aas
mov
push
sbb
or
adcb
cltd
push
sbb
fs
pop
stos
push
and
aam
lods
mov
negl
xor
dec
je
mov
jno
dec
nop
push
mov
xor
dec
leave
out
imul
xor
data16
push
mov
cmp
shl
adc
dec
push
jnp
in
mov
ret
and
push
mov
sbb
add
jge
xchg
scas
xchg
adc
rorl
inc
jns
imul
test
mov
lea
and
mov
jle
stc
mov
hlt
je
dec
dec
daa
fwait
jns
fiadds
shrb
adc
mov
fdivs
dec
fadds
sub
pop
mov
mov
in
lcall
add
lret
jecxz
mov
sbb
add
cmp
mov
adc
lret
ds
xor
cwtl
push
lock
mov
sbb
and
test
sbb
scas
mov
or
sbb
rcr
mov
mov
popl
jo
test
xchg
rorl
lods
fucomi
aas
adc
adc
xor
stc
jmp
lods
inc
sub
arpl
sub
js
jg
movl
scas
arpl
pop
xlat
testl
or
imul
xchg
fsubs
add
cmp
js
imul
push
mov
xchg
pop
fsubl
jne
push
mov
sbb
inc
inc
mov
pop
mov
out
push
pop
cmp
popa
dec
mov
iret
pop
stos
rol
mov
jle
pop
les
imul
push
push
sub
clc
sti
pop
adc
ret
rorl
sbb
cmpb
push
iret
cmpsl
into
sbb
movsb
ret
sbb
fsubrl
leave
mov
lods
mov
pop
pop
pop
popf
jae
cmp
lahf
jae
out
imul
and
test
inc
scas
add
fisubrl
pop
pop
xlat
fistl
jge
daa
push
jae
xor
pop
movsb
sub
adc
iret
fucomi
subl
dec
cmc
and
call
mov
inc
sbb
mov
push
cmc
repnz
aas
dec
sbb
mov
xchg
rclb
in
pop
mov
hlt
push
fisubl
test
inc
arpl
lahf
adc
lret
sbb
bound
aam
loopne
hlt
or
cmpsb
popf
jp
push
and
ja
lcall
mov
dec
mov
ljmp
ds
jg
aam
sti
pop
mov
ret
in
icebp
jae
mov
imul
sbb
aas
mov
rorl
or
movsl
ret
inc
xchg
mov
push
fcomp
dec
fiaddl
incl
imulb
pop
fildll
push
mov
cmp
rorl
sbb
cs
mov
adc
push
mov
or
mov
jmp
rolb
add
icebp
shr
movl
adc
jo
popa
fwait
js
or
inc
xchg
rcr
pop
xor
sbb
push
addr16
clc
and
xor
sbb
push
inc
xchg
out
sbb
fwait
lea
mov
push
bound
push
or
dec
dec
mov
inc
imul
xor
movsb
cmp
int3
lcall
mov
jne
popa
or
iret
ret
clc
jmp
or
sbb
js
sbb
push
sbb
aad
ja
lock
xchg
adc
into
lds
inc
loop
lret
movsl
mov
mov
sub
sahf
fidivrl
sbb
sbb
xchg
out
fucomp
cld
std
mov
aad
push
cmpsl
xchg
test
sbb
push
pop
dec
lret
or
push
lods
sub
xchg
stos
std
lock
mov
sarl
pop
mov
fldl
ret
jge
or
loop
icebp
adc
push
adc
les
jmp
pop
sti
cmp
insb
xor
dec
aam
stc
repnz
aaa
adcb
fdivrl
and
fidivrs
mov
loope
lds
out
enter
sbb
jp
je
jp
imul
mov
sbb
inc
sbb
cs
cmc
lret
shl
dec
mov
arpl
xchg
jle
pop
adc
xor
out
mov
out
sti
mov
inc
xchg
add
cmpsl
test
cmp
mov
inc
pop
adc
jmp
ret
inc
mov
mov
xor
fisttpll
fiaddl
mov
lds
sbb
mov
inc
fisttps
lret
shr
cmp
or
cld
nop
pop
test
xchg
sub
imul
push
jb
lods
pop
fldt
cmp
sbb
scas
mov
mov
out
les
or
rcll
and
inc
test
dec
shlb
xchg
rclb
enter
xor
sbb
cmpsb
movsl
test
adc
fwait
lea
enter
call
inc
inc
mov
les
in
jne
dec
mov
dec
ret
push
cmp
lcall
or
call
mov
sub
jl
sub
lret
hlt
mov
and
rcrl
aad
jno
sub
xchg
lret
movsl
sbbl
stos
rcrb
dec
lea
sub
scas
mov
sbb
rolb
in
cmp
cmp
ret
add
daa
xchg
hlt
movsb
xchg
stos
clc
int
cmp
ja
dec
sub
xor
fcoml
jmp
lods
inc
inc
pushf
rclb
push
fimuls
mov
js
in
inc
fwait
leave
cmc
and
add
add
cwtl
mov
dec
xchg
and
insb
and
add
pop
xor
jae
aam
fdiv
push
sub
movsl
cli
mov
push
bound
mov
xlat
pop
repnz
ret
cltd
je
or
add
hlt
jl
out
push
adc
sub
push
cs
mov
jbe
mov
popa
xor
imul
fucomip
in
xchg
fidivs
sbb
imul
pop
sub
iret
push
repnz
inc
cld
inc
and
inc
xor
rcrb
test
and
adc
sbb
mov
xchg
rclb
fldt
jb
lods
xchg
test
sbb
stos
or
dec
rorb
movsb
outsb
stos
jbe
shlb
pop
cld
jae
mov
pushf
arpl
sbb
bnd
ds
fwait
leave
cmc
and
add
jnp
addl
or
cmp
mov
stc
mov
out
fwait
shll
inc
loop
fsubl
ss
xchg
cltd
and
pop
pop
scas
mov
cltd
enter
mov
int3
add
inc
ret
sbb
daa
aam
mov
jne
dec
movsb
nop
loope
sbbb
mov
sarb
inc
mov
fwait
stos
das
pop
mov
sti
pop
adc
jae
mov
sti
loopne
repnz
push
jp
dec
inc
inc
sbb
push
and
or
pop
and
adc
in
pushf
dec
and
pop
test
jnp
dec
sbb
adc
scas
mov
ja
cmp
inc
cmp
jo
sbb
inc
add
or
xchg
fistl
xchg
fistl
fisubl
in
fwait
lods
sti
dec
xchg
cmpb
stos
mov
push
cmp
ficoms
fwait
jo
stc
jecxz
scas
inc
pushf
repnz
scas
arpl
pop
and
fadds
mov
add
push
mov
fcoms
movsb
push
fnstsw
sub
mov
cmp
call
sti
mov
jne
mov
test
test
sub
push
fwait
push
add
jne
jne
dec
jg
mov
gs
outsb
jbe
imul
mov
mov
imul
dec
lahf
lds
lods
cmp
aas
iret
hlt
mov
inc
and
add
orl
adc
push
test
cwtl
lret
aad
leave
rcrb
repz
sarl
stos
push
icebp
aad
out
fildl
test
push
mov
xchg
test
pop
mov
fldt
jge
dec
jle
arpl
or
cmp
cmpsl
pop
test
es
pushf
cmpsl
dec
push
fucomi
and
jg
andl
call
arpl
shrb
add
andb
sbb
pop
sbb
fisubs
xchg
dec
or
inc
mov
gs
cmp
xchg
jle
jl
push
xor
sti
subl
fs
and
push
pop
imul
xor
rcrl
ds
call
pop
inc
push
xchg
popf
test
fucomip
loopne
movsl
pop
adc
ret
ficomps
enter
add
jl
nop
enter
ds
cmpb
jno
xor
shll
lods
add
xor
loop
inc
mov
lahf
lret
fisttps
or
lcall
cli
daa
pop
dec
data16
stos
pop
icebp
mov
stos
xchg
xchg
ljmp
lods
jle
mov
sub
mov
fucomip
rol
js
jg
sub
xor
loope
js
mov
mov
andl
outsb
test
jle
loope
and
imul
mov
pop
dec
push
gs
in
mov
imul
movnti
subl
pop
add
cs
sub
mov
into
jmp
jbe
mov
fadd
arpl
int
mov
out
cmpsl
ja
lret
loopne
mov
ficoms
arpl
sub
mov
cmpsl
lock
xchg
and
cwtl
lret
movsl
ret
popf
jnp
lock
adc
and
mov
dec
in
lods
mov
scas
dec
push
dec
out
les
shrb
je
mov
jno
dec
retw
mov
stos
dec
pop
stos
xchg
fistl
fisubl
pop
jb
lods
jle
stc
ret
jl
jnp
movb
jecxz
xchg
fwait
iret
push
insb
jle
scas
je
push
cmc
loope
push
mov
andl
rol
pop
mov
dec
xchg
and
insb
and
add
xchg
stc
xchg
pushf
push
xor
sbb
movsl
ret
fld1
and
rorl
inc
pop
and
jecxz
mov
enter
hlt
or
scas
shr
adc
cmp
aad
cltd
shl
inc
sbb
pop
aam
jb
adc
inc
test
fsubp
sahf
sti
cmpsb
inc
sbb
or
cmp
mov
adc
xchg
and
adc
adcl
and
pop
test
mov
or
mov
adc
pop
inc
rcrl
les
popl
xor
in
pushf
jne
push
mov
rorl
addr16
jb
cmp
jbe
lods
and
mov
ja
js
mov
mov
sti
and
xor
maskmovq
testl
inc
test
xchg
sub
or
push
fsubs
adc
ret
push
cmp
push
mov
call
mov
add
addl
test
enter
cmc
enter
out
xlat
mov
ret
push
xchg
pop
test
das
mov
rclb
mov
lock
das
lret
jecxz
insl
mov
adc
mov
movsl
add
xor
cwtl
jne,pt
popf
faddl
and
stos
inc
in
xlat
dec
movsl
add
dec
push
dec
out
les
shrb
je
mov
jno
dec
les
inc
scas
push
add
xchg
imul
clc
xor
lods
mov
shrb
push
push
int3
inc
pushf
rcrb
mov
fcmovnbe
out
mov
popf
scas
push
cmp
cltd
add
or
and
add
mov
cwtl
icebp
and
inc
stos
sbbl
push
sub
ret
mov
fldz
mov
fwait
lea
js
push
adc
mov
cwtl
pop
and
fwait
jne
dec
mov
int
add
aas
xchg
jg
pop
lods
es
call
aam
sti
pop
mov
fwait
mov
iret
pop
aas
lds
add
mov
fidivrs
fstl
or
or
test
fsubrl
mov
mov
pushf
add
jns
shrl
test
dec
push
lret
sub
cwtl
mov
dec
push
lret
rorl
aam
push
jl
lret
push
fsts
pop
daa
xchg
hlt
movsb
xchg
stos
clc
int
sub
ja
dec
sub
xor
fcoml
sbb
shr
sbb
inc
inc
jmp
mov
frstpm(287
js
jle
scas
fists
jb
addps
adc
inc
aam
fdivs
xchg
xchg
mov
and
xchg
mov
mov
xor
stos
es
cmpsl
mov
fwait
out
mov
enter
cmp
loopne
cwtl
sbb
push
dec
mov
lds
mov
jbe
fcos
call
jg
shl
fistpl
dec
or
out
sti
mov
out
int3
mov
add
sub
xchg
iret
cmpsl
ret
aad
inc
cltd
nop
sysret
mov
in
shrl
jae
jne
js
mov
scas
jnp
lret
out
fs
rorl
lret
scas
in
dec
xor
xchg
test
dec
mov
add
push
scas
xchg
fcmovne
rolb
push
outsl
cmc
mov
add
pop
cld
lret
popf
lret
stos
shlb
fwait
jo
cld
mov
call
rol
pop
cltd
xchg
out
inc
inc
cmp
xchg
enter
cltd
xor
dec
les
push
fisubs
pop
adcb
pop
movsb
fidivl
jnp
xor
fists
jmp
jno
cltd
push
adc
add
subl
or
jne
cwtl
movsb
xchg
out
sub
add
dec
mov
negl
dec
add
int3
rclb
pop
call
sbb
out
mov
sub
inc
cltd
orl
mov
sbb
adc
lret
inc
movsb
inc
insb
push
cwtl
dec
test
sub
xchg
in
stos
push
and
rcl
movsb
pop
loop
cld
test
ja
cmp
mov
inc
push
jl
ret
add
or
jg
pop
stos
xchg
fistl
cs
popa
jle
adc
adc
ret
movsl
ficoms
mov
scas
mov
mov
jo
popa
or
ljmp
in
mov
nop
roll
mov
push
xchg
adc
dec
fdiv
push
sub
test
test
fld
clc
xor
ljmp
fisttpll
dec
xor
roll
inc
dec
mov
push
sub
cmp
sub
orb
mov
pop
loopne
lret
jo
pop
dec
out
loopne
iret
orb
jecxz
fidivrl
inc
in
mov
add
leave
inc
mov
pop
adc
ljmp
addr16
movsl
ret
popf
fsubl
rcl
clc
repnz
test
sbb
lds
push
sbb
mov
in
fisttps
add
test
test
stos
or
mov
or
add
jb
cmp
jbe
lods
and
mov
ja
pop
jo
decl
loop
and
jo
or
sarb
mov
add
sbb
outsl
aaa
cwtl
xchg
ljmp
mov
push
jns
roll
lods
mov
stc
call
icebp
inc
cltd
enter
mov
cwtl
push
iret
mov
call
pop
add
push
adc
cmpb
jmp
sub
add
neg
adc
arpl
int
mov
pop
into
fwait
lahf
jb
jo
cmp
jnp
mov
aas
mov
inc
sbb
test
jno
fsubrl
lret
movsl
mov
ss
rcl
dec
pop
dec
add
jnp
aad
lds
pop
movsb
shll
lret
rorl
lret
add
scas
cmp
mov
popa
inc
les
adc
sahf
pop
xchg
rorl
xchg
fcmovnb
cmp
push
jb
lods
pop
or
lds
sbb
lods
fucomi
movsb
jmp
loop
mov
mov
push
addl
mov
xchg
dec
mov
add
xchg
fcoms
and
movsb
fimull
call
and
out
stos
add
repnz
mov
cld
pop
and
ljmp
mov
lds
adc
jbe
mov
bound
sahf
and
fisubs
inc
or
loopne
test
sbbb
mov
imul
add
mov
inc
testl
cmpsl
or
lds
call
push
mov
sbb
sub
mov
push
push
shl
cmpsb
cmpsl
xchg
ror
push
sbb
cs
mov
dec
jne
inc
jmp
xchg
stos
std
lock
int
test
lods
inc
sbb
scas
jg
leave
in
mov
sub
cld
repnz
das
xchg
in
push
push
cwtl
add
and
jb
sarb
xor
testb
sbb
movsb
jp
clc
inc
cmp
imul
dec
xchg
cltd
into
shrb
fdivrs
mov
popf
xor
push
adc
xchg
enter
pop
scas
or
dec
in
dec
nop
push
xor
mov
lods
ds
fnstcw
shlb
cmp
mov
pop
adc
ret
in
mov
mov
add
push
andl
stos
inc
sbb
dec
es
movsl
mov
mov
xor
lea
mov
inc
lahf
loop
jns
test
mov
test
lcall
les
xchg
fcoms
popf
in
ret
push
jecxz
das
sub
pop
rcr
xchg
sbb
out
int
or
jae
mov
cmp
inc
mov
fiadds
shll
mov
out
popa
or
jnp,pn
addl
add
mov
sarl
jge
fwait
cmp
xchg
cwtl
mov
lods
insl
xchg
enter
pop
push
mov
jno
mov
push
cmp
sub
push
fwait
push
add
cmove
fisubrs
popf
out
push
mov
ret
pop
xlat
mov
dec
loopne
in
jbe,pt
aam
sti
fnsave
lret
xchg
and
push
sbb
mov
jbe
add
movl
or
out
sbb
or
xor
fisttpll
push
push
and
pop
insb
arpl
js
jae
xor
lahf
fstl
and
push
test
ret
loop
push
sbb
sbb
xchg
jecxz
push
fistl
cmpsl
fcoml
jbe
std
jno
aad
in
scas
movl
fucomip
push
xchg
loop
mov
mov
add
mov
dec
movsl
xor
push
jecxz
or
aam
dec
push
xchg
mov
xchg
fiadds
jmp
push
mov
cmpsl
xor
pop
jo
fwait
outsl
or
sbb
ss
sub
adcl
jp
mov
int
and
mov
inc
cmp
mov
into
pop
stos
les
inc
imul
addr16
repz
adc
hlt
popa
lahf
es
outsl
push
mov
popa
mov
das
or
sbb
and
adc
mov
pushf
dec
out
xlat
stos
mov
ja
inc
loopne
dec
sbb
inc
mov
aad
pop
popf
shrl
ljmp
ret
bound
imul
dec
push
stos
jge
dec
movsl
sbb
ficomps
mov
sar
cmpsl
push
imul
aad
repz
repnz
loop
ret
scas
arpl
pop
addr16
and
lret
or
bound
mov
mov
out
imul
loope
mov
pop
jl
jb
jb
xlat
pop
fsts
mov
insl
pop
push
inc
dec
mov
aam
leave
scas
shr
adc
dec
fcmove
jmp
ficompl
xor
sub
negl
add
repnz
mov
or
ds
hlt
jb
mov
xchg
xor
mov
orb
movsl
xchg
popa
jns
xor
pushf
dec
xor
shll
lods
add
test
sbb
and
cmp
fistpl
repz
scas
cmp
imul
mov
cwtl
data16
scas
xchg
ficoml
lcall
and
dec
mov
movb
ret
fstl
pop
cmpsl
inc
je
lcall
mov
notb
fdiv
stc
scas
xchg
adc
in
outsb
inc
in
and
or
inc
test
xchg
sub
or
push
fsubs
adc
ret
push
xor
pop
jb
pop
fsubl
xor
das
lods
pop
sub
es
sub
loop
out
mov
cwtl
sahf
inc
mov
loopne
mov
test
xchg
lcall
mov
in
or
push
jmp
clc
sti
pop
push
iret
ret
jmp
lret
out
pop
add
push
shll
scas
inc
sbb
dec
xor
shlb
adc
mov
test
rolb
sbb
ss
cmp
lods
mov
sar
cmp
imul
pop
pop
adc
push
mov
stos
cmp
inc
lcall
movb
outsl
or
cmpsl
pop
push
jg
jmp
mov
lds
and
es
or
ds
cmpsb
push
clc
hlt
iret
xchg
dec
icebp
addr16
add
fwait
shrl
inc
jge
dec
sahf
fidivl
outsl
mov
shl
in
or
int3
bound
pop
jnp
sbb
add
je
cmp
lcall
and
mov
sbb
inc
shll
out
and
test
adc
cmc
sub
adc
jae
ljmp
gs
mov
pop
sub
inc
aas
cli
mov
aas
and
sbb
rcrb
cmpsl
leave
sbb
sub
jmp
mov
jae
sbb
push
push
aam
ja
in
cmp
jno
dec
stos
int3
cmpsl
cld
jo
in
pushf
jne
into
push
mov
fisubrl
inc
lcall
jle
mov
sub
mov
fucomip
rol
js
jg
sub
icebp
jmp
xchg
lret
call
adc
pop
es
or
mov
or
addr16
les
aam
sbb
movsl
and
mov
ss
cmpsl
ret
test
fs
cltd
enter
dec
mov
je
xchg
jo
xor
dec
pop
cli
sub
mov
fcomps
cmpsl
cmp
mov
mov
scas
ds
arpl
int
mov
out
mov
mov
and
push
sbb
in
dec
add
add
pop
test
int
inc
addl
fsubrl
fsubrl
inc
inc
push
clc
mov
fcomps
mov
sbb
push
sbb
push
les
test
inc
sbb
lret
xchg
mov
push
outsb
shrl
mov
adc
pop
pushf
ret
add
pop
sahf
rol
pusha
pop
and
xor
enter
ret
rclb
push
mov
inc
xor
push
test
jns
dec
xor
inc
cwtl
mov
fwait
cmp
xchg
and
es
jae
push
test
popf
fcoms
xor
jecxz
and
mov
popf
out
inc
fs
push
add
mov
cltd
sahf
je
insb
loopne
mov
lea
out
int3
add
mov
inc
mov
test
cmp
mov
clc
sti
mov
sbb
pusha
and
pop
sub
add
andb
add
fsubrl
inc
mov
sbb
scas
movsb
mov
leave
mov
or
mov
cmp
push
dec
dec
popf
int
mov
dec
or
add
or
xor
shrb
mov
push
shrb
data16
inc
sbb
scas
jg
leave
in
mov
cs
pushf
repnz
cmpsb
xchg
int3
push
push
mov
inc
shll
clc
mov
in
rorb
pop
fsubrs
loop
addr16
les
fwait
xor
mov
push
fisubl
loop
insl
cmovae
mov
push
sbb
mov
and
mov
inc
inc
mov
enter
enter
jne
pop
cmpsb
lret
lcall
pop
test
add
ret
popa
mov
inc
loope
out
jno,pt
sahf
je
popf
mov
cmp
jp
add
sti
addl
mov
jbe
adc
rol
mov
testb
leave
mov
and
push
notb
testl
loope
testb
and
lahf
ffree
adc
cmp
or
nop
stos
push
arpl
inc
sbb
adc
mov
mov
movsl
pop
pop
test
lods
cmp
or
pusha
mov
js
jle
stos
sbb
and
add
jp
cmpsb
rcll
lcall
mov
shll
xchg
cmc
mov
push
sbb
and
push
xor
fdivs
lret
jne
push
mov
aam
cmp
sbb
mov
test
mov
xchg
sahf
dec
mov
into
or
les
xchg
movsl
imul
stc
fnsetpm(287
mov
fists
jae
stos
mov
test
je
inc
sbb
inc
dec
push
rorb
divb
pop
iret
imul
fisttps
scas
inc
std
xlat
dec
cld
enter
test
sti
mov
sti
fisubl
iret
dec
rcr
xor
pop
or
sbb
lret
mov
dec
or
pop
pop
add
lods
jle
or
adc
dec
push
xchg
or
adc
push
js
fildl
ret
inc
sbb
mov
xchg
sub
mov
pop
cmp
xor
call
add
std
push
lahf
out
jl
mov
cwtl
jns
or
es
aam
fcoms
xchg
pop
push
inc
mov
imul
call
movsl
mov
xor
jne
inc
ret
dec
icebp
jno
xchg
ret
pop
sahf
repz
test
pushf
fwait
or
and
repnz
or
push
cmp
movsl
mov
mov
xor
adc
mov
cmpsl
adc
dec
sbb
cmpsb
add
cmp
mov
cmpsl
jae
mov
orb
or
push
stos
jge
mov
add
pop
jnp
xchg
pushf
fcoml
cmp
sub
xor
scas
jg
fxam
cmp
stc
icebp
xor
cmp
or
inc
pop
xrelease
mov
xchg
pop
sub
adc
add
pop
orl
movsb
cli
xor
inc
enter
lea
das
test
repz
shlb
loop
jl
or
daa
je
seto
ret
push
inc
mov
pop
push
xchg
shlb
sbb
ljmp
sti
dec
cmp
sub
ds
repz
inc
inc
fcomps
lds
cld
in
orb
sub
int
inc
sbb
jne
les
cmp
repnz
push
in
cmpsl
pop
ljmp
addr16
inc
rcr
mov
aam
sub
inc
sbb
sub
add
add
add
jg
mov
test
add
mov
jge
or
push
lret
cmp
adc
clc
push
mov
inc
shll
clc
mov
add
out
jge
in
jp
stc
mov
xor
rolb
xchg
data16
cmpsb
fsubrs
fidivrl
pop
push
clc
gs
outsl
jl
loope
icebp
dec
inc
sub
test
rcll
dec
dec
mov
push
inc
mov
rcr
adc
aad
jns
fiaddl
les
fucomip
in
or
or
cwtl
rcll
mov
mov
or
add
fsubrl
fnsave
pop
lret
nop
lds
leave
inc
push
cld
mov
or
aad
lret
fucomp
fs
mov
fisttps
pop
inc
invd
movsb
les
inc
scas
jne
add
or
or
dec
fcoml
sbb
test
xor
cmpsb
push
xchg
arpl
jb,pt
push
cwtl
add
xchg
mov
or
adc
and
stc
xor
push
jmp
in
addl
popf
push
jo
add
ret
sti
xor
pop
movsb
inc
cltd
outsl
adc
out
leave
sbb
stos
lea
mov
dec
add
dec
rcl
inc
cltd
pop
imul
hlt
imul
mov
lret
imul
int
in
std
pop
adc
hlt
mov
inc
mov
ffree
ret
stc
enter
or
orb
and
imul
pop
or
test
mov
sbb
aad
cmp
ljmp
sar
stos
cmp
and
cld
jo
xchg
mov
xor
lcall
jnp
xlat
cltd
pushf
xchg
cmp
bound
mov
fwait
lahf
fldenv
bnd
enter
ss
xchg
push
cwtl
add
addl
jbe
inc
push
push
sbb
mov
fwait
cmp
mov
or
movsl
cli
mov
push
jno
insl
lsl
mov
push
stc
out
int3
jb
enter
xor
bound
and
sub
cmp
cwtl
mov
cmc
hlt
test
cwtl
in
pop
pop
iret
int
pop
in
pop
adc
enter
cmpl
iret
sbb
int
mov
jbe
add
rcll
sbb
add
mov
and
iret
inc
std
or
cmc
lret
test
pop
ljmp
in
jmp
repz
jo
push
ds
lods
mov
sub
movl
or
lret
dec
mov
push
mov
aad
mov
ret
mov
fdivr
sti
and
andl
xchg
fs
or
dec
inc
mov
ret
cwtl
dec
and
and
push
push
out
inc
sbb
mov
pop
fsubl
imul
push
mov
xchg
mov
inc
sub
dec
dec
mov
cwtl
sahf
inc
cmp
jbe
mov
fdivs
out
mov
add
push
xchg
aam
sti
pop
mov
xchg
add
lcall
push
cld
lods
enter
mov
mov
cltd
js
mov
jno
sub
icebp
imulb
js
bound
and
lds
pop
movsb
xchg
sbb
test
mov
fs
cmpsl
arpl
mov
sbb
lret
push
rcrl
lret
add
lds
mov
lock
inc
pop
mov
add
inc
mov
pop
add
fists
inc
mov
inc
decl
inc
orl
gs
cmpl
adc
xor
clc
rclb
ss
xor
push
gs
or
cmp
xlat
push
ds
rclb
loop
je
cwtl
addb
push
dec
dec
into
mov
sbb
icebp
lret
sbb
gs
jbe
int3
fwait
aas
lea
ss
shr
cmp
mov
mov
adc
inc
sbb
mov
scas
ret
mov
fimuls
push
cwtl
lret
inc
sbb
rorb
sbb
les
call
lods
fsts
cli
test
mov
mov
je
ffreep
fcoms
filds
add
xchg
ficoml
cmp
xor
add
pop
mov
popf
adc
cmpsl
pop
mov
int3
mov
mov
in
mov
faddl
sti
and
mov
inc
mov
xchg
push
xchg
lock
inc
loope
push
fisubs
xchg
mov
xchg
jle
pop
mov
lds
pop
pop
sbb
bound
out
shlb
test
inc
pop
xchg
dec
dec
mov
aam
loopne
aad
pop
mov
icebp
pop
adc
push
mov
mov
pop
mov
lods
stc
fstl
jae
orb
insl
popf
sbb
add
cwtl
jmp
sbb
out
mov
int
out
stc
pushf
dec
xor
movsl
dec
test
adc
shlb
into
push
in
test
cmp
pop
cld
sub
idivl
fs
icebp
add
push
jl
lret
ret
adc
xor
jge
dec
stos
xchg
fwait
adc
into
mov
sarl
mov
pop
push
pop
mov
dec
clc
sti
dec
pop
jae
or
sub
sub
or
and
push
pop
xchg
pop
lahf
int
je
or
les
aam
sbb
daa
cli
mov
push
gs
in
out
addl
ret
push
mov
add
inc
mov
sbb
sbb
mov
cwtl
sahf
inc
cmp
das
and
add
mov
jae
jb
mov
or
jge
iret
sbb
jnp
jp
sbb
int3
ss
push
sbb
js
pop
mov
mov
or
imul
ret
popf
cld
mov
mov
lcall
aad
sbb
add
mov
pop
sbb
rcrl
nop
sbb
or
cmp
test
stos
iret
push
pop
mov
push
cld
lret
fstl
jnp
pop
pushf
jnp
ficoms
jg
sub
icebp
mov
sub
or
inc
add
sbb
mov
pop
fcmovnu
jg
xchg
xchg
aas
data16
push
xor
sbb
xchg
js
ret
inc
and
cmpsb
mov
fwait
outsl
or
vpunpckhdq
xchg
xor
sarb
sarb
mov
out
push
adc
push
mov
jmp
mov
movsb
jae
adc
call
pop
movsl
dec
adc
das
mov
lods
fists
popa
lcall
push
lock
cli
or
cltd
mov
repz
pop
inc
mov
icebp
idivb
lds
mov
lret
mov
repnz
ss
sbb
rorb
ljmp
pop
cmp
lcall
lcall
imul
dec
pop
stc
add
jmp
fstps
mov
scas
pop
jno
and
inc
bound
mov
in
add
or
insl
add
lret
or
add
rol
fadds
adc
movsb
pop
or
mov
stos
cmp
aam
mov
mov
es
test
inc
pop
cwtl
xor
sub
nop
in
inc
cmp
mov
jbe
mov
sub
adc
or
loop
sti
mov
inc
jnp
mov
add
movl
mov
xlat
mov
cmpb
adc
cmpsb
mov
nop
push
lcall
stos
test
inc
mov
mov
je
rcl
sbb
lahf
jae
xchg
test
mov
fsts
jp
and
stos
jge
dec
cmp
inc
sbb
fistl
xchg
jbe
xor
xchg
stc
aad
mov
enter
sahf
fists
jl
out
and
mov
and
cwtl
or
sarb
push
inc
mov
cwtl
xor
xchg
cmp
inc
gs
fnstsw
mov
cltd
call
pop
addr16
bound
out
adc
cltd
enter
cwtl
pop
and
movsl
jne
test
cmp
inc
nop
in
test
xchg
mov
adc
lret
movsl
ffreep
imul
xor
insl
sbb
and
cs
mov
jmp
sub
mov
fsubrl
jae
inc
sbb
rcrb
sbb
les
pop
mov
push
in
int
mov
xchg
rcrl
fistpll
adcl
roll
sbb
inc
cmp
lock
fistpl
mov
jb
lods
inc
pop
lcall
xchg
cmp
dec
fstpl
mov
mov
loopne
sbb
or
inc
sub
dec
cmc
or
les
xchg
and
mov
pop
jmp
lods
xlat
push
fidivrl
xor
xchg
xor
clc
xor
and
cmp
adc
or
andb
inc
inc
pop
sbb
mov
cltd
pop
gs
or
imul
popf
dec
loopne
cmc
js
lods
test
inc
push
sahf
sbb
mov
jns
ds
aas
divl
inc
sbb
outsl
add
mov
sub
mov
ja
leave
fsubl
ret
xor
xlat
stos
enter
repnz
sub
xor
cli
scas
jae
test
lods
cli
fwait
pop
xchg
xor
push
cwtl
nop
jl
or
jo
pushf
ret
call
jnp
xchg
xlat
push
adc
dec
mov
jle
mov
sub
inc
mov
sahf
sarb
js
jle
xor
cmc
and
add
add
rolb
adc
inc
test
xchg
and
xor
clc
xchg
cmp
cmpsb
fsubrs
aaa
mov
rcr
jne
popf
imul
and
push
in
adc
inc
inc
mov
rorb
xchg
adc
in
lock
inc
cmp
add
cmp
lret
popf
push
xor
pop
in
push
ficomps
or
inc
xor
add
jnp
cwtl
aam
fisttpl
fs
hlt
test
test
inc
test
popf
mov
clc
lods
testl
clc
sub
aaa
test
push
dec
subl
repz
shlb
shll
push
mov
bnd
insl
mov
gs
dec
mov
mov
bnd
lods
inc
sbb
fisttps
fucomi
repnz
xor
andl
add
adc
adc
push
fsubrs
xchg
sub
cmp
push
jp
ret
mov
lods
xlat
push
fsubl
bound
mov
xlat
pop
stc
out
aam
mov
test
je
xchg
xchg
jmp
mov
mov
push
adc
jg
adc
popa
xlat
mov
sbb
stos
into
sbb
mov
xor
mov
xor
lret
enter
or
ret
cltd
and
lea
xor
xlat
stos
les
push
cli
mov
xchg
mov
push
xchg
fidivl
jno
addr16
in
leave
js
ret
sbb
jno
or
fdivl
lret
or
adc
into
xor
pop
push
mov
pop
test
lea
mov
fistps
scas
fcmovnb
push
fbstp
or
xor
sbb
mov
stos
loop
dec
lcall
int
pop
mov
rol
cmp
fidivrl
enter
push
fwait
cmpsb
fcom
pop
testl
fnstcw
mov
mov
imul
push
or
lcall
cmp
jle
pop
pop
mov
jbe
fwait
sub
loope
and
inc
mov
mov
or
call
hlt
mov
add
add
subl
das
push
push
jp
inc
sbb
rorl
dec
inc
lods
inc
in
lret
pushf
lret
pop
sub
xchg
sbb
xchg
in
mov
rolb
cmp
stos
pushf
xchg
sbb
test
imul
add
pop
call
mov
cmp
sahf
xchg
ds
les
mov
js
rclb
inc
adc
stc
in
add
xchg
lds
fidivrl
jo
xchg
and
frstor
sub
fwait
cmpsb
jnp
fsubs
in
test
mov
jne
fwait
shll
lcall
xchg
xchg
fwait
xor
int
gs
pop
jge
dec
sahf
gs
xor
sub
mov
xchg
mov
lods
mov
pop
shlb
clc
and
jno
pop
sub
push
dec
inc
or
ret
dec
mov
icebp
mov
xor
aad
sbb
add
stos
sbbl
mov
push
mov
xchg
ret
arpl
jns
lahf
jp
jae
or
movhps
stos
push
inc
pop
lcall
mov
stos
jne
test
pop
adc
lahf
lea
sbb
xchg
movsl
addb
jmp
addr16
leave
insl
xor
pop
push
mov
arpl
rolb
sti
inc
add
dec
and
adc
in
push
fisubl
sbb
push
ret
add
cltd
shlb
fdivrs
sti
mov
jne
std
rcll
inc
add
inc
inc
fildll
mov
fcomps
sbb
sub
lcall
ljmp
fistl
imul
add
sti
loopne
div
jmp
icebp
mov
adc
and
or
popf
pushf
inc
test
icebp
or
jb
mov
inc
xor
dec
add
sahf
popf
testl
pop
add
insl
test
inc
cmp
ret
pop
xlat
lcall
xchg
in
test
lret
xor
push
movb
jmp
xchg
enter
inc
repz
push
inc
shlb
pop
lea
addb
stos
xchg
xchg
mov
add
sbbb
mov
repnz
and
xor
cmpsb
jnp
or
subl
cmp
push
adc
jecxz
enter
ffreep
out
mov
cwtl
sahf
je
shr
mov
xor
int3
lcall
mov
movsl
mov
testl
push
test
cld
add
jp,pn
add
test
xor
mov
divl
fnsave
push
lds
mov
xor
repnz
add
lret
fucom
cli
mov
pop
mov
popf
aad
mov
push
cmp
ret
add
daa
sub
ss
enter
lods
ja
or
or
fistl
add
frstor
test
sbb
je
int3
xor
mov
js
inc
mov
dec
mov
adc
inc
or
fwait
jmp
pop
add
push
mov
jmp
fstl
cmp
call
fistl
fdivs
loope
adc
pop
or
push
or
jmp
ds
push
dec
mov
pop
pop
test
fistpl
mov
test
cmp
inc
push
shr
jl
lar
sbb
fwait
cmp
add
pop
dec
sub
in
cmpb
leave
shld
push
enter
mov
pop
lret
mov
dec
xchg
and
mov
arpl
mov
aaa
in
fisubl
pop
or
stos
sahf
ljmp
add
pusha
loop
outsb
sub
adc
push
fistl
cmpsl
pop
pusha
jbe
lods
xchg
sbb
sbb
lods
in
mov
sti
and
sbb
adc
mull
repnz
rcll
xchg
xchg
sbb
addb
mov
cltd
insl
push
inc
test
xlat
pop
fldz
ret
loopne
je
or
hlt
add
dec
cltd
push
adc
dec
mov
imul
ret
adc
cwtl
dec
and
mov
mov
test
jae
mov
hlt
movsl
lret
pop
sti
lret
or
popa
sahf
rcrb
imulb
lret
inc
sbb
jg
les
xchg
mov
push
in
int
mov
test
pop
pop
in
dec
ljmp
aad
fsts
pop
daa
adc
mov
jo
movsl
pop
outsl
les
add
mov
popf
xchg
mov
cvttps2pi
lcall
xlat
pushf
adc
and
les
adc
sbb
mov
pop
jecxz
and
repnz
cmovge
mov
inc
and
cli
pop
xor
xlat
push
push
out
mov
cmp
lea
mov
dec
inc
sbb
std
aam
add
mov
xchg
cmpsb
sub
mov
out
inc
mov
call
int
in
lcall
adc
fstpt
mov
orl
push
orb
xor
dec
xor
rcrl
push
fst
dec
pop
add
xlat
dec
sbb
sub
std
jae
lret
jge
pop
pop
xorl
mov
mov
xchg
dec
xchg
or
push
sub
mov
shrl
fsts
xchg
loope
cmpsb
fstl
jnp
inc
fs
xor
sub
fdiv
sti
mov
push
mov
fdivs
jmp
dec
mov
dec
add
or
les
cmp
mov
pop
push
mov
loopne
mov
pop
pop
cmpsb
or
fidivrs
jne
out
bswap
test
enter
inc
leave
sbb
addb
pop
dec
xchg
xor
ja
dec
ret
jecxz
sbb
popa
fstpt
imul
aad
in
orl
lret
jecxz
insl
lahf
shr
or
push
jbe
sbb
leave
rcrb
sbb
xlat
push
fidivs
mov
lret
cld
dec
inc
mov
xchg
cmp
sub
je
mov
and
les
dec
xchg
add
xchg
add
mov
adc
js
lcall
push
fucomi
cmc
mov
fwait
leave
cmc
and
adc
mov
fmull
rorl
cmp
iret
inc
mov
adc
push
sti
test
pop
inc
jge
imul
leave
mov
pop
cmp
std
mov
cmp
imul
ret
add
addl
mov
jbe
ljmp
mov
jecxz
push
dec
pop
push
sbb
or
fsts
fidivrs
pop
test
push
mov
loopne
pop
adc
lahf
push
xlat
jnp
lahf
rcrb
mov
mov
mov
xchg
push
daa
cwtl
lret
inc
sbb
or
adc
aaa
or
dec
push
inc
push
mov
pop
mov
mov
in
mov
xchg
test
dec
mov
mov
lds
scas
jge
stos
movsl
sbb
jl
fistpl
lcall
jbe
mov
dec
test
scas
jg
dec
cmc
cwtl
stos
cld
mov
jmp
js
fs
inc
rcrb
aam
andl
roll
call
lahf
hlt
pop
cmp
push
fdivrl
ficoml
insl
push
push
xchg
leave
dec
mov
mov
pop
aas
out
out
and
cmp
loopne
hlt
pop
sub
push
mov
popf
in
push
adc
repz
adc
arpl
xchg
divb
mov
repz
cmp
lock
scas
jo
or
fnsave
pop
ret
add
dec
lret
mov
and
add
test
movsb
leave
test
cld
sub
lahf
lcall
rol
imul
nop
fcoms
add
pop
lret
add
inc
cmp
xor
pop
jb
mov
dec
jns
and
jnp
aad
mov
jmp
xchg
cltd
fcmovne
loop
and
mov
inc
aam
jae
and
mov
mov
iret
test
adc
out
push
les
xchg
xchg
mov
mov
xchg
jbe
jo
jnp
imul
inc
and
fidivrl
xor
loop
je
cmp
aam
sbb
inc
enter
push
adc
push
mov
fsubs
vfmsub132pd
ljmp
neg
test
arpl
js
mov
shlb
adc
mov
fs
cwtl
lret
movsl
ret
dec
lret
cltd
xor
mov
pop
stos
push
inc
jle
sbb
inc
mov
sahf
popf
stc
fs
cmp
je
int
addl
int
inc
pop
lcall
pop
stos
rorl
xchg
fistl
cli
sub
fcoml
sbb
sub
xor
jmp
pushf
test
leave
push
nop
add
inc
xchg
cli
cltd
repz
mov
mov
rcll
push
xor
rolb
or
rolb
in
imul
incl
cmp
imul
pop
fdivrl
cmp
test
cmp
and
lea
push
mov
cmp
out
and
sbb
divb
ljmp
mov
in
sbb
sbb
add
rolb
cltd
jo
divl
fnstsw
arpl
sbb
dec
ljmp
push
dec
sbb
xchg
mov
xor
push
sarl
test
inc
cmp
leave
setne
roll
test
mov
mov
mov
cmp
inc
xchg
adc
out
lods
inc
xchg
and
sbb
add
mov
jge
xchg
scas
xchg
in
les
aam
cmp
aad
pop
cmpsb
enter
and
test
mov
mov
sti
mov
ret
aaa
mov
and
bound
mov
cwtl
flds
add
in
mov
negl
sbbl
das
push
mov
adc
cmp
mov
test
ret
pop
jns
movsb
rcrb
xor
lock
adc
mov
xchg
jno
pop
and
iret
gs
ss
fcmovbe
dec
sbb
and
dec
push
lret
mov
mov
fs
fnstsw
pop
fisttpll
test
imul
cmc
add
lret
aaa
ljmp
enter
int3
xor
shll
ljmp
fs
xchg
jmp
inc
inc
sbb
ret
insl
test
rcll
jle
xchg
xchg
incb
mov
jne
jle
xchg
fld1
jb
cmp
repnz
loopne
je
or
test
jmp
adc
outsb
jmp
lret
cltd
mov
add
add
xor
mov
shl
pop
adc
xlat
clc
lcall
hlt
mov
idivl
add
movl
mov
cmpb
adc
scas
sbbl
stos
jns
push
mov
pop
dec
adc
fistl
dec
sbb
rol
fwait
add
pop
or
push
dec
insl
xchg
mov
fiaddl
push
outsb
les
sbb
cmp
lds
fwait
mov
jecxz
pushf
sahf
xchg
pop
push
fbstp
sub
xor
orl
or
inc
add
sub
dec
mov
xchg
fsubs
cmp
fidivrs
insl
repz
iret
inc
mov
rcl
cmp
xlat
xchg
ret
out
mov
add
mov
xchg
jmp
adc
stos
arpl
int
push
ret
sti
pop
test
pusha
push
lea
push
mov
push
int3
push
mov
lods
movsl
fists
cmpl
lock
rcrb
mov
mov
adc
mov
pop
sub
popa
nop
sbbl
pushf
adc
sub
test
movsb
push
cmp
lods
sbb
mov
ja
fs
movsl
iret
div
imul
je
fcomi
addl
ret
inc
pop
xchg
adc
xor
fisubl
push
pop
push
sub
push
sub
fwait
lods
movb
and
adc
leave
aad
ret
jg
xlat
xchg
cld
add
sbb
out
js
inc
mov
pop
out
arpl
rolb
stos
mov
xchg
stos
xchg
adc
push
fbld
insl
jmp
scas
add
mov
int3
out
jb
fwait
lea
mov
test
enter
int3
inc
push
jb
into
mov
mov
pop
pop
cmpsl
daa
clc
int
int3
sbb
test
aaa
in
mov
lods
xorl
inc
scas
in
lcall
dec
ficoms
jae
jecxz
pushf
cltd
test
add
rcrl
test
jno
mov
frstor
jbe
cwtl
push
stos
mov
aaa
mov
lret
sahf
or
arpl
sbb
fiadds
add
popf
ljmp
or
lret
inc
pop
xchg
lret
or
movsb
nop
rorl
in
test
and
fs
lods
pop
cmp
xchg
adc
out
mov
xchg
and
jb
mov
clc
dec
enter
lcall
lahf
out
into
les
fwait
cmp
gs
xor
fcomp
pop
cmc
xchg
sub
sti
mov
jne
rcll
movl
xchg
fmuls
imul
sti
push
adc
ret
pop
pop
mov
dec
cmp
stos
cmp
mov
aam
xorl
test
mov
lock
add
add
sbb
inc
aas
repnz
stos
ret
and
fmull
repnz
push
stos
mov
jnp
sub
test
inc
mov
sbb
stc
dec
sahf
mov
leave
dec
and
or
push
sbb
lret
or
mov
pop
pop
ljmp
push
into
jle
fcmovbe
xorb
imul
fistps
test
mov
icebp
cmp
and
adc
jp
and
cmp
dec
bound
dec
mov
fnstenv
imul
xchg
fisubs
es
xchg
cltd
testb
fdivrl
jne
dec
cmp
test
push
pop
fimull
pushf
mov
loopne,pn
cmc
xchg
mov
xchg
in
cmpsb
jbe
mov
mov
inc
sahf
shrl
mov
hlt
ds
and
fcomi
mov
add
inc
mov
aad
cmpb
insl
lcall
jne
test
cld
test
mov
movsb
leave
test
xchg
orb
ljmp
popf
lret
fbld
inc
pop
sub
inc
sbb
xchg
adc
xchg
pusha
repnz
outsl
add
sub
xor
shll
jnp
xchg
cmp
jge
pop
xchg
xchg
mov
sti
and
xor
fildll
xchg
xor
shlb
dec
dec
mov
adc
cmpsl
push
sub
ja
fistps
cmpsb
jnp
cmp
mov
ret
lds
enter
or
mov
xchg
test
pop
movsb
mov
jne
cmc
mov
mov
repz
adc
add
sub
pop
adc
inc
mov
into
lcall
iret
fisttps
mov
jp
in
and
mov
jecxz
cld
or
ret
dec
mov
push
divb
rcr
sbb
and
test
pop
jge
leave
pop
dec
das
pop
mov
cltd
pop
std
in
ret
mov
lock
cld
jo
xchg
or
inc
cmp
add
adc
mov
mov
push
fadds
inc
push
js
je
inc
fucomp
sbb
pop
sub
or
inc
repnz
rcrb
dec
inc
call
jne
rorl
aas
stc
mov
sbbb
loope
insl
xchg
jbe
add
mov
jmp
std
mov
sti
and
sbb
jecxz
mov
shrl
out
jne
lret
adc
mov
push
xor
and
mov
rcrl
loopne
adc
cmp
and
mov
add
ret
fdivrp
mov
cvtpi2ps
mov
gs
jns
pop
adc
mov
fs
jno
mov
sbb
rolb
aaa
mov
in
mov
jae
fidivl
lock
repz
stos
in
repnz
mov
sbb
sbb
adc
test
push
leave
push
rorl
xchg
push
inc
mov
lret
je
push
cmp
pop
ret
into
cmp
sbb
xor
fwait
leave
loop
sub
push
mov
cmp
or
add
outsl
cmp
jg
adc
pop
push
call
inc
mov
cmpsl
ret
fld
fadd
pop
cmp
jne
cltd
inc
mov
inc
inc
mov
push
ds
and
into
imul
orb
push
test
sbb
mov
les
std
fstl
aas
sti
mov
jns
push
shll
push
flds
sbb
add
insl
cwtl
ret
mov
xor
xlat
dec
pop
add
jns
lds
cli
xchg
inc
mov
mov
je
fxch
pop
test
lahf
lcall
pop
sbb
cli
xchg
or
fisubrl
roll
stos
fisubrl
outsl
or
test
add
jmp
cmp
idivb
popf
scas
pushl
loope
sbb
mov
cld
dec
aaa
and
fwait
and
mov
jge
cltd
push
mov
cmpsb
xchg
aam
or
xchg
insl
or
je
cmpsb
xlat
xchg
jle
loope
and
es
jnp
aaa
sbb
in
push
pop
stos
aas
adc
push
jle
dec
daa
jmp
jecxz
mov
aad
icebp
out
jbe
fistpl
mov
andl
mov
jb
popa
jl
dec
ret
fisubs
enter
dec
add
add
jo
int3
addr16
ljmp
push
lds
cmp
je
repnz
cmp
cs
jnp
pop
insb
cwtl
sbb
insl
mov
hlt
test
in
hlt
aad
push
movsl
pop
mov
sahf
sti
push
sub
inc
inc
mov
in
mov
push
cmp
dec
lock
jge
push
mov
js
pop
sar
add
mov
lcall
dec
sbbb
outsb
sub
je
jp
test
xlat
insb
inc
adc
push
cltd
insl
adc
mov
lea
data16
adc
sarb
sarb
cwtl
int3
adc
lock
dec
cwtl
rclb
repz
test
or
pop
scas
shrb
inc
mov
mov
test
xchg
ffree
pop
add
iret
push
pushl
cvtps2pd
xor
mov
shlb
jecxz
adc
ret
pop
dec
test
xor
mov
arpl
dec
xor
sub
mov
fists
jae
mov
push
lret
pushf
fwait
test
cmp
jbe
insl
mov
jno
vpsadbw
adc
dec
mov
aam
inc
jg
scas
dec
faddl
mov
lahf
ljmp
pop
jge
mov
leave
loop
inc
loopne
aas
cmpsl
xlat
add
je
arpl
cltd
xchg
int
dec
in
mov
popf
je
cmp
push
mov
out
cmp
jo
ret
jp
gs
in
push
andl
xor
rorl
or
aam
inc
and
and
inc
push
push
inc
mov
jne
pop
mov
ret
inc
inc
xor
sahf
sub
mov
pushf
imul
lcall
inc
dec
lahf
lret
jecxz
gs
rorb
or
pop
rcll
cmc
cld
jg
imulb
fidivrl
fnsave
cmp
pushf
adc
push
lds
jl
pop
mov
push
dec
push
mov
push
dec
mov
fmuls
pop
insb
push
cld
pop
sub
push
mov
push
push
dec
cmpsl
push
jne
push
pop
mov
sti
push
sub
popa
cmpsl
flds
inc
pusha
push
jg
fbstp
adc
jmp
rcrb
addl
mov
jo
pop
jns
fsubs
push
cmc
je
andb
out
push
test
xlat
insb
je
fidivl
jle
les
pop
lea
fwait
lea
xor
mov
xchg
insb
aaa
jecxz
mov
inc
in
dec
inc
xor
push
inc
mov
gs
jge
sub
or
dec
mov
imul
jnp
lods
fists
add
decb
jnp
sahf
shll
mov
add
add
and
dec
mov
pop
sub
push
push
and
test
lret
loop
inc
popa
pop
int
or
adc
dec
mov
dec
mov
insb
push
pop
idivb
sbb
idivb
insl
mov
dec
mov
std
testb
scas
dec
push
sbb
movsb
push
sub
inc
in
cmp
cmp
ljmp
out
jmp
js
fucomi
idivl
inc
out
std
mov
pop
ds
les
jl
jp
fnstenv
fucomp
push
test
movsl
xchg
jbe
mov
test
fstpl
fwait
cli
aaa
popf
iret
pusha
adc
int3
pop
sub
inc
sbb
fsubp
xchg
jge
daa
adc
lret
xchg
mov
scas
or
adc
add
or
int
jg
cmp
fidivrs
lcall
in
inc
roll
mov
mov
sub
testb
pop
dec
push
fwait
insb
sub
sub
xor
lods
push
sub
mov
push
mov
xchg
sahf
adc
cmp
adc
movsl
push
pop
inc
mov
outsb
fstps
cmp
lcall
xor
push
cmp
push
mov
jp
iret
sahf
pop
push
or
pop
fwait
leave
push
jp
cld
pop
aas
cmpsl
pop
or
adc
mov
loopne
out
mov
jmp
aaa
sbb
push
lods
xlat
push
fsubs
xor
pop
jnp
dec
popa
xor
and
inc
pop
push
or
and
sub
inc
xor
dec
stos
sbb
popa
test
or
jne
les
inc
inc
mov
mov
into
xchg
jg
or
adc
push
pushl
lar
xor
mov
imul
jg
cld
jg
jnp
pop
int3
addr16
sbb
sbb
outsl
sub
icebp
sbb
loop
mov
mov
mov
je
test
or
pop
outsb
push
cld
mov
jge
push
pop
sbb
add
fistl
cli
cmp
sahf
popf
push
icebp
pop
outsb
ror
xor
lock
sarl
mov
adc
jle
xor
leave
loopne
xchg
sbbb
push
jb
adc
jns
fwait
xor
mov
lock
jo
call
and
test
mov
xchg
ds
jbe
cmp
dec
mov
out
je
fcoms
inc
cmp
ficoms
mov
mov
pop
cmp
test
cld
or
inc
divb
cmp
add
push
repz
add
cld
div
sti
sbb
cmp
push
mov
mov
sub
sub
addr16
mov
mov
fsubrl
dec
sbb
add
mov
lds
lcall
jae
cli
mov
dec
mov
into
arpl
jbe
insl
mov
imul
cmp
push
jecxz
pop
mov
dec
cmpsl
push
ja
add
mov
jae
cwtl
push
cmp
sbb
in
cmp
cmp
stc
insb
inc
bound
in
out
fs
pop
repz
in
idivl
add
idiv
mov
test
out
jp
outsl
test
and
cmpsb
xchg
insb
jbe
jo
test
fbld
push
add
pop
lea
fldz
mov
or
cmp
mov
rorl
loope
jl
sub
mov
aad
ficompl
adc
les
inc
inc
mov
add
or
or
adc
xor
cmp
pop
dec
lock
in
ja
mov
ret
jg
pop
xchg
mov
dec
mulb
fdivrl
pop
add
test
test
mov
push
ret
mov
aaa
aaa
mov
arpl
sbb
add
inc
sub
adc
scas
cmp
mov
lods
testl
push
or
push
sub
inc
inc
pushf
sub
jns
mov
xchg
inc
cld
fisubl
mov
mov
fstpt
or
mov
sub
mov
xor
test
and
es
mov
sbb
fsubs
jl
ret
xchg
xor
jbe
sbb
loopne
xor
push
imul
inc
cltd
cmp
add
mov
pop
pop
mov
add
dec
sbb
iret
mov
or
ficoms
rcrb
sbb
add
test
mov
shr
movsl
cmp
xchg
arpl
leave
rcrb
rorl
lods
push
adc
inc
frstor
mov
sbb
daa
xchg
test
mov
int3
sub
xor
ds
fcmovb
rcr
adc
cmp
lret
scas
inc
ds
shrb
in
adc
or
in
scas
insb
out
mov
sarb
pop
cmpsl
xlat
in
andl
stos
clc
jb
adc
xchg
cltd
xchg
xchg
cmp
mov
stc
mov
cmc
push
push
fdivrs
xlat
add
subl
lea
inc
inc
jmp
fnsave
out
cmp
lock
lea
add
in
push
mov
aaa
lret
je
mov
xor
sub
lret
adc
into
test
sub
mov
iret
add
jns
ds
aas
xlat
cmc
cmp
movsl
ret
inc
stc
lret
adc
loop
mov
mov
popf
pushf
inc
mov
not
mov
ja
inc
in
arpl
sub
lahf
jp
imull
std
in
mov
mov
xchg
cmp
jno
inc
xchg
imul
fistpl
xchg
jbe
jbe,pn
pop
aad
mov
cld
loop
xchg
js
das
popa
or
push
cwtl
add
daa
push
inc
pop
adc
cmpsb
mov
lea
aad
stc
xor
push
xchg
imul
xor
stos
cmp
jb
pop
mov
fs
rcll
add
ds
lret
inc
mov
enter
jle
fldt
dec
ret
pop
shll
jns
ss
mov
jmp
lret
in
lcall
int
loop
jnp
mov
cltd
jo
lock
adc
mov
cltd
enter
inc
mov
adc
mov
xor
hlt
push
ss
lret
fildll
imull
idiv
jo
scas
jno
add
and
nop
jp
add
stos
std
or
add
sbb
test
jns
inc
pop
mov
lods
mov
mov
loopne
repz
inc
dec
inc
xchg
cmpsl
js
sti
mov
and
sti
cmpsb
call
les
xchg
sub
test
push
fdivrs
gs
imul
inc
popf
mov
pop
cltd
fadd
pop
fldenv
aad
inc
and
cmp
or
cmp
xchg
sub
les
mov
cltd
jns
or
xor
cmp
movsl
lcall
dec
push
fisubs
imul
dec
aas
int
and
call
lock
inc
sbb
jg
mov
lods
ficomps
pop
xor
jmp
sbb
psadbw
mov
cmp
js
dec
inc
in
mov
sbb
sub
mov
sub
fcmovne
push
xchg
jnp
lods
lock
push
mov
sbbl
or
dec
cmp
arpl
call
sar
add
inc
mov
sahf
adc
pop
mov
xor
mov
inc
mov
and
lret
mov
dec
and
gs
fwait
cmp
mov
push
dec
xchg
push
jne
insl
jge
sbb
into
rorb
inc
add
pop
inc
dec
mov
dec
inc
push
jb
testl
aad
sbb
jne
mov
sub
movsl
imul
pop
lds
iret
out
lret
xchg
in
sub
sbbb
cltd
mov
sbb
or
cmpsl
mov
mov
xor
dec
sbb
pop
loop
jne
rorl
rorl
add
iret
dec
mov
cmp
int3
vpandn
adc
or
add
not
xchg
cmp
rorl
stos
int3
fxch
imul
cwtl
sub
pushf
jle
pop
mov
in
xlat
jge
xlat
pushf
push
fwait
fs
or
inc
cmp
adc
push
cs
dec
aas
repnz
inc
and
mov
lret
aam
add
jmp
dec
inc
popf
mov
jnp
scas
roll
out
or
mov
mov
shlb
test
cwtl
sbb
cmpsl
jne
or
lea
js
cmp
adc
fistpl
call
mov
or
out
and
iret
lock
inc
and
add
int
inc
pop
ret
fwait
xlat
or
lret
push
lret
inc
sbb
rolb
aaa
leave
sbb
and
into
in
fbld
lahf
fcmove
stc
pusha
push
sub
idivl
std
int
add
jl
rorl
fsts
fisubl
sbb
cmp
pop
xchg
fistl
xchg
xor
popf
adc
xor
push
cltd
jle
lods
decl
loope
into
add
lret
xor
pop
fldt
and
inc
mov
jmp
xor
mov
rclb
cmp
mov
in
or
mov
mov
xchg
sahf
enter
loop
je
mov
ret
inc
push
push
jmp
cli
jne
mov
ret
push
xchg
sti
mov
xor
pushf
jne
les
cmpb
lods
xchg
add
jmp
cli
add
scas
lock
cs
mov
or
or
ret
fs
psadbw
icebp
ss
mov
or
sbb
movsl
dec
scas
fistl
xchg
aad
in
stc
pop
mov
jo
xchg
adc
adc
pop
pop
inc
imul
jge
mov
add
jl
roll
pushf
adc
sub
cmpsl
push
outsl
fwait
lret
out
adc
dec
mov
aas
clc
pop
sub
dec
stc
arpl
mov
add
pop
inc
mov
loope
sbb
xchg
xchg
sahf
xchg
fcoml
test
xor
insl
jmp
pop
loop,pt
mov
inc
and
sbb
out
jne
fdivs
cmpb
xor
shll
or
xchg
in
pop
addl
in
imul
jmp
and
or
int
imul
lret
leave
mov
stc
mov
js
inc
sub
out
std
inc
stc
je
cld
sub
imull
add
roll
je
pop
or
xchg
jl
rorl
or
xor
lcall
push
pushf
cmp
sbb
mov
pop
out
push
sbb
or
push
add
mov
adc
mov
aam
stc
repnz
es
mov
fisubl
ficoml
test
jne
insl
xchg
loopne
jne
outsl
or
aad
or
adc
enter
dec
push
or
add
xchg
pusha
pop
imul
xor
fiaddl
sub
jne
fdiv
pop
fstl
jae
sbb
mov
inc
sbb
popa
cwtl
rcrl
sbb
rcrb
sbb
repz
lahf
xchg
jns
lds
cmp
sub
out
sahf
sbb
xor
pop
pop
in
push
loop
sub
sbb
xor
xchg
or
xchg
pop
sbb
aad
mov
enter
in
ficompl
out
sbb
fiadds
inc
push
pushl
stos
popa
lcall
add
jo
sbb
or
xchg
pop
mov
and
test
push
fidivrl
pop
jae
inc
gs
inc
or
stos
xor
xabort
push
cmp
clc
sub
out
push
aam
test
push
sub
cltd
mov
out
cmc
xor
cmc
shll
jbe,pt
mov
and
in
aas
dec
stos
aam
icebp
pop
push
add
pop
push
rcl
mov
mov
adc
and
xor
mov
jbe
and
leave
outsl
sbb
jno
lea
leave
inc
push
lds
fisttpl
and
stc
push
pop
cld
and
idivl
jo
shll
or
dec
rorl
fsts
std
movsl
or
fidivl
mov
ret
push
mov
fstpt
inc
pop
pushf
xor
xchg
xchg
fstl
sub
mov
in
test
sti
and
andl
cmp
cmp
in
add
mov
push
fbld
dec
mov
lods
xlat
addr16
inc
and
and
fs
xchg
aas
shlb
das
clc
hlt
mov
xchg
and
sbb
sub
cmp
pop
mov
rclb
sarl
sahf
bound
pop
jns
lcall
mov
aas
in
and
cmc
clc
in
mov
sbb
jg
mov
sti
and
insb
das
lahf
shll
or
psadbw
aad
leave
std
enter
and
test
movsb
leave
mov
lahf
cli
fs
aad
push
test
ret
test
push
or
inc
cmp
lret
add
jl
rorl
test
fildl
aad
jb
notl
mov
or
pusha
ret
xchg
pusha
fisttpl
push
mov
push
rcr
pop
fisttpll
xorl
mov
add
rcr
cltd
bound
dec
mov
testl
inc
scas
cltd
or
pop
xchg
inc
cmpsb
sahf
sbb
das
imul
xor
dec
aaa
mov
add
mov
adc
sub
mov
jne
jnp
fisttpll
out
inc
and
shr
xor
sub
mov
jb
roll
sub
mov
and
xor
mov
rcrb
inc
push
iret
xchg
int3
addr16
inc
into
pushf
jmp
sahf
scas
xor
mov
pop
pop
pushf
fcmovu
int3
pop
test
stc
dec
in
fdivr
dec
ficoml
mov
mov
or
cmp
lret
test
mov
jbe
arpl
je
mov
daa
push
imul
js
and
cs
test
xchg
mov
adc
packuswb
shrb
mov
shl
pop
fiadds
stc
cltd
bound
cmp
arpl
insl
sti
push
xor
jne
cmc
mov
lock
fcmovne
add
sbb
cmpb
lcall
gs
jb
rorl
mov
popa
add
int
lods
cli
clc
lahf
lret
or
insb
shll
push
jnp
mov
mov
fcmovu
push
pop
dec
movsl
mov
aaa
push
mov
cli
inc
dec
inc
fcmovb
push
add
fs
movsl
jae
add
fldt
jnp
xlat
push
leave
dec
movsl
mov
test
cmp
stos
movsb
adc
mov
mov
test
inc
inc
je
dec
pop
cmp
mov
outsl
jmp
mov
in
fs
rcrl
loope
sti
push
jle
sbb
fwait
in
add
mov
nop
or
push
xchg
out
es
xor
aad
dec
cmpsb
push
mull
fisttps
call
lretw
mov
leave
stc
hlt
pusha
das
xchg
xor
sub
lret
push
in
mov
mov
mov
sbb
ret
adcl
sarl
add
add
and
bound
jae
push
and
mov
add
loope
sub
or
add
push
push
rclb
jmp
je
sbb
or
and
or
sarb
mov
sub
fucomp
jne
pop
xchg
dec
or
fisubrl
test
xchg
push
rorl
cmp
dec
stos
jge
dec
push
pop
dec
gs
fistl
cmpsb
repz
mov
shll
aas
jge
inc
sub
out
stos
jmp
cli
movsb
ret
mov
push
add
clc
xor
mov
sbb
lret
xchg
mov
cmp
adc
mov
fwait
ret
mov
xorl
pop
cmp
aaa
sub
xor
xchg
inc
add
fmuls
test
in
sub
cmc
fldenv
adc
or
mov
fsubrs
pop
andl
or
out
sub
iret
pusha
sbb
inc
dec
fadds
add
lcall
adc
mov
xor
call
push
and
push
dec
mov
stos
adc
hlt
jb
addb
cmpsb
adc
jl
inc
leave
enter
lret
test
fstps
xor
ret
mov
inc
dec
in
jmp
loopne
mov
sub
jne
scas
mov
testb
cmp
sub
push
push
sub
jns
scas
xor
repnz
inc
scas
add
mov
je
pop
mov
xchg
jge
mov
xchg
test
jb
cltd
mov
cmpsb
jp
xchg
jp
mov
es
cmp
movsl
jnp
shrb
mov
bnd
lds
je
adc
xchg
ds
fcmovnb
mov
popf
push
cmp
mov
jbe
and
fs
imul
cmp
jge
cmp
je
hlt
xor
adc
loopne
mov
orb
pop
das
push
mov
xlat
push
or
sbb
movsl
ds
js
idivl
sahf
das
xchg
stc
cli
in
test
mov
add
daa
add
inc
push
jae
sub
push
cli
setb
rorl
pop
pusha
in
jmp
mov
icebp
sbb
fistpll
and
xor
pop
das
sub
sub
pop
sub
iret
add
sub
les
push
mov
sub
mov
addr16
push
sub
inc
pop
mov
es
mov
push
cmpsb
mov
pop
mov
xor
subl
mov
lds
addl
mov
sti
add
jp
cmpsb
popa
das
shll
mov
push
outsb
add
iret
push
lahf
and
sub
push
cmp
or
cli
rolb
pop
add
js
adc
ret
movsl
int3
fs
outsb
test
into
cmp
or
test
mov
jecxz
je
fbstp
cmpsl
je
xor
inc
les
or
and
test
and
dec
stos
inc
in
mov
pop
dec
stos
movsl
xchg
mov
inc
fs
jecxz
cmp
fidivrs
mov
jmp
cmp
pop
stc
xlat
and
cltd
ds
mov
and
andl
jmp
lods
and
pop
cli
push
ret
xchg
test
jbe
popf
xchg
call
push
fcoms
mov
add
insl
pop
mov
xor
cmpsb
lret
bound
or
xchg
pop
inc
stos
in
sub
cmp
xchg
pop
in
dec
mov
ja
adc
sub
test
scas
mov
mov
jmp
scas
and
adc
out
ljmp
push
add
xchg
bound
dec
inc
leave
movd
arpl
ljmp
shll
sub
mov
jae
cmp
dec
popf
lret
movsl
movaps
pop
and
sbb
mov
imul
and
inc
lods
outsb
imul
inc
mov
push
loop
loop
rcrb
stc
dec
shlb
pop
pop
adc
fwait
pop
enter
dec
loop,pt
out
and
sbb
sub
arpl
popf
cmc
je
mov
loop
xor
leave
stc
inc
fs
xchg
bound
jl
in
xchg
iret
scas
and
pushf
push
jge
dec
ds
in
dec
shlb
jmp
shll
fs
cmp
bound
adc
pusha
mov
divl
jle
jo
adc
add
inc
xor
xor
or
inc
mov
push
sbb
jmp
jo
sbb
dec
mov
jg
dec
and
dec
xor
sub
dec
mov
call
jnp
stc
dec
ss
mov
xchg
leave
lret
inc
lret
imul
stos
inc
xchg
mov
pusha
pop
dec
stos
adc
cltd
xor
pop
mov
push
mov
repnz
pop
mov
jb
push
loope
jb
scas
push
addr16
call
push
and
ss
test
mov
nop
data16
mov
pushf
adc
xchg
cmpsl
xchg
test
outsl
pop
shlb
pusha
xchg
add
mov
sub
int
push
mov
leave
out
rol
idivl
pop
loopne
and
loopne
pop
mov
mull
addr16
dec
outsl
lret
push
sub
add
lds
jbe
sahf
mov
push
cs
and
jne
in
out
shll
jno
aaa
xor
aas
sti
loop
movsb
and
std
ljmp
sub
or
test
jg
insb
popa
sbb
insl
sub
jecxz
mov
sub
movsb
jne
xchg
adc
addr16
ret
sahf
xor
aam
stc
in
jmp
gs
hlt
insb
lcall
ja
sbb
add
and
addl
je
dec
fcomps
dec
xchg
sarl
ljmp
stos
enter
pushf
adc
movsl
lret
cmc
xor
out
sub
mov
jo
inc
inc
sub
mov
push
stos
sbb
add
xlat
and
or
xor
cmpsl
shr
je
mov
addr16
jno
push
xor
inc
test
push
jl
xchg
jge
sbb
ds
icebp
sti
jmp
incb
sbb
jecxz
push
sti
mov
das
push
pop
call
fsub
in
addr16
xchg
ljmp
mov
inc
dec
push
pop
into
sahf
sti
fucomp
insl
push
jecxz
push
and
xor
jns
repnz
inc
repnz
in
vandps
inc
ret
push
lock
mov
sub
jnp
xchg
cmc
test
sbb
xchg
jge
dec
lahf
jecxz
bnd
xor
jnp
jg
rol
inc
sbb
add
fcomps
jbe
jecxz
outsl
jle
pop
dec
cmp
ret
xlat
and
stos
xchg
aas
pop
xchg
dec
jb
jns
movsl
push
adc
aam
sti
pop
lcall
pusha
rorb
jle
repnz
daa
aam
aad
aad
fnsave
mov
inc
or
xor
popa
gs
push
mov
inc
dec
stos
shl
test
jge
stos
out
push
mov
push
divl
hlt
add
and
mov
mov
pop
pop
cmp
outsb
dec
inc
lret
fcompl
cs
cmc
stc
ljmp
dec
sbb
repz
cs
push
loope
outsb
pusha
dec
sbb
pop
rcrb
xchg
mov
sub
mov
fisubrl
out
xchg
rorl
push
or
lret
jnp
jb
notl
daa
mul
cmpsl
and
inc
lret
jmp
in
mov
lods
pop
jle
add
xchg
incl
dec
jno
test
notl
cltd
out
xor
or
lods
jo
xchg
nop
add
ja
rol
pop
ficoms
fcompl
data16
lock
lahf
aaa
pop
cmp
andb
cmp
jmp
cmpsl
fs
jnp
xchg
imul
mov
test
ficomps
int
lret
cld
pop
and
jb
xor
addr16
xor
jne
pusha
add
sub
xchg
outsl
das
stos
ss
ficoms
inc
mov
arpl
scas
push
test
add
cmp
icebp
mov
push
cmp
inc
test
pop
dec
into
xchg
jg
pushf
cmp
jmp
inc
popa
sbb
bound
lret
test
sub
sub
in
and
push
sahf
in
xchg
in
stos
jne
iret
mov
cmp
mov
fucomi
in
into
sbb
sub
lods
mov
mov
repz
sub
out
in
hlt
inc
adc
push
loope
sub
xchg
pop
icebp
xchg
adc
rcrl
inc
fwait
out
jb
sbb
test
loope
shrb
jb
aaa
ffree
inc
cwtl
ds
rclb
sti
imul
dec
sahf
gs
int3
push
ds
xchg
mov
daa
and
ja
les
cmp
add
push
jge
push
mov
outsl
out
ja
dec
gs
or
pop
mov
sub
jbe
call
mov
jns
pushf
scas
scas
adc
push
add
adc
jg
adc
xor
cmp
sub
add
jge
mov
shl
je
mov
push
rclb
jne
xchg
aad
dec
push
jbe
test
inc
pop
dec
mov
inc
xchg
sbb
fs
sti
in
js
pop
sub
push
mov
inc
jne
inc
xlat
insb
add
sbb
je
rclb
out
add
cld
inc
sub
test
jp
adc
pop
xor
dec
and
push
out
jmp
lods
fs
xchg
stos
cltd
decb
pop
xlat
and
or
push
mov
and
jno
pcmpeqb
xor
sub
or
mov
sarl
inc
testl
ret
jo
in
ja
inc
mov
hlt
jno
gs
mov
jo
sbb
add
dec
in
adc
loop
and
mov
pop
and
xchg
push
jmp
xor
push
pop
call
sub
bound
fdivrs
pop
ret
add
iret
push
sbb
dec
aas
dec
lahf
jp
dec
jnp
push
lods
mov
insb
inc
pusha
push
aaa
outsb
sub
cmc
or
rolb
jg
movsb
and
pop
mov
outsl
inc
add
cmp
out
int
dec
xchg
aas
repnz
lret
es
xor
in
mov
ljmp
das
push
aas
push
xchg
gs
inc
sbb
iret
pusha
push
mov
es
xor
xchg
ss
and
aam
mov
or
leave
sub
loop
mov
data16
mov
xlat
pop
add
and
fstpl
push
cmp
fists
aad
mov
sbb
lret
mov
in
testl
lods
and
xchg
rcrl
pop
mov
mov
loope
shlb
adc
lock
movsl
pop
ja
fcoms
inc
in
idivb
hlt
mov
jae
mov
jbe
pop
dec
pop
js
sbb
lret
push
lds
arpl
lahf
cmp
mov
mov
and
push
add
stc
sbb
pusha
in
cmp
jle
xor
stc
pushl
jne
inc
push
pop
dec
jb
cld
push
adc
out
xor
xor
dec
sbb
sahf
sbb
pop
gs
cmp
jl
dec
mov
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
inc
jno
pop
fildll
cmp
mov
out
xor
push
mov
in
cmp
pop
pop
fs
cmovo
mov
jle
sbb
or
inc
jmp
jle
int3
adc
xor
outsl
sub
int
xchg
ds
sub
or
movsb
insb
inc
out
mov
lret
imul
inc
and
mov
movsl
test
fistps
lret
mov
push
jge
sbb
pop
lock
jno
out
cmp
fstps
in
xchg
dec
lods
push
push
movsb
mov
adc
out
out
sub
cmpsl
push
testl
aam
cld
xor
xor
cwtl
add
pop
iret
pop
pop
cmp
leave
push
inc
ficoml
inc
sbb
mov
jl
xor
ret
push
xor
push
add
loope
cld
arpl
dec
clc
jg
sbb
and
and
and
loope
or
ja
and
xchg
add
pusha
cmp
push
or
addr16
inc
insl
aad
inc
xchg
dec
ds
mull
mov
fstpt
cmp
xchg
add
jne
push
mov
arpl
xlat
data16
push
inc
inc
adc
pushf
sti
mov
cmp
insb
popa
iret
and
push
icebp
and
mov
push
pop
fdivs
sbb
orl
adcb
adc
stos
xchg
fildl
movsl
add
int3
xchg
mov
add
pop
pop
jmp
mov
push
sub
fistps
mov
inc
stos
fstpt
lds
pop
rorb
inc
cmp
pop
lcall
je
int3
push
pop
xor
imul
adc
out
jns
and
jb
insb
mov
jl
cmp
xor
icebp
jae
fs
and
imul
add
mov
shll
cmc
or
cmpsl
jecxz
fisubl
jae
and
or
mov
into
or
inc
jl
loopne
xor
outsb
add
push
push
sub
inc
inc
jmp
add
mov
jg
fs
fwait
push
pop
leave
mov
xchg
out
sti
ja
push
adc
fstps
push
push
mov
jae
shll
add
cmp
pop
jae
sbb
xor
push
xor
lock
or
cli
jae
cmpsl
mov
andl
jle
shl
adc
or
in
insl
lds
cli
pushf
add
push
out
cmovo
adc
cmp
mov
stos
or
jb
les
xor
dec
sbb
sbb
lea
mov
xchg
iret
sbb
lret
xor
cltd
adc
es
xchg
je
loope
cmp
and
pop
cwtl
sub
inc
pop
movsl
fcoml
int
pop
add
popa
mov
add
leave
fstpl
add
loopne
popl
push
jne
pusha
add
aad
add
pop
xlat
pop
arpl
stc
xchg
sbb
push
aad
push
loopne
fs
cmp
jmp
test
dec
lret
scas
test
xchg
xchg
mov
fmull
or
sub
sbb
loop
mov
mov
sub
add
test
push
stc
loope
jecxz
clc
jb
aaa
mov
lahf
inc
pop
jns
dec
aad
sub
push
lock
add
push
in
xor
testl
or
or
sahf
pop
daa
xchg
and
jle
mov
jae
movb
sbb
sbb
lcall
sbb
sahf
fsubl
jl
fisttps
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
inc
push
mov
fildll
cmp
mov
out
xor
push
mov
in
cmp
pop
pop
fs
cmovo
mov
jle
sbb
or
inc
jmp
jle
int3
adc
pop
into
lahf
adc
test
pop
dec
std
dec
or
and
popa
int3
bound
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
mov
stos
xchg
ror
push
clc
daa
out
xchg
in
enter
aam
cmp
aaa
outsb
lods
add
orb
fisttps
jg
xor
test
xlat
add
sbb
std
decl
sub
loop
cmp
add
sub
adc
sti
loopne
mov
scas
sahf
scas
das
pop
cmp
rol
push
add
hlt
cmpps
jae
loopne
fnstsw
or
data16
dec
lds
inc
jne
jge
xlat
sub
into
mov
mov
jne
push
test
cld
and
stos
std
xor
fmull
inc
fcoml
fldl
stc
in
gs
sbb
call
mov
add
mov
lahf
mov
scas
subl
scas
scas
adc
push
mov
fs
cs
jge
cmp
add
inc
push
pushf
les
dec
mov
popf
clc
insl
pop
fistl
jo
movsb
push
lds
ret
push
pop
jns
int3
inc
pop
or
push
hlt
pop
sub
fnsave
add
sbb
add
sahf
aas
out
sbb
mov
inc
stos
push
out
ljmp
cmp
imul
das
jecxz
xchg
dec
cmpsb
ja
das
les
mov
jo
fimuls
mov
aam
cmp
or
adc
aam
aas
push
mov
cmp
pop
add
push
std
jecxz
arpl
popf
cs
cmp
lds
jmpw
je
mov
inc
push
fwait
cmpsb
add
adc
xchg
dec
jl
xchg
or
dec
loopne
push
mov
pop
gs
adc
mov
js
pop
int3
sahf
xor
xor
dec
scas
rorb
into
imul
hlt
and
and
push
sbb
mov
pop
in
xchg
inc
lret
jne
lahf
das
outsl
jo
push
orb
mov
enter
cld
cmc
jp
pop
aas
add
xor
cmp
xchg
pusha
shl
paddq
jae
mov
jl
fs
cmp
aam
jne
dec
lods
jp
pop
mov
sbb
lea
and
sub
mov
mov
leave
cmp
data16
aaa
out
mov
je
fdivrs
jns
adc
xor
fcomps
je
mov
loopne
fstl
les
push
pop
movsl
or
stc
fsubs
adc
outsl
cmpsb
sarb
mov
insl
outsb
adc
pop
dec
jno
roll
mov
cmpl
jp
adc
mov
mov
jmp
cld
mov
or
int
mov
mov
add
ljmp
push
mov
xor
xchg
add
jge
sub
inc
in
xchg
sbb
dec
lcall
ja
sbb
popl
jg
ja
xlat
test
jl
dec
cli
sbb
xchg
loope
test
adc
loopne
cltd
in
je
into
inc
lock
mov
jno
inc
stc
test
xlat
mov
cmc
cltd
inc
iret
and
or
sbb
pop
daa
popf
les
loop
aas
aad
sub
pop
mov
jge
ret
jecxz
call
inc
inc
mov
movsb
jmp
jge
cmp
lret
xchg
fsubl
arpl
clc
movsb
into
pop
shl
icebp
or
mov
shl
jne
or
mov
add
in
cmpsb
sbb
lret
fwait
test
push
xor
mov
int3
in
pusha
pop
sub
push
rcr
testl
jbe
cmpsb
mov
mov
push
adc
enter
mov
jno
dec
mov
inc
jge
lahf
insb
aad
jl
bound
mov
jg
lahf
mov
cmp
loopne
mov
add
push
xchg
out
hlt
mov
popf
jp
pop
mov
adc
stos
pop
add
cmp
cmp
lods
mov
pop
jnp
inc
jbe
loopne
js
mov
mov
sbb
arpl
jb
arpl
and
jp
xor
cs
push
loop
cmp
pop
pop
mov
arpl
jae
cmp
or
push
shlb
mov
push
jge
jle
arpl
lcall
and
stc
jl
pop
push
and
cwtl
out
ds
dec
or
push
mov
jl
subb
jmp
ljmp
mov
test
or
cmp
mov
push
in
insb
fsubr
add
sub
sbb
fidivrl
pushf
jne
sub
test
cmpsb
sub
xor
gs
out
and
lods
fcoms
lcall
movsb
mov
and
int
pop
push
cld
hlt
mov
test
jo
stc
jbe
cmpsl
xlat
add
pop
mov
incl
pop
out
fs
cmp
imul
das
jecxz
xchg
dec
xchg
das
les
mov
loop
add
pmaxub
mov
aam
cmp
or
adc
les
sbb
cmp
xor
pop
add
push
std
jecxz
arpl
mov
pop
add
clc
xlat
sahf
test
pop
pop
inc
jne
pusha
inc
in
jnp
ja
sbb
or
sahf
mulb
xchg
and
cmp
pop
aas
mov
arpl
jb
mov
pop
gs
adc
mov
js
pop
int3
sahf
je
xor
dec
scas
shlb
into
imul
hlt
and
and
push
sbb
mov
pop
in
xchg
out
in
sbb
jne
lahf
das
outsl
jo
push
orb
mov
dec
pop
add
dec
and
mov
push
cmp
or
or
sbb
int
bnd
jb
pop
iret
pop
push
cmp
repnz
cltd
add
sbb
lea
and
sub
mov
mov
leave
cmp
out
loope
out
mov
je
fmuls
jns
adc
xor
fcomps
je
mov
je
push
movl
or
clc
fsubs
adc
outsl
cmpsb
sarb
mov
bound
dec
mov
cld
xchg
mov
ljmp
pop
into
lahf
sbb
add
int
inc
pop
es
and
jp
dec
xor
stos
test
jae
cmp
adc
int
mov
mov
add
ljmp
push
mov
xor
xchg
add
jge
sub
inc
in
xchg
sbb
dec
lcall
ja
sbb
popl
jo
ja
daa
test
jl
dec
cli
sbb
xchg
loope
test
sahf
pop
addr16
cmpsb
scas
mov
test
test
push
pop
mov
es
xchg
rcrl
hlt
imul
lods
ja
stos
dec
pusha
iret
mov
test
mov
fs
incb
jae
int
cmp
inc
mov
push
and
js
xchg
loopne
and
in
bound
push
and
mov
jge
daa
dec
jo
cmp
xchg
cmp
outsb
lock
in
inc
imul
push
adc
pop
pop
push
enter
jne
push
out
push
mov
loope
shlb
adc
lock
movsl
pop
ja
mov
xor
push
jge
mov
add
out
out
jmp
jno
dec
mov
inc
jge
lahf
insb
aad
jl
bound
or
jg
xlat
jg
iret
stc
cmp
ljmp
push
xchg
out
hlt
mov
popf
jp
pop
mov
adc
mov
or
lods
mov
pop
jnp
lahf
aaa
pop
cmp
cmovo
xchg
imul
test
mov
fidivl
or
out
cwtl
and
inc
int3
lret
nop
inc
jno
leave
out
and
add
mov
push
jge
jle
arpl
lcall
and
stc
js
pop
push
and
sbb
out
ds
dec
or
push
mov
jl
subb
jmp
ljmp
mov
test
enter
pop
mov
sarl
insb
fsubr
jbe
mov
cmp
bound
mov
sbb
loop
daa
fstpl
push
pop
enter
aaa
mov
lahf
inc
pop
jns
xor
lahf
sub
lock
mov
sti
cwtl
out
adc
lret
loop
xor
sbb
ljmp
mov
repnz
jae
and
add
xchg
push
jno
sahf
ret
das
push
aas
push
xchg
gs
pop
mov
bound
pusha
push
xchg
fsubl
icebp
aas
leave
jbe
ss
push
and
aam
mov
idivl
fimull
mov
or
jl
jecxz
mov
push
inc
out
mov
mov
or
push
sbb
iret
cmpsl
aad
lock
jns
stos
mov
add
push
and
pop
cmp
inc
mov
out
xchg
aas
sbbb
adc
jle
adc
icebp
popf
fcoml
lcall
test
lods
push
mov
shrl
add
aad
outsb
cs
jmp
sbb
pusha
in
and
mov
inc
cmove
ror
shl
je
rcll
adc
movsl
xor
mov
jno
cmc
jge
insl
pop
repnz
xor
cmpsb
push
dec
adc
mov
mov
rcl
andl
mov
ds
push
mov
mov
mov
fcoms
andl
xor
pusha
mov
add
and
adc
mov
jp
gs
mov
xor
xchg
and
jbe
mov
stos
je
cmp
jb
pop
mov
sahf
das
xchg
stc
cli
loope
subb
pop
movsl
int3
enter
inc
xlat
push
cmpsb
rorl
cmp
lcall
pop
test
xor
aaa
jp
sub
push
jmp
inc
fwait
out
sti
mov
das
adc
addl
rorl
mov
sbb
data16
scas
push
push
clc
push
mov
jno
xchg
and
popl
mov
mov
dec
cmp
fnsave
xchg
mov
push
hlt
imul
les
pop
and
test
int
scas
pop
cmp
xchg
add
lcall
pop
mov
std
mov
stc
push
mov
lahf
pop
ja
iret
or
inc
mov
les
cmp
cld
jle
cmp
fld
sub
xor
ljmp
stos
xchg
ficoml
nop
sub
mov
add
scas
mov
fnstsw
push
dec
mov
sbb
inc
icebp
dec
jl
mov
cltd
xor
int3
inc
jmp
and
shll
ja
pop
fidivl
test
aam
jecxz
nop
sub
mov
pop
arpl
in
jo
lcall
xor
sbb
sbb
mov
fwait
lea
cli
jp
mov
and
imull
sub
lock
movsl
cli
mov
dec
cmpsl
ret
fnstcw
pop
mov
insl
push
dec
out
jmp
and
repnz
push
int3
insb
inc
add
pop
inc
mov
xor
jb
push
inc
jbe
je
das
pushw
iret
jecxz
in
xor
jnp
mov
jg
jecxz
inc
ret
aas
cmc
jne
adc
sub
add
es
push
pop
sub
xchg
lret
cmpsb
xchg
fwait
cmp
and
cmp
sub
ds
sbb
lret
mov
add
add
sbb
and
add
loopne
add
xor
test
add
test
add
mov
mov
jb
push
imul
fistpll
rol
js
inc
and
movsl
int
ja
add
pop
and
jl
sbb
mov
cmp
push
aaa
sub
lcall
pop
repnz
sahf
adc
xchg
lea
bound
adc
fbstp
adc
dec
sbb
push
mov
mov
dec
dec
out
in
mov
ret
orb
mov
shll
shr
rep
cmp
pop
test
mov
in
cmc
clc
sti
mov
jecxz
mov
adc
sbb
add
dec
or
xchg
xor
jp
inc
mov
ficoml
andb
xchg
and
mov
cmpsb
or
adc
mov
popf
xor
sbb
movsl
pop
or
nop
js
or
lret
mov
test
pop
mov
lret
xor
cmp
inc
push
imul
mov
into
in
cld
repnz
scas
inc
sub
and
adc
or
jecxz
hlt
jle
sbb
inc
scas
adc
dec
aad
push
cmpsb
subl
mov
cmpsl
ret
jb
gs
mul
adc
movsl
xor
ja
lods
inc
xor
pop
cmp
imul
dec
fwait
lcall
jno
adcb
out
mov
imul
int3
rclb
mov
js
mov
repz
sti
loopne
notl
xor
jge
mov
or
loope
daa
jae
frstor
xor
leave
inc
pop
aas
xor
outsl
test
jp
insl
cmpsb
repnz
rolb
lds
fs
sbb
mov
and
inc
pop
and
test
inc
loop
cmpsl
stos
xchg
fwait
xor
jno
mov
fwait
lods
pop
cmc
add
aaa
pop
xchg
lret
jg
xlat
js
xchg
mov
mov
ds
inc
adc
jg
jle
clc
cmp
fstpt
clc
cmp
xchg
gs
inc
sub
pusha
jb
sub
jbe
insl
sub
outsl
sub
sbb
or
mov
and
pop
inc
or
aad
add
testl
insb
int3
mov
loope
or
lods
movsl
and
fdivrl
out
mov
jae
add
rorb
mov
and
cwtl
sbb
and
sbb
mov
push
movsb
jmp
test
push
mov
outsl
sub
lods
sbb
xchg
mov
jp
push
inc
fadds
test
xchg
pop
jae
mov
xchg
fwait
movsl
dec
stos
fsts
fisubrl
jnp
jle
leave
cmp
enter
xchg
dec
xchg
mov
daa
rcrb
clc
stos
sbb
mov
lahf
xchg
or
mov
pop
xchg
dec
jae
sbb
cmp
xchg
push
insl
jecxz
mov
ss
cmc
mov
cltd
enter
mov
mov
fidivs
test
in
inc
test
mov
inc
mov
adc
or
into
pop
push
cmp
icebp
cmpl
out
lock
cwtl
icebp
cmpsl
inc
dec
lahf
lret
sbb
push
xchg
xor
pop
cmp
dec
cwtl
jecxz
add
jg
cwtl
jecxz
adc
sbb
jne
cmp
mov
lcall
and
cmp
lret
mov
sub
mov
or
lret
movsl
pop
imul
and
or
add
test
pop
lret
jo
in
jns
and
mov
mov
dec
das
cmpb
lds
arpl
add
push
notb
xor
adc
adc
sub
lods
adc
sbb
xchg
imul
jle
mov
mov
lret
fdivp
and
jle
sub
ret
add
and
insb
je
into
jmp
mov
shlb
mov
push
outsl
hlt
mov
cmp
cld
cmp
bound
and
jp
mov
mov
lods
dec
sub
icebp
cmp
pushf
xor
mov
js
loop
lret
jbe
shll
xchg
xchg
and
xchg
fisttpl
pop
int
jp
mov
cmp
les
jmp
sahf
xchg
fldcw
out
cmpsl
cmp
push
movsl
pop
imul
push
loope
cmpsl
test
mov
lock
xchg
jo
dec
mov
dec
push
sbb
sbb
xlat
cmp
mov
adc
lret
mov
mov
data16
pop
stos
sbb
adcl
adc
cmp
fsubl
jnp
cmp
repnz
mov
shrb
daa
xor
mull
sahf
dec
adc
pop
dec
sub
xor
mov
and
pop
in
clc
roll
lock
insl
scas
jae
ret
mov
aam
sti
cwtl
loope
fmull
scas
push
mov
leave
jecxz
insl
pop
dec
push
cmp
test
mov
and
adc
mov
cmpl
cwtl
adc
xchg
xchg
mov
adc
sbbb
lret
dec
sahf
dec
cmpsl
xor
jge
or
dec
mov
shrb
imul
and
mov
mov
sbb
sub
mov
add
rorl
stc
jge
addr16
stos
sbb
adc
shl
pop
mov
mov
mov
enter
inc
cltd
enter
stc
mov
jmp
pop
scas
add
lea
xor
mov
cmc
idivl
shr
sub
clc
mov
xchg
push
mov
push
rolb
cltd
push
fistpl
xchg
popf
jl
cmp
das
mov
inc
daa
xchg
lret
bound
pushf
dec
and
and
sub
lahf
push
fwait
ds
scas
xchg
jmp
pop
sbb
nop
sbb
shrl
mov
mov
in
stos
jne
inc
gs
fcmovne
test
jno
ret
jo
lcall
mov
scas
adc
jnp
fsubrs
ja
daa
mov
inc
sbb
std
xor
lahf
repz
mov
add
retw
clc
movsl
dec
movsl
ret
adc
int3
mov
inc
and
movsl
jnp
xchg
cmc
movl
imul
out
or
xchg
cli
lea
fnstcw
add
fsubl
or
cmp
mov
xchg
mov
xchg
dec
ret
ja
in
push
cwtl
lods
cmp
aam
aam
jecxz
enter
cwtl
stc
loop
lods
cmp
pushf
mov
test
int3
adc
cmpsb
ret
sub
shll
lods
and
mov
scas
sbb
les
repz
cmp
js
stos
roll
push
imul
sbb
jae
sub
movsb
sub
lahf
inc
cmpsb
popf
xchg
int
cmp
or
jle
sub
xchg
pop
sti
repz
enter
or
jmp
je
gs
rclb
xchg
mov
xor
inc
inc
xchg
xor
mov
scas
out
push
lea
jne
xchg
jge
pop
mov
mov
mov
and
aam
jne
imul
add
scas
xor
dec
jb
out
mov
sub
mov
pop
loope
inc
sbb
jnp
mov
xor
mov
dec
mov
mov
pop
cli
iret
jb
xchg
orb
shll
jnp
icebp
mov
inc
scas
adc
fbld
dec
cmpsl
data16
scas
std
in
mov
mov
f2xm1
pop
daa
sub
stos
cmpsb
sub
mov
jo
add
cmpsl
xchg
dec
push
enter
pusha
dec
ficoml
and
in
adc
pop
adc
gs
out
rolb
inc
xor
add
lcall
leave
sbb
out
scas
adc
repz
mov
loope
enter
int
jmp
stc
repz
xchg
insl
mov
in
out
pop
mov
jecxz
xchg
jo
pushl
push
mov
lcall
inc
or
mov
shr
xchg
jecxz
loopne
jno
int3
fistps
iret
fucomip
repz
loopne
push
jle
arpl
pop
lea
int
mov
jb
iret
mov
jns
mov
mov
pushf
jb
sahf
dec
fsts
test
int3
mov
adc
mov
mov
popf
les
int
mov
cmp
cli
jg
push
push
mov
sahf
xchg
fistl
outsl
cmpsl
cmp
ljmp
lods
pop
fmuls
mov
cmp
inc
xchg
or
jno
or
push
mov
add
iret
ljmp
outsb
test
push
sbb
outsb
xchg
jmp
iret
inc
jno
mov
fsts
aad
fs
enter
push
data16
std
xor
dec
inc
cmp
cmpsl
dec
cmpb
fisttpl
cmpsb
mov
into
adc
lea
ficoms
cmp
test
xlat
mov
test
data16
dec
movsl
sub
roll
xchg
push
enter
cmp
test
push
fsub
add
adc
xor
shrl
inc
pushf
fildll
cmpsl
mov
bound
out
inc
or
xor
or
xor
mov
imul
push
push
sbb
mov
xchg
pop
and
mov
movsb
and
inc
bound
mov
or
mov
mov
inc
cmp
jnp
mov
faddp
xor
mov
mov
repnz
lahf
scas
xlat
push
fdivrs
jp
or
pushf
fwait
mov
shl
xor
jo
jne
push
mov
sbb
in
inc
pop
or
fwait
cltd
inc
cmp
in
jne
enter
scas
mov
add
pop
inc
mov
sahf
cmp
add
ja
js
jmp
lea
aaa
gs
outsb
aaa
mov
mov
add
fsubrl
mov
add
stos
test
movsl
stos
push
and
shlb
ljmp
cmpl
inc
lahf
pop
pop
pop
jo
test
dec
mov
push
sub
shrb
imul
adc
dec
mov
fsts
jl
push
dec
int3
jne
nop
movsb
mov
sub
sbb
jp
stos
push
inc
leave
in
and
xor
cmpl
in
adc
pop
mov
lock
push
outsb
fsubr
push
mov
sub
jmp
or
popf
mov
dec
and
jb
pop
fidivrl
lock
pop
mov
stc
sbb
xor
sbb
and
sub
xchg
mov
adc
inc
cltd
cmp
addr16
and
inc
inc
pop
repz
inc
mov
faddp
lret
and
and
mov
mov
mov
pop
aad
cmpb
call
dec
pop
sbb
add
je
sbb
dec
iret
inc
lcall
test
les
nop
mov
outsb
push
les
jg
push
jne
std
cld
pop
mov
std
xor
mov
mov
test
stc
ret
xchg
fs
xchg
popa
mov
sbb
loop
sub
mov
clc
pushf
push
js
mov
popl
cmc
mov
fiaddl
fstp
adc
loopne
xor
out
jo
jno
ret
jns
data16
mov
out
mov
mov
inc
and
fwait
fwait
cwtl
int
push
xor
fidivs
push
rorb
and
mov
mov
imul
repz
push
fisttpll
in
out
test
pop
and
xor
and
adcb
ret
jmp
cwtl
movzwl
fmull
sbb
mov
fsubrl
inc
xchg
cld
lods
pop
movl
push
ret
pop
push
push
cmp
lret
xlat
push
call
sbb
cmc
arpl
test
lea
js
cmpsl
push
insb
mov
int3
fisubrs
cltd
jl
fmull
jmp
jmp
push
push
popf
xchg
push
jo
rcrl
mov
idivb
jl
or
add
xor
sbb
rcrl
pop
fucomp
push
lods
mov
dec
out
lock
cld
sbb
sbb
std
cmp
cmp
inc
fisubs
shrl
dec
inc
and
xchg
rcl
jno
xor
dec
daa
inc
push
bound
pop
out
ja
mov
mov
ret
pop
gs
sti
js
lds
jno
mov
shll
add
or
dec
inc
jne
pop
or
icebp
xor
loopne
lahf
xchg
int
dec
xor
dec
sahf
std
cmovs
shrl
push
pop
push
shlb
loope
xor
out
push
arpl
icebp
jne
push
stos
pop
jo
add
xor
xchg
mov
push
imul
push
lahf
clc
sub
xlat
int3
push
or
test
bnd
pop
fidivrs
mov
andl
andl
clc
insl
aad
push
mov
and
add
and
cltd
jmp
and
or
daa
xchg
mov
push
jns
scas
xorl
ss
fwait
rolb
in
test
mov
mov
int
push
enter
inc
in
dec
daa
sub
and
cmp
add
xor
call
cmp
jnp
mov
adc
mov
outsl
add
pop
leave
aaa
mov
dec
mov
imul
lock
std
dec
sbb
in
pop
mov
test
sbb
sub
imul
jo
sbb
mov
scas
xchg
ficoml
stos
xchg
shl
mov
fwait
xchg
icebp
xchg
dec
mov
adc
xchg
std
pusha
mov
stos
roll
mov
sub
mov
loopne
add
inc
dec
jo
jnp
xchg
sbb
out
mov
xchg
lret
dec
push
pop
xchg
inc
jns
cmp
mov
mov
xor
iret
sbb
xchg
mov
jg
push
test
push
xor
mov
dec
popa
add
and
mov
icebp
mov
pop
fnstenv
and
jb
inc
ffree
aas
fadds
shl
mov
adc
sub
repnz
ret
imul
dec
pushf
push
and
std
push
xchg
les
jp
dec
pop
adc
pushf
lcall
nop
cmp
adc
shlb
mov
mov
lock
sbb
cmp
add
cmp
inc
push
pop
cli
icebp
add
out
jl
stc
inc
cmpsb
and
xor
sbb
add
push
inc
ss
sub
sub
bound
push
dec
shrl
outsl
mov
inc
mov
leave
mov
and
movsl
mov
bound
inc
push
push
add
mov
and
mov
adc
jmp
jg
jne
ja
sub
or
movsl
sti
pop
xchg
jbe
mov
jno
mov
test
shlb
ret
inc
sbb
jg
or
ss
push
inc
or
lods
cli
fiaddl
push
imulb
leave
fs
aaa
inc
mov
and
rolb
jg
sub
leave
popa
cmp
push
sbb
pop
in
rorb
fmuls
jp
or
enter
sbb
fstpt
test
repnz
cld
pop
and
sub
lds
cmp
repz
js
addr16
inc
jle
push
and
es
mov
data16
jmp
in
dec
fwait
sbb
mov
mov
pop
sub
xor
push
dec
inc
sub
xor
sub
lods
and
aam
push
sub
mov
mov
mov
and
in
push
dec
cmpsl
rcl
insb
inc
sahf
dec
mov
into
pop
mov
dec
ss
div
js
add
mov
loop
xlat
xor
lock
mov
and
sbb
test
push
dec
push
fists
mov
cmpsb
add
fwait
aam
lds
ljmp
hlt
std
repnz
push
outsb
push
xlat
pop
push
mov
add
push
das
xchg
pop
xor
push
cmp
mov
add
adc
jne
les
pop
nop
fnsave
cli
movsb
mov
in
pushf
adc
xchg
test
mov
jno
and
jns
add
xchg
jg
mov
cmp
add
add
inc
cmp
rclb
aam
repz
addb
sub
cmpsb
push
push
in
xchg
imul
loopne
push
cltd
insl
or
fstl
jae
fwait
arpl
pop
jne
es
fpatan
jnp
sbb
es
hlt
mov
xchg
mov
sarb
xor
mov
pop
je
mov
xchg
repz
inc
daa
retw
imul
cltd
cmpb
xlat
jbe
in
mov
cmp
cltd
pop
ss
lock
and
add
mov
mov
adc
mov
cmp
outsb
cwtl
or
push
ja
andl
cmpsl
bound
push
lods
pop
mov
xchg
sbb
push
xchg
fstps
mov
add
pop
sub
mov
gs
lea
sbb
rol
jmp
sbb
fwait
out
jmp
fidivrl
out
inc
loopne
out
std
adc
lds
arpl
inc
and
cmp
movsl
cmp
xchg
xchg
and
lret
xor
lds
ds
fmuls
arpl
int3
jecxz
inc
sbb
dec
sbb
push
xorb
sahf
dec
dec
repnz
or
inc
inc
and
in
ljmp
repz
push
cmpsb
fnstcw
dec
push
jp
icebp
push
add
inc
xchg
sub
lds
in
fsubrl
xor
push
scas
mov
aad
lods
xchg
out
lret
or
je
frstor
jecxz
stos
jb
push
rolb
adc
inc
adc
or
xlat
mov
scas
add
add
test
cld
movsl
adc
movsb
scas
or
lods
pop
sbb
ss
es
sahf
lahf
pop
stc
bnd
dec
pop
adc
jl
push
aam
adc
sbb
sbb
js
mov
pushf
or
push
xlat
scas
mov
xchg
or
scas
les
or
xor
mov
inc
mov
jo
shrb
sbb
daa
xchg
enter
ret
jl
xchg
stc
mov
pop
mov
mov
fdivl
ljmp
xor
mov
jg
mov
clc
bound
mov
jne
and
add
sbb
lods
jg
movsb
flds
jae
cwtl
or
sbb
pop
div
call
mov
enter
lret
and
imul
lods
jle
popf
ljmp
cmp
mov
push
cmp
xchg
push
popa
mov
pop
shll
cwtl
mov
xchg
sbb
les
fdiv
xor
clc
popa
mov
sti
cmp
insl
add
or
insb
pop
adc
xorl
in
std
call
cmc
xchg
dec
movsb
arpl
call
pusha
pop
xchg
test
push
icebp
fistpll
mov
and
push
mov
jmp
xchg
in
sbb
lret
xorb
add
fisubrs
jmp
arpl
push
adc
mov
mov
adc
cmc
mov
repz
orl
fs
lret
mov
sarl
sbb
cmc
lret
cmp
int3
addr16
push
pushf
push
and
hlt
out
push
test
dec
sbb
sbb
sub
jmp
ret
jo
sub
push
out
aaa
fisttpll
push
cwtl
stos
fidivl
popa
dec
mov
pop
cmpl
into
inc
shl
or
loope
mov
push
or
inc
fwait
data16
sti
cmp
fisttpl
adc
adc
xchg
jl
pop
test
call
fistpll
push
int3
xor
test
ss
xor
ret
and
scas
xchg
xchg
cmp
out
enter
adc
fistl
ss
xchg
mov
ficoms
repz
inc
pop
sub
aas
int3
lcall
sub
les
ret
sahf
or
dec
add
inc
jg
add
testl
int
ret
push
fcoml
repnz
sub
lcall
lret
push
arpl
es
adc
mov
rcrl
stos
add
mov
inc
loope
test
sbb
or
imul
push
xor
rcll
arpl
dec
mov
mov
lret
mov
cmp
add
out
inc
xor
push
mov
inc
mov
push
xor
mov
cmp
rcr
xchg
test
mov
lea
aas
movsl
inc
mov
daa
cmpsb
xor
shlb
push
shr
pop
cmpsb
in
xchg
lods
outsb
bswap
outsb
dec
sahf
dec
jae
ja
mov
mov
loopne
pop
add
mov
jns
sub
lea
and
jns
lcall
mov
repnz
jno
jmp
std
dec
fcompl
lea
jge
addr16
mov
lret
inc
sahf
fcomip
lea
jns
std
stos
dec
outsb
lret
cmpl
xor
rcrl
push
jo
or
fstpt
xchg
pop
outsl
inc
sub
xchg
aaa
loop
mov
lds
add
sub
jp
xchg
test
ss
push
les
les
adc
test
gs
mov
pushf
push
lcall
jbe
fiaddl
mov
pop
inc
enter
push
movsb
stc
les
cmpb
pop
test
lea
push
inc
mov
sub
mov
inc
pop
add
mov
inc
ja
ret
mov
imul
int3
lcall
mov
and
pop
and
add
mov
inc
fucomp
ja
lock
push
sbb
leave
lahf
ljmp
pushf
dec
xchg
sbb
mov
test
movsl
dec
sbb
dec
enter
xor
lret
fcmovu
cwtl
dec
pop
lds
mov
aaa
inc
sbb
xchg
xor
and
xchg
sbb
or
scas
sub
test
in
jns
jbe
jmp
xor
roll
mov
or
jg
cmp
xor
pop
mov
add
jnp
sbb
dec
xor
push
subb
rol
mov
cltd
xor
call
cmp
fcompl
clc
fidivs
cltd
sti
push
or
xchg
fldpi
mov
popf
lret
int3
mov
mov
add
jne
xor
mov
ljmp
jmp
mov
enter
mov
fldenv
cli
iret
stos
sahf
inc
in
mov
mulb
and
push
mov
lods
icebp
pop
out
mov
pop
xor
pop
add
adc
mov
popf
gs
and
and
in
ret
xchg
jle
fidivrl
hlt
mov
mov
lods
mov
mov
sub
xor
ret
cmpsl
mov
pop
jmp
and
add
ljmp
test
in
add
addr16
dec
mov
data16
lods
xchg
mov
jg
push
add
stos
insl
ja
fld1
jb
jns
insl
rcr
sbb
mov
mov
xchg
gs
dec
inc
xor
mov
jmp
ja
sahf
dec
adc
pop
stos
movsl
sub
mov
arpl
mov
xor
lahf
mov
pop
addr16
pop
sub
pusha
cmc
fisttpll
jecxz
jp
iret
cmpsl
scas
fists
int3
shll
inc
pushf
dec
and
sbb
shll
nop
cwtl
mov
sbb
scas
mov
inc
push
or
dec
popf
lret
cmpsl
xchg
test
gs
outsb
push
cld
cs
addb
push
rcrb
jl
lcall
cmp
repnz
lods
lods
inc
sbb
loopne
js
adc
popf
scas
inc
xor
inc
cwtl
sti
shll
in
jle
aad
mov
enter
mov
mov
sub
les
lods
dec
addb
repnz
pop
mov
movsl
or
mov
add
dec
push
ret
mov
test
xor
sbbl
ret
jl
inc
pusha
jo
add
adc
nopl
mov
fcomip
into
in
push
jl
mov
mov
xchg
jle
inc
mov
icebp
cmp
mov
inc
cvttps2pi
sbbl
mov
push
adc
scas
cmpsl
mov
lock
out
lods
jl
sarb
inc
pop
cmpsl
test
jmp
jp
mov
repz
sbb
fimuls
or
insb
push
cld
inc
imul
or
or
lds
sbb
jns
addr16
je
cli
jae
mov
xor
mov
push
jge
int3
fucomi
repnz
fildl
cmc
neg
andl
stos
jle
clc
sub
add
out
xchg
sub
iret
dec
and
inc
cwtl
dec
sub
lods
dec
scas
cmp
mov
imul
mov
in
clc
mov
xchg
int3
out
clc
je
cmp
mov
add
mov
fsubr
hlt
sub
sahf
dec
add
sbb
push
jnp
mov
sub
inc
xor
aam
mov
scas
aas
mov
xor
sbb
mov
mov
stos
sbb
jmp
repnz
fistpl
arpl
int
pop
movsl
xchg
sub
lods
fildll
jae
mov
lret
lahf
mov
cld
test
stos
add
xchg
xor
shl
jmp
addr16
mov
inc
add
orb
inc
roll
add
int3
xchg
sbb
xchg
mov
mov
aad
mov
push
jge,pt
data16
inc
aas
pop
outsl
icebp
out
sahf
fcom
mov
filds
pop
mov
xor
lea
push
jne
adc
push
stc
mov
mov
dec
incl
bound
arpl
push
aad
mov
inc
sbb
mov
call
mov
xlat
mul
dec
test
ret
jae
repnz
cmp
call
jecxz
or
subl
mov
xlat
nop
push
xchg
dec
in
lods
popf
leave
test
dec
loop
mov
dec
sub
lret
sub
cmp
lret
or
faddp
xchg
ret
fcomi
jbe
add
sbb
jns
les
stos
and
dec
rorb
sub
dec
push
cwtl
mov
mov
inc
sub
es
jg
mov
js
daa
mov
in
inc
out
or
mov
xchg
ret
xor
sbb
movsl
cmp
repz
movsl
cli
sbb
jne
inc
cmp
xchg
fs
enter
push
aaa
sbb
sbb
mov
pop
shlb
xchg
mov
into
mov
hlt
repz
cmpsl
push
jge
ret
arpl
mov
stos
add
aaa
and
pop
popa
mov
call
mov
fstpt
std
dec
pop
push
push
out
push
push
inc
ror
xor
xor
dec
dec
faddl
add
and
sbb
sub
ret
fistl
rorl
jae
inc
xchg
mov
pushf
jecxz,pt
pop
jae
xchg
adc
cmp
xchg
and
mov
insl
pop
add
add
and
pusha
mov
jmp
loope
xlat
fsubrl
sti
cmp
mov
orl
push
icebp
sub
clc
xchg
int
dec
mov
and
cmp
mov
mov
push
xchg
mov
lahf
add
and
xor
mov
sub
xor
js
adc
inc
push
roll
das
and
dec
popa
pop
inc
inc
lret
push
sbb
call
clc
mov
movsl
stc
fnsave
repz
sub
lahf
in
outsl
pushf
cmp
cmp
sub
in
ja
push
sbb
mov
leave
aas
xchg
lret
movsl
lret
jmp
sahf
imul
imull
loop
and
scas
movb
inc
and
lods
repz
mov
orb
dec
xlat
out
imul
addb
mov
jnp
or
sub
dec
mov
movsl
push
sub
inc
and
dec
dec
leave
in
test
pop
or
loopne
jnp
mov
jo
mov
or
xchg
call
inc
fucomp
push
jge
inc
fwait
mov
insb
out
lock
cld
sbb
gs
dec
push
leave
cmpsb
lea
mov
cmp
jecxz
leave
sub
sbb
cmpsb
xlat
adcl
addb
les
daa
lret
or
pop
xor
jge
mov
xor
cmp
shrb
lods
fiadds
cld
ss
enter
mov
das
xor
stc
in
mov
stos
mov
hlt
loop
icebp
lret
push
stos
fucomp
sarl
xchg
mov
outsb
imul
adc
mov
mov
pop
clc
or
inc
pop
push
shlb
push
dec
loope
shrb
lcall
pop
into
xor
fucomi
repnz
dec
cwtl
jmp
pop
aas
xchg
les
fstps
mov
dec
push
sbb
sbb
inc
dec
iret
das
stos
fucomp
cmp
or
out
movsb
inc
sbb
xchg
in
jo
push
sahf
jne
cmp
sbb
dec
mov
and
es
mov
out
mov
icebp
fs
mov
sbb
or
xor
add
or
testb
xor
or
and
and
and
add
ret
pop
push
cmp
andb
pop
push
dec
decl
fs
jne
xor
push
ja
dec
inc
pop
bound
loop
ret
les
dec
adc
aad
arpl
cmp
mov
sbb
fmul
loope
repz
lret
stos
std
cmp
sub
cs
xor
rorb
cmp
roll
mov
sbb
or
sub
negl
mov
std
dec
mov
mov
inc
fidivrs
adc
dec
pop
inc
lods
xlat
insb
les
les
push
cmpsl
dec
pop
pop
sarb
inc
enter
insl
mov
aaa
sbb
cmpsb
fadd
or
sub
imul
ja
outsl
push
rolb
mov
xor
cmp
std
ror
cwtl
icebp
add
add
inc
inc
subl
push
fisttps
ret
pushf
ret
out
adc
imul
add
xor
push
adc
push
dec
mov
jne
and
fnsave
dec
ficoms
dec
sbb
or
insl
shll
push
xchg
push
push
or
add
jge
sub
or
or
mov
data16
and
in
repz
loop
add
inc
pop
std
add
icebp
xadd
mov
cmpsl
or
xchg
xor
mov
and
leave
sbb
cmpsb
or
frndint
fdivrp
ret
adc
or
or
xor
adc
das
insb
mov
jb
jp
inc
aam
inc
pop
pop
cmp
fdivp
mov
jl
mov
xchg
pop
jle
rclb
xor
inc
sahf
and
mov
fcomi
and
and
sti
loop
mov
pop
repnz
paddw
mov
or
push
outsb
push
pop
aad
jae
dec
ljmp
jge
sub
cmp
lods
mov
lds
xchg
lods
mov
scas
jge
aas
shrl
dec
cmp
test
sbb
push
pop
or
push
jmp
dec
push
lods
mov
lods
ss
shrb
cmpl
ds
scas
repnz
add
leave
loop
in
adc
sti
sbb
pop
test
push
pop
add
add
and
insb
xor
aam
jecxz
cwtl
adc
adc
lret
subb
in
sahf
ret
push
mov
mov
fimuls
xor
push
and
sub
jp
mov
pushf
dec
and
lea
mov
mov
dec
movsb
sub
in
jae
in
or
xor
int3
mov
jle
ds
add
and
mov
mov
inc
cmp
or
stos
push
scas
in
scas
ror
push
sbb
xchg
repz
xor
add
shrl
ret
cmp
outsl
mov
in
lods
mov
mov
pushf
aas
arpl
cmp
push
sbb
mov
fistps
inc
lcall
pop
or
mov
ret
scas
jns,pn
inc
sbb
fwait
out
dec
lock
add
sub
pop
mov
mov
push
stc
mov
mov
pop
xchg
sbb
pop
outsl
not
xchg
ret
cmpl
nop
add
subl
rclb
jmp
punpckhwd
fisttpl
adc
mov
sahf
dec
mov
xor
jne
mov
mov
add
inc
cmp
wrmsr
or
dec
pop
push
adc
fsubrl
add
push
pand
add
idivl
inc
cmp
dec
test
adc
push
add
test
je
gs
daa
cmc
inc
rcrb
mov
fsubrl
std
jmp
add
enter
sbb
jp
incb
aaa
jbe
sbb
mov
filds
negl
push
sti
fcomps
push
jo
cmp
inc
jge
in
shlb
mov
xchg
cs
sbb
stos
shrl
add
xor
or
out
cmp
jb
mov
in
imul
sbb
pop
sub
mov
outsb
xchg
mov
aam
xchg
pop
mov
xor
ret
mov
lahf
stos
shll
mov
adc
mov
repz
sti
jno
icebp
adc
mov
test
mov
sbb
es
xor
les
pop
repnz
adcl
sbb
xchg
lret
adc
bound
jbe
movsl
inc
inc
mov
lcall
mov
jb
push
rolb
lods
mov
jmp
mov
jae
movsl
sub
and
stc
mov
adc
stos
js
mov
jmp
pop
mov
inc
popf
xchg
test
xor
and
aaa
add
fucomp
push
mov
repnz
test
or
movsb
jno
scas
dec
test
arpl
fwait
lea
xor
test
xchg
fst
push
lret
push
imul
imul
nop
mov
iret
and
cmp
lret
and
gs
mov
cli
sti
mov
jecxz
add
and
pop
sub
sbb
push
jno
cltd
out
pinsrw
pushf
dec
cmp
xchg
xor
push
sub
sbb
push
lahf
loop
jge
movl
rcrl
jp
add
outsl
dec
xchg
xchg
pop
dec
rcll
sub
fcomi
in
mov
dec
pop
jne
add
mov
lods
rcrl
ret
pusha
or
sub
pop
dec
leave
cmc
std
aad
mov
loopne
cs
mov
popl
jmp
adc
cltd
in
je
into
xchg
jns
jne
mov
bound
push
and
adc
add
out
adc
add
mov
and
sbb
sub
mov
push
cmp
push
cli
xor
out
ja
lcall
pop
inc
arpl
xor
pop
cmp
mov
sbb
ret
pop
dec
adc
fisttps
cmp
dec
cld
leave
ret
xchg
sub
scas
aaa
arpl
mov
adc
dec
filds
xchg
pusha
and
push
pop
xchg
hlt
out
jo
mov
fcoms
test
cmp
push
mov
add
shlb
and
pop
shll
push
push
jnp
jno
cmpsl
into
in
sub
pop
out
jl
pusha
loopne
popa
mov
es
pop
sbb
sub
cmpl
fcmovnu
std
decl
and
daa
enter
sbb
fwait
mov
and
jb
dec
ret
cmpsb
rcrb
xchg
inc
pop
std
jb
and
xchg
sub
pop
test
adc
test
sbb
mov
mov
insb
pop
xchg
or
adc
jecxz
jo
sarl
cmp
cmc
pop
mov
push
or
icebp
ds
mov
add
jmp
mov
cmp
mov
add
lods
xchg
sub
adc
mov
shll
mov
fildll
stos
mov
cmp
jl
mov
ret
je
mov
sbb
or
lods
push
xchg
cmp
dec
jae
dec
fs
jge
fldcw
pop
cmp
movsl
inc
fucomi
jb
iret
or
fs
imul
das
jae
sub
testl
sub
xchg
and
xchg
cwtl
dec
and
cmp
add
fdivrs
cli
pop
cmpsb
inc
adc
rolb
fldpi
insb
lods
cli
outsl
jg
pop
mov
inc
mov
mov
loop
or
add
mov
cmp
movsb
cmp
fwait
outsl
push
rol
inc
sbb
pop
stos
shll
mov
jl
jecxz
leave
mov
jge
cmpsb
pop
scas
sub
imul
mov
std
mov
pop
cli
jle
pop
dec
push
testb
dec
pushf
dec
and
clc
stos
mov
sahf
push
test
test
cmc
sub
lret
and
mov
inc
xor
pop
cmp
mov
jnp
push
mov
xor
mov
pop
scas
dec
fs
lcall
mov
sbbl
and
outsl
lock
gs
ljmp
dec
xor
sbb
lods
mov
mov
and
sbb
iret
push
nop
jns
mov
add
inc
fsubp
scas
inc
repz
cmp
adc
pop
mov
rolb
and
or
xorl
inc
add
adc
jne
aad
pop
dec
mov
aad
mov
mov
rol
loope
pop
mov
sbb
das
and
jmp
jae
movsl
fwait
pop
in
cld
add
mov
jno
bound
ret
sbb
add
dec
scas
movsb
outsb
faddl
xchg
cmp
stos
cmp
xor
inc
std
dec
cmp
pop
mov
cmp
add
lods
jnp
loopne
cmp
ljmp
jns
sbb
xchg
ds
lret
call
xchg
xlat
mov
xlat
mov
mov
shll
ffreep
mov
mov
xchg
jo
fiadds
or
add
out
fiaddl
sbb
jbe
adc
test
xchg
mov
mov
call
inc
mov
fwait
lea
mov
in
sub
popf
dec
shll
xchg
test
and
inc
bound
andb
cmc
push
mov
test
mov
loopne
mov
in
jmp
sub
lock
in
mov
jns
sbb
js
lcall
dec
vsqrtpd
cmp
fdivl
push
push
outsb
ljmp
mov
dec
sbb
cmp
hlt
ror
mov
fs
lret
pop
insb
push
mull
into
mov
lock
xorb
xor
shl
lea
test
mov
jmp
std
add
push
sbb
push
fsts
cltd
pusha
ja
scas
ret
sbb
mov
scas
ds
xchg
and
stc
test
xchg
fwait
jbe
mov
rclb
xchg
pusha
bound
mov
fwait
inc
mov
pusha
xchg
inc
out
mov
sbb
outsb
out
popa
xlat
xor
int
xor
mov
imul
add
push
das
inc
rorl
cmp
dec
and
mov
pop
add
push
inc
push
pop
bound
fwait
xchg
cmp
adc
mov
xlat
cmpl
mov
jne
fsubrl
lods
push
ja
push
push
xlat
mov
jb
cmpsb
stos
movsl
push
push
aaa
pushf
add
sub
cmpsl
dec
fs
mov
mov
inc
add
addb
stos
xchg
stos
inc
test
testl
mov
movsl
mov
movb
xchg
rorb
mov
push
or
mov
xor
das
xchg
in
testl
std
pushl
add
fsubrs
jecxz
fadds
and
test
cmp
xchg
and
mov
push
fwait
adc
aaa
jge
mov
sbb
test
dec
xchg
test
test
inc
rclb
jecxz
cmp
arpl
mov
je
mov
loopne
pop
aaa
jmp
testb
idivl
and
enter
lods
rcrl
nop
jecxz
mov
mov
dec
fadd
sbb
xlat
sbb
dec
dec
push
mov
lods
popf
xchg
sub
dec
pop
mov
pop
and
mov
xor
sub
jmp
dec
pop
stc
sbb
inc
lret
jge
outsb
cmpsb
sub
xor
mov
cmp
pop
inc
lahf
mov
cmp
mov
loope
enter
mov
test
adc
loop
repz
dec
push
test
std
jne
js
inc
daa
xor
pop
sti
jg
stc
mov
xor
xchg
mov
mov
jg
xchg
sahf
out
mov
adc
mov
sbb
test
lods
xchg
mov
sbb
lock
adc
ret
cltd
jbe
daa
adc
adc
stc
push
cvtdq2ps
ja
push
shr
aaa
call
xchg
bound
pop
inc
add
or
sbb
in
shrl
mov
mov
shlb
pop
dec
mov
loop
cwtl
lret
pop
into
jl
and
mov
cmpsl
xchg
enter
movsb
fildll
lods
int3
pushl
jne
js
or
addr16
sub
lock
push
xor
test
fcoms
jnp
ret
cmp
les
pusha
jge
test
movsl
popf
scas
shrb
ret
dec
xor
or
lock
in
jns
or
dec
fstp
ljmp
xchg
cmp
ficoms
xchg
mov
push
jns
enter
xlat
dec
fmul
xor
mov
clc
cmp
int
mov
xor
push
add
lret
cmpb
inc
dec
je
stos
xchg
in
jecxz
ds
mov
jbe
cltd
mov
test
sbb
or
arpl
insl
dec
cmp
cmp
mov
pop
sbb
cwtl
lret
inc
sub
imul
hlt
pop
movsb
leave
test
push
mov
fstl
push
mov
int
stc
mov
leave
cld
xchg
sub
leave
test
out
shll
sbb
fisttpll
jl
popa
mov
push
es
jge
jns
push
mov
js
pop
clc
test
fisubs
inc
jecxz
mov
add
and
cltd
push
cmp
sbb
cmp
nop
jae
ljmp
pop
dec
int
cmp
mov
sbb
inc
hlt
lahf
cmpl
inc
scas
mov
adc
mov
arpl
sbb
stc
jmp
mov
cmp
call
int3
mov
jmp
jge
cmp
fdiv
mov
mov
dec
sbb
push
adc
sbb
sbb
test
pop
hlt
sub
mov
push
aad
xchg
mov
int
lock
add
pushf
dec
mov
arpl
mov
sarb
outsb
cmpsb
sub
xor
mov
sub
jbe
test
shrb
enter
mov
scas
fldt
scas
jg
ss
add
jl
int
xor
andl
rcr
push
pushl
push
lcall
ret
lret
xor
sub
mov
and
js
jecxz
jmp
dec
pusha
rclb
xor
mov
cmp
loope
scas
and
mov
mov
mov
cltd
cltd
aam
mov
xor
cmp
repz
mov
fwait
cmpsl
lods
shrl
ss
inc
add
scas
mov
addr16
imul
adc
test
fwait
cli
dec
cmp
push
jge
fstpt
pushf
sti
lret
sti
push
cmp
bound
xchg
ret
lods
xchg
aam
dec
lock
dec
scas
fisubrs
or
stos
jne
mov
xchg
jne
cs
lret
fldt
dec
xchg
inc
cwtl
mov
cld
jmp
js
dec
inc
fwait
ss
cmc
or
rolb
inc
fdivl
jne
in
lea
lahf
les
cmp
dec
pop
jns
stos
out
sub
adc
mov
xor
mov
iret
sub
shlb
pop
add
in
fstl
aad
ret
lcall
into
pop
movsl
dec
add
ret
popf
ds
mov
sbb
loop
mul
sti
loopne
xchg
pop
push
addb
lea
sub
or
xor
testb
fs
cmpsl
mov
imulb
pop
into
gs
pop
xor
cli
lods
push
and
test
and
repnz
xor
repnz
cmp
xor
xchg
sahf
dec
mov
scas
leave
inc
scas
xchg
ficoml
sub
repz
mov
mov
shr
into
lret
and
pop
bound
adc
mov
repz
push
shrb
mov
addb
adc
out
dec
fsubrs
xor
dec
shlb
adc
mov
sub
das
enter
div
cmp
cwtl
das
fistl
add
mov
jae
loopne
int3
pop
sub
into
or
lds
rclb
call
mov
lcall
or
leave
out
mov
or
sti
mov
or
mov
enter
aaa
iret
fs
test
cmpsl
xor
movsb
js
popf
lret
movsl
sbbl
jl
or
push
mov
dec
sbb
decb
jle
fs
mov
sbb
pop
xor
lock
adcl
or
jae
push
push
int3
mov
mov
dec
js
int
xor
shlb
mov
mov
popf
and
xchg
add
xchg
test
pop
or
mov
xor
add
jge
sbb
xlat
and
xchg
pop
sahf
call
inc
sbb
mov
mov
jo
fwait
jl
dec
test
icebp
stc
int3
pop
mov
lea
or
mov
das
dec
mov
popf
cmpl
or
movl
add
mov
jb
mov
je
hlt
mov
cmp
mov
inc
mov
cmp
frstor
dec
and
pop
movsb
xor
mov
call
movsl
clc
mov
iret
in
pop
mov
xchg
fnstcw
xlat
xchg
test
sub
or
mov
stos
xchg
sbb
std
or
bound
popf
sbb
mov
fildll
repnz
push
shlb
inc
add
add
add
gs
addr16
ficompl
fisubrs
or
adc
movsb
fidivl
stos
xor
ficomps
idiv
test
lea
xor
rcll
pop
adc
enter
int
nop
test
xchg
dec
sbbl
inc
push
mov
pop
stos
int
leave
stc
mov
out
mov
in
lahf
jl
stos
mov
jae
lcall
lahf
pop
mov
iret
sbb
inc
fdivs
inc
iret
movsl
mov
aas
outsl
and
mov
add
dec
or
ljmp
jmp
mov
sub
mov
popf
shll
jo
pop
shll
xchg
inc
dec
mov
mov
push
stos
inc
xchg
push
lret
pop
test
pusha
push
push
mov
and
lahf
scas
jg
pop
jl
insb
scas
fld
int
jo
add
iret
and
aad
adc
mov
clc
dec
fidivrl
outsb
add
int3
push
mov
sub
xchg
inc
and
notb
int
out
mov
jno
stos
push
mov
sub
mov
dec
xchg
xchg
cs
mov
lahf
xchg
xlat
adc
or
lods
ds
mov
adc
popf
je
js
out
scas
cli
pop
adc
pusha
and
mov
packssdw
mov
adc
int
dec
inc
sbb
add
ret
ja
sub
test
dec
ljmp
loope
mov
adc
push
and
jns
sbb
sbb
insl
cwtl
vmptrst
rorl
stos
aad
imul
or
mov
pop
test
rcll
and
std
adcl
and
bound
gs
fs
xor
loop
rcrb
popf
dec
inc
sbb
mov
iret
jbe
dec
pop
push
fwait
scas
addr16
push
int
scas
jae
xor
aas
addb
cmc
xchg
sub
pop
mov
mov
add
mov
sub
mov
push
sub
les
aam
or
xlat
pop
push
add
cmpsl
loopne
bnd
hlt
fsubrs
and
mov
fildl
adc
jae
mov
ret
mov
rolb
sbb
sbb
push
jne
xchg
lret
test
fmuls
pop
lds
out
std
stos
dec
dec
sti
sbbl
xchg
add
sub
mov
jo
mov
andb
outsb
les
pop
ret
add
pop
cmpsl
push
pop
jb
mov
icebp
jmp
cwtl
jp
pusha
test
push
rorl
xchg
std
dec
testl
sub
in
movsl
test
dec
fstpl
imul
add
rorb
es
cmp
popa
and
inc
jecxz
mov
lea
pop
adc
mov
popf
faddl
adc
dec
xchg
mov
call
pop
mov
mov
mov
fcmove
or
movsb
repnz
add
inc
mov
arpl
pop
mov
faddl
pop
repnz
aad
test
lcall
and
xchg
repnz
xchg
mov
js
ret
test
jg
xlat
xchg
addl
rorb
test
lret
inc
rcl
or
pop
rcl
cwtl
fstl
mov
test
jmp
test
xchg
pop
aad
jle
into
mov
cmc
icebp
ret
mov
cwtl
mov
rolb
add
mov
and
mov
add
lods
push
sub
mov
mov
lahf
filds
jb
xchg
vpand
loop
inc
adc
insb
aaa
dec
push
pop
sbbb
test
mov
adc
or
push
inc
pop
mov
leave
cli
inc
sbb
into
xor
inc
iret
cltd
mov
xchg
out
jg
enter
mov
add
test
jmp
push
and
mov
movsl
mov
lcall
mov
push
lods
sub
mov
and
mov
adc
ljmp
mov
addl
adc
insl
leave
inc
scas
mov
add
xchg
imul
mov
lods
test
inc
sub
ret
dec
fiadds
test
test
mov
shl
or
or
mov
inc
jnp
pop
cltd
xchg
fnstenv
imul
addb
js
jp
gs
mov
push
sahf
jl,pn
push
mov
sub
lcall
lret
jns
call
mov
pop
stos
shll
mov
ret
or
jmp
clc
cmp
jnp
stos
xor
ret
mov
add
push
inc
cmp
push
xchg
scas
adc
mov
lds
mov
xor
fistl
or
mov
or
sti
pushf
fisttps
or
xchg
test
add
xchg
in
mov
rcrb
push
or
cmp
push
mov
addr16
xchg
pop
rcll
jne
inc
das
push
inc
pusha
xchg
jb
nop
dec
mov
into
ss
jle
rcrb
cmp
cltd
jae
std
cld
rcl
cmovb
pushf
jb
pop
mov
adc
mov
push
pop
test
jbe
pop
inc
cmp
sub
mov
pop
jnp
clc
fdiv
jecxz
and
cmp
or
cmp
xchg
les
push
inc
xor
ds
pushl
mov
test
shll
or
cmpsb
ja
jnp
jae
mov
idivl
xlat
lret
insl
mov
aaa
andl
std
scas
mov
lcall
jns
cmpl
std
mov
pop
xchg
icebp
mov
and
jle
stos
jae
mov
stc
cli
out
inc
iret
cmp
cmp
pop
mov
sub
mov
or
add
test
add
sbb
inc
jb
sub
add
es
push
jae
sarb
xchg
clc
mov
mov
or
nop
and
sbb
xor
adc
fiadds
roll
test
icebp
ret
jnp
sahf
in
xchg
jmp
sti
and
sub
iret
sub
int
in
icebp
mov
int3
lea
cmc
test
mov
adc
and
dec
or
or
push
clc
repz
mov
jae
ja
jnp
repz
loop
cmp
lcall
inc
dec
adc
loope
mov
mov
scas
mov
ficompl
xor
pop
xchg
xchg
adc
lret
shrl
int
cld
stos
adc
bsf
mov
and
jmp
or
cld
js
stos
lret
test
stos
mov
xchg
pop
int
adc
xor
adcl
loope
add
loopne
inc
fsubrs
test
and
xchg
xchg
add
cmp
popf
orl
mov
out
out
stc
inc
bound
sub
jns
xor
push
jnp
aaa
mov
mov
jl
test
in
mov
add
sar
les
enter
push
sub
xor
lods
jmp
add
cltd
std
ljmp
adc
fs
mov
adc
xchg
ljmp
xor
pop
sub
pop
sbb
cmp
shll
jl
shll
sbb
jbe
nop
in
insb
jg
cmc
fdivs
ror
les
mov
jne
mov
in
lds
push
xor
sub
inc
in
lret
mov
test
ja
jge
jns
scas
or
xchg
and
mov
mov
mov
jmp
dec
lock
adc
repz
rorl
push
repz
arpl
ljmp
xchg
sub
insb
cltd
cmpl
push
xchg
jge
adc
insb
dec
push
and
jmp
xor
mov
pushf
sbb
gs
shl
jb
sub
or
pmaxub
mov
in
push
ds
rcl
push
lds
mov
movsb
fldl
inc
ficompl
fisubs
in
xlat
ret
jl
nop
cld
scas
jbe
push
out
add
cs
mov
dec
fsubrl
pop
xchg
pop
sbb
xchg
dec
mov
in
jbe
mov
fucomp
jae
notl
dec
mov
lods
daa
mov
cmp
lret
xchg
lea
iret
in
jge
pop
cmc
stos
movsl
and
ret
ljmp
shl
scas
mov
lods
inc
sbb
xchg
jnp
dec
test
and
jns
pop
aas
cmpsl
aad
pop
inc
sarb
or
lahf
imul
cmp
xor
ret
mov
mov
mov
xor
jne
fldcw
cmpb
jle
ss
inc
enter
mov
movsb
xchg
xchg
push
xchg
dec
jno
adc
add
shrl
popf
stc
pop
pop
mov
ds
add
add
je
sub
mov
fdivl
inc
sub
fprem1
cld
jg
pop
rcrb
pop
fildl
loop
mov
sub
xor
testb
jb
mov
movb
scas
pop
lahf
sbb
jo
insb
dec
scas
jo
test
sbb
orb
adcl
lret
cmp
sbb
mov
push
add
sub
push
mov
scas
aaa
mov
cli
jnp
inc
nop
and
jmp
push
and
pop
jnp
aam
daa
sub
int
iret
sub
ja
pushf
jb
int
mov
cmp
dec
stos
lahf
out
mov
dec
mov
inc
sbbl
mov
sbb
outsl
imul
aas
sbb
push
mov
mov
pop
jb
add
pop
mov
xor
pop
je
add
and
scas
bound
pushf
jge
adc
fistps
mov
lcall
out
cmc
dec
or
and
push
sahf
aad
pop
leave
mov
push
cmp
dec
fildl
and
pop
dec
ja
fldt
popa
testb
push
out
cmp
fidivrs
int3
add
lock
push
rolb
lds
adc
push
ret
pop
mov
movsb
xchg
jne
gs
cmp
or
xchg
aam
cwtl
sub
pop
aas
xchg
push
cli
push
add
pusha
jecxz
fst
push
push
dec
dec
lods
fwait
int
dec
mov
xor
cli
xchg
stos
or
inc
mov
ret
add
mov
cmp
dec
mov
or
mov
ret
xchg
mov
in
aam
or
push
add
aad
push
sub
xchg
mov
sub
lock
xor
incl
pusha
xor
in
jmp
fmulp
adc
jmp
fisttps
or
adcb
sbb
adc
sub
repnz
push
dec
push
mov
pop
rcl
dec
lods
mov
sbb
sub
cmpsl
adc
cs
je
sub
mov
sub
hlt
xchg
jl
fdivs
rclb
ljmp
roll
test
jbe
adc
and
sbb
das
pushf
ret
push
clc
or
lcall
je
and
nop
push
sub
push
fisubs
xor
mov
inc
mov
inc
fisttpl
int3
cwtl
cmpsl
pop
cmp
add
ljmp
mov
and
push
xchg
mov
jae
orl
into
pop
stos
aam
idivl
shll
mov
icebp
lret
push
insl
fcom
rol
mov
sub
xchg
sub
jns
outsb
push
adc
cmp
mov
negb
mov
lods
stc
orl
push
mov
sbb
cld
int3
fstps
mov
into
xchg
pop
lock
adc
cld
jnp
adc
inc
lret
inc
sbb
cmp
mov
clc
and
lods
push
sbb
push
ficoms
mov
frstor
mov
add
cmp
adc
add
or
shlb
ret
movsl
daa
je
pop
dec
shlb
and
push
mov
sub
xchg
push
insl
xchg
cmc
data16
pop
gs
in
mov
mov
mov
fcoml
and
inc
xchg
push
and
stc
popa
mov
sbb
adc
jae
ja
mov
call
mov
cli
sub
or
mov
ljmp
test
jge
fs
popa
sahf
push
js
or
add
or
mov
outsl
adc
stos
bnd
sub
push
push
jge
movsb
fsts
dec
cld
iret
les
or
es
mov
insl
ret
fistpl
sarl
hlt
add
gs
jo
jle
scas
dec
jns
dec
inc
mov
insb
icebp
sbb
scas
hlt
fldl
sti
fbld
mov
das
jmp
roll
rcll
push
jno
scas
add
sbb
retw
sub
and
jno
jb
xchg
leave
movsb
inc
sbb
push
fists
out
inc
and
xlat
pop
test
sbb
pushf
imul
cwtl
mov
out
jns
lcall
les
cmpsb
xchg
cmp
mov
out
arpl
adc
xchg
in
movnti
sbb
jecxz
outsb
ja
movsb
insl
loop
jmp
fidivrl
sbb
xor
inc
add
lahf
scas
arpl
cmp
sti
jp
mov
divb
dec
mov
jmp
xor
push
out
dec
pop
lds
adc
xchg
bound
scas
jne
jnp
test
sub
pop
rclb
sahf
mov
and
add
xor
mov
mov
push
jb
mov
jo
lods
enter
mov
add
pop
js
std
adc
xchg
jns
out
shrb
fcomip
adc
push
push
js
pop
pop
movsb
cli
daa
cmc
jge
loop
cmpsb
int
pop
popf
iret
jle
mov
mov
dec
sbb
dec
mov
xchg
loopnew
mov
push
das
or
xchg
jge
xchg
repnz
xor
fldl
call
dec
shrb
lds
xchg
mov
enter
subb
xchg
or
popa
jmp
lret
lret
push
xchg
xor
fisubrs
ffree
stc
push
or
arpl
jp
lcall
sub
in
mov
scas
mov
jecxz
loopne
mov
xchg
int3
fldcw
mov
sbbb
std
push
jns
add
aad
jo
or
js
adc
adc
ret
cmpsl
scas
sbb
mov
mov
and
inc
mov
out
pop
mov
sub
cmp
das
sub
sqrtps
mov
test
shl
rolb
xor
mov
shl
fisubrl
inc
adc
xor
scas
int
add
jge
push
pushf
in
pop
adc
nop
inc
sbb
arpl
test
cmp
fdivl
mov
inc
mov
insb
add
inc
or
or
xor
int3
addr16
pop
mov
xlat
stos
dec
scas
sbb
dec
sbb
cmp
dec
shll
and
adc
daa
arpl
movsb
jae
cmp
add
push
stos
xchg
arpl
sub
je
lds
xchg
xchg
data16
pop
cmpsl
push
popf
fwait
pushw
push
xchg
pusha
ret
jg
cmp
stc
xchg
pop
rorl
loop
xchg
push
outsb
sub
add
push
jne
cmpsl
push
fcmovb
and
pushf
jno
sbb
sahf
fisubs
mov
sub
ja
jns
mov
add
dec
inc
clc
inc
les
mov
hlt
jmp
xor
nop
mov
push
xchg
nop
push
pop
adc
mov
inc
jbe
je
int
inc
inc
repz
sub
js
push
mov
test
dec
adc
outsl
jmp
in
jns
outsb
leave
iret
inc
xor
ret
jl
push
mov
mov
das
scas
shr
imulb
in
lods
sbb
sub
pop
jne
sbb
adc
inc
popa
in
fsubrs
add
xchg
shlb
sbb
add
fisttps
mov
push
fildll
adc
or
inc
xchg
and
add
pop
sub
mov
push
insl
call
rolb
int
mov
fcompl
jl
shrl
mov
in
ret
lds
cmp
cmp
xchg
sbb
jg
lds
pushf
xor
leave
adc
iret
mov
mov
or
pop
or
fcomip
into
add
fisttpl
inc
pop
lcall
sahf
mov
addl
pop
lahf
add
inc
pop
ljmp
mov
lahf
xchg
jbe
dec
inc
in
adc
imul
sbb
mov
and
xchg
hlt
jp
xlat
subl
cmpsl
xchg
in
movsl
std
sub
xchg
push
adc
insl
cmpsl
filds
sub
cmpl
cmpsl
cwtl
pusha
and
inc
push
flds
pop
mov
mov
mov
and
pusha
xchg
or
adc
pop
js
hlt
add
cmc
and
sahf
push
xchg
mov
js
ljmp
push
call
dec
inc
ret
jecxz
insl
cmp
mov
outsl
mov
out
cmp
push
data16
sbb
inc
xor
or
aaa
mov
pushf
imul
ficoms
test
adc
cld
dec
pop
fdivr
addr16
fstl
cmp
scas
test
adc
ret
sahf
or
cmpsb
jecxz
sbb
mov
imul
cmp
clc
jno
jp
ror
clc
cli
jno
lret
xlat
stos
movsl
std
xchg
test
jnp
lret
cmp
cmpl
xor
xchg
fcmovb
mov
aam
cmp
lcall
or
movsl
xchg
pop
xchg
fistl
jb
sub
and
inc
jmp
sahf
fsubp
fwait
iret
push
jo
into
xor
adc
arpl
xor
and
aaa
scas
arpl
iret
add
add
movsb
push
mov
jmp
adc
repnz
les
ds
inc
repz
insl
jecxz
popf
fisttps
clc
out
lock
jl
jp
aaa
sub
push
mov
mov
pop
pop
fdivp
inc
adc
mov
pusha
push
ret
jo
xchg
push
icebp
int
xor
popf
arpl
into
push
dec
adc
cmp
repnz
pop
fldenv
lret
push
mov
add
add
jl
loope
or
xor
jp
aad
inc
pushf
or
outsl
xor
lock
push
and
les
inc
sbb
fldl2e
jae
push
test
std
lea
icebp
pusha
inc
push
push
lcall
das
pusha
dec
push
sub
dec
pop
cmp
xchg
add
push
jnp
les
cwtl
insb
or
mov
outsb
jp
fadd
fucomi
rep
dec
jg
shrl
mov
push
lds
sub
fsubs
mov
clc
push
test
fwait
xor
enter
inc
sbb
mov
pusha
sub
cmp
test
push
adc
mov
mov
dec
adc
mov
fsubr
push
sbb
lods
shrl
xchg
and
push
pop
nop
pop
pop
mov
cmpsl
fmulp
mov
adc
sahf
sub
jns
jno
sub
sbb
push
xlat
stos
mov
push
cmp
rorl
dec
ljmp
lret
or
mov
aad
mov
lds
outsb
push
adc
xchg
push
test
clc
xchg
and
dec
pop
gs
lahf
ret
std
dec
stc
mov
xor
outsl
xchg
insb
jle
das
push
inc
leave
mov
inc
nop
orl
push
sbbb
mov
mov
xchg
sub
sbb
repnz
add
push
and
mov
fadds
pop
lahf
insl
cmovae
jns
inc
fwait
out
add
dec
and
lock
dec
shll
pop
jne
inc
jnp
jle
mov
xlat
inc
or
repz
in
mov
mov
lret
pushl
cwtl
jmp
jb
pop
push
into
xchg
es
add
mov
xchg
push
test
mov
stos
pop
add
leave
lahf
jns
cwtl
lret
aas
mov
xor
push
pop
roll
xchg
xor
jl
mov
scas
mov
fisttpll
mov
xor
pop
push
pop
push
or
xor
fnstsw
push
adc
inc
pop
pop
jae
mov
jae
sub
adc
test
fs
jno
sub
adc
mov
popa
pop
loop
movsl
jecxz
inc
mov
stc
dec
ja
int
pusha
xor
dec
movsb
movsb
add
or
or
and
and
pop
test
push
in
daa
jnp
dec
jb
fwait
lea
cmp
mov
int3
pop
jbe
fstp
xchg
testl
inc
push
xor
fsubrs
dec
aad
xor
and
adc
orl
ret
leave
sub
sti
mov
std
lock
int3
ja
push
mov
orb
xor
lret
cltd
push
dec
pushf
pop
and
add
sbb
mov
sbb
lahf
cli
pusha
stc
decl
pop
xchg
flds
pop
inc
cltd
out
sbb
icebp
mov
cltd
jmp
imul
or
inc
shrb
mov
sub
jg
xchg
dec
and
add
cld
cmp
mov
pop
inc
fsubl
mov
add
jae
fsin
inc
shr
shrl
adc
mov
or
mov
push
fimuls
fcomi
mov
cltd
jo
cltd
push
sub
adc
jae
repnz
push
vpor
push
aam
pop
cmpb
and
push
mov
fdivrs
lahf
jne,pt
pop
mov
dec
lahf
lret
loop
lret
jo
leave
or
inc
mov
and
mov
sbb
mov
xchg
leave
test
clc
stos
adc
scas
pop
pop
cmp
daa
inc
cmp
sbb
ja
mov
arpl
sub
test
cmpsl
repz
inc
cmp
imul
add
pushf
dec
pop
sub
push
inc
lcall
push
push
push
fisubl
jb
dec
sahf
jns
cmp
ds
sbb
mov
lahf
xchg
sbb
push
je
aad
js
push
leave
add
mov
test
push
clc
test
test
xor
cli
cmpsb
sub
adc
and
call
repz
stos
mov
adc
call
mov
cwtl
lahf
pop
mov
xor
out
fstl
push
mov
popf
dec
or
les
jmp
sbb
jne
xor
xlat
fucomip
jnp
mov
sbb
into
inc
ret
clc
xchg
addr16
test
leave
fsubl
mov
in
jge
xlat
stos
les
cmp
cmp
inc
nop
pushf
pop
in
mov
mov
addr16
or
cs
or
or
xchg
mov
and
dec
sub
sub
test
sbb
fisubrs
inc
inc
jmp
jp
mov
pslld
and
dec
xchg
arpl
ret
mov
inc
cwtl
mov
gs
imul
cmp
cmpsb
lods
and
shll
jnp
enter
out
mov
lds
mov
les
mov
rclb
mov
push
push
push
mov
stc
fisubrs
aam
in
cmp
mov
pop
aad
cmpsb
rcll
dec
imul
sahf
jmp
xor
mov
adc
les
mov
or
add
pop
ret
dec
inc
adc
ljmp
popf
fstpl
dec
sbb
pushf
sub
xchg
pop
std
fdivrl
mov
repz
int3
les
stos
faddl
das
or
pop
mov
and
add
dec
rcr
xchg
mov
mov
ret
pushf
ret
pushf
int3
push
jnp
xor
jle
dec
call
sub
xor
add
in
xchg
push
dec
pop
add
imull
rclb
idivl
out
bound
xchg
adc
data16
push
movsl
jp
pop
jo
cmp
mov
loopne
pop
xchg
mov
cmc
sub
mov
mov
mov
push
je
sbb
mov
dec
lcall
loop
ljmp
inc
sbb
out
push
ret
sub
repz
mov
add
pop
ror
pop
pop
xlat
arpl
mov
inc
mov
in
cld
push
jge
jbe
and
add
icebp
jo
pop
jne
or
mov
pop
xchg
out
mov
dec
adc
jg
fwait
mov
xchg
push
mov
dec
call
xor
in
pop
in
jg
les
dec
popf
ljmp
inc
stos
cld
lcall
cmpb
enter
inc
mov
mov
lods
test
daa
jns
mov
cmpsl
jecxz
mov
clc
in
sub
mov
insb
in
add
add
sbb
addl
mov
dec
cmp
mov
and
xchg
jmp
jae
or
scas
mov
push
lods
xlat
mov
call
std
add
push
push
add
jp
leave
iret
cmp
dec
cmpsl
sbb
sub
andl
push
mov
je
adc
insl
inc
ja
fdivs
jnp,pt
shr
repz
cmc
push
mov
inc
int
jmp
clc
mov
test
popa
pushf
add
popf
cmp
pop
pop
imulb
or
test
movsb
mov
ret
pushf
fmul
xor
vpclmulqdq
lret
cmp
mov
bound
xchg
or
add
push
push
fsts
scas
jne
inc
xchg
fndisi(8087
mov
lds
mov
add
jmp
sahf
sahf
arpl
leave
cs
fyl2x
and
add
jge
and
and
sub
push
mov
dec
jae
and
movsl
ret
inc
out
jb
icebp
inc
mov
and
call
pop
insb
arpl
mov
sbb
adc
jecxz
mov
mov
mov
mov
xchg
in
enter
mov
mov
sarb
popf
add
pop
adc
mov
mov
loop,pt
add
shrl
lds
xchg
cld
ret
jnp
push
or
mov
fadds
loopne
dec
mov
jns
xchg
jecxz
out
jnp
ja
cli
mov
fimuls
insl
mov
adc
sbb
xor
xchg
fnstcw
cmc
loope
mov
jmp
xor
sbb
ret
cltd
stc
loope
mov
ss
dec
fcomip
in
imull
popa
insb
add
pop
mov
lock
ds
inc
xor
mov
movsl
fwait
pushl
sub
in
insb
jbe
jle
mov
daa
jnp
js
iret
cli
dec
cmpsb
inc
cltd
sbb
cltd
fwait
das
add
mov
mov
xchg
and
lock
xor
push
repz
inc
cmp
out
notb
aam
icebp
cmp
sbb
dec
lods
jle
lods
xor
std
xor
mov
xchg
mov
loope
add
sub
lret
mov
and
and
rcr
mov
cwtl
pop
mov
push
inc
in
xlat
int
shll
mov
int
push
negl
inc
cmp
mov
dec
lret
push
and
dec
xchg
push
pop
sbb
inc
dec
cmp
sub
jle
jbe
xor
stos
aad
jmp
cs
jne
sbb
cmpps
fdivs
mov
inc
shl
aas
out
adc
incl
fidivrl
sub
add
adcl
dec
cmp
cltd
push
inc
fwait
jb
xchg
push
popa
inc
pushf
js
aaa
add
hlt
hlt
sub
mov
dec
daa
inc
inc
testl
mov
mov
dec
movsl
mov
jae
xchg
dec
ret
lret
cltd
cmc
mov
sub
test
test
test
dec
sbb
sub
test
jne
push
sub
push
bnd
lcall
sbb
mov
mov
test
aad
pop
int
mov
cmpsl
dec
out
xchg
jl
roll
outsl
cmp
pop
xchg
xchg
loope
cmpsb
popf
adc
in
and
sti
cmp
nop
xchg
bound
mov
or
mov
jle
in
push
addr16
stc
out
std
mov
inc
imul
cwtl
dec
movsl
inc
push
mov
or
adc
push
popf
mov
push
xor
push
inc
fwait
pop
xlat
pop
xor
les
dec
push
mov
jecxz
mov
aas
cmpsl
mov
jge
lods
out
xlat
sbb
cmp
pop
dec
fildl
imul
and
inc
mov
andl
iret
icebp
mov
decl
xchg
mov
cld
outsb
jo
cmc
adc
lds
dec
add
mov
sbb
push
lds
xchg
pop
add
mov
add
mov
sbb
insl
cmp
push
mov
pop
inc
push
xor
inc
inc
fisttpll
rcll
sbb
or
push
add
pop
and
jne
shrb
lea
sbb
jmp
push
shlb
call
lock
add
loope
add
rorl
loope
test
sbb
add
mov
xchg
jmp
push
and
icebp
mov
xchg
enter
pop
in
stos
sub
push
fld1
jne
lahf
out
push
or
les
popf
std
adc
jecxz
push
mov
fdivrs
dec
adc
lods
sti
dec
pusha
adc
idivl
lock
rep
cmp
pop
sub
inc
mov
pop
jae
jae
xlat
cmc
sub
je
mov
cltd
test
mov
cmp
faddl
inc
dec
pushf
dec
fsub
fsts
out
mov
mov
stos
mov
lret
fldl
in
jns
stos
js
stos
mov
lods
jmp
inc
cmpsl
fisubrs
push
fistpl
pop
arpl
out
stos
jp
push
mov
jne
add
jb
iret
hlt
push
mov
cmp
sbb
lahf
fisttps
roll
std
jecxz
sub
movntq
out
sbb
xor
cs
sbb
sub
push
cmp
and
xlat
sub
test
mov
pop
xchg
fcoms
pop
js
adc
fcoms
sbb
xchg
aam
cmp
mov
loope
or
inc
int
fstp
imul
out
xlat
adc
sarb
inc
movsl
repz
jge
pop
sti
shrb
stos
aam
cmp
or
incl
in
cmp
sbbb
xchg
pop
sbb
jne
fbld
fsubrl
lret
sbb
push
mov
cmp
sbb
sbb
insl
test
dec
sub
les
sub
ret
fdivl
nop
push
xchg
sbb
aas
jae
repz
mov
in
pop
jp
enter
inc
movb
lods
loopne
add
push
cld
gs
or
lahf
shl
sbb
les
cld
xchg
stc
add
xor
inc
sbb
orl
mov
inc
jecxz
test
push
pop
add
pop
cmp
sub
mov
add
cmp
mov
mov
push
les
inc
popl
fimuls
aas
push
mov
lret
mov
inc
rcrb
inc
and
insb
mov
mov
aas
adc
loopne
loopne
mov
mov
mov
mov
ljmp
pop
push
addr16
ret
sbb
shl
sbb
inc
cmc
lds
xlat
movsb
into
sub
pop
jmp
sbb
inc
fmuls
inc
lcall
popf
stos
stos
out
push
sub
xor
pop
and
movsb
jl
xchg
or
cwtl
pushf
inc
pusha
fisttps
mov
sub
adc
push
lret
pop
sub
movsb
lcall
cmp
jnp
les
and
cld
inc
inc
mov
jae
repnz
sbb
jge
mov
mov
add
mov
xor
inc
dec
out
aas
xor
lret
jecxz
cmpsl
lret
mov
push
ret
xor
fnstsw
test
cli
sahf
inc
push
shlb
inc
into
pop
stos
movsl
sub
dec
pop
mov
sbb
cmovno
jmp
rcll
lcall
mov
add
sub
movb
and
dec
push
cld
jl
push
push
stos
mov
fists
mov
sbb
pop
and
scas
mov
sbb
mov
sbb
cmp
xchg
aas
sub
xchg
test
addr16
xchg
stos
xchg
xlat
push
sbb
cmpsb
jecxz
fs
js
scas
mov
pop
inc
sbb
pop
jp
dec
jmp
inc
add
bnd
rorl
test
js
add
xor
imul
je
and
enter
mov
insl
out
pop
mov
stos
cmp
and
add
aam
jo
rcll
or
out
pop
hlt
sbb
nop
test
dec
adc
fsubr
push
movsl
mov
sahf
stos
jecxz
inc
push
jge
lret
cmp
pop
insl
or
xchg
stc
stos
inc
cwtl
pop
dec
lret
mov
ror
ds
in
std
leave
pop
push
dec
jecxz
sbb
movsl
dec
sahf
cmp
sbb
fs
push
ds
and
icebp
push
pop
add
sti
sbb
sub
mov
cmpsl
xor
ja
in
xor
xchg
push
xchg
sbb
or
in
push
cmp
dec
sub
gs
mov
cmp
out
dec
data16
sti
mov
pushf
mov
or
sbb
out
push
and
xor
or
xchg
pop
pushl
insl
inc
lahf
pop
outsl
out
jp
sbb
je
ret
push
xchg
insb
jbe
add
pop
fbld
imul
jb
int
jb
iret
sbb
mov
aaa
sbb
cmp
pop
mov
aas
adc
mov
daa
adc
aas
ret
pop
icebp
pop
das
or
mov
pop
or
cmp
pop
xor
add
cmp
fistl
pop
add
mov
ss
fists
mov
in
pop
dec
outsl
jnp
lds
repnz
fwait
and
push
dec
mov
lret
xchg
in
push
dec
xor
mov
dec
mov
stos
mov
lock
push
cmp
pop
inc
gs
outsb
push
mov
clc
push
arpl
push
mov
loopne
push
cmp
sbb
gs
push
mov
call
cmp
test
push
mov
push
jl
aas
jmp
ret
in
jle
js
or
mov
xchg
out
jp
or
loopne
cmp
xchg
mov
ffreep
lods
cmpsl
ret
xchg
fs
sub
pop
or
mov
mov
ret
jl
adc
test
fisubrs
inc
cmp
cmp
adc
push
sub
mov
xchg
cwtl
pop
add
test
jmp
adc
inc
mov
adc
fbstp
aad
or
and
movsb
lret
insl
mov
aas
mov
pushf
fwait
sub
xor
shll
dec
shlb
aam
mov
mov
push
xor
lret
dec
mov
pop
arpl
daa
push
stos
divb
sub
push
ss
fimuls
dec
push
lahf
mov
pusha
jecxz
popf
lret
push
jns
ss
test
dec
fistpl
xchg
jg
push
inc
fldl
mov
mov
movsb
jl
mov
sub
add
jnp
xchg
lock
pop
mov
or
scas
pop
mov
std
mov
ja
stos
mov
push
xchg
mov
jp
iret
dec
push
ja
xchg
push
jno
mov
cmp
test
insb
adc
sub
inc
cmp
jmp
inc
ja
jle
movsl
adc
mov
mov
sub
stos
push
xchg
xor
xor
inc
imul
outsl
into
pop
cmp
xor
inc
test
fisubrl
cli
inc
fwait
sbb
mov
out
outsl
inc
fcoml
sbb
gs
add
sti
xchg
rorl
and
mov
sbb
fsubrl
adc
addl
pop
jno
lods
outsb
dec
adcl
arpl
lret
jecxz
nop
fwait
out
xchg
scas
jg
int
jbe
mov
push
inc
xor
pop
push
andb
addl
and
rcll
fadds
xchg
flds
fwait
jb
xor
int3
push
movl
sub
cmpb
test
sub
js
push
mov
fidivs
aam
cmp
bound
repz
in
out
and
arpl
inc
ja
ds
jb
lahf
mov
test
jo
testl
mov
jmp
push
cmp
jbe
repnz
mov
stos
sub
repnz
lods
fstl
mov
push
cld
fcoml
push
push
adc
stos
add
lds
lret
xor
push
popa
neg
sub
or
or
leave
lods
outsb
dec
adcl
arpl
lret
jecxz
nop
fwait
or
add
outsl
jno
imul
ret
out
or
popa
cmp
das
test
mov
sahf
dec
push
xor
sub
xchg
cmpsl
jne
mov
rclb
cmp
repz
push
jge
dec
pop
sub
call
jmp
mov
xchg
lea
mov
push
shlb
mov
adc
fnsave
pop
gs
mov
sub
adc
ret
mov
mov
pop
test
jg
mov
aam
aam
sbb
enter
cwtl
jle
dec
and
xor
sbbl
xlat
int3
fsubrl
fwait
sahf
pop
sahf
cmc
sti
jp
faddp
pop
popf
mov
repz
int
mov
dec
int3
xchg
inc
fmull
lea
cmpsl
rolb
or
scas
jno
das
ret
js
cltd
fstl
add
push
cvtdq2ps
or
mov
sbb
push
repz
outsl
pop
mov
dec
mov
fimull
xor
jge
sub
pop
loope
call
jns
leave
scas
mov
pushf
xor
dec
sarl
lods
int
dec
popf
iret
and
xor
movsl
sarb
hlt
jl
lea
push
shrl
out
dec
sahf
lret
mov
iret
pop
stos
fucomi
push
ja
inc
lahf
retw
fistpl
xor
pop
dec
clc
inc
add
fnstenv
sbb
push
jbe
sti
xchg
adc
mov
arpl
addr16
push
cltd
push
fdivl
test
les
mov
mov
cltd
test
lock
mov
ljmp
dec
in
pop
mov
js
cmp
inc
test
jbe
cwtl
mov
push
adc
movsb
and
subb
icebp
sbb
scas
and
dec
add
sub
mov
int
jle
or
push
xchg
jmp
jne
out
rcr
adc
cli
push
imul
xchg
loope
cwtl
lret
in
out
xor
fld1
lahf
cmp
xchg
xchg
mov
shlb
movsb
mov
xchg
out
mov
sbb
jns
and
dec
daa
inc
or
inc
push
mov
test
insl
mov
mov
loopne
mov
repz
aas
ljmp
std
cmp
xchg
pop
sub
mov
addb
sbb
add
mov
mov
decb
jmp
adc
cmpsb
lret
inc
sbb
jno
sbb
cmp
jae
cmp
lods
pop
popf
into
arpl
jge
test
mov
test
inc
imul
arpl
dec
movsl
xchg
mov
add
add
mov
and
ds
icebp
mov
loope
neg
inc
and
mov
or
mov
test
stc
rorl
xchg
xor
test
cmp
xchg
xchg
mov
mov
mov
and
pop
lcall
out
mov
cmc
jnp
test
dec
jl
not
hlt
int
je
popf
xchg
call
subb
ljmp
inc
mov
es
pop
jns
or
jns
ds
popf
dec
adc
mov
call
sbb
cs
cwtl
mov
inc
mov
push
imulb
inc
in
xlat
dec
stos
movsl
mov
xchg
jae
push
dec
repz
mov
aaa
popf
out
arpl
in
mov
dec
mov
push
jp
xor
das
xlat
add
jns
call
mov
jo
push
cmp
shrb
inc
xor
outsl
push
cmp
cli
ficoml
push
insb
inc
xchg
test
push
repz
inc
int
fldenv
adc
aam
test
cwtl
mov
xor
jecxz
fnstsw
xchg
mov
jmp
cmp
out
sub
aas
pop
sti
addr16
xchg
ret
pop
int3
pop
dec
xorb
lret
mov
aad
inc
lcall
cmp
mov
jns
shrb
jecxz
loopne
inc
inc
mov
iret
repz
sti
xchg
enter
aaa
inc
pop
shlb
lock
cmpsl
jecxz
cld
push
cmpb
popa
popf
scas
pop
mov
fcoml
divb
jg
push
xchg
js
xchg
pop
and
add
or
call
les
cltd
insb
and
lock
mov
jl
rcll
mov
lods
arpl
loope
xchg
pop
test
mov
or
movsl
add
and
pop
cs
or
xchg
loop
xchg
adc
mov
gs
dec
dec
xor
jg
in
sub
popf
dec
jno
dec
adc
cltd
xor
cmpsb
dec
and
scas
or
repz
jb
jae
xor
jns
sarb
adc
jmp
adc
fsubl
rorb
inc
stos
in
bnd
adc
adc
inc
inc
idiv
mov
mov
test
icebp
outsb
pop
adcl
mov
movzwl
add
nop
in
in
cltd
fsubrl
pop
data16
and
push
push
cmp
sub
jmp
xor
dec
mov
lock
push
add
cwtl
loopne
bound
xchg
jno
sub
add
cmpsl
mov
fidivrl
sub
mov
lcall
fwait
lods
cmp
sbb
adc
xchg
movl
cmc
out
popl
andl
add
mov
test
inc
adc
mov
or
or
adc
rorb
mov
xchg
adc
fisubrs
xchg
movsl
inc
cltd
jmp
lea
jp
xchg
enter
hlt
xor
aad
outsb
mov
and
push
xchg
mov
in
ljmp
cmp
das
xlat
jmp
mov
cltd
mov
inc
rolb
je
adc
mul
add
xchg
idiv
and
lea
dec
sbb
imul
xchg
push
test
xor
sbb
ss
shll
pop
push
xor
sahf
jb
lcall
dec
mov
or
dec
or
push
mov
push
mov
loopne
aaa
mov
sbb
pusha
xchg
jge
stos
neg
clc
js
ficoms
xorl
clc
dec
sbb
sbb
addb
bswap
jg
rcr
mov
mov
test
xchg
adcl
mov
push
outsl
sti
repz
mov
cmpsb
xchg
adc
out
enter
aaa
mov
in
sub
rcr
adc
adc
mov
mov
leave
movsb
lods
mov
xor
or
arpl
fstp
ret
loopne
jno
add
cli
mov
sbb
mov
dec
je
adc
xlat
icebp
cld
jg
jg
leave
faddl
sub
mov
mov
stos
mov
ja
xor
dec
push
pop
sbb
fisttpll
sbb
mov
jge
adc
sbb
lret
adc
cltd
add
repnz
fidivrl
jl
xchg
adc
cmp
ret
and
mov
pop
fwait
leave
push
mov
std
test
bound
push
sbb
xchg
shlb
add
mov
ret
fdivrs
mov
in
cmpsl
jnp
sub
mov
bound
leave
out
fcompl
xchg
mov
xor
repnz
popf
fisubrs
popf
mov
push
xchg
dec
mov
mov
push
xchg
fistl
inc
repz
lcall
dec
outsb
xchg
into
das
jae
and
sbb
and
sbb
add
inc
sbb
out
dec
adc
jmp
jp
imul
jb
pushf
fstps
xchg
stc
dec
jno
push
hlt
int3
pop
sbbb
inc
shrl
mov
xchg
dec
data16
xor
out
aad
imul
push
mov
dec
out
loopne
sub
inc
sbb
dec
cmp
jnp
sub
cld
stos
repz
pop
or
mov
sbb
mov
rcr
push
and
mov
cmp
mov
movsb
xchg
sbb
xchg
pop
jno
sub
cmp
xchg
sbb
pusha
xor
das
and
jmp
xor
shr
xchg
adc
jmp
adc
inc
add
fistps
lret
in
or
adc
sbb
sbb
clc
cmp
aam
ss
shlb
sbb
adc
inc
or
mov
pop
adc
xorl
stos
mov
push
outsb
push
mov
push
js
mov
addl
jmp
cmp
xchg
sbb
mov
mov
or
push
mov
sub
jno
aad
in
popf
adc
rcrb
fcmovne
js
jle
mov
sti
cmp
dec
jl
sbb
movsl
rcr
pop
jne
mov
mov
inc
in
shll
ret
add
sub
movsl
mov
xchg
cmp
mov
dec
mov
inc
mov
pop
xchg
enter
xchg
loope
nop
lock
cmp
arpl
xchg
ds
mov
inc
mov
enter
mov
lret
inc
dec
add
adc
inc
mov
fdivp
jae
sbb
jns
cmp
mov
pop
cmpl
fsubrl
sbb
dec
and
sbb
ja
insl
adc
ljmp
add
inc
and
mov
popf
lret
or
inc
mov
add
mov
jno
add
dec
jmp
xor
xchg
fisttpl
rcrb
and
pop
mov
nop
push
mov
fldt
test
jo
sbb
loopne
mov
cmpsl
std
or
cmp
std
sub
xchg
xchg
inc
push
lock
xor
xchg
mov
mov
out
enter
pop
cmp
int3
jb
fwait
outsl
push
or
sbb
fwait
push
mov
mov
jo
pop
mov
int
imul
mov
adc
mov
push
push
mov
in
jmp
into
and
mov
hlt
stc
ficoms
aaa
movsl
icebp
enter
leave
movl
inc
or
into
in
int3
lahf
or
arpl
mov
les
shll
stos
xor
lret
dec
lcall
das
xchg
iret
out
xchg
mov
pop
sub
jle
push
jl
pop
in
andb
ljmp
mov
mov
and
imul
add
add
cltd
pop
add
pop
sub
push
push
xor
xor
add
pop
mov
mov
jp
sbb
rolb
inc
adc
enter
cmp
jmp
popa
dec
mov
hlt
cltd
sbb
jb
pusha
loopne
aas
das
mov
rclb
mov
sub
fisubrl
test
mov
das
lahf
mov
pop
aam
ds
pop
jns
or
cmp
sbbl
mov
mov
loop
stc
mov
or
daa
sbb
insl
jae
or
lods
rorb
fistpl
lods
das
inc
or
cltd
push
xchg
mov
fbstp
jae
and
sub
lret
call
jo
cmp
xchg
mov
jnp
or
dec
jmp
xchg
dec
fcmovu
fcmovu
in
add
imul
jg
nop
bound
popaw
sub
cmp
dec
ror
sarl
jns
clc
sub
cwtl
dec
nop
rcll
and
stos
adc
int3
mov
lret
stos
mov
push
xchg
push
std
call
dec
out
pop
aam
sbb
dec
fstl
call
mov
mov
dec
daa
inc
inc
lret
or
fcomip
into
inc
test
icebp
pop
orl
lcall
mov
pop
xchg
push
lcall
in
push
iret
or
inc
mov
pop
jno
scas
add
mov
cld
jg,pt
arpl
test
and
xchg
hlt
xor
test
cmp
cmpsl
jae
aam
push
loopne
jmp
pop
add
dec
add
imul
fistl
cli
test
adc
jl
push
dec
add
xor
sahf
inc
inc
ljmp
test
in
cmpl
xlat
in
ja
inc
mov
push
adc
hlt
inc
and
jl
addr16
aam
imul
push
fidivrl
fistps
mov
mov
stos
out
and
cld
inc
int3
in
repz
fnstenv
rep
daa
sub
cmp
xchg
mov
in
sbb
popa
mov
shl
mov
mov
addl
mov
cmpsl
aam
xchg
add
ficomps
pop
dec
sbb
hlt
lods
xchg
shll
mov
aas
mov
or
jbe
lret
adc
cli
stos
repnz
imul
pop
xchg
push
in
popa
iret
mov
cmc
jae
fldt
jge
mov
cmp
lret
xchg
lea
fidivrl
idivb
imul
push
xor
testb
adc
or
movsb
std
push
clc
mov
mov
mov
push
or
sti
cmp
icebp
jno
in
pop
xchg
fwait
push
or
out
mov
sub
pushl
fnsave
cld
vmovntdq
mov
vpxor
iret
cmpsl
push
xor
adcb
fbld
cmpsl
cmp
js
mov
pop
dec
iret
fnstsw
insb
aaa
and
sbb
xchg
lock
ds
ret
fsubrl
inc
roll
enter
mov
aam
add
cmp
or
add
mov
xchg
rorb
mov
mov
addr16
or
jbe
mov
hlt
lds
sbb
mov
pop
dec
dec
add
fucomi
data16
scas
push
and
sbbl
mov
or
movsl
xchg
outsb
popa
fcmovnu
push
xchg
cwtl
sub
cmp
mov
lahf
mov
xchg
lahf
mov
and
loop
sub
js
pop
xchg
andl
push
add
push
sub
cmp
in
push
mov
lods
jge
xchg
cmpsb
cli
fwait
sub
stos
mov
in
dec
jns
jb
pop
mov
sub
and
loop
jecxz
mov
dec
int
mov
mov
test
dec
mov
mov
daa
call
cmp
mov
jnp
out
pop
mov
ret
or
jae
pop
aas
imul
movsb
cmp
jo
mov
les
adc
lods
xor
fidivrs
in
push
stos
mov
in
push
test
subb
jae
and
push
je
mov
ret
cld
mov
and
dec
mov
jo
xorl
daa
jge
imul
push
or
xchg
das
int
adc
imul
mov
pop
rol
xchg
xchg
pusha
fstps
or
cmp
aam
and
sbb
mov
sbb
cwtl
cmpl
mov
mov
js
xor
outsl
das
add
sbb
cmp
dec
dec
test
fsubs
aaa
jle
add
mov
add
xchg
mov
jecxz
into
mov
cmp
push
mov
or
std
xchg
pusha
xor
sbb
decl
or
pop
xchg
xor
icebp
mov
push
lods
xchg
pushf
inc
cmp
lret
inc
aad
dec
imul
mov
lcall
pushf
jp
mov
dec
insb
push
push
push
cmp
jae
push
cmp
xor
mov
push
add
pop
rcl
cwtl
sbb
xor
pop
sub
inc
leave
sahf
xchg
cld
add
mov
and
jns
ret
in
notl
sub
repnz
pop
pop
bnd
dec
incl
mov
or
cmp
nop
inc
jp
push
pop
pop
mov
pop
into
cwtl
xor
pop
pop
adc
xchg
xor
mulb
lea
and
arpl
into
inc
mov
adc
f2xm1
jne
or
cltd
pop
or
or
int3
add
inc
inc
xor
pop
adc
push
xorl
xor
pop
jl
movsl
ljmp
xor
mov
out
pushf
sarb
dec
sbb
add
inc
ret
pop
popa
loop
icebp
arpl
lock
fldt
inc
lret
cmpsl
mov
sbb
sbb
pop
daa
mov
jg
dec
popa
adc
mov
mov
dec
fmull
fisubrs
es
inc
pop
pop
fucomi
repnz
add
and
jb
add
adc
cmp
jle
adc
scas
push
mov
sub
sbb
pop
dec
dec
xor
cmpsl
nop
mov
sub
stos
sub
pusha
jo
fistpll
dec
mov
sub
mov
pop
stc
insb
aaa
add
in
fwait
gs
xor
fs
shlb
pop
das
xor
cmpl
mov
loop
ljmp
or
clc
jmp
xor
orb
inc
sub
jae
std
pop
pop
sbb
inc
sbb
push
cwtl
lret
imul
fs
lret
push
fxch
sbb
lahf
and
stos
bound
and
jmp
cmc
cmc
in
js
xchg
test
lret
rcl
sbb
xor
stos
lds
jl
inc
lcall
jle
push
or
or
pusha
mov
or
mov
fsubl
cmp
mov
add
xchg
cmp
daa
shrl
int3
pop
xor
test
test
xlat
inc
fcoml
mov
fwait
inc
lahf
lret
jae
out
jne
mov
je
mov
sbb
cmp
jecxz
sbb
cs
daa
shll
jb
add
cmp
sub
mov
je
sbb
jg
push
add
jle
push
jp
popf
rcl
pop
mov
pusha
rcrl
fcoms
aas
and
or
xor
divb
jbe
push
inc
loop
test
shrb
popf
les
pop
xor
ss
out
orl
fldcw
movsl
sbb
mov
pusha
push
lahf
pop
pusha
fwait
cli
add
dec
lea
mov
cli
lret
ror
mov
jecxz
sti
subl
add
sti
mov
sbb
and
dec
mov
dec
mov
mov
sub
or
mov
cltd
cmpsb
test
push
jo
mov
push
jo
sbb
push
mov
call
add
aas
adc
mov
sahf
inc
fcom
je
sbb
inc
arpl
jmp
out
or
cmp
mov
mov
addl
and
and
mov
sbb
mov
ret
and
mov
fs
je
test
shrl
pop
push
fnstsw
mov
pop
andnps
ret
dec
xor
imul
and
xchg
pop
or
add
aad
inc
xchg
pop
cmpsl
and
dec
push
sbb
mov
mov
fwait
leave
xor
inc
sti
sbb
push
mov
sub
add
cmp
sbb
stos
add
stos
fcmovb
repnz
inc
das
lea
test
cmp
inc
mov
jecxz,pn
fwait
iret
data16
pop
mov
cmpsl
add
cld
les
or
sub
into
addl
lcall
jecxz
push
xchg
xchg
scas
and
int3
rcrb
test
in
cmp
loopne
repz
orb
hlt
pop
adc
inc
pop
and
xchg
ja
xor
ret
movsl
cmp
sarb
je
test
push
push
inc
pop
or
or
and
pop
push
sbb
into
outsb
cld
pop
and
arpl
aaa
inc
sbb
xorl
divb
movsb
nop
pop
mov
pop
mov
cmpsb
adc
and
push
jno
cmp
inc
cli
loope
mov
adc
xor
je
cli
or
jle
fadds
ljmp
mov
insb
or
push
test
ret
fidivrl
jl
xchg
cmp
sub
dec
inc
pop
jecxz
sub
stos
xchg
sbb
movsl
fsubrl
inc
adc
adc
popa
sbbl
or
push
dec
je
filds
aam
stc
out
les
inc
cmp
or
inc
adc
ficoms
adc
adc
add
das
pusha
idivb
faddl
push
test
cmc
and
sbb
lret
movsl
mov
and
mov
scas
enter
pop
push
pop
mov
jae
or
rorb
mov
mov
call
cmp
add
or
xchg
int3
sbb
pop
pop
cmp
fidivrl
cltd
push
adc
dec
lcall
repnz
fcmovnb
push
jg
ss
lds
jl
idivl
xchg
inc
cltd
call
xchg
addr16
xchg
std
gs
add
inc
sbb
insl
fwait
imul
cmp
stos
cmp
fnsave
jle
ficomps
daa
out
movsb
aam
pop
popf
inc
inc
idivl
dec
mov
cltd
add
pushf
fisubl
xchg
rep
ja
hlt
sub
xchg
rcr
pop
inc
pop
adc
hlt
add
push
inc
cmp
in
mov
pop
pushf
add
stos
or
add
ja
loop
or
icebp
sbb
scas
stos
sub
stos
imul
fildll
mov
repz
bound
mov
mov
jge
ret
or
dec
mov
int
xor
nop
inc
out
lods
pop
call
push
cmc
and
lahf
adc
fucomi
cmc
mov
cmc
int
mov
dec
or
xchg
dec
mov
mov
pop
sahf
out
mov
enter
pop
xchg
sbb
lods
repz
dec
cli
repz
dec
mov
cmp
or
sbb
mov
lea
cwtl
or
test
xor
sbb
sub
push
mov
cmp
comiss
push
xor
fwait
sub
ss
xor
mov
and
sbb
ss
fistpll
xor
enter
fwait
pop
adc
repz
pushf
dec
lea
leave
js
jmp
mov
jae
imul
sar
addl
jb
add
jge
and
inc
flds
les
lods
faddl
stos
inc
gs
mov
adc
sub
movsb
pop
sbbl
inc
movsb
jge
mov
scas
inc
faddl
cmp
add
iret
add
loop
sarl
ds
add
mov
aad
jb
pop
cmp
fwait
adc
int3
add
mov
testb
cs
lea
iret
cmpb
mov
jnp
es
je
lret
mov
jne
test
and
sbb
dec
mov
shrl
mov
dec
imul
fstps
ret
ds
mov
mov
jmp
in
ja
lock
fwait
outsb
xchg
hlt
lods
fcompl
cli
pusha
xor
ret
push
fbstp
pop
xchg
stos
mov
clc
lcall
ds
xchg
jnp
dec
sub
add
adc
icebp
int
cmp
pop
mov
popa
mov
stos
xchg
stos
lret
cmp
pop
scas
jbe
das
dec
movsb
push
sub
adc
jnp
add
sbb
xchg
lret
fcmovne
loop
js
mov
jge
mov
add
std
test
sbb
dec
fptan
adc
push
inc
push
pop
cmp
jp
hlt
xchg
subl
push
cld
imul
out
xor
stc
dec
decl
dec
add
push
shlb
and
jecxz
xor
aam
test
lds
cmp
jb
icebp
and
fisttps
mov
bound
mov
cmp
pop
pop
sub
pusha
mov
push
dec
xor
jl
inc
mov
cmpsb
aaa
push
bnd
push
dec
repnz
stos
andb
dec
ss
dec
scas
xor
mov
dec
inc
sbb
imul
gs
or
adc
mov
test
imul
bound
fimull
rol
data16
roll
or
jae
test
rol
stos
daa
movb
fsubp
sbb
rclb
cwtl
inc
mov
ds
sbb
in
test
xorl
or
adc
andb
cmp
push
fldenv
sarb
push
cmpsl
mov
jb
fwait
nop
fwait
cmpsl
lea
and
add
call
pop
xchg
repz
adc
pop
xchg
jns
mov
or
jnp
jp
mov
in
jne
jmp
enter
test
pop
adc
jecxz
or
scas
pop
mov
int3
pop
push
push
ret
sahf
fsub
aaa
js
orl
shrl
lret
mov
les
sti
in
dec
icebp
insb
or
or
jl
dec
shll
stos
div
dec
cmp
or
sub
cmp
push
pop
aaa
into
pusha
mov
jmp
outsb
and
ss
adc
insl
or
mov
sbb
mov
fwait
adc
inc
enter
stos
lret
mov
mov
pop
lahf
sbb
icebp
fdivrp
int3
mov
xchg
sbb
cmp
lea
xor
imul
mov
jnp
adc
or
xor
sub
xchg
repz
sti
pop
push
add
dec
adc
les
mov
enter
mov
pop
sbb
jnp
ficoml
mov
mov
lret
sahf
lret
sub
lret
add
aam
push
ljmp
and
pop
xor
mov
mov
cld
lods
ret
add
dec
dec
hlt
adc
pop
lcall
adc
bound
dec
push
mov
add
leave
sub
sub
adc
pop
pusha
push
lahf
fisttpll
dec
jmp
jo
adc
push
rcrl
and
inc
jo
mov
dec
xchg
fcoms
and
out
shll
sub
sbb
mov
or
mov
cmpsl
ret
fldenv
xor
mov
sub
pop
mov
mov
lods
sbb
inc
hlt
je
test
and
mov
dec
not
idivl
frstor
xchg
dec
pushf
jl
sub
and
mov
jge
rcrb
dec
dec
cmp
sub
pop
cmp
mov
dec
jecxz
outsl
in
mov
jae
jmp
jno
pop
push
sahf
mov
mov
mov
inc
pusha
pushf
dec
ds
adc
nop
mov
shrb
cmp
ljmp
jno
mov
push
and
fdivrl
push
mov
cs
js
push
nop
mov
scas
inc
push
adc
jg
in
sbb
mov
lea
ror
fldcw
int
lret
loope
inc
xchg
fildl
imul
inc
xlat
insb
fists
test
sub
jb
mov
out
adc
sbb
cmc
pop
pop
fxch
aas
adc
ret
clc
insb
inc
pop
cld
in
push
jb
ret
xor
mov
mov
mov
cmpsb
sti
push
sub
or
pop
les
stc
push
cmp
sbb
sub
or
xor
mov
in
adc
test
repnz
and
stos
les
dec
iret
jle
mov
int3
leave
scas
push
and
out
iret
pop
ds
test
push
xlat
xor
in
add
xchg
fisttpl
adc
inc
cwtl
cwtl
mov
ret
xor
cmp
lods
rcl
push
jae
fisttps
xlat
hlt
fstl
mov
sub
pop
repz
push
call
out
stos
xchg
movsl
jo
mov
fwait
push
out
dec
fdivrs
imul
push
mov
lret
inc
jne
and
adcl
xor
nop
insb
inc
sub
fcompl
dec
xchg
pop
pusha
pop
inc
dec
mov
in
fwait
lret
mov
pop
sarl
sbb
sahf
addl
or
jg
xor
loopne
cwtl
jg
jo
sarl
ss
packssdw
aaa
mull
add
lods
ret
pop
xchg
add
inc
xchg
and
mov
dec
fsubl
push
lods
icebp
jg
dec
push
cli
jno
pop
and
je
fucomip
pop
mov
movsb
mov
pop
insl
mov
idivb
dec
or
dec
cmpsl
pop
gs
std
inc
jnp
addr16
sbb
gs
loope
cmpsb
fcoml
adc
dec
hlt
fisttpll
jns
popf
lcall
lea
cmp
cmp
les
inc
repz
leave
inc
mov
jp
sbb
mov
outsb
xlat
sbb
mov
and
lretw
sub
fistl
xchg
mov
rcrl
in
cmp
jmp
outsl
mov
sub
sub
mov
pop
cmp
inc
mov
mov
push
push
lret
lea
push
iret
ret
lret
hlt
mov
rcrl
mov
sbb
mov
pop
cmp
cmc
movsl
ret
inc
and
ret
cwtl
sahf
or
nop
jl
pop
mov
imul
shlb
and
bound
adc
cmpsl
xor
inc
mov
push
cmp
mov
dec
mov
sbb
push
sub
and
lahf
fwait
iret
js
dec
pop
lahf
nop
pop
sub
sbb
cmpsl
xlat
mov
into
in
std
decl
and
jp
add
add
es
shll
inc
sbb
push
and
add
out
mov
jl
dec
inc
hlt
clc
out
iret
lods
push
mov
adc
mov
jne
imul
jb
mov
movsb
popf
xor
cld
js
lcall
dec
orl
mov
inc
xchg
xlat
shlb
or
push
mov
shlb
mov
pop
data16
addr16
add
fs
pushf
in
je
mov
leave
jge
loop
mov
lret
out
in
popl
push
xchg
cmp
dec
addr16
cmp
adc
stos
lret
jge
outsb
cmpsb
sub
addr16
stos
inc
mov
mov
mov
adc
xor
ja
or
nop
dec
ficoms
cmp
imul
icebp
arpl
cmpsl
std
add
repz
pushl
xchg
fadds
fsubs
gs
je
add
or
aad
jbe
push
stc
mov
jnp
or
mov
sti
sti
and
or
retw
ss
inc
ficoms
flds
fdivrp
sub
arpl
je
pop
outsb
pop
jp
imul
or
cld
xor
mov
sbb
jle
adcl
lods
lahf
add
rorb
mov
mov
pop
dec
and
mov
outsb
aaa
mov
dec
fwait
mov
ret
mov
sbb
xor
ret
and
cmc
mov
insl
push
data16
dec
outsb
test
dec
mov
cmp
scas
lea
aam
dec
sub
jp
rcl
adc
pushf
inc
hlt
and
xchg
pusha
add
js
dec
mov
jne
or
add
pushl
cmp
lock
jns
xchg
mov
add
cmp
jmp
movsb
inc
stos
sub
leave
pusha
jo
dec
popa
loopne
cmp
movsb
sbb
dec
fldl
xor
dec
pop
xchg
mov
adc
mov
ds
dec
aam
inc
push
test
inc
ja
ret
xchg
ret
imul
int3
lcall
mov
divl
fnstenv
xor
xor
xchg
pop
dec
mov
jb
mov
je
cmp
sahf
pop
dec
icebp
cli
cmp
xor
xor
scas
jp
in
leave
jp
add
dec
mov
rcll
pop
xchg
pop
mov
scas
dec
mov
scas
jo
aad
add
lods
insl
mov
shrb
lret
adc
lret
pop
gs
sub
push
lds
mov
adc
out
pusha
push
mov
mov
arpl
jo
dec
fidivl
flds
xor
mov
and
pop
ds
and
mov
test
out
jecxz
cmp
sti
imul
pop
lahf
xorl
mov
pop
out
aas
mov
lods
xchg
mov
test
loopne
jne
mov
fsubrp
cmc
xor
popa
sahf
mov
outsl
push
inc
xor
dec
xor
mov
or
loopne
mov
xlat
jne
xchg
lods
mov
xchg
inc
stos
lods
in
ja
repnz
pop
test
dec
leave
xchg
push
cwtl
or
cs
pop
fisubrl
push
dec
inc
adc
clc
sub
lcall
dec
lcall
rcrl
mov
cmc
insl
lret
fildll
add
jg
jg
jb
mov
mov
ret
push
or
lods
cmp
sbb
or
jge
dec
aaa
ds
sarb
mov
pop
aas
xchg
imul
inc
xor
call
enter
loopne
add
in
je
scas
inc
xor
xchg
popf
out
scas
roll
call
es
cmp
int3
fmuls
inc
xor
fiadds
jb
stos
out
cmpsl
repnz
dec
inc
cmc
mov
movsb
sub
sub
mov
pop
sbb
sahf
iret
fucomip
hlt
xor
outsl
dec
lahf
lret
test
pop
push
ds
test
pop
test
pop
fldl
xor
mov
add
int3
sub
pushf
dec
jl
pop
inc
sub
push
movsb
shlb
out
push
or
dec
test
stos
mov
inc
mov
sbb
dec
jmp
push
jae
push
dec
shrl
sub
inc
mov
lods
dec
lds
xchg
pop
sti
add
inc
mov
loopne
pusha
push
mov
mov
push
aas
pop
or
or
ss
pushl
pop
xchg
cwtl
lret
sub
je
mov
lretw
imul
mov
jecxz
push
push
enter
cmp
jno
iret
data16
jo
lods
jno
and
mov
or
loop
xchg
sub
daa
push
mov
cltd
sbb
stos
test
pop
rcrl
rolb
cmp
aam
jne
insl
hlt
repz
sti
mov
sbb
push
xchg
xor
mov
adc
inc
inc
sbb
add
dec
ss
int
cwtl
lret
movsl
pop
icebp
ja
push
outsb
insl
pusha
test
mov
cmp
das
and
stos
push
and
cmpsb
pushf
jp
mov
pop
call
push
mov
sub
lret
lcall
mov
popa
adc
jb
test
cmpsb
dec
cmp
or
loopne
and
arpl
push
dec
mov
incl
pop
mov
ret
sub
jecxz
jmp
test
gs
shrl
adc
mov
mov
gs
int3
inc
add
cmp
lahf
xlat
pop
cmc
cld
pop
pop
xor
lahf
sbb
jp
aaa
xor
cmc
add
cmp
fstl
jp
aad
lret
gs
adc
inc
pavgw
sarl
ds
mov
scas
shrb
je
mov
mov
in
or
cmc
std
imul
mov
in
daa
inc
cmp
jmp
mov
mov
fidivs
adc
frstor
popa
fiadds
mov
test
loop
add
loope
imul
es
in
xor
push
pop
enter
jae
outsl
mov
gs
ljmp
xor
xchg
dec
jns
xchg
lock
xor
and
repnz
int
aam
jmp
mov
add
sarb
decl
jns,pt
cmp
jno
add
pop
xor
xchg
int3
mov
mov
mov
ret
fnstenv
jge
push
sbbl
dec
pop
dec
sbb
inc
aaa
sbb
and
mov
pop
sbbb
das
xchg
data16
sti
shlb
xchg
pop
xchg
and
insl
pop
mov
jns
roll
in
xlat
ret
loope
add
shll
sti
ljmp
jnp
icebp
call
ss
adc
inc
push
fwait
xor
sbb
xchg
push
xchg
dec
clc
lret
inc
test
movsl
stos
test
nop
lds
mov
adc
adcb
and
leave
jns
cmp
inc
xchg
dec
mov
xchg
cwtl
jmp
push
dec
xchg
enter
scas
out
jmp
popa
xchg
cld
lret
xchg
add
fildl
subl
inc
inc
dec
and
cmp
lahf
jbe
add
pop
fbld
pop
dec
int
inc
test
inc
in
rcrl
out
sbb
lea
mov
cltd
sahf
mov
cmp
push
mov
cltd
pop
or
add
push
out
sub
addl
ds
dec
lret
inc
mov
cld
aad
cwtl
push
push
dec
jecxz
adc
push
pop
sbbb
mov
sbb
dec
loop
shl
lahf
jne
sub
xchg
push
popf
fildll
mov
repz
bound
mov
push
idivb
dec
shll
stos
xchg
fimull
outsl
sub
pushf
dec
push
jae
jbe
cwtl
inc
ret
jo
push
xchg
xchg
push
sub
andl
cmp
testb
fisubl
jae,pt
int
dec
mov
pop
adc
sub
mov
mov
adc
clc
jb
and
dec
cmp
popf
mov
mov
mov
repnz
dec
push
push
scas
dec
inc
jle
push
pop
rorl
mov
nop
sahf
dec
movsb
adc
pop
cmpsb
xchg
cmpl
inc
loopne
xor
inc
mov
pop
jge
mov
sti
lock
jne
pop
push
sbbl
lods
js
adc
lahf
lret
jecxz
sbb
fistpl
sub
cwtl
js
pop
aas
cmpsl
sub
xchg
xor
ss
loopne
adc
mov
inc
in
in
ret
xchg
lods
add
adc
adcb
adc
adc
or
and
bound
test
aas
repz
inc
sti
mov
std
jne
in
into
daa
mov
pop
push
pop
mov
add
cmpsl
cmp
insl
jbe
jp
clc
inc
pop
loope
sub
sub
sti
and
xchg
sti
popa
mov
jmp
mov
sub
fdivs
cltd
pop
sbb
and
hlt
xchg
repz
pop
testl
ret
imul
fcomps
sahf
test
lock
mov
call
push
cli
iret
imul
inc
xorl
rcrl
pop
in
addr16
roll
push
mov
pop
cwtl
movsl
xor
mov
dec
lret
mov
out
push
jge
mov
xor
xorb
fldenv
movsl
mov
jg
lcall
pop
gs
lods
jne
pop
in
mov
add
ret
add
popf
shl
mov
data16
inc
les
sbbb
adc
addb
mov
mov
ret
dec
pop
xchg
inc
add
adc
lahf
aad
fxch
push
call
jle
mov
ffree
push
testl
lods
enter
jmp
mov
ljmp
mov
call
pop
inc
fprem
and
cmp
pop
mov
and
dec
test
and
mov
testl
ds
add
xlat
addr16
or
xchg
sti
dec
ror
adc
arpl
dec
inc
add
pop
mov
jns
fisttpll
js
cmp
stos
jge
or
push
xorl
lods
xchg
xchg
mov
arpl
fmuls
jp
lods
jl
pop
ss
arpl
call
je
test
add
stos
xchg
push
inc
sbbl
fldenv
sbb
lods
push
dec
dec
push
xor
movsl
icebp
jno
jne
xchg
inc
add
test
andl
loopne
fwait
inc
pop
addb
lret
imul
dec
cltd
das
mov
shlb
hlt
or
push
cmc
dec
rcrb
stos
and
mov
rcr
jno
into
jmp
and
clc
daa
mov
stc
in
push
cmp
xor
ret
ret
adc
mov
or
mulb
xlat
nop
adc
cmpsl
test
mov
jns
cli
fs
arpl
dec
inc
add
xchg
nop
stc
dec
push
mov
add
and
das
cwtl
fcom
or
pop
xor
sub
les
jg
pop
std
jmp
mov
ret
cwtl
frstor
and
scas
jge
sbb
jo
mov
or
pop
mov
jp
in
mov
xor
add
subl
cmpsb
sub
mov
lret
jo
shlb
inc
fwait
inc
push
inc
add
mov
int3
xchg
sub
lea
mov
test
out
mov
testl
stos
adc
mov
repz
jns
int3
call
push
cmp
out
pop
sbbl
push
cmp
loop
adc
out
mov
lret
adc
out
test
mov
sbb
scas
test
ljmp
mov
inc
lret
or
shrl
scas
pop
or
inc
xorb
lcall
insl
pop
sarb
push
enter
lods
jnp
xchg
mov
mov
inc
add
in
and
mov
add
in
fsubs
jb
clc
add
incb
xchg
repz
inc
sbb
mov
pop
xchg
pop
cmpsb
xchg
pop
enter
enter
out
mov
mov
jge
jb
mov
int
jmp
lods
jmp
sbb
mov
iret
imul
mov
loopne
cli
mov
in
in
icebp
dec
rcrl
cmpsb
and
test
or
push
cmp
cwtl
pop
xchg
cli
push
pushf
xchg
mov
xor
je
ror
adc
sbb
mov
rcrb
filds
mov
mov
cmp
xorb
push
mov
movl
loope
scas
fcomps
pop
enter
fsubrs
lods
addr16
rclb
cld
mov
flds
xor
movsb
cmp
sbb
adc
cli
test
dec
or
movsb
jno
stc
gs
lahf
in
push
xorl
andb
and
pop
gs
adc
or
lock
sti
xchg
mov
add
repnz
xchg
jmp
popf
repz
or
sarl
int
jmp
in
inc
or
pop
out
icebp
roll
dec
push
pop
sub
cmpsl
movsb
movb
dec
lods
shr
xchg
mov
popf
jge
test
mov
sbb
push
xor
ret
pop
mov
and
lahf
aam
fistpl
inc
jbe
imul
lcall
stos
jbe
flds
ror
mov
or
test
repnz
cmp
out
clc
pop
jge
mov
or
les
lret
or
arpl
rcll
inc
rcrl
gs
fs
adc
pop
movsb
js
pop
mov
inc
cmp
fldenv
sbb
adc
dec
out
sbb
mov
pop
lret
push
shlb
inc
fsubrs
lock
push
sti
out
std
ja
hlt
xchg
repz
lret
ret
inc
loope
lock
adc
add
jecxz
inc
mov
outsl
pop
or
enter
jecxz
sub
adcb
lock
jecxz
std
dec
rcrb
stos
gs
fwait
push
mov
dec
hlt
push
xor
mov
popf
push
jns
outsb
or
mov
mov
loopne
cli
xchg
and
cli
lret
xchg
xchg
int3
adc
pop
push
push
jae
cmpsl
cltd
mov
lods
jne
sbb
sbb
add
fistl
mov
add
sbb
sbb
sbb
shlb
cltd
outsl
ljmp
mov
adc
and
sbb
cmpsb
jns
pop
xchg
xor
addl
pop
out
loopne
das
mov
mov
jno
mov
repz
lret
lahf
ds
call
int3
mov
cld
testl
lea
and
push
icebp
fdivrp
enter
std
ret
insl
adc
and
mov
stos
shrl
sub
xor
mov
lahf
mov
mov
mov
sti
dec
push
fisubrs
lret
scas
aas
jae
pop
cmpsl
in
popf
push
imul
jg
ja
sbb
cwtl
push
mov
xchg
and
mov
and
ret
sti
mov
ss
jnp
mov
test
shrb
xchg
test
rcll
sar
inc
aad
out
je
dec
add
xorl
out
outsb
cmp
pop
push
mov
jnp
mov
xchg
mov
mov
lcall
imul
cwtl
sub
mov
shlb
dec
lcall
mov
stos
neg
sbb
lock
rcll
shll
xchg
xchg
jae
mov
pop
clc
aas
clc
lods
adc
jo
mov
je
xor
ret
insl
adc
sbb
fwait
in
lret
imul
mov
pop
mov
sub
mov
sbb
test
repnz
ljmp
rcrl
mov
jnp
lcall
or
pop
ja
bound
lcall
cmc
xor
cmc
adc
pusha
ret
sahf
add
inc
mov
enter
push
jo
mov
mov
arpl
xchg
mov
jp
dec
add
xorl
inc
push
or
gs
inc
add
lds
sbb
scas
pop
cwtl
adc
cmp
enter
enter
push
test
jg
cmp
cmpsl
fiadds
push
cmpsl
mov
ja
pushf
push
shrb
scas
mov
les
daa
mov
lcall
repz
jmp
adc
lahf
mov
cltd
mov
in
pop
iret
or
inc
cli
mov
hlt
ficoml
lret
imul
xor
test
gs
xchg
pop
mov
imul
push
mov
mov
hlt
pop
xchg
inc
push
pop
sub
adc
sahf
fsub
lcall
cld
popf
jle
push
sbb
dec
jbe
scas
hlt
mov
aad
mov
and
lret
xadd
jl
fwait
mov
inc
testb
ret
or
dec
outsb
cwtl
mov
push
inc
add
mov
hlt
jmp
aam
and
inc
push
add
jb
sbb
out
js
sbb
and
jp
cmp
aad
push
hlt
int
aas
push
mov
dec
cmp
iret
imul
mov
loopne
fwait
xor
xor
mov
mov
rcll
repz
adc
repz
ds
test
adc
cmpsl
aad
frstor
cwtl
pavgb
rcl
mov
jne
je
shll
or
sar
lret
adc
int
popa
pop
dec
add
arpl
pop
js
out
push
mov
lods
cld
or
dec
mov
sbb
mov
pop
xor
enter
scas
std
fwait
xor
js
out
adc
sbb
xor
subb
sub
mov
push
adc
cmpsl
lods
mov
movsb
jno
dec
gs
lahf
inc
pop
add
jb
xchg
xor
inc
push
dec
fiaddl
jg
iret
ret
sti
mov
cltd
fcoms
pop
fdivs
mov
vmaxpd
into
adc
jmp
into
mov
ret
sarl
int
fbld
stc
mov
and
lock
or
je
and
iret
lds
mov
xor
xchg
fidivrs
add
stos
rcrl
pop
in
mov
into
mov
push
push
mov
cmc
sub
popa
push
push
add
arpl
mov
out
xchg
push
cmp
xchg
xorb
fldenv
dec
test
rorb
stos
out
pushf
int
push
fisubrs
jge
jge
inc
push
les
xchg
fsub
fwait
add
mov
or
pop
sbb
sbb
sbb
bound
mov
or
sar
mov
stc
mov
pop
lret
or
add
jne
cmpsb
jo
sbb
out
sbb
ret
imul
testl
sbb
insl
mov
mov
gs
in
cmp
push
cmp
mov
iret
xchg
mov
test
ret
inc
scas
ret
outsl
pop
out
movsb
or
mov
sahf
shl
adcb
sbb
add
mov
hlt
mov
xlat
leave
adc
ljmp
dec
test
sub
loop
rcrl
pop
call
adc
int3
mov
xor
loopne
jecxz
sub
lds
push
or
push
mov
fbld
pop
lods
in
sahf
stos
sub
fisubrl
decb
jmp
loope
xlat
popf
sub
adc
add
inc
inc
sbb
sbb
fiadds
cwtl
test
and
adc
jne
xchg
jmp
test
mov
ret
inc
mov
rclb
xchg
mov
dec
in
mov
mov
inc
xorb
push
dec
cmp
inc
rcr
jne
into
jmp
test
mov
clc
clc
cmp
lret
test
jmp
dec
adc
jle
mov
add
fsubl
mov
cwtl
xchg
xlat
nop
or
dec
pushf
sbb
mov
jne
fs
int
subl
add
cmp
dec
add
adc
lcall
dec
addr16
sub
or
mov
repnz
test
mov
loop
xchg
jmp
sbb
xchg
push
cmp
call
in
pushf
push
or
cmpsb
stc
mov
je
xchg
gs
inc
push
pop
sub
mov
mov
dec
mov
shl
cwtl
test
cmp
movsl
clc
popf
jae
sub
movsb
adc
push
adc
inc
fwait
out
pop
mov
and
xchg
xorb
jg
pop
fidivs
ja
sub
scas
mov
dec
call
test
ret
inc
rorl
add
dec
ror
mov
pushl
dec
inc
add
lret
jge
int3
call
mov
jl
mov
mov
iret
or
roll
leave
nop
ds
mulb
and
pop
pop
call
cwtl
push
mov
add
imul
cmpsl
icebp
or
mov
push
inc
sbbl
xchg
xchg
int
cwtl
daa
inc
pop
outsl
sarb
nop
dec
xchg
adc
pusha
ret
and
push
sub
les
and
inc
add
or
clc
pop
mov
add
ret
or
or
aam
stos
out
mov
sbb
xchg
in
inc
dec
js
adc
cmp
into
adc
add
or
sub
mov
jecxz
sbb
iret
mov
dec
mov
sbb
add
cmpsl
mov
jnp
mov
lcall
repz
xchg
add
dec
push
dec
testb
ret
adc
sbb
sbb
cmp
cwtl
push
loopne
jo
dec
inc
test
dec
cli
lret
ljmp
pop
inc
xchg
pop
mov
jns
adc
mov
lcall
xchg
pop
in
je
push
ja
test
or
lret
or
fcmovb
mov
es
enter
sbb
scas
hlt
repz
add
and
shl
ds
rclb
add
or
sub
lock
adc
into
and
mov
jmp
push
fsubrl
ret
sarb
aam
cltd
add
jo
sub
addr16
sbb
cltd
cld
sub
mov
sub
adc
ljmp
pop
cmp
cli
mov
fcomp
loopne
jl
cmp
mov
outsl
adc
adc
rcrl
leave
xor
or
xor
pushf
insb
cmp
pop
or
xor
mov
lret
xchg
mov
mov
andl
cwtl
sbb
push
jle
jbe
jae
in
fisubl
stos
jbe
sub
xchg
inc
rcl
addl
repz
js
fsubrs
push
inc
fisubs
jb
dec
add
loope
mov
adc
dec
add
mov
xlat
gs
mov
push
leave
test
push
lret
or
adc
xchg
imul
fidivl
xchg
sti
popa
mov
mov
sub
fdivs
lods
jns
sahf
xchg
std
aaa
cmp
xchg
repz
pop
out
adc
inc
mov
fcomps
fiadds
mov
cld
mov
xor
and
iret
imul
inc
xorl
rcrl
dec
push
mov
in
addr16
roll
push
movsl
in
sbb
xor
mov
dec
lret
mov
jge
mov
inc
faddl
fisubl
stos
jg
xchg
push
push
imul
sub
lods
jne
jns
sbb
add
ret
and
popf
mov
data16
inc
les
push
negb
adc
add
mov
ljmp
inc
add
adc
popf
aad
fxch
push
call
jle
mov
lea
cmc
ffree
push
testl
lods
into
in
mov
enter
test
hlt
popf
je
call
pop
inc
fldenv
mov
aam
sti
fistps
mov
and
dec
cmp
enter
sbb
mov
testl
jb
mov
mov
add
xlat
addr16
or
push
sti
dec
rorb
lahf
aad
arpl
iret
inc
add
pop
mov
in
popf
in
jns
pop
or
js
cmp
and
or
push
mov
cmp
mov
arpl
fdivs
lods
jl
push
ss
arpl
call
je
dec
lds
xchg
add
cmpl
inc
sbbl
stc
es
sbb
lods
ds
dec
push
add
movsl
icebp
jno
jne
xchg
inc
add
test
andl
or
inc
pop
pop
add
mov
mov
das
mov
shlb
hlt
or
push
cmc
dec
rcrb
stos
daa
lret
pop
jle
into
jmp
and
clc
daa
test
mov
cmp
xor
ret
ret
adc
iret
push
cmp
or
movsl
aam
jge
xlat
nop
adc
cmpsl
mov
stos
and
hlt
mov
xor
arpl
iret
inc
add
xchg
push
stc
dec
push
or
les
rclb
sbb
cwtl
fcoms
outsb
fnstcw
and
les
jg
pop
std
jmp
mov
ret
mov
pusha
scas
jge
push
push
jo
orl
dec
pop
mov
jp
in
mov
xor
add
subl
cmpsb
sub
mov
lret
inc
push
shlb
inc
fwait
inc
push
movb
test
push
mov
and
repz
mov
shrb
xor
std
ret
pop
repz
push
fildll
int3
je
repz
jns
int3
call
push
cmp
out
pop
test
pop
sbb
sbb
push
cmp
loop
adc
out
bound
lret
ret
cmp
test
mov
sbb
scas
mov
ljmp
mov
inc
lret
or
shrl
mov
scas
pop
or
xorb
lcall
insl
fbstp
push
enter
test
mov
mov
inc
add
in
cmp
mov
add
pop
xchg
movsb
sub
sbb
push
jmp
push
xchg
lret
jg
inc
sbb
mov
pop
xchg
sbb
mov
lock
out
mov
mov
jge
popl
dec
hlt
int
stos
xor
add
iret
imul
mov
loopne
cli
mov
or
xchg
in
fstps
dec
rcrl
cmpsb
adc
sbb
or
push
cmp
cwtl
pop
or
fcomps
xor
je
ror
adc
sbb
mov
rcrb
pop
test
mov
jmp
test
xor
movsl
cmp
xorb
push
dec
mov
mov
or
movl
loope
scas
fcomps
pop
mov
js
fsubs
gs
jl
mov
fldl
xor
movsb
cmp
sbb
adc
pop
test
dec
fs
pop
movsb
jno
call
push
sbbl
jb
stos
mov
cli
mov
mov
hlt
mov
add
mov
mov
add
repnz
xchg
imul
mov
mov
push
xchg
mov
lock
out
icebp
xlat
inc
decl
pop
sub
cmpsl
sbb
mov
xchg
sub
adc
push
inc
pop
test
sbb
call
popf
imul
clc
fs
and
push
lods
dec
stos
pop
sub
dec
cmpsl
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
shr
mov
fisubl
cmc
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
add
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
