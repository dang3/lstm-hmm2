sub
stos
push
or
cmc
cmp
mov
ja
sub
inc
js
inc
lret
fistpll
inc
mov
fisubrl
loop
data16
or
xor
or
inc
sarl
dec
cmp
je
mov
dec
adc
add
fidivl
les
push
rcll
jecxz
jg
pop
sub
out
inc
dec
mov
pop
repnz
lds
dec
push
jae
es
pop
cmp
lods
pop
mov
push
clc
lea
out
xchg
or
out
mov
jmp
mov
rcl
adc
sarb
pop
inc
jmp
add
out
adc
dec
ss
add
lret
dec
loopne
aaa
arpl
mov
pushf
scas
add
or
inc
mov
fistps
addr16
adc
shrl
xchg
adc
push
mov
lcall
rcll
and
inc
mov
lea
std
mov
and
jecxz
add
or
sub
push
mov
stos
inc
sub
aas
cmp
cmp
inc
inc
jl
imul
out
les
push
popa
cld
fsubrl
xchg
ds
and
jo
push
push
test
ljmp
xchg
pop
push
pop
cmpsb
repz
jae
cmp
test
xchg
je
into
xchg
push
jne
stos
ja
aam
sub
xchg
hlt
imul
fnsave
repz
push
sub
jecxz
sahf
loopne
push
add
sarl
mov
mov
push
jns
sbb
or
cld
inc
xchg
and
repnz
sahf
push
dec
pop
les
mov
pop
dec
xchg
lret
cld
mov
ret
fsubrs
jmp
push
or
cmp
push
mov
lcall
lea
ds
sub
addl
test
pop
mov
roll
cmp
mov
adc
inc
add
addb
leave
mov
mov
inc
pop
lds
fcomi
js
cmp
xchg
repz
jne
sub
in
out
jae
pop
faddl
ja
and
ror
mov
jg
aad
in
ret
rcrl
imul
scas
cs
mov
sbb
mov
out
rcr
mov
mov
or
leave
lret
arpl
inc
xorl
jle
mov
insb
push
mov
scas
or
xor
ljmp
dec
xor
dec
add
add
ljmp
mov
xchg
mov
in
ror
jg
xchg
xchg
jge
movl
mov
adc
ja
sbb
dec
pop
lcall
pcmpeqb
push
xchg
dec
jmp
add
pop
inc
push
and
pop
pop
stos
pop
gs
adc
and
push
cmp
jbe
imul
loop
or
sbb
mov
loope
pop
icebp
cltd
cltd
jae
call
nop
pop
mov
push
stc
scas
jmp
scas
fisttpl
sbb
jb
hlt
jge
js
aas
call
jno
pop
cmp
xchg
movsb
out
cmc
lea
sti
mov
flds
outsb
mov
rol
sbb
push
jl
cmc
adc
movlps
dec
inc
fdivrp
out
mov
les
xchg
or
pop
jo
cmp
pop
lahf
hlt
sub
sub
dec
push
lahf
jg
clc
or
cld
adc
out
push
sbb
mov
shrb
rcr
mov
mov
dec
lcall
fs
add
mov
mov
sbb
xchg
iret
mov
cmpsb
add
xchg
push
add
sbb
cmp
xorl
shrb
stc
movsb
push
out
mov
jge
and
test
pop
aas
arpl
orb
aam
out
and
and
xor
lret
std
test
push
clc
push
adc
or
sbb
push
ss
aad
fs
xchg
mov
cld
or
call
ret
push
repz
ja
jnp
fldcw
movzbl
jge
adc
dec
loope
jecxz
or
aam
push
mov
jle
mov
mov
bound
shll
sahf
out
add
movsl
es
les
mov
pop
mov
sbb
dec
pop
dec
pusha
pop
lds
jbe
ret
loop
lods
mov
xor
mov
push
xchg
adc
test
or
pop
ffreep
inc
rclb
or
ds
fs
pusha
xchg
cltd
adc
push
or
add
mov
incl
ss
mov
sub
fs
jmp
push
fidivrl
add
cmp
dec
jg
stos
push
adc
adc
test
mov
popa
loopne
add
lea
mov
cli
repnz
lret
xchg
mov
dec
adc
cmp
jecxz
js
fcmovb
lea
pop
or
xlat
inc
adc
push
call
adc
pusha
data16
jb
push
jne
adc
sbb
dec
jo
pop
shlb
aam
xor
adc
lret
fneni(8087
push
jmp
andb
adc
pop
test
lock
mov
add
and
push
and
mov
sbb
jns
js
fsubs
scas
and
in
sub
adc
mov
push
sbb
adc
dec
dec
das
icebp
aaa
shr
sub
testb
pop
push
xor
dec
fucomp
rorb
jge,pt
and
inc
jb
xchg
jae
sahf
push
fs
inc
stc
xor
loope
add
add
leave
inc
pop
jae
and
add
mov
bound
jb
xor
imul
shr
jae
cmpsb
mov
sub
mov
mov
loopne
pop
imul
add
mov
cmp
sub
mov
out
data16
dec
inc
daa
insl
add
sub
test
lret
test
mov
xchg
cmc
and
test
scas
popf
adc
fstp
or
jge
fisubs
ss
dec
dec
mov
or
xchg
or
imul
popf
arpl
and
push
push
and
gs
xchg
mov
xchg
sub
iret
jo
pusha
hlt
pop
jg
cmp
xchg
cmp
xchg
fs
popa
mov
dec
push
jne
adc
movsb
pop
out
push
adc
jg
sub
in
push
scas
sub
and
inc
inc
pop
loop
mov
fdivs
test
pop
outsb
mov
pop
xor
xchg
stos
stc
je
jmp
ret
out
push
cmp
or
xchg
add
mov
xchg
push
xchg
and
jns
rclb
dec
or
xor
or
jb
clc
enter
mov
add
mov
out
xchg
mov
pop
mov
leave
inc
cmp
ret
jo
pop
sarl
js
sub
mov
leave
test
xchg
mov
jb
xor
mov
jns
fcoml
adc
adc
pop
ficoml
pop
xchg
inc
imul
mov
jb
andl
and
notl
add
and
aas
and
bound
xchg
std
jno
adcb
in
aaa
aad
daa
js
mov
mov
sbb
xor
jo
xor
lahf
test
inc
ss
mov
mov
pushf
outsl
mov
push
xchg
inc
cmpsl
sbb
inc
sbb
xchg
or
stc
out
jecxz
sbb
pushf
sub
inc
fiadds
mov
xchg
push
aam
lahf
push
xchg
add
lahf
test
xchg
bound
div
loop
and
test
fbld
inc
pop
cltd
push
or
add
out
subb
jno
mov
adc
sbb
sub
push
mov
mov
hlt
mov
mov
adc
adc
jo
adc
dec
push
or
xorb
mov
lret
or
mov
xlat
mov
xchg
out
shrb
scas
adc
xchg
enter
push
in
mov
xchg
sti
push
pop
lods
pop
dec
inc
or
push
lods
test
or
es
popa
out
repnz
test
out
xchg
push
jp
jns
into
rolb
mov
mov
rorl
push
repz
jg
movsl
push
add
push
mov
lcall
xor
jbe
out
std
and
adc
hlt
or
jp
rclb
dec
pop
lcall
pop
dec
out
scas
jmp
xchg
mov
jg
ret
adc
mov
cmp
push
cmc
mov
push
or
dec
mov
push
jmp
in
pop
pushf
xchg
or
sbb
cmp
jno
or
adc
pop
xor
push
xchg
repnz
push
dec
or
mov
lds
mull
cli
xchg
imul
decb
pop
insb
mov
mov
cs
pop
andb
or
sbb
push
mov
mov
sbb
pop
call
inc
mov
iret
insb
dec
jo
cmp
push
add
sub
in
lcall
ss
mov
pop
insb
ljmp
push
push
mov
sbb
rorb
or
dec
push
data16
sti
popa
ret
mov
testb
in
mov
daa
stos
mov
pusha
or
stos
jg
jp
scas
frstor
mov
int
sbb
add
jl
into
dec
mov
mov
xor
jo
add
jp
lahf
and
imul
xor
sahf
xlat
and
dec
xchg
stos
leave
cwtl
mov
inc
dec
pushf
cmp
or
sub
inc
sub
in
div
lods
dec
mov
xchg
jns
popa
rcrl
insb
cwtl
cmp
xor
mov
test
mov
push
mov
test
ljmp
dec
xlat
fnstsw
or
and
cmpsl
pop
or
lods
test
and
paddw
jmp
xchg
movb
push
sub
xor
xor
dec
inc
xchg
jg
jp
mov
and
fs
xor
into
dec
lods
mov
cmpsl
test
jge
dec
lods
fistpll
subl
pop
xlat
enter
jo
mov
lcall
idivb
fcomps
dec
jbe
fidivrs
bound
andl
mov
push
xchg
dec
ds
sbb
cmp
ja
mov
and
xchg
sbb
pop
lcall
add
rcl
movsl
mov
call
sbb
shlb
jp
std
mov
pop
dec
jno
push
clc
pop
fucom
mov
int
cmp
into
out
das
aad
mov
and
je
adc
sbb
push
fwait
fs
and
and
xor
fwait
xor
and
lahf
jne
scas
mov
xor
push
outsl
mov
or
outsl
inc
test
mov
mov
and
stos
cmp
into
test
inc
movsl
dec
imul
insl
add
and
jmp
ja
mov
dec
clc
lods
mov
scas
jg
sub
mull
or
out
es
xchg
push
shll
das
daa
or
mov
loop
xor
xor
stc
fs
jbe
and
hlt
ljmp
pop
rcl
stos
mov
roll
xor
ret
or
sub
fwait
dec
and
js
int
hlt
loop
fwait
gs
pop
es
xchg
inc
imul
dec
lods
cmp
dec
aaa
sub
outsl
insl
js
xchg
inc
lock
js
fidivs
fsubr
add
call
jecxz
push
xor
sub
add
sbb
xor
lret
loop
dec
xchg
out
xor
xchg
xor
sahf
lock
push
jle
mov
mov
sbb
sbb
leave
out
insb
divl
sub
jnp
fcomps
test
dec
enter
jge
repnz
dec
mov
mov
sbb
test
inc
insb
pushf
das
and
push
scas
jb
sbb
ret
imul
or
xchg
scas
mov
or
ds
mov
stc
sahf
xchg
push
scas
js
aaa
cltd
inc
dec
jp
inc
jge
scas
out
jo
xor
int3
sbb
ss
incl
jmp
jae
bound
rcrb
push
push
int
pop
sti
cs
lahf
cmp
call
add
pop
sbb
insb
imul
lods
dec
rcll
adc
imul
test
in
jl
outsl
aam
jbe
sub
stos
inc
call
call
dec
push
ljmp
fwait
xchg
pop
call
xlat
and
mov
mov
popl
mov
push
popf
mov
or
mov
fdiv
pop
adc
xchg
pop
pop
int3
mov
clc
jns
push
cmp
aam
arpl
adc
scas
mov
xchg
jo
pop
cmp
por
mov
pop
es
insb
clc
hlt
adc
xchg
inc
outsb
sarb
jo
push
inc
mov
and
insb
lods
sub
nop
adc
pusha
mov
adc
jle
fmuls
imul
inc
push
dec
mov
popf
push
xchg
dec
xlat
jnp
popa
mov
into
mov
inc
out
data16
or
mov
xor
mov
push
aas
leave
movsl
setle
test
lods
mov
dec
dec
push
inc
sub
inc
add
subb
cmp
xchg
outsl
pop
daa
pop
or
mov
les
or
cmp
mov
mov
push
dec
add
dec
xor
repnz
lods
je
mov
pop
xchg
inc
es
cwtl
or
inc
xor
in
sub
clc
call
xor
outsb
lods
in
dec
mov
pop
cmp
push
pop
sarl
lcall
xchg
cmc
cmp
int3
pop
pop
jle
or
inc
adc
sbb
lods
jo
fstl
push
push
push
pop
jge
mov
mov
nop
fwait
or
lcall
adc
cmp
jl
out
decl
out
xchg
and
aam
mov
in
mov
lds
hlt
outsl
shrb
cltd
adcl
pop
aaa
mov
ret
stos
pop
adc
cmpl
push
imul
cli
mov
fwait
iret
dec
adc
jne
bound
out
sti
test
dec
insl
ficompl
mov
dec
pop
mov
lock
loop
ret
int3
int
jnp
in
push
xor
xlat
int3
jge
add
xchg
insb
adc
mov
or
jmp
sarb
inc
xor
aad
cmp
inc
sbb
xchg
das
ret
lds
mov
clc
jae
icebp
push
fnstsw
mov
mov
mov
and
sub
inc
sbb
enter
sub
xchg
mov
fwait
pop
and
fadd
sub
xlat
jnp
add
pop
push
mov
jmp
ds
or
inc
aam
and
xchg
cltd
pop
add
shll
sbb
shrl
adc
adc
movsl
mov
and
adc
sti
cmp
enter
shll
inc
idivl
add
popf
leave
dec
jp
adc
lret
pop
xchg
mov
nop
in
pop
ljmp
testl
jbe
cwtl
jbe
lods
insl
add
and
jecxz
ja
mov
push
fwait
shrl
mov
pushf
push
jmp
pop
xchg
pop
jo
dec
inc
sub
pop
cmpsb
lret
movsb
or
dec
das
or
mov
pop
ds
rcll
test
lods
aaa
mov
out
cmpsb
mov
mov
loopne
or
jne
lods
pushf
dec
mov
add
dec
lahf
inc
mov
bound
sbb
mov
adc
enter
nop
mov
dec
ret
loope
nop
xor
pop
or
cltd
push
ret
imul
sbb
dec
jmp
inc
mov
jle
in
shll
sbb
stos
push
ja
mov
cwtl
ja
das
dec
iret
and
jl
sub
in
add
xlat
mov
mov
xor
jl
jo
cmpsb
push
mov
push
cmc
xorl
sbb
lcall
in
mov
out
mov
fbstp
ret
pop
mov
pusha
push
xchg
pop
call
pop
into
out
arpl
mov
out
jno
shl
inc
xor
insl
ljmp
jg
out
mov
in
loope
or
sahf
push
jne
jmp
and
imul
push
xchg
pop
lods
dec
test
mulb
xchg
add
add
cmc
ret
mov
mov
fistpl
pop
jno
sahf
pop
mov
nop
in
dec
jle
addr16
sub
jns
pop
push
sub
sbb
jae
in
pop
xchg
xchg
jge
lods
or
lret
inc
sbb
pop
fadds
lods
mov
je
pop
outsb
insb
mov
sbb
dec
push
pop
dec
mov
mov
mov
sbb
outsb
xor
es
push
xchg
add
or
xorl
pop
or
jae
pop
xor
stos
xchg
mov
dec
jmp
cmp
imul
mov
sub
loop
or
jp
ret
add
mov
adc
mov
ret
dec
int3
mov
cmp
les
enter
sub
fwait
inc
pop
ffree
mull
scas
mov
sub
mov
test
mov
inc
out
sub
aam
out
mov
push
in
incl
sub
daa
shlb
push
xor
jle
cli
out
popa
mov
ss
mov
rcll
mov
push
mov
cmp
xlat
rcrb
lret
push
and
lret
push
incl
lret
mov
jg
xor
xor
shlb
mov
ret
mov
js
fistps
push
scas
cs
pop
mov
xor
bound
jp
icebp
lcall
mov
adc
adc
push
ljmp
pop
or
shl
mov
pop
xor
push
jmp
loop
fdivs
jp
mov
lret
jge
in
orb
aas
xor
jmp
dec
in
lds
insb
test
xchg
scas
in
jp
imul
inc
icebp
sbb
popa
out
add
adc
scas
sub
push
xchg
data16
pop
bndstx
add
adc
int3
repnz
xor
sub
outsl
pop
lods
shrl
repnz
ds
push
popa
sti
aam
mov
jb
insb
dec
bound
jge
push
cmp
sti
in
pop
in
fildl
test
in
pop
cmp
fwait
xchg
xchg
hlt
sub
cmp
xchg
jae
ss
jp
sub
xchg
sti
in
mull
or
pop
or
sahf
test
stos
or
pusha
xchg
jge
je
xor
aam
fs
dec
fisttpll
fmul
popf
clc
adc
mov
add
pop
dec
seta
pusha
and
or
sti
adc
arpl
mov
xlat
pop
icebp
std
mov
imul
or
fbld
jecxz
or
out
jnp
mov
xor
sub
ret
xor
adc
stos
mov
mov
out
fs
out
jge
dec
aaa
push
mov
out
mov
ficompl
xchg
jp
or
lea
aaa
cmp
fwait
stc
hlt
mov
inc
inc
fbld
les
add
out
push
dec
test
les
insb
mov
js
add
lds
dec
arpl
scas
push
cmpsb
push
sbb
popa
cs
mov
jl
data16
pop
outsb
sub
in
add
pop
push
mov
scas
xchg
cmpsb
xchg
or
xchg
mov
pop
mov
push
adc
cmp
stos
mov
pop
cmpsb
imul
fdivr
lahf
call
push
cmp
aaa
mov
mov
testl
fisubs
aaa
test
cmp
cmp
push
lock
ljmp
fmull
in
out
int
or
mov
inc
sbb
shlb
push
sbb
xor
movl
push
xor
fucomi
int
ja
xor
sub
imul
jb
add
psubd
enter
jmp
ret
inc
adc
xor
push
call
inc
aaa
int
test
test
jmp
xchg
mov
sub
addr16
divl
jnp
neg
pushf
push
pop
push
xchg
and
xor
movsb
add
adc
ret
sub
pop
cltd
pop
pop
sbb
das
cmp
arpl
sbb
jp
int
xor
lods
test
adc
cmpsl
in
dec
inc
mov
mov
pop
jecxz
lret
lock
add
add
jb
dec
divb
jge
cmpb
xor
add
pop
xor
ret
and
mov
in
ja
clc
jle
xchg
nop
aam
lds
jno
jle
pusha
out
adc
jl
dec
or
pop
mov
lret
cmpsl
outsl
mov
femms
decb
adc
ljmp
mov
out
int3
shl
test
mov
mov
dec
dec
repnz
hlt
icebp
fs
jno
cmc
dec
cli
mov
xchg
xchg
mov
ret
ja
movsl
push
mov
pop
mov
mov
xchg
jae
push
jg
mov
push
adc
mov
and
bound
inc
pushf
inc
cld
divl
test
inc
mov
add
mov
mov
inc
movsb
movsb
int3
lret
lds
xlat
in
test
dec
sub
int
xchg
out
adc
adc
sbb
mov
sub
mov
mov
js
adc
stos
cwtl
into
bnd
push
stc
lods
pop
movsl
pop
sub
xor
mov
dec
es
jge
adc
mov
shl
add
ret
cmp
stos
dec
mov
ret
aad
add
jb
xor
sub
orb
mov
orl
mov
shlb
inc
test
xchg
popf
or
cmpb
mov
inc
xor
cmp
push
add
or
sbbl
test
dec
pop
hlt
leave
jmp
das
fwait
inc
call
xor
dec
int3
xchg
mov
arpl
iret
sub
jae
pushf
sub
je
in
mov
nop
xchg
idivl
xchg
inc
jne
sti
mov
rcrl
add
adc
xor
jecxz
cli
pop
movsl
das
stc
ljmp
ss
repnz
inc
jmp
lret
pop
cmp
sbb
mov
aam
addr16
add
sar
push
addr16
cli
xorl
or
pusha
dec
push
aaa
ja
mov
sbb
aas
pop
cmovp
mov
inc
xchg
lahf
mov
mov
fdivr
pop
aas
mov
xchg
ret
push
bound
push
xchg
imul
xor
xchg
aad
in
push
xor
ljmp
cld
hlt
jne
inc
adc
jae
out
pop
lcall
popf
adc
cmp
pop
mov
jo
pop
loope
arpl
jg
add
push
clc
jl
test
dec
sti
xchg
jnp
cmp
xor
and
aas
je
in
xor
mov
lods
cmp
xchg
push
dec
cs
sbb
fsts
dec
push
gs
std
imul
push
add
mov
pop
das
mov
ds
jp
orps
insb
cld
jmp
jge
imul
jmp
xchg
lea
dec
popa
adcb
cs
lods
push
pop
adc
cmpsl
mov
xor
lock
nop
sub
lods
out
xchg
lock
or
enter
pop
xchg
pop
test
hlt
add
xor
arpl
push
and
and
sbb
js
adc
and
and
iret
aad
shl
mov
stos
mov
shlb
lahf
hlt
add
xor
jb
push
or
mov
mov
leave
out
cmp
mov
inc
ss
jl
test
or
xor
sub
cmpsb
jle
sbb
lods
pop
call
sbb
ds
jns
in
pop
mov
call
fwait
ret
sbb
shlb
ds
dec
test
jl
or
pop
pop
dec
adc
and
lods
cmp
mov
jnp
push
cwtl
mov
pop
hlt
rorb
mov
bnd
mov
sarb
pop
and
sbb
scas
jne
sbb
imul
in
jecxz
adc
mov
and
mov
lcall
pop
movsb
push
jmp
xchg
or
xchg
cmpsl
shl
push
jns
dec
adc
out
sub
add
hlt
add
dec
adc
or
in
sub
inc
rep
push
xchg
jb
dec
inc
cmpsl
lret
sbb
dec
add
sti
pop
push
in
jecxz
or
rorb
jg
insb
cmc
push
hlt
rcll
rcr
out
popa
outsl
sbb
jmp
outsb
adc
dec
xchg
adcl
repz
jae
xchg
pop
jne
in
movl
cld
loope
daa
mov
lds
jnp
xor
pushf
jne
movsl
xchg
push
fdivrs
sub
and
sbb
fscale
lcall
sbb
xor
test
test
mov
ds
mov
lock
bound
mov
xorl
cltd
aaa
adc
add
fdivr
cmp
cld
lods
push
push
lock
sahf
ljmp
movsb
xchg
mov
or
pop
jo
std
push
dec
icebp
pop
mov
jnp
std
push
dec
roll
in
push
pop
sti
push
clc
rol
sub
xor
loope
push
insb
dec
inc
es
push
add
je
xor
pop
movsb
jbe
jne
jg
cmp
into
jmp
in
flds
inc
jo
mov
push
push
xor
out
iret
data16
notl
and
push
and
mov
pop
shlb
fwait
dec
gs
lret
jp
into
aam
ljmp
push
pop
xchg
lods
mov
dec
sbb
lods
into
jb
mov
push
aaa
sti
test
leave
cmpsb
sbb
xor
jp
scas
loop
int3
hlt
sub
inc
fs
push
pop
scas
out
and
push
pop
sbb
push
mov
cmpsb
enter
mov
pop
dec
lods
pop
je
and
insb
repnz
dec
sbb
push
mov
inc
sub
push
je
dec
inc
sub
iret
subl
xchg
aas
pop
xchg
lret
ds
and
dec
add
xchg
sub
and
cmp
xchg
pop
sbb
outsl
push
je
or
aam
lock
jg
sbb
pop
jge
cmpsl
dec
dec
stos
lea
mov
int
lahf
xchg
int3
mov
dec
mov
loope
inc
lret
cmp
aas
xor
stos
inc
iret
sub
add
pop
pop
push
dec
pusha
fs
aam
mov
dec
sbb
movl
subl
or
test
loop
test
sbb
inc
fsubl
mov
mov
dec
std
repnz
xchg
sbb
cmp
jns
mov
sbb
test
add
idivl
dec
das
ljmp
push
icebp
pop
or
push
divb
cmpsl
cmpsl
or
cmp
add
cmp
mov
adc
push
cltd
leave
cmpsb
and
popf
cld
and
rcll
push
js
cmp
sbb
jnp
pop
adc
out
sbb
mov
test
push
aam
inc
lret
popa
cmp
xchg
add
dec
add
push
sahf
test
xor
out
sti
mov
jge
jmp
ss
into
aaa
jle
push
es
fisubs
pop
and
sub
mov
mov
pusha
push
pop
addr16
mov
rorl
daa
popf
mov
dec
stos
sbb
aaa
mov
xchg
jne
xor
loop
mov
add
fmul
cmp
and
mov
scas
pop
das
mov
jae
dec
and
push
out
mov
sub
dec
popa
cmp
cli
xchg
cmp
aas
jno
cmpsl
pop
pop
leave
and
ror
pop
cmpsl
daa
xchg
fucomp
dec
js
mov
clc
in
jge
clc
ret
rcr
scas
repnz
or
js
jns
loopne
jae
jns
mov
cmp
std
jnp
gs
js
sub
repnz
jl
enter
mov
cmp
pop
repnz
pop
mov
das
cmpl
add
inc
jmp
dec
dec
sbb
out
jnp
scas
sub
icebp
clc
mov
mov
add
xchg
mov
lea
dec
add
or
mov
movsl
fldcw
daa
mov
pop
mov
dec
or
and
push
sti
ss
aam
push
jle
and
sub
rcrb
xor
dec
jp
add
adc
insl
cmp
mov
je
xchg
imul
cltd
inc
cmpsl
cmc
mov
test
mov
mov
decb
ret
repz
mov
push
std
dec
push
fdivrs
loopne
and
push
cmp
mov
out
icebp
or
test
int3
xchg
cltd
test
leave
xor
jb
xchg
xchg
mov
jle
push
xchg
test
add
dec
stos
in
ret
and
mov
push
mov
loopne
rcl
xor
cmp
scas
mov
cmp
jmp
and
inc
lods
imul
int
inc
lahf
push
sahf
jns
in
nop
int3
aas
mov
cs
in
mov
dec
orb
cmp
dec
dec
mov
mov
jmp
jne
xchg
sub
push
cmpsl
jecxz
jno
pusha
mov
mov
push
xchg
daa
add
scas
cmpsb
inc
data16
lea
cmc
adc
xchg
ret
mov
imul
mov
nop
int
stos
pop
or
mov
rcrb
dec
jnp
icebp
sub
loope
nop
xchg
sub
inc
shll
sub
fs
repz
and
sbb
hlt
sbbb
mov
mov
mov
test
cmc
cmpsb
push
test
pop
adc
mov
jae
outsl
xor
sbb
outsb
sub
add
sub
or
movsl
add
xchg
lock
cmc
xchg
pusha
sti
or
shl
fwait
xor
lea
ds
mov
pop
sub
call
inc
imul
test
ret
sahf
xor
ss
cmc
sbb
mulb
out
test
push
dec
scas
xchg
int
gs
add
outsl
das
fadds
mov
hlt
pop
lcall
or
inc
jle
or
sub
pop
xor
test
adc
js
inc
cmp
imul
inc
xchg
test
gs
mov
mov
aaa
jb
mov
pop
nop
mov
sbb
movsl
inc
cmpsl
gs
jae
xlat
inc
and
adc
lret
in
ror
in
movsb
jecxz
mov
mov
mov
ficoml
dec
call
and
jg
pop
inc
jae
scas
jge
stos
adcl
aas
mov
pop
lret
jge
fldenv
sbb
shlb
pop
daa
cmc
xor
jne
mov
lret
in
add
iret
mov
ret
jne
xchg
sub
cmpsl
test
cld
jl
cwtl
imul
jae
movsb
stc
sbb
jge
out
dec
add
xchg
sbb
or
xor
cs
mov
adc
cmp
pslld
shl
daa
cmpsl
sbbl
rorl
mov
sbbb
jbe
ds
mov
xor
cwtl
jne
sub
aam
pusha
cmp
cmp
cmpsb
mov
jae
loopne
mov
in
mov
lock
mov
insb
cmp
sbb
dec
xchg
data16
jp
jne,pt
xchg
and
xlat
repz
push
lods
insl
sbb
outsl
movsl
push
mov
xchg
and
and
and
dec
and
cmpb
adc
jno
sbb
pop
repnz
imul
insl
xor
inc
movsb
add
adc
ljmp
pop
cs
pop
mov
les
mov
cmp
jmp
mov
in
jae
stc
data16
insb
inc
jnp
and
out
adc
sahf
push
mov
xor
cmp
or
andl
xlat
lock
dec
jo
xor
dec
popf
dec
cmp
fstpt
adc
or
fmuls
popa
incl
mov
jg
mov
adcb
xchg
jle
cmc
mov
test
xchg
lahf
stc
ja
xchg
dec
xchg
data16
mov
mov
int
das
cmc
pop
cmc
adc
cld
mov
out
in
xchg
jl
call
mov
adc
and
sar
xor
fildl
inc
sub
cmp
xlat
movsb
leave
xor
mov
cli
push
lea
fnstcw
xlat
fists
nop
test
mov
jnp
jns
out
mov
and
xorl
jns
xchg
sbb
lods
cmc
mov
sub
cmc
sub
add
sarb
paddusw
mov
rcl
mov
in
jp
fimuls
xor
aad
loope
push
mov
xor
mov
daa
shlb
cmp
fisttpl
aad
or
hlt
fistps
ljmp
push
je
jge
aad
adcb
jmp
push
les
dec
sub
in
lret
cld
xor
push
xor
jp
and
pop
cmc
mov
and
xchg
mov
xchg
insl
sub
mov
and
pop
add
push
out
jecxz
mov
add
dec
pushf
arpl
scas
push
ficompl
inc
dec
xchg
sbb
movsl
dec
or
out
aad
pop
sub
sub
fs
pop
add
jne
pop
lcall
fsubl
mov
lcall
push
pop
xor
or
xor
lret
adc
sbb
aam
fmull
into
sub
push
js
lret
adc
fdiv
idivb
shl
pop
mov
cmc
jmp
cmpb
or
jle,pn
shll
sub
imul
sbb
cmp
sbb
cmp
pop
mov
mov
dec
adc
out
ret
inc
aas
repnz
lcall
xchg
inc
adc
testl
and
popf
neg
fstpt
dec
ss
xor
lcall
in
fists
ss
pop
mov
jo
mov
nop
stos
inc
leave
stos
fnstsw
jmp
add
int3
sbb
data16
sahf
das
std
dec
cmc
pop
cltd
imul
mov
je
jbe
add
cmp
testl
sbb
add
fstpt
hlt
lahf
mov
sbb
sbb
xchg
js
imul
icebp
inc
into
dec
rcrl
inc
repnz
scas
cli
cmp
div
clc
mov
or
dec
push
pop
mov
mov
pop
mov
in
stos
in
push
cmp
out
cmp
faddl
test
add
jbe
stc
or
btr
imull
out
lea
loop
mov
fiadds
in
adc
mov
adc
stos
std
je
pop
and
mov
popf
negb
mov
incb
sbb
push
dec
orl
xlat
dec
ljmp
in
adc
out
out
and
and
adc
mov
rcl
aas
fstpl
icebp
jge
mov
xor
jp
popa
dec
icebp
xchg
or
lret
and
add
or
popa
loop
jg
jb
xor
lret
cmc
or
inc
movsb
cld
aam
mov
cwtl
cs
ja
cmp
jne
mov
mov
divb
add
pop
jns
lea
sub
je
mov
cwtl
loope
iret
out
outsl
add
cmpl
push
pop
add
cmp
clc
sub
and
frstor
fs
push
movsl
mov
jge
repnz
loop
xchg
cmp
mov
push
push
stos
aam
push
dec
jb
shlb
out
cmpsb
push
push
push
call
popf
jmp
dec
std
subl
mov
fstpl
mov
mov
sar
and
mov
dec
shlb
repnz
outsl
jo
mov
pop
mov
xor
shll
jp
lahf
test
cmp
mov
lea
movb
push
inc
mov
testl
aaa
test
xor
jecxz
inc
std
pop
push
inc
mov
in
and
repnz
js
push
cmc
lret
pop
shl
cli
sbb
orl
inc
inc
inc
aaa
or
xor
cld
mov
lods
push
jnp
sub
jge
sbb
jge
mov
jmp
push
adc
mov
cmp
in
out
ss
sub
or
sbb
sbb
out
mov
rorb
pop
daa
insl
sbb
sbb
pop
outsb
outsl
mov
mov
nop
fisttpl
gs
add
mov
pop
stos
and
or
dec
pop
and
shlb
push
cld
pop
push
or
or
in
sbb
popa
sarb
jae
mov
adc
out
out
inc
popa
xchg
dec
xchg
pop
and
push
ss
and
ret
add
test
rorb
jbe
push
inc
out
shlb
mov
js
cmp
xchg
push
stos
daa
mov
mov
xchg
adc
push
es
rorb
xor
mov
jl
lret
int
pop
xor
int3
cmpsb
xchg
lgs
dec
mov
fdivrp
and
outsl
cmp
adc
mov
fistpl
push
sub
pop
int3
push
mov
mov
int
cwtl
pop
inc
aam
outsb
jecxz
push
int
rol
xchg
mov
xchg
stos
mov
pop
orb
push
mov
test
outsl
repnz
jno
sub
mov
insl
daa
out
xorb
push
dec
sbb
jae
jecxz
inc
leave
fnstenv
mov
adc
mov
add
arpl
in
shrb
andb
dec
insl
lahf
jle
mov
jmp
and
scas
pop
roll
pop
rorl
pop
add
xchg
and
popa
jl
mov
mov
idivb
data16
cmp
mov
sbb
test
call
int3
pop
lods
sti
dec
xchg
int
or
pop
mov
test
adc
inc
jnp
cmpsb
mov
std
pop
call
lahf
jns
fs
movsb
mov
mov
mov
iret
mov
add
sub
addr16
inc
fidivrs
pop
adc
test
pop
dec
jns
push
jecxz
ret
stc
lahf
add
push
fincstp
call
pushf
test
in
filds
inc
xchg
aas
mov
data16
lret
xchg
insl
rcll
mov
jo
push
loopne
adc
jmp
pop
cmp
add
cmpsb
mov
imul
xor
mov
test
in
loop
loopne
jne
jbe
add
in
add
pop
arpl
jo
stos
mov
incb
and
mov
out
jle
mov
loopne
ret
xor
leave
movsl
inc
loope
pop
fs
fcmovu
pop
pop
pop
fnstcw
ljmp
rorb
aad
stos
lcall
fcmovnbe
xchg
mov
orl
dec
fs
lcall
jmp
pop
sub
pop
mov
push
dec
push
stos
lret
mul
shlb
add
dec
sbb
adcb
or
fdivl
hlt
fwait
dec
out
fdiv
call
inc
and
ds
fldl
popf
cmp
xorb
insb
rolb
cmpsb
jge
mov
cwtl
daa
hlt
pop
push
movsb
jns
idiv
jmp
cmpsl
addr16
pop
je
pop
pop
lret
out
add
fidivs
in
push
inc
int3
push
int3
pusha
je
mov
ss
sub
lret
lahf
add
adc
shll
sti
cmp
call
mov
jmp
rcrb
add
jp
push
add
mov
enter
enter
int
mov
movsb
popf
cmp
enter
xchg
test
adc
loope
jmp
and
paddusw
adcl
and
rolb
bound
xchg
dec
or
mov
pop
sti
idivb
mov
xor
push
dec
sub
outsb
pop
inc
push
pop
fimull
pop
shl
ret
pop
adc
inc
loope
sbb
lcall
cwtl
popa
shrb
rorl
lcall
mov
jg
lret
push
data16
add
test
les
mov
sub
cs
lret
mov
xchg
dec
sub
sub
mov
adc
aam
js
in
loopne
dec
xchg
in
stc
pusha
jnp
adc
pop
xchg
cmp
cmp
out
inc
xchg
pop
jl
sub
dec
xchg
bnd
dec
shr
imul
pop
mov
es
loope
cwtl
outsl
push
call
mov
jb
ss
and
int3
push
cli
mov
stos
sbb
xor
adc
mov
outsb
movsb
cmp
imul
mov
pushf
jl
jnp
dec
add
sbb
pop
mov
jno
push
xchg
cmp
daa
sub
mov
xchg
jns
cmp
mov
orl
js
repnz
adc
faddl
sub
outsl
insl
push
mull
xchg
xchg
stc
call
loopne
out
testb
enter
imul
stc
fistpll
jbe
fcompl
xor
repnz
sbbb
mov
add
or
lods
mov
cmp
fs
mov
outsb
pop
inc
xor
or
cmpsb
out
jge
outsb
sbb
cmpsb
pop
xor
inc
sub
push
pop
dec
stos
xlat
ret
imulb
xchg
lret
adc
les
lock
sbb
push
inc
xchg
mov
lock
cmp
mov
inc
pop
and
jg
dec
push
dec
lea
mov
popf
popa
lret
add
popf
add
cmp
movsl
adc
sub
cmpsb
loope
lcall
mov
dec
dec
or
or
jno
cli
jne
jnp
jnp
jno
adc
outsb
dec
pop
int
enter
shll
je
adc
pop
push
jnp
adc
pop
and
test
push
dec
pop
out
xor
and
ss
or
ja
jno
scas
mov
and
fistps
push
ss
addr16
int3
lods
or
inc
lret
dec
sbb
adc
test
push
in
dec
lea
fildl
stos
es
in
shrb
mov
test
data16
mov
sbb
jle
mov
ljmp
cmovs
mov
outsl
xor
mov
cmc
sbb
pop
and
xor
jg
stos
pop
xor
add
xchg
je
xchg
jle
mov
mov
dec
outsl
push
push
push
sarb
dec
jne
imul
insl
xchg
sub
xlat
jae
push
push
push
ret
mov
cmp
int
fcmovbe
xchg
out
pop
aaa
jmp
xchg
mov
sbb
mov
adc
adc
add
arpl
push
push
ljmp
hlt
jmp
aaa
or
lds
mov
inc
shlb
insb
sub
dec
subl
daa
xchg
outsb
lock
jmp
cmp
ret
mov
stc
jl
movsl
ss
jno
cli
xor
dec
addr16
cmp
fsubs
pop
arpl
mov
aad
lods
out
es
imul
dec
dec
cmpsb
sahf
pop
mov
xlat
fimull
lahf
add
fwait
add
mov
cli
inc
sub
insl
adc
std
mov
lods
push
imul
push
pop
xchg
loopne
jbe
pop
test
in
in
pushf
repz
push
mov
push
ds
in
jne
mov
in
fldenv
inc
cmpsl
push
out
push
out
push
enter
push
lahf
mov
imul
jnp
cwtl
pop
decb
mov
cmp
push
dec
aas
aam
loopne
mov
add
push
and
loope
insl
xlat
jno
aaa
es
pusha
inc
add
cli
or
xlat
test
push
mov
jl
cwtl
cltd
sbb
data16
mov
sub
dec
out
stos
dec
mov
push
pop
jns
cwtl
inc
test
shll
xchg
icebp
cmp
mov
pop
enter
ja
ja
out
jb
ljmp
push
aaa
mov
les
fs
jnp
scas
sbb
dec
loopne
or
mov
inc
adc
fnstcw
aam
cmpsb
fimuls
cs
push
or
jo
ret
lea
dec
pop
out
shll
pop
cmp
jmp
sbb
sub
into
mov
inc
dec
pop
fidivrs
call
insl
mov
notb
and
mulb
mov
mov
jns
cld
and
push
movsl
inc
fldcw
dec
mov
addr16
sub
gs
sar
cmpsb
cmpb
or
movsl
movsl
mov
mov
push
int
rcll
scas
cmc
in
fnsave
jae
rorl
push
es
int3
fsts
lods
cmp
and
outsb
mov
adc
jmp
or
jno
imul
mov
ss
in
xor
dec
rorb
cmp
cmp
incb
push
outsb
mov
xchg
cmc
mov
lcall
arpl
add
dec
pop
scas
pop
cli
mulb
test
fiaddl
addr16
or
jmp
ret
scas
mov
push
pop
cmc
jp
or
sarl
std
sbb
mov
pop
nopl
inc
fstps
cli
data16
int3
fdivl
mov
mov
jmp
push
imul
xor
lods
scas
pushf
stos
cmp
mov
xor
insb
or
dec
aad
sti
xchg
mov
or
je
sarl
es
dec
jne
icebp
jge
imul
adc
shl
loopne
and
bound
repnz
or
pop
xchg
into
jb
int3
inc
lods
fbld
mov
ds
fimull
setae
jb
enter
adc
and
movl
xchg
fidivrs
push
mov
mov
in
outsb
mov
stos
in
sbb
aas
int
outsl
sbb
mov
jne
xor
lret
icebp
push
dec
add
xchg
repz
test
dec
lahf
daa
pop
enter
and
xchg
lods
adc
sbb
xchg
mov
dec
mov
ret
and
jle
add
or
xchg
sarl
cvttps2pi
mov
mov
scas
das
lock
cmp
repnz
ficomps
dec
jecxz
mov
sahf
inc
push
movl
fimull
cli
jo
loope
add
arpl
xchg
jg
cmp
add
movsl
push
jg
lcall
xchg
pop
xchg
push
test
stos
pop
icebp
jns
sbb
pop
xchg
inc
pop
push
and
les
rcr
add
lods
dec
pop
xchg
mov
push
les
jmp
ljmp
jbe
mulb
pop
or
stos
jbe
in
in
cmp
xchg
mov
mov
sbb
ja
inc
outsb
arpl
aas
inc
and
lret
xor
lahf
sbb
out
cld
xor
mov
sahf
sub
push
out
lods
movl
xchg
loope
inc
std
cmpsb
rol
lods
sub
cli
xlat
xchg
cmp
es
sbb
clc
xorl
ret
pop
cmp
fldl
pop
ficoms
divl
inc
or
mov
loope
nop
cltd
aad
sbb
push
mov
jo
mov
fiaddl
jge
mov
jecxz
or
stos
sub
adc
imul
gs
iret
lods
or
fcoms
or
mov
mov
int3
mov
cs
mov
in
push
or
push
enter
mov
push
cmc
xchg
mov
ljmp
mov
cmove
shl
push
mov
dec
fs
mov
cmp
xchg
or
inc
fwait
cltd
fs
hlt
clc
xor
mov
mov
jecxz
dec
in
dec
daa
jmp
dec
xchg
inc
sub
arpl
mov
mov
pop
aaa
fistpl
and
sub
cmp
clc
dec
mull
mov
mov
sti
xor
inc
or
adc
das
sbb
dec
inc
adc
stos
std
and
mov
addr16
loope
das
xchg
cmp
pushw
pop
fs
cwtl
xorb
push
jns
push
sub
call
stos
mov
in
fists
out
jecxz
fs
cmp
jp
outsl
add
push
ret
or
outsb
fdivr
divl
int3
xor
ljmp
les
xor
cmp
js
test
push
jle
mov
fldl
mov
mov
sbb
fcmovne
das
cmp
in
in
xchg
jb
push
and
inc
ror
xchg
lahf
inc
mov
jnp
mov
fimuls
mov
sub
push
mov
dec
pushf
sbb
stc
in
jnp
mov
jno
in
pop
sbb
pminub
mov
mov
lret
cmp
test
dec
repnz
mov
roll
dec
xchg
mov
sub
es
jl
test
and
push
jb
pop
popf
icebp
imul
and
cmovae
mov
dec
stos
pushf
inc
jno
push
ss
mov
fstpl
je
xchg
push
les
insb
ss
mov
or
mov
es
mov
outsl
ror
cmpb
sbb
sub
arpl
pop
push
sbb
adc
push
hlt
int
leave
bound
xchg
aad
xchg
pusha
xchg
push
pop
addr16
lret
mov
and
lcall
out
shlb
ds
mov
mov
jo
adcl
mov
add
sub
inc
aaa
sbb
inc
pop
xor
jbe
mov
fcom
ret
test
cld
sbbb
loop
fldenv
xchg
mov
out
lods
pusha
test
cltd
jecxz
jl
or
mov
repnz
lods
sub
pop
pop
arpl
xor
inc
adc
or
mov
xor
mov
xor
lods
xlat
lret
adc
dec
mov
incl
pop
mov
sub
enter
jne
push
or
and
add
ljmp
push
sub
movsl
cltd
dec
xchg
adc
mov
pusha
orb
xchg
idivl
and
jmp
aam
or
xor
mov
hlt
lods
sbb
sbb
and
rorl
push
hlt
xchg
adc
aaa
aaa
dec
adc
jb
inc
pusha
int3
dec
pop
pop
aad
xchg
lcall
cmp
fbstp
dec
shrl
pop
cli
dec
xchg
test
jno
fadds
enter
jl
int
push
xchg
push
push
cmpsl
inc
and
fwait
jne
add
jg
pop
jecxz
push
insl
lret
imull
jecxz
arpl
cmp
mov
push
sbb
jo
test
or
aaa
mov
mov
inc
loop
xchg
pushf
out
jle
add
push
sar
test
push
sbb
in
jo
mov
addb
xchg
enter
aas
lods
add
call
inc
cmc
mov
mul
aaa
hlt
aas
das
addl
add
aas
mov
pop
cmp
mov
push
pop
mov
mov
test
lret
icebp
les
add
imul
je
xlat
push
popa
jbe
arpl
arpl
push
mov
push
and
clc
popf
aam
fildl
and
aas
mov
push
mov
xchg
jl
dec
fimull
rorb
nop
test
ljmp
fildll
ds
ja
les
pop
cmpsl
das
cltd
pop
mov
push
and
inc
cli
add
cmpl
xor
call
mov
daa
xor
dec
add
repnz
clc
mov
lds
xor
flds
movsl
ljmp
icebp
dec
bound
and
add
and
cmovo
ss
cld
push
lret
pop
cmpsl
inc
lds
ret
filds
outsb
xchg
or
out
shrb
jl
mov
mov
jle
mov
dec
sbb
jo
outsb
xchg
pop
sbb
inc
shlb
scas
bound
insb
dec
in
test
jg
es
fs
test
xchg
dec
test
mov
mov
js
cmp
mov
jle
mov
pusha
or
hlt
mov
out
mov
mov
sbb
lods
jg
pop
fimuls
cltd
inc
mov
pop
push
pop
jle
lods
movsl
xchg
mov
fldlg2
shll
stos
add
iret
sarl
xchg
xor
mov
jle
jecxz
in
sub
fwait
jno
ret
inc
cmp
xchg
sub
push
dec
cmp
cmp
cmp
mov
in
imulb
dec
mov
dec
imul
mov
bound
jno
pop
loopne
aam
mov
rep
or
fwait
push
inc
sub
sbb
dec
push
rcrl
sbb
add
jno
sub
pop
ret
dec
movsbl
scas
dec
dec
inc
lods
xlat
and
clc
jne
rorl
rorb
daa
cs
dec
ljmp
test
dec
sub
in
stos
jo
push
mov
bound
jo
xchg
and
cmp
iret
and
xchg
push
fldenv
inc
xor
push
pusha
xchg
hlt
push
fstpt
bound
jb
fwait
mov
aaa
lret
sbb
xchg
movntps
outsb
xchg
jbe
mov
idivl
sub
add
lretw
int
dec
add
or
nop
lods
repz
movsl
rorb
lods
call
xchg
jl
push
cmc
rorb
neg
sbb
out
scas
xor
xor
mov
fldl
mov
push
or
cmp
mov
out
pop
adc
sbb
mov
cmp
sbb
push
pushf
sahf
std
push
sbb
outsl
lret
fwait
jl
dec
mov
cmp
cld
pop
jae
push
jp
fdivr
mov
lret
inc
insb
add
mov
out
xchg
pop
pop
cs
nop
mov
adc
jae
mov
incl
int3
scas
mov
ds
jg
arpl
mov
sub
push
jmp
xor
cmp
aas
adc
movsb
jecxz
add
sbb
sahf
jl
lods
dec
shll
movsl
add
rcll
nop
dec
into
rclb
jg
mov
into
xlat
jl
xchg
cmp
xchg
fdivs
xor
cmp
mov
aad
xlat
filds
mov
adc
xchg
in
iret
mov
inc
arpl
dec
adc
sub
leave
roll
mov
fiadds
xlat
adc
scas
test
pop
mov
cmp
mov
lods
cltd
jbe
aas
xchg
sub
cmpsb
xor
mov
sti
pushf
or
jge
sbb
xor
jmp
rorl
jo
in
mov
push
xchg
arpl
add
int3
sbbl
xchg
fldcw
je
jbe
jne
pop
inc
shr
ja
fs
sub
mov
bound
das
add
mov
mov
pop
lds
mov
aad
cmpsl
mov
jle
mov
ljmp
add
mov
and
sub
ret
mov
out
cli
xor
push
cmp
jmp
or
out
xchg
mov
in
and
dec
adc
mov
dec
dec
clc
fwait
bound
in
push
adc
gs
jns
jno
mov
lret
jo
dec
pop
cltd
or
or
into
pop
mov
test
bound
xor
sub
jo
sub
lret
push
lock
stc
mov
mov
xchg
test
addr16
out
shufps
mov
shlb
inc
jns
dec
add
inc
lea
jle
lcall
cmp
popf
int3
jbe
jmp
cs
mov
mov
pop
jb
pop
cmpsb
roll
mov
inc
sahf
xchg
push
adc
jp
cld
arpl
sub
or
popa
cmp
mov
cmp
cmp
inc
daa
ss
and
inc
lahf
scas
pop
cmp
xchg
sbb
xor
mov
es
jl
insb
stos
mov
xchg
adc
loope
mov
add
adc
lcall
mov
pop
xchg
pop
push
adc
jnp
cld
rorb
sbb
push
inc
movsl
in
xchg
xor
mov
pop
dec
pop
adc
fwait
sbb
mov
inc
and
cli
repz
mov
pop
js
iret
cmp
mov
scas
cwtl
insb
adc
xchg
arpl
repnz
insw
sub
pushf
out
mov
sub
cltd
xor
sbb
push
push
in
and
cmp
lea
test
es
and
and
aaa
adc
push
push
int
scas
fstpl
mov
pop
and
fcomps
xchg
pop
test
addr16
mov
mov
hlt
mov
pop
dec
and
mov
mov
jbe
lea
xchg
pop
cmp
clc
loope
cld
inc
push
add
rep
out
fwait
xor
shll
mov
repz
inc
push
and
aad
push
push
xchg
gs
adc
out
ficoms
inc
movsl
sub
push
jbe
and
insl
repnz
xchg
adc
inc
mov
xlat
lea
xor
stos
subl
jnp
push
lods
or
lea
out
cmpsb
inc
test
push
mov
lret
cs
adc
mov
fsubr
cbtw
icebp
jns
sbb
repz
cmp
pop
sbb
dec
jbe
push
loope
inc
mov
orl
jne
movsb
shlb
lock
mov
bswap
outsb
mov
push
cwtl
sub
push
pop
push
jo
mov
push
jecxz
cld
mov
cmc
clc
pusha
mov
push
mov
ss
sbb
movsb
lock
jg
add
mov
sbb
loop
pushf
xor
popf
dec
lahf
cld
jno
fdivrl
repnz
pop
insb
lods
in
std
in
cli
inc
lods
popf
cli
popf
and
cmp
popa
or
popf
imul
iret
dec
mov
inc
jl
hlt
outsb
scas
dec
cmp
int3
adc
gs
aad
or
sub
fistps
xor
dec
jmp
arpl
and
mov
dec
loop
xchg
js
cmp
ljmp
sar
mov
pop
scas
add
fsubrp
fistl
adc
xchg
out
repz
xor
ret
test
nop
push
lods
loopne
js
push
call
xchg
lret
inc
xchg
push
jo
ret
setg
aad
pop
xor
mov
pop
sbb
push
imul
lds
jmp
mov
push
repnz
adc
push
pop
xor
lock
imul
fistl
add
xor
or
inc
pusha
sub
in
stos
shll
sti
jecxz
test
icebp
xor
int
pop
sahf
pop
pop
fstpt
sbb
int
mov
xchg
dec
in
fsubs
jle
hlt
cmc
in
movsl
or
mov
gs
xchg
mov
jns
ljmp
and
mov
dec
jb
mov
out
and
or
jle
movsb
mov
int
xor
nop
add
xchg
jo
xorl
ljmp
insl
adcl
xor
mov
or
mov
pusha
add
mov
enter
shll
inc
and
mul
xor
rcrl
les
mov
js
dec
jg
ljmp
jae
mov
popf
jge
cmp
out
xchg
test
enter
mov
push
mov
fs
mov
and
sub
inc
js
adc
popf
or
aas
pusha
pop
cmp
mov
sti
insb
pop
lret
test
lcall
adc
mov
ret
lods
xor
mov
pusha
test
sub
pusha
jp,pt
inc
push
sbb
mov
and
addr16
dec
cmp
aam
sahf
mov
stos
sub
fs
sub
mul
adc
cmp
lock
pop
mov
mov
add
ret
xchg
outsl
push
cmp
pop
sub
mov
mov
mov
mov
lret
cmpsl
push
inc
lcall
sbb
fisubrs
hlt
and
adc
in
movl
dec
xchg
fistps
clc
sahf
das
push
xchg
mov
adc
cmp
cltd
cmpl
cmp
repnz
stc
jne
mov
test
fldenv
jmp
into
push
pop
repz
add
enter
das
inc
movsb
inc
fcompl
xor
push
test
push
xchg
push
mov
jb
add
xchg
sub
cmp
stos
dec
push
incl
rcrl
lods
out
xor
mov
fldcw
inc
and
push
push
test
jne
adc
popa
add
cmpsl
mov
adc
pop
fcomp
in
mov
ret
lret
lahf
adc
insb
sbb
jecxz
xchg
jmp
out
bound
push
xchg
outsb
scas
and
adc
push
cmp
xchg
sub
or
loopne
iret
cmc
push
fidivrs
loope
adc
test
or
inc
ror
stos
push
sbb
pushf
push
scas
mov
mov
xor
jo
cmp
imul
cwtd
xlat
mov
aaa
sub
dec
inc
test
test
sub
mov
push
cwtl
cmpl
adc
fsubp
push
loopne
sub
xchg
popa
mov
aas
out
icebp
mov
jo
mov
mov
xchg
dec
stc
mov
jnp
out
mov
das
push
shll
call
icebp
xchg
mov
frstor
jae
xchg
shll
insb
divl
dec
xor
cmc
pushf
push
mov
popf
popa
jno
cmp
mov
mov
clc
push
scas
shll
xor
mov
scas
mov
jnp
mov
mov
sahf
lcall
jae
mov
add
divl
mov
jns
xchg
popa
ljmp
pop
mov
push
pusha
je
lods
fisubrs
test
leave
sub
loopne
or
sbb
test
in
mov
mov
dec
cs
lods
add
arpl
bound
les
sbb
add
push
out
aas
fidivrs
cwtl
xchg
cmpsl
cmc
adc
hlt
sti
or
es
movl
cmp
mov
clc
lods
cwtl
fs
pusha
cmp
xor
cmp
sub
cmp
outsl
leave
dec
add
cld
movsb
ret
rorb
xchg
jmp
xlat
lcall
ss
cli
fstl
inc
std
sti
lahf
push
xchg
lea
rcl
and
xchg
arpl
xchg
fimuls
ja
jle
and
inc
das
rcrl
es
es
mov
das
aam
mov
mov
fistpll
mov
mov
hlt
mov
jae
cltd
jg
mov
or
mov
into
adc
inc
rcl
or
je
jns
icebp
inc
mov
xchg
fs
inc
hlt
dec
xor
and
push
xchg
lcall
pop
dec
in
xor
mov
mov
enter
mov
movsb
inc
in
daa
sub
les
bound
push
push
cmpsl
add
lcall
push
fs
int
mov
ret
aas
or
ret
lock
dec
cmp
mov
push
pop
out
dec
sbb
xor
ljmp
mov
cld
mov
jne
cld
jbe
ficompl
adc
jp
gs
mov
push
xchg
push
mov
popl
int3
xchg
in
adc
sahf
stos
stos
xchg
loopne
or
cmpsl
sahf
fs
cwtl
jp
and
jle
dec
out
adc
dec
stc
adc
test
hlt
sbb
and
clc
aaa
inc
adc
mov
sahf
and
or
mov
pop
in
jle
test
mov
ret
outsb
adc
pop
jmp
in
mov
js
inc
pop
fdiv
out
jmp
sub
push
add
sub
test
insb
mov
imul
aaa
sub
mov
xor
mov
and
not
adc
add
movsl
aad
xchg
mov
shrb
movsl
ret
dec
cltd
dec
rcrl
insl
cmp
cwtl
dec
or
pop
jg
dec
or
push
int3
test
xchg
mov
adc
test
scas
cli
test
xchg
js
out
loope
fisubl
xchg
popa
fdivs
pop
pop
rorb
loopne
mov
dec
and
xchg
aam
nop
jg
leave
stos
push
pop
push
pop
inc
push
enter
aad
in
mov
mov
movsb
test
mov
sub
mov
mov
jp
imul
mov
loop
xlat
xchg
iret
das
cmp
dec
pop
push
mov
push
mov
fwait
push
sti
mov
roll
arpl
sbb
cwtl
mov
fcmovb
in
pop
or
xchg
cmp
xchg
mov
mov
int
flds
jbe
cmpsb
popf
fcom
loop
push
fnstcw
stos
cltd
scas
or
enter
push
stc
sub
inc
push
in
dec
sub
or
mov
dec
andl
sub
ja
mov
sbb
mov
js
adc
inc
jnp
ret
leave
stos
xor
divb
cmp
dec
sub
dec
icebp
or
int
xchg
jge
push
repnz
and
pop
add
ljmp
sub
cltd
or
popa
inc
insl
sub
dec
aas
pusha
mull
outsb
inc
dec
out
mov
rorl
and
aam
rorl
mov
pop
popl
dec
dec
fs
stos
mov
mov
push
xor
mov
daa
mov
xor
inc
mov
shl
xchg
xor
lret
mov
pop
fldt
mov
mov
xlat
mov
js
scas
imull
dec
or
mov
fldt
mov
xchg
lret
aad
pop
ljmp
lods
mov
mov
ficomps
es
ficoms
pop
out
repz
and
push
mov
mov
cmp
insl
inc
fs
stos
add
add
sbb
push
fcomip
aaa
pusha
loop
shr
mov
jno
das
scas
fwait
sahf
imul
ja
mov
mov
mov
pop
lahf
sub
stos
icebp
loope
inc
pop
xor
inc
int
test
mov
xchg
push
pop
jecxz
enter
nop
sbb
aam
ret
icebp
mov
pop
sbb
clc
rorl
pop
insb
jecxz
sahf
push
ljmp
jno
mov
shll
push
in
lahf
pop
ljmp
inc
mov
gs
cmp
negl
std
iret
loop
sub
loope
adc
inc
orl
mov
mov
jbe
mov
push
lds
roll
jae
jnp
or
lods
adc
jbe
data16
es
cmpsb
and
fnstenv
lods
and
in
and
pop
sub
sub
lods
stc
test
jmp
xor
pop
sub
fadds
xchg
xor
outsb
or
in
dec
and
jae
icebp
leave
fisubs
orb
dec
mov
inc
fwait
fs
dec
cs
out
test
and
std
dec
lods
movsl
inc
dec
sub
jne
pop
popa
fistpll
mov
mov
cwtl
push
ret
mov
cmp
mov
adc
push
push
cmp
inc
cmpsb
cmp
adc
in
les
pop
clc
fcomi
push
jmp
cmp
xchg
fidivl
icebp
push
or
add
push
mov
mov
mov
dec
outsl
push
addr16
fnsave
or
dec
popa
push
mov
mov
cmp
insl
adc
stc
xlat
negl
daa
add
or
icebp
popa
mov
fsubl
dec
in
insl
sbb
call
push
jae
mov
iret
out
lods
shlb
xor
sbb
xchg
dec
push
push
ss
xor
and
lahf
adc
inc
jns
rcl
jmp
push
mov
bound
and
in
push
ljmp
das
lret
sub
nop
jmp
mov
subl
or
mov
or
fisubrl
repnz
or
test
iret
inc
lcall
adc
outsl
cmpsb
cs
mov
adc
mov
mul
fs
mov
leave
jbe
popf
push
inc
inc
push
rcll
dec
daa
je
xchg
xchg
xchg
ret
movsl
push
jmp
push
adc
add
enter
xchg
cld
or
sbbl
dec
mov
das
jl
bsf
xchg
cwtl
sahf
outsb
mov
sub
ja
enter
inc
xchg
aad
push
ja
out
in
sub
sti
mov
ljmp
mov
pop
pop
inc
mov
mov
add
mov
push
add
push
and
jbe
push
stc
arpl
adc
push
pushf
je
fwait
and
repnz
pop
in
jno
sub
jle
cmp
fcompl
pop
pop
jo
jecxz
mov
lahf
jp
mov
sub
mov
cs
and
rcrb
stos
pop
ret
orb
roll
cli
sbb
dec
cli
push
cs
testb
test
adc
nop
out
push
adc
xor
into
push
pop
out
jmp
pop
lods
mov
xchg
inc
sub
pop
jnp
jo
mov
mov
jb
fucomp
and
out
sbb
dec
insl
outsl
add
std
jae
mov
outsl
mov
iret
mov
inc
pop
xchg
pop
push
in
lahf
inc
jmp
pop
inc
mov
and
adc
stos
inc
repz
cmp
mov
mov
int
and
stc
aam
popl
cmp
xor
mov
inc
scas
mov
push
cmp
mov
imul
test
xchg
mov
sub
push
ret
repz
push
adc
pop
and
ss
add
xor
adc
lea
adc
sti
sbb
xchg
cmc
cs
mov
sbb
dec
pop
inc
shl
xchg
fistps
clc
add
sub
fcomip
iret
cli
xchg
lock
lds
fiaddl
in
jp
idivl
push
push
aad
add
lock
add
bound
xlat
stos
and
inc
pusha
stos
insb
adc
cltd
push
jae
pushf
pop
mov
dec
ljmp
adc
jge
ljmp
mov
sbb
loopne
add
scas
dec
je
orb
or
pop
jne
ret
outsl
jg
mov
pop
gs
in
and
out
mov
aas
scas
mov
mov
icebp
jmp
dec
idiv
mov
push
push
sbb
sub
mov
mov
add
pop
mov
repz
jno
mov
sbb
scas
lcall
ljmp
subl
jae
mov
subb
xor
into
jns
movb
adc
adcb
mov
mov
imul
xchg
shlb
jbe
filds
jmp
insl
sbb
pop
icebp
push
sub
ds
dec
push
movsb
lahf
scas
sub
xchg
test
xor
xor
iret
sub
enter
mov
loop
jno
add
mov
push
jnp
mov
dec
jmp
stc
push
push
cwtl
fildl
mov
outsb
jnp
jae
cld
mov
popa
outsb
mov
imul
or
jns
sbb
inc
inc
sahf
cmp
jo
lods
fcom
scas
xor
sub
dec
shl
lahf
fsubrl
movl
inc
xor
imul
cs
lret
mov
xlat
scas
fsts
xor
inc
xchg
cmpsl
cmc
or
pop
std
mov
push
cmp
iret
xchg
ret
or
popa
add
lea
scas
push
mov
stc
cs
in
js
pop
fildl
push
and
adc
xor
mov
pop
cltd
sbb
and
or
push
jae
cmp
aad
pop
mov
shlb
pop
aaa
lods
pop
stos
mov
dec
sahf
sub
or
cmpsb
outsl
in
fs
frstor
repnz
lds
mov
or
xlat
pop
ss
add
xlat
jle
mov
lret
arpl
push
lret
push
cmc
and
aaa
mov
and
stos
sbb
ljmp
or
pusha
pop
test
ljmp
imul
push
mov
pop
jbe
xchg
mov
lock
mov
sti
in
or
xchg
fisubrs
and
inc
xchg
sub
ja
xlat
push
les
inc
js
jo
push
sahf
mov
pop
int
mov
nop
push
mov
out
xor
inc
adcb
imul
sbb
push
pop
iret
aaa
mov
xchg
xchg
xor
rcrl
ds
fistpl
ljmp
in
in
push
add
and
dec
or
mov
mov
out
sub
inc
movsb
popf
inc
loop
addr16
dec
std
xor
test
lods
popf
jno
loopne
adc
mov
push
mov
loopne
pop
lret
fiadds
mov
dec
dec
jmp
adc
push
sub
lcall
xchg
rolb
mov
pop
cmp
bound
fdiv
mov
idivl
aad
into
pop
cmpsl
je
mov
mov
push
inc
inc
mov
icebp
aaa
movsb
cwtl
mov
xchg
adc
xchg
push
cmp
xchg
pop
push
and
mov
shrl
xor
cmp
and
mov
frstor
cmc
or
jl
and
xchg
lods
mov
push
xchg
lahf
lret
enter
lods
xor
les
cmc
push
inc
push
jno
mov
add
addr16
sbb
sub
push
add
movsb
add
jns
int3
jg
ret
outsb
xchg
xor
add
js
push
fdivrs
dec
mov
into
xor
mov
mov
fwait
dec
bound
call
jno
arpl
jne
ljmp
lock
pop
es
sub
push
enter
in
mov
rcrb
testb
bound
xchg
leave
fsts
adc
aaa
sbb
jbe
movsl
sub
jns
xor
add
int3
push
cmp
enter
movsb
imul
shr
jge
sub
sbb
pop
mov
and
rol
je
loope
fsubrs
das
mov
aad
ja
mov
pop
jg
nop
cmpl
sahf
jns
mov
dec
fadds
dec
stc
hlt
out
jns
nop
mov
insb
xor
adc
out
outsb
daa
imul
xor
xor
sub
mov
lret
adc
jne
les
stos
test
dec
ffreep
popf
jp
pop
ss
sub
add
std
inc
xchg
and
push
pop
dec
or
call
lret
addr16
and
loop
in
dec
dec
fwait
inc
mov
pop
jo
pop
aas
mov
sbb
cmp
ds
popa
mov
xor
in
push
lods
xorb
vcmppd
aas
cli
xchg
pop
insb
rorl
loop
and
push
repnz
mov
std
daa
dec
mov
ret
lock
fimull
xchg
xchg
push
insl
xor
mov
mov
stos
sar
les
ret
icebp
insb
ja
add
sbbb
mov
mov
lahf
cmp
fwait
jae
push
decl
loopne
hlt
pusha
xchg
cltd
dec
sub
faddl
repnz
rclb
repnz
movsl
insb
sbb
push
or
inc
testl
cs
xor
jae
test
lock
xor
mov
adc
cmpsb
leave
xor
dec
lcall
pop
mov
out
into
iret
outsl
cmp
test
mov
cwtl
xor
addr16
push
lret
adc
orl
dec
xchg
fs
popf
jge
and
mov
pop
movq
xchg
pop
fstps
in
inc
mov
stos
adc
mov
mov
xor
lds
push
popl
cs
push
jl
jecxz
test
inc
jbe
arpl
mov
clc
cmp
sti
xor
jbe
dec
in
pop
decb
and
xchg
outsb
sub
mov
das
sub
pop
pop
push
cli
adc
ss
lret
mov
call
and
and
and
mov
rcrl
lods
inc
jb,pn
les
stc
cmp
cmp
sbb
mov
cmp
cltd
adc
bound
adc
and
stos
mov
push
xchg
ret
movsl
push
cmpsl
sarb
les
or
jle
aas
cltd
adc
mov
mov
pop
out
or
sub
jae
pop
or
movsb
addr16
movsl
mov
cld
aad
and
stos
cltd
or
je
insl
int3
sub
int3
cli
stc
fmull
leave
into
push
enter
lods
sub
repnz
notl
movsl
pop
bound
aad
mov
arpl
jl
loop
dec
mov
mov
add
xchg
sbb
stc
mov
sbb
mov
sbb
mov
int
iret
xor
popl
movb
adcb
mov
repz
push
fstpl
es
mov
outsl
outsw
into
fdiv
mov
rorb
jno
ret
call
inc
sbb
sbb
dec
adc
pop
sub
int
pop
sub
jbe
dec
je
hlt
inc
sub
mov
dec
push
int
sbb
fcomi
mov
mov
pop
adc
das
lcall
xor
jnp
cs
pop
inc
jae
jno
fdivl
adc
aaa
inc
outsb
mov
call
jbe
arpl
sub
stos
orl
push
test
xchg
add
add
cmp
push
arpl
das
and
mov
or
sub
je
scas
mov
pop
lods
frstpm(287
js
jle
je
arpl
cmp
jo
fdivrl
ret
cwtl
fistl
push
adc
or
inc
add
fldenv
xorl
lret
lods
leave
push
push
push
mov
sti
adc
mov
and
mov
mov
nop
xor
add
add
sti
and
jmp
jle
aaa
xor
sarb
lcall
push
pop
jl
mov
ljmp
pop
cmp
add
sub
gs
mov
or
and
xor
lock
add
push
inc
daa
repnz
cmpsb
pop
xchg
push
xchg
scas
cmpsb
stc
xor
clc
bndldx
xor
adc
jl
cmpsb
add
push
mov
test
cmp
jp,pn
hlt
divl
jbe
test
xchg
icebp
and
sub
sub
shlb
inc
sub
and
jno
mov
mov
xchg
fsubl
inc
xchg
pop
dec
xchg
roll
shrl
push
mov
ljmp
ret
sbb
loop
daa
testl
push
dec
push
sbb
popf
notl
hlt
inc
cld
jne
inc
faddl
dec
in
jne
push
je
lahf
sub
data16
inc
arpl
jecxz
pop
mov
out
sbb
push
pop
mov
pop
add
int3
xlat
push
gs
pop
mov
xchg
jmp
outsl
repz
testb
into
out
pop
js
xchg
stc
pop
mov
mov
xchg
inc
iret
sarb
cmpsw
out
fiaddl
mov
lock
or
adc
loop
ret
jp
into
es
xor
mov
pop
and
sub
pop
js
rclb
idiv
leave
lret
cmp
andb
sbb
xor
xorl
scas
in
push
push
sbb
inc
and
lock
adc
or
cli
addb
into
iret
push
sbb
je
in
inc
jmp
jp
push
fwait
cli
mov
dec
test
fsubp
adc
aaa
mov
mov
jns
out
jo
inc
xor
sub
outsl
and
dec
into
mov
mov
xor
push
sbb
or
fcoml
dec
push
and
fs
sbb
adc
sarb
add
jbe
imul
cmp
incb
stos
jo
lret
push
imul
add
ja
pop
add
cmpsl
dec
rclb
mov
loope
cmpl
sub
pop
insb
xor
outsb
sahf
xor
xor
sahf
sbb
pop
inc
mov
test
call
mov
mov
lret
mov
aad
aas
nop
push
popl
fxch
add
mov
imul
scas
jge
ret
repz
imul
sub
inc
std
sbb
icebp
mov
or
mov
clc
sti
mov
int3
stos
stc
add
mov
or
mov
das
icebp
iret
cs
push
jb
cmp
or
pop
mov
push
and
add
push
push
sub
cmc
jbe
push
repnz
inc
pop
lock
aam
pminub
sbb
jae
jle
loopne
mov
and
frstor
jae
stos
test
out
jo
insl
mov
daa
dec
inc
sub
in
repnz
bound
ret
and
mov
dec
movsb
aaa
int
sbb
cli
out
ljmp
flds
mulb
mov
pop
mov
dec
loope
jg
jb
aam
scas
loop
int3
sbb
sub
mov
xor
fists
sbb
fistps
dec
add
add
mov
cmc
dec
lcall
cmp
mov
movsb
gs
sub
test
and
out
in
mov
mov
sub
cmp
and
icebp
pop
stos
sahf
sub
add
jle
out
adc
dec
inc
push
sbb
mov
or
insb
ja
xchg
enter
mov
sub
arpl
clc
inc
clc
sub
rclb
aas
fwait
rcr
add
jbe
leave
pop
add
jb
fnsave
dec
mov
rorl
push
push
push
imul
pop
jae
test
outsb
popa
mov
fucomp
push
lods
and
push
cmc
add
leave
out
xchg
xor
mov
mov
test
xor
push
not
lcall
push
xor
inc
push
test
aas
arpl
loopne
inc
adc
lods
cli
sub
adc
stos
lods
add
int3
aaa
jnp
xchg
add
pop
mov
sbb
cltd
out
or
sbb
repnz
xchg
inc
xchg
push
iret
gs
push
and
into
stos
outsl
jmp
lods
xor
scas
sub
sub
adc
repnz
pop
add
es
cmpsl
pop
jne
inc
add
addr16
mov
loope
jl
adc
pop
mov
xchg
jg
insb
and
inc
cmpsb
mov
push
sub
mov
cmp
cld
lock
xor
leave
popf
scas
inc
jbe
ret
enter
pop
js
jecxz
pop
ficomps
sbb
or
push
xchg
pop
xorl
push
inc
shl
and
xlat
out
mov
mov
int3
out
adc
add
movsb
inc
jmp
in
sahf
push
rcrb
or
sub
mov
and
dec
push
inc
jbe
fwait
ss
push
stos
mov
in
cmp
jae
inc
movsl
fmull
fwait
aad
arpl
aam
dec
mulb
les
or
xchg
lods
int
add
iret
pop
add
push
pop
loop
jp
jle
xchg
fnstenv
lcall
adc
push
rcr
clc
or
ds
mov
xchg
hlt
mov
jo
pop
and
ror
push
xor
push
popf
out
jle
mov
cli
and
icebp
sub
push
int3
in
nop
xchg
call
cwtl
cld
adc
ret
nop
pop
cmp
les
sub
fcmove
mov
cmp
sub
clc
out
jb
dec
fiaddl
cmp
sar
mov
mov
add
loope
aam
out
sub
adc
xchg
outsb
icebp
or
cmp
test
mov
cmp
xor
fstps
sub
sbb
inc
cmp
lods
xchg
sbb
lods
mov
fs
jno
popa
push
rolb
sti
adc
icebp
sub
lds
mov
pop
jl
mov
sub
pop
mov
aaa
movsl
cmp
or
sarl
jecxz
mov
es
cld
mov
mov
pop
fwait
mov
and
mov
sbb
inc
mov
mov
push
sub
aad
enter
sbb
mov
sub
ret
mov
dec
push
sub
adc
or
movsb
int
jae
jae
or
cwtl
lret
fbstp
dec
and
int
ljmp
cmp
and
dec
es
sbb
sbb
push
mov
jae
movsl
jmp
pop
ja
scas
shl
adc
mov
dec
pop
push
cmp
lcall
out
dec
sub
pop
cmp
stos
lcall
fsubr
inc
rcr
jo
ret
adc
into
outsb
es
or
lret
mov
dec
jge
adc
jg
dec
out
and
fcoml
jae
popf
xchg
dec
aas
mov
jle
pop
nop
int
or
mov
xchg
pop
sub
lods
jl
movsl
repz
xchg
jo
adc
mov
push
add
mov
lods
pop
push
xchg
xchg
test
hlt
pop
sbb
ljmp
push
sub
adc
mov
adc
pop
stc
pop
dec
cs
addr16
pushf
enter
fld1
or
sub
cmpsb
and
jg
cmp
xor
clc
jl
jecxz
outsb
aam
test
xchg
fisttpl
lds
xchg
out
stc
fistps
jle
sub
xchg
sbb
insb
leave
enter
jl
mov
pop
inc
cmp
push
mov
jecxz
fwait
lret
or
clc
mov
std
lock
fwait
scas
or
leave
and
test
movsl
out
lods
stos
jbe
clc
push
mov
xor
and
repnz
sbb
imul
fiadds
int
mov
cmc
stos
in
mov
data16
add
push
sbb
xchg
stos
call
stos
push
stc
aam
popa
ret
adc
inc
sbb
jae
movsl
stos
inc
lock
sbb
gs
pop
sbb
out
loop
ret
mov
lods
mov
pop
in
push
jb
add
imul
imulb
enter
pop
adc
xchg
sti
mov
dec
add
popl
and
jae
sti
add
popa
mov
iret
pop
movsb
arpl
jns
sbb
aas
dec
lods
fnstcw
lahf
call
bound
or
cmp
mull
adc
ret
pushf
xorb
mov
iret
cmp
iret
xor
cmp
add
lret
in
jmp
mov
jg
xor
and
mov
mov
fildll
nop
imul
lods
jbe
sbb
popf
xchg
pop
push
mov
push
in
sbb
dec
dec
stos
pusha
push
clc
inc
xlat
or
lret
push
stos
fdiv
cltd
lret
mov
xchg
push
mov
xlat
je
mov
mov
lock
push
sbb
and
xchg
mov
out
or
je
outsl
add
pop
fdivl
mov
and
add
push
mov
mov
mov
out
lahf
call
pop
stc
jb
xchg
mov
dec
xor
add
repz
mov
cmp
xchg
add
int
push
fsubr
test
sbb
aad
sub
or
fwait
out
cmp
mul
popa
mov
fnstenv
daa
push
fstpl
and
adc
adc
imul
mov
xchg
aaa
mov
fwait
popa
cltd
and
xchg
mov
je
xor
hlt
or
hlt
pusha
inc
rorb
add
pop
cli
imul
sbb
stos
ds
and
aas
inc
incl
loop
fmull
xchg
xchg
out
sbb
loope
js
jb
mov
pop
negb
dec
xor
cmp
lahf
icebp
push
pop
push
xor
sub
pop
pop
xchg
cli
push
ret
loopne
leave
out
sub
iret
repz
mov
iret
aas
mov
pusha
lods
aam
lods
jnp
push
call
pop
sub
stc
sarl
ret
push
fs
and
sub
fchs
fs
dec
pop
les
fldenv
mov
rorl
loopne
pushf
inc
mov
shlb
sub
push
rcrl
pop
xlat
inc
pushf
sbb
jl
inc
dec
pop
xchg
inc
lock
cmp
ret
jecxz
fcmove
mov
mov
add
add
or
dec
int
push
stos
xchg
cli
or
movl
ficoms
dec
aad
loopne
inc
jnp
jp
or
mov
negl
adc
cmc
jne
stos
and
das
adc
sbb
enter
xor
jp
lahf
jo
push
mov
or
xor
add
mov
mov
dec
out
repnz
push
insb
dec
mov
mov
nop
cmpsl
pop
lds
aam
xor
mov
sub
sub
add
sub
stos
and
push
rclb
aad
dec
mov
sub
adc
sub
aaa
cmp
out
popf
push
inc
ret
scas
jns
mov
xchg
mov
add
pop
lcall
lahf
jne
sub
mov
int3
adc
test
fistpll
xchg
mov
rorl
negl
aas
push
mov
pop
push
loop
fildl
xor
jae
add
pop
dec
inc
jecxz
jecxz
dec
xlat
inc
dec
add
inc
inc
push
mov
loop
in
or
imul
insb
add
jp
in
into
pusha
in
cli
shl
jae
adc
dec
in
add
aam
ret
pop
dec
push
sub
jl
mov
dec
sti
adc
fnstcw
lods
addps
push
or
ret
lea
lret
pusha
cltd
lahf
imul
push
jp
and
movsb
jno
add
cltd
sti
cmc
sti
notb
sbb
mov
ds
nop
xor
sbb
mov
sbb
call
lret
orb
jle
inc
mov
cmp
ljmp
lock
shl
sub
rol
daa
imul
stos
push
jmp
leave
mov
xchg
mov
out
jae
mov
ret
adc
adc
lahf
push
std
jl
enter
mov
mov
push
inc
xor
int3
pop
pop
dec
out
cmp
les
dec
cmp
dec
mov
imul
sub
outsl
jge
jl
sar
or
dec
add
ret
cli
pop
mov
dec
lahf
or
dec
andl
out
loope
dec
push
popa
test
minps
pop
xor
push
push
int
push
cld
lret
push
stc
movsl
inc
fildl
bound
mov
sub
test
stos
lea
mov
add
cmpsb
fwait
dec
jb
pusha
add
jg
sbb
sbb
or
test
shll
test
cmpsl
sbb
in
pop
push
inc
xchg
xchg
sti
push
pop
idivb
mov
pop
test
pop
fnstenv
jns
cmp
sbbb
mov
repnz
std
js
je
outsl
je
pop
in
cs
repz
jecxz
addl
mov
inc
lods
adc
popf
sbb
shll
popf
imul
xchg
lret
subl
adc
adc
inc
xor
imul
dec
je
fst
pushf
mov
bound
ss
mov
bound
data16
mov
add
dec
into
push
test
mov
lret
push
and
dec
cmp
pop
or
scas
popf
and
bts
jg
fidivrl
mov
jg
adc
insl
xchg
pop
inc
push
xor
aad
xor
hlt
add
pop
aas
mov
popa
fmul
stos
shll
sti
mov
xchg
sub
fdivs
cli
sbb
mov
in
ret
pop
je
rcrb
xchg
call
lret
js
mov
mov
jae
xchg
mov
sbb
and
nop
in
cmp
stos
sbb
jp
add
fistps
frstor
mov
in
add
xchg
dec
mov
movsb
out
icebp
add
rolb
inc
dec
jecxz
ficoms
stos
repnz
xchg
sarl
mov
dec
fists
aaa
pop
in
lock
push
jge
mov
in
mov
sbb
daa
mov
inc
lock
int
jecxz
arpl
cmpsb
cwtl
fdivr
cli
loop
shrb
fisttpll
pop
lock
xchg
scas
cmp
push
sbb
xor
push
out
nop
sub
ja
leave
or
aaa
rcll
jg
push
int
cltd
cli
popf
ljmp
icebp
nop
iret
sahf
mov
shl
jns
jae
mov
sbb
xor
hlt
adc
and
push
ljmp
shrl
and
sbb
mov
mov
sbb
repnz
pop
pushf
sub
inc
test
addr16
push
test
daa
jae
sti
push
fdivrs
popa
rcrl
mov
insb
inc
dec
mov
data16
stos
aaa
sub
jns
inc
das
test
sbbb
lds
out
xor
dec
mov
dec
icebp
sub
out
pop
and
xor
cs
dec
xor
xchg
jl
adc
rcrb
enter
fwait
push
cmpsb
inc
mov
add
setp
xor
fs
dec
rcll
xor
hlt
jg
icebp
cmp
mov
arpl
jmp
cmp
aad
cs
stc
lods
outsl
push
push
imul
add
adc
dec
pop
or
mov
sub
jge
cmp
add
or
or
or
clc
fbld
mov
fneni(8087
scas
cmpsl
fidivrs
jnp
mov
fsubl
add
and
jl
dec
test
std
dec
inc
push
mov
adc
lods
loop
inc
std
mov
pushf
inc
mov
cmpsb
ficomps
jp
jb
fwait
mov
jo
sub
cmp
xor
shrl
xchg
movsl
push
pop
aas
xor
push
lds
pop
ds
jge
mov
lret
sub
rcrb
mov
fisttpll
dec
cmc
iret
or
shl
pop
out
or
loope
mov
scas
int
lret
jo
dec
pop
jle
lea
fwait
xchg
mov
jno
shl
jmp
clc
mov
fstpt
xlat
jb
ret
jl
xchg
arpl
cltd
stos
pop
aas
insl
cmp
adc
mov
mov
sbb
int3
data16
lods
shr
and
jb
adc
data16
sub
or
cltd
lcall
push
test
mov
xchg
shlb
mov
inc
gs
mov
test
pop
xor
inc
ficoml
mov
add
je
ss
repz
and
dec
dec
jne
js
jb
add
std
dec
mov
adc
or
xchg
push
pop
nop
cmp
push
adc
xchg
out
and
adcb
mov
xor
mov
ja
push
mov
push
inc
das
add
stos
ror
xor
jmp
add
scas
pop
push
test
loopne
adc
in
in
into
clc
gs
fwait
scas
push
xchg
int3
loope
out
fcmovu
dec
sahf
push
dec
and
pop
mov
xchg
xor
loop
mov
push
jae
inc
lods
xchg
mov
ret
sbb
test
inc
adc
les
xchg
push
out
pop
loop
xchg
inc
in
pop
mov
push
inc
test
idivl
mov
adc
mov
imul
rol
and
sti
push
push
sarl
fs
dec
dec
call
iret
hlt
rcrb
push
iret
or
push
sbb
lahf
loopne
out
cmp
dec
ret
out
inc
cli
shll
mov
xor
loop
fmull
mov
ljmp
fwait
sti
add
adc
stos
mov
imul
jg
ljmp
rolb
xchg
mov
pushf
mov
mov
lahf
int3
in
jnp
and
ret
int
or
mov
rorb
mov
mov
icebp
mov
stos
lods
mov
add
inc
jb
dec
dec
iret
popf
push
out
sub
aaa
cmc
sbb
add
fildll
mov
xorb
int3
or
mov
out
inc
or
pop
les
push
mov
mov
je
ror
adc
sbb
add
mov
xchg
xlat
dec
repnz
adc
xchg
cmp
hlt
xor
out
imul
mov
sbb
jns
dec
or
movsb
std
push
inc
movsl
push
pop
sbb
dec
bound
testl
sbb
push
sub
insb
inc
mov
jg
jns
adc
jns
es
shlb
ja
xchg
xchg
movsl
and
cs
addr16
shlb
dec
add
and
iret
sub
xor
xlat
enter
ret
inc
or
je
mov
out
loope
and
adc
sub
mov
lsl
rcl
test
lods
add
ljmp
jle
push
addr16
jmp
mov
jge
ret
jne
fdivr
inc
scas
xlat
cmp
pop
rcrl
sahf
dec
adc
sub
aaa
sbb
xlat
es
iret
jb
lret
mov
pop
jne
sub
fdivs
inc
mov
pop
jb
sub
xor
stos
js
fistps
cli
add
outsl
mov
int3
dec
pop
repnz
repz
je
dec
mov
jle
call
nop
jmp
lods
and
fst
mov
cld
pop
imul
pop
xchg
inc
cltd
add
cmc
jmp
push
pop
out
or
pop
pop
les
in
incb
cmpsb
data16
repz
testb
fcoms
add
insb
jp
pop
adc
sub
xchg
dec
jge
mov
fcoml
mov
call
xchg
fldenv
sbb
xor
mov
dec
or
mov
loopne
mov
pop
je
outsb
mov
sbb
std
js
stc
push
inc
jl
outsl
cmp
xor
std
cmp
divl
dec
sarl
ret
gs
inc
repz
daa
lret
popa
popa
and
jo
jnp
aas
arpl
and
ja
pop
xor
push
jge
out
sbb
sarb
aad
pop
je
nop
arpl
sti
xchg
sti
scas
shlb
mov
ret
cmp
pop
xor
packuswb
test
adc
cmp
pop
movsb
fisubs
lds
mov
push
mov
inc
bound
jns
test
inc
mov
jmp
adc
sub
clc
int
push
xor
push
mov
dec
jle
loop
sbb
pushf
cs
lahf
adc
xor
bound
jp
adc
in
lds
out
mov
inc
jb
sbb
lock
xchg
repz
ror
sub
sbb
popf
mov
movsb
inc
dec
mov
iret
mov
ss
cmc
leave
jns
mov
std
and
xchg
jecxz
in
mov
cmp
int3
xor
stos
stc
and
loopne
mov
scas
test
imul
push
mov
loope
mov
in
or
popa
jae
pop
add
jne
xchg
lods
test
mov
inc
xlat
es
mov
cld
dec
ret
sti
daa
inc
inc
xor
push
into
push
jle
out
imul
or
adc
adc
std
dec
sbb
loope
loop
sbb
inc
aaa
lds
push
xchg
mov
cmp
out
mov
jmp
and
mov
sub
mov
fcoml
or
mov
adc
jne
out
in
or
inc
inc
jno
int
mov
push
dec
sahf
fs
push
dec
xchg
inc
out
in
sub
mov
mov
add
test
sub
inc
pop
inc
lock
cld
icebp
xor
stos
ret
lcall
adcb
sub
out
adc
popa
adc
scas
sub
loop
and
cld
inc
jno
imul
add
cmpsl
rcrb
loopne
jmp
dec
or
cmp
push
and
fsubr
jmp
insl
adc
cmpsl
dec
or
pop
inc
fisubl
movsl
cmp
sbb
fmuls
jno
mov
mov
xchg
icebp
test
in
repnz
jmp
sbb
stc
outsb
pop
xorl
subb
aad
outsl
or
loop
pop
mov
lock
test
cmc
pop
addb
jae
dec
add
jge
push
mov
lcall
or
mov
mov
jmp
sbb
sti
inc
inc
jbe
ljmp
aad
cmp
cs
sub
jno
ret
out
jp
inc
jnp
jns
push
movb
or
xchg
xor
sarb
inc
and
add
mov
shll
jb
jmp
inc
xor
test
adc
xor
lods
add
mov
andl
mov
inc
push
hlt
into
mov
mov
sub
sbb
inc
add
mov
cli
push
repz
test
in
xchg
inc
mov
adc
inc
imul
lret
inc
dec
inc
jl
jae
sub
sub
pop
mov
and
push
cwtl
mov
mov
cmc
xlat
repnz
jp
jnp
mov
repnz
inc
jle
scas
xor
cwtl
mov
cmp
or
movsl
leave
lret
or
aas
cmpsl
xor
dec
jae
out
or
push
mov
xor
data16
out
add
push
and
inc
cmc
outsb
sub
pop
mov
add
icebp
add
outsb
ret
sbb
or
stos
mov
fadds
or
jo
lea
and
mov
jne
and
in
decl
jg
es
imul
loope
nop
xchg
inc
shrl
fsubrl
rep
xchg
push
clc
repnz
jge
or
aaa
cmpsl
ljmp
mov
enter
cli
push
cmp
dec
dec
popf
mov
fs
mov
arpl
jmp
pop
mov
nop
inc
fwait
xchg
jne
adc
enter
lods
inc
sti
cmc
cmc
lahf
dec
scas
cmp
das
insb
fdivs
add
mov
xchg
pusha
cmp
push
sahf
sub
test
inc
lods
xor
fildl
ds
and
rorl
test
dec
sti
decl
push
jmp
into
pop
jb
mov
out
cmp
adc
test
jge
jge
add
addb
hlt
subl
icebp
push
test
out
movsl
pop
sarl
popf
out
push
stos
and
std
hlt
or
movsl
sbb
int3
push
and
cltd
push
cmpb
loope
push
inc
and
inc
ret
push
addb
repz
xchg
fbld
adc
inc
mov
and
into
and
mov
or
aas
or
push
loop
pop
shr
das
jae
cmpl
mov
lcall
flds
pop
mov
jp
sub
jo
mov
mov
push
repz
test
test
in
mov
dec
fwait
sbb
ds
stc
icebp
mov
xchg
fwait
gs
inc
arpl
aas
popa
adc
repnz
stos
clc
les
sub
jge
ja
sub
shrb
dec
incb
push
pop
addl
or
inc
ja
xor
add
or
adc
sbb
pop
cltd
movsl
data16
fbld
mov
das
inc
mull
ret
mov
fwait
mov
loop
test
xchg
imul
js
data16
or
dec
and
ss
movsl
sub
std
data16
test
ret
push
mov
sub
inc
stos
dec
mov
xchg
clc
xchg
jnp
sti
insb
or
nop
cmp
out
and
andl
test
in
enter
sub
dec
dec
mov
mov
lret
push
clc
dec
adc
adc
dec
pop
cld
sub
in
outsb
cmpsl
lea
popl
or
lret
push
cmp
adc
ss
out
movsb
insl
xchg
test
and
ss
push
orb
pusha
out
cmpb
lcall
ljmp
loope
cmc
cmp
es
fbstp
jl
inc
lods
popf
cmp
pop
push
arpl
adc
push
adc
mov
adc
fsubrl
push
mov
pop
push
fld
sbb
or
fbstp
in
push
or
dec
hlt
scas
or
test
hlt
and
xor
sti
scas
mov
adc
scas
push
popl
cmp
les
cmp
lahf
movsb
mov
cmp
inc
call
cmp
ret
in
mov
call
pop
inc
mov
xor
xchg
sbb
popa
mov
jecxz
sahf
rorl
cmp
jmp
repnz
hlt
mov
add
icebp
and
sub
inc
lahf
leave
xor
fiadds
sub
push
jl
jae
adc
in
popa
adc
pop
xchg
dec
push
inc
sub
ss
pop
inc
jecxz
loop
mov
rclb
adcl
sub
daa
or
push
mov
cwtl
into
aaa
shrb
daa
pusha
faddl
and
jle
dec
mov
mov
xor
rcll
inc
push
push
in
and
rcrb
push
int
cmp
loope
and
jge
hlt
mov
movsb
fidivl
shll
sbb
xchg
sti
xlat
mov
mov
movsl
stos
xor
test
add
test
push
popa
icebp
or
cmpsl
cmp
dec
cli
loope
or
int
shld
xorl
icebp
cmp
push
cltd
lods
xchg
daa
adcb
cltd
gs
int3
shlb
mov
lcall
cwtl
cmp
lea
adc
pop
adc
xchg
rolb
lods
adc
int
mov
scas
mov
test
dec
and
mov
xchg
nop
dec
out
divl
sti
pop
inc
sbb
ret
mov
std
frstor
loopne
jae
inc
stos
xor
and
subb
cwtl
xchg
pushf
inc
out
std
jg
jp
ja
bound
sahf
out
sub
sub
mov
in
cwtl
mov
ds
bound
dec
lods
sbb
roll
mov
sbb
jne
fbld
sbb
cld
fsub
enter
sub
xchg
push
inc
test
jb
fisttpll
iret
mov
mov
pop
flds
jp
in
mov
mov
sbb
xchg
jge
jmp
inc
stos
pop
inc
or
cwtl
pusha
pop
xor
ja
mov
cmp
and
ds
pop
mov
daa
js
adc
or
add
ror
xor
sahf
push
popf
inc
pop
adc
mov
adc
mov
mov
mov
mov
sbb
sub
mov
sbb
xchg
jmp
int
push
xor
sarl
jb
lods
jl
pop
mov
add
cli
js
rcrb
fwait
popa
push
lret
jo
aas
sti
divl
jo
sub
cmpsb
je
jnp
lahf
hlt
and
adc
mov
loope
or
das
sub
fwait
inc
fs
pop
sbbl
jo
je
pop
and
sbb
jmp
fsubs
xchg
jae
dec
dec
add
xchg
mov
test
adc
xchg
repz
xchg
popa
jnp
lea
mov
xchg
push
mov
mov
and
jne
sti
and
rol
loop
add
outsb
xor
jno
ds
test
mov
or
cwtl
push
cmp
call
orb
add
fdiv
mov
jl
aad
call
add
xchg
rclb
pop
push
fbld
int
xor
xor
pop
out
mov
and
cld
les
or
scas
fadd
rcr
ss
push
jmp
mov
out
cmp
out
lret
cmp
jg
jp
pextrw
jo
push
cmp
imul
push
pop
sub
add
adc
mov
icebp
add
stos
pop
ss
add
xor
jae
pop
mov
lods
dec
dec
repnz
xor
inc
or
mov
inc
bound
mov
lcall
jl
jae
dec
das
mov
stos
out
jo
ret
movb
sub
mov
cmpsl
sub
ss
addr16
lock
push
scas
call
cs
nop
xchg
mov
mov
jl
js
and
adc
lcall
lods
imul
aam
das
shrb
test
out
pop
jne
pop
pop
and
jne
xor
add
xor
mov
push
ffree
fucomip
push
cli
mov
popf
loope
hlt
jae
xchg
std
mov
xchg
cmpsl
mov
adc
add
ret
push
mov
push
xchg
lods
dec
dec
xor
fdivs
pop
or
sbb
sbb
mov
je
and
std
js
test
test
flds
movsb
xchg
inc
aam
stos
lock
xchg
sbb
xor
inc
loopne
pop
repnz
test
lods
pop
and
sbb
test
or
pop
aaa
mov
repz
sub
push
fmul
cmp
mov
pop
outsl
sbb
inc
sahf
stc
mov
cmc
lds
ljmp
clc
inc
mov
and
xor
mov
mov
cmc
in
mov
mov
xchg
nop
into
or
xor
popa
ret
fisubrs
xor
jmp
sbb
es
fiadds
jnp
jo
pushf
mov
daa
xor
xchg
inc
jno
cmp
test
dec
nop
mov
andl
inc
pop
adc
icebp
pop
aaa
out
and
fidivs
mov
xor
adc
sub
jmp
add
pop
dec
aam
stos
jp
jns
mov
and
repnz
dec
xadd
xchg
jo
inc
icebp
jno
push
sti
push
pop
sbb
insl
popl
jge
cmp
shlb
popa
adc
or
lcall
mov
imul
push
add
jnp
test
and
sub
scas
je
iret
out
sarb
mov
adc
fwait
outsl
sbb
mov
lods
in
test
dec
in
out
clc
mov
rolb
ret
push
fstps
and
mov
mov
cmp
and
xlat
iret
mov
loope
nop
test
add
xor
fdivrs
rcrl
xor
dec
sahf
pop
cmpsb
sbb
fists
repz
je
enter
sahf
cmp
subl
cmp
cltd
ret
xor
imul
jnp
sbb
xchg
jne
scas
adc
lods
cmpsl
mov
pushf
rclb
mov
dec
or
adc
fiaddl
dec
or
push
stos
jp
jge
adc
inc
xchg
xchg
js,pt
pop
outsl
cmovg
ret
dec
jno
xchg
fimuls
dec
sbb
filds
out
mov
pop
in
jbe
mov
aad
lods
dec
mov
pop
lcall
sbb
sub
aam
sbb
dec
test
inc
xor
jns
cmpsb
push
mov
mov
pop
imul
stos
loopne
adc
aad
or
xor
cmp
icebp
jae
inc
push
adc
sbb
xchg
or
lock
cmp
or
shll
mov
movsl
clc
dec
pop
dec
fcmovnbe
and
outsb
jecxz
xchg
fidivs
lret
sbb
jle
int3
loopne
popl
mov
cmp
ja
adc
and
lock
movsl
clc
subl
sbb
fcoml
adc
sbb
call
cltd
or
cltd
cmp
addr16
mov
stos
adc
add
addr16
stc
loope
rclb
cli
bound
repnz
jle
jnp
jmp
xchg
pop
pop
pop
and
inc
nop
xor
cs
mov
jp
imul
je
dec
repnz
jns
pusha
and
dec
lock
mov
insb
jne
sbb
flds
cmp
fisubs
arpl
fnstsw
inc
mov
cmpsl
sub
test
int3
loop
clc
lret
fildl
in
xor
lret
jae
test
sub
or
jge
pop
mov
leave
and
fstpl
sar
scas
sbb
test
pop
adc
movsl
loop
inc
xchg
mov
lahf
pushf
stc
call
icebp
lret
fsubr
pop
icebp
add
or
xchg
fisubrs
and
xor
jno
jne
clc
es
ficomps
mov
cmp
mov
jnp
fld
pusha
insb
rorb
xchg
fs
add
mov
or
lahf
nop
sarl
out
jl
neg
fisttps
sbb
dec
stc
int3
jae
mov
mov
in
mov
dec
movsb
cmpsb
sub
mov
or
mov
sbb
in
xor
mov
das
xor
and
std
scas
pop
lods
mov
inc
je
out
add
mov
mov
test
stc
add
push
inc
xchg
cmp
aam
push
std
dec
and
mov
xchg
int
jp
dec
push
imul
ret
scas
test
dec
test
pop
sarb
xacquire
jo
ja
imul
xchg
imul
data16
dec
jo
push
cmp
int3
filds
jno
xor
sub
or
jg
mov
inc
jae
push
mov
ret
cltd
ja
add
adc
arpl
in
push
imul
add
sbb
xchg
sbb
ljmp
je
xchg
push
dec
cmpb
xchg
sub
push
das
loop
jmp
orl
mov
mov
cmp
dec
mov
iret
ds
ret
fimull
mov
or
cmpsl
dec
cmp
dec
in
fadd
sbb
inc
or
insb
sbb
int
mov
pop
ss
popa
pop
inc
jnp
subb
jecxz
push
into
mov
lds
leave
mov
fisubrs
xor
data16
mov
mov
cmc
xchg
cmp
mov
daa
stos
daa
pusha
mov
in
inc
or
cltd
in
adc
leave
jb
mov
test
andl
push
ss
rcrb
out
inc
icebp
fnstsw
dec
fmull
xchg
push
mov
inc
fdivrs
add
jno
inc
outsl
js
cmp
xchg
mov
push
and
dec
sbb
cltd
sbb
fcoms
dec
xchg
add
sub
or
add
mov
pmaddwd
int3
jmp
jnp
mov
repz
stos
in
fwait
aas
xchg
popf
fld
jnp
adc
xchg
je
sbb
jle
std
gs
inc
push
push
mov
icebp
jnp
jle
inc
push
add
lods
setae
and
jg
in
inc
adcb
in
sub
cwtl
popa
daa
jo
sbb
cltd
push
jecxz
lods
sbb
popf
adc
pop
gs
cmc
mov
pop
dec
ss
mov
insl
sub
push
push
fdivl
inc
jns
xor
test
mull
in
jnp
push
adc
fnstsw
das
cmpsl
ja
sti
mov
dec
mov
push
add
popa
inc
dec
or
dec
push
mov
dec
or
popf
push
sbb
pop
mov
stc
cli
push
jge
pop
mov
popa
inc
inc
dec
es
sub
insb
jne
push
scas
mov
test
lods
hlt
insb
mov
push
inc
sti
mov
cwtl
sbb
incl
jge
in
jp
lock
sub
add
adc
sub
jg
lcall
xchg
cmp
les
ljmp
push
insl
ljmp
daa
scas
push
xchg
sbb
push
mov
test
add
xchg
pop
subb
mov
bound
mov
lods
les
fstpt
cmpsl
mov
cmpsl
inc
add
jl
push
test
push
inc
popa
sbb
xor
lods
sahf
xor
xchg
iret
outsl
lret
xchg
mov
adc
jg
mov
xor
xchg
jo
adc
jnp
sbb
pop
imul
push
outsb
or
push
add
sub
mov
mov
inc
testb
mov
push
jmp
addr16
inc
mov
leave
inc
leave
cmc
repnz
add
aam
dec
or
enter
std
scas
lret
push
cmp
dec
mov
or
and
ss
sub
inc
jmp
cmp
jb
mov
loope
outsb
andl
hlt
incl
in
pop
cmp
test
loope
add
mov
fwait
dec
mov
stc
push
scas
mov
clc
nop
push
push
les
pop
jne
arpl
mov
mov
add
inc
or
call
dec
lds
xchg
and
comiss
stos
mov
pop
rcl
mov
negb
stc
lock
mov
ror
inc
xor
scas
sub
and
xchg
sbb
mov
mov
jns
sahf
sbb
rcrb
rcll
mov
and
mov
lods
or
jne
mov
daa
andb
pusha
inc
inc
cmp
adc
not
repnz
lods
inc
mov
mov
sahf
adc
jnp
shll
aaa
jmp
dec
lret
movsl
divl
add
xchg
pop
jge
inc
das
fisttps
mov
fistl
push
cltd
mov
mov
and
inc
or
jb
mov
jmp
sbb
arpl
ss
or
in
add
cmpsb
adc
ljmp
mov
lods
jge
outsb
ljmp
mov
cmp
sbbl
mov
popf
in
jbe
jb
lret
mov
push
mov
cs
leave
loopne
ss
inc
xor
jge
sub
inc
push
inc
cmp
inc
movsb
sbb
lret
and
xor
stos
lods
fistpll
dec
outsb
test
push
mov
jae
inc
mov
gs
mov
dec
mov
dec
daa
js
test
mov
lock
push
gs
rolb
js
lock
mov
repz
cmp
add
test
pop
dec
xchg
int
xor
das
dec
jmp
repnz
cmp
adc
imul
dec
pop
mov
aam
neg
sub
cs
rolb
dec
sarb
lea
xorl
insb
jl
divl
push
add
rclb
adc
mov
rcll
in
enter
rolb
xor
les
stc
mov
adc
testb
dec
adc
dec
daa
and
inc
repz
cld
iret
or
fcmovu
or
add
sbb
lock
push
ret
out
ljmp
out
fldenv
popl
xchg
lea
sahf
pop
inc
lods
test
mov
les
push
mov
inc
jno
in
test
mov
push
sbb
insb
and
xchg
cs
rolb
inc
mov
insb
in
sbb
in
mov
or
loope
push
aam
jecxz
outsb
fs
bound
in
outsl
icebp
mov
outsb
out
roll
sbb
mov
or
rorb
mov
stos
mov
xor
mov
or
es
add
sti
mov
popa
aam
push
into
pushf
sahf
lods
and
sub
xchg
fdivrl
movsl
sbb
subl
jnp
or
addr16
dec
leave
mov
mov
fwait
jns
xchg
stos
js
cmpsl
pop
in
xor
and
pop
imul
push
test
mov
ss
je
xchg
scas
dec
mov
and
xlat
add
or
sti
loopne
mov
lock
and
loop
mov
aaa
fildl
mov
movsl
xchg
adc
pusha
mov
lock
dec
jp
sbb
sub
adc
dec
xchg
mov
sti
or
rcrb
push
cltd
fsubrs
xlat
cltd
cmp
mov
adc
fists
addr16
lret
dec
pop
bound
cli
and
lock
and
jns
arpl
and
test
and
cmpsb
xorb
jecxz
push
jne
mov
mov
sbb
ja
push
stc
inc
data16
and
mull
mov
into
insb
andl
xchg
push
pop
clc
out
sbb
add
cmc
movsb
lods
cmp
xchg
inc
push
into
or
filds
mov
test
cmp
sbb
mov
out
and
lret
xchg
aad
mov
push
mov
stc
insl
inc
inc
ret
mov
pop
movb
inc
xor
movsb
sub
adc
jae
add
fistpll
push
out
pop
outsb
xor
cli
addr16
icebp
call
lods
jne
cld
rcll
decb
in
into
sti
test
loop
jno
xchg
ja
lcall
push
add
popf
adc
xchg
xchg
xor
fadd
cs
lcall
addr16
js
add
subl
dec
call
jae
sbb
in
mov
and
movsl
sbb
and
fistpl
ljmp
dec
add
ret
sub
movsl
jmp
or
xchg
frstor
and
repnz
cltd
push
das
and
das
fs
push
inc
mov
pop
jbe
mov
jle
jb
das
mov
loopne
jl
shl
stc
movsb
aad
aad
mov
xlat
scas
lea
xchg
pop
jae
cmpsb
pop
paddd
sahf
xchg
pop
icebp
inc
cmp
gs
lea
push
xchg
pop
shlb
adc
dec
cli
mov
mov
dec
mov
push
movzwl
inc
or
push
cmp
stos
pop
cmp
ss
pop
sbb
lret
jmp
fdivrl
js
and
jo
ds
sub
or
test
outsl
cs
push
sbbl
pop
cmp
in
and
jns
sbbl
mov
sar
faddl
cmp
popf
adc
pushf
mov
sbb
bound
xchg
jle
cwtl
je
cli
stc
data16
testb
jecxz
jo
push
insb
clc
mov
stos
sub
mov
incb
xorb
pusha
scas
orl
xchg
adc
mov
dec
lock
or
stos
push
or
imul
jmp
push
pop
outsb
pop
call
das
pop
push
xchg
pop
push
adc
jg
inc
jp
jnp
jno
cli
lcall
shll
jae
ficoml
or
pop
jbe
xchg
scas
mov
repz
sahf
lock
jle
rclb
jbe
jmp
push
mov
jmp
movsl
dec
jl
pop
out
ret
or
cmp
imul
and
sub
mov
mov
lods
jno
add
arpl
mov
scas
movl
data16
pop
or
out
mov
das
inc
sbb
sub
movsb
nop
add
xor
stos
cmp
push
dec
mov
ret
cmp
jne
insl
negl
dec
mov
sbb
jo
pop
xchg
dec
cmpsb
adc
mov
test
leave
mov
call
mov
dec
dec
cltd
xor
lea
loope
sub
mov
das
js
pcmpeqw
mov
mov
xor
mov
sub
call
push
xchg
dec
inc
add
ljmp
leave
stos
sbb
jmp
push
rcr
mov
loope
and
jg
inc
xor
dec
jl
mov
inc
fbstp
jns
imul
shll
outsb
daa
pop
ret
sbb
rcll
popf
imul
jg
mov
fisubs
pop
cmp
sub
je
jo
adc
fnstcw
mov
dec
rol
xor
cmpsl
inc
mov
les
scas
mov
inc
cmp
divb
or
pushf
in
push
fnstenv
hlt
jmp
push
add
adc
ja
jl
jp
negb
adc
push
das
mov
sbb
fnstcw
or
loope
add
lret
fadds
sbb
out
xchg
xor
push
les
sbb
pop
cwtl
test
jle
mov
dec
ja
and
add
jns
outsl
daa
adc
adc
xor
xchg
xchg
pop
movsb
fmul
nop
add
scas
lock
loop
add
addl
xchg
dec
xorl
push
dec
nop
pop
fiaddl
lret
mov
push
push
xchg
lock
or
pop
push
dec
mov
lea
cmpsb
mov
or
ljmp
mov
cmpsl
sub
sbb
iret
xchg
stos
mov
scas
jge
les
mov
inc
add
sbb
imul
sahf
pop
es
ret
cmp
stc
dec
sbb
add
adc
jl
insl
xchg
push
pop
pop
mov
mov
inc
pop
addb
adc
sbb
dec
sbb
and
pandn
cwtl
and
jmp
add
inc
jmp
mov
rclb
push
subl
add
mov
dec
call
push
stc
or
dec
movb
lea
dec
sub
rcrb
xor
xchg
loope
xacquire
mov
push
inc
sbb
std
faddl
sbb
enter
aad
mov
ljmp
inc
loopne
adc
imul
pop
fdivs
cmc
and
mov
sti
imul
mov
loop
cld
push
jae
imul
arpl
out
inc
int3
pusha
cmp
scas
pop
push
push
and
movsl
push
and
shll
jecxz
test
adc
mov
jno
mov
xor
cmc
or
cmc
addb
or
outsb
lahf
pop
cmpsl
das
dec
push
push
xchg
mov
subl
jecxz
imul
mov
cmp
dec
lret
xor
sub
or
mov
ror
addb
imul
xchg
push
sbb
push
shll
rolb
iret
sahf
ret
push
fistps
sbb
sub
or
pop
mov
repnz
ja
fwait
pop
fistpl
scas
daa
or
adc
insb
or
out
jnp
ds
jecxz
repz
sub
pop
in
push
icebp
xor
jae
add
je
cmp
add
or
addr16
dec
enter
mov
mov
push
inc
aam
loop
mov
not
jbe
into
or
sbb
pushf
push
sbb
jnp
inc
cmovge
into
jp
in
mov
sub
add
pop
pop
xlat
push
aas
sub
push
fadd
jnp
shrb
or
cmp
jb
imul
ss
lret
adc
lcall
jno
lcall
cld
fstpl
jno
jns
xchg
mov
mov
xchg
jne
lahf
xor
adc
push
xchg
in
cmp
mov
roll
outsb
dec
jne
iret
outsb
inc
cmpsb
sarl
push
mov
das
jno
aaa
outsb
shll
sbb
ds
lcall
mov
xorl
enter
aad
lds
cmp
jg
add
mov
bound
inc
lods
in
mov
jb
in
xchg
inc
popa
inc
mov
xchg
xchg
insl
mov
push
andl
mull
rcll
testl
cmpsl
in
or
push
xchg
adc
jno
push
cld
jns
sub
cmpb
idiv
sub
mov
mov
xchg
inc
incl
cltd
add
es
mov
negb
in
ret
pop
fsubs
push
add
sar
push
rcll
push
pop
jnp
addl
mov
out
scas
iret
jno
and
sarb
sarl
sbb
pop
or
nop
or
test
cmp
lret
movsl
lcall
add
sub
fildl
add
inc
jns
shll
add
icebp
push
arpl
iret
fisttpll
jmp
jecxz
js
fsubs
fcomi
and
fcomip
fists
into
cld
adc
ljmp
rcll
lret
xor
dec
pop
xchg
loope
mov
xor
repnz
sbb
pop
inc
imul
test
shr
or
adc
jbe
mov
sti
shll
xchg
sbb
mov
jle
pop
out
mov
mov
push
scas
rol
mov
jp
or
push
sub
inc
in
xchg
inc
xlat
stc
mov
mov
sti
jg
test
xadd
sahf
push
mov
mov
fmull
shll
xor
sub
in
mov
mov
add
xor
add
add
mov
sbb
aad
pop
scas
pushf
mov
xor
test
push
dec
call
loope
sbb
mov
and
inc
aas
aas
ficomps
call
mov
push
movsl
mov
lret
cmp
mov
fstl
leave
fwait
sahf
adc
cmp
inc
fwait
mov
js
xorl
jo
jns
xchg
pop
out
sub
jl
fiadds
push
pop
add
jg
cs
lret
push
sbbl
xchg
ljmp
shrw
mov
adc
push
iret
xchg
inc
push
inc
les
decl
fwait
mov
out
mov
fs
pop
std
fxch
xor
xor
lods
cmp
lret
lahf
cld
enter
mov
out
cmp
into
push
and
pop
lret
mov
jg
repnz
jo
addl
sub
mov
in
cmp
adc
lahf
adc
daa
mov
push
and
cmp
pushf
or
or
push
pusha
inc
movsl
iret
adc
xchg
mov
xchg
jne
stc
and
mov
push
rorb
sti
cmpsb
nop
in
mov
into
adc
popf
cmp
inc
mov
ss
das
lret
mov
push
inc
mov
ja
mov
sbb
fiadds
adc
ljmpw
inc
push
pop
xchg
xchg
adc
ror
call
insl
push
inc
push
cmc
pop
int3
movsl
insl
jg
mov
xchg
fdivrs
dec
jne
or
mov
push
rcrl
push
pop
aas
lock
es
jnp
mov
lds
jns
adc
inc
inc
shlb
fadds
and
add
mov
add
cld
ficompl
sbbl
rcll
jne
jl
ljmp
jecxz
imull
mov
add
or
push
add
xchg
sar
mov
jb
clc
xchg
fcmovb
outsl
add
imul
push
mov
inc
cmp
data16
es
test
mov
scas
out
sbb
popf
inc
ds
ja
mov
or
scas
ret
nop
std
lret
jb
mov
or
mov
sbb
xchg
fmulp
mov
mov
mov
mov
ljmp
fs
dec
push
cwtl
push
pop
inc
negb
cmpsb
popf
das
pop
mov
pop
cltd
in
xor
xor
lret
add
jge
mov
sub
scas
xor
adc
push
sub
inc
xor
lret
repz
push
arpl
sbb
pop
sub
loop
std
inc
mov
enter
jle
sahf
setne
shr
loope
jb
leave
mov
inc
lds
dec
xor
fsts
xor
jae
ds
cmp
pop
and
and
push
dec
mov
mov
arpl
mov
cld
repnz
into
inc
mov
push
xchg
sbb
aaa
mov
mov
les
inc
arpl
notb
pop
sbb
mov
das
pusha
inc
lock
inc
push
add
inc
mov
dec
rcll
scas
shrl
mov
mov
loop
dec
shrl
push
cltd
or
pop
data16
mov
adc
and
cmp
pop
rcr
mov
mov
cmp
cmc
xor
int3
sti
shl
jp
out
stc
or
popf
pop
je
fimuls
testb
fwait
push
dec
push
iret
inc
xor
ljmp
ret
je
js
and
pop
dec
cmpb
stc
insl
pop
cmp
xor
pop
out
mov
sbb
add
xchg
xlat
add
call
les
insb
and
mov
xlat
push
sbb
pop
pop
ret
jmp
mov
dec
in
mov
mov
mov
adc
mov
es
inc
and
stos
cli
sarl
mov
mov
push
sbb
push
xor
shl
das
cmp
add
mov
mov
aad
fisubrl
sbb
dec
ficoms
bound
inc
arpl
pop
daa
jg
out
xchg
inc
inc
or
pop
std
mov
stos
and
cld
frstor
popa
mov
dec
cmpl
popf
fsubr
jns
mov
xchg
xchg
lea
jns
and
pop
js
cmp
scas
mov
xor
pop
xor
mov
inc
dec
inc
jp
cmpsl
adc
js
sbb
pop
mov
aas
sbb
inc
mov
ret
or
lods
movsb
daa
cwtl
out
jb
int3
bound
lcall
subb
push
icebp
stos
pop
jb
xchg
pop
pop
jno
fdiv
jae
sbb
jg
sbb
fs
sub
daa
leave
cmp
xchg
jne
imul
or
cmp
movsl
nop
dec
icebp
xlat
jnp
push
outsl
mov
dec
mov
call
xchg
popf
std
dec
int
adc
repz
jg
add
mov
pop
xchg
pop
xchg
fmul
sbb
fidivs
in
push
fs
cmc
or
clc
movsl
stos
sbb
mov
in
mov
das
fs
nop
mov
cmp
sbb
jg
xchg
jmp
aas
daa
shll
arpl
sub
mov
or
xchg
lea
adc
push
jne
lods
aas
mov
setg
mov
loope
lahf
aad
icebp
cmc
imul
decb
std
push
sahf
les
jno
cmp
enter
adc
cmpsb
mov
rclb
xchg
push
or
dec
cld
sub
xlat
add
push
mov
pop
sahf
divl
rol
xchg
or
inc
mov
orb
sti
or
fs
negl
xchg
in
mov
iret
je
sbb
inc
adc
pop
or
pusha
scas
push
fidivrl
das
fstps
mov
rorl
ja
jnp
je
and
hlt
jmp
xor
stc
pop
adc
cmp
dec
ror
movsl
add
jecxz
inc
sub
inc
aas
mov
cmpsb
sar
out
fsubl
dec
mov
and
sub
jo
ljmp
mov
and
sti
xchg
dec
rcrb
mov
xor
cltd
mov
ljmp
inc
pop
dec
lea
shl
xchg
fsubrs
mov
mov
push
push
lret
sarb
add
lret
sbb
fstl
xor
enter
jge
pusha
ds
push
xchg
jle
xchg
icebp
xchg
repz
out
cs
mov
outsb
xor
out
push
std
jg
pop
sub
into
mov
insb
jp
inc
jecxz
inc
xor
push
sub
out
jns
das
addr16
lods
mov
jp
adc
cmc
sub
ror
cmpb
outsb
cwtl
out
jmp
adc
mov
xchg
out
mov
cmp
daa
mov
mulb
sub
movsl
pop
jb
int
fxch
lret
rolb
loopne
mov
fwait
movsl
sub
les
movsb
scas
fs
sbb
lea
xor
pop
in
cmp
dec
pop
in
inc
fucom
xchg
test
aam
rcrl
cli
test
push
movsl
sub
adc
and
nop
dec
xchg
test
jp
sub
jp
or
xchg
cmpsb
rcrb
mov
outsb
mov
add
xchg
bound
sbb
data16
push
testb
cmp
in
dec
sbb
int3
mov
das
movsb
mov
in
adc
ds
orb
inc
xchg
xchg
dec
fs
je
out
sti
decl
je
xor
lock
or
xchg
jp
aas
adc
jge
hlt
xor
jbe
pop
stos
dec
mov
adc
mov
clc
adc
test
fwait
testb
jp
sub
test
fsubs
aas
or
test
push
sub
lret
test
mov
xchg
xchg
push
push
movsl
in
clc
insb
cwtl
int
pop
push
pop
hlt
nop
inc
leave
push
push
xchg
dec
xorb
loope
mov
cmp
stos
pop
scas
es
mov
leave
dec
aas
bound
mov
jbe
inc
rcr
movsb
aas
stos
pop
lahf
and
data16
dec
fcomp
sbb
rolb
movsl
lahf
loop
pop
or
aas
add
lock
ja
test
sub
popa
dec
jge
cltd
push
lds
push
xchg
jge
add
icebp
fwait
cltd
jns
pushl
lret
sub
sbb
pop
ds
jl
loop
inc
cmp
sahf
fsubs
and
repnz
orl
jbe
mov
cmc
shll
cmp
jns
xor
outsb
pop
sbb
fdivrl
xlat
in
sbb
testl
mov
inc
pop
jmp
cmp
mov
shll
sbb
push
pop
ja
imul
loope
imul
mov
push
or
xchg
cmp
adcb
idivb
cli
or
daa
mov
into
bound
ds
cli
fidivs
or
jp
and
adc
fstps
shll
cs
scas
fiaddl
and
jne
out
jno
bound
inc
jg
jno
mov
fldt
jl
xor
cmp
aam
sbb
jb
fimull
and
nop
or
xor
cld
jp
outsl
outsl
sbb
cmpsl
iret
sbb
jg
outsb
iret
dec
rol
lock
in
in
out
pop
mov
push
sub
pop
test
push
fwait
stos
pop
inc
push
inc
lds
lea
mov
jne
or
js
pmulhuw
out
nop
out
sbb
dec
bound
jmp
repnz
aam
repnz
andb
xchg
addr16
jg
pop
xor
dec
push
add
xor
xchg
int
aad
dec
sahf
or
ss
lock
leave
stc
inc
test
add
jg
jns
fstpt
pop
mov
push
cmp
subb
jp
ret
outsb
mov
pop
repz
and
sub
daa
jbe
and
xchg
jb
mov
dec
js
add
imul
jno
cli
xor
push
hlt
adc
lret
rcr
out
lahf
imul
icebp
xorb
xor
adc
out
add
mov
fildl
xor
hlt
test
or
les
add
and
nop
sub
pop
je
test
dec
not
lret
xor
shlb
outsl
cmp
mov
inc
or
cmc
loopne
fisubrs
xorb
inc
stos
lret
jle
sub
cmpsl
loopne
sbb
pop
jle
lock
shrb
jno
xor
pusha
or
pop
push
mov
sbb
lcall
pop
push
loop
test
arpl
xor
mov
adc
add
int
mov
aas
insl
ja
dec
leave
in
les
aaa
dec
inc
xor
fwait
cli
sub
enter
out
add
xchg
decb
lock
js
test
sub
fstps
mov
adc
dec
mov
jns
xchg
mov
ficompl
cmp
pop
inc
dec
leave
push
adcb
aas
into
xor
das
lret
cmpsl
sub
add
xchg
jecxz
pop
mov
cltd
or
jl
mov
adc
cmp
add
popf
jmp
mov
or
pop
mov
push
pop
ja
jg
aaa
jle
lret
icebp
xor
cs
mov
and
mov
push
rolb
icebp
mov
enter
fs
inc
push
xchg
gs
cmp
mull
ja
in
movsb
gs
sbb
dec
mov
or
sbb
or
outsb
mulb
fistpll
sbb
cmp
xchg
mov
outsb
push
jne
iret
test
jge
push
add
dec
nop
mov
mov
imulb
sub
mov
dec
fcmovne
push
aam
ss
fstps
pop
push
loopne
hlt
push
insl
lret
and
scas
fstps
push
dec
js
mov
fadds
xor
cmp
out
pop
popaw
adc
dec
mov
loopne
pop
test
xchg
adc
cwtl
xbegin
inc
mov
scas
or
jo
or
je
jmp
out
push
xlat
divl
cmpsl
clc
dec
jnp
call
ljmp
lahf
ret
retw
cmc
mov
fwait
popa
rol
popf
leave
and
and
mov
jno
inc
push
mov
jno
popa
fnsave
and
rol
add
push
gs
sti
loop
jge
mov
shr
loop
cmpsb
sub
cmp
jg
dec
push
sub
push
sahf
pop
jne
mov
out
jecxz
dec
loope
call
stc
add
sbbl
loope
push
pop
int
sub
lret
push
dec
mov
lods
mov
rclb
lret
loop
push
pop
lahf
fildll
es
ss
js
rclb
jbe
push
aad
insb
add
xlat
outsl
or
outsb
icebp
xchg
adc
push
in
jge
add
sub
and
loope
fcmovb
dec
jg
out
dec
test
mov
notl
sbb
or
test
mov
negl
push
fimull
sahf
and
jns
or
xchg
xor
xor
dec
jo
and
jmp
jbe
cmp
into
hlt
sahf
push
std
dec
aas
jae
das
push
inc
lret
mov
jo
push
mov
scas
xchg
jmp
pop
nop
cmpsl
dec
or
leave
in
pop
xchg
jge
mov
aas
mov
jle
inc
add
or
mov
push
jmp
jge
mov
sub
outsb
push
addr16
scas
sti
outsl
enter
adc
dec
das
dec
and
jo
stos
aaa
mov
scas
jnp
pop
aas
or
inc
push
push
sub
add
cmpsb
imul
fmull
fbld
jg
sub
clc
aam
adc
ja
mov
roll
or
aad
int
aaa
dec
rcr
loopne
aaa
lods
pop
insl
mov
xchg
bound
cld
call
add
cmp
xchg
jae
adc
and
popf
gs
insb
movsb
scas
adc
stos
outsl
icebp
leave
popa
cmp
call
sub
inc
push
add
dec
movb
pop
pop
test
mov
popf
xor
fwait
or
mov
push
out
jle
enter
lods
call
dec
push
lahf
fsubs
push
gs
scas
ja
stos
data16
sbb
or
stc
lcall
lret
leave
lret
dec
add
adc
ljmp
xlat
leave
xchg
fisubrs
sti
cld
jecxz
in
cmp
mov
test
mov
addr16
jbe
pop
lock
mov
cmp
hlt
mov
pop
out
loop
mov
shr
enter
add
loopne
movsl
jne
mov
push
jle
mov
sub
pop
je
push
scas
mov
pop
dec
out
pop
xchg
jle
mov
outsb
pop
sbb
lds
test
lods
dec
xor
jl
jmp
mov
or
jo
imull
and
movsb
adcb
lds
fbstp
aaa
sbb
or
inc
add
ficoml
add
imul
pop
fstp
je
scas
push
xor
push
pushf
dec
adc
lret
xchg
nop
push
and
or
push
jmp
cltd
loop
int3
addr16
jbe
xchg
cmp
cmp
cltd
push
jae
ret
xor
clc
jge
mov
push
push
in
sbb
ljmp
pop
sub
jle
pop
xchg
sbb
xor
push
pop
loopne
add
or
dec
cmpsl
stos
call
dec
jbe
xchg
cmp
adc
cli
mov
xchg
xchg
sub
push
xchg
mov
pop
test
arpl
hlt
fsubs
adc
adc
add
jb
sahf
sub
cmp
push
insl
or
pop
add
scas
dec
and
sbb
lock
test
mov
es
pop
and
test
outsb
sbb
jmp
lret
pusha
inc
pop
lods
fadds
or
xor
ss
or
adc
aas
dec
imul
imul
in
in
lods
fnsave
mov
das
aad
loopne
lock
dec
xchg
sub
push
push
call
cmpsb
cmp
icebp
cmpsb
insb
fdivrl
xor
daa
addb
scas
out
call
in
mov
xor
mov
mov
xchg
pop
hlt
pop
cltd
popa
cmp
sub
jge
testl
inc
mov
loop
jnp
inc
xorb
mov
shlb
addb
dec
sub
fists
or
or
and
std
fistpl
daa
jb
dec
repnz
shl
cmpsl
sti
inc
pop
jb
push
lods
sbb
mov
mov
imull
pop
mov
xchg
xchg
fwait
adc
xlat
addr16
xor
adc
push
out
in
popa
and
cmp
dec
xor
sahf
jle
out
sub
push
insl
jmp
fcoms
mov
inc
push
out
and
movsl
sbb
mov
sbb
ret
push
int
sub
add
sbb
xor
mov
xchg
movsb
iret
xchg
sbb
pushl
jg
sbb
push
aad
ds
lea
sbb
stos
sbb
pop
daa
lahf
hlt
sbb
sbb
outsb
sbb
clc
imul
nop
cmp
cmpsb
push
jne
mov
in
cmp
in
adc
pop
pop
outsl
and
add
ret
das
mov
pop
out
sbb
pop
loopne
sub
pop
fwait
xchg
cmp
sbb
or
sub
outsl
aam
push
pop
out
fistpl
clc
rorb
lahf
mov
sub
push
fsubr
rorb
call
xor
sahf
jp
mov
daa
jne
sub
pop
aaa
lcall
cs
dec
enter
hlt
or
xor
fs
jg
int3
lret
shll
sbb
mov
dec
clc
adc
loopne,pn
pop
jo
pop
stc
aaa
lea
push
pop
mov
jecxz
cmp
rcrl
out
shrd
iret
addr16
or
cli
flds
in
addr16
je
aaa
in
pop
fistpll
in
dec
jb
adc
jae
sub
jo
cmp
add
hlt
jne
or
aam
sti
add
test
nop/reserved
js
ffree
and
xor
insl
adc
push
xor
jmp
arpl
movsb
dec
into
leave
sub
lods
mov
sbb
dec
inc
loopne
add
jo
xchg
insl
test
mov
mov
pop
mov
xchg
js
incb
pop
mov
jmp
out
repz
jecxz
cmp
xchg
outsl
mov
and
pop
shlb
push
jnp
loopne
rcl
push
je
xor
fnstsw
insl
xchg
std
sbb
popa
cmp
pop
das
into
es
insb
sbb
mov
add
add
or
inc
dec
xchg
mov
xor
rcrl
add
dec
sbb
and
cmp
fidivl
and
mov
xlat
fsubs
xchg
jbe
jns
fnop
imul
dec
jge
or
mov
insb
test
js
and
fcmovnu
lret
fistpll
or
add
sbb
mov
sti
outsb
pop
hlt
jns
inc
mov
push
lahf
push
ds
repnz
int3
add
popa
push
inc
int3
pop
lahf
cli
lea
call
push
nop
mov
adcl
or
push
and
call
ret
sub
xchg
sahf
clc
xor
test
mov
fmuls
push
cmpsl
adc
jbe
sti
leave
xlat
cltd
popa
pop
xchg
sahf
cwtl
shrl
inc
xor
mov
push
xchg
mov
xlat
push
lods
addr16
cld
negb
pop
arpl
push
sub
les
xor
jecxz
out
or
fbstp
cmpsb
fwait
push
test
aam
ss
sbb
cwtl
jno
out
inc
mov
jmp
rclb
jmp
xor
mov
orl
lods
mov
xor
cmp
dec
cltd
mov
mov
insb
shlb
in
cmp
ficoms
xchg
mov
inc
sbb
pop
xchg
aad
mov
inc
out
fsub
push
orl
push
adc
in
xchg
aas
popf
sbbb
cmp
fwait
loop
adc
cmp
fwait
inc
fisttpl
fsub
sbb
push
jge
stc
mull
sub
adc
test
leave
mov
fs
bnd
sbb
out
pop
sti
ret
adc
dec
inc
sahf
mov
push
sbb
jne
ret
outsb
mov
mov
fwait
ret
push
leave
in
js
mov
and
cld
int
dec
or
fsts
mov
iret
es
pop
fsubrp
pop
js
mov
mov
cmp
xchg
sub
mov
arpl
add
jb
and
push
scas
ret
loop
push
mov
out
xor
sti
js
subl
imul
jne
jns
dec
setns
add
fldl
pop
in
jl
repnz
js
negb
adc
mov
out
push
push
std
jnp
loope
push
fimuls
add
out
jecxz
mov
sbb
inc
sbb
push
lcall
push
sub
addr16
mov
cmp
mov
mov
adc
xchg
push
fistpl
mov
sbb
jp
ja
testl
jl
rcll
jbe
sarl
lock
mov
fucom
gs
cmpsb
lds
aad
sbb
imul
mov
mov
data16
mov
push
add
mov
paddq
xchg
mov
addr16
loopne
add
shll
pop
add
and
dec
dec
adc
adc
push
call
btr
call
xchg
adcb
pop
bound
mov
cmp
xor
fnstsw
mov
push
mov
mov
jl
rcll
mov
xor
dec
push
cmpb
or
and
lcall
dec
leave
push
sub
fldt
repnz
clc
sahf
or
pop
mov
es
imul
popf
fs
dec
jp
incb
sarl
inc
sbb
out
lds
mov
nop
xchg
xchg
inc
push
xchg
inc
mov
outsl
ljmp
clc
sar
mov
add
push
cmpsb
out
ds
pop
pop
cmp
adc
jp
pop
sub
adc
test
pop
xor
in
nop
mov
out
cmp
daa
dec
mov
xor
aam
inc
repnz
rcrb
dec
pop
call
ficoms
data16
pop
cs
stos
imul
imul
mov
mov
jecxz
add
fbstp
enter
pop
sbb
mov
seto
dec
jecxz
and
hlt
icebp
fwait
lea
or
jns
jp
jne
insb
adc
jnp
daa
shr
dec
test
inc
dec
and
push
movb
push
sbb
ret
push
inc
roll
fldenv
cmpl
in
mov
lea
pop
jne
push
popa
push
xchg
popa
push
mov
mov
mov
int
xor
out
int3
rorb
daa
lahf
fcompl
pop
push
shll
sub
inc
imul
rcr
adc
push
xchg
push
mov
mov
pop
and
loope
ja
loopne
in
push
dec
or
adc
icebp
iret
sub
loopne
adc
popf
leave
xor
fstpt
ret
ja
or
dec
int
sbb
and
and
sub
jo
pop
xchg
mov
loope
sub
out
outsl
cld
mov
imul
ljmp
cs
ret
push
pop
ss
sub
idivb
or
cmpsb
scas
push
ret
nop
and
sahf
out
push
mov
negl
push
ja
mov
hlt
jge
or
stos
stos
sbb
call
subb
pushf
ja
roll
scas
push
cmpsl
mov
loopne
jns
bound
fwait
push
pop
pop
jmp
and
inc
mov
cmp
cmpsb
stos
xchg
mov
sub
and
jmp
xchg
mov
add
lea
xor
and
stos
fiaddl
out
cmpsl
push
testb
xor
push
and
xchg
in
daa
inc
jmp
lods
scas
pop
lret
mov
inc
aaa
mov
xchg
push
dec
into
or
or
pusha
push
sbb
and
das
add
adc
in
push
ret
sub
xlat
leave
add
testl
inc
cmp
into
in
lods
pusha
stos
dec
or
or
adc
xchg
xor
dec
int
scas
imul
add
in
pop
stc
popf
dec
jne
and
loop
jae
jbe
fstpl
jmp
cli
xchg
std
insb
add
jp
jae
std
imul
loope
jecxz
call
xor
jne
insb
jle
xchg
in
insl
mov
stos
leave
adc
ret
mov
cltd
out
enter
insb
fimull
and
push
xlat
fcomi
mov
pop
stos
or
les
mov
mov
push
mov
lds
mov
inc
pop
xchg
mov
daa
enter
inc
popa
clc
out
adc
add
push
hlt
add
pop
loope
pop
add
xchg
fistl
loop
mov
stos
les
adc
inc
dec
push
leave
es
and
mov
inc
rcrl
xor
mov
xchg
insb
popf
add
cmc
xchg
jl
es
and
lods
shlb
sub
fcmovnu
mov
pop
fstpl
fucomip
push
pop
out
jns
je
scas
stos
ret
lock
ficoml
jle
pop
mov
jg
fisubrs
les
pop
add
pop
icebp
mov
les
je
pop
adc
fwait
jb
jns
xchg
mov
ficompl
jmp
dec
daa
push
sti
sbb
jge
scas
fists
mov
pop
pop
int
in
or
mov
movsb
adc
push
in
scas
test
adc
mov
mov
pop
lea
aad
add
rorb
fldt
scas
ljmp
cmpsl
loope
in
adc
push
out
mov
pop
xchg
rorl
daa
ret
and
fdivl
popa
mov
lock
flds
adc
insl
daa
nop
jecxz
jb
mov
xor
sub
mov
pushf
dec
push
jg
out
pop
adc
mov
aas
mov
push
xor
xlat
pop
cmp
and
movsl
stc
dec
mov
sahf
adc
adc
fcmovu
jno
fists
mov
xor
fists
mov
out
in
mov
sub
sbb
cmp
bound
adc
hlt
cmp
xchg
jmp
lret
push
aam
adc
add
sub
call
or
shlb
out
int
fbld
xchg
repnz
push
inc
sbb
jae
push
cmpsb
xor
mov
push
test
je
mov
and
jno
aas
dec
cltd
fstpl
scas
xor
sub
idivl
pop
test
ss
cmp
pop
sub
cld
sbb
call
popa
mov
sub
cmpsb
icebp
mov
mov
mov
aad
push
pop
pop
in
dec
scas
je
xor
inc
mov
js
jecxz
enter
and
cmpsb
jle
mov
push
mov
inc
jg
pop
mov
adc
bound
cmp
jle
arpl
inc
lret
out
clc
lock
push
mov
inc
xorl
xlat
dec
dec
jns
aas
mov
jp
jmp
int
inc
mov
cmp
iret
adc
mov
xchg
sub
jo
jp
mov
or
ds
es
sarl
ss
fisubrs
test
mov
popf
aad
push
cmovg
sahf
push
jg
pop
popa
icebp
inc
aaa
je
int3
idiv
popf
push
jecxz
adc
xor
ds
sbb
aad
imul
adc
mov
fldcw
aad
ret
fdivrl
ret
pusha
jp
lret
adc
cli
lea
insl
out
fnstenv
add
pop
test
and
dec
imul
sub
int
sub
or
in
cltd
push
fxch
scas
repz
lock
cld
dec
adc
xchg
xchg
and
fs
int3
cmp
xchg
lods
insb
ja
add
into
mov
cmp
mov
sbb
pop
mov
je
cmp
out
add
mov
popl
fstpt
add
stos
sub
mov
outsb
fcoml
je
xor
stos
cbtw
mov
cmp
outsb
notb
rcrb
jl
jo
cmp
test
repz
mov
sbb
fistpl
xor
aad
fsubs
and
sbb
push
cmp
pop
and
ret
inc
add
lahf
mov
fcmovne
xor
jbe
push
fs
scas
adc
arpl
fisttpl
scas
das
push
cmpsl
xchg
dec
mov
and
inc
cwtl
test
mov
aad
mov
cwtl
imul
cmpsb
je
adc
jmp
fmul
jns
mov
jo
sub
in
test
mov
mov
lods
cmp
mov
mov
pop
pop
inc
inc
dec
xor
push
mov
sub
fbstp
outsl
jle
fcmovnb
lock
lret
pop
fwait
adc
scas
cmc
jecxz
ljmp
iret
lret
push
divb
loope
mov
mov
je
cmp
jmp
jge
mov
hlt
cmp
mov
iret
sub
dec
adc
inc
movsl
rolb
paddd
xchg
fcomps
dec
pop
sbb
pcmpeqb
and
inc
repz
or
add
xor
stc
in
into
mov
lcall
scas
push
in
movsb
leave
push
gs
test
dec
cmp
enter
pushf
icebp
jae
dec
lds
pop
xchg
fistps
jns
into
insb
add
or
jae
mov
mov
cmc
jb
mov
lret
add
test
xor
ljmp
dec
out
jl
imul
insl
roll
cmp
inc
sarb
xor
cmpb
mov
insb
dec
dec
daa
hlt
aas
or
mov
jb
hlt
cli
out
pop
inc
sarb
sub
lret
icebp
adc
movsl
imul
mov
rorl
unpcklps
sub
pop
pushf
pop
xchg
sub
leave
or
mov
movsb
xchg
jmp
pop
push
cs
or
add
outsl
loopne
xchg
in
pop
stc
test
je
jmp
add
cmp
fldcw
pushf
test
jbe
loope
mov
dec
shlb
xchg
shll
inc
sub
cli
shll
lea
xchg
adc
test
mov
cmc
fildl
sbb
int3
xchg
sub
xchg
popf
xor
repz
jne
cmpsl
dec
mov
or
gs
rclb
stos
popa
lret
xchg
sbb
xlat
ds
sbb
stos
adc
pushl
hlt
cmp
push
lds
xchg
repnz
or
cmp
outsl
in
repz
pop
out
imul
jae
cmpsl
add
mov
outsb
mov
xchg
outsb
test
in
push
mov
push
cmpb
imulb
cmpsl
outsb
cli
aad
push
test
fldt
push
ss
sbb
sbb
lods
sub
popl
rcr
xchg
aaa
sbb
and
repnz
push
push
sbb
sbb
add
mov
notb
pushf
stc
jmp
mov
lock
mov
leave
scas
pop
or
clc
dec
pusha
xchg
insl
mov
shr
xor
jbe
repnz
stos
in
add
dec
xor
pop
xor
ffreep
and
inc
push
xor
gs
pop
sbb
jecxz
lods
inc
cmp
sub
inc
shrl
sahf
in
pop
out
cmc
fyl2xp1
popa
dec
push
push
sti
mov
sub
sar
test
cwtl
sbb
push
icebp
dec
ja
faddl
adc
mov
cmc
int3
cwtl
adc
das
pop
jecxz
pop
mov
out
int3
frstor
xchg
mov
xor
sub
sub
ret
inc
adc
fwait
jo
lret
int
fistpl
sbb
mov
jecxz
xchg
adcl
ret
mov
movsb
xor
lods
inc
repz
jl
cli
rcrb
add
ja
js
ds
in
popa
repz
pop
sbb
test
mov
stc
ss
imulb
pop
insl
pop
je
mov
lcall
cmp
mov
xlat
mov
inc
cmc
fxch
xchg
repz
pop
cmp
rorl
in
or
loope
mov
sbb
das
sbb
ss
push
lret
adc
shll
adc
mov
leave
cwtl
out
stc
jl
push
dec
jbe
mov
sbb
ret
xor
fs
sub
stos
mov
cli
add
sub
shrl
in
mov
push
sub
jnp
int3
mov
int3
cwtl
push
cmpsl
cld
outsl
mov
mov
mov
leave
ret
sti
cmp
xor
xor
jbe
pop
je
pop
and
sbb
pop
sub
push
xor
imul
sbb
sbb
stos
cmp
bnd
xchg
or
test
mov
pop
xor
pop
lret
sbb
frstor
leave
lcall
jnp
stos
fstpt
jg
clc
mov
sbb
cltd
sub
cmp
xchg
jmp
mov
loope
lods
pop
loopne
popa
sarl
dec
aaa
mov
jb
ficompl
lds
xor
dec
cmc
js
test
ret
xchg
dec
popa
mov
add
dec
or
test
es
sub
out
test
and
mov
hlt
out
inc
scas
push
pop
push
xchg
iret
sub
add
mov
pop
cmpsb
cmc
aaa
or
push
repz
cmp
pop
ret
sub
jle
daa
rorb
cmpsb
and
lock
mov
popf
dec
push
mov
fdiv
fucomp
fisubrl
cld
sbb
aas
mov
lds
test
mov
jle
insl
mov
mov
push
jae
outsl
cli
jbe
sahf
mov
adc
xchg
mov
mov
adc
jno
mov
lea
fldenv
adc
loope
sub
out
gs
add
mov
jns
lea
adc
xchg
sub
out
data16
out
mov
mov
call
push
mull
push
mov
out
dec
push
sbb
or
in
leave
push
cmpb
or
inc
lods
es
sub
insb
cli
movsb
cwtl
aas
outsb
mov
jo
mov
in
push
push
mov
je
cltd
jns
in
sbb
push
add
sub
mov
mov
jbe
aaa
pop
mov
sbb
mov
mov
sub
hlt
sub
push
addr16
dec
insl
cmpsb
xor
pop
mov
inc
rcrl
fsubrl
roll
mov
mov
daa
mov
xor
lcall
repz
add
in
adc
test
test
cwtl
jecxz
mov
push
adc
mov
enterw
clc
cmp
scas
mov
loop
or
jb
cmp
jl
xchg
mov
hlt
and
mov
shrl
loop
jmp
stos
cwtl
addr16
cmp
scas
mov
inc
faddl
pop
mov
subl
push
pop
sti
mov
cwtl
xchg
imul
sbb
mov
xor
les
lahf
bound
repnz
call
pop
shlb
out
arpl
push
cmp
or
inc
mov
ret
clc
in
pushf
test
and
and
jp
xor
negb
or
fwait
mov
lock
lea
lods
pop
mov
icebp
xchg
pop
sahf
mov
ret
dec
fdivs
int
mov
mov
stos
mov
repnz
and
jg
sahf
imulb
and
outsb
insb
pop
add
test
mov
mov
movl
jmp
andl
int
rcll
dec
xlat
xchg
xchg
aad
arpl
das
jecxz
xchg
pop
cmc
cmp
shr
and
sbb
clc
jno
or
jnp
sbb
jecxz
lea
mov
adc
xchg
jecxz
xor
mov
fxch
jno
rcll
subb
push
movl
in
test
mov
or
cmp
inc
fsubrl
aas
lahf
or
or
ja
dec
daa
stos
lds
mov
push
lret
push
movsl
stos
xor
lea
mov
inc
add
scas
push
fistpl
or
fdiv
test
ja
clc
xchg
fisttpll
add
or
mov
pop
popa
icebp
out
and
rcrl
and
pop
push
int
es
cld
mov
xchg
pop
rorl
pop
jb
mov
jno
add
push
insl
cltd
hlt
cmc
jno
xchg
frstor
mov
mov
fidivrs
and
push
cli
pop
and
aaa
pop
push
call
sahf
nop
testl
pop
pop
xchg
mov
nop
jno
jo
fdivrs
ja
test
fadd
mov
icebp
mov
addb
das
push
jb
rorb
fstpl
movsl
push
fwait
mov
les
inc
dec
pop
das
stc
pop
out
push
cmp
or
movsl
fildl
pop
bswap
mov
cltd
add
les
jecxz
clc
push
cld
insl
cmp
mov
adc
aad
jecxz
sub
push
or
fildll
pop
decl
mov
dec
mov
mov
mov
rolb
sub
mov
xor
or
lcall
or
and
pop
repz
cvtdq2ps
inc
pop
mov
sub
jg
movsl
or
into
popf
mov
sahf
dec
sub
or
jae
mov
mov
popf
mov
js
in
test
out
aam
dec
imul
sbb
mov
mov
mov
or
xchg
add
shlb
ret
dec
pop
lahf
xchg
cmc
push
mov
fsubrl
push
aaa
jg
lods
stc
sub
mov
in
repz
add
jns
cmp
or
sub
mov
push
ret
les
push
pop
int
dec
in
sti
notl
mov
cmpsb
data16
movsb
call
xchg
add
dec
clc
mov
adc
addr16
out
es
or
xlat
push
or
mov
fldcw
xor
add
add
aam
add
jge
xchg
dec
test
xchg
or
push
cld
pop
jp
pop
push
jnp
cmp
test
sub
bound
sbb
in
stc
scas
fistpl
nop
adc
fimull
mov
and
loopne
or
mov
scas
mov
shl
repnz
rcrb
iret
jle
and
lret
adc
dec
in
pop
ds
xor
or
movsl
or
enter
fistps
jp
stos
in
out
ror
mov
mov
dec
scas
mov
fsubl
loopne
test
in
cmc
mov
mov
mov
push
cli
aaa
sub
pop
data16
dec
inc
add
mov
test
roll
xchg
out
pop
pushf
cwtl
mov
dec
outsb
arpl
rorl
xchg
jg
test
andps
adc
sub
xchg
std
and
insl
dec
pop
xchg
into
and
mov
imul
enter
pop
xchg
jl
add
sbb
cmpsl
cmpsl
cmp
shrl
cmpsb
inc
add
lods
pop
bound
fiaddl
call
scas
leave
pusha
cmp
aam
aas
enter
jbe
cmp
or
mov
xor
and
cli
sbb
ds
scas
ret
hlt
add
jno
icebp
inc
stos
outsl
aam
sar
out
icebp
cmc
xchg
insb
sub
addr16
mov
mov
xor
in
jmp
int
pop
ret
cmp
stc
mov
negl
jne
or
inc
add
cmp
xor
sti
aaa
je
repnz
jo
int
outsl
push
pop
jno
inc
pop
cmp
popl
idivl
jge
lret
rorl
je
or
mov
mov
cmpb
adc
sub
stc
add
addr16
mov
inc
ljmp
xchg
xchg
inc
les
xor
and
or
dec
imul
mov
and
movb
push
and
or
sub
xchg
stos
into
clc
jmp
repz
add
push
stos
orb
aad
jne
mov
sbb
xchg
mov
cwtl
sbb
sbb
fwait
int
pop
push
fnsave
les
lret
jl
icebp
out
fs
cmp
popa
jns
adc
leave
adc
icebp
pop
xor
int3
inc
inc
fisttps
out
iret
test
loop
cld
ret
repnz
fdivr
adc
pop
sbb
xlat
and
push
sub
inc
ds
addr16
sbb
out
les
adc
adc
cmp
in
movsb
fistpll
out
push
mov
mov
loopne
out
lret
and
stc
sub
mov
scas
into
pop
in
jp
inc
jecxz
loopne
mov
insl
sub
stos
aaa
das
shrl
cld
cmp
lahf
jbe
jp
pushf
enter
sti
jmp
sbb
jno
mov
gs
adc
sahf
inc
fs
push
mov
dec
mov
push
arpl
adc
jns
popl
and
aam
mov
test
les
mov
lahf
movsb
cmp
cmpsb
lock
mov
loopne
or
adc
loopne
and
pop
sbb
cmp
or
jbe
and
xchg
or
and
dec
fildl
add
in
test
jmp
push
aad
sahf
sub
xchg
sbb
daa
mov
push
lret
inc
ja
or
pop
hlt
jg
pop
mov
mov
cld
xchg
data16
or
xchg
xor
xor
scas
lods
pop
mov
adc
clc
lcall
rcll
adc
cmp
imul
mov
icebp
repz
ret
xor
push
imul
pop
dec
das
ljmp
mov
pavgb
into
ja
lcall
ja
pop
mov
xchg
xor
cmp
jns
xchg
mov
mov
mov
ret
sub
enter
xchg
pop
sti
shrl
mov
hlt
pop
aad
dec
xchg
inc
jnp
div
dec
inc
cmc
xor
movsl
xchg
dec
std
push
mov
inc
lcall
and
fisttpll
daa
out
push
cmp
pop
jmp
inc
add
pop
imul
push
add
mov
sbb
mov
fsubp
cltd
shl
lgdtl
inc
mov
jns
mov
mov
call
mov
addb
dec
push
je
pop
dec
xchg
mov
sarb
mov
aad
inc
xor
pop
cli
xchg
rcrl
cmpsl
sub
mov
out
in
das
popf
push
enter
jg
xchg
inc
js
loop
jae
xchg
gs
aaa
add
push
sbb
lcall
mov
int3
dec
gs
out
mov
xchg
mov
in
shll
inc
aas
push
adc
add
sub
add
mov
inc
and
or
mov
sub
mov
popl
dec
mov
pusha
and
mov
fstpl
dec
and
lret
add
pop
inc
loopne
dec
enter
xchg
mov
nop
out
int3
xor
sti
dec
push
pop
mov
out
mov
insb
push
adc
xor
push
add
hlt
jns
jns
pop
fistl
push
sbb
mov
and
and
adc
cmovb
mov
fsubrl
fmuls
cmp
mov
outsl
add
loop
push
mov
adc
fldenv
fcoml
sub
xchg
xchg
jp
in
lock
and
aaa
mov
call
cs
mov
ffreep
fbld
xchg
xchg
enter
cs
leave
shll
inc
fidivrs
fstps
mov
dec
mov
test
sub
ret
xchg
aam
dec
out
xor
mov
mov
push
pushf
pop
leave
clc
in
or
and
sub
and
stc
dec
mov
mov
cltd
dec
fcoml
pop
push
dec
in
push
mov
out
xchg
jp
sti
lret
or
and
aad
jge
mov
push
add
or
add
sub
daa
mov
or
nop
sbb
enter
cltd
and
icebp
push
mov
push
dec
jbe
mov
cmp
outsl
xor
fs
mov
pop
xchg
mov
fisubl
inc
jae
ds
xchg
lds
outsl
js
cmpsb
pop
test
js
lret
repnz
push
xchg
in
mov
pop
int3
dec
cmp
loop
inc
mov
das
xchg
dec
jl
iret
iret
pop
or
mov
or
es
pop
adc
nop
in
aas
mov
daa
inc
mov
lea
repnz
xor
or
icebp
mov
cmp
aaa
jge
lcall
xchg
jno
cmpsl
sti
in
dec
add
dec
cmpxchg
adc
movsb
std
pop
adc
mov
pop
add
mov
ror
dec
cmp
mov
dec
pop
jle
pop
enter
aas
andb
inc
push
mov
mov
mov
iret
lods
cwtl
testb
mov
and
test
inc
leave
popa
dec
fldl
jb
data16
sub
or
add
fcmovb
lcall
and
push
aas
or
push
sub
xor
mov
iret
xchg
xlat
sbb
out
mov
in
lahf
cmp
lret
adc
push
scas
addl
pop
dec
mov
mov
jmp
lcall
fldl
xchg
xchg
push
mov
xchg
or
mov
nop
sbb
dec
pop
jl
jle
jns
repz
dec
jmp
shlb
in
lret
nop
movsb
jp
adc
mov
cmp
int
in
es
fstp
loopne
cmpsl
fldenv
ror
cli
jns
ljmp
hlt
mov
jno
ficoms
aad
stos
popl
aas
adc
rcrb
mov
push
adc
inc
sbb
mov
jnp
sub
stos
fcompl
push
push
jns
imul
dec
insl
sbb
xchg
or
inc
in
outsl
cmp
dec
push
xor
lret
hlt
pop
andl
stos
push
xor
mov
sbb
push
test
cmp
ret
out
mov
pop
cmp
loope
shlb
gs
adc
adc
sbb
es
sbb
pop
xor
xchg
xchg
push
test
add
adc
pop
lods
mov
and
popa
test
fdivrs
mov
nop
jbe
ds
xor
mov
or
xchg
add
in
and
into
andb
lods
pop
adc
adc
or
mov
shrb
xor
dec
xchg
es
int
clc
or
xor
jle
add
rcll
fsubrp
movsb
daa
mov
cs
mov
push
popa
jmp
inc
and
mov
xorl
sbb
lods
and
pop
add
sub
push
push
pop
add
add
and
lret
fstl
pop
push
mov
add
dec
mov
into
push
pop
add
out
mov
arpl
dec
out
stc
cli
jmp
leave
fisubl
sbbl
jno
out
movsl
not
and
into
sub
clc
sbb
rcll
scas
add
mov
and
dec
sub
out
or
lods
inc
clc
sbb
adc
pop
aad
cmpsb
jo
call
mov
sbb
adc
outsb
and
dec
das
test
jmp
add
adc
dec
push
jns
pop
adc
cwtl
rorb
xchg
dec
adc
repz
inc
loope
fnstcw
dec
mov
mov
add
repnz
add
cli
lds
loope
js
out
das
add
push
xor
lock
scas
jo
sub
xchg
idivb
hlt
bound
and
repz
and
xchg
aam
jecxz
stos
inc
cmp
push
sbb
pushf
and
arpl
xor
mov
xor
bound
xor
int3
lods
jmp
mov
pop
jmp
divb
fwait
add
dec
movb
scas
cwtl
inc
cmp
adc
cmp
jecxz
add
push
mov
jle
sbb
xchg
and
imul
popa
xor
ret
ficomps
mov
sub
loopne
and
sub
cmpsl
or
loope
std
pop
push
shl
jp
or
push
lods
popf
std
leave
and
fistps
and
mov
cld
xchg
dec
ds
mov
mov
outsl
cmpsl
mov
out
pop
out
into
popa
cmp
stos
dec
dec
cmpsb
mov
out
mov
pop
mov
pop
call
mov
rclb
sub
imul
mov
mov
sub
movsb
ret
push
cmpsl
sub
xchg
aad
cwtl
popf
inc
pop
ss
inc
stos
mov
mov
and
std
mov
pop
in
movsb
xor
out
xchg
lcall
cmp
pop
jno
nop
xor
jbe
lahf
push
cli
shlb
aas
repz
inc
mov
test
cltd
pop
negl
insb
aam
and
enter
dec
add
sub
or
scas
cs
pop
stc
push
dec
xchg
mov
fidivrl
mov
cmpsb
outsb
in
out
ss
fnstsw
inc
dec
into
xchg
in
pop
add
fs
add
and
sbb
xor
pop
icebp
dec
mov
mov
cmp
dec
cld
mov
pop
fidivrl
and
mov
or
push
mov
sub
imul
mov
mov
movsb
dec
bound
imul
repnz
inc
pop
pop
lods
mov
in
mov
mov
adc
xchg
cwtl
mov
push
repnz
ja
mov
dec
push
and
xor
lcall
test
mov
pop
repnz
mov
dec
sub
imul
imul
jb
sbb
mov
push
cmc
clc
jle
daa
jns
aas
and
cs
mul
dec
aam
push
leave
clc
dec
stos
and
loopne
push
push
je
aas
repnz
xor
sahf
push
mov
adc
lret
mov
pop
std
out
je
sarl
add
mov
mov
idivl
jno
pop
jl
xor
xchg
lahf
and
mov
dec
jnp
arpl
mov
popa
push
pop
fs
outsb
pop
fsubs
enter
test
pop
stos
mov
xor
xor
pop
inc
dec
mov
xchg
repnz
in
sar
cmp
mov
xchg
je
ret
jno
push
lods
or
add
lret
xor
sbbl
adc
dec
in
push
rorl
adcl
add
and
je
int3
outsl
stos
mov
jecxz
in
xchg
ss
xlat
cmp
mov
jns
enter
mov
sbb
jle
jle
inc
push
int3
lock
fidivrl
push
lods
icebp
lret
sbb
inc
mov
repnz
push
and
jecxz
outsl
or
shlb
xchg
subl
mul
into
cwtl
popa
push
sub
add
cmpsb
out
pop
xchg
fwait
divl
or
xor
push
sbb
notb
inc
xchg
out
add
and
jl
incb
sbb
insb
cltd
std
aad
sbb
add
fisttpl
pop
sbb
ret
xor
adc
divb
sbb
fstps
jmp
filds
inc
es
sarb
xchg
lret
fbld
subb
jne
mov
push
mov
sub
pop
pop
dec
leave
add
push
je
sbb
addr16
dec
les
push
fsubrl
cmp
add
dec
dec
fbstp
push
insl
xchg
test
dec
jae
add
and
stos
jge
xorl
mov
loop
cli
cwtl
sub
sti
inc
inc
aam
sub
xor
pop
pop
push
clc
cmp
pop
adc
push
xchg
mov
stos
lock
repz
lret
or
orl
pop
xchg
add
jmp
mov
ret
mov
repnz
gs
fucomi
outsb
mov
es
pop
je
sbb
pop
ds
cmp
or
pushf
test
adc
sbb
xchg
scas
lcall
inc
pop
test
adcb
movsl
addr16
jae
test
aam
enter
xlat
fisubs
and
xchg
pushf
push
cmp
mov
nop
xlat
push
pusha
lahf
jle
insl
sbb
mov
mov
nop
call
fldl
lea
ret
jp
outsb
push
stc
mov
xchg
or
jo
in
jae
mov
jmp
sti
insb
xor
dec
mov
ljmp
movsl
push
jle
scas
into
push
push
es
add
push
mov
jns
lahf
mov
inc
ret
sahf
sbbb
add
cmc
in
sbb
and
push
dec
and
push
imul
push
fimuls
repz
enter
sbb
iret
roll
addl
jb
das
out
inc
lods
adc
xchg
mov
dec
cmpb
fdiv
pop
and
or
adc
xchg
cltd
ret
rclb
nop
jecxz
xor
sbb
mov
repz
mov
stos
insl
inc
addr16
pop
popf
ret
mov
call
mov
mov
pop
fisttps
jnp
sbb
out
xchg
push
sbb
lods
mov
aad
adc
mov
mov
mov
fsts
pop
in
mov
test
add
add
push
mov
push
sbb
push
shl
test
fstpt
stos
sbb
fwait
sub
push
inc
cmp
push
scas
jle
push
fdiv
inc
daa
testb
jb
push
fs
xchg
scas
fwait
cmpsl
and
mov
aam
lret
jecxz
push
xor
jae
push
hlt
lahf
or
jle
mov
pop
bsr
fcoml
cmp
mov
xor
das
cmp
pop
aam
cmp
jl
add
cmpsb
mov
mov
test
jo
cld
push
push
mov
incb
in
dec
ret
mov
test
sbb
adc
push
pop
pop
imulb
testl
push
jne
xor
dec
or
and
and
xchg
lods
das
stos
xchg
das
and
lock
jbe
adc
cltd
lret
sbb
mov
xor
jecxz
sub
mov
sub
xor
sub
cs
xchg
fcmovnb
cmc
adc
sub
sub
mov
xlat
xchg
push
pop
adc
sarl
and
in
or
popa
dec
fwait
xchg
push
out
inc
loopne
repnz
sahf
jne
lea
mov
inc
or
pop
jo
mov
xor
movsl
sbbl
push
inc
mov
pop
enter
aas
jl
ljmp
jecxz
fisttpll
jg
hlt
dec
dec
aaa
aam
sub
out
adc
gs
xchg
mov
stos
outsb
mov
mov
lea
nop
cltd
into
stos
push
stos
cltd
mov
stos
fildl
hlt
mov
sbb
clc
nop
lods
mov
cmp
jl
aas
leave
es
pop
push
callw
and
call
and
or
mov
push
jmp
orl
incl
cmp
call
es
ds
jo
pushf
push
cmp
shll
addb
jne
scas
add
mov
fcoms
cs
pushf
sbb
shll
sbb
cs
cld
addr16
dec
cmp
pop
and
shll
fiadds
mov
aad
jg
sbb
ret
adc
repz
pop
cltd
or
push
xchg
mov
jp
cmp
xchg
adc
jecxz
mov
xor
jae
dec
test
insb
xchg
cmp
fldcw
into
out
dec
push
pop
repz
and
loop
mov
frstor
and
jnp
out
add
and
sbb
add
lods
fsubr
lahf
and
or
or
adc
fimull
dec
bound
pop
lcall
xchg
sub
xor
lcall
scas
jg
test
jmp
xchg
pusha
sub
mov
outsb
mov
test
icebp
adc
xchg
imul
inc
fsubrp
cmpsb
cmp
xchg
pop
xchg
sub
into
cmp
mov
inc
push
inc
inc
movsl
addr16
hlt
dec
les
ret
lods
dec
in
lods
les
mov
cltd
imul
clc
out
cld
push
iret
dec
std
lods
adc
lcall
dec
mov
sbb
sarl
xchg
cmp
jns
repnz
arpl
in
dec
adc
push
jg
test
sub
data16
je
xchg
mov
push
push
in
adc
outsb
pushf
aaa
andl
lahf
push
pop
popa
mov
dec
leave
xchg
mov
sbbb
fldt
rclb
sub
in
cs
inc
stos
xor
add
pop
lret
out
lret
mov
idivb
xchg
loop
imul
pushf
sahf
xchg
cmpsl
fisttpll
sub
out
pop
mov
dec
mov
mov
cltd
imul
push
stc
sub
xorb
dec
or
xchg
lock
and
jp
dec
or
lahf
insl
out
das
jmp
fdivr
pushf
mov
adc
dec
xlat
dec
jbe
sbb
outsb
cwtl
rcr
dec
pop
loopne
and
xchg
mov
xchg
loopne
out
jle
add
fstpl
aam
pushf
cmp
lret
in
fbld
ret
cmp
push
test
sbb
out
imul
or
loopne
add
adc
dec
imul
mov
cmpsl
popa
fisubrl
or
push
cs
cmp
xchg
outsl
aad
outsb
sbb
push
dec
ja
scas
aaa
jnp
movsl
outsb
cltd
ljmp
sti
push
sub
jb
pushf
mov
mov
les
lods
test
cmp
in
fcmovnbe
dec
mov
movsl
in
inc
rcrl
sbb
mov
ret
int
inc
fs
dec
jo
pop
cmpl
adc
int
pusha
mov
xorb
movsl
int
mov
nop
sbb
jl
pop
and
jl
sbb
push
in
adc
movsl
lods
adc
iret
adc
pop
fistpll
mov
imul
xchg
add
mov
ds
lea
dec
push
rcll
add
push
jo
and
lock
shrb
int3
dec
pop
sbb
out
adc
vandpd
popa
mov
pop
or
fnstcw
fnsave
push
jge
xchg
mov
addr16
adc
push
adc
shll
cmp
mov
jmp
ljmp
xchg
cmpsb
sbb
popa
cmp
pusha
mov
mov
and
scas
mov
loopne
fsubr
fdivl
ret
xchg
pushf
mov
int
cmp
ret
dec
div
cmp
jno
sbb
mov
pop
into
sbb
push
ja
pop
xchg
loope,pt
les
stos
xchg
iret
sbb
mov
sbb
add
inc
jo
push
lock
and
jle
xchg
jae
shlb
mov
mov
rep
push
mov
mov
jo
imul
adc
addr16
notb
sub
ret
sbb
stos
add
xchg
pop
andb
cwtl
jg
sub
mov
in
cs
in
inc
loop
mov
repz
mov
dec
push
cmp
dec
cli
es
dec
aad
push
mov
call
or
pop
outsb
dec
in
insl
cmp
pop
jl
jae
aaa
rcr
nop
fwait
and
and
mov
push
or
sub
xchg
xchg
mov
jnp
pop
test
xchg
or
push
inc
mov
jmp
lods
inc
stos
je
adc
in
pop
leave
xchg
scas
inc
sbb
dec
stc
add
pop
fstl
cs
hlt
jns
ds
add
in
xchg
fadd
aad
cli
loopne
sub
clc
mov
jmp
test
jle
pop
shll
pop
je
lods
cmp
test
mov
and
mov
daa
pop
or
lret
mov
and
adc
xchg
inc
pop
sahf
rorb
jmpw
mov
mov
push
jg
ret
or
in
push
xchg
cmc
jp
ds
jb
test
test
and
pop
call
sbb
or
and
test
int
testb
mov
or
mov
test
idiv
pop
repnz
je
lods
int
push
mov
adcl
test
add
fisubrs
push
dec
enter
cli
clc
not
shlb
dec
xor
test
xchg
cmp
fyl2xp1
lea
lock
subb
in
sarl
shr
ds
pop
in
push
dec
mov
mov
sbb
cmc
or
cmp
xor
fdivrl
and
mov
push
es
out
push
outsb
loopne
pop
push
test
sub
ret
imul
xchg
roll
cmc
mov
pusha
xorl
xchg
push
aam
mov
pop
add
cmp
push
xor
rorl
mov
pop
shll
push
into
out
mov
mov
mov
ret
in
lods
xchg
ds
pop
sbbb
stc
push
mov
shll
icebp
test
mov
ljmp
rorl
dec
shll
adc
icebp
incl
push
dec
popf
loop
and
sub
popf
fdivl
cmpsl
std
fs
add
fimull
into
inc
fsubl
gs
pop
inc
mov
mov
nop
bound
lret
mov
lret
jg
cwtl
pusha
add
push
lea
imul
imul
inc
push
sbbb
and
sti
push
int
push
es
mov
sub
mov
sub
in
pop
fwait
jecxz
shll
adc
dec
or
lds
addr16
jmp
ret
jne
rcrl
jns
out
adc
mov
jge
in
imul
js
inc
data16
push
mov
call
mov
rolb
mov
pop
insw
mov
adc
lods
insl
enter
les
dec
or
pop
jno
movsl
inc
stos
mov
and
arpl
add
xlat
jns
call
dec
lahf
lock
lea
inc
aaa
inc
cs
outsb
std
ljmp
mov
or
add
cmpsb
int
add
xchg
xor
pop
inc
daa
scas
jns
lea
jecxz
ret
mov
mov
aaa
outsl
das
mov
iret
mov
mov
fst
shlb
lcall
add
mov
pop
add
or
sbb
and
cmp
adc
enter
xchg
lahf
bound
mov
std
lds
and
cmp
mov
dec
data16
xor
dec
outsb
mov
lea
movsb
cmp
jg
dec
out
scas
mov
loopne
pop
aam
mov
adc
adc
jmp
mov
xchg
lea
inc
push
jl
insb
test
test
iret
mov
push
push
stos
aam
cmpsb
orb
imul
xchg
imul
sub
dec
add
jo
orl
loop
or
into
repz
lret
bound
jge
mov
das
int
loop
xchg
inc
and
mov
pop
mov
sti
insb
add
xchg
jle
leave
dec
movsb
xchg
daa
ds
jmp
sub
sbb
and
fists
xchg
ds
add
into
mov
sub
sub
std
jne
xchg
addr16
pop
cld
cmp
in
loopne
lods
xlat
cmp
mov
insb
loope
loopne
xchg
pop
xchg
mov
test
in
rcrl
repz
mov
bound
call
jns
jl
mov
insl
aaa
daa
pop
scas
das
int3
dec
or
jno
lea
outsb
nop
jno
loopne
jnp
shll
sbb
adcb
or
sub
inc
iret
in
and
sub
mov
cs
jns
stos
aaa
inc
xlat
in
and
xor
pushf
filds
add
mov
in
pop
int
pop
ss
push
je
repz
pusha
fdivrs
jp
mov
test
insb
jne
pop
mov
dec
cwtl
xchg
loope
mov
sub
or
dec
jb
subb
je
fimuls
jno
or
jmp
das
cmp
test
jp
int3
popa
and
imulb
or
adc
scas
mov
imul
dec
xor
mov
pop
je
call
cwtl
nop
add
outsl
mov
aad
fsubl
xor
mov
leave
mov
lcall
shrb
aaa
imulb
std
add
jae
sbb
mov
pop
inc
mov
mov
xchg
data16
ds
out
xor
xor
dec
aas
xchg
mov
popf
mov
mov
push
ret
xchg
xchg
fists
sbbl
jecxz
mov
iret
inc
aaa
setb
add
pusha
negl
enter
lahf
stc
push
out
mov
push
mov
xor
mov
aam
lods
popa
pop
sbb
mov
in
cmp
aam
xchg
add
mov
in
mov
lods
jp
add
and
dec
dec
scas
in
add
cmc
pop
pop
pushf
adc
adc
cmp
jae
aam
adc
inc
sahf
lods
mov
push
pop
test
inc
pop
xor
int3
mov
pop
fwait
es
inc
lods
push
scas
shrl
xor
add
gs
mov
iret
pop
fcmovnb
imul
jb
cmpsl
mov
jnp
popf
lock
xchg
jnp
cmp
rcl
out
or
insl
xchg
and
mov
scas
in
mov
ljmp
out
inc
test
ja
jecxz
jns
mov
out
inc
mov
jno
lcall
xchg
mov
addr16
out
xchg
push
in
in
cmp
mov
cltd
movsb
repz
call
gs
lahf
lret
jle
jle
inc
add
add
in
in
dec
cmp
and
mov
stos
adc
sub
test
cmp
or
test
fsubs
adc
outsl
cmpsl
out
inc
sar
insl
out
mov
and
test
pop
xor
inc
cli
push
fistps
fcmovbe
mov
adc
mov
mov
fsubl
and
add
test
push
sbb
fistpll
ret
ljmp
orl
movsb
xchg
ljmpw
push
inc
add
lock
mov
adc
mov
scas
inc
stos
addl
mov
cmp
cmp
movsl
mov
pop
js
add
in
inc
popl
repnz
jb
push
iret
loope
and
add
iret
aas
cmovnp
aaa
out
dec
mov
lret
pcmpeqw
mov
add
jb
xchg
fdivrl
mov
and
cmpl
mov
push
mov
push
and
add
mov
nop
xor
jge
xor
repz
cs
mov
add
mov
xlat
and
mov
aam
mov
cmc
sbb
ficoms
push
stos
daa
and
push
inc
push
loopne
popa
in
addr16
in
fstps
mov
cmp
das
gs
mov
pop
sub
jbe
out
mov
lock
iret
and
leave
inc
add
outsb
cld
pop
jmp
cltd
lock
scas
mov
push
cmp
insb
test
xchg
mov
ljmp
repnz
int3
sub
sbb
mov
adc
jb
dec
sbb
push
cld
jno
in
leave
pop
sti
arpl
inc
cmpl
and
sub
lea
jl
cmp
andl
cwtd
sub
jo
adc
aam
inc
pop
sbb
loop
or
lods
fwait
add
data16
push
pop
push
inc
dec
roll
push
and
in
and
test
xchg
repz
gs
push
or
popa
pop
shll
push
leave
cmp
out
fidivs
imul
mov
cmpsl
xchg
in
das
popa
pop
sub
negb
inc
lods
shll
mov
hlt
fnstcw
jle
and
aam
xor
jae
mov
dec
lea
fstpt
add
adc
jl
jb
les
pop
mov
jo
xchg
adc
cmc
push
pop
idivl
ja
pusha
hlt
mov
jge
fwait
std
mov
icebp
and
xchg
imul
mov
and
mov
jecxz
mov
push
xchg
addl
xor
lret
sbb
in
jle
pop
sub
ss
bound
pop
jb
inc
inc
sub
xorb
cwtl
sbb
cs
dec
pop
loope
fistl
add
inc
cmp
or
xchg
leave
cltd
xchg
fwait
sbb
jge
inc
loopne
push
push
adc
mov
mov
fs
dec
jmp
sub
sub
pusha
in
sub
into
cmpsl
jmp
jg
inc
mov
out
xor
test
mov
jno
and
mov
inc
pop
out
push
stos
fdivrs
rcrb
aad
add
in
lods
inc
push
fcomps
jmp
mov
andl
cmpsl
shll
xchg
enter
dec
jnp
rorl
fwait
add
mov
negb
aam
jae
stos
cs
jg
adc
fstps
imul
pop
cmp
jge
adcl
inc
leave
out
mov
fimuls
mov
rclb
repz
xor
mov
loop
out
leave
xor
mov
xorl
jns
leave
imul
data16
xchg
add
int
test
lret
neg
aam
add
or
aas
test
adc
mov
pop
adc
ret
mov
in
inc
cmp
scas
xchg
outsb
push
mov
push
loope
daa
jle
clc
adc
into
repnz
xchg
or
xchg
or
fnstcw
mov
add
dec
inc
mov
fbstp
test
cmp
cmc
cltd
lods
fcmove
sub
out
enter
adc
jnp
nop
idiv
pusha
in
xor
or
sbb
dec
fcomps
push
mov
mov
sub
sbb
in
push
add
pop
or
jecxz
adc
mov
outsl
lcall
pop
or
fisttpll
dec
shlb
pop
fidivrs
testl
mov
jmp
aaa
pop
out
adc
test
test
lods
cmp
std
addr16
scas
adc
mov
scas
insl
push
js
repnz
push
mov
xor
xchg
das
jmp
push
js
dec
pop
mov
stos
mov
xchg
sbb
and
xchg
stc
sti
and
jp
cmp
scas
jnp
es
data16
fildll
cmc
or
lds
lret
cs
xor
mov
cmp
pop
xchg
cmc
xchg
sub
cmp
pop
sub
leave
shrb
mov
adc
data16
rcrl
stos
insb
pop
push
xchg
mov
sbb
inc
mov
repnz
and
mov
scas
jae
or
push
insb
inc
mov
dec
xchg
sub
add
scas
cmp
push
aam
icebp
mov
sub
mov
jnp
data16
sub
enter
or
mov
arpl
movsl
xor
ret
call
fs
cld
repnz
shlb
aad
es
or
xchg
lret
sbb
popa
pop
lcall
enter
in
mov
jle
mov
push
sbb
xchg
loopne
movsl
lahf
shrb
insl
stos
jns
and
push
jge
outsb
mov
cmc
jge
repz
test
mov
testb
push
js
push
cmp
test
pop
orb
mov
lods
pop
sub
test
mov
sub
iret
int3
in
xor
inc
and
push
push
mov
inc
ss
cltd
les
or
sub
push
jo
inc
aaa
push
adc
test
jge
mull
mov
sub
sub
outsl
outsb
jp
std
pusha
push
inc
xchg
ds
sbb
scas
cwtl
jae
mov
je
push
dec
imul
lock
xchg
arpl
outsl
dec
cmp
ja
fs
cmp
in
jge
cwtl
ljmp
test
das
hlt
xchg
jbe
in
shll
mov
adc
cwtl
hlt
out
outsb
rclb
fdivrs
jp
lods
and
or
repnz
sub
cwtl
imul
ds
push
push
xorb
xchg
sub
and
mov
xor
js
loope
add
divl
push
inc
sub
stos
mov
add
inc
push
push
inc
adc
jne
mov
inc
push
rep
or
jmp
push
push
mov
ljmp
jg
mov
push
dec
std
scas
bound
xlat
mov
xchg
adc
xchg
lock
xchg
mov
mov
mov
rorb
scas
ret
mov
xor
icebp
out
es
mov
cltd
pop
sub
inc
in
push
mov
int3
je
fcmovne
pushf
ljmp
xlat
dec
in
shl
adc
xchg
sbb
mov
xchg
jmp
inc
pop
lods
push
push
cmp
dec
xor
mov
popa
enter
stos
mov
fcomps
aam
dec
xor
mov
aaa
xchg
test
fcomi
ja
cmpsl
in
cmp
add
sarb
mov
es
mov
or
sub
icebp
xor
push
ficoms
mov
jl,pn
mov
mov
imul
int
push
push
jg
out
pusha
out
xor
or
cmp
jmp
xchg
std
inc
or
fisttpll
test
sub
xor
stos
jg
push
mov
sti
sahf
push
ja
inc
push
out
and
mov
clc
adcb
mov
xchg
mov
movsb
out
cmp
cmc
add
inc
std
xchg
dec
add
fwait
pop
mov
xchg
mul
xor
shll
repz
push
inc
pop
ret
xor
adc
cld
pop
lea
lock
sub
add
ret
or
mov
mov
mov
cmp
fistl
lea
outsl
xor
or
das
cmp
cmpsb
loope
gs
and
ja
sbb
jnp
pop
sub
loop
xorl
icebp
addl
jno
fisubs
ret
rcrb
scas
add
aam
ljmp
out
and
xchg
dec
push
stc
jl
hlt
pop
mov
lods
lret
inc
scas
fildll
insl
scas
outsl
int
mov
aas
jns
cwtl
push
fstpl
push
jo
xchg
rcr
mov
ss
adc
or
mov
xchg
cmp
testb
xlat
fsubrl
adc
mov
xlat
sarl
out
testl
push
shrb
xchg
jo
icebp
sub
push
arpl
daa
push
mov
orl
fidivrs
sti
push
or
mov
int3
imull
testb
pushf
in
addr16
cmpsb
mov
push
arpl
in
pushf
es
int3
pusha
out
stos
cmpsl
fsubl
cmc
shl
and
rorl
nop
jns
lock
sub
sub
mov
mov
inc
and
push
lahf
sub
xor
mov
shlb
outsl
jmp
sub
nop
mov
or
mov
adc
fsubr
xchg
cmc
fwait
aad
xlat
xorl
imul
cmp
into
and
dec
cmp
pusha
and
push
xchg
jae
dec
scas
cmp
jl
add
or
movsl
xchg
adc
stc
jmp
cld
in
inc
hlt
xor
mov
xor
sub
scas
cltd
sbb
and
or
mov
in
and
rcl
notb
adc
adc
jecxz
mov
jle
fildl
fistpll
push
addr16
jge
ja
pushf
mov
jl
push
inc
fistl
es
fnsave
mov
jmp
mov
jmp
or
sti
adc
stos
xchg
xchg
adcb
jmp
cmp
dec
jo
cltd
xchg
xlat
push
sbb
insl
inc
inc
pop
fdivrl
rorl
shl
push
mov
shrb
pop
add
out
call
jl
or
int3
inc
push
pop
idivl
test
shl
xlat
jg
iret
popf
inc
mov
mov
lods
jmp
mov
and
or
ja
pusha
fxch
fldl
cli
mov
mov
popf
mov
mov
loop
xlat
push
das
popf
clc
mov
fidivrl
pop
fs
int3
adc
ds
xor
decl
stc
stc
jne
sub
fistl
sub
add
movsl
imul
add
or
mov
jbe
popf
fimull
xchg
mov
xchg
ret
es
pop
pop
add
xchg
daa
into
dec
sbb
pop
ds
lcall
aad
fcmovne
addb
in
imul
test
fidivs
pop
movsl
les
outsl
jl
movsb
mov
xor
stc
mov
dec
subb
lret
in
dec
fcmove
or
lds
ret
insb
sbb
adc
and
dec
add
fs
inc
mov
push
sbb
cmpsl
js
adc
repz
mov
clc
jae
test
xchg
mov
adc
jae
rorb
lock
cwtl
or
stos
cmp
insl
jl
inc
mov
aad
shll
repnz
in
mov
mov
push
push
cmp
test
mov
loope
dec
dec
mov
scas
fldcw
shlb
and
int
mov
cmc
lea
data16
fmull
sub
xchg
add
xchg
lret
inc
sti
inc
int
sbb
sbb
sbb
jmp
inc
add
cmpsl
scas
fs
cmpsl
fidivs
popf
mov
jb
les
verr
adc
cmpsb
inc
adc
mov
xchg
lret
orl
mov
add
inc
or
adc
xchg
enter
inc
lcall
push
push
xchg
xchg
and
cmpsb
push
fsubr
mov
das
xor
mov
pop
flds
mov
inc
sbb
pop
push
mov
loop
mov
gs
icebp
pop
fcomps
into
arpl
pop
das
pop
and
add
sarb
mov
cmpsl
push
out
repnz
ror
shrb
sbb
xor
fdiv
jnp
push
inc
xlat
pop
insb
pop
sub
push
dec
in
sbb
leave
into
shrb
xchg
scas
or
pop
xchg
xor
lea
jl
scas
addb
mov
test
xor
repnz
lcall
sub
push
and
movsb
mov
cmp
sub
in
mov
mov
lret
ljmp
shl
xor
das
and
aam
or
push
mov
mov
outsl
push
dec
push
push
mov
mov
xor
fnstenv
push
adc
sarl
sbb
cmp
push
mov
fwait
mulb
sbb
lods
cmpsl
mov
rcll
mov
jns
and
jo
ret
mov
push
mov
insb
fadds
and
ret
xorl
cmpsl
dec
ja
jnp
sbb
mov
add
outsl
mov
js
fwait
lods
add
sbb
mov
and
leave
inc
push
add
mov
jp
dec
dec
sbb
mov
loopne
mov
xor
pop
fs
mov
stos
xchg
mov
repnz
adc
lahf
sub
sub
cltd
scas
int3
or
stos
adc
adc
mov
xchg
mov
adc
dec
dec
mov
mov
rcr
sahf
inc
fwait
adc
sbb
stos
add
stos
sbb
or
push
or
mov
sub
cmp
sbb
push
xor
push
mov
enter
and
or
scas
mov
jns
lods
mov
adc
fidivl
es
cmp
dec
nop
test
cmc
mov
push
arpl
sbb
mov
std
out
outsb
mov
pmaxub
mov
push
push
jne
imul
pop
push
testl
hlt
negb
stc
dec
daa
sub
fucomp
adc
inc
out
stc
ja
pop
pusha
mov
mov
aad
pop
stos
sub
cli
push
xchg
rcrl
cmpsl
mov
int3
in
and
je
adc
in
lock
es
jnp
sbb
cmpsl
or
pop
push
mov
arpl
mov
insl
push
jecxz
js
in
pop
jns
outsb
push
lock
aam
test
xor
dec
movsb
call
addr16
inc
enter
mov
push
iret
push
push
and
jp
jmp
mov
in
sahf
mov
clc
ds
xchg
outsb
mov
xor
pushf
adc
adc
xor
outsl
in
jae
xor
stc
pop
fisubrs
sub
sub
sbb
pop
jle
insb
ucomiss
inc
imul
cli
lods
mov
xor
outsl
jae
xor
mov
cmp
xor
adc
cltd
push
fcompl
sub
aam
mov
popf
jl
fiadds
pop
mov
fimull
adc
mov
mov
jecxz
adc
fs
out
dec
loopne
jg
nop
loope
jmp
sbb
mov
unpckhps
lret
and
fildl
and
xchg
push
jge
pop
mov
inc
test
aas
adc
gs
add
mov
mov
cmp
add
xor
js
pop
or
nop
shll
notb
pusha
data16
sub
cltd
push
xchg
xor
aas
lds
jge
mov
mov
cmpsb
hlt
test
idiv
push
add
and
push
enter
add
dec
push
lods
jmp
ja
mov
frstor
add
xor
mov
mov
adc
aas
insb
movsb
in
pusha
xchg
ds
push
in
add
fimuls
gs
fstpt
int3
les
movsb
fcmovbe
and
movsb
sbb
sub
out
xor
xchg
add
sub
hlt
rorl
in
movsb
jl
cld
mov
mov
imul
adc
notb
mov
xchg
shrb
pushf
icebp
cmpl
add
inc
push
mov
inc
lds
lds
lock
mov
jmp
test
movsb
icebp
loopne
add
fwait
sbb
testl
ret
cmp
and
shll
aas
hlt
xchg
and
mov
xchg
and
pop
scas
xchg
popf
movsl
dec
repz
cli
pop
or
and
xor
rclb
cmp
lahf
icebp
push
das
and
ss
sarl
mov
jae
jmp
add
roll
pop
and
mov
lret
pop
jg
mov
cmp
mov
jecxz
xor
popf
pushf
shrl
xor
and
mov
lds
mov
aas
xchg
inc
adc
outsb
fwait
lahf
dec
shll
fstl
outsl
adc
sub
push
pop
insb
lods
lret
push
in
pop
loopne
stos
mov
pop
in
add
and
sbb
mov
inc
sbb
adcb
sub
push
push
arpl
xor
fcompl
fsubrl
lds
inc
dec
cld
xchg
dec
nop
addl
out
popf
fistl
dec
stos
adc
mov
mov
cmp
xor
lret
push
dec
xchg
jle
jmp
mov
nop
iret
and
int3
add
jns
pop
and
or
lcall
adc
mov
pop
mov
data16
aam
push
gs
hlt
fwait
sbbl
xchg
addr16
rorl
xchg
pop
adc
sub
lea
cld
xlat
cli
scas
fs
stc
push
push
cli
popa
push
sbb
jno
addb
sub
pusha
icebp
sbb
scas
daa
sub
inc
pop
and
sub
jae
push
ljmp
dec
pop
jb
movsb
test
adc
int3
or
xor
and
rolb
in
push
pop
adc
adc
pop
lret
mov
divb
pusha
mov
mov
dec
lock
dec
icebp
rcrl
stc
adc
jne
jb
or
cmpsb
fs
or
xchg
inc
inc
hlt
movsb
stos
addb
stc
pop
adc
call
fs
out
dec
loop
sub
es
adc
sub
int
push
iret
jnp
add
scas
mov
sbbb
push
popa
add
loop
inc
mov
pop
inc
imul
push
lret
pop
xchg
push
rclb
sbb
adc
lea
idivl
sbb
ret
jno
push
cmp
mov
or
sbb
add
sub
divl
fidivs
rolb
je
add
pop
pop
pop
sbb
cmp
cmc
sbb
sub
lret
mov
pop
fistps
add
rorb
repz
lock
cld
dec
pop
leave
mov
and
shrb
clc
jo
adc
ror
add
adc
mov
add
jg
dec
inc
adc
mov
inc
jl
mov
rcll
fdiv
test
jge
and
push
mov
sub
push
lock
loope
adc
inc
cmpsb
jle
jp
inc
push
jmp
sub
dec
aad
outsl
aas
mov
push
add
jge
push
shll
imul
in
shlb
jl
hlt
and
ret
mov
push
inc
xchg
inc
dec
pop
outsl
pusha
inc
xchg
cmc
loopne
and
int3
repnz
jge
aaa
dec
and
pop
jne
insl
fstpt
jnp
or
sbb
xchg
pop
push
fldt
aas
lds
xlat
repz
mov
js
cli
xlat
sub
xor
xchg
add
sub
sub
popa
adc
outsb
inc
mov
inc
and
cmp
jbe
dec
push
mov
or
test
mov
adc
aaa
popf
xor
shr
pusha
repnz
jp
scas
je
ds
mov
inc
or
push
pusha
cmp
jge
push
xchg
pop
repz
and
in
jns
jbe
in
sbb
inc
addr16
jmp
jns
pop
bnd
leave
faddl
pop
js
ljmp
sbb
cld
daa
stos
in
popa
push
cmpsb
cmp
jne
fildl
mov
jno
mov
jge
dec
add
adc
push
inc
outsb
mov
pop
pop
fstpt
dec
shll
flds
mov
add
and
adc
dec
rcr
out
movsl
clc
sbb
push
sahf
es
jle
push
gs
pop
jb
aas
jge
add
mov
rcl
mov
xor
inc
dec
dec
rorl
add
dec
dec
add
push
mov
sbb
ja
or
fldl
adc
push
dec
ja
jp
sub
sbb
xor
es
mov
xchg
dec
cltd
mov
adc
loop
dec
mov
ljmp
push
mov
pop
mov
cmp
sub
cli
cmc
dec
mov
inc
adc
lods
les
pop
cmp
pop
hlt
bound
jmp
mov
jmp
cwtl
inc
mov
adc
add
sbb
push
imul
add
je
push
mov
xchg
pop
dec
fldcw
cli
dec
xchg
or
push
mov
jae
sbb
fcmovnu
push
mov
pop
pop
mov
add
addb
popf
fcmovu
xor
inc
xor
pushf
sub
lret
cmp
lahf
into
outsl
xchg
dec
mov
sub
mov
mov
jb
cmpsl
jae
movsb
jo
mov
flds
test
test
xlat
dec
dec
cmp
add
inc
mov
push
orl
inc
loopne
jmp
bound
xchg
mov
inc
push
fsubl
xchg
nop
lahf
enter
enter
mov
and
cltd
mov
mov
jb
cmc
shl
mov
add
test
sti
cmpsl
mov
mov
and
leave
mov
rcll
cld
addb
leave
cmp
xor
fs
xchg
lds
mov
jb
or
sub
stos
leave
loop
inc
mov
int
push
mov
dec
pusha
gs
pop
stos
std
ljmp
mov
push
xchg
push
or
jecxz
sub
mov
les
ret
popa
mov
mov
cld
pop
pushf
orl
pop
lock
xor
aas
fdivr
cwtl
push
inc
pop
adc
testl
ror
lods
sub
xchg
mov
push
ficoml
cmp
fdivl
nop
pop
pop
dec
outsb
xchg
popa
jl
icebp
xorb
or
sub
xor
xchg
jae
cli
or
xchg
xchg
in
jle
push
out
mov
into
push
adc
sbb
jmp
sbb
mov
movsl
mov
sbb
lahf
ja
dec
adcl
jns
aam
pop
jns
int3
lret
loopne
ret
mov
sbb
clc
lea
mov
mov
cmc
int3
lock
add
push
mov
aas
adc
test
fsub
mov
sub
lret
jge
stc
mov
mov
pop
in
arpl
pop
out
addr16
mov
adc
lds
dec
das
stos
dec
mov
mov
int3
mov
gs
test
test
jecxz
fsubr
jb
ret
imul
stc
push
pop
xchg
xchg
mov
pop
and
sbb
leave
sti
inc
outsb
faddl
ss
pop
sti
mov
repnz
jl
jge
or
cmp
adc
adc
mov
aad
dec
dec
inc
add
subl
pop
in
ljmp
inc
pop
jle
pop
andb
lods
pop
stos
lret
in
popf
imul
push
pop
dec
mov
arpl
or
pusha
xor
fbstp
outsl
add
gs
ljmp
sarl
sahf
test
cltd
and
stos
aad
dec
rol
xor
and
in
jb
leave
pop
testb
lahf
mov
and
jbe
push
inc
xor
neg
mov
xchg
xor
hlt
xor
sbb
stos
mov
addr16
xor
stos
mov
mov
mov
mov
ljmp
sub
inc
mov
sbb
data16
add
ljmp
insb
leave
cmp
adc
cwtl
mov
jno
mov
dec
xor
cmp
dec
in
lock
sbb
fcomps
lahf
jmp
inc
mov
in
jmp
xchg
andb
loop
and
ret
push
loope
jnp
out
lods
inc
std
xor
sbb
pop
repz
xor
clc
mov
inc
les
xchg
sub
in
ret
imul
cmp
ss
xchg
jmp
popa
hlt
rcl
push
cld
mov
stos
shlb
mov
das
inc
xlat
xchg
push
out
sbb
lock
adc
imul
shl
mov
jae
add
mov
rcll
adc
insl
or
outsb
cmc
out
dec
cmc
aam
cmp
jl
pop
jmp
inc
enter
sar
dec
icebp
sbb
mov
pop
pop
fistps
arpl
lock
sarb
in
mov
pop
or
xchg
fwait
mov
push
lret
dec
pusha
mov
stos
cs
test
repnz
pushf
into
ds
stos
imulb
jo
jne
mov
jl
outsb
add
out
mov
bnd
jge
adc
inc
jmp
rorl
out
cs
shl
movsl
push
fsubrs
jmp
in
inc
ret
lcall
outsl
and
mov
test
mov
sbb
xor
fs
std
data16
sub
mov
filds
rol
cld
inc
jno
int
or
pop
and
std
jb
fstpl
cmp
mov
popa
cwtl
adc
cmp
stc
nop
stc
orb
jl
add
mov
daa
stc
cld
lods
inc
clc
lods
test
mov
ss
xor
cmp
add
jl,pn
xchg
pop
pop
cld
clc
insl
push
out
pop
xchg
lret
js
inc
cltd
mov
shl
inc
inc
mov
mov
lods
scas
clc
outsl
dec
outsb
sub
inc
stos
ds
lock
sbb
cvtpi2ps
cmp
jg
pusha
mov
jp
cmpsl
xchg
sub
out
add
and
pop
xchg
arpl
jle
int
loop
sbb
mov
dec
dec
enter
loop
mov
jecxz
inc
fisttpl
lods
setb
push
rcll
or
sbb
out
inc
and
lcall
mov
fs
sbb
les
jl
or
cs
outsb
nop
lods
fimuls
ja
push
and
mov
jb
flds
mov
lods
loop
notb
jns
pop
inc
popa
aad
mov
test
sbb
adcl
dec
ss
lret
int
js
in
adc
push
fisubl
out
enter
sub
fsubs
test
pop
push
pusha
js
rcl
xlat
loopne
jae
fs
sahf
xchg
jl
sbb
xor
data16
std
in
sahf
pop
ret
cmp
adc
loop
lcall
mov
xchg
inc
or
jmp
ret
mov
loop
shrb
out
fisubl
dec
adc
adc
mov
les
movsb
or
adc
inc
fsubl
stc
mov
hlt
inc
pop
and
mov
cld
fbstp
aam
jne
pop
pop
loop
pop
cs
jne
push
push
xchg
xchg
mov
or
rcl
jp
mov
mov
push
fildll
sti
test
in
xchg
fcompl
mov
leave
lods
jg
inc
mov
mov
pusha
xchg
mov
mov
push
decb
mov
push
or
fists
mov
pop
mov
push
arpl
jne
hlt
jecxz
std
test
inc
sbb
imul
jo
inc
rol
xor
loopne
jbe
scas
mov
std
cmp
roll
icebp
and
xchg
data16
test
scas
fwait
scas
adc
or
outsb
adc
push
fildl
les
and
aaa
inc
int3
aad
jge
dec
xchg
lret
jb
xchg
sbb
fisttpl
movsw
pop
push
pushf
sbb
mov
cmpsl
ljmp
adc
shlb
mov
cmpsl
shlb
jecxz
sbb
rol
cmp
in
jnp
fnstsw
push
mov
out
dec
daa
fs
arpl
sub
inc
gs
ds
xchg
mov
cmp
cli
adcl
xor
xchg
imul
addr16
pop
jb
mov
mov
int
pop
jp
mov
inc
fdivrs
sbbb
adc
sbb
in
add
insl
fcmovnb
mov
xor
mov
xchg
stos
and
mov
cs
cmp
cmp
push
and
imul
add
inc
push
sbb
mov
jecxz
mov
lcall
pop
test
paddb
arpl
shlb
push
add
jne
divb
std
cmc
aad
out
mov
sbb
dec
dec
data16
pop
aas
add
mov
lcall
mov
pop
cmpsl
ds
inc
test
xchg
and
sahf
pop
pusha
aaa
movsb
xor
xchg
mov
sub
xchg
out
or
push
jno
idivb
int3
sub
rcr
mov
ret
testl
ret
mov
or
xchg
repnz
push
ret
mov
push
or
aaa
pusha
sbb
lret
das
cmp
ss
test
mov
mov
lods
pop
adc
inc
aas
out
inc
and
fdivrl
xchg
mov
loopne
inc
fs
notb
jl
push
scas
fdivl
mov
rcrl
dec
mov
jne
add
lds
lret
jg
fs
test
xchg
or
xor
xchg
sub
fisttpl
mov
lret
push
mov
lea
hlt
aam
pop
addr16
aaa
mov
in
movsl
sub
nop
mov
push
repnz
insb
pop
inc
xchg
loope
inc
addr16
popf
xor
mov
xlat
cmp
int
xchg
icebp
fisttpl
fwait
pop
fcomip
cli
imul
mov
out
mov
imul
lods
popf
adc
jns
pop
adc
in
addr16
ret
movsl
cmp
repnz
adc
test
add
in
push
adc
sub
mov
adc
push
push
jb
inc
or
lods
push
jp
mov
sbb
mov
mov
mov
add
sub
and
pop
mov
hlt
add
mov
push
fistpl
repz
test
mov
jae
gs
lret
cli
shlb
or
or
int3
repnz
mov
sbb
dec
sbb
push
clc
popf
inc
dec
or
jg
pop
xor
mov
mov
and
stos
mov
add
push
ret
ret
ret
loope
out
test
into
xchg
fsubrl
cmp
shr
or
fld1
cmp
out
int3
out
pushf
pop
dec
pop
adc
xor
xor
mov
shl
xor
add
cmp
sub
cmp
mov
mov
push
xorl
loop
mov
mov
rorb
out
popf
mov
mov
ret
dec
pop
xor
cmp
mov
cmp
fstps
hlt
stos
push
mov
inc
jne
roll
movsl
test
movsb
imulb
ja
xchg
arpl
insw
out
sub
mov
add
out
in
out
ret
push
movsl
xchg
cmp
pop
jnp
dec
xorl
test
dec
cmp
mov
push
in
fucom
dec
pop
cmpsl
pop
fwait
mov
fiadds
repz
test
scas
test
cmp
adc
pop
test
dec
out
or
icebp
mov
shll
roll
pusha
das
jl
dec
push
ror
adc
add
mov
lcall
dec
and
aad
and
out
sarl
ret
mov
or
inc
test
enter
jle
sbb
fbld
mov
mov
mov
push
mov
jecxz
rcrl
push
aas
shrb
lret
jmp
cmp
fdivr
add
in
xor
xor
fstpl
adc
inc
pop
clc
les
xor
arpl
shrb
cmp
dec
inc
mov
and
sub
clc
rcrb
jg
sub
int3
mov
insb
push
cmp
mov
sub
hlt
xchg
mov
filds
js
fs
popa
push
in
int3
inc
pop
jmp
je
stc
jne
pop
lods
push
pop
enter
orb
push
ds
dec
clc
push
test
cmp
cli
pop
out
adc
and
ja
mov
pop
mov
xor
xor
les
inc
bound
mov
jecxz
dec
add
stos
cmp
jne
cmpsb
add
in
add
mov
sbb
push
outsb
dec
loop
out
arpl
cmp
adc
and
jb
xchg
push
jbe
repnz
or
add
loop
xchg
pop
and
aam
mov
int
sti
hlt
in
test
mov
sarb
scas
nop
pushf
dec
jae
sarb
push
xor
push
fs
bound
sbb
rorb
mov
push
pop
and
xor
in
adc
or
jle
mov
push
les
in
lret
add
lahf
sub
add
jb
xor
sub
je
xchg
clc
call
ljmp
adc
jb
mov
or
in
iret
xorb
out
pop
sbb
cmpsb
ret
iret
sub
negl
arpl
shlb
out
push
outsl
mov
mov
push
mov
cmp
aam
imul
jg
jbe
dec
jmp
loopne
push
cltd
and
pop
test
fwait
repnz
jbe
push
setb
and
push
jb
jge
loop
aam
aam
and
add
pop
leave
fwait
push
xlat
fdiv
mov
leave
lret
pop
xor
sbb
ds
icebp
dec
test
sub
pusha
dec
mov
mov
lods
mov
fwait
push
fisubs
stos
dec
mov
xchg
movsl
dec
js
imul
je,pt
popl
gs
dec
pop
xor
cmp
fwait
gs
cmp
gs
test
das
je
adc
jno
iret
jbe
xchg
xchg
enter
mov
outsl
lret
jge
ds
xchg
lock
adc
aas
mov
jnp
jne
cltd
pop
push
xchg
jecxz
jg
je
xlat
leave
or
dec
cmpsl
dec
lret
aas
xor
pop
mov
cmp
ja
cwtl
dec
or
lret
data16
cmp
loopne
adc
sbb
icebp
dec
or
movsb
sub
andb
orb
loop
leave
adcb
inc
push
push
xor
mov
in
jmp
adc
jmp
and
dec
xchg
sbb
add
cs
addb
scas
sub
adc
and
popa
cmpl
stos
pop
in
nop
gs
mov
mov
pop
adc
iret
and
mov
push
leave
sub
rcrb
mov
aaa
sub
gs
mov
enter
fs
xchg
xor
dec
adc
xor
xorb
es
jge
cmp
adc
aam
inc
xor
cli
inc
hlt
lahf
dec
clc
push
xor
ret
and
jmp
leave
xchg
outsb
pushl
insb
push
divb
xor
psubb
popa
xor
mov
xchg
scas
in
nop
xchg
mov
cs
nop
aad
dec
test
sbb
push
scas
cld
mov
pop
fdivs
sbb
mov
mov
shrl
push
mov
add
adc
shlb
adc
sub
ret
movsl
inc
cmc
and
fdivl
jns
loopne
push
mov
scas
lret
push
sbb
inc
jo
add
mov
out
sub
mov
jle
aam
jmp
pushf
fdivrl
out
cmp
sbb
stos
pop
pop
and
jo
in
add
outsb
jb
int
test
std
je
pop
outsb
xor
enter
add
cmc
sahf
popf
sbb
inc
enter
sub
nop
jo
xchg
xchg
jle
pop
mov
jecxz
jp
push
sbb
scas
mov
inc
testl
cwtl
scas
mov
int3
stc
adc
jb
sbb
lods
leave
sarl
insb
insb
or
fimull
add
js
bswap
jb
sbb
sbb
stc
inc
push
lock
xchg
aaa
mov
xor
push
xlat
cld
rcrl
js
mov
jmp
mov
cmp
in
cmp
sbb
inc
and
insl
imul
rcrb
fcompl
jmp
cmpsl
lock
push
bound
mov
push
inc
jae
pop
and
sti
test
xchg
sbb
test
cli
lods
xor
sbb
or
mov
mov
mov
inc
andl
inc
fildl
push
stos
testl
pusha
sbb
lock
push
aas
inc
mov
pop
jne
dec
xchg
pop
adc
push
add
mov
mov
mov
pop
inc
pop
lcall
sahf
sbb
ja
adc
xchg
call
jbe
sub
dec
fidivs
pop
mov
popa
daa
nop
in
jnp
pop
out
outsb
or
js
std
push
rclb
add
testl
mov
dec
cmp
ja
cmp
adc
dec
fstl
mov
lret
add
out
inc
shlb
insl
xor
sbbl
or
mov
cmp
and
pushf
imulb
or
in
ss
bound
sub
pop
push
and
lods
ret
and
jecxz
or
sbb
stos
mov
pop
jno
idivb
adc
push
push
jo
int3
mov
cmp
loopne
imul
mov
adc
repz
dec
cmpsb
cli
fisubl
movsb
fisubl
mov
addr16
lock
push
fcom
stc
mov
mov
mov
add
mov
and
out
jno
es
arpl
dec
imull
sub
stc
ds
inc
mov
addr16
int
lcall
push
pop
jmp
std
aaa
sub
fwait
mov
and
push
verw
dec
push
pop
mov
jb
into
push
inc
pop
dec
adc
enter
pop
outsl
mov
mov
lcall
pop
cmpsb
dec
pop
pop
inc
cld
pusha
xchg
cs
std
in
lcall
cld
xor
adc
insb
add
scas
out
decl
xchg
adc
sub
stos
sub
ljmp
js
out
adc
nop
xchg
mov
int3
adc
xchg
cmp
mov
inc
mov
out
inc
clc
loop
lea
andl
mov
push
dec
test
out
xlat
mov
push
in
inc
lock
negb
stos
push
fnsave
outsb
inc
push
cltd
pop
cmp
mov
xchg
mov
cmp
loope
cmp
lret
pop
add
sub
cmp
int
stos
ret
cmpsb
fs
mov
inc
stos
ficomps
mov
das
fdivs
push
add
stc
or
cmp
scas
and
sarl
movsb
dec
cmp
xchg
mov
xchg
loop
dec
les
icebp
push
shl
mov
call
movsb
loope
mov
lahf
and
mov
lock
stos
xor
cmp
dec
ljmp
inc
int3
jle
mov
enter
sbb
pop
outsl
imul
ljmp
stos
movsb
pop
stos
mov
enter
mov
pop
or
into
aaa
fnstcw
subb
dec
mov
or
stos
jge
jg
fistpl
rcll
mov
fsubl
and
mov
movsl
cmpsl
jne
fcoml
mov
jmp
sti
pop
ds
jne
push
inc
jne
cmp
cmp
stos
pop
jmp
or
and
js
out
hlt
test
pop
pop
rcll
roll
arpl
add
ss
jmp
xor
daa
mov
push
xor
jge
enter
dec
lret
xchg
pop
mov
or
cli
inc
out
push
xor
jbe
adc
outsb
pop
adc
pushf
hlt
cld
xchg
mov
cmp
cmc
imul
cwtl
inc
sub
ja
cmpb
lret
pop
lods
cmp
scas
out
adc
cmpsl
mov
stos
fistps
mov
ds
dec
inc
add
sbb
mov
aas
mov
cmp
jo
sub
loope
ljmp
cmpsb
fsubrs
push
push
sbb
nop
cmp
adc
hlt
push
sahf
addr16
daa
ficoms
sbb
mov
adc
adc
fstps
shlb
or
cli
mov
push
mov
sbb
popl
and
xchg
sbbl
or
pop
les
jl
mov
das
cmpsb
sbb
sub
mulb
ret
packssdw
and
fdivs
hlt
push
mov
mov
fcomps
je
fldcw
adc
xchg
mov
push
lret
xchg
mov
sub
test
xchg
int
sahf
cmpsl
xor
cmpsb
adc
movsb
imul
cmpb
and
ret
xchg
cli
scas
and
or
outsb
jmp
push
jbe
lea
push
test
jg
push
xor
out
cld
ds
jecxz
mov
cli
leave
mov
test
cmp
mov
popf
lods
inc
roll
push
cwtl
fistl
push
clc
lahf
mov
ret
out
push
mov
pop
adc
sbb
sbbb
xor
inc
lods
jb
call
std
aad
aad
pop
daa
lret
nop
ret
cmp
jp
jbe
ja
dec
leave
sti
not
lock
les
popf
fsubrs
out
sbb
out
cmp
cmpsl
imul
pop
mov
dec
sub
inc
das
push
movsl
filds
pop
inc
in
pop
lds
enter
mul
jae
int3
stos
inc
std
mov
pushf
pop
hlt
je
mov
ffree
sbb
push
xchg
jae
and
cmpsl
and
mov
inc
incb
inc
and
popa
push
cli
mov
xchg
inc
dec
imul
scas
mov
popa
cmpsb
pushf
jns
jmp
fcmovbe
flds
negb
push
pushf
jg
sbb
popa
int
mov
pop
ret
xchg
cmp
les
push
add
mov
sbb
dec
test
inc
notl
push
ljmp
fwait
icebp
push
fsubs
mov
mov
fldcw
sub
iret
or
std
arpl
dec
pop
adc
xchg
pop
stos
out
xchg
out
cs
and
push
mov
mov
shll
dec
push
mov
lock
push
sub
mov
jmp
dec
loop
out
add
xlat
add
dec
pop
pusha
fistl
or
lock
insl
mov
pop
and
pop
in
add
jnp
icebp
jecxz
shl
or
mov
mov
nop
mov
jge
dec
repnz
movsl
jge
dec
lcall
xchg
icebp
pop
int
enter
and
dec
sub
fbstp
xor
scas
ljmp
cli
xchg
mov
std
cmp
add
int3
pop
sub
mov
or
gs
hlt
rolb
imul
sti
cmp
push
fwait
leavew
and
pushf
xor
ss
mov
cmp
dec
jmp
repz
xchg
inc
sahf
call
hlt
nop
or
std
cmp
fnstenv
imul
repz
mov
jge
cli
call
push
inc
or
sbb
lock
and
das
pusha
dec
rorl
test
adc
cmpsl
int3
mov
iret
out
jno
rcrl
inc
mov
cs
popa
inc
sbb
out
inc
push
adcb
add
fst
dec
adc
dec
mov
fsubl
dec
lcall
xor
ficoml
jbe
test
loope
adc
lods
bound
movsl
js,pt
mov
mov
push
pop
out
sbb
push
in
negb
jnp
popf
lcall
data16
lods
fisubrl
insb
andb
lret
jo
fsubr
lods
xor
inc
in
mov
imul
lods
adc
mov
xor
aas
test
mov
fcomps
inc
sub
ja
jg
mov
imul
and
movsb
push
jl
mov
push
scas
das
scas
imul
jecxz
xor
xor
outsb
push
inc
dec
stc
imul
icebp
inc
pop
mov
ja
sarb
mov
pop
test
mov
jle
data16
stc
addr16
mov
lea
cmpsl
jge
in
je
push
jno
jno
cmp
adc
or
push
cmp
xchg
shll
push
xor
sbb
xor
jne
sahf
sbb
xchg
out
sub
std
popf
je
xor
out
pop
popa
lock
das
icebp
mov
xor
fdivrl
mov
xor
add
std
xor
popf
or
fcoms
lret
fsubs
push
in
pop
gs
add
mov
xchg
stos
jmp
dec
shl
pop
sarl
mov
movsl
aaa
scas
inc
inc
jb
out
imul
jb
hlt
test
ljmp
xchg
fnsave
arpl
scas
pop
pop
mov
jne
fcomps
in
xor
pop
sti
fcompl
cmp
or
cmp
add
dec
push
movsb
and
popa
sbb
xchg
or
push
add
fisttpll
inc
in
and
cwtl
idiv
jno
xchg
int3
leave
lcall
mov
mov
push
push
inc
mov
mov
dec
sub
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
ret
push
mov
movsb
add
inc
xchg
dec
lret
call
neg
add
stos
outsl
decl
inc
shl
insb
mov
ficoml
pop
push
dec
or
insb
adc
outsb
sbb
xchg
push
js
jns
adc
leave
mov
jb
mov
lret
test
mov
or
push
imul
sbb
jns
popl
add
scas
ljmp
dec
in
or
pop
dec
mov
mov
dec
push
mov
push
arpl
cmp
sub
mov
adc
mov
inc
test
xchg
sbb
xchg
imul
push
jnp
pushf
loopne
jb
push
mov
cmp
fwait
cmp
mov
push
push
lea
adc
and
jne
add
add
ret
sahf
dec
jmp
mov
hlt
mov
mov
xchg
xor
or
inc
xor
insb
popf
pop
addb
fdivrl
rorl
notl
aad
leave
push
lahf
subl
jb
pop
imul
imul
xchg
test
lret
and
fimuls
sbb
aaa
movb
nop
mov
ret
stos
out
sbb
lock
mov
add
xlat
xchg
out
adc
inc
jns
jle
out
xchg
leave
bound
loopne
stc
fistl
in
add
jecxz
imul
jb
cmp
loope
insl
ja
cmp
fisttpl
cmp
adcb
movsb
sbb
ja
dec
test
das
das
sbb
lock
adc
ds
push
popa
call
sarl
push
jmp
jmp
les
jg
outsl
sbb
and
jmp
fldcw
cltd
stos
xchg
std
cs
mov
xchg
dec
pop
aaa
sbb
mov
pop
mov
lods
insb
out
dec
xchg
fwait
out
cs
out
pushf
outsl
and
sahf
leave
inc
xchg
xchg
sbb
in
push
test
outsl
pop
or
add
cmp
out
popa
lea
adc
lods
repnz
aas
xor
mov
or
test
dec
pop
dec
lcall
sbbl
dec
dec
outsl
xchg
insl
jp
and
inc
push
and
xchg
lea
and
jbe
adc
jno
lahf
push
jle
imul
jb
aaa
or
mov
bound
and
pmullw
and
lcall
sbb
rolb
mov
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
