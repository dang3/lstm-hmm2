add
add
push
jo
arpl
add
and
add
adc
add
add
or
add
pusha
add
loopne
jb
jb
add
add
pusha
add
add
or
and
sub
add
icebp
and
iret
dec
xchg
inc
mov
in
inc
daa
adc
daa
stos
inc
push
pop
aam
test
into
test
push
sbb
xorb
ljmp
push
fs
pusha
repz
ficoml
mov
mov
pop
fwait
sub
mov
push
out
xchg
mov
call
lcall
xchg
das
push
pop
scas
cmpsl
and
sub
dec
leave
sub
jbe
test
xor
dec
popf
xor
leave
rorb
cmp
loope
in
mov
jl
imul
out
pop
add
inc
dec
icebp
xchg
push
aam
push
fnsetpm(287
enter
mov
dec
cmc
sub
mov
lcall
and
inc
test
movsl
out
scas
orb
xchg
push
and
sbb
pop
shlb
das
inc
adc
add
cld
je
cmc
in
inc
pop
add
cmp
negl
nop
call
jmp
xlat
xchg
jmp
sub
and
sbb
push
aam
adc
jmp
rolb
inc
lret
xchg
jae
popa
ss
add
les
std
fadd
ret
cmpsb
or
pop
xchg
jmp
mov
out
test
cmp
mov
sub
add
pop
or
in
push
xchg
repz
lcall
dec
adc
ret
repz
das
cmp
xor
or
jns
xlat
mov
adc
ret
sbb
shrl
inc
jl
loope
inc
lods
dec
insl
mov
sbb
xchg
or
jnp
xchg
and
in
out
mov
mov
add
add
mov
cmpsl
jns
ja
lods
and
cmp
mov
pop
jbe
lods
mov
scas
out
sub
pop
sub
out
cmp
dec
stos
cmp
push
xchg
lret
movsb
mov
lods
or
adcl
ficoml
jg
xor
mov
sbbl
cwtl
rorl
std
push
mov
push
in
fadd
out
loope
adc
push
and
add
sarl
shll
pop
jne
mov
mov
or
test
inc
pusha
lret
inc
rorb
stc
in
cmp
out
mov
popa
cmp
outsb
repnz
test
add
idiv
pop
test
xchg
dec
xor
push
or
mov
fadds
or
in
mov
fsubrl
loope
movsb
dec
cltd
mov
sbb
test
xchg
inc
push
and
push
lods
mov
jnp
jb
aaa
mov
dec
jecxz
dec
push
xorl
inc
into
adc
adc
xchg
inc
fildl
dec
adcb
ss
add
shl
dec
sub
sbb
cli
mov
sbb
mov
stc
ja
push
or
sbbb
mov
add
jnp
push
fsubrl
add
idivb
adc
and
dec
jae
push
push
jg
imul
sub
pop
mov
inc
xchg
pop
inc
adc
stc
out
sbb
mov
xorl
sbb
dec
imul
sub
adc
imul
mov
xchg
jl
and
das
js
popa
push
mov
adc
push
loop
jbe
add
cld
lret
js
lea
ds
mov
ljmp
add
arpl
and
sbb
jmp
jge
dec
xlat
ss
or
cvtpi2ps
adc
jecxz
das
int3
or
pop
rolb
xor
adc
xchg
push
and
ja
add
add
stos
mov
pop
adc
clc
lcall
outsl
pop
aad
add
psllq
sbb
mov
cmp
ds
sub
mov
outsl
or
scas
sbb
jae
jo
and
insb
cmp
out
gs
fmuls
or
out
xlat
cltd
outsb
ret
sbb
scas
jecxz
js
or
mov
nop
jne
cmpsb
and
fimull
loope
pop
jge
push
mov
outsb
push
inc
jns
cmpsb
imul
mov
lahf
into
or
inc
les
jmp
arpl
mov
mov
xlat
inc
mov
aaa
dec
sbb
push
push
insl
movsl
dec
mov
cmp
xchg
in
test
pusha
jae
je
cmc
sbb
xlat
aad
stos
xchg
adc
lds
sbb
xchg
dec
fsubr
or
incl
stos
es
lcall
push
aaa
repz
outsb
mov
xchg
fldt
push
test
rcr
mov
sbb
cmc
push
lahf
xor
sub
imul
xorl
lret
xor
dec
and
jp
xchg
jg
sub
push
psrlw
dec
xor
bound
bound
xor
clc
jns
lods
adc
aad
aas
sub
mov
movb
fucompp
je
test
xchg
mov
add
sarl
movsb
data16
lahf
test
outsl
mov
and
push
pop
out
cmc
mov
push
gs
pusha
sbb
cmp
add
adc
cmp
mov
fstpt
in
mov
add
mov
mov
jo
scas
insl
int
jmp
mov
push
or
add
mov
mov
push
addr16
mov
xchg
cmp
pop
mov
sbb
pop
xlat
lret
xchg
mov
or
push
cmpl
ds
out
push
jae
add
push
ficompl
cmp
push
call
mov
mov
inc
jge
cmpsl
cmp
repz
decl
cli
sbb
push
outsb
in
pop
mov
je
pop
loopne
jecxz
in
mov
inc
xor
inc
inc
int3
sahf
jno
std
inc
int3
arpl
xchg
push
pop
xchg
addr16
adc
mov
in
push
aam
stos
sbb
icebp
mov
jne
push
xlat
or
xor
add
jle
pop
or
mov
pop
sub
adc
inc
push
inc
sbb
in
lds
les
leave
jl
outsb
mov
mov
push
push
insb
jge
sub
das
xchg
and
push
stos
loopne
jle
mov
xchg
daa
add
or
aad
jle
shll
nop
cmc
rolb
cmp
adc
mov
mov
orb
addr16
pop
data16
sbb
in
cli
cmp
jae
mov
sbb
adc
mov
leave
sub
out
lock
xchg
jo
jmp
test
or
shrb
ficoml
fmuls
fcomps
adc
sahf
add
sbb
push
jns
stos
pop
mov
xchg
in
mov
lahf
pop
and
xchg
pusha
ljmp
adc
pop
aaa
jbe
repnz
sbb
ficoml
mov
lods
mov
repz
pop
mov
adc
into
pop
lcall
lea
xchg
jge
stos
ljmp
jns
dec
shl
fiadds
jmp
cmc
out
cmpsb
push
fsubrs
mov
mov
xchg
lret
jg
or
cmp
push
inc
das
jns
add
outsl
cmpsb
sahf
and
jecxz
cmpsb
mov
fs
fsubrl
fisubs
les
jg
out
das
or
adc
arpl
rcrl
in
insb
mov
jno
add
sub
imul
imul
int3
adc
out
pop
mov
mov
cmpl
cmp
mov
sub
xorb
push
jge
arpl
jb
fsubs
mov
fdivrl
inc
cmp
pop
xor
leave
mov
jle
aam
repnz
fistpl
out
test
rorl
sub
add
pushl
ret
test
mov
push
insl
cmp
inc
adc
mov
lret
push
pop
push
pop
xchg
es
lahf
scas
cs
insb
in
mov
mov
lcall
ljmp
daa
mov
dec
push
xor
pop
leave
or
lahf
jge
add
xchg
inc
jno
cmpsl
fnsave
dec
repz
adc
dec
sbb
dec
jbe
pop
lods
js
jg
xor
adc
mov
sub
dec
sti
add
fisttps
repz
data16
shll
data16
into
repz
out
leave
outsb
pop
movsb
mov
fstpl
adc
clc
push
popf
decl
aas
in
sbb
imul
cmp
clc
pop
push
in
inc
ja
outsl
cld
cmp
mov
xor
jle
mov
pusha
pusha
aaa
daa
sbb
cmc
xchg
jno,pn
adc
div
cmp
push
cli
dec
jge
cli
rclb
sbb
jnp
loope
jnp
aad
stos
and
xor
and
ja
ja
lret
and
sub
aad
rol
andb
xor
xor
adc
sub
in
adc
cmp
int
js
hlt
xchg
lock
shll
mov
inc
int
into
inc
cmp
mov
push
sbb
cmp
dec
xchg
mov
cmp
cli
std
sub
lea
sti
andl
notb
inc
ljmp
mov
cs
inc
inc
push
imulb
mov
stc
aad
outsl
adc
push
cmp
imul
pushl
adc
jno
or
sub
mov
insl
addb
sbb
lods
or
mov
xchg
fbstp
adc
cmpsb
ljmp
xchg
popa
enter
mov
addr16
fsubp
xchg
xchg
movl
adc
loop
sahf
or
sbb
popf
movsl
ret
negl
ret
das
pop
sarb
xor
push
sbb
xchg
jno
test
jmp
inc
dec
push
xor
and
mov
cmpsl
cld
lret
out
mov
xlat
and
ss
mov
add
ret
adc
inc
mov
mov
js
mov
lret
or
decl
adcl
in
loopne
jl
or
sbb
mov
mov
jns
jmp
aas
cmpl
test
ljmp
es
mov
testl
pushf
xor
ja
aaa
rcll
ds
adc
shlb
out
clc
xor
mov
adc
sti
sahf
jo
pushf
jecxz
fidivrl
ret
jge
push
jb
xor
add
sbb
fsubrs
repnz
popf
mov
sar
jecxz
jno
filds
jmp
mov
fidivl
movsb
ljmp
and
cwtl
fdivp
out
push
add
and
xchg
fwait
mov
lret
jle
insb
jb
push
aam
divb
xor
inc
in
jmp
or
loop
lds
dec
jle
inc
inc
sarl
sbb
or
shrb
pop
mov
sbb
fs
cmp
in
cmp
xchg
adcl
fwait
adc
aad
xor
inc
cmc
xor
adc
xchg
fstpl
xchg
gs
mov
add
stc
xor
mov
fsubl
mov
xchg
lret
stc
xchg
adc
arpl
push
push
sbb
or
testl
insw
dec
test
mov
mov
test
sbb
push
lahf
in
sbbb
adc
dec
dec
push
jne
clc
es
stc
fidivl
or
or
aad
mov
adc
cmp
push
jl
and
cwtl
push
xchg
mov
dec
lock
cs
push
mov
xchg
mov
jne
lock
add
mov
out
sbb
das
mov
cmp
mov
in
mov
sbb
mov
dec
adc
xor
outsl
lahf
pop
add
sbb
push
fwait
loope
pusha
push
fwait
cmpsl
int
gs
cmp
fs
fcomps
xor
inc
xchg
or
loop
aaa
pop
xor
fdivrl
cmpl
add
push
jmp
sbb
loop
out
xchg
inc
xorb
sbb
and
fnstenv
call
loopne
and
imul
fiaddl
mov
push
inc
jle
dec
jl
jl
mov
scas
cmpsb
mov
sbb
popf
rcrb
pusha
popf
lret
sbb
pop
repz
sub
pop
loope
pop
sub
mov
sbb
das
test
jge
cmp
dec
or
xor
loopne
cltd
sti
lcall
pop
mov
daa
int
sub
cmp
jmp
inc
push
rcr
shl
roll
mov
insb
sbb
dec
imul
xchg
out
and
insl
stos
lret
mov
mov
mov
adc
add
daa
daa
and
mov
mov
andl
cmp
xchg
repz
or
and
and
adcl
mov
cltd
lret
fiaddl
cmp
xchg
xor
and
inc
shll
cld
scas
stos
xchg
dec
int3
dec
mov
daa
xor
sbb
fidivs
mov
dec
scas
mov
add
in
push
in
sbb
mov
lret
imul
enter
pusha
xchg
movsl
outsb
push
xor
repz
jo
xchg
leave
adc
icebp
js
sub
adc
push
or
pop
jbe
lret
dec
add
xchg
cmp
and
inc
shll
add
inc
test
les
and
fidivrs
rcl
fcmovne
cli
mov
into
xorl
push
xorps
sbb
and
dec
ret
aad
jl
es
ret
sbb
jl
ja
adc
enter
insb
inc
sarl
mov
jg
cli
jns
jmp
xchg
xor
fidivrl
sub
daa
jnp
push
test
fmuls
sub
cmp
cwtl
or
fmull
mov
push
push
lea
das
push
add
clc
pop
mov
movsb
lods
inc
fistpll
imul
push
xor
fldcw
mov
xchg
int3
mov
sbb
sub
shlb
mov
add
dec
adc
cmpsl
push
aad
out
arpl
fs
xchg
mov
test
out
dec
shrb
dec
jae
dec
gs
iret
pop
out
inc
xchg
add
insl
orb
cmp
xchg
sbbb
and
cli
push
mov
shr
clc
xor
push
xchg
movsl
daa
repz
jmp
cs
dec
aaa
xor
mov
push
aam
lret
call
mov
mov
and
insb
mov
cmc
ljmp
movsb
in
sbb
xchg
fbld
mov
cmpsl
xchg
clc
xchg
iret
cmp
repz
push
mov
xchg
popf
push
pop
pusha
jno
nop
pop
in
mov
sub
jbe
data16
inc
fwait
sub
adc
and
xor
sub
es
dec
jle
dec
cmpsb
aaa
mov
js
test
xchg
mov
jno
adc
outsb
mov
stos
xchg
xorl
xor
lret
pop
pusha
jae
pop
lahf
pop
outsb
scas
xchg
lock
fcomps
mov
sub
xchg
ljmp
sub
insb
testl
call
outsl
fmull
scas
push
add
xor
pop
sbb
mov
xchg
repnz
adc
sub
dec
xor
sub
pop
sbb
cli
push
push
mov
add
hlt
sub
cmp
xor
imul
and
icebp
mov
ss
or
daa
jnp
or
jne
aad
in
pop
std
sub
sub
xor
mov
pop
cltd
imul
sbb
pop
cmpsl
aam
sbb
dec
pushf
and
or
mov
jne
adc
lcall
mov
imul
cmc
jmp
inc
inc
sbb
xchg
push
loop
loopne
xchg
cld
test
mov
push
mov
fs
push
sbb
xchg
cmp
in
out
sub
dec
andb
insl
loope
and
test
sahf
ss
les
icebp
inc
sub
movsb
mov
leave
mov
cltd
and
movsl
hlt
shll
mov
sub
mov
and
loopne
icebp
xchg
enter
inc
or
pop
hlt
and
dec
mov
testb
sub
or
dec
test
jbe
ret
push
xchg
push
add
adc
mov
lock
lahf
add
adc
mov
fs
into
rcl
mov
pusha
outsb
add
adc
inc
cmp
xchg
sahf
adc
jecxz
cmpsb
sub
add
les
pop
fwait
mov
loope
cmp
jg
cmpsl
xor
je
lods
bound
subb
call
push
jne
push
outsb
rcll
sub
mov
pushf
jmp
stos
push
leave
dec
push
xchg
loop
lock
jp
mov
arpl
jns
sar
popf
jbe
movb
xlat
mov
out
in
test
cmp
sub
jno
lret
lret
cmp
xor
cld
jecxz
lret
pop
test
or
in
test
mov
ja
cmp
add
stos
data16
sub
jne
lock
sub
test
mov
and
les
xchg
loope
imul
inc
sub
loope
xchg
dec
dec
jae
add
mov
ljmp
jp
cwtl
push
jmp
mov
rolb
cmp
jbe
repz
xchg
iret
cmc
pop
add
mov
int3
sbb
in
cltd
sbb
mov
adc
sbb
pop
mov
cmc
inc
jno
lods
mov
sbb
jle
lahf
fsts
shlb
fbld
and
cli
dec
mov
xor
daa
mov
and
mov
mov
lea
dec
inc
fwait
movsb
shufps
inc
orl
in
push
cmp
ficompl
add
pop
jb
sub
sarl
cwtl
adc
jbe
out
sbbl
pushf
or
std
xor
adc
sbb
and
sub
xchg
and
jecxz
ret
enter
pop
add
pop
ljmp
lea
push
mov
fnsetpm(287
mov
adc
pushf
sbb
sbbb
push
sti
lods
insb
pop
loope
loopne
mov
mov
stos
aas
push
lahf
aas
out
sbb
inc
shll
pop
fdivl
xchg
push
in
aaa
xlat
and
xchg
lods
enter
sbb
lcall
in
outsb
sbb
mov
and
outsl
sbb
out
stos
sub
push
adc
push
aas
dec
outsb
and
repnz
ja
je
xchg
inc
or
pop
mov
es
jg
out
das
test
out
jle
fcoms
lret
push
ss
push
ret
and
mov
aam
sbb
push
pop
cmp
movsb
sub
mov
xor
test
stc
std
js
ret
adc
pop
dec
aam
push
sbb
dec
adc
mov
inc
aaa
fwait
add
add
and
loope
mov
mov
jno
pop
jp
fstl
dec
or
fnstenv
adc
and
sub
out
mov
push
orl
jle
push
sbb
or
mov
addr16
xor
pop
mov
sbb
imul
sbb
scas
add
lock
and
push
enter
push
imul
cmp
enter
xor
mov
inc
cmc
insb
arpl
testb
fidivs
and
decb
sti
outsb
cmp
push
push
insb
lahf
loopne
aaa
xor
test
call
and
xchg
pop
out
or
test
sbb
movsl
cmpl
cli
or
push
push
call
lea
shrl
adc
fs
lret
mov
jae
push
mov
ss
mov
adc
das
push
inc
mov
int3
mov
iret
fsts
sbb
dec
jbe
cmp
inc
cmpsl
pushf
xchg
jle
xchg
popa
lds
lahf
sbb
jnp
push
jne
test
or
add
mov
cmpsl
adc
bound
mov
jecxz
in
leave
xchg
sub
test
mov
lret
bnd
pop
insl
add
cwtl
mov
nop
nop
pop
or
std
sbb
inc
cmp
pusha
push
jb
mov
or
pop
sbb
mov
jbe
sub
setg
add
push
cmc
sub
insb
movsl
pop
out
sbb
pop
add
add
fiadds
test
or
fstps
jo
push
mov
iret
aad
mov
ss
jl
std
jnp
mov
pop
not
sbb
jmp
add
push
xor
inc
imul
loopne
insl
js
idivl
sbb
je
xchg
sbb
ss
ret
sbb
mov
shl
mov
lea
xchg
je
cwtl
or
icebp
test
idivb
test
sbb
or
aas
popw
jae
mov
add
add
add
push
sub
fldenv
sbb
pusha
jb
les
lret
test
jnp
loope
mov
xchg
int
jae
push
add
int3
inc
pop
or
jmp
sub
mov
pop
roll
gs
lcall
les
loope
into
inc
fiaddl
add
adc
pusha
inc
les
sbb
mov
aam
popf
inc
daa
call
dec
jo
int
repz
neg
mov
sbb
cmpb
push
mov
bnd
cltd
lods
lret
jge
out
sbb
adc
sub
in
scas
add
sbb
add
mov
insb
les
fdivr
fidivrs
sub
fdivr
pop
and
push
or
mov
or
dec
out
hlt
or
and
cmc
jno
pusha
adc
dec
inc
xchg
dec
push
mov
lret
cld
lods
mov
and
subb
in
out
jl,pt
inc
mov
or
sub
and
xchg
repz
call
pop
dec
iret
lcall
xor
sbb
push
jb
mov
fcmovb
mov
icebp
mov
call
jno
fbld
inc
icebp
pop
xchg
ficomps
lods
out
sbb
lret
pop
xchg
dec
push
js
gs
mov
movsb
cwtl
out
push
repz
aas
jmp
aad
lea
dec
int3
outsb
js
pop
imul
cmp
iret
jl
test
movsl
jmp
mov
popa
xor
jg
mov
orb
add
mov
add
mov
aad
fsubr
decl
cli
jbe
repz
xchg
xchg
rorb
add
cmp
jno
cwtl
call
and
mov
sbb
and
cmpsb
lcall
xchg
cmp
jo
xor
aam
mov
add
push
and
xlat
mov
dec
mov
jbe
dec
fbstp
xor
pop
popa
adc
push
jp
and
rcrl
inc
inc
jnp
inc
out
pop
divl
or
push
pop
nop
sbb
and
jle
pushl
add
dec
rorb
hlt
and
ljmp
std
mov
dec
out
fnsave
push
push
and
pop
arpl
push
or
mov
stos
in
fildll
es
pop
pop
scas
out
push
or
pop
cmp
mov
les
push
jge
mov
js
ret
mov
clc
dec
push
push
mov
mov
and
jae
cltd
pop
jp
mov
add
nop
icebp
ret
pusha
daa
insl
fmuls
pop
push
shl
loopne
push
mov
fiaddl
into
sti
rclb
or
inc
jbe
dec
lcall
lods
rcll
cld
jle
xchg
fstp
push
or
adc
push
ret
icebp
pop
cmpsl
addr16
pop
adc
add
sbb
cmpb
jl
out
xor
mov
or
stos
aas
cmp
lcall
jnp
push
jns
ret
cmp
jmp
sbb
rcrb
in
in
std
inc
sti
pushf
loop
inc
iret
sub
subl
rclb
sub
ljmp
dec
push
dec
test
mov
dec
push
cmpsb
adc
jns
jg
xchg
sbb
addl
mov
movsl
inc
push
fnstsw
inc
callw
hlt
leave
lahf
cltd
mov
shrl
cmc
pop
push
jne
or
cwtl
jecxz
mov
jne
leave
jmp
xlat
movsl
mov
pop
mov
fcomps
jcxz
imul
fsubrs
loopne
mov
jle
incl
cmp
loope
pop
gs
jle
push
xorl
cmp
and
xor
inc
dec
mov
xor
xor
cld
mov
xor
xor
test
out
enter
pop
jmp
scas
cld
push
push
mov
in
xchg
push
subl
sub
lods
repz
lret
in
loop
adcl
xchg
adc
movb
lret
xchg
jecxz
jecxz
sbb
mov
sub
cmp
add
sub
sub
inc
mov
jmp
gs
and
push
jno
orb
sarb
cmp
fldenv
or
pop
add
pushf
or
mov
xchg
and
pop
xor
pop
mov
mov
mov
dec
jne
hlt
adc
add
mov
mov
ret
int
pop
inc
pop
adc
iret
pop
mov
jno,pt
pushf
xor
adc
adc
gs
dec
ds
xor
test
jns
in
div
lret
push
in
sbb
cli
mov
sbb
ja
mov
sbb
xchg
dec
sbb
push
mov
sbb
xchg
scas
pop
stos
sbb
lock
cmp
int3
or
dec
cmpsb
test
mov
inc
ljmp
int3
xlat
jecxz
mov
xchg
cli
int
leave
xor
add
mul
int3
stc
and
loope
lods
in
lds
adc
xor
sbb
cmp
push
jne
sti
jmp
das
in
imul
xor
xor
jle
push
orb
push
push
mov
or
orl
jmp
iret
stc
ret
in
out
popa
insb
pop
cld
mov
sbb
or
idivl
enter
dec
jnp
mov
aad
push
push
lds
mov
loop
sub
sbb
push
adc
push
aam
fcoms
int3
push
test
add
fcompl
cmp
outsl
add
adc
add
mov
loop
testb
mov
imul
mov
xor
in
pop
rolb
xor
repnz
xor
loopne
adc
pop
daa
clc
fidivl
in
in
mov
outsl
shll
and
leave
popf
pop
push
push
xor
dec
loope
or
roll
adc
pop
lahf
fistl
mov
push
lock
jbe
jns
scas
insl
pop
sub
inc
mov
icebp
mov
pusha
out
add
jp
mov
pop
pushf
out
adc
clc
pop
cmp
sub
mov
sti
xchg
sahf
and
aaa
addb
ja
aaa
xor
sarb
pop
push
pop
fsubs
in
mov
sub
xor
push
pop
xchg
xor
shll
scas
add
sbb
popa
es
cmp
add
cmp
dec
shl
push
inc
mov
jo
and
pusha
add
loopne
dec
scas
inc
pop
jne
jne
dec
mov
lcall
test
adc
pop
into
jnp
cmpsl
mov
xor
adc
loop
mov
stos
mov
and
xchg
pop
or
or
mov
pop
push
add
dec
xchg
es
xchg
scas
fxch
insb
mov
fcompl
sbb
bound
dec
popa
aas
in
pop
sahf
ds
push
out
dec
ss
jnp
or
pop
sahf
lret
push
cltd
mov
nop
xor
jbe
jmp
sbb
pop
iret
pop
rol
mov
xchg
outsl
mov
mov
lods
xchg
pushf
test
fstl
repnz
subl
mov
jo
dec
pop
inc
mov
pop
xor
cmp
and
dec
popa
push
inc
mov
inc
xor
aas
push
dec
shll
jae
mov
cmpb
xchg
sbb
add
out
sbb
mov
pop
mov
push
sahf
cli
loopne
inc
int
pusha
repz
aad
rclb
cmc
mov
adc
push
or
mov
lret
incb
rol
mov
loop
out
adc
pop
aam
inc
jmp
aas
cs
arpl
test
pop
xchg
js
mov
push
pop
in
inc
inc
loop
adcl
dec
fadd
mov
add
lods
and
mov
lret
jl
iret
inc
add
jbe
scas
inc
out
cmpsb
xchg
movsl
sub
ss
fldl
mov
sahf
dec
leave
mov
lds
push
cwtl
loopne
adc
leave
sarl
lods
fwait
popf
push
xchg
das
insl
and
les
jo
or
fldcw
jbe
ja
jno
lods
clc
and
ds
dec
adc
mov
add
aad
sti
mov
mov
stc
mov
push
pop
mov
pusha
shl
push
shrb
dec
test
xor
mov
imul
test
push
mov
inc
pop
xor
movsl
inc
orl
or
pushl
xchg
adc
shrl
push
cld
lods
lcall
bound
jnp
pop
cmp
mov
hlt
sbb
insb
or
cltd
leave
push
pop
in
scas
adc
int3
adc
dec
mov
ret
lods
add
adc
xchg
pop
rorb
test
pop
hlt
sbbb
cmp
push
jg
in
dec
daa
push
fimull
cltd
adc
dec
mov
rolw
ss
arpl
dec
ds
and
add
mov
mov
xchg
mull
mov
mov
jle
push
popf
cli
hlt
and
scas
out
sbb
stos
mov
gs
in
dec
outsl
enter
or
lods
cltd
add
mov
ror
mov
scas
mov
mov
mov
arpl
mov
lods
jl
movsb
and
addb
mov
movsl
adc
push
xor
adc
inc
into
js
push
sahf
int
lods
jnp
add
test
mov
mov
jle
int
cwtl
push
pop
sbb
cmp
inc
and
adc
mov
lods
add
push
icebp
inc
popa
inc
sub
and
sti
pop
div
sub
adc
cmovnp
inc
jg
mov
push
popa
mov
xor
jmp
sti
roll
cld
mov
add
jl
scas
icebp
gs
loope
cmp
mov
cmpsl
jb
push
bswap
mov
dec
sbb
inc
iret
lahf
popf
fsubrl
xchg
test
pusha
xor
je
xor
cmp
push
and
mov
xor
iret
cmp
jno
int
inc
popa
lret
or
xor
or
mov
js
pop
js
mov
jne
lea
mov
cmc
dec
adc
leave
sarl
sub
sub
xchg
sub
pop
arpl
mov
xor
cmp
lahf
push
fwait
mov
xchg
jne
in
push
xchg
icebp
roll
push
sbb
clc
es
cli
dec
sbb
je
cmpsl
pop
out
or
and
and
and
pop
pop
push
sub
jbe
arpl
scas
je
or
in
pop
popf
std
xorb
icebp
dec
inc
mov
test
pusha
sbb
int3
ja
fistps
stos
enter
xchg
div
out
sub
pop
es
fcompp
pop
mov
mov
cmp
daa
xchg
xchg
cmpsb
cmpsb
jns
mov
test
dec
jmp
jg
cmp
out
mov
fdivrl
and
dec
es
mov
subb
cmc
loopne
push
sbb
insl
xchg
jae
cli
inc
dec
jmp
adc
sbb
fdivl
jno
push
rcll
push
loopne
pop
sti
ljmp
mov
dec
jecxz
xchg
cs
lods
rorl
pop
negl
mov
mov
outsl
loop
loop
sub
push
mov
pop
xchg
mov
inc
pop
pop
mov
inc
jmp
jno
shr
cltd
jge
pop
scas
xchg
adc
mov
rolb
pushf
lahf
ret
and
mov
sub
adc
pop
loope
push
jae
imul
adc
data16
out
pop
or
inc
adc
and
xchg
and
add
push
mov
sub
lods
xor
and
test
fistpl
add
iret
dec
xor
iret
stos
xorb
sti
jp
aam
mov
mov
int3
nop
jle
lods
and
xchg
das
and
daa
orl
and
out
inc
pushf
sarb
xorl
imul
mov
cmp
cmpsb
mov
jge
mov
mov
dec
adc
inc
pop
push
inc
push
hlt
sahf
jecxz
push
data16
inc
dec
fdivrl
popf
out
adc
add
test
aam
bound
xorb
and
ror
in
xchg
pop
vrsqrtss
push
adc
dec
push
loop
mov
pop
fwait
dec
and
fimull
addl
sub
in
mov
fstpt
aas
sub
mov
out
sub
insb
outsb
mov
outsb
cmpsb
mov
add
jbe
dec
push
inc
jp
std
fildl
lret
cmpsb
inc
or
mov
ss
inc
jbe
movsb
push
jb
sub
aaa
cmp
aaa
out
jbe
pusha
mulb
jge
mov
outsl
sbb
sbb
inc
dec
pop
mov
xor
fcmovnu
adc
dec
pop
ds
popa
fidivrl
adc
shlb
pop
sbb
test
lock
mov
je
imul
cmpsl
xchg
xchg
inc
add
mov
arpl
push
jb
push
in
out
addb
stos
fcomip
add
repz
clc
xchg
push
inc
xchg
xor
imul
pop
cmp
pop
dec
or
imul
mov
lock
pop
mov
dec
add
jl
cld
shrl
lcall
sbb
mov
pushf
xchg
fldt
dec
loope
lahf
test
inc
and
or
jnp,pn
pop
xor
sub
adc
cmp
lods
cwtl
mov
inc
mov
movsb
jl
movsb
int
int
lahf
jae
dec
xor
bound
mov
dec
loope
jnp
out
dec
icebp
rcl
and
xchg
dec
xchg
sbb
inc
lcall
or
dec
mov
cmpl
icebp
pop
pushf
sbbb
mov
fdivs
push
fdivr
test
mov
adc
out
or
sbb
dec
cmpsb
adc
mov
imul
pop
xlat
inc
add
mov
pop
xor
push
cmc
inc
push
xchg
xor
scas
loopne
mov
mov
cs
cmp
xlat
outsl
inc
addr16
in
cmp
movsb
repnz
add
or
ret
je
push
inc
push
and
ret
arpl
stos
test
jmp
cmp
or
test
cmp
rcl
mov
pop
ja
fcompl
std
imul
xchg
sub
mov
cmp
push
fcoms
bnd
cwtl
jle
add
push
jb
popf
arpl
jecxz
pop
or
sti
aaa
cmp
mov
add
xor
movsb
std
ret
xlat
sbb
xchg
cmp
icebp
xlat
enter
mov
leave
cmp
adc
xchg
popa
and
push
cmp
mov
jb
aam
push
loop
jmp
outsb
gs
lea
jl
insl
lret
cmp
scas
out
cld
add
pop
pop
sub
mov
dec
sahf
sarb
lods
insb
xchg
fsubs
shrb
mov
dec
fs
xor
add
movsb
mov
insl
outsb
jecxz
cmp
icebp
popa
sub
pop
push
cs
or
movsb
daa
push
movsl
xor
clc
xor
xor
enter
add
xor
sbb
jmp
sbb
mov
test
daa
push
fcmovne
imul
sbb
pop
lock
arpl
cmpsb
mov
lea
push
xchg
jo
stos
sub
std
in
pop
leave
mov
or
mov
dec
data16
add
adc
cwtl
push
ja
add
cld
jae
neg
push
xchg
jecxz
jmp
add
xchg
subb
ljmp
pop
cmp
mov
mov
sub
mov
icebp
rcr
and
inc
cs
and
sub
cmpl
or
mov
push
fcoms
cld
mov
jmp
jno
adc
inc
pop
sub
mov
daa
pop
add
cmpsl
insb
shll
mov
xchg
or
jnp
out
popf
ss
popa
ret
sarl
js
movsl
mov
fprem1
push
cltd
sbb
repnz
push
xor
mov
jge
mov
cwtl
js
sub
pop
dec
xlat
add
jo
lret
leave
cltd
imul
dec
ret
out
adc
js
mov
mov
xchg
add
and
shl
test
ret
xchg
and
pop
adc
adcb
lret
pop
dec
mov
test
scas
mov
stc
sbb
xchg
push
enter
fbstp
cld
jmp
jbe
or
mov
and
or
sahf
movsl
push
inc
mov
xor
xchg
loopne
es
rdtsc
push
inc
pop
lahf
and
mov
inc
mov
sbb
mov
fcoml
mov
insb
mov
xchg
js
adc
outsb
cmp
or
out
xor
lret
stc
fldt
inc
pop
push
jnp
inc
xchg
jbe
jmp
mov
xchg
int3
xor
add
es
outsl
xchg
xor
dec
adcb
adc
mov
cmp
pop
sbb
mov
stos
mov
cmp
xlat
mov
or
cmp
mov
in
ja
pop
repnz
nopl
mov
mov
dec
sbb
icebp
std
add
cli
sbb
iret
invd
lods
fsubrs
loope
jg
bound
or
push
xor
xchg
fisubrs
data16
and
cmp
pop
addl
lock
leave
inc
mov
push
lock
jmp
pop
pop
dec
rorb
sbb
dec
mov
pop
inc
and
jne
cmc
inc
fnsave
addr16
popa
pushf
hlt
mov
lock
pusha
das
popf
lods
stc
sbb
jl
icebp
mov
lds
add
mov
sbb
cmpsl
adc
xchg
adc
stos
popl
adc
mov
cmp
fsubrp
cmc
or
or
call
adc
leave
mov
cmpsb
adc
orb
mov
shlb
jne
jle
mov
mov
sbb
pop
push
add
lods
int3
dec
mov
call
add
push
mov
lods
test
sbb
jmp
dec
pusha
subl
lea
mov
into
popf
mov
xor
add
dec
js
xchg
inc
jae
cltd
dec
mov
ja,pn
add
je
mov
xor
inc
gs
pop
jge
dec
and
mov
sbb
sbb
push
roll
ljmp
in
pop
cwtl
add
ljmp
mov
sbb
fmul
xor
nop
sub
add
and
cs
loop
in
xor
xchg
shl
leave
inc
jno
das
in
cmpsl
and
mov
xor
jbe
scas
into
fcmove
ds
call
cld
lret
mov
lret
dec
repz
dec
leave
jg
fadds
jne
test
aaa
into
pop
mov
lods
cltd
dec
int3
lahf
mov
push
adc
clc
xlat
inc
jl
sub
add
movb
addr16
adc
test
mov
jle
call
xor
or
iret
adc
xor
insl
mov
sub
mov
filds
adc
clc
push
pop
and
sbb
loop
push
outsb
jae
sti
adc
leave
mov
mov
pusha
cmpsl
addr16
mov
inc
je
inc
fs
loop
sbb
pop
popf
cmc
fldenv
or
in
cmp
fisubs
mov
mov
bound
xor
out
mov
rcrb
mov
shll
and
sbb
jbe
fwait
cwtl
lahf
je
add
and
lods
pop
jb
sub
mov
xchg
orb
mov
mov
xlat
mov
dec
movsl
sbb
pop
hlt
mov
das
xchg
jbe
mov
xchg
push
mov
fimull
mov
ds
xchg
fdivrp
loop
jne
cmp
dec
jo
mov
push
scas
and
iret
sbb
or
pop
pushf
arpl
jl
xchg
nop
lret
push
ret
stc
fisttpl
sbbl
adc
mov
data16
jg
mov
movsb
mov
mov
dec
adc
outsl
into
jns
xchg
or
sahf
int3
add
stc
ja
jmp
sub
ja,pt
and
aad
pushf
pop
mov
and
mov
sub
pop
ds
mov
cmp
shrl
hlt
adc
je
aam
xor
and
scas
les
icebp
jns
arpl
sub
movsl
daa
mov
psubw
cli
push
and
push
xorb
sarl
add
imul
das
les
inc
mov
or
or
arpl
es
sub
adc
jl
dec
icebp
hlt
fwait
push
pop
sbb
xchg
fsts
ficoml
mov
cmpsl
or
xor
filds
inc
mov
add
into
push
jl
vmovupd
xchg
push
dec
xchg
adcl
sbb
push
cmpsl
xchg
orl
addl
push
add
jecxz
push
mov
adc
rcrb
jge
xchg
inc
pop
xchg
push
stos
scas
mov
add
mov
in
mov
jbe
out
mov
or
xlat
adc
ljmp
imul
iret
xor
mov
mov
lret
mov
rorl
and
or
and
fistpll
popa
mov
lds
or
icebp
jg
rcrl
roll
dec
mull
dec
or
mov
ja
mov
or
hlt
mov
inc
xchg
push
adc
jecxz
cld
sub
pushf
mov
push
xor
adc
cmc
mov
cmp
jecxz
or
test
dec
in
push
lret
ljmp
clc
das
fcoms
add
fstl
jle
xor
daa
push
sub
jecxz
mov
lods
mov
and
ud2
je
test
pop
add
mov
sub
aad
mov
adc
es
cmp
push
int3
ret
jge
sub
cmp
pop
inc
sbb
dec
sub
inc
and
mov
or
mov
sub
pop
xor
add
push
enter
fwait
into
sahf
fstpl
aad
add
rcll
mov
add
dec
aas
adc
add
lods
mov
lock
push
aad
adc
adc
xorb
dec
jae
xchg
insb
cmp
push
or
adc
dec
pop
jmp
cltd
pop
movsb
jmp
aaa
adc
xor
aaa
ret
cmpl
bound
out
or
push
cmp
mov
stos
mov
xchg
cmp
daa
scas
cmpb
in
fmulp
scas
mov
inc
aad
push
jecxz,pn
mov
shlb
repnz
lods
push
jmp
push
les
add
pop
add
outsl
nop
dec
pusha
xchg
add
jecxz
popa
dec
sti
sbb
pop
mov
jne
fsts
mov
stos
jae
mov
shr
outsb
ljmp
mov
xor
mov
push
fs
push
cmpsb
sub
icebp
and
push
filds
xlat
add
mov
xchg
aad
insb
add
orb
inc
stc
fstps
inc
sbbb
xchg
push
imul
int3
jecxz
push
jmp
in
jmp
mov
xchg
cmc
mov
jle
sbb
push
pinsrw
inc
aaa
gs
jle
pusha
dec
mov
push
xchg
stc
push
je
sbb
cli
hlt
push
dec
jecxz
int3
xor
ljmp
sbb
int3
sar
xor
jl
xor
rcll
sbb
mov
pop
outsl
pop
mov
daa
mov
adcl
fdiv
loopne
mov
dec
xlat
nop
shll
mov
lds
xchg
jns
inc
ret
or
adc
movsl
mov
xchg
testl
push
fisubrs
add
add
jbe
out
movsb
cld
arpl
mov
jge
mull
xor
ja
mov
popf
jmp
lock
mov
xchg
jg
sbb
stc
jg
fs
daa
mov
jnp
push
xchg
fstl
xlat
rcl
jl
test
push
pop
pop
sbb
pushf
dec
stos
pop
xchg
add
adc
out
dec
cmp
test
mov
mov
and
jecxz
jmp
cmp
or
cmp
hlt
fdivl
jne
push
jne
cmpsb
sub
cmpsb
and
es
loopne
shlb
inc
sub
addr16
push
sbb
mov
mov
pop
outsl
jp
ret
dec
pop
mov
and
testl
movsb
in
movb
dec
pop
xor
sbb
sbb
dec
push
andl
aas
cmpsb
mov
mov
lret
out
jnp
jnp
mov
aad
ja
xchg
inc
fstp
push
lock
lods
dec
sbb
aaa
add
rclb
cld
cltd
inc
leave
dec
js
xor
dec
repz
inc
add
add
movsb
testl
inc
lock
int
push
out
jmp
cmpsl
sarb
jnp
xchg
push
pusha
test
hlt
imul
sub
stos
inc
sub
mov
rcl
test
adc
nop
aaa
mov
rcr
jmp
scas
mov
cs
dec
bound
push
and
sub
xchg
dec
jle
adcl
rorb
ljmp
pop
adc
repz
fstps
bnd
nop
movsl
scas
je
gs
lcall
pop
xchg
loope
das
repz
mov
cmp
fcmovb
cmp
pop
adc
sti
in
in
out
cs
push
and
cmpsl
fmull
ficompl
push
pop
out
imul
mov
popf
movsb
in
cmp
stc
iret
sbb
dec
sbb
stos
daa
fwait
cs
add
loop
imul
push
mov
fcmovnbe
dec
rcrb
aas
mov
insl
mov
stc
push
jge
int
scas
loopne
cs
xlat
scas
test
pop
fdivl
or
pop
push
pop
aaa
cmp
js,pt
outsb
roll
xor
sbb
arpl
ja
cli
insl
inc
mov
or
repnz
add
mov
fwait
inc
in
in
add
cmp
xchg
out
inc
or
sahf
push
lea
in
and
loopne
pop
fistl
enter
gs
mov
in
outsb
int
ss
ljmp
push
mov
xchg
inc
or
push
xor
xorb
add
mov
sbb
ds
inc
push
sbb
add
jl
bound
cwtl
xchg
pop
mov
and
adc
fimull
and
cmp
std
push
xchg
sarb
repnz
mov
jo
cmp
mov
push
pop
repz
and
lods
pusha
imul
xor
add
xchg
cmp
inc
test
adc
xchg
sub
dec
shrl
pop
xchg
push
and
aas
inc
aad
and
xchg
dec
hlt
cmpsb
pop
xchg
clc
inc
lds
out
inc
pusha
insb
testl
and
dec
push
lcall
push
fstpl
icebp
outsb
or
mov
je
push
stos
add
aas
rolb
push
dec
test
mull
cmp
xor
xchg
lea
lea
mov
pop
cmpb
cmp
fwait
imul
ds
mov
arpl
mov
cmp
jns
scas
push
jnp
add
push
sbb
test
push
in
jae
or
jae
dec
clc
test
mov
add
mov
and
mov
dec
xchg
lods
insl
jp
xor
lret
or
stos
xor
lods
data16
push
imul
mov
addr16
inc
inc
cmpl
lods
imul
sub
jb
andl
roll
xchg
push
stos
mov
fnstenv
loope
dec
ret
cld
lods
adc
cmovl
xchg
outsb
sub
stos
lret
jge
pop
enter
dec
dec
adc
pop
xlat
push
cmp
in
sbb
pop
push
cmpsl
xchg
rorb
imul
pop
divl
pop
das
adcb
adc
fwait
add
mov
inc
mov
mov
mov
in
rorl
pop
ljmp
push
popa
xchg
pop
repnz
mov
mov
or
mov
adc
jnp
inc
and
ja
mov
sbb
cmpsl
pop
das
jl
in
cmp
fsave
xor
icebp
js
and
dec
push
leave
sub
aas
loop
push
push
jae
int
cmpsb
xchg
in
mov
mov
sub
mov
cmpsl
pop
hlt
fs
popa
movsb
jecxz
and
xlat
scas
mov
xor
sub
xchg
mov
jl
jmp
pop
pop
or
or
fisttpll
bnd
add
nop
mov
out
and
into
xlat
dec
pop
jns
das
lahf
lcall
xchg
inc
inc
aaa
or
inc
aam
add
mov
in
pop
daa
pop
or
pop
push
mov
bound
sub
push
cmp
movsl
dec
xchg
pop
push
push
ret
or
push
mov
and
pop
pop
push
add
add
mov
sub
stos
rcr
xor
icebp
dec
lahf
pop
cmovle
jg
fcmovne
xchg
cmpsl
jmp
mov
xchg
icebp
in
jp
imul
mov
xchg
add
movsb
mov
sbb
cmpsl
sarb
icebp
lcall
xchg
jmp
xor
outsl
jno
repnz
ret
mov
jg
negl
fisubrs
mov
cmp
mov
mov
stos
xor
sub
out
sbb
push
sbb
xlat
mov
cmp
dec
insl
mov
xorl
inc
and
xchg
fwait
jl
jae
sbb
je
fs
or
testl
push
imul
fwait
and
movhps
pop
cltd
sbb
loopne
and
mov
jge
popa
push
je
jne
sbb
mov
in
jge
test
stos
jns
pop
mov
sbb
insb
leave
testl
jg
in
test
stos
loope
dec
xchg
sub
dec
xor
movsb
or
dec
or
sbb
adc
test
lret
divb
aad
insl
push
shlb
and
arpl
test
popl
fists
scas
xor
in
and
pop
outsl
lds
inc
out
data16
xchg
daa
xchg
xchg
cmpsb
push
clc
lods
inc
shlb
or
xor
jmp
push
fnsave
mov
jnp
mov
cmp
test
jnp
pop
xor
pop
in
cmp
rcll
cwtl
or
add
add
movsb
and
cmp
and
jecxz
inc
pushf
cmpsb
push
push
dec
pop
mov
mov
pop
rcrl
lock
out
xchg
dec
out
mov
ret
jl
lods
and
sahf
cmp
push
push
mov
out
js
inc
inc
mov
mov
loop
adc
vmovsd
mov
and
ss
jno
mov
sub
pop
xchg
test
int
mov
stos
rorl
push
jle
out
pushf
sub
lahf
call
pop
int
outsl
xor
mov
push
fwait
ss
sbb
andl
in
scas
es
rol
testb
sub
pusha
fists
push
inc
daa
or
push
xor
or
push
cmp
call
xchg
ficoms
push
addr16
adcb
push
fs
mov
pop
in
and
sub
dec
sbb
push
inc
ret
cmp
jmp
bound
scas
jbe
test
scas
jmp
mov
fld
shlb
dec
movq
and
test
jnp
stc
or
das
test
stos
aas
shr
pop
les
adc
jne
roll
lea
mov
inc
xchg
push
fstl
lea
jae
daa
push
lds
rcrb
pop
sbb
std
or
lods
cmpsb
push
push
fs
jnp
or
adc
xor
xor
pop
mov
mov
inc
xchg
inc
enter
scas
test
negb
loop
rol
mov
notl
dec
fistl
mov
xchg
mov
xor
jmp
mov
mov
push
cmp
sbb
xchg
mov
xchg
mov
or
das
out
dec
dec
push
xchg
mov
xchg
dec
jnp
adc
cmp
movsb
inc
pop
push
lahf
xchg
je
add
xor
jns
and
ljmp
loop
std
popa
repz
scas
sarl
jl
out
testl
dec
rcrl
inc
mov
mov
pop
sbb
mov
xor
pusha
add
divl
xorl
loope
leave
inc
scas
sub
movsb
jmp
repnz
dec
repz
and
push
pop
lock
push
aam
pop
or
je
mov
js
adc
icebp
or
testb
and
fs
out
dec
sbb
outsb
aad
mov
and
inc
outsl
cmp
in
movsl
pop
or
jbe
xchg
test
in
bound
jl
icebp
lcall
jmp
or
int3
jecxz
outsl
enter
xchg
cmpsl
ret
xor
shl
mov
std
cmpsb
in
mov
mov
sub
jecxz
add
and
repz
clc
mov
xchg
adc
aad
sub
psrlq
dec
stos
push
dec
clc
inc
cmpsb
lahf
in
dec
jp
jne
push
mov
add
or
es
sti
mov
test
add
imull
je
sub
sbbl
mov
push
pop
testb
int
cwtl
sbb
pop
adc
push
mov
int3
inc
in
push
mov
inc
out
xchg
xor
dec
outsl
add
imul
movsl
and
addr16
das
cmpsb
sub
mov
test
into
adc
dec
mov
das
mov
ja
inc
mov
cwtl
outsb
mov
mov
ljmp
leave
pusha
pop
mov
jp
mov
xchg
pop
out
stos
dec
jge
pop
jns
arpl
dec
mov
xor
mov
inc
ret
pop
es
and
pop
cwtl
inc
cmp
mov
int3
aas
dec
ljmp
aas
nop
push
in
jne
adc
sti
push
add
stc
es
xor
or
stos
jnp
insb
ret
xchg
nop
and
lret
outsb
cmp
mov
mov
add
inc
jmp
jg
cmp
sbb
or
test
adc
mov
dec
pop
xor
xchg
push
xor
jno
jnp
cwtl
es
mov
or
inc
mov
out
cmp
loop
add
ja
mov
push
mov
shrl
pop
jp
jbe
bound
xor
xor
cwtl
iret
outsl
sbb
aam
loopne
dec
push
mov
hlt
or
hlt
jae
call
or
popf
aam
adc
shrb
inc
mov
adc
sbb
mov
jnp
call
jb
and
jecxz
xchg
popa
lret
lods
lret
and
scas
stc
and
cmc
adc
and
mov
push
daa
test
cwtl
frstor
push
sbb
pop
fcmovu
test
fiadds
mov
lods
je
shrb
mov
in
loop
stc
outsl
imul
jne
rcl
adc
xchg
cmc
lcall
push
mov
orl
sahf
sbb
nop
push
sub
xchg
xchg
dec
add
dec
rcr
call
pushf
pop
and
or
js
dec
nop
mov
and
into
hlt
cs
inc
jmp
dec
ss
js
or
mov
sub
sbb
add
adc
jo
jb
adc
in
push
sub
call
xor
mov
rorl
sar
sti
jl
out
pop
fmulp
pop
movsl
lret
add
or
aas
adc
roll
mov
insb
pop
xchg
int3
call
das
add
mov
lds
mov
ret
cmpsb
sub
push
and
jo
outsb
pop
adc
sbb
mov
iret
pop
pop
rclb
loopne
sbb
popa
jbe
into
adcl
es
mov
jno
scas
jmp
xchg
cli
ret
shr
mov
mov
int
mov
mov
sbb
aas
fwait
and
repz
mov
stc
xor
sbb
fs
insl
shlb
and
jbe
mov
mov
fildl
repz
mov
lea
mov
push
cmp
sahf
jbe
mov
insl
les
mov
mov
jne
jmp
pop
xchg
shl
lcall
mov
adc
adc
cmpsb
in
data16
jmp
mov
loopne
pop
sub
out
dec
repnz
sub
test
add
xlat
inc
xor
mov
push
xchg
test
fdivs
stc
aam
daa
mov
pop
test
call
push
dec
push
dec
addl
xchg
cmp
jnp
sbbb
jle
popa
fnstsw
mov
loope
inc
mov
lods
lahf
out
inc
push
cltd
out
adc
dec
push
xchg
aas
mov
punpckldq
jo
mov
out
aam
xchg
add
or
iret
mov
sar
xor
and
add
adc
sub
ja
aam
mov
cltd
repz
xchg
outsb
inc
inc
pop
cmp
xchg
mov
cmp
into
popa
mov
movsb
sbb
clc
or
pop
scas
arpl
jno
jo
add
mov
sahf
pop
test
sbb
dec
pop
sbb
mov
sarl
push
mov
jbe
faddl
push
push
mov
dec
mov
dec
push
dec
shlb
inc
xor
sub
cmpsl
cmp
je
dec
mov
mov
leave
gs
and
sbb
or
mov
pusha
pop
movsb
pop
aam
ljmp
adc
mov
or
push
sbb
mov
adc
dec
sbb
inc
inc
xor
or
rcr
pop
leave
test
push
enter
and
fistpll
cmpsl
xor
mov
adc
or
nop
fldt
fistpl
lea
ss
es
pushl
jmp
mov
sub
test
mov
in
clc
pop
std
cltd
pop
loope
xchg
aad
pusha
mov
sbb
ds
pop
loopne
adc
rclb
mov
mov
out
or
xchg
aaa
sub
dec
orl
sub
pushf
inc
pop
outsl
jns
pop
xchg
iret
dec
stos
decb
xchg
out
push
cmc
xchg
in
scas
loope
fcompl
into
movsl
rcll
push
lcall
data16
stos
pop
xor
cld
xchg
fisubl
cmp
push
aad
sub
xchg
push
mov
add
cwtl
sbb
loop
sub
xchg
stos
pop
out
jb
and
xchg
cltd
fisubs
jg
arpl
out
pop
in
loop
bound
das
jns
add
jne
jae
ret
bound
pop
adc
mov
push
lret
fidivl
jne
mov
cmp
movsb
gs
icebp
jg
insb
gs
pop
and
pusha
pop
fldl
mov
push
mov
sub
repz
sbb
jl
jb
jle
in
sub
leave
sub
shl
lea
in
in
push
xchg
sub
fcompl
adc
or
aaa
popf
cld
jg
and
fwait
pop
outsl
in
test
inc
mov
jmp
xor
sbbb
xchg
inc
lcall
mov
stc
fbld
or
xchg
jne
stos
ret
adc
adc
fidivrl
cmpsl
inc
cmpl
xor
ret
stos
inc
push
scas
sbb
pop
xchg
lret
push
insb
xchg
mov
fidivl
sub
fnstsw
lret
add
inc
int3
sarb
xchg
pop
jo
mov
or
jae
xchg
lock
xor
mov
push
add
jnp
jmp
sub
pop
sub
cmp
aam
xchg
add
adc
mov
repz
mov
js
fbstp
jbe
call
push
sub
outsl
shr
inc
sub
aad
adc
inc
push
jl
cmp
hlt
gs
in
push
pop
mov
call
fwait
inc
xchg
cmpsb
movsl
rcll
fnstenv
push
jg
pop
cmpsb
imulb
outsb
mov
xor
repnz
jb
jmp
add
adc
xchg
and
faddp
inc
mov
pop
jl
mov
pop
arpl
inc
arpl
insb
insb
cld
xor
push
dec
xchg
stc
jl
mov
scas
xor
lea
cmp
int
mov
xor
jp
jno
xchg
mov
imul
add
jnp
fcomi
notb
push
inc
mov
or
sbb
mov
aaa
jge
out
xchg
mov
nop
loopne
hlt
arpl
sub
js
fmull
cmp
add
add
sub
sarl
xchg
cli
jl
add
push
cld
xchg
xchg
and
scas
mov
sti
xor
jmp
or
add
loopne
xchg
or
mov
xchg
xchg
pop
fimuls
cmpb
push
jecxz
aam
insb
test
lds
xchg
add
push
sub
jns
loopne
mov
insb
cmp
xchg
icebp
lock
xchg
inc
push
dec
imul
push
mov
dec
lods
lods
cwtl
popa
mov
enter
mov
and
pop
dec
sar
inc
inc
divb
imul
aad
mov
sbb
test
mov
sbb
pop
in
mov
jmp
stc
cmpsl
dec
scas
ja
sbb
cltd
cmp
add
push
cmp
dec
icebp
push
inc
push
les
add
sbb
sbb
int
dec
lea
je
jge
jg
pop
mov
les
sbb
insb
iret
mov
adc
dec
ss
xorl
xorb
movsl
movsb
sub
inc
dec
out
or
cmpsb
enter
pop
pop
add
lds
or
jl
mov
pushf
push
insl
lahf
jmp
mov
test
clc
cmp
push
gs
xchg
in
outsl
mov
push
and
lret
inc
lds
sbb
cmpsb
sub
fsubr
xor
inc
in
jns
lret
xchg
aam
loop,pt
cmp
mov
aam
sbb
clc
shlb
xchg
lods
mov
pop
xor
inc
out
cmovnp
stos
mov
mov
neg
push
std
xchg
and
push
std
jmp
cmp
sbb
dec
rolb
push
mov
add
dec
dec
xchg
into
pop
or
sub
jns
adc
icebp
sbbb
pop
mov
sti
rcll
lcall
mov
sub
pop
mov
cmp
sbb
shl
stc
xor
lret
add
jmp
pop
cs
fcmovbe
scas
bswap
mov
mov
mov
lret
roll
das
xchg
into
jp
idivb
cld
mov
dec
icebp
adc
fstl
iret
outsb
xchg
in
dec
stc
inc
or
xor
push
pop
nop
adc
add
xor
bound
dec
ret
adc
push
xor
add
adc
mov
out
mov
stc
imulb
shll
ret
pop
ficoms
pop
mov
es
shlb
test
sti
mov
pop
pop
cmp
add
call
imul
test
fwait
dec
popa
push
int3
mov
jo
cmpsb
lcall
cmp
cmp
jo
fidivs
and
pop
mov
cmp
adc
out
sbb
es
add
xchg
jg
rol
sbb
jb
inc
or
mov
jb
gs
call
xchg
push
mov
and
pop
sti
fmull
adc
lea
in
rorb
mov
fs
lds
cmp
pusha
fwait
mov
dec
or
mov
push
or
aad
cmpb
sbb
imul
add
fcoms
pop
xchg
sbb
stc
cmp
ds
rorb
add
xor
aaa
push
shl
in
and
lods
test
cmpsb
add
sub
insl
jo
mov
dec
imul
arpl
lock
std
sti
jle
push
xlat
jb
in
sbb
int3
cmpsl
sub
mov
jg
lods
cmpb
xchg
inc
scas
pop
push
inc
fiadds
add
daa
fcoml
and
hlt
push
mov
nop
mov
push
mov
sub
shll
sub
jne
stos
pop
fsubs
or
stos
notl
lods
inc
sub
out
sub
cwtl
orb
jmp
fistl
dec
lock
dec
int3
lds
cmpsl
inc
cmc
fadds
pop
mov
push
xlat
into
mov
fadds
jle
pusha
aaa
pop
xor
sbb
out
imul
and
mov
out
es
fwait
lret
jle
mov
test
adc
outsl
test
cwtl
fmul
inc
lock
lock
mov
lret
ja
mull
repnz
mov
sub
leave
scas
dec
daa
push
jne
cmp
push
dec
es
jae
sahf
out
mov
leave
mov
stc
mov
icebp
inc
mov
cmpsl
test
add
fimuls
lret
icebp
dec
and
fistl
xor
das
sbb
lods
add
xchg
testb
pop
cmp
imul
jno
stos
xorl
mov
jp
sarb
pop
adc
jl
outsb
rorb
in
adc
xchg
pop
loope
inc
inc
subb
push
xchg
inc
sbb
adc
push
cwtl
xchg
jge
sub
jbe
sarl
or
insb
fidivrl
ds
lods
es
pop
lcall
movsl
test
test
into
xor
adc
lock
push
cmpsb
dec
pop
pop
pop
inc
into
lea
and
and
and
dec
jmp
mov
adc
sarb
sbb
mov
shrb
cmp
adc
rol
cmc
pop
cwtl
gs
mov
fmull
or
leave
jb
test
sub
xor
test
lcall
shrl
flds
bound
cmc
mov
sahf
mov
mov
into
and
jae
imul
cmp
adc
loop
ja
mov
push
push
dec
xorl
movsb
lods
les
mov
push
xor
bound
add
testb
push
mov
add
sub
jle
jge
cmp
dec
movsl
push
mov
pop
inc
ljmp
mov
loop
cmp
or
sahf
adc
sahf
in
aam
push
mov
test
cwtl
xor
popf
subl
add
adc
xor
imul
enter
sub
add
adcl
je
pop
lahf
mov
test
xchg
pop
jno
loope
lea
and
jns
cltd
je
loop
inc
jp
clc
ret
or
push
idivb
lret
xlat
pop
lods
fs
jmp
and
loop
lods
iret
push
pop
cmpsl
js
jge
sub
pop
lods
scas
sti
mov
cli
mov
sbb
lds
inc
push
push
sarl
pushf
jns
pop
imul
mov
popa
and
adc
fimull
xchg
dec
xchg
mov
mov
mov
imul
dec
mul
cmc
add
xor
and
loop
in
and
jnp
movsb
les
loopne
jae
out
int
in
test
cmpsb
and
jecxz
or
insb
loop
and
int3
and
push
xchg
leave
add
xchg
decl
add
inc
sub
mov
fimull
mov
sub
inc
int
cmpsb
cmpb
dec
pop
push
push
jae
adc
sbb
test
jno
push
aad
jl
stos
push
push
mov
or
cli
xchg
mov
sub
repz
ljmp
test
jmp
xchg
add
mov
movsl
pop
rcll
and
mov
cmp
std
push
sti
pusha
adc
mov
jae
ds
adc
mov
pop
jg
mov
dec
out
test
dec
pop
add
push
inc
mov
test
push
jl
stos
pop
pop
sub
test
fistpl
and
mov
sarb
outsl
inc
sbb
lahf
xchg
push
xor
repz
jge
ja
xchg
cld
test
cld
sub
xchg
movsb
loop
aas
cmc
pop
out
cwtl
call
add
pop
rcrb
xchg
roll
push
sbb
xchg
enter
dec
xchg
pop
dec
jle
adcb
sub
mov
mov
aad
lahf
xor
sti
aaa
push
cmp
fdivr
mov
inc
fbld
call
xchg
cmp
sub
sub
mov
outsl
mov
fisubrs
in
ret
mov
test
iret
sub
cltd
pop
loopne
and
sbb
aam
cmpsl
insb
pop
imul
int3
add
out
in
scas
mov
sahf
ftst
inc
dec
xchg
test
mov
push
fsts
arpl
loopne
outsb
pop
lods
and
adc
arpl
hlt
fldpi
aam
adcl
jge
add
cmpsl
sub
or
inc
stc
ficompl
mov
xor
in
ret
xor
jecxz
das
test
adc
cmpsb
shr
or
mov
clc
jns
cmc
pop
das
push
sub
cmc
inc
inc
jle
cld
jp
or
jg
dec
adc
popf
repnz
mov
pop
jne
or
test
cmpsl
test
test
stos
cmc
shll
nop
ror
loopne
jmp
int
shlb
push
lods
andnps
lret
loope
push
and
pop
idivb
in
shlb
adc
subb
push
sub
xchg
cli
sbbl
enter
push
pop
in
jg
aas
mov
sub
adc
or
xchg
add
loope
sbb
or
mov
out
out
nop
mov
jno
mov
cmpb
aad
or
cli
cmp
sub
das
push
push
and
cmpb
sub
sbb
out
call
icebp
notl
add
adc
jbe
jo
test
and
mov
push
fstpt
push
jecxz
adcb
sbb
pop
iret
dec
adcb
or
mov
subb
ret
je,pt
clc
xchg
push
or
pop
notb
sbb
dec
or
lcall
jg
call
shlb
lds
inc
ret
pop
mov
pop
add
add
xchg
mov
pop
add
push
push
test
and
sbb
shll
into
add
pop
dec
dec
xor
pop
inc
mov
repz
mov
enter
jae
jl
jge
adc
inc
sub
popa
or
cli
mov
imull
dec
mov
in
mov
pop
cmp
test
jg
test
outsb
out
ret
jo
pop
bound
pop
es
push
bnd
fisttps
bound
sar
dec
fbld
andl
or
inc
pop
cmp
inc
sarl
xor
add
lcall
test
out
mov
ja
loopne
rcrl
rcrb
fnstcw
mov
sbbl
xchg
jl
mov
dec
jbe
lea
lods
sahf
out
fwait
add
and
std
push
mov
or
repnz
aam
and
jle
lahf
cmp
sub
sub
incl
frstpm(287
cmpsl
or
mov
movsb
cmp
jbe
inc
jle
stc
mov
repnz
add
cmc
daa
movsb
sub
xlat
es
sub
mov
xor
mov
insl
int
jno
jbe
call
inc
adc
lea
sti
mov
popa
and
jno
cltd
jbe
xchg
rolb
shrl
cmp
cmc
inc
lret
mov
ret
add
mov
daa
pop
pop
in
daa
push
out
lea
ficomps
adc
jge
mov
shrl
mov
aam
inc
testl
push
pop
mov
data16
mov
pop
jno
mov
mov
enter
sbb
mov
mov
push
gs
xor
fistpl
ss
xchg
test
imul
dec
dec
and
mov
mov
popf
les
pushf
iret
cmpsl
mov
shll
or
lea
fidivs
sbb
sbb
pop
dec
loopne
inc
in
inc
sbb
jbe
sub
dec
mov
mov
pop
inc
outsl
jbe
loope
lret
arpl
xchg
loope
jp
das
movsb
out
push
pop
loop
les
mov
sub
mov
fstps
mov
or
insl
mov
dec
inc
lcall
inc
in
cld
fldenv
rorb
fidivrs
bound
jge
pop
arpl
mov
adc
fisttps
mov
mov
out
dec
add
int3
push
lods
cmc
fstpt
arpl
jecxz
dec
add
aaa
mov
roll
pop
pop
pop
cmp
push
imul
mov
outsl
fisubs
inc
xor
jb
imul
mov
mov
into
cs
arpl
jo
in
xchg
mov
icebp
dec
andl
into
insl
inc
aad
fs
icebp
in
gs
mov
test
movsb
xor
xchg
inc
adc
pusha
pop
daa
ja,pt
subb
xchg
xchg
jb
in
lea
pop
dec
cltd
cmp
xor
adc
add
xor
cmp
inc
jge
mov
movsl
xor
mov
loope
cli
aam
jae
je
or
jbe
rclb
sahf
std
push
dec
rorb
dec
stos
xor
clc
mov
iret
inc
mov
push
push
jg
jmp
pop
je
pop
sub
push
fwait
sbb
xchg
lret
in
sbb
xchg
jmp
in
in
cmp
pop
jo
mov
dec
push
sbb
jge
jmp
stos
mov
movsb
andb
inc
pusha
mov
verr
and
outsb
cltd
mov
mov
adc
jo
cmpsb
inc
into
xor
dec
orb
sub
stos
loope
mov
push
loope
pop
dec
jb
lcall
pusha
push
jmp
repz
faddl
adc
xor
enter
sub
outsb
daa
jnp
jne
cwtl
xchg
das
xor
cmpsl
pop
sbb
push
add
aaa
push
mov
js
pop
aaa
fstp
dec
nop
outsl
int
mov
enter
in
inc
cmc
dec
lret
adc
sahf
cwtl
cmp
fsubrl
push
sti
sbb
push
ja
mov
cmc
flds
dec
out
stc
xchg
push
fstpl
pop
xchg
mov
aad
stos
addl
mov
pop
mov
fnstsw
sub
xor
out
aas
mov
das
mov
es
aaa
xchg
insb
aas
xor
jmpw
dec
sub
inc
bound
mov
push
scas
mov
pop
test
cmpsl
lahf
pop
mov
mov
add
ja
add
cmp
fmull
call
daa
imul
mov
inc
fisttpll
pushf
popf
test
pop
daa
jo
push
lahf
jo
lds
std
movsl
ret
xchg
push
mov
dec
out
mov
sbb
pop
mov
frstor
xor
je
pop
pop
pop
sti
loop
sub
insl
addr16
lret
cld
test
fstps
rcrl
dec
pop
in
pop
or
into
push
cmp
sahf
cmp
out
mov
mov
or
xchg
in
mov
jmp
push
push
xchg
or
jbe
and
adc
popa
xor
sbb
push
test
in
jp
xchg
xchg
xchg
mov
xchg
insb
scas
sbb
adc
fs
lds
inc
movsl
lods
aad
es
sbb
mov
repz
sub
pop
add
fwait
andb
test
dec
xor
lahf
scas
das
jle
dec
sub
xchg
lret
das
test
sub
fwait
in
ds
out
or
adc
cmp
out
jmp
shlb
push
shlb
mov
mov
and
adc
pop
xchg
mov
jne
stc
jno
fdivrl
mov
adc
pop
scas
inc
ret
mov
add
shlb
or
mov
in
aam
js
call
mov
lcall
enter
out
jg
and
add
movsb
fldl
fmul
sub
or
out
sbb
cmpl
out
pop
repnz
sbb
sub
fisubl
fidivrs
xchg
dec
mov
ds
movsb
fs
mov
jae
mov
adc
sbb
fscale
int
inc
pop
sbb
xchg
jg
inc
adc
sbb
mov
or
test
sbb
adc
cmp
clc
sbb
fsts
stos
inc
bnd
not
dec
lret
adc
aas
movb
jbe
outsl
add
sbb
idivl
mov
jae
inc
jl
sub
sub
fwait
xor
mov
icebp
add
xchg
fadds
lea
cmpsl
pop
popf
ret
jns
pop
imul
stos
sbb
scas
jns
jg
add
out
push
jmp
jns
inc
xor
sbb
mov
cmp
cld
dec
leave
daa
test
mov
aam
in
test
cld
inc
sub
cmp
scas
push
mov
gs
xchg
and
cmp
lret
sbb
test
int
pop
into
mov
inc
movsl
lcall
mov
test
lcall
aaa
xchg
or
popl
fdiv
push
and
jne
out
daa
cli
push
sub
mov
dec
lea
sub
lds
out
lahf
jne
hlt
jmp
push
pop
mov
daa
mov
add
outsb
xchg
pop
imul
push
rol
iret
fisttpll
xor
lock
push
mov
sbb
and
or
cld
xchg
xchg
fs
sarl
push
add
arpl
mov
inc
mov
bound
cmp
push
shl
aad
pop
cmp
mov
sbb
xor
cmpsl
cmc
xchg
sbb
mov
stc
push
mov
loope
xchg
inc
dec
test
sub
adc
inc
inc
sbb
lds
in
cltd
add
pop
pop
cmp
out
aaa
sub
pop
ficoms
ficoml
je
testb
mov
shlb
add
jno
mov
jl
hlt
xchg
lahf
xchg
cld
mov
scas
addr16
sub
cmp
push
push
orl
popa
sbb
popl
sub
add
insb
or
dec
inc
mov
mov
sbb
mov
imul
push
pop
aaa
clc
mov
sti
in
mov
adc
xchg
enter
push
int3
pushf
dec
les
repnz
stos
inc
cld
adc
lods
iret
cmpsb
push
lock
inc
sti
jno
push
inc
cltd
movsl
fisttpl
cli
int3
andl
out
xchg
sub
pop
ja
push
mulb
ss
test
lods
cld
scas
pusha
mov
jecxz
dec
pop
adc
ja
in
pop
add
outsb
xchg
rol
popa
cmpsb
adc
sub
loope
jmp
sub
cmp
repz
sub
stc
flds
leave
icebp
ljmp
mov
and
addr16
sub
adc
lock
lods
inc
dec
icebp
movsl
cmpsb
iret
in
bound
jg
cs
push
rorl
push
loopne
testl
insl
xchg
aas
mov
leave
jno
scas
or
pop
and
fisttps
mov
fimuls
mov
adc
xchg
xchg
loopne
dec
ret
push
pop
jb
sub
mov
xchg
inc
aam
stc
outsl
mov
pop
mov
mov
mov
sti
mov
push
dec
cmp
rclb
push
loope
lds
fcomip
inc
and
test
cmp
adc
icebp
push
jle
daa
push
mov
testl
xchg
pop
enter
stos
mov
xchg
add
dec
cmpsl
rol
push
lret
sahf
loopne
leave
imul
data16
in
icebp
xchg
xlat
lcall
icebp
add
jl
rol
inc
cmc
and
std
out
inc
xor
sbbl
lret
and
sbb
shll
ljmp
push
cmp
inc
ja
mov
into
rolb
sbb
sbb
in
lcall
jae
mov
popa
xor
iret
adc
xor
clc
aaa
push
cmp
jg
cmpsl
pop
test
inc
inc
cli
xor
mov
add
cmpsb
push
sarb
insb
rolb
in
cld
out
push
inc
negb
cmp
aad
pop
push
aaa
lcall
mov
mov
iret
shr
cmp
enter
xor
pusha
xchg
loopne
ret
mov
jnp
inc
cwtl
xor
jp,pt
dec
repz
dec
pop
mov
pop
in
sbb
sti
pop
rolb
stc
aad
dec
mov
jge
rcl
and
stos
rol
iret
jnp
daa
cld
bnd
inc
adc
inc
and
adc
movsl
pusha
daa
sub
mov
mov
outsb
popf
stc
out
push
mov
test
sbb
fimull
push
cmp
fdivrl
ljmp
arpl
push
ljmp
clc
sbb
cli
push
xlat
sbb
loopne
lret
or
and
mov
lock
xor
mov
mov
xchg
stc
outsb
lret
add
aad
lret
cmpl
pusha
aad
pop
xchg
les
movsb
push
inc
or
xlat
and
and
dec
push
sub
shl
mov
pop
cmpb
lods
ds
dec
dec
cmp
push
and
arpl
or
inc
xchg
pop
loop
cli
sbb
sarl
hlt
push
dec
dec
sbb
pop
data16
out
mov
or
inc
outsb
lahf
pop
xchg
xor
cli
sbb
xchg
mov
das
cmpl
cli
scas
nop
mov
fstps
incl
pop
and
mov
popf
je,pn
and
cmpsb
cmc
xlat
in
imul
inc
popa
out
fildll
add
add
loopne
pop
dec
enter
push
jg
shlb
fs
les
cwtl
push
or
sbb
mov
pop
fcmovb
cli
lret
pop
and
cmp
jg
das
and
jle
insb
or
test
xchg
fs
inc
xchg
in
pusha
inc
fnstcw
xchg
fsubrs
pop
mov
sbb
sub
fnsave
pop
pop
cmp
sbb
jnp
dec
repnz
nop
cmpl
pop
xchg
int3
out
data16
xchg
stos
in
imul
scas
loope
inc
sub
cld
lock
in
add
lret
leave
cs
in
xchg
mov
inc
push
push
jae
call
jno
and
ljmp
cltd
scas
ss
insl
sbbb
jmp
addr16
out
das
gs
or
mov
in
adcb
or
pop
mov
add
xchg
sti
inc
cmp
es
data16
and
push
test
pop
dec
xor
xchg
rolb
and
mov
das
scas
movb
and
pop
in
fs
imul
xchg
scas
cmp
insl
mov
sub
bound
decb
mov
out
aaa
loopne
aad
xor
iret
sub
sub
inc
push
popf
xchg
sahf
sub
and
add
push
out
xchg
movsl
jecxz
ja
out
repz
mov
gs
jmp
cmp
inc
inc
adc
scas
mov
mov
and
ret
xchg
ss
mov
fsubp
scas
mov
or
lods
xchg
out
in
cli
sbb
mov
mul
adc
mov
xor
nop
mov
sbb
es
std
and
pop
inc
decb
and
mov
pop
roll
cltd
gs
add
test
mov
fwait
add
jecxz
xor
ret
nop
xchg
and
mov
xlat
cmc
jno
cs
xchg
je
shlb
xor
in
daa
jb
and
inc
mov
popf
fisttpll
jno
jecxz
mov
add
add
mov
cwtl
pop
movsl
mov
pop
mov
fidivrs
sbb
cmpsl
sbb
pop
cltd
aam
fsubrs
les
jge
loopne
test
xor
pop
push
inc
imul
ja
xor
add
dec
cs
mov
nop
fs
pop
and
sbb
pusha
cld
xchg
jnp
jne
rorl
cwtl
lds
js
mov
jo
xor
xor
add
mov
mov
jne
mov
in
dec
push
xchg
jp
ja
nop
lcall
sbb
inc
add
cmp
xor
push
sti
inc
cmpsl
add
je
xchg
aas
jae
lods
push
mov
fsubr
jae
xchg
rorb
xor
push
push
iret
lods
jp
push
adc
in
adc
dec
pop
add
adc
push
lret
xchg
inc
sbb
mov
repnz
pop
jbe
mov
push
xor
cmpsb
xor
inc
fidivl
pushf
and
arpl
add
xchg
in
stc
or
outsb
push
in
mov
push
in
push
mov
lret
xor
shrb
xchg
xor
add
sahf
inc
jp
inc
ficompl
sarl
add
je
sti
mov
adc
call
daa
nop
mov
ss
scas
fnstsw
mov
loop
push
jns
xor
fcmovnbe
es
mov
arpl
lret
jle
jecxz
inc
in
ja
testb
push
xchg
jecxz
ja
fs
or
mov
pop
xchg
inc
mov
cs
and
cmc
cwtl
insl
push
push
jo
loopne
gs
push
imul
jnp
gs
push
jg
push
mov
xor
pop
xchg
shrl
ds
jnp
add
je
imul
dec
mov
or
mov
ficomps
inc
es
out
jne
cmpsl
repnz
pop
fcoms
lea
std
pop
test
or
sbb
mov
sbb
imul
dec
jnp
loop
jb
xor
sub
mov
in
lods
inc
imull
dec
scas
mov
cmp
jge
outsb
test
aaa
cmp
fiaddl
js
lods
subl
shlb
xor
movsb
jns
pop
sbb
inc
int3
hlt
and
ja
inc
mov
mov
cmc
out
outsl
outsl
push
inc
cmp
xchg
xor
xor
sarb
pop
int
stos
pop
sbb
push
jbe
scas
imul
cmpsb
ret
jge
mov
data16
cmp
push
adc
mov
xor
sti
rcl
pop
test
in
inc
call
add
sbb
lcall
add
xlat
out
hlt
mov
dec
jae
outsl
insl
repz
sarl
insl
jg
popf
dec
mov
clc
cmovns
imul
or
xor
insl
sub
adc
imul
xor
and
test
pushw
dec
push
sbb
ljmp
int3
mov
sub
jecxz
mov
adc
repz
dec
rolb
inc
mov
cmp
pop
xor
or
xchg
ret
mov
and
mov
movsl
xchg
out
leave
and
mov
xchg
insb
dec
cltd
lock
xor
push
push
dec
subb
sbb
repz
movsb
mov
out
jecxz
aas
es
jae
push
mov
jg
and
pushf
dec
mov
inc
inc
lods
mov
jge
adc
jnp
push
cmpsl
mov
mov
fadd
aam
cmp
dec
cmp
sub
dec
int
mov
cmp
inc
sbb
out
shll
ljmp
ficoms
push
xor
imul
cmpsl
mov
cwtl
std
rcrl
out
enter
aad
fildl
aam
adc
jl
cmp
sbb
mov
xchg
jge
outsl
xchg
pop
adc
push
push
clc
mov
jmp
ret
pop
xor
ror
outsl
jb
cmp
enter
pushf
add
bound
les
cld
push
sub
pop
adc
push
add
mov
flds
cmp
addr16
add
ja
push
pop
enter
into
or
scas
shrl
inc
out
int
into
ret
pop
mov
jg
orb
and
gs
test
and
adc
lcall
loopne
icebp
push
cmc
insl
mov
outsl
pusha
xchg
jnp
mov
mov
leave
push
sahf
mov
test
ds
ficoms
jne
inc
sti
into
fadd
jmp
popl
push
push
adc
addb
pop
aaa
mov
jne
add
ret
push
jle
std
fwait
jo
pop
rcr
roll
pop
scas
sbb
mov
mov
fisubrl
in
in
dec
push
add
stos
pusha
sub
sub
jb
ja
push
and
xlat
fwait
movsb
int
lock
mov
cs
ljmp
out
insl
mov
push
jle
dec
aaa
mov
in
jg
mov
cmp
push
jle
lds
fcomps
shrb
xchg
mov
pop
sub
orl
jge
pusha
ja
fs
rorb
and
sub
jmp
mov
mov
mov
ja
sbb
pop
addr16
out
outsb
dec
lds
xchg
add
pop
sub
jl
popf
jge
mov
sarl
mov
int
out
dec
xchg
je
and
sbbl
mov
int3
mov
jg
cmp
cmc
pop
xlat
push
lahf
mov
pushf
lret
mov
imul
scas
gs
xor
repz
mov
jo
movsl
cmp
addr16
push
xor
adc
out
xchg
xchg
pop
in
es
ret
in
dec
jns
lock
cwtl
push
aas
lods
mov
xchg
loope
sub
dec
mov
stos
mov
out
iret
repz
jne
pushf
dec
dec
bound
ss
xchg
fisubs
mov
sub
orl
or
sbb
sub
lds
jecxz
dec
cld
mov
jmp
pop
addb
and
or
jnp
out
adc
add
into
pop
mov
mov
test
xor
jnp
out
lods
push
popa
jp
xlat
adcl
das
push
mov
rolb
jecxz
push
leave
pop
testb
pop
or
les
adc
jecxz
pop
inc
mov
rclb
dec
sbb
xchg
cmp
repz
popf
jmp
ret
mov
sbb
leave
and
cmp
or
cmc
les
lcall
mov
jl
jb
sbb
push
out
xor
je
mov
int
popa
adc
cmp
and
stos
cmpsl
sub
mov
adc
insb
xor
xchg
lret
popf
out
fcmovu
lret
clc
aas
mov
arpl
jne
push
jecxz
cmp
sub
push
scas
dec
pop
loope
add
add
clc
or
mov
lea
inc
xor
insl
mov
pop
sbb
push
push
addr16
mov
sahf
jne
cmc
and
pusha
jg
popa
adc
test
pop
movsb
cmp
in
cld
xchg
lods
sub
inc
call
xorb
jne
mov
cmp
inc
test
xchg
mov
outsb
dec
mov
lods
sbb
adc
pop
decl
and
stos
dec
push
dec
imul
and
mov
xchg
jle
and
sbb
faddl
test
imull
out
adc
fsubp
mov
sahf
mov
mov
pop
out
aad
mov
dec
ucomiss
repnz
jle
bound
cs
loopne
in
dec
out
push
dec
mov
addl
mov
add
jns
sub
xor
imul
test
sbb
outsb
sub
in
dec
jle
pop
fpatan
and
mov
xor
mov
sbb
outsl
popf
pop
cmpb
js
hlt
xchg
pop
lahf
test
and
push
sub
in
mov
inc
decb
ficomps
sub
sbbl
mov
pop
mov
arpl
out
mov
shl
cltd
popa
jg
test
sbb
xor
dec
stos
enter
es
add
stos
jno
in
fcoms
xchg
leave
dec
stos
push
rcr
sbb
sbb
fbstp
fistpl
aam
iret
inc
xchg
test
xchg
leave
mov
jbe
push
mov
mov
jo
mov
or
data16
push
adc
inc
icebp
add
fidivrl
cld
add
or
add
daa
push
inc
push
fstl
dec
xchg
push
daa
das
mov
ret
adc
loopne
pop
adc
test
ss
insb
ds
out
sarl
fisubrl
adc
sub
sbb
dec
jecxz
or
into
xchg
inc
inc
adc
xchg
stos
or
pushf
dec
mov
and
rcll
add
cmp
in
sti
outsl
fisubs
mov
es
or
jecxz
cmp
aam
rcr
cmp
mov
aas
aas
xor
mov
dec
andl
cmp
inc
test
out
pop
pop
bound
mov
or
jg
out
xor
jmp
jle
inc
adcb
mov
push
jp
sbbb
add
lret
iret
jle
jno
imul
fidivrs
sub
popf
dec
movsl
call
shl
jno
add
popf
leave
aam
inc
sub
push
sahf
cmp
addr16
dec
and
pop
cmp
fisttpl
jle
sbb
cmpsb
popf
sub
mov
outsl
shll
rcrl
mov
push
cmp
mov
shl
cltd
js
test
mov
xor
add
jge
stc
je,pn
jg
ret
shrl
ficoms
jmp
enter
dec
adc
xor
cmp
sub
loope
out
lea
enter
and
lock
xchg
add
adc
adc
jge
and
cmpb
xchg
push
icebp
jle
inc
xchg
and
dec
adc
mov
xchg
xchg
in
loope
xlat
insl
imul
sbb
and
sbb
jge
mov
jl
stos
adc
fcmovu
jns
ds
adc
or
mov
dec
mov
test
std
stos
fisubl
or
fcoml
leave
pop
fnstcw
icebp
insb
cmp
mov
dec
js
adc
popa
push
mov
xchg
mov
push
shrb
jne
ds
add
lods
dec
inc
fcomps
add
or
mov
dec
nop
cmp
addl
cmpsb
xchg
mov
imul
mov
aad
vfmaddsd
fstl
mov
mov
push
insl
insl
add
mov
mov
cmc
sub
cmp
mov
outsl
mov
pushf
dec
jne
popa
popa
adc
into
adc
notb
add
jmp
fs
movsl
pop
mov
into
mov
add
scas
pop
pop
and
cmpsb
inc
dec
sub
push
scas
lods
mov
jb
inc
lret
int3
loopne
lods
mov
jge
adc
lcall
outsl
xor
cwtl
xchg
jns
insl
jne
cmp
lods
sbb
mov
je
stc
sub
iret
into
dec
loope,pt
inc
scas
inc
pushf
mov
call
test
push
mov
or
stos
xorb
in
scas
mov
dec
mov
cmp
cmp
gs
ljmp
sahf
lock
sub
outsl
pop
inc
cmp
xchg
pop
adc
movsl
inc
mov
pop
sbb
pop
cmp
mov
aad
scas
mov
imul
push
jb
mov
shrb
clc
fstps
mov
jmp
popa
repnz
popa
mov
mov
das
pop
in
ja
test
js
stos
add
ret
jge
in
xor
test
enter
inc
lock
xor
fdivr
push
xor
mov
cmp
sbb
int
dec
mull
add
mov
ja
xchg
pop
xlat
xchg
divl
cmpsl
mov
and
mov
hlt
test
pushw
aam
testb
iret
ret
and
adc
push
mov
xchg
xchg
aad
inc
push
ljmp
and
xlat
push
xchg
ret
mov
into
or
addr16
or
or
lahf
inc
mov
orb
push
mov
decb
insb
and
in
inc
es
rep
inc
xor
repnz
lcall
nop
cwtl
rcll
jg
add
mov
push
jbe
and
ss
inc
add
push
inc
test
sub
in
scas
push
gs
sahf
xchg
lret
call
jb
lret
jge
test
inc
cmp
mov
in
cld
arpl
mov
sub
sub
movsb
adc
xor
ljmp
pop
aas
mov
push
loope
addr16
dec
dec
mov
cmp
sbb
clc
out
imul
arpl
or
movsb
cmpsl
adc
movsb
xchg
add
aam
inc
hlt
repz
fiaddl
std
jmp
xor
add
add
pop
rcll
lds
ror
sbb
push
pop
mov
fwait
mov
into
ds
test
jnp
adc
dec
aaa
mov
gs
ds
pushf
jl
push
loopne
push
icebp
insl
movlhps
mov
lea
ljmp
addr16
icebp
or
mov
scas
and
ja
popl
scas
popf
or
or
dec
cmpsb
stos
mov
sbb
lret
sub
push
mov
jnp
ljmp
fdivs
shll
jns
inc
sbb
mov
fimuls
scas
push
xlat
adc
xchg
jle
jp
mov
ljmp
push
in
pusha
mov
xchg
pop
and
js
push
push
inc
outsb
or
sub
test
push
sub
cmp
cmp
push
and
test
mov
push
cli
lds
jmp
cmp
or
in
adc
ja
mov
and
pop
or
sbb
or
cmpsb
pushf
pushl
adc
pusha
cli
adc
std
iret
dec
push
inc
mov
or
mov
mov
daa
cmc
fdivrp
imul
jnp
ja
repz
xor
inc
loop
dec
pop
sub
in
mov
fisttpl
out
mov
and
dec
and
push
outsb
sbb
lock
adc
dec
pop
xor
stc
int3
mov
jmp
out
and
add
repz
sub
loop,pt
shr
sti
jg
push
test
fistps
xchg
xlat
shlb
jmp
lret
loop
out
mov
cs
xchg
and
test
adc
mov
pop
adc
cmp
dec
testb
pop
test
iret
cmp
sub
std
outsb
addr16
pop
xor
aas
arpl
sbb
inc
pop
inc
aad
sub
add
jecxz
push
lods
xor
sbb
pop
jne
and
and
push
mov
enter
in
shrb
cmp
jl
in
lahf
jns
lock
je
or
jl
arpl
inc
fbld
clc
adc
insb
fwait
pop
nop
je
scas
cltd
lret
insb
mov
fmull
sbb
add
pop
test
ja
out
cwtl
fstl
jae
dec
jle
nop
xchg
jecxz
mov
jmp
popa
mov
or
adc
fwait
in
pop
and
out
fsubrl
shr
sub
shrb
sarl
into
cltd
pop
ret
xchg
shl
sbb
mov
lcall
mov
cmp
int3
imul
adcl
test
xor
cmp
push
and
aas
dec
cwtl
fcomps
lods
test
sbb
push
inc
cmp
cmp
iret
xor
push
mov
test
ret
mov
lret
and
inc
int3
mov
sbb
cmp
hlt
jecxz
jmp
add
into
xor
ljmp
in
push
jne
testb
xchg
jne
mov
xorl
sbb
test
xchg
fcomps
out
and
xor
mov
add
or
sub
test
pop
ficoml
push
pop
js
xor
ss
pop
dec
push
or
push
pushf
repz
outsl
out
into
add
mov
dec
jl
imul
call
pop
int3
dec
pop
jecxz
cwtl
cltd
test
es
jge
push
pop
cltd
fs
subb
adc
dec
pop
xchg
pop
cmp
xor
push
je
jge
stos
imul
push
movsl
jnp
push
sub
lods
ficompl
inc
les
dec
pop
jp
inc
stos
shlb
push
sbb
mov
cmp
fnstsw
imul
sub
xchg
sbb
shr
xchg
xor
es
repz
cmp
daa
test
xor
and
push
ds
or
je
mov
pop
pop
ret
out
mov
dec
pop
adc
lcall
adc
adc
cli
lahf
and
adc
popa
inc
jge
cmc
add
in
stc
lcall
lods
cmp
lret
pop
and
mov
shrl
push
pop
mov
lods
repz
loop
cli
mov
iret
loop
mov
xchg
add
push
dec
mov
insl
mov
xor
inc
pop
stos
pushf
cmp
cmp
and
fisubs
ds
jb
stos
push
ja
sbb
pop
and
inc
mov
fsubrs
notb
cmpsb
cmp
insl
lret
mov
jp
mov
das
jne
push
sahf
clc
testl
fbld
enter
lret
data16
jns
and
sbb
xor
cmp
mov
loop
jnp
pop
rcr
cli
and
je
das
jne
ds
ljmp
xchg
sahf
enter
out
mov
aam
repz
inc
ror
fwait
xor
mov
nop
mov
loopne
inc
fucomi
movsl
sub
mov
ja
jns
int
push
xor
loop
and
or
mov
jns
aam
test
icebp
cmpsl
inc
jmp
in
in
xchg
pop
push
das
mov
rcrl
insb
aad
dec
cmpsb
mov
cltd
test
xchg
fiaddl
mov
clc
rcrb
jge
lock
aam
lcall
arpl
cli
scas
lds
dec
inc
lcall
push
push
xchg
sub
xchg
dec
daa
aam
bound
mov
xor
mov
arpl
dec
dec
sub
jno
mov
dec
xchg
jo
xchg
inc
pop
sbb
outsb
rcll
or
dec
add
shl
mov
adc
addr16
ret
ror
inc
push
mov
mov
add
mov
fst
cli
inc
pop
inc
nop
adc
adc
fwait
test
dec
fnstenv
ja
mov
mov
test
jmp
jecxz
hlt
dec
cmp
jno
jg
push
push
xor
dec
outsb
xchg
inc
insb
in
repnz
jnp
jmp
cwtl
push
xor
mov
sub
add
sbb
imul
inc
lds
popf
arpl
cmp
aaa
outsb
fldl
add
cmp
sub
push
clc
hlt
mov
imul
jle
push
pop
pop
push
push
and
orb
aas
fwait
insb
cmp
aas
sbb
dec
test
mov
lahf
push
popf
std
and
jbe,pn
mov
lods
inc
mov
cmp
push
lahf
mov
es
xor
inc
pop
jecxz
sbb
popa
lret
daa
mov
aas
fstl
je
mov
mov
jecxz
dec
pop
mov
pop
jle
cld
xchg
jbe
adc
or
jle
fstps
pushf
lods
std
test
int
push
call
mov
loope
adc
lds
pop
hlt
xchg
add
divl
data16
push
cmp
add
and
push
cmpsb
xor
pop
inc
push
pop
in
and
stos
dec
sbb
int
adc
dec
pop
fsts
mov
stos
adc
push
xchg
repnz
btc
ss
adc
sub
mov
repz
jecxz
mov
dec
lret
mov
stos
push
pushf
and
clc
mov
xchg
adc
mov
push
push
adc
shl
sbb
pop
fsts
loope
fwait
inc
scas
add
sub
mov
pop
jno
pop
rcll
inc
stos
xor
sub
sub
cmp
enter
mov
and
inc
pop
jmp
rcrl
sub
push
bnd
aam
or
and
and
shrl
jle
mov
arpl
push
jns
sbb
push
gs
or
movsb
add
xchg
scas
stos
packuswb
xor
imul
dec
jg
or
and
jle
int
je
rcr
fisubrs
add
pop
aaa
mov
pop
iret
jmp
or
cmp
push
mov
or
scas
cld
dec
mov
and
dec
mov
rcl
jmp
mov
stos
cmp
int3
cmp
adc
xchg
adcl
jp
push
mov
fstpl
xchg
cwtl
pop
push
loope,pn
mov
and
movsl
or
dec
push
in
fs
xorb
int
pop
fistps
pop
cwtl
and
rorl
pop
mov
not
adc
nop
dec
imul
pusha
pusha
push
jnp
std
fucom
push
dec
test
mov
lcall
push
lock
fs
stc
pop
jno
or
inc
clc
and
imul
mov
fldenv
je
pop
std
jecxz,pn
mov
cmp
add
scas
jo
out
mov
es
shl
repz
test
stos
sub
pushl
orb
push
adc
xchg
fs
scas
mov
mov
std
cmp
inc
push
insb
add
sbb
jb
adc
or
into
sub
and
add
xchg
loope
andl
cmp
mov
xor
push
xchg
adc
mov
and
jl
jg
stc
jno
arpl
shlb
cmpsl
xchg
jb
cld
jle
sub
mov
mov
mov
pop
in
das
mov
icebp
adc
pop
and
and
outsb
sub
stos
loope
inc
imul
jg
mov
mov
vphaddubq
aam
repz
js
pop
cmpsl
imul
push
add
shll
mov
inc
mov
pop
xor
adc
fcoml
pop
jb
int
daa
sbb
in
push
inc
push
aam
jle
repnz
jmp
mov
add
and
mov
test
es
inc
sbb
adc
sbb
pusha
sbb
add
je
cmpsb
cli
cmp
arpl
or
mov
pushf
cmc
mov
xchg
dec
idivl
inc
inc
out
and
lds
loop
push
push
out
aas
or
cmp
sub
mov
fisttps
inc
mov
call
sbb
mov
shrb
ret
pop
jae
cs
mov
pop
jae
iret
cmp
mov
pusha
aaa
pop
push
pushf
xor
cmp
sbbb
out
jge
test
mov
jae
ret
sbbb
aad
inc
enter
pop
inc
sti
push
adc
push
xchg
lahf
and
jecxz
xor
pop
mov
addr16
jae
jbe
dec
cmc
inc
cwtl
push
ss
push
call
dec
mov
scas
cmp
xor
das
inc
enter
pop
lret
xor
xchg
imul
iret
insb
mov
mov
mov
xorl
cmp
cltd
jg
mov
stos
bound
shlb
mov
dec
inc
or
cmp
fistpl
fwait
mov
in
pop
je
les
inc
sahf
adc
popf
lret
lret
js
or
cwtl
daa
repnz
mov
fldl
imul
mov
mov
imul
jmp
imul
fwait
icebp
sbb
inc
cld
cmpsb
sbb
jmp
sbb
lcall
or
divb
aaa
jmp
je
lcall
aad
dec
or
sbb
rcll
xchg
imul
jecxz
pop
add
dec
shl
out
jecxz
mov
and
iret
sbb
in
and
rolb
ret
sbb
sub
rorb
and
jo
add
sub
pop
dec
push
add
negl
ss
enter
xchg
or
sbb
std
not
bound
push
stos
out
inc
cmp
inc
sarl
ss
roll
xchg
sub
pop
jne
jl
xor
stos
xchg
sti
pop
popf
sbb
jmp
mov
mov
mov
push
mov
mov
xlat
jnp
push
mov
and
xchg
in
aad
rclb
xchg
mov
sbb
stos
rcr
adc
mov
adc
roll
ret
lock
mov
gs
leave
cmc
lret
xlat
mov
xchg
in
out
adc
ds
sahf
jecxz
cwtl
push
mov
fsubrs
fcoms
test
lock
or
dec
pop
xchg
mov
dec
ja
xor
out
cs
mov
fwait
push
rcr
jmp
daa
inc
push
enter
dec
mov
bound
or
aas
xchg
push
insl
push
in
cmpsb
push
pop
xchg
xchg
dec
test
or
ljmp
mov
test
jp
or
fistl
pop
incl
jnp
fwait
xor
mov
jge
xchg
sbb
add
test
mov
fiadds
les
xchg
cltd
pop
mov
fbld
enter
pushf
pop
or
out
adc
jge
je
lcall
mov
mov
add
sub
xchg
xor
lcall
sbb
sub
dec
xor
xor
int
sbb
mov
sbb
data16
xlat
dec
fcom
aam
daa
lret
outsl
lcallw
ds
iret
cmp
mov
aad
push
jb
push
mov
or
jae
roll
fsubp
subl
dec
cmp
mov
mov
or
fidivrs
mov
test
dec
sub
es
jmp
popf
cmp
sub
push
fidivrl
mov
idiv
pop
cli
pusha
incl
mov
mov
or
mov
test
movsb
dec
into
in
sbb
xor
jle
and
mov
and
xchg
cwtl
sbb
dec
outsb
test
adc
jecxz
sbb
pop
mov
je
out
test
rcll
dec
cmp
arpl
mov
push
ret
cmpsl
add
pop
aad
mov
imul
jp
ljmp
loop
aaa
cmp
out
fistl
fstl
xor
out
in
fldl
inc
in
fcoml
xchg
mov
adc
sub
lea
and
aaa
dec
aad
jno
sub
add
mov
xchg
out
push
push
cli
int3
mov
cmpsl
xchg
or
mov
loopne
gs
push
and
inc
mov
repz
out
movsl
mov
stc
ds
cmp
inc
add
verr
jno
lret
lcall
rcl
mov
shrl
cmp
jo
and
insb
sti
cld
xchg
mov
iret
adc
dec
shlb
addr16
and
sub
sub
xchg
daa
movzbl
inc
dec
mov
ja
cmp
cwtl
mov
insb
and
cmp
cmp
ret
sti
loopne
pop
popf
es
sub
sbb
sub
inc
shl
lds
loope
fdivs
mov
call
pop
cltd
adc
mov
xor
icebp
xchg
xchg
aas
or
xchg
lahf
repz
add
in
pusha
xor
fcomps
dec
push
cli
std
add
xor
push
scas
jge
sbb
mov
push
pop
test
push
test
lahf
mov
sub
imul
fwait
subl
test
jmp
sbb
push
cmp
aas
push
push
mov
mov
mov
inc
psllw
add
jecxz
pop
rcrl
adc
in
mov
sbb
push
int
stos
loope
push
or
psrlw
push
jns
shl
iret
dec
insl
adc
jbe
sbbb
push
push
cmp
out
add
mov
nop
lcall
mov
cmpsb
inc
data16
testl
in
add
sbb
shl
fimull
lahf
jmp
out
add
mov
inc
inc
or
clc
push
sbb
add
outsl
std
fcmovne
jb
push
sti
in
xchg
mov
jp
repz
imul
repnz
mov
cld
mov
cs
sub
jbe
pop
mov
cltd
pop
pop
js
adc
inc
call
popa
pop
imul
dec
lds
xchg
lret
mov
dec
inc
xchg
add
xor
std
pop
dec
je
sbb
push
popa
cmp
pop
aaa
cmpl
or
add
xchg
jl
push
or
jbe
push
mov
fsubrl
movl
adc
test
popa
xchg
in
rol
inc
xchg
cmp
push
fcomp
mov
jns
push
dec
cmp
lret
mov
cmp
sahf
xchg
out
mulb
nop
sti
fcmovb
or
loope
inc
adc
rcrl
pop
clc
pop
in
jae
xor
outsl
loop
call
stos
xchg
mov
clc
adc
xor
sbb
mov
test
dec
in
jle
call
jg
jge
movsb
aad
es
pop
icebp
cmc
decb
lods
and
iret
roll
mov
je
and
adc
push
or
int3
jecxz
test
icebp
sub
inc
arpl
dec
jb
call
cmp
and
add
xor
das
lds
push
insl
xchg
adc
and
cli
cmp
mov
jbe
lds
mov
push
mov
inc
inc
or
push
into
int
or
cmovae
loope
inc
mov
mov
gs
lea
cmp
jecxz
dec
push
jmp
enter
dec
addr16
rcr
add
nop
xchg
int3
movsl
gs
adc
pop
push
add
imul
fldcw
hlt
stos
hlt
bnd
add
add
inc
adc
imul
jg
aam
std
push
iret
mov
cmp
insl
jbe
mov
pop
leave
divb
mov
add
lods
stos
and
lahf
jns
aaa
mov
das
push
sbb
in
in
sub
mov
and
inc
push
xor
pop
jle
ja
mov
je
inc
shlb
mov
cmp
imul
test
adc
in
out
fsubrp
pop
pop
mov
stos
sub
sub
xchg
pop
xrelease
sub
push
test
inc
mov
xchg
inc
subl
inc
push
push
mov
sub
mov
cwtl
sbb
lret
repnz
cmp
js
mov
arpl
jae
aas
cmpl
out
xchg
mov
or
add
cmp
xlat
jle
out
test
ja
ficompl
pop
cmp
lock
test
xorl
inc
jnp
mov
in
sbb
push
jmp
and
pushf
les
dec
int3
lcall
adc
push
daa
xor
cmp
nop
push
xchg
cli
pop
push
adc
out
test
fdivl
cmp
fnstcw
push
repnz
jge
out
push
jecxz
or
jbe
insl
mov
mov
scas
xchg
idivl
jp
scas
pop
or
jns
push
sbb
cmp
jmp
out
lcall
push
ret
stos
mov
in
jae
mov
xchg
xlat
sbb
mov
lcall
cmpsb
xchg
jne
mov
imul
mov
mov
cmc
lods
pop
movsb
loop
push
mov
loop
mov
andb
bound
stc
mov
inc
xchg
xlat
inc
xchg
push
shlb
adc
dec
test
popa
mov
fidivl
xchg
dec
js
dec
adc
rcl
and
push
push
mov
outsl
popf
xor
mov
pop
push
sub
mov
scas
dec
sub
lock
inc
mov
push
or
xchg
mov
lds
movsl
mov
pop
hlt
popl
xchg
mov
sub
stos
fsubrl
cmpsl
aam
or
mov
subl
rcrl
sub
cmpsl
mov
in
pop
dec
jge
loope
sbbb
add
cs
imul
dec
jbe
rcrb
cmpb
lds
sbb
ret
ja
test
sti
aas
inc
int3
arpl
or
mov
dec
data16
stos
sub
add
pop
movsl
int
andb
jo
std
lock
out
or
or
ret
fdivrp
sub
fs
mov
aas
inc
sub
call
jnp
xchg
je
pop
aaa
jo
fidivl
pop
test
mov
ret
sub
stos
xlat
gs
adc
sbbb
sub
mov
jecxz
aam
mov
imull
cmp
jo
sub
adc
mull
push
in
vpmaxsw
push
jg
or
sub
fwait
fwait
pop
rorb
lahf
push
fisubl
and
shl
sbb
adc
repnz
mov
leave
int
push
and
pop
data16
inc
in
xlat
xchg
add
ret
or
inc
jmp
lcall
cld
addr16
inc
cli
jbe
fidivrl
test
test
icebp
lret
or
rorb
push
loopne
test
add
lods
cmp
jmp
ljmp
xchg
pushf
scas
push
lea
lods
call
arpl
mov
cmc
ja
shll
pop
mov
mov
xchg
mov
xchg
adc
jmp
outsb
cmp
idivl
mov
sub
mov
jnp
sbb
shlb
xchg
mov
xchg
adc
pop
sub
cli
rorl
mov
inc
fcmovb
push
lea
das
pop
jle
xchg
neg
jnp
js
mulb
or
adc
popf
clc
push
in
mov
mov
add
pop
or
out
fs
bound
mov
gs
arpl
dec
popf
mov
arpl
rorb
jle
jbe
add
jb
ljmp
je
lock
insl
fdivrs
add
pusha
stos
push
mov
inc
imul
jo
into
repz
je
fsubl
push
adc
xlat
lods
lret
pop
dec
mov
push
fiaddl
movl
aas
push
mov
shr
add
test
xorb
rolb
and
push
scas
insl
nop
pop
outsl
test
adc
imul
iret
cmp
dec
mov
adc
nop
mov
adcb
inc
cld
pop
cli
cmpsl
clc
and
fwait
xor
pop
pushf
jne
and
push
push
loop
sbb
sub
add
jle
jge
in
das
loopne
push
movsl
inc
cmp
inc
test
pop
rcrl
xchg
in
mov
insb
or
leave
call
cmp
in
loope
xchg
xor
lret
jg
and
neg
cmp
mov
js
sub
dec
pop
stos
clc
aad
cwtl
jne
xchg
sti
cmpb
icebp
xor
inc
and
or
add
fistpl
pop
jge
mov
inc
scas
nop
add
ss
mov
adc
mov
pop
xchg
push
enter
and
mov
lods
sub
clc
fisttpll
dec
fstpl
mov
jl
ss
jge
daa
test
les
lret
or
sahf
mov
mov
push
cmp
outsb
mov
mov
scas
lods
insl
shlb
faddl
js
out
adc
mov
and
or
jne
cld
push
test
inc
jge
lcall
lock
lods
push
aad
mov
cmp
cmovno
nop
vorpd
pop
dec
inc
xchg
sahf
movsl
test
sbb
fwait
mov
push
outsb
js
mov
aad
mov
cs
jl
pop
rcrb
or
loope
mov
adc
inc
or
stc
xlat
mov
jge
or
out
aas
mov
jecxz
adc
loope
mov
adc
inc
or
ret
enter
push
jns
push
adc
or
mov
pop
mov
cld
cmp
mov
jne
sbb
mov
out
mov
cltd
jne
imul
xor
sub
test
loope
gs
or
cmp
jns
test
fwait
mov
lods
aas
mov
sbb
das
xchg
fstps
pop
mov
xor
mov
push
ret
xor
adc
std
mov
push
add
xchg
lahf
mov
std
cmc
or
cs
adc
xchg
mov
ret
loopne
aad
jno
pop
rep
test
pop
inc
xchg
inc
andb
fidivl
mov
add
jmp
cmp
test
js
jmp
les
outsb
cmpsl
jno
scas
ds
arpl
imul
insb
cmpsl
gs
mov
flds
lcall
xchg
jg
loopne
repz
in
loope
push
jp
jnp
sub
icebp
ret
enter
or
repnz
mov
or
cmp
adc
ss
rcr
pop
es
pop
jmp
scas
lcall
sbbb
xchg
push
loope
sarl
push
pop
aas
inc
cmp
pop
mov
test
pop
push
dec
aaa
mov
cmp
je
into
fucomi
sbb
push
test
shlb
xchg
out
xor
add
inc
shrl
test
mov
push
and
js
aas
mov
movsb
push
mov
aaa
hlt
movsl
mov
and
ret
xchg
imul
imul
inc
xchg
inc
sbb
rcrb
dec
mov
mov
ja
out
adc
xchg
daa
dec
jl
pop
xchg
enter
mov
into
or
push
mov
jns
hlt
sahf
das
xchg
jo
je
test
push
mov
xor
xchg
in
push
xchg
push
mov
fdivs
fbld
je
inc
out
push
add
ss
loopne
or
xchg
rorb
adc
inc
gs
in
iret
test
mov
sub
and
adc
push
repz
dec
xchg
xchg
enter
push
adc
mov
jo
dec
sub
inc
and
imul
pop
nop/reserved
arpl
into
xchg
je
aad
and
out
pushf
fidivrl
jmp
int3
inc
push
mov
stos
and
aas
int3
and
cmp
ljmp
das
push
jle
add
jno
das
mov
jmp
je
stc
push
cmpl
or
ret
mov
mov
cmp
jb
test
jne
xor
sbb
loopne
xor
xor
imul
or
push
mov
xor
push
inc
scas
int
shll
in
cmc
cld
mov
aam
hlt
and
xchg
push
movsb
mov
dec
bound
cld
pusha
cmc
mov
adc
jmp
hlt
xor
scas
sub
ds
pop
adc
adc
push
cmp
js
enter
mov
push
dec
mov
pop
sbb
mov
rclb
push
cwtl
xchg
xchg
movsl
movsl
aam
pop
xchg
clc
sbb
bound
sbb
in
mov
loope
bt
sahf
mov
insb
fwait
dec
and
aam
outsl
xchg
stc
xlat
adc
jno
cmp
leave
bound
pop
cmp
mov
mov
jns
rclb
jbe
mov
imul
movl
das
cmc
mov
push
adc
stos
mov
scas
mov
mov
lods
fidivrl
jne
hlt
add
testb
cmp
xchg
mov
dec
cmpsl
lods
out
or
mov
lods
pushf
pop
dec
shll
fidivs
inc
icebp
int
cli
fcmovne
jl
mulb
and
xchg
cmpsb
in
xchg
mov
lods
idivb
pop
or
out
sub
xor
mov
sub
pop
cmpsl
add
adc
in
and
insl
add
ljmp
je
and
inc
scas
jae
cmpl
add
xor
xor
jge
icebp
cmp
loopne
loopne
movsl
mov
cmc
and
mov
popa
mov
dec
shll
js
bnd
pop
pop
push
push
outsl
or
push
sbb
add
sbb
jne
stos
sub
scas
adc
icebp
xor
add
or
mov
rcr
adc
xchg
cmpsl
cmpsb
sbb
pop
push
inc
pmaxub
inc
aam
sbb
push
loopne
fwait
mov
jecxz
inc
sbb
push
jmp
lods
aaa
shll
insl
push
repnz
sbb
or
fcmove
loop
mov
or
cmp
fisubl
inc
mov
jne
std
push
push
pop
das
xchg
out
pushf
and
in
divl
repz
popf
je
sub
adc
iret
xor
pop
test
int3
les
out
icebp
push
push
lods
inc
sbb
std
or
lods
int
andl
push
inc
jnp
dec
adc
cwtl
call
mov
sub
cmp
sbb
jl
aas
inc
jnp
ss
jle
addr16
bnd
rcrb
subl
jle
call
bound
out
adc
lods
ds
mov
std
out
sbb
and
xchg
or
lods
or
xor
pop
inc
push
push
push
or
jbe
pop
add
cltd
push
outsl
cmp
fisttpl
int3
int
cli
int
cmp
cltd
pop
push
dec
xchg
repz
mov
hlt
mov
lret
jnp
cmpsl
pop
cmp
cmc
test
shlb
stc
cmp
scas
mov
push
dec
adc
pop
int
rorl
rol
pop
cmp
imul
jo
arpl
sbbl
sbb
adc
nop
xor
rclb
inc
jbe
int
or
pop
insl
push
ds
push
jns
repnz
arpl
xchg
negl
repz
inc
mov
jmp
das
adc
lret
pop
pop
jnp
mov
pop
pop
adc
xchg
xlat
out
mov
in
movsl
mov
adc
scas
jno
mov
jne
adc
pop
cmp
xchg
ss
mov
adc
xlat
cmp
mov
ds
fsts
cwtl
adc
insl
aam
fildll
xchg
imull
repz
cmp
out
pop
or
enter
testl
cmp
mov
popa
popf
mov
nop
mov
mov
mov
jae
mov
movsb
sbb
mov
pop
xor
jecxz
mov
jg
adc
std
inc
and
jns
inc
jp
rorl
or
fucomp
sub
das
ss
cmpsl
xchg
or
sbb
in
lods
out
jge
leave
sbb
mov
or
adc
cmp
in
cs
mov
mov
dec
clc
or
xor
mov
pop
push
jge
ret
iret
sahf
adc
sub
and
fstl
enter
push
push
or
loope
sahf
nop
out
das
les
adc
cmp
pusha
cmpsb
imul
bnd
mov
sbb
push
push
xchg
push
pusha
cld
lret
and
ficoms
cmpl
movsl
call
ljmp
sub
scas
addl
sahf
imul
xchg
mov
insb
cmpsb
cmp
or
lea
int3
mov
jo
xchg
push
sbb
mov
arpl
popf
imul
lods
push
in
jg
fdivrs
adc
test
sbb
push
or
cmovne
popl
inc
add
xor
test
pushf
push
gs
add
loopne
les
jle
cmpsb
cmc
enter
ror
in
ficomps
adc
outsl
mov
xchg
or
and
ret
fadds
lods
adc
js
mov
daa
lods
je
addr16
dec
fidivrl
xchg
aaa
cmp
shl
xchg
out
mov
adc
cmp
adc
push
pop
pop
pop
xor
lahf
cld
add
call
je
dec
or
loope
sub
sub
mov
dec
les
mov
jo
stos
cmpsl
hlt
add
cwtl
test
lret
fildl
shl
lret
and
xor
sbb
adc
dec
inc
pushf
sbb
inc
ss
int3
sahf
mov
push
or
add
adc
lret
addr16
std
xor
enter
xchg
push
arpl
and
sbb
xor
test
jne
mov
push
cmp
mov
scas
mov
cmp
mov
ds
lds
pop
add
push
push
dec
xchg
mov
jp
push
mov
xor
and
xchg
push
idivl
push
sbb
addr16
jb
or
xor
sbb
vprotw
es
in
aaa
ret
ja
ja
push
repnz
and
es
mov
add
stos
negl
cmp
mov
xor
xchg
lds
cltd
jl
lahf
dec
jmp
movsl
repnz
lods
cmp
pop
shl
mov
mov
out
pop
cmp
je
dec
arpl
jmp
pop
push
jno
test
js
repz
cmp
dec
push
xchg
aam
movsl
or
sbb
mov
ja
cmp
add
imul
xor
sti
fisttpll
mov
stos
add
pop
icebp
push
xchg
imul
push
movsl
sbb
mov
test
lret
lea
pushf
stos
add
fwait
daa
pop
xlat
cs
outsb
testb
rcrb
iret
inc
and
push
nop
out
jge
jno,pn
xor
imul
bound
fcoml
inc
sub
cmp
mov
push
sub
andl
dec
cmp
out
cmp
xor
out
adcb
mov
inc
dec
dec
sbb
insb
push
psrlw
hlt
arpl
gs
pop
pop
sahf
mov
dec
mov
movsb
outsb
test
mov
fisttps
xchg
rol
inc
icebp
movsl
shr
into
or
les
pop
cmp
jl
push
inc
test
mov
dec
xor
sahf
mov
flds
and
cld
inc
pop
inc
xchg
push
sub
lcall
cmp
mov
cmp
sti
ret
cmpsb
sahf
popl
inc
and
repnz
push
push
dec
xlat
cmp
enter
inc
inc
movsb
icebp
mov
pop
stos
cmc
mov
hlt
push
aas
mov
hlt
mov
add
xchg
aaa
ret
mov
lahf
and
inc
xchg
rcll
add
out
loop
sub
mov
push
xor
call
aas
dec
lret
popa
jge
arpl
sbb
sub
lods
loopne
and
fiadds
enter
xchg
push
loop
cli
lods
iret
and
dec
add
and
sbb
cmpsl
mov
mov
push
fstpt
lret
cmpsl
inc
dec
or
in
in
add
push
iret
clc
enter
test
pop
fsubrl
or
dec
sbb
xorl
cltd
and
push
lahf
aad
cmp
jge
fistl
stos
sbb
mov
js,pt
ret
mov
mov
sbb
sbb
fsub
adc
lock
mov
sbb
mov
clc
jbe
adc
loopne
or
loope
cmpsl
jmp
sbb
push
jno
adc
adc
mov
cmpsl
pop
and
push
rcll
mov
mov
sub
gs
sub
pop
lock
pop
ja
loope
cli
mov
fists
push
cmpsl
lcall
jb
cmp
push
stos
jle
fnstenv
outsb
loopne
lcall
test
cmpsl
aaa
xor
data16
enter
gs
fisttps
xorl
xor
inc
loopne
fstpt
push
mov
lock
jne
es
clc
adc
add
ret
push
rorb
out
cmp
es
cmp
push
jbe
fnstcw
mov
pop
inc
cld
es
daa
test
rclb
dec
or
int3
dec
mov
jb
jne
movsb
and
fidivrs
jmp
mov
mov
pop
xchg
or
dec
repz
fs
loop
cmp
and
jno
inc
call
mov
outsl
ret
push
fwait
stc
add
shrl
stos
cmpsl
mov
mov
scas
mov
pop
mov
cmp
enter
sbb
in
jle
popf
outsb
aaa
add
jmp
xor
jb
push
adc
add
or
jp
push
jp
fisttps
addr16
pop
lods
cmpsb
decb
jns
sbb
inc
pop
stos
movl
fildll
sti
ror
cmp
outsl
int3
jno
popf
das
sub
dec
sahf
pushf
add
add
lods
or
lds
dec
jo
mov
shl
roll
sbb
xorb
inc
sub
pop
sub
push
leave
cwtl
ss
decb
jo
std
mov
dec
mov
lret
jae
mov
xchg
insb
mull
xlat
jle
mov
lahf
fisubrs
int
jo
xchg
mov
fldl
xchg
aas
mov
lods
lea
or
std
addb
popf
sub
lods
in
gs
push
cmp
sub
mov
push
xor
xchg
nop
insl
push
insb
jae
imul
mov
jmp
les
insb
cmp
push
sbb
sbb
add
push
dec
or
cmp
scas
cmp
push
xor
je
outsl
jo
iret
in
outsb
aad
pop
dec
aam
enter
cmp
xor
mov
push
xor
pop
pop
gs
stc
mov
xchg
mov
shrl
enter
sbb
outsb
test
out
adc
faddl
adc
xor
push
lea
rolb
push
xchg
mov
cwtl
out
mov
test
push
retw
orb
cmpsl
rcr
stos
ret
iret
mov
pop
ficompl
shrb
add
mov
insl
test
imul
adc
mov
fnsave
ss
jno
stc
js
lcall
andb
mov
cltd
lods
and
test
jge
ja
int
mov
sbb
inc
imul
push
mov
pop
mov
cld
inc
std
mov
push
clc
jecxz
testl
inc
sbb
adc
sub
cmp
in
or
inc
clc
inc
leave
loop
nop
pop
push
in
adc
mov
stc
jns
and
mov
push
into
sbb
mov
and
jno
inc
nop
pop
cmc
and
test
addr16
dec
js
fcompl
inc
ret
push
push
fstl
sub
xor
test
push
outsb
xlat
repnz
and
mov
mov
movsl
repnz
pop
mov
test
cmp
and
out
test
push
dec
push
push
ret
setg
dec
aam
or
mov
loope
pop
push
push
mov
push
fsts
adc
lret
nop
stos
int
shll
push
and
or
sub
icebp
dec
loope
inc
cmpsl
dec
mov
or
mov
test
xor
sub
clc
sub
push
imul
into
xor
mov
pop
and
mov
or
cmp
scas
outsl
xchg
pop
sub
imul
inc
xchg
and
shlb
fwait
insl
pusha
xor
sbb
mov
lcall
inc
jae
incl
inc
cmp
pop
xlat
lods
or
inc
xchg
out
and
pop
pop
dec
je
jecxz
popa
push
mov
aad
test
jl
subl
ja
fildll
pop
sub
inc
xor
or
fidivs
jno
fs
movsb
leave
or
adc
or
mul
cmpsl
jbe
jae
mov
loop
cmp
xchg
push
lea
cmp
sub
je
adc
mov
jae
imul
andb
mov
jmp
fisttps
icebp
jl
xchg
sbb
push
fistpl
rcl
mov
int
jne
xchg
fnclex
out
gs
jns
mov
mov
daa
popa
mov
dec
pop
push
test
cs
mov
xorl
ss
inc
pusha
mov
add
ja
out
add
adc
js
lret
lret
adc
jne
scas
jl
inc
fldt
arpl
lds
ljmp
sbb
pop
aas
shr
cmpl
mov
je
int3
scas
fdivrl
mov
xchg
pop
jae
push
ss
jb
mov
je
mov
push
add
shl
mov
push
inc
cmp
inc
mov
insl
pop
nop
bound
ljmp
scas
aaa
xchg
ss
add
pop
imul
inc
imul
inc
out
rorl
movhps
pop
gs
or
adc
jns
hlt
mov
cmpsl
xchg
mov
dec
mov
pop
notl
and
jle
lret
scas
inc
jne
in
push
pop
aam
js
mov
repnz
and
dec
sub
icebp
xor
pop
div
daa
testl
sbbb
xchg
mov
leave
or
repz
fisubrl
mov
cmp
xor
cmp
xor
montmul
cmpsb
add
pop
sub
mov
cmpsb
imul
pop
lea
roll
out
add
outsb
mov
negb
push
jne
in
dec
fidivrl
sub
jo
cld
jno
pop
sub
sti
mov
adcl
pushf
pop
es
iret
pop
out
lock
pop
les
mov
push
or
fadds
dec
nop
and
sub
push
movsb
sahf
stc
outsb
inc
jne
rcl
xor
aaa
pop
dec
lret
dec
jae
das
pop
mov
int
popa
jns
sarl
ja
lods
dec
cmp
pop
jo
mov
shlb
push
stos
mov
inc
mov
out
add
inc
adc
adc
rcr
push
rorb
mov
roll
dec
roll
insl
cmp
aas
sub
dec
push
aad
mov
in
cmp
inc
mov
in
and
aam
lods
lcall
cmp
mov
rcrl
jns
mov
int3
cmp
cld
fs
shr
int3
pushf
push
pushf
pushf
add
subb
dec
sub
andl
mov
mov
dec
icebp
repnz
pop
pop
xchg
inc
sbbl
cmc
sbb
sbb
std
popf
nop
lret
sub
mov
loopne
test
mov
mov
aam
std
rcrl
mov
inc
pop
push
dec
cld
arpl
out
xchg
lret
call
and
jg
outsb
in
ljmp
mov
jbe
inc
in
mov
jmp
cld
daa
add
adc
xorl
sahf
adc
stos
jo
icebp
ret
jecxz
mov
test
pop
push
fstps
aad
nop
mov
add
imul
or
push
addr16
ret
and
aas
bound
in
inc
xchg
inc
or
rorb
ficomps
aaa
pop
mov
mov
or
int3
mov
mov
mov
fmuls
xor
mov
jmp
xlat
pop
cltd
mov
pop
pop
jae
mov
fdivl
add
cmpsb
mov
push
inc
int
fsubl
xchg
test
pop
outsl
dec
cmpl
ror
addr16
sbb
jnp
adc
push
jle
add
push
ret
inc
adc
xchg
or
cltd
imul
mov
jae
xlat
inc
dec
mov
cmp
enter
adc
sbb
gs
outsb
sbb
enter
js
js
xor
xchg
pop
pushf
imul
adc
jae
pusha
out
dec
sbb
xchg
cltd
xlat
in
push
fwait
sbb
lret
mov
mov
mov
sbb
test
ds
mov
xor
in
cmp
loope
lea
jne
xchg
pushw
push
xor
jb
out
lahf
pop
pop
mov
ljmp
lretw
out
cmp
sub
or
into
stos
pusha
dec
jno
les
cmp
imulb
sbb
mov
inc
aaa
pusha
fsubl
mov
cld
dec
adc
adc
fbld
sbb
loopne
inc
test
popf
jns
sbb
jmp
fs
adc
fisttpll
sbb
cwtl
xlat
lds
es
pop
xchg
mov
icebp
daa
add
xchg
sbb
cmp
stos
ret
loop
sbb
xor
stos
sub
sub
call
mov
loopne
arpl
inc
stc
xchg
mov
inc
popf
mov
mov
out
bound
negb
in
pushf
cbtw
sub
or
pusha
cmp
hlt
or
aaa
jecxz
dec
mov
dec
sbb
jge
push
movsl
xchg
adc
incb
jbe
test
das
sub
xchg
adc
pop
cmp
jl
fstl
pushf
add
hlt
data16
dec
pop
push
push
lock
ret
pop
mov
call
fdivl
ljmp
add
ss
adc
push
imul
imul
mov
sbb
rclb
jae
sub
mov
add
call
ret
out
xchg
xchg
dec
cmp
imul
and
addr16
pop
ss
push
call
mov
shl
cwtl
xor
imul
scas
push
or
mov
cmp
and
movsl
testb
in
loope
mov
push
loopne
mov
fnstcw
pop
repz
cmp
fbld
xor
pop
adc
lds
sbb
xor
mov
mov
dec
mul
js
mov
test
int3
dec
push
push
pop
out
leave
push
pop
out
imul
fsubs
insb
mov
shll
jne
lahf
push
aam
test
daa
rorb
or
insb
iret
es
inc
xlat
sub
adc
inc
incb
mov
aad
pop
xchg
lea
mov
inc
lds
insb
lcall
and
repnz
push
pop
aas
dec
xor
xchg
cmc
mov
cwtl
pushf
leave
fimuls
adc
inc
jbe
imul
das
mov
jmp
daa
mov
aam
jne
leave
movsb
push
call
movsb
push
mov
jg
hlt
pop
sahf
arpl
mov
cmpsb
dec
lret
xlat
pop
mov
lds
adc
add
mov
push
xor
inc
lret
in
push
mov
gs
movsb
mov
int3
subl
pop
scas
js
inc
test
jb
pop
loopne
pop
stc
repnz
sbb
mov
ljmpw
dec
xor
mov
lret
fxch
fwait
lret
mov
push
adc
fldcw
pop
push
mov
inc
popf
push
leave
sbb
popf
sbb
jo
shrb
adc
mov
test
push
enter
mov
xor
negl
lcall
sahf
hlt
mov
paddusw
mov
jle
testl
mov
mov
mov
push
repnz
push
lret
inc
sbb
jbe
fwait
dec
mov
sub
sub
lea
and
and
mov
icebp
ret
mov
or
inc
push
fistps
hlt
in
mov
inc
jne
mov
xchg
push
dec
cld
sbb
arpl
xor
jb
iret
inc
lret
pushf
ffree
lea
dec
pop
push
or
fcmovb
adc
stc
bound
pop
fucomip
sbb
idivl
jge
sub
mov
mov
mov
mov
mov
sub
and
sbb
rolb
adc
pop
subl
int
sahf
lret
add
dec
add
js,pt
das
fildl
xchg
xor
and
xor
rclb
imul
sti
call
fdivs
pop
sahf
out
loope
mov
mov
pop
mov
faddp
mov
pop
mov
ds
popf
push
jmp
push
call
pop
loopne
ljmp
jp
sub
hlt
pop
ret
arpl
xlat
stos
lods
mov
inc
push
nop
pop
mov
in
scas
cmp
stos
movsb
push
pop
push
push
inc
jae
jbe
scas
xorb
xchg
int3
popf
add
and
pushf
cmp
jmp
add
stos
fnstsw
inc
cmp
xchg
sub
mov
jmp
or
hlt
or
movsl
psrld
mov
scas
jle
lods
lds
cmpl
xchg
aaa
ljmp
push
jecxz
mov
mov
jg
fs
xchg
push
dec
sub
push
jno
aam
or
jle
or
cmc
adc
jbe,pt
push
inc
ficoms
shrl
inc
stc
jmp
lock
mov
movsb
mov
fdivr
repnz
mov
or
sbb
adc
lret
adc
sbb
aas
inc
pop
mov
mov
rcrl
jmp
ret
adc
outsb
shlb
mov
add
ljmp
jno
mov
es
pop
fcoml
cmp
pop
sub
inc
cs
push
jg
in
aad
lea
nop
aad
mov
orl
or
pop
cmpsl
cltd
data16
into
adc
cmpsb
js
mov
loope
pop
jne
push
fwait
pop
dec
loope
fstpl
scas
push
jb
jb
lods
adc
lods
mov
call
jge
lahf
sub
ret
and
aaa
add
out
fs
popf
loopne
imul
adc
jae
or
mov
or
jb
insb
mov
std
stc
out
nop
ss
mov
in
ljmp
pop
and
lods
sub
enter
add
mulb
lods
mov
jb
dec
ret
stc
movsb
out
dec
mov
mov
cltd
adc
adc
or
data16
mov
sbb
cmc
movsb
movsl
sub
ret
lds
imul
sti
bound
dec
cld
out
xor
push
mov
out
push
cmpsl
mov
mov
pop
je
sbb
xlat
flds
xchg
xorb
fimull
loopne
fwait
mov
sbb
insb
add
mov
cltd
push
sahf
loopne
loop
pusha
mov
insb
sahf
mov
mov
mov
and
movsb
pop
add
sbb
out
inc
cmp
js
mov
cmpsb
dec
int
les
xor
sub
add
or
dec
xrelease
shrl
imul
add
push
push
lods
mov
cmp
int
fldenv
lret
or
pop
out
ret
push
shl
mov
filds
mov
int
jecxz
adc
add
adc
inc
in
mov
lea
add
repnz
xchg
test
outsl
or
pushf
movq
imul
xchg
cmpsb
shrl
hlt
lea
dec
pop
lcall
push
es
pop
cmp
imul
cwtl
fisubrl
pop
cwtl
sbb
cmp
jo
jno
pop
push
jecxz
push
or
push
das
sbb
mov
aas
sub
out
out
lahf
rolb
jbe
xor
ret
and
mov
pop
movsb
and
fs
jl
mov
test
daa
gs
push
xchg
adc
jne
mov
test
movsl
push
in
cwtl
xchg
negl
and
xchg
mov
inc
lock
shl
movsb
pop
xchg
and
mov
in
mov
imull
daa
insl
pop
imul
aas
inc
pop
jno
mov
mov
mov
xchg
fcompl
inc
pop
mov
cltd
stos
push
jge
cmpsl
push
lds
xchg
stc
mov
xchg
and
xor
lods
cmp
sbb
sub
mov
dec
or
push
push
sub
xor
add
pusha
add
mov
stos
adc
xchg
jge
sub
or
dec
and
cmp
xor
cmp
loop
mov
xlat
movsb
loopne
enter
scas
push
push
sbb
sub
mov
test
shr
push
inc
fdiv
lock
cs
add
adc
adc
shl
adc
in
cs
sbb
rcrb
sub
xor
sarl
mov
daa
xor
mov
pop
leave
clc
fs
stos
add
push
jge
mov
cmpsb
out
test
movsb
inc
aad
xlat
push
in
pop
outsl
data16
pop
dec
test
in
push
xchg
cltd
shrb
jle
add
iret
movsl
cmp
or
push
neg
cltd
inc
fisttps
loope
arpl
fprem1
loop
adc
lret
clc
push
int3
jno
xor
roll
push
icebp
mov
push
cmc
fs
mov
inc
inc
xorl
mov
inc
je
sahf
push
adc
inc
jne
cmp
js
data16
in
pop
int
xor
jmp
inc
test
iret
mov
scas
pop
adc
dec
cwtl
or
cmpsb
pop
and
stc
inc
dec
jle
iret
stos
leave
orl
xchg
mov
sti
clc
jmp
jae
mov
stc
loop
sbb
mov
xchg
cli
dec
xchg
dec
sub
jno
xchg
ljmp
repnz
int
in
cld
call
andl
dec
push
mov
rcrl
jb
movsb
ds
add
push
adc
or
push
adc
push
es
sub
fstps
push
cld
stc
inc
lcall
add
mov
lret
fnstcw
pop
lods
mov
xor
testb
insl
iret
inc
test
test
or
push
dec
shlb
adc
mov
loope
mov
mov
insl
jecxz
jle
xchg
jo
gs
imul
mov
pop
mov
insl
add
fs
popf
xchg
out
pushl
and
pop
xchg
int
cs
scas
add
cmc
jbe
add
mov
lcall
sub
jns
mov
add
and
subb
jecxz
dec
xchg
stc
ret
addr16
jae
dec
popa
cmp
xor
cmpb
adc
and
push
lret
sbb
cmp
mov
pop
push
ds
dec
push
push
rclb
movsl
push
inc
sub
pop
cmpb
fisttpl
decl
lcall
imul
mov
loope
inc
andb
push
cltd
addr16
add
incb
andl
mov
adc
inc
and
or
lds
mov
dec
cmpsb
xchg
or
movsl
fbld
adc
push
popa
xlat
out
sbb
pop
cld
nop
es
dec
jbe
adc
add
inc
out
jge
aam
mov
dec
xchg
aaa
mull
popa
fwait
adc
lods
andl
push
pushf
mov
add
int3
fidivs
dec
inc
shl
clc
cmpsl
bnd
popa
popf
mov
jb
jno
in
inc
add
divb
or
ret
mov
cld
mov
mov
lahf
ja
dec
mov
adc
xchg
jecxz
xor
jnp
mov
xlat
testb
or
and
orb
push
jge
jg
push
lds
sbb
jbe
push
pusha
stos
and
out
call
mov
andb
aad
jge
fidivrs
cmp
xchg
sbb
fisubs
jnp
scas
mov
pop
psadbw
push
popf
dec
ss
jle
inc
add
inc
in
mov
mov
outsl
push
inc
sub
gs
sbb
leave
lret
aas
in
aam
lds
mov
xchg
movsl
adc
jp
imul
push
xor
dec
add
adc
or
cmp
mov
dec
je
sti
inc
ret
mov
push
push
cltd
movsl
cmp
adc
jp
inc
mov
mov
sub
pop
cmp
out
mov
xchg
pushf
adc
fisubl
mov
test
adc
cli
iret
xchg
push
push
cmp
out
push
icebp
loopne
in
insl
jo
jmp
and
add
js
or
xor
mov
xorl
lret
mov
sti
dec
jecxz
pop
lahf
jmp
movsl
mov
push
insl
pop
mov
sub
adc
push
and
out
sub
cltd
call
sbb
in
push
fdivl
mov
add
xchg
sbb
insb
xchg
push
scas
push
pop
lret
les
stos
dec
rorb
insl
iret
jne
dec
popf
sub
into
or
hlt
js
cmpsl
adc
test
push
push
pop
jecxz
xchg
arpl
or
ret
iret
loope
pop
sub
movaps
loop
arpl
lret
cmp
stos
mov
fldenv
imul
data16
inc
loope
out
jmp
stos
mov
out
loope
ja
xor
mov
rolb
sbb
fadd
loope
add
inc
and
jle
stc
and
scas
jg
lret
pop
mov
incl
mov
mov
js
stc
jle
jg
fs
in
std
out
adc
in
pusha
xor
push
outsb
pop
movsl
insl
lret
mov
sub
jcxz
nop
add
fmull
sbb
xchg
mov
sub
mov
or
scas
rcrb
pop
xchg
dec
fcoms
cli
bound
jmp
sub
push
sub
mov
pop
inc
mov
push
jo
cwtl
add
mov
and
loope
cs
xlat
jns
sbb
into
flds
cltd
scas
flds
pop
cmp
mov
pop
shrb
xor
dec
cmc
inc
repnz
xor
hlt
sub
jae
insl
hlt
and
shlb
or
sub
mulb
mov
cld
cli
ds
in
les
pminsw
ficompl
out
adc
lods
jnp
loop
or
es
mov
dec
mov
sbb
xchg
cmp
sti
in
xor
inc
inc
cmpsb
sbb
popa
ret
pop
cmpsb
sahf
fdiv
dec
movb
xor
arpl
stos
dec
roll
popa
dec
jo
xor
push
inc
add
sti
jbe
lcall
adc
lods
les
or
iret
ja
out
add
movsl
in
int
xchg
stos
push
jbe
pop
adc
xchg
arpl
jo
loop
rclb
sahf
pop
ljmp
xchg
push
fmull
loope
shlb
add
cmpsl
cmp
cs
sbb
add
ljmp
stc
clc
lret
dec
adc
cmpb
add
sti
push
int
fs
fimull
jbe
cmp
adc
cmp
adc
call
push
inc
jbe
test
cmp
aaa
xorl
pop
loope
inc
jp
divb
sub
xchg
cltd
mov
xchg
or
inc
sti
pop
push
adc
bound
lret
fwait
push
loop
testl
mov
mov
les
dec
cmp
and
imul
fildll
and
xchg
bound
inc
stos
dec
test
repnz
and
popf
in
popf
pop
push
call
jge
xchg
mov
fldt
repnz
pop
xchg
imul
insl
mov
popf
mov
ja
jb
rolb
jp
sub
add
daa
stos
daa
xchg
mov
pop
mov
adc
stc
repz
lods
fcompl
mov
popa
inc
cwtl
or
stc
and
mov
daa
loop
xchg
addl
loopne
mov
cmp
loopnew
lds
ljmp
mov
test
add
aad
in
add
jne
cwtl
fsub
cmp
fcom
inc
xor
lods
cmp
fidivs
bswap
and
pop
idivl
sbb
sbb
scas
xor
push
test
add
daa
inc
aam
jge
icebp
jge
andb
ljmp
xchg
adc
mov
cvtps2pi
mov
mov
xchg
mov
jno
pop
xorl
ret
daa
push
inc
mov
jl
fcompl
and
dec
sub
push
aas
cli
dec
imul
cmp
andb
or
pop
jmp
pop
cmc
jmp
cli
inc
jns
xor
imul
jge
or
adc
mov
pop
push
mov
mov
and
popf
xchg
inc
jg
ljmp
aas
not
out
mov
hlt
and
daa
aaa
test
sub
enter
mov
xchg
or
mov
cli
lcall
cmp
mov
adc
hlt
jl
in
aaa
xchg
call
int3
dec
movsl
jle
outsb
jecxz
mov
sbb
xchg
pop
sbb
outsl
daa
cs
add
mov
ja
jge
cs
mov
repnz
icebp
lea
dec
mov
scas
push
push
and
mov
jae
pop
sub
pop
dec
and
fdivr
mov
fnsave
xor
stc
shl
addr16
dec
rorb
movq
cmp
adc
lock
inc
cmpsb
dec
stos
dec
add
push
das
mov
fimuls
ffreep
lcall
daa
cs
sahf
cwtl
gs
subl
mov
roll
fsincos
add
sti
xlat
and
ljmp
outsl
mov
sahf
in
jae
add
mov
jns
jns
lods
pop
jge
and
inc
dec
scas
sbb
inc
iretw
pop
out
ds
lods
sbb
push
jne
ret
add
mov
pushf
cmp
add
mov
pushf
sti
lock
mov
xchg
and
leave
out
xor
dec
in
aad
outsb
sub
cwtl
push
adc
movsb
shrl
inc
ror
dec
push
push
push
rcrb
mov
dec
sub
jns
into
and
inc
dec
dec
stos
and
aam
repz
sarl
rcr
push
rclb
loopne
or
sbb
adc
je
or
repz
jge
mov
roll
inc
out
sbbl
aam
push
aas
fldenv
push
jbe
push
cmp
sub
push
mov
push
xchg
inc
mov
add
or
xlat
into
test
mov
out
pop
lods
cmc
rolb
pusha
out
jp
out
and
mul
les
into
jp
jmp
fstpl
test
mov
cmpsl
iret
lock
push
mov
inc
repnz
xchg
mov
fs
dec
lahf
inc
mov
dec
mov
inc
pusha
and
sbb
hlt
stc
mov
out
adc
cltd
fstpt
popa
aad
testl
fcmovu
pop
cmp
cmp
xlat
or
pop
xor
jo
xchg
stos
jle
jecxz
mov
inc
fiaddl
fsts
loopne
cld
cmpsb
mov
inc
push
mov
imul
test
arpl
sbb
sub
cld
and
mov
rorb
cmp
leave
ficomps
mov
test
push
out
sbb
cvtdq2ps
in
call
subb
pop
push
cmp
xchg
and
pop
nop
and
jbe
push
test
mov
add
div
dec
push
ret
insl
in
das
or
or
jbe
int
mov
mov
push
stos
call
lahf
push
xchg
jge
sbb
inc
dec
jno
dec
pop
das
sub
adc
pop
leave
cld
mov
mov
xor
adc
cmp
dec
or
outsl
lahf
push
fbstp
sbb
jg
xchg
push
cmpsb
push
adc
fstpt
mov
dec
xor
into
mov
adc
lahf
sub
xlat
mov
jge
add
fcomps
int
pop
pop
jnp
sbb
testb
cmpsb
xchg
notl
in
jge
sahf
mov
in
dec
jecxz
mov
js
insl
popf
mov
jp
jbe
jno
stc
das
mov
push
out
inc
arpl
mov
xor
out
add
sahf
fnsave
lods
mov
mov
inc
enter
sub
dec
in
pop
mov
push
rcrb
dec
inc
mov
fwait
sub
cmpsl
xchg
sti
xchg
test
fiadds
lea
aad
inc
rcrb
andl
notl
ret
mov
mov
cmp
stos
rclb
jg
push
int
pop
aam
out
rorb
cs
call
jl
cmc
cmpsb
mov
cmp
jns
sbb
aam
loope
xor
adc
shll
test
xor
adc
loope
cmc
inc
mov
push
in
lods
xor
mov
das
imul
lcall
inc
cmp
cmp
addr16
jbe
ss
dec
mov
stos
push
mov
pushf
stc
sti
adc
mov
or
popa
roll
push
shll
fwait
xor
mov
jmp
cmp
imul
pop
cltd
in
aam
cmp
mov
sub
jle
or
add
into
adc
mov
in
sub
xchg
insb
ss
xorl
cmpsb
push
jl
cmpb
pusha
arpl
xchg
jg
std
push
and
push
xchg
jno
push
dec
add
addl
adc
jge
out
add
popa
test
sbb
push
test
ret
lea
mov
pop
into
notb
into
inc
mov
addr16
cli
daa
outsb
pop
loop
sub
mov
or
add
aaa
and
jecxz
jae
xchg
repz
loope
js
sub
and
mov
mov
out
dec
adc
sar
fwait
nop
mov
outsl
jbe
xchg
cmp
xchg
sbb
cmpb
data16
and
or
pop
in
mov
sub
dec
sbb
push
vmovntpd
dec
xchg
pop
push
fbld
add
fldl
cmp
stc
out
dec
fisubrl
inc
aaa
mov
outsl
xchg
mov
add
test
insb
mov
ds
das
nop
adc
lahf
neg
jbe
in
xchg
and
dec
lcall
inc
stc
push
mov
lret
outsl
cmp
sub
out
stos
mov
and
loopne
ljmp
sbb
add
loopne
hlt
aaa
in
sub
out
mov
xchg
cltd
mov
pop
push
push
cmp
and
cmp
xor
addr16
das
mov
int3
pop
pop
cmc
insb
test
call
repnz
sub
shrb
sub
xchg
loop
cltd
fwait
pusha
cli
cltd
ja
adc
mov
jo
xchg
bound
add
outsb
dec
fldln2
aaa
jb
cs
xchg
or
gs
fdivrs
or
mov
stos
cmp
lds
cmp
push
test
sbb
adc
push
insl
stos
js
sub
and
lcall
test
add
xchg
xchg
ja
xor
pop
push
jle
inc
sarb
add
movb
xor
add
lods
aas
cli
push
in
dec
adc
sti
in
xchg
fs
subb
test
popa
sarb
jae
mov
stos
fwait
arpl
mov
fcomps
stos
dec
psubb
xchg
xor
push
dec
daa
sub
jg
sbb
pop
jp
and
test
mov
mov
clc
jae
imul
pushf
rolb
sub
adc
jb
lret
test
dec
int3
mov
fs
jmp
push
mov
js
in
sub
ds
cmp
dec
in
or
adc
dec
add
imul
sub
add
lds
push
mov
sbb
mov
lods
cmc
adc
add
push
sbb
cltd
loope
cmp
shlb
dec
ljmp
push
pusha
outsb
imull
cmpsb
aas
adc
ret
dec
rep
jge
cs
jne
inc
xchg
jle
leave
push
hlt
and
jnp
out
sbb
shl
hlt
stos
fistpll
add
mov
jne
stos
jmp
movsl
movsl
cmp
filds
cmp
popa
jnp
lahf
mov
xchg
and
sbb
icebp
xchg
sbb
xor
jne
sti
or
add
fstpt
sarl
push
xor
fcmovne
fldenv
jb
push
aad
push
inc
fs
incb
jnp
into
inc
divl
iret
pop
scas
inc
push
mov
sbb
test
push
jg
mov
and
cltd
mov
lret
std
and
or
pusha
jno
push
out
push
add
mov
ja
or
pop
pop
outsb
popf
sub
push
jne
mov
shll
sub
lods
xchg
aaa
cli
jecxz
enter
mov
and
push
ret
mov
jns
fldt
shlb
subb
arpl
cld
jge
xchg
mov
int3
fcompl
aam
adc
mov
mov
aaa
sbb
lcall
imul
shl
int
insl
pop
js
stc
aas
pop
mov
lea
lret
inc
pusha
iret
mov
mov
fadd
in
pop
lahf
xchg
dec
cmp
or
loope
mov
mov
lods
adc
and
jge
mov
mov
idivl
inc
aas
xor
les
imul
bound
ret
in
aad
fadds
cmc
push
sub
mov
jle
bswap
xchg
push
push
fistps
xchg
in
fisubrl
and
cmp
js
xchg
dec
cli
xchg
ret
mov
cmp
push
mov
out
ja
repz
mov
add
or
ljmp
repnz
int3
mov
sub
mov
mov
movsb
jns
hlt
scas
pop
add
cwtl
fadds
push
aas
or
sbb
sub
add
inc
add
repz
lods
cmpsb
sub
jae
push
js
addr16
repz
insl
mov
ja
add
sub
jae
sub
js
test
inc
jns
cltd
inc
and
xor
adc
mov
fdivs
xor
jmp
adc
testb
in
iret
inc
aad
cmp
lods
dec
add
fiadds
push
daa
dec
mov
sub
mov
inc
inc
inc
ficoml
adc
bnd
or
inc
bound
lea
shr
repnz
xlat
mov
jmp
aas
sahf
ja
push
cmpsb
push
ja
sub
sbb
jbe
and
mov
xor
pusha
jbe
pop
dec
xlat
sub
hlt
shl
fwait
loopne
mov
adc
mov
xchg
and
xchg
xor
in
fnstsw
lods
mov
xor
sub
xchg
cmp
sahf
push
push
mov
out
outsb
pop
adc
mov
loopne
jns
mov
stc
inc
in
and
int3
sbb
mov
sbb
test
roll
addb
popa
shr
mov
fidivs
lods
clc
loop
in
adc
cli
rcr
xlat
pop
push
repz
shrl
or
iret
jns
dec
mov
stos
mov
cmpsb
sbb
aad
jns
and
sub
jp
push
js
scas
jecxz
jmp
inc
xchg
orb
mov
push
inc
xchg
dec
fcompl
movsl
mov
test
mov
repnz
out
jg
test
sub
mov
cmc
cs
push
shl
jmp
repz
addr16
sub
dec
pop
push
lea
inc
test
xlat
sub
in
test
and
hlt
stos
xor
test
push
xor
test
mov
scas
cmp
jg
sbb
mov
shll
or
and
aas
xor
inc
cmp
rclb
and
movl
xchg
idivl
ljmp
or
loopne
sbb
sbbl
aaa
or
lods
stc
popf
ret
arpl
lret
arpl
je
mov
mov
xor
jb
pop
dec
int3
jb
stos
imul
pop
rcl
cwtl
mov
jbe
adc
shll
xor
jnp
jb
sbb
fwait
push
popf
sub
daa
loopne
mov
or
pop
lock
or
dec
shrl
not
lcall
ror
xor
lods
cmpsb
xchg
rorl
lock
out
lret
xor
mov
mov
sti
jp
imul
cs
test
xchg
mov
mov
loope
jp
popf
sub
sub
fwait
mov
test
popf
enter
aam
and
mov
movsl
in
lahf
subb
and
pop
sbb
sarl
mov
daa
imul
adcl
and
pop
xor
insb
ror
in
add
cmpsb
lret
lds
movsl
inc
sarb
pop
xchg
out
shr
insb
out
add
adc
lahf
add
mov
aaa
jne
shll
dec
mov
xchg
inc
fstpt
and
icebp
sub
adc
roll
push
jno
sbb
aaa
stc
xor
dec
outsb
inc
outsb
sti
pop
icebp
push
mov
or
int
loop
cmp
xchg
loope
jmp
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pusha
xor
adc
frstor
mov
mov
fisubl
test
mov
idiv
mov
std
xor
cld
ja
add
xlat
xchg
lret
xor
adc
stos
faddl
lahf
cmp
addr16
out
lcall
cli
mov
dec
jns,pn
jne
inc
jge
mov
and
xor
jecxz
imul
les
in
sub
int3
adc
dec
push
cmp
sub
or
pop
dec
sbb
pop
push
pop
push
pop
outsl
hlt
cld
mov
out
pop
jne
cli
dec
mov
add
fiaddl
les
pushf
push
and
js
sahf
xor
idivl
sbb
rclb
rorb
les
mov
inc
lret
idivb
push
ret
outsb
jle
adc
movsl
outsl
cmp
lods
lret
add
sarl
es
xor
inc
push
imul
adc
fldl
fcmovnu
jmp
inc
arpl
loope
mov
nop
sub
rclb
mov
add
lods
rcll
outsb
fdivrl
aad
std
aad
jmp
push
out
cmp
xor
cli
fldl
pop
out
dec
das
shll
fidivrs
push
sub
cmc
addb
mov
xor
or
add
scas
or
aam
add
arpl
mov
imul
call
rolb
dec
push
pop
dec
pop
mov
out
cli
out
mov
dec
mov
xor
cli
mov
outsb
xchg
leave
out
aam
mov
inc
inc
inc
mov
mov
push
cmpsl
or
sbb
dec
mov
xor
les
sbb
push
enter
inc
orb
in
jle
xorb
mov
in
negb
js
jb
inc
fistpll
sub
pop
push
inc
dec
nop
push
in
pop
sub
fsubr
icebp
xchg
daa
xor
fs
xor
inc
pop
xchg
imul
add
xchg
lds
push
xor
fstps
in
mov
sub
cmc
jl
es
xor
jp
or
mov
loope
cs
stos
popa
es
adc
dec
and
mov
jg
pushl
nop
shrd
mov
add
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
xchg
push
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
xor
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
sub
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
sub
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
sub
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
or
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
sub
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
testb
