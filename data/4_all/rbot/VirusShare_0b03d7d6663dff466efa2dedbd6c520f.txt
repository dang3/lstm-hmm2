std
call
in
sub
push
lea
push
xor
push
pop
cld
call
decl
test
je
xor
jmp
push
push
push
push
push
xor
mov
or
cmp
je
lea
push
push
call
add
sbb
push
data16
and
add
pushl
lock
outsl
stc
sbb
out
arpl
and
dec
mov
in
inc
pop
pushf
or
mov
dec
xchg
dec
pop
std
pop
mov
je
mov
add
jns
int3
leave
fmuls
or
cld
add
movsb
lahf
mov
frstor
add
add
imul
or
cmp
or
test
aas
push
scas
ja
jg
pop
mov
cltd
pushl
sub
roll
and
jns
mov
jo
adc
xor
xchg
push
lret
lock
sub
jmp
arpl
push
dec
sti
loope
repz
je
je
test
jle
sarb
mov
ret
in
cmp
push
mov
shll
repz
jnp
cmp
dec
add
shll
lea
mov
pop
pop
pop
leave
ret
push
mov
jg
sub
sub
popa
push
xor
outsl
jge
addb
scas
mov
mov
and
inc
jge
pusha
sbb
inc
mov
vpcmpgtb
push
push
out
mov
xor
nop
lods
dec
imul
stc
loop
and
inc
arpl
push
scas
jb
sbb
jae
xchg
out
jmp
and
cmp
out
and
dec
inc
push
push
inc
out
dec
lcall
repnz
xchg
int
adc
repz
mov
repz
imulb
inc
shl
xor
inc
push
add
adcl
xchg
sbb
xchg
add
push
call
in
ljmp
fiaddl
push
movsl
decl
sbb
mov
pop
aaa
and
loopne
sub
mov
jmp
sbb
add
mov
ja,pn
xchg
and
add
adc
shll
dec
fistl
push
xor
inc
sti
pop
and
push
mov
and
sar
push
push
lods
popf
cmp
jl
inc
ja
sub
adc
rolb
mov
std
inc
or
mov
mov
sbb
adc
loope
push
push
or
lea
pop
mov
test
shrl
cmp
sti
add
xor
inc
jno
pop
rcll
add
sub
scas
sbb
sti
inc
lock
dec
dec
sti
jle
int
cmp
mov
push
jecxz
pop
or
int
rcl
jns
push
pop
pop
pop
movsb
adc
rcll
pop
xchg
lock
add
fildl
push
lret
or
pushf
jne
add
mov
jmp
cli
pop
jmp
loopne
pop
pop
scas
push
in
xor
jns
push
daa
clc
iret
imul
test
push
rcrl
rcr
xchg
push
push
and
cmp
sbbb
push
add
mov
jne
cmp
out
outsb
je
sub
jmp
sbb
in
fucomip
pushl
push
pop
jmp
push
pop
cmp
jmp
cmpsl
mov
inc
nop
cwtl
push
add
jge
mov
jge
movsl
add
ja
mov
movsl
pop
mov
addr16
sbb
inc
stos
pop
jmp
add
sub
dec
stos
test
push
repz
or
adc
jo
xchg
cmpl
jecxz
inc
hlt
repnz
out
mov
push
mov
add
sbb
pop
mov
mov
cmp
jne
lds
das
je
and
add
and
cld
or
aaa
icebp
mov
add
cmp
dec
cmp
jb
shlb
arpl
idivb
in
xor
aam
cmpsl
clc
jns
test
jne
icebp
cmc
cld
iret
adc
js
cmp
pop
mov
adc
mov
ffreep
push
mov
fists
sub
push
rcll
test
xchg
shrl
inc
lea
iret
pop
in
push
mov
ljmp
xor
xor
and
rcrl
push
stc
cmp
jne
cmpl
enter
xchg
add
pop
and
push
push
mov
lcall
or
dec
pusha
xchg
out
and
pop
pop
repz
mov
jg,pt
or
repz
cmp
mov
pop
dec
into
subl
jmp
leave
test
cltd
sub
sar
add
or
lock
inc
xor
mov
enter
push
or
jl
dec
xor
jl
xorb
mov
xor
xor
int3
int3
mov
mov
hlt
bound
ja
adc
test
orb
push
or
out
inc
jne
les
leave
arpl
xorps
loop
jbe
cmpl
xchg
aaa
into
inc
int3
push
shlb
cmp
pop
test
movsl
push
aad
in
cld
adc
icebp
mov
dec
addb
sbbb
lods
sbb
inc
cld
js
addr16
stos
js
mov
push
sub
sti
push
xor
js
mov
js
shr
sub
mov
rep
cmp
pop
add
sbb
ret
mov
je
mov
loope
xchg
pusha
lock
mov
pop
flds
hlt
push
loope
mov
dec
push
sti
jge
mov
add
sbb
fcomi
sti
lcall
mov
sub
adc
jbe
add
es
das
or
add
push
mov
gs
addl
sub
mov
xlat
dec
add
clc
add
jl
inc
inc
dec
xor
add
popa
mov
ja
pop
sbb
faddl
imul
cmp
lds
sahf
insb
sbb
sbb
in
repz
add
jge
jne
popa
clc
outsl
clc
jne
push
jmp
push
jns
jmp
je
push
mov
or
sbb
dec
fwait
test
mov
jmp
dec
xor
jne
psraw
or
ljmp
int3
std
and
cmp
imulb
adc
cli
jne
push
xor
fwait
push
jl
jmp
mov
mov
cltd
push
and
int3
std
fwait
nop
inc
push
int3
std
dec
mov
adc
out
inc
jno
pop
cli
sti
add
sbb
mov
in
adc
cmpsb
loope
shll
sbbb
loopne
push
out
pop
in
mov
lods
mov
out
rclb
xor
or
js
mov
out
pop
lcall
mov
sub
ficomps
cmp
add
stc
inc
or
mov
jo
cmpsl
sub
mov
dec
jae
jns
push
or
and
mov
hlt
in
cld
or
mov
movsb
mov
jb
cmp
push
jmp
test
dec
enter
mov
or
int
mov
out
sbb
into
jae
jb
mov
sub
mov
jecxz
dec
sahf
orl
in
es
out
in
cwtl
in
shll
cltd
inc
in
enter
bound
loopne
mov
imul
js
fld
int
inc
addr16
in
lahf
lahf
movsb
rcrb
fsubr
jge
xadd
in
das
orl
xchg
push
sub
fsubr
clc
inc
mov
push
adc
adc
sub
dec
and
or
jecxz
imul
xchg
xor
das
adc
xchg
loopne
loop
inc
or
push
sub
pushf
mov
jl
stos
jo
sbb
sbb
ret
lret
push
call
test
add
add
jae
sub
addb
or
cltd
add
rorl
test
add
and
jle
push
mov
pop
sahf
mov
or
sub
sbb
mov
ret
add
sysret
jb
push
inc
fistl
fstps
out
or
hlt
mov
sbb
shrb
jecxz
pop
pop
pop
mov
shr
lcall
sbb
push
clc
hlt
addl
enter
mov
add
push
push
mov
inc
test
aas
or
sub
jl
mov
cmp
lea
rorb
pop
sahf
xchg
sbb
std
and
pop
in
shlb
cltd
sub
xchg
int3
push
sbb
jmp
loopne
ret
push
xor
call
fisttpll
pop
xor
addr16
xor
jne
pop
int3
mov
sbb
jecxz
aaa
in
mov
in
dec
pop
cwtl
idivb
add
push
aam
add
cmp
bswap
adc
outsl
mov
push
add
and
sarb
sbb
aad
cmpsl
xorb
and
cmpsl
pop
lock
and
or
and
movl
jle
out
ficoml
inc
mov
fcoml
sbb
rorb
dec
pop
push
lods
pop
outsb
fildl
mov
cmp
dec
mov
push
loopne
push
lea
fimuls
into
int3
fwait
dec
cmp
jae
scas
hlt
push
push
testl
mov
out
test
daa
insb
ficoms
cld
pop
unpckhps
cmp
dec
addr16
sub
popa
mov
dec
xchg
jg
mov
push
dec
inc
add
inc
xor
sub
mov
mov
pop
lret
mov
testl
push
xor
test
sbb
inc
adc
rol
jmp
or
mov
lock
dec
xor
dec
lock
pushw
loopne
mov
cwtl
bound
lret
je
shr
ret
ret
xchg
lock
xor
sbb
lods
rcrl
add
pusha
cli
mov
pop
push
push
mov
pusha
add
push
movsb
insl
push
push
dec
adc
xchg
pop
jmp
fdivl
lret
inc
sbb
jmp
outsl
push
cmp
cmpsb
adc
mov
cltd
mov
aam
cmp
xorl
mov
sahf
jecxz
pushl
sbb
cmpsb
ror
mov
mov
jp
in
mov
out
pushf
inc
std
or
out
mov
pusha
add
push
cwtl
xchg
mov
dec
shl
cmp
jl
xchg
or
out
arpl
testl
sbb
loopne
inc
jle
ja
out
and
or
out
jns
inc
cmp
icebp
aaa
xor
loopne
loope
cltd
sbb
mov
nop
out
push
mov
enter
inc
or
lods
or
orl
arpl
pop
imul
loopne
xchg
xchg
loope
add
mov
bound
gs
out
ret
movsl
and
js
in
adc
sub
mov
xchg
ljmp
out
divb
out
push
sbb
cwtl
ja
jecxz
jbe
xor
popf
push
rcll
or
rcr
addr16
xchg
pop
or
aam
push
in
mov
pop
add
mov
jo
enter
adc
clc
mov
outsl
mov
push
rcr
movsbl
lret
movsl
pop
imul
push
or
xchg
mov
push
mov
clc
push
rorl
push
inc
lds
mov
cmp
dec
cltd
mov
stos
cli
nop
dec
shrl
push
sbb
jbe
bnd
ss
pop
or
cmp
mov
aaa
sbb
adc
out
push
in
pop
add
push
stos
rclb
insl
pop
call
add
std
xchg
dec
mov
jge
aam
nop
jecxz
dec
fisubl
push
xor
pop
dec
loopne
clc
or
dec
jmp
sub
xor
imull
les
test
cmp
cli
pop
add
add
loope
daa
jge
orl
out
adc
adc
jmp
js
add
cmp
mov
jb
addr16
or
lods
neg
push
test
xchg
repnz
in
test
dec
fidivrs
pop
test
or
je
dec
dec
pop
xor
cmp
lock
xor
loopne
insl
jo
and
inc
fwait
loopne
and
xlat
sti
add
int
inc
mov
inc
adc
push
inc
inc
mov
aam
push
sbb
jno
push
fsubrl
adc
notb
inc
sbb
movsl
iret
movsl
push
mov
mov
lods
xor
push
add
jl
jne
and
adc
or
cmp
rolb
mov
jbe
insb
inc
mov
xor
mov
add
fldcw
push
mov
mov
dec
push
in
cmpsl
mov
mov
sti
mov
xorb
les
jno
hlt
sub
xor
push
pop
sbb
xor
imul
add
cmp
enter
cwtl
pushf
fsubr
call
call
in
xor
jp
adcb
and
rorb
in
insb
pusha
inc
nop
movsb
hlt
lea
leave
inc
cwtl
pushf
jl
test
lret
mov
ljmp
ljmp
lahf
mov
mov
jb
iret
pusha
and
fldenv
push
xchg
ja
movsb
iret
dec
mov
sbb
pop
add
push
lea
leave
and
fmull
cltd
push
push
sahf
and
push
push
lds
sahf
jecxz
or
sub
xor
mov
dec
faddp
dec
es
lahf
nop
or
clc
cmp
int
pusha
and
pop
xchg
mov
fcomps
or
hlt
add
pop
in
iret
in
inc
shlb
jb
cs
lock
push
mov
xchg
lcall
nop
iret
or
add
or
mov
mov
sahf
shlb
in
or
call
call
add
mov
jge
xchg
sbb
mov
sbb
outsb
sbb
enter
adc
xchg
popa
ds
or
lcall
leave
xor
cld
notl
gs
push
push
andb
inc
daa
push
pop
dec
std
outsb
popf
fcoml
push
sti
mov
dec
lods
sbb
repnz
and
and
sti
cmp
sahf
test
fidivs
push
mov
mov
call
testb
lret
repnz
mov
add
pusha
mov
or
fistl
push
push
push
add
call
insb
popa
inc
loopne
xchg
aas
test
pop
lds
cmp
into
imul
shl
call
into
sub
movsl
dec
call
adc
out
movsl
xor
pop
add
sbb
push
xchg
mov
pop
cmp
icebp
xchg
mov
test
sbb
lahf
mulps
cmp
je
cmp
sbb
cmp
ljmp
inc
in
movb
mov
jne
outsb
push
js
rolb
outsl
mov
call
stc
test
pop
bnd
add
push
sub
daa
mov
dec
dec
fldt
nop
fdivrs
insl
xlat
push
insl
xor
xor
cmc
rclb
popf
pusha
pop
movsb
shlb
je
js
add
mov
lret
je
mov
xor
test
pusha
les
imul
pusha
dec
lcall
inc
mov
arpl
rorb
xor
xacquire
push
xchg
hlt
push
jge
je
xorl
cmp
sbb
cmpsl
xchg
push
hlt
cmp
ret
mov
ret
sub
inc
adc
and
sbb
inc
and
mov
fs
adc
cmp
mov
and
dec
add
xchg
fwait
cmc
add
sbb
mov
mov
mov
jne
xor
cmp
pop
sbbl
jl
repnz
push
sub
xchg
testb
je
push
scas
aaa
pop
bound
mov
test
ret
or
iret
or
add
xchg
cld
or
pop
pop
cmp
push
icebp
and
jl
push
push
xor
out
push
pop
sbb
jo
punpcklbw
inc
les
xchg
in
mov
or
sub
push
push
cmp
cmp
or
insl
in
lods
or
inc
ret
lock
hlt
or
mov
push
or
ja
divb
mov
mov
nop
mov
je
scas
xchg
rol
test
dec
sbb
adc
nop
adc
ret
das
lods
xor
jnp
insb
pop
out
sub
push
cmp
test
sbb
sarb
je
push
mov
mov
add
cltd
lea
sub
push
add
in
mov
mov
jb
rolb
xor
sbb
push
jmp
pop
cltd
xchg
int3
sub
mov
mov
sar
cmp
rcrb
repz
sub
mov
lock
inc
div
mov
repnz
add
add
andb
push
bound
into
mov
cltd
es
test
sbb
cmp
mov
lcall
and
or
ret
jmp
xor
push
sub
mov
sbb
rorb
js
sub
inc
and
adc
xchg
dec
dec
sbb
mov
out
stos
fadds
sbb
shlb
mov
jno
xchg
sbb
out
fsubs
dec
mov
shlb
in
xorl
fcoms
movsl
and
push
sub
shlb
push
scas
mov
push
jne
js
dec
es
shl
pop
call
push
in
js
pop
in
call
outsb
loope
jns
into
scas
mov
call
add
int3
mov
cmp
jbe
shrl
insl
push
popa
xchg
cmp
pop
inc
adc
xchg
imul
jo
pop
fwait
xor
cld
push
mov
pop
push
sbb
out
adc
call
cmp
je
cmpl
addl
je
cmp
daa
sub
sub
ljmp
sahf
xor
add
mov
ret
stc
dec
push
push
push
push
sub
add
adc
xchg
push
pusha
cmp
add
aam
test
cld
mov
xor
cmp
xorl
inc
cmp
mov
outsb
mov
jecxz
lea
mov
aaa
insb
push
cmp
pusha
jne
push
push
movsl
int
dec
loopne
ja
dec
shlb
push
jns
add
enter
push
inc
cmp
xor
inc
popa
mov
in
test
and
push
jg
add
adcl
mov
pop
push
add
icebp
mov
sbb
dec
in
inc
outsb
pop
sbb
add
lods
adc
jbe
and
aaa
xlat
aaa
jg
dec
dec
int3
sub
or
or
adc
push
jb
arpl
inc
push
test
es
mov
pusha
push
jne
push
jne
lock
test
or
sti
jne
mov
add
xlat
pop
jo
pop
sahf
mov
jb
in
orl
xchg
in
lock
ss
lret
push
push
daa
mov
adc
fadds
shll
jmp
sbb
loopne
push
ret
jmp
mov
loopne
jp
dec
xchg
sbb
in
inc
das
mov
sbb
cmpb
loope
mov
sub
xchg
jne
test
cmp
add
mov
inc
fisubrs
call
addr16
mov
sbb
xchg
sbb
test
nop
andb
jl
and
mov
icebp
mov
or
or
adc
dec
xchg
sbb
mov
push
and
pop
or
inc
pushf
aaa
pop
xor
push
test
cld
push
ret
dec
inc
outsb
jno
push
push
ret
push
imul
cs
mov
lea
jg
jbe
add
jnp
test
jge
popa
subl
int
xor
push
push
sbb
sbb
mov
mov
stc
sub
cmp
push
xchg
inc
xor
pop
pop
mov
mov
lea
push
insl
adc
stc
mov
adc
ret
add
inc
mov
mov
mov
pusha
mov
pop
mov
dec
shl
add
test
xchg
jo
push
subl
jne
push
inc
sbb
mov
enter
xor
inc
lea
test
bound
xor
cmp
jmp
fs
lcall
xchg
movsl
rorb
pop
and
mov
repz
or
push
cmpb
mov
push
push
jno
push
mov
mov
push
punpckhdq
sub
cmp
sbb
sbb
xchg
mov
cmpsl
sub
movb
push
fstpl
cwtl
pop
outsl
aam
jp
daa
push
pusha
daa
jne
out
test
pushf
xor
fwait
js
sti
fiadds
push
outsl
dec
inc
lods
imul
pop
sub
out
mov
test
bound
xchg
ret
sbb
fs
aas
jno
and
mov
xor
repnz
iret
mov
add
xchg
inc
popa
xor
pop
test
or
pusha
test
sbb
or
pop
lods
loop
cmc
push
leave
push
xor
hlt
hlt
xor
and
cmp
movsb
inc
jmp
rolb
xchg
pop
in
push
shll
inc
or
es
leave
inc
mov
stc
add
dec
add
push
add
xor
shl
pop
push
fistl
clc
jno
cmpxchg
insl
test
pop
mov
add
test
jmp
popa
sub
movsb
adc
pop
cmp
cmp
jbe
push
mov
inc
xor
aas
adc
pop
xor
roll
push
cltd
push
adc
sbb
xor
xor
mov
rcll
loopne
js
popa
xchg
jecxz
sti
xor
adcl
pop
inc
cmp
nop
jge
mov
dec
popa
mov
imul
dec
enter
loopne
jl
dec
sbb
mov
rcll
loopne
aad
add
cmc
test
pusha
movb
mov
sub
clc
jb
call
aas
loopne
add
and
cmp
push
mov
rclb
inc
addr16
pushf
add
shll
push
and
xchg
add
arpl
add
push
ficoml
scas
out
enter
lds
aad
cmp
hlt
hlt
shlb
dec
mov
xchg
or
jno
pop
fsubrl
rorl
xchg
stos
adc
xor
rorl
pop
xchg
push
das
ds
xor
jecxz
outsb
addb
push
fstps
lahf
mov
inc
mov
pop
mov
mov
jmp
dec
add
pop
scas
push
movl
ja
daa
pop
jno
stc
js
inc
push
test
je
icebp
mov
cmp
cs
cmp
ja
inc
sahf
loope
xchg
xor
lds
sbb
std
jmp
inc
push
mov
add
lea
mov
cld
and
mov
xchg
fs
cmp
pop
mov
loopne
jle
pop
pushl
pop
movsl
push
sbb
jge
push
pop
arpl
mov
loopne
jns
mov
mov
imul
mov
pushl
sbb
rol
mov
popa
pmulhuw
call
in
sbb
into
push
ds
add
cmp
push
push
sub
int
cwtl
dec
bound
or
xor
inc
jnp
xorl
je
adc
mov
jp
mov
orb
or
ja
xchg
add
mov
aas
cmp
mov
rcrl
jno
popf
cwtl
add
jo
pop
outsb
iret
daa
inc
mov
jne
lea
push
push
int3
popa
movl
cmp
pop
adc
xor
pop
sub
stos
push
and
sub
mov
push
test
push
aaa
add
cmp
cmp
xor
in
xor
push
stc
daa
fwait
adcl
and
daa
lods
ds
xor
fsubr
jns
sbb
shr
enter
and
pusha
lock
loopne
adc
or
test
jo
adc
or
in
inc
loopne
lock
fs
out
jo
add
enter
inc
cmp
leave
aam
pop
jne
aas
push
roll
inc
lcall
cwtl
mov
popa
popa
sub
jo
mov
in
movsl
push
push
testl
sbb
adc
sbb
sbb
fidivrs
sbb
push
fsts
movsl
icebp
lock
push
mov
or
mov
pop
xor
cmp
int
ljmp
loope
xor
adc
push
pop
cs
adcb
iret
in
jmp
es
dec
js
xchg
or
add
int
jge
rol
js
inc
stos
adc
adc
mov
cmp
add
leave
or
mov
pop
pop
mov
in
adc
pop
adc
mov
dec
sub
jbe
lcall
pop
cld
clc
hlt
jne
pushw
insl
inc
push
mov
dec
cmp
sbb
ja
xchg
gs
cld
cld
aam
jne
cmp
mov
shl
add
or
rcr
sbb
daa
or
add
mov
jno
das
dec
cmc
inc
push
jl
sbb
cmp
or
mov
add
adc
cs
das
dec
test
in
adc
int
push
cwtl
push
mov
push
and
mov
mov
jo
and
clc
mov
lahf
lahf
sarb
int3
cli
mov
lods
cli
xchg
and
mov
add
lret
loopne
fwait
jbe
repz
in
push
call
cmpsb
cmp
xacquire
ficompl
int
test
and
clc
push
in
jg
push
cli
pop
dec
lods
mov
movb
aad
xor
aaa
mov
inc
fdivs
test
and
clc
adc
add
out
imul
add
mov
jbe
push
dec
lods
outsl
inc
loope
xchg
jecxz
or
or
adc
or
push
add
jmp
jae
xchg
clc
jmp
push
cmp
lock
jmp
xlat
sarb
jg
add
sub
mov
andb
cmpw
mov
nop
fldcw
fdivrs
pop
imul
mov
xchg
repz
fisttpl
inc
jl
push
out
lea
or
movsl
decl
orb
jo
mull
mov
mov
mov
pop
imul
cmpl
je
mov
and
fldenv
adc
jmp
push
inc
int3
clc
jno
orl
dec
cmp
mov
imul
and
and
inc
and
sbb
mov
enter
mov
das
jne
ljmp
scas
clc
sarb
jge
jmp
cmpb
rcrb
jle
inc
fs
arpl
popa
leave
mov
xor
in
aam
sub
clc
int
xor
je
add
push
arpl
or
in
movsl
repz
in
jbe
iret
insl
jl
jae
notb
sbb
mov
lret
pusha
sbb
or
add
ret
ja
mov
and
jp
call
adc
scas
sbb
cmp
cmpsl
dec
mov
cld
push
insb
pop
cmp
inc
cmp
adc
stos
pop
pop
jnp
sub
pop
in
mov
cwtl
ja
outsl
dec
arpl
loop
push
fs
sub
cmp
push
add
out
fmull
jne
mov
adc
jo
inc
dec
in
sub
es
sbb
xchg
push
cli
mov
pop
fs
add
pusha
cmp
push
cmp
mov
mov
sbbl
ret
dec
ja
sbb
loope
adc
mov
mov
add
pop
jo
cmpsb
dec
fwait
ret
push
xchg
push
test
std
dec
lods
fildll
adc
dec
imul
inc
mov
mov
push
dec
icebp
xchg
fstps
jno
inc
leave
jl
adc
inc
jnp
push
call
inc
loopne
loopne
cmp
xchg
je
out
sub
out
lea
push
xor
jbe
ljmp
aam
int3
add
add
inc
push
mov
mov
push
push
out
mov
xor
xchg
jo
mov
or
mov
and
sbb
dec
mov
call
andl
fsubs
push
lock
je
pop
push
aaa
mov
add
cmp
jp
fucomip
inc
punpckhwd
push
xchg
jo
push
ret
push
das
and
pop
push
fs
xchg
inc
push
daa
cmp
adc
lea
mov
or
lods
dec
push
and
or
sub
lea
popa
mov
dec
and
add
pop
or
xor
shl
ss
into
cwtl
sarl
push
mov
lods
andl
sbb
cmpb
outsl
sbbb
jg
and
fiaddl
fstpt
sub
cmp
jge
mov
cli
aas
sahf
out
clc
lock
jmp
ljmp
imul
sti
fidivrs
dec
addb
pop
sbb
push
push
push
push
int3
adc
leave
xchg
jg
jne
push
inc
sub
popf
xor
adc
sbb
sbb
je
xchg
lcall
sarl
cmp
jge
cmp
je
enter
push
pusha
cld
jne
movb
cs
adc
push
mov
jno
jo
fdivrl
jns
jns
mov
out
nop
mov
or
cmp
jne
push
jmp
into
shll
adc
xchg
aaa
mov
adc
bound
or
jne
gs
pop
in
out
pop
sbb
pop
inc
lock
cmp
lea
inc
cmp
add
repnz
insb
push
jo
pop
in
xor
push
xchg
je
adc
pushl
faddl
adc
jae
xchg
test
test
jo
icebp
mov
dec
and
sbb
xor
sti
pop
push
push
jo
rorl
or
adc
sbb
push
dec
enter
test
sbb
pusha
sete
idivb
jne
push
cmp
scas
jbe
mov
pop
and
dec
mov
xor
push
pop
aas
add
or
mov
stos
scas
adc
out
daa
or
or
in
lods
adc
outsb
adc
push
push
out
sbb
jp
or
jl
loopne
insl
sub
jb
fistps
or
add
jmp
lods
fisttps
inc
clc
cmp
mov
scas
jo
ficoms
mov
enter
or
pop
repnz
xor
cmp
fs
push
push
sbb
mov
mov
pusha
cmc
mov
cmp
jo
daa
out
adc
cmc
dec
loope
push
loopne
push
xchg
subl
push
mov
shll
or
dec
mov
int3
mov
insb
int3
popl
mov
scas
cmp
and
rcll
push
push
enter
fsubp
movsb
jbe
test
ljmp
cwtl
mov
imul
dec
push
rcrl
shl
inc
out
add
cmp
add
push
xchg
dec
inc
ds
call
movsl
and
inc
inc
dec
lahf
xor
cltd
inc
mov
dec
push
dec
movsl
sbb
dec
jnp
jae
and
sub
sub
push
lods
in
xor
mov
inc
mov
xchg
pusha
push
lea
push
push
or
adc
cwtl
test
pusha
sub
insb
daa
sbbb
mov
xchg
ss
negb
pusha
cltd
pop
adc
sub
sbb
in
pop
mov
cmp
jmp
adc
mov
cmpsl
xchg
outsb
xor
pop
mov
xor
pusha
cmp
pop
js
push
push
gs
addr16
push
sti
lahf
shll
xchg
cld
mov
push
repnz
hlt
je
data16
inc
dec
or
or
es
inc
sahf
mulb
fsubp
sti
imul
push
push
cmp
je
inc
mov
sub
adc
push
fidivl
sub
jmp
ret
sti
add
mov
je
pop
fst
mov
ljmp
fldcw
adc
cs
pop
ficoml
mov
cmp
jg
mov
push
add
mov
or
lock
inc
add
adc
pop
adc
pop
subb
sbb
pop
sub
sub
push
push
loope
push
dec
xor
cmp
cmp
sbb
mov
sbb
sub
or
loop
nop
inc
xchg
nop
cwtl
icebp
push
xor
adc
push
cwtl
testl
fidivrs
icebp
cld
leave
jae
repnz
cld
clc
cld
jb
pop
pop
fsts
pop
cmp
mov
xchg
sbb
icebp
adc
sarb
mov
pop
push
in
lods
mov
sub
fstps
pop
xchg
ja
popf
pushf
add
out
push
insl
js
rolb
cwtl
push
jnp
mov
shl
adc
xor
imul
sub
sub
or
pop
mov
in
lock
cmp
rcrl
roll
fdivs
mov
out
push
out
mov
xor
jbe
sahf
cmp
mov
fs
fisubl
jbe
adc
sub
clc
wrmsr
xchg
ret
mov
cmp
popf
dec
xchg
in
sbb
and
xor
mov
sub
fidivrs
fbld
mov
sub
cmovno
loope
nop
add
and
jecxz
subb
sub
add
fmull
xor
lods
cmp
int
aaa
rclb
push
dec
cld
jo
test
pop
jmp
xor
push
jl
jno
xchg
aas
xchg
js
jne
cmp
mov
jmp
into
xchg
cwtl
jo
andb
cld
mov
hlt
cmp
lea
pop
push
pop
add
pop
mov
push
mov
std
jg
add
mov
xor
mov
xor
and
or
call
fiadds
jne
testl
pop
ret
and
push
rcll
rorl
movsb
ds
dec
lds
adc
xchg
in
sbb
add
inc
push
shl
inc
arpl
loope
popf
fmuls
xlat
in
cmp
sbb
push
out
fwait
aaa
adc
pop
add
enter
adc
pop
leave
push
jb
pop
cs
dec
int3
or
sub
xchg
lret
in
or
and
cmp
daa
shrb
in
mov
sub
push
sub
xlat
pop
jg
sbb
pminub
ss
in
fcoml
fldl
push
fnstsw
adc
in
stc
pop
loope
loop
jecxz
in
in
pop
cs
adc
and
jmp
ljmp
in
adc
inc
lret
in
mov
icebp
sbb
sub
push
hlt
sub
testb
pop
mov
pop
adc
xchg
mov
imul
xlat
sub
std
sub
fisttps
test
jb
jg
add
je
xchg
jge
jne
pop
mov
mov
adc
inc
mov
idivb
cld
inc
cld
repz
mov
aaa
test
call
jl
mov
mov
fucomip
dec
cmp
aas
add
and
mov
lea
sbb
incl
lret
std
adc
cmc
inc
and
jns
and
jns
fmuls
xor
sbb
mov
movsbl
incl
lret
mov
add
xor
inc
cmp
cmp
jae
or
inc
out
add
pop
mov
add
sbb
dec
aaa
test
aaa
mov
jo
fmull
jmp
jno
and
mov
cmpsl
dec
or
lock
jns
mov
cmp
ss
sbb
subl
les
icebp
mov
sbb
cmp
call
mov
jne
shr
gs
pop
and
mov
sahf
push
shr
or
lods
push
mov
int3
xchg
sbb
test
pop
mov
jmp
test
or
xlat
sahf
sbb
cmp
lds
ret
jl
or
mov
pop
inc
fadd
or
je
push
inc
add
mov
mov
jo
out
movsl
jnp
ret
jb
ja
data16
pop
cmpb
adc
pop
pop
add
cmp
mov
sub
add
cmp
and
jnp
push
cmp
pop
insl
xor
lcall
inc
dec
push
and
inc
aas
repnz
ficomps
dec
jnp
add
in
sbb
pop
push
aas
imul
push
into
aaa
test
push
jb
test
pop
add
dec
jl
test
add
add
push
mov
and
push
mov
jecxz
mov
cmp
pop
jbe
push
test
cmp
sbb
push
push
push
push
push
dec
fimuls
mov
push
cwtl
mov
lods
popf
xor
jo
pop
xchg
test
insb
dec
xchg
fisttpl
cld
ret
add
ficompl
int3
idivl
cmp
sti
push
cmp
loope
lds
inc
mov
and
cmp
sbb
int3
data16
fdivs
pusha
pusha
dec
sahf
sub
cld
mov
sub
push
cmc
push
or
mov
cmp
inc
fisttps
test
pop
je
fnsave
add
push
imul
xchg
test
sbb
push
add
mov
mov
or
gs
add
mov
cltd
add
push
adc
cmp
sbb
jl
sahf
in
ss
incb
adc
pop
mov
sbb
push
xor
xor
popl
cmp
xor
or
js
and
xchg
daa
jl
in
icebp
js
incb
xor
mov
enter
push
xor
mov
ret
sbb
arpl
push
jmp
push
mov
push
stos
mov
inc
mov
fimuls
std
mov
push
pop
sbb
repz
push
push
mov
mov
inc
xchg
pop
mov
cmp
repnz
test
xadd
jo
lods
mov
or
ret
mov
int3
jbe
aam
jge
mov
add
fs
mov
mov
cmp
push
mov
ss
push
push
or
iret
sub
insb
sahf
stc
ficomps
xor
push
or
mov
ljmp
add
aam
subb
or
inc
sub
mov
iret
scas
add
ret
and
pop
clc
decl
push
push
sub
sbb
fsts
adc
mov
jmp
or
iret
sbb
pop
pusha
stc
add
in
iret
pushl
das
jecxz
rorl
pop
sbb
jl
or
pop
push
and
dec
or
loopne
movnti
std
movl
insb
inc
lcall
std
sbb
lock
fs
sub
dec
les
imul
insb
std
into
dec
jb
insb
xor
mov
mov
mov
or
push
dec
jo
js
jnp
pop
sub
movsb
push
dec
je
lcall
xchg
fs
push
inc
jp
bt
ficompl
mov
dec
pop
jmp
push
dec
dec
lret
daa
shll
push
rcrb
and
adc
xor
sub
mov
sub
das
test
cmp
js
cld
in
cmp
jge
pop
movb
inc
push
push
jae
xor
jbe
push
divb
rcrb
push
xor
adc
fidivs
mov
test
out
dec
pop
icebp
and
xchg
pop
cmpsl
pop
jle
fucomi
add
push
fnstsw
push
dec
and
jmp
add
rolb
jne
cmc
rorl
pop
jge
pop
ret
pop
mov
bound
mov
pop
mov
adc
mov
popf
add
pusha
adc
jns
jns
jns
sub
jmp
call
xlat
inc
popa
pop
ss
cmp
lahf
cmp
sub
push
push
pop
jmp
add
jecxz
inc
lcall
xor
inc
sub
das
sub
or
sub
bound
and
andl
fst
or
orb
inc
xor
mov
jmp
rorl
push
jb
adc
and
pop
mov
push
lcall
cmp
rclb
in
inc
jb
test
sub
lods
sbb
add
mov
lock
popa
mov
pop
cld
pop
and
jl
pop
push
or
hlt
adc
pop
outsb
lahf
cvtps2pi
sbb
fcom
cmp
mov
mov
sbb
test
ds
popa
sub
cs
dec
enter
add
cltd
notl
mov
adc
add
and
stos
pusha
jno
mov
pusha
fwait
shll
in
xor
inc
rolb
ret
adcl
jmp
sti
lock
pop
daa
dec
repnz
add
fwait
lret
mov
xchg
mov
fs
pusha
scas
pop
push
andl
ds
imul
pop
pusha
mov
mov
jo
pop
push
lea
jl
cwtl
orl
lock
rolb
or
imul
mov
in
and
jae
dec
sub
cmp
ret
popf
jbe
cmpsb
inc
ffreep
sub
scas
add
lods
lock
xchg
in
incl
aas
mov
shr
dec
in
in
or
cmpl
je
push
cmp
mov
lds
xchg
xchg
xor
je
sahf
je
jbe
sti
ss
push
push
imul
mov
xor
aaa
icebp
sbb
mov
inc
pop
pop
ret
adc
adc
ss
addr16
je
xor
or
adc
clc
mov
and
adc
jno
and
adc
add
jae
jge
faddl
fldt
orb
push
fstpl
or
inc
push
inc
aas
mov
enter
push
icebp
inc
test
push
lea
lods
add
test
testl
mov
les
and
add
sbb
mov
fadd
je
inc
scas
dec
arpl
adc
push
push
sbb
push
daa
mov
sub
mov
sub
jns
mov
adc
adc
xor
cmp
fs
test
mov
cmpl
xchg
sbb
jmp
sbb
pop
pusha
sahf
std
push
adc
je
test
dec
inc
clc
inc
mov
inc
and
xor
fistpl
adc
invd
jle
mov
add
push
jl
inc
shrb
test
into
push
jle
scas
shrb
mov
rcrb
push
push
mov
pop
sbb
push
popa
decl
mov
shll
push
aaa
adc
mov
or
ds
or
scas
ret
push
call
shlb
pop
cmp
inc
jmp
leave
pop
fisttps
adc
dec
sarb
jae
movb
adc
push
lea
add
call
mov
dec
pop
and
mov
push
ret
mov
mov
cwtl
nop
jnp
dec
lods
mov
mov
jecxz
jne
fwait
adc
dec
repnz
stc
daa
push
ss
lock
pop
clc
call
push
clc
outsl
ljmp
rep
enter
adc
adc
in
lds
lock
jmp
and
rcrb
or
sbb
cltd
clc
cld
mov
inc
push
rorb
cwtl
in
outsl
call
mov
repnz
movsb
stc
sub
hlt
push
pop
enter
rclb
mov
call
mov
inc
rol
mov
enter
aaa
and
imul
add
mov
mov
pusha
add
pop
dec
mov
lock
cld
mov
rcrl
sub
sbb
dec
clc
stos
andb
dec
lods
es
and
in
adc
inc
sbb
insl
adc
dec
push
cmp
or
sub
pop
sbb
xor
cmp
pop
mov
loopne
add
in
inc
es
push
push
daa
cmp
mov
je
push
insb
repnz
push
loopne
cmpsb
cmpsb
add
xchg
rorl
pop
std
push
movsl
pusha
cwtl
aaa
mov
pop
imul
in
int3
adc
outsb
les
inc
pop
mov
incl
inc
nop
notl
lods
xchg
or
or
mov
add
sub
mov
pop
fsubl
movsb
std
adc
mov
pop
sti
adc
push
inc
fs
adc
add
xor
sbbl
sbbb
mov
mov
mov
stos
dec
movsb
pusha
xor
fldenv
int3
cmp
xor
pop
pop
in
mov
add
adc
pop
mov
or
push
neg
sti
adc
lods
and
push
jbe
fcoms
cltd
pop
pop
push
jnp
dec
outsl
fs
mov
xchg
orb
ss
sub
rorl
sahf
loop
fs
sbb
mov
sub
mov
add
push
jmp
xlat
mov
jae
sub
mov
adc
add
je
cwtl
cmp
dec
mov
sub
pop
sub
push
add
lods
jns
or
sbb
xor
add
sbb
sbb
add
cmpsl
pop
adc
aaa
add
inc
je
lcall
sbb
mov
adc
test
adc
aaa
leave
push
mov
rorl
cmpsl
add
pushf
add
test
test
jb
sti
loopne
xadd
add
leave
jb
push
push
fwait
or
lds
loopne
shlb
fildl
clc
inc
dec
imul
enter
icebp
push
sbb
mov
cmp
sbb
sbb
pop
fs
add
fwait
sbb
jb
cmp
mov
js
lahf
lea
sarl
pop
push
mov
pusha
pop
push
push
sti
add
fisttps
call
jne
cmc
inc
cmpl
subb
rol
out
mov
je
sbb
xor
call
push
jmp
push
or
push
insl
insb
jg
push
jnp
or
dec
je
push
adc
inc
jl
push
fs
adc
lret
popa
xor
sbb
adc
fsubs
pop
jnp
and
add
and
push
cmp
loopne
cwtl
cmpsl
ret
push
mov
cmpsb
call
aam
push
push
inc
push
or
clc
and
adc
mov
cmp
mov
push
push
mov
pop
negb
sub
test
sbb
call
lahf
mov
jno
leave
inc
cmp
mov
mov
cmpw
jne
add
push
mov
mov
js
mov
test
inc
pusha
jo
lea
inc
mov
dec
pop
pop
xor
adc
lret
sbb
add
add
jmp
xchg
inc
ret
add
jl
mov
loop
inc
pop
mov
sbb
test
lret
inc
push
roll
inc
lret
sbb
cmp
jb
cmp
cs
pop
push
jae
ss
fisubrs
loopne
fs
cmp
xchg
jne
or
dec
jecxz
aas
fcoms
add
mov
ret
mov
inc
loop
lock
jg
repz
rcrl
sub
inc
mov
fnsave
push
dec
xchg
cwtl
pop
out
inc
int
loop
sbb
fst
stos
rol
cmp
clc
into
or
fwait
in
enter
jl
bnd
imul
push
jbe
jmp
push
fistps
dec
lock
inc
add
cmp
jb
jmp
dec
movsl
push
dec
push
insl
mov
xor
add
and
sub
mov
dec
nop
adc
pop
mov
shr
and
mov
xor
sbb
enter
popa
std
inc
sbb
inc
lock
lea
xor
cmpsb
mov
cmp
icebp
out
xor
adc
pop
mov
pop
loop
or
dec
xor
test
pop
xchg
aaa
xor
mov
jne
fwait
movsb
fists
hlt
mov
fadds
pop
out
cmp
loopne
cmp
push
shll
in
loopne
aad
sub
push
jmp
push
pop
pop
pop
xlat
nop
nop
andl
sbb
addr16
push
jae
sub
push
roll
popa
push
shll
mov
out
jmp
xlat
mov
pop
clc
cmp
addb
pop
lahf
dec
lods
loope
pop
push
pusha
rolb
cmp
xor
dec
mov
or
loopne
incl
or
inc
cmpb
clc
idivb
or
subb
jmp
push
mov
loope
fsubs
sbb
add
pop
iret
fsts
xor
push
leave
cmp
push
or
add
cmp
sbbb
sub
loopne
push
push
cmp
xor
xor
xor
push
loopne
adcb
and
adc
inc
fnstsw
push
fdivr
or
mov
mov
pop
in
push
sbb
dec
dec
xor
aas
pop
inc
das
in
out
jbe
cmpl
je
mov
test
cld
sti
call
adc
jo
cmp
ja
xor
adc
lcall
orl
testb
fists
scas
jge
jo
lea
sbb
enter
inc
test
pop
fstps
xchg
and
mov
and
test
sub
cmpsl
lds
jge
sub
jg
jle
adc
and
adc
hlt
rorl
lock
or
idivl
rcrb
add
clc
out
mov
pop
mov
je
add
mov
sbb
lea
fwait
cmpl
cmp
inc
cwtl
mov
mov
pop
pop
adc
or
cmc
cli
jns
xchg
std
dec
pop
adc
pop
dec
mov
clc
scas
clc
mov
movsl
mov
and
int
add
cmp
shl
fistpll
sub
push
je
push
outsl
mov
divl
add
add
sbb
push
lock
das
jg
or
sub
popf
ret
inc
jmp
dec
je
mov
or
inc
adc
push
dec
pop
lea
or
xor
test
lock
scas
mov
cld
cmp
test
dec
add
jo
jge
loop
sub
add
fistpl
pop
cld
pop
jle
xor
addr16
int3
jae
sub
sub
popf
push
dec
cmp
or
mov
mov
push
leave
pop
xor
sbb
insb
bound
clc
push
mov
mov
push
ds
lea
pop
mov
mov
push
and
orl
mov
jp
ret
popf
fidivrl
movsl
fs
lock
inc
lea
mov
leave
dec
push
jecxz
inc
sub
add
mov
sbb
mov
mov
pop
rorb
cmp
jl
jne
imul
fisttpl
push
dec
ret
dec
sbb
incl
or
jbe
cmp
adc
lret
pop
jne
cmp
jae
mov
jno
jo
scas
jo
fwait
push
push
push
push
add
aaa
sub
push
dec
clc
push
mov
inc
mov
mov
xor
mov
call
mov
pop
push
inc
mov
call
mov
jno
mov
loop
rcrb
dec
cmp
cmp
dec
fcmovne
sub
sbb
sbb
testb
lret
jnp
inc
fs
in
add
test
push
cmpl
push
and
and
jb
dec
in
push
call
add
daa
repz
ss
aaa
push
pop
mov
sbb
push
call
dec
cmp
mov
rorl
cmp
icebp
dec
xchg
lods
push
test
iret
repnz
pop
jge
jg
sub
jmp
push
inc
jne
mov
dec
and
fs
dec
push
push
mov
insl
arpl
jbe
jnp
insl
pop
mov
aas
pop
jmp
pop
fldcw
int3
out
xor
insb
push
in
xchg
lsl
shl
inc
sub
test
and
sbb
push
xor
xor
dec
sub
push
shl
xchg
orb
push
xchg
jl
push
lea
push
stc
or
sub
cwtl
mull
int
mov
xor
jne
push
pushl
add
test
cwtl
stc
stc
cmp
jmp
and
orl
mov
sbb
je
or
adc
aad
sbb
pop
add
pop
cmpsl
aad
cmp
mov
push
scas
jo
test
jno
dec
pusha
pop
inc
mov
pop
int3
adc
pusha
mov
add
sub
pop
and
mov
fs
xor
or
mov
mov
in
and
dec
jne
and
ss
push
or
popf
add
mov
inc
out
imul
lcall
add
jne
test
add
jbe
add
cltd
push
shrl
nop
sub
and
xchg
rorb
js
pop
push
or
add
cmp
xchg
cld
and
shlb
jae
in
test
mov
or
cld
imul
lods
pop
in
mov
xchg
push
adcl
push
mov
sbb
mov
or
add
jne
mov
pop
sahf
lods
push
flds
jb
push
inc
dec
dec
out
xchg
push
imul
popa
sarb
cmp
clc
pop
and
mov
mov
sub
stc
push
cmp
call
add
lret
dec
jns
and
xchg
add
shr
xorl
or
cmp
and
repz
sar
ja
repz
ljmp
xchg
push
adc
aaa
pop
or
test
mov
xlat
sbb
shrb
push
add
inc
and
popf
scas
test
cmp
ret
enter
cmp
mov
ss
sub
les
inc
xor
jmp
imul
xor
jae
mov
ds
inc
pop
sti
sbb
out
adcb
arpl
mov
dec
sub
xchg
fs
insl
inc
push
popa
sub
sbb
dec
sub
dec
lods
pop
gs
stos
je
jae
and
or
setno
clc
mov
pop
jb
out
sub
mov
int3
test
jne
adc
outsb
pop
inc
jne
adc
jg
cmp
lock
movsb
das
jae
jg
cmpsl
inc
xchg
sub
mov
pop
sub
add
xchg
jo
inc
outsl
mov
das
push
adcl
sub
fistpll
lcall
cmp
adc
inc
lcall
inc
test
adc
xor
fbld
pusha
and
push
and
add
and
rolb
cmpsb
and
cli
xor
or
lock
cmp
sub
inc
add
jle
or
or
dec
inc
sbb
sbb
push
sub
test
jge
mov
sub
jne
divb
pop
inc
into
cmp
in
out
xchg
jne,pn
xor
iret
sub
and
cmpsb
daa
sbb
ss
adc
sub
je
push
das
and
nop
add
sbb
mov
sub
sbb
ror
xchg
rclb
inc
adc
and
lret
clc
adc
fsubrs
insb
or
or
add
adc
fisubl
push
push
loopne
dec
loopne
lea
ja
jge
ja
adc
push
push
and
mov
std
and
xor
divb
jne
cli
loopne
adc
xorl
sbb
sub
adc
das
pop
cmp
iret
mov
pop
push
inc
mov
nop
scas
adc
stc
or
fistl
shrb
insb
or
and
call
ret
mov
loop
cs
cltd
adc
cmp
inc
add
jg
fldln2
sbb
add
lds
sti
insl
add
call
adc
push
mov
jmp
inc
in
aaa
pop
and
repnz
jp
cltd
dec
push
mov
dec
les
shrb
mov
jmp
jmp
pop
mov
adc
nop
in
cmp
xchg
adcl
ss
mov
inc
xchg
das
xorl
xor
inc
mov
inc
fnsave
inc
inc
push
and
dec
clc
push
cmp
cld
dec
or
push
notl
xor
inc
in
jmp
addr16
dec
and
mov
xor
pop
mov
imul
lock
pop
cwtl
add
fldt
push
clc
push
adc
push
jge
push
test
push
je
mov
mov
gs
or
mov
xchg
rorl
test
mov
push
push
push
mov
insb
arpl
mov
mov
jnp
cmp
mov
int
imul
and
dec
es
movb
sbb
cmp
xchg
sbb
mov
sti
xor
push
inc
sbb
push
je
aad
js
aad
mov
sbb
sbbb
call
cmpb
mov
pop
cli
je
dec
jne
lahf
aaa
xor
cmp
movhps
sub
lret
dec
inc
xchg
cmp
shl
lea
jo
cmp
lock
xchg
ds
cmp
sub
adc
rolb
leave
or
adc
adc
jo
adcb
mov
dec
mov
or
mov
repz
ja
mov
push
pop
dec
out
xor
cmc
xor
or
ljmp
push
popf
popf
fdivrl
mov
cmpsl
adc
push
or
mov
adc
sub
fs
js
jns
and
push
adc
mov
cmp
xorl
pop
orb
lock
mov
push
push
sbb
enter
loopne
clc
call
shl
sub
xor
shll
and
push
bnd
and
pop
popa
fsubs
sahf
cld
and
xchg
sub
mov
cmpb
cltd
popa
jmp
stos
imull
push
enter
inc
mov
test
and
call
test
sbb
es
mov
sbb
xor
loope
sbb
leave
sbb
stos
outsb
aad
pop
mov
data16
xor
sbb
sbb
sub
jmp
cs
xor
jp
fidivrl
pop
adc
xor
aad
push
es
movsb
inc
and
add
ss
pusha
add
mov
imul
mov
je
mov
clc
adc
out
dec
or
jae
mov
rcll
fmul
mov
or
cmp
or
jne
test
cmpsb
bound
sbb
dec
or
fwait
or
cmp
cmpb
mov
pop
jne
movb
push
inc
jns
aam
ficoml
in
mov
lret
sti
pop
sbb
sbb
sbbl
les
xor
divl
sub
loop
xor
out
or
jb
push
je
sbb
push
push
mov
lock
cmp
or
pop
int3
cmp
xor
push
mov
je
push
cltd
push
fninit
cmpsl
lahf
sbb
sub
int
mov
movb
push
in
xor
test
jb
popl
jo
sub
cmp
push
or
pusha
sbb
andb
cmpsb
pop
jecxz
inc
cs
fsubs
outsl
mov
pop
mov
dec
push
rol
je
aad
xchg
movsb
pop
in
xchg
in
push
push
pop
pop
lea
inc
sub
fdivrp
xchg
call
lret
inc
aaa
push
js
movb
jge
orl
sbb
inc
nop
mov
daa
outsl
orb
and
fadd
jecxz
adc
out
xchg
lahf
xchg
mov
xchg
popa
psllw
repz
stos
fisttpll
lock
add
sahf
mov
jge
adc
push
or
push
jne
std
cmpsl
mov
rorb
xchg
xchg
pushf
mov
dec
sub
cli
pusha
mov
xchg
cmpsb
push
lcall
enter
add
inc
shr
push
pop
bound
cmp
push
mov
xchg
dec
pop
xchg
outsl
jecxz
inc
dec
cmp
mov
dec
xor
pushf
push
add
out
call
dec
int3
dec
fcoml
movb
adc
mov
outsl
or
mov
addb
lods
add
jmp
mov
adc
mov
mov
mov
cli
pusha
sub
sbb
clc
adc
les
xchg
cmpsl
sub
sbb
fisubrs
sbb
adc
xor
adc
pop
add
sbb
sub
and
and
pop
push
dec
std
dec
jp
jne
inc
jmp
and
lods
or
out
shr
dec
cmpl
lcall
push
in
xchg
xchg
adc
add
jo
and
jno
add
fmull
andl
pop
jo
inc
pop
stc
subb
add
mov
push
rep
push
jecxz
js
pop
dec
sub
or
add
xor
inc
adc
dec
and
jmp
pusha
fcomps
adc
xor
dec
pusha
bound
inc
xchg
jmp
jne
dec
add
shll
fcompl
fs
negb
js
push
add
test
jns
push
aaa
aas
test
jno
sbb
incl
adc
movl
push
push
ja
cs
enter
add
daa
add
add
mov
mov
pavgb
lret
scas
les
pop
ret
div
imul
lea
dec
movb
cmp
cmc
repz
adc
in
outsl
jmp
orl
ficompl
cltd
test
inc
mov
mov
out
punpckhwd
add
add
je
add
imulb
jne
fsubrp
pop
add
pop
inc
jg
enter
sub
jge
mov
adc
jmp
cmp
stos
pushf
adc
pop
sub
lock
jp
aad
xor
popf
and
std
fimull
in
inc
xlat
adc
xor
rcrb
pop
sub
mov
sbb
jb
in
mov
xor
jb
cmp
jb
mov
out
enter
test
sbb
je
lods
cmp
pop
sub
cmp
xor
repnz
repnz
sub
and
sbb
out
jns
mov
je
inc
jns
movl
std
and
mov
jbe
std
pop
call
jmp
jmp
sbb
and
lahf
add
subl
fadds
dec
fcomps
inc
dec
inc
inc
fs
fmull
xorl
or
stos
dec
fistps
cmp
dec
xor
xchg
je
rorb
enter
repnz
enter
lock
iret
repnz
fs
adc
xor
pop
jmp
push
movsb
mov
in
aad
mov
jb
repnz
or
aam
sbb
mov
xor
sub
inc
fprem
dec
out
ret
push
jl
jbe
dec
cmp
enter
and
ja
sbbb
cmp
jo
mov
test
cmp
sub
mov
mov
loopne
mov
add
sub
adc
jo
daa
lahf
add
add
dec
xor
enter
mov
push
or
test
pushf
ja
inc
fidivrl
fidivl
cmp
jo
push
test
sbb
cmp
xor
cmp
clc
mov
sbb
sbb
int3
push
sahf
test
mov
dec
jae
dec
cmp
call
enter
adc
mov
mov
jb
push
fildl
addb
call
enter
fistpl
mov
adc
xor
enter
xchg
dec
sub
dec
fs
fs
dec
pop
repnz
adc
jbe
or
in
jo
rorb
xor
fwait
xchg
xchg
xchg
mov
xchg
pushf
adc
sbb
sbb
jmp
mov
or
and
sbb
xchg
xchg
xchg
dec
shr
fdivs
jb
mov
dec
in
bnd
pop
clc
xor
fldcw
dec
and
xor
add
iret
dec
mov
cmp
iret
xchg
mov
pop
add
sbb
cltd
lea
cmp
sbb
aad
leave
pop
aam
enter
mov
xchg
xchg
xchg
fldenv
pop
and
mov
pop
insb
adc
sarb
dec
jno
imul
sbb
xchg
orl
mov
jns
nop
pop
test
pop
dec
mov
xor
mov
xchg
xchg
hlt
dec
xchg
inc
dec
sahf
adc
adcb
dec
fsubl
sub
and
mov
xchg
fxch
fsub
xor
enter
or
jb
fimuls
or
inc
jmp
addr16
imul
xor
jle
cmp
outsb
inc
mov
insl
jb
lock
add
adc
call
xchg
mov
dec
pop
jnp
sbb
pop
mov
js
cmp
je
mov
push
lcall
fsubl
cmp
cmc
nop
sub
sub
xor
xor
int3
enter
ret
sahf
dec
in
lds
daa
pushf
sbb
inc
fs
pop
arpl
dec
aam
leave
in
fs
xor
xchg
or
or
fiadds
sbb
sub
inc
dec
adc
out
je
xchg
or
rol
add
dec
or
adc
mov
aam
xor
shrl
push
imul
mov
sbb
and
fdivs
enter
mov
push
and
push
repnz
lods
in
or
jl
test
push
ret
in
js
sbb
sbb
rol
xchg
sub
inc
push
sbb
xchg
add
nop
call
push
and
and
dec
dec
adc
hlt
lock
push
inc
push
xor
sbb
sbb
hlt
dec
je
sub
fbld
dec
sti
xor
repz
dec
enter
into
hlt
cld
add
jb
clc
movsb
mov
cmp
jo
jo
add
dec
add
push
inc
ja
pop
inc
pop
in
or
xor
mov
push
or
push
lcall
mov
rclb
cmp
das
jns
dec
and
data16
add
and
lods
leave
and
sbb
mov
enter
mov
pop
push
rol
sbb
xchg
push
leave
and
jb
aam
fdivs
pop
xor
mov
or
shr
inc
leave
and
sub
and
add
dec
sbb
and
dec
add
cmp
xchg
pop
shrl
adc
jns
add
xchg
lahf
jge
sahf
out
xchg
je
test
clc
scas
xor
popa
je
push
fdivrl
mov
test
pop
je
les
test
inc
sub
push
push
outsl
int
pop
xor
movb
jns
mov
and
push
mov
into
or
mov
push
out
mov
scas
xor
cmp
in
pop
push
inc
test
clc
mov
inc
inc
repz
add
subl
lds
jge
push
addr16
fists
ret
mov
adc
cmp
je
or
sarb
cmp
jl
xor
inc
jle
cmp
mov
pushl
add
sbb
mov
mov
incl
cmp
jl
cmp
pop
repz
or
add
jb
mov
imul
jge
xor
xor
lea
jl,pn
loope
incl
pop
mov
add
lret
mov
and
inc
mov
dec
cmp
and
pop
movsl
aaa
or
inc
jecxz
pop
cmp
pop
jl
cmp
jg
daa
or
pusha
mov
add
jns
or
rcll
adc
inc
cld
pop
loop
das
loop
out
sub
into
test
mov
mov
jmp
cmp
insl
daa
orl
cld
or
push
or
pop
lock
notb
aas
mov
mov
outsb
lahf
cmp
roll
adc
xchg
lea
insb
add
popf
adc
push
push
sbb
dec
dec
shll
dec
pop
jg
rolb
pop
and
cmp
adc
adcb
int
repnz
rclb
adc
xor
or
or
cmp
mov
dec
lea
mov
sti
bnd
and
xchg
shlb
add
inc
nop
daa
dec
push
jne
mov
fldl
mov
sub
and
mov
test
adc
movb
push
cmp
test
xor
je
jnp
mov
cmp
add
mov
and
push
add
adc
insl
add
and
pop
cmp
push
sbb
push
les
adc
inc
pop
push
inc
push
aas
dec
mov
xchg
loope
sbb
ljmp
or
push
inc
sub
shlb
xchg
sbb
push
dec
mov
push
dec
movsl
test
sahf
pop
leave
mov
aam
adc
addb
jl
add
inc
test
shlb
push
in
pop
pop
add
mov
push
mov
subl
lods
push
addr16
xor
lods
cmpsl
mov
inc
out
or
jne
jnp
mov
sbb
cmpsl
test
jns
out
sbb
dec
and
lods
loope
push
lock
push
sub
xor
test
fs
adc
and
je
dec
jne
sbb
mov
pop
mov
pushf
clc
imul
int
and
mov
mov
and
or
jbe
in
iret
xchg
nop
nop
shlb
insb
mov
sub
push
adc
adc
in
int3
shrl
cmp
test
sahf
fsubrs
sbb
xchg
mov
loop
sbb
adc
push
mov
add
ret
mov
sbb
sub
js
jne
loop
test
sub
fcomps
mov
int
test
or
repnz
cmp
insb
add
arpl
xor
push
mov
out
pushl
nop
mov
jl
mov
mov
sub
mov
mov
stos
mov
movsb
push
jmp
pop
add
shrb
ds
or
clc
adc
in
pushf
movb
daa
movsb
adcl
cwtl
int3
and
push
add
pop
ret
loope
or
add
sbb
xor
repz
jg
adc
push
or
je
jle
dec
adc
xor
adc
and
xchg
out
jmp
mov
xor
pop
pop
xor
lcall
push
or
xor
movsl
add
outsl
mov
inc
xchg
sti
idivl
jb
sti
and
je
mov
sub
cmp
add
and
push
je
or
test
cli
pop
dec
lahf
jecxz
mov
out
leave
and
movsb
dec
out
in
or
push
mov
je
lods
sbb
out
add
add
mov
mov
jge
mov
out
push
adc
push
insl
je
lea
adc
aas
ja
movzbl
and
sub
cmp
cmp
push
sub
fs
mull
fld
sbb
adc
ret
mov
xchg
std
inc
out
or
push
push
mov
fildl
scas
and
ret
rcr
shll
ror
adc
adc
imul
or
add
dec
sub
add
pop
or
js
dec
cmpsb
add
dec
popf
loop
inc
rcrl
sbb
cmp
push
push
addps
clc
mov
or
notl
push
jle
cmp
loope
mov
pusha
cmc
pop
sbb
je
lret
mov
inc
add
adc
out
in
icebp
mov
sti
xor
xor
or
jb
or
xchg
call
call
hlt
out
fdivl
ret
and
or
mov
cld
dec
pop
sub
je
inc
add
jo
loopne
and
clc
inc
loope
jo
nopl
jo
lds
sbb
pop
testl
dec
popf
xchg
pop
aaa
arpl
pop
mov
fisubs
dec
jne
in
test
mov
cmpl
cli
repz
jne
push
push
jns
cmp
push
pop
cmp
stos
mov
jbe
push
outsl
subb
pusha
call
cltd
mov
xor
aas
arpl
cmpsl
cmp
and
aas
je
nop
inc
mov
cmp
mov
inc
adc
adcl
mov
xor
test
cmp
aaa
fdecstp
add
call
adc
lds
push
mov
mov
fcompl
push
std
imul
adc
mov
jb
das
adc
pop
mov
inc
pop
and
add
xorb
loope
fcompl
push
inc
xor
gs
dec
in
call
cmpsl
fidivrl
loopne
inc
pop
test
enter
xor
xchg
jb
mov
or
das
sbb
jno
icebp
push
insl
or
pop
dec
xlat
hlt
push
inc
stc
add
adc
cld
clc
lea
push
mov
xor
dec
jo
push
addr16
add
push
xchg
dec
and
lock
test
pop
icebp
push
cltd
xchg
lea
xchg
lock
fdivrp
dec
mov
mov
cmpsl
in
out
ud2
data16
clc
not
adc
add
mov
hlt
cmp
xor
jb
and
fdivrp
sub
insl
xchg
jb
mov
pop
cmp
adc
mov
or
adc
jnp
bound
add
in
lods
popa
jno
stos
lea
test
cwtl
lods
roll
cmp
sbb
and
and
dec
sub
test
xchg
popf
sahf
pop
sbb
idivl
fbld
bound
cmc
inc
sub
je
mov
cmp
xchg
add
xchg
xchg
je
mov
sbb
and
mov
nop
pop
cmp
faddl
mov
adc
popf
rorl
ret
add
je
fwait
add
and
inc
enter
inc
mov
xor
sbb
push
insb
jmp
sbb
and
adc
and
fsubrl
mov
idivb
or
dec
cld
ljmp
faddl
mov
xchg
mov
and
xor
push
or
and
dec
repnz
or
or
push
sub
or
or
and
jo
mov
cld
or
rolb
pop
in
clc
nop
jno
adcb
push
mov
dec
xor
pop
adc
pushf
dec
mov
push
or
dec
and
lods
dec
add
testb
inc
adc
mov
dec
adc
mov
ss
mov
mov
hlt
dec
push
rcll
or
mov
movsl
sbb
and
mov
cmp
push
sbb
push
sbb
mov
mov
nop
dec
push
sbb
mov
cmp
cmp
mov
fmull
sbb
lock
inc
push
mov
pop
xor
and
jmp
push
push
sbb
fwait
xchg
sub
pop
adc
xor
orl
lcall
insl
call
push
scas
add
xchg
or
inc
insl
je
inc
xchg
cmp
jno
push
in
fs
ss
in
gs
cmc
es
pop
cld
insl
mull
add
adc
push
xor
and
js
not
clc
jb
xorl
loope
sub
mov
push
inc
mov
lock
ds
pop
inc
mov
fdivr
cmp
xchg
mov
or
and
jne
pop
inc
fimuls
pop
or
xchg
cmp
mov
or
or
je
xor
clc
xor
push
lahf
fldl
in
mov
push
cmp
and
enter
incl
inc
cmpl
enter
dec
sti
xchg
mov
jne
push
cld
sbb
jle
fsubr
ja
adc
pop
fstpt
pop
jo
lds
xor
lods
adc
push
jbe
out
pop
and
xor
iret
out
dec
push
pop
ds
pop
sub
arpl
std
cmc
pop
je
or
insb
out
lahf
iret
out
clc
call
out
hlt
in
and
mov
dec
cltd
pop
cli
int
andb
push
lods
into
dec
ljmp
mov
or
shl
nop
sbb
nop
cld
ja
popf
mov
or
jg
mov
push
mov
leave
daa
cmp
push
and
in
frstor
sub
cld
mov
mov
push
cmpl
aad
pusha
add
or
in
mov
push
cmp
outsb
fadd
repz
and
xorl
imul
jp
je
push
push
jbe
jnp
fdivl
push
cmp
fbstp
decb
pop
and
orb
and
xor
out
rorb
add
xlat
add
fsubl
icebp
add
fwait
or
jge
or
and
leave
je
jmp
ret
jbe
mov
jg
sbb
jle
add
cmc
pop
je
xchg
jle
int
enter
jmp
and
outsb
je
popa
cmp
inc
icebp
out
hlt
xor
pop
push
xchg
dec
in
jmp
adc
xchg
push
lret
push
ja
mov
stos
or
loopne
dec
pop
jo
xor
rol
adc
mov
sbb
mov
js
dec
ror
cmp
jbe
lea
push
dec
jno
out
lods
inc
add
cmp
jb
das
arpl
aaa
test
pop
data16
jle
add
stos
movzbl
push
sahf
pop
iret
rorl
repnz
lock
inc
xchg
dec
sbb
or
rolb
cmp
jle
lea
shr
inc
shl
lea
jg
push
inc
repz
mov
add
inc
inc
stos
negb
add
call
jo
faddl
mov
shr
and
fadds
lret
shr
add
sub
fwait
adc
jecxz
push
or
mov
push
lods
out
jle
mov
lea
lock
cld
cmp
movsl
cmp
testl
add
jg
add
mov
and
mov
cmpsb
clc
mov
jae
or
xor
scas
mov
or
rclb
loop
mov
and
push
push
pop
xchg
push
sub
imul
jl
pop
cmp
xchg
lgs
std
mov
adc
fldenv
adc
push
jnp
xor
inc
ret
jns
or
repnz
inc
jo
inc
and
pop
mov
cltd
dec
mov
mov
cmp
cmp
mov
jmp
wbinvd
add
pop
or
push
or
push
std
stc
nop
into
push
fadds
push
jnp
jl
sbb
aam
loopne
nop
inc
and
insb
cltd
sub
dec
lods
pop
test
insb
cld
push
push
pop
fs
fwait
adc
add
mov
and
repnz
scas
inc
or
mov
xchg
pop
jge
push
pop
cmp
sub
inc
inc
adc
inc
push
push
push
lds
mov
mov
jns
icebp
push
incl
cmp
push
mov
xchg
cmp
mov
mov
inc
loop
sub
lea
fisttps
jne
cmpb
jb
pop
xor
sbbl
xor
push
out
addr16
insl
or
mov
push
mov
dec
sub
mov
in
js
jecxz
mov
into
add
sbb
add
inc
jg
mov
inc
push
or
adc
mov
pop
add
jl
sub
xchg
adc
dec
sub
cs
or
out
dec
clc
add
push
cmp
jb
aad
xor
test
or
es
scas
ljmp
add
rcl
jne
or
add
xchg
rep
mov
enter
adc
mov
add
in
push
lock
and
enter
jmp
pop
je
xchg
push
adc
fwait
test
les
sub
lret
pop
push
xor
mov
fs
cmp
adc
dec
or
cmp
and
jmp
ret
push
and
sub
push
shl
insl
xchg
sub
push
xor
push
insl
iret
repz
je
inc
daa
xor
xchg
or
data16
dec
adc
jne
adc
ret
je
repz
or
push
pop
aas
or
pop
lds
ret
rorb
push
sbb
adc
mov
lahf
scas
push
and
andb
add
fcoml
nop
add
shlb
add
push
fdivr
imul
and
adc
insb
imul
sub
xor
pop
or
cs
stos
cmpsl
sub
push
xor
or
push
xor
cwtl
add
mov
daa
pusha
rcrl
push
inc
lea
repnz
xorl
repnz
rorb
inc
imul
imul
add
xor
or
adc
add
push
sub
jo
xor
rorb
icebp
xchg
jmp
and
pop
push
xor
push
xchg
add
xchg
lret
outsl
aam
mov
cmp
cwtl
pop
push
push
jne
jmp
push
loopne
sub
xchg
cmp
push
fidivrl
insb
pop
sub
aaa
xchg
mov
push
je
mov
filds
jle
lea
ljmp
aam
and
int
sbb
sbb
or
sub
iret
sbb
fdiv
jns
dec
loopne
test
add
pop
push
dec
inc
aas
jo
jecxz
inc
cmc
xchg
std
jecxz
sbb
fcmovnbe
or
addb
shrb
and
add
cmp
cmp
or
in
push
or
outsl
sbb
out
cs
subl
rclb
sub
and
stos
cmc
aad
mov
sub
subl
push
rcrl
filds
or
hlt
sub
fidivrs
push
clc
pushl
inc
dec
add
cmp
sub
cwtl
mov
pop
into
sbbb
lret
push
jecxz
ret
adc
xor
mov
or
pusha
xor
jae
clc
cmp
aaa
addl
stos
notl
das
push
xor
xor
sbb
fiadds
sbb
add
pop
inc
cmp
aad
cmp
add
stc
inc
pop
fisttpl
aaa
push
pusha
clc
hlt
or
mov
mov
sbb
enter
jb
adc
je
adc
add
je
jno
jg
push
shll
inc
inc
cmp
pop
jb
dec
pop
les
add
jo
push
sbb
sbb
call
shrl
je
cmp
in
xchg
icebp
jle
cwtl
cmp
daa
scas
mov
shll
push
leave
and
lods
out
pop
push
mov
or
fildl
dec
cmp
pushf
sbb
sahf
loopne
std
inc
test
popw
enter
lahf
in
mov
jp
adc
adc
push
movsb
loopne
idivl
into
jo
or
xor
push
arpl
jecxz
sbb
insl
mov
add
sub
rcr
nop
dec
xchg
sbb
or
push
notb
aas
maxps
xor
sub
cmp
ja
cmp
lock
arpl
pop
add
pop
and
mov
cmp
je
aaa
imul
lock
xchg
jo
aam
adc
repz
sbb
or
ss
jl
and
mov
jge
push
add
pop
jo
inc
aas
jg
adc
stc
cmpsb
mov
jb
sub
mov
mov
xor
hlt
jmp
ss
fwait
sub
sub
lock
dec
mov
in
jns
sbb
test
push
cmp
mov
sub
jp
iret
sahf
xchg
push
fs
add
dec
or
cmp
cld
push
mov
push
push
jl
or
push
xchg
lret
inc
outsl
pusha
adc
lahf
sub
cmpsb
push
and
jns
cmp
sbb
xchg
cmp
dec
leave
leave
mov
mov
xor
mov
outsl
mov
mov
dec
popa
add
cmp
mov
push
call
jg,pn
push
pop
dec
js
pop
rorl
loope
lahf
jns
add
adc
sub
lds
adc
adc
push
add
loopne
mov
dec
adc
cmp
adc
xorb
rclb
jmp
add
fwait
inc
pop
out
pop
lock
or
inc
add
or
add
test
repz
pop
and
call
mov
inc
or
nop
fs
lea
pushf
lock
ret
dec
cs
daa
enter
pop
inc
sbb
dec
jmp
add
cmp
fwait
cli
dec
sbb
stos
jns
fldl
cmp
mov
js
or
jne
cmpb
mov
push
fiaddl
xchg
or
fidivrs
pop
add
cwtl
leave
repnz
daa
sbb
mov
mov
push
es
sub
imul
loopne
add
push
dec
mov
lret
shl
lods
dec
dec
out
sbb
add
int3
loope
aas
pop
push
push
jle
aaa
cmp
js
sub
test
jmp
aaa
lock
shll
dec
sub
sub
cmp
je
xor
je
mov
lock
cmp
jl
lds
insb
push
pop
pop
mull
add
mov
adc
mov
xchg
jmp
insb
add
pop
cld
cmp
popf
push
pop
push
je
lock
pusha
imul
aaa
shll
add
mov
pop
fs
jge
aad
jge
cmpsl
push
jne
jmp
xchg
pop
sub
fcomi
nop
cmp
bound
pop
repz
mov
pop
cwtl
mov
fcmovnu
jbe
outsl
popf
fsubl
xor
adc
imul
push
inc
mov
mov
and
jl
mov
cmp
aad
pop
jnp
out
lods
adc
mov
jmp
testb
pop
lea
sti
ljmp
cmp
add
movsbl
movb
add
mov
movsb
lar
sarb
popf
ljmp
jmp
jns
icebp
inc
adc
inc
cmpb
je
repnz
repnz
push
cld
ficoms
lea
lcall
lahf
andb
push
xor
cmp
out
sbb
outsl
dec
push
and
pusha
lock
pop
cld
xchg
push
testl
mov
lret
hlt
pop
sub
fistpll
and
inc
jne
push
adc
cmp
adcb
inc
sahf
pushf
nop
xchg
test
jge
sub
add
out
in
mov
push
stc
push
sbb
xchg
int
lods
dec
add
mov
sub
popf
add
jae
pop
cmp
idiv
dec
dec
jne
mov
push
arpl
pop
push
mov
into
push
or
or
mov
movswl
lret
jne
push
push
pop
and
jne
jge
inc
subl
and
cmc
test
sub
mov
roll
dec
mov
push
rolb
xor
shlb
ret
inc
add
cmp
mov
push
mov
pusha
mov
lea
push
cmp
cmp
leave
orb
loope
xor
or
fs
fcoms
divps
mov
cmp
je
xchg
pop
nop
adc
add
sub
xor
add
dec
mov
lret
jp
inc
lret
lock
test
pop
jle
in
add
add
out
cmp
and
jnp
stc
xchg
cld
cld
fstps
rcl
xchg
mov
adc
je
xor
int3
xor
shrb
jb
dec
loope
clc
scas
cltd
cmpsl
pop
addb
mov
mov
xor
pusha
jmp
xor
lret
sbb
mov
imul
ds
add
loope
cmpsl
pop
push
inc
xchg
test
xor
mov
xchg
sbb
xor
pop
es
and
sub
dec
jl
hlt
and
rclb
lahf
and
dec
add
xor
adc
or
inc
out
add
xor
lea
in
ret
mov
nop
pusha
xchg
add
addl
lahf
cwtl
add
add
push
push
cmp
add
mov
xchg
cmp
mov
sbb
mov
movsb
mov
or
stc
pop
adc
inc
or
or
mov
clc
clc
movsl
fmulp
jnp
int
addb
js
pop
cmp
pop
test
and
adc
subb
mov
jl
inc
xor
rol
pop
repnz
jl
mov
push
xchg
push
bound
je
and
dec
add
push
cmp
scas
mov
add
mov
or
adc
dec
pop
dec
fimull
jle
sub
je
aad
in
rorl
mov
shrl
leave
rolb
add
fists
cmp
cmp
lds
nop
rorb
dec
pop
sub
je
mov
cmp
add
enter
cmc
push
mov
loope
jo
sbb
mov
push
or
mov
fbstp
xor
imul
mov
pop
and
mov
push
inc
add
cs
sti
add
add
in
dec
adc
jns
or
inc
mov
adc
pop
nop
xor
push
repnz
sti
pop
in
nop
pop
dec
test
aam
xor
lea
add
add
and
aas
add
cmp
fadds
test
mov
pop
sbb
test
jne
jns
or
std
mov
inc
mov
xchg
lds
cmp
pop
xlat
mov
pop
mov
cmp
fmulp
push
pop
jo
push
add
or
or
pusha
mov
sbb
lock
push
mov
add
pop
or
sub
jno
adc
call
sbb
pop
sbb
push
aad
cmp
add
xor
outsl
add
jnp
sbbl
dec
pushl
sbb
insl
std
push
or
test
jne
push
push
jbe
fisubrs
sub
sub
push
std
ret
push
sbb
dec
cmp
out
add
outsl
loopne
xor
fnstcw
clc
daa
push
dec
xchg
pop
push
mov
jmp
roll
adc
stos
jg
jne
or
popf
sub
test
cmp
stc
iret
sahf
jo
mov
jge
push
lods
push
jge
and
insb
xchg
divb
fmuls
and
or
ja
fmull
push
push
adc
mov
and
push
orl
inc
add
loop
sub
cwtl
std
mov
cmpb
jl
or
jle
push
loope
push
jns
pushf
mov
loope
insb
inc
jle
sbb
inc
cmpsb
icebp
fucomp
adc
and
push
sub
sti
sub
add
shl
xchg
mov
andl
xchg
adc
loope
repnz
sub
pushf
and
test
mov
andb
inc
push
out
add
or
lret
push
decl
roll
or
xor
std
in
adc
inc
cs
in
mov
cltd
dec
hlt
test
inc
pusha
mov
repz
inc
cwtl
cmp
mov
daa
movsb
adc
dec
sub
sbb
xor
xchg
mov
bound
cs
std
repnz
pusha
sub
dec
mov
leave
repz
push
leave
repz
push
repnz
clc
add
inc
or
inc
xchg
sub
and
inc
sub
xchg
cmp
and
push
cmp
and
push
cmp
and
push
cmp
and
push
cmp
and
mov
mov
sub
dec
cld
lds
add
sub
repz
push
xor
cmp
dec
dec
sbb
enter
push
pop
push
iret
push
adc
repz
nop
sub
dec
cwtl
enter
enter
mov
jl
inc
es
sbb
or
pop
enter
inc
inc
cmpsl
enter
dec
xchg
je
test
ret
nop
pushf
add
sbb
add
out
sub
sub
cmove
or
mov
adc
fdivr
inc
cmp
xor
inc
jecxz,pn
add
inc
cltd
pop
inc
cs
fwait
inc
pusha
xchg
pop
mov
inc
sar
enter
pop
in
test
mov
xchg
or
cs
adc
xor
repz
push
inc
cmp
inc
nop
xchg
or
mov
mov
repnz
cld
int3
sbb
mov
mov
sbb
xchg
or
sbb
and
jne
mov
pop
adc
lods
add
std
or
in
inc
push
mov
jge
cmp
lea
pusha
mov
push
pop
rcrb
ljmp
inc
add
aam
mov
adc
insb
test
add
pop
or
add
sub
test
mov
mov
in
test
pop
cmp
sbb
and
cmp
jle
repnz
mov
repnz
nop
and
movsb
cmp
js
and
int3
jne
lcall
jp
sbb
popf
pusha
lret
inc
in
jo
mov
out
hlt
jge
adc
es
push
repz
xor
ja
adc
icebp
cmp
xchg
cmp
mov
inc
add
enter
in
xor
mov
enter
nop
sbbl
pop
sbb
inc
push
xor
cmp
or
xor
jb
subl
or
jb
inc
imul
enter
xor
or
in
rolb
cs
movsb
dec
lea
mov
leave
or
in
sar
and
lock
data16
dec
fs
or
push
or
daa
das
cmc
das
test
cmp
test
outsl
add
cs
or
or
pushf
mov
xor
in
test
sub
nop
inc
cwtl
mov
pop
jb
inc
mov
es
or
push
inc
push
mov
and
jb
shrb
test
cwtl
adc
sub
test
add
sub
add
mov
or
ds
xchg
stc
pop
scas
dec
mov
test
inc
pushf
mov
pop
inc
cmp
pop
xchg
sbb
adc
rcl
add
jo
dec
inc
xchg
pushw
enter
cmp
adc
inc
push
repnz
test
int3
cld
sub
subb
std
in
pushf
in
inc
adc
cmp
dec
add
nop
pop
in
js
outsl
mov
push
inc
jle
test
out
and
adc
mov
adc
insb
fs
xchg
sub
jl
repnz
cmp
insb
adc
enter
jo
jb
cs
adc
test
adc
jmp
dec
lds
add
dec
adc
mov
add
xchg
or
sbb
inc
push
leave
sar
int3
cmpsb
sar
mov
and
xor
mov
adc
push
jno
cwtl
inc
adc
pusha
adc
loop
cmp
adc
call
std
je
sub
pushf
add
imul
push
dec
loop
xor
pop
push
add
lods
movswl
push
add
push
push
xchg
cmpsl
or
test
imul
ficoms
mov
pop
pop
jmp
mov
adc
dec
push
insb
dec
push
loopne
sbb
adc
rcrl
adc
outsl
sbb
movb
jmp
inc
sub
ss
xor
push
mov
dec
push
mov
or
cwtl
nop
push
ja
inc
cmp
push
add
push
addr16
mov
push
loopne
sub
pop
adc
cmp
aaa
sbb
inc
push
enter
adc
ret
xchg
sbbb
mov
xchg
pop
sbb
and
mov
mov
daa
lock
insb
je
mov
addb
push
add
dec
mov
mov
jns
dec
imul
call
xor
jge
mov
or
lock
aad
or
mov
and
jecxz
inc
mov
bound
sub
sahf
pusha
adc
inc
aad
sub
orl
jmp
stc
enter
adc
bound
inc
enter
cmp
and
sbbl
xor
test
sub
pop
pushf
lcall
fcoms
jb
or
mov
pushf
sub
sbb
inc
add
pop
enter
pusha
addr16
push
xchg
inc
cs
lock
flds
mov
leave
or
in
rorb
sbbl
cmp
enter
sbb
xchg
pop
xor
je
and
mov
xor
test
addps
push
fcomps
in
push
int3
insl
aam
jb
or
sbb
mov
xor
mov
movsb
jns
push
jb
xchg
adc
sub
jb
inc
fstl
and
sbbl
scas
cwtl
or
jns
popf
adc
or
adc
mov
xchg
pop
jb
adc
mov
push
inc
dec
dec
enter
or
in
jl
or
inc
push
mov
mov
jb
mov
lods
mov
xchg
addr16
sbb
and
sub
andl
flds
sub
xor
test
xor
mov
add
inc
pop
les
pop
and
nop
fs
and
fs
andl
push
add
sub
cmp
test
psubw
sbb
dec
pusha
xchg
outsb
xchg
push
lret
mov
loopne
inc
add
push
inc
bound
mov
dec
sarl
inc
test
pop
sub
lock
xchg
add
inc
nop
mov
sub
inc
sbb
test
xor
sub
in
dec
sub
mov
cmpsl
jo
mov
mov
add
fsub
sbb
add
adc
xlat
loop
adc
push
pop
mov
add
scas
xor
les
mov
dec
loope
inc
sub
adc
mov
enter
aam
mov
adc
lahf
in
add
push
push
ret
xor
push
add
add
mov
or
out
loope,pt
ficomps
leave
popa
dec
lcall
jo
jecxz
cld
sub
popa
and
loop
fisubl
cmp
loop
mov
xor
scas
mov
jo
sub
push
sub
cmp
inc
or
js
cmp
dec
push
or
mov
data16
or
insb
xchg
ret
cmc
mov
mov
adc
enter
pusha
and
or
out
mov
loope
notb
pop
hlt
pop
je
xor
sbb
xchg
xor
sub
ret
movsl
sub
jo
jnp
adc
xor
cmp
addr16
add
das
jle
or
fdiv
push
xlat
mov
nop
std
out
pusha
xor
cmp
push
or
lahf
and
imul
imul
cmc
fdivrl
and
js
pusha
adc
or
test
in
mov
pusha
cld
and
lds
mov
fwait
xchg
repz
jo
pop
cmc
and
je
inc
push
lcall
jmp
lods
pop
dec
cli
movsb
repnz
stc
add
test
xchg
push
lahf
inc
mov
adc
xor
xchg
mov
nop
sbb
and
cmp
insb
int3
ja
sbb
cwtl
fwait
rcr
std
cs
pop
mov
xor
mov
pop
push
aas
dec
insb
push
xchg
mov
add
cmp
cmpb
cli
into
dec
push
add
adc
insb
or
inc
push
add
pusha
js
push
daa
cli
cmp
cwtl
ljmp
jne
pushf
jmp
mov
lods
xchg
popa
insb
cmp
in
popa
cmp
insl
wrmsr
nop
cmp
cmp
add
jle
or
pop
xchg
pop
jle
inc
cmp
cmpsb
dec
fcomps
iret
and
sbb
add
xchg
adc
fcompl
adc
mov
fisubrs
and
jae
push
pop
adc
shll
scas
jnp
lea
sbb
jno
in
out
int3
jbe
orl
mov
loop
loop
push
outsl
add
sbb
push
xlat
lods
leave
adc
and
pop
out
cmp
jne
jmp
sti
mov
imul
sbb
jns
dec
ret
sahf
xor
cmp
xor
jmp
cmpb
adc
push
mov
adc
jb
aaa
stc
js
clc
cmpl
add
push
pusha
add
adc
negb
mov
mov
or
or
sub
test
sub
add
adc
fstpl
or
faddp
sub
sbb
lds
add
add
push
cmovo
clc
dec
mov
pushf
sub
clc
jbe
aaa
or
add
push
cmp
inc
push
addr16
dec
push
cmp
jl
lcall
push
popf
xor
cwtl
gs
pop
inc
adc
inc
in
sbb
shlb
push
push
xor
push
xor
dec
inc
sub
in
ljmp
or
cmpb
jne
push
jmp
push
mov
mov
je
fs
jl
sbb
sti
lea
xor
enter
inc
xchg
aad
mov
or
sti
mov
sub
push
adc
sti
pop
in
push
sbb
or
cmc
cmp
fnstenv
adc
mov
inc
in
mov
leave
adc
add
das
mov
mov
xor
and
push
adc
xchg
mov
adc
sbb
cmp
pop
cmp
pusha
test
es
mov
lret
jae,pn
jbe
pop
movsl
negl
insl
fcoml
dec
jne
sbb
nop
sbbl
ds
stc
adc
testl
cmp
push
in
cli
add
xchg
add
push
enter
adc
or
push
dec
mov
sub
mov
aad
aas
insb
cmp
sbb
mov
mov
and
fstpl
adc
cld
add
cmp
add
cld
cld
push
stc
jns
je
movsl
dec
sbb
leave
daa
das
sar
mov
xor
sub
sti
cmp
add
adc
out
sbb
mov
mul
and
ja
xchg
mov
xchg
inc
cmp
cmp
loope
and
add
mov
repnz
in
xor
and
pop
inc
and
out
les
and
inc
out
ret
test
lock
and
lds
sub
std
jmp
fdiv
push
leave
push
or
add
jno
push
cmp
cmp
push
in
in
addr16
push
pop
cs
push
push
cmpl
test
inc
ds
arpl
lock
lock
lds
daa
hlt
sahf
mov
jns
lock
sbb
pop
in
lods
adc
repnz
fs
lock
fdiv
dec
repnz
dec
inc
sbb
bnd
repz
imul
or
hlt
mov
fidivl
push
inc
out
xor
cmp
push
sti
lods
out
pop
jo
sahf
mov
outsl
test
js
in
ret
xor
cmp
out
in
sub
xor
cltd
or
sbb
sbb
shll
push
imul
and
loop
jecxz
jecxz
sbb
inc
fs
dec
or
or
in
inc
pop
ret
push
pushf
mov
in
push
dec
sahf
fsub
push
or
adc
pop
loopne
mov
loop
dec
push
enter
loop
and
sbbl
jns
or
bound
cmp
mov
jo
ljmp
adc
cmp
xor
inc
insl
addl
push
ret
test
pop
imul
sbb
pop
sub
jmp
jae
mov
js
cmc
inc
push
enter
dec
loopne
jmp
xchg
cld
mov
clc
jl
out
jmp
js
dec
xchg
adc
xchg
scas
jg
arpl
pop
nop
int
div
clc
cmpsb
adc
rol
add
mov
sbb
dec
pop
nop
iret
in
adc
mov
cmp
mov
lcall
lret
roll
xchg
cmp
sbb
in
sbb
jae
xor
stos
movsl
jb
and
xchg
mov
or
mov
ljmp
mov
ret
movsb
in
xor
data16
cltd
in
xchg
sbb
adc
jns
push
cmp
fsubrl
cmpsl
jmp
mov
push
jle
push
repnz
adc
sub
movsl
in
sbb
sahf
inc
pop
mov
repz
out
out
inc
sbb
sub
adc
aad
arpl
aaa
scas
pusha
push
adc
mov
rolb
sbb
and
add
xchg
sbb
clc
push
sub
dec
sub
xchg
inc
or
xlat
dec
mov
mov
inc
pop
addr16
ficoms
xor
xchg
scas
add
mov
dec
dec
sub
mov
dec
in
jl
aas
lret
or
add
cmpsb
jecxz
sbb
xchg
or
clc
mov
popa
xor
mov
pop
mov
add
xlat
adcl
mov
jbe
repnz
shlb
dec
pushf
inc
dec
shl
xchg
shrb
popa
stc
adc
mov
mov
push
add
sbb
call
lfs
std
call
mov
and
out
test
cwtl
pop
cmp
pop
mov
and
add
inc
push
xchg
pop
addl
and
pop
sbb
clc
dec
sbb
mov
test
add
or
and
pusha
pop
push
sbb
xchg
popa
adcb
out
rcl
sub
out
int
add
ret
test
push
adc
pop
leave
xor
adc
or
dec
push
lods
jmp
push
cmpsb
in
mov
andl
in
pop
pop
shrb
xor
shr
std
and
cmp
jecxz
add
jmp
push
xchg
dec
inc
push
or
pusha
add
sbb
leave
mov
adc
loope
push
iret
aad
mov
rcr
sub
push
inc
inc
sbb
sub
fldenv
xor
daa
inc
ret
arpl
dec
mov
jecxz
out
push
inc
fisubrs
push
mov
lcall
cmp
xchg
cmp
sbb
sub
or
je
push
push
pop
clc
jl
lods
aad
aad
sub
fneni(8087
out
xchg
push
test
lods
sbb
test
sub
push
inc
iret
sbb
and
sbb
push
dec
test
and
sti
xorb
pop
inc
out
mov
push
push
scas
jmp
sub
cwtl
adc
jmp
adc
xor
xor
add
sub
and
gs
in
pop
cwtl
mov
sub
stos
loopne
mov
insb
adc
adc
je
out
stos
mov
sub
gs
gs
or
enter
jg
push
roll
jmp
divl
leave
popa
push
adc
aas
adcb
imul
pushf
cmp
dec
ss
icebp
ja
jl
fisttps
push
movsb
or
adc
jo
sbb
je
mov
xchg
mov
test
repnz
rolb
in
or
pop
adc
adc
adc
js
cmpsb
in
test
fimull
jbe
add
std
je
leave
repnz
je
jmp
mov
push
dec
xchg
add
notl
cmp
stos
or
adc
in
popa
sbb
inc
push
pop
test
js
or
dec
movsl
je
push
mov
pop
dec
sbb
test
mov
mov
inc
push
lret
cmp
in
and
leave
lods
unpcklps
jbe
addb
loopne
mov
jecxz
pop
rorl
xor
push
leave
add
cmpsb
dec
adc
punpcklwd
in
imul
ret
cmpsb
pop
pop
addr16
imul
xchg
out
inc
push
movsl
pop
push
fs
push
mov
xchg
mov
or
mov
mov
add
pop
sub
or
jecxz
inc
test
xor
mov
dec
dec
and
adc
mov
add
test
cmpb
mov
rorb
cmp
and
jbe
or
jae
jmp
and
call
mov
sarb
xchg
xor
sub
push
dec
sbb
orb
push
inc
inc
adc
stos
dec
lahf
mov
stc
mov
inc
ret
lock
or
push
xchg
and
push
das
cmp
je
rcl
enter
cmp
push
jge
aam
loope
or
inc
pushf
adc
xchg
xor
mov
push
sub
or
push
push
cmp
shll
mov
push
dec
scas
jne
fildl
push
or
aas
aas
xor
or
rolb
push
loopne
add
jge
les
pop
xor
push
ror
dec
push
push
xchg
int3
or
stos
push
xor
pop
outsb
push
rol
push
jns
test
adc
movsl
sbb
dec
or
repnz
leave
or
xchg
or
xor
cmpsl
nop
add
enter
push
daa
mov
mov
fisttpll
inc
mov
inc
cmpsl
adc
inc
lret
fcoms
hlt
add
mov
cwtl
xor
mov
sub
lods
add
push
out
pop
sub
xor
jp
sti
jno
xchg
adc
daa
test
jl
test
or
pushf
dec
mov
in
inc
ja
test
bound
insb
fmuls
pop
xor
sub
data16
inc
dec
inc
ss
in
fisubrs
fidivrs
add
outsl
inc
out
inc
lret
sub
xor
cmp
int3
or
das
pop
paddusb
xlat
xor
or
mov
jno
mov
or
mov
jg
mov
lret
cmp
jne
aaa
daa
cmp
dec
mov
pop
mov
mov
dec
cltd
idivl
add
or
push
lock
repnz
pop
mov
push
xchg
outsl
sbb
imul
sbb
ss
dec
add
mov
pop
lea
push
ja
push
je
xchg
rol
cmp
out
cmp
push
test
pop
test
enter
rorb
or
xchg
inc
or
jno
xor
test
pop
orb
notl
rorb
std
add
shll
pop
mov
pop
and
adc
push
mov
inc
push
cmpl
orb
xor
push
push
mov
arpl
dec
jg
pop
jne
or
push
xor
adc
push
out
inc
xchg
cmc
insb
xor
push
clc
push
dec
pop
mov
sbb
jp
or
jge
mov
xchg
subl
and
and
repz
add
leave
imul
inc
or
sub
bsf
adc
test
xorps
lea
and
xchg
das
aaa
movsb
add
iret
ret
jp
in
fstps
pop
mov
in
push
add
popf
nop
in
add
xchg
pushl
ret
sub
adc
sub
je
add
inc
cmp
push
or
out
icebp
mov
or
or
pop
shrb
adc
scas
push
rorb
add
adc
sbb
sub
cmc
push
cmpsb
dec
pop
ljmp
dec
insb
ja
or
inc
jle
xlat
icebp
fdiv
and
in
push
out
add
out
or
or
bnd
xchg
mov
stos
imul
xchg
cmp
xchg
inc
or
hlt
pop
clc
repnz
sbb
scas
rorb
inc
shrl
hlt
inc
inc
fnstcw
jb
jb
cmp
pop
pop
hlt
imul
add
pushf
repz
jl
sbb
xchg
pop
cmc
mov
inc
sbb
cwtl
repz
pop
sub
xchg
mov
push
rep
pusha
dec
push
in
cwtl
repz
and
fs
pusha
cmc
aam
repnz
jo
fsubrl
mov
mov
inc
xchg
fdivrp
lods
or
retw
mov
outsl
pop
dec
ret
cmp
mov
adc
sbb
rorb
out
add
mov
or
push
outsl
xor
and
push
add
outsb
jmp
sub
test
sub
das
in
push
rorb
pop
dec
mov
xor
push
dec
jmp
insl
push
add
sub
xchg
scas
lods
mov
and
out
sub
or
push
test
or
in
adcb
jae
out
sub
aam
das
inc
bound
call
dec
in
sub
loopne
daa
push
ss
rol
ret
negb
int3
cmp
lods
sarb
sbb
inc
inc
or
repnz
cld
mov
sub
outsl
mov
lret
sbb
sbb
pop
add
xchg
test
std
xor
pusha
add
sbb
and
adc
std
fldl
daa
enter
cmp
popa
or
pop
mov
es
sti
sahf
negl
leave
jmp
sub
sbb
adc
pop
or
jns
dec
xor
pop
sub
jno
sbb
sbb
adc
lods
stos
popf
push
int3
mov
sbb
dec
mov
xor
xor
sbb
ret
mov
dec
stos
cmp
int
dec
insl
fwait
xchg
pop
orb
rolb
inc
mov
adc
add
push
daa
jno
imulb
gs
cmpb
mov
mov
ret
xlat
adc
and
or
lcall
cmp
xor
adc
push
xlat
rolb
inc
mov
inc
je
xor
add
int
rolb
cld
xor
add
nop
jns
out
add
push
test
cld
jns
push
ret
jl
cwtl
or
sub
sub
push
jne
and
and
inc
mov
and
inc
iret
rol
xchg
and
add
push
dec
movsb
cmp
add
pop
call
bound
mov
rolb
andl
xor
inc
fistpll
imul
push
daa
jne
adc
in
sbb
mov
dec
mov
lea
cmc
sarb
sub
lcall
cs
outsl
push
jmp
cmc
inc
cltd
jecxz
push
nop
mov
roll
lea
sbb
adc
xor
dec
enter
mov
incl
adc
xchg
in
mov
jmp
xchg
or
mov
das
lea
bound
cld
in
sbb
shlb
cmp
in
sbb
push
cmp
mov
loope
jnp
loop
or
mov
pop
sbb
sbb
inc
repnz
jmp
repnz
fisttpll
mov
xchg
inc
cmc
push
push
aad
cmp
das
add
les
mov
pop
lea
adc
sbb
arpl
mov
mov
xchg
shlb
fs
lods
or
in
mov
shlb
jge
xchg
push
or
add
inc
dec
movsl
sbb
cld
dec
or
dec
stos
push
leave
mov
pushw
pop
inc
jbe
pop
mov
daa
sbb
cld
cmpsl
push
mov
movsl
mov
out
jmp
lea
loopne
lock
inc
sbb
cs
std
fs
push
xchg
mov
inc
push
test
lcall
roll
sbb
sbb
nop
bound
push
xor
add
decb
les
fldl
add
int
rcrb
cs
jmp
popf
jne
cmpsb
mov
fstl
push
cltd
push
jg
pusha
or
ljmp
pop
pop
add
pop
adc
inc
sbb
mov
sti
xor
mov
fldl
mov
repnz
add
in
push
or
and
les
cwtl
lcall
dec
leave
ret
pop
dec
add
nop
lret
dec
push
pop
and
xor
stos
push
lods
repnz
push
xor
mov
push
push
push
inc
add
xchg
loope
add
cld
adc
mov
test
xor
mov
js
dec
xchg
adc
add
sahf
roll
shrb
jl
dec
adc
xor
iret
jne
bound
mov
fmuls
sbb
cwtl
and
xor
test
adc
mov
xchg
mov
mov
pusha
cmp
sub
aas
loopne
inc
add
cmp
adc
in
sbb
test
jmp
shll
xor
in
xor
in
or
cmp
rclb
mov
shlb
adc
push
xor
push
dec
sbb
imul
sbb
jne
pop
rorb
out
push
dec
call
pop
mov
or
aas
add
sub
jmp
and
fcmovb
in
mov
lret
daa
add
test
pop
bound
dec
dec
push
in
xor
leave
add
and
or
imul
mov
adc
mov
mov
xor
lock
dec
dec
inc
inc
sub
in
incl
pop
lcall
add
or
or
jo
stos
arpl
in
push
mov
cmpsl
push
xchg
je
pop
mov
push
sub
pop
orb
mov
in
cmp
adc
inc
lret
inc
icebp
nop
sub
out
rcll
and
aaa
test
scas
sbb
mov
pop
sub
jo
pusha
lock
mov
sbb
into
mov
sbb
loop
out
mov
lcall
mov
pop
fwait
je
jge
je
sbb
add
in
adc
and
xchg
fs
xor
xchg
push
and
test
jo
cmp
clc
pusha
xor
xor
add
inc
push
fwait
dec
jb
push
shlb
sti
xchg
nop
in
pop
jg
in
adc
and
cmc
insb
loope
data16
or
and
xor
jne
sub
lahf
xchg
sbb
mov
or
or
add
dec
add
inc
out
mov
inc
mov
cmp
ret
inc
jne
inc
inc
and
jg
push
int
xchg
das
enter
mov
cmpsl
xor
icebp
xor
fcomp
ljmp
cltd
xor
xchg
mov
test
mov
int
mov
sub
cli
push
cld
out
aaa
flds
aam
pop
push
jno
push
movsl
mov
jb
and
push
jnp
mov
mov
inc
jge
xchg
clc
sub
adc
jnp
sub
sti
hlt
pop
aas
movsb
rcl
or
jae
call
adc
push
pop
call
je
mov
xchg
add
mov
dec
lcall
daa
test
jmp
add
pop
push
push
inc
les
hlt
mov
int3
push
mov
and
cmp
je
lcall
scas
add
movsl
cs
inc
xchg
or
push
fistpll
fsubs
je
xlat
jae
paddq
and
call
sub
mov
arpl
pop
mov
jge
clc
xchg
push
nop
jns
lock
cmp
xchg
in
fwait
inc
decl
cld
loope
xchg
mov
aam
cmp
je
js
mov
loopne
out
jmp
lods
fcompl
andb
xchg
jmp
add
push
mov
insb
mov
adcb
mov
cmp
push
fnstcw
in
and
outsb
in
pusha
dec
and
test
sub
inc
sbb
inc
sbb
enter
pop
sbb
popa
inc
in
sbbb
adc
and
mov
test
push
cltd
sbb
and
popl
xor
add
push
ja
insb
lds
js
and
xchg
dec
ss
mov
or
xchg
aad
push
in
in
into
loope
pop
dec
dec
jae
push
add
jno
lods
ss
add
push
jg
aas
adc
arpl
xchg
dec
and
add
sbb
push
test
jne
mov
mov
inc
decl
popa
mov
adc
and
and
out
arpl
lock
jo
adc
insb
stos
jmp
sub
fildll
dec
pop
mov
sarb
push
pop
mov
mov
and
mov
aas
pop
push
push
sbb
jb
pop
cmp
call
aaa
and
jmp
mov
hlt
push
filds
push
push
jno,pn
mov
pop
aas
lds
and
subl
push
sbb
mov
daa
mov
sbb
push
sub
daa
iret
pusha
push
xor
cmp
or
movsl
jmp
xchg
ds
xor
add
les
jp
sti
cmpsl
sbb
and
inc
mov
pop
outsb
xchg
dec
pop
fsubl
pop
push
sbb
enter
and
inc
sub
cmp
mov
dec
or
int3
xor
sub
cmp
mov
sbb
jno
xor
add
inc
pusha
addr16
sub
fdivl
orb
xor
inc
ds
popa
aam
pop
sbb
xlat
or
into
rclb
punpckhwd
jge
or
jo
pop
gs
nop
push
or
or
ss
aam
daa
in
les
lods
mov
xor
pop
cltd
and
jo
and
inc
cmp
fisubrl
mov
add
mov
xor
pop
jns
cli
jg
xchg
int
pop
inc
cmp
jl
movb
and
mov
js
sbb
outsb
cld
push
push
dec
cli
lock
add
mov
add
mov
mov
cmp
jl
push
popa
fisubl
pop
jnp
call
in
js
inc
push
jecxz
and
ret
sbb
or
ja
imul
sbb
es
shrl
xor
movsl
dec
add
mov
aaa
ret
mov
fbld
pop
inc
outsl
hlt
pop
cmpl
pop
aas
or
int
jl
lock
cmp
jne
mov
insl
jmp
cmp
jne
mov
jne
mov
mov
jl
jne
jp
dec
sbb
aaa
dec
dec
adc
mov
push
add
adc
jl
iret
cmpsl
mov
jecxz
dec
sbb
outsl
add
push
mov
jbe
add
mov
cltd
inc
rcrb
or
mov
jae
push
jmp
pushf
sbb
and
mov
insb
and
mov
mov
out
stos
and
pop
orl
push
in
out
stos
jl
adc
xchg
and
std
push
adc
in
je
lea
into
test
mov
add
sub
sub
test
sbb
or
mov
xchg
fs
cmp
add
call
xlat
inc
pop
xchg
adc
repz
loope
cmpsl
mov
add
mov
sbb
test
test
movsl
sahf
jns
xchg
add
inc
std
add
sbb
xchg
je
jae
loopne
and
dec
add
add
rorb
je
xchg
dec
xchg
pop
adc
pop
shlb
push
add
sub
insb
movsb
or
or
xchg
and
stos
xchg
repz
movl
mov
cmp
repz
ret
or
cmp
les
js
cmp
push
inc
inc
xchg
mov
movl
add
cmp
je
ja
ret
pushl
aaa
and
jb
mov
xchg
dec
mov
jl
and
fidivrs
push
mov
inc
and
dec
shrb
sti
js
imul
inc
inc
cmp
addl
sub
push
dec
loopne
cli
cmp
rcl
cmpsl
movsb
pop
leave
xchg
rclb
inc
and
pop
and
enter
es
dec
xchg
push
stc
mov
cld
daa
cmp
mov
pop
in
or
fadd
fs
or
dec
dec
adc
push
ret
jne
lahf
add
rcr
xchg
sub
jo
mul
or
pushf
clc
push
or
mov
in
mov
loop
aas
testb
test
or
dec
mov
xor
mov
jnp
pop
in
add
arpl
ret
add
adc
xor
jae
pop
test
out
test
and
sbb
inc
bound
int3
mov
sub
cmp
pop
jb
inc
inc
or
repnz
notl
cmc
mov
les
or
cld
jg
into
sbb
cmpl
pop
jne
adc
popa
push
add
shrl
mov
pop
push
sbb
and
sub
inc
cmp
adc
cld
pop
cld
jbe
xor
flds
jg
sub
and
sbb
sbb
jo
pop
stos
call
inc
sahf
cmpsb
add
nop
mov
push
pop
push
push
xor
inc
sub
push
in
test
js
pop
inc
push
nop
dec
loopne
rcll
adcb
leave
movsb
mov
or
dec
xchg
and
insb
shrl
jne
gs
inc
cmpl
cmp
mov
enter
jae
mov
std
test
dec
xor
sub
adc
or
mov
outsl
dec
aas
notb
sti
and
add
mov
fcom
or
jns
or
and
loopne
push
inc
add
aad
xchg
jp
dec
arpl
loopne
adc
dec
cmpsb
fdiv
dec
add
inc
shrl
mov
mov
dec
pop
sbb
cmp
cmp
adc
xor
ss
fisubrl
push
repnz
adc
push
push
dec
enter
jl
mov
repnz
movsb
pop
rorb
adc
imul
mov
inc
popl
cmp
sub
add
fsubr
mov
popa
imul
adc
sub
add
push
push
jbe
mov
sub
mov
pop
xchg
out
or
or
or
adc
inc
mov
je
dec
je
add
frstor
sub
xlat
or
mov
push
jmp
aad
jbe
bound
or
xor
xor
adc
test
rcl
insl
call
adc
andl
cmp
or
sub
daa
xchg
dec
shrb
pop
push
mov
mov
push
push
push
dec
cmp
int
jge
lds
pop
and
mov
flds
add
loopne
fldl
and
jne
out
sub
xchg
and
cs
pusha
push
fwait
pop
call
ret
jle
jmp
xlat
push
cmpl
aas
push
add
fs
push
add
cld
add
ja
loopne
or
fists
test
jmp
xor
iret
or
ljmp
fwait
test
jecxz
push
jecxz
mov
test
fadds
mov
popf
bound
mov
sarb
or
aam
add
addb
in
push
fldl
mov
adc
jmp
hlt
xor
inc
inc
cmp
dec
hlt
daa
dec
or
inc
mov
lods
mov
rorb
mov
rcrb
xor
cmp
jo
jmp
xor
cld
wbinvd
lea
xor
dec
pop
nop
pop
push
cmp
push
cwtl
jge
orl
jae
lds
jl
shll
jae
les
inc
inc
jmp
or
pop
mov
dec
outsl
push
aaa
aaa
das
add
cmpsl
cmpsl
mov
insl
or
fnsave
mov
pusha
sbb
je
add
ficompl
xchg
lods
call
rclb
cmp
insb
dec
sbb
mov
jmp
cmp
lods
pushl
push
je
cmp
repnz
fwait
pop
xchg
sub
data16
jne
mov
inc
insb
and
jg
xor
insl
pop
outsb
outsl
jo
jno
push
jmp
add
imul
xor
or
shll
sbb
push
or
cmpsb
imul
jbe
dec
jp
and
pop
sbbl
jmp
outsl
and
add
jge
xor
cmp
add
adc
jmp
add
push
into
cmpsl
pop
or
or
push
shll
loope
outsb
jg
imul
adc
sub
add
adc
test
addb
sub
popf
sbb
dec
cmp
dec
jnp
jb
sahf
adc
add
jns
push
aaa
adc
mov
jbe
mov
adc
mov
sub
push
adc
mov
pusha
call
in
add
imul
push
adc
add
inc
adc
testl
iret
dec
adc
push
xor
repz
mov
test
bound
stos
dec
stos
pop
push
lret
ljmp
ss
push
sub
ja
cmp
rorb
xor
test
orb
dec
adc
xor
outsl
or
mov
adc
hlt
xlat
nop
push
cmpsl
pop
lret
jne
inc
stos
add
stos
add
rclb
mov
or
shlb
inc
mov
movsb
lahf
jge
push
mov
mov
sbb
cmp
or
inc
cmove
add
lret
iret
adcb
xchg
pop
add
mov
test
imul
xor
xchg
fwait
or
mov
pop
fsin
ret
cmp
or
shlb
jbe
jbe
mov
or
cmp
and
test
cmp
inc
mov
pop
roll
jbe
push
or
lock
and
mov
adc
inc
icebp
adc
repnz
xor
jb
adc
sub
mov
sbb
add
cltd
or
insl
sbb
and
xchg
jns
add
push
dec
imul
das
adc
or
push
add
mov
sbb
das
enter
bound
movsb
push
arpl
mov
jo
push
rorb
test
mov
jge
xchg
popa
jecxz
lret
pop
push
and
and
adc
adc
adc
inc
mov
imul
xchg
fs
pushf
pop
push
mov
pop
je
ret
mov
enter
imul
decl
push
fdivl
xlat
lods
in
daa
mov
sar
mov
add
stos
subb
insb
mov
mov
and
or
mov
sti
test
adc
sti
hlt
sti
mov
loope
cmpb
add
jno
movsl
divb
mov
negl
je
int
push
pavgb
sub
das
mov
mov
mov
test
mov
push
sti
sub
stos
adc
adc
cmpsb
jbe
pop
mov
pushf
cmp
sbb
popa
ror
xor
test
xor
das
outsb
xchg
shll
jl
lock
push
pop
adc
enter
inc
int
or
sbb
arpl
cmp
ficoms
nop
mov
rcl
int
enter
add
mov
lods
and
xchg
loop
ss
pop
or
or
xchg
je
movl
jbe
insb
push
push
push
inc
ret
sbb
je
push
jl
adc
imul
popa
mov
js
inc
mov
sub
jbe
in
push
xchg
mov
adc
xchg
gs
out
test
in
add
and
adc
data16
stc
pushf
jo
lock
in
fisubrs
inc
sbb
pushl
popl
and
xchg
cwtl
add
lea
loopne
stc
adc
add
fs
cmp
xchg
repnz
dec
sbb
sbb
enter
push
mov
movb
fidivs
mov
push
movb
push
push
dec
pop
pop
sbb
inc
jp
cmp
inc
inc
add
sti
cmp
inc
add
out
inc
hlt
dec
mov
xor
sar
xchg
cmp
xor
insl
mov
or
cltd
and
inc
lea
aad
sahf
sub
add
xor
xor
dec
and
cmpsb
ficoms
repnz
andl
pop
pop
cs
lock
pop
sub
add
and
inc
cld
sbb
or
jae
mov
movsb
fdivrs
xchg
dec
push
int3
imul
push
mov
sbb
mov
fiadds
loopne
inc
jo
push
xchg
sub
push
inc
mov
sub
cld
add
add
lods
hlt
aad
mov
push
mov
cmp
sub
lahf
enter
div
xor
mull
test
sbb
xor
xor
mov
sbb
sbb
sti
add
dec
mov
jne
in
jne
adc
hlt
add
xor
push
cs
or
outsb
lahf
fisubl
adc
sbb
jne
cmpsb
cmp
add
or
pop
pop
out
icebp
xchg
pop
inc
js
inc
inc
pusha
push
loope
daa
push
pop
jg
cmp
jg
xor
push
sub
push
sbb
adc
aas
jl
test
jne
shll
cmp
ja
cmp
aas
jecxz
fs
aam
mov
adc
iret
xor
notl
add
repz
xor
ja
push
inc
inc
cmp
pushf
xor
dec
xor
and
iret
dec
repz
sbb
or
sub
outsl
cmp
add
adc
or
test
insb
loop
fwait
and
or
jne
xor
rorb
cs
push
sbb
lcall
insl
jns
mov
adc
pop
lea
fdivrl
pop
jne
sbb
nop
add
popf
sub
add
repz
sbb
je
xor
clc
and
pop
mov
xchg
insb
push
lods
mov
xor
and
adcb
sti
daa
lock
inc
push
mov
rcrb
sahf
std
or
lea
call
xchg
rcrb
pop
add
and
and
push
dec
dec
addr16
pop
mov
xor
mov
push
xor
push
and
adc
adc
test
sbb
sbb
xor
int
sti
pop
dec
mov
xor
dec
mov
add
movsl
sub
xorb
sbb
in
or
pusha
rorl
imul
cli
lea
or
scas
lret
jmp
pop
mov
pop
ficomps
popf
jo
sbb
mov
js
test
push
jne
xchg
aaa
jo
mov
loopne
in
pop
push
pop
cmpl
xor
int3
mov
lahf
pusha
push
add
es
xor
pop
ss
je
outsl
imul
jmp
push
xor
sbb
shlb
js
cmp
lods
loope
js
fldenv
xor
je
ret
or
push
int3
insb
rdtsc
jnp
cmpsl
movsb
out
add
xor
dec
test
dec
pushf
xor
cmc
aam
lods
scas
lock
cmp
ret
iret
arpl
mov
xlat
pop
cmp
mov
int3
or
mov
arpl
lds
jb
sbb
inc
mov
add
loopne
mov
push
mov
adc
popa
imul
xor
xchg
cmp
or
xor
pop
xor
xlat
jo
jmp
push
dec
dec
dec
in
mov
jo
cld
or
push
push
je
inc
data16
cmp
pop
shl
adc
pop
xchg
adc
loope
mov
sbb
cmpsl
mov
dec
push
negb
pop
fldcw
mov
imul
pop
int
popa
adc
xor
push
push
cmp
or
ret
jle
fldt
add
pop
aas
xor
enter
jmp
cmp
jno
sub
movsb
stc
imul
push
mov
imul
push
insb
imul
sbb
push
sbb
popf
jl
dec
adc
adc
cs
or
hlt
aam
dec
pop
scas
idivb
dec
pop
call
leave
adc
ja
mov
cmp
dec
jle
xor
inc
cwtl
fs
rorb
fdivr
sarb
mov
nop
sub
sbb
std
sbb
bound
sub
cmp
xlat
fs
mov
push
enter
cmp
inc
inc
cmc
xchg
sub
add
in
add
jge
or
fcompl
mov
push
sub
dec
loop
inc
jns
in
addl
sbbl
and
add
nop
pop
adcb
inc
hlt
clc
out
adc
and
or
nop
cmp
adc
movsb
fwait
lret
clc
xchg
mov
add
daa
push
fmull
gs
mov
or
les
push
or
sbb
mov
mov
xchg
scas
cli
cmpsl
cld
xor
loopne
sub
dec
push
xor
adc
sbb
mov
mov
mov
out
movsb
cmp
mov
pop
mov
fmul
insb
jmp
inc
in
sbb
jle
imul
test
inc
lret
inc
cs
lcall
iret
lods
fldenv
add
hlt
cli
cmc
or
and
dec
inc
leave
cmp
push
cmp
xor
dec
enter
sbb
mov
pop
pushf
dec
push
or
and
ficomps
xchg
add
lods
jnp
add
loope
mov
sahf
push
and
xor
fxch
jne
int
pop
dec
dec
popf
pop
out
sbb
add
pop
add
mov
sbb
add
and
sbbb
mov
div
and
dec
stos
add
add
dec
push
xchg
nop
mov
jns
cli
ficoms
lods
push
faddl
adc
in
in
lcall
add
lret
insl
push
inc
data16
sbb
jg
add
mov
nop
xor
lahf
incl
iret
jne
inc
xor
mov
shl
rorl
movzbl
shl
mov
or
add
wbinvd
push
sub
push
outsl
or
and
xchg
pop
test
dec
ret
lea
jnp
adc
push
out
test
push
xchg
dec
movsb
enter
rclb
add
xchg
mov
rcrl
mov
pusha
hlt
cmpsb
xlat
cmp
lods
xchg
lds
inc
xor
cmp
inc
fsubl
xor
into
add
dec
movswl
les
jle
out
jmp
push
mov
or
mull
nop
push
inc
lods
les
sbbb
sub
or
and
mov
int
movb
or
sbbb
adc
or
push
mov
loopne
inc
dec
ret
loopne
inc
cmp
or
mov
cmpsl
push
mov
jg
xchg
inc
and
xor
sub
out
pushw
sbb
pop
and
in
cmp
jle
xor
cld
imul
inc
or
fwait
cli
aaa
ret
aam
std
fwait
mov
sub
jns
aad
pushf
mov
aaa
xchg
mov
pop
outsl
pop
inc
in
imul
insb
or
fcmovnu
jnp
ss
pop
mov
test
mov
push
lds
popa
adc
les
dec
push
inc
outsl
loopne
push
lds
fdivs
mov
cmp
jne
push
mov
fcomps
or
je,pt
sbb
mov
mov
add
push
test
mov
xchg
jmp
cmp
mov
add
dec
jmp
jae
inc
pop
xor
inc
vpsubusb
je
inc
inc
inc
pop
ret
mov
pop
xchg
mov
and
push
andb
mov
sub
sbb
test
jae
leave
mov
xor
xor
stos
pop
xchg
xorb
push
xchg
xchg
mov
add
adc
xchg
xchg
call
pop
arpl
je
lock
mov
call
add
or
sbb
mov
pop
loope
mov
loop
jecxz
in
in
mov
call
xorl
lods
subb
adc
add
jmp
adc
or
fldl
stos
insl
mov
lods
jo
icebp
aam
icebp
add
sbbl
sbb
adcb
xchg
xor
sub
lock
leave
lock
pop
sti
adcb
sbb
stos
and
inc
imul
test
add
mov
mov
or
dec
pop
inc
popl
leave
add
enter
add
mov
jo
xchg
add
and
cld
aam
enter
xchg
pop
push
or
in
gs
cmp
and
inc
and
into
sub
ficompl
cmp
cs
mov
idivb
adc
xchg
sbb
add
adc
sbb
shrb
pop
lcall
pop
sub
popa
sub
cmp
mov
mov
jl
push
add
adc
bound
lock
sbb
dec
movzwl
cmp
and
cmp
jbe
nop
daa
jo
outsb
sub
xchg
mov
pop
push
daa
adc
mov
xchg
dec
mov
jmp
call
pop
push
mov
cmp
mov
cmpsb
push
push
in
shrl
rcrb
push
add
mov
sub
xor
faddl
leave
xor
pop
or
adc
sahf
or
adc
in
sahf
inc
jl
sbb
outsl
cwtl
xchg
ljmp
es
pushf
fnsave
gs
loope
push
hlt
jne
pushf
pop
add
test
xor
lea
adc
rcrb
xchg
mov
push
add
or
jne
bound
lods
jmp
test
addb
cld
hlt
sub
inc
pop
fsubr
add
inc
add
mov
push
mov
xor
mov
or
dec
mov
popf
mov
sbb
pop
jge
sar
nop
lea
cwtl
mov
jmp
add
add
mov
inc
inc
cmp
jb
mov
aaa
nop
inc
ret
test
enter
sub
inc
cmp
jb
sub
and
mov
inc
dec
pop
mov
fisubl
jmp
xchg
add
int
add
popa
das
lods
or
add
xor
jl
and
adc
or
add
push
xor
loope
mov
mov
call
push
sbb
push
xor
inc
push
jb
mov
mov
add
add
fdivr
fdivr
inc
push
lcall
in
call
sahf
bound
test
je
cmp
je
or
je
shll
lret
dec
mov
sub
popa
fcmovnb
fsubrl
jle
adc
push
and
popa
cmp
mov
inc
mov
mov
movsb
jmp
pop
and
adc
xor
and
and
test
sbb
test
mov
mov
sub
nop
je
cmp
je
inc
idiv
popf
sbb
xorl
imul
ljmp
sbb
add
cmp
pop
push
and
jge
cmp
je
cmp
jge
adc
decl
fnstcw
fdivrs
mov
dec
js
mov
incl
sbb
cli
stos
cltd
clc
daa
fidivrl
mov
cmp
mov
loopne
inc
dec
push
push
incl
push
rsqrtps
cmp
adc
pop
jne
sbb
fists
jecxz
inc
mov
cmp
mov
jne
mov
mov
mov
imulb
popa
or
shll
adc
push
or
gs
push
aaa
clc
mov
mov
mov
mov
cmp
mov
in
jbe
jns
adc
inc
mov
sub
in
and
call
push
add
pop
ss
mov
sbb
pop
pop
stc
jmp
pop
or
or
and
and
adc
sbb
and
and
and
sub
and
and
xor
cmp
and
and
dec
dec
and
and
push
push
pop
pop
and
and
pusha
fs
and
js
and
and
addb
nop
xchg
cwtl
pushf
and
and
mov
and
and
and
and
enter
and
rcl
fcomp
and
and
loopne
call
and
hlt
clc
cld
inc
inc
sahf
and
mov
inc
inc
inc
adc
sbb
inc
inc
inc
and
sub
adc
xor
add
jp
xor
dec
cld
add
push
js
pop
pop
push
out
dec
sahf
test
or
and
jmp
movl
out
into
sub
pop
adc
push
cld
push
xchg
punpckhbw
xchg
fsubrl
jecxz
fs
add
call
pusha
cmp
cmpl
jl
jp
mov
add
fcompp
push
mov
add
push
or
xor
divb
or
lock
mov
push
fbld
cmp
or
dec
jae
ja
cmp
das
fdivs
movsbl
cmp
jne
pop
or
aaa
sbb
daa
mov
xor
add
sbb
movb
flds
outsb
sub
lds
es
inc
ss
add
xlat
lds
mov
jmp
test
je
and
mov
xchg
popa
int3
mov
testb
add
or
xor
gs
mov
stc
pop
jne
push
ret
or
jne,pn
and
clc
jmp
std
hlt
push
jp
inc
add
or
cmp
sbb
dec
and
aad
jmp
in
es
lock
lock
push
stos
mov
add
push
arpl
push
ja
test
dec
push
adc
andb
add
and
push
inc
leave
clc
mov
in
sbb
call
dec
inc
xorl
sub
out
push
in
adc
dec
in
jb
fiaddl
nop
sbb
mov
sbb
in
in
int
fbld
pop
in
mov
clc
and
roll
dec
jmp
sbb
nop
xchg
cld
cld
loopne
es
loopne
adc
mov
fs
movsb
sbb
dec
ja
mov
call
ret
cmp
add
fldcw
or
je
cmp
adc
mov
in
sbb
jne
jecxz
shrb
adc
pop
sar
loope
lods
ret
jne
mov
ret
nop
sbb
shl
clc
add
push
rol
xchg
mov
subb
add
mov
mov
dec
and
inc
cmc
add
mov
or
xlat
popa
sub
push
push
mov
jno
jb
neg
and
je
sub
mov
add
or
out
xchg
jmp
fmuls
in
shl
lret
jmp
jl
loop
jbe
dec
ljmp
inc
loopne
rcl
and
add
jle
xchg
loope
and
add
and
lock
jle
rolb
ja
pop
repnz
je
mov
jb
test
lea
pop
cmp
mov
int
int
inc
dec
es
dec
sub
ret
adc
std
test
inc
nop
cld
pop
push
subl
jecxz
push
mov
mov
mov
cmp
jbe
cmp
sbb
inc
xor
xor
push
mov
sub
and
sbb
xor
cmp
add
das
pop
jnp
clc
test
mov
cmp
push
mov
pop
fisubrs
adc
and
mov
xor
testl
add
cltd
lods
popf
fs
lea
dec
add
add
nop
out
movb
sub
add
clc
mov
call
int
imul
mov
call
shr
in
lock
js
xor
hlt
clc
clc
cld
cld
lea
cmp
lock
sbb
call
jmp
pop
pop
ja
popa
or
sbb
sti
and
nop
sbb
and
xchg
mov
xor
jl
cld
pop
and
into
jbe
or
mov
xor
adc
stc
pop
sti
and
nop
int3
push
lock
sbb
fildl
jge
mov
add
fsubrs
push
sbb
add
mov
addr16
add
mov
mov
insb
or
push
jl
mov
scas
mov
sbb
sbb
adc
adc
xor
rorl
or
add
outsb
pop
dec
add
enter
in
adc
aaa
pop
add
fistl
aam
sub
ja
cmp
sbb
neg
add
xchg
test
inc
add
mov
push
ret
push
lea
sub
test
dec
in
sbb
loope
jl
inc
add
jg
push
sbb
jl
mov
cmp
fdivl
or
add
sub
jle
push
rorb
rol
mov
mov
or
in
jmp
xor
mov
mov
or
add
shrb
inc
xchg
xor
sub
push
inc
add
inc
jo
mov
or
insl
cmp
jl
or
jg
lock
push
pusha
xchg
xchg
adcb
or
mov
imul
add
inc
shll
cmc
sub
jmp
or
nop
popa
pop
fwait
pop
jge
xor
sub
cs
call
fs
sbb
in
in
in
mov
lock
in
in
lods
push
mov
xor
in
outsl
aaa
push
push
ret
js
mov
es
add
adc
mov
dec
lahf
jo
imulb
lods
rolb
neg
jmp
sbb
pop
mov
or
les
xchg
jne
mov
add
imul
mov
inc
cmp
gs
or
or
add
mov
lahf
jne
ss
push
shrb
mov
mov
je
xorb
jg
dec
adc
mov
pop
mov
xchg
dec
ljmp
lcall
dec
ss
sbb
inc
add
dec
mov
dec
hlt
pop
and
ds
add
popf
dec
movsb
xor
rcll
and
adc
cmp
lods
inc
dec
int
mov
and
jmp
jae
ret
and
jne
movsb
lods
outsl
cltd
insl
jo
push
push
cmp
in
inc
or
xor
push
mov
mov
jg
and
lock
pop
adc
cmpl
divb
cmp
fnstsw
inc
xchg
mov
and
aaa
les
fnstsw
xchg
clc
ss
int3
mov
jmp
adc
je
adc
lret
dec
adc
sahf
mov
repz
push
outsb
dec
ret
outsb
sub
repz
out
push
subl
push
ret
xor
inc
push
clc
and
xchg
in
incb
or
and
pushf
and
inc
sbb
xchg
popa
lahf
pusha
xchg
rcrb
adc
add
in
cltd
ds
loopne
or
cmp
jbe
out
or
enter
add
mov
loope,pt
je
push
mov
shll
add
popf
sub
arpl
icebp
mov
dec
pop
xor
clc
xor
or
pop
jecxz
adc
movl
das
adc
adc
or
in
in
xchg
std
inc
or
mov
inc
adc
adc
mov
in
outsl
dec
xchg
push
mov
mov
mov
jbe
mov
fsubs
push
pop
adc
out
or
mov
clc
out
xlat
jae
mov
daa
add
aaa
xchg
and
push
lock
or
xor
adc
push
jbe
hlt
sbb
sub
add
push
sbb
mov
imul
lea
mov
cmp
fbld
mov
xor
jmp
cmc
dec
pop
add
mov
scas
mov
or
mov
sub
jge
jp
xor
mov
pop
cmp
cmp
add
lret
jae
xor
rorb
sub
clc
jmp
xlat
or
adc
xchg
enter
aaa
mov
pop
sbb
iret
adc
and
mov
iret
test
xor
cmp
call
insb
sbb
inc
inc
add
pop
out
sbb
je
pop
mov
xchg
add
in
add
add
push
fs
in
sbb
and
push
mov
outsl
adc
push
push
adc
jl
and
or
sbb
fwait
dec
pop
mov
adc
cmp
or
das
sbb
sbb
and
rcll
lds
loopne
call
dec
fs
cmp
in
ret
push
lods
nop
xchg
sub
sub
xchg
loopne
push
mov
sub
cmp
sbb
sub
inc
push
nop
cmpl
inc
dec
fidivs
test
leave
lock
popf
sbb
jne
lock
pop
pusha
repnz
out
and
lock
cld
and
hlt
mov
stos
jmp
mov
sub
dec
or
push
push
dec
and
adc
mov
dec
jne
insb
or
mov
dec
sbb
add
adc
mov
fstps
xor
inc
adc
add
jbe
popa
push
scas
hlt
dec
mov
add
jg
and
push
sub
sti
ficomps
pusha
mov
aaa
dec
xorb
dec
lock
xor
lods
add
cmp
jae
fcoml
dec
test
js
sbb
mov
pop
mulb
dec
cmp
fwait
inc
dec
rcrl
push
push
rcll
push
mov
sub
mov
rorl
pop
sti
out
jmp
or
nop
pusha
mov
cld
das
add
arpl
cvtps2pi
insl
sub
aaa
push
lahf
push
and
mov
pusha
rcll
shll
or
inc
cmp
add
jno
cmp
jo
mov
lock
lea
cmp
popl
add
push
mov
pop
and
inc
aas
jl
jb
cmp
shll
pop
sbb
roll
adc
dec
add
push
sbb
xchg
xchg
ds
pusha
jne
and
cld
mov
mov
push
ja
insb
pop
or
mov
loopne
data16
pop
push
mov
and
xchg
add
popa
sti
insb
lds
add
xor
jge
add
inc
sub
mov
je
xor
je
add
sbb
cmp
popa
hlt
inc
cmp
loop
mov
shll
les
cld
inc
jne
pop
inc
movsl
cmp
inc
push
dec
js
clc
mov
mov
pop
push
push
lods
push
adc
xchg
test
loope
mov
adc
inc
das
inc
or
and
inc
jo
push
lea
xchg
aam
sbb
cmp
sbb
dec
or
mov
xor
and
es
nop
subb
adc
outsl
lret
sub
loopne
xchg
cmpl
loopne
sbb
add
mov
fdivr
les
mov
add
lcall
daa
sahf
adc
setb
mov
mov
pop
push
jmp
push
movl
imul
push
add
lods
imul
xchg
lods
or
cmp
jo
fbld
jo
lock
sti
and
add
lea
add
xchg
xchg
loopne
xor
outsb
mov
stos
nop
xor
test
adc
xchg
loopne
fiaddl
add
cli
cmp
xor
mov
push
mov
cmpb
pusha
dec
test
xchg
stos
lret
sbbl
in
in
sbb
or
in
ja
in
pop
cmp
sbb
sbb
bound
adc
xchg
repz
jns
pop
add
fmul
fmul
push
fwait
jno
push
or
jp
int3
daa
jmp
xor
sub
jecxz
aad
lret
out
data16
fwait
int3
adc
sbb
dec
pop
mov
xor
xor
ret
jns
imul
shll
cwtl
push
or
shrb
push
mov
jge
add
xchg
clc
mov
pushf
cmp
in
mov
fs
leave
inc
leave
push
mov
mov
mov
add
mov
ret
or
xchg
lret
in
pop
lea
fs
nop
cmpsl
mul
and
leave
daa
pop
insb
sbb
add
jne
andb
sbb
dec
adc
aam
add
xchg
and
test
stos
in
push
jo
aam
dec
mov
jae
cmc
ss
adc
cmp
sahf
aas
loopne
push
xchg
aam
test
inc
pop
lods
fwait
not
jl
jne
adc
adc
add
fdivrs
aam
jge
pop
xor
movsb
mov
jne
pusha
addb
js
sub
cmp
mov
pop
fcomps
aam
mov
loopne
movsb
aad
fistl
cwtl
ret
faddl
jbe
pop
push
cmp
fildll
jg
test
js
mov
in
push
push
cld
icebp
lea
stos
mov
cmp
sar
adc
mov
adc
xchg
or
loopne
sbb
je
add
testl
aaa
dec
push
add
mov
adc
fdivl
adc
or
lcall
pop
xor
add
sbbb
and
cmp
mov
mov
insb
shr
fstpl
xchg
fwait
sub
pusha
repnz
xor
loope
es
js
ja
cwtl
add
pop
rcll
lods
xor
xor
adc
dec
fcoms
lods
enter
inc
outsl
loop
lret
add
push
add
call
sub
add
movsb
push
adcb
fstp
mov
adc
adc
pop
lock
loop
xorl
loopne
push
loopne
les
loopne
xor
mov
imul
inc
je
cmp
cmc
pop
pop
arpl
loope
cmp
sbb
xor
cmp
mov
and
or
jb
inc
inc
sbb
in
or
bound
mov
movl
daa
insl
ds
into
dec
lock
or
mov
pushf
imul
xchg
sahf
popa
daa
adc
or
jnp
stc
jmp
add
lods
addb
adc
fistpl
addl
test
sbbl
add
lds
inc
cmp
mov
inc
mov
shrl
ret
out
dec
cmp
in
xchg
inc
xchg
add
pop
push
sbb
add
push
inc
das
mov
pop
push
adc
js
push
xchg
add
sub
push
sub
imul
push
jno
sarb
or
je
in
pop
push
sub
ud2
adc
aam
lahf
mov
clc
sub
add
hlt
add
sub
outsb
lcall
add
push
nop
sbb
push
mov
fistpll
add
jmp
rolb
mov
imul
xchg
pop
out
sbb
cmc
mov
push
xor
mov
push
adc
pop
inc
pop
int
lret
je
lahf
or
sub
test
test
lock
xor
pop
cli
adc
and
inc
fmul
test
cmp
in
sub
in
dec
in
jae
mov
mov
sub
fmull
mov
mov
pop
lock
jge
jae
je
xchg
and
or
imul
popa
out
add
arpl
or
adc
push
inc
xor
pop
sub
push
das
cld
loopne
sub
sub
xchg
flds
and
inc
jne
lea
test
jp
add
in
cmp
cmpl
push
xorl
sub
adc
cmp
pop
cmpl
adc
cmp
nop
cmp
test
push
push
jmp
sub
pusha
xor
jne
aas
adc
xchg
push
dec
inc
push
or
jo
push
inc
cmp
scas
ljmp
jl
rcll
sbbl
clc
push
hlt
pop
adcl
jge
rorb
adc
scas
mov
sti
jg
out
cmp
jge
push
cld
mov
mov
gs
std
adc
or
push
mov
ret
sahf
dec
jge
jmp
xor
dec
jg,pt
movsb
lret
movsb
stc
mov
aad
mov
aas
mov
mov
xor
inc
in
test
imul
les
inc
add
js
mov
mov
mov
jp
les
push
mov
insb
and
lods
inc
in
hlt
inc
sub
pop
push
loope
fdivl
and
add
in
loope
push
scas
aaa
or
test
pop
lahf
insb
mov
xchg
or
pop
pop
adc
mov
and
inc
or
ds
pop
fiaddl
push
stos
add
inc
scas
in
sbb
and
hlt
mov
inc
mov
pusha
test
insb
inc
pop
xor
and
ret
or
sbb
jg
daa
imul
outsb
adc
test
inc
pop
or
fsubrs
fcmovnu
pop
fdivl
or
leave
inc
push
ljmp
or
adc
mov
inc
sbb
add
adc
dec
cld
es
cmpsb
pushf
rol
cmp
outsb
mov
cmpsb
iret
xchg
loopne
roll
or
mov
in
and
xchg
add
xchg
sbb
adc
or
insb
add
xor
or
shll
lock
dec
cmpsl
add
pop
jl
mov
adc
not
and
sub
xorl
ret
leave
inc
scas
out
dec
cld
add
cld
and
and
mov
adc
and
lahf
push
xchg
lock
mov
decl
push
test
xorb
test
cmp
and
push
das
xorl
arpl
push
pop
inc
or
mov
fwait
js
pop
test
iret
addl
pop
xor
xchg
jno
adc
sub
and
or
bound
adc
mov
mov
loopne
adc
xchg
mov
cmp
sub
sub
movups
and
jno
call
loope
sahf
jecxz
cmp
scas
cmpsb
sbb
inc
and
inc
adc
insb
test
not
out
pop
fdivp
dec
lock
adc
xor
clc
js
shll
rcrl
jno
adc
add
dec
add
lods
addl
ja
cmp
dec
or
push
mov
or
mov
idiv
mov
jo
adc
and
cmp
cmpb
nop
jmp
and
leave
cld
and
or
cmp
dec
xchg
movsb
loopne
pop
pop
mov
fcomps
mov
cmp
or
aas
inc
or
adc
jmp
ss
movl
orb
mov
hlt
push
loope
cmp
xchg
addl
pusha
push
add
mov
hlt
and
dec
inc
add
mov
ficomps
push
add
push
hlt
push
and
or
and
xchg
sahf
popf
xchg
in
mov
mov
xchg
pop
mov
add
mov
les
leave
pop
pop
jl
xor
je
xor
mov
popf
cmp
jb
sbb
pop
ja
iret
enter
and
or
pop
jle
mov
add
jmp
add
add
out
and
int3
adc
popf
or
sbb
mov
fbstp
sbb
inc
inc
cmp
mov
inc
in
mov
push
sbb
dec
pop
pop
fs
mov
pop
pop
sbb
rorl
notb
mov
arpl
jl
faddl
sub
imul
adc
les
mov
sbb
inc
jecxz
sarb
xchg
mov
or
cmp
sbb
je
sbb
pop
jle
xchg
jns
mov
jmp
std
jmp
jo
mov
cld
push
or
lret
jo
data16
shr
jmp
or
in
incl
push
ljmp
dec
xor
xor
fadd
add
adc
mov
sbb
push
cmp
push
mov
inc
and
pop
and
inc
fbld
imul
rol
es
mov
sub
inc
adc
and
mov
aas
mov
pop
and
or
xchg
inc
out
aas
xor
shr
rcll
in
inc
and
int3
inc
or
cmp
aam
pushf
xchg
jmp
bound
push
popf
jp
pop
inc
or
sarb
xchg
lahf
jge
and
inc
nop
xchg
push
dec
jno
aad
pop
test
and
and
mov
push
pop
fwait
dec
sbb
adc
inc
jl
ret
cmp
xlat
jmp
rcrb
mov
xchg
mov
in
jo
or
fistps
adcl
pop
xorl
arpl
adc
and
dec
mov
pop
mov
hlt
dec
push
mov
std
cmp
pop
ss
outsl
dec
loope
push
dec
or
test
cmp
clc
sbb
or
mov
push
loop
outsb
cmpl
sbb
cmpsl
cmp
jae
or
adc
adc
fsubrp
add
add
adc
inc
das
pushf
inc
sbb
add
add
jge
or
sbb
and
lret
or
fwait
mov
add
dec
pop
sbb
push
adc
sub
mov
jnp
ret
jmp
mov
push
fcoml
in
inc
mov
add
add
add
call
or
xlat
push
or
sbb
jp
or
dec
pushl
add
xchg
inc
and
popa
jno
add
mov
or
lods
dec
cmpsb
jo
xchg
pop
pop
mov
adc
mov
mov
dec
add
push
or
mov
adc
fistpll
test
ss
pop
push
dec
mov
dec
sahf
xchg
inc
xchg
or
cmp
mov
inc
push
or
push
dec
fs
dec
and
cmp
push
mov
cmpsl
psubsw
jmp
shrb
jne
scas
mov
gs
sbb
pop
repnz
fsubl
jp
inc
lea
inc
add
sub
add
sub
jmp
mov
inc
sub
cmp
add
or
sub
sub
imul
add
call
adc
jg
adc
sar
testl
mov
pop
xorl
adc
cli
add
movzwl
fimuls
pop
shl
sbb
enter
sar
jmp
dec
add
hlt
hlt
sub
leave
out
int3
xor
jecxz
stos
clc
int3
push
int3
lods
push
imul
or
mov
jnp
jae
es
mov
sahf
and
int3
jg
sub
dec
sbb
cmpsb
lcall
push
jne
or
lock
push
movsb
and
jp
mov
sub
adc
leave
push
scas
jbe
movsb
lret
ljmp
or
repnz
cmp
xor
xor
or
or
push
hlt
or
gs
jnp
jge
addr16
lock
or
jne
pushl
xchg
imul
lea
jge
mov
pop
sub
cmp
jne
mov
push
mov
jg
je
jmp
arpl
mov
mov
dec
mov
shlb
adc
adc
dec
dec
xchg
sahf
mov
icebp
and
movsb
inc
inc
jne
decl
test
or
sti
pop
je
ficoml
popa
and
adc
rorb
aaa
sub
aaa
jbe
test
je
mov
fisttpl
cltd
cwtl
sub
cltd
dec
lods
inc
divb
in
sub
or
outsl
xorl
adc
push
add
mov
shrb
shlb
push
inc
jne
mov
ja
fisttpll
adc
inc
adc
dec
lea
mov
rorb
or
adc
in
fisubl
xor
pop
aam
add
lods
pop
cmp
sbb
fmuls
shrb
push
clc
dec
push
sbb
sbb
clc
clc
nop
outsb
cmp
stc
clc
push
cmpsl
sbbb
add
nop
cmp
mov
cld
jl
js
push
xchg
cltd
and
aas
push
adc
clc
push
std
add
inc
lcall
xorl
fs
sub
shl
xlat
mov
mov
mov
fnstenv
inc
jg
sbb
or
push
ret
shl
push
shlb
or
lret
lahf
cli
jecxz
mov
xor
cmpsb
iret
xor
adc
loope
jne
and
or
sbb
call
cld
cmp
je
out
cmp
je
shll
and
fdivl
aam
xchg
pop
addr16
outsb
or
adc
dec
std
cld
aas
pop
and
enter
arpl
dec
loopne
cmp
inc
fdivs
add
fistpll
jno
sbb
and
mov
inc
xchg
stc
push
int
fdivrs
dec
imul
ret
jmp
in
nop
insb
mov
aam
fdivl
cli
in
mov
jp
dec
xchg
cmp
pop
ret
adc
inc
fdivrl
mov
mov
sub
and
shlb
mov
mov
das
popf
xchg
popa
adcl
stos
in
in
jmp
sub
inc
fistpll
cmp
push
inc
sahf
fistpll
hlt
hlt
mov
or
push
cmp
out
test
mov
xchg
mov
sbb
loopne
dec
adcl
leave
xor
cmp
cmp
sub
mov
mov
pop
out
lds
sbbl
clc
clc
sub
or
jae
jno
sbb
jmp
jmp
in
mov
mov
sbb
xor
mov
jne
or
call
dec
call
jle
adc
outsl
fdiv
repnz
lea
adc
loopne
cmp
xor
cmp
mov
enter
push
or
outsl
or
negl
adc
mov
adc
add
pop
xor
sbb
xchg
mov
mov
ja
je
push
sub
loop
adc
pop
ss
hlt
jmp
mov
adc
jo
cmp
addr16
addb
rclb
arpl
ds
adc
push
outsl
cmpsb
jne
pop
or
jne
call
push
or
icebp
rorl
xor
divl
ret
fsubrl
sbb
push
add
jmp
push
ljmp
inc
shr
rcr
shr
rcr
or
jge
dec
cmp
div
pop
cmp
mul
pop
jb
cmp
mov
outsl
dec
ja
jb
cmp
or
xor
and
pop
sbb
dec
or
adc
sarl
pop
mov
xchg
add
stc
insw
lock
mov
addr16
mov
mov
sbb
or
insl
test
scas
mov
shr
inc
push
xor
xor
cmp
rcr
fcomi
sbb
ss
mov
adc
cmp
add
adc
xor
dec
push
jns
xchg
sbb
push
inc
pop
and
adc
dec
jo
mov
jge
aam
cmp
mov
mov
jg
adc
sbb
push
aas
and
adc
movl
add
ror
xchg
adc
test
fs
jnp
and
jecxz
add
fcompl
adc
lea
sbb
adc
lods
push
rclb
mov
sbb
popa
cmp
xchg
jp
stos
cmp
pop
or
push
push
adc
and
inc
fmuls
push
sub
in
ficoml
in
push
pop
push
or
jo
dec
push
push
pop
adc
and
push
jnp
test
bound
sbb
icebp
test
jns
lea
push
inc
mov
add
dec
aad
orb
add
je
test
pop
sub
pop
lds
fistpll
add
mov
cmp
jne
mov
mov
adc
lods
incb
jne
leave
incl
jne
sbb
mov
repz
je
mov
add
dec
adc
cmc
jns
adc
mov
pop
adc
add
cmp
imul
adc
fbstp
lret
out
jne
adc
aaa
push
out
jge
and
sub
mov
in
sbb
pop
icebp
dec
or
clc
fcomip
push
dec
sub
ret
mov
mov
lock
push
mov
movsl
xchg
popf
in
leave
movsl
hlt
popa
out
adc
daa
adc
inc
out
pushl
mov
xchg
lret
adc
es
mov
mov
subl
adc
push
push
mov
adc
dec
push
sub
sbb
pop
adc
and
adc
andb
pop
es
xor
cmp
adc
es
push
clc
js
testl
cmp
mov
lret
adc
jp
jne
inc
dec
xchg
xor
js
or
inc
mov
adc
push
movsb
push
adc
xor
or
push
loope
sub
xor
jmp
sbb
push
out
push
xor
pushf
lods
out
push
adc
add
enter
cmp
adc
aaa
add
or
adc
push
stos
or
imul
call
xor
or
adc
cmp
setg
scas
in
push
xor
or
push
movsb
xchg
ljmp
or
push
inc
insl
pushf
lock
push
jmp
mull
lock
dec
add
test
add
sbb
adc
fimull
fdivrs
arpl
mov
lret
pop
fwait
mov
mov
fldenv
jp
imul
jle
sbb
dec
push
call
sahf
push
aad
add
mov
and
jmp
fnstsw
aad
sbb
sub
xchg
cwtl
add
aam
and
push
addr16
add
nop
test
add
pop
mov
xchg
cmp
enter
cmp
sbb
lea
subl
add
mov
fdivrl
js
out
mov
sub
inc
pop
or
add
inc
adc
test
pop
add
mov
lahf
adc
js
fimull
and
sub
ja
or
aam
mov
push
add
and
sbb
rolb
lcall
sbb
adc
lcall
je
xchg
push
sar
orb
dec
mov
mov
dec
pop
push
nop
push
mov
scas
sar
lret
cmp
cmc
cmpsl
mov
jns
movb
cmp
notl
mov
dec
clc
stc
add
add
push
test
add
add
mov
ret
int3
mov
jmp
and
pushf
cld
sbb
or
pop
jge
loope
or
pushl
movl
push
shlb
bound
int3
jno
test
push
add
insb
fisubl
inc
jmp
insl
or
rol
aas
dec
shr
pop
pop
xchg
aaa
pop
fsubp
jns
and
sub
fadds
clc
das
xchg
cmp
int3
and
nop
nop
loopne
or
cmp
js
cmp
sbb
out
inc
inc
lods
dec
cmp
push
repnz
mov
ret
fiaddl
or
sub
ljmp
mov
add
jo
test
dec
leave
dec
xor
mov
fstps
sahf
addb
xchg
add
bound
mov
mov
repz
notl
dec
adc
lahf
cld
in
clc
dec
xor
or
cmpb
leave
ret
cmpb
xchg
xor
inc
xchg
or
adc
adc
pop
pop
push
pop
subl
or
jne
mov
add
jecxz
sbb
lret
push
push
xchg
pand
lock
sbb
dec
or
sbb
mov
mov
jp
xchg
pop
lock
mov
mov
pop
fcomps
jecxz
loope
cmpsb
or
fdivs
aam
cmc
shlb
add
call
mov
dec
pop
mov
and
pop
sub
fmuls
sbb
xor
xchg
pop
ror
test
adc
inc
and
sub
or
aaa
xchg
lods
or
inc
movsl
and
int3
shlb
adc
cmp
fwait
clc
mov
js
nop
or
enter
movsl
pop
xchg
fs
mov
clc
sbb
imul
pop
or
ret
popf
jo
xchg
cmp
push
test
push
mov
mov
jl
mov
or
push
cli
out
ret
dec
decl
adc
lea
cmp
jle
inc
or
mov
cmp
sub
andl
in
incl
shll
mov
cmp
ja
cmp
jbe
test
pop
xchg
mov
rorb
mov
in
adc
mov
sbb
out
mov
pop
or
into
int
adcb
out
cmp
or
div
xor
xor
lahf
push
in
insl
addr16
ret
cmp
mov
or
jle
addr16
dec
adc
icebp
rcrl
lock
jmp
xchg
push
mov
jle
push
fldl
dec
imul
add
ret
iret
inc
sbb
inc
aaa
push
add
push
add
mov
sbb
jl
leave
push
push
dec
xorl
pop
or
xchg
adc
inc
enter
decl
and
sub
mov
mov
adc
mov
outsl
test
fiadds
add
cli
add
push
adc
ret
popl
pop
or
ljmp
cmpl
mov
cmp
lahf
inc
mov
sar
push
push
mov
jle
jmp
adc
xor
jle
imul
jg
sbb
loop
mov
test
push
ret
mov
pop
hlt
jmp
add
or
push
pusha
push
test
or
mov
into
adc
mov
or
repnz
add
push
add
pop
loopne
cmp
test
push
adc
cmp
cld
data16
cmp
subl
cmp
dec
xchg
sahf
xor
aaa
mov
inc
scas
jnp
sbb
inc
mov
ret
or
or
ret
sub
jp
push
cs
je
mov
mov
fcompl
cmp
lock
lods
jmp
hlt
es
xor
push
xchg
inc
sub
jnp
test
adc
and
add
pop
orb
int
jmp
mov
and
js
inc
dec
lcall
mov
lea
push
lcall
cmp
fisubl
mov
pop
js
cltd
in
adcb
sbb
sub
rcll
arpl
fldl
jle
test
pop
or
bound
cmpb
int3
xor
dec
mov
roll
mov
ds
pop
sbb
cmpb
add
dec
cmpl
mov
shr
add
movb
jne
add
jbe
sbb
pop
xor
aaa
in
xchg
adcb
or
gs
and
xor
xor
ljmp
jge
cmp
cmp
cmp
xchg
or
adc
iret
push
das
and
push
rcrb
hlt
neg
in
daa
aas
and
fs
mov
sbb
popa
dec
leave
jmp
out
add
jb
popa
pusha
adc
shrb
sahf
lret
jl
or
jl
jo
jl
mov
pop
enter
push
mov
pusha
popa
mov
or
cs
int3
push
femms
loope
inc
jae
inc
add
xchg
cmp
push
mov
sub
outsl
and
jnp
xlat
add
or
xlat
jae
sub
sti
lock
or
and
fists
sub
and
and
mov
add
pop
subb
repnz
mov
mov
lret
arpl
repz
mov
adc
pushl
cmpsl
jmp
rcrl
push
add
pop
push
push
pusha
and
sbb
cmp
push
aas
enter
push
sbb
xor
or
lds
push
xor
sbb
jo
lret
inc
mov
aaa
cwtl
sbb
adc
xor
inc
roll
in
mov
adc
or
mov
mov
adc
cwtl
push
adc
jle
push
lahf
aad
add
adc
repz
or
push
sahf
pop
arpl
pop
scas
mov
cmp
adc
xchg
addr16
je
sbb
inc
adc
enter
aam
mov
dec
pop
daa
jmp
shll
sbb
or
adc
jl
rorb
xchg
mov
jge
ret
push
inc
ja
xchg
add
int3
data16
cmp
push
adc
imul
add
xchg
pop
sub
adc
dec
xchg
add
dec
shr
mov
jb
jo
jbe
scas
add
mov
mov
xchg
jbe
mov
push
ljmp
dec
and
adc
outsb
dec
cmp
adc
jge
cltd
imul
mov
mov
sub
or
dec
sti
xchg
ja
or
dec
add
sbb
or
cs
add
and
insb
xchg
or
sbb
sbb
in
jl
shlb
mov
add
enter
dec
mov
aas
mov
daa
or
mov
pushf
add
pushf
push
cmp
mov
mov
pop
jmp
pop
movzwl
add
inc
scas
cmp
add
cmpb
lret
js
mov
in
imul
aas
sub
push
add
add
mov
orb
fnsave
imul
notl
in
dec
popa
mov
popf
jo
lahf
cmp
lods
out
aam
dec
or
or
adc
mov
int
shll
insb
inc
cwtl
pop
or
icebp
dec
pop
push
shrb
mov
stc
xchg
add
or
sti
push
add
push
insb
ficoms
and
hlt
dec
clc
mov
in
or
imul
jmp
je
fsubs
push
ja
cmp
mov
push
push
xchg
lods
hlt
xchg
push
or
js
dec
adc
fdivrl
or
mov
jo
add
jle
dec
inc
or
or
adc
loop
clc
popfw
clc
arpl
ljmp
xchg
stc
in
push
cmp
inc
or
enter
imulb
stos
fcompl
push
inc
popa
sbb
sahf
sbb
divb
add
adc
stos
dec
fwait
sbb
add
pop
and
and
or
insl
out
lret
pop
pop
popa
pop
jae
hlt
inc
cmp
mov
outsb
dec
lahf
int
int
adc
mov
pop
fcoms
or
mov
ret
cmpsl
aaa
push
ret
xor
cld
xlat
jbe
sub
sub
jns
push
or
xchg
popf
test
add
push
or
mov
and
sbb
clc
add
jle
sub
push
and
and
push
sbb
lock
sub
imul
add
fistps
jns
rolb
loop
sbb
mov
je
and
cltd
nop
jle
roll
push
mov
orb
dec
mov
je
mov
inc
inc
dec
insb
pusha
jne
pop
mov
insl
cmpsl
enter
movl
jl
mov
lea
imull
jb
add
jle
test
mov
dec
push
cmp
jl
mov
cli
js
sbb
mov
in
inc
aaa
jns
or
push
aad
mov
ja
adc
lea
out
rorl
imul
cmp
pop
ja
scas
add
lea
cmp
stc
inc
adc
aaa
pop
push
or
inc
roll
xchg
nop
loopne
sbb
mov
inc
jle
jns
ljmp
pop
in
adcl
sbb
in
ss
dec
jmp
inc
xchg
jl
fsubr
push
ja
lea
mov
repnz
push
jmp
aam
inc
inc
mov
add
adc
clc
int
mov
inc
push
add
test
gs
or
fsub
ja
or
ja
sub
fisttpll
or
push
pop
and
adc
push
rolb
sub
insb
popa
pop
mov
dec
leave
add
lret
enter
or
jmp
movb
sub
sarl
mov
jge
mov
std
call
jmp
call
fcos
shrb
jno
pusha
or
rcrb
mov
sarb
add
leave
pop
cmpl
inc
and
mov
mov
and
cmp
movsl
cs
loopne
push
xchg
shll
cmp
sahf
fildl
mov
jno
inc
add
xor
sbb
ud1
sbbb
xor
jne
or
and
jne
loop
jg
adc
push
cmpsb
push
pop
fs
pop
sti
inc
xor
mov
and
test
pop
jne
push
push
or
push
jge
sbb
sub
sbb
or
fstpl
cwtl
and
mov
mov
out
std
or
xor
iret
and
lea
cli
xchg
and
and
mov
nop
mov
int3
cmpsl
ja
imul
xchg
or
mov
enter
and
daa
jae
insb
fdivl
lods
cmc
in
movsb
out
jne
mov
test
out
addr16
push
xchg
movsb
push
test
or
test
dec
test
and
and
add
pop
xchg
pusha
jo
add
cmp
dec
and
dec
hlt
pop
icebp
pop
sbb
pop
pop
adc
fmull
or
xchg
sub
lea
push
gs
dec
mov
dec
cld
mov
dec
js
mov
sbb
and
xchg
sub
aaa
xchg
sub
mov
popf
cltd
jne
jb
jmp
cmp
mov
stc
lods
jmp
leave
or
and
or
xchg
ljmp
cmp
dec
mov
mov
cmp
enter
pop
mov
out
adc
adc
mov
jmp
ret
lock
cwtl
cmp
add
pop
fwait
lret
popf
data16
inc
cmp
and
jne
mov
dec
in
arpl
jnp
add
push
sub
aam
int3
out
add
adc
mov
ss
sub
bound
cmp
cmpl
faddl
or
mov
adc
daa
xchg
push
aam
add
mov
push
adc
lea
addb
pop
dec
hlt
pop
xor
pusha
in
or
xchg
clc
sbb
aam
pusha
sbb
or
add
push
sbb
test
stc
nop
xor
or
fs
or
mov
and
push
cltd
adc
hlt
cs
andb
xor
sub
xor
cmp
je
xchg
and
sbb
add
or
in
scas
inc
lretw
add
jae
lods
push
subb
mov
fadds
in
fs
add
mov
xchg
push
add
cmc
pusha
scas
adc
cltd
popa
jmp
dec
nop
popa
inc
sarb
mov
xchg
testb
sbbl
mov
jnp
inc
out
test
repz
jg
jl
adc
dec
enter
dec
push
adc
neg
jne
mov
mov
jl
jmp
pop
aas
jp
imul
dec
nop
in
loopne
outsl
cmp
add
iret
add
sub
fldt
mov
scas
stos
test
test
stos
jo
and
js
dec
hlt
cli
shlb
or
mov
mov
push
mov
add
daa
dec
dec
or
fwait
test
inc
pop
push
push
pop
movsb
adc
js
dec
xchg
push
jge
mov
adc
jg
mov
xchg
adc
xchg
pop
out
cmp
pop
add
sar
lret
sub
xor
mov
sbb
movb
dec
adc
stc
cmp
jb
scas
jne
inc
aad
push
lcall
in
xchg
inc
add
sub
imul
push
sub
lods
cmp
jecxz
sub
je
cmpsl
push
push
inc
rcrb
lahf
xchg
je
and
inc
lods
cltd
ljmp
stos
in
sbb
or
je
lea
outsl
or
cld
cmp
test
jnp
jo
sbb
mov
imul
insb
insb
insb
insl
mov
rclb
data16
inc
adc
add
test
pusha
jo
inc
scas
inc
push
test
pop
in
mov
int
frstor
pop
popa
add
sub
add
pop
mov
mov
sbb
popa
in
fldt
call
das
loop
mov
adc
inc
loopne
sti
xor
cmp
mov
pop
in
inc
add
push
sub
sahf
pop
cs
shr
notl
cmp
push
lock
shll
nop
cltd
add
in
sti
testb
add
pusha
cmp
insl
mov
push
add
add
stc
mov
fs
pop
mov
in
mov
and
repz
fistpl
lcall
mov
enter
push
add
add
push
add
add
in
mov
push
push
adc
or
or
push
or
sbb
test
add
ret
jp
pmulhw
imul
out
fdivrs
or
xchg
fsubp
inc
push
mov
aam
and
sub
jno
cmp
fnstenv
movl
and
xchg
incl
ret
or
jmp
adc
jmp
out
imul
cmpl
jecxz
shl
or
adc
mov
mov
inc
inc
xor
outsb
call
lds
iret
jmp
mov
mov
dec
fnstenv
mov
insl
inc
jg
fcomp
adc
xor
popf
and
test
push
or
jl
cmp
mov
je
mov
mov
cmp
je
sbb
popa
pushf
xchg
test
dec
ffree
push
gs
or
arpl
cmp
out
cmp
push
mov
subl
jne
push
push
cwtl
xor
add
and
jmp
xor
hlt
push
xchg
xchg
inc
cmp
cld
in
sbb
addb
mov
xchg
rol
jl
loope
ljmp
cmovns
inc
or
jne
popf
xchg
into
dec
push
in
stc
cwtl
cltd
xor
in
mov
loop
jne
insb
sub
mov
inc
or
pusha
fisubrs
je
jnp
xchg
test
sub
sbb
mov
dec
mov
mov
jmp
pop
and
mov
inc
xor
add
jb
inc
aaa
xor
dec
xor
ret
add
mov
add
movl
outsw
mov
adc
fnstcw
and
xor
xchg
sbb
add
ret
or
dec
mov
cmpl
pushf
cmp
add
or
mov
inc
addr16
setg
repnz
dec
mov
or
mov
cmp
fadd
sbb
movsb
lock
mov
mov
movsb
insl
jns
out
out
and
cltd
nop
iret
iret
inc
imul
imul
pop
fadds
cmp
xchg
movsb
add
mov
andl
add
jl
jns
fcmovne
and
test
iret
aam
and
xor
js
push
in
data16
mov
cmp
pop
and
repnz
xchg
push
push
sbbb
repz
mov
sbb
xor
push
push
bound
jmp
mov
dec
iret
mov
sbb
adc
adc
flds
or
test
pop
call
lret
es
sahf
fildll
addb
pop
fistps
add
pop
in
in
push
test
inc
push
and
mov
push
movsb
adc
xlat
push
xor
adc
fsubs
fdivs
lods
mov
pop
pop
das
mov
inc
lret
icebp
rclb
or
adc
mov
dec
or
fmull
add
hlt
out
xor
or
xor
sti
push
xchg
mov
lock
loop
aad
int
test
jno
xchg
pop
and
pop
add
lea
sbb
mov
dec
shll
and
loop
xchg
lock
arpl
loope
pop
fldenv
iret
stos
fldenv
adc
cmp
sub
scas
or
mov
aaa
cmp
inc
clc
add
push
popa
mov
mov
mov
cltd
adc
mov
ljmp
mov
add
stos
pusha
pusha
vmovlps
adc
imul
shr
mov
jmp
xchg
in
lock
add
out
in
cmp
or
call
cmpxchg
xchg
out
sub
jo
sbb
push
dec
mov
jbe
and
push
sbb
and
rclb
mov
test
mov
xchg
push
test
mov
jg
cld
xchg
pushf
cld
cld
imul
out
inc
inc
push
cmp
lea
lock
leave
mov
push
fsubr
fdivrl
rcrb
sub
dec
shll
jne
ds
xor
or
aam
fdivs
shlb
lcall
xchg
add
or
push
xor
insb
les
fdivs
shrb
xor
xor
and
sbb
es
jb
jnp
jne
out
aam
ror
jae
jb
enter
add
dec
mov
int3
xchg
nop
add
cmp
testl
and
popa
xchg
xor
push
mov
push
lea
add
push
inc
mov
loope
xor
mov
hlt
or
jg
inc
lock
pop
dec
or
push
jmp
cmp
pop
int3
orl
adc
test
or
test
nop
sbb
sbb
mov
mov
push
and
mull
add
inc
add
push
jo
mov
mov
cwtl
mov
stc
lods
and
js
shll
sub
mov
rcll
cmp
or
hlt
inc
mov
and
out
ficoms
ja
mov
mov
adc
in
fadd
test
fstl
jns
xchg
pop
or
icebp
push
push
or
mov
fstp
fistpll
inc
jo
mov
jmp
pop
inc
ret
dec
faddl
pusha
in
pop
cmp
jnp
fcmovb
pop
add
mov
mov
jmp
lahf
mov
lods
pop
xor
add
mov
cmp
int
sbb
sbb
xlat
mov
sub
push
cmp
mov
jmp
cmpsb
fdivr
mov
adc
js
pusha
adc
jne
pop
xchg
xor
std
test
mov
jne
mov
dec
imul
mov
adc
xchg
jge
std
sub
std
sbb
sbb
cld
lcall
jae
add
leave
xor
cmp
flds
test
sub
lock
sbb
cmc
lock
sbb
ret
movb
stos
mov
xchg
cld
movsb
add
mov
mov
jbe
enter
xchg
sbb
xor
push
cmp
popa
or
je
and
xchg
mov
fdiv
lock
inc
add
sub
push
xchg
fsubrs
loope
pop
mov
xchg
cmpb
mov
mov
lret
aam
xchg
push
sar
mov
push
cmp
lods
sahf
and
xor
jae
ss
dec
sbb
dec
jl
or
sub
shll
dec
fmuls
pop
sub
lods
inc
push
jnp
js
add
adc
add
pop
fimuls
xor
out
mov
fcompl
clc
adc
cmpb
mov
xchg
lock
dec
imul
xor
xor
ret
sbb
shr
test
mov
xor
outsl
inc
xor
add
roll
in
mov
mov
add
bts
push
movl
cmp
shr
int
xor
sbb
and
pop
pusha
mov
arpl
cli
or
inc
xchg
test
rorb
loopne
mov
or
scas
mov
sbb
or
lcall
push
jmp
stc
les
imul
fildll
dec
lcall
sub
jo
add
iret
ret
add
inc
inc
test
and
cmp
and
jle
add
subl
popf
sbb
mov
cmp
or
mov
aam
cmpl
cltd
mov
or
rol
test
and
aad
lods
scas
mov
lea
fwait
aam
shll
aaa
push
xchg
jecxz
addr16
ss
ja
jns
lock
mov
or
movsl
clc
std
mov
sub
dec
push
ret
loop
mov
or
fstpt
mov
pop
push
fwait
cmp
sti
push
popa
enter
cli
inc
xchg
xchg
test
test
andl
mov
mov
dec
jb
nop
cmpsb
lods
pop
aaa
arpl
fwait
stos
aaa
imul
or
push
xchg
mov
push
gs
add
and
sub
xchg
lds
sahf
push
ljmp
stos
imulb
pushf
cs
inc
jb
adc
popa
sti
pop
ja
cmc
cmp
mov
ss
and
push
mov
mov
and
call
bnd
add
sub
into
mov
gs
add
rolb
or
addb
mov
daa
sahf
cwtl
sub
clc
outsb
bound
ret
arpl
dec
inc
insb
lcall
adc
nop
das
sbb
push
sbb
inc
fwait
inc
jns
daa
lahf
scas
mov
lea
stos
mov
or
sub
inc
loop
or
and
mov
loop
movb
addr16
filds
add
jae
divb
insb
inc
outsl
das
jmp
leave
add
push
fs
or
leave
loope
add
pop
ja
cmp
inc
sub
push
push
or
outsb
xchg
cmp
pushf
jbe
push
inc
add
pusha
xor
jge
push
and
test
pusha
or
lea
dec
mov
or
or
jno
or
ja
mov
jns
nop
leave
inc
inc
jmp
and
jg
jmp
mov
and
subl
cmc
aaa
hlt
xor
clc
push
and
call
mov
bndstx
add
out
test
pop
add
stos
aas
mov
push
loop
fldenv
lret
cmp
in
test
jp
sbb
sbb
cmp
cmpl
test
jbe
cmp
xor
cs
xor
add
push
dec
add
sub
pop
js
popa
sarl
int3
xorl
xor
out
jb
xor
or
test
addr16
sub
popa
testb
fs
cmpsl
in
sahf
cmp
sbb
mov
inc
xor
pop
dec
lock
dec
xchg
push
mov
movsb
mov
das
sub
fnstcw
xchg
push
sbb
test
push
push
mov
pop
fists
inc
or
test
lret
cmp
add
or
add
lods
mov
jb
fs
cltd
cwtl
add
and
sbb
movsb
sub
cmp
mul
jp
add
adc
nop
inc
cmp
xor
mov
repz
in
inc
inc
leave
dec
mov
fcompl
aaa
test
pop
mov
adc
cli
jbe
je
adc
cmpl
andb
cwtl
lods
pop
cld
or
mov
sbb
add
test
xor
inc
or
dec
enter
fs
mov
mov
mov
dec
or
cwtl
mov
sub
hlt
mov
aas
adc
sub
lahf
stc
add
popa
fiadds
or
arpl
in
loopne
test
mov
lock
das
andl
add
nop
cmp
cmp
lret
lds
ret
mov
arpl
fsubp
pop
in
movsl
inc
imul
sbb
cmp
jg
xchg
arpl
addr16
mov
inc
mov
rcrl
add
inc
and
inc
rolb
repnz
xchg
out
mov
lcall
cmp
inc
cmp
cmp
in
inc
enter
mov
inc
roll
mov
dec
mov
mov
fcomps
cmpl
push
cmpsl
jns
and
pushf
adc
lret
movsl
lds
or
fstpl
aas
mov
lods
cltd
add
jne
and
mov
or
sub
cmp
jecxz
pop
imul
subb
jge
ljmp
int3
pop
sub
je
adc
in
cmp
mov
jge
push
inc
mov
cmp
stc
lcall
stc
pop
fcomp
out
mov
mov
ds
mov
repnz
pushf
lea
sub
push
mov
sub
outsl
sub
insl
insb
mov
lea
adc
popl
jecxz
sub
leave
in
xchg
push
sub
sbb
jnp
rcrb
cmp
test
or
mov
jl
repnz
pop
pop
jne
and
shrl
je
cmp
in
mov
icebp
jo
fs
loope
jge
repnz
or
inc
mov
bound
mov
cltd
add
xchg
dec
push
xor
lds
push
pop
decb
pop
lods
enter
dec
pop
push
repnz
jecxz
add
dec
inc
pop
pusha
adc
pop
pop
sbb
and
adc
pushf
and
insb
push
out
mov
repnz
insb
das
jp
jo
inc
cmp
fisttps
jns
adc
push
ret
fisubl
test
or
fs
push
es
inc
mov
add
xchg
adc
insb
inc
inc
and
sub
stc
cmp
lea
cmpsl
addl
pop
sbb
cmp
or
popa
push
adc
mov
sbb
push
sbb
std
adc
jnp
push
or
xchg
dec
arpl
add
fisubrs
jecxz
add
push
stos
xchg
test
icebp
popf
or
add
pop
xorl
jo
out
lock
les
mov
ret
push
mov
ret
ffreep
inc
mov
insb
loop
inc
lock
inc
out
leave
push
xchg
cmp
mov
or
mov
xchg
cmp
aas
ret
in
add
mov
mov
sti
sbb
mov
rcr
std
mov
pop
orl
imul
outsb
test
dec
bound
pop
lgdtl
fidivrs
xchg
test
or
dec
push
sbb
adc
jne
shll
cmp
lahf
std
frstor
adc
mov
mov
sbb
mov
out
inc
mov
es
push
adc
mov
loopne
out
jle
xchg
pop
lahf
pop
pop
popa
in
mov
fbld
loop
or
push
imul
cmp
jmp
subb
sbb
xchg
sbb
cmp
push
xchg
inc
aas
dec
add
test
sub
or
mov
js
test
js
cmp
or
dec
cmpb
incb
hlt
sub
push
adc
out
push
add
inc
dec
leave
adc
sbb
jb
nop
pop
mov
frndint
popf
and
and
sti
xchg
adcl
inc
test
xor
sub
jmp
insb
lea
mov
add
subb
mov
push
pop
out
aam
mov
mov
and
pushf
ss
dec
pop
rcll
mov
cmp
aas
mov
dec
mov
xor
sub
mov
sbb
and
pop
sub
inc
add
lahf
fmuls
mov
loope
mov
lods
test
cmp
loopne
test
xchg
dec
pusha
fcomps
shrl
push
xor
adc
lea
lea
xor
mov
rorl
ja
setnp
dec
gs
loope
pop
add
mov
dec
add
dec
sub
jp
or
push
popa
xchg
cmp
mov
push
push
js
add
outsb
jns
push
add
push
xor
iret
iret
adc
push
outsb
sub
mov
mov
fbld
imul
jmp
daa
mov
cmp
aaa
xchg
fldl
mov
fcomps
sub
push
les
or
je
mov
jne
lods
jg
xchg
je
push
add
bound
jbe
xchg
lea
ret
push
and
sub
adc
movsl
xchg
movsl
lret
xchg
fstl
fucomi
add
fdiv
sarb
cmp
jae
test
inc
fistpll
pop
cli
cs
cmp
icebp
jmp
push
add
into
mov
xchg
and
pop
je
clc
int
test
jle
pop
add
lret
xor
jae
roll
or
jne
mov
dec
pop
sub
add
adc
adc
pusha
adc
jmp
loopne
inc
out
and
push
adc
inc
pusha
add
sbb
insb
sub
test
arpl
push
mov
adc
sub
sbb
sub
pop
fdivrl
inc
fiaddl
test
sbbl
push
jno
popa
xor
push
daa
mov
cmp
nop
inc
ja
js
mov
in
cld
xchg
andb
adc
mov
fdivrs
adc
mov
lret
sub
mov
adc
or
jne
sub
push
popa
test
mov
add
adc
andl
int3
mov
aam
sbb
mov
mov
test
pop
inc
adc
adc
outsb
xor
rcrb
sbb
and
lods
pop
insb
loope
jge
push
clc
iret
outsb
mov
test
xor
mov
enter
out
sarl
movsl
test
shr
sbb
or
imul
nop
push
loopne
std
jg
fisttpll
jns
inc
pop
and
inc
pushf
sub
mov
or
push
fmull
sub
jb
xchg
sub
xor
jb
test
inc
xchg
pop
enter
dec
mov
jns
cmp
sub
aam
or
sub
loopne
sub
loopne
cmpsl
push
repnz
mov
mov
or
test
mov
call
icebp
insb
out
push
cmp
xchg
adc
adc
xor
in
inc
cs
xor
inc
inc
pushf
cmc
inc
in
sub
xor
mov
sbb
adc
xchg
cmp
in
sub
mov
sub
imul
adc
fildll
jo
cs
sbb
jg
or
shrb
adc
lods
inc
mov
out
push
imul
jg
add
adc
cwtl
xchg
pop
cld
insl
sbb
push
xlat
add
add
and
pop
aas
movb
cwtl
add
inc
sbb
inc
enterw
xor
mov
cs
rolb
std
cmp
adc
or
lret
test
mov
xor
sub
andl
adc
aad
es
addb
push
cmp
fiaddl
push
xor
adc
insb
pusha
jmp
dec
stos
inc
int3
cwtl
int
and
pusha
cs
stc
pop
mov
fisubs
push
rcll
jmp
addb
pop
mov
mov
lds
mov
mov
fs
sbb
or
and
push
sbbl
push
pmulhuw
repnz
xor
movsl
add
rcl
loopne
push
and
cs
jmp
xchg
xor
push
push
or
xlat
push
cmp
shrb
lock
adc
mov
push
aad
xor
dec
cmpsl
sarb
stc
stos
rolb
jmp
xor
pop
inc
xor
cmp
push
mov
in
push
pop
clc
sub
xchg
les
outsb
jns
addb
jnp
dec
pop
movsl
sub
jnp
jge
or
jecxz
adc
push
lea
sbb
xor
mov
jl
fstps
scas
xor
js
ja
int
dec
push
fisttpll
xchg
jle
sbb
enter
xlat
or
es
orl
jmp
mov
mov
jle
add
pop
adc
mov
movsl
pop
mov
sbb
mov
mov
push
mov
movsb
jge
sbb
scas
ds
and
pop
daa
push
and
jne
ljmp
adc
lods
ret
lea
cmpsb
nop
imul
sub
mov
test
dec
test
jne
add
or
aam
adc
add
add
je
xor
cs
dec
leave
loope
ret
push
jae
pop
daa
pop
xchg
mov
adc
pop
out
or
repnz
or
push
or
and
push
or
mov
jae
inc
lret
or
ss
or
ret
loopne
popa
mov
jb
pop
or
xorl
xor
or
loope
or
sbb
pop
jns
loopne
int
adc
arpl
imul
imul
add
sahf
and
or
fsubs
outsb
hlt
mov
sbb
and
inc
movsl
and
and
mov
xchg
rclb
test
add
jno
dec
mov
enter
or
push
push
ret
paddusw
jne
dec
add
or
or
or
addb
into
sub
mov
jnp
inc
sub
and
inc
fcom
mov
push
push
inc
inc
rolb
sub
outsl
jns
int3
sarb
in
mov
fcoms
and
in
push
xchg
xor
dec
lcall
test
inc
movsl
or
dec
gs
jg
dec
ja
xchg
mov
add
sbb
add
rcll
dec
pop
daa
sub
add
pushl
adc
cmp
das
adc
popl
adc
cmpsb
bound
adc
cli
adc
add
mov
jo
sub
leave
mov
add
pop
shlb
push
cld
ret
scas
insl
es
add
sub
push
push
es
jne
mov
mov
xor
les
jge
into
sbb
mov
xor
out
push
dec
jne
adc
in
incl
push
bound
mov
push
fsubl
and
shr
mov
or
and
xchg
jp
or
mov
test
ret
out
cmp
xchg
add
mov
insl
rcrb
cmp
repnz
or
or
or
and
loopne
sbb
fisubrl
scas
push
daa
loopne
test
inc
adc
out
push
or
mov
adc
loopne
add
mov
orb
xchg
ja
push
push
decl
inc
cmp
loope
fbstp
call
mov
and
sub
sbb
mov
add
mov
fisubrs
and
shlb
xor
and
sbb
cmp
insl
ficoml
outsl
sub
cmp
adc
mov
adc
out
or
pop
imul
add
dec
loope
addb
jae
xor
pop
int3
lret
sub
loopne
jne
pusha
jo
fdivrp
or
push
adc
inc
pop
sub
mov
cmpl
cmc
jge
icebp
fs
mov
inc
or
xchg
loop
mov
clc
xlat
fnsave
add
jb
sbb
mov
divl
ljmp
or
jg
std
jb
imul
mov
inc
mov
mov
mov
xchg
ficoms
js
xor
das
sarb
sbb
push
and
cld
dec
in
pop
int3
sar
sub
and
aas
jbe
lock
add
jmp
inc
add
inc
or
xchg
roll
jae
mov
ds
fdivp
sarb
adc
and
mov
sbb
adc
mov
sub
adc
or
sbb
adc
or
data16
inc
push
paddsb
mov
mov
fcmovb
sbb
sti
lret
int3
push
leave
stos
and
jge
push
push
pop
sub
lahf
les
packssdw
int3
xchg
sti
inc
fs
inc
enter
js
add
xchg
in
in
hlt
in
shlb
es
rcrb
adc
dec
stc
add
lahf
arpl
ret
jne
loope
lret
dec
repz
rcrb
icebp
xor
and
jnp
jae
inc
adc
cmp
mov
add
leave
repnz
jmp
inc
ds
shl
mov
mov
rcl
enter
out
hlt
hlt
popa
sbb
hlt
repz
jbe
imul
pop
xor
ror
lea
sbb
mov
inc
fmull
rcrb
cs
pop
data16
call
dec
mov
xor
lea
enter
loopne
pop
enter
sbb
push
outsb
pop
mov
dec
mov
inc
sbb
dec
or
push
in
fimuls
jmp
lods
fmul
pop
mov
sbb
fs
popa
imul
sub
stc
mov
xchg
mov
rcr
lods
fcomp
fcomp
fnstcw
pusha
ret
rorb
gs
inc
shl
and
dec
data16
or
loop
decb
out
and
pop
adc
out
inc
stos
adc
jnp
shll
mov
xor
fdivr
dec
std
inc
sbb
insb
jnp
ss
mov
and
inc
add
or
push
daa
or
inc
test
mov
sbb
leave
adc
or
or
add
push
ja
push
xor
jno
add
mov
lea
push
lods
or
adc
pop
pop
test
add
dec
in
mov
jg
push
add
mov
pop
ror
enter
inc
int3
int3
and
aam
mov
scas
icebp
cmpb
adc
shlb
lret
xchg
mov
add
aad
cmp
and
pop
add
je
and
mov
pop
inc
ret
push
out
push
sub
xchg
sub
xchg
xorb
jp
dec
mov
mov
adc
outsb
out
pop
mov
in
or
aad
xchg
movsl
lods
bound
mov
fbstp
loopne
in
or
jecxz
loopne
inc
mov
add
xor
or
mov
or
sbb
mov
test
lret
js
push
xor
rcrb
jne
out
addr16
mov
or
jne
daa
or
frstor
xor
inc
sbb
inc
aam
nop
into
loop
sbb
in
jmp
psubusb
shlb
movsl
in
int3
les
xor
or
repnz
ljmp
int3
lock
pop
cmpsb
int3
jmp
lret
shlb
insl
sub
fmull
sub
lock
and
sub
clc
nop
ret
sbb
clc
cmp
int3
fcomp
jle
inc
inc
fadds
xor
popa
mov
ja
popa
andl
in
in
in
repnz
lds
fwait
sub
sbb
ds
xor
mov
loopne
test
xchg
push
push
pushf
out
notl
push
clc
clc
rorl
xor
int
push
cmp
lock
test
push
push
lock
jb
dec
in
fcomp
das
les
sbb
dec
or
ret
jbe
mov
xor
andb
mov
pop
orb
andl
lcall
es
test
jo
jle
mov
cli
dec
roll
cld
push
or
add
stos
or
and
stos
icebp
pop
pop
aam
inc
or
or
push
aad
push
add
add
pop
pop
push
cmp
out
jmp
imul
xchg
inc
subl
mov
pmaddwd
mov
jl
and
adc
push
xchg
je
leave
js
mov
jecxz
adc
jbe
add
xchg
and
jns
in
or
inc
loope
jno
in
pop
jae
test
js
xor
sarb
roll
rorl
inc
les
adc
rorb
cltd
stc
movl
enter
loopne
test
pop
test
mov
mov
popa
shl
sbb
mov
fdivs
aas
imul
testl
in
jl
xor
and
in
clc
std
clc
cmp
mov
loop
add
loope
pop
fcomi
and
and
es
push
aaa
loop
adc
mov
or
shrl
push
inc
pop
int
pop
xchg
movl
cmp
cmp
inc
xchg
mov
jns
sub
push
es
fucomi
dec
aas
negl
arpl
loope
clc
add
mov
hlt
pop
and
xchg
cltd
xor
add
cmp
xlat
sub
and
repnz
jge
jp
inc
nop
inc
ja
test
les
imul
popa
inc
add
push
mov
lods
test
or
cmp
add
fwait
jno
add
cli
jb
adc
adc
clc
adc
xchg
mov
les
lds
fdivl
xor
ficoms
xchg
xor
aam
push
or
cmpsl
adc
jnp
adc
jnp
loop
loope
dec
add
cmp
add
or
cmp
sbb
xchg
lcall
mov
pop
es
jge
mov
push
pusha
jns
adc
fdivrl
dec
clc
es
lret
clc
sahf
repz
jge
sbb
mov
lds
xchg
jl
iret
and
add
cld
cld
cld
test
xchg
inc
push
mov
lret
leave
mov
lods
sbb
into
ljmp
push
test
call
pop
cmp
push
fldt
mov
add
inc
pop
cs
xor
mov
sbb
cltd
mov
sub
xor
and
clc
daa
xor
shrb
fcoml
cmp
clc
hlt
mov
into
inc
andb
mov
xchg
test
mov
int3
cmp
xchg
lock
push
cmp
add
enter
aas
mov
jmp
push
fsubs
dec
cld
addr16
cmp
sub
cmpl
cli
mov
fdivs
add
xchg
es
cmc
nop
pop
push
mov
notb
popa
inc
jb
negb
jbe
mov
rcll
xchg
call
jge
aas
xchg
xor
or
xchg
aam
cmp
jle
dec
adc
and
pop
mov
leave
add
leave
rcl
aam
enter
aam
fisttpl
xchg
aam
jle
jno
mov
rorb
inc
xchg
loope
pop
nop
mov
push
mov
jb
mov
inc
or
inc
je
enter
push
mov
cltd
lods
or
cltd
dec
test
xchg
sub
in
cmpb
push
mov
mov
sbb
mov
pop
cmp
sub
add
cmp
pop
jno
jne
out
inc
sub
mov
jle
mov
pop
add
mov
push
es
dec
lods
push
ja
xchg
daa
mov
cmp
push
insb
pop
dec
movsl
int
sbb
iret
js
inc
clc
test
xchg
mov
test
sbb
testl
lea
cmp
les
mov
dec
mov
cli
jnp
mov
mov
mov
or
mov
fwait
dec
jae
sub
mov
mov
mov
add
out
dec
inc
and
push
sbb
ficoms
cwtl
mov
cwtl
cwtl
or
adc
inc
mov
test
aad
divb
loop
orb
pop
shl
cld
lock
adc
inc
fsubrp
adcb
sub
lea
repz
or
add
bound
cmpl
pop
bound
ss
mov
shll
mov
cmp
daa
pop
mov
ret
les
outsl
shlb
leave
cli
and
mov
sarl
pop
and
js
sbb
lret
mov
mov
adc
dec
inc
mov
jge
or
lock
loopne
lods
adc
xor
jl
sub
clc
movsb
les
fdiv
and
push
lcall
rcrb
das
fadds
repz
ljmp
das
imul
push
lret
pushf
xchg
xor
aas
je
cmp
xor
ja
test
int
out
xor
pop
lock
shrl
xor
clc
inc
lock
add
fcomps
aad
clc
lret
mov
sbb
rcrb
pop
in
add
mov
packssdw
aaa
jno
movsl
adc
std
pop
xchg
jo
loope
add
outsl
leave
shl
mov
add
mov
mov
pushf
hlt
ja
movsb
jecxz
arpl
mov
es
inc
lret
loopne
ds
je
inc
and
xchg
and
or
inc
popf
push
insb
hlt
mov
shl
fstl
xchg
push
cld
xchg
dec
xor
sub
inc
pop
mov
xor
js
int3
add
jne
mov
mov
rcrb
inc
icebp
scas
rol
push
scas
rcrb
mov
xchg
dec
lcall
xor
je
test
lock
push
add
jo
call
mov
cli
outsb
and
movsb
xor
adcb
fwait
rcrl
mov
mov
xor
dec
enter
inc
or
mov
es
inc
insb
pusha
inc
or
add
push
sub
add
add
cs
adc
or
mov
int
mov
fcomps
ficoms
outsl
jecxz
loope
xlat
add
vaddps
loopne
out
inc
cmpsb
or
in
and
inc
jmp
ret
outsl
push
adc
and
or
cmc
jmp
ja
cmp
dec
mov
jb
lret
or
ret
fstps
jo
adc
shl
pop
sub
xchg
lea
lods
int
nop
ret
int3
adc
inc
pop
jo
adc
or
mov
js
push
mov
sub
xor
mov
mov
andl
jae
pop
or
sbb
lock
xchg
adc
sbb
loopne
add
jle
jo
add
jmp
stos
repnz
mov
sub
mov
imul
xor
cmp
icebp
sbb
add
jbe
popa
jmp
add
dec
cmpsl
sti
jae
lcall
lahf
dec
cmp
mov
and
sub
mov
in
subl
ja
or
and
clc
add
or
fmull
xor
mov
or
in
push
xchg
or
int3
cmp
dec
cs
push
or
push
or
pop
inc
stc
pop
rorb
cld
mov
pop
adc
inc
or
adc
insl
shll
leave
and
je
shrl
test
jb
and
jle
leave
adc
outsb
add
add
mov
or
jmp
mov
xchg
decl
dec
outsl
orb
adc
test
mov
or
sbb
lds
add
test
test
pop
fcoms
cld
fadds
pop
cmp
je
pop
pop
push
dec
inc
pop
or
mov
dec
sub
mov
es
sbb
mov
jns
and
mov
test
pop
roll
push
and
and
lods
dec
in
or
loope
je
jp
fst
pop
push
idiv
mov
or
and
loop
adc
or
stos
adc
xchg
push
orl
xor
add
adc
ss
ds
dec
cmp
adc
mov
jmp
outsl
arpl
mov
bnd
dec
xchg
jns
mov
sub
and
nop
rcrl
je
mov
fistps
outsl
xor
loope
add
and
sub
mov
dec
or
sbbb
dec
or
sub
pop
popf
push
ret
or
popa
jmp
push
and
and
lods
mov
pop
sub
adc
test
mov
lods
ss
arpl
cwtl
xor
mov
insl
jp
imul
ret
mov
cmp
and
add
mov
mov
xor
or
push
outsb
inc
sahf
rcr
add
mov
or
jae
adc
sub
gs
inc
stos
jno
pop
or
cmp
fcomps
xor
jne
je
pop
or
pusha
mov
jnp
cmp
dec
test
sbb
mov
loopne
push
cmp
inc
xor
rorl
inc
mov
add
or
movsl
add
mov
test
cwtl
and
adc
inc
sub
sub
js
jle
imul
inc
add
popa
sub
test
mov
push
dec
js
add
sahf
dec
sbb
testl
sub
add
aam
ds
xchg
pushl
rcr
cmpsb
cltd
arpl
cltd
fcomi
fnstenv
or
or
push
xchg
subb
inc
add
and
jne
add
jnp
js
sub
call
dec
add
dec
clc
clc
sti
and
ret
xchg
mov
jb
aaa
lock
jne
mov
movsb
cmc
loop
push
inc
movsl
xor
adc
outsb
push
add
movsl
add
ljmp
adc
sbb
or
mov
and
push
bound
adc
sub
idivl
test
test
roll
mov
jl
push
mov
sbb
mov
add
testb
push
testl
or
lock
loope
or
cmp
or
imul
push
adc
push
imul
call
or
rcr
out
in
push
rorl
adc
jae
dec
cmc
push
ret
and
add
movsl
add
test
inc
pop
adc
push
push
sti
daa
nop
rol
fwait
adc
pusha
and
xchg
cmp
mov
mov
ret
ret
inc
or
jecxz
mov
adc
dec
add
mov
sti
scas
subb
or
inc
adc
push
push
inc
add
or
orl
ret
sbb
daa
inc
jne
roll
aaa
add
rol
test
push
or
jmp
cs
dec
or
or
or
lea
out
ret
or
je
decl
inc
inc
add
jle
fstps
push
add
in
movb
sub
shr
leave
insl
and
dec
in
stos
lods
add
add
pop
rcrb
jo
jns
sbb
icebp
pop
push
sti
mov
mov
mov
sub
and
movb
shr
in
dec
icebp
and
sti
in
sub
bound
xchg
insl
cli
add
sti
mov
dec
sub
addl
cli
rcll
inc
add
jecxz
mov
das
fwait
sbb
aad
adcl
js
push
push
iret
subb
cmp
arpl
push
aas
and
or
mov
and
mov
sub
add
insb
test
add
adc
sbbl
loopne
jge
popa
je
or
or
add
add
adc
ss
add
and
add
sbb
or
push
lret
push
cmc
in
mov
jne
sbb
jmp
add
or
pusha
test
or
aas
das
fwait
ljmp
fcompl
aaa
addr16
push
shl
and
cmc
in
jno
movsb
sbb
test
sarb
cld
and
inc
jnp
and
mov
mov
hlt
dec
xchg
and
imul
lret
dec
xor
iret
icebp
dec
ror
mov
dec
adc
cmpsb
adc
enter
mov
test
cmp
adc
pushf
leave
and
gs
sarl
adc
or
push
xor
andb
push
xor
inc
or
pop
nop
insl
stos
daa
adc
in
movsb
mov
daa
xor
call
jge
cmp
mov
imul
xchg
inc
sbb
xor
mov
and
lret
mov
cmp
gs
insb
popw
sub
dec
jae
in
lods
imul
jns
inc
add
add
add
aam
fiaddl
or
pop
and
push
aaa
fiadds
aaa
push
dec
dec
mov
imul
in
jp
sub
xor
jle
adc
and
or
or
mov
sbb
inc
imul
imul
push
rclb
rorl
call
nop
inc
ljmp
mov
call
insb
scas
rcrl
fs
out
daa
sbb
sub
inc
xor
popa
xchg
sub
lret
sub
add
and
mov
sahf
mov
sbb
test
adc
lret
and
fisubs
add
sbb
jo
les
lcall
pop
sub
roll
pop
mov
add
mov
add
mov
push
pop
lods
and
sub
add
and
inc
mov
scas
pop
push
add
outsb
push
popa
xchg
popf
adc
sbb
sbb
cwtl
dec
test
jno
dec
jne
cli
notb
pop
insl
in
push
adc
cmpsl
roll
sahf
push
sbbl
testb
and
sbb
jo
add
stos
sbb
rcrb
test
jg
lock
movl
out
xchg
idiv
mov
mov
mov
mov
and
shrl
ja
roll
dec
inc
jo
jo
rcrb
mov
or
inc
add
sub
mov
std
popf
hlt
popf
jmp
lea
lea
loopne
lahf
cmp
pop
adc
adc
fwait
adc
ljmp
ja
pop
aam
cmp
enter
jnp
rcll
mov
mov
adc
xchg
inc
mov
jne
sbb
fcoml
xor
sub
jge
pop
dec
pop
nop
cmp
sub
test
jne
xor
dec
inc
aaa
test
xor
divb
shrl
imul
inc
cmp
je
pop
push
aam
add
and
psubusb
adc
jmp
xor
inc
gs
bound
cs
or
cmpsl
adc
repnz
add
inc
repnz
mov
jmp
inc
fcmovu
jmp
jo
add
pop
inc
fiaddl
movsl
adcl
push
and
dec
hlt
lods
mov
push
out
sub
cmpsl
push
je
mov
pop
popw
mov
mov
leave
jno
mov
push
mov
outsb
je
or
push
jnp
pop
xor
pop
sbb
testl
ret
dec
pop
pop
add
cmpsb
ret
mov
mov
add
nop
or
arpl
repnz
lcall
jge
inc
cwtl
sbb
xchg
add
xor
xchg
pop
in
cmp
cmp
sti
leave
jle
mov
rcrl
sbb
je
addr16
sbb
fs
xchg
sarb
roll
adc
rorl
arpl
loope
enter
jle
push
push
repz
or
sub
xchg
cs
sbb
mov
test
les
nop
lea
dec
mov
jo
xchg
inc
push
cmp
mov
mov
cmp
shrl
inc
insb
sbb
je
xchg
mov
push
mov
or
pop
add
mov
jg
call
cmpsb
pop
pop
das
mov
inc
or
and
pop
add
movsb
sub
push
stos
dec
es
mov
sub
stos
ja
inc
ja
es
lahf
xor
and
stos
sbb
push
lock
dec
mov
adc
rolb
fnstenv
add
mov
jmp
jp
std
fisttpll
movsl
in
lahf
enter
sarb
out
jo
lahf
lahf
fucomi
or
and
and
pop
sub
adc
jbe
fstpt
sarl
stos
stos
shrl
and
pop
or
js
inc
mov
push
pop
cmpsb
adc
mov
inc
mov
and
add
jne
js
pop
insb
leave
mov
mov
out
push
xchg
out
xchg
jns
push
in
decl
jge
sti
jbe
pop
jae
sbb
or
or
pop
and
xor
addr16
stc
add
mov
fsubrs
sub
lret
fnstcw
add
test
xor
pop
insb
outsl
mov
cmp
or
rclb
sbb
sarb
and
insb
xlat
stos
mov
cmc
add
push
test
sbb
data16
dec
ljmp
sub
sub
rdtsc
push
pushaw
mov
sarb
cmp
je
lds
push
in
mov
jl
lret
mov
outsb
or
mov
lods
mov
push
mov
mov
mov
popf
out
jmp
or
mov
mov
aas
mov
shr
loope
pop
or
and
iret
xlat
add
add
cmp
cmpl
adc
pop
lods
or
mov
ljmp
mov
push
xor
popa
cmp
adc
leave
and
jnp
add
xchg
movsb
movsb
sahf
outsl
mov
movsb
es
test
data16
xlat
xor
ds
test
dec
out
add
push
xchg
xor
shl
mov
add
add
jl
xor
xorl
je
jo
push
pusha
movsb
adc
rcll
ss
jl
push
sub
mov
xor
in
mov
mov
orl
fs
stos
jl
pop
jo
outsl
fsubrl
xor
leave
jmp
movsb
fs
inc
fs
jge
mov
sbb
lcall
fidivrs
cltd
xchg
mov
movl
xchg
dec
push
mov
shl
inc
arpl
sbb
adcb
xlat
sub
out
fdivp
fnstcw
stc
push
data16
push
jb
inc
jne
inc
es
sub
pop
lret
sbb
loop
sbb
cmp
adc
adc
aaa
push
inc
out
lods
sbb
and
jnp
sbb
ss
fldl
adc
ret
sbb
lcall
mov
shrb
sub
cltd
push
sbb
and
mov
or
arpl
add
xchg
fidivrl
std
int3
sub
pop
adc
or
inc
repnz
shl
repz
push
leave
cmp
sbb
sbb
pop
popa
sbb
jmp
push
mov
cmp
adc
iret
enter
popl
jb
and
test
pop
add
adc
push
mov
inc
pop
adc
dec
mov
jmp
mov
inc
pop
sbb
cmp
jns
xor
mov
icebp
pop
pop
mov
and
and
mov
jo
add
or
adc
test
and
call
and
push
add
xchg
ja
mov
enter
adc
ss
jne
push
mov
fcmovnb
bound
cmp
dec
test
sub
popf
mov
adc
xor
aaa
jne
xchg
loopne
roll
sahf
dec
mov
sarl
sub
sub
or
data16
jmp
arpl
arpl
inc
loop
je
add
xchg
pop
lcall
add
ret
xor
repz
movsb
dec
mov
ret
mov
dec
pop
popf
imul
pusha
rcl
dec
test
loope
push
lods
and
add
das
or
insl
lea
mov
test
dec
and
dec
push
fs
cmp
inc
xchg
movsb
aaa
and
jmp
cmp
sbb
out
jne
sub
rorb
sti
jmp
jne
cs
ds
nop
cs
xorb
xor
or
sub
scas
adc
loopne
movsl
xchg
orb
mov
xor
repz
imul
loope
pminub
ja
mov
hlt
push
adc
add
add
lfs
jbe
add
add
add
push
push
outsb
mov
ja
cmp
mov
int
jle
pop
outsb
inc
jno
mov
mov
add
or
or
add
and
subl
jle
jae
jmp
loop
popl
sbb
adcl
cmp
or
pop
inc
bound
outsb
jmp
scas
in
sbb
pop
adc
fcmovb
lea
les
sbb
push
add
add
mov
pop
xor
fldcw
or
in
lcall
or
nop
push
and
cmp
push
leave
mov
dec
dec
dec
xchg
pop
sub
add
lods
sti
scas
adc
mov
adc
mov
push
cmpsl
mov
add
add
in
mov
data16
sbb
fiaddl
in
and
out
xchg
push
sub
sbb
dec
nop
rol
subl
sub
mov
mov
stc
adc
jge
or
adc
mov
cmpsl
mov
adc
sub
daa
fstp
daa
mov
outsl
add
mov
movb
rorl
pop
loope
mov
xchg
mov
or
push
hlt
stc
std
sub
inc
es
addb
push
or
fstpt
call
sbb
sub
cmp
popa
test
sarl
adc
jmp
nop
insl
icebp
outsl
fucomi
pop
pop
mov
sarb
adcb
in
jne
andl
repz
xorl
es
daa
push
iret
mov
popa
je
adc
jne
jns
xor
movsl
xchg
adc
lock
shr
push
and
mov
fsubs
mov
sbb
pop
sub
inc
and
pop
xchg
les
mov
pop
enter
pop
fldl
clc
adc
jge
lock
fdivl
fmull
insl
lock
fadds
mov
test
jne
jge
bound
pop
decl
clc
cmpl
inc
xchg
mov
je
das
inc
loopne
dec
pop
test
icebp
add
in
dec
rolb
clc
mov
shl
sub
sbb
mov
cmpl
inc
add
mov
bound
adc
and
dec
fcmovnu
adc
xor
add
cwtl
pop
fistps
add
add
movsb
jbe
fiaddl
imul
popa
nop
leave
inc
aad
addl
mov
enter
std
jne
ljmp
cmp
adc
sub
or
insb
adc
mov
mov
mov
dec
add
sub
mov
aas
dec
stc
adc
add
push
pop
inc
inc
ficoml
jo
and
and
sbb
movsb
mov
mov
pushl
pop
pop
adc
push
and
sbb
js
sub
mov
or
ljmp
lahf
inc
mov
sete
add
fs
ret
mov
pop
or
loopne
mov
inc
sub
mov
jg
fstl
cmp
cmp
enter
loopne
sbb
sbb
js
icebp
ss
adc
jne
repz
sub
pop
pusha
mov
mov
push
add
push
push
aas
push
adc
sbb
fstps
leave
inc
add
leave
or
mov
sbb
or
sbb
xor
cmpsb
add
dec
pushf
adc
jns
idivl
adc
clc
fs
sub
cltd
mov
rcrb
jno
outsb
xor
mov
or
xchg
sub
inc
add
in
pop
mov
push
jno
jmp
test
sbb
xor
pop
or
out
mov
in
ja
jp
sub
sub
dec
xlat
add
mov
in
cmpsl
aaa
add
xor
jne
dec
clc
ja
repz
sbb
mov
push
push
or
sub
ret
fidivrs
cmpsb
push
add
cmp
mov
push
jae
mull
dec
add
mov
sbbb
ret
rolb
jnp
or
enter
jge
rcll
or
lret
shl
push
fidivrl
mov
xor
out
or
in
mov
outsb
sub
iret
jo
cmp
adc
pop
mov
enter
inc
mov
movb
xchg
sub
gs
enter
cmp
fmuls
imul
xor
cmp
std
mov
pushf
rorl
call
or
cmp
push
and
xchg
push
mov
sbb
xchg
mov
mov
mov
orb
sbb
stos
add
and
sbb
es
cmpsl
je
xor
insl
jbe
xor
data16
aaa
jbe
adc
mov
outsb
cwtl
outsl
push
xor
and
sub
dec
out
in
cmp
addr16
lahf
fs
shll
jae
nop
sbb
xchg
mov
test
adc
jnp
inc
lods
mov
pop
out
enter
xor
not
and
cmp
outsb
ljmp
movsl
adc
scas
sahf
sti
orb
mov
movsl
repnz
ficompl
push
add
mov
movsb
movsb
movsb
fwait
add
or
mov
mov
push
adc
mov
bound
test
daa
mov
xchg
fiadds
leave
sbb
mov
cbtw
pushf
leave
in
cmp
mov
push
dec
loopne
scas
lods
push
les
sbb
fs
dec
and
rolb
hlt
mov
cmp
jg
xor
sbb
hlt
pushf
in
adc
loopne
mov
shrb
add
sub
push
repz
insl
or
mov
adc
adc
insl
notl
adc
pop
jecxz
dec
fdivp
or
aam
jnp
aaa
orl
scas
adc
and
sbb
cmpsb
xchg
sub
shlb
cmpb
add
imul
fmull
jo
dec
dec
xchg
cwtl
test
add
xor
sub
sbb
inc
mov
dec
jge
and
in
xor
mov
shl
cmpsb
or
test
incb
jb
push
fcomps
jne
push
sbb
dec
les
imul
ss
aad
dec
mov
jg
adc
call
xor
clc
repz
sub
inc
sbb
lcall
fsubs
dec
adc
inc
stos
stos
add
push
pop
inc
xchg
push
lcall
inc
shl
sarb
popa
faddl
icebp
xor
mov
paddsw
xor
or
mov
mov
and
lea
cmp
and
mov
lret
adc
inc
icebp
mov
cltd
mov
shrb
leave
xchg
shlb
add
movsb
gs
inc
int
imul
mov
push
mov
pop
lea
add
hlt
pop
fsubs
aas
mov
mov
enter
jle
mov
dec
lcall
imul
mov
and
mov
or
push
cmp
rorl
mov
mov
mov
pop
out
pop
pop
fucom
fistl
lods
sub
add
cmp
arpl
ds
sbb
jmp
dec
sub
ss
add
xchg
xor
push
xchg
int3
dec
rorb
add
cmpb
jmp
mov
xchg
clc
xchg
dec
jmp
dec
adc
in
pop
in
mov
dec
mov
fistpl
inc
bound
ret
xorb
enter
cwtl
clc
sbb
nop
dec
mov
mov
je
pop
pop
inc
and
inc
or
push
and
rcrb
xchg
inc
pop
fistpl
adc
push
outsb
jl
or
lea
mov
and
jge
jmp
hlt
jns
or
mov
mov
test
outsb
jecxz
sbb
adc
orb
add
test
cmp
inc
aas
daa
fdiv
ret
mov
int3
or
lods
or
inc
add
adc
inc
outsl
or
xor
jae
andl
push
popa
mov
pop
sbb
mov
pop
cmp
jle
mov
sbb
mov
sbb
push
push
repnz
test
enter
or
lahf
dec
push
pop
cwtl
je
arpl
jge
jecxz
loopne
leave
adc
inc
mov
sbb
cmp
jmp
loope
or
jns
push
mov
lea
subb
inc
xor
mov
test
pop
or
sub
sti
outsb
pop
or
jl
push
cmp
jge
jae
add
sahf
and
mov
add
adc
pop
jo
adc
xchg
into
rcrl
jns
jl
and
xchg
push
das
fsubr
movsl
jl
adc
into
es
popl
xor
rclb
in
inc
mov
jnp
loopne
sbb
jns
or
inc
mov
arpl
movsb
loop
movsl
inc
js
sbb
sbb
mov
popf
sub
pop
cmp
mov
or
aas
pop
aaa
cmpsb
iret
es
in
jae
jecxz
add
jo
jp
jg
xchg
gs
jae
jle
lret
push
out
or
fucom
ds
xchg
call
push
jmp
pop
inc
call
call
xor
sbb
mov
loopne
loopne
mov
mov
pop
cs
test
xor
sbb
cld
xchg
ret
xchg
ret
jmp
and
pop
dec
cmp
dec
sbb
pusha
fnstenv
or
push
test
add
in
cs
jns
jmp
das
dec
cltd
mov
xchg
cld
adc
xchg
cmp
filds
or
loopne
mov
cmp
fisubl
sbb
popa
sub
jb
fsubrl
mov
push
and
cld
xorb
mov
fcoml
jmp
and
mov
fidivrs
push
adc
jg
xlat
or
shl
sub
jl
add
xor
loope
cli
arpl
and
cmp
call
push
and
or
jbe
and
pop
add
or
mov
mov
fs
mov
or
inc
test
dec
inc
repnz
mov
sub
pop
pop
add
cmpsl
lods
push
je
shl
xorb
ror
inc
adc
add
sub
orl
adcb
aas
mov
cmp
je
adc
push
jmp
xchg
cmp
stc
enter
pop
sub
adc
mov
add
addr16
in
rclb
inc
and
test
test
daa
xor
jle
imulb
dec
sbb
add
sbb
jge
mov
jge
and
xchg
push
dec
sbb
adc
inc
dec
test
lret
and
insl
mov
push
inc
mov
in
push
dec
je
sub
mov
sbb
pop
inc
cmp
push
dec
test
sahf
jg
xchg
test
pusha
fs
cli
xor
fwait
mov
ljmp
mov
xlat
sbb
shrb
shlb
push
xchg
lea
adc
xor
jmp
xor
mov
sub
mov
subb
push
mov
cmpsb
adc
inc
ret
add
pop
sbb
sbb
gs
inc
add
sbb
or
loop
jg
inc
cmp
cwtl
enter
or
push
movl
movsb
subl
aam
int3
cmp
jbe
push
test
int3
sbb
adc
jl
xor
imull
into
repz
stos
insl
in
cmp
pop
mov
add
push
mov
pop
repnz
sbb
sub
andl
pop
movsb
les
les
les
adc
paddsw
jo
cmp
jg
mov
out
mov
xlat
or
push
movsl
push
movsl
adc
sbb
add
mov
pop
add
xchg
push
test
popa
jb
xor
int3
test
push
sbb
dec
sub
and
or
ljmp
outsb
adc
mov
scas
push
mov
divb
shlb
push
pop
gs
enter
cld
cld
adc
inc
inc
pop
stos
pop
popl
mov
adc
and
mov
cmp
jns
add
ret
fs
shl
stos
not
scas
mov
je
in
and
xor
invd
xchg
dec
mov
cmp
push
sarb
out
pop
ret
ja
nop
dec
and
inc
jno
and
daa
push
xor
xorl
enter
lcall
loope
sbb
push
fdivrs
pop
inc
sub
push
mulb
jecxz
pop
adc
jne
enter
sbb
mov
enter
add
push
push
add
xor
add
sub
sub
gs
push
pop
and
mov
xor
dec
jno
cld
and
jp
pop
and
stos
insl
icebp
negb
push
enter
push
test
loopne
dec
dec
stc
adc
mov
push
jbe
xchg
pushf
lcall
cmp
mov
jmp
inc
add
sbb
add
or
sbb
pop
call
push
dec
aam
add
adc
add
or
addb
inc
js
xor
test
mov
mov
sub
xchg
xchg
mov
les
call
mov
loope
dec
sub
sub
jp
xor
add
add
scas
in
scas
jns
sbb
adc
and
push
sarl
add
fmull
ja
lods
cmp
cmp
inc
mov
mov
std
in
fsts
dec
rolb
mov
hlt
or
sbb
lret
lock
mov
shll
in
pushf
in
in
xchg
xor
aaa
push
in
push
jle
aaa
lret
mov
push
lea
je
mov
sarl
popf
sub
push
lock
pop
test
rcrb
sbb
and
sub
enter
hlt
je,pn
test
mov
push
mov
in
out
push
pop
xor
mov
loope
push
mov
or
jle
jnp
loope
sub
adc
insl
das
jl
imul
and
jl
hlt
ret
or
adc
or
icebp
test
jge
test
dec
push
ja
sub
jg
inc
xchg
inc
and
mov
icebp
add
ljmp
inc
fists
or
add
insl
dec
sbb
adc
arpl
xor
pop
push
popa
in
mov
adc
push
aad
pop
cwtl
mov
adc
clc
sbb
nop
sbb
push
gs
and
adc
dec
filds
daa
push
push
call
mov
scas
adc
inc
in
push
xor
loopne
les
test
stc
mov
loopne
lahf
bound
ds
push
in
mov
mov
pushl
insl
cld
xchg
loop
jnp
mov
jns
fstpl
push
mov
mov
push
cvtps2pi
mov
or
int
pop
pop
pop
leave
ret
xor
or
jo
mov
aad
insb
insl
inc
gs
xchg
ss
pop
xchg
mov
and
inc
mov
mov
aaa
icebp
cmp
adc
add
pop
xchg
inc
dec
mov
fists
dec
push
mov
xor
das
rcll
jmp
push
and
push
cld
mov
adc
mov
or
dec
cld
dec
loop
shlb
xchg
jo
cmp
or
mov
or
add
pop
jg
push
aam
add
push
lods
rclb
fdivl
test
outsb
push
push
push
test
testl
lahf
inc
fld
stc
pusha
mov
mov
add
test
and
daa
lahf
mov
push
mov
dec
lahf
push
in
mov
rorl
rorb
sbb
jns
rorl
add
test
jg
inc
daa
inc
or
push
jge
add
cmp
adc
inc
roll
cmpl
fsubrp
fnstsw
mov
mov
cmp
scas
add
nop
jo
dec
dec
in
xor
lcall
sbb
out
sbb
add
and
adc
addl
lret
int
leave
pop
mov
xor
inc
mov
hlt
hlt
push
push
pop
repnz
cmp
loop
aas
in
lea
cmp
xor
dec
jl
push
sbb
pushf
jl
pushf
push
nop
xchg
pop
sbbl
dec
fs
xor
or
sub
in
xchg
icebp
mov
mov
cmp
inc
mov
sub
sarl
mov
imul
pop
aad
in
pusha
inc
jbe
je
pop
inc
ljmp
cmp
jae
mov
adc
lock
pop
adc
loop
stos
and
cltd
cmp
sbb
insl
xor
mov
iret
pusha
clc
push
jne
fwait
add
xchg
icebp
inc
jmp
stos
shlb
push
bnd
outsb
push
pop
lahf
fstpt
in
push
pop
mov
push
out
lock
leave
mov
sbbl
mov
xor
adc
fldenv
ror
or
fadds
aam
dec
fcomi
pop
push
std
outsb
ja
mov
jnp
dec
jle
mov
popl
push
hlt
sub
stos
sbb
seto
add
lcall
pusha
xchg
into
test
ljmp
fbstp
add
ds
pop
inc
adc
aam
sbb
xor
lahf
sbb
inc
add
in
sub
inc
pop
or
add
adc
sbb
pop
adc
les
test
test
xlat
adc
or
sbb
sub
pop
add
xor
out
pop
pop
popa
shrb
xchg
in
mov
or
jge
add
lds
jmp
cmp
lahf
push
push
movl
add
pop
mov
in
add
adc
mov
stc
lret
cmp
out
pop
xorl
or
test
int3
fisubrs
sub
mov
subb
xor
iret
enter
mov
or
jne
push
lret
push
sbb
dec
loopne
sbbl
or
mov
xor
rorb
inc
jmp
jge
add
hlt
int
push
or
xchg
jl
xchg
cmc
and
insl
xor
pop
inc
add
adc
sbb
sbb
je
add
adc
jns
pop
add
sbb
inc
fwait
push
adc
mov
or
adc
jg
es
rcll
rorb
inc
mov
or
cmp
mov
les
dec
sbb
mov
cwtl
dec
loop
or
addb
lahf
in
adc
sbb
push
adc
mov
les
mov
addr16
stc
lret
push
adc
lea
mov
mov
push
ss
es
add
add
loope
sub
or
cmp
and
pusha
push
inc
repz
fiadds
add
ficompl
mov
ljmp
outsl
dec
addl
pop
orl
jg
outsb
insl
orb
sbb
loop
out
hlt
and
pushl
popa
mov
add
sbb
adc
mov
arpl
xchg
xlat
je
sarb
lds
cmp
adc
fbstp
repnz
dec
lea
and
xchg
js
mov
cmp
inc
idivl
adc
aas
pop
arpl
ljmp
fcomp
js
jmp
xor
sbb
adc
push
adc
xchg
inc
adc
mov
and
inc
adc
rcrl
fisttpll
or
enter
lret
scas
test
repz
jbe
and
mov
sub
scas
adc
cltd
and
pop
push
xrelease
dec
imul
das
lea
and
inc
repz
and
cwtl
loopne
in
fdivl
jno
sub
dec
jne
in
cmp
push
call
inc
mov
ljmp
cmp
and
mov
fildll
push
add
lcall
call
outsb
adc
hlt
add
addr16
dec
sub
inc
popf
mov
xorb
in
push
sarb
add
xorl
and
inc
or
movups
in
shr
inc
shr
mov
xor
and
jnp
rorl
rcrl
jl
lock
sahf
jne
xor
xor
mov
iret
mov
enter
loope
dec
jo
sti
std
adc
sub
inc
or
sbb
out
xchg
push
jnp
das
jmp
lahf
push
das
pop
push
mov
inc
cmpsb
adc
or
addb
dec
inc
inc
mov
jecxz
inc
or
test
mov
xor
mov
dec
loope
mov
or
inc
inc
bound
repnz
test
sbb
in
shll
arpl
aaa
push
int
mov
xchg
xchg
loope
inc
clc
sar
movsl
les
in
push
rcr
pop
jge
push
push
push
scas
cmpsl
cld
pop
jae
sbb
cmp
adc
fwait
outsl
mov
adc
nop
or
dec
test
and
add
fs
scas
adc
test
lods
popa
add
add
adc
adc
scas
lea
bound
xchg
xchg
lock
outsb
adc
add
xor
insl
push
mov
int3
sub
add
int
sbb
push
lcall
inc
sub
aaa
push
or
adc
and
lea
push
pop
lods
dec
pushf
mov
or
inc
and
sti
adc
adc
cmp
pushf
jae
pop
push
inc
fsubrs
dec
mov
inc
add
clc
xor
ret
lea
mov
xchg
jns
rcrb
scas
dec
push
mov
inc
sbb
ss
daa
cmpl
inc
es
fst
xchg
enter
xchg
dec
push
imul
mov
mov
test
test
scas
out
mov
lahf
xchg
push
fdivs
xchg
jmp
mov
add
mov
sbb
les
jl
lret
pushf
and
inc
dec
adc
or
pop
push
mov
into
xlat
sub
add
mov
out
xor
xor
ret
push
mov
cmp
push
push
xchg
sub
pop
js
adc
adc
popa
adc
mov
pop
jno
lods
pop
cwtl
loope
or
ss
movsb
sbb
shll
add
mov
or
cmp
popa
mov
jne
inc
push
cmp
mov
lods
or
lods
add
out
call
lods
out
test
inc
subl
testb
loope
jnp
cmc
arpl
insl
cwtl
mov
xchg
mov
push
sub
or
xchg
aam
jae
mov
popf
movsb
mov
xor
push
sti
push
inc
fmull
rcrl
mov
insl
pushf
add
push
nop
ds
aas
inc
jmp
dec
stc
imul
xchg
push
pop
xchg
push
dec
adc
or
sub
je
push
mov
aas
or
add
aas
inc
jge
cld
xchg
xchg
arpl
mov
bound
insl
std
clc
dec
je
pop
or
add
or
jae
xor
lahf
movsb
or
xchg
mov
xchg
xchg
punpcklwd
and
adcb
pop
fmull
cmp
fs
sbb
mov
sub
push
push
fsts
mov
or
push
loopne
aaa
aas
and
push
notl
arpl
jo
jae
aam
bound
jo
and
inc
fisubrs
fisttps
mov
mov
jl
sub
loope
adc
and
enter
inc
push
pop
adc
inc
cmpsb
sbbb
cwtl
sbb
jecxz
push
jecxz
sbb
inc
sub
aaa
dec
add
ss
mov
or
fstps
fnstsw
lea
mov
add
sbb
mov
mov
rcrl
sub
leave
sbb
add
lea
sub
add
xchg
mov
addr16
lcall
lds
push
sbb
shrb
test
add
push
xor
jecxz
add
inc
inc
and
imul
lods
sub
jg
enter
lea
jno
add
call
adc
push
fstpl
sti
cs
inc
xchg
add
xchg
jno
iret
jno
loope
loop
cmp
lar
lods
leave
and
lods
nop
bound
sti
sub
add
aaa
lcall
adc
push
or
push
add
or
aam
and
daa
lds
pop
push
and
lahf
pop
xor
pop
pop
xchg
mov
cmp
mov
pop
or
mov
jp
mov
mov
adc
jle
outsl
inc
movsl
out
pop
test
inc
adc
cmp
dec
movsl
xor
adc
sahf
leave
sub
js
and
popa
ret
mov
xor
push
inc
lods
cwtl
aas
loope
lret
sbb
std
adc
and
inc
aas
or
aaa
mov
mov
pop
addr16
add
xlat
dec
adc
cmpb
sub
pop
or
add
popf
pop
daa
xor
adc
lods
or
ficoms
ss
push
enter
mov
je
cmp
xchg
add
jnp
add
lock
jmp
cmp
int3
int3
nop
mov
inc
sbbb
adc
xchg
ja
adc
aas
inc
pop
pop
and
jl
into
jae
or
int3
mov
adc
add
sbb
sbb
sbb
mov
cld
cwtl
adc
leave
push
push
jae
imul
sub
push
push
out
lods
insb
dec
dec
mov
push
pop
xchg
push
icebp
mov
xchg
xchg
movsl
cmp
xchg
push
ds
mov
add
aaa
mov
push
je,pn
or
or
cmp
call
pop
push
jne
arpl
inc
imul
test
sbb
loopne
enter
pop
stc
nop
mov
mov
mov
mov
mov
add
inc
push
clc
inc
add
adc
pop
lods
pop
add
outsb
iret
cmp
sub
adc
mov
or
adc
adc
in
dec
pusha
das
adc
sbb
dec
or
adc
pushf
or
and
xor
sbb
rolb
je
or
inc
les
fsubrl
push
mov
xchg
push
dec
pop
inc
clc
adc
mov
sbb
lea
push
mov
cmp
insb
inc
push
cmpl
test
xchg
popa
push
cmp
outsb
sarl
pushf
jne
inc
xchg
insb
mov
or
or
inc
inc
outsb
int
loopne
es
push
cmp
dec
lret
dec
pushf
inc
xor
sti
fiadds
mov
inc
ss
sub
mov
push
adc
pusha
shlb
mov
mov
daa
faddl
mov
adc
mov
adc
cltd
mov
or
add
jl
mov
out
pusha
adc
arpl
xor
sti
test
and
adcb
cltd
fcoms
enterw
mov
ja
add
dec
jno
pop
or
rclb
rcrb
dec
rclb
shlb
adc
rorb
jmp
xor
dec
sbb
pusha
roll
inc
mov
xlat
jecxz
ret
inc
mov
addr16
sub
lea
dec
stos
gs
add
enter
or
inc
je
or
xchg
inc
and
pop
dec
and
fnstenv
xor
mov
nop
mov
pushf
jmp
popf
aam
test
add
sub
add
pop
lds
pop
add
in
sbb
rclb
jle
test
out
cmpsl
in
or
cltd
imul
cmpsl
faddl
cltd
pusha
pop
jge
xchg
pop
dec
dec
jae
leave
out
push
popa
fidivl
lret
jge
mov
push
or
add
loopne
or
aas
push
add
xchg
mov
stos
xchg
xchg
sbb
stos
add
sub
dec
pop
pop
pop
mov
cmp
mov
inc
cltd
pop
fwait
lcall
sbb
inc
sbb
loopne
imul
mov
shrl
sub
cmpb
outsl
sub
xor
in
test
push
mov
fwait
xor
xor
daa
cmp
aaa
jmp
adc
in
push
add
sbb
popf
add
gs
mov
popf
xchg
dec
pop
mov
mov
sbb
test
loope
jo
and
sbb
xchg
leave
sbb
cs
or
pop
xor
or
push
jbe
or
mov
sub
imul
xor
nop
or
dec
pop
push
rol
lcall
inc
in
add
sub
jo
pop
loopne
dec
push
xor
movsl
xchg
add
pop
mov
loopne
daa
insb
inc
sbb
inc
push
sbb
sahf
dec
leave
insb
in
sbb
add
and
leave
mov
pop
inc
sbb
movsl
mov
mov
faddl
dec
dec
addr16
and
add
cmc
ret
ja
fmuls
pop
sbb
mov
shl
addb
xchg
xchg
orl
arpl
jge
adc
xor
lea
sub
repz
aas
out
int3
xchg
jo
pop
shlb
movsl
aaa
inc
aaa
loope
les
repnz
xor
push
adc
pop
add
les
dec
xor
and
mov
les
pop
jnp
or
sbb
cmp
cmp
icebp
jnp
aam
rorb
pop
adc
mov
faddl
adc
pop
jae
cmp
mov
daa
dec
nop
sbb
add
es
push
xor
adc
bnd
mov
and
lods
xor
jmp
jle
jo
sub
mov
push
stos
adc
and
push
xlat
stc
in
es
popw
fimull
jmp
insl
add
dec
push
gs
push
sbb
in
cmp
sbb
fisubs
sbb
cltd
rep
add
mov
cmp
dec
es
push
int3
mov
inc
addr16
cmp
iret
adc
mov
push
xchg
sub
call
dec
dec
andb
fcomps
gs
xchg
pushf
push
arpl
inc
aaa
mov
out
aaa
inc
mov
add
ret
dec
adc
push
sbb
and
stos
add
inc
mov
push
aad
mov
scas
pop
pushf
push
inc
outsb
nop
orb
loopne
sub
adc
cmp
dec
aas
in
in
imul
imul
jmp
push
mov
mov
test
js
cmp
or
insl
push
push
frstor
xlat
xchg
out
dec
adc
into
in
or
imul
cmp
mov
mov
in
test
jno
push
and
jg
xchg
pop
add
movsb
push
mov
andb
pop
jmp
or
call
or
pop
dec
push
call
and
cmc
test
mov
push
add
pop
or
or
rolb
push
call
sbb
or
and
push
sbb
movsl
mov
dec
pusha
and
adc
xchg
push
rorb
xchg
cmp
lea
pop
mov
sarb
rcrl
mov
mov
jmp
stc
test
rcr
jl
or
and
fstpl
or
int3
je
push
movsl
adc
call
add
fisubs
xchg
lods
movd
insl
xchg
mov
and
es
sbb
pushf
loop
push
sarl
fdivl
mov
xchg
push
pop
sub
xchg
hlt
jmp
fisttpll
mov
dec
dec
call
jg
dec
push
fcmovbe
mov
inc
adc
adc
mov
push
shlb
sti
int3
mov
iret
in
mov
mov
xor
xor
push
mov
ljmp
dec
push
jmp
mov
int3
mov
mov
movsl
lret
push
xor
cmovge
xchg
aas
test
pop
cmp
pop
movups
push
xor
and
sbb
imul
loop
mov
test
rcrl
mov
into
inc
daa
dec
in
xor
or
inc
lods
mov
pop
pop
inc
or
daa
fisubrl
inc
lcall
clc
push
jns
add
test
pop
movsl
loopne
push
es
push
xchg
dec
and
push
pop
lds
pop
or
jg
dec
sbb
loope
push
pop
jmp
ja
xchg
mov
pop
aaa
popa
or
cmp
fsubs
and
inc
inc
and
sbb
push
or
jmp
cmp
aam
jo
inc
jge
fucom
popa
jbe
mov
nop
sub
std
xchg
push
ret
push
pop
clc
arpl
pusha
cli
sub
jns
dec
add
jg
jne
nop
add
add
xor
inc
mov
adc
fs
les
das
sub
xchg
push
enter
jmp
mov
inc
and
js
adc
roll
inc
xor
add
adc
inc
mov
push
loopne
punpcklbw
popa
cld
mov
sub
gs
cli
pop
fidivrl
fldt
xchg
dec
rorl
ss
lods
pop
ss
xchg
xlat
sbb
cmpsb
xor
roll
push
add
add
mov
cld
inc
push
push
pop
push
or
or
or
push
movups
adc
insl
jns
adc
sub
adc
or
sbb
add
lret
jge
out
sbb
or
push
leave
jecxz
aad
or
lods
and
mov
test
int
xor
cmp
mov
loope
jae
or
inc
fadds
pop
mov
xor
test
subb
or
imul
push
add
test
dec
cld
je
mov
adc
adc
stos
sbb
mov
inc
icebp
dec
add
adc
and
lock
mov
cwtl
shlb
lcall
pmulhw
sti
leave
hlt
xor
cmp
outsb
hlt
hlt
pop
xor
xchg
or
pushf
fistpll
cwtl
cmp
mov
hlt
xor
test
xchg
adc
sbb
loopne
and
popa
jns
add
sbb
jp
test
stc
sub
mov
dec
mov
push
out
imulb
mov
gs
ret
data16
push
mov
insb
sbb
repz
dec
ret
sarl
adc
adc
add
enter
mov
lea
mov
ret
xchg
sbb
jns
test
mov
pop
jb
lahf
mov
mov
enter
and
push
push
sbb
pop
test
sbb
mov
imul
scas
mov
es
push
jo
pusha
push
adcb
icebp
push
cmc
xor
jle
mov
add
mov
adcb
es
cmc
inc
jmp
test
jmp
stos
cmpsl
xor
pop
mov
sbb
xlat
fildll
push
dec
mov
and
xor
add
xlat
add
loopne
int3
push
add
cs
xchg
lods
js
test
std
cmp
sub
adc
in
aaa
jle
push
das
and
lods
push
ja
xor
mov
inc
cli
out
cmp
or
mov
popa
add
mov
add
jmp
gs
mov
inc
nop
loope
pushf
imul
pushf
mov
popa
inc
lods
cmp
call
or
jns
dec
dec
xchg
xchg
add
dec
cmp
movsl
dec
leave
enter
push
push
nop
nop
nop
xor
scas
or
mov
xlat
mov
mov
nop
push
jecxz
pop
icebp
int3
xchg
mov
inc
sub
adc
and
or
add
and
push
or
xchg
cs
add
jo
inc
cmpsb
mov
fsubr
or
push
add
adc
cmp
mov
pop
pop
outsb
inc
or
jns
iret
add
sub
push
push
add
mov
fadd
push
adc
sti
mov
jg
fcoms
ret
adc
fcomp
jo
popa
fcmovnb
aad
pop
inc
int
cmpsb
dec
cmp
gs
cmpsb
add
and
pop
inc
movsb
push
inc
ror
inc
leave
and
add
jmp
aad
loop
or
and
add
fcoml
add
stc
jae
inc
mov
sub
dec
xchg
cmp
filds
roll
loopne
aam
daa
jne
ja
adc
xor
jns
cmp
inc
sbb
sbb
rolb
jb
and
pop
leave
fdivr
mov
sbb
adc
fdivrl
add
and
andb
xor
mov
or
xlat
aad
mov
sub
scas
nop
lahf
jmp
adc
cmp
lea
shlb
in
jecxz
dec
int
pop
ss
loop
sub
jae
jge
mov
push
add
or
out
or
in
mov
add
and
add
add
or
fdivrl
repz
popa
lcall
ret
mov
sahf
lret
test
pop
enter
adc
add
outsb
subb
dec
and
je
add
sub
dec
dec
pusha
mov
bound
adc
push
sbbb
and
and
stos
push
stc
into
cld
adc
arpl
pop
faddp
das
arpl
out
jne
addl
push
pusha
test
and
cltd
lods
push
into
or
xor
cmp
adc
xor
sbb
mov
and
push
aaa
and
dec
and
adc
sub
inc
xchg
sub
lods
sub
sub
xor
xor
sub
sbb
fs
inc
xchg
cmp
cltd
inc
xchg
sub
inc
inc
xchg
sub
dec
xchg
sub
dec
push
dec
sub
push
dec
fs
inc
xchg
pop
dec
pop
dec
cltd
inc
xchg
sub
fs
xchg
sub
cmp
cmp
sub
je
fs
inc
xchg
js
jl
out
dec
or
mov
pop
and
test
pop
and
mov
jns
inc
mov
nop
xchg
sub
inc
inc
inc
cwtl
sub
fs
mov
or
cld
test
add
pop
outsb
add
fidivrs
or
or
movsb
add
push
adc
sbb
les
lahf
loope
push
push
push
add
add
add
and
push
and
jb
inc
adc
or
in
leave
and
xchg
sbb
sub
xor
xchg
sbb
sbb
xchg
sbb
xchg
cmp
leave
xchg
sbb
inc
dec
dec
sbb
xchg
sbb
push
pop
xchg
sbb
xchg
pop
pusha
leave
xchg
sbb
fs
sbb
je
pop
or
cmpsb
imul
push
inc
mov
add
ja
nop
orb
xchg
cwtl
add
add
pushf
mov
and
adc
add
xlat
ret
inc
and
loop
xor
push
imul
pop
in
mov
push
mov
outsl
push
add
aam
insl
sbb
lock
sub
or
adc
aad
cltd
ret
cmp
xchg
popa
clc
mov
cmp
shl
clc
mov
lea
pop
and
enter
lock
inc
loop
add
sahf
stos
jecxz
adc
outsb
inc
sub
xor
cwtl
sub
push
les
jb
outsl
sbb
sbb
in
add
loopne
pop
add
or
sbb
out
mov
fmull
push
insl
sarb
je
cmp
fisttps
fiadds
cmp
dec
lret
in
sub
and
cmp
adc
mov
out
mov
aas
mov
adc
mov
cmp
rcrl
lds
cmp
pusha
in
adc
xchg
in
hlt
ret
xor
leave
mov
pop
adc
out
adcl
nop
pop
cmp
imul
and
sub
cmp
aas
gs
mov
cmp
cmp
es
pop
or
adc
arpl
loop
xchg
loop
loopne
add
xor
adc
stos
push
mov
je
pop
add
push
add
add
loop
loopne
cmp
ja
lea
xor
arpl
rcll
pop
push
cmp
mov
mov
mov
dec
sub
pusha
push
and
dec
xchg
cmp
xchg
pop
sbb
mov
lock
mov
add
pop
lock
xchg
push
es
mov
push
adc
adc
and
adc
push
lods
sub
enter
sbb
push
enter
push
and
xor
mov
enter
add
enter
push
add
test
sub
test
enter
sub
enter
das
push
jns
adcb
pop
and
pop
sbb
pop
push
lock
pop
cli
popa
lock
fcoms
cltd
pop
pop
cmp
ficoml
mov
call
call
add
out
mov
addb
add
aas
pop
jg
mov
cmp
mov
adc
or
lret
add
inc
adc
add
lret
adc
and
and
adc
adc
and
adc
sbb
nop
gs
sbb
and
gs
in
sbb
sbb
add
nop
sub
cmp
sub
gs
in
and
and
adc
nop
xor
lahf
jnp
addb
sbb
mov
push
push
inc
inc
mov
outsl
fadds
fldcw
sub
fimull
push
mov
add
jp
into
add
rclb
dec
or
pop
test
adc
clc
mov
leave
adc
ret
ret
fwait
arpl
mov
faddl
adc
or
and
outsl
jle
insl
loop
cltd
cmc
hlt
movsb
lret
push
cmp
adc
adc
js
imull
push
add
sub
add
cmp
loopne
mov
sbb
mov
and
xchg
xchg
jg
shll
in
movw
daa
pop
mov
adc
cmpxchg
cs
jmp
push
jo
xor
nop
xor
sahf
jg
pop
mov
fcmovnu
dec
cli
xor
push
call
xor
hlt
jo
pop
rolb
fcom
pusha
add
pop
sbb
dec
or
sbb
mov
in
push
add
jne
sbb
mov
pop
mov
xchg
pop
adc
mov
enter
adcb
pop
pop
push
and
rorb
add
add
adc
imul
pop
cmpsl
bts
jmp
shr
add
cs
subl
out
mov
popa
int3
dec
out
pop
leave
pushf
lahf
mov
xchg
or
in
xchg
lea
xchg
call
sbb
lods
and
inc
and
hlt
or
pop
loopne
mov
sbb
inc
adc
mov
lock
test
out
add
adc
or
adc
adc
push
sbb
xchg
iret
call
dec
je
lret
test
movsl
dec
mov
dec
jle
sub
adc
adc
mov
testb
imul
mov
cmpl
add
test
test
pop
jmp
inc
adc
cmpsl
fidivrl
dec
clc
in
lods
icebp
add
loop
btc
sbb
sbb
push
mov
std
nop
push
xor
cmp
fmul
ret
pop
fists
push
sbb
adc
cmc
addr16
adc
add
push
adc
pop
adc
pop
pop
sub
inc
mov
add
sbb
in
push
mov
cmp
les
or
add
push
inc
jb
sub
sbb
inc
pop
pusha
test
imull
fisttps
sbb
std
fs
jbe
loopne
jg
mov
dec
stos
sub
inc
rcll
or
adc
jnp
cmp
inc
add
test
adc
push
roll
or
mov
sbb
lcall
popa
mov
hlt
dec
sub
pusha
lahf
outsl
xor
add
xor
ret
aaa
pushf
sbb
and
and
cld
add
test
jecxz
mov
movsb
rolb
test
movsl
pop
inc
sub
cltd
addr16
jecxz
imul
call
and
push
aad
or
add
dec
sub
outsl
adc
js
dec
xorb
jge
fwait
push
roll
rcll
out
cmp
mov
jmp
pop
inc
pop
mov
adc
add
sub
cmp
push
mov
dec
fisubrl
sbb
add
fcoml
and
popf
pop
mov
hlt
cmp
dec
rcrb
js
sub
movsb
pop
mov
cwtl
ret
inc
mov
outsl
ret
enter
lea
pop
xchg
jmp
add
xchg
add
call
sub
popf
mov
je
xor
ret
pop
cmp
or
ret
popl
enter
inc
push
add
arpl
dec
mov
dec
push
or
jne
mov
fisttpll
addr16
ja
push
cmp
sub
cmp
cmp
mov
mov
rcll
xor
adc
js
pop
jmp
push
pusha
sbb
movsb
test
fnsave
daa
aad
lods
dec
inc
stos
add
popa
shll
inc
sahf
subl
push
cmp
adc
push
lea
sbb
pop
dec
xchg
mov
mov
inc
std
adc
cmp
adc
cwtl
adc
lock
adc
je
test
push
push
aad
mov
mov
loop
and
add
mov
mov
cs
mov
xor
mov
add
mov
sbb
inc
fdivs
jno
and
stos
xchg
sahf
int3
ret
nop
fwait
popa
add
pusha
fsubl
sub
adc
jns
lock
xor
dec
call
pop
out
subl
and
push
dec
lea
testl
adc
xor
jns
or
mov
inc
sbb
xorb
pop
push
aam
rcrb
aas
les
lods
orw
sbb
mov
jl
add
or
aam
test
loop
cmp
mov
ljmp
inc
fstl
imul
add
rorl
sub
lea
inc
push
jno
xlat
cwtl
cs
test
daa
inc
mov
lock
sbb
or
fildl
aas
shll
or
mov
inc
add
add
clc
ljmp
xchg
mov
outsb
xor
pop
inc
or
or
or
aaa
mov
fwait
mov
or
je
pop
je
push
fsubrs
sbb
les
sahf
ss
adc
ds
jmp
mov
add
rorl
rolb
inc
enter
inc
inc
int3
xor
push
rcrb
and
aam
push
shl
push
push
push
sub
fcompl
mov
xor
jge
mov
dec
pop
jg
add
add
movnti
test
inc
in
inc
adc
jae
in
xchg
fadds
pop
sbb
xlat
xor
adc
inc
stc
cld
adc
and
add
push
repnz
clc
cwtl
and
xchg
nop
les
or
in
xor
jmp
cmp
adc
ret
pushf
jl
jg
pop
inc
or
xchg
add
pop
push
xorl
or
outsl
pop
xchg
outsl
lds
adc
and
inc
sbb
push
mov
jle
arpl
push
in
xorl
inc
and
leave
inc
sbb
jbe
push
repnz
arpl
or
add
add
sub
sub
jmp
push
cmp
fsubl
test
xlat
adc
or
jge
push
jo
fistps
pop
lods
sbb
pop
jg
pop
call
in
add
push
add
pop
sbb
add
jb
inc
sbb
das
and
sub
hlt
repnz
jae
xchg
clc
or
aas
popa
inc
sub
add
clc
shrb
test
clc
outsb
jmp
das
jb
addl
nop
jge
xchg
lahf
and
push
clc
cmp
adc
pop
andl
incb
popa
sti
rcrb
movsl
cmp
add
and
pop
mov
pop
push
xor
ret
sub
adc
dec
or
sub
cwtl
andb
mov
push
stos
mov
jnp
aaa
push
pop
mov
movsb
idiv
adc
xor
insl
push
mov
adc
int3
dec
test
add
and
dec
sub
sbb
fdivs
add
cmp
jg
jmp
addb
mov
sti
or
mov
jmp
movsl
movsl
add
stos
call
lods
xchg
les
les
or
shlb
or
mov
mov
push
sub
stos
push
idivb
mov
cmp
cmpl
jno
sub
mov
add
in
xchg
push
inc
test
int3
rolb
repz
push
cmp
jmp
daa
mov
jg
or
es
jp
add
es
mov
jmp
or
iret
je
jno
pop
lods
and
js
jle
bsf
jb
jb
jle
movsb
invd
mov
or
inc
movsb
ss
push
arpl
mov
inc
pop
push
and
dec
or
push
jecxz
ret
sub
jno
movsb
mov
out
dec
mov
lahf
test
add
sub
imul
ds
adc
adc
cmp
pop
jnp
nop
push
xor
es
push
adc
in
cmp
lcall
stos
pushf
adc
imul
push
cmpsb
pop
push
decl
dec
add
call
roll
rcl
push
and
adc
adc
repz
inc
pop
nop
dec
push
jo
inc
pop
add
jl
repnz
cmpsb
adc
push
hlt
push
cld
dec
shll
add
or
sbb
and
addl
jo
imul
dec
or
pusha
je
pusha
add
lcall
data16
cmp
pop
adcl
ja
push
mov
mov
es
mov
out
pop
rdpmc
cmp
mov
jbe
das
jns
pop
mov
in
dec
call
push
or
inc
popa
ficoml
stos
insb
add
outsb
fildll
adc
cs
ss
inc
cmpsl
mov
adc
clc
andb
add
js
add
push
test
push
loopne
andb
jmp
imul
push
or
bound
adc
scas
sub
add
xchg
enter
and
test
push
lea
add
add
pop
pop
pop
cmp
fcoms
nop
das
iret
mov
fsubs
shlb
fdivr
in
and
lods
shlb
les
out
leave
fdivrl
fwait
add
out
adc
pop
and
inc
sub
xor
xchg
inc
loopne
xor
jmp
jb
and
add
cmp
mov
xor
cmpl
bound
gs
and
in
add
pop
enter
jl
mov
or
je
shll
cmp
dec
xchg
or
mov
shrl
lods
fwait
shlb
ljmp
loope
push
and
sub
add
add
cmpsl
movsl
jae
or
mov
sbb
test
mov
addl
dec
mov
xor
sub
xchg
push
imul
inc
dec
adc
push
jecxz
imul
xchg
cli
test
jae
or
jl
sbb
sahf
xchg
adc
mov
inc
sbb
bound
fdivrs
sub
jp
fmull
push
pop
mov
nopl
or
dec
popa
or
add
outsb
inc
enter
jbe
push
adc
inc
movsb
or
lods
andb
or
ret
leave
or
and
enter
inc
mov
adc
dec
shr
sub
fadd
gs
xchg
je
int
lds
inc
lcall
fadd
nop
xchg
inc
outsl
xchg
push
push
push
push
cmp
repnz
add
add
int3
lds
xor
les
jne
or
inc
dec
xchg
xor
pop
jmp
mov
add
repz
mov
push
inc
lcall
test
push
popa
sub
sbb
adc
push
jo
cmpsb
sahf
add
vpminsw
or
je
cmp
jb
lret
mov
adc
jmp
nop
jbe
pop
and
add
or
pop
or
cmp
mov
lahf
cmp
jo
rorb
add
fistpll
adc
pop
gs
mov
fistpll
push
out
xchg
test
add
sub
test
mov
fildl
push
push
lret
sub
mov
add
pop
popa
fistl
xchg
sub
sti
lret
pusha
xchg
inc
jmp
and
jne
or
mov
out
adc
pop
repnz
jmp
in
sub
fsubl
sub
jb
fsub
add
movsb
stc
or
setb
es
test
jecxz
clc
adc
dec
push
jb
sbb
rolb
xchg
inc
add
xor
fdivrs
sbb
push
lock
or
add
dec
je
in
add
mov
push
adc
adc
push
fldl
sbb
popa
push
fistps
or
in
inc
adc
add
fisttpl
cmp
mov
or
popa
movsb
movsl
outsb
and
sahf
adc
add
and
popa
mov
enter
sbb
aam
movsb
and
aam
inc
in
incb
sbb
pop
xor
sub
add
notl
aas
leave
rcll
adc
adc
push
and
in
adc
or
push
out
lea
dec
push
adc
or
add
arpl
cltd
push
jle
or
faddl
xchg
je
jns
or
fucompp
call
sbb
add
jo
leave
fdivrl
xor
adc
inc
lcall
shlb
orb
add
dec
mov
roll
or
xchg
mov
outsl
sbb
and
testb
daa
shr
scas
sub
push
add
testb
insl
mov
test
add
jae
xor
stc
lcall
inc
daa
inc
jns
adc
xor
daa
add
loopne
rolb
jge
lcall
adc
add
fnstsw
xorl
xor
push
repnz
dec
add
addl
mov
sub
adc
aam
stc
add
pop
aam
dec
in
add
popa
test
mov
push
movsl
scas
sbb
frstor
mov
adc
mov
dec
sub
mov
mov
add
push
inc
cmp
cmp
lock
adc
adc
nop
fcmovne
jbe
and
shll
adc
push
mov
dec
in
push
nop
pop
add
or
xchg
add
fmuls
adcl
adc
push
jg
adc
jae
xchg
cmp
mov
jl
adc
xchg
and
inc
lods
addr16
sti
fdivs
sarb
hlt
incl
in
add
int3
pop
enter
jmp
loope
and
data16
sbb
movl
inc
fsubs
out
mov
mov
cmpl
adc
dec
insb
pop
fwait
cmp
ja
jae
movb
es
fistl
pop
lret
lret
dec
mov
cmp
fwait
adc
cmpsl
mov
push
nop
sbb
sbb
std
loop
jne
xchg
cmp
stc
mov
and
bnd
mov
in
in
loop
mov
push
dec
push
inc
xchg
rcrl
add
xchg
add
sub
pop
dec
fistps
mov
adc
add
mov
xor
mov
mov
add
mov
push
or
sarl
add
sbbb
add
and
push
pop
addb
add
xchg
inc
or
in
nop
or
mov
or
pop
and
push
stos
or
push
pop
aas
bound
add
mov
xorb
mov
xchg
pop
cmp
mov
mov
nop
out
ret
pop
je
add
inc
imul
or
mov
or
sahf
sahf
sub
add
or
push
cld
pop
incb
xor
ret
dec
adc
add
jmp
or
add
data16
lods
pop
mov
cmp
or
loopne
std
test
push
add
dec
sub
pop
aas
jle
pop
and
add
adc
push
sub
or
push
or
icebp
and
mov
mov
lods
popa
pushf
es
mov
adc
add
jmp
mov
or
inc
je
test
test
jge
jg
cmp
jae
or
jae
shld
shl
ret
mov
mov
loop
jo
add
xchg
sbb
outsl
pop
andb
xchg
xchg
add
push
dec
adc
inc
and
sbb
or
data16
int
addr16
inc
enter
dec
arpl
mov
mov
and
in
mov
add
sub
xchg
adcl
pop
push
inc
imul
out
sub
shr
add
add
dec
sbb
mov
xlat
inc
je
ficompl
es
push
mov
testb
rcll
imul
sarb
jbe
xor
add
inc
add
out
sbb
or
xor
nop
inc
enter
enter
leave
or
and
test
stos
test
jo
movsl
or
mov
and
sub
mov
and
and
or
mov
sbb
lods
jnp
xchg
push
mov
adcl
or
and
mov
hlt
data16
into
sbb
or
mov
jmp
add
and
clc
jne
mov
fnstsw
data16
fimull
cmp
loop
bound
inc
pop
flds
adc
and
cltd
push
hlt
or
popa
inc
lock
inc
ret
sbb
fldcw
and
mov
aas
and
mov
jmp
int
pusha
lcall
icebp
and
or
movlps
add
subl
shl
xor
add
shufps
adc
into
add
iret
cld
into
sub
shll
or
add
sbb
push
imul
and
outsl
cld
cmpsl
mov
dec
sub
scas
sub
add
js
jns
outsl
adc
je
sbb
and
cmp
and
mov
je
jmp
out
fwait
mov
idivb
add
sbb
or
rorl
sar
mov
xchg
nop
lret
or
jbe
ficoms
adc
add
jmp
or
es
jbe
sbb
mov
add
mov
add
mov
jo
lahf
data16
or
add
sbb
loope
xor
and
or
xor
jo
pop
add
mov
add
leave
and
add
arpl
ja
and
xchg
add
xchg
xor
add
add
jmp
roll
jns
add
jmp
push
ljmp
in
or
bound
sub
cld
xor
popa
rcll
add
adc
bound
out
and
cmp
fs
add
add
pop
dec
inc
cmp
mov
je
and
scas
lahf
les
add
mov
sub
add
andb
lods
pop
xchg
jns
dec
mov
add
inc
inc
subb
xchg
shl
and
ds
andl
add
jecxz
xchg
add
popa
inc
dec
decl
mov
and
sbb
ffreep
and
mov
and
hlt
lea
or
sub
add
and
add
sub
daa
push
or
imul
add
sub
and
cmp
mov
adc
push
addb
sti
stc
sbb
fld1
repnz
jg
xchg
dec
or
inc
mov
sbb
clc
mov
clc
add
xchg
daa
or
and
pop
jbe
pop
cmp
mov
jle
and
mov
dec
xchg
test
int
inc
sub
shll
aas
inc
shlb
outsl
sarb
mov
xor
or
sahf
dec
shrl
pop
sbb
fs
mov
mov
add
mov
lock
test
je
mov
hlt
std
pop
cwtl
mov
out
dec
mov
popa
outsb
das
lods
mov
sbb
loop
dec
jg
push
mov
shl
shlb
mov
xchg
mov
enter
or
gs
pop
ret
dec
shl
cltd
jne
xchg
mov
inc
and
out
pop
jmp
pop
imul
insl
pop
bound
add
bound
push
aam
inc
or
icebp
mov
mov
push
push
mov
add
add
mov
and
add
mov
push
loopne
add
add
loop
rcll
inc
xor
and
cltd
loopne
mov
inc
in
sahf
imul
add
ret
mov
test
add
inc
mov
fistpll
sbb
and
and
sarb
add
je
enter
mov
jb
and
ficomps
and
or
push
add
jmp
aas
fisttps
jl
jecxz
adc
pop
add
addr16
rolb
adc
pop
rorb
xor
push
sub
pop
dec
xorl
dec
mov
xchg
adc
icebp
or
in
cli
jle
adc
jecxz
rcr
scas
xchg
mov
dec
je
jbe
or
adcl
les
pop
and
fidivl
and
pop
push
mov
mov
scas
popf
ss
push
mov
dec
flds
add
nop
inc
push
in
lock
push
imul
adc
or
dec
dec
and
in
inc
dec
push
add
cli
movsb
dec
xchg
clc
mov
cmp
adc
dec
add
jecxz
aaa
xor
mov
xor
adc
xor
rorb
inc
nop
dec
sbb
sbb
push
in
lods
add
nop
mov
dec
mov
pop
push
and
ret
xor
and
lea
ljmp
adc
pop
cmp
hlt
xor
hlt
ret
mov
jmp
sub
xchg
adc
cwtl
jl
jb
and
jl
mov
sahf
daa
cmp
push
xor
dec
add
in
in
push
ss
mov
xor
sub
lods
roll
and
bound
test
mov
push
sbb
sub
or
adc
cld
lea
xor
mov
or
enter
jb
paddusb
dec
push
sbb
inc
add
movb
stos
loopne
adc
movswl
pop
repnz
int
adc
subb
adc
call
scas
xor
hlt
mov
push
lock
push
addb
call
xchg
and
repnz
cmp
incl
dec
mov
or
fnstcw
pop
dec
daa
xor
mov
loopne
adc
sbb
shlb
stos
inc
add
or
loope
fstpl
fmull
fdivrs
xor
ret
dec
loope
sub
or
mov
jmp
sub
or
in
aam
and
cmp
sbb
shl
int3
jg
fsubs
je
or
and
inc
int3
repnz
dec
lock
movsl
jmp
in
lock
push
test
add
enter
jg
out
sub
and
test
sbb
and
or
test
loopne
sbb
nop
mov
test
mov
adc
int3
iret
loopne
inc
dec
pop
xlat
aad
pusha
lds
pushf
fdivr
cmp
test
test
mov
mov
mov
jge
add
into
mov
push
xor
mov
fdivrl
nop
push
addb
and
orb
mov
jne
mov
lods
or
fwait
inc
fdivrs
add
jb
xor
fdivs
in
fdivrs
shrb
cltd
dec
shlb
mov
jg
xor
push
push
lock
sbb
xor
and
in
or
addl
outsl
fcom
cwtl
ret
pop
loope
or
loopne
mov
popa
or
xor
add
mov
inc
mov
je
push
adc
add
inc
push
lahf
xchg
jne
mov
pop
sub
lcall
xorl
gs
dec
sub
int3
aad
ret
sub
xchg
push
xchg
and
sub
dec
mov
mov
or
pop
mov
nop
sub
movsb
pop
mov
stc
xchg
ret
inc
inc
lret
dec
ficoms
popf
inc
jmp
fiaddl
inc
xor
in
roll
mov
cltd
js
dec
push
mov
or
pop
add
dec
decb
cmp
jle
aaa
int3
add
push
xchg
outsb
or
inc
aas
add
sbb
add
push
inc
rcll
inc
leave
add
aas
push
cmpl
sbb
pop
xor
out
dec
sbb
sub
mov
sub
push
sbbl
fimull
mov
mov
dec
xor
push
pop
jno
push
lods
xor
into
add
add
sbb
add
add
xchg
push
in
sub
pop
or
dec
add
xchg
adc
jns
add
and
rorb
cltd
mov
mov
push
add
insl
out
push
cltd
and
adc
sbb
push
lahf
mov
rorl
loop
adc
dec
es
add
cmp
mov
shrb
mov
pop
lcall
test
cmp
adc
mov
sbb
fs
jo
xor
cmp
or
xchg
add
call
or
mov
xor
outsl
sarb
sub
adc
jmp
and
add
orl
cltd
pusha
or
xchg
and
mov
inc
movb
pop
imul
orl
in
adc
mov
adc
inc
pop
movb
push
ret
and
cmp
scas
push
sbb
push
xor
adc
add
shlb
addr16
ds
push
sbb
adc
dec
mov
cmpl
test
pop
dec
lcall
lea
cmp
or
add
scas
add
push
adc
cmpsl
lahf
imul
pushf
mov
sbb
sti
imul
sbb
dec
arpl
sbb
sub
cmp
arpl
xor
fstpt
popf
and
mov
xchg
movsb
add
cmpsb
xchg
add
mov
adc
data16
xchg
cmpsl
fwait
adc
adc
sub
sub
test
hlt
inc
ds
adc
add
fisubs
popf
xor
adc
inc
orb
and
addr16
sub
cmp
cli
jns
mov
test
jne
mov
lea
stos
xor
and
je
or
mov
xor
stos
jecxz
mov
mov
jmp
popf
xor
dec
sbb
scas
cs
add
and
inc
push
or
enter
pop
xor
and
pop
pop
pop
insl
leave
test
add
inc
pop
push
ja
scas
sub
or
add
add
sbb
inc
add
add
pop
rcrl
or
cwtd
bound
mov
jl
add
lret
jle
lret
or
popa
jge
fidivl
inc
jns
in
add
dec
call
popa
inc
faddl
mov
fcomps
pop
push
mov
inc
or
enter
pusha
test
jne
cmp
and
jmp
pop
mov
or
mov
jecxz
push
push
cmpb
cmpsl
sbb
mov
cld
inc
aam
dec
sub
testb
and
lcall
add
hlt
rorb
pusha
rcrl
mov
push
and
inc
daa
pop
data16
insl
add
pushf
and
aas
add
add
ret
or
and
shrb
add
add
repz
sbb
test
int3
in
sbb
sbb
loope
pop
test
leave
pop
mov
mov
addl
decb
mov
dec
or
inc
test
inc
inc
push
inc
lock
xchg
xor
sub
out
divl
jmp
loop
mov
loopne,pt
inc
lods
fwait
in
les
inc
or
or
dec
cli
and
sarb
xor
or
and
push
cwtl
lods
lock
sub
sub
inc
or
pop
adc
mov
and
inc
push
inc
sbb
ja
lock
add
jns
jg
adc
pop
dec
pop
es
enter
out
jmp
cmpl
into
jmp
add
rol
in
mov
stos
sti
jg
aaa
movsb
and
cmp
mov
ds
shlb
mov
je
sub
cmp
sbb
and
add
xchg
xchg
sbb
clc
into
sbb
sbb
rclb
lods
push
xchg
out
hlt
icebp
or
or
pop
movsl
mov
xor
cmpsb
jno
stos
and
and
das
cmp
cld
add
dec
add
addb
add
inc
cwtl
inc
loopne
xchg
imul
mov
push
fld1
adc
dec
inc
fs
dec
push
stos
mov
bound
mov
and
pop
push
mov
mov
jnp
rolb
cmp
or
daa
dec
xchg
pusha
test
lea
push
sti
addb
inc
cmp
add
xor
aaa
cmp
add
fdivl
push
dec
shr
ss
ret
push
mov
push
pop
lods
mov
dec
pop
inc
nop
jmp
cmc
mov
pusha
fsubl
add
dec
loop
mov
ljmp
xchg
and
mov
pop
call
mov
jmp
pushf
or
inc
pop
push
hlt
push
les
add
mov
add
inc
pop
lods
addb
inc
and
xor
sub
adc
dec
ret
popa
js
cltd
fs
pop
in
inc
push
add
je
push
sub
pop
rol
adc
rcl
mov
add
insl
push
sbb
mov
and
cltd
pusha
or
imul
xchg
xchg
inc
lock
inc
popa
mov
sub
popf
add
call
fistps
or
adc
js
xor
ret
push
adc
xor
xchg
dec
insl
lods
cmp
cmp
ljmp
adc
inc
sub
cli
out
pop
das
and
insb
xchg
bound
push
lahf
addr16
push
adc
xchg
add
pop
cmp
lock
mov
dec
or
add
jmp
mov
or
ret
add
mov
inc
fsubrl
push
jl
addr16
push
jo
fwait
sbb
sbb
or
xchg
subl
sbb
mov
call
xor
cmp
imul
mov
ja
imul
pause
sub
lock
fcoml
jge
xor
push
add
lcall
sbb
ss
jmp
sub
cmc
mov
in
ret
mov
outsl
cmp
push
or
or
addl
mov
adc
jg
ficoms
cmpsl
mov
adcl
push
add
sbb
mov
cmp
or
mov
cmp
pop
or
imul
push
inc
sbb
lahf
sub
rorl
inc
cltd
filds
mov
xchg
inc
sub
lods
add
mov
dec
les
dec
push
xchg
mov
sbb
iret
ret
clc
push
push
and
jnp
mov
cmp
ljmp
ljmp
pop
mov
cmp
inc
pop
inc
and
fcom
adc
push
or
test
mov
jl
je
mov
dec
pop
push
or
push
adc
dec
in
dec
and
or
cmp
dec
pop
or
rcrb
xor
test
stos
mov
mov
and
das
mov
popf
sub
push
sbb
cmp
xor
push
pop
jns
adc
sbb
mov
jmp
fbstp
or
bound
xchg
jnp
jmp
jo
rcr
or
xchg
xor
and
push
pushf
mov
push
add
jb
nop
shl
int3
jno
jb
clc
lock
ljmp
aad
add
cltd
and
xchg
pop
dec
lea
or
arpl
xchg
shll
aas
sub
push
push
cld
fwait
add
xchg
jle
out
outsl
mov
or
ja
and
inc
jb
mov
jl
adc
cmp
jl
or
ss
mov
xlat
jne
pop
add
flds
jbe
add
lea
jl
adc
je
adc
sahf
jbe
adc
pop
add
adc
in
add
mov
sub
in
or
dec
cmp
push
adc
push
insb
test
aaa
dec
push
and
push
push
in
adc
mov
rcll
add
jle
mov
push
mov
je
ja
inc
or
ja
and
add
inc
dec
or
sbb
push
and
pusha
or
push
test
mov
movsl
inc
push
xor
sub
orb
cwtl
xchg
inc
movsb
aas
jno
push
jno
adc
xchg
mul
pop
adc
iret
xor
sbb
sbb
sbb
jns
and
sub
push
jmp
fwait
cmp
popa
insb
insb
insb
in
sbb
insb
das
insb
cmpsb
cmpsb
push
or
lcall
add
jne
jmp
xchg
add
or
iret
adc
jo
cmpsb
stos
fwait
fwait
push
sbb
daa
fcmovnbe
sbb
outsl
pop
xchg
inc
call
pushf
ds
subl
out
lea
push
ljmp
nop
and
in
loope
nop
or
out
sbb
addr16
nop
pop
adc
mov
inc
movsb
jo
xor
jns
test
mov
xchg
fs
jl
sbb
sub
sub
out
and
es
mov
and
and
add
add
add
adc
sbb
bndstx
pop
lcall
pusha
sub
roll
jno
test
add
add
mov
pop
les
mov
or
lea
adcb
adcb
adcb
mov
dec
pop
adc
cmp
pop
push
jmp
cwtl
jmp
sahf
cli
dec
cmp
cmpsb
pop
pop
sbb
sub
push
stos
cmp
adc
mov
fisttpl
gs
xlat
cmp
loopne
das
imul
aam
jbe
clc
mov
add
movsl
aam
xchg
pusha
mov
shll
dec
pushf
push
loopne
jns
adc
jb
jmp
lea
or
mov
cwtl
add
in
adc
sbbb
xabort
add
sub
sar
cmpsl
or
sbb
pop
push
or
sub
and
aam
and
jb
jge
int3
lret
and
xchg
xor
lock
call
test
lcall
jmp
es
frstor
enter
or
lcall
xor
adc
mov
fistpll
and
fsubr
push
aam
notl
jg
andb
rcr
sbb
xor
out
inc
pop
push
test
xchg
in
in
sbb
cltd
rcrb
les
scas
xor
bound
xor
loop
cli
inc
inc
or
in
mov
or
sbb
pop
fldcw
int
mov
test
sub
data16
sbb
mov
inc
mov
push
inc
pop
dec
add
xchg
dec
mov
add
add
jge
cmpsb
mov
aam
push
mov
jns
add
add
aas
andb
fisttpl
push
jns
xchg
popa
lea
push
lcall
dec
sbb
mov
adc
mov
sub
loope
xor
adcl
iret
loop
inc
mov
lods
movsb
adc
mov
dec
xchg
lcall
xor
mov
rol
dec
shll
enter
pop
ss
aas
int
xor
mov
sbb
nop
insb
mov
add
std
pop
sbb
inc
add
mov
outsl
adc
and
lock
insb
cmpsb
jb
stc
fdivl
adc
or
push
repz
xor
add
sti
pop
pop
or
mov
push
cmp
cmpsb
scas
push
push
test
xor
cmp
daa
push
xchg
stos
in
jmp
cmpsl
mov
pop
dec
insl
das
pop
gs
leave
je
xchg
mov
adc
cmp
jl
add
mov
and
iret
je
roll
and
out
imul
insb
inc
inc
rolb
pusha
add
push
enter
sar
jo
mov
jnp
mov
rclb
add
sbb
and
mov
imul
adc
lock
mov
scas
nop
daa
stos
dec
test
fadds
neg
push
push
adc
cmp
xor
xor
test
add
stos
cmpsb
lcall
ds
outsb
test
rolb
mov
sub
pop
push
in
les
and
push
ljmp
pop
mov
or
xchg
daa
fiaddl
jecxz
jge
mov
or
gs
lods
in
stc
or
call
adc
cltd
insb
fists
psubsw
popa
xchg
dec
add
lea
push
movsb
sbb
xor
mov
outsb
test
aaa
add
mov
xor
js
test
xchg
ss
push
imul
aaa
xor
xor
push
test
jb
mov
aad
popf
xor
lahf
cmp
sbb
inc
adc
aaa
xor
fbld
jbe
mov
jb
jno
popf
and
fildll
or
mov
bound
lock
lods
adc
mov
lods
popa
push
inc
shlb
jne
fwait
dec
fmul
dec
ret
aas
nop
dec
dec
and
pop
pop
fsubl
mov
inc
jmp
inc
aas
cmp
into
push
pop
sahf
dec
add
adc
and
dec
arpl
mov
sbb
loope
or
pop
je
xchg
cmp
pop
cli
outsb
imul
pop
mov
cmp
cltd
mulb
cmp
add
and
jns
inc
mov
arpl
ss
add
add
ret
add
and
sub
jmp
or
add
mov
adc
push
in
mov
ss
stos
in
xor
inc
mov
mov
mov
fcoml
xor
enter
and
push
clc
sub
add
push
gs
ret
inc
xchg
mov
insl
mov
mov
loopne
fsubs
mov
adc
ret
sbb
mov
inc
jns
inc
fcoms
sbb
xchg
or
cmp
fdivrs
enter
sub
sarb
fcomp
adc
inc
xor
or
jno
popa
bound
mov
jb
popa
stos
ret
xor
push
jmp
fs
pop
shll
push
aad
xor
rorb
mov
add
test
je
cld
mov
mov
mov
mov
loopne
clc
mov
mov
je
and
mov
jb
cmp
ja
add
cmp
adc
cmp
jne
outsb
shll
add
mov
inc
jb
neg
pop
addb
andb
push
aas
or
add
fsubl
or
orb
orb
add
xchg
xchg
in
add
xchg
xchg
jnp
mov
cmp
lods
cmp
or
xchg
jmp
push
push
cs
lods
jp
or
mov
pop
dec
in
sbb
fadds
mov
sbb
flds
inc
mov
out
shlb
lret
xchg
rorb
and
fs
rcrb
cmp
lret
xor
jge
mov
rcrb
lret
xor
inc
nop
out
dec
add
jle
xor
lahf
enter
mov
or
pop
add
push
sub
arpl
ret
rorb
and
xchg
dec
push
out
femms
movsl
inc
fidivrl
push
test
dec
sahf
icebp
out
sub
orb
xchg
pop
xor
sbb
cmp
dec
adc
add
add
add
jmp
mov
in
inc
sub
jnp
xchg
mov
jl
js
jb
push
dec
loopne
test
mov
int3
inc
jmp
fcmovnu
jge
lock
cmpsb
les
jecxz
push
push
addr16
sbb
mov
clc
mov
jg
mov
add
inc
rclb
fldl
call
vpsubsb
or
mov
addr16
adc
mov
daa
test
mov
sbb
add
sub
ret
loop
rcrl
sbb
repnz
jg
ljmp
popa
or
aaa
rorb
jmp
sbb
pop
jmp
jle
jmp
lds
lret
clc
fdivrs
pop
cmp
fsubs
stc
and
xor
push
fbstp
pop
lods
mov
call
ficoms
push
add
inc
sbb
loop
xchg
addb
adc
jp
hlt
andl
add
not
push
dec
rol
orl
sub
lret
enter
in
dec
dec
mov
sbb
sbb
mov
enter
push
pop
aad
or
or
add
inc
ljmp
in
cli
xor
lret
sub
dec
xor
pop
sbb
lret
inc
rorb
ljmp
add
xlat
jnp
dec
fbld
cld
and
dec
rcrl
push
out
adc
shrl
pop
out
insb
out
adc
nop
rolb
std
mov
and
lds
pusha
pop
bound
jne,pt
enter
adc
inc
movsl
xchg
xchg
in
inc
cmp
out
aad
add
push
movsl
clc
adc
jbe
mov
test
or
fcomps
pop
xor
scas
out
imul
mov
hlt
push
gs
jp
arpl
movsl
mov
push
or
and
lret
push
mov
jge
cmp
adc
xor
inc
xchg
and
rcr
add
bound
cs
push
adc
jo
fdivrl
ss
adc
fsubrl
mov
out
add
xor
mov
and
je
sbb
sbb
adc
fmuls
les
mov
mov
pop
outsl
das
rclb
dec
shlb
sbb
and
dec
and
gs
sbb
mov
fstpt
adc
adc
cmp
add
fcompl
je
xchg
fsubrl
xor
jnp
int3
cmp
clc
or
gs
add
stc
or
add
in
in
add
popa
enter
mov
movsb
aaa
pop
push
jl
sub
push
test
lock
test
add
call
mov
insl
iret
mov
pusha
test
in
jg
mov
cmp
test
dec
xor
pop
fadds
push
gs
inc
add
enter
cmpb
mov
in
rclb
xchg
or
cltd
addr16
pop
cltd
in
test
sbb
cmp
in
sbb
ret
imul
icebp
cmp
enter
dec
ret
lea
sarb
sbb
pop
pushf
enter
sbb
and
je
call
xchg
insb
inc
cmc
out
push
or
adc
or
dec
and
adc
or
addr16
add
adc
inc
push
outsb
aam
aam
xchg
mov
inc
lea
daa
jno
aam
data16
pop
xchg
adc
inc
mov
dec
mov
fstpl
mov
xor
leave
and
enter
pop
int3
mov
jno
sbb
mov
xor
push
inc
add
adc
cmp
push
mov
adc
insb
popa
mov
pop
add
sub
mov
push
pop
or
insb
test
inc
inc
inc
lock
cmp
popa
mov
push
mov
xor
enter
push
mov
or
sub
and
shlb
add
or
lds
xor
mov
enter
adc
jns
dec
and
adc
adc
in
push
icebp
and
cmp
jl
jns
clc
xchg
test
jno
test
outsb
xchg
and
in
stos
movsb
fcoms
adc
xchg
push
xchg
push
fstl
xor
ror
clc
adcl
ja
loop
shlb
jb
movsl
or
jo
or
sahf
insb
fcomps
or
sbb
push
int
push
adc
add
push
jne
cmpsb
and
fwait
and
sub
adc
dec
inc
roll
push
xchg
push
in
push
add
rclb
add
rorl
add
push
cmp
cmp
std
add
xor
dec
and
jecxz
jne
mov
stc
mov
and
lock
inc
pop
mov
in
add
cmp
add
ds
gs
mov
sub
inc
push
mov
inc
mov
adc
cmpsb
mov
add
jmp
xchg
je
movsb
pop
imull
adc
sub
jns
xchg
shrl
jecxz
lahf
rol
loop
sub
ret
mov
mov
sti
or
insb
dec
mov
push
hlt
add
push
lods
icebp
jo
lods
mov
xchg
sbb
sahf
push
jno
add
test
popf
pusha
dec
and
icebp
mov
sub
jno
aam
xchg
mov
add
sub
and
cmp
jne
dec
dec
pusha
xchg
xchg
xchg
and
mov
aam
sub
arpl
stos
es
sbb
insb
fnsave
add
sarb
pop
ffree
dec
cmpsb
sub
ret
lret
pop
jo
jmp
jmp
xlat
fsubrl
xchg
sbb
xor
pop
scas
fmull
cmp
dec
adc
repnz
mov
mov
mov
and
mov
jl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
enter
sbb
rcl
fcomp
sbb
sbb
loopne
call
sbb
hlt
clc
cld
xor
repnz
mov
in
xor
je
jo
fs
fs
push
push
dec
fs
inc
inc
cmp
push
fs
mov
mov
cs
les
lds
cmp
rolb
pop
xchg
adc
inc
sbb
pop
or
leave
xor
imul
in
or
and
cmp
push
push
add
inc
stos
inc
int
clc
xchg
inc
les
loop
sbb
je
loope
xor
xorl
sub
xchg
mov
jmp
xor
xchg
call
push
scas
jnp
ret
inc
jp
movsl
rclb
je
jmp
shl
imul
adc
or
adc
dec
les
stos
daa
xchg
or
and
arpl
add
int
sub
xchg
push
shl
xchg
mulb
push
cmp
sbb
lods
or
in
imul
cmp
outsb
or
jge
inc
sub
jo
sbbl
push
xor
pop
inc
lea
fisttpl
popf
push
sbb
nop
pop
dec
cmp
push
leave
inc
cs
loopne
loopne
orb
popf
test
jge
pop
jae
and
movsl
mov
bound
rclb
mov
out
je
or
cs
inc
fcomp
fwait
inc
insl
mov
cmp
adc
decl
in
xchg
repz
pushf
nop
push
cmp
out
repnz
adc
adc
xor
add
rcl
out
and
adc
mov
inc
add
cmpsl
inc
and
jl
mov
dec
pop
pop
loopne
dec
insb
or
cltd
loopne
mov
cltd
nop
sub
in
xchg
add
push
xor
cwtl
jecxz
roll
xchg
lods
and
lea
push
or
cmp
mov
jmp
push
inc
push
push
aaa
loopne
sub
sbb
bound
fcoml
cmp
shrb
and
int3
mov
in
enter
push
fstpl
aad
iret
mov
inc
mov
jle
xchg
out
mov
scas
mov
jae
rorb
dec
js
or
and
jmp
shrl
popf
or
icebp
pushf
adc
push
lahf
or
push
add
cld
xchg
shlb
mov
test
popf
cltd
or
into
mov
test
sbb
test
and
filds
mov
pop
out
mov
xchg
push
xor
test
add
mov
leave
add
inc
jae
insl
add
fcom
sbb
lret
and
sbb
cmp
xor
sbb
ret
addb
jmp
sbb
outsl
push
daa
nop
add
dec
enter
pop
mov
jae
ljmp
xchg
aad
subb
xchg
andb
setno
loope
sbb
xchg
mov
jmp
popl
rolb
inc
adc
sub
shrl
or
pop
inc
jno
mov
test
push
jne
xor
sub
enter
cmpsl
pop
jp
inc
dec
rolb
incl
push
pop
jbe
dec
sbb
in
enter
imul
hlt
rcrl
pusha
xor
popa
and
sub
mov
mov
adc
jmp
or
bound
mov
decb
decb
ret
mov
xchg
add
jmp
add
jmp
insb
xor
and
je
cmp
mov
sbb
add
pop
cmp
inc
js
insb
outsl
imul
and
sbb
repnz
ja
outsb
gs
insl
popa
dec
imul
and
popa
jae
push
xor
das
add
xor
xor
cmp
out
insl
dec
dec
outsb
push
jp
stos
pop
dec
sub
fcomp
aas
mov
pop
add
cs
xor
xor
pop
loopne
pop
xor
inc
outsl
outsb
andl
outsl
in
mov
mov
je
and
imul
neg
fistpll
outsl
jo
outsb
xor
push
xorl
and
ds
das
clc
mov
daa
jb
insb
ret
js
xor
icebp
pop
iret
fwait
sub
cmp
pop
fimull
jle
pushf
pop
add
inc
add
add
jnp
add
pop
pop
jno
jo
in
in
cmp
jo
jo
jb
push
inc
push
push
ret
cmp
mov
int
popaw
insl
jo
xchg
insl
loope
and
and
addb
pop
mul
jg
andb
mov
addb
adc
ja
push
dec
dec
dec
push
dec
push
inc
inc
pop
and
aaa
cmp
sub
das
arpl
loopne
mov
rclb
mov
jmp
stos
sub
in
inc
arpl
sbb
jmp
add
test
cmpb
cmpsl
adc
ds
jb
sahf
push
mov
jae
jbe
mov
outsl
je
popa
fs
dec
push
inc
push
dec
push
inc
push
cmp
out
push
push
dec
adc
jge
push
and
xchg
fnstsw
push
dec
inc
adc
push
push
or
flds
inc
inc
and
jae
cs
jg
pop
arpl
jae
insb
insb
and
cmp
mov
jae
push
ljmp
iret
sub
sub
push
cmp
shrb
sbb
sub
jb
cmpb
xor
inc
push
and
jae
xor
fsubp
insl
xor
pop
ja
outsb
je
add
outsl
ja
dec
cs
jo
addb
sub
jo
push
or
lds
outsl
jb
mov
aas
leave
push
insb
sub
loop
jno
xchg
xchg
jmp
sti
sahf
mov
outsl
push
or
cmovae
push
jecxz
mov
xor
pop
sbb
jl
jge
ret
cltd
divl
je
jb
outsb
push
dec
ja
push
pop
pop
fs
orb
mov
or
adc
xchg
pop
lock
or
xor
xor
loope
insl
lods
jbe
sub
movsb
clc
daa
inc
xor
xor
adc
lea
out
imul
sub
jg
sahf
dec
in
mov
scas
mov
jecxz
cmp
aaa
xor
push
data16
fbld
popa
inc
push
sub
and
inc
pop
insl
in
in
fstps
inc
push
inc
cmp
jmp
push
add
fildll
dec
mov
fxch
mov
push
aaa
xor
xor
xor
ss
mov
xor
push
cmp
ljmp
push
push
push
add
push
sub
clc
pop
sti
test
dec
cmp
je
dec
out
jo
ja
arpl
add
mov
sub
outsl
xor
cmpl
xor
inc
std
jb
lods
mov
push
arpl
aaa
xor
xlat
and
loop
xor
pop
or
mov
nop
fstl
adc
inc
popa
push
gs
stos
lds
fsubrl
in
mov
sub
or
fidivrs
cmp
aad
push
or
pop
pop
dec
push
pop
inc
rcr
mov
outsb
rcl
out
sub
sub
fadds
dec
outsl
jns
pop
mov
mov
loopne
add
imul
fs
pop
xchg
cmp
push
ss
cmp
and
cmp
je
or
mov
push
mov
in
popa
push
scas
cs
push
mov
fstpt
lods
sahf
test
push
jne
sub
pop
pop
or
cld
xchg
jae
inc
aas
inc
xchg
imul
sti
jb
lret
insb
xchg
xchg
test
sysret
adc
sbb
rcr
fcoms
addr16
popf
out
add
imul
test
test
jne
add
xor
sub
xor
pop
sub
mov
cmp
xchg
dec
push
pop
sub
fldt
xor
in
sub
jmp
or
jle
outsl
addr16
pop
cmp
mov
push
cmp
push
mov
and
or
decl
push
inc
dec
push
push
dec
inc
movsb
sbb
cmp
pxor
pop
xlat
lods
ja
pop
push
aad
or
xchg
int3
and
imul
mov
adc
jbe
inc
inc
dec
gs
inc
sub
inc
and
push
inc
mov
addr16
rorl
inc
cmp
mul
push
push
push
xchg
push
mov
dec
sub
int
jne
bound
xorb
inc
shl
or
mov
add
in
inc
and
cmp
or
mov
add
add
jbe
shl
jg
addr16
outsl
push
outsl
outsl
inc
pop
dec
outsb
ss
out
dec
inc
popa
insl
test
jo
jbe
push
adc
aaa
fs
test
add
cwtl
cltd
stos
xor
xor
cmp
mov
aad
or
dec
xlat
cmp
pop
out
push
clc
dec
imul
push
arpl
jnp
test
or
inc
cltd
inc
mov
in
loope
jl
outsl
insb
aaa
pop
orl
outsb
pop
arpl
movsl
daa
stc
pop
or
jb
jae
add
mov
push
das
jne
or
iret
inc
roll
sbb
and
push
popa
cmp
rcrl
push
iret
outsb
ljmp
xchg
pop
ret
jns
and
jo
push
xor
arpl
adc
dec
ret
cmpsl
leave
push
xor
sub
inc
scas
xchg
dec
and
push
popf
shll
jo
or
mov
loopne
cmc
jb
inc
inc
xchg
jae
bound
bound
sbb
inc
inc
sub
push
xor
mov
mov
add
lahf
inc
inc
dec
inc
push
pop
inc
ja
pop
sub
je
orw
xor
cmp
xor
lahf
and
js
cld
int3
push
outsl
popa
add
insl
pop
stos
leave
insb
push
sub
cmpsl
cmp
xchg
push
push
pop
jle
rcrl
jo
sti
push
push
dec
dec
jmp
pop
mov
out
sub
insb
xor
je
iret
xor
add
imul
imul
das
mov
insl
pushw
mov
shll
inc
push
out
pusha
je
pop
lret
pop
or
push
mov
pop
cmp
sub
aas
flds
mov
outsl
mov
add
ret
add
pop
jb
or
fcmovb
inc
cmp
mov
lahf
xchg
or
jmp
mov
mov
fs
ret
push
push
xor
dec
pop
jo
jge
scas
lods
dec
cmp
fwait
imul
je
dec
cmp
cmp
arpl
jmp
out
lods
mov
addb
int
pusha
mov
ja
out
or
sub
hlt
insb
adc
mov
push
addr16
shll
into
rcrl
mov
push
jmp
mov
cmp
out
add
addr16
pop
mov
push
and
inc
imul
cmp
mov
outsl
jecxz
or
inc
dec
inc
inc
jp
and
mov
and
jg
mov
jb
dec
dec
dec
std
xchg
mov
mov
and
jg
into
cmp
cmp
popa
cltd
add
popa
arpl
xor
mov
push
push
clc
incl
sbb
insl
push
inc
push
inc
dec
push
dec
dec
inc
dec
inc
sti
mov
bound
imul
mov
jbe
and
cmpsl
les
ja
outsl
xor
add
mov
outsl
push
add
shrl
pop
inc
push
insl
insl
rorl
sbbb
cs
dec
dec
pop
xchg
inc
pop
xor
lcall
mov
dec
adc
movsb
adc
jne
xchg
mov
mov
add
and
and
pop
mov
push
arpl
lahf
ret
aam
push
imul
mov
js
mov
dec
ja
out
les
popa
je
add
mov
xlat
insl
jo
lcall
cs
je
ja
insl
adc
xor
addl
inc
sbb
dec
push
dec
mov
adc
mov
loope
pop
dec
outsl
arpl
push
xor
inc
stc
outsb
ja
arpl
sbb
sbb
cmp
bound
and
repnz
aaa
or
xchg
fs
mov
sbb
xor
andb
pop
gs
pusha
mulb
xchg
imul
cs
cltd
xor
in
push
daa
gs
and
fmuls
jbe
inc
daa
add
call
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
mov
pushl
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
ljmp
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
pushl
inc
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
incl
sub
mov
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
jmp
lock
js
stc
or
push
loope
or
icebp
push
cmp
xchg
add
hlt
push
imul
fdivr
push
xor
dec
sbb
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
call
mov
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
jg
xchg
pop
cmp
mov
inc
movsl
fisttps
xchg
fdivr
jg
shll
jmp
outsb
xor
mov
sarb
add
in
lcall
or
cmp
add
daa
adc
or
and
incl
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
decl
mov
shlb
mov
lcall
mov
cmp
ljmp
rcrb
adcl
jae
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
incl
and
out
imul
aam
loopne
rorl
int3
decl
outsl
fistpll
mov
mov
aad
mov
call
xchg
shll
push
push
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
jmp
push
int3
add
mov
das
es
lds
or
sub
ljmp
pop
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
call
or
addr16
jb
push
add
adc
mov
jnp
std
lcall
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
pop
decl
ficompl
int
mov
mul
ja
movsl
inc
xchg
xor
mov
out
sti
jo
lret
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
out
rorb
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
jmp
repnz
lret
mov
cmpsb
mov
jmp
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
cmp
sub
mov
or
sbb
add
sub
add
inc
insl
loop
test
insl
push
aas
ret
add
insl
outsl
sti
arpl
or
jns
pop
or
and
gs
aad
pop
inc
dec
sub
lahf
bound
adcb
int
test
jae
daa
je
dec
loopne
sti
sub
and
dec
inc
fdivrl
imul
outsl
jne
cltd
lock
xlat
push
outsb
popa
adc
sbb
fsubl
das
push
mov
sub
add
pop
jns
mov
and
fdivl
ja
imul
out
popa
sub
xchg
xor
cmp
data16
add
scas
add
mov
add
push
jle
outsl
decb
inc
mov
sbb
insb
repz
outsl
dec
imul
fs
jae
jae
movsl
or
jne
pusha
xchg
ss
lock
nop
test
test
fbstp
dec
push
dec
dec
dec
inc
inc
xchg
das
sbb
xor
add
adcl
jne
sbb
or
cmp
sub
pop
rcl
mov
lock
arpl
es
xchg
sub
pop
sub
mov
jmp
addb
xor
add
ja
cmp
inc
pop
cwtl
imul
jae
dec
outsl
invd
or
and
jbe
xrelease
out
outsb
or
mov
or
mov
push
ja
dec
insl
pop
inc
dec
push
jno
stc
push
movsl
xchg
push
push
aas
lock
andl
push
mov
xchg
adc
inc
cld
daa
cmp
lahf
enter
push
push
in
jl
sub
inc
pmulhuw
sbb
push
dec
inc
dec
and
rolb
adc
xor
imul
imul
mov
jns
ja
je
push
shrb
adc
adc
out
xchg
lret
jne
cmp
jge
pusha
add
jge
dec
inc
push
add
ljmp
gs
ds
jno
ret
out
mov
jae
lea
pop
dec
pop
mov
addr16
in
fadds
dec
mov
xchg
push
inc
dec
dec
cs
xor
psubd
je
jge
pop
aas
data16
jmp
je
inc
cmpsb
flds
mov
popl
pushw
push
pop
xchg
insl
aaa
sub
into
push
lret
cmp
daa
cmpsl
cmp
or
push
dec
and
xchg
cmp
pop
arpl
inc
cltd
mov
add
inc
ret
stc
cltd
scas
daa
inc
add
dec
add
loopne
pop
pop
push
inc
push
pop
nop
rorb
or
sub
test
jp
aaa
sub
ja
cmp
dec
stos
adc
pop
and
daa
or
push
jne
push
xchg
jo
das
jae
adc
data16
dec
sbb
addb
fldt
addr16
and
xchg
rclb
cs
out
xor
mov
pop
cs
jp
xchg
jns
jne
aam
shl
adc
xor
das
imul
xchg
movsl
xor
pop
sbb
fistpll
dec
cltd
dec
push
inc
sbb
dec
push
in
jo
bound
mov
sub
inc
pushl
mov
outsb
jns
je
adc
stos
push
or
and
inc
mov
xor
xorl
push
test
popa
push
sub
xor
xor
bound
cs
rorb
push
push
xor
das
jp
dec
jl
xor
xchg
ret
addr16
xor
and
frstor
pop
test
dec
push
pop
push
addl
jecxz
jns
dec
inc
mov
inc
aas
dec
repnz
sbbl
xor
xor
aad
lods
xor
cmp
test
dec
dec
xor
xchg
sti
xchg
aas
and
sub
sub
fnsave
inc
or
js
xlat
cs
adc
aaa
cld
jmp
jne
outsl
push
push
xor
test
std
inc
stos
push
pop
sub
inc
xlat
aas
and
call
pop
lcall
sbb
mov
inc
popa
sub
inc
inc
sub
sti
mov
inc
inc
bound
or
mov
push
bound
insl
sbb
push
hlt
fiadds
pop
push
or
push
pop
sub
icebp
ret
sub
je
and
clc
pop
sbb
push
push
fwait
in
imul
sub
sub
lock
addr16
and
and
dec
dec
cmp
cld
out
lock
iret
push
in
das
xor
rcll
dec
adc
fsub
insl
jns
inc
sbb
fcomi
add
add
arpl
hlt
lds
adc
sub
sti
or
adc
test
outsb
pushf
sub
mov
jo
push
jp
and
cmp
push
fsubrp
mov
dec
dec
dec
dec
movsl
imul
xor
es
hlt
cltd
ss
inc
xor
pusha
dec
popa
cmp
or
or
mov
and
or
cwtl
push
pop
sarb
sub
rorl
imul
adc
test
push
pop
ja
push
cmp
mov
add
dec
dec
adc
mov
inc
inc
push
dec
inc
ds
insl
sti
push
mov
das
and
mulb
inc
dec
inc
pop
push
mov
push
stc
insb
push
mov
inc
mov
inc
dec
and
and
push
aaa
mov
icebp
dec
inc
push
dec
das
push
xor
xchg
fldl
xchg
mov
fimuls
dec
sub
fdivrl
mov
dec
inc
dec
adc
leave
leave
push
imul
sbb
aas
dec
push
push
inc
jbe
outsb
dec
push
in
and
push
add
mov
inc
inc
sub
adc
popa
mov
sub
cmpsl
ss
fldt
cs
mov
mov
or
das
or
mov
mov
and
unpckhps
pop
ds
and
and
xorb
rorl
dec
pop
das
pop
clc
hlt
add
pop
cmp
test
das
push
cmp
push
aas
jae
adc
push
insl
test
inc
xor
outsb
adc
mov
mov
rdtsc
inc
dec
enter
or
rdtsc
syscall
ret
or
inc
xchg
or
mov
stc
mov
mov
cmp
or
pop
fistl
mov
roll
pop
xor
dec
xchg
cmp
pop
jle
or
pop
gs
dec
outsl
dec
or
or
stos
lock
push
dec
push
sub
push
pop
rolb
neg
cmp
fwait
mov
outsb
ja
out
cmpsb
dec
push
pop
imul
jo
inc
fcoms
mov
lea
fistl
test
push
int
lahf
rclb
xlat
js
cltd
test
push
mov
es
mov
mov
dec
inc
test
imul
fwait
inc
decl
insb
pop
in
push
mov
jle
fs
cmp
or
pop
mov
ret
lret
and
push
jb
pop
xor
aaa
mov
gs
sub
das
fldenv
ja
insb
xor
push
add
je
mov
xor
inc
inc
push
out
insb
sbb
cmp
push
outsb
popa
jo
push
daa
mov
mov
or
push
jns
iret
xchg
gs
add
pusha
gs
js
es
dec
sbb
jmp
jp
dec
jae
and
inc
subl
xchg
dec
out
sbb
pop
test
outsb
daa
das
dec
mov
adc
test
int3
jecxz
sbb
adcb
and
sub
inc
scas
mov
dec
mov
daa
jae
cs
and
inc
and
outsl
fs
imul
xor
in
xchg
dec
dec
imull
outsl
adc
xor
insl
arpl
lcall
sbb
pop
mov
aaa
inc
or
fwait
xor
jo
mov
pusha
adc
mov
pop
popf
and
lds
adc
sbb
and
fcoml
sub
test
inc
sbb
out
xchg
inc
imul
movsb
push
cltd
adc
insl
xchg
mov
push
inc
imul
xchg
nop
out
loop
pop
popa
pop
jb
inc
add
les
mov
bound
and
cmp
iret
sbb
dec
enter
jne
and
pushf
push
sahf
push
xchg
mov
jns
and
loopne
jo
out
mov
adcl
test
addl
aaa
push
lcall
pop
mov
push
out
or
jmp
push
sbb
rorl
push
sub
inc
lock
insb
je
mov
inc
ret
inc
lock
pop
xor
inc
push
in
add
and
pop
incb
mov
mov
inc
std
jae
cmp
ds
aaa
insb
pop
jno
xchg
pop
sbb
add
adc
imul
out
daa
sub
movswl
pop
outsb
ja
pop
cmp
jb
dec
cmpl
push
xor
dec
dec
out
xchg
test
sbb
push
push
sbb
scas
sahf
imul
iret
pop
jbe
add
insl
pop
jno
addr16
insb
test
pop
bound
push
lods
int
add
dec
push
adcb
add
cmp
adc
shll
sbb
or
sbb
out
in
jne
push
aad
es
daa
outsl
mov
insl
xchg
pop
jnp
pop
push
jb
outsl
jb
jo
fildl
sub
mov
push
fimull
xor
hlt
testl
das
xor
sub
pop
aaa
jp
cs
sbb
jbe
push
scas
fwait
push
popf
mov
inc
in
and
fcomps
punpckhwd
push
pop
lea
ds
mov
add
jge
dec
outsl
bound
inc
cwtl
add
dec
adc
push
dec
inc
pop
outsb
in
outsb
pop
pusha
pop
mov
sub
pop
inc
mov
shll
aad
jle
or
add
outsb
jae
inc
pop
inc
leave
popa
cmp
or
and
pop
mov
jbe
dec
jno
pop
daa
mov
jnp
add
jo
fnstcw
sub
and
pop
dec
and
push
sub
xor
shlb
inc
enter
mov
push
das
push
inc
aaa
adc
mov
push
push
mov
mov
xchg
test
fimuls
pop
data16
push
jbe
daa
push
dec
push
jb
pop
mov
cmp
jbe
xchg
jb
lcall
lea
cmp
scas
push
cmpsl
lea
jno
inc
xchg
aaa
pop
pop
sbb
rcrb
adc
sbb
fsubrl
pop
cs
adc
dec
dec
mov
pop
or
lock
pusha
das
fcomps
inc
xor
xlat
aad
out
push
push
xchg
xor
inc
aas
xor
incl
loopne
xor
addr16
jo
insb
inc
or
xor
dec
xlat
dec
aaa
or
mov
add
and
cwtl
andl
loope
lahf
insl
dec
push
jle
jp
add
gs
stos
push
add
mov
and
cvtps2pd
fs
bound
icebp
mov
gs
xor
inc
and
and
jg
call
and
pop
push
jo
mov
and
scas
xor
mov
arpl
pusha
push
fisttpl
loope
aam
and
mov
ds
je
jo
scas
in
push
jo
push
popa
dec
jl
imul
and
adc
add
pop
dec
inc
push
fnsave
ret
sbb
aaa
test
push
xchg
fstpl
aas
and
xchg
sbb
pop
add
insb
test
outsl
lods
lods
pop
mov
aaa
add
loope
and
mov
movsb
and
mov
test
es
imul
insl
mov
das
imul
jns
arpl
dec
and
incb
bound
sbb
idivb
inc
outsb
jo
ret
and
cmpsb
mov
mov
jne
test
fildl
mov
loope
cwtl
mov
fs
dec
xor
movsl
mov
imul
sub
pop
push
cmpb
mov
cmp
insb
sub
imul
xchg
or
dec
jl
pop
xor
fists
add
xchg
inc
push
or
movsb
mov
mov
out
jae
andb
adc
add
xor
and
adc
mov
xchg
xchg
inc
lret
lea
cmp
pop
lret
pop
dec
insl
dec
pusha
icebp
sbb
aaa
push
setno
imul
jb
add
das
cmp
loop
lods
sbb
adc
data16
mov
imul
je
mov
mul
cmp
mov
push
fs
push
pop
sbb
aas
adcb
dec
sbbl
adcl
xlat
xor
popa
pop
lahf
shll
mov
adc
dec
daa
push
bound
iret
fwait
xchg
or
or
sbb
enter
cmp
outsb
test
aad
cwtl
cmp
jne
sbb
xorb
aam
ljmp
adc
ja
cmp
push
jmp
outsb
pop
sbb
push
add
adc
dec
fisttpl
sbb
sbbb
jmp
adc
pop
sbb
movsl
inc
mov
cmc
inc
or
rolb
and
pop
test
ds
push
adc
add
dec
addl
xchg
test
cld
cmp
mov
mov
add
or
jne
xor
or
sbb
mov
xor
mov
inc
add
push
pop
mov
rorb
movl
inc
iret
jno
arpl
dec
push
add
push
mov
fnsave
sub
insl
and
dec
popa
mov
dec
xchg
mov
popa
outsl
cmp
mov
outsl
jnp
dec
add
insb
fs
jne
inc
movb
insb
popa
addr16
inc
fstpt
ficompl
loopne
adc
inc
ret
xchg
push
jnp
dec
sub
lods
push
arpl
pop
pushf
outsb
jae
lcall
and
andl
pusha
xchg
xchg
xor
dec
or
dec
int
insl
nop
lea
aad
in
pop
sbb
jmp
inc
jecxz
lock
popa
inc
dec
popa
js
jle
mov
and
mov
cmp
imul
in
js
xchg
test
sbb
push
jnp
sbb
xor
push
iret
cmp
fdivs
jmp
insl
pop
jo
ljmp
xchg
pop
js
xchg
lds
loope
mov
or
mov
mov
push
lcall
dec
pusha
outsb
dec
mov
add
jg
or
add
push
xchg
jo
test
mov
dec
imul
pop
inc
ret
xchg
and
inc
pusha
stos
dec
xchg
jne
shrl
sbb
push
andl
add
pushl
or
xor
mov
mov
sbb
jp
cmp
outsl
addb
test
into
cmp
sub
add
loopne
add
fs
mov
scas
inc
xor
clc
jo
jecxz
mov
jae
xorb
fsubrl
inc
mov
or
fwait
push
jo
mov
sub
rcrl
dec
sub
je
clc
xor
jns
dec
sub
movsb
mov
sub
inc
jae
mov
cmp
cli
inc
sbb
ret
xchg
cmpsl
mov
ret
xor
in
push
cmp
dec
out
push
or
adc
add
sbb
adc
or
jg
lahf
cmpl
fdivrl
dec
push
cmc
and
push
and
lods
sbbb
addr16
aaa
gs
aas
sub
adc
jns
data16
aas
dec
bound
add
es
inc
sbbl
push
dec
dec
inc
pop
add
jne
xchg
cmpb
pop
mov
dec
push
inc
push
xchg
jne
stos
insl
inc
xchg
mov
mov
fcmove
cltd
sub
outsl
mov
rolb
jle
dec
inc
popa
xlat
bound
xor
enter
sbb
insb
test
test
push
mov
rolb
dec
push
add
lds
fists
dec
inc
inc
push
test
addr16
sub
pop
xor
xchg
dec
xor
or
je
mov
cmpsl
arpl
push
sbb
xchg
or
add
lods
aam
xchg
sub
cs
mov
and
xor
and
pop
hlt
dec
push
and
not
sub
in
aas
xor
xor
xorl
cmp
cmp
jp
aaa
shrl
add
aaa
mov
sub
pop
sti
xlat
push
and
pop
inc
ds
gs
pop
ds
or
add
dec
or
ja
push
pop
adc
cwtl
jbe
mov
jg
and
jge
rorb
add
jg
inc
movsl
xchg
lahf
sbb
mov
adc
adc
push
mov
add
push
cld
jbe
xor
add
xor
xor
and
xchg
xor
out
data16
push
xor
inc
push
xor
ss
cmp
mov
imul
fs
cltd
or
xor
xor
test
add
and
jl
outsl
outsb
pop
leave
push
jne
mov
insb
pop
adc
inc
loopne
add
and
push
and
outsb
adc
ja
and
inc
sbb
mov
pop
pop
inc
imul
add
jle
imul
mov
push
and
push
jne
data16
push
scas
movq
push
sbb
pop
popa
fstl
repnz
dec
mov
cmp
xor
jo
jmp
in
mov
loopne
das
push
sub
data16
lods
lock
aas
push
pop
test
cs
insl
pushf
cwtl
jecxz
getsec
push
ja
fldcw
insb
jne
aas
pop
jne
out
push
notb
outsb
aas
bound
sbb
inc
in
and
jo
scas
xor
fldl
daa
jo
jns
rorl
repnz
push
imul
mulb
orb
cmp
pop
je
inc
xorb
dec
data16
sub
push
gs
out
adc
daa
iret
sbb
out
adc
lds
repz
pushf
cmpsl
mov
sbb
bswap
pop
dec
shll
ja
ds
dec
xor
ljmp
outsb
xor
data16
dec
push
sbb
adc
popa
lret
jb
add
xchg
cmpsb
bound
pusha
dec
in
dec
dec
je
lods
adc
js
jo
imul
mov
xor
popl
sbb
psraw
dec
bound
fnstcw
mov
outsb
sub
pushf
sub
popa
aas
add
or
inc
arpl
xchg
es
int3
dec
mov
test
mov
or
inc
sub
jmp
pop
mov
sub
lods
xor
mov
maxps
or
dec
dec
inc
dec
jbe
dec
dec
sub
cld
fcomp
lret
push
repz
dec
dec
push
push
dec
dec
dec
inc
inc
inc
xlat
aad
outsl
xor
inc
and
xor
out
shlb
xor
lahf
mov
sbb
inc
dec
mov
xlat
mov
mov
sahf
push
cmp
aaa
jno
mov
mov
pop
iret
xor
int
dec
outsl
in
and
mov
pop
cwtl
sbb
xchg
pop
xchg
mov
daa
mov
mov
iret
push
add
push
dec
mov
insl
insb
sub
adc
sbb
jbe
mov
outsl
cmc
mov
push
pop
fisubrl
cmp
cmp
popa
in
jo
mov
jge
xchg
pop
mov
xchg
aam
mov
pop
jno
and
push
shl
dec
inc
pop
adc
clc
jno
inc
aas
sub
adc
lahf
dec
sub
jecxz
pop
ficoml
adcb
sub
push
add
pop
imul
movsb
and
jmp
fs
dec
push
or
or
mov
push
movsb
or
sti
jo
adc
stos
cmpsl
adc
les
scas
and
bound
dec
cwtl
sub
xor
sub
repnz
and
sysret
insl
gs
xchg
push
ret
outsb
cmp
inc
jns
jb
inc
add
and
xor
gs
adc
test
push
je
inc
and
dec
test
lods
sbb
adc
loope
fisubs
aaa
push
mov
sbb
mov
jae
das
jb
push
imul
enter
dec
xlat
fldl
add
add
bound
cmp
pop
sbb
bound
dec
dec
stos
adc
jae
pop
insl
dec
mov
push
inc
mov
stos
push
stos
or
jae
xor
dec
add
push
xor
imul
xchg
cs
cltd
and
push
ret
fists
inc
lret
mov
sarl
push
and
add
sti
add
fisttpl
add
lods
sbb
lea
fstpt
out
sti
add
inc
push
pop
push
insb
xor
xchg
testl
xchg
push
sysexit
into
jnp
shl
pop
dec
jne
cmp
cmp
push
inc
in
push
add
pop
jns
cmp
mov
inc
ss
push
rolb
aas
data16
nop
fcoms
dec
lcall
das
jae
cs
inc
out
adc
sbbb
mov
jl
ja
push
ss
jno
inc
fidivrl
outsb
adc
pop
daa
push
iret
movsl
inc
insl
fnstsw
push
outsl
jno
fstl
lods
lea
dec
jnp
ret
mov
pusha
stos
dec
gs
pushl
jnp
ret
andl
sub
mov
sbb
ss
xor
push
and
icebp
jg
add
cmp
pop
xchg
or
xor
xchg
in
orb
push
jo
jecxz
das
xor
push
pop
inc
dec
inc
cmp
bound
stos
push
adc
push
imul
cmp
subl
pop
bound
insl
std
fs
inc
inc
push
imull
push
aaa
push
adcb
push
or
pop
sbbl
daa
inc
pop
js
fldenv
insl
cs
pop
addr16
lods
movsl
pop
cmpsl
lea
daa
dec
mov
mov
inc
in
xor
mov
mov
std
cmp
imul
mov
xchg
push
sub
jae
xchg
sbb
loope
mov
sarb
dec
push
or
mov
xor
push
cmpsb
addr16
decl
pop
ret
pop
shrw
es
push
or
cs
sti
adcl
and
push
rolb
inc
repz
xor
or
pushl
pop
or
adc
push
xor
mov
pop
jp
es
add
or
test
or
dec
inc
and
push
sbb
movsl
insl
xor
pusha
add
jb
cs
pop
or
add
xchg
ss
cs
sub
loope
or
lock
out
ds
push
mov
fisttps
xor
sub
pusha
pushf
ficoms
push
sbb
sahf
jg
test
cmp
mov
mov
rclb
mov
push
or
mov
insb
adc
mov
cs
jae
mov
mov
sub
adc
movsl
nop
push
data16
nop
dec
xchg
xor
or
cmp
or
shl
sbb
lcall
ret
push
out
loop
fisubrl
pusha
nop
sub
inc
inc
or
daa
mov
inc
pop
pop
pop
imul
pop
addb
scas
mov
jb
jmp
fsub
add
push
jbe
aas
jmp
mov
jo
movsl
mov
ja
inc
and
pop
add
data16
lock
dec
test
inc
test
push
inc
imul
pop
les
cmp
add
aas
push
adcb
or
dec
add
pop
in
sub
inc
push
stos
sahf
xor
enter
stos
dec
dec
xor
pop
inc
int3
movsl
popa
inc
popa
jns
rolb
sub
dec
aaa
or
sub
sarl
push
call
mov
adc
mov
push
lret
push
das
and
adc
push
iret
jb
je
out
and
outsl
lea
mov
push
push
aaa
addb
dec
scas
imul
test
xlat
call
cmp
xchg
push
pop
jnp
inc
add
test
fwait
inc
bound
imul
int3
gs
xchg
pop
adc
lea
adc
push
mov
js
shlb
push
push
add
jo
aaa
add
js
sbb
mov
outsl
daa
pop
arpl
movhps
movsb
ja
dec
inc
dec
dec
lret
outsl
adc
aaa
cwtl
adcb
cmp
fistps
shrb
push
adc
sbb
jno
stos
ss
sbb
js
xchg
xchg
cmp
pop
add
dec
ds
leave
mov
mov
dec
cli
pop
or
sbb
fs
lahf
imul
add
push
out
movq
pop
sbb
lahf
imul
popw
push
outsb
aam
mov
xlat
xchg
push
lods
popa
sub
pop
xchg
or
lock
cmp
inc
inc
jbe
sub
jge
push
dec
push
arpl
sub
icebp
popa
les
testl
sub
push
xlat
clc
adc
add
fmuls
ss
out
into
inc
sub
inc
xor
and
xor
adc
and
dec
xchg
filds
enter
pop
pushw
xlat
lea
cltd
outsb
aaa
add
gs
popa
cmp
cltd
sub
lods
inc
cmp
scas
lods
aaa
inc
jae
jbe
jo
and
push
addb
mov
sub
rorb
and
pop
xlat
iret
ret
insl
or
sub
sub
cmp
or
jne
inc
or
push
ficoms
dec
out
arpl
pop
sub
add
aas
out
sub
fstl
out
stos
and
mov
outsl
inc
rcr
out
jne
inc
dec
mov
push
adc
and
cmp
inc
aas
das
test
inc
pop
mov
icebp
push
sbb
arpl
fsub
pop
xchg
cmp
ljmp
adc
imul
inc
mov
dec
rcrb
aaa
xchg
xchg
outsb
loope
insl
xchg
xlat
ds
insb
or
rorb
stos
mov
mov
mov
daa
inc
push
pop
add
push
adc
insb
shll
add
and
popa
jbe
xchg
pop
fildl
xor
int3
mov
addr16
scas
xchg
in
adc
fstpt
pop
jae
mov
and
pop
cmp
mov
push
lock
gs
in
adc
js
test
scas
xor
mov
cmp
or
mov
test
cmp
ja
insl
mov
push
inc
sub
xor
nop
fsubs
inc
aas
push
lds
jns
push
insl
test
punpckhbw
rorb
rorl
fildl
faddl
xchg
and
inc
ja
rolb
orb
fstps
cmpsl
fs
pop
popa
test
mov
scas
cmp
imulb
insl
jae
add
daa
add
popa
in
inc
cmpsl
in
push
imul
push
pop
mov
or
jns
push
mov
or
outsb
aaa
movsb
in
cmpsb
test
inc
data16
lods
mov
dec
or
cmpsl
outsb
adc
inc
scas
fwait
add
xor
mov
test
mov
int3
mov
inc
mov
mov
pop
shrb
mov
ja
loopne
dec
insb
mov
movsl
sbb
insl
or
jb
aaa
aaa
insb
sbb
cltd
push
jo
pop
sub
push
ds
daa
popa
xchg
fimuls
inc
aad
push
sbb
pop
paddsw
cmp
xlat
movsb
sarb
movl
outsb
out
cltd
cmovnp
loope
fadds
push
sbb
popa
lcall
jmp
sbb
mov
mov
xor
in
mov
cmp
sbb
adc
sbb
andl
fimull
fmull
lods
setle
cmp
mov
les
aas
jns
pop
fsubs
add
mov
and
lods
sub
clc
add
mov
sub
or
mov
adc
mov
inc
or
push
mov
and
inc
cs
in
shlb
add
or
sub
test
inc
inc
inc
sub
ss
es
shlb
insb
outsb
aad
sub
imul
addr16
push
test
add
imul
push
mov
inc
fmul
push
mov
add
mov
sbb
cmp
aaa
or
lds
sub
add
push
add
mov
add
and
adc
or
aad
push
fnstenv
push
inc
mov
fs
xchg
negl
sub
lret
iret
outsl
or
pusha
pop
xchg
pop
fwait
pop
mov
por
jae
xchg
lret
xor
adc
test
fildl
pop
push
sbbb
jae
fdivs
and
rorb
jg
sub
lods
mov
ud2
jne
push
rcl
pop
outsb
add
xor
sbb
aaa
adc
lods
das
mov
lea
movsl
leave
mov
fs
rorl
xorb
aad
mov
dec
gs
adc
inc
fwait
test
pop
push
add
lods
lret
and
add
sbb
inc
adc
and
pop
push
push
and
adc
je
add
rclb
sbb
cmp
fists
loopne
sahf
aam
std
mov
lea
push
pop
ja
sub
sbb
jmp
mov
leave
push
pop
push
or
js
add
or
jnp
or
xor
je
rcrb
dec
lea
jne
add
mov
adcb
push
mov
xchg
dec
cmp
xchg
test
je
cs
dec
jo
or
and
imul
js
mov
pop
pop
adc
push
add
dec
mov
push
cmpsb
in
mov
sub
lea
add
pop
shrb
insl
mov
add
mov
fisttpll
and
lods
pop
das
and
cmpsl
push
pop
test
mov
addb
or
daa
cmc
push
or
push
cmpsl
sbb
jb
jo
loope
fwait
mov
adcb
push
add
dec
les
pop
adc
andb
pop
jmp
pushf
or
push
std
aas
in
dec
dec
lods
inc
or
fstpl
ja
cmp
insb
fs
mov
push
ret
sbb
pop
xchg
push
and
hlt
pop
pop
mov
inc
cmpsb
addr16
aam
sar
sub
sub
push
sahf
cmp
or
or
lods
and
fiaddl
sbb
lea
mov
xchg
bound
sub
xor
aaa
jnp
movsl
inc
or
add
outsl
jg
rcrl
lods
inc
ja
je
inc
mov
lea
lds
inc
jne
or
xor
pop
dec
out
xor
and
mov
aas
jl
xor
mov
cmp
xchg
mov
pop
push
xor
aas
add
dec
or
pop
ja
mov
pop
jns
das
sbb
adc
and
xor
jmp
and
ret
clts
inc
dec
or
sbb
add
dec
ss
les
mov
inc
inc
dec
dec
daa
adc
jl
and
outsb
sub
pop
xor
lahf
pop
push
and
test
and
mov
adc
pop
loope
jns
add
imul
lods
pop
aad
insb
and
push
pop
jbe
xchg
jbe
pusha
dec
dec
xchg
mov
outsl
or
and
jo
dec
jmp
push
xchg
fstl
sarl
insl
pop
adc
cmp
and
push
jae
mov
sbb
sub
test
adc
jae
inc
mov
pop
outsl
sub
push
mov
loopne
inc
sbb
jne
imul
orl
sbb
movsb
ja
loope
sub
in
push
fadds
arpl
ficompl
push
enter
push
sbb
xchg
sub
and
mov
xchg
cmp
mov
jns
notb
orb
stos
lods
mov
or
mov
movsb
loopne
iret
inc
or
dec
jne
add
gs
xchg
insb
sbb
mov
pop
mov
pop
aas
and
jno
sub
xlat
scas
add
mov
adc
cmp
or
xor
add
pushl
adc
inc
sub
insb
jg
sub
add
imul
inc
orb
add
pop
imul
test
add
mov
mov
loope
push
andb
push
xor
inc
xchg
xchg
jns
fildl
pop
das
pop
push
cld
scas
mov
mov
add
jno
notb
cmp
add
dec
add
jns
add
push
fldl
stos
hlt
orb
inc
push
push
in
ss
dec
dec
jp
lock
rcl
pusha
jge
push
mov
int3
dec
xchg
cmp
andb
cmp
ret
mov
cld
push
mov
inc
jne
mov
or
push
fldt
sbb
mov
shrl
loop
mov
push
fcoml
push
pop
outsb
and
imul
adc
outsl
mov
aaa
stos
sub
out
dec
inc
dec
aaa
das
inc
push
jle
adc
sbb
xor
lods
mov
scas
mov
mov
mov
cmp
push
jno
lea
or
lea
push
lods
add
sbbb
dec
or
or
cmpsb
adc
bound
imul
dec
cltd
in
mov
mov
aam
jmp
pop
jno
cmpsl
xorl
movsb
test
arpl
test
aam
aas
ja
dec
movsl
cmp
pop
push
push
xchg
cmp
sub
sub
scas
mov
js
das
sub
pop
add
and
adc
pusha
mov
add
out
or
jg
dec
and
mov
xchg
lea
mov
pop
addb
decl
push
inc
dec
and
xchg
dec
andb
inc
adc
or
and
js
insb
sti
xor
mov
xor
or
dec
pop
dec
push
testl
cmp
aaa
xor
jae
xor
aaa
aaa
pop
outsl
fildll
jb
bound
jae
sbb
data16
push
jg
loope
test
flds
mov
push
aas
pusha
push
sbb
mov
add
sbb
lods
mov
add
pop
cwtl
push
sub
nop
shlb
pop
add
jne
dec
pop
dec
pop
dec
push
or
push
pop
dec
sub
adc
mov
in
xor
bound
stc
addr16
imul
pop
inc
jb
inc
dec
add
sub
dec
gs
roll
add
xchg
inc
aas
jo
inc
xchg
jle
loope
cmp
sbb
dec
popa
jo
and
xor
cmp
jl
and
es
dec
gs
dec
mov
sub
idivb
pusha
inc
mov
dec
dec
dec
inc
jns
es
inc
insb
imul
push
mulb
xchg
push
outsl
jo
jo
sub
lods
aas
fs
iret
cltd
push
xor
jo
movsb
ss
xchg
pop
imul
cmp
and
push
pop
inc
ret
add
pop
jb
push
decl
pop
pop
jbe
and
sbb
sub
xchg
mov
sub
adc
lds
pushf
mov
mov
bound
inc
fs
sub
add
push
xor
rcrb
aas
pop
or
inc
lds
inc
inc
dec
inc
inc
inc
cmp
cmpsb
shrl
imul
or
das
cmpsb
dec
push
add
aad
gs
push
xchg
inc
dec
mov
pop
les
pop
add
fwait
pop
push
dec
inc
sub
sub
cwtl
aaa
add
nop
push
xor
mov
mull
xor
imul
dec
add
or
push
dec
or
adc
pshufw
push
sbb
push
dec
dec
dec
lock
mov
adc
imul
test
cs
jmp
aaa
fdivs
decw
adcb
push
inc
inc
inc
push
sub
fstl
inc
inc
dec
inc
je
mov
xlat
inc
inc
or
adc
in
mov
cmp
push
addl
mov
push
cwtl
jmp
mov
pop
andl
mov
in
pop
scas
inc
addr16
jecxz
gs
adc
jo
mov
pop
ljmp
mov
jle
and
inc
lea
mov
gs
scas
andl
jnp
jge
in
jo
test
and
sbb
ret
and
inc
mov
lret
or
cmp
fisttps
mov
or
pushf
inc
xor
sbb
jb
test
imul
subb
stos
jae
fs
movsb
push
dec
dec
shlb
pop
ficoml
fs
add
cmp
imul
sbb
sub
sub
add
jge
sub
and
sub
stos
bound
mov
loopne
inc
icebp
xor
mov
and
pop
xchg
andl
iret
int3
test
flds
push
add
xchg
pop
jno
call
insl
xchg
jbe
inc
mov
xor
aas
pop
mov
fistpll
push
sub
xor
shlb
add
cmp
push
scas
fadd
adc
test
sub
enterw
sub
dec
inc
lret
or
lret
popa
mov
lods
mov
mov
mov
jg
arpl
jno
gs
dec
pop
add
bound
add
inc
and
imul
in
enter
call
pusha
or
adc
outsb
push
ret
out
mov
inc
jo
or
sub
addl
push
lahf
mov
data16
jae
jg
add
clc
repz
movups
add
add
add
add
mov
cld
xlat
mov
pop
or
mov
push
push
pop
push
and
pop
int3
fistl
add
pusha
push
add
loope
scas
mov
sub
add
sbb
outsl
sub
outsb
insb
add
push
dec
jo
fwait
inc
adc
adc
dec
stc
inc
sub
push
call
xlat
inc
jecxz
xchg
mov
jo
pop
xor
in
scas
push
in
or
loopne
insb
and
popa
filds
daa
jno
add
mov
sbb
sbb
sbb
sbb
fiaddl
cmp
arpl
movl
push
ja
jmp
mov
lcall
pop
add
or
loopne
push
mov
add
push
filds
xchg
bound
sbb
and
sub
add
inc
mov
mov
dec
push
or
loopne
enter
shlb
or
pcmpeqb
or
push
js
nop
add
das
push
cmpsl
add
push
inc
cmp
jo
jae
pop
xor
mov
adc
or
pop
shll
fstps
fbld
add
jne
test
inc
repnz
cmp
inc
rcll
ret
fidivrs
imul
aas
push
arpl
aam
xchg
add
or
sub
clc
add
roll
sub
sbb
fcoml
popf
cmp
xor
add
orb
push
dec
and
dec
add
test
xchg
adc
adc
pusha
and
add
add
push
add
sbb
test
mov
cmp
adc
ret
jmp
add
sbb
sbb
push
pop
repz
jmp
and
sub
sub
cs
xor
jmp
cmp
xchg
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
lret
pop
cld
call
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
inc
aas
rorb
imul
jno
jne
ja
lret
not
jns
jnp
jge
jg
dec
inc
push
dec
dec
inc
push
dec
push
push
lods
int
sbb
push
dec
dec
or
loope
rcll
inc
sbb
dec
or
xor
sub
adc
out
std
jo
sub
cmpsb
sbb
push
cmp
mov
push
cs
mov
rclb
pop
inc
insb
jae
push
sub
das
or
push
inc
pusha
xor
out
jge
pop
sbb
inc
inc
adc
pusha
data16
cmp
pop
repnz
add
imul
lret
xor
in
mov
push
pop
cmpsb
arpl
adc
mov
pop
cs
mov
pop
mov
mov
xchg
gs
dec
mov
fcoms
push
mov
mov
pop
das
loope
pop
repnz
daa
out
movlps
loope
stc
out
aas
sarb
inc
addb
dec
jae
faddl
fstpl
rorl
cmp
add
add
pop
jnp
xchg
add
ljmp
insl
pop
in
testl
add
jb
in
mov
lret
popl
jae
je
cmp
repnz
jo
test
sbb
xor
repnz
mov
cltd
dec
push
push
push
das
push
pushf
cmp
jb
lea
out
int
lret
dec
mov
pop
mov
nop
out
movsl
mov
comiss
sbb
mov
pop
cmp
mov
test
xchg
test
inc
je
mov
push
lods
into
je
fcomi
sub
inc
int
ja
jbe
mov
adc
xchg
fdivs
fildll
and
xor
add
test
and
adc
cmp
inc
and
inc
dec
and
jl
add
xor
cmp
sub
mov
fucomip
cmp
popa
rcrb
pusha
xor
dec
adc
cs
or
and
or
lcall
mov
daa
jae
xor
lea
movsb
dec
insl
xor
mov
cmp
in
dec
pop
adc
dec
dec
cwtl
and
iret
aaa
outsb
sub
and
sbb
jb
or
sub
mov
mov
outsl
xor
jo
jbe
xchg
cmp
xchg
lret
fnsave
lds
lea
loopne
add
mov
and
xor
cmp
mov
xor
mov
stc
push
cmp
nop
inc
outsl
lea
xor
aaa
insl
push
pop
add
insb
sub
test
pop
add
adc
cli
xor
js
pushf
and
adc
cmp
js
xchg
adc
xorl
xchg
and
inc
stos
push
jb
push
cmp
push
mov
scas
xor
test
and
mov
add
mov
push
rdtsc
jbe
xor
and
je
cmpsb
stos
insl
rolb
add
rorl
orl
enter
addb
popf
or
mov
aaa
mov
cltd
aaa
sub
incl
adc
in
pusha
sbbl
add
pop
sub
pop
add
jg
push
jge
and
ja
divb
les
jmp
pop
xor
sub
ljmp
popa
adc
test
pop
frstor
cwtl
inc
dec
sub
loop
or
jo
mov
daa
pop
lea
sub
js
push
pop
or
popa
adc
iret
push
mov
add
dec
and
add
ficomps
pop
das
das
adc
pop
mov
sub
add
lcall
loope
sbb
sub
addr16
jne
enter
insb
xchg
sbb
cmp
dec
and
out
in
mov
jb
pop
inc
popa
outsb
adc
mov
scas
cmpsb
xchg
mov
into
mov
inc
es
mov
jae
push
gs
into
push
mov
sbb
dec
xchg
and
mov
xchg
pop
dec
inc
ds
cwtl
push
mov
sub
and
dec
inc
inc
push
jbe
sub
adc
das
xchg
add
jg
ret
fcmovnbe
jbe
insb
and
and
pop
mov
or
push
in
ja
popf
and
js
xchg
pop
or
sbb
jnp
fidivrs
das
jo
insl
or
and
inc
scas
fcompl
pushf
mov
mulb
push
and
outsb
add
outsl
outsb
movsb
jo
test
outsl
fdivl
xor
popa
push
mov
test
push
add
ja
add
xor
in
aaa
fs
bound
fisubrs
push
or
cwtl
inc
push
daa
push
fisttpl
pcmpgtd
dec
push
dec
add
push
mov
inc
push
aam
daa
or
push
push
inc
push
enter
sub
push
push
cmp
inc
invd
cmp
notb
push
push
dec
inc
pop
or
and
dec
mov
dec
mov
inc
inc
pop
or
xor
xchg
inc
cmp
inc
push
push
lret
out
cltd
or
xor
dec
sub
and
mov
in
mov
push
dec
or
xchg
fcompl
or
add
scas
inc
inc
dec
jle
sbb
adc
xor
inc
add
pop
scas
inc
push
dec
jl
fisttpl
scas
push
add
pop
inc
lcall
fldt
roll
push
push
dec
scas
push
sub
add
dec
push
pop
mov
cmp
rclb
push
jae
mov
sbb
mov
mov
pop
inc
inc
add
aaa
push
pushf
fs
fsubrs
mov
jno
pop
and
cmp
add
xor
lret
jl
dec
add
push
sub
push
add
inc
push
sub
xchg
sub
inc
push
inc
xor
xchg
fildl
js
inc
inc
push
sbb
movsb
mov
nop
out
push
dec
push
cmp
out
outsb
ds
add
push
pop
cmp
imul
pop
push
out
das
add
jne
push
jb
sbb
push
test
lock
fiaddl
xchg
sarb
scas
xchg
jo
repnz
bound
push
aad
cli
popa
sbb
jae
movsl
ud1
mov
lods
in
or
mov
inc
data16
daa
fmul
mov
jge
xchg
cmp
inc
faddl
iret
and
aas
jnp
jbe
mov
outsb
fs
imul
nop
add
push
or
xchg
jnp
sbb
inc
and
inc
xlat
jmp
inc
dec
imul
shll
xchg
iret
jae
cmp
add
cs
loopne
arpl
packuswb
add
xor
cwtl
push
gs
jbe
push
xchg
cmpsb
mov
push
arpl
cmp
sbb
mov
ss
sub
adc
sbb
inc
pop
repz
push
test
inc
inc
pop
push
ret
push
js
iret
je
pop
pop
das
pop
aam
fwait
popa
andps
pop
dec
pop
dec
mov
mov
cmp
pop
jbe
sub
sbb
fsubs
unpcklps
scas
cli
jp
push
lea
pop
aas
lock
push
dec
dec
lahf
loopne
aam
js
sti
mov
push
xchg
push
pop
push
adc
dec
movsb
pop
pcmpeqw
sub
je
pop
imul
stos
mov
dec
fs
cwtl
cmc
jno
es
jmp
popa
pop
popa
aas
add
inc
data16
and
loop
and
jbe
jae
mov
cltd
sub
sub
dec
ficoml
and
ja
adcl
adc
in
jle
daa
inc
lods
js
lcall
sbb
data16
arpl
cltd
inc
sbb
add
adc
jp
arpl
pop
xchg
outsl
push
sbb
insb
dec
dec
inc
add
xchg
outsl
mov
push
pop
dec
dec
add
pop
mov
arpl
xchg
cmp
bound
sub
adc
add
in
in
aas
bound
rorb
mov
mov
mov
mov
xchg
and
test
js
add
in
test
add
outsl
pushf
jo
mov
scas
and
adc
jae
inc
adc
lahf
in
popa
dec
fdivl
jg
popa
xlat
mov
repnz
add
pop
inc
mov
push
dec
push
push
sub
add
push
cmpsl
loopne
data16
add
pop
hlt
pusha
in
xor
loopne
dec
add
inc
add
inc
add
add
push
jns
inc
add
push
dec
add
adc
xchg
xor
and
or
fsts
pop
cld
pop
out
call
jl
push
jns
add
push
add
ds
push
scas
push
pop
movsb
pop
mov
jge
cmp
imul
jae
xor
data16
jae
sub
add
jne
mov
rcr
pop
mov
daa
adc
pop
outsl
dec
cmp
daa
scas
pop
pop
sbb
adc
dec
xlat
insl
bound
inc
pusha
pop
push
adc
dec
inc
fs
jae
addr16
daa
jg
and
ds
pop
fwait
sbb
scas
pop
fs
jb
adcl
daa
and
cmp
imul
jbe
pop
popa
or
pusha
inc
aaa
push
xchg
jo
ja
push
dec
test
ret
es
notb
fistpl
in
sbb
and
jae
daa
sub
lock
fisubl
shll
jb
cmp
cmpsb
jbe
push
sahf
pop
adc
movsl
daa
xchg
pop
dec
mov
add
jle
popa
pop
jnp
lea
data16
or
shll
bound
pop
dec
scas
lea
add
pop
jns
push
das
out
data16
xchg
in
iret
imul
pop
lret
xor
jg
outsb
pop
sbb
pop
shlb
push
lods
pop
scas
lahf
push
sbb
or
adc
test
mov
sbbl
push
sbb
dec
in
daa
lods
sub
dec
imul
fwait
mov
jmp
mov
sub
add
adc
fs
out
dec
dec
inc
push
add
or
mov
stc
inc
adc
mov
push
inc
daa
pop
out
rorb
in
or
pusha
push
pop
inc
or
dec
test
shll
cmpsl
pop
inc
sub
cmpsl
cs
inc
jo
test
pop
and
jae
rcrb
pop
sti
adc
push
cmp
out
ret
push
inc
loope
xchg
dec
push
loop
or
int3
test
hlt
jne
pop
add
or
inc
cmp
ret
add
jae
xorb
sub
inc
push
or
mov
push
add
adc
adc
jae
mov
pop
mov
xchg
push
out
add
jo
mov
mov
movsl
pusha
cs
aas
sbb
bound
inc
das
xchg
pop
jg
enter
pop
iret
and
adc
jns
ret
mov
lock
fisubrs
dec
js
rorl
xor
sub
sub
in
das
aam
xchg
jbe
lret
aam
out
jb
daa
js
test
popf
stos
cmpsl
sahf
jp
mov
sbb
out
fwait
sbb
mov
mov
imul
mov
sbb
or
lret
mov
out
pop
dec
je
mov
test
call
dec
or
inc
es
aas
outsb
push
pop
push
jp
adc
sbb
fisubrs
and
mov
in
in
inc
add
mov
shrl
lret
mov
daa
mov
jo
and
pushw
jg
jb
in
fdivl
mov
arpl
arpl
mov
xor
cwtl
cmp
xor
fisubs
xor
xor
fwait
rcll
jns
or
inc
dec
push
inc
ja
popf
pop
mov
mov
push
in
push
ja
out
xor
aas
fisttpll
adcl
sub
imul
data16
push
inc
push
fisubrl
dec
xchg
sbb
xchg
mov
cmp
xor
popa
stos
outsb
or
pop
pop
loopne
push
jb
pop
push
das
cmp
dec
pop
inc
fs
push
insb
pop
inc
pop
imul
pop
add
lret
idivl
out
fldcw
fstpl
repnz
mov
add
mov
mov
rolb
dec
inc
mov
add
je
scas
nop
adc
add
jge
push
clc
pop
shrb
inc
pop
fiadds
incl
xor
or
sub
call
sti
sub
mov
xchg
mov
xor
sbb
call
ret
cmc
sub
or
or
dec
xor
mov
add
add
cli
std
jmp
std
pushl
cwtl
cltd
cltd
ret
and
cltd
adc
test
fsts
movsl
lcall
mov
bound
xlat
lea
adc
shrb
xchg
rol
pop
mov
fdivrl
adc
mov
lcall
sbb
pop
js
sbb
adc
pop
xchg
adc
lcall
jnp
cltd
sbb
ret
shl
popf
and
mov
add
cwtl
repz
sub
pop
sahf
fwait
cltd
sahf
and
pop
adc
popf
repz
std
fstpt
or
leave
sbb
adc
inc
shrl
pushl
rclb
pop
jnp
adc
mov
fbstp
in
jle
fimuls
fs
movsl
cli
hlt
std
and
jb
incl
mov
xor
enter
ret
shlb
call
addr16
in
leave
jmp
cli
fdivr
std
jmp
ljmp
in
dec
mov
cltd
fsub
lock
std
aad
sti
jnp
imul
clc
jmp
xor
ljmp
fmul
cmp
xchg
jle
and
lock
cmc
lock
jmp
sub
dec
dec
dec
dec
push
dec
or
inc
call
sub
pop
ret
bound
jne
add
cld
sbbb
jne
mov
imul
add
inc
addr16
push
aaa
adc
inc
jle
jnp
jno
aad
ja
xor
jl
xor
pop
push
fcmovnu
in
addl
ja
insb
and
and
movsb
mov
jne
es
les
mov
add
adc
stc
mov
loopne
lds
add
inc
dec
jg
pop
xor
rclb
rclb
repnz
mov
sahf
add
mov
lahf
call
dec
pusha
add
call
sbb
mov
cld
add
and
std
int3
iret
cmpsb
std
incl
dec
mov
pusha
pop
or
jl
outsl
cmp
push
adc
into
adc
mov
xchg
outsb
jb
dec
inc
push
inc
addr16
std
nop
clc
or
hlt
or
pusha
fiadds
dec
inc
cmp
pop
mov
add
popa
in
sub
add
icebp
mov
inc
mov
fdivrs
xorb
add
les
int
fs
shrl
int
out
stos
pop
xchg
movsl
cmpsb
movsb
dec
xchg
stos
add
pop
out
push
pop
nop
inc
pusha
dec
js
xchg
lods
test
scas
adc
mov
and
add
or
data16
or
adc
jmp
or
aaa
jo
cwtl
xchg
cwtl
dec
rclb
push
dec
jb
test
scas
xor
xor
mov
sbb
punpcklbw
add
out
sarb
aas
inc
movl
cltd
icebp
mov
jp
add
xor
xor
outsb
mov
or
mov
loopne
dec
or
mov
ljmp
mov
mov
fisubl
imul
or
push
add
xor
testl
cmp
sub
inc
sub
add
sub
push
dec
add
pop
pop
into
or
std
jg
xchg
add
mul
add
push
fstpl
pop
xor
inc
out
lock
cmpl
js
push
out
add
or
loopne
pop
sub
andb
daa
xor
xor
adc
nop
aas
or
jmp
idiv
ljmp
add
jl
mov
ja
mov
cmovno
cmpsl
push
push
cmc
cld
ja
pop
dec
xchg
out
dec
and
fnstsw
std
cmp
adc
xchg
adc
mov
jnp
icebp
lret
cltd
icebp
test
ficoms
fmul
data16
adc
sbb
jne
stos
aam
cli
out
int
cli
iretw
mov
aas
adc
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
call
mov
adc
test
movsl
mov
call
fs
fnstsw
movsb
adc
mov
out
mov
int
enter
pop
out
test
mov
xchg
data16
lcall
fsubl
jmp
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
ljmp
xchg
jle
adc
mov
xchg
rclb
test
fwait
decl
rcrb
add
xlat
xchg
jne
sub
pushf
push
jbe
pop
xchg
sar
jns
push
je
mov
insl
stc
jle
pop
enter
loopne
jge
mov
xchg
adc
xchg
push
leave
xchg
add
pushf
shlb
popf
dec
cltd
jne
jae
insl
popa
xchg
in
lcall
fcos
popa
sbb
sub
scas
pop
xchg
enter
in
and
enter
jge
xor
std
movsl
cmp
out
push
cli
cmc
imul
mov
mov
dec
test
push
dec
inc
jb
enter
lcall
push
inc
and
push
dec
and
loope
dec
and
js
and
das
and
add
sub
inc
ret
sbb
dec
dec
ja
dec
jge
xor
xor
adc
dec
and
xlat
push
xor
movsb
push
jae
adc
out
xchg
rorl
inc
add
or
movsb
ja
je
ljmp
mov
mov
xchg
orb
imul
add
ja
jae
icebp
xor
push
and
pop
inc
rcl
cmp
sbb
ficoml
mov
lds
and
xchg
cmovo
add
stc
jg
ljmp
dec
add
inc
add
jg
sbb
repnz
sbb
scas
xor
lret
das
test
pop
mov
mov
xor
ret
out
lcall
out
xor
repz
push
add
cltd
fs
xchg
xchg
seto
add
inc
cmp
dec
fistl
sub
ss
dec
mov
add
jmp
insb
mov
cmp
push
xchg
pushf
and
push
int3
in
add
mov
push
push
es
mov
mov
or
call
mov
sbb
or
rclb
fwait
test
and
cs
dec
or
mov
mov
push
nop
xchg
fwait
pop
test
mov
or
in
movaps
or
xchg
adc
scas
jl
inc
pop
mov
fimull
xchg
jns
ret
js
adc
stos
pop
cmpsb
jmp
and
jae
decb
pop
imul
jl
mov
push
add
loop
dec
lods
or
repnz
pop
and
add
stc
nop
push
test
xchg
ss
pusha
add
test
insb
invlpg
test
xchg
rclb
movsb
lcall
dec
sub
add
lahf
sarb
and
insb
or
xlat
test
add
xchg
mov
ja
imul
adc
sbb
cmpsl
jbe
adc
jne
jle
test
pop
push
push
add
insb
mov
sbb
adc
fidivl
sub
sbbb
in
test
cmp
mov
inc
fs
jbe
push
inc
add
inc
addb
sub
mov
adc
add
outsb
pop
mov
and
inc
outsb
je
and
adc
lods
in
mov
pop
xor
xor
add
dec
cs
add
add
sbb
out
ja
pusha
aaa
stc
xor
xor
shll
adc
pop
in
inc
repz
ja
imul
push
and
dec
push
xor
add
test
jno
jb
inc
in
sqrtps
cltd
add
xchg
push
outsl
adc
loopne
fwait
ja
or
adc
xchg
dec
pop
ja
xor
orps
outsl
outsl
insl
jns
adc
xchg
inc
sbb
aaa
or
cmp
pop
scas
adc
jns,pn
mov
dec
rcl
lahf
cmp
ja
fwait
js
aad
adc
addr16
ja
out
jle
jne
outsb
jo
push
push
dec
nop
xchg
inc
or
mov
pop
jl
ret
and
push
jl
fmuls
lret
inc
adc
xchg
pop
ljmp
adc
outsb
inc
dec
adc
and
adc
shlb
dec
adc
jb
shr
inc
fisubl
aaa
adc
out
mov
push
dec
add
sbb
mov
pop
int
mov
lock
roll
add
outsl
int3
mov
scas
cltd
enter
cs
adc
lcall
mov
mov
data16
cld
sbb
pop
mov
mov
js
xchg
int
xor
rolb
or
xchg
data16
and
pop
pusha
sbb
cwtl
mov
sbb
cmpsb
in
lock
pop
jb
mov
cltd
pushf
test
rorb
adc
cmp
ja
mov
dec
lcall
dec
mov
nop
mov
mov
pushf
push
dec
rorl
call
or
mov
movsl
pop
fwait
and
enter
sbb
mov
xchg
mov
lahf
mov
int3
or
adc
cmp
jp
cwtl
loop
mov
mov
inc
shlb
dec
jp
mov
shlb
mov
inc
sar
or
dec
lcall
dec
lcall
test
rcrl
and
push
fs
and
xor
lods
mov
and
xor
lock
cld
int
nop
outsl
sbb
mov
xor
mov
dec
hlt
mov
push
inc
pop
dec
rorl
push
int3
repz
or
xor
push
add
sbb
scas
add
cmpb
orb
sub
add
xchg
add
cmp
cmp
mov
push
xchg
lret
adc
push
leave
or
mov
sbb
stos
jns
imul
bound
es
nop
xchg
gs
inc
push
inc
pop
ficoml
pop
dec
incl
pop
or
daa
jno
xor
dec
dec
inc
xor
jae
dec
inc
dec
dec
xor
xor
dec
jne
ss
dec
dec
inc
aaa
aaa
ja
dec
inc
dec
dec
cmp
cmp
or
pop
xor
daa
jp
inc
dec
dec
xor
jnp
fwait
xor
ja
xchg
rolb
fsubp
pop
jle
push
xor
and
lods
sbb
xor
mov
fisubs
and
es
nop
mov
xor
pop
outsl
sbb
mov
pop
pop
es
jns
and
pop
sub
fidivs
fildl
sub
pop
sub
lcall
dec
lcall
mov
inc
movsl
pop
or
fcoms
adc
int3
adc
daa
pop
rcr
push
ds
mov
adc
inc
bound
lcall
inc
imul
push
adc
jg
adc
xor
movsl
jge
call
popa
popa
push
push
and
lahf
into
fidivl
adc
shll
jo
ret
cmpxchg
adc
int
push
testb
adc
mov
adc
daa
mov
push
cmp
and
mov
lcall
int
int3
xchg
jle
adc
pop
pop
ss
int
jecxz
dec
dec
adc
into
dec
adc
int
daa
cmp
cs
daa
int
mov
nop
xchg
data16
or
push
push
push
dec
pop
push
push
test
pop
or
imul
adcb
es
mov
fsubr
adc
scas
stos
ror
and
or
std
pop
dec
dec
dec
inc
pop
or
push
pop
or
jbe
inc
inc
dec
or
pop
mov
and
or
jbe
inc
dec
or
and
dec
inc
inc
push
pop
or
scas
in
cld
mov
daa
push
inc
dec
or
pop
or
ss
dec
dec
test
imulb
out
jo
punpckhdq
out
jmp
insl
mov
sbb
sbb
leave
add
popa
xor
fs
dec
xor
fs
dec
push
fs
nop
dec
push
cltd
xor
cltd
fs
push
or
lahf
xchg
cs
xor
push
imul
imul
insb
imul
xchg
lcall
lock
lcall
cmp
test
sub
enter
inc
and
test
and
adc
sub
xor
inc
enter
enter
aas
daa
test
inc
pusha
jle
adc
and
xor
sub
and
adc
adc
test
enter
enter
sub
test
inc
pop
cmp
aas
daa
pusha
xor
adc
adc
cli
das
or
inc
push
sub
xchg
and
pop
es
xchg
or
sub
sbb
nop
pop
cmp
or
pusha
or
inc
xchg
cmpsb
xorb
mov
sbb
and
cs
mov
das
shll
in
adc
and
outsl
orl
adc
inc
enter
outsb
enter
das
and
mov
dec
pop
and
and
adc
mov
and
push
add
insb
arpl
push
popf
add
dec
jbe
in
imul
dec
inc
sbb
lods
loop
push
push
add
das
jo
jns
insb
stos
mov
pop
add
enter
arpl
cs
dec
dec
or
bound
imul
loopne
pop
add
sbb
sbb
lcall
pop
add
or
out
or
hlt
inc
aaa
aaa
jns
sbb
lahf
pop
add
and
lods
insl
lods
push
iret
mov
push
lahf
out
dec
sbb
bound
cs
dec
sbb
and
ja
pop
xchg
mov
dec
dec
ret
xchg
mov
and
pop
imul
mov
ss
jo
test
jecxz
pop
mov
data16
jo
or
mov
js
scas
repnz
mov
lcall
and
mov
and
pop
push
scas
pop
inc
cli
subb
and
dec
ja
mov
mov
cmp
cmp
push
pop
push
dec
roll
shll
aam
lea
scas
cmpsb
imul
xor
inc
inc
push
pop
imul
imul
imul
cmpsb
imul
or
xor
rcll
sbb
sub
inc
dec
push
pop
fs
shll
je
jl
shll
mov
dec
shll
in
shrl
hlt
cld
add
testb
dec
shll
and
xor
shll
cmp
push
shll
push
dec
je
orb
xor
movsb
lods
mov
shll
call
dec
clc
add
add
adc
and
dec
push
imul
imul
imul
mov
in
hlt
mul
idiv
push
lcall
and
xor
cmpsb
imul
or
into
adc
je
or
int
fstps
pop
test
add
add
add
jo
insb
or
push
sbb
es
orl
ret
inc
pop
mov
es
fsubs
inc
loopne
call
in
push
lock
daa
jmp
pop
add
xor
or
xorb
inc
loop
das
mov
or
sarb
lret
call
js
xchg
jno
inc
jo
lods
or
div
xor
inc
jl
cmp
rolb
or
add
mov
mov
add
jo
push
and
adc
jns
in
jne
mov
adc
jb
ljmp
and
clc
pop
adc
xlat
add
add
push
call
jbe
scas
dec
addb
outsl
push
add
call
imul
pop
and
enter
sub
lret
cld
lea
rep
mov
stos
push
push
push
push
daa
add
test
or
loope
xchg
les
ret
inc
stc
xor
jo
push
or
out
aas
and
movsl
mov
add
aas
xchg
add
pusha
bound
xor
dec
pop
addr16
inc
incb
inc
push
cmp
jno
adc
sarb
push
sbb
jp
or
sub
insl
in
inc
add
mov
es
pop
incl
sar
mov
push
sbb
and
cmpsb
adc
cmpsl
bound
jae
int
add
inc
es
adc
inc
test
cmp
je
fs
into
push
add
fwait
cmpsb
fstpl
add
add
mov
xchg
movsb
add
mov
sub
sbbl
subb
push
mov
decb
inc
mov
orl
inc
mov
iret
mov
inc
sbb
in
call
adc
std
xchg
cld
mov
mov
xor
fcomp
loopne
jb
je
jae
jle
daa
add
pop
rclb
ret
dec
in
sbb
inc
push
add
mov
push
inc
pop
inc
and
add
rclb
sbb
sti
das
int3
mov
push
pop
push
mov
shl
mov
adc
xlat
and
mov
in
insb
pop
lahf
add
lock
jo
inc
xchg
cmp
add
sbb
in
add
add
lcall
or
or
inc
push
imul
mov
jbe
imul
adc
adc
and
popa
xorl
mov
jmp
das
push
jbe
mov
insl
nop
cmpsb
imul
jb
inc
xor
andb
inc
xor
mov
aas
addl
sub
nop
popa
fbld
cmp
aas
xlat
pop
sbb
and
smsw
test
dec
push
adc
addr16
add
inc
push
add
mul
inc
inc
pop
pop
push
cmp
out
add
outsl
rclb
add
rorb
xchg
lea
mov
nop
enter
xchg
xchg
xchg
cmp
jo
add
jg
mov
popf
pop
cmpsb
jns
jp
dec
inc
out
dec
wbinvd
ror
imul
dec
shll
test
jl
fnstenv
sbb
dec
lods
imul
imul
jns
jp
subb
push
cld
scas
push
lcall
ds
push
push
dec
insb
push
shll
pusha
pop
pop
dec
shll
xor
dec
shll
adc
add
lcall
hlt
lock
imul
imul
cmpsb
imul
jo
push
inc
add
add
add
rcrb
inc
test
dec
pop
jg
push
fisttpll
mov
xlat
cmpsb
imul
or
xor
addb
scas
addr16
xorb
scas
mov
push
std
jg
adcb
push
cmpsb
push
push
mov
shll
mov
repz
insl
lcall
add
shll
xchg
mov
mov
adc
das
dec
insb
leave
imul
inc
pop
enter
daa
jns
or
or
ret
ja
hlt
adc
aas
jmp
mov
leave
sbb
into
sbb
rorl
and
lcall
lods
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
lcall
inc
in
adcl
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
jmp
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
and
cmp
dec
cmpsl
in
cmp
sahf
xchg
lcall
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
dec
pop
fldl
xchg
and
and
mov
sti
aas
jno
or
mov
pop
fs
dec
lea
incl
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
ljmp
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
jg
decl
dec
les
aas
xchg
pop
cmp
int
mov
addr16
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
out
call
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jl
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
call
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
std
decl
mov
dec
dec
gs
std
orl
pop
ficomps
sub
fmuls
lds
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
adc
adc
add
fwait
pop
push
add
gs
and
cld
xchg
adc
xorb
sub
mov
jns
pop
or
int3
push
imul
shlb
add
add
bound
add
mov
sub
das
cmp
pop
pushf
popa
arpl
push
imul
dec
mov
addb
pop
inc
xor
push
mov
arpl
sbb
add
in
mov
jns
adcl
xchg
xor
or
lret
out
fidivs
js
dec
or
xor
add
inc
pusha
add
sub
add
cmpsl
bound
mov
fwait
loope
and
adc
and
adc
and
add
inc
or
add
rol
iret
sbb
mov
gs
add
xchg
mov
fsub
pop
jae
adc
adcl
cmp
pop
aaa
or
bound
xor
mov
cs
sbb
xchg
shlb
lods
mov
imul
push
sub
ja
xchg
add
pushl
sub
xor
movl
aad
lahf
add
adc
xchg
add
inc
add
loope
imul
jns
outsb
je
pop
inc
popa
je
pop
inc
push
shlb
ss
adc
out
andl
loopne
dec
add
inc
lods
loopne
sub
std
loopne
jbe
pop
daa
push
jo
gs
pop
shll
in
sbb
mov
das
push
or
sbb
jo
adc
fldcw
push
or
or
lock
inc
in
inc
jmp
mov
insl
jns
shlb
lret
xchg
push
push
add
and
sbb
arpl
adc
add
or
inc
add
mov
cmpsb
mov
dec
fidivrl
lods
in
sbb
data16
fs
mov
imul
sbb
push
mov
mov
inc
rclb
outsb
inc
jb
gs
mov
fistpl
les
or
das
roll
outsb
ret
jbe
fcmove
inc
jbe
nop
add
shr
sub
sti
xor
pop
inc
sub
jbe
mov
sbb
fdivp
enter
jae
imul
scas
push
inc
sbb
jo
xorb
lcall
pop
std
insb
fs
xchg
dec
push
ja
or
mov
adcl
sbb
mov
sbb
pop
mov
jne
lds
add
dec
or
and
or
and
push
sbb
ss
fs
dec
mov
mov
cmpsl
imul
push
inc
jae
ret
jp
je
ja
mov
mov
dec
inc
loopne
sbb
and
out
lea
push
fs
dec
arpl
add
rorb
subb
dec
outsb
mov
mov
lcall
dec
adc
rolb
push
roll
cltd
sub
xor
dec
xchg
cmp
dec
ficomps
sub
aad
test
mov
shr
push
inc
push
inc
cltd
test
or
lods
or
dec
xchg
negl
xchg
pop
fimull
adcl
mov
rol
add
rcrb
sbb
dec
mov
or
lea
and
or
test
movsb
cmp
inc
jmp
popf
inc
jge
xchg
in
sbb
add
decl
add
gs
xchg
gs
xchg
gs
xchg
adc
xchg
add
fwait
sub
xchg
dec
add
int
sbb
outsl
cli
xchg
add
add
add
add
jns
dec
xchg
scas
sub
push
shl
add
fnstcw
pop
add
int
ficoms
cmp
adc
shlb
movsl
in
xchg
lahf
cwtl
imul
add
fisubrs
mov
pop
pusha
add
mov
push
mov
pop
or
add
and
jb
popa
cmpsl
aad
xchg
add
dec
add
dec
addb
add
and
out
ret
add
xor
das
sub
or
inc
and
add
shr
addr16
push
dec
leave
mov
ds
aam
mov
push
out
push
out
push
cmp
adc
lods
push
dec
imul
and
ja
mov
cltd
dec
inc
sbb
add
and
cld
lods
aam
mov
push
sbb
hlt
pop
stos
xlat
lods
mov
sahf
inc
lahf
mov
xlat
mov
pop
dec
jno
aam
mov
das
pop
cmp
mov
cmp
cltd
dec
inc
sbb
add
xlat
lods
mov
push
sbb
hlt
pop
stos
xlat
lods
mov
mov
inc
cltd
dec
inc
sbb
jne
stos
mov
cmpsb
mov
rcrb
stos
cmp
mov
push
cmpl
dec
test
out
push
inc
mov
faddp
hlt
je
inc
sahf
mov
aaa
jbe
mov
cwtl
incb
arpl
jnp
dec
mov
xor
mov
test
push
dec
sub
xchg
push
addr16
mov
shl
push
dec
scas
push
mov
mov
iret
ja
push
iret
mov
adc
mov
inc
inc
mov
iret
ja
movsb
xchg
hlt
je
cmp
mov
ja
ffree
xor
scas
mov
xor
adc
sti
movsl
push
xchg
mov
push
dec
je
xchg
ret
test
xor
push
pop
or
cmp
add
add
add
add
add
in
dec
add
in
dec
add
add
add
ret
pusha
mov
mov
xor
mov
mov
xor
add
loop
popa
ret
